mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
mov
ins
jae
add
jb
lea
sub
add
push
outs
(bad)
test
pop
dec
outs
je
addr16
and
rcr
xor
add
jns
ins
daa
push
outs
jb
add
pop
jns
inc
outs
(bad)
mov
repz
add
cwde
or
jae
jb
movs
push
sub
stc
dec
or
fs
pop
mov
or
push
ins
mov
popa
hlt
or
push
add
add
iret
imul
cwde
dec
movs
push
test
mov
call
inc
pop
push
dec
bound
arpl
push
lock
sbb
push
push
jns
movs
ins
ss
pop
cmp
or
jb
popa
arpl
cmp
cdq
int
rcr
movs
push
mov
jae
popa
je
push
add
nop
int3
add
jmp
adc
in
mov
int3
xchg
sbb
dec
fidiv
jbe
adc
push
jge
js
sbb
inc
mov
jo
xchg
cmp
test
adc
inc
cmp
jle
fdivrp
and
(bad)
js
cmp
cmp
dec
push
fs
pop
pop
cmp
jns
push
aam
push
dec
cmp
cmp
dec
inc
rol
jb
cmp
cmp
jbe
jb
sub
and
iret
in
in
sbb
adc
leave
leave
leave
in
adc
or
mov
mov
add
in
in
fsubr
in
clc
hlt
lock
int
das
(bad)
push
add
mov
inc
add
imul
mov
add
xor
ret
addr16
fmul
loopne
add
aaa
in
mov
dec
and
jb
stos
and
out
call
je
outs
outs
and
xor
or
ficomp
jb
and
imul
out
gs
push
jle
push
push
je
popa
inc
inc
gs
ins
jmp
ins
gs
add
cmpxchg
ret
push
mov
mov
mov
mov
push
dec
add
inc
or
and
sub
xor
shr
push
adc
adc
dec
sti
dec
rcl
fild
fild
add
sbb
dec
jnp
xor
cs
jp
add
sub
aas
call
sub
dec
shl
sub
in
adc
dec
xor
push
pop
xor
xor
cmp
int3
xor
mov
inc
imul
call
into
sub
add
add
neg
jns
fistp
fbstp
push
cmp
add
js
and
mov
mov
int3
mov
xor
push
adc
mov
nop
call
cmp
mov
(bad)
ja
jge
je
push
sub
retf
add
mov
mov
aas
adc
shl
xchg
sub
jne
pop
mov
and
jecxz
xchg
sub
jmp
mov
retf
adc
push
add
retf
cmps
pop
push
adc
add
out
gs
inc
pop
shl
or
sbb
loopne
into
out
xchg
or
outs
mov
fucomi
sub
cld
add
or
adc
dec
add
or
cmp
dec
pop
mov
jmp
sub
call
pxor
mov
inc
push
mov
je
int
push
lock
(bad)
fadd
int
fimul
enter
mov
sbb
loop
mov
fucomip
add
mov
mov
not
mov
mov
sub
sbb
xor
mov
aaa
or
nop
cmp
jmp
mov
(bad)
pusha
mov
frstor
out
in
mov
add
int
or
test
push
xor
jle
inc
jle
push
push
mov
lea
mov
push
mov
adc
and
xchg
push
cld
mov
je
sti
mov
or
ja
stos
cld
jle
pushf
pop
ins
mov
or
jb
add
mov
pop
pop
pop
clc
mov
mov
sub
jae
(bad)
neg
pop
out
jle
adc
mov
push
and
or
test
jne
in
cmps
inc
mov
outs
loop
jns
add
(bad)
jmp
or
shr
or
mov
mov
and
push
push
lea
or
push
mov
jo
push
jne
push
push
mov
cmp
cli
(bad)
out
jbe
sub
add
jmp
test
jne
lods
(bad)
fimul
and
fisubr
idiv
retf
les
inc
loopne
repnz
sub
pusha
fcmovnbe
or
fadd
fidivr
loope
pop
scas
fdivr
shl
add
cmp
jbe
jmp
pusha
lock
adc
xchg
xor
push
mov
cmp
outs
pop
cmp
adc
test
push
cmp
jae
(bad)
fnstsw
int3
mov
add
dec
and
jae
push
jmp
test
repz
lods
iret
or
aaa
sbb
sub
pop
xor
test
add
push
retf
mov
dec
pusha
or
lds
or
outs
imul
cmp
jbe
ret
push
mov
mov
or
xchg
mov
mov
ins
mov
repz
add
das
dec
(bad)
neg
es
and
mov
cmp
and
shl
add
dec
ja
pop
test
je
rcl
lds
rcr
(bad)
ss
mov
inc
or
scas
scas
or
and
idiv
je
or
sub
and
add
movzx
add
cmp
ja
inc
or
jbe
mov
cmp
add
adc
add
mov
std
pusha
and
and
xchg
xchg
popa
mov
pause
jns
js
loopne
aas
je
lods
aad
ret
in
jecxz
inc
and
xor
je
xchg
inc
or
outs
rol
mov
bsf
lea
push
scas
or
mov
leave
rcl
add
cld
mov
cmp
add
push
jns
cld
push
test
add
cmp
jne
mov
test
add
mov
mov
outs
fdivrp
pusha
or
ins
mov
dec
jnp
sub
lea
xchg
and
push
or
ja
sbb
mov
jg
ror
mov
sub
sub
jl
jnp
cmp
and
inc
sbb
mov
mov
mov
fs
cld
test
lds
mov
mov
inc
and
icebp
pop
mov
adc
push
or
imul
iret
mov
addr16
push
xor
cmp
mov
(bad)
(bad)
enter
add
mov
lea
loopne
inc
paddb
lea
or
shr
mov
push
je
pusha
fbstp
ror
jmp
mov
aas
fstp
ror
mov
and
fnstenv
jo
or
adc
fdiv
push
loopne
clc
sub
mov
jmp
mov
dec
mov
test
pop
or
inc
les
rol
cmp
cmp
mov
push
ror
pop
xor
jb
into
sbb
push
xchg
or
test
fisttp
jns
or
ret
mov
test
rol
cld
iret
xchg
sbb
mov
jne
sub
loop
jge
je
pop
ror
xchg
sub
xchg
dec
pop
xor
push
xor
adc
aad
mov
adc
cmp
jne
and
enter
push
mov
iret
mov
loop
cwde
cmps
(bad)
(bad)
xchg
scas
jmp
mov
pop
leave
outs
xor
xchg
pop
sbb
jmp
aaa
inc
or
add
and
add
or
loop
fmul
scas
test
sub
xor
test
jne
xchg
loope
cmp
inc
fiadd
xor
ret
xchg
xchg
mov
xlat
mov
mov
je
add
cmp
das
ret
pop
dec
clc
sub
sub
mov
xor
sub
popa
mov
in
mov
lahf
mov
stos
fld
add
fmul
outs
lea
cld
add
ins
push
add
loop
shr
dec
rol
shr
in
or
pop
ja
cmp
jb
sbb
jp
retf
jb
mov
ret
cmp
sbb
mov
jg
or
rcr
dec
or
xlat
loop
pop
pop
(bad)
(bad)
rol
add
hlt
sub
jbe
clc
iret
mov
call
js
mov
shl
cmp
mov
mov
add
jecxz
cmp
push
pop
loope
stos
xchg
cvttps2pi
cmp
jb
sbb
jmp
jl
pop
mov
and
stos
jmp
add
xor
cmp
les
push
jge
(bad)
mov
push
cmp
mov
(bad)
and
or
mov
push
mov
add
or
push
jmp
data16
mov
rol
xlat
idiv
lds
add
add
sahf
sub
sbb
push
inc
mov
out
add
sbb
lock
call
imul
add
scas
loope
cmp
cmp
dec
fistp
iret
fs
pusha
pusha
call
psubq
iret
ja
cmp
or
pop
mov
call
mov
loopne
jmp
rol
add
pop
add
xor
and
push
add
push
ret
push
add
jb
lea
pop
mov
mov
push
pop
add
and
fisttp
outs
jae
pop
ret
pop
inc
push
push
xor
jecxz
loop
cmp
je
xor
cmp
and
pop
push
push
cmc
popf
fsubp
cld
(bad)
(bad)
lea
or
jle
std
jg
adc
fcmovnu
out
fst
add
js
or
sar
mov
imul
xor
mov
fadd
ror
hlt
aas
sbb
rol
(bad)
pop
std
je
mov
adc
cli
and
rcl
adc
ins
cmp
mov
(bad)
(bad)
(bad)
mov
cmp
jne
mov
cmp
jbe
mov
mov
sub
sbb
jecxz
scas
inc
add
fmul
sbb
dec
mov
cmps
push
mov
mov
inc
pop
jo
mul
fs
mov
loop
pop
rcr
mov
add
enter
mov
fadd
stc
rcr
inc
aas
wbinvd
shr
xchg
popa
push
cmp
dec
aaa
sbb
in
mov
inc
cs
enter
retf
cmp
jg
xchg
push
es
aas
adc
ret
xor
inc
add
icebp
mov
pop
(bad)
xor
inc
ds
mov
add
addr16
add
loop
in
push
inc
cli
push
push
ins
js
arpl
fdivr
shl
pop
(bad)
fistp
or
push
lock
push
jae
ss
mov
push
jge
sbb
add
push
mov
inc
sbb
add
push
out
mov
js
cs
push
test
je
adc
add
mov
pop
pop
sub
sahf
push
nop
test
cli
loop
call
data16
call
push
data16
mov
fdivr
fcom
(bad)
sti
sbb
sbb
test
daa
dec
mov
sti
out
adc
lea
mov
and
sbb
sti
push
dec
lock
rcr
pop
test
and
shl
lods
dec
fistp
pop
mov
dec
scas
imul
xchg
outs
push
mov
mov
add
add
pop
mov
setne
xchg
ret
mov
sub
aas
inc
sbb
adc
pop
test
adc
add
jp
loop
or
pusha
out
jbe
lock
push
cmp
dec
pusha
jl
inc
pop
mov
cmp
call
adc
mov
and
aaa
sbb
or
jne
mov
js
addr16
(bad)
cld
mov
arpl
fadd
add
jg
lea
lea
(bad)
call
icebp
in
adc
add
jmp
mov
mov
cmp
ror
mov
dec
sti
mov
adc
call
add
mov
pop
mov
or
cmp
mov
xor
int3
or
dec
or
mov
mov
inc
out
adc
test
jle
sbb
cmp
mov
sub
cmp
jb
jo
jp
add
dec
loopne
(bad)
adc
xchg
aaa
push
sub
cli
cmp
je
or
inc
cmp
jg
mov
mov
das
push
(bad)
inc
fiadd
add
sbb
sbb
in
xchg
aam
scas
lock
mov
push
add
fstp
jne
data16
test
jl
lea
and
nop
lock
pop
inc
add
xchg
(bad)
jb
clc
push
(bad)
aam
test
call
push
lock
jb
call
cmps
cmp
les
add
or
in
(bad)
loope
rcr
mov
and
fnstcw
mov
and
(bad)
nop
mov
(bad)
int3
loope
xchg
cmp
xchg
and
and
mov
jg
test
jle
ds
cmp
ss
aaa
adc
cmp
es
in
xchg
mov
mov
xchg
sti
mov
je
dec
jl
cmp
sub
xchg
neg
xchg
ins
clc
std
(bad)
mov
sub
xor
rcl
out
ffree
test
cmp
and
fmul
icebp
pushf
fld
(bad)
sub
movs
loope
add
in
scas
mov
mov
(bad)
mov
gs
xchg
pushf
cmp
xchg
add
sti
jne
mov
icebp
mov
add
mov
inc
push
or
jge
stc
cmp
ins
and
ror
add
rcl
in
or
jmp
fs
das
cmp
adc
xchg
je
jmp
mov
jmp
mov
push
fwait
xchg
xchg
movzx
add
js
loop
inc
push
pop
dec
pusha
or
mov
inc
push
dec
and
mov
mov
pop
sbb
push
sbb
jo
cmp
cmp
imul
jb
inc
js
outs
js
out
jno
mov
mov
pextrw
and
ja
jmp
dec
not
pushf
dec
jne
mov
adc
mov
sub
push
lock
stos
mov
add
push
ss
outs
and
gs
push
sar
gs
ins
outs
jb
pop
popa
mov
and
jae
outs
arpl
jl
cs
pop
mov
fs
popa
ins
ins
and
jnp
pusha
scas
dec
imul
cmp
jg
add
imul
outs
add
sti
in
sbb
xchg
jp
mov
cdq
jbe
pmaxub
ins
nop
outs
and
addr16
popa
mov
dec
cli
push
push
xor
xor
cli
iret
pushfw
mov
test
jne
arpl
imul
repnz
out
add
cmp
jbe
mov
mov
adc
cmc
mov
add
cmp
jne
es
jbe
add
xchg
mov
jmp
add
mov
or
jbe
mov
mov
rol
and
clc
lea
add
add
mov
shr
cmp
jbe
aad
(bad)
aas
ja
mov
shl
mov
shl
add
mov
sub
shl
lea
add
mov
xor
jae
mov
ja
push
mov
cmp
sti
(bad)
xlat
mov
xor
div
imul
mov
sub
les
or
(bad)
in
dec
inc
xor
hlt
sbb
mov
mov
in
or
mov
or
repz
cmp
pop
adc
jg
push
push
mov
add
adc
push
rcl
std
cmp
jne
mov
mov
dec
adc
add
inc
or
jo
inc
loop
or
and
stos
sbb
and
ror
mov
xchg
inc
mov
fistp
fisubr
fdivrp
mov
mov
or
adc
(bad)
hlt
xchg
dec
sti
xchg
pop
push
mov
sub
sbb
mov
sbb
mov
push
add
add
call
and
ja
add
ret
mov
add
ret
cs
cmp
rcl
inc
xchg
xor
mov
test
je
test
je
ins
and
in
push
mov
inc
xor
or
mov
jae
jmp
bound
out
int
rcr
arpl
ss
data16
sbb
pop
lds
adc
adc
fmulp
enter
or
dec
jl
dec
push
enter
mov
jo
cmp
fadd
scas
ins
sahf
or
mov
dec
dec
sbb
(bad)
jne
lahf
cwde
push
jmp
cmp
lahf
frstor
ja
movzx
add
inc
mov
pop
inc
pop
hlt
push
add
scas
call
outs
xor
in
push
push
push
xor
pop
and
pop
jne
mov
out
push
mov
mov
mov
jl
push
ret
sbb
js
js
mov
ret
(bad)
pop
or
je
jb
sbb
ret
sub
inc
hlt
outs
mov
jg
adc
sar
(bad)
mov
inc
rep
jmp
mov
jmp
iret
cmp
in
mov
jmp
mov
test
sahf
mov
popa
or
mov
(bad)
fistp
cmp
je
cmp
ja
sub
jg
jmp
push
outs
iret
outs
sub
or
pusha
push
push
add
adc
push
test
sahf
out
sahf
mov
jmp
hlt
push
mov
or
adc
movs
sti
push
neg
and
adc
jnp
fwait
sbb
cmp
jle
or
shr
retf
pop
sbb
lea
jbe
adc
add
clc
sub
pop
in
xchg
pusha
inc
cmc
pop
push
or
cs
or
or
push
mov
adc
mov
add
add
mov
test
cmp
push
add
ret
mov
out
out
push
cmc
jmp
push
aaa
mov
mov
or
jbe
and
mov
jnp
or
xor
mov
jmp
sub
fistp
adc
sub
pop
xlat
ss
call
adc
push
xlat
or
out
mov
aad
jb
sti
in
dec
push
xor
jmp
jne
imul
pop
in
or
jbe
out
add
inc
sbb
repz
frstor
arpl
fcomp
loope
lock
pop
inc
add
loope
cld
push
xor
push
push
mov
add
into
jl
jnp
lea
sahf
and
adc
in
div
cmp
add
jmp
pop
pop
pop
pop
adc
jo
add
mov
ret
stos
cmp
das
fcomp
fdivr
clc
in
(bad)
xlat
movs
fisubr
inc
test
jne
push
mov
lock
ins
xchg
mov
aas
inc
sbb
push
std
dec
and
clc
outs
or
sbb
mov
jmp
sbb
xchg
pusha
mov
into
mov
or
mov
jle
pop
fild
mov
(bad)
xor
imul
ja
cld
adc
cmp
jb
cmp
ja
sub
cmp
loop
sub
test
cmp
pop
(bad)
fld
(bad)
in
add
frndint
out
stos
and
fwait
or
ins
frndint
fldcw
ins
dec
loope
push
add
jmp
dec
or
in
dec
pop
fistp
or
push
add
movs
jmp
imul
sub
(bad)
xchg
xchg
inc
ins
sub
cmp
push
ret
scas
aad
or
data16
and
sub
hlt
sub
jae
push
dec
add
clc
sub
cmp
mov
iret
sbb
mov
mov
std
add
mov
sbb
(bad)
push
mov
and
mov
ficomp
div
or
lea
push
mov
push
adc
pop
pop
ins
add
jo
push
loopne
ret
cmp
jne
mov
in
push
or
push
sub
pop
pop
out
es
push
add
pop
sub
call
or
mov
lea
sete
xor
in
mov
fidiv
inc
jle
and
or
push
adc
aas
dec
push
sub
dec
je
add
loop
(bad)
xchg
daa
dec
xor
jle
(bad)
aam
cmp
daa
das
inc
inc
cmp
mov
mov
ins
out
or
movs
and
ror
mov
push
or
je
adc
inc
dec
push
sbb
cmp
mov
jle
mov
sti
fisubr
dec
dec
push
inc
pop
inc
inc
out
sub
scas
loopne
add
xchg
push
aaa
mov
mov
jnp
test
inc
jo
dec
out
pop
add
jae
cmp
push
inc
inc
jmp
push
xchg
sub
jp
sar
out
dec
jne
jmp
lea
popa
shl
lods
push
push
push
rcl
ror
inc
add
cmp
fist
cmc
movs
pusha
dec
mov
shl
dec
pop
mov
shl
push
pop
clc
push
int3
stos
mov
xor
imul
jmp
and
or
dec
add
ret
adc
add
push
push
fadd
push
push
jae
push
mov
addr16
mov
pop
push
das
mov
mov
dec
add
pusha
cmovns
jmp
sbb
sbb
fucomi
pop
cmp
(bad)
rol
xlat
and
and
push
sbb
daa
aam
and
in
mov
jne
push
sahf
icebp
push
mov
jl
push
lock
add
sar
ret
js
cld
imul
push
push
mov
call
lock
inc
mov
jmp
mov
cld
fist
sub
cli
or
push
push
mov
jmp
cmp
je
arpl
pop
call
clc
cmps
fstp
push
sub
sbb
cmp
bound
push
sub
add
movs
push
sbb
inc
out
neg
xor
mov
ja
and
ret
adc
call
rol
mov
adc
sbb
add
jl
adc
inc
mov
pop
xor
scas
(bad)
push
hlt
(bad)
(bad)
dec
ror
jb
cmp
ja
mov
mov
mov
inc
add
rep
mov
mov
sub
jbe
mov
jmp
fimul
inc
xchg
out
idiv
cmp
jbe
mov
mov
inc
inc
sub
leave
xor
xchg
(bad)
lods
push
xchg
inc
inc
push
ja
add
push
stos
call
div
push
mov
cmp
jne
dec
je
mov
aad
out
mov
sbb
add
add
loop
push
adc
repz
jmp
pop
and
je
mov
cmp
jne
dec
je
mov
cmp
jne
add
dec
or
rcr
add
adc
cmp
jne
shr
shr
sbb
ds
cmps
pop
push
mov
shr
or
push
movs
jns
pop
cmp
fistp
adc
rol
pop
and
mov
cmp
rep
call
and
add
sbb
jecxz
push
das
and
js
sbb
adc
push
adc
mov
test
push
add
mov
cmp
jne
mov
ret
sub
enter
sbb
dec
sahf
outs
cmp
mov
jl
cdq
adc
push
add
(bad)
cmp
fst
fst
mov
and
fdivr
sub
shl
fisubr
data16
add
push
mov
addr16
fistp
data16
cmp
adc
mov
es
xchg
cmp
repz
push
adc
out
cmp
repz
or
sti
enter
push
or
ret
daa
push
jmp
in
js
daa
xor
dec
shl
jnp
dec
xchg
aam
mov
jg
push
pop
je
in
test
pop
je
xor
sbb
push
loope
mov
je
inc
mov
aam
fldenv
ret
and
sbb
mov
pop
xor
sbb
inc
inc
int
inc
mov
pop
mov
mov
(bad)
(bad)
loopne
push
push
pop
mov
adc
mov
out
loopne
adc
rol
push
adc
jl
mov
inc
cmp
push
cmp
je
cmp
aaa
mov
dec
jg
jmp
into
inc
bnd
cmp
jne
dec
cs
or
sbb
mov
outs
sahf
shr
mov
sub
dec
xor
mov
push
inc
ds
pop
adc
in
jbe
es
mov
leave
sub
add
mov
mov
stc
mov
inc
nop
cmp
jne
add
mov
into
mov
cmp
fiadd
xchg
adc
cwde
pop
popa
je
add
xchg
(bad)
aam
lahf
fiadd
jne
daa
or
push
jo
dec
xlat
daa
jns
mov
scas
call
jmp
mov
and
mov
mov
jnp
adc
ja
out
mov
sahf
scas
jno
loope
mov
push
and
cmp
fisttp
pop
add
mov
hlt
aad
jo
mov
pop
mov
and
pop
sub
inc
xchg
mov
inc
or
pop
pushf
sbb
sti
xchg
add
xor
fld
fwait
loopne
inc
jmp
mov
add
fnstcw
push
cwde
or
clc
add
mov
jl
sub
fs
and
add
shl
inc
sbb
ret
jl
inc
or
loop
xor
icebp
jp
add
jmp
scas
jo
ins
cld
fstp
(bad)
or
push
inc
cmp
je
mov
sti
sub
je
and
aaa
aaa
push
js
pop
pop
je
xor
dec
and
mul
je
jmp
or
(bad)
aaa
and
ja
cmp
ja
lea
out
add
push
fcomip
in
lahf
out
dec
je
sar
jmp
inc
sub
fdivr
js
push
jle
dec
pop
sub
jmp
inc
inc
jmp
mov
(bad)
je
and
xchg
and
xor
(bad)
jle
ja
add
scas
leave
shl
stos
aad
or
pop
xor
mov
pop
jo
or
call
jb
mov
dec
pop
push
push
movs
aas
mov
clc
pop
das
xchg
clc
or
xor
js
in
stos
outs
mov
or
out
retf
add
push
idiv
stos
mov
add
pop
jmp
xchg
adc
mov
xor
inc
mov
inc
jle
sub
fs
stos
je
fcom
jg
push
ret
and
int3
mov
jg
loopne
xor
cs
(bad)
pop
sbb
hlt
inc
and
or
add
cdq
fucomp
adc
sub
pop
sub
cmp
(bad)
pop
ja
xor
mov
push
cmp
sbb
jno
mov
sbb
repz
sub
mov
pop
retf
push
fsub
mov
mov
shr
add
lea
dec
rcr
(bad)
lods
push
fild
(bad)
dec
pusha
fmulp
shl
pcmpeqb
xchg
in
icebp
enter
je
sahf
and
jmp
sar
push
jmp
push
cdq
xchg
xor
sbb
jmp
adc
fstp
fld
fldz
bound
(bad)
shl
aas
in
dec
mov
cli
or
pushf
or
ret
mov
adc
inc
repnz
sbb
imul
xchg
jg
stc
add
mov
enter
(bad)
es
test
out
sub
pop
iret
scas
cld
retf
add
leave
sbb
mov
iret
(bad)
cld
jbe
imul
cmp
mov
(bad)
mov
bound
aaa
jmp
fild
xlat
fadd
outs
xor
xchg
push
or
(bad)
mov
test
into
sbb
ror
mov
push
pop
test
enter
(bad)
call
push
inc
cmp
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
or
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
(bad)
push
test
lds
iret
dec
js
inc
mov
stos
mov
cmp
(bad)
(bad)
(bad)
jmp
xchg
test
stos
pop
out
sub
imul
(bad)
div
jl
xor
cmp
(bad)
jmp
(bad)
call
mov
sti
jmp
stos
push
inc
mov
push
sbb
sar
(bad)
jmp
int3
repnz
test
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
(bad)
(bad)
(bad)
jmp
fs
aam
imul
loope
jp
iret
inc
bound
ds
push
cmps
scas
(bad)
(bad)
(bad)
jmp
pop
or
add
cmp
xor
in
cmp
call
pop
cmps
lock
mov
popa
mov
and
addr16
repz
mov
mov
outs
fwait
xchg
and
and
outs
bound
xor
jmp
gs
fild
or
xor
shl
push
pop
adc
rcr
repz
shr
ins
mov
fst
mov
jl
inc
clc
out
jne
rol
xchg
loopne
push
mov
dec
out
inc
xor
repz
mov
data16
add
aad
repz
mov
sbb
shr
fucomip
jecxz
jp
int
and
pop
aas
or
cld
aas
add
inc
push
push
inc
push
inc
pop
(bad)
dec
mov
inc
gs
jo
imul
push
dec
popa
jae
xchg
ins
jne
fninit
fwait
std
or
push
(bad)
mov
dec
mov
or
retf
das
xlat
sbb
add
mov
xor
mov
inc
and
or
or
test
sbb
or
cld
ret
inc
and
add
lea
sbb
bnd
test
cmp
mov
loope
arpl
test
sete
xor
inc
ret
loopne
js
ja
inc
fadd
adc
sti
xchg
je
std
ss
aaa
mov
add
pop
aaa
mov
cmp
sti
loop
sbb
test
inc
inc
ja
adc
movups
fs
pop
pop
cs
cmp
xor
test
data16
pop
mov
or
push
cld
(bad)
jg
popa
das
jo
mov
xor
push
shr
dec
rep
pop
cmp
rep
mov
mov
sub
pop
fdiv
fwait
add
in
cmp
je
sti
sbb
sbb
sahf
push
mov
mov
push
(bad)
in
(bad)
ja
dec
jne
jne
iret
lods
(bad)
mov
mov
push
pusha
or
jbe
pop
push
test
fdiv
adc
sbb
inc
xchg
cmp
test
call
shufps
and
loope
loope
adc
shl
or
and
pop
pop
push
jmp
out
pop
clc
mov
mov
clc
or
inc
test
xchg
movs
xor
add
mov
shl
call
call
lea
lock
push
inc
(bad)
scas
jb
cs
jns
inc
clc
xor
or
add
mov
in
pop
mov
cmp
jne
jb
cmp
jne
push
or
jne
or
push
inc
inc
and
xchg
lds
jnp
not
and
mov
idiv
js
inc
jl
das
inc
mov
iret
adc
outs
popf
ror
mov
leave
jne
mov
in
mov
xchg
jmp
retf
test
test
add
call
clc
scas
je
pop
in
neg
pop
add
sub
mov
pop
sbb
push
xchg
add
sbb
jmp
pop
mov
push
mov
xor
mov
mov
jmp
out
les
dec
or
pop
push
data16
mov
pop
cmp
inc
push
stos
add
mov
pop
mov
test
scas
jb
ds
mov
rcr
dec
sti
xchg
adc
mov
cmp
sbb
add
dec
(bad)
(bad)
out
fnstenv
icebp
fucomi
sbb
add
sbb
and
jne
dec
jmp
inc
add
lahf
push
popf
enter
in
push
sbb
pop
sti
in
and
pop
jmp
push
xor
call
ja
push
pop
add
mov
jl
push
lods
(bad)
out
cli
hlt
xor
lea
mov
mov
mov
mov
call
cmp
or
cmp
dec
jmp
jbe
mov
inc
or
adc
call
adc
push
clc
ret
pop
mov
ror
and
inc
in
jae
jmp
mov
push
sub
mov
idiv
push
ja
pop
jo
mov
add
xchg
dec
sub
dec
(bad)
in
push
call
mov
aaa
push
push
pusha
push
xor
test
pop
dec
mov
repnz
add
add
mov
sub
or
xlat
std
jg
test
push
and
sbb
jmp
(bad)
mov
movsx
inc
inc
jmp
add
mov
arpl
jecxz
fld
adc
pusha
fsub
nop
loop
fdivr
adc
(bad)
dec
fwait
(bad)
jecxz
pop
(bad)
sub
out
les
jne
fiadd
mov
pop
je
inc
rcl
je
add
shl
out
push
mov
dec
add
je
dec
sti
xchg
jbe
test
lea
add
add
fwait
and
mov
xor
arpl
jne
jbe
adc
mov
cli
push
jns
sbb
fdiv
dec
add
jbe
or
cmp
sbb
push
sub
push
sbb
sub
ja
outs
pusha
mov
mov
xor
add
pop
xchg
jmp
and
mov
mov
mov
cmp
leave
xor
outs
je
dec
or
fisubr
push
add
cmp
mov
leave
jle
std
push
cli
pop
add
lds
das
and
clc
repnz
fdivr
dec
mov
cmp
mov
outs
sti
dec
aas
xchg
or
sub
mov
push
rcl
dec
jne
hlt
rcl
mov
jmp
in
js
sbb
push
adc
lahf
adc
adc
ins
or
das
push
seto
add
inc
mov
or
push
inc
cmp
add
jbe
cmp
fs
nop
popa
rcl
sub
aaa
add
dec
add
aad
je
push
sar
cmp
stos
lods
adc
(bad)
jecxz
and
mov
dec
in
push
cmp
or
dec
test
in
loopne
out
(bad)
adc
out
mov
or
ror
cld
jo
fdiv
pop
push
push
push
push
push
mov
mov
leave
mov
pop
push
xor
mov
dec
sahf
aas
ror
sbb
or
pusha
add
sbb
mov
into
cmp
std
xchg
inc
adc
adc
cmps
cmc
lea
and
mov
cld
pop
(bad)
lock
ret
xor
rol
push
pop
add
rcl
inc
xchg
outs
ja
push
jmp
jg
je
cmp
(bad)
adc
push
sub
sti
mov
pusha
add
add
je
jmp
cmp
push
mov
xchg
cs
adc
jmp
sub
call
dec
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
xlat
jmp
mov
jmp
mov
jmp
mov
jmp
mov
cli
retf
ja
(bad)
dec
mov
push
or
jne
lods
scas
push
xchg
mov
fisttp
xlat
sub
mov
je
push
mov
dec
or
pop
clc
cmp
loopne
lahf
icebp
push
outs
inc
sbb
fld
ins
(bad)
cli
sub
ret
add
popf
inc
(bad)
cmp
or
fdiv
cmp
(bad)
pop
cs
or
fidiv
inc
mov
add
mov
enter
ror
pushf
ret
or
mov
out
sbb
enter
repnz
push
add
and
lock
fbld
sbb
jle
js
sbb
push
test
jle
dec
mov
ror
pop
js
fild
cmp
sub
adc
xchg
jmp
mov
mov
or
dec
inc
sub
cld
nop
mov
outs
retf
sti
jle
in
in
sub
fadd
iret
cmp
jg
lea
or
ins
out
jns
dec
jle
sbb
xor
mov
fild
mov
(bad)
mov
jbe
jo
dec
xchg
mov
lahf
cli
(bad)
sbb
mov
mov
add
gs
pop
fild
jmp
pop
push
dec
mov
inc
or
in
hlt
inc
fistp
mov
mov
mov
out
adc
xchg
jb
idiv
add
mov
jle
and
and
(bad)
dec
mov
cld
jbe
xchg
add
loopne
inc
sub
pop
mov
mov
push
scas
sbb
fisttp
neg
sbb
inc
mov
mov
adc
ja
add
mov
mov
push
xchg
push
leave
out
xchg
sub
mov
data16
(bad)
mov
adc
scas
push
hlt
or
cli
or
shl
jns
push
push
pop
inc
xchg
inc
ror
pop
ret
inc
xor
scas
mov
push
movs
jb
imul
leave
cmp
add
pop
sbb
gs
jle
fidivr
push
es
mov
pop
out
sbb
icebp
cmp
lahf
add
cs
fs
lock
pop
call
add
add
jno
xor
xor
jnp
sahf
sbb
cmp
scas
js
cwde
mov
jne
cmp
je
loopne
add
sbb
loopne
inc
in
add
pushf
out
adc
inc
enter
lock
inc
adc
scas
jecxz
add
sti
mov
mov
(bad)
fcmovnb
out
mov
pop
out
jmp
leave
inc
shr
stos
push
cmps
and
push
push
push
sbb
xchg
retf
pop
es
or
pop
xlat
fst
or
push
push
jl
cmp
mov
or
cmp
push
hlt
lea
sbb
leave
jle
rol
push
push
or
push
mov
sub
ds
add
add
mov
sbb
add
mov
je
rol
mov
dec
clc
dec
jl
lock
lds
adc
pop
in
jb
out
mov
push
sbb
add
or
add
sub
dec
jne
push
dec
lods
aam
fbld
inc
jg
fadd
lock
pop
push
dec
and
add
pop
pusha
pop
xor
ins
xchg
adc
xchg
or
out
pop
ss
jle
push
add
stos
(bad)
push
inc
pop
mov
rcl
ror
cmp
inc
clc
mov
push
xchg
mov
das
cmp
hlt
rcr
push
or
call
mov
xor
jb
push
jnp
(bad)
in
push
push
cmp
add
les
inc
lahf
add
push
(bad)
jmp
lea
cmp
and
jge
push
mov
loop
dec
iret
inc
dec
(bad)
jl
(bad)
sti
iret
ret
(bad)
mov
movs
sub
fld
fistp
cmps
faddp
ror
push
call
pop
jge
xor
add
addr16
inc
add
push
nop
inc
mov
je
aam
dec
add
or
je
add
in
add
xor
mov
pop
sub
jmp
add
sub
and
pop
lods
fnstsw
je
push
addr16
in
add
jae
ja
mov
inc
xchg
pop
or
xchg
push
push
stos
repnz
ins
(bad)
add
pop
add
pop
pop
xor
pop
(bad)
sbb
jg
add
cld
cmps
push
pop
mov
inc
js
xchg
sbb
cmp
jl
(bad)
and
rcl
pushf
movs
test
pop
inc
(bad)
lods
mov
into
je
jns
or
adc
cli
jo
cmp
mov
or
dec
sub
es
jae
jo
sahf
sub
lock
out
shl
adc
adc
or
inc
cmp
push
xchg
inc
xor
mov
cld
add
jo
cmp
cmps
cmp
(bad)
or
cli
aad
add
push
sbb
push
rcr
dec
clc
pop
jmp
fist
mov
push
push
push
out
xchg
adc
or
ins
mov
mov
dec
jmp
sub
add
jo
cmp
xchg
push
dec
jne
mov
neg
dec
lock
in
ja
popf
fisubr
add
dec
jmp
xor
inc
pushf
rcl
push
call
add
xchg
pop
popa
dec
jne
sahf
fmul
xor
loopne
dec
pop
xor
lea
(bad)
fcomp
and
out
xor
and
jne
fcomp
sub
jb
outs
jg
adc
and
sub
mov
xor
lods
pop
sbb
enter
fild
jmp
add
jns
mov
cmp
pop
and
or
mov
cmp
outs
push
push
mov
xchg
repnz
clc
inc
test
scas
cmp
jl
add
adc
sub
xchg
sbb
adc
pop
adc
dec
inc
retf
shl
mov
jg
dec
in
inc
nop
mov
dec
sbb
fidivr
sub
dec
sbb
jg
(bad)
dec
cmc
mov
adc
shr
in
sub
jmp
movs
pop
push
jae
mov
xor
adc
jl
int3
jge
mov
ss
loopne
dec
sar
add
lea
inc
dec
sub
cmp
repz
push
or
xchg
jbe
mov
lods
cmp
adc
imul
add
xor
pop
cmp
fimul
adc
lock
mov
add
mov
push
mov
cmps
xor
cmp
clc
rcr
enter
cld
fdivr
fidivr
cmp
dec
or
dec
add
add
mov
fsubr
fild
fisttp
scas
push
jne
mov
or
inc
dec
fdivr
xlat
mov
or
or
add
xor
and
add
jne
in
ret
(bad)
shr
mov
sbb
les
and
inc
dec
in
mov
push
xor
and
xor
test
pop
or
daa
and
xor
mov
xor
xor
jne
pusha
or
jmp
add
stos
push
icebp
arpl
mov
dec
fidiv
add
clc
scas
sbb
push
mov
stos
loopne
xor
cs
(bad)
push
fild
fcmovnu
jmp
test
arpl
out
jne
add
push
cmp
xor
clc
jb
js
leave
mov
cmps
sahf
retf
xor
test
dec
(bad)
xor
mov
add
fdivr
lea
or
adc
lock
add
ror
push
jo
jg
push
scas
pusha
lods
in
push
sub
or
xor
es
add
call
jp
mov
imul
jge
sub
sbb
aas
sub
dec
and
pop
pop
ret
mov
jmp
mov
xchg
or
sti
ins
loopne
adc
cmp
or
or
dec
push
aaa
enter
fwait
(bad)
pop
push
mov
ret
daa
add
xchg
push
dec
mov
ja
jp
mov
inc
xor
pusha
or
push
ret
inc
cld
shr
pop
mov
jb
push
call
and
in
test
fwait
add
cmps
pop
add
inc
and
(bad)
jmp
cmps
or
pop
das
xchg
jo
inc
or
adc
imul
outs
stc
std
jg
mov
cmp
jge
pop
dec
cmp
imul
push
or
cld
call
or
ret
cmp
push
ja
(bad)
pop
or
rol
xchg
dec
or
ret
xlat
std
call
cdq
dec
cld
jnp
cmp
jl
stos
cmp
jle
cwde
sahf
std
(bad)
mov
add
xchg
adc
jo
jg
mov
lea
or
add
mov
iret
push
adc
jg
adc
push
pop
(bad)
mov
aaa
push
ins
mov
push
add
(bad)
and
xchg
or
lock
cmp
je
cmp
mov
je
mov
push
lea
bound
cmps
mov
clc
jmp
adc
add
jg
call
xor
aad
push
cs
adc
pop
cs
cs
adc
cmp
xchg
stc
into
out
pop
jmp
cmp
mov
sub
add
iret
pop
rcr
(bad)
xlat
adc
pop
pop
push
popf
pop
ret
adc
cmp
adc
sahf
out
push
mov
jbe
adc
mov
add
lahf
out
push
into
mov
jg
sub
and
loopne
push
fcomi
cmps
call
jmp
es
push
pop
push
dec
fcom
repz
cmp
xchg
or
inc
push
test
dec
mov
add
test
outs
into
int3
sbb
and
icebp
jmp
fidiv
mov
add
jmp
adc
xor
outs
inc
ins
clc
inc
ss
add
cld
cmp
adc
push
lock
jle
ret
bound
inc
add
outs
outs
or
or
je
or
dec
repz
outs
outs
or
jo
or
mov
pop
xor
mov
fs
jb
mov
push
jmp
and
ins
lea
in
mov
dec
mov
push
or
and
mov
fsubrp
cmp
add
out
add
mov
and
ds
add
ret
and
in
punpckhbw
cmp
test
pop
ror
sbb
jmp
pop
cmps
sub
adc
paddsw
popa
inc
push
mov
imul
test
pop
push
repnz
mov
push
or
dec
ror
sub
std
adc
sub
mov
cmp
cmp
or
sbb
push
inc
pop
add
inc
call
mov
mov
je
pushf
cdq
shr
add
je
cmp
mov
pusha
and
ret
jae
adc
popa
push
sub
int3
xchg
in
pop
jg
pop
push
pop
cmp
xor
arpl
xchg
xchg
xchg
push
xchg
out
inc
cmp
jne
mov
cmp
push
xor
push
sbb
or
fld
mov
test
stc
mov
sub
or
xchg
mov
aaa
cli
retfw
in
mul
mov
loop
sti
fdivrp
fs
add
push
adc
pop
pop
ret
test
ja
adc
outs
inc
sar
xor
xor
sub
sbb
sar
(bad)
xor
xor
sub
sbb
jne
push
jbe
idiv
fidiv
mov
xchg
add
jmp
(bad)
or
mov
fstp
pushf
sub
jmp
mov
clc
lods
sti
add
shl
(bad)
push
jbe
and
sub
sub
add
adc
test
rol
sub
pusha
or
lock
cmp
(bad)
pop
or
push
or
loop
pop
das
push
sub
push
pop
es
jmp
(bad)
fadd
inc
sbb
(bad)
out
sub
inc
jmp
cmp
jne
mov
inc
and
sub
and
cmp
je
sub
jbe
fidiv
cs
and
mov
dec
mov
add
sub
jb
add
sub
jb
add
pop
(bad)
jle
or
jmp
xor
sub
jmp
getsec
jmp
push
cmp
push
dec
js
push
jg
and
jl
and
add
xor
shl
cs
cdq
inc
cli
push
shld
add
inc
imul
cmps
mov
inc
xor
enter
mov
jns
sbb
mov
xchg
rol
test
push
pop
ds
mov
pop
adc
sbb
jnp
sub
dec
inc
int3
jne
adc
rol
iret
or
and
jg
hlt
or
push
and
repz
ds
rol
or
jmp
and
data16
mov
jmp
or
std
pop
setb
jmp
setl
cmp
je
dec
int
pop
cld
push
and
fdiv
jmp
das
pop
adc
adc
push
mov
daa
push
push
mov
dec
xchg
inc
jle
dec
or
mov
add
cmp
scas
pop
clc
cmp
pop
mov
dec
imul
lods
xchg
push
fld
push
or
or
add
pop
pop
js
push
cwde
inc
add
(bad)
dec
push
or
xchg
jmp
sub
popa
dec
ror
cdq
idiv
cmp
je
clc
jmp
and
test
mov
cmp
jge
sub
dec
lea
icebp
iret
(bad)
data16
sub
dec
push
in
jno
lods
(bad)
mov
pop
dec
stos
bound
adc
mov
xchg
jge
or
js
cmp
test
fld
lock
in
push
rcl
(bad)
mov
xor
push
dec
shr
inc
leave
dec
imul
cmp
push
sub
mov
test
add
cmps
cmp
or
jo
jle
cwde
or
xchg
ds
push
outs
loope
and
wbinvd
call
sar
js
mov
dec
jne
enter
dec
icebp
sub
add
outs
call
xor
lock
jne
jne
or
add
mov
inc
pop
fwait
jnp
jb
mov
fwait
mul
dec
mov
jl
push
push
sbb
pop
adc
inc
clc
out
pop
pop
jo
push
in
sbb
jmp
push
sub
shl
adc
inc
sbb
rcl
sbb
jecxz
mov
mov
jne
iret
inc
cld
add
mov
rol
mov
pop
push
jl
pop
sub
aam
nop
xor
or
mov
bound
int
jl
ss
jae
or
icebp
out
add
je
or
ret
ffreep
mov
jmp
or
(bad)
(bad)
js
push
dec
aas
ins
sub
(bad)
mov
push
test
pop
jne
jae
sbb
lods
xchg
push
outs
xchg
cs
clc
pop
xor
or
mov
mov
or
mov
(bad)
mov
and
imul
popf
mov
popf
test
push
addr16
cwde
or
test
pop
cmp
pop
cli
sbb
cmp
cmp
js
pop
push
sbb
add
inc
cmp
cmps
pop
jno
std
lock
and
popa
jmp
fstp
loopne
inc
add
mov
(bad)
(bad)
inc
cmp
inc
or
addr16
cmp
xor
xor
mov
je
fld
ror
fdivrp
mov
lea
mov
test
ret
mov
sbb
push
mov
jg
add
imul
aad
repnz
hlt
fucomip
push
imul
gs
xor
cs
ins
scas
inc
gs
outs
cmp
out
jmp
push
popa
je
dec
popa
ins
gs
and
loopne
mov
jecxz
inc
sti
in
or
int3
push
inc
call
inc
cmp
shr
add
ja
das
loop
pop
jmp
dec
shr
xor
lds
mov
pop
and
xchg
cmp
stc
int
ror
aas
iret
cwde
cmp
fwait
rol
repnz
mov
inc
out
sti
imul
(bad)
push
lods
repz
std
mov
clc
xor
cmp
mov
es
mov
out
fs
imul
sar
je
neg
add
cmp
lock
cmp
jne
adc
popf
inc
xor
cmp
ret
or
push
fistp
add
aam
icebp
je
das
xor
xor
sub
fist
cmc
add
bound
and
xchg
ficom
inc
mul
jbe
lods
es
add
pop
test
pop
enter
and
mov
dec
sar
pop
add
adc
in
add
mov
fstp
dec
cmp
jne
mov
mov
jo
sbb
mov
mov
ds
xlat
add
pop
adc
push
mov
and
aad
pop
mov
add
(bad)
mov
mov
mov
inc
push
add
jno
(bad)
xchg
or
cmp
mov
(bad)
xchg
add
jecxz
movs
inc
mov
or
das
cmp
jo
add
pop
sub
(bad)
inc
pop
jo
add
or
out
mov
pop
mov
pop
pusha
push
push
cld
jne
mov
mov
test
popf
ret
(bad)
and
(bad)
mov
call
sub
ins
les
nop
add
pop
mov
(bad)
ja
movs
adc
nop
mov
push
inc
(bad)
mov
dec
sbb
inc
nop
cmp
mov
xor
jmp
pop
imul
in
xchg
mov
mov
pop
ret
sbb
add
push
push
in
xor
cmp
push
call
jo
in
out
aam
push
inc
jg
dec
adc
sub
mov
clc
mov
pop
cwde
xor
xchg
mov
ins
lahf
bound
pop
cmp
fistp
or
pop
pop
into
enter
inc
jns
mov
dec
jo
sti
add
js
shl
fmul
xchg
xchg
jbe
movs
aaa
pop
shr
xor
and
jle
or
pop
dec
jl
les
sbb
sub
leave
dec
retf
pushf
hlt
jmp
std
call
inc
cmp
ja
mov
inc
jmp
and
(bad)
xchg
lea
cmp
ja
fcmovb
jmp
or
mov
adc
in
and
sbb
and
retf
add
in
mov
imul
inc
sbb
dec
or
loopne
mov
outs
jbe
add
dec
mov
and
sbb
js
dec
jbe
pop
add
aam
add
jb
lea
ret
mov
lock
in
adc
dec
push
cli
cmp
(bad)
aam
mov
(bad)
mov
das
cmp
cld
mov
call
movzx
inc
test
je
add
jae
test
aas
and
je
cmp
fiadd
or
outs
xor
mov
rol
loope
ffreep
cmps
test
mov
push
lea
inc
dec
cld
cmp
adc
push
adc
inc
nop
(bad)
jbe
shl
xor
add
fdivr
mov
mov
mov
xor
aaa
stos
sbb
(bad)
mov
loop
xor
sbb
sub
cs
jb
inc
adc
ret
fdiv
das
shl
mov
cmps
cmp
dec
xor
fstp
shl
lea
adc
es
mov
or
cmp
pop
or
pop
push
jnp
pop
js
jl
mov
dec
ja
or
aam
dec
push
xchg
fnstcw
je
pusha
aad
aad
jbe
sbb
inc
xchg
dec
and
imul
ret
ffreep
or
int3
xchg
add
jae
push
jbe
in
pop
imul
pop
pop
je
pop
cmp
and
dec
mov
nop
in
xchg
dec
and
enter
nop
jne
or
fisub
lahf
dec
jne
and
ror
cmc
cmp
mov
jge
mov
and
xchg
dec
imul
pushf
mov
ret
xchg
imul
iret
mov
add
(bad)
fcom
hlt
test
sub
faddp
xor
push
cmp
pop
(bad)
sbb
nop
mov
or
cmp
retf
leave
ins
nop
jl
adc
and
daa
mov
cmp
cmp
mov
and
mov
ins
cmp
sub
je
shr
mov
ror
or
and
sbb
mov
jns
push
fadd
add
mov
js
std
fcmovnb
mov
push
mov
mov
mov
mov
sub
enter
les
jge
inc
fcomp
int3
ret
push
push
dec
pop
cmp
add
js
add
jle
push
cmps
loope
fdivrp
jle
shr
lods
or
ja
mov
pop
add
outs
add
push
or
ja
add
push
dec
push
dec
inc
(bad)
aam
cmp
xor
cmp
and
outs
fs
gs
xor
adc
jb
jns
cmp
pushf
adc
mov
ins
adc
push
pop
fild
cmp
inc
outs
arpl
inc
gs
jne
out
jbe
mov
je
imul
mov
gs
mov
mov
arpl
or
or
mov
inc
xor
xor
(bad)
outs
ins
bound
outs
lock
push
imul
cmp
pop
mov
cmp
andps
outs
dec
inc
xor
je
dec
out
pop
add
dec
bswap
xchg
xchg
xchg
or
cld
jecxz
leave
leave
leave
clc
hlt
lock
leave
leave
leave
leave
call
leave
leave
leave
fcom
ror
leave
leave
leave
leave
enter
leave
leave
leave
leave
mov
leave
leave
leave
test
pushf
cwde
leave
leave
leave
leave
xchg
nop
mov
test
mov
jge
add
rol
icebp
ret
pop
sub
imul
pop
js
pshufw
in
fs
pop
in
in
pop
push
push
dec
in
in
dec
inc
inc
cmp
in
in
xor
sub
dec
dec
dec
sub
sbb
dec
dec
dec
sbb
or
dec
dec
dec
or
cld
loop
daa
daa
and
hlt
lock
daa
daa
daa
daa
call
daa
daa
daa
fcom
ror
daa
daa
daa
daa
enter
daa
daa
daa
daa
mov
daa
daa
daa
test
mov
daa
cwde
xchg
nop
mov
daa
daa
daa
mov
daa
js
jo
daa
daa
daa
daa
push
daa
daa
daa
pop
push
push
dec
daa
daa
daa
daa
dec
inc
inc
cmp
daa
daa
daa
cmp
sub
daa
daa
daa
sub
sbb
daa
daa
daa
sbb
or
daa
daa
daa
or
cld
xchg
xchg
xchg
xchg
loope
hlt
lock
xchg
xchg
xchg
in
call
xchg
xchg
(bad)
aam
xchg
xchg
xchg
xchg
int3
enter
xchg
xchg
xchg
mov
xchg
xchg
xchg
lods
movs
mov
xchg
xchg
nop
mov
test
xchg
xchg
je
ins
push
fs
pop
pop
xchg
xchg
xchg
xchg
push
push
dec
dec
xchg
xchg
xchg
xchg
inc
inc
cmp
xchg
xchg
xchg
xchg
xor
sub
xchg
xchg
xchg
xchg
and
sbb
xchg
xchg
xchg
xchg
adc
or
leave
enter
add
loopne
leave
leave
leave
leave
hlt
lock
call
in
(bad)
leave
leave
leave
leave
aam
int3
enter
leave
(bad)
sar
mov
test
leave
leave
leave
movs
mov
leave
leave
xchg
nop
mov
je
fs
leave
leave
leave
pusha
jo
jl
leave
leave
leave
js
pop
push
leave
leave
leave
leave
push
dec
dec
inc
leave
leave
leave
leave
inc
cmp
xor
leave
leave
leave
xor
and
leave
leave
leave
and
adc
leave
leave
leave
adc
add
fs
add
(bad)
hlt
in
in
lock
call
in
(bad)
aam
leave
in
in
int3
mov
leave
leave
sar
mov
test
leave
leave
leave
leave
mov
leave
leave
leave
nop
mov
leave
cmp
leave
leave
leave
jo
push
leave
pusha
pop
pop
push
leave
leave
leave
leave
push
dec
dec
inc
leave
leave
leave
leave
inc
cmp
xor
leave
leave
leave
xor
and
arpl
leave
and
fbstp
jb
(bad)
(bad)
es
jb
(bad)
psubb
dec
dec
hlt
lock
call
in
(bad)
dec
dec
dec
dec
aam
int3
enter
dec
(bad)
sar
mov
test
dec
dec
dec
movs
mov
dec
dec
xchg
nop
mov
test
in
je
ins
in
in
push
in
in
push
push
dec
cs
in
inc
inc
cmp
dec
dec
dec
cmp
sub
dec
dec
dec
sub
sbb
dec
dec
dec
sbb
or
dec
dec
dec
or
cld
frstor
daa
daa
and
hlt
lock
daa
daa
daa
daa
call
daa
daa
daa
fcom
ror
daa
daa
daa
daa
enter
daa
daa
daa
daa
mov
daa
daa
daa
test
mov
ja
sub
rcr
lods
dec
(bad)
pushf
addr16
cli
mov
cmp
adc
push
adc
cmp
repz
and
enter
imul
jo
xor
mov
nop
jnp
aaa
sbb
stc
imul
xchg
aam
mov
pop
addr16
jae
mov
push
cmp
mov
push
sbb
add
inc
dec
xchg
pusha
call
or
push
sbb
addr16
or
aas
inc
pop
or
jl
jo
mov
jg
xor
jmp
loopne
gs
loopne
dec
push
push
dec
inc
inc
dec
add
outs
mov
pop
xchg
jp
push
and
dec
push
inc
fistp
pop
and
push
push
dec
push
push
pop
sub
push
inc
xor
in
ja
pop
dec
dec
dec
inc
push
das
aaa
pop
int
pause
xchg
js
push
or
cmp
lahf
pop
jb
xchg
push
jp
cld
cmp
pop
mov
push
imul
mov
inc
mov
add
sti
fsub
push
pop
xchg
cs
ins
pushf
pushf
pushf
pushf
push
pushf
pushf
pushf
pop
push
push
dec
pushf
pushf
pushf
pushf
dec
inc
inc
cmp
pushf
pushf
pushf
cmp
sub
pushf
pushf
pushf
sub
sbb
mov
pushf
sbb
lock
dec
out
push
psllw
leave
leave
leave
leave
repz
cmc
test
leave
leave
idiv
stc
cli
leave
leave
leave
leave
sti
cld
std
dec
leave
leave
leave
jmp
loope
leave
leave
leave
leave
jecxz
in
leave
leave
leave
leave
out
jmp
leave
jmp
in
out
leave
leave
leave
leave
out
rcl
ror
leave
leave
leave
rcl
aad
leave
leave
leave
leave
xlat
fcomp
fcmove
leave
leave
leave
fcmovnu
fstp
leave
leave
leave
leave
ffreep
rol
leave
leave
leave
ret
(bad)
(bad)
leave
leave
leave
(bad)
enter
leave
leave
leave
retf
int3
int
leave
leave
leave
leave
iret
mov
mov
leave
leave
leave
mov
mov
leave
leave
leave
leave
mov
mov
leave
mov
leave
leave
leave
mov
leave
leave
leave
mov
leave
leave
leave
cmps
test
stos
leave
leave
leave
leave
stos
lods
lods
scas
lods
iret
leave
leave
scas
nop
xchg
sbb
jg
test
or
ins
gs
nop
sub
push
or
test
cli
gs
jb
push
js
jns
sbb
adc
xchg
add
sub
xor
cmps
mov
push
mov
femms
xchg
add
aas
and
pop
dec
or
arpl
add
or
cld
mov
cld
jmp
push
inc
inc
bound
je
push
mov
pop
xchg
push
rcr
(bad)
mov
dec
inc
jo
nop
lods
xchg
cmp
push
loopne
sar
inc
dec
jne
dec
dec
xchg
shl
test
mov
adc
pop
sti
std
add
inc
dec
outs
mov
pusha
scas
push
lods
inc
cs
jb
pusha
xchg
pop
pop
xor
gs
scas
mov
adc
adc
sbb
or
sub
push
sbb
pushf
pop
mov
scas
jo
pop
and
jg
inc
inc
imul
outs
nop
enter
pop
cmp
and
and
out
outs
jbe
jb
ins
outs
ja
mov
xor
sar
xor
mov
shr
jb
xor
(bad)
jbe
imul
dec
sbb
mov
test
adc
cmp
fsubr
in
sub
fs
xor
(bad)
push
and
xor
movsx
sahf
and
push
outs
imul
add
mov
push
dec
sbb
xchg
mov
adc
inc
inc
mov
aad
dec
shr
push
and
dec
xchg
adc
pop
cmp
jae
push
adc
pusha
mov
mov
pop
scas
push
jb
ins
aam
nop
adc
nop
add
mov
jp
imul
pop
loope
in
mov
or
fcom
fbstp
inc
(bad)
mov
and
(bad)
adc
adc
xchg
mov
sub
sub
cmp
js
add
fs
jo
or
mov
push
dec
jo
mov
shl
and
int3
mov
cmp
adc
jo
nop
pop
push
js
xchg
(bad)
push
and
inc
push
stos
adc
mov
addr16
adc
data16
mov
icebp
fistp
aaa
xor
add
mov
or
inc
ins
jae
mov
inc
cmp
add
stos
sbb
inc
aas
xor
push
adc
adc
adc
jb
popa
fs
les
fwait
hlt
pop
push
int3
add
mov
push
dec
into
pop
out
sbb
and
aam
(bad)
jae
sahf
out
push
jge
push
pop
popa
out
(bad)
mov
adc
sbb
push
loopne
sbb
mov
inc
mov
add
fnstsw
xor
xchg
in
jl
push
dec
jne
push
push
xchg
lock
push
fcom
or
arpl
cmp
lds
jb
je
dec
(bad)
adc
pop
pop
shr
adc
lock
xchg
sahf
retf
mov
mov
pop
inc
xor
mov
or
sub
daa
cmp
aas
lock
push
in
inc
std
pop
rcpps
ficom
mov
mov
neg
sbb
dec
add
jle
mov
imul
loope
add
push
(bad)
nop
jge
jle
xchg
pop
push
push
push
dec
adc
jmp
je
jo
cmp
cld
mov
mov
or
sub
sti
xor
sbb
pop
add
mov
dec
cmp
sub
add
das
ins
outs
mov
add
outs
jo
test
cmp
and
pop
add
and
cmps
dec
sbb
out
dec
mov
xchg
or
or
push
cmps
add
ret
cli
xor
cwde
movs
leave
dec
push
repz
add
inc
mov
rcr
lock
sub
stos
mov
ret
sub
mov
xor
clc
or
fidiv
push
jg
sahf
cmp
(bad)
fistp
sub
jg
sub
pop
add
pop
adc
outs
or
sub
or
idiv
add
or
sub
sbb
sbb
pop
jg
xor
cmps
(bad)
pop
pop
cmp
jne
inc
inc
sahf
shl
ror
pusha
sub
into
rol
add
push
push
push
sub
cld
mov
fstp
pop
mov
je
mov
xor
adc
fdiv
push
sub
add
pop
cmp
jg
jle
ins
add
sbb
and
fdiv
lods
mov
cld
je
hlt
or
pop
adc
pop
push
pop
pop
jl
mov
pop
pop
aam
add
sbb
pop
or
loope
push
data16
cmp
jne
pusha
add
sar
mov
mov
movaps
pop
dec
mov
imul
xor
add
(bad)
fiadd
(bad)
and
mov
inc
push
nop
pushf
(bad)
jmp
fwait
cmc
test
adc
ss
cld
sbb
test
adc
add
xor
jmp
dec
out
xchg
(bad)
sti
add
dec
shr
(bad)
cmp
mov
add
repz
jl
jmp
jbe
add
mov
adc
or
add
dec
sub
mov
jb
sub
inc
push
add
inc
loope
cmps
test
jbe
lahf
inc
cmp
jns
inc
xchg
repz
sbb
ja
or
in
mul
in
and
cmp
cmp
cmp
jo
xchg
mov
cmp
(bad)
xor
mul
or
call
test
cmp
jo
sbb
or
or
mov
pushf
leave
jmp
ds
sbb
in
xchg
fiadd
loope
call
sbb
outs
inc
mov
js
dec
sti
jb
je
or
mov
(bad)
jae
inc
dec
jne
jmp
test
sbb
ins
jp
push
fimul
add
jo
jg
mov
jo
lea
mov
inc
dec
mov
ret
push
mov
pop
push
push
sahf
icebp
dec
xchg
jne
bound
add
pop
mov
sbb
cli
ja
jmp
adc
shl
mov
popf
jne
xlat
call
in
adc
push
outs
cdq
and
inc
jmp
add
or
jnp
xor
jmp
push
mov
neg
sbb
and
jae
mov
dec
inc
dec
mov
mov
loopne
fsub
or
(bad)
adc
aad
daa
mov
test
add
fild
fistp
ret
pop
aaa
add
add
xor
ror
shr
fprem
(bad)
fdivr
mov
xor
or
pop
rol
lods
push
sub
rcr
loope
pop
ins
sub
ffree
ffree
ffree
pop
add
ins
dec
aad
(bad)
add
or
and
mov
dec
or
mov
pop
xor
loopne
push
jbe
inc
push
push
ins
xor
mov
push
mov
jle
rcl
adc
push
mov
mov
hlt
inc
lahf
or
inc
outs
add
mov
pop
loop
or
mov
mov
push
and
pushf
(bad)
data16
jo
imul
arpl
xchg
into
cmps
mov
mov
nop
or
(bad)
aas
fs
mov
push
add
mov
cmp
sub
test
xchg
pop
pop
in
(bad)
cdq
mov
and
mov
xchg
pop
adc
adc
aaa
adc
into
ja
or
push
push
mov
(bad)
or
inc
inc
test
jl
inc
mov
inc
add
add
cmp
inc
xor
mov
cmc
mov
out
jb
push
out
aas
(bad)
ss
or
gs
add
push
or
push
mov
push
dec
dec
jne
cli
inc
shl
lods
(bad)
dec
loopne
imul
pop
lea
shl
add
inc
adc
ins
lock
(bad)
lock
setne
jmp
cmp
dec
pop
movs
mov
pop
imul
mov
ins
cwde
ds
add
mov
add
neg
daa
fsub
in
stos
adc
xchg
stos
es
loope
(bad)
mov
and
adc
(bad)
push
idiv
xchg
push
sbb
daa
and
aas
fisubr
test
or
mov
jo
std
das
hlt
cmp
ja
mov
and
ja
xlat
popa
addr16
repz
adc
retf
imul
shl
test
push
mov
dec
push
loope
jecxz
imul
sbb
shr
cwde
xor
lahf
xor
sub
push
ins
and
jecxz
push
pop
pop
and
test
adc
cmp
jl
nop
hlt
mov
stc
jle
push
mov
je
cld
cmc
gs
sbb
sbb
fmul
push
dec
jecxz
add
pusha
dec
arpl
and
ins
or
leave
push
push
mov
lea
push
sahf
mov
add
adc
ret
loopne
pushw
mov
pop
cli
mov
xor
sbb
and
mov
cmp
mov
mov
dec
xchg
mov
sbb
pushf
nop
jp
aad
add
jo
inc
cmp
mov
outs
mov
daa
adc
xchg
dec
or
push
xchg
test
jo
add
(bad)
inc
jmp
test
nop
leave
nop
push
jge
pusha
inc
in
lock
movzx
or
sbb
ds
in
push
xor
push
adc
pop
movs
jb
push
rol
dec
fsub
pop
test
lods
sbb
int
in
repz
or
jmp
xor
add
ficom
aad
push
adc
fdivr
mov
sbb
rcl
cmp
inc
jmp
or
test
out
add
or
aam
cmp
(bad)
adc
push
dec
mov
push
mov
test
daa
call
clc
not
and
pop
sbb
xor
adc
sbb
push
push
cld
call
jl
and
xor
dec
pop
add
and
je
(bad)
popf
cmp
or
ds
push
sbb
scas
or
outs
push
inc
daa
adc
jmp
sbb
lock
aad
cmp
je
cld
xchg
inc
or
(bad)
(bad)
not
mov
fwait
mov
jns
ja
mov
sub
xchg
mov
(bad)
mov
lock
cmps
aam
movs
dec
ds
(bad)
not
cmp
sbb
xor
dec
lock
dec
xor
in
mov
ror
xchg
pop
cmp
mov
add
xchg
sahf
cmp
jl
push
int3
jge
adc
mov
lds
cmp
sbb
imul
cmp
(bad)
sbb
sti
std
add
inc
cdq
dec
or
mov
outs
cmp
push
inc
inc
sub
adc
inc
movs
mov
adc
arpl
das
inc
(bad)
mov
inc
sbb
icebp
(bad)
cs
push
jg
in
push
jmp
cs
xchg
test
xchg
push
lea
push
or
fmul
dec
sub
xchg
loope
jp
push
sar
cld
shl
ficom
hlt
clc
cld
push
jnp
stos
jbe
jg
cld
imul
jp
call
cmp
mov
mov
dec
or
xor
or
sub
mov
(bad)
enter
push
js
mov
cli
stos
fcom
cmp
(bad)
or
popa
cmps
cmp
pop
lock
call
shr
or
xor
sub
shl
jl
hlt
or
sti
jle
data16
cmp
shl
inc
div
cli
cmps
jmp
or
mov
or
inc
or
pop
sub
je
mov
neg
cli
jecxz
adc
out
data16
test
jne
test
push
jp
mov
out
fiadd
inc
or
fsubr
sub
pop
fadd
ins
push
jo
cli
inc
test
and
jno
and
loope
sub
test
fwait
push
je
pop
add
sub
inc
adc
ds
scas
or
retf
shl
ret
mov
in
retf
jg
or
xor
sub
mov
mov
sahf
pop
or
(bad)
movs
mov
movs
arpl
lds
push
pop
pop
pop
mov
or
fimul
retf
lahf
cwde
lock
or
jns
cmp
data16
call
dec
cmp
jne
cli
jb
mov
sub
add
sbb
fst
adc
add
jne
retf
outs
dec
or
jno
jae
jae
sub
pop
iret
popa
cmc
jb
jne
mov
lock
pause
(bad)
mov
xor
or
or
stos
sar
adc
repz
je
mov
aas
mov
cmp
clc
aaa
imul
or
sub
sub
je
xor
jl
mov
mov
icebp
es
pushf
inc
xor
cmp
mov
dec
je
push
(bad)
pop
sub
jbe
sbb
pop
mov
clc
es
adc
pop
mov
jne
call
inc
jmp
mov
add
movs
mov
jmp
shr
jno
dec
sub
mov
or
sub
cmps
or
xor
dec
push
xchg
cwde
test
or
or
adc
push
mov
clc
pop
xor
fldl2t
cmp
jbe
mov
pop
adc
and
jmp
not
mov
add
(bad)
and
sbb
js
mov
sub
les
aas
mov
dec
sbb
adc
cmovp
inc
pop
inc
pop
lods
xor
jo
push
xor
mov
ins
es
xor
cmc
loopne
in
adc
or
sub
lods
cmp
je
stos
aam
in
sub
clc
sub
lahf
add
sbb
sar
mov
mov
mov
jge
fsubr
dec
cs
and
lods
fst
aad
jmp
int3
mov
push
(bad)
pop
in
mov
fcomp
adc
jmp
push
jg
in
adc
out
or
retf
add
outs
movs
xchg
xchg
fdivp
popa
pop
mov
rep
sbb
imul
mov
or
pop
fwait
nop
pop
pop
mov
fcmovnb
mov
mov
cmp
imul
clc
sub
dec
push
je
add
add
pop
dec
(bad)
push
mov
or
cmp
or
jl
std
add
je
ret
je
xchg
ret
and
mov
sub
arpl
cmp
pop
clc
stos
cmc
add
lea
mov
push
add
and
icebp
lods
imul
push
sub
arpl
das
pop
cld
daa
jo
dec
repz
retf
dec
mov
xchg
fsubr
rcl
faddp
or
cmps
adc
jne
and
or
dec
mov
je
xchg
push
dec
ret
xor
dec
push
or
jmp
push
sub
dec
cmps
pop
outs
adc
out
ret
or
outs
sbb
shl
(bad)
add
test
xchg
(bad)
repz
movnti
add
sub
scas
rol
dec
xor
inc
inc
sbb
jne
lods
and
jmp
mov
stc
mov
or
cld
aas
and
aas
add
in
mov
add
mov
xchg
or
cmp
ja
or
jmp
jecxz
xor
pop
test
adc
rol
out
ret
xor
jbe
mov
outs
mov
inc
je
mov
jnp
outs
mov
mov
inc
je
mov
dec
je
dec
jl
pop
out
dec
mov
pop
cmp
jbe
mov
cli
fcom
add
lods
scas
inc
fdivr
xchg
cmp
ss
pop
pop
retf
xchg
mov
inc
iret
dec
faddp
xlat
mov
ret
xor
and
retf
pusha
xchg
mov
dec
mov
fsub
test
inc
stos
pop
mov
xchg
adc
int3
fwait
pushf
lock
outs
dec
adc
dec
bound
stos
or
xlat
jg
push
inc
ror
aam
aas
lahf
test
das
push
lods
cmp
xor
test
cmp
add
and
clc
dec
cld
lea
hlt
mov
movs
cmps
(bad)
jle
jmp
push
mov
cmp
jg
jmp
add
popa
inc
or
adc
or
fdivp
mov
ds
movs
cmp
retf
fcmovne
lea
add
pop
rcl
stos
or
jne
scas
inc
jge
mov
neg
jmp
or
add
pusha
mov
mov
stos
xchg
push
mov
into
mov
pushf
push
jmp
aam
adc
enter
jg
dec
mov
stos
cmp
inc
inc
sbb
jne
pop
pop
aas
cwde
push
jg
loopne
sub
mov
sti
mov
or
jb
cs
mov
repnz
cld
mov
adc
dec
lds
out
jge
sbb
jle
jmp
data16
daa
push
sbb
adc
jb
fiadd
mov
aam
(bad)
cmp
sbb
mov
mov
mov
in
ror
push
sub
hlt
(bad)
(bad)
lods
pop
mov
je
add
or
mov
test
sar
add
pop
sbb
(bad)
sti
mov
rol
xchg
aad
clc
aas
daa
in
xor
dec
inc
dec
inc
dec
lods
or
hlt
or
dec
into
jge
xchg
ins
jo
jo
ret
std
mov
aam
aad
(bad)
push
dec
or
sbb
sbb
dec
stos
mov
je
mov
stos
neg
sbb
stos
jmp
jge
(bad)
jle
inc
mov
loop
movlps
pop
push
mov
clc
dec
mov
test
push
mov
mov
mov
jbe
sub
rcr
dec
mov
mov
mov
mov
mov
jne
test
cli
adc
lahf
add
xchg
jmp
push
jge
add
enter
xrelease
cld
(bad)
inc
test
jne
sbb
(bad)
imul
jmp
adc
sti
add
js
js
je
inc
jne
pop
in
test
ret
inc
repz
or
repnz
and
lea
pop
pop
iret
mov
je
push
push
cmp
mov
adc
sbb
add
(bad)
mov
loop
push
xchg
movs
loopne
out
mov
idiv
and
inc
add
and
and
adc
and
sub
fucomp
sub
xor
sub
iret
jne
xor
or
sub
sub
or
sub
popf
mov
loopne
sub
cmps
loopne
xor
add
repnz
jle
in
movs
jmp
mov
mov
mov
and
adc
test
popa
je
adc
or
(bad)
test
inc
inc
push
int3
fld
mov
aas
imul
adc
pop
mov
push
pop
jge
pop
dec
xor
pop
frndint
rcr
scas
or
fstp
fnstsw
fwait
mov
test
je
fidiv
jne
ja
cld
sti
lea
mov
inc
sub
nop
rcr
or
xor
jmp
bound
mov
fimul
mov
cmp
pushf
or
cmp
add
or
dec
js
dec
and
pop
cmp
leave
jmp
mov
aaa
dec
sbb
je
not
mov
shr
mov
add
xchg
out
aad
push
dec
push
sahf
push
adc
inc
ror
test
rcr
or
inc
or
or
in
lock
adc
jl
mov
in
(bad)
jl
sbb
jae
dec
add
jge
inc
mov
fild
cli
lea
ror
or
mov
(bad)
setnp
or
push
sub
pushf
and
jne
dec
ja
mov
enter
and
jg
cmp
jmp
enter
ret
add
aas
(bad)
div
pop
jmp
scas
add
sbb
inc
mov
pop
cld
push
in
dec
mov
fldcw
cs
nop
push
fldz
jle
std
pop
cmps
cmps
jg
ds
lods
or
icebp
mov
mov
pusha
jne
inc
sbb
cmp
icebp
je
and
fistp
sub
fiadd
ret
jne
mov
sahf
cs
push
mov
add
loopne
adc
aas
jmp
fstp
test
test
push
add
dec
test
ins
and
and
add
and
mov
sub
add
jae
fimul
addr16
add
jmp
aaa
mov
neg
or
adc
es
push
inc
imul
push
cmp
hlt
nop
jb
aaa
add
loopne
cmp
wbinvd
inc
movs
add
push
cld
test
loope
adc
push
shl
fistp
call
push
fist
leave
aam
movs
call
or
pop
ret
or
or
fiadd
jmp
adc
bnd
mov
in
aam
xchg
cmp
fisub
lock
push
sbb
fwait
push
push
repnz
(bad)
mov
in
cmps
xchg
xor
cmp
inc
or
sub
adc
cli
cdq
iret
mov
in
adc
mov
xor
push
adc
and
inc
add
pop
mov
pop
or
add
repz
sbb
or
cmp
inc
stc
inc
fdivp
push
sub
cmp
mov
fiadd
ins
mov
adc
imul
adc
mov
fmul
call
fild
xor
test
sbb
add
mov
adc
push
jo
pop
inc
imul
inc
loope
dec
test
dec
fnstsw
pop
push
inc
sub
ror
jg
xchg
gs
mov
ror
(bad)
cmp
mov
xor
retf
(bad)
rep
mov
push
cmp
xor
and
shl
mov
cdq
push
pop
enter
jp
and
and
fldenv
mov
sbb
mov
sbb
nop
add
lods
rol
inc
das
pop
into
idiv
add
repz
or
dec
outs
call
add
ja
call
js
or
jb
sti
ins
jp
adc
je
mov
ja
adc
pop
mov
add
inc
dec
jne
jmp
mov
mov
aas
cdq
idiv
imul
sbb
shr
jns
ret
cli
add
repnz
mov
fild
add
pusha
ret
or
js
jne
inc
std
std
xchg
or
xchg
clc
shl
(bad)
bound
xchg
push
dec
mov
and
pop
(bad)
call
outs
mov
xchg
call
jg
mov
mov
push
clc
hlt
or
inc
push
jbe
lods
mov
inc
fbld
push
ds
pushw
cmp
call
inc
add
scas
data16
and
icebp
rol
bnd
xchg
lods
mov
aas
mov
dec
cmp
imul
mov
push
sub
mov
mov
cmp
mov
cmp
xchg
dec
pop
lock
pop
mov
push
cmps
lds
jp
cmp
(bad)
je
ins
(bad)
dec
cmp
jb
adc
sub
inc
jmp
ja
mov
sub
inc
adc
pop
pop
sub
mov
xchg
outs
repz
popf
stos
nop
pop
lahf
sub
add
xor
inc
jne
ins
push
push
add
cmp
sbb
mov
fcomp
pop
xor
push
push
dec
into
mov
iret
or
sbb
adc
cs
sbb
mov
add
sbb
dec
(bad)
inc
inc
ret
or
mov
mov
fstp
or
push
or
sub
(bad)
dec
sbb
push
adc
push
arpl
mov
push
test
lods
pop
and
out
mov
cdq
ins
sbb
sbb
jnp
lock
xchg
and
lahf
pop
pop
adc
and
xchg
add
adc
ficomp
jle
ret
fcom
adc
pop
and
add
imul
push
dec
lods
pop
pop
aaa
jmp
push
mov
loopne
in
enter
sub
pushf
mov
scas
lock
aaa
mov
add
rcr
fmul
fimul
push
or
cmc
lahf
out
cmp
je
mov
inc
das
and
daa
push
xor
add
push
cmp
add
jbe
push
mov
xchg
bnd
in
iret
or
adc
inc
in
add
jecxz
mov
xor
push
in
jge
ds
jb
jmp
js
iret
in
lahf
aam
in
jbe
xlat
cmps
retf
lods
leave
push
sar
jns
cwd
inc
cmp
loopne
out
repnz
imul
add
cmps
dec
dec
stos
pop
aas
sahf
adc
mov
lea
mov
sbb
cdq
(bad)
fisub
or
outs
or
shr
(bad)
sbb
sti
std
and
pusha
add
sub
pop
(bad)
sub
mov
pop
out
lods
arpl
add
aad
cmp
aas
dec
shl
lock
add
dec
mov
in
inc
and
sbb
inc
fdiv
push
mov
jo
adc
arpl
repnz
(bad)
addr16
imul
inc
and
daa
cmp
in
jg
cmc
sub
jmp
and
adc
shl
loope
or
inc
cmp
jne
lahf
inc
cs
sub
into
dec
add
lods
in
pop
mov
jge
vmwrite
pop
add
or
ret
inc
pop
movs
push
aam
fadd
sub
xor
cmp
lods
mov
les
add
pop
inc
ins
loop
push
in
add
loope
mov
xchg
mov
push
jbe
pop
fbld
scas
out
repnz
(bad)
ins
cmc
int3
stos
pop
xchg
xlat
dec
adc
imul
xchg
jge
in
aaa
xchg
lock
sbb
adc
aad
popf
mov
jge
dec
add
scas
nop
mov
pop
loop
pop
mov
push
ja
sub
mov
and
popa
or
sbb
or
stc
pop
or
or
add
add
add
or
and
xor
sbb
ror
pop
les
xchg
xor
iret
repz
(bad)
xchg
(bad)
repz
and
mov
cmp
pop
cmp
add
loopne
fwait
inc
outs
or
mov
mov
inc
mov
bound
popf
dec
push
lea
sub
test
pop
pushf
in
jb
aam
and
xlat
fcmovb
sub
dec
inc
adc
jmp
sbb
push
inc
push
add
sub
xchg
xor
push
pop
leave
mov
push
dec
je
add
jmp
out
aad
add
lods
sub
scas
adc
shr
dec
cmp
and
daa
mov
pop
or
sbb
push
mov
loopne
aaa
xor
adc
or
or
xor
dec
jg
je
mov
aaa
mov
or
push
jmp
sub
je
pop
je
jmp
push
outs
mov
dec
mov
out
scas
lahf
sbb
sub
test
loopne
inc
mov
add
adc
or
sub
push
popa
push
inc
jmp
adc
(bad)
xor
out
in
or
and
jmp
sbb
ins
loope
sub
sbb
or
repz
popa
and
add
out
loope
sbb
movs
xor
sub
add
push
xor
add
push
jmp
daa
sub
scas
pushf
fist
mov
(bad)
cmp
add
ror
cmp
add
dec
push
add
clc
ja
adc
and
mov
dec
ficom
dec
xor
add
mov
add
xor
mov
out
pop
iret
adc
push
or
in
dec
repz
sbb
or
pop
sbb
hlt
sub
and
push
mov
and
push
jae
mov
sbb
inc
mov
sbb
xor
push
cmp
fnstsw
jg
aam
loopne
dec
cwde
shl
pop
sub
or
inc
push
push
jmp
or
data16
cmp
cld
clc
out
adc
inc
mov
enter
in
mov
imul
das
push
dec
jp
push
adc
cmp
cmovle
clc
xchg
mov
retf
mov
(bad)
sub
sbb
push
mov
adc
(bad)
cmp
lea
or
aad
pop
sbb
inc
add
in
dec
icebp
shufps
fdivr
je
mov
lods
adc
adc
adc
idiv
xchg
ret
test
push
mov
sbb
call
mov
test
mov
pop
pop
ret
jb
ja
aas
add
sbb
xchg
adc
sbb
test
pop
mov
ficom
imul
test
test
mov
stc
sbb
sete
retf
pusha
adc
outs
mov
loop
repz
push
xor
js
scas
into
cmp
popf
les
loope
xchg
xrelease
pop
xor
lock
sbb
sub
xchg
ret
cmp
add
jge
push
adc
mov
push
aaa
and
mov
daa
mov
xor
fldenv
jg
dec
cmp
jl
push
inc
push
(bad)
cmp
jne
sub
adc
or
call
inc
notrack
sub
je
mov
enter
sub
je
jmp
loop
mov
mov
jmp
push
push
push
sahf
jbe
push
inc
push
inc
mov
retf
out
scas
aad
scas
nop
inc
sub
aad
fdiv
sar
mov
pusha
jl
mov
add
mul
add
mov
mov
adc
dec
outs
je
push
pop
push
pop
mov
mov
jl
push
sub
je
dec
xor
cvtps2pd
sub
adc
sbb
(bad)
jmp
mov
mov
push
cmp
shl
and
arpl
in
or
jmp
sti
arpl
sbb
jmp
sub
add
push
fs
mov
push
imul
add
stos
cld
add
pop
xor
push
popa
dec
cld
shl
ret
xchg
jbe
add
loopne
mov
mov
gs
sbb
call
cwde
push
repz
mov
or
push
adc
addr16
scas
mov
jl
mov
dec
sbb
add
adc
js
dec
mov
outs
test
jge
mov
mov
mov
cli
mov
out
lods
mov
in
fiadd
mov
das
mov
dec
and
out
or
push
jns
rol
in
sbb
pushaw
repnz
jb
and
dec
adc
mov
bnd
es
dec
and
loop
and
jmp
call
lock
in
lock
cmp
lock
mov
les
ins
mov
ja
fld
mov
pop
data16
fistp
ds
add
cmp
loopne
(bad)
jle
and
fs
jne
mov
add
sub
test
jl
inc
inc
xor
push
cmp
xor
ror
repnz
mov
stos
and
stc
jmp
jne
adc
(bad)
outs
jb
jne
ret
cmp
mov
and
test
xchg
fsubr
mov
push
outs
cmp
fsub
das
push
dec
inc
imul
test
add
out
(bad)
aam
jle
adc
iret
fdivr
add
jecxz
and
inc
(bad)
pop
gs
retf
fs
(bad)
mov
mov
(bad)
or
add
rcr
sbb
mov
dec
mov
push
and
inc
pmulhuw
xor
lds
dec
push
and
cli
push
xor
or
or
dec
mov
fs
enter
add
xchg
pop
xor
add
loopne
push
cmp
push
test
mov
cmp
pop
ins
sbb
je
(bad)
ja
xchg
sbb
pop
adc
(bad)
cmp
xor
ret
xchg
adc
or
sub
cmps
or
add
sbb
les
xlat
xchg
pop
push
push
inc
dec
jecxz
inc
jno
jecxz
mov
ins
call
pandn
lods
mov
pusha
outs
mov
(bad)
enter
xor
cmps
cdq
mov
and
cmp
adc
ds
adc
mov
loope
or
sub
jne
cmp
add
jo
pusha
repnz
adc
add
pop
test
sub
fcomp
adc
fcomp
pop
fmul
fstp
adc
or
fs
jb
jle
les
push
aad
or
push
push
push
sbb
jg
push
jmp
xor
retf
fdivr
add
sub
jb
or
xchg
xchg
pop
ret
jae
fwait
mov
cmps
cmp
mov
fdiv
shl
mov
push
push
jmp
adc
and
mov
mov
push
xor
pop
push
sub
or
adc
or
test
or
ret
xor
or
mov
sbb
pop
icebp
nop
addr16
in
fcom
out
aam
add
push
mov
lahf
or
or
or
mov
inc
inc
dec
retf
sbb
out
(bad)
(bad)
pop
xor
inc
lock
lock
pop
or
cs
mov
push
or
lods
pop
add
out
aam
push
in
sub
in
add
pop
add
loope
call
add
leave
mov
in
or
jo
cmp
leave
stos
ins
mov
xor
inc
fsubr
arpl
jl
je
xchg
cmp
sub
sub
add
adc
int
scas
push
les
lahf
lods
aad
retf
xchg
sub
inc
(bad)
out
(bad)
xchg
mov
enter
mov
sbb
adc
in
push
(bad)
jl
dec
mov
ins
es
add
fdiv
xor
fidivr
mov
add
mov
or
pop
jl
fsubr
aam
xor
rol
mov
add
and
push
dec
and
dec
movs
enter
xor
or
inc
fcom
cmp
mov
and
in
pop
fmul
clc
fwait
es
test
or
or
cmp
stc
popa
hlt
mov
jmp
mov
jmp
je
sub
je
sbb
push
add
mov
jle
test
and
arpl
test
mov
push
ins
cs
je
lock
mov
(bad)
loopne
add
jge
mov
pop
jb
in
imul
mov
jo
add
mov
sahf
dec
adc
add
pop
mov
shl
jns
daa
icebp
pop
je
jne
ss
jmp
fs
push
or
in
jle
or
xor
in
mov
addr16
sbb
mov
xchg
ret
jae
sub
and
icebp
adc
mov
inc
pusha
add
push
ins
add
or
out
cmp
add
pusha
iret
push
and
nop
push
push
enter
mov
sub
pop
add
fidiv
rol
repz
cwde
lock
adc
das
push
out
mov
sbb
fdivr
add
mov
jecxz
sti
call
jmp
xchg
xor
inc
movs
loopne
push
cld
fcomp
inc
sbb
aaa
je
adc
push
cmp
lods
mov
cld
mov
sbb
push
inc
retf
rcr
mov
sar
mov
xchg
out
mov
stc
push
(bad)
sti
push
sbb
sub
lahf
push
psubq
movs
shl
cs
add
mov
push
pop
dec
addr16
mov
das
movs
pop
mov
sbb
dec
iret
and
or
in
cmp
mov
adc
hlt
movs
imul
sbb
ins
and
inc
xor
loope
push
ins
pop
mov
and
inc
lds
sub
pop
or
jne
outs
or
add
push
fadd
in
test
inc
ret
loope
pop
pusha
mov
jg
push
xchg
fcmovnbe
dec
add
dec
or
lahf
xchg
sbb
pop
stos
rol
pop
add
mov
sbb
out
ja
pop
adc
push
sub
inc
xchg
fdiv
sub
push
test
sbb
add
xchg
jo
movaps
fsub
sbb
push
pop
push
aam
push
ins
or
cmps
sbb
jmp
cmp
jg
cmp
jne
shr
sbb
sbb
fbstp
sbb
into
push
fsub
pop
dec
call
lock
pop
inc
jns
aas
xchg
addr16
rcl
add
sar
retf
std
iret
and
adc
jmp
cmp
sub
and
and
pop
push
sub
pop
outs
in
push
pop
aam
adc
js
ror
loopne
cld
or
je
fiadd
mov
imul
fs
mov
dec
out
mov
mov
or
jge
nop
mov
inc
clc
cmps
in
push
loopne
add
jns
dec
loopne
les
xchg
outs
fsubp
mov
pop
adc
rcl
int3
mov
ds
cmp
add
(bad)
cmp
push
int
lea
cmp
and
into
je
(bad)
fsub
leave
inc
pop
adc
cmp
cmp
je
jmp
mov
je
jmp
xor
pop
push
jmp
and
ret
mov
shl
pop
or
push
shl
push
enter
sahf
scas
into
mov
test
rcr
lods
es
add
mov
psraw
cld
mov
pop
cld
cmp
movaps
inc
sbb
jo
arpl
mov
ins
mov
mov
adc
cmp
test
jl
in
js
push
cs
dec
adc
add
mov
and
jae
imul
mov
shr
cmps
cdq
adc
lea
push
bnd
pop
outs
cld
xchg
jmp
sub
cwde
mov
mov
movs
test
add
sub
and
jae
loope
loope
jge
push
jmp
scas
test
mov
sub
cld
std
rol
ret
jmp
jae
imul
cmp
cmp
jmp
or
repnz
mov
mov
jns
push
call
mov
pop
(bad)
loopne
lock
jb
ja
xor
je
ret
cmps
mov
pusha
mov
(bad)
sbb
call
dec
adc
fwait
add
loope
cmp
les
in
mov
idiv
mov
mov
inc
clc
test
or
test
mov
in
mov
add
sbb
mov
inc
and
adc
aaa
neg
adc
sbb
clc
dec
mov
pop
adc
mov
clc
add
shl
push
js
push
fldcw
xchg
adc
jo
mov
add
adc
in
mov
ja
dec
das
add
and
sahf
mov
adc
fisub
add
int3
mov
push
cmp
jne
cmp
mov
pop
call
cld
popf
jp
add
clc
movs
mov
xchg
dec
xor
mov
xor
pop
mov
imul
mov
out
jge
pop
dec
xor
inc
hlt
xchg
adc
xor
fs
hlt
or
mov
sub
test
and
mov
pop
push
sub
dec
mov
cmp
mov
outs
loopne
ror
jmp
imul
dec
jmp
dec
test
jl
and
cmp
pop
test
or
sub
and
(bad)
jns
dec
or
inc
in
mov
jmp
adc
lea
mov
add
mov
sbb
push
ret
pop
add
xor
cmp
dec
test
js
or
push
adc
inc
jmp
push
pop
adc
(bad)
cmc
inc
dec
iret
xor
test
jg
adc
mov
inc
inc
fmul
cmp
nop
dec
loopne
jl
push
pop
ror
push
push
inc
inc
inc
jge
mov
or
shl
hlt
pop
int3
mov
ss
and
cmp
jge
lods
(bad)
add
(bad)
jne
sbb
popa
xchg
xchg
loop
and
into
addr16
and
add
ret
and
mov
jle
jmp
not
cmp
pop
sti
dec
xor
cmp
jle
adc
jp
mov
add
addr16
pushf
and
shl
mov
ret
pop
rol
mov
ret
stc
xchg
out
fiadd
pop
mov
adc
ret
push
dec
daa
mov
cmp
outs
movs
sub
cs
pop
push
ret
fisubr
jecxz
imul
pop
and
sahf
or
adc
lsl
dec
fldenv
or
xchg
imul
inc
imul
sub
and
outs
sub
std
popf
xchg
or
xor
cmp
adc
sbb
add
add
popa
mov
and
icebp
and
xlat
in
or
jb
and
fstp
sbb
fnstenv
add
dec
inc
xor
jmp
mov
inc
xchg
or
mov
sbb
pop
add
int3
sar
inc
lds
push
loopne
xchg
and
dec
jne
clc
pusha
pop
es
in
icebp
mov
in
lds
inc
jmp
popf
or
adc
mov
and
inc
sub
aad
fdiv
mul
lock
je
pop
inc
jbe
xchg
jge
mov
lahf
sub
and
loop
mov
imul
and
inc
sub
jle
add
push
push
push
rcr
leave
mov
sub
aaa
mov
(bad)
cmp
sub
ror
popf
mov
sar
cli
jbe
nop
int3
sbb
cmp
fimul
mov
adc
xor
jbe
adc
(bad)
imul
jne
repz
cmp
adc
xlat
dec
cld
adc
scas
add
inc
inc
inc
(bad)
jne
jg
loope
add
pop
dec
in
push
mov
fs
sub
aaa
pop
pop
aaa
pop
sub
jb
inc
mov
ret
lds
stos
(bad)
sbb
retf
jne
add
neg
ret
or
or
push
pop
jne
sbb
adc
out
or
pushf
(bad)
or
or
and
sahf
xor
xchg
adc
sbb
add
ret
call
mov
mov
jmp
mov
jle
dec
jno
scas
mov
xchg
punpckhdq
ins
aaa
stos
ss
xchg
ror
mov
(bad)
ret
pop
or
pop
push
test
or
mov
jne
push
retf
fisttp
hlt
dec
pop
ret
in
dec
or
vpextrw
lds
or
adc
jmp
mov
loopne
xor
inc
xor
pusha
sub
lods
enter
inc
call
sti
xor
cmp
and
daa
fbld
xchg
fmul
das
mov
imul
in
or
mov
fwait
aam
enter
pop
stc
movs
fcomp
mov
push
fnstenv
push
(bad)
sbb
jle
sub
imul
mov
add
mov
pushf
mov
hlt
enter
or
enter
inc
ds
out
add
jl
dec
xor
daa
and
aas
sbb
rcl
stc
hlt
mov
and
popa
mov
push
mov
push
sbb
cmp
bound
daa
sub
or
cmp
adc
sahf
out
mov
push
repnz
test
push
ins
das
fs
outs
cmp
add
fs
(bad)
frstor
add
pop
jo
push
inc
push
fstp
pop
popa
pop
sbb
push
pop
cmp
pop
push
cmp
xchg
pop
cmp
lods
ss
bound
jne
or
nop
lock
mov
mov
jle
jmp
lea
adc
hlt
sub
and
fchs
pop
lods
jnp
enter
inc
retf
(bad)
ret
daa
sar
push
mov
int3
pop
ror
in
adc
fs
cwde
cmc
imul
and
push
pop
pop
arpl
adc
xor
in
pop
sbb
hlt
xchg
call
rcr
jge
or
retf
cld
scas
test
hlt
mov
in
mov
sbb
cmp
pop
adc
push
push
outs
mov
je
popa
jae
inc
jb
sbb
push
jo
(bad)
or
mov
(bad)
jns
aam
or
fs
gs
outs
outs
jmp
mov
rol
aaa
mov
call
adc
inc
jl
pop
jg
(bad)
push
loope
or
xor
inc
jmp
pop
pop
ret
pop
hlt
jmp
dec
lods
or
inc
add
push
loop
in
adc
cmc
in
mov
inc
fsubr
js
cmp
pop
adc
or
pop
jmp
xor
or
sbb
jmp
add
call
add
xor
lea
cmp
adc
dec
rol
adc
outs
cmp
jmp
cmp
lea
push
leave
clc
das
popa
inc
ret
lock
or
add
sti
loope
nop
inc
cmp
sub
popf
sub
mov
mov
add
xchg
cmp
xchg
adc
inc
in
adc
cwde
movs
sbb
cmp
ins
mov
rcr
adc
pop
jge
popf
xchg
adc
sar
mov
pop
and
push
rcl
cmp
ja
in
loop
xchg
jl
xor
cmps
in
inc
add
lods
cdq
(bad)
xchg
aaa
mov
hlt
mov
inc
inc
loope
add
xchg
and
dec
cld
jecxz
add
(bad)
dec
dec
sub
lock
es
cwde
dec
mov
sub
or
popa
or
dec
pop
sub
push
gs
push
sbb
adc
and
test
call
push
test
add
icebp
mov
test
adc
xchg
fist
jno
fwait
test
adc
push
add
or
mov
iret
ror
and
or
add
push
mov
inc
pop
push
add
push
push
mov
and
sbb
pop
push
xor
sbb
mov
fucomi
mov
imul
push
cdq
icebp
add
ret
cli
add
dec
inc
dec
(bad)
push
imul
cmp
jecxz
push
mov
rcl
jecxz
xchg
mov
mov
jnp
mov
jne
cmp
je
cmp
jle
inc
(bad)
dec
push
sub
ret
mov
jno
dec
pop
sub
jge
jne
or
in
cmp
in
add
adc
ror
sub
push
ss
xchg
pop
and
mov
push
movs
jmp
xchg
cli
imul
sbb
mov
mov
push
adc
adc
jb
sar
inc
js
jg
test
mov
add
call
dec
ret
xchg
out
daa
push
push
mov
call
int3
pop
mov
popa
icebp
dec
cdq
rdtsc
cld
mov
in
jmp
jne
movzx
cld
dec
ss
pop
mov
sbb
shr
inc
sbb
(bad)
pusha
xlat
cmp
aaa
push
xor
and
aaa
out
cmp
pusha
movs
mov
rcl
sub
and
xchg
add
aaa
dec
xchg
cs
div
adc
push
out
leave
jne
mov
scas
push
in
mov
inc
or
mov
int3
addr16
inc
mov
adc
push
xor
add
cli
or
cmp
loope
test
dec
aam
in
lea
jbe
and
(bad)
sbb
inc
mov
jge
sbb
es
mov
sbb
shl
sbb
jb
inc
xlat
sbb
add
dec
outs
fwait
and
add
dec
sbb
inc
xchg
stos
adc
xchg
clc
out
mov
out
(bad)
out
mov
lea
mov
(bad)
mov
pop
sub
mov
imul
jle
mov
dec
(bad)
(bad)
dec
in
dec
xlat
pop
ins
adc
sbb
adc
adc
adc
inc
jl
xlat
call
jge
mov
out
inc
sub
xchg
or
and
xor
sub
nop
popa
sbb
jge
mov
xor
out
outs
test
sbb
dec
cmp
mov
inc
sbb
movs
inc
mov
cmp
jne
imul
ret
mov
rcpps
or
sbb
xor
inc
cmc
jo
clc
inc
mov
popa
fcomp
je
call
(bad)
dec
jmp
inc
jecxz
ins
sti
arpl
pop
xor
push
dec
lods
or
jg
xchg
and
fisttp
cmp
pop
sahf
or
ror
cmp
pop
mov
sbb
adc
hlt
(bad)
(bad)
inc
xor
sub
dec
or
je
xchg
inc
ss
jno
loopne
popa
mov
mov
push
shl
or
es
inc
out
stc
cmp
pusha
fdivr
xchg
mov
mov
retf
imul
push
push
jne
cmp
imul
cld
pop
test
mov
sbb
push
add
fnstcw
push
imul
and
imul
mov
xor
rol
pxor
adc
arpl
pop
jl
and
and
adc
push
and
add
enter
push
cld
int
stc
stos
mov
push
hlt
dec
or
dec
add
test
cld
sbb
mov
lahf
out
jl
dec
in
ror
mov
xor
xor
aam
int3
out
fdivp
mov
push
push
dec
mov
movs
lods
in
movs
pop
fmul
cmp
xchg
ds
mov
mov
je
jo
dec
repz
fs
pop
jle
cmps
jne
lods
push
dec
dec
mov
inc
xchg
repz
cmp
(bad)
and
fidiv
sub
xor
sbb
sbb
inc
ds
dec
sub
inc
and
daa
out
in
and
mov
pop
xchg
iret
enter
mov
adc
dec
ja
dec
sahf
adc
pop
repnz
add
dec
add
dec
fimul
cld
sbb
hlt
out
test
in
pop
fs
sahf
xchg
dec
call
dec
sahf
xchg
ja
push
rcr
fdivr
aam
shr
loopne
xor
popf
int3
push
js
enter
dec
faddp
mov
iret
enter
mov
xor
fcom
mov
test
inc
movs
pushf
mov
sar
js
enter
(bad)
sbb
nop
jp
jns
pop
add
or
fisttp
fisttp
jmp
call
or
nop
into
jecxz
sar
fcom
aam
addr16
mov
mov
movs
lods
cmps
adc
and
in
inc
and
sub
push
jp
xor
cld
or
mov
movs
pop
lods
fadd
daa
add
inc
enter
aaa
xor
mov
dec
sbb
sub
push
repnz
(bad)
sub
sbb
dec
pop
pop
frstor
aad
adc
push
and
cwde
xchg
(bad)
aas
ror
nop
pop
inc
je
addr16
push
dec
push
dec
pop
push
dec
or
outs
nop
and
jl
invd
dec
push
gs
imul
and
ror
pop
xchg
nop
lods
push
pop
push
inc
pop
inc
inc
push
repnz
and
add
ror
aam
setae
enter
xchg
xchg
xchg
mov
enter
fadd
in
jl
xchg
(bad)
pmuludq
jge
add
add
cmp
cmp
push
sbb
test
cli
mov
push
pop
rcl
fld
adc
dec
hlt
pop
or
dec
mov
cwde
outs
cmp
or
inc
enter
(bad)
(bad)
dec
mov
dec
std
rol
(bad)
sub
sbb
push
sbb
inc
xor
push
pop
xor
inc
xlat
jbe
xchg
pop
and
sbb
loop
enter
jmp
in
ret
add
cmps
in
addr16
sub
and
adc
cmp
sub
clc
clc
lea
nop
xor
pop
inc
sbb
adc
mov
std
inc
add
xlat
mov
adc
enter
or
mov
or
or
or
adc
popa
mov
jecxz
dec
and
mov
pusha
nop
fbld
cmp
ja
fistp
and
and
adc
pop
xor
add
pop
pushf
std
push
push
cmp
add
dec
jmp
sbb
jno
push
iret
adc
add
cmp
fnstenv
in
call
in
sar
jns
clc
adc
xor
mov
fldenv
mov
ja
push
(bad)
ins
ret
push
mov
clc
and
hlt
rcr
shr
or
cdq
fs
inc
adc
sbb
cdq
movs
jb
sbb
and
fs
dec
and
fs
dec
es
cmp
dec
es
sub
xor
cdq
fs
xor
jb
fs
cmp
movs
jb
movs
fs
mov
cdq
in
cdq
inc
sbb
jl
jb
movs
jb
mov
jns
movs
pushf
push
pusha
add
int3
mov
jns
add
pop
mov
fsub
add
and
shl
xor
mov
das
or
inc
push
jl
mov
add
outs
je
fs
pop
(bad)
mov
dec
jne
inc
imul
retf
imul
jb
out
pop
stc
repnz
outs
jb
ins
jo
inc
jb
ins
push
je
cwde
nop
and
pop
push
cmp
xor
and
adc
jb
adc
inc
jns
(bad)
pop
enter
outs
iret
and
inc
repnz
xor
adc
or
and
mov
add
and
cmp
push
xor
and
bound
push
inc
imul
xor
inc
sahf
enter
mov
pop
push
add
inc
xlat
mov
xor
pusha
dec
push
popa
push
fmul
(bad)
jns
adc
sub
dec
pop
push
test
mov
xor
push
and
xchg
lock
inc
jne
sub
mov
(bad)
nop
sbb
pop
xor
cmp
addr16
or
jae
mov
pop
add
(bad)
xchg
fild
es
sub
ins
mov
nop
mov
add
pop
shr
inc
test
gs
or
pop
or
push
and
mov
pop
pop
push
inc
jb
retf
and
(bad)
sti
sub
inc
and
inc
popa
adc
(bad)
mov
adc
inc
fimul
cmp
inc
scas
sbb
outs
or
adc
mov
push
or
push
or
xor
cmc
inc
jb
clc
iret
mov
mov
push
pop
dec
ins
jo
xchg
and
and
cmc
iret
mov
sub
inc
sti
(bad)
and
in
(bad)
or
popa
mov
pushf
cmc
xor
loop
pop
push
(bad)
lods
or
pop
xor
xor
fimul
popa
sbb
call
add
out
mov
add
mov
or
add
(bad)
call
or
in
enter
xor
ret
out
in
inc
lock
jmp
fistp
nop
or
nop
sysenter
dec
xchg
inc
and
inc
(bad)
cmovo
enter
adc
inc
dec
cmp
adc
nop
pop
jb
dec
or
and
pop
adc
add
jge
into
cmp
add
jg
pop
sbb
fld
int
fisubr
es
sub
pop
add
sti
imul
js
add
dec
je
sbb
mov
cmp
fldcw
int
push
nop
es
jbe
add
(bad)
adc
ins
dec
mov
or
lock
jae
dec
clc
mov
jl
jns
dec
hlt
mov
or
stc
xchg
lock
xchg
mov
or
nop
out
call
mov
aam
loopne
pop
sbb
xor
push
lock
mov
adc
add
enter
pop
ror
inc
call
rcr
js
fcomp
enter
jne
ret
cmps
jns
std
scas
test
push
xor
pop
dec
dec
loopne
or
jno
push
out
push
les
sub
pop
push
int
jmp
out
push
fucom
inc
push
or
jne
jmp
xor
enter
inc
jmp
lahf
inc
jecxz
mov
push
sbb
cmp
(bad)
mov
lock
add
outs
daa
fs
xor
xchg
movs
mov
test
mov
call
inc
mov
add
mov
push
cmp
pop
mov
rol
mov
dec
cli
rol
shl
xchg
and
lahf
bound
push
add
push
jecxz
test
iret
or
repnz
cmp
mov
dec
add
xchg
jne
pushf
xchg
sti
lea
ins
cdq
shr
push
add
mov
fist
push
dec
push
add
pop
in
pop
mov
pop
pop
inc
cs
dec
clc
test
bound
pop
mov
je
sbb
inc
jne
cs
test
dec
loopne
sub
inc
shl
(bad)
add
clc
jmp
and
and
pop
or
or
jl
inc
xor
lea
in
(bad)
push
call
push
stc
rcl
test
aaa
jnp
sub
xchg
inc
sub
inc
pop
jmp
mov
sahf
jmp
leave
ror
mov
mov
in
xor
dec
repz
dec
jnp
mov
xchg
jbe
call
pop
in
jnp
add
xchg
daa
in
xor
jne
push
cld
lock
and
push
jl
in
fwait
lods
adc
adc
or
add
fmul
jne
sbb
and
je
mov
scas
cmp
lds
fsubr
xor
je
fld
jmp
retf
pop
jg
push
je
retf
jle
icebp
les
sub
or
or
rol
mov
fcmove
sbb
jne
in
add
xor
ret
xchg
cmp
jne
dec
cmp
ds
shr
pop
dec
imul
cmps
dec
scas
jae
jnp
or
mov
adc
pusha
jb
xchg
dec
pop
(bad)
add
cmp
add
push
je
sub
data16
and
sub
clc
push
outs
jne
cmp
add
fwait
adc
sub
jmp
sub
pop
inc
inc
pop
pop
lahf
push
retf
test
test
ror
dec
cmp
adc
cli
rcl
fsubr
aad
je
arpl
lahf
inc
in
pop
push
pop
mov
test
(bad)
clc
fimul
nop
stos
add
pop
movs
aad
or
sbb
in
adc
test
loopne
in
add
inc
loopne
mov
std
stc
push
push
jno
xchg
imul
loopne
movs
in
push
jbe
adc
repnz
pop
or
nop
cmps
dec
call
imul
mov
sub
pop
fld
mov
jmp
push
jecxz
mov
jmp
sub
xor
test
notrack
mov
fimul
push
sbb
(bad)
mov
add
and
and
or
cmp
add
mov
test
retf
cmp
inc
(bad)
adc
sbb
jl
sbb
dec
(bad)
push
jp
aam
xor
sub
pop
idiv
repz
pop
jne
push
daa
bound
(bad)
cmps
imul
or
int3
pop
or
rol
mov
inc
scas
dec
lock
repnz
adc
jne
(bad)
xor
lock
iret
xor
or
test
pcmpgtb
lock
and
(bad)
iret
fdiv
push
pop
cld
inc
pusha
mov
out
call
pop
and
scas
xchg
mov
adc
inc
sub
inc
pop
enter
dec
push
cmc
pusha
or
sbb
jb
test
inc
sbb
imul
lea
scas
jge
jb
xchg
pushf
mov
push
stc
push
repz
mov
clc
push
push
mov
pusha
adc
lds
jp
xor
int3
add
in
jae
push
push
pop
mov
stos
daa
adc
and
adc
add
pushf
std
cmps
cmp
sar
pop
or
adc
cmp
adc
jmp
jmp
push
aaa
in
xor
jmp
mov
inc
pop
pop
xchg
rol
cmp
mov
jns
jne
dec
or
(bad)
adc
or
add
in
lock
mov
pusha
shl
sub
push
jns
mov
push
clc
iret
repz
add
sbb
dec
bound
stc
cmp
push
pop
sub
push
(bad)
out
jmp
mov
cld
add
dec
sbb
sub
and
adc
ror
or
xlat
pop
add
ret
push
mov
xor
in
hlt
dec
loopne
dec
inc
add
int3
leave
and
clc
(bad)
dec
repnz
xor
sbb
and
aaa
jb
dec
dec
ror
adc
mov
pushf
and
inc
pop
cwde
pop
repnz
pusha
clc
jl
in
inc
jle
pop
cwde
and
push
lahf
sbb
les
mov
adc
cmp
sub
add
dec
sbb
pusha
jmp
callw
mov
or
fbstp
jecxz
aaa
iret
add
inc
dec
test
es
fwait
mov
xlat
mov
les
add
fild
or
xchg
fisttp
sti
(bad)
std
jg
sub
xor
jle
mov
lea
sbb
test
and
ds
pusha
test
and
imul
push
cmp
or
push
mov
add
pop
aad
and
adc
mov
in
add
add
(bad)
cmp
push
loopne
cmp
shl
sub
lock
add
jle
dec
inc
inc
cld
scas
in
pop
adc
push
push
outs
sbb
pop
add
push
test
dec
mov
call
adc
shl
mov
or
and
cmp
jmp
mov
iret
repz
mov
repz
out
das
push
in
push
pusha
jns
outs
leave
rol
outs
jle
and
out
mov
je
movs
push
aad
or
data16
push
ss
sub
pusha
rcr
jbe
jle
in
clc
pop
cmp
pop
imul
aam
pop
(bad)
xor
sbb
mov
sbb
inc
rol
xchg
es
aaa
and
adc
add
xchg
mov
push
and
pop
dec
je
jmp
mov
pop
add
je
fwait
or
test
push
push
ficomp
mov
(bad)
mov
test
repz
pcmpeqb
mov
jge
iret
out
and
push
and
data16
cmps
pop
repnz
fadd
ja
xchg
xchg
jns
mov
add
mov
fldcw
xchg
mov
sub
xchg
fwait
or
pop
add
inc
jo
lods
jmp
sbb
fidivr
adc
push
push
mov
push
and
or
aaa
or
add
jmp
add
mov
add
push
xor
pop
push
not
mov
pop
and
enter
or
add
sbb
xor
cmp
adc
or
xchg
pop
push
daa
cmp
rcl
test
mov
pop
or
pop
adc
add
and
push
push
ret
mov
dec
lock
jbe
and
xor
leave
adc
sub
out
push
in
cmp
pop
dec
push
push
sbb
and
pop
push
adc
call
adc
inc
pop
push
mov
add
sahf
neg
add
stc
xor
push
sbb
and
jle
jns
(bad)
out
pop
nop
mov
or
mov
sub
mov
and
jns
add
xchg
xchg
pop
pop
adc
jb
mov
and
add
jl
sub
xor
push
or
adc
nop
sub
add
lds
and
mov
and
inc
cmps
adc
adc
stos
adc
iret
loop
sahf
div
(bad)
push
lock
add
or
sbb
adc
iret
adc
sbb
test
pop
mov
lock
adc
mov
mov
adc
pop
and
or
xchg
hlt
inc
mov
les
and
mov
jns
fld
in
or
jne
adc
shr
sbb
popf
or
mov
add
add
sub
test
fdiv
jecxz
(bad)
sub
enter
adc
mov
dec
(bad)
dec
test
rcr
sub
cdq
add
xchg
push
hlt
jmp
dec
loopne
add
mov
mov
enter
xor
inc
mov
iret
and
cmc
add
adc
mov
jg
call
and
cs
mov
outs
call
test
sbb
(bad)
outs
aas
(bad)
inc
es
inc
sbb
aaa
pop
enter
aam
retf
out
ucomiss
cmp
push
bound
sahf
mov
fdivr
push
sub
lods
mov
iret
repz
xor
pop
outs
adc
pop
(bad)
dec
lods
xchg
in
push
push
mov
ins
inc
aaa
and
fsub
sub
add
pushf
sbb
and
sbb
push
cdq
sub
mov
and
and
jle
pop
push
or
out
mov
pusha
inc
and
inc
xchg
adc
pusha
outs
xchg
and
arpl
inc
test
cs
das
pop
jns
cmps
cmp
mov
out
jmp
out
sahf
outs
pop
sub
push
gs
adc
lahf
ror
daa
scas
das
fstp
mov
and
add
and
pop
inc
xor
push
sub
add
js
mov
fiadd
adc
add
inc
out
sub
daa
jmp
retf
and
inc
nop
push
cmp
sbb
sub
cmp
adc
inc
jmp
lea
inc
push
and
dec
pushf
push
fs
push
mov
jmp
ins
add
loope
pop
jne
dec
xor
test
adc
or
mov
mov
xor
xchg
fs
in
xor
out
out
push
rol
in
stc
jb
nop
out
xor
dec
jmp
sbb
jmp
imul
adc
scas
inc
add
xor
sahf
out
sahf
aaa
push
fs
popf
cmp
leave
inc
xor
jl
ins
repnz
xor
daa
call
mov
mov
cdq
in
test
add
call
dec
xchg
adc
pusha
iret
sbb
sbb
inc
mov
push
scas
jp
xor
dec
rcr
fild
pop
sub
sub
add
mov
add
sbb
or
push
sbb
and
rcl
mov
int3
sbb
clc
adc
push
das
sbb
mov
pop
add
loope
dec
mov
hlt
push
add
sahf
out
adc
sub
jae
cmps
pop
repnz
inc
sbb
pop
xchg
push
out
sahf
popf
test
or
inc
int
repnz
ret
mov
fst
pop
push
sbb
xchg
sbb
pop
rcl
push
imul
sbb
inc
mov
jne
and
mov
popa
cmp
inc
jmp
loopne
cmp
div
int3
xchg
add
push
xor
pop
leave
xor
lock
(bad)
lds
loopne
rol
cmps
fld
fstp
dec
ds
fwait
jmp
add
daa
shl
(bad)
xchg
and
out
lock
pusha
add
test
adc
add
adc
push
xor
daa
jns
popa
mov
clc
fwait
and
sub
leave
xor
clc
push
inc
scas
call
loopne
sub
jns
out
push
push
jbe
mov
lods
mov
repz
fnstsw
push
pop
cmp
cmc
or
jns
pop
push
xor
mov
arpl
sub
inc
fbstp
pop
repnz
pop
fcmovnu
pusha
in
jl
adc
imul
aaa
sbb
dec
cmp
inc
cmps
jbe
neg
and
inc
or
push
sub
add
mov
mov
repnz
in
or
inc
dec
dec
repz
and
cmp
or
sub
and
je
int3
iret
rcr
and
cs
aaa
in
repz
jb
cmp
push
out
rcl
push
aad
sbb
sahf
jmp
aam
push
jbe
sbb
mov
sbb
dec
cmc
inc
rcl
adc
icebp
sub
gs
mov
mov
jno
dec
dec
mov
jnp
out
loopne
ins
jmp
inc
adc
adc
jmp
jno
imul
test
dec
xchg
cmp
les
jg
stos
div
repnz
outs
or
push
dec
repz
int3
in
sti
or
lea
push
sbb
cs
inc
push
cmp
cmp
xchg
leave
xor
add
sbb
fisttp
xchg
fild
sub
mov
sbb
push
movs
and
gs
inc
(bad)
fild
sub
dec
jle
inc
repnz
sbb
jo
das
add
inc
shr
push
lahf
and
dec
adc
xchg
xchg
mov
xchg
call
pop
mov
in
movs
xor
loopne
dec
dec
dec
loopne
inc
mov
pushf
add
xchg
adc
mov
mov
adc
pop
mov
ds
fld
test
ds
data16
cmp
les
or
xor
xor
or
call
sub
cmp
and
mov
mov
push
mov
(bad)
rcr
out
add
test
lahf
out
mov
fs
xor
or
xor
and
gs
(bad)
movs
jge
push
sub
xchg
enter
sub
add
pop
xor
ret
rcl
sub
addr16
push
mov
xor
jo
or
inc
or
inc
pop
repnz
pop
pop
inc
ins
jp
imul
scas
push
ss
or
repz
(bad)
lock
sbb
cmp
aaa
nop
sub
adc
cmp
mov
xor
xchg
or
cmp
fwait
push
and
enter
and
inc
add
(bad)
xchg
inc
or
add
in
cmp
push
push
and
or
inc
in
fild
jb
add
push
sbb
leave
push
fild
leave
add
fild
das
xchg
add
inc
test
add
jge
in
pushf
cmp
ins
fisub
fs
mov
sahf
cmps
stc
push
or
push
bound
test
pop
xchg
jns
ins
repnz
cmp
scas
retf
in
sub
push
and
aaa
inc
jnp
add
or
repnz
(bad)
xor
rcl
jo
jl
stos
pop
mov
adc
mov
add
mov
in
inc
inc
xor
stos
inc
mov
mov
inc
sbb
pop
ror
fdiv
nop
push
inc
pushf
jle
xchg
cmps
cmp
and
add
sub
cmps
jge
cmp
inc
ins
push
adc
daa
mov
sbb
cld
inc
inc
daa
fild
dec
adc
push
stos
pop
sub
xchg
and
test
mov
mov
mov
mov
pop
pop
mov
sbb
fisub
xor
xadd
xlat
(bad)
and
lods
cmp
aam
inc
js
jle
inc
retf
arpl
in
dec
pop
and
cmps
xor
les
popf
push
mov
xchg
and
or
push
cli
dec
push
and
jae
jae
inc
cld
mov
mov
dec
movs
jmp
inc
lock
bound
int
fdiv
jnp
add
and
call
xor
dec
dec
shl
in
sub
shr
inc
inc
add
and
add
bound
cmp
ja
dec
push
(bad)
and
sbb
call
arpl
push
ss
popf
dec
cmp
adc
sbb
scas
dec
shl
aaa
push
and
cmp
xor
leave
mov
nop
out
cs
test
or
sub
and
adc
inc
rcl
cmp
push
test
push
add
in
gs
dec
ror
or
adc
jb
cwde
in
outs
rcl
or
jo
stos
add
imul
jle
rol
fiadd
dec
and
cmp
repz
mov
stc
sahf
out
dec
lods
fcomp
or
sahf
out
adc
test
add
aas
sbb
add
dec
adc
dec
cmp
lea
pop
add
data16
clc
sbb
xchg
pop
push
(bad)
cmp
sub
stc
cmps
fadd
rcr
nop
xchg
lock
add
rcl
iret
aaa
push
add
inc
inc
call
xor
sbb
ror
dec
push
loopne
jg
xor
lods
shl
xchg
dec
xor
pop
loope
fdivr
jb
(bad)
xor
aam
nop
out
xor
ror
fld
int3
cmp
jne
shr
shl
ins
int
mov
mov
call
sub
sub
xor
push
(bad)
ror
in
mov
add
push
dec
repz
lea
pop
pop
dec
ja
fucom
cmp
ds
pop
sub
shr
inc
bound
mov
dec
es
and
xchg
sar
mov
lods
jno
mov
mov
ret
retf
mov
in
cmp
outs
xchg
cmp
push
popa
and
loope
iret
fwait
test
push
imul
es
outs
mov
(bad)
shl
fld
stos
or
cwde
jmp
add
aaa
xchg
dec
mov
jmp
pushf
nop
nop
inc
sub
loope
dec
dec
sahf
cmp
jb
mov
ja
mov
pop
loopne
cli
or
retf
add
adc
nop
mov
add
mov
sub
push
and
lods
(bad)
ret
in
push
mov
push
xor
in
inc
inc
cwde
call
cmps
xchg
push
inc
pusha
xchg
push
adc
xor
enter
push
in
xchg
xor
jne
pusha
mov
fistp
in
dec
in
jb
ds
in
sub
adc
loopne
es
test
cmp
test
icebp
repz
out
std
and
cmps
stc
cmp
pushf
mov
out
dec
mov
pop
or
es
aas
pop
js
cmp
pushf
fs
das
or
dec
movs
dec
es
stos
or
mov
xor
inc
cmp
cwde
cmp
sbb
lods
cmp
or
in
inc
mov
or
(bad)
loopne
or
pop
mov
ret
daa
pop
mov
lods
adc
add
lock
xor
jl
adc
push
push
and
jl
mov
xchg
inc
xor
outs
adc
xor
and
push
sahf
cmps
cmp
into
push
pop
ins
push
mov
jns
or
sub
cmp
out
repz
pop
push
je
scas
or
adc
retf
push
and
(bad)
in
call
aaa
lea
or
mov
mov
imul
mov
mov
mov
cmp
and
lods
dec
sbb
adc
lods
fwait
test
or
and
popf
pop
mov
es
add
pop
mov
and
dec
out
cwde
pushf
jno
and
ficomp
xchg
jecxz
dec
inc
pusha
xchg
popf
xchg
pop
mov
cwde
nop
cmp
dec
mov
jmp
adc
cwde
mov
mov
and
shl
shl
xor
test
xchg
mov
push
pop
or
or
fisttp
and
dec
pusha
and
sub
inc
inc
sub
stc
or
jg
je
pushw
jg
std
das
outs
or
bound
or
mov
add
jmp
std
or
js
dec
cmps
add
or
push
stos
jns
data16
push
cmc
pop
sar
test
aam
and
mov
clc
ja
or
add
in
data16
and
(bad)
dec
retf
stos
lods
movs
hlt
ret
pop
sbb
repz
pushw
cmp
push
lea
sub
outs
inc
ins
cs
xchg
dec
or
in
rol
pop
inc
lock
scas
or
push
and
add
pop
arpl
xor
js
cmps
aam
mov
pop
mov
add
mov
call
inc
lahf
ss
lahf
repnz
adc
mov
push
or
xor
mov
and
add
aas
push
jmp
sub
xchg
xor
dec
bound
jmp
mov
push
pop
dec
pop
xor
or
add
(bad)
repnz
or
cmps
dec
lahf
and
ficomp
outs
fstp
fwait
data16
pop
add
fistp
in
sbb
or
test
scas
fadd
push
or
push
lahf
cmp
xor
(bad)
xchg
sbb
inc
or
inc
sub
or
or
xchg
add
mov
ror
mov
lahf
cld
add
inc
ins
jo
jns
jo
and
test
or
into
xor
lea
pop
push
mov
push
ds
pop
jnp
ins
add
inc
outs
jne
xchg
or
jg
jmp
add
ins
mov
(bad)
mov
addr16
mov
dec
imul
sbb
repz
inc
pop
lahf
mov
aam
aas
inc
arpl
adc
push
pushf
pop
and
inc
adc
adc
push
rcl
cmp
pop
xchg
enter
shl
aaa
ss
xchg
loopne
lock
int
jle
jge
and
adc
push
dec
cmps
call
dec
push
mov
inc
sti
not
cmp
in
push
add
push
jb
xor
cmp
movs
hlt
retf
xchg
cld
mov
or
aaa
loope
pop
and
push
or
jg
xor
or
mov
lods
test
dec
pusha
test
repnz
je
inc
fst
jb
jmp
and
(bad)
aas
in
cmps
test
inc
enter
outs
inc
outs
jns
inc
dec
sub
test
pushw
aas
aad
or
pusha
or
push
cli
push
mov
imul
adc
sbb
ja
nop
fisubr
push
stc
ins
cld
pop
imul
push
ins
dec
xor
jl
jnp
sbb
cmp
cs
inc
lock
out
jb
imul
cmp
in
mov
xor
cld
scas
push
cmp
ret
out
push
adc
popf
shl
and
hlt
pop
pop
jge
and
int
and
jnp
je
or
imul
(bad)
adc
into
add
aad
jo
or
pop
mov
lea
test
cmp
inc
pop
and
add
push
add
ficomp
inc
add
add
mov
fimul
and
adc
adc
inc
mov
push
sti
or
lods
std
scas
pusha
jo
jo
and
pop
cmp
xor
push
mov
push
test
repz
adc
mov
push
dec
rcl
stos
hlt
movs
loopne
or
cmp
aaa
lock
pop
sub
sbb
mov
stos
ret
daa
lods
add
push
ret
xor
lock
jle
add
stc
mov
push
pop
add
fidivr
cmp
adc
aas
push
leave
xor
cmp
dec
pop
or
jbe
and
sub
call
cmp
das
popa
or
adc
mov
sti
cmp
(bad)
pop
inc
cmp
setg
inc
mov
lods
pop
ds
fiadd
push
fnstenv
loope
xchg
inc
push
daa
bound
add
lahf
das
lock
dec
bnd
push
or
movs
cmps
and
jo
je
mov
xor
dec
sbb
push
add
cmp
dec
gs
push
lock
sbb
ja
mov
loop
or
in
fidiv
hlt
inc
sub
sbb
adc
imul
push
jb
add
pop
fwait
arpl
jne
aaa
rcr
jnp
idiv
mov
ins
adc
mov
and
mov
shl
sbb
repz
and
xchg
xchg
sete
xchg
xchg
cwde
xchg
xchg
xchg
xchg
cdq
call
popf
sahf
lahf
adc
add
xchg
mov
xchg
xchg
lea
xchg
xchg
jno
jae
inc
sbb
les
add
or
xchg
add
dec
push
inc
call
pop
mov
jmp
leave
mov
push
add
mov
test
add
xor
ret
fbstp
jp
aad
ins
jmp
cs
dec
xor
cmp
jle
fcomp
rcr
cmp
mov
mov
xor
in
js
jge
mov
sar
sbb
lock
mov
(bad)
test
ins
add
ror
or
pop
pop
adc
fbld
sbb
mov
push
pop
dec
jo
push
or
sbb
xchg
and
cmp
je
mov
dec
and
sbb
inc
add
and
jmp
mov
and
je
jmp
cmp
sbb
test
or
das
sub
mov
mov
cmp
je
out
push
(bad)
fistp
push
lar
dec
ja
mov
adc
loop
mov
mov
std
dec
sub
push
add
add
cmp
mov
add
mov
xor
or
jle
add
cmp
ss
ds
mov
pop
push
push
adc
add
sar
or
(bad)
or
test
call
(bad)
fnstenv
retf
out
mov
mov
or
sbb
or
xlat
cli
mov
jae
push
mov
and
inc
adc
mov
push
adc
pmaxsw
pop
xchg
outs
sbb
sub
jmp
or
stos
add
(bad)
cld
push
lds
out
xlat
call
test
addr16
lock
jle
mov
jb
inc
cmp
pop
push
ret
call
or
rol
bound
or
enter
stos
mov
inc
or
mov
fadd
and
or
sbb
sub
jo
sub
inc
fmulp
ret
faddp
push
or
xor
jmp
cmp
mov
or
xchg
mov
test
inc
pop
lock
(bad)
cld
and
sbb
popa
mov
scas
push
cmps
mov
push
push
push
add
or
or
fnstenv
aam
xchg
sbb
pop
imul
hlt
xchg
jno
das
pop
scas
imul
or
inc
jp
hlt
sub
hlt
or
scas
popf
cmc
pop
mov
bound
mov
dec
sar
in
fadd
jl
mov
cmp
sub
push
loopne
mov
xchg
xchg
inc
push
jne
xchg
cmp
(bad)
pop
push
push
xor
iret
push
push
inc
data16
pop
ja
imul
xbegin
cmp
xor
xchg
pop
inc
jnp
adc
jmp
loop
loopne
sahf
ja
sahf
out
dec
pop
push
sub
dec
push
pop
mov
jmp
pop
cmps
adc
movs
add
add
outs
pushw
or
mov
cmp
cmp
or
push
stc
fwait
arpl
pop
retf
add
mov
mov
stos
and
cmp
aaa
or
iret
repz
jecxz
push
imul
mov
or
mov
pop
sub
mov
fisub
fistp
or
adc
sub
ja
and
inc
dec
push
pop
jo
mov
xchg
and
add
cmp
jmp
adc
push
xor
iret
or
pop
xchg
pop
fist
jnp
sub
pop
pop
add
enter
push
int3
rcl
std
fild
sbb
adc
ss
adc
fdiv
mov
mov
ja
jae
mov
loopne
inc
pop
adc
into
js
add
or
dec
(bad)
aam
sub
pop
fimul
cmp
jecxz
fprem1
js
pop
retf
mov
jnp
inc
fdivr
mov
mov
inc
mov
neg
mov
mov
fldenv
out
push
(bad)
cmp
pop
mov
pop
dec
add
xchg
inc
ins
nop
dec
sbb
or
and
inc
imul
call
inc
cs
data16
outs
push
sar
mov
sbb
sbb
adc
add
inc
ins
outs
sbb
inc
jmp
lea
mov
ins
jns
inc
ins
popa
nop
scas
dec
dec
xor
mov
push
pop
rol
mov
ss
push
imul
mov
je
ins
neg
ja
or
cmps
or
dec
imul
in
push
shr
or
add
add
xchg
(bad)
add
dec
cmp
lock
cwde
gs
add
ror
add
add
es
jmp
sbb
fimul
jns
out
ins
addr16
jae
js
outs
xchg
fcom
inc
jne
and
call
inc
jbe
push
gs
test
sub
sbb
stc
xchg
and
push
sub
and
aaa
mov
pusha
test
shl
mov
pop
rol
and
adc
and
add
or
mov
sbb
mov
jo
jge
int
dec
lods
outs
mov
scas
cs
xor
ds
or
in
stc
scas
int3
int3
sub
iret
jmp
lods
nop
and
scas
add
nop
adc
pop
mov
mov
scas
hlt
hlt
or
jl
inc
and
inc
sbb
nop
fdiv
cmps
push
mov
inc
sti
xor
xor
mov
jb
jns
or
dec
imul
enter
imul
in
push
add
push
sbb
daa
ficom
inc
jae
inc
jae
sub
bswap
ins
jo
fcmove
and
push
mov
inc
enter
push
cwde
nop
jb
or
mov
cld
adc
jno
dec
sbb
add
(bad)
je
push
out
ins
je
fldcw
and
lods
call
in
add
stos
dec
push
mov
and
mov
dec
jle
fwait
inc
add
mov
jne
fs
jne
or
js
push
xlat
cs
pusha
pop
push
ins
cmps
cwde
pop
js
push
leave
jnp
xchg
pop
test
mov
push
sub
push
add
(bad)
jmp
in
pusha
lock
lahf
mov
add
jnp
out
pop
and
add
test
mov
adc
or
shl
push
int3
int3
mov
jne
outs
repnz
sbb
add
mov
cwde
push
xchg
aaa
mov
(bad)
lahf
inc
or
pop
je
ins
sub
adc
nop
fucom
pop
xor
cmp
ja
movs
cli
sub
cmovns
(bad)
fs
jo
vdivss
jg
xor
pushf
jae
push
rcl
sahf
cmps
pusha
scas
cmp
add
ja
call
ja
loop
sbb
push
push
dec
mov
mov
int
mov
cmps
pmuludq
addr16
push
adc
ss
xchg
outs
lods
pop
fsubr
out
idiv
pop
pop
sbb
push
scas
fstp
das
xor
lahf
cmps
jne
stos
sahf
hlt
dec
in
mov
in
adc
add
push
les
lods
ror
nop
mov
ret
pusha
cli
xchg
es
push
shl
xchg
or
mov
fstp
inc
add
loope
fsubr
jns
sbb
outs
cld
jbe
daa
in
cmp
push
xchg
dec
sub
outs
movs
mov
mov
lock
adc
movs
mov
loope
into
outs
inc
mov
sub
outs
mov
les
aam
outs
or
out
into
ins
dec
pop
push
pusha
or
mov
mov
pop
cwde
add
mov
push
icebp
or
mov
push
lods
mov
mov
ds
pop
push
cs
mov
lahf
or
add
fisttp
push
mov
push
mov
dec
inc
mov
out
pushf
pop
pop
leave
repz
scas
out
or
adc
cmps
add
fmul
jnp
imul
and
pinsrw
mov
ret
add
sti
sti
test
movs
adc
repnz
repnz
cmp
rol
push
and
repnz
out
add
inc
repnz
shl
aaa
shr
push
cmp
test
or
test
sbb
xchg
or
ret
inc
lea
std
out
out
in
push
in
daa
or
or
inc
push
in
adc
in
push
in
and
pop
inc
push
sub
fs
pusha
jno
iret
jnp
sbb
dec
jge
push
bound
sahf
cmps
stc
cmp
mov
ret
rcr
ds
jns
sti
or
and
adc
adc
inc
scas
test
outs
jle
cmps
jge
aad
call
dec
repz
sub
inc
add
xor
mov
fwait
or
dec
push
or
lock
push
pop
rol
pushf
into
add
or
inc
cmps
sbb
je
xchg
xchg
retf
add
shl
mov
aad
ret
xabort
pop
push
mov
mov
jle
xchg
jns
call
cmp
mov
push
and
push
push
int3
xor
shr
je
push
inc
lock
push
xor
lock
jg
(bad)
and
inc
xor
sbb
inc
adc
enter
inc
add
sub
mov
sub
xor
and
adc
aad
inc
inc
nop
(bad)
mov
mov
jecxz
sbb
call
adc
mov
mov
scas
fcom
movs
cmp
or
inc
aam
xchg
inc
push
aam
test
out
push
shl
jmp
add
xchg
pop
inc
(bad)
int
dec
add
in
add
call
scas
mov
and
adc
cmp
gs
push
cmp
int
push
sahf
xchg
push
pop
inc
mov
cmps
xchg
sub
adc
inc
push
add
add
lahf
data16
into
hlt
add
xor
push
push
je
clc
xor
(bad)
push
cmp
cli
idiv
(bad)
sti
dec
cli
(bad)
stc
(bad)
clc
push
push
idiv
push
push
push
jmp
call
lahf
in
add
cmp
adc
sahf
idiv
int3
into
loopne
or
cwde
mov
fdivp
push
fadd
sub
or
xor
mov
adc
xor
sbb
add
arpl
cmp
pop
add
jmp
popa
addr16
sub
adc
or
test
shl
hlt
pop
mov
push
adc
imul
arpl
cli
imul
add
xlat
fcomp
mov
mov
dec
sub
cwde
inc
call
clc
out
out
mov
mov
add
inc
neg
or
fadd
sub
sbb
inc
and
ss
pop
xlat
add
dec
xchg
fcom
or
ret
adc
jne
add
pop
push
and
inc
imul
out
add
mov
cmp
or
and
xor
push
or
push
xchg
aaa
loopne
addr16
jb
jne
(bad)
push
lods
dec
mov
scas
aas
and
lock
inc
call
lea
ja
daa
sub
pop
sub
in
push
mov
adc
outs
cmps
add
and
bound
dec
popf
inc
xchg
test
je
mov
sbb
test
lds
loope
imul
inc
sub
mov
mov
outs
iret
in
fcmovnb
je
sub
sub
(bad)
jne
test
fwait
sti
jp
adc
xor
sbb
outs
jmp
pop
xchg
sbb
add
and
rol
(bad)
cmp
stc
mov
stos
test
ret
xchg
adc
dec
xchg
pop
jl
mov
js
mov
popa
push
push
xor
pop
xor
inc
gs
add
dec
or
dec
dec
inc
imul
add
push
and
jnp
inc
rcl
mov
inc
sar
jne
pop
or
pop
add
shl
push
cmp
or
sub
add
pusha
sub
ins
out
mov
push
pop
add
add
mov
mov
int3
sbb
int
dec
ja
lea
in
xchg
cmc
cmp
add
mov
repnz
hlt
ja
xor
bound
jae
jno
xor
(bad)
es
ins
and
or
mov
sub
push
xchg
loope
jnp
jae
pop
aas
cmp
mov
js
jne
addr16
adc
out
mov
push
mov
dec
test
mov
mov
push
mov
mov
cmp
sbb
sub
mov
and
jle
jg
js
or
xchg
pusha
(bad)
movs
imul
pop
mov
xor
adc
test
mov
dec
(bad)
jne
sub
sub
xchg
popf
and
mov
inc
and
push
mov
test
data16
add
pop
stos
mov
and
sbb
xchg
pop
dec
push
std
push
dec
ja
mov
inc
push
ret
fisubr
xchg
(bad)
dec
lea
and
imul
cmp
sbb
hlt
xor
fcmovbe
push
adc
(bad)
mov
cmc
pop
cmp
mov
sbb
in
je
push
rol
fdivr
(bad)
adc
fst
fsubr
and
shr
xor
cdq
test
daa
aas
call
push
add
and
repz
sub
jne
cmp
jne
or
xchg
ss
jmp
adc
inc
std
lea
xchg
sub
(bad)
scas
into
sub
and
test
cmps
dec
pop
dec
mov
jbe
loopne
inc
inc
pop
in
mov
rcl
es
fld
mov
adc
pop
call
add
sub
jp
cmc
jne
push
sbb
aam
and
pop
cmp
loopne
inc
ins
add
ret
jle
push
call
arpl
push
in
int
pop
lock
dec
or
in
(bad)
dec
cmp
add
fld
ins
jne
push
stc
cmp
in
mov
lock
push
mov
adc
ins
scas
mov
call
out
or
scas
mov
(bad)
lock
adc
mov
push
cld
adc
inc
inc
js
xor
fisttp
test
adc
xor
pop
aad
into
shl
jge
and
int
shl
mov
les
sub
mov
lock
stos
loopne
xchg
cmp
add
xchg
push
lahf
jmp
sbb
mov
cmp
daa
mov
js
xchg
ins
hlt
jl
inc
inc
mov
into
pop
or
shl
mov
aad
lods
adc
fdiv
fchs
imul
inc
mov
rol
inc
or
adc
test
cdq
cmp
call
mov
push
std
inc
mov
stos
mov
stos
mov
test
lahf
(bad)
jo
inc
sub
js
in
xor
imul
jb
addr16
push
pop
pop
pop
and
and
cmps
and
aad
enter
sub
add
test
cli
cwde
arpl
sahf
mov
or
nop
sbb
jno
shr
shl
es
jae
xlat
enter
xchg
(bad)
fnsave
jp
mov
icebp
popf
cld
adc
ret
jg
fs
ins
or
in
nop
push
and
sbb
sbb
das
sub
je
push
shl
and
fistp
jbe
enter
cdq
shl
push
xchg
mov
push
jb
sbb
add
popf
addr16
push
enter
jnp
outs
or
push
mov
mov
xchg
cld
mov
sub
push
enter
xchg
sbb
pop
and
xchg
mov
adc
add
loopne
mov
jae
addr16
call
or
mov
dec
stos
or
inc
or
movs
jg
mov
xchg
cmp
mov
mov
aad
dec
(bad)
mov
lock
not
pop
popa
and
cmps
loope
mov
or
xor
std
js
les
mov
sbb
mov
mov
gs
lea
mov
aas
and
cmp
cld
mov
mov
or
xchg
loope
and
mov
xchg
adc
movs
cmp
jne
sbb
sub
or
inc
test
test
adc
sub
or
repz
jne
fcom
daa
in
and
adc
or
fisttp
or
ja
test
mov
xlat
ret
div
mov
test
xor
pop
dec
(bad)
call
or
mov
cmps
sub
mov
outs
adc
leave
and
pop
test
retf
sahf
push
mov
and
xor
jno
xchg
and
dec
push
xor
cmp
jbe
fstp
xchg
adc
movs
inc
push
push
stos
mov
cwde
or
cmp
dec
inc
inc
bound
sub
cmp
push
or
or
sbb
repnz
mov
popa
movs
mov
adc
or
hlt
rcr
mov
cdq
(bad)
rol
or
out
cmp
cdq
pop
pop
adc
jle
xor
mov
mov
lahf
add
clc
push
or
mov
jne
and
adc
dec
pop
mov
xchg
call
pop
aas
xor
cmp
push
ja
inc
clc
je
ret
icebp
std
jnp
ret
hlt
movs
cdq
lods
cmp
add
sub
mov
test
xchg
shl
xor
pop
jns
sbb
mov
fmul
push
xchg
or
sbb
and
sbb
cmp
mov
sub
cmp
call
imul
mov
fidivr
add
test
cmp
das
jo
push
arpl
aas
or
inc
sub
mov
cdq
rol
add
pop
or
dec
inc
push
aas
nop
rol
adc
mov
or
leave
gs
mov
aam
lahf
dec
add
cmc
add
add
jmp
add
mov
stos
mov
sbb
xor
loop
sub
lea
or
push
inc
ins
clc
in
mov
ins
enter
jb
out
mov
iret
inc
shl
push
mov
add
jecxz
and
call
add
mov
adc
mov
into
in
mov
test
call
inc
dec
xchg
mov
push
adc
dec
data16
and
outs
sbb
retf
or
ficomp
rol
stc
add
adc
dec
mov
jmp
xchg
retf
aaa
and
cmp
lea
jle
inc
cmp
jge
add
adc
jne
sbb
int3
cmps
fidiv
leave
dec
mov
leave
mov
std
jle
loopne
push
lds
mov
inc
inc
sbb
sub
sbb
fsubr
push
mov
rol
mov
mov
leave
shl
add
pop
push
lods
push
pop
pop
stos
shr
xchg
lods
enter
lea
ror
mov
pop
shr
(bad)
add
add
aam
xor
mov
test
dec
mov
push
fstp
lock
jle
fidiv
and
add
or
push
fs
dec
add
das
xor
dec
mov
sub
jg
or
shl
mov
cmp
pop
push
cmps
mov
sbb
xchg
inc
ja
mov
xchg
and
outs
(bad)
and
rcr
mov
dec
fisttp
push
push
inc
xor
cmc
in
sbb
fucompp
cld
sub
and
cmp
adc
popf
inc
jne
xor
in
push
cmp
jne
or
cmp
adc
shr
test
das
dec
or
or
pop
pushf
and
mov
popaw
xor
mov
loop
sbb
sbb
or
inc
jb
cdq
add
and
cmp
cmps
std
shr
push
mov
je
pusha
int
dec
mov
and
add
sbb
add
add
sbb
call
pusha
mov
dec
popa
mov
pop
fadd
pop
rcl
push
cmovns
es
push
loop
mov
ffree
sar
push
in
adc
sbb
xchg
sbb
and
jo
or
je
stos
adc
btr
dec
mov
das
pop
add
mov
xchg
inc
shr
pop
movlps
fisubr
fmul
out
or
adc
mov
enter
add
mov
jo
xor
into
jb
movs
(bad)
das
mov
pop
ja
and
bt
jb
ins
mov
add
aam
ret
ret
ret
inc
cmp
jne
imul
pop
scas
adc
xor
dec
xchg
inc
adc
pop
ins
add
add
or
push
sbb
cmovge
in
push
sbb
scas
adc
shl
xchg
js
inc
adc
and
push
shl
adc
pop
outs
imul
mov
mov
xchg
or
ins
mov
lods
mov
sbb
xchg
push
(bad)
mov
push
xchg
fsub
gs
jne
push
in
aas
and
pusha
outs
cs
or
mov
push
aam
sar
pop
pop
jne
jb
jne
inc
sub
mov
add
xor
jmp
pop
aas
mov
inc
or
xor
mov
sub
push
sbb
sbb
aam
xchg
inc
push
push
add
mov
push
add
and
mov
or
fld
cmps
jns
pop
jnp
push
sbb
pop
jns
jl
test
add
nop
daa
lahf
cmp
in
lds
add
shl
sub
dec
pop
mov
ret
sbb
or
rcl
inc
inc
mov
xchg
pop
imul
clc
xor
call
xchg
cmp
or
mov
cmp
dec
jne
pop
sub
outs
mov
shl
or
jno
cld
jbe
push
add
imul
movs
xchg
dec
cld
inc
mov
inc
add
inc
add
test
or
and
mov
sub
cs
pusha
inc
cld
and
add
push
adc
mov
aam
jns
add
or
inc
adc
mov
mov
sub
and
xor
cmp
xor
je
push
fisub
and
lahf
ret
push
ja
(bad)
or
sbb
jle
loop
inc
xor
fsubr
jo
and
sar
inc
sbb
adc
mov
es
push
dec
adc
fst
inc
jae
movs
je
imul
dec
push
jno
mov
fadd
lods
jo
out
adc
xchg
dec
(bad)
xor
cld
lock
cmc
xchg
mov
in
push
in
pop
dec
jo
or
dec
inc
pop
adc
js
repnz
jecxz
pusha
add
imul
cwde
jb
shr
xchg
clc
imul
test
movs
out
push
lock
aaa
mov
rep
xchg
mov
popa
in
into
sub
cld
jmp
add
rol
mov
sbb
and
push
and
fsub
nop
data16
sbb
hlt
and
push
ja
mov
sub
add
adc
pop
jecxz
ins
sub
xchg
push
cmps
fimul
xor
sbb
or
rol
add
inc
sbb
xor
fsub
leave
dec
inc
lock
hlt
lea
jbe
xor
add
rol
dec
hlt
lahf
pop
mov
pop
aas
inc
add
(bad)
stc
lea
push
xchg
stos
inc
je
xchg
xor
or
xor
test
sbb
inc
leave
mov
sbb
inc
sbb
add
mov
cld
shr
inc
cld
or
push
test
sub
or
ja
pop
sbb
inc
clc
in
sbb
stc
test
xchg
cmps
jmp
cmps
mov
jecxz
sub
sbb
enter
sub
hlt
(bad)
xor
sbb
xor
inc
push
jo
or
jb
nop
ins
mov
cmp
aaa
mov
xchg
retf
jne
nop
cmp
jmp
addr16
movs
hlt
hlt
pop
js
and
mov
push
cs
mov
fmul
mov
js
mov
movs
sbb
push
jno
fld
fnstenv
(bad)
clc
test
jo
or
jne
les
repnz
sub
mov
pusha
or
sti
scas
push
(bad)
stos
enter
sbb
or
leave
cmp
int
iret
cmp
cmp
mov
sbb
and
push
retf
jp
sub
pusha
jb
stos
les
add
sub
(bad)
in
test
pop
dec
sub
xchg
inc
xor
pop
add
daa
or
movs
ss
jne
dec
cmp
pop
sub
scas
nop
(bad)
retf
cmp
push
or
leave
imul
mov
add
sub
sub
bound
dec
push
in
scas
add
pop
jmp
mov
icebp
pop
pop
loop
loope
jmp
fidiv
pop
xlat
xchg
sbb
inc
pushf
sub
stos
sbb
loopne
mov
push
and
push
ficomp
test
and
mov
(bad)
stos
int
cmps
out
stos
mov
daa
push
out
aas
lods
adc
inc
mov
lods
js
mov
xlat
xchg
popf
lods
dec
add
enter
pop
(bad)
pusha
test
cmp
loop
sub
ror
stos
outs
sub
outs
and
mov
dec
(bad)
das
xor
lock
imul
jo
adc
push
mov
pop
adc
xor
pop
cmp
mov
inc
sbb
add
clc
rcl
dec
loopne
aam
jmp
xor
adc
push
sub
std
and
or
mov
jne
push
adc
jns
icebp
movs
fxch
sbb
jne
or
add
inc
dec
jge
out
sahf
jno
sub
or
outs
add
mov
pop
dec
(bad)
jmp
mov
call
or
add
inc
loopne
adc
or
mov
call
and
nop
pop
cmp
cs
jne
push
or
hlt
add
sub
jns
scas
les
sub
mov
mov
out
adc
sbb
cmp
cmp
in
add
mov
call
mov
imul
and
xor
push
mov
or
mov
nop
inc
inc
lea
out
ja
pop
sub
call
push
jg
or
mov
pop
cli
rol
add
adc
cmp
lock
inc
or
add
xchg
or
in
pop
or
sbb
daa
mov
or
sub
xchg
ror
xor
mov
or
into
inc
mov
sub
push
dec
inc
cmps
test
sbb
cmp
icebp
or
jg
leave
xchg
cmp
pop
arpl
pop
rol
jb
sbb
das
sahf
(bad)
sbb
xchg
fadd
push
test
jo
mov
or
add
add
and
mov
imul
repz
es
jg
mov
xlat
jnp
imul
mov
or
cmp
sub
and
xor
fisttp
dec
add
sbb
mov
inc
mov
inc
aam
sbb
inc
fmul
xor
sbb
fld
add
push
loopne
(bad)
into
es
sub
push
sbb
lock
(bad)
mov
xchg
aaa
fld
push
or
iret
out
sti
or
sub
fbld
mov
fmul
mov
mov
mov
jo
ror
mul
inc
sbb
das
or
or
cmp
mov
xlat
add
cmp
dec
mov
(bad)
call
adc
or
jge
xchg
inc
add
inc
adc
or
lea
jmp
cld
imul
cmp
xor
xchg
jle
popf
ret
mov
dec
stos
imul
and
(bad)
sub
push
shl
ret
push
in
mov
in
inc
add
push
mov
repnz
call
(bad)
mov
outs
add
and
inc
outs
sbb
(bad)
xchg
cwde
retf
sbb
dec
mov
pop
pop
push
outs
dec
(bad)
mov
(bad)
mov
je
in
dec
test
push
sbb
sbb
nop
push
(bad)
outs
add
add
push
sub
inc
and
jg
push
push
test
lea
push
seto
ret
xchg
sbb
jle
push
in
pop
xchg
sub
nop
cdq
ja
dec
inc
fcmovnb
ins
mov
push
sbb
add
ror
lds
pop
lock
add
shr
shr
or
and
or
and
jg
jl
(bad)
sar
and
push
loope
mov
cmp
jne
add
jb
mov
sbb
jle
jne
loop
push
xchg
and
hlt
jl
ret
dec
in
mov
sbb
sub
pop
cmps
and
adc
test
call
mov
or
shl
lock
adc
xor
xor
mov
fsub
cwde
xchg
xchg
pop
popf
sub
add
push
cmp
dec
ret
rol
jnp
call
lods
das
sbb
or
add
add
xor
jmp
sbb
call
pop
js
test
jne
sbb
sbb
lahf
xlat
sbb
mov
mov
out
ins
outs
mov
sub
fwait
push
pop
sub
ins
xchg
mov
mov
and
clc
ins
xchg
cmp
cmp
in
ficomp
adc
sbb
jbe
and
or
pop
pop
jl
inc
mov
js
jecxz
cmps
mov
and
pusha
daa
scas
mov
sub
mov
push
and
lea
loope
sub
rcl
ja
sbb
popf
xchg
cmp
sbb
add
and
xor
cmps
cld
pop
or
cs
add
cmp
xor
div
adc
stc
stos
xchg
retf
push
ret
pop
ror
adc
mov
jmp
push
(bad)
fidiv
jb
test
retf
test
les
inc
cs
(bad)
outs
adc
lods
push
dec
fmul
mov
pop
sbb
popf
sbb
jns
int
cmp
or
inc
mov
stc
inc
mov
xor
add
add
jbe
mov
sbb
or
sbb
adc
add
xchg
adc
or
cdq
cmp
add
mov
push
fdiv
add
nop
(bad)
inc
push
cmp
into
mov
push
sub
push
int3
mov
ins
xchg
mov
aad
pop
sub
xor
rcl
cmps
movs
test
dec
xor
jg
dec
xchg
xor
test
hlt
mov
xor
mov
push
or
adc
mov
movs
add
pop
inc
and
xchg
mov
pop
in
or
xchg
adc
inc
loopne
push
and
and
mov
adc
das
arpl
retf
jno
mov
out
ins
pop
or
or
popf
and
sub
or
(bad)
push
and
call
add
icebp
xchg
(bad)
add
pop
add
and
or
repnz
and
mov
jno
sbb
jge
xchg
add
xchg
or
dec
xor
sbb
in
xor
or
rcl
in
add
mov
xchg
xchg
push
sar
enter
test
pusha
or
enter
movs
sbb
popf
pop
mov
ins
retf
and
mov
or
push
pop
add
mov
pop
jp
hlt
dec
push
dec
or
jnp
js
push
sbb
test
xor
test
cmp
and
mov
add
mov
or
(bad)
sbb
add
je
dec
jecxz
ins
fimul
jmp
mov
add
add
sbb
inc
lods
push
ret
mov
xchg
ret
fwait
imul
mov
jno
enter
adc
cmp
scas
mov
lock
mov
push
shl
jae
or
inc
xchg
push
rcl
add
cmps
inc
nop
mov
mov
repnz
mov
es
icebp
shr
sub
inc
mov
adc
mov
mov
movs
loop
idiv
pushw
and
rol
cmp
sub
adc
and
or
retf
adc
scas
daa
jl
call
retf
nop
psraw
or
cmp
ret
adc
add
or
cmp
jne
xchg
mov
mov
aaa
jno
test
lods
jmp
push
call
add
mov
cmp
or
mov
push
adc
xlat
xchg
and
push
mov
lds
and
adc
xor
shr
pop
mov
adc
adc
stc
je
add
retf
(bad)
xlat
outs
push
ret
or
jg
xlat
into
mov
dec
push
aam
cwde
inc
mov
mov
pop
sub
push
add
adc
sbb
push
rcl
and
arpl
jbe
jge
and
xor
cmp
xchg
mov
xchg
pop
out
test
les
adc
pop
push
jb
mov
stos
call
rol
mov
xor
jecxz
jo
nop
xlat
mov
lea
ret
mov
rol
icebp
fwait
mov
push
inc
sub
mov
rol
jmp
or
dec
dec
lock
inc
int
movs
and
inc
out
sbb
retf
cld
push
push
lock
daa
inc
inc
push
adc
mov
lahf
dec
or
in
adc
or
ins
lods
jmp
cmp
cmp
add
pop
xchg
push
adc
jg
push
inc
cld
dec
push
(bad)
push
dec
lea
push
ficomp
mov
popa
inc
sbb
mov
push
push
sbb
pop
cwde
sbb
or
adc
sbb
dec
jecxz
dec
les
pop
daa
add
push
mov
sar
lds
adc
adc
retf
add
or
inc
imul
add
(bad)
les
cld
ret
inc
test
test
pop
shl
jmp
fwait
out
lods
or
or
inc
xchg
cmps
jge
clc
mov
adc
pushf
inc
cmp
ficomp
mov
add
add
mov
sub
mov
jo
sub
mov
add
inc
sbb
xor
rol
dec
repnz
adc
and
rol
mov
rol
aaa
test
inc
mov
not
js
call
adc
leave
inc
add
inc
imul
mov
mov
cld
rol
(bad)
jmp
cld
inc
or
and
add
sub
jae
add
dec
hlt
(bad)
hlt
push
es
pop
not
ins
sub
adc
or
push
dec
imul
pusha
out
push
sub
sbb
sbb
popf
mov
adc
push
mov
and
shl
nop
out
pop
push
and
jl
inc
dec
ins
add
arpl
jl
cmp
xchg
xor
mov
jae
jge
push
sbb
call
ret
int3
mov
clc
call
or
bound
or
or
xchg
xor
call
adc
cmp
push
mov
sub
enter
push
xor
inc
mov
mov
test
jne
adc
cmp
je
mov
sti
xchg
ret
push
imul
ss
fcmovnbe
pop
sar
push
jmp
scas
dec
clc
xlat
push
cmp
jl
xchg
push
add
dec
pusha
dec
ret
push
ja
arpl
dec
cmp
and
and
push
fldcw
xchg
arpl
sbb
cmc
clc
enter
loope
adc
leave
mov
and
mov
mov
cmp
sbb
lea
dec
adc
mov
or
xchg
(bad)
lock
or
cmp
and
ins
lahf
xor
daa
adc
inc
dec
pusha
or
ret
loopne
lods
or
dec
je
xchg
or
mov
cdq
and
cmp
xlat
ror
and
dec
retf
or
scas
retf
in
push
icebp
sub
mov
xchg
out
sbb
or
dec
push
lock
pcmpgtd
loopne
add
jg
enter
aaa
mov
mov
push
adc
data16
cmps
pusha
adc
test
dec
push
add
pop
outs
int
mov
adc
fmul
ret
ja
add
jmp
ss
xchg
cmp
sbb
into
adc
push
adc
pop
cmp
dec
outs
fistp
add
mov
cmp
mov
popf
add
pop
lds
lock
push
xchg
and
push
stos
sub
mov
adc
cmp
int3
add
mov
arpl
jo
jmp
aaa
cmp
arpl
enter
int3
add
push
fiadd
inc
sub
adc
dec
push
mov
and
push
inc
and
sahf
or
inc
nop
xchg
mov
hlt
adc
int
dec
data16
inc
and
loopne
push
cs
cmp
add
sahf
mov
mov
push
lea
push
cmp
rol
dec
fadd
add
cmp
adc
mov
or
arpl
dec
add
sbb
fbstp
(bad)
in
push
push
pop
jecxz
cs
or
add
cmp
outs
push
jmp
mov
inc
pop
push
push
xor
sbb
inc
xchg
imul
jne
push
or
jne
in
push
pop
cmp
and
inc
popa
cmp
inc
xorps
push
xor
mov
xor
mov
stc
cmp
sub
into
cmp
push
call
movs
cmps
rcr
pop
push
pop
push
adc
loope
inc
aad
add
(bad)
fnstenv
sbb
or
add
fadd
ds
inc
jl
js
or
clc
imul
inc
jb
mov
xor
leave
xor
rcr
jne
jmp
add
fstp
xchg
(bad)
and
rcr
mov
or
cs
adc
sahf
mov
(bad)
into
xor
das
imul
xchg
push
ja
rcl
ret
icebp
dec
inc
mov
jmp
mov
sub
mov
mov
popf
add
mov
push
xchg
inc
jmp
mov
xor
loopne
nop
fdivr
sub
ds
(bad)
mul
dec
add
addr16
stos
adc
or
pop
dec
js
aad
pop
pop
fist
into
sub
sub
xlat
out
cmp
mov
pop
sub
ss
mov
sti
aas
mov
mov
jmp
mov
dec
adc
mov
xchg
sbb
fnstenv
fst
retf
sbb
cmp
movs
jle
inc
add
repnz
or
jne
pop
aas
xor
pop
test
stos
dec
push
xchg
lods
lds
xor
push
mov
inc
rol
pushf
or
add
(bad)
sbb
xchg
add
and
xor
cmps
lods
mov
xchg
(bad)
jno
lea
addr16
rcr
jne
lock
cli
or
nop
mov
add
sub
jae
loope
test
cmp
cwde
xchg
and
push
aaa
sub
je
xchg
imul
xor
rcl
xchg
ins
ins
pusha
pusha
rcl
ss
xchg
xor
pusha
xchg
xchg
lahf
mov
mov
pop
and
addr16
mov
lds
fs
test
xor
shl
test
pop
pop
jg
aam
inc
scas
sbb
inc
mov
in
dec
jne
rol
stos
xlat
pop
cmp
cmc
pop
xor
add
cmp
cmps
movs
cmp
mov
add
add
jge
jnp
or
inc
sbb
or
xor
shl
test
data16
int3
ret
adc
not
jnp
(bad)
shl
mov
cmp
ds
addr16
jno
dec
mov
(bad)
xchg
mov
pop
test
out
js
inc
sbb
pushf
cs
cmp
jle
popa
pop
push
or
outs
mov
push
loopne
loopne
retf
inc
popa
jb
sub
cwde
sub
into
jb
int
aad
mov
imul
adc
inc
jo
in
push
jno
js
fiadd
jae
stc
sub
mov
dec
sbb
adc
pusha
add
or
aam
dec
sub
test
or
mov
add
xchg
popa
dec
pop
das
(bad)
(bad)
(bad)
sub
mov
mov
xor
stos
and
mov
fidiv
push
sub
hlt
add
imul
xor
dec
aam
adc
xor
int
or
jne
in
sub
inc
pop
inc
(bad)
cwde
in
adc
sub
adc
daa
pop
lods
add
mov
stos
push
jb
pushf
adc
sbb
xor
inc
cld
xor
das
iret
fcom
mov
xor
xchg
fdivr
nop
cwde
call
adc
sub
adc
adc
sub
sbb
fsub
(bad)
dec
cld
push
mul
or
fstp
mov
enter
les
pop
ss
hlt
stos
or
enter
pushf
imul
push
les
pop
and
lahf
jne
lds
sbb
or
add
addr16
add
add
shr
xchg
add
in
call
xor
cmp
dec
jecxz
adc
and
fs
stc
sbb
(bad)
out
sbb
xor
dec
xor
jl
aaa
outs
sbb
and
xor
fidiv
or
mov
sbb
mov
pop
xor
sub
fdiv
inc
int3
daa
out
fdiv
or
in
xor
add
out
fst
repz
and
xor
dec
xor
xor
or
cld
leave
sbb
enter
mov
cld
mov
dec
or
das
ja
test
jmp
cmp
sbb
jmp
push
and
adc
or
sti
aaa
sub
rcr
and
js
enter
add
jge
popa
sub
xor
jb
add
(bad)
ins
cdq
jmp
cli
clc
adc
sub
push
xchg
mov
test
aam
lahf
adc
add
push
movs
pop
retf
add
imul
xchg
sbb
test
adc
sbb
mov
repz
out
inc
add
add
fnstcw
xchg
add
pop
xor
or
pusha
or
push
sbb
nop
dec
add
adc
mov
(bad)
dec
mov
cdq
ins
fstp
sbb
dec
sahf
out
out
add
and
in
or
jo
add
add
dec
(bad)
dec
mov
sub
sbb
dec
jbe
or
das
sbb
sbb
sbb
sub
cmp
adc
pop
xor
loop
(bad)
jle
std
cmp
sub
and
ss
jno
sbb
push
xchg
mov
test
add
adc
cwde
popf
adc
fs
sbb
mov
rcr
push
pop
movs
mov
push
lods
adc
jno
mov
cmp
mov
add
fstp
lock
ret
and
test
dec
rcr
nop
mov
pop
pop
cmps
adc
jns
fdivr
sbb
loopne
add
movs
push
add
mov
mul
xor
add
and
sub
fmul
xchg
shl
es
push
push
cs
call
aas
fmul
or
or
cmp
das
movs
(bad)
cmp
mov
adc
xchg
es
scas
in
movs
loopne
test
in
loopne
mov
nop
dec
mov
das
mov
and
mov
mov
xchg
std
push
retf
xor
dec
cmp
stos
pusha
out
icebp
cmp
mov
mov
(bad)
add
movs
in
gs
mov
pop
inc
pop
gs
push
mov
mul
fld
mov
fisttp
xchg
in
add
mov
sub
or
nop
adc
dec
and
cmp
mov
pusha
xor
pop
int3
pop
add
xlat
cmps
and
and
pop
and
into
cmp
push
lock
inc
inc
jle
les
mov
lea
cmp
sbb
fwait
sbb
cmps
shl
inc
inc
sub
lods
cmovl
addr16
aaa
fadd
repnz
fild
loopne
inc
sub
xchg
stos
loopne
and
add
out
mov
mov
call
mov
in
shr
fwait
adc
dec
pop
mov
xchg
pop
(bad)
adc
push
in
xchg
mov
inc
push
cld
ret
mov
mov
xor
xchg
xchg
(bad)
mov
sbb
mov
lock
pop
loop
or
mov
pop
enter
dec
rcl
fadd
sub
push
inc
mov
loop
push
fdivr
std
or
mov
push
add
lods
cmp
test
adc
clc
jge
pop
mov
xor
les
push
loop
add
aaa
popf
call
loope
add
sbb
push
sbb
fs
sbb
inc
daa
shl
cmps
add
sub
sbb
mov
sub
fiadd
mov
xor
jp
pop
cmp
adc
xchg
out
xor
sahf
cmps
jge
sub
push
outs
movs
int3
jmp
cmp
inc
mov
daa
or
jns
out
or
push
mov
cmc
cmp
and
aad
js
call
aad
xor
(bad)
enter
sar
adc
xor
jnp
fimul
in
ret
mov
push
leave
in
or
mov
loopne
(bad)
sbb
jle
pop
mov
int3
imul
test
add
sub
xchg
enter
sbb
sub
lds
cmp
mov
add
mov
jge
cmp
fdivr
pop
add
icebp
arpl
sbb
push
pop
or
pop
in
mov
mov
movs
xor
mov
pop
sbb
bound
imul
and
cdq
sar
pop
fwait
ror
shl
inc
jmp
xchg
pop
(bad)
and
in
fadd
nop
or
mov
bound
adc
ret
add
and
jge
loope
in
and
movs
fist
jnp
enter
fld
loopne
mov
cmovne
and
out
xor
add
fsub
imul
icebp
call
scas
adc
mov
iret
dec
sbb
jns
xchg
movs
inc
adc
mov
sub
(bad)
frstor
cwde
call
lods
repz
sub
adc
sbb
mov
cmp
jne
aaa
or
or
jmp
sub
(bad)
mov
add
ror
mov
ins
out
add
sbb
stc
dec
cmp
popf
push
jle
add
pop
jge
mov
adc
xchg
je
xor
nop
push
jg
cmp
mov
jmp
jecxz
(bad)
adc
movs
sbb
hlt
bound
adc
xchg
mov
pop
fst
retf
adc
retf
movs
xor
ss
nop
mov
imul
xchg
outs
fcom
cmp
inc
lds
sbb
xor
xchg
sbb
fwait
test
or
out
sbb
call
pop
cmp
scas
sbb
add
jmp
ficom
test
jge
or
sub
mov
(bad)
jmp
ja
jmp
mov
push
xchg
lock
call
es
call
rol
adc
std
sbb
aaa
pop
or
mov
cmp
adc
cmp
adc
clc
(bad)
cmp
clc
pop
ja
bts
jmp
js
jl
push
movs
rol
mov
cdq
pop
jo
jne
inc
sbb
outs
push
arpl
and
add
sar
add
mov
(bad)
pop
ret
aas
mov
xchg
pmulhw
mov
adc
add
les
adc
jecxz
inc
mov
mov
push
je
push
adc
xchg
adc
push
dec
pop
inc
stos
sar
stc
or
adc
push
jmp
and
clc
and
cmp
pop
jae
jmp
xchg
push
sahf
push
push
push
sbb
ins
imul
jae
cld
xor
adc
je
jmp
push
clc
(bad)
fbstp
mov
fmul
push
cmp
push
mov
in
mov
cmps
pop
das
inc
add
cmp
(bad)
lds
push
stos
adc
pushf
push
in
sub
mov
cmps
lock
nop
dec
add
cmp
sbb
inc
add
pop
aas
sub
and
push
daa
outs
and
scas
rcl
loopne
scas
(bad)
push
add
cmp
leave
leave
(bad)
gs
repz
sub
mov
shr
sub
pop
out
xlat
inc
pop
in
inc
pop
dec
push
jo
cmp
sahf
xchg
cmps
mov
mov
jecxz
push
cli
or
push
daa
xor
fiadd
pcmpeqb
stos
sbb
and
and
push
and
xchg
add
mov
fsubr
(bad)
mov
imul
cld
jl
jmp
xor
gs
jmp
mov
inc
push
inc
cmp
fsubr
cmp
ror
mov
and
and
pop
(bad)
out
mov
xchg
inc
nop
mov
mov
pop
aam
ror
dec
fwait
mov
(bad)
hlt
adc
fcom
gs
xchg
ret
ret
ret
jmp
inc
clc
fisubr
cmp
cmp
addr16
add
push
jmp
mov
inc
les
push
and
cli
or
retf
inc
test
push
sub
pop
push
lods
sar
pop
icebp
inc
pop
call
cmp
jbe
sbb
ror
push
jno
dec
(bad)
sbb
xchg
mov
and
fisttp
push
mov
push
mov
sbb
rcl
stc
cmps
pop
jo
loopne
push
mov
mov
mov
mov
dec
adc
or
into
mov
imul
jmp
lea
dec
repnz
sbb
push
push
into
push
jae
sub
ins
push
mov
inc
add
mov
mov
movs
mov
repz
add
push
fs
loopne
adc
sub
dec
outs
into
and
ins
pop
jg
jmp
repnz
sub
(bad)
sub
mov
sub
sbb
sbb
sbb
jo
cld
imul
out
stc
sub
inc
hlt
xchg
push
jb
js
mov
or
jge
retf
add
xor
mov
movs
xor
mov
lock
push
cmp
or
mov
fdivr
mov
xor
inc
test
arpl
add
xchg
jae
or
mov
mov
mov
pop
enter
lock
cdq
test
call
inc
das
xor
out
addr16
inc
pop
sub
aas
sbb
xor
call
and
hlt
push
cmp
jnp
in
dec
call
pop
and
repz
lock
hlt
sbb
fld
cwde
pop
cs
sub
daa
iret
repz
inc
imul
add
fcom
push
and
dec
cwde
in
cmp
sbb
push
movs
mov
(bad)
cs
repnz
xor
jae
pushf
daa
retf
jb
push
and
les
sub
add
mov
add
xor
jmp
loop
or
movs
ret
stc
dec
add
push
daa
icebp
fldcw
aas
ret
jmp
push
inc
push
aad
and
sub
fs
pop
and
mov
inc
add
add
jns
xchg
push
mov
adc
adc
(bad)
popf
aaa
int
data16
(bad)
dec
or
dec
js
sbb
sub
mov
or
inc
or
inc
adc
cmp
sub
or
and
inc
dec
adc
(bad)
mov
add
(bad)
and
add
mov
xorps
mov
and
jg
sbb
test
stos
(bad)
imul
jge
pusha
ds
jl
adc
std
push
ret
mov
push
add
enter
mov
mov
mov
adc
out
push
cmp
dec
jo
adc
sbb
stos
scas
enter
jecxz
adc
dec
ss
lods
pop
test
dec
push
orps
movs
add
scas
push
or
and
jmp
dec
lods
cmps
lahf
stc
test
das
dec
loope
cld
mov
out
mov
test
pushf
daa
fcmovnb
xchg
inc
push
sahf
jae
push
mov
out
cmp
or
pop
ins
retf
add
dec
addr16
mov
mov
xchg
sbb
pop
xchg
jnp
push
pop
in
sar
fs
dec
ins
add
call
jne
(bad)
pop
inc
nop
movs
push
unpckhps
lods
arpl
mov
sub
pushf
in
test
and
loope
jmp
(bad)
jnp
in
jo
inc
jns
push
push
fld
dec
push
cmp
retf
jg
(bad)
jg
shl
jae
fucomp
dec
pop
rol
jmp
outs
daa
sbb
ret
mov
fsub
std
clc
mov
rol
xchg
stos
pop
loopne
inc
fbstp
add
sbb
in
xchg
dec
shl
lods
add
(bad)
mov
mov
pop
or
xchg
sti
jmp
sbb
mov
inc
jg
daa
icebp
add
jg
adc
stc
lods
hlt
xor
sub
ja
pop
add
inc
push
and
or
enter
push
ret
test
mov
dec
fadd
cmp
sub
lea
jne
adc
adc
icebp
xchg
hlt
jmp
adc
mov
shr
xchg
xchg
push
adc
sbb
(bad)
add
call
cmp
lock
cs
add
lock
or
push
pop
mov
sbb
mov
pop
cmps
nop
push
inc
inc
jne
xor
inc
jmp
inc
lock
mov
xchg
dec
retf
in
xor
or
adc
sub
add
icebp
addr16
pop
or
cmp
cmp
out
adc
or
add
(bad)
mov
and
jmp
adc
dec
ret
mov
(bad)
aad
sbb
jg
cli
add
inc
add
daa
(bad)
xchg
jle
pop
push
add
push
mov
stc
pushf
mov
adc
and
inc
repnz
adc
daa
loope
adc
sbb
xor
sbb
and
pop
adc
cld
int3
je
cmp
shl
mov
add
xor
clc
mov
ins
movs
rol
imul
popa
jmp
psubd
out
pop
daa
push
std
lea
push
fdiv
jns
popa
cmp
jmp
inc
dec
rol
imul
cmp
dec
mov
pop
jb
jne
adc
push
gs
(bad)
jno
sub
ret
pop
ret
popf
dec
bound
cmp
mov
sti
adc
push
shr
je
cmp
fsub
add
cs
push
addr16
popf
hlt
jmp
add
xchg
sbb
clc
in
rcl
loopne
lock
or
(bad)
es
inc
pop
add
js
pop
push
mov
jns
jne
je
daa
inc
sbb
cmp
loop
mov
jae
add
outs
adc
inc
inc
daa
sbb
sub
popa
rcl
loopne
mov
arpl
cmp
cmp
or
and
out
adc
adc
mov
xor
adc
scas
mov
jae
mov
push
sub
or
push
es
cmp
sub
dec
or
test
inc
mov
pop
jge
inc
dec
jne
mov
mov
inc
or
mov
loope
and
pop
xor
mov
test
pop
xor
inc
jmp
inc
mov
jae
push
push
test
sbb
fwait
nop
push
(bad)
ret
add
pop
mov
cld
mov
or
cwde
push
fwait
loope
mov
mov
mov
sub
leave
sahf
and
loopne
cmps
inc
and
dec
inc
stos
xor
icebp
jl
sub
(bad)
iret
ret
aad
je
daa
test
stos
sub
or
aad
mov
mov
rcr
push
sub
arpl
jmp
fist
xor
xor
cdq
shl
sub
loopne
aaa
movs
int3
dec
imul
hlt
dec
inc
shl
in
or
cli
je
or
xchg
adc
fstp
ins
pop
lds
sbb
lock
or
cmps
(bad)
or
pop
pop
xor
sbb
sbb
add
jmp
in
push
nop
add
push
adc
repz
mov
xor
cmp
leave
or
outs
adc
mov
adc
xchg
sbb
arpl
cmp
lock
mov
pop
div
xor
and
fs
push
mov
pop
add
fs
or
out
adc
pop
adc
jnp
imul
ins
outs
push
sbb
inc
arpl
rcr
sub
cld
rcr
and
inc
sbb
adc
jo
stos
jo
push
fst
lea
mov
mov
inc
xor
imul
loop
jmp
lea
popf
lea
adc
je
hlt
pop
add
sbb
test
mov
adc
(bad)
retw
es
mov
mov
fild
or
and
and
inc
push
pushf
imul
add
repnz
adc
mov
je
jb
sbb
adc
cmp
pop
push
push
sub
cmp
xchg
ret
push
cmc
inc
and
xor
inc
(bad)
cld
push
push
mov
adc
jle
js
adc
xchg
and
sar
inc
add
test
inc
inc
fcom
adc
repnz
data16
outs
jo
and
xlat
ins
lods
leave
pop
pop
sti
nop
arpl
ins
add
popa
inc
daa
inc
pop
pop
arpl
mov
push
dec
enter
(bad)
inc
xchg
cmps
xchg
add
sub
out
jne
xchg
cmp
jne
das
hlt
loopne
and
jne
xchg
push
mov
jb
push
shl
(bad)
adc
je
icebp
jno
push
cmp
sub
ret
hlt
pop
mov
fs
lds
sub
inc
sub
and
push
aas
add
jo
pop
arpl
inc
dec
jne
loopne
mov
xor
inc
add
jno
das
(bad)
call
push
outs
and
and
div
aad
push
push
das
(bad)
jmp
sbb
and
xchg
inc
jne
shr
shr
mov
lahf
pop
pop
push
arpl
mov
jl
mov
mov
xchg
jl
adc
inc
add
stc
xor
sbb
int3
addr16
push
les
je
and
imul
stos
es
cmp
jg
push
dec
cmp
out
sahf
movs
or
inc
ins
sub
adc
sbb
mov
push
push
data16
sub
xchg
push
ins
cmp
mov
push
fdivr
push
sbb
and
adc
add
not
or
adc
inc
or
nop
cli
sub
arpl
or
sub
loope
xchg
jmp
and
push
ja
add
imul
pop
or
push
or
add
cmp
mov
inc
and
inc
and
fldenv
adc
xchg
add
pop
or
cmp
test
sbb
popf
or
jmp
push
leave
loope
mov
into
fxch
inc
pop
jg
adc
shl
jbe
pop
add
xchg
or
sub
and
nop
cmps
adc
das
or
pop
pop
addr16
out
jo
and
or
lock
fsubr
arpl
dec
cli
mov
xchg
xchg
out
fbld
je
int
rol
add
or
fs
out
jo
pusha
or
loop
add
rcr
or
push
push
test
and
clc
lds
shl
cmp
sub
jge
dec
add
push
(bad)
clc
lock
int3
ins
ror
ja
in
repnz
lea
xor
adc
lods
lahf
push
inc
xlat
mov
lock
movs
clc
mov
or
ja
stos
outs
in
jp
inc
push
dec
inc
add
add
cld
dec
int
popf
mov
lahf
aaa
dec
dec
dec
xchg
mov
shr
ret
les
inc
je
dec
push
dec
ins
cdq
test
stos
xor
out
sar
mov
push
and
je
cmp
loop
test
movs
and
sbb
not
es
sub
retf
cmp
jne
and
imul
and
add
or
push
in
repnz
mov
mov
dec
push
add
or
adc
inc
ss
inc
shr
pop
sbb
jmp
pop
pop
xor
or
inc
xor
and
aam
btc
xchg
mov
xor
scas
xor
xor
push
xor
add
push
adc
arpl
fisubr
enter
and
sbb
pop
and
adc
add
or
adc
xchg
mov
add
sbb
add
imul
retf
ss
mov
or
adc
dec
dec
mov
or
pop
adc
xlat
pop
sti
add
dec
scas
mov
or
push
adc
jb
loop
sub
retf
(bad)
inc
pop
add
mov
push
or
jl
(bad)
femms
add
xchg
mov
inc
sar
inc
ja
push
inc
pop
or
in
call
or
clc
adc
add
fiadd
xor
add
adc
je
leave
add
clc
jne
add
xchg
cmps
(bad)
jnp
test
mov
jne
pop
mov
inc
adc
mov
jne
hlt
(bad)
mov
jno
pop
add
popa
stc
cmps
lock
aad
ror
pop
mov
cmps
in
add
dec
nop
lods
xor
lea
jae
add
cld
or
add
fcomp
imul
jp
push
and
fsubr
aad
or
shr
and
adc
rcr
repz
loopne
push
jp
or
ja
ror
adc
cmp
jmp
push
call
je
call
int
lds
adc
rol
xchg
or
mov
pop
sbb
mov
out
or
jne
and
add
sbb
adc
fdivr
div
pcmpeqb
loopne
and
cmp
xchg
sahf
or
popf
lods
push
test
and
sub
jb
popf
add
(bad)
xchg
mov
pop
aaa
or
push
cwde
sub
dec
popf
aaa
aas
shl
popa
cmps
lds
adc
mov
dec
leave
ret
and
cdq
jo
outs
pop
xor
add
adc
test
pop
dec
add
push
mov
and
out
lock
ins
repnz
and
push
call
ins
aam
lock
push
add
dec
sbb
sub
adc
mov
jns
inc
add
inc
pop
or
add
dec
push
fistp
jae
and
or
or
cmp
fisttp
mov
cld
pop
mov
pop
push
or
and
call
sbb
mov
push
inc
loopne
rcl
or
mov
xchg
xor
pop
je
mov
(bad)
adc
xchg
xchg
cmps
mov
push
and
jp
pop
test
inc
pop
push
jne
push
aam
dec
les
sub
push
mov
addr16
inc
aad
popa
outs
js
push
xor
icebp
adc
adc
sub
or
cdq
scas
ss
jo
push
pshufw
xor
inc
inc
xor
inc
ret
rcl
adc
pop
iret
mov
add
in
sub
mov
outs
mov
out
dec
xchg
lea
xor
loop
aaa
mov
test
pop
mov
mov
mov
mov
dec
(bad)
adc
iret
aam
sub
pcmpeqd
js
jp
xchg
xchg
xchg
jnp
jge
xchg
xchg
xchg
xchg
jg
popa
bound
fs
xchg
xchg
xchg
addr16
xchg
xchg
imul
xchg
xchg
xchg
outs
push
push
push
xchg
xchg
xchg
xchg
push
push
push
push
xchg
xchg
xchg
xchg
push
pop
pop
pop
xchg
xchg
xchg
xchg
pop
pop
pop
pop
xchg
xchg
xchg
xchg
pop
inc
inc
inc
xchg
xchg
xchg
xchg
inc
inc
inc
inc
xchg
xchg
xchg
xchg
inc
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
xor
xor
xor
ss
xchg
xchg
xchg
aaa
cmp
cmp
mov
push
dec
xchg
cld
sbb
pop
adc
js
fld
adc
pop
mov
and
jb
jecxz
cmp
push
mov
pop
daa
and
lods
cmps
sub
xor
or
pop
enter
dec
fs
add
or
mov
add
jle
xlat
cmp
push
adc
adc
sbb
in
mov
add
lock
or
push
call
mov
jmp
add
repz
add
jmp
add
and
jge
inc
and
add
pop
pushf
add
mov
mov
popa
add
ret
outs
add
pop
or
test
add
ror
inc
ja
pop
ins
or
and
in
imul
adc
adc
addr16
ins
cmps
xlat
or
cmp
mov
movs
inc
sbb
pop
ins
jg
shl
sub
test
ficom
out
push
(bad)
adc
in
cdq
pop
repnz
aam
inc
push
xchg
adc
and
add
add
mov
jae
or
inc
ins
popf
push
jmp
xor
xchg
int3
test
xor
push
clc
jmp
mov
or
jns
mov
ror
sbb
int
add
pop
test
inc
in
push
nop
push
inc
ds
or
mov
cmc
sub
les
imul
leave
dec
mov
ret
pop
and
cld
add
push
je
push
test
aam
sbb
push
push
dec
push
mov
xor
or
lock
cli
push
sbb
pop
pop
inc
pop
shl
mov
sbb
ror
(bad)
or
cmp
mov
or
aam
nop
(bad)
jmp
or
dec
call
adc
add
ss
iret
cmp
lahf
rcr
and
jo
call
les
les
lds
loopne
test
test
cmps
scas
fistp
push
add
adc
adc
push
sub
in
mov
shl
inc
(bad)
sbb
dec
bound
adc
(bad)
xlat
and
xor
popa
mov
(bad)
pop
enter
int3
mov
fistp
lock
pop
shr
add
adc
sbb
outs
add
(bad)
xchg
jne
aam
mov
call
add
(bad)
mov
and
push
pop
xchg
mov
dec
add
test
imul
arpl
lahf
stos
scas
fmul
jecxz
jno
pop
add
add
push
or
jbe
test
gs
jle
imul
push
push
adc
cmp
xlat
xor
push
in
add
add
or
iret
mov
mov
in
or
icebp
add
xor
fadd
sbb
xor
aas
pusha
fdivr
in
rcr
hlt
add
stos
inc
xor
xchg
mov
xor
or
test
aam
sbb
push
pop
xor
and
and
in
or
xor
push
jbe
or
cmp
jmp
in
xchg
jno
adc
enter
sub
cwde
push
add
xor
pop
dec
xchg
add
fs
dec
adc
pusha
dec
push
pop
push
add
jl
aas
js
add
ja
push
or
clc
add
adc
enter
xor
mov
push
ror
dec
or
cdq
add
dec
push
cmp
adc
in
dec
or
fimul
mov
mov
add
sbb
or
mov
push
pop
ret
ss
push
sahf
xchg
int
cmp
sub
add
ret
pop
xor
int3
jmp
add
outs
jmp
sbb
xlat
xchg
push
inc
dec
pusha
aaa
fimul
push
push
mov
test
cmp
jg
push
lea
mov
pop
sbb
pop
(bad)
mov
shr
mov
cmp
es
cmps
mov
aas
inc
add
inc
sbb
jge
add
iret
or
xchg
rcl
rol
(bad)
dec
push
enter
add
xchg
rol
in
(bad)
pop
ret
sbb
loopne
cli
and
mov
sub
add
sub
xchg
and
or
push
hlt
mov
sbb
push
ret
or
test
in
xor
sahf
adc
fld
push
mov
and
and
out
test
sbb
mov
and
clc
xchg
jne
xchg
add
xchg
and
daa
add
mov
mov
mov
cmp
repnz
jmp
jbe
add
push
jge
jg
xor
xchg
pop
push
lea
pop
xchg
inc
mov
mov
push
jb
sahf
jg
jg
mov
pusha
xor
mov
(bad)
rcl
dec
ja
mov
jns
(bad)
jno
lock
xor
adc
pusha
outs
fadd
test
adc
push
pop
pop
jae
push
cmp
and
jns
dec
mov
shl
xchg
(bad)
push
or
mov
popf
and
lock
sar
or
or
adc
mov
xlat
(bad)
jo
cmp
sub
out
push
xor
sbb
daa
mov
(bad)
hlt
ds
inc
mov
push
jno
cmp
rcl
and
sub
xor
mov
xor
aad
loopne
add
adc
push
popf
mov
in
ficom
mov
adc
mov
add
mov
je
jb
fsub
sub
xchg
push
dec
sub
popf
mov
dec
jp
hlt
fmul
and
xor
jmp
in
test
and
sub
adc
sbb
call
pop
xchg
sub
cmps
jecxz
dec
cmp
or
sahf
xchg
or
add
and
fadd
inc
dec
shl
or
cli
ins
xchg
xor
popa
(bad)
pop
hlt
and
scas
push
push
fcom
mov
ret
mov
mov
push
xchg
xor
inc
call
adc
sub
clc
add
pusha
sub
sub
test
out
outs
mov
outs
pop
rol
jecxz
in
add
adc
fisttp
dec
bound
add
sub
and
push
ins
ret
out
xchg
or
je
imul
add
jo
fsub
xor
add
xor
add
and
div
nop
xchg
or
push
add
adc
lock
je
mov
fist
jns
jmp
jg
push
data16
enter
je
fwait
daa
or
arpl
adc
adc
gs
jl
jo
imul
(bad)
cdq
scas
cmc
mov
or
ins
or
mov
(bad)
push
outs
int
and
pop
jo
outs
scas
sbb
sbb
push
inc
ss
jns
je
sbb
or
push
inc
mov
mov
push
ror
aam
les
sbb
jb
int3
inc
add
push
inc
ins
movs
or
xchg
outs
sbb
movs
dec
rcl
mov
fst
xor
push
push
(bad)
push
push
inc
jns
sbb
or
dec
mov
gs
and
xor
out
ret
sbb
xchg
jge
ss
xor
aas
mov
inc
jmp
aaa
int
mov
add
jne
sbb
or
pop
sub
mov
loope
push
xor
dec
jl
jp
lods
push
sub
data16
push
fidiv
add
cs
inc
imul
out
fisubr
outs
jae
es
adc
and
out
dec
pop
xor
cmp
mov
pop
add
outs
test
jmp
inc
xor
sub
push
aad
pusha
pushf
mov
and
les
push
lds
movs
or
out
out
js
push
inc
pop
adc
not
imul
cmps
inc
xchg
add
pop
clc
xchg
cdq
mov
add
sub
pop
push
push
unpcklps
jl
inc
mov
inc
out
ret
or
and
retf
add
push
pop
pop
adc
mov
adc
push
in
push
in
add
stos
sbb
(bad)
(bad)
cld
inc
inc
push
add
or
mov
dec
aas
mov
push
dec
gs
pop
repnz
push
mov
outs
jge
dec
cmp
dec
xchg
jo
nop
dec
or
sahf
add
mov
mov
add
jmp
inc
ss
push
add
push
push
and
adc
sub
jl
mov
clc
xchg
cmp
das
out
icebp
pop
ins
mov
movs
sbb
pusha
cmc
es
dec
mov
add
jns
scas
cmp
lahf
pop
sbb
or
and
inc
add
dec
stc
loop
jns
add
cwde
dec
add
es
add
jo
mov
mov
mov
sti
jo
(bad)
fdivr
in
xor
je
outs
jae
pop
inc
xor
xor
outs
xchg
push
dec
sbb
js
push
ret
ins
fstp
lahf
pop
sbb
add
add
scas
and
(bad)
(bad)
in
int3
push
xor
adc
mov
(bad)
(bad)
xor
pop
nop
scas
mov
int3
push
inc
pop
pop
rcl
jo
push
push
lods
imul
popa
nop
jae
pop
sbb
push
pushf
sub
movs
lods
xor
popa
push
add
xlat
daa
and
pop
aas
push
int3
push
or
and
test
imul
lods
das
cmp
mov
shl
inc
push
mov
into
mov
fcom
push
xchg
outs
sbb
mov
sbb
inc
push
sbb
cmp
out
xor
cs
mov
dec
mov
sbb
pusha
mov
pusha
cs
(bad)
loopne
je
add
inc
(bad)
jnp
pop
dec
push
push
sub
adc
ins
inc
in
(bad)
fadd
ins
inc
push
test
(bad)
hlt
sti
int3
outs
fwait
outs
clc
outs
pop
outs
pmulhuw
pop
mov
mov
outs
add
mov
pop
add
add
call
or
(bad)
loopne
add
les
nop
je
std
fdivr
sub
fmul
fcom
mov
push
test
aas
pusha
ins
cwde
mov
inc
cmp
sbb
xchg
dec
push
js
add
lock
push
jb
jecxz
ja
push
fdiv
jne
es
je
add
les
enter
in
cmp
je
jb
out
pop
and
push
push
ret
sub
in
add
mov
or
mov
push
popa
fsub
popa
addr16
inc
xor
fwait
dec
ds
cwde
mov
sub
push
push
inc
in
out
jno
popa
data16
nop
movs
mov
sbb
pop
or
xchg
inc
mov
inc
loopne
inc
jge
retf
xchg
add
push
or
jp
pop
jge
xchg
push
fdivr
jl
inc
push
imul
js
cwde
jle
sahf
cmps
jge
pusha
pusha
sbb
add
or
scas
loop
inc
popf
pop
jne
mov
dec
call
push
(bad)
cmp
or
push
sub
out
mov
xor
in
xchg
pop
aaa
cmp
daa
jns
inc
xchg
adc
loopne
xchg
cdq
dec
call
rcr
call
mov
mov
xchg
paddusw
imul
push
adc
sbb
jle
dec
inc
in
pop
cmps
sahf
pop
outs
xchg
jo
pop
sbb
ss
ficom
aaa
xchg
fdiv
sbb
out
push
movs
ss
push
or
outs
outs
bound
cmp
pop
leave
stos
mov
sbb
jle
daa
cmp
scas
lock
sbb
inc
inc
sub
add
mov
xchg
push
ins
push
sahf
enter
sahf
div
ror
imul
cs
pop
sbb
jae
cmp
add
ret
nop
and
xchg
mov
jmp
aaa
sub
lahf
ret
push
clc
dec
lock
cmp
and
popa
outs
push
int3
call
and
inc
les
inc
cmp
mov
dec
inc
ror
or
xor
inc
dec
jne
cmps
xor
dec
and
fist
test
mov
bound
adc
ja
inc
pop
and
pop
retf
add
movs
call
dec
push
cmp
rol
mov
ins
or
je
sbb
jne
(bad)
xchg
jo
loope
jge
adc
push
rol
jecxz
sbb
xor
jb
mov
dec
fild
xchg
(bad)
xchg
sub
adc
dec
je
ret
inc
add
outs
daa
add
dec
add
or
(bad)
cmp
(bad)
dec
and
push
movs
hlt
pop
pop
lea
adc
push
(bad)
enter
sub
dec
enter
pusha
or
xor
fs
setb
imul
and
and
adc
cmps
cmp
mov
xor
jb
test
mov
pusha
sub
aaa
sti
cld
cmp
push
outs
and
cmp
adc
aaa
xor
cmp
je
pushf
lea
and
xlat
cmp
adc
movs
in
dec
dec
cmp
or
sbb
pop
ins
icebp
mov
sar
je
jmp
xchg
fst
pop
or
dec
mov
loopne
jp
mov
inc
sbb
pop
mov
push
(bad)
out
xor
adc
nop
cmp
jg
fst
repz
adc
or
add
stos
call
cmp
iret
ins
push
call
loope
push
daa
inc
imul
int3
jmp
inc
xor
popa
(bad)
mov
mov
shl
jae
sbb
fidivr
jb
pop
push
cmps
dec
inc
popa
sbb
fwait
or
or
push
add
rol
add
arpl
into
jg
packsswb
jb
outs
outs
inc
inc
cld
mov
pop
inc
outs
pop
dec
ins
imul
push
xchg
jbe
add
jb
ins
gs
gs
ins
pop
sbb
pop
dec
jbe
push
imul
adc
dec
imul
pop
pop
gs
ins
outs
ja
jne
enter
or
arpl
imul
add
pop
inc
or
add
ja
imul
ins
inc
dec
leavew
pop
mov
sub
les
das
cmovae
push
int3
jg
jo
push
pop
imul
adc
sub
dec
add
sbb
jmp
dec
fs
sbb
inc
ins
das
or
rol
ins
jg
gs
mov
pusha
cmp
mov
inc
and
xchg
ss
lahf
sbb
fisub
or
sbb
inc
pop
or
push
test
and
mov
js
ins
jg
fcomip
fwait
and
aaa
adc
adc
add
out
enter
mov
ret
cmp
outs
jne
jl
lds
xchg
daa
bndstx
das
lahf
sbb
inc
inc
dec
cs
push
arpl
addr16
add
imul
das
cmp
(bad)
jg
aaa
and
or
les
or
adc
ret
push
mov
dec
cmps
or
dec
out
pop
add
pop
or
dec
or
mov
or
fdivr
aas
int3
mov
dec
pop
inc
dec
inc
push
push
inc
push
add
int3
mov
inc
inc
inc
inc
mov
or
jg
not
dec
inc
dec
dec
arpl
xchg
cmp
dec
dec
inc
push
dec
dec
push
pop
mov
cmp
addr16
dec
dec
and
out
inc
inc
xor
(bad)
dec
enter
mov
and
mov
aas
fiadd
xchg
inc
push
inc
inc
dec
int
in
mov
push
push
dec
dec
push
dec
dec
mov
push
ins
imul
sbb
mov
nop
jl
inc
dec
push
mov
dec
inc
dec
mov
out
push
dec
pop
test
inc
inc
push
push
push
dec
push
inc
scas
mov
aas
in
inc
dec
push
mov
daa
xchg
add
mov
lods
mov
sub
cmp
mov
xchg
add
outs
dec
(bad)
mov
and
test
neg
adc
lock
outs
(bad)
jl
or
adc
adc
xchg
addr16
or
push
pop
clc
pop
mov
xchg
cmp
jg
and
xlat
sbb
mov
test
sbb
out
adc
pop
xor
jmp
dec
xor
cld
or
jmp
mov
inc
inc
pusha
shl
mov
scas
mov
jge
push
inc
fs
loopne
test
arpl
mov
lahf
mov
or
test
jmp
xor
add
sub
lods
sbb
aad
aas
dec
push
popa
aam
adc
popa
fstp
in
inc
jnp
inc
ret
das
pop
and
xchg
dec
push
sbb
fild
shr
xor
test
jne
std
sahf
(bad)
cmp
lock
inc
popa
gs
mov
ror
cmp
test
fdiv
push
inc
cmp
fimul
jo
cli
inc
cdq
test
xor
add
retf
pop
leave
mov
jae
fsubr
clc
daa
dec
icebp
xchg
je
cmp
je
or
cmp
or
(bad)
xor
cmp
xchg
lods
jne
mov
es
clc
test
test
(bad)
xor
mov
mov
mov
sbb
rcr
arpl
xor
xor
sbb
pushf
jge
sbb
dec
mov
enter
mov
je
shl
jmp
adc
retf
in
mov
inc
aam
add
jmp
(bad)
popa
push
cmp
and
mov
rcl
in
xlat
jmp
or
cld
dec
loopne
cwde
add
jecxz
mov
mov
sub
mov
xor
mov
and
sbb
sbb
pop
mov
jb
inc
jl
jno
fisub
mov
xchg
inc
inc
arpl
cmp
jo
xor
add
mov
aaa
(bad)
or
jo
add
dec
fwait
out
out
jge
sbb
fadd
jmp
fadd
fld
push
(bad)
inc
popa
mov
push
push
or
loop
or
into
fild
or
dec
(bad)
or
dec
test
loopne
retf
aaa
mov
stos
imul
test
lods
movs
fwait
add
adc
or
pop
dec
shl
outs
outs
loope
sub
adc
push
cmps
sub
or
and
lods
mov
inc
inc
movs
jbe
pop
mov
add
sub
jg
pop
inc
scas
pop
ror
push
dec
movhps
outs
inc
sbb
xor
es
ins
add
sbb
aaa
and
dec
xor
cmp
fcomi
fimul
das
pop
neg
push
aam
push
aaa
mov
sbb
cmc
adc
out
add
sbb
mov
adc
(bad)
xor
push
out
loope
xchg
jp
bound
js
(bad)
sub
push
dec
cs
push
out
sbb
pop
push
ffree
(bad)
in
sbb
dec
dec
mov
inc
cmp
xchg
cmp
mov
dec
das
test
add
and
xor
adc
adc
sub
cmp
inc
and
cs
mov
add
add
nop
int3
dec
addr16
xchg
or
cmp
cmp
xor
xchg
adc
push
jne
fild
xchg
cmp
xor
cmp
rol
imul
xlat
fild
repnz
dec
or
das
xchg
add
leave
inc
mov
ss
lock
mov
or
push
sbb
or
xchg
adc
sub
hlt
nop
sub
enter
xchg
dec
jmp
repnz
dec
fadd
push
or
push
nop
mov
pop
or
mov
out
mov
fisttp
inc
ds
cmp
inc
xchg
jmp
add
adc
inc
jne
mov
test
xor
xlat
sar
xchg
lock
add
je
pop
mov
cmps
mov
ret
add
fld
aaa
jo
test
dec
jmp
bound
fst
movs
ror
jmp
sub
add
jbe
adc
rcr
arpl
lock
out
pop
ins
rcl
or
lods
aas
ss
adc
and
or
adc
(bad)
arpl
nop
pop
addr16
add
ja
test
and
jb
jle
imul
inc
cmp
es
xor
enter
dec
das
cmp
mov
test
or
test
lods
test
mov
pop
jp
push
clc
cdq
mov
jne
jns
pop
adc
push
(bad)
add
cmps
aad
cwde
pop
pop
lock
push
adc
mov
les
cmps
jge
jmp
shr
loopne
test
pushf
cmp
mov
mov
push
mov
sub
lods
cmp
or
or
fcomp
pop
shl
push
or
push
push
dec
int3
fisub
outs
pop
mov
sbb
movs
xchg
in
sbb
cwde
cmp
xor
js
pop
push
mov
mov
shl
ins
xchg
adc
jnp
cmp
and
sub
bound
iret
mov
sub
mov
dec
in
movs
loopne
adc
pop
and
sti
dec
mov
push
pop
xchg
call
jecxz
jnp
int3
test
or
and
(bad)
out
jge
push
ins
fcom
outs
or
fisttp
inc
push
sbb
inc
dec
mov
lea
int3
cmovge
aaa
mov
push
push
mov
pop
and
shl
adc
popf
pop
push
rcl
ret
iret
adc
call
inc
test
je
push
add
jmp
adc
rol
mov
or
pop
adc
and
frstor
or
mov
ins
inc
add
test
adc
sbb
(bad)
lds
jae
sbb
or
pushf
mov
xchg
pop
pop
cmp
add
neg
adc
pop
dec
ret
xor
sbb
and
fisttp
push
or
(bad)
outs
jl
mov
add
pusha
loope
add
xor
or
in
mov
mov
call
in
and
adc
mov
in
pop
or
inc
xchg
pop
xchg
or
dec
xor
push
clc
or
sbb
adc
mov
jl
pushf
adc
mov
pop
ret
lods
xchg
lea
movs
movs
pop
pop
sbb
adc
or
ins
sub
mov
and
dec
pop
xchg
popf
in
push
inc
outs
adc
or
jge
and
xchg
pop
jnp
fld
xchg
call
dec
cli
fldcw
jmp
not
and
push
or
shl
or
outs
or
mov
adc
xor
cdq
jle
(bad)
rol
ja
xor
imul
mov
push
fcom
cmps
dec
jle
retf
dec
popa
add
arpl
(bad)
sbb
jmp
dec
or
add
push
jl
rcr
jl
xchg
mov
not
and
(bad)
fs
cmp
je
mul
dec
adc
and
adc
ins
push
jo
jne
xchg
dec
mov
in
repz
dec
mov
add
and
and
mov
sub
in
call
mov
cmp
aaa
cmp
sub
adc
aad
nop
cld
adc
and
xchg
arpl
pop
sub
mov
out
out
and
inc
jo
push
add
and
push
xor
dec
push
movs
add
add
sub
lds
cmps
idiv
es
ds
pop
and
mov
or
leave
ret
loopne
inc
pop
enter
test
int
adc
push
pop
dec
jns
imul
pusha
dec
push
jae
inc
add
pop
inc
mov
in
or
rcl
inc
add
push
push
mov
cmp
in
add
add
out
das
lea
or
aas
test
jmp
dec
sbb
sub
popa
adc
cld
pusha
pop
dec
or
push
popa
ins
jle
int3
int3
js
rcl
(bad)
cmp
adc
in
vmwrite
xchg
jbe
int3
push
push
sub
loop
push
dec
test
xor
sbb
adc
iret
cmp
jno
arpl
cmp
imul
in
je
pop
jle
pop
nop
mov
inc
movs
jae
mov
pop
or
daa
lahf
pop
inc
call
movs
cmps
cmp
es
mov
out
inc
push
out
pop
in
sbb
inc
inc
or
loop
push
aas
in
mov
ins
les
adc
sbb
rol
ja
or
add
nop
adc
scas
mov
pop
fild
add
fiadd
fincstp
or
loope
and
frstor
mov
das
outs
ret
outs
and
adc
pop
pop
daa
fisub
jmp
jno
jne
adc
jne
xchg
sbb
enter
dec
adc
je
cs
pushf
adc
jae
push
add
lahf
push
push
xor
ret
sub
shl
jecxz
and
push
test
mov
add
test
sahf
ins
or
push
push
sbb
or
sub
xor
and
cmps
push
(bad)
fmul
adc
and
mov
push
sub
dec
jmp
jns
xor
pop
int3
dec
pop
or
popa
add
sbb
and
lock
das
or
adc
inc
aam
loope
mov
dec
sbb
sti
push
loopne
mov
mov
mov
inc
add
stos
dec
jbe
xor
jo
or
or
pop
mov
and
punpckhdq
adc
fimul
and
sbb
add
sbb
xchg
lea
add
xor
pop
push
dec
pop
add
add
mov
inc
adc
pushf
add
fcmovnb
inc
adc
sub
adc
dec
rol
je
shl
pop
into
mov
lea
pop
pop
test
int
pop
push
inc
dec
jne
dec
punpcklwd
and
sbb
adc
mov
mov
nop
rol
aad
(bad)
imul
inc
jae
jae
dec
sbb
push
cmps
jo
mov
js
push
mov
and
adc
cmovl
mov
fmul
mov
dec
jns
imul
sbb
xor
and
(bad)
mov
sub
shl
mov
mov
pop
push
inc
stos
jmp
out
jle
mov
outs
test
xchg
and
or
pop
popa
inc
add
loopne
push
sub
adc
mov
or
jge
cmp
ret
arpl
out
in
add
ds
ds
out
int
inc
movzx
lea
ins
xchg
sbb
dec
jnp
cs
jmp
addr16
iretw
popa
inc
xchg
or
fs
cld
cli
jno
and
and
outs
sahf
cmp
aad
ja
pop
jmp
mov
cmp
clc
mov
das
mov
icebp
inc
das
outs
dec
in
push
movzx
lea
or
add
add
jmp
pop
pop
pop
adc
cmp
sub
cmp
pop
push
push
pop
clc
test
lods
pusha
push
inc
ss
sbb
je
add
push
inc
mov
ss
es
mov
xor
jae
cmp
xor
shl
je
pop
or
pop
add
or
push
push
lods
sub
xor
push
addr16
aaa
add
sbb
push
nop
jp
or
lods
inc
adc
jmp
push
outs
push
dec
xchg
fnsave
inc
add
shl
enter
in
shr
pop
adc
cdq
push
push
xchg
iret
and
test
aas
adc
push
das
test
inc
and
xor
mov
jge
add
xor
jb
xchg
adc
or
retf
add
dec
push
es
pand
les
retf
dec
pop
cmp
nop
xchg
std
loop
ins
aam
loopne
es
and
cli
and
push
pop
pop
adc
shr
and
fisttp
and
repnz
das
jns
sbb
xchg
fs
or
mov
and
jae
(bad)
push
repnz
cmp
ins
out
jno
push
or
mov
push
adc
add
movs
sbb
cmps
or
pop
sbb
jne
ss
and
sar
lods
and
mov
(bad)
cmp
jg
test
jle
cmp
dec
xor
enter
add
cmp
jg
test
pop
clc
jle
imul
dec
mov
ret
(bad)
push
dec
push
xor
or
nop
cmp
add
mov
add
ins
adc
or
jb
ret
lods
push
pop
mov
adc
add
xor
psubusb
or
test
lods
xchg
dec
pop
mov
sbb
scas
(bad)
cmp
inc
xchg
or
in
inc
sub
(bad)
or
lds
sub
sbb
add
cmp
daa
retf
mov
sbb
pushf
mov
div
xor
or
jl
push
cmp
int3
lock
mov
add
jne
je
(bad)
jle
dec
jne
cmp
jnp
rol
adc
ret
xor
cld
(bad)
mov
push
aam
and
inc
adc
and
inc
ret
int
xor
pop
aam
xor
push
or
pop
push
pop
add
movs
xor
enter
mov
test
jbe
nop
mov
shl
mov
mov
ficomp
push
mov
add
dec
in
sub
xor
sbb
dec
das
cmp
inc
rol
repz
test
hlt
push
popa
ret
ins
jnp
push
mov
mov
add
push
push
mov
mov
adc
xor
outs
aam
ret
xor
imul
pop
mov
fadd
inc
aam
test
shl
fs
rcr
push
scas
dec
or
ror
lock
xor
push
inc
pop
out
lods
push
sbb
xlat
fidivr
push
lea
dec
push
hlt
jmp
and
sbb
mov
js
sub
mov
fild
mov
and
sub
add
add
(bad)
fidiv
lock
dec
or
jle
lock
jmp
jo
adc
jmp
setb
ss
dec
jmp
adc
inc
dec
adc
ins
and
cld
js
int3
sub
or
inc
and
ins
xchg
pop
jae
and
xlat
sbb
and
push
sub
gs
or
jmp
adc
mov
cmps
fcom
loopne
(bad)
arpl
pop
test
fist
pusha
icebp
out
cwde
imul
add
add
es
lea
mov
push
adc
mov
sbb
push
push
mov
add
and
xor
cmp
das
mov
imul
push
dec
dec
push
or
clc
pop
int3
mov
lods
and
data16
add
push
dec
xor
clc
clc
hlt
hlt
ret
or
pop
lods
or
das
xchg
add
mov
sub
add
mov
pop
scas
call
test
lods
outs
imul
mov
adc
stc
and
pop
push
cdq
mov
push
in
xor
pop
inc
fld
sub
cmp
stos
and
sub
pushf
in
loopne
add
loop
dec
shl
jmp
lds
push
cmp
add
and
out
repz
and
adc
or
push
(bad)
mov
(bad)
out
push
scas
add
push
lods
or
lods
ja
add
push
or
mov
stos
mov
mov
mov
sbb
mov
mov
hlt
lods
sbb
in
daa
adc
sbb
sub
rcl
adc
test
daa
int
xlat
adc
adc
and
in
sub
mov
and
mov
add
adc
add
test
aas
mov
test
jns
jg
sbb
adc
mov
rcl
fcom
and
xor
nop
mov
je
push
adc
out
sbb
add
mov
and
jp
movs
jmp
or
and
adc
and
fmul
cmp
ret
sub
je
imul
pop
loop
push
test
int3
fild
outs
xchg
clc
mov
inc
dec
hlt
ret
(bad)
repnz
mov
inc
adc
adc
and
scas
xchg
add
push
cmp
xlat
pop
retf
mov
push
or
inc
leave
ror
inc
mov
retf
pop
push
adc
les
aas
push
jo
retf
outs
xchg
cld
nop
retf
push
ror
cld
push
push
dec
cmp
pop
js
iret
push
sbb
pop
adc
or
test
fld
jecxz
mov
ins
mul
popf
pop
imul
mov
and
sbb
nop
faddp
mov
fsub
lods
jmp
das
cmp
and
pushf
and
in
inc
aas
dec
movs
ror
dec
enter
xor
cs
(bad)
jge
push
sbb
test
lods
sub
xor
inc
repnz
leave
movs
jo
(bad)
pop
push
cmp
aas
jle
rcl
mov
adc
adc
jo
outs
add
jb
add
mov
and
loop
pop
xor
inc
inc
mov
mov
and
pushf
add
sub
inc
mov
dec
and
sbb
or
and
or
pusha
sbb
xor
cmps
cmp
pop
pop
test
jmp
sbb
data16
mov
shl
jmp
repz
add
scas
push
cmp
jmp
pop
add
daa
mov
or
inc
test
mov
pop
cmp
loopne
mov
and
aas
xlat
pop
jne
mov
popa
or
dec
or
mov
dec
mov
pop
dec
inc
jl
in
pusha
fisub
sbb
add
rol
dec
test
cmp
mov
test
or
pop
je
jnp
ins
(bad)
out
and
mov
push
mov
push
sti
ret
push
adc
sbb
sbb
ins
sbb
into
lock
pop
adc
dec
popa
adc
mov
inc
scas
dec
shr
mov
mov
adc
mov
daa
inc
push
nop
in
dec
xchg
mov
inc
test
clc
or
and
inc
test
popa
sub
mov
pushf
push
cmc
cmp
pusha
sub
push
mov
xchg
sub
or
lds
xchg
ficomp
pop
sub
aaa
sbb
adc
data16
xlat
dec
pushf
push
popa
sbb
repnz
cmp
in
xor
pop
clc
sbb
mov
sbb
je
jo
jnp
inc
xor
or
sbb
stc
rcl
bound
ins
or
and
(bad)
rcl
mov
imul
mov
xchg
dec
mov
mov
(bad)
cmp
pushf
jecxz
mov
cmp
lods
cmps
jl
inc
inc
xor
xor
cmc
and
mov
inc
xor
sti
sub
add
js
sbb
out
ror
cmp
cmps
nop
sbb
mov
adc
inc
cmp
jmp
push
or
add
pop
xchg
xchg
mov
add
fist
ret
push
mov
shl
xor
or
jl
in
sub
pop
sbb
sbb
punpckhbw
adc
sbb
dec
sti
pop
push
mov
fild
lds
jmp
adc
ja
ds
popa
cli
addr16
and
mov
jno
add
dec
inc
sbb
adc
int3
push
add
out
xchg
sub
inc
pop
mov
inc
sub
dec
loop
mov
and
and
push
jl
add
sub
pop
jbe
sbb
xor
imul
inc
js
xchg
dec
push
sub
loope
inc
sub
inc
sub
adc
clc
xor
jecxz
or
pop
(bad)
es
xor
mov
cmp
hlt
or
(bad)
pop
inc
and
mov
mov
daa
push
jo
mov
popa
imul
sub
in
pop
ret
or
push
jge
xor
movs
outs
call
daa
loopne
(bad)
(bad)
fsub
fdecstp
and
test
dec
adc
adc
add
sub
xor
adc
arpl
lea
mov
cmp
pushf
cli
mov
jge
mov
pop
sub
and
sub
push
lods
mov
pop
clc
jmp
push
push
cmp
push
adc
call
cmp
push
int
std
sub
cmp
not
xchg
push
push
clc
push
imul
retf
div
inc
enter
unpcklps
(bad)
dec
add
ss
adc
xor
cli
lea
cdq
nop
or
fistp
and
enter
or
inc
or
lar
push
sbb
sbb
outs
(bad)
jns
adc
enter
pop
and
(bad)
popa
pop
xchg
push
add
inc
or
mov
xor
scas
mov
cmps
icebp
add
or
js
jb
fadd
jmp
cmp
xor
pslld
adc
sbb
dec
dec
cwde
push
(bad)
cdq
lea
inc
xchg
loope
xlat
cmp
push
dec
pop
mov
xchg
out
pop
sub
jge
inc
ja
push
lock
or
fs
fs
dec
inc
cdq
mov
je
mov
inc
mov
mov
call
adc
cmp
push
(bad)
enter
xchg
or
xor
popa
and
movs
jo
int3
push
lods
fidivr
xor
(bad)
call
js
ins
movs
repnz
xor
movs
loopne
clc
push
sar
hlt
xchg
ins
fcomp
sbb
in
xchg
jmp
in
loopne
daa
test
in
push
retf
cmp
mov
push
in
ret
iret
rol
cmp
out
xor
mov
into
or
shl
(bad)
fimul
retf
rol
shr
inc
jo
into
fs
ret
sub
or
lock
adc
enter
lods
movs
inc
shr
and
and
dec
arpl
sbb
push
xchg
inc
sti
das
pop
enter
popf
sub
shl
ins
xor
das
mov
xor
fimul
mov
dec
mov
pop
mov
test
out
cmp
dec
shl
cs
add
ins
data16
inc
inc
jmp
js
je
jb
cwde
stos
mov
pushf
stc
jns
add
push
scas
in
cmps
ror
push
stc
test
jp
push
pop
cmps
pop
jg
outs
in
pop
pop
or
sbb
inc
and
jo
je
mov
jbe
daa
jno
in
adc
ja
inc
call
adc
sbb
das
movs
xor
jo
cmp
jmp
inc
sti
cmp
jle
xor
fs
leave
push
gs
mov
(bad)
mov
and
rol
pop
repnz
sub
add
adc
mov
rcr
mov
test
add
jle
xor
add
adc
pop
icebp
ins
pop
jp
test
pop
ficom
adc
or
movs
pop
ficom
sbb
sbb
mov
int
and
mov
rdtsc
rol
pop
iret
dec
clc
cmp
add
daa
in
hlt
test
xor
jle
xchg
ja
push
xlat
jb
xor
cdq
fcom
lods
fldenv
cdq
test
mov
call
mov
xor
pop
pop
repnz
or
dec
popa
cmp
ins
shr
scas
pop
pop
mov
xchg
and
sbb
inc
pop
fcom
test
add
jb
and
add
test
retf
popa
and
or
or
shr
fs
aaa
sub
mov
push
sbb
add
or
bnd
and
pop
jno
test
pushf
xchg
pop
sub
sbb
jmp
pop
sub
mov
imul
out
or
jnp
test
mov
hlt
out
xor
mov
enter
stos
xchg
js
jge
sub
and
mov
in
inc
imul
sar
loopne
sbb
xchg
stos
cmps
mov
sub
fmul
jmp
lods
lods
adc
push
sub
fbstp
xor
xor
or
js
jmp
shl
mov
adc
push
xor
fidiv
jnp
test
add
jb
cmc
fs
adc
inc
mov
add
jl
dec
mov
or
in
leave
pop
jmp
and
mov
jge
nop
outs
repz
inc
dec
cdq
mov
leave
push
pop
dec
stos
push
jg
adc
or
loop
mov
mov
pusha
mov
ja
xchg
xchg
xchg
inc
add
dec
cld
in
push
stos
dec
mov
ins
jg
adc
shl
push
push
mov
dec
jb
mov
es
movs
lock
sub
cmp
add
add
fidivr
xchg
outs
and
cmp
pop
out
adc
enter
inc
enter
adc
mov
add
inc
int3
cmp
mov
(bad)
push
adc
mov
pusha
punpckhdq
xor
dec
or
pop
adc
cwde
ja
test
sbb
mov
nop
pop
push
add
inc
inc
pop
rol
daa
sub
pop
xchg
mov
pop
xor
mov
shl
pop
sub
pop
cmp
dec
jo
xchg
mov
adc
push
pop
push
xlat
es
pop
jmp
jae
dec
adc
xor
cmp
int3
push
hlt
pusha
pop
rol
push
loope
dec
leave
inc
pop
mov
shl
das
mov
push
dec
(bad)
(bad)
pop
push
call
adc
or
push
push
leave
adc
sub
or
es
retf
lea
mov
ja
in
mov
or
sbb
fist
imul
into
stos
inc
popa
adc
lock
sbb
add
jle
aas
jns
or
xchg
sub
mov
jp
lock
mov
cs
sub
and
mov
push
scas
inc
outs
adc
arpl
mov
cmp
mov
popa
xlat
xchg
jecxz
inc
inc
not
add
add
and
jne
les
data16
adc
mov
push
or
loopne
dec
lods
cld
mov
and
add
enter
add
or
dec
and
(bad)
fidiv
je
adc
repz
inc
mov
push
sbb
sbb
in
mov
add
sbb
add
mov
push
dec
sbb
js
push
fild
cmp
ins
xor
fnstenv
(bad)
dec
mov
aad
jecxz
xchg
jmp
jae
aas
mov
or
pop
mov
data16
xor
out
or
test
jmp
arpl
loope
or
mov
inc
fs
fadd
pusha
mov
xchg
inc
inc
div
add
sub
and
lahf
pop
xchg
mul
ror
mov
dec
mov
or
mov
lea
out
mov
push
movlps
test
fisttp
lods
ss
fistp
aad
xchg
or
push
(bad)
fsubr
push
inc
add
rcl
jge
pop
fldpi
sub
cmps
hlt
mov
mov
stos
add
sub
mov
popa
mov
sti
dec
fadd
jmp
pop
or
sbb
and
in
jmp
outs
rcl
adc
adc
sub
mov
adc
imul
and
jno
mov
inc
icebp
mov
lock
mov
ins
inc
push
or
mov
test
dec
fdiv
jle
inc
xor
jbe
xchg
test
in
adc
cmp
xchg
rol
sbb
stos
xor
(bad)
mov
leave
invd
xchg
xchg
out
not
int3
xor
imul
jg
movs
sbb
pop
int3
imul
daa
and
cmps
inc
sub
retf
(bad)
out
dec
test
dec
in
jb
ins
mov
jo
jno
in
inc
in
inc
in
aad
cmp
cld
pop
pusha
pop
mov
fsub
adc
mov
and
rol
and
jmp
push
or
mov
dec
repnz
imul
xrstor
pop
test
cs
pusha
xchg
fcom
cwde
lea
cld
or
rcl
dec
and
pop
js
ins
push
inc
push
aaa
xchg
or
inc
push
jns
mov
loopne
(bad)
sub
(bad)
mov
mov
loope
bound
imul
mov
jg
call
add
into
sbb
mov
lock
push
push
adc
mov
inc
push
scas
enter
xor
push
add
cmps
push
shl
pusha
inc
mov
aaa
or
xchg
sub
dec
fild
push
adc
rcl
adc
shl
xor
retf
xchg
emms
and
mov
add
mov
iret
jp
repnz
in
ds
rcl
popa
or
imul
jb
nop
add
lods
mov
xchg
movs
cmp
loopne
adc
ror
dec
jnp
adc
jo
sbb
push
seto
ret
jns
and
pop
hlt
lahf
sub
adc
xchg
addr16
sub
mov
stos
scas
(bad)
add
test
inc
lea
fadd
push
push
mov
xchg
mov
sbb
sub
popa
lea
out
popa
rcl
or
push
mov
mov
cmp
cmps
fwait
add
add
and
xor
cmp
cmp
test
or
dec
xor
test
xchg
test
adc
sub
shl
scas
push
jecxz
xor
stos
cmp
rol
js
add
lods
shr
sar
and
push
popa
jns
xor
fs
jmp
push
sbb
sbb
es
cmp
xchg
sbb
jge
aam
lahf
lods
and
sub
cli
or
jmp
mov
push
mov
add
sbb
cmp
icebp
cmp
mov
loopne
push
popf
pusha
sub
and
sbb
fldcw
or
rcr
mov
scas
aaa
es
ret
dec
lds
cld
and
aas
das
mov
ja
add
sar
xor
loope
pop
les
(bad)
fsub
inc
les
sbb
int
jl
push
sbb
jo
mov
sbb
(bad)
rol
jl
push
scas
push
pop
test
jecxz
pop
jmp
cmp
leave
add
cdq
ret
fcmovnbe
into
xchg
lds
inc
adc
and
sbb
adc
sbb
loop
sbb
or
jmp
sub
dec
in
retf
shr
rcl
cmp
gs
cmps
jge
cld
push
sbb
cmp
push
dec
pop
cmp
or
push
test
push
mov
imul
push
cdq
ret
sub
pop
addr16
pop
lods
add
sbb
cmp
in
mov
repz
in
mov
add
loop
and
adc
test
cdq
pop
dec
inc
or
inc
retf
repz
jnp
sbb
pop
and
lods
mov
adc
pop
movs
dec
dec
les
or
stos
or
cmp
and
inc
sbb
and
add
mov
jmp
mov
clc
jmp
and
out
lock
test
sbb
test
pop
mov
mov
(bad)
ficom
lahf
mov
push
rol
hlt
dec
pop
and
mov
sub
sub
push
das
inc
pop
sub
in
sub
or
push
sub
movs
out
xor
jl
lahf
aas
test
sub
pop
or
mov
inc
xor
jno
add
xor
rol
add
cmp
sbb
pop
pop
ja
divps
ret
push
adc
pop
sbb
add
out
pop
inc
mov
mov
push
fisttp
or
add
inc
jbe
add
add
stos
adc
and
xchg
btr
mov
addr16
sub
sub
xchg
ret
stc
adc
daa
dec
je
sub
je
sub
inc
or
ss
lock
or
cmp
or
xor
aas
lea
into
pop
or
jmp
aam
jmp
and
in
fwait
xchg
mov
jmp
mov
or
xor
ror
test
sbb
mov
add
mov
les
les
into
inc
in
dec
jle
sub
cdq
cmps
icebp
movs
mov
push
aas
sub
xchg
hlt
pop
jmp
inc
adc
pop
pop
jmp
mov
jmp
jo
pop
push
xor
dec
and
rcr
imul
xor
scas
repnz
push
arpl
jecxz
dec
pop
dec
xchg
or
ins
dec
pop
mov
js
mov
add
sbb
or
mov
sbb
in
inc
and
test
xor
jo
sub
push
dec
adc
cmp
push
ja
jae
adc
sar
int3
jg
jbe
xor
or
cmps
jne
imul
push
inc
test
adc
or
fistp
xlat
xor
inc
cmp
out
sub
fist
add
mov
stos
aas
pop
pop
push
loop
xor
or
xor
enter
scas
push
or
mov
push
aad
mov
push
adc
add
dec
mov
or
xor
inc
(bad)
mov
cmp
mov
ss
adc
adc
loope
mov
jmp
sub
mov
mov
push
fwait
ret
or
jne
fsubr
jo
sbb
pop
bnd
push
push
mov
push
mov
in
iret
or
jg
sub
jmp
jno
pop
and
push
movs
inc
and
mov
mov
or
mov
mov
ins
lock
add
bound
leave
xor
lods
add
pop
mov
seto
cli
jmp
sub
dec
loopne
sti
inc
and
push
ret
dec
ret
mov
ret
lea
cdq
pop
bound
dec
dec
cdq
sub
add
lahf
or
jo
cs
push
jecxz
jp
mov
dec
and
jo
pushf
mov
out
frstor
ror
cwde
clc
dec
mov
ins
pop
sub
jns
(bad)
les
mov
movs
lahf
cmp
inc
cwde
outs
ret
inc
xchg
stos
lahf
jb
push
fsub
or
ins
pop
add
add
mov
push
mov
test
loopne
cli
fcmovnb
and
cmc
loopne
mov
mov
fild
jmp
xlat
mov
dec
or
add
xor
sub
ins
mov
movs
mov
dec
mov
or
mov
sbb
sbb
sti
xor
or
or
or
pushw
fisub
push
sub
ds
jl
pop
test
pop
cs
call
add
jmp
add
rcl
(bad)
enter
retf
push
sbb
push
push
jle
add
and
retf
scas
nop
add
sbb
in
fmul
or
mov
add
pop
pop
and
(bad)
jg
icebp
sbb
mov
test
xor
adc
dec
icebp
mov
xchg
add
inc
in
pop
jo
cld
or
je
or
jne
mov
xchg
fidivr
push
sub
and
mov
add
imul
je
inc
mov
or
and
push
and
dec
or
(bad)
and
mov
cs
dec
sub
test
fld
push
enter
das
xor
cmp
jbe
mov
shl
adc
jp
hlt
pop
push
inc
xor
and
in
or
icebp
fscale
lock
in
jno
mov
xchg
into
imul
or
jns
mov
jnp
data16
jmp
jbe
mov
cmp
rol
int3
std
(bad)
xchg
ds
or
push
push
push
aaa
dec
mov
inc
or
addr16
(bad)
jp
fistp
cdq
xchg
mov
mov
fistp
aam
je
push
std
shl
add
xchg
int3
or
sbb
shl
icebp
cmp
inc
in
inc
mov
ret
and
inc
fcomp
push
loop
loopne
in
(bad)
push
or
add
in
push
jbe
adc
mov
dec
and
or
xchg
into
retf
fmul
imul
sbb
and
mov
loopne
outs
or
imul
mov
mov
pop
movs
push
addr16
rol
push
sub
mov
je
add
push
mov
inc
fisub
jne
mov
or
icebp
int
jb
mov
push
int3
push
adc
daa
mov
(bad)
loopne
lahf
fcomp
test
retf
sub
jle
and
jbe
cmps
mov
jo
inc
push
or
pop
push
add
xchg
adc
or
imul
test
in
or
inc
dec
ds
push
pop
cmps
push
mov
(bad)
mov
inc
sub
adc
fldcw
pop
lea
cmp
dec
shl
sub
call
sbb
pop
adc
adc
test
sbb
xchg
mov
push
adc
xor
imul
repnz
(bad)
or
add
ret
sub
mov
adc
adc
fidivr
mov
cwde
int
aaa
sar
lea
dec
adc
pop
mov
js
or
adc
jne
xchg
lea
sar
sbb
sbb
xor
inc
adc
jmp
xor
add
lahf
inc
mov
jmp
push
pop
push
add
or
call
sbb
iret
mov
retf
adc
lods
icebp
shl
inc
xor
or
add
and
cdq
add
add
pop
cmp
(bad)
ja
test
rcl
add
adc
and
cmp
adc
js
pusha
xchg
adc
mov
jecxz
cld
adc
(bad)
daa
sbb
cwde
repz
sbb
arpl
fninit
nop
pop
cmp
hlt
test
arpl
xchg
and
iret
mov
adc
sbb
das
push
cld
mov
push
xchg
inc
dec
cmp
mov
and
add
mov
mov
aaa
jo
es
test
sbb
mov
sbb
fsub
les
inc
mov
push
cwde
(bad)
sbb
(bad)
and
rol
dec
jp
dec
lods
push
scas
leave
aam
ja
mov
mov
adc
jmp
sbb
icebp
push
jge
jmp
jae
push
or
outs
pop
in
push
jne
ror
jbe
sbb
retf
add
xchg
mov
out
jmp
jl
inc
push
push
pushf
mov
sbb
pop
pop
mov
xor
xor
or
int
stos
and
fld
fnstcw
sub
jmp
repnz
mov
rcr
push
pop
aam
adc
sub
adc
mov
xchg
bound
mov
pushf
push
cmp
sub
(bad)
outs
nop
add
dec
pop
ins
fild
adc
cli
dec
jl
ins
popf
pop
mov
mov
icebp
(bad)
loopne
push
push
dec
cli
movs
lock
(bad)
jo
sub
mov
cmps
inc
sub
adc
add
cmp
lods
and
push
push
call
push
jo
out
aam
imul
mov
pop
or
(bad)
mov
ret
inc
sbb
ror
sub
imul
push
or
ss
inc
gs
push
ficomp
adc
inc
(bad)
outs
scas
sub
dec
inc
adc
dec
cmps
mov
ins
adc
add
popf
or
stos
popa
and
inc
movups
xchg
movd
out
daa
and
lods
and
(bad)
adc
dec
jmp
out
mov
and
push
push
sar
pop
inc
and
or
cmp
cmp
bound
aas
stc
dec
adc
jle
popf
je
push
mov
daa
jmp
inc
push
xor
std
adc
adc
je
ss
jns
ins
pop
dec
jo
mov
pop
adc
fwait
push
inc
inc
loopne
adc
inc
outs
pop
sbb
inc
add
fidivr
xchg
push
aas
push
fadd
cmp
add
or
sbb
pop
adc
ret
adc
xor
push
movs
jo
xchg
and
test
adc
(bad)
sub
mov
sbb
mov
pop
daa
add
pop
imul
cmps
adc
sahf
imul
inc
ror
pop
mov
jl
and
sbb
push
xor
adc
add
ja
sbb
mov
cmp
push
or
push
jle
or
mov
xchg
aaa
mov
cmp
xor
mov
in
call
sbb
push
push
rcr
add
inc
mov
inc
or
add
xor
nop
scas
pushf
add
mov
ds
test
or
sbb
scas
jnp
push
outs
cmp
adc
ror
inc
cs
daa
adc
ficom
lock
imul
and
mov
ret
sub
aas
sub
adc
or
call
test
and
or
jnp
in
adc
adc
add
movs
mov
xchg
mov
inc
pop
inc
xchg
out
shl
mov
or
cmps
mov
cld
aas
dec
mov
or
cmp
pop
cmp
lahf
out
inc
test
and
pop
mov
dec
test
cli
or
pop
mov
adc
(bad)
ror
sub
mov
shr
inc
lock
(bad)
stos
pop
add
xchg
out
mov
ins
jmp
(bad)
(bad)
dec
lods
jmp
or
push
push
push
movs
or
sbb
cmp
leave
inc
ins
adc
les
daa
rcl
dec
dec
adc
lods
test
inc
push
stos
aam
into
ret
pop
sbb
cmps
adc
inc
adc
cmp
aam
aam
and
ret
cmc
and
cmp
push
dec
fisub
cmp
jns
(bad)
xor
mov
and
mov
dec
sti
cmp
dec
xor
ins
xchg
cmp
ja
dec
pop
inc
jae
(bad)
xchg
inc
cwde
mov
inc
push
lods
fbld
jmp
movs
inc
daa
push
xchg
xor
and
sbb
xchg
ds
mov
push
loope
mov
or
pop
mov
push
pop
inc
(bad)
adc
or
imul
adc
add
cmp
fstp
shl
cmp
mov
mov
jg
dec
cmp
sbb
add
push
pop
push
pop
out
add
xchg
mov
push
pop
inc
cmp
les
aaa
dec
mov
sub
in
(bad)
mov
sbb
add
push
mov
fimul
adc
and
in
scas
ds
nop
(bad)
dec
and
shl
and
jnp
inc
movs
in
or
test
push
push
popa
push
cmp
adc
les
push
ins
out
jae
pop
or
adc
sbb
mov
cwde
ret
push
pop
jmp
imul
into
daa
dec
fld
lock
and
jb
inc
ins
and
push
dec
mov
sbb
xchg
aas
and
dec
andps
mov
sub
or
dec
adc
(bad)
inc
add
sbb
or
jo
dec
cwde
adc
cmp
xor
sub
adc
cmps
test
xchg
inc
pop
pop
dec
nop
(bad)
outs
or
dec
imul
jmp
inc
call
mov
pushf
ss
add
addr16
mov
out
xor
daa
add
mov
inc
rcl
aaa
loopne
xchg
mov
mov
mov
jbe
xchg
movs
add
inc
inc
adc
fcmovnbe
and
mov
enter
dec
(bad)
in
je
dec
or
inc
cmp
jo
or
mov
enter
fistp
jne
inc
cmp
ret
push
mov
mov
jl
adc
sar
aad
xchg
jns
sbb
pop
or
jo
ins
lock
dec
and
fiadd
jne
stc
mov
pop
and
mov
jne
inc
out
ret
pmulhuw
pop
dec
fsub
mov
test
mov
sahf
sub
sahf
imul
fist
inc
ficom
jb
fdiv
dec
adc
xchg
add
(bad)
jo
ret
mov
xor
mov
mov
add
in
pop
sbb
leave
sub
mov
pop
cmp
cmp
in
and
adc
aas
or
mov
imul
pop
aas
adc
cmp
retf
dec
add
or
(bad)
rcr
out
cmp
mov
stos
in
(bad)
daa
push
sbb
dec
fisttp
dec
inc
jo
mov
jb
sub
inc
jb
lock
dec
clc
inc
outs
je
pop
dec
gs
inc
dec
movs
pop
ins
ds
js
fst
xchg
xor
test
pop
ins
mov
cmp
cmp
xor
adc
stos
add
test
push
sub
jb
inc
iret
dec
movs
and
xlat
hlt
rol
add
xchg
sti
jns
loop
mov
xor
xlat
push
xor
jge
mov
and
pusha
xchg
pand
jmp
in
in
test
add
adc
test
inc
inc
scas
(bad)
mov
and
nop
daa
cmp
repnz
ds
das
sbb
(bad)
pop
in
loope
movs
hlt
jl
adc
adc
dec
inc
push
sbb
push
mov
mov
adc
stos
popa
push
iret
lods
retf
or
dec
test
movs
inc
adc
dec
inc
shr
(bad)
out
clc
sub
pushf
sub
sbb
sub
rol
aaa
jns
cmc
mov
or
loope
mov
mov
add
inc
dec
in
or
pop
and
inc
inc
lahf
jecxz
icebp
(bad)
mul
push
push
inc
out
lock
and
or
push
ror
and
loopne
jl
test
jbe
sbb
and
sbb
mov
sub
inc
test
adc
loopne
sub
sbb
in
add
test
push
sub
mov
inc
cmp
sbb
leave
cmps
add
test
add
mov
mov
ror
adc
pop
push
repnz
sar
add
add
sbb
inc
call
push
sub
or
cmp
fdiv
mov
adc
pop
add
imul
adc
clc
inc
add
push
pop
push
xchg
rcr
(bad)
ror
mov
loopne
je
dec
mov
inc
arpl
sbb
or
test
add
sub
test
xchg
jmp
mov
push
sbb
push
aas
sbb
pop
out
call
pop
push
out
push
in
adc
add
sub
and
mov
cs
jb
scas
push
shl
es
test
ins
inc
jg
enter
lea
mov
enter
inc
in
pop
nop
shl
gs
call
out
scas
test
in
jb
jg
sub
ret
xchg
arpl
inc
clc
shr
mov
push
xor
adc
xor
pop
push
pusha
add
pusha
push
xor
and
pop
mov
cdq
movs
call
dec
sub
inc
add
cmp
inc
outs
add
cmp
outs
es
outs
popa
outs
daa
sbb
inc
push
retf
push
add
pop
call
and
or
ja
xchg
jmp
das
jae
ins
gs
ja
loop
imul
jne
arpl
xor
push
mul
les
adc
xchg
ds
inc
or
xchg
cld
imul
adc
loopne
(bad)
sbb
push
push
dec
mov
test
imul
sbb
fs
and
enter
hlt
xor
lock
mov
jmp
dec
shl
imul
push
sub
inc
stos
(bad)
pop
dec
fmul
repnz
fdivr
out
xor
add
(bad)
in
xor
or
(bad)
movzx
sub
rcr
mov
dec
inc
inc
rcl
ret
inc
or
(bad)
aam
pop
or
test
in
sbb
out
adc
enter
ins
loopne
add
sar
and
aam
pop
ror
test
add
add
adc
ins
pop
add
dec
cmp
sub
lea
mov
shl
mov
out
fld
les
shl
sub
xchg
or
enter
mov
les
mov
sub
add
jl
xlat
or
repz
int3
inc
cli
or
and
lock
or
jne
iret
ror
aaa
push
mov
add
adc
xrelease
push
rol
std
rcr
das
sbb
jmp
mov
xor
push
adc
push
push
add
or
lock
mov
dec
or
xchg
xor
jl
or
dec
cld
outs
fild
sti
jne
cwde
loop
imul
or
mov
jge
xor
and
and
dec
mov
add
and
mov
popa
push
sbb
mov
in
add
fs
mov
(bad)
pusha
dec
xor
dec
add
and
push
int3
fld
not
mov
push
or
push
movs
test
lea
add
push
pop
shr
dec
lea
jne
jle
repz
push
push
xchg
jns
and
inc
aas
(bad)
or
adc
test
sbb
xor
jp
out
dec
bound
jno
dec
btc
pop
(bad)
push
sub
cs
leave
daa
dec
stos
push
pushf
dec
icebp
shl
adc
xor
dec
push
sbb
daa
aam
cld
xor
pop
std
inc
shl
sub
jo
cwde
fs
jo
sti
daa
jmp
ret
add
add
xchg
adc
call
adc
xchg
sub
fistp
add
retf
mov
push
or
push
inc
fiadd
jge
jne
sub
sub
xchg
cmc
call
push
add
push
dec
mov
pop
jmp
add
jmp
jb
adc
dec
add
dec
lods
pop
iret
loopne
pusha
ss
or
jl
scas
popf
clc
inc
jbe
arpl
mov
xchg
dec
push
dec
push
or
mov
sbb
push
push
sbb
dec
add
mov
enter
add
inc
add
movs
xor
test
jp
adc
lea
outs
jmp
push
adc
sbb
add
stc
leave
cmp
sub
adc
mov
test
jmp
adc
add
lock
daa
bound
sbb
adc
add
adc
dec
out
pushf
leave
jmp
sbb
push
sbb
sub
shl
add
test
mov
xor
inc
lea
js
shl
shr
ret
or
test
sub
mov
cmp
jb
cmp
ja
push
rol
fs
push
cmp
pop
push
(bad)
in
mov
add
and
adc
(bad)
jg
push
push
je
gs
pop
dec
jne
mov
lock
lods
shl
inc
mov
stos
adc
push
gs
xor
sub
stc
mov
add
add
mov
pop
das
pop
add
push
inc
shr
adc
adc
add
aas
lods
or
lock
shl
(bad)
adc
or
inc
sbb
mov
pop
add
xlat
mov
out
adc
bound
pop
add
inc
nop
mov
push
inc
mov
mov
cmp
mov
pop
fidivr
out
in
push
or
(bad)
fidiv
pop
ret
and
fild
sbb
aad
push
iret
xlat
add
add
inc
addr16
jo
ins
daa
daa
mov
dec
in
or
inc
inc
outs
and
jmp
ds
cmp
inc
jae
sbb
mov
dec
cs
cmp
inc
mov
icebp
mov
ins
pop
mov
mov
add
jo
mov
jg
stc
adc
not
add
pop
out
loopne
ret
aas
jg
push
cmp
int3
pop
fimul
add
jno
mov
mov
add
cmp
or
add
(bad)
nop
sub
(bad)
sha256msg2
inc
jl
clc
mov
or
dec
mov
call
cs
iret
mov
lock
(bad)
push
push
xchg
mov
(bad)
aas
nop
shl
cmp
int
pop
adc
add
orps
push
pop
xlat
xor
pop
dec
or
and
push
mov
das
or
fwait
imul
mov
dec
aad
sub
pop
daa
mov
adc
in
dec
dec
daa
daa
daa
daa
inc
inc
cmp
daa
daa
daa
daa
xor
sub
daa
daa
daa
daa
and
sbb
daa
daa
daa
daa
adc
or
add
add
sbb
sahf
or
push
scas
add
and
pop
xchg
cld
mov
pop
rcl
mov
sbb
inc
ror
jmp
push
push
outs
or
pop
enter
push
mov
iret
adc
test
dec
nop
fnstenv
shl
imul
lods
pop
mov
rcl
pop
add
jnp
and
add
rol
push
add
rol
and
jmp
into
mov
(bad)
leave
ins
shr
ftst
dec
fcom
fdiv
mov
xrstors
daa
inc
int
test
fs
inc
mov
fsub
ret
ret
les
inc
dec
add
jg
mov
pop
iret
repz
gs
retf
aad
fwait
cmp
repz
stos
mov
ret
imul
sti
add
and
add
add
ret
dec
inc
cdq
(bad)
icebp
sbb
(bad)
dec
stc
xchg
cmp
shr
lds
jno
inc
mov
movs
leave
aam
pusha
mov
ja
mov
(bad)
jg
jmp
mov
adc
pop
push
sub
in
test
and
inc
add
pop
pop
mov
daa
lahf
and
stos
clc
rol
adc
inc
add
and
jbe
aam
in
cwde
iret
cwde
out
mov
scas
stos
pop
ror
mov
push
ror
inc
dec
dec
mov
jb
jns
and
mov
adc
lock
cmp
add
loopne
mov
jmp
dec
or
mov
clc
cs
add
loopne
nop
mov
inc
push
push
dec
cmp
push
popa
ret
inc
and
mov
pusha
and
mov
mov
or
adc
leave
sbb
movs
xchg
(bad)
mov
clc
add
js
xor
xchg
mov
and
push
jg
test
ficom
cmp
jmp
cmp
push
adc
aaa
rcr
sub
adc
bound
adc
iret
dec
dec
shl
sahf
adc
jno
ret
lock
mov
inc
dec
and
mov
sub
mov
shr
jp
rcr
dec
xchg
push
jl
mov
xor
inc
push
mov
mov
movs
xor
jl
push
sbb
adc
pushf
push
stos
inc
and
iret
ret
dec
stc
mov
in
mov
pop
mov
xor
jp
jmp
adc
inc
rcl
test
sub
xchg
mov
fucomp
sbb
retf
adc
fisttp
dec
scas
sub
dec
jne
sbb
fwait
dec
in
jne
sti
or
imul
cmp
cmp
fild
sub
adc
pop
push
dec
push
mov
mov
and
and
sbb
out
push
push
repnz
cdq
arpl
adc
inc
aaa
pop
mov
pop
(bad)
hlt
addr16
and
stos
add
jnp
mov
stos
(bad)
mov
push
xlat
mov
jo
or
ins
mov
sar
inc
mov
jmp
dec
sub
jne
jg
iret
(bad)
fisttp
jecxz
and
jnp
scas
push
adc
(bad)
cmp
clc
and
div
(bad)
rcl
jmp
fstp
cwde
(bad)
stc
or
inc
js
pop
and
xor
retf
je
pop
push
ficomp
xor
rol
cmp
stos
pop
jp
pop
rcr
inc
xchg
enter
ret
sbb
jne
push
mov
xor
xchg
test
dec
je
(bad)
cmp
outs
les
mov
hlt
int
push
jmp
iret
and
and
icebp
fld
pop
dec
imul
push
lods
jge
loopne
je
movs
cmp
xchg
push
call
jmp
leave
jne
dec
(bad)
sub
test
in
fbstp
jmp
test
jg
jle
aam
arpl
scas
call
xor
sbb
pop
inc
cs
jmp
pop
es
xlat
dec
xor
push
and
popa
pop
clc
fld1
adc
jmp
cwde
or
loopne
retf
or
cmp
mov
inc
adc
sbb
ins
enter
nop
add
and
or
mov
repnz
dec
ja
inc
inc
sti
je
jge
add
xlat
pusha
pop
sub
push
mov
fucom
sub
xchg
sahf
xor
mov
mov
int3
xchg
jae
sub
fcomi
pop
ins
enter
mov
neg
sahf
push
(bad)
(bad)
xor
push
push
sahf
push
inc
or
pusha
fwait
out
aam
ss
loopne
pusha
rcl
adc
retf
jp
inc
pop
and
push
sub
lock
or
mov
nop
cmp
stc
sub
sbb
fadd
pop
sbb
jge
arpl
ret
fadd
mov
aam
call
or
rcr
mov
pop
cmc
xor
lock
aaa
xor
mov
sbb
lods
fsub
int3
push
ret
push
xchg
int3
pop
jmp
pop
rcl
mov
out
or
jno
in
(bad)
lds
mov
aaa
sti
out
inc
lock
aaa
mov
das
(bad)
idiv
aas
hlt
push
sub
stos
sar
ret
sbb
mov
fs
xor
and
retf
inc
fimul
push
(bad)
xor
inc
adc
add
cmp
dec
cmp
pop
fiadd
mov
pop
xor
or
pop
sub
push
sbb
add
pop
push
push
shl
pop
push
addr16
test
cs
pop
mov
add
arpl
xlat
dec
inc
fsubr
xchg
pop
fbld
mov
mov
dec
out
icebp
mov
sub
mov
sub
mov
xchg
xchg
jg
sti
int3
jmp
sbb
jmp
jbe
es
jmp
push
xchg
and
sbb
mov
cs
inc
add
mov
xor
fst
loopne
in
mov
jl
out
mov
push
test
hlt
pop
loop
mov
mov
(bad)
cmp
aad
pop
js
test
ja
mov
sub
out
std
inc
xchg
cld
(bad)
sar
adc
rol
out
(bad)
rcl
out
aaa
sbb
test
cmp
mov
test
push
cs
mov
jo
popa
fimul
dec
pop
cdq
inc
or
dec
adc
mov
loope
iret
and
movs
enter
dec
adc
jmp
pop
mov
shl
in
cmp
int
cmp
adc
mov
jns
imul
repnz
scas
imul
hlt
or
sbb
loope
jns
loop
imul
xor
(bad)
in
mov
push
pop
rcr
les
pop
add
out
cmp
pop
and
(bad)
mov
pop
aas
data16
das
repz
sbb
mov
cwde
les
add
jl
mov
cmp
je
mov
xchg
push
movs
movs
cmp
pop
sub
and
mul
push
inc
cmps
js
sub
lods
imul
(bad)
push
mov
loopne
pop
js
push
pop
inc
sub
mov
jmp
push
and
mov
adc
sbb
jae
dec
mov
or
in
dec
sbb
xchg
movs
jb
in
mov
mov
adc
dec
adc
sub
mov
xchg
jg
lock
sbb
jecxz
outs
rol
add
push
sbb
loope
adc
ss
dec
jo
and
lods
jle
or
push
popa
or
jle
push
pop
inc
add
add
and
sub
lahf
into
xor
cdq
and
cmp
xor
and
pop
test
hlt
jl
pop
rcl
dec
ds
test
cs
mov
jb
mov
out
mov
push
lock
push
adc
and
in
mov
xchg
(bad)
dec
adc
cmp
in
test
test
mov
ret
push
test
(bad)
and
jmp
xor
es
rol
lock
and
lock
pop
jl
sub
or
dec
enter
das
adc
cmp
mov
xchg
sahf
cmp
push
mov
jge
pop
in
add
int
cmp
pusha
cmp
jo
jecxz
jb
adc
xor
leave
cmp
jl
hlt
mov
jb
inc
or
or
add
push
lea
mov
jg
dec
loop
pop
(bad)
(bad)
ds
outs
dec
jl
jb
push
sub
xor
add
daa
push
or
xor
inc
pop
cmps
push
test
out
add
mov
dec
cmovno
cmps
cmps
add
nop
push
adc
adc
nop
mov
pop
push
out
jge
cmps
cmps
cs
rol
pop
or
or
push
push
jmp
fsub
jmp
test
xor
inc
in
in
gs
pop
adc
sbb
mov
or
gs
loope
ficomp
sbb
jb
push
sub
sub
mov
xor
ficom
sub
and
adc
add
(bad)
adc
aaa
jl
add
jae
xor
icebp
add
call
add
stos
pop
out
adc
sub
in
and
test
or
mov
jae
mov
dec
les
xchg
out
sbb
ret
push
push
inc
push
xchg
sbb
daa
fucomp
js
shl
cwde
popf
in
add
sbb
out
push
fldcw
jo
and
cmp
push
(bad)
pop
jnp
mov
mov
push
push
push
sti
or
sub
and
mov
inc
push
push
add
inc
(bad)
add
xor
ja
and
or
iret
dec
jmp
adc
mov
push
or
(bad)
mov
push
inc
jb
lahf
pushf
add
xor
dec
adc
sbb
sahf
inc
retf
sub
jno
ret
std
adc
pop
dec
adc
mov
fmul
inc
xchg
jbe
xor
fs
xchg
push
pop
mov
push
clc
pop
sti
cmps
and
lock
sbb
dec
popa
imul
push
and
aaa
loopne
jne
or
cld
jp
push
fidivr
mov
push
push
and
fadd
mov
push
mov
out
lods
pop
movs
sti
ins
loopne
xchg
int
lock
push
jne
adc
jmp
test
mov
popf
and
fcomp
add
movs
sub
sub
sbb
add
test
and
jne
jmp
jae
sub
test
jmp
icebp
call
pop
icebp
call
into
dec
sbb
cmp
cmp
xchg
push
jl
or
test
and
popf
aas
adc
cmp
lods
xchg
mul
sbb
push
push
sub
push
inc
cmp
mov
mov
adc
add
movs
sub
xchg
jo
(bad)
test
shr
call
lea
imul
adc
sbb
cmp
stos
fdivr
dec
add
(bad)
daa
or
loope
(bad)
jg
cs
xchg
adc
xor
or
cmp
fldcw
out
fsubp
outs
push
push
je
sub
or
push
adc
jae
mov
mov
pop
inc
jecxz
test
dec
or
fdivr
shl
and
mov
icebp
imul
adc
sub
sbb
sub
add
sbb
(bad)
div
fild
jmp
add
pop
pop
lock
or
fwait
sbb
inc
cld
sub
aas
retf
scas
xor
jo
xor
dec
out
ror
mov
sbb
inc
adc
mov
adc
inc
jne
cs
popa
retf
add
arpl
adc
or
xor
test
inc
imul
push
dec
xchg
ffreep
inc
sub
rol
(bad)
sub
retf
test
jmp
mov
sub
lock
jno
pop
jp
or
dec
les
push
gs
bound
xchg
pop
shr
push
js
faddp
out
frstor
jle
jle
dec
jp
loop
aaa
sbb
add
and
sbb
call
mov
and
and
rcl
fsub
and
and
loopne
call
in
lock
clc
and
fwait
add
and
and
or
adc
and
and
sbb
and
fs
sub
xor
fs
inc
fs
dec
push
push
fs
pop
pusha
fs
test
in
mov
(bad)
loopne
enter
popa
data16
mov
arpl
mov
mov
test
ret
add
xor
push
fnstcw
dec
aam
add
and
cdq
je
in
dec
push
push
movs
hlt
mov
and
dec
gs
sub
enter
test
je
movs
xor
aam
fcom
fdivr
loopne
in
mov
add
in
inc
sub
push
adc
and
or
gs
xor
inc
cmp
xchg
add
push
add
fs
push
sbb
cwde
gs
sub
adc
dec
mov
and
xchg
dec
push
push
and
clc
sub
push
movs
xor
sub
xor
xor
sub
push
sbb
fs
or
gs
inc
test
add
push
movs
xor
fcomp
nop
retf
lock
adc
stc
pop
sbb
sbb
pop
inc
cmc
dec
add
xchg
inc
push
stos
inc
add
cmc
jge
adc
push
nop
loopne
sub
sbb
in
cmps
jns
ins
outs
jae
and
add
sub
xlat
es
daa
rcl
mov
es
mov
mov
push
pop
jnp
and
mov
test
je
xchg
mov
ret
mov
mov
jae
mov
inc
fcomp
dec
arpl
jae
pusha
bound
dec
into
fs
lea
sbb
(bad)
ss
ins
jns
jp
jae
mov
sbb
pop
repz
pop
pop
pop
adc
sahf
ins
xlat
pop
es
int
mov
call
mov
imul
addr16
pop
add
fcom
mov
pop
pop
test
(bad)
loop
adc
mov
mov
stos
jns
in
test
dec
outs
push
retf
xlat
cmps
cmp
push
pusha
in
push
mov
and
add
and
or
fstp
lods
sbb
xchg
pop
adc
shl
xchg
icebp
add
fsub
test
and
ret
xchg
mov
into
in
icebp
and
xchg
jne
ins
outs
jo
mov
das
pop
fs
sub
imul
int3
rcr
cmp
test
inc
outs
arpl
mov
pop
add
xchg
pop
outs
loopne
xchg
popa
pop
in
sbb
adc
add
cmp
adc
push
or
hlt
sbb
ins
jne
xchg
xlat
fld
add
repnz
sbb
cmp
inc
mov
scas
mov
and
punpckhbw
dec
test
cmps
mov
inc
call
test
inc
push
dec
inc
push
dec
sar
jle
inc
ja
aas
sbb
pop
js
cld
outs
sbb
and
arpl
sbb
xchg
jmp
xor
dec
in
daa
push
push
jge
or
jg
push
or
daa
les
cmp
leave
push
jl
add
jl
ret
(bad)
(bad)
dec
pop
ret
push
or
xchg
mov
adc
sub
fwait
sub
jbe
outs
dec
dec
outs
xchg
in
ins
push
dec
pusha
pop
cmp
pop
pop
icebp
cwde
or
fcomp
xor
add
xchg
mov
outs
scas
inc
cmp
(bad)
adc
enter
popa
dec
aaa
adc
popa
jbe
push
ins
arpl
inc
mov
fs
and
or
or
inc
and
add
push
fs
popa
arpl
gs
adc
out
sbb
imul
int3
or
xor
push
outs
add
(bad)
pfnacc
inc
inc
jbe
je
cmps
or
mov
push
mov
jo
xchg
or
sbb
pop
(bad)
es
jns
enter
retf
outs
adc
popa
push
stc
iret
dec
adc
pop
shl
mov
inc
xor
inc
mov
outs
fs
jp
push
and
inc
adc
arpl
dec
mov
and
adc
ja
or
outs
mov
dec
push
inc
call
data16
pop
adc
or
mov
fs
inc
mov
enter
cmp
pushw
xor
push
jb
or
popa
mov
xchg
test
pop
ret
pop
imul
xor
jnp
jg
inc
mov
cs
dec
add
xor
popf
adc
push
push
popa
mov
dec
adc
int
arpl
or
iret
adc
or
add
ins
jae
mov
sub
adc
cmp
add
xor
push
inc
mov
inc
xchg
push
daa
in
imul
pop
das
inc
imul
add
out
in
push
cmp
mov
adc
gs
popa
push
pushf
jne
xlat
lahf
push
test
out
xor
lahf
adc
mov
loop
mov
and
xlat
sbb
arpl
mov
adc
movs
lods
push
xchg
fbstp
fadd
sub
mov
sbb
in
stos
je
push
gs
push
jno
inc
xlat
leave
ds
ins
shr
pop
fist
mov
imul
pop
lods
adc
bound
push
fist
sar
imul
mul
addr16
out
(bad)
cwde
cmps
or
adc
aas
adc
and
ret
xchg
pusha
pop
inc
mov
(bad)
push
aaa
pop
sbb
pop
add
addr16
imul
das
fisttp
xchg
push
push
jo
aaa
push
enter
xchg
inc
call
mov
mov
aaa
jl
ins
cmp
outs
imul
jg
xor
or
das
cmps
adc
sbb
push
popa
jno
mov
adc
ja
or
stc
lock
outs
unpcklps
pusha
add
cmp
or
lea
nop
sub
pop
sbb
pop
or
call
mov
push
adc
xchg
test
pcmpgtb
shl
aam
out
inc
popa
sub
xor
imul
mov
xchg
add
jae
out
outs
ins
leave
xchg
addr16
and
mov
bound
push
enter
and
arpl
sbb
nop
inc
test
add
inc
dec
enter
outs
xchg
xor
dec
cmp
(bad)
cmps
adc
cli
mov
adc
addr16
inc
cmc
mov
mov
les
xchg
daa
sbb
(bad)
xor
xchg
pop
pop
sub
cmps
push
push
add
or
lds
adc
je
adc
push
jmp
cmp
daa
push
mov
imul
sub
pop
or
es
pop
(bad)
xchg
(bad)
lock
repnz
rcpps
imul
les
sub
imul
stos
inc
jns
gs
pop
es
push
aaa
addr16
or
ret
stos
sub
or
lahf
pop
js
jns
or
xor
lock
repnz
cwde
xchg
cmc
leave
retf
mov
loopne
mov
mov
inc
shl
sbb
or
lock
push
fwait
jmp
scas
loopne
adc
aas
sub
pop
dec
or
push
push
push
jne
outs
adc
jb
test
add
xchg
or
push
jle
scas
add
ret
sbb
push
adc
xchg
in
sub
add
inc
imul
fs
add
mov
mov
cmp
imul
dec
outs
xor
xor
(bad)
aam
and
daa
jl
push
push
sbb
sar
add
xor
idiv
or
add
jns
lock
in
push
sub
xor
and
ss
add
adc
mov
mov
or
mov
mov
loope
inc
movs
adc
or
fst
(bad)
fmul
add
(bad)
inc
test
adc
jae
stos
test
inc
cmp
cmps
xchg
push
leave
add
int3
inc
mov
ret
in
cmp
dec
or
loop
and
mov
push
inc
mov
push
lods
or
or
cmp
push
mov
pop
dec
and
mov
cmp
sub
xchg
or
pop
mov
daa
cmp
daa
fmul
or
imul
push
inc
jge
and
inc
push
cld
scas
jl
push
sar
push
shr
push
mov
add
enter
(bad)
out
inc
and
jo
or
add
and
inc
jle
pop
sub
push
xor
clc
add
(bad)
in
pop
pop
mov
xor
pop
inc
loopne
dec
pop
sahf
or
push
stos
or
push
shr
inc
pop
add
pop
repnz
add
test
xor
sub
add
or
mov
xchg
inc
xchg
test
cmps
add
jbe
sbb
idiv
and
cmp
push
sbb
les
loopne
fiadd
xor
or
ror
ror
out
xor
mov
xchg
push
and
jne
adc
cwde
(bad)
fstp
xchg
mov
sar
sub
ficom
push
push
push
sbb
outs
xchg
add
cmp
ja
cmovae
sbb
pop
cwde
inc
mov
popa
in
scas
dec
xchg
mov
pop
or
je
add
cmps
shr
rcl
mov
adc
cmp
aas
inc
push
add
outs
fcmovu
into
add
adc
test
aam
push
cmps
js
jno
fild
or
jnp
shl
adc
(bad)
sar
fistp
adc
xor
pop
sbb
jnp
fild
adc
aam
enter
push
out
outs
xchg
mov
pop
pop
and
push
repnz
outs
add
xchg
add
dec
test
imul
cs
pop
dec
outs
outs
xchg
xchg
ins
ins
pop
push
outs
pop
or
and
icebp
xor
sub
push
ins
mov
push
add
(bad)
push
ja
mov
sub
push
sbb
lea
fsub
sub
mov
adc
jl
adc
loop
mov
ret
pop
rcr
in
std
fs
addr16
push
mov
ins
hlt
dec
in
jo
(bad)
push
retf
cmp
sub
mov
jl
mov
les
loopne
leave
xor
lea
sbb
dec
fimul
dec
test
leave
xor
cwde
dec
adc
repnz
js
fadd
dec
ja
daa
iret
inc
or
pop
cmp
sbb
add
sub
pop
sbb
into
sub
rol
sbb
dec
and
pop
dec
repnz
adc
adc
mov
pop
push
movs
(bad)
sbb
mov
inc
and
jnp
lods
add
push
cwde
adc
and
jmp
push
les
xlat
nop
mov
pop
push
adc
sbb
rol
jae
(bad)
jmp
or
leave
leave
ret
sub
xlat
adc
inc
and
lahf
cmp
jnp
fdivr
std
or
cmps
jo
sbb
or
mov
sub
mov
loopne
dec
jecxz
sub
arpl
push
push
mov
scas
push
mov
or
js
add
push
dec
imul
inc
les
and
push
dec
ins
aas
push
xlat
inc
push
daa
push
push
inc
in
adc
iret
adc
sub
daa
ss
mov
xor
dec
add
add
inc
push
add
push
push
mov
je
cmp
mov
mov
loopne
fwait
rcr
fnstcw
inc
add
inc
adc
mov
adc
jl
add
jno
adc
add
adc
mov
retf
and
out
scas
nop
add
std
pop
rol
or
loope
je
fist
or
cmp
jnp
add
mov
aas
fcom
inc
push
jno
adc
inc
and
mov
cld
dec
aad
fs
lods
enter
ret
push
mov
sti
and
clc
push
(bad)
clc
dec
or
outs
fisttp
mov
mov
or
retf
fist
sbb
and
iret
or
jns
imul
sbb
aaa
add
inc
pop
repnz
movs
dec
push
dec
movs
pop
xor
les
push
int
leave
add
imul
call
rcl
push
ret
je
mov
or
jmp
aaa
pop
mov
pop
dec
in
rol
adc
das
lock
inc
and
xchg
sbb
jns
sub
test
rol
inc
neg
lea
repz
xlat
cwde
sbb
inc
leave
and
pop
adc
and
pop
adc
fisttp
cmps
push
xchg
sbb
nop
nop
pushf
lahf
clc
mov
rcl
adc
movs
(bad)
arpl
(bad)
or
(bad)
lahf
xor
bound
pop
aad
and
pop
dec
das
and
imul
pop
imul
push
cmp
pop
dec
or
or
pop
xchg
adc
inc
mov
add
inc
repnz
inc
xlat
daa
mov
sbb
sub
je
pop
ins
add
jecxz
in
jbe
pop
cmps
test
pop
pop
imul
out
cmp
push
js
push
pop
push
stc
dec
(bad)
pop
sbb
enter
hlt
inc
sbb
in
sbb
sysret
mov
jg
cmps
dec
(bad)
and
inc
add
add
inc
fidiv
jns
sbb
movs
mov
xor
and
jl
lods
or
pusha
or
pop
and
les
mov
push
je
outs
jae
pop
jl
ret
add
and
aaa
add
hlt
mov
push
sub
daa
cmp
into
rcr
mov
loope
add
enter
aad
xchg
int3
fist
push
dec
clc
sar
xchg
test
in
adc
mov
push
jl
gs
retf
lock
xor
aam
shl
sbb
mov
scas
mov
adc
fs
enter
aam
pop
sub
fsub
push
sbb
inc
fmul
fmul
inc
push
movs
xor
cwde
test
sbb
inc
sub
nop
inc
push
movs
push
in
call
mov
inc
push
jo
out
and
inc
xor
int
daa
push
sub
pop
test
or
out
fcom
push
sbb
ss
pop
int3
sub
imul
shl
stos
movs
xor
jg
int3
or
push
fbstp
popf
pop
ja
das
cmp
movs
pop
hlt
push
or
cld
ds
mov
mov
mov
push
push
push
push
mov
add
iret
sbb
jae
xchg
daa
sub
ins
cld
dec
sbb
stos
add
popa
push
and
imul
arpl
dec
sub
(bad)
hlt
rol
sub
outs
pop
arpl
ins
push
arpl
imul
jge
adc
outs
pop
js
bound
mov
es
jb
jb
popa
or
mov
popa
dec
es
ins
bound
popf
dec
mov
scas
imul
fwait
popf
xlat
add
addr16
jb
addr16
outs
jnp
add
pop
mov
arpl
ja
ficomp
daa
push
jg
sub
scas
cmp
ins
das
je
cmps
nop
mov
mov
xchg
pop
ffree
sub
cmp
xchg
idiv
jo
jb
arpl
jge
fsub
jns
outs
dec
pushw
das
sti
ficomp
outs
add
or
outs
pop
and
and
adc
push
inc
movs
mov
movs
dec
retf
and
cmp
aas
sbb
jmp
add
push
adc
fiadd
shr
jne
xor
retf
mov
and
(bad)
cs
loop
mov
mov
cmp
ins
setae
sub
sbb
jno
sbb
lods
aad
out
cmps
out
ss
in
lea
pop
aaa
mov
mov
and
sub
add
jg
clc
loop
xchg
(bad)
sti
and
push
xor
std
mov
cld
xchg
mov
clc
add
dec
mov
js
dec
jmp
arpl
loopne
test
arpl
push
les
add
nop
into
mov
rcl
mov
mov
inc
sahf
jne
pop
retf
adc
inc
loopne
scas
and
mov
icebp
movs
mov
jle
pop
sbb
imul
cld
hlt
test
in
ror
jns
xchg
enter
or
jg
add
ss
cmp
xchg
mov
dec
xchg
lahf
xchg
dec
or
add
int3
loopne
or
add
rol
sub
xor
inc
call
add
push
jns
pop
push
jmp
sbb
or
push
or
add
adc
xchg
(bad)
lods
mov
jbe
inc
fcom
ja
(bad)
mov
mov
add
idiv
repz
add
pop
and
push
jbe
out
inc
dec
fistp
push
jns
inc
add
xor
add
dec
in
and
add
add
push
scas
pop
aaa
xor
les
mov
sbb
lea
add
jmp
aas
push
add
pop
or
or
or
or
or
or
jns
adc
adc
out
sahf
out
adc
out
sahf
sbb
sbb
and
and
repz
and
es
lahf
mov
rcr
hlt
add
sahf
out
cmp
imul
out
sahf
scas
rcl
sar
repz
adc
repz
pop
push
xchg
cmp
repz
mov
mov
jmp
xchg
push
scas
or
add
adc
and
xchg
retf
pop
adc
mov
or
push
cs
sbb
dec
sub
in
retf
and
mov
adc
cs
xor
dec
sub
xchg
retf
adc
jb
in
dec
sbb
push
mov
sub
sbb
mov
xor
xchg
retf
popa
imul
test
adc
or
sbb
push
push
test
mov
mov
in
mov
mov
sub
jg
jne
mov
inc
loope
les
aaa
and
push
div
xor
movs
movs
adc
fadd
jb
loopne
or
push
lea
lea
call
lock
outs
push
adc
and
xor
push
sbb
clc
xlat
lods
fst
jb
inc
(bad)
call
lods
sub
mov
sub
enter
or
int3
mov
push
pop
and
inc
add
xor
jnp
loopne
fadd
fadd
jmp
lea
mov
test
adc
(bad)
jge
and
call
sbb
push
xchg
jnp
pop
or
and
mov
fs
inc
sbb
mov
out
addr16
jne
add
or
inc
xchg
lods
sub
mov
inc
xor
adc
(bad)
and
sub
pushf
scas
xor
lock
mov
add
push
enter
test
mov
push
int3
js
sub
ins
sub
add
ds
dec
outs
jne
outs
dec
adc
inc
pop
imul
inc
pop
js
push
ins
(bad)
out
sti
ds
or
popa
jb
add
xchg
mov
or
pop
add
rcl
sub
clc
mov
pop
push
bound
ins
fs
shr
repnz
pop
jnp
nop
das
into
adc
out
(bad)
mov
movlps
add
adc
inc
jp
push
or
cwde
mov
jge
and
sub
push
inc
fs
fs
and
cwde
add
xor
xor
ret
ins
test
push
xchg
in
pop
and
pop
fucomp
add
mov
pop
fcmovnb
jb
dec
ss
cli
push
pop
je
sub
jne
outs
out
ja
sbb
or
das
lea
imul
ins
adc
sub
or
pop
add
and
xor
push
push
dec
outs
push
adc
lods
inc
inc
in
sbb
fdivr
adc
inc
out
stc
out
aam
jo
movs
inc
add
lahf
out
push
js
hlt
adc
xor
idiv
loopne
push
jo
cmp
repz
mov
mov
pmullw
cmp
or
rcr
inc
das
pop
das
pop
pop
xchg
pushf
inc
dec
outs
shl
data16
xchg
dec
push
cmp
cmp
pusha
aaa
out
fldcw
cld
dec
lock
imul
inc
outs
add
xor
cmp
outs
std
push
adc
pusha
push
out
ins
ffree
pushf
imul
repnz
push
out
push
clc
push
arpl
cmps
pusha
nop
(bad)
cmps
pop
sbb
jo
sbb
push
sar
push
popf
inc
cmps
or
mov
jl
xor
xor
imul
push
pop
imul
inc
jbe
add
inc
dec
pop
inc
adc
jmp
jns
dec
cmp
ja
sti
xor
retf
and
jne
push
jo
jmp
cwde
jl
xor
push
xlat
packssdw
scas
dec
cwde
hlt
arpl
outs
fbstp
add
fs
inc
push
sbb
pause
iret
repz
cmp
ins
add
add
mov
push
nop
sbb
add
and
and
inc
push
je
cmp
shl
repz
cmp
inc
mov
loopne
stc
mov
gs
lods
dec
std
rcr
push
pop
and
push
gs
xchg
sub
dec
repz
xchg
seto
push
pop
adc
test
repnz
rol
sbb
jo
adc
push
push
outs
cdq
sub
inc
je
pusha
nop
aam
sbb
pop
pop
mov
ds
call
pop
sbb
stos
mov
xchg
out
mov
adc
inc
add
lea
mov
fucomp
nop
adc
ja
sar
xchg
cmp
add
and
cwde
das
in
mov
pop
fwait
nop
or
cmp
mov
pop
push
nop
pop
push
pop
pop
jb
dec
mov
sbb
enter
mov
sub
add
sub
(bad)
pop
pop
dec
pop
cmp
pop
daa
dec
sub
push
enter
outs
push
xor
push
pop
sbb
add
inc
xor
cs
inc
stc
out
add
pop
sbb
fs
inc
ds
push
pusha
not
xor
sub
add
call
clc
cmps
fs
jbe
inc
add
or
div
pop
bnd
add
stos
add
add
dec
jp
lds
xor
inc
fstp
add
inc
or
cdq
dec
lea
mov
or
in
or
inc
ss
inc
jp
int3
xchg
and
inc
mov
mov
cmp
or
or
pop
ret
mov
(bad)
xor
fisub
outs
jo
pushf
sbb
push
sub
xor
cmp
sub
popa
push
inc
inc
adc
push
mov
clc
dec
inc
adc
popa
xor
adc
into
out
ja
xor
je
imul
cmp
sbb
jmp
outs
imul
xor
add
ss
xor
sub
ins
popa
fstp
fisub
inc
outs
mov
jnp
adc
sub
sbb
int
fwait
nop
out
nop
cwde
into
push
push
add
loop
ss
aaa
pop
stos
push
inc
iret
inc
js
mov
mov
cmp
in
mov
sub
jns
pop
imul
and
adc
inc
pusha
ss
xchg
add
inc
push
inc
add
xchg
loopne
push
and
dec
pop
pop
and
sub
jo
cwde
clc
or
sub
ins
or
ss
imul
jecxz
stos
mov
imul
call
pop
xchg
pushf
sbb
and
jo
jo
lock
paddb
out
mov
adc
test
inc
xchg
je
mov
ficomp
nop
or
xlat
stc
dec
loopne
sbb
out
dec
int
les
or
add
jmp
mov
xor
xor
xor
inc
adc
dec
std
fwait
or
dec
dec
dec
dec
dec
dec
loop
push
push
push
push
pop
pop
pop
js
dec
dec
pop
add
clc
pop
mov
lea
jle
add
and
pop
pop
retf
or
push
mov
mov
add
inc
retf
mov
mov
popa
popf
stc
xor
mov
or
dec
test
data16
in
mov
add
test
fimul
inc
fcom
dec
shl
and
ficomp
icebp
xchg
(bad)
push
push
enter
sbb
mov
add
mov
(bad)
test
mov
dec
clc
sub
js
push
push
push
or
je
push
pop
sub
jle
fwait
sti
or
or
jge
cmps
pop
mov
shr
mov
or
call
sbb
mov
mov
test
jbe
add
(bad)
jmp
cmp
and
sbb
sahf
pushf
jg
and
jl
or
push
gs
movs
sbb
out
add
and
adc
push
inc
inc
cmp
ins
aas
dec
pusha
sub
call
sbb
ins
and
xchg
add
jl
ret
mov
xor
mov
call
cdq
sub
int
mov
leave
enter
pop
dec
adc
inc
pusha
mov
xor
sbb
les
lock
hlt
xchg
lea
dec
rcr
imul
adc
push
xor
push
icebp
jmp
jg
or
(bad)
int
inc
cmp
jo
ror
pop
push
icebp
call
cmp
jge
xchg
xor
mov
jbe
jne
dec
and
(bad)
ins
and
jecxz
inc
pusha
cli
jl
or
scas
dec
imul
xor
fist
add
or
out
mov
jge
inc
xor
int
pusha
lods
(bad)
in
xor
jmp
aam
or
mov
fisttp
add
cmp
pop
les
xchg
jne
hlt
loope
(bad)
pop
sbb
ja
or
add
sti
sar
jmp
inc
(bad)
call
jne
or
getsec
cmp
ds
mov
or
mov
aas
xchg
not
push
sbb
mov
cwde
(bad)
std
or
cld
shl
test
div
out
xor
or
test
xchg
icebp
lock
lods
out
sbb
(bad)
out
mov
push
sbb
push
(bad)
fcomp
sbb
jbe
mov
cld
jne
xchg
pop
jl
bound
test
sbb
test
inc
or
jae
jo
or
pop
popa
pop
adc
xor
movs
sbb
xchg
jmp
sbb
mov
das
add
jne
jle
loop
xchg
add
sub
or
push
fs
fnstsw
(bad)
xlat
cmp
and
jmp
mov
repnz
dec
aaa
add
pop
jne
or
rcr
cmp
cmp
inc
in
push
rcr
adc
in
jbe
lahf
and
or
adc
push
pushf
inc
cmp
outs
inc
test
push
cld
sbb
xchg
push
call
sar
dec
xor
(bad)
push
sbb
and
test
or
adc
xchg
ret
mov
js
iret
xor
inc
jl
bound
cmps
ds
outs
ja
neg
imul
nop
arpl
pop
and
enter
cmp
xchg
cld
add
jl
cmp
nop
sbb
mov
jl
push
inc
pusha
sti
(bad)
jl
adc
mov
cmp
cmp
sbb
inc
push
aas
cmp
adc
pusha
fisttp
rol
inc
push
addr16
movs
sbb
sub
cmpxchg
cmp
clc
int3
enter
adc
and
sbb
mov
mov
(bad)
pop
cmp
cwde
cmp
movs
adc
(bad)
sbb
dec
sbb
adc
jb
fistp
je
enter
es
jns
test
add
cdq
or
jae
cmp
ror
xchg
pop
in
cmp
aas
inc
push
in
push
sub
jg
jo
fisttp
jp
nop
add
out
adc
xor
(bad)
movaps
ins
ds
inc
add
cmp
add
aas
push
clc
add
push
mov
xor
xor
add
loopne
outs
mov
inc
mov
ins
push
popa
fsub
call
pop
cmp
jmp
and
and
daa
hlt
(bad)
mov
jle
(bad)
adc
ficomp
movs
sbb
stc
inc
xor
js
pusha
out
mov
mov
cmp
outs
adc
dec
adc
test
test
cmp
(bad)
les
outs
push
(bad)
mov
xor
mov
add
sbb
fcmovnb
dec
(bad)
out
add
cmp
test
push
push
jmp
fsub
inc
mov
movs
dec
add
fs
call
or
and
dec
test
popa
xabort
(bad)
jo
push
les
push
out
sahf
add
adc
inc
retf
into
aas
rcr
ja
pop
pop
xor
aaa
mov
jle
out
and
sub
clc
adc
dec
add
int
jno
push
mov
jle
test
inc
xchg
and
cmp
xor
dec
or
or
ja
cld
rcr
cli
enter
mov
jbe
cmp
outs
div
test
cmp
(bad)
les
cmp
inc
or
loop
mov
test
imul
leave
or
retf
or
(bad)
add
movs
bound
jg
xor
test
lock
sahf
dec
js
cmp
jo
sbb
push
test
or
jg
les
into
adc
pushf
jmp
or
jge
xor
push
add
test
inc
les
and
or
retf
lds
cmp
sub
or
sti
xor
int3
xor
loope
jecxz
jo
ret
les
push
sbb
je
ror
mov
adc
pop
or
mov
push
push
outs
push
fdiv
js
mov
daa
or
sahf
dec
inc
(bad)
sbb
lahf
cwde
pusha
mov
add
movs
dec
inc
leave
add
iret
outs
js
cli
dec
test
push
mov
stos
and
dec
lods
lahf
sub
ds
lods
mov
ins
shr
push
fsubrp
vmwrite
sub
test
adc
ret
add
cmp
pop
jnp
add
mov
in
xlat
out
mov
mov
jmp
and
ins
out
pop
and
push
mov
sti
jo
xchg
(bad)
setbe
mov
xor
pop
pusha
out
pop
idiv
dec
push
inc
les
sub
jae
mov
jg
sub
aad
push
dec
cmp
int3
jo
shr
adc
popf
push
mov
aaa
mov
cmovno
sub
mov
mov
sub
aaa
cmp
jge
mov
mov
mov
fld
cmc
sub
sbb
add
mov
dec
pop
xor
cmp
dec
mov
or
inc
push
or
fcom
mov
test
in
data16
add
push
(bad)
aas
imul
adc
fcmovnb
inc
dec
or
adc
pop
in
xchg
dec
sar
dec
xchg
xchg
ror
loope
add
mov
add
dec
arpl
jmp
fiadd
lods
sub
add
push
and
das
jo
outs
add
hlt
xor
call
je
not
cmp
sbb
ficom
sbb
dec
inc
mov
xor
mov
in
enter
in
add
dec
mov
jo
xor
sbb
adc
jo
sar
dec
dec
sahf
push
jg
imul
out
mov
js
mov
cmp
or
mov
sbb
(bad)
outs
fbld
mov
jne
outs
mov
mov
fisubr
lds
sbb
mov
adc
mov
fst
sub
or
adc
sbb
lock
mov
out
adc
loope
xchg
xchg
dec
in
or
add
pop
lock
cmp
add
sub
mov
in
dec
sub
nop
or
cs
cdq
add
jle
inc
(bad)
(bad)
jae
in
adc
jo
add
nop
and
or
add
outs
imul
(bad)
(bad)
fadd
mov
xchg
or
loopne
push
sbb
dec
rcl
cmp
sbb
loopne
in
retf
push
inc
inc
pop
cmp
inc
iret
ins
mov
shl
push
mov
iret
mov
das
jnp
pop
xor
call
lock
hlt
enter
push
add
dec
jo
or
inc
and
js
(bad)
(bad)
int
loopne
inc
push
cmp
int3
cdq
ja
popa
loopne
inc
cmp
and
dec
in
inc
shl
dec
sub
aas
(bad)
cmp
jo
pop
mov
test
cmp
mov
jl
ret
mov
dec
enter
call
in
and
add
sub
fisttp
mov
rol
cmp
sub
movs
in
retf
and
cld
jmp
push
xor
adc
cmp
jb
push
cdq
xchg
or
push
push
fsubr
(bad)
mov
mov
mov
js
mov
jmp
xchg
fcom
adc
push
mov
or
inc
popa
push
ins
inc
cwde
pop
add
sbb
leave
dec
jge
pop
push
push
mov
adc
cmp
or
(bad)
arpl
fs
fxch
push
(bad)
jae
mov
int3
push
(bad)
popf
pusha
ins
pop
mov
pop
push
pushf
dec
ret
jae
or
nop
rol
rcl
jb
pop
push
or
xchg
cmc
dec
or
sub
inc
pusha
add
rol
xchg
retf
and
push
add
inc
push
sub
pop
pop
pmulhuw
sub
rol
pop
cmps
inc
lods
inc
xor
or
icebp
(bad)
adc
ins
loop
in
and
lea
movs
dec
ins
sbb
xchg
push
lock
adc
dec
cmp
sbb
sbb
mov
lods
xor
iret
hlt
cmp
enter
hlt
hlt
pop
jne
cmps
ss
hlt
das
add
js
add
movs
lock
mov
pop
dec
clc
or
xor
pop
jnp
inc
mov
and
inc
mov
aas
leave
lock
movs
loopne
in
dec
add
repnz
adc
ds
mov
fild
fstp
repz
mov
xchg
adc
inc
or
jne
dec
shl
xor
jo
dec
int
ja
movhps
gs
push
bound
inc
loopne
inc
cmp
dec
add
lock
inc
xchg
jne
add
dec
xor
ins
sbb
leave
or
loopne
test
call
daa
hlt
shl
enter
push
pushf
add
or
pop
test
or
nop
fs
and
cmp
in
or
adc
daa
js
test
xlat
xchg
pushf
or
xchg
add
(bad)
mov
push
(bad)
repz
dec
mov
test
in
in
ret
push
popa
adc
test
ds
xor
and
sbb
test
push
cmp
(bad)
mov
pusha
ret
cmp
call
outs
pop
lods
(bad)
sbb
push
sub
mov
mov
sbb
push
test
pop
xchg
pop
sar
xchg
add
cmp
pop
adc
sbb
movs
jb
dec
clc
adc
xchg
push
fcos
mov
add
clc
mov
dec
mov
mov
enter
clc
sub
inc
movs
nop
lock
dec
lock
and
jb
inc
xor
inc
and
push
xchg
cmp
int
ret
clc
arpl
push
movs
sub
pop
xor
ins
adc
push
inc
iret
in
and
sbb
dec
sub
adc
ret
and
mov
add
ja
pushf
dec
ror
adc
sbb
xchg
mul
and
inc
cmp
aad
addr16
loopne
or
push
or
sar
pusha
mov
sbb
cwde
loopne
add
push
adc
adc
xchg
rcl
rcl
add
push
jle
xor
jne
mov
add
mov
adc
mov
dec
sub
or
sub
jmp
ss
loopne
mov
cwde
push
(bad)
push
je
xor
adc
mov
add
sbb
pop
pop
mov
call
xchg
sbb
and
fadd
xchg
sub
mov
dec
or
pop
test
push
mov
pushf
daa
cwde
shl
(bad)
sar
adc
movs
fadd
cmp
pop
adc
xchg
sbb
fs
jl
enter
cmp
jmp
mov
adc
push
pop
or
int
dec
lahf
lods
mov
pop
cmps
mov
sbb
xchg
inc
dec
repz
nop
aam
or
xor
or
mov
shl
add
cmps
add
xor
cmp
jmp
push
mov
ja
dec
jl
js
or
in
arpl
out
leave
call
dec
pop
sbb
cld
(bad)
inc
gs
xchg
lods
inc
call
mov
dec
movs
push
mov
mov
sbb
mov
aas
cmp
sbb
aaa
dec
dec
repnz
call
sbb
jo
pop
sbb
int
js
add
and
les
or
xchg
sbb
pop
ja
lods
sbb
cmp
(bad)
fldcw
sbb
inc
push
and
popf
ja
sbb
loop
xor
xor
icebp
fsub
dec
or
inc
les
sub
inc
push
and
or
outs
pop
push
dec
test
iret
ret
jmp
adc
sub
loopne
pop
inc
add
mov
ret
shl
adc
stos
mov
pop
fldenv
fsubr
or
(bad)
dec
bound
and
mov
xchg
xor
lea
inc
add
setns
ret
add
outs
or
inc
mov
add
xchg
pop
fs
sub
add
push
stc
inc
sbb
and
aas
sub
and
or
in
sete
pop
(bad)
cmp
or
jle
inc
test
ret
and
or
push
and
sbb
xchg
aad
mov
es
scas
sub
cmp
stos
sahf
clc
push
mov
adc
inc
mov
movs
add
mov
shr
add
or
dec
adc
outs
out
aas
je
(bad)
fisub
xlat
clc
popa
pop
out
retf
adc
xor
inc
ja
push
add
and
mov
aam
push
cs
call
xor
stc
or
sub
pop
push
add
sahf
pop
outs
test
pusha
mov
outs
(bad)
adc
ds
inc
push
mov
inc
xchg
sbb
ror
outs
(bad)
mov
xor
adc
jg
movs
inc
jo
push
push
adc
pop
mov
mov
in
sahf
retf
adc
inc
add
add
aas
jecxz
mov
inc
ficomp
jae
pop
push
std
ds
in
pop
inc
add
inc
cmps
mov
retf
in
clc
sub
call
dec
rol
inc
pop
cmp
fs
and
frstor
mov
pop
mov
xchg
int3
mov
mov
push
daa
adc
adc
sahf
out
xlat
ret
jmp
enter
or
add
pop
mov
cmp
sub
xchg
xor
cld
inc
sub
call
inc
aas
jbe
and
nop
dec
adc
mov
inc
or
inc
aad
fmul
mov
test
cmc
inc
and
js
or
and
xchg
adc
sti
sbb
fistp
jnp
push
push
sbb
push
int3
mov
xchg
or
jmp
mov
leave
mov
cmp
outs
sbb
ds
or
rcl
icebp
sbb
and
pop
xor
neg
bnd
mov
sub
imul
adc
dec
or
xor
fmul
dec
inc
inc
fild
dec
in
fcomp
popf
push
arpl
sub
js
clc
jo
sub
adc
ret
or
loopne
ret
retf
xor
sbb
pop
(bad)
xor
dec
repnz
sahf
jmp
and
(bad)
inc
cwde
dec
out
jbe
leave
xchg
push
shl
inc
in
pusha
mov
adc
lock
test
rcr
cmp
sahf
jb
cmp
scas
xchg
push
je
push
adc
ins
jo
or
sub
rol
sub
sub
dec
test
js
adc
popf
push
xor
push
push
es
pop
sahf
jno
jmp
add
cs
adc
and
push
push
pusha
je
cli
cmp
or
adc
and
mov
or
popf
adc
xor
jo
out
or
rcl
addr16
pop
or
adc
pop
sub
mov
adc
pop
mov
mov
pop
cld
xor
jp
add
jo
int3
xor
xchg
adc
lds
aaa
enter
inc
and
cmp
dec
dec
cmp
test
retf
mov
xlat
idiv
pop
xchg
into
inc
retf
push
cmp
dec
movs
pop
dec
cmp
jnp
xchg
push
test
fistp
jae
cmp
pop
and
daa
cmp
push
gs
call
out
xor
mov
xor
shr
push
fs
data16
out
cli
push
or
sub
cs
cmp
push
jnp
aaa
imul
pop
inc
je
push
pop
pop
jb
ror
lea
mov
fld
mov
test
xor
push
inc
call
xchg
jge
hlt
dec
jmp
pusha
add
popf
sbb
xor
mov
add
mov
xchg
jp
in
pusha
mov
push
adc
xchg
inc
mov
adc
mov
sub
fst
(bad)
dec
xchg
xor
sub
add
inc
jb
sbb
sub
leave
cmp
cmp
inc
jb
inc
inc
pop
and
or
(bad)
js
cmp
retf
je
fmul
fiadd
push
jmp
movs
std
fimul
pop
daa
cdq
in
adc
dec
add
mov
push
push
mov
xor
mov
and
retf
sbb
add
sub
pop
and
push
cmp
dec
loop
(bad)
pop
pop
shr
push
push
scas
rcl
loopne
or
repnz
mov
inc
scas
jge
cmp
inc
pop
cmp
add
pop
outs
jl
sbb
inc
push
leave
mov
cmps
push
push
add
push
(bad)
lds
test
inc
aaa
mov
cmp
stc
stos
cmps
lea
gs
mov
ss
sub
popf
and
jge
adc
or
or
inc
inc
sub
xchg
ss
and
push
sbb
pop
vmaxss
cmp
arpl
push
sti
xor
add
or
pusha
dec
jno
add
sbb
xchg
jae
xor
mov
and
add
xor
add
in
or
sub
(bad)
pop
pop
ret
xor
jne
cld
pop
add
test
dec
pop
pop
dec
outs
(bad)
dec
shl
and
mov
stos
fstp
add
push
cli
fdiv
sbb
push
cmp
dec
xor
push
xchg
fisubr
sbb
dec
inc
jo
jmp
(bad)
scas
loope
adc
dec
mov
xchg
jno
adc
arpl
add
nop
xor
xchg
or
(bad)
pop
sub
adc
cld
(bad)
(bad)
adc
fimul
mov
or
mov
int3
jne
xor
push
ret
or
rcr
shl
in
movs
push
and
sbb
enter
sbb
dec
dec
clc
cmc
data16
in
add
repz
jecxz
sub
movs
inc
push
add
xor
les
mov
cmc
push
das
lea
add
xor
jne
and
pop
dec
xor
ret
lea
jmp
sbb
not
out
pop
je
push
sbb
imul
dec
repz
out
mov
nop
mov
pop
out
ja
inc
test
jmp
cwde
add
dec
ds
fld
cmp
arpl
pop
xchg
cmps
ds
fsubr
push
out
aad
in
(bad)
inc
pop
(bad)
ja
mov
cmp
mov
cmp
xor
call
add
xor
xchg
aam
mov
inc
sbb
rol
add
js
sar
inc
fwait
ror
je
gs
pop
inc
fdivr
add
shl
mov
fwait
sbb
dec
in
xor
jle
xchg
inc
fisttp
int3
outs
nop
jge
test
out
adc
sub
mov
clc
jle
pop
test
repnz
popa
pop
test
ins
xor
push
fisubr
pop
and
push
dec
mov
test
jo
sar
mov
mov
lds
int3
xor
std
jp
sub
add
pop
stos
add
xor
outs
retf
mov
pop
inc
push
sub
(bad)
call
or
mov
out
rcl
sub
pop
movs
push
stc
ja
sbb
fdivrp
push
(bad)
sbb
icebp
jmp
pop
jg
inc
(bad)
jmp
adc
add
fcomp
sbb
mov
fcomp
sub
rol
sbb
and
das
add
push
dec
or
test
jns
inc
stos
mov
mov
jg
xor
xchg
inc
and
xabort
sbb
mov
sbb
add
in
fisttp
inc
jb
cmps
sub
jl
inc
mov
je
sbb
je
adc
jno
out
inc
rol
jmp
mov
(bad)
push
ret
inc
sbb
sti
fisttp
push
cmp
mov
inc
rol
daa
add
jne
loope
in
sub
and
and
jb
aaa
dec
and
dec
inc
jne
sub
or
cmp
dec
adc
dec
push
push
test
cmps
mov
inc
adc
sbb
lods
and
stos
out
stos
add
jb
fild
pop
cmp
mov
jle
test
or
xor
inc
mov
iret
xor
lea
jmp
pop
jo
je
mov
or
inc
mov
lods
test
ret
cmp
inc
cmps
and
fsub
push
scas
adc
push
(bad)
enter
xor
loop
adc
jnp
push
sub
jo
ret
and
add
xor
pop
and
(bad)
daa
fsub
inc
stc
daa
pop
dec
jns
push
push
mov
pop
push
test
sbb
test
call
mov
dec
mov
retf
sub
cmp
push
add
das
add
cmp
mov
sub
mov
in
adc
sar
retf
jecxz
mov
dec
mov
jne
shl
aaa
cwde
or
movs
fidiv
mov
and
mov
pop
scas
in
pop
dec
adc
(bad)
mov
pusha
inc
dec
test
xor
lds
scas
daa
int
add
aas
and
jg
pop
adc
sbb
and
pushf
int
push
inc
fs
js
mov
adc
xor
shl
adc
mov
pop
cmp
dec
ja
in
push
add
pop
mov
cdq
sahf
or
dec
les
add
fistp
mov
or
sub
mov
or
dec
fcmovne
mov
inc
into
aas
adc
mov
mov
mov
mov
adc
out
adc
cmps
xor
stc
or
mov
dec
jo
inc
add
pop
icebp
jne
sbb
pop
test
sbb
or
mov
add
sbb
arpl
xchg
dec
pushf
push
rcl
out
jl
jp
adc
aas
test
dec
xor
hlt
div
adc
hlt
xor
lea
mov
fwait
or
add
sub
or
dec
repz
jge
hlt
mov
add
test
mov
and
push
clc
add
test
rcl
inc
inc
stos
sub
add
xchg
add
loopne
or
adc
cmp
int3
cmp
idiv
add
add
or
pop
push
pop
enter
mov
imul
and
and
outs
jne
cwde
popf
out
je
pop
ja
and
mov
add
fs
gs
jb
jo
mov
ss
or
jno
scas
jge
push
je
cmp
add
sbb
shr
mov
call
movs
push
mov
lock
aas
add
in
add
xchg
push
cs
pop
lock
popf
add
push
and
out
and
inc
push
or
je
sub
outs
xchg
mov
mov
add
imul
pop
hlt
jg
out
sbb
inc
ror
add
add
cmp
les
add
pop
lods
loopne
int
xor
sub
push
add
sub
bnd
push
inc
fwait
mov
in
mov
mov
cli
aad
fisubr
push
push
cli
xchg
mov
jo
imul
fsubr
add
ja
outs
or
in
mov
in
xor
sub
mov
outs
ins
aam
adc
cmp
jp
and
stos
mov
shl
inc
mov
retf
add
push
add
pop
or
xor
mov
adc
push
push
pop
xor
mov
fadd
push
or
add
fisttp
adc
mov
cwde
retf
mov
cli
push
dec
dec
bound
jp
mov
mov
cmp
(bad)
repz
bound
outs
or
imul
jg
xor
sub
mov
movs
add
cmp
and
repz
sub
push
or
dec
inc
enter
fwait
mov
loop
xor
jae
jnp
cmp
daa
sahf
xchg
mov
xchg
mov
int
adc
lea
push
arpl
jge
sub
xor
inc
or
mov
mov
js
xor
adc
mov
or
cmp
je
xor
dec
clc
imul
call
ret
push
and
mov
add
add
and
imul
fs
add
sti
jmp
imul
push
call
xor
adc
sbb
jge
out
inc
push
lahf
les
inc
adc
call
and
push
add
inc
inc
sub
pushf
add
or
inc
cmp
cmps
stos
jb
fisttp
push
mov
or
adc
xchg
in
adc
jecxz
xor
sub
add
cmp
cmp
sub
inc
cmp
xchg
jge
ins
push
jns
cdq
sbb
ret
lock
pop
xor
mov
dec
je
push
lds
int3
out
sti
je
test
push
push
adc
inc
mov
inc
dec
push
test
or
call
ret
pop
push
pop
xor
mov
inc
xor
jg
pop
dec
out
out
jae
and
xor
push
and
push
inc
int3
out
xchg
jmp
shl
fnsave
lock
add
cmp
sar
cmp
xor
sbb
add
jle
inc
inc
push
sar
xor
(bad)
fdivrp
pop
inc
push
add
push
dec
mov
es
imul
or
jne
sar
jo
aas
test
jnp
ja
push
ror
and
imul
je
nop
xchg
out
pop
or
xor
into
xchg
test
je
push
(bad)
mov
sti
add
xchg
aas
lock
xor
and
xor
adc
xor
cmp
add
xor
sar
bound
dec
pop
xchg
daa
add
enter
idiv
ds
fiadd
push
clc
jmp
lods
and
ins
and
or
xor
xchg
jg
lea
cmp
mov
jne
into
cmps
pop
pop
hlt
jp
das
pop
hlt
movs
(bad)
retf
xor
xor
sub
nop
in
sbb
sub
sbb
mov
push
ds
and
or
mov
add
jo
jg
ror
mov
and
or
js
mov
pop
sbb
dec
pop
pop
mov
or
scas
out
sbb
or
push
addr16
fdiv
sti
inc
dec
add
jge
(bad)
popa
pop
mov
sbb
lock
xor
pop
add
add
or
cdq
ja
fidivr
in
cmp
jne
data16
jl
pop
les
jmp
xchg
pop
and
das
jb
push
ds
add
and
popf
jmp
and
dec
xor
mov
outs
inc
iret
and
jmp
rol
ss
in
aaa
in
sbb
cmps
inc
(bad)
and
icebp
inc
jnp
mov
ja
clc
dec
xor
inc
xchg
inc
jo
es
xchg
mov
dec
push
and
mov
ret
mov
sets
mov
add
or
sar
popa
push
xchg
cmp
mov
dec
or
jo
daa
inc
inc
js
daa
jmp
sbb
inc
ficomp
xchg
dec
cli
sbb
out
cdq
mov
jge
hlt
dec
ins
add
movs
or
xor
xor
mov
arpl
jne
push
outs
inc
cmp
inc
sbb
push
pop
je
mov
(bad)
cmp
sysret
test
mov
push
push
ss
rcl
rol
xor
push
mov
xchg
jne
arpl
cdq
les
push
test
cli
adc
mov
adc
push
cld
inc
cmp
nop
ss
in
outs
dec
push
or
lods
push
pop
adc
adc
or
js
push
cmps
and
sub
mov
add
inc
push
pushf
adc
mov
ror
adc
fwait
bound
pop
jbe
call
jp
cmp
pop
dec
in
in
sub
jmp
or
add
daa
sub
xchg
cmps
lock
inc
jle
sub
jmp
pop
add
sbb
jl
es
(bad)
push
mov
add
push
(bad)
ror
or
cmp
or
fcomp
ds
xor
retf
push
pushf
add
(bad)
cmp
jl
jl
add
dec
daa
and
imul
pop
push
push
test
adc
and
push
repz
dec
push
leave
jecxz
sbb
hlt
aam
es
add
xor
cdq
mov
xor
pusha
rcl
into
and
sub
sub
aaa
inc
dec
pop
add
jne
xor
sub
ins
int
and
ror
nop
xor
mov
or
inc
test
jge
mov
pop
cwde
ret
mov
rol
jle
(bad)
mov
ret
xchg
or
add
and
xchg
or
ret
lock
nop
xor
ins
pop
dec
sbb
xchg
fdivr
xor
es
pusha
imul
xlat
pop
sar
sbb
xchg
mov
ins
inc
sbb
inc
inc
sbb
cmp
dec
in
sub
sub
sar
push
inc
sub
inc
cmp
aam
fcom
lea
aad
test
aad
rcr
pop
mov
push
xor
out
cmp
stos
(bad)
mov
xchg
sbb
xchg
sub
xchg
add
cli
fld
scas
and
adc
aad
movs
aad
gs
dec
in
pusha
cwde
in
mov
dec
sbb
xor
sub
inc
mov
inc
fmul
loope
or
enter
in
loope
sbb
inc
jne
push
outs
cmp
call
stos
scas
push
dec
mov
jo
movs
cmps
push
xchg
pusha
jo
les
mov
aad
and
push
and
push
push
lds
pop
dec
fsub
data16
push
repnz
das
out
mov
aaa
sbb
(bad)
loop
push
push
push
sbb
xor
enter
xor
push
test
icebp
lock
add
sub
inc
pop
push
inc
pop
call
aad
ss
lahf
data16
inc
xchg
inc
cmp
inc
sbb
(bad)
add
or
hlt
lock
dec
push
popa
jg
mov
and
out
push
or
or
je
rol
push
ja
inc
push
nop
adc
jo
xor
cmp
sahf
syscall
xor
pop
(bad)
sub
or
pop
adc
dec
fisubr
xor
push
or
pop
repnz
jns
cmp
ror
mov
jmp
jmp
comiss
push
pop
dec
add
ret
adc
test
xor
inc
je
jmp
jb
xchg
test
mov
mov
sub
jle
inc
xor
cmp
in
gs
add
push
mov
xchg
mov
sub
push
cmc
outs
out
push
daa
mov
sbb
shl
or
loope
ss
(bad)
ffreep
jnp
inc
push
movs
and
pusha
push
sbb
lahf
adc
mov
push
inc
push
pop
jne
inc
inc
adc
sub
call
and
ret
call
xchg
fs
nop
pop
call
jmp
in
push
mov
push
dec
scas
shr
inc
or
sub
or
and
add
sbb
nop
push
sar
jl
jmp
and
je
add
push
fs
adc
aaa
mov
popa
leave
pop
sub
stos
imul
mov
out
mov
bound
repz
jne
loope
fild
nop
and
cmp
inc
xor
ins
cmp
xchg
pop
test
sbb
sbb
cmp
sub
dec
push
add
ins
add
out
cmp
xchg
jne
sbb
xacquire
lea
hlt
(bad)
sub
xor
xchg
add
push
push
add
push
call
aad
popa
xchg
jo
in
xor
push
sbb
pop
inc
jle
cwde
jg
xor
jle
lds
ja
xchg
cmps
(bad)
mov
add
cmp
jl
mov
scas
xlat
adc
and
push
or
test
mov
sbb
test
test
retf
add
cmp
push
or
xor
(bad)
xchg
ins
mov
jge
sbb
sbb
inc
and
mov
lock
dec
cmps
jne
cld
dec
loopne
fld
fiadd
xchg
xchg
add
fwait
pop
out
xor
scas
(bad)
mov
push
pop
sti
cmp
repz
lock
pop
and
fmul
ds
mov
or
dec
pusha
dec
cmp
mov
cmp
idiv
xor
jle
xor
cmp
repz
hlt
sub
sub
out
retf
and
(bad)
cwde
xchg
adc
div
add
pop
adc
mov
movs
pop
adc
mov
and
inc
add
add
arpl
stc
scas
inc
rol
add
sbb
add
add
and
xlat
sar
jae
mov
sbb
push
adc
je
and
inc
or
ds
jae
xchg
xchg
sahf
mov
pop
dec
and
mov
lods
adc
pop
xor
xlat
xor
in
and
push
cmp
and
lds
add
dec
add
pop
add
and
sbb
and
call
add
lock
and
or
or
cmp
fisubr
sbb
inc
push
and
xchg
add
pop
ds
mov
aad
adc
sbb
(bad)
adc
or
inc
adc
mov
sub
pop
xor
pop
mov
xor
xor
mov
mov
xor
pop
xor
and
or
cmp
cmp
inc
nop
out
jge
push
pop
sbb
mov
adc
mov
pop
pop
cwde
rcl
sub
je
xor
ja
dec
in
(bad)
ds
or
dec
inc
imul
push
adc
mov
pushf
test
pop
rcr
xchg
push
fs
pusha
enter
inc
ds
inc
cmp
dec
les
ins
fist
push
dec
inc
push
sub
sbb
push
inc
ffreep
leave
mov
addr16
call
jl
mov
xor
int3
cmp
add
cli
push
pusha
mov
push
in
pop
dec
call
or
or
test
loopne
xor
in
aam
push
les
inc
cs
out
jns
xlat
je
add
test
(bad)
call
fnstsw
pop
cdq
or
rcr
fidiv
es
test
xchg
int
or
push
enter
out
add
cmps
jge
mov
int3
and
repz
add
adc
(bad)
loope
lds
pop
xor
or
mov
cmp
hlt
sub
inc
push
add
inc
push
lods
push
pshufw
outs
inc
sbb
arpl
std
mov
pushaw
gs
pop
xor
pop
ret
xor
push
add
inc
jo
push
mov
jl
inc
mov
or
dec
push
mov
push
in
dec
in
add
push
imul
clc
sbb
push
loopne
and
div
or
add
add
mov
mov
es
or
push
outs
mov
popf
or
adc
fwait
(bad)
fwait
inc
data16
fbstp
pop
dec
imul
add
sub
dec
mov
dec
arpl
std
das
mov
pop
or
add
cmp
sub
dec
mov
ficomp
loope
shl
mov
adc
stc
popf
dec
inc
dec
mov
sub
outs
fcom
nop
sbb
fcomp
cli
data16
mov
sbb
adc
pop
inc
mov
retf
dec
imul
pushf
sahf
or
add
xor
out
sub
cmp
repz
cs
imul
or
movs
adc
fadd
adc
aas
fsubr
and
or
add
(bad)
add
add
jle
jo
mov
jnp
push
adc
data16
jnp
dec
adc
dec
and
cld
add
dec
add
jge
and
xor
sub
ret
and
xor
add
in
cvttps2pi
adc
cmp
fs
mov
push
repnz
or
mov
out
sub
cmps
test
jp
outs
push
popf
dec
ret
jo
xor
fcomp
pop
and
or
dec
push
ds
add
stos
jo
push
icebp
mov
xchg
arpl
dec
imul
or
and
mov
or
or
push
rcr
shl
shl
pop
adc
jo
xchg
loopne
or
lahf
push
(bad)
imul
pushf
xchg
xchg
add
loope
adc
dec
jae
push
push
push
dec
and
pop
mov
fs
js
or
neg
outs
add
pop
push
je
or
pop
rcl
push
into
gs
popa
or
jl
popa
xchg
mov
jp
lea
mov
mov
rol
in
xor
mov
pop
hlt
jo
xchg
pusha
and
inc
add
xor
mov
pop
out
pop
jg
add
mov
mov
inc
ins
or
fcomp
inc
loope
xor
fadd
and
out
lods
xor
shr
inc
movs
loop
js
outs
test
or
inc
out
mov
in
enter
pop
inc
cmp
mov
inc
xchg
and
pop
cmp
xchg
pusha
adc
push
repnz
inc
or
pop
xlat
cmps
push
adc
or
push
fcom
cmps
sub
or
pushf
in
add
add
add
pusha
test
mov
out
cmp
lods
cmp
adc
mov
add
mov
ret
add
add
add
mov
or
call
and
sub
add
pop
inc
daa
in
sbb
cmp
outs
mov
dec
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
jmp
jmp
jg
sub
push
lock
out
dec
dec
jmp
adc
mov
jns
jns
adc
push
mov
pop
push
es
movs
jl
data16
cwde
sbb
in
sbb
repz
rol
inc
sbb
mov
xor
in
inc
sbb
cmp
mov
mov
push
push
pop
and
push
pushf
fnstcw
sbb
inc
add
in
hlt
cld
in
jge
mov
std
push
js
and
sub
or
out
jns
sub
cld
pop
ins
push
mov
mov
les
mov
stc
mov
push
push
jp
push
nop
lock
push
icebp
cmp
shl
xor
and
call
adc
pushf
hlt
mov
or
ds
es
or
jbe
stos
xor
and
pop
or
in
lock
add
pushf
add
call
mov
xchg
push
pushf
pop
add
xor
pop
dec
iret
les
cmp
ins
lahf
out
daa
and
daa
adc
mov
jg
or
add
(bad)
sub
inc
inc
jl
xor
cmps
push
fcmovnbe
or
test
or
adc
xor
ds
jb
cld
inc
rcl
and
aam
and
sub
into
test
lahf
dec
sahf
xlat
lock
dec
sub
adc
xchg
packuswb
dec
popa
mov
jbe
add
loopne
aam
outs
arpl
loope
xchg
sbb
loope
mov
std
dec
pop
xlat
xchg
pop
push
(bad)
rol
dec
out
in
xor
je
les
sbb
into
inc
cwde
push
xor
mov
cmp
xchg
inc
jnp
jno
mov
add
out
fmul
in
mov
add
les
adc
dec
mov
cld
add
(bad)
xchg
or
push
xchg
cmp
push
imul
dec
fnsetpm(287
loopne
push
mov
push
and
dec
adc
das
in
pop
add
(bad)
dec
push
mov
pop
push
push
pop
movs
shl
push
cdq
mov
jns
and
nop
xlat
mov
push
push
xor
inc
dec
mov
fs
pop
mov
push
je
mov
inc
and
sbb
mov
push
or
and
xor
adc
stos
xchg
mov
daa
xor
cli
jp
inc
inc
fidiv
mov
mov
push
es
aaa
cmp
mov
fwait
nop
jno
(bad)
popf
push
inc
xor
and
dec
(bad)
push
(bad)
fiadd
mov
fmul
test
inc
pop
(bad)
fs
(bad)
in
inc
sub
mov
xor
mov
and
and
iret
sub
dec
enter
sar
add
sub
in
loopne
sahf
test
lea
aaa
ds
out
out
(bad)
cmp
fsub
xchg
cmp
dec
inc
push
shl
sub
add
and
js
mov
lods
add
daa
xchg
jns
cmp
int
div
xchg
mov
jne
jne
test
adc
jbe
in
pop
add
enter
add
xor
repnz
push
adc
rcr
dec
retf
jl
sbb
jb
jl
sbb
test
ror
stc
outs
outs
(bad)
nop
das
jle
enter
into
mov
and
enter
adc
call
js
xlat
xchg
jae
stos
ror
vsubpd
dec
adc
outs
(bad)
or
mov
enter
sti
inc
cmp
leave
test
add
xor
push
hlt
xchg
loopne
or
in
les
loopne
cmp
bndldx
jge
lea
add
out
shl
dec
cmp
lock
dec
sbb
cli
and
cwde
jne
mov
cmp
(bad)
sub
jo
movs
in
outs
inc
or
(bad)
pop
repnz
dec
or
inc
cmp
push
push
pop
inc
mov
push
test
lods
dec
repz
inc
das
stos
inc
pop
enter
dec
mov
add
ds
inc
retf
push
test
add
pop
shl
or
ret
arpl
ror
ror
or
adc
adc
dec
and
add
add
sub
cmp
pusha
jbe
push
es
adc
push
dec
push
pinsrw
fadd
xrelease
push
inc
loopne
mov
add
out
mov
jo
add
xor
adc
add
inc
pop
or
add
dec
jmp
jbe
push
sbb
push
sti
dec
add
repz
popf
or
inc
add
cmp
pop
enter
(bad)
and
dec
scas
adc
cmp
mov
call
dec
shr
int3
mov
aad
ja
fcomip
inc
or
mov
dec
call
xor
adc
xor
inc
cs
mov
pop
bnd
jo
cli
clc
push
jbe
sbb
mov
out
jns
mov
or
jbe
nop
cmps
ret
retf
clc
clc
ds
gs
aam
lock
repnz
lock
inc
pop
enter
or
fwait
sbb
dec
gs
outs
dec
inc
adc
sti
add
pop
push
lods
xor
push
cs
sbb
sbb
pop
jb
cli
push
jo
mov
in
sbb
addr16
sahf
cmps
inc
adc
rol
sbb
inc
cs
outs
cmp
outs
lods
iret
pop
dec
inc
(bad)
dec
xor
loope
in
pop
dec
pop
in
sahf
push
cs
enter
out
or
rcl
adc
mov
or
and
enter
inc
pop
in
dec
ins
mov
nop
dec
dec
dec
adc
add
rcl
pop
enter
push
popa
push
push
fdivr
push
add
push
xchg
int
push
fucom
jno
push
dec
arpl
cmp
xchg
loope
fcomp
fsub
dec
mov
rcl
adc
inc
scas
push
sbb
mov
add
data16
jb
nop
mov
mul
and
sbb
inc
stos
(bad)
mov
mov
and
leave
pop
adc
pop
mov
movs
aaa
inc
or
ss
or
sub
inc
mov
mov
mov
(bad)
mov
cmp
push
stc
xor
iret
fdiv
cmp
sub
ss
push
dec
mov
aaa
lock
pop
mov
into
sysret
sub
repnz
pop
push
or
adc
or
nop
or
sbb
push
ficom
jb
outs
scas
popa
lock
out
nop
push
mov
mov
aad
xchg
sub
(bad)
sbb
sbb
push
movs
outs
push
add
(bad)
and
or
cmps
and
lock
add
xchg
jg
or
fs
xchg
mov
xlat
mov
lods
call
push
and
sub
and
xchg
fucomi
fiadd
push
andps
or
mov
ret
push
adc
rol
xchg
popa
xor
rcl
dec
pop
ret
push
mov
pop
les
pop
(bad)
mov
dec
mov
inc
into
sbb
cdq
bound
scas
pop
or
mov
and
repnz
mov
ins
or
or
ficom
inc
ins
sbb
cmp
je
adc
adc
add
test
or
aas
push
and
add
pop
enter
aas
sub
add
es
lods
scas
push
sahf
sbb
sub
adc
mov
cmp
xchg
ret
fsubr
(bad)
(bad)
add
movntq
or
dec
or
or
jne
or
mov
and
shl
jecxz
push
shl
les
clc
xor
inc
mov
test
sub
popf
repz
jo
or
add
fdiv
inc
pop
jae
fbstp
or
cmp
movs
jno
push
jbe
shr
outs
movzx
or
je
jecxz
rol
js
adc
paddsw
jle
enter
ins
add
jnp
sbb
push
mov
add
sbb
aam
pop
icebp
adc
xor
popf
mov
js
inc
inc
call
lea
adc
bnd
mov
cmp
push
cmps
je
rol
retf
ficom
jb
jle
fsub
jne
and
adc
jo
sbb
adc
cdq
xchg
mov
hlt
pusha
adc
clc
jae
hlt
mov
and
sub
in
xchg
out
retf
sbb
mov
(bad)
mov
mov
test
or
test
mov
push
test
aam
loope
mov
scas
stos
sub
fidiv
in
or
sbb
mov
enter
aam
xchg
enter
dec
sub
je
stos
ss
shl
(bad)
push
test
jne
xchg
pop
enter
mov
mov
adc
jg
or
sbb
sbb
lahf
je
mov
mov
sbb
mov
cmp
mov
mov
add
add
pop
mov
mov
cmp
dec
std
sbb
mov
sar
test
push
fwait
jl
and
add
cld
push
xor
and
out
in
or
ret
jae
mov
push
pop
shl
fmul
add
popf
call
and
cmp
push
add
sub
icebp
pusha
test
mov
jmp
cmp
jae
pcmpgtb
xor
pusha
movs
dec
cmp
push
loopne
dec
push
mov
test
dec
mov
iret
aam
test
in
cmp
or
or
and
mov
gs
icebp
ret
add
add
dec
jb
inc
ret
cwde
jg
fadd
call
or
pop
sub
out
pop
call
inc
imul
add
xchg
mov
dec
popf
cld
dec
rcl
xstore-rng
cmps
add
pop
lods
in
adc
mov
js
das
retf
xor
mov
xchg
or
ffreep
inc
jnp
xchg
(bad)
daa
loop
je
and
jmp
inc
push
std
add
push
cmp
add
sar
or
lods
mov
daa
push
push
xor
add
and
movs
mov
hlt
xor
ins
add
push
sub
cld
sbb
push
repnz
or
shl
push
or
pusha
add
push
mov
adc
sub
push
test
dec
lods
shl
into
pop
pop
mov
inc
sub
mov
mov
push
add
sbb
or
inc
mov
and
mov
and
mov
int
push
add
xchg
fidivr
mov
aam
push
adc
push
mov
push
sub
adc
test
test
add
out
push
rol
cs
add
movs
mov
inc
and
adc
jns
push
jo
stos
add
add
ins
cdq
add
sub
push
cmc
or
add
jno
add
xchg
imul
jb
xchg
fnstcw
shl
add
adc
and
and
add
dec
stos
movs
fstp
xchg
jo
push
outs
inc
add
hlt
jae
ss
sbb
das
add
mov
mov
inc
test
lods
imul
test
push
inc
adc
add
push
xor
mov
or
mov
dec
mov
pop
cmp
cmp
pop
fdivr
pop
mov
adc
add
dec
loop
dec
or
fld
inc
add
lock
sbb
outs
cmp
pop
and
bound
imul
bswap
pop
dec
xchg
push
or
pusha
adc
enter
sub
mov
inc
les
sahf
clc
sbb
mov
xchg
xchg
xlat
sub
neg
jmp
arpl
adc
jne
je
mov
cli
wrmsr
cmp
test
dec
push
add
loop
push
test
(bad)
xor
push
repnz
mov
lahf
mov
stos
ins
add
push
add
add
dec
in
aaa
inc
or
cs
push
and
dec
test
push
sub
sar
test
or
pop
iret
test
add
test
inc
jno
and
call
movsx
push
shl
add
sbb
ret
cwde
mov
out
cmps
pop
leave
cmp
sbb
add
cli
call
and
or
and
lea
mov
or
inc
jo
ret
lock
pop
ror
adc
jmp
inc
inc
or
adc
cmp
cli
mov
sti
adc
sti
jmp
xor
retf
cmp
mov
and
push
sub
cmp
and
loop
push
sbb
sub
loop
pushf
xor
or
or
mov
cmp
dec
cdq
int
movs
sub
shl
and
cs
adc
cmp
dec
inc
leave
push
daa
jmp
pop
call
test
je
ss
fadd
mov
vmovntps
push
ins
loopne
cmps
jmp
cmp
mov
lahf
jle
xchg
mov
(bad)
neg
lds
call
adc
sub
mov
shl
add
dec
scas
pop
mov
or
inc
xor
icebp
lds
jle
push
add
pop
dec
out
fs
cdq
icebp
call
push
sub
mov
fmul
pop
gs
adc
and
cmp
jo
sbb
repnz
scas
dec
mov
int3
add
sub
push
ror
inc
mov
add
push
pop
and
mov
sub
or
push
std
test
dec
inc
pop
sub
adc
or
or
add
iret
fcomp
sub
scas
inc
jge
mov
lock
inc
add
xor
and
sub
out
loopne
add
or
dec
in
test
das
sub
add
jno
mov
retf
pop
mov
scas
cs
adc
mov
add
adc
jmp
xor
(bad)
(bad)
push
xchg
dec
pop
jp
adc
push
push
in
push
cmp
dec
addr16
pop
enter
xor
add
xor
aas
xor
cvtdq2ps
mov
or
cmp
mov
dec
sbb
das
sub
adc
dec
clc
push
mov
add
adc
dec
sub
add
pusha
xlat
lds
(bad)
cld
das
fidivr
or
test
pusha
sbb
out
add
and
mov
pop
pop
add
push
cmp
sub
enter
xor
cmp
test
and
inc
enter
xor
inc
cdq
sub
add
mov
pop
dec
out
adc
mov
addr16
je
ror
mov
ret
clc
mov
sub
mov
imul
ret
push
mov
clc
cmp
nop
retf
push
pop
rol
pop
loop
shl
inc
aaa
out
adc
and
jp
imul
mov
not
xchg
mov
pop
push
sbb
sub
mov
jb
mov
loopne
dec
fadd
sbb
lods
or
jne
or
popa
pusha
nop
cs
aam
adc
xor
xchg
cmps
call
pop
fimul
jmp
add
add
mov
mov
or
add
scas
sbb
xchg
or
xor
push
mov
and
and
xchg
sub
fwait
jnp
adc
push
xor
add
arpl
cld
pop
add
jo
add
xchg
gs
call
or
or
push
ins
out
sbb
add
pop
pop
call
movs
inc
adc
and
or
je
sbb
ja
lock
in
pop
or
and
sbb
jecxz
ss
ret
jo
out
xchg
add
sub
mov
or
mov
mov
daa
push
clc
pop
xor
out
and
dec
add
xlat
or
(bad)
and
int3
ss
mov
jae
pop
mov
imul
mov
js
adc
mov
mov
dec
rol
jns
test
pop
mov
dec
jnp
jmp
adc
push
jp
clc
and
xchg
pop
je
mov
ins
and
outs
add
push
and
sbb
ja
xor
push
jnp
bound
fistp
jns
adc
call
inc
xchg
mov
cmp
loope
fs
test
or
inc
xchg
jmp
dec
outs
push
(bad)
push
in
push
and
sub
mov
mov
imul
fidiv
add
cdq
popa
or
jbe
iret
rcl
(bad)
mov
adc
mov
xor
xlat
inc
setnp
rcl
jle
(bad)
pop
sub
add
xlat
sbb
sti
xchg
xchg
and
inc
cmp
xchg
sbb
jbe
sub
push
adc
push
push
lea
push
sub
pop
pop
push
adc
call
push
pop
repnz
or
lds
sbb
out
outs
scas
jnp
sbb
pop
mov
cdq
shr
push
mov
ja
mov
sbb
or
jo
mov
sbb
mov
xor
push
or
pop
add
bound
enter
out
nop
loopne
jge
inc
ficom
inc
sub
adc
xchg
sbb
jne
stos
inc
pop
push
cmp
fcomp
lock
push
push
jmp
in
push
xor
add
clc
adc
pop
js
add
mov
mov
push
bswap
xchg
aad
mov
xor
cwde
cmp
mov
pusha
mov
jmp
add
arpl
xchg
loopne
out
scas
fstcw
mov
mov
sbb
retf
jge
jns
rcr
xchg
mov
ficomp
nop
popa
pop
popa
dec
fwait
cdq
popa
mov
mov
stos
or
int
cmp
mov
jns
or
mov
ret
or
inc
push
push
xor
mov
xor
sbb
and
call
push
jle
mov
aas
push
xchg
call
adc
into
and
cwde
adc
in
into
dec
cmp
shl
sub
pop
cmc
shl
pop
mov
rcl
and
xchg
jo
cmp
movnti
xchg
shr
pusha
or
or
add
je
pop
mov
push
pop
and
jg
jmp
mov
popf
adc
sti
in
sbb
leave
js
mov
cmp
pop
xor
or
or
cmps
lock
rol
or
mov
inc
mov
and
jne
pop
add
and
adc
adc
xchg
add
pop
sub
pop
dec
xchg
sub
fwait
cs
sbb
add
(bad)
xor
jl
hlt
movs
cmp
mov
xor
sbb
inc
movs
mov
int3
jg
in
adc
sub
inc
lods
mov
repz
cmp
out
icebp
test
mov
mov
popa
add
adc
or
xor
push
pop
jo
je
add
lods
test
xchg
call
mov
xchg
mov
mov
sahf
les
push
fs
sbb
push
daa
or
adc
mov
adc
movs
mov
dec
jmp
add
ror
in
outs
lods
add
xor
call
jns
mov
xor
add
mov
xor
xchg
jo
cmp
aam
outs
cmp
jnp
or
lock
jno
or
jge
ret
popa
pusha
lods
dec
cmc
xchg
stc
leave
sub
adc
adc
in
sbb
or
add
pop
stc
dec
inc
lock
iret
ja
jb
sub
mov
outs
stos
jmp
pop
cmps
dec
add
cmp
jmp
mov
into
jge
lods
inc
icebp
adc
add
call
xchg
push
cld
fstp
and
mov
cmp
aad
xlat
inc
dec
add
(bad)
add
xor
into
inc
mov
xor
retf
add
inc
cmp
fcmovb
mov
pop
sbb
aad
pop
add
or
adc
and
mov
pop
shl
dec
jmp
cwde
movs
imul
jmp
pop
and
pop
cmps
push
sbb
cmp
or
test
cmps
nop
repnz
inc
in
adc
pop
cdq
push
mov
lods
mov
test
pop
mov
push
pusha
jecxz
xchg
mov
xor
jecxz
mov
xchg
jp
cli
int3
mov
or
xor
outs
in
xchg
add
(bad)
addr16
ds
dec
fcmovb
ror
sub
repz
xor
(bad)
mov
xor
jle
adc
(bad)
mov
call
mov
mov
jne
sub
mov
jecxz
int
xor
in
je
add
(bad)
jp
pop
ins
jmp
and
dec
xchg
dec
and
cmp
mov
inc
push
xchg
xor
les
adc
and
cmp
adc
aas
lods
cmps
xor
fsub
and
inc
sub
mov
cwde
in
adc
inc
dec
sbb
inc
fsubr
pop
sbb
or
xchg
test
hlt
and
or
cmp
mov
pop
idiv
push
and
(bad)
or
jae
dec
pop
adc
inc
jo
xor
or
push
inc
push
loopne
out
dec
sbb
lock
cmp
cmp
or
xchg
enter
or
cmp
and
add
dec
add
mov
je
mov
jae
inc
pop
and
sbb
sbb
mov
fs
push
mov
je
inc
test
add
jge
jl
test
mov
aas
jbe
push
mov
and
or
push
and
xchg
mov
sub
pop
jno
mov
out
xchg
or
push
fcom
dec
inc
dec
adc
mov
add
dec
bound
jbe
cmp
mov
xchg
inc
add
retf
jb
jnp
rcl
jb
sbb
and
xor
imul
add
mov
rcr
adc
pop
add
mov
fiadd
mov
xor
cmp
fadd
or
pusha
sub
test
xor
push
loopne
dec
int
jg
jbe
int3
xor
les
or
nop
dec
fs
in
nop
retf
fadd
fwait
and
lods
pushf
clc
xor
enter
xor
and
add
cld
aam
add
and
sbb
add
mov
add
xor
push
jg
cmp
inc
arpl
hlt
xor
pop
xor
push
outs
aaa
and
fbld
cmp
xadd
push
or
pop
jno
and
pop
aas
push
jmp
test
pushf
jg
cs
rcr
rcl
jmp
mov
pushf
mov
cmps
rol
and
xor
sbb
xor
mov
or
and
ret
(bad)
movsx
adc
js
ds
adc
and
xchg
sbb
lds
cs
inc
(bad)
xchg
test
pop
mov
jmp
pop
pop
mov
lock
cmp
loopne
xor
or
test
mov
sbb
inc
and
mov
push
out
push
sbb
mov
inc
mov
dec
inc
cmp
mov
add
pusha
sbb
xchg
ficom
mov
sbb
mov
xchg
scas
adc
sbb
js
lock
cmp
sbb
adc
or
shr
shr
movs
mov
push
or
xlat
ror
add
sbb
adc
fiadd
adc
adc
push
and
or
xor
cmp
clc
mov
mov
adc
adc
push
xchg
adc
mov
dec
loop
add
call
daa
push
cmp
pop
push
cmp
push
inc
int3
sub
add
dec
or
cli
mov
sbb
(bad)
push
mov
push
fwait
sar
call
add
shl
mov
sbb
aaa
stc
inc
clc
mov
jl
mov
xor
clc
jne
cld
dec
jecxz
aaa
push
cmp
loopne
pop
adc
mov
add
adc
or
push
mov
cdq
ret
call
and
loopne
stos
ins
mov
mov
dec
inc
cld
fld
ss
fs
into
imul
sbb
adc
xchg
sbb
into
into
jo
mov
(bad)
outs
sub
adc
in
test
out
push
pusha
mov
sub
outs
jl
adc
lods
sub
test
test
je
mov
xchg
push
and
add
enter
and
or
adc
adc
jg
test
je
rol
sbb
and
xor
cmp
xchg
aam
inc
(bad)
in
popf
add
mov
inc
movs
mov
fnsave
in
loop
call
rol
rcr
dec
daa
adc
cmps
and
jne
push
je
mov
jb
call
mov
pop
pop
aam
and
adc
adc
das
jmp
mov
test
fimul
test
(bad)
outs
cmp
daa
cmp
ins
add
mov
loopne
mov
aam
xchg
scas
push
cmp
lds
xchg
int3
mov
or
push
pop
ret
sbb
nop
mov
add
(bad)
jmp
shl
mov
inc
xor
or
cdq
mov
dec
in
xor
out
fcom
das
and
add
sbb
sti
add
add
scas
xor
(bad)
sub
pop
add
movs
jb
pop
adc
dec
or
or
or
sbb
pop
(bad)
ss
add
(bad)
pop
add
pop
mov
ficomp
add
xchg
xor
push
sub
add
pop
or
bound
sub
pop
mov
jge
lds
faddp
mov
fld
or
outs
cmp
ins
pop
add
sbb
pusha
test
dec
xor
lods
dec
shl
sbb
and
xchg
sub
popa
lock
push
xchg
shl
pop
add
fwait
push
repz
jae
xlat
in
hlt
in
adc
jno
push
xor
sub
out
dec
iret
dec
bound
add
fld
fcomip
mov
mov
js
mov
jne
inc
stos
mov
xor
jo
and
mov
sub
mov
cmp
cmp
clc
and
xchg
iret
js
pop
scas
fs
mov
cmp
sub
inc
das
loopne
cld
mov
inc
test
pop
pop
cmp
pop
les
adc
jp
pop
scas
jae
call
add
add
ss
outs
retf
add
sub
sti
xchg
mov
add
push
rcr
cmps
push
sar
xchg
mov
nop
gs
add
or
nop
add
dec
xchg
push
stc
pop
hlt
shr
inc
rol
cmp
hlt
std
dec
test
xor
in
in
scas
inc
rol
xchg
xchg
sub
(bad)
jp
push
pushf
sbb
add
test
pushf
add
fs
outs
pop
sbb
out
jmp
jmp
stos
xor
and
adc
dec
or
xor
jmp
sbb
movs
cmp
or
adc
jmp
fmul
jmp
and
and
nop
or
popa
inc
add
adc
add
adc
popf
mov
mov
je
push
pop
jmp
sub
pop
inc
scas
add
and
movs
lods
dec
fst
sub
mov
push
jmp
add
mov
sbb
add
retf
xor
scas
add
sub
(bad)
fisttp
mov
pop
es
cs
inc
or
dec
fstp
push
sbb
or
jbe
or
and
mov
jecxz
dec
cmp
push
fwait
pushf
sub
inc
jnp
sbb
jo
test
mov
add
lods
add
call
sbb
push
loope
adc
mul
mov
mov
outs
test
add
out
sbb
sub
pop
inc
xchg
lea
sbb
mov
inc
retf
outs
mov
mov
neg
xchg
movs
neg
in
sbb
ficomp
and
retf
jo
and
mov
pop
sti
sbb
mov
mov
adc
mov
loope
add
push
cmp
sub
push
call
pop
push
sub
push
push
push
push
fld
push
mov
push
popa
or
ins
mov
pop
mov
or
mov
cmp
dec
and
cmps
ror
fistp
fist
and
push
in
loopne
je
sar
push
sub
and
and
adc
sbb
push
and
and
loopne
mov
js
xchg
inc
add
jge
popf
sbb
or
ror
mov
push
pop
push
jb
test
sub
or
mov
lds
cmps
inc
add
inc
das
or
pop
or
inc
lods
aaa
sub
add
clc
inc
lea
sbb
add
lea
popa
and
add
popa
sbb
add
inc
sbb
in
jno
aaa
enter
data16
lea
xchg
jbe
inc
js
adc
or
pop
inc
lea
fadd
sahf
push
add
or
sub
test
adc
mov
(bad)
(bad)
inc
sbb
repnz
xor
push
mov
sbb
or
mov
add
add
aam
or
enter
jp
adc
add
in
add
or
pop
or
out
faddp
aaa
test
mov
jge
das
pop
mov
test
pop
mov
or
xor
or
xchg
dec
or
arpl
test
lods
xchg
jle
mov
stos
rcl
push
test
inc
pop
sub
(bad)
jmp
aas
in
iret
lds
adc
and
cmp
sub
rol
pop
and
sbb
ret
mov
mov
fwait
push
push
pop
inc
cmp
add
cmp
scas
(bad)
repnz
mov
repnz
and
jle
iret
add
dec
xchg
jbe
jne
or
rol
ins
les
inc
push
jmp
or
adc
or
std
(bad)
add
jae
mov
mov
mov
cmps
dec
inc
add
dec
push
or
retf
rcr
push
or
pop
dec
adc
sar
call
pop
pop
add
in
xor
jge
jnp
pop
push
cmp
mov
cmp
pusha
test
and
xchg
pop
xchg
repnz
out
out
mov
add
out
push
add
cmp
xchg
xor
ret
cs
loope
jecxz
mov
out
jno
imul
mov
and
aam
push
mov
push
(bad)
jl
add
cmp
je
mov
int3
jp
data16
cld
daa
cmp
mov
aad
in
push
mov
bound
sub
or
pop
(bad)
sbb
and
pusha
inc
pop
or
ja
shl
mov
push
fdiv
lock
adc
xor
and
out
sub
mov
add
jmp
pop
retf
aaa
jmp
sbb
xchg
mov
fwait
icebp
popa
test
adc
cmp
cld
ret
and
and
sub
pop
loop
xchg
jmp
aaa
sub
inc
or
cmp
lea
arpl
add
out
ret
push
add
cmp
or
xor
add
loop
pop
dec
inc
add
adc
mov
cmp
sub
add
outs
dec
mov
add
jno
in
xor
dec
clc
(bad)
les
in
inc
sub
mov
aam
and
into
(bad)
dec
retf
cmp
test
push
inc
push
sar
add
dec
mov
test
xor
jl
sub
lea
rcr
clc
jmp
cwde
ja
push
add
or
repz
sub
jne
and
pop
pop
mov
sbb
fsubr
push
adc
lahf
stc
ins
mov
sbb
pushf
push
cmp
inc
fadd
jne
js
ret
push
xchg
fucomp
(bad)
xchg
rcl
mov
test
clc
xchg
push
cmps
es
dec
popa
dec
rol
push
sbb
cmps
mov
lods
repnz
adc
in
adc
or
test
jno
xchg
adc
pop
cli
inc
dec
and
cmp
cmp
and
div
cmp
or
(bad)
sbb
xchg
xchg
ret
push
add
nop
pop
or
dec
and
(bad)
ror
pop
xor
inc
adc
lock
enter
jle
out
jmp
ret
pop
es
call
or
jns
sti
or
hlt
js
movs
pop
les
int3
or
cmp
hlt
pusha
daa
fdiv
je
xor
dec
dec
sbb
nop
or
inc
mov
mov
sbb
rol
mov
les
xchg
push
adc
mov
and
xor
cmps
gs
and
mov
xor
pop
mov
mov
mov
sub
sbb
push
mov
les
sbb
cmp
ss
test
outs
pop
sub
fs
(bad)
mov
imul
icebp
push
sahf
sub
pop
gs
inc
jge
inc
mov
jae
mov
rol
add
jg
sti
xor
add
lock
jne
iret
mov
sub
rcl
jne
mov
pop
dec
cmp
or
stos
xchg
aas
jle
jmp
sti
and
and
add
add
outs
cwde
xchg
iret
sar
mov
jns
ror
adc
dec
mov
jmp
pop
cmp
xor
jae
(bad)
add
bound
push
es
push
mov
popf
or
inc
or
mov
xlat
push
imul
dec
ud1
ds
adc
cmp
jne
add
aaa
sbb
inc
or
push
aas
es
mov
pop
stc
sub
cmp
fist
dec
shr
stos
or
xor
lock
push
cmp
or
add
sbb
mov
imul
lahf
je
pushf
push
fild
jne
xchg
dec
mov
jo
in
xchg
inc
push
xor
nop
inc
pop
or
cmp
aas
mov
(bad)
shr
adc
cmp
(bad)
in
jg
rol
fisub
pop
inc
mov
inc
add
(bad)
stc
add
sbb
rol
shr
inc
pop
cmp
push
xor
jp
adc
push
fwait
scas
inc
lock
imul
jns
add
jo
add
jbe
ret
push
mov
sub
into
js
mov
pop
push
sbb
outs
pusha
les
add
push
fldcw
xor
push
inc
jge
imul
les
push
push
push
mov
mov
js
jne
add
imul
loop
std
or
pushf
push
and
mov
pop
pop
add
push
cmp
and
push
push
or
mov
enter
icebp
xor
mov
mov
sbb
cwde
pop
jae
sub
push
mov
xor
sub
adc
shr
imul
mov
rol
iret
adc
mov
arpl
jle
jne
add
and
popa
sub
mov
adc
ja
pop
or
enter
dec
mov
adc
repnz
add
sub
daa
sbb
jmp
cmp
or
jmp
leave
pop
inc
inc
and
push
aad
sub
outs
out
sub
pop
xor
movs
pop
inc
(bad)
cli
call
mov
retf
jg
daa
cmp
popf
mov
pop
ret
js
add
sub
or
test
mov
mov
(bad)
cmp
sub
jne
xchg
in
test
mov
mov
jle
jmp
pop
dec
test
imul
push
and
movs
loop
cdq
ret
mov
adc
sub
popa
xor
aas
mov
loopne
jg
cmp
add
push
push
fild
sbb
nop
pusha
mov
pop
dec
inc
xchg
out
pop
not
or
icebp
push
dec
adc
mov
ins
push
jne
cmp
mov
or
pop
xor
aad
sub
add
mov
out
inc
mov
je
shl
mov
pusha
cmp
daa
xchg
xor
ja
sbb
inc
jbe
loope
or
jo
jmp
and
loope
push
sub
or
add
outs
push
dec
call
icebp
dec
fisttp
and
and
pusha
or
sbb
jle
inc
in
je
popf
and
cld
mov
mov
mov
add
iret
pop
cmc
stos
das
ja
(bad)
retf
push
sbb
dec
push
lods
rcr
or
lea
cli
lea
lea
test
cmp
jmp
add
sub
pop
xchg
xor
push
call
sbb
daa
add
clc
shr
add
inc
push
(bad)
inc
mov
pop
pop
das
test
pop
fldenv
call
or
call
stos
mov
jo
fmul
add
or
dec
or
add
cdq
dec
dec
rol
push
xor
ret
das
sbb
test
loopne
lock
addr16
popf
cmps
add
jecxz
mov
adc
pop
pop
jl
add
inc
jmp
and
xor
loop
ins
loope
dec
add
loope
xor
clc
int
mov
push
mov
mov
mov
dec
out
xor
push
rcl
(bad)
cld
test
imul
inc
shl
sbb
jmp
iret
mov
adc
sbb
pop
pusha
and
ins
cmc
cmp
daa
xchg
mov
jo
clc
int
movs
pop
loop
cmps
push
xor
dec
mov
sbb
enter
call
iret
sbb
icebp
xlat
add
pop
add
dec
inc
dec
push
pop
in
and
dec
call
retf
ror
inc
movs
add
movs
mov
cmp
arpl
fnstcw
sub
xchg
sbb
js
push
pop
mov
jmp
pop
inc
hlt
add
loopne
xor
sti
and
call
dec
rcl
sbb
add
cmp
dec
clc
and
data16
cmp
in
push
je
push
js
pop
xchg
or
push
pop
mov
jbe
or
mov
idiv
xchg
test
dec
sub
out
adc
sub
or
repz
inc
dec
(bad)
out
das
lods
or
cmp
je
jnp
add
add
adc
out
jb
cmp
cwde
mov
lds
retf
push
add
cmp
rcpps
add
push
sbb
fild
push
xchg
movs
dec
sti
pop
and
retf
xchg
in
fist
into
sbb
mov
loopne
dec
lea
jns
or
movs
fcomp
test
mov
xlat
or
stc
xchg
loop
dec
in
jne
and
sub
ret
(bad)
xor
push
push
mov
aas
js
mov
adc
add
and
and
jl
sub
aaa
fild
test
(bad)
imul
jmp
cmp
sbb
xor
dec
pop
(bad)
sbb
mov
cmp
mov
js
dec
test
fbstp
dec
sbb
sub
pop
adc
dec
mov
test
mov
sbb
add
jg
(bad)
mov
push
adc
mov
dec
arpl
cdq
pop
jp
mov
nop
out
dec
xchg
xor
retf
xchg
cmp
cmp
push
fadd
aam
ss
scas
ins
sbb
inc
mov
add
jo
test
outs
jne
ret
out
jmp
adc
pop
fs
mov
sbb
xlat
sbb
iret
sbb
adc
fsubr
sub
jnp
test
fwait
inc
xlat
shl
arpl
lock
inc
adc
or
inc
mov
sbb
push
inc
jns
pop
mov
push
inc
cdq
js
push
shl
mov
or
pop
sbb
shl
add
cmp
dec
add
push
push
ins
push
mov
mov
dec
adc
stc
jmp
out
mov
jmp
out
adc
add
sbb
cmp
test
ret
mov
iret
ss
iret
ins
adc
xor
lahf
inc
cmp
sbb
sbb
or
xchg
adc
(bad)
and
cld
and
in
fdiv
ss
inc
jbe
js
push
or
test
fstp
cmp
sub
sub
add
sti
sub
and
push
push
or
push
pusha
mov
(bad)
and
nop
data16
ret
icebp
push
nop
and
mov
(bad)
or
call
movs
je
xor
mov
(bad)
ret
jp
push
mov
aam
bound
push
sbb
cs
hlt
or
sub
(bad)
cs
jmp
xchg
imul
pop
push
retf
mov
add
fistp
sbb
(bad)
or
outs
(bad)
adc
mov
mov
std
js
into
rcl
sbb
out
shl
mov
arpl
mov
cmp
(bad)
jl
imul
or
test
or
iret
mov
cmp
inc
inc
je
hlt
jnp
pushf
mov
mov
and
pop
arpl
les
jo
ret
shl
inc
jae
sbb
adc
or
test
stc
mov
push
les
shr
cmp
sti
sub
push
arpl
in
rol
mov
pop
das
add
(bad)
rol
mov
pop
retf
and
pop
add
in
xchg
push
sbb
sbb
dec
sub
ror
jp
scas
or
xchg
sbb
inc
movs
aaa
xchg
repnz
adc
mov
pop
adc
test
mov
cmp
mov
adc
and
das
push
cwde
call
and
push
nop
int
(bad)
pop
sub
xor
jle
call
and
adc
idiv
inc
jmp
outs
lock
and
adc
ins
(bad)
jecxz
jge
mov
int3
jmp
sub
pusha
cmp
sub
push
mov
add
xchg
jo
xchg
outs
cld
sbb
xor
div
les
adc
sbb
jmp
popf
ja
rcr
aam
sub
bound
pop
aas
test
ret
fadd
leave
hlt
aaa
or
pop
bound
enter
inc
add
in
mov
lock
sub
sub
daa
jb
adc
xchg
add
dec
add
dec
cmp
pop
dec
in
icebp
add
pop
sub
mov
xchg
mov
cmp
data16
sub
mov
xchg
mov
push
dec
jne
gs
addr16
lea
aas
sar
sub
mov
fsubr
pop
or
mov
jecxz
int3
das
cmp
xor
xor
adc
cmp
dec
inc
jo
loop
adc
inc
inc
cmp
sbb
mov
add
neg
fmul
inc
adc
dec
add
sub
cmp
ds
mov
lock
jge
mov
pop
nop
inc
mov
dec
outs
and
jno
inc
fidiv
test
stc
fld
test
jnp
xchg
and
push
jge
push
sub
mov
and
icebp
arpl
pusha
dec
adc
jmp
sbb
sub
mov
xor
dec
dec
pop
jmp
je
add
push
push
cmp
ja
push
call
push
adc
or
add
loop
ret
stos
cmp
or
imul
push
mov
or
sub
xchg
adc
gs
add
and
mov
mov
fadd
popa
ret
sbb
dec
ret
adc
fmul
sbb
sar
xor
pop
imul
sub
pop
call
out
cmp
cmp
inc
mov
xor
sub
pop
in
(bad)
jecxz
pop
push
jle
pop
call
cmc
test
jbe
and
xor
push
add
mov
inc
adc
jne
data16
mov
inc
nop
es
add
push
ret
xchg
das
cld
or
mov
ret
fs
in
and
aad
addr16
aaa
out
pop
sbb
clc
sub
add
and
sub
jne
aaa
push
cld
sub
pop
push
lods
and
push
dec
rol
and
or
sbb
ins
inc
or
adc
sub
ja
xchg
pop
mov
mov
mov
cmp
pop
sahf
jp
sub
inc
add
add
call
mov
inc
or
cwde
add
ror
sbb
inc
sbb
dec
pusha
shr
jecxz
mov
push
xchg
sbb
pop
and
add
or
or
add
add
mov
daa
je
fld
or
mov
shl
lods
pop
das
or
inc
sbb
daa
xchg
hlt
or
mov
adc
cmp
jecxz
iret
adc
test
sbb
jp
int3
jae
push
arpl
xchg
fwait
xchg
loope
lods
jo
loopne
pop
inc
ret
jl
imul
sbb
xor
or
dec
addr16
cmp
lock
enter
ret
dec
adc
popa
data16
jecxz
ss
mov
cdq
enterw
sub
test
adc
or
lods
shl
add
fdiv
or
xor
push
fcmovb
sti
or
mov
adc
ss
adc
xor
cmp
push
ret
outs
add
adc
adc
out
mov
xchg
shl
cmp
sbb
inc
or
and
inc
xor
test
mov
test
push
add
mov
mov
scas
clc
pop
cmp
ret
scas
dec
inc
inc
(bad)
mov
leave
js
jno
push
popf
cmp
lods
pusha
(bad)
cmp
rcl
nop
rcl
jbe
test
sbb
leave
mov
cmovl
push
pusha
shr
in
add
sub
dec
repz
pop
add
shr
add
jne
outs
adc
fs
shl
add
adc
int3
das
enter
adc
push
test
and
dec
cmp
push
mov
xor
mov
or
sbb
mov
pop
int
push
jge
hlt
repz
and
sub
sbb
inc
in
xchg
je
push
inc
out
(bad)
cmp
jecxz
out
jmp
jge
pushf
sub
leave
ja
icebp
mov
sub
ins
mov
mov
fcmovnbe
test
cmp
(bad)
test
sub
rol
pop
pop
dec
out
mov
enter
hlt
mov
psubw
cwde
fcmovu
sub
jmp
add
xchg
inc
sbb
clc
pop
js
mov
clc
ret
dec
push
mov
push
jb
dec
pop
les
inc
sbb
mov
or
xor
cmps
adc
add
lahf
rol
mov
sbb
inc
je
cdq
fiadd
inc
dec
daa
or
stos
lds
add
sub
adc
leave
les
adc
sbb
mov
sub
mov
outs
mov
pop
xor
dec
pop
rol
cmc
clc
sub
test
sub
mov
xchg
scas
jnp
jae
adc
fcom
dec
test
dec
jne
cmp
cmp
popa
lock
mov
and
dec
jae
aas
cmp
ror
mov
gs
das
and
dec
dec
fdivr
lock
lock
jo
push
xchg
inc
into
jle
push
in
pop
popa
loop
mov
out
push
sahf
mov
and
int3
cli
mov
sbb
jb
sub
or
dec
(bad)
(bad)
(bad)
or
stos
mov
mov
imul
push
push
jg
ins
jle
loopne
and
xor
push
and
xchg
adc
add
test
test
adc
mov
in
sbb
jle
sub
or
dec
or
xchg
in
jmp
fsub
in
sub
fdiv
xchg
cmp
xchg
sub
adc
cdq
mov
gs
xor
bound
mov
cmpps
or
add
scas
sub
mov
xor
push
sti
or
and
add
lods
and
daa
or
pusha
imul
add
cld
mov
cdq
add
xor
addr16
inc
push
(bad)
(bad)
pop
test
sbb
popf
shr
xor
inc
add
sub
movs
push
push
push
shl
cli
daa
je
or
je
inc
push
imul
push
neg
adc
es
sub
push
add
jo
mov
pop
leave
clc
movs
popa
shl
test
xchg
add
mov
rcl
add
pop
add
xchg
ins
pusha
add
and
dec
inc
movs
jmp
dec
and
push
dec
cmp
movs
and
cmc
push
jecxz
imul
jne
mov
fsubr
(bad)
xor
pop
dec
sar
rol
aaa
xor
push
push
push
mov
jo
sar
jns
adc
jmp
push
(bad)
imul
movs
xor
xor
cwde
repnz
or
jle
mov
lock
sbb
add
or
dec
in
push
push
shr
shl
push
push
jne
jo
mov
stos
ret
jae
loope
and
jne
loopne
push
mov
stc
push
sub
cmp
into
dec
pop
not
xchg
sbb
add
pushf
or
into
inc
aas
or
stos
movs
jecxz
cmp
adc
add
in
pop
mov
aaa
sbb
xchg
syscall
ss
mov
lock
or
jl
dec
lock
xor
mov
sbb
inc
sub
int3
or
sahf
sub
sbb
push
movs
retf
in
test
mov
or
fidiv
adc
ret
ror
js
xchg
movs
add
hlt
lahf
(bad)
jmp
fimul
dec
or
daa
lods
pop
add
add
cmp
push
inc
nop
cs
out
je
push
fmul
inc
aaa
(bad)
fld
jo
nop
add
sbb
pop
jp
jl
and
pop
imul
sub
sub
add
adc
add
push
add
xchg
add
and
sub
inc
repnz
inc
jecxz
dec
clc
cmp
xchg
js
xor
rol
(bad)
ror
cmp
cs
aad
cmp
imul
gs
push
neg
popf
js
xor
push
inc
push
pop
adc
pop
pop
and
in
sub
cld
pop
leave
inc
or
shr
inc
sar
add
jg
lea
inc
scas
adc
cmps
fild
cmp
(bad)
adc
sbb
mov
sbb
adc
fwait
push
jmp
or
cmp
adc
xor
cmp
ds
daa
ss
push
sbb
jne
adc
pusha
push
mov
pop
sbb
dec
mov
jle
fild
inc
call
mov
and
pusha
sub
int3
adc
dec
ret
mov
psubw
sub
xchg
cmp
cmps
scas
adc
test
sbb
ror
por
dec
cdq
jmp
test
sbb
inc
in
pop
or
xchg
mov
xchg
sbb
push
lahf
inc
sub
ror
dec
ins
js
or
mov
sub
leave
xchg
push
pop
adc
jb
pop
dec
sub
gs
inc
mov
pop
mov
in
inc
mov
jg
mov
adc
push
sub
or
imul
mov
mov
cmp
sbb
ror
and
add
loopne
loopne
adc
sbb
add
aas
jno
sbb
cwde
jno
(bad)
sti
mov
or
mov
test
pop
xchg
cs
cmp
lods
rcl
in
add
cwde
add
daa
movs
pop
mov
dec
sub
(bad)
shl
sahf
inc
or
aad
adc
add
gs
mov
xor
inc
dec
int
xchg
mov
icebp
mov
push
sbb
xlat
or
xchg
or
shl
xor
movs
rdpmc
jo
mov
xchg
or
jecxz
push
loop
daa
sahf
mov
int3
adc
fld
xlat
(bad)
mov
cmps
mov
retf
pop
ret
dec
ret
inc
xchg
data16
out
xor
fiadd
xchg
sbb
cmp
cmp
scas
and
loop
and
pop
sub
cli
push
in
js
pop
sbb
js
or
fimul
mov
adc
push
mov
mov
(bad)
adc
xchg
adc
cmp
mov
and
cwde
es
push
jo
mul
test
enter
push
jmp
jl
fcmove
lock
inc
sbb
sbb
sbb
(bad)
ret
cmp
push
xchg
dec
lea
in
add
xor
xchg
loope
add
mov
xchg
stos
add
ins
inc
shl
fld
push
jge
hlt
push
cmp
add
clc
adc
xchg
ds
push
pop
bound
jne
scas
mov
fdiv
xchg
xrelease
aad
xor
pop
lock
and
dec
adc
jo
(bad)
push
and
imul
lods
sbb
sbb
loop
xor
mov
stos
ds
dec
xor
xlat
test
scas
adc
lock
xchg
fs
cmps
and
and
xor
jns
sub
push
ins
lock
or
or
rcl
pushf
sbb
sbb
cwde
sbb
jne
rcr
xor
cmps
(bad)
inc
pop
fdivr
mov
push
lock
add
xor
test
stc
mov
xchg
adc
push
fadd
pop
out
adc
or
cdq
leave
icebp
fwait
test
dec
ja
dec
or
push
push
inc
push
mov
in
cli
and
imul
pop
sbb
(bad)
ins
lea
add
inc
test
loope
std
rol
mov
inc
sub
es
push
popa
stos
add
mov
dec
aad
push
mov
sub
ds
fcom
pop
test
or
push
push
cmp
loop
push
and
enter
cmp
cs
add
ficomp
jmp
and
sbb
rcr
out
cmp
pmulhuw
sub
mov
nop
push
mov
daa
inc
lock
xadd
push
adc
test
sahf
and
push
sbb
mov
and
je
cmp
pop
ret
add
loope
dec
or
cs
xor
and
shr
jg
inc
cmp
mov
add
movs
xchg
(bad)
add
xor
pusha
test
pop
sbb
loop
jge
cmps
mov
cwde
rol
sahf
sbb
(bad)
mov
hlt
sbb
or
push
imul
test
arpl
xchg
xchg
or
pop
clc
je
xor
sbb
gs
test
jne
push
dec
xor
cmp
(bad)
jmp
mov
sub
ins
or
popa
sub
push
inc
arpl
add
mov
xor
sbb
pop
(bad)
sub
inc
xor
inc
fcomp
cmp
or
or
push
adc
or
mov
jnp
xchg
es
sbb
lods
and
std
pop
nop
pop
loopne
lock
pop
sub
retf
es
sub
pop
pusha
add
movs
push
xor
rcr
and
lods
int3
inc
dec
fs
inc
xlat
ret
int
sbb
jg
lea
xor
or
xchg
add
xor
push
mov
add
dec
ret
pop
adc
in
pushf
div
nop
retf
aas
jl
jae
test
push
fwait
pop
xlat
jle
push
movs
lock
pop
leave
nop
mov
fs
add
mov
(bad)
fist
fsub
mov
fwait
ret
aam
inc
jns
push
or
mov
jg
mov
mov
(bad)
mov
xchg
mov
fisub
add
mov
(bad)
cs
sub
add
test
jnp
push
das
jmp
push
ins
jge
mov
or
int
adc
cmp
add
iret
and
enter
cmp
mov
les
sub
shrd
and
daa
popf
or
xor
add
sahf
push
sub
add
xor
test
jne
cmps
add
scas
mov
or
fld
cmp
or
lahf
and
(bad)
and
add
or
push
dec
dec
aam
rcr
sub
cmps
sub
fmul
into
sbb
call
xor
ret
outs
mov
add
pop
jae
aaa
push
xor
ds
sbb
aas
into
and
add
inc
imul
or
sub
cwde
nop
pop
jl
fiadd
push
es
mov
pop
push
mov
push
sub
mov
cdq
fcom
and
mov
xor
popa
not
inc
mov
pop
add
cmp
and
js
mov
dec
rcl
test
(bad)
daa
daa
daa
daa
dec
xor
shr
pop
lfs
lds
es
add
pop
adc
lock
push
dec
cmp
dec
jb
and
add
adc
jb
pop
pop
sbb
push
push
mov
push
inc
and
sub
mov
push
ins
xor
loop
je
nop
cmp
mov
movs
nop
call
fs
xchg
test
xchg
iret
pop
cmps
ror
mov
aaa
adc
xor
xchg
ins
stc
es
adc
jb
cs
std
sbb
mov
cmp
push
lock
call
pop
mov
pop
inc
inc
call
ins
sub
mov
(bad)
cmp
out
jl
or
jle
or
mov
xor
xor
cmp
add
cmp
inc
into
push
fcomp
out
mov
pop
pop
sti
pop
adc
jae
(bad)
cdq
(bad)
mov
or
scas
sub
jo
cmp
cmp
mov
mov
pop
dec
push
into
outs
pop
mov
sbb
stc
mov
and
mov
mov
or
sub
retf
pop
ds
outs
mov
or
aas
xchg
lea
mul
pop
test
jge
ret
cmp
inc
scas
sbb
inc
mov
adc
pop
lock
ror
retf
and
add
out
(bad)
fstp
sbb
ror
cmp
sbb
test
sbb
arpl
clc
mov
imul
mov
in
xchg
repnz
inc
add
das
adc
and
cmp
jb
std
and
jecxz
in
sbb
mov
or
sub
cmp
push
out
jno
adc
inc
arpl
add
fcmovb
mov
neg
mov
inc
and
mov
sub
push
dec
in
add
ret
pop
adc
pop
clc
pop
xchg
test
sbb
paddsb
add
ror
jecxz
aad
add
add
and
test
das
cmp
dec
and
sbb
push
xchg
pop
imul
scas
push
and
in
xor
cmp
sub
popf
(bad)
dec
pop
push
or
mov
push
add
cmc
adc
es
dec
sbb
sar
idiv
xor
jae
je
mov
mov
and
jmp
mov
mov
mov
mov
jne
movs
or
sahf
lods
into
add
pop
sar
xor
stos
pushf
dec
loopne
rcr
add
and
dec
mov
jl
inc
inc
imul
cs
cmovae
push
push
dec
mov
push
shl
enter
or
mov
ret
sbb
push
xchg
movs
test
daa
cmp
rcr
ret
or
retf
sub
test
cmp
test
es
call
xor
mov
and
test
pop
out
dec
not
mov
push
sbb
nop
pop
mov
cld
add
jle
push
pop
les
sub
iret
xchg
(bad)
xchg
shl
ret
push
mov
add
mov
or
xor
mov
popa
fwait
dec
mov
and
mov
aas
dec
jmp
cmp
add
adc
fcom
dec
sbb
data16
add
inc
add
cmp
addr16
(bad)
ins
and
dec
inc
test
dec
scas
sub
adc
pop
gs
jbe
imul
ror
sbb
or
pop
adc
dec
popf
or
jmp
lock
leave
xor
add
dec
test
retf
(bad)
xor
es
push
ins
fwait
ins
movs
mov
adc
js
cmp
(bad)
pop
mov
mov
shr
adc
mov
lock
stos
and
or
iret
sub
arpl
add
jmp
adc
sub
pushf
and
add
mov
xchg
adc
xchg
cmp
adc
sub
out
adc
je
adc
add
repz
mov
add
scas
inc
mov
iret
fsubr
daa
dec
stos
add
int3
push
sub
inc
and
inc
push
xor
mov
xor
lock
ins
rol
jmp
sbb
lea
or
inc
jecxz
push
sbb
lea
(bad)
cmp
adc
bound
push
inc
das
adc
ins
add
and
pushf
sub
mov
cmc
adc
jae
cs
add
xor
inc
adc
test
arpl
cmp
korw
push
dec
clc
cmp
je
push
add
cmp
inc
mov
in
push
mov
or
xor
(bad)
cmp
or
sub
sub
imul
xchg
xor
pop
pop
adc
add
popf
clc
jo
sar
scas
mov
jl
adc
sub
mov
inc
push
ja
lock
mov
addr16
dec
cmp
add
jo
das
cs
loope
dec
jnp
pop
or
add
adc
or
and
iret
popa
(bad)
xor
sub
mov
mov
xlat
int
arpl
sbb
sbb
nop
in
xchg
xchg
mov
sti
push
cmp
out
fsubr
or
jb
push
mov
cmp
push
mov
sub
mov
sub
pop
retf
adc
les
xchg
xchg
xor
pminsw
or
sbb
test
cdq
pop
dec
aaa
or
dec
lock
add
jnp
ja
cmp
jmp
cmp
push
lock
sub
adc
clc
cmps
mov
xchg
cmp
mov
int
pusha
sbb
rcr
ret
pop
pop
sub
imul
jp
pop
(bad)
push
mov
cmp
mov
add
pop
inc
push
push
in
inc
cmp
fisttp
(bad)
lods
mov
pop
adc
push
jbe
adc
je
mov
cmp
(bad)
retf
ja
imul
xor
rcr
cmp
leave
je
pop
mov
sbb
lock
ins
ins
mov
push
sbb
jecxz
in
fs
shl
push
sub
jne
mov
or
push
dec
sub
adc
push
push
push
jp
or
or
pop
cmp
sbb
not
enter
dec
dec
mul
ss
cmp
mov
ja
loope
rcr
push
cmps
and
mov
xor
push
mov
jmp
in
or
push
test
out
outs
xor
mov
lock
mov
mov
xor
add
mov
lds
cld
aas
les
pop
mov
mov
pop
repnz
adc
ins
push
test
test
jae
pop
leave
imul
dec
push
cmps
cmc
out
imul
inc
xor
mov
out
pop
cmp
pusha
or
pop
cmp
and
jl
xor
xchg
add
jns
or
add
mov
aad
inc
sub
ds
sub
mov
ins
or
inc
mov
pop
scas
(bad)
(bad)
arpl
daa
or
mov
gs
dec
rol
jb
cmp
mov
mov
shr
lea
je
loop
xchg
addr16
add
sub
inc
aam
mov
cmp
inc
mov
xchg
push
pop
pop
add
dec
test
bound
ins
lods
jg
movs
mov
dec
inc
dec
dec
dec
inc
xor
icebp
mov
inc
js
test
dec
jmp
jmp
pop
push
outs
call
sub
sub
inc
sbb
sbb
mov
js
adc
jg
cmp
xchg
enter
jmp
enter
mov
push
push
push
push
lock
sub
mov
and
out
add
invd
xor
jge
jns
add
js
inc
dec
call
cmc
inc
inc
xor
lods
inc
adc
cwde
mov
ja
call
mov
jecxz
sbb
jmp
push
inc
push
pop
sub
dec
add
int3
pop
and
mov
add
add
add
cmp
clc
imul
inc
sub
je
es
and
rcl
xchg
test
add
adc
and
fsubr
adc
cmc
mov
(bad)
lods
rol
mov
push
mov
in
push
fs
jo
or
aaa
mov
jbe
and
sbb
fst
xor
sbb
sar
mov
(bad)
mov
mov
imul
adc
add
push
fs
mov
mov
push
push
rol
imul
add
xchg
xor
scas
adc
jmp
push
push
push
cdq
pop
lods
and
int3
stc
inc
xor
out
js
lods
dec
mov
or
push
adc
clc
adc
es
fcom
sub
mov
sbb
fsubr
scas
clc
lock
and
cs
jle
ret
adc
mov
xchg
xor
sbb
pusha
add
dec
jle
jo
and
and
movs
ss
lods
dec
std
leave
push
aaa
sub
jp
adc
pop
rcl
iret
addr16
aad
(bad)
inc
xchg
call
add
adc
add
sbb
mov
adc
adc
lock
rol
mov
xchg
push
adc
push
(bad)
mov
inc
mov
add
xchg
and
dec
mov
pop
mov
movs
mov
mov
xchg
mov
nop
scas
mov
push
and
sbb
ret
adc
ins
cwde
fmul
(bad)
xchg
cld
push
inc
(bad)
xor
sahf
outs
sar
daa
mov
aaa
adc
js
xor
and
loope
mov
into
sbb
(bad)
cwde
and
or
sahf
mov
mov
inc
mov
je
and
xchg
or
je
mov
stc
push
jmp
test
loop
movs
inc
cs
bound
or
and
cmps
mov
fiadd
xchg
pushf
jl
ins
sub
xor
jbe
mov
aaa
daa
(bad)
and
adc
and
imul
in
dec
cmp
or
inc
pop
test
adc
das
dec
fcomp
clc
fwait
clc
loopne
xchg
not
or
mov
and
test
mov
pop
jne
ins
sub
xor
jg
fwait
cmp
fbstp
das
add
push
adc
or
sbb
ss
test
cmp
lea
ins
jae
rcr
addr16
pop
mov
shl
cmp
arpl
repnz
gs
xor
call
and
push
sub
rcr
loopne
pusha
and
mov
inc
adc
sbb
outs
inc
sub
dec
cld
mov
ror
mov
shr
jo
inc
or
mov
jle
pop
jl
cld
xchg
cmp
push
daa
cmp
lea
call
fcom
inc
popa
pop
sub
xor
cmp
(bad)
hlt
dec
adc
aas
aaa
mov
jg
add
and
add
add
pop
push
inc
fwait
in
test
pop
daa
dec
pop
xlat
pop
outs
test
mov
dec
sti
ins
mov
call
mov
pop
sub
push
loopne
inc
sub
je
test
dec
add
cmps
jg
(bad)
out
cmp
pop
loopne
pop
jp
bnd
fidivr
pushf
mov
xor
and
cmps
add
mov
enter
add
xchg
pop
cmp
jbe
sahf
add
dec
fadd
aam
aaa
xor
push
add
repnz
adc
retf
and
ror
sub
into
shl
jecxz
mov
sbb
cmp
dec
pop
xor
jno
cmp
lahf
or
arpl
lock
imul
cmp
xchg
dec
or
jl
scas
sub
out
xchg
fsubrp
xchg
cmp
call
repz
ins
nop
push
ins
and
les
neg
push
fnstenv
xchg
xchg
outs
pop
enter
sub
mov
cmp
adc
and
icebp
add
adc
push
or
push
cmp
xor
fst
jnp
push
add
in
cmp
xor
shl
rcr
lock
cmp
jmp
adc
adc
add
sub
push
and
mov
jecxz
push
fwait
movs
and
aaa
in
sbb
mov
dec
or
pop
ins
push
rcl
adc
imul
cmp
and
sub
and
in
add
mov
jne
and
popa
or
loopne
(bad)
pop
add
mov
stc
or
jae
xor
cmp
fwait
jmp
lock
add
add
adc
xor
and
inc
test
or
into
and
add
dec
lock
xor
sub
jae
sbb
xor
sbb
movs
in
add
push
inc
mul
cdq
out
or
fcomp
aam
push
ds
sti
icebp
push
push
mov
cmp
cmp
pop
test
jne
(bad)
retf
fnstenv
pop
pop
sub
mov
jmp
arpl
(bad)
fst
sub
mov
adc
dec
mov
aam
jmp
lods
xchg
jg
jmp
cmps
adc
cmp
adc
fisub
dec
mov
xor
movs
sub
push
and
imul
out
and
inc
nop
dec
and
iret
fadd
or
inc
inc
sbb
xlat
or
adc
je
mov
inc
hlt
gs
pop
and
cmp
sub
pop
sbb
iret
mov
adc
movs
ret
jge
test
movs
inc
call
or
add
add
into
pop
pop
adc
adc
add
mov
adc
jmp
or
cmp
dec
sub
push
icebp
cmp
add
push
pop
push
das
and
(bad)
push
inc
pop
inc
add
adc
cwde
ret
cmp
arpl
push
jne
pop
setb
sbb
pusha
dec
dec
dec
shl
mov
mov
inc
ja
cmp
je
add
sbb
push
jge
lahf
pop
xchg
pop
jmp
xchg
scas
cmc
sbb
xchg
add
movs
pcmpeqb
or
and
mov
repz
ss
popa
repnz
mov
add
mov
div
xor
retf
mov
sub
aam
xchg
or
pop
nop
push
add
test
jno
jne
pop
rol
push
and
pop
or
enter
inc
push
mov
and
and
imul
sar
add
clc
push
cmp
sbb
test
pusha
add
neg
sub
inc
repz
je
jmp
(bad)
pop
mov
out
or
push
xor
adc
pop
cmp
add
push
jl
mov
mov
jne
jns
jmp
popa
inc
vaddsd
pop
or
out
inc
push
inc
js
pop
(bad)
in
jp
inc
sbb
inc
xor
mov
add
sar
push
push
inc
xor
jnp
je
cmc
test
xchg
or
push
mov
add
or
inc
dec
pop
adc
mov
mov
test
fsubr
scas
shr
jl
cmp
mov
lods
loopne
xchg
sub
dec
cmp
iret
or
inc
pop
cmp
adc
add
sbb
jmp
sbb
daa
or
rol
xchg
pop
popf
pusha
mov
inc
pushf
das
js
rcl
add
push
shr
or
cmp
xor
add
mov
sub
(bad)
jo
pop
xchg
adc
test
xor
movs
int3
sar
pop
dec
sbb
(bad)
call
aas
xlat
jne
mov
mov
push
je
in
idiv
lock
and
mov
cmc
mov
jo
jmp
cvttps2pi
push
cmp
push
xchg
pushf
pop
(bad)
inc
call
aad
push
adc
pop
fdiv
scas
adc
push
add
mov
pop
and
xor
test
dec
mov
xchg
rol
cld
rcl
adc
retf
pop
add
inc
cmps
adc
cmp
fwait
addr16
mov
shl
cmp
push
mov
sbb
stos
adc
(bad)
mov
jmp
lods
inc
xor
add
xchg
add
aad
mov
xchg
outs
sub
mov
push
push
xchg
lds
pusha
push
xor
jmp
sahf
(bad)
pop
mov
inc
xor
and
out
std
add
inc
inc
daa
mov
jae
loopne
inc
les
pop
cmp
push
push
nop
rol
dec
and
sub
and
push
sar
pop
lods
hlt
cmp
xor
and
cli
or
add
jmp
inc
inc
loopne
jnp
cmp
lock
xor
add
dec
push
imul
fidiv
call
inc
adc
and
sbb
cmp
ins
imul
inc
cli
xchg
out
push
shr
sub
dec
rcl
sub
cmps
test
mov
fild
rcr
outs
je
bound
xor
loopne
jp
push
icebp
dec
in
out
fs
adc
pushf
imul
push
in
pop
add
mov
or
cmp
and
sbb
imul
lahf
xor
xor
bound
xor
clc
clc
push
dec
sub
ret
mov
sbb
xchg
adc
xor
adc
jmp
inc
test
xchg
adc
pop
push
lea
push
scas
jns
add
test
jno
pop
(bad)
pop
adc
cmp
imul
push
clc
adc
icebp
and
cs
xchg
sbb
ret
pop
imul
jecxz
aad
xchg
mov
adc
dec
or
js
call
dec
adc
sbb
mov
call
mov
cmp
adc
mov
xlat
pop
inc
add
cmp
adc
inc
and
xchg
push
sbb
movs
bound
repnz
dec
mov
mov
pusha
cmp
lahf
sbb
cmp
addr16
jnp
xor
dec
push
add
(bad)
pop
push
movzx
push
push
pop
popa
mov
test
test
(bad)
pop
sub
mov
lahf
pop
and
repnz
out
je
je
mov
xchg
add
lock
mov
lods
data16
sub
jbe
jns
sbb
mov
sbb
stos
xor
enter
add
dec
dec
loope
xchg
adc
test
add
femms
ret
add
or
and
mov
add
daa
sub
imul
push
inc
ins
cmp
dec
les
pop
sub
push
sub
adc
nop
adc
mov
retf
aam
mov
js
shr
retf
or
and
dec
cli
rcr
xchg
clc
cli
add
adc
dec
sub
mov
xchg
retf
cmp
sbb
aam
dec
push
(bad)
pop
sub
sub
in
mov
test
in
into
and
xor
pop
adc
loope
add
cmp
je
mov
sub
test
rcl
cmp
adc
sbb
mov
mov
fcomip
lds
jo
pop
dec
inc
mov
pushf
jno
dec
xchg
add
movs
add
int3
mov
hlt
jl
ds
push
sub
lahf
data16
sub
and
inc
cmp
ficom
call
sbb
imul
lock
push
adc
pop
cmp
pop
icebp
aam
push
pusha
and
mov
adc
xchg
xor
lock
xchg
jae
dec
addr16
add
cld
fiadd
jo
dec
sbb
dec
cmps
inc
jmp
jae
and
fidivr
ss
cli
lods
sub
(bad)
repnz
pop
xchg
cmps
push
jbe
inc
push
loop
xor
fsub
adc
clc
jmp
push
mov
sbb
or
sbb
add
dec
xlat
add
test
repnz
jno
sbb
jno
inc
and
pusha
in
outs
call
pop
cmp
cmp
je
dec
sub
lsl
mov
mov
xchg
mov
ins
and
pop
sbb
ins
aaa
adc
and
sbb
push
fst
mov
push
adc
jg
fs
push
sbb
ja
or
aam
mov
xchg
(bad)
jg
popf
and
(bad)
pop
lods
push
and
push
mov
icebp
push
lahf
mov
mov
inc
cmp
cmp
cmps
dec
adc
or
fsubp
push
data16
sub
sub
lahf
aam
jmp
outs
or
movsx
adc
push
mov
or
and
adc
pop
js
popf
fisub
pop
(bad)
mov
or
add
or
pop
js
or
aam
in
xchg
pop
inc
jmp
inc
mov
sbb
in
cmp
sbb
sbb
ja
(bad)
cmp
pop
lea
stc
call
imul
sbb
cli
jecxz
add
aaa
bound
mov
push
and
fadd
adc
inc
inc
dec
and
mov
mov
mov
inc
adc
iret
fcmovnbe
add
addr16
push
push
jo
or
scas
inc
or
dec
cmp
jnp
out
neg
stos
jne
daa
fs
wrmsr
out
inc
pop
mov
outs
cs
and
fadd
popa
xchg
push
sub
sbb
dec
lods
lea
nop
push
(bad)
dec
push
pop
jmp
lea
popf
push
out
add
xor
add
mov
movs
clc
xchg
fild
scas
mov
mov
xlat
sbb
mov
push
xchg
sub
sbb
fsub
or
add
or
popf
add
xchg
dec
jl
stos
pop
rcr
dec
icebp
jne
sbb
add
jne
lahf
mov
pop
mov
lock
jne
ret
outs
lods
shr
push
xor
loop
jg
mov
cli
add
ins
jnp
add
cs
mov
sub
mov
xlat
ror
add
xchg
inc
enter
adc
rol
pop
sub
retf
adc
dec
cmps
adc
les
add
sub
dec
mov
scas
ret
aas
daa
jmp
sub
xchg
daa
jbe
dec
sbb
test
mov
dec
les
out
mov
xor
aaa
mov
push
push
icebp
mov
je
cmp
outs
sbb
cld
lods
mov
push
sub
or
sbb
cwde
das
out
mov
ja
clc
movs
jbe
xor
retf
xlat
ins
and
ror
call
pop
out
and
adc
scas
add
scas
or
mov
inc
cmp
inc
pop
sbb
aaa
jo
adc
cdq
je
and
mov
movs
jmp
inc
cld
ins
add
pop
adc
push
sar
mov
adc
mov
jmp
push
fdivp
add
add
stos
add
xor
or
retf
ja
lods
and
jne
fld
inc
or
mov
enter
push
sub
call
pop
mov
xor
dec
sbb
sub
fs
retf
add
daa
ret
sub
sub
xlat
sti
lea
aas
jmp
cs
push
cmp
test
sbb
es
in
dec
jp
pop
xchg
pop
les
inc
inc
or
mov
or
lods
stos
loope
ret
xchg
aam
js
scas
mov
out
sti
dec
das
test
ret
xchg
jl
lea
add
pushf
out
sub
jmp
push
je
push
pushf
mov
ja
pop
dec
call
add
xor
push
mov
mov
pop
lods
pop
or
or
mov
push
jl
mov
pop
push
or
mov
mov
cwde
ror
mov
neg
xchg
sar
or
xor
js
pop
aam
add
je
in
das
adc
push
sub
movs
addr16
int3
ret
ins
add
xor
les
or
mov
inc
push
ds
hlt
nop
pop
xchg
add
sub
cmps
pusha
js
sbb
out
inc
fsub
adc
fmul
jo
push
shr
imul
xchg
xchg
in
cmp
push
xchg
mov
fs
or
sar
dec
mov
int3
push
aam
sbb
inc
repz
sbb
adc
jp
inc
mov
xor
pusha
add
jmp
jbe
cmp
fisubr
push
div
pop
fldcw
cwde
lock
push
add
cmp
inc
cmc
ror
les
imul
scas
aaa
call
cmp
sbb
nop
jb
add
and
in
mov
das
add
lea
or
adc
out
ins
ficom
mov
pop
cmps
push
xor
adc
xor
mov
ja
sahf
push
test
mov
adc
and
dec
test
es
pop
inc
stc
aam
xor
mov
or
inc
mov
push
ret
dec
retf
cld
clc
fcom
cmps
inc
sbb
adc
xrelease
cmps
push
mov
push
call
mov
dec
les
cmp
je
test
inc
fwait
shl
lds
mov
xchg
and
das
cld
cmps
sbb
int
in
jnp
inc
dec
sbb
cwde
adc
xchg
inc
xchg
push
sar
loopne
lods
(bad)
push
in
loopne
dec
in
clc
sbb
jge
push
xchg
pop
inc
test
repnz
or
inc
push
jae
jb
dec
push
je
add
add
pop
rol
jb
jnp
xchg
inc
push
mov
loop
dec
dec
push
add
pusha
xor
in
dec
dec
mov
mov
xor
jns
je
sbb
or
adc
pop
or
inc
sbb
mov
pop
je
push
pop
mov
add
or
adc
inc
add
and
or
cmps
dec
or
jno
(bad)
mov
pop
jle
pop
mov
ins
mov
adc
or
pop
adc
mov
bnd
adc
aam
outs
push
popa
xchg
aam
addr16
jns
shr
add
fsub
or
push
clc
sbb
or
das
sbb
invd
mov
mov
imul
stc
adc
sbb
shl
dec
loope
loopne
push
and
push
jmp
adc
push
sbb
(bad)
mov
inc
or
daa
pusha
data16
nop
fisttp
mov
ins
and
bound
cmps
outs
or
and
adc
call
mov
or
adc
and
adc
mov
retf
out
or
nop
mov
xlat
mov
mov
push
or
or
adc
adc
and
dec
mov
loope
invd
cmps
sbb
popa
jb
xchg
and
lahf
xor
call
je
jns
imul
adc
xchg
gs
sub
cmp
je
sbb
push
pusha
xor
pusha
das
push
mov
push
mov
pop
sti
outs
test
je
dec
(bad)
add
jmp
cmp
je
mov
rcr
sbb
inc
jne
mov
push
and
je
adc
fwait
dec
and
sbb
nop/reserved
add
ret
cmp
inc
rcl
or
stos
jle
inc
call
adc
push
sbb
test
or
punpckhbw
push
adc
pop
push
mov
out
pusha
jbe
adc
xchg
test
int
sahf
inc
mov
inc
and
jp
bound
mov
push
xor
idiv
xor
add
pop
scas
movs
mov
add
or
test
movs
test
inc
clc
movs
cmc
mov
ror
or
add
add
dec
and
rcr
call
cmp
retf
push
inc
push
push
ja
test
push
hlt
xchg
movs
mov
test
(bad)
scas
xchg
mov
jl
frstor
fldcw
nop
jg
(bad)
mov
push
adc
sbb
aaa
pop
xor
and
rol
xchg
and
cmp
ret
inc
rol
mov
daa
sub
mov
movs
icebp
inc
out
adc
inc
pusha
adc
scas
sub
and
sbb
and
xor
(bad)
daa
push
sbb
cmc
repnz
mov
add
loopne
les
push
push
inc
or
dec
pop
and
push
cmps
inc
dec
fxch
and
jl
cmp
or
xor
jge
adc
and
adc
inc
cmp
pop
push
mov
xchg
call
fs
cs
jne
dec
test
dec
out
sub
cld
mov
retf
xor
test
add
punpcklwd
nop
ret
(bad)
call
xchg
push
and
pop
fwait
je
shl
xor
sub
inc
ss
and
fisttp
inc
sub
loope
push
push
lock
xchg
or
icebp
adc
jmp
(bad)
(bad)
push
push
lods
xor
mov
sbb
out
je
jnp
popa
retf
push
mov
xor
mov
and
and
sub
adc
xor
adc
and
sar
sar
ins
popf
jmp
sbb
pusha
out
addr16
pop
adc
or
mov
and
shr
jo
vmovlps
ins
push
mov
into
push
js
xor
pop
and
fild
ror
cmp
call
sbb
bound
gs
aaa
sub
lahf
jo
loope
aad
adc
sub
cmp
xlat
or
add
xor
add
mov
inc
hlt
shl
mov
lock
mov
or
jl
hlt
mov
push
cmp
mov
arpl
inc
push
jb
push
cmp
add
jmp
push
and
push
ins
jg
(bad)
pop
les
and
iret
sbb
cmc
xchg
xchg
jl
and
push
jbe
retf
push
push
int
std
mov
and
rcr
out
xchg
mov
and
nop
jmp
cmp
adc
out
ret
outs
cwde
jg
dec
es
ins
dec
pop
sbb
imul
mov
mov
rol
sbb
rcl
ss
mov
loope
jmp
push
movs
shl
jb
aas
cdq
lods
mov
cmp
fdiv
push
xor
adc
xor
pop
and
inc
mov
add
in
push
cmp
pop
or
push
add
fld
aaa
inc
cmp
call
mov
adc
sub
xchg
jne
movs
inc
adc
sub
push
in
push
xchg
mov
mov
xlat
inc
inc
pop
loop
adc
int3
jnp
inc
or
ins
push
fwait
adc
ins
cs
cdq
xchg
mov
cld
cmp
scas
inc
and
inc
dec
push
and
mov
adc
movs
mov
pop
adc
shl
xor
fild
mov
or
pop
gs
mov
mov
cmp
aad
and
icebp
movs
xor
outs
xchg
push
test
dec
pop
in
outs
add
jmp
je
jne
hlt
cmp
jns
jne
jl
sub
out
mov
cmp
pop
push
in
lock
and
push
cli
sbb
pusha
mov
int3
fbstp
int3
push
cmovnp
(bad)
jg
jno
shl
mov
int
push
and
xchg
xchg
call
imul
add
stc
inc
mov
pop
and
hlt
jmp
bswap
jl
js
pop
add
enter
pushf
aam
mov
xor
iret
push
jne
lock
daa
push
pop
jbe
add
imul
inc
mov
or
inc
lods
jns
mov
inc
add
inc
inc
retf
sbb
push
popa
dec
jne
stos
inc
je
aaa
jmp
popf
daa
or
gs
dec
and
ins
pushf
or
mov
lods
adc
sub
pop
and
xor
mov
add
and
imul
or
dec
es
cmp
adc
jl
pop
sub
xor
(bad)
push
push
cmp
je
mov
add
sbb
cmp
retf
pop
movs
mov
adc
call
or
loop
and
sbb
ins
mov
ds
mov
push
sbb
jmp
xchg
bound
xor
(bad)
cs
xor
arpl
(bad)
daa
mov
inc
aaa
add
aaa
sbb
xchg
shr
dec
dec
stc
shl
mov
addr16
mov
mov
call
fcmovnb
mov
icebp
add
lea
test
sbb
mov
into
xchg
int3
rcl
mov
add
xor
cmp
mov
ins
dec
movs
stos
dec
hlt
mov
hlt
mov
pop
clc
stos
inc
loope
ds
dec
or
or
outs
xchg
inc
mov
rcr
xchg
pop
inc
mov
adc
movs
fidivr
xchg
adc
sbb
xchg
movs
jo
and
ss
cmp
dec
iret
int
dec
add
xchg
inc
xchg
inc
ror
ja
nop
sbb
shr
jmp
mov
jae
inc
cmp
aas
in
add
sbb
ss
in
xchg
inc
inc
cmps
call
iret
data16
mov
xor
push
pop
shl
adc
dec
dec
ins
adc
push
in
cmp
inc
xchg
retf
in
mov
mov
fimul
or
xor
data16
fcom
jo
adc
xor
push
mov
shl
adc
movs
add
pusha
inc
imul
(bad)
adc
je
inc
aas
jb
pop
ficom
hlt
sub
ret
mov
dec
js
sub
in
jae
add
inc
sub
sbb
add
(bad)
(bad)
cmp
popf
xchg
xchg
push
shl
fadd
inc
loopne
mov
in
xlat
xchg
pop
scas
mov
enter
fsubr
and
mov
rol
add
push
call
dec
ja
leave
pop
lea
jb
xchg
inc
test
jns
daa
cmp
imul
fistp
add
out
jo
ret
push
xchg
dec
jne
or
int3
xchg
xchg
fcom
test
cmp
daa
mov
or
xchg
stos
push
pop
sbb
dec
or
in
je
inc
xor
pop
xchg
scas
or
or
in
and
pusha
clc
cmp
ins
mov
setne
fcomip
xlat
adc
cli
aam
mov
int
fiadd
sbb
clc
xchg
sbb
and
cmc
push
inc
adc
mov
xchg
test
xchg
mov
pop
cmp
dec
jl
dec
data16
inc
popf
add
fcom
add
nop
mov
push
adc
mov
ja
daa
shl
pinsrw
mov
and
xor
js
adc
mov
aaa
xrelease
cld
push
cs
push
les
sub
add
push
jecxz
jae
mov
jl
lods
dec
lods
popf
call
fs
jne
mov
push
adc
jo
jecxz
or
add
js
pop
cmps
push
cwde
inc
pop
out
xchg
lock
cli
jle
dec
dec
je
inc
dec
add
call
add
fs
add
or
call
push
rcr
push
add
sub
loopne
inc
push
lahf
inc
or
inc
movs
mov
cs
add
(bad)
out
sahf
out
popf
pop
and
dec
push
xor
ficom
add
dec
adc
shl
push
out
gs
and
add
out
mov
sar
xchg
sub
dec
or
jnp
inc
jle
dec
and
cs
pusha
add
pop
add
xchg
push
scas
fwait
mov
push
mov
and
adc
add
pop
movs
inc
push
repz
mov
cmp
inc
es
adc
lods
rol
xchg
pusha
dec
ret
adc
or
mov
mov
test
nop
xor
enter
lock
sbb
xlat
out
nop
fadd
sub
xchg
xlat
jo
push
popf
test
in
adc
imul
fdivr
and
clc
movs
inc
jbe
shr
push
add
stc
mov
add
out
mov
loopne
push
or
loope
inc
bound
in
pop
add
push
mov
lea
repz
cs
add
adc
sub
repz
cmp
fs
mov
mov
int3
rcl
repz
repz
loopne
call
in
lock
or
xor
xchg
repnz
xchg
lock
sub
or
adc
sahf
and
pop
loopne
scas
add
or
test
xor
adc
sbb
mov
test
inc
ins
stc
push
ins
sahf
xor
and
(bad)
adc
dec
jle
cld
pop
mov
pop
mov
mov
and
outs
push
pop
or
in
out
lea
pop
and
imul
dec
cmps
pop
sbb
mov
sar
mov
in
xchg
(bad)
(bad)
movs
cmp
popa
jnp
mov
sbb
xor
sub
and
stc
mov
movs
adc
or
mov
lock
sub
aas
push
adc
and
sbb
adc
add
xor
ds
inc
inc
sub
jae
mov
mov
sub
sbb
dec
(bad)
ja
mov
lods
mov
pop
add
dec
inc
mov
pop
cdq
nop
mov
mov
cmps
sbb
pop
into
or
add
call
xor
lea
sub
pop
aad
loope
(bad)
shl
xlat
leave
add
push
xchg
jmp
nop
dec
and
xchg
aaa
enter
lock
mov
sub
test
cmp
jmp
push
rol
pop
sbb
nop
cdq
arpl
inc
dec
pop
mov
and
sbb
fsub
xchg
sub
ret
(bad)
nop
mov
inc
out
jo
mov
push
data16
scas
mov
push
pop
and
xlat
call
movs
and
xchg
inc
in
and
push
in
push
sub
es
mov
xchg
data16
xor
dec
loop
jbe
sbb
sbb
adc
adc
test
test
sbb
add
pop
and
pushf
inc
mov
or
adc
push
in
scas
pop
inc
lods
mov
fild
nop
mov
mov
mov
inc
inc
xchg
cmp
dec
call
fwait
aas
inc
cmp
fidivr
add
es
je
fcom
in
cmp
inc
je
mov
cdq
and
aas
hlt
adc
call
sub
imul
sbb
adc
push
xchg
dec
inc
mov
mov
jmp
add
xchg
mov
and
cmp
push
(bad)
and
lock
sub
aaa
xchg
stos
add
xchg
dec
sbb
add
lods
jno
add
fcomp
inc
pop
das
mov
add
mov
in
adc
jp
adc
jo
enter
lods
(bad)
ss
test
cmp
lods
div
scas
jne
inc
add
nop
adc
imul
mov
or
cmp
mov
cmp
cdq
(bad)
push
push
push
aaa
imul
adc
push
sbb
push
xor
inc
dec
outs
mov
in
aad
dec
hlt
rcr
inc
sbb
aas
adc
cwde
hlt
xor
fiadd
sbb
or
dec
or
xor
out
or
cmp
pop
jo
mov
sub
leave
add
aas
adc
adc
push
cmps
fiadd
or
xor
std
shl
inc
clc
movs
inc
retf
or
mov
pop
mov
adc
or
mul
loopne
lds
ret
rcl
or
and
mov
adc
push
xchg
push
shr
push
arpl
sbb
pop
xchg
adc
mov
and
adc
sub
cmps
mov
mov
add
inc
lds
mov
dec
push
or
gs
push
mov
mov
xor
leave
pusha
lock
js
mov
sbb
daa
icebp
dec
pusha
sbb
cmps
sbb
lea
pop
rol
jl
mov
push
pusha
outs
pop
inc
jne
sbb
sbb
mov
movs
mov
push
rcr
xor
ret
lock
mov
and
les
jge
test
xchg
push
or
mov
or
or
aam
sti
add
(bad)
xor
adc
jno
mov
xchg
dec
pop
dec
in
cmps
add
inc
push
push
jo
cmp
xor
push
dec
sub
mov
imul
lods
dec
mov
sbb
cmc
jge
push
pop
or
nop
xchg
jb
dec
dec
pop
out
nop
add
mov
pop
push
sbb
or
or
push
movs
rcl
fadd
jo
xchg
sub
enter
movs
shl
nop
rcr
adc
lods
enter
outs
xchg
add
push
xor
repnz
bound
lods
sbb
ret
rcr
lods
cli
int3
nop
xchg
mov
add
les
jae
jb
or
cmp
add
push
or
pop
xor
(bad)
add
sub
popa
push
add
fcomp
or
or
out
sub
popa
ins
je
xchg
dec
cs
adc
add
shr
leave
(bad)
fmul
or
das
call
popf
push
push
cmps
in
fcom
ins
mov
push
xor
xchg
fdiv
ror
out
fiadd
pop
ror
(bad)
adc
pop
and
mov
or
scas
loopne
xor
lods
inc
nop
jl
adc
inc
ins
fistp
cwde
xor
fwait
dec
es
push
push
dec
mov
loopne
gs
xlat
pusha
ror
push
or
xchg
jl
add
into
inc
scas
add
xor
ds
xchg
inc
dec
enter
mov
fild
push
jg
pop
repnz
xchg
mov
clc
add
xchg
push
adc
js
dec
call
js
ins
xor
frstor
fadd
or
inc
push
mov
sahf
shl
lock
jnp
sub
sub
loop
pusha
(bad)
leave
dec
sub
enter
(bad)
mov
adc
dec
and
sub
add
push
cmp
inc
fs
mov
sbb
cmp
sub
das
cmps
outs
push
add
mov
cs
pop
mov
add
or
add
ret
das
fdiv
loopne
call
push
mov
add
dec
in
aaa
add
inc
out
cmc
inc
mov
cmc
inc
mov
cmp
xchg
psubw
test
cld
hlt
inc
pop
out
jns
jnp
ror
jl
dec
cwde
js
mov
mov
sub
ds
data16
mov
pushf
outs
push
pop
or
adc
sub
mov
pop
push
into
sbb
add
mov
mov
in
inc
jno
bound
mov
cmp
jle
clc
cmp
add
cmp
ins
popa
xchg
dec
mov
adc
lods
rol
ss
and
lock
fdiv
mov
test
aam
or
loopne
fs
pop
or
and
mov
mov
cs
out
and
in
or
xchg
ss
pop
mov
or
fcom
xor
add
xchg
push
pextrw
cvtdq2ps
in
xor
push
imul
push
nop
push
ja
xchg
jbe
push
js
or
push
sahf
arpl
cmc
add
or
pop
or
mov
pop
rcr
cli
in
fimul
aam
add
push
movs
xchg
movs
adc
pop
repnz
popa
dec
xchg
push
pop
push
and
(bad)
jno
add
icebp
inc
out
out
dec
jae
test
adc
dec
(bad)
scas
imul
pop
xor
xchg
retf
push
xor
jne
cmp
add
or
inc
or
jmp
or
jb
out
lea
add
dec
cs
in
outs
adc
add
js
jl
outs
jbe
mov
lock
cmp
daa
in
mov
mov
mov
inc
sahf
add
fadd
fst
mov
ja
fisubr
dec
push
lods
cs
xchg
(bad)
cmps
xchg
fadd
and
xchg
mov
or
ins
fld
in
out
push
cmp
sub
add
cmp
jnp
je
add
cmp
sbb
dec
or
xor
inc
mov
nop
cmp
inc
mov
es
inc
push
je
shr
(bad)
pop
out
pop
and
mov
es
mov
in
cmp
add
add
das
jo
add
xor
(bad)
push
ret
add
call
stos
lods
cmp
pop
jg
xor
fwait
add
or
(bad)
call
out
setle
add
or
push
pop
sahf
pop
mov
mov
nop
or
pop
pop
fsub
gs
and
or
xor
and
pop
inc
outs
add
or
dec
gs
add
mov
ins
inc
out
pop
mov
push
int3
push
push
xor
ret
mov
and
ret
sub
ja
push
push
mov
fwait
push
pop
xor
mov
sbb
jecxz
(bad)
test
sbb
iret
push
sbb
mov
pop
push
out
adc
cmovs
mov
ja
mov
mov
sbb
mov
xchg
pusha
je
shl
(bad)
sub
outs
arpl
push
enter
mov
inc
cmp
iret
push
iret
mov
stos
mov
cmps
cmp
xor
mov
pop
mov
pop
call
lock
mov
mov
call
jmp
popf
jne
int3
fnstenv
xchg
jmp
leave
or
adc
dec
xchg
movs
fld
adc
or
add
or
dec
xchg
scas
push
cmps
add
and
pushf
xchg
test
add
add
mov
sbb
imul
das
add
push
add
cmp
and
add
pop
xchg
test
(bad)
jl
pop
push
pusha
or
mov
mov
out
cmp
js
lods
pusha
xor
pop
xor
sbb
rcl
cmp
sub
or
mov
mov
inc
lods
pop
sbb
mov
xchg
movlhps
retf
push
jo
mov
lea
gs
jp
sbb
mov
pop
push
aaa
sbb
mov
lods
rcl
mov
pop
push
loopne
hlt
cmp
nop
(bad)
stos
rol
clc
push
inc
hlt
not
das
push
cld
inc
dec
push
and
sti
inc
add
inc
mov
imul
sbb
sbb
call
xchg
pop
xchg
add
add
nop
inc
test
sbb
sub
or
adc
test
inc
sub
sub
das
push
add
add
add
add
inc
mov
add
pop
add
or
lea
xor
mov
sub
push
mov
mov
mov
mov
mov
fidivr
sub
ins
add
test
jmp
(bad)
jmp
jmp
jmp
xchg
jmp
jg
jmp
jmp
jmp
dec
fdivrp
(bad)
fdivr
(bad)
push
(bad)
(bad)
fcos
fcom
call
call
call
call
call
mov
inc
push
out
iret
mov
mov
into
repz
dec
mov
idiv
inc
push
and
and
cmp
push
pop
mov
adc
repz
dec
clc
jl
pushf
mov
mov
pushw
cmp
mov
ins
shr
xchg
push
test
or
pop
(bad)
jns
sub
sbb
xchg
lods
sub
iret
jnp
jle
cmp
or
out
ins
out
jne
bswap
add
and
imul
push
and
cwde
lahf
idiv
jbe
adc
int3
push
adc
xor
test
fdiv
int
imul
mov
push
mov
clc
xor
mov
add
push
or
or
js
xor
cs
push
aam
rol
sti
sbb
mov
sbb
push
sbb
hlt
js
lock
adc
adc
push
push
rol
(bad)
and
adc
add
call
scas
adc
dec
pop
add
jmp
adc
dec
(bad)
in
add
sbb
jbe
movs
add
push
fistp
mov
pop
mov
jb
add
pop
rcl
xchg
pop
add
mov
dec
daa
and
les
shl
adc
inc
and
or
test
add
cwde
dec
dec
call
sbb
sbb
xchg
mov
xchg
lds
and
add
add
inc
and
inc
xchg
and
xor
and
mov
ret
stos
dec
mov
cmp
in
jne
fadd
mov
sbb
(bad)
dec
push
mov
jns
sbb
dec
mov
mov
movs
push
(bad)
pop
rol
mov
push
pusha
lea
xchg
fadd
movs
xchg
sbb
inc
cmp
shl
push
inc
pop
sbb
test
cmp
adc
xchg
inc
pushf
js
and
and
pop
test
or
mov
dec
mov
or
mov
add
leave
out
push
pusha
(bad)
int3
pop
sahf
cmp
leave
xchg
test
adc
inc
xor
inc
pop
mov
inc
add
or
xor
inc
je
or
dec
jnp
mov
push
enter
cdq
adc
lea
sub
push
aad
test
add
or
pop
mov
add
add
jne
add
jmp
nop
jbe
jo
jp
adc
sbb
sub
push
inc
hlt
js
test
add
aaa
mov
call
or
or
loope
dec
adc
mov
mov
(bad)
jmp
push
or
and
mov
mov
mov
add
lock
clc
inc
mov
xor
cmp
mov
add
in
inc
inc
inc
inc
inc
inc
fdivr
inc
mov
test
mov
test
mov
mov
mov
mov
mov
mov
cmp
sub
shl
push
and
repz
mov
clc
sbb
ds
imul
push
int
imul
out
push
cld
int3
jbe
ja
fwait
int
jns
in
pusha
push
mov
dec
xchg
push
call
jns
jge
je
test
in
jns
data16
sbb
xor
jns
out
pop
mov
and
outs
jnp
out
push
pusha
loopne
jl
mov
imul
or
push
jo
js
es
pop
neg
jge
jg
push
loopne
hlt
pop
push
test
jno
jb
inc
xchg
aam
cmp
add
xor
xor
sahf
push
adc
mov
and
sti
out
sar
and
fisub
mov
jne
inc
dec
in
add
(bad)
jne
jge
mov
nop
js
test
ins
sub
imul
or
mov
mov
add
outs
cld
pop
add
lock
daa
mov
mov
int
int
dec
and
push
enter
inc
and
inc
mov
ret
movs
shl
ss
mov
pop
loopne
push
mov
cmps
adc
jg
into
xlat
dec
iret
jl
int
sbb
ss
pusha
jo
and
cmp
dec
fwait
sbb
popf
int
popf
mov
rol
pop
add
xchg
pop
add
cmp
mov
rcr
dec
iret
and
icebp
mov
idiv
mov
aas
sub
adc
sub
jl
and
dec
fiadd
fsubr
push
sub
popf
cmp
cmp
sub
or
enter
adc
or
sub
dec
adc
mov
pushf
mov
fdiv
inc
sar
iret
sub
iret
int
sar
fucomp
test
iret
push
sub
rcr
or
mov
push
xchg
mov
rcl
jl
push
xchg
and
shr
lods
push
call
pusha
mov
fldcw
rcr
shr
mov
jge
mov
push
lds
mov
icebp
es
in
mov
stos
mov
mov
test
stos
mov
xchg
aas
xor
lahf
les
push
and
add
hlt
adc
ret
mov
add
mov
xor
add
inc
xor
add
pop
test
fwait
imul
dec
xor
jbe
jmp
xchg
lods
push
test
mov
push
shrd
lods
lea
xchg
sub
add
push
lods
loope
inc
mov
lds
mov
push
test
mov
adc
mov
aam
sbb
lods
pop
mov
pop
xor
add
mov
je
stos
add
jne
adc
mov
xchg
ret
leave
(bad)
sub
jmp
lock
adc
jne
cmp
jge
test
adc
lea
jo
push
(bad)
inc
movs
dec
fisub
out
add
nop
push
out
inc
xchg
jb
daa
and
pop
and
int
sbb
dec
inc
gs
ins
or
inc
pop
nop
pop
dec
fwait
adc
daa
push
dec
leave
and
bound
push
inc
push
inc
in
lock
jo
daa
or
inc
ror
cmp
push
ror
xchg
daa
dec
push
jo
imul
pop
test
ficomp
push
mov
inc
cmp
lea
das
retf
lods
mov
test
mov
xor
out
jmp
outs
daa
push
push
mov
mov
neg
add
stos
pop
push
ja
movs
aad
and
inc
or
xchg
mov
mov
dec
shl
lea
je
mov
lea
bound
push
xchg
mov
outs
xchg
adc
add
inc
mov
cmovo
dec
xor
test
add
mov
cmp
daa
cmp
add
and
into
pop
adc
push
mov
daa
add
pop
dec
jo
outs
out
push
mov
or
sbb
les
movs
dec
clc
(bad)
sub
pop
or
jl
or
cld
xlat
inc
rcl
push
loopne
push
inc
sub
lahf
xlat
adc
push
and
retf
inc
pop
shr
xor
jne
(bad)
cwde
inc
sub
cmps
imul
ror
or
jno
leave
pop
popa
repnz
cmps
mov
lock
push
adc
mov
lock
(bad)
jbe
dec
pop
add
(bad)
and
mov
pusha
sub
pop
dec
pop
aas
add
fcom
pop
dec
add
inc
retf
push
cmp
push
sbb
push
inc
or
clc
add
mov
xor
or
sub
jo
xor
pop
jne
dec
dec
jne
pop
loopne
or
cmp
cmp
(bad)
adc
or
xchg
sbb
or
adc
mov
add
in
sbb
mov
sti
xchg
dec
shl
adc
xor
shl
sbb
sub
xor
shr
sub
xor
add
dec
xor
scas
adc
movs
push
push
fisub
or
in
and
and
cmp
adc
xchg
movs
shl
pusha
dec
lods
xchg
mov
addr16
popf
push
pop
mov
dec
das
fisubr
ret
sub
add
je
or
js
sub
shl
push
iret
je
arpl
retf
mov
push
dec
je
and
inc
movsx
loope
loop
or
repnz
mov
clc
or
fld
and
les
mov
outs
hlt
adc
cwde
jmp
mov
mov
xor
inc
xchg
fwait
(bad)
jge
jne
mov
adc
and
push
sbb
rcl
rol
adc
inc
add
pushf
add
xchg
mov
xchg
retf
pop
cmp
pop
mov
ss
ja
push
mov
push
repz
and
bswap
inc
or
xor
inc
mov
inc
stc
mov
sbb
cmp
push
pop
mov
cdq
inc
les
push
add
push
enter
loopne
adc
movs
nop
neg
fadd
fs
nop
dec
frstor
lahf
dec
dec
popa
push
(bad)
sub
inc
fisttp
adc
jmp
popf
imul
jle
and
dec
popf
add
hlt
sbb
jbe
and
pop
adc
xchg
push
hlt
mov
jmp
dec
adc
dec
sub
cmova
or
mov
call
dec
inc
enter
add
sbb
adc
inc
jge
mov
cmp
push
pusha
mov
fsubr
je
lea
dec
sar
adc
push
fs
(bad)
dec
dec
test
jb
(bad)
and
ret
inc
sbb
and
enter
mov
nop
shl
stos
es
or
(bad)
adc
push
stos
or
es
pop
xchg
sub
int
icebp
mov
adc
dec
or
adc
lock
pop
or
shl
es
jmp
sbb
inc
dec
fld
cmovae
push
out
push
add
daa
ficomp
out
inc
sbb
xchg
and
inc
dec
jecxz
and
mov
adc
cmp
jmp
(bad)
mov
or
enter
push
xchg
mov
shl
retf
retf
mov
cdq
movs
dec
inc
or
pop
nop
lea
dec
(bad)
mov
pop
mov
push
adc
(bad)
icebp
dec
jns
call
mov
push
retf
sbb
and
sub
and
pop
mov
je
sbb
jne
ja
add
scas
in
movs
test
cmp
sbb
inc
inc
pop
fst
movs
outs
inc
inc
add
push
retf
push
and
xchg
adc
dec
or
and
pushf
lods
dec
fild
enter
or
fidiv
sub
xor
add
or
add
mov
inc
sbb
adc
les
xchg
add
cmps
xor
dec
or
popa
and
nop
mov
je
fiadd
mov
xchg
add
sub
ret
pusha
frstor
in
inc
shl
pop
rcl
call
jle
sbb
cmp
cmp
pop
cli
and
sbb
sbb
xlat
jae
mov
add
shr
mov
shl
and
lock
jno
add
mov
cmp
or
je
aaa
bound
cmp
dec
fcmovbe
add
dec
add
ins
push
(bad)
xor
inc
ins
idiv
cmp
fcomp
inc
mov
fdivr
add
and
xchg
push
jge
je
and
dec
inc
and
imul
cmp
and
sbb
cwde
mov
call
ss
jg
aad
icebp
xor
shl
jl
inc
(bad)
and
sub
jne
and
adc
ret
mov
mov
pop
js
push
mov
jle
sbb
pop
dec
or
and
(bad)
xor
or
xor
dec
pop
mov
dec
clc
jo
add
push
movs
push
push
xchg
dec
iret
and
in
std
je
push
push
mov
jns
addr16
jo
jo
hlt
sub
mov
cdq
les
cmc
push
test
repnz
jne
mov
xor
shl
shr
(bad)
sub
dec
mov
jmp
loopne
xchg
hlt
call
rcl
jecxz
cmp
sub
or
pop
adc
cdq
adc
or
test
mov
pop
jne
pop
or
mov
dec
movs
sbb
dec
jg
sub
pop
dec
xor
std
and
jbe
mov
dec
sbb
out
fist
xchg
cmc
fsub
movs
add
in
std
xor
push
pop
ds
fimul
and
rol
adc
jecxz
cmp
cli
jmp
ins
mov
(bad)
sti
add
repz
or
jecxz
and
mov
sbb
sub
in
inc
pushf
jge
mov
in
daa
inc
add
ins
mov
test
or
mov
adc
fcomp
jmp
mov
movs
jnp
xchg
mov
arpl
xlat
mov
xor
call
mov
btr
xchg
push
sbb
add
cmp
shr
test
cdq
iret
sbb
add
mov
cmps
xor
sub
lahf
sbb
add
rol
xchg
push
(bad)
inc
pop
(bad)
lods
clc
xchg
mov
imul
int
jnp
repz
push
cs
sbb
sar
mov
mov
xchg
fimul
inc
(bad)
pusha
jmp
push
and
push
adc
test
(bad)
adc
sub
jne
sahf
nop
dec
ret
xor
push
jmp
(bad)
ds
fidivr
and
in
adc
xlat
xor
xchg
bound
leave
call
neg
adc
and
jmp
out
nop
or
jmp
movs
adc
stos
rcr
scas
js
and
mov
daa
pop
fcom
retf
mov
sub
sahf
xchg
pop
jnp
pop
cmp
(bad)
dec
les
sbb
add
repnz
add
xlat
aad
mov
and
xor
(bad)
stc
mov
xor
fs
mov
and
out
mov
xor
sbb
push
mov
add
xchg
adc
and
test
imul
ret
pop
aas
das
inc
xor
mov
push
sub
sahf
and
hlt
inc
sbb
mov
fild
dec
es
inc
pop
xchg
sub
cwde
fdivrp
fstp
fwait
jmp
inc
jb
and
push
fld
add
mov
and
jns
sub
imul
jnp
and
ins
pop
xor
push
rol
push
cmp
pusha
push
adc
fcomip
xchg
xor
jmp
pop
push
cmp
out
fcomp
popf
jmp
sub
mov
push
inc
or
(bad)
inc
push
mov
mov
adc
and
push
mov
jns
jns
sbb
or
sub
mov
ror
mov
mov
(bad)
clc
stos
sub
ficomp
and
daa
scas
iret
and
scas
in
sbb
dec
fldz
xchg
jecxz
xchg
fbld
mov
add
lock
jo
sbb
inc
sub
int
retf
mov
pop
loope
out
imul
mov
(bad)
retf
sbb
and
call
cs
cmps
and
lea
repz
in
fidivr
jo
push
push
sub
add
fdivr
inc
dec
pop
jno
push
leave
(bad)
xor
pop
sbb
mov
dec
cli
xor
push
ret
sub
sbb
arpl
fild
pop
and
adc
xchg
cs
jmp
mov
cmp
sbb
inc
bound
mov
inc
adc
sbb
out
fs
mov
mov
aaa
cmp
fild
daa
add
cmps
inc
(bad)
add
mov
or
das
inc
mov
inc
add
push
(bad)
outs
mov
mov
leave
sbb
push
inc
adc
inc
adc
loopne
push
push
and
pop
movs
lods
adc
out
push
out
or
jmp
and
adc
fisub
pop
add
lods
scas
stc
push
xchg
or
hlt
or
cmps
adc
in
clc
jne
mov
jne
arpl
pop
dec
mov
je
(bad)
mov
xchg
lea
mov
inc
jno
sub
adc
int3
add
push
cmp
push
iret
jmp
test
jmp
mov
fsubr
inc
or
and
ins
js
pop
sbb
loope
mov
xor
add
sub
or
xchg
pop
jecxz
sub
inc
push
adc
mov
dec
or
xchg
ret
mov
inc
popa
std
jbe
and
mov
mov
dec
inc
sbb
ror
cli
xchg
lods
je
mov
aad
mov
or
aam
cmp
call
mov
mov
in
inc
sbb
mov
add
retf
inc
je
dec
sahf
push
call
outs
daa
adc
mov
stc
(bad)
or
pusha
int
fld
mov
dec
mov
push
aam
jg
mov
lods
das
jae
add
and
mov
pushf
cmp
mov
retf
sbb
enter
xor
jno
push
push
dec
mov
js
add
call
inc
shl
add
arpl
or
or
ret
push
data16
push
or
(bad)
xchg
mov
or
imul
rcl
ds
dec
adc
xchg
out
in
jge
mov
aas
jnp
and
fbstp
add
or
ficomp
pusha
dec
inc
xchg
lods
nop
and
fchs
lahf
dec
xchg
xchg
add
xchg
dec
ja
sub
inc
loopne
push
mov
add
jns
or
imul
inc
jo
xor
push
adc
sub
mov
ja
jmp
jmp
sub
pusha
add
add
dec
push
adc
out
fmulp
pop
lea
aad
add
movs
mov
je
leave
jge
clc
adc
lock
pop
add
clts
push
dec
or
daa
jmp
inc
sbb
sbb
push
push
mov
pop
movs
pusha
xchg
cmp
mov
fs
or
loope
sbb
mov
pop
dec
fldcw
outs
adc
loopne
stos
push
fs
or
movs
pop
and
mov
mov
jmp
lock
and
push
adc
call
sub
enter
pop
add
jecxz
adc
pop
jmp
cmp
je
mov
out
ins
push
or
adc
adc
or
push
or
pop
xchg
retf
pop
je
movs
sti
adc
cmp
cmp
xchg
pop
je
cmp
or
fs
cmps
test
nop
nop
inc
call
xchg
repz
or
sbb
icebp
dec
jbe
mov
pushf
sub
je
(bad)
frstor
pop
jnp
jl
push
cmp
dec
aam
mov
pop
jmp
inc
shr
sub
xlat
test
rol
xchg
cwde
lods
add
mov
and
enter
sub
sbb
inc
mov
sub
mov
sbb
sub
sti
dec
dec
retf
push
mov
mov
call
sbb
jne
ins
add
sbb
pushf
fcmovnu
pop
cmp
adc
mov
aas
(bad)
ss
arpl
and
lea
ins
or
(bad)
sub
in
lods
popf
sbb
xchg
pushf
inc
mov
xor
dec
pusha
popf
pop
pop
and
adc
mov
dec
pusha
(bad)
pusha
or
xor
jo
rcr
jae
add
push
xlat
fisttp
div
inc
popa
add
inc
add
nop
lock
fild
cmp
shl
cwde
jp
cdq
sbb
inc
jo
xchg
cmps
retf
or
pop
bound
cwde
bound
js
xchg
add
xor
pop
add
add
and
inc
add
adc
mov
add
or
or
dec
push
verw
xchg
push
out
add
xchg
push
lock
mov
add
popa
mov
shl
or
sbb
sbb
xchg
sub
cmp
add
clc
xchg
jo
mov
jo
sbb
lods
out
std
faddp
les
pop
add
pop
aam
dec
jle
jmp
and
jo
repz
stos
add
dec
and
iret
add
adc
sbb
or
bound
inc
dec
fild
enter
push
das
mov
cwde
xor
cmp
xor
mov
imul
aas
adc
push
in
fld
inc
ins
push
sbb
pushf
mov
push
sub
add
imul
sbb
xchg
xchg
add
pop
push
jb
dec
gs
fcom
fild
sbb
push
push
in
dec
sbb
pusha
je
adc
push
push
std
dec
mov
lock
xor
push
adc
cmp
and
(bad)
cmp
mov
ins
and
xchg
stos
sub
sub
popa
xor
jbe
out
pop
popa
and
mov
mov
pop
adc
adc
mov
cmp
jne
adc
inc
jne
sub
dec
jne
mov
push
and
mov
xchg
jg
or
inc
outs
in
add
sbb
pop
scas
inc
lea
add
or
and
or
pop
jbe
xor
dec
enter
ins
dec
shr
or
inc
adc
adc
push
adc
xor
dec
add
sub
sub
mov
jno
sbb
cmps
mov
bound
or
(bad)
cmp
add
push
jo
cld
call
test
jge
xor
push
xchg
mov
push
dec
mov
jb
pop
add
or
not
je
or
jb
fistp
or
xor
cmp
add
cmp
add
jmp
mov
sti
add
cmp
sub
sub
adc
mov
mov
iret
movs
sub
dec
cmp
loop
xor
ret
sub
nop
jmp
mov
or
cmps
movs
add
out
and
push
or
cmp
adc
test
(bad)
std
retf
ret
jmp
xor
adc
jbe
add
push
inc
cmp
xor
jne
inc
mov
cmp
dec
inc
sbb
call
movs
call
lea
or
imul
aaa
leave
sar
add
push
adc
or
ror
sub
jnp
xchg
cmp
inc
adc
xor
or
sbb
(bad)
out
sbb
mov
inc
mov
sahf
inc
mov
je
and
dec
xor
inc
jp
inc
mov
mov
int
adc
call
imul
xlat
ja
adc
pop
add
inc
js
push
mov
sub
inc
clc
xchg
inc
add
inc
sub
mov
jne
pop
add
or
mov
adc
xchg
out
and
and
jne
dec
jg
call
adc
test
adc
ss
fsubrp
cmp
out
adc
mov
sahf
out
je
add
imul
cld
sub
daa
fadd
enter
sahf
pop
push
jmp
lea
fs
movs
lahf
out
adc
inc
sub
xlat
scas
mov
(bad)
cli
inc
or
jmp
addr16
inc
movs
sbb
add
stos
ins
pop
addr16
leave
arpl
or
and
dec
mov
add
xchg
or
sbb
and
call
mov
inc
inc
sbb
adc
test
or
aam
pop
inc
and
js
aam
test
xchg
cmp
rcl
cmp
cmp
push
xor
push
and
add
adc
pop
movs
adc
xchg
ficom
aam
in
add
ret
gs
gs
cmp
loope
jmp
aam
add
or
arpl
add
sbb
pusha
push
jmp
test
test
pop
xor
dec
aad
sbb
in
mov
or
ret
xlat
and
loop
push
or
into
xor
mov
pop
loop
mov
lea
fbstp
sbb
cmp
mov
push
cld
jbe
dec
add
add
fcomp
add
adc
and
and
xor
into
push
mov
imul
idiv
cmp
inc
jo
lock
scas
dec
in
add
aaa
movs
stos
xor
es
adc
fcomp
xchg
or
(bad)
(bad)
and
retf
aaa
pop
inc
add
and
ror
mov
pop
jne
push
add
lock
adc
add
test
fisttp
mov
cli
inc
inc
add
lahf
ret
sub
jg
je
imul
dec
sti
loopne
or
loop
cmp
enter
adc
(bad)
and
or
stos
adc
dec
cmp
scas
pop
mov
ss
pop
and
pop
adc
dec
dec
pusha
in
cli
and
jl
pop
mov
push
xchg
jo
or
in
or
xchg
add
cwde
add
sbb
and
cld
inc
xor
push
jae
test
fsub
lea
mov
leave
pop
adc
and
sar
jle
sti
sbb
and
icebp
add
mov
sbb
and
add
not
xor
dec
mov
ds
xor
cmp
jb
adc
and
dec
add
xor
mov
mov
xchg
and
push
dec
adc
popa
out
cmp
cmp
ret
mov
dec
in
or
jo
mov
sbb
jb
pop
dec
call
or
sbb
push
dec
and
pop
sub
repnz
cmps
cmp
dec
div
lods
pop
push
pop
jns
dec
mov
and
adc
mov
push
nop
ins
sbb
sub
lods
mov
ror
or
pop
xor
dec
ror
sahf
out
pop
dec
cmp
pop
mov
pop
stos
inc
adc
shl
inc
push
and
gs
mov
xchg
mov
adc
fstp
and
xor
inc
rol
pop
dec
xchg
or
call
sbb
dec
and
and
sbb
mov
jmp
sub
pop
or
adc
adc
ss
sub
ret
fst
add
es
cmp
dec
ds
cwde
mov
or
int3
xchg
push
add
push
push
inc
lahf
clc
cmp
mov
adc
add
mov
xchg
nop
push
inc
aaa
or
nop
aad
cmp
xchg
sub
mov
ds
sahf
pop
push
add
or
mov
nop
mov
push
movs
jns
dec
mov
fwait
sbb
test
sbb
mov
mov
fist
cwde
lods
or
fcomp
and
test
or
xlat
outs
sub
lea
pop
inc
jnp
test
adc
cmp
xlat
or
dec
pop
sbb
inc
fs
lea
adc
xor
dec
jl
ins
(bad)
and
inc
js
inc
or
je
mov
mov
dec
or
cmps
push
cmps
sub
add
push
test
dec
sub
inc
leave
xor
or
sub
(bad)
leave
push
ss
push
push
and
or
clc
cmp
mul
cwde
xor
adc
nop
pop
xor
adc
rcl
jg
aas
or
nop
lea
mov
sub
mov
dec
and
sbb
ss
cmp
or
mov
and
pushf
sbb
ja
xchg
enter
and
mov
inc
push
jns
pusha
pusha
cmp
sahf
jl
mov
and
mov
cmp
fcom
into
mov
sahf
xor
fistp
fist
push
(bad)
movs
add
into
xor
adc
or
out
dec
ret
jl
push
mov
add
inc
loop
add
xor
mov
shl
xor
mov
cwde
es
fwait
pop
mov
add
je
pop
adc
dec
sbb
cmp
rcl
ret
inc
mov
or
les
dec
sbb
and
xor
inc
sub
and
adc
push
or
add
popa
sahf
adc
mov
(bad)
or
loopne
xchg
add
mov
and
and
shl
or
sub
icebp
xchg
sbb
adc
mov
arpl
pop
inc
jg
push
xchg
xchg
or
jg
jo
xor
test
add
cmps
or
xor
test
xor
mov
mov
es
cmp
aas
push
cmp
or
mov
loope
jae
imul
loop
rol
xor
inc
les
inc
adc
daa
push
push
pop
adc
pop
js
or
dec
adc
adc
nop
into
(bad)
aaa
push
and
push
ja
dec
adc
xor
xchg
sbb
out
sub
adc
or
add
pop
fnstsw
cmp
out
std
xor
sbb
dec
jmp
inc
cld
add
mov
rol
jecxz
jl
and
adc
xchg
sub
xor
sub
les
(bad)
inc
call
pop
xor
popf
sbb
ret
xor
dec
jle
inc
cmovne
inc
hlt
div
pop
pusha
pop
cld
add
push
popa
inc
mov
sbb
mov
xchg
xchg
inc
inc
out
push
aaa
mov
mov
fldcw
jecxz
adc
mov
(bad)
loopne
adc
pop
das
sub
lods
in
das
add
mov
aam
pop
shl
xchg
pop
pushf
les
cmp
test
int3
mov
test
adc
pop
(bad)
enter
(bad)
(bad)
xlat
and
lds
popa
cli
xor
js
add
adc
jne
mov
repnz
js
jb
icebp
or
aam
sub
or
pusha
inc
popa
jecxz
push
add
popf
mov
cmp
rcl
into
jne
pusha
jo
imul
dec
adc
mov
mov
hlt
mov
and
add
cmp
outs
dec
inc
stos
sub
xor
ficom
jmp
push
adc
push
push
test
add
dec
leave
popa
dec
add
xor
in
xchg
sub
(bad)
aam
fisub
or
jne
ins
inc
inc
sbb
ds
clc
adc
inc
ret
add
xchg
fmul
fild
fiadd
push
mov
sbb
mov
fst
in
lock
xlat
push
ffree
adc
pop
mov
add
or
adc
out
ins
cld
xchg
sub
inc
mov
sub
mov
js
jo
xchg
pop
push
outs
push
add
xor
add
fsubr
dec
add
(bad)
pop
pop
inc
pop
cmps
repnz
and
(bad)
cli
and
clc
repnz
adc
push
fild
mov
cwde
adc
rol
fld
stos
dec
or
aad
jno
sub
inc
lea
sbb
stos
loope
adc
inc
pop
dec
mov
fiadd
sbb
not
lahf
dec
loopne
lock
add
adc
push
jne
add
div
bound
neg
ja
and
out
addr16
adc
neg
xor
mov
loope
inc
scas
ins
fsubr
adc
inc
cwde
jge
js
mov
xlat
leave
sbb
xchg
cmp
cmp
push
inc
or
dec
imul
add
or
cmp
pop
bound
sub
cmps
xchg
leave
in
cmp
push
dec
dec
xchg
or
dec
and
cdq
pop
push
mov
enter
mov
dec
xor
pop
and
mov
cmp
xchg
xchg
les
sub
dec
xchg
out
scas
ret
dec
jecxz
fld
xchg
mov
jne
sub
sub
sbb
in
test
dec
mov
sub
(bad)
cmp
(bad)
aaa
call
add
push
sub
imul
push
add
inc
dec
adc
cmpxchg
jp
inc
arpl
leave
shr
jge
test
mov
call
loopne
inc
sbb
jmp
or
cmp
mov
cmp
(bad)
fdiv
clc
scas
ss
adc
inc
cmp
cmp
push
jle
sbb
jmp
push
mov
pop
jb
lahf
cmps
mov
cmp
stc
or
mov
inc
dec
mov
push
push
ret
std
and
mov
mov
retf
mov
movs
sbb
add
sbb
pusha
push
retf
dec
dec
in
mov
int3
or
bound
add
lods
test
mov
cmp
inc
shr
and
inc
pop
mov
add
pop
adc
jmp
xor
clc
adc
dec
xor
jl
fadd
pop
dec
nop
xchg
ss
aas
imul
int3
push
pop
aas
and
cs
inc
jne
movs
cmps
or
cmp
or
jmp
mov
dec
jl
(bad)
xor
inc
xor
rcr
int3
add
retf
add
push
sub
fwait
inc
ss
mov
xchg
(bad)
test
in
leave
inc
mov
and
sbb
add
and
scas
add
jmp
in
pop
adc
sahf
test
pusha
adc
js
jne
fcom
imul
jns
(bad)
xchg
xor
test
popa
or
inc
ins
nop
into
rcl
add
clc
clc
mov
(bad)
push
mov
int
call
xchg
xor
repnz
pop
adc
sbb
rcr
cmp
inc
and
sub
push
add
lods
cmps
int3
and
pop
and
mov
(bad)
aaa
mov
mov
pop
lds
push
sbb
mov
mov
pusha
sub
icebp
sub
pop
add
and
mov
or
iret
add
test
mov
jp
pop
cmps
test
lock
(bad)
stos
adc
adc
pop
and
sbb
sbb
lsl
or
inc
aas
xor
lock
push
cdq
xor
pop
cli
mov
jge
cmp
idiv
mov
cdq
mov
dec
out
push
push
test
movs
push
dec
int3
pop
out
push
jmp
add
xor
mov
lock
add
pop
dec
or
dec
pop
loopne
push
push
aas
les
push
nop
add
jbe
ins
jp
imul
push
fistp
inc
jnp
sub
sub
cs
daa
or
or
and
rcl
fst
pop
sbb
jmp
mov
adc
sub
jge
mov
xchg
ja
push
or
or
xchg
out
add
jmp
sub
push
add
push
or
push
pop
aaa
dec
sub
and
sub
or
aaa
pushf
sub
ds
inc
jmp
addr16
add
push
xchg
and
pushf
aad
inc
sub
mov
sbb
xchg
out
sti
add
imul
je
ror
mov
repnz
movs
pop
add
mov
inc
and
ss
push
sub
dec
or
and
inc
sub
out
call
sub
cli
adc
movs
add
ror
leave
popa
inc
mov
mov
sbb
ins
test
xor
frstor
add
out
jb
pop
jns
xchg
push
fnstenv
push
push
add
or
test
sub
push
fisttp
test
inc
pushf
les
inc
lock
add
cmps
stc
or
push
inc
push
pop
inc
add
mov
aas
fdivr
popa
mov
aam
retf
shl
mov
lock
inc
push
(bad)
xor
retf
push
inc
xor
in
and
jmp
adc
mov
sub
xchg
je
inc
sbb
sbb
sub
push
cdq
aam
fisttp
mov
xor
sub
pop
out
sub
nop
add
mov
xor
(bad)
fs
mov
(bad)
push
xor
pop
sbb
cmp
in
sub
stos
loop
dec
push
add
jle
push
(bad)
jmp
and
popf
sbb
popa
mov
aas
xchg
and
push
lea
add
add
sbb
mov
sub
dec
adc
mul
fwait
(bad)
xor
in
push
push
and
les
adc
pop
ins
lods
and
mov
shl
fcomp
push
dec
dec
dec
add
jmp
cld
ret
mov
add
add
dec
loop
jl
inc
mov
lock
push
xchg
and
loop
pop
sbb
add
and
xor
sbb
das
adc
xchg
bnd
cmps
mov
(bad)
mov
xchg
stos
cmps
jne
jno
imul
cmc
daa
sbb
lods
cmp
dec
mov
das
stos
sbb
aas
je
inc
mov
ins
fsin
enter
or
pop
sbb
cmp
aad
xchg
cmp
jmp
jbe
stos
cmp
mov
ds
adc
fst
clc
arpl
popa
and
and
ja
es
popf
ret
inc
inc
dec
jmp
jb
repz
test
xor
sbb
in
in
rcr
xchg
mov
jle
sbb
pop
jb
mov
jp
test
and
leave
jge
sbb
imul
or
sbb
xchg
pop
addr16
aad
add
fisttp
imul
xchg
push
mov
sbb
add
mov
fmulp
call
or
into
aam
sar
mov
xor
pusha
test
add
enter
add
shl
cwde
sbb
add
lods
das
xchg
jae
ins
popf
dec
jae
daa
or
lods
xchg
and
or
add
mov
sub
push
ret
or
das
push
pusha
inc
inc
push
rcl
add
shl
nop
adc
rcl
add
xchg
mov
shr
fst
add
sbb
adc
dec
lea
inc
add
or
or
ror
inc
scas
clc
ret
dec
les
push
test
cmp
xchg
(bad)
imul
dec
jle
mov
inc
xor
adc
pop
xchg
enter
xchg
pusha
sbb
aam
retf
scas
and
mov
dec
jg
jbe
pop
mov
rol
cld
push
add
ja
pop
cli
int3
sbb
test
sahf
mov
xchg
lea
dec
push
push
adc
inc
xor
mov
rcl
dec
sub
lods
jmp
fadd
cdq
xor
add
push
sbb
jmp
mov
fs
loope
jb
xor
mov
gs
mov
cmp
adc
jbe
fisttp
or
adc
lock
es
dec
mov
sbb
lea
shr
and
repnz
sbb
cdq
sbb
fistp
pop
ds
es
add
nop
test
push
jb
lods
scas
add
push
dec
in
mov
xchg
push
retf
fcmovbe
sbb
out
arpl
xor
pop
inc
pop
pop
inc
jnp
xor
inc
xchg
pop
cmp
add
mov
mov
dec
ret
mov
imul
mov
scas
leave
inc
mov
shl
jb
aam
jecxz
rol
rol
mov
and
in
nop
pop
xchg
jnp
rcl
enter
cmp
pop
xor
or
fild
add
pop
xor
pop
mov
es
(bad)
in
mov
loop
pop
xchg
aaa
enter
inc
inc
aas
add
push
pop
ud1
sbb
mov
ficom
sbb
xor
leave
push
sahf
imul
and
adc
xchg
xchg
hlt
(bad)
sub
(bad)
or
mov
gs
ret
sbb
outs
push
cld
sub
sub
cmps
(bad)
(bad)
push
ss
call
sahf
jbe
inc
adc
es
retf
jl
push
adc
or
push
call
inc
aas
inc
fnstenv
pop
mov
pushf
test
shl
rcl
gs
add
add
mov
sub
je
push
cld
inc
shl
(bad)
xor
push
inc
inc
pusha
ret
and
push
imul
imul
adc
pop
dec
xchg
adc
test
outs
and
movs
pop
push
imul
push
or
push
or
adc
sbb
adc
fld
sbb
(bad)
jb
mov
xchg
pusha
dec
mov
jle
ret
sar
pop
fwait
je
(bad)
call
inc
iret
jne
sbb
lea
or
loop
outs
jge
sbb
pushf
repnz
dec
shl
add
sub
int3
mov
fwait
adc
add
dec
ins
sub
test
xchg
loope
ss
sub
jns
outs
jecxz
fnstsw
and
ja
pop
dec
and
lea
jmp
push
push
mov
fdiv
test
fcom
stc
loop
sbb
das
mov
mov
adc
dec
adc
inc
ss
retf
and
jnp
push
ja
xor
xor
pop
mov
sub
xor
sti
test
adc
add
dec
push
ror
or
cmp
inc
cmp
inc
ret
movs
adc
mov
fldln2
push
sub
repnz
sub
add
cmps
loopne
fsubr
jmp
hlt
cli
add
cmps
test
or
pop
inc
xlat
inc
adc
clc
pop
xor
lock
inc
adc
out
test
pop
mov
cld
mov
mov
push
(bad)
mov
cmp
or
dec
dec
push
dec
or
mov
shr
cld
in
hlt
add
and
mov
xchg
popa
jp
test
xlat
adc
aam
in
adc
call
sbb
push
cmp
push
dec
xor
pop
cli
cmp
pop
dec
and
ret
ret
xchg
(bad)
(bad)
cmp
or
ds
cld
adc
add
cmc
xchg
mov
pop
push
adc
movs
push
clc
fst
popa
mov
clc
shl
xor
push
cmp
xchg
imul
jo
push
pop
pop
cmp
retf
sbb
sbb
inc
jle
push
add
mov
add
sbb
add
push
sbb
xor
mov
cmps
or
and
xchg
fcom
push
mov
cmps
or
ins
dec
cs
imul
xor
mov
pop
lahf
arpl
movs
push
and
lahf
mov
jg
pop
inc
push
fnstcw
push
pushf
xor
push
pop
mov
dec
popa
popa
cdq
in
movs
or
call
or
adc
adc
xchg
sbb
(bad)
out
xor
mov
inc
jmp
xor
or
push
(bad)
dec
outs
fcomp
mov
fbld
push
fiadd
dec
jne
dec
loope
mov
jo
pop
mov
or
dec
jge
pop
mov
idiv
jns
lock
add
jns
test
cs
jp
push
add
ins
cmp
push
add
sti
sub
test
fisttp
inc
inc
fwait
test
lock
call
out
jns
jl
xor
and
jg
xor
cmp
ret
sub
mov
dec
test
dec
je
add
or
out
mov
jmp
in
aam
int3
inc
fs
mov
lds
or
and
sbb
aaa
push
popa
push
fwait
push
add
inc
xor
test
mov
pop
xor
cdq
out
in
jp
cmp
and
cmp
movntps
dec
push
sub
and
or
rol
add
mov
mov
push
fdivp
aas
adc
adc
outs
cmp
mov
into
ffreep
out
xchg
scas
adc
mov
adc
mov
mov
sub
daa
loopne
push
cmps
adc
test
in
dec
push
out
or
cmc
dec
sahf
inc
ins
(bad)
dec
cmp
jg
add
mov
inc
ins
xchg
aam
sbb
pusha
xchg
lods
(bad)
jb
push
adc
dec
sbb
retf
gs
sbb
mov
mov
lods
pop
(bad)
fdiv
sar
je
data16
and
inc
cmp
retf
lahf
xor
outs
js
test
ret
cld
xor
and
and
sbb
dec
dec
pusha
inc
xchg
fs
cmp
outs
popa
out
push
inc
jne
cdq
and
rcl
cli
ror
test
mov
gs
and
repnz
mov
ja
add
mov
mov
(bad)
test
enter
push
lods
xor
clc
inc
out
mul
jge
call
enter
pop
push
ror
mov
cld
and
mov
sbb
jns
ins
sub
adc
add
mov
add
mov
retf
and
dec
fimul
inc
mov
jo
ins
xor
shr
bound
xchg
sbb
xchg
add
xchg
dec
xchg
inc
cwde
or
dec
dec
push
mov
pop
dec
push
test
dec
push
push
ss
and
push
pop
(bad)
inc
pop
loope
lods
sbb
mov
jbe
add
pushf
lea
pop
clc
test
sub
in
pop
xor
cmp
fmul
push
scas
rol
ins
test
cmp
dec
pop
retf
add
cwde
imul
movs
popf
jne
enter
inc
pop
mov
jae
mov
mov
push
xor
push
adc
and
nop
js
hlt
push
sbb
push
or
popf
and
sbb
nop
daa
inc
pop
xor
add
dec
in
(bad)
pop
jge
lods
dec
rcr
mov
les
bound
xchg
lock
inc
out
and
ret
dec
call
or
and
mov
cmp
fidivr
sub
outs
xchg
pop
daa
push
imul
adc
or
cmp
cmp
dec
mov
pop
add
or
or
dec
add
adc
dec
or
fld
out
icebp
test
jbe
rol
inc
inc
outs
jge
xor
inc
fiadd
outs
mov
xchg
sar
dec
mov
xchg
jns
ja
xchg
push
mov
add
add
inc
lock
add
lds
xor
xchg
cmps
div
leave
sub
jmp
sub
jmp
push
sbb
xchg
push
add
xchg
adc
push
fmul
gs
cdq
pop
push
pusha
cmp
dec
aam
add
in
mov
in
jmp
sub
jmp
arpl
add
(bad)
imul
cdq
out
sub
xchg
lods
cmp
dec
pop
or
ins
jb
inc
or
dec
adc
lods
loop
pop
xchg
mov
int
nop
dec
xchg
cmp
cmp
leave
pusha
jno
and
push
mov
xor
sub
cmp
cmps
dec
test
into
push
imul
push
add
rcr
pop
mov
clc
scas
hlt
dec
cmp
ja
push
cmp
jns
push
jl
push
push
pop
imul
jle
add
imul
cmp
jle
test
jmp
or
dec
mov
retf
sub
xor
inc
inc
gs
mov
(bad)
lea
fmul
adc
mov
or
cmp
xchg
push
int3
inc
xchg
cmp
movs
xchg
loopne
xchg
movs
repz
or
cmp
inc
pop
jb
jle
add
sub
outs
sub
push
push
fisttp
add
pop
jmp
sub
sbb
sub
mov
inc
dec
mov
xor
pop
xor
dec
pop
mov
mov
inc
or
inc
jp
or
jne
dec
or
push
sbb
inc
fisub
push
add
xchg
scas
fs
push
mov
push
sti
cmp
or
xchg
cmp
ds
push
cmp
push
loop
out
sub
std
das
dec
out
xor
popa
mov
or
cmp
es
add
and
add
(bad)
jbe
in
(bad)
push
inc
frstor
xlat
ds
mov
add
arpl
lds
adc
mov
xchg
test
push
call
jno
addr16
or
(bad)
stc
call
and
jb
add
rcl
(bad)
fmul
nop
dec
std
hlt
lock
mov
dec
cli
das
lock
mov
sub
jmp
sbb
cmp
jne
sub
add
lock
adc
xchg
(bad)
(bad)
inc
add
mov
xor
cmp
jae
cmp
jge
xor
sbb
rcl
adc
or
or
gs
pop
nop
jbe
xchg
mov
cmp
out
in
sub
je
hlt
and
popa
adc
mov
jecxz
pop
add
cmp
inc
add
xchg
pop
mov
inc
rol
inc
mov
inc
add
adc
push
addr16
mov
int
into
pop
inc
addr16
enter
cmps
jne
pop
dec
rol
(bad)
hlt
ror
test
add
and
cmps
cmp
(bad)
sbb
test
or
add
inc
push
popa
pop
add
lods
add
ret
jne
mov
fsubr
pop
fist
inc
mov
jge
mov
pop
aas
sub
xor
and
or
imul
xor
mov
xchg
pop
add
add
inc
adc
add
push
mov
push
xor
xchg
adc
sar
(bad)
aad
inc
mov
or
and
fadd
xchg
cmp
sbb
jno
add
cld
outs
nop
xchg
sbb
adc
es
adc
test
and
pop
mov
push
(bad)
movs
mov
jg
pusha
push
out
adc
adc
add
std
or
sbb
hlt
pop
dec
inc
ins
lock
aaa
cmp
mov
hlt
add
out
hlt
stc
inc
inc
sbb
sub
sub
xchg
sbb
enter
sahf
sub
add
add
hlt
inc
inc
adc
shl
add
mov
jmp
in
mov
pop
add
cmp
dec
cmps
inc
mov
sbb
jbe
push
adc
inc
cmps
cmps
mov
imul
add
mov
rol
rol
sar
mov
inc
(bad)
mov
add
(bad)
jl
xor
adc
adc
inc
in
test
inc
lock
shr
or
mov
adc
add
xchg
jbe
xor
and
or
mov
stos
or
cmc
push
int3
pusha
test
cmc
inc
push
mov
je
aad
and
lea
or
push
sbb
jmp
sbb
push
pop
xchg
mov
das
(bad)
dec
ins
pusha
shl
test
push
add
aaa
and
ins
xor
scas
les
mov
inc
das
ds
repz
mov
adc
jne
inc
and
je
cmp
xchg
inc
adc
sbb
mov
pop
nop
push
add
mov
scas
fld
mov
in
pop
das
lods
dec
nop
push
add
daa
movs
shr
add
pop
push
js
jmp
das
dec
es
mov
shl
ss
jbe
mov
xlat
movs
or
xlat
or
repz
push
inc
inc
imul
popa
push
push
movs
pop
sbb
cmp
jle
movs
inc
outs
cmp
jmp
mov
lock
and
mov
je
add
dec
ficom
sbb
ret
sbb
ja
lar
and
daa
cmp
sbb
call
fld
loop
sbb
sub
mov
mov
popa
lods
test
dec
pop
loopne
ja
xchg
adc
ja
or
mov
mov
shl
inc
retf
or
aaa
mov
(bad)
ror
daa
add
(bad)
xor
jb
mov
mov
xchg
inc
add
sub
sahf
cli
inc
adc
sub
imul
inc
scas
fiadd
es
movs
adc
pop
ss
inc
and
mov
lea
aaa
pushf
cld
add
mov
sub
push
test
in
add
mov
inc
retf
pop
dec
popf
dec
shl
dec
adc
or
xor
xchg
or
add
sub
add
fimul
sar
cwde
sbb
pop
lods
push
xchg
addr16
cmp
inc
sbb
inc
outs
inc
xor
pop
or
in
test
inc
ins
ins
inc
or
inc
inc
adc
dec
add
mov
nop
adc
test
inc
je
popf
movs
or
jecxz
je
inc
pusha
and
inc
nop
je
sub
inc
jmp
popf
xlat
add
dec
call
aaa
adc
mov
sub
inc
pushf
mov
inc
pop
inc
ret
dec
test
mov
or
cmp
cdq
fistp
mov
xor
inc
push
mov
(bad)
ficomp
and
aas
push
call
inc
adc
test
add
add
fstp
pop
and
sub
adc
inc
arpl
xchg
adc
or
imul
inc
adc
popa
and
add
imul
add
ret
and
ret
sub
dec
inc
inc
push
cmp
out
fimul
or
adc
sbb
mov
sbb
push
cli
push
sub
cmp
pusha
jmp
mov
inc
fcomp
inc
add
call
mov
inc
retf
jae
lock
in
xchg
inc
sbb
pop
rcr
inc
or
dec
xor
jle
inc
lods
add
mov
xchg
outs
add
arpl
and
pop
dec
add
test
in
xchg
add
lahf
clc
mov
out
int3
xchg
xchg
cmp
pop
xor
cmp
mov
adc
jne
add
xchg
inc
jb
or
ror
mov
push
scas
pop
dec
call
lock
dec
enter
inc
jl
inc
add
inc
xor
clc
xor
mov
push
cmp
cmp
xchg
js
popa
fdivr
jmp
dec
xchg
push
(bad)
stos
xor
clc
faddp
pop
int3
int3
pusha
fild
in
dec
or
mov
xor
arpl
xor
arpl
imul
dec
ds
pop
sbb
and
jno
dec
std
inc
jo
lods
in
outs
mov
or
in
ror
push
sub
out
ins
fcomp
sbb
or
fdivr
ret
sbb
inc
adc
cld
mov
repz
ret
and
push
rol
push
mov
inc
ret
and
inc
and
jbe
pop
div
in
xor
push
cwde
or
nop
cmp
repnz
mov
xor
add
rol
in
jne
in
cmc
inc
lock
mov
daa
push
mov
int
retf
or
mov
xchg
xor
cmp
xchg
push
cmps
cmp
dec
imul
frstor
and
sbb
push
pop
out
sti
sub
cs
(bad)
test
or
ret
(bad)
sbb
aam
push
xchg
loope
retf
mov
data16
or
add
mov
sti
and
adc
push
xor
sbb
call
dec
inc
inc
pusha
jp
out
fistp
pop
movups
pop
pop
xor
shl
pop
pop
je
movs
or
push
and
xchg
fst
lds
jne
pop
inc
push
or
jb
or
lds
pop
pop
xchg
cwde
mov
push
loope
adc
nop
fwait
arpl
repnz
call
add
inc
jbe
nop
push
add
jmp
adc
pop
push
and
das
jns
psrlq
or
iret
and
sbb
fcomp
inc
cmp
jne
inc
popa
sbb
inc
xchg
out
rol
or
mov
scas
adc
cwde
pop
imul
out
or
pop
pop
xchg
dec
call
mov
je
xor
push
mov
adc
adc
jbe
test
outs
add
push
mov
in
out
push
fild
add
aad
call
or
lods
inc
push
jb
inc
mov
ja
or
cmp
mov
arpl
sbb
dec
dec
or
sub
add
hlt
pop
add
push
xor
add
or
or
iret
nop
mov
stc
push
add
loop
pop
inc
(bad)
aad
sbb
arpl
mov
mov
adc
dec
fist
nop
xor
movs
repz
xchg
data16
adc
push
and
adc
pop
in
add
push
pop
mov
add
cmp
add
mov
add
pusha
xchg
or
push
lds
jmp
cdq
jb
inc
xchg
add
in
sbb
pusha
pop
or
inc
pusha
push
adc
outs
inc
pop
sub
ins
int3
aaa
add
and
xchg
(bad)
cmp
(bad)
mov
(bad)
ins
cmps
pop
clc
ds
or
or
sbb
xchg
lods
lea
ror
jmp
adc
inc
inc
dec
call
bound
and
mov
mov
adc
sahf
xchg
or
inc
sbb
fcom
ins
pop
cmp
sub
cs
xchg
sub
xchg
xchg
and
cmp
arpl
pop
pop
test
dec
or
scas
retf
gs
(bad)
std
das
push
sbb
mov
(bad)
(bad)
mov
sub
adc
jmp
test
(bad)
xor
cmp
dec
nop
jnp
mov
shl
xchg
push
or
push
inc
das
dec
cdq
xchg
add
aam
xor
loopne
mov
sbb
pop
call
pop
dec
out
pop
adc
adc
inc
lods
mov
push
das
test
push
mov
fs
test
shl
xchg
and
inc
sbb
inc
xchg
out
push
mov
xchg
push
jne
push
(bad)
sbb
add
add
xor
call
jo
std
xor
fisttp
in
daa
test
cmp
and
rol
sub
cmp
mov
fild
daa
xchg
inc
xor
ins
cs
add
jmp
pusha
jmp
sub
cmp
and
xchg
aam
repz
xor
adc
jp
call
push
sbb
cdq
retf
aam
adc
in
or
es
fcom
add
in
ins
inc
mov
add
add
loope
ret
call
push
xor
add
mov
lock
xor
cmp
push
or
or
out
cwde
stos
or
sub
loope
cwde
sar
int3
inc
test
mov
xchg
add
cmp
add
dec
add
adc
add
and
xchg
jmp
adc
sbb
test
add
les
add
js
(bad)
mov
(bad)
or
cmp
adc
push
mov
ds
add
or
dec
sahf
lahf
lock
cmp
shl
cmp
adc
cmp
stos
cmp
addr16
add
push
fldcw
add
invd
ja
pushf
fcom
outs
mov
ins
and
loop
xchg
or
cmp
ret
add
inc
aam
or
test
test
out
and
adc
clc
xor
xor
mov
xor
pop
add
push
or
das
aaa
add
mov
sub
icebp
mov
lods
jnp
mov
fiadd
out
add
add
sbb
mov
into
test
adc
pop
fdiv
adc
dec
imul
xchg
movs
inc
out
cmp
pop
mov
or
jb
mov
movs
inc
and
pop
sbb
sbb
mov
xor
pusha
xchg
cmp
adc
xor
inc
cli
pop
mov
cmp
sti
push
in
mov
inc
pusha
or
xor
fadd
push
mov
add
jb
add
or
cmp
jmp
jbe
into
shl
jmp
push
xchg
outs
imul
push
outs
fisubr
jge
daa
call
sbb
pop
imul
push
cdq
or
arpl
pop
out
or
mov
pop
pop
push
dec
clc
push
inc
add
or
mov
add
adc
(bad)
dec
stos
ret
movs
sbb
and
mov
test
pop
test
add
mov
int3
mov
cmp
xchg
les
fnsave
jns
jb
retf
jnp
push
pop
or
inc
pop
pop
jne
sbb
sbb
sub
je
mov
push
stos
retf
loopne
adc
push
push
push
add
push
cdq
add
(bad)
or
lods
inc
lock
dec
je
push
or
jns
inc
lock
pusha
mov
clc
arpl
mov
inc
ret
sub
adc
inc
mov
add
test
(bad)
sbb
mov
(bad)
push
and
es
arpl
xchg
adc
cwde
and
fsubr
mov
sbb
mov
mov
mov
(bad)
push
(bad)
loope
ror
push
xor
je
in
xlat
call
js
inc
daa
and
imul
pop
sub
in
push
add
xchg
jnp
sub
mov
push
je
pop
jle
push
test
cmp
or
aam
std
retf
mov
scas
dec
sbb
mov
sbb
jmp
xchg
ins
sub
xchg
pusha
call
jecxz
cmp
jge
iret
ficomp
inc
in
or
push
sub
mov
sub
cmps
push
in
ret
leave
rol
pusha
push
xchg
repnz
xor
lods
or
inc
lods
test
cdq
rcr
hlt
rcl
and
push
fstp
call
ja
jle
sub
xchg
adc
mov
ror
inc
xchg
add
inc
inc
inc
shr
movs
pushf
(bad)
dec
inc
sahf
stos
dec
sub
push
or
in
add
adc
inc
mov
mov
jmp
js
dec
and
dec
jmp
mov
add
push
pop
cmp
in
adc
stos
fxch
xchg
rol
cld
lds
pop
push
fst
jns
ret
adc
sub
aad
adc
(bad)
xlat
cld
test
clc
push
push
push
inc
pop
addr16
mov
sub
and
(bad)
mov
out
sbb
enter
cld
or
das
mov
ins
dec
adc
pop
test
jmp
lock
je
mov
or
les
mov
lahf
jno
and
pop
lea
push
pusha
sub
test
or
clc
addr16
or
inc
push
dec
int3
mov
push
push
enter
ret
jne
mov
shl
push
test
push
cmps
mov
adc
mov
enter
push
mov
push
and
adc
inc
mov
mov
mov
sub
cld
and
sub
mov
or
jb
jbe
out
je
leave
jecxz
sahf
xlat
movs
mov
inc
cmps
cld
test
retf
call
pop
loopne
scas
inc
add
loope
push
inc
(bad)
push
add
mov
dec
shl
test
leave
dec
dec
sbb
push
scas
mov
jle
(bad)
gs
add
sub
fisubr
mov
nop
sub
and
add
add
push
or
mov
add
enter
fild
stc
data16
or
dec
out
xchg
xor
and
ret
dec
je
repnz
xor
es
sbb
ret
dec
mov
repnz
mov
test
push
gs
loopne
lods
push
int3
jp
and
sti
daa
rcl
push
jge
mov
xor
or
enter
mov
daa
jge
shl
push
push
lock
pop
ins
les
push
mov
adc
les
packuswb
popa
sub
sbb
rol
and
ins
shr
mov
adc
dec
jmp
daa
pop
mov
addr16
or
inc
nop
inc
or
sbb
adc
pop
pop
jmp
mov
jns
pop
add
inc
imul
loopne
pop
call
jle
mov
cwde
inc
xor
test
push
(bad)
push
cmps
in
ja
test
pusha
adc
pop
xor
mov
or
inc
or
fld
add
adc
jns
jge
lods
lahf
aam
mov
jo
dec
ins
xor
pusha
lods
out
xchg
stos
jbe
push
pop
outs
add
sbb
inc
(bad)
test
shr
xlat
xchg
pusha
adc
adc
or
ins
(bad)
je
push
sub
push
lods
sbb
in
inc
test
sbb
sbb
inc
(bad)
cs
addr16
sub
addr16
push
or
add
fsub
jg
lea
lea
sbb
and
push
call
xchg
aaa
mov
rcr
and
nop
sub
pop
test
ja
sub
(bad)
pop
cvtdq2ps
xor
mov
mov
add
in
cmp
shl
push
out
add
xor
jne
add
and
dec
and
loope
and
inc
mov
inc
push
or
add
pop
jne
ret
inc
jmp
inc
xor
and
dec
ss
ss
mov
popa
mov
jb
push
xor
or
(bad)
mov
loopne
pushf
adc
pop
mov
inc
mov
aaa
pop
sub
add
and
xchg
pop
xchg
in
and
daa
add
popa
pusha
adc
cdq
pop
ins
test
adc
xchg
pop
or
mov
add
jecxz
lea
xchg
imul
mov
push
add
mov
and
popf
loopne
je
lods
das
pop
sub
pop
js
add
in
sar
xchg
movs
adc
mov
mov
clc
fcom
retf
dec
ins
mov
push
add
es
mov
and
pop
fdivr
mov
add
dec
mov
jns
imul
ins
and
and
or
mov
cmps
rcl
adc
sar
mov
cmp
ins
jg
repnz
leave
daa
xor
xor
sar
adc
cmp
mov
xchg
cmc
jl
dec
movs
dec
mov
call
mov
sbb
mov
push
in
imul
mov
popf
cmp
sub
test
cmp
out
aaa
fsub
mov
sub
sbb
nop
hlt
add
fwait
mov
ror
and
add
adc
cmp
and
push
adc
loopne
jmp
and
pop
and
not
mov
xchg
pop
push
mov
push
mov
imul
push
out
addr16
inc
pusha
mov
add
js
xchg
je
add
push
dec
int3
pop
push
fs
popa
pop
mov
ds
add
inc
inc
daa
mov
mov
rol
rol
xor
mov
ins
xchg
(bad)
mov
xor
(bad)
xchg
cs
daa
adc
push
fstp
adc
push
es
mov
and
inc
sub
icebp
jne
mov
ret
and
add
(bad)
push
es
popa
and
sbb
inc
nop
pushf
test
pop
sub
jno
lahf
push
je
mov
movs
icebp
bswap
or
bound
xor
adc
std
mov
cld
ss
sbb
add
dec
retf
cmp
or
sbb
outs
scas
add
jns
jno
dec
call
cmpxchg
sub
cmp
call
jno
retf
enter
ja
clc
xchg
cmp
and
lods
xor
loopne
and
bound
ins
xchg
cmps
arpl
sbb
jb
jecxz
inc
out
or
sbb
mov
fcom
sbb
or
pop
std
push
sbb
jo
push
into
xor
mov
push
or
mov
lock
jns
mov
mov
pop
jae
pushf
sbb
mov
cmp
dec
xchg
push
imul
sbb
les
cmp
push
ds
out
push
add
or
or
sbb
adc
push
test
or
push
cmp
cli
mov
jne
or
dec
pop
test
pop
jg
mov
ins
data16
pop
jae
push
jbe
nop
mov
mov
mov
inc
push
shl
add
jbe
xchg
add
(bad)
lods
adc
pop
xchg
fwait
inc
adc
pop
and
push
sbb
push
in
sbb
push
push
inc
repnz
mov
sbb
xor
mov
fnstcw
enter
push
pop
aas
repz
mov
adc
and
sub
xchg
adc
jns
pop
add
mov
loopne
aam
mov
daa
ds
mov
inc
movs
data16
mov
cmp
(bad)
dec
pop
adc
and
or
je
push
cld
call
test
push
aas
data16
mov
pop
pop
push
and
nop
imul
iret
or
cmp
and
mov
lods
or
je
adc
mov
mov
icebp
lods
adc
sub
data16
push
pop
push
shl
fild
add
or
sub
xchg
sbb
add
add
push
pop
(bad)
outs
push
or
outs
cmps
icebp
and
push
push
jecxz
rep
xor
dec
js
cld
xchg
out
inc
call
vpsubb
sbb
imul
add
sub
aaa
mov
arpl
sbb
fwait
cmp
jle
xor
xchg
popf
xchg
sahf
(bad)
(bad)
mov
xor
out
test
add
jecxz
pop
or
pop
push
movs
sub
(bad)
inc
cmp
out
pop
add
mov
push
aas
sbb
fadd
inc
retf
jno
push
das
dec
das
stos
prefetch
or
sbb
(bad)
push
pop
xlat
or
mov
cmp
ret
mov
xchg
es
imul
test
and
nop
ret
imul
cmp
cmp
dec
scas
and
nop
neg
sar
push
push
jbe
cmp
sbb
pop
cmp
push
inc
adc
and
sbb
pop
inc
scas
stos
rcpps
faddp
cmps
xchg
mov
dec
mov
rcl
daa
sbb
sub
mov
push
adc
adc
dec
push
push
xchg
push
inc
jmp
pushf
sbb
stos
test
sbb
inc
add
loope
test
push
push
jno
push
or
dec
icebp
xor
sub
sub
mov
scas
dec
xor
pop
sbb
xor
rcr
xchg
mov
mov
push
mov
shl
imul
dec
xor
dec
mov
lds
rol
movs
jg
dec
and
inc
call
dec
inc
ret
jle
pop
iret
xchg
fld
xor
dec
add
adc
dec
inc
add
adc
into
cmp
xchg
mov
cmovo
sub
pop
jle
adc
cld
push
sub
jmp
cmp
test
aad
add
add
cwde
dec
xchg
or
and
or
add
xchg
in
adc
xchg
sub
push
jmp
pop
pop
inc
arpl
adc
cmp
jb
mov
xchg
push
adc
cs
and
mov
neg
or
jo
inc
cmp
nop
dec
add
push
ins
imul
add
cmp
aas
stc
jae
add
dec
jnp
and
mov
or
dec
inc
stos
movs
gs
call
add
xor
inc
and
cmp
clc
cs
add
push
jo
(bad)
push
in
out
adc
pop
jmp
add
jb
jmp
jmp
mov
xchg
daa
push
xor
mov
push
jne
mov
and
daa
xor
fdivr
ret
imul
inc
mov
stos
xchg
inc
push
jle
(bad)
dec
in
movs
xor
sbb
jmp
mov
ret
push
iret
(bad)
ins
adc
jns
test
imul
loope
xor
(bad)
xor
push
ret
stos
out
and
mov
push
and
and
out
das
or
iret
mov
mov
adc
je
jo
sub
sbb
adc
test
sub
add
out
cmp
mov
je
dec
shl
cld
mov
push
mov
adc
push
mov
stos
mov
mov
lds
cmc
test
pop
adc
in
fs
and
dec
jae
call
xor
xor
inc
rcl
jecxz
push
push
pusha
pop
push
nop
shl
push
mov
dec
mov
inc
dec
push
xchg
cmc
popf
add
pop
mov
or
and
je
or
fwait
or
lds
push
jecxz
imul
shl
imul
or
in
mov
inc
inc
push
or
mov
xor
jne
inc
ret
test
jl
pop
inc
add
sub
add
int
sub
dec
or
xchg
add
mov
sbb
jne
add
jnp
nop
int3
add
jb
xchg
mov
cmp
and
aas
sub
aas
test
test
sbb
xlat
sub
sub
cmp
inc
ret
mov
mov
dec
ja
cmp
test
gs
sbb
mov
adc
in
in
fnstenv
and
inc
mov
les
sub
rol
clc
jmp
mov
mov
or
int3
xor
cwde
nop
pop
ss
and
mov
adc
cld
dec
sbb
sar
ret
out
pop
pop
outs
rcl
cmp
shl
push
sbb
movs
mov
in
push
xchg
leave
add
cmc
scas
push
not
bound
jge
inc
imul
mov
inc
push
pop
retf
adc
pop
jl
call
ret
jb
adc
xor
sub
sub
jo
rcr
jl
scas
pop
mov
dec
or
(bad)
adc
jne
arpl
lods
xor
adc
sub
jge
sub
fmul
jmp
mov
inc
pop
add
push
daa
dec
pop
pop
xchg
mov
shr
push
shr
pop
add
pusha
jne
(bad)
fist
mov
in
push
call
pop
movs
scas
xor
fwait
jmp
and
ret
pop
pushf
ja
or
jns
lds
xchg
cmp
popf
sar
cwde
das
adc
jp
sub
jo
sub
push
scas
mov
pusha
xchg
xor
mov
add
aas
mov
adc
mov
cmps
inc
das
push
jge
ret
push
test
int
inc
xor
sbb
add
adc
mov
neg
imul
aaa
add
cmp
jle
aas
xchg
pushf
lods
cdq
dec
mov
cmps
test
xchg
or
(bad)
wbinvd
nop
push
ins
ja
rcl
add
sub
push
not
sbb
mov
les
push
jae
xor
or
icebp
jnp
push
dec
aaa
xchg
and
in
icebp
cmp
je
cmp
ss
sbb
sbb
adc
sub
add
test
arpl
outs
jge
jecxz
push
dec
adc
nop
xor
inc
ror
stos
arpl
rdmsr
into
cmp
dec
and
adc
mov
inc
imul
pop
sbb
js
mov
xchg
fld
mov
out
cmc
icebp
ud1
sbb
ret
cmp
adc
rcl
or
and
pop
je
into
adc
mov
cmps
push
test
sub
xlat
jle
jmp
push
xor
jle
test
adc
xlat
dec
and
jae
cmc
adc
(bad)
mov
leave
(bad)
adc
popa
loopne
inc
push
cmp
mov
addr16
test
or
jo
push
sub
push
dec
xor
sub
adc
mov
aad
mov
cmp
mov
pop
adc
push
dec
push
push
cmp
mov
sbb
and
dec
mov
pop
outs
dec
pop
daa
jnp
sub
sub
or
and
mov
fsubr
loop
or
dec
(bad)
ret
or
jp
pop
jno
mov
xchg
adc
adc
es
pop
aas
movs
iret
adc
idiv
jge
add
aam
and
pushf
movs
es
and
mov
add
stos
push
push
push
cld
fwait
xchg
sbb
xlat
cmc
test
and
sbb
xchg
rol
sbb
lods
loop
daa
mov
push
push
sub
cmp
movs
clc
int3
mov
or
(bad)
ds
je
jbe
popa
xlat
or
je
pop
je
jmp
jae
nop
data16
adc
mov
sbb
sub
mov
add
pop
out
mov
call
add
fs
loopne
rcr
sbb
lods
ret
inc
xor
xor
js
inc
adc
test
jle
add
hlt
add
out
sub
cmp
add
xor
pop
push
js
das
pop
pop
lods
retf
mov
inc
xor
jmp
jge
fild
inc
adc
fistp
adc
or
and
sub
mov
dec
repnz
add
mov
pop
in
sub
jle
movs
std
dec
inc
pop
sub
push
clc
xor
xchg
out
lock
in
push
cmps
cmp
push
pop
inc
mov
fmul
sbb
jns
rcr
enter
pusha
pushf
or
add
push
popa
add
mov
cmp
add
mov
inc
mov
mov
sti
add
adc
pop
jb
idiv
or
or
outs
mov
add
addr16
retf
pop
cmp
sub
ins
push
push
sbb
or
imul
mov
sub
mov
or
add
jmp
or
or
in
retf
mov
cmp
movs
mov
cmp
(bad)
sbb
mov
cs
dec
ror
mov
mov
lock
jo
dec
call
jbe
inc
or
test
out
jge
scas
adc
loopne
scas
mov
mov
jo
inc
cs
jle
out
jae
out
push
and
jle
adc
jmp
sbb
jb
ror
mov
clc
test
clc
mov
cmps
push
clc
fdiv
push
or
xchg
or
add
pop
inc
lea
(bad)
jmp
dec
adc
stos
loopne
fadd
loopne
push
sbb
jle
sbb
call
shr
cmps
jge
fmul
or
push
imul
fdivr
enter
dec
fld
les
sbb
xor
repz
jb
pop
add
mov
jae
push
(bad)
or
imul
shl
mov
or
ror
add
(bad)
daa
rol
push
or
pop
cld
dec
ficomp
mov
je
or
inc
aad
sub
mov
in
test
jge
dec
loope
pop
xor
cdq
sub
mov
inc
mov
mov
mov
in
mov
add
in
hlt
sub
sbb
pop
adc
fldenv
xchg
add
mov
sub
jne
xor
add
jge
movups
data16
sub
push
add
sub
jne
add
iret
in
or
cmp
(bad)
dec
jmp
dec
or
mov
jne
push
sub
sub
ret
xor
out
cwde
mov
sub
out
cld
add
into
outs
mov
or
sub
sub
push
cmps
add
xor
dec
movs
jmp
mov
jg
loopne
xchg
cmps
cmp
hlt
add
dec
rol
pop
adc
(bad)
shr
call
and
(bad)
push
mov
into
add
adc
push
add
imul
and
loopne
div
inc
rol
mov
cwde
add
adc
xchg
fwait
cdq
pop
pop
add
inc
or
adc
ins
add
add
in
adc
fcomp
push
mov
xchg
daa
jmp
call
jae
in
lods
xor
dec
imul
fadd
sub
pusha
inc
aam
inc
or
jae
pop
jecxz
ret
sbb
lea
lea
js
int3
daa
adc
ins
and
in
inc
enter
mov
push
mov
cmp
mov
push
sub
adc
loopne
xchg
rol
pop
xchg
ffree
mov
sbb
mov
sub
fcmovnbe
cmp
mov
test
add
add
cmp
xor
add
sbb
push
loopne
mov
cmp
push
or
or
cmp
and
(bad)
cld
mov
mov
mov
or
or
lock
mov
pushf
pusha
xchg
es
outs
pushf
(bad)
les
or
ss
clc
add
and
aam
dec
ror
jl
es
cdq
in
mov
es
dec
and
xchg
enter
adc
add
xchg
shl
xchg
push
xchg
cmps
addr16
lods
cmp
ins
imul
or
add
dec
popa
xchg
xchg
dec
imul
xor
dec
loopne
jo
scas
jnp
pop
inc
outs
rol
or
adc
cmp
mov
mov
or
ret
in
adc
and
and
aaa
mov
and
add
mov
(bad)
xchg
dec
js
enter
call
fwait
dec
mov
shr
retf
sbb
es
mov
cmp
add
movs
push
sub
and
mov
jnp
mov
stos
or
mov
or
pop
jmp
not
and
test
add
sbb
les
hlt
dec
xor
add
mov
xor
or
or
mov
mov
push
push
nop
push
pop
retf
iret
dec
and
jae
es
jmp
sahf
fnstenv
pusha
cmp
jg
add
sub
jo
loopne
mov
push
mov
jg
dec
cmp
add
gs
(bad)
fisttp
or
and
sbb
dec
out
pop
icebp
sub
add
and
inc
aad
lsl
cmovnp
cs
push
push
inc
and
or
push
cs
and
mov
stos
jnp
inc
or
sbb
sub
xchg
pop
daa
ins
add
clc
dec
test
fisttp
push
and
mov
call
out
cmp
push
sub
adc
daa
sbb
xchg
cmp
or
xor
pusha
popa
push
cmp
pop
cdq
ins
adc
rcr
add
add
div
xor
add
adc
ret
push
or
mov
int3
(bad)
dec
jbe
add
mov
fs
outs
int3
pusha
xor
mov
shl
lods
mov
ja
adc
fcom
inc
and
imul
aas
mov
lea
xor
or
cmps
nop
push
hlt
add
mov
aas
cs
scas
and
or
(bad)
adc
mov
inc
popa
mov
xor
rol
mov
cmps
pop
cmps
inc
add
lods
or
dec
fiadd
mov
add
cmp
push
sahf
xor
sub
add
jge
popa
jb
dec
jbe
push
or
mov
bound
cmp
daa
mov
shr
dec
adc
add
mov
lock
ret
xchg
xchg
adc
push
ret
test
test
fnstenv
nop
iret
cmp
lods
lahf
test
clc
ror
xor
mov
sbb
or
daa
mov
int3
inc
mov
dec
rcr
mov
push
and
movs
call
rcr
pop
sub
xchg
push
pop
or
ret
or
ret
push
xchg
push
hlt
or
and
xchg
dec
jmp
pop
inc
popf
cmp
mov
test
cli
pusha
and
sbb
sbb
mov
int3
in
add
scas
mov
push
xor
jo
sub
dec
call
sbb
add
mov
or
rcr
dec
adc
cwde
and
loopne
pop
push
xor
pop
add
sbb
iret
pop
jne
xchg
push
(bad)
cmp
lock
frstor
xchg
sub
sub
push
or
and
movs
shl
pop
jb
dec
dec
mov
sub
bound
push
pushw
rcl
mov
xor
imul
jbe
ins
push
ds
add
add
retf
rol
(bad)
mov
jns
je
jo
adc
movs
pop
call
jne
int
mov
xchg
xor
clc
enter
add
in
mov
arpl
push
js
bound
push
jnp
dec
mov
cmps
push
lahf
or
or
(bad)
loop
out
sbb
(bad)
retf
rol
push
cwde
jp
xor
xor
ds
dec
cmp
cmp
inc
je
in
dec
cdq
clc
bound
dec
xchg
adc
ror
in
std
ins
add
add
inc
jl
cmp
push
push
or
out
add
inc
fdivrp
jmp
out
mov
push
mov
mov
scas
les
in
fimul
iret
nop
rol
add
inc
or
enter
adc
popa
push
sbb
inc
fisub
rol
bound
iret
and
pop
les
fst
movs
or
and
jbe
xchg
addr16
js
loopne
loope
and
or
mov
cmp
fcomp
cdq
xchg
pop
fadd
pop
fwait
jl
mov
pusha
xchg
inc
mov
and
push
add
xchg
pusha
add
push
sbb
and
(bad)
push
mov
sbb
ins
test
inc
movs
(bad)
ins
add
push
push
push
mov
outs
aaa
sar
inc
cwde
addr16
test
fisttp
dec
mov
les
xchg
dec
dec
sbb
sub
dec
cs
call
xor
and
or
jmp
lea
mov
adc
and
(bad)
sbb
mov
push
mov
or
clc
popf
fistp
neg
fwait
pop
(bad)
hlt
push
dec
adc
repnz
or
jbe
mov
and
cwde
pop
mov
or
sbb
ss
test
jp
or
hlt
dec
adc
add
repnz
cld
ret
push
add
mov
cmp
or
and
(bad)
xchg
sbb
add
xchg
add
popf
pop
sahf
adc
push
jg
adc
inc
adc
mov
aam
sub
js
push
call
sbb
pop
fst
push
ss
aam
mov
xlat
pop
ins
xchg
test
jnp
adc
hlt
retf
xchg
mov
ret
xchg
dec
shl
mov
jae
jne
dec
jge
xchg
jno
cmps
adc
ss
mov
jo
sbb
cmp
jo
dec
adc
mov
call
sub
jmp
adc
xor
(bad)
stos
mov
push
ins
sub
jmp
mov
sti
jmp
cmp
cmp
xchg
inc
ret
stos
xor
popa
lds
lock
(bad)
nop
adc
add
outs
xlat
mov
adc
lds
dec
or
and
into
adc
pop
fadd
rcr
dec
aaa
call
or
and
movs
aaa
adc
fcmovne
fs
jp
adc
mov
daa
or
mov
ret
mov
sub
mul
or
mov
fwait
push
dec
add
xor
aaa
(bad)
or
add
ds
loope
cmps
inc
cld
mov
fstp
shr
pop
inc
cmp
aam
fst
out
sbb
mov
test
adc
or
sbb
cmp
sub
pop
sbb
popa
(bad)
jl
ficom
jmp
aam
pop
pop
dec
pop
add
dec
fwait
adc
sbb
push
test
popa
icebp
cmps
and
mov
adc
cmp
sbb
hlt
add
clc
mov
loopne
add
pop
sbb
pop
or
xor
adc
jne
push
in
jnp
mov
mov
jmp
mov
fs
adc
push
sbb
jl
je
clc
daa
ins
mov
pop
mov
xchg
add
aaa
jo
mov
xchg
lock
mov
pop
add
cmp
shl
or
fs
lds
nop
mov
or
mov
movs
mov
stos
dec
repz
mov
and
into
daa
pop
js
or
push
mov
cmp
and
cld
pop
cmp
shl
or
push
pop
imul
pop
imul
fsubr
sbb
adc
(bad)
mov
dec
jmp
xchg
pop
sbb
add
push
push
push
imul
mov
pushf
loopne
popa
xchg
cwde
iret
pop
sbb
nop
xchg
xchg
sbb
add
jo
aas
retf
enter
add
and
mov
and
or
loopne
(bad)
fsub
mov
mov
or
mov
das
stos
xor
mov
fsubr
fst
xchg
lea
ret
repnz
in
cmp
jne
add
or
push
jl
pusha
(bad)
loope
mov
dec
pusha
xchg
imul
inc
loope
mov
lods
sahf
xchg
xchg
xchg
lea
out
mov
xchg
cmp
rol
les
shr
cmp
mov
and
mov
addr16
add
push
xor
inc
jecxz
mov
sbb
scas
pusha
inc
adc
fild
jmp
or
add
inc
ret
dec
jmp
jg
imul
adc
or
cmp
outs
or
pop
clc
add
or
nop
imul
in
push
pop
aaa
or
pop
test
fs
mov
push
fisttp
add
or
or
aam
mov
inc
jo
aam
popa
xchg
xchg
fdivr
pop
push
adc
mov
and
push
mov
inc
mov
inc
mov
cmc
mov
and
mov
ins
cmp
pop
sub
sbb
and
add
ins
not
cmp
cdq
or
inc
fs
or
push
pop
dec
jbe
mov
sub
push
cmc
ja
sti
ins
adc
jge
aam
ret
scas
xor
stos
movs
movs
adc
cld
pop
xchg
xor
or
cmp
out
iret
int
inc
je
loopne
ins
rol
ret
xchg
xchg
adc
pop
cdq
push
repz
push
fs
ror
sub
rcl
leave
in
cmp
add
fisttp
sbb
bound
sub
adc
xor
add
dec
mul
dec
dec
nop
rol
or
into
adc
test
loop
cmps
(bad)
adc
fadd
(bad)
jo
je
pop
(bad)
jnp
inc
ds
add
pop
xor
inc
call
cdq
xor
add
add
idiv
add
sbb
xchg
push
ret
mov
jno
jge
not
mov
inc
sbb
popa
inc
inc
sub
aad
pop
dec
pop
fdivr
add
cmp
push
idiv
jne
push
inc
mov
shl
imul
pop
add
cwde
add
test
and
call
inc
pop
sahf
enter
loopne
xor
sbb
inc
or
add
push
nop
aas
add
inc
fadd
mov
fsubr
pop
cdq
xchg
test
xor
ja
sbb
push
mov
cmps
or
sbb
or
xor
or
push
adc
jne
push
mov
pop
adc
push
into
rcl
sub
js
jmp
mov
or
ins
xor
jbe
adc
sub
hlt
add
fldenv
mov
nop
pop
sub
or
push
jne
sbb
and
add
imul
inc
inc
call
sub
sbb
das
and
pop
and
sbb
movlps
shl
xchg
add
sbb
add
or
repz
adc
mov
jg
not
mov
jp
cmp
and
lea
mov
dec
cmps
adc
pop
clc
jg
or
sub
sub
cmp
jge
pop
sub
pop
gs
jmp
or
stos
jl
add
jl
or
jecxz
fstp
sbb
push
xchg
jg
idiv
imul
mov
jl
scas
sbb
push
sbb
and
inc
add
ret
sub
xor
call
adc
adc
jb
push
stos
gs
fiadd
xor
jns
sbb
xchg
push
xlat
push
push
add
es
movs
add
sti
add
loopne
data16
adc
jae
pop
pop
and
call
js
inc
xor
and
addr16
das
and
sub
or
adc
cmp
add
(bad)
lahf
mov
enter
add
add
cmc
rol
mov
and
outs
xchg
xchg
xor
clc
fs
loope
scas
inc
add
ror
jmp
adc
or
pop
dec
pop
pop
inc
loopne
movs
pop
ja
push
push
sbb
nop
inc
dec
loope
stc
dec
push
xor
mov
outs
sbb
dec
and
call
aad
push
cmp
add
jle
in
sbb
inc
mov
imul
push
lods
lds
mov
dec
inc
and
inc
mov
push
rcl
ds
inc
rcl
out
idiv
mov
pop
mov
xor
jno
and
nop
(bad)
sbb
addr16
arpl
adc
imul
push
pop
(bad)
outs
loopne
pusha
movs
sbb
outs
xor
xchg
ret
in
push
push
je
add
xchg
pop
jmp
pop
test
jl
sub
sbb
js
sbb
push
jns
xchg
adc
mov
popa
xor
nop
jb
adc
and
or
fld
lea
cmps
adc
cmp
cdq
jo
xchg
dec
mov
ins
sbb
lock
dec
xchg
pop
lock
shl
test
(bad)
jmp
ror
mov
fs
jle
enter
cwde
dec
pusha
sbb
cmps
inc
scas
test
test
in
in
hlt
adc
adc
je
xchg
xchg
js
mov
pop
add
mov
fwait
sbb
adc
bound
dec
cmps
adc
xchg
dec
cmp
or
cli
clc
jp
mov
or
aad
and
aas
outs
fdivr
or
mov
or
jbe
mov
push
mov
inc
xor
into
push
fsubr
push
pop
jle
sub
push
inc
cmps
add
mov
data16
in
sub
sbb
sub
jb
jge
fmul
or
shl
mov
lods
mov
and
jns
mov
jno
mov
adc
mov
test
rol
enter
test
mov
fild
or
add
cmp
(bad)
sar
add
sub
loopne
or
adc
add
xor
cmp
xor
lds
gs
mov
adc
jo
adc
test
inc
or
adc
mov
sub
and
jb
inc
hlt
xlat
xchg
dec
or
in
in
adc
(bad)
add
fnstenv
dec
and
pop
push
stc
cmp
or
adc
add
rcl
adc
mov
xchg
xor
jae
pop
adc
jle
mov
fimul
mov
mov
push
inc
or
call
fcomp
inc
mov
inc
adc
call
inc
push
dec
push
sbb
sti
jge
movs
mov
dec
inc
pop
inc
xchg
fsub
int
push
xchg
dec
adc
sbb
sub
iret
mov
test
lahf
add
and
add
das
jmp
push
aaa
add
jo
jo
and
dec
xchg
add
add
int
mov
push
dec
lods
mov
pop
(bad)
enter
pop
les
mov
push
adc
frstor
cs
mov
sbb
inc
iret
out
inc
mov
hlt
loope
(bad)
or
jne
cmp
stos
cmp
xor
sti
rcr
cld
lods
retf
les
and
stos
cwde
rol
xchg
jno
add
out
cmp
mov
and
cmps
in
lock
cmps
es
test
push
add
les
retf
dec
pop
imul
inc
nop
ror
(bad)
movs
cmc
out
call
inc
push
push
add
sahf
or
cmps
scas
or
or
dec
cdq
rol
pop
mov
xor
bound
inc
add
pop
add
in
or
xchg
push
add
leave
add
lods
inc
inc
leave
pushf
icebp
add
mov
cmc
ss
(bad)
jns
pusha
sub
dec
sub
sub
xchg
mov
mov
or
jge
jl
add
hlt
add
lock
std
ins
retf
dec
and
inc
loop
sbb
add
fcom
scas
sub
les
ss
ss
push
pop
push
outs
sbb
mov
add
or
sbb
push
jmp
leave
sbb
out
cmp
xchg
adc
das
sub
icebp
pop
pop
test
dec
daa
cmp
xchg
or
mov
push
ds
mov
sub
jne
enter
ret
pusha
dec
scas
dec
mov
mov
mov
shl
popf
xchg
dec
mov
in
xor
mov
ror
hlt
jg
hlt
and
and
and
mov
inc
pop
xor
fild
jmp
adc
cwde
mov
jnp
xchg
pop
pop
jp
or
push
jne
sbb
js
push
mov
sbb
mov
cmps
arpl
push
jb
das
sar
or
mov
repz
(bad)
nop
mov
adc
adc
test
in
adc
sub
inc
push
mov
cmp
and
or
cmp
sub
push
sub
jle
loope
sub
outs
out
cdq
inc
add
dec
add
and
push
lods
ror
mov
mov
pop
mov
inc
aaa
inc
sbb
pop
or
lods
movs
and
mov
loope
sbb
ja
cmps
lods
inc
jns
cwde
ret
xor
add
add
mov
das
(bad)
lea
fmul
std
jne
std
push
push
mov
cmp
rcr
mov
xor
fist
std
dec
jmp
fnstenv
adc
add
js
retf
sbb
pop
sub
and
pop
push
push
adc
retf
sbb
xor
pop
or
xor
inc
push
adc
xor
faddp
inc
dec
and
pop
add
mov
out
xorps
push
outs
sub
cmps
add
cs
sub
or
inc
dec
scas
ret
add
fild
dec
inc
xchg
imul
and
aaa
les
test
lods
xchg
sub
jle
rcl
(bad)
fidivr
ds
sbb
fiadd
div
scas
inc
pop
and
dec
or
scas
adc
and
inc
xor
and
mov
ins
test
xchg
cli
hlt
add
loopne
mov
jnp
mov
inc
sub
in
daa
pop
adc
lods
shr
lea
sti
(bad)
(bad)
mov
jo
call
or
imul
inc
ins
das
mov
clc
adc
jno
cmc
push
xor
adc
push
sar
mov
jge
push
jle
push
or
cmp
pop
fs
sub
rcr
scas
es
or
arpl
test
call
loop
sub
int3
stos
jnp
movs
xchg
(bad)
shl
jecxz
imul
clc
stos
hlt
mov
dec
push
push
inc
or
push
sbb
add
lods
movs
repnz
call
lahf
jbe
jne
inc
or
ds
mov
add
jae
cmp
jne
pop
das
dec
and
jg
aam
cmp
or
and
pop
pusha
add
mov
shr
push
or
imul
xor
call
lods
rcr
push
loopne
jbe
je
lahf
adc
retf
pop
lock
cmp
xor
xlat
lods
xchg
les
mov
not
(bad)
cmp
je
push
sbb
pop
cmp
std
lea
mov
or
dec
add
fisubr
xchg
cmp
jmp
pusha
dec
cmp
adc
push
sub
daa
push
jge
add
fstp
mov
mov
rcr
cmp
outs
sub
push
loopne
lods
xor
pusha
adc
push
mov
inc
mov
dec
pop
loopne
test
loop
daa
xlat
loope
(bad)
inc
out
jae
add
cwde
es
inc
lods
add
inc
adc
mov
sbb
inc
inc
and
jno
xchg
rol
sbb
inc
fisttp
push
adc
inc
inc
mov
cmps
mov
fsubr
xor
push
adc
lods
xor
and
pusha
imul
sar
adc
mov
sbb
pop
cld
je
in
xchg
mov
call
add
xchg
nop
fucomip
jle
lods
iret
push
aam
or
or
(bad)
pop
push
sar
inc
inc
push
int3
mov
sbb
int
pop
and
ds
bound
or
or
xlat
inc
sbb
xchg
sbb
dec
test
add
in
outs
mov
sbb
mov
pusha
nop
fadd
add
lahf
cmp
mov
in
outs
bound
jle
test
jl
xor
lock
jnp
dec
loopne
ss
ss
es
push
lahf
pushf
sub
mov
xor
cmp
lock
push
push
inc
and
inc
sbb
inc
lods
sbb
mov
js
lea
fld
or
gs
push
sub
adc
(bad)
call
(bad)
jnp
ins
and
aad
clc
pop
adc
sahf
jg
push
push
sbb
es
dec
xor
jecxz
xor
inc
or
or
(bad)
cmp
call
stc
pop
test
mov
mov
je
jbe
sub
mov
iret
mov
and
addr16
mov
aaa
adc
popa
sub
inc
mov
mov
in
fld
jo
mov
shl
dec
mov
pop
sub
add
test
scas
mov
push
pop
push
mov
fucomip
pop
adc
les
lock
cmp
and
lods
dec
mov
ret
js
dec
jecxz
push
movs
mov
loopne
or
mov
cmp
inc
jg
pop
cmps
sti
and
sbb
cld
dec
arpl
call
loope
jno
out
pop
ins
shr
add
push
jno
shl
imul
sub
mov
test
rol
xchg
out
jmp
popf
mov
and
cmp
ret
or
sbb
and
cmp
out
sbb
or
adc
add
add
lds
sbb
and
pop
dec
push
adc
das
enter
push
bound
mov
data16
shl
add
mov
fisub
icebp
mov
les
xor
add
or
jne
ror
inc
je
shl
inc
inc
addr16
adc
fidiv
push
xor
popa
sbb
outs
js
aaa
inc
push
movs
out
xor
ins
xor
pop
shr
lods
in
fidivr
mov
test
xchg
imul
push
daa
mov
pop
fdiv
xchg
xor
enter
jg
add
pop
mov
or
(bad)
mov
pop
pop
stc
fmul
or
in
outs
mov
push
pusha
pop
mov
int3
inc
and
inc
fwait
popf
mov
add
sub
inc
add
inc
push
adc
sub
add
sub
and
or
rol
and
test
ret
or
daa
aam
cmp
sar
bound
ret
inc
inc
aad
aam
adc
push
push
scas
xchg
aam
and
dec
sbb
out
ficom
rol
ja
jge
(bad)
adc
popa
popa
ins
sub
dec
sbb
ss
mov
sub
sbb
sbb
sbb
jmp
shl
mov
les
rcr
jne
dec
pop
popa
call
mov
or
loopne
shr
dec
pop
dec
inc
cmp
pusha
add
sub
sahf
and
sub
iret
or
adc
mov
xor
jo
pusha
or
aaa
mov
or
pop
pop
repz
pop
sar
mov
pop
xor
xchg
sub
jmp
push
movs
lea
push
xor
push
icebp
inc
push
pop
mov
cmp
jle
loopne
dec
sub
hlt
test
repz
push
lods
mov
push
push
ins
ret
push
fsub
inc
dec
sti
iret
add
sub
and
and
dec
lea
cmp
sbb
or
das
cmp
adc
loope
ret
(bad)
mov
and
js
cmps
xchg
dec
sbb
mov
jg
and
inc
daa
ins
or
and
call
or
ret
aad
les
jge
inc
jnp
or
jo
je
xor
rcl
inc
push
imul
cwde
les
jnp
fisub
call
shr
loop
nop
mov
popa
clc
lea
mov
ret
mov
out
aam
fmul
or
sub
adc
add
cdq
or
mov
sub
push
ja
cmps
cwde
sub
jge
inc
dec
mov
inc
sbb
mov
or
rol
push
push
pusha
jecxz
and
stos
inc
sub
inc
sub
mov
inc
jg
cmp
jnp
icebp
jge
(bad)
fcmovbe
or
mov
outs
mov
add
add
sub
fcom
fild
push
adc
pop
enter
fisttp
fild
pop
and
inc
pop
(bad)
and
inc
adc
neg
cmps
cmps
aad
xchg
xchg
pop
and
sbb
shr
or
and
adc
out
add
mov
mov
mov
add
arpl
cvttps2pi
cmp
bswap
xchg
pop
pop
sbb
shl
mov
inc
adc
addr16
jmp
mov
sub
or
adc
cmp
cwde
jnp
test
pop
xchg
sbb
inc
jmp
movs
cmps
jo
jns
add
fisttp
push
adc
sub
pop
mov
dec
fadd
sar
mov
mov
fs
ret
dec
lea
jnp
sbb
je
in
sub
cdq
jne
in
rol
mov
sub
test
aam
movs
jb
int3
call
push
add
aam
xchg
or
inc
imul
and
addr16
or
mov
loopne
cld
popa
movs
cmps
xor
nop
lock
dec
dec
dec
push
xchg
lods
fist
imul
or
inc
xchg
add
pop
push
daa
arpl
cwde
or
out
adc
das
push
mov
pusha
movs
or
mov
loope
mov
dec
push
das
inc
in
adc
mov
inc
out
push
mov
dec
jae
pop
in
fmul
add
test
into
cmp
sbb
push
sbb
(bad)
cwde
jo
je
mov
mov
dec
add
mov
push
in
cmc
push
mov
cmp
mov
lahf
xor
push
jae
int
push
xor
ret
fisttp
(bad)
sub
and
das
ja
rcr
cs
mov
in
sbb
dec
mov
pop
jmp
call
fcom
xchg
xchg
sbb
mov
mov
xchg
or
sub
dec
in
push
popa
call
mov
fsubr
test
shl
fldcw
stos
js
inc
sub
mov
or
dec
stos
hlt
push
mov
pop
pop
fsubr
dec
mov
or
dec
(bad)
sub
ret
mov
dec
(bad)
mov
xchg
xor
pop
push
shr
xchg
and
icebp
inc
aas
ficom
and
xchg
js
sub
xchg
xor
cdq
cmc
retf
je
lods
mov
cmp
les
add
inc
mov
sub
jg
xlat
mov
sub
mov
pop
add
ins
or
aas
xor
ins
mul
nop
mov
loopne
add
rol
imul
fadd
and
add
jmp
enter
add
(bad)
jmp
pop
daa
adc
mov
jae
aaa
mov
adc
push
push
add
push
fist
add
into
mov
repnz
pop
cmp
sbb
iret
test
je
adc
es
pusha
es
fcmovb
cli
sub
inc
or
or
jb
inc
inc
or
add
mov
cmp
mov
scas
sub
adc
sbb
je
int
in
inc
adc
fild
jp
inc
xlat
scas
add
add
mov
add
and
pop
mov
lahf
fiadd
fst
xor
dec
sbb
outs
inc
pop
push
test
or
jo
out
add
and
hlt
mov
adc
test
jmp
mov
pop
and
cmps
adc
jno
xor
push
add
les
cmp
inc
mov
cli
jnp
mov
iret
xchg
iret
repz
out
push
sbb
loope
lds
pavgb
aad
movs
cmp
push
iret
fild
inc
or
shr
movs
cdq
bound
adc
mov
cdq
inc
sbb
int3
dec
add
dec
dec
call
dec
and
dec
mov
add
xchg
pop
ret
test
sbb
sub
pusha
ret
mov
push
and
cmps
mov
xchg
mov
cmp
popa
mov
inc
cmp
aaa
xchg
push
pusha
adc
scas
retf
jmp
dec
xor
pusha
ficom
xor
dec
fisub
call
sub
or
sub
sbb
movs
xchg
wbinvd
dec
ins
ds
cmp
push
cmps
ds
xchg
add
retf
sbb
arpl
jne
lea
or
and
das
adc
int3
xor
or
xchg
adc
inc
je
arpl
outs
mov
out
mov
jb
add
adc
in
inc
sub
pusha
pop
in
and
mov
out
push
int
fwait
movs
scas
push
mov
or
or
scas
dec
lods
and
pop
(bad)
xlat
sbb
and
or
shl
push
cmc
xor
shl
push
ret
lfs
mov
fldenv
cdq
int3
cmps
push
mov
out
sub
imul
jecxz
(bad)
loop
push
pushf
push
add
push
push
mov
outs
inc
sahf
cmp
inc
mov
add
or
in
ror
rol
mov
out
xor
sar
sbb
add
idiv
pop
and
cs
dec
(bad)
and
pop
cmp
jp
or
push
add
mov
or
and
push
push
fs
xor
mov
dec
push
mov
fs
add
lds
outs
cmp
add
fld
and
mov
(bad)
xor
cvttps2pi
iret
sub
mov
adc
aaa
cmp
jnp
mov
dec
mov
inc
or
nop
scas
imul
aas
je
dec
adc
pop
aad
adc
and
cmps
dec
adc
sbb
sar
ins
sub
out
stos
and
aam
cmp
loopne
xor
aam
les
jle
pop
adc
sbb
inc
jnp
rol
es
lea
push
or
cwde
dec
mov
inc
loopne
out
push
mov
or
mov
or
es
popa
sub
cwde
inc
js
dec
arpl
cmp
enter
inc
cdq
je
shl
mov
and
cmp
push
cs
mov
ret
ss
ror
retf
jmp
adc
and
xor
sar
push
xchg
xchg
mov
test
adc
out
add
dec
imul
mov
cmps
add
inc
and
mov
jmp
cmp
stc
test
aam
mov
jge
xchg
add
aam
lea
in
mov
outs
aaa
or
or
xchg
xor
add
fsub
push
fild
(bad)
call
ja
sub
and
xor
xchg
xor
cmp
fmul
inc
scas
inc
add
xchg
sbb
inc
leave
lock
test
dec
mov
imul
sub
lods
mov
lock
or
xor
lods
inc
sbb
xor
xlat
adc
lock
shl
and
sbb
imul
ja
sbb
adc
sbb
and
(bad)
mov
pop
push
add
mov
inc
and
ins
enter
dec
xchg
xor
(bad)
sar
adc
aaa
popf
out
cmps
je
aaa
cmp
test
ins
ss
ret
bswap
retf
jbe
shl
loope
jl
imul
lods
jmp
and
jmp
push
jg
(bad)
dec
dec
into
outs
(bad)
jmp
xor
mov
ss
popf
out
adc
xor
push
dec
inc
dec
sub
mov
or
mov
nop
xor
jb
mov
ja
hlt
xor
popf
retf
add
and
inc
aas
xor
adc
pop
fimul
jle
rcl
jmp
(bad)
mov
mov
loopne
mov
push
mov
sub
sbb
inc
mov
daa
and
pop
mov
in
pusha
lds
or
adc
aam
nop
add
outs
es
xchg
mov
mov
or
lds
mov
adc
push
cli
add
sub
mov
pop
scas
and
bound
das
xchg
std
sub
cmp
jb
and
ret
inc
inc
inc
jae
stos
stos
add
or
loopne
cmovnp
jg
add
mov
inc
mov
push
add
ss
and
retf
les
mov
movs
test
rol
push
adc
mov
jmp
mov
jae
mov
outs
adc
mov
sub
add
ins
mov
add
xor
jbe
sbb
adc
cmp
cmp
loopne
push
xor
and
xor
clc
sar
out
sub
inc
jmp
sti
xchg
inc
mov
xor
mov
jmp
clc
or
call
stc
mov
mov
mov
jmp
test
ud2
inc
clc
mov
or
jmp
xlat
ss
xchg
jmp
push
shr
or
add
pop
and
int
fist
push
rcl
inc
rol
sbb
int
rcr
and
inc
rcr
aam
pop
and
sub
sub
pop
and
inc
xor
xor
int
shl
cmp
fiadd
pop
cmp
add
lock
xchg
inc
call
xor
imul
add
add
in
cs
dec
adc
adc
adc
sub
mov
add
cmp
shl
(bad)
sub
or
pop
dec
xor
and
cmp
xchg
xor
or
jae
xor
and
xchg
xor
dec
and
and
pop
dec
jae
sub
inc
sub
dec
mov
xor
add
sbb
xor
jmp
push
adc
adc
adc
cmp
pop
cmp
mov
adc
and
cmp
dec
xor
and
dec
cmp
imul
sbb
out
and
xor
cmp
sbb
or
cmp
sbb
or
out
push
pushf
dec
sbb
xchg
xchg
add
adc
out
js
jmp
jmp
xor
adc
jl
sbb
dec
shr
xor
mov
test
and
sub
xchg
mov
nop
imul
sbb
xor
adc
sub
push
test
add
mov
adc
and
outs
xlat
add
fmul
shl
rcl
adc
add
or
or
cs
inc
test
pop
fwait
mov
les
xor
xor
mov
sbb
out
(bad)
cmp
iret
pop
test
gs
xchg
ja
ret
sub
(bad)
aam
sbb
cwde
cmp
fld
dec
into
arpl
rcl
lahf
test
mov
pop
jle
dec
shl
xchg
mov
or
add
xchg
ret
icebp
repnz
cmp
loope
add
jno
mov
and
fs
mov
outs
enter
add
xchg
out
inc
jmp
fsub
xchg
test
fwait
push
push
lock
dec
mov
div
sbb
add
arpl
cs
jnp
cmp
imul
jnp
lea
leave
stos
or
inc
call
popa
or
xchg
sbb
xor
sti
cmp
repz
mov
je
or
sbb
jecxz
js
je
(bad)
pop
add
inc
dec
jne
into
dec
and
sub
xchg
xchg
xchg
xchg
movs
mov
xchg
xchg
xchg
nop
mov
mov
clc
out
clc
pop
je
and
push
mov
push
mov
jne
in
movs
or
lock
bswap
leave
leave
leave
call
leave
leave
leave
fcom
ror
leave
leave
leave
leave
enter
adc
xchg
ins
add
test
call
push
cdq
nop
aaa
mov
jo
or
stc
aas
pop
push
add
add
inc
add
push
aas
mov
mov
clc
rol
pushf
or
dec
loopne
or
or
sti
scas
or
push
pop
mov
inc
jl
mov
das
pop
arpl
test
push
add
cli
fld
movs
push
lds
xlat
mov
mov
xor
leave
cdq
int
cli
sub
adc
fucomp
or
outs
(bad)
sbb
les
ret
or
daa
es
add
mov
stos
js
sbb
in
pop
inc
xchg
push
and
scas
sbb
and
add
jbe
cmp
mov
push
and
lahf
mov
rcl
and
leave
nop
in
dec
pop
fsub
sub
or
or
jb
or
adc
cwde
push
xchg
or
daa
aas
iret
and
cld
push
sub
loopne
cmp
aam
dec
jb
and
fcomp
and
xchg
pushf
fsub
loopne
cmp
leave
in
mov
leave
popa
(bad)
push
jg
cld
push
xchg
mov
ror
ins
outs
jae
std
and
or
add
push
fld
adc
sti
sbb
mov
lock
xchg
push
test
cmp
cli
cmp
out
imul
mov
add
xor
inc
stos
xchg
and
xor
ret
xor
mov
jns
xchg
xlat
add
retf
xchg
lahf
(bad)
std
call
mov
xlat
xchg
lea
mov
pop
pop
adc
xchg
pop
mov
mov
iret
xchg
jmp
cmps
test
clc
or
push
hlt
jmp
mov
scas
push
adc
push
sbb
pop
lock
push
dec
fcom
push
nop
es
in
jmp
inc
not
add
rcl
aas
cmp
(bad)
sbb
ja
or
xchg
fst
xchg
jmp
arpl
iret
aas
dec
push
jno
xor
mov
push
mov
retf
sub
mov
scas
mov
or
cdq
dec
out
std
sub
add
cmp
shr
xchg
test
adc
aam
popa
je
or
jb
stos
push
jmp
bound
push
jae
inc
cli
add
imul
jo
dec
das
enter
and
aas
in
add
ret
or
inc
pusha
dec
ja
inc
cmp
sahf
push
in
fdivr
pop
retf
mov
xchg
add
inc
sahf
daa
in
inc
add
pusha
mov
sahf
pop
add
mov
pop
repnz
or
jo
enter
mov
or
xchg
add
je
scas
dec
in
and
mov
pop
push
cmps
sub
mov
add
mov
push
inc
je
mov
mov
lahf
and
inc
xor
push
(bad)
and
pop
and
mov
adc
(bad)
int3
mov
or
push
mov
enter
imul
and
fist
mov
jne
xchg
push
add
inc
adc
add
push
mov
les
dec
dec
daa
mov
pop
js
cmps
popf
xor
fisttp
daa
mov
pop
xchg
dec
and
iret
lds
ins
pop
pop
cwde
iret
adc
nop
add
sub
xor
push
ins
mov
js
xchg
loopne
das
pop
sub
or
cmp
add
in
cmps
aam
xor
cmp
cmp
inc
ds
pushf
call
dec
cmps
shl
(bad)
push
pop
mov
pusha
fs
ins
push
in
mov
adc
add
cli
div
ds
ret
ret
inc
scas
sub
cmp
sub
ja
xchg
pop
js
add
inc
cmc
mov
movs
and
xor
jne
lahf
cmp
jg
push
sub
jmp
cmp
rcl
pop
pop
add
je
imul
pop
into
add
out
pushf
add
arpl
mov
nop
fs
jl
sub
or
ja
adc
loopne
add
push
retf
push
add
out
or
adc
pop
popa
and
inc
jne
xchg
push
popa
rcl
aaa
das
inc
psraw
adc
or
sub
pop
lea
in
movs
jns
push
je
jl
add
mov
push
ret
daa
hlt
imul
fmul
inc
mov
sbb
inc
loope
enter
sbb
ja
test
dec
in
div
mov
add
xor
ret
and
jmp
loopne
cmp
(bad)
cmp
fcom
mov
(bad)
sahf
jbe
stc
inc
je
ret
xchg
adc
inc
cli
cmp
mov
arpl
sbb
jns
retf
adc
add
push
iret
sbb
icebp
mov
imul
pop
inc
mov
xor
pushf
sbb
jmp
jnp
add
add
fbstp
add
cs
fimul
xor
push
aam
add
aaa
xchg
(bad)
sbb
add
or
in
add
push
push
push
jbe
aam
cmps
add
dec
(bad)
ins
or
loop
lds
adc
int
in
xchg
cmps
je
inc
or
inc
inc
addr16
(bad)
(bad)
dec
jl
jp
rcr
mov
nop
clc
lods
adc
dec
pop
xchg
lock
fs
sub
mov
mov
push
and
cdq
mul
adc
push
xchg
out
inc
sbb
hlt
fmul
mov
and
pop
in
pop
in
and
add
mov
cmp
pusha
cmc
mov
(bad)
hlt
int3
inc
xchg
cmp
add
mov
xor
das
add
ds
xchg
test
pop
in
push
cmp
lock
ja
mov
fmul
jl
inc
mov
add
push
push
inc
(bad)
imul
enter
or
shl
cmp
sbb
es
dec
or
sub
cmovnp
jns
out
or
imul
repz
js
cmp
dec
clc
and
dec
outs
xchg
push
out
movups
dec
dec
dec
or
cld
sar
xor
sahf
xchg
jno
inc
xor
imul
sub
sbb
mov
add
and
pop
test
push
xchg
add
push
movs
pushf
mov
push
sbb
int3
gs
sub
mov
or
in
(bad)
cld
dec
in
xchg
enter
sbb
add
jnp
ret
rol
add
or
push
mov
adc
repnz
je
sar
aaa
dec
xor
jle
data16
retf
pop
dec
pop
pusha
fcmovnu
mov
aaa
das
arpl
imul
ins
jnp
add
ins
pop
jne
adc
aas
push
push
ffree
(bad)
out
js
cmps
jge
jge
pop
fidiv
push
or
fiadd
inc
in
adc
or
in
mov
dec
cs
mov
int3
ss
retf
mov
pmulhuw
jae
jecxz
(bad)
add
push
pusha
xchg
adc
xchg
or
gs
call
in
lock
hlt
nop
retf
sbb
xor
dec
add
inc
add
or
add
xchg
or
adc
sbb
and
push
movs
xor
and
sub
xchg
dec
push
add
sub
jne
movs
xor
xor
and
push
push
xchg
adc
xlat
add
adc
inc
sub
mov
inc
pop
push
add
daa
stos
inc
sbb
push
mov
push
(bad)
adc
add
xchg
mov
jbe
and
fstp
inc
add
fidiv
call
(bad)
in
adc
push
jae
(bad)
add
jo
gs
inc
or
imul
mov
imul
or
inc
cmps
push
push
fld
sbb
aaa
scas
cmp
sbb
add
or
(bad)
and
push
pop
push
push
test
dec
sub
test
xor
ds
or
lahf
add
adc
or
xchg
test
adc
push
push
sub
xor
cmp
sub
jg
adc
in
jbe
adc
dec
jge
cdq
jle
mov
mov
lods
ret
mov
lea
xchg
xor
mov
push
outs
jnp
adc
pusha
fst
lahf
fwait
add
adc
add
dec
lds
inc
popa
or
inc
add
(bad)
pusha
fiadd
inc
clc
add
in
scas
lea
add
and
jmp
outs
shl
push
adc
sub
jbe
pusha
sub
sub
jae
xor
add
ret
cmp
cmps
mov
loop
sub
(bad)
fdiv
push
add
not
sbb
div
ins
or
sti
inc
(bad)
push
(bad)
inc
dec
in
sbb
adc
pop
neg
mov
sti
pop
sub
popf
adc
inc
pcmpeqw
xchg
test
clc
fistp
sar
pop
cmp
jle
and
hlt
pushf
arpl
ja
aam
arpl
rol
add
push
adc
ficomp
dec
and
shl
adc
push
ins
lea
sbb
test
int
inc
add
push
xor
stos
test
lea
dec
test
mov
pop
sahf
jno
jg
adc
sbb
ret
and
or
fiadd
pop
and
mov
mov
mov
mov
sub
add
inc
sub
jo
pop
jno
mov
imul
rcr
jo
jb
and
retf
xor
inc
add
or
or
imul
add
ret
and
ja
pop
les
xor
and
test
pop
pop
pop
push
in
xchg
lds
in
xchg
push
js
xchg
iret
bound
enter
mov
icebp
lods
xor
xor
mov
popa
lods
fst
push
or
int
sbb
and
xchg
sub
mov
sub
or
popf
cld
cwde
add
mov
ffreep
ds
sub
sub
add
lahf
xor
xor
shl
and
add
push
push
imul
adc
or
push
ror
and
push
push
add
pop
pop
jge
or
jge
push
aaa
sbb
push
push
fmul
popf
inc
jp
push
or
jo
sbb
aas
mov
cmp
push
dec
adc
jb
jmp
cmp
es
mov
ss
cmp
jmp
sub
pop
dec
iret
or
or
sub
out
mov
scas
cmp
shl
daa
test
xchg
mov
xchg
je
ss
jo
add
sahf
idiv
or
stc
or
fild
add
je
test
fdivr
or
pop
loope
cmp
loopne
movs
fbstp
add
adc
std
add
mov
mov
fstp
mov
(bad)
outs
add
inc
or
aad
adc
nop
sbb
addr16
fld
cmps
and
nop
sub
cmp
pop
add
rol
inc
inc
pop
sbb
adc
xchg
add
dec
es
jg
adc
inc
outs
inc
add
outs
cmove
xchg
push
pop
test
hlt
mov
enter
lods
mov
or
call
jns
lea
cmp
lds
imul
dec
mov
and
and
mov
fdivr
jnp
sbb
xor
cmps
retf
mov
and
sbb
cmps
jno
xchg
lea
rol
pop
push
push
xchg
ja
jecxz
shl
mov
test
dec
ror
mov
outs
stos
dec
clc
push
sub
fcom
add
cdq
leave
inc
mov
dec
es
mov
setp
hlt
jl
and
test
es
mov
and
je
xchg
mul
inc
ret
sub
or
in
xchg
(bad)
aas
rol
and
dec
sub
test
(bad)
sub
sub
cs
cmp
and
loopne
dec
aaa
dec
aas
aas
scas
push
ret
fsub
xor
into
ins
loop
inc
jg
sbb
clc
loop
jecxz
add
rcl
jmp
mov
cmp
push
push
sbb
test
xchg
outs
(bad)
clc
das
ins
dec
push
and
aaa
mov
add
sbb
mov
(bad)
inc
data16
les
sti
pop
add
lods
das
add
and
xchg
xchg
pushf
inc
inc
(bad)
shl
call
cdq
(bad)
cmp
mov
adc
inc
sbb
imul
(bad)
cmc
cmp
inc
ffree
dec
adc
mov
cmp
add
(bad)
aam
icebp
push
sbb
inc
jae
xchg
or
es
outs
stc
pop
cmp
paddusb
push
adc
add
inc
adc
pop
push
cmps
sub
push
and
push
dec
cmps
jge
or
adc
inc
lahf
cmp
test
inc
mov
push
or
inc
dec
lar
or
popa
je
xor
dec
push
push
cmp
xor
pop
ret
dec
shl
jg
jle
ror
add
add
push
aam
dec
dec
loop
or
jb
inc
adc
fdivr
paddusb
jo
push
add
dec
sub
push
enter
lahf
or
in
sbb
jmp
push
sub
dec
scas
nop
out
(bad)
ins
xor
inc
xchg
add
pop
test
or
scas
nop
shl
cld
and
jnp
outs
adc
clts
data16
shl
movs
in
push
sub
push
mul
jecxz
jg
and
and
clc
cmovns
vmovdqu
push
imul
loope
lods
xor
adc
jle
mov
add
ja
aas
stos
sbb
fs
ins
jo
pusha
js
jb
add
out
push
pop
cmp
outs
(bad)
xor
stos
add
inc
movs
call
or
retf
mov
xchg
and
jae
or
outs
or
mov
mov
push
imul
or
jb
ret
(bad)
out
add
cmp
xchg
shl
xchg
mov
adc
sbb
outs
fadd
dec
movs
bound
inc
inc
xor
dec
adc
bnd
xchg
dec
mov
out
adc
inc
test
jmp
gs
into
dec
xchg
lods
mul
je
add
xlat
(bad)
(bad)
xchg
scas
sub
out
scas
sbb
push
xchg
rol
pop
push
push
in
outs
jbe
movs
or
add
add
mov
adc
or
sbb
sbb
push
test
cs
call
iret
sar
push
sbb
fnstcw
sub
push
or
(bad)
out
fcos
mov
push
add
nop
sub
sbb
adc
imul
es
adc
cs
ins
sub
sub
pop
daa
jecxz
ret
jae
push
(bad)
in
cmp
and
ss
or
stos
shl
sahf
out
fimul
inc
adc
movs
and
out
iret
jnp
ds
push
ins
and
repz
sahf
pop
sub
xchg
xor
js
mov
xor
xchg
les
pop
movs
push
mov
test
push
scas
sub
or
sahf
cmps
pop
add
adc
pop
shl
xchg
mov
shr
bswap
push
lahf
dec
xor
aaa
push
sbb
mov
movs
pushf
jge
gs
dec
jle
ror
sahf
repz
dec
or
shr
loopne
xlat
dec
daa
dec
sub
push
retf
inc
or
pop
int3
dec
mov
retf
or
ins
sub
cs
dec
imul
add
es
or
xchg
adc
or
adc
and
add
dec
cmp
outs
jmp
sub
mov
pop
punpckhbw
dec
xchg
js
out
test
inc
repz
dec
dec
cld
mov
dec
ins
test
mov
xor
neg
push
int
sbb
mov
lds
or
or
sbb
mov
pop
sub
push
cmp
adc
das
xor
push
test
or
pop
sbb
mov
adc
mov
or
clc
in
dec
ins
pop
fist
sub
or
lahf
in
xor
js
adc
push
add
call
shl
cmps
jne
cmp
push
sti
push
xchg
xchg
xchg
xchg
or
adc
(bad)
jb
imul
jb
jb
xor
sar
sub
add
dec
sbb
xchg
or
xor
or
and
sbb
cmovb
mov
imul
and
icebp
pop
nop
mov
sbb
scas
mov
das
adc
jns
das
adc
dec
inc
inc
arpl
push
and
enter
dec
push
enter
xchg
sub
hlt
inc
pop
pop
scas
ss
addr16
fcomp
inc
and
dec
inc
daa
lods
pop
jle
inc
xor
cmp
sahf
xor
add
retf
jmp
push
mov
fbld
push
adc
mov
out
jnp
mov
repnz
inc
inc
cmp
mov
dec
or
ret
sbb
mov
mov
lods
dec
sbb
and
sbb
inc
or
leave
and
jns
or
dec
cs
inc
dec
adc
pop
fiadd
repnz
or
dec
aaa
adc
cmp
lods
push
xor
mov
into
arpl
scas
mov
cmp
mov
addr16
(bad)
bound
adc
paddsb
push
ret
ss
fmul
ror
test
add
xchg
pusha
mul
cmp
repnz
and
pusha
in
in
add
shr
pop
mov
push
pop
push
rcr
imul
mov
xchg
shl
int
inc
mov
je
retf
push
fwait
and
add
sti
cmp
or
nop
sti
pop
and
fs
mov
dec
rol
or
clc
xor
jmp
add
or
and
inc
icebp
xchg
push
popa
xchg
xor
jecxz
push
or
cwde
ins
pop
lahf
lods
adc
(bad)
mov
and
pop
cmp
out
sar
and
shld
push
push
cmp
icebp
loopne
adc
cmp
jecxz
push
out
mov
ins
and
cmp
adc
outs
and
shl
add
mov
mov
in
pop
jne
idiv
or
(bad)
out
add
add
shl
push
out
mov
pop
ins
xor
mov
add
test
das
je
mov
sub
loopne
lahf
sbb
outs
cs
fwait
cmps
add
xor
loope
or
(bad)
je
pusha
imul
adc
(bad)
mov
or
js
mov
pushf
(bad)
jle
dec
mov
out
je
sbb
xchg
inc
sub
mov
jnp
scas
and
push
dec
sub
xor
ja
add
je
pop
ins
fcomp
pop
pop
(bad)
(bad)
cmp
cld
inc
cmp
in
imul
cmc
ins
add
inc
inc
cs
pop
loopne
pop
xor
mov
sbb
add
idiv
fcom
add
jecxz
psraw
fisubr
pop
adc
test
ret
mov
dec
pop
push
js
xor
and
and
ins
pop
mov
push
push
jecxz
sbb
inc
sti
mov
dec
repz
or
jne
ret
xor
adc
les
stc
outs
das
sbb
cmps
fld
(bad)
(bad)
lea
loop
(bad)
outs
(bad)
xchg
jno
xchg
jo
in
fcmovbe
stos
jb
push
jmp
ins
sbb
inc
outs
retf
mov
add
xlat
shr
dec
push
ss
push
imul
je
fdivr
fiadd
ret
adc
bound
inc
xchg
xor
js
pop
inc
mov
inc
sbb
mov
adc
xor
xchg
lea
pmuludq
(bad)
loopne
cld
sbb
int
sbb
shl
fwait
cwde
retf
mov
xchg
test
add
dec
fmul
mov
cli
pop
repnz
sbb
and
add
add
add
push
shl
inc
test
in
test
or
cmps
adc
inc
jne
cmp
popa
and
xchg
ja
push
dec
hlt
and
sbb
fdivr
mov
imul
mov
mov
jo
sbb
mov
inc
sbb
stc
(bad)
pop
xor
in
inc
outs
pop
add
int3
pop
lea
cmp
cmp
or
inc
pusha
sbb
pop
xchg
loop
or
lods
and
cmp
inc
sbb
or
stos
sbb
mov
add
sbb
sub
es
jb
pop
test
sbb
xchg
popa
cmps
add
movs
or
mov
jmp
mov
or
mov
xor
pushf
cs
pop
inc
push
dec
dec
dec
sub
daa
xchg
dec
inc
push
daa
test
jns
or
call
mov
or
punpckhbw
jmp
add
je
hlt
lea
jb
(bad)
mov
xchg
jo
jge
push
js
mov
or
iret
call
adc
adc
and
xor
ins
cmp
je
push
pop
push
pop
xor
push
je
ret
jl
push
cmp
imul
add
out
out
aaa
cmp
je
push
je
push
xor
jbe
jbe
pop
push
enter
shl
call
lahf
pusha
clc
in
inc
push
xor
cmp
mov
out
push
mov
adc
push
add
push
jns
loopne
lock
sub
or
je
inc
adc
or
pop
sbb
adc
adc
or
push
jp
mov
adc
add
jle
and
test
movs
out
pop
cld
fistp
adc
dec
scas
adc
lea
jle
cmp
jg
div
adc
sub
xor
rcr
pop
sbb
push
ret
sbb
dec
pushf
add
push
lea
dec
sub
dec
cs
sbb
shr
cmp
add
ja
repnz
push
outs
push
or
push
std
stos
or
add
pop
aaa
dec
dec
xchg
cmp
rol
and
inc
(bad)
scas
fs
jl
add
mov
and
push
movs
rcr
xchg
ret
or
(bad)
das
dec
xchg
cmp
mov
das
loope
push
leave
(bad)
cs
jae
inc
add
xor
sub
movs
sub
cmp
aaa
sbb
cli
xor
mov
cli
div
jmp
mov
daa
adc
test
mov
or
mov
enter
and
adc
pop
adc
inc
and
inc
(bad)
dec
cmp
mov
gs
push
pusha
sub
test
pushf
es
js
mov
or
xchg
xor
xor
jns
cmp
mov
mov
test
shr
dec
dec
add
test
or
and
mov
mov
ret
jg
rcr
adc
inc
push
daa
je
and
and
addr16
aas
es
dec
adc
jmp
cdq
je
add
dec
dec
or
adc
xor
and
add
cmp
outs
and
sub
imul
and
sbb
jae
sub
inc
add
add
pxor
mov
inc
mov
js
inc
mov
setl
add
add
cdq
and
fcomp
cmp
sar
push
mov
pop
xor
cdq
jo
aas
inc
adc
jmp
stos
cdq
scas
jge
pop
xor
and
adc
or
(bad)
js
jmp
add
dec
mov
add
xor
dec
stos
cld
xlat
sbb
mov
ins
cmp
ret
movs
sbb
ret
and
jne
pop
ror
add
fwait
inc
mov
and
pop
ins
movs
(bad)
ficom
xor
cmps
test
inc
sub
fidivr
lods
or
aas
(bad)
(bad)
into
mov
add
cmp
cmc
pop
fistp
mov
lea
scas
call
outs
add
inc
pusha
xor
add
or
xor
pop
jne
pop
idiv
imul
neg
mov
sub
fidivr
add
popa
std
push
sbb
lds
add
jmp
pop
inc
sbb
adc
mov
lea
jb
pop
pop
outs
movs
jnp
push
mov
mov
and
sbb
lea
and
js
cwde
ja
push
mov
inc
cmp
inc
clc
sbb
inc
cmp
inc
mov
pop
pushf
fs
test
xchg
in
adc
mov
adc
cmp
mov
add
dec
scas
dec
adc
xchg
and
pop
or
test
inc
and
cmp
inc
cld
dec
sub
xor
sbb
adc
dec
or
and
test
or
mov
les
or
mov
push
sub
pop
push
dec
mov
jecxz
or
nop
inc
aaa
gs
mov
inc
imul
sub
mov
lock
push
lods
dec
jb
rol
mov
xor
hlt
popa
cmp
daa
dec
or
addr16
and
movhps
iret
sbb
(bad)
pushf
nop
or
mov
push
pop
xchg
adc
dec
add
in
xor
adc
push
sbb
mov
mov
hlt
push
mov
inc
aad
xor
and
popa
pusha
por
daa
push
pop
out
fcomp
fs
outs
sbb
inc
mov
hlt
cmps
mov
sub
xor
cld
sbb
in
or
mov
fs
sub
mov
xlat
pop
sar
xor
or
jmp
int
test
dec
inc
mov
add
dec
mov
sub
sub
fs
or
sub
out
cli
xor
jl
xchg
inc
sub
or
xchg
or
aam
and
inc
inc
fbstp
jle
lea
pop
jge
or
outs
mov
lock
or
add
mov
add
in
and
stc
jle
mov
add
retf
mov
xchg
enter
xchg
in
jl
std
in
cld
aas
xor
push
mov
mov
push
cmp
jg
fisttp
pop
sub
(bad)
jmp
push
jbe
push
test
push
mov
sbb
fbld
xchg
daa
icebp
(bad)
leave
call
mov
dec
cmps
test
adc
push
pop
inc
inc
fsub
and
sbb
and
add
cwde
xchg
xchg
push
mov
sub
movs
out
xor
xor
cmp
push
sbb
mov
fcom
cwde
push
and
push
mov
(bad)
inc
add
dec
ret
xchg
adc
aam
enter
sar
stc
or
mov
ror
bound
mov
ja
in
into
inc
pop
dec
or
test
mov
test
adc
js
inc
(bad)
or
and
ja
inc
or
dec
cmovle
xor
jo
sbb
or
or
mov
mov
clc
fisttp
push
retf
xor
fst
sub
movs
push
pop
dec
add
dec
sub
or
mov
loope
add
aam
add
idiv
xor
xor
add
ret
adc
jle
cwde
adc
sbb
sar
mov
add
dec
inc
jae
daa
xchg
adc
mov
pop
sbb
stc
ins
aaa
inc
jmp
xchg
or
xchg
xchg
xlat
dec
cmp
ja
push
rcl
test
adc
call
pop
es
sbb
or
and
mov
dec
jnp
push
cwde
adc
test
xor
jecxz
adc
xor
sbb
sub
jg
outs
sub
lea
sbb
sti
sub
add
pusha
fdiv
mov
or
jmp
xchg
or
out
push
fs
cwde
cmp
sbb
je
mov
test
fwait
pop
imul
add
mov
adc
sbb
and
in
aaa
lods
jmp
cmp
xchg
jmp
mov
push
push
fldenv
loope
fwait
add
dec
mov
add
dec
jmp
test
sti
movs
movs
pop
add
sub
push
mov
pop
inc
mov
dec
pusha
push
add
std
neg
ins
push
push
int
xor
and
nop
in
enter
add
fidiv
mov
dec
inc
pop
sbb
or
add
fimul
add
mov
mov
add
mov
cdq
or
scas
and
sub
fadd
jb
inc
pop
fcmovnbe
out
aas
in
mov
cmp
and
inc
outs
jne
rcr
in
inc
inc
add
ss
and
cli
call
(bad)
sub
or
mov
or
add
add
or
xchg
out
ss
adc
add
and
cmp
mov
jl
fwait
cdq
dec
es
lods
aam
dec
(bad)
outs
and
jmp
ins
bound
inc
pop
adc
cmp
jmp
and
hlt
fist
ret
jge
into
dec
jmp
pop
mov
and
into
mov
pop
mov
mov
add
dec
cmp
sub
dec
and
inc
mov
jp
or
or
or
inc
or
test
call
dec
inc
aas
or
or
or
inc
je
or
loop
lds
jle
cmp
cmc
test
inc
xor
pop
daa
enter
add
add
fmul
mov
hlt
into
jnp
ds
adc
mov
sub
xchg
adc
in
dec
xchg
xor
dec
retf
clc
and
xchg
jno
bound
test
aaa
add
int
inc
cmp
xchg
adc
jmp
enter
stc
mov
adc
xchg
cs
push
jne
push
mov
jo
adc
cmp
cmp
mov
xchg
xlat
sbb
inc
ss
out
mov
and
ja
adc
add
adc
push
sub
fwait
push
lock
in
xchg
test
cmp
and
repz
sub
add
dec
in
lods
mov
pop
push
dec
retf
push
add
cmp
test
mov
and
shl
mov
jns
adc
push
pop
pop
push
inc
test
pop
sbb
xchg
icebp
or
push
adc
lock
xchg
xor
sub
push
or
mov
les
mov
push
pop
bound
adc
in
sub
inc
cmps
idiv
and
rcl
sub
and
add
ret
adc
fist
sub
adc
lock
pop
ins
push
fist
shl
cmc
repz
xor
sub
push
out
or
mov
fs
push
add
sbb
add
or
bound
nop
data16
nop
lods
in
and
loopne
dec
pop
cdq
imul
add
test
jb
lods
and
fmul
retf
push
cmp
cmp
add
or
test
inc
popf
push
rol
cmp
ret
mov
call
and
jecxz
cmp
add
lods
cmps
xchg
loop
sbb
hlt
push
mov
and
mov
sahf
je
or
pop
shl
lods
push
rcl
dec
pusha
inc
test
jle
adc
outs
or
gs
inc
mov
jle
jo
fcmovnu
imul
adc
xchg
(bad)
(bad)
mov
bound
jl
xchg
dec
test
aaa
dec
or
pop
add
mov
jne
ffree
dec
lods
add
mov
add
sbb
das
call
adc
out
or
out
xchg
jbe
dec
sbb
mov
push
inc
aaa
hlt
loopne
adc
mov
xor
mov
std
cmps
and
or
in
fild
fdiv
sbb
jmp
pop
popa
jb
inc
mov
shr
dec
sbb
adc
inc
sub
ret
lock
inc
add
dec
jne
mov
xchg
pop
das
add
sbb
inc
adc
imul
aas
fcomp
push
fcom
or
cmp
and
inc
psubusb
add
repnz
inc
pop
jno
inc
imul
mov
dec
push
xchg
dec
lea
mov
push
cmp
test
mov
dec
inc
ja
push
je
or
arpl
in
mov
cs
sbb
pop
ret
xchg
push
(bad)
pop
sbb
lea
add
adc
fs
xor
add
in
(bad)
mov
push
pop
ins
adc
adc
daa
fs
jl
jmp
xchg
cwde
gs
sbb
adc
dec
(bad)
adc
aam
xor
inc
out
xor
push
lock
or
in
cmp
adc
inc
jmp
add
add
jno
popa
pop
xchg
adc
push
adc
arpl
or
dec
pushf
xor
fisttp
push
sub
cmp
jmp
ss
or
push
push
(bad)
call
es
arpl
daa
je
ins
outs
popa
and
jb
jb
push
push
sub
push
ins
or
daa
stos
pop
arpl
cdq
mov
pop
daa
or
retf
xor
add
sbb
popa
pop
add
add
iret
mov
retf
and
test
fstp
shl
cmp
inc
or
jmp
and
push
adc
jmp
xchg
sub
dec
cdq
xchg
or
jmp
or
xor
add
push
mov
outs
or
add
pop
icebp
data16
sbb
pop
push
add
dec
das
loope
mov
test
je
fimul
pop
xlat
or
and
and
jmp
jnp
mov
dec
js
dec
and
gs
add
into
jnp
fldcw
clc
ret
pop
or
and
mov
or
mul
in
mov
sub
xlat
hlt
add
adc
pop
jmp
add
dec
add
or
adc
in
mov
lds
jae
push
imul
pop
sahf
inc
movs
imul
inc
cmp
cmps
adc
cld
test
pop
push
stc
mov
call
jge
dec
pop
je
xor
push
and
mov
dec
push
mov
and
inc
sar
cmp
hlt
mov
stc
shl
test
mov
push
dec
xor
cmp
aas
xor
lods
shr
add
pop
adc
adc
and
mov
invd
and
adc
inc
retf
adc
daa
adc
fdivr
lea
cdq
ret
or
(bad)
pop
sbb
mov
fisttp
mov
fadd
mov
ins
pop
rcl
sub
push
(bad)
rol
pop
pop
call
test
inc
xchg
inc
jl
and
shl
jae
push
xor
test
sbb
add
sub
or
das
rol
ja
movs
xchg
xor
cli
sahf
(bad)
fwait
arpl
dec
xor
xor
inc
test
fnstsw
or
mov
add
xor
ins
xor
inc
push
outs
mov
pusha
jne
push
xor
movs
mov
outs
std
dec
in
dec
dec
inc
inc
inc
pop
dec
push
pop
push
dec
inc
dec
inc
cdq
pop
and
daa
sbb
inc
and
and
ss
pop
pop
mov
adc
inc
imul
add
js
or
and
jns
or
addr16
or
push
adc
add
iret
inc
xchg
inc
or
leave
mov
call
dec
pop
imul
ret
sbb
scas
jbe
mov
adc
test
pop
inc
call
bound
mov
inc
fiadd
in
adc
jnp
sub
aad
push
adc
ror
aaa
shl
rcr
pusha
pop
loop
pop
adc
mov
in
or
das
push
jecxz
inc
rcr
dec
adc
(bad)
adc
dec
xor
loopne
xlat
or
push
jg
jecxz
ret
fstp
inc
sub
js
and
enter
outs
xor
or
sub
xor
jns
push
add
rcr
jns
bound
xchg
out
cmp
adc
pop
and
jnp
ss
jne
cwde
ror
push
push
adc
add
ins
jmp
cmp
push
sub
sbb
push
xchg
enter
dec
xchg
call
mov
(bad)
inc
repnz
inc
inc
push
sbb
or
mov
mov
push
cmp
add
lods
pop
cdq
inc
retf
jne
aad
jle
les
imul
adc
and
xor
push
das
sub
mov
pmulhuw
xor
popa
adc
in
mov
nop
bound
mov
ins
xor
adc
dec
out
push
push
sbb
dec
push
outs
adc
out
stos
cmp
lods
sar
add
call
aam
add
jl
and
or
iret
not
and
mov
dec
push
or
push
push
loopne
push
add
out
jb
jb
xor
and
push
hlt
jb
adc
daa
aas
clc
out
shl
daa
jl
or
loopne
imul
push
mov
(bad)
jecxz
rcr
rol
sub
xchg
push
lock
ins
aaa
imul
sub
and
dec
or
dec
aas
mov
xchg
or
mov
cld
push
fs
inc
or
push
out
movs
movs
in
or
add
out
jne
in
jl
fst
lea
inc
push
ficomp
and
or
push
mov
push
or
add
pusha
fucomp
mov
jmp
lods
nop
and
cwde
test
popa
add
push
or
and
xchg
or
clc
mov
inc
adc
sbb
hlt
sbb
mov
inc
and
sub
jo
mov
mov
pop
mov
fnstsw
adc
xchg
sub
aaa
mov
arpl
clc
adc
mov
inc
pushf
xor
out
sub
pop
hlt
add
pushw
or
and
mov
sub
sub
hlt
jecxz
out
in
xlat
in
add
mov
sbb
mov
sbb
std
dec
xchg
push
and
mov
add
ret
pushf
addr16
aad
push
(bad)
test
verw
push
dec
outs
xor
aam
out
daa
pop
xchg
push
push
lahf
push
lahf
lock
nop
sub
sub
jl
push
rcl
sub
jmp
add
xchg
sbb
sub
sub
and
xchg
imul
sub
inc
and
pop
jo
enter
call
and
cs
sbb
dec
mov
add
adc
test
cwde
aad
pop
cli
xchg
xchg
and
pop
add
inc
call
sbb
xchg
xchg
int3
cmp
inc
pop
or
gs
inc
pop
pop
hlt
cvtps2pi
or
and
inc
retf
push
push
xlat
inc
sbb
rol
add
xchg
js
js
es
lock
dec
ror
ja
jb
adc
sub
inc
mov
leave
dec
pop
fadd
mov
xor
jmp
(bad)
cmp
nop
xchg
sub
xlat
jl
add
or
mov
or
pop
sbb
jo
cld
xchg
fsubr
cmp
add
in
lods
lea
movzx
push
push
iret
mov
dec
std
movs
cmps
sbb
dec
les
hlt
lea
cmps
call
jmp
ja
and
lods
daa
pop
fmul
test
jge
out
pop
cmp
dec
aaa
call
pop
mov
mov
shl
adc
sub
(bad)
sbb
test
or
out
shr
jecxz
out
out
sub
and
jae
xor
mov
mov
jg
adc
or
adc
push
scas
mov
and
xor
in
lea
xor
fsubr
add
(bad)
or
not
pushf
and
pop
iret
cli
in
pop
or
std
cmp
je
ret
add
std
pop
mov
inc
jmp
push
cmp
stos
add
and
enter
push
js
xlat
pop
cdq
sbb
xor
sbb
lea
out
xlat
fstp
loop
cmp
sahf
std
rcr
cld
(bad)
and
in
(bad)
cmp
fcomp
add
sbb
cmp
push
and
jae
enter
ins
push
jns
fxch
adc
in
clc
adc
or
pop
in
or
cmp
(bad)
adc
movs
cdq
in
in
inc
cwde
xor
xchg
mov
adc
inc
cmps
sbb
enter
cmp
shl
xchg
sub
(bad)
mov
in
adc
adc
clc
cmps
imul
call
adc
not
push
rol
popa
push
jecxz
rcl
jmp
mov
hlt
hlt
or
cmp
xchg
test
nop
stos
adc
jmp
fldcw
imul
rol
xchg
sub
xor
xor
xor
in
dec
push
xchg
call
inc
jmp
leave
mov
jne
mov
mov
retf
cmps
nop
jne
push
mov
pop
mov
jne
push
rol
movs
sar
or
test
or
adc
dec
popf
cmp
adc
ret
xchg
or
fsubr
fdivr
xchg
jo
cmp
movs
xchg
dec
xor
enter
xchg
or
(bad)
lock
xor
inc
rol
xchg
xchg
loopne
cmp
fsub
or
inc
add
adc
in
sub
enter
cld
inc
mov
adc
cmps
in
cdq
mov
cmp
(bad)
call
hlt
mov
cmp
outs
(bad)
mov
data16
mov
loopne
cs
lods
inc
call
xor
test
dec
sub
add
or
out
in
and
jb
in
in
in
xchg
xchg
jbe
push
push
push
call
hlt
in
lock
add
loopne
and
adc
gs
push
lock
pop
rcl
shl
dec
mov
xchg
sbb
cwde
cwde
push
nop
sbb
aaa
lock
lock
and
fs
inc
iret
enter
push
cld
mov
xchg
mov
test
pop
adc
fld
xchg
cs
pop
cmp
pop
inc
pmulhuw
data16
and
push
add
jg
sub
push
pop
outs
rcr
add
cmp
sbb
jmp
mov
adc
xor
dec
adc
inc
add
push
int3
and
hlt
xor
adc
cmp
pop
add
cwde
mov
and
add
test
out
dec
ret
xchg
push
push
push
adc
sbb
pop
out
dec
adc
push
xchg
xchg
addr16
sbb
mov
(bad)
mov
mov
add
xchg
mov
cs
addr16
ret
mov
das
fist
push
inc
mov
adc
test
aad
xchg
sub
rol
clc
outs
mov
xchg
add
jp
jmp
dec
mov
xor
jle
lock
mov
add
jne
ins
imul
jmp
in
pop
dec
pop
inc
dec
js
inc
adc
sar
jb
mov
xchg
dec
xchg
sar
adc
pusha
je
ret
cmp
in
rcr
xchg
mov
inc
pusha
mov
rcl
add
int
mov
jne
inc
inc
sub
and
push
or
and
push
clc
mov
mov
dec
ds
mov
push
shr
mov
push
aam
call
std
add
mov
add
(bad)
sub
icebp
and
push
sub
push
or
outs
pop
out
loopne
add
cmp
(bad)
loopne
lods
sbb
adc
in
pop
repnz
add
inc
outs
mov
add
sbb
es
pop
(bad)
jne
fwait
cmp
pop
cmp
retf
pop
mov
jbe
popa
pushf
or
and
and
sbb
add
push
pop
or
sbb
or
or
nop
inc
push
or
xor
mov
sub
ret
shr
xchg
xor
push
push
xchg
inc
test
cmp
iret
xor
add
xor
fcomp
fs
outs
xor
xchg
adc
movs
fdiv
inc
or
push
movs
fdivr
pop
bound
rcr
adc
pop
test
mov
test
(bad)
gs
dec
aas
mov
imul
imul
dec
aaa
xchg
js
shr
sbb
sub
and
rcr
add
add
dec
sub
push
cmc
xchg
xchg
pop
ins
xor
(bad)
loop
add
pop
movd
sbb
out
popa
(bad)
push
add
ja
movs
and
in
cli
add
cdq
mov
mov
jecxz
mov
in
add
push
sahf
cmps
or
xlat
(bad)
add
mov
mov
cmp
pushw
outs
mov
dec
test
sbb
pop
pop
and
and
pop
cmp
sub
and
and
jo
push
push
sti
pop
mov
mov
sahf
mov
cli
ins
mov
fs
or
jg
test
jne
or
movq
or
or
adc
(bad)
xlat
push
or
std
pop
mov
or
pop
mov
mov
sub
push
pop
inc
ficom
das
pop
cld
mov
shl
(bad)
mov
push
sbb
outs
inc
fisubr
xor
loop
sub
sar
imul
mov
xor
invd
mov
sbb
xor
dec
rcr
fldcw
mov
iret
mov
and
leave
dec
xor
cmp
add
mov
push
ins
xchg
pop
scas
fild
rol
mov
dec
dec
xchg
sub
loop
call
jmp
adc
cmp
inc
or
sbb
add
jl
mov
sti
loopne
popa
int
inc
adc
push
cld
les
adc
jg
or
add
mov
cwde
fild
(bad)
mov
pmaddwd
xchg
outs
mov
inc
iret
loopne
jle
jae
call
inc
sbb
stos
or
cmp
cmp
hlt
inc
mov
sub
mov
pop
sbb
mov
inc
xor
jae
push
mov
jae
dec
and
sub
and
int
call
pop
adc
js
adc
pop
mov
mov
mov
popa
push
push
push
xchg
add
ret
push
es
ss
outs
cmps
push
xor
add
xor
and
xchg
inc
data16
xor
enter
lods
mov
data16
dec
dec
inc
sbb
adc
aas
pop
xchg
cmp
jbe
pop
xor
retf
scas
push
popf
xchg
psubb
jle
movs
or
mov
mov
and
adc
or
shr
add
sbb
fs
xor
sar
loope
xor
or
mov
pop
int
jno
jecxz
push
cmps
mov
mov
mov
dec
sbb
icebp
nop
(bad)
js
inc
test
mov
je
pushf
in
jbe
shl
callw
ret
and
push
je
aam
cs
std
push
mov
fcmovbe
test
jno
mov
ret
stos
add
inc
push
inc
push
push
sbb
or
rol
clc
cmp
pop
jbe
aam
jo
pop
sub
jnp
push
cmp
mov
je
cwde
dec
lods
cmp
ja
or
jnp
mov
cmp
seto
fst
adc
lods
and
xchg
es
and
shl
pop
sub
mov
or
or
mov
outs
adc
push
fild
dec
add
mov
outs
ror
aaa
adc
sbb
jne
push
mov
and
pcmpeqb
mov
and
dec
test
and
dec
or
test
dec
clc
(bad)
xchg
or
or
inc
or
or
push
hlt
call
jmp
dec
nop
js
jl
push
add
or
outs
xchg
jp
add
push
sbb
inc
dec
imul
and
sub
dec
sbb
jno
je
xchg
and
xlat
add
dec
inc
pop
xchg
wbinvd
sub
leave
mov
je
xor
dec
sbb
pop
ds
aaa
test
inc
jne
pop
inc
dec
or
adc
pop
add
adc
ins
sti
dec
mov
cmp
mov
xchg
xchg
mov
lock
fmul
and
loope
jo
or
jge
adc
sbb
mov
mov
adc
outs
sbb
jne
xchg
pop
and
enter
jbe
dec
call
pop
add
or
adc
push
mov
add
iret
add
icebp
pop
int3
push
xor
jbe
bound
js
jg
test
push
pop
pusha
adc
xor
pop
sbb
push
and
mov
clc
cmovno
out
jl
aaa
pop
add
adc
push
inc
or
sar
ficomp
add
sbb
adc
ret
xor
xchg
dec
mov
call
lock
mov
add
and
cmp
push
pop
mov
pop
je
movs
test
and
push
adc
or
mov
jmp
cmp
pop
xchg
scas
push
mov
inc
and
rol
fwait
dec
mov
xchg
nop
add
dec
sbb
sub
mov
xor
jmp
or
rol
inc
jg
aas
jmp
xchg
mov
cmp
lea
jb
adc
aaa
mov
xor
mov
or
and
je
dec
xor
sbb
adc
sar
(bad)
cmp
and
das
popf
shl
and
xchg
cmp
js
cmp
or
and
mov
dec
in
xchg
pop
rol
out
mov
aaa
xor
cmps
or
lods
dec
cld
jge
inc
mov
sbb
cmp
push
adc
push
rol
imul
push
arpl
dec
jne
jno
xchg
dec
fisttp
pop
ins
aam
xor
test
or
inc
ffreep
mov
shl
dec
pop
or
xor
(bad)
adc
iret
in
addr16
dec
inc
inc
adc
and
adc
pop
xor
sub
push
or
stc
mov
mov
shr
jmp
mov
and
loope
cdq
add
xchg
adc
push
cmp
scas
enter
and
or
pop
popa
daa
xor
cmp
and
(bad)
adc
sbb
ret
jo
add
push
jo
push
mov
push
or
aas
adc
add
add
arpl
adc
fcmove
pop
or
dec
jne
xchg
push
mov
ret
mov
push
test
mov
add
mov
test
mov
lea
es
push
push
jge
mov
jo
sbb
add
push
fs
call
cld
in
or
fsub
push
js
push
mov
mov
add
sub
mov
jbe
inc
sbb
sub
add
push
or
cmp
out
idiv
xor
cwde
xor
pop
cmp
add
jo
inc
jecxz
add
je
cwde
mov
jb
shr
jo
enter
mov
dec
fdiv
xor
xor
pop
cmp
lods
xor
cmp
call
sbb
sti
shr
inc
adc
sub
add
dec
dec
outs
fistp
sbb
push
jne
sysenter
sub
dec
dec
dec
dec
sbb
or
or
push
in
scas
fisubr
fst
inc
(bad)
jmp
(bad)
adc
clc
bound
mov
mov
inc
jge
lock
or
mov
pop
add
xor
je
sbb
xchg
jle
or
or
call
mov
pushf
add
sar
mov
mov
mov
add
mov
dec
add
std
rcl
mov
clc
pusha
outs
mov
outs
ins
ins
sub
lds
iret
cmp
jge
add
add
jae
pop
add
shl
mov
jnp
sub
add
sub
test
pop
push
and
(bad)
sub
aaa
jecxz
dec
int
(bad)
cmp
ja
push
repnz
push
es
add
push
test
push
fisubr
ss
or
les
push
mov
ja
data16
into
xchg
adc
lods
mov
call
xor
mov
or
sub
ror
lds
jo
dec
add
or
clc
push
add
and
xor
les
iret
and
cmp
xor
jae
or
loope
clc
and
mov
jbe
mov
nop
xchg
or
call
test
or
jo
mov
jne
jl
or
add
std
sub
or
loope
xor
jo
pop
pop
jge
clc
mov
ja
jo
gs
push
inc
or
cmps
pop
pop
inc
out
sub
xchg
pop
aam
mov
cmp
cmp
adc
outs
in
dec
push
retf
sahf
stos
nop
rcl
and
movs
jb
xor
sub
sub
xchg
sub
js
add
fstp
pop
push
movs
adc
cld
(bad)
sub
mov
or
mov
cmp
data16
jp
lods
mov
bound
pop
test
cs
push
xor
inc
mov
cmp
lock
push
inc
and
or
push
mov
lds
jo
mov
push
add
rcl
inc
jnp
adc
add
push
clc
jle
fstp
lods
pop
jmp
pop
add
mov
add
mov
dec
push
add
and
ror
fnstsw
mov
outs
inc
(bad)
sbb
shr
adc
aas
int
cdq
in
pop
dec
inc
adc
loop
popf
adc
retf
inc
mov
into
mov
jo
mov
mov
and
mov
jo
mov
rol
pop
mov
ret
ficomp
dec
cmp
add
or
add
xor
aas
cld
pop
cmp
ja
ja
call
inc
push
aad
mov
inc
mov
and
dec
mov
inc
push
repnz
inc
push
pop
mov
mov
mov
and
rcr
cmp
adc
xchg
push
pop
xchg
cmp
push
aas
mov
or
xchg
jl
inc
jns
xchg
aas
mov
and
cmp
mov
sbb
pop
lock
dec
push
enter
stos
push
je
jbe
or
xlat
(bad)
xor
mov
sub
pusha
cmp
adc
mov
and
inc
je
jne
push
push
imul
ins
dec
mov
push
addr16
xchg
je
sbb
adc
retf
ins
cmp
mov
call
push
and
mov
dec
push
test
retf
cmps
and
dec
iret
adc
je
cs
hlt
cmps
dec
fadd
push
cmps
lds
inc
jae
inc
call
jno
js
cli
retf
aad
jne
in
mov
ror
(bad)
push
mov
jbe
cwde
sub
dec
lahf
inc
mov
sub
or
sub
sbb
or
add
xchg
push
jmp
inc
nop
popf
add
jne
popa
xor
jmp
pusha
fs
mov
mov
cmc
mov
cmp
dec
sbb
cmp
or
daa
add
jmp
xchg
ja
and
or
pop
ins
xor
sub
sbb
xchg
adc
outs
inc
and
sbb
xor
sub
repnz
and
sub
iret
enter
dec
xor
iret
dec
or
and
pusha
fs
loop
push
cmp
xor
cmps
sub
jae
xor
push
adc
add
sub
imul
and
and
push
add
loopne
inc
test
into
rol
mov
xor
je
sbb
sar
sti
xor
dec
inc
mov
or
inc
loop
imul
and
add
pusha
jbe
sbb
(bad)
fist
(bad)
and
cmp
xor
pop
mov
fwait
mov
cmp
xchg
xor
pusha
test
add
adc
pop
cmp
adc
mov
add
cmp
jae
popf
ins
repz
mov
pop
aam
jmp
adc
test
push
(bad)
jmp
sbb
into
add
cmp
jbe
sub
inc
inc
mov
mov
mov
or
sub
jmp
mov
jbe
in
movs
jne
add
and
sub
mov
cmp
cmp
sbb
and
xor
sbb
call
and
jmp
pop
test
push
xor
pop
popa
jbe
outs
(bad)
mov
in
sbb
add
push
sub
(bad)
mov
xchg
cmp
dec
pusha
loope
push
xchg
hlt
inc
pop
test
push
cdq
mov
jno
pop
lea
jns
and
test
jp
movs
(bad)
sub
and
mov
or
outs
sub
inc
pop
inc
sbb
sub
or
jae
and
movs
or
adc
xor
mov
rcl
ds
push
gs
mov
hlt
cmp
cli
scas
stc
jne
pushf
ja
mov
scas
mov
nop
push
xchg
xor
or
and
mov
adc
push
scas
jae
and
dec
loop
ret
add
or
or
and
adc
jbe
pop
jge
test
inc
xor
clc
jb
push
inc
dec
cwde
inc
mov
sbb
and
sbb
not
lods
jge
je
add
adc
sbb
(bad)
lods
xchg
scas
stos
add
or
add
and
inc
pop
sbb
lea
push
push
add
dec
lods
sub
and
call
adc
cmp
jg
call
dec
and
cmp
jecxz
pop
lods
push
add
xchg
cmp
test
mov
add
add
test
sbb
add
xchg
inc
dec
sub
outs
lods
(bad)
sub
jmp
and
pop
sbb
add
jge
or
sub
dec
cld
sar
inc
push
add
inc
js
or
mov
pop
aas
mov
ss
sti
inc
xchg
fcom
push
xor
aam
or
push
mov
jnp
cmp
mov
dec
and
or
inc
daa
inc
push
into
or
sbb
add
jecxz
xchg
sbb
mov
sbb
outs
xchg
adc
xor
pushf
inc
push
clc
add
xor
mov
dec
xchg
ret
push
xchg
inc
es
push
movs
(bad)
shr
out
cmp
test
sub
enter
inc
sbb
and
pop
add
int3
jb
ss
clc
rol
sbb
into
push
xor
arpl
idiv
or
ficom
popa
cmp
fwait
cmps
pushf
push
push
sbb
jnp
sub
mov
mov
and
add
pop
push
dec
sbb
push
in
xchg
aaa
ret
dec
add
fst
push
adc
cmp
add
shl
xor
rol
mov
add
push
add
mov
inc
popf
adc
je
and
pop
ret
sub
stos
adc
push
outs
call
shr
and
das
pushf
cmps
stc
xor
dec
push
jnp
out
inc
sahf
dec
mov
xor
repnz
mov
add
pop
cmps
cmp
cmps
(bad)
test
or
test
daa
add
pop
add
mov
lods
push
pusha
cwde
or
mov
mov
pop
pop
xor
loopne
inc
dec
mov
test
outs
cmp
loope
dec
mov
loopne
fild
jmp
jl
int3
adc
pop
jp
push
icebp
mov
ins
and
pshufw
inc
fucom
pop
inc
jae
inc
shr
sbb
push
shl
es
dec
in
add
or
adc
sbb
ds
xor
xchg
sbb
and
mov
sub
pop
lods
fcmovnu
adc
into
xor
push
mov
shr
or
sbb
call
aas
pfmul
adc
shr
or
pusha
and
fimul
sbb
popf
lea
rcr
mov
dec
adc
sti
mov
ret
adc
stos
ret
movs
add
movs
add
pop
inc
outs
aaa
dec
jmp
add
sar
pop
add
pushf
sub
dec
push
jecxz
sahf
out
add
push
mov
out
lock
ret
dec
add
(bad)
xor
dec
je
add
jmp
cmps
mov
cmp
push
dec
stos
sbb
pop
adc
cwde
mov
add
inc
xchg
inc
xor
cmp
sub
cmps
xchg
or
retf
(bad)
jmp
or
sbb
jb
out
and
jnp
js
sbb
xchg
or
imul
sbb
or
out
mov
jb
or
push
push
cmc
leave
cmp
ins
ja
out
fisubr
sub
push
or
imul
aas
sub
enter
mov
inc
(bad)
or
sti
or
inc
mov
and
daa
jbe
pop
push
cmp
js
ja
pusha
push
push
inc
mov
and
xor
js
xchg
or
mov
mov
inc
data16
jmp
inc
movs
dec
push
shr
icebp
add
repnz
mov
pop
jb
jmp
dec
adc
clc
lea
mov
in
xchg
fiadd
push
push
push
cmp
in
lea
xor
add
mov
adc
inc
ins
enter
sub
jbe
pop
pusha
xchg
push
pop
or
cmp
and
cmps
dec
mov
mov
cli
xchg
cmp
jae
xlat
into
pop
jmp
fiadd
inc
jge
jmp
je
add
dec
cmps
xchg
jb
shl
enter
(bad)
cmp
shl
pop
and
inc
ins
daa
test
fs
dec
stc
adc
push
and
adc
scas
fstp
pusha
add
fld
xor
push
push
xor
sbb
xchg
and
xchg
cld
add
jne
rol
jl
inc
push
add
and
sub
movs
jge
xor
or
xor
adc
pop
in
push
pusha
les
retf
in
dec
shl
ds
jmp
dec
rol
inc
push
dec
popf
fld
aas
outs
mov
add
pusha
cmp
xchg
lods
inc
aam
idiv
adc
clc
adc
cmp
repz
shl
lods
pop
repz
pop
sti
sahf
cmp
dec
push
pusha
push
pushf
push
mov
imul
dec
push
outs
pop
inc
sbb
adc
shl
pop
nop
imul
pushf
pushf
jb
add
jl
sub
dec
inc
sbb
js
mov
sub
cmp
push
xor
adc
mov
rol
mov
jns
dec
adc
or
ret
out
imul
add
loop
hlt
(bad)
jo
jle
pusha
lock
or
mov
and
in
mov
and
mov
adc
rcr
sbb
mov
repnz
add
cmps
sbb
push
pusha
ret
jmp
jecxz
cwde
pop
xchg
and
and
or
into
sub
xchg
xor
dec
ret
pop
cmp
retf
or
fisttp
je
add
inc
or
daa
and
pop
fld
xchg
inc
sub
retf
cmp
in
xchg
xchg
cmp
daa
cmp
adc
adc
sbb
inc
repz
nop
or
push
in
add
add
add
leave
mov
xchg
loop
xor
clc
push
inc
inc
inc
pop
enter
cmp
adc
dec
cmps
inc
mov
add
fs
jae
clc
mov
push
xor
mov
fld
cmp
sub
xor
mov
cmp
adc
out
sub
scas
pop
imul
pusha
adc
mov
push
imul
pop
cmp
mov
or
iret
and
sbb
mov
adc
mov
push
jae
sbb
or
or
bound
mov
add
retf
or
pop
imul
mov
mov
adc
loopne
or
sub
int3
mov
mov
leave
xor
imul
jmp
and
adc
inc
loope
cmp
loop
add
aam
fstp
rcl
inc
fwait
dec
dec
adc
xor
push
and
inc
daa
jne
fstp
cmp
mov
jne
std
xchg
inc
or
jge
add
push
and
or
add
out
mov
add
adc
shr
adc
inc
ficom
dec
cmp
inc
sbb
sbb
lea
popf
pop
cmp
in
jo
mov
bound
xchg
pusha
xor
dec
cmp
mov
and
add
push
mov
out
adc
test
adc
setle
jmp
ror
pop
mov
add
add
test
jmp
dec
sub
mov
sbb
test
clc
test
mov
dec
fwait
adc
shr
loop
call
aas
mov
js
push
push
call
sbb
inc
push
xchg
fisttp
xor
sbb
push
add
sub
push
lods
fild
push
xor
pop
fdiv
add
(bad)
movs
sub
pop
adc
inc
sbb
dec
nop
and
xor
out
push
xor
jmp
mov
jp
adc
movs
jno
pop
xor
mov
inc
inc
cmp
jbe
pop
add
retf
mov
imul
jle
inc
jb
sub
mov
jae
add
cmp
inc
cmps
adc
popa
cmp
cmp
shl
std
push
(bad)
mov
jle
or
aam
jp
mov
push
cld
inc
shr
imul
lea
or
xchg
cli
inc
jmp
or
mov
inc
out
adc
sub
jo
ds
push
mov
fs
sbb
dec
outs
xchg
fist
sbb
mov
out
dec
fldenv
or
add
mov
sub
xchg
pop
iret
push
xchg
add
lds
pushf
popf
mov
mov
(bad)
bt
in
nop
lahf
xor
push
sub
inc
pusha
inc
add
and
push
push
pop
add
push
mov
ret
pop
and
lea
mov
sar
pop
fistp
adc
xlat
add
dec
cmp
loop
add
cmps
test
sar
test
push
push
sbb
out
xor
mov
cmps
jl
mov
and
shl
dec
mov
jbe
push
inc
or
addr16
push
inc
push
ja
mov
bound
dec
shl
inc
or
ins
retf
rcl
clc
dec
in
dec
inc
jae
mov
cmp
jbe
icebp
es
shl
rol
rol
rol
jo
ins
mov
jbe
mov
sbb
push
or
add
push
jle
cmp
sahf
loop
inc
mov
pop
es
sbb
push
lock
jae
fcmovnb
or
fwait
dec
sahf
add
sub
mov
retf
movs
iret
jbe
shl
cs
adc
xchg
(bad)
or
out
jle
loope
mov
and
pop
add
mov
mov
es
scas
ret
sahf
sbb
jecxz
into
push
in
mov
xor
push
pusha
xor
sbb
sbb
xor
and
cmp
inc
jge
dec
xchg
test
iret
test
adc
aaa
pop
les
or
pop
add
cmp
enter
or
or
les
rep
retf
les
add
idiv
lock
add
imul
or
mov
pusha
or
or
call
shl
aam
adc
(bad)
ja
cmp
and
add
or
in
call
mov
sub
mov
and
or
sub
sar
clc
dec
test
mov
je
sbb
push
cmp
mov
mov
adc
jbe
cmps
sub
pusha
pop
add
dec
add
(bad)
adc
jmp
lock
in
(bad)
jmp
and
mov
xor
je
push
xor
mov
jmp
loope
std
retf
icebp
add
push
mov
(bad)
push
pushf
clc
or
and
push
xor
mov
jo
or
cmp
lock
jbe
nop
lea
and
push
fcom
sbb
retf
lock
or
sbb
sub
or
and
or
jbe
je
enter
call
mov
or
cmp
(bad)
test
call
clc
sub
sbb
fmul
shr
xchg
mov
sub
push
push
mov
scas
cmp
push
ss
lea
jnp
jo
xor
sbb
push
push
mov
add
dec
and
(bad)
fmul
mov
dec
and
lahf
dec
push
mov
cmp
scas
call
jg
nop
test
sub
ret
lea
jle
sub
jl
jns
add
test
scas
and
nop
in
jns
pop
mov
xor
data16
or
inc
mov
inc
not
imul
adc
lea
sbb
add
push
jl
fldcw
fnstenv
test
cmp
or
cdq
add
sbb
sahf
lds
nop
test
or
lods
pushf
xchg
cld
xor
mov
mov
into
dec
addr16
dec
lea
push
adc
or
fstp
mov
sub
mov
jge
push
mov
mov
or
sbb
test
jne
jbe
ja
mov
or
pop
aaa
jno
sahf
sbb
jg
push
mov
inc
sbb
and
out
fwait
xchg
mov
jg
or
jle
mov
nop
cmp
inc
loopne
call
adc
popf
jns
sbb
or
adc
pop
jb
sub
cmps
loope
cmp
int
movd
shr
push
adc
xchg
xchg
push
xchg
dec
push
mov
inc
jo
jbe
stos
fcom
dec
loopne
lods
push
jge
fidivr
outs
inc
movs
cmp
stos
rol
and
sub
sbb
ins
pop
adc
std
push
inc
mov
adc
sub
pop
jl
add
add
add
push
sahf
data16
jb
imul
ret
jno
mov
lock
lock
aas
mov
into
out
xchg
sbb
ror
adc
xchg
pop
loopne
popa
jle
xor
repnz
enter
inc
fcmovne
pop
adc
(bad)
cwd
loopne
sub
out
sahf
ja
add
sub
imul
data16
cmps
push
mov
out
je
mov
retf
and
imul
sbb
outs
loope
adc
aas
inc
ret
sar
mov
cli
xchg
adc
int
out
cmp
shr
mov
(bad)
outs
mov
pusha
lds
push
shr
and
mov
retf
add
and
je
or
or
mov
pop
shl
add
add
test
sar
out
lea
sbb
mov
inc
aam
cs
dec
dec
add
sub
xor
pop
sti
cwde
inc
inc
add
jle
(bad)
jne
bound
sub
cmp
int3
adc
adc
mov
int3
mov
inc
dec
adc
mov
mov
sub
bound
pop
je
push
sbb
pop
dec
mov
popa
(bad)
or
ins
push
jmp
push
rcl
jbe
jl
jmp
rol
in
xor
add
add
xlat
inc
mov
xchg
jg
xchg
jg
outs
mov
arpl
mov
xor
or
std
icebp
mov
mov
push
loope
ret
mov
push
push
jl
xor
inc
sbb
dec
mov
loop
jge
or
repz
mov
dec
pop
adc
jl
push
mov
inc
aad
outs
pop
and
test
push
mov
and
xlat
retf
mov
mov
mov
push
pop
mov
xchg
xor
xor
adc
pop
xor
mov
xlat
loope
test
std
test
mov
push
mov
out
adc
pop
out
or
mov
jmp
mov
xor
xor
lds
movs
pop
dec
dec
pop
xlat
(bad)
in
cmc
mov
stos
pop
add
pop
jp
ins
mov
fdivr
or
fs
xchg
enter
push
adc
pop
(bad)
xchg
scas
les
data16
mov
stos
fsqrt
fcmovnu
xlat
cs
xchg
sbb
into
jle
fidiv
jmp
jmp
cmp
add
dec
jmp
or
ret
test
shr
or
aaa
cmp
jb
xchg
aam
push
or
cmp
add
adc
add
mov
ss
push
dec
adc
fild
xor
retf
add
pop
mov
jmp
dec
push
push
and
push
or
mov
pop
je
inc
ins
ss
jle
cmp
jb
inc
jo
push
cmp
add
out
add
jo
nop
jp
ret
sub
cmp
sbb
xor
add
call
shl
or
int3
int
adc
mov
mov
sub
xor
push
imul
mov
pop
neg
lahf
sub
add
mov
jmp
pusha
or
jno
inc
xchg
and
hlt
mov
inc
xor
adc
fdiv
adc
jne
sbb
sbb
int
jb
sbb
cmp
add
jge
add
pop
mov
dec
and
sar
dec
cwde
or
sti
arpl
sub
jecxz
ror
aas
xchg
and
push
inc
mov
sbb
adc
test
sbb
inc
push
(bad)
nop
dec
adc
and
adc
rol
push
pop
inc
shl
jmp
mov
inc
push
fcomi
xchg
mov
les
leave
and
(bad)
stc
outs
test
cli
daa
(bad)
xor
pop
jp
adc
xlat
cli
mov
imul
mov
xchg
dec
retf
sbb
rol
and
mov
and
fadd
push
dec
dec
add
icebp
inc
add
add
cmp
mov
mov
clc
ror
jge
mov
pusha
add
imul
popa
clc
and
pop
mov
mov
xor
mov
movs
jecxz
sbb
mov
sar
sbb
call
imul
(bad)
loop
imul
push
cs
inc
clc
(bad)
xchg
sbb
inc
inc
adc
(bad)
inc
add
enter
gs
adc
dec
add
(bad)
in
sar
mov
stc
or
mov
xchg
mov
sub
add
stc
sqrtps
xor
pop
mov
mov
adc
cs
mov
ss
jbe
cmps
cmp
mov
lock
jge
inc
shl
dec
arpl
test
inc
push
js
mov
mov
xchg
sbb
cs
imul
dec
adc
out
call
into
or
jg
nop
cli
or
adc
pop
push
nop
int
cwde
cwde
sub
mov
xchg
xor
das
push
and
stos
xchg
xlat
mov
add
add
(bad)
dec
xor
inc
push
mov
test
data16
std
mov
cmp
cmp
inc
jae
cwde
xor
adc
xchg
pusha
or
inc
icebp
mov
push
xor
es
ja
or
bswap
jb
pusha
mov
dec
mov
mov
xlat
xchg
sub
push
add
jl
jbe
adc
dec
imul
pop
mov
mov
adc
out
push
shrd
mov
lods
adc
jmp
push
push
out
push
inc
mov
mov
adc
sbb
or
inc
rol
xor
ret
ror
sar
loopne
jb
jmp
lea
or
dec
add
shl
cli
or
push
and
shl
dec
dec
push
and
cmps
daa
xchg
xor
out
fwait
ds
cmp
lea
repz
rol
shl
add
adc
shl
xchg
sub
leave
mov
repnz
leave
add
add
adc
lds
mov
mov
(bad)
pop
or
jmp
dec
add
mov
pop
das
popf
mov
movs
test
cwde
mov
add
mov
mov
push
sub
or
movs
jmp
inc
lods
mov
inc
pop
fidiv
enter
mov
push
or
adc
aaa
inc
jg
ror
or
dec
cmp
retf
mov
leave
adc
rcr
cmp
or
mov
pop
xchg
push
movs
sbb
lock
or
sbb
hlt
out
jp
mov
cmc
cmp
not
(bad)
push
aas
ret
dec
mov
call
xor
mov
jecxz
call
jno
iret
xchg
add
xor
or
lahf
inc
nop
or
sub
add
movs
mov
mov
or
or
mov
pop
add
inc
call
ss
jl
sub
and
inc
or
inc
adc
rol
mov
dec
cmp
rol
shr
cdq
add
add
add
dec
adc
cmc
xor
mov
mov
leave
inc
test
popf
not
aam
(bad)
retf
popf
add
pop
mov
iret
iret
sub
and
js
mov
add
mov
sbb
pop
add
push
push
call
push
lock
dec
jo
mov
sahf
dec
and
pop
mov
loopne
and
imul
adc
add
mov
push
or
icebp
or
in
call
and
sub
into
nop
jge
push
sub
dec
cwde
shl
sbb
shr
or
add
and
inc
adc
jg
mov
sbb
sub
int
ret
or
mov
jg
mov
sub
sar
icebp
add
icebp
int3
lods
push
xchg
lea
jl
adc
lea
shr
jl
push
out
jle
jmp
and
imul
adc
push
xchg
test
sbb
pop
mov
daa
cmp
imul
push
mov
or
jge
pop
not
pop
and
push
es
mov
jmp
leave
xor
test
xor
sub
push
push
inc
mov
(bad)
call
stos
mov
xchg
mov
adc
ret
enter
retf
cwde
mov
rcr
js
fdivrp
addr16
in
or
mov
int3
inc
xor
add
inc
xchg
push
enter
adc
inc
add
inc
je
cmps
mov
mov
fdiv
mov
sbb
inc
call
nop
nop
(bad)
cmp
ins
ret
xor
mov
or
or
push
add
add
ss
mov
or
add
cld
jno
dec
add
(bad)
or
adc
jne
jo
inc
xor
xchg
daa
jbe
cmp
xor
std
jg
outs
and
dec
inc
inc
inc
xor
adc
mov
mov
pop
nop
push
pop
add
add
jb
push
mov
mov
mov
mov
adc
inc
fsub
nop
jb
nop
arpl
call
xchg
mov
cmp
test
mov
cmp
nop
mov
cmp
rcl
mov
rol
cmps
mov
jno
push
push
clc
cmps
push
push
pushf
adc
inc
add
push
xor
js
sub
cmp
fcmovnu
pop
adc
push
push
cmp
shr
pusha
lock
and
clc
aaa
or
xchg
cmp
adc
jg
pop
das
das
imul
arpl
cs
dec
es
cmp
mov
cwde
fiadd
and
cmp
mov
jge
and
(bad)
das
fld
jecxz
cld
ds
in
or
cmp
aas
shl
js
pop
sbb
cmp
jle
in
mov
push
movs
fwait
sbb
inc
push
in
mov
nop
add
call
nop
fs
ds
mov
imul
icebp
sub
fmul
add
daa
leave
jle
mov
adc
or
stc
jl
or
out
push
pop
retf
leave
movs
std
push
mov
shl
and
push
rcl
(bad)
fsubr
xlat
xlat
or
cmps
push
adc
push
shr
leave
pop
mov
adc
cld
xor
sbb
daa
popf
test
xchg
lock
pop
clc
xchg
push
add
jl
daa
xor
add
ror
leave
leave
add
hlt
inc
je
adc
cs
test
aaa
fdiv
sub
in
adc
pushf
enter
sub
cmp
mov
mov
inc
add
outs
rcr
stos
clc
push
out
stos
jb
shl
inc
enter
inc
add
movs
add
enter
xor
movs
mov
pop
inc
push
ror
push
add
xchg
fs
push
pop
or
pusha
and
jbe
call
or
jbe
add
inc
pop
je
xor
inc
inc
sub
add
scas
push
inc
dec
(bad)
pop
pop
sbb
das
xchg
(bad)
mov
mov
ins
add
sub
push
cmps
leave
push
cmp
mov
add
adc
aam
cmp
push
add
push
add
xchg
mov
movs
push
mov
fsub
and
sub
xor
pushf
mov
add
popa
xchg
cmps
jne
nop
jl
in
nop
jg
and
sbb
mov
loope
sbb
push
push
cld
sbb
or
cmp
rcr
sub
jno
sbb
push
xor
fadd
adc
mov
aam
cmp
add
sub
adc
pop
xor
adc
cmp
movs
loope
and
add
pop
jno
xor
and
lahf
pop
adc
adc
xchg
adc
push
and
push
sub
and
mov
mov
ins
adc
sub
aam
in
mov
xchg
or
sbb
repnz
or
mov
add
movs
push
mov
je
test
jge
add
push
nop
dec
ficom
push
and
pushf
or
add
xchg
fisttp
cmps
inc
jo
or
add
paddq
stos
push
mov
cld
ins
rcr
mov
jb
fcomp
fadd
inc
outs
add
addr16
lea
addr16
dec
push
mov
xor
xor
fcmovb
cmp
cli
pushf
cwde
xchg
je
lahf
push
push
or
add
inc
dec
mov
ficom
lods
fcomp
sbb
arpl
or
jp
je
sbb
or
sub
or
add
adc
(bad)
clc
inc
movs
xchg
retf
inc
push
pop
mov
cdq
mov
xchg
and
inc
int3
mov
and
adc
cwde
cld
pop
sbb
fistp
sar
stos
xor
shr
push
icebp
pop
into
imul
fidiv
(bad)
jmp
mov
xchg
adc
outs
sbb
push
hlt
lea
mov
jo
scas
pop
in
push
mov
push
fild
dec
sbb
jb
pop
clc
jecxz
add
mov
test
push
out
or
or
out
inc
xchg
mov
mov
(bad)
xor
imul
dec
jno
push
ja
into
loopne
jbe
add
adc
add
adc
sahf
repz
ja
mov
loope
loopne
pop
jmp
sti
sbb
fdivr
fiadd
add
add
inc
fucomi
les
cmps
push
cmp
adc
add
jmp
dec
inc
jb
inc
add
inc
jb
add
inc
and
push
aad
push
sbb
pop
ja
cmp
mov
cmp
add
loope
push
fs
out
test
gs
ret
add
push
fcom
inc
jmp
aas
push
nop
inc
push
add
inc
push
nop
inc
ds
push
push
popa
mov
lock
or
scas
sar
loop
loope
rol
push
iret
xchg
jecxz
jns
mov
push
shl
xchg
mov
inc
jecxz
mov
rcr
mov
and
hlt
sbb
mov
cmps
mov
cwde
jecxz
xchg
test
xchg
pop
inc
add
mov
test
repz
inc
mov
or
jae
xchg
xchg
mov
adc
into
es
dec
fcomp
outs
mov
pop
in
mov
adc
adc
xor
ja
inc
add
mov
das
lods
lea
je
cmp
pop
pop
bnd
nop
adc
dec
fstp
fwait
sbb
pusha
mov
js
mov
jecxz
sub
in
(bad)
aad
and
or
inc
dec
push
je
mov
test
adc
xchg
inc
or
nop
not
sub
mov
jnp
push
movs
push
push
and
pop
dec
adc
jmp
dec
dec
dec
and
xchg
lock
push
and
and
adc
push
push
(bad)
test
push
test
out
and
xor
inc
add
add
or
or
push
xchg
push
imul
or
sbb
pop
adc
mov
add
jns
add
mov
out
and
fild
inc
sbb
mov
mov
sbb
mov
cmp
imul
cmp
lock
add
and
mov
xchg
or
jne
cmp
enter
inc
enter
xchg
mov
fldcw
adc
sbb
sbb
xchg
inc
and
mov
pop
rol
aas
pop
movs
adc
mov
dec
inc
or
test
inc
xor
add
rcr
mov
mul
push
inc
push
mov
mov
xor
movs
or
cmps
mov
adc
xor
retf
xlat
or
xchg
test
das
in
movs
mov
test
test
push
jno
push
dec
or
and
mov
out
mov
adc
test
jmp
sub
cmc
jne
fimul
push
iret
dec
mov
push
or
inc
fcom
adc
aam
adc
leave
add
enter
int3
dec
cs
enter
enter
rol
(bad)
fbstp
and
rcl
aam
xor
imul
pop
inc
dec
inc
sbb
and
add
pop
clc
pop
add
mov
or
add
xor
inc
jns
out
mov
fsubp
out
mov
cmp
mov
cmove
in
add
add
(bad)
jno
xor
or
adc
lock
shr
int3
fldcw
xchg
pop
pushf
scas
add
adc
cmp
movups
fcomp
sbb
ins
adc
retf
sub
scas
jmp
sub
inc
adc
retf
or
inc
or
and
adc
push
popa
(bad)
lods
adc
rol
in
sbb
outs
add
jmp
adc
rol
adc
push
sbb
or
xor
aaa
add
out
or
pop
imul
rcr
jb
xchg
and
(bad)
lock
or
add
lods
push
mov
push
xor
aam
pop
sub
mov
adc
pop
lods
fdiv
bound
scas
fisttp
hlt
add
mov
rcl
dec
mov
jmp
out
pushf
int3
mov
add
add
je
xchg
or
and
adc
add
add
movs
ret
pop
ss
mov
pop
shl
pop
dec
mov
dec
mov
mov
nop
cmps
and
add
xor
icebp
cmp
iret
xchg
push
loop
jmp
push
xchg
ss
sub
popa
jp
sbb
sub
loopne
push
inc
inc
pop
push
pop
paddd
div
dec
push
inc
aas
or
inc
dec
inc
inc
dec
test
add
mov
ja
or
add
jae
mov
or
inc
cmc
dec
out
jae
lock
mov
push
jns
mov
push
out
lock
adc
xlat
jp
imul
ret
push
lock
and
dec
or
xor
lock
xor
jns
lock
and
icebp
jns
inc
enter
adc
sub
icebp
push
push
mov
xor
mov
in
cdq
out
jae
pop
adc
push
sbb
fst
test
adc
mov
lahf
or
inc
mov
and
sub
and
pop
add
or
loop
aam
or
dec
dec
shr
mov
dec
rcl
inc
int3
pop
mov
xor
xchg
jbe
and
or
dec
add
cmp
sub
nop
xchg
out
or
pusha
and
add
or
mov
push
inc
pop
mov
inc
push
clc
xchg
(bad)
cmp
lods
fxch
aad
cs
sub
jle
or
les
or
out
mov
mov
pop
xchg
outs
hlt
repnz
fsubp
test
adc
or
add
inc
inc
imul
inc
das
push
dec
sbb
ins
ja
xor
mov
pop
dec
gs
jo
icebp
inc
fmul
aam
fs
inc
xchg
ja
cmc
in
and
sub
and
cmc
je
dec
leave
ins
cmc
test
push
in
jb
pushf
cmc
pushf
cmc
pushf
cmc
and
iret
add
push
or
and
or
mov
cld
nop
cmp
daa
mov
out
mov
sar
mov
and
cmp
shl
xchg
test
sub
xchg
or
mov
push
or
cmp
xor
or
inc
in
xchg
into
cmp
sbb
cmp
test
movs
mov
pop
std
or
popf
out
fisub
cmp
sbb
jo
xchg
lods
iret
into
fmul
or
jne
jo
sub
adc
fisttp
pop
dec
les
dec
add
enter
cmp
add
cmp
and
cwde
std
and
call
and
jmp
mov
aad
inc
dec
push
movs
mov
test
out
out
lods
lods
mov
cmp
movs
in
sbb
movs
movs
clc
dec
push
add
mov
nop
pop
jb
aam
add
push
cwde
sbb
xor
std
cmp
dec
out
cmp
(bad)
(bad)
sbb
loopne
inc
sbb
fdivr
xor
mov
adc
dec
(bad)
fmul
std
hlt
add
pop
rcl
dec
dec
lahf
mov
nop
inc
test
test
mov
arpl
pop
dec
or
ins
(bad)
je
ret
push
and
mov
and
(bad)
hlt
mov
inc
xchg
(bad)
lods
jg
sbb
test
push
inc
les
adc
push
adc
xchg
pop
xchg
add
nop
inc
inc
scas
jns
aam
dec
dec
shl
lock
repnz
push
add
pusha
fs
nop
retf
and
mov
push
gs
mov
jb
push
lock
and
in
dec
adc
sbb
sbb
call
pushf
sti
es
clc
push
jmp
stc
nop
and
mov
scas
push
sub
push
jne
pop
push
cmp
cmps
dec
dec
stos
add
movs
in
xor
push
xor
mov
and
fcmovbe
xchg
push
pop
jae
xor
dec
nop
jl
xor
dec
add
daa
fcmovnb
adc
pop
js
scas
or
xor
ss
push
add
xlat
xor
daa
ins
or
push
outs
xchg
les
leave
aaa
pop
(bad)
mov
xchg
cmp
stos
data16
das
pop
add
mov
xchg
inc
fst
fistp
shr
xor
sub
add
mov
add
hlt
gs
jmp
push
or
inc
fidiv
dec
jp
add
pop
inc
push
adc
adc
lods
pop
inc
nop
aas
mov
mov
pop
xor
or
jae
mov
or
or
pop
aaa
mov
and
inc
jb
and
inc
pusha
dec
xchg
and
dec
jne
loop
sbb
movs
fcmovb
imul
call
not
enter
xchg
lods
imul
add
cmps
mov
rol
inc
ret
add
mov
scas
or
cli
enter
and
dec
cld
ins
or
dec
push
mov
stos
pop
arpl
xor
cmp
inc
dec
in
pop
mov
je
or
je
imul
jmp
mov
call
pusha
clc
push
or
nop
out
addr16
sbb
xor
out
out
inc
sbb
nop
out
ins
cdq
sub
mov
dec
sub
pop
dec
push
pop
add
data16
dec
outs
in
xor
sbb
imul
pop
inc
jne
or
ret
mov
out
mov
mov
dec
fs
outs
inc
mov
ja
ja
or
cmp
push
push
jae
das
clc
es
movs
icebp
outs
and
sbb
das
lock
and
test
div
add
repnz
adc
dec
push
xor
(bad)
lock
fs
pop
adc
in
mov
loopne
mov
or
and
jo
ins
cdq
push
mov
or
fcomp
fbstp
jl
adc
stos
movs
imul
jle
arpl
retf
mov
nop
aas
xchg
xchg
out
aam
lock
cmps
cdq
sub
stos
jl
xchg
aaa
inc
dec
cmc
mov
arpl
lock
inc
(bad)
mov
addr16
cmp
pop
sub
sbb
lock
dec
pop
test
les
push
enter
lds
push
lods
hlt
sbb
jge
ror
lock
call
add
xchg
(bad)
pop
push
pusha
xchg
stos
xor
push
aam
test
lods
loopne
in
inc
inc
pop
or
add
dec
scas
(bad)
mov
mov
inc
add
sbb
or
add
or
add
inc
lahf
adc
push
and
or
inc
lods
adc
imul
sbb
inc
xor
or
mov
lock
inc
mov
xchg
gs
add
jne
sbb
loope
rcr
fdiv
call
retf
cmp
or
push
cmp
(bad)
(bad)
ror
sub
dec
and
call
pop
push
hlt
mov
mov
js
mov
xchg
clc
mov
push
push
xor
or
or
or
xchg
cmp
jle
push
push
or
cmps
cmp
mov
or
adc
pop
test
jno
sbb
loope
bound
sbb
fcom
(bad)
cdq
movnti
push
sub
ins
cmc
and
ror
pop
add
and
pop
ret
out
ins
in
cdq
fwait
pop
repz
aas
and
les
push
sub
aas
add
lea
xlat
xor
xchg
mov
xchg
xchg
idiv
inc
or
cmp
neg
dec
add
lock
dec
sar
and
fmul
into
mov
arpl
xchg
es
mov
outs
jb
add
push
and
inc
test
fiadd
xchg
aam
jno
mov
xor
outs
repnz
hlt
and
dec
add
adc
pop
cld
mov
dec
add
test
cmc
das
or
dec
mov
mov
fcomp
cmc
mov
xchg
inc
nop
push
add
add
push
mov
jmp
jbe
jp
mov
(bad)
dec
repz
pop
ss
inc
nop
mov
or
or
lds
stc
(bad)
test
and
mov
xchg
inc
pop
jne
outs
imul
rcr
je
add
fdiv
pop
ds
movs
(bad)
jns
jbe
sbb
xchg
test
and
sbb
imul
hlt
and
pop
mov
sub
shr
lods
pop
test
arpl
imul
cmp
rcl
test
push
jp
jge
dec
ins
test
add
and
(bad)
push
lods
mov
adc
lods
nop
dec
outs
mov
sub
push
push
jne
jbe
xchg
clc
or
add
mov
add
mov
scas
add
push
sti
dec
dec
add
push
push
fadd
mov
arpl
cmp
or
add
adc
(bad)
xor
mov
sub
sub
add
and
(bad)
jmp
inc
stos
test
call
movs
mov
loopne
add
out
pop
pop
or
ret
test
add
xor
xchg
jns
adc
dec
and
xchg
pop
test
cmp
fimul
lods
or
or
adc
xchg
adc
or
push
imul
or
sbb
or
sbb
push
sbb
inc
mov
pop
dec
test
test
pop
movups
mov
mov
push
arpl
mov
lds
cs
ror
add
mov
in
add
jno
enter
jbe
cmp
neg
movs
lea
mov
cli
sub
ret
cmp
(bad)
shl
or
pop
inc
ficom
jbe
mov
push
adc
and
fs
and
lods
(bad)
cmc
(bad)
test
dec
dec
dec
dec
push
mov
ret
inc
push
push
inc
dec
dec
dec
inc
neg
arpl
push
inc
push
push
pop
inc
push
push
and
or
in
mov
stos
dec
inc
push
sub
or
mov
dec
xchg
imul
mov
fs
imul
or
dec
cmp
sbb
jle
iret
mov
add
daa
lods
ret
jp
clc
xor
pop
clc
and
jne
inc
push
jmp
rcl
xchg
xor
push
sub
iret
sub
adc
jecxz
inc
add
add
inc
dec
fwait
movs
adc
fwait
pop
inc
das
push
dec
scas
adc
not
js
(bad)
int3
jbe
push
pop
cmp
inc
mov
iret
call
xchg
xchg
inc
mov
ss
xor
add
mov
dec
out
add
idiv
jb
jbe
mov
or
loopne
in
popf
retf
in
jmp
sbb
lea
xchg
push
push
enter
in
popa
mov
test
mov
mov
arpl
inc
xchg
jb
hlt
and
mov
inc
lea
xor
scas
ror
inc
sbb
jmp
sbb
in
push
mov
adc
sbb
xchg
add
arpl
add
daa
in
movs
or
mov
and
loope
mov
lea
ins
pop
add
and
jo
sbb
pop
dec
movs
stc
jbe
mov
dec
add
xor
das
pop
fadd
add
or
das
jbe
mov
fs
call
pop
push
inc
stos
or
sub
inc
inc
imul
push
cmp
cdq
addr16
jmp
sbb
repz
push
inc
test
rol
or
rcr
or
mov
sbb
sar
ss
in
and
pop
dec
pop
add
add
mov
jge
lock
push
ret
jecxz
aad
push
pop
(bad)
push
inc
ror
leave
sub
add
outs
enter
add
clc
pop
test
cmp
je
pop
hlt
or
sbb
push
call
ja
iret
sbb
pushf
rol
call
inc
sbb
adc
push
enter
cmp
dec
pop
test
pop
sbb
mov
ins
in
cmp
iret
pop
xchg
mov
nop
pop
and
sbb
sbb
jb
pop
push
pusha
js
pusha
js
mov
pushf
sbb
and
add
mov
arpl
rol
add
sbb
sbb
mov
loopne
inc
aam
or
mov
outs
(bad)
push
xor
pop
push
mov
pop
sbb
sbb
mov
and
add
mov
dec
gs
imul
adc
out
sub
cmp
push
jne
popa
and
xor
jecxz
and
mov
inc
push
in
loopne
pop
in
hlt
or
sti
and
cmp
mov
lahf
data16
and
cmp
push
or
mov
inc
inc
test
dec
pop
aaa
adc
imul
push
popa
imul
aas
push
lods
inc
fsub
ins
ins
scas
jns
movs
jo
pop
je
pop
pop
xchg
pop
pop
cmp
pop
xor
jmp
and
and
in
add
cmp
inc
push
in
push
lock
and
lods
and
cmp
and
and
pusha
jmp
and
in
push
mov
pushf
and
outs
push
inc
xchg
jg
jae
jae
arpl
xchg
add
add
daa
and
and
in
and
and
dec
ds
and
and
push
jo
mov
and
fisttp
push
ss
cmps
cmp
nop
test
shl
mov
int3
and
loopne
in
and
push
pop
cmp
or
add
push
in
xor
cmc
sbb
adc
xchg
xchg
sbb
mov
push
repnz
enter
or
fild
rol
test
scas
xlat
add
pop
sbb
sub
nop
cmps
outs
daa
daa
cmp
daa
mov
push
repnz
dec
stc
pop
and
sub
sbb
add
jb
loopne
sub
inc
cmps
dec
or
adc
mov
and
fidiv
sub
pop
ja
jp
xchg
jo
or
inc
or
clc
push
xchg
xchg
or
popf
lods
ror
sub
xlat
xchg
push
xor
jb
cs
or
sbb
pop
push
out
int
push
repz
sub
(bad)
sub
and
cmp
mov
pop
(bad)
sbb
and
daa
ins
fisttp
jb
push
mov
neg
mov
xor
pop
sbb
movs
jb
ins
sbb
inc
mov
cmp
add
jo
sbb
and
inc
clc
xchg
in
and
ss
sar
sub
pop
or
loopne
mov
popa
jns
mov
stos
mov
sub
shr
cld
nop
and
dec
int3
xor
push
fistp
sub
adc
sbb
adc
dec
inc
pop
gs
pop
jp
mov
dec
mov
add
xor
mov
cmp
and
and
sub
outs
mov
sbb
out
stos
cdq
in
xchg
sub
retf
or
sahf
inc
cmps
fnsave
push
das
and
and
fdivr
pop
pop
das
outs
repz
mov
shr
daa
jmp
repz
xor
dec
inc
fucomi
and
jmp
xchg
cmp
cmp
mov
lods
inc
test
push
out
sub
sub
(bad)
scas
mov
sub
push
(bad)
fprem
inc
and
adc
fadd
adc
sahf
push
jno
iret
inc
sub
and
fistp
bound
add
popa
jne
push
push
inc
lods
mov
lea
dec
addr16
repnz
aad
jb
push
pop
adc
jne
and
cmp
(bad)
cs
stc
adc
or
xchg
mov
js
add
js
mov
push
jno
mov
mov
repnz
inc
pop
pop
push
adc
loope
dec
push
test
in
pop
add
arpl
push
jl
je
inc
inc
jg
ja
dec
stos
movs
mov
setne
fistp
repz
and
icebp
push
in
ss
and
or
sti
test
adc
xor
cmp
push
lea
cmp
mov
jb
pushf
pushf
jmp
loopne
ins
out
add
push
inc
or
out
adc
jmp
xor
xchg
add
mov
nop
and
ds
xor
enter
xor
and
dec
call
add
mov
or
xchg
mov
ins
push
rcr
cmp
daa
or
in
add
inc
daa
adc
(bad)
ins
arpl
cli
arpl
push
xor
sbb
addr16
sbb
push
push
das
push
cmc
add
push
inc
dec
push
dec
aas
ror
rcr
adc
push
mov
in
dec
dec
lahf
adc
bound
pop
daa
xor
in
iret
sub
sub
adc
xor
pop
and
add
xor
push
cmps
inc
sar
leave
mov
dec
cmps
or
mov
mov
jb
xor
ja
jo
jne
imul
(bad)
xor
lock
mov
in
push
stos
pop
call
imul
xor
mov
int
dec
ret
and
dec
cdq
xchg
sbb
inc
or
jns
je
ficom
or
add
dec
jmp
pop
pop
aad
aam
ins
and
movs
pop
xchg
or
add
pop
fiadd
or
push
leave
shl
aam
cld
retf
cmp
xchg
mov
mov
retf
jp
adc
add
and
out
mov
mov
mov
ficom
jbe
jmp
cwde
adc
add
sub
inc
ds
push
in
neg
mov
aam
mov
xlat
ins
or
les
fmul
xchg
sub
dec
mov
fwait
cwde
mov
je
rcl
cmp
inc
and
and
and
pop
push
pop
aaa
int
aam
add
fbstp
adc
xor
xchg
add
jge
jno
shl
popf
sbb
inc
cmp
xchg
in
dec
sub
aaa
inc
or
call
mov
cld
dec
push
retf
mov
mov
mov
daa
(bad)
mov
retf
ret
jmp
inc
mov
push
sbb
mov
adc
mov
pop
addr16
popa
mov
pop
nop
xor
cdq
fsubrp
xchg
das
leave
sbb
outs
push
dec
pop
enter
push
cmp
xchg
and
ja
mov
call
mov
jg
cmps
out
rcl
lock
jno
stos
mov
lock
adc
mov
mov
call
shl
test
ins
sbb
or
gs
lea
ret
adc
imul
(bad)
xor
leave
mov
mov
loopne
dec
fcomp
and
test
or
clc
mov
pop
out
mov
ret
adc
push
push
push
mov
outs
nop
mov
mov
int3
pop
ins
and
lods
pop
ja
and
bound
dec
mov
push
inc
push
inc
nop
pop
push
(bad)
lods
daa
cmp
je
shl
mov
js
xchg
icebp
clc
cld
sub
push
dec
addr16
push
mov
sbb
jo
sub
leave
and
cmp
sub
dec
xchg
push
popf
iret
pop
sub
add
push
add
and
inc
or
and
push
mov
xchg
and
xchg
sbb
ret
mov
in
nop
ret
test
jno
xlat
cmp
sub
dec
into
mov
and
pusha
daa
add
imul
push
icebp
inc
cmp
in
sub
adc
in
dec
cmp
mov
leave
leave
inc
and
adc
sub
and
loop
sbb
add
adc
lock
ss
inc
pop
lahf
aaa
ins
call
dec
in
in
push
int
sub
jne
enter
jns
adc
loopne
adc
imul
or
push
lock
dec
cld
test
shr
je
movs
mov
dec
jp
sub
jle
enter
das
xor
ret
adc
adc
add
hlt
xchg
inc
test
mov
cmp
and
lds
jno
pop
add
sub
sbb
pop
add
push
and
mov
adc
inc
lock
je
mov
inc
inc
nop
inc
fist
mov
nop
ins
push
ins
cmp
imul
xor
pop
stos
pushf
dec
pop
pusha
aas
push
fld
inc
jbe
sbb
int
retf
test
mov
mov
or
xchg
dec
(bad)
lahf
loopne
fild
fdiv
xor
call
call
push
adc
adc
sub
imul
push
outs
or
add
or
inc
jg
sub
popa
enter
add
and
add
outs
dec
mov
inc
or
rcr
fcomp
dec
xchg
stos
add
div
jnp
out
inc
cmp
add
add
add
iret
aad
or
add
cmps
add
(bad)
mov
and
jg
dec
jne
imul
or
add
dec
inc
pop
or
shl
stos
adc
sbb
xchg
mov
popa
mov
shr
push
shl
fisttp
fidivr
mov
scas
sub
and
test
and
les
sbb
call
cmp
push
test
mov
cmp
aas
sub
ins
mov
and
pop
mov
sbb
adc
cmp
cs
mov
xchg
add
cmp
jg
pop
cs
in
pop
push
or
add
test
cmp
cmp
adc
mov
in
xchg
and
xchg
inc
xor
add
scas
dec
dec
push
sub
sbb
aas
mov
aaa
popa
fdivr
jmp
cmp
imul
xor
outs
xchg
adc
iret
xor
and
jp
mov
lods
je
sub
push
push
mov
and
clc
pop
addr16
xlat
and
xor
scas
ins
sub
in
sub
out
sub
add
mov
mov
mov
jo
dec
ins
xchg
adc
add
in
loopne
add
in
inc
push
xor
mov
mov
pop
add
mov
inc
inc
mov
adc
dec
es
push
inc
inc
out
mov
fld
cs
push
cmp
push
cmc
sub
pusha
cmps
dec
cwde
outs
ins
xor
retf
pushf
push
push
gs
mov
movs
sbb
or
or
(bad)
push
inc
gs
popa
sub
stos
repnz
mov
ror
add
jae
inc
pop
call
mov
in
jae
aas
sub
inc
fldenv
push
inc
sbb
in
dec
sbb
xor
lods
lods
mov
mov
pusha
jg
addr16
daa
je
sub
in
ret
jg
cwde
mov
je
dec
je
loopne
xor
sbb
cmp
arpl
inc
add
and
hlt
nop
mov
sbb
cdq
push
fs
cdq
nop
or
xchg
mov
cmp
xor
xor
mov
pop
adc
xor
push
loop
stos
mov
pop
out
push
push
inc
pop
cli
leave
not
dec
pop
or
dec
inc
ret
or
inc
pop
or
jmp
out
jl
push
pop
push
daa
pop
repnz
inc
shl
test
push
fwait
(bad)
and
sub
xchg
cmp
cmp
ret
xor
cs
adc
mov
test
mov
and
call
adc
xor
xchg
aas
pop
add
xchg
xor
ja
(bad)
jbe
dec
dec
jg
inc
inc
dec
arpl
enter
xor
xor
pop
mov
inc
pop
inc
push
dec
push
push
and
and
and
sbb
mov
add
rol
push
jg
rol
imul
pop
or
add
fs
call
icebp
daa
aaa
daa
add
(bad)
call
call
dec
cmp
add
mov
cs
mov
sub
cmps
add
mov
xchg
fadd
adc
call
(bad)
fisub
jbe
add
std
mov
or
mov
ins
mov
inc
add
pop
add
mov
push
dec
or
sar
mov
push
repnz
xchg
imul
in
xor
add
inc
ins
std
adc
das
pop
push
popa
adc
inc
into
(bad)
inc
and
addr16
cmp
clc
cmps
int
dec
jb
mov
xchg
xchg
sbb
and
(bad)
fld
aaa
or
enter
cdq
mov
push
pop
addr16
in
mov
adc
inc
imul
test
push
or
cdq
mov
jne
sub
adc
dec
push
gs
sar
xchg
pop
inc
in
mov
pop
cmp
fimul
and
test
movs
int3
rol
and
aad
pop
xchg
push
pop
and
(bad)
das
fs
and
mul
cmps
clc
push
dec
xor
dec
inc
dec
retf
sbb
ror
jecxz
pushf
add
out
popf
test
xor
sub
jmp
sbb
jne
push
outs
outs
call
mov
and
and
es
sbb
sbb
mov
ret
push
pcmpeqw
test
xor
add
push
xor
shr
std
mov
inc
jmp
and
cld
call
adc
jo
retf
push
aam
mov
dec
jne
inc
je
or
jmp
js
mov
push
sar
adc
sbb
test
lds
and
xor
add
add
or
push
sbb
dec
(bad)
arpl
test
inc
add
mov
mov
in
fld
or
das
clc
test
dec
into
add
pop
jl
pop
ja
(bad)
push
cmp
out
add
inc
out
cmpxchg
add
imul
jns
and
movntq
(bad)
in
dec
into
in
mov
add
dec
xor
sub
retf
pop
adc
mov
test
loope
into
add
hlt
stc
xchg
rol
mov
inc
icebp
or
cmp
int
inc
add
adc
adc
sbb
dec
push
adc
fistp
lock
sbb
mov
je
les
test
inc
jl
cmp
leave
xor
out
call
cli
callw
or
push
and
pop
sub
inc
push
adc
add
add
pop
add
sub
test
adc
sbb
inc
jg
cmp
lock
cmp
je
inc
dec
sbb
sub
xchg
xchg
aam
push
scas
fimul
jo
loopne
fistp
adc
adc
pop
push
jo
xor
mov
or
inc
outs
sbb
add
push
repnz
dec
hlt
(bad)
push
add
shr
mov
push
ficom
push
push
push
push
(bad)
sbb
mov
cmps
dec
adc
idiv
out
rol
cmp
into
push
adc
scas
imul
push
lock
adc
or
cmc
inc
inc
mov
pop
xor
ins
inc
xchg
aad
adc
add
in
push
push
cmp
xor
dec
cmp
adc
xor
rol
dec
jae
int
push
and
rcr
push
sub
sbb
mov
cmp
and
in
pop
gs
loop
sub
dec
adc
or
(bad)
dec
inc
out
and
adc
mov
xchg
icebp
adc
jne
add
push
adc
jo
push
(bad)
jl
jbe
movs
push
jo
pop
inc
gs
iret
rol
jb
imul
pop
in
popa
int3
cmc
das
pop
push
inc
lods
das
inc
and
or
dec
sbb
fs
adc
adc
je
xor
bswap
mov
cmp
cmp
inc
mov
cmove
or
add
push
mov
mov
ror
out
fcomp
push
pop
push
std
push
addr16
push
ins
push
push
add
in
stc
push
or
mov
push
in
in
sbb
sbb
shl
add
add
push
movs
loop
add
push
cmp
and
and
sbb
dec
push
inc
jne
ror
outs
(bad)
jo
add
mov
test
ins
gs
es
inc
outs
call
inc
js
je
sbb
push
mov
dec
or
bound
pop
push
(bad)
push
mov
dec
outs
cmps
lods
je
daa
into
ins
das
lods
imul
xor
sub
inc
outs
fs
dec
(bad)
sar
inc
dec
mov
ins
enter
xlat
add
sub
sbb
or
inc
push
xor
ror
adc
pop
sbb
xor
adc
movs
mov
sub
call
cmp
jo
sahf
add
and
aam
das
adc
rcl
ss
ss
push
mov
call
xor
add
push
sub
and
je
push
cwde
push
jg
dec
(bad)
mov
sub
(bad)
or
adc
sbb
enter
out
mov
ror
jmp
mov
jbe
jmp
mov
xor
unpckhps
xchg
ja
lea
jo
call
or
pop
adc
dec
pop
or
adc
inc
pop
jb
sbb
xor
dec
add
push
enter
fs
jo
pusha
add
js
test
push
mov
dec
mov
mov
mov
adc
mov
bswap
outs
xor
mov
sbb
push
inc
pop
retf
sub
je
test
aad
fs
and
xor
inc
sub
cs
or
js
in
push
push
pop
or
inc
ds
sbb
push
adc
sbb
mov
ds
ds
cld
xor
jle
or
adc
inc
push
inc
sbb
and
pop
rcr
pusha
add
pop
pop
(bad)
and
add
inc
push
push
ret
adc
sub
mov
fldenv
add
mov
cmp
add
inc
ja
lods
push
lods
push
push
daa
sub
and
adc
lock
add
xlat
xor
add
inc
(bad)
xchg
hlt
pop
inc
push
dec
cmovns
push
push
jo
add
mov
cmps
ins
pop
push
push
push
inc
inc
dec
dec
or
lods
jno
sar
pop
and
mov
pop
inc
inc
push
pop
iret
and
pop
sub
jb
jb
jmp
xchg
lock
cdq
dec
cmp
and
leave
adc
int
aam
imul
or
jbe
xchg
(bad)
ret
sbb
(bad)
mov
scas
pop
imul
test
adc
xor
pushf
sar
and
and
jle
jns
dec
pop
(bad)
int3
aaa
dec
hlt
mov
jle
adc
and
out
or
lock
push
fbld
imul
stc
jl
das
push
or
or
clc
adc
repz
fcom
and
jno
fcom
dec
mov
inc
adc
sub
ins
xchg
jne
sub
or
mov
mov
pop
aas
jl
lock
fsubr
loopne
push
add
fadd
or
add
stos
push
lods
sbb
imul
mov
int3
add
inc
daa
dec
adc
and
add
and
inc
dec
inc
push
add
mov
mov
psubsb
popa
cmp
dec
dec
clc
and
out
push
add
fisttp
(bad)
cmps
sub
pusha
mov
aam
jns
add
add
dec
retf
imul
pop
fcom
pushf
or
push
xor
sub
popa
pop
mov
in
xor
(bad)
mov
or
mov
test
pusha
adc
inc
inc
hlt
movs
adc
pop
dec
fimul
dec
stos
fld
mov
adc
hlt
adc
push
sub
mov
clc
push
lods
sbb
cmp
pusha
shr
xchg
das
sub
push
add
cs
cmp
imul
cmp
inc
aas
xchg
rol
out
imul
pop
pop
dec
sub
jp
or
mov
jl
mov
lahf
inc
fcmovbe
dec
loope
push
in
retf
sub
cmp
nop
std
cld
std
enter
pop
and
push
jb
xchg
clc
push
clc
fdiv
inc
inc
int
pop
sbb
dec
push
imul
in
rol
cmp
xchg
sbb
cmp
mov
ret
inc
or
inc
pop
lock
std
cld
shl
pop
in
in
shl
xor
add
dec
jge
shl
loop
rcr
sbb
popf
lock
pusha
enter
mov
mov
mov
add
push
xor
or
call
sub
iret
fld
dec
sar
and
imul
adc
cdq
xchg
fdiv
f2xm1
addps
xchg
cs
mov
xchg
jns
scas
and
cdq
mov
add
adc
push
js
int3
(bad)
dec
jae
add
ror
pushf
pusha
xchg
test
or
sbb
dec
call
(bad)
(bad)
loope
in
adc
enter
int
adc
jae
int3
sub
outs
in
cld
sub
retf
mov
sub
hlt
ret
pop
xchg
mov
inc
mov
inc
sub
mov
test
mov
hlt
xor
movs
clc
pop
lods
sbb
xchg
dec
lods
push
adc
test
movs
sub
pushf
adc
cdq
xchg
retf
and
add
mov
inc
mov
div
pushf
and
enter
retf
add
mov
pop
gs
jnp
add
ja
int3
xchg
pop
mov
push
mov
fs
movs
sub
pusha
cwde
jne
aam
pop
es
aam
xor
xchg
call
dec
push
pusha
sbb
mov
fs
sbb
add
push
or
pop
dec
cmps
jmp
and
jno
loopne
cld
lock
jbe
push
jmp
mov
pop
icebp
add
enter
dec
in
jl
mov
jno
arpl
ins
cs
xor
jg
jo
fnstsw
fs
mov
xchg
sbb
aam
aam
int3
cmp
jo
mov
xchg
mov
push
pop
mov
mov
mov
push
pop
test
pusha
cmp
shl
pop
ins
cmp
fstp
mov
pop
or
sbb
inc
sub
aad
sub
js
or
inc
xchg
sub
push
pusha
aad
ds
ror
fisttp
push
jo
adc
shld
push
push
push
es
add
dec
mov
xor
dec
pop
ret
ret
hlt
test
dec
mov
in
mov
data16
xor
bound
sub
adc
mov
in
call
nop
out
add
cmp
pop
shl
nop
retf
popa
push
pop
test
dec
add
in
mov
push
jb
xor
enter
out
pop
(bad)
and
push
(bad)
dec
jle
xor
fsub
jle
and
or
hlt
adc
pop
jle
sbb
sbb
or
hlt
hlt
sub
inc
lock
cs
jmp
shr
adc
dec
gs
sub
aam
or
jb
jb
push
dec
enter
xchg
(bad)
jmp
fmul
xchg
stos
sbb
or
repnz
or
mov
sub
sbb
arpl
and
or
jg
xchg
and
ror
and
cdq
and
push
cdq
xchg
or
dec
or
push
xor
add
sbb
dec
sub
pop
add
gs
cs
sbb
dec
je
and
lods
adc
in
dec
dec
mov
add
jmp
cmp
lahf
mov
jno
addr16
xchg
test
das
outs
adc
inc
mov
enter
jmp
call
cmp
mov
lahf
or
call
clc
inc
dec
push
xlat
repnz
pushf
jl
xlat
dec
(bad)
in
nop
out
das
mov
or
pusha
shl
or
or
push
repnz
add
dec
push
clc
mov
pop
ja
add
push
xchg
push
mov
outs
inc
pop
test
dec
dec
jno
jae
adc
lahf
pop
leave
lock
mov
mov
adc
dec
in
not
adc
xor
in
and
hlt
adc
add
jg
div
push
outs
push
adc
stc
gs
inc
rcr
lea
(bad)
dec
in
cld
sbb
loopne
inc
sar
lock
sbb
cmp
(bad)
push
cld
mov
adc
repz
or
dec
in
xchg
call
lods
lahf
call
test
sbb
sbb
inc
inc
inc
lods
add
push
retf
ret
mov
add
xchg
loopne
in
nop
pop
outs
mov
jb
pushf
pop
stos
aam
cmp
fsubr
adc
inc
out
xor
enter
sbb
or
and
rol
cmps
add
cmp
cmps
inc
je
pop
mov
sbb
xor
inc
jmp
mov
mov
xchg
mov
dec
pop
sub
daa
mov
cmp
rcl
in
mov
mov
mov
out
and
mov
adc
cld
in
clc
mov
cmp
push
retf
push
fld
enter
shl
xchg
xor
movs
or
cmp
test
add
pop
cdq
test
fadd
push
lods
push
add
retf
mov
shl
or
cmp
fucomp
loop
fsub
mov
leave
adc
stc
movs
scas
lock
fsub
cld
push
cmps
enter
jmp
daa
push
xchg
xchg
cwde
pop
fsub
mov
add
xchg
cdq
int3
mov
xchg
ins
sbb
xchg
in
addr16
xchg
sub
push
das
push
aad
or
mov
icebp
jns
jmp
(bad)
lea
xor
xchg
push
addr16
fsubr
nop
add
push
mov
cwde
outs
lods
or
pushf
fadd
addr16
xlat
and
data16
mov
inc
sub
lods
xor
fcmovbe
pop
push
jp
xchg
or
mov
shl
push
pop
shl
xchg
push
xchg
lea
iret
sbb
xchg
sbb
lock
das
int
popa
push
into
add
in
xchg
and
pusha
pusha
hlt
jbe
adc
clc
mov
cmp
push
xor
je
loopne
test
lods
out
jg
add
or
aam
xchg
pop
cld
jae
push
adc
sbb
test
pop
test
data16
scas
(bad)
jge
add
sub
ror
(bad)
adc
mov
sbb
cmp
adc
test
outs
gs
adc
mov
sub
pop
or
sub
sbb
xchg
push
enter
pop
out
dec
cld
in
fwait
adc
fldenv
dec
add
ud1
inc
dec
loop
cwde
cld
or
push
cli
inc
jge
inc
cmp
loopne
fidiv
aad
call
daa
test
push
test
or
and
enter
fild
lock
nop
push
(bad)
mov
or
js
fsub
cmp
adc
pusha
pop
add
jb
add
xchg
imul
retf
xor
int
pop
adc
inc
sub
add
xchg
and
and
sub
ror
pop
mov
add
dec
fild
inc
and
imul
jmp
sbb
adc
or
xchg
sbb
sbb
fistp
sbb
adc
sbb
mov
or
jge
bound
jecxz
test
dec
fwait
adc
mov
aas
nop
loope
xor
push
rol
or
and
mov
in
fldenv
push
sbb
adc
mov
add
hlt
fld
cdq
repz
sbb
cld
sti
cld
sti
sbb
push
clc
inc
sub
add
es
xchg
and
sub
cdq
xchg
retf
nop
lock
nop
sub
adc
add
xor
int3
push
fstp
add
call
xchg
jl
adc
and
sti
in
cmps
in
(bad)
ficomp
or
imul
hlt
or
adc
add
adc
fdivr
xchg
fidiv
js
add
or
push
fsubr
aam
push
cmp
or
loopne
sar
dec
ss
xchg
int
sti
rcr
mov
dec
lea
adc
ror
enter
jb
adc
les
ins
(bad)
ror
movs
xor
lock
push
inc
dec
jnp
add
test
or
retf
push
mov
adc
ret
adc
xor
push
(bad)
fstp
repnz
ins
xor
mov
and
mov
mov
out
je
or
adc
dec
shl
(bad)
cmp
sbb
arpl
adc
push
xor
push
add
mov
inc
jmp
dec
arpl
xor
xchg
push
les
out
or
(bad)
in
push
xchg
jo
xchg
and
mov
add
mov
or
dec
sub
sbb
test
aas
imul
movs
or
mov
cdq
xchg
or
cwde
les
xchg
xchg
pop
ror
cdq
fsub
pop
nop
nop
push
jno
and
imul
jo
push
pop
enter
dec
sti
mov
mov
pop
lds
imul
enter
test
pop
xor
aam
cmp
dec
js
ins
leave
nop
pop
dec
jl
je
and
jb
jo
test
call
sbb
inc
push
imul
in
push
add
pop
scas
lods
add
nop
retf
call
sbb
or
jecxz
xor
imul
push
xchg
pusha
or
push
push
jns
and
and
pop
sbb
lock
cwde
pop
in
jb
and
sub
(bad)
push
dec
add
xlat
mov
mov
test
or
add
js
movs
xchg
or
cs
fwait
pop
or
inc
aaa
push
clc
ror
movs
mov
and
rcr
sbb
repnz
cmp
inc
sti
fsubr
inc
adc
pop
test
adc
cmps
daa
jnp
out
fldenv
test
push
dec
out
pop
add
test
or
or
add
adc
inc
enter
add
mov
hlt
dec
dec
or
and
ror
shl
das
sub
hlt
(bad)
xor
sub
outs
push
xchg
or
push
xchg
inc
add
mov
pop
je
cmp
jle
sub
pop
aas
mov
shl
jae
or
dec
out
das
dec
or
push
nop
sbb
aad
nop
iret
add
add
inc
add
sub
cmp
idiv
mov
push
xor
add
sbb
push
xchg
enter
and
and
add
push
or
movs
sub
movs
movs
fwait
xor
les
xor
adc
adc
nop
dec
push
loopne
hlt
movs
or
push
adc
inc
and
loop
jns
or
fdivp
mov
inc
lea
mov
add
sbb
jecxz
xchg
add
mov
call
mov
(bad)
or
cmp
and
(bad)
mov
lods
imul
aad
jo
or
imul
rol
xor
ret
push
inc
outs
aas
cld
cli
xchg
adc
sub
shl
hlt
dec
imul
imul
xor
es
xchg
dec
call
jmp
loopne
cli
ror
icebp
adc
dec
arpl
(bad)
aam
xchg
popf
inc
ss
mov
dec
sub
cmp
adc
int3
cli
daa
clc
push
fnstcw
int3
mov
add
xchg
xor
enter
enter
xchg
les
push
pop
pop
sub
jg
inc
adc
cli
sub
sar
fisub
add
(bad)
and
je
adc
and
mov
add
or
adc
ins
mov
mov
adc
arpl
add
mov
and
adc
or
cli
or
es
fimul
xchg
dec
pop
sub
cdq
mov
mov
mov
lods
adc
xchg
nop
ds
dec
mov
push
fstp
ficom
xor
fldcw
fidiv
dec
ror
sti
cmp
pop
sub
movs
mov
mov
movs
int3
pusha
mov
sbb
push
imul
xor
sar
pushf
loopne
jns
push
or
fdivp
nop
xchg
fist
(bad)
fisttp
fwait
iret
jecxz
mov
cmp
inc
(bad)
sub
jo
jmp
lea
das
push
mov
or
xchg
pushf
loopne
test
cli
mov
pusha
fild
out
std
adc
je
push
dec
bound
add
in
nop
iret
sbb
js
aas
xchg
add
adc
js
scas
push
test
dec
fdiv
dec
push
mov
les
mov
ret
and
inc
in
ins
push
push
cdq
xchg
or
cwde
or
jb
and
pushf
adc
mov
and
and
retf
daa
les
xchg
or
mov
or
adc
dec
gs
mov
push
retf
add
add
movs
xor
xchg
dec
daa
xchg
sub
mov
mov
enter
fsubr
and
add
add
rol
fild
sbb
sub
loope
xor
dec
enter
push
adc
add
aam
je
aaa
sbb
leave
out
cli
js
push
call
cmp
adc
pusha
inc
pushf
cmp
out
push
xchg
pusha
lds
and
jmp
aas
dec
test
test
test
test
mov
ins
and
in
jmp
in
sbb
adc
xchg
mov
paddusb
aas
jo
xor
push
mul
mov
outs
or
nop
loope
call
or
mov
dec
or
dec
or
or
inc
dec
leave
mov
add
pop
pop
mov
pop
and
movs
push
and
cmp
xchg
mov
movs
push
inc
push
leave
sub
jo
cmp
mov
mov
xor
loop
sbb
adc
dec
out
dec
int3
cmp
xor
es
dec
jecxz
mov
add
xchg
pop
inc
mul
cwde
stos
mov
ins
sbb
retf
or
call
hlt
or
inc
or
inc
dec
es
pop
aam
push
popa
fadd
cmp
sbb
inc
mov
stc
pop
jne
inc
sbb
push
adc
ds
and
and
xor
adc
push
or
sub
loopne
dec
jbe
add
cdq
in
sbb
and
in
inc
sbb
lahf
clc
mov
loop
mov
adc
lahf
aam
cmc
jecxz
adc
pop
mov
mov
sbb
and
sbb
mov
sub
or
pop
jecxz
lods
xchg
sbb
or
int
jmp
cmp
cli
lods
data16
cs
leave
add
add
push
cmp
push
cmp
inc
mov
clc
stc
psubw
stc
jbe
loopne
popf
dec
in
mov
lock
push
hlt
popf
in
stc
cmps
ins
shr
lods
in
add
sbb
xor
jb
mov
adc
xchg
xor
or
pusha
sbb
sti
push
fdivr
aad
add
mov
addr16
cmps
das
in
sub
cmps
test
cld
xchg
xchg
aad
(bad)
hlt
or
sti
or
fsub
(bad)
fdivr
pop
pop
in
mov
pop
stc
pop
adc
xchg
push
mov
hlt
cmp
rcl
and
push
cs
aam
or
movs
(bad)
or
fadd
in
int3
push
movs
and
ret
add
sbb
jb
rol
in
or
xor
mov
mov
inc
push
movs
mov
inc
test
in
sub
pop
and
cmp
nop
mov
mov
in
xor
test
test
cmp
bound
sub
pop
(bad)
mov
xchg
stc
hlt
loopne
inc
jb
stc
mov
sbb
push
sbb
test
leave
test
sbb
push
les
inc
pop
push
test
rol
adc
inc
adc
pushf
enter
and
or
xchg
adc
stc
xor
in
dec
push
cdq
movs
lea
xchg
xchg
cld
push
les
out
adc
int
test
in
push
xor
mov
mov
loop
pop
jbe
dec
call
pop
xchg
enter
aam
test
dec
cmp
xchg
add
aaa
xor
sbb
xor
xchg
aam
inc
das
push
stc
daa
into
cmp
pop
call
xchg
pop
adc
or
pop
cmp
pop
das
sub
nop
stc
pop
cmp
mov
or
jns
dec
dec
push
or
daa
push
xchg
in
push
test
and
dec
leave
or
xchg
add
xchg
or
inc
ss
push
(bad)
stc
xchg
out
push
cmc
ja
cmp
mov
aad
frstor
addr16
push
mov
stc
daa
ins
cmp
pop
nop
test
stc
test
sub
pop
(bad)
stc
inc
ss
mov
out
mov
ret
push
push
aaa
mov
push
xchg
push
in
les
xchg
dec
cmps
push
movs
das
icebp
add
stc
dec
sbb
enter
stc
jb
cmp
inc
stc
sbb
sub
jmp
sub
sub
stc
movs
inc
pop
inc
inc
or
pop
mov
test
cmp
push
inc
and
je
or
or
xchg
xchg
pop
xchg
sbb
sbb
mov
xor
mov
mov
or
and
mov
and
retf
inc
mov
movs
cmp
scas
sbb
jmp
add
add
out
je
or
or
sub
xchg
push
int3
in
fwait
or
pop
jl
add
and
mov
push
and
in
mov
mov
lea
add
movs
add
sbb
es
jl
rcr
lods
adc
xchg
xor
data16
adc
sbb
cld
ror
add
shl
stc
enter
pop
or
add
inc
or
loope
dec
aam
and
inc
movs
or
lods
xor
add
sub
sub
mov
sbb
call
or
add
sbb
adc
sbb
xor
cwde
or
(bad)
xchg
hlt
dec
mov
push
push
add
mov
ds
push
rcl
fsub
cmps
fs
push
xor
or
push
jb
mov
add
mov
enter
outs
outs
add
add
adc
jmp
sbb
mov
imul
add
sbb
retf
in
cmp
in
xor
push
fs
or
call
add
sbb
movs
inc
js
inc
scas
and
jno
ret
add
in
inc
ss
cwde
mov
(bad)
xor
nop
add
mov
movs
sbb
adc
and
mov
pop
mov
test
xchg
sbb
adc
jmp
test
nop
jp
dec
leave
in
lock
fmul
fmul
xchg
or
mov
cld
lock
mov
cmp
pop
or
push
and
xchg
(bad)
enter
dec
jecxz
and
mov
xor
icebp
add
ins
jns
cmps
push
pop
xor
sbb
mov
and
aam
sbb
test
push
test
sub
xor
adc
xor
mov
ins
movs
adc
retf
and
dec
sbb
mov
mov
jecxz
jb
aas
mov
dec
lock
jns
dec
push
lock
sbb
(bad)
hlt
(bad)
inc
pop
cdq
xchg
retf
or
dec
sbb
pop
pusha
lahf
cmove
jo
bound
nop
retf
adc
enter
adc
les
pop
push
cmp
add
cmp
or
jns
aas
pcmpgtb
jle
retf
push
adc
add
dec
dec
push
in
fadd
nop
xlat
mov
imul
fmul
xor
call
sbb
fsubr
or
dec
xchg
je
cmps
or
rol
jb
ja
movs
es
iret
add
pusha
cmps
ins
jns
test
pop
mov
xor
or
or
jp
pop
xchg
pop
inc
inc
inc
jb
mov
jns
daa
jo
push
ins
cld
add
cmps
movs
lock
pop
ins
repnz
int3
out
inc
dec
mov
adc
inc
dec
movs
ret
add
push
clc
out
loopne
add
adc
jno
loope
pushf
xchg
and
mov
arpl
cmp
pop
add
ja
xor
adc
add
jecxz
sbb
stos
test
xor
pop
cmp
retf
pusha
dec
pusha
dec
pusha
dec
dec
cmp
add
push
add
lock
cld
call
clc
pop
sti
test
inc
pop
xor
test
jmp
dec
icebp
or
dec
fcmovnu
fs
xlat
movs
mov
and
add
pop
push
rol
pop
dec
pop
add
fwait
adc
clc
push
jmp
fadd
mov
push
sub
mov
sbb
inc
mov
push
pop
packssdw
int
ficom
mov
imul
xlat
mov
xor
mov
je
fwait
outs
repnz
dec
mov
je
stos
mov
adc
jmp
jg
fsubr
mov
cli
pop
je
shl
xchg
and
adc
test
test
mov
fdiv
outs
ret
lea
stc
adc
lods
and
es
mov
lea
cwde
shr
add
or
push
or
inc
inc
fimul
pop
dec
movs
adc
pop
es
lock
jns
call
sbb
mov
xchg
scas
pop
inc
rcl
push
fsubr
or
js
adc
fwait
cmps
mov
shr
or
add
or
dec
push
add
hlt
nop
sub
dec
repnz
jnp
sbb
xor
push
and
lahf
and
dec
shr
jo
js
dec
xor
jl
test
mov
ror
jmp
pop
xchg
je
or
mov
xor
cld
xor
add
movs
es
add
fdivr
mov
or
dec
not
inc
push
pop
push
inc
daa
inc
push
push
add
cmp
xchg
and
fwait
and
mov
cmps
sbb
mov
xor
mov
dec
sub
dec
das
add
mov
cmp
outs
pop
and
xor
bound
pop
mov
shl
xor
jg
mov
enter
outs
gs
and
and
cmps
add
pop
(bad)
pop
xor
mov
div
sub
inc
aaa
add
sub
push
outs
daa
mov
loope
test
jl
inc
scas
push
(bad)
adc
stos
and
pop
or
mov
and
ins
aaa
cmovg
xchg
xchg
push
or
or
jmp
fistp
lahf
or
dec
dec
dec
dec
push
dec
push
push
mov
sbb
adc
pop
inc
push
dec
push
push
(bad)
xor
inc
es
xor
inc
dec
inc
popa
aas
xor
inc
inc
or
outs
arpl
or
mov
dec
adc
(bad)
or
outs
add
mov
mov
jle
add
or
rol
push
jo
mov
push
and
and
mov
cs
dec
and
and
xchg
push
xchg
sbb
jae
fs
test
xor
xor
fdivr
or
xor
scas
adc
and
fs
mov
scas
int3
jle
dec
fsub
mov
sbb
jae
das
(bad)
adc
cmp
rcl
xor
or
add
cmp
push
add
adc
fiadd
ins
and
jecxz
enter
scas
das
sbb
or
das
xlat
or
xor
ja
dec
cli
mov
sub
(bad)
cmp
lock
(bad)
jb
lea
dec
add
fwait
push
sahf
int
sub
cmps
adc
and
pop
mov
mov
mov
jl
xchg
or
inc
jg
popa
into
or
dec
daa
(bad)
sbb
outs
mov
call
scas
aad
shr
mov
jg
daa
lea
inc
mov
rol
retf
jns
cmp
dec
(bad)
jno
inc
pop
cs
xchg
pop
in
ret
pop
and
das
jae
jno
or
pop
or
add
popa
(bad)
and
into
jle
fidiv
push
push
xchg
mov
(bad)
cmp
inc
out
sbb
push
inc
push
jne
ds
dec
inc
push
sbb
inc
push
dec
push
loope
jo
or
jne
push
sub
test
or
pop
push
fcom
pop
push
addr16
sub
dec
xlat
imul
aaa
out
scas
fadd
inc
ja
dec
dec
jmp
add
and
xchg
pusha
mov
shl
ror
xchg
push
cmps
call
daa
pop
lods
dec
rol
push
pop
jg
sbb
imul
call
mov
ins
lds
inc
xor
or
popa
push
sbb
add
das
push
inc
push
push
cmps
xor
mov
and
pop
fld
xchg
sub
(bad)
push
gs
xchg
or
xor
and
pop
out
push
xchg
or
stos
inc
rcl
mov
add
iret
test
inc
cmps
mov
or
repnz
fadd
stos
daa
pop
inc
push
push
pop
pop
cdq
in
ds
push
inc
pop
addr16
inc
or
inc
adc
xchg
dec
push
push
daa
add
out
or
ins
in
imul
scas
cmp
mov
xchg
push
ss
arpl
xor
inc
adc
inc
dec
xchg
sub
push
xor
adc
stos
retf
lods
mov
mov
outs
pop
mov
scas
mov
dec
inc
xchg
mov
lock
push
sub
dec
push
test
in
and
jae
not
data16
mul
or
push
mov
push
dec
outs
imul
inc
xlat
(bad)
add
je
adc
xor
xlat
scas
sbb
adc
punpckhdq
and
fmul
push
sub
outs
(bad)
(bad)
leave
popa
cmps
or
mov
fild
jne
rcl
push
test
call
test
mov
imul
movs
adc
mov
sbb
xchg
mov
gs
xor
sub
mov
ja
or
dec
ja
or
pop
lods
mov
push
daa
inc
jg
add
mov
pop
ror
ret
ficomp
mov
inc
or
movs
test
shl
pusha
or
push
mov
rcl
xchg
rol
pushf
mov
cs
push
ja
ins
add
scas
inc
daa
or
push
daa
das
daa
add
or
mov
xor
lahf
mov
add
(bad)
ins
cmp
adc
ret
inc
mov
out
bound
in
ins
aaa
outs
aaa
or
and
ficomp
iret
mov
mov
mov
aaa
xchg
mov
xor
push
pop
aaa
adc
mov
mov
cmp
push
inc
inc
ins
mov
and
frstor
mov
sub
or
push
jbe
xor
push
push
dec
ret
xchg
aad
cmp
xor
push
imul
mov
cmp
daa
mov
mov
jb
(bad)
je
out
and
adc
daa
jae
cmp
push
adc
addr16
es
gs
dec
aaa
and
xor
pop
outs
ret
imul
in
loopne
or
sub
dec
xchg
rcl
xchg
mov
push
jb
pop
das
sub
push
cmp
das
dec
push
push
push
cmp
das
jg
ds
ja
cs
push
mov
push
jl
dec
push
xchg
and
jl
xchg
cmc
and
mov
movaps
sub
or
dec
rol
(bad)
jecxz
and
outs
stos
xchg
lods
cmc
shl
mov
and
and
ins
das
and
test
(bad)
cmp
jae
jae
push
or
arpl
fistp
test
mov
iret
cmp
jge
cs
and
jns
fidiv
adc
pop
add
ja
mov
frstor
cdq
mov
aaa
sbb
sub
mov
adc
cmps
enter
adc
push
inc
push
push
dec
push
dec
xor
pusha
ficomp
loop
cmp
and
sbb
data16
adc
push
data16
or
xchg
cmp
inc
arpl
or
adc
push
inc
outs
mov
cmp
pop
fcom
(bad)
push
inc
leave
clc
sub
sbb
dec
(bad)
fiadd
ss
inc
jo
fmul
adc
pop
xor
xor
xchg
or
push
inc
dec
push
or
inc
jmp
lods
(bad)
fstp
dec
dec
lods
and
dec
fcomp
(bad)
pop
ret
xchg
aaa
adc
rol
popa
add
outs
iret
jb
dec
mov
mov
dec
dec
dec
inc
das
or
daa
mov
push
pop
dec
sub
add
pop
mov
pop
lahf
sbb
dec
inc
out
mov
addr16
(bad)
fidiv
jnp
adc
dec
gs
inc
sub
clc
fadd
(bad)
dec
fs
push
pop
inc
jg
cs
or
test
shl
xor
pop
dec
jbe
ins
imul
dec
mov
xchg
and
out
push
push
pop
push
pop
lods
jns
fist
mov
and
and
enter
rol
dec
imul
aas
pop
dec
push
inc
ret
add
cmc
sbb
pop
sub
xchg
div
movs
data16
jl
add
mov
test
mov
push
dec
inc
push
mov
inc
inc
inc
push
dec
inc
pop
inc
mov
dec
push
xor
inc
gs
daa
inc
sahf
push
pop
and
dec
push
adc
push
inc
mov
call
sub
adc
ja
push
neg
dec
pop
popw
or
sti
inc
inc
push
inc
dec
daa
push
dec
das
cmp
inc
push
ret
or
sbb
dec
test
cmp
inc
dec
fadd
cmp
das
scas
fnsave
push
dec
in
or
adc
das
sbb
aaa
push
inc
inc
fs
push
add
fisub
dec
inc
ja
dec
adc
xchg
push
fdiv
arpl
sbb
dec
push
retf
push
mov
xchg
mov
add
fist
dec
inc
dec
push
push
add
xor
outs
dec
scas
push
outs
and
lods
imul
push
(bad)
scas
outs
sbb
pop
pop
iret
pop
dec
pusha
fidivr
(bad)
inc
movs
neg
push
inc
or
mov
adc
ja
adc
ret
inc
fisttp
mov
mov
popf
in
ja
add
and
test
and
dec
in
jmp
or
xor
push
sub
je
xor
aam
and
and
mov
cmp
in
sub
inc
add
mov
in
or
sub
inc
scas
xor
fidiv
or
mov
jge
stc
adc
xor
mov
sbb
sbb
push
mov
dec
pop
sbb
mov
or
lock
xchg
sub
in
leave
test
xor
(bad)
mov
in
es
xchg
dec
call
lock
pop
int3
pusha
in
mov
retf
and
shl
sub
sbb
in
mov
push
xchg
jbe
adc
or
add
cwde
fbstp
inc
ins
loop
in
imul
push
movs
stos
sub
ret
inc
or
push
inc
mov
fistp
sub
and
cmp
jle
aas
mov
sbb
or
inc
popa
sub
cmp
sub
adc
nop
aad
jmp
or
xchg
cmp
or
adc
jb
and
sub
jl
add
push
push
push
jne
dec
mov
fimul
setae
lock
out
and
or
and
or
push
jae
fsubp
ret
icebp
jbe
ficomp
cmp
adc
in
inc
jmp
cdq
add
imul
rcr
xor
xchg
test
cmps
scas
push
inc
inc
and
add
in
adc
popf
daa
(bad)
jb
sub
imul
add
mov
rol
aam
(bad)
mov
jg
je
and
or
icebp
inc
ins
xor
es
sub
mov
push
push
call
call
mov
addr16
pushf
dec
not
xchg
adc
add
inc
lods
cmps
mov
jl
mov
adc
cld
push
loopne
int3
push
ins
cmp
mov
push
in
icebp
add
icebp
sub
xlat
and
lahf
cmp
push
inc
add
adc
inc
out
test
ficom
aas
inc
xor
mov
sbb
dec
and
mov
lea
retf
push
adc
(bad)
dec
xor
stos
sbb
dec
push
push
dec
add
cld
inc
pcmpgtb
nop
scas
inc
test
sub
hlt
and
sbb
pop
in
mov
getsec
mov
cli
out
xor
or
jle
outs
dec
jno
or
xor
or
in
mov
dec
push
push
stos
leave
hlt
and
mov
adc
or
add
cmp
or
xor
bound
jnp
lods
popa
loop
inc
mov
or
inc
scas
test
pusha
adc
add
lods
or
iret
add
sti
mov
dec
in
push
test
dec
inc
mov
inc
sub
mov
and
loope
cmp
jne
daa
inc
adc
lock
mov
shl
sbb
clc
pop
fsub
enter
ins
leave
pop
xchg
sbb
es
inc
inc
cwde
or
inc
push
xlat
aas
dec
dec
cmps
outs
jae
and
push
and
movs
adc
icebp
aas
inc
inc
movs
rcr
push
dec
pop
xchg
hlt
xor
dec
xlat
cmp
ret
add
retf
movs
dec
ret
pop
xor
test
dec
ds
xor
test
push
xor
ror
mov
stc
push
(bad)
cmps
add
add
dec
les
ret
xlat
push
nop
push
adc
mov
xchg
sub
add
pop
hlt
daa
ins
je
mov
sub
and
add
nop
add
das
xchg
ror
dec
dec
sub
push
push
and
rcl
loope
mov
inc
ror
lods
js
cli
lods
pop
jp
pop
movs
test
movs
std
outs
xchg
jae
push
jo
adc
lock
mov
xchg
scas
sbb
inc
(bad)
jbe
fstp
add
pusha
xchg
and
daa
aas
daa
cmp
cmp
xchg
fimul
mov
inc
sar
cdq
pop
cld
xor
push
push
sbb
mov
inc
and
enter
mov
sbb
test
je
fld
jne
mov
add
pop
xlat
dec
loopne
fcom
adc
ins
fadd
add
movs
icebp
adc
fidivr
daa
pusha
push
ret
push
call
sub
out
iret
ins
inc
mov
xchg
retf
ins
jo
adc
push
jns
push
rcr
into
mov
ins
pop
scas
or
pop
mov
jg
jmp
adc
movs
adc
mov
jle
fcmovnu
loop
cmps
dec
adc
je
lea
jns
inc
retf
push
sub
or
outs
inc
push
fidivr
jp
popa
cmps
mov
sbb
shl
mov
xor
dec
aaa
cld
setae
popa
imul
push
bound
push
je
or
ds
jl
sbb
adc
out
(bad)
aad
daa
inc
pop
or
xchg
push
pop
movs
xor
mov
sbb
test
inc
sar
mov
cmp
loop
dec
iret
sbb
or
je
sbb
mov
xlat
inc
pop
jmp
mov
push
jne
hlt
xchg
or
xchg
add
cmp
or
fbstp
cmp
push
pop
adc
fisttp
aam
sbb
(bad)
xchg
push
add
(bad)
add
add
jb
(bad)
(bad)
inc
add
bound
int
imul
push
xlat
cmp
lea
sbb
cwde
ins
cwde
std
mov
xchg
lahf
jge
add
mov
add
mov
in
xchg
(bad)
mov
in
push
sbb
pop
add
or
inc
call
call
inc
adc
pop
mov
cmp
popa
rcl
xor
out
mov
icebp
cmp
adc
or
pop
mov
pushf
jmp
mov
inc
and
ret
lds
jne
inc
jl
fdivr
mov
xor
in
and
call
jmp
add
or
popf
xor
fld
adc
cmc
push
not
imul
pop
add
shr
movs
dec
adc
adc
inc
inc
(bad)
jmp
inc
ins
jne
push
jno
xor
loop
and
sti
jmp
fimul
dec
inc
std
mov
enter
jnp
sbb
cmps
or
retf
add
in
clc
mov
in
and
sti
clc
mov
and
jns
add
sti
in
clc
pop
ins
int
add
and
sbb
pop
jns
fdivr
inc
fdivr
loopne
dec
in
aas
ins
add
sti
clc
lods
dec
and
push
ss
scas
add
sbb
stos
jg
sbb
pop
push
sub
loopne
ret
hlt
and
or
int
xchg
scas
imul
jmp
bound
adc
les
test
movs
and
out
ins
test
add
shr
and
clc
clc
ds
test
or
xchg
retf
adc
loopne
dec
push
inc
xstore-rng
cmps
les
loop
sbb
ins
pop
lock
push
retf
fistp
test
jge
dec
or
mov
dec
bound
rcr
mov
retf
cld
or
mov
add
aad
inc
add
inc
fdiv
push
mov
jmp
xchg
jmp
adc
int
(bad)
sbb
adc
sti
fidiv
adc
pop
adc
loopne
xor
fidivr
and
mov
rcr
add
test
jae
icebp
clc
fistp
(bad)
enter
(bad)
sub
jo
xchg
dec
js
test
sub
jns
xor
dec
hlt
cwde
add
push
mov
add
inc
or
xor
mov
iret
and
repnz
(bad)
test
ds
dec
ds
dec
aam
cdq
inc
add
xchg
or
out
inc
ja
xchg
mov
es
stos
and
mov
cld
and
mov
push
lods
push
sbb
stos
pop
xchg
push
dec
mov
js
ud1
dec
sbb
dec
and
es
retf
cmp
push
ins
lock
xor
add
mov
inc
idiv
inc
push
xchg
add
lods
inc
mov
add
pop
sbb
pop
cld
ret
adc
rol
mov
adc
and
ja
inc
je
jno
xchg
icebp
pushf
cs
inc
inc
inc
add
jmp
cmps
push
or
inc
push
or
sub
js
je
(bad)
adc
sbb
cwde
mov
add
xor
(bad)
jb
sti
(bad)
sbb
and
test
test
ret
jle
push
push
inc
dec
push
inc
cli
add
jnp
inc
mov
inc
dec
enter
shld
das
loopne
pop
sbb
add
das
cmp
test
inc
rcl
dec
enter
cmp
mov
push
mov
mov
outs
jnp
add
and
leave
inc
dec
push
xor
pop
dec
and
rcr
(bad)
jo
jmp
or
pavgw
aas
jg
mov
cmp
inc
xchg
adc
sub
ror
les
or
adc
std
jo
inc
jg
cmp
out
and
inc
inc
or
loopne
mov
jg
nop
test
clc
jl
shr
xchg
stc
shl
cmp
pop
enter
je
xchg
leave
add
and
xor
xchg
lock
xchg
cld
mov
nop
int
enter
ficom
ins
xor
ins
add
sti
(bad)
(bad)
xchg
lock
cmp
hlt
scas
cs
rol
jmp
mov
add
movs
rol
in
test
inc
enter
ror
jp
inc
leave
or
or
xor
shl
rcl
sbb
inc
movs
aaa
ins
xor
push
subps
jl
sub
lods
jl
in
push
shl
dec
movs
xchg
js
hlt
xchg
mov
push
adc
pop
mov
jmp
xchg
je
loopne
retf
pop
xor
scas
cmc
jmp
fdiv
movs
and
jb
inc
pop
ror
xchg
dec
mov
and
or
sbb
mov
push
or
xor
jne
scas
out
test
cmps
pop
movs
(bad)
aad
aaa
aaa
adc
daa
adc
adc
adc
add
hlt
dec
inc
dec
sub
cmps
pop
pusha
fild
sub
retf
add
inc
hlt
imul
jne
jl
imul
clc
repnz
clc
test
sbb
movs
fnsave
ins
xor
push
cld
clc
sar
(bad)
mov
call
inc
push
add
sbb
or
sbb
dec
xor
inc
lsl
je
outs
add
add
xchg
adc
fcom
in
inc
ltr
stc
retf
adc
mov
cmovs
inc
es
aas
repnz
sub
mov
pusha
push
test
xor
jecxz
aaa
lds
test
sbb
test
push
xchg
fist
sub
and
mov
sbb
(bad)
lahf
mov
push
sub
mov
ss
or
xlat
and
cmp
mov
in
adc
mov
cmp
mov
mov
push
rol
or
jg
push
outs
adc
rcr
cmp
test
or
dec
jnp
sbb
mov
mov
pop
and
adc
rcl
sub
imul
adc
xor
push
mov
test
rol
mov
mov
call
aas
xchg
call
loopne
dec
xor
mov
fadd
popa
gs
sub
xchg
stos
jge
aad
mov
retf
push
fimul
hlt
int3
enter
in
enter
(bad)
jns
dec
fcmovb
sbb
sar
mov
lods
cmp
mov
adc
dec
popa
jmp
int3
shr
sahf
int3
sub
ret
stos
xor
call
imul
in
pop
adc
inc
push
push
mov
sub
dec
pop
sar
cmp
dec
push
jmp
pop
je
stos
add
xchg
aaa
mov
dec
adc
or
imul
add
or
in
cmp
inc
dec
sub
sub
pop
sbb
jle
mov
ffree
mov
adc
or
int3
pushf
push
ds
push
(bad)
out
rcl
shl
xchg
(bad)
les
push
movs
pushf
mov
nop
sub
adc
adc
jne
and
bound
and
jns
fwait
mov
lock
clc
push
push
push
push
sti
sub
pop
push
fcom
das
js
in
ja
pushf
mov
or
xchg
cmps
rcr
pop
out
arpl
pop
adc
cmp
popf
xor
fcomp
fsubr
sbb
mov
mov
test
inc
pop
inc
and
lods
push
fadd
xor
or
loop
mov
pop
movs
mov
jb
and
sbb
mov
ret
push
movs
xchg
mov
push
inc
push
mov
dec
cmp
push
adc
jge
mov
cwde
aas
aam
cmc
pop
pop
inc
add
mov
or
and
mov
jo
clc
pusha
test
mov
lock
xchg
fnstenv
das
push
fs
rcl
inc
cmp
fisttp
pop
sbb
and
movs
xor
dec
mov
dec
and
xchg
pop
cmp
(bad)
jge
adc
push
dec
pop
inc
add
out
mov
pop
sub
jge
add
je
cmp
mov
push
mov
mov
mov
jl
nop
shl
and
stc
adc
je
mov
mov
ins
bound
push
or
or
pop
fisub
lock
stos
mov
jmp
xor
shr
cmp
mov
pop
in
xor
push
pop
jae
popa
arpl
ret
cmp
and
inc
data16
aas
or
out
loopne
xchg
(bad)
dec
scas
add
bound
ror
leave
xor
or
dec
imul
jne
jo
push
or
xchg
cmc
add
sbb
xchg
add
ror
pop
push
mov
add
mov
adc
fdivr
add
jg
push
sub
ins
clc
clc
or
lock
mov
cmp
cmps
sub
or
sbb
pop
mov
fadd
in
add
nop
out
cmp
sub
sbb
xor
cmps
push
loopne
nop
and
add
mov
sub
push
bound
in
jns
stos
test
sub
popf
adc
inc
xor
and
xchg
sbb
mov
enter
sbb
in
cld
dec
xchg
xchg
or
sbb
dec
mov
sub
dec
mov
dec
mov
dec
mov
dec
mov
mov
rol
push
push
jno
stos
popa
jecxz
mov
or
cmp
push
sub
xchg
jbe
xchg
daa
pop
dec
pop
xor
or
stos
cs
or
push
loope
pop
rol
out
(bad)
mov
cmovs
sbb
xor
pop
test
gs
pop
jl
sub
or
rol
inc
and
mov
ror
js
or
add
pop
jge
xor
or
pop
cmp
pop
add
rol
push
dec
pop
dec
cdq
mov
(bad)
enter
xor
xor
mov
nop
or
nop
push
push
mov
dec
pop
and
xchg
adc
leave
jg
dec
inc
push
push
dec
dec
push
push
dec
inc
inc
pop
(bad)
fdivr
inc
dec
and
mov
or
retf
push
in
inc
mov
ret
fsubr
mov
or
lea
push
pop
and
dec
and
dec
jne
gs
push
movs
dec
clc
clc
clc
sahf
pop
xor
and
in
pop
jb
inc
in
lea
hlt
call
call
mov
sub
loopne
adc
arpl
fadd
or
ret
leave
push
and
or
xchg
xchg
(bad)
(bad)
ja
push
aam
or
adc
xor
push
clc
pop
cmps
ret
xchg
xlat
jecxz
sbb
out
outs
mov
jb
ins
pop
jg
js
out
and
sub
adc
stos
inc
and
and
mov
test
test
add
push
pop
(bad)
mov
cmp
xchg
add
and
add
dec
ret
or
clc
call
es
popa
bound
gs
imul
jo
popa
std
outs
dec
cwde
jne
ja
jns
pushf
or
add
das
sub
mov
push
ret
xlat
ror
xlat
pop
sub
cmp
and
cmp
jbe
test
nop
fwait
sbb
dec
pop
sti
add
inc
pop
lock
inc
dec
jle
shl
xor
or
ror
or
and
sbb
rcl
mov
sahf
push
in
jo
and
rcl
push
clc
sbb
add
adc
mov
pop
and
imul
rol
pop
mov
arpl
pushf
inc
mov
cmp
or
push
push
retf
sbb
leave
ret
pop
test
push
(bad)
sbb
or
shl
push
push
and
cld
jb
sbb
dec
or
lea
ins
mov
and
ror
call
jecxz
push
sbb
aam
xor
movs
call
movq
clc
add
inc
or
fcomp
adc
jbe
jbe
mov
mov
mov
mov
fmul
mov
loopne
test
push
xlat
sbb
pop
and
or
adc
add
enter
out
pop
mov
push
and
outs
fs
push
dec
dec
jmp
imul
xchg
pop
clc
pop
add
sub
xchg
inc
and
inc
aad
sbb
push
(bad)
and
dec
mov
or
mov
inc
adc
or
shl
into
add
adc
and
repnz
and
xchg
daa
shl
test
or
push
push
out
add
push
js
push
iret
and
jae
adc
cmp
jb
imul
xchg
lods
inc
dec
test
add
sub
repnz
adc
adc
add
sub
sub
sub
and
sbb
adc
xchg
inc
leave
or
sub
sub
stc
xchg
stos
and
push
adc
xor
mov
jo
or
mov
ds
or
mov
adc
sbb
xchg
ror
and
shr
lds
and
jne
jmp
adc
xor
jb
in
xor
pop
adc
mov
test
jne
sub
test
pop
daa
nop
dec
inc
jne
fld
shl
xor
xadd
dec
cdq
lea
push
pop
fwait
stc
loopne
shl
dec
jmp
imul
xor
or
test
or
mov
mov
xchg
gs
mov
pop
dec
call
dec
dec
jmp
sub
pop
adc
in
sub
mov
jg
dec
pop
mov
sub
jl
inc
pop
repnz
push
inc
xchg
or
les
xchg
jae
xchg
xchg
es
call
loope
bound
lods
sar
data16
dec
adc
pop
mov
cdq
fwait
(bad)
xchg
scas
or
adc
push
mov
cmp
push
or
mov
sub
and
pop
les
push
jge
push
add
push
jle
xor
shl
dec
in
add
xchg
int
shr
mov
add
sub
pop
data16
push
sbb
in
shr
jl
les
push
jns
mov
mov
xor
and
push
add
mov
aas
fimul
push
or
add
jmp
sub
push
pusha
jmp
cs
xor
jmp
sbb
in
pop
lock
xchg
push
(bad)
sub
xor
add
rol
js
inc
mov
mov
add
and
fcom
xor
inc
mov
cmp
sub
xor
sub
add
dec
(bad)
cli
dec
jecxz
inc
dec
and
push
mov
jnp
sub
sbb
ins
cmp
mov
in
call
in
xor
mov
xor
mov
lods
inc
inc
retf
mov
mov
cli
inc
xchg
push
sbb
es
mov
or
mov
sbb
xor
jbe
jmp
in
or
test
mov
pop
ret
shl
fmul
adc
and
xor
push
fisubr
stos
or
push
test
and
out
jmp
add
dec
imul
psubusb
pop
pop
push
je
jb
xor
mov
sbb
jo
jmp
jo
xor
cmp
popa
add
pusha
jb
jecxz
mov
aad
xor
sbb
loopne
xor
mov
rcl
add
mov
fwait
stc
lea
adc
int
or
inc
xchg
shl
adc
xchg
shl
ret
in
mov
std
(bad)
sti
adc
daa
fidivr
cs
mov
pop
jb
cdq
retf
enter
or
sub
mov
(bad)
fld
hlt
ror
pop
push
jmp
je
arpl
sbb
aam
mov
mov
cmp
jle
jecxz
int
push
jge
sbb
push
mov
fmul
xchg
mov
retf
sub
cmp
push
xor
adc
push
dec
popa
mov
int
arpl
dec
faddp
mov
pop
dec
enter
call
fdiv
or
(bad)
fdiv
cs
(bad)
or
loopne
xchg
push
mov
inc
xor
bound
xor
shl
inc
add
leave
fs
mov
ret
and
inc
movs
adc
retf
ss
inc
(bad)
movs
inc
call
loope
dec
mov
pushf
or
in
fs
test
xlat
test
nop
(bad)
or
pop
loopne
or
mov
cmp
xor
or
jecxz
cmp
push
sub
cmp
movs
(bad)
adc
les
push
mov
fs
push
mov
or
ins
mov
and
mov
ss
xor
js
xchg
jo
sub
and
movs
movs
cmc
fwait
sbb
xchg
xor
add
and
sub
cmp
cmps
pop
pop
pop
xchg
mov
je
ud2
jge
test
in
inc
sbb
in
fsubr
enter
cmp
push
dec
xor
push
mov
jns
cmps
xor
int
push
je
test
sub
call
call
in
jns
jns
in
call
fs
push
call
loopne
loope
or
and
call
das
imul
cs
jo
xor
xor
movs
push
mov
daa
add
test
dec
sbb
test
or
sbb
fdiv
jb
cmp
mov
test
mov
push
xchg
cmp
push
sub
add
stos
inc
and
aam
lock
pop
sub
ret
push
dec
inc
rol
fwait
add
lods
fistp
fldcw
ss
aaa
add
or
add
and
adc
adc
pop
push
adc
adc
add
jecxz
jmp
repz
repz
and
das
iret
repz
ss
cmp
repz
outs
jne
ret
inc
and
cmp
jge
xchg
enter
adc
push
scas
(bad)
lahf
jl
add
jne
add
mov
sub
or
or
or
repnz
dec
inc
mov
or
test
mov
push
pop
sub
syscall
dec
inc
push
dec
jp
dec
add
ret
mov
xor
ret
sbb
cmp
cmc
ficom
adc
je
add
fsubp
xchg
inc
ret
lock
aaa
mov
push
outs
test
dec
addr16
shr
aas
inc
push
in
adc
enter
dec
fdiv
xchg
lds
mov
adc
inc
arpl
int3
cmp
jnp
clc
adc
sub
mov
sub
xor
mov
adc
mov
dec
ins
sub
mov
dec
movs
movs
and
rcr
pop
ins
push
inc
or
adc
inc
inc
sbb
cmp
cmp
jbe
mov
int
add
push
ret
xchg
not
fild
sub
add
push
push
das
sbb
cmp
fdivr
imul
or
test
scas
mov
dec
and
push
popa
add
xchg
ins
pusha
jns
fbld
les
mov
fisub
pop
adc
movs
adc
add
hlt
int3
jmp
sbb
fwait
mov
in
(bad)
sti
arpl
xchg
or
inc
xor
(bad)
lahf
sbb
push
mov
add
retf
and
(bad)
jbe
jmp
and
outs
push
call
(bad)
jo
ja
nop
imul
and
inc
add
fadd
dec
push
pop
add
(bad)
repz
add
pop
je
or
fadd
mov
sbb
rol
outs
pop
pop
xchg
(bad)
out
cdq
cmp
sbb
dec
(bad)
es
out
inc
mov
xor
push
push
jmp
inc
ins
add
dec
adc
add
xchg
mov
push
outs
inc
je
outs
fwait
sub
mov
xor
(bad)
(bad)
out
jmp
scas
mov
pushf
rol
js
stos
xor
ds
int3
inc
mov
pavgb
push
or
or
aas
sbb
add
imul
es
or
cli
cli
retf
sbb
pop
jmp
jb
ficom
dec
std
pop
cmp
cmp
aaa
retf
add
ins
inc
sbb
mov
mov
inc
nop
adc
push
bound
jmp
push
or
push
cmps
daa
push
add
xchg
lahf
je
dec
xchg
mov
retf
fadd
sub
xor
lea
outs
mov
in
je
lea
add
jp
cmp
add
add
mov
or
icebp
fild
cmp
dec
cmp
adc
xchg
and
push
retf
cmp
pop
pop
mov
fcomp
cmp
fld
aam
fist
outs
mov
fdivr
sbb
cmp
or
inc
inc
jl
fmul
(bad)
push
dec
pop
mov
push
and
dec
jmp
inc
dec
sub
and
pop
sbb
or
push
pop
call
ins
and
test
movs
mov
xchg
addr16
mov
ins
dec
xchg
push
xlat
ds
mov
cmp
mov
ja
adc
xor
aaa
dec
ins
jb
loope
dec
ds
or
loopne
cwde
dec
pop
or
push
sbb
xchg
(bad)
hlt
ins
mov
or
dec
and
in
mov
out
nop
inc
fstp
mov
push
cmp
inc
add
into
pop
inc
or
icebp
daa
lea
(bad)
push
add
data16
xor
xor
xor
clc
jmp
pushf
and
dec
inc
inc
and
js
xor
dec
pop
rol
fild
dec
add
adc
(bad)
dec
in
push
das
jnp
loop
inc
dec
and
test
dec
dec
dec
ret
lahf
xchg
adc
fsub
xchg
sub
push
aam
add
sbb
or
lods
cmps
jge
shl
inc
mov
stos
sbb
xchg
push
jne
repnz
ins
xor
fcom
popa
loope
and
dec
jnp
jp
aaa
sub
pop
inc
cmps
or
aas
ror
xor
call
leave
mov
pop
mov
sub
cs
push
lods
in
or
test
or
lods
out
cs
test
in
mov
fs
push
xchg
jl
or
cmp
scas
pop
loopne
or
adc
sahf
loope
retf
call
or
retf
movs
dec
and
loope
or
mov
add
loope
(bad)
lea
add
(bad)
fnstsw
push
nop
and
pop
jmp
push
int3
int3
lods
pop
(bad)
aad
test
jns
inc
push
jmp
rcl
sub
push
dec
out
cmp
dec
or
adc
pusha
xchg
or
adc
push
inc
jecxz
dec
stc
imul
adc
int3
and
aam
lods
inc
and
inc
jmp
or
daa
or
cdq
iret
cmps
daa
clc
inc
or
dec
and
ror
or
or
adc
int3
lea
in
pop
int
jno
add
add
lods
push
dec
pop
and
cmp
inc
les
outs
mov
movs
std
test
adc
jl
addr16
or
sub
sbb
push
add
test
pusha
ins
imul
push
popa
or
pushf
jae
or
add
xor
adc
sbb
dec
sub
jae
pop
aam
add
jbe
mov
xor
les
shl
cdq
sub
and
push
dec
mov
xor
mov
inc
inc
aam
add
repnz
cmp
dec
push
dec
inc
shl
jmp
lods
adc
push
test
lock
outs
jp
popa
push
add
dec
sub
jno
add
pop
pop
das
mov
push
call
sbb
inc
inc
rcr
sti
rol
cmp
fild
pop
or
push
adc
adc
stc
or
or
dec
dec
add
clc
ds
sub
lods
mov
sub
aad
add
add
mov
mov
adc
add
enter
mov
cmp
inc
push
bound
add
movs
in
add
sbb
aam
retf
and
adc
aam
adc
sbb
sar
(bad)
jb
fiadd
nop
lahf
dec
pushf
pop
fs
add
and
call
je
dec
jb
outs
or
mov
rol
clc
movs
xchg
and
btr
pop
in
or
adc
dec
loopne
xor
mov
clc
and
aaa
cmp
stos
das
or
in
adc
pusha
mov
ins
aas
movs
jl
or
push
dec
stc
or
in
push
(bad)
mov
jae
fild
adc
add
add
mov
sbb
mov
mov
movs
lea
adc
sub
mov
and
add
cmp
inc
ins
dec
aad
imul
dec
mov
adc
iret
jnp
xchg
add
in
push
loope
cmp
jno
pop
push
outs
pop
stc
rcl
push
dec
in
ja
add
adc
jmp
arpl
clc
jne
sbb
mov
aaa
add
mov
or
jno
add
scas
sub
test
cmp
xchg
bound
sbb
mov
jns
xchg
(bad)
out
clc
or
sub
add
push
mov
sbb
sub
cld
aad
push
mov
repnz
(bad)
add
push
dec
imul
sbb
push
outs
push
mov
rcr
xchg
shl
xchg
push
push
push
iret
push
and
add
push
dec
dec
sbb
sbb
adc
dec
aam
dec
mov
push
enter
aaa
sbb
sbb
add
jmp
jno
xor
jmp
ret
ror
loope
push
movs
(bad)
mov
xor
(bad)
xor
adc
fdivr
push
mov
sub
lods
xchg
adc
dec
das
xchg
push
and
jmp
lods
and
push
cmp
push
inc
jp
movs
pop
lock
xor
dec
lock
or
ret
and
jecxz
cdq
mov
cmp
push
leave
inc
xor
xchg
add
ret
add
cmps
push
mov
xchg
popf
sub
pop
sbb
(bad)
and
fs
test
push
cmp
sub
xchg
shl
dec
pushf
adc
fnstenv
movs
cmp
rol
test
adc
xchg
cdq
inc
call
mov
bound
mov
xchg
pop
fs
pop
loopne
jns
es
fdivr
fs
fcomp
mov
fs
aam
add
aam
sar
and
cld
repnz
dec
dec
(bad)
int3
dec
int3
inc
test
adc
pop
inc
out
and
out
inc
mov
pop
test
push
dec
jmp
xor
xor
sub
fild
leave
and
xor
and
aaa
xor
pop
jb
cmp
xor
pop
dec
pusha
pop
jp
sub
push
pop
sbb
inc
dec
adc
or
jae
outs
arpl
mov
pop
cmp
xchg
xchg
das
dec
push
pop
dec
pop
adc
cmp
pop
inc
pop
dec
inc
stos
pop
and
inc
push
inc
mov
movs
dec
mov
push
sbb
das
out
mov
and
mov
loopne
dec
movs
movs
and
cmps
and
fimul
stc
in
lock
add
test
xor
dec
loopne
enter
mov
fadd
nop
xchg
div
test
fcomp
in
mov
aam
aam
dec
add
adc
retf
int3
or
es
int3
pop
int3
xor
sub
jg
shl
dec
test
mov
fmul
xor
sar
xchg
xchg
pop
push
push
dec
mov
jl
neg
mov
sub
dec
nop
or
adc
lock
push
dec
in
lods
cwde
inc
imul
add
adc
loope
outs
push
sub
clc
adc
jns
pop
or
and
mov
bound
and
inc
mov
adc
inc
jae
imul
pop
hlt
push
mov
leave
and
sub
cmp
movzx
fadd
mov
cmp
adc
imul
adc
pushf
push
ja
push
push
sahf
xchg
pusha
dec
xor
sbb
jg
push
push
inc
out
push
mov
lods
je
push
nop
lock
and
loop
gs
jbe
scas
mov
mov
out
pop
mov
ret
push
push
cmp
xlat
dec
adc
(bad)
call
dec
call
ja
pusha
jnp
fisttp
inc
mov
inc
xchg
add
push
inc
add
and
jge
inc
jne
pop
sub
inc
push
xchg
add
add
jge
pop
push
pop
and
push
out
mov
xchg
mov
push
add
inc
push
leave
call
mov
jae
add
aaa
lahf
mov
test
xchg
xlat
jns
push
and
mov
mov
pop
out
sub
cmps
ror
push
push
aaa
cwde
jne
mov
dec
popa
inc
sub
dec
test
mov
pop
dec
inc
sub
cmps
rol
int3
repz
test
dec
pushw
lock
cld
jle
xor
push
imul
add
not
sub
cmp
cld
or
inc
enter
push
int3
stc
xor
lds
adc
lods
mov
mov
adc
ss
and
mov
mov
shr
nop
pop
std
pop
je
adc
popa
iret
pop
call
xlat
push
dec
inc
pop
cmp
cdq
loopne
pop
clc
scas
outs
pop
xor
xor
and
clc
jmp
sbb
dec
or
add
jae
loop
call
outs
xor
lock
jp
ror
popa
jb
xchg
push
ins
and
test
fdivr
xor
loopne
inc
xchg
or
pop
mov
and
int3
cs
add
xchg
mov
test
stos
add
adc
mov
enter
mov
inc
sahf
popa
push
lock
add
push
dec
push
mov
jl
(bad)
or
push
and
push
dec
cmc
push
push
sub
dec
lock
ins
lock
or
movs
cmp
xor
add
xor
adc
pop
out
push
and
movs
cmps
adc
push
push
and
pop
nop
mov
jg
or
repz
pop
jg
popa
and
dec
test
add
jno
adc
pop
inc
scas
sub
push
and
xor
(bad)
das
fimul
adc
jne
or
add
out
and
jmp
mov
or
cmp
jne
xor
dec
mov
leave
push
push
and
mov
xor
gs
int
nop
out
gs
in
adc
adc
xchg
out
les
and
ret
lds
adc
dec
and
mov
cmp
adc
dec
xor
out
fsub
mov
add
mov
or
ret
aam
(bad)
or
ror
fmul
dec
mov
sub
ret
xor
ss
pusha
add
(bad)
jo
pop
dec
sbb
add
cwde
sub
inc
pusha
imul
jmp
enter
shl
xchg
daa
or
cmp
mov
jmp
xor
shl
add
and
rcl
dec
lea
inc
mov
mov
dec
sbb
adc
pushf
cli
mov
mov
pop
dec
in
mov
movs
(bad)
mov
in
dec
or
mov
out
in
fxch
add
jecxz
outs
pop
pop
and
adc
leave
cmp
jg
mov
adc
shl
pusha
mov
pop
sahf
cmp
(bad)
lea
xor
pop
xlat
(bad)
pop
repz
cdq
les
inc
inc
add
add
jle
and
mov
cmp
inc
push
fild
push
es
push
loopne
(bad)
pop
jno
pop
adc
fdivp
xchg
push
test
imul
add
pop
xor
sbb
test
sbb
dec
stc
lea
pusha
lods
sub
loope
inc
in
outs
dec
shr
jne
add
clc
or
mov
dec
test
arpl
cmp
add
inc
sbb
loopne
iret
push
add
sub
dec
sbb
xchg
xor
sub
cmp
aaa
outs
popa
sbb
adc
add
outs
inc
mov
cdq
lods
stc
dec
popw
movs
mov
pusha
ins
in
mov
add
std
mov
sbb
ret
lea
sbb
inc
mov
sbb
xor
or
inc
fdivr
test
jecxz
or
add
dec
add
mov
addr16
clc
out
mov
mov
pop
push
and
cmp
sbb
add
push
movntq
call
xrelease
xchg
fldpi
inc
xor
(bad)
std
or
push
xchg
xchg
ins
mov
inc
dec
ja
jmp
ret
ins
cmp
bound
sar
mov
test
jg
push
sti
test
pop
xor
mov
mov
add
aaa
sbb
jno
lahf
popf
push
pop
fcom
hlt
hlt
sub
push
sub
dec
pop
imul
adc
dec
call
mov
pop
add
pusha
jmp
jle
push
push
jecxz
adc
imul
adc
(bad)
repz
sub
ret
pop
dec
jmp
fwait
rcl
cmp
ss
movs
pop
cmp
(bad)
inc
xchg
inc
or
shl
sbb
add
or
je
xor
inc
sbb
sbb
and
das
ja
inc
jl
or
stos
dec
(bad)
cmp
dec
jmp
lock
daa
jp
xchg
pusha
imul
sub
or
push
fisub
pop
push
jmp
jmp
and
mov
sti
stc
jo
and
dec
fstp
or
pop
outs
dec
das
dec
shl
cwde
adc
xor
shl
test
mov
clts
mov
mov
or
enter
mov
stos
push
pop
enter
dec
pop
lea
aam
pushf
daa
sbb
lock
xchg
xchg
scas
xchg
push
add
lea
(bad)
repz
push
jmp
fs
sbb
cwde
and
in
lods
pusha
and
adc
mov
pusha
shl
loopne
ret
push
repz
mov
adc
xor
mov
lea
fild
sbb
adc
mov
inc
or
mov
imul
or
xchg
fwait
xchg
or
test
mov
lods
dec
movs
push
sbb
jmp
push
or
dec
outs
dec
xchg
movs
push
cwde
cwde
lods
out
cs
dec
ins
inc
mov
push
or
cwde
test
mov
dec
dec
jl
(bad)
push
(bad)
push
(bad)
pop
adc
xlat
and
jmp
pop
cmp
sub
mov
daa
in
mov
neg
mov
popa
xor
mov
lods
jnp
push
loopne
adc
push
mov
jo
mov
cwde
mov
(bad)
(bad)
or
add
aaa
jb
or
jae
fwait
cmp
hlt
or
mov
(bad)
retf
loopne
(bad)
mov
in
outs
mov
cmp
test
sub
adc
jge
lock
call
in
dec
jns
push
and
cmp
add
sub
icebp
loope
xchg
jp
sbb
adc
jmp
xor
mov
out
add
mov
les
je
dec
xor
push
pop
dec
cmps
adc
ins
ja
jb
cmp
push
mov
mov
and
adc
push
pop
pop
call
dec
je
sub
and
jp
(bad)
jb
jmp
inc
mov
inc
push
inc
and
cwde
nop
in
pusha
in
mov
popa
ins
jb
cmp
in
sbb
inc
jns
aad
xchg
or
call
sbb
hlt
sbb
mov
nop
push
cmc
dec
xchg
add
shr
rcl
or
push
js
cmp
lock
pop
or
xchg
js
xor
cmp
in
push
mov
ja
jl
mov
inc
iret
call
fdiv
xchg
call
out
js
cmc
iret
jns
fs
pop
imul
in
lock
push
retf
loope
movs
pusha
dec
(bad)
nop
sub
lods
push
pop
sti
jno
cmps
mov
inc
loopne
xchg
(bad)
sub
cmp
xchg
loopne
adc
sub
jbe
xor
mul
in
(bad)
mov
mov
ror
jp
cmps
loopne
sar
clc
(bad)
jecxz
test
sub
xchg
jbe
pusha
and
clc
hlt
leave
mov
adc
lock
(bad)
je
push
cmp
sub
out
jns
mov
(bad)
add
mov
or
sbb
popa
imul
lods
mov
cmp
fdivr
sqrtps
mov
or
xchg
shr
xor
xchg
pop
fs
fistp
add
mov
ret
inc
pop
fisttp
inc
test
inc
ficom
push
dec
add
nop
jp
ret
icebp
inc
jmp
cmp
cmp
pop
pop
xor
cmove
push
inc
and
call
or
arpl
nop
out
je
jle
daa
fmul
fdivr
shl
in
sub
jge
ret
add
mov
call
xchg
loop
ja
xchg
xlat
and
fbstp
outs
stc
and
xchg
inc
fsub
and
and
xchg
or
jge
rol
fnstcw
aaa
pusha
xchg
test
cmps
mov
fdivr
push
inc
(bad)
ds
adc
ins
pop
add
add
xchg
jmp
in
ret
loope
add
clc
or
shl
xor
adc
push
dec
cmp
popa
lock
cmp
push
xor
add
imul
and
adc
xchg
mov
mov
arpl
xchg
pusha
adc
movs
js
cmps
add
pop
inc
inc
rol
sbb
inc
and
ret
lods
movlhps
adc
(bad)
rcr
inc
mov
test
add
jle
mov
push
call
push
(bad)
cmps
fcom
sbb
addr16
je
inc
fimul
push
(bad)
in
push
shl
add
cmps
sbb
add
fcom
mov
nop
pusha
adc
add
leave
mov
fcmovnu
mov
(bad)
pop
(bad)
sbb
enter
(bad)
pop
ret
lods
adc
push
out
xchg
aam
rcr
adc
lds
mov
inc
adc
fdivr
and
(bad)
fist
loope
sbb
repnz
and
ficom
int
rcl
inc
push
inc
(bad)
rcl
jl
jae
jo
pop
dec
enter
bound
sti
mov
inc
push
dec
fnstcw
mov
ja
adc
in
add
xchg
sbb
and
loopne
inc
data16
jo
not
adc
out
in
shl
bnd
adc
add
movs
mov
fs
and
and
jge
shr
ret
and
fucomip
sbb
loopne
and
add
xchg
push
stos
ja
inc
into
(bad)
xchg
jnp
add
fwait
or
popa
sbb
dec
sar
sbb
test
cs
ror
xor
mov
or
mov
jne
aaa
mov
vpsignw
sub
sbb
arpl
mov
mov
add
xchg
inc
push
sub
lahf
nop
hlt
ins
or
add
jne
dec
pop
and
or
das
or
or
ins
outs
in
xor
add
hlt
cmp
pop
or
sbb
jns
test
inc
push
or
inc
and
(bad)
(bad)
or
mov
push
retf
scas
dec
sub
cs
push
xor
test
enter
push
call
test
pop
and
or
sbb
xor
dec
xor
dec
outs
jo
je
leave
enter
sar
enter
or
cmp
enter
adc
push
dec
imul
movs
nop
push
repnz
push
add
ror
xor
dec
jle
and
add
jo
cmp
pop
mov
xor
ds
mov
add
in
push
and
ds
pop
out
cmp
xor
dec
push
fisttp
dec
sbb
xor
aad
xor
jmp
clc
push
dec
rcr
push
jbe
sbb
dec
movs
repz
or
push
xchg
(bad)
enter
push
cdq
enter
out
and
mov
mov
push
or
push
test
xor
mov
lock
mov
in
dec
lock
push
xchg
outs
scas
mov
pop
rcr
iret
pushf
in
in
in
sub
in
jno
sub
data16
mov
xchg
mov
mov
add
xchg
or
mov
test
push
mov
std
test
lahf
mov
add
pushf
inc
mov
or
xor
dec
dec
inc
mov
jmp
gs
stc
pop
add
add
(bad)
push
inc
bound
xlat
pop
add
dec
cmp
pinsrw
dec
inc
or
xlat
mov
add
inc
jmp
adc
jo
push
mov
movs
xchg
sub
in
mov
xor
or
sbb
stos
cdq
sub
ins
popa
repnz
and
push
fadd
retf
rcl
mov
sbb
shl
add
lods
mov
das
or
test
enter
fs
mov
repnz
fimul
add
push
dec
call
leave
repz
nop
push
ret
lods
inc
push
push
dec
dec
dec
scas
in
scas
and
lods
mov
adc
mov
or
fdiv
js
imul
push
jl
mov
cmps
mov
mov
sar
imul
push
sar
push
mov
add
pusha
xor
cmp
inc
push
xchg
push
xor
int
mov
cmp
cmp
addr16
jmp
xchg
xchg
in
lods
mov
test
inc
jmp
push
and
test
pop
inc
test
and
or
and
add
xchg
pop
call
pusha
cmp
mov
leave
sahf
hlt
push
loope
pop
push
sbb
cwde
mov
shr
cld
movs
add
inc
sbb
add
or
sub
or
retf
inc
inc
or
adc
scas
pop
xor
cmp
push
ss
rol
pop
push
das
fisttp
test
fs
or
or
adc
push
sub
adc
adc
movs
inc
jp
xlat
mov
or
jecxz
in
fstp
lea
jbe
aaa
(bad)
push
(bad)
hlt
ret
ds
test
push
das
je
mov
sbb
mov
add
adc
retf
sti
and
mov
fs
jno
dec
xchg
imul
push
mov
or
and
lahf
and
push
icebp
in
xchg
adc
mov
mov
shl
mov
js
bound
pop
pop
add
ins
test
fadd
lea
push
xchg
inc
push
mov
mov
shl
mov
jge
hlt
ins
push
rol
cmp
imul
lock
jb
jb
in
hlt
outs
or
(bad)
jge
sbb
inc
or
or
dec
push
int
sub
ret
xchg
dec
inc
ins
sbb
std
call
adc
xchg
(bad)
jo
stos
add
pop
fstp
int3
je
push
ret
call
pop
xchg
sbb
lock
int3
hlt
sbb
sbb
(bad)
and
aas
jg
dec
sub
dec
je
jmp
jb
adc
add
add
or
imul
ds
or
pop
es
push
and
aas
xchg
jno
in
mov
dec
lahf
fnstcw
fadd
add
test
or
stc
mov
dec
inc
fadd
cs
inc
pop
mov
or
movs
jbe
jo
push
hlt
mov
mov
mov
and
in
add
inc
xchg
inc
cld
lea
dec
leave
inc
inc
jns
pop
imul
xchg
cmp
cmp
cmp
in
adc
xchg
sbb
lock
add
fwait
xchg
dec
repnz
sti
jge
daa
loopne
and
mov
inc
push
push
outs
xchg
test
sbb
adc
add
sbb
je
stos
movs
mov
jae
xchg
jo
dec
add
shl
xchg
movs
mov
rcl
sbb
cmps
jmp
mov
or
int
sti
add
xchg
pop
je
xchg
xchg
inc
mov
sbb
add
or
xchg
sub
xchg
jb
push
call
adc
test
rcr
mov
push
or
or
iret
add
or
adc
inc
cwde
lock
mov
imul
retf
xchg
xor
in
out
and
lock
xchg
push
xor
stos
inc
pushf
pop
sbb
lock
pop
or
add
inc
int3
xchg
sub
sub
fsubr
mov
pushf
stos
dec
loope
call
scas
outs
push
add
adc
sbb
cdq
(bad)
in
jg
ins
mov
mov
mov
mov
mov
addr16
and
mov
loop
ror
pop
outs
add
call
inc
cmp
cmp
or
dec
jne
mov
out
cmc
jl
xchg
inc
movs
and
and
loop
push
and
sub
movs
sbb
push
sbb
add
das
rcr
loopne
jle
or
mov
or
std
inc
fisubr
ins
es
mov
repz
or
xchg
mov
mov
imul
sti
pop
xor
push
inc
cmc
sar
je
add
dec
push
push
inc
inc
bound
pusha
xrelease
pop
inc
(bad)
mov
and
fs
and
xor
xor
out
mov
cdq
inc
add
test
cmovl
push
inc
pusha
pusha
jns
cmps
push
ins
jne
mov
test
(bad)
jl
pop
xchg
add
mov
sti
cdq
push
ins
loopne
add
aaa
mov
les
call
sub
and
push
dec
sbb
push
xor
mov
cmp
dec
cld
int3
add
ret
das
mov
mov
cmp
in
mov
int3
test
call
xor
add
popa
adc
or
out
leave
in
or
dec
mov
out
mov
ins
jo
fwait
dec
sub
push
imul
call
push
rol
(bad)
(bad)
cmps
das
lods
and
and
fwait
dec
push
sbb
sbb
or
pusha
(bad)
fild
stos
fwait
nop
and
adc
pop
pushf
dec
ds
outs
xor
xchg
pop
inc
je
dec
je
dec
mov
stc
and
dec
inc
pop
les
call
push
and
cmp
xchg
mov
cs
test
jb
push
add
add
cmps
add
and
jne
dec
mov
or
dec
mov
dec
or
and
pop
daa
xor
mov
dec
cmps
inc
xchg
xchg
add
cs
les
or
pop
lods
fwait
adc
mov
or
add
loop
lahf
gs
fstp
cdq
sbb
ret
pusha
pop
(bad)
adc
(bad)
movs
enter
adc
je
push
inc
(bad)
mov
add
xchg
mov
xchg
and
int
in
test
lea
jmp
dec
sbb
mov
arpl
test
jmp
arpl
or
scas
adc
(bad)
and
jae
jae
push
sbb
push
jmp
nop
push
push
ja
push
push
lea
pop
pop
sbb
or
and
mov
xor
sahf
rcr
dec
gs
adc
shl
inc
xor
mov
push
popf
mov
push
adc
push
xchg
xchg
mov
or
xchg
push
gs
gs
mov
add
and
dec
pushf
dec
dec
sub
xor
cmp
lods
sub
adc
xchg
xchg
jecxz
fstp
shl
pop
add
test
add
jmp
jno
scas
mov
es
movs
adc
(bad)
or
mov
jg
rcr
and
push
jmp
rcl
jne
add
sbb
push
add
sar
mov
pop
or
xor
dec
inc
and
stos
inc
lock
mov
outs
popa
xchg
add
xchg
mov
sub
lods
mov
ins
inc
cwde
sbb
mov
push
(bad)
sub
adc
push
dec
adc
pop
mov
ret
and
dec
in
add
sub
and
inc
loop
pop
inc
scas
data16
sub
rcl
mov
stos
or
pop
js
je
fcom
cmc
push
movs
dec
jb
inc
daa
ficomp
loop
mov
mov
pop
fdivr
popf
push
push
out
out
push
inc
fiadd
push
add
out
sub
dec
loopne
push
data16
mov
add
jl
fist
jo
lahf
add
in
adc
lods
mov
mov
push
adc
stc
mov
pop
fisub
pop
(bad)
loopne
fdiv
pusha
sub
pop
pushf
xor
cmps
sbb
mov
repnz
call
rcl
fnsave
or
in
in
push
clc
hlt
lock
xor
fdivr
call
test
inc
pop
loopne
xor
xor
(bad)
adc
or
rol
inc
outs
sbb
cmp
inc
jmp
and
adc
sbb
mov
ss
add
or
and
daa
push
xchg
outs
iret
cmovl
inc
add
call
bound
push
cmp
fwait
mov
xchg
test
or
push
shr
dec
shr
or
or
adc
std
cdq
cmps
xor
push
or
jmp
or
nop
test
setno
sbb
test
lods
sub
xchg
repnz
xor
or
add
adc
add
call
enter
dec
clc
movs
push
xchg
adc
dec
stos
shr
dec
ret
out
je
inc
sub
ja
aaa
jo
or
dec
adc
cmc
add
xor
clc
push
stos
ror
outs
jmp
pop
lods
inc
in
push
pop
or
ins
and
xchg
fild
out
hlt
adc
inc
cs
jo
outs
in
hlt
adc
popf
push
lods
push
das
je
xor
fsub
pop
pusha
lods
xchg
dec
loopne
xchg
add
lods
sbb
sbb
add
out
sbb
sar
retf
addr16
retf
dec
je
adc
cwde
mov
aaa
sub
mov
aas
jl
inc
xlat
push
adc
in
jmp
ret
pop
les
adc
mov
add
not
shl
retf
and
xchg
add
scas
mov
fsubr
sbb
sub
cmp
mov
ffreep
xor
enter
(bad)
stos
xor
pop
nop
in
sub
aaa
push
outs
imul
jle
cmp
outs
sbb
int
sub
aas
sbb
in
or
mov
inc
and
js
pop
push
lods
(bad)
outs
and
(bad)
and
push
daa
sub
and
sub
sahf
add
inc
adc
hlt
test
(bad)
scas
xchg
scas
sbb
rol
rcl
dec
or
pop
ror
hlt
mov
push
inc
mov
inc
and
jo
call
loopne
pushw
inc
(bad)
mov
lock
jge
xchg
icebp
or
xor
or
and
dec
leave
and
dec
jns
addr16
cmp
cmp
loopne
repz
sbb
movs
mov
ds
push
aaa
sub
push
jge
aas
je
xlat
inc
xor
xchg
dec
les
pop
inc
jnp
xchg
cmp
jbe
dec
jb
cmp
xchg
push
test
push
pop
jae
loopne
mov
sub
aaa
jns
sahf
movs
cs
dec
jne
pop
(bad)
adc
(bad)
xchg
pop
mov
dec
adc
push
push
dec
loopne
mov
mov
jo
test
dec
call
je
push
pop
sbb
or
inc
loopne
cmc
add
add
loopne
mov
pop
push
(bad)
imul
pop
int3
mov
or
cmp
pushf
inc
enter
inc
aas
adc
cvtps2pd
arpl
mov
mov
dec
cmp
pop
pusha
xor
int3
fnsave
clc
ds
sbb
dec
test
hlt
mov
test
cmp
inc
arpl
add
nop
ins
cmp
mov
pusha
add
push
xor
clc
in
dec
and
and
mov
cmp
push
addr16
cmc
mov
mov
(bad)
mov
xchg
pushf
xor
mov
mov
dec
sbb
pop
or
ss
and
das
push
and
out
inc
inc
or
mov
mov
lods
mov
jno
cmp
push
inc
pusha
sbb
push
sbb
xor
add
cmps
jge
mov
push
push
adc
xchg
dec
int3
inc
xor
pop
xchg
dec
enter
dec
enter
push
cld
enter
pop
pop
push
nop
inc
dec
or
ss
dec
ja
inc
xor
inc
mov
enter
inc
dec
leave
mov
mov
sbb
dec
inc
pop
cs
cs
inc
pop
inc
cs
push
pop
xor
das
in
inc
add
and
je
daa
dec
jecxz
dec
mov
xchg
js
iret
jns
or
je
push
arpl
jne
xchg
sub
sar
cmp
push
ss
mov
test
jne
dec
iret
push
mov
js
mov
fldcw
mov
xor
test
dec
shr
push
cdq
ins
ins
and
rcl
cmp
and
dec
xor
dec
shl
sub
add
bound
or
fcom
inc
add
in
mov
xchg
movs
daa
jge
out
and
dec
xor
inc
mov
or
test
je
add
es
mov
int3
push
push
sbb
sub
aad
xchg
inc
sbb
or
dec
clc
mov
scas
xchg
xor
push
bound
jne
dec
leave
and
cmp
vcvtsi2ss
aaa
stos
test
xchg
xor
fsub
mov
sub
sbb
ins
je
idiv
sbb
adc
pop
js
add
inc
popa
ret
dec
out
push
jne
xchg
cmp
inc
js
mov
xchg
jl
arpl
test
add
jns
outs
cmp
xchg
pop
shl
cmp
dec
arpl
push
sub
pop
adc
mov
pop
and
mov
push
push
shr
or
dec
xlat
repnz
adc
or
lea
sbb
mov
test
push
test
aad
and
imul
clc
mov
add
and
imul
lock
mov
xor
rcl
mov
mov
cld
in
and
push
in
loope
add
fsub
call
cmps
pop
(bad)
mov
jb
mov
xchg
inc
xchg
mov
jae
push
or
aad
lahf
mov
push
inc
nop
sbb
or
push
or
push
dec
push
cmp
lock
aad
into
add
sub
test
pop
pop
test
mov
inc
add
push
mov
in
adc
jmp
retf
ins
and
jae
push
or
and
call
into
scas
fdivr
or
iret
mov
mov
imul
ror
and
test
push
mov
add
inc
or
jecxz
icebp
jo
(bad)
je
(bad)
mov
mov
dec
mov
add
jns
pop
mov
shl
mov
cmp
pop
sbb
test
xchg
mov
push
pop
outs
ret
adc
add
shl
rol
test
push
arpl
daa
sbb
iret
xor
push
or
add
test
cmp
xchg
shl
xchg
cmp
adc
and
adc
arpl
pop
out
or
inc
addr16
dec
jp
addr16
inc
add
xor
push
xor
cmp
or
pop
clc
fwait
loop
xlat
frstor
pop
inc
sbb
mov
je
mov
or
xchg
(bad)
jle
test
and
popa
sbb
add
mov
ret
dec
xchg
push
pusha
call
push
push
push
mov
lea
push
pusha
movs
xchg
enter
loopne
out
or
mov
add
sbb
xor
or
sub
push
movs
outs
rol
cmps
sbb
cmp
push
fcom
or
dec
(bad)
xchg
and
test
ret
and
imul
repnz
mov
push
cdq
dec
jae
pop
jb
and
cld
clc
in
retf
and
ret
sti
pop
ja
push
ror
push
inc
loope
sub
pop
mov
loope
loop
cmps
push
adc
imul
jae
lods
(bad)
test
push
ret
js
cwde
sub
xchg
gs
add
inc
call
loopne
adc
xchg
loopne
or
sbb
scas
in
adc
mov
mov
and
jo
mov
cs
dec
repnz
add
xchg
les
(bad)
pusha
pusha
and
popa
scas
push
js
mov
(bad)
cs
dec
stos
mov
or
add
pop
add
fisub
les
loopne
or
adc
add
sbb
adc
movs
lods
adc
mov
popa
lahf
call
loope
dec
add
push
and
iret
cmp
stos
cld
fstp
or
cs
hlt
pop
loopne
loope
rcl
cmp
and
(bad)
(bad)
loopne
add
loope
xchg
aam
add
adc
sbb
ffree
add
outs
aad
adc
cmp
fnstsw
add
dec
push
or
int3
sbb
or
push
mov
or
enter
xchg
and
ret
inc
jge
push
imul
mov
mov
aam
sub
lahf
adc
xor
push
test
je
jmp
xadd
mov
(bad)
repz
bound
cmc
cmp
cmps
xor
dec
ins
and
xchg
adc
sub
jmp
fadd
lock
leave
inc
int
xor
popf
leave
dec
jne
sbb
pop
inc
ficom
pop
or
sub
mov
inc
(bad)
nop
lock
or
call
pop
adc
dec
cmp
test
icebp
add
retf
fcom
js
or
mov
pop
pop
push
in
mov
iret
retf
adc
(bad)
sbb
imul
add
in
xchg
inc
or
or
dec
push
inc
push
add
or
add
dec
push
popa
ins
mov
sub
xchg
adc
add
mov
sbb
adc
lock
dec
push
and
add
xor
pushw
call
push
loopne
cmp
outs
or
int3
mov
repnz
push
stc
xchg
retf
xchg
or
add
jb
and
cmp
cwde
adc
bound
add
xchg
fsub
sbb
pop
add
add
shr
push
xchg
std
or
and
add
ja
mov
shl
and
mov
cli
adc
xchg
sub
pop
aam
jle
aam
xchg
test
adc
jmp
mov
cmp
jle
pop
jne
nop
clc
sbb
popa
ins
popf
std
push
sbb
test
ror
mov
mov
inc
sbb
nop
cmp
pushf
inc
pop
arpl
loopne
imul
test
test
add
adc
cmp
aaa
les
loope
out
xchg
sub
xor
jl
shl
or
fadd
dec
add
ja
ins
das
or
jmp
(bad)
and
pop
pop
mov
or
push
push
xchg
dec
cmp
sbb
or
aam
fisttp
iret
cmp
sbb
(bad)
pop
pop
mov
iret
lods
iret
xchg
cmp
std
add
cmp
pushw
mov
shl
pop
test
xor
or
xor
push
(bad)
mov
call
enter
movs
inc
in
idiv
in
test
lods
mov
mov
icebp
jge
sub
popf
mov
sub
out
jnp
push
or
and
push
or
call
mov
mov
lock
mov
jae
outs
ja
xor
ss
and
or
add
add
adc
es
mov
sub
adc
cmp
lock
enter
sub
mov
ror
xchg
jo
imul
movs
inc
mov
jns
mov
sar
sbb
inc
cli
scas
mov
cmp
push
push
dec
dec
dec
pop
ins
xor
out
and
lahf
sbb
or
and
or
and
rcl
ret
push
dec
sbb
fs
cs
inc
mov
test
dec
dec
lds
pop
or
stos
inc
sub
pop
ror
js
in
xchg
sub
ins
lods
popa
inc
jmp
push
(bad)
pop
push
push
pusha
and
cmps
pusha
adc
sub
aad
leave
add
aad
dec
outs
test
jnp
hlt
adc
ror
fist
inc
or
call
sar
mov
add
mov
pushf
xchg
shl
(bad)
and
dec
and
jl
push
fsub
lock
mov
mov
push
aam
ja
imul
cmp
fwait
in
or
or
ja
sbb
dec
dec
dec
sbb
inc
nop
out
pusha
or
xchg
fidivr
inc
js
mov
dec
mov
inc
fs
test
in
cmp
adc
add
outs
push
mov
rol
adc
lds
dec
aaa
ret
iret
mov
sbb
scas
cs
xchg
out
push
mul
xchg
pusha
stc
and
xor
and
mov
or
fldenv
ss
das
pop
push
daa
out
rcl
xchg
adc
gs
dec
mov
imul
aad
aaa
mov
xor
loopne
dec
fbld
ret
jmp
dec
pop
pop
xlat
ret
add
push
retf
and
(bad)
loop
pop
pop
int3
pop
mov
xchg
je
or
frstor
dec
mov
or
xor
ficomp
cmp
pop
je
xchg
mov
(bad)
mov
call
popa
sub
inc
mov
rol
and
test
adc
jae
scas
adc
and
inc
cmp
cmp
add
inc
jp
rcr
dec
jecxz
xor
xor
pop
mov
out
mov
ret
mov
xchg
ins
in
mov
xchg
daa
nop
cli
mov
and
aas
push
jg
je
push
dec
pop
and
daa
cwde
add
pop
mov
sub
add
and
repz
sahf
cmps
add
add
jns
retf
cmp
add
inc
in
sbb
fsub
imul
xchg
iret
dec
push
repz
ret
in
add
adc
add
add
test
rcl
clc
test
std
inc
push
xor
cmp
bound
movs
les
into
cld
push
push
ja
mov
nop
push
add
dec
dec
or
mov
jne
ds
cwde
or
inc
push
sahf
sub
or
push
(bad)
lahf
or
idiv
pop
fist
add
test
scas
xor
or
icebp
dec
sbb
in
fisttp
je
mov
(bad)
out
add
jp
adc
mov
popa
imul
sbb
in
sub
mov
lock
mov
inc
mov
mov
cmp
cwde
jne
js
or
xchg
into
push
add
mov
cmp
mov
enter
and
xchg
dec
mov
adc
cmp
add
fcmovnu
dec
jae
dec
mov
nop
pop
and
and
aam
or
es
ret
jl
and
outs
mov
ret
mov
mov
aad
inc
mov
data16
ror
pop
add
and
pusha
cmp
(bad)
mov
pop
mov
in
fld
mov
mov
add
lock
scas
sbb
and
es
in
jb
and
push
sub
xchg
retf
leave
xor
cmp
pushf
pop
cs
push
inc
xor
xor
sbb
mov
test
fstp
cdq
push
and
ja
inc
cs
and
fs
sub
and
sbb
cmp
push
iret
push
leave
fcom
sbb
aas
test
push
adc
sub
lods
call
or
add
enter
loope
xchg
push
pop
scas
dec
add
mov
rol
push
or
fldcw
xchg
sbb
and
cdq
imul
loop
add
xchg
add
sbb
(bad)
mov
push
or
addr16
lods
add
pop
cmps
xor
pop
mov
je
fidivr
enter
mov
mul
adc
and
adc
clc
xchg
mov
push
xor
adc
int
fimul
int3
inc
add
daa
(bad)
ins
dec
js
outs
add
and
or
mov
int
stos
sbb
cmp
jle
ficom
dec
inc
add
sub
sub
adc
sub
inc
fcmovbe
inc
jecxz
icebp
pushf
call
adc
adc
inc
and
imul
xor
adc
xor
adc
cmp
leave
sub
dec
sub
and
enter
loopne
fimul
push
int3
rol
fdivr
push
movs
cmps
aam
add
loope
mov
or
push
xchg
or
ss
loopne
push
nop
inc
sbb
inc
sub
mov
sbb
sub
lods
sub
nop
sahf
add
cmp
add
mov
inc
push
mov
mov
mov
xchg
cmp
fiadd
rcr
inc
loop
mov
or
or
mov
(bad)
fwait
push
adc
inc
sbb
aad
pusha
lods
or
mov
mul
sub
mov
hlt
arpl
dec
xchg
push
sub
mov
loopne
or
dec
aam
aam
mov
dec
inc
and
xor
jae
int3
int3
add
popf
add
push
fwait
adc
ins
in
jo
bound
inc
in
and
sub
cdq
add
jp
dec
int3
mov
inc
and
xor
aaa
xor
(bad)
push
sbb
pop
les
mov
cmp
cld
dec
add
icebp
xchg
mov
and
pop
(bad)
aaa
cmc
lds
mov
pusha
cmp
std
ficom
(bad)
shr
shr
fmul
shl
add
loopne
inc
inc
xchg
mov
movs
retf
neg
mov
inc
xchg
daa
(bad)
or
xchg
pop
psubsw
aad
in
add
je
fsub
mov
es
push
mov
inc
pop
add
int3
xchg
mov
adc
xchg
std
add
jae
(bad)
dec
cld
pop
jle
sub
inc
(bad)
jg
xchg
push
hlt
ins
clc
push
sbb
inc
add
xor
and
daa
stc
cmps
out
pushf
push
inc
mov
add
mov
in
fwait
adc
out
jle
loope
ins
mov
sub
push
sar
cmc
cs
inc
xor
nop
stc
test
sub
xchg
dec
xor
xor
adc
outs
sti
push
enter
or
mov
cmp
inc
cmc
sub
cmp
push
les
sbb
aam
js
add
cmp
fsubr
and
jmp
add
outs
mov
int
js
test
mov
inc
aas
push
into
lods
jp
dec
mov
pusha
add
xor
scas
lock
rol
xchg
cmp
mov
inc
mov
jns
mov
add
dec
add
cmp
dec
pop
cld
cmps
in
inc
pop
and
cs
rcl
adc
push
add
add
push
xchg
ret
add
sbb
add
iret
gs
xor
push
add
(bad)
add
cmps
std
or
mov
adc
push
in
dec
int
push
ds
mov
mov
inc
movs
mov
mov
loopne
add
or
jle
mov
push
icebp
std
adc
sbb
mov
sbb
lea
cmc
ja
xchg
in
dec
inc
nop
lock
in
mov
xchg
ja
rcl
adc
mov
xor
enter
or
sbb
add
hlt
in
ja
pop
adc
jns
jle
ja
dec
mov
add
push
adc
mov
dec
mov
push
inc
in
not
pop
xchg
cwde
pop
sbb
push
fisttp
inc
dec
ror
inc
and
nop
ret
mov
xchg
mov
ret
addr16
cs
pop
out
xchg
popa
test
cwde
sbb
push
or
sub
out
(bad)
xchg
and
push
jns
mov
inc
push
jns
das
sub
mov
cmp
rcl
call
add
sbb
adc
and
mov
push
movs
xor
ins
lds
js
mov
mov
fcmovbe
cmp
and
in
adc
sub
dec
cmp
loopne
fistp
push
and
mov
push
mov
fmul
push
inc
mov
shl
push
jl
cmp
es
inc
pushf
sub
neg
mov
mov
sbb
inc
dec
fwait
mov
inc
or
and
xor
das
pop
nop
push
movs
mov
cdq
ret
popf
mov
loope
cmps
pop
in
jo
mov
mov
add
fwait
adc
mov
fwait
or
mov
jl
fcmovnb
adc
inc
sbb
sbb
and
sbb
xlat
sbb
cld
and
movd
movaps
in
add
pop
fldl2e
or
sbb
lock
sar
xchg
lods
imul
fdiv
dec
push
jmp
test
mov
mov
in
adc
or
add
sbb
dec
push
xor
fnstcw
je
ror
data16
and
test
cmp
rcr
ret
add
ror
and
popa
sub
call
sub
or
fwait
cmp
lock
add
aaa
pop
jnp
mov
xchg
mov
lods
cs
shl
xor
adc
int3
sbb
jb
xor
push
cmp
ror
push
call
add
das
mov
clc
aaa
xchg
add
push
push
inc
mov
and
sbb
das
clc
cmps
mov
mov
loopne
cmp
pop
add
xchg
mov
pop
ret
cmp
add
fadd
add
and
popa
idiv
add
ss
cld
in
push
loop
into
ret
movs
or
in
cmp
xor
or
hlt
(bad)
cld
cmp
adc
mov
ja
popf
xchg
mov
out
inc
and
adc
mov
dec
dec
inc
je
(bad)
adc
jae
mov
pop
jecxz
fcmovnu
mov
inc
cmp
jg
cmp
ret
sbb
movs
xor
outs
fsub
fstp
ret
pop
loopne
push
xor
loopne
cmc
shl
push
push
dec
clc
jbe
cmp
lahf
in
sbb
jmp
call
lods
leave
or
adc
mov
add
add
and
sub
push
(bad)
in
push
dec
nop
nop
mov
jno
sub
(bad)
ffree
mov
sbb
out
(bad)
fs
call
mov
sub
test
daa
js
fadd
clc
test
dec
rol
or
fstp
adc
ja
adc
pop
cdq
ret
movs
out
and
or
adc
jae
sbb
adc
jle
jb
fs
ja
mov
jle
adc
and
mov
int3
lods
in
and
cmp
dec
fsub
jbe
sahf
movs
mov
and
in
cwde
mov
push
and
mov
pushf
mov
mov
push
sbb
pop
xchg
push
adc
ins
cmp
fcomp
push
fs
fidivr
mov
inc
sbb
pop
int
add
test
jns
and
ins
sub
pop
inc
mov
push
and
or
(bad)
and
push
lock
aaa
mov
jno
cmp
cld
xor
mov
les
cmp
pop
inc
sub
pop
shl
rol
pop
les
push
add
pop
sbb
pop
test
mov
lods
test
xchg
test
nop
or
and
movs
mov
loopne
pushf
popa
mov
ror
mov
push
add
in
add
outs
sbb
pop
push
and
enter
and
pusha
enter
and
pop
sbb
addr16
and
xchg
pop
mov
movs
and
lea
shl
pop
mov
or
int3
push
enter
pop
cmp
and
ins
pop
xchg
and
out
add
jl
xor
dec
ins
inc
xor
xor
test
mov
mov
pop
popa
sub
aad
fiadd
sub
dec
sub
sbb
mov
or
xchg
sbb
rcr
retf
sub
adc
pop
dec
sti
daa
dec
pop
sbb
jmp
cmp
adc
ins
stc
xor
cmp
jp
or
pop
mov
push
sar
dec
movs
or
or
push
xor
add
or
add
test
push
and
sbb
or
adc
das
jmp
cmp
mov
(bad)
cmp
sub
mov
mov
inc
loopne
popf
out
and
xor
loopne
mov
rol
loopne
xchg
pop
push
loopne
adc
icebp
dec
jbe
adc
call
push
xor
fmul
ret
jp
scas
loopne
nop
dec
sub
fcomp
push
cmc
cdq
add
push
in
xchg
icebp
xchg
add
lods
push
imul
mov
test
or
rcl
jl
jl
adc
ficom
clc
cmp
(bad)
fadd
test
mov
xchg
push
xchg
enter
pusha
imul
les
xchg
push
test
pushf
loop
dec
in
shl
movs
ror
dec
repz
sbb
fs
int3
mov
adc
xchg
or
push
xchg
dec
sub
mov
xchg
dec
sub
or
mov
mov
movs
rcr
xor
call
pop
push
idiv
xchg
push
(bad)
jmp
cld
mov
push
mov
movs
or
xchg
(bad)
sbb
in
push
aaa
pop
push
push
fldenv
iret
loopne
add
call
retf
test
lods
mov
inc
mov
pushf
into
and
and
inc
pushf
xchg
xchg
out
enter
mov
movs
cwde
sub
xchg
xor
fs
or
mov
xchg
retf
inc
push
xchg
sar
nop
inc
lahf
iret
and
les
dec
add
mov
mov
and
aas
repz
repz
push
mov
xlat
or
add
push
sbb
add
add
dec
call
mov
lea
mov
push
lds
jmp
ds
ret
es
mov
pop
dec
sahf
les
push
clc
call
sub
push
or
jge
sbb
cs
dec
push
xchg
mov
or
call
je
mov
cmp
popa
push
popa
or
pop
cmps
push
dec
inc
cmps
and
and
jae
push
aas
imul
ja
and
jnp
and
dec
aas
dec
inc
dec
and
leave
(bad)
dec
retf
add
inc
or
mov
inc
pop
inc
inc
push
dec
fstp
xchg
test
mov
push
idiv
dec
ret
fiadd
push
push
inc
mov
push
addr16
in
push
out
out
push
or
sbb
dec
push
and
pop
push
mov
cmps
mov
es
ds
mul
and
jae
push
push
sbb
pop
and
dec
sub
scas
dec
inc
dec
push
das
adc
dec
not
(bad)
push
out
dec
xor
cs
xor
dec
aaa
cmp
mov
add
(bad)
mov
xchg
xchg
jne
ins
jmp
popa
rcl
add
mov
add
sub
adc
dec
or
es
enter
aas
sbb
inc
cs
pushf
sub
nop
retf
adc
call
(bad)
or
inc
cmp
push
push
std
pop
aas
pusha
and
cs
mov
js
mov
and
cs
mov
mov
cs
loopne
add
leave
inc
xor
and
xor
leave
inc
jb
and
loopne
mov
inc
adc
inc
and
sub
jmp
add
mov
mov
xchg
pop
and
xor
and
add
leave
jo
adc
sar
mov
or
adc
and
or
fwait
lods
adc
pop
mov
ss
jl
retf
int3
enter
enter
jmp
(bad)
(bad)
fcomp
fxch
(bad)
(bad)
loopne
jecxz
in
lea
xor
and
movs
(bad)
dec
ins
mul
add
xor
mov
and
ds
popa
mov
sahf
pop
add
push
adc
das
add
xchg
inc
punpckhwd
jo
adc
inc
ret
popa
pop
mov
push
push
xor
rcr
or
pusha
mov
out
jmp
and
inc
call
repz
mov
sbb
sub
repz
xor
inc
dec
push
pop
cmp
repz
push
cmp
xrelease
repz
mov
ror
fdivr
repz
dec
sub
icebp
cmps
sub
inc
push
gs
enter
sahf
and
enter
fcom
fs
test
xchg
add
xchg
pop
mov
pop
jno
lahf
stos
mov
mov
push
aas
out
in
ret
inc
mov
mul
dec
test
xchg
and
mov
pop
aam
dec
not
stc
cmp
adc
adc
adc
repz
rcl
push
in
out
sahf
out
pop
sbb
cmp
sahf
out
sahf
pop
jo
nop
mov
jns
int3
loopne
add
cdq
mov
adc
add
adc
into
fs
in
loopne
retf
push
mov
jbe
inc
(bad)
jmp
pop
js
jmp
fwait
dec
jae
adc
push
sbb
and
add
test
or
push
popa
outs
daa
imul
mov
cmp
xchg
jae
jnp
sbb
sub
cmp
jnp
repnz
pusha
push
jo
add
pop
xor
push
xchg
xchg
aas
adc
push
mov
adc
aas
inc
fdivr
add
push
cld
jg
or
push
cmps
retf
jg
iret
add
sti
cmp
or
jns
mul
push
add
sahf
out
sahf
add
sahf
out
adc
adc
or
inc
aaa
and
push
sbb
cmp
iret
repz
scas
push
adc
iret
repz
sbb
or
imul
adc
sbb
jns
out
pop
inc
add
sahf
out
sahf
push
fs
pop
jle
cld
pop
movs
inc
inc
mov
adc
enter
hlt
push
or
or
outs
sahf
out
sahf
push
add
out
in
clc
adc
sub
mov
repz
pop
mov
cmp
repz
mov
mov
repz
lock
inc
out
mov
out
(bad)
cmp
add
add
push
fimul
push
mov
or
or
pop
punpckhdq
pop
push
pusha
and
add
add
adc
sbb
nop
in
jbe
jb
adc
sbb
jmp
shl
pop
add
loope
imul
push
nop
mov
add
loopne
cli
cs
ss
sbb
lock
ja
test
out
push
das
jmp
clc
fadd
push
(bad)
xor
xchg
push
cli
jmp
add
repz
lahf
(bad)
lock
push
push
clc
lock
imul
scas
or
cmc
retf
jmp
add
repz
out
aad
push
fisubr
add
fidivr
(bad)
mov
add
mov
scas
sub
lock
cld
cli
int
push
call
in
add
je
std
out
add
mov
je
inc
mov
mov
xchg
pushf
(bad)
push
mov
loop
lahf
out
loopne
pop
pop
add
cli
xor
repz
push
(bad)
add
xor
imul
fcom
jmp
sbb
push
movs
pusha
cmps
mov
jp
mov
movs
push
xor
inc
push
and
lahf
jg
popf
scas
push
mov
add
mov
int
jg
stc
out
add
xchg
jp
je
(bad)
pop
mov
call
push
pushf
movs
cmp
pop
inc
aas
in
stc
scas
stc
mov
mov
push
lods
jmp
add
jg
lahf
pop
mov
out
nop
add
sahf
push
mov
add
movs
and
nop
jl
test
jmp
dec
imul
push
call
xchg
loop
add
cwde
sti
cwde
add
jg
stc
data16
add
mov
add
or
jo
mov
ret
imul
push
imul
movs
nop
ror
ja
fidiv
mov
pop
push
lock
stc
out
mov
and
and
mov
out
add
push
xchg
push
lods
fsub
add
into
cli
add
fs
in
ss
aas
fistp
cld
push
dec
cli
adc
push
dec
ror
add
inc
loopne
mov
sub
pusha
push
mov
jle
add
out
mov
imul
pusha
ret
sbb
jo
into
shr
(bad)
lock
sahf
mov
and
int
fld
inc
push
push
nop
ins
cld
rep
jne
add
test
rol
lods
out
mov
call
pop
fmul
mov
hlt
call
test
push
into
(bad)
push
(bad)
stc
outs
mov
loop
mov
xchg
jo
add
iret
pushf
dec
call
movzx
std
cld
repz
add
out
sub
loopne
jo
add
frstor
xor
pop
fdivr
mov
xor
add
scas
ror
dec
mov
fdivrp
ds
out
add
retf
mov
rol
out
jne
mov
lahf
in
inc
sbb
pop
mov
outs
jo
sub
jmp
test
add
sti
stc
daa
mov
add
push
jmp
loope
test
mov
or
dec
dec
push
fadd
sahf
push
loopne
test
add
push
mov
retf
mov
idiv
(bad)
int3
cmps
adc
push
int3
fsubr
clc
or
out
jns
cmps
sbb
dec
aam
fdiv
out
push
in
cld
add
or
ds
repz
and
adc
inc
add
out
call
jns
out
nop
mov
xor
out
in
add
or
iret
repz
xor
push
pusha
jo
mov
lods
shl
data16
leave
mov
movs
(bad)
sbb
mov
and
movs
mov
aam
and
pop
mov
add
xchg
neg
ja
adc
add
imul
bound
inc
iret
retf
cmps
inc
push
adc
pop
xor
inc
outs
ret
inc
out
fdivr
push
xchg
ja
pop
add
jg
jg
stc
sahf
out
sahf
mov
jns
out
std
(bad)
inc
add
jns
out
add
sahf
add
add
sbb
mov
xchg
stos
add
add
jecxz
add
or
lsl
repz
cld
jg
rol
push
std
aam
ds
repz
cli
hlt
stc
or
jns
out
clc
sbb
xor
out
sahf
out
cmc
pop
hlt
ins
sahf
out
sahf
repz
nop
icebp
movs
jns
out
lock
jns
out
in
lock
add
jae
cmp
jmp
jmp
add
lahf
push
(bad)
xchg
sbb
leave
add
jge
bound
addr16
add
test
push
ja
mov
daa
or
add
or
or
push
mov
lds
sub
cld
cmp
add
inc
mov
(bad)
fdivr
(bad)
jmp
int
js
push
push
mov
call
out
into
mov
cmc
(bad)
(bad)
jmp
mov
add
sub
inc
mov
mov
(bad)
(bad)
(bad)
call
nop
imul
jns
and
mov
bound
inc
rcl
es
(bad)
mov
pop
(bad)
(bad)
(bad)
call
das
(bad)
push
adc
add
sti
shl
out
loope
(bad)
pop
aaa
ret
xchg
pop
inc
add
jmp
out
cld
fld
outs
mov
lea
bound
popa
popf
ins
(bad)
(bad)
(bad)
dec
in
inc
jmp
pusha
dec
mov
mov
cli
daa
mov
aam
(bad)
(bad)
inc
rcl
fxam
cdq
(bad)
clc
jl
pop
gs
lods
les
hlt
xchg
jmp
inc
cmps
and
cmp
pop
gs
int3
or
jge
rcr
test
test
loopne
sub
adc
(bad)
(bad)
inc
mov
cmp
xor
rcl
sub
ja
les
sbb
pushf
fstp
adc
out
out
xchg
xchg
ja
add
dec
push
test
or
or
inc
xchg
jbe
inc
inc
daa
test
sub
pusha
push
jmp
and
test
test
cmp
xchg
mov
lds
mov
mov
or
jbe
fs
and
call
ins
jle
fwait
jno
jmp
in
push
ds
push
loope
enter
xchg
mov
aaa
popa
lds
mul
aas
adc
pop
sbb
fist
pop
mov
pop
add
and
and
push
mov
mov
aas
sar
sahf
aaa
or
mov
pop
shl
addr16
inc
and
out
sahf
xlat
push
xor
inc
inc
push
pusha
enter
ins
xor
jbe
dec
out
jnp
cmp
jb
ror
add
and
pop
fcomp
sti
jns
adc
pop
adc
pop
(bad)
fmul
add
add
in
mov
push
or
cmp
ins
call
sbb
push
push
cmp
xor
adc
ins
outs
jne
xor
mov
ds
imul
pusha
xchg
aad
outs
aam
and
cmp
retf
(bad)
call
mov
fsub
pusha
xor
xchg
lock
cmp
pop
push
jo
xor
jmp
or
pusha
and
mov
add
push
pop
sahf
mov
jns
nop
jbe
cmp
cmp
jns
jg
add
pop
adc
mov
out
sahf
or
out
sahf
jg
add
xor
out
sahf
enter
test
xlat
popf
out
test
pop
push
js
out
sbb
add
push
jl
fdiv
cmp
cmp
mov
iret
mov
push
adc
repz
and
(bad)
repz
repz
movs
add
repz
add
pop
sbb
repz
inc
jp
aam
jns
not
jle
sub
mov
add
pop
xor
ss
out
sahf
int3
pcmpgtd
lods
push
jns
out
xchg
or
jns
out
pushf
arpl
jnp
repz
fcomp
push
outs
cs
push
cmp
mov
call
adc
cmp
cmp
push
ret
iret
jae
and
daa
iret
inc
loop
sbb
jns
shr
repnz
repz
mov
ret
jae
adc
out
push
retf
jns
out
stos
add
xchg
out
pop
sbb
out
jns
ins
sub
out
lea
push
adc
jae
(bad)
sahf
out
sahf
arpl
cmps
add
jns
pop
sbb
jnp
(bad)
imul
out
sahf
mov
mov
jns
dec
sahf
push
pop
ja
into
jns
out
addr16
scas
pop
xchg
xchg
out
out
pop
pop
sahf
mov
aas
fisubr
das
stos
out
idiv
dec
(bad)
dec
mov
nop
or
cs
or
cs
test
in
fnstcw
stc
lds
in
mov
mov
inc
cs
int
in
cs
popf
fisttp
std
nop
or
mov
shl
repz
in
cs
jmp
cs
fstp
dec
(bad)
cmps
mov
xchg
xlat
and
in
cs
scas
out
cs
cs
fistp
(bad)
jle
pop
cld
push
shl
out
add
adc
rcr
add
push
add
xor
add
adc
add
push
inc
push
jle
sbb
sbb
push
popa
pusha
movs
test
xor
or
or
push
dec
shl
ss
push
add
shl
add
outs
add
xor
and
add
jne
adc
and
je
outs
fs
push
mov
test
sub
and
(bad)
push
lods
and
int3
xor
adc
mov
rol
ret
popa
inc
mov
jno
imul
je
mov
mov
ret
je
imul
iret
sub
icebp
pop
xor
xchg
push
nop
cdq
arpl
sbb
or
inc
mov
inc
ds
(bad)
or
inc
mov
mov
leavew
adc
shl
adc
lds
sbb
add
leave
leave
leave
adc
adc
add
add
arpl
jo
(bad)
pop
or
push
xchg
outs
adc
xchg
fmul
mov
cmp
xchg
mov
int
jb
and
mov
ret
push
add
iret
repz
sbb
sbb
sbb
inc
dec
call
xor
dec
js
inc
in
mov
push
pop
pop
jb
pop
add
add
pop
jb
add
mov
add
cmps
xchg
pop
or
or
add
test
mov
dec
int3
sub
ins
repz
repz
sbb
pop
fmul
repz
cmp
jl
add
inc
ret
(bad)
loop
xchg
push
ror
repz
xor
cmp
repz
retf
push
cmp
repz
cmp
cmp
cmp
repz
(bad)
cmps
data16
repz
xchg
push
(bad)
iret
repz
ss
test
cmp
repz
into
cs
outs
repz
repz
push
sahf
pop
fmulp
repz
ds
cmp
repz
shl
popa
repz
repz
xchg
push
ror
repz
xor
cmp
repz
leave
sub
repz
iret
repz
cmp
cmp
repz
lds
iret
repz
xchg
push
aad
repz
xor
lea
repz
int
lods
ins
repz
repz
sbb
repz
cmp
add
sahf
out
dec
add
sar
out
shl
xor
out
jae
repz
mov
sahf
out
retf
sub
stos
stos
out
sahf
out
imul
sbb
fwait
fwait
pop
pop
fstp
out
fstp
cmp
out
jnp
sti
pop
sahf
out
sahf
pop
xchg
sahf
out
(bad)
daa
daa
cmps
cmps
out
sahf
out
addr16
pop
sahf
out
sahf
pop
xchg
xchg
push
push
xlat
jns
out
xlat
aaa
aaa
mov
out
sahf
out
ja
test
jg
jns
out
iret
das
das
scas
scas
out
sahf
out
outs
out
out
pop
sahf
out
sahf
pop
lahf
lahf
pop
pop
fistp
out
fistp
aas
mov
out
jg
dec
iret
repz
inc
push
and
push
xor
repz
or
push
sbb
js
iret
repz
inc
and
adc
xor
mov
add
cmp
and
repz
mov
adc
iret
repz
sbb
adc
repz
repz
push
push
push
iret
repz
add
or
add
cmp
sbb
cmp
repz
pop
add
or
or
adc
sbb
xor
add
sub
cmp
inc
push
pusha
jo
xchg
cmps
imul
xlat
or
sbb
outs
mov
xchg
sar
ins
adc
mov
mov
push
push
cmovge
lahf
aam
add
add
call
adc
add
push
or
fidivr
cli
or
test
or
or
and
xchg
mov
or
sub
enter
adc
pop
sbb
leave
test
sbb
and
sbb
test
arpl
adc
in
in
adc
push
pop
sub
mov
sbb
loop
pop
xor
or
rol
aam
loopne
imul
lock
in
push
hlt
jns
cmps
stc
push
or
and
inc
push
std
dec
inc
in
adc
in
add
fisub
pop
add
lahf
cmps
add
sahf
or
jb
jbe
inc
pusha
add
push
mov
call
or
sub
in
add
adc
das
leave
mov
mov
bound
fstp
inc
loopne
movs
outs
inc
in
add
inc
add
xor
jb
addr16
add
add
adc
into
jo
inc
mov
dec
ja
dec
xchg
(bad)
mov
adc
outs
add
inc
or
inc
push
mov
sub
add
add
pop
pushf
sub
scas
cdq
neg
stos
and
push
add
add
add
sub
add
inc
add
loope
js
inc
das
push
cmp
ins
pop
dec
scas
add
and
nop
jl
daa
inc
aas
add
loopne
fst
add
adc
add
ds
adc
push
and
inc
xlat
jbe
inc
ror
pusha
cld
in
adc
in
jnp
pop
and
daa
mov
and
and
jg
in
ficomp
and
aas
add
add
lods
or
mov
push
sub
mov
add
push
in
inc
jle
xchg
sub
xchg
add
xor
pop
inc
add
(bad)
jp
add
pop
jmp
(bad)
jmp
stos
sbb
scas
jg
xchg
ret
push
jg
xor
jnp
test
add
sub
add
in
neg
sub
int3
ficom
outs
inc
mov
sub
and
add
mov
xchg
ja
or
mov
mov
cs
jmp
call
call
xor
xchg
jno
adc
pop
xlat
sub
dec
jl
ficomp
mov
mov
pop
outs
loope
sub
lods
push
cmp
fwait
out
jns
pop
movs
push
pop
les
push
mov
jmp
sub
test
nop
xchg
sub
pop
fmulp
dec
repz
iret
cmps
pushf
push
fcomp
push
les
int3
xchg
out
mov
cmps
pop
lods
mov
jno
cs
ficomp
out
push
adc
jo
inc
jbe
nop
xchg
icebp
sahf
mul
adc
xchg
pushf
jle
dec
jnp
xor
sbb
mov
push
mov
pop
fsub
push
inc
mov
push
cmp
sbb
js
retf
sbb
sbb
out
jns
or
mov
ds
mov
push
sub
scas
mov
out
pushf
pop
faddp
ret
in
data16
push
pop
push
fs
stc
imul
adc
jl
retf
mov
push
loopne
sbb
jnp
cmp
push
push
xor
nop
in
test
jge
sti
fmulp
push
mov
push
push
xor
push
in
dec
sti
mov
push
push
adc
ss
jge
out
dec
shr
push
mov
movlhps
pop
(bad)
xchg
or
inc
daa
fcomp
rcr
out
js
loopne
xor
push
dec
es
fcomp
mov
sahf
fisubr
inc
ja
dec
sbb
in
jbe
out
pop
mov
push
mov
fcomp
div
test
push
shl
cmp
daa
sub
repz
fisubr
inc
fdivr
idiv
push
arpl
or
sub
mov
loopne
inc
fidivr
sbb
mov
cs
push
push
sbb
js
fdivp
(bad)
data16
xchg
mov
cwde
fcom
je
repz
ss
adc
xchg
(bad)
xchg
out
sub
sub
push
fisubr
xchg
cmp
aas
sar
int3
push
xchg
idiv
lock
(bad)
cs
cmp
sub
jne
jl
sbb
(bad)
mov
push
out
fnstcw
push
inc
les
imul
jns
xor
sbb
and
pop
dec
mov
cmps
jl
aam
cmp
sbb
js
ds
enter
sub
mov
ds
push
lods
(bad)
xchg
mov
mov
movs
lea
pop
push
call
(bad)
jmp
sbb
neg
push
scas
outs
mov
lods
push
xor
sbb
mov
out
in
push
xchg
rcl
xor
ss
adc
xchg
xchg
ror
mov
xchg
sub
adc
(bad)
dec
mov
es
ja
dec
mov
es
int3
dec
adc
loopne
cs
(bad)
or
outs
xchg
ficomp
mov
ss
fist
out
push
call
push
cmp
push
js
test
cmp
js
dec
setle
xchg
fdivr
xor
push
cwde
les
sbb
ds
popa
fsubp
cs
dec
aam
push
lahf
sub
fidiv
(bad)
lods
(bad)
mov
push
mov
sar
inc
push
pushf
repz
pushf
cmp
rcr
into
fs
loopne
cld
js
loopne
hlt
mov
enter
jbe
clc
ins
imul
add
add
test
push
push
push
add
sub
and
sbb
jge
and
cmp
sub
xor
add
adc
or
adc
nop
jle
or
push
add
jbe
ja
inc
add
push
dec
push
pop
rcl
or
push
push
sbb
je
or
sub
dec
add
sub
sbb
movs
and
xor
retf
bound
pop
add
add
or
jl
inc
mov
mov
adc
add
adc
add
jg
xchg
out
xchg
clc
aas
push
pop
jmp
rcr
push
sahf
(bad)
cld
add
pop
or
push
aas
sbb
(bad)
jg
add
sub
jo
popf
sbb
pop
ror
mov
or
add
add
add
jge
push
(bad)
psubb
addr16
xchg
push
out
ficomp
jl
out
(bad)
cmp
add
stos
xor
in
add
pop
sbb
pop
push
fidivr
xchg
fs
aas
pop
cs
pop
add
mov
out
pop
lock
xor
pop
std
cmp
ins
scas
cmp
add
mov
ins
jl
inc
add
jle
ins
out
jg
sbb
add
sbb
jae
jo
iret
rol
or
push
repnz
push
add
bswap
sbb
pop
aas
es
push
add
repnz
repz
pop
aas
into
push
add
mov
loopne
call
loopne
add
add
comiss
dec
pop
sub
daa
add
pop
mov
cmp
std
clc
lock
aas
(bad)
(bad)
push
rcr
dec
add
fcmovbe
mov
outs
clc
pop
leave
push
sub
pusha
add
jmp
pop
sbb
sub
add
cmpxchg
ds
jg
fsubr
or
(bad)
pop
ins
mov
pushf
in
les
test
cmp
fnstsw
cs
mov
xchg
int
push
pop
cld
pop
cmp
fcomp
test
cs
pop
jmp
mov
adc
aaa
cs
sbb
and
or
jle
or
fldcw
push
sub
inc
add
inc
sbb
pusha
xor
sbb
push
adc
and
sbb
ret
sub
shl
iret
xor
clc
clc
dec
sbb
cmp
mov
ins
push
sbb
or
test
ins
pop
mov
push
shl
xchg
and
xor
out
push
pop
mov
adc
or
ins
add
dec
mov
push
je
add
scas
mov
push
push
aas
outs
and
outs
ds
or
mov
scas
push
push
jne
pop
cmp
pop
jb
and
js
fsubrp
out
sub
je
jbe
fwait
pop
mov
pusha
outs
sbb
retf
neg
ins
inc
and
(bad)
jo
arpl
jnp
in
mov
xchg
and
push
pop
enter
imul
sub
sbb
cmp
popa
ss
fwait
jb
xor
loope
xor
outs
cmp
sahf
push
fsubrp
cmp
fwait
addr16
dec
mov
inc
push
imul
xchg
das
or
cmp
ficom
data16
nop
inc
jp
js
dec
ins
push
add
ins
sub
cmp
push
jbe
imul
faddp
jo
outs
sub
ins
push
je
pushf
sub
inc
fs
jae
out
mov
jmp
jne
jo
pop
dec
bound
adc
cmp
jecxz
maskmovq
div
pop
out
jne
daa
iret
daa
aaa
rcl
out
jge
inc
popa
dec
jns
push
(bad)
(bad)
stos
jne
bound
popa
(bad)
adc
jb
pop
pop
cmp
push
xchg
pop
ja
jecxz
out
jb
ins
push
ins
xchg
je
popa
out
loop
push
mov
sbb
mov
out
mov
ins
push
jbe
lahf
outs
ret
aaa
adc
out
aaa
ja
jnp
outs
add
push
sub
mov
pop
ret
gs
fistp
pop
adc
xor
pop
pop
loopne
inc
jo
arpl
nop
adc
pop
fs
addr16
jo
icebp
jg
addr16
cs
xor
shl
xchg
jbe
(bad)
fdiv
jb
push
mov
call
jne
aaa
mov
js
or
xor
mov
clc
adc
outs
sbb
(bad)
(bad)
outs
mov
push
push
and
adc
push
jecxz
push
je
mov
sub
arpl
add
dec
scas
loopne
xlat
imul
xchg
ins
lahf
jae
xchg
(bad)
(bad)
jg
repz
add
jae
dec
cvtdq2ps
jmp
pop
pop
mov
es
repnz
out
pop
loopne
mov
push
inc
dec
arpl
mov
pop
ds
pop
add
inc
cmp
bound
push
push
adc
rcr
jb
dec
jmp
dec
or
jle
push
adc
mov
and
ja
dec
add
push
dec
sbb
and
mov
dec
jmp
call
cmp
jae
push
inc
fdiv
aaa
mov
ret
fs
addr16
xor
push
addr16
add
xor
push
push
stos
shl
jo
or
imul
sar
ucomiss
push
dec
add
add
add
ss
iret
push
pop
(bad)
mul
inc
mov
sbb
jns
es
out
sub
add
or
jno
lahf
sub
pop
jmp
dec
pop
mov
movs
or
es
sub
inc
mov
imul
popa
adc
sub
push
sahf
stos
pop
mov
and
arpl
mov
inc
inc
dec
fwait
adc
repnz
pop
sbb
push
stos
add
adc
js
js
jne
out
jl
sbb
(bad)
fwait
jbe
imul
xlat
or
mov
bound
lahf
xchg
mov
sbb
dec
mov
xor
xchg
jl
pop
in
sub
xchg
addr16
test
outs
adc
or
outs
xchg
loope
inc
mov
dec
out
and
test
(bad)
shl
fmul
pop
fist
cmp
pop
pop
pop
jb
mov
pop
jae
scas
fnstsw
je
and
(bad)
and
scas
retf
loopne
div
push
sti
call
mov
jbe
push
ret
mov
pop
inc
or
jo
xchg
or
daa
push
xchg
imul
fwait
sbb
js
xor
das
xor
push
fcom
xor
inc
(bad)
pop
xor
scas
jecxz
hlt
add
push
test
dec
inc
sbb
and
es
fwait
jb
addr16
or
stos
pop
jo
push
cmp
call
stos
pop
or
test
fstp
mov
adc
call
mov
cmp
adc
fisubr
or
arpl
mov
jp
jecxz
inc
adc
pop
loop
mov
adc
add
jecxz
out
push
data16
loopne
mov
cmp
aam
repnz
arpl
in
jbe
push
out
gs
mov
shr
imul
sbb
pop
add
jp
das
fsubr
push
outs
cmp
arpl
push
es
cs
cmps
mov
jo
cmp
fwait
loope
push
xor
adc
dec
push
add
adc
mov
aaa
jle
cmp
aad
cmp
pop
loope
adc
jns
test
fist
sub
dec
cwde
arpl
imul
bound
sbb
add
mov
add
mov
push
inc
aaa
jns
mov
dec
cmps
scas
cmp
out
sub
xchg
das
loopne
xchg
movups
scas
ins
adc
stos
adc
mov
mov
cmp
ret
loopne
inc
or
out
rcl
mov
push
xor
push
mov
(bad)
pop
and
mov
mov
cmps
(bad)
push
pop
jnp
and
inc
pusha
push
lods
add
inc
dec
pop
xlat
in
arpl
jae
ins
xlat
popa
jo
ja
jmp
jmp
mov
aas
call
(bad)
daa
(bad)
(bad)
rcl
sbb
push
jp
sbb
inc
sub
pop
add
int3
xchg
jae
sub
adc
cmp
scas
sub
jmp
or
or
test
sbb
int
add
imul
je
dec
js
mov
dec
pop
movs
add
ficom
popa
mov
mov
rcr
sub
aam
push
aaa
mov
test
test
add
sbb
jne
xchg
imul
add
shl
mov
dec
fwait
(bad)
addr16
pop
inc
jo
daa
mov
mov
sbb
or
and
inc
lods
or
or
inc
sbb
adc
addr16
push
xchg
and
pop
imul
mov
bound
pop
call
mov
and
in
imul
mov
push
push
gs
dec
pop
(bad)
loop
push
add
mov
scas
push
jnp
pop
xchg
pop
or
(bad)
mov
mov
outs
mov
ins
inc
add
cs
xlat
add
add
push
pop
jne
push
ret
out
jge
inc
bound
and
jmp
ret
dec
repz
leave
add
div
cs
add
or
je
cmp
sbb
adc
fwait
sub
dec
adc
into
js
mov
pop
sub
pop
ficomp
sbb
adc
cmps
push
xor
adc
data16
fwait
sbb
(bad)
mov
cli
lods
xchg
sub
mov
imul
cwde
adc
cvttps2pi
aam
pop
xor
scas
scas
sbb
or
pop
jnp
pop
jp
pop
call
test
or
outs
xor
push
mov
es
jne
daa
daa
arpl
lods
pusha
int
loop
xor
pop
fidivr
inc
cmp
js
cmp
mov
mov
push
pop
and
inc
ficom
(bad)
das
fld
dec
clc
add
test
aas
and
arpl
stos
jo
arpl
gs
inc
inc
retf
popa
out
(bad)
movs
shl
mov
mov
or
aas
mov
and
das
sbb
xor
or
push
push
xor
mov
ror
mov
in
jecxz
(bad)
push
push
mov
pop
shr
cmps
pop
cmps
adc
add
pop
or
inc
lahf
inc
pop
pop
mov
outs
imul
popf
cmp
outs
imul
stos
ret
push
mov
xlat
sub
mov
mov
and
pusha
mov
fcmovbe
xchg
jmp
cmp
xchg
cmps
data16
fwait
cmp
jmp
test
sbb
mov
xor
xlat
mov
adc
pop
pop
push
jecxz
aas
stos
pop
add
dec
jb
and
call
sbb
imul
add
shl
xor
mov
pop
sti
push
sub
or
arpl
pop
dec
arpl
lods
cmps
pop
jl
fstp
mov
xchg
arpl
sbb
add
inc
xor
stos
adc
push
cmp
push
ret
inc
popa
pop
imul
sub
pop
test
ins
push
jo
stos
test
popa
jne
mov
adc
in
xor
adc
or
loop
and
or
xor
add
test
arpl
push
push
add
scas
push
sbb
dec
and
jno
sub
adc
mov
cmp
push
xchg
pop
inc
xchg
jbe
inc
add
mov
les
and
add
jg
push
les
fidivr
mov
jnp
das
ds
lods
es
inc
ror
lea
ja
cmp
sub
outs
pop
adc
fbstp
pop
jnp
adc
popa
dec
fs
adc
pop
mov
jns
shl
xchg
jo
scas
or
imul
and
xchg
xchg
xchg
jo
je
outs
xchg
arpl
rol
repz
(bad)
xor
xor
inc
inc
inc
ss
adc
xor
inc
xor
in
aaa
push
ss
xor
inc
aaa
inc
inc
xor
inc
xor
aaa
xor
xor
fxch
pop
cs
pusha
cmp
inc
xor
cmp
inc
fidiv
fcmovnu
cmp
inc
pop
xor
inc
mov
ss
neg
xor
inc
(bad)
sbb
xor
adc
dec
push
clc
inc
inc
xor
inc
sbb
mov
lods
ss
inc
xor
lock
fld
xor
xor
push
cmps
inc
xchg
lods
xor
std
add
xor
xor
cmp
xor
xor
add
lods
xchg
inc
enter
or
(bad)
dec
mov
xor
pusha
xchg
xor
inc
inc
lods
pusha
rcr
cmp
cwde
xor
ror
and
and
lods
mov
xor
and
ss
xor
cmp
les
bound
xor
data16
push
xor
mov
call
or
leave
cmps
inc
xor
rcr
xor
daa
or
lods
inc
loop
add
xor
pop
imul
outs
aaa
cmp
dec
shl
xor
ss
int
mul
inc
test
inc
inc
xor
mov
je
inc
xchg
shl
outs
push
das
xor
pop
ins
push
aaa
xor
xor
add
cmp
inc
sahf
sbb
xor
sbb
int3
sbb
dec
and
call
int3
adc
push
adc
jno
pop
shl
ss
inc
out
les
inc
xchg
or
sbb
mov
cmp
jbe
mov
xor
xor
sub
lds
scas
xor
js
or
mov
out
inc
inc
pop
xor
or
fisubr
or
xor
sbb
dec
pusha
add
jb
jo
pusha
jbe
adc
or
xor
inc
or
mov
jg
cmp
xor
push
in
rol
cmp
push
push
xor
mov
xor
data16
push
mov
in
popa
add
rcr
test
into
cmps
and
sub
ret
dec
and
pushf
ins
jne
push
sbb
push
inc
push
inc
mov
cmp
jns
jno
or
sub
cmp
int3
add
icebp
lods
jae
adc
mov
fwait
or
xchg
dec
pushf
sub
adc
shr
pushf
push
ret
repz
fldenv
xor
adc
jb
adc
fisttp
push
inc
push
pop
adc
nop
ret
sub
jp
(bad)
arpl
jo
mov
sar
rcr
hlt
adc
pop
mov
adc
push
jo
pop
adc
int
adc
push
push
dec
scas
jae
test
movs
or
bound
push
call
adc
imul
mov
cs
dec
inc
dec
ins
aam
in
mov
and
adc
inc
push
mov
push
fmul
(bad)
and
pop
adc
retf
adc
mov
call
jo
ror
sbb
pop
loop
mov
loop
mov
sbb
popa
lea
adc
in
or
xor
mov
sbb
push
push
pop
adc
mov
dec
lods
xchg
and
jmp
dec
mov
inc
dec
dec
arpl
dec
sahf
pop
pop
add
sbb
xor
dec
jo
push
bound
leave
mov
lea
adc
fistp
inc
xchg
and
and
mov
sub
loop
adc
add
ficom
jg
add
lods
clc
test
or
dec
push
mov
pop
int
jbe
inc
dec
adc
inc
push
dec
xchg
rol
outs
sbb
or
fwait
das
pop
dec
pusha
(bad)
in
mov
in
sar
inc
jo
xor
or
dec
jnp
and
les
mov
mov
les
sbb
test
sbb
lahf
and
add
add
dec
sbb
mov
xchg
iret
xor
popf
push
cwde
sub
cmp
sbb
inc
pusha
fwait
sbb
icebp
push
cmc
mov
out
stos
sub
test
sbb
outs
ins
gs
popf
jbe
adc
jns
xchg
div
push
cmp
adc
pop
pop
outs
xchg
cmp
sbb
push
aaa
add
or
(bad)
test
sbb
add
xchg
ins
mov
push
mov
ins
dec
adc
push
adc
(bad)
push
test
adc
shl
pop
mov
adc
dec
bound
xor
jne
call
sub
pop
pop
sbb
mov
sbb
or
shl
cld
sar
in
gs
cmp
push
(bad)
mov
(bad)
daa
xor
inc
jo
mov
xchg
push
cdq
mov
movs
mov
aaa
les
out
pop
xor
pop
xor
aaa
(bad)
xor
sbb
dec
cmp
xor
test
iret
push
inc
inc
dec
fs
add
dec
dec
movs
arpl
xchg
(bad)
jne
ret
jge
mov
push
daa
and
pop
iret
pop
xchg
in
fsub
push
fwait
xor
js
pop
enter
jns
xchg
sbb
pop
jecxz
add
or
push
imul
push
inc
xor
call
xor
repnz
adc
xchg
push
jae
test
pop
call
js
jbe
stos
dec
test
mov
add
push
inc
inc
cmp
cmc
icebp
neg
xchg
adc
add
xchg
cli
and
clc
push
or
cli
mov
js
out
jge
xor
adc
ret
fs
adc
lock
out
int
xchg
xchg
xchg
sub
outs
jb
sbb
push
mov
fs
movs
cmp
ret
adc
add
adc
mov
dec
adc
loop
nop
iret
push
fld
fild
inc
ins
inc
xchg
add
adc
pop
sbb
fs
gs
dec
push
inc
jo
ins
div
test
mov
pop
fistp
out
pusha
inc
outs
pusha
pop
adc
dec
arpl
mov
sub
inc
inc
dec
pop
pop
mov
rcl
adc
fwait
dec
push
mov
sbb
jmp
retf
mov
cdq
dec
sbb
or
adc
pop
cmp
(bad)
jmp
int3
add
inc
fcom
sbb
mov
inc
arpl
jbe
loope
nop
popa
push
ror
mov
iret
outs
outs
je
push
xchg
dec
cmp
push
add
aam
or
add
adc
mov
xor
xchg
adc
jmp
mov
or
add
add
and
pop
push
adc
inc
adc
sbb
inc
xor
aam
add
xor
lods
shr
jo
inc
pop
xchg
mov
ins
xor
pusha
fst
es
adc
push
adc
test
repz
gs
mov
sbb
and
mov
cmp
mov
add
aad
fstp
popa
sub
addr16
add
ins
popa
inc
or
mov
dec
mov
xchg
inc
cmp
push
add
jecxz
std
push
lds
mov
jns
lods
sar
movs
test
and
out
lods
sbb
xchg
inc
(bad)
in
sbb
outs
xchg
inc
fidivr
pop
jns
(bad)
cmp
mov
and
out
adc
cld
sbb
xchg
gs
xchg
repz
aaa
sbb
and
push
add
inc
sbb
scas
xchg
xchg
ins
mov
push
outs
xchg
inc
cmp
outs
mov
fcom
adc
push
cmp
gs
jl
mov
inc
fs
sub
xor
jge
cmp
sub
inc
gs
sub
ins
pushf
xchg
mov
rcr
dec
adc
mov
mov
inc
or
push
sbb
jb
push
xchg
rcl
dec
aas
mov
sbb
inc
xchg
fsub
ins
test
mov
ret
inc
fs
dec
ja
movs
push
or
mov
push
outs
ins
jle
mov
push
loope
adc
lods
sbb
enter
xor
mov
and
sbb
inc
and
jo
ins
add
xor
pop
outs
add
adc
dec
sub
push
cmp
pop
outs
retf
mov
mov
pop
push
popa
jle
jnp
enter
or
xor
mov
inc
mov
jno
popf
aad
mov
imul
or
and
inc
jmp
or
xchg
sbb
xchg
inc
fstp
jns
stos
adc
sbb
mov
retf
test
dec
inc
jbe
pop
mov
loope
fs
and
dec
sub
(bad)
inc
jae
imul
es
pop
adc
enter
adc
sub
arpl
dec
dec
in
adc
popf
cmp
sbb
push
out
in
adc
pop
outs
xlat
mov
sbb
sbb
jmp
daa
mov
jmp
jno
inc
jl
ss
mov
jecxz
imul
push
lods
in
das
mov
icebp
daa
inc
mov
ja
inc
jecxz
lds
sub
gs
or
sbb
addr16
sbb
daa
push
inc
mov
pop
mov
inc
ins
sub
mov
sbb
arpl
sbb
push
fcomp
sbb
inc
test
sti
fsubr
(bad)
int3
or
pop
and
fabs
sbb
push
push
xchg
gs
and
sbb
xlat
cs
adc
add
and
xor
add
inc
inc
pop
mov
fadd
adc
cmp
sbb
xchg
push
adc
dec
popf
mov
jno
pop
xchg
cmp
outs
pop
retf
outs
mov
inc
xor
std
dec
sub
(bad)
add
setle
push
pop
sub
dec
sbb
lds
add
pop
push
adc
add
xor
test
mov
mov
int
push
add
sbb
sbb
into
cmps
movs
add
mov
rcr
or
test
(bad)
inc
sbb
popa
retf
sbb
scas
mov
iret
lahf
xchg
inc
sbb
fstp
and
mov
and
sub
xchg
ret
add
sub
dec
adc
xor
push
pop
sbb
mov
sub
inc
lods
mov
push
bound
xchg
out
mov
sahf
adc
and
or
icebp
pop
jmp
xchg
mov
pop
jne
xchg
xor
imul
or
xor
ja
ss
movs
xor
cmps
movs
ja
in
les
xor
add
sub
add
add
leave
aaa
xchg
mov
popf
mov
ss
aad
ins
(bad)
imul
test
int
inc
sbb
ins
xchg
nop
add
ret
sub
imul
sbb
cs
(bad)
in
jmp
cmps
pusha
stos
sub
sub
or
je
add
add
xor
mov
adc
adc
xchg
inc
pop
and
add
pop
jecxz
push
adc
outs
pop
xor
daa
nop
sub
xor
mov
sub
das
and
mov
cmps
popf
add
sub
jge
adc
imul
push
fsubr
xchg
mov
and
retf
jb
mov
or
bound
das
(bad)
jb
inc
ins
pop
ins
sub
and
addr16
test
sub
inc
push
jp
sbb
daa
ret
dec
es
ins
sbb
cmp
push
xor
fwait
add
mov
sbb
inc
inc
dec
inc
lea
mov
rcl
rol
pop
ret
idiv
movs
push
mov
call
mov
lds
mov
or
xor
push
pop
add
xor
or
xor
jle
mov
ror
shl
and
stos
add
xchg
inc
inc
adc
adc
sbb
pop
add
icebp
xor
adc
dec
dec
pusha
into
stos
or
fld
outs
inc
outs
(bad)
adc
gs
outs
gs
aad
cmp
inc
imul
cdq
in
data16
inc
rcr
mov
inc
pusha
aaa
lahf
leave
mov
xchg
or
test
ret
or
imul
pusha
lock
jne
or
pop
or
sti
push
pop
fisttp
mov
mov
add
outs
int3
icebp
mov
inc
cwde
sub
pop
sub
mov
outs
sub
int
jae
dec
lea
jno
sub
test
add
sbb
xchg
lods
mov
adc
mov
fisttp
in
shl
add
jo
mov
call
mov
cmp
pop
inc
xchg
xor
cmp
dec
pop
push
xor
xchg
push
and
jno
mov
(bad)
daa
movzx
or
dec
dec
inc
cmp
dec
push
dec
inc
push
cmp
daa
(bad)
in
push
pop
bound
int
es
iret
jmp
sub
jl
jp
movs
jae
cli
or
fisub
push
pop
and
and
pop
test
icebp
cs
adc
add
inc
and
ins
mov
outs
jo
add
jg
push
das
pop
imul
popa
int
pop
cmc
popa
sub
pop
pop
pop
and
mov
bound
test
mov
and
aam
add
adc
test
and
cmp
test
rcl
movs
add
cmp
push
jo
enter
pop
jmp
out
or
(bad)
shl
jbe
icebp
sub
cmps
jo
dec
xchg
stos
mov
jae
and
fidiv
in
xor
sub
xchg
pop
adc
hlt
adc
inc
push
bound
jns
js
test
test
icebp
in
data16
out
lods
cmp
mov
or
mov
ja
gs
ins
xchg
push
stos
loope
cmp
mov
shr
adc
fwait
and
mov
push
int
xchg
cmps
cli
cmps
fcomp
mov
mov
inc
push
xchg
sbb
dec
dec
int3
cmp
(bad)
nop
test
sub
fcomp
(bad)
sbb
dec
scas
das
pop
sbb
pop
inc
sbb
je
cld
jb
inc
sti
mov
(bad)
dec
shr
add
jle
arpl
xchg
aam
imul
arpl
mov
aaa
idiv
xchg
jae
jmp
mov
(bad)
addr16
xor
sub
mov
ds
push
mov
and
pop
xchg
ins
or
js
pop
gs
or
or
sahf
bound
std
mov
pop
shl
cmp
test
sub
xchg
pop
adc
outs
cmc
inc
add
enter
arpl
cmps
lea
pop
ins
outs
movs
and
add
shl
and
fistp
push
(bad)
push
jno
add
imul
movs
out
cmp
adc
cmp
lock
xor
sub
call
pop
popaw
sahf
adc
daa
sub
inc
aad
add
test
mov
dec
mov
mov
sti
mov
inc
mov
or
jmp
sub
and
adc
and
fld
pushf
test
enter
fsub
fistp
adc
ret
test
jecxz
aaa
or
push
xchg
push
sbb
arpl
shl
ret
sub
outs
fcom
add
sbb
dec
mov
std
mov
ins
(bad)
push
ret
cmps
shr
dec
pushf
xor
out
xor
push
fs
xchg
sbb
adc
sub
shl
rol
push
icebp
sbb
pop
icebp
sbb
data16
xor
clc
outs
pusha
mov
jae
imul
aad
and
sub
and
mov
adc
loopne
bound
dec
push
dec
(bad)
xchg
and
das
sbb
mov
fstp
inc
popf
sub
hlt
cmp
popa
ins
aaa
adc
std
and
cmps
and
outs
in
sbb
adc
push
into
add
add
mov
cmp
jecxz
and
rol
fnstenv
push
ror
mov
iret
cwde
int3
mov
lods
sbb
or
inc
and
dec
and
push
shl
and
addr16
jb
ins
sbb
mov
push
pop
test
in
clc
aam
xor
sbb
dec
js
sti
ins
dec
mov
push
in
add
inc
xchg
sbb
es
inc
inc
not
loopne
xor
sbb
arpl
xor
ins
add
retf
and
sbb
sbb
or
out
and
sub
movntq
pop
mov
comiss
sub
sbb
aaa
mov
inc
adc
mov
jns
repnz
fwait
and
fs
inc
and
in
pop
cmp
mov
dec
xlat
sbb
in
cmc
inc
adc
mov
rcl
test
add
pushf
dec
movs
sub
out
xor
push
retf
xchg
ins
xor
shl
xchg
sub
out
push
movs
sub
xchg
or
mov
sbb
mov
pop
(bad)
int3
add
ret
fcmovnb
cmp
push
outs
sbb
(bad)
shl
into
adc
adc
add
add
leave
mov
push
dec
and
std
sbb
or
jmp
mov
repz
adc
xchg
jg
pop
imul
dec
sbb
shr
and
jmp
inc
aaa
lds
retf
push
add
xchg
mov
or
adc
and
sub
fisttp
pusha
aaa
inc
adc
je
mov
aaa
push
jo
inc
xor
sbb
arpl
mov
outs
mov
aaa
cmp
sahf
cmps
xor
add
test
adc
jo
xchg
push
ins
outs
lds
ret
inc
add
or
or
(bad)
mov
adc
sar
jl
cmp
in
add
and
movs
add
or
sbb
sub
xchg
adc
add
scas
sbb
jns
rcl
inc
ja
inc
xchg
push
adc
inc
sub
aad
pop
sbb
aas
pop
leave
add
je
pop
xlat
rcl
arpl
cmps
arpl
inc
fcom
mov
pop
stos
mov
jmp
sbb
pop
sub
sbb
push
mov
mov
pop
dec
pop
popf
call
outs
outs
bound
and
sbb
bound
aaa
add
add
jae
xchg
sbb
push
jmp
cs
ud2
ins
adc
sbb
push
xor
imul
pop
mov
inc
popa
adc
jmp
sub
jo
add
xor
bound
mov
dec
loope
xchg
dec
add
iret
ror
ret
pop
add
mov
push
push
pop
push
add
adc
sub
mov
add
nop/reserved
or
sahf
pop
(bad)
adc
sub
(bad)
add
inc
repnz
xchg
mov
mov
mov
fmul
add
or
out
in
pop
test
add
in
bound
pusha
imul
inc
sbb
or
or
cmp
inc
ds
clc
sub
inc
inc
shr
jbe
dec
ds
or
mov
js
xchg
lahf
cmp
cmp
push
xor
sbb
push
bnd
xor
sahf
inc
dec
iret
sti
pusha
lods
gs
out
dec
mov
outs
jae
inc
jae
dec
addr16
sahf
inc
push
or
or
out
lods
or
add
mov
lea
mov
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
jo
dec
add
pop
dec
