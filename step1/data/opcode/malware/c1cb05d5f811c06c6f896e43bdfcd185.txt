lea
push
imul
or
dec
pop
add
or
add
xchg
or
dec
cs
sbb
pop
jne
inc
or
or
or
dec
dec
cmp
or
(bad)
push
aas
(bad)
jbe
xchg
cmp
pop
sub
or
imul
imul
or
xchg
add
sub
push
rcr
inc
(bad)
ret
pop
dec
cs
inc
jno
inc
mov
cli
push
js
dec
daa
cs
pop
and
sar
movs
js
pop
dec
jae
inc
push
cmps
out
mov
pop
xchg
test
out
push
js
dec
(bad)
jae
xchg
or
test
std
ins
or
dec
(bad)
dec
or
inc
stos
mov
dec
sbb
dec
pinsrw
fstp
repz
push
rol
pop
into
shl
adc
xchg
pop
dec
mov
test
dec
pop
jbe
sbb
out
dec
movs
or
jnp
xchg
dec
lea
scas
ucomiss
scas
ucomiss
sbb
pop
pop
dec
xchg
jno
dec
pop
(bad)
sbb
scas
ucomiss
mov
ucomiss
pop
adc
push
loopne
mov
push
adc
aaa
xor
jge
xor
mov
xchg
pop
test
pop
sbb
movs
dec
adc
push
add
ret
loopne
sar
fbld
ds
loopne
(bad)
sahf
loope
ror
fmul
mov
pop
dec
inc
add
es
or
into
jmp
dec
jmp
or
dec
or
(bad)
pop
bound
mov
inc
daa
retf
push
xchg
or
dec
cs
into
(bad)
hlt
imul
sub
dec
pop
movs
sbb
pop
dec
lods
iret
pop
mov
sbb
xor
or
or
jo
xchg
mov
add
sbb
das
or
dec
(bad)
popa
sahf
dec
pop
daa
and
or
dec
cs
sub
pop
xchg
test
hlt
ja
sahf
dec
pop
and
jle
xchg
push
lods
out
push
js
xchg
sub
pop
(bad)
jno
ins
sahf
inc
or
sbb
add
pushf
mov
popa
pop
daa
arpl
std
ins
or
sahf
dec
pop
and
(bad)
arpl
hlt
sub
dec
pop
mov
das
scas
ucomiss
sub
dec
pop
les
pop
scas
ucomiss
inc
cmp
or
arpl
dec
movs
sbb
pop
dec
out
jnp
or
dec
in
or
retf
mov
add
or
ficomp
pop
push
js
mov
(bad)
(bad)
cld
clc
les
sbb
cs
pop
daa
sub
arpl
dec
mov
mov
jae
dec
cmps
enter
dec
pop
dec
lods
lock
sub
fbld
stos
jmp
bound
pop
shr
dec
movs
hlt
jae
dec
jge
jecxz
or
mov
mov
shr
dec
movs
cmp
pop
dec
lods
iret
adc
hlt
pop
dec
pop
push
lea
or
fstp
dec
cs
pop
adc
hlt
ins
sbb
ret
cmps
out
pushf
mov
fimul
inc
cmps
repz
mov
int3
xchg
or
pop
xchg
or
pop
jne
inc
xor
inc
cs
pop
daa
cs
pop
mov
pop
loopne
es
aaa
or
ins
or
mov
lds
cmp
hlt
push
sar
daa
cs
push
sar
movs
call
int
cmp
jecxz
aaa
or
mov
lds
pushf
xor
or
xchg
or
dec
cs
(bad)
(bad)
cld
clc
les
xchg
mov
retf
pop
adc
fcomp
cmps
out
dec
sbb
pop
repz
mov
adc
dec
cs
pop
mov
pop
loopne
es
aaa
or
dec
pop
retf
hlt
jle
jle
mov
pop
loopne
xor
mov
sbb
cmp
jecxz
aaa
or
movs
or
pop
dec
daa
std
imul
hlt
inc
pop
retf
pop
cmps
sub
pop
adc
fcomp
cmps
out
pushf
mov
movs
jle
mov
dec
and
sbb
dec
repz
mov
stc
ins
or
ror
hlt
and
rcl
cmps
dec
(bad)
mov
repnz
push
imul
or
mov
ss
or
or
(bad)
jnp
adc
sub
adc
cmp
pop
(bad)
fisttp
and
out
in
jle
mov
call
pop
push
xchg
or
loopne
int3
imul
dec
or
fisttp
and
out
jmp
not
out
pop
int
or
cmp
xor
and
cmps
mov
or
adc
(bad)
mov
cli
cmc
sub
push
dec
(bad)
xor
cs
dec
sbb
sbb
enter
mov
inc
lods
sub
hlt
jb
cs
dec
pop
mov
pop
(bad)
out
mov
mov
mov
dec
cs
je
jge
mov
or
jnp
cld
hlt
pop
cmps
repz
cmp
xchg
fldcw
or
mov
dec
es
push
loope
enter
mov
leave
ss
cmps
sahf
jecxz
shl
xchg
xchg
pop
sti
fxch
sub
pop
mov
or
mov
push
inc
test
pop
xchg
test
out
push
js
xchg
adc
int3
pop
mov
push
push
sbb
dec
jecxz
imul
or
cld
jp
cmps
dec
out
les
cs
push
or
(bad)
push
add
sbb
retf
out
icebp
sbb
fild
in
mov
sub
pop
sub
pop
aad
fwait
movs
dec
pop
mov
adc
(bad)
imul
or
sbb
outs
repz
xchg
or
push
inc
push
out
dec
(bad)
retf
mov
pop
jge
dec
(bad)
jae
fmul
shr
pop
lods
sub
pop
mov
leave
ss
cmps
pop
jecxz
fsub
cmp
movs
jbe
idiv
inc
jge
jg
fidivr
out
repnz
iret
adc
leave
pushf
(bad)
dec
or
push
hlt
sbb
call
dec
or
cmps
dec
jmp
dec
repz
or
sbb
push
inc
test
pop
xchg
test
out
push
js
xchg
cmp
add
dec
jecxz
data16
(bad)
imul
(bad)
das
leave
xchg
sbb
hlt
sbb
call
(bad)
imul
repz
xchg
mov
stc
xchg
add
add
pop
aas
xor
cmp
cmp
or
icebp
ja
(bad)
imul
or
sbb
outs
out
imul
or
cmp
adc
(bad)
mov
cli
sbb
pop
xchg
cmp
mov
xor
sahf
mov
pop
dec
ror
imul
or
cmp
arpl
ins
or
ins
mul
mov
dec
jecxz
push
pop
pop
sbb
cld
ucomiss
jge
hlt
loopne
movs
jbe
or
mul
das
inc
adc
enter
pop
dec
sbb
inc
inc
xchg
dec
inc
fstp
out
(bad)
sbb
pop
add
push
pop
or
(bad)
call
arpl
push
or
jle
daa
cs
pop
movs
aam
pop
dec
call
sti
hlt
inc
xchg
jge
dec
cs
clc
les
xchg
mov
inc
test
pop
xchg
test
pop
dec
sbb
pop
sbb
repz
int3
pushf
jo
test
dec
cs
in
mov
pop
dec
jle
pop
mov
add
movs
adc
push
sbb
sbb
xchg
mov
in
xchg
or
sbb
sar
jno
inc
test
pop
xchg
test
out
push
js
xchg
cmp
mov
push
js
xchg
mov
repz
mov
nop
cs
cmp
or
pop
int
pop
movs
mov
pop
dec
cmps
enter
sub
dec
pop
retf
push
xchg
and
push
lea
dec
and
inc
pcmpeqw
dec
out
sbb
cs
out
add
inc
mov
xchg
or
add
cmp
sub
out
cmovg
movs
or
loopne
cmp
pop
dec
cs
(bad)
cld
clc
les
xchg
mov
retf
push
xchg
and
push
lea
lea
adc
mov
mov
push
sahf
mov
pop
retf
inc
adc
fcomp
cmps
out
cmps
jge
or
movs
call
pop
dec
test
xor
or
dec
shl
pop
dec
pop
or
push
cs
addr16
ins
or
or
add
test
or
(bad)
imul
xor
addr16
pop
dec
fld1
xchg
enter
mov
enter
test
dec
cs
in
mov
pop
dec
jle
das
mov
add
dec
lods
cs
or
int3
lds
dec
cs
mov
or
mov
hlt
push
(bad)
stos
ins
dec
cs
push
and
mov
hlt
dec
movs
or
loopne
lods
iret
adc
hlt
pop
dec
pop
pop
pushf
push
cs
dec
or
mov
shl
loopne
in
xchg
jle
pop
inc
movs
dec
sbb
xor
jmp
and
pushf
xor
or
enter
dec
lods
outs
out
scas
ss
ins
or
mov
or
cmps
rcr
xchg
cmps
enter
mov
jmp
sub
ucomiss
into
or
ucomiss
mov
les
sahf
cmps
or
dec
inc
or
dec
pop
or
adc
shl
xchg
cmps
enter
jmp
dec
movs
dec
out
imul
xor
sti
dec
rcr
mov
sub
pop
dec
(bad)
pusha
dec
jns
and
ror
pop
inc
out
jle
and
inc
retf
cld
ucomiss
daa
mov
ss
dec
or
cmp
add
int
call
xchg
sbb
cs
xchg
jne
pushf
mov
or
cmp
int3
sbb
call
(bad)
imul
enter
mov
cmp
xchg
mov
or
cmp
or
push
hlt
dec
inc
ror
(bad)
imul
or
add
shl
loopne
or
xchg
xchg
pop
rcl
test
pop
xchg
test
out
push
js
mov
(bad)
(bad)
or
(bad)
jmp
and
(bad)
sbb
dec
neg
(bad)
imul
jno
movups
mov
shr
jmp
or
(bad)
fisttp
pop
cmps
push
sub
test
ds
(bad)
imul
or
add
js
setl
ror
xchg
or
xchg
das
pop
ja
mov
movs
add
dec
lods
iret
pop
int3
rcr
in
mov
dec
(bad)
xchg
call
cmp
jp
cs
(bad)
sbb
push
neg
cmp
dec
in
ins
or
data16
scas
add
pop
into
dec
neg
jl
loopne
(bad)
(bad)
cmp
(bad)
jmp
xor
cmp
or
dec
push
aaa
xor
aaa
das
xor
mov
cs
aas
push
or
or
cmp
inc
stos
cmp
jp
mov
cs
mov
add
mov
pop
movs
enter
lds
mov
repz
mov
dec
inc
pcmpeqw
or
or
cs
pop
dec
(bad)
outs
dec
sbb
or
inc
or
fs
dec
movs
dec
pop
(bad)
out
mov
mov
mov
dec
cs
(bad)
in
popa
pop
shl
pop
sar
mov
repz
pop
or
daa
xchg
jle
sbb
dec
sar
movs
push
jnp
dec
scas
in
jb
or
cmp
jecxz
and
or
jne
fcomp
cmps
out
cmps
loope
or
movs
adc
dec
jge
dec
idiv
es
imul
hlt
loope
cs
scas
ins
or
mov
les
xchg
sbb
rcl
lea
(bad)
icebp
inc
or
mov
sbb
movs
mov
mov
mov
hlt
sahf
cmps
xor
call
or
fild
ss
or
cmp
mov
sub
or
shr
mov
sbb
data16
retf
push
mov
hlt
dec
and
movs
mov
mov
hlt
dec
(bad)
push
hlt
or
or
dec
cmps
dec
jecxz
in
pop
pop
dec
cs
inc
stos
push
pop
dec
xchg
sbb
cs
xchg
jne
pop
les
xchg
xchg
pop
rcl
dec
and
ja
mov
mov
retf
loopne
shl
cmp
es
cmps
mov
mov
hlt
xchg
enter
mov
pop
mov
add
or
shr
mov
sbb
push
sbb
retf
adc
dec
dec
dec
mov
dec
and
lahf
lock
loope
cs
clc
sub
pop
daa
das
arpl
ins
or
mov
jecxz
mov
and
lods
mov
hlt
xchg
xchg
fld1
xchg
enter
mov
enter
mov
loopne
or
leave
adc
pop
dec
and
or
shl
loopne
inc
pop
mov
cmp
or
pushf
hlt
loope
call
dec
pop
dec
lods
scas
stos
mov
hlt
pop
into
adc
ucomiss
adc
call
lods
inc
dec
cs
cld
les
sbb
das
arpl
scas
ins
or
mov
movs
popa
std
loopne
lods
iret
adc
hlt
pop
dec
pop
sub
dec
inc
(bad)
xchg
sbb
cmp
mov
mov
inc
adc
loopne
cs
mov
or
dec
cs
push
and
inc
pop
mov
mov
and
loopne
or
inc
or
int3
dec
pop
rcl
idiv
jmp
cmp
call
or
daa
das
arpl
sbb
in
loopne
lods
iret
adc
hlt
pop
dec
pop
sub
dec
inc
mov
ucomiss
loopne
(bad)
movs
jmp
hlt
loopne
cs
mov
or
dec
cs
mov
das
arpl
mov
movs
lods
(bad)
loopne
lods
iret
adc
hlt
pop
dec
pop
sub
dec
inc
mov
ucomiss
loopne
(bad)
ins
jmp
hlt
loopne
cs
mov
or
dec
cs
push
and
inc
pop
mov
mov
and
loopne
or
jmp
hlt
push
dec
or
inc
mov
ucomiss
in
outs
or
push
fcomi
loopne
jmp
cmp
call
or
daa
das
arpl
ins
or
mov
movs
fcos
loopne
lods
iret
adc
hlt
pop
dec
pop
dec
jne
inc
mov
ucomiss
loopne
(bad)
shr
mov
mov
inc
adc
loopne
cs
daa
das
arpl
ins
or
mov
jecxz
mov
and
loopne
or
jmp
hlt
push
dec
or
dec
lods
mov
mov
hlt
pop
cmp
int
cmp
mov
hlt
dec
movs
out
loopne
ja
push
mov
jnp
ucomiss
mov
out
dec
mov
push
xchg
cmps
enter
hlt
loope
cs
dec
or
mov
hlt
dec
(bad)
stos
xlat
loopne
rcr
jne
pop
inc
les
push
lea
mov
dec
or
mov
sbb
movs
xor
sbb
sbb
shl
xchg
cmps
enter
or
enter
dec
lods
scas
retf
mov
hlt
pop
(bad)
idiv
mov
shl
loopne
lods
mov
mov
hlt
push
inc
mov
mov
(bad)
jg
pop
sub
mov
dec
jmp
hlt
push
dec
or
mov
xchg
sbb
shl
dec
(bad)
push
hlt
dec
push
scas
enter
or
mov
arpl
enter
mov
and
cmp
pop
dec
or
inc
stos
pop
sbb
xchg
sbb
shl
dec
(bad)
push
hlt
mov
imul
xchg
pop
rcl
dec
and
xchg
enter
mov
sbb
movs
xor
sbb
sbb
retf
imul
sbb
xchg
sbb
shl
dec
(bad)
push
hlt
dec
jne
dec
jecxz
mul
mov
cs
test
or
(bad)
idiv
cld
les
sbb
stos
out
loopne
rcr
enter
mov
and
jns
xchg
or
add
inc
stos
jge
dec
cs
sub
or
scas
cmps
mov
mov
hlt
pop
mov
repz
shl
in
outs
or
mov
jecxz
and
or
shl
loopne
(bad)
sbb
or
dec
cmps
shr
xchg
cmps
enter
hlt
loope
mov
hlt
dec
and
mov
hlt
dec
movs
push
popw
dec
lods
iret
or
jmp
hlt
sbb
mov
hlt
xchg
enter
mov
mov
rcr
repz
cmps
in
cmps
dec
or
mov
shl
loopne
ret
stos
xchg
nop
clc
mov
mov
pop
xchg
jb
pop
xor
imul
mov
pop
pop
dec
daa
retf
adc
scas
or
dec
lods
scas
mov
shl
pop
shr
ja
int
pop
(bad)
stos
stos
loopne
rcr
jne
pop
and
or
les
sahf
cmps
and
retf
adc
outs
or
dec
mov
hlt
dec
(bad)
stos
mov
xchg
jne
pop
jae
imul
push
push
or
mov
shl
loopne
in
mov
cs
dec
sub
pop
into
mov
mul
cs
and
or
idiv
cld
les
sbb
jmp
hlt
sbb
mov
hlt
xchg
enter
mov
mov
rcr
repz
cmps
in
cmps
dec
or
mov
shl
loopne
ret
stos
xchg
nop
clc
mov
mov
pop
xchg
jb
pop
imul
neg
dec
daa
retf
adc
pop
or
dec
lods
scas
xchg
mov
hlt
pop
shr
ja
int
pop
(bad)
stos
(bad)
loopne
rcr
jne
pop
and
or
les
push
lea
mov
dec
or
cs
pop
das
or
shr
jne
sar
xchg
enter
mov
and
jns
xchg
or
mov
cmp
or
scas
cmps
mov
shl
xchg
mov
mov
dec
or
xchg
imul
rol
adc
jecxz
pop
dec
lods
mov
mov
hlt
pop
inc
stos
retf
pop
dec
xchg
sbb
shl
not
(bad)
loopne
jmp
sbb
mul
int3
(bad)
cmp
mov
dec
and
fmul
fdivp
loope
das
or
dec
inc
pavgb
xor
mov
mov
mov
hlt
dec
and
mov
hlt
dec
movs
jl
pop
dec
lods
iret
or
mul
mov
shl
loopne
out
pop
int
or
cmp
sbb
fwait
pop
loopne
rol
loopne
movs
mov
mov
hlt
xchg
leave
sub
loopne
rcr
xchg
into
jmp
mov
hlt
dec
and
mov
hlt
dec
movs
fsub
dec
lods
iret
pinsrw
mov
shl
loopne
pop
or
jle
das
mov
add
mov
shl
loopne
in
hlt
call
scas
loopne
shl
call
or
call
cmp
sbb
sbb
movs
cmp
sbb
hlt
call
out
loopne
shl
call
xlat
jecxz
ror
loopne
pop
or
enter
mov
add
test
mov
pop
xchg
jge
pop
pop
into
xchg
fneni(8087
mov
or
movs
mov
mov
hlt
dec
(bad)
push
hlt
dec
inc
xchg
add
dec
cs
cld
les
sbb
xchg
fnstsw
mov
or
movs
mov
mov
hlt
dec
(bad)
push
hlt
dec
inc
movs
mov
mov
hlt
dec
(bad)
push
hlt
dec
inc
movs
mov
mov
hlt
dec
(bad)
push
hlt
dec
inc
xchg
pop
add
cld
cld
les
sbb
stos
jmp
mov
pop
xchg
jge
pop
pop
movs
ss
loopne
jno
inc
test
pop
xchg
test
hlt
ja
call
dec
dec
stos
pop
dec
or
cmps
cs
dec
or
cmps
outs
test
retf
mov
movs
jbe
les
fmul
ror
pop
dec
mov
imul
sbb
and
or
shl
pushf
jo
mov
shl
or
sub
sbb
jbe
les
fmul
shl
loopne
shl
cmp
or
(bad)
int3
pop
xchg
adc
mov
scas
data16
shl
pop
cmps
mov
pop
mov
hlt
loopne
jno
inc
fsub
or
dec
cs
retf
pop
dec
sbb
and
(bad)
sbb
scas
mov
jne
inc
and
or
cs
sub
or
sub
or
mov
cmps
int3
inc
adc
enter
mov
push
jge
xchg
adc
mov
xor
pop
xchg
test
ret
xchg
mov
push
imul
or
(bad)
pop
cmc
cmps
adc
dec
fldl2e
xchg
or
sbb
or
or
pushf
push
mov
inc
mov
push
repz
sbb
or
dec
jmp
or
dec
or
out
outs
xchg
pop
dec
and
pop
inc
out
add
retf
pop
jo
or
dec
and
imul
dec
pop
or
cs
sbb
call
ins
and
sbb
sub
or
push
dec
or
dec
outs
std
sbb
mov
dec
cs
dec
outs
xchg
pop
dec
das
jg
in
ret
dec
das
push
daa
shr
hlt
dec
ror
daa
shr
sahf
movs
cmp
sbb
jne
dec
pop
movs
sub
pop
dec
ror
imul
or
dec
ss
pop
dec
ds
jl
loop
dec
or
mov
cmps
retf
ss
pop
dec
ds
pop
aam
or
movs
add
loopne
fmul
pop
shr
sbb
sub
fbld
retf
or
dec
sub
adc
ss
pop
dec
es
jl
loop
dec
or
dec
es
out
fsubrp
outs
xchg
pop
dec
mov
or
loop
mov
hlt
jmp
dec
das
jg
jl
loop
dec
or
dec
das
mov
outs
xor
pop
mov
out
or
or
dec
cs
mov
hlt
jmp
dec
sub
sbb
test
or
mov
or
or
or
dec
cs
mov
hlt
loopne
pop
mov
daa
shr
xchg
test
ret
xchg
mov
or
and
pop
dec
(bad)
out
or
or
jne
dec
pop
(bad)
out
xlat
(bad)
out
mov
push
mov
pop
or
cs
repz
pushf
lea
sbb
dec
pop
movs
hlt
or
dec
(bad)
dec
xchg
or
inc
mov
or
dec
(bad)
out
or
or
jne
dec
pop
movs
xchg
or
dec
ror
imul
or
sub
mov
or
mov
cmps
retf
push
xchg
pop
dec
sub
or
(bad)
(bad)
aam
dec
mov
push
mov
pop
ins
xchg
imul
jecxz
mov
test
adc
sub
ucomiss
fbstp
jp
out
push
or
imul
or
adc
pop
dec
cs
mov
mov
sti
ins
or
dec
outs
loopne
mov
jg
ucomiss
xor
ret
dec
das
push
daa
shr
hlt
outs
ror
daa
shr
sahf
mov
pop
dec
scas
push
pop
shr
pop
cmps
and
fbld
ret
test
mov
pop
shr
pop
inc
stos
int3
pop
dec
cs
movs
or
(bad)
out
inc
imul
mov
mov
pop
push
cmps
dec
call
in
ins
or
and
pop
dec
cs
les
or
int
cld
pop
cmp
hlt
sbb
dec
pop
cmc
and
fldl2e
xchg
or
sbb
cwde
dec
call
dec
pop
add
dec
sub
(bad)
or
mov
pop
dec
pop
push
lahf
xor
or
scas
jbe
dec
pop
dec
pushf
dec
es
pop
dec
sub
and
push
std
sbb
or
pop
int
ret
push
test
sbb
dec
and
pop
into
into
or
or
mov
sub
int
cld
pop
cmp
mov
inc
mov
cs
outs
or
cmps
ss
movs
push
adc
outs
or
jne
dec
pop
mov
pop
(bad)
or
outs
or
dec
and
sahf
mov
lods
cs
outs
or
cmps
ss
movs
push
adc
outs
or
in
dec
pop
mov
pop
(bad)
or
outs
or
dec
and
loopne
pop
mov
ss
lea
(bad)
or
lds
pop
dec
jo
(bad)
mov
cli
sbb
pop
dec
repz
xchg
push
dec
cs
stc
les
xchg
mov
push
imul
or
xchg
dec
pop
movs
pusha
imul
cmps
int3
ja
xchg
dec
pop
sbb
push
jg
cs
in
ins
or
xchg
dec
pop
sbb
inc
jg
cs
shr
cmps
jae
or
mov
cmps
int
jo
dec
pop
sbb
es
cs
shr
ja
xchg
dec
pop
sbb
push
jg
cs
shr
ja
xchg
dec
pop
sbb
push
jg
cs
in
ins
or
out
dec
(bad)
retf
mov
and
bound
dec
cmps
rcr
xchg
cmps
enter
mov
movs
ucomiss
or
mov
mov
pop
dec
or
mov
dec
mov
imul
or
dec
pop
dec
mov
cs
sub
or
into
dec
neg
mov
jg
ucomiss
lds
cs
scas
cmps
dec
xchg
in
mov
cs
pop
xchg
das
or
dec
jmp
or
shr
movs
ucomiss
imul
or
or
mov
int
or
mov
push
dec
or
xchg
xchg
xchg
push
pop
dec
cs
mov
and
mov
push
jmp
outs
or
dec
mov
or
dec
inc
or
inc
or
lahf
das
or
cmp
popa
push
movs
test
pop
dec
ror
imul
or
sar
daa
cs
pop
daa
sub
mov
out
not
dec
or
int3
(bad)
dec
cs
push
(bad)
rol
cs
sbb
call
mov
mov
loopne
ficom
sti
cmps
sub
pop
adc
(bad)
mov
cli
into
ret
or
js
jp
sbb
leave
ss
cmps
pop
jecxz
imul
or
adc
inc
out
dec
call
jl
or
dec
mul
sub
daa
das
xchg
jle
pop
movs
jle
push
inc
or
mov
jle
mov
cmp
mov
or
mov
retf
mov
enter
pop
mov
int3
fnstenv
sbb
call
mov
push
psrld
inc
adc
pop
xchg
test
out
push
js
xchg
cmp
add
push
imul
or
mov
mov
pop
dec
cs
inc
cwde
dec
sub
pop
dec
cs
inc
cwde
dec
sub
hlt
pop
dec
cs
inc
cwde
dec
sub
hlt
pop
dec
cs
inc
cwde
dec
sub
hlt
pop
dec
cs
inc
sub
pop
(bad)
imul
or
or
call
mov
sbb
mov
dec
and
adc
mov
icebp
push
inc
cwde
pop
or
call
mov
dec
and
push
cmps
icebp
pushf
cmps
sub
xor
cmp
out
(bad)
movups
sub
pop
cmp
test
inc
mov
dec
pop
sbb
cs
sbb
pusha
int
mov
dec
pop
pop
jle
dec
adc
or
mov
pop
xadd
sbb
cmc
dec
pop
fistp
(bad)
mov
dec
cmps
dec
jmp
imul
or
jecxz
(bad)
jnp
xchg
pop
sub
pop
dec
cs
inc
cwde
dec
loopne
out
pop
lahf
jno
fldenv
inc
scas
dec
loopne
(bad)
cmp
mov
hlt
sbb
call
cmp
out
scas
aaa
sbb
inc
xchg
mov
jecxz
int
or
out
(bad)
or
js
repz
movs
sub
dec
sub
ja
cmp
mov
inc
cmps
repz
movs
sub
or
test
pop
mov
loope
into
out
or
dec
cmp
pop
dec
mov
jae
jle
(bad)
(bad)
inc
lahf
jno
or
cmps
repz
movs
sub
and
jle
(bad)
(bad)
mov
dec
scas
aaa
sbb
dec
xchg
mov
jecxz
inc
cwde
nop
or
dec
pop
or
movs
or
cmp
mov
mov
pop
xadd
sbb
cmc
dec
pop
fistp
xchg
lods
jecxz
les
xchg
or
xchg
sub
out
(bad)
sete
(bad)
or
das
or
dec
scas
aaa
and
xchg
mov
mov
dec
das
jle
(bad)
(bad)
mov
dec
scas
aaa
sbb
xchg
mov
jecxz
int
or
out
(bad)
movups
sub
and
sub
loopne
or
(bad)
stos
inc
dec
or
pop
or
das
icebp
pushf
cmps
sub
pop
dec
imul
loop
rcl
out
dec
(bad)
retf
mov
inc
jge
dec
mov
jg
ucomiss
cs
or
jno
or
imul
loopne
sub
dec
xchg
or
test
shl
movs
or
into
call
mov
dec
pop
out
jmp
aas
fsubr
cs
cmps
repz
xchg
jle
fwait
mov
sub
ucomiss
dec
xor
test
loop
dec
cs
into
dec
neg
cmps
and
xchg
pop
sub
jecxz
sub
jecxz
(bad)
loopne
(bad)
sub
dec
xor
pop
les
xchg
mov
cmps
icebp
push
xchg
das
fist
push
das
or
sbb
sub
sbb
movs
mov
mov
stc
push
xchg
pop
fist
popf
lods
jecxz
les
(bad)
loop
or
or
sub
ucomiss
xchg
sbb
push
push
popf
lods
jecxz
les
(bad)
sbb
das
or
dec
jge
adc
jnp
fisubr
jbe
pop
dec
(bad)
jg
mov
mov
inc
jno
inc
test
pop
xchg
test
push
cmp
jecxz
adc
or
jecxz
mov
hlt
fxch
int
loopne
cs
pop
or
dec
or
scas
icebp
hlt
loopne
call
hlt
pop
into
sub
ucomiss
lock
loopne
cs
inc
cwde
mov
mov
sub
ucomiss
imul
cld
xchg
shl
pop
cmp
in
mov
aaa
sbb
pop
or
adc
mov
loopne
mov
pusha
aad
mov
dec
pop
sbb
stos
inc
dec
or
sub
adc
mov
pusha
aad
mov
dec
pop
sbb
jmp
shl
xchg
pop
dec
(bad)
(bad)
inc
dec
or
sub
aas
fsubr
lahf
enter
mov
add
enter
mov
retf
add
adc
shl
or
inc
stos
inc
loopne
ror
call
mov
loopne
int3
or
or
leave
mov
pop
dec
and
loopne
int3
or
or
sub
ucomiss
loopne
and
not
xlat
hlt
loopne
stos
rol
mov
hlt
sbb
call
mov
or
lds
(bad)
dec
or
cmps
mov
mov
lds
ja
or
push
(bad)
scas
inc
dec
cs
fmul
fisubr
(bad)
in
mov
mov
dec
or
jbe
push
mov
jge
shr
neg
ja
pop
mov
jg
ucomiss
loopne
mov
loopne
ret
mov
mov
not
hlt
loopne
jmp
cmp
int
hlt
loopne
movs
xchg
lahf
xchg
shl
hlt
nop
xchg
xchg
out
loope
mov
or
rol
sbb
mov
mov
imul
loopne
sub
add
sbb
dec
cmps
mov
add
or
dec
pop
mov
pop
mov
hlt
inc
int3
stos
out
mov
or
dec
sbb
shl
pop
dec
pop
mov
mov
jae
loopne
ror
imul
or
clc
not
loopne
(bad)
cmp
cs
dec
or
sti
mov
retf
movs
pop
or
dec
pop
les
mov
dec
movs
sahf
jmp
shl
fisubr
(bad)
or
lods
sub
push
mov
pop
push
les
hlt
xchg
fcomp
in
mov
jmp
test
sbb
xchg
push
mov
mov
dec
sub
pop
aas
cdq
hlt
sbb
call
mov
or
inc
push
mov
sbb
or
mov
leave
sbb
sub
pop
dec
or
in
jae
dec
cmps
mov
enter
mov
sahf
xchg
xor
sbb
mov
sbb
mov
or
mov
sbb
stos
ffreep
mov
sbb
xor
loopne
sar
not
jbe
pop
(bad)
stos
ffreep
mov
xor
cmp
call
mov
call
call
push
inc
or
dec
push
popa
pop
(bad)
mov
retf
jl
mov
icebp
hlt
loopne
les
dec
and
rcr
hlt
(bad)
ror
imul
or
sti
mov
retf
movs
xchg
xchg
shl
xor
cli
aam
mov
pop
or
dec
pop
inc
cwde
sahf
in
mov
sub
or
call
shl
ja
or
pop
(bad)
ds
dec
sbb
out
add
sub
push
add
inc
stos
xor
dec
sbb
cwde
or
movs
or
cmp
mov
das
add
jno
or
movs
xor
mov
mov
sub
pop
dec
cs
mov
dec
sbb
xchg
shl
fxch
(bad)
aad
mov
mov
dec
movs
mov
xchg
mov
pop
and
int
or
cmps
sti
pushf
movs
sub
pop
xchg
mov
push
or
cmps
sti
pushf
movs
sub
push
cmps
jecxz
sbb
call
xchg
shl
fisubr
mov
loopne
scas
mov
cwde
or
pop
cmp
sbb
das
or
dec
lods
jecxz
shr
les
loopne
(bad)
fchs
adc
stos
push
mov
or
fiadd
and
retf
mov
loop
loopne
aad
mov
add
fmul
jmp
mov
dec
mov
jo
or
dec
cs
int
ss
cmp
mov
jo
or
dec
cs
int
sbb
or
cmp
and
or
dec
cs
or
ret
adc
stos
test
mov
add
xor
jg
inc
cwde
mov
mov
fwait
xlat
shl
hlt
loopne
pop
repnz
lods
iret
adc
xchg
call
imul
scas
jmp
shl
pop
(bad)
mov
retf
cmps
rcr
movs
sub
dec
inc
jecxz
stos
push
not
aas
hlt
call
push
mov
or
dec
cs
mov
jg
ucomiss
xor
fucom
loopne
das
add
enter
mov
retf
add
adc
shl
or
inc
stos
and
mov
push
inc
push
out
dec
(bad)
retf
mov
or
jae
fmul
(bad)
fwait
push
add
mov
jle
or
sub
sbb
dec
out
imul
rcl
js
mov
dec
xchg
sbb
dec
cs
mov
pop
leave
xchg
sbb
xchg
mov
or
mov
mov
or
mov
pop
add
(bad)
imul
pop
leave
xchg
sbb
mov
das
int
mov
loopne
(bad)
sub
xor
leave
jle
int
hlt
sbb
das
mov
aas
jns
int3
inc
repz
or
or
jmp
sub
xor
test
or
int
hlt
push
inc
cwde
dec
push
jo
or
dec
push
cmps
or
pop
mov
out
pop
mov
mov
pop
dec
cs
or
ror
adc
ins
or
into
aam
imul
sbb
daa
mov
or
ror
adc
ins
or
push
das
retf
push
lods
jmp
into
(bad)
push
push
scas
dec
loopne
and
pop
dec
cs
dec
or
scas
dec
loopne
scas
dec
out
adc
pop
inc
cwde
or
mov
and
pop
dec
push
jle
int
hlt
sbb
imul
int
not
inc
lods
pop
loopne
ror
pop
mov
loopne
(bad)
sub
xor
(bad)
jle
int
hlt
push
cmps
and
pop
mov
mov
sub
(bad)
imul
or
sbb
outs
xlat
les
xchg
or
add
dec
adc
sbb
imul
inc
cwde
dec
loopne
jo
(bad)
mov
cli
sbb
pop
dec
(bad)
pop
add
cmc
jne
pop
dec
fldlg2
xchg
or
sbb
ror
pop
dec
js
pop
movs
les
dec
cmps
cli
pushf
test
dec
lahf
jno
or
cmps
int3
hlt
inc
scas
aaa
and
pop
or
or
or
cmps
sub
das
je
adc
(bad)
mov
cli
cmc
sub
dec
mov
dec
cs
dec
repnz
dec
cs
clc
les
sbb
pop
pop
dec
mov
add
mov
jecxz
sbb
or
mov
icebp
hlt
loopne
jmp
hlt
loopne
mov
cs
pop
pop
std
xchg
mov
repz
mov
(bad)
mov
cli
sbb
mov
popa
imul
sub
leave
sbb
int3
jne
inc
or
cmp
popa
pop
movs
pop
pop
pop
dec
jno
fcomp
cmps
out
pushf
mov
xchg
lahf
pop
mov
mov
dec
or
daa
arpl
dec
inc
or
inc
or
dec
scas
hlt
push
(bad)
cli
dec
dec
cs
shl
push
lods
jbe
dec
pop
or
aas
dec
scas
cld
jg
or
(bad)
lds
dec
js
ret
sbb
or
sbb
jl
pop
les
cmps
jo
or
mov
cmps
int3
jne
lods
jbe
dec
pop
add
lds
pop
mov
sar
sbb
xchg
dec
dec
cs
div
jg
pop
(bad)
(bad)
cmp
(bad)
jmp
push
inc
test
pop
xchg
test
pop
dec
sbb
jnp
in
sahf
mov
inc
or
or
daa
sub
daa
arpl
dec
cs
loopne
es
pop
or
cmp
cmp
cmps
dec
mov
ret
push
pop
daa
sub
pop
daa
cs
neg
jl
pop
(bad)
imul
mov
aaa
push
dec
pop
repnz
mov
sbb
pop
dec
mov
pop
dec
movs
mov
pop
dec
inc
or
dec
inc
sti
std
ucomiss
(bad)
jl
pop
sbb
and
cs
jae
or
stos
cmps
dec
out
imul
mov
push
inc
push
out
dec
(bad)
retf
pop
dec
sbb
xchg
es
sahf
mov
inc
or
or
daa
sub
daa
arpl
dec
cs
loopne
es
sbb
or
mov
int3
pushf
mov
jle
jl
loopne
daa
sub
pop
daa
cs
idiv
jg
pop
daa
xchg
jle
push
sar
sbb
sbb
cs
mul
jle
pop
cmc
adc
dec
fldlg2
xchg
or
sbb
out
dec
inc
adc
enter
mov
pop
jge
dec
(bad)
pop
add
or
shl
mov
into
add
xchg
xchg
lds
sti
sub
bound
dec
pop
ja
int3
dec
pop
movs
push
dec
jecxz
in
cmp
les
ja
int3
dec
pop
movs
sbb
pop
dec
lods
iret
(bad)
cmc
loopne
inc
cwde
lidtd
cs
sbb
or
and
jl
loopne
int
xor
sbb
dec
and
and
sbb
std
ucomiss
jmp
or
cmps
dec
out
imul
sub
sbb
dec
jecxz
jo
(bad)
mov
cli
into
ret
sbb
inc
inc
movs
jle
mov
add
push
jle
or
sbb
dec
jmp
dec
repz
or
sbb
xor
ucomiss
mov
or
shl
or
cwde
(bad)
sbb
cs
push
or
pop
loop
imul
pop
movs
lods
pop
pop
dec
ja
jb
cmp
pop
dec
jno
inc
test
pop
xchg
test
out
push
js
movs
inc
and
pop
dec
fld1
xchg
or
sbb
jmp
mov
mov
mov
xchg
mov
or
mov
xor
sbb
cmp
ins
fmul
int3
adc
(bad)
imul
cli
outs
or
(bad)
idiv
cld
les
xchg
mov
mov
pop
dec
fisttp
repz
hlt
sbb
mov
das
mov
cs
cmc
push
xor
dec
fld1
xchg
or
sbb
imul
cli
outs
or
inc
cwde
dec
loope
cwde
dec
sbb
jecxz
xor
or
lods
test
xchg
cmps
enter
or
call
cld
les
xchg
mov
or
pop
(bad)
inc
or
dec
and
dec
imul
add
adc
imul
cli
arpl
call
dec
imul
mov
popw
dec
movs
dec
adc
dec
sbb
jnp
adc
jl
ss
and
dec
imul
or
add
or
and
or
sbb
push
inc
test
imul
sbb
mov
or
addr16
fwait
(bad)
cmp
fwait
(bad)
fnstsw
fwait
(bad)
or
mov
fwait
(bad)
or
mov
fwait
(bad)
je
fwait
(bad)
fnstsw
fwait
(bad)
cmc
cs
iret
scas
ins
or
jle
mov
fnstsw
fwait
(bad)
fnstsw
fwait
(bad)
into
out
jg
fnstsw
fwait
(bad)
fnstsw
fwait
(bad)
push
mov
enter
fwait
(bad)
fisttp
pop
dec
or
mov
mov
xor
movs
adc
add
movs
pop
pop
fnstsw
fwait
(bad)
(bad)
fwait
xchg
out
fnstsw
fwait
(bad)
(bad)
fwait
push
mov
fwait
(bad)
fnstsw
sbb
mov
sbb
inc
test
arpl
stos
addr16
pop
dec
sbb
jle
imul
sbb
mov
fwait
(bad)
adc
mov
dec
mov
fwait
(bad)
fnstsw
or
fnstsw
fwait
(bad)
jl
fwait
(bad)
fnstsw
fwait
pop
out
(bad)
fnstsw
fwait
(bad)
fdivr
push
(bad)
fnstsw
pop
stos
addr16
fwait
(bad)
dec
(bad)
fwait
(bad)
fnstsw
fwait
(bad)
cmc
cs
out
mov
fwait
(bad)
fnstsw
or
fnstsw
fwait
(bad)
jl
fwait
(bad)
fnstsw
fwait
pop
out
(bad)
fnstsw
fwait
(bad)
fdivr
push
(bad)
fnstsw
dec
sub
cmp
fnstsw
fwait
(bad)
fnstsw
fwait
(bad)
sub
fwait
(bad)
fnstsw
mul
mov
pop
xchg
test
out
push
js
xchg
adc
sbb
sbb
dec
jecxz
dec
mov
inc
test
mov
imul
or
cld
jp
cmps
dec
sti
les
jns
imul
dec
(bad)
jmp
ficomp
add
hlt
loopne
cmps
leave
xchg
sbb
sbb
leave
push
(bad)
cmps
pop
jecxz
push
lock
cmp
int
mov
loopne
movs
fadd
cmps
dec
push
shl
xchg
or
dec
cs
sbb
and
call
xchg
or
xchg
call
sbb
sbb
pop
adc
cmps
rcr
mov
and
xchg
pop
and
pop
dec
cs
(bad)
test
or
cwde
inc
in
in
pmaddwd
outs
jecxz
imul
or
popa
pop
and
mov
pop
push
dec
cs
or
pop
xchg
xchg
das
sti
dec
shr
sti
jnp
push
popf
jle
das
add
or
mov
rcr
mov
or
cmps
leave
cs
cmps
pop
jecxz
call
sti
adc
imul
je
add
pop
shl
loopne
jo
(bad)
mov
cli
into
ret
sbb
call
mov
repnz
and
xchg
push
pop
dec
out
pop
xchg
mov
loope
xchg
icebp
adc
fild
in
or
sti
call
(bad)
call
dec
pop
dec
pop
or
(bad)
mov
lods
jle
push
(bad)
jne
mov
mov
inc
cmps
enter
(bad)
xor
or
sti
push
in
stos
sub
or
mov
dec
add
dec
pop
(bad)
stc
inc
xchg
xor
pop
adc
push
in
stos
sub
sub
mov
dec
cmps
aam
jo
mov
dec
jns
inc
add
or
mov
cmps
int
inc
inc
or
lock
or
(bad)
pop
test
jmp
les
hlt
pop
cmps
rcr
rol
pop
jl
sub
fiadd
sbb
out
pop
dec
sub
or
or
jns
in
cli
mov
dec
cmps
dec
out
cmp
fld
test
mov
push
ret
lock
or
pop
lods
dec
out
(bad)
fbld
xchg
xchg
dec
pop
je
rep
xchg
(bad)
not
sbb
(bad)
push
dec
and
mov
test
out
jmp
and
hlt
inc
pop
dec
cmps
dec
shl
movs
jbe
inc
cdq
hlt
xchg
(bad)
and
call
sahf
mov
inc
dec
ja
xchg
dec
pop
(bad)
test
lea
jp
dec
cs
inc
pop
mov
mov
fldln2
xchg
or
sbb
test
mov
ins
or
pop
lods
dec
jmp
pop
mov
adc
fbld
mov
das
sti
xchg
mov
or
xchg
dec
pop
jl
mov
sub
sbb
div
out
aas
test
test
(bad)
cmp
xchg
inc
(bad)
mov
dec
cmps
pop
and
mov
pop
lock
int3
or
retf
dec
movs
push
ret
lock
or
mov
cmps
int
xor
or
lods
not
mov
(bad)
dec
sub
mov
aaa
shl
loopne
jmp
dec
inc
or
inc
or
dec
outs
hlt
push
mov
test
(bad)
pop
loopne
into
pop
loopne
retf
pop
or
dec
sar
movs
mov
pop
dec
jge
push
add
or
lea
inc
push
out
dec
(bad)
retf
mov
pop
sub
pop
push
js
mov
int3
shr
mov
cmp
or
shl
dec
cs
fiadd
pop
dec
xchg
fcom
ds
xchg
mov
loope
mov
retf
pop
rcl
jmp
sahf
loopne
shl
(bad)
ror
hlt
arpl
es
dec
cs
xor
mov
add
(bad)
out
cld
cmc
mov
or
mov
and
(bad)
(bad)
push
xchg
(bad)
lods
leave
jle
mov
hlt
lahf
or
or
cmp
int
dec
shl
loopne
(bad)
cli
push
dec
cs
in
or
call
hlt
sub
stos
or
xchg
mov
ret
mov
int
enter
mov
arpl
mov
stos
lock
rcr
xchg
pop
daa
cs
pop
daa
sub
pop
daa
arpl
dec
cs
xchg
enter
mov
jecxz
add
(bad)
loopne
cmps
sti
ss
es
sub
dec
inc
or
mov
arpl
push
or
xchg
dec
pop
mov
jmp
mov
jecxz
add
(bad)
loopne
(bad)
push
pop
dec
cs
sbb
call
ucomiss
loopne
(bad)
pop
push
dec
cs
fiadd
loop
rcr
xchg
iret
dec
pop
shr
ja
or
dec
ror
imul
or
iret
dec
pop
and
mov
hlt
dec
and
(bad)
sub
dec
cs
ja
iret
dec
pop
and
inc
or
dec
scas
jecxz
dec
or
jnp
pop
adc
(bad)
mov
cli
sbb
pop
dec
(bad)
pop
pop
mov
int3
sar
call
dec
mov
xchg
jle
pop
mov
popa
pop
and
inc
or
inc
or
cmp
hlt
push
(bad)
into
push
dec
cs
(bad)
sbb
fisttp
and
out
imul
cmp
pop
jne
inc
or
cmp
hlt
push
mov
dec
cs
push
(bad)
stos
push
dec
cs
inc
test
pop
xchg
test
pop
mov
(bad)
(bad)
cld
clc
les
xchg
mov
jle
movs
or
or
pop
pop
loopne
ds
push
sar
movs
pop
or
dec
lods
iret
pop
adc
enter
pop
mov
int3
shr
cs
sbb
sub
push
sar
mov
add
dec
or
into
jmp
test
pop
dec
repnz
and
cld
xchg
sbb
or
or
pop
jne
inc
or
pop
daa
cs
pop
mov
pop
loopne
es
add
or
lea
cs
lds
cmp
hlt
push
sar
daa
cs
push
sar
movs
cmp
pop
dec
daa
retf
imul
jecxz
int3
inc
pop
dec
pop
retf
hlt
pop
cmps
repz
mov
int3
loopne
shl
iret
add
outs
push
(bad)
mov
cli
into
ret
sbb
adc
imul
push
(bad)
or
(bad)
jmp
repz
int3
xchg
or
pop
ja
or
daa
cs
push
sar
movs
mov
pop
dec
daa
retf
imul
hlt
jbe
dec
pop
sbb
cs
push
sar
movs
movs
inc
pop
dec
daa
retf
imul
jecxz
dec
inc
pop
dec
pop
retf
hlt
pop
sar
movs
je
pop
dec
and
mov
in
xchg
or
sbb
jo
fcomp
cmps
out
dec
sbb
push
or
(bad)
jmp
dec
pop
dec
pop
sub
loop
or
sbb
sbb
cld
hlt
push
or
je
repz
pop
retf
pop
cmps
outs
popa
pop
and
inc
or
inc
or
iret
dec
pop
movs
sub
pop
dec
(bad)
test
push
push
or
inc
out
jle
jl
loopne
mov
test
or
or
int3
jmp
push
inc
test
mov
and
or
cmp
push
jle
ins
or
(bad)
retf
pop
dec
sbb
push
xchg
add
pop
jnp
fcomp
or
(bad)
push
pop
hlt
jne
aaa
and
cmp
in
pop
xchg
mov
pop
sbb
dec
or
into
jmp
(bad)
jnp
(bad)
or
cmps
push
add
test
dec
pop
leave
pushf
xor
or
scas
aaa
and
adc
and
jle
(bad)
imul
dec
cs
int
pop
mov
enter
dec
hlt
(bad)
sti
sbb
and
push
imul
(bad)
jmp
sbb
sar
(bad)
fimul
pop
inc
jle
push
(bad)
cs
dec
cs
int
pop
mov
enter
or
cmps
and
fbld
int
pop
mov
enter
ret
cmps
out
pushf
mov
movs
push
pop
mov
inc
jnp
xor
dec
cs
mul
imul
mov
in
pushf
mov
pop
jne
(bad)
push
pop
dec
sbb
dec
out
(bad)
in
and
les
cs
sub
pushf
mov
and
test
cmp
cvttps2pi
adc
ins
fmul
ror
pop
cmps
data16
xor
add
jno
and
xor
pop
dec
mov
out
clc
mov
sub
and
xor
pop
dec
xchg
inc
xrelease
std
mov
or
into
jmp
dec
je
pop
dec
jns
or
or
rol
or
xor
pop
movs
xchg
or
loopne
(bad)
imul
(bad)
das
leave
xchg
sbb
push
inc
push
out
dec
(bad)
retf
mov
dec
sub
test
pop
movs
out
pop
or
test
(bad)
in
mov
dec
lods
scas
repz
hlt
pop
shr
loopne
and
dec
mov
es
in
adc
add
cmp
cmp
movs
pop
add
dec
lods
mov
mov
hlt
pop
cmp
pop
idiv
or
jl
loop
inc
cs
cmp
jecxz
push
or
mov
adc
dec
cs
mov
les
and
xchg
shl
mov
cmp
mov
or
sbb
xchg
ins
or
les
mov
pop
cs
scas
cmps
mov
mov
hlt
xchg
mov
jle
and
(bad)
xor
cs
sbb
or
scas
cmps
mov
mov
hlt
xchg
mov
ret
loopne
rol
pop
int
or
cmp
sbb
or
aam
neg
jmp
mov
add
dec
push
add
iret
dec
pop
mov
mul
mov
jecxz
or
or
or
aam
repnz
mov
jbe
and
sar
test
imul
hlt
and
pop
dec
mov
out
aam
bound
jb
dec
cs
dec
or
lock
loope
jns
and
dec
pop
dec
lods
iret
pinsrw
mov
or
aam
repnz
mov
jbe
and
sar
mul
imul
into
jmp
mov
mul
mov
jecxz
or
or
or
aam
repnz
mov
jbe
and
sar
idiv
or
into
jmp
hlt
and
pop
dec
mov
out
aam
bound
jmp
or
lock
loope
jns
and
dec
pop
dec
lods
iret
lss
ja
iret
dec
pop
(bad)
stos
mul
mov
pop
ja
iret
dec
pop
sbb
cs
pop
cmps
shr
xchg
cmps
enter
or
hlt
and
pop
dec
mov
out
aam
bound
sti
std
ucomiss
stos
mov
cmc
loopne
xchg
dec
pop
dec
lods
iret
pop
and
sar
imul
push
pop
into
jmp
hlt
and
pop
dec
mov
out
aam
bound
sti
std
ucomiss
stos
mov
cmc
loopne
lods
dec
pop
dec
lods
iret
pop
and
sar
mul
push
pop
into
jmp
dec
(bad)
cs
dec
cs
dec
or
dec
push
sub
pop
push
pop
hlt
dec
or
dec
mov
out
movs
mov
mov
hlt
dec
and
jns
wbinvd
or
or
aam
repnz
and
mov
hlt
dec
movs
ror
mov
hlt
dec
mov
sbb
jle
iret
lods
ins
or
cld
dec
pop
dec
lods
iret
aas
movs
pushf
dec
pop
dec
xchg
add
dec
cs
call
xor
or
aam
repnz
(bad)
xchg
mul
mov
pop
ja
iret
dec
pop
sbb
xchg
pop
dec
cs
pop
xchg
fisub
cs
cld
les
sbb
inc
dec
pop
dec
xchg
add
dec
cs
call
xor
or
clc
shl
loope
mov
inc
mov
cs
dec
or
dec
push
sbb
into
dec
pop
mov
mul
mov
jecxz
push
or
or
aam
repnz
mov
jbe
and
sar
test
jmp
dec
inc
pushf
dec
cs
push
movs
mov
mov
hlt
dec
and
jle
jecxz
or
or
aam
repnz
mov
jbe
and
sar
div
jmp
hlt
and
pop
dec
mov
out
aam
bound
sti
std
ucomiss
stos
mov
cmc
loopne
clc
dec
pop
dec
lods
iret
pop
movs
mov
add
dec
cs
call
xor
or
aam
repnz
(bad)
xchg
mul
mov
pop
ja
iret
dec
pop
sbb
jbe
dec
cs
pop
lods
jbe
dec
and
pushf
call
cs
dec
cs
enter
mov
mov
cmp
or
scas
cmps
mov
mov
hlt
pop
cmps
pop
sbb
stos
mov
mov
xor
ds
and
xchg
mov
mov
add
jno
and
xor
pop
dec
mov
out
in
push
(bad)
(bad)
mov
dec
or
mov
cmps
sahf
stos
mov
hlt
xchg
call
pop
dec
shl
dec
and
mov
hlt
dec
movs
lock
pop
dec
lods
iret
or
ror
loopne
or
aas
stos
hlt
stos
mov
pop
adc
mov
sbb
inc
outs
dec
cs
imul
outs
or
into
jmp
dec
(bad)
mov
cs
dec
or
dec
push
sbb
into
dec
pop
mov
mul
mov
jecxz
or
or
or
aam
repnz
mov
jbe
and
sar
div
outs
or
into
jmp
hlt
and
pop
dec
mov
out
aam
bound
sti
std
ucomiss
stos
mov
cmc
loopne
js
pop
dec
lods
iret
pop
int3
stos
retf
loopne
ror
call
repz
shl
call
mov
call
repz
cs
dec
or
shl
loopne
popa
or
dec
scas
mov
dec
shl
pop
inc
stos
dec
push
dec
cs
jo
or
(bad)
imul
dec
out
pop
je
repz
rol
add
or
(bad)
stos
repz
rol
loopne
pop
pop
ja
into
dec
pop
shr
imul
outs
or
into
jmp
mov
ret
loopne
scas
aaa
push
dec
pop
repnz
mov
mov
(bad)
test
(bad)
in
xchg
sbb
shl
loopne
stos
push
jmp
shl
dec
movs
pushf
xor
dec
mov
hlt
dec
movs
(bad)
repz
lods
iret
sbb
stos
sti
loopne
shl
stos
mov
pop
adc
clc
fdivp
loop
movs
mov
mov
hlt
dec
and
jle
sub
ss
or
or
aam
repnz
mov
jbe
and
sar
idiv
or
into
jmp
dec
(bad)
loop
dec
cs
dec
or
dec
push
sbb
into
dec
pop
mov
mul
mov
jecxz
or
es
jb
or
aam
repnz
mov
jbe
and
sar
imul
jmp
mov
pop
and
hlt
call
cld
cld
les
sbb
stos
or
mov
pop
loopne
(bad)
hlt
loope
js
pop
mov
and
loopne
out
add
rcl
loopne
adc
pop
dec
sar
test
jmp
dec
(bad)
dec
and
mov
dec
or
dec
push
sbb
into
dec
pop
mov
mul
mov
jecxz
jb
or
or
aam
repnz
mov
jbe
and
sar
div
or
into
jmp
hlt
and
pop
dec
mov
out
aam
bound
sti
std
ucomiss
stos
mov
cmc
loopne
xor
pop
dec
lods
iret
pop
and
sar
test
add
mov
mov
dec
cs
dec
or
dec
push
sub
out
or
hlt
dec
or
dec
mov
out
movs
mov
mov
hlt
dec
and
jns
mov
or
or
aam
repnz
mov
jbe
and
sar
imul
adc
pop
into
jmp
hlt
and
pop
dec
mov
out
aam
bound
sar
cs
stos
mov
cmc
loopne
lods
xor
pop
movs
adc
pop
dec
cs
call
xor
or
clc
shl
loope
(bad)
push
and
mov
inc
scas
loopne
and
adc
pop
hlt
and
pop
dec
mov
out
aam
bound
or
dec
cs
dec
or
lock
loope
jns
and
ss
dec
lods
iret
(bad)
pop
jmp
dec
sar
test
add
xchg
or
hlt
and
pop
dec
mov
out
aam
bound
sti
std
ucomiss
stos
mov
cmc
loopne
les
pop
dec
lods
iret
pop
cmc
and
dec
fld1
xchg
enter
mov
enter
dec
pop
mov
mul
mov
jecxz
jo
or
or
aam
repnz
mov
jbe
and
sar
imul
adc
pop
into
jmp
mov
mul
mov
jecxz
jo
or
cs
scas
cmps
mov
mov
and
mov
dec
or
dec
push
sbb
int3
dec
pop
mov
mul
mov
jecxz
jo
or
shl
loopne
movs
mov
mov
hlt
dec
and
jle
add
or
or
aam
repnz
mov
jbe
and
sar
not
or
into
jmp
mov
mul
mov
jecxz
jo
or
sub
aaa
pop
dec
xchg
add
dec
cs
call
xor
or
clc
shl
loope
(bad)
(bad)
and
mov
inc
(bad)
xchg
and
mov
dec
or
int3
jmp
pop
xchg
lock
loope
jns
not
mov
iret
shld
pop
dec
xchg
add
dec
cs
call
xor
or
clc
shl
loope
mov
inc
xchg
add
dec
cs
cld
les
sbb
lock
dec
sar
mul
adc
pop
into
jmp
hlt
and
pop
dec
mov
out
aam
bound
sti
std
ucomiss
stos
mov
cmc
loopne
push
iret
pop
movs
sub
pop
dec
xchg
add
dec
cs
call
xor
or
aam
repnz
(bad)
xchg
mul
mov
pop
ja
iret
dec
pop
sbb
out
dec
cs
pop
inc
fcmovnb
ucomiss
stos
mov
cmc
loopne
shl
pop
dec
lods
iret
pop
daa
cs
pop
daa
sub
pop
daa
arpl
dec
cs
loopne
es
jne
or
mov
rcr
xchg
cmps
enter
hlt
loope
(bad)
mul
dec
cs
pop
rcl
dec
mov
mul
mov
hlt
stos
movs
shl
loopne
clc
xor
dec
sar
mul
sbb
pop
mov
mul
mov
jecxz
jne
or
push
or
(bad)
stos
out
mov
push
inc
push
out
dec
(bad)
retf
mov
dec
das
or
sbb
and
(bad)
sbb
imul
cmps
adc
sbb
cwde
dec
loopne
inc
add
xchg
sbb
cs
pop
and
mov
hlt
dec
and
(bad)
fsubrp
mov
mov
push
scas
dec
loopne
movs
dec
loopne
sub
daa
arpl
xchg
ins
or
icebp
dec
pop
and
(bad)
mov
leave
xchg
ins
or
lock
pop
and
inc
or
dec
scas
jecxz
mov
push
and
(bad)
sbb
out
dec
(bad)
retf
mov
shr
pop
push
js
mov
(bad)
(bad)
cld
clc
les
sbb
mov
xchg
or
mov
dec
and
xchg
enter
mov
dec
pop
(bad)
sub
push
dec
or
mov
repz
mov
hlt
xchg
mov
rcl
call
cmp
dec
movs
pop
pop
sar
xcrypt-ctr
cmps
sahf
mov
movs
test
dec
cmps
mov
shl
loopne
mov
loopne
(bad)
xchg
sub
or
xchg
shl
xchg
sbb
xchg
sbb
pop
les
and
(bad)
sbb
(bad)
jle
dec
sbb
fwait
stos
loop
shl
jnp
or
mov
mov
neg
sbb
pop
(bad)
jnp
xchg
rcr
mov
pop
adc
mov
hlt
xchg
sbb
xchg
sbb
pop
les
mov
out
or
and
(bad)
cmp
dec
sbb
fst
(bad)
xchg
sbb
cs
js
or
pushf
xor
dec
inc
nop
xchg
sbb
arpl
dec
or
mov
iret
cmp
or
(bad)
adc
dec
cs
movs
dec
or
dec
scas
in
das
cs
dec
shl
loopne
(bad)
cmp
(bad)
jmp
or
mov
xchg
sbb
cs
stos
(bad)
hlt
loopne
fwait
fwait
loop
shl
stos
rcl
loopne
fwait
and
shl
stos
aad
hlt
loopne
fwait
stos
loop
rcr
enter
mov
jecxz
mov
push
sbb
out
jle
sbb
scas
sub
cmp
movs
fisttp
pop
dec
inc
stos
ror
xchg
sbb
cs
pop
sub
pop
shr
xchg
enter
mov
jecxz
jne
or
std
shl
les
mov
xlat
popa
or
daa
push
pop
shr
idiv
push
or
into
jmp
dec
jmp
hlt
pop
dec
cs
enter
mov
or
dec
dec
int3
call
mov
dec
pop
pop
jns
stos
jecxz
mov
or
(bad)
(bad)
and
(bad)
jmp
hlt
loopne
mov
mov
push
xchg
enter
mov
xchg
sbb
inc
sub
inc
or
mov
hlt
dec
daa
cs
js
or
lea
(bad)
std
dec
cs
clc
xchg
loopne
(bad)
adc
dec
cs
ja
or
stos
cmps
mov
shl
xchg
mov
mov
ja
iret
dec
pop
and
mov
hlt
dec
movs
sub
pop
dec
lods
iret
jnp
ror
hlt
arpl
int3
xchg
enter
mov
arpl
ins
or
sbb
pop
(bad)
in
add
cmp
or
mov
or
int
pusha
loop
ror
xchg
enter
mov
push
ins
test
shr
inc
or
cs
jns
or
cs
and
(bad)
call
or
mov
pop
test
arpl
ins
or
mov
jecxz
icebp
shl
pushf
mov
ss
or
lods
scas
xor
mov
dec
scas
in
and
or
dec
lods
scas
xor
mov
div
sbb
pop
int3
jmp
pop
neg
cs
stos
jmp
add
pop
dec
sar
test
xchg
loop
shl
adc
(bad)
cld
clc
les
sbb
jo
(bad)
(bad)
(bad)
retf
mov
push
jge
dec
(bad)
jae
mov
(bad)
(bad)
or
(bad)
jmp
xor
dec
cs
cmps
pop
loope
jmp
hlt
push
(bad)
sub
sbb
cmps
pop
jecxz
pop
sbb
pop
sbb
pop
(bad)
in
ins
xchg
sbb
pop
test
ins
xchg
sbb
add
or
add
sbb
or
inc
cdq
pop
jmp
sbb
xchg
push
pop
jne
(bad)
cs
cs
or
dec
fldlg2
xchg
or
sbb
out
mov
das
add
lea
popa
sbb
imul
(bad)
fimul
movs
xor
adc
lods
retf
sbb
cs
imul
pop
adc
imul
or
push
pop
sbb
cs
push
and
dec
and
dec
jle
jae
or
dec
loope
push
sbb
pop
jecxz
inc
sbb
xchg
sub
or
cmc
sar
fldlg2
xchg
or
sbb
imul
daa
cs
ja
jp
pop
daa
cs
pop
movs
jl
pop
dec
cmps
int
mov
jecxz
jle
or
movs
mov
repz
(bad)
jmp
or
(bad)
imul
adc
fcomp
cmps
out
cmps
add
clc
cmp
dec
jge
dec
(bad)
jae
mov
(bad)
(bad)
or
(bad)
jmp
mov
mov
sbb
stos
mov
mov
dec
add
xchg
sbb
shl
dec
and
(bad)
push
das
dec
cs
out
add
fild
or
int3
(bad)
sbb
pop
loopne
jmp
dec
cs
inc
daa
retf
push
sar
loopne
and
xchg
jge
or
mov
retf
pop
cmps
dec
int3
call
or
shr
xchg
enter
mov
pop
test
(bad)
cmp
(bad)
jmp
jmp
mov
sahf
sub
mov
inc
daa
retf
push
sar
loopne
and
sub
or
dec
pop
retf
pop
cmps
and
mov
out
loopne
(bad)
(bad)
or
(bad)
jmp
enter
mov
ins
cs
cmps
add
pop
push
js
xchg
adc
mov
cmp
xor
mov
cmps
sti
push
mov
sub
pop
dec
(bad)
mov
(bad)
into
out
pop
int
or
cmp
sbb
es
aam
imul
xchg
hlt
loopne
jmp
mov
dec
cs
neg
sbb
pop
into
jmp
enter
mov
mov
xchg
shl
xchg
mov
dec
xchg
sbb
cs
inc
(bad)
sub
mov
dec
or
dec
push
pop
ja
int3
dec
pop
shr
test
jmp
hlt
and
pop
dec
mov
out
aam
bound
sub
cs
dec
or
lock
mov
arpl
ins
or
mov
jecxz
jle
or
or
aam
repnz
mov
jbe
and
mov
hlt
dec
movs
les
pop
dec
lods
iret
pop
int3
ror
arpl
lods
ins
or
mov
jecxz
jle
or
or
aam
repnz
mov
jbe
and
mov
hlt
dec
movs
test
pop
dec
lods
iret
pop
movs
dec
cmp
dec
xchg
add
dec
cs
call
xor
jecxz
jle
or
aam
repnz
rcl
ja
lock
pop
rcl
test
jmp
lods
ins
or
mov
arpl
lods
ins
or
mov
jecxz
jle
or
fiadd
pop
dec
xchg
add
dec
cs
call
xor
arpl
scas
ins
or
mov
jecxz
jle
or
ins
or
mov
jecxz
jle
or
or
aam
repnz
mov
jbe
and
mov
hlt
dec
movs
enter
lods
iret
pop
and
mov
hlt
dec
movs
cld
cmp
dec
lods
iret
pop
(bad)
fimul
out
(bad)
call
or
aam
repnz
mov
jbe
movs
pop
cmp
dec
xchg
push
call
dec
into
hlt
loopne
inc
push
ror
xchg
sbb
sub
mov
pop
inc
and
ucomiss
loopne
(bad)
jbe
dec
cs
inc
(bad)
xor
dec
or
dec
push
pop
ja
int3
dec
pop
shr
neg
sbb
pop
into
jmp
mov
icebp
hlt
loopne
call
or
mov
jecxz
jg
or
or
aam
repnz
mov
jbe
and
mov
hlt
dec
movs
and
pop
dec
lods
iret
pop
and
mov
hlt
dec
movs
aam
pop
dec
lods
iret
pop
int3
call
jecxz
jl
or
aam
repnz
mov
jbe
and
mov
hlt
dec
movs
loopne
pop
dec
lods
iret
pop
mov
pop
xchg
enter
mov
arpl
xchg
ins
or
mov
jecxz
jl
or
or
aam
repnz
mov
jbe
and
mov
hlt
dec
movs
movs
cmp
dec
lods
iret
pop
and
mov
hlt
dec
movs
pop
cmp
dec
lods
iret
pop
movs
sbb
pop
dec
xchg
add
dec
cs
call
xor
arpl
scas
ins
or
mov
jecxz
jl
or
cs
stos
cmps
mov
xchg
shl
xchg
mov
imul
dec
cs
dec
or
int3
jmp
pop
xchg
lock
mov
arpl
xchg
ins
or
mov
jecxz
jge
or
or
aam
repnz
mov
jbe
and
mov
hlt
dec
movs
les
pop
dec
lods
iret
pop
and
mov
hlt
dec
movs
clc
cmp
dec
lods
iret
pop
(bad)
fdivrp
stc
les
sbb
test
pop
dec
xchg
add
dec
cs
call
xor
arpl
scas
ins
or
mov
jecxz
jge
or
or
aam
repnz
mov
jbe
movs
pusha
cmp
dec
xchg
push
call
dec
into
hlt
loopne
inc
push
ror
xchg
sbb
dec
das
dec
cs
pop
inc
fcmovnb
ucomiss
loopne
(bad)
pop
das
dec
cs
inc
inc
or
inc
or
inc
or
or
(bad)
fidiv
dec
sbb
call
xchg
sbb
cs
pop
rcl
dec
rcl
loopne
rcl
loopne
(bad)
xor
hlt
stos
mov
hlt
loopne
call
retf
pop
cmps
sub
pop
adc
(bad)
mov
cli
int3
ret
dec
cs
dec
sbb
mov
pop
inc
or
into
mov
cs
or
add
pop
(bad)
jnp
xchg
sbb
xchg
fdivr
repz
mov
hlt
xchg
mov
xchg
xor
cs
test
and
loopne
xchg
xchg
ja
cs
clc
les
sbb
rcr
(bad)
mov
dec
sbb
(bad)
cld
clc
les
sbb
ds
pop
shr
div
sub
pop
dec
mov
hlt
dec
and
inc
mov
sbb
cmp
hlt
loopne
jmp
dec
or
das
or
shr
xchg
enter
mov
jecxz
or
repz
mov
mov
dec
shr
test
pop
push
lea
(bad)
or
lock
pop
shr
imul
stos
mov
xchg
enter
mov
jecxz
arpl
or
(bad)
loopne
stos
xchg
loop
ror
pop
daa
push
pop
shr
test
jmp
mov
aad
loopne
jmp
hlt
loopne
or
mov
or
dec
mov
dec
pop
cs
stos
jecxz
mov
or
cmc
dec
add
dec
fldlg2
xchg
enter
mov
int3
xchg
enter
mov
jecxz
test
hlt
inc
shr
xchg
enter
mov
popa
pop
daa
cs
aas
daa
cs
pop
daa
xchg
sbb
add
add
fisubr
or
mov
mov
mul
xchg
mov
repz
mov
mov
ja
iret
dec
pop
and
mov
hlt
dec
movs
hlt
es
dec
lods
iret
jnp
ror
hlt
jns
repz
mov
hlt
xchg
mov
hlt
dec
and
mov
cs
out
jle
and
(bad)
sahf
xor
cmp
hlt
loopne
movs
mov
shl
and
leave
push
mov
or
fimul
pop
movs
pop
and
dec
inc
nop
xchg
sbb
or
dec
inc
or
lock
pop
shr
idiv
jmp
inc
stos
ficomp
dec
xchg
sbb
shl
pushf
mov
add
inc
stos
mov
dec
cs
pop
mov
lahf
loop
rol
loopne
(bad)
jp
dec
xchg
sbb
shl
imul
clc
hlt
loopne
call
or
stos
cmps
mov
shl
xchg
mov
mov
imul
add
pop
and
(bad)
ds
inc
lock
pop
sbb
sbb
dec
cs
pop
daa
retf
push
inc
add
ucomiss
pop
or
mul
mov
loopne
push
cmps
enter
hlt
stos
(bad)
hlt
loopne
test
loopne
lods
iret
adc
shl
loopne
(bad)
cmp
sar
mul
stc
hlt
loopne
jmp
dec
js
aas
fs
enter
mov
or
dec
cmps
repz
int3
xchg
enter
mov
jecxz
fs
sar
neg
pop
or
(bad)
(bad)
cld
clc
les
sbb
fwait
scas
loop
shl
xor
or
jno
inc
test
nop
cmps
out
pushf
mov
movs
push
pop
repnz
jns
xor
or
and
dec
cmps
dec
out
pop
pop
not
pop
or
(bad)
jnp
xchg
sbb
dec
daa
outs
jecxz
gs
mov
int3
dec
sbb
cmp
pop
div
or
mov
pop
xchg
sbb
or
or
pop
dec
jge
imul
xchg
mov
repz
mov
or
pusha
push
pop
dec
inc
or
(bad)
cs
cs
rcr
sahf
push
or
cmc
cmp
pop
dec
fldlg2
xchg
or
sbb
imul
sbb
pop
cmp
pop
div
or
pop
(bad)
imul
inc
cmps
repz
(bad)
jmp
enter
mov
pop
cs
(bad)
or
pop
sbb
enter
xchg
mov
repz
mov
cmp
jecxz
fs
dec
pop
retf
hlt
push
cmps
repz
int3
ja
and
pop
shr
dec
movs
shl
dec
inc
or
cmp
xchg
sbb
ror
loopne
cs
(bad)
fsubp
adc
sub
div
push
or
(bad)
call
ret
cmps
out
pushf
mov
adc
data16
(bad)
cld
clc
les
xchg
mov
pop
mov
or
and
cmps
int3
adc
imul
and
mov
fidiv
mov
ins
or
dec
sar
lahf
in
ins
or
jle
or
inc
cdq
dec
loope
out
or
rcl
pop
dec
mov
mov
fist
dec
icebp
sbb
das
or
mov
daa
or
sbb
sahf
mov
dec
hlt
pop
mov
mov
adc
mov
cmp
jle
dec
repz
or
cmps
sti
call
(bad)
call
popa
pop
daa
cs
sbb
das
popa
pop
daa
cs
pop
and
inc
or
inc
or
ss
cs
das
pop
jne
sar
fwait
in
ins
or
out
push
or
daa
das
pop
jne
sar
not
outs
or
fiadd
or
(bad)
fdivrp
stc
les
xchg
mov
daa
push
hlt
sub
(bad)
push
and
dec
inc
or
push
hlt
sub
dec
pop
movs
inc
and
dec
inc
or
push
hlt
sub
dec
pop
movs
je
pop
dec
inc
or
push
hlt
sub
dec
pop
movs
and
dec
scas
in
and
or
jns
das
mov
sub
gs
jns
das
mov
fwait
mov
gs
jns
das
mov
jg
ucomiss
or
or
dec
inc
or
push
hlt
sub
dec
pop
movs
shr
dec
inc
or
push
hlt
sub
shr
inc
or
push
hlt
sub
lea
movs
lock
dec
inc
or
push
hlt
sub
lea
movs
loopne
pop
dec
jno
(bad)
mov
test
mov
repz
mov
js
xchg
pop
dec
(bad)
push
cmp
test
fsubr
ja
test
hlt
sub
jl
pop
dec
inc
mul
js
stos
pop
dec
(bad)
xor
dec
cs
shr
ja
test
hlt
sub
(bad)
add
dec
inc
mul
js
xchg
pop
dec
(bad)
push
cmp
test
shr
ja
test
hlt
sub
dec
pop
movs
and
pop
dec
cmps
repz
int3
jne
sar
add
outs
or
cmps
or
pop
out
cs
pop
dec
inc
loop
or
sbb
mov
or
sar
aaa
shr
test
inc
loop
or
sbb
or
mov
mov
ds
shr
imul
or
pop
out
add
cwde
or
sbb
or
xchg
or
sar
fwait
in
ins
or
xor
or
out
xor
or
sbb
imul
inc
mov
cli
into
ret
sbb
and
(bad)
sbb
fcmovnbe
pop
dec
sar
movs
mov
loopne
cmps
int
mov
(bad)
xchg
jecxz
ror
or
pop
sbb
cs
(bad)
xor
pop
shr
sbb
cmp
cs
pop
mov
aas
or
pop
sbb
dec
imul
or
pop
jne
inc
or
mov
repnz
arpl
dec
cs
push
or
pop
out
push
pop
dec
inc
or
js
xchg
pop
dec
inc
or
adc
out
into
(bad)
outs
dec
daa
cmp
and
inc
iret
ret
arpl
nop
ins
or
(bad)
cmp
test
shr
sahf
mov
inc
or
js
xchg
pop
dec
inc
or
js
stos
pop
dec
inc
fwait
push
dec
sbb
dec
out
into
(bad)
outs
dec
daa
jg
or
inc
xlat
dec
cs
nop
ins
or
(bad)
jmp
ins
or
inc
or
inc
or
inc
or
inc
or
inc
mov
dec
cs
pop
daa
cs
pop
daa
cmp
cmp
or
daa
push
hlt
sub
dec
pop
movs
lods
cs
dec
inc
or
js
xchg
pop
dec
inc
or
js
stos
pop
dec
inc
sbb
sub
pop
daa
dec
popa
aaa
and
inc
addr16
arpl
nop
ins
or
(bad)
jle
dec
cs
in
ins
or
sar
sub
outs
or
sar
pop
in
outs
or
inc
sub
daa
push
arpl
dec
cs
ja
repz
pop
and
inc
or
jb
or
out
mov
call
(bad)
jmp
aas
or
pop
mov
dec
mov
and
inc
stos
pop
dec
cs
aaa
and
inc
(bad)
cs
nop
ins
or
(bad)
idiv
dec
cs
shr
jne
sar
sub
outs
or
sar
pop
in
outs
or
inc
jae
dec
arpl
gs
or
dec
jle
xchg
xchg
ins
or
repz
pop
daa
cs
imul
dec
pop
daa
cs
sub
dec
pop
daa
cs
sub
dec
popa
jnp
test
pop
dec
inc
pop
ja
mov
repnz
cs
pop
movs
mov
jecxz
or
mov
ss
or
and
inc
or
das
or
sbb
arpl
ins
or
inc
dec
push
dec
cs
sub
sbb
pop
dec
inc
or
js
xchg
pop
dec
inc
or
js
stos
pop
dec
inc
daa
push
dec
cs
sub
dec
inc
jno
dec
mov
repnz
cs
pop
movs
or
pop
dec
lea
pop
mov
aas
or
pop
mov
imul
or
inc
mov
mov
or
mov
repnz
cs
pop
movs
les
pop
dec
lea
or
and
sar
sub
outs
or
sar
pop
in
outs
or
inc
xor
or
and
inc
or
dec
jle
je
ins
or
repz
pop
daa
cs
outs
or
(bad)
cld
clc
les
xchg
mov
js
xchg
pop
dec
inc
or
js
stos
pop
dec
inc
sbb
or
and
inc
pop
push
dec
arpl
dec
cs
ja
repnz
pop
and
inc
or
sub
stos
pop
dec
inc
or
js
xchg
pop
dec
inc
or
js
stos
pop
dec
inc
sbb
inc
adc
dec
cs
dec
or
or
ins
xlat
pop
dec
inc
rol
ucomiss
movs
add
pop
dec
lea
xchg
popa
pop
mov
aas
or
pop
mov
dec
mov
and
inc
cmp
dec
cs
jnp
or
sbb
cs
nop
ins
or
(bad)
(bad)
cmp
shr
jne
sar
sub
outs
or
sar
pop
in
outs
or
inc
pop
ja
das
or
and
inc
or
dec
jle
sbb
repz
pop
daa
cs
outs
or
cs
sub
dec
pop
daa
cs
sub
arpl
dec
or
or
daa
cmp
dec
scas
pop
ja
iret
dec
pop
and
inc
or
outs
or
cs
sub
dec
pop
daa
cs
sub
arpl
mov
or
daa
cmp
dec
scas
pop
ja
mov
and
inc
or
outs
or
fnstenv
cs
pop
mov
aas
or
pop
mov
imul
push
arpl
dec
or
inc
or
int
arpl
lods
ins
or
repnz
pop
and
(bad)
push
cmp
shr
jne
sar
sub
outs
or
sar
jg
ins
or
inc
outs
ja
or
daa
cmp
dec
scas
pop
ja
iret
dec
pop
and
inc
or
ins
or
cs
sub
dec
pop
daa
cs
sub
mov
daa
cmp
dec
or
das
or
daa
xor
dec
scas
pop
ja
cmc
dec
pop
and
inc
or
fimul
or
out
mov
pop
dec
(bad)
jl
mov
and
(bad)
sbb
mov
push
(bad)
mov
cli
into
ret
sbb
mov
pop
pop
or
and
sar
movs
ins
cld
loopne
cmps
int
mov
(bad)
ds
pop
lea
or
and
cs
stos
cmps
dec
repz
jmp
add
ins
or
movs
xor
pop
dec
scas
cld
cmps
pusha
or
sar
sub
outs
or
js
pop
mov
dec
jmp
movs
dec
out
imul
daa
cs
pop
and
inc
xlat
dec
cs
nop
ins
or
sub
pop
movs
enter
lea
or
popa
pop
mov
aas
or
pop
sbb
(bad)
and
lods
jecxz
sbb
inc
or
int
arpl
xchg
ins
or
repz
pop
daa
cs
ins
or
cs
sub
dec
pop
daa
cs
sub
mov
and
movs
dec
out
imul
movs
dec
pop
jne
inc
pop
ja
mov
repnz
cs
pop
movs
pop
sub
dec
lea
ucomiss
daa
sub
pop
daa
cs
sbb
das
popa
pop
daa
cs
pop
and
inc
or
inc
add
(bad)
mov
fxch
jmp
popa
push
sbb
js
xchg
pop
dec
mov
dec
cs
pop
mov
aas
or
pop
mov
imul
dec
popa
or
cmp
dec
scas
pop
ja
iret
dec
pop
and
inc
or
dec
push
or
out
(bad)
xchg
pop
dec
cmps
repz
int3
ja
repnz
pop
daa
arpl
or
js
xchg
pop
dec
(bad)
mov
dec
arpl
ins
or
inc
dec
push
dec
cs
sub
mov
dec
scas
ss
out
ins
or
cmp
popa
pop
daa
das
arpl
cs
js
xchg
pop
dec
mov
daa
cs
pop
and
sar
not
outs
or
xor
pop
daa
cs
sub
dec
pop
daa
cs
sub
add
pop
dec
inc
cmp
inc
jno
dec
mov
repnz
cs
pop
movs
dec
adc
dec
lea
out
(bad)
sbb
cs
sub
dec
pop
daa
cs
sub
add
pop
dec
inc
aaa
jne
inc
movs
pop
dec
arpl
iret
dec
pop
and
inc
or
push
or
out
add
mov
popa
pop
mov
aas
or
pop
mov
dec
mov
and
inc
gs
das
or
and
inc
pop
ret
ucomiss
nop
ins
or
(bad)
loop
dec
cs
in
ins
or
dec
inc
or
js
xchg
pop
dec
inc
or
js
stos
pop
dec
inc
sbb
inc
mov
dec
cs
dec
or
or
ins
xlat
pop
dec
inc
rol
ucomiss
movs
test
xchg
popa
pop
mov
aas
or
pop
mov
dec
mov
and
inc
stos
pop
dec
cs
jnp
or
sbb
cs
nop
ins
or
(bad)
jp
dec
cs
shr
jne
sar
sub
outs
or
sar
pop
in
outs
or
inc
pop
ja
or
and
inc
or
dec
jle
sbb
repz
pop
daa
cs
push
or
cs
sub
dec
pop
daa
cs
sub
mov
daa
ds
dec
or
or
daa
xor
dec
cs
ja
cmc
dec
pop
and
inc
or
mov
or
out
push
stos
pop
dec
cmps
repz
int3
jne
sar
sub
outs
or
sar
pop
in
outs
or
inc
neg
dec
cs
dec
or
inc
or
dec
jle
dec
xchg
ins
or
repz
pop
daa
cs
push
or
cs
sub
dec
pop
daa
cs
sub
arpl
pusha
inc
pop
ja
mov
mov
or
ucomiss
dec
cs
retf
pop
out
xor
loopne
sbb
js
stos
pop
dec
inc
adc
inc
dec
jne
inc
or
int
arpl
lods
ins
or
repnz
pop
and
(bad)
pop
add
test
shr
sahf
mov
inc
or
js
xchg
pop
dec
inc
or
js
stos
pop
dec
inc
adc
inc
push
jne
inc
or
int
arpl
lods
ins
or
repnz
pop
and
(bad)
push
add
test
shr
jne
sar
sub
outs
or
sar
pop
in
outs
or
inc
nop
pop
dec
arpl
or
inc
or
int
arpl
xchg
ins
or
cmc
dec
pop
daa
cs
push
or
out
clc
loopne
(bad)
aam
mov
mov
or
pop
adc
fcomp
cmps
out
pushf
mov
xchg
inc
or
dec
mov
dec
cs
stos
cmps
dec
repz
jmp
or
dec
inc
or
inc
or
or
loop
or
(bad)
call
pop
dec
js
mov
or
or
or
in
adc
dec
lods
outs
jecxz
jmp
or
shr
shr
shr
mov
sbb
call
int
imul
stos
cmps
dec
test
pop
inc
jne
sar
and
inc
pop
les
cs
push
sar
movs
push
in
loopne
lods
iret
pop
les
xchg
mov
repz
mov
push
jne
inc
setb
(bad)
pop
loopne
arpl
stc
ins
or
or
mov
iret
pop
adc
(bad)
mov
cli
int3
ret
dec
cs
dec
rep
push
leave
jle
sti
cs
sbb
dec
inc
test
call
bound
dec
cs
push
or
aam
repnz
sahf
cmps
push
loopne
push
hlt
push
cmp
arpl
enter
mov
jecxz
push
or
pop
inc
shr
dec
shl
loopne
(bad)
and
dec
cs
es
or
int
hlt
sbb
aas
arpl
std
ins
or
mov
jecxz
push
or
pop
inc
pop
scas
ucomiss
loopne
(bad)
dec
dec
mov
sub
and
mov
hlt
dec
movs
lock
dec
scas
jbe
dec
pop
sbb
lahf
dec
pop
shr
test
mov
sub
and
mov
hlt
dec
movs
test
dec
scas
jbe
inc
pop
sbb
lahf
dec
pop
shr
neg
cmp
pop
int
hlt
push
cmp
arpl
enter
mov
jecxz
pop
or
pop
inc
aam
ucomiss
loopne
(bad)
outs
or
sub
enter
shl
loopne
call
jle
and
mov
hlt
dec
movs
ins
sbb
dec
scas
jbe
inc
pop
sbb
pushf
dec
pop
shr
mul
or
int
hlt
adc
aas
arpl
jmp
enter
mov
jecxz
pop
or
pop
inc
pop
lods
ucomiss
loopne
(bad)
test
cs
pop
daa
arpl
ins
or
cmc
dec
pop
shr
ja
mov
pop
movs
mov
xor
ucomiss
cld
ins
or
mov
pop
movs
jns
loopne
inc
retf
cmp
pop
push
or
fiadd
loopne
jo
(bad)
(bad)
(bad)
retf
pop
dec
sbb
push
xchg
inc
pop
rcr
cs
stos
cmps
dec
jecxz
jmp
sahf
pop
dec
xchg
das
pop
dec
movs
sub
iret
pop
inc
out
jg
daa
cs
imul
or
adc
(bad)
(bad)
(bad)
retf
mov
popa
or
push
js
mov
(bad)
fisub
out
(bad)
call
sbb
pop
mov
repnz
adc
pop
dec
(bad)
fiadd
dec
or
mov
xchg
clc
out
ror
push
inc
cmps
lods
ucomiss
loopne
mov
dec
cs
dec
cs
stos
cmps
mov
mov
scas
mov
mov
hlt
sbb
jmp
enter
mov
jecxz
pop
or
mov
jle
and
mov
hlt
dec
movs
in
pop
dec
scas
mov
mov
hlt
sbb
aas
arpl
(bad)
ins
or
mov
jecxz
pop
or
mov
jle
and
mov
hlt
dec
movs
mov
sti
call
mov
scas
mov
mov
hlt
sbb
aas
arpl
(bad)
ins
or
mov
jecxz
pop
or
mov
jle
and
mov
hlt
dec
movs
js
pop
dec
scas
mov
mov
hlt
pop
cmp
arpl
ins
or
mov
jecxz
pop
or
enter
mov
int
lock
loopne
daa
jle
and
mov
hlt
dec
movs
cmp
pop
dec
scas
mov
mov
hlt
adc
(bad)
ins
or
mov
jecxz
pop
or
mov
jle
and
mov
hlt
dec
movs
int3
pop
pop
dec
scas
mov
mov
hlt
adc
aas
arpl
(bad)
ins
or
mov
jecxz
pop
or
dec
scas
mov
mov
hlt
adc
aas
arpl
ins
or
mov
jecxz
pop
or
mov
jle
and
mov
hlt
dec
movs
mov
jnp
ucomiss
loopne
(bad)
or
mov
mov
sbb
or
and
inc
test
mov
sbb
xchg
clc
out
sar
imul
idiv
stos
sbb
fiadd
adc
cs
daa
arpl
ins
or
int
hlt
loopne
jmp
mov
retf
adc
xchg
or
dec
(bad)
call
mov
dec
and
lahf
lock
loopne
adc
call
hlt
jecxz
shl
adc
xor
pop
dec
call
hlt
pop
(bad)
fimul
out
(bad)
call
hlt
loopne
inc
les
xchg
sbb
cs
inc
lods
mov
mov
hlt
pop
cmp
jecxz
push
or
sbb
retf
out
icebp
sbb
fild
jmp
repz
and
jo
xchg
pop
dec
sub
sub
inc
and
ucomiss
loopne
(bad)
cmp
dec
cs
adc
and
inc
adc
ucomiss
loopne
(bad)
push
pop
dec
cs
push
lds
dec
sub
pop
shr
div
or
int3
fadd
call
sbb
ucomiss
loopne
(bad)
jmp
ins
or
mov
jecxz
pop
or
shl
loopne
(bad)
xor
dec
xchg
into
out
cmovg
stos
mul
mov
pop
ja
hlt
dec
pop
shr
not
cmp
pop
into
jmp
mov
hlt
dec
movs
in
pop
dec
inc
or
hlt
dec
pop
shr
not
mov
loopne
jmp
dec
or
mov
retf
sbb
cs
xchg
enter
mov
sti
push
mov
(bad)
repz
and
cdq
arpl
or
mov
repz
shl
in
ins
or
hlt
dec
pop
shr
mul
or
into
jmp
shr
not
cmp
pop
shr
not
cmp
pop
les
loopne
(bad)
stos
shr
mov
mov
mov
jle
(bad)
stos
shr
mov
int
dec
shl
loopne
cs
mov
shr
mov
mov
dec
pop
ficomp
dec
sar
xchg
enter
mov
arpl
xchg
ins
or
mov
jecxz
pop
or
(bad)
hlt
loopne
(bad)
dec
fxtract
loopne
xchg
mul
mov
pop
imul
xchg
fucomip
mov
xchg
ds
jne
(bad)
sbb
(bad)
hlt
loopne
stos
mul
mov
pop
loopne
(bad)
loopne
(bad)
cmps
push
dec
xchg
sbb
xchg
sbb
hlt
xchg
xor
or
movs
sbb
dec
scas
std
cli
ja
or
mov
popa
pop
mov
jmp
mov
arpl
dec
inc
or
(bad)
cmp
push
or
mov
hlt
loopne
jge
stos
mov
lods
(bad)
loopne
lods
iret
adc
in
add
inc
stos
and
mov
hlt
stos
mov
mov
in
and
or
pop
adc
movs
dec
push
pop
dec
ja
shl
jne
fisttp
pop
xchg
test
addr16
cs
pop
or
mov
ja
bound
dec
cmps
shl
xchg
cmps
enter
dec
pop
daa
arpl
dec
xor
test
stos
scas
icebp
mov
add
cmp
pop
div
aas
or
daa
das
jecxz
pop
or
imul
jns
dec
pop
cmc
xor
pop
dec
fld1
xchg
enter
mov
enter
xchg
pop
dec
mov
pop
or
(bad)
pop
or
or
and
(bad)
pop
push
dec
cs
pop
or
pusha
push
pop
dec
scas
loopne
jns
or
das
or
shr
loopne
es
pop
or
inc
fwait
mov
cld
shl
sbb
ror
loopne
cs
jge
or
into
sub
ucomiss
into
push
ror
imul
or
mov
ret
(bad)
in
jecxz
pop
or
sbb
retf
out
icebp
sbb
fild
jmp
icebp
xchg
fmul
mov
sbb
xchg
or
sti
xchg
mov
int3
add
(bad)
out
cld
cmc
mov
or
mov
and
(bad)
(bad)
push
xchg
mov
or
scas
mov
stos
mov
pop
cmp
int
out
hlt
loopne
(bad)
pop
or
sbb
in
or
call
hlt
sub
stos
mov
xchg
xchg
das
rcl
mov
mov
mov
rol
hlt
loopne
(bad)
cmp
dec
cs
pop
shr
xchg
enter
mov
jecxz
pop
or
mov
jecxz
mov
hlt
xchg
enter
mov
jecxz
mov
hlt
pushf
mov
add
test
rol
hlt
loopne
(bad)
and
dec
cs
cs
scas
cmps
mov
mov
push
and
pop
and
inc
fwait
mov
xchg
ins
or
mov
pop
movs
nop
sbb
dec
scas
enter
or
mov
sbb
or
mov
hlt
dec
pop
and
inc
int
ucomiss
in
ins
or
(bad)
cmp
and
mov
xchg
or
dec
pop
hlt
xor
pop
dec
(bad)
(bad)
mul
mov
ins
or
(bad)
call
sub
pop
or
mov
ds
xchg
ins
or
mov
hlt
dec
pop
and
inc
int
ucomiss
shr
mul
or
into
jmp
mov
fst
or
mov
push
or
daa
cs
pop
daa
sub
daa
arpl
dec
cs
ja
mov
pop
movs
add
cmps
dec
stos
daa
sub
pop
daa
cs
test
cs
pop
cmc
rol
dec
mov
mov
movs
dec
add
stos
mov
ror
jno
or
inc
or
rcl
loopne
call
dec
mov
or
int3
dec
pop
mov
mov
pop
mov
loopne
or
enter
mov
jecxz
pop
or
mov
ret
loopne
scas
aaa
push
dec
pop
bnd
mov
xchg
sbb
jle
movs
mov
pop
dec
inc
or
dec
inc
sti
std
ucomiss
push
(bad)
mov
dec
cs
push
(bad)
sub
dec
cs
test
ucomiss
or
pop
and
arpl
xor
or
(bad)
jmp
xchg
lods
push
dec
cs
cld
les
sbb
in
arpl
or
mov
dec
sbb
dec
ret
dec
or
daa
cs
pop
or
icebp
sub
loopne
inc
cs
or
or
dec
cs
pop
test
or
dec
mov
mov
pop
mov
aas
or
pop
daa
cs
pop
daa
cs
pop
daa
arpl
dec
in
ja
repz
pop
and
inc
or
push
or
out
cs
pop
dec
inc
lahf
scas
ucomiss
daa
cs
inc
or
(bad)
retf
lods
mov
mov
dec
mov
dec
mov
inc
sahf
lds
cs
inc
or
hlt
dec
pop
sbb
sbb
push
ins
pop
dec
fld1
xchg
enter
mov
mov
mov
ret
cs
push
sbb
shl
fmul
and
mov
or
dec
scas
loopne
cmp
or
mov
xchg
sbb
arpl
ins
or
call
int
xchg
mov
daa
retf
push
lods
cs
ins
or
mov
stos
ucomiss
pop
dec
cs
jmp
xchg
mov
hlt
dec
daa
cs
pop
and
inc
or
(bad)
push
adc
pop
test
stos
mov
jne
inc
or
pop
dec
pop
daa
cs
pop
movs
fadd
pop
dec
jle
outs
inc
or
inc
call
dec
cs
push
mov
or
inc
cs
push
mov
retf
cs
test
movs
nop
add
jne
inc
or
push
and
pop
inc
out
jle
adc
(bad)
(bad)
or
retf
mov
jno
or
push
js
mov
int3
rcl
dec
sbb
repz
je
into
(bad)
or
leave
pop
or
dec
(bad)
leave
pop
dec
cs
dec
or
leave
pop
or
dec
adc
push
dec
cs
jo
or
dec
and
and
or
inc
stos
mov
dec
cs
inc
or
cs
xchg
or
and
sar
ja
ins
or
jb
hlt
loopne
stos
out
mov
and
leave
sbb
jmp
or
clc
ret
mov
push
sti
mov
mov
pop
cmps
mov
mov
hlt
xchg
enter
mov
hlt
stos
movs
shl
loopne
cmp
pop
dec
daa
retf
adc
stos
or
dec
mov
hlt
dec
mov
dec
mov
inc
or
lea
xchg
enter
mov
mov
mov
hlt
pushf
movs
sub
loopne
mov
xor
cmp
sbb
stos
xlat
loop
ror
retf
mov
hlt
xor
loop
loopne
pop
fld
inc
or
add
hlt
dec
(bad)
stos
jmp
mov
and
sbb
sar
pop
in
outs
or
out
or
(bad)
(bad)
and
(bad)
jmp
dec
pop
dec
and
mov
out
inc
mov
push
mov
int3
pushf
push
mov
cmp
pop
pop
loopne
inc
mov
hlt
mov
push
lahf
jo
mov
call
arpl
stos
shl
inc
movs
inc
or
dec
cmps
repz
int3
mov
je
add
enter
dec
inc
or
dec
and
pop
movs
data16
dec
(bad)
or
inc
pop
add
cmp
jecxz
inc
or
mov
and
dec
sbb
mov
mov
hlt
sahf
mov
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
enter
dec
inc
or
cmp
jecxz
inc
or
adc
or
adc
or
adc
or
inc
mov
push
(bad)
mov
dec
cs
mov
or
cmp
jecxz
inc
or
dec
lods
scas
push
mov
loop
ror
xchg
enter
mov
jecxz
inc
or
mov
push
out
(bad)
sbb
jbe
pop
dec
scas
int3
retf
or
or
shr
loopne
(bad)
xchg
pop
dec
(bad)
(bad)
adc
dec
shl
loopne
pop
sub
inc
or
hlt
dec
pop
daa
cs
inc
cs
js
xchg
pop
dec
mov
dec
cs
dec
or
dec
movs
mov
mov
hlt
xchg
enter
mov
mov
mov
hlt
pop
int
jnp
ucomiss
adc
mov
hlt
pop
dec
xchg
sbb
ins
or
ret
pop
shl
xlat
mov
mov
dec
cs
into
(bad)
push
ins
push
inc
or
int
pop
shl
test
pop
and
push
popa
pop
daa
arpl
ins
or
(bad)
ficom
leave
(bad)
push
add
dec
(bad)
outs
sbb
and
(bad)
sbb
stos
or
mov
pop
xchg
enter
mov
arpl
xchg
ins
or
mov
jecxz
inc
or
or
mov
hlt
sub
dec
pop
movs
rol
pop
dec
scas
mov
mov
hlt
pop
cmp
popa
pop
daa
arpl
xchg
ins
or
(bad)
bound
push
mov
add
dec
(bad)
neg
dec
xchg
into
out
pop
int
or
cmp
mov
pop
pop
sub
inc
or
test
inc
cs
js
sahf
pop
dec
(bad)
jmp
cs
enter
mov
loopne
inc
cwde
mov
mov
hlt
xchg
leave
sub
loopne
shl
das
xor
aaa
xor
popa
pop
daa
cs
xchg
ins
or
(bad)
(bad)
push
dec
cs
sub
dec
pop
movs
mov
pop
dec
mov
loopne
movs
mov
mov
hlt
and
mov
mov
repz
mov
hlt
dec
shr
ja
hlt
dec
pop
shr
imul
and
sbb
or
shr
loopne
scas
stos
pop
dec
(bad)
sbb
dec
mov
dec
pop
sub
inc
or
test
inc
cs
js
stos
pop
dec
(bad)
and
dec
cs
dec
or
mov
shl
loopne
jmp
hlt
loopne
mov
hlt
dec
and
mov
hlt
dec
movs
sbb
pop
dec
lods
iret
(bad)
ror
pop
dec
mov
hlt
dec
mov
daa
or
mov
lock
hlt
loopne
cs
daa
cs
pop
and
inc
or
inc
daa
or
mov
daa
or
cmps
inc
cs
shr
or
mov
pop
xchg
enter
mov
arpl
enter
mov
jecxz
inc
or
or
mov
hlt
sub
dec
pop
movs
adc
pop
dec
scas
mov
mov
hlt
pop
cmp
popa
pop
daa
arpl
or
(bad)
mov
sub
dec
pop
movs
js
pop
dec
(bad)
aaa
sbb
xchg
into
out
pop
int
or
cmp
mov
dec
pop
sub
inc
or
test
inc
cs
js
xchg
pop
dec
(bad)
sub
dec
cs
dec
cs
enter
mov
loopne
inc
cwde
mov
mov
hlt
xchg
leave
sub
loopne
shl
das
xor
aaa
xor
popa
pop
daa
arpl
xchg
ins
or
(bad)
ds
dec
cs
sub
dec
pop
movs
int3
or
dec
mov
call
mov
mov
hlt
and
mov
mov
repz
mov
hlt
dec
shr
ja
hlt
dec
pop
shr
imul
jmp
shr
loopne
push
xchg
pop
dec
(bad)
pop
sbb
mov
dec
pop
sub
inc
or
test
dec
cs
js
xchg
pop
dec
(bad)
bound
dec
cs
dec
cs
enter
mov
loopne
inc
cwde
mov
mov
hlt
xchg
leave
sub
loopne
shl
das
xor
aaa
xor
popa
pop
daa
cs
xchg
ins
or
(bad)
jbe
dec
cs
sub
dec
pop
movs
add
pop
dec
(bad)
sbb
mov
hlt
loopne
mov
hlt
pushf
test
dec
lahf
jno
or
and
loopne
in
jns
(bad)
(bad)
cld
clc
les
sbb
jmp
hlt
loopne
mov
hlt
dec
and
mov
hlt
dec
movs
cmp
pop
dec
lods
iret
pinsrw
clc
les
sbb
jmp
popa
sbb
cs
pop
and
inc
dec
or
or
xchg
enter
mov
or
inc
or
clc
(bad)
loopne
(bad)
mov
and
pop
dec
xchg
inc
push
xchg
pop
dec
lods
ret
loopne
scas
aaa
push
dec
pop
repnz
mov
fcomp
mul
mov
pop
ja
mov
pop
mov
jmp
mov
jecxz
dec
or
mov
hlt
dec
daa
sub
out
scas
ins
or
clc
(bad)
loopne
(bad)
into
sbb
xchg
into
out
pop
int
or
cmp
popa
pop
sar
dec
shl
loopne
(bad)
loopne
(bad)
xchg
sbb
popa
pop
shr
jne
inc
sti
std
ucomiss
stos
mov
push
push
pop
dec
cmps
repz
mov
int3
loopne
(bad)
loopne
(bad)
sbb
dec
cs
sub
mov
movs
nop
or
jne
inc
pcmpeqw
or
or
push
fwait
pop
dec
(bad)
mov
dec
sbb
ror
cs
sbb
mov
jmp
mov
jecxz
dec
or
dec
lods
ret
loopne
scas
aaa
push
dec
pop
repnz
mov
fcomp
mul
mov
pop
ja
mov
mov
jmp
mov
jecxz
dec
or
mov
hlt
dec
daa
das
arpl
xchg
ins
or
clc
(bad)
loopne
(bad)
out
sbb
hlt
stos
mov
push
or
dec
jmp
or
dec
or
mov
dec
inc
stos
ucomiss
xchg
ins
or
call
int
cdq
xchg
mov
mov
push
inc
push
loopne
es
pop
dec
(bad)
jmp
leave
sbb
jmp
pop
loopne
ds
push
sar
movs
fmul
pop
dec
jno
inc
test
sbb
sbb
pop
dec
sbb
sbb
cs
clc
les
xchg
mov
or
dec
and
pushf
xor
add
enter
dec
adc
or
sar
not
outs
or
jmp
pop
dec
fldlg2
xchg
or
sbb
sbb
or
adc
sbb
xchg
dec
or
scas
stos
pop
dec
pop
add
js
xchg
pop
dec
(bad)
jle
dec
xor
popa
mov
pop
cmp
dec
pop
movs
dec
nop
repz
int3
and
xor
loopne
push
xchg
pop
dec
mov
xor
gs
pop
cmp
dec
pop
movs
sbb
pop
dec
adc
or
scas
outs
stc
ins
or
cmp
dec
pop
movs
xor
pop
dec
cmps
repz
int3
and
push
xchg
pop
dec
pop
pop
lahf
jo
mov
adc
sbb
out
or
xchg
adc
or
movs
push
aas
fsubr
xchg
mov
repz
mov
or
movs
push
and
outs
or
add
push
or
fsubr
push
movs
push
pop
(bad)
and
push
xchg
pop
dec
pop
or
pop
dec
scas
cld
sbb
or
push
xchg
pop
dec
pop
or
pop
dec
adc
or
movs
push
add
outs
or
xchg
pop
sbb
cmp
hlt
push
sar
sbb
arpl
or
inc
xchg
test
dec
cs
clc
les
xchg
mov
inc
test
sbb
dec
cs
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
retf
pop
dec
movs
nop
or
dec
cmps
int3
lahf
jb
jle
daa
or
out
jle
dec
dec
or
daa
retf
imul
cmps
das
dec
lahf
jb
jg
cmps
xor
sub
fistp
sub
hlt
dec
imul
dec
lods
repz
cmp
popa
pop
movs
call
or
cs
test
enter
or
dec
cs
pop
or
pop
or
iret
call
or
xchg
hlt
loopne
ror
shl
or
add
mov
movs
dec
cmp
add
dec
cs
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
or
push
mov
.byte
