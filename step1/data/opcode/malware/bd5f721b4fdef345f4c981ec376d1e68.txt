lods
sar
fwait
shl
out
adc
adc
fwait
sbb
inc
fwait
add
adc
fdiv
inc
imul
xlat
adc
mov
cdq
mov
fwait
sti
xor
fwait
out
pop
pusha
mov
(bad)
out
retf
xor
or
and
fwait
mov
pop
pop
fwait
sbb
pop
mov
loopne
mov
inc
das
sbb
lahf
mov
xchg
pop
sbb
dec
(bad)
shr
cdq
jns
jmp
jp
js
add
adc
xchg
clc
jmp
dec
ret
cld
rcl
inc
adc
inc
jmp
sbb
push
mov
adc
das
mov
cwde
push
mov
lods
pushf
adc
push
mov
rsqrtps
inc
fwait
out
sbb
imul
adc
ret
lahf
cwde
adc
ins
retf
jnp
fwait
cli
cld
pop
adc
aas
and
push
pushf
fwait
jmp
push
mov
sub
mov
add
adc
push
pushf
fwait
mov
push
mov
sub
push
mov
push
pushf
dec
loopne
arpl
ror
nop
sbb
mov
mov
mov
inc
out
pop
aam
popf
test
inc
out
arpl
leave
fwait
cwde
lahf
xor
nop
out
jmp
xchg
fwait
les
adc
fwait
test
push
jb
out
inc
and
inc
adc
jp
inc
push
test
inc
xchg
pop
sbb
adc
scas
mov
pushf
adc
sbb
adc
retf
adc
mov
mov
inc
loope
mov
shr
pop
pop
adc
inc
out
call
add
push
pushf
clc
lea
adc
xchg
out
mov
sub
mov
adc
aam
test
adc
dec
adc
sub
mov
adc
rsqrtps
pop
adc
push
adc
aad
hlt
or
push
pushf
js
add
adc
je
xor
cmp
mov
inc
adc
sub
jbe
sbb
adc
aam
jp
jp
js
mov
rsqrtps
push
cmp
test
out
mov
push
mov
push
pushf
cdq
call
addr16
and
repnz
int3
clc
lea
jbe
clc
mov
adc
pop
test
pop
mov
adc
leave
jns
cdq
inc
out
cdq
cmp
das
out
inc
cdq
pop
jp
jp
jp
jp
jp
js
adc
push
pushf
clc
inc
push
sbb
adc
arpl
and
jp
popf
cmp
das
out
inc
inc
hlt
sbb
adc
inc
inc
iret
clc
gs
pusha
addr16
adc
sbb
mov
test
pushf
adc
nop
sub
retf
adc
(bad)
xchg
dec
pop
popf
adc
movs
push
fmul
fstp
ss
pop
cld
mov
retf
scas
dec
push
jne
ss
adc
inc
adc
inc
not
xlat
das
pushf
pop
mov
jp
out
retf
gs
and
adc
xor
adc
rcl
cmps
out
jmp
jp
out
jmp
clc
jns
pushf
adc
(bad)
arpl
clc
add
mov
adc
rcl
ins
inc
adc
pop
pop
adc
inc
out
cdq
cli
in
xlat
mov
fmul
fstp
ss
int
call
cmp
xlat
xor
inc
xlat
or
retf
gs
les
adc
adc
shl
inc
gs
retf
mov
add
inc
clc
fsubr
adc
clc
popf
push
adc
shl
mov
fdivr
mov
adc
ss
pop
cld
fwait
inc
retf
gs
xlat
cli
call
pop
push
inc
cdq
fchs
ss
jo
(bad)
adc
call
std
adc
jne
adc
jne
adc
mov
pop
push
inc
cdq
fxtract
ss
jl
(bad)
adc
call
std
adc
push
inc
adc
sbb
scas
stos
movs
ror
fistp
call
sub
out
cli
in
push
scas
sub
in
adc
movs
xchg
cli
call
fistp
call
sub
das
out
cli
in
pop
push
mov
pop
xchg
ja
fcom
inc
sub
in
mov
out
inc
out
and
inc
adc
jmp
adc
jmp
inc
xor
nop
fwait
loop
pop
xchg
inc
out
(bad)
out
cmp
jbe
xchg
pusha
out
inc
out
icebp
movsx
arpl
xor
xchg
cdq
jle
push
out
call
sub
xchg
(bad)
cmp
pushf
out
inc
adc
ss
add
call
xchg
call
pushf
out
inc
push
movs
iret
ret
cli
pop
xchg
inc
out
(bad)
out
shl
out
inc
out
adc
xchg
mov
adc
xchg
mov
dec
(bad)
fnstcw
cmc
cmp
add
pop
dec
mov
fldlg2
push
or
pusha
cdq
cli
call
stc
call
cli
in
lods
out
ss
(bad)
adc
bnd
inc
shr
jle
fwait
rol
mov
ss
jge
pop
jno
add
push
xchg
loopne
xor
xchg
(bad)
mov
in
adc
clc
dec
jne
cdq
cli
hlt
adc
dec
jbe
leave
cdq
pop
xchg
jo
in
inc
retf
fwait
loop
pop
push
inc
xor
icebp
mov
shl
and
mov
adc
inc
out
cdq
pop
out
shl
jle
cmp
cdq
dec
dec
rcr
rcr
cwde
mov
stc
sub
imul
pushf
fwait
cli
sbb
cmps
adc
push
inc
cdq
fld1
ss
push
push
dec
cdq
fldlg2
loopne
(bad)
fnstcw
cmc
cmp
mov
inc
pop
gs
fwait
rol
pusha
push
test
adc
inc
inc
out
cdq
or
cdq
dec
sti
sbb
sub
pop
mov
and
sub
and
or
sub
jl
cli
in
adc
in
jne
cdq
cli
loopne
push
inc
and
dec
push
shr
cdq
jns
jmp
scas
jae
(bad)
jne
xlat
in
pushf
adc
call
gs
ret
adc
clc
cld
in
arpl
ss
pusha
fwait
ret
inc
xlat
dec
jg
mov
out
arpl
ins
pusha
push
call
out
arpl
jbe
leave
cdq
pop
inc
iret
inc
call
push
ret
cdq
adc
pop
out
retf
push
retf
cdq
jns
pushf
jp
js
movsx
iret
inc
inc
gs
jp
jp
clc
inc
fs
adc
scas
adc
loopne
sbb
lods
adc
in
adc
fnstcw
cmc
out
inc
retf
gs
scas
lds
xor
xlat
pop
sub
mov
mov
adc
fwait
test
in
sbb
push
mov
or
mov
call
sbb
push
inc
cdq
pop
clc
push
popa
pushf
adc
dec
(bad)
fnstcw
cmc
cmp
mov
gs
sbb
jmp
call
pushf
xchg
fst
jp
clc
and
mov
inc
hlt
add
clc
and
adc
rcr
adc
mov
cld
xchg
ror
dec
retf
repz
aad
not
xor
inc
push
jns
adc
sbb
and
adc
mov
int3
js
repz
xor
arpl
xor
arpl
adc
inc
out
cdq
cli
hlt
adc
retf
mov
pop
cdq
cli
lock
ror
adc
xchg
inc
push
sbb
inc
dec
sbb
adc
fstp
ss
and
mov
popa
pushf
adc
inc
retf
stos
sbb
ror
outs
mov
movs
ficom
inc
out
pushf
adc
pop
pop
xor
mov
adc
fnstcw
sbb
push
test
dec
repz
out
rcr
sub
mov
mov
adc
fwait
lods
out
jmp
outs
pushf
adc
pushf
xchg
push
pusha
rcl
mov
adc
xchg
pop
out
(bad)
out
out
out
jmp
adc
repnz
xor
int3
clc
cwde
jmp
out
cmp
nop
sub
retf
xor
mov
adc
pop
cdq
sbb
inc
out
arpl
out
fstp
xor
cwde
inc
xor
arpl
cdq
fldlg2
cmp
push
adc
adc
adc
loopne
std
adc
mov
enter
shl
ret
movs
ficom
xor
push
push
mov
ins
sub
adc
cdq
cli
call
pushf
adc
adc
adc
ss
xlat
cli
lock
adc
aas
ins
or
popf
cli
loopne
popf
retf
cld
scas
cdq
jnp
mov
mov
ins
mov
jecxz
call
xor
lds
gs
js
mov
adc
sar
mov
fwait
movs
out
stos
sub
adc
sbb
rol
cdq
jl
sbb
inc
out
arpl
mov
push
mov
xchg
adc
sbb
xlat
cdq
ins
or
out
inc
adc
arpl
(bad)
out
retf
es
sar
pushf
fs
add
(bad)
out
retf
push
fs
cli
in
push
inc
pop
push
cmp
arpl
mov
enter
dec
(bad)
fnstcw
cmc
cmp
nop
inc
jmp
add
cdq
js
push
dec
cdq
cmp
pop
xchg
(bad)
pushf
fwait
cli
sbb
(bad)
adc
xchg
xor
pushf
adc
push
pusha
adc
xchg
imul
cdq
ins
cmp
pop
call
cli
sbb
push
mov
sbb
jne
adc
push
mov
fcom
mov
push
pushf
clc
xchg
fs
adc
xchg
xchg
push
push
in
mov
push
pushf
adc
imul
sbb
xchg
stc
in
mov
cdq
pop
xchg
ret
fs
enter
aas
je
push
pushf
sti
not
pushf
xchg
(bad)
pushf
and
cdq
inc
and
sbb
mov
sti
mov
(bad)
sub
outs
mov
xchg
stc
in
mov
adc
and
pop
cmp
arpl
inc
xchg
stc
in
mov
fs
out
retf
and
push
pushf
clc
pop
jle
adc
call
aad
not
aad
not
aad
hlt
adc
mov
adc
in
adc
adc
adc
adc
clc
cmc
pusha
pushf
adc
push
out
call
gs
jge
pushf
popf
repnz
inc
inc
gs
out
retf
or
pushf
jp
popf
ftst
out
jp
js
repnz
inc
gs
shl
ds
das
mov
clc
mov
adc
dec
in
pop
inc
ss
and
mov
jle
adc
inc
retf
stos
outs
cmp
lods
enter
xchg
inc
out
(bad)
out
mov
adc
adc
inc
popf
sbb
inc
out
arpl
xchg
addr16
inc
dec
xchg
shl
adc
rcl
adc
adc
ss
push
out
inc
out
sbb
adc
popf
sbb
inc
out
arpl
push
pusha
out
inc
xchg
pop
sbb
sub
pushf
fs
outs
ja
adc
inc
inc
cmp
inc
xor
arpl
cdq
fldlg2
mov
jmp
out
inc
out
int3
js
repz
xor
jl
inc
out
int3
fwait
xchg
mov
ss
pusha
xchg
jl
fist
mov
dec
xchg
adc
out
arpl
mov
push
mov
inc
in
cli
in
adc
sar
xchg
mov
push
pushf
out
or
arpl
inc
clc
mov
aam
cdq
pop
push
lods
fs
inc
out
pop
xchg
jae
(bad)
out
sbb
cmp
mov
adc
inc
inc
cmp
inc
xor
arpl
cdq
fldlg2
mov
xchg
xchg
outs
pop
pushf
adc
xchg
and
mov
add
mov
out
(bad)
out
mov
adc
std
adc
xchg
inc
out
(bad)
out
out
clc
inc
out
out
pop
aam
cdq
pop
jbe
lods
cs
inc
out
adc
xchg
adc
(bad)
out
rcl
out
inc
sub
xchg
xchg
adc
adc
out
arpl
popf
sbb
inc
out
arpl
inc
cmp
mov
adc
aam
pop
sub
jns
cdq
inc
pop
push
pushf
adc
pushf
xchg
cmp
adc
adc
mov
adc
mov
pop
jp
js
repnz
adc
inc
pop
push
pushf
clc
lock
out
cmp
nop
sub
retf
aaa
not
xlat
fidivr
mov
out
arpl
and
inc
xchg
pop
sbb
out
arpl
mov
movs
arpl
inc
adc
jle
ficom
xlat
inc
cmp
mov
out
pop
aam
sub
call
test
add
arpl
inc
inc
je
dec
out
arpl
inc
adc
inc
out
arpl
mov
js
repnz
adc
inc
pop
push
pushf
clc
je
arpl
cmp
nop
sub
retf
aaa
not
xlat
test
and
inc
out
arpl
mov
pop
sbb
out
arpl
mov
movs
arpl
inc
adc
ret
jp
js
repnz
adc
inc
pop
push
pushf
clc
cmp
arpl
cmp
nop
sub
retf
aaa
not
xlat
test
and
inc
out
arpl
jbe
out
inc
xchg
pop
sbb
out
arpl
mov
movs
arpl
inc
adc
sub
ficom
xlat
inc
cmp
mov
out
pop
aam
sub
call
out
inc
out
popf
adc
xchg
jle
mov
adc
out
arpl
inc
adc
inc
out
arpl
mov
js
repnz
adc
inc
pop
push
pushf
clc
dec
in
out
cmp
nop
sub
retf
push
not
xlat
test
and
inc
out
arpl
retf
inc
xchg
pop
sbb
out
arpl
mov
js
repnz
adc
lods
inc
out
(bad)
out
call
out
pop
aam
sub
call
out
inc
out
popf
adc
and
sub
inc
out
pushf
gs
push
pushf
adc
xchg
popa
out
inc
out
int3
clc
jbe
arpl
out
(bad)
(bad)
mov
adc
mov
movs
ficom
ss
rcr
inc
out
(bad)
out
mov
adc
shl
xchg
inc
out
inc
out
int3
fwait
cmp
arpl
inc
inc
pop
sub
rcr
xchg
call
out
(bad)
out
out
fwait
sbb
inc
out
arpl
sub
lahf
cdq
fldlg2
ss
rcr
ins
inc
adc
adc
pushf
cdq
and
jl
cmp
inc
out
arpl
cmp
and
inc
out
popf
pop
xor
outs
fwait
out
adc
inc
out
mov
js
sub
inc
out
popf
adc
out
(bad)
out
out
popf
sbb
xor
inc
out
inc
out
int3
fwait
(bad)
out
retf
rol
xchg
imul
out
out
js
repz
adc
xchg
pop
out
(bad)
out
out
fwait
movs
out
stos
sub
adc
pop
cmp
adc
out
arpl
xchg
dec
out
inc
out
int3
fwait
xchg
or
mov
in
adc
sar
mov
adc
xchg
push
out
(bad)
out
out
fwait
sbb
inc
out
arpl
sub
xchg
call
adc
out
arpl
xchg
inc
out
inc
out
int3
fwait
xchg
retf
sub
push
pusha
cdq
cmp
jl
loope
mov
adc
cmp
popf
cmp
arpl
inc
inc
pop
xchg
push
out
(bad)
out
out
fwait
movs
out
call
sbb
data16
adc
adc
ss
sub
inc
out
adc
out
inc
out
pushf
out
or
arpl
inc
js
mov
adc
xchg
inc
out
(bad)
out
out
clc
lock
adc
aam
xchg
cmp
inc
out
arpl
push
add
clc
cdq
jge
adc
enter
shl
push
out
(bad)
out
xor
int3
js
repnz
xor
int3
clc
lds
adc
mov
xchg
or
inc
out
sahf
adc
adc
out
xor
int3
popf
or
jo
mul
jecxz
popf
sub
push
add
adc
clc
arpl
inc
inc
pop
das
inc
inc
mov
cli
in
sbb
adc
adc
inc
out
pushf
popf
cmp
hlt
nop
pop
push
pushf
fwait
cmp
pop
sub
mov
cdq
cli
in
sbb
adc
adc
inc
out
int3
fwait
cmp
pop
sub
lock
cli
in
and
lds
pushf
out
cdq
sbb
xchg
loope
mov
adc
inc
adc
mov
clc
mov
mov
out
cdq
cmp
inc
cdq
pop
jbe
xchg
in
out
inc
out
sahf
adc
adc
out
xor
int3
popf
or
out
inc
xchg
jo
mul
jecxz
popf
sub
out
arpl
push
adc
adc
mov
pop
das
inc
inc
call
sti
xchg
pushf
adc
adc
inc
out
pushf
popf
cmp
hlt
pusha
pop
push
pushf
fwait
cmp
sub
mov
cdq
cli
in
xchg
shl
adc
lods
aaa
out
(bad)
out
mov
adc
inc
inc
not
inc
movs
push
xchg
aaa
out
(bad)
out
out
fwait
movs
out
call
test
gs
xchg
(bad)
out
inc
out
adc
adc
adc
xchg
add
out
inc
sbb
adc
pushf
pop
cmp
pushf
adc
in
arpl
movs
hlt
out
inc
out
je
dec
out
arpl
clc
cdq
and
arpl
mov
in
arpl
mov
adc
mov
out
(bad)
out
mov
adc
movs
adc
(bad)
out
xor
int3
js
repnz
xor
int3
clc
in
jnp
adc
mov
jl
adc
inc
out
arpl
adc
gs
cdq
sbb
inc
out
arpl
or
inc
popf
sbb
in
arpl
xchg
fs
inc
out
adc
inc
je
aad
pushf
xchg
jnp
not
xchg
popa
out
inc
out
int3
js
repnz
xor
int3
clc
dec
jp
adc
mov
jl
and
retf
adc
xchg
cmp
(bad)
out
out
fwait
lods
out
jmp
adc
inc
out
arpl
inc
out
arpl
inc
sub
mov
cmp
fwait
sbb
xor
arpl
fwait
sbb
xor
arpl
out
sbb
inc
out
arpl
inc
sub
cld
inc
out
arpl
cmp
xchg
and
inc
out
arpl
retf
xchg
inc
out
(bad)
out
mov
cdq
pop
fwait
cmp
arpl
inc
inc
pop
and
xchg
xchg
add
arpl
inc
adc
sbb
xchg
dec
out
inc
out
int3
fwait
(bad)
out
retf
pop
hlt
adc
mov
pop
xchg
add
arpl
inc
adc
sbb
xchg
dec
out
inc
out
int3
fwait
(bad)
out
retf
xchg
inc
out
inc
out
int3
fwait
(bad)
out
retf
xchg
inc
out
inc
out
int3
fwait
(bad)
out
retf
add
adc
mov
pop
fwait
cmp
arpl
inc
inc
pop
and
xchg
stc
cmps
out
out
loopne
(bad)
fnstcw
cmc
aad
hlt
xchg
or
js
add
adc
mov
adc
xor
pop
cld
cmps
inc
retf
jne
xlat
cli
hlt
iret
cmp
dec
pop
ins
pop
cdq
fs
cdq
f2xm1
xor
jl
ret
push
inc
adc
clc
and
mov
adc
aam
clc
cmc
out
out
pop
sub
mov
test
and
cdq
fxch
xor
inc
cdq
ret
push
inc
out
arpl
inc
sti
mov
adc
rcl
jne
xlat
fxch
cmp
xor
jge
(bad)
loop
pushf
sti
sbb
fldlg2
inc
out
arpl
loopne
mov
mov
adc
cdq
pop
inc
retf
push
mov
jmp
js
movs
ficom
aad
not
xlat
aas
mov
jp
clc
call
(bad)
jmp
adc
xchg
adc
xlat
ret
dec
jbe
leave
cdq
pop
xchg
jo
in
inc
pop
dec
mov
les
inc
adc
rol
call
into
cmp
cwde
cmp
pushf
test
setl
dec
icebp
adc
xchg
call
xor
mov
push
pushf
adc
jo
(bad)
adc
shr
pushf
adc
fmul
mov
call
mov
cdq
push
es
pushf
sbb
adc
inc
adc
mov
sub
mov
push
pushf
push
push
jns
adc
push
pushf
and
mov
pop
cmp
cwde
push
ss
push
push
mov
adc
jmp
call
adc
dec
xchg
mov
(bad)
fst
mov
adc
inc
adc
sbb
adc
sahf
adc
push
pushf
stc
mov
adc
push
cmps
(bad)
fst
scas
fs
and
ficom
mov
adc
rcr
scas
mov
mov
adc
add
push
pushf
stc
xchg
out
arpl
dec
adc
cwde
fs
adc
mov
(bad)
fst
mov
out
push
cmps
(bad)
fst
mov
fwait
and
outs
adc
(bad)
fst
mov
push
adc
pop
mov
mov
adc
stc
jl
inc
out
push
cmps
(bad)
fst
mov
stc
pop
adc
(bad)
fst
mov
adc
mov
stc
sub
inc
out
push
cmps
(bad)
fst
mov
stc
push
adc
fcom
(bad)
(bad)
adc
push
mov
stc
adc
inc
out
arpl
inc
adc
adc
sar
sbb
fdivr
mov
pushf
adc
cld
add
adc
cdq
ja
push
cdq
jle
xchg
or
push
pushf
push
push
std
pushf
adc
adc
sar
push
pushf
stc
adc
mov
push
pushf
stc
jne
pushf
adc
cld
add
adc
stc
add
adc
pop
adc
mov
adc
pop
cdq
frndint
rcr
adc
mov
adc
adc
push
pushf
xor
jo
adc
clc
adc
call
xchg
cmps
mov
sbb
xchg
fs
pop
arpl
and
sub
loopne
sbb
adc
xchg
pop
cmps
std
adc
(bad)
sti
stos
out
mov
sti
mov
push
(bad)
fst
mov
adc
inc
adc
sbb
adc
sbb
fdivr
mov
pop
stc
jecxz
pushf
adc
fdiv
adc
dec
adc
fcomp
cmp
pushf
adc
adc
pusha
push
push
pushf
cdq
ja
jge
cli
loopne
shl
push
pushf
xor
aaa
push
imul
adc
pop
lock
cmps
(bad)
adc
adc
adc
mov
push
pushf
test
outs
pushf
adc
adc
pop
or
sub
retf
push
es
pushf
adc
xchg
mov
adc
add
jmp
push
retf
adc
mov
out
gs
nop
xchg
or
push
pushf
nop
fcomp
loopne
call
mov
cdq
hlt
and
xchg
pop
pop
adc
dec
nop
loope
mov
out
gs
push
pushf
adc
xor
pushf
sti
cmps
cdq
ins
push
xor
nop
cmp
push
adc
adc
sub
push
pushf
out
mov
mov
cmp
movs
adc
int
sbb
adc
pushf
sti
cmps
cdq
ins
push
xor
nop
cmp
push
adc
adc
mov
mov
mov
(bad)
(bad)
adc
adc
retf
arpl
ss
enter
push
mov
push
sbb
adc
dec
push
shr
cdq
jns
out
inc
retf
scas
movs
pop
cmp
(bad)
aam
mov
in
adc
movs
std
adc
sbb
jo
adc
xlat
hlt
add
dec
cld
adc
adc
cmp
pop
cld
adc
adc
in
adc
ss
hlt
sub
push
cmp
push
pop
add
or
lods
(bad)
(bad)
adc
dec
add
sbb
les
jbe
leave
cdq
pop
xchg
jo
in
inc
retf
stos
repz
std
push
ss
shl
retf
movs
ficom
xlat
xchg
es
mov
out
mov
pushf
xlat
cli
clc
test
mov
enter
jne
adc
push
xor
cli
loopne
push
dec
push
pushf
adc
xchg
ja
test
in
pushf
out
mov
xchg
stc
sar
imul
push
add
jl
stc
les
adc
mov
fs
mov
adc
pop
push
movlps
movs
adc
mov
adc
ins
add
pushf
adc
clc
int3
js
adc
inc
inc
add
sbb
adc
push
add
adc
push
sbb
adc
adc
adc
push
arpl
clc
sbb
mov
inc
arpl
popf
fldenv
cmp
adc
call
adc
cmp
mov
jp
out
retf
dec
fst
pushf
xchg
push
loope
adc
leave
ret
out
cdq
or
popf
cli
clc
int3
out
retf
push
pop
inc
arpl
xor
js
mov
adc
jmp
push
inc
arpl
daa
pushf
fldlg2
shl
fwait
cli
sbb
push
dec
fwait
rol
ss
fs
(bad)
pushf
and
leave
cld
ss
je
mov
popf
fld1
out
popf
fprem
out
out
jmp
push
dec
inc
imul
inc
gs
out
stos
and
push
mov
push
and
hlt
adc
pop
cdq
fldlg2
jbe
leave
cdq
pop
inc
and
inc
test
mov
push
pushf
out
retf
out
inc
add
ret
dec
jl
adc
inc
jmp
fwait
rcr
call
out
mov
cwde
cs
adc
push
stos
adc
gs
or
sub
adc
push
stos
adc
mov
or
sub
adc
adc
mov
cwde
mov
jns
arpl
mov
(bad)
mov
cwde
adc
mov
mov
xchg
xchg
xchg
sub
pushf
adc
jmp
jge
sbb
inc
xchg
jbe
mov
mov
xchg
jmp
cli
mov
sub
rcr
xchg
cmps
mov
adc
inc
jnp
pop
xor
jns
push
pushf
inc
push
inc
rcl
pop
sub
jnp
add
add
ret
pushf
inc
out
clc
enter
adc
out
xor
mov
inc
xchg
jbe
xchg
rcr
ss
push
push
mov
clc
cwde
fwait
jmp
adc
push
arpl
add
sub
ret
mov
push
arpl
push
daa
arpl
inc
out
cdq
or
nop
sub
gs
fs
aas
sub
adc
pop
adc
nop
adc
call
sbb
mov
call
sub
sub
lods
sub
call
clc
mov
mov
xor
cmp
cwde
xchg
jg
adc
adc
gs
cdq
inc
pop
sbb
mov
call
mov
cdq
inc
xchg
je
aas
sub
adc
push
adc
pop
or
sub
retf
pop
mov
gs
xchg
push
out
xor
mov
inc
xchg
jbe
xchg
rcr
cli
call
fcom
mov
adc
inc
inc
cdq
mov
aas
sub
adc
inc
adc
push
mov
xchg
je
aas
sub
adc
cs
nop
adc
mov
xchg
cmps
mov
push
mov
fs
adc
or
(bad)
adc
inc
(bad)
adc
mov
adc
mov
cmps
popa
out
inc
dec
ret
ror
cdq
pop
xchg
jo
in
inc
retf
out
mov
fwait
jmp
out
push
pop
sbb
adc
arpl
mov
xchg
arpl
mov
push
pop
push
mov
je
mov
enter
adc
retf
movs
ficom
mov
leave
add
sahf
fwait
add
retf
ss
sbb
inc
out
(bad)
sub
pop
sub
sub
call
adc
in
pushf
sti
mov
inc
adc
in
push
add
cwde
mov
inc
push
pusha
mov
sbb
xchg
bound
mov
adc
popf
fmul
mov
call
mov
ss
dec
popf
fmul
mov
add
adc
cdq
bound
push
out
ss
retf
adc
sar
cdq
cli
call
adc
pop
inc
inc
cdq
mov
mov
xchg
push
out
xchg
call
popf
sar
cdq
cli
call
cwde
sub
in
inc
xchg
cmps
jmp
add
push
fs
out
inc
xchg
pop
sbb
dec
(bad)
fnstcw
cmc
pop
dec
mov
dec
mov
clc
(bad)
jmp
pop
iret
arpl
mov
adc
arpl
out
arpl
jns
outs
inc
pushf
xchg
mov
pop
sbb
pop
iret
arpl
mov
xchg
outs
inc
sbb
mov
adc
or
lods
jg
inc
out
pushf
lods
pop
sub
aas
sub
jo
push
pushf
adc
adc
mov
or
push
out
arpl
inc
jnp
pop
xor
sub
push
pushf
inc
push
mov
adc
out
arpl
(bad)
adc
out
inc
jnp
push
xor
into
add
pushf
inc
jle
sahf
cdq
sub
add
push
int
adc
out
arpl
call
sbb
dec
jmp
mov
jmp
aam
adc
adc
inc
(bad)
sbb
push
out
arpl
mov
or
push
out
arpl
pop
adc
sub
xor
xchg
and
cmps
or
push
out
arpl
pop
adc
add
inc
add
les
arpl
mov
nop
and
pusha
out
arpl
mov
or
mov
out
arpl
inc
out
cdq
or
fwait
sub
inc
out
inc
cdq
dec
rcl
repz
adc
adc
xchg
push
out
push
xor
adc
mov
adc
adc
mov
jmp
clc
xchg
pop
adc
in
out
inc
dec
popf
cmp
inc
out
pushf
out
mov
xchg
cmp
push
out
arpl
push
pushf
pushf
adc
adc
push
jmp
inc
movs
inc
iret
inc
out
je
inc
out
arpl
inc
sbb
xchg
cmp
xor
sbb
inc
out
ja
mov
adc
rcr
lahf
inc
inc
fwait
test
cmp
cwde
sub
lods
inc
jmp
adc
xchg
arpl
mov
cdq
inc
adc
ss
sbb
inc
out
ja
rcr
mov
cmps
arpl
clc
test
inc
out
lds
inc
adc
popa
out
arpl
xchg
xchg
xchg
loop
arpl
inc
adc
arpl
push
and
adc
adc
out
inc
sar
xor
mov
cs
pushf
cdq
sub
jae
inc
xchg
cmp
push
out
arpl
xor
push
repnz
adc
mov
sbb
cdq
xor
pop
test
arpl
jle
sahf
cdq
shl
jle
sahf
adc
in
popf
fidivr
sbb
out
inc
xchg
and
push
out
arpl
mov
out
cdq
or
nop
add
inc
out
inc
adc
dec
xlat
dec
and
clc
cmp
mov
into
arpl
rcr
adc
out
arpl
ss
add
inc
out
pop
xchg
pop
into
arpl
xor
add
inc
out
pop
shl
test
inc
fwait
sbb
sub
cdq
cmp
sbb
les
inc
cdq
sbb
pusha
out
arpl
popf
sbb
inc
movs
inc
iret
inc
out
je
out
pushf
fwait
cmp
inc
out
inc
sub
lods
pusha
out
arpl
fwait
sbb
pusha
out
arpl
inc
adc
int3
pusha
out
arpl
inc
adc
rcl
adc
sub
sbb
fwait
or
push
sbb
js
adc
iret
inc
out
ja
inc
adc
xchg
cmps
sub
jae
inc
sar
xor
inc
iret
inc
out
mov
imul
out
ss
and
push
pushf
pop
or
pop
repnz
sbb
inc
hlt
adc
and
sbb
jg
sbb
adc
cmp
popf
adc
out
arpl
or
mov
fs
loope
mov
adc
xor
push
add
adc
xor
ss
js
inc
out
pop
xchg
sbb
arpl
mov
out
arpl
inc
out
adc
adc
cmp
nop
xchg
jmp
clc
mov
add
loopne
clc
cwde
nop
xchg
jmp
clc
mov
sbb
sti
jb
cdq
or
pop
or
pop
repnz
retf
aas
xchg
aas
into
inc
out
popf
pop
or
mov
gs
adc
sti
and
out
inc
sti
push
cdq
dec
sti
xchg
fwait
cmp
jae
inc
adc
call
pop
iret
arpl
int
sbb
sbb
arpl
mov
into
arpl
jle
sahf
fwait
add
pop
pop
mov
adc
sub
mov
adc
sub
gs
mov
adc
fcom
out
inc
sbb
nop
loope
mov
xchg
outs
inc
int3
out
or
inc
out
inc
out
sub
pusha
out
arpl
leave
jmp
nop
nop
add
inc
out
inc
adc
push
cmp
push
fwait
sub
jae
inc
sar
ss
pop
stc
mov
pop
pusha
fwait
cmp
adc
in
out
arpl
inc
adc
out
mov
stc
mov
inc
out
sbb
dec
jmp
mov
jmp
aam
adc
adc
inc
dec
ret
ror
cdq
pop
xchg
jo
in
inc
retf
fwait
loop
pop
push
inc
adc
(bad)
mov
cdq
(bad)
ss
fs
cli
out
popf
popf
ret
and
push
add
cli
call
adc
enter
lods
std
adc
jecxz
popf
loope
xor
and
jecxz
nop
cmps
ja
pop
fistp
xchg
rcl
out
mov
sti
mov
inc
sub
add
cli
out
cwde
sti
mov
fldz
mov
bound
shr
scas
ins
mov
adc
mov
pop
sub
sub
add
mov
out
popf
pop
or
sub
ret
push
in
adc
ja
fld1
mov
fist
call
push
retf
push
inc
adc
sar
fwait
xchg
inc
adc
sbb
cdq
gs
fs
ret
push
inc
adc
push
mov
lock
xchg
inc
adc
arpl
mov
fist
call
adc
push
arpl
push
cmp
adc
gs
fist
xchg
nop
cli
out
cwde
nop
cli
in
popf
nop
ret
pop
cmp
(bad)
fldlg2
mov
pop
sub
sub
add
cli
out
popf
sti
mov
fldlg2
mov
bound
cli
call
(bad)
dec
jne
cdq
cli
rcl
adc
gs
nop
cli
out
popf
pop
or
dec
loope
push
shr
cdq
jns
in
inc
retf
fwait
retf
mov
cmp
adc
adc
js
adc
push
inc
pushf
adc
loope
fadd
sbb
mov
xlat
ja
aas
sub
dec
retf
push
mov
pushf
sti
mov
outs
jno
loope
push
shr
cdq
jns
mov
pushf
adc
into
adc
jp
jae
rol
cmp
inc
out
inc
cdq
pop
popf
retf
out
retf
xchg
mov
clc
pushf
inc
mov
adc
pusha
out
arpl
pop
out
arpl
pop
pushf
adc
out
call
loopne
push
shr
cdq
jns
call
adc
jo
adc
xlat
not
aad
arpl
jp
clc
int
pushf
adc
fstp
ss
pop
cld
scas
inc
retf
test
in
fwait
xchg
jae
scas
adc
mov
adc
adc
adc
push
loope
adc
out
jmp
adc
push
pop
push
mov
mov
pop
mov
inc
not
jmp
adc
inc
aad
je
in
adc
rcl
out
cdq
ftst
xlat
not
cmp
nop
adc
sbb
push
mov
fchs
push
push
adc
cdq
fchs
inc
gs
inc
inc
gs
inc
push
mov
adc
adc
js
fldlg2
loopne
(bad)
fnstcw
cmc
out
inc
iret
inc
call
inc
sbb
adc
adc
nop
mov
jp
jp
js
adc
clc
rol
adc
gs
xchg
imul
jp
jp
inc
je
in
adc
cmp
arpl
sub
adc
jmp
adc
inc
iret
out
retf
clc
and
adc
adc
push
inc
inc
not
xlat
loopne
push
mov
adc
mov
adc
ss
fs
cli
call
pushf
adc
ror
cdq
pop
inc
int3
inc
call
gs
adc
adc
nop
mov
jp
jp
js
adc
clc
sub
mov
call
pop
out
inc
gs
and
scas
jp
jp
jp
inc
je
out
adc
out
out
jmp
inc
push
add
adc
adc
dec
not
and
ret
dec
jbe
leave
cdq
pop
xchg
jo
in
inc
retf
fwait
retf
push
inc
(bad)
in
pop
push
pushf
adc
pop
xchg
cmps
mov
sub
sbb
in
out
retf
push
pop
push
pushf
clc
stc
inc
pushf
adc
pop
cdq
jmp
clc
lea
cmp
mov
fs
(bad)
pop
or
inc
xlat
and
add
aam
push
cmps
dec
mov
je
inc
sti
xchg
nop
sub
gs
push
cmps
ins
mov
ins
inc
xlat
cmp
mov
adc
aam
fldlg2
ss
fs
cli
in
jne
cdq
fchs
ss
pusha
dec
loope
push
shr
cdq
jns
push
add
inc
call
gs
xlat
cli
in
xchg
inc
cdq
fld1
ss
push
push
dec
cdq
fldlg2
xlat
sub
mov
adc
and
(bad)
pop
or
inc
xlat
and
or
adc
aam
push
movs
out
stc
hlt
ss
push
pushf
clc
cmp
xchg
icebp
in
test
dec
(bad)
fnstcw
cmc
cmp
lods
inc
jmp
test
dec
repz
jbe
push
jle
mov
xchg
stc
clc
mov
popf
loope
xor
and
jecxz
xchg
outs
fisub
popf
gs
or
call
adc
inc
sti
mov
cdq
cli
enter
cmps
(bad)
mov
fcom
mov
out
sahf
gs
nop
icebp
out
mov
gs
test
sub
addr16
pop
fwait
cli
sbb
cmps
call
adc
inc
sti
mov
pop
or
cmp
adc
clc
sbb
inc
adc
adc
jge
adc
enter
rcr
inc
adc
mov
out
cdq
cli
les
pop
or
pop
inc
mov
sub
xchg
shl
rcl
pushf
adc
mov
pop
pop
push
cdq
push
cmp
cld
xchg
cmps
repnz
push
dec
adc
hlt
sbb
adc
call
push
mov
mov
leave
repnz
pop
adc
hlt
pop
push
mov
sub
fwait
leave
sbb
rcr
loopne
(bad)
fnstcw
sub
or
mov
stos
lock
call
or
repnz
cmp
xchg
pop
sub
or
xchg
or
and
das
or
push
or
das
or
or
push
or
das
or
or
gs
sub
or
mov
stos
dec
repz
adc
mov
das
xchg
pop
sub
or
mov
and
jg
or
das
sub
or
jno
sub
or
push
cdq
(bad)
in
inc
sar
sub
or
fdivr
pushf
adc
or
mov
mov
adc
xor
or
das
adc
mov
inc
xchg
sub
lods
add
or
rcr
fld
or
cld
or
das
sbb
mov
or
cmp
pushf
sub
jmp
sbb
or
das
cmp
or
popa
out
mov
lahf
fcom
repnz
cmp
repz
mov
jl
or
das
or
add
adc
jp
sub
or
das
or
xchg
adc
or
or
stos
lock
call
or
data16
cmp
das
or
or
inc
or
das
or
or
out
sub
or
das
or
dec
or
das
or
sbb
cmp
and
inc
or
repnz
sub
or
mov
xchg
adc
or
or
stos
dec
repz
adc
data16
cmp
das
or
or
inc
or
das
or
or
out
sub
or
das
or
dec
or
das
or
push
test
das
and
inc
or
repnz
sub
or
das
or
ja
sub
inc
adc
inc
jmp
fstp
cdq
fstp
push
pusha
ins
fcom
mov
mov
push
pusha
cdq
cli
cld
adc
cld
ss
js
cli
in
cli
xlat
cli
loopne
adc
pushf
adc
inc
je
dec
out
arpl
rcl
rcr
nop
ret
gs
sti
mov
dec
pop
pushf
adc
push
jl
inc
outs
pushf
adc
pop
pushf
adc
cdq
cmp
imul
rcl
push
pop
mov
rcl
and
sub
ss
pop
sub
mov
shr
xchg
ficom
mov
cwde
push
xor
adc
adc
cmps
mov
or
cmp
mov
dec
jne
cdq
cli
int3
adc
js
adc
push
inc
rcl
mov
inc
adc
popf
cli
loop
cmps
jmp
pop
mov
push
outs
inc
ss
clc
mov
aam
fldlg2
shr
xchg
jns
cli
out
cli
loopne
cmps
cli
sbb
sub
push
add
arpl
dec
push
shr
cdq
jns
push
sub
inc
call
sbb
loopne
not
clc
mov
pushf
adc
inc
adc
fidivr
xchg
rol
mov
ss
jge
leave
push
loopne
div
push
inc
cdq
jns
mov
adc
pop
lods
rcl
sahf
adc
out
jmp
out
inc
xchg
pop
sbb
rcl
adc
call
mov
lods
ficom
xchg
add
mov
push
inc
xchg
cmps
ret
idiv
lods
ficom
ss
lahf
sub
call
adc
pop
cdq
fld
ss
neg
adc
lahf
push
push
inc
je
icebp
adc
add
cdq
cli
in
ja
ss
fwait
mov
add
and
cdq
pop
xchg
cli
in
cwde
mov
lods
ficom
mov
adc
mov
lods
ficom
ss
fs
test
ins
adc
pop
cdq
addr16
call
std
adc
adc
les
push
mov
push
pushf
sub
call
rcl
mov
in
adc
cmps
arpl
jle
mov
push
push
pushf
clc
gs
pushf
adc
push
push
clc
ins
pop
pushf
adc
adc
rcr
xchg
(bad)
ss
sbb
adc
push
hlt
test
push
pushf
cdq
adc
push
pushf
inc
push
popa
rcl
mov
fsub
push
mov
or
push
ja
pop
cdq
addr16
in
add
lods
add
and
adc
sub
in
(bad)
push
les
push
mov
pop
adc
(bad)
ss
fwait
mov
add
and
mov
lods
std
adc
adc
cdq
inc
adc
pop
sub
sar
test
adc
sbb
ss
cdq
pusha
adc
pop
or
rcr
test
ficom
xor
inc
lods
std
adc
out
cdq
(bad)
ss
sbb
push
adc
adc
jge
or
cdq
inc
adc
inc
je
inc
out
arpl
aad
not
aad
not
xlat
adc
push
popf
aad
mov
adc
push
push
inc
arpl
inc
arpl
clc
xchg
pop
mov
jb
adc
js
and
adc
clc
rcr
adc
dec
jbe
leave
cdq
pop
xchg
jo
mov
inc
and
lods
pop
int3
xchg
push
aaa
scas
adc
push
pushf
mov
mov
cdq
ins
and
pop
clc
in
pushf
adc
inc
adc
jmp
adc
xchg
js
adc
out
inc
out
pop
push
inc
adc
push
cmp
sub
stos
dec
pop
fld
int
jle
jbe
inc
pop
pop
jmp
outs
dec
adc
cwde
sub
sbb
inc
adc
push
inc
sub
data16
sbb
inc
out
arpl
push
loope
adc
adc
push
jns
cdq
out
inc
out
scas
(bad)
cmp
arpl
inc
and
xchg
push
in
arpl
ss
adc
out
js
mov
adc
in
push
pushf
popf
cmp
popa
out
inc
inc
je
hlt
adc
mov
js
adc
in
arpl
out
clc
hlt
pop
mov
in
arpl
ss
loopne
(bad)
arpl
test
fdivr
adc
clc
sub
adc
adc
xchg
dec
in
arpl
out
js
or
push
pushf
out
or
popa
out
inc
clc
pop
pop
mov
in
arpl
push
dec
fist
mov
push
pushf
inc
xlat
int
push
mov
out
arpl
inc
xlat
adc
cdq
pop
popf
cmp
popa
out
inc
inc
hlt
int3
pop
push
pushf
popf
cmp
(bad)
out
inc
inc
hlt
adc
adc
std
adc
rcr
pushf
js
icebp
ficom
xor
int3
js
adc
mov
push
pushf
js
icebp
ficom
xlat
adc
mov
xchg
push
jmp
shr
cdq
jns
out
inc
retf
fwait
retf
mov
cmps
aad
mov
push
pushf
xchg
js
ficom
mov
popf
fld1
out
popf
fldlg2
out
jp
js
adc
adc
adc
mov
jmp
adc
cdq
pop
cdq
dec
xchg
push
out
call
gs
cli
call
not
aad
arpl
out
jmp
adc
mov
adc
inc
adc
(bad)
call
cdq
inc
out
cdq
cli
in
adc
clc
adc
adc
adc
out
retf
gs
out
jmp
clc
mov
pushf
adc
test
ror
cdq
pop
inc
and
push
jne
adc
popf
fld
out
jmp
out
retf
push
mov
or
dec
jl
adc
scas
pop
sbb
inc
mov
inc
adc
inc
not
xlat
push
pushf
adc
jp
out
retf
gs
pushf
pop
mov
adc
rcl
cmps
out
jmp
jp
out
jmp
clc
lods
pop
pushf
adc
gs
clc
pop
pop
pushf
adc
call
arpl
clc
dec
pop
mov
dec
push
shr
cdq
jns
push
add
inc
xor
mov
cli
or
xor
inc
adc
(bad)
call
xlat
adc
inc
hlt
or
out
jmp
clc
and
shr
adc
shl
xor
inc
jmp
out
jmp
clc
xor
shr
sbb
gs
clc
fstp
adc
gs
clc
in
pushf
adc
sbb
push
dec
cdq
pop
dec
loope
pop
inc
ss
int
jmp
stos
hlt
cdq
inc
adc
xchg
mov
adc
xor
adc
mov
out
inc
mov
push
pushf
sub
call
fdivr
(bad)
jp
js
adc
aad
hlt
jno
push
pushf
clc
mov
in
dec
push
mov
adc
jg
mov
mov
dec
push
mov
adc
xchg
js
jmp
fnstcw
js
jae
loope
adc
xor
adc
cdq
pop
inc
iret
inc
call
sbb
push
in
pushf
fwait
ret
sub
sub
sbb
mov
cmp
adc
out
retf
pop
not
pushf
xchg
jnp
adc
fwait
jmp
call
(bad)
cdq
inc
cmp
pop
push
aas
sub
adc
rcr
ins
mov
call
adc
push
adc
push
mov
mov
mov
cdq
fldlg2
rcl
push
mov
ja
ss
push
mov
je
cli
adc
addr16
pop
sbb
sbb
out
jmp
adc
cdq
fldlg2
rcl
push
mov
fs
mov
pop
sti
mov
inc
out
cdq
fldlg2
ss
dec
in
pop
inc
ss
pop
cld
stos
inc
retf
dec
xchg
xlat
cli
loopne
fild
sbb
adc
adc
outs
neg
xlat
mov
not
or
ftst
xor
ins
cdq
jge
pop
cdq
jmp
cmps
mov
sbb
pop
sub
xchg
ins
popa
aaa
adc
push
test
bound
pop
push
inc
adc
inc
pop
sub
cdq
fs
es
cdq
imul
pushf
adc
out
rcl
adc
xchg
js
retf
fwait
ret
js
icebp
ficom
call
adc
aam
jbe
push
inc
pop
sub
sub
call
dec
sti
xchg
fwait
cli
loopne
sar
dec
ret
ror
cdq
pop
test
adc
adc
loop
mov
jl
cmp
inc
out
arpl
cmp
jo
inc
out
pushf
popf
cmp
arpl
inc
inc
arpl
clc
int
inc
out
pop
aam
cdq
pop
xchg
jl
(bad)
adc
and
sbb
inc
out
pushf
gs
je
cld
adc
mov
clc
inc
push
mov
out
popa
out
pop
or
inc
out
arpl
inc
fwait
and
inc
in
arpl
enter
and
test
popa
out
xor
inc
aad
je
std
adc
inc
test
inc
mov
xchg
dec
out
inc
out
adc
js
adc
mov
adc
ss
push
out
inc
out
adc
cdq
cmp
arpl
inc
cdq
pop
xchg
ja
fcom
inc
cdq
pop
jp
fwait
or
inc
in
arpl
inc
inc
je
jae
arpl
pop
push
pushf
out
retf
pop
stc
adc
pop
push
pushf
out
or
arpl
inc
clc
dec
push
mov
clc
sub
mov
adc
mov
repnz
inc
movs
pusha
out
inc
out
je
cli
adc
cli
adc
es
xchg
inc
adc
fst
mov
adc
lods
inc
out
(bad)
out
call
adc
clc
leave
push
pushf
adc
mov
jl
int3
push
mov
adc
mov
repnz
inc
movs
pusha
out
inc
out
je
cli
adc
pop
push
pushf
out
or
arpl
inc
clc
rcl
pop
aam
clc
test
adc
mov
pop
jmp
ficom
inc
movs
pusha
out
inc
out
je
cli
adc
sti
adc
es
xchg
inc
adc
fcom
mov
adc
lods
inc
out
(bad)
out
call
adc
clc
popa
push
pushf
adc
mov
retf
add
pushf
fwait
cmp
arpl
inc
inc
hlt
xor
pushf
inc
push
rcr
adc
enter
shl
adc
es
xchg
inc
adc
jle
mov
out
arpl
add
aam
js
icebp
ficom
inc
movs
pusha
out
inc
out
je
sti
adc
sti
adc
es
xchg
inc
adc
jle
mov
out
arpl
cmp
aam
js
icebp
ficom
inc
movs
pusha
out
inc
out
je
sti
adc
mov
xor
xchg
adc
xchg
adc
je
sti
adc
es
inc
xor
pusha
out
inc
out
retf
js
icebp
ficom
call
adc
aam
clc
ins
push
mov
adc
inc
lock
xor
retf
clc
push
push
pushf
adc
xchg
inc
out
inc
out
int3
out
retf
xchg
inc
out
(bad)
out
out
js
lock
adc
clc
ins
push
pushf
adc
mov
adc
sbb
cmp
cdq
ins
pushf
clc
cmp
mov
adc
add
arpl
inc
inc
hlt
cs
push
pushf
inc
push
(bad)
fist
mov
vmovups
aam
in
inc
cdq
pop
clc
rcl
adc
sbb
cmp
cdq
ins
lods
js
repnz
adc
inc
out
(bad)
out
push
popf
fist
mov
pop
fist
mov
adc
adc
pop
push
pushf
out
or
arpl
inc
clc
hlt
push
mov
clc
mov
sbb
jmp
(bad)
js
repnz
inc
movs
pusha
out
inc
out
je
cld
adc
ror
xlat
xchg
out
jmp
out
inc
out
int3
js
lock
out
clc
pusha
push
mov
clc
inc
push
mov
adc
mov
lock
inc
movs
pusha
out
inc
out
je
std
adc
std
adc
es
xchg
inc
adc
jle
mov
out
arpl
imul
clc
sub
sbb
cmp
cdq
ins
pushf
clc
sbb
mov
adc
add
arpl
inc
inc
hlt
cs
push
pushf
inc
push
ins
ficom
mov
ins
mov
adc
out
popa
out
mov
adc
mov
test
fs
xchg
and
inc
out
adc
out
inc
out
pushf
sti
iret
fwait
sbb
inc
in
arpl
cmp
call
xlat
fwait
and
inc
in
arpl
add
sub
cdq
fs
es
xchg
jge
into
cdq
inc
test
es
push
aam
out
shl
test
out
inc
out
adc
inc
xor
retf
js
icebp
ficom
xor
retf
clc
popa
push
pushf
adc
mov
cmp
lods
inc
in
arpl
cmp
sub
inc
out
arpl
retf
xchg
mov
fwait
sbb
inc
out
arpl
je
push
mov
adc
mov
push
xchg
fst
mov
adc
adc
pop
push
pushf
out
or
arpl
inc
clc
cmp
mov
clc
rcl
and
mov
pop
jmp
ficom
inc
movs
pusha
out
inc
out
je
(bad)
adc
(bad)
adc
es
xchg
inc
adc
jle
mov
out
arpl
jmp
aam
xchg
cmp
arpl
inc
nop
pushf
adc
out
arpl
inc
sub
rol
arpl
cmp
cdq
sbb
inc
in
arpl
mov
adc
push
mov
out
arpl
lock
inc
out
pushf
pop
cmp
adc
adc
ja
pushf
sub
call
pop
pop
mov
call
sbb
inc
in
arpl
retf
dec
pop
push
pushf
popf
cmp
arpl
inc
inc
je
call
pushf
xchg
jnp
adc
cmp
arpl
sub
adc
jmp
and
inc
in
arpl
jl
sbb
mov
cmps
sbb
inc
in
arpl
inc
out
int3
clc
or
xchg
push
clc
sbb
arpl
cmp
cwde
cdq
cmp
arpl
inc
out
sub
inc
out
arpl
retf
movs
dec
out
popa
out
xor
pusha
out
inc
out
int3
js
lock
out
clc
test
mov
clc
mov
adc
mov
pop
jmp
ficom
inc
movs
pusha
out
inc
out
je
call
pushf
xchg
jnp
sbb
adc
mov
adc
xchg
adc
hlt
fistp
pushf
out
or
arpl
inc
clc
xchg
push
mov
clc
pop
das
mov
adc
mov
repnz
inc
movs
pusha
out
inc
out
je
adc
xchg
jnp
arpl
push
inc
mov
in
out
arpl
cmp
popf
cmp
pushf
out
inc
inc
arpl
jmp
out
pop
aam
cdq
sbb
inc
out
arpl
jg
sbb
test
ficom
inc
movs
pusha
out
inc
out
je
adc
xchg
jnp
sbb
adc
mov
adc
xchg
adc
hlt
dec
pop
push
pushf
out
or
arpl
inc
clc
clc
das
mov
clc
mov
sbb
jmp
(bad)
js
lock
inc
movs
pusha
out
inc
out
je
adc
xchg
jnp
je
adc
pushf
adc
out
xchg
inc
adc
jle
mov
out
arpl
movs
das
pushf
adc
xchg
js
lock
inc
movs
pusha
out
inc
out
je
adc
xchg
jnp
adc
rcl
mov
adc
xchg
adc
je
adc
pushf
adc
out
inc
xor
pusha
out
inc
out
retf
js
icebp
ficom
call
adc
aam
clc
adc
mov
adc
mov
lock
inc
movs
pusha
out
inc
out
je
adc
je
adc
pushf
adc
out
xchg
inc
adc
jl
mov
out
arpl
cmp
aam
clc
sub
pushf
adc
jmp
std
adc
inc
out
(bad)
out
push
dec
mov
sbb
sti
test
adc
adc
es
xchg
inc
adc
mov
adc
inc
pop
lods
inc
out
(bad)
out
call
adc
clc
inc
sub
mov
lock
inc
movs
pusha
out
inc
out
je
adc
je
adc
test
es
xchg
inc
adc
jle
mov
out
arpl
push
sub
xchg
test
push
pushf
adc
adc
out
ss
or
push
pushf
out
or
arpl
inc
clc
push
sub
mov
sbb
mov
jmp
(bad)
js
repnz
inc
movs
pusha
out
inc
out
je
adc
xchg
jnp
hlt
or
pushf
out
or
arpl
inc
clc
or
mov
test
aas
mov
xchg
and
inc
out
adc
adc
adc
adc
pop
push
pushf
out
or
arpl
inc
clc
shr
popf
sbb
inc
in
arpl
xchg
pusha
out
inc
out
int3
js
lock
out
clc
sub
clc
pusha
sub
adc
mov
pop
jmp
ficom
inc
movs
pusha
out
inc
out
je
adc
xchg
jnp
hlt
adc
pushf
out
or
arpl
inc
clc
xchg
sub
mov
pop
mov
pushf
adc
sbb
cmp
cdq
ins
lods
js
repnz
adc
inc
out
(bad)
out
push
int
adc
mov
adc
cdq
dec
xchg
js
mov
lods
inc
out
(bad)
out
call
adc
clc
xor
adc
mov
shr
adc
sbb
cmp
cdq
ins
lods
js
repnz
adc
inc
out
(bad)
out
push
popf
mov
sbb
sbb
cdq
cmp
pop
js
iret
ficom
inc
movs
pusha
out
inc
out
je
adc
xchg
jnp
je
adc
test
es
xchg
inc
adc
jle
mov
out
arpl
stc
sub
adc
xchg
clc
mov
sbb
cmp
cdq
ins
pushf
clc
ins
sub
adc
add
arpl
inc
inc
hlt
cs
push
pushf
inc
push
std
cmps
adc
rol
out
sub
inc
out
arpl
inc
sub
mov
jp
jp
js
adc
clc
in
mov
out
popa
out
ss
shl
inc
out
(bad)
out
push
in
movs
adc
in
out
inc
inc
int3
out
or
arpl
inc
out
sub
inc
in
arpl
imul
je
inc
out
je
mov
pushf
out
or
arpl
inc
clc
test
mov
inc
je
xchg
pushf
fwait
cmp
arpl
inc
dec
ret
ror
cdq
pop
xchg
jo
mov
aas
loop
(bad)
cdq
and
pop
(bad)
cli
out
pushf
sti
test
pop
pop
or
inc
xlat
fwait
inc
push
mov
out
arpl
cmp
pushf
js
iret
ficom
xor
int3
js
adc
inc
xchg
pop
or
push
arpl
xor
bound
jp
js
iret
std
adc
pop
pusha
push
pushf
js
adc
inc
js
into
std
adc
retf
pushf
js
into
ficom
xlat
adc
inc
out
pop
aam
cdq
and
pop
dec
jbe
leave
cdq
pop
xchg
jo
mov
inc
and
aad
mov
inc
out
cdq
cmp
pop
xchg
sbb
push
mov
movs
adc
adc
out
xor
xchg
fwait
mov
adc
out
ss
in
inc
out
adc
push
mov
pop
xchg
jns
retf
daa
pushf
adc
cdq
push
test
adc
xchg
call
movs
pop
in
arpl
push
mov
sbb
adc
adc
ficomp
inc
cdq
and
pop
inc
push
gs
adc
out
arpl
or
clc
daa
mov
in
arpl
inc
movs
add
inc
out
je
mov
pushf
fwait
jmp
out
xor
xor
lock
inc
out
adc
adc
ficomp
inc
xchg
pop
mov
mov
and
test
arpl
mov
popf
sbb
movs
adc
adc
clc
or
adc
adc
out
arpl
mov
sub
std
adc
adc
jmp
cmp
mov
inc
push
or
stc
fcom
pushf
adc
call
mov
out
arpl
js
cwde
adc
out
arpl
out
popf
sbb
fldcw
test
arpl
or
sub
cwde
popa
out
inc
out
sub
or
adc
out
clc
mov
inc
out
pop
aam
cdq
sbb
gs
inc
push
mov
adc
adc
mov
out
arpl
add
add
cmp
xchg
inc
out
arpl
out
clc
sub
out
arpl
inc
xchg
imul
jp
popf
cmp
je
xchg
pushf
xchg
jnp
sbb
adc
and
inc
out
fcom
mov
out
arpl
mov
xlat
sbb
inc
out
arpl
mov
out
arpl
retf
or
xlat
cmp
(bad)
out
inc
adc
js
sbb
push
fdiv
inc
dec
adc
out
popf
sbb
aad
not
aad
not
aad
not
xor
int3
jp
clc
les
mov
jle
mov
in
arpl
push
or
sub
xchg
clc
in
inc
out
adc
in
inc
out
hlt
add
pushf
js
into
ficom
xor
int3
clc
mov
aam
(bad)
cmp
out
inc
adc
ss
adc
out
js
into
std
adc
adc
movs
js
adc
adc
inc
adc
xchg
aam
arpl
adc
inc
xlat
adc
adc
adc
lods
das
in
arpl
mov
loopne
adc
test
mov
adc
xchg
inc
out
arpl
out
inc
je
mov
pushf
jp
js
into
std
adc
xchg
inc
out
arpl
out
clc
or
sub
jmp
in
inc
out
pushf
sti
test
out
arpl
push
jge
adc
cmp
add
inc
out
pushf
popf
cmp
stos
mov
pushf
xchg
js
call
mov
adc
inc
out
arpl
xchg
and
adc
cmp
inc
out
je
mov
pushf
fwait
cmp
cdq
inc
out
cdq
cmp
out
inc
cdq
pop
dec
loope
push
sar
xchg
jo
in
inc
retf
fwait
loop
and
add
cdq
inc
adc
out
jmp
adc
inc
bound
mov
xor
pop
jbe
inc
pusha
out
retf
pop
mov
pushf
cdq
jge
adc
sbb
jbe
inc
dec
pop
sub
pop
sub
adc
inc
push
outs
pop
sub
popf
fadd
xchg
inc
not
push
xor
pop
test
adc
dec
cdq
pop
and
loope
mov
push
jo
mov
or
cdq
dec
push
int3
clc
mov
aam
out
retf
loopne
rcr
adc
adc
cli
out
adc
fadd
xchg
lods
adc
cmps
fldz
xor
mov
leave
in
xor
out
clc
lock
push
bound
or
adc
sub
popf
fadd
mov
adc
dec
not
popf
cli
call
hlt
pop
jmp
pushf
jp
jp
clc
in
and
jmp
adc
push
inc
inc
retf
and
ss
js
js
je
mov
pushf
fwait
cli
call
pop
inc
ss
and
mov
and
loop
and
inc
adc
out
cdq
cmp
pop
xlat
cmp
adc
out
arpl
xchg
pop
lock
out
int3
js
into
ficom
push
or
pop
sbb
sbb
dec
adc
adc
lock
push
stc
test
mov
shr
or
push
lock
out
arpl
clc
adc
mov
call
fdivr
(bad)
sbb
adc
inc
inc
adc
out
inc
je
nop
adc
inc
and
inc
arpl
push
test
sbb
movs
push
lock
out
arpl
clc
test
mov
sbb
mov
and
call
dec
ret
ror
cdq
pop
test
xor
adc
mov
sub
(bad)
sub
adc
loopne
loopne
(bad)
iret
js
adc
mov
out
fcom
inc
cdq
pop
jp
cdq
inc
adc
je
add
arpl
mov
inc
jge
mov
adc
dec
not
out
xor
push
(bad)
xlat
pop
jge
mov
out
arpl
pop
test
mov
cmp
xchg
adc
xchg
adc
hlt
loopne
push
pushf
popf
cmp
jl
inc
inc
je
mov
pushf
xchg
jnp
je
mov
pushf
test
es
xchg
inc
adc
scas
adc
adc
lods
mov
js
into
std
adc
lods
mov
clc
jo
mov
clc
push
and
adc
mov
repnz
xor
int3
clc
push
and
push
pop
cmps
adc
adc
xchg
mov
clc
dec
and
clc
adc
mov
adc
mov
repnz
xor
int3
clc
adc
aam
clc
fldenv
pushf
adc
sbb
cmp
cdq
ins
xchg
clc
enter
and
mov
into
popf
add
jl
inc
inc
hlt
dec
popa
push
pushf
popf
add
jl
inc
inc
je
mov
pushf
xchg
jnp
arpl
js
icebp
std
adc
xchg
mov
js
icebp
std
adc
xchg
mov
clc
mov
mov
cdq
ins
cmp
pop
clc
mov
sbb
cmp
cdq
ins
stos
js
repnz
adc
xchg
mov
clc
mov
aam
js
icebp
std
adc
xchg
mov
clc
nop
and
clc
push
and
adc
mov
repnz
xor
int3
clc
pop
and
mov
xchg
pushf
lock
out
int3
clc
ins
and
dec
adc
clc
adc
mov
adc
mov
and
mov
popf
and
pop
out
arpl
dec
inc
push
mov
out
arpl
jge
adc
cmp
popf
sbb
pop
out
arpl
ins
scas
adc
sub
adc
xchg
adc
hlt
loopne
push
pushf
popf
cmp
jl
inc
inc
je
lea
pushf
xchg
jnp
and
std
adc
pusha
out
arpl
std
adc
xchg
mov
clc
test
mov
clc
ins
and
adc
mov
repnz
xor
int3
clc
mov
pushf
adc
xchg
js
lock
xor
int3
clc
inc
and
jns
cld
adc
adc
mov
pop
jmp
ficom
xor
int3
clc
jno
pushf
adc
xchg
out
retf
xchg
mov
js
into
std
adc
xchg
mov
clc
adc
mov
clc
lock
adc
mov
repnz
xor
int3
clc
xor
aam
js
lock
xor
int3
clc
leave
and
lea
pushf
adc
sbb
cmp
cdq
ins
stos
js
repnz
adc
xchg
mov
clc
int3
and
test
adc
xchg
jo
inc
out
adc
adc
adc
xchg
js
mov
lods
mov
js
into
std
adc
lods
mov
clc
jo
mov
clc
push
and
adc
mov
repnz
xor
int3
clc
push
and
popa
iret
ficom
xor
int3
clc
imul
xchg
cdq
dec
out
cdq
cmp
inc
out
inc
cdq
pop
clc
cmp
pushf
adc
sbb
cmp
cdq
ins
stos
js
repnz
adc
xchg
mov
clc
cmp
mov
clc
cld
and
adc
mov
and
mov
popf
and
pop
out
arpl
dec
inc
push
mov
out
arpl
push
lods
adc
rol
popf
sbb
pop
out
arpl
inc
lods
adc
adc
adc
adc
adc
adc
adc
shl
pusha
out
arpl
mov
out
arpl
inc
mov
mov
call
int3
popf
add
jl
inc
inc
arpl
push
cmp
sub
pusha
out
arpl
jns
pushf
adc
xchg
push
stos
adc
jmp
adc
cwde
xor
adc
inc
adc
adc
mov
je
xchg
adc
mov
in
arpl
ss
sbb
inc
out
adc
adc
adc
pop
mov
adc
nop
addr16
inc
cdq
pop
js
enter
lods
mov
mov
out
arpl
cmp
inc
cdq
pop
jp
jp
popf
cmp
jmp
adc
xor
int3
js
into
ficom
xlat
movs
inc
push
mov
nop
je
pop
out
arpl
mov
dec
adc
adc
inc
inc
adc
out
clc
call
call
inc
movs
cmp
inc
out
iret
popf
cmp
sbb
arpl
mov
or
mov
push
pushf
popf
cmp
(bad)
out
inc
inc
je
xchg
adc
inc
inc
adc
out
clc
dec
ds
out
arpl
inc
xchg
imul
adc
cmp
je
xchg
adc
lahf
adc
inc
out
arpl
inc
out
arpl
pushf
xlat
cmp
(bad)
out
inc
adc
inc
out
arpl
retf
xor
(bad)
out
inc
adc
dec
not
out
xlat
adc
out
clc
pop
cmc
inc
out
lds
inc
inc
adc
out
jp
jp
jp
jp
jp
jp
popf
sbb
inc
out
arpl
adc
adc
mov
mov
je
mov
call
cmp
inc
out
hlt
add
pushf
js
into
ficom
xor
int3
clc
gs
mov
cmp
out
inc
adc
ss
in
jmp
out
adc
out
inc
out
int3
js
into
ficom
push
pop
mov
mov
xchg
adc
mov
out
arpl
xor
out
mov
out
xchg
test
mov
adc
xlat
adc
adc
out
arpl
clc
ins
cmp
inc
pushf
adc
adc
jp
push
pushf
popf
cmp
je
or
sbb
out
inc
adc
mov
out
arpl
clc
loope
inc
out
pop
aam
sbb
lods
pushf
adc
test
inc
popf
sbb
popa
mov
mov
out
arpl
movs
or
inc
out
je
imul
in
mov
xchg
in
jmp
out
adc
in
inc
out
je
xchg
adc
push
and
hlt
sbb
pushf
inc
push
add
add
shr
cmp
sbb
mov
adc
lea
in
arpl
cmp
cmps
inc
rcr
test
arpl
cmp
arpl
cmp
nop
sti
mov
out
arpl
inc
movs
or
inc
out
je
push
sbb
out
pop
pushf
adc
clc
mov
xchg
and
arpl
mov
call
adc
out
clc
inc
cmp
movs
cmp
inc
out
je
xchg
adc
cmp
inc
cdq
pop
out
or
cmp
in
arpl
loopne
(bad)
fnstcw
pushf
inc
ss
pop
cld
scas
inc
retf
dec
xchg
scas
ret
bound
add
cmp
retf
dec
xchg
adc
mov
clc
or
mov
call
iret
inc
push
and
je
xchg
adc
mov
aaa
pushf
adc
clc
call
call
xor
inc
aad
retf
dec
fcom
aad
not
push
xor
pop
jp
inc
je
xchg
adc
dec
not
popf
cli
in
int3
inc
push
inc
mov
outs
cwde
adc
ss
ins
cdq
js
ret
ror
cdq
pop
test
add
adc
shl
adc
xlat
aad
arpl
clc
cwde
cmp
out
adc
shl
ss
hlt
out
mov
pushf
popf
cmp
ins
out
inc
inc
retf
cmp
mov
sbb
dec
out
arpl
push
sub
inc
xchg
pop
sbb
out
arpl
mov
sti
nop
jp
inc
je
xchg
adc
loope
pop
inc
ss
pop
cld
stos
inc
and
sub
cdq
inc
out
cdq
cli
call
fldz
mov
call
xchg
cmps
cli
out
int3
js
into
ficom
xor
inc
push
lds
(bad)
out
jp
js
adc
std
adc
adc
jg
int3
js
int
adc
push
jb
push
mov
pop
or
push
jb
aad
hlt
push
mov
cmp
push
mov
adc
adc
out
fldz
mov
fldz
cmp
xchg
ins
xor
shr
cdq
jns
out
inc
retf
scas
pop
adc
inc
ss
div
push
pusha
cdq
jns
pushf
jp
jp
jp
jp
jp
jp
jp
jp
js
adc
aad
test
push
mov
mov
inc
mul
inc
and
je
xchg
adc
inc
and
je
xchg
adc
cli
call
retf
jp
out
test
clc
lds
pushf
adc
adc
jp
out
test
clc
aad
pushf
adc
adc
jp
out
test
clc
in
pushf
adc
adc
jp
out
test
clc
cmc
cmp
mov
jp
out
mov
add
clc
test
mov
jp
out
mov
mov
adc
jp
out
mov
mov
adc
adc
adc
jp
out
test
clc
inc
aaa
pushf
adc
adc
jp
out
test
clc
push
aaa
pushf
adc
adc
jp
out
test
clc
popa
aaa
pushf
adc
adc
jp
out
test
clc
jno
pushf
adc
dec
push
shr
scas
sub
adc
xlat
aad
arpl
push
dec
mov
test
adc
stc
cmp
jp
out
test
clc
in
aaa
pushf
adc
in
arpl
push
sub
(bad)
(bad)
adc
stc
cmp
jp
out
test
clc
xchg
aaa
pushf
adc
in
arpl
push
add
mov
stc
cmp
jp
out
test
clc
mov
pushf
adc
call
imul
inc
and
je
cdq
adc
xlat
stc
sbb
jp
out
mov
push
mov
adc
in
inc
and
je
cdq
adc
xlat
stc
sbb
jp
out
mov
add
clc
and
mov
and
je
cdq
adc
xlat
stc
sbb
jp
out
mov
add
clc
add
mov
and
je
cdq
adc
xlat
stc
sbb
jp
out
mov
ss
cdq
jns
push
or
inc
add
and
pop
js
int
adc
xchg
clc
sbb
arpl
ss
hlt
cld
bound
inc
push
mov
inc
xchg
pop
add
add
jp
inc
push
test
mov
loopne
inc
push
cdq
mov
out
mov
push
mov
push
pusha
cmp
in
fwait
cli
call
not
aad
hlt
adc
icebp
ficom
xlat
icebp
inc
push
mov
adc
adc
aad
arpl
aad
int3
jp
fld1
xchg
push
ins
xchg
push
je
jp
jp
js
adc
xlat
aam
push
mov
adc
adc
mov
(bad)
(bad)
adc
adc
adc
mov
arpl
xlat
sbb
xchg
push
ins
xchg
push
je
jp
jp
js
adc
xlat
int3
jge
mov
adc
adc
mov
mov
adc
adc
adc
adc
adc
adc
aad
not
xlat
lods
sahf
adc
jp
jp
clc
mov
(bad)
aad
retf
out
test
clc
cmp
adc
mov
arpl
aad
hlt
es
jp
js
adc
mov
adc
adc
mov
mov
adc
adc
test
(bad)
adc
adc
fdiv
xlat
xor
jp
js
adc
push
pushf
js
int
adc
adc
adc
ss
jo
js
pushf
out
mov
push
mov
push
cmp
mov
adc
mov
adc
mov
adc
adc
mov
(bad)
(bad)
adc
adc
test
(bad)
adc
adc
fdiv
xlat
push
and
mov
adc
std
adc
retf
pushf
jp
clc
pop
xor
adc
add
push
pushf
jp
out
test
jp
out
test
jp
jp
js
adc
mov
icebp
ficom
xlat
xchg
inc
push
mov
xor
adc
add
xchg
pop
imul
pushf
js
int3
ficom
aad
hlt
push
mov
pop
mov
int3
std
adc
adc
push
popf
adc
push
pushf
clc
mov
adc
adc
mov
arpl
xlat
cmp
adc
adc
mov
icebp
ficom
xlat
xchg
inc
push
mov
xor
adc
cmp
out
mov
push
mov
jo
push
mov
adc
sub
mov
xor
mov
nop
int3
js
icebp
ficom
xlat
xchg
inc
push
mov
xor
mov
out
not
inc
and
not
inc
and
test
sub
idiv
adc
out
js
int3
std
adc
retf
pushf
jp
clc
xor
mov
push
pushf
cdq
inc
out
cdq
cli
clc
adc
and
aad
arpl
aad
hlt
xchg
mov
adc
mov
inc
hlt
inc
arpl
js
int
adc
adc
adc
aad
arpl
aad
arpl
aad
div
or
adc
adc
js
int3
ficom
xlat
retf
mov
xor
mov
and
push
mov
push
cmp
mov
adc
mov
adc
mov
adc
adc
mov
(bad)
(bad)
adc
adc
test
(bad)
adc
adc
fdiv
aad
hlt
pop
mov
adc
out
js
int3
std
adc
retf
pushf
jp
clc
and
mov
push
pushf
jp
out
test
jp
out
test
jp
js
adc
adc
aas
inc
hlt
int3
pop
push
pushf
js
int3
ficom
xlat
adc
xor
push
pushf
jp
out
test
jp
out
test
jp
js
adc
adc
aas
inc
hlt
sbb
ficom
xlat
adc
xor
push
pushf
xchg
dec
outs
mov
mov
and
push
mov
jo
push
mov
js
adc
adc
std
adc
adc
pushf
js
adc
mov
adc
adc
test
(bad)
adc
adc
cld
mov
adc
or
je
in
adc
aas
inc
hlt
int3
pop
push
pushf
js
int3
ficom
xlat
adc
xor
push
pushf
jp
out
test
jp
out
test
jp
js
adc
adc
aas
inc
hlt
repz
pushf
js
retf
ficom
aad
je
sahf
adc
push
addr16
inc
cdq
adc
pop
clc
das
jmp
push
shr
cdq
jns
push
add
inc
add
rol
leave
adc
inc
gs
clc
std
out
out
ss
hlt
cld
bound
inc
push
and
pop
add
add
test
inc
mov
push
jo
js
pushf
out
mov
add
clc
mov
push
dec
inc
retf
xor
mov
and
not
jmp
push
push
cmp
loopne
jp
jp
js
adc
xlat
int3
jge
mov
adc
adc
xor
mov
and
push
mov
sub
push
inc
cmp
loopne
clc
clc
inc
aad
test
pushf
nop
out
js
retf
std
adc
retf
pushf
jp
clc
sub
mov
push
pushf
jp
out
test
jp
out
test
js
adc
cli
loopne
clc
fild
inc
aad
hlt
sbb
icebp
ficom
xlat
retf
mov
xor
mov
jp
jp
jp
jp
jp
jp
jp
js
adc
aad
test
mov
xchg
js
sahf
adc
and
mov
sbb
pushf
out
mov
push
mov
jo
push
mov
jp
jp
js
adc
inc
hlt
int3
pop
push
pushf
js
int3
ficom
aad
je
lahf
adc
ss
hlt
push
push
pushf
jp
js
adc
(bad)
fst
push
lods
adc
js
int3
std
adc
adc
push
popf
adc
push
pushf
clc
sbb
pushf
adc
sub
test
test
js
adc
(bad)
fst
push
cdq
adc
sti
mov
jp
js
adc
(bad)
adc
adc
and
jp
out
test
js
adc
aad
hlt
adc
icebp
ficom
xlat
xchg
inc
push
mov
setl
sbb
cmp
and
pop
jp
out
test
jp
out
test
js
adc
xlat
mov
lahf
adc
inc
hlt
int3
pop
push
pushf
js
int3
ficom
aad
je
mov
(bad)
fst
push
push
out
inc
jp
out
mov
push
mov
push
cmp
mov
adc
mov
adc
mov
adc
adc
adc
mov
mov
adc
adc
adc
mov
arpl
aad
div
xchg
pushf
adc
adc
adc
int3
ficom
xlat
retf
mov
push
pushf
adc
add
out
mov
push
mov
push
cmp
mov
adc
mov
adc
mov
adc
adc
adc
mov
(bad)
(bad)
adc
adc
test
(bad)
adc
adc
fdiv
aad
hlt
test
pop
adc
out
js
int3
std
adc
retf
pushf
jp
clc
movs
push
mov
push
pushf
jp
out
test
jp
out
test
jp
js
adc
adc
mov
push
pushf
js
int
adc
adc
adc
ss
not
inc
and
not
inc
and
test
in
pushf
adc
adc
push
xlat
adc
std
adc
retf
pushf
jp
clc
pop
or
sbb
pushf
jp
out
test
jp
out
test
jp
js
adc
add
adc
mov
adc
adc
mov
adc
adc
aad
arpl
aad
arpl
aad
idiv
aad
test
pushf
nop
out
js
icebp
std
adc
adc
pushf
js
adc
mov
adc
adc
adc
mov
arpl
aad
div
test
pushf
nop
out
js
icebp
std
adc
adc
pushf
js
adc
mov
adc
adc
test
(bad)
adc
adc
fdiv
xlat
mov
mov
adc
std
adc
jmp
inc
or
adc
mov
pushf
clc
jg
arpl
push
iret
push
push
fst
pushf
dec
loope
pop
inc
ss
pop
cld
cmps
inc
retf
pop
mov
adc
ss
jo
js
pushf
js
adc
aad
hlt
adc
sbb
adc
mov
add
adc
clc
xor
mov
jmp
push
mov
or
js
push
popf
cli
loopne
popf
cli
in
popf
cli
in
int3
out
retf
sub
mov
jb
out
inc
xchg
pop
or
call
je
js
shr
pop
not
inc
gs
js
retf
ficom
xlat
inc
inc
push
mov
gs
clc
shl
out
cmp
test
mov
ins
fs
or
adc
inc
arpl
js
movs
std
adc
adc
mov
out
cmp
test
dec
push
shr
cdq
jns
push
adc
adc
sbb
lods
loopne
(bad)
sbb
adc
mov
push
mov
out
arpl
jns
adc
adc
mov
adc
nop
ret
gs
js
mov
mov
clc
fmul
mov
adc
add
enter
popf
sbb
inc
out
arpl
cmp
(bad)
adc
scas
js
mov
mov
clc
nop
or
adc
add
add
push
mov
out
arpl
in
adc
lea
mov
pushf
out
inc
out
int3
clc
popa
pop
pushf
adc
ins
arpl
retf
pop
push
push
pushf
popf
cmp
arpl
inc
inc
je
test
pushf
xchg
dec
or
adc
lea
mov
pushf
out
inc
out
int3
clc
adc
ins
arpl
retf
xchg
push
push
pushf
popf
cmp
arpl
inc
inc
je
test
pushf
nop
ret
gs
js
mov
mov
clc
loopne
mov
sbb
add
iret
sub
adc
arpl
jne
adc
cdq
sbb
inc
out
arpl
mov
lea
mov
pushf
out
inc
out
int3
clc
std
pop
pushf
adc
ins
arpl
add
xor
adc
inc
inc
je
test
pushf
nop
ret
gs
js
mov
mov
clc
mov
mov
push
jmp
push
mov
out
arpl
in
mov
mov
js
retf
std
adc
pop
fs
pushf
popf
cmp
arpl
inc
inc
hlt
adc
push
pushf
clc
sub
sub
mov
adc
push
and
clc
call
sar
or
cdq
ins
adc
pop
stc
(bad)
out
arpl
loope
push
sar
inc
iret
inc
call
pop
fistp
mov
push
pusha
cdq
js
imul
test
mov
inc
iret
clc
mov
aam
sbb
xchg
jp
inc
je
cmps
adc
mov
xchg
jo
mov
pushf
inc
jmp
mov
ins
cdq
jns
ins
adc
pop
js
mov
jno
inc
out
int3
clc
test
pushf
adc
xchg
mov
adc
jecxz
out
arpl
inc
adc
add
mov
sbb
dec
out
arpl
sbb
rcl
adc
ss
js
inc
out
adc
call
scas
js
mov
push
out
out
out
clc
js
mov
call
lea
mov
jno
inc
out
int3
clc
jne
pushf
adc
lods
outs
call
scas
js
mov
push
out
out
out
clc
sub
mov
call
lea
mov
jno
inc
out
int3
clc
sub
imul
xchg
jl
inc
out
adc
call
scas
js
mov
push
out
out
out
clc
in
add
dec
call
lea
mov
jno
inc
out
int3
clc
jmp
lods
outs
call
scas
js
mov
push
out
out
out
clc
mov
loopne
not
out
ss
sbb
dec
call
lea
mov
jno
inc
out
int3
clc
test
lods
outs
call
scas
js
mov
push
out
out
out
clc
pusha
add
adc
mov
lea
mov
jno
inc
out
int3
clc
pop
add
adc
lods
outs
call
scas
js
mov
push
out
out
out
clc
push
add
adc
adc
lods
outs
call
scas
js
movs
std
adc
xchg
push
out
out
out
clc
xor
mov
call
lea
movs
ficom
xor
int3
clc
xor
adc
pusha
cmp
mov
out
arpl
adc
inc
xchg
push
mov
pushf
js
mov
adc
lahf
cs
mov
out
pop
aam
cdq
sbb
dec
out
arpl
inc
and
sbb
inc
out
pushf
pop
cmp
lahf
adc
cdq
pop
xchg
jns
xchg
adc
js
mov
adc
out
arpl
push
call
xchg
xchg
add
pushf
adc
sahf
adc
out
arpl
mov
aaa
adc
in
arpl
test
sbb
mov
out
pusha
out
inc
sub
adc
arpl
inc
out
pushf
cdq
dec
adc
popf
sbb
inc
out
arpl
and
sbb
inc
out
arpl
lea
cmp
fs
xchg
clc
ror
adc
shr
or
inc
shr
jle
fwait
rol
mov
ss
js
cmps
lods
inc
call
stos
adc
(bad)
fst
mov
mov
adc
cmp
mov
out
arpl
and
in
adc
xlat
cmova
popf
sbb
inc
out
arpl
add
pop
or
adc
in
fs
inc
inc
je
stos
adc
mov
out
arpl
add
mov
out
arpl
icebp
mov
mov
adc
xchg
inc
call
push
aam
popf
sbb
inc
out
arpl
sub
in
inc
out
arpl
cmp
fs
inc
inc
hlt
jmp
fs
inc
inc
je
test
pushf
xchg
jnp
not
xor
int3
clc
jne
pushf
adc
adc
in
push
pushf
popf
cmp
pusha
out
inc
inc
je
and
arpl
mov
retf
adc
in
arpl
cmp
cdq
inc
push
adc
xchg
inc
call
popf
loopne
(bad)
pop
lods
inc
call
sbb
mov
call
or
std
adc
cmc
gs
pushf
popf
cmp
fs
inc
inc
je
test
pushf
xchg
jnp
hlt
lahf
or
in
(bad)
out
inc
inc
je
lods
adc
inc
inc
je
stos
adc
inc
sti
mov
out
inc
nop
and
nop
mov
inc
(bad)
sbb
mov
enter
xchg
and
dec
out
arpl
enter
add
adc
fs
inc
out
arpl
out
js
retf
adc
out
clc
sub
mov
popf
sbb
inc
out
arpl
in
adc
out
arpl
inc
inc
je
lods
adc
inc
popf
loopne
scas
inc
not
add
in
out
arpl
inc
inc
arpl
push
mov
sbb
inc
out
arpl
mov
and
inc
out
arpl
lods
push
ins
mov
add
mov
call
pushf
out
or
fs
inc
js
arpl
adc
adc
adc
adc
mov
out
arpl
out
sub
inc
out
arpl
cmp
aam
cdq
jl
pop
pop
cmp
popa
out
inc
out
sub
inc
out
arpl
xor
pushf
adc
(bad)
in
jle
adc
push
enter
fld
push
jmp
pop
adc
inc
adc
adc
adc
inc
call
jns
sar
mov
ss
test
push
pushf
jp
js
adc
adc
inc
sbb
inc
je
scas
adc
mov
sbb
and
push
pushf
test
dec
pushf
adc
adc
out
rcr
out
(bad)
fst
sub
pushf
adc
inc
add
clc
or
mov
adc
push
inc
lea
mov
adc
clc
icebp
add
and
adc
inc
inc
arpl
clc
pusha
add
cmp
push
out
arpl
and
out
inc
xchg
pop
add
pop
sbb
mov
sub
sbb
retf
movs
ficom
inc
adc
and
adc
sbb
jl
push
add
adc
ret
bnd
inc
shr
jle
fwait
rol
mov
ss
js
pop
push
ss
jns
das
std
inc
out
popf
sti
mov
add
mov
mov
dec
pop
fld
int
jle
jbe
inc
pop
pop
jmp
outs
dec
adc
cdq
dec
cwde
or
aas
xchg
das
std
inc
out
popf
call
xchg
data16
sbb
push
inc
mov
mov
adc
push
jns
xor
(bad)
cmp
adc
shl
xchg
aas
std
inc
out
int3
js
mov
adc
fadd
mov
out
arpl
and
popf
cmp
adc
out
clc
call
xchg
and
arpl
out
clc
push
aam
out
adc
out
clc
cld
xlat
inc
out
pop
aam
cdq
inc
and
pop
jp
popf
sbb
push
cmp
cmp
xchg
or
inc
out
adc
pop
mov
pushf
js
retf
xlat
cmp
std
adc
push
and
clc
add
pushf
adc
shl
ins
mov
(bad)
arpl
xor
and
jecxz
mov
movs
gs
pushf
js
mov
adc
(bad)
inc
push
mov
adc
adc
inc
popf
test
test
dec
jbe
cdq
cmp
jl
aaa
retf
hlt
sbb
pushf
js
retf
xlat
xor
mov
adc
lods
pop
std
arpl
xor
and
jecxz
mov
mov
push
pushf
js
mov
adc
(bad)
inc
push
mov
adc
adc
add
arpl
xor
and
jecxz
xchg
pop
in
ret
jp
jp
jp
jp
jp
js
adc
push
pushf
clc
adc
pushf
adc
push
sub
jp
jp
inc
je
mov
pushf
xchg
jl
xchg
mov
pop
pushf
adc
push
and
xor
int3
clc
fstp
pushf
adc
popf
sub
inc
out
pop
fadd
sbb
mov
adc
gs
inc
int3
popf
add
arpl
clc
jo
mov
push
and
aad
hlt
loopne
push
pushf
out
retf
(bad)
mov
pushf
xlat
cli
test
pop
mov
inc
adc
out
clc
adc
mov
jmp
cmp
arpl
sub
adc
jmp
and
out
popf
and
inc
gs
and
adc
push
pop
inc
not
xlat
loopne
push
mov
xchg
xchg
adc
xor
and
pop
popf
mov
cdq
f2xm1
push
and
push
mov
adc
adc
outs
mov
icebp
xchg
adc
mov
adc
mov
sbb
jl
lahf
outs
mov
fst
sar
adc
clc
xor
mov
xlat
fldcw
sti
add
mov
adc
mov
push
and
mov
pushf
out
mov
push
mov
jp
jp
jp
jp
js
adc
hlt
icebp
bound
js
int
adc
adc
adc
xlat
test
mov
clc
les
mov
shr
out
inc
xchg
pop
adc
cdq
xchg
adc
nop
out
xlat
test
mov
adc
outs
gs
pushf
inc
push
sub
sbb
jbe
adc
adc
out
xor
xor
inc
out
adc
adc
test
std
inc
out
pop
xchg
adc
arpl
mov
sti
jl
mov
std
arpl
out
popf
sbb
jl
push
mov
adc
inc
or
js
adc
inc
xchg
pop
or
xor
pushf
xlat
mov
adc
inc
out
adc
shl
xchg
xor
inc
out
int3
jp
jp
js
popa
fcom
aad
not
push
add
je
mov
pushf
popf
cmp
not
aad
hlt
call
mov
sbb
in
sbb
adc
adc
in
adc
adc
push
mov
adc
xor
inc
push
rcl
cmp
pop
popf
cli
hlt
int3
clc
add
pushf
adc
adc
adc
adc
push
pop
inc
je
mov
pushf
sbb
dec
dec
loope
push
shr
xchg
jo
mov
inc
and
push
or
adc
call
popf
adc
adc
adc
xchg
adc
adc
adc
xchg
mov
cmp
mov
adc
mov
adc
sub
mov
adc
inc
and
je
pop
out
arpl
inc
cdq
fs
cdq
sbb
inc
out
arpl
std
adc
push
in
arpl
push
or
pop
add
xchg
je
inc
out
adc
out
out
sub
inc
out
arpl
lods
sbb
xchg
xchg
cmp
pushf
adc
xchg
push
in
inc
out
int3
out
mov
mov
adc
xchg
pop
in
arpl
xchg
xchg
inc
in
inc
out
pop
clc
mov
out
arpl
sub
popa
out
inc
sub
fwait
sbb
inc
out
arpl
cmp
popa
out
inc
xchg
je
xor
dec
in
inc
out
mov
jae
arpl
xchg
call
xchg
pop
in
arpl
xchg
xchg
inc
in
inc
out
int3
fwait
cmp
popa
out
inc
cmp
enter
inc
aad
not
inc
and
je
mov
pushf
cdq
inc
cmp
xchg
mov
adc
adc
mov
movs
ficom
ss
pop
xor
mov
push
pushf
adc
sbb
and
push
retf
ja
inc
dec
sbb
iret
movs
ficom
mov
adc
mov
out
(bad)
pop
pushf
adc
call
cmp
sub
sbb
adc
adc
adc
push
adc
push
mov
sbb
mov
mov
mov
adc
adc
xchg
fs
inc
out
sbb
adc
call
mov
adc
sub
adc
call
(bad)
(bad)
adc
cmp
adc
call
mov
adc
or
adc
call
(bad)
(bad)
adc
sbb
adc
xchg
xchg
outs
push
pushf
adc
adc
scas
clc
je
mov
out
arpl
test
call
mov
adc
sbb
jmp
add
lods
nop
adc
adc
scas
clc
cmp
adc
adc
pushf
xchg
sbb
popa
out
inc
adc
xchg
pop
in
arpl
out
clc
add
adc
out
push
jae
adc
cdq
pop
stc
out
pushf
adc
xlat
dec
pop
mov
adc
inc
inc
arpl
push
in
adc
out
arpl
retf
adc
adc
inc
gs
pushf
jp
clc
cld
sbb
(bad)
fst
push
sbb
outs
adc
arpl
pushf
adc
out
adc
dec
in
arpl
jns
push
inc
out
pushf
nop
and
mov
adc
mov
out
arpl
and
je
mov
pushf
popf
xor
arpl
inc
xchg
push
out
call
gs
inc
adc
hlt
dec
pop
push
pushf
popf
and
arpl
inc
inc
je
sub
sbb
out
inc
adc
mov
adc
adc
xchg
adc
push
pushf
clc
rcr
adc
cdq
adc
cdq
pop
popf
cmp
arpl
inc
inc
adc
out
js
retf
adc
out
clc
or
adc
aam
js
adc
out
arpl
out
out
test
clc
inc
sbb
inc
out
pushf
gs
jp
jp
js
retf
not
push
jns
adc
push
pushf
clc
test
in
cwde
adc
out
arpl
adc
gs
xchg
fs
xor
adc
adc
mul
pushf
jp
clc
test
mov
test
adc
xchg
adc
adc
mov
sti
mov
out
inc
out
push
xchg
mov
sub
ins
mov
jp
jp
js
leave
std
adc
adc
xchg
adc
push
pushf
clc
sbb
cwde
cwde
adc
out
arpl
xor
out
mov
call
xor
int3
popf
cmp
popa
out
inc
inc
hlt
cmp
cmp
popa
out
inc
inc
je
mov
pushf
xchg
jnp
hlt
out
mov
adc
inc
inc
arpl
push
add
adc
arpl
retf
adc
adc
xlat
push
pushf
jp
clc
loopne
mov
mov
adc
xchg
adc
adc
mov
cdq
sbb
inc
out
arpl
inc
out
arpl
xchg
imul
xchg
retf
xor
int3
clc
mov
pushf
adc
mov
adc
inc
out
int3
out
mov
push
mov
adc
mov
jp
js
leave
ficom
aad
je
mov
pushf
out
mov
push
mov
adc
mov
adc
inc
inc
adc
out
js
leave
std
adc
xchg
dec
in
arpl
out
clc
dec
sbb
js
adc
out
arpl
out
out
test
clc
sbb
popf
out
inc
out
pushf
gs
jp
jp
js
leave
std
adc
adc
xchg
adc
push
pushf
clc
jmp
sub
adc
out
arpl
adc
gs
xchg
fs
xor
adc
adc
cmp
push
pushf
jp
clc
call
and
push
xor
mov
out
arpl
mov
xchg
arpl
inc
out
push
xchg
mov
sub
ins
mov
jp
jp
js
leave
std
adc
adc
xchg
adc
push
pushf
clc
pop
pop
pushf
adc
sahf
adc
out
arpl
xor
out
mov
call
xor
int3
popf
cmp
popa
out
inc
inc
hlt
cmp
cmp
popa
out
inc
inc
je
mov
pushf
xchg
jnp
hlt
out
mov
adc
inc
inc
arpl
push
inc
fwait
adc
out
arpl
retf
adc
adc
add
pushf
jp
clc
and
mov
(bad)
fst
push
jns
adc
adc
inc
out
arpl
mov
xchg
(bad)
out
inc
out
push
xchg
mov
sub
ins
mov
jp
jp
js
enter
adc
fwait
adc
push
pushf
clc
xchg
pop
pushf
adc
sahf
adc
out
arpl
xor
pop
fadd
sbb
mov
cmps
or
inc
out
arpl
jge
xor
inc
out
cdq
cmp
popa
out
inc
fwait
sbb
inc
out
arpl
inc
out
arpl
xchg
imul
xchg
retf
xor
int3
clc
lods
sbb
inc
out
cdq
cmp
popa
out
inc
fwait
sbb
inc
out
arpl
mov
jp
js
adc
mov
adc
out
aad
not
aad
arpl
push
mov
mov
adc
push
adc
cmp
arpl
sub
adc
jmp
adc
in
inc
hlt
and
push
pushf
out
or
(bad)
out
inc
clc
jl
mov
xchg
ins
in
inc
out
int3
jp
js
repnz
adc
dec
out
arpl
push
aad
adc
out
arpl
adc
gs
jp
popf
sub
popa
out
inc
inc
int3
popf
and
popa
out
inc
inc
arpl
push
mov
popf
cmp
popa
out
inc
inc
not
xlat
loopne
push
mov
out
arpl
rcl
call
dec
out
arpl
push
add
push
pop
push
pushf
clc
add
pushf
adc
adc
adc
adc
adc
adc
adc
sbb
push
test
sbb
inc
out
arpl
mov
jp
out
or
(bad)
out
inc
clc
pop
adc
adc
sbb
cmp
arpl
sub
adc
jmp
adc
in
inc
hlt
sbb
(bad)
out
inc
clc
pushf
adc
xor
int3
jp
js
enter
movs
dec
out
arpl
push
cmc
cwde
adc
out
arpl
rcl
adc
lock
std
adc
call
aad
not
jl
push
mov
adc
inc
or
js
adc
inc
xchg
pop
or
adc
fst
push
icebp
cdq
adc
cdq
sbb
inc
out
arpl
retf
gs
out
jmp
clc
dec
adc
(bad)
fnstcw
pushf
inc
ss
pop
cld
mov
retf
gs
scas
leave
add
adc
fist
cdq
cli
in
adc
sub
mov
push
adc
sbb
adc
jmp
(bad)
(bad)
adc
adc
dec
not
sub
gs
out
mov
adc
mov
mov
adc
sbb
xchg
(bad)
fst
push
gs
adc
push
pushf
gs
test
clc
fst
adc
call
cmps
and
retf
and
push
pop
cwde
adc
push
pushf
gs
test
clc
mov
adc
jmp
movs
std
adc
and
clc
movs
adc
adc
call
cmps
and
retf
sub
mov
xchg
cmp
adc
and
jmp
test
adc
xlat
test
jmp
(bad)
(bad)
adc
adc
push
pop
or
test
jmp
cmp
cmps
and
retf
or
ds
cs
(bad)
fst
retf
or
test
jmp
(bad)
(bad)
adc
gs
out
jmp
inc
in
clc
loopne
mov
mov
adc
in
xlat
loopne
(bad)
fnstcw
pushf
adc
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
inc
retf
clc
add
pushf
adc
xlat
sbb
popf
gs
push
out
clc
int3
adc
mov
fldlg2
mov
call
sti
mov
fs
mov
sbb
xchg
fs
jecxz
adc
pop
and
mov
call
fs
jp
clc
jns
pushf
adc
adc
jp
inc
je
push
out
arpl
rol
xchg
push
adc
mov
sub
out
sti
xchg
aam
adc
out
jge
mov
sbb
out
inc
xchg
data16
out
popf
imul
pop
push
fwait
sbb
fwait
ret
xor
jecxz
xchg
(bad)
xor
mov
adc
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
jecxz
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
sbb
in
adc
.byte
pushf
.byte
.byte
.byte
