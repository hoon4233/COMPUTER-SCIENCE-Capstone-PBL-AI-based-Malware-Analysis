pop
data16
inc
inc
add
pop
inc
outs
outs
ins
gs
outs
add
or
add
jmp
jae
add
jb
lea
sub
add
push
fcomip
mov
add
dec
outs
je
addr16
and
iret
scas
xchg
ffreep
pop
cs
jns
ins
daa
push
outs
jb
ds
fs
or
movs
imul
add
or
addr16
pusha
fisubr
mov
sub
rcr
sti
mov
jb
addr16
push
or
push
imul
adc
mov
hlt
cmp
push
ds
push
or
push
inc
cmp
pusha
lea
push
dec
bound
arpl
pop
sbb
push
lods
rol
jae
ins
push
and
jns
jo
or
jb
popa
arpl
add
inc
add
int3
add
jmp
ficom
test
int3
int3
jge
xchg
movs
sbb
xchg
popf
or
sbb
test
pop
ds
fcom
pop
adc
adc
aas
sub
fs
jmp
push
cwde
or
enter
mov
enter
test
jl
je
or
mov
or
push
xor
and
xor
and
and
and
xor
sub
and
xor
and
mov
and
sbb
and
and
or
or
enter
push
add
jecxz
loop
mov
dec
xchg
test
sti
jmp
add
mov
and
mov
aaa
inc
pop
ret
data16
add
pmuludq
in
sbb
call
mov
in
fld
push
mov
mov
test
jne
xor
pop
leave
mov
mov
mov
(bad)
inc
add
lea
mov
mov
mov
inc
cmp
jne
mov
mov
mov
push
nop
mov
inc
add
scas
mov
mov
xchg
add
test
xchg
mov
jle
std
std
mov
mov
or
adc
add
sar
ss
mov
push
or
mul
(bad)
out
or
(bad)
push
push
push
mov
mov
mov
mov
add
ror
(bad)
in
imul
mov
out
push
or
push
or
ret
and
ficomp
or
inc
add
adc
out
pop
fidiv
aaa
sub
fistp
jmp
loope
mov
cmp
clc
xchg
in
test
pop
pop
pop
push
fdivrp
in
pop
(bad)
clc
jne
sti
mov
xchg
cmp
jb
mov
add
lock
std
imul
imul
ja
and
mov
aaa
sbb
sub
dec
ret
jmp
dec
ret
mov
add
pop
repz
cmc
aaa
cmp
or
sub
mov
push
jle
sub
mov
aam
or
or
mov
scas
sbb
sti
jne
sbb
nop
mov
mov
mov
pop
mov
or
add
jmp
fidivr
add
add
and
push
jg
mov
mov
test
je
cmp
and
(bad)
adc
(bad)
icebp
mov
test
mov
mul
dec
sub
icebp
shr
push
fld
jne
icebp
push
push
dec
push
nop
cmp
cmp
in
mov
adc
mov
mov
add
mov
call
fadd
lds
mov
push
in
out
in
loope
daa
out
ja
mov
add
cmp
ja
cmp
sbb
sub
sbb
adc
ror
or
add
sbb
ret
cmp
ffreep
fst
sbb
outs
jg
sbb
push
xor
ja
and
popa
sbb
rol
xor
dec
hlt
outs
clc
cmp
jnp
in
lock
sbb
neg
imul
sbb
xchg
sub
mov
xor
cmp
add
and
ret
jbe
mov
cmp
or
or
jbe
sar
repnz
adc
sti
push
push
and
xor
jecxz
jmp
ss
cmps
jae
or
push
jb
push
mov
inc
add
xor
jmp
sbb
xchg
out
sub
dec
mov
sbb
jae
mov
jb
jo
cmp
jae
std
add
add
pushf
mov
arpl
popa
rol
dec
das
ja
rcr
mov
mov
(bad)
aas
or
add
repnz
dec
(bad)
mov
idiv
inc
xlat
mov
dec
out
fisub
mov
inc
push
aaa
sbb
fnsave
push
(bad)
sti
push
std
ins
pop
add
jne
cmp
imul
xchg
nop
hlt
hlt
fdiv
cli
(bad)
outs
and
and
cmp
jne
or
jle
jmp
mov
sub
jmp
add
xor
lea
or
sub
adc
fcom
ficomp
or
fwait
aas
lea
mov
inc
jne
clc
jecxz
jmp
imul
jne
nop
mov
scas
loopne
scas
xlat
js
inc
cmp
xchg
rol
adc
adc
xchg
lea
xchg
inc
mov
cdq
aaa
jecxz
add
out
or
ds
cmp
jae
mov
out
ror
out
add
mov
pop
test
je
stos
dec
or
or
jo
ror
adc
jmp
loop
push
add
add
sbb
xchg
rol
in
aaa
push
push
in
fnstsw
and
dec
add
cmp
and
cld
scas
fs
adc
inc
js
pushw
xchg
mov
std
outs
cmp
jp
sbb
leave
and
hlt
inc
cmp
in
mov
jmp
mov
mov
rcr
pop
pop
js
adc
push
add
fcomp
cld
jmp
mov
dec
push
sbb
rcr
int3
shl
push
and
adc
rcr
in
out
push
mov
xchg
shr
imul
mov
je
shl
arpl
jmp
dec
inc
sbb
or
clc
loopne
fistp
push
cmp
push
mov
jb
or
push
pop
jg
adc
test
jns
add
sar
pusha
in
adc
hlt
jmp
sub
mov
sub
mov
mov
mov
xchg
imul
jb
add
or
mov
cmp
mov
add
mov
cld
(bad)
(bad)
mov
jmp
cmp
jl
mov
mov
out
push
jb
lods
lahf
daa
add
or
or
mov
mov
mov
mov
mov
sub
test
cld
out
jmp
mov
add
jbe
or
xor
hlt
push
or
push
rol
or
pop
add
and
jg
pushf
loope
or
jmp
sub
ret
outs
rcr
add
je
mov
in
aas
dec
jb
sub
cmp
cmp
and
add
test
jg
fist
add
mov
clc
add
and
jg
xlat
mov
(bad)
bound
and
mov
fist
push
pop
adc
add
mov
test
jno
xor
into
jge
aad
cmp
clc
sub
sub
cmp
jge
mov
add
fucom
or
adc
xlat
cld
lea
and
in
push
jbe
add
(bad)
stc
add
dec
jae
lea
nop
jmp
adc
or
shrd
iret
(bad)
ds
mov
add
sub
jo
(bad)
sub
cmovbe
adc
pushf
adc
hlt
cmps
adc
mov
ds
jmp
hlt
inc
adc
push
pop
fimul
sub
cmp
or
sti
or
mov
ins
lahf
scas
add
inc
adc
cmp
adc
fsub
cmp
es
adc
jbe
jno
mov
dec
neg
shl
and
movs
mov
dec
movs
jmp
imul
or
push
push
mov
cmp
cmp
push
sub
add
adc
js
add
(bad)
sub
xchg
js
sub
xor
gs
outs
add
add
daa
add
mov
leave
aam
loope
or
in
jle
mov
sbb
add
pop
popa
pop
loope
pop
inc
stos
pop
int3
lea
in
rol
pusha
lock
xor
cmp
or
adc
jne
jmp
xor
mov
add
sbb
sbb
pop
push
jle
mov
lods
cs
pop
mov
pop
je
sbb
arpl
or
adc
ds
sbb
pop
movs
clc
mov
cmp
movs
sub
cmp
loop
outs
sbb
add
dec
(bad)
loope
sub
xor
jl
xor
mov
pop
inc
and
xor
jmp
repnz
jne
xlat
test
leave
js
pop
xor
adc
xlat
test
lock
movs
fwait
pop
jne
pusha
or
je
sti
clc
stos
jle
inc
cld
leave
cmp
das
jbe
rdpmc
leave
push
push
mov
dec
pmaxub
ret
pop
and
sti
mov
mov
test
pop
pop
icebp
mov
test
add
pusha
bound
sbb
inc
scas
shl
push
or
js
mov
jmp
mov
jge
mov
cmc
inc
(bad)
popf
or
lock
mov
in
add
adc
jbe
jmp
in
mov
mov
cmp
(bad)
sar
sbb
cmp
inc
scas
xor
repnz
cmps
inc
adc
rcl
inc
mov
push
pop
pop
pop
pop
mov
mov
sub
jne
out
lahf
adc
jno
xor
or
lock
test
(bad)
lock
jne
test
ja
dec
iret
cld
or
call
add
or
or
loopne
push
or
test
(bad)
jge
push
call
das
add
xchg
add
clc
cmp
or
in
and
add
jb
dec
mov
adc
ret
sbb
or
es
cli
add
or
test
push
or
jmp
mov
cmp
clc
push
adc
or
adc
fnsave
and
cmp
pop
and
mov
out
(bad)
jle
add
out
(bad)
js
sar
(bad)
jge
aad
(bad)
push
jecxz
(bad)
cmp
icebp
pop
mov
sbb
add
(bad)
iret
not
cmp
add
(bad)
jge
jle
add
dec
das
neg
and
add
mov
sbb
mov
push
pop
test
test
punpcklbw
mov
ja
(bad)
sub
cmp
jl
mov
iret
adc
xor
dec
js
jmp
inc
sahf
add
fwait
add
or
pusha
mov
test
sub
pusha
dec
add
push
(bad)
hlt
sbb
sbb
cmp
fadd
mov
loop
sub
xchg
popa
sbb
and
call
cmp
xchg
xchg
mov
add
push
mov
jno
fdiv
add
and
dec
push
arpl
dec
dec
cmc
(bad)
arpl
nop
adc
pop
push
pop
popa
test
daa
mov
pop
fnstsw
adc
add
out
adc
hlt
test
fstp
call
jge
aaa
inc
adc
mov
dec
sbb
dec
add
test
jle
push
sub
int3
push
or
std
sbb
retf
ds
clc
adc
or
ss
pop
das
sbb
enter
or
mov
ret
jge
xor
jmp
jne
outs
pop
pop
in
add
shl
(bad)
out
lock
mov
cmp
scas
dec
sbb
ret
rcr
or
ret
aas
add
inc
not
cmp
test
inc
or
cwde
ret
mov
cld
jle
jecxz
sub
jl
cmp
sbb
xlat
fcmovnb
test
push
jo
(bad)
push
ror
adc
cmp
clc
add
jae
and
adc
jo
push
push
push
cld
pop
add
xor
adc
push
fbstp
rcl
jmp
mov
jnp
add
sbb
fmul
aaa
jb
push
and
pop
sbb
pop
pop
dec
add
ret
push
push
clc
push
sbb
sti
sub
(bad)
pop
(bad)
mov
push
je
retf
jle
cmp
jg
sub
inc
dec
jl
dec
(bad)
(bad)
cmp
jg
add
mov
inc
rep
jmp
mov
leave
jmp
mov
jmp
mov
les
test
jecxz
out
sub
cli
xor
mov
(bad)
rol
cmp
add
lea
outs
adc
or
push
pop
lea
(bad)
add
sub
push
aas
sbb
call
jp
aad
stc
idiv
adc
nop
sbb
ret
add
cmp
ja
je
add
mov
movs
ja
loope
lahf
jns
mov
jg
je
cld
lea
xor
std
xor
dec
pushf
pusha
ds
data16
jmp
outs
cli
mov
adc
and
cmp
idiv
(bad)
jge
cmp
add
out
in
mov
jmp
cmp
xor
sti
inc
fisubr
shr
rol
jmp
call
mov
in
or
aad
aas
in
fisttp
push
outs
cmp
adc
mov
mov
inc
inc
adc
cmp
pop
into
test
push
aaa
push
ja
repz
sub
and
into
ret
into
retf
lea
repnz
pop
sub
pop
or
lea
or
xchg
mov
pop
push
jae
outs
cmps
add
sub
div
xor
pop
nop
fs
enter
jmp
std
jl
mov
jmp
fiadd
cli
add
jmp
call
lahf
mov
scas
pop
(bad)
add
cmp
cmp
jb
cmp
ja
sub
daa
mov
sti
sti
rcr
sub
cmp
pop
jae
out
lahf
(bad)
fwait
pop
pop
scas
in
or
fld
fwait
or
test
(bad)
fldcw
pop
inc
loop
lea
push
in
adc
adc
or
cmp
aas
ins
cmp
test
mov
or
and
iretw
clc
out
scas
pop
mov
jnp
or
mov
fdiv
xchg
push
jno
daa
rol
mov
sbb
(bad)
jmp
adc
or
lea
push
jne
loopne
nop
pop
adc
pop
add
(bad)
push
call
ins
jne
push
add
xchg
mov
add
push
ret
and
push
adc
add
rcr
fwait
into
push
or
not
add
xchg
mov
scas
cmc
ss
jno
sbb
push
add
push
jo
xor
ins
js
clc
sbb
or
and
pop
push
or
adc
cli
mov
clc
sub
jmp
cs
add
push
sar
or
fwait
and
xor
jle
inc
mov
push
add
mov
push
sbb
(bad)
cmp
mov
xor
test
dec
dec
dec
push
sbb
inc
inc
inc
out
sub
ja
data16
xchg
push
aaa
jo
mov
loop
sar
sbb
xchg
scas
push
inc
cmp
(bad)
fdivrp
int3
test
cmp
jae
cmp
outs
pop
nop
out
out
push
xchg
sub
jp
push
std
jne
jmp
lea
lahf
and
(bad)
imul
iret
sti
mov
scas
push
push
cmp
hlt
jmp
out
or
cmc
movs
dec
je
popf
mov
pop
popa
icebp
call
add
dec
and
mov
ss
pop
inc
mov
clc
arpl
scas
iret
fnsave
adc
sub
loopne
adc
retf
loopne
ror
and
pop
add
test
popa
jge
lea
pop
sti
das
shr
cmp
inc
add
dec
cmp
dec
sub
sub
je
add
addr16
rcl
sbb
fucomi
pop
cmp
jbe
jo
cmp
shl
mov
int3
dec
cmps
push
sbb
pop
mov
and
test
dec
sbb
icebp
push
loopne
inc
mov
push
add
shr
jg
jle
imul
push
push
hlt
call
lock
inc
adc
into
add
sbb
xor
push
cld
jge
cmp
je
ins
and
sbb
and
ret
xlat
sbb
push
pop
push
sbb
mov
out
and
cmp
aas
mov
push
cmc
pop
repnz
mov
mov
and
pop
xor
pop
mov
jl
mov
mov
and
pop
sub
je
or
jmp
cmp
and
inc
xor
and
dec
mov
mov
xor
mov
inc
add
call
(bad)
push
cmp
ja
mov
mov
mov
inc
add
or
mov
push
mov
inc
mov
inc
xchg
lds
sbb
cld
xchg
sar
fxch
mov
inc
inc
and
xor
sub
lods
push
xchg
inc
inc
pop
ja
add
push
shr
je
mov
mov
(bad)
fist
cmp
jne
dec
je
mov
aaa
add
add
dec
jne
mov
push
adc
loop
je
mov
cmp
jne
push
adc
std
add
dec
add
adc
add
push
add
adc
std
jne
shr
shr
sbb
out
xchg
sub
mov
shr
or
pop
call
pop
cmp
jns
or
int
and
out
xor
mov
cmp
jne
dec
dec
dec
and
xchg
dec
dec
sbb
xchg
pop
jecxz
test
pop
into
call
cmps
cmp
jbe
dec
and
jo
inc
(bad)
sub
sub
dec
sub
mov
mov
sub
(bad)
mov
shl
or
jbe
rep
adc
push
loop
test
pop
(bad)
xor
imul
mov
lock
popa
shr
in
mov
inc
test
ret
data16
and
sub
cli
add
xchg
sbb
in
das
sahf
pop
lock
imul
and
icebp
inc
sbb
add
mov
adc
addr16
mov
push
pop
add
je
unpcklps
cs
add
push
pusha
je
mov
in
dec
je
mov
jmp
out
cmp
push
lock
mov
stos
pop
fnstcw
mov
and
mov
fist
fcom
inc
inc
and
adc
nop
or
inc
inc
jns
sbb
xor
(bad)
xor
arpl
inc
dec
jmp
es
fstp
push
mov
(bad)
inc
sti
and
in
sub
je
and
div
bnd
pop
pop
je
xor
dec
and
sbb
jecxz
mov
add
xor
or
cmp
ja
lea
mov
fcom
cli
neg
mov
dec
je
sar
jmp
inc
push
neg
jle
pop
add
sub
jmp
inc
inc
jmp
mov
sti
popf
push
je
and
xchg
and
(bad)
ficomp
ja
add
scas
leave
popf
add
aad
clc
aaa
sub
pop
xor
mov
pop
lods
add
or
or
out
pop
adc
cs
sbb
cmp
mov
ret
or
lahf
(bad)
inc
js
movzx
jg
(bad)
and
xor
js
jmp
cmp
jg
add
rcr
psubb
call
inc
pop
jmp
xchg
adc
add
sti
nop
inc
mov
jp
(bad)
stc
inc
jle
sub
gs
ja
fidiv
or
pop
ret
and
cmp
pusha
clc
test
jg
test
add
sti
add
or
mov
jo
add
jle
xor
add
jo
jge
lea
mov
jmp
sbb
add
xor
(bad)
pop
je
inc
mov
dec
jne
pop
sub
mov
pop
jge
sub
mov
cmps
mov
es
cmp
lock
outs
loope
jl
sub
jo
add
lea
std
loop
aas
sti
pop
lea
fld
fucomp
add
jns
sub
je
das
jmp
(bad)
in
in
icebp
stc
and
cmp
push
adc
push
repnz
xor
sbb
mov
cmp
push
fstp
fld
cmp
out
mov
adc
in
cmps
adc
mov
pop
jns
xchg
or
or
ret
daa
aas
jns
mov
adc
mov
mov
sbb
xchg
and
inc
mov
mov
lock
(bad)
stc
sub
test
out
sub
pop
jecxz
add
aaa
(bad)
stc
mov
lds
mov
jbe
imul
cmp
repnz
jg
mov
(bad)
mov
bound
cmp
xlat
fsub
mov
lods
outs
xor
xchg
push
or
push
push
(bad)
jmp
ret
inc
mov
push
pop
test
enter
movs
outs
movs
(bad)
(bad)
(bad)
call
cmp
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
pop
(bad)
mov
(bad)
(bad)
fisttp
add
leave
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
(bad)
(bad)
(bad)
sti
iret
dec
js
inc
mov
stos
mov
cmp
or
mov
pop
clc
(bad)
(bad)
jmp
jg
mov
imul
(bad)
div
jl
xor
cmp
call
mov
(bad)
(bad)
mov
jle
push
inc
mov
push
sbb
sar
repnz
test
(bad)
(bad)
dec
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
idiv
(bad)
(bad)
(bad)
jmp
dec
jp
iret
inc
bound
ds
push
cmps
scas
mov
pop
or
add
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmps
lock
(bad)
(bad)
jg
mov
popa
mov
and
addr16
repz
mov
sub
and
add
les
outs
bound
xor
jmp
pop
cmp
(bad)
loopne
clc
pop
jne
push
pop
and
mov
pop
and
mov
outs
pop
mov
movzx
sub
jo
into
imul
push
inc
fimul
cmp
mov
sub
hlt
push
addr16
add
mov
fs
std
sub
mov
out
mov
std
push
clc
sbb
lahf
pop
aas
or
icebp
mov
(bad)
(bad)
(bad)
aas
adc
inc
push
push
inc
push
inc
pop
inc
outs
jb
popa
outs
fs
inc
gs
jo
imul
inc
inc
push
push
dec
popa
jae
push
popa
ins
jne
fninit
fwait
int
pop
mov
mov
adc
push
mov
mov
xor
mov
inc
imul
jmp
cs
or
pop
mov
clc
xlat
(bad)
dec
cmp
jne
dec
mov
xor
and
jne
stos
repnz
mov
test
inc
fsub
mov
ja
jo
pusha
mov
sbb
sbb
pop
xor
fsubr
ins
or
icebp
sub
int3
push
or
int
das
and
(bad)
adc
pop
das
xor
or
sbb
loope
fld
pop
mov
or
push
cld
retw
pop
loop
pop
jge
mov
xor
push
shr
dec
rep
pop
mov
clc
outs
mov
add
pop
fsub
add
jecxz
dec
aam
sbb
ret
sbb
lahf
push
mov
ins
xor
mov
pop
sbb
cmp
iret
bound
push
lods
(bad)
mov
mov
mov
sub
das
mov
sbb
inc
xchg
sub
(bad)
jb
(bad)
add
loop
(bad)
and
loope
add
mov
rol
add
sahf
inc
cld
xor
test
clc
pop
in
dec
lahf
push
or
mov
sub
test
cmp
ins
xor
mov
daa
lock
test
jmp
lea
mov
mov
mov
setne
scas
jmp
add
test
hlt
xor
lods
ret
xchg
or
mov
(bad)
sbb
xor
xor
jb
cmp
fld
retf
repnz
or
or
pop
xor
fcom
dec
mov
adc
and
sub
sbb
rcl
ror
mov
leave
pusha
ret
pop
hlt
jne
mov
add
add
jle
loope
cmps
psrlw
mov
or
clc
mov
ret
pop
add
sub
mov
pop
cs
mov
icebp
mov
pop
pop
jmp
out
mov
dec
sti
popa
mov
mov
pop
jne
das
mov
add
sar
sub
out
les
clc
jmp
aad
or
icebp
and
inc
push
stos
fild
fidiv
add
pop
in
popa
lock
jne
fstp
sbb
jns
xchg
adc
jne
mov
dec
push
cmp
sbb
add
dec
jne
icebp
cs
(bad)
in
fucomi
sbb
add
sbb
jecxz
dec
repz
in
fdivr
inc
add
lahf
push
pushf
enter
dec
adc
sbb
pop
fwait
shl
jmp
push
xor
call
iret
in
push
pop
add
mov
jl
(bad)
dec
push
hlt
xor
xchg
mov
mov
mov
mov
pop
in
inc
or
or
pop
xchg
out
adc
sub
dec
test
aam
mov
mov
push
mov
fsubr
jg
xor
push
clc
(bad)
sbb
push
rcl
loope
xlat
(bad)
cli
and
pop
inc
jbe
xchg
add
(bad)
cli
in
push
call
mov
push
popa
push
xchg
xchg
mov
pop
into
das
pop
fs
call
loopne
or
jae
das
test
pop
pop
adc
fist
and
leave
cmp
sub
push
cmp
je
or
jne
movsx
inc
inc
jmp
add
and
sbb
jnp
les
loope
xor
in
inc
(bad)
adc
loop
scas
pop
jo
fdivr
adc
loope
rol
test
loop
test
jge
cmp
inc
mov
dec
adc
gs
or
adc
js
mov
test
mov
or
loopne
stc
cmp
je
dec
pusha
jae
in
push
ret
jbe
test
enter
jecxz
xchg
js
clc
add
stos
pop
pop
xchg
idiv
xor
call
sti
push
or
jns
jo
dec
add
out
cld
sbb
imul
cmp
pop
sub
sub
and
push
add
add
sbb
sub
and
cmp
dec
das
mov
ds
inc
sbb
ret
inc
mov
(bad)
jecxz
(bad)
mov
mov
out
adc
sub
sub
leave
inc
mov
push
add
mov
add
sbb
pop
cdq
push
or
std
pop
add
lds
push
push
push
pop
mov
out
sub
repnz
or
fdivr
dec
fdiv
xchg
mov
mov
rcr
and
je
jg
clc
dec
mov
push
push
dec
jne
dec
adc
fwait
movs
shl
outs
inc
dec
out
daa
mov
nop
test
(bad)
mov
adc
das
add
push
push
lods
inc
mov
adc
pop
adc
fmul
sbb
mov
push
xchg
pop
sbb
test
ret
push
sbb
cmps
or
inc
jg
(bad)
pop
call
cmp
pop
push
push
push
push
push
add
mov
gs
outs
inc
stos
and
mov
sahf
(bad)
sbb
or
pusha
add
jnp
outs
sub
or
std
xchg
loopne
xor
adc
adc
adc
scas
cmc
lea
div
or
pop
and
dec
cwde
(bad)
xor
loop
xor
mov
lahf
jne
sahf
xchg
xor
xchg
ret
dec
mov
(bad)
xchg
jle
add
je
cmp
push
sub
xor
sub
je
jmp
add
sub
jnp
jnp
jb
je
jmp
cmp
sub
adc
and
cmp
cmp
mov
jmp
mov
jmp
mov
jmp
xchg
sar
mov
jmp
push
sbb
into
jmp
mov
mov
mov
or
retf
jmp
push
or
push
jo
jbe
inc
mov
jecxz
sar
je
push
outs
jne
cmps
push
or
inc
pop
sbb
aam
cmp
je
add
add
cli
mov
sti
ja
out
push
inc
cli
xor
mov
adc
cmp
push
sub
jo
and
dec
dec
xor
mov
inc
or
enter
push
ret
xor
mov
cmp
(bad)
inc
sti
cmps
add
or
cmp
jne
loop
xchg
cmp
xor
jg
or
pop
dec
mov
mov
fdivr
and
fstp
dec
mov
inc
fiadd
adc
dec
hlt
call
and
jecxz
adc
cmp
or
mov
test
(bad)
mov
or
dec
mov
sub
imul
ret
xchg
repz
add
sbb
fnstcw
mov
sbb
sbb
adc
sbb
xor
cmp
cmp
add
scas
lock
mov
sbb
movhps
fadd
jbe
in
pop
pusha
pop
cwde
ss
jne
pop
pop
pop
inc
data16
cmp
dec
jmp
dec
aaa
in
add
inc
or
inc
sbb
jecxz
aas
mov
inc
mov
add
pop
mov
mov
and
mov
idiv
add
adc
jle
ror
mov
dec
in
sub
sbb
add
shl
jmp
jp
ret
mov
push
push
scas
inc
jg
adc
push
out
imul
rcr
lock
pop
sbb
push
add
adc
inc
movs
pop
leave
aas
push
cmps
(bad)
sbb
fisttp
push
cmp
cmp
cmp
mov
mov
push
mov
je
popf
hlt
mov
pop
xor
cmp
fisttp
xor
mov
xchg
mov
jge
cmp
sbb
sbb
mov
inc
sbb
jne
cmp
adc
ror
aas
push
rcl
call
out
dec
into
icebp
cmp
xor
sbb
xor
ins
fsubr
jne
scas
add
mov
add
daa
xor
imul
inc
adc
jno
or
push
ins
shl
jo
ds
test
pop
lods
aaa
push
mov
adc
push
fwait
xchg
push
mov
ret
pop
push
cmp
adc
or
imul
lahf
dec
pop
adc
push
lahf
mov
scas
pop
adc
rcl
xchg
inc
call
rcl
cwde
pop
pop
ja
add
add
pop
div
fnstsw
stc
cmp
pop
and
cmp
mov
add
push
pop
or
push
lock
mov
push
sbb
sbb
or
cwde
(bad)
pop
jmp
mov
inc
test
dec
clc
std
and
das
mov
pop
(bad)
mov
push
sbb
add
or
dec
jne
(bad)
mov
and
inc
jg
jns
xchg
lock
mov
pop
pop
dec
pop
mov
out
ror
add
ins
xchg
adc
(bad)
fidiv
sbb
mov
and
add
loopne
push
adc
pop
mov
(bad)
loope
and
mov
dec
ror
mov
das
add
clc
stc
mov
and
aas
mov
cmp
loope
jo
fadd
mov
inc
sub
adc
(bad)
frstor
and
ins
sub
xor
add
cld
push
fisub
nop
push
jg
mov
scas
cmc
inc
jmp
lea
cmp
push
sbb
mov
lods
sar
(bad)
mov
jbe
int3
and
sub
fistp
jge
test
or
pop
sbb
jge
xor
rcl
pop
push
mov
(bad)
out
nop
in
and
or
mov
or
je
add
sti
adc
iret
mov
call
pop
sub
jmp
pop
into
pop
sub
and
out
xlat
sahf
lods
pop
pop
or
or
data16
in
add
jns
ins
add
mov
inc
fmul
sbb
xchg
nop
push
push
retf
cwde
ins
dec
cdq
rcr
rcr
mov
mov
sbb
pop
cld
cmp
std
dec
add
cmp
jl
fisttp
inc
sub
(bad)
xchg
ds
dec
push
add
xchg
mov
je
jns
ret
loopne
jmp
cld
add
cmp
pop
and
and
and
sub
jae
out
popa
cmp
shr
je
cmp
mov
lock
xor
cmp
scas
ror
inc
hlt
cld
add
(bad)
je
mov
dec
ja
jnp
cli
lds
push
sbb
in
xlat
test
or
jnp
mov
call
dec
mov
sbb
sub
cld
mov
dec
jmp
sub
add
(bad)
mov
loope
iret
gs
dec
jne
mov
or
ja
jge
and
aaa
add
dec
jmp
xor
mov
pushf
sbb
shl
jne
mov
dec
add
add
scas
aaa
pusha
clc
add
xchg
jmp
xchg
pop
(bad)
in
js
rol
(bad)
push
aaa
lock
mov
pop
pop
fiadd
and
push
cmp
pop
cmp
ins
retf
sbb
daa
cwde
popf
jge
sub
shr
aam
sahf
and
or
inc
cli
(bad)
pop
mov
ret
add
pop
pop
lds
push
dec
mov
(bad)
in
jmp
loope
inc
daa
pop
jns
lock
mov
addr16
dec
les
mov
es
jl
cmp
jge
or
pop
sub
pop
sbb
adc
mov
xor
xor
jmp
inc
push
adc
jmp
and
test
jmp
retf
(bad)
lock
jge
mov
mov
add
sub
add
lea
inc
dec
movs
push
add
cli
mov
push
fistp
cdq
mov
push
mov
iret
jle
in
sub
xlat
adc
imul
add
gs
cmp
mov
cld
packuswb
adc
lock
push
add
mov
cmps
jmp
pushf
std
cmps
cmovne
dec
dec
js
mov
inc
inc
mov
adc
adc
cmp
inc
inc
retf
jmp
(bad)
(bad)
pop
mov
arpl
adc
dec
pop
ret
out
and
sbb
jno
cmova
loopne
mov
ret
addr16
jo
(bad)
in
jmp
out
(bad)
push
or
arpl
cli
pop
cmp
(bad)
test
jg
ror
enter
jmp
pop
mov
mov
sbb
leave
test
jl
retfw
hlt
arpl
add
in
pop
mov
fcom
adc
ret
cld
inc
xor
push
test
cs
mov
push
push
sub
test
or
push
jmp
fst
xor
pop
shl
and
rcl
scas
push
add
jo
xor
int3
jmp
pop
xchg
dec
xor
jle
mov
or
fdiv
push
push
ds
or
dec
push
sbb
inc
shr
int3
mov
xor
rol
push
jo
push
pop
inc
sub
scas
(bad)
push
sbb
ror
or
sub
add
loopne
outs
je
push
push
sbb
inc
xor
fidivr
popa
movsx
xor
cmp
sbb
fs
or
adc
or
ret
pop
inc
ja
add
pop
aaa
pop
ret
loope
cmp
ror
sbb
sub
cmp
push
fadd
rol
pop
dec
or
pop
nop
push
fistp
sub
inc
movs
xor
fs
fst
jge
in
jne
mov
add
xchg
pushf
push
mov
or
push
mov
pop
lea
mov
or
lods
in
fmul
xchg
inc
mov
cmps
nop
es
into
mov
mov
out
push
add
cmp
je
cmp
je
cmp
je
cmp
je
cmp
dec
sbb
je
mov
mov
jmp
dec
add
das
outs
jns
or
rol
push
or
dec
cs
aad
jg
adc
cmp
pop
jmp
cmp
jge
or
das
push
sbb
loopne
jmp
jecxz
mov
jns
dec
jge
pop
mov
pusha
cmc
inc
sbb
stc
stc
loopne
shl
ds
fmul
dec
pop
jbe
pop
fistp
sbb
jnp
add
jg
jns
xchg
add
mov
cmp
push
ja
inc
in
outs
jne
shl
xor
enter
sub
idiv
inc
inc
jmp
test
test
mov
push
loope
jmp
call
xchg
in
sbb
pop
jmp
add
pop
cld
std
test
cmc
dec
clc
push
pop
add
sar
add
cs
dec
adc
out
cmp
mov
cmp
xor
pop
cmp
or
or
or
gs
jo
punpckhwd
bound
and
mov
ret
xor
repnz
jge
inc
or
test
adc
nop
(bad)
mov
in
push
add
inc
dec
cwde
or
ss
idiv
add
jns
in
fwait
pushf
xor
xlat
push
adc
inc
push
in
and
sub
stos
cld
dec
jne
add
pop
inc
sbb
ud0
ins
and
mov
in
mov
xor
popa
jge
xor
xchg
jmp
ror
out
sub
mov
imul
cmp
dec
std
daa
adc
les
cld
loop
xor
add
daa
or
ja
sti
add
dec
out
pop
add
inc
jmp
fnstsw
push
mov
jno
add
je
cmp
mov
retf
adc
pusha
adc
in
pop
jne
sbb
push
inc
cld
retf
inc
xor
inc
js
pop
and
add
fldenv
jle
jmp
ret
in
cmps
add
xor
sub
mov
(bad)
pop
aas
jmp
movs
daa
mul
mov
hlt
fs
push
jle
mov
xchg
adc
pop
pop
ret
push
inc
cmp
mov
sbb
std
xor
leave
jne
pop
pop
or
je
vmwrite
neg
idiv
jbe
sahf
or
mov
fincstp
fild
imul
xor
shl
(bad)
inc
call
rcl
(bad)
rcl
cmp
jb
push
cmp
jb
sub
sbb
inc
loop
pop
test
and
xchg
clc
in
repz
scas
test
dec
shl
lock
stc
xchg
scas
nop
bound
lock
push
xor
sub
dec
or
mov
mov
dec
inc
inc
cmp
(bad)
dec
mov
sub
jmp
cmp
ffree
std
mov
inc
and
sub
push
and
mov
es
ficomp
add
sub
mov
pusha
mov
add
jmp
shl
out
dec
mov
and
inc
pop
xor
sbb
aaa
or
test
mov
push
cmp
neg
mov
jmp
jl
and
clc
jg
jbe
jmp
jg
mov
cdq
das
loopne
sbb
mov
shld
add
sbb
loop
adc
push
and
inc
cmp
(bad)
cmp
xor
ror
mov
sub
nop
sub
xor
inc
shl
and
adc
int3
cs
or
repz
pusha
dec
or
xor
and
shr
sub
and
sbb
mov
outs
call
pushf
sar
je
dec
add
movs
js
int
or
dec
shl
mov
mov
add
mov
neg
dec
push
dec
mov
(bad)
push
(bad)
test
push
inc
test
or
jo
cmc
mov
sbb
cmp
(bad)
jg
aas
pop
mov
dec
xor
fld
(bad)
lods
jl
dec
pop
cmp
inc
inc
enter
loop
sbb
pop
push
dec
inc
add
(bad)
and
push
sub
popa
jo
mov
out
std
dec
imul
dec
in
in
cmp
jg
fidiv
or
cmp
jne
mov
mov
jge
jge
imul
and
imul
lock
add
out
sbb
je
inc
loopne
push
in
mov
pop
dec
stos
mov
inc
lock
in
mov
in
jge
or
adc
pop
and
and
push
jbe
ja
hlt
adc
into
stos
fs
dec
push
adc
ja
pop
jo
mov
and
adc
lock
test
jg
ja
fld
ret
cmps
cmp
jle
cdq
or
call
inc
pop
push
out
out
lods
xor
fist
xor
pop
dec
jne
pop
mov
sbb
in
push
sub
cmp
xor
or
iret
lahf
lock
jne
pop
push
push
adc
jmp
pop
inc
popf
xor
data16
cmps
clc
das
scas
scas
adc
dec
push
push
push
mov
inc
out
pop
pop
les
push
jae
(bad)
out
sbb
(bad)
in
sbb
icebp
pusha
adc
jne
and
jnp
retf
nop
inc
pop
jle
out
push
movs
jnp
jne
inc
cmp
stos
test
cmp
mov
dec
cdq
push
pop
or
and
xchg
jno
xchg
xor
sub
cmp
(bad)
ja
or
or
adc
out
adc
or
ret
clc
inc
jp
adc
jecxz
jmp
(bad)
push
lahf
mov
daa
cmp
jne
xor
addr16
xchg
mov
push
clc
(bad)
sbb
movs
pop
or
push
lock
inc
push
inc
ret
and
jbe
in
add
push
or
rcr
pop
js
adc
gs
mov
adc
add
dec
retf
cmp
cmp
js
pop
jne
add
dec
sub
sub
clc
div
push
pop
cmp
jmp
ins
(bad)
push
mov
fisubr
mov
inc
add
scas
(bad)
lods
jno
(bad)
sub
pop
and
add
inc
cmp
inc
push
push
xor
sbb
ror
je
sar
std
popf
aaa
mov
loop
sub
cmp
call
pop
mov
push
push
dec
xlat
(bad)
mov
push
xchg
push
pop
fwait
neg
dec
ret
imul
gs
xor
ds
xor
fs
ins
jbe
gs
push
popa
je
mov
sti
dec
popa
ins
gs
outs
loopne
data16
aaa
adc
jecxz
scas
(bad)
das
mov
int3
push
sub
test
movs
cmp
sbb
sbb
outs
add
add
push
xchg
or
mov
enter
jbe
and
clc
int3
dec
aas
add
add
mov
sub
aaa
or
and
cmp
or
push
lods
repz
mov
mov
mov
out
adc
out
mov
push
mov
jnp
and
jg
jmp
dec
cmp
stos
pop
cmp
jne
adc
popf
inc
or
das
cwde
loopne
rcr
add
inc
jecxz
lods
adc
push
je
sbb
pop
fld
outs
repz
pop
les
adc
add
(bad)
mov
jmp
je
popa
jb
out
mov
std
(bad)
mov
jae
aaa
mov
inc
cwde
push
js
sbb
add
cwde
ds
add
inc
add
mov
adc
xor
out
jbe
mov
sbb
sbb
or
mov
add
mov
mov
sbb
mov
cmp
retf
add
add
fnstcw
daa
sbb
aaa
cli
mov
push
push
adc
jnp
cmp
arpl
inc
les
mov
ret
loope
add
or
xchg
mov
(bad)
fs
sahf
sub
int3
mov
jo
call
dec
rol
sbb
and
cmp
cmp
mov
pop
test
test
adc
push
cld
jne
push
inc
or
jb
cmps
outs
jmp
dec
mov
mov
iret
sub
or
ds
add
pop
mov
(bad)
fld
sbb
leave
dec
dec
push
inc
lods
mov
or
sbb
push
mov
xchg
push
push
cwde
inc
mov
mov
pop
pop
movs
std
fstp
sub
mov
pop
pop
ret
sbb
sbb
and
test
jmp
inc
pop
jl
adc
pop
mov
push
pop
pop
xor
add
int
sub
test
or
fmul
dec
lds
jp
xlat
push
mov
or
cmc
retf
mov
mov
xchg
mov
(bad)
call
inc
cmp
ja
mov
inc
jmp
cmp
pop
add
div
jmp
pop
cld
ja
fcmovb
jmp
or
mov
adc
and
sbb
hlt
repnz
and
retf
add
jmp
popa
add
dec
popa
rol
push
cmps
inc
add
dec
or
cmc
sbb
mov
add
dec
mov
and
sbb
or
mov
add
jb
lea
ret
loope
xor
dec
ud1
add
lock
jmp
jp
xlat
out
pop
dec
and
jge
hlt
aas
clc
pop
inc
or
inc
test
je
or
mov
loope
and
je
cmp
adc
xchg
fnstcw
add
jne
mov
ds
and
or
mov
pop
lea
dec
dec
cld
cmp
jno
adc
inc
fwait
xlat
iret
pusha
or
cmp
or
imul
jle
mov
mov
cmp
jnp
ret
xor
(bad)
add
jne
sbb
les
xchg
or
jb
inc
sbb
adc
scas
aam
scas
push
xchg
loopne
addr16
scas
(bad)
adc
scas
pop
je
adc
lea
dec
es
sub
out
enter
inc
fcomp
in
mov
mov
mov
dec
outs
jmp
adc
(bad)
enter
leave
jecxz
mov
nop
pop
push
aas
push
xchg
popf
pop
add
mov
in
in
fld
add
xchg
inc
and
outs
shl
lods
cwde
dec
repnz
or
cmp
inc
(bad)
pop
sbb
inc
xor
clc
mov
mov
jno
mov
sub
cmp
pop
mov
add
outs
mov
inc
dec
add
sbb
or
xor
adc
nop
xchg
push
sub
push
lock
pslld
push
cmc
push
push
add
mov
and
mov
cld
movs
adc
cmp
dec
repz
push
stc
pusha
daa
jp
es
inc
lods
add
ret
cwde
cwde
mov
adc
arpl
mov
cwde
scas
clc
sub
inc
fwait
(bad)
inc
add
mov
pop
xor
pusha
add
call
call
mov
cmp
xlat
xchg
adc
call
mov
add
and
and
sub
dec
cmp
jbe
mov
pop
jmp
jl
lock
sub
nop
add
push
bswap
and
out
out
loopne
(bad)
sub
not
inc
pop
pop
xchg
outs
mov
mov
mov
mov
les
daa
or
cmp
out
lods
idiv
or
sub
or
mov
cs
mov
test
jne
xlat
mov
mov
jns
push
pushf
dec
inc
cld
or
add
mov
push
retf
ds
mov
outs
mov
xchg
inc
mov
ja
or
or
or
pop
inc
mov
xchg
and
imul
jnp
inc
dec
les
sub
xor
xchg
pop
js
push
(bad)
or
add
inc
fistp
int3
pop
push
push
add
inc
add
add
jb
arpl
push
or
xor
xchg
pop
cmp
jo
cs
js
add
xor
dec
and
lahf
add
outs
fs
gs
ja
or
mov
es
imul
inc
push
mov
adc
arpl
inc
gs
jne
je
dec
outs
imul
idiv
je
imul
lea
gs
outs
inc
arpl
mov
adc
ret
or
pop
test
pop
xor
(bad)
outs
ins
bound
outs
js
imul
imul
cld
cmp
andps
outs
dec
inc
add
sbb
xor
je
dec
add
enter
or
and
and
and
or
or
enter
cld
sbb
cmp
lock
nop
ja
in
mov
sbb
or
nop
add
pop
adc
cmp
sbb
inc
push
lods
adc
into
sbb
pop
shl
enter
hlt
lock
in
call
xor
(bad)
or
aam
int3
enter
and
sar
mov
and
and
cwde
or
xchg
nop
mov
test
cmp
enter
ins
push
xor
pop
or
push
push
dec
dec
or
enter
cmp
enter
xor
enter
sub
and
or
sbb
and
or
or
enter
cld
sbb
cmp
lock
inc
push
in
call
sbb
(bad)
inc
push
sbb
int3
push
sbb
(bad)
sar
mov
nop
inc
push
lods
test
nop
inc
push
sbb
sbb
mov
sbb
test
inc
js
jo
nop
inc
push
ins
push
sbb
pop
inc
push
sbb
dec
push
sbb
inc
inc
cmp
fs
inc
cmp
test
and
cmp
xor
or
sub
xchg
inc
inc
xor
and
and
and
sbb
or
enter
or
xor
and
add
fs
xchg
cmp
clc
hlt
nop
inc
push
sbb
in
call
in
fadd
sbb
aam
int3
sbb
enter
nop
inc
push
mov
push
sbb
sbb
pushf
push
sbb
xchg
nop
mov
fs
inc
mov
jl
je
inc
push
sbb
push
fs
pop
push
sbb
push
push
dec
sbb
nop
inc
dec
inc
or
nop
xchg
sbb
sbb
clc
sbb
ins
nop
hlt
add
add
in
nop
inc
xchg
inc
push
sbb
int3
push
sbb
(bad)
sar
mov
nop
inc
push
lods
test
nop
inc
push
sbb
sbb
mov
sbb
test
inc
js
jo
nop
inc
push
ins
push
sbb
pop
inc
push
sbb
dec
push
sbb
inc
inc
cmp
fs
inc
cmp
fs
inc
push
sub
and
inc
push
sbb
sbb
inc
push
sbb
or
sbb
add
cld
xchg
enter
hlt
lock
in
call
xor
(bad)
or
aam
int3
enter
popa
iret
(bad)
sar
mov
leave
and
enter
mov
or
xchg
nop
mov
test
and
jo
enter
push
or
pop
pop
and
dec
or
dec
inc
inc
cmp
xor
and
xor
xor
and
and
and
or
or
enter
cld
sbb
xchg
hlt
lock
inc
push
in
call
sbb
(bad)
inc
push
sbb
int3
push
sbb
(bad)
sar
mov
nop
inc
push
lods
test
nop
inc
push
sbb
sbb
mov
sbb
test
inc
js
jo
nop
inc
push
ins
push
sbb
pop
inc
sub
fisttp
mov
rol
loop
or
rcr
add
std
nop
jns
push
sbb
call
or
or
xchg
sub
and
nop
xor
out
movs
xchg
or
ja
cld
push
mov
movsx
or
jge
js
(bad)
pop
daa
mov
and
jge
or
dec
cmp
das
imul
out
xchg
test
add
mov
adc
sbb
movs
mov
push
dec
jmp
sub
(bad)
jge
cs
jnp
add
push
mov
and
inc
stc
sahf
push
ds
or
inc
push
dec
jmp
sbb
and
rcl
pop
or
jge
dec
inc
pop
pushf
jg
add
xor
pop
repnz
jb
inc
dec
aas
inc
pop
or
or
(bad)
repnz
dec
retf
add
gs
sbb
and
push
dec
inc
inc
dec
add
outs
jecxz
addr16
fwait
push
and
dec
pop
inc
push
dec
pop
and
mov
dec
push
push
pop
sub
push
inc
dec
pop
dec
dec
xchg
push
imul
addr16
fs
jnp
nop
dec
mov
jl
test
xchg
cmp
jl
sbb
sub
push
icebp
repnz
inc
push
repz
cmc
nop
inc
push
sbb
idiv
inc
push
sbb
sti
push
sbb
std
(bad)
call
fs
inc
loopne
loop
nop
inc
push
jecxz
in
inc
push
sbb
out
inc
push
sbb
jmp
sbb
in
out
out
sbb
rcl
shl
push
rcl
aad
inc
push
sbb
xlat
fadd
sbb
fild
sbb
fstp
fistp
fs
inc
rol
fs
inc
push
ret
(bad)
lds
(bad)
enter
fs
retf
sbb
int
iret
sbb
mov
mov
nop
inc
push
mov
mov
inc
push
sbb
sbb
mov
mov
fs
inc
mov
inc
push
mov
push
sbb
sbb
stos
xchg
sbb
lods
scas
pop
cmp
dec
push
push
jg
pop
jg
fcmovne
xchg
jl
or
push
inc
imul
nop
js
push
or
popa
jb
push
jns
add
jbe
sbb
add
add
dec
enter
mov
arpl
dec
arpl
je
outs
outs
dec
sub
rol
into
xchg
jg
inc
in
inc
inc
inc
bound
je
pushf
cmps
adc
in
int3
push
inc
dec
inc
jo
or
mov
mov
sbb
dec
jne
dec
dec
gs
imul
(bad)
sub
xor
xor
fsubrp
inc
dec
outs
mov
lods
scas
lods
add
(bad)
mov
mov
fild
ds
pusha
sub
xlat
fs
or
or
mov
sub
or
imul
outs
sar
nop
adc
scas
aas
scas
mov
mov
outs
gs
scas
ds
or
or
dec
jbe
(bad)
pop
stos
ins
outs
ja
enter
lds
imul
dec
mov
nop
and
ds
jl
add
jno
addr16
imul
mov
js
lahf
bound
ins
jle
shr
rcl
mov
jle
rcl
test
fchs
inc
or
push
outs
push
mov
rol
lsl
push
outs
imul
(bad)
dec
inc
daa
or
inc
popa
jae
fimul
jbe
cmp
lock
or
scas
xchg
sub
xchg
cmp
xchg
rcl
shl
adc
push
add
jbe
mov
or
jb
ins
mov
pop
inc
ins
nop
dec
xchg
add
push
inc
mov
aam
shl
add
lock
or
je
ins
inc
sub
jl
add
ret
adc
popa
aas
or
popa
test
mov
and
mov
mov
add
out
jb
jns
fidiv
out
sbb
aas
das
push
test
jo
je
cmps
loopne
aas
aas
or
add
push
int3
addr16
les
add
adc
popa
gs
dec
fisttp
cs
xor
and
adc
mov
inc
ins
jae
or
ret
add
cmps
mov
inc
clc
mov
jecxz
adc
jb
popa
outs
rcl
dec
lds
int3
add
sbb
neg
(bad)
(bad)
in
(bad)
pop
pop
add
repnz
or
inc
adc
ficom
mov
mov
xor
xchg
popf
movs
lods
xchg
mov
call
adc
sbb
push
loopne
sbb
mov
mov
mov
jl
xchg
adc
pop
test
xchg
lock
dec
(bad)
and
jne
jg
fld
adc
shrd
jmp
imul
outs
or
shr
div
mov
or
mov
add
aam
out
retf
mov
mov
jae
pop
mov
adc
cwde
(bad)
leave
push
aas
push
mov
stc
pop
pusha
test
xor
sub
daa
mov
fld
dec
push
or
mov
mov
mov
lock
fcomp
ins
pop
(bad)
mov
adc
mov
mov
sub
sbb
adc
add
cli
adc
jmp
cmp
adc
adc
push
inc
inc
dec
add
jg
ror
out
pop
add
xchg
(bad)
pushf
in
or
or
sub
adc
mov
cmp
jbe
cmp
repz
je
push
jmp
inc
inc
push
inc
adc
inc
adc
dec
xor
repz
jne
push
jnp
sub
push
mov
sub
or
outs
mov
(bad)
push
(bad)
out
and
sti
je
loope
add
addr16
sub
mov
push
cmp
jge
imul
add
pop
xchg
shl
or
or
ror
cmp
fs
addr16
(bad)
and
cwde
ja
bound
pop
push
push
shl
cwde
cmp
pop
jo
into
xchg
jle
rcl
and
xchg
shl
sbb
out
push
push
adc
jecxz
sub
cmp
(bad)
inc
lock
repz
cmp
jbe
popf
pop
cmp
jge
lds
mov
imul
retf
inc
sub
sbb
mov
call
test
push
add
sub
jb
sub
das
or
jae
cmp
jl
inc
mov
and
fwait
imul
popf
adc
or
(bad)
jae
iret
pusha
add
inc
dec
jne
mov
inc
call
push
idiv
dec
push
inc
pop
pop
ret
mov
shl
icebp
dec
mov
cmp
jb
sysret
mov
mov
pop
jg
(bad)
call
icebp
sub
jbe
add
mov
sub
jmp
mov
dec
jne
push
mov
sub
xor
jb
(bad)
push
outs
cwde
pusha
mov
pop
or
push
add
jle
xor
jno
and
jo
(bad)
jnp
(bad)
push
mov
neg
sub
(bad)
mov
add
std
sub
pop
sar
add
or
movs
repnz
mov
push
and
jne
push
aas
(bad)
fild
fistp
ret
add
add
sub
add
ss
ins
ror
(bad)
fdivr
mov
mov
scas
cmp
rcr
loope
pop
outs
add
mov
or
cld
ret
ffree
pop
aad
aad
and
fst
sahf
inc
xor
(bad)
or
pushf
cmp
and
cmp
rcr
pop
mov
mov
xor
es
clc
and
rcl
ret
sub
mov
xor
dec
loop
cmp
xchg
add
push
or
dec
mov
(bad)
int
inc
jnp
push
popa
or
aaa
retf
mov
imul
sbb
cmps
mov
push
clc
pop
dec
fcomp
dec
and
and
cmp
adc
lock
mov
push
shr
lock
sub
call
loopne
dec
dec
adc
addr16
adc
dec
mov
in
mov
das
sbb
push
pop
dec
fsub
xor
pusha
dec
or
push
push
push
add
jge
das
mov
repnz
jl
inc
jns
mov
adc
mov
jmp
sbb
mov
movs
xchg
cmp
jb
cwde
clc
or
cdq
mov
sbb
pushf
outs
cdq
inc
(bad)
std
adc
ins
outs
fbstp
clc
lock
setne
jmp
ss
or
pop
dec
pop
and
nop
add
add
inc
mov
dec
ret
div
sbb
cmp
sub
bound
les
fist
loop
adc
jmp
and
push
mov
adc
pusha
pop
sub
xor
sub
xor
add
loopne
ja
pop
and
ja
gs
add
push
push
icebp
cmps
into
xor
jmp
je
rol
pop
push
lgs
dec
cmp
mov
add
in
fcmovu
ds
or
sbb
push
mov
imul
pusha
cwde
mov
not
and
jno
adc
pop
out
pop
lods
mov
and
xchg
push
in
add
ins
ins
xchg
retf
loopne
add
enter
(bad)
aas
cmp
mov
loope
xchg
xor
sahf
adc
mov
cmp
push
enter
ja
dec
aam
(bad)
push
and
pop
or
dec
or
int3
mov
leave
pop
pop
sar
or
mov
xor
dec
mov
push
add
pop
dec
adc
fld
dec
sbb
loop
push
jne
mov
or
ffree
inc
or
ret
mov
cmp
pushf
rcr
sub
xor
mov
add
test
add
mov
mov
leave
sti
adc
icebp
push
cmp
lock
mov
ja
pop
cmp
or
mov
or
arpl
cmp
jno
xchg
mov
add
jmp
js
les
aas
xchg
push
test
pusha
fadd
fs
pop
test
cmps
jmp
lea
dec
mov
or
dec
pop
push
xor
and
loopne
inc
or
out
mov
push
adc
pop
lods
and
cmp
or
push
inc
mov
xor
rol
adc
mov
dec
push
cs
lea
add
push
cmp
cmp
adc
movs
jg
je
jae
jbe
pop
aas
pop
aas
aas
data16
in
or
xchg
sub
rol
sbb
xor
stos
inc
cmps
leave
pusha
push
call
mov
jmp
lds
cmp
je
xor
dec
xor
jbe
addr16
lods
mov
and
pop
push
and
jbe
pusha
mov
popf
jne
dec
and
js
dec
jg
daa
xlat
inc
outs
add
pushf
sar
arpl
sahf
add
lock
or
popa
rcl
add
pop
mov
pop
int
xor
mov
mov
cmp
xsaves
jne
push
jg
and
(bad)
jp
mov
mov
nop
femms
push
mov
jae
push
enter
adc
adc
xor
cmp
sub
jle
pop
sub
int
clc
cld
push
sub
mov
imul
inc
mov
in
cmp
sbb
sbb
dec
or
xor
adc
dec
cmps
adc
nop
mov
not
rol
add
pop
or
jg
jge
hlt
lods
push
push
call
ret
mov
inc
fsubr
loopne
add
jne
je
(bad)
inc
mov
adc
inc
cld
mov
pop
adc
shr
sbb
ud0
call
mov
and
pop
call
cld
push
add
push
ja
cmp
dec
(bad)
push
sbb
push
mov
dec
call
(bad)
inc
and
outs
inc
je
mov
sbb
mov
push
shl
pop
mov
pop
pop
(bad)
cmp
aam
xor
push
outs
mov
sub
mov
out
das
gs
test
and
mov
imul
retf
test
rep
iret
fldenv
mul
ret
inc
cdq
push
cmps
fimul
dec
jge
add
retf
pusha
xchg
or
and
gs
rcr
fstp
outs
call
addr16
(bad)
pop
adc
retf
xchg
push
push
ds
out
call
es
xor
xor
repz
mov
mov
mov
rol
dec
xchg
cli
cld
cli
jmp
je
mov
mov
adc
mov
mov
in
pop
mov
mov
jp
fcom
test
movs
popf
add
add
shl
inc
inc
inc
xchg
imul
dec
je
mov
mov
pop
mov
icebp
jbe
sbb
lods
add
mov
push
cld
sar
(bad)
mov
jne
push
gs
or
imul
mov
mov
mov
fwait
movs
xor
pop
aad
addr16
test
aam
dec
mov
outs
mov
mov
mov
push
outs
mov
aas
inc
fld
sbb
ja
cmp
jbe
mov
push
clc
add
jne
les
sub
mov
add
(bad)
fldenv
jecxz
add
pop
mov
mov
push
mov
jg
cmp
popa
sbb
ret
add
aaa
outs
les
sbb
inc
add
jge
stos
push
daa
fiadd
loop
clc
adc
mov
popa
sub
fimul
dec
lods
cmp
je
stos
dec
jne
cmp
dec
fcmovnbe
xchg
and
jmp
mov
std
mov
push
push
add
mov
mov
in
das
hlt
and
lods
jmp
xor
fnstsw
sub
sub
mov
cmp
rol
adc
clc
fild
jge
xchg
or
retf
add
outs
in
(bad)
out
mov
mov
rep
sbb
add
rol
lock
push
jge
mov
pop
pop
mov
cmp
cld
inc
cli
aas
retf
xor
cmp
ja
imul
mov
add
mov
add
pop
dec
neg
cmp
jg
clc
sub
or
jl
loopne
adc
jne
ret
je
xchg
ret
and
mov
iret
repnz
or
cmp
pop
jne
xchg
std
or
xor
mov
fwait
push
add
and
adc
outs
sar
or
dec
imul
sbb
inc
push
sahf
jmp
push
ins
xor
adc
cmp
sub
loope
ror
mov
and
jmp
es
adc
push
pop
inc
sahf
aaa
sbb
or
jbe
cdq
mov
mov
cmps
pop
outs
adc
nop
pop
jb
out
pushf
out
mov
and
inc
and
jne
cs
sbb
add
mov
cwde
inc
in
aad
or
jmp
xor
inc
inc
cmp
enter
les
cld
adc
jmp
mov
cld
aas
mov
je
cld
call
pop
add
mov
jns
mov
ja
mov
mov
cmp
ja
into
fstp
(bad)
ds
jle
pop
(bad)
jecxz
dec
mov
rcr
int3
sar
push
leave
push
stos
push
sub
out
xor
fidiv
inc
je
mov
or
in
repnz
mov
inc
je
mov
dec
je
dec
jge
cs
mov
jbe
cmp
jbe
mov
ins
ss
xchg
adc
jmp
cmp
pop
mov
xchg
push
loopne
mov
inc
iret
dec
daa
mov
mov
xchg
ret
xor
and
sub
retf
lahf
mov
rcl
loop
inc
daa
cdq
and
icebp
jmp
in
test
inc
jge
mov
jbe
lea
mov
pop
pop
and
push
mov
xlat
jg
xor
pop
imul
add
inc
xchg
ret
fmul
lahf
mov
es
lea
adc
(bad)
or
lods
mov
cmp
jl
jmp
add
arpl
pop
jle
xchg
xor
push
lea
je
popa
jge
xchg
push
xchg
into
mov
pop
xor
stos
or
add
pop
jge
mov
neg
jl
jg
jmp
or
leave
mov
stos
xchg
push
mov
push
mov
addr16
pop
pop
gs
mov
inc
dec
push
test
(bad)
in
or
jg
dec
mov
stos
cmp
jne
pop
pop
addr16
ret
sub
mov
fwait
sti
mov
sub
mov
(bad)
repz
js
enter
adc
inc
cmp
mov
out
(bad)
stc
pop
jle
mov
cs
sub
daa
jmp
std
xchg
jp
(bad)
xchg
mov
mov
sub
cmp
lea
xchg
retf
lea
shl
icebp
or
sub
adc
idiv
or
or
mov
add
fisttp
popf
lods
pop
pop
cdq
or
shl
cld
(bad)
cdq
fnstenv
fwait
inc
fidiv
dec
dec
inc
dec
inc
dec
lods
or
jl
add
dec
xchg
jge
loope
lods
iret
jno
ret
std
mov
aam
xchg
aad
adc
stc
std
jl
pop
sbb
jg
cld
sub
xor
stos
jmp
fucomi
fistp
mov
loop
push
adc
lods
paddusb
pop
inc
clc
dec
test
neg
mov
ret
inc
loopne
mov
out
dec
sbb
sub
xlat
add
cli
rcl
leave
mov
mov
mov
mov
loope
push
cmp
mov
fwait
and
jmp
pop
scas
cld
fistp
je
mov
dec
mov
repz
inc
test
jne
add
and
stos
xor
jns
inc
pop
sti
add
je
inc
jne
nop
loope
outs
pop
dec
jne
ret
xchg
repz
inc
cli
int
or
repnz
cld
xlat
lds
lea
call
sbb
inc
je
push
push
cmp
loopne
and
or
or
jle
loopne
test
loop
ret
loopne
mov
test
jg
ret
and
inc
add
and
and
adc
and
jge
sub
sub
xor
inc
es
pop
jnp
push
sbb
and
sub
sub
or
wrmsr
sub
sub
lods
jae
scas
sub
cmps
loopne
mov
add
mov
retf
xchg
out
pop
adc
inc
inc
or
loopne
and
test
adc
or
cld
cmp
inc
xor
inc
inc
push
rcr
cs
rcl
mov
adc
das
and
sbb
inc
fabs
push
push
pop
hlt
xor
es
pop
frndint
rcr
scas
nop
or
fstp
fnstsw
fwait
mov
test
je
fidiv
jne
(bad)
cld
(bad)
clc
idiv
mov
inc
sub
xchg
shr
and
add
ret
js
cmp
xor
stos
mov
add
jns
iret
hlt
xlat
inc
cmp
or
call
jae
cmp
jb
mov
js
dec
and
ja
jnp
loopne
jmp
cmp
xor
jmp
mov
cmp
inc
xor
push
or
mov
jmp
xchg
out
jmp
push
adc
sub
(bad)
ror
jp
not
je
sbb
or
in
ret
andps
jl
mov
cmps
aas
pushf
fcos
sbb
jae
dec
add
mov
sbb
in
ins
or
fs
or
fidiv
fwait
in
lock
sbb
sub
jmp
lock
popf
and
jne
dec
sub
cmp
mov
or
add
scas
jmp
enter
cmp
pop
xchg
xor
mov
mov
push
or
sbb
inc
pop
add
pop
push
test
jns
push
psllw
inc
jg
fldz
cmps
cwde
or
or
in
xlat
ins
mov
cmp
or
jg
test
cmp
jne
inc
push
sub
xor
cwde
jne
mov
sahf
fistp
into
sbb
fldcw
loopne
mov
fistp
jmp
fstp
std
rol
arpl
test
mov
xlat
add
and
push
int3
add
add
lods
sub
add
jae
fimul
ja
fiadd
mov
neg
lahf
or
push
inc
imul
pop
popa
lock
loopne
cli
hlt
nop
jb
add
push
data16
inc
sub
pusha
sub
pop
pop
popa
or
frstor
push
(bad)
je
test
ja
fisttp
in
rcr
mov
inc
popa
push
push
in
and
xchg
int3
xchg
add
cmp
mov
sub
fstp
fwait
addr16
inc
bound
mov
fiadd
fcmovnb
fld
inc
and
lock
movs
cmp
in
inc
mov
adc
mov
xor
adc
jge
pop
xchg
push
mov
arpl
or
sbb
repnz
jae
or
cmp
inc
dec
outs
add
stc
inc
dec
lahf
jae
jg
lea
movs
addr16
add
(bad)
cmpxchg
pusha
jmp
mov
or
push
ror
sbb
add
pop
int3
jo
fsubr
push
retf
movs
dec
fbld
pushf
mov
mov
out
mov
test
push
fdiv
inc
xchg
fnstcw
fdivr
pop
mov
fidiv
add
loopne
push
shl
dec
(bad)
mov
sbb
popa
push
cmp
sbb
or
cld
ja
mov
and
enter
add
pop
pop
out
in
adc
and
pop
in
cdq
adc
mov
mov
icebp
mov
pop
scas
stos
cmp
loopne
pop
jecxz
std
ret
psrad
and
lea
lea
add
jge
add
add
ja
mov
push
jb
or
jb
sti
ins
push
push
idiv
(bad)
cmp
ja
adc
call
dec
inc
jne
sub
dec
mov
inc
mov
add
cdq
idiv
imul
fsub
sub
aas
pusha
mov
mov
popa
ret
or
dec
inc
jae
inc
std
std
lds
or
push
sub
in
fwait
pop
les
and
pop
test
call
lods
and
dec
in
test
jg
mov
dec
psubb
sbb
fs
or
movs
aas
pop
dec
rcr
dec
cld
(bad)
das
test
cmp
jl
add
fstp
pop
jecxz
and
je
pusha
inc
mov
(bad)
lods
mov
xchg
(bad)
dec
dec
cmp
fs
sub
repnz
pop
sbb
shl
cmp
xchg
sub
loop
adc
movs
cwde
add
ret
mov
push
fstp
mov
sti
faddp
pusha
jecxz
cmp
jb
adc
sub
jmp
push
sbb
out
sub
hlt
mov
sbb
mov
stc
scas
rcl
mov
jbe
retf
test
jge
mov
fnsave
mov
rol
cmps
pop
xor
xchg
xchg
fbld
or
sub
pop
and
iret
sti
push
repz
push
cmp
push
adc
scas
pop
push
adc
fstp
retf
jo
inc
jecxz
mov
mov
xchg
and
test
cld
enter
inc
shl
fcmovb
sbb
in
cmp
fcom
adc
or
hlt
mov
ins
inc
aam
shl
neg
add
cmp
fimul
add
loopne
in
pop
adc
in
gs
loopne
add
and
test
adc
fsubr
(bad)
mov
test
pop
ret
or
sti
je
lods
ss
lods
mov
sbb
mov
js
add
jle
fucomip
cmp
or
lea
or
xchg
repnz
mov
fcmovne
popf
mov
add
jecxz
and
push
jge
call
jmp
out
dec
call
mov
cmp
mov
ins
test
inc
jmp
int
out
out
repnz
add
mov
push
jb
in
jae
loopne
and
stos
mov
clc
mov
inc
mov
jp
out
push
mov
mov
lahf
xchg
mov
je
or
das
loopne
add
(bad)
enter
jno
pop
add
pop
add
sub
mov
jne
jb
shl
fs
xor
rcr
imul
mov
(bad)
or
jmp
cmps
push
xchg
jo
imul
lods
in
and
fsub
pop
addr16
iret
in
sbb
mov
stc
lock
jge
bswap
add
nop
pminsw
je
jecxz
jmp
add
inc
cmp
jne
push
xor
ret
dec
xchg
shl
out
lock
xor
jns
pop
add
mov
sbb
mov
inc
enter
fadd
mov
mov
mov
sar
inc
mov
adc
jecxz
or
pusha
add
stos
jg
inc
bt
pop
pop
popf
jecxz
jmp
sub
cmp
add
repnz
jns
mov
lahf
sar
iret
sbb
iret
push
mov
pop
cmp
jne
dec
fldpi
add
fisub
icebp
ja
idiv
jmp
imul
movs
or
or
or
or
push
ret
jcxz
xchg
pop
or
or
rcr
cmp
sub
and
in
push
mov
push
mov
pop
or
sub
push
mov
or
mov
loop
mov
cdq
sahf
mov
std
inc
jl
sub
popf
dec
push
lea
dec
pop
popa
xchg
mov
cmp
dec
fsub
loopne
hlt
dec
clc
sbb
and
mov
lock
(bad)
outs
adc
movs
fist
xor
leave
mov
ret
dec
je
add
sub
push
int3
nop
add
mov
mov
mov
addr16
and
nop
mov
mov
adc
and
lods
loope
mov
movs
(bad)
cmps
or
or
pop
jg
test
add
adc
and
out
xchg
fbstp
add
push
jmp
or
pop
je
in
sti
pusha
jmp
cmp
dec
mov
add
jmp
sahf
daa
in
add
aas
(bad)
jne
rol
jmp
cmp
xor
mov
stos
pop
add
xor
in
lods
out
or
dec
push
les
das
mov
jmp
movs
or
dec
sbb
jle
sbb
xor
dec
fcomip
pop
mov
sub
call
xchg
inc
mov
lahf
or
mov
movs
retf
in
push
mov
mov
mov
jmp
jle
cmp
sub
(bad)
daa
cs
jns
add
add
dec
ja
jns
adc
dec
rol
cwde
inc
jmp
and
add
xor
xchg
cdq
or
(bad)
rol
push
sub
and
popa
sti
adc
stos
add
ret
adc
shr
or
dec
jo
lods
into
jge
les
popf
int
loopne
add
cdq
fisubr
mov
xchg
(bad)
or
xchg
jmp
sbb
or
lods
xlat
ret
mov
add
pop
mov
fld
(bad)
test
inc
mov
test
push
ret
jmp
adc
cli
xor
cmp
push
dec
pushf
into
popa
fcomp
or
push
stc
mov
jmp
out
inc
dec
das
push
dec
adc
xor
mov
ja
pop
pop
test
inc
ret
jne
or
sbb
push
mov
lea
pusha
ins
out
stos
and
mov
jno
mov
les
aad
and
movs
xor
daa
jno
inc
ficom
mov
call
repnz
pop
inc
pusha
push
jb
scas
fwait
sbb
loop
clc
std
not
(bad)
push
cld
cmp
clc
sub
stos
js
mov
pop
pop
jecxz
mov
adc
pop
add
rcl
xchg
ret
(bad)
adc
add
cmc
sub
jae
xor
clc
sbb
sbb
aaa
pushf
adc
ret
add
and
add
idiv
jno
sub
enter
mov
xchg
cmp
inc
cmp
and
scas
pushf
or
mov
je
add
push
test
xor
and
mov
mov
fcomp
and
dec
in
(bad)
cmp
jne
inc
and
pop
sbb
(bad)
(bad)
cmp
jmp
sub
je
dec
je
sub
mov
dec
mov
or
push
jmp
mov
jmp
push
push
push
scas
sbb
arpl
mov
jle
fadd
lsl
xor
mov
sbb
ror
add
adc
xor
pop
pop
pop
push
add
pop
mov
jmp
jae
jno
jl
mov
imul
out
ret
leave
pop
mov
(bad)
jmp
add
or
sbb
jne
sbb
test
cmp
jg
bound
xor
xor
test
cdq
xor
sub
add
daa
addr16
mov
cmp
imul
add
push
adc
pop
dec
outs
scas
push
jmp
gs
sub
cmp
add
inc
mov
push
push
and
add
xchg
sbb
sbb
loope
add
aas
or
stos
hlt
mov
int3
scas
in
loopne
push
and
ds
loop
jne
stc
lods
inc
scas
mov
loopne
rol
lea
sub
push
lods
push
lods
mov
stos
add
push
mov
sbb
or
or
mov
pushf
xor
clc
and
mov
sbb
bnd
sub
add
aas
or
movs
lock
imul
lock
ret
push
mov
and
jno
call
repnz
data16
aaa
es
jae
dec
xor
hlt
jmp
cmp
inc
mov
mov
fcomp
jmp
cmp
ja
fist
adc
add
(bad)
push
(bad)
stos
xchg
loop
data16
icebp
xchg
std
mov
cmp
cmp
jle
and
fs
jne
sub
and
add
repz
imul
(bad)
adc
js
cmp
movs
daa
inc
push
aaa
jl
pushf
data16
shl
and
mov
sub
out
and
imul
and
sar
mov
fstp
fsubr
fimul
fs
mov
fcomp
das
xor
imul
(bad)
lds
add
jge
movs
movs
jns
rcr
popa
test
cmp
xchg
outs
fs
add
pop
aaa
lock
repnz
xchg
scas
hlt
fild
dec
fnstsw
fistp
stos
xor
adc
jns
add
(bad)
jmp
push
pushf
add
mov
push
jmp
sub
mov
jno
pop
push
xchg
and
inc
add
xor
mov
cmps
jb
mov
je
or
add
or
cmp
and
add
sbb
test
ret
jge
xor
lock
push
add
ds
sub
add
xor
mov
sbb
push
inc
add
push
or
les
mov
pop
aas
test
xor
jp
dec
ins
xor
ja
pop
adc
xchg
into
mov
mov
dec
ret
xchg
cmp
adc
pop
pop
call
int3
mov
jno
dec
pop
int3
inc
test
mov
lods
nop
jbe
call
adc
or
jne
dec
mov
jle
scas
js
daa
fst
fcomp
or
sbb
stos
fstp
fwait
jmp
sbb
push
shr
xchg
icebp
mov
ficomp
pop
push
pop
cmp
(bad)
scas
cmp
js
add
mov
sub
jb
in
and
cld
or
xchg
sti
xor
fwait
sub
or
mov
adc
dec
(bad)
pop
push
or
and
xor
mov
and
es
imul
pop
add
test
sub
adc
popa
xchg
jl
push
mov
pop
or
rol
ja
(bad)
adc
fimul
mov
mov
push
das
mov
test
leave
mov
push
push
jmp
enter
inc
inc
dec
retf
cmp
xor
sub
xchg
loopne
jnp
jb
lock
scas
ret
sar
jne
ror
and
sahf
xor
xlat
cs
jnp
xlat
xchg
push
in
adc
jb
add
shl
in
and
dec
call
loopne
cmp
or
xlat
adc
xor
dec
fdiv
repnz
rol
pop
jo
cmps
push
xor
pop
mov
jge
je
xchg
cmp
add
fnsave
shl
sbb
xchg
mov
cmps
cmc
out
pop
sbb
or
inc
pop
inc
fstp
add
mov
adc
cmp
cld
lds
cmp
pop
in
lahf
(bad)
pusha
jnp
push
ins
add
or
cmp
enter
ja
cmp
lock
sbb
add
addr16
lds
push
sub
arpl
and
pop
inc
dec
jne
push
push
jns
rcl
(bad)
sbb
(bad)
mov
jnp
je
enter
ror
(bad)
clc
cwde
enter
movs
or
test
(bad)
mov
add
pop
or
jmp
lods
inc
jmp
stc
sub
je
sub
je
scas
ret
je
rol
sbb
pusha
frstor
or
das
xor
mov
push
sbb
jo
(bad)
(bad)
push
cmp
in
test
cmp
clc
cmp
push
mov
or
(bad)
jle
jge
mov
jle
lods
dec
add
dec
xor
adc
or
mov
jmp
pop
je
jne
xor
jmp
dec
push
movs
add
in
jle
cmps
push
mov
pop
pop
dec
dec
in
dec
xor
push
cmps
or
aas
pop
gs
push
sub
pop
xlat
push
sub
add
adc
sti
mov
xlat
test
or
jl
pop
add
push
cmp
sbb
out
rol
ss
and
pop
pusha
pop
or
je
add
clc
jmp
sub
add
fmul
pop
sbb
iret
sub
ins
retf
jnp
popf
or
mov
dec
cs
xor
and
fdivr
es
cmp
pusha
psubusb
scas
jo
pop
rcr
js
mov
and
clc
xor
and
lea
adc
mov
mov
or
and
mov
jnp
repnz
xor
mov
sar
div
les
sahf
clc
xchg
sbb
mov
les
dec
cmp
je
data16
cdq
or
mov
mov
dec
callw
pop
imul
aam
jge
jl
enter
and
mov
cmp
sub
or
mov
not
push
std
hlt
in
push
popa
jo
retf
inc
xor
or
push
add
dec
push
loope
mov
inc
les
test
sub
pop
bound
push
bound
xor
jns
std
icebp
sub
cmp
or
jg
xchg
cmp
sahf
fist
(bad)
shr
inc
add
pop
mov
fcomi
sub
adc
adc
ins
test
ins
jb
or
xchg
mov
les
dec
fadd
mov
retf
add
lds
fadd
fnstcw
mov
ja
add
(bad)
int3
lock
repnz
xchg
adc
fwait
adc
js
mov
sti
fcom
pop
ret
cld
mov
or
mov
lods
add
rol
xor
dec
sbb
dec
sti
push
jg
cmp
cli
out
jne
sbb
xor
mov
(bad)
ins
push
push
inc
aas
sbb
jne
adc
mov
pop
pop
jl
add
movs
xchg
push
add
push
sar
retf
adc
mov
push
jb
jmp
cmp
jmp
sets
mov
shl
or
sar
adc
mov
push
cld
imul
xchg
popf
sbb
into
inc
sub
jl
or
pop
or
push
ins
add
stos
xor
or
jne
or
push
in
push
repnz
mov
xor
mov
icebp
es
and
or
sub
mov
adc
(bad)
jbe
clc
dec
cmp
call
jmp
mov
jo
loope
jmp
enter
mov
push
push
push
stc
inc
(bad)
cmp
je
jmp
xor
inc
xor
sub
jmp
and
gs
xchg
test
add
gs
xchg
or
or
push
push
cmps
cmp
push
mov
add
adc
mov
mov
nop
jae
mov
(bad)
out
push
hlt
pop
cld
cmp
movaps
mov
inc
xor
out
aam
stos
push
inc
or
stos
rep
inc
and
and
(bad)
pop
stc
shl
cmps
leave
xchg
fs
mov
or
dec
add
popa
rol
pop
popf
mov
adc
test
fs
jnp
cmp
or
enter
addr16
mov
mov
pushf
fs
dec
lea
outs
dec
xchg
pop
fs
adc
xchg
jge
mov
in
in
mov
and
add
xchg
dec
daa
ss
jae
xchg
inc
sub
dec
mov
dec
sub
pop
adc
rol
cli
jge
jmp
jae
jae
and
fnstsw
cmp
pop
inc
add
es
mov
hlt
add
mov
mov
sub
jo
add
jnp
nop
inc
dec
inc
add
lea
ss
imul
movs
dec
scas
pusha
lods
add
scas
mov
xor
cmp
aam
sbb
stc
jl
mov
sub
or
test
jmp
cmp
jae
cwde
adc
and
test
add
and
fnstcw
dec
div
dec
loop
leave
mov
add
add
inc
sub
pop
jo
ficomp
cld
inc
cwde
adc
add
aaa
in
inc
add
and
shl
cmp
lods
jo
js
ret
es
ins
jecxz
xchg
mov
jecxz
fistp
and
adc
mov
cmps
xor
mov
hlt
xor
fidiv
mov
repz
push
hlt
mov
adc
mov
or
mov
push
fdivr
jl
pcmpeqw
cmp
cmps
jle
mov
fucomip
add
jne
aam
dec
pop
and
cmp
push
adc
adc
fst
pop
and
cmp
nop
imul
add
pusha
and
fcompp
es
xor
cdq
sbb
ja
sub
xor
jns
sar
mov
aam
push
dec
sub
inc
xchg
adc
ss
stc
jne
adc
data16
push
push
std
inc
push
adc
add
mov
add
mov
mov
and
mov
sub
loopne
ss
(bad)
jns
dec
or
inc
sti
and
push
pop
add
xchg
popf
and
adc
mov
pop
or
adc
mov
mov
xor
cmp
daa
pop
addr16
mov
ja
movs
mov
cdq
lock
adc
popf
adc
push
inc
pop
jg
mov
scas
loope
cs
and
jl
mov
and
fist
loopne
mov
inc
inc
inc
jge
loop
add
xor
cmp
mov
sbb
arpl
mov
mov
inc
jl
jne
jno
dec
in
sbb
addr16
imul
inc
or
mov
loopne
mov
push
or
aaa
or
push
pushf
lods
paddq
xchg
aam
cmp
jg
rcr
push
movs
jg
xchg
or
or
mov
xor
and
ss
es
jge
je
mov
pop
mov
fdivr
pop
and
ret
sub
jle
daa
xchg
das
test
loop
pop
and
mov
icebp
jno
add
dec
cld
ror
movs
nop
push
mov
push
pusha
aaa
mov
emms
xor
fwait
adc
inc
mov
pop
fwait
iret
ins
add
adc
xor
and
jge
sbb
enter
cmp
xchg
fldcw
fbld
mov
ins
inc
jg
adc
or
scas
icebp
or
dec
call
std
mov
cmp
sti
sub
inc
(bad)
mov
fdivr
adc
imul
pop
add
(bad)
xor
(bad)
out
adc
inc
jmp
pop
movzx
cmp
add
clc
lahf
jge
test
rcl
push
outs
sbb
jmp
je
test
arpl
xlat
js
jge
jb
add
sub
repz
dec
(bad)
lds
dec
jge
lds
adc
call
sub
ss
add
inc
fiadd
add
or
sbb
sar
cli
jbe
mov
sub
mov
push
add
adc
lock
daa
xchg
bnd
(bad)
adc
dec
inc
inc
jns
push
lock
xchg
imul
inc
(bad)
jne
xor
mov
and
mov
(bad)
pop
cmp
add
adc
lahf
fdivr
mov
pop
popf
and
pop
scas
(bad)
or
ins
bound
jge
test
push
mov
fwait
call
or
or
cmps
aaa
push
mov
sub
jb
inc
lea
inc
sti
stos
inc
arpl
jne
pop
jb
mov
or
pop
jne
repz
ds
clc
pop
ja
pop
xor
dec
out
seta
jbe
into
repz
push
mov
ss
in
push
(bad)
cld
mov
leave
xchg
add
les
push
mov
lock
call
test
or
mov
pop
inc
lea
jne
scas
jp
adc
adc
add
pop
fcom
push
out
mov
mov
mov
mov
es
jno
sub
mov
popa
mov
out
scas
mov
inc
inc
cmp
pop
jne
lea
into
dec
popa
sub
popa
push
jae
imul
cmp
xchg
shl
cmps
mov
jmp
cs
fwait
data16
shl
push
and
pop
arpl
sub
add
lock
out
sbb
stc
push
xchg
mov
(bad)
inc
xchg
(bad)
mov
mov
daa
les
jnp
sahf
pop
inc
pop
cwde
sbb
out
push
lock
test
pusha
push
test
mov
mov
push
inc
call
or
(bad)
enter
fbld
push
xchg
or
in
ins
pop
inc
push
in
mov
adc
mov
mov
loopne
mov
pop
mov
inc
aam
fdivr
cmpxchg
mov
jg
pop
or
mov
cwde
in
jns
int3
inc
les
int3
mov
mov
jge
add
in
enter
and
adc
fisttp
(bad)
push
fcomp
ja
add
and
jb
adc
hlt
mov
cmp
ja
xor
cld
push
hlt
mov
adc
sbb
adc
movs
lock
dec
xor
dec
add
test
out
ffreep
mov
call
mov
and
das
fs
lahf
scas
ins
add
fs
(bad)
mov
ins
add
scas
pop
jo
push
sub
dec
js
pop
sbb
pop
cmp
leave
in
int
push
cmp
movd
rcr
add
mov
(bad)
and
inc
or
je
into
pop
xchg
adc
(bad)
fmul
add
adc
adc
sub
adc
push
sub
xchg
sub
push
push
inc
pop
push
dec
lods
movs
sub
push
ret
add
jge
ss
mov
lds
mov
xor
push
jmp
sbb
shl
mov
add
sub
sub
pop
cmc
xchg
mov
inc
pusha
mov
inc
loope
sbb
sbb
mov
and
jecxz
cmp
jl
jno
cmp
mov
or
cwde
mov
xor
(bad)
in
inc
cmp
jg
fld
jae
cmp
in
add
rcr
inc
in
out
push
pop
lock
xor
imul
add
loopne
mov
ja
loope
loop
jne
daa
add
sahf
add
push
jnp
rcl
push
push
inc
in
push
enter
pop
in
clc
pop
sub
cld
and
(bad)
aas
adc
out
or
outs
popf
xor
daa
cld
pop
loopne
or
add
stc
push
or
mov
adc
adc
pop
aas
pop
or
or
test
(bad)
loopne
out
mov
xor
fs
mov
xchg
test
fstp
pop
push
loope
sbb
inc
repz
mov
xor
jmp
test
jmp
pop
ja
out
mov
int
dec
into
movs
mov
push
and
pop
xor
ror
cdq
xor
sub
sbb
imul
gs
jo
inc
js
jge
jg
imul
mov
ins
pop
adc
adc
xor
das
jbe
ret
fdiv
mov
push
pop
enter
sub
cmc
jg
sbb
inc
cmp
jne
sbb
xchg
xchg
sub
test
popa
(bad)
das
sbb
(bad)
icebp
scas
adc
fdivr
add
(bad)
popa
inc
sbb
pop
inc
fchs
in
add
and
dec
aas
div
xchg
add
jmp
mov
loopne
push
ror
xchg
test
mov
xchg
out
gs
inc
mov
mov
fcomp
mov
cmp
jecxz
shl
lea
imul
pop
jp
out
and
inc
or
test
or
aas
xchg
xor
movs
fsubr
cmp
add
add
sub
inc
jnp
pop
ret
mov
js
push
pop
adc
mov
in
ins
cdq
mov
es
jb
adc
xchg
(bad)
sub
imul
aad
add
in
add
stc
adc
fs
and
(bad)
(bad)
sbb
fcomp
mov
pusha
mov
rcl
in
mov
push
sbb
popa
pusha
pop
adc
call
dec
icebp
inc
jnp
ja
je
push
aad
mov
inc
add
clc
aam
int3
aas
mov
xchg
ret
mov
lea
mov
jmp
lods
push
ja
adc
jns
mov
(bad)
xor
add
aam
or
mov
inc
fist
sete
inc
inc
sbb
xor
(bad)
int3
mov
daa
pop
add
dec
sbb
jnp
jne
xor
inc
shr
int
loopne
scas
aam
enter
adc
sbb
mov
jae
xchg
inc
scas
add
mov
jno
cmp
cmp
add
aad
jmp
inc
aad
loop
or
pop
js
xchg
sar
ja
dec
or
mov
or
dec
out
sbb
xor
mov
cmp
icebp
or
jmp
push
adc
mov
push
xor
adc
add
in
push
inc
mov
popa
push
outs
mov
dec
fadd
mov
shl
jecxz
neg
(bad)
push
fistp
call
dec
cmp
xlat
rcr
jne
cmp
call
mov
mov
jp
xchg
xchg
jg
pop
pusha
loopne
push
xchg
enter
fnstcw
add
fwait
xchg
cdq
es
push
jmp
mov
pop
mov
or
lock
in
mov
cld
sub
mov
pop
retf
push
push
sbb
imul
or
(bad)
and
push
cld
xor
int
hlt
push
enter
pop
jbe
imul
mov
dec
jl
imul
les
js
push
mov
call
outs
in
movs
mov
pushf
push
sbb
call
mov
fwait
je
push
push
push
jle
sahf
aam
imul
push
les
(bad)
(bad)
add
inc
push
ins
dec
ss
cmp
pop
cmp
push
movs
cmp
pushf
xor
push
xor
ss
sbb
ins
sub
and
and
and
pushf
ins
dec
mov
push
aam
sbb
adc
movs
or
inc
or
popa
nop
ss
push
test
(bad)
push
sbb
and
cld
sbb
xchg
enter
xchg
ss
xor
push
hlt
in
(bad)
and
in
in
xor
rcr
lock
push
jl
inc
out
and
data16
mov
daa
fwait
inc
fcmove
pop
ins
(bad)
aam
rol
dec
ss
mov
or
mov
out
sbb
push
mov
jmp
pop
in
xchg
mov
xor
cli
test
mov
adc
ss
rol
pushf
mov
fist
cmp
push
js
sub
nop
and
mov
pusha
xor
adc
add
int3
test
sbb
mov
loopne
push
addr16
cmps
jge
sub
fs
call
add
xchg
dec
es
pushf
cwde
nop
and
cdq
mov
sti
leave
call
daa
xor
jno
pusha
in
inc
cmp
int3
sub
jmp
std
movs
mov
cmp
mov
lea
sbb
sub
sbb
in
mov
test
xor
inc
fidivr
and
mov
aaa
cmp
fcmovb
fistp
pop
data16
or
(bad)
mov
adc
enter
dec
loopne
or
enter
mov
in
leave
or
jp
and
and
and
sbb
ins
mov
jns
cmp
push
sbb
xchg
xlat
push
out
push
and
inc
cdq
mov
inc
mov
sbb
div
sbb
js
(bad)
lock
lock
clc
loop
fwait
pop
mov
sub
inc
and
cmc
sbb
je
mov
std
jno
fs
test
sub
pop
jb
or
icebp
adc
xchg
inc
or
adc
cwde
inc
add
dec
push
pop
icebp
jecxz
xor
sahf
popa
nop
ffreep
add
add
stos
push
retf
inc
or
in
cmp
leave
pop
stos
add
out
or
lea
mov
adc
stc
mov
stos
nop
(bad)
sub
push
and
sbb
push
add
movs
sar
jns
or
cld
adc
jmp
pop
cwde
push
push
mov
mov
and
loop
pop
mov
mov
xchg
dec
movs
mov
addr16
shr
shl
mov
in
call
xchg
lock
clc
enter
dec
add
int3
dec
leave
xor
or
pop
adc
xor
les
fcomp
mov
xor
pushf
rcr
in
loopne
lock
pop
repnz
pusha
call
hlt
jo
fs
jns
imul
sbb
push
or
jne
pop
mov
inc
push
inc
into
dec
add
outs
je
fs
inc
in
fs
jne
addr16
add
jmp
fist
outs
fs
outs
dec
jb
fnstsw
in
pop
outs
jb
inc
ins
jo
inc
jb
ins
push
je
loope
mov
push
push
cmp
in
inc
jae
mov
cmp
aas
inc
jae
dec
in
fst
push
dec
add
mov
cmp
outs
outs
out
cmc
xchg
and
cmc
clc
mov
add
add
mov
es
and
in
mov
adc
and
or
inc
pop
out
push
clc
cmc
leave
imul
add
outs
sbb
push
inc
adc
xor
mov
inc
sbb
add
sbb
push
shl
or
sub
pop
fs
ins
in
sub
and
add
push
lods
push
adc
cmp
xchg
dec
inc
cmp
in
nop
shl
pop
xor
or
sub
and
pop
pop
dec
idiv
xchg
cmp
jo
(bad)
mov
xor
or
push
inc
mov
mov
lods
mov
adc
inc
push
xor
leave
or
aas
mov
(bad)
je
test
cmp
addr16
fadd
pop
test
fadd
fidivr
mov
mov
push
sbb
mov
(bad)
xchg
fs
add
inc
ins
mov
or
add
dec
outs
pop
mov
and
ja
cli
aas
iret
add
inc
push
inc
jb
sbb
jo
add
inc
adc
leave
adc
jnp
ins
jo
xchg
aam
xchg
adc
and
sbb
sti
(bad)
sti
mov
outs
imul
xchg
test
int
(bad)
push
adc
xchg
mov
daa
arpl
adc
pop
stos
jg
cld
dec
ret
or
xor
cld
das
pusha
mul
or
xchg
pop
cmps
outs
mov
in
in
lea
(bad)
repnz
pop
add
clc
mov
adc
daa
xlat
pusha
push
add
daa
call
cld
daa
in
fcom
nop
fwait
movs
pop
mov
add
and
repnz
idiv
in
leave
test
cmp
(bad)
inc
pop
loop
(bad)
enter
mov
lds
inc
(bad)
mov
mov
xchg
cmp
pop
das
jg
sbb
sbb
inc
ror
clc
sub
int3
in
fcmovnu
push
scas
out
mov
or
aas
dec
je
sbb
xor
jns
out
lahf
push
xchg
daa
loopne
ja
pop
adc
std
add
mov
lock
mov
pop
mov
dec
imul
movs
clc
mov
(bad)
xchg
clc
pop
stos
hlt
mov
out
lock
pushf
pop
dec
lock
stc
sub
jns
dec
in
and
movs
cdq
jbe
call
mov
mov
in
sub
inc
jecxz
jmp
xchg
test
xchg
add
nop
data16
jmp
mov
jmp
mov
or
and
les
fsub
xchg
inc
mov
enter
cmp
xchg
(bad)
mov
pop
leave
push
dec
sahf
mov
or
ret
ficom
imul
pop
sub
cmp
jo
mov
outs
mov
je
cdq
ret
std
pop
out
or
adc
scas
dec
and
scas
retf
cmp
scas
iret
enter
or
iretw
stos
pop
(bad)
push
cmp
call
cli
rol
shl
xchg
adc
outs
loopne
ret
adc
push
xchg
pop
push
push
repz
add
test
aaa
sti
add
pushf
(bad)
xchg
jne
pushf
xchg
imul
call
sahf
dec
dec
ins
xchg
pop
mov
adc
dec
lahf
cld
jne
add
or
and
mov
inc
das
push
add
and
sub
rcr
outs
(bad)
(bad)
and
test
int3
xchg
pop
les
adc
mov
dec
xchg
clc
jmp
mov
and
lock
aas
inc
mov
imul
lea
(bad)
(bad)
push
call
sbb
lea
push
jno
loop
or
test
and
push
pop
mov
xchg
inc
sub
inc
pop
dec
inc
jo
cmp
sbb
ret
jmp
or
mov
push
dec
jge
dec
adc
in
(bad)
enter
out
test
pop
sbb
cs
mov
ror
ss
or
push
push
push
movs
xor
push
aas
add
sar
pop
repnz
sbb
(bad)
ja
push
sub
or
push
ret
loope
xor
div
ror
mul
je
fnstenv
and
imul
jp
push
jp
ror
push
adc
and
or
pop
jae
mov
fisttp
mov
cmp
mov
aas
repz
xor
nop
loopne
test
mov
nop
mov
aaa
add
sub
mov
or
adc
in
cdq
nop
xchg
add
loopne
dec
mov
loopne
jb
fs
adc
sbb
jo
stc
cwde
add
push
xchg
mov
or
adc
aad
repz
call
mov
mov
cmp
xchg
push
aad
hlt
and
data16
jmp
push
(bad)
sbb
lock
xchg
cwde
mov
pop
add
mov
xchg
cdq
cs
dec
push
adc
(bad)
aam
xchg
jns
pop
adc
aas
lock
cmps
cdq
and
dec
jmp
adc
cmp
xor
inc
imul
loopne
inc
mov
inc
hlt
adc
sub
mov
mov
xor
test
shr
or
pop
pop
daa
clc
sub
cmp
je
pop
jne
imul
(bad)
retf
mov
xchg
inc
add
or
xor
or
int3
jg
and
hlt
xor
and
outs
inc
int3
xchg
sbb
push
out
(bad)
sbb
push
add
dec
inc
jb
pminub
pop
pop
push
and
inc
pop
jns
xchg
and
mov
xor
or
push
inc
dec
je
and
inc
pusha
mov
cld
repnz
or
jl
pushf
inc
xor
es
lock
mov
lock
pop
hlt
push
sbb
mov
jecxz
add
add
push
cmp
pop
(bad)
call
in
popa
inc
jp
loopne
test
push
mov
inc
mov
shl
cmp
lea
inc
adc
clc
xor
add
aaa
call
fst
ins
movs
adc
and
icebp
mov
jp
inc
in
shl
xchg
cmps
fwait
mov
sub
mov
or
adc
or
mov
xor
or
ret
fist
adc
in
push
scas
mov
add
xchg
mov
mov
pusha
dec
inc
loope
pop
push
sbb
or
add
adc
mov
nop
in
mov
nop
shl
test
sbb
mov
cmp
ja
cmp
iret
stc
mov
sbb
mov
clc
adc
data16
or
bound
or
imul
push
mov
hlt
push
dec
cwde
in
popf
(bad)
movs
cmp
pushf
cmc
or
or
mov
dec
in
scas
movsx
sbb
mov
xor
shl
clc
fldcw
dec
(bad)
ret
cwde
loopne
hlt
(bad)
or
or
fcom
clc
not
cmp
enter
test
xchg
lock
or
loopne
xchg
in
enter
push
fsub
test
fmul
mov
dec
cmp
or
aam
enter
mov
add
sbb
enter
(bad)
int
in
sbb
xchg
dec
je
dec
je
jmp
retf
ins
or
sbb
inc
jg
and
je
ds
and
fisubr
addr16
test
loope
(bad)
ins
call
pusha
jg
or
inc
scas
push
pop
daa
int3
sbb
(bad)
pop
jmp
push
inc
sbb
lds
xchg
mov
mov
fisub
shl
add
inc
cs
mov
bnd
adc
lods
(bad)
mov
or
cmp
mov
adc
aaa
cs
and
sbb
cs
pushf
cmp
test
(bad)
sbb
jno
or
add
nop
ds
sbb
dec
mov
or
mov
mov
gs
stc
cmp
sbb
xchg
adc
sbb
mov
mov
cmp
cmps
push
sahf
jbe
xor
mov
test
add
mov
jmp
add
xchg
invd
mov
pop
mov
in
and
cwde
orps
add
inc
int3
test
adc
and
or
or
inc
adc
dec
loopne
xor
rcr
repnz
in
and
out
pop
jo
mov
mov
adc
adc
cdq
xchg
cmp
loopne
dec
adc
push
push
jb
xor
cmp
xor
and
aaa
jbe
sub
fild
adc
ds
dec
mov
fnstenv
adc
push
es
xor
jns
cdq
mov
shr
or
iret
ror
inc
rcl
es
lods
xchg
dec
push
lea
lods
lods
xor
test
push
inc
inc
pop
mov
push
inc
call
cmp
push
xchg
mov
cli
in
ret
fs
loopne
popa
mov
aaa
loopne
ins
ret
dec
aaa
(bad)
fsub
pop
ins
pusha
aaa
fdiv
aam
sbb
push
mov
xor
adc
cdq
push
pusha
sub
into
dec
test
loope
add
adc
inc
aaa
add
push
cmp
mov
mov
xchg
in
std
push
sbb
ss
jl
ss
retf
push
js
fdiv
push
aas
pop
adc
ss
sbb
mov
popf
dec
dec
aaa
mov
les
sbb
ja
mov
rol
and
mov
ret
test
cs
and
pop
adc
mov
jbe
aaa
pushf
cmp
inc
nop
loope
cwde
jno
push
outs
ss
jmp
ss
popf
pop
scas
inc
nop
nop
jbe
dec
ret
fimul
aaa
mov
jo
sbb
add
mov
mov
xchg
add
es
test
sbb
nop
(bad)
int3
loopne
mov
push
dec
test
mov
pop
popa
in
out
(bad)
mov
rol
repz
pop
jmp
data16
jmp
ja
jg
jmp
mov
xchg
js
mov
dec
pop
dec
sub
loope
or
adc
cmp
movs
popw
(bad)
scas
and
xchg
fstp
fwait
stc
add
ins
ds
pop
push
add
js
mov
adc
jne
or
push
(bad)
or
push
pop
jmp
adc
stc
loopne
push
lock
cmp
jb
xor
movs
(bad)
dec
sub
fimul
push
inc
ins
sub
and
jo
jns
dec
jne
repnz
and
popa
leave
mov
mov
inc
push
aas
ins
dec
inc
outs
jne
xchg
jb
outs
mov
cwde
lods
arpl
mov
xor
add
push
push
out
jbe
or
mov
sub
aas
push
outs
inc
sbb
outs
outs
ja
arpl
js
lock
and
inc
iret
push
inc
and
imul
sbb
(bad)
mov
xor
pushf
xchg
inc
movs
outs
clc
mov
icebp
nop
lea
test
sbb
mov
cmp
push
test
ja
movs
mov
push
xchg
or
inc
sti
pop
pop
es
sub
add
cmp
pop
lods
add
pop
sbb
sub
jle
xchg
cld
clc
fadd
jecxz
dec
push
jne
sbb
imul
mov
repz
popa
pop
sub
mov
xchg
adc
movs
test
in
or
es
or
fs
ins
mov
std
mov
pusha
add
in
mov
lahf
retf
cmp
jg
outs
jns
inc
scas
clc
test
inc
push
push
gs
push
push
or
or
jae
jle
and
push
pop
mov
push
xor
aad
inc
popa
imul
fimul
and
mov
ss
push
pop
shl
aaa
mov
sbb
cdq
dec
(bad)
jne
cs
xor
sbb
push
mov
jmp
popa
sbb
sub
sbb
xchg
pusha
pusha
es
cmp
out
sbb
inc
aaa
sbb
or
pop
push
rcl
les
nop
dec
push
stos
xlat
and
jmp
ins
aam
cmps
call
jge
cmp
je
or
(bad)
adc
into
gs
mov
repnz
xchg
or
pop
push
pop
jp
add
lea
popf
shl
xor
xor
lea
das
clc
adc
add
add
sub
or
jg
int3
inc
dec
rcr
adc
ret
xchg
(bad)
jle
leave
mov
das
std
(bad)
sbb
sahf
and
xor
test
adc
add
inc
dec
ret
push
repz
sbb
mov
sbb
aaa
xchg
jle
das
sbb
(bad)
retf
or
lea
xchg
pop
jge
push
lods
add
pop
rcr
push
mov
xor
lock
test
aaa
adc
call
(bad)
mov
test
push
push
mov
push
push
dec
jb
or
jbe
(bad)
rol
push
xor
mov
aaa
mov
jle
cld
add
icebp
nop
call
xchg
sti
sti
xor
mov
jno
sbb
or
mov
mov
fld
ret
fidiv
loope
push
add
nop
jecxz
push
push
xacquire
jnp
inc
xchg
and
jo
pop
xor
and
inc
mov
xchg
sbb
push
jo
enter
or
push
add
hlt
jge
or
aas
and
dec
jne
xchg
shr
sub
adc
or
sbb
nop
aaa
lock
outs
pop
inc
sbb
jne
push
adc
xor
nop
lahf
(bad)
(bad)
xor
adc
arpl
cmp
jl
xchg
test
ins
aas
(bad)
sbb
sub
jge
test
mov
test
shl
lahf
daa
add
sbb
lods
inc
jns
pop
js
sbb
repnz
sbb
pop
ror
pop
dec
inc
in
call
cmp
rcl
sub
push
scas
nop
bswap
and
and
xchg
or
xchg
cwde
cdq
call
popf
xor
and
and
and
xchg
mov
and
and
fs
inc
jno
jae
nop
inc
push
je
jbe
inc
push
sbb
jns
mov
and
dec
aam
dec
test
mov
shl
mov
xchg
push
xchg
test
(bad)
adc
push
cs
push
add
in
nop
das
aas
in
jmp
add
adc
adc
cmp
mov
add
mov
xor
test
mov
add
inc
dec
xor
cmp
fisttp
and
inc
fcmovne
sbb
cmp
xor
push
addr16
rcl
cmp
push
sub
aam
mov
mov
and
mov
inc
gs
fisttp
mov
mov
sub
pop
loopne
dec
outs
sbb
mov
movzx
fstp
sub
or
or
dec
push
pop
cli
(bad)
cmp
je
mov
dec
and
sbb
jnp
mov
xlat
jmp
jg
in
jne
jmp
cmp
ins
adc
ins
sbb
test
out
pop
dec
lods
stc
lahf
aaa
mov
call
fidiv
sub
mov
push
or
stos
mov
jmp
push
or
jl
or
dec
sbb
mov
daa
adc
daa
jmp
test
jg
pop
dec
add
ss
cmps
push
mov
mov
mov
cmp
je
mov
mov
and
(bad)
and
dec
jecxz
push
adc
or
adc
sbb
mov
cmp
clc
mov
cmp
movs
push
or
add
adc
add
mov
arpl
pop
(bad)
jg
ins
adc
mov
pop
cmps
or
add
imul
push
adc
pop
inc
jne
mov
mov
cmp
ja
jb
add
add
call
jns
dec
rcl
out
mov
mov
or
pop
or
int
mov
lea
adc
into
mov
sti
inc
cmp
pop
dec
inc
xlat
or
cmp
icebp
nop
(bad)
sti
(bad)
jmp
mov
lods
cmp
fwait
mov
stos
mov
out
lea
outs
test
and
les
or
cmp
dec
sub
dec
or
inc
or
stos
or
adc
sub
mov
jno
push
and
loop
xlat
and
xchg
call
or
les
sbb
and
pop
jge
or
adc
push
(bad)
xchg
neg
outs
mov
add
enter
push
push
es
and
pop
outs
add
ret
lahf
jp
adc
push
add
call
(bad)
retf
push
push
pop
pop
adc
jecxz
push
data16
cmp
add
add
or
(bad)
xor
or
xor
iret
and
pop
add
arpl
inc
xor
movs
adc
jb
or
push
lea
add
cmp
int3
cli
add
leave
sbb
xor
rcr
lods
mov
out
stc
dec
sti
mov
fstp
fistp
dec
adc
shr
jne
jo
outs
inc
add
(bad)
mov
invd
inc
fistp
pop
xor
pop
sub
cmp
icebp
retf
add
stos
push
push
pop
xchg
inc
je
cld
jecxz
xchg
(bad)
xchg
and
aaa
or
call
mov
clc
add
fxch
mov
cmp
out
sub
fst
push
retf
push
ins
shr
cmp
outs
xor
sub
out
sub
mov
add
push
cmp
and
jmp
pop
jmp
sbb
add
sub
jmp
or
push
push
mov
nop
sbb
call
jp
jns
cli
add
push
push
jl
add
call
jns
pop
cmps
push
mov
inc
jecxz
or
ins
jne
sbb
mov
sub
fs
or
dec
add
rcr
cmps
scas
icebp
jbe
nop
cdq
outs
mov
mov
in
inc
adc
push
in
jmp
cmp
sbb
nop
ret
je
jmp
or
mov
call
adc
ret
dec
das
daa
outs
es
sub
mov
dec
sbb
push
pop
in
ja
test
adc
sub
(bad)
(bad)
(bad)
inc
sub
add
push
inc
ins
imul
addr16
ficom
sub
iret
out
std
fprem
dec
gs
icebp
imul
push
sbb
jb
inc
ins
popa
add
mul
xchg
or
inc
imul
gs
add
push
outs
mov
push
sbb
adc
inc
and
ror
sbb
xor
inc
cdq
(bad)
das
dec
outs
ins
jns
(bad)
sub
idiv
push
and
and
aaa
push
push
cdq
popf
std
jge
je
or
jb
or
cmps
and
dec
imul
inc
jle
xchg
test
or
out
ds
test
push
add
dec
cli
push
inc
sti
pusha
gs
add
rcl
jg
jo
out
arpl
and
arpl
mov
cs
dec
gs
push
adc
mov
cmps
outs
cld
inc
ror
add
ja
enter
push
sub
fs
push
sahf
xor
push
add
push
ss
imul
shr
sbb
mov
nop
call
pop
pop
adc
mov
dec
dec
mov
test
mov
mov
mov
mov
add
or
mov
lds
outs
mov
scas
aas
ins
in
xchg
or
in
inc
leave
cld
cld
pop
sub
or
dec
sub
sub
aas
scas
int
and
pop
retf
je
fs
lods
push
inc
jge
sub
and
inc
sbb
nop
or
push
adc
mov
jne
sbb
mov
inc
and
dec
imul
mov
cwde
or
jae
adc
push
xor
and
pop
sub
lods
pop
mov
or
add
xchg
sbb
xchg
ins
jo
cs
cmps
push
mov
and
mov
push
sub
call
shl
or
mov
das
push
mov
mov
and
jg
mov
pushf
adc
mov
fcomip
cwde
push
dec
cmp
pop
jl
in
push
push
test
add
lock
pusha
das
ds
aam
or
mov
xor
ds
dec
pop
mov
push
push
pushf
cmps
adc
push
mov
add
call
pop
pop
cld
adc
in
inc
push
mov
call
pop
add
test
mov
inc
add
or
rcr
or
test
popa
nop
push
or
pusha
or
shr
adc
int3
int3
in
jbe
push
add
pop
or
adc
sub
mov
sbb
adc
push
xor
and
mov
inc
inc
pusha
pop
ja
mov
adc
sub
out
xor
cmp
hlt
adc
xor
pop
pusha
push
outs
daa
cmp
mov
add
or
pop
in
sbb
mov
adc
adc
popa
outs
call
push
call
jbe
in
sub
test
xchg
sbb
(bad)
in
inc
pop
cmp
and
add
jae
dec
sbb
scas
mov
fs
and
adc
cs
xchg
fcmovbe
pop
rcr
(bad)
sti
stos
and
sub
xor
or
and
lea
mov
and
cmps
test
clc
sbb
cmovns
jae
fs
jo
mov
cld
jg
add
pushf
jae
push
rcl
sahf
cmps
xor
sub
mov
pop
pop
mov
add
add
pop
inc
push
and
dec
fild
ins
invd
cs
retf
(bad)
pusha
push
cld
jno
jb
jae
je
imul
jbe
push
mov
pop
mov
mov
adc
call
outs
sbb
ds
mov
shl
xor
or
scas
pop
sbb
jmp
fs
or
sbb
(bad)
cdq
mov
aaa
mov
sbb
fcomp
int3
xor
xor
test
push
js
test
jnp
cmps
mov
pop
xor
ins
in
xchg
ins
push
loopne
add
pop
adc
ret
(bad)
dec
lods
push
in
push
pop
ja
call
das
and
cmps
jns
je
(bad)
pop
imul
mov
jle
mov
jnp
ror
test
pop
and
mov
add
cmp
pop
push
adc
xchg
jl
push
jp
pop
xor
addr16
pop
push
fcomp
sbb
clc
xchg
scas
or
daa
cld
cmp
mov
cwde
cmps
jns
es
pop
mov
cmp
add
or
dec
sub
fld
out
push
leave
leave
mov
mov
mov
mov
out
sub
(bad)
int3
out
adc
sbb
adc
inc
(bad)
mov
mov
rcr
test
mov
cmp
dec
ds
div
sub
pushf
sbb
(bad)
repz
(bad)
test
sbb
push
add
xchg
fs
maxps
ret
adc
cdq
fsub
or
or
or
cdq
nop
or
ss
or
push
add
cmp
sbb
dec
adc
in
mov
ret
outs
mov
fnstenv
icebp
cmp
or
call
popa
cmp
nop
or
daa
adc
cmp
and
push
test
fidivr
out
int
cmp
pusha
retf
enter
jns
int3
mov
mov
mov
loopne
iret
addr16
jmp
fmul
add
scas
cmp
or
dec
xor
xchg
jmp
push
mov
xchg
in
cmps
xor
inc
sub
les
ss
aad
sahf
jle
mov
add
es
call
pop
test
sub
mov
jb
or
mov
push
sbb
adc
push
push
xchg
cmp
xchg
stos
gs
cmp
pop
inc
push
jl
test
mov
(bad)
int3
mov
ins
fsubr
cmp
pop
(bad)
push
shl
mov
cmp
push
jmp
mov
mov
inc
adc
pop
and
inc
cmps
jecxz
adc
outs
mov
adc
fmul
adc
jmp
mov
das
dec
and
repnz
adc
aam
cmp
mov
ins
int3
add
push
std
movs
call
add
(bad)
(bad)
jg
mov
xchg
pop
inc
(bad)
int
dec
cmp
dec
aas
jecxz
mov
pop
ss
gs
pushw
(bad)
and
(bad)
push
mov
push
xchg
push
xor
aas
pop
pop
lock
inc
int3
mov
clc
ret
pop
pushf
loopne
fadd
mov
jle
call
mov
cmpxchg
sti
adc
aas
jecxz
inc
cli
(bad)
stc
(bad)
clc
push
push
push
push
push
push
daa
icebp
push
xor
rcr
inc
fsubr
mov
push
mov
(bad)
pop
mov
push
or
or
pop
push
mov
push
pop
(bad)
add
and
inc
mov
outs
and
adc
loop
imul
push
add
addr16
mov
jo
adc
or
data16
adc
cmps
xor
je
sub
fwait
jl
push
inc
imul
es
in
nop
mov
cmp
shl
pop
dec
push
mov
sbb
and
push
mov
sub
enter
cmps
imul
push
and
sub
push
out
call
or
and
pop
sub
mov
inc
and
inc
cmps
xchg
out
pop
add
out
jns
adc
shl
ror
in
cmp
shl
(bad)
sub
call
mov
adc
pop
xchg
call
call
jne
or
cmp
es
and
sbb
add
sar
push
xor
add
add
jle
imul
or
cmp
int
dec
inc
dec
dec
add
or
mov
cs
add
cwde
inc
push
dec
fimul
clc
into
xor
or
adc
popa
je
dec
xchg
movs
arpl
std
pop
push
sbb
dec
loopne
data16
push
ror
ror
push
push
int3
mov
add
sub
loopne
push
lahf
cmp
jne
add
je
or
and
je
aas
jg
inc
jg
addr16
pcmpeqw
stos
mov
add
out
in
add
inc
je
scas
or
ja
mov
mov
adc
xor
les
outs
xchg
cmp
jo
dec
ret
lods
sbb
cmp
xlat
bound
ss
sub
loopne
shl
and
and
and
jmp
rcr
loopne
mov
pop
rcr
xlat
pop
or
call
xor
lock
or
sub
sub
fistp
push
fbld
xor
sbb
outs
jmp
dec
fmul
push
retf
(bad)
add
ror
loope
mov
push
clc
stc
mov
lahf
sar
js
inc
arpl
jbe
nop
pop
adc
cmps
push
or
mov
pop
les
push
clc
pop
jge
nop
sbb
std
push
shl
cmps
or
mov
test
or
mov
add
call
or
sbb
(bad)
clc
mov
sub
and
jecxz
sub
push
fdivr
nop
sub
and
push
sbb
or
xor
mov
js
mov
pop
inc
cmp
push
inc
or
inc
sbb
mov
(bad)
mov
std
dec
jne
pop
add
pop
and
test
fs
inc
inc
dec
xchg
cmps
nop
dec
mov
cld
mov
mov
adc
mov
push
outs
test
add
or
mov
stos
push
ret
test
dec
sub
or
dec
dec
push
add
hlt
sbb
ins
loope
popf
adc
push
sub
cmp
mov
jg
push
dec
mov
fsub
cmps
mov
inc
cmp
sbb
lock
cwde
sbb
adc
(bad)
jne
aaa
in
repnz
inc
add
in
xchg
(bad)
add
test
cmp
mov
mov
add
ret
ins
imul
adc
out
inc
and
je
cmp
mov
adc
sbb
clc
sbb
pop
icebp
call
(bad)
sar
cmps
and
fisubr
loop
fwait
lea
push
push
aas
imul
and
cmp
xor
fdivp
fcmovbe
cmp
inc
adc
call
jg
jo
lea
pop
adc
jl
inc
iret
mov
inc
push
dec
jne
rcl
cmps
adc
imul
and
in
je
movs
jg
inc
rcr
xchg
adc
mov
sub
outs
retf
cmp
sti
gs
dec
popf
sbb
xchg
dec
mov
and
fisttp
imul
xor
xchg
pop
ja
push
push
(bad)
imul
test
sub
sbb
mov
or
call
adc
sbb
xor
jl
int3
lea
ins
ja
cld
jne
push
sbb
push
or
ror
inc
loope
cmp
loop
popf
jl
inc
push
call
arpl
xor
add
stos
inc
or
jne
mov
imul
in
xor
cmp
push
inc
cmps
ja
and
pop
mov
sar
dec
call
rcr
adc
adc
adc
sub
mov
sbb
xchg
and
dec
aaa
aaa
retf
out
mov
rol
jge
imul
dec
pop
daa
xor
mov
in
int
ror
mov
and
push
pop
xor
sub
cmp
ja
xlat
jne
int3
mov
dec
xchg
or
jno
mov
xchg
xchg
sar
icebp
dec
inc
xchg
stos
dec
pushf
or
(bad)
mov
lods
cmp
and
ret
dec
or
test
and
and
and
xor
enter
call
ret
rol
daa
rol
imul
retf
xchg
add
dec
jae
test
js
fs
or
das
xchg
test
sub
inc
inc
sub
rcr
movs
jno
imul
xchg
dec
pop
mov
jmp
dec
or
pushf
or
cmps
sahf
dec
popa
es
clc
mov
inc
enter
addr16
loopne
(bad)
adc
(bad)
in
and
cmp
pop
add
push
dec
pushf
sbb
loope
sbb
inc
sahf
leave
push
data16
cmp
test
push
(bad)
cmc
ins
dec
inc
push
sub
inc
push
mov
fild
repnz
sbb
mov
daa
cdq
pop
sbb
in
jmp
adc
mov
sbb
mov
mov
ins
cmp
push
rol
adc
or
ffreep
inc
push
adc
in
xchg
cmp
cdq
dec
jb
sbb
xchg
xchg
adc
bound
repnz
cmp
sbb
or
push
lahf
ds
push
icebp
ficom
cld
mov
mov
inc
push
int
xchg
push
cwde
cmp
inc
add
loope
pop
adc
xchg
or
jae
addr16
add
xchg
aaa
and
or
or
push
ins
call
dec
(bad)
mov
inc
mov
dec
push
(bad)
or
pop
(bad)
push
mov
enter
inc
push
pusha
pop
popa
and
mov
cmp
jne
repz
imul
add
lods
jo
bound
ret
lods
pop
pop
sbb
sub
pop
inc
and
add
push
popa
and
pop
dec
cld
mov
jmp
push
les
and
loope
mov
inc
inc
push
inc
sub
add
daa
mov
sbb
mov
sub
test
inc
dec
aaa
mov
xchg
or
addr16
pusha
ffree
mov
ficom
loope
jge
mov
enter
inc
mov
ja
xor
sub
sbb
lahf
pop
add
shr
loop
call
inc
and
jg
dec
fisubr
rol
adc
inc
pop
push
push
push
xor
lahf
out
retf
mov
sbb
les
add
jns
popa
push
sub
and
ins
dec
push
xor
js
je
je
imul
push
sub
mov
test
aaa
xchg
test
sub
mov
rol
test
xor
or
or
outs
stos
jno
xlat
arpl
pop
mov
outs
sbb
mov
out
dec
jo
mov
pop
adc
outs
sub
loope
(bad)
int
(bad)
mov
push
or
inc
jae
sbb
test
arpl
inc
idiv
in
xor
rcr
ret
mov
pop
xor
cmp
cmp
dec
cmp
clc
je
mov
push
pop
mov
fdivr
cvtdq2ps
and
cld
pop
fadd
or
add
in
sbb
inc
(bad)
aaa
xchg
in
mov
in
rol
adc
jl
std
sbb
and
xchg
or
shl
inc
and
dec
add
mov
repnz
lock
ret
les
rol
pop
das
int3
add
aas
mov
sbb
idiv
shr
push
aas
fs
mov
sub
fucomip
jae
loop
out
mov
ret
inc
adc
cmp
inc
xchg
mov
xchg
add
push
jnp
lea
adc
sub
dec
call
xor
test
gs
push
jle
call
or
dec
or
jge
out
test
in
shl
loop
adc
or
addr16
mov
or
mov
ret
jo
mov
inc
push
mov
or
das
xor
xchg
mov
das
or
push
xchg
push
ficom
mov
into
test
pop
cmp
push
(bad)
and
inc
inc
ret
and
or
int
js
and
sbb
xor
sbb
push
or
push
pop
iret
and
pop
or
loop
jmp
and
mov
mov
add
rcl
test
loop
scas
sub
dec
or
xlat
(bad)
and
jne
sbb
leave
daa
and
pop
stc
std
jle
adc
push
mov
pop
(bad)
inc
sbb
adc
and
cmc
jecxz
and
div
inc
cmps
cmp
int3
mov
or
and
pusha
mov
mov
lahf
lock
push
cmp
mov
pop
and
jl
je
mov
js
xor
push
add
and
imul
xchg
jne
(bad)
pop
ror
inc
jmp
fcomp
adc
pop
pop
stc
(bad)
shl
cmp
mov
mov
mov
enter
in
jnp
int3
or
sbb
xor
lea
sar
xchg
sbb
sub
jg
dec
movs
or
xor
dec
inc
repz
and
aaa
push
not
inc
clc
jmp
inc
and
stos
dec
dec
xor
add
mov
push
or
adc
ret
and
loop
outs
push
not
push
xchg
xor
fwait
in
inc
sbb
lods
pusha
jl
cmp
std
xor
mov
or
jmp
dec
add
add
cmp
adc
and
shr
add
or
inc
mov
mov
sbb
aaa
mov
bound
das
pop
and
add
ins
ja
ss
pop
inc
xchg
fild
pop
cwde
mov
pusha
stos
mov
mov
call
jo
enter
jmp
sub
movs
mov
inc
jmp
je
and
(bad)
adc
sub
sar
mov
shl
mov
sub
shl
cmp
je
adc
push
je
retf
xchg
sbb
dec
jecxz
dec
push
mov
push
jbe
jne
push
jo
test
in
scas
sbb
mov
adc
adc
jmp
seta
jae
jg
push
ds
or
je
stos
xor
mov
cmp
movnti
sub
mov
jle
inc
adc
clc
or
popf
dec
add
mov
test
mov
int3
loopne
(bad)
neg
je
sbb
scas
(bad)
jg
ret
cli
pop
ja
and
bt
jb
jbe
rcl
ret
fbstp
jmp
inc
cmp
jne
inc
dec
push
sbb
and
mov
jb
inc
aaa
xor
inc
and
cmp
add
nop
push
jb
in
ficomp
mov
mov
shr
popf
lock
sbb
(bad)
xor
icebp
in
lock
rol
adc
xor
pop
cld
or
or
enter
loope
cs
and
add
pop
and
(bad)
cmp
xchg
pop
cmp
mov
popa
ret
mov
movs
outs
test
cs
sbb
mov
and
mov
sub
xchg
push
nop
jne
pop
imul
mov
(bad)
out
pop
mov
movs
rol
shr
pop
or
or
sbb
adc
popa
sub
sub
add
add
aas
or
dec
add
daa
ins
adc
xchg
inc
and
add
fs
fs
sbb
call
pop
xor
sbb
je
or
jecxz
gs
push
test
sub
daa
push
push
adc
ss
inc
shl
adc
add
ins
inc
mov
(bad)
and
fwait
and
mov
sub
sub
out
inc
and
push
dec
inc
or
mov
or
mov
xchg
mov
push
or
popa
pop
and
scas
add
xor
stos
add
pop
cmp
out
out
push
and
jne
adc
add
mov
ds
or
dec
push
mov
xchg
sub
xchg
cdq
jbe
push
addr16
mov
bound
sbb
or
adc
sub
add
test
adc
mov
or
lock
jmp
jae
xchg
sbb
shl
adc
aam
jae
and
fs
je
lock
adc
cmp
je
gs
mov
pop
js
push
jg
rcr
repz
int3
pop
push
jl
mov
pop
pop
jno
into
ret
in
and
dec
jns
int3
cs
mov
add
add
test
add
lds
popa
pop
cmp
jg
push
lods
mov
loop
and
nop
mov
rol
adc
cmp
aam
popa
es
cmp
mov
in
(bad)
mov
lods
xor
retf
leave
repz
fs
je
ja
push
mov
sahf
sar
pop
push
inc
push
loopne
ror
mov
inc
xchg
mov
adc
popa
dec
or
nop
jo
popa
xor
jo
and
pop
pop
hlt
jp
add
mov
in
cmp
inc
or
popa
xchg
mov
fnstsw
inc
in
lods
rcr
ret
movups
pop
(bad)
lods
test
xor
inc
adc
jge
(bad)
fsub
shr
xor
call
ja
mov
add
out
push
data16
clc
test
lock
add
out
pop
or
mov
(bad)
psubb
and
mov
adc
adc
imul
jge
sahf
push
adc
cmps
retf
or
pop
jp
cmps
sbb
mov
shl
sub
scas
and
pop
or
inc
add
cs
xchg
outs
hlt
mov
xor
adc
movs
push
aaa
inc
mov
mov
iret
mov
cmp
jne
sbb
cwde
fs
pop
or
mov
adc
push
sbb
mov
inc
cli
inc
dec
jne
out
enter
mov
xchg
jmp
(bad)
cmp
nop
mov
test
leave
sbb
mov
pushf
xor
mov
pop
adc
dec
sti
in
dec
ret
push
adc
or
pop
and
(bad)
fsubr
pop
xlat
iret
push
push
shl
mov
push
mov
fstp
fild
mov
addr16
inc
fild
test
out
adc
sub
jb
dec
je
jmp
jb
outs
adc
into
pop
ret
in
pop
add
lock
cwde
inc
adc
ret
jnp
mov
fcom
sub
push
call
xchg
or
(bad)
arpl
ins
inc
ficomp
sub
icebp
lock
sbb
mov
mov
adc
cmp
enter
cmp
movs
adc
fcmovnbe
add
les
and
xlat
dec
push
bound
xor
push
sub
(bad)
mov
(bad)
mov
mov
adc
retf
enter
push
add
add
add
sub
add
xchg
and
rcr
xor
jno
stos
add
and
lea
scas
sbb
fsubrp
pop
add
daa
es
dec
clc
rcr
xor
xchg
repz
adc
jecxz
xor
stos
rcr
ror
cmps
add
push
cmp
fstp
ins
push
mov
mov
mov
sar
cmps
cmc
push
sbb
xor
pop
rol
in
pushf
add
adc
imul
loope
mov
xor
jnp
fabs
fcom
stc
cmp
pop
cmp
lock
pop
in
push
in
pop
add
mov
rcl
push
add
xchg
adc
mov
pop
scas
mov
or
nop
add
popa
cmp
(bad)
cmp
mov
lock
or
or
pop
hlt
pop
lds
adc
inc
xchg
(bad)
stos
and
loope
aad
xor
and
and
aad
dec
adc
and
ins
mov
inc
neg
add
movs
lahf
xchg
mov
lods
jnp
xor
cld
int3
adc
mov
ret
or
and
pop
push
xor
cwde
inc
out
push
adc
test
ret
add
fild
test
jne
test
mov
xchg
loopne
jbe
add
imul
mov
inc
mov
mov
mov
popa
leave
mov
fwait
pop
push
je
push
stos
call
adc
xchg
mov
cmp
out
cld
pushf
xchg
mov
and
xchg
or
xchg
outs
addr16
icebp
cmp
int3
push
mov
sbb
xchg
add
and
inc
dec
push
add
dec
add
add
bswap
and
outs
cs
xchg
or
mov
add
add
sbb
add
lock
and
out
in
cmp
rol
and
mov
into
lods
pusha
xchg
adc
cmps
or
mov
loope
movs
ss
xchg
mov
jle
fld
outs
add
mov
xchg
data16
fcmovnbe
cmp
(bad)
out
adc
pop
jmp
pop
mov
or
dec
mov
and
jg
xchg
mov
dec
push
retf
cmp
sub
jo
xlat
loopne
nop
in
jo
out
rcl
add
push
sahf
push
clc
clc
add
inc
dec
cmp
addr16
or
lock
sub
lea
xor
movs
adc
push
push
inc
loopne
dec
dec
xlat
pop
out
sub
daa
jno
ror
sbb
jno
clc
lods
add
stos
xlat
xlat
dec
and
adc
in
xchg
sbb
jo
fs
or
bound
dec
push
or
push
add
sub
nop
xor
mov
fsub
in
pushf
loope
adc
or
xor
lea
out
jmp
fdiv
push
mov
sbb
xchg
mov
add
jae
push
call
aam
jle
mov
or
mov
add
push
scas
fbstp
xchg
mov
mov
dec
cmps
in
das
jae
sub
fisub
push
cmp
fisttp
adc
arpl
nop
jae
add
div
xor
mov
dec
shr
inc
inc
shl
and
data16
adc
xor
je
jns
pop
shl
cmp
sbb
imul
leave
aam
shr
mov
add
inc
jmp
fnstcw
mov
aaa
or
jp
or
add
retf
sub
push
movs
jmp
(bad)
mov
jne
or
add
int
pop
and
mov
mov
pop
jne
daa
pop
inc
cmps
mov
nop
jecxz
inc
loop
movs
arpl
dec
loop
push
xor
popa
jne
das
xor
jle
jl
sub
iret
test
cmp
pop
mov
mov
cmp
jne
test
or
mov
push
(bad)
mov
ja
and
sub
mov
sbb
pop
inc
pop
(bad)
xlat
popa
and
inc
or
push
scas
inc
mov
sub
test
das
ret
daa
(bad)
pusha
mov
adc
popa
mov
lock
jno
push
mov
cmp
int3
leave
sbb
sbb
pop
add
jmp
dec
mov
dec
mov
ins
gs
or
out
mov
add
inc
test
dec
dec
test
mov
faddp
sub
and
and
cmps
enter
sub
sbb
xor
popf
mov
dec
adc
inc
shr
jecxz
outs
push
adc
adc
test
lea
inc
js
les
rol
inc
adc
or
inc
fimul
rol
pusha
test
pop
and
sub
jnp
iret
pushf
adc
inc
addr16
inc
mov
pop
fstp
icebp
inc
dec
rol
push
pop
dec
mov
mov
push
add
sub
pop
add
push
cmp
lock
cwde
sub
sub
sti
sti
fild
je
jg
mov
(bad)
jmp
add
cmp
aad
(bad)
and
or
out
add
sub
clc
test
push
daa
or
adc
out
fadd
repz
rcr
cmp
xor
loopne
out
push
ins
and
loop
jno
sbb
mov
inc
aam
add
dec
push
sbb
adc
icebp
repnz
icebp
mov
(bad)
icebp
into
enter
fwait
(bad)
adc
imul
dec
mov
ret
push
scas
pop
test
sbb
jg
xchg
xor
test
mov
das
int
je
adc
test
push
sub
gs
add
cld
pop
inc
add
jg
sbb
cmp
or
or
mov
adc
adc
sti
pop
jns
push
(bad)
les
imul
and
push
mov
nop
pop
sub
mov
add
sub
inc
hlt
shr
loope
add
mov
jns
sbb
or
and
adc
push
push
jg
jl
jg
jnp
and
add
cmp
ja
inc
dec
inc
jge
jbe
add
sbb
jle
in
fistp
clc
sub
popa
hlt
jl
stos
adc
test
push
js
addr16
add
add
adc
pop
(bad)
mov
dec
or
push
add
loope
jne
rcl
sahf
hlt
jne
out
stc
retf
or
test
mov
xchg
inc
push
dec
repnz
jle
push
nop
pusha
add
dec
out
cmp
xchg
or
out
mov
or
sti
add
cdq
or
mov
add
pop
enter
jbe
inc
xchg
pop
nop
xchg
lods
(bad)
fld
push
ret
jno
sub
xlat
mov
add
or
xor
inc
mov
mov
pop
movs
cmp
cmp
xor
adc
jmp
and
pop
mov
or
hlt
enter
mov
add
pop
dec
and
out
repz
add
sbb
xchg
push
in
add
in
add
add
aas
push
mov
xchg
cs
or
inc
sbb
pop
add
inc
popa
or
add
lods
add
cmps
loope
in
jns
sbb
xor
arpl
iret
mov
std
mov
or
(bad)
push
out
call
push
pop
sub
pop
retf
mov
and
push
ficom
(bad)
retf
fild
je
cwde
dec
fsub
pop
movs
loop
mov
jge
rol
enter
cmp
pusha
mov
pop
aam
dec
mov
cs
jo
sbb
shl
or
cmp
xor
sbb
adc
std
push
jmp
icebp
or
push
mov
dec
jbe
push
or
sbb
or
test
mov
je
cmp
outs
or
add
or
scas
add
inc
pop
fcomp
imul
(bad)
aam
mov
imul
bound
sub
inc
inc
xchg
jge
sbb
push
add
pop
movs
bound
sub
add
jae
jbe
push
clc
fcomp
pop
jp
mov
sub
push
sub
sbb
add
mov
ins
test
push
push
test
dec
test
push
inc
pop
xor
mov
and
loopne
ss
push
cmp
pusha
(bad)
xchg
dec
out
lods
push
mov
in
pop
fld
and
pop
inc
dec
or
inc
or
add
cmp
movs
push
int
and
add
sub
jo
mov
dec
sbb
push
xchg
add
out
addr16
daa
jne
add
add
jne
faddp
ror
fiadd
icebp
outs
call
movs
jns
jno
jno
pop
add
aaa
adc
xor
cmp
stos
or
in
pop
repnz
add
movs
sub
dec
ds
and
fs
ja
dec
leave
loopne
fcom
xchg
inc
(bad)
push
dec
add
and
mov
outs
inc
or
mov
scas
or
mov
pop
movs
inc
repnz
cwde
ins
into
clc
mov
dec
or
jnp
and
sbb
or
test
pop
cmp
adc
icebp
or
ror
iret
jae
cmp
pusha
nop
add
fistp
sbb
or
dec
or
adc
or
or
inc
lock
adc
ret
test
xchg
stos
inc
test
jle
push
mov
js
and
icebp
(bad)
add
jae
mov
or
add
pop
lock
aam
movs
jmp
push
cmc
push
add
pop
xor
shl
dec
dec
mov
dec
jmp
sbb
and
dec
sub
ins
icebp
rol
and
in
mov
jnp
js
adc
xchg
das
mov
or
data16
xchg
int3
or
pushf
add
cmp
leave
or
pop
pop
adc
or
test
je
cmp
pop
or
inc
cmp
push
cmp
sti
je
adc
mov
push
jne
imul
pop
das
call
stc
imul
add
add
and
loope
or
xchg
rol
jmp
mov
add
loop
add
sub
jnp
jle
or
or
and
test
cmp
jne
add
sbb
mov
ins
xor
add
(bad)
inc
xor
push
add
loop
dec
adc
push
sub
daa
nop
add
xor
sbb
sbb
fwait
out
jbe
jae
aas
xchg
jne
pop
leave
xor
dec
adc
adc
mov
pop
push
mov
(bad)
lahf
test
adc
mov
(bad)
mov
xlat
pop
pop
mov
sbb
add
fidiv
adc
dec
imul
inc
ret
ja
jmp
adc
out
push
pop
mov
test
adc
sbb
or
ret
cmp
inc
inc
pop
daa
pusha
mov
mov
xor
push
popf
(bad)
aad
adc
push
push
jb
pop
dec
dec
std
jo
imul
and
and
mov
sub
jo
scas
dec
inc
ret
cmps
std
dec
pop
sbb
inc
std
and
or
inc
fs
cdq
rcl
or
bound
popf
lods
mov
js
mov
fidiv
test
jne
cmp
das
jmp
out
mov
lea
std
pop
inc
sbb
clc
mov
mov
push
(bad)
retf
(bad)
cs
sbb
push
out
mov
xor
loope
popf
add
sub
add
stos
sbb
add
push
aaa
push
(bad)
fcmovbe
xor
sub
sub
mov
and
or
mov
imul
adc
das
and
jmp
mov
jle
test
fldl2e
add
inc
loop
sub
sbb
icebp
adc
das
push
add
sbb
pushf
cdq
sbb
ds
into
mov
or
push
push
add
and
js
ja
inc
pop
sub
xchg
fstp
and
jl
inc
inc
mov
push
cmp
outs
push
mov
mov
cmp
fidiv
jge
mov
fnstenv
rcr
mov
pop
popf
clc
xor
js
mov
sbb
or
cmp
sub
sub
daa
call
ss
pop
lea
sub
into
inc
jmp
hlt
xor
inc
sub
push
fsubr
js
shl
push
dec
mov
rcr
std
arpl
(bad)
fsubr
or
clc
pop
inc
cmp
jl
loope
nop
push
enter
sub
push
aaa
inc
cmp
dec
and
dec
push
adc
cmps
mov
push
xchg
lds
test
dec
add
fild
jno
nop
dec
cmp
xchg
mov
enter
mov
and
(bad)
lock
or
ins
and
mov
xor
ss
pop
sbb
mov
sbb
pusha
out
and
adc
imul
jo
add
cmp
dec
jb
(bad)
push
lea
retf
lods
cwde
jge
xor
cmp
pop
jge
adc
ret
nop
mov
sbb
mov
xchg
call
mov
inc
nop
push
dec
push
data16
add
adc
mov
js
and
mov
jbe
pop
xor
mov
test
test
push
dec
adc
popf
movs
ret
add
(bad)
dec
fild
jo
sbb
add
inc
call
jo
dec
sbb
imul
xchg
dec
add
jnp
cmps
cs
gs
inc
sbb
push
mov
cld
and
(bad)
sub
xchg
loopne
js
adc
cmp
(bad)
xchg
adc
sbb
mov
std
ror
dec
hlt
aaa
test
dec
jo
loopne
add
adc
shl
pop
bound
dec
inc
dec
pop
sbb
pop
hlt
mov
retf
call
jb
or
cs
dec
mov
and
lds
movs
mov
jo
pop
lock
out
and
cmp
and
or
pusha
jecxz
movs
cmp
sbb
or
test
push
and
clc
fldenv
dec
add
nop
sub
cmp
push
add
push
(bad)
or
push
cdq
dec
mov
add
out
loope
or
daa
pop
nop
pop
mov
jmp
not
inc
cmp
and
sbb
push
inc
sub
inc
ins
lds
loop
mov
ror
sub
xor
lea
ins
or
arpl
arpl
jg
inc
xor
xchg
test
rol
xor
leave
xor
(bad)
or
cmp
and
sar
add
cmp
sbb
fadd
lock
ins
sbb
adc
add
dec
je
mov
xlat
es
out
stos
mov
and
jbe
adc
outs
outs
cmp
ret
mov
mov
jmp
es
sub
push
(bad)
xlat
pop
mov
push
inc
xchg
pop
(bad)
dec
popf
and
je
push
dec
jne
jp
call
imul
jnp
ficomp
push
or
sbb
mov
sbb
sub
mov
add
ret
mov
nop
push
jecxz
jge
xor
out
jle
mov
(bad)
pusha
jnp
add
ja
mov
jle
sbb
fld
add
popa
cmps
fst
retf
nop
out
mov
sub
push
cld
gs
jne
add
test
adc
repnz
bound
dec
sub
cmps
fbstp
or
ret
inc
test
xchg
push
scas
adc
enter
push
mov
jecxz
xchg
outs
and
inc
outs
pop
xchg
adc
sub
xor
or
je
jmp
lods
xor
add
xor
(bad)
pop
or
mov
push
pop
mov
pop
and
inc
nop
mov
not
sti
xchg
lods
or
xlat
ss
push
mov
push
dec
mul
outs
adc
pop
dec
mov
and
movs
xchg
xor
adc
mov
xchg
mov
xor
inc
in
inc
mov
inc
push
sbb
cmp
cld
je
xor
fwait
push
imul
xor
gs
cmps
mov
mov
cdq
pusha
xor
and
mov
test
cwde
mov
or
gs
out
outs
sub
shl
sub
int3
ret
(bad)
fdivr
xchg
add
mov
jp
inc
lock
add
fdiv
push
jo
push
mov
mov
mov
pushf
test
pop
test
jno
adc
popf
(bad)
(bad)
lahf
mov
sub
cmp
loop
int3
add
movs
jo
int3
mov
jno
or
mov
addr16
loope
vpcmpeqb
int
xchg
jo
rcl
imul
xchg
call
dec
jno
push
hlt
pop
test
dec
push
pop
pop
fisubr
mov
dec
mov
add
add
inc
cwde
dec
jne
or
test
jge
imul
das
enter
pop
mov
mov
pop
js
cmp
sub
inc
xchg
add
sub
mov
pop
adc
push
mov
ret
aad
xor
cmp
in
shl
xor
cmp
in
and
xchg
lds
in
add
xor
lods
xrelease
adc
sbb
xor
inc
xor
cdq
dec
daa
fcomp
add
lods
pop
push
or
leave
and
add
nop
lock
not
nop
aaa
add
adc
(bad)
inc
sub
fcom
sbb
xor
sbb
pop
mov
push
mul
pop
pop
imul
push
and
pop
ss
cdq
xchg
adc
out
mov
push
mov
mov
pop
pushf
jne
xchg
xor
and
or
add
shl
jo
ds
adc
fs
(bad)
in
rol
adc
pusha
sbb
push
jne
xor
(bad)
adc
add
or
adc
fldlg2
sub
xor
mov
and
sbb
shl
xor
and
pop
aaa
pop
(bad)
aaa
adc
or
rcr
mov
loop
dec
and
std
call
adc
push
mov
rcl
int
mov
test
dec
in
scas
adc
mov
jo
xor
popa
sub
popa
repnz
or
emms
ret
sbb
push
inc
mov
mov
sub
or
push
pop
ret
fwait
sti
ss
dec
dec
bnd
cmp
push
(bad)
js
and
jge
popa
sub
popa
cmp
mov
cmps
stc
test
push
sbb
movs
and
xchg
not
mov
aam
cmp
push
cmp
pop
jmp
aad
adc
or
fild
hlt
xor
ret
jb
mov
(bad)
cs
int
add
add
sbb
add
cmp
lock
and
xchg
movups
popf
pusha
pushf
or
fild
add
lahf
adc
in
xor
ret
mov
jbe
add
or
mov
mov
out
or
and
ficomp
pusha
popf
and
sub
push
xchg
xor
mov
push
inc
push
inc
icebp
ss
mov
test
cmp
add
retf
fsubr
je
int
ins
dec
mov
sbb
and
mov
jns
in
sub
add
inc
shl
sub
xlat
xchg
inc
sbb
dec
sub
inc
inc
jmp
ss
test
js
sbb
xor
pop
push
in
mov
sub
(bad)
arpl
adc
inc
lds
in
ins
nop
jae
or
xchg
out
movs
mov
jecxz
pop
mov
imul
push
mov
jne
mov
(bad)
cmps
shl
push
mov
and
ret
cmps
jno
fdiv
jmp
lahf
sub
push
sbb
mov
pop
leave
adc
dec
dec
and
stos
movs
dec
push
and
adc
fidivr
dec
fsub
mov
scas
adc
daa
in
or
or
test
scas
fsub
jmp
xor
stos
mov
push
daa
aad
retf
pop
add
push
add
iret
cmp
xchg
nop
fdivrp
rcl
enter
dec
sbb
hlt
inc
xor
adc
jp
test
lea
sbb
fdivr
leave
mov
dec
mov
cmp
xor
cmp
or
sbb
imul
jmp
repz
adc
adc
movs
mov
fst
and
mov
adc
rcl
(bad)
movs
pop
mov
inc
mov
sbb
jnp
lock
xchg
inc
jmp
mov
pop
mov
repnz
lock
mov
add
nop
or
lds
adc
jl
push
mov
xchg
add
mov
nop
xor
cmp
jecxz
push
push
fidivr
or
dec
icebp
fwait
mov
scas
lea
inc
fcom
jg
add
mov
pushf
(bad)
call
mov
mov
enter
xor
cmps
or
in
xchg
push
cmp
hlt
pop
xchg
repz
fadd
jmp
fldenv
pop
movs
sbb
push
hlt
repnz
and
(bad)
cwde
mov
mov
or
push
add
cmp
sub
repnz
push
test
mov
addr16
mov
push
xchg
inc
mov
xchg
call
pop
mov
jo
pop
sbb
inc
cmps
cli
cmp
es
enter
sbb
xor
imul
mov
xchg
add
add
rcl
(bad)
std
adc
sub
cmp
mov
sbb
mov
fcomp
pop
fwait
cmps
imul
mov
inc
es
pop
sbb
call
test
push
ret
jmp
mov
sbb
adc
shl
xor
jae
retf
in
dec
inc
dec
adc
cmp
shl
js
mov
inc
nop
pusha
clc
push
repnz
sahf
fwait
mov
mov
pop
jae
fdiv
or
retf
cmp
inc
jno
ss
push
xor
shr
or
fmul
mov
fadd
sub
sbb
push
sbb
mov
gs
adc
rcr
adc
sbb
inc
or
cli
add
adc
daa
jo
sub
jge
xchg
mov
in
outs
cmp
jmp
dec
cmps
inc
or
rcl
fadd
inc
or
inc
scas
(bad)
ja
cwde
mov
push
test
imul
and
jge
test
xlat
test
xor
jno
cmp
inc
pushf
mov
test
ret
addr16
(bad)
rcl
pop
xchg
ja
add
js
shl
xchg
ret
call
sbb
call
out
rol
xchg
adc
xlat
pusha
xchg
sub
jo
jns
and
sub
cmp
adc
fwait
sbb
mov
fdiv
mov
mov
fsubr
xor
cs
lea
shl
mov
out
xchg
dec
aam
add
jo
sbb
dec
cmp
out
pop
mov
sar
mov
add
punpckhwd
sbb
imul
mov
or
call
sbb
mov
test
mov
xchg
sub
mov
pop
lds
fidiv
xor
mov
das
xchg
xchg
cmc
push
popa
(bad)
and
test
xor
loopne
(bad)
push
dec
nop
sub
fst
push
test
leave
or
stos
and
(bad)
jo
xor
dec
je
popa
dec
repnz
jb
(bad)
jp
jne
fcom
sub
popa
stos
inc
cld
mov
imul
enter
pop
hlt
mov
add
test
inc
pop
shr
add
sub
jnp
stos
in
pop
sbb
test
lea
xor
popf
cmp
inc
mov
add
mov
adc
lods
fbld
push
ret
jmp
push
or
lea
fs
push
push
clc
pop
cld
lea
je
mov
call
daa
fwait
adc
adc
and
mov
pop
in
jne
shl
mov
cmps
jo
adc
jmp
ds
inc
mov
push
adc
mov
cld
sbb
push
and
(bad)
xchg
xchg
dec
sub
jae
iret
mov
cmp
inc
int3
jns
loope
mov
jne
and
push
int
and
or
sti
xchg
adc
ja
mov
lock
pop
push
inc
inc
sub
adc
push
ds
dec
cmp
adc
cmp
sbb
push
movs
xchg
inc
inc
test
lahf
xchg
lods
lds
inc
or
ja
stos
sbb
or
scas
adc
lods
mov
lods
lock
out
lods
mov
(bad)
push
test
add
pop
out
movs
or
jbe
adc
pop
adc
cs
jecxz
das
and
mov
adc
cmp
bound
pusha
repz
inc
inc
scas
pusha
and
add
pop
xor
scas
cmp
push
jno
fdivp
mov
fild
scas
pop
inc
inc
call
or
push
pushf
es
mov
call
fisubr
jmp
in
pop
rol
jmp
lock
pop
and
adc
add
push
xor
hlt
loope
add
sbb
bound
ins
das
pop
push
adc
sti
les
inc
mov
xchg
ja
sub
add
ds
pop
shr
push
das
or
mov
inc
fisubr
mov
mov
and
imul
dec
mov
aaa
push
jae
aaa
and
mov
nop
lock
or
in
and
jmp
test
or
sub
aas
lock
jb
and
push
fld
mov
aam
jae
in
xor
inc
jae
inc
(bad)
es
push
test
push
dec
adc
push
rcl
int3
cmp
jl
push
mov
sbb
test
adc
mov
lods
arpl
xchg
dec
lock
stos
js
scas
dec
ror
push
mov
clc
fild
push
fxch
cmp
inc
ror
call
shl
add
pop
sub
mov
or
shl
push
pop
cmps
sbb
xchg
mov
pop
cmove
xchg
add
(bad)
leave
push
sub
sub
add
add
mov
adc
repz
inc
stos
mov
mov
ret
das
test
jle
fild
fcomp
sub
popa
push
inc
shl
pop
jg
imul
popa
xchg
mov
(bad)
mov
mov
pop
adc
cld
inc
sub
xchg
push
mov
arpl
into
fs
movs
ins
jl
and
ins
rol
mov
fdivr
dec
pusha
pop
xchg
rol
mov
jbe
push
hlt
enter
jbe
xor
inc
mov
add
mov
add
mov
icebp
xchg
or
popa
and
popa
jg
adc
out
dec
add
sbb
fisttp
retf
mov
dec
jae
xchg
or
imul
push
or
inc
call
mov
sub
(bad)
xor
fs
fs
leave
sub
stos
mov
pop
jbe
jb
and
(bad)
repnz
mov
ins
pop
bound
jge
cwde
sbb
xor
add
pop
(bad)
xor
outs
cs
fsubr
push
aas
dec
ins
fwait
pop
pop
mov
jne
je
push
in
aaa
push
hlt
std
xor
in
adc
mov
cmp
mov
push
inc
mov
ins
cs
mov
es
mov
and
pop
jb
pusha
call
out
xor
adc
fs
mov
adc
push
fcomp
daa
pop
lea
jmp
push
mov
pop
mov
std
ret
not
xor
jno
jmp
cmp
mov
in
adc
rcl
loopne
jl
call
sub
mov
leave
sbb
sbb
std
add
or
inc
adc
cmp
enter
pop
pushf
pop
mov
outs
pop
add
addr16
mov
fisttp
movs
or
pushf
ret
mov
psubsb
jbe
jle
jl
or
sbb
push
dec
out
adc
add
dec
mov
jl
adc
jg
mov
push
xlat
ds
add
jo
and
xchg
xor
pop
xchg
push
test
call
sub
mov
xchg
cwde
dec
mov
push
push
and
add
(bad)
ss
mov
and
fsub
cmp
cmp
jmp
mov
pop
pusha
cmp
fcomp
rcr
mov
push
ins
(bad)
fadd
out
mov
adc
call
jmp
mov
(bad)
loopne
mov
push
pop
popa
pusha
sti
les
mov
in
cld
pop
dec
rol
push
cmp
pop
nop
pop
mov
mov
inc
(bad)
push
in
xlat
(bad)
adc
je
sbb
inc
sbb
inc
mov
je
cmp
cwde
cmp
or
jnp
xchg
fcmovu
in
rcl
nop
push
rol
or
jg
scas
push
add
adc
shr
xchg
repnz
ret
mov
inc
gs
cmp
dec
sbb
inc
cmp
stc
and
imul
xor
stc
or
fdiv
ror
loop
imul
mov
out
test
mov
sub
nop
push
cmps
cmp
leave
sub
or
adc
cld
test
imul
dec
pop
(bad)
jo
jg
mov
imul
dec
popa
sbb
sbb
mov
nop
(bad)
sbb
div
jns
cwde
sub
dec
ds
pop
ret
mov
rcr
push
add
jp
in
pop
sbb
into
and
pop
ror
outs
test
lock
inc
dec
lock
xor
pop
dec
daa
add
and
test
xor
xor
icebp
lock
sub
mov
cmp
jne
icebp
fistp
push
scas
rcr
pop
mov
pop
sbb
xor
mov
test
iret
ins
and
mov
and
cmps
xchg
stos
ins
dec
cmp
inc
mov
or
(bad)
xor
pusha
loopne
ja
mov
in
lmsw
push
dec
pushf
xchg
sbb
add
fisubr
push
int
jb
das
jns
aam
fisttp
cmp
stos
sbb
sub
or
cld
comiss
jbe
or
mov
push
jmp
inc
dec
lods
push
dec
adc
in
retf
sti
es
test
and
pusha
imul
cdq
in
loop
repnz
mov
lock
dec
and
adc
cmp
inc
mov
data16
mov
sbb
hlt
mov
fldln2
adc
es
movs
leave
sub
out
jecxz
add
je
lods
mov
nop
retf
pusha
cmp
(bad)
sbb
fsub
or
adc
sub
push
loopne
fisubr
daa
mov
cmp
arpl
push
sub
push
sub
push
arpl
mov
cmp
je
test
cmp
bound
sbb
aad
inc
std
inc
sti
mov
add
sub
mov
and
sbb
sub
nop
faddp
outs
sub
mov
xor
and
xchg
mov
cli
jne
mov
fisttp
add
fcom
pop
sub
aas
sbb
add
fild
mov
test
ret
push
push
js
sbb
and
jp
xchg
ret
int
pop
pop
scas
mov
jmp
pushf
mov
lahf
push
adc
push
sub
add
adc
mov
add
inc
and
xlat
mov
xchg
pop
and
aaa
aas
shl
jne
shl
pusha
pop
(bad)
iret
shr
out
push
or
xchg
rcl
mov
lock
jle
es
loope
ins
jecxz
inc
adc
outs
mov
mov
inc
mov
mov
push
xor
loopne
stos
lock
push
add
mov
xchg
mov
add
cmp
je
arpl
(bad)
or
pushf
mov
cmp
mov
mov
or
outs
sbb
xlat
(bad)
and
cmp
sbb
jle
repz
fadd
movups
sub
push
adc
mov
sub
div
sub
or
into
adc
dec
cmc
add
add
test
sub
adc
(bad)
jmp
push
test
xchg
sub
jmp
add
mov
imul
cmp
fsub
adc
and
ror
ss
lock
sbb
dec
cdq
aad
xor
mov
inc
sbb
add
sbb
movs
mov
mov
dec
and
leave
pop
adc
mov
push
sbb
or
xor
push
mov
and
add
scas
pop
sbb
xor
adc
or
(bad)
pop
stos
adc
push
or
pop
mov
lahf
or
jl
or
scas
adc
inc
es
mov
mov
fcom
dec
and
cmp
jl
push
aaa
or
jge
scas
adc
inc
inc
and
jns
or
cld
push
push
jmp
daa
xchg
ja
std
out
mov
add
mov
fadd
add
xchg
rcr
stos
adc
mov
pop
mov
add
push
outs
jo
out
or
out
into
push
movs
or
mov
stos
mov
or
push
jle
inc
ins
and
mov
popf
add
dec
mov
cmp
mov
das
mov
mov
mov
cmp
jne
es
cs
jne
lea
sub
loopne
inc
inc
out
xlat
fstp
repnz
push
pop
or
test
adc
mov
inc
or
leave
hlt
pop
dec
cmc
(bad)
lods
push
cmps
xor
cmp
sub
xor
sbb
mov
jmp
inc
dec
jne
sub
add
and
sub
dec
cmp
sub
push
cld
adc
ins
inc
pop
cmps
stos
pop
sbb
fwait
cwde
push
mov
sbb
or
jp
stos
and
pusha
fbld
inc
push
pop
lahf
pop
adc
outs
daa
adc
ret
xor
xchg
push
outs
test
mov
arpl
stos
xlat
leave
aas
or
cmp
ins
loopne
aam
and
jge
lock
mov
cmp
jg
push
dec
cmp
aaa
sar
ins
fs
ins
pop
ret
or
mov
clc
push
adc
inc
mov
pop
cld
mov
data16
and
outs
pop
and
sbb
sbb
mov
and
ret
dec
jmp
or
add
sub
inc
call
or
out
mov
jmp
sub
scas
iret
rol
in
xor
cmp
imul
xor
jg
cmp
sbb
pop
add
push
cmp
lock
das
or
xchg
sub
jne
jae
add
adc
jmp
push
lea
and
pop
in
add
cmp
imul
pop
ret
bound
cmps
adc
cmps
cwde
add
mov
dec
pop
inc
or
jo
or
fsubr
cmp
mov
out
xchg
sub
mov
add
sbb
rol
mov
jl
mov
cld
push
mov
fisttp
add
or
pinsrw
add
add
je
(bad)
clc
movs
inc
push
shr
or
sbb
pop
adc
rol
ins
jmp
dec
stc
and
pop
sar
sbb
push
push
out
inc
push
and
cmps
pop
add
das
inc
js
inc
push
addr16
cwde
in
or
ja
fsubr
xchg
call
or
xchg
aaa
mov
cmps
ss
cmp
test
aaa
push
pop
adc
cmp
inc
or
outs
ret
inc
je
dec
push
out
xor
jbe
xlat
sub
cmp
js
adc
out
inc
sbb
lock
inc
and
shl
pop
inc
popf
sbb
jecxz
or
or
das
xlat
es
sbb
mov
adc
shr
mov
cwde
popa
pop
frstor
(bad)
mov
cmps
wrmsr
ins
or
push
mov
or
inc
(bad)
cmp
cdq
mov
xchg
push
in
js
movs
inc
(bad)
stos
inc
je
jo
mov
popa
inc
ror
xchg
stos
dec
loopne
push
inc
retf
inc
or
inc
inc
adc
mov
cmp
dec
mov
pusha
shl
call
adc
into
les
into
push
scas
and
ror
scas
adc
push
adc
add
iret
push
pop
loope
inc
pop
adc
loopne
push
push
je
int3
jl
leave
jle
add
inc
retf
ss
pusha
push
pop
icebp
dec
adc
(bad)
xor
or
push
rcl
rcl
and
xlat
pop
sti
xchg
add
test
mov
sub
push
adc
xor
add
adc
retf
pop
lds
inc
add
add
aaa
push
dec
mov
nop
aad
popf
into
mov
lods
xchg
push
or
repz
stos
pop
jbe
pop
xchg
ret
cmp
push
outs
adc
jno
push
hlt
sbb
or
sbb
adc
je
cmp
jg
or
pop
ja
mov
inc
add
hlt
jle
aad
js
mov
std
ds
dec
enter
xchg
fwait
cld
adc
lea
and
scas
and
add
add
fmul
pusha
push
pushf
hlt
or
inc
fcomp
in
popf
sub
outs
push
and
mov
push
pop
pop
sub
push
sbb
mov
or
push
(bad)
push
outs
popf
les
pusha
pop
std
ja
sbb
add
jns
xchg
(bad)
push
sbb
loopne
xchg
jns
xchg
sub
and
adc
pop
pop
movs
into
mov
add
dec
dec
sbb
je
shl
adc
push
inc
mov
pop
daa
aad
ins
(bad)
sar
test
iret
cmp
or
fisttp
test
inc
mov
and
movs
movs
or
pop
and
sbb
arpl
inc
dec
dec
and
adc
and
sub
inc
inc
mov
dec
push
scas
xbegin
add
cmps
arpl
mov
iret
and
add
pop
cmp
xchg
test
jns
xor
sti
das
add
in
dec
add
loopne
add
adc
mov
test
inc
jl
add
xor
out
test
jne
mov
call
outs
inc
xor
push
sub
cmps
mov
sub
adc
fs
add
inc
js
retf
test
leave
out
pop
ror
dec
sbb
jns
mov
jne
aad
adc
push
jbe
add
adc
jl
pop
cmps
fadd
sbb
xor
xchg
xchg
jnp
cmp
scas
add
test
bswap
jecxz
jno
push
or
rcl
xor
mov
xor
out
sbb
xor
ror
in
(bad)
add
and
mov
les
sub
inc
push
nop
pop
sbb
mov
pop
sbb
daa
add
je
mov
xchg
cmp
dec
inc
lock
enterw
out
aam
enter
(bad)
mov
int
arpl
xor
dec
js
xchg
cmp
popf
dec
sbb
(bad)
sbb
(bad)
xchg
sub
nop
inc
push
fadd
addr16
sbb
sub
cmp
xor
and
xchg
mov
fdiv
imul
xor
mov
push
pop
ins
mov
into
(bad)
aad
aad
test
aam
retf
or
cmp
sbb
inc
lods
repnz
enter
enter
inc
mov
sbb
test
loopne
mov
lods
dec
gs
addr16
or
pop
adc
imul
popa
ins
dec
data16
xchg
imul
sub
push
into
arpl
xchg
xor
std
and
pop
jg
jbe
int
mov
cmp
jne
xor
pop
jo
cwde
jb
stos
call
jne
xor
leave
xchg
mov
icebp
cli
inc
dec
aas
ret
idiv
lea
jne
sbb
xchg
cs
mov
(bad)
iret
mov
and
ret
add
inc
add
fsub
lahf
and
cmp
pop
scas
daa
cmp
xor
and
push
add
mov
cmp
xor
push
loop
les
shr
pop
add
adc
ss
cdq
test
addr16
sub
adc
mov
inc
shr
and
dec
jmp
popa
pop
mov
fdiv
xor
lock
push
mov
cmp
pop
push
(bad)
and
inc
inc
pop
or
add
dec
enter
mov
or
add
fild
scas
cmp
fisttp
loopne
push
pop
mov
pop
push
ud2
jle
adc
ret
std
out
push
add
push
push
sub
inc
js
aam
mov
scas
adc
adc
rol
push
enter
daa
and
cmps
cmp
cli
mov
(bad)
cmp
je
push
inc
pop
into
and
xor
icebp
addr16
rcl
cdq
pusha
cld
mov
ud1
jmp
sbb
sub
push
jge
adc
lock
mov
xchg
popf
sub
aas
add
cld
push
jo
mov
shl
test
sti
xor
adc
neg
fcomp
ror
adc
pop
sub
jo
dec
daa
stos
add
pop
xchg
xor
pop
test
jno
xor
iret
push
sti
imul
xor
add
add
lods
jae
vmwrite
fld
aas
add
cwde
mov
push
dec
inc
push
aad
dec
mov
jmp
sub
pushf
cmp
mov
ins
and
xchg
inc
or
iret
or
nop
inc
pop
cdq
jp
jnp
inc
push
sbb
jg
sbb
popa
bound
fs
inc
fs
inc
push
addr16
sbb
ins
inc
push
sbb
outs
push
sbb
push
push
push
sbb
push
push
push
fs
inc
push
push
pop
pop
nop
inc
push
sbb
pop
inc
push
sbb
pop
push
sbb
inc
inc
inc
sbb
inc
inc
inc
fs
inc
push
inc
dec
dec
nop
inc
push
sbb
dec
inc
push
sbb
dec
push
sbb
xor
xor
fs
inc
xor
ss
inc
push
aaa
cmp
nop
inc
push
sbb
cmp
push
sbb
aas
push
sbb
and
and
fs
inc
and
es
inc
push
daa
sub
nop
inc
push
sbb
sub
push
sbb
das
push
sbb
adc
adc
fs
inc
adc
push
fs
inc
push
pop
sbb
mov
inc
cmp
and
and
push
and
sbb
or
sbb
(bad)
mov
add
and
rcr
js
mov
leave
adc
sbb
xchg
fadd
sub
inc
push
imul
call
sbb
sub
imul
je
data16
enter
repz
jae
jo
or
fs
adc
or
xor
inc
mov
xlat
cmps
rol
pushf
fist
shr
jns
dec
cwde
xor
data16
ficom
out
push
leave
mov
dec
sbb
loopne
cmp
les
imul
inc
fimul
cmc
inc
in
ins
or
mov
fisub
push
outs
xor
push
or
pop
jo
outs
sbb
xchg
mov
dec
inc
popa
jae
add
sbb
or
push
scas
pop
add
inc
jge
or
out
mov
and
ss
adc
add
int3
push
jge
add
push
push
push
je
iret
ins
dec
outs
jo
fxam
popf
or
inc
jns
sbb
mov
test
gs
and
cdq
lea
add
and
sbb
xor
in
mov
push
aas
mov
loopne
ret
gs
adc
pop
adc
(bad)
xor
add
jne
dec
pop
or
imul
add
push
or
fnstcw
inc
xor
adc
das
pop
(bad)
fist
jae
es
mul
or
adc
pop
sbb
out
call
sbb
nop
clc
std
jmp
jb
pop
mov
xchg
sbb
in
xor
inc
inc
mov
movs
es
aas
inc
and
jmp
cmps
inc
test
ss
sbb
lock
xchg
dec
inc
xor
out
and
fbld
clc
push
or
and
retf
fisttp
xor
add
fcomi
push
jo
mov
cld
pop
or
int3
in
cmp
(bad)
aas
dec
(bad)
(bad)
mov
lock
pop
add
cs
sti
aaa
movs
push
(bad)
es
pop
push
cdq
ins
(bad)
int3
inc
adc
push
sub
mov
cmp
jmp
inc
ss
push
add
in
(bad)
xor
jl
mov
push
outs
push
loop
push
pop
jb
xchg
sbb
pop
std
imul
push
add
mov
xchg
cmp
rol
add
xchg
jns
and
sbb
inc
add
xchg
add
sub
sub
add
add
ds
add
inc
shl
inc
add
rcr
dec
sbb
push
fwait
or
push
cmp
nop
sahf
pop
sbb
add
pusha
dec
jo
add
popa
mov
push
sbb
inc
dec
add
add
movs
push
pop
inc
lock
inc
xchg
popa
mov
sbb
jno
push
neg
pop
out
or
fadd
adc
push
inc
popa
sbb
pop
mov
jne
sbb
push
movs
inc
ror
lds
gs
pop
inc
imul
and
push
aas
mov
int3
push
or
sbb
add
inc
dec
(bad)
loopne
cmp
stos
add
sub
clc
add
jae
mov
aas
push
pop
loopne
les
or
or
adc
jne
outs
adc
inc
outs
adc
in
or
xor
mov
push
or
arpl
fisttp
ins
sbb
add
or
fs
dec
cmc
xor
ret
mov
inc
clc
idiv
push
xchg
add
addr16
ror
add
enter
inc
loopne
inc
ja
fcom
pushf
arpl
movs
push
xchg
ret
sbb
out
mov
xor
loopne
int3
mov
lds
iret
popf
stos
in
popa
std
outs
daa
mov
es
pop
ror
mov
pusha
mov
fisubr
and
xchg
pop
out
mov
ins
out
and
fsub
pop
ror
push
fwait
push
xor
nop
daa
hlt
push
inc
test
jbe
mov
fiadd
movhps
int
out
or
pshufw
inc
bound
outs
nop
inc
sbb
pop
dec
and
ret
or
and
push
popw
and
nop
xor
popa
fcomp
inc
addps
xchg
dec
fadd
or
shl
stc
scas
add
cmps
pop
fwait
xchg
sub
fimul
shl
xchg
lock
push
loopne
push
rcl
sub
xchg
daa
iret
les
pusha
sub
out
pop
xchg
sbb
aas
add
aas
xlat
pop
inc
fmul
in
je
jb
push
movs
mov
das
adc
ds
lahf
loopne
sbb
aas
or
jae
jmp
push
push
jne
scas
shl
dec
ins
dec
push
mov
adc
adc
shr
sbb
or
fstp
nop
sbb
mov
xchg
adc
jmp
cmp
jle
(bad)
push
jg
das
inc
mov
mov
mov
xor
push
nop
xor
jl
sub
inc
sbb
pop
sbb
aaa
push
(bad)
(bad)
jle
inc
dec
xor
adc
cmp
shl
inc
cmp
dec
push
das
push
imul
out
jo
and
sahf
repz
add
jmp
dec
xchg
or
ins
mov
aas
pop
jle
fcomp
jb
xchg
cmp
dec
dec
dec
cs
pop
test
dec
fmul
dec
pop
sahf
jl
push
dec
jg
dec
enter
push
xor
pop
pop
inc
pop
pop
pusha
jb
dec
pop
jmp
dec
rcpps
(bad)
or
lock
pop
xchg
pusha
in
and
pop
popw
sbb
pop
push
ret
mov
pusha
push
sbb
jl
lods
push
or
outs
outs
pop
call
in
pop
add
jns
add
add
das
test
call
xchg
ins
sbb
pop
les
fld
imul
push
xchg
arpl
or
or
sbb
ja
fmul
push
daa
dec
pop
sbb
(bad)
cmp
push
in
sub
mov
(bad)
aas
inc
dec
adc
lock
adc
dec
sbb
dec
popa
outs
nop
outs
mov
shr
shl
add
jne
push
popa
pushf
push
mov
pop
mov
ror
sbb
or
mov
scas
pop
addr16
(bad)
in
movzx
fcomp
adc
adc
add
push
call
mov
add
adc
fxch
jge
xchg
add
inc
popa
cmp
xor
xchg
pusha
pop
push
jmp
or
xor
loope
dec
or
sar
fcomp
(bad)
or
sar
dec
cdq
pop
adc
nop
out
fstp
(bad)
stc
(bad)
jmp
add
or
pop
adc
pop
xchg
out
sar
sbb
dec
lock
sete
mul
xchg
or
shr
cmp
xchg
mov
sub
add
sub
pop
xchg
sbb
adc
adc
add
sbb
out
jnp
fidiv
sub
mov
cmp
je
js
in
mov
or
xor
inc
sbb
ja
mov
sbb
jmp
pop
pop
xor
inc
dec
scas
cmp
rcl
xlat
pop
mov
mov
mov
pop
adc
add
loope
popa
inc
call
jle
inc
xchg
push
xor
pop
adc
leave
imul
lock
xor
daa
or
call
sbb
lock
aas
sbb
or
pushf
dec
mov
neg
mov
mov
mov
push
xor
mov
cld
pop
or
sub
push
cmps
loopne
test
inc
sbb
push
xchg
arpl
push
or
add
cwde
inc
cmp
adc
dec
ins
sbb
xlat
xchg
jbe
add
std
fidivr
jo
xchg
gs
ins
pop
neg
push
imul
cmp
psadbw
gs
gs
int
in
pusha
mov
lahf
jne
or
jne
push
jno
popa
mov
jbe
or
pop
jo
adc
add
push
imul
push
or
push
cmp
inc
dec
addr16
or
nop
fwait
enter
(bad)
das
cmpxchg
add
popa
ficomp
fs
pop
imul
arpl
inc
das
inc
push
addr16
test
outs
inc
push
xchg
dec
ins
ins
prefetch
or
lods
xchg
cmp
adc
xlat
sub
pop
xchg
jbe
sub
imul
inc
mov
mov
inc
fimul
push
push
and
fstp
popa
mov
inc
loope
adc
adc
aaa
adc
xor
aas
adc
jg
fdivr
jecxz
iret
push
outs
jne
or
sbb
xchg
lfs
lahf
mov
loop
jno
add
imul
mov
inc
das
cmp
sub
ret
inc
inc
inc
add
or
mov
and
sahf
jge
mov
push
pushaw
ret
push
mov
mov
les
or
js
arpl
mov
pop
(bad)
(bad)
fmul
test
pop
inc
dec
inc
push
push
inc
push
add
in
pop
sbb
inc
inc
inc
push
dec
push
xor
not
dec
inc
dec
dec
arpl
mov
cdq
fadd
push
adc
inc
push
dec
dec
push
mov
and
inc
push
xchg
inc
stc
rcl
fimul
and
out
inc
inc
xor
xor
add
inc
or
loop
inc
dec
inc
xor
inc
dec
add
push
push
push
dec
sub
mov
lea
(bad)
cs
inc
mov
inc
das
mov
loope
mov
mov
aaa
or
pop
dec
pop
adc
push
repnz
inc
push
push
push
dec
push
inc
scas
dec
inc
dec
imul
sub
nop
cmp
push
mov
loope
add
mov
or
or
fld
sub
bound
inc
loopne
add
mov
(bad)
jl
or
sbb
add
add
add
or
pop
mov
cmc
cmp
inc
sbb
mov
and
sbb
mov
or
dec
sbb
jmp
inc
or
int
add
add
adc
pushf
lock
mov
dec
arpl
xor
arpl
add
fisttp
mov
bound
stos
mov
aas
add
sub
pop
jb
loopne
mov
mov
inc
add
xor
cmp
cmp
in
pop
dec
pop
das
push
push
add
fbstp
sub
popa
inc
inc
aas
jne
jne
jmp
cmp
adc
and
dec
and
enter
dec
cmp
pop
or
cmp
xor
psubd
jno
push
adc
push
dec
cmp
pop
retf
jae
mov
and
sbb
or
mov
mov
push
stc
int3
sti
inc
adc
movs
add
mov
dec
lds
adc
test
mov
(bad)
enter
add
push
mov
shr
adc
aaa
xor
sub
xchg
inc
aad
(bad)
add
clc
sti
push
adc
lea
inc
lock
mov
mov
xchg
sbb
cmp
mov
sbb
mov
mov
inc
fiadd
pop
fadd
call
push
push
push
in
jmp
fisttp
or
fiadd
cmp
push
fsub
cwde
inc
psignb
popf
jno
pop
out
call
add
push
mov
and
push
movs
pop
repz
jnp
and
jo
xor
inc
jo
ss
push
xor
inc
stos
mov
sbb
je
adc
test
jg
and
and
mov
mov
jo
test
sub
inc
fst
popf
add
xchg
into
jle
mov
jmp
pop
xor
neg
pop
xor
push
pop
ja
xchg
das
fcomip
ficom
jp
mov
lds
push
sbb
inc
rol
outs
out
cmp
in
mov
or
arpl
inc
mov
inc
sbb
cli
in
test
sbb
adc
outs
xor
pop
sbb
lock
xchg
push
mov
dec
push
dec
loopne
inc
sbb
pop
test
scas
add
inc
xor
xchg
and
mov
pop
xchg
push
and
xor
or
and
js
xchg
(bad)
xchg
enter
(bad)
loopne
inc
cmp
pop
push
enter
dec
adc
in
push
jne
or
sub
fidivr
das
adc
movzx
add
add
fiadd
in
js
inc
clc
dec
in
jmp
dec
inc
sub
retf
(bad)
stos
dec
inc
or
cmp
mov
sbb
and
xchg
lock
or
cdq
popa
adc
push
dec
add
or
or
lods
xchg
fsub
nop
or
mov
cmp
das
mov
in
inc
fs
inc
jno
cmp
outs
sub
ret
xchg
js
dec
enter
push
add
add
fcom
xchg
mov
fimul
movs
ror
pop
jp
cmp
mov
add
mov
(bad)
enter
ret
xlat
lock
mov
push
lds
and
jnp
adc
or
scas
dec
ins
jae
pop
ins
das
cmp
mov
and
lods
aas
and
inc
mov
sub
dec
jmp
push
movs
lods
hlt
sbb
adc
call
popa
xor
in
lock
call
imul
aaa
adc
and
xor
enter
nop
mov
mov
cmp
std
in
rcr
jecxz
jle
rol
xor
jl
fsub
sbb
in
adc
sahf
and
jb
loop
fcom
lock
or
inc
and
push
(bad)
daa
popa
mov
imul
mov
pop
(bad)
outs
and
dec
arpl
sar
adc
cmp
enter
adc
inc
push
pushf
and
mov
das
push
or
or
loope
js
call
hlt
sbb
sbb
push
or
push
add
or
cwde
fldcw
pop
or
or
xor
sub
sub
push
pop
test
and
pop
arpl
mov
xchg
push
push
cmps
push
in
mul
(bad)
dec
dec
inc
xchg
jmp
jae
gs
jl
shr
es
imul
lock
xchg
and
retf
sub
dec
iret
sub
daa
mov
xor
cmps
mov
and
cmp
outs
mov
adc
mov
mov
test
push
pop
jge
push
ins
jge
lods
cmp
or
fcmovnb
inc
adc
inc
push
sbb
sub
mov
lea
and
mov
lock
mov
cmps
cmp
add
sub
inc
sub
in
sbb
or
push
jo
jb
fdiv
mov
cmps
mov
sbb
xchg
lods
pop
shr
ja
rcl
dec
test
push
or
stc
adc
add
pop
not
xchg
test
or
daa
and
nop
dec
out
jl
inc
xchg
test
or
sub
and
addr16
jb
popa
sub
and
test
inc
jmp
xor
into
lods
xchg
pop
adc
bt
push
cld
pop
jp
push
inc
xor
pushf
push
pop
test
movs
pop
and
adc
jne
les
call
popa
shl
aas
mov
cmp
dec
add
pusha
(bad)
leave
mov
mov
movs
mov
mov
inc
jae
dec
mov
or
not
and
mov
cmp
je
mov
mov
mov
movs
add
sub
mov
shr
jl
push
aas
lods
jno
push
popa
or
fsubr
call
arpl
(bad)
and
sbb
add
out
pop
pop
loope
push
cld
scas
xchg
lock
or
or
shl
sbb
mov
je
movq
lods
and
cmp
cmp
pop
push
loopne
repnz
push
add
add
add
push
mov
sub
pop
or
outs
add
pop
xor
call
push
(bad)
shr
xchg
jmp
int3
push
call
enter
pop
test
xchg
div
cmp
sbb
add
cwde
shl
and
movs
add
sbb
or
inc
not
je
xor
sti
and
inc
ja
add
xor
rcr
aas
or
jle
pop
in
cwde
aas
ds
in
inc
das
mov
add
push
ret
nop
mov
sbb
pop
pop
imul
enter
xor
dec
ss
(bad)
add
or
das
dec
(bad)
shr
sar
xchg
inc
push
mov
or
lods
adc
xchg
push
mov
das
lea
add
jge
pop
test
fisubr
sub
xor
paddsw
(bad)
call
mov
shl
in
add
clc
adc
in
cmps
xchg
jl
jmp
dec
call
sbb
icebp
sub
cmp
loopne
bound
gs
or
call
jno
lock
dec
sbb
add
addr16
push
and
in
call
(bad)
sbb
out
lods
jns
inc
daa
aam
jle
push
mul
(bad)
out
pop
push
inc
or
sub
xchg
fimul
push
(bad)
adc
mov
popf
icebp
inc
bound
cmp
dec
xlat
neg
lods
bound
add
dec
add
mov
add
mov
loopne
ror
jg
adc
xor
not
and
push
enter
pop
sar
scas
fsub
pop
or
mov
(bad)
cmps
gs
pop
sub
add
repz
bndstx
add
mov
fwait
sbb
test
push
clc
push
(bad)
jo
add
mov
stos
test
add
ret
push
or
imul
push
and
mov
shl
jo
outs
push
and
jmp
add
adc
jge
rcl
nop
mov
out
fisttp
es
neg
and
in
adc
push
sub
dec
(bad)
(bad)
(bad)
ins
jmp
jns
pop
inc
add
sbb
(bad)
mov
sar
sbb
inc
fsubr
add
(bad)
jo
inc
cmps
push
loopne
mov
sbb
inc
sti
in
loopne
mov
mov
and
add
(bad)
out
adc
js
jns
and
or
mov
cmp
jo
cmp
add
fisub
sub
and
mov
sbb
push
mov
mov
or
cmc
mov
or
movs
xchg
cli
add
add
hlt
sub
dec
adc
cwde
cmp
aas
pop
jle
mul
fwait
mov
mov
out
push
mov
pop
pop
pop
push
add
add
jne
jb
dec
(bad)
fidivr
adc
adc
adc
sbb
and
add
dec
pop
movs
inc
inc
pop
pop
aam
ficom
pop
mov
add
(bad)
js
movs
dec
js
and
jg
push
inc
and
enter
mov
dec
ficom
lock
jmp
test
jecxz
add
jmp
adc
jecxz
mov
mov
jmp
xchg
mov
push
imul
xor
cli
adc
aam
mov
cmp
sar
(bad)
leave
adc
jno
mov
adc
mov
pop
cmp
cmp
jp
or
fadd
add
jne
aas
ret
dec
or
push
aas
add
xchg
mov
lea
std
mov
pop
push
cmp
mov
cmps
(bad)
daa
jmp
addr16
jns
pop
repnz
rcl
or
push
and
adc
das
scas
fmul
cmp
xchg
clc
dec
push
xchg
or
xchg
loopne
loop
das
(bad)
icebp
(bad)
xchg
mov
inc
push
nop
test
or
add
adc
pop
test
popa
xor
inc
mov
lods
lds
dec
pop
fnstcw
aaa
cmp
push
push
dec
clc
fisttp
das
adc
xor
ret
lock
jns
and
jmp
daa
dec
mov
pop
push
mov
or
retf
imul
dec
adc
jl
or
add
push
fdiv
xchg
mov
add
gs
daa
add
inc
inc
sbb
xlat
test
add
xchg
jne
test
shl
(bad)
dec
pop
lods
jo
inc
push
xor
in
fstp
aaa
rcr
cwde
nop
or
data16
ror
loop
jno
adc
xchg
add
sbb
retf
dec
and
push
js
imul
and
lock
xchg
mov
and
jge
sbb
clc
mov
pop
popa
mov
push
push
add
and
movs
hlt
xor
enter
adc
cmps
sub
cwde
mov
adc
test
or
add
jp
sbb
and
stos
shl
mov
sub
adc
push
and
ins
and
mov
pop
cld
push
push
in
pushf
inc
add
mov
dec
inc
pop
xor
add
push
sbb
lock
sub
add
mov
add
mov
not
and
sar
add
add
or
pop
mov
mov
(bad)
add
inc
add
add
mov
(bad)
cmp
jg
test
jle
cmp
jl
mov
aaa
enter
jg
dec
xchg
test
clc
jle
adc
mov
mov
popa
call
and
btr
inc
ret
sbb
dec
fs
into
lods
add
loope
sbb
dec
movs
jge
movs
data16
or
jmp
pusha
popa
add
push
sub
adc
mov
shl
inc
xchg
fcomp
mov
mov
and
cmps
sbb
scas
iret
xor
dec
jmp
mov
inc
add
inc
repnz
inc
sub
inc
fadd
push
sub
imul
or
lods
add
popa
jg
fdivr
imul
sub
loopne
es
cmp
adc
lea
ret
push
mov
(bad)
bound
cmp
pushf
and
xor
in
mov
adc
xchg
in
xor
aam
mov
cld
adc
add
sub
mov
(bad)
int
jnp
xor
pop
aam
add
pop
push
dec
dec
pop
or
inc
pop
in
mov
js
loope
ja
xchg
pop
cwde
leave
inc
mov
mov
mov
push
mov
cmp
clc
sbb
call
iret
rol
add
push
push
(bad)
mov
push
dec
dec
test
pop
jne
(bad)
test
add
test
ss
jmp
sub
cmp
push
shl
ins
jo
pop
aas
stos
fiadd
inc
aam
test
inc
imul
add
pusha
inc
std
fadd
jmp
xor
(bad)
jmp
sar
fbstp
pushf
mov
push
ins
clc
sbb
test
aas
or
rol
jl
pop
sbb
jb
pop
clc
adc
mov
inc
js
cwde
mov
sbb
add
leave
or
mov
push
dec
or
jb
sub
sub
popa
jb
jne
inc
push
repz
idiv
jmp
push
xchg
mov
es
add
lahf
sbb
add
jmp
or
imul
(bad)
cmp
sub
daa
xor
cmps
jo
(bad)
fiadd
jae
cmp
ja
(bad)
cmp
sbb
add
jne
(bad)
mov
sub
imul
mov
loopne
mov
cmp
pop
fs
cmp
add
mov
out
adc
test
add
and
add
test
sub
inc
les
gs
rcr
fist
lock
mov
jl
or
adc
xchg
outs
xor
push
mov
bnd
or
daa
shr
enter
xchg
imul
jno
cmp
push
imul
push
out
(bad)
jmp
sbb
inc
ror
test
dec
adc
fistp
push
push
ins
push
sbb
push
and
pop
sub
ret
sbb
or
(bad)
push
push
sbb
imul
jle
and
add
push
add
xor
add
fs
sahf
je
in
hlt
int3
dec
repnz
js
call
mov
loope
call
jns
in
loopne
or
dec
retf
fdivr
cli
out
sub
int3
into
loopne
jo
push
scas
add
in
push
add
or
pop
sub
rol
test
inc
fcom
xchg
pop
imul
push
rol
xchg
idiv
add
push
lods
or
lods
data16
ds
shr
push
mov
xor
fnstenv
jnp
push
outs
jg
mov
push
idiv
add
push
xchg
in
jge
dec
hlt
test
xchg
pop
pusha
in
fwait
adc
sbb
hlt
loopne
sub
out
fcom
jbe
pop
mov
pop
ret
jp
mov
xchg
loopne
xchg
(bad)
daa
mov
xchg
loopne
add
adc
and
adc
jbe
push
and
mov
out
xor
pop
add
dec
adc
dec
sbb
(bad)
sti
add
xor
nop
(bad)
ss
mov
adc
(bad)
add
cwde
cmp
inc
mov
or
or
push
push
gs
aaa
popa
xchg
daa
imul
sbb
sbb
add
jnp
rcl
or
imul
inc
add
cmp
and
ja
out
mov
or
clc
popa
inc
dec
pushf
or
hlt
ror
or
adc
pop
pop
outs
lods
cs
mov
pop
jne
cmp
cmp
fld
shr
mov
shl
cmp
add
les
ret
xchg
adc
into
mov
rcr
std
fld
push
cmc
sbb
add
pop
adc
add
adc
cmp
out
cmps
pop
ret
addr16
dec
add
pop
push
add
and
cmp
ror
cmps
sub
jb
adc
lahf
mov
outs
jb
retf
adc
cmp
ss
fld
and
sbb
jl
retf
nop
adc
push
and
pusha
and
add
test
fadd
stos
or
cmp
mov
imul
nop
mov
mov
scas
push
inc
add
test
enter
mov
inc
push
jmp
stc
xchg
inc
hlt
mov
and
jmp
xor
fwait
mov
es
push
mov
dec
ror
ins
popw
aam
bswap
imul
ret
mov
ror
cli
dec
jno
jge
nop
in
inc
rol
call
adc
dec
sbb
aaa
push
xor
test
hlt
pop
sbb
cmp
retf
cmps
lods
mov
jno
inc
fimul
mov
dec
push
mov
cmp
aad
push
int3
ins
and
pop
adc
xor
lahf
daa
sub
out
cmp
dec
xor
mov
loope
and
xchg
jo
jne
ins
ror
lds
(bad)
and
out
xchg
push
pop
scas
push
or
mov
jo
push
jae
dec
mov
dec
add
lahf
sbb
mov
xor
cld
dec
adc
test
pop
imul
adc
test
xor
sbb
cmps
or
popf
push
and
push
sbb
dec
dec
add
add
adc
adc
mov
push
test
(bad)
imul
or
jne
mov
(bad)
dec
stos
mov
je
fiadd
bndstx
(bad)
cmp
rcr
test
clc
jne
outs
cmp
jmp
dec
pop
add
rcl
enter
das
sub
sub
mov
enter
ror
dec
xor
sub
aas
or
jnp
and
and
mov
adc
adc
inc
adc
bound
push
aad
es
(bad)
or
or
(bad)
xor
or
div
mov
out
mov
xlat
pop
jne
mov
pop
adc
adc
mov
scas
mul
es
mov
inc
sahf
sbb
push
push
mov
inc
lock
mov
hlt
xor
call
js
test
daa
popf
dec
sbb
xor
and
outs
dec
or
mov
push
sub
sti
ret
push
test
repnz
xor
sbb
sub
out
ss
inc
scas
pop
adc
nop
test
pop
dec
jno
add
xlat
dec
jg
js
mov
or
push
mov
mov
adc
mov
(bad)
xlat
inc
inc
xor
clc
bound
or
and
aas
out
ins
jecxz
sbb
and
push
jp
cmc
cs
shr
jo
ja
jne
add
rol
sahf
sub
ret
add
push
mov
push
outs
mov
(bad)
das
xlat
ret
dec
sub
les
mov
icebp
jbe
push
jmp
sbb
sbb
or
mov
rol
xchg
mov
(bad)
fistp
or
in
cld
mov
cmp
xchg
mov
push
shl
or
or
xor
dec
cmp
add
sbb
mov
mov
ds
and
xor
fadd
mov
mov
ja
mov
loopne
loop
dec
mov
xor
sbb
xor
jae
(bad)
jmp
inc
dec
mov
stc
sub
mov
xor
xor
popf
sbb
mov
mov
push
dec
adc
(bad)
ror
ret
je
xchg
inc
mov
inc
xchg
(bad)
sar
adc
mov
push
pop
mov
jo
push
and
add
add
and
xchg
inc
add
jg
loope
sbb
mov
or
mov
xor
mov
adc
mov
shl
jmp
pop
bound
dec
mov
xchg
int
test
sub
push
sbb
mov
rcr
movs
push
cmp
xlat
dec
adc
or
call
sbb
mov
dec
sbb
jg
sub
and
test
addr16
add
dec
mov
pop
and
and
xchg
dec
mov
ins
jle
cmp
fwait
adc
inc
dec
cld
and
in
inc
sub
gs
les
xchg
dec
xor
mov
sbb
lock
mov
out
sbb
outs
pop
(bad)
daa
add
int
addr16
xor
and
shr
shl
inc
and
bound
mov
jl
sbb
fcom
sub
pop
rcl
sub
or
push
push
mov
pusha
aaa
jmp
nop
cmps
call
or
jge
arpl
adc
adc
ds
push
adc
test
push
jl
fild
ror
mov
xchg
push
iret
add
pushf
pop
dec
add
lods
mov
test
clc
pop
inc
inc
jno
xor
sti
test
fisubr
jnp
push
adc
or
adc
in
dec
adc
(bad)
in
mov
pop
dec
jbe
(bad)
xor
std
imul
push
sbb
dec
les
js
mov
dec
cmp
dec
push
cdq
adc
adc
out
jo
es
fild
mov
cdq
sbb
or
test
mov
pop
inc
fistp
xchg
dec
and
dec
or
add
and
das
cmc
fcmovnu
sbb
clc
jmp
inc
adc
and
pop
sub
aaa
and
mov
das
xchg
jg
adc
adc
shl
iret
rol
or
retf
add
or
and
cmp
jmp
cmp
add
mov
in
push
inc
add
sub
add
xchg
mov
jge
and
inc
je
push
inc
mov
retf
ror
mov
dec
lea
sti
dec
ret
or
fs
mov
xchg
cwde
fild
jne
pop
and
sbb
mov
mov
pop
out
adc
xchg
mov
fsub
or
mov
jmp
push
cmp
ror
shr
cmp
int
call
loopne
jo
(bad)
sub
pop
pop
sbb
sar
hlt
cmp
nop
jno
jns
daa
inc
dec
adc
loopne
push
or
push
adc
sub
pusha
lds
or
mov
retf
mov
call
ret
cmp
dec
xor
out
out
inc
test
or
out
add
mov
hlt
js
nop
xchg
clc
enter
ins
xchg
stos
push
pop
fs
data16
inc
add
cld
aad
or
in
inc
add
and
dec
(bad)
retf
dec
lock
pop
test
add
sub
sub
jp
mov
xchg
(bad)
cdq
fcmove
mov
dec
fwait
mov
je
add
add
dec
rcl
das
fdiv
or
imul
add
popf
imul
mov
push
scas
je
cmp
sbb
out
daa
lock
jl
pushf
fdiv
xchg
std
inc
js
mov
sar
mov
mov
jmp
push
xor
nop
icebp
push
pop
fs
(bad)
scas
jb
xchg
and
add
sub
mov
and
jo
xlat
xor
push
lea
es
in
adc
and
push
dec
ja
or
or
or
mov
mov
fadd
push
enter
(bad)
fiadd
push
push
sar
sub
fistp
mov
lock
imul
and
sub
dec
mov
mov
inc
xchg
or
adc
or
pop
push
jae
jle
sub
cli
ins
inc
push
jmp
adc
xor
and
popa
cli
jo
sbb
pusha
sbb
sbb
and
int3
add
pop
icebp
xchg
or
sbb
mov
(bad)
ins
scas
fadd
pop
nop
dec
shr
add
xor
jle
fisttp
inc
mov
(bad)
enter
dec
arpl
mov
adc
pop
cdq
and
add
adc
pop
pushf
jo
bound
test
sub
jno
dec
or
adc
loopne
cmp
hlt
mov
retf
je
mov
pop
or
inc
nop
push
mov
or
jbe
pop
push
cwde
add
jmp
pop
ret
mov
add
call
mov
jnp
or
xchg
pop
mov
xchg
push
sbb
push
clc
sbb
sbb
(bad)
push
fsub
jae
sbb
push
std
std
cmp
mov
cmps
or
cmp
daa
mov
mov
adc
test
fiadd
jnp
sub
sbb
ins
out
lods
adc
mov
push
iret
inc
xor
mov
and
fmul
test
inc
jo
add
or
mov
retf
out
pop
bound
dec
adc
ror
add
xchg
cmp
mov
cmp
lods
ja
cmp
mov
mov
push
adc
mov
jmp
or
push
daa
mov
lahf
mov
adc
sub
push
add
jae
imul
inc
fisub
hlt
ret
ins
xchg
inc
sbb
xor
mov
xchg
dec
sbb
dec
rcr
jne
adc
xchg
adc
sub
test
int
cmp
outs
adc
pop
jge
adc
mov
sub
mov
cmp
sti
fidivr
cmp
inc
cmp
pop
and
imul
pop
rcl
and
in
leave
out
sub
repz
stos
add
arpl
nop
sub
xchg
movs
test
cld
inc
fsubr
enter
fmul
test
aad
pusha
punpckhdq
xor
xchg
xlat
adc
sbb
cld
and
sbb
pop
rol
sub
ficom
inc
push
adc
add
aaa
inc
push
fwait
pop
sbb
pop
dec
jo
mov
push
loope
jbe
aaa
and
and
loopne
pop
fadd
int
dec
adc
int
jo
dec
fwait
lea
inc
pop
pusha
push
xchg
sbb
and
aad
xor
xchg
push
sbb
mov
inc
mov
add
jne
and
xchg
adc
jne
mov
adc
popf
daa
fs
cmp
ins
mov
pop
and
xchg
mov
mov
mov
push
mov
fist
xchg
or
invd
jo
mov
adc
outs
pushf
lock
les
or
xchg
lock
add
stc
jp
test
dec
mov
stos
add
lock
popf
test
mov
test
dec
mov
mov
push
sub
jne
xchg
xlat
out
loope
jecxz
not
add
add
std
xor
movups
mov
sbb
pop
repz
cmp
jne
add
mov
cmp
(bad)
jg
mov
enter
je
adc
sbb
inc
mov
scas
sbb
movs
popf
mov
add
add
popa
cmp
sbb
add
pop
jp
add
sbb
push
add
or
clc
sar
push
(bad)
leave
stos
popa
and
loop
inc
(bad)
sub
and
mov
mov
add
call
cmp
or
out
or
mov
(bad)
xor
les
inc
mov
jo
or
add
arpl
cdq
add
repnz
pop
adc
jno
xchg
les
out
call
fimul
sbb
dec
mov
add
mov
out
push
fmul
in
movs
sbb
mov
mov
(bad)
fistp
scas
ficomp
push
or
lea
jnp
push
adc
pop
loopne
mov
scas
cmp
aas
cmps
hlt
mov
bound
cld
pusha
stos
aad
outs
enter
mov
mov
pop
scas
sub
cmp
enter
jmp
cmp
or
ins
jmp
bound
mov
pop
mov
cmp
je
mov
pop
daa
rol
enter
adc
imul
(bad)
fcmovb
inc
mov
ins
imul
in
jne
xor
aaa
loopne
icebp
or
cmp
test
dec
dec
cmp
jne
mov
xor
push
jo
xchg
test
stos
or
pop
xchg
imul
out
jl
fldenv
and
pop
inc
out
or
cli
inc
adc
test
imul
xlat
sbb
jo
pop
imul
fmul
inc
shr
push
cmps
inc
(bad)
out
into
sbb
dec
aaa
ret
jae
sub
lea
ss
popf
or
xor
pop
js
pusha
pop
adc
and
cmp
mov
adc
dec
mov
lock
inc
push
add
nop
jmp
push
xchg
cmp
adc
sub
xor
or
mov
push
scas
inc
loopne
imul
loope
push
aaa
jo
adc
lock
xor
loopne
pusha
add
xor
dec
and
dec
adc
sar
mov
cmps
jge
push
stc
push
inc
loopne
test
xchg
fistp
sub
in
mov
cmp
sbb
add
sub
inc
lock
inc
mov
xchg
call
add
into
fadd
mov
nop
xchg
push
add
add
cli
mov
xor
test
sub
push
jo
daa
sbb
pusha
jl
sbb
adc
or
nop
xchg
outs
sti
lea
(bad)
pop
out
nop
dec
fist
push
pop
js
rcr
nop
push
popa
(bad)
shl
test
iret
ret
jo
pop
mov
xchg
in
xchg
lods
loopne
ds
sub
push
sub
push
out
inc
mov
sub
cmp
dec
loopne
mov
out
add
add
into
out
xor
push
mov
push
psubsb
dec
or
aaa
call
aaa
jno
or
sub
fmul
es
call
cmp
push
shl
cmp
jns
ror
dec
mov
dec
hlt
imul
or
in
inc
jae
imul
cmps
jno
lea
aaa
push
test
lock
jno
mov
inc
repnz
mov
push
(bad)
or
mov
inc
ret
inc
rcr
ins
aam
mov
pop
push
or
push
test
adc
(bad)
or
pop
fisubr
mov
pusha
push
fist
outs
or
add
mul
mov
xor
and
xor
push
xchg
or
push
inc
xchg
bound
inc
mov
retf
and
sbb
and
dec
shl
jo
nop
or
mov
movs
les
sbb
push
mov
cmp
pop
sub
dec
push
imul
dec
cmp
mov
clc
mov
ss
or
push
xlat
xor
jmp
sub
xor
ss
sub
test
aaa
xchg
xor
mov
add
int
pop
add
adc
and
add
ins
jl
rol
add
adc
push
adc
mov
pop
and
cmp
ins
jl
push
sbb
add
sbb
sub
rcl
sbb
int
scas
push
and
movs
push
test
loopne
push
cmps
and
adc
shl
push
xchg
push
inc
adc
and
sbb
inc
int3
xchg
and
call
neg
(bad)
(bad)
jns
jmp
sub
or
sbb
dec
sub
scas
rol
mov
and
mov
add
mov
repz
dec
pop
les
jle
mov
sbb
pusha
dec
adc
and
push
xor
mov
add
mov
scas
mov
pop
gs
movs
mov
inc
fnstenv
call
or
call
sbb
lahf
mov
or
inc
leave
in
mov
sbb
pop
and
arpl
adc
inc
inc
bound
fiadd
rcl
out
mov
fisttp
sbb
push
mov
mov
ret
adc
das
adc
mov
xor
jnp
adc
lock
mov
mov
loopne
jmp
lock
add
adc
jnp
xor
push
push
xchg
popa
cmps
xchg
call
and
cmps
adc
stos
or
pop
adc
sub
sub
jo
ins
clc
push
inc
nop
add
sub
dec
mov
enter
sub
cmp
ja
cld
push
cwde
sub
pop
sub
add
adc
xor
inc
xor
xor
add
dec
xlat
ror
adc
xor
adc
xchg
add
adc
adc
sahf
cwde
push
rol
add
mul
inc
sub
nop
pop
mov
mov
sbb
lea
into
add
pop
adc
(bad)
and
(bad)
aas
adc
pop
inc
jge
shl
push
sub
or
retf
dec
sbb
adc
sub
jmp
dec
je
sub
je
in
mov
or
or
cmp
push
xor
xor
sub
sub
dec
jmp
mov
fidivr
mov
xchg
mov
jmp
mov
or
add
(bad)
rol
fdivr
mov
call
je
or
xor
mov
cmp
mov
sub
int
push
xor
shr
imul
add
inc
or
push
loope
mov
push
sub
pop
jmp
dec
and
mov
jne
addr16
repnz
clc
dec
add
xor
dec
jge
add
mov
js
dec
mov
sbb
mov
sbb
sbb
add
xor
xor
(bad)
pop
mov
adc
mov
xchg
cmp
push
ja
jae
and
mov
test
js
push
cmps
cmps
aas
sub
cwde
dec
or
in
(bad)
jne
mov
enter
ins
mov
nop
ret
gs
xchg
ja
lds
adc
out
push
sub
xlat
push
dec
cmp
fist
fld
ficomp
or
pop
test
add
stos
daa
not
daa
or
xor
adc
or
xor
arpl
pop
push
aad
lock
adc
movs
out
lods
or
ror
inc
xor
pop
xor
hlt
and
jg
sub
mov
adc
inc
outs
mov
adc
(bad)
push
shl
sub
sub
adc
push
nop
lea
sub
lea
repz
push
push
mov
sbb
loope
push
sub
nop
adc
mov
sbb
add
jno
cwde
sbb
add
lods
or
fld
push
add
ret
mov
lods
icebp
(bad)
lea
rcl
add
add
rcr
jle
inc
jo
adc
test
push
sbb
cmps
mov
lahf
(bad)
mov
lahf
mov
dec
inc
fidivr
cs
lahf
fimul
bound
adc
inc
or
aas
inc
fild
lea
mov
xor
mov
jo
and
or
or
inc
xchg
dec
xor
adc
fldcw
and
mov
dec
cmp
push
mov
cmp
nop
(bad)
mov
gs
cmp
pop
pusha
push
pop
jecxz
inc
popa
mov
or
sahf
push
cmps
add
push
push
popf
shr
sbb
or
loopne
jne
or
inc
loope
test
rcr
jmp
test
loopne
or
add
adc
dec
xacquire
stc
pop
sbb
and
aaa
dec
mov
lds
jp
pop
les
push
pop
mov
outs
call
or
push
sub
test
hlt
inc
daa
inc
je
or
stos
mov
call
pop
add
add
test
dec
dec
lea
sbb
inc
popa
jne
clc
push
stos
loopne
adc
inc
dec
enter
imul
pop
sbb
or
mov
outs
or
shl
and
ret
daa
(bad)
mul
clc
dec
jge
outs
xchg
sub
ficomp
inc
adc
dec
or
mov
shl
inc
call
xchg
cmp
or
add
outs
pop
or
out
jne
xlat
push
sbb
(bad)
imul
adc
cmp
and
in
add
js
or
push
or
dec
mov
movzx
lea
or
sbb
xchg
xor
lock
and
push
push
(bad)
loop
inc
sar
jbe
dec
inc
test
or
rol
mov
push
inc
cmp
sbb
shl
cmp
dec
mov
test
xchg
or
into
pop
lods
fisttp
dec
jmp
shl
pop
fsub
and
mov
daa
call
rol
dec
xacquire
cld
sub
push
test
iret
adc
outs
call
pop
int3
or
pop
sub
shl
xchg
cmp
pop
jae
add
push
xchg
loope
push
shl
add
add
add
inc
ret
sbb
pusha
retf
push
pop
cmp
sbb
add
pop
push
rcl
xchg
mov
sub
ss
adc
bound
push
dec
and
pop
(bad)
mov
pushf
fs
and
repz
xor
and
mov
adc
push
sbb
nop
call
push
inc
inc
xchg
inc
movs
fdiv
mov
push
(bad)
movs
and
sub
jnp
es
mov
jo
push
mov
pop
xchg
popa
cmp
inc
in
lds
and
sbb
or
pop
mov
push
ret
xchg
lock
or
mov
movs
jb
mov
dec
push
push
jl
cmp
dec
adc
por
jbe
fisttp
jmp
ins
inc
add
pop
inc
fsub
dec
push
adc
popa
xor
pop
aam
loope
lods
fcom
ss
loopne
fmul
add
sbb
or
shl
dec
movs
(bad)
pshufw
cmp
sbb
pop
mov
add
xor
or
(bad)
sub
or
mov
cdq
sar
popa
mov
lea
push
mov
push
xchg
mov
inc
xchg
mov
lea
or
sbb
adc
iret
or
push
jnp
add
xchg
lea
jmp
sbb
push
adc
xchg
icebp
cmp
loop
inc
adc
xchg
jecxz
and
mov
aas
mov
inc
xchg
ror
cmp
or
int
fs
sbb
and
jge
push
or
adc
push
cmps
les
lea
push
or
add
and
cmp
(bad)
mov
(bad)
loope
scas
or
pusha
push
and
adc
(bad)
xlat
adc
add
js
je
fsub
push
lock
pop
pop
arpl
daa
adc
stc
jge
and
test
mov
retf
jp
xchg
xchg
sbb
inc
add
das
pop
nop
call
sbb
xlat
and
and
rcl
mov
inc
call
sub
sbb
mov
mov
out
test
in
fstp
xchg
mov
xor
fldenv
adc
ss
mov
inc
mov
loopne
mov
sbb
ret
fimul
mov
sbb
loope
shl
ret
in
or
adc
mov
dec
out
clc
jmp
aad
mov
jno
mov
dec
add
inc
out
adc
retf
les
jecxz
inc
out
jmp
scas
popa
jno
pop
int
push
mov
and
adc
add
scas
mov
lods
pop
or
inc
jmp
sbb
xor
add
mov
add
xlat
aam
bound
pop
push
daa
sub
ret
and
fidivr
or
ins
test
hlt
lds
sub
mov
mov
dec
pop
ins
scas
loopne
adc
mov
push
mov
aas
pop
das
push
cmp
sbb
push
ins
shl
mov
fdiv
xor
push
and
or
mov
ds
or
mov
cmp
xor
stos
sar
(bad)
iret
mov
mov
cmps
sub
adc
pop
or
lea
sub
inc
bound
fchs
lea
imul
in
or
ss
inc
bound
fisub
ss
xor
or
sub
adc
xchg
or
add
pop
gs
jl
rol
mov
sbb
cmps
(bad)
aad
out
lock
lock
dec
sbb
je
test
and
je
inc
adc
jo
pop
and
mov
mov
and
loope
xor
cmovg
and
or
es
ror
mov
inc
push
mov
jle
jns
xchg
sbb
pop
push
push
aaa
pop
jmp
inc
jg
fisub
sbb
inc
add
lods
rcr
getsec
pop
jns
arpl
mov
adc
push
daa
sub
inc
es
bound
palignr
add
jg
mov
fcomp
int
or
dec
push
arpl
mov
pop
or
push
mov
scas
inc
xlat
enter
data16
arpl
test
inc
and
inc
pop
rol
push
add
aas
or
pop
cmp
push
(bad)
fs
adc
sbb
mov
sbb
and
and
push
repnz
popf
and
es
inc
test
mov
movs
das
pusha
loopne
idiv
mov
or
popf
pop
inc
jmp
xchg
sbb
push
stos
test
add
in
outs
mov
ins
pusha
sbb
adc
add
push
cld
jmp
popa
sar
rcl
add
pop
push
cmp
ins
test
mov
repz
sbb
xor
or
add
sub
xor
in
pop
sbb
aam
(bad)
fmul
inc
sub
clc
icebp
push
or
data16
or
sub
out
and
jmp
or
imul
push
push
movzx
sahf
xor
imul
aam
jg
mov
dec
maskmovq
test
xchg
or
call
outs
(bad)
adc
add
dec
jmp
xor
scas
mov
adc
adc
sahf
push
stos
(bad)
jle
dec
aam
aaa
dec
add
or
pop
pop
sub
out
fwait
js
dec
jp
(bad)
xor
sub
cmp
call
mov
sub
mov
adc
pusha
addr16
xchg
add
arpl
add
adc
inc
pop
sub
popa
xor
cmp
fnstcw
(bad)
gs
out
xor
mov
push
jno
cs
sub
adc
(bad)
xchg
sub
or
sti
mov
cmps
mov
pop
sub
aas
daa
push
jl
add
cwde
mov
test
mov
pop
pop
adc
enter
push
mov
jnp
es
and
push
add
out
es
adc
lock
pop
and
inc
add
test
cmp
jecxz
outs
push
xchg
inc
add
es
mov
scas
fmulp
pop
or
fs
xor
inc
mul
mov
addr16
loop
add
or
lock
mov
and
pop
bound
push
int
add
and
add
mov
cmc
enter
and
mov
inc
and
jg
add
cmps
sub
add
call
test
pop
repnz
xchg
push
nop
jo
dec
adc
pop
or
push
ret
cmp
in
popa
mov
dec
and
mov
movs
mov
pop
adc
sbb
dec
xor
test
push
cmp
push
or
adc
add
(bad)
fadd
or
push
pop
jnp
inc
sbb
fs
xor
push
clc
push
fadd
push
cmp
adc
test
xchg
or
push
sbb
lar
and
aam
push
mov
add
fwait
dec
cmp
inc
jmp
inc
sbb
inc
cmp
push
sub
in
add
push
jl
mov
or
fisttp
ret
movs
pop
(bad)
pusha
cmps
ror
sub
inc
cs
pop
outs
hlt
lods
retf
js
repz
mov
loop
hlt
inc
test
sub
lods
cld
sub
jne
outs
mov
adc
xor
wbinvd
xor
into
and
mov
ins
pop
inc
xchg
gs
xchg
ins
inc
xchg
pop
data16
jne
repnz
dec
test
or
fisubr
xor
pop
dec
es
fcom
loopne
inc
and
pop
(bad)
fld
repz
mov
test
sub
jge
pop
mov
mov
sub
mov
or
test
xchg
(bad)
mov
shl
fdiv
pop
jl
push
push
shl
mov
or
dec
test
mov
test
clc
sub
mov
in
inc
fiadd
fdiv
cmp
adc
mov
sbb
test
adc
je
in
repz
and
sbb
mov
fisttp
mov
fdivr
idiv
cmp
(bad)
sar
lahf
inc
cmp
cmp
inc
dec
adc
es
mov
or
or
iret
std
ror
imul
and
(bad)
sub
enter
outs
ja
sub
aaa
cmp
ret
cmp
cmps
dec
lods
push
adc
adc
ret
test
jo
or
mov
inc
pop
movs
iret
and
push
xchg
(bad)
jno
inc
push
xor
dec
ins
push
or
fsub
dec
pop
mov
daa
or
iret
sbb
xor
int
iret
fs
iret
add
push
xchg
adc
jp
cmp
mov
cmp
mov
xor
and
push
test
add
loopne
and
dec
js
adc
inc
or
dec
test
hlt
cmps
add
adc
bound
xchg
pop
loopne
jmp
dec
mov
adc
shr
jne
outs
add
es
(bad)
ret
adc
cmp
outs
xchg
jno
push
mov
inc
pushf
xor
dec
add
and
jl
enter
push
enter
mov
ss
push
sbb
je
jo
push
sbb
fs
pop
sbb
pop
push
push
fs
inc
push
dec
dec
inc
xchg
inc
adc
inc
out
jb
and
in
nop
jb
add
es
dec
(bad)
fmul
inc
mov
jp
jo
in
cmp
mov
je
jnp
ret
xor
cmp
je
movs
sbb
inc
xor
push
push
dec
or
and
xchg
jmp
and
inc
or
mov
jmp
lods
je
mov
out
mov
repz
nop
retf
lahf
movzx
or
outs
jb
cmp
adc
add
mov
fisub
mov
jmp
outs
ret
adc
mov
jmp
mov
mov
adc
adc
jmp
mov
sbb
popa
or
xchg
push
sbb
bound
push
adc
bound
loopne
adc
fidivr
or
iret
addr16
sbb
ja
mov
push
push
sbb
cmp
dec
add
push
test
dec
popa
jmp
pop
lock
push
popa
cmp
jle
push
pop
inc
loop
sub
jle
mov
mov
fisttp
das
sub
or
or
dec
cmp
inc
addr16
pop
and
repz
and
add
adc
mov
jmp
pop
sbb
or
addr16
push
and
ficomp
mov
xchg
mul
jmp
pop
lock
adc
or
adc
(bad)
daa
adc
sbb
ror
jns
sbb
shl
and
mov
push
push
ret
push
sbb
pop
inc
daa
ss
jmp
xor
jge
js
push
adc
mov
sub
dec
ss
gs
idiv
dec
jae
jne
jge
mov
pop
aaa
and
dec
xor
cmc
pop
cli
cs
pusha
cmp
jb
xchg
or
sub
fiadd
in
and
ret
ins
call
push
icebp
pop
adc
push
lea
lea
mov
mov
or
cld
cmp
ds
jb
push
sub
and
mov
movs
push
repnz
es
and
aas
out
push
push
dec
inc
pop
cmps
sub
dec
sahf
out
ja
add
add
adc
add
iret
cmps
es
jae
sub
js
push
mov
cmps
adc
js
test
aam
sahf
(bad)
adc
jne
sub
mov
adc
jns
push
dec
or
push
dec
or
or
arpl
daa
fld
mov
and
xchg
ja
bound
sbb
adc
dec
sbb
mov
out
pop
dec
add
push
fwait
mov
and
push
shl
mov
shr
jne
adc
dec
dec
jnp
lea
dec
fbld
push
push
push
fisttp
cmps
pop
ja
outs
jne
sbb
sbb
push
ins
popa
jns
jae
push
adc
add
stos
test
adc
movs
jns
add
or
xor
adc
jo
jecxz
xchg
dec
mov
das
inc
dec
inc
push
and
ret
inc
dec
dec
(bad)
dec
jp
nop
mov
jp
add
(bad)
sbb
push
jb
add
push
adc
mov
pusha
prefetchw
or
dec
or
iret
cmp
cld
mov
pop
rcl
mov
les
inc
xchg
and
das
cwde
outs
or
cdq
inc
imul
adc
das
mov
push
imul
sub
or
jnp
add
test
inc
ficomp
shl
test
call
jo
jae
js
imul
xor
or
mov
fs
inc
repnz
out
add
inc
push
fnstenv
xchg
add
push
xchg
add
(bad)
jp
sub
and
sahf
dec
xor
outs
andps
(bad)
or
dec
or
add
unpcklps
fisubr
xor
adc
mov
pcmpeqw
push
jns
enter
js
push
jnp
movs
dec
shl
push
lea
fnstenv
push
ror
jecxz
add
test
ja
pop
dec
xor
sub
fstp
nop
fcomp
dec
push
add
add
dec
inc
mov
call
add
cs
jno
or
fstp
neg
sbb
cwde
inc
xchg
sbb
test
clc
clc
xchg
jle
loopne
and
cmp
mov
jge
xor
and
adc
test
fdiv
rcl
popf
nop
add
movs
sub
inc
sub
cmp
iret
lock
add
dec
clc
mov
ret
rcr
xor
stc
mov
mov
div
outs
das
pusha
sbb
sbb
adc
lea
pop
movs
dec
dec
pop
adc
add
mov
iret
cwde
dec
lahf
dec
push
jl
clc
push
les
or
fs
into
nop
xor
mov
xor
idiv
clc
xlat
rcr
ficom
adc
hlt
in
cdq
inc
hlt
sbb
lods
mov
push
jecxz
mov
test
(bad)
shl
data16
sub
les
data16
jp
movs
jo
adc
(bad)
int3
pop
xchg
mov
dec
icebp
mov
xchg
push
jle
jg
push
and
jb
xchg
nop/reserved
fcom
xor
ret
mov
xchg
sub
jmp
clc
pop
(bad)
retf
dec
repnz
and
add
inc
loope
int3
and
push
adc
or
sahf
test
repnz
sbb
pop
mov
pop
xchg
inc
or
inc
fmul
pop
hlt
sub
inc
jno
je
push
sbb
call
movs
sbb
cmp
hlt
jne
push
(bad)
arpl
jle
adc
lods
xor
cli
mov
add
imul
rcr
in
daa
fist
sub
push
and
jmp
pushf
shl
mov
ins
addr16
sub
inc
adc
sub
adc
rol
adc
xchg
ror
jl
dec
jne
mov
sbb
test
and
in
cmp
je
cmp
jne
cmp
add
into
and
adc
lock
dec
rol
inc
lea
adc
inc
(bad)
xchg
jne
push
std
mov
outs
sar
add
dec
rol
xor
pop
hlt
lsl
loope
es
shl
xchg
imul
sub
pop
push
daa
xor
(bad)
lods
pop
add
shl
lds
fadd
cdq
(bad)
cmp
pop
push
or
push
lds
in
jmp
sbb
jp
push
adc
sbb
inc
ins
jle
add
les
push
and
mov
add
inc
add
inc
push
cmp
rcl
ins
sbb
fcom
mov
aas
test
pusha
dec
mul
and
ficomp
in
dec
int
xchg
inc
outs
lock
loopne
inc
or
loopne
and
mov
sbb
mov
mov
and
lock
add
jns
mov
mov
ja
imul
call
and
xchg
push
add
out
inc
adc
jne
mov
mov
inc
test
and
je
xchg
lock
aad
and
lock
nop
mov
sbb
inc
call
call
dec
rol
repnz
add
xchg
jnp
adc
cmps
and
jno
jno
inc
into
outs
fabs
sbb
or
nop
mov
sbb
into
int3
mov
xchg
je
xchg
add
out
xor
sbb
inc
xchg
mov
inc
pop
stos
in
sahf
xchg
test
or
xchg
in
pop
rcr
dec
sbb
xor
xor
rol
xor
test
and
cmps
add
pop
add
rcl
movs
add
loope
mov
hlt
mov
dec
je
or
sbb
push
movs
jle
fldcw
jmp
adc
jmp
cmp
adc
das
dec
add
or
cmp
add
push
pop
and
mov
ds
(bad)
imul
aaa
aam
push
sbb
mov
jmp
arpl
js
sbb
lahf
loope
adc
inc
es
adc
push
inc
cs
cdq
loop
or
jo
cmp
mov
or
bound
xor
mov
push
pop
iret
inc
mov
fcomp
je
cmp
dec
repz
mov
popa
sub
(bad)
jns
ins
dec
push
pop
pop
or
sbb
mov
cmp
xchg
inc
push
and
inc
pop
ins
sbb
sbb
call
sbb
neg
sbb
push
addr16
leave
ins
fs
dec
jo
xchg
cli
ror
push
add
push
lods
and
outs
pop
mov
sahf
dec
sahf
je
push
sahf
ins
clc
cmp
loopne
jne
cld
xchg
add
pop
(bad)
mov
dec
fs
sahf
data16
sub
sar
jbe
inc
push
adc
cmp
inc
push
pop
push
test
and
nop
cmps
jns
pop
lods
js
and
push
cdq
pop
movs
pop
cwde
ret
es
mov
and
lahf
pop
imul
jmp
pop
and
pop
fcom
out
push
inc
es
sub
pop
jmp
sahf
and
into
inc
cmp
push
and
inc
outs
push
cmp
jnp
ret
inc
das
add
add
pop
stos
lods
add
jae
daa
aad
in
push
leave
add
fmul
fs
xchg
add
popf
outs
inc
aas
pop
test
loopne
push
pop
sub
fnsetpm(287
push
push
push
mov
std
nop
mov
pop
push
add
cwde
mov
push
push
outs
pop
scas
inc
sahf
mov
push
push
xchg
dec
adc
nop
pusha
mov
adc
inc
les
punpckhwd
ret
xor
in
inc
ja
(bad)
int3
sbb
mov
xor
xchg
pop
js
clc
cmps
push
mov
push
inc
jb
(bad)
sbb
mov
add
pop
add
mov
pusha
pop
cmp
aas
xchg
data16
push
rol
jp
adc
mov
mov
mov
aaa
xchg
lock
popf
pusha
sub
jle
(bad)
push
je
sub
sub
sbb
sbb
sub
mov
sahf
pop
pusha
dec
add
push
push
jmp
add
push
adc
mov
xchg
cmps
lea
movs
push
mov
scas
add
iret
jne
pop
pop
xor
sub
xor
sub
out
leave
add
aam
addr16
test
cmp
mov
xchg
lods
(bad)
adc
dec
dec
test
sbb
xor
xor
add
or
imul
test
daa
nop
xchg
cwde
pushf
daa
daa
daa
daa
mov
daa
daa
daa
mov
mov
daa
rol
int3
daa
daa
daa
daa
rcl
fcomp
daa
daa
daa
daa
loopne
call
daa
lock
clc
cld
cmp
add
cmp
cmp
or
adc
cmp
cmp
sbb
and
push
cmp
cmp
xor
jg
cmps
inc
xor
and
test
(bad)
push
xchg
adc
push
dec
jnp
pop
arpl
cmp
aaa
xor
sbb
sub
adc
mov
mov
sbb
add
cmp
mov
nop
aam
jae
iret
xchg
call
stc
sbb
adc
out
movs
inc
test
jns
in
lods
fs
out
sahf
mov
mov
jns
in
mov
inc
sahf
add
rol
push
in
nop
loopne
in
int3
and
cmp
adc
sbb
jae
and
xor
cmp
sbb
jae
in
call
jl
nop
enter
lock
hlt
mov
clc
int3
cld
fadd
jns
or
lahf
add
call
or
adc
and
adc
enter
and
iret
cmp
enter
sub
rol
xor
add
push
seta
ja
xchg
call
pop
ret
jne
je
dec
add
jecxz
ins
movs
inc
not
mov
ins
outs
jae
and
xor
add
sbb
dec
daa
rcr
inc
or
and
dec
pop
cmp
push
in
sar
sub
daa
test
in
inc
shl
js
test
adc
gs
addr16
(bad)
cmp
inc
pop
dec
arpl
xor
xchg
xor
cs
xchg
lea
or
div
jnp
jae
sbb
mov
mov
and
adc
adc
popa
out
or
popa
ja
ret
push
adc
mov
addr16
xor
adc
push
adc
cmps
xchg
xor
pop
xlat
stc
jns
sbb
dec
xor
(bad)
mov
xchg
pop
mov
and
xor
rcr
daa
pusha
add
lods
das
fcomp
fsub
(bad)
xchg
aas
sbb
fist
adc
mov
xchg
ja
and
xchg
or
jns
out
(bad)
mov
nop
jne
ins
mov
or
jbe
pop
fs
inc
bound
xor
push
das
dec
sub
push
pop
cmp
arpl
inc
outs
arpl
xor
sar
jo
fcom
or
outs
pop
pusha
outs
loope
repz
ja
sbb
adc
aam
cmp
add
add
js
pcmpeqb
xor
jne
xchg
push
add
sbb
jmp
jbe
pcmpgtd
jae
imul
out
or
jo
sbb
imul
mov
cmp
repnz
push
jbe
outs
dec
add
(bad)
mov
outs
pushf
pop
mov
dec
cmp
or
xchg
jmp
cmp
mov
pusha
nop
popa
cmpxchg
inc
fstp
inc
cmps
in
pop
adc
mov
or
or
or
enter
xchg
sbb
adc
pop
loopne
outs
add
loopne
sub
pop
div
pop
pusha
mov
ret
lods
mov
imul
add
add
inc
repz
cwde
push
mov
in
pop
push
movs
ins
gs
xchg
or
sub
push
xor
loope
cmp
inc
aas
mov
sbb
fadd
gs
mov
cmp
or
sysret
dec
outs
aam
jo
and
js
push
add
dec
jno
add
inc
xor
push
push
inc
fdiv
and
hlt
jbe
push
scas
pop
inc
adc
push
outs
sbb
adc
push
clc
dec
rcr
stc
ror
inc
and
leave
inc
sar
or
add
sub
add
ret
(bad)
inc
rol
sub
ja
inc
mov
mov
mov
outs
in
arpl
pusha
in
inc
(bad)
nop
cs
ss
shl
adc
out
bound
push
inc
pop
pop
adc
pop
das
lock
inc
ins
mov
mov
pop
adc
daa
in
sub
sbb
push
sar
push
sub
pusha
pusha
inc
dec
popa
dec
xchg
call
ins
aaa
inc
rcr
mov
dec
mov
or
lea
xchg
fstp
mov
rcl
jg
shl
pop
fild
lods
push
xchg
mov
mov
sbb
es
push
dec
adc
sub
cld
mov
inc
mov
inc
inc
cmp
jne
out
sbb
push
pop
sbb
popa
add
lock
push
pop
(bad)
adc
mov
mov
outs
inc
add
pop
scas
int
pop
push
mov
pop
sahf
jmp
in
iret
inc
in
sti
push
std
inc
pop
or
inc
adc
out
inc
out
add
popf
out
adc
enter
push
add
inc
sti
pop
or
jp
inc
mov
pop
call
(bad)
sub
cli
aas
sbb
das
cmp
out
pop
lods
out
sti
cs
outs
fsub
push
pmuludq
clc
mov
pop
pop
add
sub
jnp
mov
sbb
pop
in
jl
enter
popf
pop
mov
data16
and
(bad)
movsx
in
fild
aam
xor
dec
pop
ss
rcr
ins
mov
shl
shl
stc
pop
inc
cmc
(bad)
loopne
cmp
out
pop
test
cs
(bad)
pop
push
cmps
mov
xchg
and
and
and
jae
addr16
and
dec
ds
sub
lock
jae
test
rol
inc
inc
pop
les
mov
push
jp
add
and
test
lea
add
xor
mov
mov
dec
inc
pop
jmp
jbe
outs
push
jns
dec
sbb
xchg
test
jbe
adc
xchg
ins
adc
(bad)
lods
cmp
and
inc
fldenv
les
jns
shl
xchg
ins
mov
movs
aaa
sub
sub
push
add
add
stos
std
sahf
movs
out
inc
pusha
lock
jge
sbb
push
imul
push
cmp
inc
sahf
adc
aas
clc
mov
adc
pusha
pop
lahf
cs
or
icebp
adc
(bad)
rol
imul
xor
inc
dec
pop
out
inc
pop
int
ins
aas
add
mov
inc
inc
popf
jle
mov
mov
movs
adc
pushf
mov
adc
or
and
add
(bad)
dec
or
jno
scas
dec
pop
cmps
push
pop
retf
inc
sbb
push
cmp
push
pop
sbb
movs
test
ins
icebp
mov
and
xor
stc
inc
and
cmc
sub
sbb
rol
push
daa
in
mov
mov
cdq
popa
and
mov
jg
mov
cmp
cld
iret
test
shl
push
lock
rcl
xchg
mov
das
retf
mov
pop
ret
pushf
mov
repnz
fs
movs
test
push
lods
mov
add
mov
and
xor
movs
jns
les
enter
in
push
(bad)
aas
sbb
fdiv
dec
adc
nop
outs
call
and
and
sbb
adc
in
(bad)
fisub
jecxz
jo
ret
dec
sbb
dec
es
adc
adc
add
dec
jnp
pop
mov
pop
or
fld
dec
dec
(bad)
mov
sub
movs
aas
sub
adc
xor
je
mov
pop
push
ja
mov
dec
outs
inc
mov
mov
outs
pop
or
adc
and
pushf
mov
cmps
nop
nop
add
xchg
cwde
pushf
dec
stc
push
jne
add
sahf
pop
call
xchg
jmp
mov
sbb
sub
jo
add
jecxz
addr16
mov
add
push
inc
retf
jo
out
mov
mov
sbb
mov
fmul
add
push
lock
arpl
add
lock
retf
jg
inc
fimul
lods
lock
pop
in
cmp
add
push
sbb
xor
icebp
jecxz
aas
(bad)
fstp
enter
js
repnz
ja
add
mov
loope
jae
into
pop
sbb
loop
sub
push
cmp
add
mov
test
sbb
stc
std
pop
pushf
addr16
xor
jg
icebp
test
arpl
mov
test
lods
mov
inc
xor
das
and
sti
or
nop
and
push
dec
ins
outs
or
pop
loop
imul
mov
or
lods
rol
push
repnz
dec
dec
or
jl
xor
mov
ds
test
lods
out
adc
jp
add
pop
and
mov
or
or
add
inc
inc
mov
xor
adc
cdq
dec
imul
add
sbb
inc
add
pop
ins
rcl
push
rcr
inc
(bad)
nop
idiv
add
inc
(bad)
add
add
fbld
sbb
imul
or
jmp
add
add
or
movs
inc
dec
sti
add
and
test
mov
jo
fidiv
dec
ins
test
mov
pusha
aaa
xchg
sbb
inc
mov
loop
add
dec
mov
nop
fiadd
shl
and
and
pop
adc
dec
xor
sbb
call
movs
push
mov
pop
dec
jnp
lock
mov
xor
xor
sbb
inc
jns
fist
call
push
cmps
add
les
enter
xchg
into
pop
push
dec
xchg
pusha
shl
aaa
pop
cmp
jl
int
xor
xor
or
dec
mov
sbb
cmps
mov
add
add
and
mov
rol
add
aam
lock
pushf
adc
or
sbb
lea
or
mov
ficom
aad
adc
pop
loop
xchg
nop
sub
cmpxchg
cmp
ret
gs
fnsave
popf
cmp
cmp
jo
sti
adc
in
aam
push
pushf
test
enter
cmp
cmp
(bad)
or
ror
and
aad
push
cmp
movs
bound
xor
test
jg
nop
mov
inc
(bad)
adc
sub
mov
(bad)
aaa
and
adc
les
dec
dec
nop
fst
inc
std
fdiv
inc
sbb
add
test
lds
cmp
bound
mov
dec
cmp
rol
pxor
clc
jge
aas
jge
add
adc
and
or
sub
push
dec
leave
mov
scas
xor
mov
addr16
push
clc
mov
mov
mov
je
add
xchg
push
push
movs
ss
outs
in
jnp
sti
and
sbb
or
pusha
movs
adc
sub
(bad)
std
ss
loopne
xchg
stos
mov
pop
das
ins
fs
addr16
push
or
inc
jo
jb
jo
add
adc
jb
cmp
xor
data16
lock
daa
fcmovnbe
cmps
in
push
add
lock
movs
cmp
dec
in
movs
pop
loopne
dec
jae
sbb
test
adc
fs
shl
mov
enter
xor
(bad)
js
loopne
add
or
les
dec
repnz
ins
loopne
data16
or
push
push
dec
mov
sbb
mov
cmp
or
mov
mov
xchg
add
mov
jle
ss
add
mov
inc
dec
adc
popf
adc
in
xchg
push
call
mov
lods
cmp
pusha
pop
nop
push
sahf
push
sub
and
push
lods
inc
iret
pusha
nop
inc
cmp
ret
dec
inc
popf
setno
mov
and
push
jno
xlat
lds
and
jge
sub
add
and
dec
fwait
ja
outs
lock
push
ins
jg
cmp
inc
sub
inc
jle
mov
lahf
(bad)
outs
int3
mov
add
(bad)
fwait
adc
int3
shr
rcl
or
fiadd
sbb
sub
pusha
or
xchg
add
out
mov
pop
add
add
add
fwait
test
pop
test
xor
fmul
lods
jns
mov
loopne
pusha
lods
push
inc
je
loopne
push
movs
inc
jns
fcom
cmp
enter
(bad)
pop
xor
je
mov
or
jmp
push
jp
and
mov
pop
push
rcl
adc
xor
pusha
fwait
push
sbb
push
dec
dec
lock
inc
pop
bound
lea
adc
pop
mov
and
fs
push
or
cmps
jp
ja
xor
mov
pop
shl
ins
jg
sub
mov
shr
ss
dec
ret
pop
pop
(bad)
in
out
push
lock
adc
push
jg
sbb
push
adc
or
cmps
loope
jecxz
jne
out
fidivr
pop
pop
enter
ins
jo
mov
test
cmps
cmp
cdq
test
push
xchg
sbb
xchg
js
cmp
pop
push
je
add
jnp
sbb
int
xor
sahf
enter
or
sbb
inc
imul
lods
or
shl
mov
inc
aad
inc
mov
push
inc
or
push
mov
add
xchg
sub
fisttp
add
mov
push
inc
xlat
fwait
add
push
and
jecxz
in
push
dec
and
fs
call
lock
xor
fsubr
add
push
cmp
popa
push
xlat
nop
and
imul
and
sbb
fnop
shl
ret
xchg
inc
call
div
nop
dec
fcomp
and
or
xchg
loopne
fistp
cmp
es
push
jo
in
jo
sbb
addr16
mov
push
add
fdivr
or
repz
mov
adc
enter
rol
mov
mov
dec
enter
mov
or
addr16
lock
enter
cwde
retf
mov
ins
xchg
pop
sbb
shl
test
xchg
pop
pusha
scas
inc
dec
push
mov
jo
aaa
mov
test
lods
sub
sbb
inc
sub
or
neg
mov
test
mov
pushf
mov
lods
mov
add
add
es
movs
lods
and
fild
inc
cld
push
adc
pusha
add
inc
lahf
add
cmp
inc
add
retf
mov
(bad)
mov
ret
add
xor
imul
add
mov
jle
mov
add
mov
mov
mov
mov
(bad)
mov
inc
(bad)
sub
(bad)
xchg
push
loopne
int3
and
(bad)
jne
add
fs
or
push
and
loopne
jecxz
ins
into
xchg
sub
jl
mov
ret
in
xor
in
pop
loopne
push
inc
sub
jnp
in
popa
xchg
imul
mov
mov
sub
and
aam
jl
xchg
into
add
inc
pop
sbb
xchg
sbb
push
mov
add
rcl
push
or
jbe
pop
ins
dec
or
jmp
adc
cld
adc
out
je
dec
cdq
dec
pop
dec
adc
iret
add
mov
pop
pop
adc
pop
repnz
jl
das
lods
or
dec
imul
pushf
fcomp
mov
adc
sub
loopne
xchg
enter
push
or
nop
and
fwait
mov
jl
inc
pop
jl
mov
fst
sub
xchg
or
sbb
clc
jge
adc
cmovbe
add
push
push
inc
lds
xor
loope
out
add
cwde
in
inc
ins
fiadd
push
cmps
enter
sub
push
push
arpl
das
pop
fadd
test
rol
sbb
ja
dec
arpl
popf
xchg
add
cdq
dec
cmps
sbb
mov
cmp
inc
xchg
push
mov
loopne
push
pop
add
jecxz
push
xor
or
push
jmp
retf
adc
jno
rep
lock
adc
je
fisub
mov
pop
dec
sbb
ret
cmps
pop
sbb
das
sub
jle
ins
push
test
std
jo
movs
in
sbb
fisub
shl
dec
retf
inc
mov
xor
inc
xchg
or
pop
sub
test
sbb
ins
push
out
mov
scas
loop
(bad)
sbb
movs
push
mov
fnstcw
jno
push
xor
cmp
rol
sbb
xchg
cmp
repnz
cs
enter
pop
or
xor
pop
lahf
test
inc
or
push
mov
adc
xor
dec
ror
mov
xor
xor
add
add
ss
sbb
sar
repz
inc
fiadd
enter
or
in
aaa
inc
jns
call
cwde
or
xchg
add
rcl
jecxz
dec
(bad)
fdivrp
ds
dec
nop
and
out
(bad)
dec
cmp
lock
push
fld
dec
lds
pop
pop
pop
daa
inc
sbb
inc
add
xor
push
pop
inc
or
shl
xor
inc
jmp
pop
hlt
or
(bad)
push
loopne
in
call
cli
in
xchg
in
cmp
xchg
or
sbb
pop
jae
fsub
and
fadd
call
and
inc
add
popa
add
jbe
inc
popf
test
mov
or
outs
add
xor
jle
dec
mov
fcomp
push
es
sub
push
mov
push
inc
inc
or
bound
xchg
add
dec
std
or
add
or
add
sar
loopne
fidivr
sub
mov
or
adc
(bad)
and
add
(bad)
cmc
pop
and
inc
scas
fs
dec
inc
mov
xor
dec
fadd
fdiv
xlat
add
mov
and
pop
pop
cmp
or
xchg
mov
xchg
add
es
outs
rol
add
add
lods
jle
or
xchg
jne
adc
fnstcw
xor
jg
cmp
mov
xor
je
ins
jbe
pop
clc
push
adc
ficomp
adc
adc
stc
fstp
sti
push
xor
fwait
cmp
jge
mov
ret
fdivr
fisttp
loopne
dec
sbb
in
mov
mov
add
arpl
push
add
dec
xor
jmp
sub
jle
xchg
pop
and
sbb
push
js
add
(bad)
sbb
sar
xor
sbb
xchg
(bad)
out
cmps
push
cdq
sbb
push
cmp
sbb
call
rcr
inc
push
add
cwde
pusha
imul
repnz
mov
loop
jae
inc
jno
push
cmp
mov
adc
sub
mov
sub
in
jecxz
outs
sub
mov
jo
push
jns
loope
lds
push
mov
pop
(bad)
(bad)
fld
dec
xchg
mov
dec
add
retf
push
jns
inc
mov
or
cmp
imul
and
pop
push
add
add
jmp
adc
pop
ret
xlat
add
cmp
daa
adc
in
imul
mov
inc
rol
aam
fimul
fsub
mov
iret
and
add
lods
aas
out
adc
aad
pop
mov
sub
or
mov
mov
test
push
mov
and
out
je
xchg
jo
in
sub
ds
cmp
setns
adc
pop
shl
sbb
js
nop
xchg
nop
js
jnp
xchg
nop
inc
xchg
imul
cmp
xchg
add
inc
ret
xlat
aaa
sbb
shr
push
xor
pop
dec
inc
mov
ret
js
fadd
popa
aaa
not
inc
inc
sub
fisttp
push
jmp
mov
pop
jo
xor
sub
cli
inc
pusha
pop
dec
jg
xor
sar
nop
fs
leave
dec
jl
adc
retf
dec
jl
mov
shr
sbb
shl
sbb
jno
pushf
mov
inc
nop
mov
pop
inc
push
dec
movs
mov
push
push
ret
jmp
mov
pop
ds
pop
das
mov
out
add
sub
jae
push
in
sbb
push
daa
movs
or
push
scas
inc
cmp
aas
inc
add
xchg
jp
mov
dec
or
inc
xor
and
pusha
jle
mov
icebp
xor
(bad)
pushf
mov
or
cmp
add
call
mov
inc
and
and
sbb
gs
push
js
loop
pusha
dec
xchg
sbb
xor
add
adc
push
retf
aam
loop
addr16
jae
inc
xchg
imul
mul
dec
xor
inc
push
and
fs
pop
pop
adc
pusha
enter
xor
lds
or
jbe
rcr
mov
pop
fpatan
dec
dec
push
out
cmp
sub
std
adc
add
mov
ins
dec
dec
cmp
pusha
push
mov
mov
test
mul
ins
or
shl
ror
pusha
cmp
push
push
(bad)
mov
xchg
add
mov
pop
mov
mov
pop
ins
hlt
and
jno
push
(bad)
les
or
jmp
sub
xchg
lock
adc
inc
adc
cmp
or
mov
call
adc
dec
adc
(bad)
(bad)
add
jg
or
cld
test
sbb
fild
gs
xlat
(bad)
fild
adc
adc
pop
lea
lea
jo
sub
xchg
in
int
sub
pop
lahf
sbb
adc
gs
or
jg
test
mov
dec
push
or
push
add
add
test
dec
mov
dec
inc
sbb
cmp
pop
jecxz
dec
clc
sub
cmp
out
inc
add
imul
cmp
push
adc
lock
inc
mov
fs
xlat
sbb
push
not
cwde
ret
mov
pushf
lea
and
nop
sar
les
sbb
lock
inc
dec
inc
clc
pop
xor
frstor
arpl
movs
xor
push
je
pop
and
mov
sub
push
dec
dec
cld
stc
push
repz
cmp
xchg
sbb
das
mov
push
enter
xchg
xor
add
and
xlat
(bad)
adc
dec
ss
test
mov
es
ins
and
push
push
shl
shl
add
sub
mov
mov
hlt
shl
test
or
les
sub
push
adc
or
fnsetpm(287
mov
mov
jns
lds
into
in
xor
push
mov
fwait
add
mov
xchg
in
lock
aaa
adc
add
push
mov
pushf
pop
cmp
sub
mov
clc
push
pop
xchg
pushf
jnp
neg
movs
adc
xor
lods
jmp
neg
push
ins
push
pop
push
bound
js
dec
mov
fwait
pop
jge
adc
ds
idiv
dec
dec
ins
lea
lea
movs
add
mov
xor
push
jne
and
mov
(bad)
xor
xor
xchg
lock
jl
jnp
imul
adc
call
push
or
inc
sbb
ins
and
jmp
test
dec
arpl
inc
xchg
hlt
in
jnp
mov
inc
xor
and
in
jns
push
push
xchg
sub
mov
fwait
jmp
xchg
sbb
sbb
(bad)
icebp
sub
movs
inc
xor
into
repz
inc
stos
add
out
popa
mov
(bad)
mov
or
push
dec
add
retf
das
add
jno
retf
rcr
inc
push
mov
ins
mul
jmp
sbb
pop
sbb
cmps
rcl
inc
inc
out
fs
(bad)
pop
dec
add
nop
inc
push
sbb
add
push
sbb
pop
push
sbb
or
or
fs
inc
or
push
enter
(bad)
(bad)
icebp
and
hlt
or
cmc
div
clc
or
enter
sti
xor
and
and
and
in
or
enter
call
jmp
and
test
sbb
xchg
cmp
shl
push
rcr
enter
mov
xor
xor
mov
pop
xor
shl
push
or
xor
rol
cmp
dec
shl
push
sbb
inc
or
imul
cmps
imul
imul
dec
shr
lock
dec
shl
test
mov
dec
cwde
enter
mov
xor
dec
shl
dec
shl
dec
js
dec
shl
jo
push
xchg
xor
enter
in
das
lahf
pop
cmp
mov
sub
mov
dec
ret
push
xchg
daa
cmp
and
test
aad
fldcw
and
add
pop
add
xor
ds
punpcklbw
inc
cs
and
and
aaa
(bad)
mov
jbe
push
xor
or
jnp
pop
nop
mov
push
cmp
xchg
or
and
add
(bad)
nop
pop
addr16
mov
aad
data16
daa
lea
add
xchg
xchg
sahf
inc
xor
cmp
les
shl
adc
inc
or
repz
and
or
xchg
sbb
xor
popf
add
or
add
jne
xor
xor
pop
adc
dec
fcomp
and
add
add
and
xchg
inc
daa
imul
into
jo
xor
femms
xor
and
jle
push
dec
rcl
cmps
cmp
push
mov
(bad)
sar
sub
cmc
xor
mov
push
pushf
(bad)
fild
or
in
movzx
push
and
xlat
test
inc
adc
sbb
pop
loope
sub
mov
sub
sub
movs
fimul
xchg
nop
sbb
mov
mov
pop
or
pop
loope
mov
or
xchg
push
cmp
jae
sbb
rol
add
(bad)
test
cli
xor
fcmovu
jle
fiadd
adc
shl
sbb
add
push
stos
out
push
add
or
pop
add
cmp
imul
lahf
inc
dec
mov
xchg
and
fdiv
es
pop
sbb
dec
cmp
fld
pop
fadd
and
fst
or
inc
fnstenv
push
or
fld
ja
add
push
enter
je
in
(bad)
dec
leave
dec
dec
es
retf
ret
dec
enter
in
cmp
in
rcr
leave
dec
ins
retf
in
(bad)
or
jb
fidiv
and
dec
sbb
cmp
push
and
cld
add
sub
movs
stos
adc
fcmovbe
imul
adc
adc
xchg
adc
sbb
pop
xor
sbb
adc
add
or
cdq
fild
inc
xor
outs
es
push
xor
cmps
dec
dec
out
mov
mov
xchg
xchg
movs
sub
ret
sbb
xchg
bound
ins
pop
rep
cmp
add
or
call
mov
daa
outs
addr16
or
push
mov
dec
add
sbb
add
adc
fisttp
test
inc
pop
cmp
(bad)
div
out
xor
fnsave
pop
js
sub
fstp
mov
pop
in
das
fisub
push
mov
push
in
pop
scas
or
push
add
inc
fimul
and
mov
and
mov
xchg
xchg
cwde
cmp
out
mov
mov
retf
adc
or
ret
repnz
mov
mov
push
outs
int3
call
pop
int3
sub
pushf
mov
les
pop
dec
jae
cmp
push
int
ss
and
or
fidiv
fisub
jne
mov
mov
push
lahf
outs
fidivr
sbb
or
and
rcl
enter
adc
in
scas
mov
push
or
enter
sub
lock
add
das
fistp
xor
dec
lock
mov
add
cmp
inc
adc
mov
movs
jns
xchg
ja
adc
pushw
mov
push
pop
jmp
loopne
sbb
or
je
fild
add
xchg
movs
adc
cmp
sar
push
push
adc
jle
dec
adc
sbb
add
sbb
mov
arpl
add
adc
fstp
test
fsubrp
adc
add
jmp
add
xchg
adc
cmp
adc
aas
sub
or
movs
cmp
scas
or
outs
stc
push
mov
int3
mov
data16
pop
dec
cmp
push
punpckhbw
(bad)
adc
inc
mov
add
dec
or
xchg
in
sbb
or
inc
pop
push
mov
dec
ds
ins
mov
ss
fwait
popa
cmp
pop
ret
adc
aaa
add
push
jmp
adc
adc
adc
jo
loop
call
call
(bad)
shr
adc
add
push
sbb
xor
fld
xchg
jb
sub
cwde
loopne
repnz
inc
test
or
xchg
or
ret
lock
and
jge
push
xchg
jp
xchg
nop
push
pop
sbb
loop
push
and
inc
xlat
hlt
xor
in
cdq
test
pop
leave
test
daa
mov
hlt
dec
sbb
add
scas
push
repnz
cmp
jle
sbb
hlt
jo
adc
inc
(bad)
jmp
jbe
dec
xchg
ins
pop
add
add
xor
lods
outs
mov
fdiv
jbe
inc
cmp
push
div
add
(bad)
and
fs
mov
ret
fwait
mov
push
mov
(bad)
les
or
movs
xor
mov
push
lock
sub
or
aaa
fimul
jnp
leave
or
arpl
(bad)
in
and
shl
fcom
mov
or
out
sbb
pop
enter
int3
inc
jo
mov
mov
or
fcomp
pop
sar
jns
xor
(bad)
shl
fidiv
and
adc
gs
push
cdq
mov
out
lds
dec
mov
loope
cmc
adc
les
jecxz
imul
push
and
pop
inc
ja
sbb
and
sbb
push
imul
popf
pop
or
sbb
push
cmps
inc
mov
fnsave
loope
jo
pop
pop
aas
inc
lahf
add
jecxz
add
pop
dec
xchg
ja
or
push
push
xchg
and
aam
clc
test
ins
add
call
or
hlt
fadd
pop
adc
ffree
fadd
pop
and
enter
cmp
ret
mov
out
(bad)
rol
call
pusha
(bad)
and
and
loopne
inc
pop
sbb
add
dec
mov
das
push
xchg
jmp
or
or
xor
push
shl
push
xlat
pop
pop
and
xlat
sub
cwde
xor
daa
sub
sub
cmp
sub
pop
push
add
leave
adc
fwait
inc
loopne
out
cmc
test
pop
push
test
xchg
es
fcmovnu
pop
test
pushf
or
mov
xor
jno
cmp
mov
loope
dec
in
sbb
or
add
rcr
pop
push
movs
jo
neg
sub
xor
jmp
and
pop
push
ja
arpl
xlat
lock
sub
rcl
xlat
scas
mov
inc
call
sbb
push
and
test
sub
mov
mov
jmp
data16
mov
les
outs
xor
mov
pop
(bad)
shl
jne
push
dec
pop
mov
mov
ja
or
(bad)
ret
and
ret
dec
enter
fcomp
sbb
adc
adc
fiadd
ret
out
sub
int3
pop
jmp
and
pop
push
inc
and
repnz
jmp
jnp
sub
and
out
popa
push
ret
(bad)
mov
daa
cmps
and
cwde
sbb
and
pop
retf
fadd
(bad)
adc
push
outs
adc
sti
pop
ins
add
xor
mov
adc
out
jg
fist
test
popf
movs
add
jne
cmp
mov
mov
dec
jnp
or
xchg
and
fcomip
fstp
in
xchg
pop
adc
aaa
mov
dec
shr
leave
pop
adc
sub
jge
dec
pusha
pushf
push
fstp
jns
fsubr
add
clc
xchg
movs
and
loop
test
push
cmc
pop
(bad)
out
jle
add
xchg
dec
les
or
shr
mov
sub
hlt
pop
jo
mov
leave
mov
fisttp
add
stos
push
inc
push
ss
test
fild
rcl
pop
and
jo
and
out
xchg
lock
in
or
mov
mov
cmp
jns
sub
pusha
pushf
fcmovne
pop
or
adc
loope
push
sbb
mov
adc
push
std
pop
mov
or
inc
and
xchg
shl
mov
jmp
ret
out
push
shl
cmp
dec
mov
mov
pusha
xchg
cmp
xor
push
call
push
inc
scas
pop
mov
mov
dec
sar
inc
inc
cmp
mov
cmp
out
jo
cdq
in
hlt
hlt
adc
imul
or
dec
popf
test
bound
int3
shl
add
(bad)
cmp
(bad)
dec
loop
dec
xor
mov
mov
shl
add
and
rcl
adc
fsubr
pop
pop
ficom
std
adc
pop
fs
enter
out
(bad)
out
in
test
daa
push
clc
adc
add
ss
pusha
ret
loope
push
xchg
jecxz
mov
cld
pusha
pop
pop
(bad)
out
or
ret
dec
push
mov
clc
add
bound
lahf
lods
xlat
outs
sbb
inc
icebp
fst
pop
hlt
xchg
mov
push
sub
adc
shl
popa
mov
xor
(bad)
pop
dec
jmp
out
icebp
hlt
dec
cmp
pop
test
pop
lds
lods
icebp
hlt
sbb
mov
hlt
jle
cmp
or
push
dec
xlat
pop
push
adc
sbb
xbegin
push
(bad)
enter
push
or
add
inc
adc
and
sbb
scas
clc
scas
jo
out
add
sbb
adc
add
add
xchg
add
sub
scas
test
pusha
jl
mov
dec
adc
clc
outs
or
xchg
adc
(bad)
(bad)
cmps
inc
xchg
push
test
or
adc
scas
jae
and
push
dec
popa
and
ss
pop
sub
cmp
je
sbb
(bad)
push
sbb
jne
lods
xchg
xchg
jo
push
sbb
lods
mov
inc
add
pop
or
or
push
(bad)
cmps
rol
bound
aam
daa
adc
xor
hlt
or
dec
mov
adc
daa
adc
xchg
or
cld
mov
lock
cmp
lock
nop
inc
dec
pusha
iret
xor
xor
add
stos
add
aas
pusha
sbb
shl
dec
pop
div
push
push
loopne
dec
or
in
xor
lods
gs
daa
sub
lahf
adc
and
and
xor
out
xor
imul
fadd
fbld
or
add
outs
scas
sbb
and
imul
gs
adc
outs
pop
js
arpl
add
pop
fist
es
jb
jb
popa
or
push
add
data16
sahf
popf
addr16
daa
ja
imul
in
fcmove
mov
pop
addr16
jb
addr16
imul
mov
daa
push
jg
or
or
jbe
jnp
loop
sbb
and
pop
loope
jnp
jns
mov
cmp
pop
je
jo
jb
mov
ins
dec
arpl
jns
outs
dec
pushw
push
cmp
das
add
ja
xor
iret
push
imul
push
and
aam
or
cmp
add
and
jle
adc
jecxz
cmp
and
loopne
fidivr
add
in
(bad)
in
lock
ins
jmp
pop
sub
cmp
ss
int
daa
adc
and
sti
and
dec
and
adc
mov
ds
scas
mov
dec
mov
adc
xchg
cmp
js
push
or
sub
push
xchg
xchg
ins
push
push
out
mov
vpmacssdd
jg
out
outs
mov
sbb
pop
retf
push
mov
mov
ffreep
dec
iret
xor
icebp
movs
jbe
arpl
repnz
mov
and
iret
movs
ficom
dec
or
xchg
sub
inc
sbb
loope
mov
cmps
sub
dec
rcl
retf
imul
xor
popf
fist
pop
or
cmps
add
add
cmp
mov
mov
pop
add
imul
mov
or
loope
mov
fs
sbb
ds
lods
mov
outs
or
add
add
retf
mov
add
push
pop
pop
or
or
or
or
xor
repz
or
dec
shl
push
pop
xor
shl
sbb
sbb
sub
fistp
and
and
pusha
cld
imul
call
dec
pop
ins
imul
ins
call
push
dec
shl
imul
xor
sahf
scas
rcl
xor
dec
sbb
sub
dec
shl
inc
push
xchg
mov
and
fwait
add
and
or
repnz
or
cmp
adc
or
xor
push
or
iret
cmp
sbb
sbb
enter
push
or
and
and
xor
iret
movaps
sub
add
or
xor
xor
and
adc
adc
repnz
cmp
inc
push
and
cmp
dec
repnz
xor
dec
sbb
cmp
push
sbb
enter
pop
sbb
xor
sbb
popa
imul
bound
arpl
and
gs
sahf
cmps
jns
and
adc
jns
jns
and
shl
dec
dec
push
sbb
adc
add
js
bound
xor
pop
dec
stos
fdivr
scas
and
mov
inc
cwde
jecxz
std
mov
lea
retf
pop
dec
pop
sti
sbb
test
ins
je
or
pop
push
fdiv
add
fsubr
add
fsub
sbb
rcr
inc
adc
int3
rol
jnp
mov
bound
popa
test
ins
add
push
loopne
push
xchg
ja
or
dec
bound
fdivr
int3
add
test
daa
pusha
mov
pushf
and
aaa
fidivr
xchg
push
mov
lahf
mov
jae
mov
mov
cdq
fs
jbe
jle
(bad)
sbb
dec
pop
mov
or
adc
push
fnstsw
ds
pop
sbb
dec
xchg
cmp
push
mov
jns
jne
popa
frstor
je
(bad)
test
outs
jmp
mov
shr
mov
(bad)
nop
aam
add
fidiv
push
pop
repnz
test
mov
mov
cmps
sub
int3
pop
cmps
out
inc
enter
pushf
adc
sbb
inc
xchg
adc
adc
adc
(bad)
push
retf
cmps
(bad)
adc
mov
repz
sub
xchg
les
dec
aam
push
push
pop
sub
jbe
xchg
or
add
jne
fnsave
add
sbb
mov
or
jp
fadd
add
push
push
stc
nop
scas
pop
sbb
ret
inc
out
xor
daa
and
inc
inc
xchg
ins
sbb
dec
icebp
test
fcom
and
pop
pop
inc
lods
mov
or
mov
mov
adc
adc
jmp
and
out
or
add
dec
cmps
xchg
test
aam
jmp
add
inc
cmp
adc
or
inc
sub
push
inc
dec
sbb
add
inc
add
inc
push
sbb
sbb
sbb
sbb
push
add
data16
adc
lods
dec
enter
clc
push
mov
jnp
pop
lods
add
outs
cmp
add
mov
and
test
or
mov
fnstenv
add
std
add
dec
dec
and
add
add
es
sub
add
sub
mov
sub
nop
add
dec
push
mov
inc
lahf
cmp
sub
xchg
or
js
dec
gs
jbe
nop
and
inc
xor
lods
push
inc
sbb
popa
mov
and
mov
ds
enter
daa
inc
adc
bswap
imul
push
push
outs
ins
fs
inc
sub
ins
ds
iret
lods
imul
push
mov
mov
push
hlt
and
aas
adc
aas
push
call
pop
dec
xor
sbb
mov
lods
in
cs
enter
inc
jne
adc
jno
ror
mov
or
pop
push
jb
dec
and
lods
or
push
inc
test
and
or
adc
xor
mov
inc
sbb
ret
inc
imul
sub
xor
add
ins
in
dec
jmp
adc
fcos
lods
sbb
push
fcom
lods
inc
sbb
mov
pop
sub
or
das
xchg
out
or
add
rcl
out
pop
in
and
pop
sbb
pop
jo
repnz
sbb
inc
or
add
retf
pop
mov
mov
enter
dec
sbb
int3
les
dec
sbb
and
pop
in
inc
popa
push
xchg
pop
push
rcr
(bad)
sbb
add
loope
push
pop
mov
cli
(bad)
fsubr
jmp
push
xor
mov
add
and
retf
pop
add
bound
je
mov
xchg
cmpps
bound
adc
dec
ja
jns
sbb
(bad)
sbb
sub
adc
add
adc
les
push
sub
push
or
add
pop
cmc
jae
imul
test
sbb
xchg
and
sbb
inc
and
push
xchg
mov
or
jb
or
and
inc
add
and
xchg
stos
fs
cmp
hlt
pop
enter
xchg
fadd
sbb
ret
cmp
ss
xor
loopne
cmps
adc
push
jo
pop
push
dec
(bad)
dec
call
into
dec
push
jo
sub
add
add
bound
das
or
das
sbb
jp
pop
sub
inc
addr16
xchg
sbb
jo
pop
movs
je
pop
adc
(bad)
gs
and
or
and
shl
push
add
push
sbb
loop
icebp
jb
mov
fist
shr
sbb
sti
or
dec
es
push
pusha
lahf
es
jne
cwde
test
ret
push
cmps
sbb
jne
or
or
dec
lock
add
dec
or
push
push
xchg
push
or
push
dec
iret
adc
mov
and
sub
ja
cmp
mov
and
or
add
or
repz
jmp
sub
inc
push
or
sub
sbb
push
pop
sub
movs
test
push
ins
aam
and
mov
mov
cmp
inc
mov
or
mov
ins
call
pop
push
or
clc
jae
ins
adc
iret
or
add
pop
add
dec
sub
scas
jmp
sub
dec
ins
sbb
cs
xchg
push
into
add
fbld
out
adc
cmp
mov
adc
jmp
or
ror
popa
inc
pop
xchg
push
sbb
push
into
daa
or
jl
inc
adc
rdmsr
stc
leave
jno
bound
imul
loope
mov
jns
xor
adc
adc
xchg
cmp
dec
imul
or
repz
adc
jmp
add
cmp
jne
sub
pop
pop
or
nop
mov
mov
adc
dec
les
test
xor
sbb
cmp
pop
sar
pusha
and
inc
cmp
outs
cmps
enter
mov
adc
(bad)
or
scas
iret
mov
or
sbb
sbb
out
xchg
cmp
cvtps2pd
mov
repz
cmps
add
pusha
dec
imul
mov
xchg
mov
or
mov
push
das
jge
add
inc
das
push
mov
and
mov
inc
hlt
and
cmp
(bad)
push
test
adc
adc
jl
add
frstor
mov
adc
(bad)
mov
fnstsw
push
sahf
dec
push
mov
and
cmp
dec
add
jo
inc
mov
xor
mov
enter
sub
add
cwde
pop
retf
loope
add
inc
xor
jp
dec
push
inc
inc
pop
hlt
ss
pop
cmp
outs
push
fnstcw
das
dec
and
push
shr
mov
mov
push
fcomp
sbb
cwde
mov
mov
call
call
adc
mov
mov
adc
imul
(bad)
adc
push
imul
mov
pop
jl
xchg
aas
pop
sub
mov
adc
ins
mov
inc
jmp
or
inc
cmp
pop
xor
mov
dec
adc
daa
add
inc
dec
push
jns
add
fidivr
and
xchg
inc
lods
pop
and
(bad)
retf
dec
arpl
shl
addr16
cmp
inc
adc
call
jmp
pop
mov
dec
mov
pop
popa
or
pop
(bad)
gs
(bad)
mov
and
nop
cmp
or
or
fs
dec
or
loop
lds
leave
and
scas
dec
sbb
push
or
push
aam
rcr
push
xchg
aam
mov
test
imul
outs
out
fimul
fwait
cmp
sub
mov
mov
xlat
or
and
das
cld
cmp
mov
test
cmp
adc
xor
adc
inc
aad
mov
or
movs
cmc
sbb
rcl
cmp
inc
push
push
push
dec
dec
fstp
mov
mov
jbe
push
sub
inc
xchg
in
jmp
xor
or
mov
jne
aas
pop
sbb
xor
adc
inc
cmp
stos
adc
or
jbe
stos
lods
jmp
lea
(bad)
das
enter
jne
rol
mov
sub
(bad)
aad
or
arpl
xchg
mov
cmp
frstor
jmp
jnp
sub
pop
in
add
jg
lods
call
adc
cmps
pop
aas
movs
ret
pop
push
push
sbb
and
cmp
ret
sbb
int3
shl
data16
sbb
or
push
pushf
outs
push
push
and
jl
int3
sbb
add
push
xchg
cmp
mov
inc
inc
pop
dec
inc
mov
scas
xchg
loopne
jns
nop
cmp
inc
pop
pop
xchg
inc
or
push
inc
pop
pop
ss
and
aam
dec
add
inc
rcl
int3
mov
popa
inc
gs
ja
mov
or
jb
and
dec
daa
adc
fidivr
and
cmp
adc
adc
aas
sbb
sahf
cmp
in
fsubr
adc
jbe
nop
inc
or
adc
jne
cld
jp
rcl
int3
mov
call
imul
imul
dec
push
pop
popa
inc
push
aaa
shr
and
xchg
mov
mov
pop
inc
push
pop
add
and
dec
and
pop
sub
adc
sbb
and
cmp
and
pusha
loop
dec
jae
pop
inc
cmp
xchg
test
dec
adc
ror
add
popa
bnd
sbb
mov
add
push
cmp
outs
dec
mov
and
dec
sbb
clc
push
lods
sbb
call
adc
inc
inc
mov
pop
das
sbb
out
pusha
adc
loopne
push
popa
adc
pcmpeqw
fiadd
xor
xor
fistp
loope
pusha
addr16
and
test
or
add
loopne
mov
adc
mov
adc
rol
repnz
pop
and
cmp
pop
jg
cmc
sbb
jns
jmp
mov
sbb
cmps
fisttp
mov
and
or
cmp
mul
mov
popa
sbb
scas
cmp
dec
mov
cmp
dec
dec
lds
repnz
and
lock
mov
inc
clc
push
adc
popa
loop
and
aam
add
dec
or
imul
cmps
test
mov
pop
in
adc
popa
dec
addr16
and
push
mov
dec
adc
mov
fmul
mov
or
in
in
sbb
dec
mov
test
in
rcr
ret
pop
gs
addr16
mov
pop
jl
lahf
xchg
adc
xor
add
xchg
frstor
add
clc
stc
or
mov
xchg
call
dec
pop
jecxz
aaa
imul
dec
sub
sub
and
sub
push
pop
sbb
cmp
(bad)
and
imul
sub
and
xor
add
cmps
cmc
das
sub
or
jbe
mov
std
dec
add
in
call
xchg
jnp
arpl
mov
cmps
cmps
jg
xchg
arpl
mov
mov
test
(bad)
xlat
adc
test
sbb
or
and
repz
and
mov
cmp
ins
sub
shl
mov
mov
mul
sub
inc
mov
cmp
pop
fst
sbb
lods
(bad)
stc
xchg
cmp
adc
dec
jne
jo
and
adc
inc
jmp
push
mov
inc
push
jb
and
or
push
or
adc
xor
adc
test
test
mov
and
addr16
xchg
daa
sbb
inc
mov
cmp
xor
pop
and
push
(bad)
iret
jge
cmp
mov
sub
mov
xchg
push
sbb
out
xlat
inc
cmp
je
or
je
xor
inc
pusha
sub
sbb
adc
cmp
cmp
pushf
mov
pop
inc
cli
inc
lock
jb
and
mov
sub
add
clc
jbe
adc
sub
xor
fild
call
aad
push
add
out
adc
pop
sub
add
sub
mov
push
mov
push
push
and
sti
jg
mov
dec
inc
dec
push
add
pop
mov
push
xchg
ror
aaa
icebp
inc
and
xor
aaa
test
mov
mov
or
or
or
pop
rcl
inc
add
mov
test
or
sub
pop
add
xor
pop
adc
sub
sub
ins
das
xchg
ins
add
jp
aam
sti
jmp
add
lds
cmp
mov
mov
stos
ret
adc
mov
das
push
aaa
jmp
add
push
pop
mov
or
test
psubusb
lahf
or
dec
pop
adc
sbb
dec
js
fidivr
call
fwait
or
sbb
adc
fs
mov
popf
dec
mov
mov
add
cmp
jp
jmp
add
rol
add
pop
scas
adc
cmps
mov
and
in
inc
or
sub
jb
xor
repnz
adc
outs
fidiv
add
enter
or
and
push
fistp
push
or
pxor
lock
sub
lahf
ins
add
ficomp
or
adc
aaa
jmp
nop
sar
mov
sub
test
pop
(bad)
and
adc
test
xchg
and
dec
cs
add
(bad)
ins
inc
pusha
sub
mov
push
popa
jl
aas
pusha
push
popa
mov
add
dec
jns
imul
mov
shr
inc
jae
sahf
mov
outs
adc
adc
out
xchg
jae
xor
bsf
test
pop
ds
push
push
adc
sub
push
fidiv
jo
pop
mov
push
pop
int3
pop
imul
push
xor
xchg
call
and
ins
or
sbb
and
xor
popa
cmp
fadd
sub
nop
push
add
loopne
rcr
xchg
mov
fs
push
or
xchg
test
inc
inc
(bad)
and
pop
cmp
sbb
sbb
pushf
sub
enter
add
mov
adc
sub
mov
push
pop
push
adc
js
jg
sub
enter
sub
push
push
jb
jb
inc
call
pop
hlt
jo
add
aaa
loopne
mov
xchg
push
adc
imul
inc
jl
xor
push
fs
mov
cmp
dec
jno
cs
sub
mov
inc
jl
xchg
cs
sub
test
adc
test
shl
das
inc
pop
sbb
sbb
xchg
loopne
mov
cmp
xchg
or
cs
push
sbb
mov
mov
push
sbb
fiadd
and
xchg
xor
in
test
aaa
inc
lods
imul
ds
add
sbb
pop
sbb
inc
jb
ins
adc
add
dec
jbe
in
mov
(bad)
imul
push
xchg
jo
jo
push
pextrw
cmp
jle
test
inc
or
(bad)
or
jne
xor
ja
adc
pop
imul
or
les
xor
mov
enter
adc
dec
adc
pand
and
movups
push
fs
xor
popf
imul
nop
dec
add
sub
add
add
add
pusha
or
push
and
mov
fnstsw
add
inc
add
sbb
imul
mov
pop
or
sbb
int3
push
xchg
cld
pop
fcmovb
icebp
or
mul
aad
stos
sbb
(bad)
jle
in
les
cwde
imul
imul
dec
mov
xchg
cwde
push
movs
adc
xor
adc
enter
pushf
add
cmc
js
add
or
push
enter
or
mov
mov
or
test
leave
mov
jbe
xor
xchg
and
dec
cs
js
and
cwde
inc
jecxz
retf
pop
dec
xchg
or
adc
mov
les
xchg
inc
lea
out
loop
dec
xchg
out
(bad)
sub
add
xor
add
pop
jnp
mov
ja
add
add
add
in
add
jo
xchg
stos
push
push
nop
fild
add
jp
unpckhps
or
xor
mov
mov
push
inc
or
das
es
popf
add
cmp
fs
add
xchg
push
sbb
ret
push
adc
nop
sub
setno
test
lea
inc
or
mov
cmps
out
mov
or
inc
jl
mov
mov
or
and
lock
and
or
in
mov
leave
add
or
and
je
add
iret
out
push
or
inc
not
ret
sub
add
and
nop
add
jle
adc
out
jns
gs
mov
fisubr
add
pop
cmp
(bad)
aam
or
jno
paddusb
clc
sahf
inc
push
nop
mov
adc
cmp
or
adc
imul
arpl
sub
or
adc
retf
cmps
add
mov
and
loope
ret
sbb
inc
je
push
or
mov
ss
xchg
out
mov
dec
fmul
and
ins
mov
xchg
scas
out
and
in
adc
add
ror
adc
gs
int
inc
cmps
imul
sub
jns
fs
push
test
test
es
enter
retf
sub
test
pusha
cmp
(bad)
jmp
cmp
and
test
inc
mov
xor
call
jo
ja
mov
push
pop
add
add
sahf
lahf
push
push
pop
sbb
mov
daa
inc
sub
iret
inc
test
ja
psubsw
stos
ror
mov
jae
pop
add
add
add
sub
add
add
or
or
(bad)
push
and
sbb
cmp
inc
(bad)
inc
mov
fsubrp
(bad)
in
(bad)
jmp
jmp
dec
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
(bad)
fdivrp
(bad)
fdivr
(bad)
fiadd
call
call
call
call
call
call
call
call
dec
js
mov
int
int3
dec
dec
icebp
dec
stc
mov
xchg
or
(bad)
mov
jl
push
push
movs
push
cld
in
(bad)
push
pushf
hlt
xor
cs
cmps
pop
ss
or
adc
cdq
dec
imul
cwde
lahf
jo
push
pop
mov
pop
nop
ss
call
mov
les
fwait
mov
fadd
fcmovne
in
xchg
clc
mov
or
mov
pusha
js
mov
mov
mov
test
xchg
outs
mov
xor
dec
inc
pushf
sub
mov
(bad)
adc
int3
xchg
xchg
dec
jl
(bad)
mov
pop
test
dec
jg
mov
je
add
cmp
add
cmp
pop
test
nop
sub
sbb
xor
add
fdiv
nop
xor
lea
cmp
cld
ss
(bad)
rol
mov
je
add
inc
add
add
dec
add
sbb
dec
jecxz
push
add
outs
mov
aas
inc
mov
mov
xor
jecxz
xchg
or
sub
or
xor
push
mov
mov
push
and
push
sub
cs
out
nop
pop
dec
in
les
mov
jg
aas
push
leave
das
enter
das
sub
dec
les
test
jg
sar
les
aas
pop
dec
push
rcl
xchg
fst
(bad)
mov
nop
mov
jo
ins
xchg
fild
sbb
jbe
or
mov
adc
imul
popa
push
ja
inc
cmp
fnsave
and
add
inc
inc
aaa
jns
sbb
in
jge
mov
outs
xlat
call
inc
sbb
stc
or
daa
pushf
cmp
daa
add
inc
enter
mov
push
sbb
call
imul
ret
jge
add
stos
or
mov
sub
xlat
inc
xchg
xchg
adc
and
add
fist
hlt
pop
sub
add
add
pop
mov
add
sbb
mov
or
add
mov
mov
cmp
pop
clc
jg
lock
sbb
sbb
inc
pop
pop
and
and
mov
mov
mov
sbb
push
mov
xor
cmp
clc
mov
call
inc
inc
inc
inc
inc
inc
outs
std
(bad)
mov
pop
ret
mov
inc
mov
mov
mov
mov
lds
xor
sar
fdivr
ins
call
mov
leave
ins
call
push
shr
pushf
aam
aad
xchg
lods
imul
imul
imul
js
into
dec
cmp
(bad)
test
inc
fild
nop
movs
cmps
imul
fsub
call
pop
push
nop
push
or
mov
call
ds
mov
xor
pop
push
push
fisttp
aam
fld
cmps
push
in
or
lock
fst
push
in
dec
dec
in
mov
retf
mov
repz
push
mov
or
pop
shr
mov
cs
in
fbld
es
(bad)
mov
push
jo
lods
das
dec
fld
cmps
push
add
push
xchg
jmp
mov
xor
aam
aas
lods
fdiv
mov
ins
fisub
addr16
nop
shr
aad
adc
arpl
int3
or
aad
add
js
mov
pop
sti
add
push
cmps
push
jno
sub
and
push
and
push
test
add
icebp
sbb
mov
adc
jo
adc
cwde
inc
test
push
ins
inc
pop
push
adc
adc
sub
jo
or
(bad)
pop
mov
cmp
add
cs
fiadd
mov
aas
ds
sub
or
adc
xor
xchg
mov
movs
sub
out
push
pop
add
int3
imul
stc
or
mov
test
clc
pop
and
stc
aas
rcr
push
mov
add
adc
pop
add
mov
pop
popa
loop
mov
ds
xchg
and
pusha
xor
test
int3
xchg
ja
cs
cmp
scas
ja
stc
or
add
fs
jo
in
cmp
or
or
inc
push
in
adc
mov
sbb
add
loopne
xchg
mov
clc
cmps
add
or
dec
shl
xchg
mov
shl
(bad)
jecxz
dec
mov
inc
sbb
xchg
push
push
push
add
cmps
push
int
js
sbb
lahf
in
pop
mov
push
call
mov
fnstsw
pop
das
in
push
pop
pushf
sbb
pop
or
xchg
jl
inc
out
push
jno
in
sbb
mov
shr
scas
push
fisttp
adc
pop
fs
cmp
pop
cld
fdivr
xor
mov
nop
cmp
sbb
mov
enter
ret
and
arpl
push
and
sub
and
cwde
std
iret
add
nop
dec
inc
add
or
add
or
adc
mov
adc
xchg
pop
push
push
lock
inc
adc
xlat
push
lock
and
mov
rcl
mov
pop
je
test
scas
mov
dec
jne
bound
push
ins
pop
or
add
sbb
jne
sub
hlt
cmp
or
cwde
xor
inc
pop
call
ficomp
outs
adc
add
cwde
cwde
pop
push
or
add
jmp
es
pop
daa
add
dec
sub
pop
add
mul
rcr
dec
inc
or
pop
or
(bad)
add
in
xchg
mov
add
xchg
cmp
push
inc
push
inc
daa
sbb
add
or
and
or
push
add
add
xchg
dec
outs
and
fimul
push
jo
imul
mov
btc
cmp
add
add
dec
xor
adc
es
pop
push
adc
jle
frstor
dec
adc
imul
cli
and
sti
adc
or
loop
sbb
jmp
inc
retf
dec
mov
nop
sub
(bad)
and
push
xchg
pop
or
lea
push
ins
add
cli
test
pop
inc
mov
cmp
adc
or
jne
mov
and
clc
add
adc
xor
and
adc
stc
sbb
sbb
and
dec
add
sub
ja
dec
inc
ret
add
jo
cs
and
sbb
dec
loopne
ss
movs
inc
adc
sti
adc
mov
or
add
cmp
jl
je
pop
ins
out
idiv
mov
mov
add
(bad)
imul
les
pusha
popa
fadd
retf
push
jne
adc
push
add
frstor
mov
loopne
xchg
mov
cmp
and
mov
dec
inc
mov
jo
fidiv
pop
sbb
mov
or
sub
call
je
call
dec
jne
pop
das
inc
push
push
cmp
cmp
add
xor
loope
in
sub
or
nop
push
or
push
dec
sub
add
or
cmp
sub
xor
or
mov
retf
mov
adc
sbb
mov
retf
sbb
and
sub
shl
push
push
push
dec
or
mov
mov
loope
sahf
wbinvd
and
pop
fidivr
(bad)
pushf
daa
movs
pusha
(bad)
pusha
inc
call
cmp
je
sub
adc
inc
or
je
mov
mov
mov
ja
mov
mov
xchg
fst
sub
mov
inc
cmp
and
add
push
stos
dec
mov
adc
sahf
mov
adc
mov
sub
add
lods
(bad)
adc
or
lds
push
and
or
out
dec
sub
pop
pop
cmp
pop
mov
daa
imul
push
shl
(bad)
jmp
or
call
es
sub
or
es
xchg
(bad)
and
or
dec
add
push
jb
pusha
and
cld
mov
add
sub
mov
inc
xor
loope
inc
xchg
add
or
inc
cmp
ja
mov
lea
fisttp
and
adc
shl
fbld
enter
cmp
scas
mov
push
inc
push
xchg
mov
mov
fisttp
sub
sbb
retf
push
push
aas
inc
daa
mov
inc
pusha
adc
cs
mov
dec
fs
and
fcom
test
and
ret
sub
inc
pop
adc
test
std
add
mov
imul
in
ins
ins
push
mov
inc
xchg
ss
push
pop
pop
push
push
stos
and
sbb
sub
inc
scas
popa
in
ins
xchg
ret
in
sahf
add
adc
add
adc
cmps
push
xchg
add
jp
mov
retf
adc
in
jge
jecxz
movntps
movs
mov
popa
arpl
dec
or
adc
rol
or
pop
jp
mov
inc
dec
rol
scas
lea
call
cmp
dec
mov
push
out
enter
jp
sti
cmp
dec
dec
(bad)
adc
inc
call
and
push
add
add
ja
sar
jb
xor
mov
adc
jmp
cmp
jne
inc
ret
inc
inc
dec
fisub
push
and
les
imul
dec
sub
cwde
(bad)
sub
mov
inc
lods
cli
or
sub
sbb
nop
ret
pop
pop
lods
sar
sub
repz
or
fld
jge
cmp
pop
xor
pop
popf
mov
test
pop
in
mov
sub
or
and
sub
inc
out
xor
push
jo
or
mov
and
fadd
xor
sar
and
adc
sbb
mov
cmp
xchg
dec
les
mov
pop
rcr
add
mov
mov
sbb
fiadd
dec
or
adc
push
add
cs
inc
mov
add
add
retf
jno
stos
pop
or
pop
movs
mov
add
dec
adc
test
jmp
adc
test
les
sbb
test
push
or
mov
jecxz
add
mov
iret
test
mov
cmc
inc
jp
jne
imul
ss
xchg
adc
pop
pop
mov
or
jo
cmp
lock
(bad)
xor
xor
pusha
dec
sub
inc
jno
jmp
and
cmp
out
fwait
add
(bad)
xchg
sti
add
dec
daa
fmul
and
inc
jge
inc
push
and
or
cmp
fst
push
ss
loopne
mov
sub
jmp
mov
adc
psrlq
add
or
add
cmp
inc
adc
inc
jne
and
push
push
cmp
sub
pop
lea
lods
ins
je
dec
sbb
add
sub
in
sbb
sub
mul
and
jbe
retf
jl
and
pop
hlt
fmul
call
clc
(bad)
push
push
push
gs
push
(bad)
or
fdiv
and
xor
cmp
imul
push
adc
cmp
retf
pop
(bad)
or
cmp
mov
mov
push
and
pop
es
imul
dec
dec
popa
and
fsubr
xchg
ds
push
movs
test
sub
or
jno
outs
test
mov
jbe
jne
adc
sbb
in
inc
mov
or
dec
je
mov
test
push
ficomp
push
xchg
enter
push
pop
or
(bad)
cmps
popa
outs
paddq
ins
xchg
inc
jo
jl
mov
cmp
in
cmp
int3
pop
pop
adc
dec
jne
adc
sbb
cmp
aas
push
add
movs
and
jmp
fmul
out
das
rcl
or
dec
nop
pop
jl
repz
mov
xchg
ret
mov
jge
cs
fsubr
js
sbb
pop
xor
lods
sub
mov
pop
pop
or
dec
dec
cmp
add
sbb
mov
cmps
es
add
or
xchg
mov
mov
pusha
out
sbb
sti
mov
add
ret
jmp
xchg
add
jle
add
cmp
je
jmp
jmp
mov
fisttp
adc
pop
and
or
into
lds
jecxz
adc
adc
fs
add
add
mov
push
das
push
adc
ins
adc
add
mov
mov
add
xchg
push
mov
hlt
lock
test
nop
ret
and
and
adc
xor
cmovno
xor
and
dec
adc
movsx
and
xchg
xlat
push
inc
xchg
cdq
test
clc
or
inc
sbb
push
push
push
cmp
xlat
out
pop
jo
fmul
ins
sbb
(bad)
fild
call
mov
loope
loope
jmp
push
jl
xchg
jb
xchg
xchg
sti
adc
push
pop
retf
adc
pop
mov
mov
inc
xor
aas
or
mov
mov
cmp
xor
inc
sub
fdivr
das
mov
pushf
es
fidiv
gs
dec
push
in
lds
loope
mov
mov
aam
jle
rcl
mov
ja
add
push
outs
dec
mov
jnp
lea
and
cmp
stc
loope
inc
xor
(bad)
mov
cmp
icebp
jno
sub
dec
daa
xor
in
icebp
pop
and
fnstenv
out
and
lock
mov
sub
cmp
mov
xor
add
sar
or
adc
sbb
jmp
pop
cmp
sbb
or
pop
sub
or
rol
jl
mov
add
retf
(bad)
inc
pop
or
ret
xchg
pop
movs
push
cmp
loope
push
adc
push
jo
gs
sbb
dec
ds
xor
fdivr
hlt
ror
mov
icebp
dec
sqrtps
(bad)
xchg
and
daa
mov
sahf
or
inc
into
push
and
sbb
and
(bad)
les
cmps
sahf
or
jnp
push
lock
mov
jle
sub
(bad)
xor
push
retf
cli
imul
cmp
mov
(bad)
arpl
push
(bad)
jge
xchg
call
push
dec
sub
add
mov
(bad)
xor
inc
inc
add
pop
jno
dec
push
adc
fs
ror
fldenv
test
aaa
push
and
dec
cmp
(bad)
popa
mov
cmp
add
int3
jo
ret
iret
push
push
fdivr
pop
loopne
dec
mov
and
sbb
sbb
xchg
sub
sahf
add
ror
aas
push
add
out
pop
or
mov
cmp
jl
push
mov
or
rcl
test
enter
cmps
cs
fwait
enter
inc
xor
adc
pop
jg
mov
punpckhbw
adc
dec
and
xor
test
test
ins
cmc
sub
and
pushf
cmp
sub
pop
test
cli
jmp
cmp
xchg
js
imul
and
ins
mov
mov
jge
mov
mov
cli
scas
and
pop
outs
je
test
xchg
mov
push
cmp
lds
imul
mov
mov
adc
and
or
leave
dec
pop
gs
sbb
xor
sub
out
sbb
mov
add
cmp
pop
or
and
push
sub
adc
(bad)
cli
sub
push
adc
cmp
sbb
sub
push
mov
dec
ror
mov
mov
cli
inc
adc
jle
(bad)
push
and
rcr
mov
adc
adc
div
and
mov
xchg
xchg
mov
xor
fcom
or
mov
es
ret
jecxz
imul
fwait
(bad)
push
adc
movs
mov
push
imul
fild
jno
dec
xchg
ins
mov
and
cmp
pusha
add
cmc
push
movs
dec
xchg
daa
leave
add
sbb
inc
adc
jno
sbb
mov
xor
pop
xor
jbe
lar
stos
pop
add
add
cdq
inc
pusha
mov
add
fsub
sbb
imul
dec
sub
ficom
mov
xchg
(bad)
push
or
xchg
cli
ror
lock
cmp
outs
test
clc
gs
out
push
ja
cld
pop
aam
es
cmp
mov
jl
jp
mov
inc
or
pop
or
sub
xor
inc
dec
dec
mov
xchg
mov
(bad)
lahf
dec
mov
xchg
ja
test
addr16
out
push
ss
push
ins
hlt
imul
xor
stos
xor
pop
adc
or
(bad)
pop
or
push
sub
mov
gs
pop
sub
jge
xchg
mov
jl
dec
std
and
pusha
dec
add
sub
push
mov
retf
dec
or
push
enter
jge
mov
push
pop
repz
mov
pop
pop
pop
fiadd
xor
push
or
rcr
jmp
inc
movs
pusha
jae
shl
xor
aas
cmp
dec
add
push
mov
xchg
lea
adc
mov
pop
or
pop
jmp
push
jg
pop
pop
adc
push
out
pop
dec
adc
pop
sahf
fsubr
and
push
adc
or
or
or
mov
cmp
xor
mov
fstp
jmp
dec
out
ins
mov
jbe
dec
or
or
adc
mov
gs
cmp
push
mov
adc
pop
je
jns
add
sbb
cmp
cmp
pop
repnz
add
sbb
or
or
xchg
cmps
push
popa
test
mov
sbb
push
in
enter
xchg
push
sbb
jbe
arpl
jl
pop
rol
and
js
mov
pop
and
addr16
sbb
dec
in
inc
into
inc
lods
push
push
pop
das
mov
ret
mov
and
vsubpd
inc
push
adc
mov
dec
(bad)
icebp
pushf
aaa
xor
cmp
out
xor
sub
push
and
pop
imul
add
aaa
mov
data16
add
ret
std
mov
inc
jmp
pop
rol
cmps
bound
call
rcl
sbb
mov
dec
xor
addr16
add
jl
sbb
rcr
pop
sti
jecxz
and
cmp
gs
push
add
mov
mov
fsub
add
inc
mov
inc
add
(bad)
and
or
sub
mov
test
sahf
imul
mov
jg
(bad)
add
mov
xor
je
xor
(bad)
mov
jecxz
dec
inc
arpl
sbb
dec
int3
aaa
pop
dec
fdiv
sub
(bad)
mov
cmp
cmp
mov
dec
popa
stos
scas
cmp
and
in
sbb
daa
xor
loopne
sbb
adc
or
mov
les
cmp
or
mov
leave
mov
rcr
(bad)
dec
(bad)
mov
jae
mov
jge
add
push
mov
inc
mov
cld
das
retf
imul
jmp
mov
inc
jo
jo
inc
push
add
pop
pop
outs
dec
jno
pop
sbb
add
ins
fdivr
dec
jp
jmp
mov
aas
push
inc
(bad)
fisub
stos
fisttp
ret
add
and
cmove
aas
sub
push
icebp
inc
nop
pop
pop
cmp
dec
sbb
xchg
pop
mov
fild
inc
js
mov
push
into
(bad)
popa
jecxz
int3
sbb
ret
push
inc
ins
xor
sbb
repnz
push
in
rol
(bad)
or
pop
ret
xchg
adc
xchg
adc
or
lea
inc
add
push
add
dec
cmp
inc
fstp
ja
xlat
test
xchg
jle
xor
test
add
xchg
ja
or
inc
add
mov
cmovo
(bad)
fsub
push
aaa
push
cmps
dec
cwde
test
lds
or
outs
ins
jbe
xor
movups
fdivr
cmp
add
sub
aad
pop
pop
fldcw
or
adc
arpl
repz
or
stos
inc
cs
push
cli
lods
(bad)
mov
test
mov
pop
add
or
repz
xchg
imul
push
dec
fisttp
loope
pop
xor
inc
pop
push
xchg
int
sbb
mov
add
xor
pushf
xor
lock
mov
cli
adc
adc
jbe
sbb
xchg
clc
or
sbb
dec
push
and
and
int
xlat
or
push
arpl
mov
or
xchg
cdq
jecxz
in
pop
or
sub
xchg
and
push
pop
cmps
pop
or
test
jl
or
ins
or
mov
pop
ja
cmp
or
sbb
fadd
and
xchg
pop
xchg
fcom
dec
xor
fidiv
sbb
jl
cmp
xlat
push
je
adc
xchg
or
dec
sub
mov
out
ret
jmp
dec
or
cs
fwait
push
push
icebp
dec
and
xchg
xor
repnz
inc
dec
push
pop
dec
push
adc
and
push
inc
sbb
sbb
test
or
mov
ret
xlat
mov
movs
mov
push
or
push
jae
popf
xor
ja
and
cld
cmp
jne
push
dec
jne
pand
or
push
push
push
shr
dec
cmp
jns
inc
inc
mov
or
mov
or
leave
sbb
retf
inc
add
add
and
mov
inc
add
cmp
add
inc
ds
fbstp
test
mov
imul
or
es
xchg
push
arpl
sbb
jge
add
mov
dec
das
fsub
out
cwde
mov
adc
mov
add
or
and
repz
adc
fs
sub
push
out
imul
cli
push
and
loopne
mov
inc
push
pusha
adc
mov
inc
xor
push
pop
adc
or
xchg
cmp
das
push
dec
xor
add
js
adc
loopne
(bad)
(bad)
mov
loopne
rol
inc
inc
pop
(bad)
retf
inc
dec
add
mov
xchg
dec
add
and
xor
outs
xchg
pop
jge
test
inc
adc
add
cmp
jo
inc
ja
adc
shl
fidiv
in
repnz
loopne
adc
sub
dec
addr16
adc
iret
and
(bad)
fsub
movs
loopne
shl
cmp
cli
clc
dec
and
mov
pop
rcr
mov
call
je
pop
push
cmp
mov
(bad)
adc
jno
loope
inc
mov
or
inc
sbb
or
adc
mov
pop
or
add
mov
pop
loope
jp
add
sbb
dec
cmp
mov
mov
dec
ja
sub
dec
retf
or
jnp
mov
jno
adc
dec
dec
mov
cmp
(bad)
aad
push
ret
cmp
inc
add
adc
and
pop
mov
leave
xchg
push
xchg
mov
inc
xchg
adc
xchg
add
pop
jbe
pop
jmp
fsubr
add
int3
test
loopne
push
es
xchg
dec
cmp
adc
and
add
and
jno
mov
mov
xor
push
enter
pop
loopne
aad
or
bound
fiadd
push
or
ins
call
or
xlat
jg
or
mov
mov
pop
dec
add
(bad)
jne
push
cmp
pop
inc
add
enter
push
sub
loop
mov
shr
xchg
cmp
push
cmp
jne
addr16
push
mov
sbb
(bad)
mov
icebp
cmc
and
jmp
sbb
and
imul
push
fmulp
mov
les
mov
scas
or
mov
inc
test
cmp
pop
jmp
mov
add
xor
popf
dec
(bad)
aaa
xchg
aas
fild
adc
inc
cmp
arpl
pop
sbb
enter
sar
push
out
mov
imul
ins
clc
sbb
cmp
cdq
(bad)
add
ret
mov
out
inc
fwait
dec
in
or
out
sbb
daa
or
adc
push
lock
sbb
in
and
and
sub
pop
(bad)
ret
xchg
test
cmps
movs
pop
inc
push
cmp
addr16
adc
push
jmp
mov
sbb
xchg
cmp
or
add
pop
add
and
je
mov
pop
les
xor
push
adc
(bad)
jp
adc
cwde
mov
je
xor
and
cmps
push
movs
cmp
push
cmp
sub
or
push
inc
shr
dec
ins
pushf
and
mov
mov
dec
ror
sbb
shl
adc
in
call
scas
jge
dec
adc
push
inc
sbb
or
aad
adc
inc
push
sbb
cmp
movs
add
pop
mov
add
cmp
mov
sbb
je
jl
mov
push
sbb
or
xor
mov
sub
adc
or
or
dec
into
cs
pop
push
add
or
cmp
sar
in
mov
cmp
add
dec
fisttp
lahf
adc
adc
cmp
mov
push
add
(bad)
dec
inc
idiv
and
aaa
icebp
pop
mov
cmp
popa
xchg
mov
setae
dec
mov
test
sbb
(bad)
jmp
xchg
(bad)
dec
adc
call
dec
and
pop
je
mov
or
or
inc
pusha
add
or
jnp
cmps
inc
add
push
mov
adc
lds
arpl
fcom
or
adc
xor
cs
js
cmp
fisttp
dec
cli
xor
mov
xor
das
sbb
sti
pop
je
mov
push
cmps
xchg
or
aas
or
fwait
cmp
sbb
mov
(bad)
mov
dec
retf
jle
and
je
mov
fwait
pop
mov
push
and
cmp
mov
pop
jb
jo
pop
pop
or
das
pop
pop
pop
sub
xchg
or
pusha
js
out
xchg
cmp
data16
ret
inc
es
pmaxsw
(bad)
mov
das
fs
test
jl
xchg
cmp
adc
aam
push
out
sub
mov
inc
stc
ins
mov
adc
pop
popf
xor
leave
aad
xor
loop
ret
add
jle
add
push
add
or
sti
push
cmc
cli
shl
leave
je
shl
xchg
dec
push
or
adc
mul
push
repnz
add
out
dec
fs
or
inc
adc
fwait
mov
cwde
dec
push
and
or
or
dec
ret
stos
daa
push
imul
shl
int
lods
and
loopne
clc
add
dec
dec
stc
cmp
jecxz
sbb
test
and
add
fcom
sub
bound
gs
inc
pop
and
inc
mov
dec
jmp
ins
test
sub
sub
ins
push
and
push
add
adc
push
adc
or
dec
(bad)
fcmovnbe
add
jge
pop
pop
aas
sbb
jne
inc
jo
sub
cdq
adc
ins
bound
cmp
mov
push
outs
jmp
add
push
and
dec
adc
fidiv
lea
xor
cli
dec
and
fild
inc
pop
or
dec
add
test
or
cmps
rcl
xchg
push
test
add
out
pop
lods
shl
test
sbb
inc
or
mov
call
inc
rcl
mov
mov
cmp
shl
jmp
pop
cld
add
push
popa
inc
mov
sbb
mov
mov
or
push
in
mov
mov
xchg
push
jmp
movups
nop
jmp
sbb
and
in
xchg
add
and
adc
inc
out
sbb
mov
mov
jb
jecxz
inc
cmp
(bad)
cs
xor
and
adc
fsub
jl
dec
arpl
xor
adc
jne
sub
fbld
jecxz
inc
push
jns
push
jge
bound
das
bound
adc
shr
xchg
add
std
mov
ret
sub
test
add
aad
or
imul
fld
jl
xor
dec
mov
or
fadd
lods
aas
mov
mov
das
fdivp
fwait
repnz
sbb
or
mov
push
icebp
xor
sbb
retf
lock
call
in
test
or
in
fs
int3
call
xor
cmp
inc
pop
adc
adc
sbb
add
xchg
sbb
dec
or
mov
outs
cmp
sub
pop
xor
fadd
imul
mov
xchg
mov
or
aas
xchg
movs
fmul
fild
fsubp
popa
xchg
arpl
sub
ins
add
xchg
enter
fisttp
fimul
cmps
sbb
mov
fucomp
adc
sbb
mov
add
mov
push
(bad)
sbb
push
mov
sar
adc
and
fisttp
xor
mov
and
cmp
lea
ret
and
sub
jns
add
or
cmp
inc
add
es
ret
outs
hlt
mov
jno
pop
or
jne
cmp
push
jnp
xor
test
adc
enter
inc
cmp
movs
rcl
xor
pushf
rol
fld
test
icebp
loope
dec
add
pop
lea
push
mov
loope
mov
jmp
sub
mov
rol
xchg
mov
cmp
push
sbb
hlt
add
or
pop
cdq
add
lahf
ror
fs
inc
sub
or
lea
inc
pop
sbb
mov
ja
sbb
dec
jb
add
jle
add
add
push
mov
push
push
pop
loope
imul
cmps
jmp
sbb
repz
gs
imul
cmc
push
nop
push
mov
push
adc
mov
shr
das
xchg
sahf
mov
ret
cmp
push
(bad)
dec
push
or
dec
sub
mov
mov
(bad)
aaa
call
in
aaa
mov
inc
loopne
in
or
cs
imul
in
push
xor
daa
cmp
or
sub
mov
dec
inc
sub
inc
adc
call
push
loopne
or
mov
in
outs
or
push
bound
push
ss
cmp
sub
jo
cmp
add
inc
jne
add
inc
add
add
je
jnp
and
mov
cmp
push
movs
inc
jbe
mov
icebp
push
push
adc
and
(bad)
sti
and
or
fisub
jo
enter
jmp
mov
xchg
or
xor
retf
xchg
imul
imul
add
test
sbb
cmp
xor
shl
push
mov
lea
fsubr
jno
jno
outs
inc
daa
fcom
loopne
or
inc
sub
loopne
or
call
clc
ss
out
sbb
mov
lea
stos
in
scas
cmp
sub
push
sbb
les
call
jno
inc
pusha
hlt
lds
push
mov
dec
sti
cmps
xchg
pop
and
inc
in
enter
hlt
sub
mov
or
mov
sub
sbb
sbb
add
add
cmp
icebp
lods
push
adc
pop
adc
js
jne
sar
add
and
ja
sub
adc
loop
(bad)
mov
push
mov
adc
sti
jl
stos
xchg
out
out
loopne
or
xchg
jg
jp
push
add
sbb
test
je
or
daa
dec
xor
data16
and
push
mov
mov
inc
cmp
and
push
dec
push
jb
outs
push
and
lods
pop
dec
add
or
push
pop
push
popf
dec
inc
mov
mov
or
stos
cmps
dec
add
adc
pop
add
lods
xor
sub
add
inc
dec
mov
movs
inc
cmps
aaa
add
or
daa
sbb
pop
xchg
cmc
mov
sub
adc
push
mul
or
sub
or
mov
jmp
inc
imul
fs
push
retf
loopne
daa
ja
jle
int3
pop
daa
pusha
inc
enter
sbb
ds
or
inc
ins
jp
xor
outs
xor
xor
cmp
je
syscall
adc
or
pop
jmp
sahf
nop
ret
(bad)
lock
je
inc
xchg
test
jbe
ins
daa
shr
xor
push
xchg
push
inc
push
cdq
cdq
sub
sub
ret
fs
xchg
or
or
inc
sbb
popa
pop
adc
ds
pop
inc
inc
cmp
lahf
cwde
adc
sbb
fiadd
sub
dec
cmp
jge
rol
or
or
dec
mov
adc
dec
cmp
ret
jge
or
push
stos
(bad)
jge
dec
add
cmps
adc
cdq
cwde
xor
pushf
gs
push
or
dec
sbb
cli
pop
pushf
sub
test
mov
lods
push
inc
cmp
lods
mov
lds
fucomi
xor
mov
jmp
or
imul
cwde
and
retf
xchg
leave
dec
inc
call
(bad)
pop
out
inc
in
sub
dec
mov
pop
das
cmp
mov
inc
or
xchg
jns
mov
cmp
mov
out
pop
test
adc
cs
cmp
ins
ja
mov
mov
jle
xchg
pushf
je
mov
or
jb
ins
fnstsw
push
xor
jmp
mov
repnz
pop
std
sub
arpl
sub
add
not
jmp
ret
mov
jbe
ins
les
imul
push
dec
add
clc
not
jle
push
(bad)
jmp
xchg
push
adc
mov
adc
inc
sbb
push
fdivr
push
add
sbb
cmp
hlt
add
inc
xor
idiv
jp
pop
adc
and
cmp
push
popa
mov
xor
xlat
push
xchg
mov
(bad)
adc
ror
je
test
addr16
hlt
push
fcmovu
pop
clc
ja
in
outs
pop
add
dec
mov
data16
inc
test
aas
mov
(bad)
fisub
xor
outs
dec
aaa
mov
jmp
enter
push
sub
adc
push
push
add
add
out
inc
and
inc
pop
xlat
pop
adc
jb
(bad)
sbb
dec
xor
and
adc
or
js
xchg
cmp
and
imul
cwde
aaa
cmp
mov
cld
add
adc
add
or
or
pop
and
sub
hlt
sub
les
test
je
mov
and
lea
adc
add
sbb
sbb
push
arpl
sub
add
xchg
sub
sub
enter
dec
jp
push
pushf
cdq
jmp
jge
cld
rcr
ret
(bad)
lock
cmp
add
outs
jg
adc
or
test
les
ffree
push
add
or
icebp
and
and
aad
and
test
mov
ret
or
mov
lock
aam
mov
jne
and
sub
pop
mov
xchg
test
pop
cmp
aaa
or
sbb
sub
rcl
and
mov
mov
xlat
dec
inc
xor
js
inc
jl
addr16
mov
ret
add
inc
and
gs
dec
inc
das
sub
push
cmp
cmp
pop
bound
cmps
rol
or
pop
mov
leave
mov
jno
push
pop
pop
dec
mov
mov
push
inc
shl
pop
or
out
jno
js
or
mov
sbb
enter
jno
mov
and
push
dec
adc
ret
jb
(bad)
push
pop
lods
arpl
dec
fs
cmp
sub
(bad)
(bad)
(bad)
mov
ret
pop
aam
push
pop
add
xchg
pop
dec
or
mov
loop
pop
dec
add
loopne
and
dec
xor
sub
adc
push
es
call
adc
dec
push
sbb
inc
push
aam
in
or
push
je
nop
outs
mov
aad
sbb
addr16
lahf
test
arpl
inc
aas
into
inc
dec
mov
inc
adc
adc
adc
mov
push
push
out
sbb
add
mov
mov
or
or
pop
into
jne
mov
inc
lods
and
lods
xor
mov
mov
lock
fcom
push
loopne
jle
je
push
inc
loope
pop
lock
pop
or
adc
adc
jle
iret
repnz
mov
dec
or
cmp
daa
dec
es
dec
mov
arpl
jne
test
(bad)
shl
adc
mov
xchg
jbe
fiadd
adc
cmp
add
je
xchg
stos
iret
add
lea
adc
sbb
iret
jl
xlat
cli
jge
xchg
and
(bad)
inc
mov
loope
ret
jo
mov
cmps
pusha
pusha
jne
jno
daa
daa
or
jmp
ror
arpl
inc
fs
cld
dec
push
mov
mov
sub
pop
mov
push
dec
push
ja
adc
push
aad
xchg
push
mov
inc
mov
sbb
sub
addr16
push
clc
jne
xor
daa
mov
xor
mov
cmp
out
pop
xor
out
xor
pop
push
in
mul
fmul
mov
push
sbb
div
pop
subps
mov
sbb
adc
popf
add
jae
push
div
test
pop
repnz
popa
adc
lea
imul
and
outs
arpl
aam
sub
cmp
and
fs
(bad)
or
bound
dec
test
mov
sub
cmps
fcomp
xor
and
lea
test
dec
icebp
jb
jns
sub
clc
cwde
pop
pop
jecxz
cmc
or
dec
dec
imul
push
inc
add
ret
pusha
add
adc
pop
inc
push
loopne
and
add
imul
les
or
xor
add
pushf
mov
in
pop
pop
sbb
sbb
gs
popa
mov
or
and
or
fmul
pushf
(bad)
fwait
test
lods
push
je
ins
lods
push
jecxz
cld
test
in
int3
pop
clc
fcom
in
test
or
push
ret
(bad)
push
call
add
mov
icebp
out
lea
xor
cmp
add
xchg
mov
sahf
je
data16
(bad)
nop
js
pop
inc
jge
sbb
dec
test
sub
jns
adc
adc
inc
out
adc
ret
sgdtd
mov
fsub
fld
and
xchg
mov
sub
cmp
adc
xchg
inc
or
int3
sti
push
or
adc
jb
pop
pop
test
sub
popa
push
fcomp
rcl
push
mov
clc
push
jl
inc
fmul
adc
ins
xor
daa
xor
jg
cli
adc
push
retf
cwde
xchg
(bad)
retf
ret
lock
popf
inc
add
aas
arpl
and
inc
inc
or
add
fsubr
push
pop
(bad)
sbb
inc
adc
ret
sti
test
movs
jg
enter
call
js
std
js
aas
dec
jg
mov
add
add
mov
mov
dec
shl
ins
cmp
push
add
gs
iret
xchg
sub
dec
or
fisub
mov
sub
mov
xor
xor
and
or
pusha
shl
fwait
outs
scas
cmp
sub
(bad)
call
dec
je
(bad)
jbe
jp
push
cmp
or
push
aam
jl
mov
push
or
ret
sbb
arpl
sbb
(bad)
rol
out
ficom
inc
ret
jmp
dec
and
mov
push
cmp
push
aas
fimul
ss
in
sbb
loopne
inc
aas
js
xchg
add
or
aaa
add
loopne
retf
or
sbb
sysret
out
stos
or
mov
retf
push
mov
gs
add
mov
sub
pop
add
jmp
xchg
fstp
dec
rcr
pop
push
mov
dec
pop
mov
repz
nop
(bad)
inc
mov
les
xor
mov
pop
sbb
and
jne
aaa
inc
mov
fidivr
adc
leave
add
or
cli
add
xor
or
popa
adc
push
lock
inc
sbb
movs
xor
sbb
loope
mov
pop
and
daa
sub
push
and
pop
xor
pop
xor
mov
inc
jns
xor
mov
lahf
jmp
fisub
pop
test
ins
mov
inc
adc
pop
xor
and
rcr
inc
pop
and
scas
push
popa
or
push
arpl
pop
mov
push
cmp
jnp
cmp
mov
jo
xchg
jo
test
sub
(bad)
mov
ret
inc
add
xchg
ret
rcl
or
xor
into
cmp
outs
popa
lds
mov
sub
bound
and
mov
fs
movs
push
add
(bad)
inc
mov
mov
and
inc
pop
lods
sbb
mov
or
xchg
xor
add
lock
xchg
lea
or
xchg
mov
es
and
push
inc
push
mov
fisttp
add
xor
sbb
fwait
sub
mov
outs
enter
push
jne
shl
test
sub
jno
ret
pop
pop
or
pushf
test
inc
loope
add
hlt
div
arpl
sbb
or
(bad)
fidivr
ja
xor
xchg
nop
dec
sysret
out
scas
lds
cmp
jecxz
xchg
outs
addr16
pop
xor
loope
mov
xor
inc
sti
mov
inc
out
rcl
jns
movs
into
push
add
hlt
fs
in
jbe
jge
pusha
mov
lahf
les
ins
pop
xchg
push
cmp
sbb
sub
and
xor
stos
and
and
push
out
pop
push
inc
aas
mov
jb
and
(bad)
movs
pop
fisttp
out
stc
add
daa
lock
or
push
(bad)
cmp
setg
jmp
xbegin
dec
dec
inc
add
cmp
setle
repnz
and
es
dec
xor
inc
dec
adc
sub
push
dec
cld
mov
cld
mov
or
rcl
and
cmp
ds
pop
aaa
lods
cmp
jmp
push
or
neg
mov
pushf
xor
adc
aam
lock
mov
add
xor
or
shl
loope
mov
(bad)
in
xchg
pop
xor
or
pushf
lea
popa
add
cs
jno
inc
adc
adc
jnp
or
jmp
xchg
ret
sahf
bound
hlt
jmp
xor
(bad)
sbb
shr
es
mov
or
and
fcom
cmp
in
aaa
lock
cmp
sbb
add
add
pushf
mov
pop
xchg
sub
aam
push
cmp
lods
ds
jo
fwait
dec
xor
ftst
rol
icebp
mov
xor
sbb
or
shl
aaa
jl
push
xchg
add
adc
pop
or
add
adc
or
pop
add
mov
add
(bad)
lock
aam
lds
scas
inc
and
(bad)
dec
outs
test
ins
pop
jnp
loop
lock
or
test
xor
mov
sbb
jns
add
cmp
sub
lods
or
fs
in
add
jmp
sbb
ror
jmp
push
sub
in
fld
sub
push
xchg
jo
xchg
xor
jb
cmpxchg
or
mov
pop
and
movs
das
mov
clc
adc
outs
cmp
pop
dec
adc
push
ss
into
xor
mov
sub
imul
ins
dec
or
or
mov
dec
or
sbb
ins
mov
pop
or
cmp
jo
ret
jnp
sar
cmc
in
push
fist
sub
(bad)
fisttp
mov
sbb
cmp
jne
ins
xor
xor
jmp
mov
bound
add
outs
fist
add
jo
cmp
mov
test
je
xchg
dec
or
dec
push
cmp
mov
out
mov
adc
sbb
(bad)
retf
inc
xchg
mov
(bad)
sar
iret
mov
inc
sbb
imul
pop
xor
loopne
push
hlt
fucomip
push
imul
pop
lock
into
outs
aaa
sbb
rcl
leave
add
or
add
arpl
add
sub
add
push
dec
ins
loop
or
pop
ficomp
mov
popa
jne
push
ficomp
sbb
test
ins
bound
iret
inc
pop
dec
dec
(bad)
dec
mov
ins
sub
add
and
test
mov
adc
jmp
fwait
push
pop
mov
xchg
mov
adc
outs
cdq
ins
pop
adc
cmp
nop
inc
add
push
mov
jns
or
(bad)
neg
lods
fmul
add
xchg
cmps
or
test
das
jo
rol
aaa
les
pusha
ret
adc
sbb
jae
dec
movs
pusha
loopne
mov
dec
push
mov
pop
fs
loope
(bad)
pusha
push
out
lods
call
push
inc
std
ja
xor
jne
add
or
iret
loope
sub
repnz
popf
imul
and
lods
sub
sbb
inc
aam
xor
les
mov
pop
hlt
mov
xchg
xor
add
and
xor
mov
shr
retf
dec
sub
fisubr
adc
mov
shl
push
mov
shr
xor
add
pop
add
leave
enter
and
push
cmps
sub
sub
pop
or
je
dec
popa
imul
mov
sub
mov
arpl
mov
ss
mov
mov
mov
popa
js
pop
mov
lods
mov
nop
adc
push
or
add
test
xor
mov
inc
inc
dec
enter
stos
mov
xor
into
jg
mov
add
sar
dec
jne
sysenter
sbb
sub
std
or
add
jae
add
mov
cmp
mov
xchg
pop
sbb
or
xor
push
or
pop
in
pusha
test
enter
xchg
aas
inc
jecxz
inc
cmc
repz
sub
ror
and
inc
inc
jne
add
inc
rcr
test
inc
(bad)
mov
sub
push
or
inc
dec
mov
sti
es
mov
aas
(bad)
jmp
adc
jmp
lds
or
add
cmp
inc
add
jo
xchg
lods
test
xchg
sub
sbb
movs
cmps
pop
inc
or
pop
cmp
jle
daa
sar
lods
jmp
push
shl
cmp
js
in
fldcw
imul
add
push
or
pushf
ret
add
iret
test
mov
daa
pop
daa
xlat
mov
test
cmp
push
cmp
out
loop
pop
adc
(bad)
sbb
mov
mov
xchg
in
or
jbe
jae
std
push
sub
mov
push
or
pop
rcl
mov
nop
mov
fadd
in
dec
mov
push
and
xchg
pop
and
pop
enterw
adc
add
push
pop
fild
or
pushf
and
fwait
sub
out
sub
push
sub
cmp
sub
or
xchg
pop
xchg
inc
sub
mov
cmp
fild
mov
lea
mov
push
sub
dec
sub
or
inc
ret
test
int3
pop
sub
cmp
fisubr
jmp
push
or
inc
sub
adc
add
popf
jle
hlt
add
and
or
shr
nop
je
add
test
sbb
inc
pop
push
sbb
mov
push
cmps
jo
inc
pop
dec
sub
mov
out
adc
ret
popf
cmp
inc
call
fisubr
je
adc
cwde
add
pop
iret
xchg
nop
aad
test
rol
pop
add
and
jmp
push
dec
nop
jmp
xor
inc
nop
mov
mov
test
or
xchg
out
popf
lea
or
xor
mov
add
sub
and
dec
cmp
test
out
mov
clc
or
xchg
push
inc
je
and
in
retf
mov
(bad)
ds
add
cwde
push
or
xor
aam
adc
or
pushf
mov
jp
das
xchg
fadd
xor
sub
mov
pop
xor
and
cmp
xchg
xchg
add
jmp
icebp
inc
test
mov
int3
sub
add
outs
stc
rol
imul
cs
ds
mov
(bad)
push
dec
sar
adc
mov
mov
add
pop
cmp
dec
lock
mov
ret
cmps
mov
jo
cmp
ins
inc
dec
sub
jmp
dec
movs
xor
sahf
ret
xchg
jae
not
out
ins
xchg
pop
cdq
sub
sub
test
mov
sahf
cmp
cmp
ffree
test
mov
push
and
or
pop
aaa
dec
lock
out
mov
test
mov
stos
mov
(bad)
das
xchg
pop
aaa
addr16
xchg
loop
sub
lea
clc
cmp
xor
jo
out
inc
popa
jne
loope
dec
es
arpl
rcr
or
jg
ja
icebp
(bad)
(bad)
jmp
xor
cld
mov
mov
cwde
les
pop
dec
add
and
iret
data16
push
mov
jmp
jne
out
sub
jge
mov
aaa
and
std
fwait
fs
ret
mov
icebp
call
mov
sbb
push
mov
fiadd
outs
test
mov
xor
mov
(bad)
and
sbb
mov
fwait
xchg
outs
test
ret
test
pop
repnz
xchg
inc
retf
(bad)
jo
jecxz
fiadd
shl
(bad)
sti
pushf
add
cmp
adc
(bad)
loopne
and
sub
or
jnp
push
pop
mov
test
dec
or
ins
sbb
test
mov
add
adc
inc
js
sub
cmp
ja
push
push
mov
scas
outs
je
test
movs
or
inc
scas
push
nop
cmp
adc
pushf
and
sbb
dec
or
xchg
or
mov
aam
xchg
inc
sbb
mov
js
or
push
or
push
sbb
je
xor
cmps
sub
lds
and
mov
jns
popa
stos
sub
xor
cmp
je
enter
sub
mov
and
sbb
cmps
xor
sbb
jbe
add
leave
sub
or
mov
js
(bad)
mov
cs
or
inc
add
xlat
inc
icebp
std
sub
inc
je
aad
mov
mov
dec
fadd
cmp
mov
mov
jl
inc
loopne
nop
add
stos
add
cmp
pop
mov
cwde
mov
daa
add
jmp
adc
cdq
sbb
add
dec
mov
sbb
fst
jmp
test
daa
xor
push
push
daa
cmp
push
add
push
inc
sbb
add
mov
ins
xor
idiv
jo
add
and
int3
add
fcom
jne
sbb
pop
les
sar
push
mov
and
sbb
ror
loop
sub
xor
or
aad
test
pop
in
(bad)
jbe
js
mov
push
clc
aaa
lea
mov
call
jnp
shl
dec
lods
sub
bound
rol
xor
mov
push
dec
dec
shr
xchg
pop
push
mov
mov
arpl
sahf
lock
mov
test
fnstsw
loop
rcr
jb
or
outs
icebp
add
lock
sbb
mov
pop
lods
sbb
adc
inc
sbb
adc
adc
mov
js
cmp
call
mov
movhps
dec
test
cmc
scas
xchg
add
mov
jmp
or
or
inc
mov
inc
cwde
idiv
dec
mov
push
cmps
adc
jle
and
test
jno
jle
or
in
and
(bad)
sub
inc
add
fwait
dec
cwde
test
fidivr
mov
in
adc
push
mov
dec
pop
jmp
push
jae
jmp
and
dec
adc
inc
and
and
mov
(bad)
dec
inc
jecxz
inc
mov
cmp
xor
jnp
aaa
sbb
xlat
sub
call
in
pop
rcl
into
mov
cs
add
jmp
jbe
push
test
push
mov
xchg
push
retf
iret
ret
rcr
push
bound
cwde
popa
sti
xor
jl
cmp
sbb
push
push
pop
pop
sub
and
(bad)
mov
jne
cmps
loope
sbb
xor
sbb
push
(bad)
(bad)
sbb
add
xor
ret
inc
adc
inc
imul
mov
pop
push
adc
shr
mov
push
mov
ret
add
ret
ror
jns
mov
inc
mov
push
test
xor
and
lock
out
mov
repnz
inc
daa
lods
adc
sahf
lock
xor
and
and
push
out
mov
xlat
inc
xor
bound
sub
add
addr16
mov
sub
inc
and
sub
js
out
ret
lds
push
out
or
leave
pop
push
xchg
cwde
mov
jne
stos
adc
nop
xchg
outs
das
mov
jp
mov
cwde
or
push
push
cmp
mov
ins
shl
loopne
push
sub
and
pandn
cmp
in
movs
push
or
mov
sub
dec
imul
or
and
and
adc
dec
sbb
cmp
cmps
adc
mov
call
cmp
mov
or
sbb
pusha
loope
movs
lahf
jp
jbe
mov
fild
int
pavgb
push
push
data16
jo
scas
inc
push
mov
clc
pop
out
inc
out
push
in
pop
xor
adc
and
push
call
call
push
pushf
push
or
push
xor
xor
sbb
dec
std
mov
(bad)
unpcklps
pop
js
mov
mov
test
cdq
inc
les
add
les
xchg
pop
shl
push
xchg
push
xchg
or
jg
gs
(bad)
cmp
rcr
call
adc
cmps
lds
or
test
mov
lea
sbb
push
cld
loopne
test
mov
mov
nop
push
ror
and
sbb
mov
and
cmp
or
xor
retf
fwait
repz
sbb
xor
cs
ror
xor
jno
jl
jecxz
retf
mov
sub
xor
ror
test
inc
div
test
add
movs
mov
ret
cmp
xchg
pushf
push
push
ins
mov
aaa
or
push
and
shl
push
mov
out
push
mov
adc
pop
leave
push
ret
pop
test
sbb
das
mov
mov
call
add
sub
inc
aas
rcr
or
sbb
cmp
inc
dec
outs
sbb
xor
lea
inc
pop
mov
and
sub
aas
mov
inc
daa
mov
popa
ss
outs
call
test
inc
mov
lods
pop
enter
daa
pop
cmps
or
adc
addr16
add
push
fwait
pusha
inc
nop
inc
dec
test
stos
jg
adc
or
mov
sbb
imul
add
inc
jg
fsub
inc
jmp
repz
cmp
jne
mov
push
mov
outs
pop
and
sub
mov
mov
retf
adc
push
jecxz
es
add
push
adc
push
sub
inc
add
in
inc
push
loopne
sbb
adc
pop
mov
out
stos
nop
jbe
mov
xchg
push
sbb
rol
gs
fdivr
inc
imul
leave
cli
mov
sbb
cmp
rcr
inc
adc
out
shr
sub
cmp
outs
ret
adc
sbb
xor
ja
sbb
repz
aas
cmp
jb
xchg
mov
(bad)
xchg
cmp
loope
or
adc
das
repnz
call
js
popw
push
add
or
pusha
test
(bad)
cwde
stos
cmp
cmp
(bad)
mov
add
sbb
inc
jnp
pop
movsx
call
sbb
mov
or
inc
cmp
push
add
push
arpl
cmps
mov
inc
cmp
imul
in
mov
mov
mov
mov
scas
(bad)
xchg
add
bound
xchg
and
loope
shl
cmp
fimul
push
cld
out
ret
dec
sbb
repz
bound
dec
imul
jle
push
mov
sub
jo
rol
xchg
test
rcr
adc
test
ja
add
jno
mov
pop
cwde
jne
adc
sahf
int3
xlat
rol
int
retf
xor
sub
je
ret
adc
test
rol
cmp
and
xor
or
aaa
push
ret
xor
and
adc
nop
addr16
shl
(bad)
leave
xor
int3
enter
xor
adc
push
mov
xchg
jl
mov
es
(bad)
fwait
mov
dec
ret
mov
(bad)
mov
pop
rcl
mov
popf
xchg
pop
push
push
stos
pushf
adc
add
int
ds
ret
pop
sub
cmp
add
pop
mov
dec
xor
jmp
das
mov
je
mov
push
mov
adc
xchg
add
adc
ret
inc
cmp
pop
pop
cmp
cwde
pop
mov
mul
call
(bad)
jne
movs
jle
jge
mov
push
es
test
add
xor
dec
inc
test
sbb
aam
pop
cmp
rcr
ins
or
inc
fld
cs
(bad)
sbb
test
dec
fsubp
or
loope
iret
ror
(bad)
pop
test
int
retf
daa
adc
mov
mov
and
sbb
dec
inc
mov
(bad)
xor
shl
sbb
fwait
add
jecxz
es
shl
jg
fsubr
and
lahf
in
je
mov
test
clc
gs
sub
adc
sbb
(bad)
pusha
ins
mov
nop
mov
dec
add
mov
jecxz
xor
mov
rcl
push
mov
bound
or
dec
cmp
fisub
xlat
sub
cmp
mov
jbe
cmp
test
add
jbe
push
iret
xor
push
pop
push
pop
cmp
lea
test
sti
inc
push
xor
mov
mov
or
ins
mov
fdiv
pop
cmc
cs
call
sub
stos
adc
lea
and
or
mov
dec
in
push
xor
lds
inc
(bad)
inc
rcr
das
jecxz
dec
inc
adc
test
mov
add
sub
out
mov
test
mov
sbb
mov
call
movs
mov
sub
shl
sbb
cmc
imul
in
ret
popa
sbb
or
xchg
add
sbb
and
mov
xor
mov
or
test
xchg
push
jge
pop
add
lods
in
push
in
xchg
iret
jmp
ret
ins
sub
iret
add
addr16
mov
adc
loopne
(bad)
(bad)
aam
lea
jns
adc
mov
aam
mov
pusha
enter
dec
add
pop
inc
mov
inc
or
pop
dec
and
push
xchg
push
xor
add
fs
push
pop
icebp
push
mov
jg
add
pop
sar
add
adc
push
rcl
and
push
or
cld
dec
mov
sbb
(bad)
push
into
jmp
pop
mov
dec
and
push
hlt
icebp
sub
dec
sub
or
mov
sbb
sahf
sub
cmp
mov
clc
cmp
pusha
std
push
adc
test
pop
shr
push
pop
xor
movs
cld
stos
push
cmp
cmp
js
aas
pop
jae
retw
fisttp
mov
inc
adc
pop
or
int
pop
cmp
ret
push
pop
lods
inc
pop
ret
inc
aam
sub
xor
xchg
xchg
int3
test
jae
jp
sbb
xor
lock
mov
mov
or
jmp
mov
sbb
and
(bad)
scas
sbb
xlat
in
push
std
or
inc
push
mov
outs
inc
push
aaa
add
lds
adc
adc
aad
pop
outs
mov
iret
mov
lods
pop
(bad)
fs
cmp
lea
push
das
js
inc
mov
and
or
cmps
std
cmp
pusha
jmp
dec
cmp
jb
nop
add
ret
mov
xchg
sbb
mov
and
aaa
icebp
jle
lods
sbb
pushf
rcpps
jmp
mov
repz
loope
ss
icebp
adc
pop
mov
push
push
imul
stos
pop
not
xchg
push
push
leave
dec
sub
scas
test
sbb
jecxz
pop
xchg
jns
cwde
inc
jge
xchg
test
push
or
push
or
adc
sbb
sbb
xlat
adc
xchg
jo
sbb
mov
jo
xchg
mov
lahf
mov
pop
pop
imul
test
mul
push
xor
dec
or
push
lea
mov
je
dec
and
test
adc
and
pop
jg
jp
jnp
sahf
test
or
cmp
aad
jmp
test
xchg
pop
pop
xor
lea
adc
jg
add
scas
into
jnp
cli
imul
add
add
push
rol
pop
pusha
cmp
jbe
push
call
pop
jmp
sbb
push
(bad)
arpl
int
stos
jne
lods
add
push
cmp
mov
adc
add
lods
call
jmp
int
scas
aad
ins
xor
and
cwde
(bad)
xchg
inc
inc
adc
xchg
and
test
or
imul
dec
jl
dec
sbb
inc
or
rcl
mov
jmp
adc
out
add
push
push
pusha
add
add
ins
add
push
sbb
adc
lods
dec
add
cs
fist
xor
cmp
sub
shr
or
push
lahf
rol
call
add
adc
les
scas
add
or
out
cwde
mov
aaa
and
sub
pop
mov
scas
jge
adc
add
clc
xor
add
gs
popa
add
add
(bad)
pop
inc
jns
js
lds
pop
(bad)
dec
push
sbb
por
add
inc
jo
iret
adc
ret
jns
test
test
xchg
push
out
and
mov
xor
jne
sti
xor
adc
pop
and
data16
sub
or
sbb
les
je
cs
clc
and
push
cmp
jmp
lahf
sub
cmp
inc
aam
ins
adc
data16
or
push
les
fadd
xchg
inc
push
pop
dec
xchg
pop
popa
dec
adc
xor
xor
repz
pushf
imul
mov
stos
mov
popa
fild
xor
xchg
into
out
sub
icebp
xor
inc
adc
mov
push
push
fcomp
jns
cli
add
sbb
fisubr
push
cmp
mov
ret
add
jge
push
adc
mov
xor
push
clc
mov
and
out
push
loop
add
or
push
mov
inc
add
dec
loop
adc
ss
es
xlat
push
and
daa
in
inc
jmp
retf
test
cmp
out
cdq
lods
mov
add
cmovo
sub
xchg
dec
lock
or
xchg
inc
xchg
xchg
rcl
cmp
cmps
sub
mov
nop
cwde
cmp
jbe
lods
mov
js
push
ret
sub
inc
sub
(bad)
(bad)
das
popa
sar
cmp
retf
ret
cdq
dec
add
cdq
rcl
xchg
pop
outs
or
jo
(bad)
dec
test
jb
cmp
fldcw
cli
push
mov
(bad)
jge
js
adc
pop
pushf
jmp
sub
sub
and
sub
or
pop
scas
sub
inc
sbb
les
jno
mov
les
int
aad
push
cmc
add
fcom
mov
inc
cwde
test
push
ret
jo
and
adc
xor
xor
fistp
sbb
cmp
sbb
mov
scas
push
push
sar
sbb
dec
and
ss
(bad)
pop
scas
pop
sbb
mov
mov
mov
in
push
sub
daa
fsub
or
or
sbb
sbb
or
imul
aaa
pop
jecxz
inc
pusha
pusha
pop
lahf
ficom
fisttp
adc
sbb
lods
inc
push
fcmovnb
ror
push
push
push
call
xor
jne
mov
xor
push
or
das
jne
fsub
add
pop
cmp
shl
shl
and
mov
retf
jmp
push
sub
dec
or
nop
adc
xor
push
ins
mov
push
and
sbb
xor
inc
sub
mov
das
loope
sar
or
dec
inc
or
mov
(bad)
aad
add
jmp
add
mov
aas
push
or
adc
jns
popa
daa
or
daa
or
and
fucompp
sub
movs
jbe
jge
mov
xlat
push
lahf
jo
aaa
sbb
outs
pop
xor
sub
pop
sub
cmp
sub
adc
packsswb
adc
cmp
and
add
lea
mov
frstor
add
add
adc
xor
outs
arpl
dec
cmp
jno
test
int
adc
(bad)
shl
fmul
cmp
dec
adc
sub
ins
sbb
jno
pop
mov
pop
retf
scas
mov
loope
pop
repnz
int3
push
ret
lock
sub
cmp
jns
sub
adc
xor
and
popf
sub
or
sub
inc
shl
clc
push
nop
out
cmps
das
mov
rol
cld
imul
je
out
adc
and
add
and
les
fcomp
adc
and
je
ror
mov
jbe
jns
adc
nop
repz
fmul
sbb
clc
sub
ins
mov
and
adc
scas
mov
fisubr
and
add
xor
push
cmp
inc
mov
pop
inc
adc
cwde
push
outs
cmp
fst
add
xor
test
sbb
je
mov
inc
fmul
pusha
dec
jne
cmp
or
sbb
and
adc
jo
ror
mov
and
mov
mov
and
jecxz
jne
xor
jbe
or
sub
sub
sub
jbe
mov
xor
xchg
push
push
punpcklwd
adc
adc
pop
sbb
mov
and
cmp
adc
or
clc
iret
inc
mov
adc
push
test
pop
jmp
in
hlt
pop
pop
add
ficomp
add
pop
sub
les
push
test
jecxz
add
add
dec
mov
sbb
rcr
loop
sbb
dec
dec
adc
bound
jo
out
fmul
mov
jnp
(bad)
add
je
adc
int3
jbe
push
add
sub
daa
adc
gs
mov
adc
jecxz
or
adc
or
fnstsw
or
inc
es
ja
push
mov
inc
scas
xor
xor
adc
mov
test
add
iret
call
mov
daa
imul
dec
jb
inc
dec
adc
jns
sub
push
dec
dec
add
std
scas
sub
sub
mov
sbb
adc
cmp
adc
clc
sub
cmp
clc
lock
in
test
or
or
call
les
cmp
or
repz
repz
fmul
aam
inc
sbb
(bad)
dec
adc
push
inc
add
fmul
adc
and
cmp
add
jb
or
das
xchg
fisub
sbb
in
push
rcr
lods
scas
xchg
loopne
jmp
mov
mov
out
ret
dec
cmp
add
or
mov
cmp
mov
test
sub
mov
sbb
shr
in
xchg
sub
mov
mov
rcr
dec
adc
adc
(bad)
es
mov
dec
mov
sbb
jns
inc
add
cmps
(bad)
mov
dec
or
fiadd
push
mov
sub
push
ds
lock
mov
jmp
inc
and
out
cmps
movs
jl
sar
dec
dec
or
loopne
adc
outs
ja
cmp
das
das
or
out
push
test
popf
mov
push
fadd
out
das
adc
push
rol
dec
push
inc
lods
add
ja
addr16
or
into
adc
fmul
adc
mov
das
das
or
push
mov
and
into
adc
fmul
inc
dec
sub
pop
pop
mov
jge
unpckhps
sub
and
imul
sbb
push
and
fidivr
dec
int3
or
dec
fmul
retf
fwait
xchg
cmp
clc
sbb
aam
aam
les
pop
adc
dec
jno
push
lgdtd
xchg
and
add
pop
and
add
mov
ins
mov
test
ins
movs
and
jl
das
(bad)
lahf
lods
and
mov
xchg
sbb
in
mov
mov
bt
test
inc
dec
fdiv
cmps
dec
vprotb
add
inc
and
sbb
add
mov
rcl
sub
inc
ret
cli
fcom
ins
sbb
pop
adc
jns
adc
inc
jbe
addr16
adc
xchg
cmp
cmp
nop
leave
push
dec
xchg
test
in
mov
clc
arpl
sub
pop
xchg
cmps
push
test
icebp
fmul
mov
mov
shr
sub
inc
sub
rcr
mov
rcr
jns
dec
outs
lock
sbb
push
ret
ret
jl
loopne
jle
call
inc
dec
or
mov
cmp
ins
add
mov
mov
and
jnp
add
leave
repz
hlt
add
mov
pop
inc
or
adc
mov
cmp
(bad)
push
push
aam
mov
ss
daa
imul
arpl
add
daa
jmp
jns
fs
test
add
adc
mov
and
pop
iret
jecxz
mov
or
sahf
les
cmp
aam
xacquire
and
sub
add
mov
pushw
xor
inc
imul
gs
jl
mov
imul
imul
jge
mov
sbb
cmp
aam
inc
lods
loopne
std
mov
(bad)
mov
cwde
movs
nop
mov
sub
ins
inc
jle
shl
(bad)
add
sbb
sbb
test
adc
adc
xor
mov
sahf
imul
push
in
loopne
inc
xor
bound
adc
js
pushf
fmul
or
push
mul
ret
mov
push
ds
je
rcr
xchg
in
mov
arpl
jne
test
inc
and
fimul
mov
leave
jne
cmp
into
inc
add
push
movs
rol
push
test
(bad)
sbb
fisttp
sub
and
or
xor
push
add
jb
xlat
inc
pusha
xchg
push
mov
push
xchg
pop
jnp
test
ins
or
dec
xor
inc
or
push
mov
test
or
add
adc
cmp
add
pop
enter
push
push
adc
inc
cmp
inc
add
mov
xchg
push
push
dec
mov
push
imul
adc
nop
sahf
add
in
or
inc
sbb
pop
sub
int3
gs
inc
minps
ss
sti
int3
cs
repnz
adc
ins
mov
ret
mov
cmp
jne
mov
dec
movs
pop
xor
dec
test
pop
inc
test
lds
pop
push
jp
test
add
adc
xor
pop
cmp
imul
call
pop
push
mov
lea
scas
aas
call
dec
mov
cmps
fisubr
xor
adc
and
test
ins
scas
jmp
and
adc
mov
mov
sub
or
push
push
inc
movs
ss
push
and
imul
and
and
mov
adc
add
inc
or
dec
dec
push
push
inc
movs
adc
push
(bad)
in
pop
push
ins
inc
mov
lods
cmp
ret
mov
pop
hlt
add
cmp
jne
out
jne
jmp
sbb
mov
popf
ror
adc
and
add
sub
test
mov
add
xor
jbe
jae
dec
loopne
adc
out
fidivr
cmp
xor
sub
and
lods
adc
dec
ret
jbe
(bad)
or
add
cmp
xchg
add
arpl
cmp
div
sbb
movs
loop
xor
xchg
out
rol
test
inc
xor
mov
or
test
xor
sub
adc
(bad)
sti
ins
test
push
(bad)
add
mov
or
pop
adc
cmp
cmova
jnp
mov
call
xor
sub
hlt
rcr
inc
push
movs
mov
pop
lea
push
dec
fcomp
mov
cmp
and
xchg
jmp
fs
cmp
lock
pusha
(bad)
or
adc
or
pop
das
sbb
sub
nop
sbb
lea
in
jle
adc
nop
stos
popf
in
or
cmp
ret
push
xor
stos
fs
mov
loop
inc
rcr
fcom
or
mov
and
lods
dec
mov
xchg
lock
sahf
mov
or
adc
rcr
sub
das
call
inc
xor
sbb
xor
lds
xchg
pop
sbb
add
mov
pop
rcl
pop
movs
mov
jne
push
fstp
jmp
cmp
sbb
(bad)
xchg
(bad)
fidivr
inc
add
div
ret
sbb
rol
mov
xor
clc
or
xlat
(bad)
pop
push
ds
les
call
add
mov
paddsb
sbb
mov
es
sub
push
mov
xor
ror
pop
inc
popa
movs
pop
mov
cmovl
push
mov
xor
pop
push
fistp
sub
adc
je
mov
cmp
mov
sub
sbb
outs
loope
or
enter
mov
mov
(bad)
daa
nop
je
loope
sub
mov
into
push
fdiv
mov
cdq
mov
call
loopne
in
ret
scas
sti
xchg
or
mov
push
push
rcr
loope
in
sbb
clc
aad
js
in
mov
mov
js
pop
bound
inc
pop
call
lds
ret
test
mov
cmp
ja
and
jle
out
lock
ins
pop
test
faddp
retf
in
xor
daa
mov
mov
mov
add
or
cmps
sub
dec
mov
fmul
push
fprem1
or
dec
mov
pop
mov
out
aad
and
add
jl
loope
lahf
das
je
pop
fcomp
daa
pop
cwde
or
inc
das
nop
or
xor
xor
lods
sub
nop
or
mov
ja
je
adc
dec
mov
test
push
dec
daa
movs
sbb
and
ss
mov
pop
les
movs
idiv
jno
and
or
popfw
enter
push
out
push
dec
popf
push
daa
(bad)
push
adc
dec
popf
rcr
and
outs
pop
push
mov
mov
mov
lods
jle
jmp
jp
push
push
sbb
inc
fs
lds
and
out
sbb
les
dec
call
clc
jnp
or
sub
sub
adc
imul
inc
repz
and
aaa
add
and
shl
inc
daa
inc
jge
adc
dec
inc
jo
inc
cmp
cmp
mov
cmp
sub
bnd
pop
in
inc
leave
js
fstp
jmp
xor
jmp
ss
xchg
jg
(bad)
push
or
xchg
(bad)
dec
aas
sub
ins
cmp
sbb
cmps
or
push
and
mov
fiadd
mul
xor
push
jno
sbb
lods
mov
(bad)
xor
sbb
dec
(bad)
lock
clc
jmp
ret
push
sub
mul
sbb
mov
xchg
or
cmp
outs
inc
push
movs
std
nop
dec
jne
into
inc
inc
int
add
int3
lahf
xor
data16
dec
(bad)
jmp
retf
sbb
push
adc
call
sub
jmp
aam
jge
addr16
jmp
iret
adc
pop
xchg
jo
fs
dec
mov
dec
rcl
sub
xor
cwde
sub
cmp
xor
fmul
lds
xchg
adc
and
js
movs
adc
pop
pop
and
mov
loopne
mov
dec
sub
aam
and
retf
jae
test
daa
or
mov
adc
mov
push
loopne
jns
les
sub
sbb
inc
loop
push
jne
ret
jecxz
push
shr
aaa
jl
dec
xor
mov
pop
arpl
outs
nop
test
cmp
mov
sub
(bad)
push
push
mov
fnstenv
xor
fld
cmp
mov
fist
rol
retf
adc
leave
mov
jl
and
daa
rol
popa
sbb
pop
mov
add
dec
push
add
out
add
adc
sbb
std
dec
sbb
jp
pop
test
in
push
adc
pop
mov
xchg
fdivr
lock
scas
pop
repz
(bad)
hlt
cld
and
iret
push
pop
pop
sbb
pop
nop
fistp
ins
outs
adc
jne
push
repz
and
fdiv
jno
in
adc
push
dec
dec
and
push
fwait
push
div
pop
sub
and
inc
xor
cmp
dec
push
push
mov
push
nop
ja
sbb
mov
pop
jo
test
mov
or
xor
push
scas
rol
(bad)
push
add
ss
popa
addr16
rol
and
int
ret
mov
fwait
or
jne
addr16
push
mov
cmps
pop
or
and
pop
loopne
ins
jle
xor
inc
or
loop
loopne
mov
pop
bound
lods
jge
push
and
adc
or
jge
fild
daa
jle
adc
jno
ds
cli
pop
mov
mov
push
pushf
add
xchg
sbb
pop
sbb
inc
xchg
mov
sbb
mov
inc
aam
pop
cld
or
addr16
mov
cmp
or
dec
add
hlt
stos
cmp
jo
aas
mov
add
outs
dec
cmp
sbb
adc
arpl
sub
mov
xor
scas
cmp
ret
fyl2xp1
sbb
mov
ror
popf
or
add
ret
clc
xchg
mov
mov
loope
inc
cwde
in
out
pushf
movs
es
cwde
dec
(bad)
xchg
mov
(bad)
fld
fisttp
dec
cmp
xor
mov
loopne
ret
jmp
adc
push
pop
(bad)
sbb
mov
inc
mov
pop
push
xor
mov
inc
inc
push
fs
lods
call
aas
inc
cmp
or
add
idiv
mov
inc
ins
pop
dec
ins
fild
jbe
ss
push
ins
cwde
adc
inc
and
jne
jno
fxtract
and
pop
clc
add
sbb
bound
xor
stc
cwde
pop
aaa
or
xchg
cwde
dec
or
mov
cmp
fs
inc
stc
fs
(bad)
jne
fsub
jo
or
add
xor
test
mov
pop
mov
(bad)
xlat
add
jnp
in
adc
xor
xor
popa
or
loopne
mov
cmp
es
imul
pop
(bad)
mov
mov
inc
scas
rol
add
lods
cmp
mov
xchg
jo
and
cmp
inc
js
push
cdq
cmp
sub
jge
xor
repz
fs
sbb
pop
aas
pop
shl
adc
jge
mov
(bad)
aam
inc
pop
retf
adc
sahf
ins
cmp
dec
add
mov
jp
mov
int3
loopne
test
xchg
sub
call
add
dec
adc
inc
sbb
or
add
pop
ret
jb
mov
jne
das
ret
fcomp
add
push
aas
add
adc
xor
data16
lock
cmp
push
sub
out
mov
xor
(bad)
bound
jge
in
jmp
sub
mov
int
(bad)
mov
in
and
mov
push
inc
adc
jmp
adc
dec
jp
push
into
push
aam
mov
push
idiv
add
adc
(bad)
xchg
movs
test
sti
popf
(bad)
imul
not
nop
push
mov
std
add
cs
inc
add
push
iret
call
fdivr
les
jno
js
push
adc
push
xor
or
inc
dec
sti
push
mov
inc
inc
dec
loopne
je
inc
add
add
mov
add
push
lock
mov
push
dec
jmp
xor
sbb
or
inc
inc
dec
inc
cld
and
cld
arpl
inc
dec
stc
fcom
fmul
inc
jecxz
sbb
cmp
sbb
push
pusha
cmp
pop
or
or
sbb
dec
adc
aas
pop
popf
loope
adc
mov
sbb
mov
arpl
js
jmp
mov
dec
(bad)
xor
shl
enter
addps
and
punpckhdq
xchg
les
daa
xor
sbb
sub
jb
js
pop
cmp
cmp
and
xlat
xchg
mov
fist
sub
or
adc
push
push
pop
mov
inc
test
and
inc
icebp
cmp
add
xor
clc
sub
and
jmp
jg
mov
xchg
sti
scas
cdq
add
ins
mov
add
add
cmp
add
xchg
outs
test
cmp
jns
out
jmp
mov
push
dec
sti
aad
(bad)
clc
sbb
sbb
(bad)
xor
push
cmp
test
pop
or
add
aaa
mov
mov
sub
and
adc
ja
xlat
inc
fadd
add
cld
jns
(bad)
arpl
or
(bad)
(bad)
jg
pop
jg
ins
cmps
sbb
xor
add
lea
ret
mov
cmp
sti
jmp
cmc
(bad)
enter
jne
movs
repnz
push
sbb
dec
cdq
xor
cmps
sbb
gs
loope
sbb
pop
stc
out
push
sub
sbb
sbb
loopne
jp
les
mov
xor
imul
clc
add
push
add
es
out
ins
cwde
iret
les
outs
adc
dec
adc
test
adc
sbb
sbb
sub
pop
in
mov
push
dec
popa
sbb
in
loopne
cmp
push
and
jno
sub
test
or
adc
xor
ins
mov
aas
inc
outs
ins
(bad)
movs
adc
and
or
scas
mov
mov
es
shl
out
jecxz
xor
sbb
inc
xchg
mov
in
inc
mov
adc
popa
rcr
jge
outs
and
sbb
iret
push
push
add
xor
lock
ret
mov
pop
inc
pop
inc
adc
jmp
clc
lock
mov
jne
sub
in
and
inc
pop
dec
mov
cmp
loope
add
ss
push
bound
mov
into
dec
lea
pop
hlt
js
mov
imul
sbb
and
jmp
call
sbb
jmp
pusha
mov
inc
cwde
mov
or
inc
pop
push
gs
cli
in
pusha
sbb
push
mov
fcomp
dec
shl
popf
add
aam
aad
sub
cld
add
jns
adc
cmp
stos
and
jp
je
add
or
add
iret
add
(bad)
adc
inc
dec
adc
loopne
xchg
mov
xor
in
mov
movs
popf
or
ret
sub
movs
and
std
cmc
les
and
adc
dec
pop
dec
inc
(bad)
retf
dec
and
pop
cmp
imul
lds
lock
push
push
rol
inc
mov
add
pop
sbb
add
inc
add
movs
(bad)
and
xchg
rol
inc
add
lahf
sub
jmp
push
pusha
in
jle
sub
sbb
mov
out
inc
pop
mov
cmp
or
and
mov
mov
popa
and
or
inc
push
xchg
cld
and
rcl
lds
adc
scas
popf
mov
pusha
mov
lea
xchg
pusha
adc
ins
or
pop
adc
or
inc
nop
add
fistp
xor
or
mov
das
lock
in
add
sub
adc
call
add
es
addr16
in
push
dec
xchg
mov
lock
add
xchg
sbb
cmp
cwde
add
push
inc
adc
nop
dec
jmp
add
adc
xor
and
(bad)
fldcw
ffreep
adc
lods
mov
int
repnz
inc
inc
add
fsub
xor
mov
ret
pop
adc
loop
fwait
jg
retf
jno
mov
mul
retf
pop
lods
jae
push
sbb
mov
sub
in
dec
adc
das
add
cmp
das
lods
lds
mov
add
xchg
jmp
xchg
mov
test
sar
jns
adc
add
push
daa
inc
pop
or
xor
add
aaa
pop
pop
jne
add
hlt
inc
loope
mov
xchg
or
iret
popf
cmps
pusha
mov
push
lock
pop
push
xchg
dec
daa
mov
aaa
mov
(bad)
movs
push
outs
dec
mov
loopne
xchg
dec
and
jno
or
fcomp
dec
push
pop
push
outs
push
or
jmp
mov
adc
pop
mov
sbb
mov
popa
jae
xchg
fs
(bad)
shr
mov
inc
shl
inc
xor
and
jmp
rol
and
xor
push
stos
dec
mov
mov
fnstsw
out
adc
cdq
movs
aam
mul
pop
lds
adc
push
inc
es
mov
ret
nop
push
dec
dec
pop
add
adc
mov
sub
mov
inc
adc
sbb
lea
sbb
or
clc
pop
cmps
aam
sub
jnp
mov
sar
xchg
adc
push
and
push
sub
and
test
xor
loope
add
cs
xchg
dec
push
xlat
adc
mov
cmp
push
push
fstp
gs
sub
test
jl
xor
xchg
enter
pop
cs
imul
sbb
pop
cmp
out
sbb
(bad)
sbb
adc
or
nop
push
or
fsubr
(bad)
enter
fcomp
or
(bad)
ins
or
sahf
push
shr
sbb
das
push
imul
in
ss
push
dec
add
mov
xor
pusha
mov
mov
push
and
test
adc
xchg
mov
adc
leave
ja
loopne
dec
lods
add
xchg
xchg
call
mov
dec
dec
push
sbb
adc
adc
or
inc
push
int
xor
ret
fdiv
fadd
sahf
sbb
adc
cmp
push
xchg
mov
push
fld
loopne
inc
add
inc
dec
fistp
add
mov
dec
inc
bound
js
push
ror
jl
loope
push
inc
int
pop
push
push
outs
clc
test
cli
stos
jle
push
popa
(bad)
pop
icebp
sub
jo
pop
mov
dec
and
and
sbb
cdq
adc
and
add
dec
push
cwde
or
push
or
int3
leave
pop
popa
or
pop
nop
cmps
fldcw
push
sub
add
xor
leave
jmp
add
pop
sbb
aaa
jno
lock
rcr
inc
loopne
pop
scas
test
xor
push
push
adc
repnz
adc
(bad)
xor
popa
jmp
(bad)
push
sub
inc
cwde
les
dec
inc
sahf
push
lods
jno
mov
mov
in
and
jne
and
xlat
pop
lock
inc
sub
sub
int3
lea
pop
xor
xor
and
dec
jbe
mov
dec
mov
fwait
inc
outs
xor
dec
jae
cmp
shl
(bad)
jne
pop
das
loope
dec
pop
and
fistp
mov
jl
add
sbb
sub
fistp
rol
retf
mov
dec
add
outs
dec
jecxz
mov
scas
jmp
push
pop
adc
add
add
push
adc
dec
push
(bad)
bound
add
mov
fs
dec
cmp
mov
push
sub
je
pop
daa
mov
push
push
in
es
add
ja
mov
cmps
out
cmp
mov
pusha
push
pusha
lods
pop
jae
jp
cmp
aad
add
and
outs
mov
arpl
inc
push
and
push
scas
pusha
in
or
pop
je
minps
popa
and
push
sbb
jbe
js
retw
pop
movs
sbb
out
ret
pusha
sub
mov
add
cmp
inc
or
pushf
call
or
push
sub
movs
(bad)
lsl
cmp
addr16
mov
movs
ss
repnz
data16
xchg
icebp
into
xor
pop
adc
mov
or
cmp
or
retf
xchg
enter
sub
mov
or
aaa
pop
cld
je
popa
xor
mov
adc
test
in
or
sbb
sub
dec
or
and
ror
gs
xor
ret
clc
jne
mov
and
jmp
cmps
iret
clc
mov
dec
or
sbb
add
rcr
or
test
js
add
push
mov
sar
std
xchg
jb
mov
imul
jg
push
pusha
adc
cmp
add
rol
or
in
and
xchg
in
and
or
add
dec
push
xor
lock
ss
jno
jbe
ss
es
pop
lahf
pop
push
clc
and
jg
adc
scas
mov
out
xor
icebp
and
scas
and
retf
xchg
sub
sbb
sbb
scas
pop
push
push
mov
sub
into
unpckhps
pop
and
xor
inc
mov
jnp
aam
and
jo
aas
aad
mov
retf
jle
add
adc
and
adc
push
and
jmp
adc
xchg
sbb
loope
rol
inc
test
inc
fcom
cmp
sub
jle
cmp
sub
cmp
push
pushf
jbe
mov
pop
int3
and
add
cdq
adc
jmp
sbb
test
inc
pop
or
or
inc
or
test
sub
xchg
mov
inc
ins
push
lods
add
js
push
pop
mov
inc
imul
jo
jne
les
das
or
test
retf
pop
adc
or
mov
mov
or
pop
ss
and
sbb
mov
repnz
pop
cmp
jl
or
movs
sbb
sub
jg
jmp
push
pop
dec
dec
cs
push
xor
mov
mov
dec
iret
je
in
sbb
sub
and
stos
call
in
adc
and
or
idiv
add
sub
nop
(bad)
jl
test
adc
test
iret
push
cmp
sbb
sbb
in
push
cmp
jo
sahf
and
xor
popa
cmp
jo
dec
xchg
cli
push
(bad)
ja
or
push
push
jb
pop
push
test
adc
lock
pushf
ss
mov
sub
lock
push
push
lahf
mov
les
sub
and
popf
hlt
les
popf
outs
mov
jne
sub
cmp
sub
in
mov
int3
dec
fwait
sub
add
adc
sub
mov
and
fst
sti
xor
outs
lods
cld
push
pop
adc
ds
pop
push
cli
leave
jmp
lock
adc
add
mov
lods
out
push
adc
and
adc
sub
xchg
ret
adc
imul
inc
es
or
mov
mov
mov
mov
push
bound
xchg
sub
add
push
repnz
inc
dec
daa
sub
add
cmp
and
add
adc
ja
icebp
das
sub
adc
mov
mov
call
or
inc
xor
push
xor
adc
or
scas
or
jo
inc
inc
cld
(bad)
and
call
jno
cmp
pop
clc
cdq
outs
dec
push
mov
fisttp
pop
shl
mov
loopne
inc
loopne
in
jnp
cmp
sub
inc
pop
jmp
adc
xchg
mov
jmp
add
or
sbb
sbb
enter
ins
pop
cld
push
and
sub
out
inc
mov
rol
jo
push
xchg
(bad)
ins
or
xchg
scas
xor
sbb
cmp
daa
jg
adc
pop
pop
cmp
aam
jge
inc
or
test
push
and
pop
mov
ror
add
adc
pop
outs
arpl
cmps
mov
push
mov
mov
or
mov
mov
dec
cmp
mov
mov
sub
inc
adc
rol
jg
jne
sahf
and
adc
push
or
and
sbb
sbb
fs
and
dec
jmp
add
cld
cmps
adc
rdpmc
cwde
in
sbb
enter
cli
stos
xchg
dec
pop
or
and
fist
add
sbb
sbb
cmp
aad
and
cmp
es
jg
pusha
pusha
adc
adc
cdq
sbb
dec
je
in
loopne
je
ins
sub
test
inc
xchg
dec
fisubr
add
sbb
mov
inc
push
rcl
cmp
jge
jle
mov
add
int
fsubr
aaa
test
mov
and
iret
nop
mov
pushf
aam
leave
xor
in
movs
dec
sahf
or
add
test
in
xchg
lods
xor
xchg
imul
rol
add
out
pop
add
addr16
mov
scas
and
push
jmp
int3
mov
push
ins
ins
cmp
mov
dec
mov
pop
push
adc
dec
mov
nop
push
ret
fiadd
pop
and
das
push
imul
xor
push
test
shr
mov
mov
inc
das
inc
in
inc
out
add
popa
ins
add
dec
jae
pop
test
sub
aas
pop
jno
cld
retf
cmc
cmc
sbb
push
xchg
es
mov
push
fild
xchg
push
adc
into
add
mov
push
mov
loopne
int
jl
and
add
cmp
mov
test
jl
or
ret
sub
push
adc
or
and
push
adc
push
popf
inc
fild
loop
ret
xor
jl
or
add
push
ror
mov
popf
nop
mov
adc
(bad)
(bad)
sub
sub
add
pop
push
mov
dec
imul
push
sub
cwde
dec
je
inc
cs
or
test
pop
cmp
ror
leave
jns
enter
test
cmp
arpl
in
loope
arpl
xchg
mov
sbb
inc
jecxz
and
mov
enter
mov
lods
pusha
lea
sbb
sub
xor
out
imul
jl
outs
cmp
inc
push
sbb
and
mov
fadd
into
ja
mov
sub
dec
lods
mov
mov
or
sub
mov
js
mov
mov
enter
(bad)
ins
stc
rcr
push
ror
cmp
or
lock
test
lahf
or
dec
rcr
xchg
mov
pop
xlat
frstor
data16
push
ja
outs
or
and
pop
stc
aas
push
pop
test
aas
xor
int
dec
cmp
ror
pushf
cmp
mov
(bad)
push
jg
dec
sar
test
pushf
jbe
pop
lahf
into
iret
sub
jae
xor
and
xchg
add
and
inc
inc
pop
cwde
or
das
in
xor
xor
cmp
in
nop
and
add
cmps
sbb
pop
jle
pusha
jns
cld
xor
test
inc
sbb
push
sub
sbb
add
jo
pop
pop
pop
nop
ds
idiv
(bad)
out
retf
aam
imul
push
sbb
sub
adc
mov
test
pop
add
outs
in
shl
idiv
mov
lea
mov
adc
scas
and
xor
mov
ss
push
adc
push
push
out
push
cmp
inc
popa
lods
loopne
call
push
add
pop
xchg
call
lock
adc
adc
retf
lods
mov
push
ds
sub
add
mov
ss
pop
fs
fs
mov
inc
sahf
and
cmps
mov
sub
mov
leave
add
or
aaa
aaa
add
xor
mov
xchg
aaa
inc
pop
mov
xor
inc
push
and
sub
inc
xor
dec
add
fwait
and
in
inc
loop
js
or
or
mov
sahf
pop
sub
lods
push
add
dec
mov
xor
cmp
sbb
inc
leave
test
out
xor
inc
push
pop
and
push
test
sub
cmps
or
add
add
xor
ror
or
adc
mov
and
push
add
test
push
pop
int
sub
pop
enter
add
ficom
pop
sbb
xor
ins
push
cmp
lods
call
sbb
pop
test
inc
jmp
adc
aaa
mov
rol
ins
adc
sub
arpl
push
icebp
and
xor
nop
aas
out
pop
(bad)
push
lea
inc
dec
adc
or
dec
pop
push
sub
and
sub
sub
xor
movs
cmp
mov
add
(bad)
ins
dec
fisttp
(bad)
movs
jnp
adc
sub
dec
loop
neg
test
(bad)
push
int3
add
mov
and
push
adc
push
sbb
pusha
mov
or
fs
dec
xchg
aas
push
sbb
inc
add
ss
test
xor
add
mov
or
aam
call
mov
and
add
sbb
imul
jmp
or
mov
addr16
or
pop
xor
inc
sub
or
popf
and
rdmsr
scas
rol
xor
xor
adc
mov
lock
enter
cwde
fnsave
or
cmp
cmp
loop
mov
push
std
cmp
jne
jle
inc
sar
jle
shl
xor
mov
pop
add
inc
mov
pop
pop
or
lods
loopne
fmul
cmp
adc
int
dec
adc
dec
jo
mov
inc
scas
mov
dec
xchg
sub
push
lock
or
adc
aam
les
adc
adc
jo
mov
cmc
xchg
in
std
or
dec
loop
and
je
sub
push
and
sbb
adc
cmp
and
adc
xor
enter
xchg
push
ins
mov
sub
dec
js
shr
jb
shl
cmps
popf
sahf
sbb
aas
push
dec
sbb
push
push
adc
mov
cs
daa
inc
dec
add
into
pop
cmp
mov
and
jecxz
cmp
adc
dec
jmp
das
inc
arpl
retf
adc
inc
dec
mov
pop
xchg
push
inc
and
sub
fwait
or
push
pop
adc
add
fwait
inc
mov
stos
imul
imul
les
mov
adc
xchg
mov
test
mov
mov
jae
add
push
sub
dec
pop
xchg
gs
dec
dec
cmp
cmp
push
sub
cmp
push
arpl
or
xor
retf
daa
sti
push
retf
adc
aaa
(bad)
mul
fmul
movs
je
in
fbstp
pop
movs
xor
adc
out
sub
add
rol
cmp
xor
pop
imul
rcl
inc
mov
adc
adc
dec
jne
test
or
pop
out
push
cwde
jge
push
jnp
pusha
mov
push
cmps
movs
inc
pop
jne
sub
sub
je
push
sahf
rcl
adc
inc
push
fistp
push
in
and
rcl
cmp
sbb
ds
mov
pop
cmp
mov
jmp
sub
dec
ret
ror
int3
fstp
mov
test
or
jmp
js
ret
stc
sar
mov
xor
enter
shl
iret
js
int
shr
popa
pop
(bad)
pushf
mov
jle
inc
je
aas
test
jo
es
aas
dec
push
dec
push
jl
jl
inc
nop
inc
outs
or
cdq
mov
je
jne
dec
enter
mov
mov
jl
inc
xchg
or
jo
and
imul
mov
test
addr16
sahf
cmp
and
xor
dec
xor
inc
test
fcmovnu
jae
ror
adc
mov
scas
push
cmp
sti
or
and
inc
outs
fisub
lea
adc
pusha
pop
dec
add
(bad)
out
sbb
lods
or
mov
sbb
sti
add
cmp
cmp
aaa
pop
sbb
lods
add
push
data16
inc
pop
or
sub
or
mov
jne
rcr
pusha
and
rcl
sbb
outs
inc
add
pusha
loop
test
pop
sar
xor
pusha
adc
add
xlat
xchg
adc
(bad)
out
sbb
mov
adc
daa
call
fwait
mov
dec
repnz
inc
ror
add
(bad)
call
mov
push
mov
xor
rol
jp
add
pop
push
call
pop
(bad)
stos
push
push
cmp
sar
sbb
add
inc
mov
popa
push
daa
fcmovnb
div
neg
inc
neg
dec
dec
pushf
push
pop
xor
push
fcom
xchg
(bad)
dec
mov
pop
movs
jbe
push
push
adc
imul
sub
sub
scas
or
loopne
int3
pop
je
dec
(bad)
mov
mov
je
int3
out
pop
retf
mov
inc
xchg
add
mov
pusha
or
pop
mov
out
sub
mov
mov
shr
ja
out
mov
cmp
or
dec
movs
dec
sbb
xor
push
je
shl
adc
fstp
dec
adc
mov
xor
pop
or
jl
cmp
stos
push
push
xor
jge
mov
mov
inc
cmp
bound
add
ffree
sbb
or
or
jmp
xchg
cwde
ins
es
mov
adc
popf
movzx
lods
add
and
daa
xor
in
jmp
dec
pop
dec
sbb
inc
js
and
dec
mov
xor
adc
out
inc
mov
test
mov
ret
lahf
jmp
push
pusha
rcl
lock
mov
ds
test
inc
ja
xchg
sbb
mov
sub
fldenv
bound
or
adc
xor
xor
mov
out
(bad)
fbld
cmp
cmp
push
mov
xlat
xchg
(bad)
dec
test
xchg
or
and
inc
sub
jmp
icebp
or
fcom
xchg
xor
push
fs
popa
add
add
test
cmp
lods
fld
inc
or
push
fisttp
jae
push
push
stos
stc
mov
adc
fdivr
jmp
enter
sbb
mov
jecxz
cmp
pushf
pop
dec
cmp
movs
xchg
cmp
or
lock
mov
push
jnp
xchg
dec
daa
inc
hlt
mov
cmp
lock
dec
add
retf
xor
dec
rcr
pusha
and
loopne
cmp
mov
pop
push
or
pop
iret
adc
adc
sbb
cmp
iret
dec
add
pop
or
cmp
fisub
cdq
jmp
adc
retf
adc
push
test
int
std
popa
lea
mov
outs
and
cmp
jae
mov
(bad)
cmps
sub
add
jle
imul
cmps
fadd
ss
xchg
imul
dec
sub
aam
mov
icebp
xchg
inc
adc
cli
push
bound
loope
aas
xchg
cmp
(bad)
loopne
xor
push
dec
push
test
add
xor
jmp
mov
inc
mov
or
bound
out
push
adc
pop
dec
mov
aaa
adc
aaa
inc
pop
xchg
mov
mov
sub
mov
mov
sub
cmp
or
sub
xor
inc
cmp
ret
fs
push
mov
pop
loop
and
popa
rcr
push
cwde
xchg
push
js
test
sti
outs
mov
inc
dec
arpl
mov
loop
les
push
xchg
cs
stos
xchg
xchg
add
xchg
jmp
add
call
pushf
mov
loop
in
sbb
in
adc
push
add
cmc
stos
in
movs
sub
hlt
cmp
and
sub
jae
adc
icebp
jbe
test
(bad)
in
int3
sbb
adc
gs
add
in
dec
lahf
fbstp
int3
imul
ret
popa
fucomp
mov
in
mov
push
sub
pop
call
call
daa
mov
loopne
mov
icebp
jp
pop
and
mov
push
mov
leave
xlat
scas
xor
(bad)
pop
mov
and
cli
ror
(bad)
sti
test
adc
inc
pop
aas
jne
sub
es
inc
jns
pop
push
add
mov
or
fiadd
inc
mov
cmc
pop
inc
inc
ret
push
test
cmp
lods
xor
or
jmp
sub
add
mov
cmp
sbb
ins
pop
dec
inc
cmp
sub
inc
mov
test
pop
or
add
push
lds
push
cmp
adc
cmp
adc
jl
pop
sub
sbb
sar
push
pop
je
mov
adc
aam
(bad)
ja
retf
je
adc
xor
in
push
les
test
shr
inc
xor
sub
xchg
mov
(bad)
dec
jmp
sub
js
(bad)
(bad)
xor
(bad)
in
loopne
addr16
adc
cmp
data16
retf
fisttp
xor
dec
ror
js
add
dec
or
pusha
loope
das
pop
sahf
cmp
inc
adc
mov
push
and
iret
test
jae
lods
xor
out
scas
mov
les
cdq
inc
mov
jmp
xchg
test
test
add
sub
stc
mov
inc
(bad)
cmp
gs
mov
dec
hlt
mov
adc
test
inc
nop
jns
aaa
shl
push
or
les
jns
dec
sub
pop
push
jge
push
test
and
push
adc
add
lahf
rcl
mov
jne
adc
pusha
push
cmp
les
je
dec
inc
mov
loop
xor
fistp
rcl
mov
or
outs
and
stos
or
sbb
mov
popa
sbb
inc
lock
push
add
dec
add
push
pushf
sbb
sbb
imul
nop
mov
cs
push
in
cmp
ret
sub
or
xchg
arpl
push
sbb
and
push
pop
pop
jno
call
loopne
jmp
and
xor
push
data16
add
adc
or
dec
add
pop
inc
imul
scas
adc
or
(bad)
in
clc
add
pusha
pop
test
rol
repz
mov
in
aas
loope
loope
in
arpl
dec
imul
jnp
dec
inc
pop
loopne
push
aas
ret
push
int
cmp
loope
xor
fucomip
pop
cwde
push
shr
pop
pop
xchg
xchg
xor
in
push
les
xlat
sbb
lea
bound
in
fmul
ror
jl
ja
cmp
sbb
das
test
loop
adc
jns
ror
cmp
pusha
fsubr
fidivr
sub
cmp
push
sub
out
and
lock
dec
in
mul
dec
cmp
(bad)
fdivr
or
xchg
adc
ror
cs
mov
cmovae
gs
add
lock
inc
push
mov
pop
add
ins
mov
imul
pop
add
outs
imul
push
jmp
int
inc
sbb
loope
sub
xchg
test
cwde
pop
sub
sbb
and
repnz
test
and
mov
outs
ret
(bad)
push
xchg
mov
cld
cmp
jne
jle
ins
xchg
cmc
dec
mov
dec
iret
arpl
rol
xchg
cmp
enter
jmp
mov
sub
bnd
push
pop
push
push
push
loopne
popa
cmp
mov
cmc
sbb
cmp
mov
jbe
adc
push
sub
adc
mov
sbb
xchg
mov
out
imul
mov
sbb
xor
pop
clc
add
xchg
ret
push
(bad)
sar
dec
cmp
(bad)
and
sbb
es
sub
and
or
add
aaa
add
cmp
les
add
fsub
add
add
movs
das
or
inc
inc
dec
dec
(bad)
outs
inc
mov
inc
mov
aam
pop
imul
and
pusha
retf
aaa
(bad)
loopne
or
jb
add
push
push
in
jle
adc
xchg
retf
retf
add
fsub
pop
push
bound
ins
sti
ins
push
dec
shl
pop
scas
adc
pusha
push
xchg
movs
mov
movups
sbb
sub
fidivr
fild
aam
mov
sbb
jns
arpl
push
cs
stos
outs
dec
sub
sbb
icebp
clc
ins
or
adc
add
cmp
adc
inc
lods
push
jmp
ficomp
cwde
fiadd
adc
aam
loop
in
ins
and
jmp
mov
retf
fs
adc
in
loopne
or
or
addr16
push
das
fbld
jo
mov
add
shr
movs
sub
inc
mov
rol
test
pop
jno
(bad)
jae
push
push
shl
sub
push
movs
les
cs
in
(bad)
jne
adc
lods
push
inc
push
test
pmullw
js
les
sub
push
push
les
mov
call
pop
or
call
repnz
push
and
xchg
in
xchg
cmp
scas
xchg
pop
les
outs
xor
push
xlat
pusha
pop
pop
jbe
pusha
je
sbb
and
cmp
call
in
call
cmp
adc
in
sbb
xor
mov
je
sbb
mov
inc
repnz
gs
mov
pop
inc
pop
imul
ds
mov
or
inc
ins
imul
dec
cmp
repz
add
push
dec
push
(bad)
aam
test
sub
sub
enter
cmp
mov
aam
inc
dec
add
mov
aas
in
popf
inc
jbe
jno
pop
or
inc
or
push
xchg
fsubr
inc
in
xchg
inc
inc
add
repnz
and
jne
adc
add
xchg
cmp
dec
or
cmp
clc
js
test
push
xchg
and
or
imul
pusha
push
push
dec
push
cmp
xor
in
test
sbb
enter
bswap
or
mov
pop
cmp
ins
or
add
adc
jno
cmp
cwde
movs
sbb
rol
call
xchg
jl
shl
or
dec
adc
or
add
in
add
cwde
cwde
sbb
mov
and
push
je
pop
and
mov
adc
sub
fidiv
mov
mov
aad
xor
pop
test
lods
mov
mov
(bad)
(bad)
call
les
aaa
cmp
push
push
lods
jge
mov
lods
arpl
inc
pop
adc
popa
nop
add
xor
pushf
cs
stos
fild
mov
mov
jl
sub
xchg
pop
js
test
cmp
sbb
pop
test
mov
or
stos
fcomp
push
or
mov
add
xchg
cwde
add
add
push
add
bound
(bad)
das
sbb
fisub
push
add
fnstcw
or
or
scas
jmp
push
jnp
into
shl
or
push
inc
scas
add
add
or
pusha
dec
call
enter
or
cmc
or
nop
fsub
andps
mov
sbb
lods
pop
sar
or
retf
jo
aad
test
push
push
das
cmp
pop
adc
xor
je
fstp
mov
imul
add
sbb
xor
xchg
jae
add
sub
sbb
mov
enter
jo
frstor
pusha
out
sbb
and
push
sbb
int
ror
push
and
(bad)
and
and
jbe
pop
push
push
pop
fdivr
mov
pop
enter
add
jo
nop
push
pop
and
sub
cmp
adc
push
jb
pusha
mov
adc
popa
push
or
xchg
and
and
mov
xor
fisttp
ins
or
inc
imul
and
ficom
call
addr16
dec
or
or
popa
dec
pop
adc
jo
jo
push
inc
gs
xchg
jmp
fadd
fdivr
imul
sbb
jg
mov
adc
mov
ins
xlat
inc
ds
movs
sbb
push
cmc
xchg
cmp
and
xor
xor
ss
cmp
xor
inc
jmp
inc
dec
dec
dec
dec
dec
dec
dec
dec
sub
pop
push
push
push
push
push
dec
mov
aam
mov
retf
push
movs
adc
cmp
xlat
sub
dec
in
test
mov
fsub
js
push
and
mov
sub
out
add
xor
mov
and
std
int
cmp
ja
sti
and
add
add
sub
and
out
mov
js
and
mov
mov
mov
xchg
out
repz
(bad)
pop
push
inc
stos
popa
call
xchg
xor
(bad)
sbb
ret
movs
sbb
loopne
mov
pop
(bad)
call
dec
clc
jge
add
jbe
xchg
add
mov
in
xchg
sahf
dec
mov
sahf
pop
jle
cmc
pop
leave
push
inc
jge
shr
xchg
out
and
imul
lahf
sar
sub
pop
cli
push
sbb
fs
test
or
lea
aad
cmps
test
and
sti
add
cmp
push
xor
loope
jns
fidiv
cmp
dec
cmp
inc
dec
pusha
sub
dec
call
push
inc
sub
fs
(bad)
xchg
push
das
jmp
jmp
xchg
or
dec
fwait
shl
aas
(bad)
sar
sbb
inc
jb
and
cmp
sbb
cmps
adc
pop
xchg
inc
xchg
push
cmc
icebp
test
jb
outs
hlt
push
push
or
adc
push
inc
les
and
pop
jbe
adc
bswap
ins
inc
fwait
mov
jle
jmp
jnp
pop
add
cmp
jo
iret
and
jge
prefetch
pop
and
dec
aaa
or
out
mov
in
jo
inc
jmp
pusha
inc
xor
cmp
popf
dec
jmp
pop
sahf
sub
mov
cmovp
push
and
sub
sti
jmp
push
(bad)
fisttp
inc
arpl
push
add
cmps
add
divps
fdiv
dec
push
mov
mov
and
and
dec
ret
push
inc
dec
clc
jo
pop
xchg
mov
xchg
jg
push
cmp
ja
sbb
xor
mov
jne
mov
add
or
aas
fisub
add
mov
ret
mov
and
hlt
mov
test
lds
add
add
stc
lock
push
inc
jmp
push
adc
add
lock
stos
mov
adc
sti
sub
push
in
outs
jge
shl
adc
or
mov
pusha
fcomp
popf
dec
mov
jmp
in
push
xchg
nop
ja
xor
pop
xchg
jge
jns
push
ss
(bad)
adc
in
xor
jg
int3
dec
adc
or
movs
imul
fmul
das
cmp
xchg
push
or
pop
pop
call
ins
fwait
and
ds
adc
shr
ss
inc
imul
push
cwde
scas
push
pop
push
leave
add
cmp
jae
ss
popa
inc
xchg
mov
cmp
imul
cmp
fldcw
aaa
inc
rcr
movzx
cmp
fistp
ret
mov
mov
inc
inc
je
int3
js
out
sub
imul
hlt
shl
cdq
or
cmp
inc
scas
ja
cmp
aaa
and
test
and
dec
jmp
lahf
mov
dec
outs
movs
mov
mov
add
push
inc
xchg
add
or
xor
aas
cmp
les
inc
aas
lods
aas
push
jp
push
inc
xchg
movs
je
xor
call
pop
pop
cwde
inc
stos
xchg
clc
inc
ds
jmp
jns
cmp
add
ds
add
icebp
js
inc
xchg
movs
inc
xor
pop
ffreep
rcl
(bad)
mov
inc
fs
pop
add
sbb
adc
pop
inc
sbb
std
fild
jg
cmp
fs
(bad)
adc
or
mov
ja
vmread
movs
mov
jne
cmp
dec
xchg
or
nop
lock
ds
cmps
rol
clc
scas
test
mov
jnp
or
das
mov
arpl
and
xchg
or
ins
lock
fs
fucomi
dec
pop
pusha
inc
ins
sub
push
icebp
enter
fs
hlt
add
popf
mov
sub
inc
pusha
dec
movs
or
in
daa
sar
sbb
push
adc
add
aas
fcmovnb
push
adc
jecxz
aam
and
addr16
jle
and
add
ins
call
add
xor
shl
add
imul
mov
js
pop
pop
cmc
call
repz
nop
cmp
cmp
mov
or
mov
or
je
cwde
xor
mov
ror
ret
jo
xor
pop
push
mov
rol
ret
repnz
xlat
or
(bad)
pop
ret
je
cmp
movs
or
pop
xchg
daa
(bad)
push
and
test
data16
imul
ds
pop
adc
sti
push
push
and
sub
lock
test
push
adc
(bad)
mov
cmc
in
push
or
push
in
movs
sbb
inc
push
adc
dec
add
add
mov
rcl
shl
test
pop
sub
pop
fmul
xchg
inc
or
cmp
pop
jo
out
push
aas
push
gs
sti
dec
add
xchg
cmp
xchg
xor
daa
adc
adc
sub
push
clc
push
outs
mov
popa
cmp
cvtps2pd
mov
call
sub
inc
popa
jp
les
call
fstp
mov
fwait
or
pop
jge
and
xchg
adc
ins
mov
mov
sbb
mov
mov
mov
fdivr
aaa
loop
push
push
adc
aaa
push
je
shl
or
jmp
test
test
mov
inc
adc
je
je
outs
fnstcw
pop
and
ret
sub
sahf
clc
scas
jae
loopne
stc
or
push
push
fmul
inc
data16
retf
xor
jle
push
or
imul
icebp
and
jo
and
add
inc
xchg
pop
aas
sbb
test
es
aam
test
imul
or
dec
movs
jg
jno
loope
scas
inc
cmp
sub
sub
mov
mov
xor
retf
jbe
sbb
addr16
xchg
daa
push
xor
xor
xchg
je
icebp
push
jno
push
pusha
push
mov
push
xor
cmp
or
jo
popw
jecxz
push
dec
push
dec
add
ds
nop
jl
sub
ret
jmp
add
inc
mov
in
add
and
test
adc
sahf
xor
jmp
outs
dec
push
mov
mov
call
jmp
add
out
sub
and
add
xor
imul
lea
je
push
jb
add
lods
push
hlt
in
pop
push
(bad)
sbb
xor
fnop
cmp
jmp
test
mov
test
sbb
mov
push
mov
and
cmp
pop
dec
sub
sbb
js
in
stos
ror
adc
lods
les
test
jne
je
xor
and
sub
xor
adc
or
fistp
and
sub
xchg
dec
sbb
inc
cmp
jne
ret
cwde
add
adc
add
add
test
mov
pop
push
daa
icebp
inc
jmp
add
push
mov
xchg
ret
fld
outs
dec
sbb
jl
xchg
cmps
and
fbstp
stos
add
int3
ins
je
inc
sub
bound
ss
xchg
imul
or
xlat
or
adc
fist
inc
jp
jge
cmp
inc
iret
dec
cmp
cmps
movs
in
mov
jae
add
pop
adc
shr
pop
lock
sbb
hlt
enter
inc
hlt
mov
std
adc
mov
shl
or
mov
inc
je
cmp
fdiv
rol
inc
outs
fidivr
and
mov
sbb
push
sbb
test
jno
aaa
push
mov
sbb
sbb
ret
push
mov
jns
or
mov
retw
push
mov
add
add
adc
lds
push
add
sbb
or
hlt
xor
push
push
and
xchg
dec
sbb
adc
dec
inc
and
sub
xchg
xchg
mov
cld
mov
cli
jns
imul
addr16
es
dec
pop
adc
leave
mov
sub
dec
adc
mov
cwde
or
cmp
hlt
inc
cwde
pop
push
imul
pop
ds
push
push
inc
adc
cmp
cmps
popf
int
dec
icebp
push
fsubr
mov
push
sbb
(bad)
mov
pop
pop
repnz
sbb
jl
mov
(bad)
push
pop
call
sbb
jb
sbb
adc
icebp
shl
or
cmp
enter
add
inc
push
sub
pop
sbb
in
sub
rol
pop
movs
hlt
jl
inc
jbe
or
pop
dec
rcr
dec
test
or
fdiv
or
mov
cmc
(bad)
mov
add
push
mov
shr
inc
stos
mov
mov
popf
mov
ins
xor
into
hlt
cmp
hlt
hlt
pop
mov
hlt
push
iret
hlt
sub
inc
add
jo
or
or
imul
enter
clc
or
jns
push
fld
sbb
or
jmp
jmp
or
shl
lods
loopne
dec
add
mov
cdq
add
ds
pop
fbstp
mov
push
push
in
and
push
or
mov
jns
and
lea
clc
cvttps2pi
sbb
sub
in
jne
repz
ds
outs
ja
outs
aaa
cmp
cmp
fistp
imul
sub
jmp
push
xchg
add
jne
pop
or
inc
mov
sub
in
test
xchg
fwait
loopne
ret
call
int
push
inc
test
or
loopne
mov
(bad)
fwait
pop
js
mov
or
dec
pushf
rcl
(bad)
(bad)
movs
adc
or
ret
cmp
xor
jo
add
xchg
pushf
or
inc
or
add
sub
enter
and
shr
shr
inc
test
in
mov
in
sbb
push
inc
repz
and
push
aam
cmp
jl
sub
mov
xor
call
ret
pop
lods
inc
sbb
call
or
test
inc
cmp
sbb
and
lldt
adc
sbb
daa
call
enter
xor
push
dec
add
ins
adc
clc
leave
push
and
xor
mov
lods
clc
sub
adc
fs
xor
jns
and
clc
dec
and
mov
or
xchg
sub
xor
psubusb
add
stos
sbb
pop
inc
mov
pop
and
iret
clc
lock
xchg
out
lock
call
test
push
sbb
movs
push
test
enter
sbb
enter
pop
push
add
xchg
or
and
and
sbb
pop
cmp
or
adc
xchg
dec
adc
daa
inc
dec
pop
xchg
push
mov
scas
dec
nop
push
and
inc
stos
ror
jmp
loop
rol
mov
les
mov
xlat
cmps
scas
adc
push
adc
cmp
inc
nop
ret
cmps
adc
jae
jl
sub
repnz
scas
pop
add
popa
je
gs
push
popf
and
pop
adc
lods
push
and
(bad)
aaa
aas
mov
sti
jb
sub
push
dec
adc
cmp
pop
sahf
popa
and
sbb
and
adc
xchg
pop
(bad)
daa
scas
scas
outs
in
ja
pop
shl
jo
retf
push
fs
pop
movs
pop
xchg
fs
cld
adc
ins
movs
lock
or
add
xor
or
sbb
and
pusha
or
inc
and
test
cli
or
xchg
bound
add
xchg
xor
mov
sbb
test
out
loopne
fisttp
adc
hlt
sbb
add
imul
aaa
and
cmp
push
adc
inc
xchg
push
scas
pusha
lea
xlat
mov
or
inc
push
mov
add
aam
jo
xchg
jmp
dec
dec
es
or
sbb
adc
xor
push
or
data16
es
fisub
push
push
sub
xchg
cdq
adc
dec
fdivr
sbb
add
pop
and
ja
dec
sbb
(bad)
int
add
scas
or
push
dec
inc
pushf
cmp
push
(bad)
mov
inc
push
and
push
add
fcmovbe
jnp
xchg
adc
ds
aas
pop
inc
cwde
dec
inc
mov
mov
add
dec
xchg
add
leave
dec
repz
lods
mov
push
sbb
and
xor
mov
mov
adc
test
inc
or
pop
outs
cmp
pop
sub
mov
or
int
das
test
jmp
jp
push
aas
cmp
push
lea
fstp
movs
jnp
add
cmp
loope
mov
add
adc
cmp
and
sub
jne
push
inc
push
adc
dec
pusha
in
pop
fs
inc
sub
cmp
push
or
cmps
cmp
sbb
and
pop
xor
ret
inc
rcl
test
sub
pop
add
mov
ret
jno
ins
dec
cmp
out
aas
je
(bad)
lods
pop
call
adc
imul
mov
outs
inc
or
dec
push
sar
cmp
pop
xor
sbb
test
xor
pop
lds
mov
inc
sahf
mov
outs
fistp
and
pop
inc
inc
push
jo
dec
or
outs
(bad)
or
push
inc
jne
dec
xor
ss
xor
out
cwde
sbb
ret
loopne
adc
inc
outs
adc
call
and
out
mov
sub
push
pop
xor
or
or
add
pop
clc
out
clc
vminsd
je
cdq
cmp
pusha
repnz
push
retf
fs
mov
sti
pushf
and
dec
in
dec
xchg
push
pop
mov
loope
fcmovnu
mov
shl
fist
and
push
je
mov
push
adc
dec
sub
out
in
adc
nop
cmps
push
and
aad
xor
aas
jbe
and
popa
(bad)
fsub
mov
popa
adc
outs
or
inc
mov
mov
sahf
jmp
sub
mov
or
pop
rcr
test
mov
dec
jo
test
jg
cmp
inc
add
mov
xchg
or
out
mov
popf
lods
jmp
cmp
push
jmp
or
jb
cmp
ins
or
je
cmp
xchg
xchg
jnp
sub
sub
jns
ror
sub
xor
inc
lds
dec
inc
popf
push
arpl
and
pop
pop
sub
aam
ins
sub
and
ror
into
adc
add
mov
mov
pop
dec
retf
pop
push
mov
out
ret
or
push
add
jo
aaa
mov
lahf
and
outs
xchg
jmp
fdiv
and
mov
sub
outs
ret
push
add
inc
out
push
xor
cmp
(bad)
fdiv
adc
dec
mov
inc
dec
or
push
inc
pextrw
retf
inc
jmp
mov
repnz
sub
out
inc
and
inc
xchg
popf
inc
or
movs
dec
cmps
addr16
inc
dec
jmp
ja
les
push
(bad)
xor
mov
lods
out
or
out
cmp
loop
jo
dec
add
int
adc
and
enter
cmp
fnstcw
in
adc
stos
popf
cmp
xchg
pop
fdiv
retf
xlat
sar
xchg
cmp
je
mov
cmp
adc
or
xor
or
xchg
jge
out
and
jns
mov
mov
fnsave
push
hlt
adc
mov
daa
mov
mov
jecxz
repnz
ja
mov
fcmovnb
ret
imul
mov
inc
pop
lahf
add
inc
jbe
movs
aas
ins
jae
dec
js
pop
inc
inc
xchg
je
adc
sub
push
push
shl
push
xor
xor
call
dec
jmp
test
fcomp
jne
and
clc
out
xlat
arpl
stos
movs
mov
sub
inc
dec
xchg
mov
xor
dec
xchg
mov
jle
pop
cwde
pop
je
or
add
push
pop
scas
mov
fwait
adc
xor
jb
xchg
or
push
dec
xor
mov
shl
scas
lea
mov
or
dec
mov
(bad)
mov
or
cwde
mov
xchg
js
or
nop
adc
fisub
aas
rol
data16
add
adc
lahf
xchg
push
loopne
ret
(bad)
mov
push
(bad)
dec
gs
mov
xchg
scas
ret
cmc
sub
es
rcr
add
xchg
xchg
pop
and
rcl
in
sbb
sbb
sub
dec
pop
bound
push
sbb
or
and
dec
shr
cmp
jge
nop
sbb
mov
push
daa
push
mov
repnz
mov
mov
and
imul
mov
sub
push
stos
and
dec
add
or
jne
adc
mov
inc
adc
inc
push
lock
push
xchg
xor
pop
les
lea
cmp
ret
push
push
push
out
js
push
xchg
mov
xchg
jmp
push
dec
inc
add
adc
jno
movs
mov
mov
sbb
add
nop
jo
cmps
sub
adc
pop
push
sub
fs
dec
add
in
xor
call
inc
outs
add
cmps
mov
add
push
and
sbb
pop
or
sbb
in
ret
outs
jo
inc
or
push
mov
ficomp
mov
sbb
sbb
adc
add
enter
call
dec
jbe
imul
les
mov
imul
add
aam
or
imul
and
push
dec
jmp
loopne
sbb
(bad)
int3
inc
sbb
aas
fstp
push
je
push
sbb
mov
dec
repz
out
ficom
mov
pop
retf
sbb
mov
nop
int3
imul
cmps
movs
adc
pushf
sub
enter
int3
push
stos
push
or
lds
inc
push
fs
ret
(bad)
dec
or
test
cmc
xchg
adc
in
cld
fwait
sahf
cmps
loope
and
inc
jmp
dec
dec
or
sbb
xchg
or
dec
mov
jns
fwait
cs
pcmpeqb
ins
fwait
ja
movs
xor
cmp
jmp
push
mov
cmps
cmps
and
in
add
mov
xor
inc
fidivr
ins
cmp
dec
jmp
inc
(bad)
add
xor
sub
scas
adc
adc
pop
xlat
dec
mov
pop
cmp
in
(bad)
loopne
pop
pop
pop
arpl
cmps
or
jno
out
loopne
pop
iret
add
cdq
pop
leave
popf
ror
mov
sbb
jbe
scas
and
or
clc
and
(bad)
xor
into
add
and
in
rcl
aas
lea
call
cmp
sbb
out
cmp
(bad)
test
les
fdivrp
and
dec
xor
not
push
mov
sbb
ret
jns
cmps
bnd
push
mov
jecxz
popa
loop
mov
push
add
xchg
fadd
popf
into
mov
add
sbb
test
pop
cmp
shl
dec
and
xchg
pusha
sti
popf
test
(bad)
sbb
or
call
movs
add
push
cmp
ja
xlat
data16
sub
jl
inc
test
jbe
add
xchg
adc
xchg
lods
cmp
inc
sar
xchg
add
inc
mov
in
aam
pop
inc
sbb
fld
call
mov
and
xchg
daa
add
fucom
cmp
pop
jne
outs
loopne
inc
mov
add
and
cwde
sar
aaa
dec
and
and
jne
mov
cmp
popa
xchg
inc
idiv
ds
or
jnp
jo
mov
popw
jl
ret
mov
and
imul
mov
das
lock
inc
adc
gs
pop
inc
movs
xor
sbb
ds
push
cmp
or
push
inc
mov
mov
lds
cs
add
fnstcw
inc
cmp
mov
cmp
add
inc
xor
mov
add
xchg
inc
cmp
inc
xor
ficomp
fimul
and
in
scas
inc
stc
es
ins
fisttp
mov
pop
mov
xchg
pop
push
lahf
ror
add
cmps
pop
dec
mov
outs
jne
xor
(bad)
cdq
ret
adc
fnsave
sbb
inc
or
pusha
xchg
adc
enter
sub
cmps
mov
lock
and
jle
das
and
mov
xor
ror
or
mov
pop
push
shr
xchg
hlt
mov
ret
(bad)
and
push
sub
push
push
jno
sub
fisubr
push
call
out
scas
and
in
test
int3
jmp
cmp
int
js
fcmovnb
sbb
adc
movs
aaa
mov
fs
mov
push
fsub
and
dec
aaa
xor
or
add
xchg
pop
push
or
cmp
addr16
outs
inc
jmp
mov
push
ins
jecxz
inc
inc
into
aas
(bad)
ss
(bad)
ret
das
or
lds
inc
cmp
pusha
es
xor
cmp
mov
mov
fdiv
or
inc
ins
and
loopne
rcl
sub
addr16
xor
(bad)
and
bound
push
or
push
xor
adc
lahf
xor
hlt
scas
pop
inc
dec
mov
mov
jb
adc
dec
arpl
dec
xchg
adc
jg
pop
pusha
leave
mov
add
inc
(bad)
dec
call
(bad)
dec
mov
xchg
sar
cli
jo
jl
adc
push
cli
in
mov
rol
inc
frstpm(287
or
add
mov
movs
jb
sub
and
mov
movs
lock
push
pop
int
jmp
or
popf
lods
adc
mov
cmps
push
shl
push
pop
(bad)
sbb
xor
mov
or
or
jmp
test
and
adc
movs
cli
enter
and
add
fbstp
mov
inc
sub
sub
je
nop
sbb
mov
mov
cmp
fwait
fs
mov
adc
inc
push
ror
in
fimul
cld
lahf
push
rcl
push
dec
inc
mov
sbb
mov
adc
imul
adc
pop
add
pop
adc
adc
(bad)
and
pusha
call
enter
rol
xor
push
add
push
xor
ins
sbb
add
mov
xor
cmp
je
xor
pop
shl
cmp
sahf
and
ret
ret
scas
inc
pushf
mov
cmp
add
repz
scas
xor
cwde
fsub
sti
xor
jmp
lods
dec
mov
loope
call
sub
push
ds
movs
inc
xchg
or
std
add
lahf
mov
and
cmp
enter
test
adc
add
or
cmp
jne
pop
clc
jb
jo
les
or
test
test
fld
inc
fcos
sbb
shl
lahf
test
cmp
out
pop
xor
mov
jns
or
shl
add
test
das
test
jmp
call
sbb
call
xchg
adc
ja
push
ret
xor
mov
xor
push
add
lea
(bad)
push
fadd
xchg
movs
pop
pop
aad
push
mov
inc
or
sbb
pop
daa
xchg
xchg
cmp
jno
out
mov
pusha
es
int3
cmp
inc
or
addr16
lea
and
gs
xchg
ret
inc
adc
addr16
dec
jo
jmp
mov
lock
jmp
adc
rol
enter
popa
ins
int
cmp
or
sbb
dec
and
xchg
cs
dec
jno
loope
pusha
and
cmp
push
sbb
xor
out
mov
adc
jne
ret
sbb
add
sbb
xchg
or
push
loopne
xchg
jno
jmp
xor
pop
dec
and
icebp
cmp
ret
fcom
cmp
pop
push
xor
push
pop
add
push
imul
call
(bad)
out
push
and
add
jmp
and
add
fnstsw
inc
inc
das
dec
jecxz
dec
add
jmp
inc
add
hlt
cwde
movs
ret
jle
mov
and
pop
pop
pop
fisub
retf
xor
sub
add
and
les
inc
imul
call
mov
aad
into
leave
adc
lock
xchg
xor
test
and
and
mov
and
push
ret
sti
mov
push
inc
xlat
add
sar
(bad)
hlt
inc
(bad)
fldpi
cs
out
push
fcmovb
scas
test
adc
cmp
(bad)
jl
adc
xor
jne
dec
cwde
xor
cmp
sahf
and
ja
add
jmp
and
jne
dec
or
or
mov
xor
test
push
and
ins
nop
push
in
aaa
in
lds
adc
aas
inc
push
(bad)
push
pushf
xor
add
aaa
mov
enter
test
addr16
mov
jne
or
(bad)
or
add
jecxz
push
fmul
sbb
ins
jp
cmp
jb
inc
movs
jno
inc
push
imul
xor
mov
and
inc
inc
adc
add
or
pop
add
pop
adc
xchg
adc
fldpi
push
add
fsubr
push
mov
inc
or
xor
(bad)
xor
cmp
fadd
push
repz
push
xor
ret
aas
cmp
mov
and
cld
sbb
pop
cdq
imul
xor
push
popa
mov
fild
xchg
ficom
sbb
nop
jo
sbb
(bad)
rcr
or
arpl
or
rcr
retf
adc
add
fadd
mov
or
or
nop
daa
push
xchg
dec
add
mov
adc
dec
push
imul
xor
or
pop
rol
adc
aam
popa
ror
push
jno
cld
cmp
aaa
push
pop
iret
add
aam
enter
aaa
mov
test
pop
and
fistp
adc
push
cmp
scas
jmp
cmp
ds
pop
daa
sub
sub
inc
pusha
adc
ja
pop
add
sub
mov
add
xchg
es
xor
jne
cmp
loopne
xchg
fwait
push
cmp
imul
in
imul
inc
push
test
popa
cmps
mov
adc
test
cmp
jne
and
push
loopne
aas
test
fmul
or
add
push
sbb
and
shr
mov
cli
enter
shl
lea
call
inc
stc
adc
jo
mov
sub
ss
shr
jb
mov
add
push
loopne
adc
enter
xlat
inc
les
inc
xor
xchg
inc
call
jge
test
xor
cld
stos
mov
fist
mov
cwde
(bad)
ins
adc
pop
or
(bad)
or
clc
mov
out
push
pusha
enter
ss
pop
lock
or
ret
add
xchg
add
jg
mov
fmul
mov
mov
in
not
leave
inc
mov
sbb
sub
pop
inc
fs
shr
ret
dec
sub
mov
inc
dec
fnstsw
sub
lea
int
sub
pushf
pop
imul
mov
out
or
movs
pop
jecxz
inc
repnz
out
mov
pop
fs
fdiv
les
xor
cli
cdq
loopne
sbb
or
sub
dec
sbb
in
inc
adc
inc
leave
repnz
aaa
inc
fmul
xchg
mov
in
loope
sbb
enter
lahf
popa
js
retf
push
inc
jo
push
push
dec
mov
xchg
lea
add
xor
mov
vorps
mov
lea
push
and
push
lds
xchg
mov
ret
nop
in
mov
sbb
inc
mov
inc
pop
loopne
jle
push
shl
retf
pop
test
sub
xchg
fistp
and
lods
push
lock
add
jns
aas
(bad)
cwde
in
inc
pop
xor
xor
jle
fwait
mov
adc
cmp
call
inc
popa
add
mov
mov
add
add
lea
and
lea
je
sbb
pop
ja
push
ret
cmps
dec
add
aaa
test
sti
inc
add
cli
std
fisubr
inc
loope
adc
add
ss
xchg
jns
ss
ss
nop
sub
xchg
or
xor
fisubr
lock
pop
jae
inc
adc
xchg
pop
xchg
xor
cs
sbb
scas
mov
sbb
sbb
addr16
jbe
inc
xor
adc
jp
gs
cli
push
push
add
rcr
std
mov
push
fsubr
or
int3
sub
mov
push
imul
(bad)
(bad)
cmp
mov
push
push
stos
lds
int3
push
mov
stc
seto
adc
jo
clc
and
jecxz
sbb
cmp
fistp
inc
or
out
fucom
cmp
xor
outs
cs
jmp
nop
push
sbb
sar
imul
add
dec
xor
movs
rcr
scas
sbb
rdpmc
dec
fnstcw
leave
mov
repnz
xor
jbe
pop
adc
aaa
pop
pop
leave
inc
inc
jb
movs
push
inc
(bad)
repz
jmp
movs
rol
dec
out
shr
push
push
jae
jo
pop
aaa
lock
loope
push
or
xor
push
cmp
jne
icebp
ss
ror
mov
repz
in
cmp
cmp
dec
lahf
adc
sub
fidivr
shr
jmp
jg
test
or
es
cmp
push
idiv
sti
jl
mov
dec
outs
adc
xchg
mov
frstor
fldenv
es
jl
inc
sbb
push
icebp
jge
inc
jns
ret
mov
push
icebp
rol
push
ret
prefetch
movs
je
push
or
lea
mov
mov
movs
cmc
mov
push
mov
pop
ror
or
push
push
mov
int
jo
push
add
and
dec
mov
xchg
push
sbb
pop
sbb
imul
imul
dec
dec
shl
(bad)
cld
pusha
faddp
mov
lahf
dec
out
scas
mov
clc
ret
jp
lods
cmp
call
mov
scas
and
stos
lods
outs
jmp
bsf
jae
mov
or
xor
fsub
add
aas
nop
fnsave
sbb
pop
cld
and
sbb
and
call
stos
js
sar
adc
out
rol
push
pop
std
add
xchg
lods
add
mov
adc
sti
and
imul
adc
pop
sub
or
sub
add
les
or
ss
pop
inc
dec
add
dec
pop
popa
fs
aas
cmp
push
push
sub
and
outs
or
lods
div
or
clc
movs
and
pop
add
sbb
pop
cmp
js
or
mov
sbb
scas
add
dec
pusha
pusha
cwde
movs
sub
mov
or
push
xor
cwde
loope
and
or
or
inc
cmp
push
mov
cmps
sbb
add
fwait
xchg
add
enter
repnz
pop
or
and
xchg
add
dec
xchg
out
rol
mov
push
inc
push
dec
and
push
lea
pop
pop
fdivr
outs
gs
loop
xor
add
xor
or
xchg
jbe
or
ds
inc
mov
jne
bound
sbb
push
imul
dec
ror
ja
cwde
nop
cmps
es
or
shl
and
push
mov
xor
ja
dec
into
in
jnp
adc
dec
inc
imul
jl
popa
js
pop
aam
or
cwde
pop
add
push
fidiv
(bad)
into
push
sbb
xchg
lock
xchg
test
ja
add
outs
and
nop
push
out
push
or
xor
inc
xchg
xor
mov
hlt
add
or
xchg
pop
add
(bad)
inc
jbe
or
clc
inc
cmp
in
or
sbb
lods
mov
push
rcl
je
adc
push
dec
and
fwait
sbb
lods
loope
call
xor
mov
loopne
cmc
rcr
or
cmc
fiadd
inc
dec
inc
jp
mov
or
or
cmps
or
loopne
fs
push
dec
mov
fnsave
cmp
bound
or
call
int3
inc
loopne
push
cmp
fwait
sub
int
or
mov
inc
and
enter
sbb
jecxz
mov
prefetchwt1
(bad)
mov
les
inc
dec
movs
sbb
out
mov
das
mov
popa
fstp
ins
popa
aas
sub
data16
movs
cmp
mov
fcmovb
data16
stos
cmp
(bad)
pop
leave
out
mov
ja
or
and
adc
iret
add
test
or
(bad)
gs
dec
fwait
and
sahf
inc
push
or
or
imul
outs
jne
sbb
and
xchg
adc
push
adc
repnz
clc
sahf
push
or
lock
jae
nop
nop
adc
into
inc
lea
outs
stos
fxch
pop
loopne
or
addr16
adc
adc
data16
cmp
pop
movs
and
push
push
gs
add
lea
sub
mov
mov
in
and
sub
imul
mov
imul
ins
mov
push
jb
fdivr
sbb
stc
jns
adc
rcl
sbb
mov
scas
push
outs
pusha
popa
lahf
add
inc
mov
sub
mov
or
pop
mov
or
inc
add
mov
inc
jo
inc
out
xlat
push
inc
xor
mov
or
imul
or
leave
ss
mov
or
sbb
push
rcr
mov
adc
mov
jnp
jne
jns
xor
enter
dec
fbld
pusha
pusha
into
sbb
push
sbb
mov
adc
add
push
dec
addr16
sub
jnp
out
js
jbe
fsubr
rcl
or
test
add
fsub
xor
dec
pop
or
rol
xchg
mov
int3
es
clc
mov
in
int
pop
pop
sub
pop
push
into
jle
adc
(bad)
(bad)
xor
dec
scas
cmp
fstp
rcl
sbb
and
fs
ret
cmp
sbb
aaa
add
pop
add
add
sti
dec
icebp
jmp
adc
adc
sbb
and
sub
add
iret
push
dec
mov
mov
clc
cmps
adc
add
cmps
sub
iret
push
mov
push
clc
fwait
add
sbb
or
sub
or
(bad)
out
push
scas
jmp
push
sar
jae
in
add
dec
pop
cld
retf
sbb
inc
jnp
cwde
xor
inc
sub
data16
add
fs
push
mov
imul
lock
fnstenvw
popa
ds
lock
in
ins
xor
inc
xor
xor
push
add
push
inc
aas
pushf
xor
(bad)
mov
pop
shl
fcomp
sbb
pusha
xor
jns
repz
and
vmread
es
call
add
push
push
fldenv
sub
pushf
inc
mov
js
mov
mov
mov
push
inc
inc
or
mov
rcr
shl
in
cmp
iret
nop
cld
out
cld
rol
jns
mov
lock
lods
int3
jnp
lock
xor
pop
retf
push
sub
inc
xor
push
pusha
les
std
add
dec
sbb
ficom
add
dec
adc
(bad)
jbe
shl
aas
add
aas
jo
popa
inc
ins
imul
loope
adc
(bad)
scas
lods
adc
ret
adc
les
add
sbb
xchg
sub
fcmovb
adc
or
hlt
cmps
sub
xor
ret
call
repz
dec
and
nop
daa
push
mov
push
mov
mov
inc
add
rol
push
mov
sub
cmc
jbe
pop
and
je
pop
pop
pop
push
pushf
add
sbb
or
aaa
fisttp
inc
sbb
dec
adc
dec
call
lods
retf
sbb
mov
push
xchg
in
push
lods
push
add
sar
pop
and
and
inc
pop
sub
mov
xor
mov
push
and
push
mov
mov
les
and
and
and
movs
jge
daa
add
push
and
or
inc
inc
push
int3
and
mov
mov
add
leave
xlat
inc
push
nop
or
sub
adc
clc
jmp
mov
inc
dec
cmps
rol
in
clc
dec
sub
and
pop
fwait
sub
add
sub
push
pop
ja
mov
je
push
jns
fadd
xor
mov
popf
push
(bad)
and
cmp
popa
(bad)
pusha
sbb
ret
das
push
ret
or
inc
or
xor
sbb
and
fwait
push
sbb
xor
js
add
jae
data16
sub
repz
sar
imul
sbb
dec
sbb
inc
xor
xor
pusha
fdiv
and
xchg
dec
xor
shl
add
ss
xor
out
push
sbb
les
call
cmp
inc
jne
gs
out
cwde
jmp
xchg
or
enter
cmp
dec
call
inc
daa
jne
sub
mov
cmp
aad
dec
repz
pop
inc
cmp
shl
dec
adc
cmp
fld
dec
push
dec
cmp
ror
pop
xchg
push
cwde
fsubr
addr16
cmp
addr16
ds
add
xchg
mov
and
push
inc
aas
(bad)
inc
pop
sub
adc
or
fs
inc
inc
rol
or
lahf
sar
rol
add
inc
dec
mov
pop
and
test
fadd
mov
and
js
xchg
inc
mov
loope
inc
inc
popa
cmc
add
adc
pop
inc
add
or
dec
pop
push
es
dec
sbb
pop
mov
add
(bad)
dec
and
mov
loop
or
in
sub
ins
pusha
dec
push
and
jbe
mov
test
push
xchg
dec
add
push
loopne
inc
xchg
rol
mov
dec
sbb
fadd
pusha
and
xchg
dec
push
cs
ins
xchg
inc
push
fmul
and
sbb
push
xchg
or
dec
push
xchg
or
repz
cmp
dec
adc
xchg
int3
dec
in
xor
push
ror
cmps
aaa
sbb
push
dec
adc
pop
(bad)
sbb
cmc
cs
mov
dec
add
fcomp
test
data16
adc
rol
jne
sub
in
add
add
xor
xchg
mov
fistp
inc
(bad)
and
fstp
push
mov
pop
nop
push
enter
or
dec
ins
dec
inc
cmps
hlt
add
or
test
adc
inc
ud2
mov
sub
mov
dec
shr
out
movs
cld
ror
push
out
ss
sbb
inc
mov
out
pop
sub
sub
and
out
nop
je
xchg
and
mov
or
or
xchg
fcomp
scas
test
ins
cld
push
sbb
iret
push
push
mov
inc
and
inc
xchg
addr16
dec
inc
adc
pop
pushf
ja
imul
push
pop
sbb
xor
loop
dec
jg
inc
jo
or
movs
(bad)
das
or
loope
push
fwait
mov
pop
xor
pop
push
push
fs
mov
xchg
dec
add
andps
or
mov
mov
popw
and
stos
adc
dec
inc
fsub
gs
xchg
in
imul
mov
inc
jne
or
je
dec
add
rol
inc
push
or
loopne
sub
jnp
daa
test
imul
lods
ins
add
pop
sbb
loope
adc
sub
es
mov
mov
sub
cs
in
cmp
and
out
ror
cmp
je
(bad)
call
fwait
lods
cmps
mov
push
hlt
mov
mov
xchg
ss
loop
nop
call
sub
into
scas
inc
mov
test
and
push
mov
inc
aaa
aaa
fiadd
out
call
or
fidiv
lock
lods
or
sbb
ja
mov
or
inc
aam
ja
push
xchg
inc
je
mov
pop
xchg
dec
ss
push
test
in
mov
or
cmp
mov
adc
mov
sbb
or
and
lahf
pop
adc
cmp
jecxz
jno
ret
lahf
je
mov
(bad)
jl
pop
sbb
adc
test
or
movs
pop
aaa
js
mov
cmp
cmp
fst
mov
sbb
add
mov
adc
mov
(bad)
jbe
addr16
out
fistp
xchg
(bad)
mov
and
add
xchg
ror
sub
arpl
jae
int
scas
movs
neg
addr16
loopne
adc
fs
xor
call
mov
js
cld
dec
pop
mov
(bad)
mov
retf
add
or
or
adc
and
out
xlat
sbb
add
bound
xor
inc
jmp
xchg
xor
ins
data16
test
sbb
adc
add
add
or
adc
rcl
and
and
repnz
test
adc
repz
lock
stc
in
inc
or
iret
jle
pusha
add
popf
sbb
cmp
xor
jo
(bad)
add
lods
leave
pop
dec
pusha
fld
popf
out
pusha
movs
mov
sahf
add
movs
mov
add
sar
inc
dec
aas
std
icebp
outs
data16
push
das
mov
inc
sar
test
inc
xchg
and
in
jl
and
(bad)
idiv
test
sahf
aas
sub
pop
inc
add
je
out
inc
pop
and
mov
(bad)
in
ret
sar
dec
cmp
adc
loopne
ficom
or
mov
(bad)
cwde
add
inc
imul
fld
fisttp
add
jno
push
addr16
test
adc
sahf
repz
mov
pop
add
fnstcw
clc
je
mov
inc
popa
mov
ss
in
sub
or
(bad)
adc
ficom
add
jle
push
add
or
add
mov
add
xlat
data16
ss
scas
in
out
nop
xchg
inc
shl
or
dec
mov
adc
push
xlat
push
js
fs
add
dec
aam
aas
dec
push
enter
cmp
xchg
push
hlt
jno
xor
mov
movs
daa
cmp
push
cmp
jmp
jmp
sub
lea
sub
mov
add
add
inc
jle
mov
add
adc
add
inc
jno
clc
jp
mov
sbb
outs
add
test
add
mov
dec
xchg
mov
outs
mov
pop
or
jns
fmul
xchg
or
push
pop
mov
loopne
xchg
push
mov
pusha
adc
outs
or
adc
push
call
mov
pop
or
push
sti
(bad)
pop
hlt
neg
jmp
arpl
lods
add
inc
je
cmp
imul
push
push
inc
sub
test
or
jg
aaa
ret
sub
aad
sub
(bad)
ss
xlat
jb
ds
inc
mov
out
pusha
fdiv
sbb
mov
rcl
inc
jmp
dec
mov
lea
fsubrp
xor
mov
mov
add
push
shr
dec
push
in
fs
push
or
sub
adc
cmps
add
pop
dec
push
jae
not
inc
sub
pop
dec
inc
not
cmp
cmp
push
outs
or
cmc
icebp
jmp
inc
inc
or
mov
mov
dec
cmp
adc
or
lea
cmp
mov
ret
cmp
hlt
sub
mov
mov
jmp
das
mov
cmp
mov
pop
sub
(bad)
xor
aad
in
aaa
and
lods
dec
leave
adc
fild
cmp
(bad)
jmp
ret
mov
mov
or
je
ss
jmp
push
ss
sub
je
add
push
(bad)
pushf
adc
(bad)
mov
add
fiadd
xor
outs
sub
clc
add
stos
sbb
icebp
daa
xchg
std
xchg
push
sub
ins
and
rol
add
sub
push
dec
inc
mov
outs
enter
test
mov
es
mov
xchg
in
xor
inc
push
and
mov
mov
add
inc
pushf
mov
inc
cmp
inc
addr16
adc
push
idiv
lods
xchg
push
jmp
je
mov
ror
adc
dec
inc
sub
pusha
pop
sub
or
mov
sar
dec
(bad)
pop
jecxz
leave
push
jg
dec
ss
and
dec
push
add
pop
jle
jo
loopne
in
dec
rol
xchg
sahf
push
add
add
jbe
or
pop
das
movs
mov
pop
xor
iret
call
sbb
movs
outs
fldcw
mov
or
imul
das
xchg
(bad)
push
adc
loope
jbe
xor
nop
or
cmp
ret
cwde
and
leave
xchg
clc
xor
inc
cs
xchg
out
or
out
popf
dec
(bad)
das
mov
das
and
cmps
cmc
mov
mov
push
fiadd
xor
dec
add
sub
push
add
cmp
les
xchg
lds
and
ins
call
cld
inc
and
cmps
jno
pushw
pop
xor
sbb
shl
shr
jmp
add
pop
cmp
sub
xor
adc
mov
popa
add
sbb
adc
cmp
xor
xor
xchg
xor
arpl
mov
sub
adc
cmp
cmp
fisttp
and
mov
pusha
jo
cmp
stos
icebp
lods
push
push
xchg
je
xlat
and
push
and
mov
push
mov
clc
sbb
xor
pushf
or
inc
loop
shr
and
out
neg
cs
fwait
dec
test
pop
add
ds
dec
sub
(bad)
not
cmc
mov
or
adc
loopne
shl
nop
pop
int
pop
ins
xchg
add
aam
addr16
sar
sbb
cwde
popa
mov
or
popa
cmps
mov
or
adc
ds
movs
adc
adc
ins
cmp
ret
sbb
push
sub
inc
imul
adc
jb
and
bound
sub
and
dec
and
jg
call
lea
inc
cmp
inc
in
sub
dec
inc
add
xchg
xchg
add
mov
imul
fwait
xor
mov
sar
es
jb
cmp
jl
inc
jmp
cwde
out
aaa
ror
movs
push
fwait
repz
pusha
pop
adc
inc
mov
inc
cmp
ins
or
or
jmp
ss
pop
adc
dec
or
in
push
xor
xlat
mov
dec
and
out
hlt
lock
adc
sub
jns
xchg
adc
test
xchg
pop
je
mov
sbb
(bad)
fiadd
stos
outs
loopne
mov
repnz
pop
add
pop
adc
pop
xor
push
stc
lea
fstp
push
inc
div
mov
out
add
pop
add
loope
inc
add
or
push
(bad)
loope
inc
push
dec
cmps
mov
and
pop
dec
outs
or
shl
or
dec
add
(bad)
pusha
push
rcr
dec
and
pop
scas
and
and
sbb
sbb
cmp
push
pop
loopne
cld
arpl
xor
xor
push
sar
or
xchg
pop
or
sbb
leave
out
inc
jl
push
sbb
data16
add
mov
add
ja
push
lea
push
mov
scas
sbb
aas
adc
add
mov
inc
push
sti
inc
and
lds
sbb
out
arpl
push
rcr
or
pop
mov
dec
mov
(bad)
dec
ja
mov
dec
cs
inc
lods
or
scas
sub
sbb
rol
inc
ins
sub
or
mov
jns
pop
sbb
mov
adc
std
adc
jle
or
hlt
je
mov
push
inc
xchg
add
lods
adc
rcl
mov
in
or
sbb
and
add
xchg
push
add
mov
out
fcmovne
and
iret
lsl
xor
(bad)
adc
mov
mov
add
pop
fisub
mov
inc
dec
scas
in
add
out
push
shr
cwde
(bad)
and
jb
in
clc
add
nop
cmps
add
clc
cmp
pusha
jne
sbb
mov
sbb
repnz
mov
jns
or
(bad)
push
and
jb
mov
ret
inc
or
arpl
cmp
ret
push
dec
inc
popf
mov
adc
mov
rol
movs
and
out
dec
rcl
neg
sub
fcom
je
inc
cmp
and
adc
add
pushf
cdq
aaa
inc
sub
add
lock
pusha
pop
xor
fld
add
fisttp
push
and
add
test
(bad)
stos
cmp
cmp
add
add
push
xlat
mov
sbb
(bad)
cmps
loopne
pushf
movs
out
(bad)
sti
add
sbb
popf
movs
jno
mov
pop
add
xor
xor
dec
stc
push
adc
push
cmp
hlt
arpl
and
ins
xchg
js
or
inc
dec
jae
and
add
enter
stos
push
retf
add
outs
in
inc
retf
xor
and
push
jbe
repz
js
and
test
js
lea
loop
xor
mov
push
jle
test
in
adc
mov
adc
in
lock
ror
adc
sub
shr
or
xor
ffree
fisub
push
daa
or
in
cs
fldcw
xchg
push
les
inc
jge
mov
mov
sub
or
clc
or
mov
xor
inc
push
add
adc
mov
pop
arpl
popa
or
int3
fidivr
fimul
pop
or
mov
pop
aam
and
pop
pop
inc
pusha
mov
add
or
mov
push
xchg
cmps
cmps
push
aas
stos
sbb
neg
sbb
and
dec
arpl
clc
mov
scas
adc
movs
mov
mov
xor
outs
add
inc
fsub
mov
(bad)
xchg
xchg
xlat
ja
push
call
popa
dec
pop
inc
lods
in
int3
xor
cmp
sbb
lock
sar
sub
enter
dec
shl
shl
adc
imul
fmul
or
xchg
add
add
cwde
outs
cmp
iret
cmp
fiadd
and
test
outs
jb
cmp
xchg
or
rcl
(bad)
rcl
and
cmps
clc
pop
sbb
push
sbb
xor
jecxz
stos
lock
sub
ja
lock
push
rol
sub
mov
or
mov
test
aas
repnz
sub
cmp
jne
lods
outs
inc
add
push
fs
add
mov
sbb
sbb
pop
test
and
jbe
jo
pop
cmp
sbb
sbb
ror
xchg
retf
and
das
push
mov
add
or
imul
jb
jo
(bad)
mov
cwde
ins
and
dec
jp
xchg
cmps
test
xchg
jo
dec
and
loopne
cmp
push
std
pop
pusha
pop
add
push
test
pop
movs
jo
dec
pushf
fisub
jmp
ret
sbb
mov
sub
xchg
xchg
repnz
ins
mov
add
adc
jo
dec
jnp
push
into
hlt
aaa
add
and
push
sub
jne
adc
cdq
jbe
pop
or
add
lea
push
mov
inc
cmp
mov
rcl
inc
xor
adc
sub
mov
and
sub
or
and
scas
cmp
push
cmps
add
and
sar
fstp
push
pop
xchg
ins
fmul
xor
push
dec
sahf
or
or
int3
sar
lods
ret
fist
pop
inc
movs
leave
xor
pop
aaa
lods
inc
fwait
ja
enter
dec
arpl
fadd
pop
adc
dec
adc
add
jg
retf
(bad)
and
push
inc
in
inc
cmp
xchg
imul
xor
dec
in
cmps
sub
ss
loopne
xor
mov
xchg
rcl
xor
les
jge
push
cmc
cwde
xor
cmp
sbb
call
nop
cmps
pop
mov
fisub
mov
and
imul
ins
int
imul
lahf
mov
ret
fdivr
cmp
add
rcl
sub
ins
ja
inc
push
pusha
sbb
cmp
jge
jns
jge
cdq
xchg
cmp
shr
in
pop
mov
xor
ja
pop
pop
shr
dec
out
mov
xor
and
jns
push
xchg
add
pop
js
xchg
or
test
adc
mov
add
cmp
scas
aas
int3
enter
(bad)
arpl
mov
rol
push
cmp
mov
push
push
push
shl
inc
or
popa
in
retf
pop
rcl
or
push
push
mov
xchg
aam
inc
ds
lsl
nop
test
mov
sub
mov
fdivr
mov
out
test
popa
lods
aaa
ret
adc
push
inc
aad
push
imul
movs
arpl
mov
int
popf
aaa
mov
jmp
aaa
and
je
sbb
cmp
aad
cmps
cmp
jge
les
xlat
dec
mov
int3
adc
popa
outs
sbb
push
cmps
mov
mov
or
adc
jbe
jl
retf
sbb
pop
(bad)
mov
mov
push
int3
test
pop
ins
mov
les
(bad)
cmps
add
shl
xchg
std
adc
jmp
and
ror
pop
push
adc
inc
imul
mov
or
jne
xor
(bad)
mov
and
jl
adc
test
dec
test
or
(bad)
cs
pop
sbb
lods
fisubr
jb
movs
shr
lods
in
fs
mov
and
mov
mov
adc
sub
sub
and
aas
and
movs
pop
add
cli
inc
jg
mov
and
in
ret
sar
or
push
dec
or
jb
jmp
push
mov
cmp
sar
retf
or
pop
jne
ret
scas
mov
sbb
test
jne
jmp
(bad)
pop
mov
adc
and
test
xor
adc
push
push
outs
jb
mov
inc
out
mov
loopne
sbb
and
mov
das
and
clc
mov
adc
shr
mul
push
pusha
xor
pop
arpl
sub
(bad)
mov
add
dec
sbb
inc
sub
sbb
in
or
mov
pop
sub
xchg
adc
stos
dec
mov
mov
test
mov
push
or
stos
adc
pop
add
and
inc
or
in
test
fdivrp
cmp
hlt
or
pusha
pushf
xchg
xchg
hlt
in
in
fld
adc
sub
aaa
adc
adc
mov
mov
nop
add
xor
push
push
out
sub
lock
outs
or
or
and
or
and
ret
test
or
(bad)
push
or
jo
(bad)
dec
or
inc
lock
cmp
and
and
or
push
add
scas
inc
add
adc
mov
xchg
add
jbe
sbb
or
je
and
ins
aad
add
aaa
inc
mov
add
sub
cdq
or
jo
cwde
into
add
test
add
add
dec
add
add
dec
cs
sbb
outs
xor
pop
sub
sar
cld
pop
xor
xchg
pop
adc
enter
fnstcw
xor
sbb
push
xchg
mov
pop
lods
add
xchg
dec
xor
pusha
popf
or
xor
test
fldcw
push
jo
inc
xchg
dec
nop
or
add
dec
mov
pop
push
dec
sub
dec
fst
loope
ror
add
jno
test
or
adc
pop
inc
repz
mov
movs
frstor
and
jg
or
fst
pop
sbb
div
mov
and
retf
add
popa
sub
and
add
fucom
xor
push
or
add
not
jle
sub
push
adc
adc
hlt
or
push
push
push
outs
fmul
push
popa
or
sub
or
(bad)
jge
int3
jno
bound
sub
jnp
sar
fistp
aaa
adc
add
in
es
push
sub
xchg
push
das
adc
add
inc
sbb
(bad)
outs
sbb
jne
dec
jbe
or
in
adc
inc
addr16
js
mov
imul
mov
nop
test
pop
and
cwde
mov
loopne
ja
add
adc
mov
(bad)
cdq
dec
xchg
test
push
inc
test
mov
mov
popf
pop
int3
in
es
xchg
fdecstp
inc
jno
neg
jnp
pop
xor
or
add
sbb
lds
or
fsubr
xchg
xchg
xor
xor
fcom
mov
sti
and
arpl
mov
add
fild
add
gs
stos
pop
pusha
movs
and
inc
loopne
adc
or
push
add
sbb
jno
xchg
aaa
cmp
push
adc
cmp
sbb
cmp
pop
mov
add
and
push
xchg
mov
cmp
inc
jb
and
cli
jno
or
adc
sub
inc
in
dec
call
mov
sbb
sbb
xor
loope
mov
test
push
add
leave
dec
data16
fcomp
shl
daa
push
sub
test
add
fld
(bad)
mov
push
ret
ror
fild
jb
inc
lock
ja
adc
jbe
pushf
or
and
call
ins
push
scas
add
or
dec
cmp
divps
and
sbb
pop
push
cdq
outs
hlt
je
sbb
bound
jno
lock
inc
and
xchg
dec
das
jnp
mov
add
sbb
and
rcr
jne
mov
sbb
sub
add
call
dec
mov
pop
adc
and
nop
aaa
aas
and
(bad)
(bad)
or
pavgw
ret
and
sbb
fdiv
fimul
adc
pop
or
test
or
test
ret
stos
inc
mov
xchg
cs
pop
or
sbb
imul
or
aad
jbe
pushf
cmp
je
pop
jp
fmul
dec
arpl
mov
sub
mov
mov
add
cli
sub
pop
into
loope
sbb
je
dec
and
mov
push
fadd
iret
and
out
pop
cld
or
pop
aaa
and
pop
add
xchg
mov
ret
mov
mov
clc
je
cmp
push
in
or
js
jnp
jmp
mov
into
cdq
in
mov
aaa
shrd
test
sahf
popf
cmps
mov
or
pop
xchg
sub
inc
sti
lock
sbb
adc
sbb
sbb
cmp
aad
(bad)
cmps
pop
push
sub
or
jl
popa
(bad)
add
loope
push
adc
enter
adc
cmp
add
sub
pusha
movzx
shl
mov
adc
enter
add
push
das
leave
shl
or
push
jo
dec
xor
adc
jp
xor
add
xchg
mov
ja
dec
(bad)
jmp
inc
jo
daa
fistp
pop
mov
mov
or
mov
pop
push
xor
push
xchg
cdq
mov
push
imul
jmp
mov
pop
and
das
sbb
xor
(bad)
icebp
ret
arpl
pop
xor
bound
mov
repz
and
or
fild
mov
inc
fimul
add
outs
in
out
push
in
lock
inc
push
mov
aad
xor
and
fistp
fs
test
push
jo
mov
cs
in
sub
mov
mov
dec
xor
push
outs
sbb
repz
pop
or
xor
push
jns
jo
sub
jp
cmp
dec
xor
or
push
push
out
mov
shl
cmp
lds
add
(bad)
cmp
rcl
and
xchg
lods
ret
out
ins
sub
aaa
push
mov
mov
jnp
push
cmp
sti
jg
or
sbb
ret
aam
fisubr
call
pop
leave
rol
nop
add
pop
sub
pop
sub
in
or
add
inc
sbb
dec
mov
push
jl
or
or
sub
(bad)
dec
adc
dec
xchg
mov
push
movs
adc
push
sub
pusha
cmp
xchg
push
sahf
inc
mov
adc
stos
mov
inc
sti
loop
shl
lods
ja
inc
jne
cmp
push
bound
cli
movs
sub
inc
dec
test
mov
pushf
adc
lods
jg
mov
getsec
mov
sub
or
jl
lahf
sub
sbb
xlat
sub
enter
add
inc
pop
mov
xor
xor
cmc
pop
fld
test
push
pop
jle
inc
es
adc
push
rcr
aaa
sti
aaa
jmp
sbb
not
add
jne
adc
inc
add
or
data16
xor
add
in
loopne
fwait
ins
inc
loopne
mov
loope
ins
inc
adc
mov
fsubr
or
sub
add
add
xchg
ret
inc
xchg
(bad)
jo
jmp
mov
ss
nop
ja
pop
sub
add
loopne
popa
xor
sub
sbb
cmps
xchg
push
aas
add
out
mov
push
or
add
sbb
jnp
aas
jmp
or
sub
xchg
(bad)
js
jbe
scas
jmp
mov
sub
add
loopne
sub
test
add
push
cmp
enter
add
outs
adc
imul
mov
add
aaa
push
and
sbb
jmp
jecxz
adc
pop
push
rcl
lahf
cmc
mov
mov
add
push
push
xchg
add
call
cld
in
mov
fidivr
jo
push
xor
imul
add
pop
pop
or
dec
inc
dec
push
pushf
mov
call
add
adc
mov
rcr
unpckhps
jge
inc
jmp
daa
lea
or
(bad)
popf
mov
test
stos
or
out
loopne
in
xchg
aaa
es
or
adc
mov
lock
cs
xchg
gs
and
lods
jge
sbb
push
ss
inc
pop
cdq
enter
outs
or
jno
mov
ins
cli
mov
pop
inc
mov
fsub
idiv
dec
sub
movs
mov
cmc
out
pop
add
cwde
sar
rol
addr16
push
or
and
lea
xor
inc
test
xchg
or
mov
jg
pop
inc
cmp
jne
cmp
cs
les
jo
shr
scas
test
pop
xor
pop
cli
stos
sbb
cld
dec
loope
cmp
inc
cmp
mov
mov
or
xor
add
adc
jbe
mov
sbb
loopne
sub
push
sbb
test
adc
xchg
and
pop
mov
lahf
or
xlat
xchg
xor
out
xchg
ror
in
sahf
cs
shl
inc
and
(bad)
add
bound
jge
xor
ja
cwde
(bad)
mov
adc
fs
ficomp
inc
ja
sbb
push
and
dec
mov
dec
(bad)
mov
and
add
or
clc
addr16
aam
push
or
(bad)
cmps
xor
jne
stos
add
loopne
ret
sbb
add
adc
sub
mov
shr
mov
adc
js
enterw
dec
add
and
in
push
mov
mov
adc
jmp
and
das
push
popa
or
dec
adc
sbb
mov
lods
inc
jge
or
mov
ins
loopne
dec
fstp
mov
jo
dec
sbb
or
sub
fs
xchg
add
(bad)
or
retf
mov
add
fnstenv
mov
pop
add
adc
out
pop
sub
bound
and
pop
xor
shl
push
push
push
mov
or
mov
sbb
inc
and
and
or
push
mov
adc
jae
shl
sub
mov
and
mov
or
dec
adc
jo
imul
jge
aaa
and
fnstcw
sbb
mov
mov
push
test
pop
ja
ret
pop
(bad)
sbb
test
push
dec
enter
rcr
sbb
inc
and
inc
mov
adc
test
and
or
add
nop
lea
jns
pop
mov
cmp
lods
mov
je
ja
sbb
mov
dec
cmp
loop
cmp
xchg
mov
push
das
mov
push
mov
xchg
or
xchg
sbb
test
cmps
adc
call
inc
and
push
pop
inc
fisubr
or
ds
push
or
push
sub
push
pop
in
mov
push
xchg
push
mov
enter
add
mov
xor
add
mov
sub
popf
fnstcw
test
inc
xor
sti
pop
pop
rol
or
mov
and
inc
cmp
inc
or
lahf
pushf
dec
push
jmp
xor
pop
movs
ss
cs
imul
mov
pop
push
mov
scas
dec
popf
xchg
jecxz
fist
add
mov
ss
aas
or
loopne
mov
mov
pop
sub
xchg
xchg
inc
int
jbe
xlat
cmp
ror
jne
xor
xchg
int
push
cmp
(bad)
jo
or
loope
aad
jne
mov
dec
fucomp
or
jns
iret
int
inc
pop
sub
add
jmp
push
f2xm1
jnp
xor
cmp
xchg
jge
pop
gs
mov
(bad)
shl
xor
dec
add
mov
and
inc
and
pop
inc
arpl
popa
cmc
mov
pop
inc
inc
addr16
dec
add
in
je
mov
shl
fbld
sub
add
adc
mov
mov
or
fwait
add
push
ret
and
es
idiv
push
sbb
ss
sbb
add
add
cmp
or
add
aam
scas
popf
add
lock
sbb
jne
mov
nop
or
push
fsub
add
mov
das
fstp
stos
fwait
add
mov
rcr
adc
imul
jo
pop
call
pusha
and
movs
xor
push
mov
shr
adc
maxps
mov
adc
je
bound
xchg
in
xchg
or
adc
dec
inc
xor
or
popa
(bad)
fild
jae
cmps
mov
int3
or
je
cwde
mov
mov
or
xor
inc
mov
loopne
xor
mov
repnz
pop
loope
adc
enter
cs
xor
cmp
lds
sahf
ins
imul
push
inc
or
add
add
inc
fnstsw
and
(bad)
xlat
inc
and
xchg
dec
dec
xor
sbb
inc
push
fs
sbb
xor
mov
aad
adc
mov
adc
push
dec
adc
out
sahf
and
scas
push
push
mov
jbe
sbb
std
add
dec
test
mov
xchg
mov
inc
jo
adc
and
inc
dec
leave
jb
ins
add
ret
adc
icebp
inc
aad
jp
jl
or
cmc
ret
xchg
or
lods
mov
pop
adc
jno
jo
inc
jge
or
and
jne
and
inc
inc
arpl
cmp
imul
adc
push
mov
mov
fisub
jmp
adc
xor
push
pop
jne
movs
cmp
dec
pop
push
dec
jmp
cmp
iret
mov
xchg
xor
add
xor
jmp
outs
adc
in
mov
dec
cmp
imul
adc
inc
pop
cmps
inc
cwde
pusha
xlat
stc
cmp
arpl
cmp
into
inc
aaa
xor
jo
push
and
inc
adc
push
dec
push
sbb
mov
and
mov
fidiv
sar
add
sbb
xor
nop
and
xlat
and
sbb
movs
shl
les
inc
xor
rcr
add
push
pop
adc
lods
pop
xor
out
jmp
mov
cmp
adc
inc
fiadd
les
sub
pushf
adc
sbb
add
mov
test
push
sbb
les
cmc
xor
rol
test
clc
push
movs
cwde
aam
xor
or
leave
add
jbe
jmp
fsub
fcomp
push
stos
mov
in
lods
jmp
pusha
mov
dec
cwde
sub
out
jl
xor
xor
sar
and
test
xchg
gs
pop
in
mov
or
in
dec
data16
in
les
clc
mov
(bad)
xchg
ss
test
push
iret
sub
sub
cmp
pop
sub
mov
or
lock
inc
pop
jnp
out
dec
pop
dec
adc
adc
ds
jmp
and
jnp
adc
add
or
in
enter
push
pop
and
sbb
cmps
fisttp
ins
rcl
xchg
adc
push
lods
jecxz
pcmpeqw
add
sub
sbb
inc
cld
push
call
sub
mov
pop
test
xlat
scas
fcom
cmp
inc
adc
xor
sub
inc
scas
lods
add
mov
in
mov
cmp
sub
xchg
add
or
pusha
mov
or
gs
and
dec
dec
clc
dec
sub
lods
xlat
xchg
movs
add
mov
mov
fsubr
inc
mov
pop
or
sub
jl
push
dec
cdq
cli
adc
sub
xor
lods
xlat
test
sub
setge
mov
in
dec
cmps
popa
test
rcr
neg
mov
mov
sub
mov
(bad)
push
nop
mov
cmp
rol
xchg
sub
jmp
sbb
(bad)
xchg
sbb
push
ins
mov
repz
inc
or
mov
dec
popf
mov
push
scas
int
adc
adc
pusha
adc
pushf
and
adc
mov
mov
xor
ret
dec
and
push
in
or
in
jae
pop
or
add
xor
xlat
aam
cld
sub
sar
xchg
or
rol
aaa
lods
and
leave
xor
mov
or
test
sub
or
rol
add
xchg
in
xchg
test
sbb
jo
mov
xchg
jp
ja
mov
aam
cli
cmp
pusha
add
or
jo
imul
jne
sub
sub
loopne
and
mov
add
add
sbb
pop
push
shr
mov
inc
popf
and
inc
mov
lds
mov
ja
(bad)
retf
ss
mov
and
sbb
mov
adc
jmp
and
dec
inc
test
ja
mov
and
loope
inc
inc
push
or
ss
jmp
sub
ins
dec
ss
scas
mov
ins
stos
push
inc
fucomp
or
adc
mov
ins
movs
pop
lods
loope
pop
push
inc
and
retf
push
imul
push
and
mov
mov
or
neg
cmp
adc
imul
mov
sar
sbb
daa
adc
adc
mov
popa
and
stos
sahf
loop
(bad)
add
cmp
inc
mov
mov
shl
mov
jle
jmp
mov
lock
sar
fadd
inc
stc
mov
fcom
push
repnz
add
fwait
adc
cmp
adc
in
and
cmps
stos
and
sub
push
push
xchg
fadd
imul
aad
jne
call
and
pop
jbe
jmp
jmp
or
xchg
aam
mov
mov
int
movs
lock
test
daa
fisttp
jmp
sbb
jne
ror
or
push
inc
cli
add
int3
mov
inc
cs
sbb
rcl
jmp
add
inc
and
push
jecxz
and
cwde
aam
inc
call
cmp
shr
adc
nop
outs
or
sbb
mov
jg
por
cmp
sbb
int
outs
inc
add
inc
mov
hlt
and
jle
sbb
ret
test
cmp
ds
ja
jg
add
jo
mov
iret
inc
test
pop
xor
pop
in
inc
mov
jne
mov
sbb
xchg
loope
loopne
cmps
xor
push
mov
and
jne
aas
je
inc
add
or
xchg
inc
dec
pop
loopne
stc
test
gs
outs
push
ss
sbb
ins
xor
push
add
adc
and
(bad)
and
ret
sbb
neg
or
and
and
test
gs
pop
hlt
repnz
repnz
icebp
inc
clc
mov
push
rol
popf
in
or
jno
das
xor
adc
sub
aas
cmps
lock
and
mov
sbb
aam
loope
push
pop
es
mov
(bad)
add
fcomp
inc
dec
sbb
push
pop
sbb
lods
psubq
sbb
mov
xchg
inc
test
sub
movs
cmp
rol
fcmovnbe
aam
pop
jl
scas
sbb
(bad)
shr
mov
loop
inc
add
mov
sbb
test
nop
or
adc
and
inc
in
mov
inc
test
pusha
sti
cli
push
sbb
mov
inc
add
mov
loopne
push
movs
mov
scas
mov
outs
add
push
repz
pop
add
inc
dec
or
adc
fistp
add
add
rcr
adc
mov
lea
and
sub
and
xchg
xlat
lea
sub
ins
inc
shl
fistp
cs
cmp
cmp
mov
pop
movs
lahf
mov
inc
sub
jne
sub
loopne
dec
sbb
dec
call
lods
push
push
lahf
(bad)
dec
adc
xor
dec
rcl
adc
xor
fcmovbe
xor
fistp
adc
loop
daa
inc
pop
mov
aaa
cmp
stos
ds
or
mov
push
ror
mov
or
or
sbb
lods
mov
sbb
push
test
xor
sbb
sbb
pop
and
push
lock
test
shr
cmp
fldcw
cmp
adc
inc
test
xchg
inc
xor
adc
sbb
shl
cwde
cld
add
pop
mov
stos
push
adc
movs
loop
push
out
andnps
mov
xlat
das
sbb
push
daa
adc
xor
adc
pushf
xchg
push
add
rol
or
mov
call
pop
sbb
and
jno
(bad)
mov
or
pop
fst
rol
test
jb
inc
pop
xchg
add
mov
jmp
mov
movs
in
(bad)
in
push
or
mov
adc
cmp
cmp
loop
call
ret
push
mov
jmp
and
adc
dec
popf
out
movs
push
test
xor
mov
nop
loopne
sbb
in
ret
daa
ret
sahf
in
loope
nop
in
mov
dec
mov
call
ret
and
je
fwait
neg
xchg
les
or
das
xchg
inc
cmp
sub
push
ret
cs
add
dec
popa
cld
ror
jge
imul
stos
aas
dec
gs
es
xor
enter
add
push
test
lahf
js
push
fdiv
inc
rol
cmps
daa
xchg
xchg
rcl
push
sbb
pop
mov
fimul
cdq
stos
dec
aas
in
(bad)
fiadd
cmc
mov
shr
mov
inc
ins
or
js
sbb
dec
add
test
fwait
jl
mov
or
jne
dec
sbb
pop
out
add
jno
shl
aam
push
adc
mov
rol
and
les
dec
fwait
sub
jmp
call
pop
adc
aam
pop
jmp
or
mov
mov
sbb
je
pop
fldcw
push
inc
pop
push
add
cmp
aad
inc
and
aas
cmps
jo
mov
and
ins
fisttp
jl
cmp
inc
shl
xor
mov
add
jnp
cmp
outs
sbb
add
fwait
mov
pop
mov
add
cmp
ret
popa
pusha
sub
mov
jb
sub
loop
in
jo
std
and
mov
jb
daa
pop
push
dec
push
cld
test
inc
cld
cld
or
leave
push
add
shr
icebp
pusha
cmps
es
pop
aas
enter
lds
add
ret
aaa
jo
jmp
push
add
push
iret
add
or
sbb
addr16
jnp
push
das
or
lahf
movs
mov
fcmovb
and
xor
pop
xchg
ds
in
xchg
(bad)
sti
jmp
scas
ficomp
mov
je
iret
je
or
jno
fs
jbe
xor
sahf
icebp
gs
and
imul
inc
rol
sub
sub
and
jb
sbb
pop
jb
jl
test
call
inc
stc
inc
adc
xor
and
lahf
int
out
xchg
es
popa
outs
movs
push
mov
and
pop
mov
mov
mov
js
pop
repnz
or
mov
push
(bad)
dec
xor
and
or
adc
and
popa
cdq
and
js
ret
arpl
mov
cwde
outs
adc
dec
sar
sbb
pop
dec
inc
push
fs
dec
dec
inc
sbb
pop
jb
xchg
rcr
mov
push
push
mov
pop
dec
inc
dec
pusha
pop
and
xchg
repz
and
xor
mov
or
jns
fs
pop
sar
xchg
sub
pop
iret
inc
mov
xchg
aaa
sub
test
inc
outs
fcomp
ins
and
dec
adc
adc
or
push
and
fwait
adc
mov
add
adc
leave
push
(bad)
frstor
cs
xchg
loopne
adc
inc
pusha
mov
test
out
jl
(bad)
and
jl
hlt
jle
movs
cmp
mov
sbb
fxch
fistp
jl
push
out
pop
inc
test
jne
out
xchg
test
iret
pop
adc
xor
xchg
sub
or
jmp
or
xchg
push
xchg
nop
or
fisub
int
adc
push
mov
inc
and
sbb
pop
jg
jmp
test
imul
jmp
daa
iret
ja
inc
pop
mov
dec
xor
sbb
mov
js
mov
add
cmp
or
jb
loop
inc
scas
fsub
jbe
shl
lock
push
and
mov
test
mov
dec
mov
dec
cmp
test
mov
cmp
push
xchg
push
and
mov
xchg
push
cmp
cmp
push
sbb
inc
fcom
pop
in
push
xor
loopne
pop
imul
imul
inc
enter
or
sbb
xchg
push
add
ss
sbb
jne
out
jno
pop
fwait
dec
and
add
inc
iret
xor
lock
neg
mov
inc
sbb
fldcw
and
add
fnstsw
loop
(bad)
lds
gs
xchg
dec
int3
inc
and
pop
inc
popa
popa
adc
add
fdiv
pop
mov
push
push
and
and
scas
inc
popf
leave
jae
addr16
ins
sbb
bound
dec
or
inc
test
jg
loopne
push
push
or
(bad)
pop
mov
cmp
cs
mov
dec
adc
pop
lahf
cmc
and
repnz
push
push
xor
cmp
test
dec
pop
outs
or
test
hlt
cmp
daa
xchg
lods
cmc
call
cs
adc
shl
jae
cmps
pop
push
ror
test
and
mov
push
adc
inc
xor
dec
dec
push
jecxz
jne
jge
ret
and
xor
or
imul
jmp
movsx
add
sub
inc
cmp
mov
xlat
outs
ins
sbb
das
push
cmp
lock
ss
das
ss
mov
push
ret
and
inc
sbb
data16
sbb
pushf
adc
xchg
aad
adc
retf
fimul
outs
ror
daa
xchg
sub
repnz
mov
and
mov
mov
mov
out
rol
mov
dec
inc
pop
inc
inc
fimul
popf
or
or
mov
add
mov
ret
js
jg
or
or
mov
inc
inc
daa
inc
add
push
lock
retf
test
or
sub
cmp
das
rol
test
cmps
pop
adc
les
jp
es
cwde
push
jbe
mov
sub
sbb
add
(bad)
retf
cli
adc
loope
add
or
dec
rol
pusha
and
sbb
mov
or
cmps
fwait
mov
pop
pop
mov
hlt
push
or
xchg
pop
movs
add
fistp
sbb
cs
push
mov
or
dec
and
call
je
jmp
sbb
test
or
jo
nop
mov
into
push
mov
movs
mov
int3
stos
nop
cmc
adc
sub
sub
or
rcr
les
cmp
je
xor
add
pop
cld
add
push
jecxz
push
pop
add
and
xor
xor
cmp
mov
inc
sub
cmp
inc
or
xor
lock
sub
pop
inc
or
rol
jmp
sbb
mov
cwde
in
add
clc
hlt
js
fiadd
dec
es
rol
(bad)
jno
pop
mov
sbb
mov
test
stos
cmp
add
mov
aaa
adc
cmc
lock
inc
fcom
cmp
sbb
dec
rcl
dec
mov
ret
pop
hlt
je
mov
sbb
sub
mov
add
push
push
xlat
cmp
inc
ins
cmovbe
adc
pop
rcr
mov
sub
outs
nop
test
ins
out
add
fisttp
rcr
add
cdq
xor
push
shr
test
sbb
xchg
xchg
lea
lea
ret
xor
xor
test
and
xor
(bad)
add
aaa
adc
inc
xchg
ds
add
add
movs
leave
and
dec
jle
xor
call
mov
pusha
out
jmp
sbb
sbb
add
mov
or
in
inc
sbb
xchg
int3
ins
mov
xchg
mov
out
xchg
and
in
pop
fwait
sbb
and
cmp
das
sub
dec
add
and
loopne
adc
xchg
hlt
mov
push
inc
or
cmp
cmp
adc
test
mov
call
pusha
sub
sub
leave
sar
sbb
outs
aam
xchg
sbb
or
movs
(bad)
mov
adc
xchg
jp
push
and
retf
push
push
mov
adc
jo
push
inc
push
fsubr
jge
mov
pop
test
cmp
mov
or
push
rcl
icebp
push
clc
sbb
mov
mov
clc
bound
push
xchg
jp
call
and
outs
push
aas
xor
movs
(bad)
bound
adc
push
adc
mov
mov
xor
cmp
adc
mov
push
adc
ret
daa
xchg
enter
imul
cmp
leave
das
jns
shl
sub
cmp
aaa
ret
test
add
add
mov
jmp
pop
rcl
fcom
movs
ret
and
sub
fisttp
push
leave
or
nop
addr16
test
lea
xchg
fwait
shl
xlat
pushf
adc
dec
dec
add
adc
(bad)
pop
push
ins
sbb
in
and
and
cmp
call
mov
shl
push
(bad)
sti
jne
pop
call
outs
in
mov
xor
xor
add
dec
pop
and
xor
test
or
repnz
and
inc
pop
sbb
out
je
mov
jbe
je
or
shl
mov
or
or
mov
pop
xor
jo
dec
adc
sbb
sbb
adc
or
xor
cmc
jmp
inc
daa
or
mov
pop
cmp
lea
daa
cmp
mov
cs
jne
dec
push
xor
jecxz
sub
(bad)
fsub
cmp
test
inc
xchg
sti
dec
aam
shl
test
test
ins
xor
test
aad
dec
sbb
pop
clc
inc
dec
dec
dec
inc
sbb
add
add
cmps
and
hlt
or
or
pop
sub
jb
enter
xor
cmp
push
xchg
push
das
mov
out
pop
(bad)
aas
push
shl
push
push
push
xor
popa
add
add
in
clc
xor
js
and
cmp
cmps
and
mov
push
xchg
test
push
add
mov
test
(bad)
lds
add
test
pop
shl
and
dec
jb
sbb
es
(bad)
mov
addr16
rol
or
inc
or
cmp
sar
dec
hlt
arpl
fsub
fnstsw
sbb
int3
push
sbb
rcr
(bad)
and
xor
aas
dec
inc
stos
sbb
(bad)
lds
push
lods
repz
sbb
jo
pop
(bad)
adc
pop
adc
retf
test
sbb
ss
or
sub
mov
das
sbb
xor
sub
dec
in
inc
aaa
dec
and
shl
movs
dec
or
and
mov
dec
mov
rol
out
jmp
dec
dec
push
ror
or
outs
add
push
cmp
fisttp
jne
imul
xor
add
xchg
xor
jae
(bad)
(bad)
loope
adc
test
dec
lods
push
and
je
das
js
es
xor
inc
or
mov
cmp
sbb
and
and
dec
mov
xlat
or
inc
fsubr
fs
sbb
mov
dec
adc
xor
or
xor
and
dec
loop
xor
pop
das
test
lock
rol
push
pop
or
inc
retf
pop
icebp
dec
sbb
sub
add
jp
ja
dec
in
sahf
mov
hlt
(bad)
aad
add
pop
dec
fnstsw
or
mov
or
and
or
ret
push
push
xor
mov
jmp
xchg
ss
push
ret
std
comiss
xor
or
je
and
lea
jne
test
pushf
push
mov
adc
inc
es
add
cmp
mov
popf
xor
dec
inc
sti
mov
adc
aam
sbb
jae
or
mov
(bad)
mov
les
daa
test
popa
or
pop
shl
sbb
test
xor
xchg
and
ins
call
add
add
sahf
ret
push
sub
mov
sub
and
aad
push
xor
mov
push
push
sub
addr16
adc
test
adc
stos
dec
clc
cmp
add
aaa
or
mov
xor
ret
sbb
inc
or
pop
and
es
adc
adc
sar
xchg
push
mov
sbb
dec
mov
xchg
jg
scas
cwde
inc
jg
push
jg
adc
in
adc
out
add
clc
imul
ins
mov
addr16
push
push
cs
addr16
mov
repz
and
ds
pop
push
cs
jle
pop
std
sbb
xor
in
stos
sub
fsubp
pusha
adc
push
imul
sub
imul
jb
jns
add
sub
xchg
ja
in
add
and
sbb
add
cmp
push
retf
repnz
or
test
das
mov
adc
icebp
xchg
into
lods
sbb
pop
je
xor
jbe
add
pop
and
and
pop
xor
sbb
mov
and
das
retf
cmp
sbb
clc
mov
adc
add
lahf
adc
imul
ret
addr16
or
stos
fstp
lods
push
ins
xchg
xchg
mov
xchg
add
inc
pop
or
cdq
xor
lods
cdq
adc
mov
es
push
shl
push
lods
add
inc
mov
mov
push
mov
scas
fs
add
add
ins
push
add
pop
mov
push
popf
inc
xor
add
mov
add
aaa
cmp
inc
push
fidivr
add
push
pusha
ficomp
ret
test
jns
mov
mov
dec
mov
mov
inc
mov
push
jb
xchg
popf
mov
and
popf
push
push
add
pop
jge
rcl
push
jne
ret
outs
xlat
push
fadd
mov
mov
retf
div
or
and
hlt
loope
pusha
and
outs
inc
pop
out
dec
ss
dec
cmp
es
jmp
sub
push
rcl
bound
push
and
int
inc
popa
add
xchg
pop
pop
add
jae
xor
rcr
inc
cmp
fisttp
push
mov
or
cwde
(bad)
inc
or
add
cmp
xor
jp
mov
and
jbe
push
popa
xor
cmps
xchg
or
push
add
data16
mul
dec
pop
or
xor
inc
outs
inc
mov
jmp
ss
adc
fild
arpl
in
mov
push
retf
xor
in
pusha
imul
inc
shl
sahf
jbe
mov
adc
test
push
xor
push
movs
leave
clc
mov
add
arpl
rol
ins
je
xor
xchg
gs
dec
or
sbb
ror
mov
xchg
mov
lea
imul
mov
pop
jo
mov
std
cmp
xchg
dec
adc
inc
xor
push
xor
adc
inc
push
inc
push
dec
cmp
fcomp
push
ret
jmp
mov
push
mov
test
xchg
cwde
or
stc
pop
test
cmp
add
cwde
pop
push
icebp
or
and
add
add
pop
or
sub
mov
and
jle
leave
xchg
psubd
cwde
cmp
test
mov
jo
or
adc
dec
cmp
sub
call
out
pop
pop
push
gs
push
dec
sbb
sub
cmc
push
and
and
add
mov
rcl
and
xchg
in
mov
jne
in
loopne
mov
or
inc
cmps
ss
add
or
ins
jecxz
mov
pop
and
outs
movs
adc
push
shl
in
imul
adc
aas
inc
lock
xor
sub
mov
mov
push
sbb
test
ss
gs
mov
push
retf
mov
stos
jne
pusha
jmp
les
in
add
adc
hlt
in
adc
cli
jnp
cmp
mov
mov
loope
dec
adc
ins
mov
jne
aaa
aam
add
outs
mov
add
push
dec
inc
ins
add
int3
mov
cwde
add
inc
add
push
jbe
jge
(bad)
iret
adc
inc
add
ss
pop
xchg
(bad)
and
pushf
xchg
retf
loope
add
ror
dec
adc
mov
call
fdiv
push
push
cmp
(bad)
lods
cmp
daa
cmp
pop
shr
aas
aad
pop
jae
and
push
adc
shr
fs
mov
pop
mov
in
js
repz
cmp
sub
sbb
inc
cmps
sbb
sub
movs
xor
cmc
inc
lea
sub
push
adc
jp
push
and
add
popf
mov
dec
lods
(bad)
rol
mov
xchg
pop
add
adc
and
cmp
popf
out
test
and
sub
xchg
cmp
popf
je
test
dec
dec
(bad)
icebp
xor
stos
mov
mov
pusha
fld
(bad)
mov
fiadd
loop
xchg
ret
jle
into
dec
or
inc
add
data16
push
adc
rcl
ins
pop
xchg
mov
sar
pop
pop
and
nop
or
fcomp
jnp
pushf
loope
jl
fld
mov
test
cli
push
clc
adc
cld
cmp
jge
sbb
(bad)
pusha
pop
xchg
jno
or
push
add
dec
gs
call
aad
mov
mov
sti
mov
popa
dec
xor
push
add
mov
mov
fnstenv
je
shl
inc
daa
xchg
dec
das
sbb
jne
(bad)
mov
mov
cmp
xor
push
(bad)
sub
inc
fiadd
sub
pop
jb
sbb
test
lods
push
or
hlt
jno
mov
adc
call
mov
mov
add
add
inc
shl
mov
sbb
adc
sub
sar
xor
push
out
(bad)
test
jecxz
rol
(bad)
ins
adc
lock
fadd
xor
xor
dec
outs
mov
push
(bad)
mov
rol
mov
dec
jno
mov
mov
sub
sbb
outs
fwait
imul
add
mov
lahf
das
in
push
(bad)
xor
clc
jns
push
aaa
adc
lds
add
push
sbb
xchg
xchg
or
adc
jnp
sub
jbe
ins
cld
jbe
mov
pop
fadd
xor
ret
lahf
test
mov
jb
(bad)
ds
pop
cmp
cs
mov
ror
clc
add
and
add
(bad)
cmps
(bad)
je
movs
repnz
and
js
sub
stos
cli
push
inc
sar
movs
mov
mov
in
sbb
mov
fst
xchg
and
sub
add
imul
push
add
jo
jle
fld
sub
std
mov
push
test
add
pop
cmp
aam
lods
jo
div
ins
xor
mov
int
pop
(bad)
fld
dec
mov
inc
ror
cmc
push
jne
add
xchg
mov
dec
push
jns
popa
mov
dec
push
cli
lods
movzx
push
gs
mov
inc
mov
(bad)
push
js
or
pop
sbb
sbb
inc
dec
fidiv
sbb
dec
outs
add
add
push
je
les
add
dec
enter
mov
pop
cmp
sbb
sti
pop
aas
cmovp
mov
sbb
rcl
add
add
mov
pusha
pop
or
adc
sub
add
inc
pop
add
cwde
nop
xchg
mov
pushf
jmp
push
push
jae
push
sbb
cmp
xchg
pop
adc
scas
or
dec
pop
jmp
adc
rcl
jg
xor
cmp
je
xor
push
jb
ins
or
push
cmp
jne
int
xor
dec
nop
and
mov
adc
imul
daa
sub
sbb
pop
(bad)
xchg
dec
les
daa
imul
rol
outs
sub
push
jg
dec
sbb
stc
or
xchg
hlt
inc
mov
jp
pop
add
sub
dec
fadd
(bad)
call
mov
bsr
hlt
xchg
add
or
adc
aaa
mov
inc
ins
inc
ins
add
dec
shr
adc
and
mov
nop
push
mov
cmp
xchg
or
mov
jle
adc
pop
inc
sub
mov
adc
lea
push
cdq
adc
cli
outs
rol
rol
sbb
or
outs
ins
adc
inc
add
imul
leave
dec
jl
shr
xor
push
jmp
cmp
cmp
rcl
leave
or
add
ja
mov
sub
inc
adc
add
les
aaa
sub
or
and
cdq
les
and
mov
sub
or
ins
xor
jmp
ja
test
je
mov
mov
data16
(bad)
mov
pushf
push
inc
sbb
fcom
mov
sub
jmp
aam
fs
cmps
(bad)
and
enter
cmp
lds
popa
cmp
inc
data16
sub
dec
cwde
sub
loopne
push
or
aam
mov
adc
push
sub
mov
and
(bad)
arpl
retf
cmp
jne
xchg
add
arpl
inc
push
aas
outs
icebp
jg
inc
pop
xor
mov
(bad)
adc
lock
jo
cmp
js
ror
shr
cmp
mov
movs
and
nop
or
jp
mov
dec
lock
pop
icebp
add
arpl
loope
cdq
or
inc
fcmovbe
xchg
movs
je
lock
push
fiadd
jmp
fild
mov
pop
xlat
mov
adc
pop
xor
pusha
push
pusha
pop
inc
mov
scas
sub
and
xchg
xlat
jae
jp
and
sbb
inc
mov
mov
test
ja
bound
pop
adc
enter
inc
fmul
or
add
enter
cmp
popf
push
sub
add
inc
dec
inc
add
push
inc
fstp
or
add
inc
jne
dec
inc
aaa
xchg
and
jp
inc
arpl
ins
lea
inc
call
push
add
and
jmp
or
pop
sar
inc
clc
das
mov
lods
out
jge
mov
sub
inc
pop
lods
or
js
imul
sbb
add
rol
sahf
dec
fst
xor
inc
js
test
or
inc
jo
inc
mov
and
imul
ins
fcomp
rcl
sbb
ret
push
add
push
shl
mov
mov
push
push
inc
or
daa
and
dec
(bad)
mov
ror
push
xchg
or
rcr
and
mov
mov
lock
test
or
arpl
into
popa
pushf
sub
mov
stos
mov
sbb
and
sbb
lock
jle
push
and
sub
xor
not
mov
cdq
in
jo
or
movs
cmp
inc
rcr
or
movs
fnstsw
bound
lea
dec
sbb
add
xor
lock
xor
sbb
popf
or
mov
xlat
xor
in
add
popa
gs
(bad)
dec
or
test
das
aad
std
mov
xcrypt-ofb
cmps
sub
push
pop
sti
and
mov
in
pop
mov
mov
in
xchg
dec
retf
arpl
adc
shr
fcmovnu
adc
aas
jmp
cs
mov
shr
(bad)
pop
push
dec
lods
retf
push
xchg
inc
fimul
inc
jb
or
xor
cmp
shl
addr16
and
fnstsw
jl
lea
mov
xor
sub
mov
test
jae
cmp
paddq
jae
mov
push
(bad)
ret
adc
push
and
jecxz
jge
out
mov
pop
push
lds
xor
pushf
xchg
xor
pop
mov
adc
inc
jo
sbb
xchg
add
fcom
adc
mov
pop
repz
and
adc
out
jne
xor
bound
sbb
dec
stos
sub
inc
pop
inc
imul
push
fdiv
cmp
jb
out
ds
push
add
popf
mov
mov
adc
jb
push
pushf
xor
jo
in
mov
jg
pusha
push
cmps
adc
mov
mov
push
mov
xchg
jmp
jg
aam
and
mov
sbb
adc
push
adc
sar
movs
inc
inc
inc
and
push
das
fiadd
je
mov
jecxz
ds
add
sar
mov
cmps
je
jae
push
push
and
jg
(bad)
cmp
ins
imul
cs
dec
lock
rcr
dec
std
outs
inc
cmp
je
test
aaa
test
mov
lods
inc
imul
sbb
test
mov
mov
adc
mov
nop
into
test
fs
out
retf
std
inc
inc
enter
inc
mov
cmp
imul
dec
push
cmp
and
jae
fiadd
rcr
mov
sti
add
pop
bound
test
dec
jns
aaa
or
ret
inc
fdiv
adc
add
test
mov
pop
cmc
mov
or
out
daa
call
call
xchg
add
cdq
js
in
gs
xchg
xchg
fstp
sub
cmps
dec
or
add
mov
out
outs
pop
add
sbb
ror
ret
pop
dec
call
popa
and
fs
popa
daa
xchg
xabort
(bad)
inc
push
sbb
in
sbb
(bad)
aam
fs
inc
ror
enter
push
(bad)
shl
mov
ins
xchg
cwde
dec
fldcw
cmp
and
or
dec
and
dec
cmp
and
cmp
shr
dec
into
ret
push
push
push
cmp
jo
pop
fs
mov
pop
(bad)
aam
jmp
jne
adc
mov
ja
add
inc
arpl
xchg
je
jo
jmp
or
sub
arpl
pop
or
push
push
loop
sub
cdq
shl
movs
inc
add
mov
and
add
and
add
dec
mov
shl
sbb
xchg
ja
daa
lock
mov
pop
inc
add
pop
sub
rol
dec
xchg
cdq
nop
cmps
push
xor
popa
or
add
lea
popa
jge
add
mov
and
cmc
pop
inc
call
bound
aam
mov
xor
mov
inc
movs
mov
mov
sbb
add
mov
or
xor
cli
push
mov
cwde
ja
sub
cmp
and
sbb
pop
repnz
cwde
enter
and
sub
cmp
repnz
aam
in
and
xor
mov
cmp
in
nop
out
and
xor
add
dec
inc
dec
jnp
adc
mov
mov
push
push
or
rcl
das
mov
das
and
outs
je
dec
xor
mov
imul
cmps
test
pop
aaa
adc
sub
jg
pop
fcomp
cs
push
movs
cmp
jge
xchg
xchg
fdiv
aas
push
inc
or
inc
sbb
add
jp
or
call
xchg
push
xor
jb
daa
(bad)
in
lea
or
cmps
in
inc
mov
inc
cs
aaa
push
or
enter
push
and
enter
push
push
dec
and
inc
or
cmp
xor
or
enter
and
enter
sbb
enter
adc
or
or
add
sbb
mov
(bad)
in
(bad)
cmp
cmp
ins
cs
xchg
sbb
loopne
add
rcl
and
lods
cmc
sub
imul
jl
or
mov
pop
fs
push
adc
icebp
cmp
shl
sbb
invlpg
jecxz
xor
xlat
out
or
cmp
in
inc
add
fstp
inc
pop
sbb
shr
int
sub
mov
fsub
inc
repnz
lock
and
add
cmp
fwait
pushf
pushf
mov
hlt
clc
cld
pop
pop
push
scas
mov
push
leave
pop
jbe
imul
jg
mov
imul
inc
das
push
aaa
pusha
stos
movs
or
pusha
and
lahf
ror
aaa
add
xor
neg
sbb
outs
outs
je
jl
add
mov
xor
mov
adc
js
out
xchg
inc
arpl
mov
in
lock
bound
xchg
je
xchg
and
dec
cmp
shr
and
dec
(bad)
das
loop
in
sub
aaa
adc
mov
xchg
inc
push
retf
dec
add
rol
imul
dec
movs
lea
lock
ins
mov
jns
mov
dec
cmp
rcl
and
scas
nop
pushf
push
xchg
add
sub
nop
js
lods
aam
xor
sub
xchg
int3
shl
jp
push
and
xchg
push
adc
fist
mov
inc
fs
pop
(bad)
xchg
pop
pop
dec
scas
push
and
adc
add
retf
inc
imul
outs
hlt
sub
and
cmp
inc
in
dec
pop
les
ins
sub
push
mov
sub
loopne
sub
add
cmps
sbb
pop
out
test
push
push
adc
loopne
fisub
pop
nop
aas
dec
mov
shl
and
mov
push
das
fild
xchg
out
adc
pop
add
pop
bound
aas
fsubr
inc
xchg
xchg
xchg
div
xor
data16
cmps
movs
fwait
inc
add
arpl
xor
mov
aas
fistp
(bad)
cmp
out
les
or
xor
adc
fadd
rol
push
dec
xchg
mov
pop
dec
xchg
sbb
jmp
add
add
ja
outs
lods
dec
leave
add
adc
adc
dec
push
imul
push
in
cdq
xchg
and
or
and
xor
inc
or
or
rcl
dec
call
inc
pop
(bad)
adc
mov
and
push
(bad)
js
enter
mov
push
leave
mov
leave
in
aas
dec
pop
and
popf
ins
loope
dec
test
dec
jecxz
(bad)
imul
push
inc
sbb
in
repnz
and
xchg
push
and
loope
mov
dec
mov
or
out
into
mov
and
pop
mov
ror
and
push
sub
data16
stos
aaa
cwde
movs
and
pop
inc
in
or
fist
mov
mov
jns
into
and
cmp
cmp
inc
xchg
adc
je
cld
push
dec
and
dec
scas
sbb
push
or
jnp
push
add
test
sub
pop
push
jmp
sub
data16
rcl
call
dec
xchg
(bad)
sbb
shl
pop
pop
nop
mov
js
mov
xchg
cmp
push
cmp
and
inc
(bad)
xor
stos
or
and
xchg
xchg
mov
sbb
data16
xchg
cmp
dec
mov
test
lods
xchg
aaa
cmp
push
xor
mov
call
call
fwait
stos
in
add
mov
push
pusha
sbb
std
jecxz
mov
pop
es
mov
cmp
sbb
sub
test
xchg
je
rcr
and
ret
pop
or
inc
and
mov
pushf
ins
aam
ss
cmps
loope
test
(bad)
jmp
sbb
outs
call
cmps
inc
and
sbb
in
and
icebp
les
les
clc
pushf
xor
adc
push
adc
inc
add
stos
jge
pushf
sti
sbb
add
xchg
xchg
pushf
in
popf
or
sub
cmp
inc
(bad)
xor
inc
icebp
repz
dec
outs
sbb
jmp
jg
add
cmp
arpl
push
neg
or
push
out
pop
lea
jp
add
ror
push
xor
or
xlat
leave
lea
mov
pop
sbb
ja
add
je
inc
adc
and
das
pop
adc
imul
add
shl
push
dec
add
imul
push
shr
sar
out
loopne
dec
cmp
push
ror
jb
or
push
clc
pop
pop
sbb
jb
lea
cmp
jbe
ret
pop
movs
aas
scas
fwait
mov
xchg
in
jle
out
mov
add
mov
xchg
inc
fidiv
add
add
mov
js
mov
inc
jbe
sub
mov
and
ret
add
ins
xor
mov
sbb
jmp
xor
(bad)
les
shl
call
add
int3
jne
movs
dec
mov
dec
lea
fmul
mov
or
rol
test
pop
sbb
mov
pop
nop
lea
sbb
rol
retf
(bad)
push
add
mov
mov
cmp
mov
push
push
fst
mov
hlt
aam
popa
xor
arpl
and
cld
fdivr
push
in
jb
mov
rol
push
mov
push
shl
jmp
push
lds
push
dec
addr16
dec
push
ret
xor
xchg
adc
adc
dec
mov
movs
in
dec
or
dec
sbb
cmp
jmp
pop
pop
nop
inc
mov
or
dec
mov
call
dec
ins
mov
push
ins
or
(bad)
adc
adc
inc
sub
rcl
sub
ror
or
mov
pop
mov
ret
shl
aam
mov
jmp
mov
add
or
inc
ins
sbb
pop
inc
mov
outs
ins
popa
xchg
icebp
pop
and
data16
adc
leave
add
mov
in
mov
das
add
daa
sub
bound
ins
in
jge
xchg
movs
dec
jo
pop
in
call
pop
rcr
in
push
push
test
aad
pop
push
pop
add
inc
add
in
(bad)
cdq
nop
js
(bad)
xor
adc
push
ins
mov
ins
add
and
jns
out
pop
push
mov
xchg
std
fldenv
sbb
push
fisubr
cmp
sub
xchg
hlt
sub
cmp
cwde
jne
or
lods
dec
sub
movs
mov
in
fist
or
xchg
jne
sar
dec
in
pop
gs
mov
ja
mov
shl
outs
xchg
dec
add
and
xlat
mov
js
xor
in
inc
movs
adc
sbb
mov
add
in
mov
add
mov
push
add
ficomp
sbb
mov
inc
imul
ffree
add
jmp
jae
pop
adc
add
and
push
adc
sbb
jae
mov
xchg
cwde
aaa
add
mov
jmp
rol
pop
mov
and
sbb
aam
mov
mov
ja
adc
dec
sbb
aaa
mov
push
push
pop
out
push
xchg
push
add
pop
inc
mov
adc
rcr
in
add
call
aad
or
(bad)
jge
outs
pop
cmp
outs
mov
pop
xor
and
aad
cmp
and
cmps
(bad)
fild
push
nop
pop
cmp
and
call
xchg
nop
mov
xadd
jns
jb
movs
adc
mov
pop
in
push
jb
rol
xor
inc
push
cmps
enter
and
inc
add
mov
xor
test
mov
in
inc
push
push
pop
inc
(bad)
push
rcl
lar
stos
pop
pop
mov
or
cmps
xchg
jno
cmps
xchg
mov
invd
jmp
push
ins
outs
or
dec
push
push
dec
dec
dec
push
xchg
dec
enter
mov
or
mov
sbb
nop
daa
add
push
(bad)
jg
push
inc
inc
dec
inc
inc
inc
push
mov
fld
mov
inc
mov
push
scas
adc
inc
sub
inc
jg
jns
test
cmps
push
arpl
(bad)
push
xchg
lock
daa
pop
scas
jge
cmp
jl
jae
pushf
add
xchg
dec
pushf
pushf
mov
sbb
ret
cmc
jg
or
push
xor
mov
inc
xor
dec
imul
test
das
add
adc
leave
mov
and
das
cmp
xchg
xchg
popa
ja
test
pop
leave
cwde
scas
add
dec
mov
mov
retf
dec
dec
dec
call
push
jl
hlt
test
shl
adc
mov
add
mov
push
and
fnstsw
dec
(bad)
adc
sub
mov
shl
and
sbb
jg
not
adc
mov
mov
inc
inc
inc
jecxz
pop
add
add
push
add
aas
cmp
loopne
or
mov
cwde
dec
push
jns
daa
jo
or
in
shl
cmp
jo
lea
ret
cmps
in
pop
sub
mov
inc
enter
xor
and
je
add
jo
sub
push
inc
lods
es
or
xor
(bad)
pop
hlt
and
push
push
out
adc
add
adc
dec
jae
add
mov
repz
clc
loop
dec
push
and
pop
loop
shl
sbb
rol
cmovl
and
lds
cmp
pop
xor
and
jg
adc
pop
dec
lods
mov
or
push
leave
rep
pop
or
cmp
lods
(bad)
mov
xor
dec
cli
popa
add
inc
pop
sbb
loope
or
sbb
pop
mov
test
fisttp
in
in
sbb
push
sbb
add
adc
out
das
add
and
popf
scas
pop
sbb
lods
or
mov
addr16
push
call
pushf
lods
xchg
je
mov
adc
shr
icebp
cmp
add
push
add
pop
mov
gs
mul
inc
add
(bad)
enter
add
ja
arpl
inc
comiss
dec
add
add
out
push
lock
dec
mov
icebp
nop
test
popf
fcomp
cmp
out
fisubr
xor
jmp
hlt
out
pop
xor
call
das
out
jp
imul
out
adc
mov
push
(bad)
pop
add
retf
xchg
jle
add
inc
dec
out
pop
cs
xor
pop
add
adc
int3
sbb
std
adc
fwait
pusha
mov
retf
mov
xchg
xor
repz
lahf
push
and
pop
outs
test
fs
test
add
push
fs
idiv
and
xor
jne
repnz
aaa
enter
repz
in
sub
sti
push
hlt
add
dec
mov
sbb
push
mov
mov
inc
pop
scas
je
inc
out
mov
inc
rol
mov
push
sbb
sub
jb
and
dec
sahf
in
lahf
in
or
xor
(bad)
call
and
aam
pop
or
cmc
pop
ins
pop
or
mov
cmc
add
call
imul
sub
test
sbb
dec
mul
ins
mov
add
cld
dec
lods
sub
stos
jnp
and
ins
push
idiv
repz
mov
xor
mov
or
loopne
push
or
mov
xor
ror
add
clc
test
mov
xchg
dec
lea
adc
nop
outs
mov
add
add
dec
js
xor
xrelease
call
jg
xchg
push
lock
pop
push
or
pop
cs
enter
push
add
inc
xchg
or
add
mov
xchg
loopne
daa
lea
int3
inc
and
rol
shr
mov
clc
aam
cmc
push
loope
jge
ja
fadd
jmp
jl
ror
fist
mov
js
mov
icebp
push
mov
add
(bad)
leave
out
in
or
js
cmp
stos
shl
daa
shl
aam
ret
js
dec
mov
in
lock
shl
mov
jmp
xor
inc
jg
cmps
pop
mov
mov
or
nop
inc
push
test
scas
adc
cmp
dec
shl
inc
add
push
sub
sub
repnz
push
fadd
mov
fsubr
mov
lock
int3
aam
adc
jo
xor
ja
pop
sbb
imul
ds
xchg
bound
mov
sub
add
ficomp
pop
mov
imul
(bad)
jb
cmp
ja
xor
sbb
(bad)
adc
sbb
call
jne
xor
jb
mov
xor
push
pop
and
and
sub
xor
sbb
jg
(bad)
add
inc
fimul
add
add
pop
lods
xchg
in
xchg
stos
leave
(bad)
jmp
ret
add
mov
sub
sbb
lods
mov
jl
in
mov
mov
xchg
mov
nop
adc
and
loop
aas
clc
add
arpl
or
test
inc
ins
outs
pop
adc
mov
les
lea
or
fcmovnb
mov
push
push
push
inc
jne
fs
in
push
in
or
sub
sub
cmp
inc
daa
mov
fld
inc
popa
ins
push
adc
in
jle
and
imul
lds
cmps
or
mov
xchg
and
xchg
dec
add
cmp
jne
aad
adc
out
adc
sbb
inc
dec
rcr
retf
in
add
ins
imul
pop
retf
mov
rol
imul
inc
(bad)
and
mov
sti
add
pop
nop
add
pop
jg
push
addr16
and
fmul
cmp
retf
mov
push
add
or
mov
jo
add
sti
repnz
mov
nop
jl
adc
and
add
cmp
mov
adc
add
add
add
ss
push
pop
adc
and
adc
retf
test
sti
add
push
mov
je
push
jne
ror
fcomp
fidivr
push
add
add
outs
sub
inc
fs
pop
lock
cmp
sub
adc
mov
dec
rol
add
adc
jbe
ds
adc
fisttp
mov
mov
push
push
mov
or
inc
cld
fadd
and
cmp
mov
pop
push
mov
daa
or
mov
imul
mov
jb
add
inc
xchg
add
add
dec
sbb
retf
cmps
xor
push
dec
push
int3
clc
in
add
imul
adc
inc
and
or
or
inc
pop
xor
fadd
enter
into
inc
aam
enter
push
xor
repz
scas
out
clc
mov
push
nop
mov
inc
popa
xor
and
sbb
mov
mov
dec
mov
mov
push
test
add
inc
or
leave
inc
cmp
jmp
nop
pop
push
mov
mov
unpckhps
sub
pop
xor
sub
mov
mov
pop
xor
and
cmp
push
add
push
in
inc
into
adc
pusha
mov
push
pop
sub
jns
pushf
or
mov
hlt
xchg
lods
mov
dec
in
inc
in
outs
lds
mov
jg
jbe
inc
push
push
cmp
pop
sub
sbb
push
movq
stc
cmp
lea
add
movs
in
pop
or
inc
push
dec
repz
ret
loopne
in
pop
fsub
xchg
or
inc
sar
add
xchg
dec
outs
(bad)
cmp
xor
cmp
push
push
loope
xchg
in
xlat
cmp
subps
outs
push
xor
sub
or
inc
pop
pop
and
xchg
dec
lea
pop
and
int
fwait
and
or
pusha
pusha
push
mov
and
sub
js
or
iret
ins
test
push
inc
add
pop
dec
repz
push
adc
sub
je
pop
(bad)
cmp
out
pop
js
or
in
xor
and
pop
adc
out
fild
div
xor
shr
in
pop
or
pop
pop
sub
add
lock
pop
test
dec
sub
push
pop
sub
mov
lahf
adc
push
add
and
leave
adc
add
pop
push
mov
out
xchg
movs
mov
retf
in
shl
or
paddsw
out
or
arpl
mov
sbb
sahf
dec
loop
jo
popf
addr16
mov
fimul
mov
sbb
dec
test
or
out
or
lock
adc
retf
or
sbb
or
dec
or
dec
fwait
jmp
pusha
dec
fcom
adc
inc
addps
push
or
test
inc
call
cmp
pusha
pop
add
mulps
aaa
fisubr
dec
push
xchg
adc
cmps
push
dec
int
lock
ins
movs
pop
mov
(bad)
repnz
test
sub
add
fcom
or
xor
bound
imul
loopne
jmp
dec
mov
cmp
arpl
pop
arpl
add
or
xchg
add
inc
pusha
lods
pop
cdq
xchg
enter
mov
int
faddp
or
outs
and
xchg
mov
ret
jmp
add
das
mov
add
and
add
add
sbb
xor
inc
test
pop
dec
mov
test
daa
movs
and
and
add
xchg
int3
movs
mov
inc
mov
repz
jmp
(bad)
ss
sub
sar
dec
std
mov
sbb
sbb
add
mov
inc
or
add
dec
ret
and
(bad)
or
test
mov
jno
hlt
dec
inc
xor
scas
inc
lods
mov
add
inc
jg
push
sub
adc
add
call
inc
jmp
cs
cmp
sub
jne
inc
mov
mov
das
push
xchg
popaw
cmp
inc
or
enter
add
add
or
inc
push
ret
push
jecxz
mov
dec
gs
jg
test
pop
mov
or
xor
dec
cmps
inc
jno
pushf
pop
(bad)
out
test
mov
call
push
ins
inc
push
xor
imul
or
loopne
inc
xor
ret
jnp
sti
mov
xor
aam
dec
push
jmp
jns
pop
mov
inc
add
retf
retf
in
push
adc
and
push
xor
repnz
push
xor
or
mov
repz
test
mov
add
and
nop
js
xor
or
mov
lods
aam
sbb
sub
fldenv
fldenv
jg
daa
sbb
mov
inc
mov
xchg
inc
dec
cmp
dec
xchg
mov
ret
jecxz
mov
sbb
mov
jns
add
inc
xchg
inc
mov
inc
mov
xor
mov
push
jbe
xchg
pop
pushf
xchg
lods
arpl
xor
dec
or
sbb
sbb
xor
and
adc
test
je
add
inc
lds
push
jmp
test
dec
sbb
adc
or
retf
sub
mov
mov
pop
rcr
js
clc
xchg
push
cmp
and
hlt
push
sub
adc
add
sbb
inc
rcl
inc
push
or
and
fwait
dec
push
sbb
xchg
xor
jmp
adc
dec
xor
push
es
xor
dec
in
jmp
pop
or
sub
ins
jno
xchg
or
jb
pop
mov
dec
sbb
add
sub
outs
sar
mov
cli
pop
cmp
je
mov
inc
mov
sub
call
add
mov
sub
cdq
push
cmp
cmp
(bad)
jno
(bad)
inc
push
pop
pop
sar
or
and
sub
mov
(bad)
cmp
pop
mov
pushf
add
inc
or
sbb
ins
cmp
cs
mov
mov
add
mov
sbb
sub
div
les
add
or
jmp
adc
popa
repnz
pushf
add
adc
pop
and
push
mov
jne
dec
mov
call
sub
icebp
sahf
mov
push
dec
adc
dec
push
or
sbb
retf
rol
dec
pushf
inc
(bad)
mov
push
jb
inc
daa
xor
or
cmp
push
imul
out
sbb
and
push
xchg
xor
cmp
xor
or
dec
pop
xchg
ret
dec
sub
mov
adc
ret
and
adc
or
lahf
sbb
cmp
jae
imul
bound
rol
pop
inc
les
sbb
xchg
push
pop
push
xchg
fcom
sar
nop
shr
(bad)
add
add
inc
or
ror
adc
loope
dec
add
arpl
mov
add
imul
mov
ret
lock
cmc
stos
(bad)
fwait
cmp
test
imul
pusha
cmc
add
mov
popf
pop
mov
fstp
les
loop
fld
mov
and
pushf
pop
stos
lock
and
add
push
inc
push
pop
or
gs
or
sub
test
movs
pop
dec
mov
push
cwde
add
jns
inc
mov
pop
push
adc
es
fisttp
and
test
sub
pop
aaa
mov
lea
inc
pop
cmps
shr
sbb
ja
sbb
jae
push
pop
enter
or
or
add
xchg
aam
xor
xchg
mov
add
aas
cwde
les
stos
add
and
xor
mov
mov
inc
add
adc
push
sub
movs
jp
add
or
adc
mov
push
adc
push
out
iret
call
or
dec
dec
xlat
xchg
or
les
mov
scas
xlat
clc
and
push
gs
sub
adc
sbb
ins
and
inc
adc
mov
mov
push
dec
or
nop
push
add
sub
xor
xchg
xchg
(bad)
call
adc
inc
dec
lods
test
out
add
js
ret
(bad)
shl
mov
loope
push
aas
sub
movs
inc
sub
xor
pop
outs
es
cmp
adc
sbb
popa
dec
pusha
and
sbb
cmp
lds
adc
inc
test
lods
je
adc
mov
lahf
in
cwde
or
xchg
lock
mov
je
inc
out
pop
jmp
int
push
lea
adc
and
jb
idiv
push
push
je
jecxz
nop
aas
mov
or
add
rol
test
addr16
shl
push
push
inc
ins
sbb
bound
retf
sub
shl
shl
popf
dec
ror
test
push
mov
test
inc
in
pop
adc
adc
in
(bad)
(bad)
nop
inc
les
push
push
mov
sub
or
not
rol
push
pop
mov
xlat
clc
xchg
dec
lds
ret
pusha
popf
lods
jmp
jb
aad
hlt
push
dec
xchg
xchg
hlt
jno
sub
out
jmp
movs
(bad)
div
sbb
retf
push
add
ret
outs
pusha
ins
or
dec
addr16
leave
imul
adc
xor
nop
fcom
sbb
mov
aad
xor
mov
adc
jecxz
test
lahf
sbb
addr16
add
repz
jne
mov
sar
ret
psubusw
and
xchg
push
cmps
(bad)
inc
inc
and
sbb
jg
add
unpckhps
outs
pop
inc
loope
dec
leave
mov
pop
add
add
push
cmp
fst
cmp
jbe
clc
inc
adc
enter
mov
dec
and
enter
pop
sub
push
ret
xor
or
enter
and
movs
jno
and
inc
mov
sbb
dec
fst
lds
sub
pop
push
cmp
fisttp
cli
dec
inc
add
inc
sub
in
mov
aaa
(bad)
and
je
mov
or
lods
ret
ins
mov
sbb
mov
mov
pop
jno
outs
sbb
and
sbb
jmp
fsub
mov
mov
cmp
mov
and
dec
sub
loopne
push
xchg
ret
or
sbb
or
ret
inc
push
cmps
push
push
gs
xor
fsubr
xor
xor
or
data16
push
sub
sub
push
adc
and
retf
push
sahf
push
es
and
push
cmps
add
adc
mov
sbb
cmp
movs
mov
push
and
cmovb
sbb
nop
dec
inc
or
push
push
test
test
or
mov
pop
cmp
pusha
rcr
pop
mov
pusha
mov
sub
cdq
jle
mov
xor
and
cmp
xchg
stc
sbb
(bad)
into
stc
mov
cs
add
outs
adc
test
cmp
and
test
pop
add
or
sub
xor
(bad)
into
inc
dec
or
(bad)
ins
push
test
fadd
push
push
or
mov
add
cdq
or
add
rcl
lahf
ins
sbb
push
shl
mov
jo
dec
pop
in
loop
inc
push
int
pop
mov
sbb
push
movs
or
xor
add
xchg
dec
lods
lods
pushf
enter
ja
fild
xchg
dec
ins
and
jbe
ss
ficomp
retf
jg
(bad)
push
enter
add
push
fisttp
shl
lahf
or
es
stos
cmps
das
adc
sub
push
push
push
loope
sbb
add
sub
jns
mov
imul
sbb
js
jns
sbb
or
push
xchg
(bad)
push
sub
shl
cmp
punpckhbw
dec
inc
sub
js
xor
pop
dec
scas
or
sub
call
rol
mov
push
pop
(bad)
int
xor
push
ss
xor
jle
mov
mov
or
or
push
sbb
js
pop
int
xchg
ret
sbb
call
and
xchg
add
loope
mov
nop
jnp
test
mov
adc
push
out
xor
or
loope
cli
in
xchg
mov
shr
push
lds
ltr
scas
jb
add
mov
nop
add
(bad)
idiv
xor
ins
mov
aas
push
add
mov
adc
ins
xor
je
cmp
add
loope
pop
or
pusha
inc
mov
or
jbe
mov
js
inc
aad
ficom
mov
out
adc
mov
fnstsw
stc
sbb
inc
pop
adc
xchg
or
fs
loopne
les
and
enter
loop
loop
sbb
xchg
aas
fisubr
pusha
cmp
jle
jge
and
add
adc
fs
cmp
call
loopne
fisttp
ins
and
jne
lahf
out
inc
jecxz
mov
and
push
call
and
in
jl
js
mov
and
mov
int3
dec
push
xlat
add
fimul
add
(bad)
inc
fstp
or
aas
inc
jb
rcl
push
in
xor
or
aaa
(bad)
pop
(bad)
fistp
daa
imul
jmp
xor
pop
in
ror
cmp
dec
dec
ror
sbb
jno
pop
push
in
jg
sub
cdq
jl
push
sbb
lods
mov
imul
inc
pop
enter
cwde
push
and
dec
mov
and
repnz
movs
mov
xlat
movs
stos
mov
lds
sbb
adc
leave
enter
in
dec
outs
addr16
sbb
add
or
ss
mov
mov
das
mov
mov
bound
sub
or
pushf
shl
in
mov
mwaitx
adc
cmp
ja
int3
loope
mov
in
add
lods
nop
mov
push
cwde
lods
mov
dec
dec
adc
addr16
enter
inc
xlat
dec
pop
enter
mov
ret
mov
mov
sbb
es
pushf
neg
mov
and
adc
add
mov
sahf
(bad)
adc
lea
cmps
xor
and
lods
mov
cmp
mov
ror
xchg
xchg
lods
jl
fidivr
sahf
xor
iret
sbb
push
mov
jo
inc
xlat
mov
pop
mov
cmp
sub
or
dec
push
pop
popa
sbb
push
inc
xchg
nop
ins
mov
sbb
loop
into
inc
xchg
xchg
sub
xchg
jp
add
sbb
mov
sbb
out
fwait
jo
ja
push
push
cmp
rcr
dec
ret
push
pop
test
sbb
mov
and
bound
jecxz
movs
cmp
inc
out
mov
call
popf
dec
or
mov
inc
dec
dec
call
std
arpl
add
ja
das
sahf
nop
nop
pop
mov
xchg
lods
mov
xchg
or
add
xor
push
push
push
js
jmp
jne
pop
and
mov
inc
push
push
scas
xor
imul
stc
inc
xor
and
mov
retf
xor
fadd
cmps
rol
popa
sub
call
adc
out
int
ret
(bad)
jnp
inc
mov
loope
push
add
mov
mov
mov
dec
inc
xchg
sbb
push
or
mov
cmp
inc
imul
cwde
retf
sbb
mov
cmp
movs
fnsave
push
(bad)
add
pop
scas
dec
jb
mov
jmp
pusha
jge
mov
mov
or
mov
das
(bad)
bound
jmp
test
cmp
test
push
jo
xchg
sub
nop
inc
cs
push
stos
jmp
sub
inc
mov
xor
push
fcomp
mov
stc
das
ins
sbb
mov
imul
pop
inc
es
call
test
cli
je
xchg
ss
xor
inc
xchg
gs
pop
pop
add
xor
mov
pop
add
sub
inc
ins
out
inc
xchg
arpl
ins
push
repnz
xchg
arpl
fs
jb
aas
retf
jnp
sbb
sub
adc
sub
sub
enter
xchg
stos
nop
cmps
jp
aaa
lea
sub
inc
xchg
sahf
xchg
jecxz
ror
dec
repnz
xchg
jmp
jne
xchg
cmps
or
push
mov
mov
cmp
(bad)
adc
or
sub
and
add
push
dec
push
jecxz
icebp
(bad)
cmp
dec
mov
outs
inc
cli
movs
cmp
ret
push
xchg
inc
pusha
ds
cmp
inc
add
inc
push
leave
enter
lea
cmp
dec
push
sbb
es
pop
mov
pop
ret
pop
mov
jmp
add
xor
dec
adc
out
mov
inc
(bad)
cmp
push
mov
push
js
jl
cdq
fcomp
imul
xchg
inc
mov
or
xchg
mov
pop
sbb
aas
nop
adc
push
xchg
sub
iret
inc
cmps
and
aaa
add
fsub
repz
lods
push
add
xor
mov
xchg
inc
mov
movs
mov
out
and
push
jmp
in
sbb
adc
imul
dec
xor
mov
or
jae
cwde
pushf
sbb
cld
call
and
and
cmp
push
jb
push
aas
add
int
and
or
pop
xor
push
pop
push
nop
fld
and
icebp
cmp
ret
cmp
push
push
dec
sbb
or
sbb
adc
mul
add
inc
mov
repz
or
je
js
das
pusha
das
mov
xor
dec
movs
cmp
inc
xchg
mov
inc
or
jo
add
pop
jne
sub
popa
cli
cs
pop
xchg
in
popa
and
push
mov
inc
xor
xor
fs
mov
and
xchg
or
outs
dec
xor
xor
test
jns
adc
sbb
(bad)
das
call
movs
add
inc
je
rcr
inc
dec
loopne
or
or
xchg
mov
jbe
cmp
jl
cmps
and
or
pop
cwde
ret
ror
sti
ss
pop
xor
aam
or
jl
inc
loop
mov
sub
xor
adc
push
and
push
adc
lods
add
mov
mov
cli
add
and
inc
xor
jnp
shr
push
or
sahf
cmp
jp
pop
add
and
mov
rol
adc
sub
cmp
outs
mov
xchg
pop
add
push
jnp
repnz
mov
ret
xchg
fist
inc
add
sub
jb
mov
add
ret
lock
push
mov
sbb
pusha
aam
add
or
(bad)
sub
aas
jl
sbb
cmp
lods
stos
push
clc
movs
sub
lea
mov
test
cmp
inc
adc
cmc
xor
mov
inc
sbb
jae
retf
add
retf
xchg
jecxz
add
mov
adc
mov
scas
sub
cmps
aaa
xor
xchg
pop
mov
inc
mov
retf
add
in
xchg
adc
sbb
push
mov
in
dec
jb
add
push
sbb
mov
inc
in
and
mov
ror
sub
int3
push
or
mov
sbb
clc
jg
mov
ss
jbe
or
cmc
lods
in
inc
psubb
sbb
js
jl
aam
or
(bad)
pop
dec
and
inc
inc
push
and
push
push
cmp
das
xchg
jo
xchg
aaa
adc
pop
mov
add
fld
sti
xchg
mov
add
xchg
sti
js
mov
ss
or
shl
jae
inc
add
jns
jl
add
xchg
fs
ret
or
ins
sub
fdivr
and
mov
sbb
cld
lods
xchg
push
cld
mov
das
in
mov
in
xor
test
sub
ds
es
add
ins
sub
in
hlt
clc
test
push
push
hlt
test
push
enter
pusha
xchg
adc
hlt
loope
xchg
and
mov
in
sbb
out
mov
lock
ror
ins
add
mov
neg
pop
xchg
pop
xor
clc
xchg
xchg
mov
icebp
fwait
jmp
nop
pop
and
je
ins
or
and
rol
imul
mov
and
(bad)
fiadd
xchg
xor
cmp
or
add
cdq
ftst
in
add
or
and
jns
xchg
loopne
cld
inc
inc
dec
xchg
adc
daa
push
test
jns
cli
add
mov
jne
sub
adc
test
adc
aad
sub
sub
aas
dec
jmp
push
mov
jne
mov
jmp
inc
je
popf
jge
push
or
test
enter
and
ins
or
iret
fdivrp
scas
or
push
(bad)
dec
dec
push
push
cmp
pop
xor
loopne
adc
aas
lea
dec
sbb
enter
popf
cld
jmp
bound
call
std
lock
pop
or
daa
shl
rcl
cmp
std
mov
aas
pop
add
mov
inc
pop
into
ror
sub
clc
das
xor
xor
and
gs
loope
outs
jo
cdq
jno
add
loop
outs
inc
or
fadd
test
sub
xlat
sub
jb
std
in
rol
nop
add
cmp
out
popa
or
sbb
inc
mov
loope
dec
or
dec
adc
dec
adc
xchg
out
aad
aas
(bad)
sbb
cmp
or
jl
mov
imul
xor
sbb
pushf
hlt
stos
add
sbb
adc
sub
shl
adc
mov
test
leave
ret
mov
push
push
pop
ds
push
xchg
xor
pop
or
add
(bad)
ror
or
add
call
xchg
mov
push
jmp
add
sbb
pop
pushf
pop
pop
call
push
sbb
sub
xlat
mov
nop
mov
in
add
mov
push
inc
push
ins
mov
jp
push
dec
sbb
div
push
jae
xchg
push
adc
mov
jbe
(bad)
add
inc
aad
add
or
sub
adc
and
push
jae
push
sub
dec
push
mov
movs
cmp
rol
mov
pop
push
std
push
nop
rcl
push
pop
sub
add
sbb
out
aam
adc
jo
xchg
push
and
or
mov
lock
add
add
data16
push
into
ret
jo
(bad)
xlat
mov
add
es
lahf
imul
push
(bad)
jmp
jl
inc
sbb
inc
jne
test
pop
xor
(bad)
adc
or
(bad)
pop
dec
dec
or
push
cmp
push
pop
sbb
cmp
or
push
(bad)
add
shl
ins
outs
imul
dec
pop
or
xchg
cmp
ror
add
cmp
xchg
lods
and
mov
hlt
test
sub
pop
pop
ficomp
dec
inc
jmp
inc
push
push
add
rol
and
and
dec
push
rcl
sub
push
pop
stos
movs
mov
cld
mov
cmps
fnsave
mov
xor
xchg
or
push
sbb
dec
cmp
or
xor
mov
mov
imul
test
inc
loop
add
jecxz
bound
or
and
mov
add
pop
adc
pushf
fst
sub
es
test
and
or
sti
or
rol
inc
and
mov
jb
aam
pusha
mov
push
rol
inc
mov
and
ror
imul
outs
adc
add
leave
mov
int
dec
sbb
inc
mov
push
outs
jg
mov
(bad)
cli
sbb
add
pop
lods
push
jno
int
or
aam
pop
les
repnz
sbb
sbb
and
mov
mov
jg
mov
std
aam
mov
retf
scas
and
cld
test
push
mov
js
popa
xor
push
scas
adc
or
cmp
jns
dec
jno
addr16
cld
xchg
test
mov
mov
add
repnz
sub
pop
or
adc
sahf
sub
hlt
aas
xor
xor
imul
fstp
pop
popa
inc
mov
iret
push
sub
mov
ins
xor
fst
cmp
fs
dec
mov
mov
or
add
mov
add
pusha
xor
or
inc
adc
or
jl
add
mov
cmp
loop
jne
push
fcmovne
ins
retf
(bad)
push
mov
sbb
mov
repnz
retf
adc
mov
jnp
clc
mov
push
jecxz
ins
push
sbb
add
add
sahf
and
xor
call
push
dec
jae
jmp
mov
shl
jmp
pop
xchg
leave
push
scas
adc
adc
add
xchg
mov
add
adc
inc
and
inc
call
rcl
(bad)
idiv
and
(bad)
rcl
ror
mov
test
aad
mov
call
sbb
loopne
sbb
jnp
push
adc
jne
add
pop
(bad)
cmp
and
lea
arpl
arpl
jo
push
add
test
fisubr
add
fs
cmp
pop
clc
or
and
add
cmp
outs
leave
sbb
clc
cmp
mov
loop
xor
fisubr
lea
cmp
shl
lds
mov
push
jne
adc
idiv
xlat
popa
pop
into
(bad)
cmps
mov
mov
clc
add
or
jg
mov
mov
mov
(bad)
mov
test
inc
mov
mov
xor
out
pop
(bad)
out
mov
or
es
(bad)
mov
(bad)
and
add
je
shr
add
call
inc
ror
and
movs
pusha
mov
dec
int3
sbb
test
rcr
xor
or
sub
pusha
inc
gs
sbb
out
(bad)
aas
in
into
repz
not
sar
loopne
dec
sbb
or
data16
xor
int3
xor
imul
dec
mov
add
pop
add
sbb
ret
xchg
cmp
lds
xor
lock
stos
ss
mov
inc
lock
xchg
ss
iret
mov
sub
ret
and
adc
pushf
jg
lea
repz
push
sub
cli
xchg
popa
push
mov
xchg
mov
mov
jbe
adc
xchg
pop
mov
cmp
out
jne
mov
(bad)
jmp
mov
add
fisttp
sbb
imul
mov
pop
adc
inc
daa
xor
pushf
cmp
sbb
push
mov
popa
imul
sub
adc
enter
pop
push
aam
daa
inc
xor
scas
xchg
and
jo
xor
and
cli
dec
inc
in
fs
fimul
aam
inc
xchg
gs
fcomp
out
add
mov
xchg
sbb
imul
add
cdq
add
test
and
inc
cmp
into
shr
and
ror
dec
and
sub
mov
repz
pop
mov
cmp
dec
pusha
adc
frstor
loope
or
nop
inc
mov
inc
xor
inc
and
sub
daa
xor
add
daa
call
dec
adc
nop
adc
or
ret
cmp
out
push
sub
lods
cmps
aas
or
xchg
or
mov
and
push
mov
aas
test
or
add
dec
ss
shl
and
inc
imul
rcl
ficom
stos
(bad)
idiv
jae
ret
aam
daa
or
add
fdiv
dec
or
xchg
out
mov
or
xchg
pop
aad
or
icebp
fidivr
xor
test
repz
mov
mov
pop
pop
cmc
lods
arpl
sbb
push
test
adc
lock
fs
inc
loopne
ins
jbe
comiss
add
xor
jmp
pop
in
jle
popa
mov
pop
cmp
pop
loopne
loope
enter
je
xor
sbb
adc
add
xor
fsub
jle
adc
add
fist
add
xlat
out
sub
push
lea
add
movs
xor
mov
add
out
jg
cmp
inc
dec
jecxz
stos
jae
push
pusha
call
dec
outs
dec
test
dec
stc
mov
push
cmp
xchg
inc
sahf
adc
pop
aad
inc
lahf
mov
lock
fnstcw
std
xchg
pop
jge
or
pusha
push
push
and
in
and
aam
adc
int3
mov
sbb
sbb
push
enter
dec
or
adc
and
mov
add
loopne
or
add
add
inc
call
and
adc
aas
push
xchg
jg
sub
inc
and
sbb
and
out
xor
adc
adc
xor
xor
retf
xchg
stos
adc
inc
ins
daa
lea
arpl
jg
cmp
adc
mov
int
ret
add
add
inc
xchg
push
fdiv
fistp
arpl
dec
cmp
adc
test
mov
ficom
add
push
add
inc
and
and
pop
dec
and
fadd
or
adc
sbb
pop
add
push
inc
adc
imul
adc
fiadd
clc
in
add
mov
cdq
ret
push
pop
cmp
(bad)
ret
and
lods
shl
int
push
sub
sub
in
inc
test
push
inc
pop
add
xchg
lods
in
enter
mov
add
addr16
xlat
retf
cmp
inc
pop
cld
jge
lea
mov
loope
adc
lea
fsub
add
sub
xor
sub
mov
movs
popa
jl
sub
and
add
retf
cmp
lods
pop
mov
test
add
add
test
or
push
jae
jmp
inc
jg
push
sti
in
add
jl
mov
xchg
add
and
add
xchg
add
sub
mov
push
lea
jo
in
test
xchg
test
inc
add
(bad)
loopne
popa
adc
and
out
mov
push
xor
sbb
push
add
clc
hlt
sbb
lds
inc
jae
or
add
or
xchg
sub
fst
inc
nop
add
pop
pop
add
sahf
fimul
sub
push
add
fcom
test
and
repz
pop
sahf
add
int3
and
xor
fadd
or
mov
adc
bound
xor
call
add
or
inc
mov
pop
loope
mov
add
rol
test
or
fsubr
xchg
int3
jecxz
cmp
xor
mov
mov
sbb
fild
enter
test
and
mov
and
retf
mov
sbb
jb
jmp
or
and
jo
test
xchg
jne
out
fcomp
nop
jecxz
mov
sbb
sub
sbb
popf
dec
xchg
sar
enter
fisttp
adc
mov
fwait
mov
add
test
or
or
cmp
adc
jo
jmp
mov
pop
lods
xor
and
dec
aas
adc
call
jae
std
jo
mov
mov
push
sbb
xchg
and
adc
and
mov
sbb
adc
add
scas
les
mov
push
push
ret
clc
imul
cwde
add
pop
cwde
adc
pop
mov
xlat
(bad)
jecxz
out
and
mov
call
(bad)
mov
sub
add
dec
and
cmp
inc
mov
dec
mov
pop
jno
xor
lods
call
cwde
fldenv
jecxz
or
push
xchg
dec
and
jp
or
jge
xchg
and
jmp
mov
icebp
sub
ret
xor
and
push
repnz
aam
push
repnz
adc
outs
fs
jno
inc
sbb
mov
sub
sbb
inc
sub
(bad)
cwde
mov
into
aad
les
cmp
dec
leave
xchg
adc
repz
push
jne
addr16
push
daa
sahf
test
and
and
mov
pop
cwde
cwde
pushf
movs
xchg
jbe
adc
aad
xchg
sbb
xor
xchg
xchg
mov
mov
sbb
add
mov
out
pusha
inc
fild
sti
cmps
dec
add
xor
popa
cmp
push
inc
sbb
jecxz
adc
and
push
jb
and
jmp
cld
bnd
xlat
sbb
mov
leave
dec
sbb
xor
fidiv
sbb
into
jmp
jp
add
jns
cmp
mov
sub
mov
loopne
add
loopne
push
inc
pop
add
fs
scas
das
add
retf
mov
add
bound
fadd
cmps
and
or
call
rcl
fiadd
(bad)
mov
sub
mov
add
sbb
loope
dec
push
lds
and
or
fild
scas
pop
cmps
pop
jg
adc
nop
jbe
and
adc
je
dec
cmps
push
out
sbb
push
in
outs
mov
js
cmc
call
fld
daa
test
add
and
mov
adc
or
enter
cmovg
cmp
push
in
lea
dec
xor
or
push
or
or
fs
inc
or
or
in
sbb
rcr
in
push
out
or
aam
or
neg
rcl
pushf
and
jmp
push
and
jle
retf
rol
in
sub
or
ret
psadbw
inc
mov
fnsave
bound
cdq
fisub
mov
out
push
mov
pop
mov
xor
cld
or
cmp
xor
cmp
cmp
dec
es
push
ror
aam
out
stos
call
jg
mul
jne
(bad)
ror
sub
push
out
sbb
cdq
sub
jns
aad
ja
cwde
ja
add
add
lock
xor
aam
arpl
hlt
jecxz
jno
movs
inc
cld
pop
mov
call
shl
push
lea
inc
pop
add
out
jb
add
mov
mov
aaa
xor
add
and
unpcklps
cs
mov
fst
cmp
dec
or
jg
fmul
adc
lock
in
jo
jmp
push
ja
mov
lea
cmp
aaa
mov
push
fidivr
cs
loope
and
jg
clc
sub
leave
pop
sahf
mov
das
in
in
sub
fadd
mov
add
dec
or
mov
adc
(bad)
sub
adc
mov
mov
jbe
imul
sbb
and
ds
scas
inc
adc
sub
sbb
test
and
add
nop
push
xchg
pop
movs
push
fiadd
add
xchg
div
out
inc
mov
ss
mov
sbb
or
cdq
mov
movs
mov
popa
pop
mov
nop
inc
push
sbb
enter
sbb
mov
mov
lods
test
fs
inc
movs
mov
push
cwde
xchg
nop
nop
inc
push
sbb
cmp
es
es
mov
inc
cmp
call
add
aam
pop
push
rcl
push
aaa
mov
push
dec
or
ins
dec
or
push
cmp
ja
nop
inc
push
movs
rol
fadd
daa
inc
and
daa
inc
fcom
inc
mov
push
sub
sub
or
clc
inc
adc
xchg
fwait
(bad)
imul
fadd
dec
or
enter
sbb
inc
bswap
mov
mov
jecxz
iret
or
jmp
or
mov
and
pusha
das
adc
adc
ins
loope
mov
add
test
fadd
mov
jno
scas
ret
aaa
rol
sahf
cmp
mov
(bad)
pop
xor
mov
sub
and
add
dec
imul
sub
push
dec
ret
xchg
dec
gs
and
mov
mov
or
push
jp
lock
add
or
mov
push
ret
xchg
cmc
out
inc
push
pop
shl
cli
ins
hlt
mov
push
pop
cmp
adc
jle
inc
loope
nop
test
rol
dec
jne
outs
or
movs
push
shr
ret
pop
int
jl
cmp
(bad)
adc
pop
inc
jae
jle
mov
pop
xor
dec
or
mov
and
ins
xor
and
(bad)
sub
jb
mov
sub
dec
std
cmp
daa
cs
call
imul
inc
dec
repz
in
fmul
jnp
mov
jo
xchg
jo
sbb
push
sub
push
adc
adc
inc
sub
pop
inc
sub
pop
push
cld
ret
test
adc
push
push
psubq
not
xchg
scas
es
mov
push
mov
xor
imul
outs
pop
sbb
cdq
push
loope
sub
dec
xchg
shl
sbb
(bad)
call
push
and
sub
test
push
mov
adc
in
or
pop
dec
xchg
jae
jnp
mov
daa
or
xchg
mov
cmp
mov
sub
cmc
xchg
aaa
sbb
dec
xor
add
bound
push
adc
jb
cmp
mov
jbe
daa
test
and
cdq
add
(bad)
shl
mov
fild
xchg
pop
jl
ins
aam
and
clc
push
adc
xchg
sub
pop
das
inc
push
sbb
(bad)
mov
jmp
or
mov
adc
les
pop
fdiv
pop
push
test
inc
aaa
hlt
pusha
dec
pop
adc
jg
inc
in
sub
ds
sub
in
mov
sub
scas
movs
fs
idiv
or
mov
pop
and
pop
xchg
push
ins
(bad)
adc
add
and
and
and
dec
sub
or
cmp
(bad)
ret
jbe
pop
push
and
and
xor
gs
bound
xor
pop
fdiv
test
int3
xchg
sub
(bad)
clc
or
(bad)
ins
xchg
or
call
add
pop
pop
push
mov
pop
mov
leave
push
push
fmul
(bad)
and
inc
sub
jle
loope
push
mov
nop
enter
adc
sbb
push
jl
adc
jmp
sub
xor
mov
inc
imul
nop
les
sub
adc
dec
pop
and
dec
add
mov
sbb
and
mov
pop
adc
push
loopne
mov
sub
add
sub
fnstenv
and
mov
mov
iret
sub
enter
cwde
and
mov
mov
nop
sub
fs
ins
dec
(bad)
adc
dec
jecxz
je
outs
mov
xor
jo
and
and
shl
(bad)
ins
cdq
dec
sub
inc
sbb
dec
aaa
push
dec
lea
mov
sub
dec
dec
cmp
add
or
aaa
or
arpl
pop
mov
or
mov
xchg
test
push
mov
mov
sbb
or
sub
aaa
cmp
mov
jp
add
xchg
fucomip
(bad)
adc
mov
xchg
mov
and
or
or
aas
mov
mov
cli
outs
push
and
or
dec
adc
push
(bad)
in
sbb
and
and
addr16
sub
sbb
mov
adc
lds
sbb
jb
jmp
ja
pop
sbb
adc
jl
or
jg
xlat
nop
fs
or
inc
or
movq
mov
addr16
xchg
or
or
adc
or
add
rol
add
ss
aas
and
mov
xchg
jle
add
popa
in
mov
or
push
dec
pusha
push
sbb
arpl
test
adc
in
xor
mov
jns
lock
sub
add
loop
push
pop
and
dec
outs
ins
(bad)
in
es
push
inc
sbb
enter
ds
pusha
and
aaa
jp
mov
inc
add
icebp
sbb
lods
jnp
dec
dec
fstp
and
xor
aaa
nop
inc
ds
ss
cmp
sbb
fldenv
xchg
adc
nop
and
or
cmp
cmp
xchg
adc
mov
pushf
xor
sbb
leave
sbb
adc
mov
push
push
hlt
outs
or
mov
add
pop
mov
aam
push
lea
in
loope
or
mov
mov
popa
adc
or
fild
mov
add
pusha
sbb
sub
psrld
pop
adc
sbb
sbb
xchg
pop
xchg
mov
mov
enter
jmp
sbb
(bad)
jmp
dec
xor
test
or
inc
shr
mov
ins
push
ror
jle
sub
fistp
(bad)
mov
push
inc
push
sub
jae
pop
jae
pop
inc
or
cmp
ja
push
inc
add
adc
pop
mov
or
push
adc
ss
pop
inc
ins
pop
fistp
push
fbstp
mov
dec
or
cmp
mov
cmp
loope
mov
cs
and
push
inc
jnp
mov
lods
cmp
jmp
pop
outs
dec
addr16
jbe
xchg
inc
loopne
cmps
cmp
mov
adc
adc
mov
rol
pop
dec
imul
adc
xchg
sbb
add
es
push
aas
ins
add
lods
sub
(bad)
fdiv
cmp
pusha
js
les
outs
inc
inc
add
sub
test
mov
sub
adc
daa
adc
mov
inc
or
sti
cmp
adc
cmps
js
pop
or
jnp
fimul
mov
outs
mov
inc
int
push
repnz
rol
push
sbb
sbb
test
jge
cmp
mov
jp
jmp
add
mov
retf
mov
enter
mov
jl
inc
and
cs
or
mov
mul
xor
fsubr
cwde
cdq
sbb
sub
and
movs
mov
out
push
add
sub
adc
pop
fimul
sbb
pop
or
jp
call
lea
nop
shl
retf
jne
icebp
jbe
or
and
mov
pop
outs
add
out
cmp
xor
adc
inc
jbe
sbb
loop
mov
mov
xchg
sub
jle
push
iret
nop
add
inc
and
outs
loopne
or
js
outs
jp
call
dec
icebp
test
inc
xchg
or
ud0
or
pop
inc
xor
in
or
add
or
mov
mov
fnstcw
jae
xchg
div
arpl
sbb
jg
push
mov
dec
cmc
sbb
dec
or
adc
fwait
movs
add
add
dec
scas
add
or
inc
sub
adc
dec
sbb
mov
adc
adc
jne
or
cli
jecxz
cwde
jecxz
not
retf
enter
push
in
out
pop
sbb
add
jg
push
jge
stc
cwde
sub
or
and
cmp
inc
pop
jne
mov
js
cdq
into
mov
xchg
je
das
dec
nop
fadd
push
xchg
cmp
(bad)
retf
or
sti
ror
mov
inc
or
push
mov
sbb
pusha
jno
test
adc
es
adc
cdq
icebp
imul
jno
or
mov
sar
ror
into
dec
adc
add
pushw
dec
push
jb
push
or
jno
pop
and
adc
sbb
ret
mov
out
mov
cmp
jge
push
fld
daa
jecxz
xor
jmp
or
push
xor
jno
pop
xor
inc
je
adc
lock
and
js
inc
stos
dec
sbb
lock
(bad)
cld
pop
shl
pop
or
cmp
sub
jp
xchg
scas
es
mov
sbb
xchg
pushf
mov
xchg
jbe
and
jb
cmp
jecxz
test
adc
call
sub
sbb
aaa
int
jmp
test
das
mov
lods
or
iret
or
jne
push
add
dec
fwait
bound
add
push
pop
mov
xor
ss
lods
push
(bad)
and
dec
add
add
mov
daa
fs
arpl
cmp
or
xor
xchg
or
lods
mov
out
dec
lds
mov
enter
loopne
inc
out
adc
das
dec
fimul
push
jns
sbb
inc
data16
add
cmp
pop
inc
cs
push
xor
sub
or
add
fldpi
(bad)
push
mov
dec
cdq
lock
popf
cmp
jmp
imul
push
push
mov
in
ror
add
sbb
rol
jmp
rol
les
into
into
mov
nop
imul
adc
or
mov
jae
pusha
lods
sub
sbb
adc
sahf
mov
fwait
mov
push
ds
push
and
push
pop
cmovne
add
push
dec
or
pop
popf
adc
jae
not
mov
sbb
inc
inc
or
aaa
jecxz
mov
dec
push
dec
iret
cmp
cs
sub
sub
add
jo
ja
int3
push
jb
and
jbe
(bad)
sub
inc
mov
dec
jle
jbe
ror
pop
outs
pop
cmp
push
pop
xor
dec
xor
mov
xor
inc
push
loope
or
sahf
int3
pop
ins
add
inc
sub
loop
push
cmps
mov
adc
and
std
sbb
push
pop
jae
daa
popa
pop
sub
push
pusha
add
add
xor
es
add
jecxz
rcl
sub
mov
dec
xor
icebp
aas
(bad)
push
adc
or
addr16
inc
jle
add
adc
inc
adc
sbb
inc
push
mov
fwait
dec
sar
cmp
test
mov
fsubr
push
add
sub
pop
les
push
or
cld
xor
inc
push
xor
sub
ss
fld
fdiv
pop
xor
enter
jl
push
xor
or
add
mov
(bad)
cmp
clc
sub
sub
ret
shr
sub
sar
push
aaa
pushf
lock
retf
cmp
push
bound
aaa
pop
and
jge
pop
jg
xor
and
mul
and
call
aaa
inc
fdivr
mov
jmp
call
pop
xor
call
pop
push
inc
and
adc
or
loope
inc
sub
cs
add
iret
mov
in
or
push
rol
dec
sbb
pop
test
loope
mov
xchg
cdq
push
icebp
movs
inc
add
stos
xor
or
fwait
or
bound
mov
xchg
adc
dec
cmp
add
loop
loopne
enter
inc
sbb
aaa
add
or
les
pushf
mov
jae
push
cmp
add
retf
lea
cmp
xchg
xor
cdq
push
test
jae
push
dec
dec
(bad)
loopne
xor
push
xor
jle
xchg
loope
mov
add
push
arpl
test
shr
pop
(bad)
pusha
sub
add
leave
inc
and
adc
push
cwde
inc
mov
test
cmps
icebp
cmp
scas
mov
mov
add
ror
push
ins
test
movaps
adc
mov
jmp
sub
xor
rol
or
js
jo
js
imul
aaa
or
inc
cmp
cmp
push
adc
xchg
call
fsub
mov
sbb
lds
dec
mov
imul
add
inc
adc
jecxz
lahf
inc
ror
inc
push
in
adc
adc
mov
mov
and
add
or
sbb
xor
loop
mov
ret
fwait
shl
mov
mov
jecxz
and
push
or
xlat
dec
addr16
sbb
push
mov
push
pop
mov
arpl
mov
and
leave
lods
je
outs
xor
mov
xchg
mov
adc
pop
loopne
mov
gs
popa
sub
mov
daa
and
jno
pop
jae
pusha
dec
lahf
ss
jb
nop
lods
pop
mov
je
imul
rcl
retf
das
jp
inc
arpl
das
dec
popa
push
repnz
cwde
out
push
std
xor
cmp
fisttp
pop
sub
pop
popa
movs
sub
cmc
mov
cmp
cmp
mov
xchg
popa
dec
adc
xchg
lea
pop
dec
xor
dec
mov
mov
and
inc
dec
rcr
test
inc
pop
dec
aaa
jmp
push
mov
pop
iret
push
imul
pop
push
pop
loop
lock
push
loopne
add
jmp
int
cwde
jmp
inc
or
inc
xor
adc
pop
cli
push
call
(bad)
and
sahf
std
test
mov
mov
xchg
adc
inc
adc
bts
xchg
cmps
daa
loop
in
movs
sub
leave
cmp
ins
cmp
(bad)
push
push
(bad)
fdiv
rcl
push
cld
repz
(bad)
mov
ins
sbb
dec
std
add
xchg
pushf
cmp
cmp
ja
xchg
xchg
stos
xor
setnp
inc
push
add
je
xchg
imul
bound
push
jbe
sub
jg
adc
dec
push
and
push
enter
setl
rcr
leave
dec
jle
add
retf
push
push
int
push
add
or
add
ret
push
inc
inc
add
retf
sub
or
mov
adc
mov
dec
dec
push
cdq
push
sub
inc
rol
cmp
dec
mov
aas
mov
mov
xor
mov
mov
push
loopne
xchg
call
movs
cmp
xor
or
aam
test
sub
ins
push
jb
mov
and
push
lahf
jne
sub
add
mov
ret
inc
je
dec
adc
sub
cmp
sbb
push
adc
ja
add
rcr
and
lea
xor
retf
mov
rol
add
out
cmp
and
or
aam
xor
movs
mov
mov
fwait
mov
add
out
mov
nop
imul
cmp
clc
and
push
aaa
add
push
adc
push
outs
in
(bad)
in
adc
fs
xor
loopne
sbb
sub
adc
jo
dec
adc
mov
mov
sub
iret
and
out
leave
mov
out
pop
push
xor
pop
retf
mov
lea
add
xor
loop
addr16
and
shl
push
cmp
in
or
xor
mov
and
adc
fwait
adc
stc
inc
(bad)
sub
add
jl
sub
jns
not
push
inc
mov
mov
movd
dec
js
cmps
xor
dec
adc
dec
add
push
and
mov
jo
push
dec
outs
pop
push
in
inc
push
imul
imul
add
inc
fild
push
cmp
or
xchg
push
inc
push
push
push
fs
pop
imul
je
xchg
or
nop
inc
dec
into
push
(bad)
lock
pop
enter
push
test
push
arpl
add
in
js
enter
outs
xor
jg
pop
test
rol
mov
aad
call
inc
dec
cmp
jae
push
push
jecxz
or
imul
or
ja
xorpd
lods
sub
daa
cmps
or
ss
in
ja
movs
and
repnz
add
push
scas
jl
rcr
mov
dec
inc
dec
cli
outs
xchg
mov
pop
add
pop
jl
or
gs
xchg
mov
or
adc
aam
adc
add
jmp
fwait
push
mov
jne
and
jp
sti
ds
lock
xor
adc
or
add
jle
cmp
jbe
adc
ins
add
jo
add
mov
loopne
cli
fld
ror
inc
and
test
mov
and
pushf
sbb
xchg
xchg
push
clc
mov
xchg
nop
cmp
jb
xor
adc
mov
mov
mov
mov
(bad)
jbe
pop
test
add
or
in
dec
cmp
push
or
sub
inc
jecxz
or
stos
adc
popa
pop
add
sbb
cmp
pop
cmp
call
mov
ret
add
or
mov
fsub
mov
test
sub
or
xor
fs
adc
cwde
push
inc
mov
jbe
adc
shl
mov
sub
xor
sbb
pop
and
sbb
xor
test
movaps
inc
inc
or
cli
aam
or
adc
nop
cmp
jle
sub
push
loope
loop
inc
adc
movs
iret
jnp
push
loop
adc
inc
mov
mov
popa
mov
repz
inc
adc
cmp
inc
mov
(bad)
repnz
mov
sbb
push
mov
inc
lahf
sub
lods
mov
adc
pop
jnp
scas
and
out
sbb
sub
jp
cmp
pop
stos
mov
xor
xchg
(bad)
pop
sub
adc
and
push
sub
retf
or
xor
push
repz
add
jp
push
jmp
imul
add
adc
mov
add
sub
pop
std
adc
dec
and
mov
or
or
aas
lock
or
dec
not
lea
push
sub
repnz
shr
cmp
jbe
fsub
imul
pop
xor
test
sbb
inc
cmp
mov
dec
in
cmp
fstp
arpl
inc
repnz
inc
rcl
dec
scas
std
ins
stos
sbb
icebp
dec
and
dec
dec
js
clc
add
cld
push
std
(bad)
test
cmp
jg
mov
sub
cmp
pop
add
ins
sub
fs
mov
loope
lods
bound
mov
dec
(bad)
pop
test
enter
push
ret
jge
xor
mov
push
mov
adc
lock
sbb
jnp
fst
js
mov
inc
push
aam
loop
adc
adc
ficomp
out
retf
adc
or
add
into
sbb
jg
jecxz
push
and
sbb
jg
or
popf
and
sub
jle
jge
inc
dec
aad
ret
mov
or
or
adc
sub
sub
adc
dec
xchg
repnz
nop
push
repz
pusha
cmc
test
add
cwde
movs
and
hlt
sbb
sub
ret
cmp
mov
je
pop
(bad)
(bad)
dec
and
inc
int3
sahf
cmps
sub
jl
jmp
and
or
add
cmp
nop
add
jno
xchg
jno
loope
cmp
and
lods
push
das
mov
pusha
addr16
and
push
dec
adc
mov
js
je
dec
call
push
cmp
sub
pop
inc
xor
push
adc
loop
xor
xor
xor
aaa
fdivr
nop
jnp
ins
aam
adc
or
test
push
and
cmps
and
pop
xor
push
sub
mov
pop
jo
popa
jmp
add
cmp
imul
sbb
push
fiadd
pop
jl
pop
sahf
inc
mov
call
jge
sub
jmp
ss
dec
xchg
xchg
inc
in
sub
mov
ror
push
jb
and
enter
fadd
and
push
mov
xor
outs
xchg
js
xor
sub
int
jns
scas
push
sub
aam
shl
leave
adc
out
stos
test
shl
scas
push
xor
test
mov
ins
jb
push
(bad)
or
ins
nop
push
push
add
push
add
cmp
lods
(bad)
movs
shl
mov
pop
fs
cwde
mov
shl
js
jge
jl
(bad)
xchg
clc
and
mov
(bad)
popa
push
cmp
je
and
mov
imul
jg
and
iret
test
pop
xor
aad
and
adc
jmp
mov
aaa
push
pop
mov
(bad)
sub
jo
pushf
cmp
mov
movs
(bad)
nop
or
xchg
fiadd
lea
mov
shr
shl
pop
ret
push
mov
xor
lods
call
(bad)
adc
mov
int
loop
add
mov
and
mov
(bad)
sbb
fst
or
sbb
sar
das
out
mov
loop
or
pop
ror
pop
ins
sar
rol
cmp
cmp
clc
or
add
mov
mov
clc
mov
jne
in
movs
mov
sub
adc
jo
add
mov
xor
or
repnz
dec
adc
xor
sbb
loop
test
(bad)
xchg
push
loop
(bad)
push
inc
in
not
xor
or
fsub
movs
push
ret
mov
mov
xor
or
adc
movs
add
add
fs
add
sbb
lods
and
stos
inc
inc
pop
nop
cmp
mov
sub
xor
mov
mov
int3
leave
inc
daa
ficom
and
sub
cmp
jno
sub
mov
mov
stos
ja
shr
clc
loopne
add
loopne
mov
inc
fstp
mov
inc
xor
push
inc
rol
jns
fiadd
std
call
test
adc
push
dec
nop
mov
add
mov
dec
dec
mov
sub
inc
(bad)
ror
xlat
sub
mov
or
mov
or
leave
push
sub
fisttp
xchg
or
xchg
dec
dec
cmp
inc
xor
cs
or
push
sbb
or
add
sub
add
enter
pop
inc
and
leave
mov
pop
dec
and
leave
pop
pop
mov
dec
jb
pop
pusha
pop
imul
cmc
sub
sub
fs
sub
cmc
cs
inc
pusha
ss
adc
outs
jmp
int3
jmp
jge
in
mov
into
ins
hlt
mov
sub
outs
mov
test
sub
(bad)
sub
xor
(bad)
xor
(bad)
xchg
lea
adc
into
stc
or
loope
dec
mov
jecxz
or
or
sub
fild
add
pop
mov
(bad)
in
pop
iret
mov
(bad)
push
cld
imul
call
adc
sub
mov
mov
add
cmp
or
mov
or
loop
sti
adc
sbb
(bad)
stc
sub
pusha
jns
iret
dec
dec
add
ins
push
mul
cmc
pushf
adc
ret
in
inc
dec
in
mov
inc
aas
xchg
pop
dec
call
xchg
add
cmp
or
push
cmp
xchg
adc
dec
adc
daa
inc
enter
call
fadd
jo
cdq
fcomp
add
inc
push
fcomp
stos
sub
cld
fdiv
mov
pushf
dec
lock
int3
mov
mov
int
or
out
aam
jno
fsub
push
aam
inc
lds
popa
mov
loopne
mov
shl
lods
loope
in
pop
or
in
mov
scas
sbb
aam
sub
inc
xor
outs
push
loopne
mov
nop
jo
xor
dec
push
sbb
or
ins
aaa
cmovge
jmp
pop
push
ins
dec
shr
adc
fcmovb
sub
fs
push
push
push
add
rcr
xchg
int
in
in
pop
xor
outs
lock
pop
xor
lea
outs
lock
adc
fsub
out
ret
push
xor
out
mov
add
adc
cmp
push
dec
or
lods
add
and
test
sub
mov
mov
or
add
dec
sbb
and
add
adc
or
mov
outs
pop
rol
adc
adc
pop
adc
retf
or
or
sub
inc
cmp
retf
or
or
imul
mov
scas
cmp
mov
(bad)
scas
outs
adc
adc
cdq
icebp
sbb
ja
popf
mov
and
in
mov
nop
inc
mov
and
or
and
mov
(bad)
xchg
mov
push
pop
jmp
rol
call
jb
xlat
mov
xchg
cmp
inc
push
inc
mov
int
add
ds
and
push
mov
lds
or
sub
fwait
and
out
and
in
cmp
ja
cmps
cmps
into
std
lock
aaa
add
xlat
mov
pop
shl
ja
add
xor
call
ja
outs
nop
daa
mov
ss
cs
in
mov
push
xchg
pop
loopne
inc
lods
or
adc
lock
out
adc
mov
fiadd
rol
xchg
popa
jno
loop
aas
add
add
and
aas
lahf
or
daa
scas
inc
push
mov
mov
rcl
push
mov
dec
fiadd
xor
(bad)
jmp
adc
imul
pop
push
sub
fcmovu
push
cmps
loopne
pop
movs
or
je
adc
inc
mov
in
dec
sbb
mov
mov
stos
shr
pop
mov
sbb
push
push
mov
xor
jno
outs
xor
mov
loopne
dec
mov
cli
cmp
(bad)
jmp
ror
push
or
push
pop
mov
jae
arpl
inc
jle
add
mov
jecxz
sar
test
and
addr16
mov
je
repz
pusha
inc
mov
scas
test
dec
pop
sbb
xor
mov
jmp
jo
movs
sbb
sbb
ret
arpl
push
jl
lods
or
fild
jmp
and
shr
xor
sub
imul
add
mov
ja
mov
cmp
pop
pop
xchg
mov
dec
cli
inc
ds
push
sbb
sub
stos
pop
xchg
pusha
push
push
or
mov
retf
add
cmp
xor
sbb
popf
add
xor
push
nop
cmp
sbb
and
xor
fnstsw
jae
xor
dec
mov
and
mov
popa
imul
hlt
or
cmps
pushf
xchg
or
inc
add
sub
aaa
in
adc
cmps
or
push
dec
repz
pusha
sub
and
sbb
add
push
loope
stos
or
xchg
test
pusha
add
(bad)
in
lock
adc
lock
cmp
xor
in
js
mov
adc
adc
cmp
stos
xor
mov
lds
ror
dec
xor
nop
or
push
or
add
push
test
and
ret
(bad)
sbb
cmp
test
jo
in
cmp
add
sub
das
pop
cdq
test
jecxz
gs
xchg
xor
or
inc
add
jo
or
add
mov
sbb
pop
or
sub
dec
mov
loopne
add
cmp
mov
add
adc
shr
shr
xchg
cs
xor
push
inc
aad
pop
popa
test
bound
push
cmps
enter
ja
or
cmp
or
test
xlat
leave
adc
dec
and
pop
jl
cmp
and
cmp
cdq
mov
jge
add
push
call
jl
or
int
ret
mov
jb
adc
push
loope
add
mov
cmp
or
call
adc
push
mov
adc
dec
jecxz
out
mov
add
and
pusha
add
test
jg
or
outs
aaa
mov
mov
cmp
xchg
xor
sbb
adc
xor
adc
jl
pop
jno
test
adc
test
pusha
in
dec
arpl
mov
add
sbb
and
retf
fwait
pusha
dec
cmp
add
into
ins
ins
test
or
inc
hlt
repnz
adc
shl
and
js
adc
adc
ror
outs
jmp
je
mov
add
dec
mov
sub
pop
(bad)
jmp
add
(bad)
fsub
inc
dec
jno
sub
loop
cdq
jnp
push
pop
outs
xor
mov
mov
sub
sbb
add
(bad)
call
test
mov
add
into
daa
xchg
fwait
pop
or
inc
nop
add
add
add
inc
push
add
push
nop
add
push
pop
or
add
inc
or
inc
push
nop
add
or
in
cmp
nop
(bad)
add
ins
mov
(bad)
lea
call
sbb
mov
inc
add
jb
and
sbb
adc
ret
xchg
mov
add
pop
es
jne
xlat
popa
jg
std
inc
jb
push
rcl
xlat
push
cli
adc
inc
dec
fs
mov
pop
sbb
mov
push
fwait
dec
push
fidiv
mov
push
adc
nop
jl
sbb
jns
ds
add
inc
cmps
jmp
inc
xchg
pop
inc
jns
xchg
or
adc
mov
adc
cmp
push
fwait
inc
(bad)
and
pushf
push
xchg
xchg
xchg
mov
push
nop
clc
mov
inc
imul
js
dec
mov
rcl
scas
pusha
mov
xlat
aas
xlat
adc
lahf
dec
sub
stos
das
mov
test
int3
adc
fcmovnb
fucomp
mov
adc
push
xchg
pop
mov
add
or
sbb
or
in
and
adc
mov
or
repnz
cmp
mov
and
push
adc
in
mov
mov
dec
sub
and
rol
test
aas
iret
push
mov
jb
inc
xchg
fistp
int
or
or
inc
push
adc
or
sbb
aaa
in
and
sub
ficomp
pop
add
dec
xchg
or
sti
adc
nop
pop
or
gs
test
(bad)
mov
mov
adc
aas
push
xchg
es
add
inc
in
js
js
add
ins
imul
in
cs
dec
xor
or
outs
xchg
sbb
push
fist
test
push
jnp
add
loope
(bad)
fistp
inc
enter
cmps
mov
jne
leave
arpl
cmps
cmp
aas
jg
push
imul
push
dec
inc
js
imul
enter
sbb
push
sbb
adc
and
mul
iret
je
rol
inc
ss
cmps
aam
cmps
loopne
mov
mov
jbe
sbb
aam
outs
add
cmp
sub
and
mov
js
xor
mov
xchg
ret
dec
call
or
enter
xlat
or
enter
fidiv
enter
(bad)
enter
(bad)
shl
or
rol
or
(bad)
(bad)
or
enter
retf
and
and
and
mov
or
enter
mov
xor
and
and
and
and
mov
movs
movs
cmps
cmps
or
enter
stos
xor
and
and
and
xchg
or
xchg
xchg
xchg
xchg
or
enter
call
popf
int3
and
sbb
int3
inc
mov
pop
mov
add
sbb
ins
pop
daa
into
sbb
or
test
add
sbb
xor
jne
cdq
inc
inc
std
pop
rcl
stc
jne
or
fmul
and
push
xlat
add
nop
js
mov
jo
popf
fcmovnb
or
imul
push
adc
push
adc
mov
jecxz
xchg
addr16
shr
adc
les
out
in
lahf
xchg
dec
xlat
test
adc
pusha
dec
pop
pop
add
sbb
push
and
xchg
and
or
or
sbb
push
and
xchg
and
adc
adc
sbb
push
and
xchg
and
sbb
sbb
sbb
push
and
xchg
and
and
and
sbb
and
xchg
and
sub
sub
sbb
and
xchg
and
xor
xor
sbb
and
xchg
and
cmp
cmp
sbb
and
xchg
and
inc
xchg
and
xchg
inc
inc
inc
sbb
inc
and
xchg
and
xchg
and
xchg
dec
dec
dec
sbb
dec
and
xchg
and
xchg
and
xchg
push
push
push
sbb
push
and
xchg
and
xchg
and
xchg
pop
pop
pop
sbb
pop
and
xchg
and
xchg
and
xchg
popa
bound
xchg
and
fs
xchg
and
xchg
and
xchg
imul
ins
ins
outs
mov
nop
and
ins
arpl
xor
dec
daa
idiv
dec
arpl
sbb
push
or
pop
outs
xchg
push
shl
push
jae
cmp
pop
pop
lods
xchg
(bad)
cmp
popa
out
adc
out
scas
sbb
pop
push
pop
addr16
adc
push
popw
push
jae
sbb
cli
(bad)
cli
imul
pop
push
out
jae
jne
fs
aas
pop
cs
mov
push
push
or
pop
xchg
adc
cwde
add
mov
daa
dec
mov
or
mov
jae
push
inc
inc
sub
nop
dec
jae
add
mov
addr16
push
outs
add
daa
dec
push
add
sub
sbb
sbb
sbb
bound
adc
fistp
rcr
enter
iret
aaa
mov
push
xchg
inc
iret
mov
retf
cmp
sbb
inc
xor
pop
pop
and
daa
jo
sbb
fcmove
and
xlat
pop
and
push
lods
cmp
dec
adc
cli
push
inc
jne
gs
add
inc
jp
fld
movs
(bad)
ja
imul
sbb
(bad)
das
out
fld
daa
adc
push
push
mov
ins
gs
dec
xor
cmps
mov
xor
push
push
dec
sub
pop
out
dec
mov
sbb
outs
lods
dec
lods
pushw
dec
popf
mov
push
cmp
cmp
test
mov
dec
fwait
adc
jl
cmp
pushf
(bad)
test
pop
imul
xor
push
xchg
pop
push
ins
in
mov
inc
inc
outs
mov
and
dec
adc
mov
inc
lds
unpckhps
aaa
inc
daa
dec
sbb
and
gs
push
das
push
ror
imul
add
push
inc
inc
dec
sub
int3
je
je
sub
inc
das
inc
sbb
mov
add
mov
pop
sub
mov
push
add
pop
or
pusha
push
int3
out
inc
fs
hlt
aaa
push
iret
call
fs
ins
xchg
inc
cmps
push
push
inc
pop
dec
imul
retf
add
shl
ins
and
cwde
loopne
jne
add
dec
add
fsub
add
sbb
cmp
enter
sbb
mov
inc
xchg
movs
loop
inc
adc
push
cwde
and
sbb
fstp
xor
pop
add
jge
repnz
mov
jle
or
and
pop
inc
xor
sahf
test
or
mov
popf
lock
cmp
mov
lahf
xor
xchg
adc
icebp
test
push
push
cmps
xchg
enter
mov
or
cdq
or
nop
fs
test
and
xor
test
sbb
jge
mov
fs
fmul
ror
pop
fld
push
add
mov
data16
dec
fwait
sbb
lock
xchg
adc
push
adc
adc
xchg
pop
cmps
add
and
mov
paddd
sbb
dec
jg
out
mov
xchg
cdq
jnp
xchg
xchg
xchg
je
ds
pop
fs
nop
(bad)
mov
jp
cs
mov
xor
xchg
jmp
push
nop
ds
mov
cmps
and
mov
sbb
adc
add
ret
(bad)
or
fwait
add
cmp
out
mov
jl
push
loopne
in
out
stos
pop
test
mov
fwait
push
mov
mov
adc
mov
xchg
movs
mov
test
imul
mov
jle
push
add
and
pop
fistp
cmp
mov
dec
lods
mov
int
jbe
pop
sbb
cwde
scas
xlat
pop
cmp
fwait
or
iret
cmovl
add
mov
xchg
test
repnz
ins
adc
mov
jg
shr
dec
rol
jb
mov
sub
ret
daa
xchg
add
mov
nop
(bad)
(bad)
and
add
xchg
pop
ja
ror
push
or
out
add
fs
jmp
aas
pop
pop
pushf
bound
xchg
mov
stc
dec
movq
sub
clc
add
or
jl
lock
mov
bound
adc
or
mov
jns
mov
aaa
mov
push
push
mov
adc
lea
sbb
mov
jl
push
add
dec
rol
outs
pusha
or
sub
ds
(bad)
xchg
push
push
xchg
scas
call
mov
add
mov
(bad)
rol
movs
sti
adc
adc
xchg
nop
movs
pop
sub
test
add
out
push
outs
in
push
push
mov
inc
(bad)
cdq
dec
pop
xchg
add
test
pushf
or
in
jecxz
leave
mov
hlt
repnz
ins
int
sbb
daa
movs
add
sub
movs
jae
dec
push
add
add
stos
rol
nop
nop
shl
fidiv
add
add
outs
add
ss
scas
leave
in
inc
das
xchg
pop
mov
adc
mov
pop
shl
pop
or
or
adc
dec
sub
jo
sbb
in
or
pop
js
jae
cmp
push
xchg
ret
mov
sbb
push
mov
adc
and
push
push
mov
push
sub
or
iret
rol
jbe
sti
out
pop
or
test
mov
adc
add
out
inc
xchg
xor
adc
sbb
leave
push
inc
test
fst
lock
xchg
sub
pusha
jmp
jmp
scas
nop
call
inc
mov
pop
jno
jle
and
ret
push
xor
mov
jns
pop
cld
shl
mov
add
cmp
not
hlt
stos
xchg
push
popa
add
push
iret
sub
lods
adc
or
in
repnz
add
lock
mov
xchg
push
cs
pop
adc
pusha
xor
push
dec
clc
sub
(bad)
push
test
mov
in
mov
push
xchg
popa
shr
mov
scas
ss
sbb
adc
pop
shr
inc
adc
mov
sub
pop
hlt
push
sub
and
aad
xchg
data16
push
push
inc
mov
push
pop
lock
sbb
jmp
aad
inc
or
adc
add
pop
dec
pushf
add
inc
pop
add
push
mov
aam
es
mov
sub
add
pusha
adc
pop
push
inc
sub
adc
cmps
xchg
push
and
or
mov
or
shl
imul
jne
sbb
rcl
nop
stos
lds
add
push
dec
out
mov
cmps
inc
inc
pop
push
lock
cwde
mov
nop
test
lock
mov
dec
push
dec
nop
dec
dec
push
push
inc
pop
adc
ss
mov
dec
adc
and
push
jle
mov
es
nop
xor
movs
les
pop
jle
xor
mov
push
xchg
fs
adc
nop
fstp
lock
jl
mov
xchg
or
or
adc
inc
gs
jo
cs
jne
or
cs
les
xchg
in
push
mov
and
sbb
retf
outs
ret
data16
add
das
test
rcr
dec
(bad)
jmp
mov
jl
mov
cmp
inc
inc
loop
cmp
sti
fcomi
test
sub
xchg
stos
dec
inc
bndstx
or
sbb
mov
mov
pop
add
imul
ror
pop
dec
xchg
sub
pop
push
pop
add
lock
ins
outs
push
daa
movs
sbb
add
int3
mov
sbb
push
nop
pop
rcr
lock
popf
xor
nop
or
ins
mov
sub
movs
ror
mov
cmp
hlt
inc
add
lock
push
adc
dec
in
xchg
cmp
popa
pop
inc
jmp
movs
adc
(bad)
push
jmp
dec
dec
mov
xchg
out
in
sbb
arpl
or
cmc
jno
jg
(bad)
call
jno
call
shr
call
adc
xchg
pusha
lea
mov
pop
inc
xchg
mov
mov
adc
js
inc
jl
dec
push
in
cld
cld
dec
inc
cdq
jp
test
rol
xchg
mov
sar
xor
cmp
in
lea
jmp
xchg
ror
xor
add
mov
leave
cmp
xlat
add
push
(bad)
je
ret
adc
loopne
inc
mov
or
dec
push
cmp
sbb
dec
sub
sbb
pop
gs
push
lods
push
jmp
mov
lods
inc
add
add
and
inc
test
add
add
mov
xor
or
sub
cmc
fwait
aam
pop
je
mov
xor
test
aas
push
and
cmp
mov
mov
sub
add
mov
nop
sbb
xor
mov
add
push
jne
add
leave
sar
jne
das
push
gs
daa
jns
jne
jb
add
dec
dec
dec
popa
inc
bound
and
jo
jns
scas
mov
ins
pop
jne
xlat
gs
jl
imul
jbe
xor
add
test
loope
adc
lods
std
outs
or
lds
pop
pop
shl
out
mov
outs
bound
cmp
cmp
inc
sar
xchg
add
inc
cdq
dec
mov
mov
and
out
outs
cld
dec
cmp
add
add
pop
and
push
cvtpi2ps
mov
ret
push
jns
jmp
mov
dec
sub
xchg
cmp
cs
mov
xchg
mov
movups
mov
int
mov
(bad)
mov
fisub
in
push
fist
add
jl
mov
jnp
and
jo
cmc
xchg
xor
jb
jl
das
xlat
scas
bndstx
loope
add
shl
into
dec
sbb
pop
loopne
inc
sbb
mov
cmp
mov
xor
mov
inc
mov
adc
mov
ja
inc
lock
in
mov
mov
add
sbb
test
inc
push
pop
scas
sub
xlat
or
adc
xchg
les
xchg
hlt
mov
or
push
xor
icebp
xchg
out
dec
mov
add
ja
jecxz
xchg
push
add
sub
sub
cmp
xor
out
dec
dec
std
sbb
mov
sbb
cmp
push
or
add
inc
push
mov
cs
daa
out
and
imul
int
lods
(bad)
nop
cmps
add
or
add
pop
push
es
scas
out
cmp
cmc
aam
jge
inc
jp
add
sbb
enter
ficom
lods
sub
inc
data16
addr16
adc
cmp
xor
dec
scas
int
xor
cmp
push
and
xor
test
ret
mov
pop
and
adc
pop
ds
in
mov
cmp
dec
jl
clc
adc
mov
or
add
pop
or
sbb
xor
test
push
in
xchg
mov
push
and
retf
inc
ror
adc
retf
les
or
push
pop
dec
jmp
ins
aas
imul
rcl
(bad)
stos
sbb
dec
mov
mov
inc
sub
mov
iret
mov
pop
pop
xchg
movs
adc
dec
pop
shr
pop
xor
nop
mov
scas
aas
lea
sub
xchg
(bad)
mov
push
leave
push
arpl
icebp
popa
fs
xchg
jg
xlat
jl
xor
or
gs
push
xor
and
push
inc
jne
xchg
xchg
and
(bad)
fld
or
adc
shl
std
repz
add
or
inc
test
inc
mov
test
push
push
call
inc
push
cwde
add
nop
ds
xchg
push
enter
sub
or
cmp
dec
sub
add
fbld
mov
dec
adc
pop
enter
mov
jnp
lods
adc
cmp
aad
outs
test
(bad)
(bad)
call
or
mov
pushf
jb
fist
loope
test
xlat
dec
mov
push
xor
das
shl
rcl
push
nop
mov
dec
dec
inc
add
pop
jmp
add
xor
aaa
push
add
adc
aaa
fsub
adc
dec
add
test
add
cmp
fdivr
ja
xchg
mov
ss
movs
daa
mov
(bad)
daa
sub
lds
fdivr
jmp
mov
push
or
xor
shl
pusha
jno
xchg
shl
xlat
call
stc
or
sbb
sub
dec
shl
mov
test
(bad)
shl
out
imul
leave
(bad)
and
mul
fcom
pop
xchg
inc
jb
sbb
movs
pop
sbb
pop
cmp
nop
cmp
mov
jb
sbb
adc
jne
or
rcl
mov
in
nop
inc
cmp
xchg
dec
retf
xchg
and
fcomp
in
xchg
and
ficom
mov
cmp
test
(bad)
loopne
inc
hlt
gs
jmp
punpckhwd
imul
sub
pusha
xchg
xor
ins
push
test
pop
inc
mov
in
xchg
dec
ss
inc
sbb
add
sbb
add
fistp
add
out
in
fs
jmp
push
inc
jle
dec
sbb
cmp
jmp
loop
sub
cmp
adc
je
sub
jb
xchg
pop
sbb
add
inc
push
push
fdivr
xchg
gs
shr
test
push
pop
pop
push
adc
xchg
xlat
popa
dec
cs
loopne
or
cmp
jb
sbb
dec
and
in
pop
(bad)
daa
adc
leave
add
dec
je
ror
movs
xor
adc
mov
pop
add
or
or
dec
or
xchg
cmps
scas
paddd
xor
push
sbb
push
push
nop
dec
push
adc
push
sbb
test
enter
ret
push
gs
mov
cli
cmp
sub
inc
xor
push
test
jo
int3
inc
test
jp
push
push
and
push
pop
xor
or
push
push
sbb
xor
sbb
pop
addr16
jge
xor
dec
cdq
push
jb
push
shl
add
xor
push
gs
xchg
fs
mov
or
xchg
adc
js
or
push
push
mov
pop
cwde
(bad)
sbb
sub
mov
std
add
sub
add
je
xor
push
xchg
and
adc
pop
xor
push
push
adc
(bad)
pop
pop
rol
out
push
xor
arpl
jmp
ret
xchg
lods
sub
jg
xchg
ror
jne
dec
adc
sub
adc
sbb
xchg
movs
and
movs
mov
mov
std
(bad)
dec
pop
(bad)
push
add
retf
xchg
or
les
test
or
ins
jbe
push
mov
or
xor
xchg
data16
ss
pop
cmp
mov
lock
jo
sub
dec
mov
leave
push
push
and
adc
sub
lea
mov
mov
movs
and
or
pop
dec
aam
push
pop
inc
jmp
cdq
and
add
inc
jmp
pop
mov
push
sub
nop
or
out
push
push
adc
(bad)
dec
push
rcr
ins
xor
or
(bad)
sub
inc
imul
cmp
inc
mov
add
or
or
sub
dec
inc
fimul
add
ins
jne
add
nop
call
add
xchg
or
or
inc
scas
dec
fcomp
les
scas
sbb
push
out
adc
add
pop
cmp
or
adc
pop
sbb
push
pop
sub
add
or
sub
jns
sub
push
mov
sub
cli
add
add
or
sub
mov
push
mov
inc
adc
aad
test
xchg
js
je
inc
mov
adc
ror
(bad)
in
stos
sbb
aad
add
and
(bad)
imul
retf
add
add
pop
sbb
cmps
and
sub
sub
mov
inc
ret
xlat
and
retf
mov
lock
popa
and
mov
lea
xor
sub
or
xor
hlt
cdq
or
arpl
inc
pusha
mov
push
cmp
adc
jmp
pop
dec
sbb
cdq
add
jno
test
pop
movs
je
out
mov
lea
das
out
or
(bad)
pop
cmp
mov
add
dec
cwde
push
and
push
ret
and
mov
ror
xor
addr16
ror
xchg
out
mov
push
adc
jnp
add
xchg
jl
cmp
pop
test
es
es
adc
dec
dec
dec
shr
or
lods
popa
or
and
and
data16
sbb
pop
adc
pop
adc
shl
push
or
dec
movs
xchg
mov
and
jp
out
or
inc
xor
sub
pop
sub
inc
ins
jbe
movs
and
(bad)
and
ins
dec
movs
pop
pop
out
cwde
jo
rcl
int
jmp
jmp
(bad)
lock
inc
pop
jnp
in
rol
shl
test
push
test
(bad)
adc
cmovae
jecxz
cdq
mov
es
sub
dec
or
mov
push
pop
pop
inc
push
and
add
in
dec
mov
stos
dec
sub
scas
add
js
sti
cmp
sahf
xchg
adc
dec
push
mov
aad
adc
rcpps
adc
lahf
adc
inc
sub
push
(bad)
ds
inc
xchg
ins
mov
inc
fild
or
or
int3
(bad)
int3
sbb
inc
fsub
add
dec
outs
dec
push
sbb
loopne
xor
aam
add
aas
xchg
adc
enter
mov
inc
(bad)
add
xor
or
mov
mov
sbb
xchg
ror
nop
ins
ins
push
add
pop
daa
and
push
scas
dec
fld
push
sbb
sbb
sbb
push
cmp
pop
sbb
mov
adc
repz
hlt
inc
pop
dec
pop
add
mov
sub
or
ud2
or
pop
add
xor
xor
or
int3
movs
sub
rol
mov
push
or
shl
inc
lods
sbb
push
inc
scas
jns
fcomp
and
push
inc
lods
mov
push
or
dec
mov
or
pop
rol
in
push
mov
repnz
call
xor
imul
pop
test
icebp
push
cmp
sub
adc
push
test
mov
nop
shr
call
sub
jmp
ds
call
inc
call
pop
add
in
adc
in
add
enter
rol
xor
and
mov
sbb
and
ror
nop
push
gs
xchg
mov
std
add
mov
inc
sbb
lds
adc
adc
cwde
add
cdq
shl
enter
cld
jne
pusha
pop
sbb
or
mov
jne
leave
(bad)
jne
into
jo
pop
jne
push
xor
ret
xor
add
push
clc
jg
cmc
lock
adc
xchg
pop
pop
jne
dec
jo
sub
je
outs
xchg
dec
daa
cwde
xchg
inc
hlt
and
push
cmps
test
add
call
sub
or
cmps
test
cmp
daa
call
fadd
dec
test
adc
lods
fcomp
sbb
inc
cmps
adc
and
cdq
movs
test
push
call
xchg
nop
je
repz
mov
inc
sbb
add
adc
push
(bad)
fidiv
dec
pop
or
and
cmps
sbb
pop
inc
sub
xor
cmp
mov
push
add
shl
or
dec
cwde
add
sbb
les
add
inc
xchg
mov
fisttp
jne
sub
jg
dec
mov
lds
mov
jno
add
inc
xchg
push
adc
jne
retf
aaa
jb
es
aad
and
mov
xor
or
pop
cwde
test
bound
cmc
movs
shl
adc
adc
je
lea
add
fcmovnb
fldcw
fdivr
sbb
sub
or
test
push
add
call
imul
mov
pusha
push
jo
fs
push
sbb
dec
(bad)
hlt
daa
nop
inc
adc
inc
pop
cmp
push
sub
sub
inc
and
inc
add
mov
jmp
dec
ss
add
add
inc
pop
pop
inc
sub
enter
inc
sbb
cmp
and
mov
fadd
cmps
xor
wrmsr
add
daa
dec
xlat
in
mov
mov
xchg
pop
cmp
or
xchg
(bad)
repnz
adc
mov
mov
xchg
ins
sbb
sub
dec
pop
pop
pop
test
pop
and
mov
jle
pusha
inc
xchg
retf
push
and
pop
cmp
pop
xchg
test
sub
mov
iret
inc
inc
dec
daa
leave
mov
mov
jb
(bad)
fsub
adc
pop
js
cmp
enter
pop
fwait
sub
jle
push
mov
push
xchg
sysret
or
dec
cmp
and
(bad)
dec
pop
sub
aam
sub
push
adc
mov
mov
or
xchg
mov
fimul
enter
fisubr
ins
in
js
add
mov
push
sbb
cld
(bad)
push
or
xchg
outs
mov
ror
push
inc
inc
cmp
pop
and
cmp
or
mov
sbb
mov
out
sahf
inc
jge
dec
stc
lahf
imul
mov
sbb
mov
push
mov
inc
dec
cmp
adc
pop
mov
sub
adc
push
(bad)
add
pop
retf
nop
popa
jmp
mov
lea
xchg
sub
and
test
ret
imul
xor
rcr
stos
add
and
push
jecxz
adc
lea
dec
cwde
dec
jno
call
rcl
sub
daa
fucom
mov
pop
jmp
cmps
rol
sbb
std
jns
mov
mov
push
call
jle
add
xchg
aaa
or
add
test
push
aad
pushf
adc
arpl
int3
mov
cmps
add
mov
in
inc
pop
in
jecxz
aas
imul
jge
fst
or
arpl
gs
cmc
ret
ins
jle
in
xor
sub
dec
sbb
ror
push
push
or
mov
outs
popa
jno
mov
or
push
jns
xchg
mov
clc
(bad)
popa
xchg
and
fidivr
xchg
pop
jb
xor
jo
arpl
inc
add
popa
sub
lea
cmp
or
fdiv
adc
xor
adc
out
sub
mov
mov
adc
pop
xor
aam
pop
mov
aas
and
jae
sahf
rcl
daa
pusha
ret
cwde
dec
movs
lods
xchg
fistp
ins
push
mov
pop
jne
push
test
test
mov
lock
adc
xchg
pop
inc
mov
mov
sbb
dec
pop
and
xchg
or
sub
and
adc
bound
push
dec
jmp
xlat
ins
lods
sbb
and
pop
int
or
imul
je
cs
push
sbb
mov
pop
xor
mov
sub
cmp
jo
les
mov
cmp
sbb
rcr
jmp
push
cmc
push
ins
sti
fwait
xchg
xchg
sbb
inc
je
inc
je
ret
retf
js
pop
jl
xor
jg
push
aas
popa
pop
and
inc
test
movs
sbb
clc
xor
inc
je
jno
and
popf
adc
fs
loopne
call
adc
cmp
ins
dec
add
icebp
add
pop
or
xor
mov
sbb
sbb
adc
je
push
jmp
out
add
jae
cmps
fmul
(bad)
daa
pop
lods
mov
movs
add
and
in
shr
sbb
xor
mov
or
or
and
aaa
inc
mov
cmps
xchg
push
mov
and
push
(bad)
xor
sub
pop
dec
pop
or
push
pop
das
push
jmp
jge
and
fmul
push
sbb
nop
xchg
dec
add
fs
mov
push
loopne
pop
cs
daa
fmul
push
mov
pop
lds
inc
sub
add
ret
fs
or
inc
and
sub
cmps
sub
repnz
add
jmp
adc
stc
imul
add
add
movs
sbb
pushf
dec
in
pusha
aam
sub
(bad)
mov
pop
rol
out
movs
rol
inc
sub
jae
dec
pcmpeqd
aaa
in
int3
push
test
jb
in
cwde
clc
dec
jae
pop
inc
icebp
cmp
cmp
jne
or
pop
or
sbb
cmp
js
adc
dec
and
fcomp
pop
push
adc
xor
ins
cmp
lock
cmp
inc
push
xchg
popa
bound
into
sahf
adc
lahf
push
in
in
iret
sub
cmp
je
loopne
loopne
fcom
xor
pop
cmp
repz
add
adc
sub
ins
xor
xor
movs
cbw
les
push
cmp
xchg
mov
mov
sub
xor
(bad)
out
sub
leave
inc
or
pop
(bad)
push
mov
test
sub
loope
mov
xchg
mov
fdivr
pop
add
sub
cmps
imul
cld
inc
fdivr
fdiv
push
fsub
inc
dec
les
add
leave
pop
push
aam
xchg
in
addr16
rcr
int3
mov
xchg
int3
or
nop
xchg
dec
enter
add
jns
les
call
or
push
cld
pop
mov
or
and
js
sbb
cs
xchg
nop
les
mov
pop
mov
cmp
cmps
mov
adc
leave
inc
add
fs
adc
mov
bound
mov
cmc
movs
test
push
mov
dec
test
pop
rcr
fcom
pop
scas
sub
je
jmp
cmp
outs
mov
sbb
js
xchg
sbb
cmp
loope
jl
jmp
lods
je
rcr
xchg
dec
leave
mov
mov
fwait
test
addr16
out
mov
dec
aaa
in
aaa
ss
test
ss
lods
mov
and
push
add
push
pop
xor
dec
in
(bad)
adc
arpl
mov
stos
cmp
js
sbb
xlat
add
add
outs
loopne
call
jmp
pusha
push
cmps
sahf
inc
mov
icebp
test
cli
inc
mov
xchg
dec
cmp
cmp
mov
leave
iret
push
xor
adc
pop
and
in
sti
cmp
imul
add
adc
dec
mov
in
test
js
pusha
jmp
add
add
mov
outs
movs
sbb
lea
ret
arpl
das
add
arpl
lods
aaa
and
imul
test
pop
das
or
xor
jne
sbb
cmp
inc
nop
inc
dec
jmp
cmps
sbb
pop
mov
xchg
in
iret
in
and
(bad)
sbb
add
dec
inc
cmps
rol
push
add
lock
jbe
cmps
and
out
ss
inc
loope
mov
dec
xchg
pop
adc
mov
add
mov
and
sbb
xchg
inc
and
das
jge
mov
mov
fcom
mov
xor
mov
mov
jl
push
in
fst
sub
js
sub
push
push
popa
shl
mov
mov
jne
fsubr
in
and
pop
js
scas
pop
cmp
and
mov
lods
clc
pop
iret
je
lock
jne
add
adc
cmc
sbb
fcmovnb
popf
cmp
out
shr
dec
or
lods
int
int
je
nop
test
cmp
sbb
mov
rcl
sbb
rcr
sub
cli
jns
loope
ja
popa
push
cwde
push
mov
and
mov
add
repz
and
jge
sbb
int
cmps
dec
push
pop
add
ror
add
lea
push
adc
push
push
rol
into
je
test
in
jne
xor
adc
sub
cmp
and
inc
jbe
pop
shr
and
pop
movs
add
add
mov
dec
adc
iret
mov
loop
push
pop
and
cld
hlt
sub
imul
test
scas
inc
and
dec
div
xchg
jno
and
add
or
repnz
adc
sahf
jo
inc
jno
pop
and
add
scas
dec
test
and
adc
push
pop
adc
aaa
retf
cwde
xlat
mov
inc
pop
sbb
dec
adc
jo
adc
push
mov
in
jbe
pop
fsubp
pusha
mov
push
shr
aam
cwde
or
xor
movs
sar
ins
or
cmp
bound
xor
inc
imul
adc
mov
ss
cmp
test
in
sbb
add
inc
jne
popa
rcl
(bad)
dec
fiadd
repnz
nop
sbb
sub
add
and
cld
add
inc
add
aam
mov
push
aam
xor
pop
or
dec
repz
mov
sub
js
inc
and
adc
inc
ret
xchg
pop
push
adc
mov
or
bound
hlt
pop
pop
adc
sar
enter
inc
add
or
aaa
pop
dec
clc
pop
jnp
mov
push
lods
or
jl
pop
les
ss
sub
mov
in
mov
addr16
pop
add
pusha
push
or
cwde
or
push
inc
push
stos
inc
push
or
pop
xor
or
or
or
add
bound
mov
xchg
dec
js
sub
test
call
lods
adc
adc
jl
or
test
je
sbb
cmps
jg
inc
add
inc
mov
or
xor
jb
test
outs
sahf
pushf
pop
pushf
mov
lods
dec
and
xchg
rol
or
pushw
test
xor
or
or
sbb
or
sub
retf
push
pop
sub
popa
lods
test
imul
and
and
mov
xchg
xor
mov
mov
xlat
aas
xchg
cmp
jno
push
pop
and
(bad)
idiv
dec
sub
inc
xchg
push
adc
jae
addr16
pop
xchg
pop
xor
xor
iret
or
mov
das
rcl
mov
inc
imul
pop
mov
mov
outs
add
add
push
adc
xor
and
push
dec
loope
stos
aam
mov
xor
mov
mov
ds
retf
adc
cmp
add
jmp
mov
xor
or
dec
call
rol
loope
jecxz
ss
nop
mov
cmp
hlt
fild
jl
sub
or
pop
cmp
pop
mov
scas
mov
mov
pop
or
mov
xor
cmp
icebp
retf
or
sub
clc
int3
inc
inc
cmp
fiadd
clc
repnz
mov
adc
cwde
dec
cmps
sub
ins
dec
sbb
jo
nop
mov
or
inc
mov
in
dec
and
push
retf
lods
mov
and
add
push
pop
xchg
xchg
mov
ss
adc
push
loopne
out
xchg
cld
pop
add
add
add
scas
ret
stc
sbb
sub
mov
mov
in
adc
inc
rol
inc
pop
clc
or
cmps
pop
cmp
lea
movs
les
sbb
je
dec
or
adc
rcl
or
ins
(bad)
pop
cwde
push
sbb
add
ret
push
push
sbb
xor
fwait
jecxz
dec
push
ss
add
jno
shr
mov
sbb
cmps
call
sbb
cld
sbb
mov
sub
ja
sbb
jo
sub
inc
cmps
or
jg
inc
outs
popa
mov
xlat
les
dec
or
test
jl
jp
leave
jno
mov
pusha
(bad)
mov
pop
pop
mov
sbb
shl
adc
inc
adc
and
add
gs
enter
je
inc
add
and
dec
ja
(bad)
cld
fimul
inc
cmps
sub
adc
push
cmp
aam
lea
adc
xor
xchg
mov
imul
add
push
add
leave
push
cmp
add
retf
sbb
and
sahf
daa
push
jl
sub
sbb
cmps
out
test
pop
cdq
aaa
jb
push
fld
mov
mov
jl
and
and
sub
nop
dec
lock
ret
inc
ss
test
pop
xchg
xlat
clc
ss
and
call
dec
arpl
in
mov
ss
mov
cdq
add
or
jnp
les
stos
push
aam
gs
out
pusha
mov
div
sub
mov
jno
js
xor
xor
xchg
cmps
lock
push
mov
push
sub
int3
sub
add
es
cmps
pop
lea
pop
mov
sti
fld
shl
movs
(bad)
enter
inc
mov
or
cmp
xor
pusha
lods
dec
test
push
adc
mov
mul
daa
loopne
movs
in
loopne
dec
call
lea
jl
add
pop
outs
mov
add
or
adc
inc
mov
scas
mov
sub
and
add
or
cmp
adc
xchg
or
xchg
and
mov
(bad)
lods
add
mov
icebp
out
mov
sbb
add
loope
push
iret
sub
cmp
or
cli
xchg
and
add
mov
cmps
test
push
ret
dec
xchg
mov
cmp
sub
and
inc
lods
xor
inc
or
loopne
pop
fcom
clc
ret
rcl
sbb
or
dec
inc
xchg
add
and
in
xor
mov
(bad)
jo
hlt
retf
into
jmp
daa
mov
into
das
fistp
dec
adc
retf
popa
or
dec
inc
aad
mov
fs
mov
ror
ret
push
mov
fsub
mov
cmc
add
jo
sbb
add
in
out
add
sbb
pop
pop
sub
je
adc
mov
adc
push
adc
outs
add
xor
add
and
inc
mov
mov
mov
bound
cdq
in
mov
jl
add
pop
shr
push
sbb
dec
push
(bad)
aam
(bad)
xor
sbb
and
ss
pop
movs
add
(bad)
mov
mov
push
xchg
dec
adc
(bad)
and
and
lock
js
push
imul
dec
pop
and
and
clc
push
jle
fmul
jne
imul
adc
std
(bad)
jmp
xchg
jmp
jecxz
pop
fcmovne
dec
call
sbb
push
ins
sub
mov
mov
pusha
pop
les
xchg
pusha
fist
xor
adc
sub
outs
or
movs
ds
mov
sub
inc
xchg
push
xor
xor
sbb
jecxz
out
xacquire
fs
sbb
xchg
or
adc
jb
sbb
push
adc
jae
inc
xor
scas
sbb
mov
sub
lea
or
cmps
sub
loope
jbe
jae
mov
sub
pop
jecxz
lods
aaa
pushf
pop
xchg
or
mov
jns
scas
and
add
sbb
pop
shl
sbb
arpl
fstp
xor
or
icebp
stos
lds
inc
jmp
ffreep
inc
imul
and
adc
push
pusha
idiv
adc
ja
push
mov
test
dec
pop
sbb
push
js
test
js
rcl
dec
cmps
test
sub
mov
sbb
sub
add
push
or
aam
dec
lods
ret
pop
fbld
add
or
inc
pusha
aad
test
jg
dec
mov
icebp
mov
mov
xchg
sub
push
mov
pop
sbb
or
jge
sbb
push
or
and
or
movzx
jg
and
push
or
scas
and
scas
inc
inc
dec
pop
das
fadd
mov
cld
aaa
or
or
inc
xor
hlt
lea
sub
pop
dec
pop
sbb
dec
rol
add
(bad)
and
lock
(bad)
push
loop
jnp
imul
and
sub
stos
lock
push
mov
xor
hlt
cmp
jnp
jmp
adc
cmp
repnz
xor
pop
add
sti
add
sub
cmp
cld
dec
xor
mov
push
enter
xor
pop
xchg
fwait
lahf
mov
sbb
ds
mov
dec
pop
pusha
mov
call
mov
dec
fbstp
fimul
mov
cmp
sahf
inc
inc
xchg
in
pop
inc
icebp
sbb
rol
jmp
pop
xchg
(bad)
out
mov
fstp
add
stos
sar
inc
in
test
lahf
pop
rol
and
cmps
jo
cwde
shl
mov
in
call
enter
scas
pop
lods
adc
adc
les
sbb
cdq
shl
pop
adc
fnstsw
mov
movs
inc
call
test
mov
test
cmps
push
(bad)
pop
mov
(bad)
or
mov
jecxz
or
mov
dec
or
add
add
mov
adc
xchg
sub
movs
nop
xchg
mov
out
dec
adc
stc
enter
mov
in
stos
cmp
dec
push
dec
stos
fmul
cdq
add
mov
les
out
xchg
adc
daa
retf
push
mov
and
cmp
xor
aad
ins
jnp
outs
in
jmp
and
jns
mov
and
cdq
rcr
push
xor
sbb
mov
mov
fwait
adc
sbb
sbb
inc
dec
push
xor
punpcklwd
inc
lods
jmp
outs
imul
or
and
sub
jle
adc
mov
out
push
pushf
jbe
popa
mov
lea
cmp
daa
loopne
xor
push
sbb
sbb
or
js
aaa
fisubr
add
and
or
sbb
adc
mov
xor
xchg
mov
and
daa
or
or
inc
sbb
not
pushf
sbb
push
into
cmp
dec
and
add
dec
jo
daa
and
add
ins
push
mov
aas
mov
push
enter
push
loop
pop
jno
das
xlat
lea
sbb
ins
jnp
outs
sub
je
pop
sbb
cmp
or
test
push
mov
xchg
dec
push
sub
or
arpl
pop
cmps
push
jle
xor
sbb
adc
std
sub
xor
rol
jne
cwde
dec
jmp
xchg
out
(bad)
xchg
xlat
add
xor
ja
lock
clc
cmp
(bad)
movs
mov
and
cmp
icebp
cmps
call
ret
in
fdivr
ss
or
or
sbb
jo
add
mov
sbb
pop
stos
add
and
cdq
in
add
pop
loope
inc
push
mov
xchg
push
push
xchg
inc
jns
(bad)
test
pop
adc
or
cs
push
jae
(bad)
xchg
push
mov
jae
add
out
and
mov
push
(bad)
mov
adc
imul
sbb
push
ror
mov
ret
sbb
adc
rcr
inc
inc
(bad)
sbb
or
xlat
and
adc
mov
xchg
sbb
adc
inc
mov
ds
jl
adc
sub
or
ja
out
lods
xchg
outs
jnp
movs
adc
and
scas
and
mov
adc
pop
imul
cwde
sbb
je
je
cmova
fldcw
cmp
ret
int3
cs
adc
push
add
and
test
pop
neg
lods
sbb
test
adc
adc
and
arpl
and
push
std
nop
fadd
nop
push
pop
and
xor
inc
scas
sub
(bad)
mov
movs
mov
push
fcmovnb
push
sbb
or
enter
dec
pop
dec
add
mov
rcl
fsub
xchg
xor
add
pop
jl
add
mov
jb
mov
push
mov
sub
xor
adc
(bad)
fs
mov
fs
jl
cmps
fidiv
sub
xor
pop
test
or
adc
push
repnz
inc
and
bound
mov
iret
rcl
fcomp
mov
mov
adc
loopne
sub
mov
dec
cmp
lock
cmp
or
xchg
clc
sbb
call
(bad)
cmp
xchg
retf
xchg
mov
xor
xor
rol
inc
stos
pushf
add
pop
movs
push
sbb
cmps
jmp
xchg
aas
movs
sbb
leave
jmp
add
adc
jmp
icebp
cmp
in
pop
pop
cs
and
adc
mov
mov
push
add
out
push
and
push
push
dec
mov
outs
popa
fs
addr16
add
dec
add
(bad)
scas
adc
jno
and
out
dec
inc
push
cmp
mov
loop
aad
leave
rcl
add
xchg
arpl
fidivr
or
mov
push
jo
test
test
aam
mov
mov
adc
cs
xchg
sbb
sar
daa
xchg
or
xchg
mov
retf
push
repz
dec
push
data16
out
jno
and
pop
xor
dec
inc
(bad)
sbb
jno
inc
add
inc
std
je
dec
lock
daa
lock
add
push
arpl
sbb
xchg
or
jmp
and
inc
mov
aas
xor
or
or
outs
adc
add
lods
fisttp
push
push
in
aaa
mov
sub
add
push
push
ja
pop
cs
sbb
inc
cmp
xor
and
adc
js
inc
inc
inc
jl
test
mov
xor
js
push
adc
inc
jo
xor
and
mov
sbb
mov
mov
pop
(bad)
nop
and
lea
(bad)
not
les
or
test
mov
mov
push
mov
or
out
xor
dec
pop
push
xchg
cmp
inc
lahf
jle
aaa
leave
mov
xchg
jo
jnp
pop
lea
scas
xor
sub
xchg
sub
sbb
xor
ud1
cmp
out
ins
jb
frstorw
movs
je
sub
pop
jl
mov
add
stos
je
mov
pop
push
and
js
mov
mov
mov
dec
add
loopne
lahf
ja
pop
sbb
sbb
sub
sub
or
pop
mov
cmp
mov
cmp
inc
cmp
loope
mov
sub
sub
sbb
jp
push
shr
cs
dec
push
dec
dec
and
pop
fbstp
inc
and
pusha
adc
mov
sub
mov
push
jmp
loopne
rcl
sub
xchg
sub
aas
in
or
or
popf
mov
jb
das
inc
and
cmp
push
xchg
push
mov
stc
and
in
pop
mov
mov
cmps
lods
xchg
loopne
add
mov
add
inc
das
dec
push
rcr
jecxz
sub
or
out
sub
add
pop
adc
or
mov
retf
mov
hlt
fs
test
xor
mov
test
or
add
and
ins
leave
test
aas
xchg
push
sbb
shr
rcl
adc
imul
ss
mov
xchg
xor
and
mov
push
stos
and
punpckhwd
xchg
mov
jb
mov
fwait
xor
push
or
mov
mov
(bad)
int
sub
add
not
xchg
pusha
push
test
jne
cmp
addr16
inc
dec
cs
push
ss
pop
cmp
aas
pop
or
adc
adc
mov
mov
push
cmps
and
loopne
pop
cdq
mov
call
inc
test
add
jae
cs
or
sub
stos
and
fsub
fdiv
int
dec
push
inc
out
cmps
cmc
ret
dec
jmp
aam
fbld
add
sti
inc
fsubr
aaa
xlat
leave
outs
inc
mov
ret
jle
and
pop
xchg
xor
jo
adc
and
sbb
fdivrp
jne
inc
cmp
sti
fsubr
pop
adc
inc
dec
cwde
and
or
add
nop
xor
leave
or
popf
and
and
rol
ds
cmp
dec
or
pop
popa
adc
xchg
inc
inc
add
mov
sub
mov
shr
test
add
leave
push
add
push
icebp
or
dec
add
jnp
dec
repnz
sbb
adc
test
or
test
cmp
or
sbb
and
add
xor
rcr
cmp
int3
cmps
jecxz
xchg
adc
ds
fistp
xchg
and
std
add
add
mov
dec
ja
stos
add
mov
aas
sbb
nop
push
add
popa
pusha
or
aam
jp
pop
inc
and
sti
inc
or
sbb
dec
inc
xor
inc
cdq
add
pop
popa
nop
aaa
cmps
xchg
xor
pop
mov
dec
mov
out
inc
jmp
jb
scas
sub
nop
(bad)
cmp
sti
dec
enter
adc
stos
ins
mov
add
xor
adc
cmp
(bad)
rep
not
inc
arpl
or
mov
hlt
sub
mov
scas
or
inc
stos
sub
mov
sub
push
call
mov
repnz
xor
nop
cmp
mov
push
lods
mov
push
inc
mov
add
jb
ror
fst
aam
jb
or
retf
aaa
rol
inc
popa
loope
sub
mov
adc
cmp
ins
test
loope
xor
outs
aad
cmp
daa
mov
xchg
sbb
outs
or
and
sub
mov
nop
mov
sub
test
sar
clc
hlt
cmovnp
mov
lahf
add
nop
les
les
add
call
cdq
pop
sbb
mov
and
push
inc
in
cmp
int3
aam
sbb
enter
xor
sbb
pop
shl
cmp
sbb
jo
adc
stos
fcom
in
xor
mov
hlt
shr
not
fiadd
enter
aam
sub
loopne
scas
aaa
sub
mov
pop
xchg
pusha
push
sbb
xor
adc
adc
xchg
xor
xchg
iret
mov
and
adc
jns
pop
sub
in
rcr
(bad)
pop
in
(bad)
mov
maxps
popa
ret
dec
call
inc
out
mov
xor
inc
xor
push
adc
xor
cmp
nop
cmp
adc
jns
pop
ss
xchg
pop
stos
sbb
pusha
scas
push
aam
fstp
ret
mov
dec
sub
jo
or
mov
sar
aad
cmp
sbb
cmps
jne
cmp
in
pusha
pusha
mov
(bad)
in
pop
popf
arpl
loopne
inc
xchg
in
inc
jns
or
push
inc
xchg
fbld
pop
scas
stos
pop
ins
add
pop
mov
and
push
jae
sub
js
ret
js
mov
dec
xchg
mov
(bad)
pushf
sbb
xchg
push
adc
add
xchg
add
aas
test
lock
add
add
(bad)
and
ret
and
mov
mov
pop
and
pop
xchg
fdiv
adc
xor
test
mov
inc
loop
sahf
add
push
mov
arpl
push
add
setbe
jp
jmp
and
cwde
push
repz
push
loop
xchg
imul
repnz
sub
xchg
sub
fmul
mov
int3
pop
ins
push
sbb
or
ins
ins
jl
xlat
jmp
mov
mov
je
push
mov
xor
imul
sbb
jl
dec
or
jnp
jo
icebp
sbb
je
mov
inc
mov
mov
repz
push
xchg
sub
das
dec
pop
sbb
and
pop
xor
fcom
inc
sub
and
mov
aas
push
mov
fs
push
enter
rcr
rol
outs
aam
sbb
aam
inc
jb
rcr
add
fadd
jmp
cld
push
xchg
inc
mov
arpl
inc
(bad)
and
xor
nop
dec
fsubrp
mov
mov
or
pop
xchg
or
pop
out
fwait
adc
imul
or
push
xor
add
adc
movs
leave
xchg
adc
add
add
and
movs
outs
test
stos
mov
cmps
and
push
(bad)
push
adc
adc
hlt
ret
jl
pushf
clc
xor
lods
mov
xchg
cdq
ds
xchg
adc
push
int3
mov
cmps
mov
test
loopne
sbb
clc
sub
sar
sbb
in
mov
and
inc
add
rcl
std
push
xor
pop
dec
vmwrite
inc
mov
xchg
or
bound
dec
ds
or
xchg
xor
daa
inc
mov
in
and
dec
or
aas
xor
pop
add
fcmovnu
ins
xlat
ror
mov
test
or
sti
jg
adc
mov
xchg
jno
lahf
mov
or
ret
adc
jae
push
pusha
loopne
or
jge
adc
or
jnp
add
push
inc
(bad)
(bad)
fld
aaa
adc
add
pop
or
cmps
movs
in
lds
jae
mov
ss
pextrw
add
ja
std
jg
int3
sub
inc
jecxz
cmp
stos
mov
add
loopne
fist
out
adc
dec
(bad)
fmul
rcr
pusha
retf
dec
sub
fcmovnu
rol
mov
pop
mov
jb
pop
ja
and
movs
daa
movs
add
test
pusha
xchg
mov
(bad)
push
and
push
imul
jno
cmp
mov
clc
out
or
mov
sbb
cmp
ror
push
pop
clc
sub
and
retf
pop
pop
iret
fadd
or
sbb
push
and
dec
sbb
aam
mov
or
gs
or
inc
inc
shl
adc
mov
and
jnp
and
call
sub
into
movs
movs
imul
or
xchg
inc
mov
jmp
inc
inc
cli
add
in
mov
mov
jg
stos
add
pop
scas
test
adc
repnz
hlt
or
pop
enter
jmp
call
mov
sti
adc
xor
or
inc
fisttp
retf
adc
sub
jb
add
sub
pop
idiv
push
jb
add
or
cmp
fdivr
stc
inc
xor
std
sbb
add
fwait
call
and
fiadd
mov
popf
fld
push
fistp
adc
jmp
sub
xor
jmp
out
popa
jmp
mov
adc
add
cwde
pop
jae
sub
sbb
dec
iret
sub
aam
adc
or
cmp
jecxz
mov
cmp
rcl
scas
push
mov
add
ins
add
hlt
(bad)
pop
(bad)
hlt
dec
ss
push
sub
add
mov
xor
mov
enter
add
push
pop
mov
aaa
push
mov
or
cmps
lods
mov
jmp
test
dec
or
xchg
jb
inc
daa
leave
and
rcl
and
pop
push
or
(bad)
pop
(bad)
jmp
ret
(bad)
in
sbb
fnstsw
jae
sbb
mov
cmp
ja
jmp
leave
gs
xor
dec
hlt
in
lock
fld
leave
in
ret
xor
ret
cmps
inc
in
inc
sub
daa
add
push
or
inc
popa
or
dec
in
loopne
test
jae
push
mov
cmc
(bad)
cmp
push
mov
sar
jge
ret
pusha
mov
and
pop
rcl
imul
clc
fs
dec
in
or
dec
test
push
in
sbb
enter
sahf
adc
rol
pop
add
icebp
push
push
arpl
push
add
xlat
xchg
sub
inc
call
mov
mov
and
or
test
ret
in
sbb
dec
inc
push
mov
mov
inc
js
and
inc
jne
push
fadd
leave
mov
in
or
cmp
mov
or
jb
sbb
add
add
std
xor
das
add
retf
pop
addr16
cmp
sbb
mov
mov
add
push
je
pop
xchg
sub
fmul
add
dec
xor
das
in
lds
aam
call
into
or
enter
movs
pop
nop
data16
stos
or
or
sbb
push
add
imul
push
sbb
or
(bad)
out
or
xchg
out
cmp
push
nop
xchg
fsub
mov
jb
cmps
push
stc
movs
cmp
nop
xchg
or
in
fld
inc
push
in
mov
mov
fs
cs
fcom
clc
aam
fbld
push
xchg
lahf
inc
lods
cmp
mov
inc
dec
dec
mov
inc
leave
xchg
mov
mov
fmul
cmp
xor
hlt
push
or
dec
dec
push
or
or
loopne
adc
inc
mov
add
shl
sub
adc
arpl
call
in
sub
dec
in
sbb
xor
cmps
dec
fsubr
lods
fcomp
inc
fiadd
jne
inc
fadd
jae
stc
lds
ins
aam
sar
outs
lock
push
ror
push
push
xchg
pop
test
dec
aaa
fmul
dec
mov
add
push
push
imul
test
add
sahf
fisttp
jne
out
in
push
enter
and
mov
jno
sahf
shl
add
and
and
test
mov
lods
adc
push
pop
adc
xchg
pop
xor
enter
or
mov
mov
sbb
mov
pop
shr
add
and
push
sbb
dec
mov
addr16
dec
or
call
push
pop
hlt
cmp
cmp
stos
cmp
xchg
fadd
push
mov
in
and
ds
pop
dec
jle
mov
push
pop
vmovntps
and
inc
pusha
add
mov
pop
pop
pop
js
mov
ins
pop
inc
add
jl
lock
mov
test
sti
movs
clc
xchg
les
adc
add
dec
pop
aaa
push
jne
push
xchg
mov
push
in
sbb
push
or
ret
xor
inc
lea
add
test
push
adc
pop
mov
ins
imul
adc
retf
lahf
adc
fist
sub
jmp
sub
es
xchg
dec
inc
clc
push
fisttp
(bad)
mov
mov
scas
and
or
ja
imul
ja
mov
xor
adc
add
sbb
outs
(bad)
fcomi
sbb
lods
in
mov
xchg
pop
call
inc
jmp
fsub
cmp
add
adc
imul
addr16
aam
sbb
rcr
fmul
sub
and
enter
inc
or
mov
(bad)
push
test
dec
dec
inc
mov
mov
cmp
and
and
(bad)
dec
adc
jnp
test
add
dec
dec
inc
inc
dec
dec
inc
and
cmp
lds
push
dec
ins
inc
inc
sti
aad
mov
das
bound
push
dec
inc
(bad)
adc
fadd
or
sub
adc
hlt
inc
sub
test
mov
movs
aam
pop
leave
pop
adc
shl
push
enter
jbe
imul
jl
rol
les
fs
call
inc
shl
inc
push
mov
mov
cmps
iret
loope
or
popa
movs
inc
push
pop
loopne
jge
fcomp
sbb
ret
sar
lock
sub
enter
adc
dec
add
loopne
ret
push
mov
sbb
sub
pop
pop
shl
rcr
pusha
fiadd
push
pop
inc
adc
fmul
adc
sub
jl
(bad)
push
(bad)
adc
aaa
adc
outs
sbb
outs
jbe
pop
mov
jmp
add
loopne
outs
dec
cld
repnz
clc
scas
test
add
test
jmp
mov
je
pop
mov
leave
inc
and
mov
add
jg
cmp
mov
je
push
ja
xor
inc
adc
inc
add
pop
ror
mov
or
jecxz
repnz
adc
add
div
inc
mov
and
fstp
add
push
aaa
pop
nop
mov
icebp
stc
cmp
or
adc
dec
mov
aaa
push
lea
fmul
adc
or
cmp
cs
sub
and
pop
daa
into
lods
mov
add
test
test
out
mov
sbb
mov
scas
pop
hlt
lock
sub
mov
jae
sub
ffree
push
aas
sub
sbb
loopne
xchg
mov
les
das
adc
fcmove
mov
or
mov
mov
or
or
bound
sbb
add
clc
mov
add
push
pushf
pusha
outs
dec
ror
data16
popf
adc
xor
inc
adc
adc
jne
fstp
mov
rol
cdq
add
pop
pop
leave
inc
cmp
sbb
add
outs
pop
js
add
imul
xor
in
sbb
pop
mov
ror
pop
push
mov
dec
sub
mov
inc
mov
push
hlt
adc
add
pop
test
jnp
aad
call
mov
pop
add
mov
or
adc
retf
in
or
int3
cmp
call
add
test
int
ja
xchg
scas
cmp
in
fmul
aaa
stc
or
xchg
call
ss
enter
es
and
jp
call
out
into
jnp
sbb
and
pop
adc
out
pop
aaa
ja
imul
aam
sahf
js
jne
dec
jg
movs
inc
fisub
adc
ins
shl
fwait
add
mov
sub
test
jnp
leave
aad
inc
sub
or
lods
cwde
sub
pop
dec
cmp
mov
xchg
mov
dec
jg
add
xor
jg
dec
add
fbstp
jae
aam
popa
xchg
sub
push
or
(bad)
push
mov
sbb
jb
(bad)
dec
xor
(bad)
pop
mov
mov
or
and
pop
pop
mov
dec
mov
outs
iret
mov
add
cs
fdiv
push
iret
adc
dec
add
jl
out
movs
pop
pop
xor
push
mov
sub
or
std
dec
test
(bad)
push
dec
push
add
mov
mov
mov
js
(bad)
sub
mov
push
loopne
bound
push
inc
rcl
mov
in
repz
in
arpl
fs
popw
sub
fs
push
jno
addr16
fidiv
es
push
dec
or
mov
outs
xlat
add
inc
dec
(bad)
mov
and
mov
int
inc
push
mov
mov
lods
push
or
cwde
push
ins
pop
test
pop
cmp
push
int3
push
pushf
push
xchg
add
push
or
mov
cmp
push
sub
sbb
imul
lea
dec
mov
enter
mov
inc
dec
lods
or
daa
ins
xchg
test
nop
xchg
sbb
mov
xchg
popa
push
gs
rcr
inc
daa
mov
(bad)
push
cld
test
jg
and
add
xor
cmp
add
mov
add
adc
and
sub
cwde
add
jmp
stos
scas
ret
and
and
and
and
cld
out
mov
mov
mov
xor
jns
cwde
and
jbe
and
inc
mov
adc
sbb
or
in
jb
mov
jo
push
pusha
shl
jle
lock
pop
cmp
and
je
fs
ret
bound
mov
out
rcr
xor
ins
mov
pop
sub
mov
and
add
mov
call
mov
add
movs
pop
jmp
mov
or
pop
ins
adc
ror
in
xchg
inc
jecxz
dec
ret
adc
xchg
inc
ins
xor
ss
cmp
jne
test
adc
movs
push
add
dec
repz
xchg
loopne
loope
push
xchg
push
ss
cmp
or
jl
enter
fnop
rol
mov
(bad)
jne
lods
mov
push
pop
adc
adc
push
fisub
mov
add
xor
xchg
xchg
jbe
(bad)
js
pusha
xchg
inc
sar
pop
inc
jmp
dec
stos
lods
jo
fwait
pop
outs
push
mov
mov
je
fdiv
mov
cmp
xor
inc
pop
push
inc
pop
push
xchg
inc
scas
aad
mov
adc
push
stc
adc
jmp
(bad)
mov
dec
fistp
or
(bad)
stos
xor
and
adc
out
add
nop
ret
push
aaa
add
sar
popa
cwde
pusha
cmp
or
ins
cmp
adc
xor
or
add
lds
pop
sbb
add
hlt
push
push
or
or
cmp
fwait
xor
add
dec
call
pop
inc
add
or
and
je
mov
xor
fs
push
or
sub
inc
push
in
out
dec
leave
mov
or
sbb
sbb
sar
inc
mov
mov
mov
adc
leave
(bad)
in
and
dec
jmp
dec
dec
dec
fsubr
int
push
nop
pop
sbb
pop
mov
sub
dec
fnstcw
dec
das
cmps
arpl
cs
stos
adc
in
add
adc
rcl
test
or
adc
sub
push
adc
cmc
popf
mov
and
jne
xor
jae
out
pop
pop
test
push
sub
cmc
dec
das
(bad)
neg
xor
cwde
sbb
mov
or
jmp
stos
mov
loopne
mov
int
pop
pushf
push
mov
sub
clc
sub
ins
movntq
out
into
dec
inc
arpl
imul
in
xor
and
xor
mov
push
jl
add
jmp
and
sbb
jge
loope
push
jns
adc
movs
arpl
and
cmp
and
iret
loope
test
mov
pop
sbb
jl
or
push
clc
inc
lds
adc
inc
inc
mov
mov
xor
inc
mov
mov
cld
dec
mov
push
popf
push
loop
popa
dec
stos
imul
xchg
adc
adc
je
or
pop
icebp
imul
dec
mov
in
add
cmps
shr
pop
dec
shl
(bad)
scas
sub
xchg
ja
out
jecxz
mov
cmp
mov
hlt
inc
adc
add
push
inc
adc
add
pop
leave
out
in
mov
pop
xor
mov
cmp
push
pop
inc
dec
inc
and
rcr
xor
sub
and
add
add
stc
or
push
and
js
ret
shr
or
stos
out
pop
daa
jg
or
shr
push
jo
ret
jbe
shl
or
adc
(bad)
or
test
lock
mov
shl
mov
adc
sbb
dec
fwait
adc
pop
sbb
push
mov
sub
jle
leave
mov
cmp
or
cmp
xlat
mov
test
dec
or
add
loope
sbb
in
test
adc
sbb
popf
push
pop
out
adc
aam
push
das
and
adc
sbb
mov
outs
xor
inc
or
push
and
rcr
mov
shl
iret
jno
fwait
test
add
outs
pop
and
sub
das
jbe
pop
aaa
mov
test
pop
mov
mov
aad
mov
add
push
inc
pop
cs
fs
loopne
sahf
popa
pusha
loopne
fldenv
mov
test
pop
inc
dec
adc
ins
adc
sub
add
mov
push
repnz
mov
cmc
pop
push
dec
adc
inc
hlt
and
lock
dec
movs
xlat
push
pop
sub
push
push
fcmove
dec
lods
(bad)
call
scas
or
cwde
(bad)
shr
fst
loope
aam
es
aad
and
data16
sar
and
adc
inc
cmps
inc
inc
inc
cs
retf
imul
cmps
les
jo
mov
or
or
mov
jae
in
or
mov
and
sbb
popa
add
aad
shl
mov
xchg
xor
fwait
mov
ins
inc
ret
inc
xchg
dec
push
mov
inc
ins
or
jmp
data16
arpl
sub
fs
sub
and
imul
loopne
add
dec
or
mov
mov
mov
cmp
or
clc
test
ins
xchg
mov
dec
jnp
js
je
movs
jmp
adc
stos
ss
add
fsubr
or
test
imul
cmc
imul
push
xor
adc
(bad)
cmp
pop
and
push
ins
push
pop
xchg
sbb
mov
xchg
xor
or
pop
cmp
and
add
out
stos
and
push
or
pusha
adc
inc
test
je
inc
add
pop
or
lods
popa
pop
rcr
in
sub
push
bound
or
or
dec
sbb
hlt
stos
je
mov
inc
fisubr
xchg
addr16
xor
adc
test
int3
xor
xchg
push
imul
lods
xchg
inc
push
enter
stos
pop
and
movs
and
or
and
jmp
retf
arpl
popf
sub
je
shl
sbb
xchg
and
xchg
sbb
arpl
pop
push
pop
jo
xchg
ror
int3
sbb
inc
lock
cmps
jo
sbb
leave
pop
inc
adc
pop
jnp
adc
xor
lock
or
ins
nop
aaa
sub
inc
(bad)
or
jo
or
xchg
sbb
xchg
mov
sbb
ins
or
adc
lock
(bad)
mov
test
mov
xor
and
or
inc
adc
add
mov
rol
mov
and
xlat
sub
leave
sbb
das
push
popa
add
pop
shl
stos
(bad)
ja
add
outs
adc
pmulhuw
loope
js
mov
jl
cli
jmp
outs
aaa
imul
jae
cmps
and
mov
outs
fst
scas
adc
in
add
dec
add
sbb
lea
ret
es
jmp
dec
inc
nop
inc
shl
addr16
iret
imul
(bad)
adc
mov
iret
rcl
xchg
clc
cmc
adc
or
xchg
test
inc
pop
pop
sub
icebp
pop
sbb
(bad)
xchg
je
call
inc
push
cmps
repz
push
and
dec
lahf
xchg
or
shl
jae
rcl
in
ret
les
push
inc
js
mov
adc
xchg
ror
lds
dec
aas
inc
and
pusha
std
mov
jbe
std
adc
test
mov
dec
movs
rol
or
sahf
iret
pop
int
dec
dec
jo
cdq
xchg
adc
test
pop
and
push
and
and
lods
retf
or
popf
or
pop
push
sti
outs
and
fiadd
adc
mov
popf
adc
sbb
adc
adc
cmp
imul
push
pusha
dec
push
push
sub
mov
sub
jb
mov
mov
test
mov
imul
sbb
addr16
ins
(bad)
sbb
xchg
or
adc
in
pop
inc
out
jno
shl
bound
popa
xchg
mov
adc
add
and
shl
sub
sub
mov
mov
ja
fs
push
in
imul
inc
scas
push
and
test
stos
sub
jnp
jo
add
call
or
ss
jbe
ror
lahf
cmp
and
adc
push
in
jmp
ficom
sbb
sub
sub
loopne
sbb
cmp
pop
inc
fmul
inc
mov
fst
(bad)
jns
cmp
ja
mov
loopne
sbb
and
sar
mov
adc
addr16
(bad)
rcr
out
fmul
adc
mov
pop
ins
aaa
adc
xchg
push
test
push
or
mov
vmwrite
fisub
aam
test
sub
and
xchg
outs
retf
enter
call
or
mov
in
dec
das
mov
je
push
arpl
ja
test
(bad)
push
pop
push
pop
leave
add
mov
(bad)
jmp
or
mov
sbb
movs
push
mov
(bad)
jne
jo
add
or
mov
jae
cwde
xchg
mov
pusha
jl
mov
pushf
jl
jl
xor
out
mov
(bad)
outs
jl
fdiv
sub
inc
jns
adc
jno
jb
mov
lods
sbb
inc
fidivr
sub
inc
push
sbb
adc
sbb
or
add
sbb
ror
add
sub
mov
int
ret
or
cdq
cmp
or
hlt
adc
and
lock
ror
dec
sbb
mov
mov
add
mov
in
mov
push
cld
xor
dec
pop
sub
in
push
push
(bad)
jo
jl
pop
dec
push
jo
jp
mov
lods
outs
cdq
pop
cmp
xor
shl
inc
mov
cmp
lods
cwde
adc
mov
das
dec
hlt
and
mov
(bad)
push
push
push
pop
mov
lods
popa
sbb
stc
xor
pop
cmc
sti
cwde
or
fdiv
stos
imul
cwde
lock
dec
add
mov
dec
pop
mov
xor
mov
call
xchg
mov
push
mov
cmp
jle
sub
mov
jmp
sub
jg
adc
imul
and
fimul
adc
call
cli
fistp
fwait
push
sbb
movs
jno
mov
jns
and
xchg
mov
jno
nop
popa
xchg
mov
mov
sbb
xchg
add
shr
sbb
test
cmp
ret
cmps
dec
jae
arpl
mov
(bad)
jl
or
pusha
les
pop
jns
daa
mov
scas
(bad)
fadd
inc
pop
sub
addr16
dec
adc
popa
addr16
cmp
imul
mov
inc
stos
adc
int3
mov
add
sub
fs
(bad)
jnp
enter
push
mov
jge
or
push
loopne
dec
inc
inc
push
dec
add
icebp
mov
ins
int3
cmp
and
mov
add
or
sbb
sub
mov
xor
inc
out
mov
cmps
sbb
adc
loopne
sbb
rol
mov
cmp
push
mov
sbb
add
jl
nop
cmps
sub
xchg
inc
pop
shl
cmp
mov
mov
stc
pop
mov
mov
mov
das
sbb
pop
cmp
iret
mov
inc
movs
ror
mov
nop
mov
lahf
(bad)
and
sar
cmp
lahf
mov
mov
test
lahf
push
loop
sbb
mov
popa
jbe
daa
sub
ins
push
sub
cwde
je
or
cmp
sub
push
cmps
and
pop
outs
in
mov
push
inc
ja
loopne
dec
cmps
pop
push
enter
push
scas
mov
dec
sahf
pusha
stos
mov
ss
add
call
mov
cmps
inc
add
pop
mov
cwde
stos
call
sbb
movq
add
jae
ja
clc
add
xor
scas
jp
in
mov
mov
scas
mov
sar
in
mov
ds
push
sbb
leave
in
or
mov
mov
mov
pop
rcr
mov
aam
adc
dec
sub
cmp
iret
mov
dec
movs
popa
push
sub
shr
out
add
add
jb
enter
xor
shl
mov
dec
mov
or
pop
jne
lea
mov
adc
jb
imul
jmp
pop
mov
shl
adc
fild
popa
unpcklps
addr16
push
push
jne
mov
add
cmps
sub
xor
mov
mov
jl
xchg
push
add
aad
adc
jae
lock
push
xor
and
lods
or
adc
mov
dec
adc
data16
test
dec
cmp
jno
mov
stos
dec
inc
(bad)
test
addr16
push
adc
mov
movs
bound
mov
pop
cmp
imul
leave
dec
push
ret
inc
adc
std
(bad)
pusha
mov
push
and
dec
imul
mov
jae
sbb
loop
imul
push
pushf
les
fcom
nop
es
pop
cmp
movs
add
in
mov
jge
popf
push
or
mov
int3
pusha
pop
adc
or
mov
mov
or
mov
inc
inc
add
add
pop
or
cmp
pop
outs
js
or
std
je
int
imul
pop
push
and
test
push
mov
inc
jge
mov
push
push
test
inc
add
sahf
repnz
sbb
mov
sbb
ja
loop
push
or
sbb
pop
xor
dec
inc
inc
ret
pop
imul
xchg
rcr
sbb
xchg
inc
sahf
push
iret
add
in
or
push
push
clc
or
pop
xchg
sbb
pop
mov
cmp
fild
and
or
sahf
hlt
mov
movs
imul
in
hlt
mov
sbb
cmp
push
add
sar
add
lahf
push
lea
in
mov
and
dec
and
xor
adc
inc
fimul
into
fs
sbb
cmps
sub
push
mov
pop
pop
push
cmps
rol
mov
and
or
sbb
dec
xchg
ins
xchg
add
test
adc
pop
mov
cmp
xor
adc
mov
xor
mov
sub
xchg
or
add
add
test
retf
jbe
mov
popa
sub
imul
xor
jo
in
cmp
cmp
(bad)
xchg
mov
push
ins
push
retw
sub
dec
pop
or
out
jl
xor
jle
push
or
je
je
sbb
jne
push
popf
or
sbb
sahf
mov
or
jne
mov
push
push
or
inc
pop
pop
xchg
js
xor
ins
pop
xlat
adc
or
pusha
pop
cwde
add
and
loopne
sti
adc
or
fcmovb
mov
dec
nop
arpl
or
jae
mov
shl
mov
jno
imul
mov
pop
vmread
pop
push
mov
sbb
inc
fisub
outs
push
dec
jo
pop
je
xchg
inc
xchg
adc
sbb
inc
xchg
sbb
and
jp
xchg
mov
ja
movs
add
jb
mov
sub
daa
mov
push
in
cs
pop
push
sbb
push
sub
push
push
mov
add
mov
sbb
pop
rcr
dec
pop
clc
ins
sbb
inc
test
ret
sub
push
inc
cmp
sub
ins
out
outs
add
mov
mov
mov
popf
in
add
or
aad
stos
pop
pop
mov
sub
(bad)
push
jno
inc
adc
aas
nop
cmps
arpl
adc
inc
xchg
ins
movs
inc
inc
iret
cmc
sbb
or
xchg
xchg
dec
jno
jne
and
inc
lods
stc
wrmsr
dec
sub
or
test
test
cli
cwde
pop
mov
sbb
sub
mov
push
and
xchg
add
mov
add
adc
lods
cwde
clc
push
adc
add
xor
sub
mov
popa
push
mov
and
xchg
mov
inc
imul
call
imul
mov
in
nop
shl
mov
fist
add
inc
clc
inc
mov
call
cmp
xchg
xor
call
or
push
add
test
and
cs
sub
inc
movs
or
push
or
xchg
dec
pop
push
rol
xchg
mov
xchg
jecxz
adc
jmp
cmp
and
mov
jae
add
add
and
adc
add
je
ja
aaa
add
dec
iret
mov
leave
inc
sbb
jno
aam
jmp
ja
adc
leave
shr
or
hlt
pop
add
add
movs
cwde
mov
fstp
jae
jns
add
pop
mov
nop
dec
push
sahf
ds
into
jge
ins
hlt
adc
add
mov
push
repz
jno
push
icebp
enter
ret
xor
cmp
mov
test
add
mov
aam
sti
xor
fbld
adc
or
add
dec
add
jns
or
aam
or
jge
or
cmp
arpl
fisttp
push
mov
rcr
add
and
or
in
mov
add
pop
push
or
xchg
stos
ffree
xchg
ret
inc
lods
and
xchg
ins
test
addr16
or
mov
mov
dec
cmpxchg
mov
push
cwde
outs
arpl
rol
aaa
call
es
lods
fld
ins
movs
inc
sub
jno
inc
frstpm(287
das
popf
ja
mov
or
cdq
and
xchg
sub
cs
loopne
sub
lods
mov
add
mov
push
inc
sbb
push
in
inc
pop
rol
and
mov
sbb
or
cmp
mov
mov
rcl
dec
pop
outs
inc
and
push
int3
cmps
xor
push
push
cwde
ret
fsub
jp
mov
push
push
jo
icebp
idiv
jns
dec
cmp
mov
adc
outs
push
inc
mov
xor
pushf
das
dec
arpl
enter
or
adc
(bad)
int3
jo
xchg
pusha
xchg
fxch
jo
cmc
sbb
icebp
and
retf
cmp
jmp
and
xchg
je
popf
cmp
add
sbb
cmp
mov
adc
outs
imul
jb
loopne
je
sbb
imul
xchg
inc
xchg
jne
push
adc
add
test
mov
push
add
scas
mov
xchg
shr
pop
xchg
sbb
loopne
(bad)
mov
cmp
or
adc
pop
jbe
mov
xchg
xor
add
out
ficom
jb
mov
mov
movs
xchg
sbb
pop
shl
and
xor
sbb
jge
add
int
push
aaa
aas
in
mov
sub
xchg
mov
pop
pusha
shr
add
cs
mov
xchg
sbb
int3
ficomp
scas
xchg
mov
ror
lock
jge
or
shr
and
sub
mov
and
popa
jo
or
addr16
and
(bad)
out
jbe
xchg
push
mov
push
nop
and
test
dec
push
adc
lock
clc
cld
xchg
sub
push
aas
je
mov
jp
mov
push
inc
xor
rcl
push
daa
pop
adc
or
or
jecxz
inc
fimul
mov
aam
mov
sbb
data16
mov
shr
lea
outs
pop
adc
adc
or
mov
aad
sbb
add
leave
dec
sbb
jbe
jbe
add
push
in
push
lock
clc
shl
inc
cld
inc
sub
fild
adc
pop
rol
adc
adc
xor
lds
or
sbb
mov
and
jmp
xor
xchg
pmuludq
xor
adc
imul
push
and
lods
mov
push
daa
aaa
xor
xchg
inc
(bad)
(bad)
cmps
xor
popf
and
imul
xor
js
(bad)
xchg
in
jbe
jg
push
mov
push
lods
lods
cs
das
and
ret
loopne
sbb
jns
repz
mov
or
loope
adc
and
xchg
add
mov
sub
sbb
mov
cmp
out
clc
pusha
stos
adc
xor
push
and
adc
xchg
adc
mulps
mov
mov
mov
pxor
sub
mov
lds
cmp
xchg
push
sub
mov
adc
loope
mov
dec
ret
or
cs
xor
add
cs
mov
mov
push
je
mov
and
xchg
push
ffreep
adc
scas
mov
stc
xor
clc
fs
mov
push
sbb
mov
imul
or
inc
pusha
adc
jmp
pop
jo
push
sbb
sbb
rcl
add
ret
mov
ins
enter
out
ficomp
mov
xor
out
ret
fiadd
inc
iret
adc
pop
sbb
mov
add
int
push
pop
pushf
loopne
xor
int
mov
xor
push
xor
test
jae
push
lea
and
xchg
adc
jmp
(bad)
(bad)
pop
mov
and
xchg
push
or
mov
mov
inc
test
or
aad
jne
xchg
sub
sahf
mov
out
dec
lods
clc
pop
ficomp
mov
xchg
xor
lock
or
sti
xchg
sbb
ret
pop
xchg
jp
push
jno
(bad)
out
jmp
out
jmp
outs
pop
sbb
mov
xor
fs
inc
ins
or
adc
sbb
push
repnz
cmc
in
fwait
push
ret
mov
or
sbb
imul
inc
jae
hlt
inc
push
pop
xchg
je
mov
cmp
movs
pop
jmp
mov
stos
jno
aad
aam
or
adc
nop
lock
xchg
out
xchg
sbb
push
mov
sbb
xchg
ja
mov
pop
xchg
fist
movs
(bad)
xor
inc
jmp
sbb
pushf
inc
test
lods
sub
push
add
leave
adc
add
jmp
inc
mov
bound
mov
mov
jae
lea
sub
enter
cmp
fadd
mov
mov
push
aam
mov
and
dec
mov
nop
push
jne
enter
jge
inc
in
in
sbb
or
mov
lods
pop
mov
jnp
daa
xchg
mov
fist
mov
es
mov
or
pop
sbb
push
mov
jo
adc
cmp
fmul
sbb
mov
dec
push
pop
xor
fsub
adc
add
sti
add
or
adc
out
push
shl
sbb
imul
jno
clc
mov
clc
cmp
adc
mov
test
inc
in
aad
out
and
xchg
add
or
mov
test
loope
xor
push
inc
scas
dec
imul
or
pushf
addr16
xchg
sub
mov
sub
inc
es
mov
das
add
imul
adc
lods
fadd
adc
ins
cwde
rcl
xor
and
sbb
ret
sub
pop
hlt
(bad)
push
adc
leave
pushf
ds
push
mov
sar
jg
mov
pusha
mov
rcr
xchg
call
out
inc
jb
pop
and
ret
jnp
aam
push
xor
add
dec
mov
adc
fcom
jo
cmp
and
stos
ins
inc
mov
push
pop
call
test
cmp
xlat
(bad)
pushf
pushf
or
and
or
add
or
and
xor
dec
add
test
lock
clc
inc
and
inc
lds
mov
test
sub
shl
sbb
inc
dec
js
les
xchg
xchg
cmps
scas
add
mov
stos
scas
mov
leave
cwde
add
test
lock
mov
or
mov
adc
jg
js
sub
dec
or
sbb
das
sbb
jge
inc
mov
js
pop
inc
js
push
and
add
or
jmp
pop
xor
and
xor
add
inc
adc
ss
sub
sub
cmp
adc
mov
push
aaa
push
mov
adc
inc
and
fisttp
jg
push
add
jne
jns
mov
lods
aaa
std
and
in
sti
inc
call
adc
rcr
and
add
jmp
xor
and
jmp
dec
ds
add
arpl
neg
lods
mov
mov
dec
bound
shl
nop
dec
push
pop
add
jmp
in
movs
mov
add
cmp
ffree
mov
imul
jge
sbb
adc
icebp
jne
mov
test
jbe
pop
jae
mov
mov
mov
ret
xchg
push
imul
sbb
xor
jno
int3
dec
fadd
push
rol
in
and
nop
sub
fsubr
dec
jp
repnz
mov
sub
repz
push
xor
mov
xor
inc
jne
(bad)
mov
mov
dec
dec
and
call
sbb
add
and
sbb
lock
inc
sub
add
fnstsw
jo
or
mov
mov
and
fstp
xor
inc
jo
mov
test
mov
push
mov
je
repnz
shl
call
push
or
and
pusha
in
call
and
nop
pop
xchg
mov
xchg
or
aas
and
rcl
xchg
sbb
add
pop
or
nop
test
inc
pop
div
pop
test
mov
ins
aas
add
mov
jb
call
add
push
in
fild
xor
mov
push
adc
es
dec
jne
enter
je
ja
adc
ins
dec
pop
fisub
mov
dec
push
dec
push
in
fs
fcomp
sbb
xlat
push
and
jnp
jmp
or
stos
sbb
adc
call
out
mov
cwde
jbe
pushf
test
and
cmp
lea
ret
fs
add
adc
mov
or
mov
repnz
or
mov
movs
add
lahf
or
lock
cmp
mov
pop
ins
adc
or
add
test
xchg
mov
movs
adc
adc
ficom
out
arpl
xchg
aam
pop
cmps
ss
add
pop
aam
push
adc
shl
inc
mov
lock
xchg
add
dec
add
mov
cld
rcl
dec
sbb
fwait
pop
(bad)
mov
jbe
adc
and
xor
outs
call
add
jns
sti
adc
fld
bound
sub
pop
mov
inc
pop
mov
cmp
dec
icebp
out
fdivr
dec
adc
push
test
imul
lods
mov
adc
jg
and
adc
push
mov
inc
adc
ss
push
pop
xchg
repz
jno
inc
shr
jg
std
mov
ds
and
jecxz
(bad)
xchg
sbb
push
imul
push
lock
lods
mov
mov
xchg
enter
and
add
dec
sti
test
je
dec
adc
and
inc
mov
lods
fistp
mov
mov
xor
xchg
push
mov
add
xchg
cwde
jae
sbb
sbb
pop
sbb
xlat
xor
push
xor
or
pop
mov
adc
push
test
xchg
jno
aam
pop
add
push
ja
sbb
stc
mov
into
xor
inc
(bad)
loope
or
jne
sbb
sub
pusha
mov
add
syscall
mov
adc
cmp
pop
enter
add
cdq
sub
hlt
ins
xor
add
xchg
loope
xchg
ror
pop
and
int3
adc
jne
push
add
(bad)
dec
sbb
in
and
push
(bad)
shl
dec
ins
adc
sub
les
jo
xchg
xor
mov
dec
dec
shl
sbb
mov
fild
mov
mov
xor
mov
adc
jae
movs
aas
ins
jb
jg
iret
je
imul
lahf
push
mov
shr
xor
xchg
pushf
js
mov
jp
push
daa
fidiv
and
cmp
mov
xor
or
in
inc
ja
inc
inc
out
mov
lock
aas
mov
in
pop
repnz
push
dec
repz
ret
adc
adc
fstp
out
mov
scas
es
push
push
imul
and
popf
jge
push
inc
mov
lds
mov
add
cmc
mov
pushf
pop
cmp
jecxz
dec
and
call
add
or
stos
xor
mov
repnz
shl
cmp
or
xchg
addr16
movs
mov
movs
in
ds
mov
stos
int
stc
ins
inc
je
add
dec
add
in
and
jae
xor
push
rcr
jb
lods
mov
cmp
setae
xchg
push
or
xchg
or
xor
inc
call
xor
jecxz
adc
push
and
je
mov
mov
or
int
xor
xor
ins
pusha
xchg
mov
out
mov
add
cmps
pop
or
shr
outs
add
mov
sbb
push
loop
cwde
jo
inc
sbb
pushf
cwde
(bad)
push
add
xor
rol
add
ret
jmp
clc
add
in
nop
adc
cmp
xchg
xlat
and
sbb
jbe
xchg
mov
and
popa
out
inc
xchg
or
pop
inc
push
pusha
les
js
dec
pop
xchg
push
test
push
stc
out
lea
jg
lahf
test
mov
int
std
push
ins
mov
xor
dec
shl
imul
shl
adc
pop
lods
retf
xchg
mov
mov
enter
or
ins
call
fwait
aaa
dec
pop
adc
je
in
or
js
stos
mov
add
fwait
adc
adc
aam
mov
leave
repz
lock
xor
fs
cmps
pushf
mov
dec
add
and
and
mov
xor
addr16
ja
mov
addr16
addr16
push
pop
je
addr16
addr16
mov
dec
popa
xchg
enter
mov
lock
leave
(bad)
outs
jae
imul
clc
mov
pop
push
fsub
dec
inc
and
cmc
cs
data16
push
addr16
aas
adc
and
jecxz
xchg
fidivr
and
jg
popa
arpl
xchg
adc
ins
or
inc
arpl
dec
sbb
mov
mov
outs
and
jecxz
sbb
cmp
ins
pusha
and
sahf
(bad)
or
nop
mov
xchg
sub
daa
cdq
jae
jo
cmp
push
or
jne
jecxz
shl
add
adc
add
fsubr
jg
sub
sbb
mov
frstor
adc
bound
jg
cmp
push
unpckhps
jae
gs
cmp
loopne
ins
add
pusha
and
cs
arpl
stos
xor
xchg
sbb
shl
and
mov
ins
das
cmp
pop
lods
sbb
mov
popa
iret
and
mov
and
outs
mov
ds
pusha
xlat
nop
adc
or
add
cmp
out
add
mov
inc
pusha
sbb
repnz
sti
add
and
mov
adc
inc
pop
xor
dec
dec
push
add
cmp
push
dec
inc
dec
inc
out
xor
push
pop
sahf
xchg
xor
dec
push
inc
push
inc
pop
inc
scas
mov
je
inc
dec
inc
inc
dec
and
adc
sub
repz
or
into
mov
xchg
mov
les
push
cmp
hlt
xor
adc
push
lods
push
mov
adc
adc
shr
adc
pusha
pusha
(bad)
adc
add
(bad)
aas
(bad)
xchg
test
icebp
aad
inc
adc
enter
add
adc
(bad)
rcr
jl
jl
fist
aam
add
xor
xchg
xchg
pop
add
nop
inc
adc
jnp
or
dec
call
ret
xchg
inc
sub
jg
push
pop
pop
or
mov
adc
add
mov
dec
and
jg
test
je
cmp
xor
or
je
cmp
pop
in
aam
xchg
push
cwde
xchg
push
in
sbb
ror
xor
jmp
cmp
ds
repnz
or
adc
or
loop
cmp
loope
dec
popf
sbb
mov
ds
mov
daa
or
mov
or
sub
clc
adc
cs
xor
pop
sbb
div
mov
xor
inc
add
mov
je
shr
daa
or
mov
mov
sub
add
mov
in
enter
in
push
loope
pop
dec
hlt
and
jnp
or
xor
loop
mov
das
in
sbb
xchg
ret
call
and
les
add
aaa
imul
add
cmp
pop
mov
or
pop
or
or
imul
push
popf
sbb
xlat
outs
cmps
(bad)
sbb
cs
mov
adc
xor
push
or
add
sub
sahf
jbe
test
lds
xlat
pop
push
jmp
aas
imul
push
jge
jg
leave
call
retf
enter
leave
mov
add
add
popa
enter
or
stos
xchg
out
push
repnz
rcr
add
leave
jnp
xchg
adc
jg
sbb
xor
xor
popa
cmp
xor
xor
inc
push
sbb
leave
xor
and
or
dec
jo
rol
xor
ret
sub
xchg
dec
push
inc
sbb
pop
pop
cmovne
inc
outs
cmp
arpl
dec
jne
xchg
inc
push
push
pop
inc
push
dec
in
enter
aaa
xor
push
dec
push
inc
inc
rcr
cmp
xor
push
inc
mov
clc
and
and
outs
and
xor
jmp
push
add
scas
mov
add
aaa
jno
add
cmc
mov
xor
adc
sti
les
mov
xor
dec
push
enter
(bad)
push
fs
movs
add
mov
ficomp
imul
mov
mov
pushf
out
outs
adc
adc
add
xor
das
jle
xor
ror
ret
cmp
mov
adc
xchg
fcmovb
test
scas
mov
inc
jl
add
pop
sbb
mov
dec
xchg
cmc
xor
xchg
xchg
pop
int3
call
push
mov
sbb
dec
aaa
add
push
nop
shr
dec
outs
mov
inc
(bad)
mov
loop
inc
rol
mov
jne
mov
inc
daa
call
dec
(bad)
fld
cmp
push
xlat
mov
lods
add
push
mov
popa
xor
(bad)
cmps
pop
sub
lock
push
arpl
inc
or
xchg
xchg
ret
add
push
rcr
push
fistp
pushf
inc
fdiv
add
mov
inc
push
enter
dec
add
push
mov
jo
jo
inc
inc
or
inc
out
mov
es
jns
sub
imul
sbb
xchg
or
sbb
popa
xchg
outs
push
test
mov
cmp
sbb
xchg
mov
loope
push
push
add
or
or
or
sub
add
or
fst
push
push
mov
sbb
scas
rcl
pop
pop
pop
popa
das
add
push
retf
jns
pop
jle
loopne
mov
mov
mov
pop
xor
pmuludq
in
pop
push
je
pusha
push
pushf
push
into
imul
scas
repnz
out
push
sub
jbe
iret
nop
outs
adc
pop
sub
lods
imul
fs
push
and
in
mov
jo
hlt
mov
jmp
pop
or
dec
mov
push
adc
adc
jnp
movs
ret
pop
xor
jo
adc
mov
add
dec
adc
or
push
outs
ins
adc
leave
cmps
dec
mov
push
(bad)
fdivr
outs
int3
inc
lea
pop
cmp
inc
xlat
lods
add
adc
ins
pop
jae
inc
mov
push
sub
push
push
mov
mov
imul
ja
pop
lsl
repz
fisttp
retf
(bad)
pop
fcom
repnz
xchg
enter
add
push
fdiv
pop
mov
adc
pop
icebp
adc
pop
push
in
and
pop
xor
leave
mov
or
mov
call
sahf
push
jae
fs
inc
xchg
cmc
dec
dec
push
pop
pop
adc
mov
inc
lods
lods
hlt
adc
popf
gs
ins
jl
not
pop
pop
lods
fs
inc
adc
movs
sbb
push
push
call
add
cdq
push
add
sbb
loopne
test
or
adc
push
sbb
bound
hlt
or
pop
clc
in
or
clc
js
add
xchg
or
pusha
pop
cmp
pop
cmp
xchg
mov
or
movs
sar
push
mov
sub
ficom
or
adc
(bad)
popf
xor
pop
not
add
ins
aam
xchg
aas
and
mov
ins
das
xchg
outs
sbb
and
jbe
imul
ss
adc
push
pop
dec
push
push
es
add
dec
add
js
push
add
jns
jae
imul
add
or
push
cmp
arpl
arpl
push
and
push
add
jae
pop
retf
int
mov
and
or
adc
cmp
pop
adc
xor
and
(bad)
fimul
mov
adc
fimul
fs
push
push
inc
add
pop
or
pop
daa
push
jg
xor
inc
outs
or
jns
outs
mov
outs
nop
(bad)
push
mul
push
or
and
in
and
(bad)
mov
out
fcmovu
dec
dec
jo
gs
es
jb
push
aaa
xor
div
scas
dec
es
inc
(bad)
ins
push
call
ins
pop
outs
cmps
popa
sbb
inc
ds
sbb
scas
add
out
push
idiv
sbb
push
xchg
ss
(bad)
push
cdq
mov
push
push
dec
shr
cmp
mov
gs
out
outs
inc
jo
pusha
aaa
jae
arpl
push
rol
push
push
dec
ins
sbb
xor
or
loopne
pusha
dec
push
sbb
pop
xor
sbb
stos
movs
loope
push
fimul
(bad)
fadd
loopne
outs
iret
mov
shr
pop
push
stos
out
push
je
and
shl
aaa
(bad)
adc
or
dec
lds
je
push
sub
into
mov
jmp
(bad)
es
aas
mov
cmps
or
push
inc
adc
add
ss
jo
pusha
xor
je
dec
mov
aam
mov
push
add
mov
jmp
jnp
push
ja
add
xlat
pushf
ins
stos
add
ds
add
push
lock
adc
jno
mov
bound
mov
or
dec
rcl
sbb
js
mov
call
in
fmul
sbb
popf
or
in
daa
jg
add
rcr
add
mov
mov
aaa
jle
shl
rol
test
test
jmp
dec
adc
ss
push
aas
xor
xor
lods
or
or
cmps
(bad)
scas
mov
(bad)
in
or
sbb
pop
mov
and
mov
mov
sbb
xchg
xor
pop
jmp
push
cmps
adc
jbe
sbb
pop
pop
std
or
or
push
or
dec
sbb
rol
mov
inc
dec
xor
sub
rcr
add
sbb
dec
push
or
pop
inc
aas
jge
mov
add
arpl
jmp
lahf
xchg
xor
test
mov
cmp
retf
mov
and
mov
sbb
pop
pop
inc
xor
in
lea
adc
fs
int
or
push
or
je
adc
repz
movs
loop
or
jo
mov
hlt
pop
mov
mov
aad
sbb
push
sbb
mov
inc
pop
daa
mov
stc
gs
fmul
inc
jbe
pop
add
out
inc
and
xor
daa
xchg
retf
push
shr
inc
inc
pusha
setne
std
cmc
xor
sub
daa
push
adc
repnz
or
inc
mov
add
xchg
clc
inc
push
test
cmp
int3
adc
or
sbb
push
add
(bad)
mov
sub
jno
adc
cmovnp
pop
inc
pop
es
ficomp
mov
popf
pop
sbb
arpl
sub
loopne
jmp
lds
add
test
fbstp
das
jp
pop
mov
outs
retf
fcom
outs
xchg
cwde
jmp
aaa
rcr
pop
(bad)
jns
pushf
mov
test
xor
leave
pop
adc
adc
ror
or
add
push
sar
jbe
push
fs
add
pop
pop
les
push
push
push
lods
rcr
aam
fcmovnb
in
fld
adc
jbe
inc
pop
test
pop
daa
xchg
push
(bad)
and
aad
sahf
cld
mov
push
xchg
popa
adc
test
mov
sbb
and
test
mov
push
push
and
cmps
hlt
mov
sub
and
inc
pop
cmp
lock
nop
push
ja
mov
mov
aad
pop
enter
push
call
xchg
or
aad
in
fs
push
jns
aam
in
add
sbb
in
dec
mov
test
in
mov
mov
add
and
test
and
(bad)
daa
cs
dec
dec
or
outs
movs
inc
scas
(bad)
dec
dec
daa
cmp
ins
ins
push
add
or
inc
pushw
jno
lods
mov
add
cmp
xor
add
inc
sbb
adc
outs
lahf
es
fwait
add
xlat
aas
dec
push
and
lock
js
or
sti
push
fistp
dec
ins
and
xor
in
and
and
push
(bad)
push
(bad)
sti
(bad)
fdivr
nop
aam
loopne
dec
enter
jmp
or
(bad)
ss
ins
push
fsub
test
cmp
push
add
icebp
xor
adc
mov
or
aam
adc
jno
mov
dec
cld
cmp
adc
push
sbb
je
xor
les
add
test
and
inc
loope
pop
cmp
nop
inc
mov
(bad)
cmp
xor
mov
or
adc
inc
jecxz
pop
push
test
mov
and
gs
sbb
push
test
jns
push
test
shr
loope
fs
or
and
dec
popf
xchg
inc
pop
xlat
or
sbb
mov
xor
outs
in
xor
adc
jae
add
and
adc
movs
and
lock
mov
xchg
outs
daa
clc
addr16
enter
rol
cmp
pop
or
inc
cmp
jge
add
(bad)
mov
adc
into
lods
fwait
sub
pop
test
cmp
and
nop
int
popa
std
loop
xchg
mul
lahf
jl
xor
lock
cmps
aaa
adc
add
pop
inc
lods
add
div
ret
sbb
xchg
sbb
hlt
popf
jmp
sbb
hlt
adc
in
xchg
inc
jo
jb
repz
rol
rcr
jae
ja
push
push
fdivr
mov
(bad)
(bad)
inc
pusha
hlt
ja
sub
dec
inc
bound
mov
sub
sti
adc
ja
fcom
and
or
das
repz
pop
enter
in
nop
fimul
int
add
push
jmp
add
and
xor
or
leave
mov
mov
cmps
scas
push
pop
ja
mov
jmp
and
cdq
cld
push
push
add
lea
arpl
aaa
dec
sub
or
inc
mov
pop
push
xlat
xlat
sbb
es
or
arpl
lods
cmps
leave
xor
iret
jb
mov
and
mov
cmps
(bad)
pop
test
push
xor
call
dec
lods
cmp
frstor
jmp
pop
adc
aas
pop
pop
(bad)
out
rcr
and
test
bound
ins
adc
xchg
jb
pushf
ss
out
inc
jmp
cdq
je
outs
arpl
or
mov
les
(bad)
je
xor
and
push
sub
push
adc
xchg
cmp
mov
jb
test
lods
pop
jbe
add
pusha
and
add
inc
and
sub
push
pusha
mov
mov
inc
mov
pop
pop
mov
add
adc
(bad)
cmp
xchg
xor
mov
and
push
xchg
(bad)
pop
enter
mov
lea
pop
ror
and
adc
sbb
sbb
enter
push
push
xchg
sub
repz
dec
ret
scas
inc
inc
inc
sub
imul
mov
ret
push
jecxz
test
sbb
jmp
dec
imul
or
cmp
shl
and
mov
cmp
and
mov
mov
sbb
jb
adc
in
leave
lock
sbb
xor
add
shr
cdq
clc
test
inc
and
jbe
mov
fild
and
add
xchg
sbb
add
call
adc
xchg
cmp
mov
pop
out
xchg
retf
inc
add
scas
hlt
mov
push
sbb
and
pop
jp
cld
sbb
mov
push
inc
xchg
sub
adc
dec
push
xchg
add
nop
mov
popa
nop
test
out
pop
popa
popa
push
pop
mov
or
and
mov
nop
xchg
xor
(bad)
aaa
dec
pusha
pop
jp
sbb
std
xor
add
inc
mov
sbb
imul
sub
xor
mov
cwde
pop
out
inc
inc
cmp
dec
xor
fsubr
ret
fld
xor
jmp
or
dec
scas
push
shr
push
or
sbb
sub
xor
add
fs
pop
pop
test
push
xchg
mov
sub
jbe
fcom
lea
lds
addr16
or
xchg
aam
shr
jnp
in
neg
add
mov
adc
dec
dec
push
stos
fisttp
bound
addr16
sbb
sbb
or
xor
lds
cmp
jmp
(bad)
and
dec
nop
fidivr
inc
fsub
xchg
mov
in
mov
mov
add
cmp
sub
and
mov
je
sbb
test
cs
sbb
mov
(bad)
lock
sbb
sbb
or
dec
loop
rol
imul
xchg
stos
loopne
shr
cmps
mov
push
hlt
xchg
xchg
mul
loopne
sahf
pop
lea
lock
sub
xor
adc
fsub
cmps
out
push
(bad)
fimul
loopne
and
inc
nop
sbb
daa
addr16
push
add
rol
and
or
pop
aaa
inc
shl
pop
aaa
rcl
dec
mov
xchg
fcom
icebp
add
or
call
inc
(bad)
out
inc
push
sbb
pop
xor
or
push
in
cwde
jo
imul
or
push
mov
xor
es
cli
pop
and
bound
not
pusha
(bad)
jns
or
xor
aad
dec
test
test
push
and
sbb
mov
push
iret
aad
loope
ds
out
ins
or
test
adc
lds
rol
icebp
repz
in
mov
mov
xor
sbb
in
or
or
add
call
movzx
pop
pop
cmps
cmps
cmp
or
imul
dec
xor
xchg
xor
mov
pop
or
rcr
add
push
sbb
and
sbb
lods
inc
out
mov
test
fcomp
xchg
and
sbb
push
ror
cmc
in
jnp
mov
adc
add
push
ins
iret
scas
lods
xchg
cmp
mov
jne
mov
pop
mov
push
pusha
mov
jo
out
mov
mov
stc
jnp
xor
dec
(bad)
xchg
adc
aaa
inc
jb
add
mov
and
out
pop
inc
push
scas
jl
and
fcomp
cld
inc
mov
(bad)
mov
mov
dec
pop
xlat
cdq
and
int
dec
push
pop
and
nop
sub
xchg
movs
out
dec
xchg
sub
bound
add
pop
sub
xor
adc
jb
popf
les
inc
mov
dec
sahf
xchg
gs
sub
or
sbb
test
lods
nop
or
cmp
xchg
sbb
and
xchg
and
fdivr
ja
cmp
neg
ss
push
push
and
xor
dec
adc
and
jb
cmp
mov
pop
sub
jo
js
sub
xchg
or
push
in
inc
or
and
nop
add
jg
sbb
iret
and
call
xor
rcl
xor
mov
enter
dec
shl
inc
sbb
push
adc
adc
hlt
ror
rol
call
dec
push
imul
retf
cmps
in
hlt
shr
fsub
dec
shl
fdiv
cmp
and
dec
ror
or
clc
rol
cmps
imul
imul
mov
dec
shl
movs
call
iret
mov
in
call
mov
mov
sub
sbb
xchg
ja
pop
fsincos
(bad)
fstp
shr
adc
jecxz
enter
push
repnz
cmps
jg
and
sti
jle
mov
inc
dec
push
ss
inc
cld
ja
je
mov
inc
adc
push
shl
jns
or
jle
add
or
(bad)
mov
rcl
hlt
(bad)
pusha
aad
stos
push
adc
pusha
inc
pop
dec
(bad)
not
mov
fild
or
gs
cmp
arpl
pop
and
cmp
lock
dec
addr16
mov
popa
nop
xor
mov
adc
inc
mov
xchg
and
pop
push
mov
xor
push
sbb
in
dec
push
lods
xor
push
add
add
mov
js
daa
or
lea
(bad)
pop
sub
pop
xor
mov
scas
pop
(bad)
lahf
pusha
cmp
loope
scas
ss
cmp
fld
add
jbe
cs
sbb
add
xor
or
add
or
sub
adc
push
mov
shl
mov
ret
adc
xor
mov
or
xchg
fst
xor
xchg
ja
and
mov
popa
popa
dec
fwait
out
or
sahf
or
and
xchg
jo
push
xor
icebp
iret
je
popa
or
pop
push
cdq
inc
enter
out
ins
inc
mov
or
ins
or
fwait
xor
das
ss
push
popf
add
xchg
pop
jg
popf
pop
add
xor
or
inc
out
cs
xchg
cmps
push
in
add
outs
or
lds
fadd
dec
jle
jg
cmp
cmp
pop
jle
jo
je
int3
sbb
call
add
inc
sbb
fs
push
lock
setns
inc
mov
fist
leave
or
and
adc
sbb
fnsave
lock
adc
inc
popa
call
sbb
pcmpeqb
mov
lahf
out
nop
xchg
pop
nop
cmps
pop
imul
cmc
pop
add
pop
pop
ret
xchg
cmps
mov
call
pop
pop
push
add
mov
in
pop
inc
mov
cmps
rcl
push
jo
inc
lock
fst
sub
nop
mov
add
mov
push
or
fcomp
inc
pop
dec
adc
hlt
add
adc
cmp
jns
push
test
inc
cld
or
xor
xchg
scas
inc
mov
mov
sub
movs
pop
add
shl
(bad)
shl
or
ret
dec
inc
cmp
xchg
xchg
or
and
adc
ret
inc
add
inc
push
int3
sbb
adc
add
or
dec
test
xchg
inc
cbw
dec
adc
je
mov
(bad)
lods
lods
add
popf
stos
push
sbb
adc
xchg
mov
les
push
repz
lea
call
sub
arpl
sbb
mov
nop
shl
sbb
push
add
add
mov
mov
ret
(bad)
dec
dec
jno
inc
jmp
mov
lods
inc
call
fldenv
sub
sub
(bad)
push
cwde
pop
jbe
cmp
adc
sbb
pop
fdiv
aas
xor
out
inc
cmp
xor
xor
shl
in
dec
pop
xor
mov
out
out
sbb
mov
je
ret
leave
mov
xchg
jne
xchg
out
inc
add
and
sub
cwde
loopne
pop
or
lds
jmp
lods
jmp
outs
mov
adc
add
cmp
inc
stc
add
xor
adc
push
xor
icebp
or
bound
jo
in
and
dec
cmps
push
push
or
push
dec
cld
mov
mov
dec
xor
push
dec
das
sbb
rol
out
push
cmps
sub
add
popf
or
test
mov
push
pop
xchg
in
mov
fs
sbb
mov
xor
pop
(bad)
fcomip
ja
sub
rcl
or
cmp
mov
adc
dec
dec
js
adc
dec
or
pop
in
adc
pop
stc
cdq
test
or
inc
xchg
mov
sbb
ins
movs
ins
mov
adc
jae
mov
xchg
outs
mov
xchg
mov
icebp
mov
xchg
or
mov
or
dec
repnz
enter
pop
sar
movs
mov
cmp
and
mov
(bad)
jl
stc
mov
or
stc
test
adc
mov
leave
and
retf
mov
add
jecxz
mov
pop
test
int
icebp
lds
mov
and
jne
dec
xlat
pop
sahf
mov
sub
add
add
outs
xor
cmps
fcom
push
(bad)
jo
inc
add
ret
inc
cld
loopne
mov
(bad)
fistp
repnz
cli
sub
or
(bad)
imul
mov
xor
xor
call
sti
sub
xor
push
daa
iret
dec
sbb
ret
fisttp
xchg
cs
or
bound
push
push
(bad)
adc
inc
xchg
pop
addr16
mov
inc
push
fild
icebp
pop
or
hlt
movs
nop
rcl
add
inc
sbb
in
jno
rol
sub
shr
dec
repnz
aaa
jg
mov
jne
inc
enter
xor
push
pop
or
dec
mov
pop
or
pop
sbb
xchg
adc
dec
add
sbb
shl
shl
push
and
fsub
mov
test
out
repz
dec
js
into
retf
pop
std
mul
and
mov
push
push
sub
pop
add
adc
test
vmread
loope
push
pusha
push
pop
jno
and
enter
sbb
hlt
and
movs
pop
pop
jo
sbb
mov
std
cmp
adc
xor
xchg
dec
inc
dec
jae
dec
ret
adc
xchg
ss
cld
(bad)
stos
push
dec
das
in
mov
mov
push
pop
pusha
ins
inc
dec
nop
sub
inc
mov
xchg
cmp
cdq
in
arpl
fs
or
in
pop
scas
and
xchg
mov
sbb
push
sbb
or
xchg
mov
ret
adc
and
add
push
popa
and
sbb
mov
call
mov
rol
mov
cmp
add
push
adc
adc
(bad)
(bad)
adc
xchg
inc
mov
xchg
(bad)
aad
xor
mov
and
js
xor
or
ja
sub
mov
mov
xchg
push
xor
add
aas
inc
jecxz
xchg
mov
mov
jl
mov
or
or
sbb
pop
add
repnz
out
test
imul
mov
jno
adc
fnstcw
dec
jp
xor
push
stc
out
movntq
icebp
loopne
bound
push
adc
inc
push
inc
sub
(bad)
and
popa
ss
xor
dec
loopne
and
mov
mov
pop
ja
adc
cmp
fmul
jne
call
mov
nop
call
jg
xor
stc
pushf
xor
popf
add
sub
aam
loopne
pop
mov
and
or
dec
or
ror
cmp
and
push
(bad)
loopne
daa
mov
jbe
data16
aaa
cmp
dec
pop
jae
adc
shl
loope
repz
add
inc
sar
jo
loopne
movs
cs
call
push
sub
dec
nop
xor
jae
mov
add
enter
(bad)
jmp
mov
dec
mov
aas
mov
add
add
nop
push
loope
loope
adc
ret
add
xchg
aaa
cmps
arpl
adc
or
push
js
movs
ss
mov
mov
xor
sbb
in
bound
mov
(bad)
push
pop
inc
lea
adc
jo
test
pop
or
xor
in
je
add
ins
inc
and
nop
loopne
sbb
(bad)
rcl
push
push
adc
pop
clc
into
imul
xor
add
jmp
bound
and
xchg
add
in
sbb
ds
push
push
cdq
cmp
xchg
imul
in
inc
push
(bad)
ror
add
iret
cmp
(bad)
repnz
add
sahf
pop
arpl
cld
fistp
adc
loop
adc
bound
rol
rol
int
fmul
xchg
add
sub
mov
inc
retf
adc
adc
fsubr
sbb
pop
jmp
les
(bad)
sub
sub
sub
aam
lea
xor
shl
sub
inc
add
or
xor
inc
push
rcl
mov
rcl
jo
pop
push
cmp
push
jo
xor
dec
test
push
and
adc
lds
push
lods
mov
and
fmul
adc
pop
and
pop
add
sub
iret
inc
mov
adc
dec
loopne
add
fs
xor
fnstenv
ja
sbb
adc
mov
mov
es
mov
das
ins
imul
lds
mov
inc
push
pushf
jo
mov
pop
sbb
loop
test
cmp
nop
inc
jno
and
lea
test
enter
or
add
or
add
fxch
daa
test
xchg
push
scas
dec
mov
push
mov
xchg
push
je
adc
ins
cmps
std
push
movaps
enter
push
add
out
cld
in
pop
call
xor
movs
or
sbb
xor
or
cld
pop
bound
push
fsubr
nop
(bad)
or
mov
hlt
in
or
shr
lds
add
pop
sbb
test
adc
mov
inc
cmp
xor
sub
aas
cmc
push
nop
movs
(bad)
lock
es
mov
clc
inc
rol
test
jmp
add
or
inc
inc
xor
je
inc
sbb
jns
inc
xor
pop
iret
call
nop
es
add
pop
gs
in
or
add
or
xlat
mov
sbb
mov
jb
arpl
cwde
(bad)
adc
or
jmp
pop
mov
push
mov
rcr
shr
xor
inc
movs
mov
pop
push
lods
das
xchg
(bad)
shl
in
adc
add
inc
xchg
stos
mov
add
sub
or
mov
cmc
or
popf
mov
loop
imul
mov
ja
and
sbb
or
int3
mov
mov
cmp
jmp
inc
mov
pop
inc
enter
nop
pushf
push
sbb
cmp
sbb
adc
scas
dec
sbb
aas
sbb
sub
and
jae
dec
pop
pusha
xor
or
add
test
dec
and
sub
xor
stos
enter
std
bound
xor
call
ss
mov
pop
adc
rol
mov
rol
adc
sub
add
ficomp
icebp
xor
add
gs
mov
daa
call
aas
pusha
mov
rol
jp
sbb
test
jg
lods
push
repnz
or
sbb
lock
mov
(bad)
or
add
addr16
sti
add
into
daa
sbb
inc
jb
or
nop
or
jp
xlat
dec
jmp
mov
add
jge
pop
inc
or
fcomp
mov
in
add
mov
rcr
xchg
out
xor
(bad)
lock
add
daa
xlat
or
in
in
dec
lock
je
jg
and
(bad)
outs
ds
sub
or
sbb
enter
sbb
fisttp
adc
cwde
aam
push
lock
cwde
adc
ins
adc
push
lea
xchg
add
pusha
loop
add
cld
adc
sbb
hlt
xor
addr16
mov
mov
mov
imul
jg
aam
(bad)
lock
add
adc
inc
rol
inc
or
jo
loope
cli
jge
iret
push
inc
xchg
xchg
adc
sub
cmp
in
arpl
lock
daa
sub
or
push
adc
fld
int
xchg
enter
or
or
add
inc
aaa
out
dec
dec
push
push
inc
dec
dec
lock
push
sub
jbe
adc
or
daa
js
in
fadd
add
mov
mov
xchg
clc
inc
cmp
ins
and
(bad)
pop
adc
int3
data16
push
push
rcr
push
dec
or
rcr
scas
(bad)
dec
rcr
(bad)
adc
mov
ins
rol
cmps
and
in
ins
retf
ds
and
into
mov
add
js
hlt
pop
and
push
lahf
out
or
adc
pusha
jp
mov
or
or
mov
ins
ins
xor
loopne
cwde
mov
pop
pop
lods
push
and
and
mov
or
dec
sub
popa
pop
or
push
icebp
loope
mov
mov
and
adc
shl
mov
xor
and
xchg
add
es
xor
dec
cmp
nop
push
pop
sbb
push
mov
mov
repz
push
and
xchg
inc
lahf
sbb
adc
add
dec
jnp
lods
in
mov
nop
push
ins
ret
inc
cmp
jl
repz
or
ror
jo
mov
sbb
and
jl
inc
popf
pop
cmps
mov
movs
lock
or
adc
or
xchg
pusha
shr
shl
sbb
dec
outs
pop
adc
inc
cs
push
jnp
ret
xor
pop
test
les
mov
aas
jo
mov
lea
add
jle
data16
popf
into
mov
pushf
call
xchg
cli
adc
xor
xchg
xor
daa
and
push
push
dec
inc
cmp
ror
outs
daa
dec
repnz
push
aaa
mov
or
jo
push
(bad)
popf
cbw
cwde
or
jne
sbb
and
sub
shl
adc
adc
retf
push
mov
jo
mov
lods
popf
fisttp
and
add
pusha
add
sbb
mov
sub
jo
and
int3
ret
xor
and
mov
retf
inc
dec
add
push
cwde
and
or
xchg
and
add
push
sbb
aas
xchg
lea
ret
movs
mov
xchg
and
call
mov
int
adc
std
xor
add
retf
mov
cmp
dec
in
mov
add
lea
shl
or
rol
add
retf
les
or
js
add
push
rcr
push
jno
jae
shl
and
add
pop
mov
xchg
add
cmp
js
aam
mov
sub
dec
push
pop
add
rol
jmp
sbb
rol
jno
mov
xor
mov
jecxz
setle
jo
gs
cwde
movs
(bad)
adc
(bad)
xchg
inc
test
push
movs
(bad)
fs
xor
nop
pushf
mov
add
jns
or
mov
xor
mov
lahf
stos
jmp
lahf
aas
shr
or
retf
inc
rcl
inc
loope
push
imul
movs
dec
fiadd
inc
repnz
ins
leave
and
add
stc
fdiv
sub
outs
xchg
add
cmp
add
ins
dec
or
xor
ret
int3
sbb
pop
mov
loopne
mov
cmp
in
jnp
add
sub
push
add
dec
pop
inc
mov
cmp
mov
pop
mov
dec
aaa
fs
push
sub
sub
mov
pop
push
ss
jns
les
jbe
pop
push
push
and
xor
ror
das
repz
nop
mov
call
pusha
xor
inc
movs
mov
ins
mov
sbb
and
pop
hlt
cmp
ja
scas
xor
in
and
and
dec
add
jo
add
mov
mov
iret
pop
add
dec
pop
add
retf
xchg
scas
(bad)
fdivr
dec
xor
adc
add
inc
inc
outs
fstp
fisttp
fisub
push
shr
ds
jle
add
fsubr
or
pushf
add
test
pop
and
aaa
inc
mov
inc
jbe
inc
sub
pop
sub
xchg
and
sbb
scas
and
dec
mov
inc
mov
mov
test
push
xchg
out
dec
push
inc
push
push
mov
pop
push
or
mov
bound
(bad)
pop
xor
mov
mov
mov
or
mov
add
add
add
inc
inc
inc
or
adc
mov
and
cmp
or
mov
pusha
mov
loopne
lock
add
std
data16
push
sbb
jg
sub
out
sar
ret
xor
fist
push
rcr
mov
es
sbb
push
(bad)
adc
add
push
addr16
outs
cld
jge
lods
or
dec
rcl
and
ins
inc
ja
aaa
dec
movs
mov
cmp
imul
out
and
sub
gs
cmp
push
jo
xchg
and
icebp
test
xchg
ret
mov
dec
inc
mov
jmp
call
jge
add
mov
and
jmp
cld
dec
jmp
add
or
stc
fsubp
sub
rcr
add
mov
adc
or
push
xchg
add
mov
mov
mov
shl
xchg
mov
add
lock
sbb
repnz
pop
inc
push
int3
or
(bad)
stos
add
test
dec
jl
mov
mov
inc
sbb
adc
out
outs
sbb
adc
arpl
add
mov
ret
sub
ficom
inc
jp
mov
das
mov
fcomp
xor
or
mov
cwde
adc
cmps
jne
cwde
sub
rcr
xchg
cwde
push
push
arpl
fdiv
stos
adc
or
lods
inc
and
test
push
push
or
xor
jl
dec
inc
jae
dec
cmp
sbb
xchg
mov
fisub
mov
jo
imul
add
cmp
pop
pop
and
jns
pop
or
sbb
repnz
popf
inc
aas
and
fst
adc
das
adc
dec
xchg
dec
cmp
xor
mov
adc
ret
enter
mov
sub
push
adc
or
shr
push
push
add
sub
iret
or
int
mov
push
dec
cmp
jp
or
xchg
enter
outs
sbb
pop
sub
retf
cmp
dec
sbb
and
shl
ins
in
movs
xor
xchg
fnop
xor
inc
and
popf
movs
add
pop
add
ins
nop
xor
or
daa
pop
xor
aaa
add
push
dec
inc
lea
rcl
cmp
or
mov
add
cmp
add
(bad)
fnstsw
sbb
mov
sub
adc
lods
push
jae
dec
fild
xchg
fadd
call
enter
es
push
dec
ret
add
adc
mov
push
or
jo
mov
or
cmp
fdiv
inc
adc
dec
inc
and
jae
push
rol
adc
push
and
test
adc
xor
(bad)
adc
push
adc
xor
jmp
div
mov
sub
scas
(bad)
mov
or
cmps
jge
ins
jmp
cdq
icebp
es
mov
ret
aas
ins
test
pop
hlt
mov
adc
ret
mov
lds
adc
mov
ins
loop
add
cmc
and
sub
ror
xlat
inc
fcomp
repz
sbb
fbld
and
mov
imul
stc
pushf
loopne
and
add
cmps
sbb
adc
imul
fisub
or
shr
ret
in
rol
aas
mov
or
xor
jo
jns
xor
push
or
adc
push
stc
add
mov
cwde
nop
mov
sbb
enter
and
mov
outs
das
or
sbb
and
dec
inc
push
mov
jp
pop
xor
or
(bad)
jmp
cmp
inc
mov
and
add
mov
hlt
pop
dec
inc
cmp
adc
pop
js
push
or
cli
jne
movzx
dec
leave
jno
sahf
or
sbb
pop
(bad)
adc
or
mov
add
inc
mov
xor
cmp
inc
or
add
add
ins
mov
(bad)
retf
mov
inc
sub
push
push
fcomp
mov
movs
push
test
retf
add
add
jmp
cwde
or
popa
dec
pop
inc
rcl
sub
sti
mov
xlat
dec
push
sub
mov
dec
adc
dec
add
cdq
and
test
xor
mov
or
and
test
into
adc
push
das
mov
or
loopne
jp
xchg
sbb
mov
out
cmp
rcl
fnstsw
ret
fwait
or
or
xlat
and
or
test
cmp
mov
sub
in
xor
pop
icebp
shl
es
add
adc
jno
jecxz
inc
in
pusha
cmp
inc
nop
add
pushf
xor
push
pop
sbb
inc
sub
pop
sub
sub
test
sbb
xor
or
xor
lahf
fisttp
lea
dec
inc
mov
mov
add
ror
cmp
test
xor
jo
sbb
pop
and
inc
pop
ins
and
add
cli
and
add
dec
jmp
add
jbe
push
sbb
sub
and
inc
loope
in
aam
and
sti
xor
adc
popa
(bad)
push
sbb
cmp
int
cmp
rol
mov
sub
jne
pop
repz
mov
out
or
xor
jg
cmp
mov
and
loope
push
aam
push
lea
shl
and
enter
jmp
call
add
cmc
cmp
adc
mov
mov
and
ror
xor
lahf
jg
push
mov
fcmovbe
mov
pop
les
cmp
inc
mov
blcs
push
push
inc
cwde
std
(bad)
in
call
call
or
sbb
cmp
cmps
jno
(bad)
in
out
jp
les
stos
inc
es
jno
in
or
or
jae
and
scas
push
add
and
sub
xor
popa
sbb
shr
aaa
stos
es
test
and
sub
imul
or
adc
pop
inc
push
sub
xor
or
scas
pop
adc
and
xor
outs
sbb
xor
jns
sub
xchg
sub
mov
sbb
xor
nop
jbe
aad
imul
and
rcr
dec
mov
sub
add
aam
add
inc
lahf
jl
add
je
add
jns
dec
xchg
ret
je
xchg
mov
cld
lea
test
cmp
sub
or
jno
test
sbb
inc
adc
les
int3
adc
in
add
inc
adc
jmp
cs
xor
fchs
inc
xor
sub
mov
ret
(bad)
aad
and
jmp
(bad)
inc
sahf
cmps
jg
sub
or
pop
xchg
jns
lock
ret
inc
sbb
stos
ss
ins
lea
add
outs
les
ja
pop
add
mov
dec
jmp
jmp
mov
adc
mov
or
test
cmps
aas
or
jb
aas
sub
(bad)
leave
xchg
jne
xchg
inc
or
shl
and
jmp
push
sbb
xchg
sbb
or
arpl
xchg
push
fcom
retf
push
adc
adc
dec
dec
add
loopne
jle
mov
inc
std
and
cmp
mov
inc
call
jb
sbb
test
sub
(bad)
jns
sbb
push
inc
adc
aaa
dec
add
jnp
push
jbe
dec
sbb
mov
mov
mov
jno
aas
sti
push
lods
mov
popf
xchg
xchg
movs
mov
nop
or
cdq
dec
ja
fnstsw
xor
sub
xor
fcompp
popa
sbb
mov
test
movs
sub
add
vmread
add
adc
outs
mov
sub
or
mov
mov
add
xor
dec
mov
sahf
inc
push
jmp
inc
add
or
movs
inc
jb
inc
dec
fsub
ret
push
sbb
pop
sub
sbb
dec
jnp
es
or
cmps
sbb
mov
adc
ja
push
cmp
push
pop
jns
ja
das
push
inc
inc
in
pusha
std
pop
inc
jne
add
mov
mov
inc
cwde
or
sub
outs
inc
adc
ins
xchg
add
sub
cmps
mov
push
add
aaa
adc
test
jno
jg
outs
add
scas
daa
mov
push
mov
jp
imul
cmp
inc
cmp
aas
inc
inc
pushf
mov
dec
push
dec
push
cmp
cmp
and
fs
push
cli
xchg
cmp
leave
or
inc
mov
xor
or
xchg
je
ret
shl
mov
xchg
movs
add
dec
mov
and
push
aam
das
pushf
add
adc
jo
lea
inc
not
jl
or
add
add
pop
xor
fidivr
jno
push
das
mov
nop
(bad)
push
sbb
adc
pop
xor
stos
dec
out
sbb
cmc
xor
cmp
cmp
mov
push
mov
jmp
mov
sub
les
les
mov
ret
push
popf
addr16
pop
fisub
xor
sar
add
cs
cmp
jae
or
inc
mov
shl
adc
std
jmp
cmp
xor
adc
je
jne
ja
xor
lock
or
shl
mov
add
sbb
add
push
adc
aas
shl
hlt
leave
call
imul
fisttp
cmp
mov
and
(bad)
ins
sub
or
dec
jl
or
jl
out
adc
mov
dec
sbb
push
add
push
push
inc
nop
scas
cmp
mov
adc
sbb
mov
test
fidiv
clc
es
neg
add
pusha
jo
push
test
retf
pop
dec
retf
fdiv
in
add
cmp
mov
sub
nop
mov
mov
sti
xor
mov
add
iret
cmp
sbb
add
add
jp
mov
sbb
mov
mov
jl
add
jne
cdq
push
inc
pop
cmove
(bad)
ss
cmp
jo
sub
push
adc
add
xchg
mov
popa
mov
add
pop
ret
mov
push
lds
push
addr16
lea
jnp
loopne
cmp
jns
add
dec
add
add
mov
ss
cvttps2pi
mov
mov
lock
and
pop
lea
pop
pop
adc
adc
jge
nop
pop
lea
mov
addr16
fiadd
jecxz
inc
sbb
jge
xor
ret
jmp
mov
pop
inc
adc
inc
push
shl
sbb
aam
outs
data16
sub
xor
fdiv
jnp
movs
movs
sub
jbe
dec
js
pop
pushf
in
xor
jo
jbe
shl
jne
(bad)
es
int
fsubr
lea
dec
sub
das
std
adc
(bad)
iret
sbb
jae
or
mov
fild
add
mov
popa
jp
push
mov
and
mov
dec
mov
pop
mov
adc
shr
pop
addr16
leave
mov
aas
add
loope
lods
mov
fs
add
add
mov
adc
add
or
dec
cdq
dec
push
sar
and
fisub
dec
mov
adc
inc
mov
sbb
cmps
dec
dec
scas
dec
loop
ss
outs
add
cld
rcl
jne
inc
test
sub
outs
stos
sbb
or
je
pop
pop
dec
or
add
and
mov
fist
sub
sbb
ins
and
pop
cmp
add
imul
clc
push
outs
mov
ret
lahf
inc
cmp
dec
mov
mov
add
(bad)
pusha
jg
lods
sub
addr16
imul
outs
aas
sbb
inc
adc
sbb
out
imul
cmp
lea
rcl
out
cld
xchg
mov
push
dec
xor
hlt
pusha
and
js
movs
fisttp
adc
jns
mov
dec
mov
outs
loop
add
and
xor
aaa
push
ret
nop
mov
and
pop
sbb
sbb
push
or
gs
(bad)
cmp
shr
jmp
sbb
(bad)
rcr
retf
jl
adc
sbb
ret
mov
sbb
inc
jl
pop
out
test
out
cmps
mov
xor
fisubr
or
push
xor
sub
aaa
shl
gs
jae
aam
cmp
(bad)
pop
popf
add
dec
popa
(bad)
cld
or
pop
clc
cmp
ja
mov
sbb
push
out
push
mov
test
add
jbe
cmp
fstp
adc
inc
dec
xor
stos
js
loop
out
mov
jge
sbb
add
cmp
push
sub
and
inc
pop
jp
imul
push
sbb
lds
sbb
pop
add
jae
inc
add
repz
push
retf
and
arpl
out
sub
sub
(bad)
jbe
mov
cmp
out
inc
and
jmp
data16
add
loopne
add
xchg
xor
or
pop
mov
dec
jge
sbb
adc
pop
pop
xchg
mov
(bad)
lea
mov
les
inc
or
jle
add
or
or
loop
or
cld
ins
adc
mov
sbb
xor
(bad)
je
mov
ins
inc
pop
cmp
jns
out
movs
in
push
inc
dec
dec
hlt
and
dec
sbb
sub
loopne
push
pop
pop
and
add
cld
retf
rol
push
sbb
adc
ret
mov
push
fwait
stos
(bad)
mov
ins
xchg
enter
xor
jne
fdivr
lock
gs
ds
add
ja
pushf
repnz
fwait
outs
fidiv
(bad)
mov
inc
push
inc
data16
das
mov
add
push
cmp
aad
add
push
cli
add
clc
mov
sbb
std
imul
or
(bad)
push
add
inc
dec
jae
push
and
dec
or
cwde
inc
jns
repz
inc
adc
adc
sbb
dec
stc
stc
stc
stc
sbb
dec
and
pushf
dec
sub
loopne
cmp
sub
sbb
js
mov
mov
jbe
cmp
pxor
jmp
push
dec
pop
cs
ds
mov
out
or
ret
sbb
paddusb
xor
shl
xor
sbb
xchg
loope
pusha
cmp
imul
std
pop
fdivr
adc
adc
jns
jle
sub
in
xchg
clc
rcr
cmp
setp
cwde
pop
in
jle
cmp
bound
or
repnz
add
xor
fmul
repnz
lds
into
jmp
adc
xchg
ficom
(bad)
jg
aam
push
or
cmc
or
mov
fdiv
dec
sahf
jae
mov
xor
adc
cmp
push
or
aaa
mov
or
adc
cmp
cwde
idiv
sbb
ror
outs
pop
push
outs
ins
jle
sub
nop
mov
in
mov
call
dec
imul
jbe
xchg
daa
sub
bound
ror
cwde
sub
rcr
data16
ror
pop
scas
push
lock
iret
inc
xchg
dec
dec
inc
or
(bad)
je
xor
xchg
pop
ja
in
(bad)
push
pop
jo
data16
jns
jp
dec
push
sbb
pop
push
inc
neg
xchg
pusha
pusha
cdq
inc
or
dec
(bad)
or
jmp
inc
test
mov
mov
add
inc
out
fs
loopne
xchg
push
ins
sub
fsub
jle
out
xchg
fcom
inc
and
or
add
in
div
pop
mov
push
dec
adc
inc
pusha
mov
sub
mov
fisttp
lock
imul
aaa
add
(bad)
sub
inc
cmp
jae
loope
test
jle
iret
or
mov
inc
adc
shl
cmp
jp
aaa
inc
jl
mov
sub
add
add
add
sub
jl
js
test
lock
push
mov
test
jae
cmp
xor
std
cwde
cmc
or
call
dec
push
add
leave
ss
(bad)
sbb
add
add
pop
sub
pop
addr16
nop
inc
or
cmps
push
sub
adc
mov
or
cmc
add
sub
ss
(bad)
out
mov
jle
sub
(bad)
lods
leave
cmps
push
xchg
outs
mov
or
push
sbb
adc
into
repz
adc
sbb
pop
cmps
inc
lods
popa
push
jne
and
inc
(bad)
ds
adc
sbb
and
int3
pusha
sbb
cmp
sar
push
and
xchg
movnti
lods
loopne
xchg
inc
test
add
mov
inc
outs
adc
adc
mov
mov
sbb
ret
in
jmp
jb
add
or
cmp
sbb
sbb
mov
push
sbb
push
mov
int3
and
jno
fadd
aaa
or
daa
push
(bad)
es
add
js
add
(bad)
(bad)
pop
mov
pop
fscale
mov
adc
les
dec
jle
hlt
inc
push
xchg
test
mov
jle
jmp
add
inc
test
outs
pop
jle
jg
add
sub
adc
ds
(bad)
mov
push
pop
daa
das
sbb
outs
and
adc
sub
fbld
pushf
addr16
daa
mov
push
mov
iret
and
hlt
sbb
xor
shl
pop
test
and
push
push
jmp
push
mov
xor
adc
retf
push
jecxz
stc
clc
or
push
sbb
dec
and
jle
inc
(bad)
loopne
mov
adc
jne
push
sbb
dec
jle
cmp
mov
popf
in
mov
mov
mov
fisttp
inc
dec
pop
(bad)
xchg
mov
or
in
pushf
movs
mov
or
lock
lahf
je
jnp
not
out
mov
jge
mov
sbb
scas
enter
and
sub
shl
loope
adc
ret
fmulp
mov
inc
mov
cmp
mov
lock
test
mov
in
cwde
sub
pop
aas
jnp
or
mov
jb
loopne
inc
ror
leave
inc
imul
sub
xchg
sub
jmp
pushf
adc
xchg
cmps
loopne
pop
jmp
and
and
cwde
loopne
dec
add
scas
mov
cmc
jbe
test
inc
pop
xlat
sub
sub
or
adc
xcrypt-cfb
cmps
cmps
iret
inc
add
sbb
retf
js
out
cld
pop
mov
jle
sbb
mov
loopne
jno
ret
mov
sti
test
add
rcl
add
invd
jb
jg
mov
cmp
aam
popa
arpl
fbstp
fist
je
js
add
pop
fidiv
or
sub
or
cmp
js
add
aaa
stos
sbb
pop
or
add
les
lea
or
jg
ror
sub
or
mov
jmp
fnstenv
cmp
jne
inc
nop
test
out
out
jo
push
inc
dec
xor
xor
das
push
xchg
inc
jo
and
enter
pop
and
cdq
mov
add
add
or
nop
add
dec
ins
add
xchg
fild
leave
imul
sti
push
mov
dec
jo
iret
dec
lds
cs
dec
mov
jmp
add
call
xor
fld
rol
push
jns
adc
mov
jg
xor
push
cmps
lock
jle
adc
loope
lods
cmp
sbb
(bad)
imul
imul
loope
test
das
xor
cmp
lea
or
mov
jb
or
sbb
adc
adc
movnti
add
dec
add
pop
or
pop
int3
into
push
dec
add
add
jl
dec
mov
add
push
ret
add
std
or
mov
add
inc
arpl
adc
cmc
lea
mov
fst
movs
hlt
inc
cmc
popa
stos
mov
popa
mov
(bad)
cmp
hlt
push
test
sub
les
stos
ret
mov
(bad)
and
dec
aad
mov
push
inc
ret
daa
jmp
and
or
mov
mov
ror
or
test
and
daa
and
inc
push
mov
jmp
fs
push
dec
ins
sub
xchg
push
das
adc
fs
inc
push
outs
and
jle
call
and
push
pusha
xchg
xor
in
gs
sbb
pop
xor
adc
cmp
cmp
jns
mov
xchg
in
sbb
push
sbb
push
jne
cmp
jo
jmp
arpl
retf
je
or
adc
jo
jbe
aam
mov
sbb
dec
pop
data16
adc
repnz
ins
fadd
sbb
xchg
pop
pushf
sub
or
jmp
adc
inc
imul
lods
pusha
adc
leave
or
or
xchg
or
mov
xlat
jo
in
xor
and
push
push
aad
test
mov
add
jp
in
inc
retf
or
pop
mov
mov
iret
add
jbe
adc
jne
and
test
sbb
mov
call
sbb
xchg
or
loop
int3
pop
inc
ins
jne
pop
sbb
data16
and
xchg
cmps
cwde
loop
jns
imul
dec
scas
shl
pop
cs
nop
push
into
shl
mov
add
inc
enter
fwait
les
add
sbb
test
ins
sub
jno
pop
nop
xor
dec
inc
xchg
add
rol
add
inc
xchg
adc
and
jne
stos
dec
cmp
add
cmp
out
add
push
sbb
add
inc
or
loop
popa
test
in
and
xor
popf
xchg
cs
lahf
mov
ins
lods
mov
fcomp
daa
clc
jl
add
pusha
and
shl
inc
(bad)
mov
sub
arpl
inc
dec
iret
fs
mov
xchg
mov
add
cmps
adc
sub
neg
data16
mov
pop
cli
inc
or
shl
movs
inc
fisttp
push
dec
push
fdivr
dec
sbb
es
xor
mov
mov
sbb
and
pushf
inc
inc
pop
xor
pop
inc
inc
js
lea
inc
cmp
jmp
xchg
jo
hlt
je
shl
add
pusha
push
xchg
jge
xchg
adc
mov
jae
int3
mov
jecxz
mov
lea
xor
or
push
sbb
sbb
jge
js
daa
xor
push
adc
lock
mov
xchg
popa
xor
push
cld
mov
jmp
mov
dec
jae
mov
test
das
adc
or
add
imul
xor
adc
test
mov
pop
and
clc
ja
into
lea
push
out
fsubr
sbb
push
mov
xchg
clc
pop
mov
adc
add
or
jl
mov
mov
pushf
inc
(bad)
xor
dec
ret
dec
and
loopne
adc
mov
cmc
movs
push
call
retf
sbb
ss
lods
aas
mov
inc
mov
loope
out
lock
(bad)
sbb
js
shl
cmp
sub
jne
les
gs
nop
call
xchg
pushf
cmp
mov
and
push
or
jl
or
enter
sar
ins
and
mov
jp
aad
dec
test
ins
sbb
or
jo
ret
daa
sar
add
test
mov
inc
cmp
pusha
sbb
sub
cs
adc
mov
retf
adc
test
and
inc
xchg
ror
loop
shr
xor
sub
push
arpl
sub
xor
sub
lea
mov
xchg
xor
adc
adc
arpl
fiadd
mov
nop
add
xor
mov
div
pop
out
push
push
sub
xchg
ss
jge
lock
push
clc
cmp
jle
push
cmp
cmp
movs
push
sbb
mov
ret
popf
dec
adc
or
popf
mov
add
scas
shl
pop
inc
or
mov
mov
add
jecxz
mov
pop
fbld
xchg
add
repnz
cmps
pop
lods
adc
js
inc
mov
inc
xor
and
or
lea
imul
add
or
pop
dec
sbb
pop
das
int3
(bad)
pushf
or
add
ins
push
adc
pop
add
add
scas
dec
push
push
sar
mov
fsubr
stos
pop
add
loop
(bad)
lods
or
inc
adc
aas
adc
enter
jmp
inc
xor
push
pop
jmp
inc
out
and
sub
sub
pop
icebp
add
xchg
add
mov
sub
jl
popa
or
jo
sti
xchg
cs
or
adc
ss
rcr
mov
pop
cmp
das
mov
mov
or
sub
fisub
movzx
cmp
push
ret
inc
repnz
clc
(bad)
jge
test
jmp
out
je
add
jge
push
lock
sub
test
sar
mov
mov
fisttp
imul
xchg
(bad)
(bad)
mov
jle
out
push
add
mov
dec
xor
jmp
cmp
jmp
push
cmovl
jmp
sub
mov
lods
xor
repz
push
add
sbb
loopne
scas
pusha
lock
dec
sub
(bad)
mov
pop
movs
lock
adc
(bad)
sub
mov
sub
enter
and
mov
pop
xor
pop
sub
add
jo
pop
and
xor
outs
test
sub
call
and
loopne
clc
mov
retf
add
ret
out
cld
dec
out
call
xchg
adc
xchg
stos
or
retf
xlat
dec
inc
icebp
mov
push
jge
inc
cmp
push
xchg
or
pop
mov
dec
or
mov
in
sar
test
cmc
scas
sub
or
inc
(bad)
mov
adc
cmp
xor
dec
imul
mov
sbb
das
or
xor
jno
or
push
cli
or
jo
or
mov
mov
popf
or
loope
out
and
xor
js
adc
cmp
addr16
inc
rcl
(bad)
xor
dec
inc
dec
cmp
push
fndisi(8087
hlt
xor
and
cmp
and
jle
push
pop
int3
sbb
sub
ins
je
or
xor
or
dec
fs
pop
push
add
cmp
(bad)
push
ret
dec
ret
cmp
pop
jb
dec
inc
mov
jae
lods
addr16
frstor
addr16
push
in
mov
cmp
bswap
mov
ror
xor
scas
push
jbe
sbb
sbb
mov
mov
cmp
push
and
out
cmp
or
pop
cmp
movs
fisttp
adc
push
cmp
and
stos
sbb
popa
in
scas
into
fstp
jmp
push
movs
rol
stos
inc
push
mov
(bad)
and
add
cmp
xchg
call
and
cmp
pusha
dec
jl
icebp
xchg
sbb
movsx
and
jne
and
jl
fsubr
push
inc
call
pop
ins
inc
fistp
or
add
pop
cwde
mov
inc
repz
xchg
mov
push
ret
sbb
add
push
mov
sub
sbb
outs
xchg
cdq
fisttp
add
jb
pop
nop
sbb
(bad)
xchg
add
add
inc
add
jno
dec
in
xor
xchg
and
cmp
mov
sub
sub
sub
xchg
dec
jle
test
sar
pusha
sbb
push
dec
dec
mov
out
cmp
inc
rol
dec
xlat
inc
push
sbb
ret
pusha
jecxz
mov
bound
lea
sar
dec
or
cmp
dec
and
loope
addr16
movs
into
sbb
xor
(bad)
jmp
push
sbb
cmps
jge
fs
jmp
fsubr
out
push
lea
sbb
jecxz
sbb
aas
fucomi
or
test
inc
mov
sub
or
adc
sbb
pushf
push
fmul
pop
(bad)
std
or
jmp
cmovae
sbb
xchg
sub
sbb
lea
push
mov
pop
xor
rcl
xor
adc
mov
hlt
add
dec
(bad)
fld
push
mov
dec
xchg
jmp
retf
sar
mov
fcom
pop
js
mov
add
push
test
sbb
setg
mov
mov
add
rcl
sbb
xchg
pop
add
movs
add
rcl
pop
shl
enter
dec
push
movs
inc
ret
xlat
enter
push
adc
retf
sub
cld
imul
mov
xor
jo
(bad)
cmc
mov
sar
stc
test
pushf
lock
mov
push
and
jne
test
inc
retf
nop
sub
aam
xor
cmp
mov
cmp
fcomp
rol
push
fadd
or
push
in
and
stos
cmc
int
cli
jl
or
or
or
xor
lea
jnp
cmp
in
inc
inc
mov
neg
jbe
mov
mov
mov
lock
(bad)
outs
sbb
inc
lea
xchg
xchg
push
icebp
mov
sbb
mov
icebp
je
mov
and
sbb
cmp
jg
icebp
sbb
sub
add
inc
and
and
or
jge
cs
loopne
lea
mov
out
sub
(bad)
mov
add
shl
sbb
mov
inc
mov
inc
inc
or
std
inc
and
mov
dec
add
mov
adc
hlt
add
inc
cmp
or
int3
lock
add
daa
ror
sub
push
inc
retf
fmul
shr
(bad)
push
fsubr
ja
test
shl
mov
loopne
mov
leave
aaa
pop
test
loope
xchg
lods
xchg
jle
icebp
std
iret
les
mov
mov
inc
inc
jg
pop
push
xchg
sar
jg
adc
mov
pushf
inc
sbb
lock
loopne
mov
inc
sar
inc
mov
dec
jl
in
pop
xor
and
clc
movd
sbb
int
mov
cbw
pop
jl
fcomip
add
push
and
mov
fcomp
sbb
(bad)
loope
jne
cmp
or
sbb
push
sbb
sbb
and
add
movs
mov
adc
push
pop
shl
mov
sbb
add
hlt
loope
or
push
pop
or
mov
mov
add
push
cmp
add
xchg
bound
inc
xor
inc
jbe
inc
sbb
push
xchg
outs
fst
movs
adc
shl
and
mov
test
dec
into
jb
add
xchg
mov
or
sbb
popa
dec
or
jge
leave
adc
fnstcw
xchg
mov
push
jecxz
retf
jae
or
xchg
sbb
dec
mov
mov
inc
cmp
xchg
jne
mov
or
sahf
lea
push
inc
add
je
push
mov
dec
outs
fwait
addr16
sar
push
mov
lock
push
dec
cmp
jg
test
call
int3
dec
add
or
adc
and
jge
sbb
xchg
mov
adc
call
test
xchg
adc
inc
movs
add
lea
lea
sbb
push
repnz
sub
xor
pop
dec
cmp
pop
sub
dec
repnz
cmp
js
dec
adc
dec
sbb
lea
iret
mov
ffree
xchg
scas
mov
and
push
mov
xchg
es
dec
adc
jne
retf
mov
xchg
sbb
sbb
test
sub
push
(bad)
jge
push
ds
mov
retf
dec
push
enter
mov
mov
pop
push
jecxz
dec
repnz
ja
std
add
mov
sbb
xor
add
or
push
sub
and
sub
cmps
(bad)
cmp
mov
sub
pop
xor
xor
ret
(bad)
daa
ret
and
push
movs
inc
shl
call
aas
push
jmp
jmp
pop
clc
movq
cmovne
inc
ret
ror
and
push
xor
push
jb
sbb
adc
push
sbb
shr
jb
sub
mov
or
aaa
sub
sub
cmp
xchg
scas
xor
mov
inc
dec
fdiv
call
sbb
ja
dec
xlat
push
mov
call
out
test
nop
jbe
fld
adc
xor
lock
add
xchg
add
pop
in
mov
mov
in
test
jb
pop
loop
daa
adc
sbb
xor
or
xchg
mov
pop
imul
sar
std
cdq
pushf
jae
sar
or
sub
cs
dec
xor
pop
inc
push
sbb
inc
and
xor
xchg
add
and
sbb
inc
out
ret
in
inc
fadd
pop
add
sub
inc
sub
pop
cli
sbb
add
lea
push
push
and
dec
add
(bad)
jmp
sub
sub
jno
pop
jo
add
inc
pop
out
imul
ja
mov
add
sub
les
sbb
adc
or
mov
xchg
push
lods
addr16
int
clc
inc
movsx
sub
push
jne
loopne
add
xchg
push
xchg
(bad)
jo
mov
cmp
jbe
outs
dec
ins
call
test
add
and
icebp
shr
xchg
leave
adc
add
lods
(bad)
jne
mov
aas
icebp
pop
das
pop
sbb
or
mov
mov
mov
pop
add
push
add
lahf
(bad)
push
pop
mov
and
push
or
jge
adc
jmp
jno
ins
and
and
pop
in
sbb
pop
mov
pop
mov
and
mov
xor
arpl
xor
sahf
bound
clc
or
sar
gs
in
adc
inc
dec
(bad)
mov
mov
adc
and
mov
sbb
sbb
loopne
inc
xchg
je
inc
pusha
rol
adc
dec
or
inc
cmp
push
adc
add
aas
xchg
or
js
lahf
les
lea
js
psubd
mov
ror
adc
les
out
(bad)
fstp
xchg
adc
in
inc
xchg
sub
test
add
enter
ss
adc
and
cmc
lea
mov
mov
jo
jmp
gs
adc
fsub
pop
xchg
in
fcom
in
hlt
addr16
xchg
(bad)
in
xchg
enter
cmp
adc
dec
ja
mov
lea
push
pop
mov
lea
pop
lock
call
int3
cs
loopne
int3
scas
ret
mov
mov
or
xor
or
sbb
lock
sbb
repz
outs
push
sub
inc
ja
ins
mov
sub
push
(bad)
push
inc
les
sbb
das
add
push
add
adc
sar
add
sbb
cmp
pop
out
les
xor
xor
add
mov
retf
cmp
clc
push
jo
scas
push
jnp
cmp
ret
jl
xchg
cmp
jl
sbb
jle
and
jns
lods
and
adc
jp
pushf
pop
lock
sub
imul
sub
sub
in
mov
cs
nop
add
adc
nop
mov
pop
inc
loope
pusha
adc
mov
dec
jo
mov
inc
or
cmp
adc
dec
jl
jb
cmps
pop
loop
inc
mov
mov
cwde
add
cwde
push
popf
push
ja
or
addr16
push
fimul
lds
mov
mov
lea
push
jg
retf
fadd
sub
into
repnz
aaa
sar
ss
add
push
aad
jmp
int3
xchg
sbb
nop
mov
jns
push
inc
adc
xchg
div
and
push
cli
dec
mov
test
xor
aam
pusha
dec
jge
add
cmp
jp
add
mov
jne
inc
sbb
fwait
icebp
ja
and
mov
mov
gs
inc
repnz
leave
fiadd
push
aam
or
cmp
jmp
cmp
dec
aas
push
fdiv
jmp
ret
and
inc
mov
xchg
and
(bad)
stos
mov
sbb
sbb
add
inc
inc
es
ror
or
mov
jb
loopne
fadd
ss
je
jb
mov
or
or
add
push
adc
cmp
push
call
and
mov
icebp
enter
inc
loopne
push
add
sub
push
in
jo
xor
sti
aam
(bad)
xor
aas
inc
adc
fistp
mov
sbb
push
les
add
pop
les
mov
or
les
and
sbb
add
and
sahf
inc
pop
pop
pop
inc
(bad)
or
cld
or
jmp
sbb
je
inc
adc
in
inc
sub
je
movs
inc
jb
ins
sub
adc
mov
sub
das
loop
gs
test
jno
test
into
dec
lea
arpl
add
or
or
shl
pop
adc
and
imul
rol
mov
out
adc
test
pusha
sbb
fdivr
adc
or
jno
aas
xor
jne
rcl
and
popa
clc
adc
and
sbb
add
sbb
add
jne
mov
sub
js
aaa
inc
loop
mov
clc
cmp
jne
sub
in
dec
psubb
movs
ja
or
jl
imul
jl
ret
ja
iret
xchg
xor
std
js
or
or
add
js
and
sub
cdq
sar
aad
adc
adc
push
add
aaa
add
dec
adc
cmp
adc
retf
mov
rcl
inc
jbe
adc
aam
mov
fcomi
inc
repnz
or
in
bound
push
js
xchg
mov
add
pop
sbb
clc
arpl
cmp
xor
pop
mov
cdq
mul
jge
dec
push
jecxz
inc
cdq
ret
sub
or
pop
lock
xchg
adc
fld
movs
retf
mov
mov
or
xchg
jns
and
leave
xchg
adc
mov
cmc
or
sti
pop
pop
aas
imul
leave
dec
dec
push
dec
inc
add
add
(bad)
out
rol
add
push
mov
xchg
inc
ret
les
test
inc
cli
or
sub
lock
inc
pop
in
pushf
push
add
and
adc
or
fisttp
aam
xlat
xor
mov
pop
xchg
pop
push
cdq
inc
js
adc
and
mov
pop
or
out
call
or
sbb
dec
dec
jge
inc
jns
movs
fcmovb
inc
xchg
icebp
jl
lock
ins
retf
pop
mov
out
push
ror
out
rcr
mov
cmp
pushf
jp
scas
push
pop
rol
fisttp
sub
outs
cmps
push
lock
jge
push
mov
add
add
inc
rcr
pop
sbb
out
add
jnp
cdq
dec
jl
jge
ret
sbb
das
xchg
mov
xchg
in
hlt
dec
js
adc
and
cdq
ret
mov
or
movs
leave
mov
dec
mov
mov
pop
lahf
adc
dec
xchg
sub
es
adc
clc
inc
sbb
mov
pop
push
aaa
push
dec
loop
push
ja
lds
mov
rcr
pop
mov
mov
adc
test
mov
mov
push
pushf
or
push
mov
jnp
cmc
mov
mul
addr16
mov
xor
mov
outs
(bad)
push
(bad)
dec
rol
xchg
mov
ret
jge
mov
dec
add
dec
mov
jl
test
xor
inc
in
jno
and
cmp
or
repz
les
xor
cmp
fiadd
retf
outs
adc
sti
and
inc
jns
inc
adc
xchg
cdq
aam
call
mov
add
mov
xor
ficomp
shr
cmps
xchg
cld
jmp
in
add
add
loopne
dec
dec
ret
ret
pop
inc
ror
or
lock
fsubr
rcr
ja
mov
clc
pop
add
and
push
movs
jnp
std
or
adc
or
xchg
inc
lahf
jl
xor
or
and
sbb
xor
add
mov
pusha
jo
or
jmp
mov
cmp
jle
cmp
dec
dec
and
and
pop
lods
mov
ret
enter
push
inc
stc
(bad)
ins
pop
js
jno
(bad)
jl
test
mov
jo
les
nop
ins
adc
aas
loop
and
or
push
dec
sub
mov
add
jp
mov
add
push
push
cmp
outs
test
movzx
add
sub
cmp
add
ja
inc
mov
add
in
mov
mov
or
xchg
dec
aas
in
xchg
test
sub
mov
or
sbb
(bad)
es
jb
(bad)
in
dec
lock
lock
inc
sti
push
mov
pop
or
mov
les
dec
sub
imul
inc
jg
inc
cmp
adc
hlt
sbb
not
lahf
inc
pop
ja
lock
test
cmps
xchg
or
jb
lods
aaa
int3
add
and
add
or
ret
into
aaa
cmps
xchg
sub
inc
cmp
mov
bound
sbb
sub
inc
retf
int3
xor
push
in
jge
icebp
push
add
retf
(bad)
or
push
and
cwde
mov
mov
jecxz
jecxz
xor
dec
adc
aas
push
adc
mov
dec
lea
cld
hlt
pop
mov
loope
movnti
cmp
xor
fdiv
(bad)
shr
jl
jno
enter
jns
retf
lds
dec
in
fsub
mov
cdq
daa
lahf
xor
daa
(bad)
mov
pop
add
mov
mov
mov
test
sub
mov
aam
mov
ficom
cmp
iret
mov
sub
push
or
cmps
xor
pop
retf
mov
in
sbb
dec
cmp
cmp
add
mov
imul
jmp
push
out
mov
and
push
and
xchg
loope
sbb
xchg
es
xor
add
sti
je
loop
cmp
mov
lods
jmp
imul
inc
fsub
push
cs
rol
push
cmps
mov
fadd
cmp
mov
rcr
rcl
add
xchg
arpl
jns
cmps
and
push
inc
push
mov
rcl
mov
jnp
ins
aam
adc
or
pop
pop
inc
adc
mov
enter
movs
(bad)
dec
lods
mov
add
shl
pop
repz
cmp
js
jmp
dec
ret
pusha
push
inc
aam
mov
sbb
push
and
loopne
xchg
or
loopne
pop
jmp
mov
inc
ret
or
cmc
fimul
js
sbb
scas
fidivr
add
cdq
sbb
in
mov
test
ror
add
or
sbb
ins
pop
rcr
jne
das
dec
(bad)
movs
or
fdiv
add
mov
xchg
sbb
(bad)
inc
and
add
dec
mov
shl
xor
pop
ja
push
retf
adc
adc
or
jmp
jo
test
push
and
push
jnp
push
add
js
in
(bad)
lods
dec
(bad)
fnstenv
les
and
jbe
test
mov
dec
pop
sub
es
je
mov
or
aam
xor
sti
sbb
cmp
jmp
cdq
lea
inc
(bad)
jns
loope
sahf
cmp
mov
bound
lea
xchg
(bad)
fisttp
jns
push
push
push
dec
inc
or
inc
cmc
in
(bad)
push
data16
inc
(bad)
and
inc
imul
pop
add
pop
mov
add
mov
xchg
pop
sub
add
aaa
pop
cmps
dec
mov
or
aam
cmp
lock
mov
add
outs
in
push
sbb
adc
cmp
push
push
or
(bad)
sahf
sub
aaa
or
push
push
scas
sar
shl
jle
neg
add
sub
inc
add
adc
xor
adc
imul
adc
inc
into
push
ret
mov
js
pop
loop
out
aas
sbb
xchg
jo
cmp
jge
ret
fidiv
jbe
inc
sub
dec
push
xchg
adc
dec
in
and
nop
cmps
xor
and
and
xor
or
or
or
js
les
ss
popf
adc
adc
cmp
xchg
cmp
jle
push
leave
sub
add
mov
jg
mov
enter
xor
cmp
jg
(bad)
sahf
add
dec
inc
mov
push
aas
cmp
pop
sbb
cmp
or
enter
or
fcom
jge
inc
jl
rol
jle
fiadd
sar
dec
jne
mov
or
xchg
pusha
call
inc
sub
or
lea
mov
cli
adc
stos
loope
push
inc
cld
mov
jle
mov
mov
sub
shl
inc
call
add
call
mov
add
xchg
and
adc
push
fs
xor
sbb
lahf
cmp
imul
dec
xchg
cmp
fmul
rcr
or
retf
mov
sbb
(bad)
dec
push
xchg
sbb
or
sahf
cdq
icebp
jmp
inc
aad
movs
mov
mov
xor
sbb
push
dec
cmp
or
pusha
xchg
ffreep
fcom
sbb
xor
mov
sub
into
mov
sub
les
cmps
dec
add
add
sub
imul
mov
add
sar
add
inc
in
jmp
sub
(bad)
enter
inc
sti
loopne
test
inc
adc
inc
add
inc
or
out
inc
push
daa
iret
add
retf
push
jno
dec
adc
dec
sbb
dec
or
adc
ja
test
scas
cmp
neg
mov
and
mov
inc
adc
cwde
retf
pop
pop
mov
js
fiadd
inc
push
jmp
adc
ja
sub
stc
or
or
push
fcmovnb
pop
adc
(bad)
aaa
shl
xor
pop
adc
int3
test
out
push
jns
inc
ficomp
jae
add
and
inc
mov
je
dec
cmps
test
mov
adc
(bad)
jmp
jecxz
mov
jnp
lods
mov
or
out
jmp
sub
adc
adc
xor
sbb
inc
adc
call
sub
and
in
adc
sbb
lds
jb
push
pop
pushf
pop
movs
sub
adc
or
or
and
stos
dec
jbe
or
jno
repnz
or
adc
cmp
call
iret
cli
jae
jl
pop
adc
pop
inc
mov
shl
in
test
js
lea
in
add
add
mov
cmp
jle
mov
add
jo
adc
sar
mov
add
sbb
adc
popf
add
cmp
popf
or
xor
sub
sub
shr
adc
out
fcmovbe
retf
add
das
fld
notrack
push
cmp
or
pop
(bad)
pop
sbb
push
aam
aas
mov
push
into
adc
push
mov
aas
or
or
dec
icebp
sub
mov
add
ja
inc
mov
inc
sub
mov
dec
adc
push
loop
adc
(bad)
sti
sbb
and
repz
mov
push
test
lock
in
fdivp
(bad)
(bad)
imul
lahf
in
inc
adc
sub
fmul
xchg
test
aam
xor
ins
loope
nop
mov
outs
mov
dec
enter
imul
fdiv
fadd
xor
cwde
rcr
xor
xor
arpl
xchg
ret
sub
rcl
repnz
jmp
xor
dec
xor
cld
sbb
xor
or
mov
inc
clc
jge
clc
sub
inc
pop
aaa
and
lock
ja
retf
jmp
inc
in
cdq
inc
xchg
xchg
jle
clc
and
jno
sbb
fcmovne
or
ror
sbb
fild
mov
inc
or
ret
jnp
jg
outs
push
dec
aam
mov
dec
aam
iret
or
pop
add
out
jmp
aas
jne
add
push
or
aad
push
aam
pop
mov
inc
mov
loop
test
or
and
or
pop
test
xor
add
mov
jge
popf
rol
or
les
loop
ficom
fldenv
jnp
sub
bound
dec
or
add
push
mov
and
sub
jne
in
xlat
ret
xor
jmp
pop
sub
lea
(bad)
fstp
lahf
jno
inc
pop
add
push
or
ds
lods
out
adc
retf
xchg
sahf
pop
enter
add
add
mov
es
sub
push
pop
push
jg
test
adc
(bad)
aam
out
sbb
sbb
and
jg
fnstenv
lods
dec
cmp
jge
mov
imul
jg
jge
mov
add
mov
pinsrw
stc
cmp
jno
mov
jge
add
pusha
or
mov
sahf
and
aam
sub
jge
or
adc
mov
jae
fiadd
xchg
mov
enter
jne
imul
xchg
jge
add
jae
clc
push
push
pop
or
cs
out
out
shl
jns
sbb
cmp
mov
enter
rcl
jle
inc
out
in
mov
sti
adc
addr16
arpl
imul
dec
imul
jmp
add
fild
cwde
(bad)
retf
and
and
inc
jns
pop
sub
cli
out
inc
jecxz
mov
rcr
outs
fcom
adc
fld
mov
in
test
pusha
dec
mov
mov
arpl
pop
mov
mov
(bad)
ja
adc
cli
add
les
fdivr
dec
sysenter
sub
add
push
je
add
prefetcht1
sbb
int
sub
lock
push
xchg
jp
dec
aaa
cmp
cmps
jl
adc
in
ja
xchg
(bad)
loop
jno
mov
pusha
clc
test
mov
sahf
gs
lods
sub
cdq
sbb
add
mov
xchg
dec
pushf
or
lods
cmc
jae
xchg
call
xchg
inc
mov
data16
or
mov
pop
jmp
aas
and
xchg
push
mov
test
ret
shl
out
retf
mov
xchg
and
jmp
imul
push
ror
jmp
pop
pop
pop
push
adc
jbe
mov
sub
mov
add
xor
jmp
or
dec
shl
in
push
das
add
inc
or
sbb
fistp
add
pop
push
inc
add
repnz
push
inc
loope
test
inc
ret
not
cmp
repnz
(bad)
adc
jle
pop
xchg
sti
cmp
sbb
mov
jmp
xchg
and
cmp
jns
dec
(bad)
(bad)
lods
jns
mov
push
adc
cmp
adc
push
adc
cmps
add
add
ss
loopne
and
sbb
mov
push
sbb
ds
out
loop
fnstenv
sub
into
test
xchg
cmp
add
pop
or
add
pop
push
loopne
rcl
sub
mov
cwde
shl
jp
sbb
add
mulps
inc
adc
adc
cmp
cmp
jne
ss
cwde
push
fadd
lock
(bad)
push
push
mov
fimul
cmp
adc
iret
repnz
pop
push
aam
fcom
fcomp
mov
adc
ret
adc
add
or
cmp
sar
sar
mov
jb
lods
pop
mov
dec
mov
rcr
sahf
js
repz
cmps
xchg
mov
or
cld
pop
es
pop
push
js
mov
imul
inc
sbb
mov
neg
mov
neg
mov
mov
add
adc
sbb
wrmsr
jge
in
pop
mov
cmp
ss
test
and
xor
movs
pusha
(bad)
dec
jl
pop
jbe
sbb
call
pushf
mov
popf
lods
add
test
dec
add
cwde
push
pop
sahf
mov
sbb
xchg
add
sub
jb
adc
cmp
repz
adc
xchg
scas
cmps
test
retf
mov
mov
mov
imul
int3
lods
ror
cmp
(bad)
fld
aam
sti
push
cmp
hlt
pop
gs
jle
add
lea
pop
lods
test
mov
xlat
push
xchg
not
sub
or
cmp
inc
push
xchg
push
and
lock
jmp
mov
push
pop
xor
sbb
pop
or
inc
adc
loop
pusha
pushf
out
mov
or
loopne
lock
aam
inc
or
movs
or
aam
sub
mov
jnp
or
add
loopne
sbb
sub
popf
fadd
add
inc
xor
stos
jnp
xchg
adc
mov
and
adc
or
cmp
xor
add
mov
ja
stc
sub
or
add
pop
cld
dec
cmp
xchg
ret
add
and
daa
loope
push
bound
arpl
xchg
mov
jle
sub
loope
pop
push
jns
and
xchg
mov
mov
adc
mov
retf
(bad)
outs
hlt
mov
mov
push
adc
sti
(bad)
das
fdiv
push
mov
out
cli
mov
test
retf
add
mov
pop
scas
mov
push
movs
pop
push
cmp
mov
pop
xor
ror
and
rol
push
add
inc
pusha
and
and
xchg
push
or
mov
and
shl
leave
xor
loopne
movs
cmps
adc
cmc
and
add
add
test
ret
mov
jno
inc
add
test
cmp
cmp
sub
sub
jp
pop
pushf
inc
into
cmps
and
or
jl
sbb
mov
inc
mov
mov
adc
or
test
add
inc
adc
sar
mov
dec
adc
stc
add
mov
idiv
(bad)
pop
cmp
sub
push
adc
inc
ss
pop
dec
inc
ss
rcr
popa
test
test
jne
out
ror
repnz
stc
mov
sbb
pusha
mov
cwde
sar
add
jecxz
call
nop
ins
sbb
or
(bad)
fmul
imul
jle
js
mov
add
sbb
sub
mov
mov
dec
repnz
mov
dec
and
xchg
adc
inc
in
xor
inc
rol
cmps
test
mov
add
lods
mov
jg
dec
(bad)
xchg
jo
mov
sbb
mov
and
dec
loope
xor
retf
out
add
mov
inc
inc
enter
inc
ror
sbb
ret
pop
gs
lea
mov
js
sub
add
add
daa
dec
mov
shl
jmp
pop
clc
ss
push
rcr
daa
test
mov
inc
adc
sub
pop
cmp
xor
xor
sub
fwait
and
stos
adc
dec
out
mov
lock
sahf
out
push
lahf
mov
sbb
mov
je
and
mov
jp
push
push
adc
cmp
xchg
and
or
sub
or
xor
test
mov
dec
xchg
cmp
add
(bad)
stc
fist
call
or
xchg
jp
(bad)
jne
pop
cs
or
pop
push
xchg
mov
loopne
xchg
mov
dec
add
dec
ror
and
les
movs
and
pop
xor
and
mov
int
sbb
xchg
jmp
xchg
cdq
sbb
mov
(bad)
push
push
sub
mov
mov
fistp
mul
mov
jb
cmps
dec
add
or
retf
sub
pop
pop
mov
hlt
dec
das
idiv
fadd
retf
mov
cwde
iret
xor
or
sbb
packsswb
jnp
mov
adc
sti
pop
mov
or
pop
cmps
jns
mov
mov
test
xchg
aas
xchg
cmp
lock
jnp
cmps
leave
jno
jmp
jnp
lahf
xchg
pop
mov
pop
nop
push
adc
add
mov
clc
inc
stc
pop
dec
and
mov
add
ret
sbb
inc
and
mov
cmp
aam
retf
jle
jge
mov
int3
pop
sub
cs
cmp
pop
enter
sub
movs
add
addr16
rol
mov
inc
dec
(bad)
mov
mov
dec
adc
ret
fisub
pop
cmp
(bad)
test
push
push
push
mov
sbb
or
mov
mov
les
sub
stc
adc
xchg
lods
or
add
xchg
mov
adc
cdq
movs
out
bound
enter
lahf
pop
scas
or
mov
xchg
add
mov
fs
inc
and
mov
push
rol
adc
repnz
xor
jmp
pusha
out
sub
jp
add
sbb
sub
sar
add
nop
cmp
sub
adc
out
xchg
cmp
and
ret
jno
je
dec
sbb
mov
inc
pop
or
add
cmc
mov
pop
cwde
jmp
ins
inc
movs
ret
stc
call
inc
hlt
xor
jmp
mov
call
enter
mov
dec
mul
mov
sahf
in
out
ret
sbb
push
dec
xchg
sbb
jmp
cmp
jnp
add
and
dec
jl
adc
in
out
mov
add
mov
loopne
jl
ds
mov
sbb
add
xchg
into
and
(bad)
fsub
pop
shl
cmp
inc
add
cmp
(bad)
cmp
adc
fs
mov
push
(bad)
call
inc
add
mov
adc
xchg
dec
lea
mov
cwde
mov
test
lock
adc
push
push
sbb
dec
addr16
dec
ss
push
and
pushf
push
retf
or
scas
pop
xor
mov
xor
xchg
hlt
xor
sbb
push
aam
sbb
mov
loopne
or
xor
push
inc
inc
test
mov
jge
cwde
or
pop
xchg
sysret
push
pop
dec
jl
mov
push
sbb
sbb
inc
or
and
inc
icebp
or
inc
les
dec
xor
jmp
jo
mov
ds
jge
mov
sbb
add
xchg
jno
lods
or
inc
xlat
lods
xor
sub
(bad)
dec
mov
js
and
and
jo
adc
sbb
cmp
pop
mov
mov
mov
mov
push
add
adc
mov
push
cmp
call
mov
sub
enter
mov
cwde
jl
daa
jne
mov
push
jbe
scas
pop
movs
fimul
dec
stos
aad
fmul
inc
test
lods
xor
adc
arpl
push
or
sub
je
retf
loop
cmp
enter
xor
fimul
repnz
or
pop
jmp
adc
idiv
pop
adc
inc
lea
xchg
push
add
test
nop
add
inc
push
hlt
sub
test
test
in
xchg
lea
cmp
outs
jecxz
cmp
das
dec
mov
jmp
icebp
into
aad
pop
or
dec
jmp
or
mov
or
push
into
and
cli
or
add
adc
outs
movs
rcl
stos
push
and
retf
and
and
dec
xchg
or
ret
xor
sub
adc
(bad)
fstp
cwde
xchg
add
cmp
jmp
adc
mov
sbb
dec
sub
popf
mov
sbb
mov
ret
jae
add
push
or
and
in
dec
mov
mov
mov
dec
adc
ror
ins
xor
test
fisubr
pop
or
ret
int3
push
pop
inc
inc
mov
inc
inc
inc
jmp
cmps
sbb
out
and
sub
arpl
outs
test
lods
sub
push
inc
fmul
or
xor
imul
fs
pop
out
mov
and
sub
inc
mov
inc
sbb
xchg
outs
movs
inc
and
mov
inc
mov
data16
mov
cdq
xchg
adc
add
cmp
ja
imul
daa
push
jbe
cmps
adc
(bad)
xor
cli
jl
ds
sbb
xor
adc
xlat
mov
in
jae
cmp
test
add
test
jmp
cmp
or
dec
and
dec
and
mov
dec
sti
retf
push
mov
push
push
cmps
popa
jae
or
mov
adc
mov
sahf
push
sti
push
dec
aas
mov
loopne
nop
jmp
fs
xchg
sub
cmp
jmp
adc
xor
or
adc
or
dec
mov
and
or
jo
add
mov
dec
(bad)
mov
inc
xchg
push
push
pop
nop
adc
add
pop
out
imul
cwde
inc
push
jmp
dec
call
sub
pusha
mov
push
int3
xchg
cmp
fst
in
adc
gs
retf
jbe
aaa
inc
push
sysexit
add
mov
sub
sub
xchg
inc
fadd
fsub
add
dec
mov
test
xor
xor
inc
mov
push
and
or
ja
push
mov
pop
dec
lods
add
mov
mov
push
je
test
(bad)
mov
add
repnz
lods
leave
jnp
cmp
mov
es
ret
lock
xchg
cmc
push
ds
test
fistp
push
pop
mov
push
cmc
ret
or
sub
bswap
dec
or
mov
push
js
sbb
setp
add
inc
xchg
cmp
xchg
jl
and
and
xchg
sub
sub
sub
or
test
jl
pop
mov
jb
pop
push
shr
xchg
hlt
xchg
out
or
inc
daa
cmp
popa
mov
jmp
sub
dec
pop
or
fsub
cmp
adc
call
daa
xchg
je
test
or
into
enter
inc
add
and
xor
xor
test
cdq
mov
mov
add
shr
ret
push
push
pop
dec
shr
and
cmp
pop
mov
xchg
daa
lea
mov
dec
cmp
or
and
push
mov
inc
das
cmp
nop
and
shr
je
mul
pushaw
pusha
arpl
pushf
cmp
pusha
jnp
in
lea
and
cs
dec
push
pop
push
das
ja
mov
and
loop
add
mov
or
xor
mov
pop
mov
push
pusha
xor
movs
cmp
adc
loopne
test
dec
sbb
jl
sti
dec
xchg
sbb
jg
rcl
push
add
les
mov
inc
xlat
(bad)
mov
adc
icebp
mov
ins
adc
or
lock
ret
fstp
(bad)
lahf
and
pop
xor
mov
inc
xor
xor
inc
test
inc
adc
rol
dec
pop
and
inc
cwde
or
mov
adc
add
push
mov
popf
adc
repnz
sbb
les
push
add
dec
adc
pop
jmp
xor
enter
test
lahf
fadd
fnstenv
jl
add
or
pushf
sbb
fidiv
inc
jmp
or
pop
add
neg
inc
je
iret
and
add
mov
cmp
pop
jo
nop
xchg
push
xchg
and
mov
add
sbb
bound
pushf
jmp
cmp
sbb
cmp
mov
sub
ja
sbb
mov
jmp
mov
push
mov
outs
jb
sub
fwait
inc
jge
push
push
retf
mov
loop
dec
scas
pop
ret
or
xor
ins
jmp
inc
sub
loope
xor
imul
cwde
pop
sub
jns
push
fmul
mov
lahf
inc
je
push
adc
addr16
adc
adc
dec
jmp
or
cwde
jmp
push
add
cmp
lock
retf
cmp
or
inc
push
sub
push
adc
(bad)
fwait
aas
sbb
cmp
xor
push
mov
or
pop
cli
sub
cmp
inc
and
fistp
sbb
xchg
push
push
out
test
es
es
pop
sub
in
jae
shl
and
pop
xchg
mov
xor
ja
dec
or
mov
add
shr
(bad)
cmp
or
std
mov
jnp
outs
or
cmc
or
outs
js
inc
mov
pushf
and
fmul
push
pop
stos
adc
sbb
and
inc
dec
adc
lods
mov
or
inc
mov
add
arpl
repnz
(bad)
shr
xchg
test
and
and
or
dec
xor
mov
dec
push
fsubr
and
jge
bound
push
mov
pop
sbb
pop
or
mov
dec
je
and
mov
jl
leave
test
(bad)
jo
iret
add
push
jo
or
jne
sbb
mov
and
rcr
sbb
adc
sar
fcomp
cmp
sub
add
cwde
sub
dec
jecxz
mov
sbb
call
xor
add
movs
push
mov
ret
jne
daa
icebp
sbb
sbb
cmps
outs
out
dec
xchg
icebp
mov
mov
mov
mov
jp
fiadd
clc
frstor
sti
and
sbb
dec
dec
scas
not
jmp
adc
sbb
sub
xchg
out
sbb
shl
lea
mov
lea
add
adc
shr
sub
cmc
sti
aad
mov
fmul
mov
jp
cmp
fistp
shl
jecxz
or
dec
cmp
retf
push
call
push
repz
pop
push
cmp
mov
pop
lea
retf
shl
pusha
cli
arpl
xor
or
sbb
inc
sub
xor
inc
mov
test
mov
jle
push
and
rcr
xor
inc
jmp
arpl
inc
add
pusha
in
int
je
outs
push
pop
xchg
jl
sbb
push
push
pusha
fs
pop
or
push
jmp
add
stos
aaa
and
ret
movs
dec
add
mov
pop
dec
xor
scas
adc
call
xchg
sbb
add
fidivr
push
push
dec
inc
mov
sbb
mov
cmps
sar
out
add
pop
adc
push
or
or
div
je
(bad)
xlat
(bad)
enter
in
pop
adc
push
(bad)
fmul
test
push
and
xor
cdq
add
sub
mov
and
push
aaa
call
clc
xchg
jbe
inc
clc
lds
mov
(bad)
jne
dec
in
xor
repz
inc
in
lea
pop
and
jle
nop
test
jo
dec
or
push
aas
push
xchg
or
or
movq
ja
push
loop
xchg
(bad)
pop
pop
dec
push
cmp
add
lea
arpl
or
mov
jg
aaa
dec
call
add
mov
dec
xor
add
jns
xchg
popa
(bad)
pop
cli
cmp
jbe
and
sbb
and
mov
enter
sar
push
mov
add
mov
sbb
xor
mov
or
mov
or
adc
cmp
ins
lea
fld
dec
rol
push
hlt
js
mov
push
stos
sar
aad
jg
ja
pop
inc
adc
pop
loopne
or
fistp
adc
and
add
pop
push
add
jmp
jo
sub
fnsave
push
dec
mov
push
add
adc
jnp
inc
jecxz
sbb
gs
(bad)
mov
or
fiadd
mov
and
xchg
push
jno
aas
aam
inc
mov
fadd
mov
idiv
dec
xchg
aam
pop
call
add
mov
inc
int
sbb
or
call
fcomp
xlat
xchg
adc
adc
adc
add
hlt
push
sti
adc
(bad)
xor
mov
out
out
in
in
jbe
mov
hlt
pop
fwait
inc
sub
test
int3
cmps
inc
lea
mov
ja
pop
in
jp
cwde
jns
jge
add
pop
fdiv
rol
ja
(bad)
mov
sbb
jecxz
les
hlt
jge
mov
sbb
std
sub
in
and
add
sub
cmps
mov
test
clc
outs
push
mov
or
ja
push
push
adc
(bad)
movs
arpl
out
cmp
jnp
sub
push
shl
jg
add
dec
punpcklbw
xlat
adc
loopne
rcr
stos
loop
sub
mov
fwait
dec
dec
and
jmp
(bad)
js
sbb
and
pop
jp
mov
call
cld
adc
inc
shl
jo
mov
dec
xor
call
push
cmp
outs
adc
mov
xor
xchg
jbe
push
inc
sub
add
cdq
sub
jbe
pop
sbb
push
pop
sbb
ins
push
sub
push
pushf
mov
push
jo
sbb
inc
add
int3
(bad)
jae
xchg
ss
push
jle
jmp
mov
push
push
das
adc
stc
test
push
shl
jo
loopne
or
mov
cmp
jmp
xchg
dec
adc
jae
cwde
dec
inc
daa
fwait
push
xchg
sbb
or
jo
loopne
push
sbb
xchg
test
ds
dec
fistp
cli
(bad)
push
cmp
or
icebp
sbb
xchg
imul
mov
mov
lea
xchg
rcl
ror
pop
pushf
jne
or
jae
ins
xor
mov
inc
gs
pop
pusha
or
push
fild
add
fsubr
sbb
mov
or
or
and
adc
int3
loopne
add
fistp
and
dec
inc
adc
inc
fdivr
mov
outs
cli
pop
hlt
pusha
shl
imul
adc
fsub
daa
(bad)
jns
clc
lock
lock
mov
xor
cld
fldenv
mov
mov
repnz
in
adc
and
in
xor
call
push
pop
pop
in
out
retf
sbb
loopne
call
repnz
les
cwde
sub
mov
xchg
mov
xor
rcr
int3
fld
gs
sbb
pusha
sbb
cmps
mov
in
adc
call
out
in
cld
sbb
inc
fwait
mov
or
pop
and
pop
fwait
inc
sar
arpl
pop
inc
adc
or
fisub
pop
sub
pop
and
movs
mov
dec
cmp
outs
xchg
inc
mov
jns
jmp
sub
add
pop
sbb
test
or
sbb
mov
repz
arpl
repz
int
xchg
adc
adc
sbb
outs
sbb
les
lahf
xchg
adc
xor
das
and
mov
add
mov
les
dec
pop
in
sub
push
aaa
sub
cmp
add
mov
mov
fwait
pop
cwde
and
dec
inc
inc
iret
les
stos
sbb
xchg
inc
repz
aas
pop
sub
aam
mov
jne
daa
rol
inc
xchg
cdq
xor
test
fdiv
xor
add
mov
ficom
pop
xor
inc
push
push
dec
pusha
dec
inc
xchg
pop
inc
mov
sti
lods
mov
imul
jns
repnz
stos
and
ror
mov
shr
aad
fld
jne
dec
lock
stos
sar
in
inc
dec
repz
pop
and
pusha
adc
dec
mov
push
adc
lahf
add
sub
pop
out
mov
in
sbb
in
imul
add
push
test
lea
cmps
hlt
sbb
sub
xor
out
dec
repz
xor
mov
not
mov
mov
pop
xor
outs
lock
lahf
js
fdiv
sub
clc
inc
cld
arpl
add
loopne
jge
repnz
ror
(bad)
mov
fisubr
mov
sti
shl
sub
or
(bad)
movs
hlt
out
enter
adc
add
sub
inc
fdivr
into
add
xor
adc
mov
ins
jecxz
loopne
fmul
inc
imul
mov
mov
sub
and
inc
sbb
and
or
push
or
and
cmp
dec
push
les
(bad)
push
lock
push
les
xor
and
ds
enter
scas
dec
ret
sahf
and
pop
out
inc
out
cmp
loop
add
pushf
xchg
add
push
outs
gs
xchg
test
jbe
xchg
push
pop
stc
lock
jge
ror
call
add
mov
sbb
sub
jns
retf
dec
inc
fldenv
dec
add
dec
jo
and
cmp
sbb
mov
adc
push
sbb
in
sbb
pop
pop
dec
jno
out
in
fisubr
add
dec
enter
outs
sub
sub
push
ins
jns
or
xchg
pushf
in
inc
popa
enter
or
adc
xor
mov
mov
jmp
ja
in
test
cs
les
adc
inc
cmc
test
jbe
mov
repz
jnp
or
cmp
cdq
movs
pop
call
dec
mov
dec
sbb
cmp
cmp
frstor
mov
push
les
jne
aad
pop
iret
inc
and
out
cmps
or
mov
in
icebp
shl
outs
outs
sahf
push
or
loop
lea
add
not
das
jmp
mov
out
neg
idiv
jecxz
shr
or
cmps
add
fwait
push
jo
in
jns
xchg
test
hlt
push
mov
lock
sbb
adc
sbb
hlt
xor
fimul
adc
add
sbb
mov
mov
rcl
call
jle
cmp
jae
neg
and
jne
ret
mov
in
pop
dec
push
in
int
sub
daa
js
(bad)
jl
js
psrlq
test
ja
cld
add
icebp
or
xchg
sbb
push
sub
clc
and
test
add
sub
scas
jle
add
in
(bad)
nop
stos
inc
movs
ds
in
mov
add
and
inc
aas
cmp
add
enter
daa
mov
push
dec
imul
movs
push
mov
add
add
mov
cmp
out
xor
sti
neg
mov
cmp
pushf
inc
out
and
icebp
and
mov
or
add
pop
imul
lds
es
pop
fldenv
imul
push
pop
retf
push
sti
add
or
pop
push
imul
cs
mov
push
xor
lods
sbb
dec
loopne
push
dec
add
mov
cmp
dec
add
adc
push
push
xchg
adc
cwde
test
add
sbb
push
dec
das
lods
popa
push
xor
cmp
xchg
movs
lea
xchg
sub
or
imul
sbb
pop
push
sbb
pop
push
loope
push
imul
sbb
(bad)
pop
sub
inc
sbb
out
add
repz
call
inc
sub
and
mov
fiadd
pop
pusha
and
mov
call
add
cmp
push
cmp
ins
shl
xor
sub
out
scas
inc
inc
arpl
add
adc
or
dec
shl
dec
xchg
jle
fist
jne
xor
add
or
repz
cli
or
clc
sbb
imul
ror
rcr
pop
or
pop
add
mov
and
dec
repz
or
xchg
cli
mov
add
inc
inc
push
mov
daa
bound
call
mov
cmps
ret
ret
add
ja
jne
or
mov
ror
clc
loope
adc
jae
mov
das
or
daa
adc
dec
sbb
test
xchg
mov
or
xchg
mov
mov
xor
pop
or
loopne
mov
mov
test
in
xchg
sub
pop
jae
or
xchg
dec
fmul
sbb
pop
in
and
and
adc
data16
xchg
mov
mov
dec
aam
xor
jae
xor
sbb
sbb
cs
test
jle
call
adc
fsubr
je
ret
call
jne
or
mov
movzx
shl
inc
jns
ins
mov
popa
fiadd
call
inc
mov
popa
sahf
(bad)
jnp
mov
fst
add
nop
inc
and
sbb
or
or
(bad)
jmp
add
xchg
inc
ret
into
sbb
xor
mov
cmp
ror
xor
pushf
cmps
leave
cmp
bnd
movs
jbe
or
leave
adc
and
cmp
je
neg
sub
or
push
inc
sub
imul
rcl
cmp
or
xchg
mov
push
mov
pusha
push
inc
add
add
inc
adc
mov
imul
add
sar
test
test
push
shl
pop
in
ss
adc
je
mov
adc
and
mov
xlat
shr
mov
cmp
push
xor
mov
mov
fcomi
add
lods
icebp
jmp
xor
inc
push
mov
jne
mov
in
add
iret
clc
jbe
fldenv
scas
mov
aaa
iret
inc
pop
push
lods
nop
xchg
jl
add
add
add
sub
pop
inc
dec
mov
rol
mov
enter
out
and
packsswb
lahf
push
sub
sub
cmps
lods
cdq
push
mov
sti
or
js
cli
or
adc
sar
push
jmp
mov
push
nop
xchg
mov
ins
xchg
(bad)
movhps
inc
nop
jno
push
adc
inc
xor
leave
add
lds
mov
movs
shl
dec
inc
and
daa
or
out
in
mov
nop
dec
adc
nop
inc
adc
outs
sbb
pop
xchg
or
adc
mov
test
and
xchg
idiv
xchg
and
or
add
push
leave
adc
mov
fldenv
or
pop
imul
adc
cmp
(bad)
jmp
mov
fld
ss
inc
and
pop
inc
sbb
inc
sbb
(bad)
call
movs
jmp
daa
dec
cmp
xor
adc
leave
cmp
icebp
inc
sub
cmp
fs
call
ror
mov
jmp
mov
fimul
clc
orps
scas
aas
xor
inc
mov
mov
and
and
jmp
arpl
jle
bound
icebp
sbb
push
jnp
mov
cmps
sbb
dec
xor
and
cmp
sbb
xchg
ja
and
and
pop
sbb
sbb
mov
cmp
shl
inc
push
cmp
and
es
sub
xor
inc
cwde
or
pop
xlat
push
fild
pop
aaa
or
sub
in
fs
ficom
and
or
or
adc
sti
xchg
imul
jl
inc
lds
mov
adc
or
or
add
add
jb
jae
(bad)
add
xor
inc
push
movs
push
push
or
inc
shr
ret
push
mov
sub
jmp
out
sti
out
adc
in
lea
mov
aam
cmovno
jl
or
sub
popa
and
inc
call
dec
sub
jno
rcl
lds
(bad)
push
in
mov
mov
add
push
inc
pop
rol
loopne
(bad)
outs
sbb
mov
push
rcl
adc
jg
xor
or
mov
jmp
sti
jmp
dec
pop
mov
xchg
in
popf
and
loope
and
mov
cmp
inc
and
pushf
adc
pop
dec
bound
xchg
dec
and
movs
nop
xchg
adc
das
arpl
fadd
sub
dec
adc
sbb
and
mov
int3
xlat
and
add
jbe
dec
inc
cld
adc
push
stos
scas
out
sbb
mov
pop
add
jge
dec
add
sbb
add
sbb
or
add
out
or
adc
xor
jo
sbb
cli
mov
fld
ret
vpmuludq
mov
mov
lahf
test
push
add
inc
cmp
and
xchg
nop
out
sub
imul
mov
inc
pop
dec
fld
outs
(bad)
mov
sub
dec
xor
test
push
and
adc
(bad)
mov
arpl
and
inc
mov
push
add
mov
mov
mov
pop
int3
xor
ja
jge
add
les
jb
and
test
inc
data16
jns
push
add
dec
add
fdiv
jo
lahf
stc
xor
inc
add
repz
mov
dec
pop
mov
in
add
xor
ret
xchg
pop
fisubr
push
std
das
or
loope
enter
mov
mov
cmp
add
ja
xchg
sub
jl
dec
add
mov
ins
addr16
push
inc
imul
jge
inc
out
into
in
mov
repnz
and
jno
fist
pop
or
call
or
aas
dec
ret
inc
gs
jae
or
out
add
in
add
mov
mov
pop
arpl
sbb
adc
or
enter
stos
add
and
lea
jecxz
adc
movs
test
out
adc
adc
imul
ss
aad
jmp
mov
ins
push
outs
jbe
mov
cmp
xlat
and
cs
dec
cmp
cmp
retf
out
or
inc
mov
jp
adc
jp
cmp
bound
shr
shr
mov
addr16
in
add
pop
or
lods
adc
xchg
or
mov
jb
push
sahf
out
xchg
cld
clc
hlt
jmp
fs
jne
push
and
mov
dec
or
sub
xor
add
push
outs
pop
adc
pop
xchg
js
sub
in
pop
(bad)
lods
jbe
pop
dec
ins
mov
(bad)
push
jl
xor
ror
push
push
mov
mov
or
ins
inc
sub
jae
cli
sub
pop
adc
or
jb
xchg
call
gs
rol
jmp
xor
(bad)
call
jo
push
aam
(bad)
mov
inc
jnp
push
das
fldenv
jmp
lods
xor
test
xchg
les
adc
movs
add
cmp
aaa
and
mov
dec
sub
imul
mov
add
cli
cs
jne
jo
xor
jmp
cs
rcr
pop
dec
inc
pushf
jl
pop
pop
ror
push
ins
sub
pusha
gs
jbe
adc
add
mov
scas
and
xchg
js
or
dec
pusha
cmps
inc
test
dec
lods
mov
cmp
mov
sub
dec
add
mov
xor
mov
pusha
loop
test
push
inc
lahf
or
sub
pop
cmp
fld
xchg
pop
pop
mov
jmp
fstp
shr
ss
jmp
(bad)
xor
xor
jmp
arpl
mov
movs
xor
imul
or
pand
push
loope
ror
lods
mov
enter
jmp
(bad)
and
dec
inc
fwait
or
pop
sub
in
adc
sub
adc
or
cmp
lock
jmp
mov
js
adc
clc
or
add
fiadd
push
leave
mov
or
adc
hlt
jno
and
jmp
and
es
push
jno
mov
sub
xor
pop
(bad)
nop
sub
cmp
sbb
pushf
adc
rcl
adc
or
xchg
sbb
push
and
mov
cmp
xchg
push
cmp
jno
dec
jbe
sub
cs
pop
in
dec
inc
push
inc
xor
and
in
inc
or
xchg
pop
test
xchg
test
and
lods
(bad)
cmp
shr
jmp
cmp
adc
mov
inc
dec
cmp
pusha
scas
cmps
(bad)
inc
or
adc
je
dec
mov
retf
mov
lds
pop
sub
mov
lods
and
aaa
inc
je
test
je
push
jo
push
dec
pop
popf
mov
mov
adc
xor
(bad)
test
push
lds
or
inc
cmp
push
retf
es
and
cmp
xchg
repnz
xor
test
(bad)
imul
repz
imul
add
add
scas
sub
mov
ror
jbe
fild
outs
cmp
int
jge
pextrw
inc
ret
jp
(bad)
and
test
cmp
push
add
inc
inc
push
rcl
xchg
dec
sahf
jge
in
out
cdq
sub
gs
jnp
das
push
cmp
cs
ret
inc
ja
in
bound
icebp
dec
add
imul
fist
xchg
xchg
xchg
xor
mov
repz
pop
inc
les
movs
and
and
push
fsub
lock
pmulhuw
test
add
enter
jnp
enter
push
cs
rcl
lds
ins
sub
adc
or
test
inc
adc
mov
mov
dec
test
sar
or
js
push
mov
inc
xchg
mov
test
jmp
push
cmp
daa
rol
test
pushf
nop
xchg
aad
adc
mov
mov
cwde
dec
dec
popa
aas
adc
sbb
retf
jo
pop
enter
sub
sbb
retf
out
mov
jg
mov
or
cwde
add
push
into
in
lods
inc
mov
mov
(bad)
aas
cmp
and
cs
sub
ins
ss
adc
adc
lock
add
test
ror
sti
adc
or
mov
out
scas
cld
xchg
jns
cmps
scas
rcr
mul
cmps
push
xchg
push
sub
xlat
jle
push
lea
add
pop
cdq
imul
add
pop
pop
fidiv
inc
xchg
popa
dec
sub
(bad)
sahf
cdq
sub
shr
or
popa
sbb
out
imul
cs
add
add
or
mov
adc
push
dec
cdq
mov
mov
push
nop
jno
add
pop
xchg
or
sbb
push
popa
add
int3
es
adc
mov
mov
fild
lock
xchg
(bad)
or
ins
out
cdq
pusha
jge
rcr
add
inc
out
stc
std
sub
adc
and
pop
or
mov
mov
dec
cwde
mov
clc
sub
out
adc
icebp
push
test
into
xor
pop
ret
push
or
push
jae
mov
jb
daa
out
es
and
sbb
inc
add
lahf
mov
jae
jno
add
or
dec
jl
stc
out
adc
mov
dec
jb
ret
inc
pop
aaa
fcom
fimul
dec
pop
mov
nop
jb
(bad)
push
out
pop
pop
xor
sbb
stc
loope
add
lock
and
sub
(bad)
shl
xor
cld
add
rcl
adc
icebp
ret
push
mov
or
sbb
fiadd
adc
jno
call
push
test
cwde
cmp
nop
fnstsw
adc
clc
add
(bad)
cmp
push
dec
xor
ins
pop
and
jg
fs
icebp
xchg
or
dec
call
add
push
movs
or
push
mov
mov
sar
scas
js
adc
mov
mov
sar
push
or
arpl
or
lods
fld
adc
or
cmp
inc
mov
popa
xor
pop
mov
sbb
mov
or
sbb
sti
cmp
pop
sbb
div
cmp
es
mov
mov
inc
fwait
adc
push
cmp
ds
mov
nop
xor
adc
mov
jne
inc
or
push
mov
sahf
pop
add
add
mov
or
lods
push
xchg
pop
and
cmovo
pop
popf
adc
pop
jo
loope
popa
xor
jae
add
push
aas
jge
shl
scas
shl
sbb
push
pushf
pop
jbe
movs
mov
cmp
mov
or
or
fwait
mov
clc
sbb
movs
ss
mov
(bad)
dec
cmp
lock
ud1
dec
and
mov
push
jmp
and
aam
cmc
lea
jle
fs
adc
fnstcw
jmp
add
cmps
xor
shr
add
popa
jmp
ror
lahf
inc
xor
std
aaa
sbb
or
adc
lock
dec
sar
sub
ss
mov
add
jno
repz
sbb
adc
inc
sti
aad
sbb
mov
aad
push
dec
adc
push
push
inc
pop
mov
mov
push
or
rol
xchg
fs
inc
sahf
inc
xchg
adc
int
push
inc
push
push
mov
sbb
dec
add
rol
inc
out
int
mov
or
movs
xor
lock
mov
je
mov
push
push
push
sbb
pusha
and
jns
cwde
cs
neg
and
jnp
jle
push
add
dec
loop
mov
ror
lods
add
sub
in
mov
xor
or
lock
paddq
(bad)
mov
in
xor
dec
xchg
dec
inc
ins
pop
inc
cld
popa
xchg
imul
pop
cmps
nop
xchg
mov
pop
jb
adc
mov
outs
js
sbb
jmp
sahf
es
and
mul
add
movs
sbb
push
cmps
pop
mov
inc
add
ds
adc
fisub
daa
pop
lds
and
fadd
aaa
pop
ret
push
push
daa
dec
or
fcmovu
dec
dec
out
(bad)
in
addr16
fadd
xchg
mov
ins
jae
into
mov
mov
mov
and
popf
inc
repnz
xchg
sahf
cmps
inc
sbb
sbb
ss
add
mov
add
or
sbb
and
add
ret
add
xor
adc
ret
xchg
dec
dec
movs
leave
and
pop
cld
dec
or
push
fadd
sbb
shr
mov
sbb
movs
or
inc
es
sbb
push
mov
adc
push
xor
dec
push
iret
mov
in
mov
out
sbb
test
lea
std
retf
add
cli
jno
bound
adc
push
xor
and
xor
ret
pop
cmp
pop
into
stos
add
jge
inc
ins
jge
js
push
adc
inc
jg
mov
mov
lahf
les
jg
mov
add
or
or
push
les
in
sbb
sub
lea
xchg
mov
pop
push
cmp
je
fstp
aam
push
add
pop
or
inc
cmp
out
shl
add
loop
sbb
add
inc
std
pusha
and
add
or
dec
test
nop
cmps
(bad)
loop
push
add
xchg
add
cmc
fldenv
jge
sbb
or
add
dec
loopne
scas
mov
or
mov
cmp
cmp
lods
inc
cmp
pusha
and
jo
or
lock
inc
jge
push
xchg
daa
inc
push
aas
add
xor
ficomp
add
outs
add
dec
add
fbstp
add
cmps
test
ins
add
sub
adc
ss
push
push
dec
pop
push
add
dec
movs
push
(bad)
xchg
xchg
push
adc
es
inc
sub
sbb
dec
adc
adc
mov
cwde
xor
jl
mov
inc
jmp
mov
jle
cmp
fsub
jb
lea
in
les
and
cmp
aaa
push
add
cwde
fsub
sub
pop
add
push
mov
pop
call
xor
les
pop
mov
loopne
cdq
inc
pop
ins
xchg
mov
call
dec
repnz
pop
push
add
sub
leave
inc
or
xchg
je
leave
xchg
sbb
je
jecxz
adc
icebp
add
push
inc
pushf
sbb
inc
xchg
push
push
sub
mov
push
retf
js
dec
xor
aam
or
push
pop
inc
lods
pop
or
xchg
adc
and
repnz
stc
jmp
inc
mov
xlat
out
fidiv
xchg
adc
adc
nop
mov
mov
loope
mov
js
add
daa
movs
xor
cmp
jmp
push
addr16
add
mov
pop
and
jmp
out
adc
imul
sub
lds
or
jnp
cmp
mov
mov
or
(bad)
pop
inc
and
fstp
fnstenv
fstp
or
sbb
push
(bad)
in
jne
dec
fstp
and
dec
adc
std
xchg
xchg
and
inc
or
or
push
cs
pop
shl
ss
mov
push
loope
sub
cwde
mov
int3
xor
push
sbb
ret
add
lods
das
or
cmp
xor
pop
test
or
jbe
sbb
push
push
hlt
or
or
and
pushf
dec
das
add
adc
sub
ds
cmp
dec
dec
xor
jg
lds
enter
hlt
pop
push
and
sub
aas
sbb
dec
pop
dec
add
lock
les
out
sbb
ror
aaa
int
add
test
add
or
cli
or
mov
add
dec
sbb
cmps
hlt
cs
pop
outs
ins
xchg
sub
ja
mov
dec
shl
mov
cmp
mov
call
js
mov
sbb
mov
add
enter
jnp
mov
loopne
ret
aad
gs
add
adc
xor
xor
adc
dec
sahf
jecxz
fild
pop
jmp
inc
lea
or
rcr
cmp
test
popa
mov
xor
vpavgb
or
or
sbb
xor
push
lock
les
sub
in
mov
xchg
push
pop
leave
add
pop
std
lea
(bad)
fmul
inc
(bad)
ficom
push
daa
test
ror
loopne
test
jo
out
gs
adc
pop
dec
or
jg
mov
sbb
hlt
xor
lods
cmp
les
(bad)
into
or
adc
dec
xor
aas
jne
sbb
gs
jmp
test
xor
push
and
adc
cmp
xor
iret
jae
sbb
dec
adc
jmp
adc
or
sbb
ja
fiadd
sbb
(bad)
lock
push
mov
and
retf
and
in
lea
jg
dec
mov
inc
push
mov
loopne
jne
adc
xor
xchg
lods
loop
dec
or
push
ret
cmp
shl
(bad)
pop
cli
(bad)
jl
or
sbb
pop
fadd
test
jae
sub
cs
js
adc
dec
jnp
add
pop
dec
das
mov
mov
sbb
rcl
mov
fcmovu
xchg
aam
sbb
mov
sub
out
push
or
nop
outs
bound
dec
jl
sbb
adc
test
add
mov
xor
icebp
sbb
push
inc
ret
inc
mov
or
test
push
add
xor
add
mov
inc
adc
cmp
(bad)
sbb
int3
mov
sbb
push
enter
ja
rol
popa
and
adc
stc
das
daa
stos
jmp
loopne
sub
add
inc
ret
repnz
xlat
jle
aaa
jle
add
or
mov
aaa
es
lds
cmp
js
in
ins
push
mov
xor
xor
xor
add
push
mov
ror
sbb
and
mov
dec
fdiv
int
mov
push
out
je
ret
pop
mov
adc
xchg
pop
adc
and
sub
sbb
sbb
cmp
cmp
popf
pop
add
cmp
add
add
push
mov
and
pusha
jno
sub
aas
and
and
ds
push
cmps
sahf
ja
ret
add
mov
or
add
test
mov
daa
jne
out
enter
dec
and
cld
pop
pop
inc
push
dec
or
repnz
or
adc
and
add
sbb
or
lock
outs
daa
pop
rol
pop
popa
ins
sbb
das
push
cmp
inc
xchg
mov
xchg
adc
dec
sub
imul
mov
sysenter
inc
pop
xchg
mov
jb
sbb
and
and
and
fild
sbb
adc
xchg
cmps
dec
(bad)
in
xchg
and
jbe
mov
adc
cwde
(bad)
jle
fdivr
sbb
call
or
bound
or
mov
add
les
inc
add
mov
pop
es
push
es
loope
sub
cmp
mov
daa
pusha
inc
xor
push
jmp
aas
je
mov
dec
xor
push
pop
pop
jmp
and
call
cmp
pushf
rol
mov
bound
adc
lods
sbb
xchg
mov
dec
sub
es
clc
push
std
and
cwde
add
pop
or
adc
push
div
nop
dec
adc
dec
add
mov
sbb
cmp
loopne
retf
xchg
cmp
adc
or
les
idiv
pop
cld
jg
push
(bad)
cwde
jmp
cdq
movs
jl
aaa
adc
add
xchg
ret
scas
shl
aam
int
lahf
dec
clc
mov
or
jge
and
push
and
pop
sar
xor
cmp
push
leave
add
rcr
or
pop
mov
pop
ins
dec
gs
xor
push
pop
pop
rol
sub
xor
(bad)
sbb
std
inc
and
fbld
cmp
jge
test
imul
cmp
push
sbb
movups
aaa
and
sub
fisttp
loop
je
ss
movs
clc
xchg
xor
mov
lods
add
cs
mov
jg
push
ret
sub
jne
arpl
ret
mov
repz
xchg
add
(bad)
call
xor
xor
sbb
xchg
and
sbb
(bad)
call
lods
xor
cmp
add
push
sub
aaa
fs
lds
jnp
mov
fwait
test
mov
mov
push
xor
add
pop
xor
ins
add
mov
js
and
sub
daa
ret
jecxz
aam
aas
dec
sbb
out
jnp
jl
push
cld
fistp
add
jnp
mov
enter
sub
jmp
sbb
mov
inc
fst
inc
sbb
inc
mov
lock
jmp
cmp
adc
and
mov
adc
stos
mov
mov
xchg
jp
xchg
xchg
cmp
addr16
jo
mov
adc
lock
(bad)
mov
add
mov
push
push
loopne
or
dec
adc
or
push
lahf
or
outs
test
cs
xchg
pop
sbb
push
cmp
mov
in
pop
or
sub
sbb
adc
add
and
adc
daa
inc
pop
or
enter
or
and
xor
pop
inc
pop
lahf
cmp
enter
mov
push
mov
(bad)
fnstcw
push
mov
xor
mov
mov
pushf
adc
cmps
shl
or
(bad)
and
add
and
xchg
cmp
and
fs
repnz
pop
mov
push
(bad)
xor
popf
lea
adc
in
pop
test
push
sub
jno
push
and
fstp
jecxz
push
movs
jle
loope
outs
sbb
inc
jnp
jbe
or
cmps
push
add
fwait
mov
cmp
scas
sbb
mov
and
stc
dec
sbb
dec
sbb
sbb
xchg
(bad)
lahf
arpl
or
xlat
dec
mov
das
(bad)
push
push
ins
or
rcr
sahf
xchg
xor
lods
loopne
dec
and
xor
inc
rol
mov
sbb
sub
aam
cmp
adc
das
mov
xchg
mov
lea
ss
mov
aam
or
cld
sub
adc
clc
in
(bad)
test
push
add
cmp
or
enter
sbb
or
push
xor
xchg
pop
add
scas
int3
outs
cdq
push
sbb
and
rcr
cmps
add
dec
dec
sub
mov
psrad
sub
ficomp
or
arpl
add
xor
clc
aad
add
aaa
xor
sar
jmp
inc
inc
pop
or
or
packuswb
add
or
push
add
adc
fincstp
repz
jne
inc
inc
inc
jo
or
add
ror
aas
jmp
es
add
adc
xor
inc
pop
ror
or
xchg
cmp
scas
mov
ret
sub
adc
stos
mov
dec
xchg
mov
shl
addr16
rol
adc
js
mov
dec
(bad)
xor
add
cmp
inc
add
xor
and
inc
or
test
sahf
in
inc
pushf
sbb
and
lds
xor
inc
call
out
add
and
jmp
dec
into
xor
fist
out
or
test
in
mov
xor
sub
jno
dec
xor
sub
fsub
dec
mov
jmp
inc
dec
sub
ret
clc
or
sub
dec
xor
push
add
and
dec
add
sub
mov
inc
in
addr16
outs
cmp
js
inc
sub
push
push
ins
pop
adc
ror
sub
or
fadd
fstp
and
pushf
ja
add
stc
or
push
or
call
push
in
rcr
inc
retf
out
or
rcl
rcl
adc
mov
pusha
pusha
jbe
xchg
or
xchg
pushf
and
mov
(bad)
sbb
ins
or
sbb
ficom
rcl
push
es
add
(bad)
clc
xchg
lods
inc
or
aas
adc
inc
(bad)
cwde
call
out
ret
dec
in
fisttp
ret
loop
dec
mov
es
xor
dec
lock
dec
xchg
aas
cli
lock
sbb
mov
sbb
cld
in
std
push
pop
cmps
xor
stos
and
jne
(bad)
and
xchg
cwde
mov
jmp
and
mov
jae
push
sbb
dec
mov
scas
inc
enter
cmp
jle
inc
in
cmp
jg
push
std
loop
xor
outs
push
or
inc
xor
inc
add
ret
pusha
xchg
fisub
push
sub
ja
xor
push
popf
mov
push
cmp
add
scas
js
pop
mov
imul
dec
cmp
mov
pusha
mov
daa
adc
lea
test
ss
jmp
sbb
xor
add
inc
sub
xchg
fist
ss
shl
call
adc
cmp
scas
xor
sbb
mov
cmp
adc
or
dec
adc
mov
push
test
in
mov
and
stos
in
inc
sub
fstenv
lds
sub
adc
icebp
rcl
call
sar
dec
or
sub
and
inc
cmp
mov
sets
inc
adc
lds
mov
scas
test
add
mov
dec
(bad)
push
jns
mov
dec
sahf
add
adc
push
ror
cmp
inc
lods
adc
pop
inc
sub
mov
mov
sbb
dec
jmp
aad
jnp
adc
push
pop
and
adc
or
push
lock
pop
or
loopne
test
add
sbb
cmp
adc
movs
movs
cs
lahf
push
aad
sub
pusha
es
dec
cmp
and
or
cwde
adc
cwde
(bad)
enter
adc
pushf
adc
and
loope
je
lods
push
adc
add
dec
je
dec
ins
inc
inc
jl
pop
lods
js
add
push
xchg
xor
nop
imul
sub
or
sub
imul
popf
mov
jb
mov
add
inc
push
push
push
sbb
adc
and
or
or
in
je
mov
sbb
xor
xor
sub
(bad)
xor
add
stos
(bad)
inc
inc
inc
imul
test
icebp
add
fwait
or
imul
or
and
dec
dec
jge
arpl
je
sbb
sub
sbb
and
push
or
test
pop
dec
cwde
mov
or
pop
and
adc
lock
xchg
mov
mov
adc
jne
mov
fild
adc
dec
mov
add
div
mov
cmp
out
aaa
out
inc
test
scas
sub
imul
iret
stc
cmp
enter
pop
mov
jno
call
cli
add
sar
mov
call
mov
mov
lods
mov
(bad)
mov
retf
mov
and
lock
cmp
and
inc
xchg
enter
(bad)
sub
stos
pop
call
cwde
cmp
xor
xor
(bad)
mov
icebp
or
pop
je
inc
js
xchg
sbb
test
add
lea
cmp
adc
mov
sbb
xchg
or
call
cs
jmp
outs
jae
imul
sub
arpl
xor
jae
dec
sbb
inc
icebp
and
loopne
adc
and
repnz
or
pop
and
outs
mov
cmp
push
retf
and
and
mov
test
pushf
(bad)
imul
jno
test
inc
xchg
and
out
sub
add
mov
jbe
and
mov
adc
push
jle
mov
or
icebp
sub
jmp
and
push
mov
mov
loope
xor
enter
stos
add
jp
mov
cwde
cmp
adc
inc
jmp
xor
rol
push
out
sbb
adc
adc
scas
or
pop
push
cmp
xor
inc
cmp
popaw
push
inc
fadd
loopne
xchg
and
aam
lds
test
push
inc
add
push
sub
or
jp
rcr
pop
add
push
outs
sbb
sbb
jecxz
ins
out
mov
mov
nop
and
pop
adc
push
mov
aas
iret
cmp
nop
or
dec
or
inc
jl
cmp
hlt
mov
leave
sbb
jmp
lds
mov
leave
adc
and
ror
mov
leave
sbb
jmp
cmp
dec
add
sub
(bad)
inc
pop
test
xchg
jl
repz
xlat
clc
mov
mov
push
popa
nop
push
add
je
xor
adc
inc
retf
jo
bound
shl
xor
mov
rol
pusha
mov
cmp
mov
push
cdq
xor
add
cmp
mov
(bad)
aas
add
aaa
push
mov
jle
add
inc
mov
inc
mov
imul
data16
mov
das
sbb
and
and
int
lahf
mov
sti
push
or
stos
out
cdq
ret
int
push
push
push
cmp
xchg
sbb
fs
mov
mov
xor
adc
inc
xchg
nop
push
dec
inc
jb
fwait
cli
mov
pop
jb
dec
pop
cmp
push
jo
adc
and
mov
cdq
dec
popa
jge
sbb
clc
pop
sbb
(bad)
out
sar
and
sbb
test
xchg
ror
mov
scas
mov
sbb
or
leave
add
mov
sbb
and
mov
pop
mov
into
aas
adc
lods
xor
cmp
xchg
mov
stc
add
out
out
sbb
sar
adc
loopne
in
cmp
sbb
fldenv
pop
or
call
popf
and
pop
or
fcom
mov
and
pop
movs
inc
inc
or
lmsw
sbb
dec
ins
inc
or
in
int
inc
and
jb
ins
popf
sbb
inc
cmps
dec
daa
fsubr
test
mov
sbb
adc
or
sub
fadd
push
scas
mov
rcl
in
(bad)
enter
push
scas
mov
lock
push
cld
pop
sub
push
or
loop
nop
mov
add
sti
xor
push
sti
sbb
sub
fs
dec
bound
push
cmps
fadd
push
mov
jmp
lahf
clc
cmps
sbb
fcom
aad
add
pop
push
das
es
js
push
xchg
push
mov
inc
dec
loop
les
adc
mov
(bad)
xor
xchg
lock
or
addr16
add
sub
xor
jp
xchg
pop
xor
jae
mov
push
jo
push
mov
cs
imul
or
scas
pop
lahf
and
hlt
cs
inc
mov
or
sub
jl
pop
test
clts
xchg
lea
pop
mov
add
xor
adc
pop
inc
xchg
retf
push
popa
test
xor
cmp
mov
dec
ret
div
and
jo
adc
sub
inc
xor
add
sbb
and
xor
mov
and
or
repz
pop
sub
add
ins
shl
mov
cdq
test
sbb
test
ja
inc
and
cmovp
sub
inc
jmp
ret
pusha
adc
sub
std
cld
pop
or
pop
mov
test
mov
cmc
rol
inc
inc
sub
inc
cmp
sbb
aaa
sbb
and
lock
or
daa
lsl
mov
push
dec
sti
cmps
loopne
xchg
in
jo
jnp
adc
push
pusha
fsubr
arpl
pop
dec
iret
jo
pushf
(bad)
call
inc
xchg
enter
(bad)
push
mov
mov
push
adc
push
sub
or
ins
mov
cdq
call
(bad)
ja
push
outs
inc
sub
add
add
sub
sbb
mov
lock
push
in
or
jmp
or
scas
sbb
aaa
fadd
jmp
push
jg
dec
ins
add
out
jge
repz
or
jmp
pop
fucomi
mov
mov
add
inc
inc
push
jl
inc
dec
jl
lock
jl
popf
shr
jge
mov
adc
push
aad
add
jmp
imul
jb
cmp
add
jge
daa
add
int3
pusha
iret
dec
lods
fld
(bad)
js
sbb
xlat
jo
es
aam
cli
test
pop
test
xchg
int
sub
adc
or
ds
leave
push
add
and
xchg
pop
arpl
sbb
ins
outs
cs
leave
pushf
pusha
pusha
jno
push
les
mov
mov
loope
inc
push
adc
popa
ret
mov
sbb
inc
inc
cmp
fwait
icebp
add
sti
bound
pop
cmp
push
add
clc
jg
jg
add
call
or
nop
call
and
inc
adc
push
in
in
sub
sbb
mov
push
push
add
shl
inc
sbb
or
push
(bad)
mov
pop
fiadd
inc
outs
mov
inc
or
dec
scas
and
cmp
push
cmps
aam
icebp
lea
lds
mov
adc
into
jnp
pop
icebp
aam
mov
inc
add
and
lea
(bad)
(bad)
dec
pop
inc
adc
pusha
sub
out
aam
adc
aam
loopne
aaa
daa
ss
or
(bad)
jecxz
pop
add
adc
xor
rcl
stos
cld
mov
fdivp
pop
pop
xor
sbb
or
or
sbb
cmp
js
push
adc
sbb
adc
sub
sbb
jns
out
mov
outs
repz
mov
sbb
mov
aad
in
add
mov
mov
lods
jmp
inc
add
xchg
or
push
add
push
jp
push
adc
add
call
call
loopne
adc
dec
dec
xchg
nop
mov
dec
mov
bound
imul
pushf
sbb
mov
ror
add
jnp
dec
dec
or
clc
adc
push
cdq
push
inc
inc
cmp
jno
dec
sub
cdq
dec
in
mov
pop
pop
cmps
jmp
dec
clc
out
xor
jno
outs
sbb
dec
icebp
sbb
jns
add
or
enter
adc
fmul
add
(bad)
sub
shr
das
xor
cld
cmp
dec
lods
dec
pushf
mov
les
stc
add
dec
in
add
fbld
push
and
pop
xor
xor
repz
aaa
dec
xchg
dec
push
mov
ret
mov
stc
clc
shl
bound
xor
jmp
dec
data16
mov
ror
mov
jmp
cmps
hlt
mov
ja
cmps
sub
add
inc
jne
shr
ins
js
add
sub
int3
push
lahf
ret
mov
sub
sbb
fwait
and
add
inc
sbb
test
push
out
pusha
rol
adc
sbb
adc
jae
fsub
das
fisubr
xor
and
or
inc
popa
aas
bnd
adc
mov
stos
data16
sub
dec
adc
xchg
dec
xchg
or
push
add
fwait
js
jbe
xor
rcl
pop
jb
and
les
out
add
mov
outs
fidiv
jne
in
sbb
call
or
sbb
xor
shl
mov
xlat
sbb
xor
sub
inc
adc
lods
xor
movs
push
pop
mov
popf
fs
xchg
cmp
jl
sbb
adc
bound
lods
cmp
cwde
inc
push
retf
nop
daa
imul
std
pop
add
push
fstp
je
add
test
pop
jle
sbb
mov
or
jmp
call
sbb
movs
movsx
bound
aad
ror
mov
or
sti
das
xor
and
cmp
jl
ret
leave
inc
xor
and
dec
sbb
xchg
aam
and
mov
mov
sbb
imul
add
add
add
cmp
and
and
sbb
das
inc
inc
fmul
fmul
cmp
inc
xor
add
ss
or
inc
iret
pop
and
scas
mov
sbb
mov
add
out
test
or
xchg
add
arpl
adc
or
lea
jne
in
fs
dec
mov
inc
nop
popf
rol
push
popa
add
leave
cmp
dec
cmp
in
xchg
jl
pop
adc
mov
inc
or
sbb
and
xor
sub
pop
inc
movs
add
fimul
or
mov
push
shl
adc
jbe
add
enter
lds
jbe
ds
call
adc
sbb
inc
(bad)
sar
sub
sti
jg
sub
lahf
nop
rol
push
sub
add
addr16
pop
rol
data16
and
stos
call
(bad)
hlt
test
enter
fs
sbb
inc
sahf
or
in
movs
mov
mov
rcr
sub
dec
pop
repz
fmul
mov
(bad)
fmul
in
aam
rcl
vpmulhuw
or
dec
adc
test
dec
enter
mov
loopne
lahf
sub
xchg
outs
lea
mov
dec
call
push
pop
sbb
cmp
in
fadd
inc
mov
mov
sbb
inc
ret
add
xchg
movs
adc
sar
jmp
push
cmp
(bad)
pop
mov
pop
push
add
stos
fcomp
cdq
test
pop
jl
or
cmp
dec
dec
aaa
pusha
jle
pop
push
js
sbb
dec
push
js
or
(bad)
dec
cmp
sbb
pop
mov
or
adc
push
inc
cmps
and
mov
xor
push
enter
das
fmulp
(bad)
mov
inc
fidivr
adc
xor
adc
and
mov
add
jg
add
inc
leave
pusha
pop
repz
xchg
push
dec
pop
adc
jbe
scas
add
push
and
lea
call
lea
or
push
push
(bad)
out
or
jno
adc
push
cwde
es
jle
xor
dec
cmp
fstp
std
inc
ret
mov
sub
lea
adc
adc
pusha
or
aas
(bad)
push
mov
xchg
ror
(bad)
adc
mov
or
repz
xor
cmc
cmp
ja
movs
int
xchg
les
inc
and
mov
out
add
outs
adc
adc
mov
push
inc
push
adc
push
rcr
jnp
sar
xlat
imul
xor
jecxz
jmp
add
mov
int
out
jae
cmp
jl
inc
push
mov
pop
inc
adc
bound
adc
mov
xor
add
pusha
inc
pusha
mov
xor
cmps
nop
jge
fbstp
pop
xlat
ss
fidiv
cmp
adc
adc
test
or
cld
xchg
rcr
mov
push
nop
stos
sbb
movsx
xchg
arpl
dec
add
or
adc
adc
(bad)
adc
pop
dec
pop
ret
ja
xchg
xchg
nop
sar
jne
test
sbb
test
jp
push
popa
mov
mov
test
or
inc
adc
test
push
cmp
mov
sub
aam
sbb
xor
mov
(bad)
nop
clc
les
mov
xor
cmp
sbb
ss
dec
cmp
mov
inc
xchg
aam
push
test
xor
sbb
mov
add
mov
jge
(bad)
xor
mov
les
adc
mov
lea
popf
scas
xor
into
mov
xchg
sbb
stc
adc
mov
cmp
clc
faddp
inc
imul
push
rcl
into
push
sbb
fdivr
loope
and
daa
jp
data16
mov
stc
cmp
jle
push
cmps
hlt
adc
push
adc
sbb
retf
iret
sub
or
and
inc
test
mov
sbb
out
dec
push
mov
ror
mov
sbb
mov
push
(bad)
sar
inc
popf
dec
pop
dec
sub
sahf
cmp
sbb
sbb
adc
dec
stos
inc
adc
xchg
jbe
jnp
dec
outs
or
adc
and
sti
mov
push
mov
cmp
ret
rol
mov
inc
jnp
loop
lds
inc
add
neg
add
mov
xchg
icebp
loope
div
jmp
pop
ffree
(bad)
inc
jmp
jb
inc
(bad)
aas
mov
jle
mov
lods
jge
out
adc
cmps
aaa
and
pop
inc
shr
cmp
sbb
jle
push
fs
sbb
ret
add
jns
rcl
test
add
sbb
mov
call
ins
fwait
mov
add
add
sbb
dec
retf
xor
xor
jnp
inc
arpl
adc
sbb
mov
xchg
mov
jmp
cli
lahf
test
inc
mov
shl
fdivr
fld
cs
out
mov
ficom
xchg
and
sar
addr16
push
mul
mov
push
sub
addr16
sbb
call
add
lds
sub
movs
dec
add
or
mov
push
(bad)
or
sahf
push
mov
test
(bad)
jmp
std
js
jg
xor
outs
shr
sbb
jge
neg
sbb
or
test
xchg
mov
out
mov
jle
loop
inc
add
xor
repz
adc
xchg
lock
outs
or
fldenv
mov
fdiv
cli
and
cmp
mov
aad
sbb
mov
call
or
xchg
gs
loopne
enter
jg
scas
inc
and
xor
inc
je
fxch
jne
fwait
imul
mov
fwait
jge
sbb
movs
lahf
add
icebp
fldcw
sar
or
adc
inc
pop
out
sbb
jae
in
(bad)
(bad)
cmp
add
mov
pop
jbe
and
aaa
mov
ins
int3
fwait
inc
outs
push
cmp
in
in
add
cmp
xlat
mov
xchg
pop
xchg
popf
cwde
inc
and
mov
test
xor
scas
mov
adc
in
xlat
mov
imul
das
pop
sbb
icebp
aaa
sub
stc
push
lea
jmp
or
call
pop
lea
jle
call
loopne
lods
stc
adc
adc
enter
into
xchg
sti
inc
mov
sbb
ins
pop
add
popa
enter
add
lea
xor
mov
adc
cmps
inc
cmps
inc
pop
sbb
arpl
xor
repz
dec
bound
ds
dec
add
mov
mov
mov
fbld
js
sub
sahf
push
outs
push
sub
xor
mov
push
test
sub
pop
mov
xchg
cli
movs
xor
add
lea
sub
xchg
(bad)
hlt
xor
jo
int3
cmps
cmps
adc
test
ficomp
sti
add
out
ins
je
push
jge
mov
je
push
inc
aad
push
inc
loopne
aad
nop
add
lea
clc
mov
fld
fcmovnb
sti
daa
sti
mov
int3
fidivr
gs
lds
adc
adc
sahf
(bad)
push
xchg
or
retf
or
push
push
ja
cmp
idiv
movs
movs
lock
jo
add
xor
imul
and
sbb
dec
es
es
nop
mov
and
enter
add
pop
mov
rol
fmul
movs
ret
pusha
nop
xchg
and
xchg
in
jns
into
dec
sbb
jbe
pop
jmp
fld
fadd
fstp
push
bound
pop
inc
add
sbb
add
sbb
jns
repnz
or
or
daa
or
popf
cmps
sub
pop
cmp
es
adc
fs
xor
fimul
sbb
push
and
int
cdq
sub
and
sbb
fs
fisttp
mov
sub
sub
or
xor
sbb
push
pop
or
adc
and
and
rcr
push
sbb
xchg
not
rcr
in
fld
mov
fmul
and
jmp
push
sti
cmp
xor
movs
push
inc
fs
cs
jg
imul
fs
inc
cmp
add
or
and
or
bound
pop
pushf
ja
loop
in
or
adc
(bad)
or
sbb
jns
out
bound
xor
mov
xor
pusha
xor
es
call
inc
call
call
pusha
and
pop
xor
add
cmps
xchg
repz
aas
adc
xchg
lock
out
aas
xlat
mov
(bad)
in
push
inc
cmc
popf
fcomp
pop
mov
inc
mov
push
adc
sbb
adc
mov
dec
add
sbb
cmps
or
push
imul
or
leave
push
adc
dec
mov
(bad)
xor
adc
fistp
xchg
pop
sbb
mov
aaa
outs
div
popa
adc
pop
out
jmp
lea
sub
iret
jge
mov
inc
adc
mov
add
mov
xor
adc
push
adc
inc
(bad)
mov
hlt
inc
sub
xchg
loope
and
and
or
cli
add
add
popa
loope
or
xchg
adc
xor
add
pusha
adc
jmp
sar
jne
js
ret
add
inc
dec
push
stc
test
sbb
aam
and
daa
test
shl
inc
enter
popa
cmp
lock
and
mov
or
lea
inc
cs
lds
or
je
(bad)
inc
push
pop
adc
in
(bad)
mul
cmp
push
les
lods
int3
mov
mov
adc
sbb
adc
ret
daa
rcr
adc
stc
push
push
lock
adc
jne
jg
sbb
psadbw
xor
ret
inc
inc
pop
add
or
jge
sbb
mov
mov
not
xchg
sub
data16
inc
leave
dec
jo
mov
test
stos
push
dec
jae
push
adc
jo
add
or
test
cmp
sbb
dec
fstp
ret
push
imul
shr
push
add
fbld
jmp
outs
jae
cmp
ss
call
push
enter
inc
add
push
aam
cmp
cmc
lahf
ficomp
int3
lahf
inc
xor
add
pop
aas
sbb
push
popa
mov
pop
add
push
mov
daa
dec
mov
dec
or
inc
push
fadd
fs
add
jne
dec
scas
sub
mov
xor
loop
inc
dec
sbb
jle
and
aad
lock
ficomp
scas
icebp
xchg
shl
sub
sub
pop
fcomp
sar
loopne
xchg
dec
mov
inc
mov
movs
push
or
test
sbb
lahf
sub
push
xchg
popa
add
fisubr
cmp
or
sbb
and
mov
sbb
add
pushf
out
imul
lods
call
inc
daa
ret
jae
call
aaa
cmp
into
mov
cmp
add
adc
ins
test
jns
inc
mov
dec
dec
or
mov
jp
push
jne
jp
mov
rcl
popa
sbb
(bad)
and
push
sub
cmp
or
or
jne
(bad)
jp
mov
lea
sub
test
sbb
xchg
sub
push
test
mov
and
inc
popa
sbb
ins
mov
xchg
int
xchg
xchg
leave
inc
xor
jge
or
or
jno
pop
adc
adc
xchg
jl
inc
and
xchg
pop
aaa
lods
imul
adc
and
mov
or
(bad)
lock
mov
lods
adc
int
inc
inc
xchg
mov
sub
add
push
mov
push
sbb
jge
fxtract
or
imul
and
outs
scas
inc
paddd
(bad)
inc
imul
mov
stos
cmps
rcl
dec
fld
jp
inc
mov
push
inc
jbe
rcr
or
fisubr
or
add
iret
mov
adc
loop
pop
cwde
fcmovnbe
and
sbb
(bad)
mov
sub
xchg
mov
inc
mov
pop
or
inc
mov
dec
aaa
lock
mov
inc
shl
call
mov
xchg
lds
xchg
dec
sbb
and
or
out
sahf
pop
fmul
xchg
fwait
pop
lea
jb
add
or
hlt
das
neg
and
push
adc
push
adc
bound
push
arpl
fld
jmp
push
sti
add
pop
mov
mov
fs
pop
or
stc
jl
test
cwde
ret
(bad)
pop
imul
retf
adc
mov
xchg
xchg
outs
cmp
mov
shl
cmps
test
pop
push
dec
fucomi
ret
jns
dec
imul
lock
sbb
in
test
cmp
push
mov
inc
jecxz
out
mov
sub
lahf
push
cmp
sub
test
lock
jo
mov
imul
repnz
ins
push
inc
push
push
(bad)
adc
pop
cld
ins
add
into
jmp
mov
cmp
dec
idiv
fwait
and
stc
add
inc
add
dec
cld
mov
cmp
ja
dec
dec
ja
rol
sbb
loope
mov
cmp
sbb
or
mov
fwait
(bad)
xchg
and
sti
cli
xlat
out
mov
xor
sbb
push
inc
inc
popf
push
adc
push
in
inc
xor
add
xor
add
popa
pop
aam
fisubr
mov
push
dec
cs
adc
and
mov
push
xor
out
push
sbb
addr16
inc
push
mov
pop
jge
push
xor
repnz
lods
sbb
fs
pop
mov
add
jne
mov
dec
(bad)
mov
dec
popf
pop
add
outs
mov
sub
frstor
lea
adc
(bad)
adc
pop
xchg
pop
dec
in
xor
xor
or
dec
into
push
stc
outs
jno
xchg
add
aas
jae
dec
movs
or
js
nop
push
pop
cmp
call
dec
clc
sub
pop
clc
mov
shl
push
movs
add
dec
add
add
int3
jb
aam
dec
icebp
stc
stos
cmp
pop
call
pop
arpl
pusha
or
pop
pop
lea
add
nop
out
inc
nop
xor
mov
push
test
and
fsubr
xchg
repz
cvttps2pi
push
outs
inc
or
xchg
fcomp
int3
mov
cmps
or
dec
popa
mov
pushf
cld
dec
ja
sbb
dec
outs
enter
fsub
pop
and
rcr
adc
retf
xchg
mov
dec
mov
dec
dec
jno
and
fs
push
xor
(bad)
or
pop
inc
cwde
and
mov
cmps
mov
and
inc
aas
inc
or
test
and
cmp
mov
adc
aaa
es
pop
mov
ins
fwait
arpl
dec
and
xchg
or
ins
out
or
jne
ins
mov
pop
mov
jle
push
add
cmp
fisttp
clc
jp
pusha
jo
lods
and
clc
pusha
call
inc
xchg
out
into
addr16
rol
mov
push
movs
shr
pop
inc
add
test
jmp
jmp
sbb
add
outs
icebp
dec
nop
push
outs
adc
mov
xor
sar
push
pop
pop
lds
or
or
lea
fist
js
popa
dec
int
ins
pop
cmp
dec
inc
gs
mov
push
or
add
clc
sbb
jnp
daa
add
pop
xlat
int3
enter
cmp
fs
fimul
mov
shr
dec
push
jo
adc
push
test
xor
adc
sbb
jnp
push
push
fcom
lea
popf
sub
dec
aas
enter
cmp
mov
xchg
or
push
xchg
jne
jmp
add
adc
movs
mov
jo
ret
lahf
je
(bad)
andps
add
popf
mov
push
lods
jl
out
mov
dec
jne
rcr
lock
and
imul
movs
int
mov
sub
inc
es
ficom
and
pop
pop
mov
cmps
xchg
add
inc
add
fdivrp
pop
jno
dec
je
outs
push
or
enter
sub
test
mov
and
pushf
inc
dec
push
in
or
jns
adc
jnp
mov
mov
outs
shl
sahf
je
adc
pop
cmp
sub
jnp
sbb
ins
and
jb
mov
out
ret
or
nop
sbb
pusha
sar
inc
xchg
ja
in
inc
inc
jnp
retf
and
shl
cld
int3
dec
or
jecxz
test
in
sbb
or
ins
sbb
cmp
and
add
leave
test
dec
dec
addr16
dec
mov
mov
mov
add
xor
mov
sub
push
imul
inc
jecxz
add
mov
loopne
enter
sbb
inc
leave
push
xor
jo
fs
fadd
pusha
lea
sbb
mov
or
adc
lods
push
inc
or
add
dec
inc
fst
mov
rol
mov
mov
add
retf
fcom
and
or
mov
cmp
push
inc
les
sbb
mov
fwait
dec
and
fwait
add
mov
clc
pop
xor
pop
jg
push
push
gs
outs
gs
and
add
out
imul
inc
mov
pop
xlat
imul
xchg
inc
enter
jns
xchg
pusha
jg
or
or
nop
outs
jo
ins
ds
shr
int3
xor
in
jns
enter
cdq
adc
test
sbb
les
cdq
loopne
es
dec
or
dec
call
xor
popa
ins
push
pop
pusha
mov
xchg
aaa
xor
popf
(bad)
mov
test
call
add
nop
ret
pop
add
int3
jbe
scas
xchg
shl
mov
xlat
sub
popa
push
daa
repz
call
ins
jg
jns
pop
fsub
mov
cmp
add
jp
lea
aad
mov
adc
enter
push
movs
fucom
jbe
mov
adc
mov
dec
sbb
cdq
rcr
mov
sbb
xor
jnp
push
sub
(bad)
stos
inc
pop
in
mov
cmp
add
jbe
xor
das
push
fadd
loopne
sbb
push
retf
push
pusha
or
imul
xchg
inc
cmp
dec
jo
les
aaa
sqrtps
pop
xchg
es
or
sub
mov
jmp
push
pop
shl
shl
mov
push
add
into
inc
pop
cmp
arpl
fs
sbb
test
lock
outs
scas
bound
test
lock
int
add
inc
add
outs
daa
push
pusha
and
rcr
dec
push
and
inc
pusha
jmp
adc
ins
addr16
xor
sbb
movs
xchg
push
cmp
outs
inc
sub
inc
cmps
push
mov
repnz
adc
inc
dec
mov
jno
pushf
mov
(bad)
enter
sub
adc
das
mov
jo
cmps
sub
inc
cmps
mov
pusha
sar
mov
sbb
and
xor
and
imul
or
mov
jge
mov
or
fnsave
stc
add
mov
es
mov
and
icebp
push
mov
add
push
inc
rcl
dec
pop
sbb
xor
mov
rcr
mov
jno
jbe
xchg
hlt
or
call
add
aas
pop
rol
adc
(bad)
(bad)
push
in
int3
iret
fdiv
shl
push
mov
push
mov
add
aam
adc
push
add
inc
clc
add
sub
mov
in
outs
sub
jo
(bad)
(bad)
xchg
push
pop
mov
add
lock
dec
outs
dec
iret
stos
popa
add
sub
pop
xchg
imul
mov
std
(bad)
in
xor
add
ins
jb
add
jecxz
and
inc
mov
ficomp
and
mov
inc
mov
dec
arpl
push
aaa
mov
fiadd
mov
adc
push
or
scas
repnz
push
add
les
sub
hlt
xchg
xor
sub
test
push
test
dec
xchg
dec
int3
jmp
outs
inc
adc
test
mov
mov
je
mov
add
es
pop
ss
xchg
inc
xor
mov
cmps
adc
add
shrd
(bad)
adc
int3
fs
add
dec
icebp
mov
jbe
push
or
jne
es
xchg
dec
and
push
call
adc
sti
mov
jne
sub
movs
sub
test
jge
scas
jne
inc
rol
and
cmp
pop
or
cmp
mov
xchg
fild
jne
or
inc
call
inc
jmp
clc
ror
inc
adc
mov
dec
adc
call
lods
inc
(bad)
inc
daa
adc
out
sub
jmp
mov
call
in
jne
loopne
xchg
cwde
mov
in
aam
push
pop
jecxz
jbe
push
(bad)
adc
sar
cmp
aas
xchg
xchg
movs
bound
add
js
mov
int3
sbb
retf
pop
add
jecxz
sub
push
in
rol
or
inc
pop
jne
fsubr
mov
adc
fsub
call
sub
xor
adc
ror
pop
retf
push
dec
push
xchg
lahf
nop
or
mov
adc
or
add
mov
fadd
push
aad
aam
push
dec
shr
sbb
(bad)
mov
push
adc
mov
imul
add
or
mov
repz
clc
cs
ficomp
pop
push
add
imul
das
dec
or
cmp
pusha
js
add
sti
mov
cmp
push
mov
inc
inc
lods
mov
xor
push
nop
and
pop
pop
add
or
xchg
mov
inc
sbb
pop
pop
in
bound
enter
hlt
and
imul
fs
and
mov
xchg
xor
shl
pop
hlt
add
in
sub
inc
xor
mov
addr16
fst
xchg
test
sub
cmovg
ins
dec
add
pop
sub
call
sub
shl
or
mov
and
adc
mov
in
or
pushf
push
lock
lods
add
xchg
imul
pushf
jnp
add
sbb
mov
pop
pusha
call
and
xor
sbb
fisttp
daa
inc
push
imul
add
add
add
push
bound
adc
push
push
fs
mov
sub
inc
mul
or
in
cmp
leave
xor
xlat
dec
mov
jmp
jae
jne
jb
push
and
dec
xor
or
sbb
xchg
push
cmp
enter
nop
loope
sti
dec
in
push
mov
push
ins
stos
xchg
enter
jnp
or
or
mov
repnz
dec
clc
test
into
enter
adc
mov
xchg
sbb
adc
add
inc
pop
jle
mov
fmul
movs
xchg
mov
test
je
enter
push
neg
mov
and
jnp
mov
(bad)
fcomp
add
nop
test
ret
cmp
ja
mov
or
idiv
rcr
or
sub
xor
ret
shr
add
cs
and
sbb
cmp
sub
sbb
fmulp
adc
or
in
adc
adc
inc
jbe
adc
mov
je
imul
or
or
int
sahf
or
out
mov
(bad)
int
sbb
xchg
xor
sub
xlat
sub
mov
sbb
add
ret
push
push
dec
pop
sub
cmp
push
mov
mov
in
jo
pop
adc
ins
jecxz
fisttp
inc
inc
sub
push
ds
fs
jo
ja
aaa
push
ins
jne
shl
or
dec
pusha
pop
inc
or
mov
inc
dec
mov
or
cmp
cmp
pusha
ss
add
popa
sub
inc
inc
add
adc
pop
cmps
add
jge
mov
pop
adc
outs
enter
pop
add
jge
or
push
mov
inc
xor
jns
and
sar
out
xchg
push
adc
(bad)
jmp
add
mov
dec
xchg
xor
popf
ins
in
inc
sahf
rcl
add
out
add
(bad)
push
push
je
add
pop
mov
jmp
test
sbb
nop
ins
push
(bad)
stos
or
inc
inc
dec
pop
pop
dec
push
dec
jmp
or
pop
fs
fwait
add
daa
mov
push
push
mov
jo
inc
push
popa
das
pop
sbb
fild
retf
hlt
shl
add
enter
ret
int
sbb
pop
loop
pop
xor
fstp
ficom
(bad)
adc
icebp
inc
test
pop
adc
sar
inc
pop
loope
inc
shr
gs
xchg
cmp
sub
pusha
mov
add
push
xchg
cwde
ret
push
(bad)
add
cmp
add
mov
or
inc
jb
pop
cmp
adc
gs
or
cmp
pop
add
or
je
or
clc
inc
loope
inc
xor
in
and
pop
sahf
(bad)
(bad)
and
pop
adc
jmp
call
cmps
or
sbb
rol
int3
push
mov
cmp
jne
scas
das
and
mov
add
jns
les
sbb
ins
adc
arpl
push
mov
jmp
shr
fwait
push
adc
clc
add
loop
and
inc
xchg
xchg
adc
lds
add
pop
sbb
daa
lea
xor
inc
test
dec
xor
push
fimul
xor
fisubr
ss
push
pop
das
lock
xor
outs
jae
dec
or
nop
or
pop
ja
mov
rcl
call
and
jb
out
push
jmp
push
sbb
pop
leave
test
fsubr
dec
icebp
xchg
sub
mov
or
mov
enter
test
lds
push
xchg
jo
xchg
les
or
sbb
xor
dec
add
add
call
mov
inc
add
dec
inc
jb
add
jmp
jnp
push
call
call
mov
sbb
mov
ss
xlat
movs
lds
adc
aaa
movs
lock
repnz
push
test
jnp
dec
mov
push
call
sbb
mov
inc
std
mov
mov
adc
add
mov
scas
fistp
lock
mov
shl
ffree
mov
shr
inc
stos
dec
mov
mov
popa
inc
sub
hlt
push
test
leave
adc
sar
xor
cld
push
sub
inc
lods
or
mov
loopne
jg
adc
mov
sbb
adc
xchg
hlt
xor
pop
mov
cli
mov
push
icebp
fld
data16
lods
movs
cdq
xor
sub
leave
add
int
mov
push
ins
ins
bound
add
mov
dec
and
retf
adc
fcom
mov
adc
setp
in
pop
call
mov
push
out
xor
in
je
xor
nop
div
and
mov
jl
dec
das
fdiv
inc
sbb
cwde
nop
fcomp
dec
das
aam
enter
cli
push
push
cmp
cmps
test
adc
mov
cmp
jg
pmulhuw
or
inc
and
add
jns
xchg
xor
in
aam
or
es
popf
lods
mov
add
movs
xor
rcr
add
pop
mov
pop
inc
mov
test
xor
adc
and
pop
call
jnp
mov
mov
adc
rcr
pop
jge
push
int3
push
aad
lods
iret
enter
enter
push
stos
lock
div
stc
call
adc
(bad)
les
add
and
fisubr
or
pop
ret
mov
repz
jle
mov
and
mov
and
nop
sbb
add
mov
in
inc
sub
cmp
cld
and
pop
ds
and
add
inc
add
ja
pop
rcr
inc
fld
nop
xchg
retf
nop
dec
test
hlt
xchg
mov
icebp
push
hlt
out
push
hlt
leave
pop
outs
outs
dec
pushf
fild
rcr
inc
jbe
push
cmp
or
cwde
sbb
pop
and
and
je
and
add
inc
movs
add
and
add
add
lahf
cmp
inc
dec
leave
loope
jle
dec
sar
inc
sbb
sbb
xor
jns
fcomp
xor
jns
add
and
push
in
sbb
xchg
cmps
sbb
pop
push
pushf
test
sub
js
test
or
jbe
mov
mov
cmp
adc
popa
pop
(bad)
adc
(bad)
mov
pop
pop
inc
dec
inc
push
push
inc
push
pop
push
dec
dec
push
aaa
dec
dec
add
cdq
ss
add
adc
and
in
xchg
xchg
adc
or
dec
inc
aaa
or
inc
pop
dec
pop
inc
push
inc
sar
stos
(bad)
cmp
inc
and
sub
inc
dec
dec
sbb
xlat
sub
pusha
cmp
ret
inc
in
or
ss
pop
arpl
pop
mov
cmp
cmp
dec
adc
in
sahf
push
mov
add
push
jmp
push
sbb
push
in
jno
xchg
and
mov
movs
inc
dec
dec
cmp
mov
xchg
pop
xlat
shl
add
adc
mov
pop
lods
mov
sbb
cmp
and
pop
and
nop
and
mov
adc
cmp
pusha
leave
inc
mov
clc
mov
add
popa
adc
dec
test
mov
dec
call
(bad)
mov
adc
ror
adc
outs
mov
fsubr
xor
adc
scas
in
cmp
jl
sbb
mov
leave
add
retf
adc
shl
sar
cmp
jbe
cmp
mov
jl
xchg
and
pop
jne
dec
mov
into
mov
ds
inc
xchg
mov
loope
push
inc
xlat
sub
adc
mov
les
dec
repnz
xchg
cwde
adc
sub
xor
bound
dec
and
sahf
adc
mov
test
jl
(bad)
(bad)
mov
cmp
hlt
lea
cs
xor
cmp
int
ds
xchg
popf
dec
shl
or
mov
rcr
bound
mov
or
mov
retf
push
arpl
inc
call
inc
sub
add
push
hlt
repz
es
test
out
sbb
int3
mov
cwde
gs
ss
cmps
in
cdq
loop
call
cmc
sahf
fwait
mov
hlt
das
nop
int
xor
sahf
fwait
shr
int
lahf
stos
jae
retf
data16
xchg
mov
jb
pop
xor
cmps
mov
call
push
stos
jnp
xor
and
dec
lods
(bad)
daa
lods
inc
fstenvw
in
scas
pop
xchg
mov
outs
mov
cs
ins
mov
pop
mov
pop
xor
sub
test
add
jmp
push
je
pop
and
sub
sub
or
inc
jl
lods
inc
ins
add
sub
xchg
and
push
in
mov
arpl
xchg
pop
mov
xchg
int3
test
or
adc
push
mov
dec
xchg
inc
jb
or
std
nop
nop
and
and
pop
sbb
enter
mov
adc
repnz
adc
or
push
jbe
test
ins
fwait
add
jmp
mov
pop
dec
jae
pop
loop
and
push
ins
ret
inc
mov
and
and
pop
test
xchg
cmp
mov
or
add
adc
push
inc
sub
and
and
shr
mov
sbb
pop
nop
inc
cs
sub
cmp
es
frstor
cmps
sub
adc
addps
pop
sub
stos
push
jge
push
enter
pop
xchg
mov
sbb
adc
inc
test
popf
icebp
sub
pusha
and
(bad)
js
adc
dec
pop
and
adc
xchg
adc
inc
test
inc
ret
in
xchg
or
test
add
and
push
dec
ret
jle
imul
adc
push
pop
mov
add
adc
lea
dec
mov
out
push
cmp
push
leave
sbb
inc
or
dec
or
ficomp
mov
jl
mov
in
and
jecxz
ror
das
and
mov
push
je
pop
sub
ins
jle
push
aas
rol
movs
mov
mov
or
icebp
test
stos
xchg
xor
or
in
jo
adc
xchg
rcr
mov
adc
or
test
das
and
xchg
push
enter
jge
add
dec
es
pusha
jo
pusha
pop
and
mov
add
mov
jl
jo
adc
push
xchg
or
loope
leave
stos
mov
or
mov
in
push
dec
dec
dec
cmp
inc
inc
iret
xchg
pop
jb
sub
leave
inc
cmp
sub
or
xchg
cmp
sub
mov
sub
xchg
xchg
sub
sub
xlat
lock
and
xchg
mov
sbb
in
dec
push
sbb
adc
dec
dec
scas
adc
adc
jns
cmp
rcl
or
in
dec
or
or
dec
sub
push
mov
fs
pop
push
retf
scas
enter
cld
std
and
clc
std
push
inc
sbb
(bad)
aam
mov
mov
fst
in
arpl
push
pop
xor
bound
aaa
dec
dec
sub
push
fnsave
test
add
outs
popa
mov
dec
push
sub
not
xchg
xchg
aad
lods
(bad)
arpl
add
mov
(bad)
xor
ret
in
imul
into
xchg
mov
sub
xchg
pop
test
jge
sub
mov
push
sahf
jl
in
mov
push
add
loopne
test
cmp
mov
ficom
cmp
inc
ret
and
and
xchg
mov
inc
fsub
add
loopne
leave
mov
mov
adc
mov
outs
adc
lock
jle
sbb
jge
jne
push
fwait
ja
popa
sub
fmul
adc
adc
adc
pop
imul
lea
sub
pop
aad
adc
and
adc
int3
push
jbe
or
enter
add
(bad)
std
retf
and
dec
test
sbb
jecxz
ins
movs
cmp
pop
adc
mov
pop
and
and
sub
cmps
xor
mov
cmc
add
inc
call
stos
adc
loop
out
cmp
js
es
adc
in
dec
outs
push
arpl
pop
push
sub
push
sbb
sbb
dec
stos
xchg
inc
retf
aam
ret
xor
inc
fcomip
inc
dec
jno
xor
push
lods
adc
inc
and
xchg
test
mov
adc
sbb
mov
(bad)
and
pop
jmp
mov
jne
loop
(bad)
inc
inc
jg
aam
test
or
or
mov
or
dec
push
mov
inc
rcr
mov
add
mov
test
or
mov
mov
mov
mov
and
add
shr
add
sub
or
movs
or
xchg
dec
xchg
add
or
add
xchg
stos
das
add
aas
xor
out
mov
and
movs
adc
add
nop
sub
xchg
and
xchg
mov
adc
add
loop
add
leave
enter
or
test
dec
fimul
leave
mov
pop
lfs
xchg
push
mov
mov
aam
dec
sahf
cwde
mov
movs
adc
popa
mov
std
mov
js
cmp
mov
push
test
addr16
sub
je
inc
sub
push
xor
cwde
popa
mov
(bad)
adc
adc
pop
rcl
sub
mov
add
leave
iret
iret
(bad)
neg
inc
inc
pop
scas
dec
adc
aas
inc
outs
inc
outs
xlat
test
out
int
and
mov
arpl
cmps
mov
mov
mov
cmp
xor
push
call
push
xchg
mov
xchg
stc
or
cli
aas
adc
mov
mov
adc
inc
sbb
or
and
mov
shr
ret
cld
dec
ds
inc
out
(bad)
mov
ror
jmp
mov
rcr
push
(bad)
add
xchg
sbb
dec
dec
test
(bad)
push
inc
pushf
fidivr
lea
mov
test
cmps
je
mov
retf
sbb
mov
ja
gs
or
in
ins
cmp
movs
xchg
rcr
xchg
xor
xor
in
push
es
jecxz
sub
pop
test
pop
call
ja
(bad)
out
lahf
mov
inc
xchg
and
or
test
popa
retf
inc
sub
adc
xchg
add
rol
or
pop
xchg
and
data16
in
push
loop
mov
ja
inc
sub
sbb
cmp
mov
out
ins
adc
mov
test
sbb
sub
in
xchg
and
sub
mov
adc
push
adc
fld
popa
mov
xor
popa
pop
pop
or
mov
mov
test
sub
push
inc
fadd
jle
mov
adc
xor
inc
lgdtd
push
scas
xchg
sbb
mov
push
cdq
ret
daa
imul
mov
and
clc
jae
push
cwde
mov
inc
stos
push
add
pop
mov
add
push
retf
cmp
imul
int3
xor
sbb
xchg
mov
push
pop
and
fbstp
and
adc
jbe
mov
cmp
hlt
lods
clc
jns
sub
mov
ss
sbb
push
loop
add
jecxz
cmp
sbb
mov
or
inc
nop
or
push
add
or
call
mov
mov
aaa
or
mov
cmp
add
mov
ds
xor
push
dec
jns
xchg
ins
outs
dec
outs
mov
cmps
mov
fs
cmp
mov
inc
lock
lds
sub
xor
and
sbb
push
ins
push
or
mov
ret
add
outs
into
mov
pop
mov
pop
cmp
sub
sti
inc
leave
push
sbb
pop
in
mov
call
cmp
add
ret
int3
mov
stos
movs
push
xchg
inc
and
and
push
sub
and
inc
mov
cmp
add
push
test
push
and
or
stc
adc
inc
adc
pop
push
data16
adc
out
imul
sub
cmps
imul
mov
inc
or
test
dec
mov
inc
mov
cmp
sub
dec
dec
inc
dec
mov
and
xor
stc
mov
adc
fistp
cmp
jne
or
pop
jne
not
mov
push
and
sub
mov
aas
mov
sbb
mov
inc
fs
xchg
xchg
mov
call
mov
mov
dec
and
inc
test
test
movs
sbb
sbb
daa
cmp
mov
xchg
es
mov
adc
es
movs
pop
jae
cmp
mov
mov
call
mov
jmp
mov
and
xor
pushf
or
mov
dec
aaa
or
imul
cmp
fdivr
push
cdq
xchg
xchg
or
add
or
(bad)
mov
mov
inc
xor
pop
xchg
mov
adc
fucomi
mov
jae
sbb
jg
hlt
xchg
in
xor
jle
fstp
sbb
cmp
(bad)
pop
mov
jnp
cmp
add
xor
stc
call
jbe
stc
mov
pop
sbb
aam
xor
lock
mov
and
mov
cmp
or
sbb
imul
iret
mov
faddp
adc
in
push
add
lods
ss
rol
stos
sbb
pop
xchg
ror
add
ins
rol
shl
in
outs
xchg
fcomp
mov
aam
dec
(bad)
cmp
mov
sbb
push
jge
push
pop
fisttp
outs
imul
xchg
retf
sub
jmp
push
pop
add
sbb
or
mov
mov
pop
icebp
adc
adc
push
and
fsub
dec
push
mov
jno
add
jae
jno
imul
sub
push
sub
add
add
inc
and
fnstcw
sub
les
and
jae
cmp
mov
push
xor
cmp
adc
lds
dec
arpl
hlt
jns
mov
push
and
add
js
dec
and
jae
scas
sar
sub
and
jmp
xor
mov
push
and
mov
movs
pop
lea
mov
pop
pop
or
dec
or
dec
imul
mov
push
imul
je
cs
pop
mov
push
sub
and
xor
and
out
aas
fimul
imul
cmovl
jns
push
or
(bad)
aam
sbb
sbb
(bad)
call
sbb
in
jnp
js
xchg
inc
(bad)
icebp
mov
adc
popa
mov
lds
sub
in
pop
lods
sbb
test
add
jl
sbb
iret
mov
sub
ins
xor
xchg
movs
jne
nop
scas
and
sub
push
or
loopne
push
push
jne
jns
xor
enter
hlt
test
mov
jno
sti
adc
mov
sub
fstp
jge
cdq
lea
sbb
dec
or
xchg
or
popa
or
std
sub
fisttp
(bad)
(bad)
push
(bad)
in
push
popa
out
ret
push
cmc
and
pop
add
xlat
jo
add
mov
loop
in
xchg
les
ficom
and
xor
mov
xchg
xchg
aam
lds
dec
push
inc
inc
adc
loopne
mov
push
in
cmp
ins
jecxz
jne
test
out
bound
fld
pop
or
movs
dec
imul
loopne
ret
xor
add
xchg
push
dec
dec
sub
cwde
mov
jg
rol
jo
shr
sbb
and
popa
push
push
mov
cs
popa
or
inc
mov
enter
test
movs
rcr
mov
or
sbb
adc
inc
cmp
mov
push
mov
cmp
daa
ret
cmp
cmp
mov
enter
lea
jbe
mov
es
inc
bswap
fsub
mov
xchg
mov
lahf
stos
fist
add
imul
and
ins
mov
push
mov
cmp
enter
mov
mov
and
enter
add
add
push
loope
pop
fmul
cmp
xor
enter
jb
adc
sbb
pop
enter
sar
shl
leave
test
or
and
dec
mov
es
mov
push
clc
in
es
mov
cmpxchg
jns
sbb
adc
dec
enter
mov
test
sub
inc
lock
movs
pop
repnz
in
sahf
(bad)
retf
mov
xor
mov
mov
pushf
mov
or
cmp
mov
xchg
mov
hlt
nop
or
or
not
mov
jl
outs
sub
pop
sbb
fadd
jmp
jns
mov
and
pop
pop
pop
xchg
std
test
outs
cmp
int3
sub
adc
pop
sbb
ds
inc
push
outs
add
xor
add
sbb
cld
inc
fld
lahf
dec
int
push
mov
xchg
sbb
sub
mov
cmps
mov
or
mov
or
adc
cli
push
sub
sbb
dec
repnz
cmp
sar
mov
outs
jg
and
jmp
mov
mov
jo
cmp
rcr
push
aaa
xchg
xchg
sbb
xchg
push
xchg
ret
pusha
outs
or
imul
fldcw
push
(bad)
and
or
fsub
inc
and
imul
je
rcr
push
ret
nop
add
fs
push
pop
das
add
loop
ds
push
mov
or
add
pop
gs
jb
popa
outs
and
aas
paddusb
add
je
jo
sub
mov
inc
inc
xchg
adc
rcr
daa
or
add
cmp
push
cmp
adc
(bad)
or
or
or
sbb
jge
mov
xor
fwait
test
xor
repnz
inc
and
and
dec
add
push
je
(bad)
sub
pop
mov
ficomp
pop
fistp
xlat
cmp
cmp
(bad)
sbb
dec
fild
xchg
xchg
ret
or
adc
sub
pop
ror
mov
lods
adc
pushf
int3
sar
xchg
ret
pop
and
not
sub
sets
cmp
and
dec
pop
add
cmps
pop
mov
adc
push
lods
shr
pop
xchg
push
adc
nop
pop
sub
sub
jno
dec
imul
inc
ss
rol
test
mov
or
and
(bad)
xor
xchg
enter
pmuludq
movs
sbb
dec
daa
inc
std
ret
mov
xor
add
pop
mov
xchg
arpl
lock
sbb
inc
mov
dec
pop
adc
pop
hlt
and
lods
mov
fwait
rcl
inc
or
add
dec
and
bound
aas
out
cli
into
enter
or
ret
imul
jne
xor
aad
scas
push
xor
or
or
xor
es
mov
call
cmp
push
pop
fsub
mov
call
lods
shr
and
mov
repnz
xchg
xor
add
aad
xor
dec
test
shr
in
into
outs
mov
shl
push
and
xor
jbe
mov
adc
mov
pop
cmp
popa
sbb
aad
cmp
and
pop
add
sbb
and
and
ret
mov
add
movs
sbb
sbb
add
dec
and
inc
sar
vpavgb
(bad)
mov
sub
jnp
sbb
rcr
aad
sub
sahf
add
popa
loopne
and
out
nop
inc
xor
cmp
sub
in
rol
cmp
adc
and
mov
and
sbb
xor
add
stos
push
pop
push
push
dec
add
sub
pop
xor
xor
and
mul
mov
inc
nop
(bad)
mov
push
and
adc
fwait
pop
adc
out
push
sub
dec
adc
adc
push
dec
das
dec
add
gs
push
sub
add
seto
mov
movs
and
lods
jp
mov
ror
pop
sbb
hlt
jp
mov
int
(bad)
call
mov
add
adc
fbstp
fldenv
cmc
inc
mov
push
aas
push
cmp
inc
ret
cmp
pop
push
(bad)
imul
xor
dec
cmp
jo
adc
dec
dec
push
xchg
neg
fwait
shl
cmp
into
add
das
mov
sbb
bound
inc
ror
rcl
inc
jne
(bad)
push
xchg
fcomip
loop
xlat
dec
add
jecxz
dec
mov
pop
ror
adc
sbb
mov
aam
push
daa
fwait
ins
push
add
pop
or
fistp
les
and
mov
cdq
addr16
fmul
loop
or
stos
addr16
dec
test
inc
addr16
dec
addr16
push
xor
addr16
dec
inc
fwait
jbe
or
adc
mov
or
das
mov
or
xchg
mov
xchg
mov
mov
dec
add
add
icebp
mov
sbb
and
and
inc
dec
xlat
clc
and
shl
mov
leave
in
dec
ret
adc
out
pusha
mov
add
adc
loop
dec
ins
rol
fsub
xor
test
mov
hlt
sbb
add
sbb
add
xchg
add
sbb
out
inc
cmps
mov
shl
sbb
sbb
out
inc
mov
out
aad
cmp
leave
dec
mov
in
fdivp
or
leave
sbb
add
or
push
or
add
enter
les
jmp
sbb
mov
or
push
sbb
cmp
pop
jns
test
ja
arpl
(bad)
popf
jmp
inc
add
aam
push
enter
inc
fdivr
pop
sbb
cmp
cmp
inc
cs
xlat
test
sbb
xchg
or
mov
add
ficomp
add
pop
rol
adc
sahf
add
mov
mov
and
dec
push
xchg
and
sbb
loope
ret
xor
add
sbb
cmp
jb
loopne
loopne
adc
rcl
mov
add
repnz
sub
jno
xchg
mov
popf
ja
inc
sar
and
add
nop
push
enter
int3
in
pop
and
xchg
retf
and
add
mov
retf
(bad)
out
or
xlat
out
sub
xor
cwde
push
xchg
add
add
or
mov
and
test
lock
aam
dec
shl
inc
cpuid
mov
daa
sub
xchg
jo
lds
lods
mov
pop
es
(bad)
dec
mov
inc
cs
cmp
pop
into
ret
jl
popf
dec
addr16
mov
xor
sbb
pop
inc
pop
inc
push
mov
cmp
std
or
lea
(bad)
lock
and
and
call
rol
dec
sub
dec
cmp
and
mov
xchg
sbb
add
dec
adc
addr16
sub
dec
sub
jle
xor
bound
adc
sub
pop
jb
jmp
cmp
in
xchg
pusha
in
sub
adc
jl
cwde
in
and
enter
(bad)
xchg
in
(bad)
push
test
jge
xor
and
sub
push
psrlw
loopne
sub
call
fimul
out
(bad)
xor
mov
fdiv
in
dec
mov
mov
push
add
mov
inc
sub
push
inc
jno
loopne
mov
test
int3
idiv
sar
and
cmp
ins
jmp
cmp
xchg
(bad)
aaa
xchg
inc
mov
add
or
xchg
push
cld
in
fadd
out
push
and
jbe
sar
pop
movaps
or
mov
sbb
or
fsub
and
xchg
or
or
int
adc
inc
adc
mov
pop
aam
gs
js
cmp
cmp
mov
add
ret
mov
jl
add
cmp
mov
nop
sub
popa
mov
or
sub
fs
or
lock
sub
or
push
inc
mov
or
add
cmp
repnz
es
bound
sbb
and
dec
pop
cmp
cmp
fdivr
add
xor
push
xchg
and
sub
mov
or
mov
imul
push
int3
mov
add
dec
inc
add
dec
call
sub
jl
lahf
and
cwde
mov
dec
and
dec
(bad)
adc
xor
push
fwait
mov
mov
push
ficomp
sub
shr
push
fsubr
popf
ja
dec
fs
imul
add
inc
pop
pop
pusha
sbb
inc
es
add
in
je
and
push
cld
inc
push
ror
cmps
dec
xor
shl
rol
jmp
dec
ins
mov
and
push
and
jge
cwde
mov
dec
cld
cmps
cmps
pop
and
cmc
inc
cld
ds
outs
and
cmc
dec
jne
sbb
mov
sbb
cli
mov
push
cwde
pop
test
inc
rcr
pop
adc
test
or
push
pop
test
pop
hlt
sub
inc
mov
sub
or
jo
addr16
les
push
inc
xor
inc
mov
and
pop
pop
or
dec
ror
mov
sahf
push
inc
xchg
pop
lock
aam
and
fcom
cmps
push
fmul
xchg
clc
push
je
outs
sbb
test
sbb
inc
cs
sbb
mov
cmp
je
inc
inc
push
inc
mov
test
jne
scas
xor
into
mov
mov
lock
mov
pusha
pop
test
test
xor
in
inc
inc
add
out
and
stos
mov
(bad)
lock
jns
shl
jns
mov
or
push
popa
add
dec
mov
pavgb
push
pusha
cmp
test
popa
cmp
js
fldcw
and
imul
sbb
jb
lock
aam
into
test
scas
jo
add
inc
adc
enter
xchg
jns
ret
outs
clc
sbb
adc
xchg
or
in
adc
add
xchg
or
add
mov
or
(bad)
add
jmp
fdiv
imul
inc
jbe
cmp
sbb
ins
adc
add
outs
stos
sbb
mov
or
sub
add
add
push
add
int
loopne
xchg
dec
inc
push
sbb
pop
xchg
mov
aaa
(bad)
adc
ret
out
xchg
xor
movs
call
mov
iret
in
adc
xor
lock
into
test
repz
nop
add
jecxz
dec
or
fdiv
int
push
inc
cmps
mov
mov
test
xchg
inc
push
push
mov
loopne
pop
jo
inc
outs
hlt
cmp
adc
stos
mov
sbb
lss
mov
popf
ret
call
jns
shl
ret
jge
mov
or
stos
icebp
adc
movs
(bad)
or
fimul
mov
retf
icebp
adc
push
add
shl
add
fsub
popa
and
add
fidiv
or
dec
mul
jmp
push
imul
mov
ret
xchg
sbb
in
sub
sub
pop
inc
and
ret
xor
or
rcl
repnz
inc
or
mov
jne
and
icebp
in
and
repnz
push
push
fdiv
(bad)
mov
mov
inc
adc
jbe
dec
in
popa
icebp
js
cmp
ret
leave
shl
adc
push
iret
out
xchg
mov
jne
out
or
push
sub
stos
dec
inc
rcr
cmc
mov
xor
sub
inc
gs
pop
sub
sub
hlt
mov
add
push
add
ss
outs
sub
cmp
sub
mov
sbb
push
add
and
test
or
imul
mov
es
jo
fist
hlt
lock
(bad)
daa
xchg
test
dec
push
mov
inc
popa
xor
mov
adc
cmp
fsubrp
add
addr16
(bad)
sub
nop
fs
not
push
enter
xchg
inc
stos
lahf
cmps
clc
xor
jae
in
and
idiv
ins
sbb
xchg
nop
dec
imul
or
ss
and
push
test
xor
pop
jg
sub
addr16
lds
push
sbb
les
fist
(bad)
sub
lea
and
hlt
pop
mov
shl
add
mov
mov
or
and
aas
adc
mov
xor
pop
mov
cmps
lods
inc
inc
pop
sbb
inc
inc
inc
inc
mov
mov
je
or
mov
hlt
mov
jge
jo
mov
or
cdq
cmp
and
dec
add
pop
sub
and
leave
cs
sub
sub
adc
arpl
jbe
sub
mov
lds
(bad)
pusha
mov
and
icebp
test
sub
ins
fadd
sub
cmp
add
shr
or
mov
push
mov
dec
enter
repnz
mov
mov
pusha
sbb
mov
nop
jp
lock
inc
pop
mov
mov
adc
imul
in
adc
sub
jmp
adc
enter
adc
ficomp
dec
les
push
loop
lods
and
dec
sti
or
mov
mov
and
and
xchg
dec
lahf
add
ins
fcmovnb
cmps
fdivr
push
sub
stos
fwait
add
in
stos
cmps
iret
push
inc
jecxz
xor
mov
sahf
fwait
mov
test
popa
and
dec
fbld
adc
lds
jbe
mov
fst
test
sbb
adc
stos
popf
in
mov
iret
add
rol
mov
mov
mov
xor
cli
lock
sub
mov
sub
xor
and
cs
and
aad
or
mov
fwait
movs
ret
rcl
call
mov
sbb
lods
lock
jl
leave
inc
cmp
popa
xchg
clc
or
or
xchg
xor
stos
add
sbb
push
gs
cdq
mov
lock
cmp
fdiv
inc
jb
xchg
lock
and
dec
mov
cmp
and
inc
mov
jecxz
adc
shr
pop
fsub
xor
mov
adc
sub
sub
inc
and
add
rcl
jmp
les
dec
mov
std
loop
and
dec
popa
popa
add
(bad)
dec
adc
add
movs
mov
dec
popa
or
les
xlat
aad
lea
jge
fwait
cdq
dec
adc
sbb
mov
mov
inc
inc
fs
inc
push
jmp
cmp
pop
mov
aam
and
arpl
fst
fmul
call
inc
int3
sar
xor
jb
and
mov
gs
mov
mov
sar
dec
mov
jmp
in
inc
cs
popf
call
or
stos
retf
xor
and
test
test
movs
fnstcw
mov
mov
xchg
mov
cmps
cmp
inc
cwde
cs
ss
add
dec
nop
pop
nop
imul
inc
xchg
ja
fiadd
xor
call
popa
mov
cmc
inc
and
and
jp
jg
dec
mov
mov
mov
add
into
out
shr
pop
imul
enter
cmp
les
mov
jle
mul
mov
das
rol
mov
cld
mov
(bad)
mov
aad
(bad)
push
mov
xchg
jbe
stos
mov
(bad)
in
mov
jecxz
ret
sti
mov
cmp
sub
dec
mov
mov
out
retf
dec
sar
jbe
mov
add
and
and
sbb
je
add
call
sbb
sbb
mov
dec
and
inc
fldenv
mov
aaa
adc
inc
outs
push
sub
mov
(bad)
hlt
(bad)
shl
into
stos
mov
cld
mov
les
cs
dec
inc
cmps
add
mov
ins
or
dec
pop
cmp
push
jecxz
xor
sbb
cmc
cmc
or
cmp
mov
add
push
adc
mov
outs
mov
imul
inc
add
xchg
in
cwde
pushf
or
movs
or
dec
dec
pop
mov
mov
xchg
xor
add
mov
gs
loopne
mov
fsub
adc
sbb
dec
clc
rcl
data16
push
repnz
xor
in
or
jl
dec
add
add
in
fwait
jecxz
sti
and
pusha
fwait
mov
push
cmp
arpl
push
adc
and
xchg
lahf
push
ror
mov
xor
and
inc
dec
inc
or
xchg
cmp
or
mov
or
jecxz
jmp
pop
dec
sub
dec
inc
lods
mov
mul
cmp
and
pop
dec
neg
sar
sub
je
mov
enter
pop
push
ror
push
push
jg
or
sbb
ins
sub
adc
mov
std
or
in
mov
test
and
dec
fisttp
adc
and
ret
adc
mov
sub
and
mov
adc
push
or
inc
mov
sbb
pushf
test
cmps
xor
pop
cmc
inc
pop
mov
std
and
dec
fwait
lods
pop
mov
lds
dec
mov
push
sbb
cmps
or
je
sub
mov
and
leave
out
fcom
push
mov
inc
cmp
out
pop
shl
sub
iret
cmc
scas
test
xor
inc
pop
test
stos
sub
adc
inc
inc
fisubr
movs
mov
test
or
sbb
push
aaa
test
mov
into
adc
sbb
push
bound
mov
jle
sbb
fiadd
imul
sub
pop
cmp
push
std
stc
cmp
mov
adc
and
out
sbb
aam
rcl
jmp
inc
push
jecxz
enter
loopne
lds
jecxz
pop
cmp
out
cmps
or
sub
sub
adc
jge
jmp
aas
pushf
mov
mov
push
das
mov
shl
pop
ins
xor
mov
aas
push
fs
mov
mov
inc
push
adc
stos
sbb
push
std
xchg
and
and
adc
aaa
and
mov
nop
and
outs
call
xor
(bad)
fisttp
scas
not
popa
sbb
jl
or
je
jno
jo
ja
pop
add
ja
in
enter
and
pop
xchg
popa
lods
xor
outs
fwait
push
or
outs
jmp
or
mov
jae
xor
adc
and
enter
mov
enter
and
sub
mov
or
sub
adc
movzx
inc
cmp
or
bswap
cld
(bad)
mov
movs
push
sbb
pop
adc
aam
mov
add
test
loop
cmc
cmp
cli
cmp
inc
stc
jne
or
push
ja
xor
sbb
xchg
sbb
(bad)
push
cmp
pop
xchg
inc
fs
add
js
adc
repz
dec
repnz
push
dec
in
in
mov
leave
in
call
and
jb
in
mov
pop
in
push
loopne
in
jb
mov
fmul
mov
cdq
(bad)
(bad)
and
xchg
and
fadd
push
arpl
cmp
push
out
or
cmp
add
sub
sub
test
iret
push
add
xchg
(bad)
xor
popa
or
mov
pusha
adc
ror
es
add
dec
or
shr
xor
xor
xor
add
ret
dec
loope
hlt
sbb
icebp
adc
push
dec
repnz
cmp
cli
loope
clc
fistp
(bad)
xchg
push
push
push
add
cs
add
mov
out
or
cwde
shl
ret
add
iret
adc
mov
sub
retf
out
fsub
ret
jle
adc
mov
push
daa
cs
pushf
mov
jo
ins
jmp
pusha
jecxz
adc
dec
fild
or
je
sbb
pop
fs
add
cmp
pop
pop
sbb
enter
pushf
add
inc
or
add
(bad)
fs
push
jge
bound
pusha
pop
repnz
cmp
js
js
lock
or
or
inc
inc
lea
inc
sahf
add
and
shl
push
cmp
ins
push
and
and
pushf
ss
inc
push
mov
or
out
ins
jecxz
inc
nop
jno
clc
aas
ja
or
jecxz
fist
jns
sub
and
cmp
add
sub
push
add
jl
cmps
mov
push
xchg
mov
ror
adc
mov
fdiv
push
mov
or
mov
push
movs
add
test
outs
xor
xchg
ins
xchg
adc
mov
fdivr
shr
adc
cmp
sub
xor
push
dec
sahf
jmp
mov
xchg
push
push
push
fs
(bad)
dec
sahf
fld
pop
cdq
enter
test
sbb
das
xor
les
enter
jne
or
inc
push
xor
sbb
and
mov
and
stc
inc
je
ins
or
lock
test
rol
pop
loopne
mov
ins
inc
mov
add
ret
mov
outs
ins
imul
retf
ret
sbb
jne
lods
aaa
pop
or
add
adc
cmp
je
aas
out
and
inc
dec
sub
cmps
outs
imul
imul
push
cmp
add
dec
mov
cmp
adc
out
or
dec
sbb
pusha
mov
cwde
jp
mov
xor
and
mov
cmp
and
adc
clc
jle
xchg
dec
push
hlt
call
cdq
loopne
rol
cdq
fs
rcl
clc
and
bound
dec
cmp
mov
ss
dec
inc
and
adc
and
shl
adc
cmp
mov
aaa
dec
je
rol
sbb
adc
pop
mov
pop
adc
mov
ins
xor
shr
sub
cdq
ss
sbb
add
dec
and
jo
or
adc
xor
add
mov
add
ss
xchg
and
cmp
test
enter
sbb
add
jo
pusha
dec
in
dec
xchg
xchg
mov
inc
pop
cmp
sbb
repnz
clc
push
cmc
fsubr
push
mul
sub
dec
and
addr16
sbb
lods
sbb
clc
sbb
enter
ins
xchg
int
push
mov
adc
jnp
outs
mov
sub
paddb
sub
out
adc
sub
pop
jg
push
fs
sub
xchg
retf
in
shl
mov
xchg
ins
dec
push
lods
and
cwde
push
js
retf
fidivr
xlat
outs
inc
mov
in
pop
ss
mov
jp
jns
div
retf
xchg
jb
inc
fcom
push
sub
pop
pop
ins
ins
lods
or
inc
dec
push
push
dec
and
add
data16
not
xchg
ret
xchg
pop
test
sbb
sbb
xchg
in
pushf
push
mov
push
push
cdq
mov
cmps
dec
sbb
and
repnz
fnstenv
mov
aas
push
test
xor
popf
mov
push
les
data16
aam
int3
out
data16
call
mov
cmps
mov
push
cmp
int3
pushf
(bad)
retf
cmps
adc
fdiv
sbb
repnz
ins
imul
sub
scas
aad
xor
pop
mov
repz
(bad)
(bad)
cld
std
xor
xor
int
pop
inc
inc
adc
sub
loopne
imul
in
aaa
mov
test
push
mov
ss
jo
inc
ror
pop
mov
pmuludq
pop
sar
pushf
mov
mov
call
test
mov
mov
icebp
lock
pusha
call
dec
mov
cwde
push
or
in
and
nop
daa
pop
ss
pushaw
sub
sub
mov
mov
jg
pusha
mov
push
test
call
dec
fdiv
mov
lods
imul
pop
cs
and
push
rcr
or
xchg
jae
jl
fadd
int3
psubsb
and
hlt
fst
aam
fiadd
add
jmp
ins
jo
inc
cld
(bad)
enter
(bad)
sub
les
xchg
push
cld
int3
xchg
in
xchg
inc
js
dec
push
sbb
call
cs
js
es
clc
and
xor
push
push
and
cdq
lods
imul
rcr
pop
fs
push
pushf
add
mov
jns
aam
dec
pop
sub
outs
mov
jo
imul
shl
cmp
or
inc
cld
int3
mov
pop
ss
je
and
push
dec
repz
les
xchg
add
paddq
mov
mov
data16
nop
push
dec
arpl
enter
pop
ss
xchg
outs
adc
jo
mov
cld
mov
add
test
sbb
add
adc
and
adc
push
pop
push
or
and
loope
loop
shl
test
les
mov
sub
fisttp
je
mov
mov
mov
adc
popf
(bad)
fdiv
leave
in
and
add
js
jne
or
dec
fcomp
push
adc
push
mov
sar
cmp
mov
cmp
mov
pop
jns
mov
mov
pop
es
fiadd
mov
imul
lea
xchg
mov
leave
and
addr16
and
shl
ins
add
mov
fsub
into
aaa
jb
and
imul
dec
push
dec
sbb
mov
adc
(bad)
push
sbb
inc
pusha
jbe
add
dec
or
jmp
xchg
mov
(bad)
dec
les
add
mov
xlat
js
jnp
mov
fcomp
adc
mov
mov
mov
mov
cmp
pusha
push
or
adc
add
and
pop
or
push
or
jecxz
mov
sub
or
mov
add
ss
pop
fdivr
js
inc
shr
imul
outs
ins
pop
outs
pop
dec
push
push
pop
inc
sub
das
das
int3
loope
stos
inc
jmp
sar
mov
call
(bad)
mov
into
icebp
mov
mov
xlat
mov
leave
mov
push
push
mov
or
dec
add
cdq
mov
xor
mov
add
and
mov
and
leave
xlat
iret
enter
fcomp
fxch
inc
dec
(bad)
(bad)
(bad)
loopne
jecxz
in
pop
add
mov
iret
dec
es
popa
mov
jmp
ins
adc
sbb
cmps
mov
pop
inc
add
add
and
push
ds
mov
sbb
dec
ins
xor
ins
shl
adc
xchg
mov
sub
cmp
xor
inc
fdivr
sbb
xor
pop
imul
fild
add
and
inc
call
jle
adc
and
call
dec
cmps
imul
imul
cmps
imul
fsub
in
hlt
jle
push
jg
adc
add
test
retf
and
fs
mov
in
push
adc
push
cmp
enter
js
cmp
leave
inc
sub
daa
pop
cmp
test
dec
sbb
and
add
inc
dec
sahf
sbb
and
dec
cmps
test
int3
sub
fimul
clts
daa
or
adc
adc
adc
(bad)
movs
pop
inc
cmps
imul
shl
or
sbb
cmp
pusha
xor
shl
adc
rol
shl
hlt
jmp
add
adc
movs
cmp
and
pop
add
push
dec
cs
dec
test
jmp
inc
pop
mov
or
scas
outs
popa
inc
ror
test
xor
pop
lock
jbe
sahf
imul
push
clc
push
and
nop/reserved
sub
push
cmp
rcl
rol
push
push
imul
jo
push
sbb
xchg
push
add
pop
mov
fcomp
lock
lock
sti
(bad)
repnz
mov
ss
push
fsubr
push
add
or
add
imul
imul
ins
(bad)
push
sbb
repz
sbb
adc
or
cmps
imul
cmps
imul
shl
and
xor
fdiv
hlt
fistp
jo
call
adc
call
repz
pop
add
sidtd
xor
add
dec
mov
xor
shl
and
rol
mov
inc
mov
cmps
imul
cmps
imul
add
or
add
add
add
inc
(bad)
cs
cmp
or
or
rcl
lods
push
punpckldq
ret
add
(bad)
out
add
jg
add
adc
sbb
nop
push
cmp
adc
sbb
mov
jbe
not
or
retf
clc
adc
cmp
ins
push
jns
xor
jl
jg
add
rcr
add
jg
mov
out
xor
rol
enter
add
lods
imul
imul
mov
int3
aam
push
mov
test
shl
pop
ins
not
dec
sbb
push
add
adc
sbb
and
xor
push
push
inc
add
jmp
ins
inc
push
jle
push
lods
es
das
sti
rdmsr
enter
add
add
and
add
adc
xor
(bad)
cs
or
push
or
push
sbb
sbb
add
push
nop
inc
pop
(bad)
ror
and
push
adc
xor
push
or
fnstenv
push
or
paddb
mov
sub
sbb
fsub
call
enter
fs
xchg
pop
sub
out
jmp
push
shl
call
or
xor
call
and
mov
ins
call
inc
call
aaa
adc
adc
add
or
nop
push
aam
call
clc
cld
xor
mov
or
stc
sub
xor
sar
inc
not
shl
nop
repz
shl
repnz
enter
shl
fsubr
lock
cmps
imul
movs
imul
sahf
add
sub
jg
test
and
test
inc
scas
jbe
mov
sbb
pop
outs
jle
ss
inc
or
or
add
add
add
sahf
pop
ins
inc
adc
nop
neg
sbb
dec
fiadd
or
and
or
and
add
loope
imul
add
push
hlt
inc
inc
gs
ret
pop
adc
dec
fsub
push
pop
mov
in
test
push
pop
mov
pop
enter
outs
push
pop
pop
add
jnp
or
stc
mov
cli
sti
cld
shl
add
(bad)
jg
push
mov
add
outs
je
add
pop
inc
mov
add
(bad)
(bad)
(bad)
clc
xor
and
adc
xor
and
adc
add
adc
das
daa
(bad)
inc
call
pop
sysret
cmp
sub
sbb
jmp
xor
and
adc
add
sub
sbb
or
(bad)
(bad)
inc
ss
push
push
push
daa
pop
das
getsec
pop
aas
pop
es
cs
ss
ds
and
adc
call
xor
cmp
and
sub
xor
cmp
and
sub
xor
cmp
and
sub
xor
cmp
add
xchg
xchg
sub
xor
cmp
icebp
or
inc
jmp
aas
or
daa
or
call
movups
inc
adc
adc
imul
push
sbb
sbb
sbb
jbe
jmp
clc
out
aas
clts
adc
or
lds
push
sbb
push
xchg
pop
pop
or
call
add
adc
sbb
add
imul
push
or
or
movs
add
add
sbb
add
dec
add
push
or
or
pop
inc
fisttp
or
add
jg
ror
push
or
div
out
pop
and
mov
mov
push
pop
test
or
pop
or
mov
ins
(bad)
ror
(bad)
mov
or
mov
jnp
sub
push
or
out
push
ja
cmp
mov
mov
dec
or
cdq
stos
jge
rcr
jmp
dec
femms
add
sub
test
sub
imul
out
sbb
push
mov
loopne
ja
xchg
pop
pop
popf
aad
jo
fstp
dec
or
inc
aad
(bad)
or
jnp
mov
push
or
push
and
add
xchg
iret
sti
add
push
push
add
sub
cmp
dec
inc
push
imul
(bad)
mov
loop
mov
add
in
fcomp
arpl
(bad)
int
iret
push
paddsb
lods
add
addr16
addr16
iret
add
cmp
mov
add
inc
push
add
mov
jb
jbe
mov
inc
inc
or
push
sbb
add
or
or
add
or
or
add
ret
pop
or
fsub
add
jmp
jns
cmp
fbstp
cmp
sahf
dec
inc
jg
hlt
cwde
(bad)
iret
(bad)
xor
(bad)
cmps
xor
sub
ffreep
call
adc
adc
or
add
pop
sbb
pop
adc
add
(bad)
jmp
xor
and
ss
das
sub
aaa
and
pop
and
popf
xor
or
xchg
and
ins
movs
inc
loope
xchg
xor
adc
aam
mov
cmp
or
and
adc
movs
jecxz
jo
inc
sub
loop
mov
(bad)
call
push
add
shl
pop
add
loopne
inc
cmp
xchg
dec
mov
pop
cmp
adc
pop
adc
adc
push
and
and
add
xchg
add
add
test
add
push
push
xchg
xchg
pop
and
or
or
jmp
aaa
not
adc
jae
shr
xor
dec
aas
xor
movs
mov
bound
pusha
xchg
sbb
and
add
mov
push
inc
add
inc
daa
adc
ins
jns
vmread
xchg
in
fs
ss
shl
push
cmps
imul
sub
je
xchg
xor
adc
shl
sbb
sub
xor
shl
je
dec
shl
xchg
nop
xor
shl
movs
xchg
pop
mov
xor
rcr
dec
shl
movs
jl
dec
shl
test
add
lods
imul
imul
imul
cmps
imul
call
fldenv
movs
aam
cwde
into
cmps
imul
cmps
imul
cmps
imul
in
shl
mov
movs
xor
mov
xor
aam
add
xor
cmps
imul
xor
shl
test
xchg
dec
shl
pusha
mov
dec
shl
jo
sbb
shl
in
shl
add
call
xor
and
call
cld
shr
cmps
inc
inc
adc
xor
and
je
xor
shl
test
shl
pop
ins
dec
shl
test
nop
in
(bad)
lods
add
fidiv
adc
enter
dec
sar
and
shl
mov
xor
shl
mov
fwait
push
xchg
shl
xor
inc
movs
movs
pop
mov
dec
shl
ins
les
rcl
mov
in
shl
add
call
int3
hlt
and
int
imul
and
xor
rol
push
loopne
shl
je
xor
shl
test
movs
xchg
int
imul
add
mov
dec
shl
cld
les
popf
rol
dec
in
inc
ret
popa
push
nop
outs
add
aas
sbb
push
lods
daa
and
xchg
xor
(bad)
test
(bad)
push
scas
xchg
mov
push
lock
cld
imul
or
push
adc
xor
mov
popf
movs
adc
mov
shl
pop
add
pop
add
xor
imul
imul
cmps
imul
dec
rcl
add
aam
dec
shl
in
clc
add
adc
cmps
imul
imul
sub
mov
out
in
js
mov
fld
adc
out
data16
ss
pop
ss
imul
sub
sub
pop
pop
xor
inc
mov
ds
mov
jmp
cmp
enter
dec
shl
loope
xor
push
dec
shl
sar
stos
ficom
or
cmp
add
xor
bswap
(bad)
inc
mov
inc
mov
mov
add
(bad)
dec
mov
jg
loopne
shr
sbb
and
adc
das
out
pop
fbld
icebp
pop
mov
call
pop
or
cmp
add
xor
or
cmp
pop
(bad)
aaa
test
dec
(bad)
(bad)
(bad)
(bad)
mov
ja
call
adc
sub
sbb
daa
out
xlat
test
cwde
pop
movs
fs
push
stos
imul
(bad)
call
push
add
xor
push
into
inc
shl
or
inc
mov
mov
jle
inc
(bad)
(bad)
(bad)
push
jge
loop
shr
out
push
fisub
loope
shr
bound
pop
mov
call
pop
or
cmp
push
(bad)
test
cmp
add
dec
mov
jbe
dec
(bad)
aas
movs
test
sub
sbb
es
(bad)
sub
adc
fldenv
push
pop
cmps
xchg
push
test
gs
push
xlat
jg
std
mov
lds
push
inc
dec
cmovns
mov
and
jae
jg
fbld
movsx
xor
aaa
sbb
push
bound
mov
inc
sub
adc
push
aaa
sbb
mov
mov
std
ja
aaa
or
aaa
jb
or
daa
mov
bndstx
cwde
(bad)
frstor
sbb
mov
lock
out
popa
dec
mov
xor
aas
retf
xchg
scas
out
aas
stos
adc
shl
aas
aas
in
(bad)
aas
cmp
jmp
jnp
push
loope
pop
stos
jb
push
test
push
stos
sub
stos
push
imul
add
or
adc
sub
fild
cmps
jmp
dec
shl
and
xor
shl
cmp
xor
shl
movhps
xor
push
and
xor
shl
sub
xor
shr
xor
shl
lock
or
pop
or
sbb
sbb
xor
das
push
or
cmp
aaa
das
or
ja
ds
cmp
movs
pusha
fdiv
pop
sbb
rol
and
ins
fsub
dec
addr16
and
inc
cs
and
xor
jno
xor
pop
fmul
outs
jns
js
dec
shl
fs
dec
das
es
pusha
inc
lock
ss
sub
outs
cmp
cmps
jle
sub
add
add
inc
adc
sbb
icebp
aaa
add
push
pop
or
or
add
add
inc
call
add
add
ss
jge
lods
adc
push
adc
pop
and
(bad)
(bad)
push
adc
shl
and
bound
jno
pop
sbb
sbb
cmps
test
test
cmp
imul
pop
or
(bad)
(bad)
(bad)
jg
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
(bad)
(bad)
(bad)
call
cmps
cmps
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
(bad)
(bad)
call
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
fs
add
fs
sbb
adc
push
pop
popa
jno
and
adc
imul
adc
punpcklwd
loope
icebp
push
and
mov
sub
aas
push
adc
stos
push
add
enter
adc
adc
jge
mov
and
push
ins
jl
enter
sub
and
pusha
dec
mov
mov
mov
pop
outs
or
mov
lfs
test
dec
fsub
dec
imul
outs
sub
or
lods
mov
push
xchg
adc
pop
pop
pop
push
and
clc
inc
sub
pop
and
lock
(bad)
jle
push
inc
sub
lods
sbb
loopne
loopne
jl
mov
jo
jbe
xchg
push
aam
outs
lods
push
(bad)
pop
pop
push
movs
out
push
test
jne
inc
jbe
lods
xor
addr16
mov
ds
dec
xchg
test
out
int
jp
mov
data16
dec
and
dec
movs
sbb
mov
rol
(bad)
jbe
rcr
ds
hlt
out
rcl
ins
sub
out
(bad)
scas
mov
fs
ins
push
add
dec
cs
into
adc
test
es
sbb
imul
add
or
in
ficom
(bad)
call
mov
mov
adc
dec
sbb
outs
mov
sub
cmp
adc
clc
mov
push
xor
out
in
xchg
lods
sub
fs
imul
mov
bound
ss
movs
and
sub
push
adc
mov
jno
(bad)
or
push
adc
cmps
and
(bad)
sbb
mov
and
add
arpl
mov
outs
cld
push
inc
mov
push
out
(bad)
adc
dec
js
adc
xchg
push
std
lods
xor
es
mov
inc
imul
push
cmp
lods
pop
push
aam
es
xchg
cmp
adc
pusha
push
pusha
(bad)
lock
aam
outs
pop
pop
into
inc
push
and
out
ficomp
mov
ja
call
inc
mov
mov
into
push
cmp
ror
mov
xchg
push
inc
adc
inc
test
push
pop
dec
nop
mul
or
mov
(bad)
dec
cmp
test
(bad)
xchg
inc
mov
push
mov
mul
jbe
movs
dec
push
retf
pop
add
outs
test
cmps
es
xor
int
sbb
(bad)
lock
clc
mov
lods
int
sub
sbb
ss
les
sbb
inc
pop
jge
rol
lahf
mov
imul
push
mov
inc
sar
int
ins
mov
jge
push
es
cmp
or
out
ins
je
dec
push
ss
xor
int3
jbe
push
xchg
xor
push
dec
scas
xor
jl
popf
dec
les
push
cmp
pop
pop
in
push
test
mov
and
cs
(bad)
call
cmp
dec
rol
fisub
adc
cmp
push
fdiv
mov
shl
mov
xor
lods
popf
call
inc
mov
ds
je
push
add
(bad)
out
rcr
xchg
test
or
mov
xchg
out
push
mov
fmul
data16
jle
scas
rol
lods
dec
sub
les
and
inc
cmps
lods
int3
or
sub
push
inc
data16
ret
data16
inc
fdiv
sub
fisub
push
outs
je
ret
lods
xchg
in
int3
scas
pushf
(bad)
mov
shl
or
inc
add
mov
pop
fsubr
xor
push
pushf
imul
mov
push
into
xchg
(bad)
sub
mov
xor
adc
mov
data16
and
push
pop
lods
sbb
test
fdivrp
out
mov
popa
(bad)
imul
jbe
mov
mov
push
hlt
sahf
out
or
mov
push
sahf
(bad)
pop
adc
fadd
shl
add
ds
add
or
or
(bad)
dec
stos
mov
pop
cmps
aam
int3
ds
pop
imul
es
(bad)
push
xor
movs
pop
aam
lods
ds
add
je
adc
mov
pop
xor
inc
data16
sub
call
add
mov
test
sbb
or
rol
ret
push
pop
call
ins
pusha
adc
pop
push
inc
xor
xor
mov
mov
or
adc
mov
adc
mov
add
mov
jl
pop
add
push
dec
imul
adc
add
pop
in
popf
mov
inc
sbb
inc
and
dec
pop
push
and
and
pop
dec
aaa
push
pop
in
popf
mov
sub
in
test
dec
xchg
push
loop
fnstenv
mov
mov
imul
push
xchg
dec
xor
or
inc
push
pop
push
cs
pop
in
dec
and
inc
cs
outs
dec
dec
rcr
cs
or
push
cs
push
mov
pop
cmp
dec
push
push
push
sbb
lods
mov
or
dec
pop
inc
push
jp
inc
pop
arpl
push
arpl
mov
jne
lods
mov
jb
add
sub
add
inc
add
add
inc
jno
inc
add
sbb
sub
sub
rcr
mov
push
sbb
push
leave
mov
mov
push
add
in
test
call
aas
push
pop
jmp
shl
call
or
xchg
mov
push
aas
(bad)
jg
push
movntps
xor
add
and
pop
ror
mov
pop
jo
pusha
shr
mov
xchg
out
add
psubb
scas
lods
mov
out
pop
out
ficomp
neg
out
(bad)
cmp
rol
loopne
lock
sbb
xchg
jl
clc
pop
pop
(bad)
aas
push
xchg
ds
xchg
repz
add
lock
push
inc
mov
push
fld
xchg
add
jl
(bad)
imul
jbe
jg
xor
js
jo
jae
mov
push
mov
frstor
add
aas
lahf
int3
in
lods
loope
xor
push
cwde
pop
(bad)
dec
sahf
sbb
jg
add
cmps
imul
(bad)
dec
xchg
dec
mov
es
xchg
adc
and
cmp
fcom
retf
ucomiss
dec
mov
outs
shl
mov
mov
jg
aad
in
aas
rcr
dec
add
mov
imul
rol
add
popa
cmp
lahf
add
(bad)
pop
stc
jb
pop
sbb
mov
out
outs
inc
push
push
cs
jle
shl
add
cs
pop
in
les
test
mov
inc
aas
push
pop
addr16
cs
xchg
addr16
and
pop
cld
push
cmp
fdiv
aaa
pop
sub
and
xor
aas
inc
sbb
inc
jl
cmp
jb
jl
sbb
push
sub
inc
add
xor
inc
add
adc
leave
in
sbb
push
push
sbb
inc
mov
aas
je
mov
rol
out
(bad)
and
sbb
mov
push
sbb
or
test
ins
loop
loopne
jge
movs
or
add
jb
or
push
jbe
jbe
or
add
rol
fisttp
cmp
inc
and
movs
dec
lods
or
add
mov
(bad)
mov
das
cwde
mov
daa
jnp
fnsave
(bad)
and
fistp
xor
add
xor
and
fcmovu
or
push
adc
cmp
clc
dec
mov
mov
mov
retf
out
push
push
daa
retf
adc
mov
ins
daa
push
(bad)
sbb
dec
daa
dec
add
daa
sbb
add
fdivr
push
(bad)
hlt
sbb
adc
pop
mov
add
mov
cmps
lahf
adc
jb
nop
jl
inc
cmp
inc
and
mov
push
outs
imul
and
inc
pop
daa
inc
push
fidivr
dec
sub
aas
sbb
push
xor
mov
(bad)
ret
mov
push
js
pop
aas
js
dec
and
pop
push
lds
sbb
cmp
push
(bad)
cmp
(bad)
mov
pop
add
jns
push
(bad)
cmp
mov
ins
fcom
push
retf
fisttp
mov
push
mov
(bad)
mov
imul
push
daa
fs
inc
jno
xbegin
push
push
addr16
mov
call
je
add
test
or
push
or
dec
push
sahf
mov
or
aad
fwait
lods
dec
je
pop
dec
dec
pop
daa
mov
mov
out
in
or
mov
add
add
clc
mov
add
daa
add
in
popa
(bad)
sbb
mov
ss
pushf
daa
aas
add
inc
xor
inc
arpl
daa
ds
dec
xlat
inc
ror
out
fiadd
fist
mov
(bad)
pop
lahf
cmp
lahf
enter
cmp
(bad)
out
fisttp
fadd
push
cmp
push
push
enter
daa
mov
push
aas
es
retf
jmp
mov
inc
inc
es
push
daa
dec
add
jle
popa
data16
xor
in
repz
sub
jecxz
test
inc
add
push
adc
fbld
sub
pop
xor
in
inc
xchg
rcr
push
stos
movs
sub
xor
jle
pop
repz
xor
(bad)
popf
mov
es
cs
fneni(8087
out
mov
daa
push
inc
sub
icebp
ja
ret
push
xor
repz
dec
and
sub
shl
ins
push
je
stos
inc
push
in
mov
outs
shl
push
inc
mov
sti
push
mov
ds
push
mov
stos
sub
ins
(bad)
jo
cmp
jmp
dec
xor
push
rcl
dec
dec
xchg
in
arpl
mov
mov
scas
xor
ja
add
ficom
jmp
fldcw
and
(bad)
cmp
inc
sub
and
imul
cdq
xchg
xor
add
xchg
sbb
adc
les
daa
into
int3
mov
push
jl
fst
scas
cdq
and
clc
or
sbb
daa
gs
stos
push
fcom
daa
dec
xor
ret
lods
dec
xor
dec
daa
dec
daa
ja
fsubr
dec
daa
clc
dec
jne
dec
mov
cmp
push
dec
ror
dec
out
aas
sbb
add
inc
(bad)
(bad)
mov
retf
inc
jo
jns
call
cdq
cdq
and
addr16
imul
aas
mul
mov
dec
push
repz
jb
cmp
xchg
retf
fist
imul
adc
add
(bad)
sbb
outs
inc
sbb
mov
daa
cmp
xor
loopne
das
aaa
push
xor
dec
add
fiadd
xor
and
cmp
jp
pushf
(bad)
into
es
mov
scas
or
pusha
xor
ss
popf
mov
fisttp
(bad)
aaa
xor
or
into
aaa
and
sub
cdq
sub
xlat
xchg
xor
sub
ins
mov
pop
jbe
les
push
fst
sbb
(bad)
fdiv
push
xor
daa
and
xlat
mov
jmp
xchg
add
or
mov
xchg
and
xchg
pusha
lds
pop
add
jmp
test
jmp
sbb
addr16
and
or
paddb
lahf
mov
retf
xor
pop
mov
lock
fxch
call
add
daa
jbe
or
or
lea
and
adc
es
cmp
inc
add
push
add
dec
jmp
push
and
jmp
adc
and
jbe
repnz
cmp
int3
fwait
pop
call
sbb
cmps
pusha
add
or
je
jns
and
fst
and
jne
mov
xor
jmp
pop
cmps
fld
inc
arpl
mov
jae
sbb
mov
js
jae
jp
dec
popaw
push
inc
bound
xchg
daa
or
fnstenv
and
sub
imul
and
and
mov
mov
dec
jp
sub
adc
inc
push
xor
cmps
and
mov
or
pop
sbb
pushw
jne
out
popa
lods
cmp
push
gs
cmps
push
or
fldenv
and
push
inc
pop
outs
xor
test
xchg
or
sub
stos
jbe
pop
jo
ret
shr
outs
sbb
(bad)
cmp
arpl
adc
cmp
ja
je
outs
mov
add
movs
or
push
(bad)
in
sbb
mov
inc
adc
push
imul
add
ja
ret
dec
ins
(bad)
jae
push
sbb
(bad)
xor
(bad)
or
add
push
es
push
outs
pop
popa
stos
add
dec
cmp
stos
push
jp
ins
cmp
and
inc
pop
arpl
fsub
shr
xor
sbb
shr
mov
and
ret
ss
inc
sahf
ss
pop
(bad)
into
jbe
pcmpeqd
cli
dec
adc
fst
bound
outs
ret
bound
ja
pop
push
adc
inc
mov
and
mul
or
adc
fcomp
cwde
pop
js
pop
xor
xor
out
lds
xlat
adc
(bad)
xlat
adc
lds
pop
xchg
add
or
repz
xlat
xor
mov
stos
mov
xor
xchg
cmp
sbb
test
nop
iret
fbstp
xlat
sbb
das
jne
or
push
sub
pop
fst
fdiv
sub
fnstsw
fs
push
add
mov
jae
or
xor
mov
xchg
add
mov
or
aad
arpl
out
mov
xchg
mov
mov
aas
mov
sub
jns
xlat
popa
inc
push
not
adc
adc
in
pop
and
sbb
and
ins
adc
inc
cmp
arpl
ins
push
pop
or
stos
fisttp
outs
mov
dec
pop
loopne
pop
into
dec
cli
pop
lods
jo
mov
and
xchg
pop
adc
ficom
xor
and
adc
add
imul
mov
das
jb
sbb
dec
xchg
cmp
sbb
sbb
inc
ja
outs
push
ror
or
push
xor
push
jnp
xchg
aam
mov
outs
xchg
clts
sub
sbb
inc
inc
les
fist
mov
jbe
dec
cmp
and
xchg
xor
pop
and
xchg
nop
call
push
sbb
test
pop
rcl
mov
jo
aas
sbb
push
sbb
fwait
and
iret
inc
rol
dec
add
sub
les
adc
add
xchg
mov
jns
add
cmp
es
mov
shl
pop
xor
xchg
outs
sub
jnp
arpl
adc
retf
xor
or
sbb
mov
outs
sub
outs
xor
jp
mov
int3
sub
lods
add
inc
cmps
jbe
cmp
add
adc
lea
outs
inc
or
sbb
add
dec
aas
arpl
cmp
fld
scas
adc
dec
sbb
cmp
mov
push
adc
scas
mov
and
sbb
xor
ss
rol
sbb
pop
ins
iret
pop
es
lahf
div
pop
jne
mov
inc
pop
test
push
push
mov
mov
ffree
test
jb
mov
ret
or
loopne
add
sub
pop
jae
imul
mov
pop
ret
es
ret
sbb
arpl
imul
cmp
mov
push
bound
outs
rol
pop
dec
mov
xchg
jmp
push
inc
aad
xchg
sti
shl
mov
cmp
jp
iret
jbe
fisubr
mov
scas
ds
mov
sbb
inc
push
daa
push
cwde
xor
and
and
add
pop
mov
xor
inc
jmp
inc
jg
cmp
cmps
jbe
push
jnp
xor
loope
stos
and
adc
pop
sbb
inc
xor
mov
push
jne
cmp
addr16
sub
shl
inc
xor
or
push
dec
mov
pop
fwait
push
daa
fidiv
jbe
and
js
mov
jle
xchg
push
pusha
push
sub
push
aaa
jnp
and
or
xor
xchg
sbb
imul
aas
dec
addr16
adc
xchg
ss
out
push
popa
(bad)
retf
lods
lods
sbb
aas
addr16
fadd
inc
cmp
sub
xlat
inc
or
push
inc
jbe
ficom
push
jmp
sbb
cmp
mov
or
dec
or
dec
imul
adc
and
mov
(bad)
inc
ins
and
xchg
or
push
push
jo
push
jns
jmp
mov
sbb
je
sub
cmps
sub
push
or
imul
mov
add
sub
mov
sub
inc
imul
mov
pop
leave
test
inc
shl
or
or
inc
sbb
or
xchg
mov
adc
dec
sub
sub
inc
xor
stos
dec
or
adc
or
pop
out
imul
jmp
jno
adc
push
jne
imul
jb
push
inc
sahf
dec
add
pop
sbb
dec
cmps
sbb
lock
push
inc
pop
push
or
shr
pop
cwde
push
repnz
inc
add
fiadd
fs
xor
pop
cmps
arpl
jg
push
mov
jle
xor
adc
adc
aad
(bad)
cs
dec
pop
pop
loop
and
pop
outs
imul
or
inc
movs
lds
fld
jle
add
and
add
add
ins
sbb
dec
in
dec
pop
das
cmp
(bad)
jbe
jp
scas
fidiv
jnp
jnp
or
and
push
adc
ins
sbb
in
and
pop
cmp
inc
mov
xor
dec
pop
sbb
pop
push
lds
scas
sbb
pop
test
dec
jne
aaa
adc
sbb
and
dec
fist
popa
mov
sbb
out
mov
jo
mov
xor
daa
xchg
pop
lea
pop
push
ret
pop
daa
pusha
sub
and
mov
push
mov
mov
lods
sbb
inc
xchg
inc
cmp
outs
mov
pop
ss
pop
shl
and
pushf
and
or
aaa
push
es
fwait
and
sub
and
fimul
cmps
xchg
cmp
(bad)
(bad)
rcl
lock
mov
mov
push
mov
add
push
jp
pop
div
ret
ret
ret
mov
jo
aas
iret
or
stos
ds
aad
adc
pop
inc
adc
mov
mov
lods
(bad)
mul
sub
das
pop
daa
pop
daa
xchg
inc
and
jmp
stos
fwait
mov
fisub
mov
mov
adc
(bad)
adc
or
jae
add
in
add
sahf
add
test
mov
es
mov
or
xchg
dec
fisub
bound
or
es
and
sbb
ror
jae
pop
fwait
or
sbb
adc
arpl
xchg
push
inc
dec
push
idiv
fld
push
inc
fcmovbe
push
out
push
mov
fwait
push
adc
xchg
dec
mov
dec
dec
or
movs
inc
push
pop
repz
test
mov
test
das
dec
or
cmp
push
push
mov
cmps
aas
dec
jmp
popa
mov
sar
jo
push
push
cmp
or
inc
xor
mov
aaa
sub
ret
fild
adc
fcom
jne
add
push
dec
xor
mov
fldcw
dec
fbstp
push
cmc
ret
pop
sbb
cwde
scas
or
jns
adc
mov
fst
loop
and
pop
mov
sub
inc
pop
mov
es
pop
jle
sbb
rcr
sub
jbe
data16
pop
inc
neg
arpl
add
sub
or
outs
outs
ja
mov
out
fisttp
add
das
daa
lea
popa
adc
mov
or
outs
int
ins
ss
inc
inc
jp
scas
adc
add
cmps
adc
sub
fidivr
dec
push
sbb
jb
push
imul
shr
lahf
jae
or
ror
out
iret
arpl
arpl
xchg
aas
cmps
cmp
mov
add
adc
sbb
test
shl
mov
and
pushf
pop
(bad)
jb
out
mov
test
xor
xlat
aas
ja
adc
(bad)
ret
dec
nop
call
dec
mov
inc
(bad)
pop
mov
mov
stos
adc
repz
lea
mov
stos
and
lds
xchg
dec
or
stos
push
and
and
xchg
outs
ret
call
xchg
add
dec
les
test
inc
push
mov
cmp
retf
lods
push
fdiv
fwait
sub
cwde
mov
imul
scas
or
or
inc
fwait
rol
bnd
pop
xlat
fnstsw
shr
push
inc
xor
inc
imul
push
jo
cmps
push
jae
xchg
pop
jmp
xchg
fild
daa
dec
out
and
xor
enter
inc
pop
push
mov
jno
pop
fisubr
aad
aad
pop
sti
mov
add
xchg
cmps
or
mov
test
jmp
ins
sbb
addr16
mov
and
push
adc
mov
ja
ja
shl
(bad)
and
pop
mov
inc
outs
cmp
mov
popf
pop
add
pop
iret
push
dec
push
scas
fimul
add
repz
pop
repz
jnp
nop
mov
mov
or
pop
test
das
retf
mov
into
sbb
adc
sbb
iret
sti
xor
and
sbb
sbb
sbb
sbb
inc
mov
inc
pop
adc
retf
mov
aad
push
ins
push
or
jmp
jg
push
les
and
fbld
cmp
xchg
fwait
xor
pop
push
(bad)
cmp
mov
bound
sub
sbb
add
je
adc
sub
ins
push
mov
mov
scas
mov
adc
sbb
iret
push
jo
imul
shl
cmp
adc
sub
loope
pop
retf
scas
sbb
add
rol
test
jae
mov
pop
xchg
push
inc
ja
pop
inc
push
aaa
ds
push
imul
ja
adc
sbb
jbe
lods
stos
mov
or
sti
jnp
scas
add
imul
xor
sti
addr16
add
jno
addr16
sbb
mov
(bad)
and
adc
xchg
jbe
pop
popa
(bad)
sub
or
jae
push
popa
push
pusha
sub
mov
add
or
xor
or
pop
aaa
mov
aas
stos
ret
lahf
out
lahf
pop
stos
sbb
dec
bound
mov
xor
push
push
mov
pusha
add
push
lahf
(bad)
push
call
push
adc
imul
aad
push
xchg
faddp
push
aaa
inc
retf
push
out
sbb
xor
jne
mov
and
and
loope
jmp
jo
fcom
es
ret
xor
pop
imul
fmul
call
sub
push
pop
daa
sbb
mov
iret
cmps
push
bound
shr
stos
adc
xchg
cmps
adc
push
add
mov
xor
or
push
gs
mov
push
cmovbe
add
push
outs
inc
ins
fdiv
xchg
fisubr
ds
or
mov
add
outs
inc
and
out
call
fs
loope
mov
inc
push
push
lods
inc
ins
daa
sub
pop
push
gs
in
add
fild
cli
jbe
push
or
jne
mov
test
sahf
inc
shr
cli
and
xor
fisttp
in
pusha
adc
add
push
adc
inc
loopne
pop
inc
inc
adc
or
neg
shl
pop
out
lods
sub
or
adc
popa
das
or
and
mov
fimul
mov
arpl
sub
pop
sbb
push
and
js
pop
xchg
mov
mov
(bad)
call
inc
push
mov
lds
aas
pop
push
rcl
retf
or
push
(bad)
and
scas
mov
ss
jecxz
push
fadd
scas
dec
mov
jp
inc
cmp
pop
shl
cmp
mov
cmps
sub
xchg
push
lahf
sbb
and
icebp
adc
adc
adc
jecxz
imul
dec
mov
aad
in
push
out
inc
sbb
dec
lods
xor
out
xor
popa
xchg
jb
sbb
add
push
push
and
mov
pop
cmps
rcl
pop
add
jae
sbb
add
xor
dec
mov
inc
sbb
add
out
js
jecxz
mov
push
shr
push
and
stos
loop
inc
data16
ins
pop
dec
fstp
xor
add
rol
pop
xor
jae
lds
pop
into
not
iret
nop
sbb
push
pop
adc
adc
pop
inc
mov
mov
mov
push
pop
test
add
xor
jecxz
cli
cmp
pop
jae
pop
adc
xor
add
stos
or
mov
fisubr
repnz
jg
test
rcl
sbb
(bad)
push
push
bound
pop
xchg
sbb
jmp
push
arpl
test
in
and
xor
dec
mov
sub
adc
push
sbb
or
mov
imul
push
and
push
dec
ret
cmps
xchg
addr16
push
jne
adc
stos
jo
mov
nop
lods
push
jae
movs
or
push
ret
js
adc
xor
mov
xchg
push
and
sub
cs
loopne
sbb
and
jmp
push
das
popw
inc
movs
scas
or
sub
loop
mov
jae
add
and
mov
(bad)
sti
sti
add
outs
pop
(bad)
jb
pop
xchg
push
loope
push
jp
adc
fs
push
pop
sub
jg
add
das
ds
bound
jg
not
or
mov
and
adc
das
pop
ja
outs
aam
dec
jns
sbb
push
sub
or
mov
pop
in
ret
jb
and
rcl
xor
scas
jae
jle
adc
ror
and
sbb
dec
sub
and
pop
inc
loopne
bound
add
mov
dec
dec
dec
sbb
dec
es
(bad)
cmp
xor
repz
add
fwait
inc
cmp
(bad)
(bad)
xor
inc
xor
xor
inc
xor
sbb
inc
xor
xor
std
fsubrp
push
inc
inc
cmp
inc
cmp
inc
and
xor
xor
out
mov
inc
xor
inc
xor
xor
inc
adc
inc
inc
xor
inc
out
out
jge
inc
inc
xor
jg
inc
aas
xor
mov
xor
mov
(bad)
xor
inc
inc
inc
cmp
mov
cmps
jno
inc
inc
cmp
xor
sbb
xor
in
xor
pop
fbld
pop
inc
sbb
inc
mov
cmp
push
and
aaa
cmp
inc
mov
mov
sub
xor
lods
call
xor
inc
inc
fs
cmp
inc
ss
sti
outs
jo
fild
inc
aaa
inc
xor
int
add
inc
ficomp
gs
xor
pop
lock
xor
inc
inc
test
mov
shl
push
dec
jnp
or
xchg
cmc
jne
sub
ja
push
inc
push
cmp
jg
cmp
loopne
inc
sbb
inc
rcr
jnp
inc
cmp
popa
xor
sbb
(bad)
sbb
cmp
dec
xor
ffreep
fucom
mov
xor
xor
jo
jo
inc
imul
ja
jnp
cmp
sbb
repz
or
mov
aaa
in
inc
out
jo
or
imul
out
cmp
sbb
adc
lods
push
hlt
xchg
pusha
and
or
inc
and
push
cmp
mov
adc
cmps
push
movs
jae
pop
and
xlat
xchg
xchg
test
jbe
aam
xor
dec
or
push
fiadd
dec
icebp
arpl
xor
pop
(bad)
movhps
or
mov
or
mov
das
imul
adc
cmp
add
or
dec
adc
std
sub
push
push
dec
inc
adc
stos
or
mov
ins
cwde
xchg
push
fiadd
sbb
or
inc
je
xchg
pop
adc
sub
mov
ins
xor
sub
fmulp
adc
sbb
push
push
sub
loope
leave
adc
adc
stos
adc
mov
adc
outs
adc
leave
xchg
inc
sub
adc
xchg
and
int
int3
sbb
sub
fs
mov
in
fwait
xchg
fdivr
pop
mov
(bad)
xor
pusha
mov
mov
sub
adc
test
aas
pcmpgtw
push
addr16
ss
faddp
xor
adc
push
adc
push
test
ret
dec
sbb
push
js
adc
fsub
xchg
int3
and
mov
lock
shr
fadd
aaa
xor
aam
rcl
sub
pop
push
mov
pop
loop
and
clc
cmc
push
add
ror
mov
and
or
jne
das
sbb
add
add
and
mov
sub
pop
jbe
jns
adc
push
pop
rcr
cs
xor
inc
push
push
mov
jns
cmp
in
cmp
push
pop
mov
ret
(bad)
sar
dec
fs
ins
call
imul
add
mov
push
inc
int
cmp
jns
push
std
inc
jae
add
and
push
push
xor
out
outs
out
test
pop
jp
pop
mov
cwde
in
fstp
popa
dec
ror
adc
adc
fisub
fcmovb
lahf
sub
push
ins
xor
rol
sbb
jecxz
test
mov
std
adc
cmp
push
mov
repnz
push
aaa
xor
dec
dec
inc
mov
pop
dec
in
clc
jno
pusha
cmps
cmp
and
bound
or
cwde
and
push
inc
icebp
sbb
mov
inc
or
mov
and
lock
or
mov
retf
(bad)
mov
shl
pop
adc
ret
push
add
inc
loop
sub
and
adc
cmps
or
loope
dec
xlat
pusha
lock
and
sbb
addr16
mov
leave
cmp
inc
arpl
das
mov
sbb
dec
je
and
inc
inc
adc
xchg
hlt
cmp
aas
ins
stos
ror
dec
(bad)
fadd
or
outs
sub
or
hlt
lds
add
and
add
add
enter
lea
fst
pushf
sbb
ds
mov
dec
ins
xor
push
inc
enter
dec
loope
dec
jne
les
ret
cmps
xor
or
fsub
clc
repnz
add
test
cmps
ins
fnstenv
jo
ret
test
nop
and
mov
push
xchg
mov
jb
pusha
test
mov
xlat
imul
inc
adc
fimul
cmp
repz
push
adc
push
mov
mov
sbb
(bad)
hlt
or
imul
or
pop
push
dec
jae
or
xor
pusha
add
adc
or
pop
mov
push
push
push
xor
xor
sbb
xchg
jg
pusha
lock
cmp
adc
fs
or
icebp
dec
or
xchg
or
pop
sub
and
adc
or
xor
pop
xchg
or
mov
pop
lods
mov
adc
mov
sbb
add
and
cdq
mul
inc
or
imul
push
pusha
push
mov
and
test
cmp
fild
adc
fnstsw
dec
imul
cs
mov
xchg
aaa
add
add
sub
add
and
push
std
and
and
scas
push
add
or
js
ja
vmread
ja
adc
pop
push
cmp
cld
sbb
(bad)
clc
inc
mov
ja
jle
int
pop
inc
fld
(bad)
ja
lock
dec
jle
jnp
mov
pop
xchg
jg
clc
inc
pop
mov
das
dec
sbb
outs
movs
imul
pop
lock
or
jo
inc
je
or
pop
rcl
leave
nop
cmps
adc
xchg
ret
dec
sti
pop
dec
adc
adc
sbb
inc
and
jnp
dec
inc
xor
leave
sbb
and
icebp
je
add
and
aam
jge
dec
fs
test
fld
add
lahf
daa
add
inc
push
nop
add
push
pop
sbb
mov
dec
add
push
adc
call
push
ins
gs
xor
ins
jnp
imul
push
adc
jo
adc
mov
add
lods
sub
in
or
imul
add
and
imul
jne
pop
in
mov
pop
sbb
je
aas
mov
lea
arpl
sbb
mov
jno
push
lea
popa
enter
aas
mov
cmp
pop
xchg
test
es
push
lds
adc
mov
inc
dec
inc
pop
dec
inc
ret
sub
add
test
enter
loop
imul
add
jns
and
mov
imul
xor
inc
inc
cmp
shr
and
sbb
sbb
ret
lahf
sbb
sub
imul
inc
mov
add
sbb
sbb
mov
inc
sbb
imul
gs
adc
jecxz
xchg
adc
add
add
inc
xor
inc
xchg
enter
mov
daa
xchg
add
adc
or
adc
pushf
imul
repnz
xor
repnz
sub
xchg
outs
jno
fadd
lds
test
xor
lds
ins
ficomp
or
ins
sbb
xor
ins
adc
mov
dec
jns
pop
test
push
(bad)
int3
shl
in
(bad)
(bad)
out
and
rol
pop
push
sub
cs
(bad)
outs
pop
mov
and
cmp
adc
neg
loopne
dec
aas
sbb
inc
inc
and
jo
shr
mov
int
sbb
push
sbb
xor
add
outs
out
inc
add
add
fdivr
mov
push
gs
add
inc
and
nop
lods
scas
pop
dec
cmp
fiadd
fisub
cmps
pop
jmp
fist
aaa
imul
and
ins
test
inc
sub
adc
mov
or
fcmovu
push
and
dec
fs
mov
dec
or
shl
push
or
inc
push
arpl
femms
rcr
nop
add
push
dec
sub
dec
add
add
push
xchg
ss
int
pushf
cmp
sbb
leave
cld
xlat
sbb
xchg
aam
sbb
mov
or
adc
and
and
(bad)
outs
xlat
pop
sbb
inc
jge
jecxz
cmp
sub
outs
jbe
push
mov
mov
add
push
out
mov
pop
push
movs
scas
sar
cdq
mov
pop
sbb
pop
cmp
loop
add
out
pop
sub
dec
add
js
mov
pushf
and
mov
push
or
loop
popa
adc
adc
and
adc
jb
ins
jae
inc
pop
js
clc
sbb
add
dec
xchg
dec
sub
loopne
or
and
add
jnp
adc
jmp
test
cwde
mov
popa
add
pop
or
adc
cmps
add
sub
mov
or
and
test
jns
lds
and
inc
push
imul
sbb
xchg
in
add
ret
adc
or
or
adc
push
and
mov
mov
mov
sbb
mov
cmp
inc
mov
push
popf
pop
cs
jge
push
inc
lods
and
inc
fdiv
mov
in
xchg
push
sub
cmp
imul
adc
and
dec
pop
cwde
ins
add
pop
push
jmp
mov
and
not
pop
hlt
gs
mov
inc
inc
pop
jae
push
sbb
ins
sbb
sbb
adc
push
sub
push
adc
sub
stos
mov
inc
cmps
stos
movs
in
(bad)
push
shl
inc
fs
sub
jb
mov
jae
mov
not
sbb
shr
ret
and
xchg
adc
and
jbe
mov
sub
and
mov
test
inc
inc
nop
in
mov
inc
jb
xchg
jae
xchg
mov
imul
adc
push
fcomp
sbb
ret
push
and
pop
lock
push
xor
xor
arpl
icebp
cmp
imul
fidivr
adc
jl
in
jo
xchg
dec
mov
inc
xor
inc
pusha
or
inc
pop
jbe
dec
inc
dec
mov
fisub
add
cmps
sub
stos
out
and
(bad)
out
cs
sbb
dec
sub
lods
mov
es
outs
mov
bound
add
daa
ins
test
inc
xchg
sub
fsubr
and
add
or
ins
je
popf
ja
and
inc
imul
push
(bad)
pusha
xchg
mov
jbe
mov
or
inc
out
lds
repz
loopne
jne
or
stos
fst
mov
dec
push
jno
or
stos
inc
inc
mov
pop
jo
and
pop
xor
loop
dec
(bad)
outs
sbb
mov
xchg
(bad)
push
dec
push
xor
jnp
inc
je
pop
push
lea
and
fimul
add
shr
nop
xchg
or
sbb
mov
into
fisttp
out
xor
shr
loope
jne
out
mov
push
mov
cmp
or
sub
and
popa
in
outs
ss
out
aam
nop
and
fbstp
outs
xchg
or
ret
into
mov
cmp
pop
pop
mov
inc
sub
xor
adc
xchg
aas
mov
lds
inc
adc
pop
pop
mov
dec
push
or
sbb
lods
or
or
lods
xor
and
sub
loop
or
outs
push
inc
div
mov
fs
adc
inc
mov
rcr
leave
and
bound
sbb
out
inc
ficom
pop
int
sahf
and
sbb
mov
sub
mov
cs
ins
mov
pop
sub
jnp
ins
adc
push
cmp
add
call
loope
int
jl
(bad)
and
cmp
ins
inc
xor
inc
sbb
fneni(8087
sbb
jo
fdivr
adc
cs
test
popa
lods
cmp
push
in
bound
mov
jmp
push
mov
popa
das
push
push
push
imul
and
pop
xchg
popa
retf
sbb
mov
add
push
push
mov
data16
sbb
xchg
data16
adc
ret
pop
sub
ror
(bad)
daa
dec
adc
es
or
bound
and
and
adc
adc
hlt
xchg
retf
loopne
cld
outs
mov
and
cwde
or
pop
dec
js
dec
pushf
fs
ins
sub
arpl
and
aad
push
sub
or
mov
imul
ins
sahf
pop
test
sbb
les
dec
outs
add
inc
inc
ficom
push
inc
push
jo
movs
out
push
sub
sbb
ret
popa
cmp
adc
xchg
add
cwde
ins
outs
xor
lods
movs
lea
dec
fadd
cdq
fnstenv
ret
add
(bad)
or
jae
rol
dec
adc
and
add
sbb
loopne
pop
fsub
out
adc
mov
xor
cmp
in
and
ss
push
pop
xor
ret
pop
pusha
inc
mov
and
pop
mov
sbb
xchg
shl
push
jge
fcom
sbb
cs
jb
movaps
pop
mov
dec
loope
bound
inc
and
lahf
sub
outs
and
mov
fstp
mov
pop
nop
xchg
aaa
adc
mov
rcl
jne
pop
popa
daa
daa
mov
and
and
das
dec
push
adc
outs
xor
xor
fisubr
inc
aaa
ins
mov
xchg
xlat
fcmovb
mov
push
jne
sbb
push
mov
test
test
and
aas
adc
sbb
iret
dec
mov
outs
nop
mov
inc
add
ret
push
and
stc
add
lock
mov
sbb
xchg
rcl
add
mov
sbb
scas
mov
test
adc
psrlw
jns
dec
imul
mov
dec
adc
fisubr
ins
and
sub
sbb
adc
cdq
(bad)
sti
outs
(bad)
sbb
imul
or
sub
push
jg
push
aam
xchg
lods
stos
and
call
sbb
mov
icebp
mov
adc
mov
xor
cmp
test
xlat
jo
test
stos
icebp
inc
pop
(bad)
mov
jp
test
and
push
push
jbe
ins
push
mov
dec
adc
and
sbb
push
mov
inc
inc
inc
xchg
and
movs
jecxz
dec
pop
sbb
mov
and
pop
jmp
and
scas
push
add
sti
xchg
sbb
shr
jno
shl
pop
xchg
clc
sub
and
test
es
add
adc
push
or
leave
xchg
inc
or
dec
es
and
das
and
in
xor
imul
leave
inc
inc
fmul
pop
sub
push
inc
lods
pop
(bad)
pop
inc
jno
mov
pop
xor
push
mov
sbb
and
or
push
popa
out
xor
mov
and
push
add
mov
sbb
loop
mov
sub
push
or
jo
hlt
mov
and
mov
add
aaa
aaa
mov
mov
lods
sbb
xor
ss
mov
jg
pop
mov
or
aad
and
bound
sbb
ins
pop
and
jmp
pop
fwait
sbb
sub
push
pop
push
pop
dec
pop
pop
imul
das
and
add
jge
pop
inc
xor
(bad)
dec
mov
adc
rol
pop
aaa
push
push
cmp
jo
add
mov
std
(bad)
rcl
mov
push
mov
mov
adc
out
pop
jns
pop
inc
cmps
inc
jge
mov
adc
push
sbb
pop
adc
cs
adc
push
ror
add
movs
ret
inc
and
add
sbb
rol
es
rcr
mov
dec
jl
ja
mov
xor
jo
dec
dec
pusha
jno
inc
das
fdiv
inc
and
sbb
sbb
or
imul
add
push
daa
dec
stos
and
xchg
dec
push
rcl
dec
rcr
(bad)
sbb
push
jne
shr
fs
jne
and
and
rcr
dec
out
int3
mov
push
xchg
or
rcr
add
xor
adc
add
add
fldenv
and
pushf
and
inc
and
dec
add
add
sub
out
sub
xor
ins
aad
lahf
aaa
sbb
arpl
add
mov
jbe
retf
(bad)
test
das
adc
or
cmp
add
fist
cmp
sub
addr16
or
adc
add
jbe
mov
xchg
fist
or
jge
push
inc
pop
dec
add
(bad)
or
sbb
sub
add
add
pop
xchg
sbb
adc
scas
add
dec
push
mov
sub
add
imul
paddusw
or
push
pop
(bad)
add
pcmpgtd
inc
dec
(bad)
sar
lahf
mov
add
in
out
loopne
sub
pop
sbb
or
push
push
sbb
sbb
cmp
repnz
inc
inc
scas
in
(bad)
add
xchg
cmp
add
outs
add
imul
sbb
or
pop
rol
ins
pop
adc
movs
ds
inc
dec
pop
sub
push
out
out
sub
xor
sbb
nop
popa
xchg
adc
jbe
pop
dec
repz
and
add
push
dec
gs
popa
seto
jb
xchg
ins
fisub
es
sbb
mov
cmp
add
pusha
mov
lea
mov
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
mov
add
dec
