push
(bad)
(bad)
mov
call
sub
push
push
mov
lea
sbb
jns
lea
xor
mov
mov
push
mov
and
add
test
je
cmp
dec
add
outs
(bad)
ds
adc
jg
adc
inc
cld
add
lock
jle
add
mov
add
sub
idiv
pop
pop
push
ss
bound
movs
dec
adc
in
aas
add
jbe
pop
cmp
in
je
push
push
std
pop
mov
xor
dec
mov
mov
mov
sbb
mov
or
jg
cmp
sbb
hlt
mov
pop
pop
mov
sbb
xor
push
sbb
dec
sti
iret
mov
mov
dec
add
push
call
out
test
(bad)
ds
push
push
push
cld
mov
pop
sub
mov
aas
add
jmp
inc
movsx
push
call
push
pop
jne
mov
and
inc
jne
push
cmp
ficom
std
je
xor
jmp
sub
and
imul
or
(bad)
jmp
inc
mov
cmp
je
mov
cmp
adc
xchg
jle
jne
cmp
jb
inc
pushf
inc
cmp
jne
sub
lea
loope
icebp
jle
add
imul
or
mov
or
or
mov
in
add
(bad)
sti
clc
sbb
mov
mov
es
popf
enter
jns
mov
push
outs
sub
(bad)
mov
test
add
idiv
test
jle
push
adc
sub
cld
pop
sub
push
push
pop
mov
aas
in
push
xor
and
cmp
mov
cld
push
shl
lahf
jl
bound
mov
pop
leave
ret
add
jmp
jno
or
jne
dec
add
enter
ins
adc
popa
adc
add
and
pop
sub
pushf
cmp
sub
xor
aas
iret
leave
add
mov
sbb
cld
xchg
jle
mov
push
mov
mov
ret
push
dec
and
fidivr
xor
push
mov
inc
adc
pop
rcr
pop
pop
mov
mov
add
or
add
push
fdiv
stos
stos
movs
lds
stos
pop
ret
mov
or
pop
test
ja
ins
pop
mov
f2xm1
rcr
or
inc
fistp
push
mov
add
pop
mov
test
je
mov
push
call
add
loopne
lock
jne
ins
inc
sbb
ins
js
lock
in
mov
imul
sbb
js
clc
ret
cmc
int
imul
sti
outs
jmp
push
push
add
adc
or
cld
jp
mov
push
push
sub
add
mov
inc
mov
push
add
xchg
xchg
lds
mov
mov
aaa
(bad)
icebp
test
and
add
jnp
lahf
mov
cmp
jne
(bad)
(bad)
cmp
mov
sbb
and
cmp
push
movs
sbb
pop
cmp
cmp
mov
pusha
or
adc
push
mov
push
mov
fld
(bad)
push
sub
je
cmp
je
scas
sub
mov
test
adc
or
jmp
push
push
retf
pop
inc
mov
test
adc
push
mov
ret
cmp
loopne
mov
pop
sub
xchg
test
push
dec
sub
and
push
jne
add
xor
push
jl
ret
inc
cmp
fcomp
xor
or
addr16
aad
shr
adc
loopne
dec
dec
dec
xor
or
ret
push
(bad)
inc
jb
adc
add
mov
jne
sbb
xchg
in
jg
loopne
adc
jle
je
clc
or
or
xor
and
test
push
pop
cmps
or
cmps
jge
jmp
push
push
cld
and
mov
or
xchg
push
cmp
ret
pop
jmp
and
bound
pop
stos
push
push
jae
daa
not
push
and
in
popa
xor
sbb
ds
and
sbb
sbb
movs
cmp
data16
cmp
outs
push
cmp
call
je
call
pop
add
es
sbb
mov
sbb
xchg
sub
jb
cmp
iret
or
out
push
loopne
cmp
lea
mov
not
add
or
lea
dec
jge
push
mov
ror
lea
pop
dec
jbe
fsubr
adc
test
xor
or
and
cmp
mov
push
jle
jbe
fdiv
inc
jbe
retf
cs
mov
push
push
push
adc
push
cmp
lods
or
ins
dec
mov
mov
fcom
clc
push
xor
pop
fst
jnp
add
inc
int3
xor
iret
sbb
(bad)
jmp
and
add
sbb
pop
sub
add
sbb
mov
sub
adc
push
and
dec
mov
ds
in
jbe
inc
cmp
or
sete
mov
sub
mov
cld
mov
push
xor
cmp
movs
ins
stos
or
jg
sbb
in
aaa
sbb
sar
test
(bad)
(bad)
(bad)
jnp
icebp
std
out
stos
push
cmp
lea
push
push
mov
lea
add
movs
loopne
mov
test
sub
dec
push
rcr
cld
cmp
jle
push
jns
sub
call
imul
adc
enter
or
or
jns
inc
or
mov
inc
push
mov
je
clc
cmps
dec
lea
sub
mov
cmps
cmp
test
loop
fsubr
ja
add
cmp
jae
xor
mov
into
cmps
adc
jb
jmp
and
les
push
push
push
(bad)
int3
pop
rcl
sub
(bad)
mov
jle
cmp
jne
dec
push
push
push
mov
(bad)
pop
mov
add
fcmove
mov
or
push
sbb
sbb
sti
call
cmp
movs
or
cmp
sbb
lds
sub
cmp
or
es
sbb
mov
je
add
test
pop
pop
add
pop
loop
mov
xlat
fmul
mov
(bad)
lock
les
inc
or
in
cmp
outs
mov
dec
xor
aam
adc
adc
cmp
jne
sub
lock
and
mov
or
jnp
movs
mov
sub
mov
in
jne
cs
dec
mov
xor
and
fbld
ins
nop
mov
scas
add
sub
inc
idiv
call
push
cmp
jae
adc
stc
les
in
cmp
addr16
je
sbb
fnstsw
fsubr
inc
xor
push
push
outs
pop
xor
cmp
je
cmp
jb
mov
and
jmp
jl
add
je
sub
mov
push
ret
mov
stc
or
cmp
aaa
and
cmp
lea
mov
sub
call
pop
iret
and
mov
cmp
push
in
pop
ss
data16
jle
inc
fst
pop
js
ins
jne
sbb
out
mov
adc
adc
push
xor
jne
fcomp
mov
push
gs
scas
adc
jl
mov
setne
pop
add
and
popa
aad
popa
es
inc
pop
add
(bad)
inc
cmp
push
mov
sbb
in
lea
xchg
push
sbb
(bad)
out
xor
jno
jge
mov
ins
cld
mov
adc
pop
mov
(bad)
push
inc
(bad)
jmp
inc
(bad)
mov
dec
push
test
mov
sbb
mov
aas
das
xchg
xor
push
add
sbb
mov
adc
adc
mul
lock
xor
push
inc
mov
add
xor
push
ja
and
in
sbb
cmp
nop
pop
or
retf
inc
fimul
adc
icebp
inc
or
ror
mov
push
ja
and
cmp
(bad)
mov
cmp
or
test
mov
mov
adc
jnp
and
fmul
enter
lea
push
mov
add
test
idiv
jmp
imul
xchg
je
(bad)
cwde
jge
sbb
dec
cmp
push
pop
push
push
xchg
mov
arpl
xor
sbb
ret
or
mov
jmp
jne
dec
add
add
add
jmp
cmp
add
fcomp
cs
jne
xor
mov
retf
stos
inc
fbstp
add
push
sub
push
mov
jnp
test
(bad)
das
inc
pusha
je
push
fs
push
xor
clc
dec
fwait
std
xchg
sbb
ins
lea
dec
push
or
sub
push
mov
add
out
mov
mov
adc
ret
leave
adc
pushf
cs
setnp
iret
pop
add
add
add
jecxz
cs
arpl
sbb
sbb
adc
shl
xlat
sbb
push
mov
inc
(bad)
push
mul
or
into
fadd
jno
loope
push
fiadd
sub
ins
jg
pop
push
test
jb
mov
and
inc
mov
pop
inc
jle
in
push
inc
iret
adc
loopne
push
mov
mov
or
mov
xor
dec
push
push
jne
or
cdq
std
jmp
cmp
jae
sbb
sbb
daa
call
and
inc
mov
xor
add
cld
add
push
sbb
inc
push
or
hlt
jmp
cwde
cmp
jle
push
push
mov
cmp
loopne
cmp
repz
and
dec
mov
add
test
sbb
les
test
or
mov
xor
inc
push
pop
pusha
pop
mov
cdq
fsubr
call
add
or
push
std
out
je
add
cmp
loop
push
push
cmp
push
fsubr
xor
and
add
add
jmp
add
inc
loop
push
cmp
push
push
or
movs
retf
add
lods
loope
pop
inc
jp
push
add
dec
loopne
cmp
popf
mov
xor
jmp
rcl
lock
push
call
inc
xchg
jle
fisub
add
jge
movs
push
mov
cmp
lock
test
push
loopne
or
inc
sbb
ja
pavgb
nop
idiv
in
lea
jmp
xor
loop
hlt
pop
dec
cmp
jae
sub
inc
jae
jle
xchg
jmp
add
bndstx
push
and
inc
pop
mov
lock
in
call
fs
mov
cmp
je
cmp
jne
push
mov
xlat
ror
add
(bad)
retf
ss
or
push
inc
cs
fmul
push
jl
jo
loopne
or
retf
(bad)
dec
sbb
popf
js
jne
ss
jnp
or
dec
push
or
mov
add
fcomp
in
add
inc
test
jo
adc
dec
outs
pop
sbb
xor
adc
xlat
jle
inc
or
int
cmp
dec
mov
add
pop
sbb
inc
adc
cmc
bound
xchg
add
sbb
dec
pop
clc
test
sti
mov
push
jecxz
adc
xor
fadd
mov
cmp
mov
inc
(bad)
mov
push
(bad)
and
lods
jle
je
push
ror
mov
lea
add
or
dec
jb
and
lds
add
jmp
gs
imul
push
leave
sbb
add
imul
jae
gs
pop
fist
retf
xchg
pop
hlt
mov
jb
mov
or
add
mov
int3
ss
jecxz
jge
stc
cmp
jne
push
call
sub
sar
push
stos
popf
add
call
xor
(bad)
add
out
lock
(bad)
shr
jno
mov
ret
jl
jp
mov
loope
add
pop
pop
add
xchg
cmp
mov
loopne
lock
test
and
pop
je
sbb
repz
movs
sbb
mov
fdiv
xor
inc
je
jle
jmp
ins
xchg
push
stos
(bad)
stc
not
js
and
fsub
mov
and
adc
add
aas
mov
ret
lea
fwait
cmp
inc
or
loopne
push
add
push
add
push
hlt
and
add
ins
jo
cmp
lock
aas
and
cs
ror
ud0
mov
cmp
push
adc
add
cmp
jle
cli
or
test
add
test
push
int
adc
push
xor
add
fbstp
xchg
mov
add
dec
mov
sbb
sbb
sub
add
cmp
push
fs
jmp
add
and
or
mov
push
sahf
std
xor
xchg
pop
xor
or
and
xor
sub
add
mov
rol
stos
bnd
jmp
shl
mov
jne
sar
add
push
mov
ret
jmp
jno
pop
dec
xchg
jb
add
add
mov
adc
fimul
lea
dec
ss
cli
sub
jbe
cmp
jne
cmp
aas
clc
sti
xor
jbe
pop
add
sub
adc
ror
clc
jge
sub
push
jo
mov
jae
repz
pusha
pusha
fmul
adc
inc
pushf
cwde
imul
mov
mov
push
push
jmp
sahf
jle
cmp
add
pop
test
or
cmp
jne
jmp
sbb
sub
mov
push
mov
hlt
out
ds
add
xor
dec
adc
mov
lea
inc
gs
aaa
mov
mov
(bad)
out
in
jp
mov
lds
int3
push
push
ja
ret
aam
aaa
pop
adc
cmp
pop
inc
dec
or
jl
mov
sub
mov
(bad)
mov
pop
add
adc
lock
sbb
sub
lea
jg
push
xor
jmp
mov
cmp
loop
jl
je
cs
mov
cmp
clc
lea
(bad)
das
xchg
mov
cli
mov
and
lods
add
arpl
fimul
jl
mov
pusha
or
mov
push
dec
dec
add
jbe
ja
mov
call
mov
cmp
dec
sbb
push
mov
cmp
mov
add
or
mov
sti
or
je
adc
adc
push
add
adc
fsubr
fbld
loopne
(bad)
mov
aaa
sar
xor
call
dec
jne
and
cmp
pop
cmps
or
adc
jmp
jmp
fimul
je
xor
push
xor
or
push
jp
and
pop
pcmpeqw
(bad)
aas
mov
pop
mov
jne
mov
inc
cmc
jle
cli
js
jne
mov
enter
mov
jne
mov
add
push
mov
sbb
pusha
sbb
lock
sbb
rcl
or
mov
jne
outs
pusha
rcr
pop
jecxz
cmp
sbb
ds
repnz
in
mov
or
mov
out
outs
jbe
push
mov
(bad)
sbb
adc
ins
mov
mov
fs
ret
aaa
outs
movups
add
pop
pop
pusha
cmp
mov
pop
in
jb
pop
loopne
jne
inc
mov
hlt
(bad)
sbb
dec
or
pop
pop
data16
xlat
stos
pusha
add
cmp
or
and
xlat
repnz
lea
xchg
adc
xlat
cmc
mov
shl
push
xchg
add
pop
push
dec
cmp
std
cmc
enter
sbb
mov
pop
adc
cmp
mov
sbb
std
jp
push
cmp
or
push
es
pop
jnp
rcl
pop
adc
pop
or
push
es
stos
test
jmp
pop
or
mov
xor
lahf
int
adc
ja
xlat
pop
or
inc
mov
ret
inc
jae
je
stos
das
cmp
clc
cmp
je
jo
adc
int3
or
mov
clc
inc
pop
mov
sbb
cwde
xchg
sbb
mov
adc
and
xor
test
enter
sbb
or
shl
rcr
sbb
rol
push
in
mov
out
adc
addr16
(bad)
mov
push
retf
push
bswap
mov
pop
sub
jmp
dec
cmps
or
or
fstp
push
push
scas
rol
cwde
(bad)
pop
or
dec
mov
fsub
fadd
(bad)
out
(bad)
stc
add
iret
jae
test
je
mov
sub
sub
jb
or
mov
cmp
les
ret
ror
mov
shl
push
dec
dec
mov
or
out
sub
add
pop
or
jmp
pop
sbb
fs
adc
pop
push
inc
cmp
loopne
in
fs
push
scas
push
dec
inc
retf
lea
mov
je
xchg
out
cmp
adc
push
movs
or
or
js
cmp
dec
pop
mov
dec
xor
call
or
jp
call
scas
sub
(bad)
adc
or
and
add
loope
js
retf
sbb
ins
jnp
add
sbb
retf
shl
cld
push
pusha
push
mov
and
retf
cmp
jne
adc
jle
loopne
push
sahf
xchg
add
push
(bad)
or
repnz
jge
fbstp
jmp
clc
pusha
out
inc
push
in
sbb
sbb
push
cmps
data16
ins
test
mov
mov
sahf
cmp
je
jge
dec
inc
ins
xor
add
push
cmps
push
xchg
jo
and
cmp
shl
push
fbstp
add
push
data16
pop
pop
ds
js
or
push
rol
in
mov
(bad)
out
mov
shr
mov
xor
add
sub
fimul
int3
dec
add
cmp
test
inc
dec
dec
not
dec
mov
inc
add
add
and
or
prefetcht0
add
push
and
xchg
call
pop
cmp
inc
pop
(bad)
jmp
mov
sti
in
mov
xor
xor
(bad)
jne
jmp
outs
ins
mov
adc
pop
ret
adc
adc
jmp
jnp
adc
mov
lea
int
or
addr16
adc
jp
(bad)
loopne
rol
sbb
mov
into
test
dec
push
das
lock
stos
(bad)
add
and
cmp
xchg
data16
je
mov
outs
ins
imul
leave
jmp
imul
int3
add
enter
or
das
and
jo
add
sub
out
jg
data16
(bad)
sub
ins
mov
aaa
lock
push
and
mov
mov
adc
adc
ja
das
xor
icebp
test
adc
sub
and
adc
xor
inc
adc
xor
popf
fistp
stc
and
push
sub
hlt
push
pop
imul
push
or
jbe
sub
xor
push
sub
pop
js
(bad)
adc
cmp
push
ret
mov
pop
pop
icebp
das
dec
sti
pop
lds
mov
cmp
je
es
bound
sbb
add
out
cmp
jmp
push
pop
pop
cmc
stos
test
mov
les
and
jo
jo
enter
aad
fisubr
ins
int3
loope
pop
fisub
adc
adc
fadd
add
push
(bad)
adc
(bad)
mov
enter
loopne
push
push
push
sbb
or
or
push
aas
xor
pop
sub
and
lods
and
popa
movs
ror
mov
cmps
adc
push
inc
loopne
or
mov
(bad)
dec
add
sbb
sub
lea
ds
and
push
hlt
push
add
call
add
gs
add
push
push
call
ror
inc
jge
hlt
cmp
out
fdivp
je
or
or
out
mov
pusha
inc
daa
mov
jp
data16
pop
movs
push
push
sub
ja
cmp
sbb
xchg
out
xor
or
inc
jg
stos
pop
das
jne
push
mov
cmp
xchg
fnsave
and
out
(bad)
pop
mov
cmp
rol
pop
inc
xor
arpl
xor
sub
adc
out
in
mov
sbb
sbb
pop
pop
pop
inc
pop
dec
in
loope
or
cmps
dec
inc
push
stos
or
lahf
hlt
inc
fsub
ror
push
pusha
sbb
mov
add
aad
xchg
xchg
(bad)
adc
cmp
aad
xchg
pop
sbb
pusha
pop
sbb
dec
call
jnp
push
push
call
and
inc
adc
les
jbe
sbb
cmp
push
int3
sub
js
add
ror
les
add
pop
call
cmp
repnz
or
or
pop
push
test
or
xor
adc
mov
int
fwait
ja
or
push
jns
retf
push
adc
or
ins
sbb
sbb
jns
adc
sub
push
or
push
int
inc
dec
pop
cli
es
and
or
jne
dec
mov
or
jl
mov
or
in
and
and
hlt
inc
rcr
outs
mov
lea
add
adc
mul
push
xchg
cdq
xchg
jl
dec
movs
ret
push
jp
xchg
lods
mov
push
cmp
mov
shl
jge
cs
lods
hlt
out
test
inc
jmp
push
xchg
ja
movs
mov
fdiv
loop
in
or
mov
cmp
mov
(bad)
push
lock
or
sbb
and
adc
ins
and
pop
add
dec
push
sbb
push
mov
ror
add
inc
jo
dec
sbb
call
jg
mov
inc
je
out
jae
sbb
and
fst
push
and
sbb
adc
jo
dec
enter
cmp
mov
out
sbb
sbb
(bad)
sbb
jae
leave
int
mov
not
add
adc
cmp
int
sbb
leave
mov
or
sar
fmul
setge
and
xor
inc
mov
je
push
dec
adc
retf
jno
fstp
repz
jg
lock
jo
jle
mov
mov
sahf
lds
add
inc
inc
jmp
jl
inc
cmp
fidivr
jno
cmp
pop
pop
dec
adc
hlt
jbe
js
inc
pop
xor
mov
cld
mov
dec
sub
and
mov
mov
mov
mov
shr
test
add
and
bound
inc
std
pop
cmp
sahf
sub
add
pop
sar
pop
pop
sbb
cld
pop
and
mov
cmp
push
inc
cmp
jl
fmul
sub
pop
pop
add
idiv
in
adc
pop
sub
dec
and
jmp
adc
aad
(bad)
out
dec
xchg
adc
arpl
cld
push
adc
sub
idiv
outs
loope
pop
loope
fild
popa
or
and
mov
push
pop
jmp
(bad)
push
add
fild
push
je
pop
fstp
lea
fxam
retf
dec
mov
les
call
icebp
jno
jne
out
(bad)
pop
stos
cmp
fisubr
mov
pop
stos
hlt
in
pop
clc
cmp
sub
inc
push
mov
sbb
pop
pop
xchg
sbb
jbe
sahf
cmp
dec
pop
clc
or
push
or
sub
shl
jb
sbb
sub
mov
and
clc
mov
or
and
je
lock
imul
xor
shr
rcl
cmp
cmp
cmp
loope
test
push
ret
or
pop
fs
pop
ret
neg
jl
arpl
push
pop
bt
ds
xchg
idiv
pop
data16
mov
loope
or
xor
loope
leave
sub
enter
(bad)
push
xor
dec
xor
mov
xor
into
jl
je
xor
ins
inc
ins
mov
mov
dec
js
scas
pop
sub
and
adc
test
sbb
push
cmp
xchg
shl
out
inc
cld
add
cld
mov
les
cwde
or
dec
jns
xor
xor
or
dec
js
jp
inc
push
dec
jge
mov
xchg
int
mov
mov
lock
imul
sub
jl
jg
je
cmc
push
outs
push
dec
mov
mov
fdivr
ja
jb
cdq
in
mov
add
clc
call
sub
mov
in
imul
xor
cmp
inc
push
jl
or
jmp
jle
dec
mov
enter
iret
xor
xchg
jge
jle
and
loope
call
(bad)
xchg
add
push
xor
xor
add
lock
inc
mov
in
jmp
sub
cs
jmp
adc
in
mov
shl
enter
inc
push
push
inc
mov
cmp
clc
pop
xor
sbb
jmp
add
hlt
(bad)
cs
pop
adc
leave
test
adc
push
fwait
add
je
or
aad
mov
pop
mov
fiadd
cmp
fdiv
add
sub
mov
cwde
into
jae
add
mov
jne
mov
xchg
jl
in
push
add
add
mov
neg
cmp
rcl
add
rcl
fimul
or
jmp
sub
cdq
ror
ins
xor
push
cmp
sub
or
scas
inc
mov
push
ret
xor
adc
adc
mov
ret
cmp
mov
push
pop
(bad)
je
(bad)
dec
lea
ins
dec
sub
cld
je
xor
loopne
wrmsr
mov
je
hlt
adc
or
inc
cmps
fwait
mov
mov
xor
adc
pop
cmp
hlt
push
dec
pop
out
push
aam
je
mov
cli
das
les
icebp
dec
fwait
adc
sbb
test
push
sub
sub
rol
aam
call
fadd
je
mov
cmp
sbb
sub
mov
sti
iret
neg
mov
xor
jmp
pop
cdq
adc
add
aaa
imul
cmp
adc
sar
das
clc
jmp
pop
neg
cmc
push
neg
jmp
inc
imul
(bad)
sbb
daa
test
out
mov
jle
pop
push
cdq
in
adc
adc
adc
ret
xchg
mov
leave
(bad)
cmp
dec
dec
xor
retf
jno
test
repnz
cs
es
mov
cld
mov
sbb
out
sbb
fcomp
hlt
dec
xchg
pop
in
out
adc
xchg
jl
sub
jae
inc
in
dec
addr16
inc
add
and
jmp
cmp
es
add
(bad)
in
push
mov
add
scas
les
aas
dec
push
push
xor
dec
jns
add
cmp
cwde
fiadd
fdiv
add
fadd
push
and
pop
test
cmp
push
jl
aaa
push
daa
add
mov
add
sub
add
outs
and
dec
popa
pusha
cli
and
mul
add
adc
add
or
retf
mov
mov
jnp
push
mov
call
sbb
fisub
sbb
add
jle
jl
add
mov
ins
lds
jnp
add
pop
dec
test
jle
loop
test
push
jae
jne
loopne
clc
jo
and
or
push
adc
outs
mov
lods
fidivr
pop
gs
test
retf
mov
push
jne
dec
adc
adc
pusha
push
mov
xchg
out
or
retf
inc
fstp
xchg
push
push
mov
push
mov
inc
and
fcomp
std
sbb
sub
xor
push
jns
push
cwde
sub
inc
das
add
add
xor
js
or
mov
adc
push
out
or
sar
test
out
bswap
les
loopne
int3
rcr
inc
inc
aaa
inc
jae
mov
push
adc
dec
in
outs
cmps
sub
push
pop
(bad)
sub
jno
test
cli
pop
std
loopne
daa
fld
pop
cmp
jge
sub
pop
mov
xor
pop
inc
xor
pop
rol
fmul
pop
cmp
dec
cmp
or
in
mov
pop
shl
arpl
cs
mov
ins
inc
xor
xor
adc
imul
sub
pop
lock
push
add
inc
dec
jmp
lock
mov
lea
and
jnp
(bad)
push
out
or
(bad)
jmp
mov
mov
shr
xor
sbb
push
mov
mov
movs
(bad)
idiv
mov
sub
movzx
shl
or
scas
ret
cmp
jae
add
jbe
in
dec
clc
cmp
jae
sub
pusha
outs
pop
ja
mov
cld
push
and
cmp
mov
dec
xor
jmp
adc
add
dec
out
jae
cmp
movs
enter
(bad)
dec
push
add
push
push
adc
adc
inc
mov
popf
test
aad
xor
repnz
cmp
jge
nop
mov
mov
mov
mov
pop
mov
adc
add
push
jge
xor
inc
mov
shr
int
bound
in
push
into
loopne
mov
mov
out
fnsave
fist
inc
or
xor
aaa
aam
pop
leave
adc
ins
push
enter
repnz
imul
imul
outs
jge
mov
lea
cmps
js
xor
jne
add
mov
push
push
aaa
adc
and
fisub
loop
js
mov
mov
stc
mov
pop
shl
sbb
add
ins
in
aaa
lea
lock
xor
ror
mov
jp
dec
adc
cmp
sbb
sbb
sub
push
adc
push
cmps
loopne
push
stc
add
push
xchg
ds
lods
sbb
test
xchg
xor
add
inc
das
push
jne
jno
pop
enter
cli
mov
push
mov
jle
or
movs
pop
enter
push
adc
inc
pop
shl
dec
or
jae
neg
pop
cmp
jl
add
or
or
and
fsubr
or
or
and
dec
jb
cmps
or
or
add
out
sub
xor
clc
retf
sbb
xchg
jl
div
inc
mov
and
xor
and
pop
jne
push
movs
or
and
test
mov
sub
data16
sbb
sub
lock
adc
or
jl
sbb
test
je
jo
dec
clc
inc
or
jmp
fdivr
adc
push
or
push
les
mov
inc
adc
pusha
jmp
cmp
test
dec
dec
sbb
ret
loopne
fwait
pop
push
pop
setg
ret
and
test
push
in
push
cmc
mov
sbb
sub
in
sar
jno
xor
add
inc
mov
adc
cli
call
je
cmp
je
sahf
fdivr
movs
sbb
cmc
or
add
or
cmp
stos
xor
mov
pop
or
lock
js
setg
add
inc
jae
movaps
mov
sbb
jnp
js
fld
and
pop
in
loope
jae
outs
sbb
out
push
arpl
cli
jmp
sub
cmp
jle
shl
lea
push
sar
and
fmul
xlat
push
mov
(bad)
adc
sbb
rol
ret
aad
dec
mov
jne
loop
sub
sub
inc
cmp
or
or
inc
hlt
fisttp
out
jge
xchg
mov
mov
dec
lock
shr
inc
fsub
es
add
lock
or
lock
retf
test
push
test
push
(bad)
lock
rol
mov
sti
fs
fdiv
data16
add
push
sbb
push
mov
jmp
scas
inc
sub
(bad)
retf
mov
add
or
in
jne
mov
lods
sbb
jne
loope
mov
lea
mov
sahf
jg
sbb
scas
mul
ds
inc
jg
popa
ror
add
js
je
mov
icebp
(bad)
adc
sbb
add
jne
inc
lea
push
pop
cmp
mov
cmp
jge
lea
sub
mov
dec
jp
cli
lea
(bad)
or
pop
jne
cmp
push
movs
std
pop
sbb
je
aad
push
ret
push
pop
or
les
lock
or
push
pop
pop
lods
cs
adc
add
pop
or
loope
jbe
push
adc
xor
sub
or
mov
pop
adc
into
cmp
retf
or
pop
pop
sub
or
aam
rol
not
jmp
push
inc
push
loope
pop
cmps
jle
inc
pop
ins
(bad)
fmul
or
and
jl
clc
inc
(bad)
stos
push
fstp
mov
out
sbb
cwde
push
adc
mov
xor
repz
push
sub
popa
(bad)
or
jbe
mov
add
pop
pop
push
jne
jl
adc
shr
mov
sbb
sbb
adc
jl
movs
call
dec
push
aaa
inc
or
mov
xor
inc
mov
add
hlt
lods
or
clc
repnz
mov
mov
and
call
hlt
mov
adc
dec
xchg
jbe
adc
xor
pop
sub
sub
fwait
call
pop
pop
lock
lahf
repnz
fisubr
call
in
jnp
add
stos
add
inc
movs
mov
push
mov
ins
test
call
fdiv
jl
and
inc
ins
icebp
push
jmp
xor
call
push
pop
pop
test
mov
shr
push
fs
pop
sub
mov
mov
rcl
push
jnp
jmp
or
and
mov
pop
iret
mov
xchg
mov
pop
mov
cdq
cmc
xchg
pop
loop
aaa
cmp
xchg
xor
mul
ss
push
ficom
pop
pop
cmp
push
lea
mov
pop
sub
ss
les
xor
imul
xchg
fcom
sub
jb
xor
cmp
inc
mov
push
dec
mov
popf
jo
lock
sbb
or
cmp
data16
fadd
jmp
ja
add
sbb
pop
pop
jnp
pop
in
sti
rcr
mov
jge
shr
iret
add
je
imul
sbb
cdq
loopne
xor
sub
push
jns
xor
sub
inc
xor
mov
pop
push
jmp
int3
and
aaa
ss
dec
xor
iret
cli
add
cmp
mov
jns
inc
mov
shl
(bad)
cmp
add
fdiv
rcr
jne
clc
xor
ficom
into
fdiv
gs
pop
int
aad
push
cld
push
inc
jl
mov
mov
inc
sbb
sbb
push
pop
lods
push
xor
leave
inc
scas
mov
lea
sub
pop
pop
(bad)
dec
dec
sbb
test
xor
push
daa
jecxz
popa
pusha
mov
mov
dec
mov
mov
xor
and
mov
test
mov
nop
mov
mov
push
fdiv
cmp
jb
out
dec
sbb
push
mov
push
stc
push
xor
sbb
scas
sar
pop
inc
dec
stos
shr
test
mov
or
mov
rcl
(bad)
in
add
pop
jns
lock
or
and
add
scas
fcomp
cmp
xor
pop
add
scas
jl
sub
xor
cmp
xchg
adc
pushf
ror
test
jo
or
pop
das
ja
cmps
and
xor
arpl
int3
(bad)
call
jl
jg
and
push
call
mov
sub
inc
sub
fcomp
jmp
jl
xchg
pop
outs
adc
mov
adc
jl
cmc
add
mov
push
dec
push
cmp
(bad)
cmc
popa
test
add
add
clc
mov
dec
add
jge
lds
push
and
pop
imul
cmp
or
cmp
mov
imul
or
outs
cs
sbb
out
call
mov
push
pop
xchg
outs
js
gs
rol
xor
xchg
fs
or
mov
jge
int
scas
ja
retf
cmp
cmp
push
cmp
jmp
(bad)
daa
add
dec
mov
add
push
mov
adc
xchg
or
or
adc
mov
mov
fbld
jle
sub
lds
jmp
xor
hlt
push
mov
dec
mov
push
dec
pushf
add
sbb
daa
bound
lea
not
xor
pop
int3
jmp
sub
sbb
je
les
mov
mov
int
jne
pop
rol
out
jne
mov
jno
push
lahf
(bad)
pop
pop
cmp
push
stos
test
test
pop
repz
imul
push
sbb
xor
fdiv
cmp
dec
pop
fs
jl
push
xchg
adc
(bad)
lds
push
test
inc
je
stos
or
sti
adc
loop
rcr
int3
add
fisttp
adc
lahf
mov
sbb
inc
rcr
dec
mov
sub
fxch
pop
in
lds
pop
nop
mov
out
dec
inc
pop
xor
ds
dec
push
test
cmp
ja
push
jmp
add
sub
popf
outs
dec
out
push
movs
ins
add
sub
or
inc
jno
sbb
imul
ret
call
movs
sbb
popa
mov
inc
bnd
mov
inc
loopne
jo
call
out
in
push
push
inc
stc
push
sub
imul
cmp
call
cs
mov
inc
mov
pop
lock
or
mov
popa
lds
jmp
(bad)
lea
jle
loopne
cmp
cmp
mov
or
dec
je
adc
dec
and
int3
add
add
push
sbb
dec
imul
pop
inc
or
jnp
cmp
add
push
dec
rol
(bad)
clc
push
or
xor
fs
jo
loope
jmp
mov
popa
push
dec
adc
lahf
ss
lds
jp
neg
dec
inc
test
jmp
xor
adc
jmp
mov
test
inc
rol
stos
hlt
lods
retf
not
(bad)
adc
or
jl
add
cli
or
les
cmp
cmp
rcr
sub
pop
mov
jmp
inc
add
and
mov
mov
push
sub
push
dec
lea
push
sub
lods
sbb
jno
inc
jne
popf
pop
popf
jl
dec
popf
or
xchg
cmp
pusha
push
inc
outs
js
(bad)
push
pop
clc
pop
mov
xor
movs
jecxz
popa
sub
xchg
xor
sbb
rcr
ins
ins
pop
cdq
pop
cmp
popf
lock
push
push
jmp
mov
push
jbe
push
or
push
adc
sar
hlt
push
adc
push
xchg
mov
popf
mov
sahf
test
add
iret
arpl
mov
sbb
aad
sub
clc
scas
jle
xchg
dec
cld
test
jl
sar
(bad)
lahf
adc
sub
and
add
push
add
call
adc
push
je
or
hlt
inc
jo
and
fdivr
or
lods
inc
pop
pop
inc
dec
mov
(bad)
jne
dec
inc
push
or
jmp
sar
inc
pop
adc
sbb
cmp
jle
mov
push
adc
cmp
or
push
cmp
mov
enter
cmps
cmp
mov
sbb
add
cmp
sti
mov
lea
inc
retf
test
icebp
es
inc
mov
push
or
add
xchg
int3
loope
pop
mov
xchg
mov
inc
lock
push
cmp
push
nop
or
sub
fwait
xor
push
out
xchg
rcr
es
xchg
icebp
mov
push
cld
push
icebp
popa
jg
xchg
pop
ret
sub
mov
aam
aam
movs
ja
mov
cli
mov
adc
aam
dec
(bad)
inc
movs
add
mov
addr16
mov
mov
xchg
dec
scas
pop
sub
mov
and
pop
or
inc
scas
ins
mov
pop
aaa
sbb
sbb
push
xor
aas
xchg
lock
(bad)
adc
aaa
cmp
or
add
or
push
dec
fistp
je
push
dec
mov
daa
adc
or
jnp
das
sub
xchg
in
cmp
mov
mov
sub
mov
and
push
mov
jno
ja
jne
push
mov
mov
or
push
xchg
mov
jecxz
scas
or
dec
fidivr
nop
add
push
sbb
pop
jle
push
pop
cmp
xchg
pop
push
sub
and
cmp
push
add
bound
idiv
dec
arpl
push
inc
push
jnp
jge
dec
cs
imul
dec
jmp
fistp
and
adc
fisttp
and
sub
xor
jbe
pop
pop
sub
inc
cmp
rcr
fist
dec
push
cld
and
inc
or
mov
add
hlt
or
mov
jmp
fdivr
pop
push
pop
inc
jmp
push
std
pop
cmp
lods
ss
cmp
dec
iret
inc
add
nop
pop
retf
sub
push
aam
test
xor
inc
mov
sub
test
and
lahf
or
popa
ret
xor
pop
add
or
mov
cmp
cli
retf
ficomp
jl
mov
push
mov
add
pcmpgtd
jmp
dec
xchg
or
cmp
add
fcomp
jge
or
in
jp
xor
imul
(bad)
nop
push
arpl
pop
daa
sar
mov
cwde
cmp
dec
dec
mov
mov
mov
mov
and
sbb
test
jl
test
push
jp
out
aas
push
cld
in
jo
jne
pusha
push
inc
pop
mov
pop
out
dec
xchg
lods
ds
cmp
push
je
out
jbe
sub
add
ins
mov
sub
adc
xor
jp
(bad)
daa
mov
pusha
lods
push
rcl
xor
je
sbb
lods
inc
sub
sti
xchg
jb
mov
push
popa
js
sbb
xor
push
sbb
cmp
mov
out
pop
inc
dec
mov
(bad)
in
(bad)
pop
add
ret
pop
pop
and
into
sub
inc
test
and
into
je
enter
xor
xchg
add
movs
fcomp
push
into
add
add
lock
inc
aam
push
adc
mov
push
stos
or
add
add
cmova
(bad)
test
sbb
mov
outs
clc
sub
ror
sub
add
je
xlat
hlt
jmp
(bad)
xor
test
and
push
xor
(bad)
cmp
jne
lea
sbb
into
add
jmp
and
sbb
std
cmp
stos
cmp
jne
cmp
mov
add
mov
call
mov
mov
pop
sbb
mov
fistp
add
mov
push
aam
pop
push
mov
aad
push
in
pop
loopne
lock
inc
mov
push
lods
(bad)
imul
sub
inc
pusha
pop
mov
lea
push
xor
imul
retf
jb
push
mov
or
push
dec
or
pop
xor
mov
or
lock
mov
fidiv
dec
sbb
pop
mov
add
sbb
push
sbb
and
or
and
dec
sub
push
fcmovu
mov
push
push
push
mov
push
xor
je
pop
retf
add
fisttp
shr
and
sbb
add
shl
fs
lods
cmp
ret
std
popf
dec
imul
inc
mov
in
jmp
jne
sbb
in
push
test
push
add
inc
stos
mov
mov
je
(bad)
jnp
xlat
fild
jne
push
clc
popa
jg
sbb
out
ss
or
or
jb
xchg
jb
je
lods
adc
push
mov
pop
push
cmp
inc
dec
cmp
loopne
popf
inc
push
cmp
sbb
mov
ss
pop
movs
mov
clc
fsubr
fs
cmc
movs
aas
adc
and
stos
mov
movs
ins
mov
sbb
or
add
add
loope
gs
pop
enter
pop
icebp
pop
imul
int3
jno
sub
movs
xchg
jecxz
mov
(bad)
movs
mov
les
and
push
jg
push
cmp
cmp
pop
push
xor
sub
adc
mov
cs
inc
pop
fld
int3
fdivrp
popf
jbe
adc
mov
gs
mov
shr
pop
push
imul
cmp
(bad)
popf
jbe
mov
jbe
xchg
fwait
fs
mov
call
pushf
pop
cs
xchg
clc
and
push
push
jg
inc
and
push
push
jl
test
xchg
and
jno
jne
push
xlat
pop
push
xchg
push
xchg
mov
lock
sbb
push
adc
add
dec
call
test
pop
ds
sub
and
ret
cld
call
sahf
push
je
retf
mov
out
pop
movs
ja
add
in
adc
sbb
dec
jmp
push
jo
bound
pop
fiadd
inc
inc
xchg
mov
add
fld
mov
lahf
mov
push
ror
add
outs
repnz
or
or
fdiv
outs
mov
(bad)
(bad)
mov
pop
aas
sub
outs
mov
jo
test
push
dec
xchg
call
(bad)
xor
cmp
daa
clc
dec
mov
cmp
sub
jbe
(bad)
jmp
dec
dec
fistp
jle
add
(bad)
cmc
xchg
cmp
(bad)
(bad)
mov
push
push
mov
jg
data16
and
jle
push
imul
push
dec
add
jne
test
mul
mov
fldlg2
(bad)
rcr
jne
dec
push
fadd
or
or
rcl
shl
ror
jb
les
lea
push
jno
loopne
jg
imul
and
cs
mov
mov
add
outs
mov
popa
pavgw
adc
mov
sbb
loopne
jo
(bad)
pop
stc
aaa
or
add
clc
push
neg
pop
or
adc
in
out
jo
pop
push
adc
enter
clc
xor
les
and
stos
mov
xor
mov
scas
loope
into
xchg
rcr
aaa
add
in
xor
mov
adc
imul
and
sbb
cmp
or
inc
mov
andnps
mov
sbb
dec
pop
and
mov
dec
adc
cmp
inc
clc
pop
add
aam
loopne
dec
in
sbb
repz
jle
and
or
fdivr
push
xchg
movs
and
loop
enter
scas
sbb
mov
adc
aas
xchg
outs
mov
mov
mov
cmp
into
in
lahf
push
sti
mov
jne
xor
xor
or
jmp
(bad)
add
mov
movs
sbb
sbb
shl
adc
inc
mov
mov
in
mov
xor
inc
pop
cmp
aam
sar
mov
adc
fs
inc
pop
pop
sub
test
icebp
arpl
bound
cmp
das
ja
in
pop
imul
(bad)
movs
loopne
ds
cmp
cmp
xor
push
xchg
push
pusha
mov
je
clc
sbb
cmc
cmps
scas
lea
fldenv
and
xchg
jp
push
call
leave
test
clc
xchg
xor
mov
pop
cmp
mov
mov
add
imul
mov
(bad)
and
lock
push
add
in
fcomip
rol
es
mov
adc
aaa
push
rcr
adc
cmp
pop
rcr
fnsave
fcomp
pop
cdq
xor
push
movs
js
push
mov
adc
outs
call
or
or
out
cdq
in
neg
pop
sbb
sar
mov
js
cmps
sar
mov
je
cmp
mov
ss
inc
push
fwait
jne
add
pop
out
cdq
jne
and
adc
fnstcw
imul
jns
dec
lock
xor
and
or
mov
mov
mov
inc
adc
mov
dec
cmp
pop
mov
mov
push
fisub
ins
clc
lds
pop
mov
fs
and
adc
xchg
in
push
or
mov
mov
jb
xchg
adc
clc
push
sub
mov
or
sub
movzx
xlat
icebp
iret
lea
adc
shr
mov
in
inc
or
aas
fs
dec
mov
js
scas
sbb
xchg
retf
sahf
pop
or
mov
xor
xor
jmp
jbe
add
sti
mov
and
and
sbb
in
xor
dec
movs
pop
mov
and
enter
in
dec
enter
aad
adc
test
sbb
call
out
adc
mov
mov
push
out
test
lods
fld
adc
pop
pop
add
dec
jg
sbb
jns
ss
cmp
add
in
sbb
add
ins
jge
bound
loopne
in
test
movs
cmps
and
call
push
dec
add
adc
xchg
sbb
push
add
dec
add
mov
sub
sub
mov
adc
cmp
and
dec
ss
sbb
push
and
retf
jo
sahf
xchg
and
pop
push
mov
ror
in
xor
adc
popa
xor
xor
xchg
and
clc
cs
mov
call
imul
call
inc
pop
cmp
neg
add
movs
loopne
scas
or
test
mov
sbb
lahf
mov
(bad)
fstp
stos
ins
rcr
ins
repnz
sub
jno
clc
dec
jle
(bad)
cli
xchg
in
sub
jne
lock
xor
lahf
clc
mov
aam
sbb
xchg
mov
and
sub
cs
add
ret
push
fdivr
aaa
je
cmps
inc
fdiv
mov
fadd
xchg
inc
inc
push
shl
mov
mul
movs
loopne
adc
mov
cmp
push
sub
mov
jns
or
sbb
ret
aam
mov
push
test
jno
mov
or
shl
or
cmp
pop
add
dec
jmp
adc
ret
push
jnp
pop
test
or
jnp
push
mov
push
inc
js
sub
add
sti
or
aad
jmp
pop
in
add
dec
mov
outs
jne
push
ins
adc
jne
test
nop
jge
or
mov
dec
nop
jne
imul
jne
jb
xchg
jl
mov
jo
and
dec
jne
pop
jle
or
push
sub
push
cwde
ret
add
add
ins
loope
ret
push
je
test
lock
or
popf
clc
pop
push
or
mov
xchg
lock
inc
fs
cmp
(bad)
dec
das
sbb
dec
mov
mov
popf
mov
rol
sub
mov
pop
mov
cdq
add
mov
jmp
sbb
push
push
cld
cmp
pusha
mov
pop
mov
clc
jno
jbe
aaa
push
aam
adc
inc
push
pushfw
lea
xchg
xor
xchg
jnp
xor
xchg
push
mov
add
pop
add
sbb
mov
xor
sub
and
aad
cmps
pop
jnp
xchg
or
jae
movs
mov
iret
inc
cmp
das
loopne
pop
cmp
xchg
push
(bad)
xchg
cmp
mov
xor
icebp
cld
cmp
cmp
sub
push
dec
sub
ja
mov
push
pop
sbb
xor
test
test
movs
add
push
int
in
sbb
mov
sti
mov
xor
fisttp
mov
xchg
outs
sbb
mov
(bad)
inc
movs
mul
nop
push
cmp
(bad)
scas
add
inc
ss
repz
cmp
inc
and
adc
adc
fmul
xor
loopne
push
mov
pusha
mov
push
push
pop
jb
sub
push
or
call
jl
lods
arpl
test
push
ins
inc
clc
or
loopne
iret
xor
call
xor
mul
call
fwait
movs
dec
pop
mov
push
imul
jecxz
call
out
push
movs
push
mov
sbb
jmp
shl
fldenv
movzx
mov
mov
xor
sahf
icebp
sbb
push
xor
or
(bad)
mov
mov
lock
or
(bad)
cmp
mov
push
loop
adc
or
or
push
rcr
dec
adc
jns
or
push
ja
lods
test
ss
daa
hlt
stos
jb
aaa
pop
sbb
cmc
pop
push
push
mov
pop
nop
(bad)
lock
sub
mov
or
mov
mov
inc
sbb
pushf
xchg
xor
mov
add
jle
aad
adc
stc
cli
sbb
mov
push
push
test
data16
das
add
in
rcr
adc
stc
sbb
shl
pop
and
pop
dec
cmps
dec
pop
xor
sbb
cmp
jo
dec
xor
jne
fcomi
cmp
fwait
in
jnp
(bad)
pushf
xor
inc
pop
inc
ret
sub
push
mov
or
adc
fsub
dec
adc
and
push
fdiv
xor
xor
les
mov
sub
pop
mov
xchg
pop
dec
sbb
scas
add
add
mov
out
dec
pop
popa
in
cmp
inc
sub
add
nop
or
lods
pop
adc
shr
xchg
add
(bad)
sub
repz
add
sub
int
ret
mov
mov
sbb
ror
mov
and
add
pop
enter
sbb
lock
jge
test
hlt
inc
mov
or
outs
les
add
inc
or
or
jl
ja
movs
xor
test
adc
sbb
adc
retf
xor
inc
add
jmp
pop
loopne
loop
cmp
dec
inc
daa
mov
cmp
add
and
xor
clc
jmp
call
cmp
jne
inc
popf
dec
pop
(bad)
add
sub
retf
mov
adc
push
gs
(bad)
retf
mov
shr
iret
je
lea
mov
out
sbb
cmp
push
push
mov
je
xlat
sub
aas
push
arpl
dec
add
push
sub
lock
adc
test
scas
fcomp
ds
xor
push
mov
pop
leave
sub
cmp
sti
inc
xor
mov
inc
mov
out
pusha
jbe
dec
cwde
xor
push
je
push
dec
pop
dec
retf
das
mov
cmp
xchg
mov
push
adc
jmp
mov
mov
cmc
in
add
es
in
jns
jo
jl
push
mov
ret
jmp
nop
in
inc
icebp
pop
fist
xor
pop
das
xor
rol
movs
in
adc
rol
push
out
and
adc
jo
rcr
icebp
loopne
add
into
fdiv
sbb
rcr
popa
xor
loopne
sar
aam
or
jae
mov
add
adc
or
and
inc
aas
lea
jp
loop
cwde
pop
les
scas
shl
aas
push
adc
retf
movs
jnp
mov
or
ret
je
cld
push
xor
aaa
inc
add
push
pop
bound
mov
lods
(bad)
pop
xor
jmp
cmc
dec
mov
cmp
int3
retf
jl
shr
push
aad
or
mov
push
aaa
test
fcomp
mov
mov
dec
in
push
xor
jl
arpl
aad
ret
loope
sar
or
loopne
fnstcw
inc
leave
bound
mov
inc
push
push
sbb
in
or
sub
test
sbb
enter
movzx
ins
or
jle
fdiv
jge
adc
or
shl
sbb
cmp
push
mov
add
cli
test
inc
adc
adc
cmp
rol
add
into
shr
mov
dec
adc
or
inc
push
mov
out
cmp
push
push
and
add
mov
jg
mov
gs
push
mov
ins
add
aam
inc
fisub
xor
xchg
push
loop
or
jnp
mov
jl
cmp
jmp
push
fsubr
sub
test
int3
add
mov
punpcklwd
les
ds
out
mov
or
push
stc
jno
cwde
fmul
ret
test
cmp
or
inc
jge
test
outs
cmp
jp
rcr
inc
jg
adc
jbe
fstp
pop
test
jmp
pop
mov
sbb
pop
jl
rol
push
and
mov
ret
pop
imul
test
push
(bad)
dec
adc
dec
aam
gs
mov
fdiv
jno
push
xchg
push
repnz
lea
pusha
mov
add
dec
rcl
call
clc
not
add
fimul
mov
xchg
sbb
mov
pop
jbe
imul
inc
fwait
push
push
add
jo
ret
sbb
dec
cmp
xchg
xchg
or
imul
xor
test
and
lock
out
lea
cdq
popa
inc
push
call
je
(bad)
pop
sbb
xchg
and
fdiv
inc
or
jl
fs
dec
cmp
popf
jbe
jne
(bad)
jno
jo
pop
out
xor
jne
imul
jmp
fmul
lds
dec
es
inc
sti
push
or
aad
rcr
nop
adc
jg
push
fs
jo
sub
cmp
(bad)
mov
pop
pop
mov
or
fwait
or
ret
test
sar
inc
mov
fild
sbb
cmps
cmp
mov
xor
cmp
sbb
pop
sbb
sub
pop
adc
or
push
add
push
mov
push
dec
jae
cs
xchg
popa
push
xchg
and
jmp
mov
shr
add
popf
ror
push
xchg
lds
xor
dec
and
cmp
div
jbe
les
add
jae
add
push
cmp
lock
push
mov
jnp
xor
lock
pushf
jbe
xchg
sbb
call
add
(bad)
not
ss
and
or
lods
cmp
inc
push
xor
call
xchg
adc
rcr
add
ret
push
push
pop
mov
das
or
xor
jmp
(bad)
sgdtd
mov
cwde
sbb
inc
rcl
movs
fdiv
addr16
add
or
pusha
xchg
or
xchg
pop
sbb
and
pop
(bad)
mov
mov
push
cmp
rol
add
mov
call
test
mov
pop
sbb
pop
pop
sub
int3
mov
and
movsx
mov
ret
cmp
or
pop
add
xor
sar
xor
cmp
sub
jmp
sbb
jl
data16
dec
ror
jg
push
or
adc
mov
jne
mov
adc
mov
jo
test
rol
inc
and
sub
sbb
(bad)
je
loop
xchg
std
xlat
push
push
mov
inc
jmp
inc
mov
push
pop
jp
or
xlat
outs
fild
(bad)
mov
push
pop
dec
mov
inc
or
jl
mov
stos
std
push
fmul
or
loopne
mov
shl
xor
jb
popa
and
jle
pusha
xchg
jmp
adc
shl
retf
por
or
pop
jne
cwde
mov
adc
cmc
cmp
mov
xor
sub
xchg
je
cmp
xchg
pop
xchg
ror
push
mov
mov
jmp
mov
es
js
fisubr
sar
or
mov
test
call
js
sahf
bound
dec
lahf
jbe
jmp
(bad)
cmp
daa
cli
test
add
or
jmp
outs
fwait
pop
je
or
adc
mov
loopne
xor
je
cmp
pusha
add
cmp
add
pop
xlat
popa
sub
dec
movs
add
enter
push
fs
inc
cmp
mov
dec
push
pop
xchg
test
sub
jbe
aam
lock
cmp
or
add
add
xor
dec
add
cli
test
(bad)
sbb
xchg
cmp
jbe
mov
push
shr
mov
jge
pop
and
neg
sbb
and
add
shr
aas
jl
fdiv
stos
stos
mov
mov
push
and
jb
pop
sar
int
shl
mov
or
rcr
ror
aam
jmp
sub
rcl
retf
push
mov
xlat
jne
ror
sub
or
push
in
inc
pop
je
inc
jo
loope
cmp
mov
mov
jmp
jp
mov
test
push
pop
xchg
xchg
dec
les
fs
dec
pop
xor
lds
xchg
dec
in
pop
leave
push
add
lfs
mov
bound
ror
push
(bad)
(bad)
cmp
jmp
push
push
mov
xchg
rol
in
push
push
aas
jns
dec
or
rdmsr
pop
and
add
jg
cwde
and
push
in
or
lds
push
or
lea
fsubr
push
sbb
add
lea
push
or
retf
add
or
xchg
loope
je
movzx
mov
push
or
mov
add
ss
cmp
ins
xchg
and
jmp
fcom
jp
dec
js
add
cdq
aas
cld
xchg
fld
arpl
inc
adc
inc
sub
test
jo
inc
outs
das
fdiv
xchg
ins
adc
(bad)
push
pop
lea
xor
push
movs
xor
cmp
dec
aas
add
sar
mov
adc
xlat
jge
xor
add
cdq
idiv
adc
pop
push
lock
or
in
sar
aam
test
mov
movs
movs
mov
inc
and
cli
hlt
xor
push
push
aam
sahf
push
rol
jge
sub
out
cmp
inc
adc
pusha
pop
cli
adc
cwde
loopne
or
add
fs
fidiv
xchg
cmps
jbe
mov
mov
pop
cmps
cmp
adc
pop
jne
(bad)
pushf
add
push
add
shl
dec
sbb
mov
mov
lods
scas
test
mov
xor
out
lea
pop
or
xchg
adc
shl
imul
inc
out
cmp
add
sbb
cmp
mov
mov
push
add
xchg
mov
pushf
inc
lahf
rcl
(bad)
addr16
pop
sub
or
inc
push
test
adc
and
or
jp
mov
lahf
and
xchg
sbb
adc
pusha
lds
test
movs
xor
push
bound
daa
adc
test
add
mov
repnz
and
add
sahf
adc
push
xchg
mov
xchg
xor
repnz
loopne
jmp
movs
xor
aam
pop
shl
imul
xchg
out
add
hlt
repnz
or
push
es
loopne
sub
test
jo
inc
or
cld
add
push
mov
jbe
cmp
mov
pop
rol
pushf
out
xor
jne
or
mov
lds
cmp
nop
inc
sahf
ret
mov
or
and
ret
add
or
mov
xchg
mov
mov
add
pushw
mov
add
push
push
sbb
xor
add
or
cmp
(bad)
out
adc
sbb
ret
es
lea
add
xor
retf
dec
cs
call
inc
cmp
or
sbb
add
add
mov
and
jmp
pop
sahf
dec
or
pushf
pop
push
jo
xchg
pop
ret
or
vsqrtss
in
mov
push
loop
loopne
(bad)
iret
aad
add
xchg
mov
adc
push
popa
mov
and
and
je
xchg
push
rol
sub
add
outs
cmp
mov
dec
inc
inc
js
add
mov
(bad)
or
scas
aam
lea
pop
dec
mov
call
or
sbb
push
sbb
xlat
loop
inc
lahf
mov
rcr
sub
pop
outs
fstp
xor
jo
std
mov
inc
add
inc
push
shl
or
mov
lahf
dec
xor
jo
dec
cdq
repz
adc
or
mov
out
adc
dec
push
push
repnz
or
or
or
pusha
stos
push
push
add
add
add
mov
jge
shl
cmp
jecxz
cmps
sbb
ret
mov
mov
stos
rcl
stos
jno
mov
mov
sub
cmp
mov
stos
push
sub
sbb
pop
mov
das
in
push
push
out
in
lods
pop
mov
repnz
add
add
push
xor
adc
jp
xchg
fmul
(bad)
jne
pop
inc
sbb
pusha
mov
push
mov
adc
dec
adc
mov
jo
fwait
add
pusha
loopne
xor
and
push
lock
cmovl
mov
inc
or
gs
aad
pop
hlt
pop
ss
not
inc
pop
and
sbb
in
loope
adc
adc
and
jnp
lods
add
loope
cmp
fdivr
push
push
fmul
jnp
enter
xchg
push
mov
mov
mov
xor
stc
sub
aas
mov
fld
fsubr
imul
sub
dec
pop
mov
cmp
xchg
rcr
fcom
mov
mov
daa
(bad)
mov
pop
push
pop
call
pop
push
push
push
mov
shr
sbb
in
les
into
mov
push
mov
bound
adc
lock
ud0
sar
cs
cmp
cmp
push
pusha
leave
mov
sub
xor
jbe
aam
mov
inc
inc
add
pop
jmp
cli
inc
add
outs
test
jge
or
mov
sub
add
adc
popf
scas
out
jl
gs
mov
push
adc
push
inc
jo
cmc
(bad)
int
sti
loop
sub
xlat
push
push
pop
inc
inc
cmp
lea
das
loop
push
inc
lahf
mov
add
je
cmp
aas
pop
pop
push
loopne
jbe
cmp
and
adc
pop
test
xor
cli
or
es
test
push
cmp
push
inc
fldlg2
adc
mov
jle
xchg
and
addr16
inc
rcr
xor
rcr
push
mov
mov
hlt
call
loop
mov
or
adc
adc
adc
sub
add
sbb
push
adc
jmp
push
push
cli
movs
xlat
and
mov
add
pop
push
in
inc
iret
xor
popf
xor
ret
sahf
push
add
mov
sti
add
jne
pop
movs
or
das
push
sbb
mov
mov
pop
cmp
jle
xchg
rcl
fimul
push
dec
adc
jecxz
mov
es
sbb
xor
dec
pop
jne
push
or
mov
js
pusha
jmp
shl
jne
sbb
mov
cmp
inc
pop
dec
sar
add
pop
pop
loopne
mov
jp
loop
mov
inc
(bad)
push
shl
hlt
add
(bad)
mov
ror
not
test
stos
dec
aaa
jle
lea
mov
nop
push
sbb
lock
jbe
cwde
inc
jmp
and
or
push
add
and
jo
stos
push
inc
pop
dec
sbb
out
cld
jnp
mov
and
lock
push
das
sub
adc
ror
rcr
add
sub
test
setne
scas
push
das
pop
aas
mov
stos
add
movs
add
icebp
paddusw
pushf
mov
aad
sub
adc
enter
xlat
push
push
jb
or
test
push
mov
adc
je
sub
inc
call
pop
sbb
fisub
sbb
scas
push
rol
pop
add
lods
pop
cmp
dec
cmps
popa
and
test
and
add
jl
add
or
or
clc
inc
in
or
call
push
and
inc
sub
fmul
or
mov
push
fsub
dec
mov
mov
scas
pop
imul
sub
adc
xchg
dec
lods
or
xor
and
test
cmp
mov
pcmpeqb
push
mov
adc
lock
mov
jb
loope
pop
shr
and
pusha
mov
mov
jge
mov
mov
ret
leave
add
les
clc
push
xchg
xchg
cmps
and
je
das
into
push
adc
lahf
pop
shr
mov
xchg
mov
cmp
fist
js
ins
and
or
mov
(bad)
fdivr
pop
cmp
lds
call
iret
je
fcomp
enter
jne
in
push
inc
mov
lahf
add
and
in
sbb
jmp
mov
aam
and
dec
and
and
inc
fimul
aad
mov
pcmpgtw
inc
mov
jae
movs
ins
and
xlat
ins
push
xchg
xchg
ins
lods
das
lods
mov
or
or
pop
xor
(bad)
aas
stos
add
push
adc
in
rol
fisub
fist
shl
out
add
adc
push
mov
(bad)
jmp
ja
cmp
lods
dec
adc
mov
sbb
sub
push
cmp
fwait
inc
push
out
add
sbb
and
sub
lods
sbb
push
cmp
in
cmp
mov
push
push
add
and
push
push
in
out
dec
sub
jmp
mov
cdq
fsubr
inc
add
inc
into
push
pop
(bad)
(bad)
ret
pop
push
mov
push
cmp
int3
int3
test
inc
xchg
cmp
push
sbb
add
mov
je
inc
je
pop
adc
inc
mov
or
or
xchg
add
adc
inc
mov
in
imul
fs
enter
or
outs
neg
imul
enter
data16
pop
aam
sub
cwde
add
outs
cmps
jne
push
imul
add
in
mov
cmp
mov
jae
or
adc
in
and
mov
inc
neg
sbb
mov
and
retf
add
rcl
lea
dec
enter
jge
mov
add
add
jle
add
jo
mov
cmp
dec
or
push
xchg
je
leave
xor
cmp
jb
xor
pop
rol
ret
neg
push
cmp
or
sar
and
sbb
sbb
neg
call
adc
popf
adc
xor
bound
adc
jecxz
cmp
stos
or
call
pusha
add
fs
dec
add
loopne
mov
or
dec
daa
push
mov
lods
call
jmp
sub
test
fidiv
pop
inc
jecxz
mov
aad
adc
jo
sbb
adc
sub
loope
cmps
dec
mov
xchg
lock
or
fs
arpl
push
add
sbb
jmp
lods
daa
adc
js
sbb
sar
push
or
inc
xchg
out
dec
es
pop
sub
push
repnz
loope
add
shl
mov
adc
or
sbb
std
addr16
or
(bad)
jae
inc
cdq
mov
add
stc
mov
test
or
hlt
sbb
movs
jecxz
xor
js
push
dec
(bad)
and
jae
mov
or
add
cmps
adc
sbb
push
mov
mov
cmp
inc
sub
pop
in
pop
and
and
lahf
ret
push
add
test
add
push
mov
adc
push
sbb
and
adc
aas
xlat
add
lock
push
push
add
add
pusha
das
out
dec
std
and
and
ds
dec
add
jmp
data16
mov
cmps
repz
mov
xchg
xor
inc
add
inc
pop
fs
test
and
or
and
rol
scas
and
dec
cmp
cmp
mov
jl
push
aad
mov
and
jmp
jmp
push
movs
mov
movs
jg
xor
mov
ds
mov
imul
nop
adc
movs
hlt
push
dec
out
ss
adc
push
popf
retf
rcr
xchg
mov
addr16
rcl
and
outs
nop
in
call
ror
pop
jmp
aaa
sub
mov
inc
test
jns
xchg
retf
movs
sti
inc
test
je
and
or
call
add
into
jb
pop
mov
xchg
or
or
dec
and
add
add
mov
or
shr
and
push
jg
pushw
(bad)
jle
xor
cmp
jge
inc
sub
outs
push
mov
cmp
mov
mov
shl
sbb
push
pop
adc
or
sar
jg
test
jno
mov
(bad)
xlat
adc
adc
add
push
xor
push
push
jns
(bad)
fs
jns
jns
jo
mov
or
mov
shr
in
or
fisttp
and
sbb
add
out
mov
scas
lds
sar
mov
add
clc
add
or
push
pop
xchg
js
mov
iret
sti
xor
adc
ss
stos
in
mov
sub
mov
inc
and
jl
jb
push
dec
inc
rcl
and
sti
adc
and
adc
add
fcomp
xor
push
push
sbb
shr
mov
sub
cwde
dec
test
imul
push
mov
dec
adc
ss
movs
mov
pop
push
pop
fs
sbb
outs
imul
adc
push
ins
jne
mov
nop
retf
push
xor
out
daa
and
push
ss
or
ficomp
jnp
(bad)
js
and
into
inc
mov
xchg
cmp
xchg
lods
jmp
std
dec
mov
pop
or
mov
add
mov
cmp
popf
sti
lods
dec
push
into
pop
(bad)
in
xor
xchg
mov
movs
jge
and
jg
test
push
push
enter
stos
mov
ins
push
loope
ss
add
fs
add
ins
fnstenv
push
sub
add
or
dec
pop
js
pop
pop
hlt
cwde
outs
jmp
jle
push
xchg
or
push
adc
repnz
out
pusha
inc
pop
dec
mov
mov
mov
inc
mov
and
loop
inc
add
jmp
pop
push
inc
loopne
fs
rcl
sbb
inc
mov
dec
mov
and
cli
inc
mov
add
mov
ds
jl
inc
cmp
fcomp
aad
add
scas
cmp
clc
jle
or
pusha
add
jbe
add
pop
inc
(bad)
mov
push
mov
sbb
idiv
push
or
jo
mov
mov
add
(bad)
jle
mov
xor
mov
sub
add
dec
fiadd
hlt
xlat
cld
(bad)
mov
add
inc
xchg
mov
(bad)
jl
jl
call
les
call
cmp
push
ja
je
or
pop
adc
retf
int3
sub
sbb
fcom
int3
adc
xlat
enter
adc
sub
sti
cmp
mov
add
outs
call
add
or
xchg
inc
stc
add
mov
loopne
sbb
inc
imul
or
xor
aas
cmp
and
cmps
and
push
les
jl
adc
retf
es
dec
aaa
jl
adc
clc
je
and
add
push
push
rcr
push
lahf
fwait
add
dec
and
je
push
pop
ror
or
adc
cmp
cmp
jmp
nop
pop
sbb
mov
ja
inc
pop
xlat
cmp
xor
mov
sub
cmp
loope
scas
xchg
sbb
into
jno
add
and
lock
nop
ins
pop
daa
cmp
mov
add
es
push
shr
sbb
mov
inc
pop
push
inc
lock
cmps
nop
bound
pop
rep
mov
pop
fadd
mov
dec
in
sub
mul
xchg
jp
dec
add
adc
jne
pushf
call
mov
(bad)
(bad)
lods
sub
pop
neg
cmp
aas
dec
into
lods
pop
jne
inc
push
dec
push
sub
add
mov
or
mov
sbb
add
ret
cmp
xchg
dec
push
in
sbb
or
pop
add
pop
fisttp
adc
fist
pop
sbb
repz
adc
sub
cs
pop
sbb
movs
or
xor
jle
in
ins
fwait
lock
sbb
pop
xor
xor
out
pop
xlat
pop
daa
and
rol
pop
push
and
dec
test
xchg
mov
add
adc
xchg
inc
fmul
enter
ret
fwait
push
xor
xchg
dec
sub
or
push
and
adc
inc
inc
push
es
adc
dec
sub
shl
xor
push
sahf
out
pusha
jle
add
lock
jnp
pop
imul
push
aam
lods
not
push
mov
pop
test
loopne
jg
mov
push
add
jae
cmp
mov
pop
cwde
pop
xor
push
aaa
ins
xchg
and
add
lock
inc
or
adc
popa
jns
retf
cmp
and
xor
pop
iret
add
adc
clc
and
mov
rcr
cmp
xor
lods
or
cli
mov
xchg
(bad)
push
jo
dec
into
inc
or
(bad)
mov
xchg
sub
pop
or
popa
xchg
pusha
dec
add
or
and
xor
and
gs
pop
ffreep
loope
adc
mov
mov
sbb
outs
push
aas
add
popa
retf
xor
sahf
inc
in
xor
arpl
sbb
stos
push
mov
push
add
jecxz
xchg
test
in
cmp
in
and
add
mov
push
mov
int3
cmp
or
cmp
adc
out
loopne
adc
shr
data16
sbb
idiv
cmp
add
mov
cmc
sbb
fst
pop
jae
or
mov
mov
sub
mov
les
or
leave
add
test
rol
mov
ffree
out
push
sbb
xchg
mov
jmp
cld
xchg
rcl
stos
mov
daa
add
xchg
out
or
xlat
mov
adc
jmp
cmp
setle
inc
mov
sub
xor
sub
fiadd
icebp
js
pop
inc
fsubr
cmp
xchg
and
ins
add
mov
fld
ds
jmp
mov
xor
cmp
push
add
add
mov
pop
add
and
cmp
mov
mov
inc
jmp
inc
cmp
sub
repnz
add
add
mov
in
pop
mov
pop
retf
lock
add
or
dec
dec
mov
sub
scas
stos
lahf
sub
mov
xor
sub
push
and
inc
adc
and
inc
ret
cmp
or
add
dec
call
add
pop
js
(bad)
sbb
mov
push
xor
jb
pop
in
xor
jns
add
sub
jne
xchg
ror
lds
mov
or
nop
add
dec
mov
cld
or
pop
cmps
adc
xor
mov
inc
lods
xor
lock
and
(bad)
fwait
add
rol
jne
les
adc
jne
ret
xor
jne
jne
cwde
xor
dec
call
add
(bad)
mov
sbb
cmp
test
mov
add
mov
mov
and
scas
icebp
lock
test
rol
mov
push
fwait
jl
(bad)
retf
outs
(bad)
push
pop
jo
xchg
sbb
nop
and
js
sbb
out
(bad)
mov
sub
mov
fs
jb
or
ret
lds
ja
cmp
imul
(bad)
hlt
or
push
xor
add
loopne
pop
leave
fwait
les
and
stos
push
mov
out
mov
out
les
mov
cli
mov
push
pop
inc
inc
or
jo
inc
push
push
pop
jge
xchg
jno
add
nop
pop
movs
cmp
sbb
and
int3
outs
adc
inc
mov
push
fnstenv
in
out
push
loopne
cmp
(bad)
xor
jmp
fs
push
or
push
sti
add
daa
pop
add
mov
jo
outs
xchg
movs
push
repnz
push
xchg
retf
push
push
inc
shl
or
lea
enter
sahf
rcl
or
add
jb
pop
and
cmp
or
call
adc
leave
and
or
and
sbb
cmp
lods
rcl
ins
hlt
mov
adc
lea
push
std
call
push
(bad)
xor
sbb
call
inc
leave
or
mov
adc
sbb
fild
movzx
mov
mov
(bad)
out
mov
push
or
loopne
or
or
ret
mov
push
imul
jg
mov
xchg
icebp
jae
push
ds
inc
push
imul
imul
add
push
bound
dec
fistp
push
add
pop
push
fisttp
sti
mov
mov
add
jb
jb
pop
push
push
imul
aas
inc
jo
jbe
sub
sar
dec
out
es
sbb
jle
pop
add
mov
dec
stos
xor
xchg
lods
inc
hlt
dec
cmp
xor
and
sub
lea
sbb
rol
inc
clc
mov
mov
lock
cmp
xor
cwde
addr16
mov
test
cmp
jl
lods
scas
pusha
cmp
and
xchg
push
sbb
push
bound
lock
xchg
lods
loopne
or
aam
aam
pop
or
lock
mov
loopne
or
mov
sub
adc
lea
sbb
adc
es
mov
xor
imul
cli
imul
mov
dec
inc
clc
push
sbb
mov
in
(bad)
push
outs
rol
inc
add
dec
jne
hlt
sbb
imul
in
ficom
shl
pusha
ret
(bad)
jmp
jb
jne
or
mov
lods
ins
ret
adc
call
cmp
outs
popf
and
rol
rcl
mov
movs
mov
mov
inc
add
mov
imul
stos
ror
and
cmp
gs
mov
jmp
adc
cmp
addr16
les
mov
add
pop
jp
mov
sub
inc
add
lock
sbb
inc
mov
pop
sbb
sbb
cmps
cld
add
jae
rol
jmp
push
add
adc
or
ds
or
adc
cmp
add
rcl
or
pop
xor
mov
cmps
push
or
cmp
push
push
dec
jnp
test
maxps
add
sub
sbb
rcr
fbld
retf
(bad)
mov
fidiv
lods
or
push
sbb
(bad)
sti
fwait
nop
push
lahf
cli
pop
outs
adc
push
cmp
jns
aaa
rcr
xor
js
or
pop
bts
xor
jle
xchg
call
or
dec
cwde
fucomip
cs
xchg
adc
or
sub
sub
js
or
or
dec
push
or
std
pop
mov
(bad)
or
add
pop
sub
or
shr
sbb
xlat
and
xchg
aas
sub
js
mov
or
mov
cmp
popf
xor
popf
push
push
xchg
adc
loopne
cs
fild
jnp
mov
jp
push
call
call
outs
or
xor
fmul
bound
test
xchg
inc
mov
mov
xor
inc
cmp
xor
icebp
sub
and
sub
movs
dec
xor
xchg
and
pop
adc
cmps
lock
push
jbe
xor
adc
lahf
outs
call
mov
push
push
retf
call
or
add
or
movs
adc
hlt
mov
aaa
dec
out
pop
push
push
or
mov
sbb
sub
xchg
pop
cmp
xchg
cs
push
push
movs
(bad)
pop
adc
jb
add
xor
cwde
movs
add
fsubr
pop
push
add
inc
mov
fcmovb
add
fsubr
pop
mov
jl
and
mov
add
or
or
movs
jne
popa
xchg
push
or
pushf
pushf
rcr
out
inc
js
push
push
mov
and
sub
fld
popf
icebp
lock
jo
mov
add
add
cmp
adc
inc
call
sbb
test
jb
and
add
icebp
jmp
sub
cld
inc
movs
shr
dec
loope
push
test
rol
jmp
mov
pop
pushf
dec
add
or
mov
addr16
add
or
sub
stos
adc
mov
add
mov
adc
pop
int3
push
dec
mov
nop
push
inc
mov
mov
hlt
sar
dec
sar
int3
mov
aam
daa
and
cmp
jg
push
push
sbb
push
jmp
ficomp
inc
mov
sbb
pop
add
inc
mov
into
xchg
les
call
retf
rcr
pop
mov
js
stc
sar
rol
add
or
jl
ret
cmp
daa
jo
ds
imul
pop
cs
sub
movs
movd
push
sti
lock
mov
sub
push
icebp
add
in
xlat
xor
push
sbb
xchg
icebp
retf
sub
fld
jb
push
imul
push
(bad)
add
xor
cmp
test
sub
or
mov
aas
sahf
enter
adc
or
or
sbb
adc
mov
leave
or
loope
sbb
push
(bad)
js
popa
or
and
cmp
ror
xor
jge
jnp
sub
cmp
and
fs
sbb
sar
inc
add
test
mov
adc
pushf
or
sbb
pop
popa
and
jg
xchg
test
adc
shl
xor
inc
inc
in
cmps
sbb
jl
int
adc
pop
dec
fadd
push
mov
scas
aam
aam
jne
mov
mov
inc
add
push
cmp
sbb
rol
cwde
fs
xchg
xor
popa
sbb
sbb
jmp
loop
push
fmul
push
sub
nop
pusha
dec
inc
xor
hlt
push
adc
lahf
inc
mov
mov
cmp
cmp
stos
repnz
push
sub
sub
sar
rol
clc
add
and
(bad)
das
loopne
shl
inc
mov
xor
inc
bound
(bad)
in
jmp
jbe
sbb
push
pop
sub
add
push
aad
cmp
(bad)
mov
jmp
push
and
jb
adc
and
sub
and
fstp
mov
add
aas
cmps
lock
mov
push
(bad)
jmp
iret
jne
and
or
fcomp
cmp
jae
mov
data16
xchg
mov
mov
cmc
xchg
pop
js
fs
lock
add
dec
cmp
test
add
clc
add
ins
add
add
xchg
inc
mov
imul
shr
jne
sbb
sbb
sbb
adc
cli
or
sub
sbb
or
cmps
inc
add
popf
mov
dec
or
addr16
add
retf
mov
pop
mov
dec
lds
cld
add
ja
in
jl
push
pop
data16
enter
inc
sbb
shl
je
mov
add
lock
ins
in
jnp
add
nop
out
and
sbb
pop
repnz
jne
or
mov
sub
dec
enter
push
inc
shr
ret
pop
lock
add
test
int
sbb
into
add
mov
inc
pop
mul
loope
jg
pushf
lock
fsubr
add
jmp
mov
pop
xor
jmp
data16
sub
mov
inc
cmp
push
jle
or
add
lds
add
sahf
mov
icebp
cmp
mov
inc
imul
in
mov
cmp
inc
les
push
cmp
jle
sub
retf
jl
dec
xchg
imul
inc
repnz
fst
sar
in
dec
dec
aaa
fisttp
jle
add
das
jle
pusha
adc
mov
lea
nop
and
into
loope
dec
fwait
and
jmp
add
xor
scas
mov
into
loop
xchg
shl
or
lods
test
inc
out
jle
jnp
cwde
lock
push
out
inc
adc
repnz
popw
xchg
loopne
lods
sub
dec
sbb
mov
inc
inc
and
(bad)
(bad)
sbb
dec
mov
out
sub
outs
inc
jl
test
cli
scas
mov
sti
dec
sahf
into
or
into
or
xor
adc
sbb
push
and
lea
jne
rcr
fs
and
or
rol
adc
popf
(bad)
sub
or
fild
lock
or
push
adc
ds
ins
dec
adc
add
sbb
and
test
adc
shl
sar
push
sub
add
aaa
pop
clc
cmps
cmp
adc
fbstp
push
loope
or
into
pop
pop
sbb
dec
push
(bad)
sub
jl
mov
jns
test
and
je
into
les
add
inc
sub
or
or
xchg
pop
add
adc
adc
cs
lea
popf
push
fdiv
push
icebp
cmp
inc
call
xor
inc
sbb
ficom
dec
aaa
adc
and
cmp
ss
or
push
fld
in
push
xor
or
or
and
pop
cdq
in
pop
rcr
rep
push
sub
pop
mov
adc
test
lock
inc
aas
mov
loopne
add
nop
jmp
loopne
push
addr16
adc
ins
dec
jae
in
adc
sub
xchg
adc
adc
jmp
adc
mov
aad
push
pop
imul
je
and
sbb
inc
call
popf
cdq
nop
in
(bad)
and
push
jmp
add
cmp
jl
ins
jno
inc
pusha
ror
les
test
adc
fwait
dec
jae
xor
or
add
imul
dec
or
cmp
cmp
jne
leave
add
and
in
fs
push
call
and
push
jns
push
inc
pop
jle
xchg
xchg
jns
scas
and
push
shl
mov
arpl
js
(bad)
nop
dec
or
adc
mov
sbb
js
aam
and
test
fwait
jne
push
mov
jmp
sbb
je
or
jle
sub
and
cwde
mov
bound
adc
cmp
jmp
pop
adc
pop
jmp
add
dec
je
div
scas
or
sbb
dec
push
cli
mov
or
pop
sub
sub
add
jp
je
pop
ins
mov
pusha
fcom
xchg
outs
inc
sbb
jbe
push
imul
mov
xchg
or
push
push
mov
inc
push
add
retf
dec
inc
xor
push
mov
mov
push
push
mov
test
data16
fmul
int
push
add
rol
jg
mov
(bad)
and
scas
pop
shr
mov
jns
(bad)
mov
cld
sbb
pop
push
and
fsubr
add
scas
add
fdivr
js
xor
push
pop
sub
(bad)
cmp
jl
fcomp
add
cmp
push
rcl
jb
and
push
add
in
shr
div
dec
mov
ror
inc
aad
add
push
mov
jne
pop
push
cmc
adc
and
inc
sub
(bad)
dec
cmps
push
dec
sbb
xor
and
mov
out
imul
fcom
ret
cwde
inc
call
shr
sub
daa
pop
mov
iret
inc
dec
add
stc
and
loopne
adc
in
add
xchg
out
clc
push
in
fsubr
mov
imul
add
in
daa
fs
aam
pop
nop
push
fcom
sti
(bad)
fwait
jmp
pop
shl
push
push
lea
push
daa
push
mov
and
push
fild
(bad)
lock
out
pop
lea
cmp
jne
dec
add
(bad)
retf
jmp
frstor
ror
out
imul
ror
or
call
test
je
push
mov
cli
(bad)
sbb
pop
sbb
adc
mov
scas
sub
rol
add
ret
sub
adc
and
ret
xor
retf
adc
push
xor
enter
aaa
sub
mul
fnstcw
sar
push
dec
stc
mov
imul
clc
inc
repnz
(bad)
sub
jmp
adc
xlat
push
mov
aam
jnp
mov
pop
adc
(bad)
inc
mov
int
mov
ret
or
cmps
jo
jecxz
in
add
out
icebp
in
fiadd
add
rcl
movs
aaa
pop
test
(bad)
or
pop
xchg
pcmpeqd
and
adc
add
jp
loop
pop
mov
sub
cmps
sbb
add
popf
ret
jge
aaa
sbb
aas
movsx
into
cmp
fwait
movs
mov
lods
cmps
push
dec
sub
fs
mov
adc
mov
adc
ret
bound
je
(bad)
scas
cmp
je
mov
mov
xchg
mov
call
sete
mov
sub
mov
dec
jne
daa
push
fidiv
dec
lds
adc
jns
iret
das
sbb
jne
adc
daa
cmp
mov
es
push
or
cmp
mov
mov
je
popa
sbb
pop
inc
or
aad
mov
adc
in
jne
jmp
mov
add
xor
inc
jne
mov
jmp
push
inc
or
mov
stos
or
repnz
ret
push
scas
adc
add
out
enter
adc
movs
jo
xchg
les
jo
fmul
(bad)
(bad)
out
xchg
pop
push
lea
pop
leave
gs
pop
jecxz
gs
or
lods
or
outs
mov
mov
pop
adc
js
cwde
popa
ror
pop
rol
or
sbb
push
pop
std
icebp
cmp
out
jl
mov
je
pop
rol
or
imul
and
movs
lods
les
mov
mov
mov
or
xchg
pusha
add
mov
xorps
jne
loope
fiadd
lods
in
and
cmp
shr
cmp
adc
(bad)
or
adc
mov
or
push
clc
inc
mov
rcr
xchg
bound
scas
xchg
outs
and
pop
xchg
push
sub
out
and
push
(bad)
sar
sbb
shl
xor
sub
cmp
in
(bad)
icebp
fadd
jmp
inc
je
pop
xlat
cmp
inc
(bad)
cmp
lock
push
push
sti
call
mov
out
sub
ret
jo
add
je
fwait
int3
dec
pop
add
push
or
xor
dec
mov
es
xchg
adc
loopne
retf
dec
sbb
ret
fiadd
jbe
pusha
xor
mov
mov
pop
fbld
ret
xor
xchg
pop
cmps
and
loopne
fs
jae
movs
push
sbb
mov
xor
in
add
lods
movs
imul
gs
sbb
dec
(bad)
sahf
and
inc
xchg
shl
repnz
and
and
sbb
pop
hlt
enter
gs
in
xor
pop
sbb
cmp
fsubrp
mov
or
cmp
test
outs
mov
cmp
(bad)
lea
mov
mov
xchg
adc
je
cmp
adc
jne
cmp
ja
jge
pop
shr
shr
cli
jo
enter
not
das
push
and
pop
push
and
mov
sbb
(bad)
daa
sahf
and
adc
imul
inc
stc
sub
inc
pop
stc
or
fisttp
pop
jmp
adc
and
movs
pop
mov
fs
rcr
sub
rcl
ins
push
sbb
sbb
in
jb
fmul
dec
out
lds
cmp
xchg
or
mov
repnz
lods
lea
(bad)
cmp
jmp
sbb
and
mov
dec
add
loopne
jge
pop
or
je
bnd
push
ds
xchg
shr
mov
in
sbb
shr
inc
aas
or
leave
mov
push
mov
add
add
cdq
pop
adc
out
pop
jmp
jbe
mov
or
test
stc
sahf
pop
and
jbe
outs
add
mov
inc
xor
sbb
fisubr
iret
jg
mov
add
dec
loopne
adc
mov
sbb
ret
sub
add
fs
cmps
mov
adc
push
leave
in
or
gs
pop
add
outs
mov
shl
shr
or
adc
xchg
shr
ds
cwde
add
xchg
jmp
sub
push
inc
push
rcr
mov
jo
fcom
cmp
inc
fidiv
jmp
and
cmp
jne
add
push
stos
(bad)
mov
push
push
fldcw
sub
out
retf
cmp
mov
les
jne
adc
cmp
jne
imul
sub
ret
push
add
jb
pop
ror
out
loope
or
in
mov
pop
mov
push
aas
popa
loope
in
add
cmp
or
jge
rcl
aam
inc
pusha
loope
jecxz
mov
lods
icebp
dec
and
add
(bad)
shl
or
mov
add
push
xor
or
into
push
sti
inc
add
mov
div
pop
or
mov
push
add
shl
cdq
stos
dec
add
push
loopne
cmp
add
dec
mov
(bad)
add
or
fdiv
cmp
jecxz
inc
adc
xor
cld
rol
or
cmps
data16
sahf
or
jle
mov
cmp
inc
in
jmp
pop
imul
push
add
ja
sub
or
sub
(bad)
dec
add
ja
cwde
push
or
loopne
push
cs
push
out
cmp
or
add
push
cmps
or
sbb
push
(bad)
pop
les
cwde
hlt
push
adc
shl
es
out
dec
inc
sub
add
mov
adc
stc
aad
dec
sbb
xchg
imul
fisubr
mov
outs
sub
sub
cmps
add
jecxz
push
inc
mov
fisttp
jge
or
push
dec
pop
daa
hlt
js
sbb
fs
xor
and
les
jge
cmps
sub
clc
ss
sub
loopne
add
and
cmp
cmp
sub
aaa
and
cmps
inc
fistp
or
retf
push
syscall
jl
ffreep
pushf
add
pop
or
das
imul
lock
mov
loopne
les
cwde
and
mov
(bad)
push
pop
push
sar
(bad)
cmp
ret
popf
rcr
inc
pop
inc
push
loope
call
push
xchg
imul
and
sub
sub
and
loope
scas
sbb
jg
stos
into
add
dec
test
push
adc
jb
mov
mov
imul
dec
mov
inc
nop
cmp
jg
ja
jmp
lahf
es
stos
(bad)
rcl
call
test
mov
jne
push
int
or
adc
mov
xchg
bound
push
push
je
lea
addr16
shr
fnstcw
mov
xchg
and
jb
mov
aas
es
jmp
cmp
scas
ret
and
push
lea
lock
mov
sbb
sub
loope
mov
ds
inc
fild
daa
xchg
add
sbb
cmp
and
cmp
jmp
sub
fdivr
add
pop
ins
scas
popa
adc
aaa
inc
fs
push
mov
sub
jmp
sub
movs
xor
xchg
popf
dec
pop
sub
aad
retf
adc
test
cmps
xchg
ret
movs
ds
add
pop
sbb
xor
cmp
in
jo
push
push
cmp
jbe
inc
mov
test
daa
imul
out
jmp
ret
out
sub
mov
push
call
push
adc
stos
jmp
mov
xchg
push
sub
and
mov
add
or
or
or
mov
jno
sbb
or
or
cs
inc
adc
test
jmp
mov
mov
mov
sar
and
push
adc
cdq
es
rol
pop
jecxz
adc
xor
add
das
dec
cdq
add
adc
imul
push
jl
cli
(bad)
es
imul
(bad)
mov
push
dec
push
shl
push
mov
inc
jo
xchg
pop
nop
retf
and
xor
je
jne
pop
sbb
ror
(bad)
or
add
jb
xchg
inc
mov
push
add
retf
add
std
dec
add
mov
loopne
(bad)
push
leave
lods
or
popa
jne
fdivr
sub
cmp
ja
sub
add
outs
or
mov
cmp
push
pusha
jmp
sbb
inc
nop
out
push
mov
fsub
inc
gs
lods
xchg
xor
jbe
pop
sbb
sbb
cmps
(bad)
push
inc
loop
push
add
xchg
movs
pop
push
and
add
pop
xor
arpl
sub
mov
popf
js
mov
cmp
pusha
test
jmp
or
pop
mov
int3
adc
retf
fwait
or
js
daa
test
bound
push
pop
add
add
hlt
xchg
push
dec
daa
mov
jns
pusha
xor
xor
je
cmps
mov
call
xor
mov
movs
add
rcr
sbb
jae
pushf
mov
movs
push
sub
adc
ja
pop
dec
adc
xchg
dec
cdq
mov
mov
ds
add
icebp
movs
inc
jg
jnp
movs
and
bound
add
mov
jb
adc
in
inc
sbb
aad
ins
add
push
stos
(bad)
push
clc
or
jne
in
(bad)
jmp
pop
mov
fs
push
test
adc
test
push
leave
and
test
xlat
xor
or
xor
pop
xchg
jp
mov
aaa
mov
add
push
mov
or
mov
xchg
stc
sahf
jbe
or
add
pop
daa
push
cmp
into
pop
pop
gs
adc
inc
ret
pop
mov
arpl
sub
out
push
and
dec
cmp
fidiv
outs
push
jne
cmp
and
push
add
or
or
push
pop
pop
pop
add
nop
push
push
push
hlt
mov
rol
movs
sbb
xor
add
gs
ror
dec
mov
mov
test
test
mov
mov
add
cli
jle
ror
adc
in
ja
inc
aaa
or
nop
and
pop
xor
in
lock
test
movs
shl
add
or
addr16
dec
dec
adc
push
and
sub
inc
sahf
jmp
stc
bound
push
push
adc
xor
movs
and
mov
mov
je
push
call
cmp
rol
sbb
xchg
int
pop
inc
loop
sub
shl
rcl
push
mov
push
inc
and
fnstcw
adc
stc
mov
push
push
dec
aaa
dec
test
push
adc
outs
cs
ins
mov
test
push
in
add
push
scas
add
fsubr
gs
inc
pop
jno
dec
inc
sar
mov
out
sti
mov
iret
cs
mov
jne
jg
or
(bad)
add
in
cmp
and
mov
dec
push
mov
in
sub
add
xchg
sbb
add
(bad)
mov
or
xchg
add
lock
int
ja
lock
or
xor
add
add
out
loopne
nop
dec
inc
push
loopne
bound
aas
add
sub
jp
test
int
test
pop
inc
or
jl
movs
ret
pop
xchg
jle
inc
lods
push
cli
inc
ss
inc
add
push
mov
ja
cmp
cmp
pop
movs
jl
rcr
pop
aaa
hlt
xchg
jae
or
fcomp
lea
into
out
(bad)
(bad)
in
inc
cmp
adc
cwde
ret
push
sahf
push
sbb
ret
ret
cwde
fimul
adc
sub
int
pop
mov
div
je
popa
stos
xor
pop
jne
sub
sub
imul
je
xor
das
adc
(bad)
mov
(bad)
movs
cmps
mov
pop
int3
idiv
xchg
adc
or
test
mov
pop
cmp
mov
icebp
div
clc
cmp
pop
movs
stc
and
or
sbb
idiv
push
adc
not
pop
and
xchg
adc
or
xchg
clc
pop
jne
cmp
ror
or
jmp
mov
or
je
mov
mov
add
adc
jecxz
cmc
scas
jg
dec
add
xchg
sub
push
movs
and
fisttp
xchg
clc
push
jmp
ret
jns
stc
and
and
mov
xor
jle
bound
and
test
les
in
push
jl
inc
pop
(bad)
cmc
jle
cmp
ins
shr
ins
clc
icebp
and
mov
into
jmp
enter
xlat
pop
daa
pop
sbb
jmp
adc
dec
push
enter
add
sub
cmp
mov
sbb
mov
ja
div
lea
ss
pop
retf
daa
jmp
push
mov
push
pop
inc
sub
or
xor
dec
sahf
fstp
popf
cmc
shl
xor
cmp
test
out
(bad)
pop
clc
fisubr
sub
dec
sbb
pop
ret
in
jle
push
xchg
pop
outs
cmp
dec
lea
sbb
outs
mov
mov
or
cmps
imul
(bad)
jecxz
and
test
fwait
jl
or
jne
pop
mov
xchg
dec
test
ret
pop
xchg
adc
add
mov
mov
shl
add
lock
call
add
scas
aas
in
lock
adc
(bad)
mov
xchg
out
or
test
enter
js
or
dec
sbb
or
and
add
or
or
ret
mov
or
jmp
mov
push
or
add
xor
xchg
or
xlat
and
or
sbb
mov
clc
sub
enter
shl
push
inc
add
ficom
(bad)
popa
pusha
sbb
or
xchg
mov
fwait
cmp
cmp
inc
mov
push
nop
sub
add
add
es
or
sub
in
inc
cmp
clc
add
inc
cmps
or
in
sar
add
or
inc
retf
enter
mov
push
and
or
jo
add
mov
xor
pop
mov
test
call
ret
repnz
retf
dec
loop
jb
cmps
push
inc
and
(bad)
loopne
mov
cmps
pop
cmp
fistp
imul
push
je
and
movs
xor
adc
push
pop
mov
mov
aaa
mov
cmp
jne
call
add
jne
mov
cmp
jne
fld
(bad)
mov
xchg
gs
fist
inc
ror
movs
mov
ins
test
test
sar
mov
pushf
mov
jg
fild
xchg
inc
push
mov
sub
pop
ficomp
pop
jecxz
adc
xchg
or
inc
mov
adc
jge
cmp
add
aaa
jle
or
dec
dec
cmp
out
push
shl
dec
inc
rol
sbb
and
cli
sbb
add
out
sub
sbb
push
or
jne
sub
daa
lock
sbb
push
adc
add
xor
dec
mov
call
fwait
and
(bad)
aaa
cmp
jecxz
call
sub
inc
lods
aaa
lahf
enter
ficom
jbe
jne
(bad)
sar
(bad)
mov
adc
loope
and
or
in
je
add
enter
mov
cmp
mov
call
inc
and
jl
ds
dec
cdq
xchg
xchg
inc
adc
dec
and
and
clc
xchg
and
popf
adc
ret
push
das
inc
add
pusha
jecxz
sub
lock
mov
xor
mov
push
xor
add
dec
add
cmp
cmp
mov
mov
cmp
cmp
jl
pop
mov
ins
out
xor
push
test
js
loope
inc
add
cwde
xchg
cs
xor
and
mov
ret
jbe
push
hlt
inc
sbb
fs
(bad)
adc
fcomp
add
cmp
ret
loopne
mov
or
inc
cmps
fld
inc
mov
sub
pusha
mov
sub
pop
or
dec
outs
scas
jg
or
sbb
jg
rol
jne
lods
and
fwait
rol
out
dec
inc
adc
dec
call
push
mov
mov
sbb
pop
inc
push
lea
cmp
test
mov
mov
mov
and
xchg
pop
adc
push
inc
cmp
dec
mov
jg
loopne
ret
jl
mov
inc
popa
and
sub
sahf
clc
stos
push
movs
and
sbb
js
jne
mov
inc
sub
ja
aam
cmp
leave
jo
aam
xor
jp
mov
adc
outs
mov
mov
test
sahf
jge
mov
add
addr16
add
outs
adc
pop
ret
mov
test
jle
call
adc
and
fsubr
in
jae
add
popa
adc
jge
jb
push
and
test
cdq
cld
mov
mov
sub
mov
les
jge
sub
jmp
popf
add
xor
add
and
or
sbb
adc
stos
sbb
adc
pop
cmp
jge
push
jp
inc
push
cs
xchg
and
mov
jg
push
xchg
xchg
mov
je
xchg
jl
lea
and
call
adc
fist
jno
cmp
leave
mov
push
xor
sbb
mov
std
shl
cwde
push
adc
lock
cmp
push
add
je
push
dec
outs
pop
cmp
add
pop
pop
push
pop
push
ins
sbb
aam
(bad)
xlat
xchg
scas
jge
push
outs
ds
push
shl
inc
(bad)
xor
(bad)
push
push
push
jle
jnp
inc
ja
shr
retf
sub
and
and
cs
(bad)
in
mov
(bad)
adc
inc
scas
inc
cmp
jl
das
and
and
xchg
adc
or
retf
into
push
fstp
retf
and
adc
or
scas
jne
(bad)
mov
xor
sbb
dec
in
(bad)
out
cmp
jmp
rcr
fwait
jne
add
and
cdq
loopne
inc
test
inc
sbb
pop
ret
cdq
lds
mov
push
inc
loope
add
adc
xor
enter
int
push
or
pop
push
push
jl
sub
mov
add
dec
cmps
mov
pop
xor
ss
add
or
xor
adc
jo
scas
adc
lock
adc
dec
add
cmps
shr
cmp
pushf
sub
mov
retf
xor
mov
(bad)
sbb
push
shl
repz
test
cmp
sub
pop
xchg
fsubp
call
xchg
loopne
arpl
fs
je
mov
jl
adc
enter
nop
out
dec
mov
mov
retf
xchg
pop
adc
mov
and
stos
jge
dec
and
je
jle
shr
push
pop
pop
dec
inc
imul
cmp
dec
sar
loope
xor
cdq
push
in
mov
adc
sub
fwait
popf
dec
sbb
in
pop
fsub
pop
dec
jp
add
mov
pop
push
jae
mov
add
es
call
xor
or
fld
loopne
or
xor
mov
cmp
mov
in
js
(bad)
mov
sub
lock
pusha
jnp
sub
mov
ret
pextrw
adc
clc
and
add
cmp
clc
int3
adc
(bad)
adc
test
jg
cs
adc
inc
adc
pop
test
add
cmp
or
and
mov
das
or
mov
pop
sub
ins
or
test
ss
adc
out
inc
push
inc
fcom
dec
pop
out
add
pop
adc
or
push
push
scas
or
push
jns
pop
sub
nop
popf
aam
or
add
sub
shl
push
dec
wrmsr
dec
movs
adc
pop
xor
jb
in
cmp
bound
dec
and
xor
inc
xor
inc
adc
pop
jnp
or
jno
daa
mov
fs
cmp
cmp
inc
popw
jmp
pop
push
jno
adc
add
cli
xchg
or
mov
test
jae
mov
shl
test
sbb
xchg
push
add
mov
push
and
call
je
stos
adc
pop
aam
bound
loop
inc
add
hlt
adc
lock
add
xor
loopne
ins
mov
jge
jnp
cmp
ret
mov
inc
and
cmps
cdq
mov
push
stc
inc
pusha
stos
dec
cmp
cmp
add
or
or
add
push
dec
push
jne
pop
mov
dec
mov
or
aad
cwde
dec
sbb
jmp
adc
pop
push
push
cmp
lds
push
mov
mov
imul
push
add
inc
push
in
xchg
mov
sbb
arpl
jne
data16
fdiv
adc
pop
jne
jae
jmp
pop
dec
sbb
ror
or
outs
icebp
sbb
jl
xchg
inc
inc
pop
inc
sub
mov
mov
mov
jb
inc
sub
add
push
sar
stos
jg
dec
rol
pop
inc
cmp
jb
test
arpl
push
adc
and
inc
jne
or
or
sbb
and
inc
fs
(bad)
jo
sbb
xor
imul
push
sbb
xchg
add
inc
pop
sbb
add
pop
mov
jb
or
daa
and
and
mov
jmp
or
ret
arpl
jo
xchg
inc
sbb
or
cs
mov
pop
cmp
mov
mov
or
jno
rcl
shl
fiadd
mov
loope
(bad)
aam
test
mov
in
lock
inc
stos
push
dec
add
dec
shl
cmps
pop
repnz
xchg
push
push
dec
outs
sub
mov
add
lods
inc
mov
mov
imul
adc
add
rol
mov
je
xor
add
aam
outs
movs
jle
dec
pop
sub
sahf
push
or
(bad)
(bad)
sahf
pop
pop
sahf
test
push
pusha
movs
add
enter
adc
in
inc
xchg
movs
mov
mov
inc
adc
lods
mov
fcomp
lock
push
(bad)
sar
ror
jne
and
ds
mov
call
daa
sub
sub
or
adc
mov
xor
jp
mov
xchg
and
xchg
mov
cmp
jne
dec
and
push
daa
sbb
sub
mov
cmc
fmul
dec
enter
and
xor
aad
sub
and
lock
mov
sub
cmp
dec
mov
daa
push
and
push
mov
inc
and
jno
sti
mov
cmp
push
sbb
mov
fisubr
sbb
pop
jmp
cmp
and
and
rcr
xor
shl
ret
mov
(bad)
add
daa
cmp
push
mov
sbb
and
into
call
gs
push
sbb
ins
test
mov
pop
mov
lods
and
push
test
lds
sar
dec
adc
push
push
js
sub
leave
ja
push
mov
cmp
push
sub
sub
jbe
in
sbb
cmp
push
push
in
push
mov
sti
push
pop
jle
scas
fimul
lods
jo
xchg
dec
dec
push
xchg
add
pop
mov
fs
xchg
cmp
mov
pushw
add
mov
adc
fcom
(bad)
push
jbe
adc
mov
xor
cmps
jg
test
add
push
inc
xchg
dec
inc
dec
xchg
xchg
out
sub
call
ins
jl
(bad)
add
add
sub
dec
sbb
jge
sbb
pop
mov
rcl
es
cmp
popa
iret
loopne
es
(bad)
(bad)
loopne
push
iret
div
and
call
xlat
xchg
popa
rcr
xchg
nop
pop
add
jmp
sub
call
inc
dec
rcl
inc
adc
dec
pop
mov
out
push
imul
(bad)
sub
push
add
and
pusha
sbb
cmp
lods
xchg
adc
or
xor
sbb
mov
add
(bad)
mov
jne
add
mov
iret
pop
dec
loopne
pop
enter
clc
sbb
jmp
adc
test
mov
xor
loopne
call
cmc
(bad)
push
add
arpl
outs
out
shr
cmp
mov
mov
dec
ins
dec
mov
test
add
test
pop
xor
push
rol
xchg
lods
xchg
out
mov
push
adc
pop
sar
lea
movs
mov
sbb
xchg
push
xchg
ja
adc
das
adc
ret
scas
pop
dec
aas
cdq
and
jbe
jbe
int3
push
and
pop
sbb
je
sbb
adc
pop
jle
dec
scas
sbb
mov
cmp
(bad)
cmp
call
jl
dec
(bad)
xchg
xchg
outs
pop
jnp
jmp
mov
loopne
add
push
or
lock
sub
xor
inc
cmc
ss
mov
inc
inc
sub
mov
cli
jle
xor
mov
mov
ins
add
mov
inc
pop
dec
inc
push
movs
push
imul
fs
data16
add
js
dec
test
xor
dec
cmp
movs
mov
nop
ret
dec
push
aas
leave
mov
mov
or
jl
push
xor
push
and
cmp
dec
push
mov
rcr
mov
or
pop
iret
sti
call
pusha
retf
sub
jne
ds
add
ret
pop
add
cdq
or
add
dec
out
ss
dec
clc
cdq
(bad)
sbb
add
mov
sar
sar
cmp
and
xchg
nop
sub
lods
dec
scas
mov
or
mov
or
inc
test
mov
mov
sbb
fs
bound
add
sbb
sbb
pop
cmp
or
xor
mov
cs
add
jmp
push
test
jmp
or
outs
and
adc
fnstenv
xor
push
cmp
push
dec
inc
cld
push
jmp
or
add
dec
in
jmp
adc
ins
xchg
push
and
xor
in
mov
push
btc
and
retf
pop
mov
out
add
in
aas
push
sbb
fidiv
xchg
push
xor
aas
push
imul
jb
movs
test
pop
or
dec
mov
sbb
adc
cmp
shr
pushf
push
dec
cmp
movs
inc
mov
mov
xor
jl
(bad)
clc
movs
add
in
comiss
ds
daa
jp
es
movs
cmps
pop
mov
shl
imul
clc
test
push
test
add
scas
dec
push
add
rol
inc
(bad)
jo
add
lock
fimul
adc
dec
jmp
dec
cmps
adc
and
lock
push
ret
push
lock
mov
dec
(bad)
add
jo
pop
enter
add
mov
cmps
pop
les
adc
arpl
cmp
jle
add
enter
mov
push
test
pop
loopne
mov
(bad)
add
mov
dec
(bad)
in
cmp
inc
pop
inc
sbb
inc
push
and
cs
or
ror
popa
sbb
adc
pop
lock
push
stc
mov
aam
pushw
xor
cs
or
mov
sub
push
cmps
mov
mov
push
push
call
mov
cmp
and
mov
(bad)
and
ret
pop
cmps
and
inc
jne
std
adc
add
je
cs
add
sbb
mov
lods
push
scas
jl
ret
repz
(bad)
and
cmps
jo
sbb
xchg
call
clc
leave
shl
sar
add
lea
and
push
push
test
push
or
add
popa
pop
mov
dec
repz
cmp
jl
arpl
add
jmp
lea
lahf
add
test
(bad)
leave
(bad)
mov
add
pop
mov
add
inc
push
pop
push
or
shl
loop
cmp
cmp
ins
mov
loop
mov
sbb
push
imul
lods
xchg
sbb
inc
push
sub
jne
push
push
adc
jbe
sbb
xor
jns
mov
sub
and
mov
lock
jle
ds
xchg
sar
imul
xchg
cmp
ret
mov
test
ret
lock
mov
adc
jb
daa
mov
mov
and
add
fild
dec
inc
and
enter
call
xchg
ret
sbb
or
mov
daa
in
cmp
and
dec
inc
jo
in
sbb
mov
mov
inc
inc
data16
cmp
jbe
or
push
xor
cmp
movzx
lea
lea
jmp
push
or
test
mov
mov
ret
je
sub
daa
or
or
mov
vpmovusqd
cli
adc
rol
cli
add
dec
mov
in
or
ins
add
and
rcr
jmp
pusha
jl
push
mov
test
lds
add
push
out
dec
mov
sbb
dec
add
pop
loope
int
inc
add
add
repnz
dec
and
out
pusha
dec
enter
xor
rcr
das
push
js
dec
in
jmp
dec
pop
sub
sbb
pop
lea
sbb
mov
mov
retf
sti
jmp
cmp
pushf
push
mov
(bad)
or
jge
fdivp
sub
cmp
add
jmp
inc
enter
add
jecxz
xor
mov
dec
pop
loopne
scas
mov
cmp
xchg
shr
mov
sbb
pop
or
add
adc
pop
mov
and
mov
pop
cmp
dec
sub
(bad)
pop
pop
mov
mov
bnd
xchg
xchg
mov
xchg
out
iret
(bad)
push
cdq
jo
jmp
push
daa
cli
inc
ss
loopne
or
out
(bad)
inc
lahf
rcl
mov
mov
popf
loope
out
repz
ror
mov
(bad)
or
xor
xacquire
repnz
rcl
xor
add
scas
or
test
neg
mov
ss
aaa
adc
shl
pusha
sbb
dec
gs
repnz
xchg
clc
push
push
mov
(bad)
jle
dec
adc
mov
push
and
out
pop
jbe
mov
push
or
or
sub
push
or
adc
leave
push
adc
pusha
les
movs
les
cmps
xor
mov
or
cmps
xor
ins
jl
mov
adc
in
js
sub
test
inc
sub
add
xchg
mov
in
imul
or
in
push
or
mov
lods
test
shl
and
and
fmul
shr
sbb
mov
je
fs
leave
sbb
or
adc
xchg
inc
inc
bound
lods
sbb
jp
(bad)
fsub
lods
enter
add
mov
rcr
adc
lods
test
pushf
std
or
lock
(bad)
(bad)
and
pop
inc
pop
inc
push
jl
mov
add
mov
je
inc
daa
jmp
lahf
ret
repz
dec
jno
cli
or
lea
(bad)
setb
add
fisubr
mov
test
ror
addr16
xchg
sub
clc
je
adc
and
stos
xor
inc
(bad)
push
stos
mov
and
call
sahf
fwait
xor
mov
xor
jmp
mov
xor
pop
stos
lods
div
cmp
pop
mov
add
inc
enter
pop
jmp
sub
pushf
test
ret
sbb
push
(bad)
cmp
jbe
jne
dec
push
lds
or
xor
add
movs
je
cmp
or
jecxz
icebp
sub
or
add
and
xchg
jmp
cmp
sahf
jmp
push
add
ret
test
sub
mov
idiv
inc
mov
inc
ret
dec
int3
lock
call
mov
cmp
inc
loopne
ins
nop
jp
pop
jne
(bad)
mov
fbld
xor
or
popa
sub
rep
mov
shl
mov
xchg
dec
or
and
adc
in
movs
add
cmp
out
or
and
xchg
mov
cmc
bound
aam
and
xchg
or
lds
xchg
sub
mov
ret
push
and
clc
push
jg
cmp
int3
fnsave
inc
loop
sub
or
call
or
xlat
push
mov
lahf
and
xor
cmps
xor
iret
in
test
scas
in
mov
cmp
xor
(bad)
sub
push
push
xor
jae
loopne
or
mov
inc
adc
cwde
dec
xchg
xchg
in
idiv
mov
jmp
push
sbb
scas
and
sbb
dec
add
jmp
sbb
ja
cmp
movs
add
push
movs
mov
xor
and
or
sbb
loopne
sub
jnp
push
(bad)
imul
js
mov
sub
push
push
jle
xchg
js
data16
out
sub
mov
xor
stos
mov
push
aam
imul
jne
pop
add
aam
adc
dec
cmp
sbb
rcr
push
test
fldcw
jne
sbb
imul
rcr
push
and
push
jnp
pop
dec
dec
clc
dec
sbb
or
shr
add
mov
iret
cmp
jo
add
jno
pusha
cmp
loope
and
add
xchg
push
sub
mov
xor
pusha
stos
ret
mov
rol
sar
clc
adc
bound
vmwrite
adc
push
or
jbe
add
test
cmc
cmps
arpl
mov
jo
xor
ja
push
push
ficomp
dec
call
dec
je
or
jo
adc
pushf
cld
adc
cmp
mov
cmp
data16
loop
das
cmp
arpl
out
adc
push
es
ins
(bad)
test
mov
xor
pop
lods
sub
in
push
int
loopne
sub
ja
sub
push
dec
sub
or
data16
add
adc
or
test
ds
sar
inc
mov
pop
jle
add
outs
and
push
cmp
jge
out
jne
sbb
enter
mov
cmp
enter
add
and
ficomp
adc
lock
mov
xchg
rol
inc
call
imul
or
out
or
adc
adc
xor
repz
or
cmp
jl
xchg
arpl
inc
xor
mov
pusha
aad
mov
dec
inc
in
out
dec
cmp
adc
dec
into
cs
dec
xor
jnp
add
mov
repnz
scas
inc
sub
daa
sub
int3
mov
mov
dec
cmp
lock
into
movs
outs
adc
bound
sbb
fnsave
mov
lea
in
sub
dec
jne
inc
xchg
inc
push
ror
call
sub
aaa
mov
cld
lock
push
push
mov
mov
sub
jns
int3
add
lahf
dec
into
sub
fisttp
adc
adc
lea
mov
add
mov
lods
and
test
pushf
fdiv
(bad)
les
push
mov
push
add
hlt
(bad)
pusha
mov
push
jecxz
das
mov
xchg
jo
cs
jo
push
push
ja
adc
scas
mov
add
adc
adc
push
jmp
hlt
imul
cmps
mov
push
mov
inc
les
in
out
mov
loopne
fsubr
lods
mov
mov
xchg
cmps
in
sbb
push
and
inc
inc
push
adc
ret
inc
neg
aas
adc
push
out
pusha
int
push
mov
mov
pop
bound
xchg
and
cmp
pop
mov
xor
pop
xchg
pusha
xor
cmc
pop
inc
cmp
jo
push
ja
clc
ror
inc
xchg
sbb
and
jae
or
cmp
dec
in
adc
sub
les
cmc
loope
add
add
xor
mov
or
sbb
inc
clc
cmp
cmps
psubsb
sub
outs
loop
cwde
fisttp
sub
cmp
push
xchg
xchg
push
(bad)
xchg
cmps
pop
pop
dec
test
inc
xchg
mov
push
sbb
push
lock
or
or
cld
push
ret
inc
cmp
adc
(bad)
sub
mov
mov
sub
jae
push
test
or
add
popa
ror
and
sub
sbb
out
pop
ins
mov
sub
sub
push
push
mov
inc
cmp
sub
idiv
push
sub
retf
push
pop
add
mov
push
iret
cmp
mov
imul
xchg
xor
push
gs
mov
pop
loopne
rcl
pop
xor
add
add
sub
push
sub
sbb
lods
movs
or
dec
loopne
(bad)
fmul
mov
sub
int3
push
aam
jl
and
push
call
repz
dec
sbb
stos
hlt
cmp
mov
adc
and
add
dec
in
cmp
dec
inc
push
cli
pop
pusha
push
cmp
jge
push
ss
clc
cli
in
inc
xor
xchg
addr16
(bad)
cld
ds
sub
push
push
pusha
and
cmps
mov
mov
pop
mov
out
mov
xchg
daa
and
pop
lods
sub
mov
sbb
jmp
adc
pop
push
jne
xor
dec
shl
(bad)
test
jns
push
dec
or
xchg
mov
pop
arpl
sub
scas
cdq
mov
jge
add
adc
loopne
imul
push
loope
push
loop
bswap
add
jmp
sbb
(bad)
popf
rcr
retf
push
and
inc
sub
popf
inc
ret
mov
push
or
dec
and
cmp
das
inc
movs
jb
sbb
aad
mov
adc
jg
shl
pushf
lock
add
mov
arpl
(bad)
pushf
icebp
xor
mov
dec
loop
sbb
(bad)
aad
sbb
sub
rol
sti
xchg
xchg
cs
sbb
inc
icebp
es
or
cmp
ins
cmp
mov
mov
divps
or
sbb
pusha
rol
mov
mov
jp
mov
or
xchg
pop
enter
push
sbb
dec
pop
pop
inc
xchg
ret
add
push
out
repnz
adc
add
adc
bound
add
sbb
loopne
mov
clc
pop
mov
cmp
inc
mov
push
xor
leave
adc
retf
sub
mov
adc
or
mov
xor
cmp
mov
mov
push
inc
cmp
mov
inc
leave
cmp
cmc
je
xlat
push
sub
cmp
rol
rcr
dec
or
lock
mov
ds
xlat
mov
adc
mov
add
cmp
cmps
or
ror
lods
ffree
dec
adc
add
add
adc
stc
add
inc
rol
cmp
xor
call
push
or
push
outs
push
pop
cmp
ds
cdq
adc
jmp
fst
inc
repz
dec
bound
stos
pop
xor
jmp
fisub
ds
and
mov
inc
ss
test
in
add
(bad)
xchg
fcomp
sub
in
push
retf
outs
pop
xchg
clc
mov
and
push
pop
inc
or
cwde
ret
call
repz
cmc
call
add
mov
add
jno
or
and
lea
cmp
cmp
adc
mov
mov
jle
add
or
cdq
mov
dec
js
jmp
xor
mov
shl
pusha
xchg
lods
dec
jbe
and
inc
sbb
dec
xchg
sahf
loopne
add
dec
push
stos
mov
pop
sub
scas
mov
lea
xor
push
call
stc
sub
inc
call
in
xchg
sbb
and
sub
mov
les
add
mov
pop
(bad)
repnz
sbb
in
mov
pop
ret
mov
loopne
add
inc
in
ins
imul
nop
mov
xor
mov
(bad)
imul
in
adc
cwde
dec
popf
pop
cmc
jl
jbe
and
sub
ds
jno
add
cmp
sbb
xor
add
inc
adc
push
daa
jg
stos
pop
ds
add
mov
sub
mov
jecxz
in
mov
rol
push
xchg
mov
cmp
dec
ret
ins
or
push
fucom
push
cmp
add
or
test
fisttp
xchg
add
add
and
jecxz
adc
xor
push
mov
(bad)
lock
push
ja
inc
push
imul
outs
push
push
or
adc
pop
inc
xchg
or
xchg
sbb
inc
or
dec
jb
pop
or
in
mov
push
or
cwde
nop
dec
sub
mov
mov
cmp
and
and
popa
pop
xor
add
and
cmc
test
jne
xor
stos
stos
adc
add
lods
push
cdq
cmp
add
(bad)
mov
or
mov
je
jmp
push
adc
mov
lods
in
jnp
adc
cmc
test
inc
cmp
xchg
mov
inc
js
(bad)
jnp
sbb
test
nop
add
mov
dec
jnp
adc
test
add
xor
mov
adc
sbb
jb
dec
add
imul
pop
push
jb
mul
xor
es
dec
leave
out
ds
pop
std
idiv
pop
jecxz
sbb
mov
cmps
push
pop
out
(bad)
dec
ins
aam
inc
xor
inc
outs
sbb
fist
je
sbb
xor
push
adc
adc
imul
ret
push
leave
push
dec
cmp
pusha
add
in
jno
fdivr
dec
idiv
cmp
push
scas
sbb
jnp
loop
clc
adc
or
pop
cmp
pop
pop
(bad)
push
es
stos
or
in
pop
pop
call
call
mov
cdq
sub
mov
ss
fs
imul
daa
rol
cmp
fistp
mov
test
add
xchg
daa
adc
add
js
lods
sbb
sbb
fucomp
cmp
inc
xchg
dec
adc
ret
push
xchg
adc
test
sbb
mov
ret
es
sub
out
int
xor
outs
push
push
mov
es
outs
mov
call
je
push
scas
mov
mov
dec
jge
ss
adc
cs
add
add
add
cmps
aas
dec
push
std
popa
les
inc
dec
add
jmp
jmp
lahf
inc
inc
or
mov
imul
pop
loopne
push
fld
fmul
pusha
xor
movzx
pavgb
fstp
loop
cmp
or
push
sbb
frstor
gs
fwait
or
addr16
lea
xor
pop
mov
mov
lods
inc
xor
push
push
cwde
inc
xchg
ins
pop
out
ror
mov
imul
outs
repnz
add
call
xor
mov
inc
jbe
sub
sbb
sub
push
jnp
inc
lock
or
je
adc
mov
fld
retf
cmp
add
imul
inc
cmp
sub
sub
add
inc
adc
add
daa
pop
enter
cmp
inc
inc
or
loope
in
repnz
cwde
cmc
push
mov
sub
dec
ret
add
xor
pop
loopne
mul
sbb
cmp
or
ins
jb
sbb
add
lahf
pop
aam
mov
aam
test
push
push
pop
fmul
test
call
test
and
fnstenv
adc
retf
sbb
add
call
cwde
sbb
pop
mov
ins
sbb
cmps
push
xchg
adc
mov
jae
fadd
fmul
push
sub
mov
add
test
loope
fadd
push
in
pop
cmp
(bad)
lock
inc
push
shr
shr
add
sub
popf
add
dec
pushf
adc
push
lods
push
inc
rcr
sbb
cmp
dec
add
inc
xchg
inc
cmp
lahf
pop
or
jns
cdq
fs
jmp
dec
stos
push
adc
mov
(bad)
mov
clc
mov
adc
mov
add
add
dec
and
xchg
int
adc
push
or
lahf
mul
mov
cmp
movs
sbb
call
pmuludq
test
or
push
(bad)
aam
add
adc
mov
or
push
mov
ins
and
add
(bad)
daa
daa
daa
add
add
cmp
add
push
cdq
data16
popa
or
jle
mov
cmc
cmp
jne
mov
dec
mov
adc
cmp
cmp
push
xchg
cmc
add
push
(bad)
push
and
test
inc
xor
sub
or
add
jmp
data16
movs
cmp
imul
adc
adc
mov
sahf
cmp
pusha
xchg
inc
sti
pop
mov
adc
jno
mov
add
iret
inc
call
push
pop
lods
mov
test
mov
pop
fiadd
aaa
adc
cmps
push
pop
mov
in
adc
stos
inc
test
jl
ror
mov
and
pusha
mov
lahf
jl
adc
mov
test
push
gs
sbb
test
or
add
fdivp
in
xor
adc
adc
push
in
ret
inc
sub
icebp
in
push
ficomp
in
hlt
popf
mov
pop
jb
and
push
movs
mov
popf
lahf
inc
(bad)
push
pop
lods
enter
push
fld
pop
jecxz
xor
rol
or
loope
adc
test
push
and
jl
push
mov
push
push
push
sbb
lds
lea
jno
add
in
jecxz
mov
lds
or
add
sub
in
jne
and
in
or
inc
inc
dec
jo
cdq
in
mov
movs
or
jl
and
stos
inc
sub
adc
and
mov
imul
call
xlat
dec
xchg
jno
cld
iret
pushf
sti
mov
cmps
mov
dec
xor
sub
fs
add
sbb
ins
xchg
pop
ret
and
shrd
shl
dec
mov
xchg
fild
sub
(bad)
xor
pop
and
pop
add
xchg
fmul
or
and
sub
mov
(bad)
xchg
push
das
xchg
xchg
xor
sti
sub
lock
push
mov
dec
mov
fstp
clc
add
dec
dec
lock
sbb
js
push
mov
sbb
lock
ret
popa
js
xchg
or
jmp
push
add
hlt
mov
es
mov
mov
mov
add
(bad)
fisubr
mov
mov
cmp
push
pop
fwait
add
imul
repz
call
jp
add
movs
lods
push
dec
test
mov
jbe
test
inc
mov
push
sub
jmp
loope
sub
lods
sub
jge
lods
jmp
and
mov
push
retf
jle
out
rcl
mov
and
pop
mov
cmp
ret
dec
movs
inc
sbb
mov
loopne
(bad)
les
push
dec
in
std
aas
xchg
add
mov
push
cmp
mov
pusha
jmp
cmc
ficom
hlt
sub
stos
test
pop
jge
ins
dec
pop
lock
sub
movs
mov
jns
es
xor
pop
inc
sbb
movs
xor
sbb
mov
jo
jle
inc
loopne
stc
xchg
xor
xor
xchg
sar
sar
lods
sub
add
xor
sbb
push
fcomp
add
cmp
and
lea
mov
sti
sub
mov
jae
(bad)
jge
add
mov
fadd
mov
cmp
xchg
popf
mov
push
sbb
push
pushf
bound
adc
xchg
push
lods
or
mov
and
pop
mov
in
mov
push
enter
adc
mov
add
and
add
xor
mov
add
loopne
ja
pushf
outs
add
jae
inc
cmp
mov
ja
dec
or
xlat
xchg
je
addr16
ror
mov
test
popa
sub
int3
or
jmp
adc
and
mov
push
and
imul
sbb
push
xchg
push
shl
jge
movs
push
test
shl
adc
rcr
loopne
loopne
mov
sub
sbb
inc
xchg
or
jo
cmps
ss
adc
clc
jb
ja
fidiv
inc
inc
call
retf
push
sub
pop
jbe
in
dec
call
cdq
cmps
push
js
push
idiv
and
push
call
jmp
retf
and
loope
call
jo
or
popf
or
push
pcmpgtw
sbb
add
adc
add
adc
or
and
adc
add
leave
adc
into
push
jne
shr
xchg
xor
mov
push
add
bound
mov
xchg
and
ror
push
add
push
(bad)
adc
or
dec
mov
push
into
(bad)
sub
inc
cmp
jnp
sbb
or
cmp
rcl
imul
adc
push
in
adc
lea
jge
idiv
inc
ret
fdiv
jecxz
mov
cmp
and
clc
lock
adc
jle
jle
adc
dec
adc
or
jle
xchg
clc
fcomp
dec
(bad)
xlat
mov
sar
inc
adc
xchg
pop
cmp
aam
dec
fdiv
cmp
jl
fcomp
lds
sbb
add
xor
js
sbb
push
mov
mov
test
and
mov
mov
shl
push
adc
and
std
cmp
jne
in
popa
add
add
std
sub
test
outs
dec
fld
(bad)
jmp
scas
cmp
and
xor
cld
out
dec
and
mov
dec
mov
push
dec
retf
cdq
sub
fdivr
rcl
xchg
jne
or
push
out
mov
pushf
add
cmp
outs
jle
xchg
icebp
(bad)
pop
or
test
push
lock
push
or
(bad)
cmp
shl
dec
push
enter
or
mov
adc
sbb
cld
push
add
push
cmp
push
mov
mov
sahf
adc
nop
rol
adc
dec
and
loopne
jl
cmp
jg
cmp
sbb
mov
fisubr
shr
adc
out
fld
pop
and
jle
imul
imul
rol
mov
pop
xchg
sar
ret
ret
es
lods
sti
sub
retf
cld
jle
inc
dec
jmp
push
pusha
mov
push
sbb
js
stos
js
fild
jp
adc
add
idiv
sub
(bad)
into
(bad)
mov
sub
xchg
cmp
xor
push
pop
hlt
sbb
(bad)
scas
adc
jmp
pop
add
jo
lock
fdiv
ins
mov
int
iret
and
cmps
pop
ret
aas
add
adc
mov
mov
mov
mov
fcos
in
mov
adc
dec
mov
or
jecxz
mov
adc
mov
or
inc
leave
xchg
push
pop
jno
add
ds
dec
push
ss
sub
lock
stos
jl
or
aas
or
fcom
inc
sub
inc
dec
pop
loope
bts
popa
lock
mov
sbb
pop
xor
add
or
popaw
int
pop
pop
or
dec
cli
mov
les
lock
ja
sub
and
jno
sub
jo
mov
cmp
jb
(bad)
push
jno
fwait
xchg
(bad)
popa
mov
mov
add
and
frstor
fcmovbe
xor
into
mov
xchg
xor
repz
sbb
lahf
(bad)
adc
xor
lea
fcmovnu
mov
mov
xor
mov
ja
fdivr
push
inc
mov
aas
and
push
jne
aam
add
mov
je
add
pop
jo
(bad)
lds
repnz
das
push
inc
(bad)
lea
jmp
lea
push
call
and
or
test
inc
and
(bad)
ins
xchg
enter
mov
sbb
and
or
les
in
or
or
mov
aam
sub
loopne
or
loop
js
add
neg
dec
add
adc
push
fcomi
loopne
add
push
lods
inc
call
pop
cmps
dec
xor
shl
sbb
sbb
jb
push
push
add
test
cmp
out
lea
pop
add
jb
retf
pop
xor
ins
loopne
dec
ret
out
sbb
pop
lock
cmp
test
or
push
aam
repnz
mov
jle
xchg
test
and
mov
pop
adc
add
adc
repz
dec
ret
mov
outs
jmp
pop
clc
nop
shl
push
hlt
jg
mov
or
xchg
clc
out
ror
pop
or
sub
push
aam
jns
rol
sbb
xchg
add
in
(bad)
sub
lds
les
or
mov
inc
jb
cmp
sub
arpl
sar
add
mov
dec
or
or
xor
(bad)
adc
push
or
push
pop
push
xor
add
pcmpeqd
rol
fwait
push
adc
mov
rcl
ins
jg
xlat
mov
or
adc
mov
adc
mov
pop
add
xchg
mov
dec
and
mov
or
pop
add
(bad)
add
test
fsubr
dec
aam
add
jo
push
cwde
stos
inc
adc
adc
push
jo
add
add
mov
push
es
outs
in
cmp
and
xor
mov
mov
mov
loop
in
call
xchg
pop
sub
test
cmps
or
push
inc
mov
inc
pop
push
icebp
mov
call
adc
test
pushf
lods
add
retf
mov
mov
(bad)
je
push
les
inc
mov
xchg
(bad)
and
xor
nop
pop
rcl
pop
mov
push
(bad)
iret
dec
mov
dec
imul
leave
test
daa
or
add
out
cmp
push
sbb
cs
rcl
mul
in
push
push
push
push
ins
test
sbb
scas
sti
adc
adc
push
add
mov
add
and
or
popa
sbb
(bad)
mov
jmp
sbb
mov
and
adc
xor
int
sbb
lea
js
push
inc
jns
mov
scas
ret
les
add
test
pop
add
or
add
dec
mov
pop
sbb
add
or
inc
add
ret
add
aaa
sub
sub
or
lock
stos
add
push
xchg
clc
adc
push
and
xor
xor
inc
adc
pop
enter
sub
xchg
test
adc
xlat
loopne
(bad)
and
add
inc
sbb
add
dec
xchg
jle
pop
jecxz
dec
mov
ins
and
sub
ret
jno
mov
std
pusha
cmp
jbe
xchg
fnsave
add
mov
imul
cmp
shr
add
mov
mov
sbb
push
and
dec
push
pop
push
push
xor
fiadd
test
add
and
sbb
xchg
daa
jmp
cmp
mov
sub
sbb
das
adc
ret
cmp
sbb
xchg
ret
pop
xor
or
(bad)
cmovp
xor
mov
js
cmc
pop
jb
xchg
leave
push
jl
data16
jl
jo
add
inc
push
sbb
push
jecxz
pop
dec
pop
sbb
(bad)
retf
or
loop
pop
das
cmp
and
ret
cdq
dec
pop
sub
rcl
sub
mov
sbb
add
stos
sar
neg
fdivr
adc
mov
and
jae
xchg
hlt
ins
mov
syscall
sbb
outs
push
shl
mov
cmp
add
test
test
into
add
dec
ret
jnp
cmp
push
xor
sub
ins
aas
sub
push
push
jns
in
xor
dec
pop
sub
or
mov
sbb
sub
mov
and
push
add
jne
enter
push
ret
lahf
out
loope
in
mov
jg
and
dec
aad
shl
pop
lock
lahf
hlt
call
and
test
mov
sbb
jne
retf
and
cmp
arpl
retf
add
add
sti
(bad)
push
data16
add
addr16
lds
push
cli
add
call
add
pop
push
dec
add
jae
jmp
mov
rcl
and
ret
mov
mov
and
inc
sbb
xchg
loope
push
mov
or
push
out
or
pop
add
iret
retf
loopne
in
mov
push
test
mov
sbb
enter
cwde
jb
push
dec
xchg
loope
cmp
sbb
push
mov
or
add
aas
dec
xchg
jo
ret
in
repz
add
push
jle
fadd
dec
pop
adc
sahf
jb
pop
test
and
je
jo
and
rol
cmp
sbb
fisub
and
sbb
add
and
out
pop
in
(bad)
sbb
inc
jl
mov
jo
int
sub
pop
jg
xchg
push
and
xor
shl
cmps
and
push
or
and
mov
clc
jbe
test
adc
adc
(bad)
and
add
add
in
add
add
mov
loop
add
sub
push
lock
push
or
inc
call
pop
cs
ss
out
inc
jb
fidivr
or
sub
pop
push
push
mov
pop
push
push
add
or
or
pushf
xor
cmp
cs
xchg
sbb
iret
ds
mov
clc
cmp
pop
sub
inc
call
in
ja
cwde
das
and
movs
push
push
std
cmp
ja
cmp
(bad)
rcr
fucom
repnz
jle
push
add
cmp
cmc
mov
add
mov
push
(bad)
jmp
fs
mov
imul
inc
call
movs
jmp
gs
add
mov
cmp
sbb
lea
lea
push
cwde
(bad)
mov
pop
dec
js
mov
outs
xor
rcr
jne
rep
pop
adc
call
xor
les
out
pusha
mov
fild
dec
or
mov
dec
aam
cwde
inc
ins
pusha
mov
add
out
test
mov
xor
pop
movs
lea
(bad)
inc
sbb
or
paddusw
pop
dec
test
test
add
repz
sub
cs
les
push
or
(bad)
jbe
cmp
mov
inc
dec
cli
adc
push
cs
cs
or
add
push
je
int3
push
shl
ror
jmp
add
dec
ins
and
adc
fnstcw
stos
and
pop
pop
icebp
xor
js
jmp
pop
jg
popa
aas
add
add
bound
mov
xor
test
inc
or
or
mov
inc
jmp
push
jne
and
cmps
sub
mov
cli
add
inc
add
sub
inc
and
or
sbb
test
adc
shl
cmc
push
mov
or
push
sahf
pop
jo
mov
pusha
popf
push
cmp
add
inc
mov
or
hlt
push
popa
ins
ret
ins
mov
jne
mov
or
xchg
add
fisttp
jp
jecxz
sbb
in
setne
addr16
xchg
xor
mov
in
mov
mov
jb
cmp
stos
sbb
das
mov
ror
clc
push
inc
mov
or
cmp
dec
dec
mov
mov
xchg
push
(bad)
mov
push
pop
add
popa
nop
sbb
lods
push
push
xchg
retf
sbb
mov
out
mov
mov
rcr
cld
add
pop
int3
add
or
jmp
icebp
shr
dec
aas
je
imul
sub
jmp
fdiv
outs
adc
(bad)
xchg
mov
mov
(bad)
cld
jmp
push
sahf
sbb
mov
adc
jo
cmp
or
test
xor
sub
shr
mov
xor
pusha
test
movs
mov
std
bound
outs
xor
sub
les
push
je
push
fcomp
add
dec
ins
and
pop
imul
push
mov
int3
inc
lock
call
cmp
jl
mov
add
sub
mov
sub
mov
or
mov
pop
and
fstp
inc
cmp
sbb
mov
sbb
mov
push
pusha
jns
scas
and
xchg
and
(bad)
add
dec
inc
scas
or
mov
mov
mov
mov
inc
clc
outs
and
jecxz
lods
in
push
push
push
loope
mov
mov
inc
jae
push
ficom
xor
sub
jno
sbb
sub
mov
xor
jne
out
add
dec
pop
push
push
cmp
es
into
xchg
stos
cmp
dec
outs
or
sub
cmp
dec
dec
xor
adc
xor
adc
sbb
adc
sub
adc
in
mov
dec
outs
and
sbb
and
xchg
shl
test
mov
and
inc
or
movs
iret
out
sbb
(bad)
cmp
mov
out
add
xor
mov
sbb
jg
inc
je
sbb
mov
add
pop
and
movs
cmps
outs
or
mov
inc
cdq
cmps
add
test
rcl
imul
retf
or
adc
and
mov
or
call
adc
rcl
pop
sar
push
int3
shl
lock
cli
inc
ds
pop
lds
sbb
in
pusha
add
std
div
mov
push
outs
dec
sbb
xor
push
dec
lock
inc
inc
add
lock
sbb
jl
add
jmp
cmp
repz
ret
push
int3
dec
fstp
jne
test
in
sbb
pusha
jg
cmp
lods
push
sbb
lea
or
movs
cld
mov
inc
imul
call
dec
jecxz
pop
inc
add
pop
inc
or
mov
push
js
test
sbb
ja
xchg
inc
lock
or
loop
(bad)
repz
call
adc
or
jecxz
fmul
sbb
fiadd
cdq
test
pop
nop
inc
sbb
lds
pop
or
sub
clc
inc
pop
sub
jecxz
(bad)
mov
push
adc
iret
call
ret
adc
pop
inc
jmp
les
or
xlat
sub
sub
mov
and
push
scas
sbb
neg
push
clc
push
jne
cmp
pop
cmp
rol
or
imul
fadd
in
or
fisttp
je
sbb
mov
rcl
jmp
xlat
mov
loopne
call
jl
mov
adc
ret
mov
loopne
xchg
jae
fcomp
js
leave
shl
addr16
dec
jno
jle
sub
pop
ds
cwde
sbb
dec
add
jmp
popa
xor
lea
xchg
jecxz
add
ret
jmp
call
jmp
push
sub
sub
jmp
pop
mov
mov
adc
adc
and
and
pop
pop
mov
sbb
fdivp
pop
(bad)
lods
call
cmps
sbb
or
dec
add
imul
inc
pop
mov
les
and
lea
xchg
sbb
in
jg
inc
cmp
lea
js
loop
cmovae
out
ret
ins
jb
scas
sub
push
mov
jmp
retf
stos
lea
in
pop
(bad)
jne
push
call
imul
out
cdq
sub
mov
add
cld
sbb
clc
push
cmps
xor
ret
fisubr
mov
push
shr
adc
adc
mov
add
or
jl
jns
xor
push
neg
pop
pop
sbb
fxch
(bad)
ret
sti
test
sar
enter
push
add
mov
push
pop
mov
xor
add
js
ret
mov
add
call
lea
stos
repnz
retf
dec
pop
clc
jo
xor
or
mov
add
fstp
xor
(bad)
mov
mov
enter
jns
retf
cld
cld
cld
cld
add
loopne
and
inc
mov
mov
call
inc
inc
js
lock
mov
sub
test
or
pop
and
test
push
lea
push
inc
sub
jne
and
jmp
daa
sbb
daa
inc
out
aad
sbb
sbb
or
clc
not
push
inc
or
sbb
push
ret
and
mov
fsubr
dec
add
or
imul
call
or
sub
mov
push
mov
mov
add
mov
jmp
arpl
push
jmp
not
out
add
and
sub
mov
add
mov
js
cwde
adc
cmp
jb
les
mov
adc
pop
movs
mov
mov
pop
mov
(bad)
push
xchg
inc
mov
pushf
mov
jne
mov
loopne
adc
stos
cmp
iret
push
leave
icebp
loopne
rol
sbb
and
adc
xchg
pop
mov
outs
imul
or
dec
arpl
sub
mov
ss
jmp
repnz
in
cdq
clc
push
cmp
push
loop
test
xor
sub
xor
cmp
jge
lea
ss
push
mov
dec
and
push
dec
pop
and
(bad)
adc
and
xchg
jns
push
or
(bad)
cmp
dec
gs
adc
test
sbb
cmp
push
dec
inc
pop
and
cmp
or
adc
and
sbb
test
inc
adc
lea
dec
mov
loop
ds
inc
push
outs
test
push
aas
rol
outs
dec
jmp
push
pusha
in
fisubr
imul
sti
ins
or
test
ins
cli
and
movs
test
repnz
dec
pop
out
inc
xor
cmp
inc
mov
push
dec
adc
cli
jns
dec
add
dec
lock
ror
push
add
and
pop
or
fcomp
fs
dec
fcom
retf
ds
loop
push
xor
mov
cmp
es
push
rcl
jecxz
fadd
enter
xchg
cmp
pop
rol
div
sbb
and
pop
jmp
sbb
add
sbb
push
jge
popa
pop
jbe
jne
pop
outs
add
(bad)
dec
(bad)
call
jle
push
in
mov
mov
ds
pop
dec
push
mov
sbb
test
scas
(bad)
dec
sub
and
and
jmp
(bad)
jl
pop
sbb
or
out
stc
push
es
xlat
jnp
sbb
int3
test
pop
inc
push
cld
mov
mov
cld
dec
push
push
adc
inc
neg
aam
ret
(bad)
iret
pop
add
jle
xor
icebp
out
(bad)
(bad)
mov
je
xor
inc
test
sti
pop
jo
pop
mov
adc
and
mov
and
mov
xchg
shr
push
dec
add
in
movs
dec
sar
or
inc
dec
dec
jl
sub
icebp
or
and
sbb
imul
loopne
push
mov
xchg
pusha
push
retf
jbe
push
sub
push
and
loope
cwde
xchg
add
xor
add
js
rol
(bad)
mov
xor
cmps
test
xchg
sub
inc
dec
and
dec
inc
push
jb
movs
imul
and
pop
cs
pusha
sbb
add
xchg
push
jp
add
or
ret
mov
and
dec
cmp
pop
jle
dec
jmp
jbe
fbstp
xor
ja
popa
ret
and
pop
inc
jmp
xrelease
mov
sti
enter
stos
lods
push
mov
inc
xchg
inc
xchg
mov
push
dec
cld
cmc
fild
dec
ins
inc
scas
push
rol
sbb
sub
xor
jle
push
outs
das
popa
das
enter
or
cmp
xchg
inc
cs
dec
cmp
adc
push
(bad)
xor
push
imul
cvttps2pi
add
push
or
mov
mov
das
add
enter
pop
dec
pop
fs
pusha
and
lods
jbe
lds
ret
add
icebp
or
or
fdiv
fisub
icebp
or
(bad)
push
mov
push
or
xor
xchg
fsubr
cmp
push
ret
add
dec
test
imul
addr16
mov
cmp
and
jne
inc
mov
or
rcl
mov
and
inc
fucom
xor
call
pop
movs
aad
pop
dec
nop
rcr
inc
inc
push
test
rol
test
add
xchg
adc
cmps
jns
scas
jno
mov
je
lock
add
xchg
and
xchg
aad
or
mov
xchg
sub
pusha
inc
adc
cmc
sub
inc
ds
xor
pop
bound
popw
scas
inc
add
push
push
cmps
pop
jns
or
imul
add
adc
nop
cwde
sub
mov
fbstp
mov
adc
jo
aam
sub
inc
inc
pop
test
xchg
and
mov
mov
loopne
push
popa
shl
pop
mov
inc
fsubr
leave
ret
inc
mov
and
repnz
sbb
xor
enter
test
rcl
int3
inc
add
jo
jno
add
(bad)
adc
lock
xchg
pushf
gs
repnz
pop
sbb
loopne
adc
mov
cs
sbb
or
and
mov
sub
sahf
imul
mov
test
sar
mov
pop
jg
adc
loope
pop
jge
or
leave
lock
cmp
push
dec
call
enter
sbb
mov
jl
jge
(bad)
push
add
cmps
mov
and
pop
fsub
loopne
or
test
je
sar
inc
and
rol
int
(bad)
jmp
scas
xor
dec
pop
adc
jb
les
and
xlat
ins
jb
retf
or
pop
sbb
add
lock
add
adc
mov
and
pop
test
and
mov
js
jbe
xchg
daa
push
pop
fimul
mov
push
push
push
dec
mov
or
pushf
mov
repnz
or
sbb
pop
push
call
fs
xor
push
(bad)
sar
ret
and
inc
jne
(bad)
out
inc
cmp
add
fldenv
dec
scas
mov
arpl
or
sub
dec
adc
inc
push
pop
test
lock
dec
add
ds
test
(bad)
jmp
sub
jl
rol
arpl
push
push
mov
or
jae
(bad)
jno
mov
add
cmp
enter
xchg
outs
or
dec
add
push
(bad)
lods
in
add
(bad)
bound
and
inc
enter
xor
add
jle
or
push
xor
mov
rcr
cmp
je
scas
xchg
sbb
push
test
cmp
in
sbb
popa
cwde
lea
inc
inc
jmp
push
dec
mov
mov
and
adc
mov
sub
lahf
push
dec
dec
cmp
jb
cmps
not
dec
test
inc
or
pop
shr
sbb
call
mov
sub
add
or
sbb
(bad)
rol
(bad)
xchg
push
fdivrp
jmp
add
jmp
stos
add
mov
test
inc
dec
mov
push
mov
pop
sub
or
or
mov
pop
sub
pop
dec
pop
pop
imul
mov
and
popa
push
out
fcomp
mov
xor
out
sub
out
inc
add
adc
add
add
xchg
add
or
sub
or
adc
xchg
xchg
push
add
enter
or
rol
xchg
cmps
push
mov
imul
xchg
out
dec
(bad)
pop
or
adc
sub
or
mov
call
add
out
mov
outs
fstp
pop
sbb
or
pop
inc
ins
mov
in
int3
cdq
fisttp
sbb
xchg
push
fcmovb
rcl
or
push
inc
mov
daa
pop
les
mov
cmp
in
loopne
push
push
ds
xchg
sbb
call
cmp
jae
and
jno
cmp
(bad)
adc
in
inc
and
inc
xor
mov
adc
repnz
popa
je
or
das
and
sbb
popf
and
adc
outs
push
jl
lds
jmp
add
mov
sub
dec
xchg
es
pop
fadd
cdq
push
or
ins
push
inc
gs
rcl
je
call
pop
dec
adc
mov
shl
jmp
jne
mov
xchg
and
shr
pop
push
cmps
in
push
sub
push
and
mov
sub
sub
add
sbb
idiv
sub
dec
je
sub
in
addr16
dec
mov
adc
mov
mov
jle
jl
cmp
jno
xchg
ficomp
adc
and
cmp
sbb
(bad)
int3
push
ficomp
pop
mov
movs
jb
vcvttss2si
mov
add
mov
lds
xchg
imul
or
lods
dec
xor
xchg
add
shl
push
mov
push
mov
pop
test
test
sub
lods
mov
mov
mov
call
inc
sub
jp
cmp
xor
cmp
xlat
adc
aaa
xor
xor
dec
adc
std
jge
rol
nop
mov
ficom
sbb
add
xor
xor
int3
pop
push
in
or
xor
push
mov
mov
dec
imul
xor
cmp
jne
push
jmp
in
dec
test
push
cld
fild
dec
in
jnp
outs
adc
stc
xchg
ret
data16
je
js
sub
ds
inc
dec
inc
add
fmul
jge
push
and
inc
cdq
mov
and
sub
cwde
add
adc
jb
add
jge
sahf
xchg
or
add
lock
or
push
jmp
push
mov
or
lods
nop
clc
pop
pop
jmp
adc
fld
ds
pop
inc
jns
(bad)
fnstcw
jne
dec
jne
push
or
xor
jg
call
add
or
xchg
sub
push
cmps
shl
cdq
sbb
cmp
fcmovnb
pop
adc
cmp
setg
out
jno
cmp
and
cs
jae
dec
sbb
cli
jl
push
adc
jnp
test
xchg
out
out
inc
adc
mov
fdiv
ja
xchg
in
fcom
in
xchg
fbstp
dec
aas
je
mov
add
xor
arpl
das
clc
or
jbe
inc
xchg
lea
jne
std
cwde
xor
inc
inc
inc
pop
inc
and
ins
add
cmp
rol
push
pop
rol
jne
mov
dec
movs
push
jbe
fimul
imul
add
sahf
inc
inc
into
popf
out
fs
adc
enter
sbb
add
push
mov
xor
jl
jbe
fstp
je
aam
outs
push
sub
scas
or
aas
fcmovnu
add
mov
cmp
(bad)
adc
sub
lds
adc
or
mov
pop
xchg
or
repz
sub
inc
push
sub
fld
pusha
pop
jecxz
mov
adc
fcomp
mov
push
add
sbb
cmp
jae
jnp
or
add
jle
out
mov
shl
std
add
ret
jb
test
add
mov
out
loop
add
dec
xor
sub
(bad)
adc
ret
mov
(bad)
mov
inc
mov
sbb
inc
inc
sub
adc
and
and
push
call
pop
fmul
dec
std
in
cmp
std
or
pop
push
and
loope
or
scas
iret
bound
jl
popf
retf
dec
and
push
mov
add
or
add
and
cmp
push
ja
aaa
call
jmp
sub
movs
test
ss
(bad)
jg
retf
pop
dec
adc
fldpi
push
mov
push
pop
xchg
xchg
test
cmp
fs
push
push
test
jge
cmp
cmp
lods
aaa
sub
ror
mov
pop
push
mov
mov
or
cmp
add
cs
xchg
dec
xchg
imul
mov
mov
jg
cmp
add
dec
and
adc
sub
sub
adc
shl
push
mov
test
cmp
outs
rcr
out
shr
ret
xor
mov
test
mov
dec
jmp
push
ja
mov
pop
cmp
lock
sbb
and
pop
call
push
xchg
sbb
loopne
loop
mov
pop
dec
push
cmp
and
jbe
or
push
cmp
inc
dec
(bad)
rol
(bad)
clc
pop
and
xor
add
stos
sbb
pop
push
push
push
test
je
dec
dec
addr16
cwde
and
rcl
sbb
mov
rcr
fwait
popa
add
inc
(bad)
fadd
pop
mov
xchg
pop
jo
inc
xor
or
and
mov
ss
jge
gs
xor
push
xor
ja
iret
adc
loopne
mov
and
and
and
jnp
pop
add
pop
xor
(bad)
adc
sbb
aad
push
add
ja
jle
cmp
mov
shl
sbb
pop
xlat
mov
push
push
inc
mov
jne
aam
push
arpl
dec
push
push
clc
sub
pop
ja
add
sub
lock
stos
aas
pop
int
or
sbb
add
push
sbb
cmp
or
dec
mov
test
fcomp
mov
or
lods
push
dec
and
cmp
inc
rcl
push
mov
inc
cmp
push
pop
je
add
mov
enter
loopne
and
ret
test
cmp
imul
push
(bad)
mov
leave
pop
stos
jae
mov
into
shl
rcl
rol
xor
repz
add
mov
pop
dec
or
xor
xor
or
ins
jmp
sbb
shr
jp
cwde
sbb
xor
adc
pop
xchg
cmp
push
push
add
mov
rcr
inc
xchg
xor
ins
mov
stc
gs
js
cld
pushf
sub
je
xchg
add
jle
sbb
sbb
cmp
in
xchg
cmp
sbb
push
inc
jecxz
int
sbb
pop
popa
jecxz
(bad)
(bad)
call
popf
aaa
adc
inc
cmp
add
or
fsubr
mov
ds
mov
cmp
push
arpl
or
outs
sbb
imul
in
(bad)
inc
or
dec
fdiv
aaa
pop
je
cdq
ret
push
ins
adc
ret
push
sub
sar
and
adc
sbb
sahf
lahf
cmp
jne
adc
stos
mov
shl
dec
or
pushf
mov
xor
sbb
sub
test
stc
and
push
test
sbb
shr
push
(bad)
(bad)
xchg
inc
cmp
jnp
fisubr
push
in
jns
push
adc
push
add
stos
cmp
in
and
lods
adc
cmp
or
cwde
pop
outs
imul
ins
and
(bad)
xor
add
dec
das
mov
or
lods
dec
rcr
dec
xor
xchg
or
into
rcr
xchg
popf
ins
cmp
push
add
scas
sub
lods
mov
push
mov
add
add
push
or
nop
inc
pop
sub
pop
test
or
adc
(bad)
jnp
pop
cmp
fild
mov
push
push
shr
adc
jle
push
xor
add
push
ret
or
inc
push
ins
sbb
mov
out
push
sub
push
push
cdq
int3
lea
add
nop
ja
push
push
push
push
mov
mov
adc
lock
(bad)
mov
out
pop
inc
push
leave
push
jmp
or
data16
add
cmp
adc
test
rol
pusha
loopne
and
pop
jp
mov
mov
call
xor
and
inc
jnp
test
jmp
rcr
imul
mov
cmp
adc
sbb
push
mov
rcl
out
inc
shrd
ds
(bad)
xchg
loopne
dec
es
inc
xchg
leave
les
mov
movs
add
loope
clc
pop
mov
xor
shl
cmp
push
jo
and
push
or
cmp
push
or
dec
shl
or
sub
cmp
or
push
add
cdq
push
mov
enter
push
sbb
cli
test
ins
lock
mov
pusha
push
mov
cdq
mov
add
scas
mov
lods
mov
les
sub
shl
push
add
test
sub
jmp
sbb
aad
in
push
dec
adc
rcr
test
add
ss
imul
dec
jl
retf
cmp
sbb
pop
imul
stos
sti
loope
jp
nop
push
or
and
retf
into
inc
jbe
inc
pushf
je
dec
out
cmp
add
(bad)
cmp
jne
mov
test
retf
mov
push
and
inc
add
ret
or
mov
fsub
cmp
call
add
fcom
cmps
jp
dec
add
jl
jne
mov
movsx
or
shl
mov
sti
pushf
pop
xor
and
and
je
xchg
int3
push
jmp
mov
shr
mov
inc
loopne
adc
pop
outs
add
mov
mov
jmp
test
or
inc
icebp
mov
in
mov
stos
sub
call
dec
pop
fsub
dec
cmc
push
add
lods
dec
pop
add
xor
push
inc
inc
call
fwait
loope
inc
sub
xor
lahf
and
mov
aaa
enter
dec
lahf
lea
clc
xor
lea
popa
test
jge
add
ret
(bad)
sahf
mov
and
out
inc
inc
adc
inc
adc
push
data16
ins
or
pushw
sbb
dec
xor
mov
in
inc
cmova
imul
xor
popa
sbb
cmp
inc
lods
mov
mov
int3
cmp
and
mov
or
icebp
ror
loopne
orps
jnp
mov
push
(bad)
push
aaa
push
ret
ins
(bad)
bound
adc
add
jge
push
jae
inc
call
dec
popa
leave
in
test
cmc
inc
jmp
lahf
and
and
inc
adc
xchg
scas
and
fild
fwait
adc
push
jno
mov
sti
imul
div
int
imul
add
stos
jno
dec
inc
loopne
test
cmp
jge
test
xor
in
pushf
push
or
enter
cli
lods
mov
inc
(bad)
call
mov
ds
dec
repnz
dec
(bad)
lock
sub
inc
leave
fadd
cmp
or
add
add
jg
pusha
push
jg
add
das
test
xor
lods
cmp
xor
ret
sahf
ja
push
pop
call
sar
pop
test
pusha
pop
and
or
sub
push
(bad)
mov
lock
xchg
clc
pop
mov
xor
adc
arpl
push
mov
inc
push
adc
mov
(bad)
cmp
cmp
and
imul
push
inc
test
add
or
xchg
mov
inc
sbb
test
pop
rcl
idiv
adc
mov
push
je
fs
ficom
push
pusha
mov
sub
dec
sbb
mov
ret
mov
adc
dec
cld
sbb
mov
mov
loope
sbb
enter
in
jne
cmp
sub
push
mov
out
pushf
rol
push
lods
jo
mov
pop
inc
es
fldenv
mov
inc
test
pop
mov
jl
sub
cmp
and
or
and
ins
push
and
test
mov
mov
cmp
add
push
fs
sti
(bad)
fldenv
in
in
outs
pop
ins
sbb
sub
mov
clc
cdq
pop
ds
cmp
or
add
adc
pop
inc
movs
pop
xor
fs
ins
lods
loope
xchg
jne
xor
(bad)
mov
mov
inc
stos
jge
xchg
test
pop
mov
xor
dec
mov
dec
jo
jo
nop
and
dec
or
cmp
cmps
jge
mov
lea
int3
push
push
out
loopne
and
adc
mov
sub
jmp
sub
jne
dec
push
pop
jmp
mov
cmp
jmp
bound
fstp
or
das
push
mov
enter
lds
add
pop
xchg
pop
add
pop
add
loopne
mov
adc
cli
pop
pop
(bad)
mov
mov
or
sub
and
fs
sub
dec
dec
mov
shl
inc
(bad)
cmp
adc
loopne
mov
inc
push
xor
or
or
inc
push
fdiv
cmp
js
stos
push
mov
cmc
(bad)
cmp
mov
jl
cmp
jg
ins
sub
dec
or
cs
xor
adc
jne
or
mov
mov
js
gs
and
(bad)
pop
les
mov
add
loopne
push
mov
ret
jnp
int
dec
adc
xchg
adc
jb
loopne
xchg
shl
cwde
push
mov
xor
int
aam
dec
mov
mov
or
push
push
out
cmps
rcr
ja
fistp
loope
cmp
aas
pusha
push
add
push
mov
xchg
xor
adc
lods
adc
test
push
lods
jmp
add
mov
xchg
cmp
fcomp
jo
push
xchg
or
sbb
mov
dec
pop
jno
pop
sbb
sahf
test
xchg
or
rol
dec
adc
enter
out
and
sub
dec
jmp
mov
or
mov
or
repnz
add
xlat
cwde
xor
pop
loope
es
call
hlt
fld
sbb
jns
cwde
adc
push
inc
cmp
and
or
push
outs
add
mov
arpl
shl
jbe
xchg
and
mov
stos
inc
add
std
call
jmp
sub
shl
cmps
pop
push
int
in
shl
shr
mov
pop
clc
sub
mov
and
mov
pop
test
dec
add
shl
jmp
and
jae
mov
inc
sbb
pop
and
shl
dec
pop
push
dec
add
idiv
inc
ret
pop
sub
(bad)
inc
xor
scas
push
or
jbe
mov
sub
mov
push
in
add
sbb
jle
fld
clc
fldcw
inc
mov
mov
rol
push
rcl
add
or
jns
inc
clc
movs
aas
sbb
jbe
(bad)
jg
cli
cmp
jae
push
mov
inc
mov
inc
cmp
add
and
inc
and
jb
pop
adc
nop
retf
(bad)
shl
outs
daa
call
add
or
loopne
push
imul
mov
movs
sub
and
push
sbb
push
iret
add
dec
mov
data16
dec
mov
jbe
xchg
arpl
mov
cmp
fmul
aas
and
inc
shr
ss
dec
push
shl
jo
pop
dec
push
inc
push
and
pop
lods
out
push
inc
dec
dec
addr16
popa
push
(bad)
mov
push
retf
ret
popf
aam
or
pusha
and
pop
fbld
hlt
ret
mov
and
retf
je
(bad)
std
push
or
push
jbe
cmp
pop
stc
int3
lock
pcmpeqw
cmp
es
inc
jmp
add
pop
push
imul
xor
xor
jnp
jbe
je
mov
out
mov
push
mov
add
mov
or
call
cwde
mov
imul
je
lds
mov
push
push
int3
es
or
dec
cld
add
ret
arpl
retf
add
cmp
jp
cmp
es
aam
jmp
out
stos
pop
addr16
push
addr16
sub
push
jl
jle
mov
xchg
(bad)
popa
lea
inc
ficomp
ret
mov
and
xchg
jo
fdiv
cmp
jge
jns
mov
fcom
fs
ins
add
scas
cmp
or
and
(bad)
and
cmp
pop
dec
mov
js
cmp
aam
pop
mov
push
je
adc
cmp
sub
loopne
std
rcl
mov
es
jmp
into
xor
popa
mov
mov
jmp
or
int3
jmp
scas
pop
in
sbb
cs
je
mov
or
push
mov
or
inc
or
jne
pop
sahf
push
or
push
sbb
popa
add
test
cwde
add
jge
aas
cmp
or
or
and
aas
pop
lds
jle
sub
adc
ret
bound
adc
sbb
mov
arpl
pop
rol
cld
fild
sbb
xor
iret
in
stos
cmp
push
jne
fild
(bad)
inc
in
ins
jmp
jge
push
loope
jp
add
aam
cmps
aad
mov
xchg
cld
cdq
test
std
movs
clc
adc
and
add
or
add
sbb
ret
push
inc
push
push
popf
rcl
mov
mov
jne
mov
call
retf
ja
dec
mov
pop
ja
jne
fild
add
push
and
push
fld
sbb
sub
xor
mov
mov
repz
inc
aaa
xor
mov
mov
leave
sub
cmp
(bad)
icebp
(bad)
sbb
fnstsw
sbb
ret
pop
test
iret
sbb
not
repnz
adc
xor
and
in
cmp
inc
adc
mov
movs
lods
test
jmp
in
inc
xor
sahf
or
xor
(bad)
and
push
pop
mov
ror
add
push
cmps
ret
mov
mov
fcom
add
jp
add
mov
xor
call
push
push
sub
(bad)
(bad)
push
push
ret
cmp
test
or
add
adc
mov
adc
aam
cmp
and
or
shl
add
icebp
les
xor
xor
pop
jno
fild
ret
call
sbb
iret
out
mov
cmp
out
jmp
aad
cmp
add
push
into
sub
fbld
dec
mov
or
or
rol
mov
xchg
cmps
inc
add
cmp
js
cld
xor
inc
adc
imul
in
leave
mul
mov
pop
in
add
sbb
nop
(bad)
or
push
dec
repnz
xchg
or
rol
sub
dec
jne
movs
inc
add
rol
sbb
loop
movs
cld
jge
fcmove
sbb
sub
jl
mov
inc
jg
jae
and
mov
cmp
mov
scas
cmps
sbb
or
ins
test
in
add
(bad)
fisttp
shl
dec
cmp
inc
pushf
add
mov
push
sub
cld
add
xor
add
dec
and
jmp
test
pop
mov
popf
data16
or
adc
adc
stc
cmp
outs
js
ins
jl
cmp
push
pop
or
hlt
sub
add
jnp
ret
cmp
and
test
je
mov
jmp
not
jmp
mov
cmc
cmp
(bad)
adc
lea
sub
dec
xchg
test
or
push
jg
inc
or
(bad)
pop
xchg
ret
adc
xor
or
mov
sub
jb
loope
lea
enter
or
and
sbb
adc
inc
pop
jnp
popf
dec
sbb
add
mov
int3
mov
dec
sbb
mov
(bad)
retf
jb
ins
cli
js
push
pop
nop
fild
mov
inc
cdq
push
pusha
mov
or
or
int3
jecxz
jle
or
lods
push
mov
mov
xlat
pusha
adc
jg
std
jmp
shl
inc
and
inc
pushf
jo
pusha
sbb
add
jb
jl
iret
add
push
pushf
rcr
sub
stos
push
ins
loopne
mov
sub
ins
addr16
(bad)
fnstenv
adc
add
mov
lea
out
dec
dec
sbb
mov
adc
pop
std
push
(bad)
movs
xlat
mov
inc
or
push
fld
fmul
mul
pop
stos
sbb
adc
das
cmp
push
sub
loopne
movs
cmps
jle
pushf
inc
test
mov
inc
mov
adc
xor
pop
lods
xchg
aam
(bad)
xchg
mov
jne
pop
cmps
test
mov
inc
lods
add
mov
mov
pop
pop
jae
shl
inc
push
or
dec
dec
rcr
js
add
xor
push
inc
call
add
xrelease
and
sub
or
mov
cwde
aaa
fiadd
mov
aas
sbb
mov
pop
push
sbb
xor
ja
pop
(bad)
in
inc
mov
inc
sub
ror
add
cmp
daa
sub
and
dec
inc
inc
mov
mov
sub
jno
aam
sbb
jle
push
inc
pop
in
cli
add
cwde
clc
repz
div
ret
aam
pop
pop
adc
sbb
mov
or
sbb
xor
mov
mov
push
add
xchg
and
xchg
hlt
scas
sbb
out
xchg
cmp
loopne
sub
pop
xchg
push
icebp
out
or
pop
out
jne
outs
into
imul
dec
int3
cmp
xchg
enter
sbb
jno
sbb
mov
pop
test
mov
repz
out
loopne
xor
or
sbb
add
rcr
test
xchg
sbb
(bad)
rcl
in
(bad)
add
imul
in
jmp
mov
jo
inc
or
nop
(bad)
call
sub
mov
cld
ja
sbb
je
push
push
jge
fsubr
and
dec
jb
push
and
cmp
mov
pushf
ja
int3
imul
jno
or
xchg
mov
or
addr16
pop
add
test
test
xor
mov
push
int3
dec
and
push
mov
test
sar
pop
lds
sbb
xchg
mov
(bad)
loopne
lea
dec
pop
sub
fimul
xor
pushf
and
in
je
dec
mov
jbe
daa
lock
cmps
or
mov
push
push
lds
sub
test
sub
rol
rol
inc
dec
dec
add
mov
fsub
xchg
mov
mov
add
pop
enter
mov
nop
scas
enter
fsubr
mov
shr
add
push
add
and
mov
mov
ret
in
xchg
push
icebp
push
push
sbb
xor
jo
gs
add
clc
cmp
mov
sbb
movs
mov
xor
adc
je
pop
ss
mov
push
cmp
inc
iret
js
(bad)
loopne
cmp
mul
aaa
mov
test
cwde
cmp
mov
mov
test
stos
fstp
test
xchg
add
push
lods
js
arpl
lods
into
xor
or
xchg
dec
jmp
(bad)
sahf
add
push
test
add
cmp
cmps
rol
jno
sub
xor
jge
shl
jne
adc
mov
in
std
(bad)
xor
and
cmp
das
adc
jno
xchg
or
inc
adc
sbb
lods
cmp
hlt
je
sbb
push
test
mov
in
shr
add
clc
bound
add
imul
out
dec
pop
jmp
ror
pop
nop
(bad)
or
or
inc
xor
cmp
into
add
scas
adc
or
adc
mov
pop
rol
or
loop
push
push
mov
inc
fiadd
dec
(bad)
push
and
xor
hlt
rcl
cmp
pusha
or
ficom
push
call
ret
je
cmp
je
mov
ret
lods
lods
inc
je
leave
call
mov
add
jo
adc
xlat
mov
ds
mov
sar
xchg
add
nop
popa
push
(bad)
shr
lea
or
dec
cdq
mov
push
and
xor
push
mov
jo
mov
rol
rol
popa
mov
or
pop
adc
hlt
iret
test
or
xchg
fstp
add
push
lds
sub
fmul
mov
ret
pop
in
pop
mov
rcr
mov
ins
inc
mov
dec
je
jecxz
loop
loopne
ss
jne
sbb
sbb
xor
mov
dec
inc
sbb
and
mov
push
dec
jmp
xor
test
inc
push
lods
sbb
hlt
xor
pusha
push
sub
ror
in
scas
(bad)
mov
inc
fisttp
lahf
jb
in
int3
jnp
cmp
adc
pop
mov
push
mov
cmp
push
imul
cdq
push
add
sar
mov
(bad)
push
cmps
cmc
icebp
rcr
mov
xchg
xchg
add
inc
sub
and
cmc
and
sbb
or
pushf
shl
rcl
fmul
retf
jnp
or
mov
mov
inc
dec
movups
adc
sbb
pushf
retf
cmc
cmps
xor
pop
data16
stos
inc
mov
push
sbb
mov
rep
stos
(bad)
loopne
adc
std
pop
in
push
fimul
call
sti
sub
(bad)
je
push
adc
pop
pop
sub
cwde
add
test
(bad)
adc
loopne
push
cld
inc
add
pop
clc
mov
daa
cmp
pushf
dec
loopne
cmps
mov
push
fldenv
push
imul
enter
(bad)
fisubr
cmc
add
out
push
dec
xor
push
jbe
mov
adc
sub
popf
add
sbb
mov
and
mov
push
mov
mov
addr16
adc
pop
jmp
sub
xor
cmp
xor
adc
and
sbb
sub
aam
fs
mov
mov
sub
ins
adc
xor
adc
lock
mov
repnz
pop
dec
shr
outs
mov
xor
fs
push
sbb
jg
ss
test
in
mov
add
neg
dec
cmp
dec
loopne
sbb
rcl
loop
or
jp
stos
mov
xchg
add
in
mov
lds
xor
cld
xor
mov
ret
in
add
hlt
and
lods
clc
mov
mov
aaa
xor
aad
jmp
movs
ret
push
and
push
in
pusha
pop
add
sbb
inc
enter
mov
add
dec
rcl
iret
adc
or
adc
cwde
or
movs
adc
or
xchg
pop
push
int
loop
dec
cs
add
pop
xchg
xchg
(bad)
pop
js
inc
jne
cmp
adc
ja
ins
test
loopne
lock
jnp
sbb
push
cmp
test
fld
dec
lods
les
add
jmp
mov
shl
ficom
retf
cmp
fst
fmul
test
add
push
ret
pop
fdivr
popf
mov
lea
inc
push
push
rol
push
jne
pop
cmp
repnz
push
cmp
adc
clc
inc
inc
and
xor
cmp
push
dec
mov
mov
cmp
adc
sub
arpl
push
lods
rcr
test
aas
(bad)
or
js
fadd
fdiv
adc
aad
fsubr
mov
pop
adc
loop
inc
adc
or
jle
mov
pop
dec
sbb
mul
popf
fcom
call
mov
lods
mov
pushf
add
push
shl
mov
mov
pop
ins
inc
mov
std
fist
add
mov
rcl
in
cmc
sub
loopne
dec
dec
pop
enter
add
out
icebp
sub
movs
push
add
cmp
inc
shr
adc
xchg
shr
sbb
inc
rcr
cmps
jae
add
push
es
jge
outs
mov
push
rcl
push
or
cmp
cmp
es
push
movs
adc
ins
or
test
xchg
add
push
cmps
sar
out
arpl
push
sub
retf
arpl
shr
sub
or
je
pop
xchg
jne
dec
xor
mov
imul
mov
push
cmp
add
cdq
in
dec
int
fist
add
sbb
loopne
cmp
rcr
xlat
xchg
rcl
sti
loopne
js
leave
stc
ret
xor
xor
pusha
fstp
iret
xor
push
adc
adc
pop
mov
mov
pop
fsubr
adc
lods
xchg
ins
add
pop
add
and
push
lods
and
dec
fs
leave
cmp
xor
retf
and
xor
jle
jg
adc
and
loope
mov
rcl
sbb
js
addr16
shl
xchg
(bad)
fs
cmp
movs
add
(bad)
adc
scas
and
lds
mov
jl
fs
xchg
fdiv
pusha
push
xchg
jno
das
cmp
lock
enter
push
and
les
and
in
rol
hlt
add
sub
test
stos
mov
adc
inc
xchg
inc
mov
rol
add
push
sahf
cmp
mov
adc
mov
push
loopne
xor
pop
pop
push
jno
dec
xchg
js
test
mov
pop
pcmpeqb
pop
lock
add
adc
mov
mov
(bad)
aam
arpl
sbb
jp
data16
xchg
ja
(bad)
es
lock
sbb
inc
mov
loopne
aaa
(bad)
ret
xor
add
outs
setge
xchg
dec
es
pop
dec
add
dec
push
sbb
dec
xor
sub
cmps
cmp
jmp
cwde
add
cmp
pop
inc
fwait
adc
leave
sbb
or
and
xchg
mov
sbb
adc
sub
dec
int3
aad
inc
push
jmp
jno
data16
or
ins
mov
test
retf
cs
loopne
mov
push
pusha
mov
dec
test
fs
ss
jmp
pop
sbb
adc
pop
pop
mov
call
fisttp
mov
fnstcw
jge
mov
mov
rol
add
icebp
and
mov
ror
rcl
cdq
pop
add
lods
adc
cli
jmp
mov
push
adc
mov
xor
and
or
in
xchg
pop
pop
dec
ds
sub
cdq
test
pop
push
sub
ins
mov
retf
add
mov
push
xor
enter
in
test
enter
push
xchg
push
add
je
in
jmp
and
leave
pusha
mov
cmp
xor
and
call
mov
inc
(bad)
mov
jo
and
pop
add
movs
push
enter
std
xor
xor
bound
push
js
aad
xor
sbb
dec
add
in
repnz
xor
(bad)
in
jns
jl
stos
add
fnstsw
xor
sti
sti
dec
repz
mov
pop
or
mov
fisttp
rcr
test
cdq
pusha
cmp
pop
add
ja
jg
or
push
and
mov
lock
inc
cmp
test
xor
inc
push
or
movs
sub
xor
pop
test
pop
pop
test
sbb
jl
or
(bad)
icebp
movs
or
jecxz
push
mov
ret
inc
sub
sub
test
fist
mov
mov
cmp
inc
aas
add
cmp
xchg
inc
shl
inc
cmp
outs
add
call
adc
adc
movs
sbb
mov
psubsb
into
int
jo
xchg
call
lods
add
add
add
mov
std
in
add
add
mov
cmp
lds
shl
pusha
nop
outs
xchg
sbb
pop
je
js
push
and
add
lods
(bad)
xor
mov
sbb
xor
add
rol
and
or
adc
fs
xchg
xchg
mov
adc
pop
cmps
mov
push
adc
imul
or
add
or
add
and
(bad)
and
push
mov
out
push
adc
dec
das
adc
mov
jmp
aaa
mov
sahf
adc
cmp
mov
loopne
loope
je
(bad)
and
mov
cmp
cmp
idiv
dec
jmp
das
cmp
fmul
movs
xor
je
mov
aas
pop
xchg
push
push
jmp
pop
jmp
dec
stos
(bad)
in
fld
push
gs
movs
and
push
rcl
inc
add
test
xchg
sub
popa
inc
(bad)
mov
scas
push
add
sbb
jnp
sub
adc
imul
pop
loope
dec
(bad)
and
xchg
in
jbe
jge
addr16
or
jns
inc
dec
or
ss
mov
call
mov
loopne
pop
(bad)
dec
push
repz
sbb
loopne
dec
popf
out
pop
push
movs
cmp
aam
cmp
shl
push
dec
sbb
or
xor
jno
addr16
dec
add
xchg
mov
adc
adc
movs
mov
imul
and
movs
dec
xchg
inc
movs
aad
cmp
in
cmp
mov
adc
mov
pusha
push
loope
loop
mov
jne
push
cmp
add
(bad)
fisub
jl
outs
adc
jmp
ret
sub
or
add
rcl
pusha
jnp
push
and
rcl
and
push
add
pop
not
pop
or
stc
xchg
dec
push
sbb
xor
or
adc
or
or
adc
ins
mov
mul
aas
pop
adc
mov
(bad)
xlat
add
(bad)
mov
pop
xor
fnstsw
push
add
push
mov
xchg
pushf
inc
xlat
pop
call
xchg
rcl
pop
jb
add
loope
add
and
inc
mov
sub
rcl
fs
push
mov
sub
je
in
out
fs
rcr
test
sbb
out
cdq
nop
out
cmp
pop
inc
fs
call
cmp
mov
xor
dec
sbb
daa
int3
and
sbb
daa
mov
shl
mov
jp
mov
inc
(bad)
loope
mov
bound
push
add
add
lock
icebp
sti
je
dec
dec
leave
or
mov
push
lock
add
adc
nop
mov
adc
fisttp
fistp
push
or
imul
les
pusha
cmps
mov
sub
repnz
or
jo
and
jbe
sub
sbb
add
mov
arpl
je
jno
shl
inc
sub
xchg
jl
gs
ror
fwait
js
and
sbb
add
pop
sub
dec
mov
sbb
std
or
(bad)
int
cmp
add
arpl
and
inc
xchg
dec
mov
loopne
mov
dec
je
jecxz
ins
and
sahf
pop
jb
or
test
leave
je
jae
xchg
gs
test
mov
scas
dec
or
jl
inc
xor
lock
arpl
stos
inc
mov
test
mov
adc
sbb
or
pop
mov
xchg
cmp
inc
pusha
mov
push
or
cmp
push
add
cmps
dec
retf
cmp
sbb
push
cli
out
mov
pop
jne
or
and
js
ret
cmp
nop
or
adc
enter
fmul
dec
mov
or
pusha
mov
neg
je
cmp
je
xor
ret
mov
cmp
call
fadd
xchg
xchg
pop
adc
inc
mov
xor
xchg
je
push
push
push
test
dec
jecxz
push
dec
hlt
pop
in
ss
es
xchg
push
aas
inc
cs
inc
add
cmp
mov
xchg
or
xchg
sbb
adc
adc
inc
push
sub
int3
dec
pusha
sub
imul
and
lds
mov
jl
mov
or
sbb
sub
cmp
pop
imul
mov
rcl
nop
mov
test
and
sub
pop
scas
int3
or
fmul
xor
and
dec
mov
adc
or
jne
fwait
adc
push
dec
sti
xchg
or
inc
sub
inc
pop
add
and
xor
pop
inc
cmp
jl
pop
add
and
xchg
or
add
popa
cmp
in
sbb
fcomp
pop
outs
xor
xor
enter
(bad)
mov
out
adc
xchg
cmp
or
or
mov
ret
or
out
cld
test
popa
jl
xchg
pop
daa
aas
add
(bad)
adc
pop
in
inc
push
pusha
add
jo
inc
ror
test
or
js
mov
push
add
and
mov
std
shl
repnz
adc
adc
and
pop
mov
clc
or
call
shr
mov
retf
clc
clc
and
and
xlat
lock
daa
call
mov
adc
mov
in
aad
(bad)
jmp
and
outs
adc
ins
bound
pop
or
arpl
xor
and
or
and
add
sub
jbe
push
adc
movs
and
or
mov
jg
shl
je
into
icebp
adc
jb
aaa
add
xor
cmp
or
ins
dec
jo
es
rol
call
adc
xor
add
push
test
and
mov
push
pop
loopne
and
pushf
xor
call
or
and
mov
or
mov
jbe
mov
xchg
dec
out
mov
je
cmp
dec
call
pop
and
sub
pusha
nop
repz
add
jge
push
inc
pusha
push
call
outs
inc
js
(bad)
sbb
jb
push
dec
in
push
repz
push
fcomp
or
push
pop
jbe
loope
test
xor
fsub
jo
enter
fadd
div
xchg
adc
push
mov
add
lock
jp
inc
or
or
push
cmp
jbe
pop
test
sub
sub
popf
mov
sbb
retf
fst
sahf
xchg
dec
jno
xchg
int3
xor
inc
xor
inc
hlt
and
call
and
xchg
sub
dec
dec
sub
loopne
es
scas
sar
aas
dec
lea
dec
add
add
dec
jb
jo
rcl
sbb
div
add
adc
or
cmp
pop
je
addr16
(bad)
icebp
hlt
lods
cs
cmove
lea
cld
pusha
or
in
jne
mov
or
jmp
xor
sub
jns
mov
xchg
pusha
jbe
push
cmp
mov
fs
pop
sub
dec
int
cmp
mov
jne
mov
adc
pop
dec
mov
or
movs
adc
xor
daa
and
mov
mov
pop
(bad)
stc
ins
aad
fadd
mov
or
xor
cli
shl
pop
pop
mov
push
push
sbb
jp
push
add
out
push
push
arpl
add
or
ja
push
jns
jge
retf
pop
test
out
aaa
es
or
pop
cmp
iret
out
dec
add
ss
and
stos
mov
adc
or
jns
adc
test
shl
jmp
push
pusha
jo
mov
inc
mov
rcl
dec
mov
mov
sbb
ror
xor
fstp
or
sub
xor
sub
lods
push
push
mov
in
push
fbld
dec
pop
mov
cdq
or
push
sbb
pop
ins
and
xchg
sbb
dec
lahf
dec
and
sub
sbb
and
movs
or
das
mov
push
imul
adc
fwait
pop
shr
fadd
imul
sub
pop
test
add
pop
add
popf
bound
lock
repnz
mov
imul
(bad)
cmp
aam
ss
and
xchg
xor
jne
aam
test
and
adc
jp
adc
pop
pop
dec
or
test
mov
loopne
add
cmp
inc
in
rol
adc
adc
add
inc
push
push
pop
push
sub
push
lock
push
cdq
xor
rol
fisttp
stos
pop
fcomp
add
or
scas
add
imul
sbb
push
jne
xor
nop
mov
ja
fcomp
mov
pop
mov
pusha
pop
add
adc
pop
jno
test
pop
pop
dec
fdiv
data16
push
test
lock
dec
or
add
ja
aam
mov
les
test
fdiv
jl
out
push
mov
mov
adc
inc
jg
inc
add
push
push
aaa
loope
or
xor
cmp
bound
(bad)
sbb
add
aam
sub
push
scas
add
or
add
dec
pop
mov
push
bound
into
fadd
hlt
jmp
lea
mov
dec
scas
movs
jbe
sbb
sub
es
jmp
fsubr
add
push
rcr
fmul
sar
dec
push
add
add
pop
mov
xchg
movs
enter
add
call
sbb
in
jmp
loopne
ror
dec
or
add
or
jmp
adc
mov
mov
nop
pusha
or
push
mov
xor
push
add
sub
push
sub
out
xchg
push
movs
add
xor
mov
test
jno
fdiv
mov
push
xchg
cmp
inc
mov
xchg
and
repz
fidivr
fld
adc
or
retf
popa
int3
push
mov
retf
dec
mov
mov
xchg
aam
nop
jne
out
rol
jg
adc
nop
mov
add
adc
mov
pop
dec
js
shl
enter
push
setb
in
push
push
test
loopne
(bad)
pop
nop
jne
mov
test
mov
mov
sbb
push
mov
cmp
int
push
cmp
movs
imul
les
and
xchg
sbb
add
rcl
and
popf
movs
movs
mov
in
enter
mov
test
(bad)
mov
or
movs
gs
and
inc
rol
mov
inc
cpuid
inc
or
mov
push
rol
ins
loopne
repnz
add
xor
and
int3
test
adc
loop
in
sub
not
sub
(bad)
push
jae
xor
push
pop
and
inc
mov
ficom
cmp
jae
lea
outs
sti
retf
movs
push
ret
rol
jns
inc
pop
rcl
ins
repz
and
pop
pop
pop
pop
ds
cs
jge
test
inc
cdq
pop
idiv
pop
into
(bad)
xchg
jb
(bad)
aam
add
push
cmc
or
outs
adc
jo
sub
push
mov
xchg
retf
mov
inc
or
or
cmp
mov
xchg
pusha
pop
xchg
dec
push
or
movs
aad
sbb
sub
mov
add
push
add
pop
sbb
add
pop
pop
inc
add
lods
popf
out
and
mov
jle
sbb
sbb
fst
dec
push
push
outs
dec
fstp
xchg
out
js
or
adc
fcomp
fld
and
mov
jg
hlt
mov
sbb
adc
in
or
test
push
adc
out
jo
adc
mov
xlat
push
or
test
adc
or
rcr
or
add
aad
push
sar
push
pusha
push
cmp
add
add
adc
inc
or
dec
mov
push
mov
cmp
jmp
mov
pop
inc
push
sub
rcr
mov
push
and
out
shl
or
mov
in
and
xchg
pop
add
add
adc
jg
or
loope
or
pop
cmp
and
mov
or
js
add
ret
scas
and
pop
popa
retf
fidiv
add
jg
enter
and
shr
or
push
and
ret
push
add
(bad)
fld
ret
cdq
xchg
movs
mov
mov
xlat
inc
push
adc
and
nop
add
xlat
ja
or
jb
mov
(bad)
je
push
mov
jbe
and
xor
adc
or
xchg
push
add
push
push
push
xchg
add
push
hlt
cwde
cmp
retf
cmps
cmps
mov
out
cmp
mov
jo
ret
dec
fcomp
ss
nop
jne
xchg
or
or
xchg
jns
adc
xchg
xchg
mov
dec
add
xchg
test
out
test
mov
div
(bad)
mov
push
push
imul
mov
dec
push
lea
push
adc
dec
pusha
sub
(bad)
jne
xor
jle
inc
lahf
xchg
push
retf
mov
out
in
or
inc
pop
sub
and
int3
xchg
lock
mov
lock
je
pop
dec
cmp
xlat
cmp
pop
mov
xlat
inc
cmp
add
pop
sub
sub
addr16
fs
pop
inc
sbb
and
xchg
mov
or
sub
lods
add
and
or
push
mov
sbb
dec
aam
jbe
imul
rcl
or
xchg
loopne
jnp
bound
pop
sahf
test
add
mov
pop
nop
mov
push
adc
pop
gs
int3
or
add
(bad)
out
fsubr
sub
push
push
push
mov
xchg
ret
mov
ret
je
in
pop
push
push
pop
jnp
lods
jne
outs
and
gs
popf
add
call
add
or
xor
mov
pop
fsubr
fdiv
ret
inc
add
fild
or
or
retf
mov
inc
inc
push
push
pop
inc
add
adc
outs
in
sbb
movs
xchg
popa
loop
stos
push
sub
jbe
test
ins
and
mov
dec
pushf
cli
bound
fdiv
lds
call
in
xor
loopne
sub
pusha
jmp
test
je
(bad)
and
or
loope
or
sbb
push
fadd
inc
mov
loope
out
add
xchg
test
adc
stos
(bad)
jmp
test
sbb
clc
jo
jg
fistp
inc
or
mov
mov
sbb
push
or
mov
loopne
mov
dec
enter
dec
mov
cmp
push
adc
test
mov
mov
xor
pop
aam
ret
outs
cmp
inc
push
xchg
bound
adc
fmul
add
and
jmp
mov
jno
outs
and
data16
cmp
sub
pop
mov
hlt
ins
and
int3
sbb
xor
dec
sbb
mov
dec
xchg
adc
test
cmp
xor
fadd
fistp
les
movs
mov
fimul
shl
cmp
mov
sbb
and
add
mov
inc
adc
mov
inc
mov
push
ins
sub
mov
fist
sar
mov
je
inc
les
dec
sti
add
pop
adc
add
mov
pop
dec
loope
rol
add
jae
pop
sub
mov
aas
mov
mov
je
sub
in
add
inc
pop
xor
jbe
push
div
mov
mov
(bad)
push
enter
push
add
jp
sub
adc
fild
cld
dec
outs
add
jg
mov
jne
das
icebp
mov
inc
or
or
adc
dec
sahf
jns
pop
adc
dec
rcl
sbb
sbb
mov
outs
pop
dec
hlt
je
or
daa
imul
cmp
je
dec
into
xchg
push
jo
iret
xlat
or
call
inc
cmp
xchg
(bad)
and
sbb
add
inc
add
call
cld
xchg
inc
loopne
cld
cmp
jne
push
add
sbb
movs
shl
loopne
(bad)
loopne
mov
push
je
in
sbb
(bad)
cmps
xlat
addr16
jnp
fisub
or
bound
or
push
push
jp
fadd
or
test
and
add
ins
js
shl
push
out
nop
add
mov
loope
test
xor
xchg
ficomp
je
outs
cli
icebp
push
adc
mov
add
or
or
push
mov
add
push
push
adc
xchg
and
push
and
scas
(bad)
loope
call
adc
mov
xor
dec
addr16
mov
xchg
pop
jne
jge
jmp
xor
lock
loopne
add
js
add
xor
lods
clc
mov
fild
pop
shr
arpl
jne
pop
adc
nop
and
push
add
xchg
shl
and
mov
(bad)
or
sub
xor
sub
dec
push
add
mov
pop
add
add
hlt
jmp
and
push
mov
mov
cld
cmp
jne
inc
inc
mov
adc
call
push
jno
mov
jns
hlt
add
and
xor
cmp
daa
scas
dec
jbe
loopne
stos
adc
adc
bnd
ins
and
xor
and
push
add
sbb
outs
test
test
add
xchg
inc
xchg
rcl
or
or
movs
adc
mov
lods
or
add
mov
inc
(bad)
ds
mov
stos
mov
call
cmp
adc
mov
cmp
in
dec
push
out
inc
or
jne
imul
xor
ret
jecxz
sbb
adc
nop
loope
adc
mov
and
cld
(bad)
xchg
mov
jge
adc
mov
(bad)
sbb
je
jmp
mov
fwait
loop
(bad)
je
push
cmc
dec
ins
adc
push
cli
add
push
pop
mov
sbb
xlat
add
jnp
xchg
sbb
lods
pop
inc
dec
and
ins
or
mov
or
lea
jmp
xor
or
pop
add
pop
xchg
icebp
xor
pop
adc
clc
dec
sub
sbb
cmps
retf
mov
pop
sub
loopne
js
(bad)
test
sahf
add
dec
adc
aad
or
xchg
mov
das
dec
sbb
or
test
shr
sbb
jbe
xor
dec
sbb
dec
add
pop
push
or
jo
add
push
push
push
mov
push
pop
lea
xchg
adc
or
data16
cmp
test
push
jl
adc
aas
lods
adc
cmp
mov
and
or
pop
inc
sub
mov
js
jge
add
xor
add
push
xchg
in
or
je
inc
scas
inc
(bad)
ja
cmp
test
push
mov
dec
push
mov
sar
lds
mov
add
jmp
mov
or
push
cmp
inc
mov
xlat
jbe
and
icebp
mov
call
adc
fld
jp
mov
push
or
inc
push
push
jb
gs
add
loopne
repnz
push
pop
aas
out
mov
cs
mov
jmp
inc
inc
cmp
sub
pop
psubd
scas
in
jne
inc
sbb
gs
out
push
jmp
dec
adc
push
mov
int3
push
sbb
lds
push
(bad)
into
dec
push
je
jp
cmc
inc
pop
jl
cmp
sti
ja
push
popa
movhps
mov
inc
dec
jp
pop
pop
mov
xor
push
cmp
add
sub
shl
xchg
ret
add
or
addr16
xor
shl
daa
fwait
or
xchg
fs
ja
adc
mov
out
movs
xchg
shl
xor
ret
push
mov
(bad)
jnp
test
lods
in
movs
mov
xchg
add
jo
outs
lods
inc
mov
mov
or
inc
dec
pop
xchg
sbb
xchg
push
ret
mov
adc
push
pop
call
jg
ret
xor
jo
or
pop
nop
fisub
push
push
add
(bad)
mov
xchg
gs
xor
add
cmp
repnz
jp
mov
xor
push
mov
xchg
pop
imul
adc
int3
rcl
cmp
gs
loop
and
xchg
(bad)
or
aad
sub
movs
add
les
mov
lods
or
mov
dec
in
jmp
sub
pop
jmp
push
test
push
mov
xchg
xchg
push
and
lock
das
inc
call
push
call
loopne
popf
outs
jne
xchg
xchg
lock
push
jbe
aam
rcr
pop
ds
xor
jae
add
pop
aas
jle
fcom
mov
sahf
jmp
ret
sbb
je
or
sbb
xchg
sub
ss
mov
add
pop
xchg
xor
scas
dec
sbb
loopne
loopne
mov
sar
add
mov
aam
shl
cmp
or
push
out
ja
nop
jle
cmp
call
cld
adc
jle
push
and
push
sti
fsubr
jge
jle
push
add
pop
xor
loop
adc
sbb
in
mov
cmp
call
xchg
and
pop
push
adc
dec
shl
mov
cli
push
loope
jl
pop
in
stc
imul
mov
test
cdq
add
mul
pop
sub
xor
(bad)
ins
fld
xor
into
pusha
test
sbb
jecxz
aaa
or
or
xchg
in
jb
punpckhdq
in
mov
rcl
sbb
cmp
in
add
sub
cdq
sub
push
sti
jb
lods
xor
dec
fisubr
pop
add
jns
je
dec
jmp
ret
mov
cld
jo
cwde
add
sbb
in
and
dec
mov
or
je
aas
rcl
out
xchg
and
popf
adc
adc
sbb
or
push
mov
add
mov
or
or
cmp
mov
dec
loopne
and
jo
xchg
(bad)
push
aaa
sbb
and
dec
aaa
push
xor
repnz
lock
pusha
fimul
mov
in
push
adc
fsub
xchg
mov
(bad)
mov
mov
je
inc
mov
sub
mov
sub
shl
jmp
rol
jmp
mov
sub
mov
xchg
mov
xchg
ja
jl
out
lea
ss
sub
push
push
jecxz
gs
cmps
(bad)
add
cmp
pop
and
icebp
mov
(bad)
(bad)
mov
push
inc
pop
and
(bad)
add
fcomp
xor
inc
pop
push
ret
mov
sbb
jl
movs
dec
xor
inc
xchg
dec
sbb
or
bound
aas
or
cdq
sub
mov
pop
stos
arpl
mov
jo
iret
push
ss
xchg
xchg
xor
icebp
mov
push
mov
or
das
imul
add
aam
mov
ja
int
jmp
(bad)
ins
mov
mov
ins
xor
adc
or
inc
lea
in
mov
mov
adc
popa
fistp
outs
and
movs
nop
lock
ja
outs
test
jg
pusha
sub
xlat
add
push
test
xor
ins
loopne
and
xor
(bad)
les
mov
add
mov
adc
(bad)
cwde
push
cmc
pop
fsub
loopne
pusha
pop
add
enter
mov
pusha
ret
cmp
or
js
enter
inc
stos
leave
mov
add
or
in
sub
sbb
iret
jmp
cmp
cmp
jne
cmp
or
lea
add
sub
jbe
aam
xchg
mov
push
stos
cmp
or
cmp
int3
and
inc
outs
xchg
and
mov
fild
xchg
nop
enter
mov
shl
and
(bad)
fbstp
sbb
add
or
lods
out
lea
bound
leave
xchg
sub
cmp
sqrtps
adc
pop
pop
stc
test
loop
enter
stc
ja
les
popf
mov
mov
jbe
or
xor
mov
(bad)
dec
rol
ficom
add
(bad)
xchg
imul
push
push
ss
push
popf
(bad)
sub
pushf
add
inc
xchg
in
add
std
test
inc
and
not
xor
dec
push
into
and
je
test
clc
ret
fcmovbe
cdq
and
or
add
pop
pop
cmps
mov
test
je
mov
sub
fsub
jmp
fisttp
mov
adc
push
test
jmp
gs
loope
pop
xchg
sub
(bad)
pop
and
or
jle
dec
pusha
dec
adc
shl
test
mov
loopne
jmp
sub
lds
sub
jns
lock
push
sar
pop
add
movs
cmp
lods
xor
mov
mov
xchg
fld
imul
adc
(bad)
retf
pop
rol
and
dec
pusha
pop
pop
jg
call
cmp
push
rcl
in
in
test
push
cld
fcmovnb
adc
cmp
add
jle
and
lea
(bad)
pop
jae
mov
cwde
and
and
push
add
and
or
xor
adc
movs
xchg
(bad)
mov
and
jg
sahf
cmp
aaa
pop
jg
cmp
retf
pop
sbb
popa
pop
or
in
or
xor
adc
inc
(bad)
clc
arpl
xchg
add
inc
xor
adc
hlt
pop
fsubr
dec
add
jmp
(bad)
jnp
pop
gs
aaa
mov
and
xchg
xchg
sbb
xchg
fdiv
movs
loope
sub
ins
add
movs
out
and
dec
xor
adc
sub
pushf
inc
stos
lds
fidivr
enter
ret
cmp
pop
xor
clc
pop
push
sub
ret
jg
xor
nop
add
pop
out
or
inc
push
add
adc
push
sbb
div
popa
loope
or
add
push
and
push
sub
add
sahf
mov
jge
sbb
adc
jmp
movzx
shl
mov
cmc
or
clc
inc
xchg
sbb
or
adc
(bad)
out
scas
sbb
push
jne
push
outs
mov
and
jmp
adc
jmp
add
cwde
mov
add
loopne
xor
test
xchg
inc
out
jae
mov
inc
pop
je
jb
add
push
clc
pop
sub
shl
dec
pop
mov
(bad)
and
sbb
pusha
(bad)
pop
adc
xor
xchg
add
pop
or
inc
aaa
or
dec
fadd
or
pop
fld
or
add
mov
cmp
inc
lea
ins
adc
sub
or
sbb
das
sar
dec
mov
outs
stos
or
and
push
or
mov
inc
cmp
nop
jmp
inc
enter
pop
loope
mov
mov
jmp
mov
inc
push
test
and
adc
push
jg
sub
or
in
inc
cmp
and
jl
mov
loopne
repnz
mov
inc
and
retf
shl
sub
push
push
idiv
push
fistp
fs
mov
out
xchg
push
ror
xor
or
iret
arpl
add
and
inc
cmp
gs
adc
sbb
mov
dec
aaa
mov
icebp
fild
mov
nop
dec
mov
call
pop
fbld
fild
mov
call
(bad)
or
cmp
add
fnsave
lock
adc
xchg
xor
jp
sbb
jbe
jne
add
and
inc
add
cs
jmp
mov
adc
push
int3
mov
sbb
scas
cld
sar
or
and
mov
fwait
cmc
mov
(bad)
nop
mov
push
jb
mov
sub
jp
sub
sbb
hlt
(bad)
cmp
or
and
push
push
inc
xor
cmp
adc
inc
inc
push
push
and
mov
mov
push
imul
add
sub
xor
rcr
xor
imul
sub
xchg
pop
dec
or
shl
ret
push
cmp
clc
aam
mov
add
mul
cmp
xchg
or
mov
(bad)
rol
jns
mov
push
push
push
fstp
popf
repnz
rcr
add
push
std
sbb
push
out
push
inc
xchg
movs
lahf
push
push
add
jmp
xor
(bad)
cmp
mov
jae
mov
inc
test
push
sub
push
xor
inc
pop
in
div
js
xor
cmps
cmovno
or
push
pop
sbb
ret
push
inc
xor
mov
imul
or
sahf
push
inc
sahf
xor
inc
sbb
add
jns
xor
sbb
je
out
leave
jae
and
push
sub
xlat
cdq
arpl
ja
adc
jbe
add
dec
pop
mov
and
arpl
cs
outs
mov
fcom
pop
mov
(bad)
push
dec
sbb
xor
add
jle
mov
and
adc
push
add
adc
or
pop
xchg
call
call
inc
mov
retf
add
and
adc
(bad)
in
push
xor
retf
push
cdq
jns
pop
pop
push
jecxz
jmp
out
js
ret
cwde
addr16
mov
retf
push
or
and
push
outs
push
sub
inc
retf
gs
jnp
ficom
repnz
mov
hlt
jg
inc
inc
sahf
bound
clc
mov
xabort
adc
pop
enter
adc
retf
mov
dec
jae
or
cld
lock
sar
shl
lock
xor
leave
adc
xor
xor
gs
enter
jo
add
inc
and
xor
clc
push
push
sahf
xor
pop
loop
dec
sub
rcr
xchg
or
popa
xor
push
loopne
popa
clc
add
jmp
fdivr
das
hlt
push
mov
cmp
fcomp
adc
cld
ja
or
clc
lahf
sbb
add
data16
pop
jno
lods
stc
xor
je
call
cmp
pop
push
fnsave
daa
adc
clc
hlt
int3
ror
fsubrp
(bad)
ins
ins
push
xor
inc
or
stc
nop
shl
mov
cmp
cmp
gs
aam
xchg
mov
loop
cmp
adc
pusha
outs
xchg
clc
hlt
mov
shr
fadd
mov
mov
mov
or
lods
shl
fadd
je
pop
rol
leave
mov
int
iret
xor
xor
clc
loopne
mov
sti
sar
rcl
jmp
outs
int3
cmps
inc
mov
xor
cmp
les
xchg
push
imul
mov
hlt
mov
clc
hlt
int
sbb
ror
int3
dec
jo
pop
cmps
push
fst
fcmovb
xor
shl
and
sbb
rcl
loope
or
fsub
enter
or
int3
pop
and
ret
fcom
fsub
nop
imul
fsubr
fsub
call
nop
aam
loopne
pop
xor
cld
aad
or
in
(bad)
fild
and
jb
in
and
call
call
(bad)
xor
in
aad
mov
push
mov
jo
rol
and
pop
inc
add
(bad)
das
add
inc
sub
and
mov
add
nop
mov
push
mov
add
push
sub
and
les
or
and
mov
add
nop
enter
and
or
cs
adc
push
xchg
and
je
and
lock
or
push
ins
and
or
retf
rol
lea
fdivr
push
pop
add
add
xor
aam
or
lock
lock
aam
add
xor
push
(bad)
hlt
fwait
and
fdivr
adc
in
fdivr
xchg
js
xor
mov
enter
int
xchg
push
pop
xchg
fmul
ror
jp
cmp
loopne
aaa
adc
mov
and
lock
xchg
or
les
nop
and
push
stc
mov
mov
sbb
push
pop
add
sbb
in
xrelease
pushf
cld
clc
add
rcl
jae
outs
call
mov
mov
xchg
mov
nop
inc
push
mov
xor
adc
push
je
adc
xor
or
mov
pop
xor
shr
jo
xchg
rcr
jl
clc
mov
or
pop
xchg
xchg
xor
ror
repz
cmp
fdiv
or
or
xchg
ror
adc
and
pusha
stc
aam
pop
or
or
pusha
add
(bad)
lock
fadd
xor
(bad)
jmp
fnstcw
jnp
mov
(bad)
aad
(bad)
shl
mov
ret
sti
popa
in
add
cs
cld
lea
or
jecxz
dec
jae
test
inc
mov
loopne
lods
adc
mov
aaa
push
cld
push
or
pop
lea
(bad)
cmps
or
cmp
adc
inc
sbb
sbb
adc
shl
mov
les
mov
rcl
mov
or
xchg
lods
rcl
dec
and
mov
jb
mov
ja
enter
adc
lods
ud1
xor
mov
adc
and
mov
popa
xor
xor
aam
mov
or
or
fmul
pop
pop
and
add
test
push
add
loopne
sub
in
and
mov
rol
push
or
add
mov
pop
sub
mov
mov
int
push
add
popa
sbb
xor
or
rcl
pop
adc
jo
xor
inc
gs
js
xor
mov
xor
or
jno
fdivr
jecxz
pop
in
inc
xor
sub
test
fld
and
mov
lods
clc
xor
daa
and
inc
add
sbb
fcmovnb
and
sbb
cs
ret
push
and
push
mov
add
fmul
(bad)
push
test
shl
jge
cld
aaa
cld
clc
out
jge
cmp
pushf
aaa
xor
out
jne
adc
popf
push
cwde
loopne
push
jle
and
pusha
and
test
add
add
dec
rol
mov
add
or
int3
ss
push
and
(bad)
and
imul
cmp
cmp
dec
push
lea
inc
aas
lods
imul
cld
cmp
inc
enter
jge
add
adc
(bad)
sub
faddp
dec
add
in
mov
dec
jnp
add
pop
aam
pop
pop
shl
sbb
sbb
jle
mov
jno
adc
push
ins
xchg
loopne
or
add
icebp
mov
adc
adc
sbb
push
xor
shl
push
cld
outs
push
shl
add
aam
(bad)
jbe
xor
shr
adc
enter
or
sub
pop
pusha
(bad)
in
adc
pusha
data16
jb
add
jb
dec
xchg
xchg
(bad)
dec
jl
std
jmp
shl
pop
adc
sub
pop
adc
inc
shl
or
test
jne
pop
jle
hlt
mov
jbe
inc
cmp
clc
or
adc
cld
pop
mov
arpl
aam
test
(bad)
imul
pop
mov
sbb
adc
je
sar
(bad)
dec
jne
dec
mov
ins
cwde
cmp
or
jp
pop
in
xchg
sub
retf
stos
imul
xor
push
push
(bad)
sbb
cmp
and
jb
cmp
pop
sahf
(bad)
push
cmc
inc
mov
enter
neg
pop
add
jle
inc
add
ret
call
and
inc
adc
sbb
sub
adc
fdiv
pop
(bad)
idiv
sbb
jle
mov
mov
xor
inc
inc
sub
lods
or
xor
fwait
ins
jge
mov
fstp
mov
mov
fstp
sbb
cmp
sbb
push
pop
je
ds
add
push
push
fadd
div
sbb
cld
jb
push
sahf
je
dec
ds
and
and
ret
or
and
test
add
jnp
(bad)
jb
into
mov
bound
dec
mov
bound
sub
rol
xchg
push
fbstp
add
loopne
mov
push
adc
add
into
adc
push
ret
dec
add
mov
fs
mov
mov
jge
mov
clc
add
call
scas
fild
jb
and
cmp
and
jecxz
push
ja
sub
mov
mov
mov
and
jge
jl
mov
hlt
out
sub
jle
push
jmp
mov
xor
in
rol
dec
add
jb
or
xor
inc
mov
jl
cli
add
xor
adc
and
sbb
push
cmp
and
xchg
pop
in
jmp
js
add
sbb
sub
or
fsubr
mov
ss
and
adc
sub
jecxz
pop
daa
imul
push
ins
xor
xor
call
push
mov
movs
adc
(bad)
nop
pusha
push
push
or
and
mov
xor
dec
and
xchg
push
jbe
push
pop
push
pop
inc
mov
push
enter
je
mov
(bad)
add
das
dec
hlt
push
or
jo
shl
adc
pushf
and
xor
push
scas
rcr
cmp
or
vpsraw
xor
je
xor
ret
mov
rol
push
sbb
or
and
rol
shl
test
or
add
repz
dec
test
or
addr16
mov
les
test
push
adc
adc
shl
mov
push
adc
inc
call
shr
clc
inc
add
xor
mov
add
push
dec
les
test
sbb
pop
pop
sbb
ror
sub
and
clc
jno
push
and
fsincos
adc
adc
retf
jl
cmp
and
sub
adc
pop
lahf
add
sbb
mov
mov
and
mov
push
push
test
shl
cmovo
and
lods
dec
xchg
popf
and
dec
and
jge
cdq
dec
cld
lea
fcmovnb
add
popa
es
fwait
gs
and
sbb
jns
sbb
cmp
das
movs
pop
bound
mov
stos
lods
nop
xchg
and
(bad)
lods
rol
ror
push
add
mov
mov
pop
cmp
jmp
jmp
xor
popa
daa
pop
shl
xor
mov
rcr
nop
jns
cmp
enter
mov
sub
cld
adc
xchg
pusha
pop
xor
icebp
pop
repnz
call
cmp
test
mov
loopne
push
push
dec
ins
jmp
and
xchg
outs
xor
sbb
in
js
test
mov
enter
dec
jne
cmp
retf
mov
ins
nop
add
dec
jne
inc
daa
add
imul
shr
ds
add
out
or
add
xor
sbb
xor
and
jge
pop
ror
push
pop
and
push
mov
dec
adc
repnz
push
mov
or
pop
sub
mov
xor
(bad)
xor
push
mov
dec
mov
xchg
cmp
add
jo
js
adc
jle
sbb
jg
fwait
jo
dec
or
popa
data16
push
sub
dec
xor
inc
in
(bad)
lds
pop
daa
iret
jmp
shl
jnp
test
lock
xor
arpl
xchg
cli
push
call
push
push
sbb
pop
pcmpeqd
mov
pusha
push
test
push
xchg
adc
shl
mov
inc
je
mov
nop
pop
test
cmp
sub
inc
add
pop
ja
call
mov
imul
push
loop
aad
or
adc
or
nop
out
pop
cvttps2pi
pusha
inc
xchg
inc
sbb
and
push
js
mov
mov
xchg
int3
and
shl
and
icebp
neg
push
jp
push
pop
aas
test
push
pop
adc
lea
shr
or
mov
retf
or
popf
and
adc
add
das
add
dec
push
ret
test
retf
xor
inc
push
inc
inc
adc
xchg
sub
add
inc
jno
and
jge
(bad)
test
pop
add
fadd
push
pop
cwde
inc
or
js
into
mov
repnz
push
adc
jbe
sub
fs
pop
cmp
fisttp
inc
(bad)
and
aad
mov
rol
stos
dec
mov
movs
das
dec
pop
inc
les
inc
push
(bad)
xchg
add
push
push
mov
loopne
push
fcmovb
dec
hlt
push
clc
cld
shr
dec
dec
punpckhbw
repnz
and
xchg
push
ret
cmp
repnz
push
xor
rol
push
push
loope
popa
xor
inc
into
(bad)
clc
adc
mov
sub
mov
enter
push
push
mov
jmp
push
xchg
mov
or
cdq
cwde
sbb
nop
jl
fs
movs
pop
adc
adc
add
cwde
push
jecxz
sbb
push
and
mov
push
xchg
and
push
daa
jno
inc
pop
xchg
pop
mov
mov
and
add
pop
xor
inc
cmp
add
scas
inc
lods
push
mov
add
call
fidivr
mov
mov
sub
push
ins
rol
mov
push
mov
adc
or
xchg
sahf
jbe
out
out
out
leave
in
xchg
pop
or
push
push
mov
mov
clc
mov
fucom
or
inc
rcr
xchg
fst
adc
and
cmp
je
(bad)
call
jb
jmp
mov
inc
fcomp
call
stos
dec
lods
add
push
(bad)
xlat
(bad)
imul
mov
mov
or
or
lods
add
pop
cmc
clc
(bad)
xchg
jmp
pop
pushf
sahf
dec
mov
mov
add
mov
jmp
inc
push
nop
mov
adc
push
jno
push
dec
and
mov
sbb
add
add
sets
push
xor
mov
pop
mov
pusha
jl
xor
cdq
add
mov
int3
jne
pop
cmps
mov
and
inc
popa
push
lds
ss
pop
sbb
and
out
or
xchg
adc
test
push
cmp
and
or
dec
sbb
push
iret
js
out
enter
mov
sbb
mov
fld
sub
pop
mov
cmp
fstp
jnp
push
and
jmp
into
and
bound
adc
call
test
stc
xchg
in
or
clc
xor
imul
push
in
adc
push
and
mov
mov
push
push
pop
or
cmp
jle
cmp
int3
jo
or
sub
sub
(bad)
and
mov
push
sbb
aaa
adc
dec
sub
pop
cwde
ins
sub
or
cli
clc
imul
out
push
repnz
fwait
push
fs
sub
pop
bswap
cdq
sub
in
lods
adc
or
sar
inc
cmp
les
ss
push
loopne
sbb
icebp
mov
inc
jbe
lds
adc
and
es
sbb
fbstp
push
xor
mov
push
clc
cdq
push
je
sub
out
push
jbe
sub
mov
test
mov
cld
mov
outs
sub
sbb
and
daa
in
xor
mov
xor
ret
das
cmp
sub
test
pop
loope
dec
xchg
push
movs
mov
inc
out
dec
mov
jge
fld
xor
jno
loop
outs
ror
or
lods
cmp
push
(bad)
inc
push
add
or
nop
jo
or
fild
push
jne
addr16
and
add
jmp
mov
stos
sub
push
xor
and
test
js
inc
shl
jne
loop
fsubr
loope
adc
sbb
out
sbb
sahf
sbb
rcl
push
cld
test
hlt
xchg
(bad)
stc
adc
sbb
shr
add
call
lods
or
push
shl
ret
add
std
dec
xor
push
lock
test
inc
inc
(bad)
jb
push
push
inc
es
and
cs
fs
test
mov
loopne
in
jecxz
push
out
js
dec
jnp
xchg
cld
inc
xchg
sub
push
sahf
add
fsub
mov
jae
and
mov
add
add
pop
inc
add
pop
ins
pop
push
xor
sbb
push
mov
xor
ja
sub
mov
clc
test
into
push
add
mov
nop
add
jo
push
pusha
and
dec
sbb
and
(bad)
cwde
cmp
xor
jle
mov
nop
push
push
mov
movs
mov
mov
add
cmp
adc
call
mov
or
call
mov
nop
push
and
jmp
scas
movs
pop
mov
add
and
and
add
adc
push
cmp
sbb
repnz
hlt
or
xchg
call
mov
pusha
popf
sub
cmp
push
fcomp
ins
mov
lock
sbb
shufps
inc
pop
push
dec
call
mov
(bad)
cmp
movs
sti
push
adc
pop
sbb
cmp
xor
in
test
or
push
pop
ret
xchg
pop
push
or
inc
or
fwait
sahf
into
sbb
jne
fisubr
add
mov
and
add
xchg
sbb
jb
sbb
call
or
inc
clc
ror
jno
enter
pop
adc
xchg
test
inc
into
mov
cmp
dec
test
xor
enter
xchg
shl
les
outs
call
sub
pop
adc
dec
je
lods
je
cmp
pop
and
and
jmp
or
(bad)
mov
rcr
lods
jo
ret
sbb
ss
shr
sbb
ret
inc
inc
es
mov
xchg
push
pop
fidivr
cmp
rol
push
inc
sub
loopne
and
jp
inc
stos
push
inc
dec
int
dec
call
nop
push
adc
xor
push
dec
or
or
stos
mov
mov
ret
mov
out
(bad)
arpl
pop
adc
mov
rol
in
cmp
or
add
sub
or
push
jae
std
shl
mov
add
sbb
jae
mov
add
imul
es
or
ror
and
xchg
mov
sar
push
mov
jbe
aas
(bad)
shl
lods
retf
xchg
xor
cmps
adc
stos
sub
pop
(bad)
and
ds
adc
call
mov
add
ss
popa
jl
or
pop
rcr
xor
(bad)
jmp
daa
rol
cmp
(bad)
dec
dec
adc
mov
mov
inc
je
inc
inc
aad
retf
aaa
push
inc
adc
or
lods
adc
call
and
inc
mov
inc
adc
xlat
test
cwde
in
adc
cmps
popa
(bad)
lock
ret
add
adc
mov
sahf
xchg
in
sub
mov
(bad)
mov
jmp
das
es
inc
fidiv
mov
sub
cld
das
loop
sbb
sub
inc
movs
ins
push
test
xchg
pop
mov
loope
inc
(bad)
fistp
jo
xchg
loop
mov
jno
out
push
push
fist
je
shl
push
xor
add
jns
sbb
lldt
sbb
mov
shl
jae
mov
inc
mov
pop
add
sub
add
dec
mov
stos
push
jae
push
icebp
cmp
adc
and
shr
cdq
call
xor
ror
pop
pop
sub
cdq
daa
hlt
(bad)
dec
add
ret
add
mov
das
test
(bad)
cmp
jae
sbb
sbb
data16
sub
sar
repnz
xlat
jo
xchg
push
push
jnp
push
sti
call
in
ss
ret
je
in
xor
add
and
enter
cmp
jbe
push
sbb
mov
pop
adc
mov
push
lds
adc
hlt
ss
cmp
es
cs
pop
pop
or
aas
lds
mov
sub
fcomp
and
mov
xchg
or
add
dec
xor
sbb
dec
mov
mov
or
sub
and
test
mov
leave
and
push
add
ja
lahf
mov
or
test
xchg
int3
dec
mov
inc
ja
sbb
mov
inc
cwde
adc
xor
ret
addr16
mov
sub
sar
and
xlat
jae
movs
sub
or
cmps
rol
or
or
dec
in
xchg
inc
add
inc
jae
jge
xchg
ss
jo
jae
enter
iret
or
mov
out
or
and
or
xchg
iret
cli
jbe
jne
xchg
ret
cmp
ret
xchg
push
or
int
push
push
pop
dec
addr16
or
dec
outs
hlt
out
adc
pop
stc
je
scas
fucomip
add
and
out
mov
test
push
jbe
and
pop
repz
push
pop
adc
or
sub
pop
sbb
add
mov
push
add
jns
or
mov
jns
(bad)
int
jle
push
sbb
movs
adc
aaa
clc
lahf
cli
aas
sahf
push
fild
fild
daa
fld
add
or
and
fcom
add
inc
xor
or
sub
int3
inc
dec
loopne
jb
or
mov
fdivr
pop
clc
scas
ins
out
cdq
cmp
jl
jg
xchg
movs
push
jmp
add
inc
add
or
push
add
mov
in
sbb
xchg
jo
es
mov
sub
mov
test
cwde
ds
outs
sbb
fmul
mov
push
push
test
jb
add
add
and
mov
hlt
ror
inc
aaa
mov
mov
push
rol
cmp
inc
push
dec
jg
mov
das
ins
cmp
xchg
push
pop
scas
lock
lock
or
push
jmp
or
and
cmp
adc
test
sahf
call
jne
xor
dec
inc
in
dec
adc
rol
mov
adc
sahf
inc
loop
mov
xchg
push
(bad)
xor
dec
jmp
add
add
sub
sbb
mov
xchg
inc
cmp
mov
push
xor
mov
std
and
in
retf
clc
fbld
add
mov
sbb
push
mov
pop
xchg
loopne
imul
mov
shr
mov
sbb
xor
and
das
add
cmp
and
enter
xor
adc
je
dec
sub
imul
pusha
fisub
lds
adc
into
add
es
fild
inc
inc
iret
dec
rol
push
and
jnp
ret
aas
adc
mov
rcl
loope
sbb
dec
push
xchg
cli
pop
push
sbb
add
or
xor
mov
inc
mov
outs
jne
aam
sub
(bad)
mov
add
loopne
mov
fadd
or
add
imul
sbb
mov
add
push
jns
dec
and
jno
jmp
and
add
fstp
stos
sub
pop
xor
cmp
xlat
sbb
retf
mov
mov
pop
xor
frstor
and
jecxz
daa
pop
pop
or
push
out
jo
test
sbb
or
les
enter
retf
and
add
sbb
(bad)
xor
add
es
adc
sbb
(bad)
xor
mov
cmc
sub
or
sub
fwait
jg
call
inc
mov
pop
mov
std
or
inc
xor
inc
push
push
test
add
add
cs
ins
push
push
into
adc
xor
lahf
push
xor
xor
push
ds
shl
es
mov
sbb
adc
or
sbb
ss
pop
and
adc
inc
rol
add
gs
shl
push
xor
std
dec
add
cs
or
popa
add
or
adc
dec
pop
lods
cdq
aaa
mov
dec
pop
adc
sub
or
jno
adc
mov
push
mov
ficomp
xor
xor
shl
sub
xor
fld
nop
mov
and
xor
or
xchg
jbe
pop
push
sub
add
and
mov
pop
daa
sbb
push
and
daa
jecxz
lock
jmp
leave
leave
mov
ins
jge
popf
and
sub
pop
mov
jns
inc
adc
mov
xchg
pop
jg
fwait
sbb
popa
push
movs
shr
adc
add
mov
xor
push
test
pop
cmp
push
mov
vpcmpeqd
std
or
or
push
push
dec
or
add
xor
inc
adc
icebp
rol
or
out
push
fwait
pop
jge
mov
or
or
shl
and
or
adc
push
add
fs
or
jecxz
loopne
add
movs
adc
inc
cmps
test
sbb
icebp
lds
aam
jnp
cmp
jl
or
jg
fimul
jl
mov
jge
in
mov
or
push
call
and
ins
ins
cmp
and
add
sbb
mov
push
xlat
push
xchg
es
push
or
or
xchg
sub
rcr
inc
push
push
cmp
je
xchg
or
push
jne
pop
aaa
mov
ja
mov
add
push
cdq
push
js
adc
cmp
cld
push
add
clc
les
pusha
mov
xor
enter
ret
and
xor
sbb
mov
inc
das
pop
adc
ror
stos
sub
and
push
push
enter
or
dec
loope
es
pop
dec
and
adc
inc
pop
in
ror
mov
inc
jp
jle
jae
add
mov
sbb
inc
adc
mov
pop
dec
iret
or
in
loopne
add
dec
add
pushf
inc
push
pop
xor
dec
fcom
add
loope
ror
sbb
ret
pop
icebp
inc
jmp
mov
fsubr
mov
aaa
cmps
sub
loope
pop
adc
pop
add
mov
inc
cmp
jo
and
arpl
(bad)
jb
jne
and
jg
inc
movs
pop
adc
nop
dec
je
push
les
lock
jne
mov
push
push
mov
sbb
adc
fnsave
push
xor
imul
pusha
ins
sub
jmp
push
aas
ror
cmp
cmp
add
jl
mov
inc
daa
jae
(bad)
fwait
or
inc
push
imul
mov
inc
jl
pop
cmp
mov
iret
mov
dec
push
lahf
sbb
adc
idiv
mov
mov
stc
add
mov
or
fidivr
push
retf
imul
push
cmps
movs
mov
jmp
lea
mov
inc
pop
cmp
daa
and
add
jo
pop
outs
aad
pop
jmp
xor
je
int
xchg
push
fwait
sub
or
es
push
mov
and
dec
call
pop
sbb
mov
mov
push
push
sbb
dec
(bad)
das
lahf
add
das
mul
iret
iret
ret
js
add
jo
push
icebp
(bad)
cmp
adc
cmp
(bad)
movzx
je
fild
xchg
xchg
mov
mov
bndstx
push
cmp
jle
push
imul
rol
cli
and
popa
xchg
mov
dec
push
and
xor
push
out
fbstp
sbb
enter
sub
fcmovu
pop
lock
jle
pop
loopne
popa
mov
pop
mov
push
test
adc
or
dec
push
fcmovnu
rcl
cmc
add
bound
adc
aad
adc
inc
shl
add
pushf
add
or
shl
pushf
ins
loopne
jns
nop
dec
test
ret
push
cmps
push
lock
das
retf
fmul
je
popf
push
push
xchg
add
push
push
inc
xchg
test
or
mov
rol
jb
fild
jbe
mov
retf
push
xlat
shr
pop
ficomp
inc
fiadd
icebp
add
cmps
fist
int3
push
ins
pusha
int
jl
sub
xchg
mov
jnp
jge
fadd
fidiv
mov
xor
inc
nop
adc
ins
or
or
push
(bad)
and
jb
and
fdivr
and
or
dec
adc
aaa
dec
lea
test
dec
into
in
test
push
pop
pop
adc
mov
retf
inc
data16
sub
and
movs
in
jno
add
and
aam
movs
lock
cmp
xor
pop
mov
xor
xor
jle
jge
push
or
xchg
sbb
xlat
mov
add
fld
sbb
xlat
sbb
and
aad
adc
inc
sub
scas
dec
xlat
xchg
not
outs
push
arpl
mov
cmp
(bad)
mov
cmp
add
cmps
pop
pop
push
ins
cmc
ss
add
push
push
rcr
mov
in
adc
cmp
inc
fs
jno
mov
into
dec
mov
cmp
inc
inc
pop
js
and
mov
(bad)
nop
xchg
bound
sbb
sti
jp
xor
adc
xchg
cdq
pop
js
push
inc
dec
sub
dec
and
and
outs
aad
and
cmp
stos
xor
push
or
dec
push
sbb
sub
cmp
ret
pop
lea
jmp
dec
sbb
mov
add
push
mov
pop
ret
mov
mov
xchg
movs
ror
jnp
add
add
cmp
fadd
mov
xchg
pop
enter
dec
mov
xchg
push
pusha
xchg
push
hlt
pop
and
fs
and
push
aam
inc
add
les
mov
ficom
test
add
cmp
test
adc
mov
add
adc
push
pop
mov
jo
cmp
je
sub
push
mov
jnp
adc
pop
ss
pop
mov
cmps
push
cmp
add
clc
daa
cmp
jle
mov
pop
add
sbb
arpl
push
mov
int
or
ss
add
fs
add
adc
push
lods
inc
dec
sbb
call
mov
mov
inc
xchg
outs
push
fmul
movs
shl
je
inc
push
lea
fwait
or
retf
pop
pop
pop
inc
cld
adc
adc
and
add
inc
jbe
or
arpl
lahf
mov
pop
rcl
outs
je
fst
and
or
add
sbb
mov
sti
jecxz
(bad)
cmps
xchg
jge
xchg
arpl
je
xchg
lods
jmp
imul
aam
and
push
gs
add
sbb
pusha
inc
or
jge
scas
dec
push
inc
mov
sub
call
dec
scas
dec
xchg
add
sub
sub
lea
inc
push
push
or
pop
add
ret
into
jne
imul
inc
shr
call
jge
mov
fs
adc
xchg
dec
fild
xor
add
and
cmp
adc
jmp
pusha
shl
(bad)
clc
sti
jo
das
daa
adc
push
es
jb
ins
add
push
adc
in
ss
xor
mov
inc
xchg
xchg
sbb
xchg
mov
dec
adc
cmp
xchg
sub
or
mov
cmp
add
shl
xor
out
scas
dec
jecxz
je
std
mov
je
pop
sbb
iret
stos
xor
mov
mov
sahf
jae
cli
lea
cmp
rcr
sub
push
inc
lea
popa
pop
sbb
jb
pop
pushf
popa
sbb
rcl
sub
dec
imul
add
sahf
loope
ret
jo
jl
cmp
pop
movs
push
pop
sahf
and
adc
ret
ja
pop
arpl
pop
inc
pop
lock
cmp
jae
sbb
rol
push
test
ins
aaa
sub
sub
(bad)
push
cld
icebp
add
add
add
push
movs
xchg
jnp
pop
pushf
mov
jo
dec
cmp
or
bound
test
mov
cmp
dec
in
lahf
mov
cmps
scas
mov
not
or
fiadd
sbb
push
jo
cmp
mov
add
loopne
sub
push
jmp
mov
cmps
jmp
mov
cmp
mov
mov
inc
rcr
pop
add
and
mov
sahf
jo
pop
mov
lods
imul
sar
xor
mov
mov
add
sbb
daa
mov
shl
push
xor
inc
pusha
cs
jle
jge
push
add
fst
mov
mov
js
add
in
mov
daa
and
dec
mul
sbb
loopne
mov
jmp
test
xchg
retf
sbb
aas
fwait
or
jl
or
or
or
adc
adc
inc
mov
lods
dec
add
adc
add
push
or
mov
int
or
jne
je
dec
jns
pop
jo
push
dec
in
inc
adc
add
(bad)
dec
dec
pop
and
fwait
add
inc
pop
fmul
adc
push
shr
xchg
popf
add
cmp
sbb
and
aam
inc
add
repnz
movs
xchg
icebp
je
cmp
xor
and
je
sbb
jne
and
mov
mov
(bad)
and
adc
je
cmp
push
loop
cmp
xchg
sbb
cmp
es
movs
sub
dec
adc
ror
inc
fs
into
jmp
sub
push
xor
jne
inc
or
sbb
inc
repz
and
inc
mov
adc
push
inc
push
xchg
scas
or
push
and
out
add
outs
fwait
cmp
outs
jmp
scas
add
or
je
pop
add
sbb
jne
inc
add
adc
movs
mov
or
arpl
cmp
jg
sub
inc
inc
and
shl
fst
sub
mov
xchg
clc
imul
inc
call
inc
mov
loope
cmp
inc
lea
js
in
mul
mov
inc
sub
icebp
je
nop
ret
std
jmp
pop
jne
jmp
ins
daa
mov
ins
ret
jb
mov
fild
and
push
ret
mov
shr
jge
loop
or
nop
icebp
inc
mov
cmp
add
adc
mov
mov
lea
sub
jb
inc
movs
es
xchg
and
sar
push
fld
lea
push
js
scas
jnp
loopne
mov
mov
pop
stos
mov
sbb
add
adc
je
or
je
push
or
loop
cmp
mov
loopne
and
and
mov
or
imul
mov
inc
test
xor
in
jne
or
inc
daa
cmc
fnsave
mov
inc
adc
jle
sbb
sbb
in
aaa
cwde
mov
mov
clc
js
sub
add
lea
xor
cmp
sbb
sahf
ret
add
mov
mov
pop
ins
xor
pop
xchg
mov
cmp
inc
aas
jne
and
push
cld
and
and
sub
mov
movs
mov
pop
cdq
pop
sbb
xchg
fs
jmp
inc
jns
cmp
push
mov
sub
xchg
add
es
mov
or
or
ins
cs
add
cwde
fcomp
fcmovnu
dec
inc
jl
pop
cmp
pop
add
dec
add
jb
inc
dec
ins
xchg
mov
inc
retf
inc
enter
and
pusha
test
xor
sub
jno
ror
sti
xchg
addr16
add
push
fs
and
jo
add
addr16
and
je
scas
sub
addr16
pop
shr
cmp
inc
scas
cmp
xchg
je
fidiv
pop
or
adc
test
pop
dec
add
mov
push
gs
gs
pop
(bad)
jns
add
inc
leave
jae
mov
add
gs
sub
jecxz
bound
mov
test
mov
and
sbb
(bad)
stos
dec
cli
mov
gs
and
or
inc
lods
lods
pop
add
sbb
or
jmp
push
add
jo
and
dec
xchg
fwait
xchg
push
mov
mov
push
dec
jle
lea
adc
ins
or
add
or
js
sub
add
repnz
mov
lahf
sbb
lea
ja
push
imul
push
add
pop
jns
js
add
pop
adc
xlat
cmp
movzx
js
out
xor
mov
jmp
lea
and
add
jl
sub
dec
push
jge
add
lds
push
nop
sbb
into
push
mov
repnz
adc
jns
push
mov
or
add
add
leave
add
outs
add
cmp
lock
pusha
or
mov
adc
(bad)
lods
lods
xor
or
test
push
adc
data16
jg
sbb
pop
sub
and
jbe
mov
loopne
inc
push
rol
lods
add
mov
pop
mov
in
dec
imul
jmp
and
(bad)
icebp
push
lods
add
lahf
mov
cmp
sub
call
mov
cmp
test
mov
add
lods
mov
add
add
add
add
mov
jns
add
pop
and
out
add
xchg
pop
xchg
sbb
shr
sbb
cmps
dec
sub
jo
pop
pop
push
test
popa
dec
jge
mov
call
jle
sub
sar
push
fwait
mov
shr
or
lods
pop
data16
cs
pop
xor
and
xor
cmp
add
dec
push
stos
xchg
lods
je
jmp
pop
bound
ret
call
inc
xor
cwde
or
mov
adc
adc
mov
add
add
push
jmp
imul
movs
sbb
daa
sub
jo
cdq
ins
pop
sub
mov
add
sbb
sbb
add
aas
cld
adc
or
loopne
ss
inc
sub
bound
push
push
stc
add
inc
add
adc
add
or
mov
pop
ror
cmp
lods
inc
mov
adc
fcomp
pop
inc
dec
or
push
add
pop
push
inc
xchg
jmp
shl
add
push
xor
je
out
sub
mov
xchg
push
ret
psubsb
aad
rol
and
mov
test
push
stos
clc
dec
rcr
jmp
inc
add
add
sub
imul
mov
movs
add
add
movs
test
repz
add
or
and
or
stos
jns
mov
jae
push
in
mov
and
in
mov
add
sar
sub
cwde
or
adc
add
les
adc
mov
inc
push
cmp
push
sbb
or
add
in
and
push
or
lock
enter
nop
cmp
xor
add
outs
movs
add
enter
enter
leave
pop
outs
mov
call
leave
jl
(bad)
sub
pusha
jp
leave
call
out
fwait
pushf
mov
adc
inc
loopne
leave
dec
add
mov
cmp
pop
dec
xchg
rcr
jne
mov
dec
mov
(bad)
push
imul
(bad)
ja
push
into
dec
cmp
sbb
sbb
or
sti
xchg
mov
and
sti
mov
imul
fiadd
and
mov
sub
imul
loope
sub
xor
sub
push
pop
fild
mov
mov
mul
fdiv
push
jb
sbb
push
pop
dec
or
mov
clc
mov
cs
inc
push
push
mov
push
cmova
push
pop
mov
stos
mov
pop
mov
xchg
xchg
dec
xchg
lods
xchg
rol
mov
shr
into
in
pop
add
cmp
pop
xchg
mov
test
sub
adc
and
mov
fnstsw
xor
push
enter
fcomi
and
scas
mov
repnz
push
pushf
pop
sub
rol
sbb
add
ret
jo
sbb
fld
and
cli
jmp
(bad)
xchg
fbld
cdq
inc
push
push
and
sahf
adc
xchg
xor
fnstsw
je
add
add
jmp
pop
ror
adc
or
pop
pop
jnp
pushf
pop
fnsave
inc
ins
adc
xor
sub
outs
xor
adc
sbb
scas
sbb
adc
add
test
aaa
xchg
and
inc
sub
jge
rcl
add
mov
xchg
(bad)
xor
sub
stos
movs
pop
pusha
pop
cmp
and
mov
mov
adc
stc
cmc
mov
sub
repz
cmp
gs
mov
dec
jae
inc
sbb
sti
mov
aad
push
jp
cmp
cmp
cdq
cli
fs
xor
jo
pop
ins
inc
test
mov
pop
js
clc
pop
and
jge
repz
add
or
sub
data16
cmp
shl
adc
outs
inc
mov
hlt
in
push
xor
cmp
add
xor
xor
xor
add
pop
sbb
xor
mov
movs
aam
je
and
les
jmp
sub
jmp
aaa
xchg
ret
loopne
aam
add
imul
shr
(bad)
sbb
test
and
jae
sar
mov
cs
push
xchg
mov
in
push
movs
jl
mov
movs
imul
fmul
in
mov
mov
adc
and
pop
adc
add
pop
add
lods
call
mov
or
or
fs
ror
fbstp
xchg
mov
xlat
loope
pop
dec
imul
cmp
xor
cli
xor
sbb
adc
rcl
fwait
xor
dec
or
test
push
adc
xchg
sbb
push
iret
std
xchg
mov
and
fld
lahf
adc
push
jmp
or
jmp
stos
dec
cs
test
sub
fldenv
fisttp
rcr
jp
mov
add
and
push
xor
push
push
clc
adc
fmul
adc
into
and
cmp
fstp
je
push
and
inc
mov
mov
popf
mov
mov
cmp
retf
add
cmp
add
daa
shr
sub
sbb
cmps
push
jmp
adc
cmps
xchg
jne
cmovge
add
mov
cmps
mov
xchg
mov
add
mov
sub
push
mov
add
jo
mov
or
jbe
push
sub
sti
adc
retf
ret
call
ss
dec
jne
add
jb
cmp
jne
js
push
mov
ss
dec
jne
outs
mov
mov
add
xchg
sbb
arpl
in
fbld
inc
pop
sbb
add
mov
mov
clc
scas
and
xchg
ins
sbb
pop
add
push
in
sub
movs
cmp
mov
xor
stos
mov
test
sbb
add
loopne
push
mov
sbb
ss
pop
sbb
or
in
in
or
and
and
fstp
or
fld
xor
xor
jb
cli
pop
adc
fs
loope
dec
jmp
cmc
sbb
xor
cmp
jno
mov
sub
pop
jl
sbb
adc
aam
jge
xchg
pushf
lock
pushf
pop
out
push
cmp
and
sub
(bad)
test
fldenv
add
popa
fbstp
je
stos
call
mov
nop
mov
int3
adc
mov
xchg
ins
jo
sahf
clc
dec
or
push
mov
cmp
mov
cld
mov
or
das
adc
adc
pop
stc
mov
ja
or
push
cmp
sbb
jl
or
dec
dec
pop
jp
sbb
sbb
ja
or
lds
pop
pusha
sbb
xchg
ret
or
xchg
test
inc
fmul
in
cmp
pop
cs
mov
inc
jns
xchg
je
es
and
add
movs
inc
shr
add
add
jno
push
popa
jns
nop
shr
adc
popa
jnp
xchg
ja
jo
nop
sbb
or
jle
mov
loopne
nop
sub
mov
xor
and
in
sbb
mov
jmp
xchg
popa
sub
sbb
mov
add
(bad)
out
add
les
cmp
arpl
mov
lds
int3
inc
sbb
dec
jb
mov
dec
jg
leave
out
iret
add
fsub
jmp
mov
sti
pop
ret
fisttp
xchg
(bad)
mov
les
hlt
lods
movs
jne
mov
cwde
mov
mov
pop
fcom
mov
enter
mov
cmp
sbb
add
test
sbb
add
out
mov
jmp
push
add
xchg
xchg
add
xchg
adc
xchg
ss
cmps
inc
sbb
out
inc
movs
aam
sub
or
je
xchg
mov
pop
stos
and
in
outs
adc
ins
loop
xor
jo
push
in
mov
push
xor
in
xchg
or
or
push
ins
pop
push
push
rcl
xchg
or
pop
mov
jne
aaa
fs
ins
or
jne
out
inc
jo
or
mov
inc
adc
mov
inc
add
or
rol
dec
sub
or
mov
mov
jnp
loopne
cmp
push
add
mov
ror
ror
mov
mov
add
cs
popf
retfw
enter
loopne
leave
sbb
aaa
clc
(bad)
xchg
add
jnp
(bad)
out
scas
fst
aam
xchg
lahf
xor
inc
push
rcr
inc
mov
pusha
jp
sbb
add
out
mov
mov
and
mov
ins
aaa
adc
call
outs
and
movs
xchg
pop
les
retf
paddd
shufps
ds
sub
movs
sbb
push
call
stos
imul
pop
mov
fiadd
mov
mov
es
ss
jge
loopne
jne
shl
push
inc
push
cwde
push
inc
imul
ins
push
jne
inc
jno
fld
dec
mov
enter
repnz
(bad)
cmp
sbb
push
add
mov
push
adc
outs
xchg
pop
and
adc
fs
push
mov
dec
dec
push
push
enter
lea
pushf
jge
sbb
add
je
cmp
out
sub
add
fdivr
push
push
jno
fsub
xlat
cmp
mov
or
mov
daa
out
out
adc
enter
stc
jmp
mov
xchg
xchg
sbb
and
push
pushf
call
mov
sub
(bad)
and
js
xchg
(bad)
cli
add
sub
out
ret
sar
aam
xor
(bad)
mov
imul
lods
and
(bad)
jecxz
sub
loop
daa
push
or
fcom
hlt
idiv
fistp
call
stos
retf
xor
mov
dec
repnz
fadd
mov
sub
addr16
jg
daa
mov
push
and
add
inc
shl
push
test
scas
fild
in
push
jae
push
jnp
ins
ins
sbb
daa
call
repnz
cmps
xchg
fs
ins
push
test
adc
sbb
inc
shr
mov
pop
fidivr
lock
jo
mov
add
retf
cmp
daa
stos
dec
sbb
mov
rcr
aas
in
xchg
sbb
push
inc
test
and
cmp
mov
jmp
sbb
movs
popa
ss
cld
(bad)
sbb
or
jns
jge
ret
loopne
int
aaa
mov
jno
nop
jmp
mov
leave
lods
sub
mov
jmp
adc
add
test
inc
mov
test
test
popf
jns
in
test
pop
mov
jnp
imul
mov
test
add
dec
pushf
mov
mov
jge
inc
or
rcl
or
fdivp
dec
rol
dec
add
aam
and
pop
fadd
(bad)
icebp
cld
mov
shl
cwde
xchg
jo
imul
or
adc
sahf
adc
sbb
and
pop
iret
in
sub
sub
in
mov
test
cmp
pop
sahf
retf
enter
or
fs
addr16
push
pusha
inc
or
jb
cs
sbb
add
pop
nop
je
push
scas
push
daa
add
push
into
jecxz
das
add
aas
int3
mov
push
sub
or
or
push
sbb
sub
and
retf
(bad)
pop
adc
jb
loopne
(bad)
(bad)
cdq
add
sub
lds
pop
(bad)
xor
dec
popf
imul
xor
xor
jle
pop
pop
lea
cs
push
mov
mov
sub
push
shr
xchg
lock
push
dec
dec
push
call
shr
push
out
cmp
pop
cmp
sbb
cmp
push
push
(bad)
ds
dec
cmc
inc
or
cmp
mov
push
push
mov
std
adc
push
fld
pop
push
lock
adc
lods
shl
fucom
adc
call
or
addr16
or
vminsd
je
push
or
jb
pop
mov
stc
je
push
cld
cli
xor
inc
mov
(bad)
jmp
shl
movs
sbb
loope
nop
fs
push
in
bound
clc
add
int
jne
xor
shr
xor
push
and
pop
ins
jmp
jmp
and
dec
add
int3
call
mov
pop
mov
js
add
add
inc
(bad)
sbb
pop
adc
xchg
xor
cli
jmp
and
dec
dec
xlat
xchg
dec
push
scas
jmp
ss
fwait
jno
dec
mov
or
adc
sub
push
xor
(bad)
mov
cmps
js
dec
mov
repnz
rol
gs
cmps
repz
test
lods
fild
rcl
sbb
jns
aaa
lods
cmp
fiadd
sahf
jnp
mov
pop
pop
jecxz
loopne
fiadd
sbb
aad
mov
pushf
or
push
jg
jmp
push
or
mov
pop
add
dec
nop
daa
add
or
cs
in
clc
daa
and
jge
push
add
xor
aam
add
clc
mov
and
pop
sar
mov
je
and
ins
jg
rcr
or
mov
outs
pop
ret
push
xchg
sbb
stos
adc
loopne
sbb
mov
push
call
sub
add
sub
scas
push
jle
loopne
outs
loope
pop
cmps
push
push
test
bound
call
xor
jl
rep
push
popa
adc
or
out
adc
shr
stos
or
inc
add
cmp
es
repnz
push
sub
push
lea
add
adc
xor
xchg
mov
add
dec
je
add
or
aaa
xchg
jb
fsubr
adc
add
adc
pop
jmp
sub
mov
retf
or
xor
push
das
into
stc
mov
add
pop
push
jl
jno
call
jmp
loope
nop
das
lock
cmp
in
add
pop
jmp
xor
pop
sub
fisttp
mov
in
ret
xor
inc
cmp
adc
inc
neg
adc
leave
adc
cmp
cmovo
mov
push
or
and
adc
clc
dec
cmp
sub
push
pusha
nop
call
mov
sub
add
aam
(bad)
sub
mov
popa
push
add
xor
mov
rol
fld
repz
sub
add
outs
and
or
dec
pop
cmp
mov
or
popf
(bad)
lock
inc
adc
out
pop
xor
xor
call
adc
adc
inc
push
push
inc
sbb
repz
or
xor
scas
je
or
xchg
je
mov
or
jl
cmp
xor
pop
test
and
mov
and
nop
mov
shl
xor
pop
sub
mov
cwde
cmp
push
add
pop
adc
pop
ret
mov
in
shr
pusha
pop
mov
mov
clc
rol
adc
data16
clc
xor
adc
cmp
mov
mov
add
inc
or
sub
and
add
mov
js
or
movs
push
sub
or
and
mov
js
jnp
pop
jg
adc
or
push
ret
push
sbb
push
push
and
sbb
sbb
cmp
fiadd
fsubr
ss
mov
adc
stos
ror
or
ds
daa
adc
test
imul
pop
cmp
mov
icebp
push
inc
call
mov
fs
push
mov
test
add
add
les
aas
push
std
sbb
mov
add
sbb
enter
ror
not
dec
mov
out
mov
sti
xor
add
jne
jo
fild
cmp
push
push
arpl
fcomp
lock
aad
inc
sbb
inc
inc
xor
or
out
push
in
loope
pop
aam
add
add
inc
inc
add
out
push
pop
inc
loop
jo
enter
dec
push
fnstsw
push
jno
jns
je
clc
fs
mov
lock
shl
or
(bad)
adc
jecxz
add
fabs
and
cdq
inc
(bad)
js
scas
cmp
dec
pop
xchg
push
inc
dec
dec
repz
push
add
xor
push
ins
sbb
sbb
cmp
sbb
call
fisttp
es
mov
xor
or
mov
dec
test
add
nop
dec
das
mov
or
aad
das
sub
push
test
jmp
add
fwait
adc
dec
lea
push
dec
jbe
jl
addr16
in
inc
je
sub
adc
and
loope
in
imul
adc
cmp
add
dec
fucomip
call
mov
in
fisubr
shr
fld
outs
mov
mov
movs
cwde
and
xchg
inc
out
mov
xor
and
or
(bad)
jo
mov
xchg
cwde
xchg
ret
and
dec
sub
xor
mov
inc
mov
jmp
and
sub
push
scas
or
and
or
and
leave
and
leave
enter
push
pusha
add
mov
sbb
fmul
sub
test
call
adc
fdivr
inc
and
dec
xchg
pusha
ret
adc
cmp
mov
jge
xor
shr
call
add
cmp
xor
dec
not
ror
and
add
aaa
dec
pop
call
xchg
cmc
fistp
pop
mov
shl
mov
add
add
ret
ror
js
in
dec
and
loop
retf
int
jbe
xchg
push
aad
jge
(bad)
sti
adc
popa
test
xor
xchg
xlat
shr
add
mov
shr
lock
xor
rcr
imul
ret
xor
lods
rcl
iret
sahf
out
dec
js
mov
mov
jbe
add
arpl
mov
pop
mov
pop
adc
push
pop
push
stos
and
sbb
enter
pop
xchg
inc
mov
int3
dec
jle
and
sbb
cmp
push
add
pop
lods
sar
enter
retf
ret
aaa
scas
add
sbb
call
je
xchg
mov
mov
xchg
mov
pop
add
jle
jl
push
icebp
aas
mov
je
mov
jmp
jnp
cmp
add
jmp
lahf
push
mul
(bad)
retf
pop
xchg
xchg
and
dec
cdq
push
push
sub
xor
cmps
aam
rol
enter
lock
nop
(bad)
push
out
adc
adc
outs
jne
ret
or
rcl
loopne
dec
push
stos
jge
sub
sub
push
movs
jmp
xchg
sbb
add
icebp
or
pop
add
into
pop
mov
push
lock
dec
loopne
imul
test
xor
sub
or
popf
add
dec
and
loopne
shl
push
jge
(bad)
sub
mov
cs
jmp
in
mov
inc
add
ror
mov
and
sub
and
push
add
push
mov
stos
adc
ret
jg
xor
cmp
jnp
and
jl
mov
push
add
dec
mov
inc
mov
jo
(bad)
inc
adc
xchg
push
stos
rol
int3
out
setge
sar
shr
cmp
add
or
xor
inc
movs
push
sub
and
adc
lea
cmp
fisttp
call
mov
loopne
cli
jle
sub
mov
add
mov
lods
sbb
adc
lods
cwde
cmp
or
fadd
(bad)
mov
inc
and
ja
or
inc
push
imul
jge
push
push
in
pop
and
sbb
adc
arpl
add
cmp
sahf
push
pushf
fcomp
test
add
aas
and
and
inc
sbb
inc
pop
std
push
cmp
lods
shr
ins
inc
push
punpckhbw
push
adc
jne
inc
xor
(bad)
test
mov
push
sbb
iret
mov
push
fidiv
dec
pop
and
or
inc
je
je
cmp
xchg
add
shl
dec
mov
ret
pop
or
loope
stos
adc
mov
mov
push
dec
xlat
ss
jo
repnz
sub
mov
mov
inc
inc
xchg
in
dec
and
adc
sbb
mov
add
rcl
test
and
mov
rol
xchg
inc
or
add
arpl
mov
add
jns
add
adc
lock
adc
push
hlt
outs
in
in
inc
adc
in
imul
adc
cs
into
inc
inc
fwait
data16
ret
pop
and
jmp
or
test
imul
inc
adc
mov
imul
or
xchg
clc
dec
or
jo
xor
mov
add
add
mov
jmp
and
or
ror
pop
cdq
sti
push
loopne
pop
scas
arpl
sub
stc
xor
ficom
mov
jbe
cmp
stc
push
xor
jmp
or
mov
ror
je
rcr
xchg
pop
out
pusha
mov
mov
mov
or
jmp
or
jge
movs
mov
cmp
iret
retf
sbb
push
sub
sub
pop
rcl
pop
adc
call
xchg
stos
sub
fucomi
fimul
iret
cmps
sbb
retf
into
sahf
jmp
nop
aaa
ficom
ret
enter
jle
arpl
adc
je
loopne
xor
in
push
rcr
repnz
xor
lea
out
add
(bad)
sub
(bad)
adc
push
enter
mov
aad
xchg
loopne
adc
stc
sbb
stc
arpl
das
pop
cmps
pop
cmc
cmp
pushf
mov
mov
adc
(bad)
fdivr
in
cmp
add
cmp
dec
sbb
and
movs
mov
cmp
mov
mov
push
cmp
sahf
xchg
iret
sar
outs
and
mov
aad
cdq
dec
jmp
push
mov
pop
ror
or
sbb
add
and
xor
add
add
rcl
sbb
fadd
cwde
xchg
int3
fld
inc
jne
jl
or
mov
sbb
ja
and
nop
adc
icebp
sub
push
inc
xchg
xchg
sbb
fwait
dec
cmps
and
int
push
loop
add
ret
lea
xchg
cmp
add
sahf
rol
mov
dec
lock
xlat
and
ret
ret
jbe
sub
lea
or
push
xor
add
stos
push
inc
and
fwait
cmp
cmps
mov
fsubr
sahf
movs
sub
in
mov
(bad)
jns
cmp
mov
adc
enter
iret
push
push
xchg
jge
cmp
push
mov
and
mov
cld
outs
mov
lea
pushf
stc
or
cmp
test
fisub
adc
mov
fnstcw
fadd
adc
or
scas
jo
or
xchg
cmp
mov
fsub
and
aas
add
push
pop
push
pop
ins
pop
arpl
jns
in
inc
push
push
dec
ror
test
pop
daa
or
sub
add
test
test
cld
mov
sub
xchg
adc
push
cwde
loope
loopne
mov
dec
push
lods
movs
movs
push
sbb
dec
jae
ficom
in
xor
xor
xchg
push
mov
fwait
shl
and
nop
ins
(bad)
sub
pop
add
inc
pop
add
mov
sub
js
sbb
xor
lods
js
(bad)
dec
pushf
leave
fnstcw
adc
xchg
es
mov
or
or
sbb
xchg
imul
adc
jno
jg
daa
or
xchg
xchg
fisttp
fst
fild
js
or
xchg
jl
iret
jge
cmp
xor
imul
cmc
xor
and
push
or
add
enter
xlat
jne
mov
mov
arpl
stos
adc
cmps
mov
mov
rcl
call
es
loopne
pop
cli
pop
into
movs
popa
inc
xlat
test
mov
in
aaa
imul
push
int3
sbb
xor
dec
mov
call
push
hlt
dec
mov
or
mov
inc
mov
mov
push
ret
inc
rol
xchg
and
in
xor
mov
sub
loop
sbb
or
inc
sub
xchg
rcl
clc
pusha
loopne
sub
cmp
mov
lahf
xor
(bad)
mov
pop
rol
inc
mov
outs
add
in
rcl
fstp
pop
test
cmc
ret
call
ins
push
mov
ins
jo
push
mov
push
fwait
cs
nop
stos
call
inc
leave
push
inc
in
jl
stos
xchg
jmp
push
push
adc
outs
cmp
mov
inc
inc
fdiv
cmp
ss
push
add
push
pop
mov
cdq
jp
or
jo
xor
mov
aas
dec
mov
fisttp
mov
mov
add
cmp
adc
(bad)
mov
fwait
popf
mov
repnz
fmul
rcl
dec
ror
mov
les
(bad)
mov
(bad)
jg
and
xor
je
ds
inc
pop
sbb
push
mov
arpl
push
push
enter
jmp
add
cmp
or
inc
fcmovnu
js
inc
arpl
inc
cmp
inc
in
dec
and
cmps
xor
loop
js
push
push
jp
mov
iret
(bad)
adc
cmp
xchg
mov
les
mov
shl
xor
dec
(bad)
icebp
ret
or
or
fcom
outs
cmp
push
(bad)
mov
mov
stc
(bad)
jmp
mov
pop
jne
adc
add
pop
mov
lods
sar
adc
sbb
cmc
rol
add
dec
mov
or
mov
std
popf
jno
xchg
xchg
ret
cmp
jg
sar
sub
jl
add
mov
mov
stos
pop
call
shl
mov
cmp
clc
test
lea
mov
sub
mov
mov
lock
push
test
mov
loope
pusha
bound
or
mov
jl
test
sub
mov
dec
je
test
mov
ss
sti
cmp
mov
sub
shr
neg
mov
das
dec
je
add
adc
shr
jne
sub
sbb
mov
icebp
dec
inc
lock
jmp
dec
pop
(bad)
pop
cmp
jne
xor
dec
lahf
rol
leave
adc
or
clc
push
jne
loope
mov
mov
xor
stos
cmp
sbb
pop
pop
mov
repz
push
dec
ds
push
sub
sub
aad
pop
add
arpl
mov
dec
jmp
and
mov
adc
pushf
cmp
dec
retf
fild
test
sahf
test
jo
add
addr16
movs
in
test
xlat
popa
jg
mov
add
mov
sub
ins
call
cmp
outs
inc
call
mov
or
je
sub
push
inc
inc
cmp
add
push
mov
mov
js
std
and
loope
xor
test
lods
call
jns
imul
push
ret
fsubrp
pop
and
pop
jmp
fstp
sub
xor
ins
les
cmp
loope
test
or
adc
pop
add
dec
adc
in
pop
stos
cmp
and
in
loop
addr16
xchg
push
xchg
inc
lds
xor
ins
je
fdiv
mov
out
call
ror
loope
mov
push
in
out
push
mov
add
in
retf
rcl
js
cld
(bad)
adc
xor
std
sub
jns
loopne
out
mov
mov
jo
sar
mov
push
jle
ror
jge
cld
adc
cmp
cwde
push
add
cmp
dec
ret
js
(bad)
daa
cmp
adc
jl
mov
adc
std
cli
mov
pop
mov
je
sbb
adc
pusha
fwait
pusha
mov
shl
jns
clc
adc
adc
sahf
and
xchg
repz
ror
add
xor
cli
loop
add
and
sbb
in
and
mov
dec
adc
and
or
cmp
ds
mov
fs
or
push
test
lods
ins
dec
call
xchg
mov
in
pop
mov
shl
bound
inc
adc
pop
push
(bad)
cmp
adc
adc
jbe
cmp
mov
hlt
gs
dec
xlat
and
push
jmp
jle
addr16
xchg
xor
fst
add
mov
fisubr
(bad)
mov
lods
and
mov
ret
gs
sbb
push
not
lods
adc
push
add
les
pop
mov
imul
adc
sbb
add
push
push
push
or
es
stc
cdq
clc
mov
vpor
int3
mov
xchg
xor
outs
js
jp
mov
ss
sbb
fadd
enter
sbb
and
inc
test
push
rcr
cmp
clc
std
mov
or
jmp
outs
or
test
adc
pusha
push
adc
cmp
xor
fild
xor
add
cmps
nop
or
dec
cmp
push
pusha
dec
js
sbb
les
adc
jbe
sbb
stos
fisttp
inc
loop
inc
cmp
jg
je
sub
das
test
sub
dec
jne
xchg
ror
in
test
jmp
scas
xor
sub
(bad)
xchg
mov
cmp
or
fwait
inc
icebp
inc
xor
or
add
in
inc
or
(bad)
cmps
jmp
sub
cmp
cmp
das
mov
inc
dec
sub
mov
adc
ror
or
out
push
and
cmp
cdq
pushf
or
inc
aam
les
enter
pop
sbb
rcl
ficomp
push
inc
rcr
xchg
(bad)
daa
inc
push
push
dec
(bad)
popa
ss
or
ja
pushf
ins
cwde
push
hlt
push
cs
xor
mov
sbb
aam
mov
or
jnp
xor
outs
pop
jo
push
bound
fnsave
sbb
pushf
push
jle
mov
push
cs
xchg
test
push
in
shl
mov
ins
add
imul
jge
sub
xchg
mov
cwde
mov
mov
inc
cwde
ds
adc
push
movs
dec
into
adc
push
stc
jge
inc
xchg
push
add
xor
adc
popa
jb
shl
aam
repnz
fadd
jecxz
and
cwde
xchg
or
pop
sub
cmp
call
fstp
mov
popf
in
inc
dec
in
push
sbb
mov
sbb
out
xchg
add
mov
ja
add
je
idiv
lods
ins
add
dec
push
push
sbb
jne
mov
adc
jns
xchg
or
in
pop
mov
dec
add
or
hlt
sbb
call
adc
jge
jne
xchg
xlat
mov
adc
adc
lahf
repnz
adc
sar
lock
test
loope
push
inc
mov
sbb
jge
inc
out
je
or
sub
dec
ss
push
in
or
rcl
repz
adc
jne
or
dec
lock
retf
mov
cmp
ret
fmul
xchg
or
push
loopne
aam
(bad)
inc
jmp
push
rol
xor
lock
shl
or
or
sbb
dec
in
dec
xor
mov
add
sahf
sub
jb
int
cmp
mov
dec
jl
and
mov
movs
push
adc
in
ret
scas
sbb
push
and
adc
hlt
push
inc
xor
fs
aam
fisubr
add
jmp
or
loop
jno
mov
popa
add
sbb
mov
push
or
pop
ret
shl
dec
jle
cwde
add
mov
sub
adc
pop
adc
xor
adc
or
dec
jmp
sub
sahf
aam
loopne
or
jg
inc
ror
cmp
adc
retf
loopne
inc
pop
mov
sub
adc
jg
push
adc
movzx
jl
add
(bad)
loop
rcl
sbb
arpl
outs
sbb
in
jmp
add
icebp
sar
add
add
adc
mov
popf
pop
ss
stc
cli
mov
mov
add
test
bound
mov
or
(bad)
sub
js
mov
dec
mov
adc
pop
fcom
mov
xor
test
pop
jnp
enter
jge
push
sbb
xchg
or
inc
pop
icebp
sbb
das
scas
add
dec
cmp
call
push
enter
stc
ror
pop
or
les
pop
adc
shl
ror
xchg
outs
outs
add
sbb
punpckhbw
nop
inc
cmp
mov
inc
into
or
push
mov
hlt
add
mov
jns
jb
nop
int3
popf
call
xchg
popa
and
mov
xchg
into
(bad)
lea
test
aad
add
mov
std
test
int3
cli
lea
adc
or
lahf
and
nop
pushf
or
es
fild
jp
out
iret
(bad)
je
vmread
shrd
iret
movs
lods
or
or
loopne
shr
shr
jo
pop
cmps
test
cmp
fist
push
or
loop
add
mov
jg
gs
fidivr
push
aam
dec
loopne
out
dec
cs
cmp
add
imul
pop
retf
jno
arpl
fldcw
in
add
dec
fadd
imul
(bad)
jmp
cmp
loope
push
inc
cmp
outs
ret
and
inc
stos
push
sub
jbe
rcl
push
add
jae
push
fdivr
mov
xor
aaa
nop
sbb
icebp
jmp
sar
xchg
nop
adc
push
push
cmps
aas
leave
lds
popf
call
outs
inc
xor
jnp
cmps
shl
test
test
loop
jno
add
test
and
sub
adc
jo
lods
popf
fs
fidivr
pop
dec
imul
and
rol
pop
rcr
or
popa
arpl
add
mov
mov
test
pushf
sbb
sbb
shl
add
mov
in
out
lea
cdq
retf
enter
cmp
cmp
dec
push
rol
mov
jne
xchg
scas
jne
pop
cmc
mov
stos
push
pushf
ja
adc
sar
loop
addr16
pop
(bad)
nop
pop
mov
mov
pusha
fsub
inc
loop
add
retf
clc
aaa
outs
add
mov
enter
cmp
aaa
dec
rcl
lea
fwait
or
xchg
pop
ja
or
rcr
nop
push
(bad)
or
xor
or
mov
xchg
adc
mov
sub
clc
ja
into
add
out
xchg
cmc
scas
rcl
add
pop
pop
sub
mul
add
nop
sar
test
xchg
cwde
jbe
add
ret
and
imul
inc
pop
add
push
xchg
xchg
(bad)
repz
adc
out
ret
mov
push
lods
or
enter
jo
push
add
rol
sub
xor
push
sti
shl
js
add
jmp
sub
repnz
mov
gs
mov
bound
add
mov
es
xor
xor
jmp
hlt
push
xchg
mov
and
int3
jae
cmps
jmp
movs
xchg
fstp
ins
in
ja
shr
push
push
add
clc
cmovne
ds
movs
jmp
or
sti
pop
int
cmps
into
push
mov
call
or
arpl
cmp
sub
push
mul
cmps
inc
xor
jmp
mov
ror
cld
sbb
add
mov
addr16
pop
dec
lock
or
mov
or
mov
mov
pop
cmps
sbb
mov
push
xchg
sbb
inc
repnz
loopne
shr
and
and
and
add
les
add
push
add
movs
mov
or
jmp
jge
leave
adc
sub
in
xchg
sub
mov
out
mov
ss
sub
add
inc
nop
pusha
js
fcmovu
add
inc
push
jge
(bad)
pop
xchg
pop
repnz
add
inc
mov
ins
mov
mov
or
fiadd
xor
inc
aaa
mov
mov
stos
pop
cmp
push
push
xchg
mov
jne
jecxz
loope
add
jle
and
inc
fs
inc
adc
and
mov
icebp
cwde
push
out
call
adc
inc
add
push
mov
enter
into
sbb
pop
in
aam
hlt
push
mov
cmps
lock
mov
cmp
ins
loop
add
mov
jb
pop
add
test
xchg
hlt
(bad)
adc
push
test
movs
push
bound
push
adc
cvtdq2ps
je
sub
pop
sbb
cs
dec
pop
dec
retf
dec
mov
enter
cli
je
sbb
cmc
hlt
pushf
push
add
mov
icebp
sbb
push
mov
retf
retf
retf
mov
xchg
lock
jo
sub
dec
sahf
fistp
sub
in
mov
or
imul
in
dec
leave
and
ret
sub
adc
rcr
pop
test
push
mov
popa
mov
and
sbb
add
mov
into
add
sbb
mov
fnsave
in
out
jno
sbb
dec
in
add
les
jecxz
xor
xchg
and
ret
cmp
add
mov
dec
enter
or
pop
cmp
inc
xchg
hlt
movs
mov
sub
aas
adc
inc
cmp
loope
xchg
(bad)
xor
xchg
lahf
std
sbb
adc
jmp
pop
jmp
cmp
pop
push
adc
js
push
scas
jmp
and
mov
test
or
pop
xor
inc
xlat
push
setne
mov
or
mov
sub
addr16
(bad)
mul
mov
xchg
push
dec
adc
std
add
sub
adc
shr
pop
add
sbb
retf
add
push
adc
jmp
pop
ret
push
push
stos
add
push
int3
push
bound
frstor
sub
in
mov
xchg
xchg
jbe
cmp
pop
lock
push
gs
lock
xchg
jne
xchg
into
retf
mov
dec
push
pop
repnz
mov
mov
mov
(bad)
lock
cs
fisttp
jle
das
pop
mov
fwait
jmp
inc
popa
mov
mov
sar
cli
imul
shl
jne
clc
out
jl
adc
and
dec
pop
add
std
out
icebp
mov
add
add
inc
cmp
push
mov
loope
loopne
jb
inc
mov
cmp
ds
jnp
mov
lods
imul
dec
jae
mov
mov
mov
sbb
(bad)
popf
mov
dec
lods
and
add
mov
(bad)
dec
cs
sub
retf
lods
inc
pop
iret
xlat
add
mov
xor
daa
call
and
or
mov
not
adc
mov
mov
es
push
pop
ret
or
rcr
inc
adc
sub
pop
inc
lods
push
ret
pop
push
sub
cmps
loope
popa
es
fwait
enter
pusha
push
shl
push
ret
clc
jp
xor
or
imul
cs
dec
mov
mov
pop
sbb
jno
gs
adc
(bad)
and
fldenv
mov
clc
sbb
sbb
jmp
and
popa
xchg
xor
push
xor
movs
push
adc
cmp
scas
adc
push
jo
add
loopne
push
in
xor
push
call
dec
repz
inc
imul
shl
cmc
push
stos
hlt
push
xchg
mov
dec
stos
mov
and
cs
mov
add
add
add
and
pop
xor
cmp
or
and
in
or
xchg
dec
sub
jo
sbb
lea
lock
xchg
inc
imul
mov
test
mov
loopne
shl
push
cmps
and
mov
pop
and
jmp
inc
xchg
cmp
mov
gs
and
movs
mov
rcr
dec
xchg
inc
add
xchg
sbb
sub
pop
sar
ret
push
clc
icebp
(bad)
mov
or
push
and
mov
and
fmul
adc
cmp
mov
push
xchg
and
dec
stos
inc
push
push
je
(bad)
inc
pop
sti
inc
mov
xor
inc
push
add
pop
xor
repnz
ins
not
add
mov
sbb
sar
mov
dec
jp
mov
das
push
push
inc
in
in
mov
or
cmp
jne
leave
aam
push
dec
adc
or
das
fisubr
iret
cmp
inc
jmp
and
jmp
and
mov
adc
inc
add
popa
add
dec
aaa
stc
(bad)
push
jmp
into
ins
add
add
xor
icebp
or
cmp
add
jne
push
push
daa
pop
pop
movs
pop
xor
sbb
adc
inc
jle
call
ret
and
arpl
sub
jmp
mov
aas
lock
ds
or
push
or
jne
cmp
sti
xor
popf
(bad)
cld
jmp
rol
push
mov
dec
add
lahf
js
sbb
js
addr16
push
mov
cld
cmp
test
scas
mov
add
xchg
or
jne
xor
push
mov
sub
and
inc
push
pop
sbb
lock
aam
adc
xor
cwde
jns
les
aam
cvtpi2ps
or
adc
retf
dec
das
(bad)
mov
aaa
or
mov
push
clc
push
loop
movs
cdq
or
loopne
test
test
je
push
les
aad
inc
fadd
add
mov
sub
fnstcw
jmp
push
sub
movs
xchg
mov
stc
cmp
push
xchg
cmp
or
cs
add
inc
pop
(bad)
ss
repnz
(bad)
je
xor
dec
inc
sbb
sbb
xor
add
xor
sbb
pop
xchg
mov
or
mov
test
or
pop
aam
call
adc
cmp
jne
add
mov
fstp
adc
retf
cs
jmp
ins
jmp
jle
cmp
or
fs
fidiv
cmp
or
push
or
jmp
dec
adc
scas
and
arpl
test
mov
sub
neg
or
add
add
and
mov
int3
ret
iret
pop
xchg
cdq
or
aas
test
pusha
repnz
mov
push
mov
dec
aam
and
cmp
xchg
sbb
mov
pushf
popf
or
mov
popa
push
cmps
xor
dec
add
jbe
cmp
pop
or
repz
js
repnz
add
repz
jne
dec
retf
mov
into
test
sub
mov
mov
sbb
mov
mov
add
xchg
imul
sbb
xor
nop
xchg
repnz
std
pop
jne
add
add
adc
clc
mov
outs
push
or
dec
jne
rol
sbb
pop
mov
xchg
jo
mov
int
jge
fdivr
out
stc
mov
adc
into
popa
xor
xor
push
nop
inc
add
jb
cmp
loopne
test
adc
or
ja
xor
cmp
in
test
or
iret
dec
jmp
xchg
add
stos
das
ret
add
fstp
or
or
sbb
add
add
into
xor
call
jmp
retf
dec
inc
lea
adc
push
mov
ins
cmp
rcr
gs
imul
in
loopne
rcl
mov
pop
jmp
jmp
les
dec
xor
jg
and
add
push
mov
push
inc
loopne
inc
lock
cmp
jp
pop
ins
adc
fst
add
push
push
sub
push
inc
loopne
add
xchg
sahf
mov
pop
jl
cmp
test
mov
inc
or
pop
pop
push
and
and
call
movs
(bad)
sub
dec
xor
das
sbb
inc
rol
fadd
xor
addr16
ss
pop
addr16
pop
jno
sub
sbb
fnsave
mov
push
or
push
inc
push
inc
outs
cmp
sub
pop
sub
add
cmp
mov
rcl
fstp
shr
mov
(bad)
leave
mov
es
sbb
dec
daa
imul
mov
inc
test
lea
mov
addr16
retf
fiadd
xchg
jnp
push
in
sbb
and
mov
jno
mov
mov
push
movs
pop
mov
hlt
sub
mov
xor
xor
js
loop
je
outs
adc
xor
mov
pusha
dec
jbe
push
cli
aam
xor
call
shl
mov
or
cld
and
and
out
push
cmp
push
inc
push
push
dec
jl
mov
pop
cmp
and
or
push
clc
adc
cmp
imul
mov
sbb
inc
mov
and
retf
and
fwait
scas
adc
jmp
or
push
dec
mov
clc
mov
ret
push
jl
arpl
sub
jb
or
inc
inc
pop
push
pushf
stos
or
jmp
push
lahf
adc
dec
pop
jae
mov
mov
fnsave
cmp
dec
sub
in
repz
loopne
call
push
and
jmp
(bad)
ins
or
iret
push
test
(bad)
xchg
and
repz
xor
rep
test
mov
daa
adc
js
add
cmps
daa
cmp
jp
mov
dec
push
ret
fcomip
repnz
or
dec
repz
pop
(bad)
adc
jnp
xchg
fimul
retf
(bad)
loopne
les
jno
add
fs
xor
and
retf
and
je
cmp
or
lock
stos
repz
test
mov
ret
xor
xor
and
fsubr
cmp
push
and
mov
imul
mov
in
inc
cmp
mov
mov
outs
sbb
push
mov
inc
pop
adc
out
sbb
push
aam
xchg
fst
xor
inc
pop
push
mov
jecxz
cmp
fcomp
push
or
adc
call
jg
test
shr
mov
rcr
retf
pop
fs
add
pop
add
sub
loopne
push
dec
xlat
adc
mov
xlat
in
sbb
sbb
jno
pop
or
push
adc
push
pop
jb
mov
neg
jnp
or
jecxz
(bad)
push
sub
adc
je
push
fadd
pushf
xchg
fmul
or
jmp
push
sbb
sbb
dec
movs
jecxz
sub
mov
sbb
or
or
xchg
sbb
(bad)
retf
and
repnz
add
sbb
pop
mov
inc
pop
lods
pop
lods
lea
inc
cmp
sub
in
or
js
push
sub
sbb
xor
cs
push
mov
xchg
push
add
fnstcw
loopne
push
or
jmp
mov
pop
mov
inc
cmp
je
mov
nop
cmp
mov
pop
cli
xchg
cmc
rcl
xchg
pop
sbb
pushf
mov
inc
loope
and
xor
(bad)
mov
rol
jae
loopne
sbb
call
sub
dec
mov
or
or
xchg
cmp
mov
movs
les
cmp
mov
sbb
add
push
icebp
repz
(bad)
fstp
dec
in
retf
fnstenv
mov
pusha
xchg
and
mov
sahf
cmps
add
sub
fist
fstp
fst
cmp
add
hlt
hlt
and
and
jl
inc
mov
mov
leave
inc
leave
sbb
xchg
and
mov
push
or
imul
xor
loopne
mov
outs
push
push
pop
pop
pop
(bad)
push
imul
lea
and
push
or
arpl
mov
leave
jo
call
cwde
or
add
mov
je
sbb
xchg
xor
mov
ins
rol
cdq
pop
ror
inc
or
push
icebp
pop
adc
sbb
test
neg
add
adc
or
aad
lods
inc
mov
jle
js
mov
xor
pusha
rcl
shr
jp
out
stos
movs
pop
sbb
pop
test
lock
lock
jl
pop
test
std
(bad)
retf
clc
jl
or
mov
in
aaa
inc
mov
or
add
fcomp
into
lods
daa
push
sbb
mov
mov
loop
adc
mov
xchg
or
or
jno
and
inc
nop
pop
loopne
mov
sbb
inc
or
fnstenv
jmp
out
jmp
out
pop
shl
adc
and
lods
in
lea
sbb
adc
aas
xor
and
ins
outs
xchg
and
xor
mov
adc
out
xor
lahf
jmp
add
dec
sub
ret
adc
(bad)
aas
jmp
or
(bad)
pop
sbb
sti
nop
xchg
push
aam
mov
repz
push
mov
mov
mov
cmp
jne
loope
loop
pop
push
loopne
push
cmp
add
and
clc
sbb
ins
mov
push
gs
sbb
add
in
add
lods
dec
call
jne
jp
or
movs
adc
push
mov
daa
adc
or
mov
sbb
arpl
pop
iret
jo
movs
cmp
clc
sti
adc
dec
xchg
dec
jge
cmp
or
or
push
or
arpl
mov
adc
push
inc
mov
je
daa
add
dec
movs
out
xlat
pop
adc
ds
or
retf
movs
dec
(bad)
dec
jae
out
add
mov
add
sbb
jmp
dec
inc
and
pop
add
jo
inc
add
outs
push
add
jmp
in
cmp
je
mov
mov
int3
mov
(bad)
(bad)
je
cmp
mov
lds
xchg
jne
add
jmp
add
sbb
cmp
je
sti
jne
cmp
sbb
sahf
popf
psrld
xor
stos
mov
jmp
inc
cmp
adc
cmp
cmp
es
sub
sti
movs
(bad)
sbb
fistp
inc
stos
jno
add
adc
out
jmp
idiv
sbb
mov
and
pop
fmul
in
mov
fdivr
sti
pop
jge
and
sub
add
je
mov
adc
mov
sub
fmul
fs
ficomp
and
gs
icebp
int
out
push
ret
jo
or
xor
dec
push
fs
push
loopne
jmp
mov
arpl
loopne
ins
pop
sub
ficomp
popf
add
into
xor
or
and
xchg
push
test
add
jmp
fldlg2
jne
push
sub
dec
or
xchg
shl
(bad)
pop
and
adc
pusha
and
add
adc
ret
jns
sbb
and
js
jle
test
inc
xor
lock
sub
test
jecxz
xor
les
jg
or
das
xchg
and
push
nop
in
mov
and
jle
in
xchg
add
sahf
lods
lock
add
cmp
mov
jne
shl
jle
pushf
fs
mov
and
add
mov
dec
cmp
or
cmp
sti
or
add
xor
push
add
push
cmp
ret
pop
ins
pop
push
rol
xchg
mov
and
(bad)
sar
mov
aam
dec
lods
jns
pop
nop
pop
mov
jbe
adc
adc
dec
fcom
pop
ins
rcr
mov
scas
dec
popf
xchg
stos
ins
dec
push
mov
pop
xchg
adc
mov
outs
shl
cmp
fidivr
sub
ss
xchg
mov
sar
xchg
xor
aam
call
lea
cmp
jb
or
cwde
retf
iret
or
loope
mov
mov
test
test
or
push
pop
pop
pop
gs
pop
jne
lods
cmc
leave
xor
mov
push
sbb
mov
pop
add
xor
or
inc
cmp
xor
push
cwde
fidiv
mov
and
neg
rcl
ds
mov
sahf
dec
rol
or
push
xor
push
jo
mov
sar
push
out
sbb
mov
or
out
xor
push
and
xor
dec
push
jmp
(bad)
cld
jnp
jo
adc
shl
jb
add
cmp
add
mov
pop
sar
cmp
cli
leave
push
cmp
jge
push
pop
jne
es
pop
dec
cmovs
shr
add
pushf
retf
(bad)
jmp
jb
loop
and
sar
cli
jl
cmp
leave
jae
pop
call
and
leave
inc
aam
add
push
(bad)
push
and
cld
add
cdq
not
cld
mov
mov
inc
pop
xchg
xchg
inc
mov
adc
sub
push
inc
call
push
lods
in
xchg
or
cmp
add
mov
add
stc
xchg
xor
mov
push
mov
dec
sub
sbb
or
pop
dec
dec
push
jmp
or
dec
push
fadd
sub
and
movs
sbb
mov
out
rol
retf
or
push
add
dec
ffreep
in
or
sbb
sub
sub
pop
mov
pop
sar
add
lea
mov
rcl
inc
sbb
or
arpl
pop
mov
call
push
fcomp
pop
jecxz
js
ficomp
gs
push
jno
es
jbe
inc
xchg
xchg
pop
les
xor
dec
push
xor
and
dec
es
in
fcom
fadd
mov
mov
or
and
and
pusha
xchg
xor
ds
stos
fbstp
push
dec
push
mov
lods
inc
or
fcomp
jo
mov
retf
(bad)
mov
adc
and
add
add
test
mov
sub
adc
push
punpckhbw
and
cwde
mov
inc
iret
jge
aad
jmp
test
inc
out
iret
rcr
es
sbb
sub
add
sbb
add
lea
ret
lea
ret
inc
and
xor
imul
push
imul
fsub
loop
inc
sar
dec
(bad)
imul
cli
or
iret
cld
repz
bound
adc
lods
or
cmp
shl
mov
xchg
and
stc
shr
and
into
push
mov
or
jmp
or
(bad)
aad
xlat
ins
mov
or
jmp
inc
sbb
and
pop
add
xor
leave
dec
add
adc
rcl
shl
(bad)
fstp
pop
add
fld
fcomp
add
loopne
les
xor
adc
imul
arpl
enter
adc
sub
aam
add
add
arpl
mov
fnstsw
push
pusha
ds
and
mov
xchg
mov
xchg
fbstp
push
xchg
jns
xchg
pop
lods
push
adc
inc
pusha
mov
and
jmp
add
sbb
jns
and
push
sub
adc
inc
mov
and
push
sahf
sbb
add
aas
cli
pop
test
sbb
xchg
ds
inc
fmul
lock
push
loopne
push
add
les
xchg
xor
push
adc
test
(bad)
(bad)
jg
fisttp
cwde
push
sar
ins
call
faddp
fdivr
add
xchg
icebp
push
adc
mov
or
add
pop
pop
into
jle
xchg
dec
push
sbb
test
imul
adc
dec
and
xchg
dec
jne
ret
adc
repnz
lock
xchg
sub
adc
loopne
push
xchg
add
out
and
jmp
inc
push
inc
add
inc
push
lock
aas
and
call
xchg
enter
dec
jg
jl
and
and
fistp
add
sbb
out
mov
fldenv
add
sbb
out
shl
inc
jne
fsubr
mov
xor
jne
push
pop
pop
adc
jne
sub
fcom
mov
imul
lock
xchg
mov
inc
xchg
fs
add
shl
arpl
int
movs
push
cmp
adc
ret
push
cmps
jae
jp
xchg
push
adc
test
jmp
mov
loopne
mov
sub
jo
fsub
and
jp
outs
retf
add
(bad)
add
push
je
or
aas
mov
dec
mov
std
out
xchg
cmps
inc
jmp
push
mov
in
in
pop
mov
jecxz
mov
push
shl
jecxz
mov
add
std
sbb
and
aaa
xchg
push
add
add
jne
or
movs
xchg
or
jns
pop
adc
leave
dec
(bad)
in
rcr
lock
pusha
leave
add
or
or
inc
cmp
jb
dec
lods
sti
push
movs
mov
sub
cmps
inc
jp
pop
loopne
aad
adc
push
mov
push
adc
std
(bad)
test
std
mov
mov
lods
test
adc
gs
add
int
and
aaa
and
xor
adc
fcmovnu
push
mov
(bad)
and
mov
and
and
and
or
and
pop
inc
push
dec
jne
inc
pop
inc
fisttp
adc
sub
xor
ficom
clc
adc
bound
aam
clc
mov
cmp
dec
clc
ror
mov
jp
or
(bad)
aad
push
mov
pop
push
es
jp
add
mov
push
lods
adc
mov
add
das
jmp
cmp
xchg
jo
add
mov
and
loopne
out
sbb
lds
pusha
add
imul
xchg
and
dec
xchg
sub
push
add
cmp
fs
repz
push
sbb
and
mov
ror
jl
lea
loopne
pop
mov
(bad)
cmp
rcr
or
and
jl
std
add
jbe
jbe
loopne
test
and
mov
inc
popf
data16
xchg
adc
xor
inc
dec
pushf
mov
mov
cdq
mov
loopne
mov
adc
fsubr
das
shl
or
aas
je
cmp
ss
xor
fsub
inc
mov
push
push
add
movzx
inc
add
aam
stc
or
inc
pop
add
and
xchg
ds
dec
mov
mov
or
jae
inc
add
jns
sub
mov
mov
push
lock
pop
clc
mov
push
push
(bad)
cmp
lods
movs
sub
or
mov
pop
cld
or
les
mov
mov
cmp
xor
je
cmp
je
pop
dec
mov
add
and
xchg
fsubr
and
sbb
mov
or
daa
inc
cmp
(bad)
out
jns
jb
pop
not
outs
clc
xchg
loopne
in
adc
dec
ret
clc
inc
sub
je
mov
push
xor
imul
and
loope
test
push
inc
inc
adc
push
or
sub
jnp
add
loopne
cwde
pop
pop
inc
fcomp
es
repz
ja
dec
xor
jb
call
pop
inc
fld
add
inc
mov
movs
xor
mov
or
push
jl
jmp
inc
hlt
clc
push
or
shl
in
add
dec
pusha
dec
ret
rcr
outs
or
add
lea
(bad)
sbb
mov
add
jno
mov
shr
xor
add
pop
mov
jmp
mov
mov
mov
push
jle
aam
clc
data16
cmp
jb
repz
loopne
push
out
hlt
add
clc
or
dec
dec
lock
adc
lock
imul
hlt
clc
sub
or
or
adc
inc
pop
test
iret
loopne
xchg
cmps
out
adc
add
repnz
push
fst
dec
add
loopne
push
rcr
aad
jmp
sbb
adc
das
sub
add
pop
sub
fimul
out
call
inc
or
dec
jo
pop
xlat
lods
xchg
outs
stos
cmp
mov
inc
out
hlt
lock
nop
xchg
inc
je
cmp
and
loopne
fsubrp
sub
sbb
jne
imul
or
pop
sbb
mov
xor
pop
add
loopne
mov
add
arpl
add
fsub
sub
dec
mov
cmp
add
cld
rcl
push
sbb
xor
sub
scas
adc
xor
out
sbb
ror
sub
push
push
add
shl
into
cli
dec
adc
dec
inc
sbb
mov
inc
jnp
dec
out
gs
or
mov
sub
test
sbb
in
push
fwait
jp
(bad)
push
push
test
call
out
imul
ds
inc
imul
(bad)
fcmovnb
mov
xchg
popa
jne
nop
js
adc
and
jge
adc
pusha
adc
add
test
adc
lock
push
sbb
(bad)
jp
jecxz
lea
inc
test
test
adc
jmp
push
push
push
mov
outs
adc
adc
add
mov
sbb
add
adc
sub
inc
adc
pop
adc
in
sbb
mov
ss
and
lock
push
cs
lock
lock
sub
or
sub
push
push
daa
adc
shr
dec
and
mov
add
pop
and
mov
cs
nop
or
sbb
call
sub
mov
sub
push
xor
and
xor
dec
sub
or
xchg
lods
pop
loopne
cmp
aam
add
cmp
jl
ins
cmps
xchg
mov
dec
in
inc
or
or
sbb
jae
add
ds
cmp
cld
jnp
inc
les
retf
in
mov
ins
aaa
inc
push
in
adc
aam
add
jns
out
dec
dec
dec
dec
into
and
sbb
ds
xchg
call
mov
arpl
imul
adc
mov
pop
lods
inc
stc
rol
cli
push
jns
ret
mov
mov
pop
sbb
and
movs
xchg
stos
imul
shr
inc
je
lods
cmps
xchg
aas
clc
xor
xchg
rol
cmp
xor
call
mov
pop
jns
push
xor
inc
mov
das
xchg
ss
cmp
out
cs
sbb
in
adc
stc
pop
icebp
inc
call
mov
add
jne
cli
push
add
cmp
movs
jb
imul
adc
inc
mov
or
aas
xor
sbb
cmp
dec
sub
in
lock
mov
test
cmp
hlt
test
push
dec
fisttp
xor
cmp
clc
fnsetpm(287
add
pop
adc
into
adc
push
push
call
cmp
mov
mov
and
mov
out
add
sahf
test
inc
lea
jne
jb
inc
dec
outs
mov
push
loop
add
mov
in
in
(bad)
in
push
push
in
mov
lods
stos
mov
lds
push
or
add
test
mov
push
es
sub
jno
adc
inc
sbb
nop
and
in
fmul
retf
sbb
(bad)
sub
or
pop
inc
sub
sub
add
sbb
add
push
test
inc
aad
and
aam
push
and
push
sub
and
aam
add
es
add
inc
mov
ret
hlt
dec
or
inc
dec
sub
pop
pop
push
add
les
js
push
fisub
add
add
test
js
mov
in
les
rcl
add
popa
dec
inc
aaa
adc
pusha
add
push
jge
es
ins
stos
mov
inc
loopne
int3
push
pop
sbb
iret
mov
test
dec
inc
inc
mov
and
aaa
mov
cmp
rol
sub
mov
scas
mov
imul
pop
enter
add
push
jecxz
cmp
jl
inc
lods
push
or
or
js
and
pop
jmp
int
loopne
jge
(bad)
adc
outs
and
call
xchg
sbb
xlat
loopne
fcom
in
xor
dec
xchg
stc
xchg
mov
dec
or
pop
mov
add
mov
pop
mov
jno
and
cmp
add
pushf
or
mov
rcr
xlat
sub
mov
gs
mov
lods
xlat
into
push
xor
push
adc
mov
mov
sbb
mov
or
minps
adc
shr
add
adc
and
push
sar
sbb
xchg
aam
add
push
jmp
ret
jbe
test
aaa
nop
scas
clc
mov
push
push
mov
fmul
sub
inc
pop
push
mov
inc
icebp
xchg
pop
mov
pop
cmp
(bad)
adc
jge
test
cmp
rol
and
jecxz
(bad)
add
fcomp
cmc
add
rcl
dec
(bad)
loopne
call
enter
and
test
arpl
add
cmp
fdiv
sbb
dec
fmul
pushf
or
shl
int3
adc
ds
je
jo
aam
loopne
cmc
add
cmc
fcomp
loop
shl
or
inc
jb
add
pop
dec
xor
xchg
pop
sbb
pop
push
mov
loopne
or
xchg
(bad)
sar
mov
add
repnz
push
aam
add
and
enter
add
sar
push
daa
int
aam
pop
fisttp
nop
and
cdq
nop
dec
(bad)
enter
movs
sbb
enter
jecxz
adc
ror
inc
es
xchg
xchg
aam
mov
les
inc
dec
mov
add
and
inc
xor
(bad)
fadd
jl
les
and
enter
add
(bad)
icebp
add
in
std
add
add
sbb
(bad)
test
mov
cdq
add
dec
(bad)
and
sbb
mov
push
mov
pusha
and
inc
fs
mov
and
push
dec
std
add
add
and
and
into
xlat
adc
xchg
inc
cmp
mov
adc
jmp
dec
loope
jle
or
(bad)
lock
inc
dec
lea
inc
xchg
inc
clc
enter
cmovb
loope
mov
jno
(bad)
fprem
pop
pop
cdq
push
xchg
add
xor
jbe
cwde
fsub
push
test
repnz
mov
daa
nop
or
jl
jl
mov
sbb
movs
test
call
cmp
stos
and
cmps
outs
(bad)
or
sub
cmp
mov
xchg
test
push
mov
test
shr
mov
lock
in
aaa
dec
push
cmp
mov
(bad)
push
jo
fdiv
mov
popf
push
hlt
fs
pop
rol
or
sahf
cmp
test
fld
mov
jo
push
je
jl
mov
into
sub
push
push
dec
push
or
dec
dec
cmp
lods
or
jl
jne
iret
test
lods
iret
and
cld
cmp
aas
or
mov
cmc
rcl
lock
sbb
jnp
push
out
pop
cld
mov
add
mov
mov
js
pusha
gs
out
retf
jl
jmp
xchg
cmps
popf
push
mov
jle
pop
mov
test
or
inc
cmp
mov
or
jo
fsub
pop
pop
pusha
fwait
pop
fsubr
test
mov
fwait
leave
das
or
mov
add
xchg
pop
pop
and
cmps
lock
or
iret
ror
cmp
jnp
xor
shl
lea
les
shl
pop
jmp
and
cmp
sbb
sbb
clc
popa
loop
and
sbb
adc
sbb
aad
ret
lods
sbb
in
push
in
push
or
cli
in
shl
cmp
ja
jb
mov
dec
or
dec
nop
xchg
xchg
arpl
ja
add
cmp
dec
(bad)
push
mov
sar
mov
adc
push
adc
arpl
mov
sub
push
fmul
ror
shl
adc
and
dec
jbe
lea
or
loop
mov
pop
sub
mov
es
dec
inc
xchg
xchg
fisttp
pop
xor
test
sub
sub
or
pop
lea
ss
add
jp
jbe
call
or
ret
push
add
jmp
pop
pop
data16
add
addr16
shr
mov
sar
loopne
dec
push
sahf
xchg
loopne
xchg
xlat
es
mov
rcr
fsub
jno
mov
or
imul
call
mov
in
xor
mov
stc
xchg
cmps
mov
js
das
jmp
data16
push
imul
inc
lahf
push
xor
cdq
pop
movs
push
imul
pop
and
test
xchg
mov
inc
sbb
and
leave
xor
iret
add
and
sub
cmp
test
jp
test
dec
adc
imul
adc
dec
popf
rol
rcl
fadd
push
sbb
cli
mov
es
adc
add
pushf
fs
(bad)
outs
adc
and
push
loopne
ror
sbb
or
adc
and
add
push
pop
pop
pop
xor
cdq
cdq
in
(bad)
push
adc
push
fistp
add
sti
rep
push
lods
xor
dec
and
jg
(bad)
jl
enter
mov
sbb
or
or
xor
or
enter
sbb
sbb
(bad)
in
cld
stc
and
pop
cmps
push
mov
cmp
adc
stc
jns
mov
sbb
sub
dec
imul
jne
or
sbb
lock
sbb
test
add
fstp
nop
fisttp
xor
rol
sbb
retf
lock
loop
or
outs
test
push
aaa
push
sub
arpl
je
inc
es
mov
cmp
mov
inc
fdivr
call
mov
mov
add
pop
leave
jmp
lods
adc
mov
pop
cmp
jno
arpl
int3
loope
xchg
pop
xchg
stc
outs
loopne
adc
lods
(bad)
jge
sbb
jmp
dec
int3
sbb
pushf
push
sbb
adc
inc
js
jne
sbb
loop
xchg
cmps
sbb
and
and
jno
add
adc
adc
aad
xchg
and
dec
je
(bad)
xlat
xor
mov
mov
adc
les
scas
or
push
pop
imul
or
sub
dec
fld
test
fidiv
je
gs
rol
jmp
push
push
sbb
shl
mov
jge
out
push
fldcw
sbb
loopne
push
call
stos
iret
jns
ror
dec
jg
dec
add
adc
and
and
push
mov
(bad)
and
sahf
mov
sbb
sbb
icebp
(bad)
mov
push
shl
outs
or
adc
into
dec
and
lock
or
jge
inc
and
cmp
push
xchg
adc
push
bound
and
gs
jno
adc
add
mov
xor
inc
jno
mov
jae
enter
push
inc
add
push
jl
div
pop
add
pop
in
loopne
mov
and
psadbw
(bad)
mov
xchg
mov
ins
cmp
or
pop
int
push
cmp
xlat
mov
inc
je
and
test
push
retf
cmp
je
dec
pop
pop
push
movs
(bad)
and
adc
fcom
xor
dec
das
neg
call
sub
sub
ror
jno
inc
lock
mov
push
ret
push
or
call
fcomp
pop
jae
adc
js
popf
sti
in
adc
bound
xor
inc
loopne
mov
inc
push
and
sub
mov
pop
shl
pop
mov
inc
bound
stc
jne
and
int3
push
(bad)
dec
ins
and
rol
mov
cmp
retf
pop
xor
hlt
push
and
aad
rcl
inc
std
push
pop
pop
sub
push
mov
mov
mov
add
and
cwde
push
jnp
daa
mov
jnp
dec
xchg
inc
jp
add
dec
xor
adc
out
mov
cmps
push
aad
add
inc
aam
pop
cmps
mov
add
pop
mov
ret
mov
in
jle
icebp
jbe
add
jge
dec
pop
jmp
and
lods
mov
jge
push
hlt
push
lods
scas
sub
or
stos
fnstenv
add
and
inc
add
arpl
outs
hlt
mov
lock
mov
test
add
stos
cmp
push
mov
test
std
mov
pop
add
clc
arpl
sbb
cmp
pushf
outs
push
call
push
mov
push
adc
xchg
movs
mov
mov
mov
mov
pop
lea
adc
or
xor
pop
inc
mov
inc
data16
pop
daa
aad
scas
jo
and
add
and
mov
add
mov
dec
add
in
jo
cmp
pusha
jb
dec
xchg
jns
cs
ins
cdq
loopne
fdiv
add
nop
dec
add
mov
inc
cmp
mov
mov
mov
loop
sbb
mov
outs
mov
mov
push
cmps
sbb
imul
mov
sub
dec
mov
pop
fcom
inc
push
addr16
fidiv
sub
dec
add
sbb
xor
dec
ins
adc
push
push
and
add
pusha
push
cli
inc
adc
adc
(bad)
push
push
jbe
inc
sti
mov
dec
xchg
mov
(bad)
repnz
rol
lods
sbb
xchg
push
add
add
mov
aaa
mov
push
das
lea
adc
sbb
pop
push
mov
loope
bound
xchg
add
(bad)
fwait
sbb
inc
or
xor
loope
sbb
rol
or
mov
or
test
cli
jmp
add
jo
ret
mov
les
adc
dec
test
cmp
imul
sub
inc
jg
aam
ret
ror
inc
loop
push
sbb
jl
sub
jmp
mov
cmp
jmp
cwde
and
popa
shl
cs
lahf
les
lods
retf
in
mov
jecxz
cs
mov
xchg
and
add
push
adc
xchg
mov
adc
xchg
mov
inc
xchg
mov
aam
loope
outs
xlat
dec
jl
add
mov
lea
push
fimul
sbb
jnp
pop
sti
sbb
cli
das
mov
pop
mov
movaps
add
rcl
ja
jne
mov
test
ins
mov
lea
test
mov
adc
ins
mov
jl
dec
pop
fisttp
es
mov
clc
lods
push
and
retf
xor
or
ror
sbb
cmp
daa
dec
popa
add
fmul
cmp
jbe
jmp
add
cmp
sbb
das
pop
xchg
xchg
sbb
mov
sub
(bad)
and
lods
adc
addr16
mov
jne
push
mov
sub
add
push
pop
repnz
and
and
push
push
inc
or
pop
inc
inc
or
mov
dec
arpl
ins
enter
(bad)
ins
pop
je
adc
jle
pop
jl
dec
jmp
mov
xchg
inc
in
stos
push
shl
nop
xor
pop
cld
enter
xchg
adc
pop
ret
sbb
rol
scas
add
push
sbb
mov
push
cmp
lods
ror
pop
mov
ins
mov
shl
inc
or
pop
aam
fcomp
adc
or
fnstcw
inc
mov
or
scas
cwde
popa
lea
pop
aam
stc
bound
in
les
or
cs
call
jmp
push
xchg
test
sbb
repnz
out
pop
imul
and
pop
xor
(bad)
aam
or
inc
mov
push
retf
add
pop
mov
push
into
push
inc
sbb
enter
cmp
push
xor
in
icebp
mov
clc
xor
or
add
pusha
ins
sti
cmp
int3
adc
adc
fisubr
sub
jmp
push
push
(bad)
inc
or
inc
enter
test
out
ss
sbb
inc
pop
push
dec
xor
les
push
mov
cmps
shr
mov
pop
xor
stos
bndldx
jmp
mov
push
in
mov
mov
xchg
mov
push
xor
cmp
mov
imul
push
stos
or
outs
mov
movs
pusha
into
in
inc
shl
sbb
(bad)
dec
inc
ins
jl
js
sbb
cmp
inc
aaa
add
out
inc
pause
pop
js
call
in
and
push
mov
xor
js
inc
mov
mov
into
push
sbb
popf
lods
enter
push
mov
aas
jecxz
cmp
ret
dec
adc
pop
movs
inc
or
popa
fnsave
ud1
movs
loop
and
mov
sub
xlat
add
stc
xchg
dec
scas
and
adc
or
sbb
and
test
les
add
push
inc
jmp
push
adc
hlt
add
nop
std
pop
test
loope
push
jmp
hlt
inc
fwait
inc
adc
xchg
out
or
add
add
cmps
fsubp
cmps
test
mov
jae
and
xchg
shl
lea
mov
adc
sub
in
add
or
pop
imul
loop
(bad)
movs
dec
inc
cmp
dec
les
cmp
pop
enter
cmps
pop
and
mov
push
mov
dec
xchg
(bad)
or
repnz
add
jno
sbb
fldcw
aaa
rcr
outs
add
and
dec
cdq
sub
push
pusha
inc
push
imul
xor
imul
out
jns
mov
lea
add
mov
jns
loopne
inc
iret
sub
in
cmps
xchg
loopne
jle
bound
add
add
sbb
push
xchg
add
pop
sub
or
loopne
jge
call
hlt
sub
push
jp
cmc
cmp
cwde
cmc
xchg
add
cmps
xor
aaa
(bad)
int
push
xchg
test
dec
mov
adc
neg
je
mov
push
es
sbb
xchg
push
cmps
jp
lahf
pop
sub
pusha
ds
dec
inc
and
mov
lahf
fiadd
adc
adc
ss
adc
or
or
dec
cmp
inc
mov
xchg
cs
and
ret
push
test
scas
mov
xchg
sub
jo
es
add
lea
jb
into
jnp
(bad)
cli
push
inc
and
ds
imul
xchg
push
retf
lock
mov
cmp
iret
adc
loope
loope
rcl
fstp
cmp
stc
xor
js
or
mov
sbb
addr16
popa
mov
push
jnp
xor
dec
sub
rcl
ret
add
je
retf
add
pop
add
fcomp
xchg
scas
rcl
xor
jo
addr16
jno
or
pushf
or
leave
add
ins
add
(bad)
aaa
push
fsub
push
or
jcxz
shl
out
sbb
clc
retf
loopne
adc
or
std
mov
pop
test
add
pop
and
popa
punpckhbw
cmp
and
cs
enter
xor
push
add
and
inc
adc
xor
inc
cmc
jl
push
add
or
mov
mov
shl
rcr
pop
cmps
push
pop
fwait
sbb
enter
adc
arpl
mov
jnp
inc
push
or
add
push
cmp
adc
inc
rcl
(bad)
pop
push
jmp
add
sbb
push
cmps
jne
ins
aam
fidiv
jno
or
(bad)
mov
nop
pop
or
mov
jno
mov
or
icebp
movs
repz
adc
push
sub
dec
cmp
sub
test
shl
adc
test
push
push
cwde
add
xor
mov
pop
adc
sbb
sbb
sub
mov
sub
imul
jle
jb
jno
shl
xchg
and
mov
sbb
inc
mov
inc
and
mov
icebp
mov
xchg
inc
cmp
call
and
mov
adc
or
pop
ins
push
test
movs
fistp
or
mov
xchg
inc
mov
mov
test
call
in
push
cmp
jns
cmps
aas
sub
mov
sbb
push
mov
add
xchg
ret
mov
ror
lock
jg
jae
push
add
push
pop
test
and
mov
in
or
or
fsub
inc
loopne
out
pop
call
les
add
and
and
in
xor
xchg
test
hlt
pushf
sbb
lods
jle
inc
cwde
test
outs
test
lea
push
dec
sbb
jmp
xchg
fcom
ror
test
add
out
mov
jbe
pop
out
add
jge
mov
fsub
hlt
add
inc
in
sub
push
(bad)
sbb
inc
pop
movs
addr16
inc
dec
add
push
sbb
pslld
mov
cmp
pop
cmp
xor
push
out
xchg
retf
dec
push
mov
xlat
and
push
repnz
jae
xor
adc
xchg
adc
or
sbb
sbb
dec
cmp
push
in
or
and
mov
push
das
jle
push
and
ja
xor
je
(bad)
sbb
push
loope
popa
cwde
cmc
add
sbb
mov
add
js
dec
and
jo
and
xchg
adc
jmp
pop
pop
icebp
push
fisttp
and
mov
add
jl
dec
popa
mov
addr16
imul
cdq
nop
dec
push
xchg
xchg
cwde
inc
push
add
sub
adc
icebp
adc
push
mov
fiadd
mov
xchg
and
lock
mov
xchg
dec
push
mov
sub
inc
lock
add
lds
mov
adc
mov
push
mov
and
imul
xor
imul
int
push
arpl
push
push
rol
xchg
dec
adc
fcom
mov
stc
push
fiadd
xchg
push
pop
sub
adc
or
xor
loop
adc
mov
es
popa
and
sbb
sbb
call
add
mov
aam
add
add
movs
add
cmp
aaa
add
movs
push
pop
pop
or
sbb
dec
in
ror
pop
(bad)
daa
xchg
scas
jl
add
(bad)
out
push
pop
sub
popa
(bad)
jbe
jl
rol
inc
inc
and
and
pop
jo
test
xor
inc
sub
mov
loopne
adc
push
ror
(bad)
aam
push
js
add
popa
and
sti
xor
jp
ss
dec
xchg
xor
rcr
fs
sti
jmp
lods
bound
jns
retf
xor
je
cdq
jbe
dec
hlt
adc
xor
or
push
sbb
adc
leave
dec
loop
xchg
xchg
xor
mov
cs
outs
jmp
push
loope
adc
sub
lods
mov
or
adc
cmp
add
pop
les
or
dec
and
adc
repnz
movs
pop
popa
pop
mov
push
clc
sbb
dec
in
mov
push
xlat
add
xor
mov
ins
sbb
add
ret
dec
xchg
lea
push
sbb
sahf
push
or
xchg
xor
jno
pop
jb
js
cmps
push
add
or
addr16
dec
mov
sub
jo
xor
in
aaa
pop
add
fstp
nop
add
add
push
test
mov
ror
repnz
jmp
pop
mov
fdiv
pop
lock
or
jl
push
leave
add
pop
daa
(bad)
add
adc
mov
sub
sbb
inc
mov
push
mov
outs
icebp
xchg
stc
add
push
add
push
xlat
jmp
icebp
daa
add
push
sbb
mov
dec
xlat
sbb
mov
pop
iret
sub
add
sub
inc
and
and
lea
es
retf
xor
and
mov
imul
pop
add
mov
or
fisttp
jmp
xor
out
xor
dec
out
or
int
fstp
or
movs
fcmovnb
into
xchg
cmp
add
add
dec
addr16
add
dec
or
shl
cmc
adc
push
pop
push
and
add
inc
cmps
lods
xchg
test
xchg
xor
push
ror
fmul
sub
mov
sti
sub
adc
cmps
jno
xchg
rcr
addr16
int
adc
(bad)
sti
sbb
pop
or
out
rol
push
add
iret
push
bound
jbe
mov
add
pop
mov
xchg
push
cmp
pop
dec
(bad)
cmp
outs
retf
ret
mov
pop
fadd
dec
nop
sub
mov
into
jne
cmp
cmp
pop
in
mov
cmp
ficom
ins
out
or
cmp
mov
js
inc
clc
cmova
mov
clc
mov
xor
mov
and
les
or
fwait
push
ss
inc
cmp
or
dec
adc
lea
mov
mov
jg
and
xor
jae
xor
push
cmp
mov
icebp
shl
fmul
cmps
sar
add
adc
mov
adc
pusha
test
retf
aaa
push
dec
mov
adc
(bad)
mov
imul
aaa
xor
sub
adc
sub
push
sub
xchg
cmps
sbb
mov
ficomp
sbb
loopne
jo
or
pop
fsub
leave
or
(bad)
in
add
sbb
cmp
adc
fsubr
sbb
mov
ret
outs
in
mov
clc
push
dec
sbb
push
cs
sti
fmul
jmp
movs
movs
or
lds
mov
aam
mov
lahf
mov
loopne
nop
in
mov
data16
mov
sub
push
jo
and
mov
dec
dec
inc
jle
jne
inc
push
dec
mov
shr
pop
adc
inc
sar
mov
ret
sub
in
ja
test
cmp
fidiv
test
rcl
inc
or
and
xor
add
call
mov
movq
jge
mov
cmp
or
or
mov
pop
sbb
pop
sub
out
mov
adc
sub
push
aam
adc
outs
jmp
add
xor
add
ss
ins
or
and
jne
in
sbb
inc
cmp
and
and
jns
neg
cdq
sbb
and
push
xor
sti
push
xchg
sub
push
aam
mov
or
daa
mov
dec
and
clc
or
aaa
mov
jb
cs
or
xor
cs
or
dec
jo
rol
mov
xor
mov
xchg
xchg
jmp
mov
jmp
sub
movs
fnsave
lahf
pop
mov
gs
out
mov
ss
pop
cmp
and
fwait
add
xor
popa
lds
pop
aas
pop
adc
test
xlat
adc
xchg
sbb
push
loope
enter
ins
call
and
ss
cmps
mov
adc
add
sub
adc
cmp
leave
xor
sbb
(bad)
call
popf
test
je
sub
jl
inc
push
sub
je
add
dec
pop
icebp
cmp
js
sbb
sbb
xchg
loopne
cwde
jmp
ret
add
das
mov
out
pop
lods
test
inc
sub
push
xchg
jg
scas
mov
data16
ins
stc
sub
adc
xchg
pop
sub
sbb
les
je
inc
push
cmp
cmp
jmp
cmp
jne
inc
xchg
pusha
add
inc
mov
movs
icebp
pusha
push
mov
pop
inc
ja
int3
pop
jg
mov
jne
dec
sub
pop
repz
mov
call
pop
sub
not
jae
jmp
cmp
test
adc
cwde
or
nop
cmp
push
sub
or
loope
mov
mov
xor
mov
push
out
(bad)
dec
mov
add
cmp
test
shl
leave
push
stos
xchg
in
and
pop
int
cs
mov
mov
mov
jnp
push
mov
add
add
scas
mov
pop
cmp
js
jmp
mov
sbb
int3
inc
fcomp
push
ret
and
jl
sbb
stos
push
lea
mov
xchg
call
in
xchg
mov
sub
aad
adc
cmp
adc
mov
adc
xchg
sbb
in
lods
pop
test
pop
xor
in
mov
test
jbe
sbb
popa
jns
pushf
ficom
js
js
imul
xor
mov
xor
ret
clc
aaa
jnp
ja
je
sub
ss
in
xor
pop
push
scas
cli
jmp
adc
inc
not
cmp
cmps
imul
sub
(bad)
je
inc
je
or
jge
stos
jbe
adc
mov
adc
adc
lods
add
add
jp
jmp
das
gs
add
ds
jmp
iret
imul
test
cld
mov
cmc
sub
or
add
mov
jmp
push
cmp
jle
iret
(bad)
imul
push
clc
push
push
mov
dec
xchg
xor
push
pop
icebp
jb
mov
sub
cmp
sub
retf
push
xor
mov
fild
fwait
cmp
mov
das
popf
bound
sub
(bad)
push
pop
or
jbe
mov
add
movs
pop
or
push
fdiv
push
adc
and
jo
xchg
or
movs
call
sub
rcl
int3
push
dec
test
push
mov
cs
in
cli
push
adc
in
mov
or
sbb
push
cmp
add
mov
ss
mov
ins
adc
js
pop
lea
push
or
dec
or
sub
ret
adc
and
jl
cmp
pop
lock
loope
xor
(bad)
cmp
dec
dec
arpl
xor
sbb
or
fiadd
out
push
xchg
call
lock
mov
call
stos
dec
imul
cmc
sub
lods
xchg
out
sbb
scas
dec
es
push
int3
or
(bad)
xchg
jmp
and
or
int
push
push
add
or
mov
mov
daa
jae
std
add
sbb
xchg
sbb
div
add
cmp
add
dec
dec
sbb
sbb
inc
adc
xchg
adc
push
loopne
popa
movs
mov
mov
inc
out
test
cmovae
and
xchg
(bad)
mov
lock
xchg
jg
and
call
mov
das
add
mov
pop
mov
ins
push
cld
sub
pop
stc
lea
into
pop
push
dec
loope
dec
shr
add
loopne
jno
sahf
stc
add
cmps
lds
push
inc
push
xor
in
jbe
adc
add
loop
add
xchg
clc
ret
movs
cmps
dec
dec
push
mov
imul
ins
sti
test
push
sub
add
jb
ret
rcr
je
stos
xor
lahf
imul
movs
dec
dec
pusha
cmp
jns
mov
jo
jne
jle
or
adc
mov
dec
shr
shl
push
scas
test
pop
or
popa
mov
aad
add
div
xor
push
adc
sub
(bad)
mov
shl
sbb
xor
xor
sbb
mov
add
adc
loop
xabort
fimul
and
cmp
cmp
mov
add
or
pusha
mov
or
or
xchg
sbb
jg
adc
les
mov
sub
je
call
mov
or
adc
js
push
fs
add
dec
adc
push
loope
jae
jle
add
ja
addr16
ret
xor
int3
enter
xor
enter
lock
cmp
mov
ss
inc
push
movs
(bad)
add
jb
jno
add
push
dec
fldenv
push
dec
dec
pusha
(bad)
or
jmp
inc
(bad)
and
call
in
pop
add
nop
(bad)
adc
popf
inc
add
xchg
sub
adc
push
clc
mov
daa
and
mov
adc
or
pusha
add
mov
inc
jnp
shr
push
pop
sbb
mov
mov
push
jne
push
add
retf
lds
adc
les
ja
cmp
or
aas
or
mov
(bad)
sub
jne
ror
cmp
cld
xor
iret
dec
dec
push
mov
and
movs
out
shl
inc
test
or
or
adc
stos
add
imul
fcomp
xchg
in
dec
rol
add
inc
cmp
inc
imul
outs
shr
sbb
test
add
inc
mov
and
stos
shl
add
jp
mov
mov
xlat
mov
fwait
or
call
adc
or
gs
and
or
repnz
in
loopne
in
add
lds
push
fcom
xor
mov
rcl
add
adc
sbb
jb
adc
or
push
adc
imul
cwde
or
push
scas
imul
jg
and
push
sub
dec
fsub
and
adc
movs
into
and
xchg
scas
mov
mov
inc
les
inc
dec
push
xchg
jg
pop
adc
dec
adc
pop
sub
inc
inc
lahf
sbb
mov
inc
lods
mov
and
inc
inc
cdq
xchg
add
pushf
cdq
and
add
push
push
mov
add
daa
jmp
mov
add
adc
aaa
adc
dec
js
test
or
sub
shl
out
add
movs
int3
push
pop
mov
test
add
mov
mov
movs
push
xchg
mov
mov
jl
mov
pop
add
mov
adc
and
rol
inc
and
mov
jl
xchg
add
nop
call
jno
dec
xchg
adc
in
sbb
sbb
mov
add
pop
xchg
in
and
nop
les
xchg
nop
les
dec
loop
jne
xchg
lods
adc
xchg
sbb
dec
xchg
addr16
bound
add
xchg
jno
or
add
dec
cwde
dec
in
adc
les
add
outs
leave
mov
lds
xchg
in
xchg
nop
out
dec
sub
xor
mov
aas
push
pop
inc
or
retf
xchg
add
push
push
dec
das
xor
adc
inc
cli
div
rcr
xor
(bad)
add
sbb
int
mov
dec
imul
rcr
jecxz
repz
les
mov
add
mov
shr
sbb
dec
dec
xor
es
push
adc
sbb
js
or
cmp
sbb
push
sbb
sbb
mov
shl
sbb
mov
lds
push
leave
pop
lods
sbb
push
adc
jmp
inc
mov
and
push
test
push
sbb
iret
pop
mov
retf
add
add
dec
cmp
call
pop
hlt
movs
pushf
mov
cmp
fs
or
pushw
adc
dec
jne
out
les
inc
or
xor
aad
aam
mov
sub
and
es
pop
xor
adc
js
cmps
sbb
push
mov
add
test
je
push
and
inc
sbb
xchg
or
(bad)
in
cli
(bad)
mov
cmp
xor
rcl
push
shl
outs
cmp
adc
pop
rcl
lock
rcl
mov
daa
cmp
push
aaa
mov
xor
xor
jne
std
rol
sbb
pop
dec
lock
cmp
mov
or
shr
pop
and
stos
xchg
adc
cmp
mov
mov
sar
data16
ror
cmps
jecxz
sub
or
and
fnsave
fmul
in
ds
jbe
js
and
sbb
sbb
push
shr
adc
fiadd
dec
or
jo
push
fcomp
jg
dec
(bad)
mov
push
daa
clc
ret
loope
inc
clc
sbb
lea
test
les
pushf
jge
or
jmp
or
push
push
sbb
pop
int3
inc
ds
mov
adc
cmp
add
xchg
push
das
sahf
push
sub
xor
das
mov
add
fmul
inc
xor
ret
call
into
aas
jecxz
mov
bound
jecxz
hlt
ins
addr16
test
sub
imul
aas
push
mov
adc
dec
inc
iret
and
and
repnz
dec
inc
mov
mov
inc
std
jnp
and
push
sar
lahf
call
mov
pop
fidivr
int3
mov
xlat
or
lods
loopne
push
jmp
mov
dec
push
add
or
cdq
mov
add
push
sub
cmp
or
mov
xor
aam
mov
fmul
je
sbb
(bad)
jp
test
jl
sub
xchg
ins
les
xchg
cmps
add
test
jmp
inc
add
(bad)
sub
push
or
or
jp
movs
or
aad
xchg
xchg
xchg
mov
loopne
aas
movs
fcom
loopne
aas
dec
iret
and
push
test
adc
fwait
js
xchg
adc
xor
xchg
shl
cdq
pop
push
and
push
(bad)
jmp
aam
dec
lds
int3
mov
push
(bad)
aaa
inc
sub
adc
xor
jae
loope
inc
cmp
adc
push
push
inc
dec
add
add
popa
shl
arpl
fdivr
iret
jne
sahf
icebp
(bad)
call
jo
xlat
mov
leave
enter
cmp
or
sub
jp
sbb
dec
(bad)
or
jmp
test
jecxz
xor
or
leave
mov
or
mov
sbb
fwait
pop
sub
jne
inc
push
add
dec
ret
inc
jg
scas
and
sub
test
or
out
add
xor
retf
sub
pop
test
scas
scas
cmp
cli
mov
ds
xchg
add
mov
push
rcl
add
loopne
pop
cdq
mov
and
inc
pusha
sbb
sub
ror
jmp
jns
and
std
imul
rcl
jg
je
ret
cmp
pop
repnz
rcl
add
mov
lods
sbb
in
xor
and
jns
or
icebp
push
add
(bad)
mov
sub
and
lock
push
gs
in
jmp
jl
retf
sar
sbb
mov
and
sbb
mov
jbe
clc
mov
inc
adc
outs
inc
scas
fstp
sahf
mov
iret
popf
push
inc
sub
inc
and
fmul
(bad)
(bad)
sub
push
adc
add
pop
sbb
(bad)
clc
and
inc
mov
jbe
xchg
je
sti
mov
mov
and
js
cld
dec
inc
xchg
push
lods
inc
cld
add
adc
xor
and
jno
pop
cmp
pop
lahf
outs
sbb
jl
fst
push
and
lds
out
mov
and
jp
cmp
jle
lock
jo
mov
push
aaa
je
sbb
in
out
push
sbb
je
jle
ret
adc
addr16
add
add
or
push
xor
pop
push
mov
jmp
ret
sbb
cmc
into
jno
shl
cdq
jmp
int3
push
movs
and
arpl
xchg
pop
mov
sahf
fiadd
mov
in
in
dec
cdq
cmps
sar
arpl
cs
lods
jne
add
pop
mov
inc
cmp
fild
into
push
movs
push
hlt
pusha
test
adc
addr16
jmp
push
addr16
or
adc
add
mov
xor
stos
cmp
inc
das
(bad)
rcl
dec
mov
jb
and
cmp
cmps
shl
arpl
call
mov
mov
pop
jl
xchg
push
push
mov
pop
push
fcomp
sahf
mov
cmc
mov
mov
mov
cmp
sub
or
inc
mov
hlt
inc
jp
nop
xor
mov
xor
jmp
icebp
or
or
adc
push
inc
xchg
and
shr
pop
adc
push
jmp
or
test
add
xor
xor
out
sar
pop
popw
dec
scas
in
push
aam
mov
cdq
nop
in
or
loopne
mov
and
in
pop
jg
mov
adc
enter
mov
inc
and
movs
cwde
xchg
repz
xor
jmp
scas
imul
adc
mov
mov
mov
adc
mov
mov
xchg
retf
pop
idiv
fucomip
sub
xor
jnp
sbb
ins
cmp
fmul
push
ss
mov
or
cmp
pop
and
pop
push
iret
fcomp
ficomp
mov
add
xchg
xor
rcl
push
pushf
ss
daa
sub
hlt
or
inc
dec
jo
shl
xor
adc
jl
or
fadd
loope
mov
adc
push
mov
bound
xor
loop
aaa
sbb
push
sub
push
push
mov
jl
xchg
stos
jo
push
jae
test
imul
es
ins
int
dec
jbe
inc
push
jno
cli
push
mov
sub
inc
mov
or
clc
jae
jle
inc
into
and
and
popa
imul
jno
(bad)
(bad)
movs
enter
and
and
sar
lods
loopne
enter
pop
pcmpgtb
or
enter
or
fs
bound
sahf
cmp
xor
or
cmp
dec
mov
push
push
cmp
cmps
fidivr
dec
cmp
cmp
pop
xor
xor
leave
mov
mov
fstp
jnp
dec
loopne
out
pop
add
ds
push
push
sub
jb
push
in
les
xchg
mov
mov
loope
and
add
in
inc
pusha
inc
fwait
cmp
mov
adc
ins
in
sbb
imul
xchg
push
or
pop
imul
shufps
retf
and
ja
rol
retf
es
xchg
pop
jp
add
sub
push
sar
cmp
je
cmp
push
cmp
cmps
imul
mov
repz
jne
push
jae
sub
or
lods
mov
in
xor
adc
dec
cmp
hlt
and
adc
lods
pop
mov
ds
or
push
cmps
inc
icebp
mov
push
clc
sub
mov
adc
and
mov
xchg
add
jne
sbb
cs
pusha
add
jmp
adc
int3
push
sub
inc
rol
dec
sub
les
aam
aaa
(bad)
les
xchg
adc
shr
inc
or
push
adc
push
push
xchg
or
mov
jne
or
imul
idiv
jp
mov
or
xor
loope
loop
add
sbb
mov
dec
movs
pop
and
add
in
push
aam
dec
loop
xor
mov
div
pop
je
xchg
mov
xchg
mov
push
fimul
lea
pop
mov
cmps
xor
inc
jno
sub
sub
lock
xchg
arpl
imul
jmp
test
xchg
or
add
xor
aam
call
mov
sar
mov
push
cmp
push
ror
ss
loope
cmps
pop
pop
outs
push
adc
dec
sbb
jne
adc
jne
add
fld
sbb
jo
cvtps2pi
mov
xchg
lahf
dec
xchg
jne
and
mov
mov
mov
mov
and
sbb
fwait
cmp
pusha
jl
pop
pop
rol
pop
jne
retf
aaa
push
push
xchg
sub
repnz
cmp
add
dec
(bad)
sub
push
push
dec
push
mov
add
pop
and
adc
je
cmp
fild
mov
adc
xor
inc
mov
imul
jb
cmp
jbe
add
mov
push
xor
jne
arpl
leave
jg
pop
fsub
add
fild
cmp
mov
jl
push
mov
popa
cmp
stos
inc
dec
ins
adc
imul
and
je
xchg
(bad)
pusha
enter
adc
mov
enter
pop
jmp
push
sbb
outs
lods
inc
data16
push
xchg
sbb
data16
mov
mov
mov
ss
aad
lods
fdivr
adc
adc
and
popf
add
pop
inc
lds
lods
je
cmp
push
shr
mov
lahf
and
push
cmc
mov
mov
sub
push
adc
int
sbb
sbb
push
mov
xchg
lock
mov
jge
push
inc
mov
dec
add
lods
mov
xlat
inc
inc
test
pop
push
pop
or
mov
iret
(bad)
mov
nop
jmp
rol
test
add
or
sub
or
movs
in
dec
adc
mov
or
mov
cs
cli
outs
(bad)
and
adc
test
dec
dec
and
push
aad
js
jnp
push
adc
or
cmp
pop
add
nop
add
dec
int
xor
movs
sbb
sub
shl
dec
pusha
xor
jmp
inc
sub
dec
leave
or
mov
add
out
les
dec
add
pop
dec
jne
pop
mov
stos
push
jmp
adc
pushf
xchg
lods
jno
cmc
mov
shr
hlt
ret
loopne
sar
or
aas
test
cmp
jne
cmp
inc
push
cmp
sub
cmp
jne
jmp
fnstcw
push
inc
sbb
push
pop
das
adc
test
add
add
xacquire
out
xchg
and
fstp
mov
cmp
pop
add
call
arpl
or
add
or
movs
sar
adc
lods
fdivr
sahf
int3
jle
test
scas
scas
mov
cmps
inc
push
push
mov
ins
js
dec
sbb
cmp
loope
xor
add
lods
loopne
add
mov
popf
call
cmp
push
popa
loope
mov
push
mov
push
mov
xor
(bad)
outs
fwait
adc
mov
ds
add
adc
stos
mov
add
or
sahf
mov
int
inc
mov
aad
(bad)
dec
int3
aam
add
leave
dec
adc
xor
add
mov
add
mov
loope
jno
out
mov
ds
push
std
fistp
cs
jne
mov
xor
xchg
xor
pop
or
je
xor
or
xchg
inc
add
add
sbb
(bad)
push
push
and
jge
gs
adc
pop
push
xchg
pop
das
add
loope
mov
push
aam
cmp
mov
adc
xchg
fist
lock
or
push
mov
in
adc
jne
push
pusha
jne
inc
mov
push
enter
sbb
pop
pop
js
fmul
je
sub
mov
shl
pop
cmp
hlt
jle
lock
adc
ret
or
hlt
and
ret
inc
pop
and
and
mov
cdq
mov
add
out
outs
icebp
jbe
ja
out
jbe
cmp
or
mov
adc
jne
not
xchg
xor
rol
rol
neg
mov
push
or
cmp
sub
fnstsw
add
sbb
add
pop
pop
in
(bad)
das
jmp
cmp
inc
mov
mov
inc
mov
fcmovnb
mov
and
push
pop
add
mov
jle
xor
xor
cmp
ins
das
mov
inc
cmp
push
xor
clc
daa
fcomp
sbb
push
add
mov
push
in
xchg
xchg
cmps
adc
adc
jg
push
inc
xlat
add
fdivr
fmul
aaa
xor
xor
popa
les
pop
dec
or
dec
jg
jb
dec
jle
inc
in
push
hlt
push
pusha
mov
bound
xor
sub
dec
ja
adc
xor
pop
sbb
in
adc
add
out
jno
pop
pop
and
test
dec
in
add
add
ins
cmp
add
inc
sbb
mov
xor
add
dec
mov
push
mov
sbb
push
inc
dec
sbb
(bad)
push
jmp
lea
test
enter
cmp
clc
jmp
push
cmp
cwde
or
xchg
in
hlt
mov
rcr
leave
jne
add
fsub
sub
ss
sbb
pop
je
sub
scas
xchg
inc
sbb
jmp
leave
les
push
aam
inc
loopne
or
sub
sub
pop
mov
mov
sub
fcomp
mov
sbb
mov
pusha
sub
push
sub
xor
jge
lods
movs
(bad)
push
pop
les
jo
cmps
xchg
gs
stos
jno
push
and
loop
mov
push
add
pusha
pop
sti
fst
adc
mov
repz
cld
add
adc
sub
xor
call
push
xchg
sahf
sbb
push
sub
adc
popa
ds
mov
(bad)
xlat
mov
jbe
mov
cwde
sbb
jne
sub
adc
xchg
lds
dec
(bad)
xlat
cmp
cmp
jmp
ret
test
xchg
jo
adc
cmp
lods
js
inc
clc
mov
push
inc
shr
push
push
cmp
(bad)
sbb
outs
mov
popa
mov
sbb
mov
cwde
adc
jl
mov
and
push
(bad)
cmp
jbe
cmp
jb
cmp
addr16
in
and
push
arpl
mov
sub
xor
mov
jle
dec
or
push
rol
call
out
cmp
jl
mov
sbb
movs
or
or
push
lahf
inc
sbb
jge
test
or
daa
je
or
je
shl
push
je
or
jne
push
and
push
adc
mov
xlat
adc
inc
push
mov
pop
jl
fldpi
sbb
mov
pop
adc
lock
sbb
add
adc
(bad)
jl
mov
xor
or
fs
daa
hlt
or
inc
cmp
js
sub
mov
icebp
inc
xchg
push
ror
push
push
adc
lds
lods
jbe
cli
mov
or
push
jb
xor
mov
jmp
enter
(bad)
mov
int3
jmp
stos
lahf
out
ins
sub
mov
mov
cmp
sbb
leave
push
sub
ror
das
or
xchg
mov
fadd
inc
sub
mov
aaa
push
jne
ret
sbb
pop
les
inc
iret
sbb
cmp
test
push
dec
push
or
and
ss
jmp
inc
mov
inc
push
adc
push
inc
bound
icebp
mov
xchg
not
into
(bad)
fidiv
je
push
mov
add
pop
retf
sub
xchg
mov
xchg
inc
(bad)
lock
mov
out
jle
xor
loopne
dec
xchg
in
push
pusha
inc
call
sub
sub
xchg
add
xlat
or
mov
jp
push
sub
push
sar
aam
jge
jb
push
sbb
mov
mov
xor
adc
pusha
xchg
jb
inc
fidivr
retf
shl
push
jno
scas
push
dec
sbb
and
or
adc
jmp
clc
adc
add
inc
ror
pop
add
push
in
jne
and
adc
add
sbb
bound
push
jb
lahf
mov
adc
push
jg
nop
mov
lods
push
lea
jg
add
cmp
dec
adc
dec
adc
or
xor
adc
adc
adc
dec
shl
adc
dec
add
or
ins
dec
add
and
or
xor
mov
leave
and
jecxz
push
mov
or
inc
imul
or
nop
xor
and
or
push
mov
mov
daa
push
rcl
or
mov
jmp
pop
fcom
mov
fmul
push
jle
or
sbb
and
and
pusha
lar
push
mov
push
mov
sbb
cmp
lock
dec
or
mov
jle
cmp
add
out
push
rcr
pop
enter
xor
test
inc
cmp
je
cdq
sbb
cmp
add
mov
lods
aad
movs
frstor
and
push
sbb
imul
inc
or
mov
xor
add
jl
cmps
cmc
jl
fwait
mov
(bad)
popa
cmp
adc
ds
add
add
ja
push
xchg
mov
xor
xchg
jl
and
fsubr
sahf
or
add
dec
les
jns
call
retf
and
and
call
imul
fcom
dec
dec
mov
outs
mov
leave
rol
pop
jmp
cmp
dec
push
xchg
popf
loopne
js
jbe
and
pop
pop
mov
cwde
imul
in
sub
sub
jmp
mov
imul
pop
cmp
sub
lods
sbb
and
mov
sahf
das
mov
or
ficom
(bad)
fsubr
pusha
adc
adc
sbb
mov
cs
test
sbb
out
and
imul
imul
inc
or
mov
fsubr
imul
push
mov
or
cmp
add
push
mov
sbb
sub
mov
das
aad
out
(bad)
bound
divps
jo
inc
(bad)
call
push
sub
add
adc
push
test
mov
ss
je
jb
sbb
mov
idiv
cmps
je
add
test
inc
push
inc
shl
test
out
in
(bad)
xchg
push
xchg
js
jl
or
add
add
jg
dec
jmp
cmps
cmp
aaa
bound
pop
mov
or
adc
adc
or
push
adc
add
jl
out
nop
enter
lea
inc
adc
ret
push
jnp
mov
pusha
xor
jb
push
or
out
inc
mov
cmc
sub
je
popa
or
int3
cmc
sub
jmp
and
pushf
adc
or
inc
punpckldq
enter
or
js
jnp
add
dec
imul
fild
pop
inc
and
sti
in
mov
adc
je
rol
js
ret
xchg
cmp
mov
in
xor
icebp
xor
test
or
bound
mov
push
out
retf
mov
out
or
repz
push
or
xor
fs
add
pop
idiv
das
hlt
jbe
nop
or
jne
jle
data16
lods
mov
jo
popa
movaps
mov
xchg
mov
mov
sbb
xchg
shr
movs
push
inc
xor
push
lock
push
int3
adc
mov
sbb
fld
stos
lea
pop
jmp
push
fisub
adc
inc
movs
adc
pop
and
adc
call
push
adc
jmp
push
add
enter
mov
sub
lods
jbe
jb
ins
aas
mov
push
inc
(bad)
sub
jae
xor
push
stos
or
sub
cmp
cmp
nop
rcl
lea
mov
jno
jmp
xor
rcr
adc
into
mov
adc
push
cmp
sar
iret
adc
add
push
aam
xchg
add
cmp
lods
pop
aam
inc
stos
inc
popa
push
leave
dec
cmp
or
jl
sub
sub
and
add
fnstenv
xchg
cmp
retf
mov
and
mov
add
dec
mov
or
repz
add
and
(bad)
adc
ret
add
lods
or
pop
sbb
jmp
xor
mov
into
push
sub
ficom
ds
mov
imul
int3
(bad)
cmc
daa
and
xchg
prefetcht2
push
sar
adc
and
into
adc
test
sbb
gs
(bad)
cs
loope
push
pushf
mov
rcl
cmp
adc
pop
dec
jl
jno
mov
test
leave
pop
jmp
fchs
sub
dec
int3
xor
push
jbe
gs
movs
je
iret
or
xchg
mov
and
xchg
call
neg
jnp
add
or
inc
sub
xchg
and
fsubr
and
inc
in
add
or
and
sar
outs
or
or
lods
mov
or
stos
js
jns
pusha
pop
mov
cmps
add
shld
mov
ror
cmp
push
pcmpgtb
sbb
sbb
lods
jb
jge
mov
fdivr
or
adc
add
cmp
in
rsm
lods
push
add
loop
adc
out
lock
sub
sbb
push
adc
es
push
or
jo
cmp
jl
je
dec
enter
cmp
dec
sbb
add
adc
cs
repnz
mov
jmp
xor
into
sti
add
pop
or
mov
xor
jo
or
jge
or
cmp
sbb
jge
(bad)
retf
xchg
les
push
mov
daa
add
pusha
add
add
lock
dec
sbb
cmp
inc
outs
adc
sti
mov
aad
(bad)
dec
test
and
adc
sahf
push
xchg
daa
shl
mov
push
movs
cmp
push
mov
jp
push
mov
popf
adc
clts
cmp
jbe
jp
ret
out
retf
mov
mov
fadd
add
and
movs
ins
dec
and
xor
mov
aam
dec
and
mov
dec
mov
daa
push
mov
or
adc
push
das
dec
mov
push
mov
scas
fidivr
inc
or
or
cwde
inc
add
and
outs
pusha
jnp
add
and
ret
push
pop
cwde
pcmpgtw
and
jge
inc
bound
add
ror
mov
jbe
mov
cmp
jb
jle
ret
nop
xchg
loopne
add
nop
dec
lock
fsub
cs
test
out
inc
cmp
sub
xchg
mov
das
push
mov
push
mov
inc
pushf
xor
fimul
xor
xor
push
push
or
xchg
add
or
mov
ss
adc
sbb
in
aaa
sbb
ret
fstp
rol
xor
leave
mov
adc
mov
push
sbb
shl
and
test
lea
cmp
pop
jmp
jl
ja
xchg
test
clc
add
dec
add
movs
inc
mov
push
test
call
pop
cmp
cmp
xor
(bad)
inc
ins
xor
cwde
or
xacquire
dec
pushf
das
test
cld
(bad)
fimul
mov
repz
xchg
mov
pop
repnz
out
push
inc
je
mov
sub
js
dec
xchg
lock
sub
add
add
xchg
test
repz
fucomip
push
sub
test
retf
test
add
sub
lods
add
mov
fcmove
loop
daa
xor
rol
jp
(bad)
dec
in
adc
out
pusha
aas
sub
adc
adc
dec
add
and
ret
sub
push
bound
adc
push
cmc
je
mov
inc
aas
add
dec
lock
push
cwde
movs
cwde
in
(bad)
je
push
stos
mov
pop
or
hlt
mov
xor
mov
add
mov
mov
dec
jl
xchg
mov
test
dec
ins
shl
cwde
xor
sbb
add
sub
push
rol
jno
ror
js
adc
js
add
add
test
inc
add
dec
sbb
sub
mov
pop
cwde
adc
push
pop
test
push
aas
mov
out
dec
cmp
xor
xchg
pop
ror
dec
jl
cmps
pop
jae
jne
in
inc
xchg
pop
lods
adc
cmp
jp
pop
add
jbe
sub
add
fwait
les
push
nop
frstor
and
sti
cmp
cmp
mov
pop
mov
outs
cmps
lods
fld
xor
add
loopne
add
ss
dec
out
in
mov
or
add
adc
mov
sub
or
mov
iret
xchg
jle
lock
add
xchg
inc
mov
cmps
mov
cmp
push
jp
and
fiadd
ss
jecxz
sti
and
aam
gs
add
add
fisub
mov
fsub
jmp
inc
sbb
cmp
adc
cli
ins
add
jne
les
dec
call
jo
mov
retf
push
cld
outs
and
outs
call
mov
and
push
out
dec
adc
sbb
out
and
out
es
add
cmps
jp
sub
les
call
fmul
ss
in
add
mov
(bad)
dec
or
xchg
pop
rcr
jno
mov
mov
sbb
jns
fidivr
cmp
(bad)
cmp
mov
leave
adc
(bad)
ds
je
cs
push
je
xlat
(bad)
das
(bad)
jne
shl
inc
push
dec
inc
xor
mov
sbb
cmp
outs
pop
mov
jg
sub
je
ins
add
and
push
adc
dec
and
sbb
ds
(bad)
dec
ror
xchg
xchg
cld
pop
aad
ficom
jae
sti
inc
dec
(bad)
mov
add
pop
pop
push
imul
sbb
pop
mov
or
inc
sbb
mov
sbb
mov
test
xlat
jge
fdiv
icebp
pop
mov
rcl
add
jo
or
push
inc
jg
je
rcr
je
pushw
xchg
outs
jb
add
ins
movhps
ret
dec
dec
jb
mov
or
inc
ss
and
push
je
sbb
(bad)
repnz
dec
xor
sbb
outs
imul
imul
adc
pminsw
fidivr
shr
and
fcmovbe
or
lods
jmp
in
clc
add
xchg
dec
es
push
in
or
mov
xchg
pop
in
and
pop
cwde
add
hlt
push
xor
test
xchg
ds
cmc
cmp
ror
jns
pop
mov
or
inc
adc
add
jmp
push
mov
push
jmp
xchg
adc
addr16
popa
xor
xchg
push
sub
jo
add
pop
push
sub
ret
lods
or
mov
jl
jmp
hlt
xchg
jp
adc
push
sub
and
gs
pop
stos
or
inc
outs
test
adc
add
push
add
fsubr
xor
jmp
movs
rol
adc
cli
ins
sbb
xlat
or
fs
add
jbe
sub
jne
xchg
mov
xchg
adc
in
lahf
(bad)
lds
fdiv
or
dec
scas
inc
in
jge
xchg
jne
rdmsr
sahf
pop
push
cmp
sbb
sub
mov
movs
xor
shl
mul
push
xor
sbb
and
hlt
data16
addr16
jmp
dec
add
pop
sahf
ss
loope
aam
pop
dec
mov
stos
xor
fs
mov
add
cmovl
xchg
test
and
push
(bad)
add
and
mov
fwait
pushf
pop
mov
pop
ins
xor
ret
push
ror
inc
mov
cli
fimul
cmps
imul
leave
lods
jb
inc
mov
call
sbb
scas
mov
sub
in
std
pop
add
xchg
jno
cld
cmp
and
mov
cmp
out
rcl
mov
inc
jge
arpl
jbe
popa
add
sar
ret
push
adc
push
xor
sbb
inc
pop
jp
adc
lock
scas
mov
fdivrp
jge
nop
je
mov
cmc
jbe
cmc
les
or
jmp
sub
xorps
mov
fsubr
lea
and
es
xchg
mov
mov
nop
push
loope
(bad)
push
add
mov
out
neg
test
mov
pop
cmp
jb
push
fadd
les
pusha
sub
cmp
xchg
dec
push
stos
sar
xor
movs
push
je
pusha
cmp
je
rcr
pop
inc
xor
mov
push
adc
cld
cli
mov
sti
xor
pop
xchg
and
inc
inc
pop
inc
jmp
push
sbb
cmps
xor
push
push
push
sbb
pop
cmp
push
or
push
adc
enter
mov
sbb
mov
lds
and
and
xor
mov
add
ret
sub
outs
outs
fild
inc
(bad)
enter
or
cmc
movsx
(bad)
fld
rol
adc
neg
sbb
and
adc
sar
ret
push
cld
xor
test
mov
mov
pop
and
cdq
mov
int
pop
imul
inc
or
or
test
adc
js
and
adc
ss
mov
pop
adc
mov
rcr
push
mov
cmp
repz
mov
cwde
mov
repz
inc
test
lods
mov
or
shr
sub
sbb
mov
repnz
push
and
cmps
ret
sbb
sbb
sbb
clc
adc
das
cmps
nop
and
mov
inc
sahf
shr
loop
aad
add
add
xor
(bad)
ret
leave
cs
push
add
add
xlat
ds
(bad)
and
jmp
imul
sbb
outs
cmp
scas
fdiv
jae
sbb
mov
sbb
sub
stos
nop
add
(bad)
or
in
sbb
retf
js
dec
arpl
lods
adc
add
jae
ja
inc
ficomp
xor
push
call
pop
aam
push
cld
add
mov
adc
push
ret
ins
lahf
adc
dec
push
mov
shl
mov
jo
in
add
mov
aad
sub
es
arpl
cld
pop
call
sahf
rcr
xchg
sub
xor
pop
cmp
pop
xor
shr
xchg
ret
stc
and
out
sub
dec
or
in
sub
fsubr
outs
out
fld
dec
jo
xlat
mov
mov
rcl
xor
add
xchg
js
ror
sahf
pop
rol
xlat
adc
xchg
sbb
std
dec
jne
push
dec
(bad)
ret
loope
push
test
push
adc
fsub
add
scas
mov
popf
push
pop
cvtps2pi
cmp
sbb
sbb
les
std
xchg
icebp
dec
(bad)
xor
sbb
dec
das
es
test
add
js
mov
clc
inc
dec
or
add
ss
add
mov
xchg
in
add
add
jge
pop
js
push
inc
cmp
sub
mov
fcom
dec
aad
daa
jmp
pop
repnz
or
out
test
jno
outs
in
cmps
icebp
mov
iret
cwde
out
xor
ror
push
pop
dec
(bad)
push
xor
loope
and
cmc
jp
imul
pop
or
add
aaa
xor
and
ins
sub
add
push
or
loopne
scas
sub
xor
in
push
and
cmp
in
aas
sub
jb
mov
push
stos
or
push
mov
add
jmp
pop
mov
mov
xchg
xor
jns
nop
xchg
mov
pop
push
lock
nop
push
dec
mov
int3
fadd
or
mov
push
xchg
cmp
and
pop
cmp
inc
sbb
fs
shl
xchg
or
pushf
ins
call
or
shl
jo
mov
icebp
inc
add
call
call
lods
jmp
or
dec
adc
daa
push
bound
and
pop
xor
scas
push
sti
je
hlt
sbb
call
int3
or
das
and
sub
or
scas
je
lods
stos
push
loop
test
push
pusha
in
add
ret
fst
nop
jl
(bad)
fs
imul
inc
arpl
sub
sbb
xor
jg
(bad)
cs
movs
pushf
cmp
or
xor
dec
push
xchg
data16
inc
push
adc
pusha
addr16
punpckhdq
movs
rcr
add
jl
jmp
popa
inc
loope
lock
pop
dec
icebp
frstpm(287
push
movs
outs
dec
xchg
jecxz
out
xchg
and
imul
or
stos
movhlps
add
test
adc
pop
je
pushf
dec
push
sub
inc
js
add
xchg
cmps
sub
jl
retf
enter
add
push
or
sbb
sub
retf
dec
mov
fs
pusha
movs
popf
(bad)
in
sbb
pop
sub
int3
cmp
adc
in
push
or
aam
or
push
sahf
fistp
repnz
std
dec
dec
xchg
out
mov
dec
lods
xchg
cmps
sbb
push
mov
jmp
jae
inc
neg
or
push
cmp
out
pushf
xchg
es
xchg
xchg
popa
xor
cmp
arpl
ins
aaa
in
out
enter
mov
jno
loopne
sti
pop
jne
(bad)
xchg
dec
js
adc
outs
xchg
add
stos
sbb
mov
cmps
loopne
repnz
adc
out
lea
jo
xor
mov
add
cmp
and
inc
pop
inc
loopne
dec
loope
and
ret
inc
inc
add
adc
add
lock
sub
jmp
popf
push
mov
sub
dec
or
push
pop
movs
xlat
and
inc
inc
push
inc
popa
call
bound
popa
das
xchg
sub
pop
popa
data16
push
mov
retf
fbstp
shr
cli
inc
xchg
mov
push
rcl
ja
xchg
lods
sbb
sahf
add
mov
lds
cs
loopne
xchg
js
aas
lock
sbb
and
xchg
mov
retf
cmp
and
mov
lods
dec
aad
pop
popa
xor
lds
jbe
push
lods
inc
es
bound
in
mov
lock
add
int3
cmp
add
mov
popa
dec
dec
clc
adc
jno
clc
jo
mov
and
fs
cmp
adc
push
lods
fst
adc
std
loopne
(bad)
les
or
mov
dec
imul
add
mov
cmp
fcom
or
fwait
or
sub
or
call
lods
das
loop
push
sbb
xor
or
xchg
dec
int3
rcl
gs
adc
not
cmp
pop
movs
(bad)
aaa
push
mov
outs
sub
jo
mov
pop
jecxz
add
repz
js
sub
pop
pop
sub
mov
mov
js
mov
imul
mov
icebp
sahf
xchg
pop
xchg
cmp
adc
not
pop
jne
mov
inc
adc
xor
fnstsw
(bad)
push
int3
and
pushf
cld
out
mov
add
aam
fcomp
or
imul
adc
shr
mov
and
fcmovnb
mov
and
out
(bad)
mov
repnz
sbb
inc
adc
cwde
retf
jns
in
mov
xchg
cmp
popa
mov
(bad)
adc
mov
pop
rol
iret
sub
pusha
mov
fsubr
or
xchg
push
cmp
or
mov
scas
mov
dec
push
sahf
mov
dec
adc
sbb
dec
or
icebp
sbb
and
sub
rcr
retf
push
push
mov
xchg
add
std
out
jno
retf
out
lea
add
js
stos
xor
cdq
add
sub
outs
fs
or
adc
retf
mov
push
mov
mov
or
dec
dec
movs
sbb
mov
loop
jno
cli
pop
mov
xchg
cmps
sub
sub
sub
imul
arpl
call
mov
sub
cwde
inc
sub
mov
and
ins
add
mov
and
test
push
inc
dec
jne
mov
inc
mov
mov
dec
addr16
inc
ins
sbb
inc
lgs
loope
inc
add
xor
or
lods
movs
adc
adc
iret
and
push
cmp
test
lea
and
xor
cld
mov
jmp
in
dec
adc
shl
loopne
or
out
pop
loope
pop
inc
mov
lods
movs
adc
or
movs
icebp
cmp
and
sub
je
sub
push
cli
cmp
jp
jo
add
outs
lea
inc
jne
jmp
mov
addr16
sar
xchg
in
dec
mov
dec
pop
imul
sahf
adc
pop
pop
js
hlt
scas
sub
pop
lock
push
rol
stc
(bad)
not
xchg
inc
mov
jo
adc
stos
adc
add
mov
mov
push
fdiv
mov
(bad)
aas
sub
fadd
inc
ficomp
mov
icebp
cli
lods
xor
inc
mov
mov
pushf
shr
push
js
adc
xchg
or
adc
sbb
adc
arpl
or
pop
push
jne
dec
lea
clc
ins
push
jmp
push
mov
and
push
push
push
mov
sbb
add
add
push
pop
sbb
rol
and
jmp
fmul
add
push
enter
push
xchg
dec
jp
sub
cmp
pusha
xor
pop
adc
add
push
mov
push
pop
fisub
add
cmp
fisub
fbld
and
sub
call
or
ror
push
nop
or
imul
xchg
and
add
inc
inc
nop
push
int
mov
push
inc
sbb
pop
fdivp
test
push
jg
push
ret
xor
jne
push
mov
popa
and
test
sbb
clc
sbb
mov
mov
push
jmp
fmul
fwait
mov
(bad)
push
sbb
sbb
call
scas
or
adc
xor
lock
test
mov
xchg
lods
mov
jb
add
loop
lock
repz
cmp
adc
retf
loope
pop
dec
mov
pusha
popf
push
dec
and
lods
push
mov
lea
(bad)
and
sbb
and
and
cmp
imul
and
cmps
inc
xor
inc
xchg
mov
xchg
or
pop
mov
pusha
xlat
xchg
sbb
pop
(bad)
xchg
(bad)
loope
sbb
imul
and
xor
jle
daa
mov
clc
inc
adc
xor
jle
mov
pop
es
in
mov
adc
lock
or
into
mov
and
outs
and
sub
in
mov
xor
xchg
cld
pop
cs
jo
dec
adc
add
or
shl
test
retf
mov
mov
inc
in
add
out
mov
mov
mov
mov
enter
xor
int3
fadd
mov
les
push
inc
ror
cmp
and
pop
pop
pop
cmc
(bad)
mov
adc
mov
cmp
jne
mov
data16
out
or
jne
adc
je
push
push
jne
dec
or
jne
push
or
in
repnz
ret
pop
or
dec
or
or
xchg
lock
push
movs
stos
sub
adc
mov
mov
loopne
adc
cdq
jne
jo
sar
pop
pop
sbb
xchg
pop
mov
test
or
mov
add
fadd
fucomi
cli
sbb
movs
dec
enter
dec
sub
sub
call
(bad)
sti
jge
mov
push
and
iret
mov
add
xchg
test
and
add
clc
adc
sbb
retf
pop
pop
pop
inc
push
jnp
adc
sbb
and
mov
inc
mov
mov
addr16
sub
rcl
sub
jne
fmul
pop
sbb
mov
or
mov
jne
mov
or
dec
addr16
push
imul
pop
cmp
je
sub
add
mov
clc
jne
push
add
xchg
inc
pop
imul
cmp
stc
out
xchg
jmp
ret
pop
xchg
cmp
dec
inc
mov
push
retf
pop
sbb
add
imul
int3
fdivr
or
imul
push
lea
add
sti
inc
cli
imul
dec
test
jl
jg
mov
(bad)
jl
or
jg
mov
scas
into
movsx
mov
sbb
jo
pop
push
sbb
mov
or
lea
dec
fisttp
sub
mov
dec
mov
push
sbb
mov
pushf
jp
cmp
movs
mov
jo
sbb
cmc
test
and
aam
mov
outs
sbb
fisttp
loope
and
lock
push
jae
sbb
and
(bad)
in
sbb
xor
and
and
mov
xor
ins
or
test
and
dec
dec
dec
lahf
pop
ss
cmp
sbb
(bad)
pop
dec
les
xchg
mov
and
mov
rol
cmp
js
jg
mov
and
push
pop
cdq
rcr
jg
inc
push
add
lods
xor
and
adc
jbe
dec
cs
xor
stos
call
(bad)
dec
std
and
jmp
add
nop
hlt
jl
arpl
femms
mov
call
scas
push
add
xor
es
mov
mov
add
jl
lods
add
and
jb
jl
jbe
pop
and
mov
outs
inc
ret
jo
sub
adc
mov
inc
ret
in
mov
out
add
jo
test
push
movlps
jecxz
cmp
jo
ret
dec
ds
pop
and
out
and
push
mov
repnz
ds
mov
and
or
jmp
or
mov
xchg
jl
xor
cmps
loop
sub
jl
inc
dec
(bad)
push
int3
sbb
daa
and
jle
test
adc
mov
repnz
jns
in
ins
xchg
jge
adc
adc
or
(bad)
xor
xor
sbb
add
mov
or
test
sbb
icebp
test
je
and
adc
test
imul
ret
mov
cmps
xor
aad
xor
scas
cmp
js
test
(bad)
cmp
sbb
fstp
adc
pop
and
test
jl
jo
mov
fistp
jb
cmp
dec
icebp
int3
add
or
pop
test
mov
stos
add
mov
stos
jg
rcl
xchg
pushf
cmp
xor
daa
xor
pushf
cs
and
fistp
call
cld
sub
pop
sar
xor
jmp
dec
aam
test
in
adc
lods
dec
daa
xchg
sub
in
sbb
and
pusha
vunpcklpd
mov
sbb
dec
add
and
fwait
call
mov
je
adc
xchg
inc
nop
and
call
jne
push
bnd
fistp
cmp
push
(bad)
sbb
adc
cmp
cmc
popa
mov
xchg
sub
call
mov
and
jmp
cwde
jo
and
or
xlat
push
ror
push
cmp
inc
jecxz
cmp
add
test
popf
fisttp
test
loopne
sbb
add
fmul
imul
and
mov
pop
sbb
imul
pop
jmp
cmp
pushf
das
inc
jnp
data16
push
mov
dec
fcom
in
shl
(bad)
std
cmp
fadd
xor
sub
mov
in
or
add
xchg
iret
sub
inc
mov
push
mov
lock
cmps
repz
push
jle
mov
idiv
adc
adc
pop
adc
js
push
cmp
and
inc
or
mov
imul
(bad)
sub
je
jge
(bad)
mov
mov
push
sahf
call
or
outs
and
mov
loop
mov
jp
out
pusha
add
sub
sub
add
mov
add
push
mov
hlt
mov
fs
sbb
adc
add
xchg
adc
or
xchg
inc
xor
sahf
xchg
add
lods
inc
jae
pop
test
mov
call
push
adc
rcr
push
dec
mov
adc
or
mov
mov
xchg
mov
lock
push
loope
mov
push
cmp
xor
adc
push
add
ret
or
(bad)
and
fst
lea
pop
cmp
shl
scas
sub
push
sbb
cs
sbb
in
and
xchg
ret
sub
add
add
push
dec
xor
ins
dec
push
outs
mov
call
out
dec
inc
jmp
sbb
xor
xchg
push
or
add
out
fimul
outs
test
push
and
frstor
dec
sub
and
mov
add
rcl
ja
stos
mov
adc
out
adc
xchg
jne
test
pop
adc
iret
add
jmp
adc
add
out
jnp
pop
cs
and
retf
jl
jo
pop
rcl
sbb
stc
adc
or
jl
inc
std
mov
add
cli
add
xchg
xchg
(bad)
je
jnp
ror
sbb
inc
cmp
cli
dec
mov
mov
movs
sbb
lea
inc
fucomi
adc
adc
or
dec
outs
sbb
jmp
push
mov
xor
adc
fadd
fcomp
out
fidivr
inc
xchg
mov
and
push
je
or
int3
mov
shr
pop
adc
sbb
sbb
sbb
pop
xchg
nop
aaa
sub
clc
fld
pushw
mov
xchg
shl
es
sub
fsubr
or
xor
rcl
inc
clc
ss
pop
and
cld
in
inc
adc
dec
js
ror
mov
test
sbb
jp
ror
scas
adc
jp
test
lahf
sbb
sub
ret
inc
add
push
movs
jecxz
call
add
les
pop
arpl
or
cwde
popa
ret
adc
cdq
clc
adc
hlt
push
pop
retf
pop
syscall
loope
lahf
lods
imul
movs
jecxz
or
push
jo
lahf
xchg
push
push
push
xchg
mov
hlt
je
jmp
fadd
enter
push
int3
add
fstp
pop
fld
push
in
pop
scas
jge
dec
ds
cdq
(bad)
sbb
xor
inc
inc
pop
inc
adc
stc
sub
mov
adc
lods
mov
adc
cmp
imul
pop
ret
sbb
mov
pop
adc
cmp
or
add
lock
mov
adc
adc
inc
call
pop
sub
push
push
in
xor
lods
add
xor
mov
push
xor
cmps
popa
test
loope
sbb
les
addr16
rcl
pop
mov
cmp
push
jg
or
or
sub
mov
cmp
pop
out
push
mov
ss
fisttp
add
sbb
pop
mov
dec
and
adc
mov
iret
es
mov
xor
push
sbb
call
int
mov
mov
mov
add
dec
cmp
xchg
inc
dec
or
in
fldcw
mov
xor
or
add
push
inc
mov
pusha
outs
push
or
adc
adc
adc
xchg
fmul
sahf
nop
add
daa
mov
cmp
pop
xchg
mov
aad
dec
dec
sahf
les
xchg
xchg
jmp
cmp
mov
in
jo
xor
fs
mul
sahf
pop
mov
pop
outs
push
(bad)
push
cdq
fist
or
mov
lods
icebp
jmp
sub
dec
test
outs
or
sub
and
and
and
fcom
or
out
mov
xchg
loope
and
in
or
outs
fs
sbb
push
inc
outs
sub
mov
ds
mov
scas
in
cmp
out
outs
pop
mov
or
repnz
dec
xadd
sub
xor
outs
les
mov
pushf
dec
rcr
sbb
shl
or
jecxz
push
xor
and
in
jb
(bad)
loopne
leave
pop
or
and
in
outs
sbb
sub
mov
xchg
adc
add
add
push
xchg
and
fnstcw
dec
lods
sbb
std
add
pop
mov
sub
neg
es
mov
out
ss
push
hlt
mov
test
out
(bad)
dec
inc
xor
aas
jl
aam
jnp
(bad)
clc
xchg
pop
or
push
cmp
or
inc
mov
xchg
outs
rcl
retf
les
jno
pop
add
fsubp
or
shl
fst
mov
outs
mov
add
sub
(bad)
sbb
sbb
add
add
enter
add
hlt
inc
inc
cmp
add
add
pop
je
jnp
mov
imul
ret
inc
or
xchg
cmps
mov
pshufw
cld
fist
and
mov
scas
push
dec
sub
dec
inc
stos
jmp
and
inc
xor
and
cmp
jl
inc
test
cmps
or
jl
lahf
jge
outs
or
sti
or
arpl
adc
aas
inc
shl
stos
cmp
rcr
test
mov
adc
add
pop
test
mov
stos
fidivr
js
les
shr
adc
push
xor
or
xchg
popa
adc
add
dec
xor
rcr
push
mov
hlt
mov
or
mov
ret
adc
inc
mov
inc
push
xor
mov
adc
add
in
sub
cmp
sub
or
mov
sub
in
mov
and
mov
inc
cmc
xchg
or
jg
pop
dec
lea
sub
jb
or
or
jmp
sbb
in
pop
push
shr
jae
mov
mov
mov
sbb
adc
adc
add
push
ins
add
cmp
pop
adc
leave
push
mov
js
xor
or
pavgb
push
mov
enter
jg
sbb
pop
or
cmp
fld
pop
cmp
inc
and
add
daa
cmp
outs
nop
jno
fldenv
inc
and
xor
fistp
test
jl
icebp
or
aaa
push
pop
inc
hlt
add
aad
test
jno
fbld
sbb
jp
push
jns
add
jns
add
mov
dec
mov
pusha
add
nop
mov
jns
sub
xchg
sub
add
in
ins
call
push
adc
and
rol
popf
sahf
nop
add
test
popf
fimul
lea
add
add
arpl
movs
cmp
ins
pop
popf
push
dec
enter
push
sbb
movs
push
push
jle
push
sbb
push
or
pop
sub
(bad)
cmc
jne
sub
xor
out
and
jb
push
mov
jbe
aas
ins
xor
dec
pop
imul
add
dec
cmps
jl
push
jb
push
mov
loopne
sbb
stos
test
adc
fistp
imul
clc
inc
imul
sub
sub
cmp
dec
jo
and
add
cwde
pop
pop
jo
jge
mov
mov
mov
add
sbb
add
(bad)
loope
adc
jne
add
jl
jecxz
test
or
clc
mov
adc
push
pop
dec
pop
xor
repz
or
pop
and
adc
jle
call
adc
inc
adc
dec
or
movhps
rcr
mov
test
enter
movs
shl
push
dec
mov
sbb
inc
xchg
cmp
jecxz
sub
stos
adc
adc
ret
add
or
into
pushf
adc
aas
cmp
push
movs
sub
les
sbb
cmp
or
sub
pop
push
adc
xchg
stc
push
mov
jo
inc
sbb
add
fstp
mov
mov
jmp
(bad)
and
in
pop
(bad)
adc
into
inc
jae
lea
ins
lock
cmp
lock
(bad)
add
jp
dec
test
push
pop
iret
pop
push
push
leave
pop
nop
add
lock
hlt
cmp
pop
cld
sbb
cmps
sbb
or
add
mov
adc
push
add
sbb
mov
push
push
mov
scas
mov
shl
movs
imul
enter
ss
pusha
cdq
movs
xor
fdivr
inc
jge
sub
adc
jo
adc
repnz
shl
inc
pop
xor
repz
push
cmc
cmp
cmp
xchg
xlat
mov
dec
dec
cmc
mov
dec
push
sbb
inc
jmp
ror
call
shl
mov
imul
add
movs
and
and
out
or
cmp
scas
push
ret
push
jae
aam
cmps
xor
add
inc
inc
scas
retf
push
dec
mov
inc
movs
cmp
xor
jecxz
jb
je
mov
xchg
push
shl
rcr
push
mov
rol
push
pop
in
and
pop
xchg
push
mov
sbb
ret
add
ins
and
pop
xor
or
add
cwde
xor
rcr
push
jp
dec
cmps
cld
mov
data16
retf
push
sub
clc
pop
sbb
stc
pop
hlt
sbb
xor
and
or
add
mov
clc
sti
enter
pop
in
ret
adc
or
push
inc
push
push
push
je
push
push
sbb
dec
cs
jge
xchg
push
repnz
add
mov
dec
or
mov
hlt
fwait
jo
sub
cmp
xchg
jge
push
mov
or
add
movs
adc
imul
sub
pop
and
hlt
cwde
gs
mov
(bad)
movs
sbb
out
jne
or
and
push
mov
add
mov
mov
or
je
lock
add
xchg
ror
pop
pop
nop
mov
add
add
push
or
mov
push
jg
or
mov
into
hlt
dec
push
sub
dec
push
mov
ins
movs
test
or
retf
or
cld
popa
bound
jmp
mov
clc
(bad)
pusha
cli
or
call
inc
inc
push
jb
shl
into
(bad)
xor
int
loopne
or
or
inc
adc
sub
mov
pop
push
mov
js
aas
jb
xor
fild
je
imul
cs
shr
and
and
inc
xor
mov
xor
dec
push
cmp
and
cmp
xor
leave
sub
les
push
and
cld
mov
jmp
aas
add
out
lock
ds
call
mov
rol
inc
dec
cld
push
dec
jbe
ins
push
jnp
movs
imul
shl
inc
adc
popa
inc
mov
xchg
cli
cdq
jne
or
mov
jecxz
sbb
test
xor
xor
hlt
inc
mov
mov
xlat
pushf
sbb
push
cmp
pop
rcl
jg
fild
repz
xor
push
sbb
mov
add
lock
add
mov
fs
push
cld
bound
and
lds
xor
add
pushf
xor
repnz
xor
(bad)
mov
push
je
jo
xchg
clc
mov
fwait
out
jne
lock
jne
push
push
mov
push
jb
add
imul
pop
and
push
jb
pushf
cmps
es
adc
mov
jb
sbb
inc
jl
test
mov
lock
or
and
mov
jecxz
xor
mov
cmp
sahf
dec
xchg
clc
push
xor
push
mov
push
dec
mov
retf
add
mov
jnp
mov
mov
je
or
dec
and
and
pop
pop
xchg
fld
in
push
in
push
push
test
inc
or
cmp
jmp
bound
or
cwde
add
imul
nop
ins
inc
mov
xor
mov
sahf
popa
xchg
dec
sbb
xchg
and
enter
mov
js
faddp
xchg
or
imul
les
dec
mov
adc
in
mov
xor
dec
adc
sbb
adc
inc
adc
or
ins
popf
or
adc
add
push
enter
shl
cwde
int3
addr16
cmps
push
ins
scas
push
xor
jbe
and
add
ds
mov
push
and
or
mov
rcr
add
pop
add
inc
popf
loope
push
push
es
cpuid
sub
xor
pop
inc
dec
cmp
push
mov
add
test
xor
and
shl
call
or
push
or
and
lea
rol
inc
les
test
add
push
nop
pop
pushf
aam
xchg
lahf
jo
loop
and
xor
fisubr
not
shr
ret
out
add
xchg
scas
cmp
dec
mov
add
mov
mov
adc
xchg
call
test
push
outs
xlat
mov
cmp
fxch
sahf
and
mov
xchg
pop
xchg
or
cmp
mov
mov
inc
mov
ins
cwde
std
fist
cdq
pop
idiv
mov
out
add
stos
xchg
rcl
push
add
cmp
xor
(bad)
scas
int
inc
fadd
mov
sbb
push
fimul
inc
adc
movs
mov
inc
pop
ss
adc
sbb
call
shl
shr
inc
adc
sbb
cmp
sbb
test
ins
rol
mov
sbb
cmps
movs
jo
add
mov
pop
mov
adc
jl
jecxz
(bad)
gs
pop
jno
and
add
imul
and
push
mov
mov
addr16
push
dec
push
cmps
test
dec
out
or
xlat
cmps
movs
mov
sub
sub
ret
adc
and
push
push
ficomp
push
test
xor
lock
(bad)
push
enter
cmp
inc
inc
xchg
add
in
jnp
fs
add
push
clc
jg
jge
push
call
hlt
jns
push
or
push
imul
jo
push
shl
xor
loopne
inc
mov
daa
rcl
inc
popa
in
test
dec
inc
scas
pop
mov
add
push
hlt
ins
mov
imul
rcl
push
pop
xchg
es
add
xor
inc
pop
mov
cmp
mov
int3
enter
cmp
mov
lea
sahf
in
and
cmp
out
add
ins
mov
lock
test
push
in
xchg
push
popa
push
iret
dec
or
test
(bad)
jecxz
sahf
add
jne
cmp
xor
pop
pop
jnp
xchg
push
pop
push
push
dec
xchg
and
sbb
mov
add
mov
or
dec
std
adc
shr
jle
push
bound
pop
add
pusha
dec
idiv
adc
(bad)
in
in
or
nop
adc
ret
ins
and
popa
leave
adc
sub
in
std
fisub
sbb
pop
gs
fs
je
add
and
scas
jne
imul
and
(bad)
pop
adc
or
adc
loopne
ja
sub
cli
in
mov
movs
mov
push
rcr
or
shr
neg
adc
rep
(bad)
xchg
pop
int3
or
loop
and
call
cdq
add
and
sbb
pop
jnp
mov
xor
or
jge
or
imul
shl
add
mov
push
jo
add
push
test
cmp
mov
xchg
sbb
xor
cmp
dec
cmp
loopne
sti
mov
movs
xor
and
cmp
jns
push
push
std
xor
sbb
sti
pop
or
inc
lea
fcom
pusha
sub
out
push
fild
pop
add
(bad)
cmp
ss
xor
lock
ror
fidivr
jmp
cmp
or
add
push
push
dec
pop
cmp
adc
dec
out
aam
xor
sbb
out
jne
jne
jge
in
cmps
jle
add
in
inc
ins
arpl
shl
and
sbb
and
push
mov
es
mov
add
xchg
mov
or
adc
je
and
jl
inc
jns
jle
adc
push
push
movs
mov
adc
sbb
and
ret
cli
sahf
mov
jb
jmp
or
add
adc
inc
mul
pusha
jno
jb
jne
inc
inc
inc
jno
popa
pop
fcomp
cmp
add
pop
sar
xchg
cmp
cmp
and
adc
ror
push
cld
fistp
test
dec
test
ret
cmp
hlt
fist
and
loop
dec
push
cmp
jne
jl
movs
and
mov
(bad)
jmp
mov
retf
xchg
mov
enter
enter
sbb
outs
sub
add
inc
mov
jge
add
dec
lea
cmovg
pop
dec
addr16
stos
loopne
call
sbb
jecxz
(bad)
mov
(bad)
hlt
das
adc
cwde
fild
pop
or
pop
mov
ficomp
jbe
add
and
jg
dec
test
icebp
sub
jg
repnz
jge
mov
sar
add
mov
jl
retf
dec
daa
add
or
fsub
adc
and
mov
jo
je
ins
add
or
and
packssdw
cmp
test
jne
mov
lea
dec
adc
sub
pop
push
das
cmp
adc
or
rcl
add
repz
jg
sbb
inc
add
adc
ins
and
mov
cmp
and
or
adc
fisubr
push
cli
mov
push
enter
and
inc
pop
lds
cmp
mov
inc
jp
cmp
sar
clc
adc
inc
xchg
push
mov
adc
push
hlt
dec
in
sub
or
retf
pop
cld
cmp
push
jmp
jbe
in
shl
add
jl
(bad)
movs
dec
ss
je
cmovae
xor
je
shl
cmps
outs
jo
ds
and
jge
jmp
xor
push
push
aam
pop
sub
add
fidiv
clc
push
es
hlt
ins
adc
int3
jge
aam
ins
mov
push
sahf
xor
jno
scas
lock
push
jno
and
sbb
mov
out
cmp
xlat
dec
rcr
and
jo
sub
mov
fild
movs
add
or
pop
enter
cmp
jle
push
cmp
add
cld
sub
stos
dec
add
inc
xchg
mov
dec
dec
push
sbb
cmp
sbb
inc
lea
je
sbb
cmp
push
cmp
or
mov
clc
add
or
cmp
cld
inc
cmp
dec
pop
test
fimul
jecxz
mov
adc
pop
xor
sar
cmp
mov
jecxz
mov
add
inc
(bad)
loopne
outs
adc
scas
(bad)
aam
cli
dec
sbb
xchg
mov
jmp
jae
pop
push
nop
add
fmul
push
mov
add
push
or
pop
add
xor
loopne
mov
pop
push
fst
data16
xor
add
inc
dec
adc
mov
cmp
xor
lock
test
adc
sahf
mov
adc
jmp
and
xchg
push
xor
pusha
cmp
push
fnstcw
inc
adc
ret
sar
imul
sbb
mov
inc
or
test
pop
sbb
dec
mov
adc
aaa
dec
adc
into
loop
jge
jne
test
je
mov
or
push
adc
(bad)
push
(bad)
lahf
iret
shr
mov
inc
sbb
js
cmp
lods
hlt
xor
(bad)
shl
clc
xor
ja
or
adc
mov
xchg
mov
sub
xor
loopne
push
xchg
add
movs
cli
cmp
jno
aad
push
ret
or
pushf
mov
mov
cmps
sbb
jns
mov
cmp
push
sub
mov
ror
xlat
or
jnp
ss
adc
scas
(bad)
aaa
aam
(bad)
push
cld
(bad)
lods
push
int3
fiadd
shl
push
sub
cmps
rcl
iret
ins
jl
mov
stc
or
sub
sub
or
movs
mov
loop
ins
dec
adc
jne
enter
fisubr
lock
rcr
xor
adc
lods
shl
inc
xlat
pop
pop
outs
loopne
xor
sub
add
aaa
mov
cwde
xor
add
adc
and
add
enter
pop
mov
push
mov
xor
in
imul
xor
pop
dec
lahf
mov
loope
mov
push
and
add
xor
test
mov
jl
push
dec
push
ss
or
icebp
(bad)
xchg
mov
push
push
in
lock
adc
hlt
(bad)
pop
or
repz
jne
jmp
xor
test
add
cs
add
pop
pop
or
add
mov
call
sbb
mov
inc
xor
pop
aam
sub
push
inc
add
fcom
shr
popa
mov
pop
(bad)
cli
sub
or
movs
cmc
and
and
fdivr
xchg
lea
push
push
cmp
outs
mov
cmp
or
rcl
hlt
jl
add
dec
cld
xor
jp
rcr
enter
push
jge
dec
into
call
sub
in
push
ins
jo
adc
mov
stos
js
mov
pop
xchg
jge
xchg
or
mov
and
cdq
ins
cdq
jae
popa
pusha
push
not
push
push
scas
or
pusha
mov
sbb
lods
add
cmp
mov
cdq
jg
ret
mov
jge
cmps
xor
push
push
and
xor
lock
inc
adc
gs
lock
bound
add
lock
dec
jb
ret
push
hlt
hlt
add
or
dec
sbb
pop
add
cmps
enter
jp
lods
add
pop
add
pop
outs
xchg
adc
ret
sbb
js
cmp
test
out
cmp
cmp
ror
cmp
cli
rdpmc
push
jecxz
sub
mov
jg
retf
inc
push
inc
xchg
push
pop
jbe
pop
pop
adc
ror
dec
xchg
fsub
or
gs
lea
xor
std
xchg
mov
clc
or
fmul
sub
xor
ins
pushf
es
test
xor
dec
mov
xchg
test
and
and
push
pop
xor
or
dec
mov
add
push
dec
jne
push
push
jbe
bound
mov
and
push
jmp
and
(bad)
adc
dec
push
or
and
ret
mov
cld
add
and
pusha
sbb
adc
sbb
das
ins
cld
in
add
add
jno
sbb
add
push
push
add
test
and
dec
mov
in
call
push
sub
add
mov
xchg
cli
xchg
mov
lea
sbb
pusha
mov
ins
sub
sbb
sbb
cmp
add
pop
jne
retf
data16
and
xor
inc
mov
js
loopne
jbe
sub
in
and
sbb
out
mov
aaa
push
xor
pop
add
cmp
and
add
xchg
in
out
push
cmp
ret
mov
sbb
loopne
imul
add
sbb
test
sbb
jb
aaa
push
adc
mov
scas
mov
and
push
cmp
aaa
pop
adc
add
pusha
sbb
cmp
jne
xchg
adc
(bad)
adc
or
xchg
mov
add
pusha
add
inc
cwde
xor
out
dec
lock
pop
fistp
or
es
dec
outs
pop
xchg
adc
mov
aam
ret
ins
aaa
dec
adc
or
(bad)
jne
mov
cmp
sbb
dec
cs
add
xor
pusha
sbb
(bad)
add
xor
call
bswap
inc
push
cdq
sbb
imul
push
jo
out
and
jmp
push
inc
test
add
loope
popa
mov
dec
xchg
sbb
mov
mov
jmp
mov
or
xchg
dec
inc
or
ret
stc
icebp
jb
test
push
ret
and
(bad)
or
imul
jecxz
mov
adc
push
push
int3
and
and
add
add
mov
mov
cmp
inc
cmps
in
xchg
pusha
jp
(bad)
int
mov
push
mov
cs
int
jae
and
test
retf
sub
mov
sbb
sbb
sub
add
inc
xor
mov
sbb
push
sbb
arpl
xchg
xchg
les
cmp
cmps
icebp
pusha
pop
push
mov
in
pushf
sbb
ins
push
xor
sbb
inc
push
push
adc
pop
and
mov
cmp
jae
test
imul
or
xchg
pop
imul
sbb
xor
leave
fsub
sub
or
pop
pop
bound
and
shr
sbb
push
and
dec
enter
push
or
cwde
or
pop
clc
adc
test
pop
mov
je
sbb
add
popa
add
or
and
stos
stos
stos
push
push
test
push
stos
and
push
add
es
xor
or
pop
scas
mov
call
outs
mov
mov
cmp
pop
cmp
cmp
rol
pushf
rol
adc
sbb
adc
les
and
pop
daa
push
pusha
push
or
shl
cwde
push
dec
popa
xchg
cdq
rol
leave
xor
sbb
cmp
pop
pop
or
dec
int3
ss
mov
or
lock
inc
mov
fcomp
push
push
and
push
xor
add
jno
pushf
push
and
add
cwde
jmp
(bad)
loopne
ja
mov
dec
jne
and
fild
or
push
jl
fidivr
pop
cmc
push
inc
mov
dec
push
adc
and
rol
jg
xor
push
inc
pushf
push
jns
cld
jg
imul
xchg
clc
mov
loope
add
dec
jb
xchg
or
adc
and
sbb
jno
mov
test
adc
pop
push
pop
jle
xchg
adc
packssdw
push
inc
push
cmc
mov
inc
sub
fcomp
jmp
cmps
imul
je
xchg
pop
cmp
add
sbb
mov
mov
adc
or
inc
xor
mov
push
cmc
inc
out
add
sar
mov
adc
mov
inc
jle
fsubr
fadd
mov
mov
xchg
je
mov
or
cmp
or
sbb
or
jge
daa
add
inc
enter
mov
inc
push
and
jnp
(bad)
dec
sbb
imul
je
imul
push
inc
adc
push
or
push
xor
push
xchg
adc
xor
push
cmp
(bad)
jns
cs
ret
test
push
mov
dec
sbb
adc
pop
xor
mov
mov
cmp
jl
sub
xchg
movs
jg
cmp
movs
mov
xlat
clc
sub
hlt
mov
push
lock
mov
ins
clc
call
push
imul
movs
sbb
push
inc
movs
mov
mov
pop
test
or
loopne
das
aas
cmps
pop
xor
shl
cmp
cmp
add
cmp
test
cmp
push
add
mov
fsubr
fwait
xchg
xchg
out
dec
enter
add
push
dec
dec
loopne
pop
fadd
sub
add
leave
inc
sub
sub
leave
fistp
mov
add
sub
xchg
mov
fs
dec
into
add
inc
and
cmp
pop
cld
mov
mov
mov
lea
add
movs
inc
mov
rol
add
movs
sub
xor
call
out
add
mov
inc
mov
dec
adc
adc
retf
das
add
ret
pop
or
fs
addr16
jecxz
inc
xchg
dec
in
add
or
ret
je
(bad)
push
add
push
clc
mov
adc
ror
sbb
sbb
or
jge
add
mov
int3
jo
ins
inc
cmp
cwde
sbb
push
xor
or
movs
out
outs
sbb
pop
iret
pmulhuw
jae
lods
sub
push
shl
sub
sbb
xor
inc
sbb
or
fadd
inc
cmp
fsub
inc
jns
mov
sub
inc
jmp
inc
outs
dec
add
sbb
shl
out
sub
cmovns
mov
xchg
and
(bad)
jge
lock
xchg
push
push
cwde
push
sahf
xchg
push
(bad)
or
lods
ins
pop
and
je
dec
lea
pop
adc
push
mov
push
jns
loope
dec
cld
xor
enter
retf
(bad)
sub
jns
inc
popaw
dec
cmp
in
pusha
jbe
(bad)
sbb
clc
clc
or
or
call
hlt
push
inc
inc
or
sub
mov
jp
bnd
sbb
ficomp
hlt
dec
sahf
pop
fs
rcl
pop
test
cmp
les
sbb
test
popf
sub
mov
ds
lock
sub
je
shr
jbe
fidivr
xor
fwait
jns
inc
ret
repnz
je
out
pop
mov
or
cmp
lea
mov
inc
inc
arpl
leave
enter
sbb
mov
stc
lods
dec
call
scas
xor
add
jmp
pop
or
add
je
pop
imul
in
fs
(bad)
loop
sar
push
and
or
sub
call
nop
repz
add
aaa
inc
mov
sbb
push
rol
adc
adc
xor
or
(bad)
jne
pop
adc
jo
loopne
and
pusha
test
and
sbb
sub
jno
nop
add
or
jp
and
cmp
xor
mov
movs
or
pop
mov
movs
cld
(bad)
cmp
mov
sbb
jmp
mov
jmp
lahf
les
add
iret
add
dec
jne
and
push
or
or
mov
popa
adc
push
bound
inc
sub
adc
sbb
jo
push
pop
dec
and
shl
or
and
jecxz
inc
jbe
je
dec
xor
dec
cmp
enter
pop
dec
pop
push
jb
in
pop
pusha
push
add
and
cmps
cmp
cmp
and
adc
jecxz
shr
push
sbb
icebp
mov
or
pop
imul
pop
leave
xchg
pop
jg
jbe
rol
lock
xchg
mov
pop
sub
retf
push
push
mov
out
xchg
test
pop
sub
sti
push
dec
and
cmp
ss
cmp
xchg
inc
adc
mov
push
mov
fst
sbb
xchg
push
pusha
and
and
push
xor
shr
or
cmp
dec
pop
add
pushf
push
movs
sbb
pusha
inc
pusha
sub
adc
into
ds
pop
adc
cmp
inc
sub
mov
jmp
popf
add
sahf
add
add
mov
into
je
xor
sbb
push
cmp
xor
mov
pop
push
shl
adc
inc
sbb
movs
nop
push
in
retf
stc
ss
ret
inc
int
rcr
les
jnp
int
ror
fmul
pop
inc
inc
cwde
retf
movs
pop
pop
xchg
(bad)
cmp
pop
out
mov
push
push
in
sbb
xchg
test
and
shl
or
and
pop
or
gs
mov
retf
inc
repz
sbb
ret
mov
cmp
loop
push
xor
dec
xor
push
add
pop
or
sbb
and
rcr
nop
jge
jg
sub
test
bnd
or
jne
add
add
mov
sbb
inc
add
ret
or
fmul
adc
push
stc
ja
add
(bad)
repnz
pop
enter
mov
or
mov
or
push
fadd
cmp
jge
idiv
jl
lods
and
push
fsub
mov
jmp
clc
or
hlt
sbb
or
xchg
pushf
out
test
sub
mov
inc
mov
outs
(bad)
sar
jge
cs
outs
popa
xor
xchg
(bad)
jle
or
and
xor
adc
mov
popf
test
add
dec
call
dec
add
mov
arpl
add
jae
pop
mov
jl
mov
or
push
cmp
or
ret
jg
pop
sbb
push
mov
mov
lods
sub
cmp
sqrtps
push
mov
mov
and
jp
push
xor
dec
add
sub
mov
icebp
pop
test
adc
dec
and
mov
push
pop
(bad)
mov
fimul
adc
add
movs
jle
ret
scas
sub
add
adc
mov
not
cmp
push
push
iret
loopne
xor
or
rsqrtps
jmp
or
push
adc
(bad)
sar
inc
sbb
inc
push
add
inc
cmc
pop
and
jno
push
lahf
aam
pop
or
ss
jmp
or
push
push
xchg
or
sbb
sub
push
jg
push
cmps
adc
xchg
pushf
sbb
inc
movs
test
and
cmp
jl
or
call
fldenv
mov
adc
mov
fidiv
fadd
sub
call
add
cmp
adc
adc
imul
sub
xor
neg
xchg
ins
test
xchg
cmp
popa
add
add
pop
jne
rol
popa
jb
and
mov
jg
std
and
jmp
mov
add
xor
mov
std
fild
stos
out
or
ret
xor
lea
lahf
mov
jmp
cmp
pusha
push
push
pop
js
adc
xchg
test
and
add
add
push
data16
movs
or
rcr
cld
adc
sbb
or
test
call
mov
mov
push
pop
test
or
inc
xchg
jmp
add
jl
push
scas
int
sti
ins
cmp
jge
lea
pop
mov
or
aaa
push
sub
add
lahf
(bad)
outs
push
jle
jecxz
push
inc
mov
jmp
sbb
sbb
in
mov
frstor
adc
xchg
sbb
add
push
dec
adc
test
inc
mov
cwde
cmp
idiv
add
xor
push
cmp
add
cmc
inc
test
out
add
out
add
inc
or
push
push
idiv
neg
inc
inc
addr16
cmp
ret
dec
add
pop
ins
call
ret
(bad)
mov
mov
push
push
sbb
jo
push
push
cdq
push
pop
push
enter
mov
add
sub
ficomp
mov
in
ret
sub
and
aad
fdivr
sub
adc
push
je
pusha
jb
(bad)
leave
cmp
mov
stos
mov
add
and
or
aad
xchg
bound
pop
cmp
ret
rcr
xor
mov
push
xchg
enter
sub
int3
sbb
inc
int3
cmp
stos
fisttp
sbb
sub
les
pop
rcl
jmp
aam
push
fcom
cmc
add
sbb
mov
cmps
add
push
or
sbb
inc
mov
dec
cmp
sub
cmp
mov
ins
add
inc
dec
lods
pusha
push
mov
or
inc
hlt
(bad)
fcomp
push
sti
aam
and
push
inc
fs
xchg
scas
call
and
add
mov
test
push
add
jge
add
or
jmp
add
adc
dec
or
add
std
adc
or
inc
jmp
or
std
pop
fwait
test
jo
jne
das
add
sub
pop
inc
pop
add
std
fs
scas
mov
mov
ret
(bad)
sbb
push
adc
or
sbb
popf
xchg
les
mov
lock
fmul
mov
leave
pop
mov
sahf
out
rcr
(bad)
rcl
mov
xor
int
rcr
in
sbb
dec
push
mov
in
pop
dec
push
hlt
in
call
call
cs
cmps
mov
std
movs
add
mov
push
fidiv
adc
jns
bound
and
(bad)
push
mov
or
xchg
out
movs
or
push
popa
sbb
adc
cwde
bound
lods
xchg
dec
test
sub
in
retf
data16
xchg
loop
lea
(bad)
shl
cmp
loopne
int
sbb
in
rcl
and
clc
cmps
aam
or
ins
add
js
js
xchg
jmp
mov
loop
les
stc
sub
lods
mov
pop
cmp
(bad)
lods
xor
mov
mov
mov
clc
cli
add
hlt
and
clc
test
or
pop
sub
int3
int
imul
add
enter
adc
mov
shl
xchg
shl
aam
pusha
push
test
daa
push
clc
clc
xchg
inc
and
call
pushf
sub
outs
inc
lea
fs
push
or
mov
movs
push
fadd
test
push
mov
xor
clc
shr
movs
jns
xor
ficomp
fdivr
inc
push
cmp
cli
cmp
mov
fs
xor
jae
stos
mov
xchg
rol
cli
mov
xchg
sub
and
ror
int3
add
mov
push
idiv
push
dec
(bad)
cwde
ficomp
jne
mov
hlt
in
cmp
jp
mov
test
cld
mov
add
arpl
loopne
hlt
int3
cmp
rol
bound
addr16
sbb
arpl
shl
mov
xchg
push
pop
mov
movs
rol
sbb
inc
add
push
sahf
(bad)
cmp
in
rsm
imul
call
and
or
or
mov
pusha
jmp
jne
add
mov
in
dec
and
push
xor
jb
sbb
mov
shl
ret
test
call
dec
lods
ror
prefetcht1
jp
adc
call
add
or
xchg
jmp
outs
push
cld
push
ds
scas
mov
cmp
popa
xor
(bad)
dec
or
xor
mov
int3
jmp
jle
push
loopne
mov
jb
rol
sbb
ret
inc
sbb
adc
js
sub
int
add
and
ret
adc
mov
idiv
adc
hlt
mov
mov
adc
cmp
mov
daa
das
sub
test
cmp
js
int3
dec
(bad)
jge
adc
and
dec
scas
sti
pop
jge
push
(bad)
push
inc
sbb
je
dec
ds
and
lock
jge
push
sub
pusha
lea
dec
xlat
and
inc
sub
inc
nop
out
ss
mov
sub
sbb
push
inc
outs
pushf
ror
xor
lock
mov
add
cmp
jle
jmp
jo
or
sbb
loopne
sbb
pop
cmp
loopne
test
or
mov
inc
sub
or
inc
mov
push
or
sar
mov
pushf
sbb
enter
sbb
retf
sbb
sub
popa
add
adc
xchg
fld
cmp
jge
dec
push
sub
retf
clc
daa
and
push
cmp
jge
mov
je
mov
mov
mov
mov
sub
xchg
lods
jb
and
(bad)
popf
mov
rep
stos
mov
jge
fdiv
inc
(bad)
clc
or
xchg
mov
test
jo
sub
dec
xchg
cmps
loop
or
in
and
lock
and
xchg
adc
jmp
aam
data16
sbb
xchg
mov
cdq
adc
add
pop
xor
jb
jae
xchg
add
push
or
in
cmp
and
sbb
clc
cld
pop
inc
movs
mov
cmp
cs
sbb
cmp
or
dec
add
push
ds
outs
or
cmp
jne
mov
jge
inc
xchg
jno
(bad)
sbb
hlt
dec
nop
cld
scas
leave
and
inc
push
sar
and
push
mov
cld
mov
dec
arpl
clc
pushfw
jge
retf
adc
adc
jl
jl
stos
movs
nop
inc
stos
push
outs
sbb
js
mov
mov
xor
enter
leave
js
push
push
jmp
jge
mov
sbb
add
sbb
idiv
jl
cmp
jge
loopne
loop
arpl
adc
adc
or
jbe
shr
stos
adc
data16
xor
jne
lods
add
pop
xchg
pop
cmps
cmps
mov
stos
cld
(bad)
in
cs
inc
mov
add
nop
push
xor
xor
cmc
movs
jge
movs
or
push
or
cmp
or
cwde
dec
mov
cmp
imul
or
jb
jl
aam
push
adc
out
and
unpckhps
icebp
mov
xchg
imul
adc
or
xchg
mov
aaa
sub
sbb
add
bound
push
in
ins
lods
push
push
xor
mov
ret
lods
dec
(bad)
out
(bad)
in
pop
retf
stos
dec
inc
invd
mov
ds
sti
jb
add
dec
sbb
test
jbe
cmp
push
jmp
mov
mov
pop
push
mov
jne
cwde
(bad)
cmp
test
addr16
je
pcmpeqw
dec
adc
cmp
pop
inc
pop
dec
xor
jmp
lods
adc
sub
sub
add
push
mov
in
lea
es
sbb
and
add
cs
sub
or
mov
shr
cli
pop
shl
jmp
and
add
fadd
clc
sub
push
mov
aaa
and
mov
inc
mov
xor
mov
enter
repz
loop
imul
lock
push
in
xor
sub
enter
xor
popa
in
cmp
(bad)
repz
jecxz
push
test
nop
sbb
mov
(bad)
lea
rep
pushf
js
mov
or
jl
push
push
mov
mov
pop
push
or
lods
sar
rol
sbb
cmp
mov
inc
fdiv
sbb
pop
adc
ins
add
mov
cmp
cmp
dec
xchg
xor
jo
add
retf
es
add
or
aaa
xor
sbb
xor
sub
nop
imul
jl
nop
fsubr
sbb
cmp
xor
test
push
inc
sbb
add
inc
jle
mov
mov
xchg
adc
add
mov
add
(bad)
ja
pop
sub
or
pop
call
jnp
inc
push
lock
in
add
or
or
cmc
fwait
sbb
dec
loop
pop
repz
ins
cdq
dec
push
push
dec
sub
dec
push
adc
adc
mov
jnp
jge
jnp
inc
mov
adc
adc
xlat
push
scas
mov
movs
xor
sbb
adc
hlt
sub
jo
cmp
imul
jmp
mov
pop
dec
std
push
scas
dec
les
retf
dec
ror
push
shl
or
push
fld
popf
and
clc
popa
test
mov
jae
enter
pushf
add
inc
sbb
inc
adc
popf
or
arpl
or
pop
leave
loope
mov
call
cmp
shl
cs
jg
les
xor
dec
popf
jmp
enter
inc
psadbw
lss
imul
mov
push
retf
(bad)
jl
mov
sbb
dec
pusha
mov
jp
adc
push
inc
cmp
jge
jecxz
add
and
adc
add
icebp
xchg
add
lods
loopne
xor
pop
xchg
in
ficom
fadd
jns
mov
and
mov
enter
loope
rcr
popa
push
or
nop
mov
push
mov
ror
inc
sub
aam
in
add
xchg
sub
ror
cmp
jne
pop
dec
sub
mov
popa
std
adc
push
in
test
call
lods
in
dec
nop
loope
mov
adc
xchg
mov
cmp
xor
sbb
and
sbb
fwait
inc
and
dec
dec
jmp
cmp
xchg
ins
jbe
fisubr
or
jge
mov
or
adc
subps
jne
nop
jge
or
mov
or
cmp
ficomp
pushf
mov
pop
add
and
add
les
pop
mov
xor
mov
push
push
lock
mov
sbb
jo
or
push
int
and
jmp
push
(bad)
or
push
aaa
jmp
loop
push
and
push
or
outs
lea
ins
and
adc
out
and
adc
xchg
add
mov
adc
cdq
into
inc
xchg
cs
jne
xor
lea
dec
or
jmp
rol
fwait
sbb
in
pop
inc
or
mov
push
xor
and
mov
sbb
adc
sbb
and
jecxz
and
push
sub
mov
and
cmp
xchg
push
movs
xchg
inc
cmp
push
ror
push
hlt
mov
mov
pop
mov
push
mov
pop
pop
pop
loopne
jmp
push
xchg
jmp
inc
or
add
mov
xchg
dec
inc
dec
cwde
popa
cmp
lock
aad
mov
add
xor
adc
aam
pushf
adc
push
ret
sub
fcmovnbe
pop
lock
push
adc
sbb
pop
adc
dec
shr
sbb
mov
push
into
jne
inc
outs
loopne
test
mov
in
or
pop
loopne
in
jl
pshufw
sti
add
mov
ss
dec
inc
call
pop
sbb
or
popf
or
test
or
mov
cmp
int3
or
in
push
dec
jb
lods
sub
mov
pop
sar
adc
jmp
add
jne
lods
mov
inc
stc
mov
sub
ja
call
mov
pop
(bad)
xor
cmp
push
sbb
pop
mov
sub
cmps
xor
mov
fcom
add
sbb
retf
and
jno
sbb
(bad)
leave
pop
mov
and
xor
or
in
sbb
xor
cmp
out
ds
and
les
push
fldcw
jne
sbb
add
adc
cwde
xchg
leave
sbb
dec
in
nop
test
imul
inc
mov
xor
add
mov
add
in
or
cmps
int3
test
inc
fdiv
pop
sub
sbb
fwait
stos
and
push
test
pop
pop
(bad)
jmp
inc
jmp
mov
je
adc
aad
icebp
outs
sub
loop
cmp
and
dec
ret
rcr
push
push
pusha
pop
icebp
ss
shl
sbb
sub
repnz
push
lahf
ins
mov
pop
jns
sbb
in
cdq
nop
mov
imul
pop
cwde
js
aam
pop
xor
mov
int3
clc
ins
in
es
pop
shr
mov
fwait
cld
jo
shr
pop
push
sub
push
jne
sbb
fcomp
cmp
ins
js
or
inc
les
xchg
mov
add
rol
or
test
or
xor
lods
aad
(bad)
lds
loope
push
adc
jecxz
xchg
or
adc
addr16
sbb
or
dec
dec
shl
je
cs
add
sub
mov
sbb
add
into
lods
push
mov
dec
dec
pop
aad
dec
sbb
pop
add
out
push
ss
push
inc
je
or
shl
push
push
push
das
sbb
xchg
inc
push
aaa
mov
(bad)
jne
mov
mov
fadd
add
mov
inc
pushf
and
mov
pop
and
add
fwait
imul
xlat
aam
xchg
pop
ss
cmp
in
and
in
rcl
mov
gs
aam
test
rcr
lods
jb
fadd
inc
scas
push
lock
push
cmp
push
jl
fchs
ja
add
loopne
xor
or
test
lock
jne
xchg
cmp
fldl2t
mov
mov
add
jo
jbe
sar
pop
jge
mov
adc
xor
or
stos
and
xor
and
sbb
jl
mov
nop
stos
adc
inc
mov
int
shl
call
adc
or
push
xor
cmp
push
dec
jmp
icebp
add
inc
sub
lods
and
leave
retf
and
xor
push
dec
jecxz
enter
xor
xrelease
add
fadd
sti
inc
xchg
test
(bad)
mov
icebp
adc
push
sub
jo
movs
pop
imul
and
stc
push
cmp
jns
inc
xor
push
dec
pop
sbb
shr
and
add
cs
mov
arpl
cmp
xchg
jbe
push
mov
or
idiv
je
scas
and
mov
cs
mov
pop
or
shl
stc
(bad)
fadd
push
es
dec
or
bnd
dec
shl
jl
rcr
(bad)
mov
and
sub
push
call
and
sub
cmp
jle
sub
imul
nop
and
cmc
inc
or
mul
push
sub
pushf
pop
inc
pop
jecxz
push
add
mov
std
mov
and
xor
sbb
or
pop
mov
je
cmp
inc
xchg
mov
pop
shl
ja
xchg
arpl
pop
fldcw
iret
or
js
jno
inc
xchg
mov
ins
ins
xchg
jns
mov
add
dec
pop
fisub
add
xchg
cli
fnstcw
fdiv
jmp
mov
lods
xor
lods
lds
test
ins
loopne
test
fsub
fwait
inc
add
mov
dec
pop
clc
sbb
dec
jo
jns
add
(bad)
cmc
das
or
and
jge
pusha
add
div
jmp
inc
push
xor
xchg
pop
push
adc
and
dec
jmp
jg
inc
adc
rcr
mov
add
mov
push
xor
cmp
add
pop
lock
mov
fs
outs
inc
push
jo
test
push
dec
xor
mov
ret
dec
fcomp
ret
gs
test
pop
gs
sbb
or
adc
bound
mov
inc
movs
jbe
push
inc
mov
ret
mov
xchg
leave
push
xor
pop
inc
push
and
or
iret
dec
mov
jmp
ret
repz
and
cmp
ins
call
adc
add
nop
dec
xor
fs
add
and
mov
push
cmp
push
int
ror
pop
sbb
xor
sub
je
(bad)
mov
sbb
push
sub
cmp
loop
dec
lea
mov
aad
fs
inc
out
int
adc
das
mov
mov
lock
pop
lahf
mov
mov
out
les
jne
test
in
adc
and
mov
loopne
inc
adc
and
xor
call
leave
dec
dec
pop
cmp
call
mov
sbb
push
xchg
cwde
jge
imul
test
xchg
or
push
aas
cmc
add
xchg
xchg
push
scas
pop
aad
cmp
lods
add
iret
push
es
and
push
inc
lods
dec
dec
sbb
cmp
cmp
(bad)
imul
std
fisttp
push
sbb
mov
sub
pop
bound
inc
(bad)
jg
jbe
jp
push
jl
or
xchg
jae
out
xor
retf
test
push
fnsave
pop
and
fisubr
mov
ficomp
mov
(bad)
fld
fadd
les
stos
aaa
sub
scas
mov
mov
adc
(bad)
int
call
xchg
jmp
adc
cli
test
dec
mov
in
adc
sub
sbb
xor
leave
mov
(bad)
sbb
lods
ins
jge
jg
adc
add
cmp
and
mov
ins
retf
pop
push
jl
lds
fist
or
mov
sub
test
aas
sbb
sbb
popf
pop
ins
mov
add
sar
mov
ror
inc
sub
add
or
xchg
cmps
rol
push
stos
hlt
push
imul
movs
mov
lods
or
mov
and
add
sti
aam
mov
pop
mov
fs
(bad)
mov
cmp
add
adc
and
push
mov
mov
test
cld
and
cdq
nop
push
sbb
out
push
xchg
sbb
test
adc
sbb
in
fiadd
dec
rcr
sub
or
inc
pusha
add
aad
jne
xor
inc
mov
jne
pop
adc
rol
or
dec
or
xchg
xor
nop
test
add
mov
dec
mov
mov
lea
jo
movs
jmp
imul
xor
jo
jno
outs
and
xor
(bad)
pop
pop
pop
call
mov
imul
cmp
push
out
call
sub
mov
push
sub
jo
mov
sub
dec
push
or
pop
pop
call
mov
xchg
scas
test
dec
push
movs
rcl
adc
mov
pop
cmp
or
and
and
and
dec
xchg
aaa
push
jmp
and
cmp
pop
pop
push
cs
test
in
dec
add
mov
add
shl
cld
neg
sti
xor
cmp
lods
rol
shr
fldcw
inc
pop
jg
add
pop
fwait
fwait
add
add
or
call
mov
mov
fiadd
inc
ins
loopne
mov
ret
pop
add
aaa
imul
daa
rcl
retf
out
push
ss
xchg
into
and
inc
or
adc
push
not
mov
lahf
pop
daa
lock
test
add
or
pusha
shl
ficomp
or
je
jns
popa
and
or
imul
fs
push
mov
mov
cmp
adc
shr
aad
aaa
or
popa
sbb
or
jle
add
push
or
adc
lods
xor
cmc
add
add
adc
sahf
inc
bound
test
call
dec
or
aad
jae
clc
mov
lds
or
pop
inc
inc
sar
lds
sbb
cli
xor
das
fs
jbe
mov
les
xchg
cwde
neg
push
cmp
cmc
and
jb
pop
out
sbb
adc
pop
nop
js
cmp
or
xor
test
push
dec
xor
jmp
rsm
int3
mov
jne
test
adc
mov
adc
or
push
test
add
dec
daa
outs
xor
dec
pop
jmp
lea
les
sbb
mov
inc
and
dec
push
xor
dec
sbb
push
add
movs
nop
jecxz
div
inc
add
or
jo
dec
mov
xor
xchg
mov
mov
inc
cld
lods
mov
add
jp
and
aad
push
das
cmp
mov
inc
call
enter
lock
inc
stc
call
rcr
sbb
imul
push
xchg
xor
mov
arpl
imul
pop
hlt
mov
inc
mov
or
mov
sbb
push
out
or
scas
and
sahf
add
sbb
arpl
fstp
fst
ret
jle
mov
dec
add
test
out
push
pushf
cli
xchg
xchg
push
shr
mov
and
or
fs
add
add
repnz
imul
sbb
add
sbb
retf
xchg
jo
in
mov
mov
ret
mov
inc
xor
cs
les
and
jmp
fstp
push
lahf
add
and
cmc
aaa
enter
sub
mov
inc
push
or
or
call
js
cld
push
push
sub
ret
(bad)
psrlq
pop
test
out
jo
adc
adc
aas
mov
mov
mov
xor
test
ds
in
ds
add
cmc
ss
mov
jle
pop
mov
add
ret
int
cmp
retf
pop
sbb
inc
and
xor
inc
or
or
arpl
dec
popf
cmps
fcom
sbb
push
and
aam
mov
xor
call
cmp
xor
cmps
xor
mov
and
mov
dec
adc
dec
fsub
xchg
pop
ins
mov
rol
stc
or
js
mov
and
retf
idiv
push
dec
pop
ret
jbe
push
jmp
jb
bound
jg
sbb
imul
adc
xor
cmp
xchg
sbb
nop
pop
mov
inc
jle
adc
popa
arpl
test
mov
pop
fld
(bad)
xchg
add
shl
dec
push
movs
mov
cmp
push
mov
mov
mov
add
imul
mov
or
mov
sub
sbb
and
cld
sub
int
and
test
xchg
cmc
movs
and
adc
or
sub
popf
push
sub
sbb
shl
dec
les
cmp
mov
int3
push
imul
or
int
xor
int3
adc
shl
mov
adc
ftst
call
in
call
mov
push
je
xor
push
dec
ins
test
or
lds
popa
jns
adc
add
int3
mov
sbb
jmp
adc
movs
push
in
inc
sbb
push
or
pop
add
sbb
dec
cwde
push
test
sbb
sub
sbb
and
xor
sub
aam
test
dec
ret
or
jmp
xchg
jb
inc
mov
ss
adc
and
adc
or
mov
push
add
mov
or
mov
ja
xor
mov
inc
adc
scas
push
dec
lds
shl
inc
push
out
in
add
sbb
and
mov
mov
retf
imul
mov
ss
es
jne
mov
pusha
fild
push
xor
cmp
je
adc
nop
add
add
call
push
jo
jmp
cs
push
sbb
push
ja
ins
push
inc
inc
push
cmp
add
xchg
or
or
push
push
int3
or
pop
icebp
aam
dec
fldlg2
mov
push
add
mov
shr
test
sub
pop
push
adc
or
add
xchg
sbb
(bad)
xchg
cmp
and
sar
sti
add
std
cmps
repnz
test
ins
cwde
dec
xchg
ret
inc
out
sub
mov
in
push
adc
call
out
sub
pushf
xchg
jno
xchg
add
push
int3
fst
and
scas
add
in
xchg
retf
inc
or
nop
cmp
pop
add
dec
and
inc
add
aaa
(bad)
xchg
push
dec
dec
add
xchg
add
nop
xor
dec
pop
xchg
call
mov
sahf
dec
sub
loop
jp
push
dec
movs
jmp
xor
mov
les
push
or
dec
ror
imul
loope
and
push
and
push
xchg
jecxz
out
dec
loope
and
mov
ret
xchg
sub
inc
xor
adc
enter
cwde
mov
pop
scas
and
push
and
and
adc
sub
jns
stos
in
cdq
mov
jns
xchg
sub
retf
(bad)
and
push
lds
xchg
mov
in
xchg
xchg
adc
adc
push
or
lds
test
add
cmp
inc
dec
or
add
sub
xlat
pusha
and
add
dec
inc
and
push
cmp
jo
mov
inc
arpl
arpl
adc
mov
and
push
fucomp
push
fimul
sub
xchg
and
mov
leave
push
leave
adc
xor
inc
push
sub
mov
adc
push
adc
icebp
shl
adc
add
lods
pop
pusha
mov
mov
leave
aaa
or
mov
mov
shl
sub
ja
or
xor
xchg
xchg
or
nop
rol
adc
dec
sub
cdq
add
movs
(bad)
xchg
test
mov
dec
inc
mov
push
(bad)
fsub
inc
xchg
retf
xabort
sbb
xor
and
lea
mov
out
dec
jae
fadd
jle
cmc
xchg
dec
mov
scas
or
fmul
cmp
fbld
test
add
stos
mov
pop
xor
push
mov
lods
add
cmp
cmp
sbb
std
add
dec
lea
pop
setns
add
mov
and
jo
out
cli
adc
push
fimul
cmp
imul
movs
xchg
xchg
jno
and
push
retf
int
cmp
inc
or
mov
loopne
mov
push
cwde
add
pop
fild
sbb
pop
or
sub
adc
ins
jns
mov
xor
inc
mov
imul
fdivr
iret
or
loopne
mov
cmp
add
push
inc
scas
add
push
add
xchg
adc
out
ret
push
or
push
push
xor
lahf
sbb
add
sbb
dec
sbb
ret
mov
mov
pop
pop
aaa
xchg
les
cld
ja
push
rcr
mov
arpl
jg
add
push
das
sbb
xchg
xchg
push
imul
fdivr
gs
test
out
cmps
push
nop
int3
add
and
pop
mov
aas
inc
or
ins
or
mov
inc
and
cmps
fs
mov
das
(bad)
(bad)
enter
add
mov
sub
and
jp
inc
pop
fdivr
sbb
sbb
cmps
stos
inc
clc
xchg
sub
sub
fcom
jp
push
adc
gs
sub
push
pop
jnp
sub
test
dec
mov
dec
loop
add
shr
sbb
test
mov
sub
leave
add
dec
jbe
push
jmp
xor
loop
inc
sbb
inc
push
or
ins
fst
push
add
ret
bound
and
fbld
mov
ds
jnp
mov
mov
test
add
push
(bad)
cmp
adc
fwait
or
add
mov
stos
push
rcr
inc
jno
dec
mov
and
iret
shr
push
mov
and
jne
icebp
cwde
es
add
dec
add
push
xchg
adc
inc
pop
stc
iret
dec
cmps
mov
jmp
cmp
pop
inc
adc
jl
or
push
fmul
adc
and
pop
xor
enter
and
jo
dec
or
inc
enter
clc
push
pop
mov
inc
sub
adc
mov
lods
add
cmp
and
adc
xor
mov
jne
(bad)
or
cmp
add
es
sar
loopne
jo
add
jmp
jmp
inc
add
push
mov
mov
popa
jl
add
into
pop
lds
jecxz
es
clc
dec
cs
cmp
mov
fimul
add
outs
scas
xor
and
push
push
mov
mov
sar
in
jbe
mov
popf
add
pop
pop
add
cld
sub
adc
(bad)
jmp
mov
mov
fsubr
imul
sub
js
push
ss
dec
test
dec
sub
push
sub
not
outs
cli
movs
movs
sub
nop
xor
inc
and
jae
jle
add
xor
inc
cwde
hlt
cmp
or
inc
pop
mov
xor
xor
push
xor
xchg
xchg
xor
sbb
or
call
or
adc
fimul
cmp
fs
or
adc
dec
shr
or
movs
dec
and
add
and
cmp
(bad)
aaa
cmp
mov
cld
add
sar
or
push
enter
loope
gs
cmp
nop
fcom
std
add
jmp
pop
imul
ss
or
jne
or
stos
out
stc
xchg
clc
xchg
adc
mov
cmps
and
leave
ret
in
ja
lahf
push
cmps
(bad)
sbb
rcl
fisubr
and
jne
pop
push
jg
ret
popa
pusha
into
aam
pop
mov
loope
push
ror
xchg
adc
push
cmps
pop
clc
xor
sub
pop
adc
mov
aam
retf
loopne
inc
inc
lods
inc
or
lea
popa
cmp
mov
and
imul
stos
pop
xor
mov
inc
ja
or
outs
imul
out
and
aaa
(bad)
mov
out
daa
sub
sbb
xor
mov
sub
dec
xchg
jmp
fs
lock
arpl
in
inc
fwait
pop
add
popf
lods
add
mov
retf
mov
jge
push
retf
push
or
xchg
mov
sub
icebp
sub
mov
and
cmps
pop
fwait
jecxz
jecxz
dec
push
je
sub
xor
and
inc
adc
adc
add
or
mov
test
dec
push
mov
dec
jne
add
iret
shl
and
or
or
shr
cmp
and
add
stc
xlat
mov
sub
pusha
or
push
dec
dec
adc
sub
sbb
push
adc
mov
xchg
jne
or
je
jle
ror
push
jmp
popa
add
jmp
jmp
in
jb
inc
jmp
ins
and
and
cmc
dec
sub
xor
xor
(bad)
loopne
mov
add
and
or
lods
xor
push
adc
test
mov
retf
scas
daa
or
test
sub
(bad)
fisttp
cmp
jne
adc
xor
ja
mov
add
stos
and
mov
lods
dec
mov
loope
xchg
rcl
inc
clc
sub
pop
add
popa
xor
push
dec
nop
sub
shl
loopne
test
scas
cwde
fdivr
pop
xor
cmp
or
dec
adc
or
cdq
nop
cmp
and
jnp
pop
inc
mov
sbb
inc
lds
lsl
xchg
mov
adc
xchg
(bad)
push
lds
inc
and
adc
sbb
or
dec
sbb
pushf
ins
dec
loopne
in
fst
pop
add
fst
and
add
enter
fstp
mov
ret
mov
mov
cmp
sar
add
mov
cdq
and
lock
(bad)
lock
stos
dec
dec
xor
lea
cmp
adc
(bad)
hlt
push
dec
jmp
mov
mov
mov
add
nop
retf
mov
pushf
cmp
aaa
retf
inc
js
ret
add
sbb
add
mov
shl
mov
push
mov
popa
adc
test
sbb
sbb
jnp
movs
dec
cmp
xor
pop
movs
sar
cmps
fnsave
test
das
(bad)
leave
cmc
rol
aad
cdq
push
inc
cwde
lds
ficom
mov
lock
add
int
test
xor
add
xchg
retf
cmp
sub
outs
sub
fstp
or
jmp
adc
jmp
in
sub
cwde
outs
mov
or
stos
or
mov
or
rol
sbb
dec
inc
(bad)
push
or
mov
test
pop
xchg
dec
movsx
pop
dec
mov
sar
pop
or
sub
jge
cmp
sbb
iret
add
sub
shl
sub
inc
mov
push
add
ins
push
mov
ja
neg
and
add
addr16
adc
mov
pusha
in
adc
push
or
adc
mov
sub
jmp
or
dec
mov
pop
dec
mov
or
dec
pop
mov
inc
xor
cli
xlat
loope
inc
and
mov
call
mov
arpl
jge
sbb
cli
or
lea
add
xchg
push
push
sbb
popf
lock
or
pop
or
pushf
push
in
xchg
int3
push
or
pushf
adc
xor
shr
(bad)
adc
pop
cmp
rol
pop
nop
(bad)
call
xor
push
adc
adc
mov
pop
xchg
daa
ficom
or
nop
and
sub
xchg
test
cmp
(bad)
sub
sub
push
inc
in
inc
das
or
out
or
pusha
test
mov
dec
and
mov
mov
mov
or
or
pop
xchg
add
push
add
ds
pushf
push
push
or
pop
or
ret
sub
sbb
test
sbb
test
xchg
pushf
imul
push
pusha
jno
xor
add
adc
daa
sbb
adc
sar
cmps
push
test
mov
sub
not
test
mov
loopne
imul
shr
sub
dec
jno
ret
imul
loop
pushf
ins
loope
mov
pop
pop
jle
jno
ret
popa
pusha
es
fnstenv
hlt
push
jo
pusha
add
inc
inc
loopne
mov
data16
add
fild
sbb
or
inc
pusha
jl
or
retf
sub
add
add
dec
push
inc
inc
loopne
cmp
jbe
imul
dec
push
fs
mul
not
in
cld
push
pop
mov
ror
fadd
loop
lods
rcl
cmp
jmp
cs
dec
fldz
push
jne
lea
adc
mov
js
jmp
cmp
movs
add
inc
ja
aad
ds
mov
out
mov
jmp
enter
ret
sub
and
or
fnstcw
adc
adc
es
dec
inc
sub
repz
inc
(bad)
push
or
sbb
jne
fwait
popf
enter
xor
lds
jmp
push
push
es
sbb
jbe
mov
push
sbb
push
(bad)
add
cmp
cmp
and
add
mov
das
add
outs
imul
js
push
sub
pop
mov
mov
cmp
aas
das
sub
xor
shl
inc
fcmovb
rol
add
pop
rcr
fistp
push
cli
jmp
jmp
cs
push
pusha
jo
test
test
inc
mov
adc
leave
mov
xchg
popa
movs
sbb
pusha
add
sub
mov
xor
add
push
sahf
or
mov
add
and
cmp
repnz
add
jns
je
shr
mov
lods
xchg
xor
add
out
popa
movs
fwait
xchg
loope
add
and
push
jmp
je
rcr
adc
mov
sar
pop
dec
sbb
(bad)
pop
fstp
add
mov
pop
jmp
add
fiadd
mov
mov
pop
pushf
lock
push
nop
and
nop
mov
dec
inc
mov
ss
cld
push
sub
sahf
fistp
fs
sti
dec
sub
bound
dec
cmp
or
push
adc
push
and
scas
or
xor
inc
rol
mov
cmp
fild
xchg
loopne
push
stc
xor
xor
scas
imul
xor
push
addr16
mov
les
xchg
mov
pop
int3
push
mov
sbb
sbb
dec
je
jle
pop
xchg
adc
neg
push
sub
fild
stc
out
shl
js
pushf
in
dec
test
sbb
scas
push
in
clc
mov
push
dec
lahf
movs
sbb
in
inc
hlt
inc
in
fsub
fstp
clc
popf
in
fdiv
into
in
mov
out
test
cmp
je
inc
ret
push
add
adc
hlt
or
cli
sub
sub
and
clc
shr
(bad)
sbb
pushf
je
or
je
or
(bad)
pop
mov
jmp
add
je
cmp
popa
aam
ins
mov
dec
adc
je
cmp
mov
xor
js
add
imul
mul
cs
ror
cli
dec
movzx
test
pop
jmp
adc
test
rol
inc
jecxz
mov
xor
shl
or
sbb
push
add
xchg
fs
and
int3
pop
popf
push
and
mov
shr
and
inc
mov
and
add
cmp
div
or
or
movs
stc
xchg
ss
nop
inc
sahf
sbb
xor
movs
cmp
xor
outs
sub
inc
je
pop
repz
pop
and
xchg
or
imul
adc
sbb
sbb
and
jae
sbb
sbb
mov
inc
xor
or
push
cmp
imul
test
cmp
or
add
dec
add
jecxz
mov
or
mov
push
sti
imul
ret
pop
icebp
repz
loope
or
inc
imul
icebp
in
push
pop
fstp
mov
adc
or
or
dec
aam
push
pop
mov
push
mov
pop
or
les
xor
add
add
mov
or
hlt
fdiv
or
push
cmp
xchg
mov
jnp
vpmacssww
push
jle
dec
loopne
push
push
dec
shl
mov
mov
add
nop
arpl
pop
mov
sub
pusha
dec
push
popf
dec
and
or
pop
jns
or
sbb
(bad)
cmp
or
adc
push
dec
int3
iret
or
xchg
and
lahf
cmp
and
push
jb
inc
cmp
mov
dec
cmp
and
inc
icebp
sti
pop
jp
or
xor
and
in
cmp
inc
fdiv
stc
in
sub
jl
repz
xor
jl
adc
adc
sbb
inc
mov
shr
sbb
or
add
sub
inc
xor
hlt
cmps
fldcw
push
mov
call
sbb
adc
push
push
xchg
sub
adc
inc
fmul
scas
xor
lds
stc
add
dec
pop
stc
sub
in
adc
adc
shl
xchg
jl
mov
push
dec
add
sbb
dec
iret
mov
pop
retf
mov
(bad)
das
pusha
sbb
add
add
jne
aas
push
mov
or
mov
and
dec
adc
adc
in
in
adc
jnp
mov
and
adc
xor
mov
adc
das
lea
dec
cli
iret
or
dec
push
mov
xchg
add
mov
or
push
shl
mov
pop
push
enter
or
loop
leave
or
cmps
loop
cmps
leave
mov
pop
movs
scas
aad
push
sub
pop
push
or
push
out
nop
(bad)
adc
dec
mov
shl
test
scas
jge
repnz
retf
and
inc
pushf
fcom
push
dec
sub
adc
mov
sub
repnz
push
fld
test
movsx
cdq
mov
or
sub
test
cs
xor
test
xchg
mov
test
mov
repnz
sbb
sub
xor
adc
jno
sahf
jge
cmp
pop
nop
push
push
jmp
jg
jle
rol
call
xchg
movs
movs
sbb
jge
push
push
add
idiv
cmp
xchg
sbb
adc
fwait
push
idiv
fcom
mov
push
ror
mov
jnp
movs
jb
rcr
pop
push
dec
in
sbb
pop
pusha
mov
(bad)
pop
push
add
mov
xor
imul
jb
cmp
cli
pop
sar
push
imul
jmp
retf
adc
test
leave
and
pop
push
dec
mov
or
and
cdq
nop
retf
inc
push
sbb
push
in
and
ret
adc
cli
gs
mov
jno
push
ins
ret
lods
dec
inc
retf
push
inc
jo
dec
add
jbe
and
bnd
pop
add
adc
sbb
leave
cmp
and
adc
in
mov
or
cmps
xchg
dec
add
jbe
enter
sub
dec
enter
gs
adc
jns
dec
sub
add
fwait
in
mov
and
and
adc
jl
retf
enter
cmp
add
push
adc
jmp
(bad)
dec
sub
in
movs
imul
xchg
aam
push
sub
pop
int3
mov
inc
test
adc
and
(bad)
push
enter
push
and
or
(bad)
mov
nop
pop
popa
pop
(bad)
and
pop
push
or
(bad)
je
dec
and
xchg
imul
mov
cmp
jnp
mov
ror
inc
or
and
dec
mov
mul
fs
dec
adc
sbb
fs
outs
sub
pop
pop
push
mov
sbb
fisttp
ror
push
inc
sbb
push
add
mov
ins
ror
mov
fiadd
std
push
push
dec
or
pop
or
xor
div
mov
shl
mov
(bad)
dec
and
movs
cmp
push
inc
and
push
in
sbb
sbb
fmul
mul
mov
pop
cmps
cld
add
or
mov
or
ss
jae
mov
push
adc
fcmovbe
out
adc
mov
pmaxsw
and
add
mov
add
out
adc
xor
leave
xor
sub
sbb
cmp
push
ror
call
enter
(bad)
jl
das
test
sub
adc
xchg
inc
pop
and
mov
mov
sahf
ins
push
jno
mov
adc
stos
push
data16
lds
neg
add
fmul
sbb
sti
sar
fxch
stos
sub
mov
xor
sub
enter
test
cmp
aaa
sub
cmp
adc
fist
out
call
mov
out
cdq
adc
dec
ins
dec
fcom
mov
sahf
mov
push
mov
adc
cmp
nop
inc
or
lods
mov
inc
push
cmp
rcr
and
jg
nop
inc
pop
adc
and
inc
push
cmp
dec
inc
push
cmp
push
pusha
ins
and
in
js
mov
scas
(bad)
lods
loope
fwait
rcl
dec
inc
dec
jle
pushf
and
in
dec
jne
mov
into
popf
sub
push
aas
mov
outs
or
fsub
and
sbb
or
fsub
rcl
cmp
push
mov
dec
add
test
(bad)
fild
add
test
sbb
stc
(bad)
cld
xor
add
pop
cmp
call
or
into
xor
add
mov
sbb
arpl
sbb
enter
sbb
or
jbe
or
push
movs
shr
adc
jg
sub
jmp
dec
mov
(bad)
mov
(bad)
jmp
(bad)
pop
mov
test
mov
dec
addr16
xor
(bad)
xor
daa
das
imul
push
int3
fild
fsub
dec
shl
adc
dec
fcomp
movs
int3
dec
fld
shr
sbb
(bad)
or
rcr
add
mov
adc
je
sbb
call
sti
ins
adc
nop
lock
mov
fidivr
add
pop
shl
in
add
rcr
fimul
div
sbb
jne
fmul
aas
cmp
rcr
dec
dec
and
or
fcom
pop
pop
mov
push
mov
test
call
retf
xor
shl
enter
fild
add
shl
mov
mov
cli
add
jmp
or
mov
sub
rcl
add
fld1
rcl
ret
and
mov
lahf
fadd
adc
fidivr
mov
push
loop
mov
(bad)
mov
bound
dec
mov
rol
ds
add
pop
mov
loop
sar
ret
jl
push
pop
push
mov
jmp
sbb
cmp
add
int3
rcl
clc
cs
and
ss
pop
(bad)
ficom
enter
sar
xor
mov
test
loopne
cmp
sbb
in
sbb
retf
enter
dec
enter
xchg
test
xchg
shl
imul
adc
lds
ror
mov
daa
xchg
or
mov
in
mov
adc
xor
jmp
and
in
mov
dec
enter
int3
in
jge
and
in
nop
mov
mov
fild
push
retf
out
pop
mov
cmps
adc
cmp
or
push
ss
jle
or
mov
sbb
cmc
mov
mov
(bad)
outs
data16
fmul
add
(bad)
mov
inc
fs
jb
cmp
and
mov
aaa
aas
push
xchg
mov
cwde
ret
lock
push
enter
scas
out
sub
clc
xchg
cdq
ja
push
stos
dec
or
enter
inc
add
in
cmp
inc
popf
cdq
cdq
or
sbb
mov
out
sar
and
dec
dec
je
add
out
imul
mov
jae
jno
dec
fiadd
push
jo
not
(bad)
(bad)
fs
jo
push
call
loop
mov
hlt
xor
mov
add
mov
je
jmp
ret
je
cmc
jmp
inc
outs
or
ja
adc
cs
inc
mov
inc
mov
popa
mov
xor
add
aaa
or
rcr
push
push
dec
add
js
scas
mov
pop
and
pop
mov
jl
sub
push
(bad)
clc
js
inc
inc
loope
rcr
loop
pop
pop
enter
mov
jo
sbb
repnz
push
push
jmp
cmp
arpl
add
pop
cmps
in
arpl
shl
(bad)
mov
popa
mov
xchg
imul
dec
mov
dec
push
push
into
mov
mov
push
cmp
pop
and
mov
out
imul
es
div
xchg
inc
pop
mov
or
sar
or
retf
xor
mov
pop
(bad)
nop
sbb
push
ret
adc
xlat
rcl
push
sbb
or
movs
sbb
pop
xor
mov
lock
fild
or
jge
test
pop
imul
sbb
repnz
fmul
data16
or
jmp
inc
imul
dec
pop
div
push
pop
push
lock
xor
pop
shl
inc
div
cmp
enter
shl
idiv
or
fincstp
imul
(bad)
adc
jecxz
inc
jge
mov
sahf
lock
ror
movs
mov
out
push
push
test
mov
lea
ss
sbb
lea
inc
rol
jae
add
mov
and
ret
add
nop
push
mov
(bad)
dec
jae
push
sub
push
and
mov
add
or
pop
sahf
in
in
cdq
and
(bad)
sbb
loopne
test
cdq
out
sub
sub
retf
adc
or
lock
enter
repz
adc
or
xor
test
push
sub
jmp
add
pop
dec
jne
popa
add
sbb
lahf
pop
inc
or
pop
arpl
jle
retf
loop
or
or
or
mov
xchg
jne
cmps
or
aaa
inc
test
pop
ror
retf
dec
cmp
mov
ret
pop
pop
js
or
mov
or
add
adc
cmp
push
jg
mov
jae
mov
iret
push
repz
fist
inc
xchg
aaa
mov
mov
shr
or
mov
shr
sbb
ins
adc
inc
shr
and
mov
and
dec
add
inc
push
push
adc
imul
adc
in
repz
fs
cmp
jo
pusha
push
adc
jb
inc
inc
mov
mov
xor
or
or
push
sub
push
call
adc
ins
test
mov
(bad)
clc
push
fidiv
mov
inc
inc
mov
xacquire
jb
neg
cmp
lock
test
not
call
std
in
retf
or
push
inc
jo
sbb
aaa
sti
lock
es
add
clc
imul
pop
xchg
add
data16
adc
mov
jne
aad
mov
xchg
and
push
dec
jo
pop
xchg
(bad)
shr
and
mov
out
mov
adc
add
xchg
xor
dec
jae
sar
cld
or
sti
je
fcom
mov
fild
jo
mov
test
mov
test
mov
ret
ret
lea
sbb
test
pop
dec
or
fwait
mov
sar
jg
push
mov
and
adc
fisttp
xchg
es
and
jns
sub
call
mov
mov
cmp
mov
mov
enter
shl
or
(bad)
shl
aaa
aaa
or
shl
adc
call
loopne
test
inc
das
div
cmp
adc
pop
cmp
inc
sbb
sbb
sub
mov
ds
xor
pusha
scas
cli
ret
js
mov
shl
or
lock
out
jecxz
movs
adc
sti
shl
jbe
cli
rcl
inc
hlt
adc
pop
pop
mov
sbb
dec
cmp
pop
ror
jle
push
pop
ret
into
jmp
cmps
pop
sbb
or
or
add
push
dec
adc
outs
(bad)
mov
inc
push
mov
ret
loopne
(bad)
xor
or
dec
push
test
mov
test
adc
popf
ss
test
mov
pop
ss
jge
pop
sbb
or
scas
scas
outs
xlat
and
icebp
sbb
nop
and
fcomp
push
rcl
mov
push
hlt
xor
and
or
pop
cmp
mov
pop
ds
dec
push
adc
stc
(bad)
ins
mov
mov
xor
mov
jl
ins
shl
inc
xchg
mov
mov
imul
jmp
loope
imul
jge
mov
fisttp
mov
or
fsub
mov
xor
clc
sbb
ret
or
pop
mov
dec
sbb
push
shl
inc
dec
ret
mov
inc
pop
inc
mov
test
inc
inc
mov
test
shl
dec
data16
jecxz
movs
popf
inc
mov
out
movs
pop
stos
fisttp
jne
repz
push
into
push
loopne
or
xchg
cmp
push
jne
push
sbb
test
inc
fiadd
or
inc
mov
inc
mov
or
push
mov
mov
sbb
and
mov
and
cld
sahf
dec
rcl
dec
inc
adc
in
loopne
(bad)
retf
jl
sbb
mov
or
repnz
cmc
or
cld
mov
fwait
mov
sub
scas
pop
mov
push
pusha
xor
dec
popf
jb
add
test
retf
pop
mov
sahf
aad
inc
shl
cmp
int3
push
push
and
mov
retf
and
push
dec
call
cmps
popw
push
(bad)
test
mov
lea
xor
adc
leave
adc
mov
xchg
xchg
inc
add
sbb
cbw
dec
add
arpl
dec
mov
add
xor
pusha
cs
jl
xchg
sbb
xchg
inc
and
inc
mov
sbb
and
and
or
adc
push
sbb
and
ret
pop
inc
mov
stos
adc
mov
aas
sub
int3
pop
xor
add
mov
sbb
push
fst
dec
mov
pop
inc
or
add
dec
jo
inc
scas
inc
mov
cld
aad
nop
mov
imul
lods
fimul
or
and
mov
mov
push
sbb
inc
inc
cmp
cmp
in
adc
push
or
add
dec
or
sub
push
and
inc
pop
cwde
inc
add
pop
shr
jb
inc
add
test
add
or
inc
ret
loop
inc
push
xlat
jb
hlt
fild
adc
or
add
js
outs
fadd
out
add
jle
shr
pop
jge
adc
out
pop
lea
push
inc
adc
mov
inc
(bad)
mov
jb
jb
sub
add
daa
fmul
cs
inc
add
sub
add
mov
or
or
mov
in
rcr
rcr
aam
movs
ror
mov
cwde
adc
hlt
pop
pop
push
xor
fidivr
hlt
or
push
cmps
dec
or
loop
into
jb
aaa
call
inc
mov
inc
inc
xor
jb
and
sar
shl
push
lock
leave
(bad)
xor
adc
or
add
mov
sub
pop
(bad)
sub
rol
rol
aam
xchg
jl
sub
cmp
mov
ret
bound
add
jmp
ds
and
mov
or
fmul
fsub
in
or
and
adc
call
movs
or
mov
mov
mov
js
test
icebp
xor
mov
mov
bound
mov
sbb
xchg
shl
xor
pusha
cmp
cmp
es
shr
add
mov
ror
mov
mov
es
mov
mov
fist
adc
mov
cwde
retf
dec
mov
jge
loop
adc
push
jle
repnz
xchg
das
lea
push
rcr
xchg
test
add
add
push
and
test
fstp
(bad)
mov
mov
add
pop
mov
mov
push
xor
add
loop
sbb
call
cmp
sub
jo
or
jae
xchg
push
xchg
add
rcr
or
test
and
imul
dec
(bad)
or
push
mov
jbe
adc
pop
or
movs
push
add
cmps
es
add
pop
push
inc
pop
add
add
ss
and
jb
lods
cmp
aaa
inc
sub
cmp
movs
add
jb
lock
push
or
pop
lods
lods
and
push
lods
test
nop
sbb
push
test
xchg
push
int3
mov
push
sar
xchg
mov
adc
xchg
retf
inc
inc
mov
xchg
lods
(bad)
or
mov
stc
inc
int3
sub
ret
test
js
push
adc
jmp
mov
sahf
movs
sbb
or
xchg
dec
sub
mov
jne
jp
push
adc
push
adc
push
sub
pop
aaa
sbb
gs
(bad)
push
cwde
dec
iret
mov
push
outs
pop
adc
inc
push
pop
push
pop
mov
xchg
adc
push
adc
cmp
enter
bnd
les
inc
(bad)
repnz
(bad)
dec
out
adc
es
imul
cwde
jno
loope
mov
adc
popf
push
adc
ja
sub
mov
test
inc
or
push
clc
sahf
push
lods
sbb
xor
add
cwde
or
dec
je
inc
push
sbb
sti
push
shr
add
and
adc
les
mov
sbb
dec
push
mov
daa
bound
ret
jns
jno
xchg
popf
pop
repnz
mov
popf
adc
sub
jno
clc
pusha
inc
cmp
push
int
sbb
or
add
out
sub
enter
add
sub
dec
js
xor
and
ror
add
test
pop
inc
mov
pop
inc
mov
cmp
jae
mov
fcmovbe
inc
dec
bound
jmp
xchg
dec
nop
sti
xor
arpl
sahf
arpl
mul
and
je
cwde
cmp
mov
fs
pop
jge
or
xor
adc
xchg
test
xor
bound
sahf
xchg
inc
add
jg
cmc
rol
pop
jl
or
imul
mov
push
add
enter
sub
inc
mov
cwde
xchg
aaa
or
cmp
mov
add
push
pop
mov
lock
mov
sbb
xor
hlt
leave
sub
fwait
push
add
add
push
js
cs
add
push
mov
jl
and
rol
push
test
test
push
fldenv
sbb
sub
mov
adc
fsub
xchg
pusha
lahf
shl
jo
je
mov
js
bound
push
jle
pop
xchg
xchg
mov
adc
js
pop
or
xchg
mov
retf
push
mov
js
mov
add
sub
push
mov
inc
add
imul
mov
in
mov
push
add
push
imul
call
xchg
pop
ficom
ds
test
add
rol
fimul
inc
sbb
dec
daa
sbb
shr
sbb
call
push
ficomp
das
mov
icebp
std
mov
pop
add
mov
(bad)
std
sbb
mov
and
imul
inc
mov
(bad)
jbe
pop
cs
das
fnsave
push
pop
mov
pop
xor
mov
inc
ror
inc
adc
add
ffreep
adc
or
lock
push
push
cmp
jbe
sbb
xchg
push
fs
jmp
and
fisttp
inc
leave
(bad)
fld
cmps
sub
mov
xlat
mov
pusha
fdiv
scas
adc
jo
jbe
inc
es
or
push
inc
push
cmp
jp
out
push
cli
mov
xchg
mov
jecxz
(bad)
inc
xchg
call
mov
push
hlt
or
xor
xchg
sbb
mov
push
inc
sub
idiv
(bad)
mov
shl
dec
or
ret
and
out
mov
mov
and
jmp
push
stc
push
or
(bad)
std
pop
jne
lahf
nop
mov
or
inc
test
jno
pop
jle
xchg
mov
push
push
arpl
inc
pop
push
or
nop
mov
add
loope
add
or
jp
or
fs
push
data16
ds
push
adc
or
ins
dec
or
jnp
ss
inc
inc
mov
movs
or
out
(bad)
(bad)
jmp
jbe
xor
mov
or
push
sysret
aaa
jmp
aam
xchg
rol
or
rcr
inc
pop
add
shl
call
inc
retf
dec
or
push
dec
pop
mov
pushf
gs
jmp
movs
push
fiadd
cmp
sahf
out
popa
mov
push
mov
mov
xor
lea
jge
jo
mov
add
sbb
xchg
ins
mov
lods
shl
ins
push
adc
or
or
cmp
add
mov
or
cmp
das
sub
add
inc
scas
(bad)
or
pop
xchg
jno
pop
push
dec
or
mov
loope
sub
cld
jae
sub
pop
mov
sbb
nop
sub
retf
adc
scas
dec
ja
popa
jp
in
jbe
stos
inc
push
test
xor
add
inc
push
popa
fs
outs
jmp
xor
pop
fidivr
mov
inc
sbb
add
inc
jecxz
add
lods
ss
outs
dec
xor
stos
test
fs
mov
jb
fld
stos
sub
inc
call
movs
adc
mov
dec
les
scas
push
inc
jl
(bad)
sub
out
push
sbb
sar
stc
lods
shr
sub
and
jnp
add
jmp
sub
mov
and
sub
add
dec
push
int
jo
mov
sbb
push
neg
outs
ds
loope
int3
shr
sub
pusha
cmp
test
add
aas
mov
xchg
rcl
and
push
cld
xchg
lea
not
and
mov
cli
push
jmp
shl
push
sbb
call
adc
shr
int3
mov
mov
rol
jg
nop
call
jmp
push
or
or
data16
mov
inc
lahf
or
lods
hlt
adc
mov
ds
adc
or
or
scas
cdq
ret
nop
xchg
in
adc
jne
neg
inc
cmp
dec
mov
or
jno
sub
popf
and
popf
lock
call
adc
sub
adc
ror
sub
or
into
test
movs
test
dec
aam
mov
rcl
push
xchg
xor
into
push
push
pop
inc
mov
inc
pop
es
fadd
clc
sub
nop
jmp
aam
sar
dec
cld
into
gs
or
add
mov
jle
ror
push
test
loopne
jo
add
adc
sti
add
fadd
push
or
lea
mov
pop
stos
lock
cmc
test
shr
pusha
div
jmp
sbb
add
les
add
mov
nop
clc
add
and
inc
or
enter
cmp
mov
and
sbb
pusha
bound
inc
xchg
and
and
add
loop
push
je
mov
cmp
(bad)
add
mov
or
adc
mov
(bad)
or
dec
push
les
mov
jae
rcr
xor
sub
xor
xor
adc
pop
pop
inc
inc
repnz
sbb
punpckhdq
test
and
add
or
(bad)
cmp
or
and
add
and
add
add
pop
pop
cwde
add
xchg
lea
pushf
fdivrp
rcl
(bad)
mov
out
shr
jne
mov
sbb
inc
mov
adc
dec
adc
add
push
inc
pop
movs
jbe
cdq
or
in
pop
dec
lods
or
and
aam
add
cmovne
inc
jmp
loop
(bad)
in
enter
add
pop
jb
cwde
sar
xor
ja
push
push
ds
mov
lea
inc
sub
inc
mov
cmp
pop
inc
or
xlat
push
ds
mov
push
popf
add
test
pop
pop
mov
lea
pusha
dec
xor
stos
dec
xor
ror
inc
sub
loope
je
ror
stos
cmps
jbe
pop
cli
sti
stc
mov
clc
test
sbb
dec
sub
popf
pusha
sar
mov
or
les
or
sbb
or
add
and
sub
or
cmp
int3
push
sahf
or
jo
sbb
je
inc
and
mov
push
xchg
vhaddpd
cmp
cmps
push
or
lods
push
adc
add
fnstcw
int
adc
loop
push
sub
(bad)
dec
inc
cmps
test
add
hlt
push
or
push
in
xor
add
and
xchg
mov
push
clc
sbb
sbb
adc
xchg
mov
or
ins
sub
jbe
sub
push
test
popa
or
dec
cmp
lods
and
call
mov
stc
popf
adc
inc
cld
movs
mov
jae
cmp
inc
and
or
mov
imul
and
sbb
add
sub
pop
pop
pop
jo
mov
or
adc
pop
ja
and
xchg
shl
(bad)
pop
cmp
mov
push
inc
sub
mov
inc
or
mov
repnz
fiadd
adc
push
pushf
cmp
dec
push
mov
inc
push
ins
mov
sub
in
dec
ins
fwait
test
sub
push
inc
adc
sbb
or
into
pop
add
outs
sbb
jno
adc
push
dec
mov
xor
and
int3
pop
mov
inc
mov
lock
sbb
dec
inc
je
mov
jmp
pop
lock
pushf
add
push
mov
add
sti
movs
ror
and
ds
add
(bad)
pop
dec
inc
add
sbb
adc
or
xchg
inc
leave
push
hlt
add
mov
ds
(bad)
movs
adc
mov
mov
mov
lods
repnz
xor
push
sub
adc
pop
and
sub
pop
fimul
repz
add
mov
add
dec
jl
jae
or
fsubr
push
or
xchg
rol
rcl
or
ror
add
adc
inc
inc
sub
mov
sbb
ds
in
cmp
cmp
out
pop
int3
add
repz
sub
add
pop
or
inc
sbb
test
hlt
repnz
or
push
xor
out
icebp
add
push
xchg
add
test
xchg
mov
mov
gs
xor
bound
cmp
inc
sub
pusha
(bad)
mov
call
mov
fcomp
mov
repnz
das
cmp
adc
mov
xor
mov
sbb
dec
rol
lock
mov
loopne
push
xchg
sub
pop
dec
push
push
xchg
and
xchg
jne
push
and
pop
clc
adc
dec
test
in
push
push
cmp
xchg
stc
mov
scas
add
aaa
ss
pop
sbb
aaa
or
out
enter
fisttp
jne
jmp
and
scas
mov
pop
jbe
xor
pop
inc
and
sub
and
hlt
jge
hlt
hlt
fnstenv
movs
hlt
sub
mov
xchg
adc
movs
aas
cmp
mov
inc
dec
repz
add
sub
imul
pusha
loope
(bad)
sbb
psubusb
dec
push
not
clc
sahf
adc
inc
or
pop
jmp
mov
or
mov
lss
(bad)
adc
call
sbb
cmp
push
jo
sti
je
xor
int3
pop
mov
enter
or
cs
aad
sahf
mov
push
mov
shl
pushf
mov
movs
test
mov
mov
mov
mov
adc
inc
inc
test
repnz
jne
mov
adc
and
pop
cwde
js
mov
inc
push
mov
jge
pop
cmp
add
push
and
sub
dec
dec
jne
cmp
xchg
cmp
shl
or
loopne
jmp
sub
mov
pop
inc
add
outs
jg
push
dec
xor
inc
js
adc
out
cmp
add
mov
xchg
mov
leave
dec
je
clc
dec
cmp
sub
dec
mov
sub
cmp
(bad)
adc
mov
dec
sub
stos
cmp
jbe
jo
mov
pop
test
or
test
call
cmp
adc
imul
dec
fiadd
or
add
adc
cmp
loop
xor
fisubr
jae
(bad)
push
mov
loopne
sbb
xchg
sbb
fnstsw
inc
cmps
hlt
dec
rol
ret
mov
sti
adc
rcl
add
or
sahf
and
pop
aam
xchg
shr
rcl
es
jae
loop
or
sub
cmp
mov
fst
or
ret
jae
pushf
mov
test
cmp
dec
mov
cwde
sub
mov
je
shl
pop
sbb
fnsave
mov
and
pusha
xchg
fcom
push
(bad)
cli
cmp
add
xor
xor
jge
mov
add
pop
mov
sar
movs
sub
sbb
ret
std
add
sub
adc
iret
ds
adc
jmp
fs
aam
call
clc
jbe
pop
sub
push
add
jo
mov
sub
shr
or
xor
call
setb
dec
and
shr
sbb
aaa
adc
dec
sbb
push
sti
and
daa
sti
adc
cmp
cmp
and
jo
sbb
int3
mov
mov
push
cli
mov
(bad)
xor
mov
add
int3
inc
adc
mov
cld
jnp
sbb
cmp
cmp
test
xor
adc
scas
mov
lock
and
(bad)
fwait
jecxz
or
sbb
push
les
cwde
icebp
sar
out
and
cmp
aam
ss
cmp
jne
xor
lds
std
pop
je
mov
cmp
test
movs
pop
mov
adc
pop
fadd
sbb
shr
dec
dec
cmc
add
pop
adc
xlat
pop
adc
and
ret
sbb
imul
rcr
sbb
into
add
push
push
repz
mov
inc
pop
nop
dec
fisubr
in
cmp
jl
add
jbe
sbb
aam
outs
and
sub
sub
xchg
sbb
sar
push
sahf
test
clc
sti
jmp
adc
pop
repnz
(bad)
push
icebp
sub
mov
adc
bound
js
push
dec
mov
fisttp
fsub
shl
xor
sub
cmp
add
xchg
mov
adc
jo
mov
xchg
or
loopne
adc
in
adc
cmp
and
movs
inc
test
push
mov
adc
int3
adc
add
inc
leave
sub
test
loop
ins
xrelease
mov
shl
jne
cmp
jo
cmp
movs
inc
mov
loopne
inc
fwait
stos
jmp
test
push
cmps
les
popf
dec
xchg
push
add
rol
ret
ds
retf
aam
or
sub
(bad)
es
xor
and
add
in
xor
sar
test
sub
sub
(bad)
pop
mov
jae
mov
mov
sub
sahf
mov
mov
mov
xchg
shl
into
inc
pop
sub
pop
inc
inc
retf
and
xchg
ins
sbb
pop
adc
ja
bound
(bad)
or
(bad)
xchg
mov
inc
inc
mov
mov
lock
popf
mov
imul
and
or
faddp
inc
js
int3
sub
dec
and
jno
fld
and
xor
adc
sbb
xor
adc
sahf
imul
retf
add
test
mov
stos
in
ror
clc
mov
mov
dec
cmps
add
xchg
test
jns
and
xor
inc
and
mov
inc
or
pusha
adc
rol
rcl
xchg
popa
cmp
jmp
push
add
sbb
mov
push
add
fcom
inc
clc
ss
sub
add
xor
add
jne
sbb
pop
jne
inc
jmp
movs
add
test
lds
inc
cld
imul
clc
jns
add
adc
jae
clc
je
mov
data16
jmp
push
add
add
add
rcl
adc
jle
pop
jmp
nop
data16
add
inc
aaa
test
sbb
dec
rol
dec
dec
inc
dec
xor
in
dec
movd
js
adc
pop
sbb
ret
and
sub
scas
shr
jmp
and
popa
or
or
pop
or
imul
pusha
out
xor
pop
inc
ret
xchg
adc
mov
add
test
rcr
dec
mov
(bad)
xor
mov
or
and
inc
pop
or
jae
mov
bnd
pop
add
sub
dec
sub
add
mov
dec
push
mov
adc
test
es
dec
lock
je
add
pop
pop
ss
dec
sub
sbb
and
mov
xchg
push
sub
and
sub
les
cmp
test
inc
jo
aam
ret
jmp
out
loopne
bound
es
and
inc
push
or
jne
push
rol
dec
xor
or
add
cs
mov
adc
cmp
jbe
push
(bad)
xor
mov
repnz
fdiv
aaa
mov
or
add
add
call
bound
lahf
cmp
mov
mov
das
pop
jp
rcr
pop
xchg
add
mov
xor
mov
pop
pop
push
ja
scas
hlt
enter
mov
in
addr16
jno
pop
and
dec
outs
ret
loop
xchg
pop
popf
sbb
dec
sub
push
inc
les
mov
push
or
pop
inc
or
or
ds
push
adc
(bad)
pop
sbb
test
xor
sub
ja
or
enter
xchg
fwait
arpl
scas
inc
fs
sub
cmp
fdiv
mov
je
mov
mov
and
mov
mov
je
sbb
and
fst
pop
mov
adc
pop
mov
xchg
and
imul
cmp
je
push
adc
aaa
fadd
xchg
xor
retf
fs
adc
dec
xor
xchg
ss
cmp
or
xlat
dec
dec
jecxz
nop
mov
push
test
add
or
adc
add
add
add
inc
pop
stos
jp
inc
mov
mov
or
sti
imul
xlat
dec
js
xor
adc
lock
dec
js
inc
and
push
nop
sub
adc
inc
sub
mov
ret
jne
movs
je
push
or
mov
mov
loope
xor
pop
and
rol
push
push
gs
rol
enter
adc
jb
adc
or
pop
dec
push
cmp
or
and
inc
mov
push
adc
adc
add
retf
push
push
pop
jle
out
aaa
js
push
adc
or
sbb
je
rcl
rol
jmp
add
mov
dec
adc
pushf
mov
jmp
jl
dec
sbb
test
loopne
enter
test
pop
sub
hlt
or
xor
jno
fidivr
push
ins
mov
adc
(bad)
jmp
sub
aam
jne
retf
xor
test
dec
mov
jle
dec
xchg
das
mov
or
or
movs
sbb
sbb
rol
jae
sbb
out
inc
loopne
jmp
mov
sbb
call
jne
cli
push
jl
add
mov
aas
leave
jl
push
push
movs
adc
inc
jbe
pop
loope
ins
pop
push
mov
pop
xor
or
pop
push
stos
pop
pop
sub
test
push
loope
xlat
or
and
dec
pop
pop
fsubr
and
jno
mov
pop
sub
loope
ret
pop
pop
retf
cmp
xchg
adc
cli
pop
push
or
jne
sub
mov
enter
out
add
jne
mov
aaa
das
ret
mov
adc
stos
leave
ret
mov
stos
dec
aam
jmp
pop
and
sub
jne
mov
or
jne
jo
inc
or
and
sub
adc
jnp
sbb
push
pusha
mov
stos
dec
int
or
sub
or
fwait
add
inc
add
test
xchg
addr16
sbb
pop
add
stos
or
mov
pop
and
push
stos
inc
and
adc
inc
movs
inc
xor
loope
cli
jl
leave
xchg
jnp
icebp
test
popa
pop
fstp
retf
add
jo
inc
mov
test
fcom
sbb
mov
gs
sahf
xchg
mov
nop
in
cld
jbe
cld
pop
push
pop
mov
mov
cmp
adc
adc
movs
mov
pop
inc
mov
push
cmp
pop
ds
push
lea
lods
inc
cmps
mov
add
add
scas
adc
rol
das
dec
test
aad
daa
add
bound
xor
mov
add
fiadd
or
push
push
mov
add
div
inc
clc
jae
sahf
push
adc
lods
iret
leave
xlat
jae
je
sub
clc
pop
shr
sub
inc
dec
and
mov
push
jb
je
xacquire
inc
or
pop
add
adc
push
(bad)
xchg
cwde
adc
aas
xor
adc
or
dec
js
cmp
adc
outs
pop
out
enter
clc
sbb
jg
sar
cmp
and
daa
sbb
scas
sahf
adc
lods
push
clc
push
out
mov
or
ror
push
dec
(bad)
fld
aas
push
xor
mov
pop
lea
adc
les
cmp
movs
sti
div
mov
fs
icebp
mov
sbb
jne
sub
je
add
or
push
adc
movs
mov
js
xchg
(bad)
or
pusha
and
dec
sub
inc
movs
sti
sbb
pop
ret
push
arpl
pop
mov
push
push
mov
inc
and
cmps
mov
repnz
add
adc
add
dec
pop
xchg
inc
test
inc
sub
sub
dec
mov
mov
pop
ins
or
mov
and
shl
inc
mov
push
arpl
and
mov
aas
shl
test
mov
pop
data16
xlat
pop
or
dec
outs
inc
adc
or
or
fs
or
outs
push
je
gs
call
(bad)
in
inc
sbb
stos
jne
mov
push
lahf
in
jmp
fnstcw
ds
pop
sbb
push
push
jae
punpckhbw
dec
mov
adc
push
jmp
movs
je
inc
fnsave
mov
add
pop
mov
cmps
mov
lock
dec
and
mov
cld
push
dec
in
scas
fwait
inc
leave
push
mov
ds
inc
dec
pop
pusha
outs
sub
push
inc
jmp
sar
(bad)
jmp
push
das
cmp
pop
jne
jp
add
add
and
inc
sub
clc
clc
lock
outs
or
jg
(bad)
pop
inc
test
xor
or
ins
clc
pop
loope
push
hlt
sbb
test
cmp
jne
popa
push
pop
xor
push
icebp
or
cmp
daa
mov
dec
and
cmp
jae
test
sub
push
mov
mov
cs
mov
add
pop
pop
loop
mov
adc
dec
push
div
cmps
popa
xchg
or
aam
lods
out
cs
mov
push
mov
push
cdq
pusha
jmp
pop
mov
or
aaa
cs
imul
pop
jmp
adc
jmp
pop
mov
cmp
ror
or
or
sbb
push
push
mov
add
test
dec
xchg
jbe
pop
mov
inc
sahf
jmp
jmp
xchg
push
inc
and
mov
add
(bad)
dec
push
sti
clc
push
out
les
add
inc
ja
and
daa
cwde
and
nop
add
pop
bound
mov
sub
sbb
xor
rcl
ret
sub
mov
xchg
and
es
fimul
clc
mov
jge
lods
push
ins
imul
adc
push
jbe
sbb
or
or
push
sub
ret
mov
jo
fistp
sti
imul
stc
inc
mov
xchg
xor
(bad)
ret
jmp
add
push
hlt
jle
and
jl
add
push
or
dec
std
adc
out
or
push
je
(bad)
je
fstp
sbb
cmp
jge
jno
in
mov
xchg
sbb
(bad)
cmp
pop
adc
cmp
movs
adc
mov
mov
inc
sbb
scas
jbe
cmp
jne
pusha
xchg
cmp
inc
mov
sbb
xor
sub
cmp
or
jo
or
rcl
inc
inc
cli
cmp
jb
sub
or
mov
cmp
push
mov
popf
xor
pusha
adc
dec
loop
add
clc
adc
or
test
mov
popa
(bad)
sbb
inc
mov
mov
stos
push
jmp
xor
sub
test
mov
inc
pop
and
sub
xor
push
dec
pop
push
test
or
nop
lahf
sbb
push
sbb
push
or
add
pusha
popf
xlat
cmp
adc
das
xor
push
in
js
ret
dec
(bad)
add
inc
and
mov
sub
and
or
out
xlat
pop
and
add
shl
adc
jecxz
sbb
js
das
sub
push
mov
stc
and
mov
push
shr
add
or
cli
push
and
js
inc
loopne
xchg
push
jl
cmp
sbb
mov
ins
cwde
lea
push
jo
mov
imul
add
cli
adc
xchg
push
pop
fidivr
xchg
mov
lea
xor
sbb
pop
or
(bad)
mov
add
pop
lock
outs
mov
sti
not
and
sbb
adc
repz
add
lea
in
movs
push
xor
sbb
or
pop
add
mov
div
(bad)
and
test
adc
mov
call
adc
out
sub
add
mov
(bad)
fild
fisub
fimul
or
sub
mov
pop
les
and
out
xadd
adc
mov
fild
not
push
or
fiadd
or
fneni(8087
push
repz
pop
xor
into
mov
jnp
aaa
inc
jmp
or
add
cwde
dec
(bad)
(bad)
adc
scas
adc
mov
(bad)
cmc
push
push
pusha
lds
stos
pop
loop
mov
pushf
fisub
push
aaa
cld
fcomip
rol
sar
call
adc
mov
sub
or
pop
sbb
xlat
inc
mov
sbb
mov
push
or
add
fwait
jne
add
sbb
inc
xor
fcmovbe
jle
dec
inc
clc
pop
aaa
xor
cmp
sbb
mov
xchg
push
pusha
adc
inc
std
ss
inc
(bad)
bound
add
xor
lock
jecxz
inc
les
push
rol
mov
cwde
sub
scas
pop
pop
push
push
cmc
sub
mov
mov
add
pop
scas
imul
fld
push
pop
pop
sti
add
push
mov
les
ror
movs
jmp
or
movups
dec
sbb
push
or
(bad)
or
stc
rcl
mov
xchg
loopne
mov
fidiv
xor
imul
test
xor
or
(bad)
xor
cmps
or
xchg
jno
std
sysexit
mov
push
pop
loop
(bad)
push
adc
push
cld
inc
cld
mov
and
in
fxch
add
outs
pop
push
mov
cmps
mov
cmp
cwde
dec
popa
nop
ds
jo
jo
adc
and
or
ret
dec
inc
xor
(bad)
add
or
add
sbb
inc
lods
clc
mov
stos
push
and
mov
fdivr
sbb
xchg
jecxz
and
inc
mov
rcr
sub
add
mov
inc
dec
lock
out
pop
pop
es
call
outs
pop
jo
or
inc
test
stos
(bad)
push
jmp
and
pop
rcr
das
(bad)
pop
sbb
cmp
add
xlat
pop
mov
adc
rcl
inc
add
adc
add
(bad)
rcr
pop
adc
mov
dec
ficomp
in
pop
and
mov
jo
or
mov
push
fimul
mov
stos
shl
shl
call
out
push
ficom
(bad)
cld
sub
data16
int
and
sbb
rol
fs
mov
jl
enter
pop
aaa
sbb
push
pop
adc
push
mov
shr
inc
adc
xor
hlt
sbb
jo
lods
jle
push
jo
mov
call
inc
push
pop
sub
loop
out
or
or
sbb
add
add
lock
cld
jmp
out
cld
pop
xchg
(bad)
gs
dec
stos
inc
dec
push
rcl
int3
stos
sbb
add
adc
sahf
add
mov
fisttp
pop
sub
dec
sub
dec
sub
and
retf
pop
inc
cmp
call
(bad)
stos
inc
shl
in
xor
inc
call
push
stc
cmp
or
pop
sub
clc
loopne
icebp
fmul
adc
cmps
or
xor
xor
cmp
std
jl
fcomp
xor
xchg
inc
jmp
jp
sbb
and
adc
xor
loop
or
int3
add
cld
out
cmp
outs
cmc
pusha
dec
mov
cli
xor
jg
loopne
movs
cmp
mov
and
(bad)
adc
dec
mov
pusha
sbb
fsubr
xor
test
jne
cld
imul
jmp
lock
fidiv
jmp
loopne
ror
test
out
aam
and
out
das
jecxz
adc
xor
pop
cmps
repnz
add
fbstp
xchg
or
cmps
jle
sar
cmp
aam
mov
(bad)
stos
fst
in
(bad)
pop
imul
out
js
xor
(bad)
ins
cmps
in
clc
jl
pop
test
sti
pop
mov
xor
aam
gs
mov
jnp
je
jmp
mov
cli
xor
inc
and
cmp
push
shl
sbb
or
sub
sbb
xchg
jmp
inc
push
or
inc
loope
cld
dec
jne
movs
test
xchg
stos
adc
lock
ret
cmp
cmc
popw
cmp
retf
xor
adc
pusha
inc
cmp
outs
pop
mov
ret
pop
sar
sbb
lock
int3
or
and
(bad)
out
out
mov
mov
jecxz
cmp
jge
out
call
out
out
ror
div
in
xchg
inc
cli
cld
rcr
test
adc
out
pusha
(bad)
lods
call
pop
dec
jle
outs
jecxz
hlt
fwait
add
xchg
mov
loopne
pop
fucom
out
(bad)
jecxz
hlt
mov
jbe
add
pop
popa
inc
aam
adc
add
fcmovnu
out
pop
mov
cmp
into
into
push
imul
hlt
out
jmp
fadd
repnz
scas
ins
loopne
fiadd
or
xor
aam
cmps
sub
rcl
sub
out
jg
jo
fadd
or
jo
xchg
shl
xor
aam
jmp
repnz
mov
loopne
pop
add
pop
dec
cmp
pop
sub
xchg
dec
bound
sbb
xor
test
or
push
icebp
xor
jmp
dec
or
js
jmp
nop
push
rcl
or
push
fild
sbb
push
adc
pop
frstor
mov
pop
pop
sbb
fimul
mov
mov
adc
add
add
mov
fbld
dec
mov
or
ret
jmp
mov
jns
cmp
(bad)
dec
sub
mov
sub
lods
add
push
adc
jge
dec
ja
movs
mov
push
and
mov
sub
(bad)
lahf
test
cmp
adc
ret
adc
mov
inc
xchg
into
cmp
inc
mov
mov
pop
add
dec
pop
popa
inc
push
les
(bad)
sbb
and
es
cmpxchg
adc
xchg
jo
shr
mov
ss
in
cmps
je
mov
xchg
mov
dec
xor
pop
mov
out
fs
sub
js
adc
test
inc
pop
and
out
push
test
pusha
les
ja
sti
std
xor
push
mov
dec
or
pop
in
in
popa
mov
push
or
mov
mov
add
lock
not
and
in
(bad)
retf
pop
and
push
imul
inc
pop
pop
push
and
sbb
cmp
fstp
rcl
dec
enter
sub
fsubr
or
xor
and
add
int3
je
and
add
xchg
lods
lods
or
cmp
fs
add
jp
cld
scas
gs
adc
adc
ins
movs
je
dec
push
mov
push
inc
inc
cmp
sub
sub
or
adc
dec
mov
outs
cdq
or
and
xchg
push
mov
and
jb
mov
mov
xchg
adc
into
sbb
sub
sbb
dec
test
sbb
and
add
inc
imul
fisttp
ret
mov
adc
test
fwait
int
adc
rol
loope
ins
cmp
mov
dec
or
inc
aas
leave
ret
inc
icebp
xor
sti
sub
pop
add
in
ficom
jne
adc
add
ins
(bad)
push
and
jmp
or
cdq
xor
pop
xchg
xor
lock
adc
mov
pop
call
and
pop
movs
jmp
xchg
pop
dec
mov
nop
adc
cmp
pop
and
inc
jne
sar
cs
gs
inc
mov
in
outs
je
or
daa
rcr
imul
call
inc
rol
sub
iret
ins
inc
xchg
loop
int
sbb
push
call
add
push
fwait
and
and
shl
push
dec
add
and
clc
push
dec
inc
dec
mov
pop
mov
add
mov
mov
adc
mov
pop
add
shl
pop
aaa
xor
pop
imul
je
push
jmp
xchg
push
push
test
pop
ret
in
xchg
mov
adc
or
mov
dec
aam
push
xchg
ret
jmp
mov
cli
lahf
xor
sub
aas
popa
pop
fst
inc
push
call
lea
mov
ficom
outs
es
adc
mov
mov
movs
mov
test
or
mov
xor
mov
pop
adc
xor
cmp
in
jb
xchg
mov
fmul
int3
rol
push
jbe
pop
jne
mov
enter
cmps
and
push
mov
(bad)
out
cmp
pop
jne
jle
add
lds
mov
dec
inc
push
aas
sahf
inc
push
mov
mov
sub
mov
cmps
test
adc
(bad)
cwde
and
mov
xchg
or
xor
xor
loop
ret
push
xchg
or
pop
out
into
test
jbe
and
push
push
div
mov
mov
push
xchg
jnp
ins
add
push
cmp
lock
xor
scas
and
cmp
loope
dec
and
lock
and
xor
addr16
inc
add
push
sub
(bad)
push
xor
dec
push
fwait
(bad)
fst
retf
imul
xchg
mov
or
stos
add
pop
inc
test
clc
sub
pushf
and
pop
sub
adc
loopne
daa
or
mov
fs
cld
adc
sbb
push
outs
outs
test
outs
sar
and
cmp
cmp
lahf
push
mov
xor
movs
gs
std
aas
ja
sub
std
pop
mov
and
inc
inc
aam
ret
cld
sbb
cdq
cmp
jb
inc
in
or
ror
jle
add
mov
inc
not
js
iret
and
or
ins
loop
add
fimul
in
or
ficom
dec
or
sub
inc
rcr
adc
test
pop
or
sbb
or
push
cmp
mov
lock
(bad)
mov
jne
out
movs
add
inc
dec
(bad)
dec
adc
das
mov
sub
push
push
mov
(bad)
int3
pusha
or
mov
loopne
addr16
loopne
adc
enter
or
mov
outs
push
add
inc
dec
cmp
xchg
or
inc
stos
pop
call
and
push
dec
sbb
add
push
add
icebp
push
inc
cmp
gs
add
out
ret
fldcw
pop
mov
inc
cmp
in
push
out
call
leave
dec
inc
push
xor
add
cmp
ret
fsubr
and
mov
std
fdiv
stos
cmp
and
dec
mov
je
fst
test
and
cmps
loopne
ret
stc
and
fcomp
xor
aas
(bad)
fwait
pop
cmp
mov
test
ret
xchg
out
addr16
in
pop
push
arpl
jl
pop
cmp
pop
and
push
and
pop
sbb
ficom
call
pop
inc
push
cmp
cmp
sahf
popa
xchg
dec
add
adc
fmul
sbb
dec
cmps
sub
jmp
mov
fs
or
add
dec
sub
nop
push
or
(bad)
ins
cmp
mov
and
cmp
aaa
mov
pop
cmc
add
dec
dec
fisttp
and
dec
and
in
cmp
pop
in
pop
and
pop
xchg
push
jne
push
add
ror
sbb
mov
sub
jle
das
jo
sar
scas
dec
pop
les
or
pusha
inc
(bad)
out
int
adc
dec
icebp
or
fwait
sbb
cmp
jl
pop
or
add
mov
xchg
push
cmp
mov
add
pushf
mov
push
not
add
jb
mov
cs
mov
data16
es
aam
shl
sub
mov
pop
and
iret
inc
enter
xor
test
mov
pusha
jmp
ss
es
ins
(bad)
aam
loop
enter
push
cmps
jo
dec
clc
fcom
jl
jle
xchg
sahf
es
add
dec
adc
or
scas
inc
test
and
sbb
pop
shr
jno
ret
mov
test
inc
mov
xor
ins
inc
adc
mov
shl
rol
jge
jp
aam
cmp
movs
xchg
(bad)
ret
dec
retf
sbb
dec
inc
std
push
jl
adc
push
sbb
sub
pop
xchg
xchg
xchg
dec
jae
xor
xor
push
not
inc
mov
mov
add
inc
cmp
jb
sub
mov
ror
enter
xor
inc
das
sbb
and
jns
inc
retf
push
adc
sub
(bad)
popa
jmp
jmp
xor
xchg
(bad)
fsubr
xor
leave
mov
sahf
cmc
sub
inc
cmp
bound
add
and
movs
shl
call
imul
mov
fisubr
push
dec
retf
push
push
adc
loopne
cmc
scas
test
add
xchg
outs
or
(bad)
hlt
jmp
call
push
push
xor
fdiv
sub
pop
push
sar
ret
mov
sbb
xchg
push
cmps
or
shl
mov
cmp
fdiv
lahf
or
or
test
ds
mov
inc
(bad)
or
rol
inc
or
and
pop
dec
push
es
or
cmp
xchg
rcl
pop
js
xchg
and
and
sbb
inc
aam
mov
xchg
and
jg
push
ror
inc
cmp
fnsave
frndint
mov
(bad)
rcr
cmp
aad
dec
hlt
arpl
xor
xor
imul
inc
mov
push
in
data16
pop
sub
sub
cmp
shr
dec
or
sbb
les
or
jge
mov
pop
sub
inc
and
xchg
call
out
out
retf
movs
les
mov
movs
pop
fisub
movs
push
adc
in
adc
push
push
push
or
lock
push
out
pusha
mov
adc
(bad)
call
inc
call
dec
test
stc
jns
add
xchg
fdivrp
inc
(bad)
dec
fmul
xlat
xchg
sbb
popa
jl
hlt
mov
or
push
lock
or
dec
cmps
movs
cmp
add
scas
and
stos
loopne
adc
(bad)
dec
scas
dec
arpl
imul
or
and
hlt
nop
sub
imul
shr
cld
sub
mov
test
pop
lea
adc
inc
pop
je
pop
xchg
inc
sub
and
cmp
push
dec
aad
jbe
mov
cmp
jne
in
add
dec
ret
call
pop
pop
movsx
test
xlat
mov
jl
test
sbb
call
stos
inc
mov
fsubr
push
xchg
jmp
icebp
pop
inc
push
inc
call
xchg
inc
mov
mov
mov
push
fstp
cmp
rcr
sti
int3
push
inc
rcr
adc
mov
js
add
push
nop
pop
xchg
cdq
(bad)
sbb
mov
fbld
pushf
rol
cmp
cmp
jl
add
push
add
mov
shl
xor
push
sub
icebp
stos
popf
test
js
dec
outs
or
in
mov
fcomp
sbb
pop
add
and
xor
and
ret
(bad)
ficomp
xor
ror
adc
and
or
cwde
mov
mov
cdq
adc
cmp
dec
mov
pop
sub
adc
add
outs
sbb
sbb
inc
repz
dec
inc
or
stc
or
inc
jmp
fiadd
jle
mov
jg
mov
lock
mov
add
repz
sbb
bound
and
or
inc
shr
outs
and
or
push
and
mov
pop
arpl
fadd
cmp
movs
push
sub
scas
lock
dec
push
and
xchg
or
movzx
adc
out
xor
push
add
mov
dec
fmul
sbb
push
mov
test
inc
ins
add
push
aam
cmp
jae
push
test
or
into
loop
cmps
and
cmp
(bad)
(bad)
pushf
dec
jnp
fldenv
imul
jecxz
jno
dec
fisttp
jp
stc
jb
lods
sub
adc
dec
cmp
inc
or
jne
jae
es
jae
and
mov
fbstp
clc
dec
sahf
cmp
and
sub
and
cmp
jne
retf
cmc
sub
jge
lea
adc
push
fcmovnbe
daa
lods
inc
outs
push
jns
mov
leave
in
push
adc
inc
int
inc
ss
adc
inc
xor
push
push
(bad)
add
or
addr16
cmp
and
xchg
jne
or
dec
sub
test
lock
aaa
mov
jnp
in
sbb
hlt
and
ins
or
sbb
push
push
xchg
adc
imul
ds
fcom
loope
loope
mov
jnp
cmp
add
mov
adc
lock
sub
add
xchg
mov
add
inc
xor
jns
xchg
sub
jne
rcl
and
movs
in
add
mov
adc
and
sub
cmps
cmp
popa
xlat
and
add
cmp
xchg
xor
mov
call
adc
pop
imul
mov
pusha
dec
push
mov
stos
jno
test
push
stos
mov
int
mov
sub
pop
mov
sub
shr
bound
lods
int3
inc
pushf
jge
shl
sbb
cmp
mov
lock
test
sbb
mov
mov
and
pop
jecxz
je
lea
push
enter
sub
sbb
adc
xchg
sbb
std
adc
enter
jmp
out
out
into
add
enter
cmc
lock
popa
sti
mov
push
push
out
dec
and
adc
or
push
cmp
int3
pop
scas
xor
loop
adc
pop
pushf
and
imul
inc
mov
sub
mov
mov
cmps
adc
les
or
add
adc
sbb
or
cmp
jmp
sbb
enter
addr16
jbe
add
shl
mov
lock
fwait
call
pop
lods
inc
ror
ins
push
add
xchg
in
(bad)
mov
add
mov
add
cmp
out
js
jne
and
push
inc
cmp
call
jae
ret
or
xor
loop
xor
jmp
mov
adc
lods
xlat
mov
xchg
push
lods
ror
fstp
es
pop
sub
add
out
xchg
ror
adc
sbb
add
jne
push
cmp
imul
imul
cmp
push
pop
(bad)
push
and
imul
in
jb
mov
mov
jbe
lea
adc
mov
mov
(bad)
inc
lea
xchg
jb
jle
jnp
cmp
add
seta
into
popf
iret
mov
or
mov
fist
imul
cmps
jl
push
push
cwde
or
pushf
dec
data16
enter
adc
xor
xchg
ror
dec
mov
cwde
add
je
push
or
xchg
xchg
loope
mov
cs
push
xor
in
adc
cmc
push
xor
push
clc
cmp
shr
movs
mov
les
mov
xor
(bad)
sub
nop
mov
push
xlat
js
sbb
fadd
sbb
pop
ret
imul
aad
add
add
adc
lahf
nop
dec
jne
fstp
mov
movs
lods
ret
add
sub
(bad)
sbb
fadd
mov
mov
add
cld
xchg
mov
jne
sub
sub
cmps
ror
clc
dec
xlat
adc
push
jle
jge
lock
movs
leave
sub
mov
sar
xor
mov
add
lods
sub
out
xchg
mov
jg
xchg
dec
cmp
push
ja
or
stos
lods
adc
mov
jl
sub
in
pop
hlt
xor
jp
cmps
dec
jmp
pop
cmp
fist
sbb
fdivr
call
rcr
push
cmp
clc
dec
push
cmps
icebp
and
adc
pop
lock
mov
push
neg
stos
inc
lea
mov
and
sub
and
push
push
enter
or
mov
xor
xor
dec
push
mov
out
dec
add
icebp
mov
add
pop
or
xor
and
push
and
dec
div
push
int3
(bad)
mov
add
ret
aas
cmp
outs
add
sbb
clc
xor
pop
cmps
jb
in
fcomp
clc
into
sbb
jle
push
push
dec
ins
fisubr
inc
sbb
fdivr
pop
mov
rol
shl
jl
in
sbb
push
push
push
iret
mov
call
pop
cmp
sbb
and
call
jge
stos
or
cld
push
or
sbb
mov
sub
dec
cld
sub
jg
mov
sub
adc
sub
mov
dec
xor
lods
in
shl
in
push
mov
xchg
cld
cs
add
ja
in
cmps
js
mov
or
ins
je
movs
jge
inc
jle
add
fisub
xchg
(bad)
popf
jp
jmp
or
or
pop
and
dec
retf
and
push
sub
sbb
ins
or
pop
in
sbb
loope
fneni(8087
push
and
hlt
jle
scas
ret
ret
pop
(bad)
sub
sub
ret
xor
das
jmp
or
stos
pop
dec
call
out
fsubp
pusha
jno
sbb
pop
sub
mov
ja
movs
test
in
jp
pop
mov
sub
cs
xchg
adc
aam
bound
adc
aas
mov
sub
ret
loopne
push
xor
call
or
rcl
add
or
add
scas
adc
push
add
jno
ins
pop
or
aad
cs
xor
xchg
mov
int
cs
data16
pop
test
lods
cdq
pushf
pop
xchg
jo
inc
push
cmp
mov
push
dec
xchg
adc
sub
outs
cmps
imul
sbb
and
sub
jae
movs
dec
inc
or
dec
or
xchg
scas
adc
or
push
fisub
es
test
push
sbb
lea
shr
pusha
adc
out
inc
fild
scas
sub
jmp
sub
xor
mov
mov
xor
or
outs
jns
imul
inc
inc
adc
or
push
fstp
ret
inc
popa
mov
cld
jne
bound
push
div
lods
jg
dec
mov
lea
adc
jb
adc
or
mov
push
je
ins
mov
(bad)
(bad)
(bad)
clc
or
mov
mov
out
or
cld
je
jb
xchg
fsubr
xchg
fmul
or
adc
outs
out
or
clc
pop
jns
movs
cmc
lea
mov
push
pop
and
pop
ret
popf
mov
ficomp
lds
test
dec
in
in
add
(bad)
cmps
ds
aas
rcl
jmp
adc
xor
xor
inc
sub
lock
jne
cmp
into
sbb
push
push
or
fdivr
popa
jmp
test
inc
hlt
sbb
fild
and
inc
mov
jno
retf
and
mov
dec
dec
inc
cmp
popa
adc
dec
xchg
dec
lock
or
out
popa
jmp
sbb
sbb
test
sub
dec
sub
add
cmp
jmp
(bad)
dec
or
aas
push
jno
lea
xor
mov
cld
push
add
mov
push
mov
stos
sti
push
mov
sbb
push
ins
or
cmp
xor
test
push
mov
mov
rep
add
dec
mov
fld
out
add
pop
cmp
jmp
add
mov
pop
or
sbb
xor
jae
add
jle
mov
mov
push
xor
mov
adc
and
nop
add
sub
cmp
push
fisttp
adc
into
push
mov
xchg
or
sbb
xlat
aam
sbb
dec
je
int3
cs
pop
pop
jl
adc
hlt
jle
retf
push
xchg
pop
adc
pop
dec
add
mov
cmp
mov
ja
retf
gs
add
int3
or
xchg
nop
add
add
das
mov
sbb
or
and
mov
xor
xchg
pop
fiadd
in
fwait
(bad)
dec
retf
and
pop
fst
and
jbe
repz
outs
push
xchg
lahf
scas
add
ret
out
add
add
add
pop
xchg
jo
fwait
and
clc
mov
sub
dec
je
nop
add
or
push
cmp
add
push
cld
inc
mov
and
push
xor
mov
lock
mov
sbb
cmp
add
add
iret
lahf
push
sub
(bad)
pop
sar
add
lds
rol
icebp
int
xchg
inc
push
mov
add
rcl
inc
mov
mov
jmp
adc
out
out
add
jecxz
sub
pop
sub
jne
add
inc
jne
ret
xor
cmp
movs
dec
xchg
xor
adc
ss
add
aaa
add
pop
or
sub
pop
mov
rcr
adc
lock
adc
inc
(bad)
push
push
xor
dec
push
sbb
sbb
push
clc
fs
inc
rcr
je
pop
add
pop
push
nop
ins
inc
sbb
cmp
sub
cmp
adc
jp
pusha
test
inc
and
repnz
loopne
popa
add
sar
cmp
lods
or
cmp
jnp
(bad)
jmp
sub
adc
cmp
pop
push
mov
in
or
enter
pusha
cwde
mov
sbb
or
stos
push
xor
in
ds
jne
dec
xchg
lods
push
xor
nop
retf
and
into
loopne
adc
aad
jne
leave
rol
adc
mov
or
xchg
add
dec
add
call
add
mov
add
int
outs
sub
clc
mov
dec
push
mov
mov
cmp
inc
rcl
jmp
cmp
or
cmp
mov
sub
es
cmps
mov
push
jg
addr16
xor
sub
icebp
adc
inc
xchg
pop
jmp
add
or
or
js
pop
jno
ins
adc
inc
push
into
pusha
push
into
or
sti
xchg
test
xor
add
pop
push
jge
test
add
inc
cmp
push
ins
push
jb
lds
ret
mov
sbb
js
xchg
mov
test
or
push
loopne
int
call
dec
aad
add
lds
outs
adc
inc
pop
dec
js
dec
jae
jne
daa
jnp
push
inc
add
adc
icebp
mov
or
dec
loopne
les
ror
pop
dec
inc
push
adc
mov
push
push
push
sbb
(bad)
(bad)
add
mov
js
pop
push
mov
ins
inc
lock
mov
pop
test
jo
mov
stos
cmps
mov
xor
inc
push
jge
mov
pop
sbb
push
jl
xlat
jg
xchg
add
sbb
mov
icebp
mov
push
ret
xchg
cs
add
pop
(bad)
jns
popa
sbb
mov
test
push
push
popa
push
repz
xor
sbb
rol
cmp
dec
je
add
cs
int3
das
shl
sub
mov
push
dec
and
pusha
add
jmp
sbb
not
xor
js
or
(bad)
and
fist
inc
dec
fdiv
pop
ins
cmp
test
pusha
in
sbb
cmp
inc
lock
(bad)
ins
je
gs
inc
add
pop
xor
loop
mov
test
lea
loop
std
aas
push
adc
cmp
push
sub
mov
je
push
adc
add
mov
pop
je
hlt
add
enter
cmp
test
add
pop
push
ficomp
add
mov
add
xor
jb
push
stc
fisttp
shl
movs
lea
mov
sub
jmp
mov
jne
mov
xor
aad
push
fidiv
inc
or
mov
xor
xor
(bad)
daa
inc
cmp
fisub
inc
mov
mov
sub
std
push
mov
jl
mov
or
int3
ja
push
sub
fnsave
jbe
xor
pop
sub
popf
add
mov
pop
mov
xchg
dec
mov
inc
inc
cmp
jb
push
sub
int
rol
lea
or
js
xor
jp
jmp
push
jo
retf
cmp
add
dec
les
ins
movs
clc
(bad)
jmp
test
lea
xchg
sbb
push
in
pusha
in
jmp
sbb
push
shl
push
sub
dec
imul
jmp
mov
add
or
lea
add
cmp
mov
cmp
adc
jg
dec
and
pop
or
das
sub
mov
in
or
sub
test
dec
pop
mov
repnz
push
or
imul
inc
rol
mov
dec
mov
inc
ja
or
bound
retf
mov
mov
lahf
sbb
pop
in
ins
and
mov
(bad)
js
icebp
mov
jo
jb
add
cmp
sub
in
xchg
mov
sbb
pop
outs
scas
dec
xchg
push
das
or
aas
retf
pusha
ror
(bad)
push
je
inc
or
lods
or
je
xor
push
ds
sub
call
adc
sbb
sbb
jmp
sub
sub
loope
rcr
add
add
test
sub
imul
in
sti
mov
add
mov
sub
shr
dec
(bad)
call
and
xor
jno
dec
adc
xlat
mov
loopne
and
sub
adc
jle
addr16
icebp
and
outs
dec
mov
mov
cmp
ins
jns
ins
jp
inc
adc
dec
imul
mov
or
lods
inc
movs
jle
cmp
movs
adc
xchg
add
pop
call
gs
push
jmp
jg
push
or
or
pop
shl
ins
ds
sub
push
or
mov
pop
jmp
push
mov
mov
sbb
push
and
adc
pop
or
or
or
dec
mov
int3
or
push
test
add
push
addr16
aam
retf
adc
mov
pop
ins
jle
outs
inc
pop
sahf
cmp
jae
and
sub
test
aas
push
mov
or
ror
push
xor
sar
mov
push
jp
xlat
sub
scas
ins
inc
dec
push
pop
mov
push
movs
jmp
mov
add
jle
cwde
mov
push
cmp
jne
ds
dec
adc
mov
jmp
loopne
or
and
pop
imul
stc
std
retf
mov
int
xchg
mov
cli
xchg
je
mov
adc
push
push
jmp
add
stc
push
pop
adc
data16
mov
(bad)
sahf
adc
mov
xchg
sub
sti
dec
test
sub
test
jo
adc
outs
cmc
add
mov
xor
add
call
outs
data16
xchg
lock
mov
test
inc
push
sbb
(bad)
mov
lds
jecxz
das
inc
cmp
iret
add
das
imul
outs
push
icebp
dec
fcom
ins
lds
dec
fnsave
loope
jge
jnp
push
xor
in
jmp
dec
je
out
cmps
push
xor
push
test
loop
out
add
mov
add
push
add
or
add
or
or
rol
mov
add
popa
aad
(bad)
push
jg
inc
nop
das
ret
lock
pop
or
test
into
add
pop
or
ss
movs
mov
std
into
xchg
and
into
mov
mov
(bad)
fcom
inc
lea
test
out
adc
mov
sbb
jne
add
add
ds
adc
pop
add
lods
je
adc
mov
sub
mov
mov
(bad)
push
sahf
mov
inc
cld
inc
(bad)
outs
sbb
mov
jl
pop
inc
jge
mov
sbb
dec
and
push
mov
(bad)
mov
inc
cmp
inc
mov
mov
enter
cmp
sbb
and
loope
push
and
ins
in
and
dec
dec
and
sbb
sbb
das
inc
sbb
cmp
and
inc
sbb
pop
nop
or
mov
push
mov
cmp
push
adc
push
dec
sub
daa
and
cld
mov
and
push
dec
xchg
jp
fs
popa
mov
sbb
or
ins
and
jbe
or
pop
mov
cmp
push
loope
in
rcl
cmps
push
cs
adc
in
cmp
mov
sub
or
jge
bound
cmp
xchg
scas
popa
push
into
clc
je
sbb
mov
test
sbb
and
xor
push
pop
pop
mov
rol
pop
dec
pop
leave
rol
sbb
xor
mov
stc
add
inc
or
or
jbe
xchg
adc
cmps
ds
sbb
sbb
xchg
hlt
push
inc
mov
js
les
adc
inc
or
fidivr
push
push
jg
inc
add
out
xchg
jl
pushf
cld
out
cmp
aam
ror
pusha
add
test
and
push
mov
shl
inc
mov
inc
pusha
enter
pop
adc
fcom
cmp
pop
repnz
sbb
rol
inc
adc
push
xchg
push
cli
mov
push
push
fisubr
inc
add
xchg
add
nop
pop
gs
dec
mov
clc
pop
inc
in
cli
mov
cmp
les
in
and
shr
pushf
push
push
adc
push
stos
or
movs
sahf
xor
jl
les
mov
push
test
pop
add
enter
std
pop
sar
aam
pop
or
add
push
dec
enter
inc
stos
add
(bad)
mov
cld
push
mov
push
xor
mov
leave
jle
pop
adc
pop
sub
dec
lds
(bad)
jl
xor
jmp
inc
jbe
dec
sbb
mov
xadd
cmp
retf
jp
dec
mov
mov
adc
div
iret
push
cld
shl
pop
sub
add
cmp
mov
add
fiadd
cdq
jmp
xor
xchg
jl
push
jo
add
rcr
nop
test
js
push
jno
test
mov
adc
cmps
or
and
out
xchg
and
jle
mov
adc
jl
inc
mov
or
jge
inc
mov
adc
inc
sub
je
push
ins
ja
test
and
lds
mov
ds
neg
xor
inc
xlat
dec
std
(bad)
pop
lods
add
dec
(bad)
push
icebp
dec
adc
ret
jmp
dec
adc
pop
add
ret
ret
add
mov
add
sbb
add
push
cmp
test
cmps
(bad)
and
mov
stos
push
les
and
push
pop
dec
push
aaa
inc
sbb
ret
inc
enter
add
lock
sbb
push
jle
jae
and
into
mov
adc
sub
pop
sbb
mov
and
and
repnz
bound
xor
cmp
adc
adc
mov
and
push
adc
and
fcompp
xor
sbb
xor
push
imul
xor
cmps
jge
xor
imul
retf
cmps
test
adc
pop
cmovs
pop
jg
in
pusha
xchg
in
adc
jb
inc
sar
inc
pop
repnz
jle
mul
in
adc
stos
push
dec
mov
dec
mov
inc
inc
dec
(bad)
jmp
(bad)
jne
lds
xor
xlat
test
movs
sub
or
lea
jmp
adc
sar
push
sti
and
mov
xchg
(bad)
in
loop
ret
cmp
sub
sahf
out
sub
mov
mov
mov
sub
sub
mov
imul
adc
push
adc
pushf
add
aam
(bad)
jmp
iret
in
cmps
or
mov
push
(bad)
fstp
cmp
call
(bad)
loopne
sub
mov
adc
pop
jnp
je
push
push
xor
cmp
das
mov
xor
dec
daa
jo
rcr
pop
add
hlt
test
mov
gs
adc
repnz
add
sub
fidivr
cmovge
lock
ficom
xchg
and
cmp
jmp
mov
push
dec
pop
lock
pop
test
jmp
mov
cmp
jo
outs
and
sbb
mov
adc
sar
ret
cmp
add
test
inc
xor
(bad)
xor
ds
test
push
jmp
cmp
(bad)
mov
ins
mov
add
aad
in
pop
add
lahf
add
push
pop
inc
js
jl
out
dec
sbb
push
mov
dec
mov
push
jae
js
jo
mov
fld
(bad)
fs
cld
dec
leave
lods
sub
fs
(bad)
pop
(bad)
mov
inc
push
and
and
cmps
jmp
stos
or
add
inc
push
and
cmp
aad
sbb
pop
popa
and
(bad)
lods
pusha
mov
adc
jne
push
outs
jmp
inc
sbb
les
push
into
add
call
pop
sahf
inc
xor
adc
sub
xor
or
push
test
adc
jne
mov
dec
xlat
in
aad
adc
inc
mov
adc
inc
fld
adc
je
mov
fidiv
data16
(bad)
cmp
add
cld
sub
ret
add
hlt
sbb
push
repz
dec
mov
mov
push
mov
or
inc
adc
sub
dec
cmp
pop
rol
inc
and
xor
xor
jo
pop
out
nop
push
push
or
cmp
jmp
push
xbegin
pop
ret
gs
dec
jmp
jno
out
inc
push
add
fidivr
imul
fnsave
test
cmps
add
mov
mov
inc
pop
sahf
stc
test
ret
adc
fnsave
fimul
sbb
xor
sub
push
je
mov
or
or
gs
mov
push
test
or
das
das
or
adc
iret
fld
jo
sub
je
fcmovne
xor
sub
mov
mov
or
xchg
aaa
ins
test
inc
cmp
pop
pop
fild
add
or
aam
adc
or
(bad)
mov
(bad)
fdiv
xor
cmps
xchg
movs
xor
or
test
inc
cmp
jl
push
ror
(bad)
outs
xor
mov
cmp
sub
xchg
or
and
dec
je
push
mov
adc
xchg
jo
adc
or
push
jl
cmp
pusha
adc
mov
stc
sub
mov
mov
cmp
lods
or
lock
adc
sub
cmp
mov
je
ins
jmp
ss
jmp
sub
cmp
repz
adc
adc
sbb
sub
push
push
add
sub
fdiv
retf
fimul
popa
sub
jns
add
inc
pop
stos
ins
mov
idiv
xor
jo
add
mov
xchg
adc
inc
clc
sti
dec
mov
iret
pop
dec
inc
popf
dec
test
mov
push
or
push
clc
mov
test
pop
test
push
imul
add
imul
inc
and
and
mov
add
jl
mov
mov
jle
mov
and
sar
cmp
inc
push
adc
div
(bad)
jl
mov
pop
add
retf
ins
ret
add
push
or
pop
and
dec
pop
jbe
sbb
ficomp
scas
jae
sar
pop
call
push
cli
fwait
ins
movs
ret
cmp
jle
mov
in
movs
fs
loopne
xor
dec
inc
nop
outs
and
or
xchg
adc
push
pop
pop
mov
jg
cli
inc
cmps
cmp
gs
push
jne
push
ins
and
movs
add
repnz
mov
je
add
pop
outs
or
pop
mov
push
adc
(bad)
ficomp
sahf
mov
mov
pop
jle
into
and
dec
push
push
mov
sub
or
xchg
mov
or
xchg
mov
inc
test
mov
sbb
add
out
pop
dec
rcl
or
fimul
push
daa
cmp
pop
push
jns
adc
ins
ins
push
inc
popa
push
inc
or
push
pop
cmp
sbb
inc
out
jle
add
and
xor
mov
mov
add
or
or
adc
data16
cmc
popa
add
test
adc
and
inc
cld
sub
jl
mov
push
aam
mov
mov
adc
les
mov
movs
fld
cmp
movs
movs
push
inc
adc
xchg
stos
ret
aas
fidivr
aam
add
pop
push
xlat
adc
jae
jp
sahf
pop
add
jb
and
adc
cmp
out
mov
ret
inc
push
dec
pop
addr16
sub
out
hlt
jg
loope
mov
sahf
add
push
add
gs
jg
sub
push
dec
add
push
dec
ret
mov
and
adc
ss
jl
inc
sbb
call
mov
mov
outs
outs
rcl
loopne
fist
push
pop
ss
add
xchg
xchg
adc
dec
dec
dec
and
sbb
mov
int
xor
aad
cmps
xor
pop
pop
pop
rol
jno
arpl
mov
push
or
in
dec
aaa
cmps
sbb
neg
repnz
or
adc
sbb
loope
add
fild
sbb
cld
nop
cmps
jb
add
push
push
hlt
and
cmp
mov
jle
and
mov
and
shr
xor
cs
sbb
add
inc
or
add
mov
pop
add
ins
fidivr
js
sbb
add
mov
pusha
mov
fstp
std
xchg
dec
sub
mov
and
nop
test
push
xor
jb
pop
push
and
outs
sahf
es
push
nop
pop
and
inc
(bad)
push
adc
js
loopne
das
mov
idiv
inc
daa
test
call
or
xor
add
or
arpl
jmp
pop
lahf
push
push
pop
sub
loop
mov
mov
mov
dec
repz
lea
cmp
push
add
test
xchg
pop
call
fadd
dec
loope
lahf
and
fsubr
gs
or
sbb
push
adc
fs
and
and
jnp
cmp
mov
jns
cmp
sbb
push
sbb
push
mov
pushf
sbb
inc
push
dec
jge
enter
inc
ret
add
add
(bad)
jno
fist
jbe
ins
xor
popf
fldcw
jb
push
stc
push
or
cmp
jg
je
pop
pop
and
dec
inc
cmp
inc
cmp
or
and
adc
push
fbld
daa
or
jle
xor
adc
inc
stos
cmc
mov
jl
pusha
movs
pushf
or
mov
cdq
add
add
rcr
adc
or
adc
(bad)
jnp
test
inc
test
add
cmp
mov
inc
arpl
inc
mov
mov
inc
xor
fild
pop
xor
push
xor
test
sbb
loop
xor
pushf
lahf
push
and
les
sbb
(bad)
pop
pop
jmp
xchg
nop
xchg
idiv
out
push
xor
mov
adc
cdq
lahf
jbe
pusha
mov
int3
int
jl
push
adc
adc
outs
adc
cmp
jp
dec
add
(bad)
push
add
mov
mov
cmp
push
js
addr16
dec
xchg
rcr
pop
popf
and
test
mov
add
shr
cwde
push
pop
xor
cmp
push
sub
fadd
inc
xlat
sub
sahf
push
or
inc
mov
and
or
jno
call
jne
dec
in
xor
push
add
adc
loopne
fcmovu
dec
sbb
push
mov
fmul
mov
push
nop
adc
and
gs
fild
push
push
xor
jge
je
mov
mov
adc
mov
push
sbb
push
or
jns
cwde
outs
or
test
cdq
sbb
push
sar
sub
xor
fisttp
sahf
cmp
inc
shl
movs
inc
(bad)
cmc
mov
aad
mov
or
push
sbb
retf
dec
jb
pop
and
mov
sbb
inc
inc
pcmpeqw
add
pop
mov
sbb
jl
xor
push
loopne
fdivr
sbb
push
mov
aaa
pop
fmul
(bad)
aam
sub
xchg
les
arpl
mov
pushf
mov
pop
(bad)
mov
adc
jge
mov
and
adc
xor
inc
loopne
cmp
push
hlt
scas
test
pop
mov
gs
lock
add
les
mov
mov
mov
push
ins
dec
xchg
add
mov
xchg
inc
adc
aad
xor
call
dec
mov
push
adc
push
add
and
jno
push
imul
(bad)
les
xchg
(bad)
mov
out
ror
inc
in
hlt
cs
adc
or
cdq
mov
xor
imul
int
and
mov
jg
fdivr
and
jg
shr
or
push
imul
pop
leave
adc
js
mov
ror
movaps
dec
lock
imul
add
and
(bad)
xlat
js
push
outs
in
mov
cmp
popa
push
add
push
inc
mov
mov
mov
adc
xor
or
add
fld
or
push
pop
add
jl
add
cmps
push
fld
aam
ficom
shl
call
or
push
sbb
movs
mov
mov
xor
sbb
xlat
les
loope
push
push
dec
in
push
add
sub
retf
cmc
push
ins
es
lock
and
lea
pusha
push
pop
mov
aam
jle
data16
inc
dec
mov
cs
popa
mov
sbb
or
jl
mov
cmp
(bad)
adc
inc
push
adc
pop
push
cmp
sbb
sub
push
fist
pinsrw
push
popa
js
pop
fst
pop
icebp
repz
mov
retf
ss
test
sbb
out
rcr
or
fwait
repnz
adc
adc
pushf
sbb
sbb
sahf
push
scas
pop
mov
and
jp
outs
ins
retf
in
mov
rol
mov
popa
mov
xchg
sub
inc
jmp
and
cmps
pop
and
loop
outs
xchg
mov
lea
xor
inc
push
cmp
jl
rcl
adc
inc
aaa
pop
js
push
cmp
adc
jne
or
or
mov
neg
inc
test
pusha
xor
add
inc
add
sbb
push
(bad)
push
leave
xor
mov
or
xchg
(bad)
sub
mov
sti
sub
add
jecxz
mov
idiv
add
ror
mov
sub
clc
out
pop
shr
jl
or
push
repz
shl
or
mov
adc
xchg
ret
repz
and
pop
adc
mov
xchg
mov
lds
loopne
push
mov
out
test
jae
add
loope
(bad)
push
inc
je
mov
dec
test
rol
add
adc
(bad)
jnp
cmp
leave
xchg
(bad)
in
or
pop
out
xchg
xor
jb
dec
adc
jmp
je
xor
cs
mov
jo
pop
dec
sahf
mov
scas
xor
jnp
lock
xchg
add
or
nop
push
or
inc
push
add
push
inc
pop
mov
aam
movs
movs
lods
or
cmps
add
mov
lea
test
xor
add
cmp
cwde
arpl
and
je
or
loopne
sbb
adc
dec
and
call
xchg
push
sub
mov
adc
mov
and
push
into
les
lods
lds
push
and
mov
add
jbe
mov
inc
xchg
sti
mov
jb
(bad)
gs
jbe
pushf
push
imul
into
mov
cmp
test
ror
ret
dec
jne
mov
and
cmp
jb
sahf
ins
and
adc
retf
movs
in
and
or
xor
pop
outs
and
sahf
add
push
addr16
add
push
inc
imul
jle
push
jge
test
test
mov
and
aaa
add
mov
arpl
mov
push
lods
inc
inc
xor
add
mov
add
in
jl
shl
pop
mov
sub
cld
jbe
jmp
and
loope
add
push
sahf
dec
and
aam
push
adc
xor
mov
daa
and
cdq
rcr
daa
jl
mov
pop
or
clc
test
mov
test
pop
das
jb
test
es
dec
div
movs
and
push
mov
add
xor
loopne
and
loop
inc
aam
arpl
int3
sbb
mov
ins
and
sbb
ror
sbb
push
inc
jmp
push
loopne
(bad)
push
dec
sub
aad
xor
mov
or
loopne
mov
popa
push
add
jmp
push
loope
movs
gs
adc
sbb
mov
sub
into
sbb
push
out
sub
xchg
cmps
and
jp
cmp
inc
adc
push
fstp
sub
cmp
ja
cmp
ja
xor
pushf
(bad)
push
xchg
add
push
aaa
inc
and
movs
stos
or
dec
or
imul
jbe
mov
inc
xchg
push
and
rcl
and
cmp
fs
sbb
or
bound
pushf
mov
dec
fwait
mov
inc
dec
ficomp
jae
rcl
and
sbb
dec
cld
push
push
cmps
add
xor
mov
dec
and
cmp
fisttp
and
clc
sub
test
jmp
adc
push
sbb
in
(bad)
in
addr16
add
jmp
xor
adc
in
dec
inc
and
xchg
and
dec
pop
mov
mov
adc
push
inc
loop
sub
fisttp
popa
add
jle
shl
scas
jbe
mov
pop
movs
icebp
test
iret
(bad)
ret
mov
adc
push
inc
je
mov
push
sbb
adc
lds
hlt
mov
pop
push
sbb
dec
push
push
jbe
loopne
ds
ret
shl
in
add
add
dec
and
out
mov
gs
loopne
fst
xor
(bad)
xchg
cmps
mov
fidiv
push
inc
repnz
mov
mov
add
dec
out
popa
jb
sti
jae
pop
mov
push
fadd
sbb
jmp
mov
jb
outs
fadd
in
mov
nop
add
sub
mov
out
fs
push
jno
pop
jmp
vorpd
add
in
jmp
mov
aad
and
cmp
in
push
loopne
lock
sbb
adc
sti
mov
std
add
jle
outs
aaa
test
dec
loopne
mov
adc
push
xor
push
or
jecxz
gs
unpcklps
movs
push
dec
test
adc
mov
fidivr
sub
cmp
cmp
xchg
xor
in
sub
mov
jne
jne
xor
and
sbb
pop
xchg
adc
xlat
xchg
or
push
push
push
in
push
(bad)
sbb
(bad)
arpl
push
lahf
outs
sub
(bad)
mov
ins
aam
fs
mov
shr
add
add
(bad)
xchg
maskmovq
idiv
sub
iret
mov
push
nop
dec
mov
dec
jl
and
aas
adc
popf
daa
hlt
and
push
xchg
adc
sbb
aam
mov
lds
inc
or
xchg
inc
add
pop
add
sbb
ret
xchg
test
jle
test
add
pop
enter
jb
pop
inc
ja
push
add
add
es
(bad)
es
pop
das
or
dec
jl
mov
xor
mov
inc
mov
sahf
jge
mov
cmp
pop
cld
or
rcr
mov
fistp
loop
adc
call
cmp
dec
ja
idiv
add
pop
jl
cmp
xchg
inc
xchg
push
dec
sbb
cli
and
inc
loop
xor
jbe
ror
(bad)
sbb
in
mov
dec
dec
sbb
call
(bad)
and
sahf
es
pusha
lds
push
inc
fsubr
inc
add
jbe
pop
test
shr
ja
mov
xlat
popa
(bad)
or
outs
fs
ins
add
movups
clc
movs
unpckhps
rcl
dec
xor
sub
ror
ins
push
inc
push
push
inc
div
jo
ret
mov
xor
cli
pop
iret
mov
push
mov
push
jae
or
retf
add
imul
sbb
cmp
es
shl
sub
adc
jne
mov
xchg
inc
mov
fsubr
xchg
ins
dec
pop
fnsave
xor
jg
cmp
jne
lds
inc
push
punpcklbw
cmp
adc
mov
cmp
xchg
sub
dec
pop
mov
adc
or
push
and
mov
jle
mov
adc
loop
xchg
jg
dec
imul
cld
fcmove
push
lds
or
inc
scas
pop
shr
mov
jo
pop
test
test
add
or
fwait
mov
and
dec
das
sub
icebp
cmp
(bad)
jbe
xchg
cdq
loopne
into
jmp
cmp
dec
xlat
adc
je
es
add
push
adc
ja
dec
sbb
je
inc
add
push
test
mov
sub
jne
fsub
mov
cld
push
aaa
inc
sbb
pop
pop
lds
xchg
shl
dec
loop
sub
jbe
sbb
xlat
mov
jl
cld
mov
aam
jo
adc
inc
cmp
(bad)
(bad)
pushf
dec
clc
push
mov
dec
jno
cmp
xchg
dec
jb
mov
sbb
jmp
inc
shr
sub
push
mov
movs
das
inc
push
sbb
push
push
shr
push
lock
cmp
test
retf
mov
std
jl
je
push
and
movs
ss
add
cmp
dec
fdiv
pop
or
pop
and
out
mov
fnsave
or
cwde
daa
push
mov
(bad)
pop
push
jno
push
inc
ror
and
xchg
loopne
add
xchg
je
jmp
add
inc
leave
fndisi(8087
add
dec
jb
pusha
push
enter
iret
sahf
cmp
inc
pop
push
add
add
jnp
add
add
jecxz
std
sub
cmps
inc
sub
push
add
adc
scas
scas
ss
js
jmp
mov
je
adc
dec
mov
push
jb
ds
mov
mov
pop
and
pop
popf
dec
push
mov
shr
jmp
cs
mov
(bad)
add
mov
daa
sbb
movs
xor
adc
xor
push
inc
mov
clc
push
jmp
push
pop
push
je
dec
or
sub
dec
jns
leave
push
out
jno
lods
push
xchg
mov
outs
je
sbb
mov
push
push
dec
call
adc
jp
push
jg
les
mov
rol
add
sbb
imul
(bad)
mov
jg
lea
pop
pop
fwait
jno
or
ret
ins
mov
xchg
neg
fcomp
sbb
iret
add
adc
jle
cmp
nop
int3
xor
int
xor
or
dec
rep
mov
and
jne
leave
ds
inc
jecxz
dec
clc
fsub
enter
xor
or
loop
sbb
je
arpl
sbb
movs
sub
sub
(bad)
stc
mov
add
das
adc
lods
sbb
pop
stos
adc
inc
loopne
les
inc
jbe
stos
and
(bad)
or
pushf
adc
outs
pop
cwde
add
lods
lahf
shl
das
ins
addr16
sbb
movs
mov
sbb
mov
dec
mov
inc
js
jne
cmp
dec
outs
in
sbb
or
test
test
int
lahf
jmp
lahf
jo
push
push
fs
mov
daa
mov
inc
cmp
out
and
dec
cmp
jmp
ss
mov
mov
imul
shrd
push
dec
pop
cmp
push
pop
push
mov
outs
(bad)
mov
or
jmp
push
pop
xchg
cmp
inc
push
enter
mov
pop
lods
scas
mov
pushf
xor
pop
out
leave
in
in
push
outs
inc
fs
(bad)
bound
inc
or
jmp
pop
bound
add
ss
xor
aas
push
mov
pop
inc
adc
jo
and
add
out
repz
rcr
push
pop
add
mov
push
dec
sbb
rcl
aam
cmp
adc
and
lods
dec
add
leave
mov
jle
cmp
jg
cmp
jle
les
inc
nop
dec
rcl
xor
sub
pop
sub
dec
or
dec
jmp
rcr
push
sub
mov
sbb
out
ret
shr
in
xchg
push
pop
cmp
je
jp
inc
movs
aam
sbb
xchg
retf
or
xor
dec
(bad)
xor
fisttp
(bad)
cmp
add
sub
lds
ficom
lds
mov
inc
xchg
mov
add
push
mov
fs
mov
xchg
mov
leave
movs
xor
inc
clflush
mov
out
jmp
out
enter
pop
(bad)
adc
fsubr
add
inc
jl
jo
xor
pop
fsubr
sub
push
mov
push
inc
add
dec
cmp
inc
(bad)
in
and
int
ret
sub
adc
cmp
jnp
and
pop
push
adc
(bad)
jo
sar
xor
and
mov
or
mov
or
fstp
int
jl
dec
jo
ja
and
rcl
mov
clc
sub
ja
lea
pop
pop
push
mov
pop
mov
and
sub
sbb
xor
(bad)
adc
lea
mov
sbb
imul
jl
push
and
inc
fnstenv
cmp
fild
sub
xchg
mov
pop
iret
dec
sbb
dec
mov
jmp
sbb
mov
ret
push
stos
int
test
push
push
xor
pop
inc
aaa
sahf
nop
cmp
pop
mov
push
xchg
test
adc
add
add
nop
jo
aas
sbb
mov
and
add
jmp
mov
jle
or
aaa
cmp
jl
(bad)
jmp
pop
adc
and
fcmovnu
xor
fld
xchg
push
sbb
push
loope
arpl
cmp
gs
pop
mov
mov
mov
add
xchg
mov
mul
arpl
(bad)
push
int
inc
in
push
popa
sub
sub
mov
pop
jg
xchg
int
sbb
sahf
adc
push
sbb
xchg
imul
adc
leave
adc
dec
push
je
dec
gs
push
xor
pop
dec
je
cmp
inc
sbb
call
out
push
dec
push
push
push
cmps
push
jge
dec
repnz
outs
jb
add
xchg
xchg
icebp
nop
pop
mov
test
pop
and
ins
inc
cmp
push
in
xchg
adc
fcomp
test
inc
jle
xchg
add
jbe
mov
bound
es
push
push
push
sbb
push
push
or
in
(bad)
out
shl
dec
and
rcl
jmp
adc
cmp
adc
add
pusha
dec
lahf
pop
jb
push
mov
movs
lahf
or
push
leave
pop
mov
cdq
sub
sbb
dec
push
mov
sbb
mov
mov
mov
cli
scas
into
lds
push
mov
add
add
lahf
rol
addr16
loope
add
pcmpgtb
cmps
pushf
dec
sbb
push
xchg
loopne
push
xor
mov
lea
lods
xchg
adc
dec
and
xor
outs
mov
pop
pushf
or
push
sub
dec
shr
mov
sbb
or
jp
inc
aam
cmp
or
mov
inc
mov
inc
adc
adc
cmp
cld
or
sbb
sbb
mov
sbb
push
add
cli
or
ds
push
xor
std
ins
xor
mov
sub
jge
or
push
push
dec
call
and
and
pop
jae
sbb
mov
retf
xor
sbb
jmp
ret
mov
add
dec
or
sbb
out
jo
mov
cmp
sar
aad
stc
sub
dec
xor
clc
imul
xor
or
add
pop
and
adc
ficom
or
add
movs
xchg
jp
inc
jl
mov
hlt
lea
and
outs
mov
jmp
(bad)
mov
add
and
add
cli
mov
mov
or
pop
mov
sbb
add
xor
dec
push
pop
movs
xor
fxch
scas
adc
sbb
sub
imul
loopne
pop
dec
das
cmp
add
push
ror
inc
int
dec
pop
ror
xchg
sub
xchg
cmps
jle
out
push
or
mov
sub
jne
sbb
add
jb
hlt
xlat
aam
mov
icebp
sbb
adc
(bad)
in
mov
dec
mov
mov
es
or
xor
add
loope
dec
jg
xor
sbb
jle
or
pop
fadd
sbb
or
loope
inc
push
mov
dec
add
neg
les
add
pop
jb
ins
xor
sbb
stos
ret
mov
adc
fadd
or
loopne
ins
loop
js
test
je
and
sbb
dec
je
mov
xchg
pop
sub
ja
add
call
inc
push
adc
xchg
cmp
xchg
xor
xor
dec
sub
add
xchg
jbe
sbb
and
gs
mov
adc
test
test
or
stos
push
shr
xchg
or
sub
or
xor
mov
fsubr
cmp
add
mov
adc
sbb
mov
adc
jmp
inc
and
bound
pop
call
mov
ret
sbb
mov
and
cmp
int
sbb
or
add
mov
cmps
retf
lods
or
cli
mov
jp
clc
inc
jne
mov
pop
or
rcl
mov
fidiv
lds
xor
sub
inc
loope
push
neg
xor
call
or
add
int3
sub
sbb
xchg
call
iret
mov
jl
movs
add
bound
lock
rol
in
pop
push
jnp
dec
ds
xchg
sahf
or
cmp
cmp
fmul
les
cmp
push
out
or
lea
inc
ss
(bad)
cmp
lea
jp
and
or
and
jo
jno
mov
loop
cmp
test
test
mov
test
hlt
mov
jno
xchg
ret
jns
jne
in
and
inc
imul
js
add
xchg
nop
hlt
sbb
push
test
sbb
mov
je
xchg
in
jmp
mov
mov
or
fwait
dec
pop
jo
jne
push
imul
(bad)
iret
or
jle
fadd
call
test
add
pop
adc
or
cld
loop
cs
and
mov
dec
mov
sbb
xor
push
pop
adc
test
jl
inc
pop
mov
ss
lock
lahf
sub
ret
dec
adc
sbb
test
mov
test
mov
mov
pop
pop
ret
inc
sub
repz
mov
xchg
jne
arpl
adc
(bad)
loope
pop
mov
lods
fsub
jg
std
stos
mov
jb
mov
bnd
lahf
(bad)
out
into
mov
ror
or
sahf
push
or
sbb
nop
mul
dec
cmp
cmp
sbb
out
and
and
mov
call
inc
or
lds
add
ret
sbb
pop
mov
scas
jle
movs
inc
mov
xor
xchg
fadd
cmp
add
dec
jge
sti
pop
hlt
xchg
jp
xchg
lods
test
inc
mov
mov
loopne
sbb
sub
sub
cmps
test
test
xor
adc
xchg
test
xor
or
dec
cmp
mov
cmp
xchg
pushf
mov
inc
add
jae
push
dec
inc
sub
stos
or
or
jne
loop
in
gs
push
inc
adc
sbb
dec
(bad)
les
data16
jo
cld
jle
sub
jl
cmp
xchg
xor
push
ret
xchg
pop
push
dec
jge
and
pop
repnz
inc
pop
or
ins
or
adc
push
push
push
push
push
inc
push
jmp
cmp
cli
adc
addr16
inc
ins
push
cmp
jnp
sub
sub
or
add
xchg
sub
mov
ret
ret
inc
sub
cmc
xchg
jl
sbb
xchg
popa
and
or
mov
xor
(bad)
mov
addr16
inc
inc
mov
stos
sub
cs
(bad)
mov
push
or
inc
stos
xor
sti
add
jbe
nop
and
lds
clc
push
mov
xchg
jp
lds
pop
icebp
jmp
and
test
daa
popa
adc
pop
jns
push
outs
xor
(bad)
(bad)
xor
in
out
ret
scas
sub
gs
out
push
push
inc
fs
push
mov
and
mov
jno
push
jl
(bad)
movs
scas
pop
js
fmul
dec
sbb
test
ins
dec
inc
cmp
add
and
xchg
iret
sbb
or
adc
inc
fiadd
push
xchg
push
arpl
push
push
push
sub
bound
loopne
xchg
hlt
rol
data16
or
sub
ret
jle
(bad)
lds
add
je
or
sar
sub
dec
je
data16
repnz
cmp
jl
shr
fwait
xchg
mov
dec
sbb
pop
mov
mov
lea
jl
xchg
or
mov
jo
lea
pop
push
iret
je
inc
add
inc
enter
jle
icebp
out
cmp
dec
add
xchg
jne
daa
pop
cmp
sub
xor
ret
pop
mov
sbb
daa
xchg
shl
pop
push
xor
pop
add
sub
sub
cmp
push
inc
mov
jl
jne
add
mov
sbb
mov
adc
push
or
push
call
jo
mov
mov
inc
cmp
xor
sub
xchg
add
gs
mov
add
or
adc
and
dec
or
xchg
jecxz
call
add
push
fmul
mov
and
icebp
lock
mov
inc
sub
ret
stos
cmp
push
jle
adc
xchg
mov
dec
lock
jbe
xchg
ror
hlt
inc
push
push
push
sar
inc
push
ffreep
punpcklwd
clc
cmp
rol
jmp
fnstcw
jb
jecxz
out
jmp
sub
push
adc
adc
xchg
hlt
mov
lea
cmp
add
dec
icebp
jl
xchg
pusha
mov
inc
out
dec
xchg
mov
mov
pop
je
inc
je
pop
mov
push
cmp
(bad)
pop
mov
xchg
mov
retf
push
mov
push
xchg
adc
inc
loop
pop
jo
sbb
adc
and
pusha
sar
mov
and
mov
pop
or
stos
dec
adc
inc
push
out
cwde
add
out
js
adc
cmp
jns
cmps
jns
and
outs
add
push
xor
cmps
retf
ins
adc
jl
jp
jge
pusha
add
or
pop
xor
add
add
jne
pop
mov
inc
jo
inc
je
jmp
xchg
scas
push
xor
and
outs
xor
adc
cs
sbb
lods
mov
in
scas
scas
jnp
add
test
dec
push
mov
ss
jg
pop
mov
daa
ficom
add
cmp
pop
pop
ins
jg
adc
pop
mov
push
add
dec
in
enter
ins
arpl
jle
sub
popa
imul
inc
push
mov
jmp
mov
cmp
rol
call
mov
dec
or
cmc
push
xchg
mov
inc
scas
and
dec
cmc
add
jmp
leave
cmp
cdq
out
add
out
sti
push
inc
popa
add
adc
cmps
xor
inc
mov
add
rol
sub
cs
pop
adc
nop
push
ss
das
push
pop
push
jne
xor
adc
in
popf
clc
(bad)
(bad)
cmp
rol
out
pop
mov
pop
mov
(bad)
inc
jo
sbb
stos
mov
inc
in
dec
data16
lods
pusha
add
add
out
sahf
retf
push
shl
jl
leave
sub
jp
das
sbb
lods
int3
loopne
dec
xor
sar
cmp
aam
mov
nop
add
hlt
pop
jle
mov
test
je
pop
jmp
xchg
cmp
mov
mov
xor
xor
mov
add
mov
sbb
sub
xchg
stos
das
fsub
and
dec
ficom
out
jne
(bad)
and
js
inc
repz
pop
pop
push
pop
push
sub
inc
pop
mov
movs
push
retf
shl
movs
cmp
enter
push
imul
and
adc
nop
inc
adc
fisttp
sbb
(bad)
lods
xchg
lds
sub
scas
shl
sub
pop
sub
push
mov
js
mov
add
cdq
shl
idiv
out
jo
add
adc
jle
cmp
es
add
fdivr
push
lock
mov
lock
or
sbb
pop
cli
retf
mov
stc
movs
jne
cmp
push
dec
or
mov
xor
mov
test
add
loop
outs
add
test
jl
jmp
sti
adc
jno
data16
test
je
push
add
adc
jl
or
lds
cmp
sub
jbe
movs
dec
mov
lea
lock
nop
in
mov
add
rol
stc
cmp
dec
push
adc
mov
inc
xor
(bad)
adc
inc
push
dec
push
and
nop
aaa
rcr
test
mov
fcomp
cmp
adc
shl
add
stc
cmp
je
lods
js
js
xor
inc
add
out
and
jbe
addr16
push
je
add
loopne
jp
push
pushf
inc
cdq
sub
add
daa
dec
or
push
mov
jo
push
inc
stc
add
ins
mov
into
add
cmp
jne
or
push
inc
cmp
lods
pusha
adc
loop
add
aas
inc
inc
jo
sub
pop
xor
add
cmp
pop
sbb
les
sbb
xor
and
adc
ficomp
dec
jmp
xor
leave
popa
rol
lods
sub
sbb
daa
call
mov
mov
pop
sub
cmp
dec
cmp
lods
push
mov
sbb
popa
add
int3
fst
loopne
inc
es
enter
add
mov
scas
test
or
lock
dec
add
or
push
mov
push
mov
xchg
adc
push
ja
push
xor
stos
mov
add
push
sar
jnp
pushf
sbb
in
fdivr
mov
add
xor
lds
test
push
dec
xor
inc
xchg
lock
int
lock
loopne
nop
inc
fiadd
or
mov
mov
sub
push
pop
jne
sub
cmp
fsubr
fcom
les
xchg
in
jp
push
call
(bad)
sbb
inc
cmp
mov
inc
ret
push
mov
add
cmp
dec
test
fwait
cmps
mov
dec
sbb
xchg
ret
jb
and
adc
cwde
test
cmp
jecxz
(bad)
mov
or
sub
dec
scas
mov
pushf
or
mov
sahf
xor
sbb
push
add
sbb
imul
inc
adc
adc
mov
dec
js
(bad)
mov
inc
ret
mov
dec
daa
mov
shl
jno
cwde
cmp
xor
ret
ss
lock
dec
ds
movd
inc
aam
aam
pop
mov
aad
sbb
push
pop
jge
cmp
sbb
sub
jge
es
(bad)
push
lds
shr
cmc
cmp
inc
daa
iret
neg
xor
push
cmp
je
sub
adc
sbb
sbb
in
mov
popa
mov
popa
nop
cmp
push
mov
inc
xlat
pop
inc
loopne
sbb
mov
sar
adc
sub
mov
add
pop
inc
add
hlt
loope
scas
mov
sub
sub
sbb
push
sbb
add
shl
xchg
push
imul
and
and
xchg
or
push
xchg
loope
(bad)
pop
out
cmp
int
adc
jmp
cwde
adc
pusha
or
jg
sar
and
push
add
jg
cmp
dec
and
mov
cmp
jle
shl
mov
pop
hlt
push
cdq
je
mov
push
nop
mov
jmp
(bad)
out
test
inc
pop
or
ins
popf
pusha
fnstsw
xchg
mov
xchg
lods
xchg
bound
hlt
adc
loopne
retf
push
jbe
adc
mov
or
in
aad
sbb
adc
sub
add
nop
rol
pop
pop
sub
shl
icebp
shl
mov
iret
arpl
pop
pop
scas
xor
mov
daa
add
les
movs
int
or
js
push
dec
mov
jp
je
dec
mov
sbb
lea
leave
add
sbb
sbb
mov
pop
lea
push
ret
lea
mov
add
push
ret
(bad)
out
stos
cmp
jno
push
jo
scas
add
test
jle
sbb
mov
pop
fcom
sbb
jle
(bad)
cmp
int3
mov
add
and
sbb
push
mov
mov
add
inc
je
sbb
mov
push
inc
or
inc
mov
dec
and
add
xchg
push
ds
xchg
sbb
shl
fadd
mov
(bad)
lods
jns
ret
pop
add
cmc
add
test
sbb
cmp
inc
(bad)
xchg
push
cld
dec
xchg
push
jl
cmp
cdq
push
nop
repnz
pop
add
add
mov
and
mov
jle
add
xchg
cmps
(bad)
push
dec
mov
pshufw
jns
es
push
ror
push
sub
jo
sbb
sar
fs
dec
pop
inc
nop
pop
jge
test
jmp
xor
pop
test
(bad)
jo
inc
popa
sub
jo
ds
push
in
sbb
or
mov
rcr
pop
ins
mov
lock
mov
test
cmp
jge
push
mov
push
or
or
or
or
sub
mov
or
cmp
sti
mov
lods
push
and
out
dec
sar
mov
add
push
sbb
pop
std
cmp
push
or
je
sub
push
mov
or
data16
inc
and
or
push
(bad)
and
inc
pop
aaa
(bad)
mov
inc
es
push
fdivr
sidtd
xchg
sar
out
and
(bad)
lock
add
cmp
or
cmc
add
cmp
dec
jmp
outs
adc
pop
fsubr
clc
cmovne
xchg
add
ret
xchg
mov
in
enter
add
(bad)
xchg
jmp
retf
push
push
test
stc
xor
jo
sahf
cmp
jecxz
cmc
jmp
outs
inc
fld
inc
out
add
cmp
dec
pop
js
comiss
jbe
jp
mov
jb
cmp
dec
jge
sbb
pop
sbb
mov
push
enter
pop
pop
repnz
jp
mov
xor
enter
sbb
and
pop
ss
xor
mov
movlps
sub
loop
icebp
mov
xor
nop
das
and
adc
sub
(bad)
pusha
sub
xchg
add
push
imul
push
mov
jo
jne
add
mov
in
jnp
popa
or
pop
mov
xor
push
jl
sbb
adc
xchg
sbb
popa
jne
test
or
mov
add
ror
fistp
cmp
sub
adc
mov
mov
add
inc
hlt
fistp
adc
dec
or
xor
pop
cmp
mov
call
inc
mov
jbe
cmp
pushf
loopne
jmp
sahf
adc
cld
lods
jl
mov
cmp
push
ret
mov
jle
pop
fdivr
inc
sbb
or
xchg
add
jmp
repz
add
mov
inc
js
in
sub
fmul
mov
sub
jle
xor
rol
mov
add
jne
pop
mov
jmp
lahf
test
ss
fs
mov
sub
ds
adc
clc
adc
ret
mov
je
jg
jb
retw
ret
adc
jae
add
push
pop
mov
jno
inc
or
pmaxub
mov
jle
dec
push
imul
and
into
mov
in
sub
jmp
jne
add
out
nop
fimul
idiv
push
fst
mov
pop
adc
sbb
jle
in
mov
fwait
cmp
cmp
and
push
cld
and
jb
test
xchg
lods
fldcw
pop
sub
sub
or
test
sub
xor
jge
mov
push
xchg
ret
jl
adc
add
cmps
les
lock
jl
push
sub
push
popa
add
add
int
test
xchg
pop
outs
arpl
sub
inc
sub
push
int3
or
mov
add
jnp
adc
xor
jb
inc
adc
or
loopne
out
mov
xchg
pop
or
adc
lea
rcl
jo
ja
popa
lods
test
push
xor
out
sub
or
test
mov
lods
int3
mov
or
push
xchg
mov
push
pop
push
fcom
mov
shr
pop
jb
(bad)
xor
adc
xor
push
add
mov
shl
aam
ret
push
test
mov
and
dec
mov
cmp
pop
enter
mov
mov
ret
push
sub
mov
(bad)
cmps
das
cld
inc
jmp
das
adc
dec
xchg
mov
dec
dec
jnp
retf
jle
dec
sar
mov
jp
adc
sub
test
mov
pop
dec
pop
adc
jne
inc
sub
gs
and
dec
scas
inc
bound
dec
sub
pop
pop
push
jg
jg
push
inc
sub
icebp
xchg
dec
js
inc
mov
xchg
sbb
xchg
inc
xchg
adc
and
mov
repnz
mov
dec
hlt
bound
jbe
dec
ins
ret
push
sub
mov
mov
push
scas
add
imul
je
and
mov
adc
mov
and
rcl
mov
ret
jno
push
dec
leave
mov
jl
adc
and
out
inc
cs
into
jae
mov
faddp
sti
jno
jns
sar
add
and
call
adc
leave
rcl
inc
lods
sbb
adc
jbe
push
jmp
cmp
call
xchg
call
loop
idiv
int
jp
sub
out
je
push
es
sub
xchg
push
mov
or
push
aas
mov
pop
sub
dec
and
add
dec
or
sbb
cld
call
mov
adc
jb
mov
test
pop
lods
adc
(bad)
mov
inc
dec
fwait
push
mov
dec
rol
and
shr
inc
pop
push
sbb
cmp
xor
xchg
adc
dec
pusha
mov
test
les
(bad)
xor
lock
or
xchg
push
mov
pop
inc
or
je
stos
ss
mov
pop
cli
mov
or
or
ret
or
lods
inc
(bad)
mov
add
push
jl
ffreep
sbb
sbb
add
dec
adc
xchg
jae
sub
push
cmp
hlt
add
mov
ins
js
adc
pop
test
inc
loopne
inc
pop
mov
pop
sbb
mov
shl
vmwrite
adc
sub
mov
xor
pusha
test
ja
push
and
inc
int
(bad)
shl
add
in
cli
jge
and
cmp
push
xchg
cmp
std
xchg
jl
or
mov
ret
lea
sar
and
sti
xchg
cmp
sar
push
stos
dec
mov
push
mov
aad
call
js
iret
mov
cvtps2pi
sahf
jne
xor
je
sub
jmp
cs
push
push
sar
scas
dec
rcl
jae
push
sub
int
xor
xchg
push
mov
aaa
xor
sbb
arpl
out
adc
shl
pop
inc
movs
push
je
sub
push
loope
add
or
pop
cwde
or
ja
rol
push
pop
add
xchg
sub
adc
ret
jmp
inc
xor
dec
jl
ror
push
mov
add
cmp
add
icebp
add
jo
mov
adc
xor
jb
cmp
loopne
aam
mov
cmp
repnz
icebp
jge
fs
sahf
adc
push
or
xor
or
push
cmp
(bad)
int
das
test
rsm
jl
push
lock
sbb
iret
repz
in
dec
mov
inc
inc
or
dec
or
ret
ins
jmp
jnp
clc
jge
mov
clc
push
mov
nop
and
dec
inc
inc
adc
ins
inc
test
xor
ds
rol
das
into
dec
adc
stos
je
mov
inc
dec
push
test
sbb
mov
push
mov
mov
enter
add
mov
jb
and
push
sbb
popa
in
test
test
push
gs
or
mov
mov
push
scas
stos
add
and
imul
adc
(bad)
pop
pop
gs
inc
loopne
mov
jge
xchg
inc
sti
ror
ret
icebp
pop
or
sub
(bad)
sbb
jae
idiv
push
ror
scas
and
pop
ja
xchg
push
cwde
out
mov
xor
ins
and
add
jl
push
jp
js
add
add
cmp
popf
xor
adc
lods
adc
cmps
or
cmp
pusha
imul
or
push
dec
ins
ins
adc
std
lds
xchg
and
loope
call
inc
inc
push
icebp
push
and
or
mov
pop
icebp
sub
xchg
mov
arpl
mov
call
mov
and
in
sbb
inc
jmp
add
cmp
clc
fmul
fstp
jl
push
add
jl
sbb
fs
fistp
mov
je
adc
mov
jle
mov
sbb
sbb
cmps
lods
sar
pop
cld
cmp
icebp
fstp
sbb
ret
in
arpl
pusha
mov
pop
clc
imul
dec
std
inc
lods
pop
repz
lock
cmp
lea
sar
xor
(bad)
push
pop
out
hlt
pop
add
jmp
sbb
cs
(bad)
(bad)
cmps
div
call
mov
push
push
mov
push
cld
mov
add
fisub
add
bound
fs
pop
push
or
adc
sbb
adc
jo
repnz
mov
jmp
pop
aaa
add
je
inc
push
dec
mov
mov
inc
jne
dec
add
jmp
in
sub
inc
adc
jb
aaa
inc
sahf
push
js
inc
cmp
fmul
or
aam
adc
add
lods
push
dec
inc
fld
or
outs
pop
xor
mov
sbb
ins
les
daa
in
mov
sub
sahf
loopne
mov
fadd
xor
adc
sbb
call
jo
adc
nop
push
adc
push
mov
sahf
and
and
stos
mov
sahf
mov
mov
jecxz
jns
jmp
pop
push
or
lea
sub
push
ret
sub
or
data16
or
adc
ja
push
fld
adc
pusha
and
jbe
ror
xor
pop
pop
mov
or
add
dec
xchg
aam
test
jb
adc
and
loope
push
adc
sbb
(bad)
push
add
push
icebp
pop
call
std
inc
(bad)
mov
mov
pop
pusha
push
ret
addr16
sbb
xchg
test
aam
xchg
loopne
adc
or
jbe
shl
dec
inc
cld
dec
cmp
fbld
adc
prefetch
or
pop
arpl
mov
imul
adc
out
sbb
inc
or
cmp
or
push
dec
dec
retf
cwde
call
sbb
fimul
sub
adc
fiadd
add
retf
jae
pop
cmpxchg
push
ret
nop
xor
and
mov
gs
loop
cmp
push
adc
enter
sbb
mov
cmp
jne
dec
pusha
out
jne
ror
and
js
fiadd
jmp
popa
mov
mov
bound
add
xor
fild
outs
repnz
nop
out
pop
xor
push
or
push
sub
pop
push
push
mov
adc
mov
ds
add
popa
jb
jmp
std
pusha
cmp
push
inc
bound
cmp
inc
inc
sbb
inc
ins
inc
(bad)
jecxz
test
push
dec
mov
sar
and
and
add
jb
add
xor
(bad)
push
das
pop
pop
xchg
cmp
fdivr
arpl
add
push
sbb
sub
pop
dec
loopne
or
or
inc
pusha
mov
pusha
inc
push
pop
in
jle
lahf
dec
(bad)
inc
push
clc
cwde
(bad)
clc
add
mov
xor
inc
xor
ficomp
push
pop
movs
push
jle
mov
push
mov
push
test
fcmovu
test
retf
mov
add
sub
jg
xor
inc
pop
pop
dec
fbstp
cmp
icebp
fwait
(bad)
cmc
mov
dec
pusha
sbb
dec
fnsave
push
cmp
(bad)
cmps
cmp
cmps
dec
pop
sub
add
mov
mov
xchg
pop
jl
or
add
and
sbb
imul
cli
ja
jg
push
popa
push
call
push
sub
push
dec
add
mov
mov
inc
mov
xchg
jmp
mov
cmp
or
push
jmp
pop
inc
daa
lock
ss
push
inc
adc
add
sub
xor
push
or
pop
jp
xlat
adc
int
aad
mov
idiv
clc
inc
fdivr
add
dec
push
jns
inc
add
mov
int3
mov
sbb
inc
in
cld
jmp
xchg
(bad)
icebp
add
das
adc
xlat
and
sbb
fs
daa
pushf
loope
sub
inc
jp
sbb
or
out
dec
ror
cmps
push
xor
mov
jecxz
mov
or
es
jb
or
test
push
frstor
push
pusha
jmp
(bad)
mov
xchg
sub
push
add
or
cmc
movs
imul
push
ret
stos
cld
cmp
or
cmp
inc
es
push
push
nop
sub
push
test
loopne
add
sub
jecxz
lock
js
imul
inc
xor
mov
or
sbb
not
inc
push
not
rol
adc
in
mov
sbb
sar
sbb
inc
mov
jle
sub
add
push
in
mov
dec
add
inc
sbb
loopne
sti
inc
dec
jne
mov
pusha
push
movs
dec
or
stos
out
jno
sub
inc
je
inc
pop
mov
lods
cwde
sbb
shl
out
xchg
xor
push
ja
or
mov
nop
mov
push
sub
daa
jno
add
adc
mov
dec
stos
sub
mov
cmp
or
cmp
add
(bad)
stos
jnp
push
mov
sbb
and
add
inc
inc
pop
rcl
pop
mov
xor
cmp
push
jo
push
cmc
aaa
push
ja
push
pop
and
pop
sub
(bad)
sub
es
cmp
pop
mov
fild
ret
lea
pop
pop
adc
fst
jle
jp
inc
dec
jbe
lods
sbb
lock
or
(bad)
pushf
sbb
adc
nop
test
add
clc
data16
add
test
xlat
test
pop
lods
dec
adc
adc
xchg
push
cmp
xor
in
mov
sbb
fist
lods
dec
enter
mov
cmp
and
lahf
ins
fsubr
inc
push
add
xor
add
ja
ror
adc
jle
add
daa
sbb
add
addr16
xor
ror
pop
push
dec
shr
rol
or
test
not
ret
sbb
push
mov
push
iret
ins
stos
in
inc
push
fisub
(bad)
in
sbb
xchg
retf
mov
add
inc
cmc
jns
mov
scas
(bad)
xor
in
xchg
imul
jae
add
cmp
jmp
movs
(bad)
mov
sbb
xchg
add
rol
daa
loopne
clc
jle
mov
and
jge
mov
std
jl
(bad)
or
or
inc
dec
xchg
test
ins
lock
loope
rol
adc
add
loope
call
adc
add
cwde
jbe
inc
sbb
push
pop
adc
pop
lods
add
xor
xchg
imul
scas
sbb
dec
(bad)
mov
outs
mov
clc
mov
sub
fild
or
adc
add
loope
in
pop
push
jmp
mov
or
fsubr
aas
fld
stc
sbb
aam
jmp
lea
pop
xor
or
movs
(bad)
push
dec
cmc
(bad)
xchg
and
xor
call
retf
mov
fidiv
mov
iret
xor
call
inc
xor
cmp
es
mov
mov
xchg
sub
mov
or
fldln2
sub
scas
dec
cld
inc
mov
jb
icebp
sbb
dec
xor
lock
scas
push
xchg
js
pop
cmp
and
pushf
add
push
sbb
adc
loop
loopne
sub
sbb
add
push
adc
mov
jmp
ins
fisub
cmp
(bad)
mov
out
inc
mov
gs
sub
add
mov
jne
or
inc
dec
pop
test
fisttp
push
bound
aas
sbb
pop
ret
dec
js
rcl
jmp
or
inc
cmp
push
dec
sub
jle
adc
jo
icebp
or
push
pop
adc
mov
xchg
mov
sbb
sbb
add
inc
mov
bnd
xchg
and
dec
sar
rcl
adc
add
dec
xchg
xor
adc
mov
retf
(bad)
scas
lods
xor
jmp
or
sbb
push
push
dec
push
lea
inc
cmp
sub
xchg
pop
xchg
shl
ret
sbb
cmc
adc
or
cmp
in
xor
cmp
rcl
mov
mov
repz
mov
adc
sbb
sub
cmp
mov
lock
call
sub
add
sbb
fimul
mov
stos
xor
je
push
cld
add
dec
fadd
scas
xchg
push
jle
pop
inc
fnstsw
sub
xchg
(bad)
sbb
sub
call
adc
jmp
jg
sub
sub
mov
mov
repnz
shr
out
mov
shl
cmp
pop
mov
cmps
xchg
inc
inc
mov
dec
and
add
imul
cmps
jb
sub
es
dec
add
add
adc
shr
jmp
iret
dec
loope
mov
ret
push
pusha
cli
sbb
push
xor
das
imul
mov
mov
push
loope
cmps
jne
dec
add
inc
outs
or
outs
or
lock
pop
(bad)
aam
(bad)
dec
jl
and
jl
fstp
pushf
push
push
push
sti
nop
or
sub
mov
cdq
nop
xchg
and
xchg
or
sbb
or
adc
push
enter
inc
pop
ds
mov
mov
adc
mov
mov
and
sub
sbb
and
ret
dec
push
push
or
lea
sub
cmp
mov
add
pop
adc
push
mov
jns
add
stc
jmp
ror
inc
jbe
sbb
(bad)
fstp
jb
into
cmp
jge
aad
(bad)
push
ins
xor
inc
lahf
adc
add
sub
je
add
rol
movs
xor
sbb
push
imul
jge
mov
ret
pop
mul
or
imul
mov
stos
inc
mov
inc
jo
sbb
jmp
test
fmul
inc
xor
mov
pop
ins
mov
inc
sbb
aaa
push
jle
add
fidiv
mov
lods
fwait
rcr
inc
xor
sbb
pop
lods
mov
add
jmp
cmp
lea
adc
call
inc
inc
push
push
mov
add
ds
aad
push
clc
xor
add
adc
pop
mov
arpl
lock
push
add
sar
jle
inc
mov
jmp
jmp
push
inc
dec
push
cdq
jbe
add
cmp
or
ds
push
mov
dec
cmp
or
adc
inc
pop
ss
or
ficom
dec
adc
jle
push
sub
sbb
dec
push
xor
aam
sub
(bad)
frstor
std
adc
or
xchg
add
jae
xchg
mov
(bad)
mov
cmp
movs
push
imul
add
xchg
xor
xchg
cmp
mov
jno
(bad)
pop
sub
pop
stos
or
(bad)
xchg
loope
or
cmc
push
jl
add
and
pop
mov
inc
inc
mov
inc
(bad)
xlat
pop
pop
jo
dec
and
and
sahf
lahf
inc
sbb
cmp
iret
pop
sbb
sar
jns
jo
adc
sub
push
fdivr
adc
add
add
push
adc
inc
push
cmp
enter
cmp
cmp
and
xor
add
pop
pop
mov
ficomp
or
rcr
pop
sub
(bad)
dec
out
sahf
(bad)
jmp
pop
mov
inc
aam
cmc
rcl
addr16
jae
inc
cmp
sbb
jl
add
fisub
push
push
mov
push
cmp
add
retf
mov
rol
fld
retf
fdivp
inc
inc
or
sbb
sub
xor
lahf
sub
rol
add
lahf
add
adc
stc
lea
int
jecxz
inc
xor
ja
xchg
xchg
inc
push
cli
sub
push
sbb
fist
push
js
cld
jl
mov
inc
mov
cmp
jge
xchg
fs
jle
cmp
sbb
jo
mov
cmp
pop
shr
loopne
movs
in
xor
push
iret
sub
inc
push
retf
dec
mov
pop
or
dec
cmp
movs
sahf
mov
jne
cmp
push
sti
xchg
pop
cli
shl
sub
xchg
adc
inc
push
or
xor
xor
scas
add
sar
push
adc
hlt
clc
jg
sbb
push
mov
sbb
add
dec
dec
mov
inc
add
jo
lea
mov
add
neg
inc
xor
sub
or
js
xor
jg
fcomp
cdq
mov
call
retf
mov
jns
mov
movs
movs
pop
mov
xor
sub
and
jno
and
add
add
enter
nop
or
mov
mov
daa
mov
xchg
inc
dec
lds
jo
dec
mov
cmp
cmp
add
cs
rol
dec
loopne
cmp
dec
fcom
shl
sbb
or
in
jno
and
and
enter
inc
in
or
add
and
lock
fs
mov
js
int
xor
ret
jl
inc
jecxz
ret
mov
mov
sbb
clc
sbb
push
cdq
or
and
std
xor
mov
inc
add
jmp
out
out
add
out
mov
mov
mov
test
ja
and
or
(bad)
push
xor
aas
lock
or
or
test
fadd
push
pop
dec
popf
dec
std
or
jle
fist
sub
sub
cmp
push
lea
cdq
ror
sbb
xchg
adc
stc
mov
add
dec
xchg
lock
inc
cmp
pop
popa
inc
sub
imul
je
mov
sbb
add
sub
aaa
cmps
aam
lods
loope
in
cmc
sbb
push
jne
test
dec
or
imul
mov
add
add
rcl
push
(bad)
into
sar
std
add
ror
sbb
push
popf
xor
pusha
lods
int3
xor
jle
adc
aam
add
jb
out
pop
and
hlt
pop
lea
push
and
cwde
xchg
jg
in
add
and
rcr
aam
xor
adc
in
loope
and
dec
mov
jo
inc
lea
ds
je
rol
jnp
mov
jbe
mov
out
loope
std
sub
xor
outs
sbb
sbb
add
inc
test
xchg
pop
loope
rcl
jne
aaa
or
sahf
and
cmp
pop
sbb
pop
jb
jp
mov
inc
mov
ffree
inc
jp
inc
xor
add
in
das
inc
sar
lock
je
mov
or
ds
ficomp
adc
sar
sub
fist
ds
je
rcl
ret
fisttp
nop
adc
enter
dec
jmp
(bad)
(bad)
pop
mov
sbb
push
pop
clc
or
loop
scas
shl
sub
jge
popf
xchg
test
push
shl
jmp
sbb
add
sub
cli
nop
enter
shr
int
add
jle
mov
js
js
jmp
out
fisttp
xor
mov
iret
lods
lods
push
inc
test
hlt
(bad)
mov
outs
lock
push
and
pop
push
xchg
mov
in
push
jmp
cmp
lea
test
sub
mov
mov
or
jg
adc
sub
fstp
mov
jbe
(bad)
out
sbb
jecxz
xchg
es
dec
nop
rol
(bad)
mov
ret
jns
push
mov
in
sub
out
mov
or
inc
inc
imul
imul
ins
js
test
clc
rep
adc
xor
daa
or
sbb
adc
ror
sbb
ffreep
or
js
sub
or
test
movs
push
jmp
sbb
jb
and
jb
dec
test
retf
dec
je
inc
and
sbb
cmp
(bad)
jge
adc
mov
js
jnp
mov
or
fimul
sub
cdq
(bad)
(bad)
ss
loope
lea
or
sub
inc
(bad)
stos
add
pushf
push
(bad)
or
ret
push
push
dec
mov
push
mov
jbe
pop
cmp
dec
jne
daa
sahf
jo
xchg
sub
xchg
cmp
mov
jne
test
ret
adc
cld
rol
cwde
leave
add
adc
js
lock
(bad)
lea
cmps
jg
or
sti
mov
lds
pusha
sbb
push
bnd
pop
dec
outs
call
or
ret
mov
ins
jno
fiadd
push
out
sbb
add
mov
jmp
repnz
jo
ss
xor
les
js
leave
fsubr
je
lea
dec
push
mov
sbb
ret
adc
dec
add
in
jmp
mov
ins
ror
daa
fs
add
lsl
dec
dec
pushf
mov
test
xor
xor
xor
xchg
inc
inc
cmp
dec
mov
xor
cvttps2pi
inc
jbe
mov
jbe
rol
retf
dec
mov
dec
push
dec
add
nop
cmps
dec
cmp
xchg
sbb
push
jnp
mov
push
sub
inc
add
pop
std
(bad)
call
test
das
iret
js
aam
push
cmp
dec
mov
mov
lock
add
pusha
cmp
or
out
or
dec
jne
dec
ss
pop
adc
in
js
sub
das
mov
jne
add
jo
mov
sub
pop
push
mov
sub
ss
push
into
add
add
push
data16
(bad)
jb
push
adc
das
add
pop
and
push
xlat
cmp
mov
inc
push
cld
sub
inc
sub
sub
movs
jo
add
add
push
inc
mov
nop
cmp
mov
cs
iret
xor
inc
cwde
add
pop
cs
mov
inc
je
(bad)
rol
xchg
pop
dec
es
jae
push
popw
lods
add
sbb
pop
clc
aam
adc
cmp
inc
add
xchg
std
ror
sub
pop
mov
cmp
push
adc
cmp
add
mov
gs
ret
pushf
int
and
movs
xchg
in
fdiv
mov
and
inc
sbb
adc
sbb
mov
or
call
adc
push
add
pop
pop
cmc
(bad)
and
in
test
jo
shr
arpl
xor
add
(bad)
fmul
inc
and
jne
push
sahf
pusha
jo
mov
adc
pusha
add
cmp
test
push
dec
pop
jl
pop
lahf
(bad)
aad
fmul
lea
mov
mov
loop
adc
sub
into
shl
fild
add
les
add
jg
mov
add
cmp
jo
and
pop
inc
test
jle
(bad)
sbb
rcl
or
daa
les
into
xor
imul
jnp
stos
out
xchg
cwde
sahf
cmps
shl
jle
cmps
enter
mov
pushw
and
inc
or
mov
mov
adc
sbb
mov
pop
test
mul
(bad)
and
(bad)
xor
mov
mov
inc
dec
test
(bad)
or
push
aad
and
test
(bad)
hlt
sub
adc
sbb
cmp
clc
jle
adc
cmps
stos
lods
jle
lea
add
or
add
ret
or
cmp
jle
mov
mov
mov
inc
and
dec
pop
lods
int
(bad)
or
sbb
or
or
sub
or
or
repz
jp
lds
jo
dec
stc
jg
(bad)
push
test
pop
cmp
loop
xor
lods
test
sbb
movs
push
cli
jg
outs
jne
inc
and
imul
fcmove
movs
loope
xlat
cmps
or
movs
inc
outs
sub
test
xor
mov
xor
dec
ficomp
ret
test
pushf
lods
jge
sar
retf
mov
sub
or
fstp
sub
sub
mov
je
out
jg
out
sub
bound
test
lock
add
or
(bad)
cmp
mov
and
dec
in
mov
pushf
fadd
sbb
cmp
pop
imul
jg
cmp
xchg
adc
jmp
ret
and
add
sbb
repz
enter
cmps
fisttp
fmul
cmovo
push
icebp
mov
das
(bad)
imul
in
push
mov
ret
add
pop
push
cmp
in
sbb
iret
aas
mov
pushf
xor
jg
nop
lea
sbb
scas
push
cmp
push
jg
add
mov
mov
jle
and
inc
cli
push
dec
pop
sub
mov
sbb
mov
call
cld
aaa
dec
jne
adc
inc
js
mov
pop
or
dec
add
imul
sub
out
lea
shl
stos
push
push
clc
mov
xlat
jle
mov
xor
sbb
xor
xor
add
mov
inc
push
jbe
mov
sub
ret
loop
fsub
add
mov
push
lock
iret
add
aaa
jl
mov
sub
add
jl
jo
iret
dec
ror
popa
adc
popa
inc
loop
inc
jle
xor
push
sbb
adc
arpl
ret
in
repnz
pop
in
push
retf
mov
imul
aas
test
cld
inc
je
jecxz
add
or
mov
mov
mov
xor
or
ror
addr16
hlt
idiv
mov
rol
add
enter
fwait
push
add
test
call
adc
cmp
sub
add
dec
les
cmp
jno
test
test
jecxz
add
dec
outs
je
outs
pusha
mov
xchg
imul
mov
sbb
sbb
sub
xchg
mov
dec
pop
and
push
dec
push
mov
xchg
loopne
fs
or
dec
sub
and
sub
adc
sar
push
push
push
cmc
xchg
dec
adc
inc
add
pop
loop
int3
imul
jp
cwde
and
and
nop
sub
mov
and
dec
imul
xor
adc
sbb
ret
jg
outs
lods
inc
popa
out
xchg
add
movs
retf
or
pop
mov
sbb
dec
inc
out
dec
fs
ret
dec
ds
ins
or
mov
imul
add
inc
pusha
addr16
pop
lods
retf
pop
mov
jg
sbb
mov
ja
push
push
push
add
sbb
pop
gs
fs
cmp
add
sbb
add
test
and
clc
xchg
xchg
dec
sub
adc
adc
adc
push
mov
and
dec
js
pop
adc
adc
push
(bad)
adc
xor
push
xor
jo
and
jmp
jg
pop
fcomp
mov
mov
jb
or
lock
sbb
inc
popa
mov
add
push
ror
inc
mov
xchg
test
test
jbe
add
mov
loopne
jl
cmps
add
cmp
mov
into
push
adc
movs
mov
(bad)
rcr
push
inc
retf
dec
(bad)
mov
retf
repnz
xchg
dec
pusha
adc
adc
je
sbb
cmp
add
sti
call
push
push
ja
push
push
(bad)
or
cld
jle
stos
mov
ror
dec
jne
xchg
jmp
mov
push
mov
or
pushf
not
fcomp
mov
pop
into
jbe
(bad)
rep
je
xor
fisttp
cld
sbb
lock
mul
cmps
cmps
icebp
out
enter
jns
loope
xchg
pop
or
cli
cmps
cmc
imul
ret
xchg
loope
test
add
cmp
or
ret
cli
xor
mul
call
shl
sbb
popf
dec
or
pop
mov
call
imul
test
hlt
jne
jecxz
and
push
not
push
(bad)
jbe
jae
push
dec
inc
jmp
sbb
je
ss
xor
mov
(bad)
call
ror
mov
push
xchg
xchg
pop
ror
mov
add
mov
repz
xor
mov
add
inc
pop
dec
ins
dec
and
retf
retf
jmp
hlt
pop
xchg
inc
icebp
jle
jae
cmp
add
jmp
stos
arpl
jmp
push
lods
fwait
aas
push
or
test
pop
jno
cmp
mov
mov
sti
mov
mov
cmp
mov
dec
fmul
scas
mov
mov
mov
ret
mov
push
fs
leave
aas
mov
enter
dec
pop
sub
or
nop
or
add
inc
jmp
ror
jl
pop
add
mov
je
dec
adc
xor
pop
inc
jo
arpl
xor
inc
inc
lea
jmp
lock
add
in
out
add
jle
inc
jmp
mov
js
daa
pusha
jmp
xchg
push
ret
push
imul
mov
xor
push
daa
cmp
pop
or
pop
adc
fist
pusha
sbb
pop
dec
in
or
sub
jge
add
inc
in
cmps
sbb
movs
or
sub
mov
xlat
or
or
sbb
jl
mov
popa
push
cmp
dec
and
(bad)
call
and
jmp
aad
mov
pop
jno
or
mov
jnp
shl
sub
popa
or
dec
jp
fmul
or
loopne
jl
es
or
fsubp
faddp
cmp
js
and
or
jl
es
mov
test
push
pop
rcr
loope
pop
outs
and
sbb
add
je
mov
push
outs
pusha
pop
add
jno
retf
ins
call
pop
or
jae
sahf
fnstenv
xor
je
ret
mov
mov
jne
ja
dec
aad
xchg
mov
xchg
sbb
js
jl
jns
mov
hlt
xchg
dec
push
cmps
add
adc
leave
push
bswap
fs
ret
rcr
rcr
and
xor
mov
inc
mov
icebp
mov
xor
fimul
lahf
ret
sub
retf
inc
cmp
into
fisub
and
push
mov
mov
sbb
mov
xor
test
sbb
(bad)
pop
mov
mov
test
sbb
xchg
add
div
sub
ret
push
xor
retf
push
in
mov
jo
or
ja
xchg
xchg
inc
bnd
xchg
ss
lea
fidiv
loope
js
adc
inc
or
cmp
sbb
mov
(bad)
pushw
bound
cmp
clc
lds
pop
push
sbb
lsl
mov
jp
fbstp
sbb
ret
inc
inc
gs
sbb
aad
inc
dec
(bad)
stos
popa
adc
add
mov
and
enter
inc
mov
or
les
arpl
clc
mov
xchg
pop
dec
pop
daa
sbb
mov
inc
inc
pop
inc
add
imul
repz
mov
pushf
or
jle
push
pop
add
in
adc
dec
xchg
push
jo
dec
mov
mov
push
dec
fistp
sbb
pop
inc
and
icebp
add
aas
mov
test
jbe
push
loopne
lock
sbb
push
pop
ret
ss
cs
xchg
loope
add
out
and
and
mov
xor
cmp
mov
jo
add
inc
xchg
dec
mov
sbb
push
pop
test
push
push
inc
ret
cmp
(bad)
pop
sar
lock
imul
inc
xor
pusha
cwde
push
rol
jo
imul
jmp
sub
aad
aad
xchg
js
inc
sti
dec
sub
ror
inc
shrd
inc
cs
scas
adc
and
lock
or
pop
bound
adc
je
xchg
add
xchg
idiv
xor
xor
mov
adc
lock
in
jo
xchg
adc
cdq
scas
pop
call
pop
xor
mov
sbb
jo
mov
sbb
inc
outs
jbe
pop
mov
mov
loopne
cmps
lea
adc
int3
add
cmps
or
sbb
push
xlat
mov
mov
test
add
mov
pop
lea
test
pop
call
or
add
or
xor
or
lea
loopne
xlat
dec
dec
dec
sti
arpl
dec
inc
mov
xor
out
mov
cmp
mov
sub
adc
cmp
fldenv
jle
inc
xor
push
test
dec
xchg
inc
sub
fistp
daa
pop
leavew
xchg
inc
push
mov
nop
stos
xchg
jmp
push
inc
gs
pop
inc
rcr
mov
test
pop
(bad)
aam
xor
sbb
int
pop
adc
xchg
push
cmp
lods
mov
jns
lea
fcomp
sub
mov
movs
push
loop
xor
or
lahf
add
out
mov
sbb
ss
and
loopne
mov
cwde
adc
sub
xor
(bad)
and
movs
add
and
je
js
and
dec
mov
loopne
ror
test
test
cmp
jo
loopne
pop
and
mov
push
sbb
push
dec
imul
pop
mov
outs
push
push
xchg
mov
pop
sahf
or
mov
and
sub
mov
cmc
xchg
add
(bad)
sbb
xor
inc
mov
ret
call
push
jne
and
in
add
pop
push
sbb
cwde
pop
push
mov
nop
and
mov
scas
mov
popf
fimul
adc
cmp
out
add
scas
add
mov
mov
push
adc
inc
lods
add
ret
xor
push
fwait
jl
iret
xor
sbb
or
xlat
scas
dec
sbb
cmovbe
jne
das
lahf
test
or
xlat
shl
add
adc
push
pusha
or
adc
and
int3
add
push
fadd
adc
cmp
fsub
inc
dec
mov
inc
daa
retf
pop
call
iret
add
mov
test
das
daa
mov
shr
sub
pop
aam
or
jge
movs
lea
xchg
and
rol
sbb
adc
(bad)
ss
fstp
xor
dec
pop
xchg
sar
xor
(bad)
jmp
out
sbb
pop
sub
cmp
movs
test
(bad)
aad
or
fcom
push
dec
cmp
stc
jo
sbb
es
dec
shl
sbb
bound
push
fld
push
leave
xchg
mov
sar
dec
xor
sub
mov
sub
hlt
dec
movs
call
mov
mov
popa
and
mov
les
dec
jp
pop
(bad)
push
das
xchg
rol
into
xchg
jle
add
and
dec
push
push
push
xchg
hlt
das
or
jge
and
sub
add
lea
push
sbb
pop
xor
inc
or
lea
dec
sub
cld
xchg
cmp
mov
xor
xor
loopne
or
cwde
cs
add
scas
and
dec
add
jl
jne
cmps
add
mov
sti
mov
push
xor
pop
xor
mov
inc
js
or
lds
xchg
cmps
int3
and
jp
xlat
add
or
fiadd
mov
outs
or
xor
xor
cmps
xor
sub
(bad)
xor
jl
aad
or
mov
dec
add
nop
adc
pop
mov
fwait
imul
js
add
cwde
and
cmp
outs
inc
js
leave
and
fcomp
ja
aas
dec
or
inc
jge
shl
ret
jae
pusha
imul
cmps
push
cmps
pop
pop
sbb
lods
movs
ja
ret
ss
mov
add
aad
xlat
adc
mov
into
fdiv
jmp
pop
jne
sub
or
and
imul
mov
sbb
push
lods
sub
sub
sbb
inc
sbb
push
add
jmp
cmp
aas
aam
icebp
push
mov
jmp
pop
jmp
pop
std
cmp
dec
popa
sbb
(bad)
sbb
mov
shr
sbb
sub
push
or
cwde
loopne
push
add
js
xor
sbb
sbb
or
push
ins
lea
mov
ror
aad
sub
push
push
mov
inc
fnstenv
int
sti
add
sub
sbb
pop
or
js
sar
(bad)
fist
jno
faddp
jg
sub
xor
jge
push
jbe
je
xor
into
(bad)
push
cmp
mov
push
fisttp
jo
popa
push
pop
cmp
xchg
loop
lock
lahf
sbb
inc
pusha
fcomp
lock
lahf
cmp
cmp
sub
inc
stos
cs
sbb
push
push
add
add
jge
shr
cdq
sub
sbb
or
pusha
cdq
adc
dec
jmp
mov
fcom
or
retf
push
xor
das
call
add
rcl
jp
outs
test
sub
pop
fs
mov
mov
ss
shl
xor
aas
pop
push
dec
clc
nop
xor
stos
hlt
xor
pop
add
mov
xchg
adc
push
xor
(bad)
adc
sub
cdq
mov
push
js
and
push
xchg
sub
mov
and
cmps
nop
xchg
and
sub
bound
cdq
and
test
cs
dec
adc
and
dec
mov
lods
data16
cld
add
lahf
push
and
lea
xor
dec
cmp
mov
mov
inc
or
lock
cmp
je
rol
sbb
add
in
mov
mov
jl
push
or
sub
xor
imul
push
es
xchg
and
and
mov
mov
xor
test
cs
ret
add
push
out
and
fwait
dec
aaa
leave
call
or
xlat
mov
popf
sar
rol
lds
mov
(bad)
cmps
xor
push
enter
movs
mov
loop
jl
shl
mov
push
sar
and
inc
pushf
jge
rcl
ss
retf
add
ret
jge
test
xor
xchg
daa
(bad)
ret
dec
xchg
or
or
dec
inc
dec
mov
push
outs
test
pop
dec
sbb
xor
mov
or
or
jle
daa
int
mov
push
(bad)
cld
inc
inc
sbb
jl
jne
mov
enter
jbe
lea
mov
and
mov
(bad)
push
cmovs
test
(bad)
xor
add
or
add
adc
int3
xor
mov
dec
iret
lea
int3
jg
cwde
sbb
inc
push
idiv
retf
into
push
ss
lds
sbb
and
pop
adc
and
mov
push
adc
mov
sbb
inc
sbb
xor
add
inc
aad
add
sbb
adc
push
inc
mov
ins
cmp
mov
inc
sub
aad
inc
or
add
push
jg
push
in
fst
push
out
scas
jns
loopne
ja
loopne
and
or
loopne
add
or
push
pop
das
mov
add
js
inc
adc
push
push
es
aas
mov
ins
stos
pop
sbb
sbb
bound
sbb
test
fs
push
add
leave
sbb
sbb
in
push
inc
and
push
push
popf
pop
push
or
ja
cs
push
push
add
jno
or
adc
xchg
or
sbb
xchg
rol
xchg
cmps
popa
and
mov
imul
pop
mov
mov
arpl
out
loopne
ret
pop
daa
sub
xchg
adc
lods
or
js
fdiv
(bad)
and
(bad)
mov
fcmovnb
dec
or
sub
mov
cdq
popf
rep
xchg
fild
pop
or
lea
les
pop
mov
fcom
jns
loopne
add
outs
sbb
ret
lea
popa
fstp
add
stos
pusha
cmp
cmps
sub
push
lea
js
push
cmps
lock
adc
push
push
ret
ss
pop
sbb
mov
mov
xor
(bad)
and
pop
mov
sbb
int
sbb
lea
in
push
add
adc
xor
fwait
mov
push
adc
and
inc
pop
mov
dec
lods
or
inc
inc
xchg
and
ja
out
cmp
dec
(bad)
jns
neg
dec
in
call
sar
jne
inc
or
and
sbb
and
rol
mov
mov
push
lods
hlt
cmp
push
or
cmc
mov
int
pushf
adc
das
mov
es
popf
cwde
test
mov
dec
cld
push
inc
jmp
jle
mov
mov
mov
pusha
lods
lea
sub
pusha
fucomip
adc
aam
and
or
fsubr
neg
or
(bad)
cmp
lods
rcl
inc
adc
cmp
jbe
(bad)
pusha
xor
repz
pcmpeqd
je
push
ret
push
push
and
jmp
sbb
xor
les
in
pop
push
out
and
adc
xchg
add
jge
inc
and
push
and
jb
xor
add
inc
sub
ja
add
ror
jmp
out
sbb
dec
and
push
lock
add
adc
sbb
add
popa
push
xor
xor
mov
leave
call
inc
ins
cmps
icebp
and
cmps
push
add
lds
sub
lock
fidiv
test
or
or
mov
jo
inc
fmul
xor
les
cmp
adc
jo
fninit
and
push
mov
daa
fwait
pop
outs
leave
cmovae
push
sub
imul
xor
adc
lods
cmp
or
inc
or
cmp
adc
pusha
mov
mov
push
add
pop
jmp
and
imul
and
mov
ins
adc
xor
int3
test
and
pop
std
push
cmp
test
popa
cwde
mov
sbb
xor
dec
add
sub
add
mov
dec
jns
pop
dec
rol
or
xchg
nop
add
pop
enter
sbb
inc
imul
sbb
lods
out
pop
xor
pop
xor
dec
mov
xor
add
stos
call
dec
inc
ss
nop
pop
inc
and
mov
(bad)
xor
or
or
aas
or
add
push
outs
sahf
bound
ror
push
dec
xchg
and
aad
arpl
mov
or
cli
shl
pushf
inc
add
dec
pop
push
sub
outs
or
sub
mov
fucomp
cli
mov
pcmpeqw
je
cwde
and
repnz
icebp
or
test
loopne
or
cmp
mov
or
cmp
fld
popa
or
imul
mov
xlat
pop
xor
xor
pop
clc
ret
inc
sub
and
or
cmp
jo
cwde
mov
push
ret
inc
mov
or
and
sti
xor
inc
fidivr
fadd
cmp
add
je
sbb
and
bound
jne
push
retf
jne
je
pop
pop
add
or
sub
pop
and
push
add
mov
adc
inc
jb
dec
jecxz
sbb
dec
jno
mov
dec
imul
inc
out
or
sbb
mov
add
mov
jl
and
xor
jno
jo
xlat
mov
iret
mov
and
push
xchg
in
cmp
fcomi
xor
cmp
sub
and
sbb
sub
rol
adc
scas
jmp
cmp
mov
rol
cmp
bound
jge
pop
inc
sub
sub
cmp
mov
bound
data16
or
(bad)
je
in
sub
mov
pop
dec
call
add
je
push
push
jno
inc
sbb
lock
sbb
pop
lds
(bad)
pop
int3
push
push
dec
sub
push
cmp
xor
rcl
mov
inc
pop
push
rol
xchg
sbb
pusha
push
xchg
mov
or
mov
aam
jp
fcom
pop
cmc
inc
inc
and
mov
pop
push
sub
iret
or
enter
ret
lea
push
jns
cmp
push
imul
mov
xor
jecxz
mov
mov
movs
xchg
mov
cli
xor
inc
je
data16
(bad)
fadd
mov
dec
fwait
sbb
fild
cmp
or
pop
sub
mov
mov
arpl
push
push
sbb
jb
ret
adc
add
inc
inc
ret
jne
fstp
in
inc
shr
cwde
xchg
js
dec
pop
mov
icebp
aaa
or
inc
dec
adc
dec
xor
pop
and
add
pop
imul
jl
sbb
cs
xchg
dec
call
xor
jb
inc
sbb
adc
ret
ror
test
fmul
aaa
pop
push
pop
inc
push
dec
or
test
push
test
or
mov
jle
sbb
(bad)
nop
and
or
sbb
jmp
call
or
pop
xor
push
aad
pop
stos
xchg
ficomp
or
cmp
sub
sub
dec
mov
xchg
clc
dec
movsx
push
scas
dec
mov
sub
lods
ja
jo
dec
pop
lock
push
adc
inc
in
adc
or
dec
or
and
es
pop
sub
test
sbb
and
cmp
inc
sub
fwait
retf
cs
fcomp
test
in
mov
ins
cmp
icebp
cmps
mov
je
inc
or
push
jle
loope
add
(bad)
push
gs
push
adc
call
rcr
sbb
inc
add
into
mov
cs
dec
and
jbe
aaa
mov
jmp
sbb
jg
mov
inc
test
pusha
in
pop
jns
les
mov
mov
or
dec
push
adc
cld
pop
ss
add
ror
loopne
add
push
or
(bad)
es
shr
mov
sar
inc
ja
inc
dec
or
push
mov
or
xor
nop
fcom
out
not
mov
inc
jo
jb
std
or
jecxz
cs
movzx
mov
jnp
push
rol
neg
xchg
adc
mov
xchg
jmp
bound
xchg
pop
retf
and
ret
sub
inc
test
js
jg
retf
sub
add
mov
inc
push
add
ja
ins
mov
test
pop
mov
and
push
pusha
xor
cmp
popf
push
push
jnp
sbb
sbb
add
pop
sbb
dec
and
je
(bad)
cmp
inc
dec
in
jmp
cmp
dec
dec
bound
pop
sbb
adc
push
jl
outs
xchg
dec
push
xor
nop
push
dec
add
xor
pushf
push
mov
pop
mov
mov
scas
add
aad
jb
and
inc
mov
dec
push
movs
div
mov
test
dec
xchg
in
lods
xor
xor
mov
pop
or
sbb
add
inc
dec
cs
enter
adc
jne
pusha
loopne
scas
fmul
retf
or
loopne
cmp
or
pop
inc
(bad)
sub
clc
add
and
pop
aad
pushf
cmc
test
cmp
sbb
daa
or
push
inc
je
rol
sbb
inc
dec
push
ficom
sub
push
jg
xchg
dec
scas
inc
xor
or
cdq
sbb
jg
imul
imul
popa
mov
aad
fdivr
mov
inc
jmp
movs
inc
out
mov
sub
ror
(bad)
xor
cmp
mov
cs
stos
push
jmp
and
in
cmp
sub
and
scas
call
xor
pop
ss
je
cmp
add
stos
mov
push
add
test
ret
pop
xchg
neg
stc
icebp
mov
(bad)
xchg
daa
jno
jae
ret
mov
cmps
call
fld
push
xor
push
cmp
mov
or
lock
loopne
ja
fild
adc
sbb
bnd
aas
push
inc
push
aam
paddb
lahf
ins
call
cmc
xchg
sar
mov
or
lock
hlt
xchg
push
sub
adc
add
push
mov
jmp
sub
cmp
jl
dec
sbb
pop
mov
add
lea
and
or
aaa
sbb
shl
das
ds
xor
xchg
ret
jl
xchg
push
push
test
pop
and
mov
jae
sar
(bad)
cmp
fwait
lods
or
cs
(bad)
iret
dec
or
inc
sbb
xchg
push
push
js
jae
push
inc
or
push
add
sbb
into
pop
popf
pop
mov
iret
fld
in
pop
sbb
mov
nop
scas
ret
sbb
mov
jge
test
pop
xor
or
mov
enter
pop
or
inc
rcr
out
cwde
mov
push
xor
icebp
dec
jge
jbe
adc
push
cwde
push
(bad)
jp
or
(bad)
cld
jb
fstp
sbb
mov
adc
ror
jl
clc
mov
dec
cs
std
or
adc
sbb
fadd
test
inc
jmp
sub
cli
mov
mov
push
add
or
fsubr
outs
push
cmp
cmp
fstp
jno
dec
sub
scas
sbb
push
push
in
inc
and
test
adc
push
sahf
mov
jmp
adc
push
mov
pop
add
dec
inc
adc
inc
inc
js
mov
mov
sub
loopne
jne
jbe
add
and
dec
sub
jp
dec
inc
and
push
int3
xlat
dec
mov
pop
adc
sub
dec
mov
sub
enter
leave
push
add
dec
pushf
or
dec
jp
shl
scas
xchg
push
jmp
shl
and
shr
fdiv
and
xor
jge
sar
and
int
sub
outs
or
pop
jg
stc
neg
jmp
jmp
pop
sar
imul
shl
shl
jne
js
and
add
xchg
out
mov
dec
js
mov
enter
ret
aas
adc
stos
fmul
aas
sbb
and
sbb
jns
sbb
sub
mov
push
sbb
stos
enter
(bad)
ds
mov
push
leave
push
or
mov
hlt
aaa
lock
enter
xor
lock
clc
in
jae
scas
dec
sub
xchg
inc
and
mov
inc
and
fnstcw
fsub
test
sub
mov
inc
sbb
cmp
mov
mov
adc
lahf
test
mov
pop
jbe
inc
(bad)
inc
mov
dec
mov
sub
clc
jmp
adc
push
(bad)
cmp
cmp
and
push
xor
sub
fiadd
fadd
xchg
inc
pop
fcom
add
push
fstp
push
dec
push
int3
rcl
retf
and
mov
(bad)
je
scas
dec
push
dec
push
and
mov
in
shl
mov
ficomp
xchg
push
xor
addr16
mov
mov
mov
pop
push
adc
dec
fwait
inc
fst
outs
xor
fnstsw
dec
inc
xchg
xor
fs
sub
add
mov
fs
fmul
and
inc
push
dec
dec
xor
fidivr
jae
push
adc
mov
jne
cmp
xchg
sbb
inc
cmp
xchg
push
add
cmp
fbstp
sbb
das
fimul
xor
jge
js
jp
mov
push
gs
xchg
inc
mov
jbe
inc
lods
rcl
adc
push
enter
dec
sub
ret
mov
lods
pop
inc
xor
mov
xor
pop
or
adc
ret
int
inc
test
or
pop
(bad)
or
pop
mov
out
pop
dec
scas
loopne
or
push
stos
sub
add
push
into
fwait
mov
shl
cmp
jge
sbb
and
jp
push
and
inc
inc
jl
stos
ret
pandn
mov
mov
movs
enter
das
retf
sbb
lahf
xchg
sub
pushf
adc
xor
xor
outs
cmp
push
mov
fs
rol
pop
dec
psubsb
jbe
icebp
lea
xchg
push
push
or
scas
pusha
inc
movs
xor
mov
imul
adc
push
add
jl
or
mov
test
mov
cmp
ret
sbb
or
dec
pushf
jle
adc
inc
dec
cmp
scas
lods
xchg
jl
jae
adc
call
or
ins
fisub
lds
(bad)
clc
mov
push
enter
cmp
mov
popa
sub
stc
inc
sbb
pop
mov
cmp
mov
fisttp
adc
and
push
cmp
push
call
sub
sub
out
fmul
jle
jl
jge
inc
call
mov
icebp
scas
hlt
adc
(bad)
into
sub
push
scas
pop
adc
adc
pop
inc
sti
xor
inc
cmp
dec
fidivr
lock
or
push
lods
xor
dec
shr
lods
and
push
or
aad
ss
popf
and
add
push
cli
and
push
loopne
inc
cmp
pusha
inc
adc
test
cmp
in
loopne
push
mov
cmp
xor
mov
mov
add
cld
test
movs
jle
sub
xor
into
xor
sub
mov
jb
cmp
jp
test
xchg
mov
or
push
jne
retf
and
fwait
mov
or
xor
nop
add
jnp
mov
sbb
mov
adc
dec
(bad)
mov
add
xor
nop
pop
add
ss
inc
outs
sub
add
mov
lock
fs
inc
and
iret
jle
add
pop
scas
lods
mov
cmp
dec
xlat
fcmovb
fcmovu
das
mov
mov
jo
mov
outs
add
leave
add
cdq
ins
and
aas
mov
jmp
jne
mov
mov
inc
dec
sahf
push
sbb
jae
mov
and
mov
loop
fwait
inc
outs
mov
or
push
jmp
sub
mov
xor
gs
sbb
or
push
test
dec
xor
into
adc
add
push
adc
adc
and
int3
call
pushf
or
sbb
ins
add
pop
mov
(bad)
inc
push
jbe
jnp
and
loope
push
xor
and
dec
in
add
(bad)
fwait
and
or
inc
push
bound
rol
or
push
scas
xchg
push
test
or
cmp
hlt
mov
pop
sub
mov
inc
mov
out
push
push
es
push
push
(bad)
dec
sbb
sbb
les
add
and
push
inc
or
pusha
loope
cs
push
inc
xor
or
cli
popa
sbb
jecxz
ja
aad
xor
ds
mov
xchg
data16
ins
lods
pusha
mov
xor
add
add
push
into
shr
mov
jmp
sahf
cmp
jne
and
mov
ds
inc
lahf
call
jmp
mov
aad
sahf
adc
jo
inc
xlat
sub
fmul
ss
movs
mov
add
pop
dec
mov
inc
sub
enter
(bad)
out
pop
rcl
add
mov
daa
pop
xchg
and
or
adc
loope
or
mov
adc
rep
test
xchg
mov
and
dec
popa
xchg
mov
pop
xchg
add
js
hlt
dec
sbb
xor
call
lock
pop
adc
push
xchg
jne
and
push
jmp
cmps
mov
adc
loopne
mov
test
cmp
mov
nop
shr
and
xor
and
adc
pop
cli
(bad)
sub
aaa
pop
call
mov
jbe
aaa
add
mov
xor
mov
js
fst
sti
mov
dec
jbe
adc
div
add
mov
push
je
retf
add
or
add
bound
and
es
jmp
and
or
mov
and
xchg
jbe
int3
pop
jg
lods
ret
add
cmp
mov
mov
pop
inc
cmp
add
add
pop
inc
rcl
jne
jle
rol
mov
mov
or
lods
push
jp
xchg
rol
sub
pushf
je
fldcw
mov
push
mov
or
jmp
ss
or
imul
aam
retf
iret
adc
adc
clc
mov
cwde
push
sub
or
sbb
psubq
js
sub
(bad)
(bad)
ss
in
neg
test
shr
pop
outs
loope
and
adc
jl
dec
mov
xor
dec
arpl
xor
mov
jmp
(bad)
shl
pop
in
and
(bad)
mov
in
sbb
test
push
les
std
cdq
iret
call
ja
sub
mov
and
dec
mov
jg
add
out
mov
lea
mov
pop
or
adc
mov
outs
push
add
and
adc
clc
jo
dec
add
mov
loope
push
ficom
mov
xchg
das
cmp
sub
sub
rcl
pop
push
int3
add
adc
adc
fcomp
cdq
lods
adc
or
pop
std
lea
cmp
mov
push
and
pop
or
cmps
aad
dec
push
pop
pop
sub
cdq
sbb
mov
push
rcr
pop
add
adc
add
popf
adc
inc
push
jmp
xchg
loopne
sub
cmp
inc
push
test
dec
pop
cmp
and
je
outs
jmp
adc
call
adc
xchg
ret
pop
enter
push
or
sar
aaa
xchg
or
inc
fimul
jb
(bad)
xchg
xchg
cmps
push
sbb
mov
and
push
sub
jecxz
jae
fisubr
and
cs
sub
push
mov
sbb
cwde
inc
push
mov
in
add
add
or
arpl
mov
loopne
clc
mov
test
cmp
pop
xor
push
iret
sub
add
ret
bt
scas
fcom
sub
inc
inc
mov
mov
shl
fdiv
xchg
or
xor
movs
retf
dec
cld
sub
sub
test
pop
pop
mov
xor
pop
mov
pushf
(bad)
aam
adc
(bad)
fistp
cdq
sbb
pusha
out
cld
stos
outs
repnz
(bad)
outs
xchg
sbb
test
shl
sub
sar
xor
ret
aad
xor
dec
fwait
sub
stc
push
inc
sbb
pop
cmp
ins
fcomp
dec
loope
dec
inc
loop
xor
push
dec
add
dec
pop
xchg
mov
mov
mov
inc
inc
jmp
cmp
add
jb
sub
pop
and
dec
add
enter
pop
jo
mov
in
push
rol
movs
cmp
pusha
adc
pop
lock
enter
inc
push
xchg
pop
xor
shr
pop
add
pop
adc
cmps
mov
inc
inc
push
cmps
sub
add
mov
xchg
adc
aas
repnz
or
adc
mov
dec
stc
mov
inc
add
push
lock
sub
jge
pop
xor
clc
adc
push
or
in
pop
add
pop
lea
bound
inc
xchg
outs
mov
adc
mov
imul
adc
sahf
out
in
sbb
xor
inc
sub
push
adc
jnp
cmp
rcl
jg
dec
lea
stc
dec
mov
inc
mov
add
or
mov
mov
add
adc
adc
outs
xor
mov
das
sbb
mov
imul
dec
daa
fucomip
bndldx
mov
mov
out
xor
or
int
popa
jg
push
in
ror
cld
int
dec
je
jno
pop
push
sub
dec
dec
inc
dec
js
lock
and
int3
inc
mov
lea
add
(bad)
fsubr
clc
ins
fadd
loop
sbb
sbb
popa
and
in
or
adc
imul
movs
into
push
fldcw
rcl
fmul
arpl
imul
rcl
dec
rcr
inc
mov
sbb
xor
mov
adc
mov
pushf
adc
cmp
adc
cmp
imul
add
dec
pop
mov
push
push
rol
aad
pmaxub
or
ins
jecxz
das
mov
loopne
cmp
xor
push
rcpps
push
xor
jl
pop
mov
adc
pop
xor
je
xor
sbb
call
dec
push
fcomp
sbb
inc
movs
bound
or
cld
add
sbb
aam
jbe
cmp
xor
sbb
scas
test
in
sub
sub
stos
mov
cmp
sub
inc
inc
or
lea
and
sub
cmp
sahf
jmp
mov
inc
push
pop
nop
clc
xor
and
inc
scas
xor
xor
mov
pop
in
or
test
sub
inc
sub
mov
idiv
cmp
cmp
mov
lods
or
mov
std
sub
or
dec
xor
jo
stc
in
ins
and
fidivr
add
pop
add
mov
js
retf
jp
sbb
ds
dec
mov
cmp
mov
mov
xchg
fnstsw
cld
pop
push
adc
sbb
cld
mov
mov
mov
in
mov
scas
xlat
sub
ror
mov
xor
les
addr16
loope
cmp
xlat
adc
(bad)
mov
add
inc
dec
adc
shl
adc
xor
dec
xchg
hlt
jg
fidivr
sub
jo
adc
mov
test
lock
pusha
sub
(bad)
jge
or
int3
adc
xchg
mov
inc
and
mov
imul
out
in
xor
adc
jp
repnz
pop
cli
inc
hlt
sub
(bad)
int
xor
or
loopne
nop
mov
sub
add
sbb
jmp
inc
sub
int
mov
xor
xchg
ret
mov
or
lahf
loopne
pop
or
adc
sub
xor
aam
jge
cmp
iret
into
cmp
je
mov
push
je
sub
inc
rcr
adc
or
add
fisubr
add
adc
rol
push
mov
js
or
sbb
and
mov
cmp
popa
and
and
call
and
mov
add
(bad)
mov
push
mov
xor
cs
popa
sbb
ins
push
loope
lock
rol
fmul
shr
inc
adc
add
lods
sbb
scas
imul
outs
ins
xchg
imul
jle
aam
js
mov
mov
cmps
xor
xor
or
scas
imul
cmps
loope
ret
jb
mov
push
mov
inc
and
adc
xchg
or
adc
test
test
rcl
sub
inc
bound
mov
xor
sub
jge
jbe
ret
into
sbb
and
lahf
test
cmp
(bad)
es
add
mov
mov
add
and
push
mov
xchg
jb
push
inc
and
es
dec
or
std
(bad)
es
inc
sbb
jle
sub
mov
add
jle
(bad)
cmp
jle
jl
mov
pop
pop
adc
(bad)
rcl
pop
cmp
repnz
inc
xchg
pusha
inc
loopne
jmp
mov
hlt
sbb
loope
adc
mov
addr16
push
cwde
sbb
push
and
sub
pop
fcomp
test
fstp
call
lds
adc
add
rol
push
jg
jp
inc
aad
nop
or
adc
aam
cmp
jne
test
sbb
inc
or
adc
push
pop
js
(bad)
adc
js
adc
add
je
xchg
out
push
xor
pop
fsub
sbb
jmp
jbe
or
cmp
mov
sub
retf
cmps
inc
xchg
mov
push
mov
sub
or
cs
push
sbb
mov
call
pop
mov
and
loopne
stos
adc
or
push
cmp
lea
add
push
hlt
pusha
inc
sbb
mov
cmps
mov
dec
inc
xchg
mov
dec
or
cs
or
or
xor
fistp
and
sub
sub
jge
jle
aam
imul
inc
pop
pavgb
retf
retf
jns
jno
xor
push
sub
dec
(bad)
cmp
add
retf
sahf
ins
mov
int
das
jns
xor
push
mov
or
scas
add
sub
out
or
xchg
add
hlt
jle
je
adc
dec
sub
or
jns
sub
mov
dec
xor
stos
adc
xchg
fstp
pop
sbb
pop
push
imul
cmp
add
test
fcomp
or
push
test
ss
and
mul
loopne
mov
pop
mov
dec
fst
dec
pop
cmp
pop
inc
cmp
pop
nop
jbe
jle
shl
fiadd
pop
jmp
add
outs
pop
adc
and
ret
hlt
xor
cmp
adc
inc
push
ins
aas
mov
je
jbe
icebp
ret
inc
aas
add
rcr
rcl
pop
rcr
sbb
rol
dec
or
dec
inc
mov
inc
ror
lods
add
stos
add
push
mov
nop
xchg
or
(bad)
cmp
and
and
movs
adc
sbb
sahf
adc
call
pop
mov
adc
rcl
sub
ds
mov
imul
inc
mov
push
cmp
ret
in
jl
mov
xor
dec
or
push
add
lds
movs
js
hlt
add
pop
inc
in
sub
pop
clc
add
or
mov
add
push
push
adc
inc
xchg
and
xchg
add
cmp
and
adc
rcpps
es
xchg
mov
rol
pusha
lds
adc
js
mov
jnp
adc
and
cdq
or
add
pop
add
pop
or
sahf
pop
stos
add
pusha
pop
scas
push
inc
mov
xor
cli
sbb
cmp
or
rcr
inc
dec
bound
fwait
out
and
add
push
and
add
dec
jo
inc
lock
add
sbb
sar
sahf
mov
test
mov
lods
lahf
add
sbb
cmps
fisub
or
jnp
ins
lods
dec
inc
cmp
cmc
jmp
mov
test
scas
je
push
daa
inc
in
sbb
jo
mov
adc
add
sbb
ds
sbb
pop
mov
pop
les
mov
push
jae
dec
or
test
inc
and
add
data16
pop
add
cmp
cmp
jne
or
stc
stc
mov
pop
or
push
push
jne
pusha
jne
dec
sbb
inc
movsx
adc
sbb
es
mov
adc
enter
xchg
xchg
pop
cs
or
xchg
in
dec
pushf
pop
dec
xor
cmps
mov
mov
cld
scas
out
nop
push
lea
lea
sbb
jmp
ins
ins
lea
stos
add
sbb
add
inc
dec
jnp
xchg
fimul
fiadd
xchg
fst
adc
fcom
or
sub
sahf
test
ficomp
push
lods
xchg
adc
inc
mov
icebp
shl
jp
out
or
adc
js
(bad)
sub
dec
(bad)
xor
sub
shl
push
adc
mov
ins
ds
jg
nop
xchg
push
or
or
pusha
stos
and
aas
nop
pop
push
sahf
sbb
add
push
push
ds
cmp
push
inc
lods
loop
add
add
inc
mov
cmc
inc
pop
cmc
sub
imul
fadd
adc
scas
(bad)
jp
or
or
mov
imul
jge
sub
imul
mov
or
daa
stos
es
jb
add
sub
not
jnp
sbb
sub
push
fld
clc
pop
arpl
aad
add
add
add
dec
imul
mov
pusha
fcom
outs
loopne
fiadd
call
imul
les
inc
lea
xlat
(bad)
mov
mov
or
jnp
cmp
mov
aas
sar
sti
enter
mov
inc
mov
inc
sar
adc
jns
arpl
and
rcr
repnz
cmps
mov
popa
in
shl
aam
outs
mov
mov
(bad)
(bad)
aam
or
fwait
or
test
adc
push
push
sar
or
sar
cmp
jns
push
cmp
scas
out
cmps
out
sbb
inc
cli
add
xor
pop
sbb
add
add
inc
dec
rol
and
inc
sbb
xor
out
lea
lods
mov
fisttp
mov
xchg
dec
cmp
gs
fist
push
cmp
xor
jecxz
sub
inc
dec
xor
mov
sti
inc
add
or
sub
(bad)
std
mov
jmp
mov
sbb
repz
cmp
push
shl
adc
out
and
lods
xor
ficomp
sbb
(bad)
ret
or
jae
dec
add
idiv
fstp
jecxz
jns
inc
or
add
pop
popf
add
adc
fisttp
fs
movs
jbe
xor
test
leave
xor
and
lods
and
and
push
je
movnti
int3
sub
adc
cmp
outs
sbb
movs
pop
add
sub
enter
mov
adc
ret
bound
mov
and
icebp
add
mov
cli
outs
int
add
(bad)
addr16
add
push
xchg
mov
(bad)
(bad)
enter
dec
lea
(bad)
(bad)
cwde
pusha
(bad)
adc
mov
out
cmps
push
das
dec
cmp
(bad)
xchg
shr
es
cs
dec
into
les
rol
sub
shl
daa
mov
dec
push
push
mov
jge
call
inc
sbb
or
dec
repz
push
xor
inc
push
xor
repz
pusha
xor
sub
aam
push
cmps
lods
adc
jo
add
and
or
fiadd
push
test
jno
sub
into
dec
sbb
jb
inc
mov
and
adc
jb
lea
call
add
add
dec
inc
inc
not
mov
shl
loop
xchg
arpl
frstor
adc
fld
repz
mov
cmp
into
fsubr
mov
jo
push
or
cdq
mov
xor
jmp
xor
sti
push
mov
enter
pusha
adc
jns
jg
in
sbb
repz
mov
pop
inc
add
inc
inc
push
dec
or
neg
push
xchg
xor
cmp
sub
xchg
inc
pop
mov
in
(bad)
cmps
xor
ficom
sbb
sahf
ds
sbb
sar
jae
jo
xor
and
sub
sub
rcr
test
in
and
fst
push
and
imul
cs
call
add
sbb
ffreep
xchg
xor
call
lock
icebp
sub
push
or
sbb
int
mov
inc
adc
sar
xor
sub
hlt
sub
ret
imul
add
pop
pusha
call
(bad)
adc
adc
fcmovnb
mov
fcmovb
add
test
aad
xchg
ret
das
adc
sub
sub
out
mov
bound
jmp
ja
or
les
(bad)
mov
scas
sbb
mov
sbb
mov
loop
jge
sbb
loopne
in
cli
xchg
or
mov
and
in
into
ret
fsubr
fldcw
repz
repnz
add
(bad)
pop
xchg
fistp
ja
inc
pop
cs
or
adc
adc
or
hlt
mov
mov
add
daa
and
mov
clc
std
es
or
mov
push
pop
pop
mov
sub
dec
push
mov
mov
mov
cmps
sub
(bad)
xchg
jbe
jo
sub
ds
out
(bad)
cmp
add
mov
out
fs
add
imul
and
xchg
test
fistp
inc
add
daa
xchg
sbb
sbb
mov
cmp
add
aad
(bad)
das
jno
jne
cmp
cld
cld
cld
sbb
or
inc
push
jne
pusha
jne
call
ins
retf
outs
(bad)
ret
sbb
push
and
pusha
fst
cmps
or
fisub
pushf
imul
lock
pop
adc
popf
in
sub
dec
test
out
sbb
xor
fadd
push
sbb
leave
fsub
push
fstp
fst
mov
fsub
mov
ret
push
inc
push
jle
sti
out
(bad)
mov
adc
rcl
inc
inc
and
adc
mov
jo
pusha
or
jb
sbb
in
pop
lock
pop
adc
jnp
adc
iret
pop
push
add
mov
adc
lock
xchg
push
jp
xchg
add
adc
jg
call
adc
inc
mov
lock
push
sub
pop
jo
fist
inc
push
push
pop
pand
in
out
ret
adc
sahf
pop
pusha
fiadd
add
dec
rcr
sbb
add
pop
call
clc
or
fsub
or
ds
jbe
cmp
clc
cvtpi2ps
dec
pop
sub
adc
arpl
cmp
sub
or
or
inc
cld
jae
loope
mov
adc
sbb
ror
mov
xchg
xor
xchg
jmp
fwait
ret
rcl
fwait
push
popa
xor
mov
push
sbb
sbb
in
cmp
or
pop
loope
(bad)
out
aaa
retf
aas
adc
add
xlat
and
ret
xchg
repz
add
sbb
or
fsub
scas
add
mov
mov
dec
push
xor
mov
and
pushf
cmp
and
ret
cmp
mov
pushf
or
mov
cmp
mov
iret
lea
sub
mov
outs
sub
sbb
xor
xadd
mov
aaa
dec
add
pop
mov
or
fmul
test
or
jne
adc
mov
xor
dec
mov
retf
mov
loopne
dec
hlt
test
std
jb
sub
dec
mov
sar
inc
xor
rcl
mov
mov
pop
shl
sbb
mov
push
(bad)
dec
mov
mov
cli
jbe
icebp
or
sub
shl
jp
shl
pusha
(bad)
out
fs
add
dec
scas
inc
lock
ins
loop
xchg
dec
and
and
out
aam
imul
outs
dec
or
push
xchg
retf
add
mov
jmp
jbe
(bad)
jmp
cmc
or
mov
jmp
imul
imul
sbb
in
push
int
rol
cwde
mov
test
xor
sub
int
retf
lock
jmp
lods
mov
jo
inc
popa
sub
mov
call
out
mov
(bad)
mov
add
popf
test
addr16
add
dec
iret
ret
dec
call
push
jg
or
mov
xchg
mov
fdivr
or
sub
hlt
rol
repz
sar
sub
cmp
cmp
ss
sbb
sbb
shl
cmp
into
shl
and
mov
add
aas
fcmovnb
mov
nop
ins
rcl
shl
pusha
cmp
cmp
mov
inc
shl
sub
loopne
sbb
push
test
push
or
mov
cmp
push
xor
mov
xor
sub
test
das
popa
or
ficom
sbb
pop
leave
sbb
sbb
mov
fstp
push
push
retf
and
cmp
mov
jbe
retf
in
dec
xor
adc
loopne
xchg
dec
rcl
push
push
data16
adc
and
sbb
cld
mov
push
clc
push
jb
outs
cmp
adc
data16
or
mov
pusha
das
sub
std
inc
xchg
cmp
pop
adc
lods
popf
inc
pop
dec
add
pop
or
test
pop
repnz
pop
mov
pop
call
mov
push
dec
inc
lods
or
push
stos
(bad)
sub
mov
(bad)
dec
mov
jge
(bad)
pop
mov
cmp
movs
sub
xchg
cmps
adc
nop
(bad)
imul
push
xchg
jg
jne
data16
test
sbb
or
mov
jmp
inc
add
add
shr
nop
or
mov
adc
pushf
push
nop
loop
jl
dec
mov
push
int3
pop
lfs
cmp
jb
jmp
(bad)
jmp
jmp
fcmovnbe
sahf
and
or
push
mov
imul
aaa
cmp
(bad)
mov
les
lea
(bad)
add
or
cmp
xor
add
mov
cmp
pop
in
jge
fcomp
jns
push
xchg
adc
sub
add
gs
sbb
aas
adc
pop
jmp
mov
and
mov
sub
ror
add
push
xor
sbb
xchg
push
into
(bad)
cmp
cli
sbb
outs
pop
xor
xor
adc
inc
add
inc
lods
mov
or
scas
xchg
cli
adc
adc
add
loop
jne
inc
add
pop
xchg
mov
mov
adc
push
ss
cmp
pop
sti
dec
lock
js
lock
or
cli
jae
push
adc
test
mov
gs
add
fistp
mov
adc
dec
mov
cld
mov
mov
lods
sub
cmp
cmp
cmp
jp
and
adc
adc
fsubr
(bad)
aad
pop
sub
mov
mov
jmp
and
sub
mov
pop
jne
mov
(bad)
dec
rcr
dec
add
inc
retf
cmc
inc
fld
pushf
pop
mov
sti
ss
xor
loopne
dec
cli
(bad)
loopne
adc
add
outs
pop
cmp
pop
xor
dec
push
adc
adc
enter
sahf
test
int3
in
dec
fstp
or
aaa
imul
test
int
pop
loopne
fs
adc
fld
mov
or
shl
push
rol
inc
and
dec
sbb
xchg
pop
jmp
xor
pushf
adc
adc
mov
push
push
mov
sti
add
mov
in
xor
add
in
cdq
xor
and
lods
jecxz
mov
dec
xor
fadd
iret
es
(bad)
jmp
xor
inc
xor
popa
push
test
shl
movs
dec
push
fadd
loopne
and
jb
jecxz
and
adc
mov
fsubp
js
inc
xchg
rol
add
add
jno
mov
ret
inc
repz
jp
mov
repz
pop
mov
mov
mov
pop
push
push
xchg
and
clc
sbb
loopne
fdiv
xor
and
sbb
and
pop
xor
push
inc
shl
test
pop
jmp
pop
dec
mov
mov
sbb
sub
inc
mov
jo
sub
pushf
hlt
gs
push
cmp
clc
adc
cmp
cmp
add
mov
mov
jb
push
sub
cmp
xor
add
(bad)
jg
ins
mov
stc
fild
sti
cmp
out
push
jns
test
ja
cwde
xor
jmp
add
repz
add
lock
cmp
js
sbb
xlat
adc
push
push
or
or
xchg
adc
sub
push
and
lods
movs
ds
pop
xor
test
inc
dec
outs
xor
pusha
pusha
adc
enter
inc
sub
int
xor
aaa
sub
add
(bad)
cmp
les
xchg
jmp
push
pop
jg
mov
mov
fadd
or
fsub
sbb
push
xchg
add
cld
adc
and
adc
pusha
cmp
cmp
push
inc
or
add
fist
inc
xor
mov
pop
ror
or
ins
xchg
cmp
enter
xchg
(bad)
mov
adc
push
adc
and
mov
or
sar
sbb
jbe
mov
push
ja
jns
or
add
push
stos
and
sbb
pusha
shr
hlt
dec
ds
dec
int3
ins
and
dec
gs
sub
dec
xor
enter
and
or
inc
rol
sbb
add
add
jo
inc
adc
cmp
jne
in
add
or
sub
cs
sbb
push
and
mov
ror
mov
cmps
sahf
sub
cmp
aad
jae
ins
dec
bound
shr
adc
cmps
hlt
mov
jg
call
sbb
jmp
(bad)
imul
dec
cmp
or
inc
cmp
mov
fwait
add
push
lods
cmp
or
je
in
(bad)
and
sub
cmps
inc
loopne
jle
mov
mov
add
mov
add
ror
push
or
je
and
cmp
mov
adc
jge
pusha
neg
frstpm(287
cmp
clc
add
movs
jl
or
adc
jg
ds
rcr
push
je
push
or
xchg
aam
dec
mov
rol
stc
je
imul
inc
lahf
push
cmp
mov
into
sub
aam
dec
sub
fnsave
sahf
sbb
sbb
sbb
sub
sub
mov
pop
ins
mov
push
push
je
pop
inc
int3
gs
push
movs
or
or
xchg
rcr
lods
leave
adc
mov
add
pop
and
mov
pop
pop
int
or
adc
mov
jp
xor
dec
xor
cwde
cmp
cmp
mov
je
push
and
cmp
inc
je
lock
je
mov
and
mov
cs
jmp
inc
div
retf
dec
enter
test
jnp
cs
mov
out
fdiv
dec
shl
inc
xchg
cmp
lods
push
cmps
add
clc
data16
movs
lock
add
jmp
mov
and
push
jns
nop
push
je
push
pop
shl
rcl
aad
xor
ins
or
inc
add
fstp
sub
loopne
inc
add
inc
xchg
or
and
cli
adc
xchg
or
xchg
mov
(bad)
or
sub
gs
leave
fild
add
ret
and
push
idiv
dec
push
enter
fwait
rol
aad
push
dec
cmp
sbb
jne
adc
dec
outs
jb
sub
adc
jae
pop
xor
out
mov
and
gs
mov
je
iret
ret
add
ins
retf
js
push
sub
adc
cli
cmp
mov
loopne
mov
cmp
push
stos
fadd
add
mov
jo
outs
push
dec
(bad)
retf
lods
imul
jns
xchg
add
rcl
add
sbb
pop
cmp
xor
and
xor
fisubr
jne
daa
movs
pop
xchg
jb
jmp
pushf
xchg
mov
adc
fcmovbe
or
add
xor
fnstsw
std
nop
pusha
add
jns
dec
repz
ror
out
cmp
mov
and
pop
push
jecxz
jo
jnp
in
push
jns
lea
ret
test
lock
retf
add
xor
adc
adc
jp
xor
adc
jbe
sahf
pop
sbb
inc
push
sub
push
inc
jmp
inc
sbb
lock
sub
out
lock
call
mul
sbb
gs
popa
add
cmp
jg
fcomp
jne
cmp
jl
inc
xchg
adc
sub
call
push
(bad)
xchg
dec
fadd
push
xchg
adc
and
adc
push
sbb
push
add
mov
clc
dec
pop
inc
stos
sbb
enter
cmp
aas
and
inc
adc
mov
add
loope
jmp
pop
push
rcl
inc
sub
or
mov
ss
push
scas
mov
adc
lods
push
xchg
loopne
push
inc
shl
or
pop
mov
and
shr
push
push
mov
xor
or
inc
cmp
(bad)
hlt
aas
int3
cmp
inc
sbb
enter
xchg
pushf
jle
mov
nop
adc
ins
mov
inc
cmps
jl
pop
push
inc
mov
test
inc
pop
arpl
rcr
push
je
ja
xor
dec
leave
fld
in
and
and
push
inc
retf
dec
push
sbb
pop
sbb
outs
rcl
mov
add
sbb
push
not
or
mov
sub
movzx
xor
and
stos
ret
xchg
mov
mov
inc
fist
push
in
sbb
xor
clc
add
xchg
mov
sbb
and
pop
mov
or
outs
xor
or
sbb
jl
jg
inc
test
push
inc
jl
push
nop
(bad)
pop
add
or
adc
ror
call
dec
loope
test
jmp
cmp
mov
js
mov
stc
sbb
xor
xchg
mov
sbb
mov
adc
and
call
iret
add
add
adc
add
jnp
sub
xor
dec
imul
call
mov
ret
adc
adc
and
cmp
sti
inc
sbb
je
push
mov
outs
and
mov
inc
adc
or
sti
adc
ror
(bad)
jbe
test
fcmove
cmp
fcomp
xor
and
lods
jle
sar
div
retf
test
call
lock
inc
inc
not
inc
xor
mov
and
push
push
inc
or
ror
sub
adc
(bad)
add
pop
push
leave
jne
cmp
jg
mov
or
push
and
dec
add
js
jb
jp
mov
adc
or
mov
fimul
jno
call
and
push
and
jge
pop
cmp
xchg
jbe
test
add
cmp
jne
call
dec
cmp
mov
mov
xor
data16
fadd
sbb
add
jl
mov
and
rep
or
push
repz
loopne
inc
ins
pop
xor
push
mov
ins
imul
ins
sub
scas
sbb
cmps
sbb
mov
ds
pop
cmp
push
and
ja
push
or
popf
adc
or
add
and
adc
cwde
(bad)
push
and
pop
jp
push
fsub
retf
pop
push
and
adc
add
push
in
add
jbe
retf
dec
dec
test
scas
loope
adc
aaa
ins
sbb
or
mov
sub
jno
mov
pop
imul
sbb
jno
sub
pop
cmp
pop
cmc
adc
(bad)
or
mov
push
aaa
mov
or
push
jno
ins
je
cmp
out
xor
rol
cmp
retf
out
add
es
sub
cmp
sub
inc
xor
popa
rcl
push
lods
fidivr
dec
pop
and
push
sbb
pop
std
mov
jb
and
inc
inc
push
ins
cmp
adc
rcr
dec
(bad)
and
cmp
shl
fldcw
stos
inc
xchg
xchg
ins
xlat
jmp
fbstp
and
aas
popa
sbb
mov
jb
add
fimul
dec
push
ins
mov
adc
lods
jl
hlt
jo
pop
repnz
lea
loopne
push
sar
clc
aam
pop
mov
ja
je
in
out
mov
mov
aad
dec
enter
in
fwait
test
(bad)
cmp
fs
or
sbb
pop
or
lods
inc
clc
pop
aam
mov
jl
fiadd
shr
jecxz
dec
sub
cmps
mov
test
push
dec
push
test
push
cmps
pop
fisttp
repnz
sub
cs
arpl
mov
shr
mov
fadd
sbb
cdq
push
mov
addr16
xchg
jno
pop
or
adc
pop
adc
into
ror
cmc
bound
cmp
test
pop
and
or
pop
jmp
add
fnstcw
imul
push
retf
or
and
ins
and
rol
dec
std
pop
jno
aad
add
inc
clc
mov
cli
sar
aaa
nop
dec
and
mov
cli
sbb
dec
loop
ror
in
enter
jae
dec
mov
cli
ins
es
sbb
inc
mov
add
cdq
shl
lods
in
lahf
sub
pop
adc
cmp
jb
fild
pop
or
call
and
fsub
mov
push
lods
scas
hlt
adc
into
add
push
js
mov
sub
mov
sti
jnp
mov
inc
jb
ds
xor
push
lea
dec
cmp
pop
(bad)
adc
ja
xor
shl
(bad)
jns
inc
xor
push
popw
pop
mov
add
sub
and
lods
movs
out
sbb
inc
sbb
mov
mov
xor
mov
adc
or
push
or
es
sub
pop
inc
or
xchg
mov
data16
or
call
pop
and
movs
cmp
push
cmp
dec
add
and
xchg
div
aas
lods
adc
(bad)
bound
xor
dec
pop
xor
adc
and
stos
mov
out
sbb
cmp
sub
and
loop
push
sub
out
data16
sbb
jp
push
xchg
push
mov
out
push
sub
fs
test
pop
pop
inc
pop
out
xor
xchg
cwde
es
inc
mov
cwde
inc
xchg
push
fisubr
inc
push
fisttp
inc
push
inc
nop
dec
add
fnsave
imul
inc
push
pop
mov
adc
adc
inc
ds
and
and
js
inc
ds
into
jmp
and
idiv
pop
push
adc
es
or
adc
xchg
pop
mov
push
bound
hlt
pop
dec
push
enter
ds
shl
pop
dec
mov
icebp
test
inc
out
add
daa
push
add
loope
cs
(bad)
nop
xchg
fcmovbe
xor
rcl
inc
sbb
jbe
sub
add
int3
fwait
jne
mov
stos
sub
out
xchg
fwait
mov
or
push
pushf
(bad)
ss
js
aam
dec
sbb
dec
and
outs
or
stos
xor
icebp
mov
retf
push
mov
out
and
js
and
dec
bound
sub
sub
inc
push
(bad)
xor
dec
cmp
loop
mov
idiv
inc
mov
nop
mov
push
adc
ret
add
push
push
mov
adc
mov
inc
aad
add
mov
pop
cmc
outs
push
pop
ret
or
test
push
push
jo
pop
(bad)
pop
pop
sub
ss
or
lahf
push
je
push
lock
or
jae
shl
xchg
sahf
xchg
mov
cmp
clc
jbe
sub
add
or
adc
dec
sub
pop
jo
mov
and
ja
cmp
jb
mov
mov
and
cmc
dec
or
add
cmp
mov
ins
sbb
cmp
sbb
leave
mov
cmp
or
mov
add
sbb
xor
xor
enter
sub
push
jo
or
or
adc
ror
xchg
outs
mov
aad
and
inc
aaa
jmp
jmp
call
dec
rcl
inc
(bad)
add
or
add
add
call
push
dec
ret
pop
push
rcr
mov
dec
leave
sbb
dec
mov
pop
sub
and
add
shr
adc
leave
ret
dec
cmp
push
sub
pushf
outs
pop
je
js
inc
xchg
pop
(bad)
enter
cmp
add
fnstcw
ja
jo
inc
add
xlat
sub
push
push
iret
movs
add
xor
retf
cmp
jns
push
movzx
ins
mov
mov
aaa
stos
sahf
cmp
sub
sbb
lock
repnz
push
icebp
sahf
sbb
inc
push
sbb
push
ins
dec
mov
or
inc
in
dec
inc
xchg
dec
ror
lods
and
sub
push
xor
push
sbb
push
xor
jge
inc
les
jne
cmps
cmp
and
pop
fstp
(bad)
ror
push
push
rcl
fadd
ret
test
add
push
mov
xor
inc
jb
xlat
inc
mov
mov
outs
pusha
pop
lock
inc
add
mov
adc
sbb
rol
inc
push
xchg
mov
lock
shl
dec
push
or
pop
and
add
push
rcl
add
jno
dec
or
xor
mov
je
or
movs
xchg
or
sbb
xchg
mov
and
or
daa
mov
jb
(bad)
sbb
sti
adc
and
cld
xchg
and
adc
or
shr
mov
xor
sbb
loope
cmps
cmp
loope
into
and
add
cmps
or
inc
loopne
ds
and
push
push
(bad)
(bad)
cli
push
push
(bad)
sub
push
pop
inc
xor
pop
add
mov
imul
mov
daa
inc
xor
lods
xor
lods
aam
cmovnp
cmc
cld
sub
int
push
cmps
push
sar
mov
rol
jo
push
sub
mov
push
adc
and
out
add
and
popa
fistp
xor
lar
or
mov
inc
aad
(bad)
dec
xor
xor
push
pop
adc
call
sub
dec
add
pop
adc
xchg
push
adc
gs
sub
jae
mov
add
pop
push
mov
fisub
test
push
dec
jge
pop
pop
mov
or
or
inc
bound
icebp
pop
ins
pop
jb
dec
repnz
push
add
loopne
ins
cmp
(bad)
sub
xor
ins
loope
sti
add
out
sub
jg
xchg
outs
mov
jno
(bad)
test
mov
shr
int
push
gs
push
sbb
push
lock
dec
retf
mov
(bad)
sub
mov
xor
mov
xor
jmp
pop
aaa
jo
inc
and
lods
cli
mov
sub
sub
ror
jo
jl
dec
ret
jb
cmp
fwait
cld
into
not
(bad)
retf
rol
out
jne
sar
pop
rol
sbb
mov
add
mov
push
push
xor
push
mov
adc
inc
jmp
sub
and
or
ins
sbb
movs
add
mov
sub
rcr
jno
dec
adc
mov
dec
sub
or
mov
sub
(bad)
loop
inc
outs
popa
mov
dec
hlt
mov
fst
jne
adc
sbb
lock
rcr
repnz
pop
jmp
or
int3
cmc
pop
push
fsub
xchg
or
mov
xchg
xor
lock
cmp
push
mov
rol
sbb
sbb
popf
in
push
sub
sub
jo
loop
mov
push
pop
das
int3
inc
sbb
test
pop
not
push
jae
or
push
pop
sub
ds
cmp
add
out
je
cli
push
ror
mov
add
jp
sbb
imul
cmp
mov
push
sbb
lea
inc
adc
mov
dec
xchg
mov
arpl
inc
inc
pop
dec
jp
add
sbb
adc
sbb
push
sbb
push
dec
test
stos
je
cmps
shl
dec
add
rol
jne
jp
leave
jo
adc
int3
pop
inc
pusha
hlt
popa
push
push
lods
sbb
pusha
adc
cld
cmp
into
push
mov
mov
loopne
jb
xchg
mov
xchg
mov
pushf
dec
mov
mov
dec
inc
outs
inc
jb
sbb
lea
inc
adc
mov
pusha
or
xor
xchg
xchg
ds
sbb
pushf
add
mov
add
cmp
rol
ja
cmp
jae
in
mov
lea
stc
shl
xchg
push
fs
rcl
inc
ins
push
sbb
fsub
xor
adc
add
es
add
xor
push
retf
cmp
push
jp
out
sbb
div
mov
cmp
sub
xchg
dec
repnz
cmp
mov
retf
push
sbb
cmp
jae
cmp
add
adc
add
mov
add
iret
add
sbb
and
and
pop
outs
sbb
ror
pop
mov
ret
mov
add
mov
dec
sbb
imul
ret
pop
cmp
cld
sub
add
cmp
sub
loope
jge
jne
xor
or
add
xlat
jne
inc
mov
push
test
lea
sub
or
mov
sbb
rol
mov
out
cmovo
int3
and
lods
shl
sub
enter
adc
test
(bad)
ins
push
pushf
adc
xchg
pushf
push
inc
jmp
mov
ds
js
mov
es
push
sbb
mov
push
loope
mov
jo
aaa
rcl
daa
js
loopne
push
ins
or
fisttp
xchg
mov
add
hlt
pop
lods
sbb
inc
mov
add
add
mov
add
jae
mov
adc
retf
xchg
pop
dec
pop
retf
dec
xchg
mov
cmp
push
fsub
movs
jge
popa
dec
test
test
iret
mov
mov
in
push
push
ja
sbb
inc
push
xchg
ficomp
cmp
jecxz
or
popf
dec
ret
outs
inc
jl
xlat
push
retf
dec
add
popf
dec
inc
fsubr
and
cs
or
shl
fadd
outs
test
nop
out
mov
inc
je
test
int3
adc
fs
sbb
addr16
pop
xchg
mov
ror
mov
adc
imul
or
or
add
lea
or
mov
fdivr
js
dec
add
pop
sub
add
mov
call
test
adc
add
mov
stos
add
mov
adc
xor
xchg
(bad)
push
addr16
push
cmp
xchg
(bad)
dec
test
clc
les
pop
xor
dec
scas
push
jo
mov
bound
jmp
dec
test
loope
or
into
sbb
retf
cli
outs
in
push
adc
jl
push
shl
imul
or
in
dec
jge
pop
shl
(bad)
xor
dec
and
mov
adc
mov
sub
stos
and
test
cmp
push
dec
push
iret
ins
and
ja
jmp
sub
push
push
mov
stc
adc
pop
cmp
je
jl
or
loopne
or
aam
adc
sub
dec
ins
xor
movs
rol
sub
xor
(bad)
push
lea
push
dec
aad
lods
jmp
movs
pop
sbb
push
xchg
test
lds
adc
adc
inc
jns
xchg
nop
test
in
sbb
fwait
int
rol
scas
test
stos
retf
mov
sahf
div
push
lods
(bad)
(bad)
cmp
(bad)
jge
pop
xchg
push
and
adc
pusha
rcl
xlat
je
inc
or
or
push
push
int
mov
iret
(bad)
mov
xor
or
outs
pop
add
das
(bad)
rcr
sbb
push
cmp
std
dec
cmp
add
inc
ror
call
mov
ret
and
mov
inc
push
stc
adc
repz
inc
push
sbb
test
stc
cli
sti
sbb
cld
std
(bad)
gs
push
push
inc
dec
enter
test
sub
adc
adc
and
es
ins
cwde
mov
mov
adc
cli
ja
mov
pop
nop
popa
push
les
rcr
push
mov
(bad)
push
sbb
out
adc
rol
lea
cmps
repnz
mov
je
sub
pop
fisub
sbb
call
cmp
add
inc
dec
adc
sbb
mov
mov
gs
inc
lods
or
movs
and
or
sahf
and
mov
fist
and
xor
test
dec
mov
mov
adc
mov
sahf
push
dec
pop
pop
arpl
sbb
jle
adc
ret
out
push
jno
fnstsw
or
mov
push
sti
mov
mov
inc
mov
sbb
fdiv
sub
aam
into
pop
shr
fist
mov
pop
pop
cmp
push
call
mov
pop
in
dec
sbb
movs
mov
sub
add
imul
mov
jp
ret
pop
or
ror
pop
dec
mov
ja
shl
das
mov
mov
mov
movs
dec
shl
xchg
add
lods
cmp
out
mov
fs
xchg
xchg
sub
enter
jle
add
mov
mov
xor
cmp
pop
xchg
iret
xchg
mov
jle
push
mov
fs
iret
lea
and
push
inc
inc
adc
lock
or
push
mov
jnp
sbb
sub
cld
ret
xor
cld
cli
or
lea
add
push
jl
sbb
and
dec
mov
sub
add
push
add
inc
adc
jl
int3
and
push
cmp
mov
aad
xchg
aad
pushf
lea
jne
push
or
pushf
ds
in
or
clc
ss
or
ins
and
jg
cmp
ja
(bad)
dec
add
ds
cmp
ja
std
je
mov
push
push
stos
or
outs
jmp
cli
or
pop
inc
nop
lea
jle
pop
jle
add
mov
jno
adc
mov
jp
hlt
ds
in
or
arpl
mov
repz
fld
stos
or
cmp
sub
push
cmp
pop
test
push
add
mov
neg
dec
jae
mov
push
xor
mov
add
adc
xor
xchg
sub
imul
pop
aad
dec
pop
inc
push
je
cmovno
clc
dec
or
int3
lea
add
push
je
ds
movs
cmp
je
mov
xor
sub
or
sbb
or
loope
ret
dec
cmp
adc
xor
retf
or
dec
and
test
retf
mov
jmp
sbb
xor
jp
out
ins
pop
mov
(bad)
sti
enter
imul
icebp
scas
jge
cld
add
adc
inc
xor
xchg
mov
lods
dec
push
jo
pop
jbe
fs
popa
clc
ret
add
ret
js
cmpxchg
add
sub
add
ins
jl
js
adc
push
inc
stos
nop
repnz
test
cmp
fxch
out
arpl
mov
pop
xor
mov
mov
sbb
into
xor
cwde
dec
out
add
ja
and
dec
mov
or
sub
icebp
add
jge
mov
ja
mov
or
and
pusha
inc
(bad)
js
inc
push
mov
inc
outs
and
scas
add
lahf
add
xor
cmps
adc
cld
cmp
xor
or
and
push
pop
pop
dec
dec
pop
mov
xor
stos
mov
lock
push
dec
lods
in
ja
dec
arpl
pop
jns
and
mov
mov
and
xor
popf
dec
adc
or
(bad)
xor
rcr
mov
repz
mov
mov
sbb
mov
adc
adc
mov
shl
mov
in
pop
scas
mov
jne
sub
jbe
ficom
mov
nop
arpl
les
mov
retf
jmp
sub
cdq
pop
nop
mov
xchg
mov
sbb
sub
cmps
and
push
mul
mov
and
test
or
and
xchg
ret
lea
mov
call
enter
mov
sbb
mov
jnp
nop
test
adc
mov
sbb
dec
jge
cmc
test
push
inc
push
dec
dec
shl
jmp
lds
adc
and
sbb
xchg
shl
inc
adc
cmp
push
add
cmp
cmp
and
jnp
add
lods
inc
je
cmc
jnp
aam
fcom
(bad)
(bad)
mov
pop
lock
xor
xor
movs
dec
xor
add
xchg
std
jmp
or
mov
test
aad
jne
fimul
cmp
es
daa
sbb
add
clc
inc
dec
xchg
push
sub
pop
movs
jne
cmp
mov
cli
aaa
inc
pop
movzx
xor
inc
pusha
cmp
sub
popa
adc
mov
cmp
(bad)
mov
mov
call
push
lds
adc
aaa
mov
lods
out
scas
and
jne
ror
daa
pop
sbb
inc
or
jnp
pop
cmps
es
jo
push
mov
adc
adc
push
adc
(bad)
mov
(bad)
test
ret
jl
inc
imul
dec
(bad)
leave
inc
jne
adc
nop
dec
or
mov
inc
push
pop
sbb
push
mov
sbb
aas
shr
adc
adc
lahf
ss
enter
add
dec
xchg
cmp
fsub
daa
push
cmp
lea
in
es
sub
mov
mov
nop
add
bound
xchg
xchg
jge
push
mov
jo
inc
sub
push
cmp
adc
(bad)
sbb
xor
mov
inc
fisttp
add
test
mov
aam
lahf
clc
or
aaa
and
sbb
aad
dec
xchg
dec
and
mov
shl
jge
add
cmc
nop
cld
pop
cmp
or
loopne
aaa
stos
daa
push
xor
mov
mov
pop
adc
adc
inc
or
jmp
scas
push
push
xor
test
mov
and
mov
jecxz
daa
dec
jle
add
add
push
bound
or
mov
adc
inc
in
out
mov
inc
sbb
or
and
mov
or
and
mov
and
inc
mov
les
add
out
add
(bad)
les
and
nop
cmp
xor
mov
add
pop
or
inc
popf
movs
xchg
jge
test
adc
jns
and
rol
xchg
test
push
add
nop
jns
cmps
call
cmp
scas
cmps
cmp
adc
(bad)
mov
pop
add
(bad)
mov
addr16
dec
test
imul
inc
cmp
push
ins
inc
cmp
inc
jecxz
pushf
outs
xchg
pop
cmp
out
push
pop
add
test
xchg
cmp
jge
stos
sub
(bad)
mov
mov
clc
(bad)
cmp
jle
sete
push
cli
dec
mov
add
mov
pop
js
pop
mov
in
iret
adc
push
popa
adc
jl
pop
pop
inc
out
add
aaa
dec
xor
dec
or
and
shl
and
push
test
inc
mov
pop
adc
inc
or
xor
mov
push
or
push
jle
push
std
out
push
sub
(bad)
(bad)
repnz
adc
dec
mov
imul
pusha
and
cmp
mov
cmp
repz
popa
sbb
sub
mov
and
jle
cmc
jno
sub
idiv
xlat
arpl
cmc
add
sbb
xchg
sub
push
rcr
push
(bad)
fcmovb
sbb
aam
jl
dec
scas
mov
lods
jae
pushf
loop
xlat
sbb
adc
loopne
xchg
shl
mov
nop
adc
mov
pushf
adc
and
ins
add
push
and
icebp
and
add
adc
mov
add
mov
je
test
lods
mov
push
adc
imul
nop
mov
loope
nop
addr16
out
in
dec
push
xchg
(bad)
lock
xor
xor
gs
sub
push
(bad)
or
mov
add
add
popf
push
add
mov
out
bound
mov
cmp
faddp
cwde
dec
pop
mov
mov
rcl
aad
sbb
jmp
sub
enter
cmps
pop
pusha
jno
or
jae
xchg
jmp
and
dec
jae
fsubr
xor
xor
aas
add
or
adc
lds
into
push
jae
arpl
fdivp
pop
stos
add
ret
xchg
and
xor
adc
sub
icebp
enter
or
inc
(bad)
cmp
and
sbb
add
sub
lock
mov
(bad)
ds
push
xchg
xchg
bswap
sub
xchg
ficomp
iret
inc
mov
adc
inc
cmp
test
stc
repnz
pop
mov
sub
push
sub
and
jl
push
sub
fwait
scas
cdq
dec
xchg
jecxz
retf
loopne
push
dec
jo
nop
push
pop
jmp
cdq
and
fiadd
push
push
adc
sbb
push
xor
lea
and
shl
mov
inc
cwde
and
ds
pop
js
(bad)
jno
cmp
(bad)
mov
imul
sub
jmp
jmp
std
test
jae
call
and
mov
fld
setbe
shr
nop
clc
add
add
js
les
out
or
shr
shl
outs
inc
bound
cs
add
pusha
push
adc
mov
pop
jo
add
mov
sub
mov
mov
dec
inc
inc
push
arpl
in
ins
jmp
sub
aas
lds
aaa
cli
or
xchg
scas
xor
adc
retf
push
or
mov
mov
add
aas
int3
mov
or
call
add
or
add
call
mov
not
mov
fcmove
not
cmp
mov
pushf
imul
or
sub
dec
pop
pop
cdq
xor
popf
rcr
cmp
inc
dec
lods
sbb
sbb
loope
lods
dec
sbb
inc
je
push
js
mov
imul
fnstenv
or
adc
jb
std
sbb
pop
and
nop
push
inc
and
and
xor
loop
loop
ror
pushf
xchg
pop
les
dec
xlat
js
add
cwde
dec
mov
xchg
mov
(bad)
inc
nop
and
clc
inc
jge
pushf
add
test
xchg
xchg
mov
sub
les
xchg
cld
cmp
or
mov
xchg
or
sbb
sbb
inc
sub
pop
adc
mov
xor
xor
cmp
add
call
inc
and
aas
jge
inc
or
je
dec
xlat
mov
inc
add
xor
clc
mov
in
imul
pop
mov
jle
fsub
pop
adc
fwait
sub
test
scas
jl
data16
push
(bad)
adc
add
enter
test
inc
outs
sub
and
sbb
in
mov
dec
shr
pushf
fisubr
ret
and
sub
sub
jge
stos
push
das
push
cmp
dec
adc
mov
pop
sub
xchg
test
and
inc
jne
jne
fdivr
or
nop
lea
xchg
out
push
pop
and
or
mov
fadd
mov
add
dec
int
adc
adc
add
pop
add
and
sub
pusha
xor
push
in
push
adc
pop
leave
andnps
add
pusha
pop
add
mov
pushf
xor
retf
(bad)
sbb
and
mov
jl
lahf
sbb
call
adc
jecxz
lds
jno
leave
dec
or
imul
push
and
add
cmp
sahf
sbb
inc
or
sub
arpl
stos
push
out
xlat
mov
and
sbb
mov
cmp
push
mov
adc
sbb
adc
mov
fwait
inc
xchg
movs
fs
xchg
mov
fwait
sbb
je
jo
jmp
inc
push
sar
cmp
cli
add
cs
add
cwde
add
xor
mov
rol
mov
pop
pop
inc
sbb
js
cs
sub
xor
je
jmp
cmps
or
add
and
sar
cmps
or
fwait
sub
push
loopne
pop
push
dec
int
pop
fld
push
call
adc
push
jne
mov
pushf
ja
jmp
inc
dec
sub
add
jmp
(bad)
ror
ds
int
movs
rol
pop
or
test
cmp
xor
cdq
bound
movs
repnz
(bad)
ins
mov
and
jecxz
inc
add
sbb
cmp
cmp
push
shl
aam
or
sahf
pop
xor
loope
add
or
push
inc
fsubr
movs
shr
inc
shl
fsubr
pop
jne
test
cmp
or
xchg
push
fisttp
add
lods
cmp
lahf
enter
jb
std
xor
pop
sub
push
sub
mov
std
sbb
dec
add
cwde
cmp
xor
out
sub
dec
in
lods
hlt
popa
push
mov
add
and
pop
ins
stos
repz
push
pop
pop
iret
repz
pusha
fs
mov
cmp
jl
fs
push
or
mov
(bad)
xchg
adc
add
inc
push
and
add
div
cmp
pop
cli
sub
mov
mov
mov
aaa
dec
pushf
das
cmp
push
sub
add
pop
pcmpeqd
xor
or
cmps
call
pop
std
fisttp
mov
cmp
jne
dec
sub
jo
mov
jmp
dec
push
jmp
jnp
mov
jae
lea
xor
cmps
ret
add
and
nop
shl
fwait
mov
pop
or
dec
push
sub
mov
inc
jmp
mov
call
sbb
je
mov
out
xchg
jl
sbb
xchg
retf
das
push
retf
jne
aaa
fidivr
hlt
xor
adc
and
cdq
xor
ficomp
ficomp
or
int3
inc
mov
inc
push
xchg
(bad)
fldenv
cmp
jb
or
test
mov
fld
add
shr
xchg
(bad)
and
inc
or
sbb
mov
mov
(bad)
cdq
add
inc
and
mov
mov
dec
test
loopne
and
inc
sti
push
fisub
ret
add
rol
shl
push
xchg
mov
std
add
inc
add
(bad)
cmps
xchg
dec
cmp
push
aad
enter
lea
and
ret
add
cld
sbb
adc
mov
rol
sub
and
in
es
or
inc
jecxz
fadd
fiadd
shl
add
and
pop
aam
loopne
or
push
pop
mov
inc
dec
loopne
pop
adc
xor
push
inc
mov
sub
xchg
push
add
xor
push
push
stos
mov
jmp
ins
sub
sar
and
jo
dec
or
(bad)
fmul
or
stos
sar
mov
sub
ror
and
ins
mov
jp
push
jbe
ret
mov
pop
cli
int
cmp
jae
cdq
sbb
and
add
nop
cmp
jle
xor
and
inc
and
dec
push
test
mov
mov
mov
xor
inc
mov
add
and
jo
adc
adc
lahf
inc
loop
or
rcl
mov
lea
inc
push
jo
(bad)
jb
test
popf
mov
push
jne
loopne
push
retf
and
mov
lea
lahf
dec
and
mov
neg
dec
sub
push
mov
sbb
loop
in
inc
inc
dec
adc
xchg
mov
icebp
add
xchg
mov
mov
push
or
test
popa
retf
jl
pusha
dec
cmps
rcl
mov
fistp
push
mov
add
push
push
rol
cmp
or
or
pop
pop
xor
cli
popf
or
push
push
push
jo
jl
cmp
sbb
adc
or
pminsw
lea
cdq
sub
not
nop
cwde
pushf
inc
and
push
add
shr
jne
dec
push
mov
std
aad
pop
xchg
test
sub
xchg
mov
cmp
sub
cmp
js
pop
or
clc
je
mov
int
sbb
mov
and
aaa
push
inc
pop
sbb
or
dec
sbb
or
adc
xor
sar
and
add
or
push
dec
sub
aas
popa
imul
xor
sbb
in
sub
jbe
sub
jmp
call
sbb
and
or
or
mov
out
inc
inc
add
dec
adc
push
enter
je
inc
inc
inc
(bad)
es
jg
ss
leave
(bad)
das
dec
sub
test
jno
std
sbb
add
jp
mov
ficomp
mov
out
cdq
and
in
pop
push
dec
push
movs
sbb
push
adc
rol
pop
inc
mov
ror
(bad)
popa
add
xor
pop
or
and
or
sub
sub
inc
nop
clc
push
push
and
pop
inc
outs
call
inc
jae
sub
dec
call
dec
sub
iret
lahf
sub
nop
add
ja
bound
and
inc
cmp
pop
add
gs
xchg
or
inc
(bad)
in
sar
loope
push
mov
and
test
movs
into
dec
or
ret
xor
(bad)
jmp
add
pop
dec
add
push
push
inc
pop
add
add
jno
or
fs
pusha
loop
dec
(bad)
sub
imul
pop
retf
inc
dec
setb
dec
mov
sub
cmp
adc
iret
in
pop
and
es
jmp
push
aad
inc
inc
inc
xchg
data16
sub
dec
and
pusha
lock
add
jg
mov
icebp
mov
and
lock
jae
mov
pop
cmps
xchg
add
sub
add
sbb
pop
push
retf
sar
int
and
int
push
test
jne
into
ins
mov
sub
dec
aam
push
sbb
add
sub
cmp
sbb
cmp
cmp
mov
enter
cmp
adc
jb
dec
iret
lahf
inc
bound
mov
dec
cmp
pop
pusha
adc
xor
fsub
loopne
scas
rcl
pop
mov
mov
cmp
jae
adc
sbb
shr
mov
adc
dec
mov
fistp
ss
or
jmp
mov
hlt
cli
sbb
scas
sbb
inc
call
sahf
adc
shr
or
jns
fwait
sub
out
cmc
mov
popf
sub
add
dec
mov
sub
add
rcl
push
push
aas
mov
ds
or
pop
pop
aam
imul
mov
in
sbb
inc
popf
adc
mov
pop
inc
mov
adc
pop
rcl
mov
mov
mov
jge
int3
push
sbb
push
xchg
cmp
mov
cmc
shl
add
or
adc
aam
movs
jg
fmul
ficomp
shr
push
imul
push
cmps
push
mov
inc
cmp
jo
add
cmps
into
push
add
push
add
lods
add
fsubr
addr16
cmp
dec
push
push
dec
mov
sub
repz
pop
pop
fwait
adc
adc
scas
or
enter
outs
pop
ins
sbb
sbb
ss
cmp
push
mov
lock
pop
test
mov
xchg
jl
pop
lea
shl
test
inc
inc
xchg
bound
or
mov
adc
add
cli
inc
jl
mov
mov
jle
and
or
push
inc
add
mov
test
cli
dec
inc
cmp
and
das
je
scas
shl
ss
adc
in
cld
sub
cli
dec
pop
sbb
inc
dec
mov
pop
and
adc
pusha
(bad)
and
out
div
ss
sub
add
pop
inc
xchg
nop
je
add
jecxz
adc
and
jbe
ins
push
push
fbstp
adc
daa
int
sub
shl
test
or
sub
pop
and
inc
ret
es
nop
sub
xor
pop
xchg
add
or
and
pop
jge
mov
icebp
mov
xor
or
mov
add
dec
imul
or
add
loopne
call
dec
inc
aam
push
test
xchg
mov
push
icebp
pop
xor
(bad)
call
es
in
push
mov
cmp
adc
push
sbb
pop
clc
mov
sbb
cmp
popf
into
xchg
jl
jmp
je
and
les
cwde
fs
pop
sbb
std
(bad)
dec
and
xchg
mov
or
jo
push
pop
out
inc
ins
outs
mov
fs
add
mov
or
sar
push
push
mov
mov
xor
sysenter
xchg
mov
add
mov
loop
into
inc
pop
dec
daa
jl
jne
add
and
and
add
mov
pop
push
dec
lea
ret
in
push
lea
pop
rcr
cmp
sub
and
ret
or
adc
or
adc
jne
push
mul
aam
sub
cmp
imul
int3
push
mov
pop
clc
jg
rcr
jl
push
mov
add
retf
mov
pop
inc
dec
imul
inc
loope
mov
pop
shr
dec
jo
mov
(bad)
add
(bad)
mov
sar
outs
aas
(bad)
jmp
mov
std
inc
jne
enter
shl
inc
xchg
or
mov
retf
out
(bad)
shl
sahf
or
or
xor
pop
aam
xor
xor
push
or
cs
push
js
xchg
sub
xchg
cmp
and
inc
mov
push
shl
sahf
nop
rol
retf
dec
je
or
push
add
lds
inc
pop
add
xchg
jb
sbb
aas
inc
jno
xchg
jmp
add
adc
add
push
pop
int
fcmovnu
or
xlat
pop
rol
add
call
inc
or
sti
and
ret
xchg
in
dec
aad
inc
mov
cmp
sbb
pop
ins
pop
test
add
out
jo
pop
mov
shl
add
mov
pop
aas
pop
cli
push
lods
es
cmp
add
cmps
adc
adc
gs
push
stc
xchg
mov
cwde
dec
push
(bad)
xlat
test
jle
mov
inc
adc
sbb
out
cmps
sahf
inc
bound
inc
xor
loopne
mov
dec
adc
mov
ret
mov
xor
sub
and
sar
add
pop
or
add
in
ret
pop
and
inc
rcl
pop
sbb
daa
push
inc
dec
pop
push
adc
stc
inc
xor
add
xor
jns
sbb
movs
xlat
mov
les
mov
cmp
and
es
pusha
ret
xchg
jne
pop
inc
sbb
sar
aam
or
or
rcr
add
or
adc
mov
or
mov
lock
dec
inc
xor
mov
loopne
loope
sbb
div
add
jle
mov
jg
es
pop
fcomp
inc
ins
aaa
mov
jg
cmp
fdivr
add
sbb
data16
scas
sub
out
pop
pop
mov
(bad)
push
and
mov
cld
int3
inc
adc
add
pop
sbb
mov
mov
pop
add
lea
jb
ss
mov
into
push
push
sbb
loope
shr
or
add
pushf
and
sub
popf
xchg
and
repnz
test
or
pusha
ja
sbb
cmp
jge
in
push
add
loop
push
sub
dec
jg
dec
sub
mov
push
dec
je
push
add
clc
in
inc
add
ror
dec
sbb
add
add
dec
mov
out
sbb
push
push
mov
dec
dec
outs
bsr
xlat
ret
push
or
ret
and
pop
and
pop
aas
jb
mov
dec
xor
clc
pop
xchg
test
or
push
dec
push
pop
sbb
pop
push
shl
add
aas
or
shl
movs
add
mov
push
hlt
ret
hlt
mov
jmp
mov
bound
inc
pop
popa
xchg
jns
ss
hlt
jg
and
pop
lahf
push
(bad)
and
addr16
push
mov
ds
leave
test
lock
cmp
dec
mov
mov
mov
sub
fstp
into
push
cs
in
mov
test
sub
and
or
sub
xlat
pop
pop
add
mov
push
imul
inc
(bad)
rol
fmulp
lds
not
add
cmps
mov
(bad)
ja
mov
mov
adc
test
int3
int3
fidivr
sub
sub
test
or
imul
dec
cmp
fst
xor
in
pop
scas
fyl2x
add
or
push
adc
daa
push
mov
pop
jo
fld
adc
nop
ret
cdq
bound
dec
pop
mov
inc
jle
fnstcw
add
mov
fld
sbb
inc
cmp
(bad)
faddp
fstp
jne
out
adc
test
and
adc
sub
jbe
and
inc
dec
jmp
jne
fild
add
pop
test
pop
rol
jbe
rcr
cmp
dec
jo
xchg
es
nop
fxch
or
or
xchg
sub
cmps
lahf
in
fdivrp
and
inc
jl
sbb
xchg
xor
cmp
lock
fwait
add
cmp
fabs
jo
out
mov
or
add
dec
add
mov
ret
sti
push
faddp
xchg
sbb
sbb
sbb
mov
cs
out
outs
and
push
loopne
in
sbb
dec
icebp
outs
out
std
or
mov
sub
and
out
sbb
fcomp
cmps
(bad)
shr
pop
(bad)
jmp
(bad)
mov
cmp
add
cmp
enter
lock
jp
out
and
je
jb
push
(bad)
ret
icebp
or
or
or
call
add
xchg
jl
sub
enter
push
leave
pop
mov
xchg
loope
jbe
fadd
or
push
rcr
jnp
call
mov
sub
mov
jne
jno
in
cmp
sbb
xor
or
je
adc
fiadd
jecxz
aas
pop
cmp
stc
aaa
sub
adc
ficomp
and
xor
mov
jno
xor
loopne
xor
adc
nop
lods
fucomp
cmp
mov
mov
ret
mov
dec
sbb
mov
cmps
pop
sbb
sbb
push
cmp
ds
push
mov
and
mov
push
cwde
clc
jo
sub
dec
shl
fcomp
sub
retf
jnp
fadd
fcom
push
shl
jmp
sub
cmp
sub
jnp
sbb
(bad)
push
cmp
push
sbb
add
sbb
fsubrp
add
lds
pusha
iret
add
neg
mov
and
adc
push
jg
jae
imul
sbb
imul
xchg
and
xchg
pop
xor
push
mov
pop
repnz
pop
sub
cdq
js
hlt
cmc
js
or
pop
jg
mov
xor
jge
ret
je
xchg
cmp
cdq
fimul
dec
sbb
pop
jmp
movs
ud2
ds
add
pop
test
jg
sub
mov
shr
or
sbb
dec
loope
ret
loopne
xchg
xchg
lock
xchg
lds
add
fs
mov
add
int3
mov
dec
sub
lods
adc
xor
sbb
xor
pop
push
jb
xchg
shl
fiadd
mov
mov
push
xlat
sbb
idiv
neg
add
xor
push
mov
push
inc
es
mov
or
push
cmp
or
dec
and
xor
or
add
add
outs
pop
pop
cmp
in
neg
sbb
fs
and
adc
rol
sub
dec
or
or
or
mov
fs
jbe
sbb
add
ins
jo
or
cmp
xor
jmp
ret
shr
data16
push
sbb
cmps
mov
rcr
sti
cld
sbb
or
imul
data16
in
out
movs
xchg
lea
push
push
cmc
aam
sar
rcr
call
and
sub
pop
cdq
jbe
ror
iret
xlat
ins
xchg
sar
add
pop
jb
sar
rcl
mul
lea
adc
popa
cmc
adc
push
mov
push
xor
popf
add
les
fimul
mov
sub
xchg
or
fmulp
pop
cld
call
call
add
add
mov
fadd
push
dec
adc
sub
or
in
inc
or
fiadd
inc
push
or
or
mov
cdq
nop
and
push
jecxz
sbb
mov
dec
xchg
or
cwde
pushf
and
shld
mov
add
mov
mov
int3
xchg
sbb
imul
lock
in
into
mov
fs
push
adc
sbb
add
mov
test
mov
inc
push
push
call
inc
mov
mov
jg
and
int
push
fldlg2
push
mov
cmp
push
or
pusha
sub
dec
cmp
inc
cwde
les
mov
sbb
pop
jne
jl
dec
inc
add
rol
xor
test
inc
mov
shl
lods
hlt
mov
outs
out
or
sbb
retf
fstp
mov
aam
or
cmp
(bad)
arpl
pusha
push
loop
ja
add
ficomp
iret
neg
add
mov
iret
(bad)
enter
pop
cmps
adc
push
push
add
push
add
cld
jge
xchg
test
sub
test
inc
sub
sub
sbb
rcr
stos
and
push
fld
or
ror
sub
xor
iret
xchg
enter
or
push
dec
shl
adc
les
aaa
je
sar
push
mov
inc
js
fstp
or
push
push
je
cld
or
sub
out
sbb
scas
hlt
loope
pushf
push
push
and
fisub
sbb
sbb
in
or
dec
sbb
mov
xchg
(bad)
ret
addr16
int
ret
fmul
mov
pop
adc
sub
xchg
leave
push
jmp
or
push
push
int
call
xchg
sub
push
fild
mov
stc
pop
jnp
fistp
mov
or
mov
sbb
mov
sahf
sbb
div
(bad)
aad
dec
inc
js
adc
fld
mov
repnz
mov
fcos
outs
ins
mov
cmovae
pop
jg
add
mov
mov
sbb
js
jno
adc
cmp
icebp
or
jne
repz
add
test
push
aas
or
or
daa
ret
ret
add
fdiv
mov
dec
xchg
inc
mov
pop
push
fcom
push
stos
js
sub
imul
xchg
les
or
mov
inc
fld
jmp
jmp
and
add
sbb
add
ret
out
sbb
jge
inc
cld
jns
inc
leave
adc
enter
pop
xor
ds
je
push
mov
dec
shl
hlt
xchg
pop
xor
inc
add
sbb
mov
or
popa
loope
dec
js
dec
retf
mov
int3
mov
and
fst
jbe
loopne
jmp
push
mov
or
loopne
test
movs
add
or
and
pop
inc
shl
dec
mov
sub
fld
cmp
inc
cmp
loope
aas
fsubr
mov
xchg
shr
jb
aad
xchg
aam
sbb
(bad)
nop
lea
or
ins
jl
cmp
daa
fisub
adc
add
pop
or
or
ins
popa
fdiv
push
scas
sti
adc
sahf
or
test
xor
dec
pop
or
mov
loop
jne
sahf
sbb
loop
cmp
fistp
add
sbb
test
cmps
(bad)
xor
lahf
sub
mov
sbb
inc
(bad)
dec
add
xor
dec
imul
mov
xchg
xchg
mov
movs
dec
retf
sahf
xchg
sub
jecxz
xor
and
ret
out
inc
ds
sbb
mov
fimul
or
les
(bad)
or
ror
rcr
sub
in
mov
call
cmps
mov
nop
pop
pop
xchg
add
mov
and
outs
out
outs
and
xor
pop
ins
ror
or
cmp
in
dec
imul
sub
xchg
out
sbb
add
lods
mov
bndstx
jle
fs
or
push
cmp
dec
mov
pushf
je
sub
or
jno
jl
cmp
mov
out
cmp
add
add
jge
or
add
add
idiv
mov
(bad)
jmp
mov
xlat
push
gs
lea
xor
inc
cmp
nop
xchg
xor
call
sbb
daa
movs
pop
push
mov
jae
jnp
test
mov
push
mov
cmp
mov
push
pop
jb
jnp
test
inc
xor
xor
shr
jo
xor
dec
inc
or
adc
add
mov
ins
addr16
es
cld
aaa
pop
ret
fld
fadd
fstp
xchg
loopne
push
mov
in
loope
pop
cmps
jecxz
pop
add
mov
mov
xchg
inc
inc
sbb
push
or
pop
sub
sbb
pop
or
hlt
loopne
push
adc
jae
pop
icebp
add
rcr
add
(bad)
cmp
sbb
adc
pop
sub
cmc
das
inc
add
push
and
add
mov
or
pop
mov
cmp
add
add
push
or
push
sub
push
jbe
and
ja
and
stos
sub
xchg
xchg
nop
pop
jle
mov
movs
add
fs
sbb
sub
inc
cli
ja
and
cmp
xlat
add
pop
cmp
push
push
dec
pop
mov
sbb
jo
add
sbb
dec
sbb
and
xchg
ror
pop
jns
movd
mov
(bad)
icebp
pop
popa
icebp
push
or
aas
mov
sub
sbb
inc
cwde
ds
sub
leave
fsub
mov
push
sbb
je
and
sbb
lea
inc
push
int
lea
jno
add
icebp
(bad)
jp
js
inc
test
push
push
xor
mov
cmc
hlt
loopne
sbb
je
and
neg
dec
sbb
sbb
mov
pushf
xchg
ss
push
push
shl
ins
mov
leave
ja
xor
push
push
xor
jg
push
out
push
or
mov
mov
dec
inc
jne
and
sub
ret
sbb
add
mov
xchg
rcl
mov
fs
and
sub
nop
dec
pop
adc
mov
ret
sbb
mov
cmp
fmul
ja
jne
rcr
xchg
lock
je
sbb
cli
cmp
push
pop
pusha
xor
pop
adc
loopne
push
repnz
adc
fcom
add
mov
mov
(bad)
in
(bad)
mov
sbb
lds
aad
ror
push
rcr
jmp
fiadd
jmp
fcom
fcom
loopne
add
jl
rcr
mov
pop
adc
and
pop
and
pop
stos
fwait
xor
xor
xlat
data16
xor
inc
jne
or
repz
sub
ficomp
adc
push
add
lods
adc
int
jo
xor
push
cmp
pop
add
cmp
(bad)
adc
fadd
aad
jo
cmp
mov
inc
je
mov
mov
lds
dec
sub
mov
nop
dec
inc
or
sbb
aam
xchg
or
cmp
mov
mov
push
bound
aas
je
xor
inc
dec
test
mov
ja
xor
cmps
mov
dec
push
inc
push
adc
xchg
bound
add
(bad)
test
pop
mov
inc
outs
add
and
inc
fadd
and
loope
push
or
mov
nop
cwde
js
sub
or
and
jbe
arpl
adc
mov
xchg
cmps
and
adc
ds
sub
movs
retf
(bad)
stc
int
mov
xor
cmp
inc
sbb
imul
fisub
dec
pop
imul
inc
dec
push
sbb
cmps
push
mov
xchg
jl
push
push
movs
or
add
shl
fdiv
and
je
dec
or
dec
dec
push
hlt
mov
and
push
sub
shl
mov
push
push
stos
add
dec
ret
lods
dec
fisttp
xor
loop
pop
mov
ins
pop
sub
mov
dec
mov
daa
jb
mov
and
cli
dec
popa
xor
enter
xor
out
mov
cli
lea
adc
or
sub
cmp
cmp
adc
xchg
and
inc
sub
enter
inc
dec
xchg
imul
pop
mov
retf
xor
and
or
pop
pop
jnp
lock
or
and
nop
push
xor
popf
inc
loopne
pusha
jl
push
movs
mov
test
push
mov
adc
add
jne
stos
pop
xchg
inc
or
mov
pop
pop
leave
mov
fimul
dec
push
loop
adc
sub
push
jmp
pushf
dec
sub
adc
xor
ffree
jmp
ins
loope
test
xor
add
cmp
fdivr
inc
push
fldcw
hlt
mov
sbb
int3
push
addr16
sub
xlat
push
cs
xchg
cmps
(bad)
ret
push
sbb
or
xor
jle
jo
and
mov
arpl
popa
imul
outs
inc
add
ror
movs
push
and
push
and
sti
adc
xchg
sbb
pop
scas
scas
scas
dec
xor
pusha
call
xchg
dec
cmp
push
push
push
and
push
xchg
xor
add
and
xor
pop
sub
cmp
pop
push
add
xchg
xor
ins
daa
push
xor
addr16
sub
pop
jmp
call
xor
jo
push
mov
mov
pop
sbb
mov
popf
in
ficomp
sub
pop
mov
shl
xchg
xrelease
cmovg
pop
mov
jp
push
sbb
pusha
inc
(bad)
pop
je
repz
jb
test
push
mov
xor
enter
test
adc
sub
fdivr
xchg
or
cs
mov
mov
imul
(bad)
mov
shl
in
ror
sub
push
(bad)
cld
and
sbb
jmp
dec
leave
es
jbe
jle
sub
sub
inc
fld
fdiv
inc
sub
lock
cmp
pop
pop
pop
xchg
jnp
shr
in
popa
rol
pop
push
pop
cwde
adc
scas
mov
leave
cwde
xchg
inc
xor
dec
inc
adc
lock
pop
inc
pop
jno
sub
pop
call
jns
loop
cmp
out
or
sbb
pusha
push
cmp
aad
call
sbb
inc
push
retf
mov
mov
xlat
call
or
daa
test
mov
xchg
jne
and
mov
je
mov
jo
inc
mov
jns
ss
jo
cld
jle
sub
rcr
nop
mov
or
pop
fld
or
dec
pop
push
sahf
cli
xor
mov
dec
dec
cmp
and
into
cmps
push
jp
adc
xchg
int3
xchg
clc
pop
shr
fld
fmul
inc
mov
rol
sbb
jns
jmp
or
aaa
pop
mov
xor
add
pop
jmp
jle
push
js
shr
(bad)
adc
sbb
mov
push
fnsave
push
push
lock
add
jmp
push
xor
imul
xor
mov
adc
lds
leave
enter
lds
or
clc
push
sahf
xchg
xchg
xor
ins
add
pop
push
push
sub
std
push
enter
and
retf
jmp
aad
cs
sub
cld
add
rcl
ins
jne
lock
inc
sbb
xor
fs
adc
xor
ins
lock
pusha
xor
fist
push
push
aaa
inc
fdiv
push
jmp
mov
lea
add
jnp
inc
push
push
push
xchg
xor
rcr
jmp
inc
data16
cdq
or
cwde
imul
lods
mov
inc
fsub
add
push
pushf
fiadd
push
gs
jo
aas
or
mov
stos
add
loope
add
and
sbb
sbb
pop
sub
je
je
rol
and
cmp
pop
or
xor
aas
push
and
add
xchg
xor
cli
add
adc
xor
xor
push
aaa
sbb
xor
int3
dec
fcomp
outs
add
cmps
cli
cwde
add
sti
xchg
or
jmp
popf
mov
out
out
or
add
push
cmp
add
cmp
dec
adc
fs
mov
fcomip
ss
pop
add
cmc
cmp
js
inc
dec
enter
adc
push
sub
mov
sub
xor
jno
sub
push
pop
pop
(bad)
sbb
shl
loop
xor
ins
jmp
push
pop
sub
jg
dec
std
cmp
ja
movhlps
pop
pop
inc
in
push
or
mov
loope
adc
sub
or
wrmsr
fimul
or
add
adc
adc
ret
jns
cwde
adc
out
adc
jmp
or
enter
adc
cmp
mov
xchg
fdiv
inc
ds
xor
push
push
loopne
inc
push
loop
mov
push
sbb
fcmovb
adc
fdiv
cmp
cs
or
push
dec
shl
(bad)
or
add
int
add
les
push
shr
or
or
or
aam
mov
loope
jb
ror
push
xor
xor
jecxz
loopne
test
add
mov
adc
enter
movs
aas
cwde
mov
or
pusha
add
repz
retf
dec
sub
ins
shl
and
mov
pusha
icebp
ins
fstp
jo
mov
cwde
pop
push
jg
arpl
adc
cmp
adc
dec
loop
xor
sbb
rcr
add
loope
stc
adc
je
jl
stos
mov
(bad)
mov
mov
das
adc
or
dec
jb
push
hlt
shl
das
ds
push
cmp
das
loope
pop
mov
sbb
mov
lock
cmp
add
or
mov
popa
popa
jp
and
mov
and
jne
mov
int3
mov
sub
rcr
adc
ins
inc
inc
ja
div
test
adc
popa
nop
cwde
sbb
dec
fwait
(bad)
iret
hlt
pop
add
inc
dec
add
shr
or
rol
enter
hlt
push
inc
or
loopne
rcl
lea
inc
mov
test
imul
fs
outs
rcr
mov
dec
mov
sbb
mov
scas
sbb
data16
and
dec
jnp
lods
push
pusha
inc
aaa
and
xor
adc
cmp
mov
adc
cdq
push
adc
xchg
pop
popa
dec
lock
push
cmp
cmp
adc
pop
mov
addr16
sbb
push
and
xchg
or
jl
cmc
ret
popf
mov
inc
clc
cld
xchg
xor
jno
add
cmps
xor
push
(bad)
js
iret
push
sbb
jne
sbb
mov
(bad)
pop
clc
adc
add
or
pop
add
dec
ins
loopne
add
mov
out
repz
inc
add
outs
push
mov
sar
iret
mov
ror
sbb
push
cmp
ret
push
icebp
push
sbb
cmps
dec
neg
mov
imul
repz
test
push
jp
and
sbb
sbb
add
sbb
pop
or
mov
or
add
adc
adc
add
sbb
aas
mov
xchg
mov
test
test
and
les
imul
or
mov
xor
stos
adc
or
xchg
inc
movs
je
push
dec
mov
repz
nop
gs
leave
push
inc
and
rcl
mov
sbb
lds
jae
and
cmps
in
push
mov
dec
ficom
out
adc
pop
inc
pop
movs
in
aaa
push
fistp
dec
mov
inc
adc
or
adc
aas
dec
shr
lods
or
adc
dec
adc
and
add
retf
pop
rol
lds
fwait
in
dec
sub
jl
loope
shr
in
adc
xchg
jbe
ror
sar
(bad)
cli
pop
push
fisubr
repz
aad
cmps
icebp
push
and
fistp
jg
adc
dec
push
add
jnp
sub
add
pop
or
add
pop
push
cmc
inc
sbb
lahf
loope
and
push
sahf
iret
sub
adc
inc
add
daa
pop
push
fiadd
loopne
fdivr
and
mov
fsub
and
mov
xlat
push
sahf
test
mov
pop
push
ficomp
xchg
sub
sbb
outs
shr
fcom
jo
mov
fstp
dec
add
leave
shl
pop
imul
ds
xor
jp
cwde
xchg
jo
shl
jmp
in
nop
mov
stos
ret
sub
xor
jo
ror
mov
js
hlt
sub
adc
test
add
popa
aaa
retf
push
inc
cmp
or
lods
or
mov
adc
sar
sahf
mov
pop
xor
ret
xchg
lds
dec
ins
inc
cmps
ins
jae
shr
pusha
imul
adc
ins
push
inc
jl
or
mov
jne
icebp
or
or
sbb
ins
and
out
adc
outs
ret
pusha
iret
addr16
test
jg
cmp
mov
mov
and
sub
push
js
jo
and
or
pusha
div
push
jb
dec
xor
inc
push
lock
mov
mov
retf
xchg
(bad)
pop
into
mov
dec
ins
adc
sahf
bound
fs
xchg
sub
div
sub
fsubr
ja
push
ja
cld
jge
jno
test
pop
xchg
pop
mov
or
jmp
popa
imul
(bad)
ins
fdiv
push
popf
xchg
call
push
push
ss
xlat
and
xchg
dec
movs
lds
iret
and
mov
push
xchg
pop
mov
popf
add
adc
add
and
ret
inc
sbb
enter
push
ja
mov
sbb
inc
fwait
(bad)
push
nop
repnz
sbb
ds
inc
sbb
xchg
lods
cld
xchg
sbb
or
shr
xchg
dec
fbld
mov
and
mov
ret
and
push
jnp
mov
xor
in
rol
ins
pop
jg
cmp
and
adc
push
ins
ins
ins
in
inc
xchg
add
and
gs
rcr
push
push
sbb
sbb
jo
mov
push
dec
adc
inc
(bad)
aas
mov
xchg
or
inc
shl
enter
test
and
cmp
and
or
jp
in
ret
and
mov
push
pop
ins
lea
test
test
mov
cld
aas
js
popa
leave
cmp
test
fsub
sub
push
and
int3
or
xor
and
enter
sbb
push
adc
inc
repnz
and
mov
(bad)
xchg
mov
xchg
(bad)
sar
fild
loope
pop
xchg
jbe
jb
sub
adc
inc
div
sbb
(bad)
(bad)
jmp
cld
stc
into
shl
loopne
jnp
jns
daa
popf
xchg
push
cmp
jns
shl
mov
or
rcl
pop
sub
mov
add
or
retf
dec
loop
push
mov
dec
push
mov
sub
movs
loope
cmps
imul
mov
and
and
inc
and
jo
fs
lock
sub
fiadd
mov
ins
mov
adc
daa
or
aad
inc
ja
pop
pop
mov
(bad)
adc
pop
test
icebp
xor
sub
in
test
push
je
add
jo
test
stc
sbb
adc
in
mov
adc
mov
mov
jb
sar
mov
sbb
push
sbb
lea
(bad)
sbb
lods
jle
or
lea
adc
add
sub
dec
pop
mov
or
ret
jns
in
pop
jo
adc
and
test
enter
or
add
loopne
cmp
push
loopne
adc
xchg
and
popa
imul
fisubr
out
inc
daa
test
sahf
xchg
hlt
jns
movs
or
sbb
sub
dec
sbb
adc
ret
popf
mov
in
add
dec
test
enter
enter
mov
pop
inc
mov
sub
xor
xchg
sbb
add
sbb
add
mov
(bad)
rcr
ret
sbb
cmp
retf
jle
sbb
push
imul
ins
in
adc
stc
xor
push
imul
add
(bad)
enter
in
int3
adc
rcl
dec
imul
xchg
mov
cmp
ficomp
push
jp
fcmovnu
inc
or
(bad)
pusha
inc
cmp
shl
hlt
xor
mov
adc
test
or
xor
(bad)
icebp
xor
imul
add
ins
rcl
jl
add
push
gs
outs
pop
aad
scas
lds
pushf
push
fmul
fist
push
pop
fsubr
sub
(bad)
push
cld
mov
dec
sbb
sbb
cld
pop
inc
mov
mov
or
mov
ret
mov
pop
fistp
push
mov
lea
in
or
ret
xor
ret
ds
and
mov
in
adc
sti
mul
mov
adc
or
mov
xchg
xchg
inc
mov
mov
mov
xchg
mov
inc
vmread
jno
hlt
fiadd
jnp
push
jo
jno
pop
enter
and
jge
es
jne
push
sub
adc
jne
mov
popf
loope
xor
mov
sbb
cmps
jno
test
add
xor
sbb
out
fild
lods
mov
push
stos
mov
repz
xchg
test
push
pop
loop
xor
sahf
cwde
adc
and
aaa
stos
dec
lock
mov
test
pop
pop
in
sub
jge
out
fst
mov
int
fsub
mov
pusha
jmp
dec
xor
mov
call
sub
jnp
cld
arpl
sbb
rcr
cmp
(bad)
inc
push
push
gs
aaa
xor
ins
lods
pop
push
fild
ret
xor
inc
fadd
cld
jmp
das
adc
dec
and
rcl
in
adc
test
or
mov
pop
xor
clc
push
and
leave
js
bound
sbb
out
mov
mov
push
lods
inc
enter
sub
js
inc
mov
xchg
add
cmp
pusha
inc
xchg
sti
fisub
jae
bound
mov
fst
or
pop
std
sub
lds
fld
jmp
push
or
mov
out
push
fild
mov
jmp
dec
mov
jl
inc
xor
and
nop
fsubr
popa
inc
stos
arpl
je
or
cli
cmp
rcl
dec
adc
es
push
into
and
call
push
mov
push
or
or
xchg
mov
stc
jp
or
movs
mov
je
push
and
mov
xchg
test
sub
daa
mov
jg
hlt
add
cmp
inc
adc
inc
jb
xchg
out
inc
fcomp
fdiv
xchg
or
cmp
mov
fbld
inc
fisttp
mov
adc
fadd
inc
mov
sub
ins
enter
or
pop
lds
dec
js
gs
cld
in
cmps
call
ss
dec
femms
sbb
xchg
mov
addr16
adc
pop
int3
cmp
outs
and
dec
into
xor
test
pop
cmp
mov
pop
cmp
dec
clc
xchg
xor
cdq
xor
adc
push
or
inc
jmp
adc
je
shr
sub
xchg
lods
(bad)
adc
mov
mov
jle
jmp
xchg
push
and
retf
xchg
pop
(bad)
xlat
xor
les
adc
adc
call
jg
add
mov
inc
pusha
sti
inc
fwait
adc
and
jns
clc
cld
ret
push
xchg
pop
jmp
and
sub
mov
aad
mov
adc
ror
mov
fidiv
rcl
and
lods
and
inc
sub
pushf
loopne
bound
or
loopne
and
sbb
stos
mov
cmp
les
xor
add
xor
push
pusha
aad
fimul
aaa
inc
les
rcr
mov
cmp
jns
clc
pop
(bad)
scas
jae
fld
mov
pop
inc
xchg
push
mov
mov
out
sbb
lods
call
inc
fadd
rcl
pop
push
and
out
ficom
fcom
pop
ins
ret
cmps
and
xor
sbb
popa
imul
jne
xchg
push
les
loope
add
add
xor
adc
loope
inc
and
push
mov
sbb
push
test
shr
sbb
aas
or
push
sbb
cli
inc
pop
jle
mov
pusha
and
sub
rcl
add
or
test
in
scas
call
cld
lock
sub
cdq
mov
or
aad
test
xchg
lods
push
pop
mov
in
xor
aad
mov
cmps
int
test
or
int
scas
test
cmp
jmp
mov
dec
int
stos
sbb
fmul
fidivr
sub
push
xor
and
lahf
inc
es
std
mov
adc
test
cmp
push
adc
adc
stos
inc
push
movs
xor
sub
jmp
xor
mov
jo
std
push
pop
or
mov
inc
cmp
arpl
lea
and
push
js
inc
pop
ffree
sbb
enter
push
(bad)
push
mov
inc
xchg
inc
and
and
retf
rcr
and
xchg
xchg
movs
sbb
jp
mov
xchg
sub
dec
popa
or
push
xor
adc
movs
call
mov
outs
and
and
and
adc
test
adc
and
mov
scas
stos
add
add
mov
and
jle
pop
mov
loope
xchg
mov
mov
rol
and
jne
mov
jno
push
adc
jno
jno
jmp
imul
inc
xchg
xchg
dec
ficom
daa
or
je
cmp
cmc
adc
fild
jmp
jns
xchg
(bad)
enter
clc
push
rcr
xor
imul
mov
or
frstor
adc
sbb
sbb
faddp
or
adc
mov
sub
and
or
mov
xchg
mov
dec
pop
xor
push
xchg
xor
je
daa
push
dec
xchg
xchg
clc
call
or
bound
xchg
pop
scas
(bad)
dec
inc
sar
mov
pop
shl
jno
nop
leave
and
and
and
ins
xor
jae
adc
lock
jge
xor
mov
mov
or
sbb
add
cmp
int3
rol
std
jmp
mov
jmp
jne
and
push
mov
push
into
add
inc
pop
xchg
cmp
pop
call
jnp
push
sbb
ror
sub
adc
mov
xchg
shl
movs
dec
and
in
fdiv
push
or
test
dec
sbb
xchg
adc
idiv
cmps
jecxz
ret
in
fst
inc
jmp
pop
ret
sub
(bad)
loope
push
xor
dec
or
js
call
inc
mov
sbb
dec
retf
adc
call
adc
mov
mov
shr
adc
out
and
inc
jle
imul
bound
stc
fnstcw
test
inc
lahf
fmul
cmps
(bad)
fadd
outs
(bad)
aas
je
popa
mov
ror
or
xchg
lock
dec
fwait
icebp
cmp
inc
add
clc
adc
jl
push
test
mov
adc
shr
push
adc
pop
mov
jns
pop
add
dec
push
clc
mov
cmp
inc
pusha
or
cmps
jmp
xor
xchg
fst
sub
inc
das
mov
inc
movs
xchg
sahf
lods
adc
push
mov
jge
mov
mov
std
stos
xchg
daa
add
xchg
sbb
ret
push
xchg
loope
mov
daa
push
adc
sbb
mov
cmp
pop
sbb
ret
mov
jmp
gs
inc
jae
adc
push
cdq
push
loopne
sub
sbb
mov
or
jecxz
stos
in
aad
cmp
add
aad
or
xchg
jl
adc
inc
(bad)
in
loope
or
test
and
mov
push
and
sbb
ret
mov
call
push
jno
pop
push
fcmovnb
cmp
xor
jo
lods
jecxz
imul
pop
xchg
inc
cmp
fs
icebp
inc
push
mov
pop
and
es
xchg
pop
ret
ins
cmp
test
mov
and
mov
push
mov
sbb
test
or
movs
loopne
(bad)
and
dec
test
pushf
mov
popf
sub
sub
add
unpckhps
or
das
cmp
pop
daa
test
sbb
and
loopne
movs
mov
cmp
loop
add
mov
rol
or
inc
pop
cmp
xchg
and
xchg
jno
jmp
cmp
dec
ins
adc
ret
and
jge
sbb
push
add
or
push
rcr
xchg
inc
mov
sahf
jmp
movs
push
cdq
inc
fst
sbb
imul
sbb
aas
add
adc
sub
mov
sub
mov
ins
cdq
mov
gs
jo
fisub
cmp
test
imul
rcr
pop
push
retf
add
dec
cmp
imul
adc
adc
lods
test
or
mov
dec
sub
push
sbb
(bad)
mov
or
mov
icebp
int
popf
ret
xchg
out
xor
add
shr
inc
inc
pop
inc
pushf
(bad)
add
or
dec
push
jb
(bad)
sbb
mov
dec
fs
or
xchg
ins
bound
adc
or
cmp
(bad)
(bad)
add
jns
adc
je
out
mov
dec
inc
stos
xchg
lock
lahf
adc
movs
fst
jl
mov
add
and
add
xor
div
dec
xchg
jo
xchg
inc
cmps
in
lods
sti
adc
hlt
adc
jne
xor
cs
dec
cmp
hlt
lock
add
xchg
add
jne
pop
xchg
fisttp
ds
call
push
sub
loopne
inc
jge
fbld
arpl
and
cmp
test
mov
xor
les
cwde
inc
mov
into
jge
inc
lods
lods
cmps
mov
jae
(bad)
stos
add
js
imul
pop
stos
pop
(bad)
or
mov
cmp
ins
add
fcom
mov
(bad)
push
syscall
fstp
sub
js
adc
shl
jg
push
dec
sub
cmps
sub
push
sbb
(bad)
out
inc
push
and
lds
sbb
add
or
add
pop
and
das
adc
shl
cmp
inc
cwde
xchg
and
rcr
mov
imul
xchg
imul
leave
add
ror
sub
pop
and
movs
push
pop
push
or
sbb
pop
sbb
fsubr
sub
adc
movs
and
or
or
push
and
add
jl
daa
jb
lods
adc
pop
pushf
mov
add
cmps
pop
lock
jmp
movs
lods
push
sub
dec
or
cmps
jge
fisttp
jmp
icebp
sti
cld
jp
je
add
fcomp
test
jo
mov
hlt
(bad)
mov
pop
cld
cmp
jl
jno
lods
mov
cmp
pop
in
jmp
dec
nop
cmps
inc
fld
cmp
xchg
and
push
sbb
ins
arpl
(bad)
xor
cs
and
sbb
jb
sbb
mov
daa
dec
test
mov
sbb
dec
inc
dec
pop
push
mov
aas
fsubr
dec
xor
or
(bad)
xor
and
pop
or
and
ins
xchg
and
xor
adc
adc
sub
gs
pusha
aaa
ja
push
mov
adc
mov
xchg
add
add
hlt
les
mov
adc
jl
jl
neg
call
or
xchg
rcr
and
lods
sbb
cmp
retf
dec
mov
add
sbb
shl
test
xchg
jbe
clc
push
pop
add
in
push
push
test
rcl
inc
sub
adc
loop
call
ins
xor
dec
out
retf
jecxz
dec
mov
sub
cwde
icebp
pop
jg
mov
inc
loopne
(bad)
std
repz
pop
inc
loopne
add
inc
jnp
outs
dec
pop
add
stos
cmp
sbb
mov
cmp
gs
jb
mov
ins
push
loopne
dec
add
push
pusha
ins
sahf
jno
mov
(bad)
dec
mov
cmc
xchg
mov
push
add
(bad)
icebp
and
pop
rol
and
pop
loope
gs
int3
das
push
mov
(bad)
jle
mov
and
or
xor
cld
repnz
sub
push
scas
test
cli
pop
sahf
mov
xor
xchg
mov
add
pusha
push
loope
or
xchg
sbb
out
jb
add
retf
aas
dec
dec
sub
mov
call
je
push
rcr
push
out
jno
pop
adc
addr16
aam
dec
mov
in
push
jg
mov
cmp
fiadd
push
xchg
pop
adc
mov
add
sbb
aaa
jno
sub
cmp
and
add
int
pop
adc
push
out
sbb
adc
jg
enter
or
push
out
pop
or
add
std
arpl
xor
pop
xor
adc
push
or
out
mov
mov
add
add
sar
mov
xor
sbb
rcr
outs
in
push
mov
sub
xor
inc
aam
push
in
mov
in
out
add
sub
sub
push
sub
sub
es
mov
lods
jmp
add
cwde
cmp
test
out
or
retf
xchg
add
jmp
jmp
repnz
shl
add
and
xchg
pop
cmp
mov
enter
ret
xchg
fcomp
and
xlat
dec
add
adc
sub
jl
add
pop
sbb
sub
sti
retf
or
push
cmp
pop
push
jmp
test
and
fmul
(bad)
xchg
lods
cmc
sub
cmp
and
mov
mov
or
sub
push
mov
and
xlat
jb
mov
daa
add
or
dec
jae
pop
sbb
or
ins
pop
mov
lods
pop
adc
push
and
push
xor
or
stos
push
ds
xor
mov
jecxz
xor
ret
xor
movs
sub
and
lods
sub
sbb
push
loope
pop
sar
xchg
push
fsub
jmp
sub
jno
inc
pusha
movs
sahf
icebp
shl
inc
fdiv
and
xor
sbb
mov
pop
push
test
push
jns
xor
mov
pmullw
es
mov
xchg
ins
mov
jecxz
pop
mov
jne
add
inc
ret
push
sbb
mov
add
dec
adc
add
fs
push
dec
inc
rcr
fild
jp
sub
mov
fdivr
sbb
dec
add
int
push
outs
and
add
nop
out
test
cmp
jle
and
mov
add
in
and
jne
push
sahf
in
or
and
mov
sti
mov
icebp
out
cli
sbb
ret
call
sub
sar
jmp
or
clc
add
jb
sbb
test
push
test
xchg
mov
bound
daa
test
inc
lds
dec
ret
jb
cdq
(bad)
mov
inc
xor
fstp
adc
shl
xchg
clc
cmp
movs
adc
or
jmp
repz
and
movs
imul
and
inc
mov
rol
jl
aad
xlat
mov
add
adc
or
xchg
(bad)
adc
fld
mov
jns
mov
call
mov
sbb
mov
shl
jns
push
inc
pop
jb
jns
inc
dec
fstp
adc
dec
test
inc
adc
and
xchg
push
adc
aam
xlat
adc
aaa
push
arpl
jp
enter
int3
push
arpl
mov
cdq
ret
mul
mov
push
out
das
inc
outs
adc
sbb
(bad)
xor
pusha
sub
inc
loopne
aam
jno
add
and
add
cmp
fst
sub
and
add
mov
test
inc
xor
inc
jge
adc
jg
inc
std
retf
xchg
pushw
fs
sub
mov
leave
mov
mov
dec
loopne
lds
lds
sbb
jg
mov
out
push
in
sbb
xor
enter
pop
or
adc
push
imul
dec
cld
hlt
clc
sbb
aad
add
and
adc
lds
fadd
adc
and
xchg
mov
add
xor
sbb
fistp
add
movs
add
mov
mov
xchg
or
adc
push
pop
mov
sbb
pop
cmovnp
add
jns
xchg
addr16
test
and
jl
inc
or
lahf
dec
aaa
push
push
ja
mov
cdq
mov
test
test
adc
sub
pusha
dec
push
mov
pop
in
sbb
inc
dec
int3
rol
sbb
movs
pop
jb
les
rol
cmp
daa
ins
dec
cmps
dec
mov
pop
adc
movs
fisttp
sbb
ja
pop
aas
lahf
or
sbb
jb
cmp
adc
out
push
sbb
cmp
ror
push
in
sub
and
push
das
dec
add
or
mov
pop
repnz
push
push
pop
fdiv
pop
push
idiv
push
xchg
test
retf
iret
repz
sub
data16
push
mov
and
push
adc
jnp
push
mov
out
cld
push
clc
ds
push
fisubr
cmp
push
add
sbb
add
pop
xchg
and
cmp
sbb
or
fidiv
mov
or
cdq
sbb
sbb
pop
cmp
sub
sbb
mov
lahf
ja
stos
mov
cs
mov
adc
jmp
ficom
daa
inc
or
jo
retf
and
(bad)
fwait
cmps
arpl
sub
fstp
or
adc
xor
out
and
push
dec
jno
xchg
jbe
daa
jne
out
mov
fidiv
xchg
mov
xchg
movs
xchg
mov
or
dec
mov
lahf
cmp
ficom
adc
in
sub
sbb
fsub
ficomp
sub
imul
pop
push
int
inc
jmp
adc
stos
jno
sahf
sub
inc
push
or
fidiv
inc
inc
pop
ins
mov
or
popf
movs
inc
xchg
jnp
iret
shl
scas
or
aad
jmp
sahf
out
fs
cmp
call
xor
xchg
gs
scas
fnstsw
add
add
add
xchg
push
push
movs
adc
add
inc
push
push
std
and
push
xchg
sti
or
add
xchg
out
or
pushf
popa
cmp
test
push
xchg
and
movs
dec
push
mov
xchg
dec
mov
in
pop
test
mov
in
mov
sub
int
(bad)
mov
(bad)
mov
and
inc
sub
pop
sub
js
push
fild
mov
test
ret
icebp
add
xor
ins
jno
adc
add
add
sub
xchg
ror
inc
fsub
sub
rcl
jp
div
adc
out
js
adc
(bad)
xchg
xor
test
adc
in
adc
ret
sub
add
or
stos
sub
mov
dec
xor
arpl
sub
jb
push
pop
pop
inc
(bad)
xor
(bad)
mov
mov
add
cwde
cmp
outs
lods
mov
sbb
push
jmp
loop
ror
and
shr
fcom
mov
push
fstp
pushf
fnstenv
jno
addr16
xchg
test
call
xor
loopne
xchg
sub
xor
or
aad
mov
push
cmp
lods
popf
mov
fs
call
add
jp
inc
pop
inc
jp
dec
adc
inc
push
and
or
retf
pop
ret
pushaw
inc
pusha
sub
fmul
xchg
dec
lea
fbld
mov
and
std
cmps
lock
pop
sbb
fs
aas
into
mov
fstp
pop
out
adc
out
out
mov
and
pop
inc
mov
(bad)
pusha
loop
sub
rol
and
sbb
push
push
fmul
sbb
xor
mov
dec
mov
(bad)
aas
fdiv
fdiv
adc
cmp
out
pusha
(bad)
jle
or
mov
je
and
je
arpl
nop
xchg
push
sbb
push
ins
mov
adc
inc
jns
inc
push
jl
loopne
push
cmps
cmp
inc
push
sbb
mov
fisub
inc
dec
jno
je
lds
push
adc
ins
lock
jne
outs
retf
dec
jo
push
add
push
rcl
add
inc
xor
sbb
imul
je
push
js
mov
test
repz
fmul
(bad)
ss
cwde
sub
push
mov
add
movs
adc
xchg
push
cmc
adc
cli
test
pop
add
xor
or
mov
ret
or
ds
add
pop
sub
paddusw
sbb
sub
xchg
popa
jmp
iret
lock
push
mov
add
pop
sub
inc
bound
cmps
xchg
add
lock
js
cmp
inc
loopne
sar
fcom
test
(bad)
xor
xor
adc
mov
fldenv
sbb
add
xchg
mov
sub
sub
add
add
loopne
test
inc
les
mov
rol
cs
inc
fist
leave
cmp
or
scas
xchg
cmp
cmp
cmc
aam
sbb
mov
sub
xlat
inc
and
sub
addr16
daa
jmp
jmp
inc
cmp
add
arpl
in
xchg
cmp
add
adc
mov
and
pop
bnd
(bad)
mov
bound
les
and
hlt
fisub
scas
and
push
and
mov
push
cmp
mov
cmp
adc
aam
daa
popa
push
pop
leave
cmp
sbb
test
inc
dec
push
mov
and
daa
pusha
adc
push
div
call
shl
sub
or
sbb
pusha
(bad)
daa
xchg
(bad)
cmp
jne
pop
imul
loopne
ret
or
lock
inc
rcl
add
cmp
push
adc
and
pushf
mov
mov
cwde
mov
or
sbb
cmps
call
inc
dec
mov
xor
mov
sar
pop
and
sbb
cmp
bound
xor
add
add
loopne
ror
cmps
jo
retf
xchg
jo
sub
fld
adc
lods
push
mov
inc
pop
loope
adc
dec
mov
add
push
or
adc
add
test
mov
mov
cwde
cmp
push
sub
(bad)
sbb
or
pushfw
adc
mov
xor
add
sub
cmp
ret
loopne
sbb
xor
fisttp
bound
pop
add
pusha
test
mov
call
sub
push
jmp
jo
mov
mov
xchg
aam
retf
retf
mov
adc
clc
adc
mov
ret
cld
in
rol
in
or
xchg
dec
mov
jb
and
loope
sbb
xor
enter
or
cwde
push
mov
inc
sbb
pop
cmp
jg
mov
jb
add
inc
idiv
aad
push
pop
xchg
mov
pushf
rol
add
dec
cmp
popa
xchg
nop
test
cmp
loope
ja
push
push
push
xor
xor
xlat
sbb
iret
mov
add
aaa
int
push
clc
icebp
pop
sub
sbb
fbstp
adc
adc
ror
add
add
mov
xchg
sub
xor
call
fld
push
lock
out
push
mov
rcr
jecxz
pop
out
js
adc
and
pop
sub
or
xchg
(bad)
ss
jmp
jae
fsubr
or
dec
or
push
push
inc
xchg
movs
outs
cmps
adc
dec
xor
or
dec
xor
test
or
xchg
daa
loopne
test
je
sub
xchg
iret
inc
rol
cdq
adc
mov
lock
lock
pop
outs
imul
sbb
jle
mov
add
add
clc
mov
and
lock
push
mov
or
js
lock
push
jg
sub
push
xlat
dec
adc
imul
adc
sub
je
dec
(bad)
sbb
retf
sub
adc
les
not
dec
xchg
imul
das
jle
ror
es
mov
movs
cmp
dec
add
sub
adc
cmp
test
cmp
ds
lea
add
stos
aam
shr
and
sub
pop
nop
es
jp
push
push
fdiv
inc
push
ins
int
ss
sbb
nop
clc
adc
adc
inc
(bad)
dec
and
sub
dec
cmc
mov
sar
add
mov
dec
js
add
jmp
mov
and
and
clc
daa
pop
pop
stc
mov
lea
dec
add
sub
and
fimul
mov
and
faddp
fld
fmul
faddp
cs
xchg
ror
faddp
push
clc
push
shl
out
les
aam
in
pop
aas
fadd
fcom
add
inc
loopne
or
dec
cmp
lea
fdivr
adc
adc
lds
in
jmp
adc
imul
adc
sbb
int
shl
outs
ror
(bad)
(bad)
sbb
add
add
repnz
or
enter
jl
cld
arpl
daa
loop
fld
dec
sbb
push
ret
fst
mov
inc
fmul
and
jmp
and
push
sbb
mov
xchg
out
sub
push
aam
sti
lods
xor
rol
push
push
cmp
adc
pop
ret
push
push
xlat
repnz
jnp
dec
jmp
sub
loopne
sbb
mov
xor
or
mov
dec
iret
pop
cwde
dec
outs
mov
das
push
or
or
xchg
and
test
shl
mov
popa
push
mov
jge
fstp
cs
jbe
dec
push
and
mov
das
mov
(bad)
dec
rcr
dec
push
dec
ds
pushf
and
shl
xchg
adc
rol
mov
cld
xchg
(bad)
loope
or
sar
lock
cmp
daa
pop
and
fmul
pop
sbb
jecxz
cld
test
cwde
cwde
cmp
cmp
mov
xor
inc
sbb
sbb
(bad)
call
fcomp
or
cmp
jl
mov
movs
cmp
fs
and
movs
mov
cmp
xchg
pop
fld
movs
aad
adc
lods
test
sbb
sbb
test
cmc
test
sub
mov
xchg
pop
push
out
shl
ss
or
and
outs
add
int3
out
mov
retf
outs
or
mov
dec
mov
push
mov
adc
inc
add
jno
(bad)
es
mov
push
cmp
jl
or
dec
out
call
loop
adc
push
fdivr
movs
dec
lea
(bad)
xor
adc
mov
addr16
pop
inc
add
jns
mov
call
jp
mov
fiadd
dec
ret
loop
addr16
cmp
and
(bad)
mov
pop
imul
add
mov
jle
jp
js
ret
sub
jns
push
retf
pop
inc
rcr
out
lods
adc
jmp
xor
push
lds
mov
push
adc
in
push
loop
mov
xchg
or
xor
ins
mov
movs
cmp
xchg
mov
jno
xor
push
xchg
or
dec
pop
or
scas
push
stos
lahf
mov
out
adc
dec
hlt
sub
(bad)
test
jno
pop
mov
add
add
jno
cmp
sub
leave
mov
fs
movs
or
push
pop
push
(bad)
mov
ret
push
and
push
mov
sbb
sub
scas
js
in
test
xor
add
add
push
pop
jle
dec
rol
push
dec
dec
or
or
sbb
jl
or
cmps
xchg
or
jo
ret
xlat
cmp
je
out
xchg
cwde
cmp
aas
aas
lea
push
adc
xor
add
rol
fs
cdq
xor
mov
xor
movs
fdiv
mov
retf
inc
inc
push
hlt
xchg
mov
shl
cmp
jecxz
push
mov
out
push
push
loop
sar
inc
or
scas
and
fld
daa
adc
sbb
jecxz
or
(bad)
ror
jo
movsx
jne
or
xor
ins
fist
push
push
inc
sub
mov
and
hlt
int3
push
or
or
mov
dec
mov
push
inc
push
int
scas
xchg
lock
adc
push
add
fmul
add
inc
cwde
dec
cmc
jmp
push
rcr
mov
les
push
push
adc
daa
fsubr
and
(bad)
scas
rcr
inc
inc
imul
sub
push
ror
xchg
mov
xchg
add
lods
das
inc
add
xor
hlt
adc
mov
pop
fstp
je
sub
or
icebp
les
aad
push
stos
jo
hlt
fild
(bad)
pop
test
dec
xchg
shl
inc
aam
imul
mov
push
cmps
iret
fldenv
adc
aaa
sahf
sub
pop
loopne
cs
or
dec
mov
dec
add
mov
imul
xor
ret
aas
fs
or
jnp
dec
sub
sbb
sub
jle
mov
cmp
ss
ror
icebp
jp
push
add
out
shr
lea
xor
sti
add
test
fdiv
and
cmps
push
pop
cmp
fbld
sub
add
inc
lds
call
push
jmp
je
or
cmp
jbe
xchg
push
xor
arpl
inc
(bad)
mov
mov
(bad)
pop
adc
adc
xlat
cmp
fcmove
push
adc
xor
hlt
cmp
cs
and
das
jmp
mov
mov
enter
cmp
dec
add
fst
cmps
mov
imul
jne
add
mov
mov
pop
push
lock
add
aaa
fisubr
and
pop
sbb
dec
addr16
es
imul
pop
mov
das
mov
cmp
push
iret
mov
adc
test
pop
add
fwait
push
inc
jns
retf
lahf
sbb
inc
and
inc
ds
lea
rcr
xor
mov
cmp
jl
rcl
test
repnz
push
and
and
or
ja
jge
test
mov
lahf
adc
cmp
pop
xchg
loopne
dec
pop
lahf
lea
or
push
ja
inc
add
xchg
xor
and
sub
adc
inc
mov
sbb
sbb
cmp
shl
mov
icebp
push
lea
push
lock
mov
mov
in
fucom
dec
push
movs
jp
jo
jno
mov
cdq
mov
mov
sbb
(bad)
popa
add
add
lea
jno
imul
aam
dec
(bad)
xlat
out
sub
in
mov
pop
out
inc
adc
arpl
les
push
retf
push
daa
adc
and
rol
dec
test
fstp
pop
pusha
pop
pushf
or
xchg
push
sbb
fabs
jns
xchg
test
es
mov
test
leave
adc
cmp
jge
mov
xor
into
and
and
movs
sub
dec
sub
dec
add
inc
push
inc
mov
pop
pop
add
cmp
add
pop
pop
pusha
vmread
not
sub
jns
aam
stos
outs
dec
sbb
ss
loope
add
sub
xor
cmpxchg
out
push
pushf
adc
sbb
dec
sbb
mov
mov
fwait
sbb
cmp
cmps
sub
in
sub
cmc
add
aad
add
shl
in
and
retf
dec
fdiv
scas
xor
xchg
hlt
mov
xor
mov
adc
mov
in
scas
mov
pop
sub
lock
test
call
adc
in
pop
add
mov
or
in
(bad)
jnp
xchg
cmc
sub
jo
add
mov
and
add
jne
push
jae
sbb
stos
mov
jne
icebp
xor
loope
mov
or
movs
add
mov
adc
mov
test
inc
pop
pop
mov
fnstenv
daa
(bad)
int3
sahf
dec
mov
shl
ds
test
and
pop
pushf
xor
or
adc
add
scas
dec
dec
mov
add
inc
ins
xchg
add
adc
in
shl
das
sbb
ss
xchg
loopne
loopne
shl
mov
dec
add
or
pop
(bad)
jne
jnp
cmp
push
pop
sub
clc
sbb
cwde
adc
js
or
outs
dec
pop
push
adc
lds
(bad)
jle
mov
dec
in
xchg
jno
ficomp
test
test
mov
repz
sub
cmp
sbb
out
add
mov
add
pop
or
mov
lea
sbb
fild
and
add
lea
mov
add
stc
mov
sbb
out
lea
cld
ins
jmp
(bad)
ror
lock
cmp
jns
pop
jae
imul
xor
sbb
(bad)
adc
out
jg
gs
sub
sbb
xchg
jg
dec
aas
sbb
jle
sub
push
xlat
adc
in
inc
push
mov
sub
sbb
mov
in
dec
push
rol
outs
add
or
hlt
pop
mov
fisub
adc
pushf
retf
sbb
out
call
cli
add
sar
lea
out
add
into
pop
xor
rcl
rol
mov
mov
push
dec
cld
inc
lahf
inc
fidivr
lea
bound
pop
or
pop
ror
mov
cmp
mov
dec
fdiv
fadd
cli
mov
sbb
aaa
mov
inc
mov
add
js
clc
lock
mov
std
shr
and
or
add
mov
in
lds
adc
push
push
inc
push
xor
mov
jmp
dec
cld
inc
adc
push
jbe
and
idiv
sbb
fld
fsub
cmp
push
jnp
stos
cmps
jp
push
inc
aaa
sbb
push
pop
dec
popa
adc
push
jnp
mov
or
call
movs
sub
retf
movs
dec
ins
xor
mov
repz
inc
loope
nop
popa
inc
mov
rcr
xchg
stos
(bad)
add
loope
adc
test
or
dec
shr
push
mov
clc
adc
inc
shr
mov
push
add
call
mov
jns
sbb
cmp
inc
push
in
lea
and
mov
sub
popf
fld
sbb
(bad)
sbb
cmp
pop
sub
xchg
mov
scas
add
sar
lods
mov
ins
test
adc
clc
in
cmp
or
pusha
push
and
or
dec
loop
xor
or
loop
inc
cli
push
inc
dec
stos
repnz
out
push
lock
sub
adc
scas
sbb
xchg
xchg
xor
outs
in
mov
retf
xor
ins
imul
dec
push
in
stos
xchg
sbb
mov
mov
pop
cmp
adc
sbb
in
mov
imul
dec
fist
into
js
fst
dec
and
lods
push
das
push
push
lahf
adc
inc
sub
adc
outs
or
jbe
adc
aas
dec
push
dec
cmp
pop
cs
shr
sti
sbb
or
or
dec
ret
inc
dec
iret
adc
or
add
ins
rcr
inc
push
inc
or
or
loope
mov
sbb
test
inc
test
dec
and
or
xchg
ret
outs
xor
rcr
mov
add
inc
idiv
call
cmp
repnz
rcr
test
adc
pushf
aaa
push
stos
xchg
call
jb
cdq
dec
or
add
inc
push
adc
cmp
add
fdivr
ins
pushf
and
pop
loop
adc
cmps
jge
loope
lock
fmul
outs
push
jmp
lahf
test
mov
adc
sub
xchg
icebp
add
cmp
pop
and
add
sbb
xor
pop
xor
jecxz
or
push
gs
push
inc
xor
lock
movlps
lods
push
js
mov
sub
out
cli
push
mov
push
daa
adc
repz
jmp
mov
movs
repz
add
mov
outs
mov
mov
js
adc
mov
popa
fwait
bound
movq
ret
push
cdq
icebp
cmp
scas
push
(bad)
outs
jbe
add
push
jne
sahf
repnz
enter
jge
cs
cmp
sbb
punpckldq
xchg
adc
out
xchg
cmp
jecxz
pop
int
sbb
setl
and
ins
fst
(bad)
add
jo
and
mov
or
pushf
addr16
ret
sbb
(bad)
mov
or
fldlg2
or
iret
jle
sbb
dec
and
add
adc
dec
mov
mov
call
sub
sar
add
mov
xor
shl
enter
push
xor
mov
push
icebp
or
or
cwde
mov
or
test
daa
sub
mov
sub
fsubr
and
cmp
and
ficom
jp
(bad)
ds
fmul
push
pop
rol
ja
into
test
add
dec
or
fdivr
jl
inc
inc
shr
adc
(bad)
popa
(bad)
mov
sti
pop
and
stos
inc
int3
cmp
stos
(bad)
sbb
inc
or
cmp
push
ret
xchg
inc
adc
and
outs
ror
xchg
pop
add
jmp
xor
mov
dec
and
dec
xchg
adc
call
lock
sar
seto
nop
ds
mov
mov
or
enter
clc
dec
and
push
and
mov
jo
pop
add
into
jle
enter
inc
pop
xchg
cdq
push
mov
mov
scas
xchg
and
sar
push
sub
push
lods
jno
jno
(bad)
dec
leave
in
lock
test
pushf
stos
and
push
add
test
lds
mov
push
xchg
call
int3
cli
inc
daa
movs
dec
cmp
clc
rol
pop
push
mov
fadd
dec
dec
pop
inc
in
pop
sub
adc
inc
cld
(bad)
and
mov
push
or
add
js
mov
pop
push
cmp
jne
call
mov
jne
cmp
data16
and
inc
pusha
and
aad
das
lea
sub
jmp
cmp
push
out
outs
mov
mov
popf
cdq
out
mov
dec
call
nop
dec
mov
pop
or
mov
outs
popa
fadd
adc
lods
add
cmps
sbb
ins
xor
mov
adc
add
dec
sbb
ret
lahf
or
xor
test
je
shr
mov
lods
rol
push
loopne
pop
pop
inc
rcr
in
dec
ret
inc
(bad)
fsubr
push
es
fadd
add
push
test
fcmovnu
loopne
int
mov
mov
movs
jmp
jp
adc
push
sub
mov
inc
sub
push
xor
push
or
dec
das
test
sahf
and
in
add
jecxz
jmp
je
mov
mov
jne
mov
inc
adc
or
gs
dec
add
test
inc
sbb
arpl
mov
xor
lea
jne
icebp
cmp
jge
fdiv
xor
sbb
loopne
cld
in
adc
mov
pushf
push
mov
push
push
mov
lahf
rcr
icebp
mul
xor
jno
stos
or
xor
bound
xchg
add
inc
adc
movs
or
or
shr
cmp
mov
add
aaa
mov
lahf
inc
popa
ret
xor
(bad)
aam
pop
or
mov
mov
in
xor
loopne
pop
inc
push
cli
icebp
jg
rcl
rol
mov
jo
in
mov
jl
and
cld
dec
dec
int3
mov
int
mov
lea
lea
mov
in
jg
fcom
inc
mov
mov
push
mov
dec
push
mov
pushaw
jge
add
(bad)
loopne
sub
inc
mov
xchg
sub
sub
pop
movs
adc
xor
push
jecxz
inc
push
sub
ret
lds
ss
or
jmp
pusha
add
(bad)
xor
adc
mov
add
add
push
and
das
inc
jl
mov
xor
mov
xor
push
(bad)
fmul
push
sbb
in
add
test
dec
inc
push
ret
mov
movs
rol
adc
or
ret
mov
ror
mov
enter
stos
push
into
ins
inc
adc
inc
lea
rcl
arpl
test
inc
adc
cmp
pop
rcr
or
or
and
or
mov
leave
adc
shr
addr16
push
popf
ret
mov
cmp
mov
lahf
and
push
dec
ins
push
push
adc
(bad)
or
mov
aaa
pop
or
xchg
mov
add
add
mov
or
mov
xor
or
push
(bad)
popf
bound
popw
push
or
cmp
add
inc
loop
inc
push
push
sar
xor
add
and
cmp
or
push
push
les
loopne
jb
pop
in
in
lock
xchg
retf
hlt
clc
cld
mov
pop
mov
add
or
push
adc
cmp
js
cdq
cld
and
test
push
dec
push
test
bound
pop
inc
scas
dec
ret
jg
cmp
mov
jb
test
sub
inc
ins
test
jae
cwde
les
mov
lods
dec
rcl
lods
out
jl
push
loop
rol
add
jno
sbb
in
sub
jl
les
inc
adc
xchg
popa
arpl
icebp
and
or
push
adc
nop
test
push
ret
cs
sbb
dec
les
dec
(bad)
es
js
jle
gs
loopne
data16
cmp
and
add
stos
daa
adc
jns
cmp
cmps
and
mov
mov
popa
mov
push
or
push
add
push
(bad)
out
add
pusha
jnp
ret
in
loopne
iret
test
pusha
sbb
test
pop
or
repnz
cmp
loope
push
or
iret
in
mul
adc
add
pop
xor
inc
into
pop
popa
push
ds
les
add
repnz
xchg
inc
jle
or
fcmovnbe
jmp
adc
repz
(bad)
or
ja
push
push
jbe
pop
inc
xor
test
and
or
add
fbld
add
xor
cmp
pop
cs
pop
fs
inc
ror
in
je
add
push
fld
dec
lock
push
xor
xchg
inc
xor
mov
(bad)
push
pop
fadd
push
and
push
fadd
jg
out
jle
xor
push
shr
inc
push
xor
out
(bad)
add
out
fcmovne
les
ds
jle
or
fsub
push
jbe
dec
ret
and
jne
in
pop
jmp
ss
cmp
mov
mov
xor
or
shr
loope
sbb
cmp
in
adc
jb
repz
push
rcl
inc
ins
and
add
scas
lods
sbb
add
mul
arpl
movs
add
enter
test
mov
lods
sbb
mov
frstor
jnp
sbb
push
and
jp
fbstp
pusha
ja
or
inc
xchg
add
mov
xchg
xor
xchg
outs
pop
inc
nop
push
mov
movs
cmp
add
loopne
cmps
outs
mov
jp
cmp
jne
inc
adc
xor
repnz
rcr
push
fidiv
jmp
push
cmp
push
jmp
push
daa
sub
xlat
adc
(bad)
cs
cmps
mov
sub
push
dec
mov
mov
pop
push
or
or
dec
aam
es
xchg
retf
in
or
call
neg
clc
add
dec
test
mov
push
adc
loop
xchg
out
rcl
data16
or
cs
les
sub
bound
xchg
or
xchg
xor
pop
(bad)
cmp
jne
fisub
popa
jae
(bad)
or
push
inc
push
stc
mov
add
and
mov
adc
mov
cmp
dec
cmp
clc
adc
inc
fwait
mov
pop
add
lea
sbb
mov
mov
mov
(bad)
dec
js
iret
push
sub
int3
or
and
add
data16
mov
daa
add
ja
aas
(bad)
jns
dec
adc
paddusb
ror
in
aam
sbb
adc
add
leave
sub
lock
ror
adc
mov
sti
mov
pop
or
cmps
daa
mov
or
add
sahf
adc
xor
add
outs
imul
jne
imul
xor
jl
lods
adc
xor
and
sub
fcom
and
xchg
dec
pop
ficomp
dec
es
fs
lock
or
adc
mov
and
dec
lock
dec
outs
add
inc
dec
fisub
pushf
mov
enter
nop
popa
test
in
and
dec
jnp
fcmovnbe
scas
or
fadd
adc
pushf
dec
or
mov
in
or
sbb
in
clc
inc
rcr
fsub
xor
dec
aaa
inc
(bad)
fwait
aaa
and
pop
arpl
push
jbe
fcomp
push
inc
aas
mov
movs
or
dec
cmp
cmps
adc
jbe
xchg
sbb
dec
cwde
(bad)
inc
pushf
or
fs
adc
and
pop
dec
add
loope
in
aaa
leave
inc
inc
inc
mov
dec
repnz
adc
data16
shl
ja
and
hlt
sub
adc
dec
cmp
pop
xor
outs
fdivp
jne
movs
and
xchg
fcomi
psubusb
in
mov
xchg
adc
aam
xor
addr16
adc
loopne
scas
in
dec
jnp
call
fs
icebp
xor
outs
hlt
out
aas
pusha
xor
loopne
in
loope
mov
lahf
fisttp
in
imul
dec
mov
popa
mov
adc
fdivr
fs
mov
mov
mov
push
stos
(bad)
div
outs
and
mov
pop
js
fadd
fwait
xor
push
(bad)
in
mov
imul
push
aaa
in
punpckhbw
shl
mov
sbb
fst
xor
in
dec
mov
popa
movs
test
movs
jmp
mov
daa
addr16
je
cmp
xchg
cwde
daa
inc
ins
loope
in
push
mov
sbb
fdivr
push
test
scas
inc
inc
push
sub
add
in
xchg
nop
cmp
lock
mov
mov
fcmovbe
xlat
pop
daa
push
test
sbb
lea
rcr
xchg
ret
jp
mov
sbb
adc
xor
xor
or
fld
repnz
nop
call
mov
fs
pop
mov
mov
int3
mov
aaa
or
xor
push
sbb
xchg
mov
inc
test
mov
mov
and
ud0
push
das
cmp
jg
in
push
mov
xchg
sbb
cmc
scas
inc
popw
dec
jg
mov
stos
pop
jg
pop
pop
push
inc
jno
iret
sbb
pop
lea
jmp
cli
mov
add
pop
dec
sub
outs
pusha
daa
in
dec
les
aas
loope
xchg
lea
nop
mov
shl
(bad)
mov
addr16
fdiv
pop
push
pop
daa
or
sub
add
mov
ret
sub
adc
ja
test
pop
das
pusha
daa
mov
outs
mov
inc
jmp
add
xchg
jmp
adc
daa
(bad)
pusha
push
and
mov
nop
and
mov
(bad)
dec
pop
shr
mov
pop
aaa
sbb
jbe
enter
mov
mov
push
out
and
mov
push
push
pop
jb
xor
in
xchg
sbb
daa
call
adc
jle
cs
dec
mov
jb
pop
pusha
fist
pop
lods
cmps
push
xchg
or
in
aam
add
shr
inc
xchg
adc
sbb
ficomp
sub
push
mov
pop
mov
ins
pop
(bad)
in
or
pop
pop
mov
scas
push
aam
daa
aas
adc
add
push
cmp
sbb
(bad)
ja
test
in
mov
(bad)
mov
fmul
adc
movs
sbb
js
shl
cmps
popf
into
sbb
in
and
or
mov
and
pop
lock
fs
lock
push
in
lock
shl
and
je
shr
aas
paddsb
arpl
cmps
loop
fmul
push
fs
ja
call
loop
popa
test
push
inc
adc
sbb
lea
and
leave
dec
sti
fwait
rcr
mov
mov
enter
aas
and
mov
dec
mov
mov
pusha
bound
adc
jl
sub
mov
push
dec
data16
mul
and
add
fsubr
mov
ins
mov
aam
push
inc
inc
out
enter
fs
jle
loop
lock
sbb
mov
mov
inc
(bad)
jl
test
in
or
daa
scas
or
push
mov
add
ins
push
clc
jb
into
sub
addr16
or
fnstenv
dec
iret
sub
outs
mov
sub
mov
(bad)
adc
xchg
mov
clc
gs
mov
pop
mov
das
inc
adc
mov
popa
or
xchg
dec
add
pop
lock
repnz
mov
pop
and
outs
inc
mov
add
push
pop
in
inc
add
bound
sub
pusha
fidiv
push
adc
outs
rcr
cdq
fs
outs
scas
lock
dec
lock
sbb
adc
(bad)
and
xchg
das
mov
loopne
xor
movs
popf
sbb
pop
dec
adc
pop
movs
lea
pop
sub
push
mov
imul
mov
lods
cmc
cwde
jl
xchg
xor
gs
add
mov
mov
pushf
scas
(bad)
xchg
xchg
jecxz
push
(bad)
iret
dec
imul
adc
dec
cmp
add
fwait
inc
mov
ror
ja
fadd
add
dec
xlat
out
ins
mov
push
bound
fbld
test
outs
mov
adc
call
mov
push
add
sbb
ret
nop
xchg
leave
pop
sbb
or
ss
les
sar
hlt
outs
mov
pushf
inc
push
cmp
lods
push
mov
gs
fxch
dec
xor
add
inc
cmp
push
in
in
in
push
in
push
in
in
in
rol
inc
in
sub
je
sub
dec
and
js
pop
lods
outs
ja
aaa
jno
mov
ror
test
dec
fadd
ret
xor
xchg
dec
add
fwait
adc
stos
repnz
xchg
dec
jo
fidiv
leave
js
pushf
daa
add
jbe
push
shl
pop
jb
loopne
or
adc
push
pop
dec
ja
mov
jno
push
lock
dec
fdiv
arpl
fcomp
sub
xlat
rcl
or
mov
popf
xor
gs
xchg
add
fnstenv
enter
dec
jp
mov
push
cs
cmp
arpl
(bad)
mov
jo
dec
jp
mov
mov
shl
sti
add
push
enter
mov
mov
jae
mov
daa
scas
scas
or
sub
xor
cdq
mov
adc
or
jl
mov
jecxz
mov
daa
add
dec
jb
sahf
ins
in
or
or
(bad)
in
jne
mov
call
data16
fsub
lods
jmp
cmp
and
adc
test
lea
jbe
add
dec
mov
js
add
cwde
and
ja
jg
push
icebp
stos
pop
lock
imul
ds
jl
sbb
xor
xchg
jmp
inc
or
and
(bad)
pop
dec
cwde
jge
cmps
mov
xor
mov
aas
rcl
xchg
xchg
aam
cmps
pop
loop
sbb
aaa
paddusb
push
js
mov
cmp
xchg
pop
(bad)
in
stos
sub
cmp
movs
in
cs
pop
sub
test
mov
es
mov
outs
mov
pop
mov
xor
aam
rol
bound
sbb
in
fnstsw
dec
mov
push
in
aam
mov
sbb
xlat
push
pop
xchg
dec
mov
enter
xor
rcl
add
mov
(bad)
addr16
sbb
es
mov
mov
pop
dec
sub
or
push
or
cmp
mov
mov
daa
fwait
mov
fs
add
inc
xor
mov
sbb
add
aad
sub
imul
(bad)
and
ins
push
aaa
dec
mov
push
mov
or
add
mov
inc
or
repz
and
pop
loopne
aam
push
cdq
mov
mov
enter
movs
pop
stos
iret
mov
jg
add
adc
inc
push
int3
xchg
jne
movs
or
test
jmp
xor
push
adc
cmp
and
xchg
cmp
lahf
movs
jnp
jno
test
xchg
inc
add
pop
jae
cmps
add
test
fdivr
push
mov
or
xchg
xor
add
in
push
in
nop
xchg
jbe
outs
sahf
sub
das
bound
push
bound
and
mov
sbb
or
daa
add
mov
bound
pop
push
push
sti
pop
fidivr
jo
mov
add
or
or
movs
dec
mov
mov
push
adc
jo
cmp
mov
test
and
cmp
ja
sub
and
addr16
test
mov
add
xchg
inc
daa
daa
add
mov
pop
ficom
movs
cmp
test
dec
imul
adc
fistp
enter
fsubr
loopne
call
in
mov
loopne
add
xchg
pop
les
xchg
les
lock
add
outs
fcmovnu
or
test
push
loopne
cmp
(bad)
scas
jg
daa
mov
cdq
cmp
(bad)
adc
gs
jns
mov
pop
mov
inc
outs
rcl
les
xchg
daa
in
xchg
dec
mov
or
xlat
or
push
out
xchg
dec
in
add
inc
adc
xchg
imul
adc
push
pop
mul
movs
push
(bad)
and
and
movs
and
jnp
adc
sbb
das
mov
jmp
or
cmps
mov
jg
sub
pop
(bad)
in
inc
test
and
movs
movs
call
mov
clc
inc
call
xchg
in
(bad)
jl
aaa
push
movs
sub
add
popa
and
pop
inc
dec
pop
call
cmps
and
pop
mov
fcomp
(bad)
pop
push
adc
pushf
addr16
inc
jb
or
in
inc
xchg
xchg
out
and
or
inc
push
in
push
nop
sbb
pop
mov
pop
mov
shl
out
cmovno
stos
push
nop
pop
push
xor
aam
shr
out
mov
out
scas
(bad)
fcomp
fsub
adc
imul
and
pop
add
(bad)
fsub
jp
jnp
call
jl
mov
fs
pop
fsub
lock
dec
es
lock
push
lock
push
lock
and
sub
movs
adc
adc
in
daa
xchg
(bad)
call
(bad)
sbb
cmp
inc
ds
or
mov
mov
(bad)
dec
inc
fdiv
sub
shr
(bad)
fimul
xchg
out
sub
pop
cmp
cwde
out
push
daa
mov
or
xchg
fcom
jg
pop
push
mov
xchg
xchg
xchg
jne
in
seto
ins
mov
shl
into
xchg
out
push
pop
movs
ins
and
mul
sub
das
pushf
pop
(bad)
pop
ins
xchg
sbb
fidiv
pop
dec
cwde
dec
push
sbb
mov
dec
xchg
jbe
sub
dec
cs
add
lahf
cdq
dec
ins
cdq
inc
xor
push
inc
hlt
push
fcomp
ret
sub
(bad)
xor
ss
push
mov
loope
ins
outs
or
jb
fwait
or
push
fs
jb
nop
mov
call
adc
adc
push
jb
ins
cmp
lods
pop
dec
dec
pop
and
aad
or
scas
call
xchg
daa
mov
pop
repnz
call
mov
aaa
add
push
stos
xchg
and
mov
adc
into
cmps
les
sub
sbb
add
fidivr
sbb
pop
jb
or
or
inc
mov
fs
stc
int
push
sbb
es
or
inc
std
popa
pushf
or
sahf
fs
retf
addr16
sbb
rcr
and
sbb
adc
sub
sti
test
pop
sbb
push
call
mov
idiv
mov
xchg
neg
sahf
and
pop
push
call
mov
ret
push
sub
push
dec
lahf
pop
movs
daa
xchg
dec
cmp
dec
and
aad
push
aaa
ret
pop
icebp
pop
in
jmp
sub
sbb
sub
mov
adc
or
sbb
mov
mov
cwde
or
test
pop
fbstp
iret
push
icebp
shl
xor
push
mov
mov
daa
jmp
inc
mov
dec
scas
(bad)
push
in
push
call
in
call
in
call
push
call
in
call
in
call
push
call
or
xchg
lahf
adc
loopne
add
jnp
cmp
fcom
mov
call
lds
mov
dec
xchg
sub
sbb
add
xchg
js
call
movs
movs
sub
add
xor
push
lods
mov
daa
rol
jbe
xchg
rol
xchg
popf
xchg
aaa
inc
cmps
(bad)
and
cmps
cmps
lds
in
push
adc
test
or
xchg
je
cmps
pop
mov
jl
lahf
jmp
mov
imul
daa
mov
neg
test
inc
daa
mov
lods
test
or
aad
dec
daa
hlt
fdiv
and
or
iret
sub
push
imul
nop
mov
dec
push
inc
fdiv
mov
cmp
into
or
test
mov
dec
add
and
xchg
sbb
mov
add
ja
dec
dec
enter
stos
es
and
pop
mov
push
int3
cmp
pop
or
stos
add
mov
mov
popa
fsub
call
js
imul
xchg
mov
jl
es
in
sbb
sbb
adc
outs
mov
push
fidivr
loopne
mov
loopne
dec
(bad)
mov
and
pop
cmps
lock
ficomp
pop
lods
sbb
push
pop
into
inc
xchg
sub
or
mov
push
daa
or
dec
fcmovbe
test
dec
daa
pop
mov
nop
(bad)
in
ins
and
jg
xchg
sbb
sti
adc
push
adc
mov
xchg
hlt
and
add
cmp
mov
cmps
(bad)
in
push
adc
adc
inc
mov
mov
nop
ss
(bad)
es
push
loope
xchg
iret
aam
xchg
popa
mov
push
sub
mov
inc
scas
movs
ret
lahf
lock
inc
push
fs
cmps
pusha
xchg
add
aam
jbe
pop
ret
enter
dec
scas
in
ss
mov
push
jb
(bad)
inc
(bad)
js
sbb
sub
call
mov
adc
jle
loop
inc
sub
mov
dec
mov
in
inc
clc
mov
icebp
cmp
or
sbb
sbb
jg
adc
mov
aas
scas
xchg
movhps
cdq
in
push
sub
sub
pop
push
fdivr
aam
ins
dec
mov
mov
daa
pop
mov
adc
or
inc
jl
fild
xor
les
in
mov
call
pushf
jecxz
xlat
adc
push
enter
daa
cmp
pop
nop
ins
pop
or
outs
imul
sub
jns
adc
xchg
pop
cld
in
rcl
adc
mov
push
das
mov
jecxz
ins
sub
cwde
adc
cmps
adc
mov
or
adc
push
push
and
iret
imul
push
cmp
cwde
daa
test
xor
xchg
pop
push
clc
mov
add
mov
dec
mov
xor
pop
shr
push
les
and
mov
inc
js
mov
jo
push
aaa
in
cmps
adc
inc
pushf
rcr
in
cwde
mov
mov
daa
cmp
aas
call
push
ror
das
jb
test
fs
mov
fiadd
outs
mov
loop
loopne
push
aad
adc
or
aaa
xchg
cs
std
inc
push
nop
push
(bad)
js
cwde
movs
push
rol
push
pop
mov
enter
outs
or
pop
sbb
call
mov
add
xlat
xchg
stos
js
mov
mov
push
jle
dec
test
cmps
dec
int3
outs
inc
mov
lods
mov
push
adc
sar
rcr
or
int3
pop
sbb
shr
adc
call
mov
and
mov
rcl
mov
mov
sbb
push
enter
scas
sbb
movs
pop
add
out
inc
int3
ret
fcomp
push
(bad)
stos
rol
in
sbb
or
mov
sbb
add
xchg
mov
in
push
iret
inc
daa
shl
cli
or
dec
xchg
or
mov
imul
pop
sub
xor
add
fs
sbb
jmp
xchg
inc
aam
sbb
iret
rol
pop
out
icebp
adc
sbb
inc
sar
lock
shr
adc
nop
ins
(bad)
xchg
mov
pop
pop
push
adc
je
push
push
jnp
push
add
sbb
dec
cmp
pop
es
mov
cmp
arpl
inc
ja
xor
mov
test
pusha
arpl
cwde
sub
push
ja
test
or
fs
and
dec
and
call
adc
outs
dec
jne
mov
pushf
scas
sub
sahf
sbb
pop
mov
and
fadd
dec
add
cmp
mov
int3
test
(bad)
dec
or
mov
mov
lock
aaa
fs
mov
(bad)
daa
sub
shr
push
aam
sbb
sbb
cld
inc
ins
push
or
sub
push
js
daa
push
mov
push
push
mov
inc
nop
or
mov
jmp
pop
lock
sbb
sahf
adc
test
adc
adc
outs
scas
ss
or
int3
aas
or
repnz
push
push
movs
mov
daa
xchg
push
pop
test
popf
rcl
fadd
mov
push
xchg
mov
(bad)
lds
cmp
adc
xlat
xchg
ss
test
xchg
sub
add
inc
or
or
popa
and
add
inc
retf
les
jg
push
sub
and
out
retf
shl
xchg
int3
add
inc
ja
(bad)
fwait
(bad)
mov
sub
dec
add
fsub
push
jnp
xchg
out
in
retf
loop
dec
push
out
int3
scas
push
cmp
mov
iret
jo
fbld
ds
pop
jno
das
or
repnz
xor
enter
inc
loop
aam
push
add
clc
int3
nop
retf
test
fdivr
js
xchg
test
xchg
add
lock
pop
or
(bad)
jg
jl
cmp
mov
(bad)
into
daa
cmp
push
xchg
or
push
mov
enter
sub
sahf
mov
jg
xchg
sub
mov
ret
mov
(bad)
lahf
add
pop
push
and
ja
dec
pop
dec
in
xchg
ins
iret
mov
or
dec
iret
pop
add
pop
fadd
inc
jb
popa
cmp
outs
push
mov
js
pop
bound
adc
push
sbb
pop
fwait
jge
mov
test
mov
cmp
daa
aaa
push
xor
ss
(bad)
mov
iret
mov
add
lock
sub
test
sbb
rcl
jbe
mov
dec
mov
pop
inc
ins
push
nop
mov
inc
dec
mov
xor
pop
fiadd
push
jle
sar
shl
sbb
sub
movs
inc
fadd
mov
shr
xlat
neg
mov
pop
ins
sub
mov
nop
push
das
mov
inc
(bad)
in
fcom
mov
mov
add
inc
adc
push
jb
jp
fdiv
or
xor
ret
retf
sbb
mov
jmp
jmp
xor
mov
(bad)
push
lock
movs
or
mov
or
mov
ds
test
mov
test
aas
mov
add
dec
test
aam
dec
add
sub
add
push
push
mov
ins
xor
push
add
add
iret
pop
or
iret
repz
pop
and
iret
repz
xor
repz
inc
dec
dec
push
pop
popa
cmp
repz
imul
cmp
repz
mov
iret
xchg
popf
mov
iret
repz
mov
cmp
repz
jecxz
jmp
out
icebp
sti
add
pop
sahf
out
sahf
or
and
xor
cmp
out
pop
pop
popa
addr16
out
sahf
outs
jne
jg
lea
out
xchg
cdq
mov
sahf
out
mov
ror
out
sahf
int
rcr
out
xor
out
repz
or
or
cmp
repz
iret
repz
cmp
push
push
pop
cmp
repz
imul
add
mov
cmp
repz
iret
xlat
fucom
stc
cmp
repz
cmc
stc
add
out
sahf
cmps
add
sahf
out
sahf
xor
push
jns
out
pop
pop
pop
ins
jno
jns
out
ja
(bad)
xchg
sahf
out
sahf
mov
(bad)
jns
out
retf
rcl
(bad)
inc
in
push
loopne
xchg
fs
inc
(bad)
arpl
sub
(bad)
jae
mov
mov
sbb
test
test
fucomip
enter
test
lahf
sahf
pop
lock
cmp
fst
call
(bad)
test
mov
mov
mov
xor
outs
inc
daa
aas
rcl
fsubrp
xlat
ds
push
mov
daa
xor
dec
(bad)
mov
pop
in
(bad)
into
fcmovbe
loope
xchg
das
xchg
and
cli
jb
dec
dec
(bad)
mov
out
xor
push
xlat
das
mov
int
pmaddwd
adc
das
(bad)
push
out
es
out
nop
aaa
ins
fcmovne
and
pop
and
or
outs
ss
ds
popa
inc
cmp
xchg
pop
push
mov
or
enter
mov
dec
inc
fld
dec
fidivr
int
dec
jbe
hlt
call
cmp
(bad)
push
inc
div
lds
cmp
pop
xlat
out
inc
jge
pop
cmp
sahf
out
ins
pop
xor
in
push
jae
adc
sti
cmp
adc
and
lea
push
dec
(bad)
in
aas
sti
xchg
imul
mov
inc
sahf
cmps
push
add
scas
push
les
mov
push
jmp
dec
xor
fwait
ins
xchg
push
inc
cmc
push
inc
fnstcw
frstor
(bad)
push
ins
inc
(bad)
es
jg
mov
mov
adc
(bad)
sub
rol
clc
in
pop
push
aas
pop
inc
movs
fsubr
(bad)
adc
push
int
add
aas
jmp
mov
sub
push
div
in
push
pop
andps
out
adc
inc
ds
mov
scas
mov
outs
inc
jp
repz
neg
push
pop
(bad)
(bad)
jnp
les
fld
adc
pop
mov
mov
or
dec
mov
sub
neg
test
ss
mov
aad
data16
adc
das
mov
dec
adc
cs
push
sbb
fsubr
xor
in
sub
inc
(bad)
clc
cdq
adc
ds
sub
inc
scas
xor
call
outs
cmp
(bad)
shr
add
add
sti
jo
repz
ret
push
mov
retf
loopne
out
inc
loope
mov
out
lods
pop
out
ja
pop
es
aaa
js
push
cmps
(bad)
xlat
jns
pop
push
jbe
icebp
pop
pop
fneni(8087
push
das
jo
push
mov
test
xchg
add
aas
or
jbe
jmp
(bad)
loope
sti
mov
jge
inc
lods
or
(bad)
pop
ins
les
mov
out
(bad)
in
loope
push
mov
daa
iret
repz
mov
iret
repz
movs
out
adc
mov
and
nop
push
jg
mov
out
jns
adc
push
lea
pusha
retf
out
mov
cmp
data16
int3
push
xchg
in
inc
mul
mov
popf
push
pop
pop
cmc
shrd
dec
test
ss
push
jae
xchg
arpl
mov
inc
pop
imul
loopne
lock
lds
sub
mov
dec
loopne
adc
push
sahf
pop
outs
lock
add
dec
les
aaa
or
fimul
add
sub
xor
fst
add
add
(bad)
fucom
push
add
pop
cs
fiadd
pop
pop
add
jne
ja
out
xor
mov
div
or
pop
sub
je
sbb
aaa
add
fisub
sbb
fs
aas
inc
add
push
arpl
outs
(bad)
(bad)
repz
inc
gs
fdivrp
adc
fnstenv
push
sub
mov
sbb
neg
in
xchg
and
cmc
in
in
idiv
or
in
in
fs
jg
jmp
jbe
jb
lock
jg
in
test
fdiv
(bad)
mov
inc
pop
scas
adc
inc
daa
neg
cmp
jns
xchg
femms
loopne
inc
mov
loope
dec
loop
daa
daa
and
jecxz
repz
dec
enter
popf
int3
in
out
in
sbb
(bad)
call
lahf
mov
push
in
xor
cmp
sbb
(bad)
(bad)
or
in
clc
inc
jle
add
xchg
xor
ja
(bad)
(bad)
(bad)
jmp
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
(bad)
(bad)
(bad)
(bad)
jmp
rcl
mov
sub
mov
sbb
dec
(bad)
(bad)
(bad)
push
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
imul
(bad)
(bad)
stc
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
or
outs
cmp
imul
pusha
aad
jno
mov
inc
aam
dec
std
test
movs
cli
test
xor
(bad)
hlt
(bad)
(bad)
dec
mov
lods
jecxz
fdiv
jne
fild
or
shr
cmp
(bad)
call
push
adc
push
popa
sar
and
mov
cdq
xchg
mov
mov
(bad)
(bad)
(bad)
dec
mov
(bad)
and
or
adc
stos
sbb
data16
inc
fdiv
(bad)
(bad)
inc
jno
add
aad
mov
mov
movs
in
lahf
xor
mov
js
mov
push
test
xchg
sbb
push
sub
(bad)
dec
xchg
ins
fs
add
hlt
push
imul
ins
sbb
xor
dec
add
in
xchg
push
ins
jnp
add
(bad)
(bad)
call
shl
adc
cmc
(bad)
fnstenv
adc
mov
mov
bound
(bad)
aaa
cld
call
gs
aam
pop
popa
mov
into
pop
cmp
mov
inc
movs
(bad)
(bad)
jg
fisttp
xchg
fadd
(bad)
shl
jmp
outs
xor
mov
sar
(bad)
push
add
in
add
pop
dec
or
cmp
add
daa
adc
or
(bad)
(bad)
(bad)
jmp
test
or
mov
popa
into
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
(bad)
(bad)
(bad)
call
cmp
mov
cmp
lods
ins
mov
in
mov
mov
add
(bad)
(bad)
(bad)
cmp
jmp
fild
push
fdiv
or
test
fs
ds
or
(bad)
(bad)
(bad)
dec
iret
push
in
dec
xchg
daa
scas
add
mov
pop
jge
xchg
(bad)
shl
add
inc
push
imul
xor
sbb
push
imul
aam
(bad)
(bad)
mov
ficom
int3
dec
frstor
fistp
mov
mov
aad
(bad)
(bad)
(bad)
push
(bad)
jle
shl
push
repnz
addr16
cmps
fld
mov
dec
ss
(bad)
(bad)
push
fmul
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
(bad)
(bad)
(bad)
jmp
mov
mov
outs
and
xchg
ja
int3
add
mov
das
es
(bad)
(bad)
inc
lds
or
sub
mov
cmps
call
ret
shl
sbb
(bad)
ficomp
ret
es
pushf
mov
ins
add
ss
jmp
addr16
jb
push
(bad)
(bad)
call
or
adc
mov
jnp
sbb
xchg
or
(bad)
(bad)
(bad)
(bad)
out
fdivr
fisttp
aam
rol
clc
mov
push
int
mov
mul
(bad)
dec
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
(bad)
inc
imul
push
js
or
push
add
mov
(bad)
(bad)
(bad)
(bad)
cmp
cmps
not
pusha
ror
imul
push
scas
fcomp
fldenv
fild
cmp
(bad)
(bad)
(bad)
push
push
scas
mov
fidivr
mov
jmp
repnz
retf
mov
cmps
mov
jmp
push
xlat
int
push
ficom
fldenv
cs
mov
dec
popa
les
sbb
xchg
sub
ret
sub
mov
or
sbb
add
sub
cmp
repz
pop
nop
jg
out
retf
(bad)
(bad)
(bad)
inc
xchg
out
(bad)
(bad)
jmp
pop
jns
add
adc
iret
jnp
ds
pop
das
jo
leave
repz
mov
rcl
fcmovne
leave
pusha
and
outs
daa
daa
daa
inc
loopne
aas
pop
leave
repz
dec
sbb
iret
leave
leave
js
rcl
pushf
pushf
pushf
pushf
push
pushf
pushf
pushf
mov
jnp
fistp
push
unpcklps
push
jb
sub
out
in
jbe
aas
fs
pop
daa
daa
mov
mov
or
dec
outs
aas
pop
sbb
push
loop
in
push
jl
fmul
cs
sub
dec
dec
dec
dec
or
dec
clc
dec
dec
dec
dec
add
mov
and
les
dec
dec
or
movs
dec
dec
dec
dec
add
dec
dec
pop
pop
sbb
jp
aam
dec
dec
dec
adc
mov
dec
dec
dec
or
dec
dec
add
in
in
xor
in
in
int3
pcmpgtd
in
in
lods
push
xchg
in
in
or
in
in
pushf
arpl
leave
leave
in
in
sbb
outs
cs
daa
mov
mov
dec
cld
daa
push
pop
push
call
adc
push
dec
dec
cs
popa
and
add
in
pop
sbb
jns
shl
in
in
sub
in
dec
repnz
or
dec
adc
mov
xor
cmp
and
or
cmp
pop
cmp
jge
xchg
xchg
or
fisubr
xchg
xchg
xchg
xchg
mov
sbb
inc
in
in
jae
(bad)
in
popf
fsubr
arpl
and
pop
xor
pop
enter
sbb
pushf
cmp
imul
leave
leave
sub
enter
push
pop
jb
jb
ja
into
daa
daa
daa
pop
addr16
scas
pop
and
daa
daa
xchg
pop
jb
jb
pop
sahf
jg
and
daa
aas
fisubr
xchg
fucomi
in
mov
dec
push
test
leave
inc
xor
and
xchg
rol
xor
leave
leave
test
xchg
cdq
fst
inc
xor
and
leave
in
aad
inc
xor
leave
inc
int
inc
xor
and
leave
fnstsw
xchg
ret
mov
jecxz
inc
xor
leave
inc
leave
repz
stos
xor
and
leave
inc
fstp
sti
(bad)
adc
inc
xor
dec
and
mov
inc
leave
inc
test
scas
out
adc
inc
xor
dec
and
inc
sbb
pmaxub
adc
xor
out
push
add
mov
repz
pop
inc
jg
push
pop
test
push
and
push
sahf
cmps
push
or
daa
mov
repz
add
enter
sbb
pop
ins
fidiv
xor
popa
jg
dec
xor
or
(bad)
lock
mov
fist
dec
fistp
out
add
fdiv
pop
out
test
cmps
outs
push
outs
mov
or
(bad)
aaa
add
push
cmps
push
mov
or
out
bound
sbb
pop
sahf
out
sahf
and
xor
inc
push
jns
out
arpl
mov
in
add
add
add
mov
or
mov
add
shl
or
push
dec
xchg
sahf
daa
icebp
icebp
cmp
pop
push
xchg
(bad)
arpl
push
pop
(bad)
mov
add
mov
mov
lahf
add
leave
leave
pop
or
or
leave
leave
leave
or
pop
mov
inc
sti
rol
and
pop
mov
cmp
out
push
loopne
mov
cmp
pop
xor
cld
aas
in
out
sahf
rcl
ds
repz
cwde
js
cld
cmp
sahf
push
mov
jo
and
mov
cmp
push
int3
movs
iret
repz
mov
cmp
in
out
call
cmp
sar
aam
cwde
push
dec
and
aaa
cmp
test
out
sahf
mov
or
cmp
sar
push
jl
and
aaa
fmul
repz
mov
in
repz
mov
pushf
mov
call
ins
dec
repz
inc
and
clc
xor
rcr
sbb
xor
jns
out
mov
push
fucom
add
xor
test
int
jns
adc
xor
mov
js
add
shl
push
movs
sahf
out
cmp
cmp
das
enter
out
je
and
cs
or
adc
xor
aad
dec
sub
jns
pop
pop
sbb
cmp
xchg
out
in
or
cmp
scas
push
sbb
sahf
ja
jns
and
addr16
ja
jns
and
inc
cs
push
jno
xor
popf
cmp
jmp
jns
js
dec
pop
or
bound
cmps
lock
ins
mov
das
daa
pop
aaa
adc
out
inc
aas
sbb
cmp
cmps
outs
pop
adc
mov
add
arpl
frstor
test
psubb
add
add
add
cmp
adc
push
adc
pop
and
adc
inc
adc
xor
xor
sbb
(bad)
(bad)
jmp
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
(bad)
(bad)
call
mov
pop
pop
arpl
addr16
jne
ja
jns
add
(bad)
dec
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
inc
mov
leave
retf
aam
(bad)
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
and
outs
push
rol
adc
scas
adc
ins
push
adc
pop
popa
jno
and
adc
jb
mov
and
push
lock
loope
icebp
or
push
or
jae
sbb
add
add
outs
and
cmps
or
bound
jo
mov
or
dec
dec
mov
adc
inc
jb
dec
dec
adc
push
or
(bad)
sub
sub
sbb
push
push
adc
jns
out
cmp
xor
and
jns
out
push
movhps
sahf
out
sahf
and
xor
sahf
out
sub
out
sahf
out
cmp
ss
mov
jns
aaa
ds
xlat
and
mov
scas
sahf
pop
push
add
std
repz
repz
stc
icebp
loope
and
(bad)
cld
clc
lock
jns
loopne
cmp
std
cmp
lds
push
inc
dec
fmul
mov
and
jae
push
push
mov
sbb
sbb
push
bound
mov
inc
sub
ins
push
sbb
push
and
mov
(bad)
int3
adc
outs
push
ss
and
sbb
jnp
xor
push
push
sbb
popa
xor
xor
sbb
add
(bad)
aas
addr16
out
popa
dec
mov
xor
aas
retf
xchg
scas
out
aas
stos
adc
psubq
(bad)
shl
aas
aas
cmp
jmp
jnp
push
loope
pop
stos
jb
xchg
jle
ficom
rol
xor
or
cmp
add
mov
iret
aas
inc
dec
sbb
(bad)
(bad)
jg
mov
(bad)
dec
mov
shr
sbb
and
adc
das
out
pop
fbld
ins
pushf
pop
(bad)
(bad)
(bad)
jmp
outs
lahf
pop
or
cmp
add
xor
or
cmp
pop
(bad)
aaa
test
(bad)
(bad)
dec
inc
mov
sub
sbb
and
adc
sub
sbb
daa
out
xlat
test
cwde
pop
movs
fs
push
(bad)
(bad)
(bad)
jmp
addr16
push
add
xor
push
into
inc
shl
or
inc
mov
mov
jle
mov
mov
mov
shr
out
push
fdivrp
(bad)
(bad)
jmp
loope
shr
bound
pop
mov
ins
popf
pop
or
cmp
push
(bad)
ss
(bad)
(bad)
dec
leave
cmp
add
dec
mov
jbe
dec
mov
jne
jmp
add
(bad)
jmp
jmp
adc
pop
cmps
xchg
push
test
gs
push
sub
add
fistp
dec
inc
aam
mov
jne
daa
inc
pop
sub
repz
push
cmps
aas
es
mov
jle
aas
adc
xor
mov
popa
je
and
add
inc
outs
jo
jb
addr16
xor
jmp
gs
outs
sub
and
imul
mov
xor
push
inc
call
push
or
push
push
and
add
fnsave
inc
cmp
das
pop
add
into
cmc
call
not
out
fiadd
adc
adc
xchg
adc
enter
nop
inc
add
push
push
(bad)
mov
pop
or
or
or
jns
test
push
jp
push
dec
int3
out
sahf
out
lods
ins
in
sbb
out
sahf
pushf
pop
fdivr
jl
sahf
out
cld
add
sahf
out
mov
out
sahf
xchg
push
shl
mov
jns
out
repnz
sahf
out
stos
push
sbb
pop
fidivr
mov
jns
push
xchg
out
sahf
out
cmps
data16
sahf
out
sahf
xchg
push
(bad)
ss
jns
out
test
dec
into
out
sahf
out
scas
outs
out
push
sahf
out
sahf
sahf
pop
fidivr
mov
jns
add
sahf
out
mov
out
sahf
xchg
push
shl
mov
jns
out
icebp
or
sahf
out
test
out
sahf
cdq
pop
fnstcw
mov
jns
add
jns
out
movs
gs
sahf
out
sahf
xchg
push
aad
mov
jns
out
cmc
or
jns
out
lods
ins
in
sbb
popf
pop
fnstsw
loopne
std
adc
iret
repz
xchg
push
push
rcl
xor
repz
mov
jae
repz
repz
mov
repz
mov
retf
retf
sub
repz
stos
stos
imul
iret
repz
sbb
fwait
iret
repz
fwait
pop
pop
fcmovnu
cmp
repz
mov
cmp
repz
sti
pop
pop
xchg
repz
xchg
mov
cmp
cmps
cmps
addr16
repz
pop
pop
xchg
iret
repz
xchg
push
push
xlat
xlat
aaa
cmp
repz
mov
ja
repz
repz
(bad)
jg
(bad)
dec
dec
iret
iret
das
cmp
repz
scas
scas
outs
outs
repz
repz
out
pop
pop
lahf
iret
repz
lahf
pop
pop
(bad)
aas
cmp
repz
mov
mov
xor
and
jns
out
adc
jo
out
sahf
or
push
out
cmp
inc
and
jns
out
adc
xor
jns
out
add
and
arpl
cli
out
push
iret
repz
or
add
or
cmp
repz
adc
sbb
repz
repz
push
push
add
cmp
cmp
or
add
cmp
repz
or
pop
out
test
pop
cmps
add
add
nop
xchg
xchg
or
or
inc
sub
add
dec
adc
pop
sbb
adc
adc
adc
dec
pop
sbb
cs
inc
leave
adc
add
movs
inc
leave
sbb
mov
mov
jb
jb
adc
adc
popa
and
jb
adc
lahf
scas
mov
(bad)
es
adc
jmp
push
adc
mov
adc
and
cmps
sub
cmp
inc
call
mov
jge
out
or
outs
in
jbe
pop
xor
add
imul
cmp
imul
fs
gs
push
pop
adc
xor
mov
or
xor
daa
mov
dec
out
or
dec
test
dec
jo
adc
pop
add
in
jns
ds
push
popf
neg
outs
add
cmp
fwait
psubw
inc
fistp
lahf
jecxz
fnstsw
add
push
cmp
cs
inc
int3
push
fcomp
sbb
jbe
push
pusha
jmp
out
dec
clc
pop
repz
mov
leave
aas
mov
aas
or
fld
cmp
inc
fild
(bad)
jg
sbb
sbb
loope
adc
inc
loope
jno
add
push
mov
out
xor
adc
lods
sbb
or
(bad)
inc
sub
sbb
jnp
jp
out
xchg
and
call
xchg
sbb
push
xchg
fcomip
push
jecxz
mov
in
push
or
iret
in
aas
je
pushf
mov
std
lahf
sbb
stc
into
rol
aas
inc
gs
sar
mov
paddq
pop
pop
je
inc
pop
jle
push
add
das
or
dec
icebp
mov
push
jo
out
repnz
adc
dec
test
fsubr
aad
jmp
fmul
in
jmp
iret
mov
adc
push
push
out
scas
add
cmp
popf
popa
imul
mov
nop
aas
sub
aas
xchg
mov
push
mov
mov
fisttp
lock
add
in
xchg
inc
pop
pop
(bad)
xchg
inc
push
popa
pop
mov
sbb
xor
fstp
mov
push
push
push
mov
outs
arpl
dec
push
dec
inc
pop
jnp
inc
inc
cmp
xor
(bad)
mov
cli
cmp
sub
cmp
aaa
aaa
sub
outs
mov
aaa
inc
es
dec
outs
jo
push
gs
add
xor
das
clc
jmp
int
rcl
scas
or
leave
and
repz
add
push
jg
daa
ja
fcomp
outs
sub
outs
xor
push
out
jmp
add
pop
enter
xchg
sbb
sahf
lods
pop
fild
(bad)
clc
inc
mov
mov
pushf
xchg
je
dec
test
cmp
mov
ja
cmp
(bad)
rol
jg
out
pop
out
add
mov
adc
pop
lahf
enter
sub
mov
lahf
push
lahf
popa
push
pop
(bad)
ins
lahf
out
jns
or
pop
push
das
dec
push
jb
leave
add
test
inc
sahf
fild
mov
xchg
in
mov
in
mov
pop
and
sub
push
cmps
xor
cmp
pusha
popf
das
dec
ja
push
adc
dec
outs
daa
mov
iret
test
repnz
popf
pop
adc
int3
aam
push
jo
(bad)
pmulhuw
das
mov
or
ss
xchg
mov
and
mov
dec
dec
fcom
sahf
pop
mov
push
je
mov
outs
mov
xchg
mov
aaa
in
adc
sbb
or
(bad)
bound
(bad)
fild
push
pop
fistp
pushf
pushf
xor
mov
mov
rcr
add
fbstp
xchg
cmp
cmp
dec
mov
and
inc
outs
in
inc
jb
pop
das
xor
mov
mov
sbb
push
mov
dec
xchg
xchg
xchg
or
leave
add
push
ja
in
jne
ret
push
outs
nop
iret
fmul
leave
in
in
call
data16
loopne
mov
adc
sbb
int3
sahf
pushf
and
mov
mov
sbb
repz
dec
pop
push
mov
pop
dec
loopne
mov
lods
arpl
arpl
loopne
ds
push
sbb
ins
pop
mov
sahf
les
pop
inc
jbe
dec
dec
daa
cwde
adc
daa
test
dec
shl
xor
add
pop
js
fstp
pop
lahf
xor
loope
cwde
mov
jmp
repz
lahf
push
or
test
outs
ud2
das
or
pop
rol
dec
xlat
fsub
dec
push
fdiv
lldt
out
mul
(bad)
dec
(bad)
aas
fbld
loope
xlat
aam
scas
jae
aam
xor
(bad)
je
xchg
in
mov
fisttp
fwait
in
push
pushf
ds
push
(bad)
cmp
adc
sub
(bad)
pop
push
out
fcom
add
push
dec
mov
push
pop
push
lahf
pop
pop
repnz
pcmpgtb
test
in
cdq
js
sbb
add
fs
loopne
push
dec
mov
dec
dec
xchg
pushf
pop
movs
daa
and
(bad)
das
add
and
rol
cmps
ror
pop
add
cmp
addr16
inc
ret
into
or
test
adc
in
mul
jns
dec
add
inc
sahf
or
sbb
imul
sub
daa
push
inc
xchg
or
xchg
inc
ins
push
cmp
or
nop
push
jae
cmp
jnp
xchg
xchg
mov
mov
add
daa
(bad)
ja
clc
sbb
pmulhuw
push
cdq
cmp
add
cmp
adc
cmps
push
pusha
xchg
add
sub
fbstp
aas
cmps
sbb
movs
jb
jb
ins
je
mov
pop
jb
call
cmc
les
push
inc
sar
pop
aam
hlt
pusha
aaa
add
jmp
aas
mov
mov
outs
or
pop
je
fild
adc
sbb
and
pop
ja
push
xchg
(bad)
xor
cmp
inc
mov
push
fdiv
cmps
ror
xor
jbe
mov
inc
cwde
lahf
leave
add
push
mov
add
ror
jae
jmp
add
in
and
or
push
xor
xchg
adc
test
test
jb
leave
add
leave
leave
add
jmp
add
mov
pushf
movs
shrd
in
in
mov
repnz
add
add
pop
in
cdq
in
test
add
xor
cmp
add
les
xor
test
jb
mov
shrd
int3
push
daa
shr
jbe
inc
fsub
aam
enter
das
push
add
or
adc
out
and
add
cmp
enter
dec
out
stos
jns
add
pop
cs
sbb
loopne
mov
add
cmps
mov
ja
jg
push
dec
xchg
test
or
mov
das
fdiv
adc
in
pop
sbb
pusha
dec
dec
sub
inc
outs
lahf
fsubr
add
into
add
push
call
pop
push
jmp
mov
pop
enter
pop
lahf
fsub
cmp
fs
and
adc
aam
cmp
call
pop
push
mov
jb
jl
inc
pop
jb
test
adc
cmp
cmp
dec
mov
nop
dec
dec
cs
dec
ror
dec
cs
push
add
pop
xchg
push
add
lods
test
add
mov
in
leave
leave
leave
leave
enter
popf
in
leave
icebp
cld
pop
scas
inc
pop
mov
sbb
push
pop
lods
fistp
lahf
xchg
ja
and
inc
dec
scas
pop
push
ja
mov
scas
je
jg
iret
leave
repz
mov
rcr
mov
pushf
pushf
pushf
pushf
leave
aam
jmp
pop
scas
leave
add
mov
jns
mov
and
sub
xor
into
mov
in
add
lock
xchg
xchg
or
daa
scas
scas
xor
sbb
nop
out
mov
(bad)
scas
push
outs
cmp
repz
add
(bad)
repz
call
iret
enter
mov
push
xchg
and
sbb
and
das
mov
jb
enter
mov
mov
mov
inc
mov
mov
mov
mov
nop
out
cmp
(bad)
div
mov
in
in
rcr
loopne
out
inc
pusha
jns
cdq
pusha
xchg
hlt
cld
(bad)
mov
cmp
sbb
xchg
mov
mov
cmp
ins
scas
psubsb
aam
jecxz
jecxz
clc
cmps
(bad)
fcom
sahf
sbb
daa
mov
dec
mov
cmp
cmp
pop
mov
popa
call
push
pop
jo
popa
pop
mov
inc
jg
xlat
pop
mov
xchg
dec
mov
fisttp
bt
in
add
leave
add
test
iret
in
jbe
loopne
call
inc
and
and
or
pop
int
ins
ja
xlat
pop
mov
jl
aaa
fisttp
pop
xor
cmp
cmps
movntq
popf
jg
cmovl
push
js
ja
pop
pop
pop
sbb
gs
xchg
or
pop
or
out
cmp
daa
sbb
lahf
js
or
jg
arpl
in
and
fucom
les
push
push
int3
sub
mov
inc
and
xchg
or
and
(bad)
mov
pop
push
adc
out
mov
mov
sub
dec
mov
jmp
jmp
xchg
push
pop
cmp
daa
push
pop
jg
cwde
xchg
(bad)
icebp
add
mov
dec
mov
cs
xchg
xchg
mov
mov
je
pop
and
mov
adc
mov
gs
test
dec
fmul
mov
cs
pop
in
xchg
loopne
mov
pop
ins
int3
inc
and
gs
xchg
or
mov
out
xchg
xchg
mov
push
add
sahf
out
sahf
add
mov
jns
xchg
or
ja
test
xchg
(bad)
int3
xlat
loop
enter
clc
add
cmp
mov
mov
mov
mov
das
nop
dec
nop
push
mov
jo
jae
mov
addr16
or
mov
add
mov
in
mov
mov
(bad)
mov
mov
sahf
fcmovne
xchg
mov
mov
cmps
pop
lods
inc
mov
pop
mov
enter
mov
mov
mov
out
jb
mov
cmps
add
inc
xchg
inc
mov
out
xor
out
jbe
das
mov
add
mov
repz
fsubr
rcr
or
pop
enter
outs
vmread
xchg
adc
and
mov
xchg
or
push
or
xchg
or
xchg
or
xchg
push
pushf
ins
in
or
rol
xchg
or
add
mov
add
in
mov
or
ja
daa
push
push
mov
add
mov
pusha
stc
pop
xchg
lahf
fmul
adc
int
(bad)
enter
and
in
hlt
and
in
loopne
adc
rcr
or
daa
cmp
or
adc
xchg
sbb
jb
mov
push
xchg
cmps
pop
fs
in
outs
jp
nop
in
mov
loope
in
mov
mov
jmp
fadd
outs
push
push
sbb
jno
loop
lahf
xchg
sbb
xchg
pop
cwde
ins
sub
adc
test
mov
fsub
sysenter
cmp
mov
aaa
fcom
cmps
jns
leave
leave
pusha
imul
and
mov
rcr
or
or
repz
or
or
nop
iret
leave
repz
push
sub
enter
and
sbb
jb
inc
mov
imul
mov
cmp
enter
mov
jno
inc
es
dec
and
mov
mov
sub
pop
rol
mov
push
dec
ds
iret
cwde
pop
mov
scas
push
jmp
fstp
ja
out
dec
mov
cmps
pop
push
lock
aas
mov
je
fild
test
fst
sbb
xchg
sahf
or
shr
inc
xchg
pop
sub
add
jmp
pop
cld
xor
add
pushf
daa
call
sbb
inc
(bad)
mov
sbb
mov
adc
lahf
and
jno
add
fs
jo
movs
mov
push
inc
pusha
out
mov
jae
(bad)
aam
fmul
in
in
jb
daa
daa
hlt
cld
mov
dec
xchg
aaa
or
pop
pop
mov
shl
(bad)
aaa
aaa
repnz
fild
out
add
out
add
push
es
sub
mov
or
push
jmp
push
dec
mov
xchg
inc
push
aaa
aaa
rcl
dec
mov
adc
addr16
push
and
dec
das
mov
out
fst
sub
mov
popf
cmp
repz
add
dec
mov
invd
mov
mov
lds
movq
or
aad
nop
adc
call
imul
and
adc
lock
inc
out
pop
jae
fist
xor
je
jo
xor
add
xor
push
ret
fisubr
mov
and
xchg
out
jb
ins
ja
movs
pop
lods
fld
add
inc
xchg
xchg
or
and
or
sub
in
(bad)
mov
in
xchg
push
dec
or
inc
mov
xor
xchg
fnstsw
or
cmc
pcmpeqw
in
push
xor
fcomp
mov
and
mov
sub
das
add
(bad)
or
add
inc
(bad)
adc
leave
leave
leave
leave
and
xor
leave
leave
leave
leave
inc
dec
push
pop
nop
int
loopne
mov
fsub
vmread
pushf
fmul
xchg
pushf
shld
mov
mov
shr
fsub
add
pop
in
mov
jb
jg
ror
cmps
pop
in
jne
nop
jg
jnp
add
adc
jg
xchg
je
xor
out
jo
and
lahf
cmp
jg
aaa
xchg
xchg
fucomi
push
push
pop
pcmpgtb
pushf
xchg
je
pop
test
mov
jae
mov
or
and
pop
mov
rol
adc
(bad)
js
aam
cs
nop
in
mov
outs
fnstsw
push
add
jmp
das
rol
addr16
shl
in
push
push
pop
cmps
arpl
push
add
inc
xchg
cmp
push
jns
pushf
sar
pop
or
rcl
and
int3
movs
sbb
pop
in
in
pmuludq
adc
in
add
xlat
push
add
push
adc
push
pop
and
fmulp
sbb
sysenter
dec
or
jns
out
inc
or
or
push
pop
push
pcmpgtb
ins
int
repz
je
data16
inc
ss
ret
jns
enter
ret
test
daa
daa
adc
pop
enter
ret
pop
stos
(bad)
mov
jbe
and
sbb
jmp
leave
enter
xor
ds
xor
emms
push
xchg
pushf
pushf
pushf
pop
addr16
adc
pop
and
mov
test
jae
cmp
mov
dec
outs
pop
enter
in
dec
dec
and
ret
and
les
and
test
(bad)
(bad)
call
mov
outs
addr16
js
jne
in
mov
xchg
ja
jmp
lods
(bad)
leave
and
subps
les
or
sbb
sub
(bad)
jge
mov
jb
shl
in
hlt
cld
adc
fdivr
(bad)
mov
(bad)
pop
sbb
push
out
inc
in
rol
push
xchg
ja
(bad)
jmp
inc
jle
sbb
add
push
fild
inc
iret
pop
(bad)
and
js
lds
pushf
pop
mov
cwde
mov
cmp
mov
dec
shl
outs
mov
das
push
dec
pop
outs
aas
in
cmp
jecxz
aas
ss
in
jg
(bad)
cmovnp
(bad)
push
in
add
(bad)
mov
sub
pop
jb
rcr
fcom
or
jecxz
cmps
mov
(bad)
sub
ja
jmp
jo
sbb
xor
pusha
pop
or
pop
mov
addr16
pop
mov
ds
dec
in
rol
and
fsub
add
pop
enter
and
xchg
pop
push
mov
cmps
data16
dec
fild
pop
cmp
pop
and
(bad)
sbb
sbb
mov
int3
mov
je
cmp
cmova
dec
add
pop
aaa
jns
push
clts
das
mov
or
js
nop
push
push
add
pop
add
sbb
cmp
and
xchg
mov
ds
xchg
jno
cs
lods
fistp
outs
cmps
enter
sbb
fcomp
cmp
clc
dec
jnp
cs
adc
lahf
push
inc
and
inc
dec
mov
pop
and
sub
aam
cmp
add
mov
xchg
or
fisub
or
xchg
mov
or
mov
lods
in
test
leave
push
lock
mov
leave
inc
addr16
pop
iret
syscall
mov
sbb
ja
add
mov
xchg
mov
xchg
pop
inc
jecxz
test
scas
ja
fsubp
in
leave
pop
jbe
sahf
aaa
in
dec
pop
shrd
mov
sahf
xlat
dec
invd
cs
xchg
out
jmp
sbb
push
es
leave
add
jns
mov
movlps
adc
xchg
out
in
and
addr16
enter
inc
dec
out
adc
pop
fsub
add
push
pop
push
pop
push
call
push
fwait
(bad)
retf
aam
xor
sbb
xchg
outs
fnsave
js
das
syscall
das
add
addr16
loopne
fs
push
inc
cld
push
or
out
sub
push
pop
and
and
test
dec
lahf
xchg
nop
retf
inc
jb
mov
clc
push
(bad)
repnz
xlat
add
mov
leave
leave
add
hlt
cld
pop
mov
push
aas
retf
push
push
retf
add
cmps
pop
pop
dec
mov
retf
cmp
arpl
cs
lods
dec
inc
add
neg
push
xchg
mov
push
sahf
xchg
jo
add
mov
sahf
xchg
out
nop
cwde
or
jge
sub
mov
int
loopne
xchg
or
mov
dec
(bad)
outs
rcr
and
cli
adc
pop
mov
mov
or
sbb
mov
aaa
rcr
jg
jns
sbb
hlt
retf
ja
retf
or
xchg
and
jp
int3
xchg
int3
xor
add
mov
or
mov
add
inc
jo
pop
or
test
sbb
and
movs
lock
xchg
mov
fisttp
in
pop
mov
xlat
popf
adc
cwde
aas
push
jg
push
sahf
out
jne
mov
retf
add
cmp
jecxz
mov
push
stos
aas
lahf
jbe
stc
dec
lock
or
mov
mov
sahf
add
imul
lahf
push
add
idiv
aas
sbb
push
and
ss
sub
inc
(bad)
out
mov
inc
pop
fcomip
inc
movups
or
fstp
jns
mov
mov
push
es
fld
dec
push
mov
pusha
push
stc
push
push
cwde
mov
dec
dec
dec
outs
jl
dec
dec
dec
lods
mov
int
lock
fsubr
jmp
call
ror
or
into
addr16
xchg
xchg
inc
xor
mov
push
ins
daa
pop
test
mov
test
inc
in
mov
mov
in
in
pop
xor
das
test
xchg
push
inc
mov
leave
retf
aam
hlt
mov
in
xor
and
daa
inc
inc
push
sbb
iret
mov
shl
add
sub
add
add
sbb
pusha
iret
push
pop
stos
or
es
mov
push
inc
ja
call
(bad)
pop
jo
movs
call
aaa
dec
iret
add
cld
adc
add
push
push
lea
mov
pop
nop
iret
cwde
dec
test
iret
iret
daa
cmps
sbb
enter
scas
inc
xchg
lock
fmul
(bad)
xor
fisttp
out
cmps
aam
pmulhuw
out
test
inc
add
pop
jbe
dec
repnz
push
lods
nop
xchg
jo
fwait
pop
dec
rep
add
dec
(bad)
daa
pop
(bad)
dec
xchg
ret
ins
cmp
daa
jl
adc
les
daa
ja
cmp
push
or
and
js
mov
adc
ja
cmovb
dec
ror
daa
in
add
int3
scas
adc
dec
cmps
push
xchg
mov
xchg
ss
or
clc
cmovg
and
xchg
inc
dec
shl
pop
rcl
rol
push
out
mov
cmps
push
mov
ret
iret
in
sbb
(bad)
(bad)
out
or
sub
pop
and
sar
aam
seto
xchg
cmp
lahf
mov
scas
je
mov
xchg
mov
or
(bad)
xchg
icebp
xchg
push
add
lahf
fs
ins
rcl
cwde
pop
mov
pusha
push
mov
add
bound
jg
pop
xchg
out
or
mov
enter
sar
loopne
ror
or
and
inc
adc
pop
xor
dec
xchg
das
dec
jb
js
xor
lea
call
mov
lahf
pop
push
pop
adc
aam
mov
push
repnz
leave
leave
leave
add
jns
leave
mov
mov
sar
xchg
push
xor
sub
shr
neg
enter
xchg
lock
aaa
leave
test
xor
loopne
daa
inc
xchg
jb
inc
cmc
jo
daa
inc
xchg
add
mov
jl
cmps
in
test
je
cwde
retf
dec
jmp
pushf
shr
xor
xchg
rcr
jb
shl
fadd
aam
jb
push
lahf
in
fs
int3
sub
mov
mov
fincstp
adc
or
sub
sub
mov
dec
cdq
leave
test
xor
fiadd
lods
or
xchg
or
(bad)
(bad)
popf
add
push
mov
cmp
and
fcom
dec
dec
inc
pop
and
nop
js
sub
and
push
imul
xchg
and
mov
xchg
xchg
or
sub
or
push
or
add
in
add
in
mov
in
mov
pop
xor
in
sbb
add
nop
xchg
mov
clc
(bad)
add
retf
add
cmc
pushf
pushf
aaa
xlat
retf
pop
ror
xlat
xlat
idiv
xlat
lods
repz
add
cmp
push
pop
jle
mov
cmp
repz
jae
into
mov
push
or
cmp
loopne
out
adc
iret
repz
adc
fcom
sbb
retf
and
adc
fsubr
fdivr
xchg
pop
enter
inc
fadd
in
dec
fcomp
popf
addr16
leave
leave
jo
xchg
leave
leave
leave
add
add
sahf
int3
aam
add
inc
adc
ja
push
fld
call
push
sar
mov
cmp
out
inc
fstp
ins
push
in
push
loopne
aaa
push
sbb
jne
adc
scas
aaa
lsl
dec
or
sbb
pusha
iret
fldcw
lahf
ss
repnz
or
outs
sbb
dec
adc
mov
push
jae
inc
xlat
cmp
movs
xchg
dec
pushf
fisttp
mov
pop
les
int3
mov
in
shr
shl
call
dec
xor
fidiv
ficomp
and
sahf
fucomi
jmp
(bad)
inc
add
push
cmp
scas
push
mov
nop
out
pop
or
dec
sbb
or
mov
pop
inc
test
mov
pop
mov
adc
xchg
nop
xchg
cmp
sub
enter
out
loopne
in
call
scas
inc
scas
clc
fmul
ficomp
fcmovu
sahf
out
xor
push
add
add
jns
cmp
inc
or
jns
out
or
jo
out
sahf
or
mov
jns
test
mov
out
sahf
out
adc
adc
ins
cs
fist
xor
stos
in
jmp
cmps
jmp
xlat
xor
cmp
inc
leave
rep
ficomp
iret
push
inc
jns
jb
fimul
fdiv
(bad)
hlt
sbb
push
inc
leave
retf
out
push
mov
fwait
xchg
pop
xchg
sub
fcomp
mov
inc
call
daa
call
jnp
inc
cmp
daa
or
daa
dec
xchg
dec
outs
mov
scas
pop
cmp
hlt
xchg
mov
movs
(bad)
int3
fcomp
movs
iret
call
and
inc
hlt
xchg
mov
add
dec
lahf
in
jle
movsx
inc
movs
rol
cld
xchg
add
lahf
movs
xchg
retf
fld
fld
out
xchg
dec
ss
addr16
jne
xor
push
fstp
inc
jb
xor
not
cmovae
pop
xchg
jno
ja
mov
scas
push
fsubr
inc
dec
jb
aaa
pusha
fstp
push
and
adc
cmps
dec
cs
out
add
setl
mov
lods
mov
add
hlt
cmps
enter
rol
paddusw
mov
and
push
daa
push
fbld
inc
daa
pusha
shr
aaa
cmps
pop
or
fsubp
les
and
in
call
sub
test
pop
mov
es
cmp
xchg
pop
and
xchg
pop
and
pop
xchg
enter
and
xchg
or
adc
push
xlat
dec
jecxz
push
out
ja
xor
sbb
add
pop
enter
fbstp
push
mov
(bad)
mov
push
pop
push
fdivr
cmp
sbb
stos
ja
cmp
cmp
mov
xchg
pop
jo
inc
in
(bad)
hlt
mov
push
or
lahf
loopne
(bad)
in
cmps
sbb
add
inc
loopne
xor
hlt
stos
es
repz
add
loopne
mov
xor
pop
daa
add
xor
addr16
push
jo
mov
in
jne
xchg
push
mov
mov
ret
jb
sbb
jb
std
or
aaa
add
add
scas
nop
inc
or
xor
pop
sbb
add
lods
dec
lock
xchg
cmp
or
lods
xor
lods
add
push
jp
fcmovnbe
daa
movs
out
lods
movs
cmps
xchg
int3
out
daa
loope
int3
or
mov
mov
enter
adc
lods
and
outs
loope
int3
push
fidiv
ja
iret
in
movs
cmp
loopne
add
xor
lods
inc
pop
enter
loop
and
pop
enter
loop
jl
or
lahf
add
scas
in
sbb
inc
inc
push
into
jo
pop
xor
mov
mov
xchg
sahf
xchg
into
leave
lahf
stos
iret
xchg
or
cmp
add
xchg
call
es
add
or
call
sbb
jmp
sub
cmp
push
inc
mov
pusha
je
jb
push
add
in
pop
mov
and
neg
scas
shl
fs
mov
in
and
into
lock
jecxz
adc
push
in
fsubr
fdiv
cmp
inc
add
pushf
leave
add
je
into
add
nop
es
inc
cmp
out
mov
mov
xor
fcom
call
in
pop
dec
dec
cs
hlt
in
mov
pop
(bad)
cld
in
adc
jb
enter
in
in
in
shl
aas
in
xchg
jb
jb
imul
cmp
mov
jb
xor
pop
jb
fucomip
pusha
retf
retf
inc
js
out
adc
sbb
pop
sub
retf
sub
aaa
out
push
fdiv
cmp
xchg
push
fisubr
fdiv
mov
ja
inc
mov
mov
mov
mov
in
mov
mov
loopne
repnz
(bad)
cld
out
add
mov
adc
enter
inc
and
xchg
mov
pop
push
inc
out
push
outs
xchg
out
add
js
inc
cs
mov
movs
punpcklbw
mov
das
mov
movs
or
scas
sti
out
es
adc
sbb
mov
call
xchg
pop
inc
fsub
pop
add
dec
outs
push
pop
cmp
add
jb
inc
mov
mov
mov
dec
mov
jb
scas
lahf
nop
inc
loopne
sahf
pop
jo
hlt
mov
add
add
leave
sub
push
pop
fs
push
and
mov
cmp
cs
lahf
pop
fs
jb
rcl
nop
pop
jb
or
lods
call
rcl
sbb
inc
aam
jmp
mov
fcomp
add
cld
(bad)
out
sbb
jmp
mov
jmp
add
add
cwde
and
pusha
jmp
je
mov
xlat
dec
nop
int3
dec
fisubr
fbld
nop
imul
scas
pop
rcr
aam
in
pop
mov
scas
clc
and
sub
ret
jmp
push
ja
cmp
sub
push
cmps
sbb
pop
dec
push
add
push
jmp
pusha
frstor
xchg
push
aaa
xchg
xchg
xchg
xchg
or
cmp
add
js
jmp
inc
aam
jo
add
sub
mov
or
adc
sbb
addr16
jbe
jns
push
pop
dec
or
(bad)
adc
inc
mov
or
pop
adc
fist
inc
mov
outs
movs
mov
jge
rol
aam
nop
fmul
dec
and
adc
adc
and
daa
or
je
in
push
pop
push
xchg
das
xlat
ror
jl
out
push
sbb
sub
jp
in
inc
in
mov
add
pop
fdiv
add
aas
clc
mov
rcr
inc
dec
ret
adc
aam
push
add
push
hlt
push
je
add
xchg
xchg
(bad)
daa
add
mov
aaa
mov
xbegin
lahf
inc
mov
cwde
nop
mov
mov
daa
es
mov
xlat
inc
cmp
push
out
movs
daa
pop
in
lods
push
js
in
sahf
div
push
push
jg
add
add
add
pop
xorps
fcom
in
and
inc
jb
enter
out
push
out
and
inc
mov
xor
inc
out
dec
out
pop
add
fs
(bad)
or
mov
into
jl
lahf
loopne
fst
xchg
out
cmps
xor
daa
mov
mov
mov
lahf
ret
pop
inc
cmp
xchg
iret
jmp
xchg
js
outs
xchg
icebp
loopne
lods
test
add
push
and
fadd
movs
es
push
mov
adc
pushf
pushf
pushf
pushf
aam
jmp
out
adc
push
pop
pop
es
cmp
or
or
bound
(bad)
or
adc
repnz
daa
pusha
dec
or
repnz
out
shl
jae
mov
add
xchg
out
fbld
cmp
cmp
adc
cmp
(bad)
std
xlat
or
call
out
inc
xchg
pop
js
das
ins
ret
pop
daa
push
ret
ret
add
sti
xchg
inc
lahf
int3
ret
or
xor
lock
ss
add
call
ret
inc
or
xchg
or
jp
popf
js
mov
fisttp
mov
jo
mov
mov
mov
pop
add
addr16
or
pop
ja
cmps
retf
cmp
xchg
xchg
in
hlt
add
xor
pop
push
xor
aas
and
sub
in
cmp
cs
aas
icebp
or
adc
xlat
xchg
hlt
jmp
ffreep
inc
xchg
pop
cmp
in
add
add
xchg
jl
lds
inc
movs
fs
mov
add
loopne
or
icebp
lahf
ror
xchg
cld
cld
adc
or
pop
and
out
dec
inc
lods
sbb
pushf
push
inc
(bad)
iret
fs
jb
aam
or
xchg
jmp
cmp
cmove
aam
cmp
rcr
out
pusha
sbb
inc
jb
pop
xor
mov
pop
pusha
mov
cmp
push
loopne
rcl
sub
or
repz
add
cwde
jo
sub
repz
pop
mov
call
push
pop
pop
and
fsub
xchg
push
js
dec
pushf
movs
add
jns
in
repz
add
retf
aas
xlat
dec
sahf
ja
push
pop
fisttp
or
sahf
out
sahf
jecxz
jmp
repz
retf
out
sti
or
ins
jle
mov
ud2
hlt
scas
adc
enter
xor
stos
jne
xor
sahf
ins
leave
xor
dec
inc
jg
in
mov
hlt
lahf
je
fisub
xchg
add
mov
js
pop
(bad)
push
test
cmp
out
lods
das
prefetch
jb
cmp
daa
bswap
shl
jb
rcr
fadd
add
cli
xchg
daa
daa
cld
add
(bad)
mov
in
xchg
cmc
push
push
ins
fst
cmp
das
adc
out
cmc
sbb
outs
test
out
cmc
(bad)
ja
or
pop
cmc
inc
arpl
add
xor
inc
sbb
pop
retf
dec
sbb
loopne
fst
daa
push
dec
imul
movs
pop
jmp
inc
jmp
or
fiadd
inc
dec
push
popf
aam
fmul
outs
pop
pop
xor
aaa
clc
(bad)
idiv
pop
addr16
imul
repnz
sbb
push
(bad)
push
dec
ret
mov
cmps
xchg
neg
outs
aas
inc
cvtdq2ps
(bad)
jb
mov
test
pop
xor
inc
inc
cwde
adc
dec
es
int
cmp
nop
dec
rcr
nop
dec
xor
cdq
mov
div
rcr
push
push
push
add
test
add
cmp
dec
inc
jecxz
jb
push
xor
xchg
in
jmp
test
in
test
xchg
addr16
rcr
pop
jb
mov
sar
mov
in
lsl
jbe
scas
or
jmp
clc
inc
sbb
and
mov
add
dec
mov
call
push
scas
int3
jo
and
iret
(bad)
nop
xchg
shl
scas
and
adc
clc
and
and
clc
clc
clc
clc
pusha
inc
fsub
xchg
xchg
cld
add
das
psubw
pushf
in
sbb
and
sbb
rcl
in
inc
call
or
dec
xchg
rol
inc
rol
pop
shr
aaa
je
pop
inc
fld
cmp
fs
or
pop
mov
sahf
add
enter
nop
add
cmp
pop
dec
mov
jo
pop
and
inc
test
pop
and
xchg
pop
and
nop
pop
and
dec
pop
and
or
nop
cld
and
xlat
pop
in
in
cli
xor
cmp
aas
cmp
mov
push
dec
outs
or
pop
leave
inc
mov
mov
jl
pushf
rcl
dec
ja
add
pcmpeqb
leave
leave
leave
push
mov
leave
leave
leave
leave
pushf
xchg
mov
leave
leave
leave
leave
fmul
les
adc
or
idiv
dec
outs
mov
in
cmovbe
cmp
xor
and
adc
push
sti
xlat
xor
inc
push
add
sti
xlat
push
cmp
sti
push
mov
scas
pop
xor
lahf
mov
jb
fadd
cs
inc
pop
add
fsub
cs
xor
mov
inc
ins
leave
add
sub
add
xlat
pop
int3
sbb
out
pusha
es
xlat
pop
sub
in
mov
jo
mov
pop
test
aad
fs
inc
cwde
nop
dec
cs
mov
cs
cs
adc
xor
adc
loopne
fadd
mov
dec
mov
into
lock
xlat
adc
jo
xchg
(bad)
ds
add
pusha
dec
addr16
std
and
outs
inc
inc
pop
inc
inc
call
fmul
fldenv
daa
mov
ins
jl
pop
dec
call
iret
pop
(bad)
fst
jne
in
dec
lahf
lods
pop
enter
mov
aaa
lahf
mov
xchg
fild
enter
(bad)
in
add
and
mov
push
jg
xchg
aam
add
ss
dec
out
push
test
shr
cmp
mov
pop
sahf
fistp
add
add
dec
dec
add
inc
fld
mov
lahf
push
dec
cmps
push
adc
mov
inc
adc
jg
adc
adc
fimul
jns
inc
jl
test
add
jbe
rcr
ds
mov
ss
scas
(bad)
mov
iret
push
fcom
push
rol
adc
ss
jg
xor
ins
ds
mov
jp
mov
aas
int
fild
inc
add
ins
ss
int
sbb
inc
xor
fist
enter
jae
push
cwde
push
xor
cmp
repz
(bad)
stos
adc
ds
repz
xor
jne
std
inc
retf
dec
dec
test
or
out
inc
jne
push
(bad)
(bad)
jp
je
outs
outs
cmp
inc
popa
jae
arpl
and
push
jb
js
sub
cmp
jb
popa
ins
ins
out
(bad)
(bad)
(bad)
cmp
ins
jns
pop
jae
jne
arpl
pop
ins
popa
imul
je
push
(bad)
fistp
bound
arpl
jo
add
xlat
adc
data16
jns
push
data16
jns
sbb
pop
popa
outs
je
mov
xor
add
add
sub
add
jge
dec
dec
dec
inc
inc
push
cld
rcl
repnz
gs
pusha
mov
mov
imul
pop
outs
outs
mov
fwait
mov
and
imul
idiv
cmp
fs
gs
lods
je
sub
sub
mov
fidivr
sub
gs
jb
shl
push
fidivr
ret
and
mov
gs
jp
cld
gs
mov
push
push
dec
push
sahf
jne
fs
and
push
mov
jecxz
(bad)
push
and
and
je
outs
jae
stos
cmp
pop
cs
loope
jo
dec
xor
pusha
inc
xor
inc
jno
ja
and
repnz
test
fsubr
hlt
ins
and
arpl
sbb
adc
mov
ds
add
cmp
jae
mov
(bad)
lahf
push
popa
fs
aaa
pop
lock
push
mov
cmp
xor
and
ins
das
arpl
pusha
and
sub
mov
pop
mov
(bad)
fbstp
jb
(bad)
and
loope
xor
and
cmp
mov
js
and
pop
xchg
inc
sub
xchg
imul
xor
jnp
scas
pop
push
jns
mov
dec
dec
aas
cmp
inc
test
add
das
(bad)
push
jge
es
cld
cmp
cmp
das
jle
inc
int3
or
cmp
ss
sbb
push
jae
mul
movs
in
ss
sbb
mov
fs
lods
mov
and
retf
enter
cmp
cs
sub
pop
and
jae
cmp
and
cli
scas
popa
jb
lods
push
jmp
data16
data16
arpl
pop
jbe
fimul
inc
xor
jb
sub
jo
(bad)
iret
sub
jae
mov
gs
or
ins
jo
jns
(bad)
ja
cmp
les
and
outs
jae
mov
inc
repnz
and
add
cmp
ds
enter
mov
add
dec
push
dec
dec
cdq
xor
sub
push
out
mov
sbb
stos
das
or
add
inc
arpl
sub
mov
add
cmps
pop
jae
sbb
sbb
test
not
sti
or
jne
in
cmp
js
mov
push
and
jo
pop
sub
cmp
dec
inc
dec
push
xor
jp
movs
xor
addr16
outs
push
adc
pop
add
test
inc
bound
mov
call
popa
add
and
adc
js
jmp
or
adc
mov
pop
jl
mov
mov
inc
mov
and
ja
aad
jecxz
aas
popa
jl
sbb
mov
inc
push
push
dec
inc
js
jo
inc
inc
lds
fmul
outs
arpl
or
add
dec
jg
dec
aaa
in
(bad)
pop
sbb
aaa
inc
gs
(bad)
fisttp
out
jmp
out
out
cld
cld
in
lock
lock
jmp
adc
icebp
enter
add
xlat
std
shl
cli
in
(bad)
(bad)
(bad)
in
mov
cld
sti
add
iret
cld
add
xlat
ret
mov
sar
sti
fcmovne
neg
(bad)
(bad)
cli
mov
(bad)
enter
repz
sub
retf
sti
test
xchg
add
lock
movs
repnz
jns
jns
(bad)
idiv
stc
stc
cli
sar
test
fwait
mov
jns
sub
sub
(bad)
cli
ret
mov
xor
cli
aam
mov
(bad)
(bad)
inc
add
jmp
mov
(bad)
lahf
repnz
in
stc
fstp
(bad)
fdivr
jg
js
(bad)
sub
add
push
out
fadd
stc
or
les
ror
retf
hlt
loopne
not
int3
retf
(bad)
(bad)
(bad)
dec
int
mov
movs
(bad)
rcr
loopne
aad
mov
mov
ror
stos
fisub
(bad)
jg
imul
push
mov
adc
test
test
test
test
mov
lods
(bad)
out
add
xchg
xchg
mov
dec
ja
push
add
(bad)
data16
pop
add
loopne
(bad)
jg
into
out
in
fcmovne
test
into
lods
(bad)
cmps
fmul
fdiv
jmp
adc
inc
push
cmc
bound
mov
int
gs
test
shl
aad
cmp
fdivr
(bad)
pop
repz
mov
fsubr
call
mov
(bad)
mov
shr
(bad)
(bad)
call
jnp
mov
fdivr
aam
xchg
mov
sbb
inc
idiv
push
mov
(bad)
fcmovnb
outs
fnstcw
retf
push
mov
cli
or
rol
ins
fadd
jo
(bad)
outs
fadd
imul
push
rcr
add
cld
(bad)
call
imul
jo
int3
jb
retf
rcr
sysexit
leave
retf
in
in
retf
iret
mov
iret
mov
sar
push
std
fisttp
shr
push
shr
outs
int3
imul
mov
sub
int3
mov
leave
stos
add
jle
xchg
push
out
push
lds
retf
sahf
ins
cmp
jno
mov
(bad)
outs
loope
jbe
(bad)
jbe
xlat
je
shl
ins
fdiv
push
les
mov
mov
aam
ins
shl
(bad)
(bad)
(bad)
inc
mov
mov
mov
push
shr
fidivr
shr
jmp
loop
imul
lods
int
faddp
imul
imul
push
test
call
lods
aad
(bad)
mov
cmp
call
mov
shl
xlat
mov
mov
shl
inc
int
inc
ins
inc
(bad)
xchg
inc
ret
lea
test
push
jmp
mov
jbe
lds
retf
jbe
push
retf
mov
shr
mov
mov
shr
cmp
das
(bad)
xchg
xor
lea
mov
mov
sahf
shl
inc
jmp
mov
int3
cmps
popa
iret
lods
pop
shl
stos
xor
outs
neg
sbb
into
cmps
inc
retf
movs
pusha
into
scas
inc
js
sahf
pop
rcl
jge
pop
imul
sti
add
sbb
lock
(bad)
cmps
aaa
xor
int
cmp
movs
xor
fwait
jne
mov
mov
add
std
popf
in
(bad)
jg
cli
push
push
les
int
cmp
call
jno
test
or
sti
stc
dec
jo
loope
push
ret
(bad)
xchg
cmp
xor
xchg
cld
fist
out
mov
cmp
not
mov
mov
(bad)
scas
sub
(bad)
jg
push
mov
cmp
cmp
jb
mov
mov
cmps
jno
stos
popa
xor
and
(bad)
outs
call
ret
popf
nop
adc
mov
popf
fsubr
frstor
mov
das
pop
inc
sbb
sbb
sbb
into
mov
idiv
mov
imul
movs
imul
mov
sbb
or
push
mov
std
out
(bad)
inc
mov
jae
sub
rcr
dec
(bad)
and
out
out
jnp
push
movs
push
cmp
add
mov
cs
test
dec
test
lods
arpl
dec
xor
or
mov
pushf
inc
cmp
dec
repz
inc
mov
lods
imul
movs
movs
movs
add
or
(bad)
fbld
push
jae
jae
lods
pop
inc
lods
inc
sub
sbb
neg
adc
jmp
mov
test
xor
xchg
and
xchg
adc
cmp
mov
add
sub
cmp
test
mov
adc
cli
mov
enter
mov
rdpmc
adc
enter
pop
adc
es
mov
mov
ins
in
mov
(bad)
mov
inc
shr
rcl
jb
push
or
xchg
dec
xor
push
lods
pop
enter
test
mov
and
and
ins
push
mov
dec
mov
ret
adc
ins
mov
pop
add
popa
cwde
xchg
xchg
or
test
mov
jp
lods
push
sub
inc
xor
mov
loopne
mov
(bad)
jae
pop
xor
mov
ins
cmp
cmps
call
mov
mov
ins
mov
ror
or
enter
(bad)
ins
enter
cmp
mov
push
in
push
cwde
push
sbb
cdq
inc
jne
pop
mov
fwait
jb
daa
sub
pusha
push
mov
sbb
das
mov
sbb
pop
shl
push
mov
mov
xor
inc
mov
ins
nop
pop
test
push
add
sub
push
jmp
add
sbb
or
pop
test
std
dec
lock
push
add
or
inc
dec
mov
sub
push
pop
or
inc
and
retf
adc
xchg
push
dec
sti
mov
inc
test
test
adc
dec
pop
pop
mov
or
ud1
mov
mov
popa
(bad)
(bad)
mov
pop
pop
sub
mov
mov
or
push
sub
xchg
dec
mov
dec
mov
pop
add
popf
cmps
ret
in
xor
ss
inc
and
retf
cdq
dec
lock
mov
mov
xor
icebp
cld
fcmovnu
mov
sahf
push
add
pop
arpl
arpl
int3
sbb
or
(bad)
xor
add
shr
add
mov
mov
imul
call
mov
jnp
out
xor
add
add
sbb
jae
fst
add
add
fwait
dec
pop
ins
mov
test
sti
lahf
mov
mov
add
sub
inc
add
lock
add
mov
adc
jae
add
mov
cmp
mov
movsx
sbb
xor
or
outs
ja
cs
or
pop
add
push
add
pop
stc
or
cmp
das
add
mov
xor
sub
mov
js
cmp
scas
ja
push
jb
dec
ret
adc
inc
imul
mov
jnp
clc
(bad)
jnp
push
movs
push
movs
fsubr
push
ja
adc
and
mov
xchg
(bad)
mov
mov
in
sub
(bad)
mov
add
mov
out
mov
out
fild
(bad)
(bad)
fucom
fcmovne
in
test
int3
in
idiv
sti
jmp
lahf
mov
div
idiv
(bad)
jmp
call
sahf
in
fnstsw
(bad)
stc
out
in
rcl
mov
sti
in
add
out
jmp
jg
cmp
push
or
add
cmp
adc
or
lahf
mov
pop
addr16
xor
adc
sub
jns
cwde
adc
inc
pop
dec
xor
or
call
adc
gs
jge
in
out
pop
adc
adc
adc
or
dec
xor
pop
(bad)
scas
adc
sub
dec
xor
adc
fild
sub
adc
ins
outs
fist
pop
enter
push
dec
xor
in
inc
xor
pop
adc
scas
pop
inc
lds
pop
inc
xor
data16
push
idiv
in
gs
inc
cs
inc
sub
jbe
sbb
adc
sub
aas
adc
sub
sub
sbb
or
sub
adc
xor
pusha
push
cmp
sbb
add
sub
pop
dec
outs
data16
fdivr
sub
inc
pop
dec
cmp
sbb
or
ss
dec
ss
movs
sub
inc
xor
pmaxub
pop
push
inc
xor
pop
inc
xor
adc
out
add
sub
adc
cdq
sbb
and
inc
xor
push
cs
adc
inc
ret
movs
std
ins
or
or
push
inc
sub
inc
lock
adc
inc
push
inc
sub
test
pop
add
xchg
je
add
add
out
(bad)
mov
pop
adc
jns
jle
dec
cmp
sub
sub
daa
sbb
ss
adc
sbb
ins
dec
aaa
loopne
idiv
lods
loope
or
adc
xchg
jbe
sub
or
add
out
fadd
push
dec
xor
inc
dec
mov
cld
popf
sub
div
cs
inc
adc
jp
mov
adc
xor
in
adc
and
sbb
inc
ins
dec
dec
adc
rcr
cmps
sub
fcmovbe
loope
adc
das
call
push
xor
cdq
sub
jnp
or
sub
inc
cs
inc
cs
xchg
out
cmp
sbb
sbb
pop
(bad)
inc
or
sbb
mov
cmp
cmp
addr16
adc
xchg
add
pop
or
dec
test
push
xor
pop
in
or
aaa
xor
fmul
pop
adc
add
push
mul
adc
mov
adc
ss
popf
pop
pusha
adc
ja
mov
push
push
cmp
pop
scas
push
adc
cs
xor
push
xchg
hlt
add
sbb
enter
pop
test
add
in
inc
dec
scas
fsubr
js
sub
sub
adc
push
sbb
cli
ret
pop
inc
xor
mov
xor
imul
sbb
xor
retf
pop
dec
aaa
test
scas
push
ja
dec
cmp
push
pop
dec
cmp
add
call
add
mov
mov
sub
pop
dec
cmp
cdq
sub
repz
push
ds
pusha
push
inc
das
sbb
add
mov
cs
adc
sub
loopne
adc
gs
shl
adc
addr16
clc
add
cmp
mov
loop
mov
dec
aaa
xchg
pop
dec
jb
add
push
(bad)
push
in
mov
sub
adc
dec
iret
sub
out
loopne
sub
dec
dec
or
rcr
loopne
popa
dec
iret
xor
xor
or
adc
push
adc
adc
xchg
loop
push
mov
add
push
into
adc
push
inc
in
jbe
ficomp
adc
jno
jno
and
adc
xor
mov
imul
(bad)
sub
out
dec
(bad)
(bad)
mov
fldenv
fsub
loope
mov
inc
mov
in
psubsb
adc
xor
xchg
(bad)
call
pop
fstp
fucomip
bound
sub
out
pop
lock
(bad)
fisttp
fmulp
fchs
rcr
loop
mov
xchg
jecxz
push
out
idiv
sub
jo
out
jmp
loop
adc
call
pop
mov
ficom
out
jmp
push
dec
fucom
in
bswap
dec
push
dec
fidivr
sbb
ret
iret
fild
paddsb
loopne
mov
fild
or
push
mov
out
mov
es
scas
lds
fcmovu
out
pop
ficomp
add
and
ffreep
(bad)
rcr
pusha
pop
fistp
lods
xlat
and
in
mov
pop
dec
sti
inc
daa
loop
pop
jno
retf
ficom
loopne
add
and
xor
fsubp
imul
fisttp
fisttp
adc
jmp
in
test
fist
inc
(bad)
inc
fisub
add
and
loope
push
out
fs
addr16
(bad)
mov
jae
aad
mov
leave
rcr
jo
(bad)
cmp
or
sti
ds
add
dec
push
inc
frstor
daa
or
xor
sti
call
shl
fsub
(bad)
fldenv
aaa
lea
push
push
inc
aas
inc
dec
or
loopne
imul
dec
fdivrp
jg
(bad)
ja
adc
xchg
data16
fsubr
fisubr
xlat
xor
bound
sub
adc
or
(bad)
out
mov
cmps
cwde
inc
jle
xchg
(bad)
aam
mov
jne
lock
and
pop
bound
jae
je
std
or
pcmpgtb
jne
in
inc
test
cmp
ins
cmp
pop
and
outs
pop
mov
pop
xor
xor
cmp
inc
sub
and
sbb
jbe
in
push
pop
add
pop
push
outs
jae
push
inc
(bad)
fisttp
movd
outs
jb
imul
daa
ins
push
mov
sti
xchg
dec
sub
or
mov
push
dec
sub
and
xor
xor
imul
jl
cmp
xlat
cs
push
imul
push
sub
add
xor
dec
ret
dec
fs
sub
loope
adc
daa
jo
addr16
mov
je
mov
popa
fstp
fs
dec
outs
push
call
ss
std
or
add
mov
jae
std
sbb
xor
dec
inc
in
jae
dec
loopne
dec
popa
jae
inc
inc
push
mov
mov
jae
bound
outs
gs
gs
mul
outs
arpl
and
inc
sbb
xor
sub
push
lods
ins
ins
and
jecxz
sbb
fs
fisub
and
das
add
xor
(bad)
daa
push
adc
call
jbe
pop
push
js
push
cmp
les
push
xor
jbe
je
xchg
and
inc
fbstp
and
pop
lahf
test
mov
push
mov
aas
push
sub
push
dec
imul
push
push
xor
xor
inc
push
sub
je
jo
cs
push
mov
fst
(bad)
js
inc
add
pop
into
push
push
test
push
dec
dec
scas
dec
arpl
cs
loopne
inc
cwde
sub
mov
mov
jo
adc
push
push
or
leave
aam
es
into
out
mov
pushw
jne
je
and
or
cmp
push
push
sbb
push
inc
pop
jb
inc
imul
push
jns
sub
lods
jmp
daa
je
adc
ja
mov
popa
data16
jo
xchg
push
in
dec
jg
mov
dec
into
xor
dec
dec
dec
push
sub
sbb
mov
inc
inc
inc
sub
cmps
je
ins
ins
inc
jo
jb
xor
das
sub
adc
js
out
jp
cwde
outs
ins
add
hlt
ins
sub
imul
outs
xor
popa
inc
inc
ins
fs
gs
jbe
dec
push
cdq
daa
xor
inc
dec
xor
shl
adc
scas
cwde
jns
aam
xor
or
jge
pop
jp
enter
fs
addr16
das
inc
and
outs
sbb
lods
fisub
and
and
adc
mov
popa
mov
add
loope
fisub
adc
xor
(bad)
aad
sub
jo
pop
xor
add
add
push
cmp
js
dec
arpl
fs
addr16
and
pop
or
xor
cs
loop
aaa
imul
outs
pop
pop
dec
test
adc
pusha
outs
cmps
ja
cs
daa
pop
nop
and
cmp
pop
fs
pop
push
clc
inc
stos
xor
inc
outs
jne
inc
mov
pop
icebp
ror
addr16
push
es
daa
jmp
jle
push
outs
bound
cmp
xchg
cmp
jns
xor
pop
and
jo
int
das
shl
ins
cmp
ins
add
adc
gs
ss
mov
enter
push
push
pop
push
dec
push
and
es
or
(bad)
pop
mov
push
nop
push
inc
jbe
xor
dec
dec
xchg
inc
push
xchg
pop
dec
inc
adc
pop
inc
sub
cli
mov
jnp
cmp
fs
push
mov
sub
add
scas
pop
xor
mov
jg
popa
sbb
inc
fild
cs
push
dec
sub
out
ja
and
push
fwait
add
xchg
or
sub
and
clc
daa
add
bound
or
push
inc
call
add
clc
in
push
pop
push
mov
mul
out
jge
cmp
daa
(bad)
push
push
jb
or
sbb
sub
inc
dec
push
dec
scas
push
pusha
xchg
push
arpl
cmp
or
pop
data16
dec
sbb
mov
pop
aad
dec
mov
cmp
in
pop
test
or
sub
add
int
or
not
in
dec
pushf
shl
cmps
ja
fisttp
and
or
sub
xor
xor
sbb
icebp
fwait
sub
je
ins
and
sbb
jb
pop
inc
inc
inc
dec
sbb
sbb
arpl
arpl
pop
pop
ret
stos
adc
fdiv
sub
in
aaa
or
in
add
dec
dec
outs
xor
pop
je
jo
dec
dec
fmul
sbb
pusha
add
enter
xchg
mov
sbb
mov
fdiv
cmp
jae
adc
arpl
pop
jle
fbstp
dec
jg
and
add
fwait
jecxz
xor
mov
xor
or
mov
outs
es
in
aaa
adc
bsr
inc
cwde
jnp
push
pop
in
cmp
popa
ins
inc
and
inc
je
fcomp
push
pop
pop
push
dec
push
ins
inc
mov
or
mov
inc
mov
int
cmps
cs
dec
pushf
shl
jg
adc
push
je
push
lods
push
pop
in
jp
jo
or
retf
jl
xor
xchg
lock
sbb
aaa
pop
xlat
mov
mov
fs
inc
test
retf
jbe
inc
dec
mov
cmp
das
and
arpl
ficomp
jnp
sub
mov
jbe
add
popa
push
bound
add
shl
dec
or
and
dec
js
add
jns
push
push
sub
fs
lods
and
jg
or
xor
(bad)
test
adc
jmp
jmp
enter
mov
push
stos
ins
out
mov
mov
mov
push
add
stc
pusha
mov
and
cwde
add
sbb
push
sbb
lea
ins
jae
pop
test
outs
outs
imul
faddp
outs
imul
push
adc
mov
inc
popf
inc
or
call
(bad)
inc
jne
popa
xor
add
dec
sub
sbb
aas
ficom
pop
outs
(bad)
sbb
xor
outs
pop
cdq
sub
push
fstp
jne
loope
xor
pushf
or
mov
xor
shl
(bad)
call
mul
cmp
mov
cs
fs
js
add
add
dec
ror
outs
push
je
ja
ja
arpl
outs
popa
pop
(bad)
not
mov
inc
outs
push
cmps
add
(bad)
cmp
mov
add
mov
cs
add
dec
jo
outs
pop
sahf
repz
retf
pop
inc
repz
sbb
jle
push
add
test
add
inc
inc
push
inc
inc
inc
popa
ja
xor
jle
inc
aam
mov
xor
or
(bad)
mov
dec
jns
test
jae
(bad)
enter
les
and
sbb
loope
lea
add
inc
inc
mov
cld
sub
add
xor
imul
test
add
xchg
xchg
out
mov
shl
pop
jo
outs
push
dec
mov
xor
and
sbb
out
mov
and
fcom
adc
das
cmp
jb
push
xchg
sbb
and
pop
(bad)
call
call
gs
mov
test
xor
inc
push
sbb
cmp
or
sbb
or
jae
daa
sbb
lock
and
nop
push
ss
push
iret
push
mov
je
cld
cmp
sub
or
fadd
sbb
ror
dec
inc
inc
call
pop
or
cmc
mov
retf
dec
scas
and
mov
xor
pop
(bad)
adc
inc
dec
push
mov
or
test
push
sahf
cmp
outs
(bad)
jp
push
popa
cmp
and
out
hlt
jns
sub
movs
add
jle
popw
jb
in
out
or
and
cmps
xor
xor
fstp
xchg
mov
mov
xlat
cmp
es
mov
dec
out
mov
lds
cmps
ds
fdivr
sti
outs
dec
and
or
xchg
mov
xor
xor
sahf
mov
cmp
sbb
(bad)
fwait
cld
test
adc
cmp
mov
(bad)
and
mov
mov
cwde
inc
pop
pop
data16
ret
fld
xor
push
test
adc
pop
dec
fisubr
sbb
push
aaa
sub
push
jne
push
mov
xchg
push
sbb
sbb
popa
in
add
(bad)
dec
dec
cmps
pop
push
ja
shl
inc
mov
mov
lds
ret
dec
sbb
mov
iret
mov
scas
clc
imul
push
addr16
mov
fldcw
outs
jle
adc
jbe
inc
adc
mov
movs
adc
lods
dec
test
jmp
pusha
add
or
adc
and
outs
fs
movs
or
mov
inc
bound
out
add
jmp
sbb
mov
(bad)
test
scas
inc
push
push
outs
mov
pusha
cmc
xor
push
outs
push
cmp
sbb
pop
pop
imul
out
xchg
push
add
or
mov
mov
rol
aaa
(bad)
aas
xchg
mov
jo
mov
mov
popa
inc
loope
loope
or
xchg
cwde
scas
out
inc
inc
inc
and
sbb
sub
aaa
(bad)
push
add
nop
pop
cmps
ds
jp
mov
outs
inc
mov
mov
test
mov
or
ja
xor
dec
push
test
shr
js
xchg
add
mov
test
add
jne
loopne
jge
inc
pop
scas
rol
cmc
and
jo
cmp
sub
pop
dec
ins
ins
pop
movs
test
aas
ins
sar
lds
dec
and
(bad)
jmp
(bad)
add
add
nop
gs
xchg
jp
sub
and
test
push
xchg
adc
ja
add
cdq
ja
pop
mov
or
mov
imul
fs
add
jnp
outs
and
(bad)
das
aaa
das
adc
test
cmp
imul
(bad)
(bad)
ja
fisub
and
mov
lock
jb
daa
and
adc
adc
fisub
push
outs
sbb
fdiv
pop
jae
jecxz
mov
dec
and
ficomp
jmp
lods
out
xor
mov
arpl
daa
test
imul
bound
stos
jae
adc
adc
aam
and
iret
pop
push
mov
fisubr
xor
ins
inc
push
sbb
inc
push
sub
(bad)
mov
xor
xor
inc
sahf
call
cmps
add
push
push
cmps
xchg
aaa
push
jmp
fadd
mov
arpl
or
sub
(bad)
sub
(bad)
daa
and
xor
mov
dec
pop
push
and
call
jae
ds
in
sub
ds
aas
jo
loope
sbb
push
mov
loope
push
inc
cmp
mov
rol
inc
jb
cmp
or
dec
sbb
xor
push
ins
mov
pop
pop
cmp
retf
jns
add
pop
aad
xor
xchg
popa
xchg
fisub
arpl
stos
rcl
(bad)
cmps
xchg
stos
push
mov
xor
jns
sbb
xchg
cmp
jae
es
sbb
test
xlat
mov
cmp
and
mov
dec
jmp
ja
sbb
test
sub
hlt
addr16
mov
jne
popa
push
imul
call
lods
out
jge
jecxz
div
jo
push
out
or
or
adc
jae
jae
outs
retf
jo
pop
jge
add
xlat
inc
add
mov
mov
pop
xlat
jmp
test
pop
gs
test
imul
iret
adc
add
mov
sbb
jecxz
push
ret
and
movs
in
bound
inc
mov
ror
pusha
mov
inc
imul
fild
dec
cmp
inc
and
cmp
nop
push
xchg
sub
cmp
sub
pop
daa
push
in
pop
outs
daa
xor
lahf
and
pop
or
add
mov
xchg
pop
xchg
ficom
dec
pop
aad
je
xor
movs
add
imul
xchg
mov
dec
sti
aaa
push
nop
jmp
retf
out
lea
cmp
inc
or
(bad)
jg
and
jmp
xor
(bad)
in
popf
rol
add
push
jecxz
out
cmp
into
pop
add
and
jo
and
repnz
imul
pop
les
out
movs
inc
and
push
dec
dec
sub
test
out
xor
push
sub
xchg
fmul
out
dec
inc
cmp
loop
mov
cmps
cs
sub
dec
data16
arpl
xor
add
push
inc
push
dec
cmp
outs
or
push
push
push
jmp
in
push
daa
aas
cmp
sti
loop
(bad)
dec
cmps
dec
imul
add
je
aam
lea
sbb
pop
cmp
jg
mov
push
sub
sub
loopne
movs
(bad)
jp
aam
inc
jns
daa
sub
test
sbb
mov
pushf
in
mov
(bad)
lods
push
lea
out
inc
mov
cmp
dec
(bad)
rcr
push
push
movs
pushf
aam
mov
outs
xchg
inc
jle
lods
popa
lods
cs
ficom
xor
inc
mov
xchg
pushf
inc
lea
sbb
inc
xor
and
cmps
mov
fwait
sbb
and
fild
rol
cmp
dec
xchg
fcmovbe
jmp
dec
inc
jmp
mov
dec
push
sbb
or
lea
sbb
inc
dec
push
dec
inc
lahf
push
dec
cmp
dec
sbb
inc
push
pop
mov
and
mov
mov
in
jno
xchg
xor
jo
dec
sbb
adc
pop
jo
cdq
addr16
add
hlt
fldenv
lock
daa
or
inc
ja
mov
(bad)
inc
push
inc
in
sub
push
ret
(bad)
cmp
shl
loopne
nop
imul
lock
and
inc
jo
pushf
push
jecxz
sub
movs
push
mov
fcmovbe
and
jno
pop
push
punpckhdq
or
xor
pop
sub
popa
popa
push
cs
jmp
add
idiv
pop
rcl
call
mov
sbb
or
sub
push
lock
pop
jne
add
movs
ficom
scas
xchg
mov
sub
push
aas
daa
add
adc
pop
imul
cmps
inc
push
adc
int
sub
lods
push
not
ret
xor
and
lods
hlt
test
push
mov
xor
xor
xor
push
add
arpl
cmp
inc
sahf
test
ret
inc
loopne
or
dec
gs
inc
ja
inc
frstor
dec
dec
push
dec
inc
dec
push
jbe
inc
pop
push
xor
inc
push
push
push
add
dec
popa
dec
lock
add
shl
imul
call
and
rol
mov
test
push
xor
js
lea
pop
rol
test
push
cdq
mov
cmps
lahf
call
cli
push
sar
fcom
pop
inc
dec
(bad)
add
xor
inc
and
push
jmp
and
mov
sub
xor
sub
and
imul
outs
sbb
or
shr
out
fistp
push
cmp
aaa
xor
and
or
jp
sub
enter
das
sahf
pop
ss
jg
push
push
sub
cs
(bad)
div
pop
(bad)
test
push
sub
adc
push
lahf
(bad)
pop
je
xchg
ds
popa
mov
mov
shl
mov
sbb
loopne
pop
lods
retf
push
or
or
add
add
push
add
add
add
add
and
pop
sbb
push
and
dec
and
popf
lahf
lahf
lahf
inc
or
cmp
add
add
sub
stc
or
or
add
add
retf
cld
fcomp
add
sbb
int3
and
test
mov
sub
or
dec
or
stc
mov
leave
sub
loopne
add
jo
sbb
pushf
or
xchg
add
or
les
cmp
mov
cmp
push
mov
movd
or
or
inc
or
ss
imul
adc
or
push
adc
adc
or
cmps
or
or
push
or
add
(bad)
out
xor
cld
mov
or
add
js
xor
or
add
lds
cmp
push
dec
cmp
cmp
aam
stos
or
sahf
loope
cmp
or
or
in
or
push
aas
add
(bad)
inc
jle
push
pushf
into
or
and
sbb
or
sub
sub
lods
pop
clc
ret
in
ret
sub
sub
loopne
aam
int3
ret
rol
sub
sub
ret
xchg
ret
sub
sub
mov
jl
je
fs
gs
sub
test
adc
gs
jo
inc
ret
gs
in
rcl
mov
lods
rcr
push
push
push
mov
repnz
rol
fadd
push
push
push
push
movs
sar
and
bound
mov
mov
(bad)
jo
sti
cmp
push
push
push
push
call
mov
push
push
sbb
les
test
dec
mov
add
inc
jnp
dec
dec
push
pop
inc
or
sahf
mov
scas
sub
cs
mov
ret
push
xchg
mov
mov
sub
mov
xchg
cmp
mov
xor
mov
mov
pop
pop
stc
ss
lods
mov
pop
pop
pop
pop
jl
ins
mov
pop
pop
pop
pop
fdivr
mov
pop
nop
mov
sbb
call
mov
mov
retf
les
retf
retf
cwde
mov
mov
mov
retf
jo
fs
mov
mov
retf
inc
mov
mov
mov
mov
retf
call
mov
mov
xchg
retf
retf
dec
mov
clc
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
mov
shl
add
gs
cld
mov
mov
mov
gs
mov
mov
mov
mov
gs
xor
and
cmp
adc
scas
retf
push
fcomip
scas
call
retf
aam
shr
retf
ins
scas
or
retf
retf
mov
scas
clc
or
mov
lods
retf
mov
cwde
lods
mov
retf
lods
ins
lods
lods
pop
lods
retf
retf
inc
lods
cmp
xor
and
sbb
retf
retf
mov
lods
retf
retf
and
retf
cwde
stos
je
push
stos
adc
retf
retf
mov
stos
retf
retf
enter
nop
test
push
test
retf
test
test
test
test
retf
hlt
cmps
mov
cmps
retf
retf
sbb
retf
retf
pusha
cmps
push
cmps
or
mov
or
stc
jl
outs
mov
jl
into
je
push
repz
movs
push
movs
dec
movs
inc
movs
cmp
sub
sbb
adc
or
ds
iret
out
movs
hlt
movs
call
movs
out
stc
jl
movs
xchg
movs
mov
iret
cmp
mov
repz
js
pop
mov
mov
mov
in
mov
out
shl
mov
out
push
mov
push
push
push
mov
push
push
aam
les
push
push
push
push
or
fcomp
movs
sahf
je
fs
push
rol
ror
mov
or
scas
dec
ss
add
lods
ins
mov
sahf
ja
sahf
fild
sahf
rcr
js
retf
push
mov
(bad)
retf
cld
pushf
(bad)
rcr
fimul
xor
or
outs
test
into
sbb
adc
pop
(bad)
inc
scas
or
fild
clc
fwait
pop
pop
pop
pop
lock
loopne
fcomp
pop
pop
les
movs
fwait
pop
pop
pop
pop
pushf
fwait
js
fs
pop
fwait
pop
pop
pop
pop
cmp
sbb
pop
pop
pop
pop
pushf
call
pop
pop
pop
pop
xor
push
pop
dec
cdq
and
adc
add
pop
pop
pop
pop
in
rcr
pop
pop
pop
cwde
cwde
pusha
cwde
xor
call
pop
mov
xchg
xor
pop
pop
pop
pop
sub
test
pop
pop
pop
pop
mov
push
xchg
pop
pop
pop
pop
or
mov
push
mov
movs
xchg
jle
xchg
xchg
stc
jl
lahf
xchg
mov
dec
xchg
lahf
iret
out
and
cld
xchg
mov
stc
jl
inc
xchg
sbb
pop
enter
inc
xchg
cmp
mov
jle
xchg
sub
mov
int3
xchg
push
sub
sub
sub
push
push
push
mov
xchg
dec
push
dec
shr
and
sbb
gs
nop
out
call
nop
gs
nop
mov
(bad)
gs
(bad)
fs
cmp
loopne
in
hlt
fwait
lods
mov
mov
or
lods
lods
lods
inc
mov
mov
lea
lods
je
push
lea
movs
mov
sbb
mov
out
stc
add
cld
mov
mov
mov
stc
jl
lahf
mov
mov
mov
mov
mov
cmp
or
mov
mov
mov
stc
jl
sub
or
in
mov
mov
lahf
iret
out
mov
mov
adc
lock
mov
cmp
adc
add
hlt
mov
mov
test
cwde
mov
stc
jl
lahf
mov
xchg
lahf
iret
out
adc
add
add
xchg
xor
retf
test
mov
test
jl
jo
test
retf
retf
pop
test
test
retf
xor
or
mov
mov
cld
test
in
rol
mov
test
push
test
test
test
add
movs
xor
push
adc
test
cmp
xchg
add
retf
and
test
and
leave
retf
push
or
out
cmp
sbb
jl
add
cmp
mov
add
repz
xor
mov
stc
jl
lahf
jg
jg
jg
jg
jg
iret
out
hlt
jle
jle
jle
jle
jle
stc
jl
or
lock
jge
jge
lahf
iret
out
jge
jge
jge
jge
jl
repz
jl
jl
jl
jl
jl
ds
iret
and
fdivr
jnp
jnp
out
stc
pop
jnp
jnp
jnp
jnp
sahf
inc
ds
jp
jp
jp
movs
lahf
iret
inc
std
pop
pushf
jp
xchg
jp
jp
jp
stc
jl
jl
je
ins
jp
ds
iret
cmps
jp
jp
jp
jp
jp
repz
jl
jp
jp
jp
jp
ds
iret
hlt
jns
jns
jns
jns
jns
out
stc
pushf
jns
jns
jns
jns
stc
jl
lahf
jns
jns
js
js
js
iret
out
push
js
js
js
js
js
stc
jl
cld
ja
ja
ja
ja
lahf
iret
out
ja
ja
ja
ja
xchg
sbb
and
hlt
jbe
xchg
xchg
xchg
xchg
jbe
jbe
jbe
jbe
xchg
xchg
xchg
xchg
jbe
jbe
jbe
jbe
cmp
in
loopne
inc
ss
or
mul
gs
add
cld
jne
out
mov
add
arpl
sbb
push
sbb
shl
xchg
imul
ins
lahf
test
inc
fmul
or
addr16
je
out
int3
mov
out
and
shl
sbb
add
jo
mov
repz
clc
jo
mov
add
jg
movs
and
outs
nop
push
repz
dec
add
add
outs
test
out
jecxz
push
and
push
sub
push
lock
pusha
cmp
out
push
push
sub
push
dec
cmp
in
sbb
or
imul
sub
add
and
sub
adc
cwde
mov
outs
imul
imul
scas
xchg
xor
cmp
mov
outs
addr16
jb
push
test
dec
push
fs
jne
adc
ins
add
jb
xor
or
inc
cli
imul
pop
adc
dec
pcmpeqw
gs
jb
jb
adc
arpl
addr16
ins
lahf
jo
dec
bound
and
out
outs
dec
inc
mov
dec
std
ret
test
or
jae
test
adc
jb
and
jo
sbb
inc
fs
push
cwde
in
jecxz
in
mov
jmp
icebp
jmp
and
jmp
in
mov
icebp
out
loopne
mov
std
and
in
lock
or
in
in
and
push
in
lock
in
jmp
fs
out
and
and
mov
aaa
jnp
jmp
stc
loope
out
mov
idiv
mov
stc
loopne
in
hlt
lock
repnz
mul
mul
neg
(bad)
in
ins
cli
loopne
jmp
jmp
in
clc
jmp
stc
(bad)
in
adc
and
push
loop
mov
jbe
clc
add
in
and
or
outs
in
fisubr
(bad)
mov
and
out
cs
or
xor
loopne
mov
ss
in
adc
in
in
imul
mov
out
out
cli
jmp
add
cmp
jmp
fsubrp
push
mov
ret
jbe
hlt
bnd
or
dec
in
out
cmp
in
jmp
push
icebp
hlt
clc
jo
lods
rcl
lahf
je
enter
inc
xor
dec
jecxz
in
fsub
or
mov
in
jmp
aas
mul
loopne
xchg
loopne
ds
add
lock
in
mov
popf
rcr
in
xchg
sahf
adc
pop
aaa
(bad)
call
mul
loop
sbb
pop
dec
jmp
mov
scas
adc
sbb
clc
mov
or
out
push
add
ret
mov
fisttp
out
xor
lock
cmps
loope
jmp
nop
cli
je
sbb
pop
into
or
inc
hlt
sub
push
jg
mov
cmp
icebp
iret
cmp
lock
mul
cs
mov
nop
popa
add
sub
ins
mov
js
cmp
loope
sbb
hlt
imul
dec
out
push
mov
inc
cli
mov
(bad)
add
sub
jae
sub
cli
mov
in
outs
in
fisubr
add
sar
in
xor
push
cmp
mov
ret
cmp
ds
jp
cs
and
(bad)
loopne
pop
pop
addr16
movs
dec
pusha
push
add
(bad)
cs
gs
test
sub
es
pop
cdq
add
sub
mov
and
aas
cmp
popa
cmc
add
call
addr16
sbb
jecxz
cmp
pop
fmulp
cwde
pop
retf
prefetch
cmp
push
pusha
cmp
pop
ja
adc
in
psllw
addr16
cmp
repnz
dec
imul
xchg
je
dec
ds
frstor
mov
test
sbb
retf
or
mov
mov
ja
imul
outs
jbe
sub
pop
popa
fs
push
adc
pop
push
ins
in
push
sti
into
cmp
jo
loope
and
jp
jne
not
jbe
sar
pop
jne
jae
ins
xor
adc
imul
in
lods
jo
sub
fs
xchg
jno
cli
jmp
in
jg
xchg
mov
call
jmp
popa
fild
push
outs
add
ins
and
imul
bound
stc
cmp
pop
adc
imul
outs
loope
int3
addr16
fstp
imul
push
adc
jmp
jae
push
add
imul
mov
cs
ret
std
daa
push
test
shl
in
sahf
inc
push
lods
xor
adc
or
enter
and
(bad)
push
jne
je
lods
ds
and
pop
cmp
ins
dec
lock
adc
fcom
stc
ins
imul
sub
pop
sbb
jmp
in
jae
std
sbb
call
pop
cs
or
jl
adc
rcr
xchg
add
pop
int3
add
sbb
js
dec
popa
ins
loope
adc
call
sbb
scas
push
jne
js
pop
or
inc
push
fsub
lock
xor
and
sbb
or
sahf
xchg
shl
aas
push
ret
jo
imul
int3
test
fsubr
pushf
inc
cwde
outs
cmp
scas
fs
call
cmp
or
sbb
jle
and
add
mov
ins
push
sbb
call
bound
push
jmp
mov
ret
add
es
loope
ds
push
(bad)
push
or
dec
outs
jo
or
mov
loope
je
scas
out
aas
imul
aas
push
test
xor
lock
clc
in
pop
loope
mov
and
inc
fcmovnb
sub
mov
mov
mov
dec
sbb
loopne
pop
mov
(bad)
mov
retf
gs
fstp
push
or
addr16
in
inc
jae
xchg
jnp
gs
sbb
dec
push
sub
dec
out
sub
sbb
fcom
push
and
jne
fcomp
adc
mov
jmp
mov
jp
cmp
xchg
jo
sbb
push
mov
or
push
and
out
jae
in
clc
sbb
dec
jns
pop
and
daa
(bad)
mov
and
pop
icebp
and
(bad)
je
das
cld
mov
popa
lock
mov
add
xor
push
imul
push
adc
push
pushf
mov
fld
loopne
icebp
ret
and
out
cmp
dec
jle
(bad)
jp
jmp
pop
inc
pushf
dec
ins
fdiv
icebp
add
imul
call
outs
scas
mov
add
in
jo
out
mov
sbb
dec
fsubr
sahf
bound
or
pop
bound
sahf
scas
lods
dec
push
dec
sub
push
add
ret
lahf
call
outs
rcl
lds
das
lea
push
inc
push
mov
adc
xchg
sub
mov
int
sbb
ja
mov
ret
cs
jbe
scas
in
popf
push
movs
loope
outs
ins
call
xor
call
ficom
xor
into
fs
jns
ret
jae
mov
sub
iret
clc
ins
mov
add
test
inc
iret
jbe
clc
shl
jo
jo
repz
ss
xor
cwde
addr16
mov
xlat
fiadd
mov
(bad)
imul
loopne
hlt
mov
jae
jbe
cmp
xchg
adc
mov
rcr
pop
or
jbe
add
fsubr
and
ja
mov
inc
mov
jp
out
outs
rol
cmp
add
fwait
or
ja
cmp
xor
pop
sbb
sbb
push
pop
inc
inc
add
aad
mov
mov
xlat
add
sub
clc
clc
mov
fs
scas
push
mov
and
call
ins
adc
(bad)
aam
sub
adc
or
pop
push
ins
inc
sub
add
inc
jo
js
aaa
fadd
push
cmp
xchg
sbb
loop
adc
mov
fsub
fs
pushf
mov
dec
mov
(bad)
jne
neg
adc
(bad)
(bad)
xchg
or
dec
sub
(bad)
pop
data16
cmps
mov
mov
je
cs
test
or
loope
pop
mov
test
scas
aaa
jp
popa
or
jns
cmp
rcr
sub
jne
call
in
rcr
icebp
imul
sub
cmp
je
lds
xor
mov
rcr
xchg
(bad)
push
mov
outs
cmp
pop
popa
popf
ja
addr16
xor
popa
js
xor
imul
and
cmc
mov
mov
jo
xchg
outs
mov
imul
add
popa
xchg
aas
(bad)
push
xchg
sbb
(bad)
jp
mov
inc
out
daa
dec
push
ja
push
pop
cmps
cld
inc
pop
mov
adc
out
mov
sub
out
dec
or
mov
jo
push
daa
sahf
fs
loopne
mov
push
jne
cmps
jle
fnsave
leave
aaa
push
push
push
push
jns
loope
add
lds
inc
jns
jb
jb
fidiv
ins
xchg
in
fidivr
dec
xor
mov
sbb
sub
mov
inc
bound
cmp
lock
es
sub
push
mov
cld
je
add
jb
sub
imul
ss
les
popa
lock
fwait
jge
xchg
ins
sub
imul
jb
xchg
sub
push
shr
ins
gs
test
push
jmp
mov
fadd
sahf
sbb
xor
and
push
jbe
lahf
mov
in
fwait
sbb
cld
(bad)
cld
outs
add
adc
sbb
dec
jbe
push
mov
out
xchg
popf
mov
push
(bad)
je
and
pop
ins
xor
xlat
aaa
outs
cld
and
jb
or
bound
je
or
cmps
jno
and
and
jne
cmp
imul
test
ret
jecxz
loop
ins
std
dec
and
fwait
scas
jae
and
adc
sbb
push
test
jl
int3
xor
sahf
loope
fisub
sbb
nop
xchg
mov
outs
repnz
mov
popa
jl
cld
out
cld
jae
arpl
dec
sbb
mov
arpl
data16
lds
or
cmp
ins
jbe
jo
mov
fadd
xor
adc
retf
out
mov
imul
cmp
inc
sub
call
popa
mov
inc
(bad)
jmp
and
xlat
rcl
push
mov
adc
mov
repz
pusha
mov
sbb
into
aaa
aaa
shr
lds
jecxz
data16
sar
jns
or
adc
and
push
xchg
sub
mov
mov
and
fild
and
xchg
jb
dec
or
mov
dec
fdivp
ins
ror
leave
cmp
xchg
adc
fs
test
out
les
and
je
pushf
pusha
test
iret
(bad)
bound
mov
je
std
inc
fnsave
out
mov
pop
movs
pop
mov
and
call
sbb
dec
jle
and
fsubr
arpl
in
lds
sub
imul
cmp
popa
jo
pusha
lahf
shl
loopne
xor
push
fild
fisub
jne
xor
mov
gs
push
test
xor
sbb
call
xlat
inc
jo
ret
dec
mov
xor
fs
pop
clc
or
test
ins
sti
daa
sbb
push
aam
xor
jne
scas
push
jnp
icebp
arpl
aad
jae
add
and
sbb
cmp
js
ja
jge
fcomp
mov
imul
(bad)
call
pop
pop
sahf
dec
ja
mov
es
jno
dec
popa
je
inc
add
sbb
jae
addr16
jbe
jle
inc
cmc
add
fs
fstp
dec
dec
add
fwait
sbb
loopne
add
xchg
add
add
add
and
lock
in
loope
icebp
push
mov
cmc
repz
fucomp
out
repnz
sbb
out
jecxz
repz
ficom
in
in
loope
and
in
mov
jmp
out
in
in
jecxz
sbb
in
in
repz
outs
dec
fwait
pop
push
std
pop
loope
dec
data16
jbe
and
xchg
icebp
sub
jp
and
(bad)
in
idiv
movs
jmp
jecxz
push
cmc
sbb
in
(bad)
(bad)
icebp
cld
jmp
lock
loope
rol
in
ret
jecxz
jmp
repnz
and
and
push
jo
inc
(bad)
jg
frstor
in
mov
xchg
clc
in
push
out
out
(bad)
pop
cmp
int3
mov
adc
in
bnd
in
sub
in
lahf
or
loope
in
icebp
rcr
jbe
iret
pop
popf
in
in
mov
in
pop
cmp
push
loope
fbstp
data16
and
in
xchg
sub
(bad)
jle
call
and
dec
pop
push
xor
pusha
mov
stos
mov
out
loope
ins
es
sub
pop
in
fisttp
mov
out
and
and
aas
jno
xor
pop
ss
loop
fnstsw
add
fdiv
in
fdiv
pop
sar
call
pop
mul
(bad)
fsub
push
(bad)
dec
imul
mov
dec
xlat
jae
daa
adc
sti
sbb
es
fsubrp
xchg
sar
popf
mov
and
mov
inc
or
outs
mov
inc
jne
sub
cld
jb
dec
popa
lods
mov
repz
dec
sbb
je
push
inc
outs
cdq
adc
push
and
jbe
mov
imul
xor
mov
pop
mov
jb
inc
jae
dec
sub
xor
out
adc
out
pushf
jle
inc
inc
les
sub
sbb
push
or
mov
outs
fisttp
into
pushf
pop
ds
push
push
pop
sbb
test
jae
dec
fimul
jmp
mov
dec
sbb
addr16
xor
popa
out
jne
cs
xchg
mov
lock
dec
jae
(bad)
adc
in
repnz
inc
cmp
sub
or
add
mov
jno
jmp
addr16
and
jb
and
and
ss
mov
nop
dec
into
fsub
and
mov
cs
fdivr
sub
lods
pop
jmp
adc
int3
dec
ja
mov
inc
bound
cmp
jmp
adc
fisub
out
int
aam
pushf
dec
push
jne
add
data16
ds
push
jb
dec
mov
hlt
adc
mov
inc
mov
hlt
adc
mov
xchg
daa
(bad)
in
add
shl
inc
add
mov
lods
out
enter
outs
and
push
dec
push
pusha
div
inc
add
lods
push
in
fsub
pop
xchg
ds
js
ins
dec
jb
push
nop
pusha
pusha
ret
push
mov
ret
sti
call
imul
in
or
and
fs
icebp
loopne
nop
inc
ffreep
mov
push
and
jb
jecxz
jl
lahf
dec
shr
add
js
cmp
shr
gs
cld
outs
adc
pop
mov
in
ins
inc
imul
cmp
outs
mov
inc
popa
movhps
retf
xor
sbb
xor
push
fistp
out
jae
add
and
stos
jl
pop
movs
loopne
call
pop
je
or
mov
push
and
imul
jecxz
inc
sbb
add
lock
and
push
push
jo
dec
push
es
cmp
ja
add
mov
pusha
mov
and
push
imul
push
and
add
call
enter
rol
push
pop
pop
nop
gs
xchg
int3
mul
and
div
not
inc
inc
jne
popa
ins
mov
jecxz
adc
xor
sub
push
popa
xchg
test
sbb
mov
out
push
sbb
push
xor
or
mov
jecxz
outs
imul
mov
mov
mov
jb
xchg
daa
out
push
fndisi(8087
push
dec
xchg
(bad)
das
pop
inc
(bad)
mov
adc
sub
lods
jmp
(bad)
sbb
add
test
push
adc
pusha
sbb
xor
push
clc
ror
jbe
adc
sub
sub
mov
int3
mov
fimul
sbb
dec
jae
push
outs
mov
mov
adc
push
jo
popf
neg
cmp
add
outs
loopne
and
mov
jge
scas
xor
push
jo
gs
cmp
das
dec
mov
outs
into
inc
fs
clc
imul
pop
and
mov
sub
xchg
inc
outs
lods
shl
jmp
pop
in
mov
and
and
mov
mov
xchg
movs
ds
addr16
test
cmps
add
jne
mov
push
adc
and
xchg
mov
adc
jge
popa
push
sbb
pop
cmp
push
scas
mov
jl
imul
jl
outs
popa
ret
push
sbb
nop
clc
jb
jmp
push
pop
sti
jnp
loop
stc
mov
jp
icebp
outs
push
out
and
add
mov
mov
popa
jns
pop
and
sub
pop
out
mov
je
stc
cmp
jae
mov
mov
aaa
push
inc
cmps
fisub
push
cmps
mov
push
adc
ret
jno
je
ins
add
inc
sbb
push
and
loop
jmp
cmps
or
dec
(bad)
ds
daa
pop
jne
xor
retf
ins
stos
(bad)
ds
sbb
or
add
fwait
aaa
icebp
nop
sbb
xor
cwde
jo
or
adc
sbb
adc
neg
or
mov
es
sub
fnsave
pop
popa
xor
pop
into
fneni(8087
and
outs
sub
jns
sub
push
ins
test
jne
mov
(bad)
ficom
fdiv
aaa
mov
jb
xchg
call
xlat
inc
(bad)
int3
or
ds
ret
imul
xor
xor
loopne
outs
xchg
ss
sbb
pop
div
push
pop
out
test
adc
xlat
retf
push
sbb
inc
cs
xchg
retf
pop
cld
das
push
mov
inc
or
push
sub
ret
adc
pop
xor
xor
ins
xchg
sub
data16
pop
xchg
das
inc
push
lock
sbb
in
inc
push
xchg
inc
sbb
dec
mov
loopne
add
(bad)
jp
mov
sub
je
adc
je
out
dec
xor
push
jne
and
out
sub
hlt
fsub
gs
xor
call
repz
loope
cmp
pop
dec
push
xlat
bound
push
mov
mov
adc
ret
push
xchg
mov
or
daa
addr16
sub
and
sub
in
neg
ja
push
xor
mov
dec
fsubr
(bad)
dec
add
jnp
je
pusha
adc
ja
add
mov
pusha
cli
(bad)
mov
aam
inc
mov
jbe
(bad)
jp
adc
adc
outs
je
cmp
or
jmp
popa
pop
mov
sahf
and
push
fild
adc
or
xor
fidiv
mov
je
jmp
mov
jb
and
adc
js
and
mov
fwait
mov
shr
push
movs
pop
dec
out
push
jmp
mov
das
mov
jbe
inc
es
mul
cmps
ins
dec
call
aas
cmps
push
sbb
xor
cdq
adc
or
adc
loope
mov
add
(bad)
push
movs
ins
jno
pop
push
or
adc
stos
sti
jne
dec
fstp
or
addr16
or
stos
xchg
das
sub
and
sub
push
jmp
lods
jnp
(bad)
daa
lods
push
jae
cmp
outs
cmp
or
jp
pop
cmp
adc
ret
call
ss
xor
aam
pushf
out
nop
gs
xchg
mov
jne
lahf
or
mov
in
aas
xchg
xlat
imul
sub
rol
push
jecxz
jg
xor
cmps
jbe
mul
outs
sbb
and
popa
inc
and
sbb
add
int
add
cmp
inc
(bad)
js
dec
cmp
lock
adc
cmp
stos
add
aam
pop
ret
jl
mov
in
dec
xchg
gs
push
push
mov
push
push
xor
jne
push
loopne
repz
mov
adc
dec
sar
pushw
add
cmp
mov
push
shl
(bad)
outs
mov
add
lea
jo
clc
push
cmp
fist
add
lods
pop
sub
popa
mov
inc
jl
ins
call
imul
mov
mov
fs
inc
push
jbe
jmp
imul
push
repz
fldenv
adc
inc
les
enter
ror
cmps
imul
movs
imul
cs
hlt
lods
jne
push
adc
cs
test
xor
jo
movs
jno
mov
sti
jg
adc
ja
loopne
mov
pop
mov
fld
pop
add
dec
repnz
test
xor
(bad)
mov
mov
clc
dec
cmp
cmp
lahf
ret
mov
(bad)
push
xor
mov
fucomp
cmp
push
push
xchg
push
shl
pusha
xchg
in
and
sbb
call
and
push
push
jae
mov
sub
(bad)
lods
ins
mov
sbb
aaa
in
mov
jmp
mov
data16
aas
sub
lods
cmp
je
lds
pop
lods
add
(bad)
jae
add
das
inc
jp
inc
shr
sbb
xor
inc
loop
jno
pop
pop
div
mov
cs
sbb
jge
cmps
adc
js
and
outs
inc
mov
inc
outs
add
jnp
cld
push
sub
ret
cdq
push
jne
sub
or
popa
ja
pop
es
inc
pop
mov
imul
loope
xchg
adc
pop
fiadd
call
outs
inc
es
pop
add
rol
dec
je
into
pop
adc
dec
(bad)
jne
xchg
add
fs
jmp
dec
pop
es
push
scas
pop
js
(bad)
int3
scas
es
xlat
loopne
test
pop
or
and
xchg
packsswb
pop
xchg
scas
sti
xchg
ss
out
ins
call
mov
test
lods
jo
outs
dec
gs
stos
jmp
js
add
jbe
loopne
adc
or
jmp
inc
daa
sbb
lods
xchg
popf
adc
ins
ss
inc
cmp
test
ret
xor
adc
sub
mov
adc
sbb
stos
loopne
add
adc
sahf
or
or
pop
jge
sub
add
mov
add
xchg
js
pop
push
test
pusha
rol
sbb
je
push
pop
loopne
int
sub
sub
jmp
js
mov
gs
arpl
or
push
push
inc
jae
cld
and
xadd
pop
sbb
leave
jae
sub
push
ins
push
mov
sbb
jmp
and
xchg
pop
call
and
and
xchg
sbb
push
or
stos
test
outs
sub
dec
dec
pop
xchg
fcomp
sub
imul
or
sbb
or
(bad)
mov
add
inc
lahf
mov
inc
ins
call
inc
pop
push
popa
jne
xchg
(bad)
sbb
add
ja
rcl
xchg
popw
mov
add
xchg
les
ins
mov
jbe
jmp
sbb
(bad)
lds
xchg
mov
and
mov
adc
scas
and
jmp
call
and
xor
test
jae
test
stos
test
dec
div
cmp
jbe
jae
cmp
push
in
pusha
jmp
sub
hlt
inc
mov
imul
jb
push
push
mov
int3
cmp
dec
pop
fs
or
icebp
and
sbb
mov
rcr
clc
jmp
dec
aaa
dec
or
sti
fs
dec
cld
fnstcw
sbb
xchg
mov
adc
gs
sub
sbb
pop
jnp
ret
cs
outs
lahf
ret
xchg
mov
jmp
in
pop
jmp
js
add
jae
sub
xchg
sbb
jno
or
loop
jmp
push
js
jae
jae
aas
and
adc
(bad)
stos
popa
fcomp
xor
mov
jb
pop
inc
inc
jo
loope
mov
out
(bad)
pop
adc
or
out
inc
mov
mov
cli
and
mov
jecxz
dec
add
ret
pop
sbb
dec
outs
fldz
add
shl
jle
xor
mov
inc
mov
and
pop
xchg
outs
jg
xchg
dec
cmp
mov
ret
fild
push
lahf
sbb
shr
sub
mov
mov
out
outs
sbb
sbb
mov
jae
dec
push
fistp
push
test
cmps
mov
xchg
inc
push
shr
jg
outs
and
test
push
outs
mov
sub
cs
or
es
ins
mov
and
xchg
stos
out
or
cmp
fimul
sub
in
push
adc
mov
clc
jae
jo
cmps
mov
mov
call
out
and
out
outs
ins
(bad)
push
sub
in
imul
ins
fs
jne
inc
mov
jnp
sub
mov
mov
jne
rol
xor
in
mov
push
outs
dec
xor
or
out
cs
adc
shl
outs
imul
jns
imul
les
jae
xor
add
cmovns
ret
fwait
sbb
push
mov
test
pop
dec
rol
dec
pop
repz
or
(bad)
xchg
dec
jns
in
adc
scas
push
jo
imul
add
pop
sbb
and
in
je
into
mov
pop
add
test
mov
xchg
xchg
or
out
mov
push
jbe
sbb
jecxz
jbe
push
lock
push
hlt
cmp
xlat
push
or
and
test
inc
shl
xchg
push
cmp
sub
stos
(bad)
loopne
adc
sub
sbb
sub
add
(bad)
pop
inc
add
inc
inc
xchg
shl
out
cmp
adc
push
sub
pop
cmps
mov
cwde
xchg
add
ja
xchg
mov
fld
push
mov
jnp
in
xor
pop
bound
xor
dec
sbb
out
jnp
and
push
cdq
dec
fs
cmps
data16
(bad)
xor
addr16
ficom
mov
mov
mov
fistp
inc
mov
push
ins
cld
inc
add
mov
push
push
mov
pop
jo
adc
jecxz
ret
popw
je
addr16
jmp
ror
add
cmp
bound
ins
stos
pop
xor
jp
les
in
sub
inc
and
mov
cld
bound
test
jb
int3
sub
leave
addr16
or
scas
fldcw
shr
xor
add
add
mov
cmp
sbb
ss
cld
sbb
shr
ret
inc
(bad)
shr
mov
xchg
addr16
out
dec
and
clc
pusha
lock
pusha
dec
jl
ins
push
push
fdiv
or
(bad)
dec
ins
jo
cmc
xor
sbb
push
pop
mov
cmp
inc
add
rcr
aad
rcr
int3
pop
mov
xchg
call
sub
pop
ja
xor
push
movs
jb
adc
out
gs
jnp
cmps
ins
test
pop
or
cmc
inc
push
sbb
and
jge
inc
je
jae
test
ds
ret
jmp
adc
add
dec
mov
push
inc
push
enter
sbb
in
add
ins
cmps
inc
pavgw
push
sbb
pop
lods
or
dec
clc
dec
mov
icebp
dec
and
push
sar
ss
fs
pop
aas
dec
jae
outs
add
cmp
cdq
and
or
sub
sbb
push
(bad)
inc
sub
xor
aad
push
inc
scas
shl
bound
mov
lods
cmps
add
lock
xchg
aam
rcr
outs
imul
rcr
call
mov
aaa
imul
sbb
adc
scas
inc
adc
sub
shr
test
add
push
cmps
out
outs
(bad)
(bad)
mov
and
loope
push
push
and
jno
pop
outs
fld
dec
or
adc
push
bound
mov
jns
pop
or
jo
nop
es
fs
adc
cmp
out
aaa
addr16
fisubr
pop
adc
test
dec
pop
cmp
cs
test
cmps
mov
lea
(bad)
call
xor
inc
and
lods
enter
mov
not
bound
pop
add
out
dec
fstp
inc
fwait
adc
popa
ret
outs
pop
call
sub
bound
fcom
out
test
nop
sbb
xchg
ror
cmp
push
shl
cmp
push
imul
push
imul
sub
push
and
jle
adc
fdiv
push
xlat
neg
or
out
test
outs
xor
test
and
aaa
outs
ret
daa
push
xor
(bad)
ins
push
sbb
arpl
or
pop
or
and
outs
cmp
sar
fst
xchg
mov
or
arpl
popa
loopne
enter
dec
jno
inc
enter
clc
into
add
dec
icebp
shl
ins
inc
mov
inc
hlt
and
cdq
aaa
pop
sbb
aas
adc
aad
or
xchg
xor
loope
enter
shl
lock
iret
ror
cmps
sahf
pop
xor
xor
adc
ss
xchg
push
jmp
leave
popa
sbb
cmc
enter
in
les
lahf
adc
pop
mov
sbb
ret
jge
sub
cmp
xor
adc
pop
adc
inc
pop
inc
or
add
icebp
outs
push
loope
repz
ins
stos
addr16
loope
jmp
bound
pushf
test
xchg
jbe
xor
in
ja
movs
cs
push
sub
mov
outs
xchg
mov
jbe
mov
ins
loop
daa
jnp
addr16
outs
out
add
xchg
fs
push
stos
pop
mov
mov
or
jae
outs
into
popa
and
nop
push
rcr
scas
xchg
loope
cmps
ins
ins
jmp
xor
inc
jb
jl
mov
inc
pcmpgtb
sbb
xchg
leave
fimul
adc
pushf
div
jmp
ss
(bad)
cli
push
imul
outs
sbb
push
mov
popa
add
push
inc
ins
or
and
pop
pop
adc
sub
or
in
cmp
xchg
cmp
sbb
lock
cmp
dec
jl
xchg
je
shl
push
push
int3
and
pop
bound
je
pop
sti
and
xlat
movs
or
xor
push
out
rol
xor
sbb
and
add
sub
int3
test
mov
push
mov
imul
jmp
jmp
(bad)
sbb
cmp
jmp
dec
aam
iret
repz
and
jmp
fimul
neg
out
loopne
int3
out
xchg
scas
xor
in
in
aam
jmp
xlat
out
loop
sub
out
jmp
pop
jb
mov
hlt
inc
loopne
(bad)
jg
in
sub
ret
cmc
out
bnd
loopne
lock
test
lock
jl
in
call
and
jbe
fwait
inc
push
loop
sti
adc
icebp
icebp
call
out
jmp
neg
inc
xchg
sbb
loop
cmp
jmp
int
loop
xchg
inc
jmp
ror
lock
sar
xor
and
out
cld
lods
inc
xor
push
clc
rcl
cli
(bad)
fist
cs
pop
jbe
adc
in
int
pusha
data16
push
xchg
sti
add
loopne
cs
mov
xchg
mov
lods
inc
mov
push
loop
loop
and
mov
jmp
fistp
cld
and
iret
shl
jmp
jmp
push
sbb
jbe
lock
and
stc
adc
inc
dec
(bad)
in
add
mov
repz
jb
jo
add
repz
fadd
loopne
test
push
fsubr
hlt
cmc
mov
jo
xor
out
punpckhdq
loop
push
bound
dec
xchg
xchg
hlt
jne
adc
sbb
push
in
push
aaa
out
xor
loop
out
out
out
xchg
lock
push
xor
mov
in
out
ins
fisub
(bad)
(bad)
or
icebp
add
in
loope
(bad)
or
shl
popa
jae
pop
push
loopne
in
jbe
sub
rol
ss
mov
sbb
xor
inc
shr
in
or
sbb
into
out
pop
lods
sbb
repz
xchg
cdq
or
lock
les
test
(bad)
in
repz
sub
sub
ds
pop
loope
jno
or
lea
outs
inc
out
scas
jle
jmp
inc
out
fucom
(bad)
stc
or
hlt
sub
shl
hlt
push
imul
xchg
inc
iret
ds
repnz
clc
inc
xchg
push
jmp
adc
(bad)
test
or
out
mul
cmps
and
aam
push
cld
sub
hlt
hlt
ret
or
hlt
out
pop
dec
and
sahf
jmp
fimul
xchg
loopne
add
inc
or
mov
(bad)
cmp
mov
lea
(bad)
jnp
test
in
aas
mov
out
popa
cmp
push
rol
imul
repz
add
push
and
push
(bad)
adc
inc
nop
ret
or
adc
test
mov
int3
or
jmp
pop
outs
push
loopne
call
xor
pop
int3
push
pop
iret
and
mov
mov
jecxz
pop
call
push
loopne
sub
mov
sbb
and
jo
pop
repnz
inc
mov
mov
dec
jno
(bad)
in
push
inc
retf
or
test
pop
pop
ret
stos
dec
fadd
push
test
pusha
stos
or
inc
cs
shl
out
add
das
in
add
shl
das
ret
add
loop
retf
pop
jg
shl
and
int3
aad
xlat
loope
div
cmps
repnz
loopne
fwait
popa
push
aad
pop
push
scas
ret
mov
and
push
rcl
ret
call
sbb
in
mov
adc
dec
repz
fnsave
mov
push
mov
adc
repz
stos
or
imul
(bad)
add
jno
out
(bad)
push
cmp
cmovo
pusha
push
pop
(bad)
push
inc
cld
jp
push
fimul
inc
or
mov
mov
stos
and
pushf
xor
jne
or
rcr
inc
mov
clc
aad
jl
jg
sub
cli
jl
mov
shl
or
push
pop
inc
jg
add
psrlw
fxch
adc
inc
add
mov
mov
jb
jmp
add
adc
lods
and
jmp
or
popa
rcl
inc
adc
sub
ins
fcmovnu
dec
dec
cmp
add
dec
sbb
loopne
add
adc
lods
(bad)
xchg
sahf
push
loope
jbe
aas
or
add
pop
and
fcomp
aas
arpl
lods
cli
or
xor
sbb
cmp
and
outs
retf
xor
mov
push
aas
pop
call
loopne
mov
cmp
inc
xor
fwait
dec
jg
cmp
push
xchg
sbb
fisub
pop
or
xchg
test
retf
and
outs
adc
push
add
dec
push
mov
(bad)
arpl
and
inc
push
jns
loopne
cmp
xor
js
hlt
add
aaa
push
and
mov
mov
xchg
mov
push
mov
pusha
mov
pop
sub
out
fisttp
daa
ja
adc
pop
dec
ins
or
push
push
adc
pop
stc
or
lock
int3
xor
pop
xor
add
adc
xchg
jo
sub
pop
je
int3
adc
add
fldcw
mov
dec
dec
or
mov
adc
rcl
add
and
mov
xchg
mov
push
stos
pusha
or
adc
xlat
ja
jae
das
mov
cmp
movs
adc
adc
and
aas
lods
pop
aaa
repnz
push
mov
add
mov
cmp
rcl
push
jo
outs
and
inc
aaa
cmp
push
mov
jge
iret
movs
cdq
pop
nop
jmp
ss
loopne
lods
jge
or
(bad)
sub
das
loope
xor
cmp
and
jo
fstp
pop
test
fwait
jo
mov
in
mov
aas
adc
loope
mov
mul
mov
scas
lods
or
test
packsswb
push
stos
les
fisubr
js
arpl
je
(bad)
mov
bound
xor
xor
sub
pop
cli
adc
out
das
sbb
fcmovne
push
sbb
aaa
(bad)
fiadd
std
mov
dec
cmp
xchg
push
and
bound
or
push
sti
inc
in
mov
and
mov
add
xchg
mov
test
push
and
sbb
xchg
fsub
cmp
mov
das
push
add
sbb
mov
push
adc
ror
loopne
(bad)
push
movzx
loopne
xchg
xchg
das
pop
sbb
xchg
pusha
fs
xchg
loopne
jo
(bad)
pop
pop
les
test
aas
dec
push
xchg
data16
mov
and
mov
sub
add
lahf
ffree
rol
push
jl
fs
or
mov
mov
xchg
push
add
cmc
ins
int3
and
add
inc
or
inc
xlat
mul
xor
rcl
add
mov
retf
test
mov
fs
add
dec
inc
push
pop
outs
push
or
inc
push
push
push
mov
push
ja
or
adc
mov
pop
and
pop
xlat
add
icebp
call
popa
test
rcr
pop
ss
add
fild
add
jns
xor
inc
sbb
push
sbb
ret
add
sub
and
jl
push
sbb
and
sub
punpckhwd
sbb
add
xor
ss
inc
movs
or
popf
fld
or
lods
cdq
add
xor
mov
push
sbb
or
push
inc
pop
and
xor
stos
sub
loope
sub
push
dec
jae
fsub
mov
or
outs
pop
sub
sbb
and
mov
and
bound
jne
add
jmp
outs
pop
stos
mov
iret
sub
add
cmp
mov
xlat
add
fidivr
push
push
mov
or
fcomip
scas
repz
not
jbe
pop
sbb
ret
sbb
je
fisubr
cmp
lods
and
push
inc
scas
loopne
or
push
inc
pop
mov
xchg
fs
or
or
xlat
fisub
daa
push
(bad)
dec
loope
into
push
dec
inc
jne
test
(bad)
inc
and
dec
das
cwde
movs
fdiv
xlat
adc
mov
mov
inc
jae
sub
pop
add
loope
mov
adc
xor
out
stos
loopne
sbb
cmp
ja
imul
clc
jb
ins
xor
lock
inc
outs
xor
popa
jge
dec
push
sub
add
(bad)
test
cmps
imul
daa
test
pop
xchg
std
jns
into
and
mov
jl
push
rcr
cwde
fwait
ret
popa
data16
add
pop
out
arpl
pusha
or
pusha
aam
ret
rcr
test
imul
sbb
or
jo
inc
or
int
fimul
pop
jnp
aaa
inc
(bad)
rcr
aam
push
popa
inc
push
aas
aas
cmp
dec
lds
fidivr
adc
(bad)
lock
push
add
add
inc
aaa
(bad)
pop
sti
outs
retf
aas
retf
xchg
adc
loope
push
sbb
fistp
adc
push
pop
call
hlt
inc
sub
js
push
xchg
inc
ud2
jns
jns
and
inc
push
mov
xchg
cs
mov
inc
addr16
xchg
push
mov
aaa
mov
sbb
int
inc
loope
sub
fimul
out
mov
mov
inc
mov
sbb
(bad)
jmp
cmps
pop
sbb
xchg
rcl
pop
xchg
jae
ja
mov
(bad)
pop
add
popf
jo
(bad)
aad
lock
inc
push
test
and
std
fild
popa
push
addr16
xor
push
cs
jns
popf
das
xor
xor
xor
xor
mov
dec
sbb
mov
lods
dec
ja
out
ret
xchg
pop
rcl
pop
dec
jns
in
outs
lock
(bad)
dec
inc
pop
pop
dec
dec
inc
inc
dec
pop
dec
inc
inc
dec
dec
dec
inc
aam
icebp
(bad)
mov
fs
adc
gs
jmp
xor
or
sbb
inc
data16
xor
and
mov
add
push
dec
mov
pop
arpl
xor
outs
cmp
inc
and
je
mov
sub
ins
dec
add
js
jp
pop
in
or
daa
and
xchg
inc
mov
nop
scas
pop
punpckhbw
in
push
jmp
cwde
ins
mov
lea
cli
test
adc
push
and
push
inc
push
dec
adc
and
sub
cmps
loopne
push
inc
lods
fcomp
mov
and
fadd
add
mov
icebp
and
ja
inc
(bad)
fmul
ins
and
jp
inc
cmp
mov
rdmsr
pop
xor
data16
int3
push
mov
xlat
fisubr
out
sub
pusha
push
popf
out
jmp
and
sbb
dec
pop
rcl
out
inc
mov
sbb
mov
pop
pop
add
push
add
aad
sub
xor
icebp
loopne
div
or
add
dec
cmp
dec
xor
imul
and
repz
jmp
xor
inc
pop
cmp
push
push
mov
inc
jns
aad
or
sub
push
add
inc
inc
fsubrp
fimul
push
jae
adc
pusha
sbb
and
(bad)
iret
dec
mov
add
adc
and
outs
add
test
xor
dec
and
inc
jbe
xor
and
movs
and
add
or
stos
add
xor
pop
push
ret
mov
dec
nop
and
push
in
pop
push
push
pop
sub
popf
out
push
outs
and
sbb
lock
fs
xchg
gs
mov
inc
xor
clc
adc
mov
cmp
mov
addr16
bound
jbe
inc
jg
movups
scas
aaa
test
aas
out
pop
jp
lock
xchg
dec
adc
inc
xor
pop
and
push
pop
das
data16
cwde
sbb
shl
inc
movs
out
dec
inc
add
fisub
inc
push
inc
mov
mov
les
xchg
xor
jae
loop
inc
fabs
sti
and
jle
das
add
sub
cmps
icebp
and
ret
hlt
jae
cdq
cmps
mov
loope
imul
and
push
jmp
xchg
addr16
jo
push
imul
jae
(bad)
mov
dec
add
adc
or
cmp
cmp
xor
mov
push
push
inc
inc
inc
pop
pop
inc
pop
dec
sub
push
ins
pusha
push
dec
push
pop
cmp
and
pop
mov
sbb
test
in
dec
cmp
dec
cmps
js
fdiv
push
pop
cmp
test
rcl
or
dec
push
sbb
pop
mov
push
and
aas
push
gs
or
cmp
ja
or
aas
fwait
jnp
les
pop
mov
xchg
jge
aas
jne
test
sbb
and
add
stos
je
movs
mov
jnp
mov
push
popa
arpl
ret
cmp
cmp
or
push
dec
pop
in
xor
mov
in
add
mov
pop
or
test
add
pusha
adc
lods
or
ins
and
and
or
lods
xlat
lock
dec
jae
push
cs
cmp
add
adc
cmp
loope
or
out
test
mov
lock
ss
ret
xor
sbb
xorps
xchg
test
lods
xchg
jmp
test
cmp
push
pop
adc
fwait
inc
and
dec
(bad)
idiv
mov
and
pop
adc
mov
and
inc
or
adc
jne
mov
add
jae
xor
popa
push
push
iret
or
(bad)
aaa
adc
xchg
cmp
aam
inc
sbb
jmp
ror
neg
xchg
xchg
popf
test
push
pushf
mov
fidivr
pop
add
movs
mov
xor
dec
push
lods
lods
jbe
fs
out
sbb
add
pop
outs
jge
aas
adc
adc
mov
cmp
mov
sub
mov
aaa
loop
mov
mov
js
inc
adc
push
sbb
add
gs
jecxz
inc
push
rcl
sahf
sbb
xor
inc
jg
inc
or
inc
push
push
push
dec
dec
cmc
sbb
add
push
fmul
cmp
and
sbb
push
add
sub
sbb
jg
and
pop
bnd
mov
jo
lock
and
jb
(bad)
push
fsubr
ss
scas
or
cmp
mov
xor
push
add
outs
imul
test
and
outs
and
xor
mov
outs
add
inc
inc
lods
mov
and
cmps
pop
pop
sub
pop
push
adc
arpl
scas
sub
dec
cmp
xchg
gs
xchg
add
or
jns
sub
add
data16
imul
test
push
aaa
mov
mov
bound
push
ret
sub
sbb
ret
call
data16
xor
data16
test
fld
push
das
mov
aam
outs
dec
mul
retf
sub
xor
or
adc
imul
test
jae
outs
pop
daa
mov
xor
push
push
inc
ret
outs
push
ja
adc
dec
shl
das
bound
push
in
test
jl
dec
inc
inc
inc
out
adc
dec
loop
jge
outs
add
and
jne
pop
pop
pop
or
pop
lods
add
outs
push
int3
or
pusha
jbe
aas
push
or
mov
sub
dec
rcl
mov
jbe
push
fiadd
inc
repz
jmp
aam
js
xchg
push
lods
push
lea
cdq
popa
mov
sub
inc
scas
xlat
add
adc
sbb
jecxz
adc
mov
mov
sub
mov
or
dec
pop
imul
inc
and
jmp
fistp
xor
or
and
mov
test
dec
pop
inc
dec
dec
push
inc
and
push
adc
call
cwde
jle
jb
mov
lods
test
outs
(bad)
fst
je
adc
inc
push
jmp
inc
pop
mov
or
call
dec
shl
mov
shl
cmp
or
push
dec
push
test
ret
icebp
cs
mov
mov
dec
inc
lahf
leave
pop
or
pop
sub
jp
adc
or
push
jno
data16
outs
sub
iret
and
jbe
or
inc
add
inc
mov
iret
je
aad
jb
inc
jnp
dec
fisubr
addr16
inc
ja
jnp
adc
(bad)
push
jnp
mov
ins
adc
jns
jo
imul
imul
adc
popa
outs
add
or
shl
pop
je
ds
lock
inc
pop
jae
push
push
ins
cs
outs
sbb
les
jle
mov
jae
add
int
jno
sbb
xchg
mov
int
mov
sub
push
in
sub
je
mov
mov
or
rcl
jne
jbe
or
add
pop
pop
inc
jp
push
or
jne
in
fcmovb
pushf
and
add
and
pusha
adc
iret
lods
adc
ins
mov
sub
mov
test
sbb
sbb
push
repz
push
and
and
int
push
cs
sub
mov
mov
xor
popa
rcl
ins
adc
pop
test
xlat
shl
shr
sub
xor
jmp
bound
jae
daa
retf
outs
dec
and
int
xchg
cmp
dec
je
clc
cmp
jns
bound
dec
(bad)
jae
cmp
dec
xchg
(bad)
dec
stos
mov
and
fcomp
inc
fs
jo
and
push
push
movs
push
and
pop
imul
push
jmp
mov
xchg
add
ja
rcr
imul
int3
dec
dec
dec
out
cmp
enter
dec
mov
inc
aas
outs
mov
xor
lock
sbb
inc
cmp
xor
xor
xlat
loop
mov
(bad)
sar
inc
sbb
adc
mov
inc
in
xor
in
shl
rcr
ret
sub
loop
or
push
xchg
inc
inc
enter
sub
cwde
mov
push
ins
sub
add
inc
sub
mov
mov
pop
inc
test
cmp
js
and
shl
imul
jmp
daa
xor
and
(bad)
fldcw
ret
les
inc
add
xchg
das
xor
aas
cmc
xchg
adc
xchg
xlat
in
fs
add
push
and
adc
cmp
(bad)
popa
mov
mov
shl
dec
or
sbb
sub
(bad)
jno
shr
pusha
lea
jo
mov
sar
ja
xor
pop
inc
add
popa
inc
pusha
xchg
and
sbb
adc
and
loope
clc
xor
test
sbb
sub
jbe
test
add
xor
adc
test
cmp
push
jo
push
push
daa
adc
xor
mov
jne
lods
mov
cmps
in
mov
mov
into
xchg
pop
adc
sub
push
xor
je
push
imul
xor
pop
xor
mov
loope
(bad)
arpl
dec
mov
inc
push
lea
outs
push
xchg
cmps
push
mov
call
jmp
sub
out
add
inc
popa
aaa
dec
or
add
or
mov
dec
sub
lea
pop
mov
cwde
jo
inc
idiv
loop
(bad)
rcl
jns
inc
sbb
or
sub
dec
mov
daa
addr16
xor
pop
mov
fist
clc
inc
ins
mov
xor
cmp
or
mov
ror
add
push
sbb
pop
sub
xor
lea
push
pop
test
or
xchg
ds
and
add
sub
sar
and
jb
sbb
or
sbb
push
or
or
es
add
sbb
jp
bound
mov
(bad)
out
cmp
pop
sub
sub
dec
dec
sub
sbb
push
inc
push
xor
mov
bound
inc
call
push
loopne
das
pop
adc
das
(bad)
jmp
and
loope
push
es
gs
dec
xor
xchg
add
add
pop
retf
or
sub
add
mov
out
outs
lock
add
xchg
or
test
inc
and
aaa
push
imul
iret
sti
or
and
or
cmp
mov
mov
jle
movs
popf
(bad)
std
cmp
and
push
int
bound
sub
sbb
dec
ja
cmp
xchg
inc
xor
stos
inc
xor
div
push
mov
jp
mov
and
arpl
fadd
adc
(bad)
scas
xchg
jae
lds
push
test
out
mov
push
aaa
xor
xor
inc
loope
xor
cmp
and
or
and
fiadd
ja
xor
call
push
push
add
mov
xor
push
pusha
and
or
dec
add
pop
dec
xchg
add
xchg
dec
xchg
push
dec
and
dec
mov
push
ja
ins
push
pop
jg
jne
bound
mov
jb
outs
mov
shl
ins
sbb
fs
jo
sub
mov
xchg
jmp
push
xor
sbb
mov
mov
pop
out
mov
cmp
unpckhps
mov
outs
cli
and
popf
fnstsw
push
(bad)
jne
and
xchg
in
pop
and
test
(bad)
jne
push
push
jp
aaa
sub
hlt
faddp
(bad)
gs
dec
adc
cmp
mov
imul
stos
mov
addr16
(bad)
lea
pop
cmps
mov
cmp
jne
jne
ja
cmp
daa
repnz
fist
imul
dec
imul
xchg
sub
inc
push
lahf
xor
sbb
lock
ret
aas
mov
jbe
mov
sbb
jnp
sbb
jnp
aas
inc
arpl
ins
sub
ins
lea
adc
pusha
(bad)
mov
dec
push
scas
xor
push
popa
jns
ret
ret
inc
(bad)
leave
xchg
scas
add
add
div
sbb
mov
(bad)
ins
xchg
push
mov
arpl
pop
pop
mov
outs
scas
mov
jecxz
aas
retf
arpl
(bad)
shl
sbb
pop
(bad)
daa
das
mov
inc
inc
sbb
and
out
inc
sbb
setno
add
add
pop
outs
push
or
into
fwait
jne
les
popf
mov
xchg
mov
xchg
xor
shl
and
cmps
outs
or
fs
xchg
or
push
pop
inc
and
jecxz
xchg
adc
test
xor
iret
fidiv
push
aas
cs
xor
mov
pop
or
push
xchg
add
or
stos
jns
dec
fstp
add
inc
div
sbb
cs
movs
popa
inc
jae
jae
and
paddw
das
push
add
cmp
add
bound
or
pop
retf
or
sub
or
(bad)
add
imul
cmps
lahf
scas
push
mov
and
aas
test
inc
cmps
push
push
jb
xchg
call
adc
scas
and
push
pop
xchg
adc
jb
mov
arpl
adc
and
adc
push
mov
imul
test
sar
add
add
xor
xor
xchg
popa
ss
pop
loop
push
movs
dec
daa
push
sub
cmp
add
inc
pop
lds
(bad)
sahf
cmps
add
pop
out
push
mov
je
out
test
mov
mov
dec
xor
xor
push
push
cmp
aaa
sub
push
xor
xchg
fwait
jo
mov
movs
sub
dec
sbb
inc
iret
(bad)
or
jb
jne
push
mov
or
pop
ins
loop
mov
or
pop
arpl
ret
push
jg
shr
push
or
xlat
or
and
call
push
jp
ret
adc
shl
cmp
inc
ret
and
sbb
fiadd
outs
add
add
in
add
fild
ja
sbb
jle
das
xor
cmp
ins
pop
mov
add
popa
addr16
or
ins
fsubr
fs
xlat
xchg
mov
mov
and
jo
dec
popa
test
sbb
mov
adc
xchg
push
xchg
nop
jge
jbe
popa
pop
jns
xor
add
adc
dec
ins
dec
and
ins
push
popa
xor
jns
pop
pop
imul
pop
and
shl
adc
mov
cmp
xchg
pop
dec
outs
mov
xchg
ds
jbe
stc
lea
ds
test
dec
je
shl
outs
pop
dec
mov
push
xlat
test
fcomp
push
aas
adc
mov
xor
and
push
es
inc
sbb
gs
test
adc
mov
add
dec
mov
je
dec
jns
mov
arpl
jg
std
ds
xchg
dec
ret
inc
sbb
outs
mov
sar
aas
xchg
push
jo
sub
xchg
mov
mov
sbb
aad
aas
dec
push
popa
mov
mov
sub
jmp
sbb
sbb
nop
sbb
and
mov
jmp
inc
popa
jae
sub
ficomp
pop
(bad)
dec
jae
cmp
rol
call
daa
hlt
aam
scas
lods
mov
jmp
sar
arpl
fadd
lods
mov
sbb
or
mov
movs
jns
xor
mov
aaa
outs
xor
mov
jge
sbb
aaa
push
(bad)
(bad)
rol
(bad)
jbe
pop
sub
out
lods
stc
movs
aaa
dec
add
adc
jmp
stos
in
add
sbb
xchg
mov
jg
cmp
push
pusha
enter
call
xor
xor
adc
out
sub
cmp
push
daa
shl
adc
nop
pusha
add
mov
adc
mov
popa
aam
mov
xor
shr
rol
or
sbb
fst
pop
xor
rcr
or
xchg
mov
lea
sub
xor
mov
das
sbb
mov
mov
or
cmp
pop
nop
pop
or
or
ficomp
xor
mov
sub
(bad)
jg
test
arpl
call
inc
pop
mov
sub
mov
or
xor
jb
xlat
ja
pop
or
sbb
add
cmp
(bad)
in
mov
mov
cmps
mov
sbb
pop
int3
sub
inc
mov
xor
sbb
or
cmp
add
inc
inc
cmp
cmc
sub
push
aas
push
imul
pop
push
add
fimul
and
sbb
fmul
dec
pop
push
dec
cli
scas
cmp
dec
push
dec
dec
pop
scas
test
cmps
inc
inc
cmp
or
popf
mov
add
lods
movs
and
je
mov
lock
scas
nop
bound
and
cmp
loop
push
xchg
ror
cmp
sbb
mov
adc
daa
jne
sub
add
ret
fmul
out
repz
cmps
push
sti
test
je
push
ja
sub
push
push
in
pusha
sub
adc
sbb
loopne
and
dec
or
jae
ins
pop
fisub
xlat
pop
sub
js
loope
pop
dec
push
jo
push
ret
ja
xchg
rcl
sbb
stc
test
dec
(bad)
lods
sbb
stos
fild
mov
adc
lods
movs
mov
inc
add
add
stos
xor
jns
mov
xor
inc
xchg
or
loope
fisub
fld
adc
pop
je
inc
stos
ret
repz
and
fisubr
jg
add
add
ret
xchg
out
sahf
ret
xchg
daa
push
push
aam
cmp
sub
adc
cmp
test
mov
inc
aaa
leave
imul
mov
xor
mov
cmp
adc
lahf
push
nop
loopne
jg
cwde
popf
mov
outs
jb
add
daa
xor
push
(bad)
xchg
push
xchg
and
push
mov
mov
das
movs
xor
inc
fbld
ss
sti
sahf
push
adc
add
push
pop
adc
repz
inc
mov
pop
dec
je
rol
sbb
inc
fiadd
jno
inc
mov
and
or
inc
inc
ins
xchg
icebp
mov
sbb
daa
or
dec
xchg
inc
ja
or
shl
xor
jmp
adc
xchg
je
idiv
push
push
cmp
ror
aas
(bad)
xor
rcr
cmps
add
pop
mov
fnsave
pop
sbb
sbb
addr16
out
fimul
clts
add
pop
push
push
add
jns
pop
pop
pop
push
out
push
pusha
pop
push
push
movhlps
sar
adc
or
es
adc
stos
mov
push
lahf
pop
jmp
push
lea
and
ins
dec
(bad)
sbb
in
das
(bad)
xor
push
mov
or
stos
and
daa
inc
mov
call
aaa
loop
mov
mov
(bad)
sbb
shl
outs
jmp
mov
xor
dec
pop
dec
bound
push
and
push
sub
pop
test
push
imul
shr
and
cmp
push
jno
add
add
inc
cdq
and
adc
mov
mov
pushf
jbe
jae
fistp
jle
mov
movs
lahf
mov
jecxz
mov
sbb
mov
or
push
and
pop
jbe
push
ret
mov
mov
outs
inc
inc
xchg
frstor
dec
jo
jno
jb
iret
repz
jae
je
repz
repz
jbe
ja
repz
(bad)
js
jns
jp
iret
repz
jnp
jl
repz
repz
jle
jg
repz
into
or
rol
rol
cmp
repz
xchg
xchg
repz
jmp
in
pop
addr16
cmp
repz
or
or
repz
repz
or
cmp
sbb
jmp
add
out
sahf
and
and
sahf
out
daa
push
sub
out
sahf
out
and
pusha
(bad)
repz
sub
sub
repz
aaa
push
ds
add
repz
pusha
mov
popa
mov
jns
out
mov
mov
sahf
out
sahf
mov
mov
mov
jns
out
mov
out
sahf
out
stos
imul
ins
scas
outs
scas
outs
push
cmps
rcl
sbb
iret
cmp
lea
or
iret
repz
and
cmp
repz
cdq
sub
call
jns
sahf
push
sub
jns
out
loop
jecxz
in
out
dec
out
in
adc
movs
imul
in
xor
adc
inc
mov
sbb
imul
mov
and
jmp
outs
imul
pusha
cmp
push
imul
pop
dec
add
add
push
in
xor
xor
in
add
shr
sbb
dec
xchg
or
mov
ins
pop
jne
outs
dec
or
and
daa
xor
gs
pop
jno
xchg
das
ins
pop
dec
pop
inc
add
out
sar
neg
(bad)
fs
mov
dec
stos
aaa
arpl
add
xchg
pop
fs
pop
ins
add
mov
fnstsw
add
mov
aaa
inc
inc
fld
lea
mov
mov
imul
mov
jne
fs
jb
mov
pop
and
or
out
push
xor
xor
inc
inc
push
inc
push
push
dec
dec
dec
(bad)
movs
pop
movs
or
sbb
jns
add
pop
jbe
loope
and
sahf
mov
xchg
adc
call
inc
stos
xor
bound
sbb
jp
sbb
pop
jns
test
inc
xor
rcl
xor
jp
xchg
test
pop
xchg
inc
ins
adc
sbb
and
cli
pusha
xchg
push
and
jns
xor
lods
daa
mov
xchg
shl
addr16
pop
inc
aas
xor
popa
movs
and
ror
bound
cwde
or
out
inc
mov
cmc
mov
call
push
xchg
sub
(bad)
es
call
je
jb
or
pop
out
inc
push
push
outs
mov
push
mov
jnp
xchg
xor
not
mov
scas
jae
xchg
(bad)
aad
sub
sbb
fnsave
stos
jb
jo
out
push
ret
jae
pop
ja
mov
call
popa
mul
and
and
fist
lock
jns
dec
leave
rcl
jo
or
loope
fisttp
fbstp
arpl
ds
mov
jne
xor
into
js
fnstcw
add
push
test
inc
pop
xchg
es
pop
push
and
cmp
push
ss
dec
shl
add
inc
cdq
ficom
lods
pusha
lock
pop
ss
ret
dec
inc
mov
add
xchg
in
mov
pop
cmp
pop
imul
jnp
hlt
dec
xor
dec
add
outs
ins
fs
rcr
push
or
pop
pop
dec
mov
inc
outs
inc
and
loop
push
sbb
mov
push
jb
xor
add
arpl
(bad)
sbb
pop
jbe
arpl
inc
jmp
fst
cld
loop
or
sbb
dec
nop
loop
leave
pop
ja
rcr
and
jnp
pop
sub
jg
pop
adc
ret
sahf
push
xchg
pop
xor
cs
dec
and
cmps
add
and
ror
mov
mov
pop
(bad)
cmp
jle
push
fistp
cmp
popa
mov
nop
ins
xor
pusha
daa
mov
push
pop
adc
mov
dec
push
inc
push
push
dec
push
mov
enter
sub
inc
xor
xchg
pusha
sub
mov
cmp
out
stc
popa
jnp
sbb
or
xlat
dec
sbb
daa
icebp
ret
sbb
fldcw
adc
pop
jp
dec
sahf
jge
push
jb
xchg
pop
sub
xchg
jle
dec
dec
es
cmp
inc
sub
pop
adc
int
test
sub
and
int
mov
fs
sbb
mov
rol
inc
fmul
ret
inc
movs
jmp
pop
loope
mov
cmp
push
push
dec
push
push
aad
jb
dec
push
xsha256
cmps
push
inc
imul
and
jne
jbe
push
dec
push
(bad)
xlat
or
cmp
xor
ins
pop
cmp
adc
or
imul
xchg
sbb
sub
rcl
cmp
xlat
into
xlat
movs
stos
adc
or
push
pop
or
cmps
add
loope
lock
cmp
shl
add
ret
add
xor
call
add
ret
or
dec
repnz
push
push
pop
mov
push
sub
fnsave
pop
sbb
out
cmp
adc
push
jne
fdiv
push
push
leave
dec
stc
outs
jmp
add
inc
aam
sub
ins
pop
or
push
cmp
imul
pop
xor
ror
inc
or
dec
add
push
dec
and
jb
arpl
jl
stos
(bad)
jae
mov
push
aad
inc
aam
sbb
scas
adc
add
(bad)
adc
outs
out
aad
cmps
daa
push
cwde
jo
pop
adc
push
aam
or
out
ret
mov
push
jo
sbb
invd
mul
or
push
push
xor
lock
rcl
ds
aaa
add
out
cdq
pushf
sub
add
je
jl
inc
dec
inc
outs
imul
mov
mov
xchg
sub
inc
dec
cmp
repz
mov
inc
adc
inc
shl
stos
sub
adc
cmp
rcr
jle
pxor
xor
test
jo
xchg
or
sub
xchg
xchg
jle
outs
aad
cmps
inc
jb
ret
sbb
and
mov
xor
lods
dec
dec
and
sub
mov
dec
sub
xor
movs
cmc
jp
lods
mov
jb
out
jecxz
add
mov
inc
bound
add
hlt
std
in
cmp
(bad)
push
inc
inc
and
sbb
jmp
je
std
outs
add
or
cmp
inc
gs
adc
xchg
es
aaa
das
int
xor
into
push
or
inc
push
cmps
and
inc
cdq
sub
jae
arpl
or
dec
outs
or
sar
aas
loopne
lahf
xlat
into
in
pop
push
push
jno
inc
cdq
mov
push
pop
ret
dec
mov
and
push
sbb
adc
shl
add
pop
frstor
xor
adc
dec
jb
dec
inc
inc
sub
push
dec
mov
retf
inc
cmp
lock
enter
pop
addr16
bound
xchg
mul
das
mov
inc
movs
sub
retf
dec
pop
and
push
test
sub
and
mov
rcl
jns
sbb
in
sbb
sbb
mov
int3
movs
scas
xchg
xchg
ret
inc
inc
pop
pop
test
jg
jnp
inc
push
push
xor
add
(bad)
add
push
clc
(bad)
and
push
xor
in
and
ret
and
mov
jmp
inc
sub
dec
add
cmp
sbb
adc
push
add
(bad)
jge
mov
lods
rcr
mov
adc
xchg
dec
jne
inc
pop
sbb
cmp
nop
push
ins
packuswb
icebp
add
mov
xor
mov
and
push
fcomp
add
pop
and
add
addr16
or
or
or
cmp
aas
popa
sar
or
fsub
dec
(bad)
adc
fadd
inc
cmp
(bad)
push
adc
hlt
dec
pop
and
add
bound
shr
aaa
sub
cmp
mov
sub
and
sub
xor
inc
cs
jb
jbe
psubusb
and
hlt
arpl
lock
jno
stc
or
xchg
or
les
add
pop
jo
xchg
push
sub
ret
call
lods
das
pop
adc
add
sti
popa
adc
add
or
xchg
push
pop
mov
aas
pop
imul
ins
push
aas
bound
push
xlat
xlat
leave
shr
rcr
jmp
ficom
mov
inc
js
and
push
mov
ret
ins
pop
mov
addr16
or
daa
and
adc
inc
xor
push
pop
inc
inc
xlat
les
or
or
aad
or
dec
cdq
loop
xor
imul
cmp
arpl
dec
and
jo
xchg
lea
push
std
cwde
add
(bad)
js
sub
xor
mov
popa
xchg
lods
popa
loope
add
or
adc
mov
js
aaa
push
mov
and
nop
je
xor
inc
dec
(bad)
loopne
shl
leave
and
inc
mov
loopne
shl
popf
jmp
push
mov
loope
mov
xchg
xor
fs
lods
mov
icebp
jne
test
cs
sub
jmp
(bad)
imul
pop
and
ficom
popa
js
mov
sub
mov
clc
sub
pop
les
jae
lods
mov
mov
sar
sub
dec
pop
jae
aaa
iret
inc
adc
ins
stos
cmps
xor
mov
push
ret
outs
mov
and
inc
add
push
pop
repnz
mov
sbb
repz
out
inc
outs
mov
sub
(bad)
outs
cmp
mul
inc
dec
dec
mov
sub
outs
addr16
or
loope
push
push
out
sbb
jb
inc
inc
sub
imul
das
push
ins
ret
inc
ins
outs
xor
mov
pusha
jae
sbb
mov
sub
xlat
nop
fidiv
xor
sub
push
adc
shr
sub
cmp
add
pop
lock
xor
adc
xchg
adc
cmps
jbe
mov
ins
add
adc
add
cwde
inc
cmp
(bad)
imul
or
lds
mov
xchg
mov
das
or
and
lods
and
push
cmp
inc
outs
dec
loope
mov
pop
in
pop
xchg
adc
xchg
popf
outs
and
cmp
sbb
scas
push
test
sub
(bad)
push
scas
mov
pop
and
and
add
push
or
loope
aaa
ins
not
jmp
ret
adc
addr16
test
pop
adc
call
cs
and
daa
cmps
cmp
push
inc
xor
mov
xor
jmp
cmp
arpl
inc
inc
loopne
cmp
dec
adc
add
out
push
mov
xchg
push
push
pop
loope
pop
inc
xchg
lods
inc
dec
sub
add
dec
or
dec
add
pop
push
adc
fild
cmps
inc
dec
inc
dec
pop
push
lea
inc
push
push
jns
xchg
push
arpl
sbb
and
pop
push
mov
mov
mov
pop
dec
dec
loopne
ins
fs
mov
add
lea
(bad)
mov
xor
push
push
inc
pop
jg
imul
xor
pop
adc
or
and
aad
mov
popa
xchg
das
xor
shr
add
bound
jae
lahf
fs
fwait
and
xlat
es
dec
sti
adc
jns
shl
push
rol
push
mov
xor
out
js
iret
add
cmps
bound
das
add
push
mov
arpl
pop
inc
and
call
adc
push
and
dec
push
lea
lds
mov
das
outs
pop
fbstp
in
push
add
xchg
cmp
les
inc
push
add
pop
ficomp
ror
jns
nop
bound
test
(bad)
add
bound
mov
and
jnp
pop
pop
test
movs
lods
pop
iret
xchg
mov
lods
push
jnp
aas
mov
fild
pop
imul
loope
les
xchg
(bad)
cmp
les
or
lods
cmp
dec
push
outs
test
shl
add
inc
test
push
test
and
out
mov
inc
inc
push
test
fisubr
add
fldenv
add
or
pop
push
mov
dec
jnp
outs
xchg
inc
pop
lock
adc
out
and
pop
or
cmp
add
add
push
pop
adc
xchg
data16
pop
cs
dec
in
loopne
or
adc
pop
ins
mov
push
ror
in
arpl
out
mov
add
mov
or
sub
push
addr16
lahf
jno
cs
jb
inc
retf
jle
mov
add
sahf
jo
mov
sub
cmp
aas
dec
inc
leave
mov
faddp
jl
jle
inc
jg
push
sub
jg
int3
or
ja
fwait
pop
xor
mov
mov
in
xchg
inc
and
mov
fdivr
xchg
dec
jnp
aas
and
es
mov
idiv
sub
jg
sub
adc
jnp
cs
mov
jg
push
icebp
mov
in
mov
je
and
push
int3
cld
jg
neg
xlat
and
add
jmp
pop
mov
xor
into
cmp
pop
add
inc
add
sbb
pop
jmp
push
cs
outs
pop
xchg
mov
sub
or
push
add
pop
nop
arpl
test
inc
aas
pop
sub
mov
cs
scas
fld
pusha
sbb
push
pop
pop
jg
cmps
cmp
and
imul
sar
push
mov
jg
add
jno
mov
cmps
pop
mov
mov
cmps
daa
out
in
xlat
outs
pop
pop
dec
push
mov
test
add
add
dec
adc
out
push
pusha
pop
or
xor
into
adc
loopne
shl
ror
ds
cmp
mov
push
sar
push
pop
xchg
inc
add
aas
cdq
iret
sub
pop
outs
iret
push
test
lahf
outs
sbb
sub
fwait
add
xor
add
nop
out
lock
add
mov
mov
bound
test
lea
pop
sub
adc
dec
push
pop
cs
cs
jb
sub
inc
clc
outs
bound
pop
jae
mov
aas
dec
arpl
mov
inc
sub
lods
xor
dec
and
xchg
xor
xor
and
pop
mov
mov
pusha
inc
cmps
push
push
push
cmp
loope
out
mov
push
mov
cmp
ja
imul
nop
jns
jg
xchg
cmps
xlat
pop
adc
out
push
xor
mov
out
cmp
pop
mov
pop
mov
pop
jbe
push
adc
add
out
in
loopne
ja
inc
push
mov
in
fiadd
sbb
mov
(bad)
dec
push
fsub
pop
adc
mov
mov
fcomp
mov
ins
iret
jg
js
cs
add
outs
xchg
adc
adc
shr
sub
movsx
pop
or
xor
ins
push
stc
inc
outs
femms
pop
sub
pop
daa
dec
push
jmp
cmp
jmp
cmps
add
call
cmps
out
ja
xchg
cmp
add
scas
adc
adc
enter
xchg
cmp
sub
cmp
mov
in
lods
and
mov
push
cmp
jl
mov
dec
push
(bad)
mov
(bad)
(bad)
(bad)
dec
sbb
mov
pusha
mov
cmp
jg
cmp
pop
jae
call
jmp
fdivr
or
push
mov
ror
jmp
pop
pushf
jae
cmp
aaa
inc
push
addr16
into
cmp
xchg
out
sbb
test
daa
sbb
sbb
aaa
inc
push
sbb
sbb
ja
xchg
cmps
sbb
sbb
mov
xlat
out
daa
pop
sbb
(bad)
cmp
daa
mov
daa
daa
daa
mov
daa
daa
daa
mov
daa
daa
daa
mov
daa
daa
daa
cmp
cmp
cmp
mov
daa
mov
or
mov
cmp
je
cmp
sub
ficomp
or
loope
pop
fiadd
in
add
add
(bad)
(bad)
jg
adc
cld
sbb
or
xlat
pop
sbb
loopne
sub
out
push
test
or
(bad)
(bad)
jmp
sti
ss
add
sbb
hlt
out
ss
rol
or
adc
or
lock
jmp
jmp
pop
lock
in
and
in
add
xor
daa
add
pop
jmp
add
(bad)
stc
dec
in
and
sti
add
or
pop
inc
jmp
repnz
or
scas
jmp
sbb
(bad)
(bad)
(bad)
call
hlt
or
stc
pop
icebp
inc
out
jmp
jmp
cmc
add
(bad)
(bad)
(bad)
(bad)
jmp
jg
add
test
sti
or
pop
xchg
pop
std
or
adc
add
imul
out
in
(bad)
jg
and
or
ficomp
hlt
in
add
inc
(bad)
int
loop
or
hlt
add
cli
or
out
out
(bad)
jg
test
push
std
cmp
es
add
fistp
out
fiadd
lds
sub
retf
or
call
mov
ds
lock
fsubr
and
add
or
sti
push
add
clc
not
repz
std
cld
mov
lock
inc
or
loopne
sti
pand
aam
mov
stos
push
sbb
(bad)
inc
mov
pop
repnz
or
sbb
add
pop
cli
xchg
scas
nop
hlt
or
push
jecxz
fdivr
adc
mov
add
in
push
in
cli
adc
push
adc
ins
adc
inc
or
adc
add
adc
sbb
cld
repz
pop
out
retf
add
xchg
out
mov
or
or
ud2
sti
mov
(bad)
(bad)
(bad)
(bad)
cli
cli
std
cld
add
(bad)
sbb
lock
das
cli
add
in
jmp
adc
or
cmc
pop
shl
xchg
add
and
adc
add
inc
sbb
std
adc
add
(bad)
ffreep
push
jmp
push
stc
(bad)
mov
(bad)
repz
add
das
or
sbb
or
out
enter
(bad)
out
push
sbb
add
dec
mov
adc
add
pop
or
adc
(bad)
in
repnz
ficom
in
std
fist
push
jecxz
not
stc
mov
jg
inc
out
(bad)
loope
add
inc
and
lods
aad
enter
add
cli
mov
cld
inc
cmc
in
sbb
cmc
out
push
stc
jg
dec
pop
std
out
stc
adc
sub
sbb
inc
retf
xor
mov
jmp
(bad)
(bad)
or
dec
in
adc
adc
xor
pop
add
cli
or
sub
fsub
pop
call
add
adc
or
(bad)
adc
cmp
stos
es
loop
fild
jmp
dec
sbb
stc
sbb
pop
pop
add
sbb
sbb
cmc
ror
jmp
pop
clc
sub
idiv
std
in
popa
fucomip
add
(bad)
call
clc
sbb
aad
adc
adc
add
or
and
in
imul
outs
lds
add
(bad)
call
dec
(bad)
fist
sti
sar
cli
(bad)
out
jecxz
outs
push
sbb
aad
and
(bad)
(bad)
(bad)
(bad)
(bad)
cld
jo
or
and
and
pop
add
inc
sti
pop
test
loopne
repz
rcr
inc
adc
neg
loop
das
div
or
(bad)
clc
into
pmulhw
lock
add
or
and
out
pop
imul
hlt
aaa
and
or
test
mov
std
(bad)
fcomip
jmp
or
jmp
idiv
hlt
call
push
out
add
or
adc
lds
add
and
aam
pop
pop
sti
rcr
mov
sbb
or
add
pop
ret
out
repnz
mov
add
hlt
std
in
clc
sti
or
cs
jmp
inc
push
call
icebp
adc
idiv
or
idiv
cmp
mov
sbb
das
xor
std
cwde
(bad)
out
test
loope
add
(bad)
fbstp
sub
inc
jl
fdiv
or
jmp
cmc
pop
clc
pop
adc
paddb
jbe
or
add
jmp
adc
cdq
sbb
js
int3
add
hlt
add
fimul
test
icebp
push
out
add
out
sub
add
sti
das
sbb
in
add
call
movups
fdivrp
cmove
out
sar
adc
rcr
push
dec
or
jecxz
cs
or
and
adc
add
in
sbb
or
add
rol
out
mov
mov
sub
or
call
ror
inc
or
idiv
sti
stos
jl
add
adc
add
pop
repz
daa
aad
loope
test
sbb
aas
push
xchg
dec
icebp
fisttp
sbb
hlt
scas
push
test
lock
add
leave
das
fimul
(bad)
push
scas
sbb
adc
adc
adc
inc
sub
ds
add
jecxz
cmp
xchg
mov
add
ds
imul
sbb
in
stos
cmp
stc
fimul
shl
inc
add
scas
fldcw
cld
push
das
fnsave
shl
xchg
mov
push
push
pop
mov
call
xchg
cmp
pop
adc
dec
sub
xchg
sbb
movs
push
in
popa
je
or
and
add
cld
cmp
push
inc
and
and
add
sbb
cmp
stos
add
ret
jmp
lock
jno
inc
push
push
push
sub
xchg
mov
and
cs
or
std
jbe
aad
lods
add
stc
add
pop
in
loopne
call
adc
push
sbb
push
repz
cmc
sub
pop
adc
add
out
or
jl
imul
clc
fisttp
lock
hlt
xchg
add
sar
adc
cmp
jge
sbb
lock
clc
or
and
jmp
sti
sar
push
je
or
scas
add
fld
stc
cld
push
cli
out
clc
out
push
mov
or
mov
ins
std
mov
add
or
(bad)
adc
or
imul
fsubr
rol
sbb
test
add
test
add
push
daa
enter
ins
mov
cmc
xchg
cli
test
cdq
mov
in
cmc
cld
sti
mov
push
or
add
gs
test
dec
add
aaa
mov
cld
add
out
stc
in
add
pop
sti
aad
push
movs
scas
push
cdq
fisub
and
sar
cmc
out
mov
xchg
lods
add
add
out
stc
push
(bad)
sbb
and
neg
cmc
lock
adc
lock
shl
mov
in
clc
out
ss
lock
scas
repz
mov
mov
and
adc
and
loopne
clc
add
lock
hlt
shl
sahf
add
push
mov
lods
inc
push
int3
mov
out
add
fst
clc
repz
std
test
xor
push
and
jmp
mov
(bad)
test
sub
adc
mov
or
cmc
paddsw
pop
add
dec
sbb
(bad)
cld
(bad)
or
xor
clc
sub
sbb
adc
test
in
(bad)
pop
fcom
or
add
or
cli
fild
clc
lock
cli
stos
pop
stc
adc
aam
adc
loop
repz
mov
pop
mov
add
hlt
add
adc
in
adc
push
adc
push
add
adc
dec
in
sbb
mov
test
(bad)
out
xchg
(bad)
mov
lock
repnz
hlt
or
adc
or
pop
out
add
in
stc
test
mov
add
jecxz
sbb
mov
jmp
jl
in
(bad)
adc
adc
mov
or
out
jo
and
enter
xchg
pop
fild
(bad)
dec
daa
or
ret
loopne
sub
std
adc
or
adc
pop
stc
rcr
xor
mov
cmps
int
sbb
pmaxub
enter
add
inc
jmp
(bad)
jmp
adc
div
hlt
stc
push
sbb
icebp
adc
in
jg
pop
and
(bad)
jmp
add
in
sbb
out
fsub
das
ss
sub
or
cld
fist
loopne
xor
inc
mov
and
jmp
lock
sti
fsubr
(bad)
push
jmp
adc
ror
aam
sub
(bad)
sbb
retf
ss
inc
xor
jecxz
aam
int
push
inc
(bad)
and
in
and
jmp
std
adc
leave
icebp
in
daa
test
repnz
shr
or
push
and
cli
cwde
or
(bad)
(bad)
and
jmp
push
iret
or
aad
daa
add
out
add
not
jle
or
add
repnz
sbb
sub
sbb
pop
std
sub
les
xor
or
fdivr
adc
clc
(bad)
dec
inc
shl
rcr
dec
pop
iret
xor
es
icebp
lock
add
jecxz
call
xchg
pushf
cld
jmp
or
repz
xor
and
sbb
pop
and
(bad)
(bad)
jmp
cmp
call
out
jmp
(bad)
sub
(bad)
jmp
scas
pop
lock
or
add
sahf
fild
call
mov
push
out
inc
sub
ins
adc
je
inc
sbb
mov
adc
(bad)
jg
adc
sub
adc
sbb
cmp
add
daa
aaa
into
shr
out
and
mov
(bad)
jg
or
jecxz
in
stc
pop
repz
stc
repnz
sti
push
dec
es
jmp
sbb
lock
pop
hlt
in
or
or
inc
mov
adc
or
clc
loop
or
call
pop
xor
(bad)
sbb
lock
cmp
sahf
adc
inc
sub
out
jecxz
movlps
push
hlt
(bad)
jmp
sbb
add
neg
or
pop
std
clc
in
adc
fcom
or
fwait
stos
add
add
call
mov
les
ror
out
sbb
call
push
sbb
or
(bad)
dec
adc
aaa
or
lock
repnz
out
test
or
sbb
(bad)
(bad)
push
nop
fisubr
xor
repnz
rcr
paddb
mov
sbb
pop
xor
sub
push
fdivr
cmp
cmp
sub
inc
ja
fbld
inc
adc
in
or
repnz
mov
out
push
xor
xor
sub
ror
stos
test
sbb
fxtract
cmp
ror
hlt
sbb
push
mov
jmp
add
adc
pop
sbb
call
xor
sbb
xor
repz
sbb
dec
(bad)
loop
call
mov
std
sti
out
in
scas
cli
jg
iret
std
out
sub
mov
icebp
(bad)
loop
mov
add
jmp
jecxz
rcl
and
das
dec
add
leave
call
clc
fsubr
inc
add
cli
add
icebp
into
inc
and
mov
iret
(bad)
push
std
xor
add
inc
out
sub
psrlw
or
sbb
stc
and
cmp
jmp
cwde
shl
fsubr
pop
hlt
mov
cmps
stos
dec
mov
or
or
and
jmp
or
clc
inc
or
mov
sti
loop
jmp
loopne
out
loop
and
xlat
retf
stc
clc
jmp
loop
(bad)
(bad)
call
shl
jecxz
sbb
sub
mul
and
and
push
add
sbb
sbb
pop
mov
cld
push
and
mov
push
sbb
(bad)
std
jle
clc
add
out
cmp
ja
call
inc
icebp
out
call
cli
sub
cmp
clc
add
cmps
(bad)
(bad)
jg
sbb
xor
cmc
ret
xlat
aad
psllw
push
bswap
and
(bad)
fimul
adc
add
sbb
push
adc
pop
in
mov
cli
ss
fisub
shl
sbb
hlt
sbb
sbb
adc
das
push
movs
push
mov
in
stc
sti
sbb
or
clc
push
call
mul
loope
adc
sub
jmp
cmps
ss
(bad)
(bad)
std
or
push
pop
add
div
adc
jmp
jb
(bad)
mov
adc
pop
es
cmp
pop
adc
(bad)
test
mov
pop
lock
enter
hlt
and
jmp
inc
stc
or
call
je
fbld
inc
push
loope
sbb
jg
push
pop
sbb
call
or
clc
adc
es
loope
add
mov
ret
push
or
fcomip
mov
in
sbb
call
sub
test
xor
paddw
cli
adc
push
cmp
fadd
(bad)
in
call
rcr
repnz
pop
jmp
cli
dec
add
cld
xor
pop
and
icebp
adc
in
sbb
add
cli
call
inc
adc
lock
lock
sbb
push
loope
shl
and
(bad)
mov
sub
int
out
repnz
call
sbb
nop
in
xor
repnz
sbb
loopne
movntq
out
and
mov
pop
das
clc
mov
adc
fdivrp
clc
sbb
dec
adc
sub
aad
add
xor
repz
stc
jecxz
call
ret
adc
sub
sbb
xor
mov
cli
rol
and
mov
ss
push
sti
push
cli
test
loope
and
call
(bad)
sbb
push
pop
sbb
or
aad
dec
or
icebp
clc
add
mov
shl
inc
or
sbb
sbb
lock
scas
fstp
cmc
repnz
mov
std
mov
loope
div
adc
jmp
clc
(bad)
inc
in
jmp
add
fsub
or
in
add
jg
sub
mov
aam
fucomi
out
(bad)
sub
mov
(bad)
dec
sbb
or
mov
or
or
fbstp
add
mov
test
call
adc
fcom
sbb
out
test
fidivr
add
inc
int3
(bad)
repz
cmc
hlt
cmc
mov
or
fsubp
sub
push
cld
shl
xlat
jmp
repnz
pop
icebp
push
xor
adc
shl
cmc
in
out
out
fdivr
sbb
es
aam
shl
loopne
jecxz
call
psrld
push
(bad)
pop
jmp
add
out
push
fdivrp
(bad)
in
sub
aam
shl
stos
rol
aad
fstp
rcr
clc
jns
pop
lock
loope
stc
(bad)
inc
(bad)
fcomi
rcr
adc
fild
cli
xor
jmp
(bad)
cs
push
add
sbb
into
(bad)
into
ss
sti
aam
push
fcomp
mov
pop
add
call
out
in
aad
lock
dec
ficomp
fcomip
popf
cld
mov
out
shr
retf
enter
add
or
jmp
es
or
sub
xlat
(bad)
scas
clc
(bad)
fxch
and
out
stc
cld
lock
push
add
or
out
adc
jmp
mov
sbb
cmp
test
int3
jmp
(bad)
cmp
in
add
jecxz
(bad)
ret
sub
(bad)
or
mov
mov
(bad)
adc
stc
sbb
hlt
loop
sti
shl
add
adc
push
mov
test
pop
loop
inc
in
ins
cli
jg
jecxz
xchg
adc
rcl
int3
movups
jmp
std
add
add
pop
idiv
repnz
dec
rcl
adc
mov
or
fs
sub
in
sbb
sub
lods
sbb
sub
add
xlat
in
icebp
sar
dec
sbb
and
icebp
icebp
sbb
push
fmul
neg
hlt
cld
and
or
add
or
or
enter
or
ja
mov
xlat
fcomip
cwde
or
repnz
or
add
aam
or
sbb
push
(bad)
jmp
pop
test
(bad)
adc
neg
or
inc
push
add
mov
stc
(bad)
ss
xor
imul
or
push
jmp
std
add
les
dec
cmp
out
mov
cmc
add
sbb
mov
clc
stc
cmc
sbb
clc
js
in
adc
sbb
(bad)
fcomip
dec
sub
loop
adc
push
in
and
pusha
add
push
adc
adc
out
push
pop
dec
cmc
std
push
add
cmc
add
mul
call
(bad)
jmp
or
sar
out
dec
in
xor
or
pop
add
lock
loopne
or
or
cmp
loopne
add
inc
sbb
(bad)
cli
jmp
xchg
test
or
dec
add
dec
sahf
and
add
cld
push
shr
xchg
cmp
or
jmp
fcom
mov
pushf
fcos
(bad)
jg
sub
rol
repnz
push
adc
xor
add
cli
pop
pop
jb
sbb
std
jmp
out
and
xlat
cmp
call
ret
dec
and
aam
ins
retf
sbb
stos
(bad)
(bad)
mov
add
add
fld
adc
les
push
or
out
add
call
repz
cmp
pop
xor
add
ficom
fdivr
add
daa
div
xchg
hlt
sub
mov
push
jl
or
jmp
pop
or
in
repz
jg
ins
jle
sti
sub
clc
xlat
adc
push
mul
mov
hlt
daa
in
add
push
or
add
or
or
sbb
add
pop
cmp
hlt
repz
enter
or
(bad)
lock
or
mov
test
(bad)
shl
imul
cld
push
and
pop
or
(bad)
fs
adc
enter
adc
(bad)
fild
cld
hlt
sbb
pop
pop
or
cld
sti
adc
fdivr
fcomip
or
push
out
cmc
fsub
and
loope
add
jmp
mov
adc
add
stc
add
or
pop
nop
dec
lock
les
mov
hlt
ret
dec
fbld
jbe
stc
std
adc
sbb
test
sbb
aas
leave
out
or
adc
and
or
sbb
add
idiv
jmp
sti
icebp
out
add
adc
in
fild
in
adc
sbb
loope
pop
push
loope
cmps
clc
push
scas
jmp
movs
or
add
xor
sbb
add
push
out
or
add
scas
js
leave
wbinvd
nop
add
cs
jecxz
icebp
cli
add
cli
or
into
and
repnz
sbb
call
loopne
dec
aaa
xchg
or
div
mov
in
or
adc
lock
sbb
pop
loopne
or
frstor
sbb
out
xor
push
aaa
cld
stos
loope
in
adc
and
ss
add
add
mov
daa
xor
es
add
sbb
cli
mov
not
repnz
loop
mov
adc
call
enter
jecxz
sbb
cmp
call
rcr
icebp
pusha
add
out
dec
cld
dec
adc
or
pop
cmc
sub
rcr
in
sbb
and
lods
fdivr
add
add
das
clc
or
or
aad
repz
dec
mov
stc
add
cli
add
adc
adc
sbb
cmp
add
daa
call
das
lods
psubq
pop
in
pop
jmp
cmc
cmc
dec
pop
fcomip
jmp
adc
xchg
(bad)
sub
lock
neg
adc
pop
cmc
push
loope
rol
xor
(bad)
ss
push
cli
jmp
or
test
clc
call
sub
adc
hlt
clc
jecxz
call
popa
hlt
call
sbb
jg
sub
inc
or
sub
loope
ins
loope
add
arpl
neg
jg
push
shr
repz
add
lock
fsubr
sbb
(bad)
std
inc
nop
icebp
jbe
push
scas
push
mov
ret
adc
bound
stos
mov
mov
cmp
enter
das
js
invd
or
(bad)
imul
fwait
or
std
shl
std
pop
(bad)
or
mov
inc
sub
std
mov
cmc
sbb
pop
push
hlt
mov
mov
loope
hlt
jb
out
push
aam
fld
in
xor
sub
clc
jo
cmp
sbb
pop
add
fild
clc
add
adc
push
or
daa
push
sub
and
or
jmp
out
jmp
sahf
push
push
out
ficom
add
ss
cmp
daa
xchg
adc
dec
jg
push
or
add
or
hlt
or
adc
sbb
mov
cmp
repnz
and
sub
add
fucomi
(bad)
fdiv
inc
sbb
push
std
or
std
hlt
lock
out
stc
vrsqrtps
test
add
or
mov
cs
std
(bad)
sti
push
pop
(bad)
pmuludq
test
es
idiv
cmp
icebp
in
(bad)
jg
(bad)
and
(bad)
mov
call
repz
cld
fincstp
call
and
pop
aam
mov
jmp
jg
mov
fild
adc
(bad)
fs
inc
aam
rcr
jmp
sub
add
(bad)
jmp
hlt
fimul
jmp
icebp
loope
loopne
scas
rol
int
or
xlat
call
out
jecxz
push
fcomp
adc
and
and
sub
sub
out
(bad)
int3
adc
fcomip
inc
cmp
dec
repnz
mov
(bad)
adc
sbb
adc
(bad)
dec
leave
inc
pop
dec
push
inc
dec
xor
xlat
(bad)
loope
loope
and
adc
hlt
std
sbb
aas
(bad)
fnstcw
cmp
sub
inc
dec
push
push
bound
cmp
loope
jg
loopne
shl
pop
fmul
fld
out
push
push
inc
xor
test
xlat
into
pop
adc
dec
or
in
sbb
cs
call
repz
fucomp
clc
neg
adc
aas
push
push
add
add
ss
mov
xor
inc
inc
cmp
lock
mov
and
cld
pop
popa
test
sub
cmc
dec
cli
dec
clc
sbb
jmp
inc
and
dec
popa
imul
retf
out
and
in
in
in
pop
cld
mov
sub
mov
fistp
inc
or
cs
push
gs
jnp
stc
xchg
(bad)
(bad)
(bad)
int
mov
lock
push
inc
push
push
push
dec
in
(bad)
mov
jecxz
adc
cmp
(bad)
sti
or
dec
push
push
or
mov
add
aam
add
or
sub
and
outs
push
cmp
lods
cmps
call
push
adc
psubb
jmp
out
loopne
ss
shl
aas
cmp
shl
or
dec
dec
add
jecxz
inc
xor
cmp
shl
adc
add
mov
mul
inc
jmp
xchg
or
xor
inc
fcomip
fwait
(bad)
jb
jl
jae
pop
push
rol
les
add
iret
aad
(bad)
(bad)
jmp
das
and
aaa
es
add
and
or
aad
aas
and
clc
das
add
out
aad
and
add
dec
sbb
or
aam
mov
push
cmp
dec
adc
dec
mov
inc
sub
(bad)
(bad)
mov
ret
stos
lahf
add
dec
dec
inc
pop
hlt
(bad)
(bad)
(bad)
fidivr
sbb
dec
xor
popa
bound
in
loop
(bad)
jmp
sti
cmc
cli
out
and
sbb
mov
dec
(bad)
icebp
cmp
mov
cld
imul
into
(bad)
shl
repz
pop
sub
dec
sub
mov
or
add
sbb
(bad)
sbb
jecxz
sar
push
mov
inc
add
jmp
test
sub
(bad)
call
dec
aam
repz
sub
out
cli
xor
sbb
add
sbb
fdivrp
sub
fsubr
xor
repnz
pandn
adc
sub
push
call
jg
mov
and
adc
jmp
adc
clc
in
loope
xor
out
rol
jbe
fneni(8087
iret
imul
push
es
ror
xor
(bad)
dec
lock
fidiv
sub
loope
mov
out
lock
sbb
or
lock
div
add
(bad)
std
ds
sub
jmp
or
out
push
icebp
fcomp
xor
add
cli
ret
(bad)
cmc
lods
jmp
clc
repz
pop
and
js
dec
and
inc
fdivrp
or
or
retf
pop
push
or
mov
cmps
mov
pop
push
sbb
xor
fimul
mov
sbb
ret
out
(bad)
(bad)
mov
sub
xlat
ror
jmp
jmp
fnsave
xor
das
cli
into
fidivr
and
mov
loope
cld
repnz
hlt
jmp
mov
or
cld
or
adc
fcomip
pop
lods
repz
movaps
pop
clc
adc
in
jmp
xor
movs
clc
add
adc
fist
retf
push
pop
cmp
div
fsubr
or
mov
push
es
add
add
repz
and
les
out
(bad)
call
jg
(bad)
call
sub
rdpmc
and
adc
mov
adc
xor
cld
adc
jbe
jmp
(bad)
loop
sbb
sti
int
std
fsub
jb
(bad)
jmp
scas
adc
call
bound
add
out
clc
(bad)
(bad)
call
hlt
adc
adc
sti
and
clc
add
and
push
adc
or
repnz
es
std
(bad)
jmp
cld
pop
or
pop
add
cli
add
or
or
cmp
or
in
xor
cli
(bad)
push
es
lods
push
lock
add
adc
and
stos
loope
repnz
ror
std
sbb
das
hlt
add
out
pop
(bad)
(bad)
(bad)
inc
int
loop
xlat
jecxz
sbb
and
fst
push
jmp
sbb
sti
out
fst
dec
in
sbb
test
out
adc
(bad)
paddsb
icebp
fcomi
and
adc
or
push
pop
in
adc
out
sar
add
adc
push
and
add
jecxz
add
loop
inc
mov
adc
and
fdivr
ins
(bad)
(bad)
push
xor
sbb
aad
adc
and
rcl
dec
dec
sub
cmp
mov
stos
add
cld
adc
sbb
or
cmc
adc
and
(bad)
(bad)
(bad)
push
sub
in
xor
adc
rcl
into
iret
pop
stc
jmp
out
aad
cmp
sbb
mov
lock
loopne
lock
sub
loop
shl
neg
xor
add
test
xor
mov
hlt
inc
add
sbb
add
adc
(bad)
jmp
push
aas
or
sbb
int
pop
jmp
cmp
mov
cld
icebp
adc
cmp
add
push
jmp
sub
sub
mov
in
xor
and
cwde
mov
aaa
cld
sbb
sub
mov
(bad)
(bad)
cmp
sub
fld
push
mul
adc
ficom
cli
adc
dec
push
std
jg
jmp
cmp
in
inc
xor
out
adc
mov
jmp
ret
or
adc
shr
jmp
out
push
or
(bad)
(bad)
push
cmp
out
push
jmp
sub
adc
xor
out
and
psubd
shl
sbb
adc
icebp
sti
or
adc
shl
sbb
and
es
das
adc
mov
fidiv
adc
int3
dec
stc
scas
fisubr
xor
std
(bad)
(bad)
mov
retf
sbb
or
jmp
add
int
sar
dec
hlt
cmp
add
inc
or
push
aad
(bad)
(bad)
out
cli
loopne
add
add
clc
es
or
(bad)
jmp
add
psllq
in
out
(bad)
out
add
jg
(bad)
jmp
or
into
repnz
adc
xlat
add
(bad)
clc
add
les
xlat
adc
mov
adc
cmp
and
retf
fcomip
push
(bad)
aam
(bad)
call
fimul
imul
fcmove
sub
or
out
in
or
jmp
or
jo
and
fadd
jecxz
pop
xor
cmc
adc
add
lock
and
fcmovu
add
outs
repz
and
call
push
or
add
inc
ret
push
cmp
cld
add
fistp
push
clc
loopne
jmp
mov
add
clc
(bad)
loop
dec
pop
call
clc
mov
or
psubw
fcmovnu
adc
adc
sub
sbb
icebp
cmc
adc
push
add
aad
loop
cli
pop
adc
fbld
aaa
js
es
or
in
jecxz
mov
inc
dec
and
scas
lods
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fsub
push
pop
inc
sub
in
fucom
clc
repz
or
out
leave
les
add
fwait
outs
mov
sbb
in
or
out
mov
mov
xchg
jecxz
(bad)
into
mov
(bad)
add
adc
add
in
cld
idiv
fcomi
out
lods
mov
adc
mov
(bad)
inc
in
icebp
and
inc
push
(bad)
mov
enter
pop
inc
sub
loop
(bad)
in
cmps
inc
lahf
lahf
test
not
mov
sbb
pop
call
fdiv
ror
aaa
or
aad
(bad)
mov
sbb
(bad)
cmc
push
repz
pop
sbb
fnclex
mov
repnz
mov
mov
jg
xlat
sti
inc
add
icebp
dec
icebp
clc
dec
(bad)
scas
mov
mov
add
std
aad
shr
in
push
aad
hlt
or
dec
sub
ss
add
hlt
aad
inc
mov
and
retf
ret
(bad)
popf
leave
(bad)
ds
and
adc
(bad)
call
jecxz
fcmovbe
(bad)
fdiv
adc
sahf
lods
mov
add
mov
adc
in
inc
pop
add
adc
icebp
aad
movs
call
add
in
enter
jmp
cmp
and
adc
stc
(bad)
test
mov
or
outs
mov
rcl
cmc
stc
inc
(bad)
into
loope
pop
cli
cld
out
pop
hlt
pop
jl
mov
in
and
add
mov
fnstsw
loope
and
(bad)
dec
add
mul
fmulp
cmc
in
xlat
movs
pushf
xchg
cmp
or
into
fcmovb
les
(bad)
in
clc
loope
icebp
add
out
and
out
scas
fucomp
sub
push
cli
ja
shr
jmp
xor
jg
ret
sbb
sahf
fst
pop
or
(bad)
stos
call
ret
fsubr
push
(bad)
mov
adc
fadd
inc
div
mov
(bad)
dec
pop
add
pop
shr
or
stc
pop
sbb
cld
sub
aaa
jge
dec
fsub
add
jecxz
and
push
repnz
push
jle
cld
jmp
hlt
sbb
loope
or
and
(bad)
(bad)
adc
add
fist
icebp
adc
loope
jmp
add
ds
pmuludq
ror
fcomip
pop
or
or
(bad)
mov
icebp
and
(bad)
fisttp
and
add
sbb
aaa
add
daa
in
push
jmp
ror
or
add
push
rol
push
(bad)
dec
stos
adc
jmp
out
loope
in
(bad)
out
retf
add
or
out
fild
int3
shr
pop
femms
out
push
mov
fcomip
(bad)
mov
adc
adc
and
add
aaa
adc
sbb
out
ret
std
cmp
adc
jecxz
push
sbb
add
out
sbb
add
sub
mov
in
(bad)
dec
fimul
(bad)
push
sbb
mov
jmp
call
add
or
pop
jl
jo
fst
stc
and
iret
ror
fild
or
mov
shl
idiv
or
paddw
stc
imul
cs
std
(bad)
mov
aaa
pop
clc
dec
pop
push
adc
out
or
iret
in
in
add
(bad)
(bad)
dec
adc
das
add
push
or
adc
daa
or
movs
das
cli
(bad)
jmp
add
icebp
pop
jmp
xor
std
call
sbb
hlt
(bad)
(bad)
mov
cmp
ret
push
or
hlt
jmp
sub
or
or
fdivp
xor
es
loopne
push
(bad)
out
in
cmp
in
idiv
idiv
jmp
inc
sub
pop
fldcw
sbb
movs
push
sbb
leave
cld
aas
push
out
or
or
dec
loopne
(bad)
jmp
sub
add
or
loop
and
cld
push
jmp
rol
add
popa
loop
pop
and
sbb
push
inc
and
sub
push
adc
dec
adc
xor
or
adc
leave
and
or
test
test
pop
adc
call
test
add
push
das
pop
cmps
or
add
push
and
adc
sub
jns
dec
aas
ins
add
jp
push
je
jnp
xchg
into
dec
adc
jl
movs
mov
xchg
das
ja
inc
xchg
movs
scas
and
je
dec
pop
out
adc
loopne
aam
daa
ins
dec
mov
fiadd
sub
xchg
add
or
push
ja
sbb
mov
bound
outs
mov
test
enter
out
mov
sti
cvtps2pi
or
scas
push
dec
jae
xor
ins
loop
dec
add
sub
cmp
cli
add
popa
sub
jnp
cmp
add
daa
mov
push
xor
dec
cmp
xchg
imul
xor
cmps
les
or
ds
cs
sti
outs
sub
cmp
popa
cmps
inc
add
(bad)
aaa
dec
scas
loope
xor
or
and
ins
lds
aas
out
xchg
shl
out
inc
popf
fist
aaa
inc
or
(bad)
adc
aaa
sub
push
jne
test
lods
or
aaa
add
inc
add
mov
sub
adc
cmp
dec
sbb
add
and
mov
dec
dec
sub
mov
ins
loop
test
cmp
mul
jo
xor
repnz
jge
or
add
aas
add
or
inc
mov
push
rol
bound
(bad)
jne
jmp
loopne
jb
(bad)
and
sar
in
loope
sub
test
(bad)
and
push
repz
ror
arpl
(bad)
retf
mov
cmp
sub
sub
cli
call
add
ss
cs
jnp
pop
mov
aaa
jg
push
sbb
push
(bad)
inc
push
jl
pop
je
mov
add
and
in
rcr
clc
add
popa
jg
add
lods
cmp
fistp
inc
iret
sahf
add
cs
push
test
xchg
out
lods
xchg
sub
cmp
xor
ss
adc
not
or
jnp
or
jb
jo
das
call
call
stc
bound
sub
aaa
add
mov
scas
in
(bad)
cmp
stos
push
inc
(bad)
stos
push
fld
pusha
jmp
jne
pop
jbe
js
sub
jecxz
add
addr16
dec
ror
mov
xor
adc
xor
add
mov
(bad)
add
cmps
je
mov
inc
outs
mov
div
ja
aas
frstor
test
pop
add
repnz
hlt
jo
outs
dec
push
jge
stos
lods
xchg
outs
and
je
mov
and
outs
push
movs
xor
loope
arpl
scas
push
sbb
xlat
cmp
inc
inc
jmp
retf
in
pop
int3
add
(bad)
hlt
mov
pop
into
cmp
popf
inc
scas
stos
rcl
adc
sahf
sbb
test
xchg
sub
jmp
xchg
js
mov
pop
inc
test
ja
fdiv
aam
jnp
inc
call
push
(bad)
dec
js
push
push
add
out
inc
sbb
andnps
repnz
mov
not
push
jmp
push
cwde
ss
stos
sahf
addr16
je
jle
mov
sbb
xor
jle
add
shl
mov
mov
adc
mov
ror
call
or
(bad)
cmp
mov
in
inc
aad
mov
add
push
dec
je
cmps
jecxz
mov
or
rol
repnz
scas
dec
or
out
inc
out
and
pop
cwde
or
inc
cwde
xchg
mov
inc
ja
adc
ja
push
movs
sub
ja
sbb
enter
in
sub
inc
add
stos
mov
mov
push
mov
add
(bad)
jecxz
mov
sbb
jg
fcom
and
fimul
and
dec
cmps
gs
dec
pop
stos
(bad)
js
jno
leave
xor
add
jo
js
jae
jp
pop
rol
es
cs
cmps
add
add
mov
into
adc
fbstp
mov
pop
fistp
pop
mov
xchg
push
sub
or
and
sub
mov
fwait
xchg
xchg
xchg
arpl
inc
es
add
fimul
fisubr
test
adc
bound
pop
xchg
or
mov
xchg
add
out
inc
add
mov
pop
pop
ror
push
es
push
cmp
outs
mov
loopne
add
xchg
mov
pop
and
mov
fsubr
movs
or
mov
add
fidivr
fdiv
lods
ds
dec
scas
sbb
jb
dec
add
in
inc
cwde
inc
pop
or
inc
sub
movs
xacquire
jmp
jg
push
adc
adc
iret
in
sub
les
mov
push
(bad)
fisttp
pop
ins
les
xchg
iret
adc
jb
xlat
and
cmps
arpl
dec
ret
cmovnp
sahf
xor
test
xor
xchg
scas
inc
sub
jne
ret
mov
inc
pop
pop
hlt
inc
pop
mov
mov
or
sub
xor
outs
inc
jns
bound
mov
mov
jg
dec
or
and
popa
mov
fadd
or
xchg
fimul
inc
jecxz
and
(bad)
fild
push
loope
test
fdiv
dec
retf
mov
jns
outs
shl
mov
in
and
sbb
push
xor
loopne
push
test
les
xor
dec
out
mov
stc
aad
(bad)
or
mov
jp
ret
pop
or
sti
push
pop
daa
add
sbb
ss
pop
dec
mov
ss
inc
stos
push
sbb
push
pop
xchg
out
or
inc
cmps
jle
fiadd
nop
add
and
dec
(bad)
jnp
and
xchg
or
add
push
push
rcr
xchg
or
add
dec
xchg
add
shl
sbb
sub
add
pop
push
shl
dec
xlat
pop
ficom
div
xchg
xchg
fimul
out
add
outs
pop
push
xor
push
add
mov
inc
mov
xchg
outs
add
and
or
iret
pop
or
mov
mov
shr
icebp
es
leave
rol
aaa
xor
in
push
push
push
sbb
xchg
add
fisub
mov
cmp
dec
ss
sub
push
addr16
add
mov
add
mov
mov
and
mov
mov
sbb
adc
mov
(bad)
ret
fwait
pop
ret
or
pusha
fucomip
add
fs
addr16
jo
or
or
ins
pop
xchg
popa
js
or
add
gs
imul
xor
shl
shl
(bad)
fs
sub
fiadd
pop
sahf
cmp
data16
scas
mov
imul
sbb
pushf
sub
adc
paddd
shr
pop
push
imul
out
inc
xchg
push
sub
dec
ds
cmps
pop
inc
pop
pop
cs
aas
inc
pop
add
mov
push
outs
jg
cmc
lods
movs
mov
xchg
int
arpl
inc
cmp
jo
aaa
xor
pop
inc
sbb
movs
mov
or
call
mov
dec
aaa
push
pop
dec
data16
xor
add
or
jae
cmp
pop
push
enter
data16
xor
xor
jne
xor
arpl
pop
mov
mov
jns
xlat
pop
daa
jo
sahf
add
sbb
add
add
cmps
xchg
mov
cmps
cmps
add
sbb
repnz
adc
sbb
sahf
mov
test
mov
pop
pop
sub
pop
jg
adc
adc
adc
add
add
and
cwde
and
out
xchg
inc
xchg
mov
jo
fisttp
mov
add
sub
scas
ds
jb
ds
pop
jno
inc
mov
bound
dec
outs
mov
mov
push
test
in
jbe
or
cmps
and
pop
pop
fwait
ret
pop
dec
adc
mov
stos
jge
mov
jg
pusha
ja
xor
outs
fwait
xor
test
pop
ins
stos
(bad)
pushf
(bad)
fist
or
mov
jae
lock
xchg
pushf
jb
xor
lea
retf
mov
jne
adc
push
dec
mov
aam
shl
push
cli
js
inc
dec
fimul
iret
pop
sbb
jg
pop
inc
sbb
out
adc
push
add
inc
lods
or
lahf
mov
shr
retf
push
and
xor
bound
pop
add
adc
lods
pop
(bad)
dec
ret
push
xlat
nop
add
out
add
leave
repz
lds
or
or
dec
movq
or
cmps
sub
mov
fild
pusha
in
pop
add
es
or
inc
sti
inc
adc
push
dec
sub
push
mov
ficom
in
loop
outs
xor
pushf
ss
push
fsub
aaa
inc
in
sbb
jbe
adc
dec
(bad)
push
push
add
xor
dec
xlat
push
jno
lock
add
and
mov
add
leave
xor
adc
or
retf
into
add
or
add
jg
pop
fsubr
push
seta
add
sub
(bad)
mov
sar
sbb
or
shl
test
add
inc
push
inc
mov
xchg
and
sub
xor
mov
(bad)
or
jp
mov
push
ins
mov
jle
mov
mov
aas
loopne
add
add
ins
mov
add
aas
inc
jg
fadd
and
(bad)
jg
movs
fsubr
pop
data16
jg
aas
mov
pusha
xchg
dec
fstp
sar
scas
jg
jnp
and
dec
sti
(bad)
fdivr
daa
jnp
jp
jo
call
das
fcom
push
pusha
jg
cmc
(bad)
push
sbb
fwait
add
sub
pop
mov
in
add
fldcw
jnp
jae
outs
pop
sbb
pop
(bad)
push
push
sbb
ds
es
cmps
movs
pop
mov
or
shl
jg
out
xor
addr16
(bad)
sbb
push
retf
push
add
dec
adc
imul
dec
push
aas
cdq
imul
adc
jbe
es
and
or
stc
cmp
mov
cs
jmp
retf
into
or
imul
add
out
ins
aas
jb
dec
daa
dec
sub
out
lods
cmp
loop
aas
push
aas
sub
adc
push
jl
sbb
mov
mov
scas
mov
or
adc
adc
xchg
pop
pop
mov
mov
loope
repz
aad
mov
xchg
adc
push
je
ret
xchg
cmp
push
aas
xchg
xor
xor
push
push
cmc
sbb
mov
jb
jb
js
aam
pop
(bad)
pop
repz
cs
push
push
sbb
aaa
sbb
jbe
in
aaa
and
xchg
mov
sti
inc
imul
pop
push
jns
pop
and
retf
loop
aas
or
cmp
out
inc
or
sbb
dec
cli
dec
add
dec
(bad)
push
mov
inc
cwde
inc
pop
push
and
sbb
push
mov
in
sbb
dec
test
retf
out
ins
mov
cmp
or
pop
int
add
cmp
cmp
pop
cdq
popf
inc
dec
das
and
int3
inc
enter
inc
pop
pop
or
pop
imul
fstp
add
dec
sub
jnp
gs
mov
in
fisttp
adc
mov
test
pop
push
pop
popw
cmp
push
add
ins
push
add
adc
pop
movs
pusha
pop
dec
add
jnp
(bad)
pusha
inc
add
mov
sbb
mov
push
fs
fidivr
jg
imul
into
jno
push
jle
pop
pusha
pop
out
ins
mov
stos
loope
(bad)
jbe
aas
(bad)
(bad)
jl
pop
push
dec
ins
dec
fwait
bound
jnp
mov
rcl
push
dec
push
fisubr
(bad)
dec
and
pop
cld
mov
dec
cwde
addr16
jae
inc
cmps
inc
test
dec
add
ss
sub
mov
push
jne
mov
sbb
and
rcr
sbb
sbb
inc
push
fistp
loop
shl
test
mov
es
add
cmps
loopne
mov
add
adc
inc
daa
inc
xor
aaa
mov
sar
and
inc
das
sub
pusha
sbb
xor
addr16
cs
call
(bad)
movs
inc
(bad)
dec
cld
jnp
inc
add
pop
arpl
xchg
stos
or
ficom
pop
push
adc
sti
and
sbb
add
push
pop
imul
add
xlat
popf
cmp
and
add
pushf
mov
and
inc
inc
jo
adc
cdq
add
jb
nop
jo
mov
add
out
imul
into
imul
mul
inc
add
jb
and
jmp
push
or
aaa
and
lahf
into
cmp
inc
cdq
pop
pop
ror
add
xor
mov
push
jl
iret
sub
mov
add
shr
add
jo
aas
and
add
lahf
add
pop
push
cdq
mov
ins
iret
jbe
pop
push
pop
ret
lock
imul
test
out
push
jp
je
leave
xchg
or
cmp
in
inc
sbb
jno
or
(bad)
pop
mov
iret
cmp
dec
mov
mov
repnz
aaa
iret
(bad)
cmp
inc
sti
add
iret
xor
lahf
adc
pop
popf
pop
cld
into
retf
cmp
retf
cmp
mov
lock
je
add
push
mov
in
mov
jg
cdq
pusha
fucomi
push
jo
bswap
mov
push
into
rcl
xrelease
dec
cdq
cdq
in
sbb
dec
into
ja
iret
xor
cmp
mov
pop
mov
out
mov
inc
mov
mov
(bad)
or
aam
or
out
loopne
mov
lahf
jae
mov
ror
fs
xchg
cmp
pop
setg
std
ror
in
adc
mov
add
cmp
fwait
iret
inc
retf
dec
aas
mov
ins
ja
iret
and
mov
inc
adc
mov
aas
or
fld
(bad)
jo
and
stos
mov
pop
adc
stos
aas
mov
iret
data16
rcl
fwait
xor
adc
lock
add
mov
dec
iret
vmread
iret
push
jo
add
fistp
mov
aas
iret
jns
push
adc
nop
push
add
lahf
jne
fisub
sahf
adc
jo
stos
jg
push
add
mov
cmp
stc
xchg
jns
mov
sub
xlat
push
into
add
pop
jbe
lds
iret
clc
add
xor
inc
xor
push
ror
into
jae
bound
cmpxchg
jecxz
das
pop
xlat
nop
cmp
cmp
or
ror
lahf
add
cmp
inc
mov
jbe
shl
add
and
xor
sti
mov
mov
push
clc
aas
push
push
xor
push
xchg
lock
ret
dec
jae
push
arpl
aam
inc
rcr
and
std
leave
add
mov
sub
add
mov
push
fisttp
adc
ret
add
add
rol
int3
retf
enter
outs
add
enter
(bad)
mov
out
fstp
retf
and
leave
(bad)
or
leave
add
retf
pop
and
leave
lods
ret
mov
iret
int
xlat
aad
(bad)
iret
(bad)
fild
fcmovbe
xlat
(bad)
fcomp
fcmovnu
(bad)
fiadd
rcl
rcl
xor
aas
(bad)
into
fcmovbe
fldcw
aad
pop
(bad)
rol
fadd
call
(bad)
or
int
rol
aas
cmp
ret
dec
cmp
or
lock
xor
jg
mov
mov
(bad)
retf
(bad)
(bad)
push
(bad)
or
fwait
ror
mov
icebp
out
mov
jg
inc
hlt
cmc
cmc
out
rcl
shr
mov
cmp
scas
scas
stos
mov
mov
lds
fidivr
(bad)
jmp
mov
rol
ss
mov
mov
les
int
jg
fmul
into
add
mov
ret
ror
mov
xchg
jp
mov
xchg
jnp
mov
jl
and
xchg
js
call
(bad)
mov
jbe
enter
in
out
loope
fsub
fsubp
out
adc
(bad)
pop
loope
loop
mov
mov
jbe
mov
dec
mov
out
dec
retf
retf
adc
sbb
push
xor
jo
fidiv
movs
in
mov
retf
ror
retf
push
rol
mov
(bad)
mov
jo
jl
mov
(bad)
mov
xchg
mov
mov
(bad)
popa
add
mov
push
mov
dec
test
mov
test
mov
lods
mov
movs
test
aam
mov
xor
test
nop
(bad)
mov
jae
xchg
mov
(bad)
mov
ret
xchg
ins
add
ror
adc
dec
mov
je
cmps
jmp
fild
mov
mov
rcl
scas
cwde
sar
fnstcw
std
(bad)
jmp
mov
jo
xchg
je
cdq
ja
pushf
jp
popf
jnp
lahf
jge
fwait
js
(bad)
(bad)
mov
dec
lods
jo
test
xor
test
stos
mov
mov
cmps
mov
aas
sti
(bad)
stos
mov
mov
mov
test
xchg
retf
retf
cmps
mov
mov
mov
dec
mov
mov
iret
mov
fstp
pusha
test
adc
fwait
add
dec
(bad)
(bad)
jmp
push
mov
dec
lods
je
test
inc
lahf
gs
mov
call
mov
add
mov
mov
jns
nop
bound
xchg
inc
stos
outs
inc
retf
mov
sar
inc
mov
mov
mov
mov
ja
cmps
ins
cmp
stos
add
fld
add
(bad)
fcmovnu
fadd
xchg
xchg
jnp
xchg
jg
cdq
xor
rcl
clc
adc
sub
pop
mov
mov
jae
call
enter
jle
mov
mov
add
add
jo
sbb
mov
mov
into
lods
xchg
add
fist
call
(bad)
mov
cmps
fdivr
add
int
scas
(bad)
out
xchg
xchg
arpl
mov
les
les
mov
(bad)
(bad)
(bad)
in
out
and
mov
add
shl
sub
test
inc
cld
xor
shl
div
repnz
fnstcw
push
and
add
sti
add
cli
xor
rcr
call
sub
aad
fiadd
(bad)
out
out
out
cmp
pop
cmps
mov
pusha
add
ret
add
aaa
dec
shl
ror
les
(bad)
push
jl
sub
arpl
cwde
aam
iret
(bad)
mov
cmc
add
loop
mov
dec
repz
mov
mov
lahf
movs
jbe
inc
(bad)
jmp
stos
jno
mov
dec
mov
dec
mov
inc
lods
retf
mov
gs
cmp
(bad)
jmp
repz
(bad)
(bad)
inc
out
cdq
jl
xchg
jne
mov
lods
xchg
mov
xchg
push
fistp
mov
mov
dec
mov
inc
mov
scas
jno
lods
outs
ds
sti
fild
stos
jb
test
loopne
mov
(bad)
jmp
fidivr
mov
(bad)
int
jg
xchg
outs
ror
jge
stos
mov
scas
mov
cmps
imul
cmp
mov
aas
div
inc
mov
dec
pop
jne
std
cld
(bad)
hlt
out
jmp
fwait
jl
mov
pop
cmp
fdivr
shr
lds
and
cwde
(bad)
dec
div
lock
loope
mov
ret
pushf
sub
stos
jae
out
(bad)
(bad)
jg
jecxz
lock
mov
xchg
fidivr
xlat
mov
aam
xchg
ret
js
jg
fwait
js
ins
(bad)
ret
clc
mov
fiadd
ffreep
scas
fstp
test
inc
(bad)
test
cmp
xchg
jbe
mov
fidivr
xchg
je
mov
xor
call
pop
rol
jmp
int3
mov
mov
xchg
inc
shr
rol
(bad)
jg
hlt
jg
mov
fdiv
jmp
(bad)
lock
mov
in
shl
fnstcw
push
mov
jo
int3
mov
pop
int3
std
sti
cli
call
loop
(bad)
jg
mov
jb
div
out
scas
and
push
xchg
je
xchg
jns
xchg
ja
popf
lock
or
jae
call
div
shr
hlt
add
out
xor
jbe
add
in
jmp
(bad)
repnz
call
test
rcr
mov
xchg
adc
push
fwait
jg
xor
loope
(bad)
je
mov
clc
enter
inc
shl
popf
sub
mov
dec
cmp
xchg
aam
xchg
scas
mov
mov
jmp
call
call
icebp
in
clc
repz
sub
adc
mov
mov
mov
pop
mov
(bad)
xlat
mov
rcr
fwait
and
mov
jmp
retf
shl
loop
cmp
jmp
ret
int3
stos
nop
xor
fcompp
jecxz
pusha
pop
sub
lahf
xchg
jge
movs
ins
inc
into
stos
xchg
mov
lods
ffreep
scas
jmp
(bad)
mov
jno
outs
iret
lods
(bad)
(bad)
jl
mov
ss
fcomp
pop
mov
mov
jo
scas
(bad)
jg
fcom
test
mov
in
loop
int
mov
mov
js
dec
popf
jns
mov
xlat
xchg
xor
shl
(bad)
in
jecxz
movs
dec
mov
dec
movs
push
mov
inc
stos
js
lods
jns
scas
dec
mov
push
mov
call
test
(bad)
gs
fwait
je
test
fdivr
mov
fistp
mov
test
aad
mov
jl
jb
test
push
(bad)
cmp
inc
scas
jb
mov
inc
mov
mov
dec
mov
(bad)
enter
mov
jg
(bad)
(bad)
test
aam
mov
shr
add
pusha
pop
and
test
lods
mov
adc
jg
mov
dec
mov
push
mov
push
mov
pop
sbb
shr
les
jns
adc
shld
ror
movs
mov
pop
sar
xchg
push
stos
xchg
(bad)
(bad)
in
lock
pop
push
xchg
sahf
iret
mov
dec
call
inc
sar
add
movs
cmps
movs
add
add
scas
lods
xchg
jmp
fdivr
mov
mov
les
mov
sti
outs
or
mov
cmps
mov
jo
test
adc
xchg
cwde
xchg
mov
lds
mov
aas
adc
inc
cwde
popf
pushf
mov
(bad)
test
jno
inc
xor
fucomi
mov
popf
mov
leave
stos
mov
mov
mov
mov
mov
sbb
mov
(bad)
fisubr
(bad)
mov
shr
aas
mov
pop
rcl
scas
ret
(bad)
or
dec
lods
ret
ret
(bad)
nop
int
mov
retf
retf
cmps
in
jg
add
(bad)
fcom
fs
in
mov
(bad)
into
pop
mov
(bad)
pop
loopne
push
loop
pop
fnstsw
je
fcom
in
pop
es
retf
fcmovnu
add
iret
iret
mov
(bad)
jg
xor
fistp
pop
repz
mov
std
stos
jne
outs
rcl
test
sahf
popf
jbe
jg
jns
adc
test
(bad)
mov
mov
add
sbb
jmp
aad
in
call
(bad)
cli
(bad)
(bad)
(bad)
fist
fwait
fwait
out
jg
jno
add
fmulp
fstp
int
fcmovnb
pop
retf
mov
xchg
jecxz
in
out
mov
xchg
pop
sti
in
rcl
dec
mov
jae
clc
(bad)
inc
je
jle
add
scas
cwde
in
clc
mov
in
aaa
mov
aam
mov
iret
(bad)
mov
fwait
stos
stos
xchg
fwait
mov
xchg
xor
mov
mov
pop
hlt
pop
call
cld
mov
movs
pop
sbb
stos
test
ror
aas
mov
mov
mov
mov
int
jnp
repz
jbe
jl
clc
clc
jp
idiv
enter
mov
jg
div
popa
pop
gs
mov
add
and
pop
in
mov
sti
cld
mov
les
lock
lea
mov
push
and
clc
(bad)
adc
out
out
adc
lds
adc
iret
adc
out
das
outs
movlps
push
xchg
in
push
jno
test
std
add
fstp
push
jl
cmps
aad
fmul
jg
xor
push
jbe
pop
mov
push
scas
test
(bad)
xchg
lock
popf
int3
sar
mov
dec
dec
mov
enter
fsubp
inc
fwait
mov
jmp
or
mov
adc
mov
jmp
in
sub
sti
cli
push
dec
ror
aad
sbb
pop
push
and
adc
call
xchg
mov
sbb
sbb
out
pminsw
or
stos
stos
mov
shl
xchg
push
test
into
mov
inc
jmp
(bad)
call
adc
sub
add
clc
mov
sbb
sbb
or
sbb
and
sbb
movs
lods
jecxz
mov
rcl
loopne
(bad)
dec
and
repz
jmp
and
loop
or
pop
stos
out
icebp
mov
sbb
sub
mov
sub
and
sbb
icebp
and
and
icebp
sbb
call
sbb
and
repz
out
es
and
and
and
mov
xor
lods
div
(bad)
add
data16
pop
pop
out
pop
pop
in
and
out
and
out
and
out
and
xor
and
icebp
adc
lods
aaa
mov
and
xor
cmp
fidivr
and
adc
push
mov
sub
into
jge
aam
retf
dec
sub
js
(bad)
push
and
icebp
and
lods
inc
icebp
and
cmp
and
aad
fcomip
pop
das
repz
xlat
xlat
call
loope
adc
adc
sbb
es
or
inc
out
and
dec
add
and
fistp
lods
inc
and
cmc
sbb
jmp
xor
rcr
icebp
push
inc
(bad)
sub
rcl
xlat
pop
sar
clc
and
inc
repz
dec
mov
call
inc
out
adc
rcr
pushf
(bad)
mov
add
movs
stc
and
(bad)
(bad)
fbld
dec
out
pop
jmp
pop
repz
icebp
sub
sub
icebp
sub
dec
mov
push
fcom
fcomip
sbb
gs
out
fistp
popf
(bad)
cli
movs
stc
les
loop
test
aas
je
ds
mov
jnp
aas
add
jns
jne
cmp
inc
push
mov
test
jno
mov
(bad)
out
mov
jg
sub
in
addr16
inc
ins
icebp
ds
ds
mov
inc
jle
loopne
push
aas
jp
inc
jbe
cmp
xor
cmp
fdiv
std
jmp
add
sti
pusha
jns
sub
aaa
shl
rep
add
jbe
jns
mov
or
call
cmc
ds
cmp
cmc
cmp
pusha
stc
aaa
push
jecxz
shr
inc
test
ja
sub
cmp
ds
scas
rol
repz
idiv
jo
cmp
add
test
jno
cmp
in
cmp
xchg
data16
jp
xor
mov
in
mov
dec
push
icebp
stc
pushf
jl
sub
ds
div
outs
stos
aas
data16
mov
push
fdiv
mov
int
lods
repz
xor
sub
xor
(bad)
arpl
aaa
out
fdiv
loope
cmp
aaa
push
outs
mov
cmp
pusha
add
out
aaa
inc
das
(bad)
loopne
popa
rcl
fdiv
nop
scas
(bad)
pop
fild
addr16
hlt
sti
aaa
inc
gs
cs
pop
out
cmp
clc
daa
dec
pop
aam
icebp
pop
ret
cmp
das
ror
dec
shl
xor
stc
pop
hlt
mul
cmp
xor
cli
pop
into
rcr
in
mov
sti
sub
loop
cmp
cmp
cmp
inc
in
push
jb
repz
ins
add
mov
xor
push
inc
push
repz
inc
pop
int3
fcomp
icebp
dec
fisttp
pop
lock
(bad)
xor
rcr
push
icebp
sub
push
imul
out
stc
inc
mov
jg
mov
dec
aad
push
rcl
dec
fcomp
repz
dec
loope
dec
std
daa
dec
call
dec
ins
aad
mov
adc
(bad)
std
div
push
ins
rcr
loop
retf
add
out
std
aas
xchg
lods
loop
pop
xlat
fs
call
adc
or
cmps
jge
mov
mov
int3
pop
sub
fsub
cmp
push
xor
mov
inc
inc
jbe
js
retf
mov
add
or
rcl
ror
dec
pop
addr16
xchg
lahf
ret
add
cld
cld
jge
call
push
xchg
gs
push
mov
call
push
push
ror
addr16
pop
jno
pop
jo
fs
(bad)
adc
jno
jmp
test
je
ret
push
and
clc
(bad)
jp
push
jb
and
stos
push
nop
leave
idiv
sar
call
mov
sahf
lods
int3
xchg
mov
pop
sahf
into
add
xchg
fimul
ins
mov
aas
mov
repz
cld
rcl
in
cdq
leave
jnp
rcl
test
mov
call
pushf
jecxz
ins
rcr
repnz
(bad)
(bad)
call
ret
and
add
lahf
out
jo
push
xchg
int
sti
jmp
adc
xchg
mov
push
call
(bad)
jg
jmp
lods
hlt
adc
lds
into
sar
add
add
mov
add
lds
cmc
push
mov
cdq
rcl
sub
(bad)
inc
jp
sub
test
sbb
lock
cdq
shl
rcl
stos
in
mov
hlt
push
add
in
or
call
xchg
mov
inc
mov
cmp
pop
mov
sbb
cld
push
jl
pop
mov
in
clc
out
inc
or
mov
inc
shl
hlt
or
pop
lahf
aam
pop
or
mov
pop
mov
push
(bad)
(bad)
clc
add
and
popf
movs
mov
mov
cld
xchg
mov
ret
(bad)
scas
or
cli
(bad)
clc
and
test
mov
mov
pop
mov
push
xchg
push
dec
outs
ins
pop
dec
call
(bad)
hlt
xchg
pushf
mov
imul
(bad)
(bad)
inc
shl
pop
popa
xor
jae
mov
out
push
(bad)
(bad)
jg
sti
cld
(bad)
mov
pop
stos
stos
mov
mov
pop
test
xor
fidivr
outs
dec
jno
jno
add
xchg
jmp
imul
inc
add
mov
push
and
mov
popa
mov
into
xlat
test
sub
sti
(bad)
cmps
mov
fchs
icebp
push
cs
or
add
arpl
(bad)
or
test
add
adc
pop
or
mov
xchg
or
pop
fild
dec
loope
or
or
call
ss
mov
fild
mov
push
dec
mov
add
jo
cmps
movs
or
dec
pusha
sbb
jmp
push
pusha
ins
push
out
or
add
adc
add
fadd
dec
leave
inc
and
and
or
arpl
rcl
and
xchg
sbb
sbb
xchg
xor
mov
fsubr
add
sub
xchg
or
xor
sbb
xchg
add
ss
sbb
mov
cmp
adc
sbb
mov
adc
jmp
mov
adc
(bad)
pop
push
or
adc
dec
push
push
push
dec
add
and
test
sbb
sub
jmp
cdq
fwait
gs
(bad)
outs
dec
sbb
xor
(bad)
sbb
push
xor
fist
mov
push
xchg
inc
sub
and
jge
cmps
adc
jo
dec
or
outs
or
push
xor
sbb
iret
bound
add
push
xchg
daa
and
ins
and
pop
(bad)
jns
test
push
mov
xor
push
test
jo
push
repz
add
inc
and
pop
outs
adc
push
je
cmps
push
movs
sbb
aad
xor
mov
mov
popf
push
iret
stos
mov
ins
pop
add
xchg
cmp
sbb
daa
add
inc
les
mov
in
sbb
push
gs
jecxz
sub
mov
adc
ins
push
jbe
add
enter
das
sub
cmp
imul
pop
jno
mov
dec
adc
cmp
push
imul
xchg
sub
dec
jno
pop
cmp
xchg
mov
outs
fcomi
mov
jbe
push
int
add
mov
scas
ins
xor
sti
and
lods
dec
dec
aam
xor
retf
cmps
sbb
jno
das
push
dec
sar
jne
cmp
dec
arpl
imul
lds
sbb
cmc
add
adc
adc
scas
cmp
push
mov
int3
jns
cdq
and
mov
mov
test
pop
mov
int
lahf
fbstp
jno
dec
fs
enter
sub
adc
ret
mov
pop
adc
nop
ss
sub
sub
call
aas
xchg
inc
fcom
add
inc
mov
fist
jo
inc
sub
mov
aaa
or
cwde
shr
push
test
jmp
movs
les
sahf
sbb
jecxz
xchg
inc
sbb
jb
add
sbb
lods
ds
sbb
jae
pop
lods
cmps
push
(bad)
shl
sbb
lods
outs
(bad)
xchg
add
inc
xor
adc
inc
inc
mov
mov
inc
jo
push
or
inc
jae
call
pusha
imul
jo
push
repz
and
mov
add
jo
bound
sbb
mov
bound
fcmove
retf
mov
iret
mov
loopne
js
fst
jne
das
xor
inc
push
add
sbb
ret
and
xor
add
cmp
iret
sub
jno
(bad)
into
std
or
les
loope
dec
ins
push
inc
inc
sbb
push
imul
push
test
or
inc
and
and
adc
and
test
mov
ficom
pop
aas
aas
mov
loope
mov
xchg
mov
sub
test
ins
pop
mov
ret
nop
cmc
xor
adc
mov
retf
pop
js
or
inc
(bad)
inc
js
push
inc
or
inc
jnp
arpl
(bad)
rol
sbb
xchg
lea
movs
mov
(bad)
sbb
and
sub
cmc
mov
mov
cmc
xor
pop
jbe
loopne
pop
dec
mov
xor
adc
and
inc
call
and
mov
add
in
repz
add
sub
cmp
and
enter
call
pop
add
pop
push
push
cli
sub
fsub
push
xchg
sub
jo
jnp
xor
and
cmp
cdq
idiv
inc
adc
xchg
sbb
dec
adc
inc
fwait
add
and
add
jecxz
mov
dec
add
pop
or
push
xor
jae
xlat
(bad)
fisub
addr16
fnsave
sbb
mov
mov
outs
push
sbb
shl
das
mov
into
adc
sbb
xchg
or
sti
fstp
inc
imul
push
or
push
push
dec
push
dec
gs
outs
dec
mov
inc
das
sub
and
sub
aam
adc
test
dec
jne
lds
cwde
loopne
sbb
sub
add
(bad)
mov
jb
pop
inc
inc
in
addr16
adc
jb
inc
jp
sbb
ins
pusha
cmp
or
xor
add
fst
lods
rol
daa
push
out
push
(bad)
dec
adc
call
adc
pop
js
add
pop
std
aas
aas
xor
into
jae
inc
shl
or
je
jnp
or
pop
pop
cmp
pop
push
imul
xor
xor
in
mov
dec
test
cmp
jo
adc
and
cmp
loopne
push
pop
js
pop
jnp
aaa
test
sub
pop
ins
sbb
jno
data16
scas
xor
je
fcom
adc
adc
arpl
cmps
push
mov
cmp
xor
adc
fiadd
cmp
ins
push
int
cmp
fwait
inc
fsubr
addr16
mov
push
push
push
jo
out
and
inc
pop
inc
push
inc
pop
dec
inc
ds
jne
int3
sahf
push
sub
data16
js
popa
movs
int3
jb
fiadd
cdq
sub
data16
xor
cmp
sub
cs
outs
ja
es
fwait
shl
popa
sbb
pop
fcomp
shr
movs
outs
xor
sar
imul
cmp
aaa
xchg
pop
cs
mov
ja
xor
int3
int3
lea
lea
mov
iret
push
fwait
mov
ins
ret
xchg
inc
popf
dec
outs
or
lock
je
or
jl
cmps
or
ret
ins
pmuludq
mov
or
sbb
rol
xchg
adc
pop
xchg
jbe
jbe
in
popf
xor
sbb
dec
sbb
es
js
loop
out
cmp
loope
xchg
xor
lock
sbb
in
mov
cmp
or
and
or
pop
fnstcw
outs
jbe
dec
out
jo
push
scas
sub
push
sbb
xchg
rcl
fnstcw
fwait
cmps
jg
xlat
pop
fs
cmp
pop
adc
pop
push
mov
inc
adc
dec
sbb
push
pop
arpl
je
push
scas
or
bound
sub
push
les
pushf
or
xbegin
cmc
pop
add
sub
and
outs
inc
pop
add
cmp
jo
dec
adc
push
cs
in
fcom
ins
inc
sub
sbb
inc
pop
cld
lods
mov
cmp
jae
sub
shr
xchg
out
mov
inc
cmp
xchg
or
rol
daa
inc
pushf
aad
inc
push
sub
loop
mov
inc
sbb
and
inc
and
add
xchg
jns
dec
mov
pop
stos
and
cmp
imul
cmp
lds
mov
jo
xor
adc
mov
push
(bad)
call
(bad)
add
sahf
repnz
aas
cmp
or
cwde
cmp
pop
scas
push
cmp
mov
add
or
pusha
and
add
ins
sbb
inc
add
push
mov
push
jecxz
pusha
dec
jmp
(bad)
in
adc
add
add
mov
popa
loopne
stc
ds
data16
push
or
jo
inc
xor
and
push
sbb
sbb
or
pop
and
sub
popa
add
sbb
adc
inc
xor
jg
inc
popa
in
jmp
and
dec
fbld
fs
cmp
ret
mov
and
push
popa
adc
or
and
outs
pop
jmp
inc
or
mov
dec
add
aas
pop
retf
rol
dec
jo
jge
inc
pop
fcmovnbe
pop
dec
push
imul
inc
xor
add
ja
mov
dec
addr16
jns
arpl
ret
push
mov
scas
push
and
rep
stos
xchg
mov
inc
push
add
in
jmp
dec
ja
sahf
inc
movs
(bad)
mov
inc
gs
mov
inc
and
dec
movs
adc
push
popf
out
mov
out
xchg
xchg
rol
lods
and
or
sub
or
xchg
mov
pop
xadd
ret
xor
jne
outs
addr16
or
sbb
je
xchg
dec
(bad)
jae
mov
shl
arpl
into
adc
sbb
sub
xor
mov
sub
sub
push
pusha
movs
pop
inc
and
lods
inc
inc
jnp
sbb
(bad)
test
inc
shl
cmp
(bad)
push
jns
ins
adc
mov
dec
pop
out
or
cmp
sbb
sub
xor
add
fstp
(bad)
cmc
sti
jo
enter
ret
xor
mov
xchg
sbb
and
or
popa
rcl
sbb
push
push
inc
add
xchg
pandn
adc
xor
pop
add
push
or
push
jno
(bad)
xchg
pop
inc
fs
and
dec
gs
or
or
add
fcmovb
mov
pop
inc
xchg
stos
dec
rol
in
sti
imul
xor
mov
movs
push
adc
out
ins
icebp
outs
imul
jg
sbb
inc
xor
mov
mov
movs
jge
inc
mov
pop
add
add
sbb
pop
and
cmp
pushf
shl
or
push
lods
inc
add
add
sub
pop
jnp
inc
dec
sbb
and
xor
xlat
sub
adc
popa
and
xchg
(bad)
loopne
add
pop
mov
mov
lods
sub
fwait
adc
lods
inc
loope
out
jno
test
mov
out
add
stc
ja
push
imul
inc
sub
icebp
ror
xor
aas
and
mov
shl
fwait
adc
and
mov
and
test
pop
ror
push
mov
dec
lods
sbb
xor
les
cmp
pop
mov
push
add
(bad)
enter
pop
or
mov
sub
rcr
sub
es
lea
or
fdiv
xlat
adc
call
adc
adc
add
cmps
imul
pop
mov
dec
inc
mov
jp
dec
xchg
or
shl
hlt
mov
pushf
cmps
push
push
inc
dec
add
popf
aad
sub
mov
sbb
add
ins
mov
pop
sbb
pop
ins
ss
or
inc
nop
push
jle
adc
movs
fisubr
adc
movs
fistp
rep
pop
push
fdiv
movs
add
leave
sub
cld
cwde
sbb
pusha
cs
es
add
not
xtest
imul
pop
inc
add
dec
add
in
adc
leave
xchg
xchg
out
cmovg
sahf
fild
jae
push
xlat
push
mov
nop
or
(bad)
push
fsub
iret
sar
xchg
and
add
inc
inc
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
