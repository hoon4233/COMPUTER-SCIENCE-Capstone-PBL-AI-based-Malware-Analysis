mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
mov
ins
jae
add
jb
lea
sub
add
push
outs
(bad)
test
pop
dec
outs
je
addr16
and
rcr
xor
add
jns
ins
daa
push
outs
jb
add
pop
jns
inc
outs
(bad)
mov
repz
add
cwde
or
push
je
sub
movs
push
sub
cdq
std
or
push
imul
pop
push
ins
mov
popa
hlt
or
push
add
add
iret
imul
sar
rcl
enter
stc
sub
inc
add
dec
bound
arpl
rcr
popw
sbb
and
clc
push
mov
and
or
jb
popa
arpl
fs
imul
inc
add
sti
jmp
clc
jmp
adc
(bad)
out
mov
mov
xchg
xor
es
test
or
add
xchg
sbb
or
ds
push
leave
dec
ss
shl
fsub
and
adc
loope
dec
lock
sbb
or
inc
cmp
sub
add
push
inc
popa
shr
push
fcom
imul
push
add
add
sbb
add
jno
hlt
jb
cmp
lock
aas
call
jb
fcomp
fdivr
cmp
cmp
rcr
int3
jb
jb
enter
mov
mov
in
jbe
iret
movs
mov
in
pushf
aas
cwde
xchg
sub
enter
(bad)
nop
jno
repnz
in
jb
xor
jno
jb
xor
push
push
add
mov
sbb
jmp
add
imul
je
movzx
mov
ss
pop
ret
addr16
fsubr
ins
punpckhbw
fs
(bad)
pushf
pushf
pushf
pop
pop
push
push
mov
mov
fadd
push
int3
mov
test
jne
fstp
test
in
mov
mov
ret
lea
out
(bad)
inc
push
mov
mov
inc
cmp
jne
mov
mov
mov
push
nop
mov
add
(bad)
mov
ja
mov
mov
xchg
add
test
xchg
mov
mov
mov
jne
(bad)
fimul
or
adc
add
mov
aaa
push
mov
or
adc
ret
jae
(bad)
fisttp
icebp
mov
mov
mov
add
rcr
clc
jg
mov
or
push
or
ret
and
pop
repz
xchg
mov
push
or
inc
add
adc
or
aaa
sub
jne
(bad)
mov
cmp
test
pop
pop
pop
push
(bad)
out
add
mov
mov
xchg
cmp
jb
mov
add
jo
(bad)
add
int
bound
jne
mov
div
mov
dec
ret
jmp
pop
out
lods
pusha
sti
mov
add
pop
repnz
sub
outs
add
sub
mov
lock
jno
jmp
xor
(bad)
sbb
scas
sbb
sti
jne
sbb
nop
out
cmp
cmp
mov
jl
add
xchg
add
add
jmp
fiadd
and
push
jg
mov
mov
test
je
mov
mov
jbe
(bad)
adc
(bad)
mov
push
dec
pop
cmp
mov
push
mov
data16
jne
ja
dec
jmp
push
pop
outs
pop
fs
cmp
aas
sub
shr
fucomip
mov
inc
pop
xchg
mov
(bad)
and
mov
call
pop
jno
mov
popf
jmp
in
es
ja
mov
popf
mov
xchg
hlt
cmp
ja
cmp
jp
hlt
outs
xchg
or
sbb
jmp
loopne
or
mov
fild
mov
adc
jbe
jle
sbb
adc
je
pusha
sbb
pop
push
adc
inc
mov
mov
and
mov
add
sbb
jle
inc
sub
or
lds
mov
rcr
mov
jle
add
and
mov
cmp
or
fidiv
or
jbe
scas
adc
sti
push
push
ficom
sub
adc
pop
or
cmp
mov
je
out
jb
inc
ja
xor
jmp
sahf
inc
lock
sub
or
sub
jae
mov
cmp
jae
std
xor
sbb
inc
adc
ror
mov
mov
mov
call
ins
out
cmp
out
shl
shl
cmp
jg
(bad)
cmc
popf
sahf
inc
xlat
mov
pop
inc
in
je
mov
enter
inc
ds
adc
jne
push
(bad)
pop
add
sti
mov
cmp
movs
and
push
and
mov
jmp
shl
mov
cli
jl
inc
mov
out
add
je
cmp
inc
sub
lock
sub
frstor
mov
stos
mov
pusha
icebp
xor
nop
or
pop
sar
gs
sub
pusha
jno
push
out
fwait
add
call
fsubr
jne
int3
imul
xchg
ss
jne
xchg
cmp
movs
lds
sub
fs
ret
inc
popf
adc
sbb
xchg
(bad)
call
cmp
inc
mov
mov
(bad)
jnp
push
lock
jae
mov
out
rol
xchg
jle
pop
fcom
mov
in
mov
(bad)
ret
addr16
dec
jo
add
adc
jmp
push
data16
ja
sbb
hlt
push
add
add
lahf
std
cmp
push
push
push
mov
push
cmp
and
or
fldcw
adc
es
mov
sub
mov
push
mov
jle
hlt
inc
cmp
in
mov
ret
add
les
loopne
or
pop
pop
pop
push
adc
sub
mov
ret
mov
mov
jo
xchg
pop
xchg
test
shl
ss
iret
xor
cmp
in
bound
cs
ja
and
test
fs
add
mov
je
bound
pusha
cmp
mov
sbb
and
mov
cmp
cmp
add
adc
sbb
or
adc
test
jns
sub
cmp
rol
stc
add
and
mov
pushf
and
mov
add
push
pop
adc
push
shr
push
pop
add
or
mov
cmp
das
jne
or
call
xchg
lea
cmp
jl
mov
push
xor
sahf
es
or
sbb
add
mov
mov
and
add
sub
test
cld
jne
lahf
inc
mov
adc
mov
cli
in
jbe
or
push
or
push
rol
add
daa
stc
xchg
or
ret
dec
(bad)
mov
loope
or
cmp
cmps
(bad)
sub
xor
test
test
je
fcomp
mov
sub
cmp
cmp
lsl
or
add
test
mov
xor
mov
test
mov
clc
add
and
cmc
jne
mov
(bad)
bound
and
mov
jne
and
adc
add
cmp
fwait
dec
mov
das
sbb
cmc
mov
into
push
lea
sub
fild
test
sub
sub
cmp
jge
mov
add
fsub
in
test
adc
xlat
cld
lea
and
aad
pop
sub
mov
sub
(bad)
clc
sbb
scas
inc
add
adc
shl
ficom
or
mov
mul
mov
xchg
iret
je
jmp
mov
add
sub
jo
sub
je
(bad)
aaa
adc
mov
sar
enter
adc
jbe
shl
mov
cmp
jmp
hlt
inc
adc
pop
mov
push
pop
add
sub
cmp
or
mov
pop
mov
sub
add
ins
sbb
inc
cmp
adc
push
inc
sub
adc
daa
push
or
jo
ja
dec
pop
ret
ins
rcr
cmp
movs
movs
mov
cwde
cvttps2pi
cmp
or
pop
push
movs
clc
into
lock
cmp
pusha
xchg
dec
sub
add
popf
mov
repz
(bad)
sub
mov
sub
leave
loop
fmul
add
add
cmp
mov
cld
adc
leave
aam
loopne
or
push
arpl
call
in
or
fsub
pop
inc
stos
pop
int3
inc
dec
xlat
test
int
(bad)
cmc
mov
clc
stc
mov
or
push
or
or
jmp
lock
adc
stos
jo
jle
sub
movd
lods
cs
mov
mov
pop
je
pop
jmp
sub
test
sbb
pop
mov
pop
xor
jg
jne
movs
sub
cmp
adc
inc
add
push
pop
mov
(bad)
loope
lods
je
inc
sub
xor
dec
and
stos
mov
and
rol
(bad)
xchg
leave
jmp
bnd
and
push
jne
js
pop
mov
int3
xor
pop
xlat
rol
push
test
pop
mov
jns
movs
pusha
or
pop
sbb
js
jle
inc
cld
jbe
test
push
push
add
mov
mov
add
sub
add
mov
mov
(bad)
sbb
fst
sub
adc
je
test
add
pop
add
scas
shl
push
or
mov
hlt
jmp
mov
jge
daa
dec
jno
inc
(bad)
pushf
or
or
aad
or
mov
in
sbb
pop
xor
jmp
mov
xor
dec
sub
sub
mov
sbb
push
jmp
inc
adc
arpl
and
push
adc
push
push
pop
ffree
push
sbb
mov
leave
pop
jne
out
or
jo
pop
jns
or
and
dec
aad
lock
test
jne
test
lea
dec
call
add
add
mov
mov
sub
or
into
(bad)
(bad)
add
jge
xor
cmp
mov
pop
repz
jl
ret
mov
cmp
add
xchg
stos
in
sub
jle
sbb
dec
test
cld
pop
mov
adc
ret
sbb
dec
adc
test
jmp
mov
ins
sti
(bad)
jmp
js
push
clc
push
adc
or
int
sbb
sbb
rol
pop
mov
add
mov
pop
jg
dec
rcr
mov
(bad)
mov
mov
in
(bad)
jge
lods
clc
sub
mov
jno
int3
jne
adc
or
xor
adc
cmp
mov
cli
add
inc
sub
mov
mov
popf
jb
test
jo
pop
das
cmps
mov
or
sbb
mov
push
pop
fimul
fmul
and
or
mov
sub
pop
jecxz
and
fmul
imul
xor
dec
daa
clc
call
inc
lahf
add
cmp
add
mov
jo
mov
test
mov
xchg
mov
add
mov
jge
pop
mov
loopne
sbb
or
pop
push
xchg
mov
daa
retf
cmp
xchg
ret
test
cmps
jmp
add
ret
xor
dec
mov
xor
loopne
or
ins
or
xor
cmc
adc
pop
dec
call
mov
adc
add
mov
jmp
out
adc
mov
mov
(bad)
add
mov
adc
jo
sbb
push
daa
test
dec
dec
cmps
test
jle
call
adc
outs
outs
pop
or
add
(bad)
daa
iret
je
je
dec
jnp
dec
xor
sbb
enter
dec
mov
sbb
push
xor
pop
(bad)
sub
bound
rcr
sbb
jnp
arpl
mov
imul
adc
cld
jge
ret
nop
lock
ins
cmp
sbb
or
or
mov
add
inc
pop
out
gs
mov
or
push
ja
inc
or
daa
mov
sub
aaa
enter
adc
add
je
(bad)
jecxz
popf
lahf
cwde
add
jo
mov
mov
out
adc
jne
ja
loopne
pop
lock
ret
push
push
push
xor
ins
fsub
xor
dec
xchg
mov
jp
loope
and
mov
repnz
or
je
std
mov
sbb
ret
sub
inc
adc
adc
sar
(bad)
mov
inc
repz
mov
jmp
mov
jmp
pop
shl
pop
out
ret
pop
adc
loop
sbb
fadd
mov
jb
div
je
cmp
movs
fstp
int3
outs
xchg
inc
je
cld
lea
xor
(bad)
xor
les
ds
aas
pop
jmp
rol
nop
adc
mov
ror
and
cmp
into
cmp
add
add
jmp
xor
mov
jmp
cmp
xor
push
or
sub
add
ja
jne
in
sbb
mov
sub
arpl
(bad)
ds
mov
mov
xor
jmp
outs
cmp
retf
(bad)
cmp
jbe
mov
mov
inc
inc
adc
cmc
shl
ret
sbb
push
add
inc
addr16
xchg
stos
sbb
jne
push
fwait
lods
je
push
test
stos
out
xor
je
push
and
ret
add
adc
je
adc
dec
jmp
add
mov
mov
jp
stos
dec
fwait
cwde
push
or
mov
jne
pop
xchg
add
jb
cmp
(bad)
outs
cli
jp
add
push
mov
fldcw
in
add
pop
push
sub
adc
jp
fwait
add
out
or
ins
frndint
fldcw
imul
fistp
or
into
test
fbld
pop
pop
inc
popa
addr16
or
mov
pop
mov
mov
cmp
or
add
popa
addr16
pop
inc
mov
inc
and
xchg
mov
fwait
pop
sbb
sbb
movs
(bad)
push
sub
sbb
mov
push
mov
imul
xor
jle
adc
or
add
push
add
adc
sti
pop
cmp
adc
cmp
jne
push
fidivr
test
fistp
add
jae
jbe
es
jae
mov
push
or
push
or
div
neg
push
xor
xchg
mov
in
add
jo
sbb
test
(bad)
not
je
push
mov
adc
(bad)
and
mov
je
add
movs
push
and
jle
pop
mov
je
(bad)
push
inc
sbb
and
daa
das
inc
add
pop
sar
push
shr
jmp
cmp
mov
cmp
and
push
push
push
lea
push
rol
call
mov
push
pop
inc
cmp
dec
dec
dec
push
adc
dec
inc
inc
out
sub
jbe
out
jle
in
xchg
push
aaa
js
mov
loop
shl
push
push
inc
pusha
pop
dec
mov
outs
ins
cmp
jae
cmp
out
push
xchg
std
outs
mov
sub
jp
jo
jne
jmp
lea
pop
nop
or
lods
fs
dec
popa
shr
push
hlt
pushw
and
call
jmp
cmc
lods
dec
lock
xor
fcmovbe
inc
adc
add
cs
push
push
xor
cmps
pop
inc
mov
iret
cmp
pusha
fucomp
hlt
xor
mov
aas
sub
and
retf
add
sub
and
push
push
jg
popa
push
test
cmp
pop
loope
dec
pop
imul
inc
add
shl
sub
dec
dec
sub
(bad)
(bad)
ror
dec
cmp
xor
jmp
cmp
cmp
mov
sar
xor
push
sbb
push
in
and
xor
mov
ja
and
xor
mov
push
sub
sbb
repnz
cld
adc
pop
div
mov
adc
mov
call
mov
mov
xor
mov
inc
add
jb
cmp
ja
mov
mov
mov
inc
add
xchg
cld
out
arpl
test
or
mov
sbb
retf
nop
retf
mov
inc
inc
and
push
xor
or
dec
sar
dec
mov
jmp
pop
cmp
jne
dec
je
mov
push
pop
add
aaa
add
add
dec
jne
jmp
adc
add
sar
(bad)
inc
mov
cmp
jne
dec
je
mov
cmp
jne
or
push
cmp
sbb
rcl
cmp
mov
shr
shr
sbb
mov
call
out
loope
mov
inc
dec
dec
pop
outs
cs
push
cmp
rol
pop
or
fwait
out
mov
cmp
jne
dec
dec
dec
and
dec
dec
dec
sbb
fistp
adc
add
pusha
js
xlat
scas
clc
jne
outs
or
push
adc
in
ret
and
add
jne
mov
ret
out
call
and
je
dec
outs
or
cli
pop
add
int
enter
or
jg
cld
adc
mov
stos
pop
xchg
xor
imul
mov
loopne
mov
ja
mov
(bad)
cmps
sbb
and
or
test
xabort
add
xchg
ja
jb
pop
add
pop
retf
dec
jne
push
cld
xchg
push
adc
or
je
jbe
xor
and
cmp
cs
add
leave
adc
sbb
sbb
inc
adc
mov
jae
sahf
jne
mov
jo
push
pop
mov
push
jle
mov
mov
(bad)
jg
adc
rol
push
adc
jl
mov
inc
cmp
push
cmp
je
cmp
push
stos
dec
mov
jmp
pop
cmp
jne
dec
sub
lock
adc
sbb
mov
scas
mov
add
test
je
sub
icebp
out
push
inc
and
(bad)
and
fidiv
fld
add
or
jmp
cmp
call
jne
sti
inc
div
dec
mov
cmp
and
pop
popa
je
add
and
aam
lahf
jmp
or
in
daa
or
dec
pop
call
(bad)
ins
je
outs
mov
fstp
push
inc
cmp
je
mov
or
je
or
je
fstp
pop
imul
push
xor
fild
sub
dec
and
fidiv
add
sub
fucomi
xor
or
cmp
ja
lea
add
push
jg
mov
push
out
int
or
jge
jmp
inc
pusha
neg
jle
js
pop
scas
add
std
sub
jmp
inc
inc
jmp
mov
popf
mov
je
and
xchg
and
xor
add
scas
leave
je
stos
aad
lods
outs
es
cwde
pop
xor
mov
test
add
push
call
pop
sbb
nop
sub
jbe
movq
add
je
mov
pop
sbb
js
push
cmp
jg
add
add
push
fcmovbe
jbe
lock
std
add
pop
jmp
xchg
adc
add
stos
nop
inc
mov
inc
jle
push
lea
fs
cmps
inc
sti
jg
push
ret
and
test
jg
icebp
pusha
daa
pop
neg
pop
add
or
or
test
add
xor
add
mov
pop
scas
fstp
mov
and
stc
sbb
(bad)
mov
je
inc
mov
dec
jne
pop
sub
mov
pop
mov
mov
mov
mov
add
rcl
or
pop
jecxz
sub
cmps
jp
mov
sub
sub
leave
jne
xchg
(bad)
cmc
sti
push
xor
mov
call
aaa
stos
dec
loop
lea
fld
enter
cmp
add
je
das
lds
(bad)
retf
add
popa
and
cmp
push
jb
gs
mov
xor
das
test
jmp
fstp
fld
shr
adc
out
movs
mov
jg
aas
mov
nop
daa
enter
inc
pushf
or
enter
ret
mov
adc
in
pop
and
sbb
add
mov
and
movs
aam
add
es
test
out
sub
pop
jecxz
push
sub
mov
aaa
inc
jbe
imul
cmp
push
aas
call
mov
bound
cmp
int
stc
mov
xlat
fadd
outs
xor
xchg
push
or
push
push
jmp
in
int3
into
sbb
ror
mov
push
pop
test
enter
(bad)
(bad)
(bad)
jg
outs
movs
push
inc
cmp
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
pop
(bad)
(bad)
(bad)
dec
dec
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
push
cmps
iret
dec
js
inc
mov
stos
mov
cmp
or
mov
jmp
jg
mov
imul
(bad)
div
jl
xor
cmp
call
(bad)
(bad)
dec
jmp
stos
push
inc
mov
push
sbb
sar
repnz
test
(bad)
(bad)
inc
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
(bad)
(bad)
inc
repz
loope
jp
iret
inc
bound
ds
push
cmps
scas
mov
pop
(bad)
(bad)
(bad)
dec
leave
dec
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmps
lock
and
push
movs
mov
popa
mov
and
addr16
repz
mov
sub
(bad)
call
push
pusha
les
outs
bound
xor
jmp
cmp
sub
push
pop
ret
loop
clc
cmp
pop
mov
hlt
mov
adc
sbb
pop
call
mov
lea
push
push
adc
dec
fwait
add
xor
push
push
mov
mov
jmp
hlt
push
data16
add
and
jo
mov
aas
out
mov
jmp
ret
bsr
push
clc
pop
aas
or
mov
jmp
adc
inc
push
push
inc
push
inc
pop
inc
outs
jb
popa
outs
fs
inc
gs
jo
imul
dec
add
push
dec
popa
jae
push
popa
ins
jne
fninit
fld
mov
movs
mov
ud0
or
xlat
mov
stos
jle
(bad)
xor
mov
inc
rep
cs
mov
(bad)
push
or
dec
cld
jne
dec
mov
xor
and
jne
sbb
jbe
repnz
mov
inc
inc
(bad)
add
mov
pop
add
cmp
pop
pop
mov
sbb
(bad)
cmp
js
add
outs
test
or
fisub
enter
push
movups
fs
mov
sbb
add
jle
jmp
pop
mov
or
push
cld
cld
call
into
cmp
stos
mov
xor
push
shr
dec
rep
pop
outs
push
jnp
jmp
sub
pop
mov
pop
(bad)
fmul
sbb
in
cmp
je
pop
mov
add
jae
daa
push
mov
mov
push
sbb
cmp
(bad)
in
les
out
lods
(bad)
mov
mov
mov
stos
mov
adc
pop
xchg
mov
cmp
cmc
out
cmp
xchg
cmp
(bad)
jb
movups
pop
push
out
and
jmp
call
fadd
rol
adc
cmp
mov
mov
mov
imul
in
out
pop
or
mov
sub
jnp
push
daa
in
xor
ficom
add
lock
mov
call
lea
and
pop
adc
out
lea
setne
mov
iret
mov
call
sar
cwde
jl
xor
xor
jb
aaa
dec
icebp
add
jo
fmul
or
jne
or
push
dec
ror
inc
inc
fcom
lds
rol
aam
sbb
push
ja
test
cli
idiv
push
mov
mov
cmp
je
mov
leave
jne
mov
add
outs
xchg
jmp
retf
test
loope
cmps
or
mov
or
not
cld
jg
ret
pop
add
sub
mov
pop
cs
xchg
add
movs
ja
retf
pop
pop
pop
jmp
into
mov
mov
cmp
mov
mov
cmp
or
fdiv
pop
pop
push
mov
or
pop
ins
jmp
push
adc
adc
stos
add
mov
pop
mov
popa
lock
ds
sbb
dec
int3
bound
je
mov
dec
push
cmp
sbb
add
dec
jne
icebp
dec
sar
jnp
jmp
push
jmp
add
sbb
jecxz
mov
cmp
scas
lahf
push
popf
enter
jns
push
sbb
rcr
sbb
jmp
lahf
fdiv
in
push
pop
add
mov
jl
and
xor
cs
sbb
mov
mov
mov
or
or
push
adc
adc
sub
cli
test
or
or
jmp
sub
call
aam
rol
enter
in
or
push
and
pop
mov
push
clc
test
jbe
mov
push
call
adc
aaa
pop
pop
push
pusha
cmps
and
movs
push
mov
leave
rcr
or
cs
add
mov
ss
cs
mov
pop
push
push
and
sbb
jg
cmp
je
or
jne
movsx
inc
inc
jmp
add
repnz
addr16
sti
cs
push
jecxz
add
in
inc
(bad)
adc
loop
cmps
dec
xor
adc
loope
loopne
in
test
loop
test
mov
mov
mov
outs
sub
mov
sub
jmp
test
pop
les
out
xchg
add
pop
imul
into
cli
out
push
je
dec
sub
xor
adc
jbe
test
jo
in
pop
and
clc
add
stos
iret
(bad)
outs
into
cmp
enter
adc
adc
push
jp
cli
push
adc
test
jo
dec
add
mov
fsub
add
push
sbb
add
push
mov
sbb
pusha
movs
dec
sbb
enter
sbb
fadd
add
pop
mov
mov
cmovno
xor
mov
xchg
je
dec
or
out
cmp
add
mov
inc
cwde
mov
cmc
xchg
jmp
lea
mov
add
shl
aas
repnz
add
cmp
jne
das
lea
push
cmc
(bad)
ror
inc
data16
mov
push
loopne
or
dec
jne
je
faddp
and
adc
inc
jmp
sbb
push
cmp
daa
push
adc
lahf
adc
adc
ins
or
mov
js
pop
adc
ja
or
aaa
inc
push
popf
sti
and
(bad)
cmps
mov
jmp
sub
lock
fdivr
call
push
push
mov
rol
xor
shl
sbb
icebp
daa
sub
and
test
adc
sar
movs
and
pop
mov
mov
cmc
lea
jae
mov
(bad)
adc
(bad)
fdivr
loop
xor
mov
inc
sbb
adc
or
or
div
pop
mov
add
(bad)
jg
je
cmp
push
sub
mov
cmp
pusha
add
sub
jb
je
jmp
cmp
jne
pop
in
sub
add
jmp
sub
(bad)
(bad)
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
mov
jmp
mov
mov
jmp
mov
jmp
mov
pusha
add
in
pusha
call
inc
arpl
pop
cs
or
mov
mov
jg
(bad)
push
(bad)
push
jns
jno
outs
mov
or
adc
inc
(bad)
mov
je
add
cli
dec
mov
or
jo
pusha
aam
aam
hlt
mov
cmp
cmps
push
sub
xchg
mov
adc
cdq
xor
xchg
or
mov
inc
or
push
or
adc
xor
cmp
jbe
push
repnz
stc
push
add
in
mov
mov
dec
daa
das
test
or
jo
push
xchg
inc
test
sti
fstp
dec
mov
inc
fiadd
call
and
adc
mov
gs
or
outs
aaa
lock
mov
mov
pushf
(bad)
and
mov
cmp
add
xchg
in
sbb
jg
imul
aad
xchg
sbb
ret
mov
adc
push
mov
mov
mov
adc
lods
ret
(bad)
jp
cmp
gs
(bad)
sbb
mov
add
add
pop
add
dec
jne
pop
add
sbb
inc
pop
sbb
inc
cmp
out
add
mov
popa
xor
rcl
mov
js
jecxz
jl
lock
mov
add
aas
test
rol
sub
xor
dec
jnp
push
es
push
jmp
mov
mov
xchg
adc
mov
push
push
mov
cmp
push
out
push
add
cmps
neg
sbb
inc
fstp
jl
push
cmp
mov
add
mov
mov
leave
aas
mov
fimul
cmp
sub
cmp
add
aam
mov
pop
add
xor
push
cmp
inc
inc
pop
ret
pop
ret
mov
fwait
pop
adc
add
mov
dec
jns
mov
or
add
mov
dec
and
outs
pop
cmp
push
cmp
adc
mov
clc
pop
mov
call
and
fistp
and
xor
icebp
jae
sbb
push
jne
push
jle
into
rol
add
mov
mov
or
push
int3
sbb
inc
adc
jo
or
fsubr
fld
and
add
push
adc
add
pop
cmp
jmp
add
adc
push
push
sti
ret
pop
mov
or
rol
mov
dec
pop
mov
add
xchg
jns
scas
jne
mov
rcl
addr16
nop
stos
sub
mov
jmp
push
xor
push
mov
mov
sbb
push
push
cld
in
ins
test
jle
pop
pop
fistp
aad
mov
dec
mov
add
adc
sahf
sub
add
push
push
or
push
mov
add
push
push
xchg
cwde
push
cmp
or
mov
or
and
aaa
mov
shl
sti
dec
jl
lock
push
lea
std
pop
jb
out
sbb
sbb
add
pop
push
sub
or
dec
jne
and
test
inc
jg
mov
jmp
pop
push
dec
sbb
jmp
mov
ins
xchg
adc
xchg
ja
test
jle
pop
jle
push
(bad)
push
add
loopne
push
adc
add
push
or
cld
mov
in
jbe
lea
mov
clc
das
stc
mov
or
pop
shl
ds
cmp
popa
push
fiadd
cmp
or
push
mov
push
ret
push
push
push
sbb
mov
fild
loopne
(bad)
cmp
cld
jns
out
mov
ret
pop
lea
cmp
mov
scas
sub
dec
xchg
cmp
mov
xchg
jo
jecxz
sysexit
(bad)
mov
lds
ffreep
mov
sbb
cmp
and
sbb
add
(bad)
pop
les
push
push
cmps
push
add
cs
and
mov
je
cwde
pusha
push
es
or
je
add
sar
and
add
jmp
iret
(bad)
pop
sub
and
pop
pop
or
pop
(bad)
out
sahf
push
push
addr16
in
add
into
je
loopne
or
add
cli
repnz
xchg
mov
aaa
sbb
pop
add
pop
pop
xor
dec
call
add
xlat
cmps
push
cmp
pop
cld
fmul
mov
jl
(bad)
mov
ja
add
aas
ja
jl
cmps
je
mov
cld
mov
push
cld
add
cmp
xchg
pop
xchg
adc
and
and
cmp
xchg
jg
popa
and
adc
or
outs
or
jmp
sub
ror
inc
jmp
das
in
mov
mov
cli
lds
push
sbb
leave
push
dec
mov
(bad)
push
retf
out
mov
jmp
mov
or
cmps
xor
(bad)
xchg
adc
or
inc
ret
je
mov
dec
jmp
out
data16
sub
add
cmp
push
dec
jne
mov
popa
out
ja
jge
movd
lock
add
dec
jmp
and
scas
push
mov
mov
or
add
pop
xor
jmp
cmp
and
lea
jmp
pop
cmp
add
mov
pop
jl
fs
mov
sbb
pop
dec
or
push
cmp
outs
mov
adc
je
xor
jo
xchg
and
jmp
or
pop
sub
inc
addr16
push
test
cmps
add
add
cmp
adc
je
imul
mov
adc
adc
es
mov
ret
sub
inc
jg
mov
dec
jl
cmp
jge
xchg
pop
sbb
adc
inc
jg
sbb
jmp
inc
jmp
and
pop
cmp
fisttp
pop
int3
cmp
aaa
sub
dec
jl
sub
mov
mov
cmp
fstp
inc
sub
add
lea
inc
dec
movs
pop
retf
push
push
dec
ds
or
mov
xlat
cdq
mov
push
mov
mov
cmp
adc
imul
add
gs
cmp
inc
mov
lea
lock
popf
rol
sub
add
div
pop
xchg
inc
pushf
xor
mov
push
ins
dec
js
mov
inc
jb
adc
or
cmp
and
xchg
add
sbb
fcomp
clc
(bad)
xlat
inc
add
mov
out
and
aas
lods
and
sbb
mov
in
push
cs
cwde
pop
mov
sbb
jo
(bad)
fs
out
pop
aad
mul
cli
pop
cmp
(bad)
mov
enter
or
adc
add
mov
retf
push
push
retf
aad
mov
ds
jae
test
cwde
pop
mov
and
test
push
clc
and
movs
ret
(bad)
fucomi
lods
leave
outs
mov
mov
sub
dec
test
call
imul
mov
push
mov
out
js
cmp
xor
lea
adc
jne
and
aaa
or
push
das
jo
pop
pop
rcr
push
push
sub
fistp
or
lods
lock
pop
push
cmp
call
mov
dec
out
push
fsub
push
ret
sbb
inc
jle
inc
jmp
pop
les
inc
xor
fisttp
sbb
les
mov
inc
les
add
outs
push
sub
push
aas
(bad)
(bad)
pop
push
mov
adc
xchg
xor
pop
push
inc
add
repz
inc
xor
mov
ins
pop
aaa
scas
add
rcl
out
fldcw
(bad)
hlt
ds
cmps
mov
fdivr
inc
sbb
mov
pop
add
iret
rol
shr
sub
push
dec
jge
loop
aam
sahf
jle
lea
mov
lods
ins
test
mov
or
mov
add
adc
jmp
loopne
sbb
push
add
dec
jnp
mov
int3
mov
sub
push
xor
or
into
enter
xchg
push
mov
xlat
pop
xor
popf
jmp
xlat
clc
retf
cmp
fisttp
shl
aaa
imul
les
into
ret
pop
popa
(bad)
pop
sahf
loopne
sbb
test
mov
repnz
stc
or
test
adc
out
je
and
push
push
inc
adc
pop
leave
xor
mov
dec
adc
add
mov
push
jo
call
or
sbb
adc
inc
cld
scas
out
sti
add
pop
dec
cmp
out
pop
push
sub
ds
or
ret
cmp
push
out
call
rol
add
or
mov
dec
cmp
or
jmp
mov
push
pop
adc
pushf
add
sbb
xchg
or
clc
aas
adc
daa
cmp
jecxz
bound
pop
dec
cld
adc
mov
js
mov
sbb
out
jo
int3
or
adc
pop
xor
add
mov
or
add
jl
push
test
inc
push
and
int3
adc
inc
pop
cmp
inc
pop
and
mov
pop
xlat
jo
pusha
es
scas
and
jg
jo
jle
je
xchg
cmp
je
cmp
mov
cmp
push
mov
mov
jo
mov
inc
outs
pop
shr
mov
add
or
adc
jmp
push
push
mov
dec
or
mov
cs
adc
popf
and
jmp
cmp
mov
sub
movlps
fs
pop
adc
daa
or
pop
call
je
mov
mov
loopne
inc
rol
fcmovnbe
and
ds
pop
jbe
cmp
pushf
test
push
mov
inc
push
test
into
or
int3
jg
daa
and
mov
pop
fisttp
int3
xchg
test
pop
iret
ja
inc
sbb
sbb
pop
jmp
es
dec
sub
repz
cs
nop
pop
inc
inc
inc
pushf
sub
add
mov
sbb
cmp
dec
test
jmp
shl
cli
fst
xchg
jns
test
adc
bt
jmp
sub
sahf
inc
pop
outs
jp
add
pop
xchg
adc
inc
or
inc
ins
push
jb
cs
inc
test
inc
cmp
push
cmp
sbb
push
mov
sbb
mov
mov
xchg
lea
mov
cld
sbb
push
push
add
sar
mov
mov
add
stc
push
pusha
inc
or
jbe
sbb
int
int
jmp
je
or
jbe
int3
je
jo
adc
mov
pop
or
in
ins
outs
rcr
das
jmp
and
jl
lea
mov
cs
js
jo
push
mov
or
dec
js
cmp
mov
add
add
pop
xor
sbb
and
ds
and
jne
pop
dec
pop
rcl
sbb
xor
dec
mov
push
test
and
mov
in
inc
push
xor
movs
push
popa
jge
pushf
mov
and
in
add
dec
jne
sub
arpl
ror
mov
jmp
mov
es
mov
dec
xor
add
stos
std
shr
or
ja
sti
add
add
inc
jmp
mov
icebp
mov
ss
int3
push
je
cmp
xor
push
push
cwde
loope
dec
adc
popa
adc
sbb
(bad)
pusha
in
pop
aam
lea
push
inc
in
popa
aam
add
adc
pop
(bad)
xor
movs
aad
xchg
arpl
mov
ror
mov
push
cmp
sub
jne
fistp
test
pop
inc
mov
cmps
add
and
and
mov
cmp
pop
and
ror
pop
pop
ret
test
fcomp
sbb
leave
jne
pop
pop
or
je
push
jns
outs
fcomip
or
(bad)
aam
add
pop
neg
neg
sbb
lahf
adc
int
ins
xor
shl
rcl
rcl
rcl
dec
cld
fcomip
cmp
jb
cwde
cmp
jb
sub
sbb
inc
loop
popa
cmp
test
sub
cmp
out
repz
ss
sbb
push
push
ficomp
pop
or
or
xchg
sub
dec
stos
inc
cmp
(bad)
lods
add
fcom
cmp
pop
sbb
inc
jmp
cmp
jne
mov
sti
sub
fld
je
cmp
sbb
(bad)
mov
adc
sub
push
retf
inc
popa
fsubr
fcmovu
add
jmp
jb
out
daa
ficom
sahf
mov
and
jmp
imul
sbb
or
jb
jmp
jl
and
jbe
push
jmp
jg
mov
cdq
aaa
nop
jo
or
adc
movs
pop
inc
push
mov
adc
mov
add
xor
xor
add
jmp
ret
ret
jns
and
pushf
ror
ficom
xchg
or
bound
xor
iret
jnp
sub
int3
and
pop
cs
jg
jmp
jmp
lock
nop
sub
adc
ins
jmp
pusha
icebp
sti
mov
add
pushf
sar
je
dec
add
ret
aam
or
dec
shl
mov
loopne
popf
or
lods
sub
xchg
(bad)
inc
test
cmp
push
loopne
sbb
dec
pop
add
imul
(bad)
jg
jle
mov
inc
jbe
add
lea
out
dec
cmp
retf
push
push
push
scas
inc
mov
add
lods
push
jl
add
or
adc
fst
jle
dec
imul
dec
in
in
mov
add
cmp
je
and
(bad)
cld
call
jne
mov
cmp
jge
test
and
mov
scas
xchg
dec
inc
add
mov
sub
add
lea
mov
adc
(bad)
xor
or
add
in
jge
or
jmp
push
in
test
dec
(bad)
dec
in
push
adc
(bad)
jns
call
push
dec
rcl
fbstp
xor
imul
out
ins
sar
or
cdq
loopne
test
add
cmps
cmp
jle
jno
ret
add
xchg
dec
jo
and
ror
add
or
cmp
test
das
mov
jne
enter
mov
cmp
sub
dec
push
xor
jne
lea
jg
out
push
adc
iret
ds
pop
mov
add
sahf
sbb
jnp
add
adc
dec
push
sbb
das
(bad)
push
push
mov
inc
out
pop
pop
jb
shr
jno
and
add
lahf
je
fstp
jae
ss
fsubr
jne
sub
inc
add
loope
sbb
hlt
push
push
push
jnp
jne
call
push
mov
or
dec
(bad)
les
and
ins
fcomp
sbb
pop
mov
cmp
pop
sbb
aaa
or
je
jmp
push
and
sbb
ret
jmp
inc
cld
adc
nop
mov
push
cmp
jne
add
test
push
nop
mov
push
ror
mov
inc
bound
pop
lock
inc
push
fimul
push
call
mov
push
loope
mov
adc
iret
mov
aam
and
jle
mov
loopne
vmread
pop
jne
mov
cmp
push
xchg
cmp
mul
mov
in
add
cld
jl
fisubr
mov
fstp
mov
or
(bad)
sub
add
inc
cmp
mov
push
push
fdiv
xor
cmp
jnp
and
je
mov
lea
ja
out
ss
cmp
test
sub
dec
scas
ins
ret
mov
push
mov
movs
ss
test
daa
sbb
ret
imul
call
gs
xor
cs
ins
ja
gs
outs
outs
addr16
popa
je
dec
popa
push
retf
ins
gs
daa
outs
loopne
mov
sub
jecxz
ja
inc
out
pop
dec
mov
and
push
xchg
fs
xor
fs
xchg
and
movs
and
arpl
push
mov
sub
cmps
out
and
int
pusha
pusha
cmps
fstp
iret
sar
add
sub
add
arpl
shr
(bad)
sti
and
(bad)
push
lods
repz
loope
std
mov
mov
mov
xor
pop
and
repz
or
jmp
jnp
and
push
test
cli
add
cmp
stos
pop
cmp
jne
adc
xchg
mov
sub
sub
in
add
out
ret
or
push
mov
add
je
das
popa
and
retf
mov
cmc
add
(bad)
mov
pop
outs
data16
popa
jb
pop
mov
in
cmp
jae
aaa
sub
sahf
aas
inc
cdq
push
loopne
jo
dec
ja
ja
retf
cmp
in
sub
(bad)
adc
jbe
mov
sbb
ficom
mov
mov
(bad)
jp
mov
sbb
mov
fcom
icebp
mov
mov
dec
test
fxch
fisubr
pushf
aas
cli
mov
xor
loopne
jp
cmp
dec
add
mov
and
dec
add
or
jl
mov
(bad)
retf
xchg
mov
cmp
or
outs
int3
and
and
fs
pusha
cmp
add
jo
inc
std
mov
pop
mov
push
cld
jne
jae
cmps
lock
movs
dec
jmp
add
push
or
sbb
add
out
shl
test
xchg
scas
dec
push
inc
mov
je
sbb
push
mov
hlt
sbb
push
sub
adc
pop
(bad)
jno
scas
pop
sbb
mov
pop
xor
(bad)
fcomp
sbb
mov
add
cmc
pop
mov
sub
lods
and
xchg
pushf
jg
xor
(bad)
or
xor
inc
xor
add
sbb
and
cmp
mov
cmp
ds
js
inc
(bad)
or
ret
pop
jnp
inc
sub
dec
push
mov
leave
call
stos
movzx
inc
cmp
ja
mov
inc
jmp
cmp
push
jbe
lea
cmp
ja
fcmovb
jmp
xor
sbb
adc
sbb
and
retf
and
push
xor
sub
and
cdq
arpl
rol
int
mov
add
mov
add
dec
mov
pop
(bad)
scas
or
xor
or
clc
in
add
cmp
push
xchg
jecxz
ret
lock
xchg
rol
add
rcl
mov
lock
push
(bad)
push
pop
sar
cmps
inc
(bad)
out
cld
test
pop
or
xor
rol
mov
fmul
loope
and
je
cmp
adc
out
cld
fistp
mov
and
cmp
jne
push
jo
loope
or
mov
pop
sbb
pop
in
lea
dec
dec
cld
mov
jl
fsubr
inc
inc
call
imul
dec
cmp
pop
scas
mov
mov
ret
push
pusha
xlat
and
sbb
adc
fsubp
cli
xor
sbb
or
jb
inc
pop
or
push
sbb
leave
dec
pusha
or
out
jbe
add
pop
repnz
ss
mov
movs
je
adc
lea
push
add
loop
and
dec
idiv
mov
pusha
pop
pop
enter
mov
dec
xor
jmp
mov
pop
push
adc
or
loopne
sbb
push
lea
xchg
cmps
neg
int
test
jle
mov
nop
cmp
inc
les
xchg
xchg
inc
jl
inc
inc
lods
je
push
neg
test
pushf
jns
pusha
lahf
(bad)
pop
cmp
or
xchg
fstp
add
add
shr
inc
push
ins
add
add
xchg
pop
loope
or
cmps
dec
pop
hlt
sar
mov
pop
leave
or
ret
js
jmp
lea
push
push
jp
xor
and
or
mov
and
sub
xchg
je
xor
leave
imul
or
jnp
retf
jp
sbb
add
hlt
and
jbe
fcom
call
mov
and
clc
sub
add
(bad)
or
add
fisubr
dec
xor
adc
popf
or
and
sub
lods
mov
adc
(bad)
data16
movs
movs
cmp
adc
and
and
mov
mov
inc
dec
add
and
pop
mov
test
iret
cmp
jbe
shl
adc
mov
sub
sub
nop
imul
pop
(bad)
in
ss
cmovs
addr16
ds
pop
cld
outs
mov
lods
movs
scas
and
cmp
or
jo
out
cmps
xor
or
jmp
push
mov
ja
aaa
or
mov
std
ret
leave
jne
mov
jns
push
xchg
clc
and
jo
ret
(bad)
and
ret
mov
xor
(bad)
in
(bad)
mov
mov
mov
or
mov
jge
xor
jo
pop
and
mov
jno
sub
(bad)
sub
cmp
sbb
inc
push
mov
add
and
dec
ss
add
inc
add
add
in
ins
dec
push
or
popf
je
cmp
cs
mov
add
xor
add
fs
gs
jbe
or
jb
imul
es
imul
inc
push
mov
arpl
inc
gs
jne
je
dec
outs
je
in
fucomip
out
imul
mov
gs
outs
inc
arpl
or
adc
ret
or
jb
(bad)
(bad)
jnp
xor
xor
(bad)
outs
ins
bound
outs
js
imul
add
outs
ja
nop
or
andps
outs
dec
mov
xor
js
ja
je
add
jl
add
jae
setl
nop
mov
test
test
leave
leave
jo
push
pushf
pusha
pop
pop
test
pushf
pop
enter
inc
cmp
enter
xor
enter
sub
and
test
enter
adc
in
pushf
pushf
add
cld
jb
dec
cs
hlt
lock
cs
in
call
in
(bad)
aam
in
dec
ror
enter
cs
sar
mov
cs
inc
test
mov
pushf
cwde
xchg
dec
dec
dec
cs
mov
inc
cmp
in
je
ins
push
fs
pop
pop
daa
daa
adc
in
jns
in
daa
daa
daa
daa
(bad)
aam
jb
and
int3
enter
daa
pop
sar
mov
test
daa
daa
daa
movs
mov
jb
xchg
nop
mov
outs
pop
mov
test
dec
js
jo
jb
mov
pusha
jb
daa
pop
pop
pop
push
daa
daa
pop
jb
dec
dec
inc
pop
jb
and
cmp
and
xor
sub
daa
pop
jb
and
(bad)
jg
das
adc
jge
add
rol
ins
sub
mov
cmp
sbb
sbb
xchg
or
adc
mov
nop
add
cld
js
leave
leave
test
enter
loopne
test
leave
leave
leave
leave
int3
enter
enter
mov
pushf
pushf
lods
test
test
pushf
pop
enter
mov
test
pushf
js
jo
pushf
pushf
pop
ins
push
test
pushf
pop
push
dec
dec
inc
test
pushf
pop
enter
sub
fild
sbb
fsubr
nop
xchg
sbb
(bad)
leave
test
dec
es
ja
hlt
in
in
lock
call
in
(bad)
aam
in
inc
ror
enter
cs
sar
mov
test
dec
dec
dec
movs
mov
in
xchg
nop
mov
in
dec
mov
jl
je
dec
cs
ins
push
in
pop
pop
push
in
in
push
dec
dec
inc
in
dec
cs
cmp
dec
dec
cs
xor
inc
dec
dec
dec
and
sbb
cs
sbb
or
in
inc
or
jb
and
jbe
hlt
daa
daa
daa
pop
lock
call
and
(bad)
daa
daa
daa
daa
aam
int3
enter
daa
(bad)
sar
mov
jb
daa
pop
test
mov
pushf
cwde
xchg
nop
jb
and
mov
pop
cmp
jb
je
ins
push
fs
pop
pop
jb
and
push
push
dec
jb
daa
pop
dec
inc
inc
jb
jb
cmp
xor
jb
jb
sub
and
daa
pop
jb
sbb
adc
pop
jb
and
add
nop
daa
daa
add
jne
xchg
xchg
or
hlt
lock
cmp
mov
fmul
cmp
cmp
aam
xchg
xchg
xchg
xchg
int3
enter
xchg
xchg
xchg
mov
mov
movs
mov
pushf
cwde
xchg
xchg
xchg
xchg
xchg
nop
mov
xchg
cmp
cmp
cmp
push
or
pop
nop
xchg
or
push
push
dec
cmp
cmp
xchg
xchg
or
cmp
mov
sub
cmp
cmp
sbb
adc
cmp
cmp
or
add
pushf
pushf
mov
je
hlt
lock
pushf
pushf
pushf
in
call
pushf
pushf
(bad)
aam
pushf
pushf
pushf
pushf
int3
enter
pushf
pushf
pushf
mov
leave
leave
test
leave
mov
pushf
pop
enter
test
test
pushf
pushf
je
ins
push
fs
pop
pop
pushf
pushf
pushf
pushf
push
push
dec
dec
pushf
pushf
pushf
pushf
inc
inc
cmp
leave
test
pushf
pop
enter
leave
leave
leave
leave
sbb
adc
leave
leave
leave
leave
or
add
inc
inc
data16
mov
inc
inc
inc
in
call
inc
inc
(bad)
aam
inc
inc
inc
inc
int3
enter
inc
inc
inc
mov
dec
inc
inc
lods
test
pop
in
fs
hlt
jp
xchg
xchg
xchg
xchg
ror
enter
xchg
xchg
sar
mov
test
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
nop
mov
xchg
cmp
xchg
xchg
xchg
jo
push
xchg
pusha
pop
pop
push
xchg
xchg
xchg
xchg
push
dec
dec
inc
xchg
xchg
xchg
xchg
inc
cmp
xor
xchg
xchg
xchg
xor
and
xchg
xchg
xchg
and
adc
xchg
xchg
xchg
adc
add
leave
leave
enter
inc
cmp
leave
leave
leave
xor
cmp
leave
leave
leave
leave
inc
sub
and
leave
leave
leave
and
adc
leave
leave
leave
adc
add
cmp
leave
add
jl
hlt
pushf
pushf
pushf
pushf
lock
call
pushf
loopne
fcom
cmp
mov
cmp
sar
mov
test
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
pop
push
cmp
cmp
push
dec
dec
inc
cmp
cmp
inc
cmp
xor
cmp
cmp
sub
and
mov
cmp
sbb
sbb
daa
daa
daa
adc
sbb
jb
add
jnp
cmp
cmp
hlt
lock
call
in
(bad)
cmp
cmp
aam
int3
enter
cmp
sar
mov
test
cmp
cmp
cmp
xchg
nop
mov
test
cmp
je
ins
push
fs
pop
pop
cmp
cmp
push
push
dec
dec
cmp
cmp
inc
inc
cmp
cmp
cmp
xor
sub
cmp
cmp
and
sbb
cmp
cmp
adc
or
mov
cmp
cld
jp
pushf
pushf
pushf
pushf
hlt
lock
call
in
mov
rol
loop
or
ret
les
jnp
jbe
sahf
xchg
mov
mov
dec
dec
mov
mov
mov
add
or
aam
add
fcomp
scas
mov
ins
jmp
mov
movsx
add
jne
out
pop
mov
popf
mov
inc
add
sub
imul
loopne
jp
outs
scas
imul
icebp
xchg
and
inc
mov
ror
repz
or
adc
sbb
mov
icebp
cmp
sub
push
mov
jp
sbb
mov
mov
ret
nop
scas
cmps
push
call
push
loop
xchg
sbb
je
(bad)
mov
ret
push
pop
ret
out
push
push
cmp
mov
push
sbb
adc
in
pusha
call
and
stos
ins
je
or
inc
pop
sbb
pop
iret
or
xchg
(bad)
cmp
inc
int3
or
ret
popa
gs
sar
pop
adc
dec
push
push
dec
inc
inc
dec
add
outs
mov
pop
sub
push
dec
dec
dec
push
inc
fidivr
pop
and
ror
push
pop
sub
ins
mov
dec
pop
dec
dec
dec
inc
push
das
repnz
inc
fisubr
mov
and
pop
js
lock
xchg
xchg
outs
and
icebp
repnz
xchg
xchg
xchg
hlt
cmc
div
xchg
xchg
xchg
xchg
clc
stc
cli
sti
xchg
xchg
xchg
xchg
cld
std
(bad)
call
loope
jecxz
xchg
xchg
xchg
in
out
xchg
xchg
xchg
xchg
call
xchg
xchg
xchg
in
in
out
out
xchg
xchg
xchg
xchg
rcl
rcl
xchg
xchg
xchg
xchg
aam
(bad)
xlat
xchg
xchg
xchg
xchg
fcomp
fcmovu
xchg
xchg
xchg
xchg
(bad)
(bad)
xchg
xchg
xchg
xchg
rol
ret
xchg
xchg
xchg
xchg
(bad)
(bad)
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
int3
int
iret
xchg
xchg
xchg
xchg
mov
mov
xchg
xchg
xchg
xchg
mov
mov
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
movs
movs
cmps
cmps
xchg
xchg
xchg
xchg
test
stos
stos
xchg
xchg
xchg
xchg
lods
lods
scas
scas
nop
dec
push
rcl
jl
retf
nop
sbb
(bad)
jl
or
push
(bad)
out
xor
out
nop
pop
push
push
or
popa
jb
push
jo
add
ins
out
dec
cs
les
pop
mov
inc
and
sub
xchg
clc
inc
je
clc
or
arpl
je
outs
outs
sub
mov
ds
js
mov
inc
inc
bound
je
and
adc
mov
jo
nop
fdiv
fdiv
or
dec
jne
mov
sub
dec
dec
gs
push
cmp
dec
aas
adc
or
outs
nop
mov
jle
inc
jb
mov
scas
nop
and
adc
jb
sub
and
xchg
daa
push
ins
ret
call
inc
cmps
adc
dec
xchg
cmp
or
enter
outs
mov
leave
mov
imul
enter
outs
nop
clc
clc
inc
jnp
mov
popa
outs
addr16
xchg
scas
inc
or
push
xchg
out
outs
leave
inc
jnp
jbe
jb
ins
outs
ja
mov
mov
pop
dec
lods
ja
jbe
in
xchg
scas
ds
sbb
xchg
data16
imul
dec
jo
scas
pop
push
push
xchg
enter
gs
mov
and
(bad)
rcl
xchg
push
or
ror
or
push
outs
add
into
mov
fs
ds
add
mov
push
in
pop
fadd
mov
icebp
popa
inc
push
daa
or
inc
popa
jae
or
inc
sti
ficomp
mov
xchg
xchg
loopne
or
scas
js
mov
mov
xchg
sub
dec
les
inc
mov
ins
popa
sub
jbe
clc
js
sar
push
push
jb
ins
pushf
push
xor
and
push
inc
and
pop
in
adc
nop
mov
push
or
je
ins
inc
(bad)
add
scas
ds
scas
enter
pop
dec
sbb
mov
popa
and
in
loop
mov
or
out
jb
in
int
aad
mov
jbe
shl
data16
and
stos
lock
cdq
(bad)
pop
cdq
dec
scas
add
inc
push
stos
and
ds
(bad)
sub
arpl
mov
enter
xor
or
out
push
sbb
clc
xor
sbb
cs
jns
adc
sub
inc
cwde
ins
push
push
gs
in
in
call
inc
or
(bad)
leave
leave
leave
leave
adc
sbb
jns
iret
and
cdq
and
push
pop
test
mov
mov
xor
outs
dec
fisttp
push
or
les
nop
int3
inc
cmp
mov
cmp
pop
jmp
out
cmp
inc
add
push
push
push
jb
popa
div
mov
mov
aam
not
pop
repnz
loope
cmc
push
or
jno
jnp
pushf
out
sahf
test
popa
imul
push
mov
jnp
sbb
push
loopne
sbb
inc
dec
pop
pop
ja
pushf
ficomp
aas
xor
mov
sbb
cmp
add
and
dec
imul
shr
es
and
and
ret
arpl
mov
and
fmul
in
or
aas
test
shr
div
fisub
add
aas
add
inc
pop
into
retf
mov
mov
rcl
pop
add
add
lea
sahf
movs
gs
aas
test
sub
(bad)
inc
int
push
mov
inc
addr16
mov
pop
pop
mov
xchg
add
lods
adc
les
mov
test
pop
les
cli
test
cli
and
(bad)
pop
pop
push
add
gs
adc
in
inc
imul
add
mov
daa
cmc
push
inc
inc
dec
and
inc
ja
xor
add
add
dec
pop
in
or
aad
jg
dec
mov
cmp
jbe
cmp
repz
je
movzx
push
push
push
test
xchg
pop
push
shl
pop
push
add
repz
jne
(bad)
inc
imul
add
ds
mov
add
or
push
mov
(bad)
(bad)
out
and
dec
sub
sti
je
loopne
out
sub
pop
shl
xlat
fcomp
mov
ret
sub
(bad)
xchg
dec
(bad)
jmp
add
inc
adc
cdq
test
mov
and
add
xchg
jnp
dec
imul
pop
ret
add
(bad)
xchg
sbb
nop
or
test
add
cld
cs
inc
mov
xchg
ds
push
lea
push
mov
adc
inc
inc
jnp
jmp
dec
mov
in
inc
cmp
jl
cmp
jbe
adc
or
add
clc
ret
mov
inc
sti
cmp
mov
lahf
inc
mov
movs
mov
pop
(bad)
mov
xchg
sbb
ja
mov
xchg
sub
cmp
push
push
push
sub
push
mov
push
push
(bad)
imul
inc
popa
add
imul
test
ins
in
hlt
add
stc
mov
sub
retf
mov
inc
and
ja
out
adc
push
mul
jne
mov
sub
lahf
dec
cmp
hlt
add
and
les
cli
daa
loopne
mov
jmp
inc
push
xchg
mov
dec
(bad)
mov
cmp
aas
mov
or
movs
adc
ret
mov
inc
mov
xor
add
push
repz
adc
sbb
addr16
add
arpl
inc
mov
dec
sti
cmp
aam
or
lods
xor
pop
and
sti
lock
cmp
jne
mov
sub
push
mov
jmp
sub
adc
das
jl
in
and
dec
mov
cmp
in
mov
pop
jae
mov
dec
out
mov
shr
aad
cmp
push
fwait
lods
nop
jae
movs
dec
mov
push
ret
mov
mov
call
not
jb
push
stos
movs
xlat
lock
mov
mov
add
sub
jb
sub
je
cmps
ins
rcl
(bad)
jae
cmp
sub
out
xchg
mov
mov
lods
pop
or
(bad)
jae
inc
dec
jne
add
push
leave
jne
lock
cmc
sar
int3
xchg
mov
mov
ret
mov
lahf
sub
xor
div
dec
ins
xor
push
pop
mov
push
mov
jmp
jbe
add
mov
sub
jmp
mov
dec
jne
push
fs
iret
sbb
mov
pop
fadd
sub
inc
mov
je
sahf
or
add
pop
dec
scas
in
jmp
mov
scas
jp
add
add
stc
or
push
mov
sub
xor
push
mov
loop
pop
test
repnz
inc
mov
pop
(bad)
xor
outs
add
add
mov
push
call
neg
sub
xor
fadd
or
xor
xor
scas
stos
or
or
push
add
sbb
(bad)
mov
daa
(bad)
mov
test
(bad)
fild
fistp
fadd
faddp
or
add
sub
add
shr
or
push
fsubr
add
cmp
cmp
push
push
cmp
rcr
(bad)
jp
aaa
clc
(bad)
inc
rcr
pop
std
or
js
add
add
nop
(bad)
xor
in
sar
mov
dec
inc
mov
loopne
dec
mov
lods
fadd
xor
add
in
xchg
xchg
sub
bound
fld
ror
push
inc
rep
and
or
or
xchg
pop
and
cmp
int3
out
push
and
inc
push
push
mov
mov
arpl
dec
cli
fsub
push
adc
retf
sbb
test
mov
arpl
sub
mov
(bad)
jo
data16
ins
imul
enter
push
jp
push
add
pop
(bad)
hlt
lea
and
adc
dec
mov
movs
or
cmp
clc
loope
jbe
loopne
lahf
cmps
push
dec
jl
push
daa
add
mov
sub
push
mov
ret
xchg
clc
adc
js
dec
mov
mov
mov
and
inc
mov
or
mov
(bad)
pop
add
mov
call
and
mov
mov
add
bound
loopne
cmp
jmp
cmp
mov
lahf
ret
rcl
mov
mov
mov
add
fstp
lock
setne
jmp
ss
cmp
out
popa
jbe
inc
dec
pop
xchg
int3
pop
addr16
cs
and
sbb
dec
ret
xor
dec
popf
sar
addr16
rol
jnp
sub
jo
jmp
adc
jmp
and
loopne
mov
mov
cmps
test
jg
or
jg
test
sbb
add
mov
and
pop
test
inc
ja
xchg
push
push
jo
or
sub
clc
mov
mov
add
dec
xor
pusha
scas
fs
ret
jae
inc
mov
dec
pop
sbb
sub
sbb
stos
jbe
jo
out
jno
xchg
pusha
mov
adc
repnz
enter
pop
stos
addr16
sub
xchg
mov
cmp
iret
mov
pop
ins
and
aas
arpl
into
test
push
out
mov
adc
bound
loope
mul
xor
push
(bad)
jle
enter
jne
push
sahf
out
rcl
xor
or
clc
and
inc
cld
or
scas
call
inc
rcr
sub
retf
imul
test
dec
loope
inc
cmp
jae
lock
inc
jmp
lea
icebp
mov
push
cmp
push
fiadd
fs
inc
sub
push
adc
mov
xchg
cmovo
fldcw
or
mov
add
jecxz
jl
ret
mov
clc
not
and
mov
aad
mov
mov
jne
es
out
push
jge
in
cmp
inc
lock
sar
mov
je
pop
iret
mov
jae
pop
idiv
add
sbb
mov
(bad)
sbb
and
dec
cmps
pop
call
mov
je
mov
push
call
jl
les
mov
add
add
dec
push
ds
je
add
pop
pop
push
xor
jne
dec
xchg
jg
out
or
sar
add
or
dec
ret
xchg
stos
and
cmp
cmps
adc
movs
fcom
inc
cmp
pop
pop
retf
dec
cmp
dec
push
dec
in
test
push
test
sysexit
aam
xchg
fdivr
adc
lea
cmp
loop
add
jne
cmp
add
nop
pop
push
call
pop
and
mov
aad
inc
imul
sub
imul
hlt
clc
pop
ins
sub
cld
ret
push
pop
cld
mul
call
cmps
inc
call
call
mov
inc
mov
or
xor
(bad)
shl
adc
sub
ret
nop
enter
xor
mov
(bad)
adc
enter
das
nop
lock
lea
daa
les
jno
mov
xchg
dec
not
mov
dec
retf
stos
and
shl
pop
ret
or
retf
pop
popa
pop
xchg
dec
sbb
retf
ss
cld
pop
cli
mov
fldl2t
lea
lahf
inc
lock
movs
adc
adc
cmc
pop
aas
cdq
iret
stc
rol
push
ds
xlat
mov
mov
xlat
xor
repz
mov
mov
sbb
xchg
and
mov
cmp
cli
jmp
je
dec
mov
mov
sbb
or
mov
xchg
xchg
cmp
jmp
les
pop
popa
mov
shl
sbb
mov
movs
inc
inc
outs
jo
pop
mov
inc
inc
dec
je
mul
adc
fistp
sub
jbe
sbb
cld
popa
lds
mov
mov
push
add
js
pop
jl
mov
jne
jo
fadd
imul
addr16
xrelease
cwde
pop
and
pop
fisttp
addr16
adc
pushf
aam
inc
jecxz
or
mov
adc
xchg
popf
add
ja
mov
stos
xlat
xor
fldl2e
clc
lods
pop
jbe
mov
mov
ror
sar
sahf
ficomp
jmp
fwait
xchg
push
and
and
add
mov
js
iret
mov
add
mov
mov
call
pop
add
or
adc
xlat
xchg
push
sub
sub
mov
es
or
add
jge
adc
pop
inc
cmp
or
inc
or
and
repz
adc
mov
(bad)
pop
inc
jmp
mov
jle
lahf
dec
(bad)
jge
fsubr
jne
call
push
xchg
(bad)
jmp
pop
mov
imul
in
mov
fcom
sbb
pop
lds
sbb
inc
push
mov
sti
mov
out
or
retf
shr
xchg
pop
adc
mov
mov
rep
sbb
cmp
pop
push
test
push
movs
lahf
lods
pop
pop
mov
adc
mov
(bad)
xor
cmp
cmp
mov
fistp
rol
and
imul
mov
pop
dec
repnz
cmp
push
mov
lock
aaa
je
ret
je
xchg
ret
and
mov
shl
xor
cmp
pop
xlat
lock
jne
lea
mov
call
mov
sahf
push
ds
jmp
push
xlat
pop
mov
pop
jg
mov
sar
das
pop
sbb
xchg
outs
daa
pop
push
push
jmp
(bad)
jnp
sar
xor
cmp
xchg
outs
stos
sub
je
xchg
dec
jae
and
into
or
dec
sti
xor
jmp
push
pop
outs
adc
add
sub
lock
or
dec
cmp
jne
js
ret
sbb
sbb
cmp
jbe
mov
aad
or
jmp
xor
inc
cld
xchg
and
jmp
mov
stos
and
add
jne
movs
push
mov
stos
cld
inc
js
mov
add
call
fdiv
into
dec
dec
fmul
scas
jmp
xor
push
dec
mov
popf
out
and
ds
leave
je
loopne
jns
out
fbstp
add
mov
outs
mov
dec
inc
je
mov
fsubp
fwait
outs
or
je
mov
inc
je
mov
dec
je
dec
cmc
xchg
sar
add
adc
cmp
jbe
inc
sub
sub
ss
xchg
adc
icebp
add
inc
fsub
in
(bad)
packssdw
xchg
mov
inc
iret
pusha
fwait
jmp
dec
stos
add
clc
xchg
ret
xor
outs
les
lods
cs
ds
mov
and
and
dec
xor
push
push
jbe
ret
inc
mov
jns
lahf
mov
mov
add
jg
mov
test
test
add
stos
jg
(bad)
leave
add
xchg
movs
xchg
mov
xor
ret
pop
add
jnp
inc
jge
sbb
(bad)
clc
dec
cld
lea
or
push
in
jmp
dec
fild
cmp
jl
jmp
add
push
pop
add
cmps
aad
cmp
add
push
lea
loopne
dec
push
pusha
xchg
daa
push
lea
push
mov
inc
add
add
mov
mov
les
retf
xor
imul
cmp
cli
inc
lods
cmps
mov
cmp
jecxz
push
pop
ja
push
outs
add
or
sbb
leave
and
(bad)
pop
dec
lock
or
jmp
adc
fwait
lea
lods
cmp
stos
dec
jne
fiadd
sub
in
push
lock
stos
ror
pop
cld
test
jmp
add
aam
cmps
push
mov
inc
shl
cmp
add
es
adc
popf
and
cs
stos
mov
scas
shl
jne
or
dec
in
jge
sub
push
sbb
movs
repz
and
cmp
fsub
xor
or
add
add
ja
add
and
mov
dec
pop
loopne
add
fisttp
movs
imul
or
fmul
es
push
bound
lahf
outs
jnp
movs
and
mov
leave
repz
inc
and
lock
dec
pushf
add
test
ds
add
movs
test
dec
push
enter
in
(bad)
in
cmp
mov
mov
in
xchg
mov
jmp
jmp
loopne
adc
lock
rol
pop
sbb
cmp
in
and
add
sub
sub
or
lods
push
xor
pushf
iret
mov
add
or
or
and
jnp
cmp
add
cwde
xchg
(bad)
mov
cmp
ds
in
aas
loopne
push
jecxz
sbb
dec
inc
push
lsl
cmp
movaps
inc
loopne
cmp
mov
push
sub
lods
nop
xchg
xchg
or
inc
inc
test
xor
jge
ss
mov
or
jne
test
and
cmp
adc
inc
mov
pop
movs
sub
dec
sahf
inc
mov
outs
cdq
dec
xchg
retf
movs
sub
in
pusha
leave
inc
xor
test
add
or
imul
mov
jge
mov
neg
jmp
or
je
mov
stos
xchg
push
mov
xchg
mov
fdivr
and
dec
cmp
adc
sub
leave
jg
dec
mov
(bad)
mov
(bad)
stos
cmp
jne
pop
pop
pop
aam
mov
mov
sti
mov
mov
cs
mov
repnz
fs
mov
pusha
js
jge
dec
popa
mov
test
fisttp
cmps
xchg
daa
dec
jge
add
jmp
add
pusha
jle
mov
jge
clc
(bad)
adc
je
sbb
pop
(bad)
cmps
mov
stos
add
repnz
aad
rol
fisubr
jb
add
mov
ja
movsx
cmp
popf
in
pop
mov
sbb
call
sar
cmp
in
jg
lods
rcl
mov
push
mov
dec
dec
inc
dec
inc
dec
lods
or
ret
imul
(bad)
cmps
adc
dec
aam
ins
ud0
dec
or
sbb
sbb
dec
stos
xor
gs
xor
std
jnp
rep
jmp
add
clc
movlps
test
clc
dec
push
mov
shr
mov
cli
mov
(bad)
jnp
sahf
dec
sbb
sub
loopne
mov
mov
mov
mov
test
pop
inc
mov
mov
cmp
in
fwait
mov
or
repz
inc
test
dec
je
dec
jne
sbb
in
stos
lahf
mov
mov
jmp
jmp
neg
jecxz
js
je
inc
jne
pop
sub
ret
xchg
fdivr
cmp
repnz
or
repnz
add
cmp
push
lea
add
push
inc
je
push
push
cmp
(bad)
lock
adc
sbb
lods
pop
or
sbb
cs
pop
pop
inc
loop
ret
push
mov
test
fwait
je
repnz
inc
add
and
fcomi
jge
and
adc
and
sub
inc
sub
fdivr
jbe
sub
sbb
into
cmp
sub
sub
jns
fs
xor
sub
xor
out
mov
call
(bad)
add
jge
add
cli
mov
sbb
adc
adc
out
jb
lods
fcmovnbe
mov
adc
mov
add
mov
enter
scas
lods
fist
mov
sbb
cmps
nop
mov
adc
scas
or
fild
test
adc
adc
adc
mov
ss
jge
jae
push
adc
mov
add
scas
add
out
xor
scas
fst
cdq
sub
and
adc
test
xchg
adc
sbb
xor
inc
inc
push
loopne
cs
xor
je
imul
adc
cdq
add
cmp
aas
loope
loope
fldenv
rcr
scas
ins
sar
fstsw
fwait
mov
test
je
fidiv
loop
pop
fbstp
lea
mov
inc
sub
nop
iret
call
add
in
fdiv
sub
jp
clc
in
xor
stos
mov
add
jns
call
std
push
or
cmp
jb
mov
mov
push
and
pop
aaa
cmp
jmp
mov
push
add
icebp
not
cmp
jmp
clc
push
add
inc
out
pop
or
call
dec
loopne
fadd
sub
sub
mov
or
ss
or
jl
add
pop
mov
push
inc
sub
mov
loopne
jae
dec
add
fbld
in
ins
or
mov
call
out
sar
fwait
pushf
sbb
xor
sub
mov
and
jne
dec
sub
cmp
enter
and
pop
lock
push
jmp
enter
cmp
pop
xor
(bad)
div
pop
jmp
loopne
rcl
sbb
inc
add
jle
jbe
push
push
mov
pop
inc
and
lock
nop
jl
fnstcw
cmps
mov
mov
cmp
lods
or
icebp
fisttp
sbb
pusha
jne
inc
fnstsw
cmp
je
and
fistp
sub
pop
add
jg
jne
mov
sahf
xchg
push
mov
add
push
mov
add
loopne
adc
aas
jmp
fstp
fwait
ret
add
test
imul
adc
pop
ins
and
push
add
adc
int3
sahf
mov
test
or
fimul
sbb
jmp
aaa
mov
div
lahf
inc
imul
imul
add
add
cli
hlt
nop
jb
aaa
add
add
push
nop
arpl
pop
inc
sub
mov
mov
mov
add
iret
mov
add
scas
add
or
jmp
push
xor
add
shl
loope
and
mov
scas
pop
cli
gs
imul
fadd
aad
inc
push
imul
add
adc
dec
in
add
add
lock
mov
cld
imul
cdq
add
adc
idiv
(bad)
inc
mov
xor
mov
or
cmp
test
fstp
fwait
mov
push
in
out
push
(bad)
xlat
dec
sub
xor
loop
pop
xor
fucom
inc
test
xchg
scas
jo
not
div
fist
push
adc
adc
pop
scas
clc
push
or
add
adc
push
sbb
dec
mov
cmp
inc
stc
inc
jge
push
inc
hlt
mov
rol
sub
imul
or
enter
call
ret
mov
add
xor
fstp
fwait
inc
push
pop
sbb
push
dec
fucomip
data16
iret
scas
ss
js
mov
push
mov
push
call
hlt
inc
sti
inc
sbb
adc
aas
adc
or
jnp
pusha
dec
(bad)
inc
adc
cmp
sbb
add
(bad)
and
call
cs
cmps
push
pop
enter
pop
sar
add
and
xchg
sbb
test
push
mov
ds
adc
in
out
pusha
inc
movs
add
idiv
add
dec
adc
xor
in
call
add
add
ja
call
js
or
jb
sti
ins
fld
out
(bad)
(bad)
cmp
ja
adc
jle
sti
out
mov
xchg
add
inc
dec
jne
sub
sahf
cmp
aas
cdq
idiv
imul
jle
and
add
sub
ds
ds
add
pusha
ret
or
iret
push
pop
push
inc
std
std
lds
shl
mov
(bad)
ins
sbb
pop
imul
dec
and
and
adc
clc
inc
dec
in
test
jg
mov
rcl
clc
hlt
or
and
stos
loopne
pop
mov
das
and
adc
dec
data16
stc
mov
addr16
sti
add
jl
add
add
push
push
repnz
mov
inc
or
dec
lock
imul
fcom
jmp
add
add
int
int3
adc
inc
push
xchg
adc
lods
mov
js
mov
dec
xor
pusha
loop
cmp
outs
fisubr
jb
adc
sub
fild
pop
(bad)
sbb
clc
scas
hlt
in
ds
adc
mov
daa
or
sbb
add
std
cwde
cmp
jge
popa
stos
add
xchg
test
addr16
xchg
inc
shr
popa
and
mov
adc
push
or
rcr
cmp
adc
pop
adc
push
sbb
nop
pop
sbb
pop
rol
mov
loopne
push
(bad)
in
push
xchg
or
or
fstp
cdq
dec
les
fcom
sbb
mov
push
xchg
and
enter
pop
cmp
add
cdq
cld
mov
sbb
ret
call
xchg
adc
pop
hlt
and
cwde
xor
imul
div
mov
xor
xchg
imul
adc
sub
(bad)
enter
pusha
xor
loopne
mov
xor
push
or
rcr
and
and
test
mov
and
adc
mov
and
sar
dec
sti
je
sbb
inc
popa
scas
cmp
out
and
sub
jo
add
push
lea
or
xchg
sbb
fcomip
enter
mov
jb
jecxz
mov
movs
xor
push
jge
lock
ds
call
nop
xor
add
adc
fisub
(bad)
int3
fldenv
cmp
cwde
adc
lock
out
repnz
mov
add
xchg
adc
test
sahf
and
pop
mov
push
mov
mov
push
pop
dec
imul
je
or
mov
sbb
inc
inc
in
mov
sbb
sti
std
xchg
ins
pop
cmp
sub
outs
xchg
sbb
loop
dec
jne
push
add
clc
ret
or
push
stos
dec
adc
dec
cmp
outs
mov
ret
xor
mov
int
mov
test
in
in
jmp
cwde
jl
addr16
iret
in
ret
sbb
dec
jg
fabs
leave
push
int
int
or
inc
mov
pushf
jecxz
sbb
jne
inc
cmp
jne
push
or
bnd
jge
lods
in
int
jns
add
rcr
repnz
add
add
ror
fadd
or
xchg
push
jnp
aad
push
push
pop
mov
(bad)
add
sub
inc
xor
adc
jecxz
dec
lds
pusha
xchg
sbb
fsubr
add
pop
jmp
fdiv
adc
iret
nop
jns
mov
mov
mov
mov
pop
cmp
jne
mov
xor
xchg
fisub
push
inc
adc
jo
retf
into
adc
mov
cmp
or
or
add
add
pop
cmp
or
outs
or
or
cmp
adc
scas
push
stc
sar
iret
shr
pop
nop
shl
sahf
out
xchg
mov
call
or
and
xor
popf
sub
test
inc
mov
mov
popf
dec
push
lea
cmp
mov
nop
out
adc
push
pop
or
sbb
and
jmp
sbb
movs
inc
mov
aam
rcr
leave
mov
jmp
mov
add
jmp
jo
mov
push
daa
mov
mov
pusha
jbe
xchg
dec
mov
add
dec
and
mov
es
mov
jge
and
add
pop
shl
cwde
xor
stos
cmps
or
mov
mov
sub
mov
add
adc
and
add
je
sbb
pop
sub
je
pop
je
jmp
cmp
cmp
js
dec
mov
pop
cmp
in
mov
movs
repnz
rol
jmp
cmp
xor
inc
test
xor
xchg
test
sub
stos
mov
ret
sbb
imul
push
mov
jmp
or
inc
fwait
sbb
or
or
jle
sub
sbb
repz
inc
mov
adc
popa
out
(bad)
sbb
push
add
add
mov
in
add
in
popa
dec
loopne
test
add
(bad)
call
pop
cmp
add
daa
mov
jns
add
dec
push
add
out
xor
retf
cwde
inc
jmp
and
nop
add
outs
cmc
xchg
pop
and
add
shl
and
leave
sti
rol
sbb
adc
sub
adc
and
or
jge
cwde
cs
nop
ja
jo
cmp
outs
sbb
ja
(bad)
or
inc
xchg
jmp
sbb
push
(bad)
add
xor
add
xchg
sbb
repnz
sub
movs
xchg
push
jmp
adc
pop
mov
sbb
clc
inc
mov
cmp
(bad)
pop
jo
fdivr
or
das
push
dec
jbe
into
ficomp
add
in
push
ret
clc
jae
jl
ins
mov
fimul
sbb
ret
jne
lea
mov
xchg
adc
mov
popa
add
mov
icebp
and
cwde
cmp
mov
xchg
mov
daa
pop
dec
dec
dec
mov
pop
xchg
add
mov
clc
data16
movs
pop
sti
clc
loop
sub
(bad)
ficomp
adc
arpl
(bad)
dec
das
dec
sbb
dec
ret
mov
add
nop
push
pop
inc
jmp
add
sar
add
sub
xchg
ss
pop
jmp
int
sbb
cmp
jle
ss
adc
ret
add
and
inc
test
not
xor
add
inc
adc
call
sbb
xchg
or
scas
and
push
in
sar
hlt
adc
inc
add
mov
mov
xchg
mov
adc
inc
xor
dec
(bad)
mov
je
xchg
cmp
fwait
pop
jl
pop
jmp
push
(bad)
cmp
jne
inc
cmp
dec
add
pop
mov
retf
sub
and
sub
je
dec
je
sub
jnp
mov
push
jmp
mov
jmp
push
push
push
scas
xchg
ret
outs
jbe
push
inc
mov
jle
fadd
mov
js
mov
call
in
xchg
adc
and
xor
jl
pop
pop
sub
xchg
jge
or
cmp
jl
loop
into
mov
mov
sub
cvtps2pd
out
add
push
(bad)
jmp
adc
test
jne
sbb
mov
mov
cmp
arpl
sub
jmp
xor
sub
add
inc
add
add
jle
into
mov
cli
adc
pop
lods
push
outs
dec
cld
gs
adc
xchg
psubusb
fsub
pop
sbb
pop
xor
ja
sub
and
inc
out
adc
popa
sahf
mov
dec
cld
or
enter
scas
ror
push
push
and
or
pop
stos
addr16
loope
adc
push
sbb
scas
mov
dec
cmc
mov
(bad)
fisttp
jbe
enter
push
mov
sar
out
or
inc
mov
jmp
hlt
lods
(bad)
jo
shl
xor
jl
enter
(bad)
nop
sbb
push
cmp
jmp
lock
imul
jb
std
pop
sbb
jmp
mov
and
je
adc
hlt
jl
jb
mov
mov
hlt
gs
call
stos
bound
sub
push
cld
mov
push
jmp
cmp
ja
fist
dec
movs
mov
retf
adc
pop
data16
mov
aaa
add
cmp
jle
and
fs
or
mov
add
inc
sub
adc
mov
daa
or
test
mov
xor
jb
movs
mov
(bad)
loop
xchg
mov
and
jmp
out
div
cmp
jbe
jne
sar
add
xlat
push
scas
pop
xchg
add
ficom
scas
in
fsubr
fidiv
imul
rol
pop
add
push
out
dec
pop
add
xor
add
push
push
gs
out
push
fs
or
jne
mov
repnz
shr
hlt
fild
dec
(bad)
jbe
jecxz
or
and
cmp
inc
and
scas
adc
pushf
sub
mov
shl
or
enter
pop
ss
pop
jge
cmp
inc
inc
add
fmul
enter
or
or
xchg
enter
add
pop
inc
or
inc
inc
push
(bad)
add
sbb
test
sbb
mov
and
mov
inc
(bad)
ja
jne
(bad)
cli
lods
xor
add
sbb
push
loopne
sub
inc
add
push
or
or
adc
loop
lea
inc
bound
push
cs
call
into
popa
push
or
or
xchg
cmp
jb
sub
pusha
addr16
push
pusha
sti
test
into
call
ds
xor
movs
adc
fsubrp
or
adc
call
jne
mov
js
cli
mov
fcomp
scas
fstp
stos
fstp
fwait
jmp
sbb
lea
adc
int
add
int
push
not
lock
inc
leave
push
jae
push
in
mov
add
sub
jb
or
pop
data16
xchg
dec
jno
sub
mov
or
lea
pop
imul
dec
sub
aad
dec
cmp
cdq
jl
cmp
mov
push
mov
push
add
loopne
add
call
test
adc
leave
movs
iret
test
lahf
xor
outs
mov
or
sbb
imul
dec
push
add
dec
loope
sub
ins
sub
mov
loope
daa
call
mov
jnp
loopne
inc
inc
dec
retf
clc
pop
mov
lods
fadd
shr
fs
mov
inc
jae
das
or
scas
ror
shl
frstor
pop
add
test
aaa
sbb
add
add
loope
dec
xor
call
call
or
aas
push
loope
stos
dec
cli
ds
and
dec
add
idiv
mov
jne
call
and
sti
dec
mov
inc
pop
or
pop
inc
cmp
pop
lock
shl
xor
scas
nop
bound
or
lea
lea
inc
sub
call
xchg
ror
add
imul
ins
mov
leave
push
jbe
je
mov
add
add
into
in
adc
jb
or
pop
or
push
call
(bad)
xor
fidivr
fst
mov
sbb
mov
pop
popa
enter
in
repz
dec
add
aas
mov
xchg
inc
or
xor
ins
(bad)
push
std
xor
mov
add
jnp
mov
rcl
sbb
repnz
inc
adc
add
push
cli
or
fadd
xor
fbstp
out
test
xchg
mov
(bad)
in
dec
or
in
jl
and
clc
test
add
rol
jmp
push
loopne
test
mov
sub
inc
je
sub
je
xor
sbb
adc
jle
(bad)
mov
aad
inc
not
shr
sbb
dec
cs
in
cmp
mov
lock
lock
add
jg
mov
mov
jne
(bad)
cld
and
add
jle
add
dec
add
call
add
jmp
mov
pop
xchg
je
xchg
xchg
jne
xor
jmp
in
inc
or
jle
cmp
adc
in
mov
inc
mov
daa
pop
rcr
sbb
pushf
mov
add
sub
xlat
hlt
xor
sub
fsub
sbb
outs
test
cmp
ror
or
fisubr
nop
add
aad
cmp
sbb
out
cmp
test
dec
cmp
and
inc
or
mov
xor
or
popf
gs
cmps
xchg
ds
mov
push
add
rol
repz
cdq
dec
into
gs
popf
cmp
pop
ffreep
cmp
scas
sub
sbb
and
sub
cmp
fcom
sbb
lea
jp
(bad)
js
push
or
cld
ins
or
clc
push
inc
cmp
stc
ja
lea
out
sub
pop
sbb
or
mov
cs
hlt
pop
mov
xor
mov
jg
mov
mov
inc
jmp
sahf
stc
push
lea
js
scas
push
les
push
das
test
addr16
cs
adc
test
fsub
mov
test
mov
adc
rol
sbb
sub
movs
xchg
aam
sub
jnp
dec
mov
xchg
mov
mov
inc
popa
and
pusha
xor
add
jmp
mov
jl
push
cmp
fadd
cmp
shl
push
and
cmps
leave
clc
xor
ret
push
fmul
pushf
xchg
jl
(bad)
addr16
mov
call
mov
rcl
and
inc
sub
or
or
or
mov
cmp
rcl
sti
movs
or
sub
sub
(bad)
ja
and
and
ins
push
mov
add
adc
and
and
or
ins
inc
or
cmc
rcr
imul
inc
ret
cwde
sbb
or
and
inc
or
(bad)
mov
loopne
(bad)
test
outs
rol
cmp
sbb
jno
adc
jl
nop
fdiv
lds
test
push
(bad)
mov
bound
fldcw
sbb
pop
xor
sbb
scas
add
rol
loop
scas
xadd
dec
ins
push
adc
jmp
sub
adc
push
cwde
(bad)
lock
test
sbb
leave
push
out
sub
(bad)
or
test
inc
dec
ficom
mov
movs
pop
les
loop
add
(bad)
sbb
and
xchg
adc
test
mov
dec
push
in
or
ins
jne
ins
jge
clc
scas
in
push
loopne
ds
mov
xor
xchg
in
loope
frstor
das
sub
loopne
sub
es
push
lahf
mov
cmp
add
ja
(bad)
rol
xor
mov
add
leave
xchg
and
pop
push
in
stc
xchg
push
cmp
je
jmp
xor
inc
iret
in
in
sub
jmp
and
(bad)
jmp
mov
ret
mov
add
push
pop
or
xor
ror
or
push
push
mov
fdiv
or
nop
rcr
mov
sbb
in
mov
retf
out
mov
pop
cld
cmp
ja
rcr
retf
test
cmp
inc
or
shr
adc
test
out
dec
add
cmp
dec
pusha
cmp
adc
ja
iret
and
jae
or
rcr
push
push
enter
shr
aam
sbb
lods
mov
outs
stc
push
cmp
sub
jmp
sub
dec
mov
mov
pop
inc
xchg
add
xchg
sbb
jmp
shr
nop
adc
dec
test
mov
xchg
dec
jmp
xchg
out
cld
std
mov
add
sub
xchg
sbb
and
rol
jae
cmp
fisttp
neg
xor
dec
(bad)
hlt
add
mov
repnz
sahf
pushf
xchg
push
adc
inc
xchg
adc
push
jp
sbb
or
call
les
dec
rcl
pop
scas
mov
jmp
jmp
sbb
xchg
add
cwde
mov
mov
imul
out
pop
test
mov
push
das
clc
in
inc
cwde
fsubr
in
idiv
test
add
out
mov
or
mov
test
int
fwait
pushf
mov
pop
inc
cwde
cwde
adc
into
ret
inc
aaa
faddp
add
push
stc
or
and
adc
test
sbb
push
or
cmp
or
outs
push
mov
int3
lock
ror
mov
cmp
add
outs
push
popa
mov
jmp
push
idiv
push
adc
adc
add
push
push
pop
int3
mov
addr16
pcmpeqw
cmp
cmp
ret
fucomip
clc
dec
inc
dec
mov
and
add
push
dec
push
into
fnsave
xchg
jp
mov
cmp
add
add
mov
jmp
jmp
out
pop
dec
xor
xor
xchg
mov
inc
mov
or
sub
je
sub
jno
push
cmp
adc
shl
pusha
mov
adc
add
dec
or
test
scas
cmps
adc
mov
and
xchg
add
sub
and
jns
dec
or
inc
inc
loope
or
mov
fiadd
xchg
add
cmp
lea
sbb
je
lds
neg
test
xor
xor
cmp
daa
jmp
dec
ror
ja
push
(bad)
lock
adc
add
jecxz
dec
inc
inc
pop
jg
mov
scas
das
adc
int
adc
jl
mov
and
pop
adc
add
ins
inc
inc
inc
jge
shr
hlt
retf
cmp
mov
and
push
sahf
cwde
and
jo
cmc
lock
jge
lods
fstp
sbb
mov
div
shr
(bad)
stc
xor
lods
cmp
dec
arpl
push
test
cs
cmc
or
push
pusha
xchg
dec
jg
mov
loop
xchg
or
or
pop
popa
enter
mov
mov
es
mov
mov
jns
fidiv
ret
sub
call
mov
pop
out
pop
and
ret
mov
xor
adc
ror
push
pop
xchg
jae
push
mov
enter
mov
ja
dec
push
add
push
aas
or
and
sbb
xor
or
ja
(bad)
ds
sub
xlat
gs
pop
sbb
xchg
cwde
cdq
cmp
nop
cmps
jae
cmp
adc
pop
fld
mov
rol
pop
or
test
pop
loopne
mov
in
dec
dec
add
std
sti
sub
inc
mov
out
inc
ja
dec
adc
test
jge
jl
js
jge
adc
jp
cmp
adc
aad
ins
sub
or
loop
mov
scas
push
imul
adc
sub
aaa
cwde
mov
inc
add
add
ret
popa
ret
sub
sub
cld
sub
cmp
jbe
stos
sbb
js
ja
mov
inc
and
add
inc
ret
mov
ins
daa
adc
hlt
shl
loope
add
add
into
stos
or
add
and
inc
fiadd
inc
(bad)
jne
xchg
jl
sub
hlt
mov
loopne
imul
xor
cld
push
and
pop
sbb
repnz
div
test
jno
addr16
in
fisttp
fwait
inc
shl
push
fwait
pop
(bad)
call
xor
es
push
mov
sub
jb
inc
mov
mov
outs
xchg
mov
dec
jne
fnstcw
or
inc
mov
enter
pop
ja
or
scas
pop
enter
ins
je
cmp
out
push
or
inc
add
mov
jl
dec
data16
push
lock
enter
ds
xchg
outs
mov
or
xor
adc
not
xlat
jge
jne
in
icebp
jb
shr
or
sbb
dec
sub
mov
enter
lahf
push
add
mov
mov
dec
repnz
popa
mov
scas
xchg
sahf
mov
inc
inc
cmp
mov
cwde
push
jecxz
xchg
jbe
(bad)
scas
movs
ins
nop
imul
jb
cs
ror
aad
or
jmp
ss
dec
rcr
shl
pop
mov
ret
add
clc
xchg
push
push
out
and
stc
push
clc
dec
repnz
cmp
inc
or
xor
in
movs
add
(bad)
imul
sub
call
pop
outs
push
lock
pop
sub
inc
sub
or
call
sbb
test
sub
(bad)
shl
push
xor
daa
fild
cs
fmul
sbb
push
imul
or
mov
sbb
fsub
fiadd
stc
fdivr
push
fst
jle
sub
mov
xchg
int3
inc
fsubr
int3
push
cmp
mov
sub
and
xor
fnsetpm(287
cld
dec
pop
fadd
and
fs
les
ret
add
hlt
mov
pop
clc
mov
fsubr
bound
push
mov
xchg
lds
cmp
cs
or
cld
sbb
lea
aad
cld
sar
icebp
dec
ins
das
fs
pop
mov
ins
add
and
add
pop
jo
lock
aaa
xchg
push
sahf
mov
addr16
pop
iret
cmps
push
call
int3
pop
adc
jae
out
lea
(bad)
push
sti
jecxz
push
push
pop
test
movs
jo
xchg
retf
call
lea
stc
stc
jmp
mov
repz
call
jp
mov
out
and
enter
jmp
add
cld
(bad)
cli
(bad)
aam
inc
add
gs
fisttp
add
or
sub
imul
adc
lahf
fisubr
int3
push
shl
add
dec
push
or
iret
cmp
inc
xchg
push
dec
sub
dec
nop
xchg
inc
push
add
xchg
inc
leave
cld
(bad)
cld
jmp
stc
inc
push
nop
inc
jo
inc
add
sbb
(bad)
mov
and
outs
pop
add
in
mov
xor
or
mov
or
mov
inc
test
fmul
ret
pop
mov
adc
adc
sub
adc
daa
mov
add
xchg
(bad)
icebp
mov
out
dec
mov
mov
jmp
mov
push
js
xchg
inc
cmp
outs
test
in
dec
inc
mov
inc
in
and
xchg
cmp
push
add
mov
or
daa
jp
pop
fcom
les
clc
arpl
sbb
mov
popa
add
and
xlat
in
sbb
sub
jb
pusha
add
gs
aaa
js
cld
or
mov
cmp
js
int
es
inc
jle
mov
lock
cdq
out
mov
ins
adc
cld
sbb
add
inc
ror
and
arpl
add
fstp
out
xor
int3
adc
inc
push
sub
mov
jmp
call
dec
outs
rol
pop
mov
mov
adc
scas
icebp
sub
push
fs
push
jo
cmps
call
xchg
cli
lar
cmp
or
dec
add
or
test
lea
inc
jb
gs
jo
inc
sub
mov
xchg
lock
inc
(bad)
test
dec
ret
xchg
call
jg
mov
test
inc
ss
or
mov
mov
mov
sbb
inc
cmp
jne
cli
sub
pop
mov
imul
adc
jbe
jge
inc
pusha
push
mov
es
clc
xor
and
out
xchg
clc
sbb
loop
mov
mov
in
xchg
add
jmp
push
loopne
push
hlt
sub
mov
mov
push
mov
inc
or
lods
fucomi
lods
mov
inc
mov
scas
sub
add
and
adc
push
mov
or
dec
add
sar
adc
inc
xrelease
or
lea
fld
mov
test
mov
xor
(bad)
(bad)
sbb
pop
test
xor
sub
mov
stos
inc
push
fs
mov
mov
adc
sbb
add
call
add
or
cmc
push
sbb
icebp
adc
movs
lds
and
std
jle
mov
jb
pop
xor
ins
fcom
mov
adc
cld
rcr
clc
mov
jnp
inc
lods
js
ja
je
push
cmc
mov
sub
addr16
repz
aaa
push
seta
mov
lea
sub
jmp
adc
dec
sbb
cmp
fstp
data16
add
aam
or
mov
xchg
adc
dec
dec
cmp
sete
inc
xor
xchg
xor
xchg
inc
loop
xchg
dec
cmp
outs
inc
pusha
test
shr
cmc
cmp
xor
cmp
ja
sbb
loopne
push
pop
mov
inc
or
lock
cdq
scas
add
cmp
cmp
cwde
cmp
dec
jmp
inc
loop
adc
les
push
les
sbb
shl
ja
dec
cdq
and
dec
out
sub
mov
enter
or
jmp
in
ins
push
xchg
xchg
(bad)
jp
xor
adc
movs
mov
add
adc
mov
mov
push
jo
popf
xlat
pop
inc
or
jnp
sahf
enter
fdivr
mov
aas
sub
jne
cmp
jne
xor
pusha
test
and
jle
bnd
aaa
push
add
push
fnstcw
and
pusha
stos
shl
clc
out
push
arpl
(bad)
jmp
inc
popf
jno
ret
lahf
pop
or
repz
add
add
add
dec
sbb
int
cld
inc
inc
push
hlt
sbb
repz
sbb
jns
dec
aam
adc
cmp
sar
mov
lods
lahf
cmps
sar
sbb
sbb
xor
mov
push
jl
cs
jns
nop
jl
add
ins
repz
repz
push
int3
pop
cwde
pop
mov
or
inc
pop
je
cmp
hlt
adc
fdiv
into
pop
mov
lea
and
push
push
sbb
sbb
cmp
(bad)
jmp
adc
push
pop
adc
int
or
inc
or
sbb
sbb
dec
cld
inc
jns
mov
push
les
hlt
mov
(bad)
cmp
inc
fsubr
push
int3
sbb
xor
popf
cmp
in
cld
adc
leave
test
add
pop
add
addr16
aam
mov
ror
int3
cs
mov
mov
xor
leave
xor
xor
sbb
mov
jns
mov
les
leave
cmp
xchg
mov
nop
jbe
push
xor
movs
pop
imul
nop
mov
sti
pop
pop
jo
sbb
xchg
fmul
js
loopne
mov
jg
jmp
pop
mov
sub
pop
xchg
jmp
add
add
jl
push
mov
mov
enter
jge
jae
sbb
or
xor
movs
sbb
ins
and
enter
mov
fadd
enter
les
enter
pop
enter
and
push
retf
jae
jl
inc
xor
adc
aas
mov
sub
lea
sti
cmp
or
mov
loopne
bnd
mov
cmp
sahf
xor
xchg
imul
and
scas
(bad)
pop
cmp
xchg
bound
sahf
data16
test
jo
pushf
pop
scas
rcl
xor
out
test
sbb
repz
ds
bound
cmp
repz
mov
sahf
cmps
stc
add
adc
xor
out
imul
lahf
out
sahf
mov
xlat
jmp
iret
repz
daa
cmp
repz
repz
mov
iret
(bad)
(bad)
jecxz
pop
and
sub
sahf
out
test
jl
out
in
(bad)
adc
iret
repz
xor
pop
gs
cmp
repz
test
int3
fidivr
iret
repz
(bad)
and
out
sahf
out
push
imul
lahf
mov
aad
stc
cmp
sar
sbb
cmp
repz
fwait
lods
out
cmp
mov
daa
sahf
out
sahf
sbb
cmp
sahf
out
test
xor
out
icebp
add
adc
iret
cmp
outs
adc
in
jns
out
call
sub
xor
out
imul
lahf
out
sahf
mov
xlat
jmp
iret
repz
xor
addr16
repz
popf
scas
shl
test
jns
sub
xchg
out
cdq
stos
mov
int
repz
iret
repz
dec
pop
jno
xchg
cmps
ds
repz
retf
fucomp
add
adc
jns
out
jg
mov
sahf
(bad)
fldpi
std
ucomiss
cmp
repz
inc
push
imul
lahf
mov
aad
imul
das
sbb
sahf
inc
push
gs
fwait
jns
out
lods
mov
cmp
repz
xor
sub
iret
popa
jae
xchg
test
cmp
fcomip
add
adc
daa
cmp
outs
out
sahf
out
xchg
movs
mov
dec
repz
fucomi
call
xor
xor
inc
pop
imul
cmp
repz
out
call
inc
sahf
out
sahf
push
addr16
popf
scas
jl
out
rcl
test
rcr
sub
repz
jne
cdq
stos
mov
cmp
repz
sahf
out
cmp
jno
out
sahf
out
cmps
mov
xor
out
add
adc
repz
ins
jg
mov
mov
fldpi
std
out
sahf
out
aaa
and
inc
push
sahf
out
sahf
imul
lahf
out
aad
stc
or
sbb
das
inc
push
gs
repz
mov
sahf
cmps
stc
cmp
pop
cmp
sub
dec
popa
jae
xchg
out
sahf
out
mov
repz
add
adc
cmp
repz
adc
in
call
cmp
jns
cmps
and
out
sahf
jge
mov
int
jns
sti
or
cmp
repz
push
addr16
iret
repz
popf
scas
rcl
neg
cmp
jns
out
arpl
cdq
stos
repz
out
iret
loope
add
iret
repz
adc
inc
push
addr16
repz
mov
iret
repz
loopne
add
push
out
sahf
out
cmp
sahf
out
sahf
adc
out
out
aas
out
push
and
sahf
out
sahf
inc
push
addr16
popf
jns
out
scas
rcl
div
cmp
repz
sub
cmp
arpl
cdq
stos
inc
out
cmp
repz
inc
inc
inc
push
iret
repz
and
inc
push
addr16
iret
repz
popf
scas
rcl
call
push
sub
jns
out
inc
pop
imul
jns
(bad)
mov
cmp
repz
or
repz
repz
addr16
cwde
out
repz
stos
mov
out
repz
cmp
sub
dec
pop
iret
repz
jo
xchg
cmps
mov
cmp
out
add
and
sahf
out
ss
pop
ins
jle
jns
out
mov
sar
cld
push
inc
and
inc
cmp
repz
push
cmp
repz
aam
clc
out
sahf
out
dec
sbb
inc
push
sahf
out
sahf
fs
call
shl
hlt
push
dec
sbb
cmp
repz
pusha
jb
repz
test
sahf
cmps
stc
cmp
add
cmp
out
dec
pop
outs
adc
mov
(bad)
iret
repz
(bad)
adc
xor
pop
cmp
repz
jl
mov
repz
(bad)
call
jns
cmps
push
xor
data16
out
sahf
js
pushf
scas
rcl
int
jns
test
sbb
cmp
repz
bound
repz
cwde
stos
mov
out
ds
push
sub
dec
jns
out
pop
jo
xchg
cmps
repz
out
retf
add
repz
adc
dec
pop
ins
cmp
repz
nop
mov
iret
repz
cld
push
push
and
jns
out
inc
push
push
sahf
mov
cmp
repz
or
cs
repz
repz
fs
call
shl
hlt
push
sahf
out
call
jns
out
jb
xchg
test
sar
int3
fdivp
add
iret
repz
cmp
outs
cmp
cmp
movs
mov
fidivr
iret
repz
(bad)
adc
out
sahf
out
pop
push
mov
mov
(bad)
call
jl
push
push
xor
repz
repz
pushf
scas
out
cmp
rcl
test
sahf
out
sahf
sbb
push
bound
out
xchg
xor
out
repnz
push
sub
repz
cmp
adc
retf
jns
cmps
stc
add
and
dec
out
sahf
out
ins
jle
mov
mov
fsubr
cld
push
pop
cmp
repz
xor
repz
repz
sahf
mov
cmps
stc
cmp
aam
clc
or
sahf
out
sahf
cs
push
fs
jns
out
call
int
hlt
push
pop
sbb
cmp
repz
dec
pusha
jb
xchg
test
iret
repz
int3
fdivp
add
out
adc
cmp
out
sahf
out
adc
sahf
enter
adc
cmp
repz
inc
pop
push
repz
repz
imul
pop
push
xor
push
data16
pushf
jns
out
scas
rcl
div
cmp
repz
sub
push
iret
repz
bound
stos
mov
into
loopne
add
push
jns
out
sub
dec
pop
jo
jns
out
xchg
cmps
mov
sahf
fsubr
add
and
cmp
repz
pop
ins
jle
repz
repz
out
call
inc
sahf
out
sahf
push
push
jl
out
ret
clc
or
cmp
rcr
inc
push
fs
repz
jbe
call
cmp
hlt
push
sbb
jns
out
cmp
pusha
jb
out
sahf
out
test
int3
fmulp
repz
lock
cmp
iret
repz
outs
adc
mov
(bad)
(bad)
out
sahf
out
data16
pop
sahf
out
sahf
push
mov
out
(bad)
call
repz
repz
data16
repz
mov
cmps
stc
cmp
or
sub
jns
out
push
bound
out
sahf
out
mov
repz
add
push
sub
dec
pop
cmp
repz
adc
retf
add
out
sahf
out
ss
pop
ins
sahf
out
sahf
jle
mov
int
jns
cld
push
imul
repz
repz
push
push
cmp
sahf
mov
aam
clc
sahf
out
or
inc
push
jns
out
fs
call
shl
hlt
push
ins
iret
repz
sbb
cmp
pusha
jb
iret
repz
xchg
test
int3
jns
iret
repz
add
es
sahf
out
dec
pop
outs
sbb
mov
(bad)
cmp
repz
adc
xor
repz
repz
push
mov
mov
(bad)
call
jns
jo
and
inc
push
xchg
pop
ret
dec
cmp
xchg
stos
movs
sti
jmp
and
mov
sub
je
cwde
xchg
and
in
scas
shl
leave
nop
cmp
hlt
inc
jb
mov
sbb
sub
and
xchg
or
cmp
sbb
xchg
push
leave
cwde
mov
sbb
sbb
xchg
adc
and
mov
xor
inc
pushf
cmp
ss
int
popa
nop
shr
inc
fdiv
push
ret
and
jbe
jbe
test
jo
jbe
stos
pop
mov
and
adc
xor
push
sbb
fs
fld
and
sbb
jb
inc
jb
test
mov
xchg
fdivr
and
cmp
pop
and
xchg
and
and
xchg
xchg
test
cmp
clc
xchg
or
and
and
xchg
sbb
xor
pop
sbb
xchg
sbb
test
lods
shl
sbb
aam
add
mov
dec
xchg
js
mov
dec
mov
lods
mov
enter
inc
repnz
or
jb
inc
jb
inc
pop
inc
jb
inc
jo
mov
inc
jb
loopne
jl
shl
adc
jl
in
sub
cmp
jl
dec
imul
mov
jl
cmp
dec
scas
xchg
int3
in
jge
jb
inc
and
dec
and
jb
pop
jo
and
jb
mov
and
inc
in
jle
and
xchg
cmp
xchg
and
js
mov
(bad)
fmul
nop
cmp
lock
sbb
xchg
sbb
inc
push
xchg
sbb
xchg
push
leave
mov
aam
cld
dec
xchg
xchg
adc
xor
push
icebp
dec
adc
cmp
retf
mov
jp
and
imul
cmps
xchg
xor
push
and
lods
enter
leave
call
in
mov
pop
mov
in
mov
in
add
inc
inc
pop
js
inc
jb
mov
enter
jns
inc
cld
and
push
cmp
jb
inc
ror
xchg
mov
cld
and
test
test
mov
(bad)
push
inc
cmp
mov
cmp
adc
xchg
and
(bad)
aam
and
xchg
in
add
push
leave
xchg
or
and
xchg
mov
mov
pop
jne
pusha
imul
and
jb
test
inc
jb
inc
rcr
call
xchg
clc
inc
or
inc
and
dec
and
jb
pop
jo
mov
mov
jbe
movs
inc
mov
mov
loopne
cld
inc
xor
adc
and
and
jb
dec
pop
jb
inc
jb
sbb
mov
and
in
cmp
adc
and
xchg
and
dec
xchg
and
xchg
pop
jo
fiadd
adc
xlat
xchg
xchg
and
mov
dec
mov
or
and
pop
jb
inc
jb
pushf
test
jb
inc
mov
shl
jb
loopne
cmp
sub
and
xchg
and
xchg
and
xchg
xchg
mov
cmp
and
loopne
adc
dec
leave
xchg
sbb
push
xchg
sbb
adc
pop
ror
pop
xor
inc
dec
ins
and
and
test
cmp
inc
repnz
mov
add
adc
inc
js
xor
adc
push
in
push
mov
jbe
jne
int3
outs
je
sbb
ror
xchg
sbb
xchg
add
in
xchg
or
push
(bad)
push
(bad)
daa
ins
inc
mov
push
test
pop
movs
cmp
mov
cmp
pushf
xlat
lods
and
dec
stos
xlat
dec
mov
imul
call
hlt
or
inc
ins
nop
retf
jl
in
mov
and
clc
inc
xor
and
dec
jl
inc
jb
pushf
mov
call
cmp
inc
jb
fs
js
scas
ficom
mov
sbb
in
inc
cld
xchg
or
mov
loope
sbb
sub
dec
xchg
or
and
fnstsw
and
push
pop
xchg
jo
add
mov
pop
jne
xor
jb
in
or
xor
and
xchg
dec
fs
arpl
test
cmp
(bad)
ss
in
shl
loopne
imul
inc
repnz
mov
dec
cmps
xchg
xchg
dec
je
push
leave
shl
mov
fcmovbe
push
aam
call
adc
inc
fsub
or
push
mov
cmp
test
inc
mov
push
test
dec
in
dec
mov
push
test
(bad)
loopne
rol
or
sub
mov
pop
in
push
dec
and
jbe
inc
dec
and
les
pusha
mov
inc
xor
sub
mov
xchg
fisub
sbb
and
xchg
and
sub
test
cmp
inc
cmp
fmul
cdq
movs
call
inc
xor
cdq
xchg
mov
imul
xchg
(bad)
cwde
and
lock
and
leave
push
xor
inc
and
fs
enter
xchg
inc
cmp
cmp
mov
mov
hlt
and
and
or
sub
mov
mov
and
fidivr
test
popf
lods
imul
cmp
lock
xor
and
nop
test
xchg
inc
jb
fmul
popf
cmp
rcl
sahf
leave
xchg
sbb
and
leave
xchg
sbb
aam
dec
xchg
xchg
add
sbb
dec
mov
dec
pop
test
xchg
inc
xor
and
hlt
push
lahf
out
push
add
and
xchg
test
push
and
xchg
and
and
xchg
pushf
enter
adc
add
inc
xor
cmp
push
mov
push
fistp
js
sbb
dec
mov
push
leave
loopne
mov
fcmovbe
inc
cmp
pop
inc
in
inc
jb
cwde
and
shl
xchg
mov
adc
xchg
and
xchg
clc
add
mov
adc
mov
inc
fwait
add
aam
(bad)
in
and
add
jb
inc
xor
xor
inc
jb
inc
mov
clc
xchg
and
pop
cmps
jo
xchg
and
jl
mov
cmp
and
clc
sti
adc
in
cwde
lods
mov
dec
mov
dec
in
cld
test
test
sub
xor
sbb
dec
mov
push
add
cmc
cmp
add
cmp
movs
pop
inc
test
push
jl
test
xchg
test
mov
ficom
fsub
sub
add
aam
sub
and
inc
fwait
stos
pop
jo
mov
test
(bad)
in
int3
stos
inc
leave
mov
cld
and
stos
sbb
xchg
or
and
stos
loop
dec
stos
pop
pusha
stos
mov
or
mov
fmul
mov
lock
add
stos
in
cdq
sbb
scas
ficom
lods
fwait
pop
nop
and
lods
mov
push
fsubr
shr
lods
and
xchg
sbb
cmp
pusha
sbb
xchg
sbb
test
(bad)
leave
xchg
sbb
aam
cld
mov
adc
in
dec
fs
mov
js
pushf
mov
dec
mov
in
in
jb
inc
repnz
and
dec
pusha
js
inc
jb
mov
mov
fadd
and
in
cld
sbb
dec
pusha
mov
mov
mov
inc
jb
mov
fwait
jmp
adc
xor
xchg
inc
jb
sub
and
sbb
mov
rol
stos
nop
fwait
hlt
imul
aad
mov
inc
and
and
dec
mov
add
mov
js
and
addr16
stos
in
pop
mov
scas
xchg
in
or
xchg
inc
pop
mov
mov
mov
mov
mov
scas
xchg
shr
add
leave
push
xor
xchg
mov
push
pop
js
mov
inc
mov
sub
cld
xchg
dec
and
stos
jmp
jb
ins
mov
stos
ss
jno
mov
pushf
inc
and
cmp
push
add
stos
movs
call
stos
in
ins
mov
mov
cwde
mov
scas
ficom
inc
(bad)
mov
fisttp
mov
sbb
mov
fimul
pop
mov
pop
inc
test
adc
stos
mov
mov
ins
sbb
push
mov
xchg
test
xchg
stos
cwde
lods
mov
test
ret
hlt
or
fild
inc
fs
mov
ret
nop
mov
push
pop
jp
inc
sar
or
mov
xor
(bad)
push
adc
push
fs
mov
mov
shl
dec
and
mov
xchg
inc
mov
in
je
in
sub
sbb
xchg
sbb
enter
leave
xchg
cld
adc
in
mov
ins
xchg
dec
mov
mov
inc
fsub
in
and
repnz
add
jb
cmp
and
fs
and
jb
nop
pushf
jb
inc
jb
mov
inc
aam
clc
xchg
and
or
sbb
inc
cmp
dec
pop
push
xor
fbstp
rol
mov
or
and
xchg
and
leave
and
lock
and
pop
mov
and
ins
adc
ret
inc
sbb
ror
mov
ret
and
fiadd
ret
and
push
leave
nop
cmp
les
fs
int3
add
sbb
(bad)
pushf
xchg
or
and
lods
in
xchg
inc
leave
mov
jmp
sbb
retf
retf
mov
fdivr
dec
fwait
sbb
dec
in
retf
sbb
push
jecxz
sbb
call
wbinvd
dec
repz
ins
jl
or
inc
cmp
mov
mov
inc
inc
mov
cmp
xor
inc
scas
add
add
pop
dec
js
dec
jne
mov
xchg
pop
imul
jno
mov
std
aaa
push
or
or
popa
jae
sub
jns
aas
aaa
in
daa
add
imul
jl
outs
ins
jl
ins
jp
daa
pop
dec
dec
(bad)
push
sbb
pop
or
imul
sub
sub
mov
call
jno
ins
outs
es
fs
fld
inc
pop
xchg
jnp
bound
imul
mul
pop
daa
pop
inc
push
int
out
push
jmp
cld
call
pop
(bad)
push
and
push
repz
repz
loop
pop
jecxz
call
push
(bad)
stc
xlat
out
repnz
in
dec
out
push
out
pop
in
icebp
lock
lock
std
pop
xchg
xchg
nop
sub
(bad)
jg
jbe
ins
and
imul
imul
call
jne
ins
push
popa
jno
ins
imul
jl
jno
outs
jg
(bad)
jnp
push
pusha
addr16
jl
sub
mov
ja
bound
fs
imul
jne
xor
ins
cmp
and
(bad)
mov
push
jnp
ins
outs
data16
mov
inc
scas
shl
jbe
sub
ror
sbb
fcom
add
adc
ja
ins
mov
ins
mov
mov
jl
push
imul
(bad)
sti
add
jne
outs
and
fdiv
mov
popa
ins
push
jle
stc
aaa
punpcklwd
push
jl
push
daa
or
pop
popa
outs
es
ins
push
int
repnz
das
jg
popa
jae
mov
das
sbb
push
xor
push
outs
and
outs
push
loopne
iret
ins
jp
inc
pop
inc
ins
jo
jo
jno
and
fisub
(bad)
ins
and
aam
imul
outs
dec
ins
jne
jbe
sub
outs
outs
jo
ins
out
sar
dec
push
push
arpl
and
jl
bound
jo
jbe
sub
jl
pop
and
pop
or
push
jge
mov
cmp
mov
ins
and
imul
adc
(bad)
mov
outs
and
jb
sub
xor
push
mov
and
or
push
xchg
fs
mov
outs
jo
ins
jb
mov
inc
es
jno
xchg
xor
aas
add
pop
pop
popa
cmp
and
mov
push
ds
dec
into
inc
cmp
in
ja
arpl
addr16
ja
and
sub
dec
leave
rcl
aaa
jg
pop
cli
push
jecxz
repnz
std
je
mov
(bad)
and
out
push
stc
out
dec
out
cmp
push
in
ja
push
in
loopne
jp
dec
push
lock
(bad)
fistp
das
ds
gs
imul
bound
pop
pusha
push
jno
jb
mov
pop
and
ds
fs
fs
pop
dec
outs
push
addr16
(bad)
push
jge
and
push
xor
pusha
push
int3
add
ja
sahf
pusha
jnp
mov
and
mov
jnp
add
out
es
xchg
cmp
outs
call
outs
sbb
ds
and
cmp
jmp
jo
js
xchg
jl
jne
popa
ja
sub
sti
mov
sub
cmp
cmp
je
mov
or
es
mov
or
jne
lahf
mov
fwait
out
ins
and
jo
push
shr
push
jo
add
bswap
mov
das
outs
xor
ja
ins
pop
das
pop
cmps
xchg
jecxz
pop
pop
jmp
or
nop
and
call
sbb
inc
(bad)
addr16
and
sub
scas
xchg
jne
outs
daa
shr
in
pop
daa
xor
ins
pop
push
push
jns
data16
jbe
pop
push
outs
fs
sub
jo
das
sub
or
outs
sbb
inc
pop
js
pop
push
push
and
outs
jmp
pop
js
das
inc
ins
lods
inc
es
push
addr16
scas
dec
repnz
jbe
inc
popa
xchg
dec
imul
push
cld
loopne
ja
inc
ins
push
ins
dec
gs
gs
cdq
push
push
xor
xor
mov
inc
jnp
jb
rcl
imul
leave
imul
jno
nop
inc
or
addr16
outs
popa
popf
mov
fwait
or
data16
adc
dec
mov
imul
scas
jne
fs
imul
imul
repnz
outs
popa
out
jne
jbe
inc
pop
enter
outs
popa
cmp
or
jnp
in
fistp
pop
ret
fbstp
imul
jp
ja
and
jnp
arpl
fimul
xchg
pusha
jge
imul
or
mov
ins
pop
adc
fbld
pop
(bad)
or
gs
outs
ja
call
ds
jg
and
xor
and
pop
add
mov
ja
inc
push
and
xor
xchg
adc
xor
ss
cmp
cmp
loopne
pop
ficomp
mov
cmp
sub
cmp
pop
and
outs
scas
push
sub
dec
pop
cdq
adc
dec
popw
dec
iret
enter
push
add
lock
dec
push
or
jle
jo
sbb
inc
mov
imul
jbe
js
out
jo
jg
cmp
outs
or
popa
dec
or
push
sbb
or
or
xlat
adc
pop
push
push
mov
pop
(bad)
mov
mov
data16
mov
mov
jno
jo
outs
jbe
in
push
addr16
aas
popa
mov
cs
ins
idiv
jbe
imul
daa
jg
out
fsubrp
iret
gs
outs
cs
lahf
pop
xlat
out
xlat
out
imul
push
inc
pop
das
pop
add
icebp
ret
or
push
out
push
jb
outs
dec
inc
mov
outs
or
jl
adc
stc
pop
scas
xlat
imul
mov
addr16
je
mov
mov
adc
and
xchg
imul
ins
je
jb
clc
add
outs
ins
jbe
add
fistp
and
mov
push
bound
(bad)
mov
js
je
ins
dec
mov
adc
mov
push
pusha
push
push
call
add
and
es
imul
and
xor
data16
mov
mov
push
pop
sbb
sub
outs
ins
jnp
sbb
pop
iret
xchg
(bad)
aas
fmul
outs
mov
push
imul
(bad)
das
arpl
imul
xchg
and
jno
jae
inc
cmp
or
sbb
and
jmp
cmp
push
ins
sbb
mov
sub
or
push
sub
and
sbb
sbb
and
imul
jle
je
cwde
add
pop
imul
pop
xchg
sbb
cmps
je
pop
enter
arpl
jle
cmps
sbb
pusha
jnp
nop
ds
outs
ins
pop
jae
inc
loope
inc
jle
fs
ja
fistp
push
and
ret
(bad)
jbe
ret
daa
lahf
(bad)
(bad)
cs
adc
dec
arpl
jae
ins
inc
cmp
jb
es
enter
outs
pop
mov
pop
pop
pop
adc
sahf
jge
jo
xor
cmps
ins
je
outs
addr16
(bad)
hlt
inc
movs
pop
pop
push
inc
sub
das
out
sub
mov
mov
mov
adc
jb
adc
fidiv
fs
adc
bound
push
mov
es
inc
outs
inc
sbb
jo
jo
inc
jo
dec
(bad)
cmp
(bad)
jmp
movs
xlat
mov
and
jmp
push
out
hlt
inc
loope
ror
push
out
std
pop
cmp
or
inc
jl
push
pusha
jl
inc
inc
jbe
(bad)
xchg
dec
pop
adc
fisub
rol
(bad)
jg
xchg
ja
lods
or
(bad)
ja
push
loope
fs
ins
je
pop
jbe
jae
test
das
jno
jbe
adc
dec
mov
imul
xor
(bad)
push
jo
stos
or
rcl
push
cmps
xchg
std
pop
(bad)
jno
aas
inc
jno
outs
jg
xor
sub
and
adc
pushf
and
jbe
inc
dec
aas
pop
pusha
sub
dec
mov
outs
outs
sub
push
push
addr16
cdq
aam
jbe
inc
es
in
mov
jo
jne
inc
inc
das
pop
or
sub
push
jl
xchg
and
inc
dec
dec
pop
xor
lea
ins
inc
add
jb
add
pop
inc
dec
inc
dec
push
and
sub
inc
and
xor
in
ss
dec
imul
jo
ja
add
scas
ins
add
addr16
mov
inc
data16
aaa
adc
dec
pop
pop
addr16
fs
aas
fistp
iret
pop
das
push
sub
(bad)
push
jo
ss
cmp
xor
xor
sub
jns
xchg
sbb
js
aaa
inc
pushw
sbb
or
jo
popa
fs
and
dec
ss
popa
jne
dec
push
jg
jbe
sub
pusha
xchg
jae
pop
popf
adc
inc
dec
fimul
aas
sub
loopne
cwde
fld
and
das
add
and
push
and
test
pop
add
js
outs
pusha
aaa
mov
add
jge
inc
dec
inc
(bad)
xor
inc
push
and
ja
sbb
mov
fs
idiv
xor
cmp
jmp
cmp
push
out
and
jl
ins
cdq
cmp
dec
or
pop
out
jle
ins
pop
sbb
js
jg
arpl
dec
mov
inc
pop
aaa
pop
inc
lods
mov
jmp
mov
(bad)
add
ins
pop
mov
(bad)
aas
imul
mov
outs
pop
push
bound
pusha
test
arpl
aas
addr16
jo
lock
push
jbe
jno
xchg
dec
mov
test
addr16
pop
add
and
adc
dec
rol
pop
ins
sub
call
ins
mov
ja
inc
xchg
xlat
jbe
push
fs
scas
ret
lea
addr16
cwde
jbe
aas
je
gs
push
aaa
stc
jnp
jo
and
jp
cdq
push
jnp
out
mov
mov
lahf
push
xor
rcl
xchg
je
outs
pusha
test
cli
pop
sti
inc
data16
or
(bad)
cmp
test
jo
xor
jl
push
jbe
in
add
xor
cmp
fwait
sub
ins
and
jg
push
pop
imul
loopne
lds
addr16
arpl
popa
scas
(bad)
(bad)
mov
push
mov
or
push
jnp
mov
mov
cmps
imul
dec
mov
aas
or
ins
imul
gs
jge
or
ins
pop
je
add
gs
push
fimul
jb
or
loopne
pushaw
jmp
das
mov
and
(bad)
xlat
or
pop
inc
pop
dec
ja
sub
xor
ja
cmp
push
dec
ret
mov
loopne
popa
bound
jl
shl
(bad)
jo
adc
imul
or
add
imul
das
pop
dec
mov
jmp
mov
call
push
dec
inc
fs
je
push
push
xor
out
outs
div
loop
push
sbb
push
(bad)
inc
ins
gs
pop
out
jbe
dec
inc
inc
jge
adc
stos
xchg
imul
sbb
cmp
cmp
neg
es
lahf
push
sbb
xchg
jge
popa
jae
push
test
loopne
xchg
sbb
sbb
out
pusha
inc
jp
add
out
inc
inc
inc
sbb
sub
inc
pop
adc
jl
outs
imul
aaa
ins
pop
xor
jp
push
arpl
and
cmp
or
hlt
scas
add
mov
enter
mov
sbb
xchg
inc
(bad)
aad
out
bound
mov
data16
sub
jbe
add
xor
dec
daa
and
ss
mov
push
xor
gs
lahf
inc
jae
sub
mov
scas
inc
sub
div
ror
outs
gs
push
(bad)
adc
into
jb
add
(bad)
xchg
inc
mov
mov
aas
jg
cmp
ja
jno
outs
push
lods
popa
cmp
fisttp
je
add
and
imul
(bad)
sub
add
rcl
lahf
js
jnp
dec
in
and
popa
popa
xlat
dec
cs
es
pop
aam
sub
fs
pop
or
push
scas
pop
xor
fistp
imul
xor
pop
nop
scas
xor
popa
jns
lods
imul
ds
shl
lods
cmp
push
shl
ds
sub
sbb
add
inc
push
push
sbb
mov
cmps
and
push
cmp
outs
push
xchg
outs
outs
aas
pop
jle
mov
ins
push
outs
arpl
ins
jl
jbe
jg
mov
pop
(bad)
or
stos
xor
jbe
mov
in
lock
jb
jge
inc
cmc
xlat
mov
jae
cmps
and
jno
jle
outs
xchg
push
ins
fcomp
leave
in
es
jge
jg
imul
repnz
ret
jl
outs
out
adc
out
outs
or
adc
test
rcr
pop
outs
popa
out
xor
cmp
sub
mov
sub
ins
xor
jb
pop
or
lock
xchg
sub
push
push
inc
push
outs
pop
jo
aas
or
push
outs
outs
jbe
cmp
cmp
or
jnp
sub
pcmpeqd
pusha
adc
jg
mov
pop
out
rcr
cld
popa
jmp
ins
call
inc
mul
ins
push
jne
inc
mov
pop
sub
xor
jb
fs
out
out
out
ins
cli
dec
push
addr16
je
outs
outs
inc
cli
jae
ins
cli
jbe
jno
cmp
sub
addr16
addr16
jnp
iret
pop
jge
je
mov
outs
mul
and
sub
fistp
sahf
jle
ins
push
pusha
es
div
jo
push
stc
out
addr16
cli
push
mov
fs
gs
and
or
fstp
out
push
jno
jne
xor
jbe
daa
out
call
push
sbb
sub
fs
jp
(bad)
cmc
addr16
xchg
fdivrp
stc
jno
jbe
dec
cmc
ins
stc
inc
push
jne
(bad)
jmp
sbb
mov
mov
es
jbe
out
(bad)
mov
fs
pop
mov
jno
iret
or
call
jmp
loope
jmp
inc
(bad)
jmp
in
cli
loope
loopne
and
call
fild
call
and
add
jae
inc
rcr
fs
lods
mov
sbb
mov
cmps
mov
ins
arpl
ja
data16
mov
dec
mov
sbb
ds
xchg
inc
jno
pusha
imul
xchg
aas
xor
imul
mov
jle
fs
xlat
mov
ss
ins
data16
loopne
mov
pop
popa
ja
sbb
das
cmp
sub
inc
inc
mov
je
dec
(bad)
push
es
mov
cld
lea
dec
inc
dec
popa
jno
push
aaa
ds
mov
out
jbe
or
push
daa
aas
push
fild
fild
inc
push
add
push
pop
cs
pushf
dec
dec
inc
push
inc
adc
inc
inc
push
call
imul
jo
push
mov
jg
push
push
gs
push
ins
dec
pusha
das
dec
jp
bound
xor
push
push
xlat
mov
mov
ins
sub
pop
adc
push
sub
ins
addr16
cmp
xor
sub
rcr
xchg
push
push
dec
push
dec
sub
data16
and
or
pop
and
pop
jmp
je
jp
push
pusha
jnp
xlat
push
and
mov
inc
add
jo
outs
data16
mov
dec
mov
mov
push
push
(bad)
push
inc
jp
sbb
add
int
inc
mov
rcr
jbe
pop
daa
outs
and
pusha
jle
data16
fist
pusha
cmps
push
imul
es
jne
arpl
inc
pusha
outs
push
enter
(bad)
and
add
inc
xchg
dec
imul
sub
cmps
dec
and
in
ss
out
jo
and
dec
out
sbb
mov
fisubr
push
inc
fisttp
fwait
(bad)
jg
pop
or
adc
jmp
pop
mov
div
pop
sahf
fs
and
outs
xor
push
push
dec
and
push
fs
inc
ss
xchg
push
daa
jg
dec
jo
aas
mov
cmps
(bad)
ins
outs
aas
ja
sbb
addr16
adc
popa
push
iret
int3
lods
loopne
das
out
adc
mov
pusha
inc
sahf
ins
inc
xchg
ss
inc
inc
rcr
addr16
push
fbstp
add
jg
es
push
pop
arpl
les
pop
sub
inc
icebp
or
in
sub
pop
pusha
gs
jnp
sub
jbe
dec
hlt
sbb
imul
push
sbb
xlat
imul
pop
pop
push
test
add
ja
dec
xchg
add
fiadd
and
jno
jbe
aas
jmp
pop
in
sbb
and
dec
push
push
ret
jg
imul
movzx
xlat
sub
inc
push
inc
sub
pop
dec
jno
gs
dec
pop
imul
push
(bad)
or
ja
icebp
or
sbb
inc
push
(bad)
push
sbb
push
xor
pop
push
ror
push
(bad)
jnp
push
inc
push
das
outs
scas
pop
data16
or
xchg
push
scas
adc
inc
scas
ins
aaa
mov
mov
ss
fs
jp
iret
dec
jg
fs
dec
je
sbb
pop
pop
and
push
dec
jbe
ins
adc
inc
arpl
dec
es
js
sub
adc
add
dec
and
outs
addr16
sbb
in
jmp
pop
xchg
shl
xchg
retf
idiv
addr16
(bad)
push
into
jg
out
loope
lock
call
popf
in
push
pop
fldl2t
mul
jmp
jmp
jne
jmp
out
scas
sbb
cmps
dec
ja
dec
mov
push
or
ret
xor
push
lock
out
repnz
jg
out
and
push
and
or
pop
pop
mov
jbe
(bad)
push
push
popa
push
add
ja
(bad)
lea
jbe
imul
outs
dec
imul
cmp
xor
cmp
push
xor
inc
add
out
sub
xor
fld
dec
outs
jb
inc
pop
inc
push
gs
sbb
pop
push
(bad)
or
aam
je
fs
xor
mov
outs
push
push
in
inc
(bad)
outs
jno
imul
jno
fsub
inc
inc
jp
jno
fidiv
cmps
mov
rcr
das
das
bound
cs
gs
out
es
push
push
aas
lahf
adc
jne
or
dec
inc
pop
ds
fs
push
or
and
outs
push
sbb
and
jb
cs
jne
jbe
push
jnp
push
scas
(bad)
data16
xor
ds
adc
add
outs
daa
and
or
ins
push
dec
pusha
push
daa
or
adc
sub
and
push
lahf
or
inc
popa
inc
call
push
ss
inc
fs
pop
push
lock
mov
and
or
sahf
dec
inc
sbb
outs
cmp
(bad)
in
inc
sub
push
dec
outs
js
jo
popa
imul
mov
icebp
sbb
and
adc
sbb
pop
jp
outs
cli
cmp
pusha
xchg
ds
sub
jmp
ds
outs
inc
dec
pop
inc
fwait
std
jmp
inc
push
inc
inc
inc
inc
inc
pop
cmp
push
push
pop
sub
das
aaa
mov
jge
aas
ficom
loope
js
cmps
outs
sub
jno
inc
mov
fbld
pop
mov
and
or
dec
inc
dec
push
adc
cld
push
iret
sub
and
sub
movs
cmp
jae
mov
jne
lahf
or
data16
cs
outs
jle
push
scas
imul
pop
pop
dec
fwait
call
inc
cld
cmps
outs
sub
out
cmp
mov
lock
jno
jb
loop
adc
ss
jns
pop
data16
sbb
dec
(bad)
and
mov
(bad)
movs
out
push
dec
das
cmp
mov
and
addr16
xchg
popa
inc
cmp
addr16
ins
pop
ror
cmp
loopne
sub
ss
sub
iret
jle
dec
push
jae
xchg
mov
sub
ja
sar
inc
sbb
cmps
cmp
daa
push
and
sub
aas
sub
cmps
or
ja
jb
imul
cwde
xlat
sub
aas
ja
and
iret
xchg
or
ja
sub
inc
jne
sbb
addr16
dec
xor
and
inc
dec
xorps
out
sub
push
push
dec
dec
mov
dec
inc
sub
and
jne
fsubr
inc
je
jle
lahf
sub
xchg
or
cmps
inc
inc
sbb
sub
push
inc
ins
jae
pop
pop
push
das
mov
pop
xlat
xchg
cmps
loope
addr16
iret
sub
out
mov
and
inc
sbb
imul
mov
inc
or
enter
sar
ja
and
fs
test
les
sub
imul
and
push
pop
xchg
push
mov
jnp
jle
ja
add
or
dec
pop
jo
push
push
dec
pop
cmp
pop
out
and
addr16
out
and
xchg
cmps
sbb
and
push
clc
aam
div
int3
jns
call
push
sbb
jo
(bad)
sahf
or
cmp
push
out
cmp
outs
mov
mul
mov
aas
adc
pop
scas
sbb
test
das
inc
imul
pop
je
outs
mul
outs
adc
int3
mov
jp
aas
aaa
pmulhuw
and
rcr
push
shl
xor
sub
mov
cmp
out
sub
jge
movs
mov
inc
or
dec
fbstp
and
inc
sub
gs
loopne
xor
cmp
es
es
outs
hlt
aas
and
sbb
add
sub
pushf
ins
pop
jo
dec
dec
and
je
cmp
jbe
and
cli
(bad)
fisubr
je
jge
ja
das
inc
popa
call
div
dec
and
xchg
icebp
(bad)
fimul
es
xor
and
mov
cmp
cwde
ins
inc
and
imul
pushw
jb
jne
scas
ins
aas
lea
and
push
mov
aas
scas
sub
and
push
and
mov
sti
add
xor
and
aaa
xor
pop
std
jg
outs
xor
es
inc
ss
cmp
inc
neg
(bad)
mov
xor
xor
cmp
inc
ss
inc
inc
xor
xor
ficomp
xchg
mov
sub
sbb
jg
call
inc
push
pop
inc
push
inc
push
dec
ins
bound
ja
adc
lock
jbe
dec
mov
jbe
dec
jp
or
ss
pop
add
jo
dec
scas
pop
xchg
les
push
pop
dec
out
adc
adc
mov
push
xchg
das
iret
jo
loope
mov
rcl
ret
mov
out
sbb
(bad)
stos
outs
je
or
das
icebp
pop
in
add
xor
cmp
cmp
das
clc
(bad)
call
aas
xor
xor
dec
xor
and
xor
cmp
inc
xor
adc
pop
pop
jg
xor
fbld
cmp
xchg
xchg
aaa
and
das
inc
xor
sub
dec
cmp
dec
xor
jg
or
pop
call
sbb
xchg
out
mov
movs
push
test
xlat
mov
push
pushaw
xor
cmp
push
aas
movzx
pusha
outs
pusha
dec
dec
das
daa
or
das
jne
popaw
scas
ss
(bad)
mov
jbe
xchg
arpl
jle
jbe
dec
xor
inc
mov
dec
sbb
dec
cmovnp
inc
sub
jmp
shl
outs
outs
push
jno
dec
inc
inc
outs
dec
data16
(bad)
jmp
cld
imul
dec
js
jno
push
bound
dec
push
inc
jo
data16
lods
cli
(bad)
push
imul
cmps
dec
jg
cmp
add
cmp
adc
and
outs
pop
mov
dec
jno
push
jp
sbb
xor
imul
js
xchg
(bad)
out
pop
add
dec
dec
(bad)
jo
pop
jo
fisubr
pop
or
add
sub
push
xchg
inc
pop
test
xchg
and
outs
push
or
clc
addr16
pop
push
(bad)
pop
or
lock
add
inc
xchg
in
sub
ja
jb
ja
bound
fdiv
imul
ins
push
test
and
add
retf
cs
add
popf
add
push
jno
mov
dec
out
sbb
push
imul
popa
hlt
ins
out
clc
fild
dec
scas
ins
jne
inc
dec
sar
nop
adc
push
jno
pusha
ins
push
jnp
hlt
adc
not
dec
xchg
push
add
rol
inc
xchg
xchg
push
inc
push
pop
pop
outs
imul
and
ins
jge
popa
ror
pusha
push
jle
pop
test
scas
push
jo
jb
adc
inc
pop
out
dec
imul
push
push
push
(bad)
xor
mov
inc
mov
or
(bad)
(bad)
sbb
jg
inc
imul
push
or
adc
jg
and
(bad)
arpl
and
aas
jl
cs
aaa
xor
jmp
mov
and
ret
(bad)
jmp
(bad)
xlat
sbb
(bad)
cmp
sbb
push
scas
push
push
lods
push
push
fdivr
inc
push
push
cmp
lods
jae
imul
push
(bad)
ss
scas
pusha
jg
pop
and
jp
das
cmp
mov
das
and
jo
inc
mov
dec
popa
jne
inc
sbb
aam
xor
fs
jb
es
xchg
je
nop
mov
scas
push
push
int
les
add
imul
jge
clc
imul
mov
adc
inc
jge
jbe
adc
sbb
xchg
addr16
data16
inc
pusha
and
mov
inc
(bad)
cwde
mov
ss
sub
outs
xor
ins
addr16
outs
imul
fdiv
arpl
lahf
and
mov
cmps
sub
jnp
push
imul
inc
sub
enter
aaa
arpl
mov
je
outs
jl
dec
ror
mov
cs
inc
daa
inc
jo
jae
imul
iret
push
popa
xor
mov
outs
jbe
shl
in
or
inc
mul
xchg
arpl
inc
daa
(bad)
fs
pusha
fwait
cld
jae
or
jnp
gs
dec
call
push
add
ror
xor
imul
pop
mov
mov
sub
scas
jp
adc
lods
fcomip
inc
das
dec
lock
in
gs
ja
popa
popa
inc
daa
inc
add
cs
in
gs
inc
daa
(bad)
imul
imul
ins
jle
outs
gs
inc
xchg
daa
jg
ins
inc
inc
mov
fs
inc
das
add
and
daa
dec
jo
shl
push
inc
mov
mov
ins
sub
daa
pop
cs
adc
push
and
jae
jp
push
sbb
mov
sahf
aad
sub
(bad)
fisttp
mov
ins
data16
jae
push
outs
pop
xor
cmp
mov
es
call
into
(bad)
ds
clc
sub
(bad)
outs
data16
xor
dec
and
outs
or
(bad)
sub
pop
pushf
mov
jge
jo
jbe
test
fistp
and
ins
push
popa
aad
pop
jb
cmps
jne
sub
add
mov
push
loop
ja
ffreep
imul
push
(bad)
lock
fsub
sub
outs
cmp
fbld
jmp
enter
xor
sub
or
cs
ins
jbe
xor
xor
add
add
dec
not
pop
ja
pop
jmp
inc
pop
inc
pop
pop
inc
push
test
xchg
dec
dec
push
inc
out
aad
loop
cmp
xor
std
sbb
dec
push
xchg
inc
pop
dec
dec
mov
cmp
pop
inc
ins
sahf
inc
dec
int
mov
push
and
inc
push
dec
push
push
inc
dec
pop
inc
push
and
xor
call
and
and
icebp
call
add
sub
cmp
cmp
xor
mov
pop
push
xor
adc
sub
adc
dec
(bad)
cs
pop
cmp
out
inc
cmp
push
int
es
pop
cmp
inc
lahf
aaa
inc
mov
push
push
ja
popa
js
sub
dec
sub
pop
sub
fcomi
push
daa
ja
jg
adc
mov
ins
cs
jo
out
xor
jge
dec
repnz
or
outs
popa
xor
sar
mov
dec
ja
gs
clc
dec
sub
xchg
jo
jp
inc
and
repnz
ret
jno
pop
inc
(bad)
out
data16
scas
cmp
jg
imul
jmp
adc
push
outs
jno
push
push
pop
jmp
pop
xchg
ins
push
jbe
dec
push
scas
out
mov
jnp
inc
in
mov
data16
pop
shr
fisttp
lea
(bad)
push
shr
xlat
pop
leave
mov
or
push
imul
xor
shl
out
adc
bndldx
ss
push
xchg
into
repz
pop
or
adc
and
sbb
jns
(bad)
das
add
inc
push
ret
dec
and
outs
adc
push
ins
jno
xlat
add
test
add
sub
addr16
sbb
daa
aam
push
or
cs
pop
or
xchg
push
push
test
in
push
jg
(bad)
xchg
(bad)
pusha
push
outs
int
les
jbe
add
sub
sahf
scas
ja
jmp
into
push
stos
push
jne
push
sbb
push
adc
pop
test
add
outs
or
push
in
pop
scas
push
jae
jbe
and
aaa
xlat
push
mov
add
xor
test
addr16
jl
pop
inc
out
pop
jo
outs
jnp
push
outs
ret
sub
dec
mov
inc
pop
jl
dec
cmc
pusha
fidiv
push
addr16
xchg
dec
fbstp
inc
arpl
stos
push
je
pop
jo
mov
jecxz
sbb
pop
imul
ins
sbb
pop
mov
scas
mov
mov
(bad)
(bad)
aaa
jb
inc
aaa
movq
push
nop
pop
addr16
mov
inc
fdiv
or
test
push
and
test
in
mov
je
popa
jo
outs
dec
fs
mov
inc
clc
sbb
shrd
outs
aam
ror
push
adc
pop
push
push
outs
arpl
jg
push
pop
push
xor
retf
or
shr
aas
push
sbb
call
outs
popa
popa
imul
push
or
dec
cmps
mov
mov
inc
push
pop
lea
ins
outs
aas
or
pop
pop
dec
lods
scas
je
fist
ins
jno
rol
scas
push
dec
daa
xchg
sub
inc
sbb
popa
jne
outs
data16
or
popa
sub
aaa
or
dec
push
mov
jbe
or
xchg
mov
xchg
clc
and
adc
ins
popa
jb
inc
mov
mov
arpl
mov
ds
inc
pusha
shl
push
imul
jbe
mov
mov
push
jne
or
xchg
loope
mov
jmp
push
ja
push
dec
cmp
lahf
adc
sbb
pop
mov
sbb
push
push
js
jbe
and
mov
lock
sub
xchg
dec
push
je
sbb
sub
out
ss
daa
jg
mov
sub
push
ds
push
js
test
cli
mov
push
ja
jmp
jecxz
jbe
xchg
jg
cmp
pop
out
imul
mov
aaa
inc
into
jo
add
push
data16
sub
ss
(bad)
pop
aad
stos
push
daa
add
cld
mov
dec
arpl
or
imul
cwde
fcom
das
inc
jns
xor
scas
add
jo
pop
push
(bad)
jno
jbe
cmp
ja
fwait
lea
adc
pop
dec
pop
xchg
or
outs
mov
or
push
and
sbb
pop
outs
inc
cs
in
mov
add
inc
inc
jno
fs
add
jbe
imul
adc
rcl
xor
dec
ret
stos
push
imul
or
inc
inc
add
js
pop
jl
push
jmp
rcr
je
jo
ja
sbb
out
inc
call
in
out
call
loop
out
in
aas
ror
scas
mov
mov
call
inc
dec
sbb
inc
push
and
sbb
es
push
mul
clc
mov
in
call
mov
in
loop
and
jecxz
and
jmp
jmp
clc
out
mov
(bad)
es
loopne
repz
xor
out
fistp
repz
in
and
out
(bad)
dec
jp
and
call
dec
imul
out
ret
xor
inc
test
jo
dec
fist
daa
addr16
in
(bad)
fistp
ins
pusha
jg
call
push
pop
sub
outs
enter
jge
mov
arpl
pusha
mov
inc
dec
sub
inc
adc
mov
pop
push
inc
push
pop
xchg
adc
(bad)
and
jg
adc
sub
cmp
cmp
xor
imul
ja
inc
dec
push
push
stos
dec
push
ja
jle
inc
add
or
loopne
das
pop
ins
movs
jne
dec
loopne
cmp
imul
movs
rcr
adc
inc
pop
jmp
out
xor
bound
sbb
mov
imul
outs
dec
or
cmp
ins
ds
pop
(bad)
ror
iret
jno
lock
pop
dec
xor
xlat
jne
rcl
das
movaps
sub
leave
das
jge
and
or
dec
pop
xor
lahf
or
jb
jl
push
push
jg
jno
imul
inc
pop
js
dec
sbb
cmp
dec
das
(bad)
cmp
xor
ins
cmp
and
cld
xchg
push
xlat
xor
mov
or
gs
daa
and
sub
cmp
cmp
arpl
std
adc
jge
push
aaa
aas
jle
daa
ja
pop
leave
jb
pop
mov
pusha
xor
push
fdivr
push
ss
or
outs
jmp
es
pop
pop
aad
mov
mov
daa
outs
adc
loopne
imul
test
sub
int
arpl
fst
push
mov
fdivr
sbb
popa
push
cmps
xchg
scas
jg
shr
fbld
hlt
sbb
push
dec
inc
sub
jg
xor
loope
stos
mov
inc
lock
push
ror
ja
sub
pusha
cmpps
fidivr
xor
jmp
call
xor
xor
cmp
cmp
xor
aam
cli
and
enter
xor
aas
cmps
push
pop
and
das
pop
das
(bad)
es
(bad)
fst
ret
lahf
inc
inc
cmp
xor
cmp
(bad)
jg
repz
cmp
inc
inc
xor
ss
xor
dec
mov
push
les
pop
pop
push
jb
fs
mov
out
packssdw
iret
fadd
cmps
cs
pop
je
or
push
cmp
and
push
inc
and
sub
scas
add
push
jno
outs
cs
xor
imul
push
mov
push
and
and
scas
and
xchg
mov
outs
into
and
add
sub
jge
sub
sub
popa
call
out
push
lods
cmps
jb
push
bound
jge
mov
cmc
dec
data16
push
sub
xchg
xchg
mov
dec
jg
mov
push
jo
out
mov
imul
sub
push
dec
jbe
xchg
and
mov
lods
loopne
jge
add
outs
and
or
test
add
mov
jge
imul
mov
pop
jle
jne
xchg
jnp
cdq
pop
add
(bad)
ss
or
and
into
into
and
push
call
push
xchg
jle
push
jbe
test
sub
jl
sbb
push
inc
cs
push
xchg
jb
es
pop
push
and
sahf
jge
xchg
addr16
fimul
mov
sahf
jbe
xchg
rcr
ins
popf
push
jb
(bad)
push
inc
mov
fidivr
das
and
mov
and
addr16
rcl
push
push
ja
addr16
cmp
or
inc
xchg
sahf
popa
cs
or
mov
jbe
pop
sub
pop
and
cs
add
and
pusha
dec
ins
imul
(bad)
dec
(bad)
jecxz
icebp
call
hlt
loope
sub
pop
(bad)
jmp
stc
mov
and
repz
in
out
in
out
jmp
cli
out
(bad)
(bad)
(bad)
jmp
cli
loop
loopne
in
out
in
repnz
loop
loopne
out
loop
idiv
das
jbe
in
loopne
loope
out
div
mov
pop
loope
and
loope
mov
(bad)
jmp
in
and
loop
jmp
jle
jmp
sub
in
in
lock
mov
in
jecxz
jmp
jecxz
sub
retf
out
mov
push
icebp
and
and
out
mov
inc
mul
call
pop
es
loopne
jmp
loopne
call
cs
xor
mov
out
out
mov
jmp
les
(bad)
hlt
lock
call
ins
ins
dec
pusha
dec
inc
(bad)
mov
stc
push
pop
ja
in
mov
loope
sub
out
in
jmp
out
xchg
leave
(bad)
and
sar
lods
push
in
data16
xor
mov
cli
loope
jle
movsx
clc
jmp
clc
mov
push
jmp
clc
shl
sbb
repnz
out
mov
xor
ss
pusha
into
bound
data16
push
jbe
sub
mov
retf
dec
loop
and
loop
inc
sti
mov
sub
outs
repnz
(bad)
and
push
in
data16
cli
sub
push
cli
repnz
mov
push
out
shl
or
or
out
in
sti
in
cli
pop
int3
js
sub
mov
xor
ss
das
xor
data16
out
out
add
jmp
push
outs
jmp
icebp
sti
or
cmc
out
std
dec
cmps
std
and
(bad)
imul
das
in
hlt
jmp
sub
push
sti
out
out
es
(bad)
ds
out
idiv
dec
ret
out
pop
lock
or
clc
xchg
dec
stos
cmp
pop
fild
mov
cld
ja
outs
xor
mov
lock
(bad)
aaa
in
ret
ins
pusha
pushf
data16
(bad)
iret
jmp
or
pop
inc
es
dec
lock
es
jecxz
push
jmp
in
sbb
loopne
icebp
scas
xor
push
int
pusha
jmp
std
inc
mov
or
add
pushf
pop
in
inc
xor
(bad)
fdiv
out
jbe
mov
add
test
cmps
push
dec
imul
sub
pusha
xor
mov
and
inc
int3
or
add
push
push
dec
jg
outs
rcl
dec
add
or
or
ja
inc
jge
outs
and
imul
cmp
jp
jge
xor
pop
jmp
sub
jg
cmc
dec
inc
and
aaa
mov
aaa
imul
add
outs
push
ins
cmp
and
addr16
dec
inc
and
sub
ss
mov
popa
cmps
add
cmp
cli
add
push
bnd
jne
inc
mov
in
retf
inc
mov
leave
sbb
push
test
cmovo
scas
cmp
push
push
jmp
data16
mov
sti
mov
mov
pop
dec
xchg
pop
or
pop
or
push
push
mov
pop
nop
int3
enter
sub
or
cmp
adc
enter
sub
sbb
sbb
xchg
int3
inc
adc
fwait
cmp
adc
cli
add
sub
int
jb
in
int
cld
ins
pop
and
ror
sbb
mov
into
repnz
push
test
aaa
lea
clc
movs
sbb
clc
jecxz
sub
lahf
clc
lea
xchg
or
lock
sbb
adc
mov
std
(bad)
clc
sbb
fld
pop
rcl
shl
xor
inc
imul
xchg
pop
sub
ins
(bad)
cld
jb
ror
adc
add
adc
pusha
nop
fist
enter
(bad)
and
cmp
add
adc
shl
mov
or
xor
pop
lea
inc
bnd
xchg
movs
out
sbb
stos
xchg
xchg
scas
sub
push
nop
xchg
jo
imul
jns
clc
adc
add
push
in
ins
adc
ret
mov
cmp
ss
cmps
cmps
jg
push
adc
mov
push
mov
and
add
mov
int3
dec
es
in
lods
xchg
xchg
dec
sub
dec
es
movs
mov
xchg
mov
fs
dec
(bad)
(bad)
enter
es
int3
aam
dec
es
rcr
aam
sub
xor
dec
sub
retf
and
or
in
retf
and
js
call
retf
and
push
into
cmp
and
retf
lock
retf
and
inc
iret
pop
clc
mov
mov
into
and
ins
mov
push
push
mov
pop
arpl
and
dec
ss
jo
xchg
fstp
movq
in
retf
fs
jne
das
dec
jne
inc
imul
imul
jb
std
xchg
das
pop
pop
outs
jb
ins
jo
inc
jb
ins
push
sbb
push
cmp
add
out
retf
inc
bound
mov
cmp
inc
jae
pop
inc
jns
call
pop
outs
add
mov
jmp
jae
mov
add
in
imul
jmp
jmp
sbb
sub
xor
jnp
mov
mov
pop
popf
mov
rol
pop
aam
sbb
sbb
and
xchg
ds
push
add
nop
cmp
cmp
and
cmp
repz
xor
sbb
cmp
push
cmp
sbb
iret
aas
adc
adc
dec
dec
stos
mov
nop
lods
test
jne
add
xor
mov
dec
out
repnz
jb
aad
and
inc
cwde
xchg
mov
inc
mov
sar
or
(bad)
sub
jb
adc
add
es
(bad)
pop
add
(bad)
jnp
push
(bad)
push
das
fs
push
(bad)
pop
inc
jb
jb
mov
mov
fst
cmp
jnp
sbb
push
mov
xlat
(bad)
pop
mov
cs
fs
jl
jl
sbb
mov
jns
outs
and
add
in
frstor
iret
in
ret
push
clc
inc
jb
sbb
dec
fsub
push
and
dec
fcom
ret
pop
cmp
mov
sub
xchg
fld
lds
push
outs
test
je
jl
stc
dec
lds
mov
push
loopne
loopne
pop
xor
pop
sbb
daa
push
loopne
ins
ins
jg
push
sbb
pop
cmp
xor
test
outs
jle
aad
retf
inc
sbb
arpl
and
add
mov
ins
xor
icebp
(bad)
dec
mov
and
call
or
call
add
es
lock
in
out
xor
in
add
inc
push
enter
fstp
repnz
cmp
cmps
mov
mov
fst
leave
and
or
mov
sub
jp
in
sbb
fbld
sbb
add
dec
cmps
aad
fisub
or
cmc
cmp
dec
pusha
jg
xchg
add
adc
(bad)
es
data16
cmp
adc
add
into
dec
sub
dec
je
sbb
ficom
cwde
fs
ror
xchg
lahf
push
nop
es
jbe
inc
mov
xchg
add
mov
nop
pop
mov
sbb
(bad)
dec
sbb
dec
mov
mov
xchg
mov
cld
dec
ds
(bad)
lock
cld
dec
ds
in
mov
cld
dec
ds
call
enter
fs
mov
sbb
das
jmp
nop
loopne
rcl
lock
loopne
jmp
mov
clc
pusha
mov
cli
enter
mov
aam
les
push
xor
xor
fmul
cmp
jno
das
shl
mov
je
rcr
pop
xor
adc
or
pop
shl
dec
int3
and
test
jmp
dec
add
test
push
je
mov
mov
clc
ret
jne
jmp
adc
add
test
mov
xchg
ins
iret
call
mov
xchg
mov
dec
push
jns
jmp
inc
rcl
in
inc
mov
popf
jb
push
xlat
mov
out
loopne
inc
dec
and
xor
fild
add
test
inc
pop
adc
hlt
scas
mov
add
rol
sar
cs
pop
cmp
dec
rol
mov
fmul
or
xchg
inc
sti
adc
dec
add
(bad)
xchg
jne
pushf
xchg
test
jmp
add
pop
ins
out
mov
push
shl
pop
in
das
aas
and
cld
test
sub
test
xchg
push
add
fld
data16
psadbw
test
jmp
les
adc
call
jmp
call
clc
movzx
lock
retf
push
popf
or
jl
inc
xor
shr
(bad)
push
call
and
lea
push
jno
xchg
jo
sub
lea
fidivr
pop
adc
adc
jmp
dec
push
jbe
inc
mov
inc
dec
or
in
mov
push
dec
jnp
add
sub
xor
out
test
cmp
mov
outs
cmp
jne
sub
rcl
mov
enter
add
sti
xchg
xchg
(bad)
adc
or
xchg
adc
or
int
fild
inc
or
mov
xor
xor
div
and
lea
imul
mov
mov
mov
and
or
xchg
mov
sbb
push
push
test
jne
ret
push
adc
int
stos
loop
or
jne
jns
sbb
mov
mov
adc
add
and
xlat
sbb
xlat
mov
add
dec
add
push
je
sub
data16
(bad)
and
push
jmp
sub
shl
sbb
data16
push
mov
push
jbe
lods
ds
out
call
jns
cli
fcom
inc
push
retf
mov
pop
call
dec
cmp
lahf
jecxz
movs
dec
xor
ds
mov
scas
mov
jmp
jns
push
lahf
xchg
inc
rcl
aad
xchg
or
(bad)
clc
fimul
xor
add
push
out
xor
ja
in
or
adc
xchg
add
loopne
test
adc
or
loopne
std
lock
dec
inc
mov
or
and
in
sub
cmp
xor
mov
test
cdq
shl
call
mov
dec
push
retf
outs
cmp
test
xchg
pop
fst
aam
and
adc
int3
out
ret
pop
jmp
xchg
and
loop
add
pop
sbb
dec
push
repnz
mov
pop
sbb
nop
rol
cwde
pushf
push
jg
dec
mov
adc
cmp
jg
retf
cmp
inc
(bad)
adc
inc
sbb
(bad)
dec
aam
jmp
pop
and
in
out
lods
adc
test
pusha
shl
or
test
lock
je
pop
jne
push
push
(bad)
out
imul
or
fsubr
mov
(bad)
add
xchg
imul
push
frstor
aas
repnz
out
xor
lock
sub
add
xor
cmp
popf
pop
fs
rol
(bad)
or
test
fistp
or
js
or
sbb
push
mov
xor
pop
xor
push
mov
cmp
cmp
inc
adc
(bad)
inc
jb
lds
xchg
nop
inc
pop
enter
mov
push
sub
lea
inc
pop
pop
pop
mov
jb
hlt
rcr
rcl
push
cmc
(bad)
out
sbb
mov
mov
into
popf
xor
jae
pop
push
push
dec
cmp
pop
adc
mov
add
pushf
std
enter
or
jmp
(bad)
lds
sbb
cmp
push
and
ficom
jmp
shl
xor
jmp
mov
nop
shl
scas
pop
lock
or
add
or
cmp
js
add
push
shr
in
(bad)
or
mov
inc
fwait
(bad)
(bad)
jmp
push
gs
scas
imul
iret
enter
js
jmp
pop
pop
add
js
ds
data16
mov
lock
xor
and
dec
or
test
iret
in
ret
loop
sbb
sub
inc
push
push
imul
fstp
push
inc
repz
dec
push
fprem
frstor
fild
cmp
mov
addr16
cli
test
aas
xlat
pusha
out
add
enter
call
mul
push
xchg
inc
je
jp
jecxz
out
inc
pop
push
xchg
jmp
in
mov
push
mov
call
jmp
(bad)
clc
jmp
adc
loop
jmp
mov
dec
cmp
cld
sbb
jmp
data16
iret
or
adc
fwait
jl
cwde
das
iret
dec
in
inc
push
xchg
xchg
xchg
cs
xlat
dec
mov
imul
inc
fdivrp
or
sti
(bad)
std
jg
sub
push
or
xor
hlt
fcom
add
lea
sbb
rcl
jmp
add
pop
and
ret
add
push
in
inc
hlt
clc
fmul
sub
pop
add
add
retf
push
in
add
lods
push
push
adc
mov
push
cmps
fistp
cmp
adc
or
lock
cmp
and
xchg
sub
mul
rcl
fild
fist
(bad)
xchg
ds
push
outs
xchg
push
ret
je
dec
stos
add
ss
or
sbb
or
xchg
inc
adc
dec
out
aad
addr16
icebp
inc
mov
and
ja
retf
jns
iret
repz
aad
add
adc
sar
push
jnp
xor
inc
neg
fild
retf
xchg
sahf
fld1
jle
loop
aam
jp
loope
imul
inc
outs
aas
sub
mov
add
mov
fnstenv
sbb
sar
cmp
pop
sub
inc
push
jg
mov
fdiv
pop
aam
jo
test
test
sbb
mov
push
inc
shl
call
xor
mov
sub
pop
ins
or
scas
inc
inc
cwde
je
dec
je
jmp
outs
aaa
arpl
gs
or
test
(bad)
cld
loopne
pop
push
dec
shl
xchg
(bad)
clc
inc
mov
icebp
pop
out
call
xor
mov
lock
mov
and
idiv
cdq
ret
aam
loop
push
es
mov
outs
inc
fst
cmp
pop
add
and
mov
jns
mov
cmp
imul
sub
pusha
adc
nop
or
mov
jmp
or
daa
add
ss
pop
(bad)
or
add
mov
cmc
jne
add
pop
sub
and
iret
adc
or
sbb
lahf
(bad)
dec
outs
in
addr16
jb
(bad)
jle
adc
or
sub
jge
adc
stos
xor
mov
jmp
jae
and
scas
popf
xor
add
mov
and
and
sbb
fcmovnb
dec
adc
pop
pop
jb
leave
push
push
je
sub
daa
pop
pop
push
dec
(bad)
or
ror
mov
punpcklbw
loopne
neg
sub
repz
and
jnp
aaa
lds
add
add
add
push
into
repz
inc
popa
push
jl
push
lock
enter
mov
popa
pop
xor
mov
cmp
push
cmp
jb
pop
shl
cmp
and
(bad)
(bad)
aas
add
adc
out
hlt
dec
adc
add
push
cmp
jnp
xor
xor
mov
fist
fadd
mov
and
hlt
jmp
lahf
adc
loop
mul
jns
cmp
push
cmc
in
sbb
adc
cmp
dec
cmc
mov
lahf
add
pusha
xor
adc
dec
xlat
jnp
leave
dec
inc
xor
pusha
mov
jl
lods
adc
in
xchg
mov
(bad)
pop
rol
nop
sbb
call
mov
mov
push
xchg
loopne
adc
in
pop
aaa
push
and
adc
rcl
ret
aaa
sbb
(bad)
sub
cdq
sbb
add
es
aaa
mov
dec
mov
add
test
xchg
(bad)
push
ds
push
jl
mov
clc
in
mov
ins
add
sbb
xor
bound
imul
and
cdq
jns
popa
in
and
movs
dec
call
and
fmul
mov
xchg
pop
shr
inc
clc
xchg
fbld
mov
mov
xchg
mov
push
push
call
adc
xchg
call
arpl
sbb
scas
call
ins
ror
dec
jb
ja
adc
clc
or
inc
add
repnz
repz
add
cmp
cmp
push
mov
retf
fdivp
push
stc
sbb
iret
jnp
cmp
push
jmp
sahf
out
xchg
pop
je
fwait
scas
retf
jns
clc
lock
xchg
in
push
adc
push
adc
mov
repnz
fidiv
bound
outs
and
popa
dec
push
arpl
out
dec
sbb
dec
sub
cdq
fmul
dec
mov
daa
mov
jnp
sub
lock
and
cmp
bound
in
jnp
repnz
add
push
xor
push
xchg
das
pop
cli
lods
sti
pop
mov
out
call
sub
sti
inc
push
push
retf
iret
rol
push
xchg
movs
mov
mov
and
xchg
mov
enter
xchg
das
frstor
xor
push
imul
and
dec
fisubr
mov
inc
movs
jmp
and
jno
ins
and
in
add
adc
mov
sub
or
sbb
enter
push
cmp
mov
adc
add
dec
outs
pop
or
outs
(bad)
xchg
and
add
es
pop
idiv
sbb
cmp
push
mov
cmp
rol
lock
pop
jg
add
push
imul
inc
sahf
adc
std
lock
ins
sub
dec
or
mov
adc
enter
pop
out
test
out
xor
ret
out
sub
sub
cmp
scas
das
outs
push
or
shl
and
popf
xor
mov
out
push
mov
xchg
push
(bad)
cmp
repz
test
retf
iret
repz
or
adc
jb
pop
sub
inc
push
pop
cdq
fs
or
adc
or
in
pop
mov
sbb
inc
(bad)
into
push
mov
sub
or
push
and
imul
in
pop
sub
sti
push
sub
mov
mov
test
xlat
add
shl
aad
rcr
icebp
in
adc
loopne
jmp
das
pop
push
inc
add
add
arpl
repz
inc
pop
xor
iret
repz
inc
push
push
cwde
scas
mov
or
adc
pushf
out
iret
int
push
in
(bad)
sub
rcr
adc
sub
ror
add
sub
loop
sbb
xchg
sbb
rcl
jne
adc
ret
into
in
pop
pop
dec
sbb
inc
sar
sub
jne
and
mov
es
mov
jmp
cmp
sub
adc
sbb
xor
movlps
xor
neg
ret
push
repnz
prefetch
inc
clc
push
add
cs
jmp
addr16
mov
call
pop
cmp
add
test
popf
fnstsw
out
or
add
sahf
mov
or
mov
fnstsw
das
mov
sahf
dec
push
add
sbb
les
pop
sbb
add
push
xchg
sub
xor
dec
sar
iret
repz
add
mov
xchg
mov
lahf
pop
cmp
jns
out
fs
jbe
ror
arpl
test
inc
fisttp
and
aam
fistp
add
xor
xor
loopne
mov
icebp
push
inc
movsx
mov
or
push
sub
sahf
push
mov
test
jns
sbb
adc
inc
dec
stc
cmps
jns
pop
and
push
repnz
ja
or
sub
pop
pop
dec
je
mov
push
iret
repz
pop
gs
retf
mov
inc
fist
push
iret
jnp
imul
cs
sbb
loope
sub
nop
sbb
test
and
add
push
sbb
and
dec
cmc
inc
and
mov
sub
push
movs
jnp
jg
mov
mov
xchg
ret
ins
ins
sub
adc
push
sbb
and
bnd
jge
(bad)
or
dec
adc
push
pushf
push
add
mul
mov
add
fstp
fld
mov
lods
adc
jmp
fistp
and
push
xor
enter
outs
icebp
jl
cmp
push
xchg
push
test
into
push
outs
add
in
clc
das
xor
pop
fs
aas
fadd
cmps
out
fs
mov
add
div
fild
sub
mov
and
mov
mov
cmc
sub
fild
dec
xchg
popa
leave
(bad)
cli
pop
inc
xor
or
and
fmul
aaa
pop
add
xchg
mov
(bad)
(bad)
adc
loopne
aad
enter
or
push
mov
into
inc
mov
or
cld
(bad)
inc
pop
jecxz
sbb
es
pop
and
popa
repnz
xchg
add
jecxz
data16
adc
loop
mov
es
pop
lock
pop
ret
inc
push
dec
out
mov
stc
push
lock
xor
and
(bad)
push
enter
pop
push
enter
or
xor
es
es
pop
cmp
clc
push
push
or
ss
mov
push
or
data16
cmp
mov
cwde
lock
sahf
mov
jecxz
fistp
and
std
retf
ror
fisttp
bound
stc
mov
lahf
inc
das
xor
lahf
sub
lahf
push
mov
xor
lahf
std
retf
mov
and
add
push
mov
nop
mov
int3
pop
aam
pop
into
pop
pop
cs
outs
adc
or
mov
out
add
adc
lock
inc
push
imul
cmp
test
ret
stos
outs
sub
push
test
sbb
xchg
mov
mov
cmp
xchg
cmp
xchg
mov
test
push
push
jns
sbb
add
lock
pushf
nop
and
in
push
push
mov
xor
add
lock
xchg
or
push
push
push
cmps
nop
and
fild
push
cmp
xchg
bswap
dec
(bad)
and
add
jge
cmovs
push
cmp
pop
es
outs
cmp
iret
repz
movs
mov
fdivr
sahf
out
call
push
lahf
adc
out
pop
adc
dec
gs
push
sbb
test
iret
add
test
push
inc
fistp
or
sub
and
(bad)
xor
rcl
aam
jl
stos
pop
mov
pop
pusha
push
ins
mov
inc
add
in
inc
add
ror
stos
inc
iret
pop
(bad)
cmp
nop
push
sbb
pushf
jle
addr16
sbb
mov
jns
iret
jae
lea
cdq
mov
rcl
jp
out
or
push
inc
popa
adc
add
add
push
mov
and
or
xchg
and
mov
cmp
mov
add
mov
jmp
mov
dec
cmps
ret
sub
mov
add
ret
mov
dec
loopne
dec
(bad)
aas
outs
or
jl
or
pop
aas
nop
or
loop
add
cwde
fcomp
or
stos
and
jl
out
je
and
mov
cmp
popf
cmps
cmp
lock
bound
int
cld
hlt
scas
call
push
inc
push
mov
jl
xor
scas
adc
ret
adc
cmp
jbe
inc
inc
add
add
inc
dec
xchg
loopne
inc
inc
test
into
add
cmc
inc
and
xchg
xchg
adc
sub
cmp
pop
and
inc
pop
addr16
mov
inc
rol
(bad)
pop
pop
dec
push
or
xchg
push
or
inc
and
adc
xor
lds
jl
add
fs
and
push
rol
push
dec
sbb
adc
mov
pop
cmp
xchg
mov
sti
ds
jno
sti
fistp
mov
jb
mov
xor
push
cmp
sbb
iret
stc
push
sbb
sbb
push
inc
repz
mov
pop
pop
popa
sbb
cmp
mov
jne
pushf
adc
ja
cmps
in
cs
fmul
mov
mov
push
in
sub
clc
xchg
push
push
mov
xor
push
mov
jmp
add
leave
(bad)
lock
mov
jae
add
sub
add
mov
cmp
lock
xchg
into
push
or
loopne
xchg
in
ds
pusha
pop
push
fsub
add
fdiv
or
fsub
or
aam
aaa
aam
sbb
dec
shl
add
ins
add
xchg
and
enter
mov
sar
int
fcmovb
sbb
ins
in
push
les
sub
sbb
outs
add
daa
add
or
in
into
jle
jno
dec
sbb
lds
loop
cmp
out
and
inc
arpl
in
xchg
push
inc
daa
mov
or
jns
jmp
jb
adc
xchg
mov
push
in
aaa
mov
stc
mov
pop
fnsave
pusha
daa
shr
cmp
sbb
test
mov
adc
lods
cmp
xor
movs
mov
dec
aaa
and
sub
cwde
mov
xor
mov
xchg
stos
xchg
jno
inc
outs
push
lock
adc
jmp
pushf
mov
inc
sub
ret
sbb
and
mov
and
pop
in
sub
xor
mov
icebp
adc
in
out
pop
nop
pop
and
xchg
sbb
sbb
push
pop
and
test
jne
jecxz
dec
cli
cmps
nop
inc
iret
jl
cdq
cmp
or
nop
push
leave
stos
(bad)
neg
jb
sbb
push
xor
mov
aad
sbb
in
fs
sbb
dec
out
sbb
dec
sbb
loopne
sbb
in
sbb
test
dec
push
dec
push
adc
push
push
push
and
jns
gs
push
data16
jns
test
and
xchg
out
imul
push
or
ds
jnp
daa
jge
push
mov
in
pop
dec
mov
adc
inc
adc
dec
pop
dec
push
mov
test
push
xor
mov
adc
push
add
mov
inc
push
mov
test
inc
jl
push
cmp
dec
in
xor
xor
loopne
test
rcr
movsx
xor
fdiv
aam
or
aam
aaa
test
xor
ror
imul
xchg
push
or
ins
or
or
imul
fist
outs
aas
push
call
cmps
stc
xor
pop
loope
(bad)
sbb
cmp
pusha
jg
and
push
pop
imul
and
sahf
lock
and
rol
xlat
test
aaa
ins
in
inc
aaa
mov
es
fnstsw
and
mov
mov
imul
test
mov
aaa
mov
or
aaa
test
movs
inc
and
cwde
aaa
movs
aad
(bad)
xchg
je
mov
jno
mov
movs
mov
aaa
call
aaa
dec
js
ret
aaa
dec
mov
cmp
jbe
jb
aaa
inc
inc
or
sbb
cmp
mov
mov
cwde
jo
adc
mov
push
fs
fisub
int3
loopne
dec
xor
dec
test
mov
add
and
lahf
xor
repz
test
popf
and
nop
cmp
mov
lea
or
mov
inc
fimul
je
jmp
sub
or
add
(bad)
loope
add
jmp
ins
push
cmp
js
push
int
dec
or
mov
or
mov
jne
sub
xor
add
sbb
pop
sbb
bound
inc
cli
sub
dec
retf
ret
push
movs
imul
push
dec
pop
lea
sub
sbb
clc
outs
inc
ins
and
inc
push
repnz
or
or
and
add
push
push
hlt
nop
inc
test
shl
push
mov
out
clc
mov
inc
pop
sbb
pop
jmp
mov
ja
xor
dec
cmps
call
add
out
retf
mov
push
adc
mov
mov
cmp
adc
inc
aas
adc
and
push
fstp
cwde
dec
or
pop
mov
push
and
push
push
pop
add
sbb
or
shl
and
out
mov
lock
and
fstp
fwait
into
daa
or
pop
leave
pop
push
add
js
push
jb
add
add
dec
(bad)
lock
bound
push
loopne
sar
add
aas
(bad)
or
mov
push
or
and
scas
dec
sub
push
sub
push
inc
adc
jo
dec
sub
add
pop
mov
xor
ss
mov
and
mov
dec
rcl
mov
cmp
outs
cmp
shl
cmp
add
add
dec
sbb
xlat
add
sub
sbb
dec
es
out
repz
ins
and
jmp
je
xor
pop
adc
add
sbb
inc
and
fstp
call
jb
and
adc
pop
push
cmp
iret
test
or
adc
push
jbe
scas
ror
aaa
jge
mov
pop
and
lmsw
or
and
(bad)
sbb
and
movs
clc
leave
test
ficomp
jl
adc
adc
sub
add
mov
add
out
fsub
(bad)
sub
xor
add
and
imul
outs
(bad)
sbb
xor
aaa
fistp
iret
jp
in
push
mov
push
inc
jle
push
xor
push
sub
xchg
movs
es
movs
cmp
adc
add
add
mov
mov
push
mov
mov
out
jmp
aas
(bad)
fist
adc
or
and
jmp
test
sbb
sbb
retf
cmp
mov
add
adc
test
add
fld
cmp
jnp
or
in
test
pop
test
or
ds
xchg
shld
sub
sbb
dec
jnp
pop
xchg
cmps
sbb
jmp
or
(bad)
mov
scas
cmp
xchg
or
or
aas
add
mov
push
adc
push
jp
rcl
mov
add
das
adc
outs
inc
add
fcomp
in
fidiv
sbb
jnp
not
or
fnstenv
dec
mov
push
push
fisub
xor
push
cmps
addr16
pop
and
inc
ds
xor
hlt
adc
loope
push
mov
cmp
adc
fisubr
and
push
sbb
xchg
add
rcl
ret
jmp
and
mov
adc
xor
out
pop
adc
fucomi
cmp
sar
push
cwde
inc
or
into
repz
cmp
jle
push
lds
pop
leave
adc
sbb
(bad)
jecxz
sbb
pop
shl
(bad)
xchg
outs
mov
aaa
sbb
mov
sbb
xchg
pushf
movs
pop
cli
test
dec
jbe
sar
jmp
inc
ja
sbb
test
mov
test
cmp
adc
lods
mov
aas
dec
pop
and
js
gs
dec
mov
mov
jmp
add
test
aam
outs
sub
jns
sub
push
mov
in
sub
mov
loopne
test
mov
sahf
mov
xor
pop
retf
add
in
aaa
xor
and
in
add
sti
test
cmp
jnp
nop
xchg
adc
fcomp
das
sub
mov
add
add
ror
pop
adc
push
pop
jcxz
cmp
cmp
sbb
mov
push
imul
adc
xor
fsubr
xor
test
adc
imul
enter
inc
push
mov
xor
sbb
ret
and
xor
stc
dec
lds
add
shr
push
sub
fdiv
push
jo
in
or
pop
fld
bnd
pop
xor
test
std
test
push
pop
lea
ja
sti
and
mov
in
adc
jae
mov
push
ins
add
lahf
nop
sub
sub
mov
ja
adc
stos
mov
nop
mov
xchg
xor
js
adc
les
or
or
shr
test
aam
or
xor
mov
bound
ins
mov
ss
add
nop
push
int3
add
icebp
nop
fimul
jb
inc
retf
push
dec
leave
inc
mov
add
bound
fild
mov
ins
jo
jns
pusha
or
inc
or
push
push
push
ins
popa
ins
ins
imul
jmp
push
ds
xchg
outs
jne
stos
and
mov
jb
outs
arpl
or
je
pusha
push
add
sbb
test
pop
adc
loopne
pmulhw
xchg
jae
fild
push
outs
imul
inc
arpl
ficom
jl
add
inc
iret
push
inc
or
lahf
inc
jns
or
outs
jb
xor
aaa
ss
fbstp
loopne
pop
clc
add
mov
add
popf
sti
pop
ja
or
xlat
cmp
jg
mov
std
adc
mov
sar
enter
jmp
push
add
in
ret
cmp
pop
mov
jb
ins
gs
mov
mov
or
push
rcr
sbb
sub
or
xchg
mov
(bad)
and
or
arpl
fwait
or
test
daa
in
jmp
repnz
sbb
xchg
push
inc
outs
jns
pop
cmps
call
push
push
gs
cmp
jmp
jo
cmp
test
and
mov
lods
xchg
add
outs
imul
pop
aam
lods
pop
or
mov
push
push
pop
ja
cld
add
iret
pushf
fpatan
add
unpckhps
inc
dec
jl
in
sub
es
sub
or
cmp
xor
dec
enter
int
js
mov
dec
cmps
dec
cmc
test
pop
jmp
add
push
arpl
scas
(bad)
ret
(bad)
in
int3
test
pop
loope
adc
ins
sub
xchg
aaa
in
movs
cdq
mov
xchg
mov
mov
pushf
aaa
(bad)
test
or
out
(bad)
out
and
xchg
and
(bad)
clc
(bad)
popa
cmp
inc
data16
jno
(bad)
sub
test
inc
test
push
mov
or
inc
ds
jns
push
aaa
mov
dec
cmp
sbb
add
test
push
retf
cs
ja
ret
xor
jne
jo
(bad)
out
mov
jne
inc
dec
pop
sahf
pop
jmp
mov
adc
pop
xchg
aad
add
rol
push
add
int
out
pop
mov
jge
cmp
mov
pop
outs
(bad)
adc
ds
add
inc
clc
xchg
pop
lahf
sahf
push
lea
xchg
mov
cmp
sbb
or
aaa
fdivp
rol
add
mov
into
mov
call
and
add
ret
xchg
mov
add
push
jp
js
std
repz
inc
pop
scas
sub
loopne
test
mov
inc
mov
add
pop
cmp
mov
out
jl
jle
mov
sub
outs
pusha
sub
mov
nop
lods
add
add
xchg
dec
leave
bswap
cwde
retf
push
add
addr16
and
cmp
cs
dec
fsubr
sub
sahf
inc
push
sub
push
xchg
xor
mov
pop
or
pop
jbe
cli
xor
cmp
and
enter
cmp
mov
cmp
add
jno
inc
mov
add
je
cmps
fnstenv
jns
imul
jbe
rcl
dec
add
lock
mov
dec
cmp
xchg
jo
daa
sbb
les
aas
add
jl
inc
xor
inc
sbb
imul
sbb
leave
cmp
jge
mov
jecxz
mov
xchg
push
mov
jp
adc
or
sbb
adc
pop
push
jmp
inc
dec
jne
xchg
xor
ins
popf
arpl
cmp
or
pushf
cmp
jno
popa
das
in
mov
(bad)
cmp
xlat
inc
add
loopne
(bad)
and
dec
inc
sub
gs
mov
mov
hlt
aaa
inc
lock
inc
inc
sbb
adc
in
add
neg
jae
xchg
out
mov
cmp
jns
(bad)
loopne
dec
in
pushf
jle
adc
mov
lahf
idiv
mov
or
and
pop
mov
sbb
out
adc
outs
stc
lods
mov
sbb
sbb
or
sub
cmp
xchg
xchg
daa
daa
popf
xchg
setb
daa
xchg
xchg
xchg
cwde
daa
daa
daa
daa
cdq
call
popf
sahf
lahf
and
daa
daa
add
xchg
mov
daa
daa
lea
daa
daa
jno
jae
adc
daa
daa
jne
pop
xor
xor
cld
ds
add
mov
iret
inc
add
aaa
inc
mov
adc
add
xchg
pop
lods
or
mov
add
lea
mov
mov
jg
or
adc
xor
test
jne
lods
xchg
test
inc
dec
xor
add
clc
jle
in
not
pop
add
cmp
fcomp
add
mov
je
inc
das
xor
jmp
cmp
jo
cmp
cmp
pop
add
pop
outs
(bad)
test
test
pop
(bad)
add
or
mov
mov
aas
clc
mov
fisttp
mov
add
or
mov
push
or
mov
xor
and
push
mov
and
dec
popa
sbb
mov
loopne
mov
jle
in
je
jmp
cmp
or
test
out
cmp
xor
jg
sbb
sub
mov
push
or
stos
mov
out
cmps
jns
push
dec
inc
push
or
or
call
mov
cmp
mov
bndstx
in
es
xchg
push
sub
ss
cmps
push
mov
mov
mov
push
and
cmp
je
jg
add
cld
test
mov
jp
dec
pop
push
inc
or
call
jmp
add
or
mov
cmp
jle
mov
jb
or
loope
es
or
movsx
ror
sbb
add
or
in
add
sub
mov
push
adc
pop
xor
retf
or
(bad)
or
test
call
sbb
repnz
out
mov
mov
lds
mov
daa
mov
out
sbb
lea
adc
add
sbb
call
movs
call
or
call
into
jmp
mov
mov
lods
cmp
call
push
xchg
lock
xchg
les
add
sub
add
dec
pop
sbb
aaa
adc
clc
inc
mov
or
xor
lds
pop
stc
addr16
xlat
and
xor
cmp
and
scas
inc
adc
sbb
xchg
or
mov
or
adc
push
mov
or
push
mov
imul
pop
push
stos
inc
add
sub
push
ror
mov
jp
xchg
mov
mov
bound
push
popa
shl
aaa
pop
(bad)
fadd
arpl
pop
jmp
cmp
sar
inc
xchg
push
xchg
add
mov
pand
pop
add
jne
xchg
cmp
mov
pop
in
xor
jae
nop
pop
iret
lods
pop
mov
or
hlt
mov
fild
pop
or
and
push
cmp
cmp
inc
pop
mov
xchg
in
inc
push
push
pop
sub
lahf
out
dec
fld
fstp
in
lock
sahf
adc
stos
add
push
jmp
pushw
or
(bad)
fmul
test
pop
retf
add
mov
mov
adc
(bad)
mov
cld
stos
jne
cmp
enter
(bad)
add
arpl
mov
push
out
jg
xor
lods
sub
stos
push
xchg
and
xor
sub
inc
inc
sub
out
push
addr16
and
jmp
pop
jmp
sbb
add
sub
jmp
or
xor
leave
push
inc
add
mov
lods
fild
pop
pop
jp
js
jno
push
push
pusha
fild
jge
add
call
mov
or
adc
mov
mov
pshufw
ja
jae
jne
lahf
add
pop
adc
test
test
mov
scas
xchg
dec
not
fnstcw
xchg
fxch
test
add
sbb
aam
dec
mov
inc
xchg
jge
fwait
fwait
or
mov
popf
test
pushf
sbb
cmp
push
fbstp
inc
dec
cmp
(bad)
pop
mov
add
ret
iret
test
jns
das
cmp
dec
call
dec
sub
or
popa
sub
push
pushf
(bad)
dec
or
dec
and
mov
(bad)
mov
nop
daa
fist
pop
jge
sets
test
scas
pusha
test
(bad)
fld
dec
mov
(bad)
dec
loopne
loope
push
pop
dec
dec
lock
push
inc
imul
ror
cs
bound
data16
outs
push
adc
into
ficomp
nop
adc
dec
outs
inc
ins
dec
add
add
ja
dec
pop
dec
outs
ins
jns
inc
add
pop
fisub
xchg
inc
fstp
repz
push
rol
pop
and
ss
push
lods
bound
or
jb
or
jbe
push
push
dec
in
ins
gs
mov
loopne
xchg
test
jmp
or
or
test
(bad)
int3
add
dec
loope
dec
rcr
gs
add
sub
or
nop
call
sbb
or
cs
lods
mov
fimul
jns
adc
fnstenv
add
push
and
outs
sub
inc
or
jno
cs
test
add
or
jbe
push
dec
or
push
push
cmps
jb
add
mov
mov
add
movs
push
or
sub
xor
add
fisttp
dec
xor
xchg
push
dec
mov
pop
leave
(bad)
(bad)
je
push
daa
mov
imul
jae
jb
or
enter
outs
mov
dec
daa
sbb
dec
mov
scas
je
xchg
cmp
je
dec
or
mov
jae
lods
nop
int3
scas
int3
retf
sub
daa
fcmove
inc
mov
dec
scas
and
stos
mov
and
inc
sbb
nop
xor
or
mov
pop
sbb
and
dec
imul
dec
leave
enter
imul
mov
mov
imul
loop
in
mov
cdq
or
int3
push
mov
dec
and
lfs
jb
or
outs
adc
aad
popa
aas
sbb
repnz
dec
ja
xchg
adc
push
int
sub
fdiv
movs
pop
jl
je
add
mov
je
aas
and
ficomp
inc
add
mov
scas
lock
ror
or
fs
pop
push
adc
stos
neg
mov
pop
and
cs
add
out
imul
push
add
fs
or
fdivr
test
mov
jae
test
adc
jmp
pop
and
xlat
sbb
pop
dec
pusha
or
mov
dec
cmp
jo
xor
push
jbe
push
jge
pop
dec
mov
mov
loope
add
xchg
(bad)
adc
inc
push
add
add
jb
jge
mov
sub
or
and
fucom
pop
popa
imul
adc
fadd
sub
push
out
inc
cld
jle
cmp
push
js
retf
jl
jle
inc
sbb
cmps
repnz
retf
cmp
or
pop
push
rcl
mov
iret
mov
add
pop
stos
les
adc
or
xor
pusha
add
ins
jo
push
sar
pop
jg
or
(bad)
sti
stos
adc
push
nop
int3
or
aaa
pop
and
mov
push
cmps
inc
push
pop
mov
add
fisubr
push
sbb
and
lock
movs
inc
in
adc
fs
fsub
outs
push
inc
xor
push
sbb
sub
cmovns
inc
mov
fs
jo
push
add
pushf
jae
push
sar
mov
call
imul
jnp
mov
cmp
push
fcomp
add
push
adc
ret
mov
xchg
int
cmp
bound
clc
xchg
sub
xchg
xchg
fidiv
xchg
pop
cld
cwde
xchg
cmp
int
jge
xchg
mov
popf
in
enter
ss
sbb
clc
cmp
setle
cmp
xchg
aas
sbb
je
push
imul
and
pop
pop
sbb
in
inc
or
or
add
push
stc
lock
in
adc
add
pop
in
push
mov
cdq
in
push
pushf
dec
cmp
cmps
push
sbb
pushf
pop
xchg
popf
push
lock
lock
lahf
push
je
jbe
cdq
pushf
loope
into
pop
inc
call
pushf
dec
xor
push
enter
dec
fistp
data16
sbb
ins
(bad)
sub
cmp
ja
sbb
xchg
push
ja
push
stos
push
sbb
add
or
mov
clc
es
push
push
pop
out
pop
pop
mov
fisttp
xor
push
rcr
movs
push
sbb
mov
int3
(bad)
push
or
push
cmp
xchg
xchg
xchg
add
xchg
das
fsub
jbe
neg
out
(bad)
repnz
or
adc
xchg
xor
push
cmps
adc
xor
pop
mov
rcr
inc
sahf
in
in
inc
mov
ret
call
aam
dec
shr
out
or
outs
in
movs
test
test
not
pop
leave
sbb
loope
pop
pop
pop
xor
xchg
xor
hlt
stos
inc
push
push
cwde
jl
stos
inc
and
jmp
in
or
pop
jb
pop
or
adc
pop
jb
sbb
and
jb
and
or
les
push
add
and
jns
in
out
fsubp
and
push
ss
adc
repz
mov
movs
mov
iret
pop
loop
cmp
jmp
pop
leave
or
ins
outs
inc
inc
jg
jns
popa
iret
outs
sbb
pop
adc
dec
adc
out
call
js
fs
push
repnz
in
clc
cdq
xor
cli
je
out
push
mov
pop
mov
add
or
hlt
stos
fisttp
push
xchg
ficomp
dec
test
cmc
sub
fsubr
mov
(bad)
mov
pop
push
scas
ret
(bad)
es
jle
pop
pop
pop
daa
push
push
add
mov
repz
shl
call
xor
iret
push
inc
(bad)
jo
loop
call
scas
rcr
ret
(bad)
add
inc
scas
adc
(bad)
stc
xchg
out
sbb
cmp
loopne
mov
repz
dec
loope
push
sbb
sbb
(bad)
cwde
in
push
dec
sub
jo
and
pusha
pop
dec
pop
inc
sbb
cld
call
pop
dec
pop
call
rcl
stos
mov
ror
mov
push
sar
push
inc
fsubr
adc
cmp
aam
iret
repz
pop
int3
popf
or
inc
repz
xlat
add
pop
sbb
test
in
inc
(bad)
int
dec
add
loop
add
nop
push
sar
push
icebp
frstor
cmp
pop
retf
call
lahf
or
inc
cs
xchg
pop
in
in
adc
call
push
mov
clc
lock
cmp
fiadd
push
sub
jmp
aas
add
(bad)
stc
(bad)
clc
push
push
idiv
push
push
push
data16
push
call
jns
test
hlt
(bad)
int3
shl
call
enter
imul
mov
push
xlat
pop
and
pop
nop
mov
retf
xor
cmp
(bad)
xor
pop
add
test
push
popa
addr16
repnz
add
out
popa
push
(bad)
lock
sub
mov
mov
lods
es
xchg
in
mov
es
add
jb
add
in
dec
cmp
pusha
loop
imul
pop
mov
mov
inc
repnz
in
cmp
pop
add
inc
test
cmp
cmp
push
ins
push
inc
mov
add
push
mov
and
pop
push
int3
pop
sub
fsub
cmp
or
dec
fs
inc
shl
lock
shl
push
mov
add
pop
push
inc
adc
(bad)
push
enterw
popf
mov
push
popf
imul
nop
mov
or
dec
pop
adc
push
push
call
leave
mov
jge
popa
popa
inc
loopne
sbb
test
(bad)
mov
addr16
jb
jne
(bad)
inc
bound
aas
and
shl
push
adc
sbb
lods
or
push
mov
pop
dec
pop
push
je
xor
push
mov
dec
mov
cmp
xlat
bound
adc
and
in
xchg
add
lock
adc
lods
and
adc
jmp
xchg
adc
mov
pop
or
xchg
mov
add
sti
xor
or
cld
sub
sub
aad
fcomi
or
cmps
and
jmp
sbb
adc
mov
and
cmp
mov
scas
fisttp
adc
stos
add
add
ret
enter
xor
sbb
push
and
jbe
cmp
or
pop
jl
and
das
ror
ret
std
(bad)
fld
add
add
sub
push
daa
xlat
pop
icebp
xchg
imul
and
sbb
cmp
(bad)
clc
mov
pop
sbb
inc
(bad)
loop
sub
push
push
lods
jmp
or
and
pop
sbb
mov
pop
mov
mov
cwde
jne
out
pop
or
push
inc
or
(bad)
(bad)
adc
mov
pusha
mov
dec
jne
pop
add
and
push
hlt
arpl
leave
daa
gs
leave
pop
sub
shr
pushf
xor
xchg
(bad)
push
pop
inc
shl
dec
mov
call
stos
and
pop
adc
cs
jo
and
xor
shl
popa
out
sub
lods
or
dec
hlt
cmp
sbb
sub
pop
cmp
and
sar
jecxz
dec
repnz
fs
add
nop
(bad)
test
pusha
add
add
push
fs
in
bound
or
imul
or
sbb
add
cmp
int
xor
inc
push
pop
stos
mov
sbb
imul
pusha
je
push
inc
mov
inc
push
sbb
mov
adc
pop
pushf
out
add
pushf
and
lock
pop
lock
cmp
inc
adc
dec
mov
inc
iret
push
cld
out
lock
inc
stos
gs
sub
test
jl
inc
xor
dec
push
jne
(bad)
mov
xchg
shr
mov
test
lds
inc
sahf
sub
inc
sbb
and
hlt
jg
mov
inc
rcr
nop
sub
mov
js
or
enter
popf
xor
mov
(bad)
dec
cmps
inc
mov
jmp
add
push
pop
pop
add
shr
add
inc
hlt
ss
pop
sub
stc
ds
(bad)
imul
call
dec
(bad)
rol
jl
add
sbb
mov
inc
adc
sbb
cmp
dec
mov
cmp
call
repz
xor
add
or
inc
pop
aad
loopne
imul
imul
ja
ss
cmp
push
xor
fistp
fidiv
(bad)
jecxz
(bad)
(bad)
dec
call
pop
sbb
rcr
pop
outs
or
push
(bad)
pushf
pop
sub
jle
push
mov
cmp
inc
aaa
push
xor
out
adc
xor
test
cmps
mov
aad
jge
add
and
(bad)
mov
sbb
pop
xor
aad
pop
push
inc
or
les
add
mov
xchg
int
retf
lahf
hlt
xchg
lods
push
lea
inc
sub
xchg
or
fmul
fs
pop
or
or
or
fcomp
shl
mov
adc
arpl
and
imul
enter
adc
cs
adc
rol
add
xchg
sub
fidiv
mov
sbb
shl
scas
mov
test
inc
sub
add
xor
imul
popa
jo
nop
jmp
push
sub
pop
xchg
jb
jecxz
sub
and
fisub
test
adc
add
daa
lods
add
jo
mov
jmp
or
mov
dec
ja
inc
and
ja
mov
ss
and
dec
cmp
xor
push
ins
les
ins
inc
repz
xor
pop
add
inc
fs
in
sbb
ins
in
ins
jmp
jmp
pop
adc
sbb
sbb
cmp
shl
or
push
in
ficom
int3
cdq
or
adc
xchg
out
nop
sbb
xor
pop
sbb
mov
cmp
into
mov
popa
xchg
mov
push
xor
in
inc
push
lds
push
or
mov
mov
adc
popa
add
out
add
push
adc
jae
addr16
or
or
test
or
mov
mov
and
mov
mov
pusha
push
cmp
cld
cmp
add
pop
popa
and
scas
push
bsf
js
jne
push
mov
cmp
xor
aad
mov
add
gs
les
dec
sbb
(bad)
dec
push
sbb
pop
dec
cld
mov
jmp
ret
push
pusha
sub
retf
sbb
or
mov
adc
sti
sbb
xor
hlt
or
dec
nop
fdivr
add
movs
out
xor
inc
push
fcom
daa
or
sub
and
mov
mov
ja
xor
addr16
add
push
(bad)
nop
cmp
hlt
lahf
pop
mov
adc
(bad)
call
movs
or
xchg
test
xchg
pushf
adc
inc
popa
and
jg
imul
mov
loopne
sbb
push
jecxz
sub
dec
push
xor
mov
fstp
adc
mov
sub
dec
xchg
sbb
sbb
adc
fwait
cmp
mov
adc
adc
jg
pusha
out
mov
test
sbb
jnp
data16
pop
push
add
xlat
arpl
rol
xchg
mov
mov
ins
mov
out
pop
retf
call
push
xor
outs
add
and
mov
rol
push
or
pop
sub
jne
sbb
test
mov
in
add
das
(bad)
dec
std
xor
cmp
cmp
je
ds
dec
mov
pop
int3
push
sbb
mov
ror
sbb
adc
cs
pop
inc
cld
pop
jbe
sbb
add
mov
data16
(bad)
fbld
sbb
jno
push
fst
push
fsubrp
pop
inc
inc
xor
in
es
mov
adc
lock
neg
cmp
jmp
lock
mov
sub
cdq
mov
push
jp
clc
cmp
fsubr
jbe
bound
(bad)
pop
je
out
sub
sbb
jge
test
scas
adc
push
or
xlat
jae
test
shl
loop
inc
adc
cmp
inc
or
leave
test
mov
xchg
or
adc
das
aas
ret
cmp
jl
sbb
(bad)
mov
cld
jmp
jle
mov
sub
enter
loop
adc
frstor
mov
cmc
mov
add
nop
add
loopne
sbb
movs
mov
push
sahf
ins
test
jl
cmp
jmp
pop
pop
fbstp
and
xchg
stc
rcl
push
push
pop
test
sar
pop
dec
jne
sbb
ret
xchg
inc
add
int
sbb
inc
sahf
add
inc
popa
add
adc
push
or
test
mov
or
aaa
mov
inc
into
jmp
pop
add
mov
lea
jmp
inc
cmp
jnp
ret
or
pop
add
adc
jne
sbb
leave
sub
stc
std
jle
test
add
sbb
or
adc
hlt
jecxz
psrld
je
xlat
or
call
scas
in
adc
and
or
sub
xchg
sahf
popf
or
cmp
push
mov
dec
jne
ret
xchg
imul
enter
es
inc
js
xchg
shl
sahf
jmp
pop
jle
mov
(bad)
shl
(bad)
pop
cwde
or
sub
dec
enter
sbb
(bad)
xor
popa
mov
or
add
xor
adc
in
bound
mov
pop
dec
dec
mov
sub
jg
dec
mov
dec
inc
jne
clc
js
dec
fidiv
pop
push
and
fisttp
fimul
inc
les
outs
inc
and
popf
and
jmp
lahf
js
xchg
add
mov
push
ja
dec
mov
and
xchg
push
fwait
in
mov
cs
jmp
sub
js
add
mov
xchg
inc
jne
fucomp
push
imul
iret
dec
add
add
dec
push
rol
or
mov
or
xchg
sub
or
sbb
bound
xchg
ret
mov
(bad)
push
dec
lds
movhps
out
sbb
dec
popa
or
mov
sub
ror
adc
xor
mov
inc
sbb
cmp
dec
push
call
pop
sar
mov
shl
sbb
sub
cld
psubsb
in
cmp
je
jnp
mov
sahf
call
rcl
es
add
dec
push
(bad)
lds
test
data16
cmp
js
adc
sub
add
push
add
movsx
(bad)
leave
je
stos
adc
btr
cmp
jl
adc
push
inc
adc
sbb
jmp
cld
aam
clc
inc
fmul
dec
inc
add
int3
fidivr
pop
fnsave
cmp
je
sbb
push
stos
(bad)
out
push
cmp
ja
and
bt
jb
ja
jo
adc
ret
outs
xchg
xor
inc
cmp
jne
inc
dec
jne
xchg
or
iret
push
enter
xor
adc
xchg
loop
or
rcl
sbb
(bad)
mov
in
ss
xor
mov
sbb
inc
add
pop
push
mov
lock
enter
test
js
xor
or
in
sbb
add
cmp
add
add
mov
cmps
push
mov
cli
icebp
cmp
sbb
popa
ret
mov
cmp
sbb
cmp
inc
dec
cmp
inc
push
dec
or
push
ins
push
imul
push
mov
add
pop
pop
mov
add
add
mov
lods
push
out
pop
inc
sub
mov
sub
mov
movs
sub
add
pop
cmp
aas
or
xchg
mov
ins
adc
rcr
(bad)
bound
fs
mov
xchg
sub
sti
das
adc
pop
inc
test
je
gs
dec
jl
push
fimul
daa
push
push
adc
into
add
ins
les
(bad)
mov
xor
or
jle
pop
xchg
fwait
inc
or
and
dec
push
push
adc
jle
(bad)
and
(bad)
iret
mov
inc
cmp
sub
add
or
xor
add
adc
push
sbb
cmp
out
out
test
pop
mov
push
sbb
push
int3
push
cmp
sti
ret
xchg
add
inc
retf
and
loope
(bad)
adc
ret
add
cdq
in
in
and
xor
and
cwde
inc
or
sub
mov
mov
fistp
in
mov
cmp
add
sbb
movs
jmp
jns
sub
and
jae
and
add
aaa
and
lock
gs
daa
aam
jne
pop
or
add
sub
mov
mov
sbb
pop
jo
into
mov
pushaw
mov
inc
cmp
cmp
(bad)
mov
jns
mov
shr
out
loopne
adc
pop
push
inc
loope
mov
(bad)
push
jb
mov
lea
sub
xor
faddp
repnz
sbb
and
and
ret
inc
jg
xor
xchg
ins
xchg
and
push
xchg
retf
nop
jl
lods
mov
dec
mov
inc
jno
pop
ror
mov
in
out
mov
loopne
lahf
jns
jg
push
or
ret
xor
jne
inc
pop
hlt
jnp
jo
popf
push
sub
and
add
data16
add
fnstsw
and
xor
pop
pop
jnp
call
leave
ins
xor
or
clc
mov
cmp
mov
cmps
xchg
xchg
push
icebp
fcomp
loopne
jb
push
mov
add
pop
add
in
or
clc
ja
ins
movs
fisttp
in
inc
cs
cmp
dec
jmp
dec
rol
jae
out
pop
add
add
(bad)
push
clc
pop
and
cmp
popa
inc
or
sub
inc
pop
enter
sub
push
add
sub
dec
popa
jbe
sbb
shl
xor
data16
test
movs
js
popa
mov
outs
mov
fdivr
adc
(bad)
mov
sub
and
pop
pop
jb
lock
inc
mov
(bad)
push
cli
hlt
mov
or
sbb
sbb
push
mov
fs
(bad)
adc
push
add
lock
cwde
enter
adc
sbb
fistp
fisttp
inc
and
push
clc
inc
pop
lea
scas
into
fmul
inc
or
sub
sbb
mov
sti
cmp
push
adc
pop
and
ins
pop
das
mov
iret
pop
push
ins
and
cwde
push
mov
rcl
fdecstp
xor
xchg
mov
sysret
shr
dec
push
sub
jb
dec
je
jmp
jb
movs
cmp
adc
mov
mov
jo
pop
jo
(bad)
clc
je
outs
data16
xchg
mov
mov
pop
rol
loope
pop
fistp
retf
cmps
or
cmps
sub
push
test
and
and
and
pop
xchg
sub
dec
mov
xchg
icebp
lock
add
push
sub
or
sbb
sbb
mov
mov
cmp
cmp
push
mov
sub
sbb
xchg
push
xchg
and
mov
mov
movs
dec
jb
arpl
in
ins
repz
jbe
inc
add
pop
jno
cs
push
push
add
push
lds
pop
test
inc
jb
mov
fisub
sub
repz
push
arpl
clc
dec
shl
adc
sub
ja
daa
fisub
je
(bad)
dec
clc
sar
add
adc
clc
jp
and
bound
or
cld
dec
adc
gs
push
imul
adc
pop
push
mov
jns
mov
mov
arpl
add
adc
lods
in
adc
shr
mov
adc
cmp
fdivr
sahf
push
cld
lock
pop
in
pop
pop
mov
cmp
jne
inc
shl
cmp
aam
sbb
in
jb
pusha
lea
fmul
jns
inc
dec
popf
sub
mov
popa
jns
xchg
inc
mov
sbb
or
adc
lock
ror
jb
fadd
jb
fwait
cld
cmp
ficom
xchg
enter
jbe
inc
stos
and
outs
sub
xchg
(bad)
sbb
nop
inc
jne
clc
and
jns
sbb
loope
fwait
cmp
pop
jecxz
jo
xor
mov
jmp
(bad)
xor
or
loopne
fs
je
ss
inc
adc
ds
and
int
mov
cmp
or
pop
dec
cwde
or
push
pushf
add
call
add
loop
pop
or
xchg
ficomp
dec
mov
scas
jl
mov
(bad)
sub
dec
or
mov
sti
or
loopne
mov
cmp
popa
mov
scas
mov
inc
jl
add
adc
push
xor
inc
in
add
or
mov
js
imul
add
sar
mov
pusha
mov
pop
dec
xor
xchg
out
mov
les
adc
mov
xchg
int3
nop
inc
jmp
adc
inc
cmp
xchg
push
fld
pop
cwde
es
cmp
mov
jno
mov
test
adc
or
jmp
mov
dec
mov
or
jne
es
sbb
test
push
imul
add
mov
das
add
movs
jmp
mov
fldpi
cdq
mov
mov
gs
clc
jae
lods
fnstenv
mov
pop
outs
xchg
ret
or
push
enter
les
inc
pop
movs
fisttp
pop
adc
(bad)
out
xchg
fcmovnbe
ror
cmp
mov
in
inc
(bad)
loopne
adc
mov
test
xor
fbld
out
fmul
mov
or
cmp
fwait
pop
popa
mov
call
mov
in
and
xchg
cmp
adc
and
in
mov
jo
adc
loop
add
lods
sbb
iret
mov
enter
ja
mov
and
hlt
xchg
test
pop
sub
inc
xor
sub
sub
mov
cld
and
mov
cmp
hlt
inc
sbb
leave
add
pop
inc
in
sub
clc
outs
cmp
(bad)
jl
add
sbb
xor
cmp
fcom
adc
jmp
add
push
out
cmp
cld
fdivr
ja
and
nop
cmp
add
mov
lock
daa
ret
and
in
dec
and
je
fs
sub
mov
hlt
mov
lahf
scas
push
pop
test
movs
aad
or
xchg
fcmovb
cmp
pushf
mov
jecxz
inc
inc
dec
scas
out
mov
sub
into
adc
test
cmp
inc
xchg
int3
out
or
pop
xor
xor
(bad)
ret
push
or
inc
mov
movs
ja
push
jmp
mov
xchg
inc
mov
nop
xchg
test
sbb
not
pop
xchg
push
clc
clc
nop
jbe
xchg
push
jmp
xor
mov
lock
loopne
frstor
push
push
jg
and
push
and
inc
xchg
lahf
sbb
bound
pop
pop
jmp
pusha
fs
leave
and
mov
pop
dec
push
mov
dec
push
xchg
and
lock
mov
push
pop
cli
popf
loope
adc
dec
sahf
inc
adc
adc
and
cdq
aam
and
jl
sbb
scas
xchg
add
loop
push
jp
mov
call
dec
leave
and
push
faddp
mov
int
xchg
inc
jne
scas
fist
imul
push
xor
or
xor
sub
mov
dec
and
fld
test
aaa
mov
sub
mov
mov
adc
mov
xor
dec
cmp
or
sub
mov
lea
imul
and
add
out
jg
(bad)
xor
cmp
mov
xchg
pop
inc
les
push
inc
hlt
xchg
popa
inc
nop
adc
xchg
and
lods
inc
jmp
fsub
movs
adc
or
adc
jmp
test
inc
xor
test
or
jne
adc
ficom
ins
js
daa
xlat
loope
or
xlat
sbb
xor
sti
inc
and
add
push
xlat
hlt
movs
scas
push
mov
cmc
jecxz
xchg
lock
or
out
pop
cmps
xchg
hlt
adc
add
lahf
es
add
mov
adc
add
fnstcw
imul
and
imul
loopne
jmp
jne
sbb
cwde
add
push
addr16
mov
js
push
int
inc
push
adc
jb
mov
mov
xchg
cmp
jne
xor
xchg
or
bound
xor
js
or
or
nop
loope
add
or
je
push
ins
pop
shr
jae
xor
add
mov
out
push
or
cmc
test
jne
dec
aas
ins
cwde
imul
aam
cmp
add
jnp
mov
add
xchg
out
and
push
mov
aas
(bad)
xlat
cmp
jne
test
or
int
jb
sbb
aaa
push
add
push
push
cs
sub
cmp
xchg
scas
mov
cmp
mov
pop
add
pop
dec
jae
pop
cmps
push
shl
and
sub
dec
pop
arpl
fld
xor
clc
push
inc
stos
dec
push
out
sub
aam
daa
inc
mov
cmp
fiadd
jle
jns
pop
adc
shr
adc
ins
or
sub
xchg
or
push
sbb
push
sbb
mov
jb
test
loopne
mov
pusha
hlt
(bad)
adc
adc
xchg
mov
fisubr
arpl
and
fcom
inc
and
and
enter
sub
pop
fcomp
pop
pop
adc
xor
xchg
test
ror
rol
adc
pop
inc
xchg
imul
and
sub
lea
inc
xor
(bad)
fistp
add
lock
xchg
mov
lock
(bad)
loopne
pop
push
fld
in
jnp
iret
pop
ror
mov
aaa
sub
mov
inc
dec
ror
mov
and
dec
push
fadd
in
and
clc
push
js
js
call
jle
je
jg
mov
(bad)
jmp
or
test
(bad)
mov
push
jge
lea
mov
dec
cwde
xor
or
lahf
pusha
xlat
or
repz
shr
xor
mov
out
xchg
push
inc
out
repnz
shl
push
adc
aas
fimul
add
push
mov
repnz
call
(bad)
mov
inc
or
or
inc
outs
sbb
scas
jg
mov
ficom
mov
mov
(bad)
push
or
lock
shl
pop
mov
shl
sbb
xchg
sbb
outs
add
sbb
and
inc
cmp
mov
sbb
or
nop
mov
sbb
adc
pop
jo
dec
push
fiadd
xchg
xchg
repz
shr
mov
mov
mov
push
lea
cmp
pop
dec
xchg
inc
hlt
shr
jbe
or
cmp
mov
and
sbb
push
jg
jl
call
jns
and
add
cmp
neg
dec
inc
jge
pushf
cdq
pop
fcomp
clc
jle
inc
pop
ficomp
sub
outs
outs
shl
test
and
adc
add
dec
adc
rcl
or
xchg
inc
and
pop
mov
jmp
shl
dec
pusha
in
clc
retf
or
rcr
mov
rcl
inc
push
jge
or
jle
or
add
dec
out
pop
sbb
arpl
sub
cmp
sti
jo
(bad)
mov
adc
syscall
sbb
lock
dec
ret
pop
out
mov
shl
sbb
ins
fld
or
shl
jae
fnsetpm(287
add
or
fidiv
xchg
in
ins
(bad)
aaa
xchg
cmp
push
retf
imul
adc
cld
cmp
div
and
pop
mov
inc
mov
jo
jecxz
and
sub
xchg
xlat
shl
pusha
dec
push
je
sbb
out
data16
das
pop
mov
loopne
pusha
mov
mov
xchg
cs
call
add
add
sub
outs
cmp
sbb
add
scas
jne
sbb
nop
and
pop
(bad)
js
retf
jne
bound
xor
xor
push
mov
dec
aaa
test
jecxz
cwde
add
dec
mov
xchg
fisttp
adc
arpl
and
lock
pop
loop
mov
movs
div
dec
pop
outs
xchg
retf
xchg
or
and
add
and
mov
sbb
imul
xchg
pop
push
popa
inc
iret
aas
cmp
lock
jbe
or
sbb
es
pop
ret
add
call
outs
nop
mov
cmp
jmp
jp
das
lds
push
mov
std
dec
xchg
(bad)
cdq
sub
push
adc
repnz
mov
loop
test
in
in
pop
mov
cmps
inc
cmps
leave
cdq
and
stc
pusha
psraw
leave
fwait
inc
dec
pusha
dec
movs
push
clc
jo
jmp
mov
mov
lfs
popa
pusha
cdq
inc
and
dec
mov
frstor
loope
and
cwde
je
adc
jb
pop
cmp
and
mov
(bad)
sar
and
lea
inc
in
pop
movs
sub
ja
pop
das
loopne
sub
jb
adc
(bad)
shl
push
pop
or
test
dec
ret
cmp
(bad)
(bad)
add
in
xchg
adc
nop
inc
adc
mov
and
shr
adc
lea
fidiv
add
inc
stc
cdq
push
pushf
and
pop
rol
shr
mov
sbb
inc
jbe
add
jmp
inc
rcl
inc
jge
enter
inc
dec
es
in
adc
js
push
sbb
jae
movs
fsub
ror
or
and
add
mov
mov
or
clc
inc
add
aam
or
test
fwait
dec
loopne
pop
jae
sub
push
pop
cmp
ds
or
xchg
pop
add
xchg
push
jae
mov
in
and
je
dec
or
adc
add
fiadd
jmp
test
xor
cmp
xchg
ret
pop
pop
mov
cmp
mov
repnz
cmps
jno
jo
bound
ja
enter
xchg
or
ret
(bad)
xchg
pop
popa
mov
or
jp
mov
sub
pop
test
mov
rol
inc
add
iret
pop
adc
in
pusha
dec
mov
add
or
lods
sub
outs
loope
pop
pop
scas
jnp
stos
mov
std
xchg
cmp
jge
data16
dec
sub
adc
lock
jp
add
mov
add
mov
or
lea
adc
cmp
lock
push
push
jne
mov
pop
aam
inc
adc
jg
or
mov
mov
add
mov
imul
jecxz
dec
fadd
push
clc
sbb
ins
je
dec
mov
cmp
jno
test
scas
xor
mov
(bad)
jo
sub
jnp
jle
or
rol
lods
xlat
test
push
add
lds
ret
and
add
push
or
and
cwde
add
inc
add
sub
call
jne
mov
add
mov
xchg
or
js
icebp
es
cmp
inc
(bad)
popa
ds
jno
adc
or
cld
jae
mov
pop
mov
adc
or
sbb
(bad)
lods
sbb
adc
gs
pop
xchg
or
dec
xchg
loopne
push
(bad)
not
xchg
add
scas
daa
gs
xchg
cmp
mov
test
bound
and
and
(bad)
stos
jl
mov
adc
sbb
pushf
sbb
inc
stos
or
sub
dec
shr
add
cld
push
push
mov
cli
and
call
sub
adc
push
and
jno
adc
rcr
pop
fnsave
(bad)
bndldx
pop
xor
ret
pop
fcmovu
fild
mov
dec
shl
jo
add
inc
sub
dec
sahf
pushf
or
daa
add
adc
lods
xchg
pop
daa
and
pop
xor
lahf
add
or
outs
jo
imul
xchg
dec
push
mov
cmp
mov
aad
rcr
ret
lahf
aad
push
rcr
jne
outs
call
sbb
test
jb
push
pushf
daa
pop
add
add
ja
(bad)
jmp
adc
aam
jne
outs
and
int
mov
in
inc
sbb
mov
cli
shl
sub
inc
mov
inc
fs
addr16
mov
shr
add
sub
push
adc
add
push
aaa
not
inc
neg
mov
loopne
push
ds
leave
fdivr
lods
and
xor
scas
das
add
(bad)
jmp
ret
pop
(bad)
xor
fsubr
add
xlat
fmulp
fsubr
inc
fcomp
add
imul
loope
test
add
pop
sub
mov
push
jno
cwde
sub
jmp
sub
fcom
pop
inc
lahf
mov
in
inc
call
sbb
cmp
adc
push
cwde
or
pop
inc
jg
push
cld
xchg
or
clc
push
and
outs
or
mov
ins
jne
ins
es
shl
xchg
cmp
dec
repnz
xchg
inc
imul
sbb
jbe
jecxz
cmp
adc
mov
pop
(bad)
ss
call
sub
or
adc
sahf
mov
aas
in
pop
imul
rcr
ja
in
call
sbb
cmp
sub
(bad)
dec
xchg
push
cdq
(bad)
daa
mov
loopne
and
nop
fldenv
outs
cld
outs
dec
or
lea
adc
(bad)
mov
fild
cmp
xchg
sub
das
rol
ret
add
or
inc
inc
sbb
and
fst
sahf
shl
pop
push
nop
inc
jo
stos
mov
xchg
(bad)
or
imul
or
inc
push
cdq
and
xlat
fidiv
xor
retf
adc
jbe
sbb
loopne
adc
pop
(bad)
mov
int
or
adc
sbb
mov
xchg
mov
sub
in
xchg
lahf
or
pop
jg
and
es
fwait
mov
sub
cmp
pop
mov
pop
out
dec
adc
ret
xlat
mov
rcl
push
jo
clc
mov
sub
jge
add
adc
push
pop
loopne
inc
add
icebp
imul
js
adc
imul
ds
mov
sbb
sbb
add
add
push
adc
xchg
inc
push
push
cmp
mov
cmps
and
jo
clc
retf
cmp
pop
pop
arpl
test
jns
pop
test
add
and
mov
pop
push
inc
mov
test
dec
push
fisubr
pop
int3
push
inc
retf
pop
add
call
dec
movs
xor
lahf
rcr
sub
dec
(bad)
outs
adc
xor
test
xchg
push
pop
lods
mov
pushf
or
les
push
rcl
popa
shl
adc
cmp
es
ja
fxch
test
enter
sar
and
push
add
push
push
or
jne
enter
add
out
loope
adc
mov
repnz
jne
inc
adc
mov
cmp
add
xor
ins
pusha
or
sbb
mov
xor
pop
rol
fnstsw
in
sbb
movs
fmul
cwde
sbb
or
arpl
movs
push
inc
xor
rcl
ins
inc
clc
popf
dec
cmp
xor
leave
xor
mov
inc
jmp
pop
adc
cmp
mov
adc
mov
pop
mov
inc
mov
rcr
pushf
ret
and
(bad)
xor
je
arpl
out
imul
xor
inc
ja
ja
scas
add
into
hlt
and
and
call
add
mov
mov
mov
push
xchg
pop
cmp
adc
call
xchg
xchg
sti
xor
loopne
or
cmp
cs
jge
adc
popa
mov
js
or
or
fisttp
cs
test
ror
mov
xchg
pop
mov
jecxz
mov
mov
lods
retf
and
retf
mov
js
jbe
mov
add
ja
mov
test
(bad)
adc
sub
ret
jmp
cmp
dec
mov
daa
and
push
mov
ret
(bad)
pop
das
mov
dec
xchg
(bad)
dec
mov
shl
loopne
stos
cmps
cmps
fistp
dec
mov
or
or
dec
ins
stos
dec
push
mov
xchg
adc
outs
mov
sub
inc
mov
add
jae
popa
jmp
lods
cld
or
sbb
add
mov
inc
cmp
mov
and
adc
in
cmp
push
pop
xor
mov
mov
dec
mov
xchg
xchg
shl
dec
sub
mov
aas
ins
clc
adc
add
js
pushf
and
and
cmp
sbb
das
fldenv
js
shl
je
or
mov
mov
sahf
fcom
movs
les
arpl
pop
push
pop
arpl
fs
cmps
(bad)
rol
inc
outs
mov
jg
pop
jnp
pop
add
jge
add
inc
or
cmp
mov
or
or
xor
not
and
jecxz
icebp
ss
int3
ret
mov
mul
nop
mov
add
call
cmp
les
adc
stos
and
push
adc
xor
popf
mov
les
cld
sub
sbb
ret
xchg
cld
ror
push
push
imul
(bad)
push
xor
adc
sub
push
jmp
in
xchg
sbb
sbb
pop
cdq
or
mov
xchg
popa
and
mov
hlt
adc
iret
push
pop
mov
fnstsw
dec
sbb
adc
pop
sub
or
pop
dec
sub
retf
jno
dec
sub
add
or
(bad)
(bad)
xchg
mov
popa
mov
in
and
xor
out
sub
or
xor
push
sub
mov
inc
push
in
xor
fs
adc
je
rcr
pop
in
or
mov
or
inc
pusha
or
adc
or
repnz
adc
add
div
add
sub
sub
daa
fadd
loopne
pop
or
popa
bound
sbb
ror
enter
div
add
xchg
pop
and
ret
and
mov
in
cmp
je
adc
fmul
(bad)
xchg
inc
or
lods
ffree
xchg
mov
or
lods
xor
das
stos
sbb
dec
jmp
mov
xchg
add
jmp
mul
or
inc
sub
mov
ret
cmp
mov
not
rcr
aam
cmps
in
adc
fwait
add
jno
adc
mov
sbb
push
xor
fisttp
cwde
loope
lock
stc
mov
or
sub
xor
lods
jge
dec
mov
pop
aaa
adc
test
xor
and
or
add
loop
lods
sysret
int
ret
jp
fsubr
dec
arpl
pushf
fsub
out
or
add
mov
rcl
mov
inc
add
xchg
add
dec
xchg
xlat
rcl
repnz
mov
cld
scas
or
rcl
dec
sbb
cmp
mov
jmp
cmp
sbb
mov
inc
push
sbb
sub
xchg
cmps
and
ret
call
sub
sar
mov
js
and
jge
popa
sub
xchg
jb
xor
lods
aam
int
test
clc
cld
hlt
adc
xor
and
das
(bad)
push
add
test
das
and
pop
mov
jmp
aam
jb
les
inc
or
imul
and
hlt
(bad)
addr16
or
sbb
add
gs
xchg
or
adc
loope
pop
jb
or
and
push
sub
retf
mov
adc
lahf
adc
xchg
pop
adc
inc
mov
out
or
mov
fidiv
sbb
rol
add
xchg
pop
add
ret
jns
and
or
sbb
dec
repnz
sar
(bad)
jo
not
pop
shr
sub
push
cmp
das
sbb
in
and
or
xor
test
mov
push
sub
or
pop
cmps
adc
cmp
clc
sub
or
dec
clc
adc
jmp
mov
sbb
add
movsx
out
lahf
dec
xor
mov
sub
sub
dec
cmps
daa
cmp
mov
in
ins
addps
ret
cdq
(bad)
adc
out
mov
jae
push
out
ins
fstp
push
mov
jne
mov
and
test
mov
pop
ret
sub
pop
popa
pop
fdivr
or
les
adc
adc
leave
adc
dec
push
retf
dec
dec
add
mov
arpl
not
mov
push
push
cs
or
es
sar
pop
bound
and
xchg
jmp
xor
stos
push
ins
mov
and
jmp
push
xchg
xor
jle
in
es
pop
(bad)
pop
adc
cmp
mov
add
inc
xor
(bad)
lods
and
fnstenv
test
sti
inc
push
clc
jge
or
cmp
add
push
or
dec
sub
inc
push
out
jo
push
push
or
das
in
push
retw
not
not
scas
pop
sti
or
push
rep
mov
dec
cmp
xchg
mov
sti
popa
inc
jmp
adc
lock
mov
mov
scas
lock
mov
add
mov
or
sbb
sbb
jl
push
btr
inc
ficomp
mov
cwde
outs
mov
out
js
push
fld
or
icebp
outs
and
dec
xchg
mov
pop
shr
add
cmpxchg
adc
leave
stos
shr
in
inc
and
inc
mov
add
popf
pop
outs
outs
push
cmp
fld
jg
push
inc
(bad)
lock
pop
and
(bad)
cmp
cmps
hlt
nop
inc
and
xor
and
(bad)
sbb
pop
loope
data16
adc
add
or
cmp
mov
mov
gs
pop
mov
xlat
clc
jge
sbb
mov
pop
xor
lods
dec
repnz
cmp
enter
adc
and
mov
xchg
lea
or
hlt
inc
cmp
daa
add
add
clc
ret
mov
pop
gs
push
dec
sub
sbb
add
adc
push
mov
pop
fcmovne
push
in
repz
mov
leave
inc
imul
loop
retf
test
mov
mov
je
aam
mov
adc
push
ret
jns
call
daa
mov
push
mov
pop
repnz
xor
and
mov
xor
cmps
in
ret
les
test
xchg
mov
xor
push
int
inc
fadd
js
mov
mov
popa
inc
cli
sub
mov
jmp
adc
js
stc
xchg
push
(bad)
inc
icebp
xor
inc
push
cmp
and
sbb
mov
or
cmp
mov
arpl
push
ss
gs
adc
jp
pop
adc
xlat
xchg
rol
loop
aaa
xchg
jnp
inc
pop
pop
mov
xchg
fcmovnb
pop
xor
push
push
aas
cmp
mov
pop
ret
loope
adc
aam
scas
outs
enter
(bad)
or
push
cli
sub
inc
cdq
ficomp
mov
lods
enter
retf
lahf
pusha
ret
cmp
mov
xor
addr16
xlat
push
shl
fcomp
enter
popaw
xchg
into
and
mov
jno
sbb
push
rol
test
out
cmc
and
clc
movs
dec
and
outs
rcr
and
sub
add
jo
aad
jmp
mov
fdivr
jp
fnstenv
mov
sbb
xor
jbe
jmp
sub
outs
xor
shl
mov
adc
sar
addr16
push
mov
dec
ret
sbb
fldenv
xlat
int
sub
lock
fidiv
call
xor
adc
(bad)
mov
lods
sbb
pop
imul
push
mov
dec
pop
lds
arpl
xor
and
loopne
and
xchg
(bad)
mov
mov
and
sub
or
je
push
sbb
fwait
test
or
sbb
call
fistp
jecxz
sub
push
loope
rcr
add
lahf
or
aam
push
fsubr
pushf
stos
jo
mov
xchg
cmp
pop
clc
mov
jge
pop
hlt
js
inc
bound
xchg
ret
mov
cld
sbb
into
sar
adc
retf
mov
in
and
push
add
lea
xor
test
add
movs
call
(bad)
movs
xchg
test
and
test
mov
bts
jmp
pop
add
jo
push
or
ret
xchg
inc
or
inc
sbb
mov
pushf
sbb
mov
sbb
pop
ret
daa
imul
inc
mov
ins
ror
loope
xchg
adc
add
int3
add
hlt
add
push
mov
lods
push
call
and
fbstp
adc
mov
sbb
(bad)
mov
push
jb
movs
dec
jb
addr16
jbe
sub
inc
out
cmp
jb
jae
rol
push
fsub
or
ja
ret
ja
adc
pop
add
add
pop
push
inc
jbe
loopne
inc
les
add
dec
cmp
sub
xchg
rcr
push
mov
or
xchg
bound
mov
inc
sub
or
out
push
mov
adc
(bad)
pop
lods
lock
mov
mov
push
adc
push
mov
add
movs
out
dec
ja
adc
pop
cli
les
push
daa
outs
sub
and
scas
shl
retf
shr
and
leave
das
pusha
repz
sub
les
pop
mov
pop
xor
shl
push
test
sub
call
adc
add
jnp
or
push
xor
dec
sahf
ja
jmp
mov
cmp
repz
mov
in
outs
retf
ret
in
jecxz
pop
pop
leave
sub
bound
adc
add
leave
xchg
sbb
or
sbb
ret
(bad)
mov
out
ror
xchg
jmp
das
pop
push
adc
add
rcr
mov
xchg
and
xchg
sbb
pop
or
pop
lods
sub
mov
xor
add
aam
or
dec
dec
movs
hlt
mov
inc
imul
in
push
mov
sbb
cwde
mov
ret
ret
sub
push
push
daa
xor
aam
add
push
and
out
mov
aad
aad
dec
cmp
or
inc
(bad)
es
inc
dec
or
inc
push
push
clc
mov
inc
push
call
cmp
rol
adc
(bad)
aam
xchg
ins
sbb
aad
push
mov
dec
inc
in
xor
dec
ror
mov
clc
outs
sub
dec
inc
push
push
cmp
pushf
and
inc
call
jmp
sbb
(bad)
enter
add
push
fst
adc
in
cmps
sbb
cmp
test
push
inc
sbb
inc
and
retf
push
add
ficomp
test
sbb
adc
mov
or
mov
jmp
adc
adc
inc
jl
das
dec
loopne
add
pop
inc
and
push
sub
add
pop
jg
cld
sbb
ins
inc
scas
call
(bad)
mov
or
push
ret
pop
cld
inc
sub
xchg
adc
add
clc
je
dec
movs
nop
sbb
sub
inc
mov
dec
cld
xor
ror
in
imul
arpl
enter
push
clc
mov
lea
mov
jo
jne
add
push
cmp
cmp
add
xchg
lea
push
out
adc
fdiv
mov
clc
push
cmp
clc
stc
dec
test
sbb
call
inc
inc
and
ret
inc
mul
mov
sub
aas
sbb
xor
inc
mov
push
xchg
jb
mov
popf
and
ja
loop
fld
xor
push
pusha
stc
mov
das
neg
test
jl
outs
mov
mov
adc
jne
lss
fld
ss
push
sbb
ror
mov
adc
and
or
cld
mov
pop
adc
fs
push
xchg
fdivr
cmp
and
push
js
adc
xor
mov
(bad)
outs
xchg
ins
adc
js
push
daa
pop
cld
not
ret
call
imul
pop
dec
jecxz
es
jmp
leave
push
adc
iret
popa
push
mov
cmp
in
sub
addr16
add
fstp
dec
or
dec
clc
retf
mov
sbb
or
inc
adc
cmp
cdq
cwde
add
int3
sub
adc
xchg
lock
in
jne
(bad)
(bad)
in
xlat
shl
mov
pmuludq
add
and
jg
sbb
adc
jl
or
add
ficomp
adc
jg
mov
push
dec
fist
add
add
mov
fs
pop
and
cmp
je
daa
xchg
ins
sar
mov
xchg
push
cwde
or
imul
fisttp
push
shl
es
pusha
getsec
or
(bad)
pop
mov
add
mov
pop
mov
or
push
aam
js
pusha
fsubr
les
mov
mov
aam
add
xor
xor
cmp
addr16
or
fdivr
mov
cs
sbb
(bad)
push
pop
mul
xchg
add
dec
mov
push
sbb
imul
mov
adc
fstp
sbb
ret
adc
and
call
in
shr
stc
outs
jnp
test
and
fidivr
add
add
(bad)
nop
out
push
cmp
sbb
fadd
push
cmps
ror
bswap
pop
sub
mov
xchg
sbb
mov
nop
dec
sbb
sub
add
xchg
xchg
mov
das
mov
adc
jl
mov
sub
mov
(bad)
pop
push
sbb
test
fsubp
test
test
stos
aaa
cmps
les
nop
pop
dec
or
mov
lods
dec
rol
mov
mov
jo
pop
mov
data16
pop
adc
adc
cmp
loopne
(bad)
sbb
add
aas
cmp
xchg
(bad)
push
loopne
js
mov
ret
clc
mov
add
push
push
rcr
mov
ds
sar
cmp
pop
dec
xor
mov
or
pop
leave
inc
xor
sbb
mov
push
ja
loopne
xchg
loope
adc
dec
add
popa
and
jle
ficomp
push
movs
adc
inc
ficomp
or
je
ror
je
dec
outs
sbb
int
iret
sbb
mov
or
mov
push
rol
adc
dec
push
loope
mov
push
loope
xor
add
or
adc
sbb
mov
fild
push
int
jp
addr16
rcr
adc
sbb
sub
stos
call
cwde
dec
and
or
sti
shr
push
xchg
push
mov
add
loop
rol
jmp
pusha
das
cmp
mov
jo
sub
mov
fs
adc
es
sti
stc
mov
mov
or
addps
(bad)
leave
sub
mov
jns
out
loop
into
xchg
mov
test
jecxz
fsub
pop
shl
inc
nop
pop
pop
rol
iret
mov
loopne
mov
push
sub
mov
push
in
lea
lods
rcr
adc
cld
es
dec
sbb
test
dec
jne
mov
jl
xchg
lods
adc
call
lods
jmp
sti
push
adc
adc
cmp
sbb
fild
mov
push
je
dec
test
enter
in
sbb
xchg
out
(bad)
sbb
xchg
adc
or
add
adc
add
inc
imul
dec
js
test
inc
and
lods
je
test
sub
lds
scas
mov
add
push
std
xchg
(bad)
xor
sub
nop
leave
mov
std
adc
jnp
stos
push
jg
lea
imul
aad
into
ds
inc
mov
test
sub
dec
nop
ret
pop
jne
or
inc
or
fmul
and
ss
loopne
cmp
popa
adc
fistp
mov
sbb
or
or
sahf
jno
pop
xor
data16
addr16
out
ret
sbb
and
pop
nop
sbb
adc
stc
adc
jle
les
cs
shr
or
shl
leave
cmp
mov
es
dec
dec
sub
and
xchg
clc
xchg
adc
xchg
or
dec
add
popa
and
add
movs
sub
or
and
or
xchg
push
mov
and
aam
mov
sbb
xor
mov
inc
sbb
pop
pop
ins
cmp
jne
movs
xchg
inc
sbb
movs
jmp
and
sbb
dec
(bad)
pop
xchg
mov
adc
loop
popf
loop
(bad)
shr
or
test
mov
gs
adc
dec
(bad)
adc
sub
adc
mov
pop
adc
adc
ja
call
cmp
data16
test
adc
dec
dec
lock
jp
xor
adc
aam
fdivr
and
(bad)
or
jl
in
and
sbb
mov
ret
jo
fisubr
movs
dec
popa
scas
out
mov
add
shl
xchg
int
lock
inc
xchg
les
pop
push
aad
lock
ds
je
outs
jo
sbb
in
aas
push
xchg
lea
pop
fist
out
inc
shl
aaa
mov
inc
pop
inc
not
xchg
push
cs
dec
pop
or
xchg
fistp
and
js
inc
add
cs
cmp
jne
daa
clc
cs
cmp
and
jne
movs
sbb
call
dec
pop
adc
add
adc
push
xchg
and
pop
scas
or
in
sbb
ja
ret
or
data16
pop
dec
in
cmp
xor
frstor
and
in
sbb
add
mov
inc
dec
jne
xor
les
xor
jns
stc
in
sub
call
xchg
inc
add
mov
pop
adc
cmp
xchg
jnp
sbb
jmp
sbb
inc
stos
and
js
fdiv
or
call
pusha
jne
daa
daa
adc
or
dec
xor
push
addr16
cdq
adc
sub
leave
aas
push
mov
adc
xor
imul
je
pop
mov
pop
cmp
jg
push
dec
cmp
(bad)
xlat
add
gs
das
imul
mov
sbb
clc
dec
mov
pop
mov
or
sbb
and
jmp
dec
push
sbb
push
clc
scas
icebp
and
sub
popf
ret
test
dec
adc
sahf
sub
cwde
inc
cmp
sbb
lea
mov
jmp
sub
xor
dec
pop
sub
sbb
inc
sar
dec
xor
dec
cmp
and
popa
hlt
adc
sub
ja
sub
aaa
sbb
jp
or
ret
push
inc
and
outs
mov
push
popa
daa
adc
or
inc
loop
rol
adc
or
mov
iret
ins
xor
dec
aas
or
inc
in
mov
sbb
aas
or
cmp
push
cwde
and
adc
dec
movs
das
ds
pop
out
and
dec
inc
arpl
ret
xor
jmp
push
ficomp
jle
adc
es
cmp
repnz
mov
int
iret
pop
pop
js
or
mov
add
or
dec
xchg
add
adc
fwait
pusha
clc
(bad)
loopne
test
inc
inc
mov
xchg
test
dec
sar
sbb
xchg
ja
ja
pop
out
inc
push
sbb
das
cld
pushf
adc
mov
movs
clc
and
ja
call
push
add
mov
inc
mov
out
ja
xchg
cmps
ss
dec
and
xchg
dec
(bad)
fisubr
daa
loope
inc
inc
loopne
push
inc
je
dec
push
cmps
mov
dec
out
ins
xlat
xchg
adc
loope
mov
repz
cmp
mov
rol
xchg
add
mov
push
mov
dec
mov
test
ror
cmp
jne
mov
adc
inc
mov
frstor
leave
xor
mov
(bad)
adc
pop
mov
and
mov
or
inc
fs
xor
xor
test
hlt
inc
mov
add
jmp
test
xor
adc
enter
adc
or
push
jnp
sbb
retf
rcl
dec
sub
add
(bad)
adc
into
dec
movs
in
add
stc
and
cmps
or
add
enter
cmp
ss
sbb
push
aam
push
or
add
clc
adc
add
or
pop
xchg
imul
jmp
adc
xchg
hlt
pop
gs
push
retf
adc
cmp
add
(bad)
inc
inc
lods
ss
pop
fild
stc
sub
xlat
push
mov
mov
pop
cs
mov
loopne
jae
inc
in
or
pop
push
retf
pop
adc
add
(bad)
test
hlt
add
adc
out
sbb
dec
fs
clc
jne
lods
lods
mov
movs
loop
jg
or
xchg
in
pop
mov
adc
dec
mov
out
hlt
jle
mov
cld
fild
dec
or
fwait
or
ret
sti
scas
loopne
or
adc
sub
movs
js
fmul
mov
clc
imul
cmp
pop
loopne
push
(bad)
xor
les
mov
cmc
push
test
lock
push
outs
push
sti
stc
sbb
and
or
sbb
test
(bad)
movs
sbb
xor
sbb
loopne
sbb
dec
in
call
mov
rcl
push
mov
mov
repnz
xor
push
mov
mov
add
ret
push
dec
sub
daa
aam
mov
push
jge
neg
repz
add
repnz
push
inc
sub
movs
jnp
movs
sub
adc
sbb
ins
xchg
dec
sbb
and
sub
repnz
mov
(bad)
daa
or
pop
mov
mov
xchg
outs
aas
clc
das
loope
pop
xchg
adc
outs
or
inc
and
call
and
pop
pop
dec
push
fs
shl
sbb
lock
cwde
lods
inc
add
adc
xchg
(bad)
pop
sub
ror
push
ret
aaa
mov
sub
(bad)
cmc
pop
dec
or
lock
push
or
mov
popf
test
jl
mov
outs
call
in
mov
pop
or
add
adc
inc
add
pop
add
mov
cld
pcmpeqb
xor
es
mov
pop
or
cld
dec
test
stos
adc
sub
mov
push
inc
adc
lock
jo
neg
shl
mov
aam
push
daa
adc
shl
mov
jbe
pop
daa
mov
sub
adc
push
js
push
loopne
add
mov
sub
retf
or
lea
jge
adc
(bad)
loopne
icebp
and
cld
push
xchg
mov
ins
add
into
jl
loopne
push
jo
call
sti
inc
call
pop
cmp
xchg
mov
loop
loopne
adc
shl
jecxz
(bad)
push
jb
out
scas
in
addr16
dec
xchg
lea
xor
jecxz
aaa
mov
scas
(bad)
div
mov
mov
dec
movs
adc
movs
pop
aaa
idiv
test
retf
popa
cdq
js
shr
fwait
inc
hlt
push
test
jmp
or
mov
popa
adc
pusha
aad
leave
popa
test
add
ja
cwde
mov
jb
cdq
mov
test
adc
mov
mov
mov
xchg
hlt
pop
mov
cld
out
and
xchg
xchg
imul
sbb
aas
cmp
pop
push
adc
cmp
cwde
cld
add
test
push
enter
mov
adc
adc
out
jae
mov
adc
stc
nop
cwde
idiv
and
sti
dec
ret
lock
cmp
leave
lock
push
xchg
mov
adc
enter
mov
inc
jecxz
inc
ret
inc
ficom
mov
push
adc
and
mov
mov
js
loopne
das
es
pusha
ud2
dec
push
scas
push
inc
movs
adc
jns
cmc
stc
fadd
jns
jle
sbb
pop
movs
clc
inc
mov
stc
addr16
inc
leave
pop
mov
fimul
and
pop
cli
les
dec
les
mov
sbb
add
dec
cmp
pop
pop
pop
das
inc
mov
sbb
adc
fucomp
add
push
ds
push
add
xchg
adc
xchg
mov
mov
mov
xchg
push
aam
lods
inc
out
iret
ret
jecxz
or
sar
mov
add
push
out
adc
shr
repnz
mov
xchg
mov
cmp
dec
or
push
cmp
pusha
in
sbb
fst
push
push
mov
sbb
in
pusha
inc
rcr
std
xor
xor
xor
inc
jle
mov
mov
inc
cmp
pop
push
xor
aam
push
xor
mov
into
pop
pop
inc
sub
jmp
add
inc
push
out
mov
(bad)
push
mov
add
movsx
out
jl
mov
clc
or
mov
xchg
xor
outs
and
adc
idiv
add
les
inc
inc
in
pop
and
mov
mov
and
or
ds
loopne
stc
div
lea
mov
jg
aad
lock
repnz
fadd
inc
in
lds
sub
icebp
mov
push
ret
cld
jb
mov
neg
lea
cmp
enter
or
dec
sbb
stc
sub
lods
aas
sbb
imul
lea
movs
clc
mov
cmps
jle
sbb
adc
or
mov
push
dec
lea
shl
push
push
adc
mov
mov
inc
ror
add
pop
je
mov
sbb
stc
nop
lods
adc
jo
mov
push
inc
loope
in
inc
pop
inc
dec
lock
scas
sbb
pop
mov
mov
call
sub
and
adc
mov
cmp
sub
cmp
cli
xchg
mov
push
ja
nop
out
push
(bad)
pop
mov
pop
addr16
xchg
push
jp
xor
dec
jmp
cld
adc
mov
push
mov
or
call
neg
add
scas
adc
or
jg
inc
or
inc
or
fs
or
jg
clc
add
cmp
and
or
add
es
mov
mov
adc
adc
jle
arpl
add
pusha
or
(bad)
frstor
push
sbb
push
push
or
mov
xor
sbb
jnp
fist
or
loop
push
pop
add
adc
push
es
leave
and
adc
ds
or
xor
inc
add
mov
div
sbb
adc
dec
cmp
bound
sub
ds
out
cmp
rol
loopne
or
dec
gs
and
pop
sub
and
and
push
aam
sub
adc
movs
dec
loopne
jbe
jp
pushf
xor
stos
sbb
fbld
jmp
jmp
mov
add
pop
jae
push
mov
or
shl
loope
or
mov
mov
loope
pushf
jp
mov
inc
sbb
repz
adc
inc
and
push
xchg
ret
inc
push
mov
fwait
sbb
pop
adc
add
or
cmp
add
adc
(bad)
sub
add
aam
sbb
aas
jb
adc
arpl
add
sbb
cdq
push
(bad)
adc
popa
push
out
sbb
js
push
sub
sbb
jge
adc
adc
sub
leave
les
adc
push
pop
call
push
sub
js
inc
cmp
ins
pop
ficomp
push
fidiv
jnp
dec
push
cmp
inc
fstp
dec
sub
mov
jno
xor
push
xor
and
sbb
and
jp
xchg
adc
ja
push
dec
inc
loopne
into
dec
adc
in
in
fsub
shr
inc
inc
cmp
adc
fistp
lock
sbb
and
dec
adc
dec
push
aas
jge
add
lods
sub
dec
push
in
push
int3
adc
les
push
sbb
inc
xchg
fst
clc
xor
int
and
adc
inc
and
clc
mov
inc
or
pop
retf
jo
sub
test
or
cli
mov
or
inc
sub
pusha
shl
push
sbb
int
push
cwde
imul
repz
add
push
or
enter
jbe
jge
cmp
push
cs
mov
pop
mov
jae
add
(bad)
push
push
sbb
jo
or
lock
and
xor
hlt
stos
arpl
lock
cdq
sbb
cmc
dec
and
lods
ror
jo
cdq
or
add
sbb
pop
or
lea
dec
inc
xchg
retf
fwait
pop
sbb
dec
je
shl
mov
addr16
out
xor
test
data16
jo
jbe
das
out
push
push
sbb
loop
adc
jb
jle
pop
cs
add
clc
sub
jp
mov
sbb
adc
or
mov
aas
cwde
jne
jmp
pop
inc
xor
ret
jg
and
mov
lock
or
cdq
sub
pop
cmc
xchg
xor
or
or
mov
out
fisttp
or
add
add
fidiv
test
inc
out
es
inc
adc
dec
sbb
pop
out
adc
adc
fsubp
mov
mov
in
out
pop
cmp
mov
loope
add
pop
push
jge
xchg
in
pop
stc
jns
or
int3
hlt
adc
rol
popf
ss
adc
push
call
sbb
cmp
int3
seta
cmp
push
pop
pusha
and
ror
mov
mov
sbb
sbb
pop
jne
inc
or
push
add
sub
into
or
cld
sbb
xchg
adc
add
ins
out
or
push
dec
push
or
pop
call
mov
pop
jns
adc
ret
lods
sub
dec
mov
fwait
cmps
sbb
dec
jl
cdq
and
xchg
jecxz
xor
pop
cdq
sub
pop
or
xor
jo
fistp
inc
je
adc
aaa
dec
sub
stos
dec
sbb
daa
xchg
pop
add
divps
sbb
or
cmp
bound
sbb
outs
or
sbb
lds
repz
fwait
and
jne
adc
jecxz
rol
sub
jb
or
shr
je
out
out
add
add
jnp
inc
xor
xchg
and
add
iret
or
jae
add
jp
add
xor
aas
into
cmp
mov
push
pop
adc
cmp
xor
ss
mov
or
and
hlt
push
push
jmp
add
es
cmp
inc
ret
jmp
jno
fs
arpl
sbb
xor
inc
mov
lds
mov
inc
fcmovb
addr16
cdq
mov
out
sbb
imul
mov
jmp
sub
cwde
inc
inc
outs
out
mov
ss
add
cmp
pop
adc
xlat
inc
xor
sub
in
stos
mov
push
(bad)
cmp
mov
push
cmp
add
fnstsw
adc
ror
icebp
rol
sbb
sub
inc
cmp
aas
sqrtps
push
xchg
inc
lahf
lock
or
movs
mov
outs
jo
jle
pusha
mov
inc
int3
mov
push
call
push
aas
mov
fcom
push
push
cmove
add
dec
jne
adc
mov
push
push
and
push
cs
dec
movs
sub
inc
inc
jl
or
leave
push
adc
cmp
cwde
or
or
fcmovb
inc
int
jb
sub
adc
or
lods
fmul
jbe
shl
bound
pop
adc
pop
xor
inc
mov
fmul
mov
cmp
inc
push
pop
cmp
int3
out
add
aad
lock
sub
inc
pop
jecxz
push
or
push
popf
sub
and
sub
push
daa
pusha
imul
mov
sahf
fnstcw
xor
es
js
inc
add
sub
push
hlt
sbb
xor
adc
adc
sbb
addr16
inc
jle
add
jecxz
pop
inc
data16
add
fdiv
je
data16
mov
mov
adc
add
jne
fcomp
sub
sub
pop
sbb
fst
add
dec
es
push
xor
inc
add
ja
add
ds
push
fsub
push
pop
jbe
lods
add
xchg
add
pop
jne
sub
and
enter
test
je
push
mov
test
cmp
data16
sub
sar
mov
add
dec
js
pushf
retf
cmp
cwde
push
bound
aaa
pop
and
or
dec
sub
mov
and
and
dec
sbb
push
push
jbe
call
ss
mov
loop
jne
mov
lea
inc
pop
xor
call
pop
push
inc
and
inc
das
cwde
jg
sub
sub
jne
mov
fs
pop
and
imul
mov
out
or
enter
or
pop
test
add
push
bndldx
push
icebp
dec
stos
xor
or
mov
je
cmp
ds
xchg
adc
dec
ds
add
adc
mov
mov
pop
pop
ins
mov
mov
popf
sar
or
nop
jb
lds
cmp
imul
clc
xor
add
cwde
rol
cdq
dec
add
xchg
xchg
push
dec
dec
mov
aaa
jns
or
dec
in
cli
and
dec
sub
loope
jae
shl
add
push
bound
hlt
or
dec
add
movs
in
sbb
add
aad
add
leave
ins
paddw
or
mov
mov
xchg
test
scas
mov
inc
inc
or
pop
jl
ret
xor
test
movaps
adc
(bad)
cmp
push
clc
add
sbb
rcl
push
xor
push
(bad)
arpl
cwde
adc
sub
outs
inc
inc
imul
add
cmp
bound
jae
call
sar
sub
call
xchg
imul
add
inc
adc
clc
shr
inc
ror
inc
push
or
imul
xor
pop
dec
add
dec
cmp
mov
aaa
scas
or
and
mov
adc
fidiv
mov
test
add
shl
adc
ret
push
jno
addr16
sbb
push
mov
pop
fisubr
and
outs
out
arpl
mov
push
jmp
imul
jge
pop
popa
or
sar
mov
and
jno
dec
enterw
ss
loop
pop
mov
ret
adc
jb
and
retf
das
jp
inc
pop
aas
ds
cmps
cld
sbb
push
out
xchg
sub
test
xor
jmp
add
push
bound
inc
jo
lods
imul
inc
cmp
cmp
mov
call
inc
ja
dec
mov
shl
xchg
add
and
inc
jmp
jne
push
pop
ins
add
dec
add
add
or
mov
push
add
add
cmp
in
fbld
and
pop
jb
add
push
mov
sub
mov
or
popa
xor
pop
cli
push
(bad)
cmp
loopne
sahf
std
test
xlat
mov
inc
xchg
mov
sub
out
jmp
stos
jecxz
adc
scas
in
or
sbb
cmp
add
dec
int
push
push
bound
int3
rol
std
repz
imul
inc
stos
sahf
inc
mov
ja
(bad)
fstp
cwde
ss
inc
jbe
jmp
and
sub
cmp
dec
sahf
push
pop
add
ins
mov
dec
push
and
add
stos
mov
push
pushf
pusha
dec
leave
jne
test
push
mov
dec
int
push
add
xchg
jnp
mov
push
ja
stos
sahf
inc
pop
in
add
or
cmp
adc
mov
sub
xor
les
retf
mov
add
cmp
leave
sar
mov
sysret
inc
test
dec
or
mov
and
fldenv
pop
cmp
cld
and
or
pop
add
push
sub
test
inc
mov
xchg
mov
lods
add
push
rcl
add
add
xchg
cmp
and
jae
ret
(bad)
or
inc
test
push
lods
inc
adc
dec
add
mov
or
and
adc
xchg
mov
adc
arpl
hlt
push
mov
shr
hlt
fbstp
ins
adc
cmp
add
(bad)
adc
add
fistp
pop
stos
add
cmp
rcl
ss
imul
jge
neg
daa
(bad)
and
ffreep
jae
sub
or
movd
inc
sti
loopne
mov
pop
arpl
pop
dec
or
cld
add
outs
adc
inc
jno
fcmovnb
cmp
jl
mov
rcl
fiadd
adc
mov
pop
or
(bad)
hlt
xchg
pushf
adc
add
(bad)
mov
loopne
cmp
dec
sbb
or
je
add
pop
es
mov
add
rol
add
xor
shr
mov
inc
push
repz
cmps
mov
sub
push
in
sar
xor
and
or
xor
popa
rcl
or
hlt
inc
stc
inc
mov
mov
daa
mov
cmp
sub
mov
outs
sub
or
or
call
shr
mov
adc
sub
add
cmps
adc
and
(bad)
adc
outs
pop
dec
jo
push
outs
rcl
dec
lock
test
test
inc
sub
outs
jb
sbb
jno
leave
adc
and
inc
test
rol
mov
or
sub
shl
sbb
or
or
dec
repnz
add
mov
test
out
add
or
inc
add
fimul
mov
ins
add
push
test
icebp
lods
dec
out
xor
mov
popa
cmps
push
(bad)
leave
or
test
sub
jp
dec
rol
xchg
es
or
adc
(bad)
std
jne
xchg
mov
jbe
pop
xor
jbe
add
rol
pusha
add
int3
and
je
inc
or
shl
out
add
or
push
inc
sbb
xchg
mov
dec
push
movs
jmp
clc
add
or
clc
fmul
pop
jmp
adc
inc
and
outs
inc
adc
adc
or
cmp
je
adc
not
add
dec
cmp
je
(bad)
aam
xor
sbb
cmp
dec
adc
loop
xchg
ja
sbb
das
add
adc
dec
repz
movs
out
sub
int
jp
loope
sbb
arpl
xor
or
adc
inc
lahf
jno
or
sbb
shl
push
and
push
inc
adc
out
jb
add
push
inc
or
jmp
and
push
sub
rol
call
pop
pusha
lods
cmp
arpl
data16
out
pop
lea
(bad)
aad
sub
add
sbb
pop
sar
sbb
imul
outs
pop
jecxz
retf
mov
popf
adc
mov
js
sbb
adc
dec
pop
add
lods
sbb
pop
js
pop
fs
(bad)
and
lea
rcr
movs
xor
fwait
out
gs
push
push
push
adc
adc
xchg
add
outs
jecxz
movs
arpl
cmp
mov
dec
jne
mov
icebp
add
mov
jp
les
out
lds
in
push
lock
fdivr
jmp
mov
js
jmp
adc
(bad)
jge
pcmpeqd
sbb
aam
sub
jmp
loopne
mov
popf
test
imul
cld
or
xor
dec
ret
test
jbe
fwait
ins
jo
or
in
and
adc
sub
sbb
push
jae
adc
sub
ds
pop
pop
(bad)
add
test
lods
xor
pop
cmp
gs
test
test
inc
fmul
ds
push
mov
sahf
lea
jmp
js
std
jo
leave
adc
mov
mov
mov
movs
mov
fnstsw
xor
dec
mov
push
mov
scas
push
or
scas
push
movs
and
add
jb
jp
fsub
or
and
test
inc
in
bound
mov
push
cs
in
lods
int3
push
mov
lea
cwde
test
call
inc
imul
push
(bad)
lock
mov
in
out
add
aaa
cmps
mov
shl
pop
xchg
inc
sub
lods
movs
aam
cmps
fld
shl
fwait
mov
jbe
sub
mov
ds
mov
fmul
pusha
pop
inc
cmp
inc
cmp
jbe
mov
rcr
inc
sub
sub
xlat
les
cmps
sbb
mov
sbb
cmp
imul
test
lock
jbe
xchg
add
and
arpl
fdivr
add
inc
push
mov
jp
inc
pop
sub
pop
loope
scas
dec
test
js
jl
or
js
adc
sub
sub
adc
sbb
and
(bad)
int3
imul
or
addr16
or
jl
ds
mov
inc
mov
mov
mov
push
les
loopne
mov
mov
pop
shr
mov
(bad)
push
cld
mov
les
mov
rol
fmul
mov
(bad)
mov
sub
loope
sbb
add
cmp
je
push
dec
ja
mov
jmp
scas
push
hlt
shl
lds
mov
jb
ficom
loopne
cli
les
enter
fist
sub
hlt
adc
adc
add
scas
sub
ret
call
and
sbb
and
or
(bad)
ins
in
jo
lods
xchg
mov
loopne
out
out
arpl
nop
add
xchg
fsubr
or
xor
shr
loopne
es
into
popa
cmps
cld
and
jmp
ds
stos
jnp
jb
in
push
cli
mov
ret
je
dec
xchg
into
push
mov
push
dec
pop
mov
xchg
and
mov
add
call
jp
test
repz
mov
sbb
mov
sub
loope
loopne
ja
and
jb
push
dec
cmps
and
sti
pop
fadd
jecxz
mov
pop
push
jo
ins
mov
(bad)
lock
or
das
xchg
inc
add
push
in
call
push
jmp
cdq
mov
fmul
into
cmp
push
inc
sbb
xlat
cmp
xchg
clc
mov
jg
jp
xor
test
(bad)
or
push
rcr
retf
scas
pop
inc
clc
aad
or
in
and
add
je
popa
or
aad
jns
add
pop
loopne
inc
push
enter
inc
jmp
and
add
out
mov
and
cmp
aad
mov
push
adc
cld
mov
inc
sub
loopne
add
sbb
xchg
dec
or
pop
sti
jmp
or
add
sbb
add
adc
add
sub
jge
push
mov
pushf
cmp
jnp
pop
loopne
loopne
test
sbb
imul
fmul
mov
sub
fdivr
push
lea
pop
push
lods
push
mov
mov
ficomp
out
inc
daa
push
sbb
dec
xchg
in
push
jl
mov
adc
test
mov
movs
inc
push
add
aad
inc
daa
adc
or
or
imul
or
pop
inc
or
cmp
es
adc
out
pop
pop
or
dec
cld
xchg
and
pop
inc
cmp
sbb
mov
ret
adc
xor
xchg
sub
xchg
(bad)
sti
xchg
sbb
lods
stos
cmps
inc
sub
xor
popa
jne
mov
ss
adc
mov
cmp
mov
jp
retf
ror
and
and
mov
lea
add
mov
dec
std
fimul
sbb
dec
lock
adc
add
inc
iret
adc
cmp
into
test
icebp
pushf
loop
jnp
fnstenv
mov
dec
retf
sbb
fwait
mov
leave
mov
ins
sbb
mov
dec
and
push
sbb
aas
fst
lea
push
push
pop
mov
shl
sbb
cmp
jg
sub
adc
sub
gs
(bad)
mov
inc
adc
xor
adc
fiadd
fmul
jae
jns
adc
stc
mov
sbb
lea
shl
jge
adc
aad
lods
loop
adc
stc
and
mov
sar
cmp
or
pop
add
stc
dec
in
imul
inc
xor
mov
inc
push
sub
pop
xchg
inc
jp
nop
inc
inc
fwait
pop
jl
fst
inc
add
movd
dec
push
nop
cs
js
cmp
dec
and
clc
pop
push
dec
(bad)
jle
in
fnstcw
ret
dec
ja
push
cs
iret
dec
or
imul
jl
push
pop
add
out
out
jb
cmp
inc
scas
pusha
nop
pop
push
inc
push
push
sbb
push
aaa
xor
loop
rcl
inc
fldz
push
jge
add
pushf
add
test
push
mov
cmp
(bad)
js
adc
and
and
sbb
push
jg
rol
mov
or
adc
dec
inc
sub
push
adc
dec
in
outs
or
sub
sub
into
push
sub
sub
cmps
or
and
dec
lds
or
push
lock
or
push
outs
in
xchg
pop
lahf
jae
dec
lea
pop
pop
add
add
sub
out
nop
xchg
pop
cmp
push
add
adc
add
das
mov
pop
rcl
add
xchg
adc
push
cs
push
add
cmp
add
sbb
ja
adc
jns
arpl
mov
cmp
cmp
and
jne
test
push
mov
test
data16
mov
pusha
xor
mov
push
mov
mov
jmp
dec
jl
test
and
ror
shl
fild
xor
add
rol
jp
fwait
xor
pop
dec
adc
add
sbb
in
sbb
mov
mov
mov
add
or
mov
push
rol
nop
xchg
push
or
fs
cmp
(bad)
movs
push
mov
test
popa
(bad)
pop
rcr
ret
mov
xchg
push
sbb
in
ss
xor
pop
push
call
or
repnz
add
aam
or
nop
out
cmp
jle
(bad)
mov
nop
inc
adc
aaa
sti
push
add
cmp
inc
pop
mov
pusha
mov
dec
(bad)
lahf
cs
adc
cmp
out
aam
mov
push
mov
out
xchg
dec
nop
add
adc
inc
mov
mov
dec
sub
sbb
adc
push
mov
or
in
out
and
mov
jge
jg
test
inc
mov
test
jl
xor
sub
and
nop
add
dec
inc
nop
xor
or
xor
sub
xor
outs
jp
pusha
or
jmp
daa
je
test
adc
sbb
enter
imul
mov
mov
stc
cmp
jl
je
aas
inc
sbb
test
push
push
sub
sbb
xchg
cmps
loopne
ss
test
sbb
mov
retf
sbb
inc
add
add
fidivr
loope
xchg
repnz
inc
rcl
dec
sbb
mov
sbb
loope
jne
clc
shr
mov
jmp
call
mov
cmp
jg
repnz
fcom
and
je
mov
push
cwde
push
or
pop
shl
nop
mov
cmps
daa
js
out
fsub
jne
sbb
pop
test
add
add
ret
jl
mov
xchg
jp
adc
mov
call
data16
and
mov
cmp
lock
ficomp
mov
mov
ror
adc
add
mov
jg
dec
mov
sbb
cdq
or
dec
sub
ror
and
lock
mov
jl
ret
mov
or
clc
sbb
or
dec
add
pop
jmp
jp
lods
cmp
xchg
repz
cs
push
pushf
adc
adc
in
push
lea
ret
add
add
sahf
sub
add
adc
enter
loope
(bad)
pop
loope
add
mov
adc
sub
jl
jmp
(bad)
adc
fadd
sbb
add
or
xchg
jno
and
or
push
retfw
cmps
into
and
mov
retf
repz
sbb
push
mov
xchg
dec
fsubr
sub
sub
or
clc
loopne
mov
mov
cmp
adc
and
add
pushf
xor
jnp
cwde
loope
scas
ins
aam
cmp
xchg
rcl
add
into
add
into
sbb
inc
inc
lds
retf
sub
mov
popf
jecxz
mov
add
adc
inc
jl
pop
cld
test
(bad)
jo
call
jl
sub
cmps
cmp
jmp
aaa
pop
adc
inc
outs
test
in
adc
fdiv
or
sbb
lea
leave
in
sbb
mov
xor
add
outs
(bad)
adc
sub
jl
cmps
leave
scas
push
sub
aam
sub
xchg
leave
adc
out
mov
in
dec
sbb
dec
jge
mov
add
jne
aam
jae
sub
adc
push
inc
daa
push
inc
aad
loopne
je
(bad)
pop
mov
movs
out
call
mov
push
cmp
jge
mov
cs
ret
js
jge
jge
data16
add
dec
fdiv
jae
rcl
into
hlt
mov
in
lods
push
scas
push
sbb
ins
outs
inc
fldenv
mov
push
xor
pop
loopne
dec
aad
jmp
jnp
mov
push
adc
loope
push
scas
or
add
sbb
mov
add
or
dec
push
outs
push
popa
sbb
xchg
xchg
cmp
push
push
dec
jecxz
stos
cmp
cmp
sbb
cld
rcl
mov
int3
jo
mov
jecxz
pop
sub
adc
cmps
adc
movs
leave
ret
fcom
outs
sar
lds
shl
or
mov
mov
loopne
mov
cmp
cmp
clc
or
pop
sub
mov
sar
mov
mov
sti
sbb
sub
jmp
dec
or
xchg
shr
xor
jo
inc
outs
inc
sbb
loop
cwde
jg
jae
push
jne
in
add
xor
in
test
adc
das
lahf
add
mov
mov
xor
push
movs
add
outs
xor
xor
add
adc
call
sub
xchg
or
adc
in
xchg
and
xor
loope
fild
mov
nop
cmp
sbb
add
dec
lock
cmp
sbb
sub
out
and
es
ja
dec
mov
stc
or
add
nop
xchg
fild
lahf
dec
in
or
inc
inc
jb
jo
inc
rol
sbb
sbb
not
add
inc
add
xor
and
das
dec
dec
outs
cmps
iret
mov
add
mov
dec
fist
stos
popf
dec
xlat
sbb
fimul
nop
or
fisttp
pop
leave
adc
nop
xchg
dec
push
add
add
adc
cdq
(bad)
leave
inc
push
lds
pop
pop
mov
adc
sbb
leave
inc
jb
pop
mov
in
add
pop
pusha
xchg
out
inc
pushf
cmc
fs
ror
push
pop
leave
pusha
sub
cmc
mov
xor
dec
push
call
(bad)
push
test
in
mov
scas
(bad)
out
into
ins
hlt
dec
lods
or
ret
or
jns
and
dec
out
pusha
fs
sbb
xor
and
mov
es
add
or
fadd
or
cmp
popa
outs
call
fisttp
retf
adc
xor
into
dec
pop
mov
adc
xor
sub
inc
add
std
inc
les
sbb
test
sahf
sub
xchg
lods
cmp
push
cld
inc
cld
inc
cld
add
mov
cmp
fucom
push
sbb
cld
sti
push
cld
addr16
imul
sub
dec
dec
outs
push
pushf
mov
and
sub
xchg
add
in
or
and
in
xchg
icebp
fidivr
loope
dec
cli
pushf
loopne
fs
mov
mov
dec
cld
and
or
sub
loopne
sbb
cs
jmp
or
and
fadd
cwde
in
fdiv
fcomp
or
and
mov
(bad)
push
jno
sbb
in
fdiv
popa
imul
lea
add
inc
push
aam
mov
push
aam
pusha
out
push
jecxz
mov
sar
leave
(bad)
jo
cmc
push
cld
dec
cld
retf
add
sbb
cld
push
cld
inc
cld
push
or
inc
adc
aam
push
jo
xor
mov
xchg
nop
jo
xor
push
imul
rcr
add
ss
dec
mov
scas
scas
add
dec
(bad)
and
sub
push
test
push
add
xchg
inc
enter
repnz
in
push
xor
xor
outs
lock
outs
sbb
inc
xchg
lock
sub
loope
mov
xor
call
clc
dec
dec
arpl
test
(bad)
fdiv
xor
add
jno
sub
test
jns
sub
add
aam
and
lock
retf
mov
ds
in
or
push
test
inc
cmp
push
adc
retf
or
pusha
jo
sub
aam
or
retf
pushf
add
mov
inc
ror
scas
cmp
mov
inc
lahf
outs
adc
xor
jo
cdq
icebp
sbb
lock
lods
aas
jge
push
adc
shl
out
adc
and
and
sbb
jb
or
and
in
mov
sub
mov
leave
sbb
push
push
mov
jle
xchg
cmp
sub
mov
xor
ret
mov
nop
popa
and
push
xor
lea
pop
cmp
xchg
or
stos
call
fwait
ret
push
and
in
cmp
ja
adc
jmp
and
fnstenv
pop
push
sar
sbb
and
jbe
jne
cmp
in
test
clc
daa
rol
shl
dec
cmp
pop
and
push
adc
or
cs
mov
lods
jb
into
add
add
lea
das
ds
adc
add
mov
inc
dec
call
jl
icebp
mov
or
xchg
inc
inc
xor
xchg
sbb
dec
outs
dec
xchg
nop
fisttp
jb
scas
mov
cmp
pop
imul
xchg
loopne
xchg
jne
cmp
in
or
push
mov
or
xchg
js
scas
adc
pop
test
mov
ins
mov
mov
xor
mov
ja
repz
cmp
cmp
jmp
mov
push
pop
mov
mov
arpl
jmp
iret
not
push
or
dec
clc
test
aam
fcomp
and
je
mov
loop
je
std
adc
mov
sbb
dec
jnp
pop
sbb
(bad)
sub
imul
add
test
sbb
push
push
jg
push
jl
pushf
or
gs
sbb
pop
xlat
mov
lea
(bad)
shr
(bad)
inc
cwde
xchg
dec
sbb
dec
call
lods
or
mov
test
retf
mov
(bad)
into
mov
mov
mov
mov
push
or
sub
stos
xchg
fdivr
xor
mov
dec
imul
and
or
and
cmc
mov
add
and
aas
jae
push
sub
jge
add
addr16
repz
loopne
pushf
xchg
or
rol
inc
dec
ror
sub
sahf
ja
sub
pop
jno
xor
addr16
add
pop
js
mov
xchg
int3
cwde
pop
pop
jo
(bad)
in
lock
ret
cmp
sub
cmp
pop
xor
xor
mov
mov
xor
cs
push
cmp
add
sbb
mov
aad
jo
mov
or
lock
dec
hlt
or
push
je
sbb
or
add
test
cmp
push
dec
lods
adc
or
xchg
jo
xor
gs
dec
test
sub
in
inc
or
xchg
or
pop
ror
jno
fs
xchg
and
int3
mov
push
dec
mov
lahf
dec
cmc
pushf
das
jb
dec
mov
or
jl
les
xchg
in
add
fiadd
xor
xchg
sub
push
push
ja
or
or
add
test
(bad)
leave
pop
les
fld
jl
cmp
loope
add
movs
push
sbb
daa
jl
jge
add
xadd
adc
cmp
outs
pop
push
pop
mov
add
jb
scas
mov
inc
mov
cmp
or
call
sub
add
mov
mov
push
ret
cmp
call
or
sub
shl
sub
arpl
(bad)
shr
outs
sub
mov
mov
pop
pop
add
(bad)
or
adc
or
and
shr
bound
leave
pop
or
and
xchg
sbb
jle
dec
mov
scas
hlt
pop
dec
xor
arpl
add
hlt
push
jmp
push
hlt
fbld
hlt
inc
shl
mov
mov
not
repz
push
call
xor
push
fsubr
inc
neg
jne
mov
add
mov
cmc
mov
xchg
neg
js
xor
js
xchg
js
xchg
int
loope
cmp
mov
push
mov
jmp
push
lods
adc
rcl
aaa
test
in
jbe
lods
dec
or
inc
sub
add
enter
add
and
or
add
add
or
xor
and
enter
jo
out
add
test
cwde
in
imul
addr16
and
push
pop
add
adc
ret
and
adc
xchg
mov
sub
add
cmp
and
xor
pop
stos
lea
add
add
mov
add
add
mov
adc
dec
sbb
enter
jno
lea
sbb
mov
add
or
mov
cmps
jg
in
pop
cmps
mov
jnp
pop
and
and
les
mov
dec
pavgw
div
jmp
cmp
in
add
jo
imul
jae
inc
in
inc
mov
frstor
data16
clc
je
or
jmp
in
and
fisttp
push
mov
push
xor
mov
iret
dec
add
addr16
daa
adc
and
enter
add
sbb
sbb
inc
mov
cmps
fiadd
pop
jge
mov
or
mov
mov
sbb
pusha
mov
or
fst
ss
in
aas
es
(bad)
pusha
inc
add
popa
push
nop
arpl
mov
ins
xor
outs
sub
jno
add
int
jb
imul
xchg
int3
cld
sti
push
imul
sbb
nop
fmul
sahf
xchg
pop
in
xchg
fsub
mov
pop
aas
sub
in
and
loop
sbb
call
sbb
loopne
retf
sbb
daa
js
or
sub
mov
mov
pop
out
loop
int3
inc
mov
shl
shr
sub
sbb
fwait
hlt
popf
ja
or
(bad)
push
in
adc
fstp
(bad)
je
shl
es
cmps
(bad)
adc
inc
mov
gs
xor
sahf
cmp
lea
cwde
sbb
repnz
fucom
sbb
arpl
rcl
sbb
pop
add
gs
mov
popa
inc
sub
adc
mov
sub
and
sub
xor
xchg
leave
add
or
xchg
push
das
mov
xchg
int
add
add
or
push
mov
jge
es
add
shl
and
(bad)
out
adc
rol
jmp
xchg
je
popa
lahf
adc
int
push
data16
and
and
aam
int
adc
sbb
dec
ja
out
jl
aas
shl
(bad)
dec
and
xor
push
mov
push
dec
push
inc
mul
and
mov
pop
in
and
and
add
push
pop
sub
xchg
fs
push
movs
sub
add
test
fwait
mov
dec
adc
dec
dec
fist
sbb
sub
dec
stos
lods
xchg
mov
push
sbb
pusha
cmp
xor
adc
inc
or
inc
dec
pusha
sahf
cmps
jns
inc
inc
inc
sub
inc
inc
dec
mov
std
loope
sub
jb
jns
sbb
mov
push
sbb
and
out
add
das
push
jne
or
cli
sub
and
and
sbb
pop
pop
cmp
sub
shr
(bad)
call
nop
xchg
data16
add
mov
mov
push
mov
(bad)
aad
stos
push
js
nop
cmps
cmps
pop
imul
stc
sbb
xor
aaa
or
clc
sbb
xor
sbb
(bad)
push
jmp
loop
xor
rol
(bad)
ja
adc
ror
inc
jl
mov
push
arpl
sbb
push
jmp
ds
sub
push
mov
or
sub
lock
lods
lea
pop
or
imul
lods
adc
sub
shr
push
add
adc
add
xchg
dec
sbb
push
jl
scas
fcom
cdq
adc
gs
addr16
add
nop
adc
arpl
jmp
dec
daa
jl
pushf
into
jno
jae
push
les
scas
or
sub
cmp
sti
or
xlat
pop
aaa
inc
aad
leave
or
xchg
add
mov
add
xor
les
add
cmp
dec
cmp
add
xchg
inc
adc
add
pop
sub
inc
sub
cmps
sub
not
jmp
xchg
push
call
jl
je
clc
mov
(bad)
(bad)
pusha
pop
hlt
pop
daa
pop
xor
mov
test
shl
push
pop
enter
push
test
sub
shl
inc
movs
push
outs
jns
cmp
sub
adc
cmps
ret
or
add
or
jbe
jl
cmp
jb
or
clc
std
shl
or
add
loopne
or
add
outs
fisubr
cmp
retf
mov
cs
(bad)
xchg
mov
jp
in
cmp
cmp
jmp
ret
mov
mov
shl
inc
in
push
dec
cmc
sbb
ss
lea
push
jo
push
lock
xchg
adc
pop
push
sub
sar
jmp
inc
add
dec
idiv
push
xlat
mov
popf
mov
and
sbb
push
ficomp
inc
popa
mov
sbb
mov
retf
push
push
sub
or
mov
push
xchg
add
xchg
xlat
or
or
push
cmp
lea
loope
add
push
dec
je
push
push
xor
add
call
sbb
adc
jecxz
scas
inc
add
aaa
inc
(bad)
xor
hlt
adc
dec
pop
mov
xor
loope
movs
jmp
pop
pop
push
push
sub
adc
xor
adc
arpl
and
dec
inc
dec
add
das
or
int
jmp
sahf
and
adc
inc
xchg
mov
pop
dec
leave
fnsave
(bad)
mov
adc
fldcw
sub
xchg
push
das
sbb
inc
add
pop
mov
imul
pop
aad
shl
daa
xor
adc
lock
push
mov
jmp
mov
rcr
imul
mov
inc
adc
(bad)
adc
or
xor
push
push
cli
test
or
or
push
enter
out
xor
add
ds
cmp
and
jns
sbb
pop
stos
adc
mov
mov
ins
ss
out
inc
add
push
pcmpeqd
js
jns
jp
data16
cmps
jnp
jge
jg
inc
xor
scas
add
push
jb
bndstx
adc
sbb
inc
scas
scas
add
mul
mov
scas
and
jo
mov
arpl
xor
mov
fld
mov
adc
test
data16
jb
enter
cmp
and
xchg
sbb
fnop
sbb
movs
mov
mov
jmp
push
fs
push
mov
mov
call
xor
and
int
jno
jb
pop
sbb
sbb
sbb
and
and
sub
cli
popf
jo
popf
push
call
pop
mov
icebp
int
loope
repnz
push
or
xchg
rcr
push
loopne
sub
sbb
hlt
push
mov
sub
out
fs
cmp
mov
push
jge
dec
adc
sar
fist
inc
arpl
or
bound
cmps
ror
sti
pop
dec
and
pop
addr16
sub
lds
inc
sbb
nop
pop
enter
sbb
or
fs
and
mov
sub
repnz
and
adc
in
out
pop
in
push
add
mov
mov
mov
or
rcl
data16
inc
push
mov
add
rol
xor
or
popa
xchg
push
sar
or
mov
and
push
push
xchg
int
sbb
push
inc
or
dec
push
or
rcl
dec
lock
inc
add
and
add
xor
mov
mov
push
add
mov
ja
pop
in
rol
pop
or
dec
adc
rcr
xchg
xor
sub
inc
add
push
push
sub
and
fadd
push
add
int
lods
dec
add
shl
xor
imul
sub
sub
in
sub
inc
nop
or
dec
xor
sbb
sbb
jb
and
and
jo
fs
push
push
inc
js
fisttp
inc
jo
pop
rol
xor
adc
add
jb
(bad)
push
ret
pop
test
xor
sbb
adc
shl
push
mov
mov
mov
in
adc
or
pushf
or
dec
push
and
dec
dec
mul
inc
pop
sub
push
ins
ret
xchg
das
imul
lods
adc
sbb
movs
and
(bad)
rol
mov
mov
and
and
add
aad
fwait
imul
les
xbegin
inc
rol
comiss
repz
adc
ja
mov
dec
popa
jmp
fist
inc
test
ins
dec
adc
jae
xchg
pop
mov
or
inc
mov
test
sub
frstor
pop
xchg
adc
and
mov
inc
cmp
popa
push
and
sub
mov
rcr
xchg
jb
push
popf
scas
repz
push
lds
xlat
and
sbb
adc
sbb
xchg
out
dec
sub
aas
sub
or
imul
adc
in
sub
icebp
add
out
ror
lods
sub
popf
movs
xchg
jle
(bad)
push
add
xor
push
sbb
in
xor
not
push
push
fdiv
cmp
ds
push
mov
scas
jo
call
push
shl
int3
and
and
mov
test
inc
sbb
sbb
imul
push
and
add
inc
lock
xchg
mov
data16
ins
xor
mov
sub
pop
jno
in
dec
mov
ds
sbb
pop
xchg
int
sti
sub
push
test
verr
clts
mov
sub
(bad)
ror
push
enter
in
leave
push
jb
bound
unpcklps
retf
int3
adc
sti
add
cmp
jae
rol
popa
ret
or
shl
adc
fsubr
jb
pop
(bad)
call
enter
sub
outs
les
adc
adc
sub
push
sbb
ins
in
aad
push
enter
jge
les
shl
mov
jnp
push
or
jbe
fist
(bad)
mov
add
jne
push
xchg
dec
mov
loope
aaa
or
sub
mov
or
retf
add
cmp
je
add
je
adc
enter
popa
jo
aam
gs
cmp
push
sahf
adc
dec
rcl
or
lahf
cld
aam
cdq
dec
sub
add
stc
or
aas
pop
fdiv
adc
push
sub
and
and
not
and
and
jae
adc
inc
and
mov
cmp
imul
cmp
cmp
jmp
dec
inc
fcmovnb
cwde
popa
mov
repnz
test
lods
xchg
enter
mov
inc
cwde
ins
popa
sbb
into
push
jl
das
mov
inc
jns
sbb
cld
cmp
outs
sub
es
mov
cs
xlat
push
cmp
cmp
cmp
(bad)
push
xor
rcl
or
fwait
gs
push
or
dec
push
dec
dec
(bad)
les
ja
fwait
push
inc
and
nop
inc
jl
jmp
outs
jne
bound
mov
mul
out
mov
or
xchg
jmp
xchg
mul
push
or
inc
push
mov
movs
jae
or
movntps
sub
pop
loopne
fwait
xchg
int
xchg
mov
push
pop
add
jmp
nop
mov
in
push
int
in
mov
lock
arpl
mov
inc
mov
jle
xchg
inc
iret
jnp
sbb
push
shr
rcr
aam
ss
sahf
idiv
xchg
push
mov
add
pop
pop
cmp
adc
ins
mov
inc
out
leave
xchg
call
or
enter
cmp
(bad)
cmps
pusha
inc
mov
pusha
pop
daa
jb
fidiv
jle
push
iret
inc
adc
addr16
adc
pop
daa
outs
dec
ins
gs
outs
fs
sti
sbb
out
or
popa
ins
fs
shl
mov
aas
fldcw
mov
loop
mov
dec
lea
jae
dec
nop
lea
test
mov
enter
fwait
push
test
icebp
pusha
fwait
dec
pop
popf
push
fcomp
ret
pusha
js
push
jle
push
or
inc
inc
in
aas
ds
pop
mov
ins
ins
or
icebp
cmp
mov
jne
mov
jg
sub
or
(bad)
add
je
push
mov
lea
xor
mov
and
xor
pop
repz
dec
add
xchg
or
cli
ror
or
jns
fs
add
mov
and
adc
or
add
mov
and
and
mov
dec
pop
mov
pop
js
in
lahf
pop
pop
xchg
xchg
push
xchg
repnz
or
add
xchg
(bad)
fcmove
xor
sbb
sub
push
fdiv
and
int
push
push
mov
outs
adc
push
pop
jo
jno
fimul
push
clc
mov
cmps
push
cwde
jbe
inc
or
dec
jae
sbb
adc
aas
(bad)
fstp
imul
pop
adc
mov
dec
ss
sbb
adc
xchg
or
or
sub
jg
pop
not
xchg
xchg
xchg
mov
out
cmp
es
inc
inc
daa
mov
mov
push
adc
shr
adc
cmp
xchg
cmp
dec
and
or
aam
inc
or
jecxz
add
xor
daa
jl
fld
push
loopne
jge
inc
add
or
mov
xchg
shl
push
cmp
jecxz
and
lock
push
inc
bound
xor
inc
test
add
inc
or
cmp
add
aas
and
int3
xchg
push
pop
hlt
gs
sbb
add
fldlg2
jmp
push
and
cwde
cli
and
stos
or
test
sub
icebp
sbb
inc
popf
mov
push
lahf
pop
mov
movs
loope
aad
push
sub
mov
jbe
jnp
pop
jge
cmp
cmp
jle
lds
loop
outs
dec
and
mov
dec
fcom
inc
jp
sub
nop
fisttp
in
mul
leave
pop
dec
fnstsw
mov
or
inc
out
xor
sub
mov
iret
and
in
ficom
mov
xchg
lea
movs
add
add
push
pop
cdq
xchg
sub
mov
scas
adc
jecxz
add
mov
jo
iret
add
iret
sbb
cmp
mov
mov
sub
xchg
cmp
xor
cmp
mov
and
scas
dec
inc
mov
shl
pusha
sbb
add
ds
loopne
bswap
adc
cdq
adc
push
mov
xor
xchg
cld
sbb
xor
dec
or
add
mov
add
or
pusha
inc
push
jb
xor
or
ror
in
sahf
and
daa
add
xor
div
add
add
inc
dec
inc
ret
and
std
out
push
xchg
ror
ins
fld
(bad)
nop
ja
add
leave
push
les
loopne
mov
xor
int3
dec
adc
shr
(bad)
dec
jmp
ror
aad
sub
jne
cwde
adc
adc
dec
lods
mov
xor
aaa
movq
add
add
mov
lock
cmps
aas
test
mov
mov
hlt
mov
mov
mov
or
inc
cmc
and
push
xchg
movs
adc
dec
adc
adc
movs
xchg
(bad)
dec
sub
lea
outs
adc
sbb
nop
cdq
xor
mov
pop
or
sub
jns
pop
mov
sbb
cmp
add
sbb
cmp
mov
adc
adc
aaa
inc
mov
int
or
inc
movs
jne
cmps
xor
in
xor
and
cmovs
add
mov
inc
aas
(bad)
ror
rol
adc
push
xor
ss
pop
add
stos
pop
mov
xchg
xor
leave
and
arpl
aas
and
pop
mov
fild
fldcw
xchg
rcl
pop
or
sub
imul
mov
sbb
outs
les
cmps
inc
cmp
cmps
aas
pop
fwait
pusha
fmul
mov
and
pusha
sbb
mov
adc
push
fwait
outs
pushf
mov
cwde
in
imul
mov
add
and
or
inc
jo
test
repnz
and
sub
mov
push
imul
outs
in
cmp
pushf
fcomp
lock
push
sub
fcom
test
or
dec
pushf
in
push
call
outs
and
add
vpsllw
mov
mov
mov
or
xor
xchg
xchg
cwde
sbb
or
inc
push
cmovnp
push
lahf
dec
popf
rol
popf
mov
sti
lahf
add
cmps
rcr
stos
xor
xlat
lahf
and
push
enter
test
push
cmp
and
aas
lahf
out
sbb
xor
mov
push
and
jne
int3
mov
mov
(bad)
jmp
dec
add
and
pop
add
push
cmp
inc
loop
ja
out
dec
and
pop
jno
pop
pop
mov
pop
shl
dec
scas
pop
hlt
in
das
ret
fsubr
pop
sbb
out
mov
push
call
inc
adc
adc
inc
jbe
dec
hlt
cmp
and
aas
pop
jecxz
sub
pop
mov
mov
adc
outs
adc
xchg
pop
fwait
outs
cwde
pop
mov
or
adc
add
mov
or
sub
mov
or
out
push
or
addr16
or
cmp
fbstp
dec
(bad)
js
xchg
fnstsw
fidiv
fist
ss
and
dec
and
and
xchg
or
and
mov
pop
jle
add
add
dec
je
push
fidiv
rol
arpl
adc
push
push
xchg
mov
xchg
out
out
je
sub
pop
sbb
jnp
xchg
mov
into
jb
xchg
je
in
xor
es
push
jmp
and
dec
sub
xchg
fnstcw
jae
test
jmp
ins
loopne
and
mov
sbb
outs
cwde
mov
lds
ret
sbb
or
inc
jl
sbb
jle
dec
push
cmp
lahf
fs
daa
xchg
in
enter
mov
dec
dec
ins
test
mov
push
jne
leave
pop
dec
cs
lds
push
or
cmp
in
test
lods
cs
int
push
pop
hlt
dec
repnz
xlat
retf
jbe
jns
xor
sbb
jnp
lock
mov
std
cmp
xor
add
push
sbb
cmp
fst
cdq
add
and
jns
movs
sbb
or
jmp
jg
jb
mov
pop
je
jb
shl
add
jb
nop
and
xor
push
aaa
mov
push
in
daa
lea
in
cdq
clc
inc
sub
and
mov
sub
test
adc
rcl
mov
mov
int
push
sub
sar
jl
pop
mov
sbb
call
div
push
sahf
rcr
jle
xchg
scas
das
add
xchg
sub
aad
mov
pop
jmp
and
pop
cmp
out
add
aaa
push
add
or
mov
mov
jmp
xor
mov
xchg
in
ds
aaa
add
and
jb
xchg
sub
xchg
or
sahf
and
rol
xchg
push
cwde
arpl
arpl
rcl
mov
push
inc
xchg
(bad)
or
jmp
cs
push
add
mov
and
dec
mov
js
push
mov
xor
aad
jb
add
shr
test
shr
or
sbb
cmps
int3
and
cmp
(bad)
mov
je
inc
sub
test
in
movs
add
inc
sub
jns
mov
js
adc
jb
mov
js
sub
mov
mov
mov
push
lea
pop
add
out
lahf
test
adc
ret
pop
les
test
pusha
sbb
push
add
mov
push
add
xlat
das
xchg
shr
or
call
cmps
jb
mov
jne
pushf
jno
cld
sbb
push
push
sbb
jne
jbe
dec
fwait
dec
push
gs
sub
add
dec
int
inc
daa
sbb
xchg
(bad)
rcl
cmc
or
xchg
bound
sub
xchg
(bad)
mov
mov
cmps
test
dec
cmps
ret
(bad)
icebp
and
cwde
stos
test
xchg
movs
push
dec
add
pop
fs
aad
push
call
and
xchg
out
add
jg
push
add
imul
js
push
out
outs
outs
fstp
dec
sbb
je
push
je
outs
out
mov
pop
test
add
add
jl
or
es
xor
push
xor
inc
enter
and
and
je
in
data16
rol
add
dec
inc
pop
les
inc
mov
sub
xchg
je
inc
adc
and
xor
mov
pop
pusha
dec
leave
lock
and
adc
stos
cli
lock
add
pop
pop
cs
das
or
or
or
adc
xchg
jmp
inc
mov
repnz
pop
lods
stos
inc
call
cmp
and
push
ins
push
repz
cmp
xchg
jmp
nop
test
push
xchg
push
call
push
mul
fimul
and
inc
lahf
xor
es
ins
mov
jnp
push
mov
push
jo
stos
adc
mov
pop
or
push
stc
mov
add
add
xor
mov
je
shl
int3
add
adc
(bad)
mov
sub
xor
push
aas
add
aas
pop
or
in
aam
mov
mov
xchg
popa
lods
inc
loopne
dec
lods
jmp
or
mov
ficom
mov
or
sahf
scas
shl
and
xchg
cmp
jmp
out
ds
test
sub
es
mov
lds
inc
or
add
jne
cmp
cmp
scas
push
sbb
aad
and
aad
nop
ret
xor
scas
in
push
inc
xor
sbb
pusha
sbb
or
sbb
jo
pushf
shl
retf
push
mov
imul
scas
fsubr
call
sub
push
jmp
in
mov
cmp
and
retf
sub
lea
mov
xchg
sbb
mov
xor
jb
sahf
mov
add
and
gs
push
jns
push
retf
gs
clc
adc
inc
push
and
xchg
sbb
adc
cmp
push
lahf
cld
add
push
or
and
aaa
sub
adc
out
cdq
nop
inc
ss
aas
fild
adc
xchg
ins
out
mov
test
pop
xchg
add
rcl
fmul
xchg
sub
data16
test
mov
sub
and
add
sbb
and
lea
lea
ror
aaa
xlat
call
xor
ror
mov
pop
sub
adc
out
aam
fmul
mov
mov
push
pop
idiv
cmps
cmp
push
loopne
pop
xor
xlat
inc
push
bound
les
rcl
hlt
rol
retf
clc
je
adc
inc
dec
push
(bad)
or
mov
pop
fdivr
mov
pop
push
bswap
mov
mov
(bad)
sbb
mov
mov
or
add
sbb
inc
and
or
xor
cmps
push
push
mov
mov
movs
js
pop
inc
sub
xor
jl
pop
pop
and
mov
add
and
sbb
cli
xlat
rcr
add
rol
out
push
mov
mov
push
mov
push
bound
mov
shl
mov
pop
hlt
fnstenv
imul
push
add
inc
or
pop
and
sub
loopne
add
sahf
inc
sti
mov
inc
jbe
cwde
inc
xchg
adc
dec
scas
xchg
jge
test
lds
mov
xor
dec
pop
das
xor
es
shl
and
xchg
dec
push
sub
and
mov
inc
or
add
ffree
loopne
adc
dec
mov
mov
adc
xor
mov
sbb
xor
sbb
sub
sub
nop
popa
mov
xor
lds
jae
and
arpl
and
aaa
sub
cmp
and
and
push
imul
sbb
xor
xor
adc
outs
outs
xchg
icebp
add
inc
addr16
mov
(bad)
fdivr
cwde
or
push
xor
push
leave
inc
mov
div
add
daa
lea
into
add
(bad)
sbb
and
fisttp
repnz
mov
mov
xchg
cmp
mov
sub
push
add
jmp
and
dec
sbb
loope
lahf
sbb
test
in
push
cmp
fcom
add
push
sbb
out
(bad)
inc
sub
fs
in
sub
pop
aas
jp
ss
add
pusha
loopne
xchg
cmc
call
retf
or
add
aas
add
xchg
mov
mov
clc
xchg
ror
sbb
and
xor
ins
pop
add
pushf
jae
add
push
or
mov
inc
or
cmp
push
xchg
scas
push
xor
and
xor
mov
stos
add
add
mov
(bad)
sti
pop
movs
pop
sub
mov
shr
push
mov
shl
or
mov
add
in
fistp
jmp
icebp
xor
and
into
idiv
je
retf
jae
sub
fs
mov
push
test
or
mov
jno
ja
loop
fist
dec
adc
fdivp
(bad)
or
out
outs
inc
mov
jge
mov
cmc
mov
mov
inc
pop
pandn
cmp
rcl
cmp
push
push
push
mov
pop
scas
test
idiv
add
or
push
xadd
aaa
jae
xor
(bad)
and
mov
shl
xor
dec
mov
mov
add
psubusb
adc
sub
xchg
aas
inc
(bad)
sbb
sbb
add
stc
adc
add
and
scas
test
add
nop
aas
cmp
pop
mov
add
inc
repnz
add
cmp
adc
aas
inc
cmp
and
mov
add
mov
and
sbb
and
fs
push
pop
pop
es
fs
stos
(bad)
mov
cld
xchg
add
adc
adc
pop
adc
(bad)
pop
nop
jg
sub
cmp
in
sub
mov
shl
xlat
inc
stc
adc
cmp
add
mov
add
nop
aas
cmp
pop
inc
xor
add
add
invd
add
sbb
fld
outs
xor
std
mov
xchg
xchg
mov
inc
cmp
call
daa
xchg
xor
and
or
jecxz
popf
ins
xor
mov
sbb
pop
mov
psubusb
test
aas
inc
(bad)
sbb
pusha
dec
mov
mov
stc
adc
mov
in
daa
mov
test
out
aam
dec
and
sbb
and
cmp
aam
pop
fdivr
lods
repz
(bad)
xlat
cmp
dec
inc
repnz
jl
pop
or
xchg
push
mov
sub
nop
push
fdivr
add
or
xor
pop
aas
cmps
and
xor
add
adc
ds
pop
pop
xlat
or
xchg
int3
or
inc
repnz
sub
add
rcr
test
enter
add
cmp
jg
stc
add
sbb
cld
or
pop
xor
mov
add
pop
nop
jg
sub
xor
add
mov
add
sbb
sbb
jle
ja
add
pop
call
or
inc
mov
dec
and
sbb
mov
sub
sahf
cld
test
dec
nop
mov
push
adc
cmp
push
das
mov
fisttp
mov
fwait
sti
inc
hlt
xor
(bad)
sub
push
cmps
test
arpl
scas
ret
rcr
ret
xchg
iret
push
add
movs
xor
out
xor
push
inc
mov
inc
inc
cmp
hlt
sbb
xlat
xor
push
loop
push
pop
(bad)
mov
lea
dec
adc
je
jecxz
sub
mov
nop
ret
or
int
dec
movs
dec
mov
push
push
dec
lea
fst
outs
rol
and
test
mov
mov
cmp
lea
sub
pop
add
arpl
pop
loope
clc
sub
inc
add
int3
and
sub
mov
mov
sub
out
dec
fsubr
inc
cli
mov
cmp
and
add
dec
push
je
shr
xor
int3
inc
add
mov
inc
inc
or
imul
ror
push
outs
mov
enter
adc
adc
ror
ins
(bad)
jbe
pop
lahf
or
lods
xor
ins
not
cmp
adc
xor
or
in
xor
mov
cmp
ret
xor
or
dec
and
cmp
sub
jle
in
fs
jge
hlt
lock
push
push
hlt
mov
ret
aaa
call
in
loopne
fcomp
int3
enter
pushf
(bad)
sar
mov
adc
nop
sbb
dec
cmp
les
outs
dec
cmp
nop
and
push
cmp
mov
inc
mov
mov
xchg
add
xchg
rol
push
in
clc
dec
push
enter
lds
mov
gs
dec
inc
ins
cld
and
dec
dec
dec
dec
push
dec
cmps
inc
push
inc
or
push
dec
inc
inc
inc
inc
push
push
jg
pop
xchg
inc
push
pop
push
dec
pop
bswap
dec
dec
pop
ins
cmp
dec
pop
jp
inc
aas
xor
dec
je
gs
add
push
rcr
adc
fidiv
add
dec
inc
dec
daa
inc
mov
xchg
inc
dec
pop
pop
xor
aaa
aaa
and
pop
fcomp
inc
mov
gs
dec
push
dec
cmp
xor
xor
retf
scas
xor
or
add
imul
push
inc
push
je
jb
popa
outs
ins
add
and
pop
in
das
data16
cmp
dec
cmps
lock
push
imul
adc
dec
ja
inc
push
pop
inc
aas
pop
sub
lock
inc
dec
inc
pop
add
xlat
inc
add
add
mov
add
or
(bad)
imul
xor
fidivr
add
aas
dec
outs
bound
imul
dec
mov
fistp
add
xchg
pop
in
cmp
add
jb
ins
xchg
(bad)
push
xor
push
dec
inc
dec
ins
imul
jns
push
push
data16
push
popa
xchg
addr16
outs
or
shl
pop
sub
(bad)
push
dec
ja
dec
dec
mov
outs
mov
ss
inc
aas
cwde
inc
inc
xchg
adc
cmp
push
add
lahf
push
dec
mov
pop
inc
pop
dec
dec
xchg
ins
xchg
push
jb
enter
out
push
xor
adc
ss
push
push
dec
jg
pop
inc
aaa
push
ins
out
inc
inc
dec
xor
xor
imul
daa
pop
push
push
dec
aaa
adc
stc
dec
inc
dec
push
call
inc
xchg
js
scas
call
add
xor
jg
imul
jb
or
data16
xor
sbb
inc
pusha
pop
ret
aad
mov
inc
inc
push
push
inc
add
pop
inc
ins
jne
mov
scas
xor
xor
pop
mov
lahf
inc
aaa
xor
pop
ss
xlat
xor
ss
xor
test
pop
inc
or
retf
and
adc
inc
dec
xor
inc
jae
outs
outs
inc
push
dec
push
les
jg
pop
add
pop
rol
push
ja
je
push
push
push
push
inc
out
pop
push
addr16
pusha
jb
out
dec
aas
inc
dec
push
inc
jne
in
ins
add
aas
inc
push
inc
call
jns
ja
dec
push
das
xor
jo
leave
xlat
and
inc
out
pop
ret
mov
dec
push
xchg
dec
outs
jae
fs
arpl
arpl
push
gs
xchg
icebp
jmp
iret
test
popa
cwde
pop
and
pop
shr
lock
daa
jns
imul
rcl
fs
dec
ja
inc
pop
xor
inc
jb
push
inc
popa
jo
pop
pop
dec
push
dec
dec
push
das
push
cmc
sar
ins
fistp
inc
push
dec
dec
inc
dec
dec
inc
or
ret
push
aaa
add
loopne
adc
dec
jbe
cs
xor
inc
imul
daa
cmc
sub
sbb
inc
fs
retf
jmp
loope
(bad)
dec
leave
stc
das
push
hlt
or
popa
inc
xor
dec
add
pop
jbe
rol
push
sub
aaa
jb
nop
neg
jae
test
dec
dec
inc
out
div
outs
outs
add
pop
inc
sub
inc
dec
add
cmp
inc
ja
push
push
jo
push
or
shl
pop
sti
jp
ja
jne
pop
inc
outs
data16
gs
inc
push
daa
les
pop
add
in
(bad)
dec
xor
dec
inc
dec
sub
and
daa
pop
push
dec
stos
sbb
out
je
imul
fs
imul
add
mov
inc
iret
mov
or
pusha
rcr
or
or
xor
cmp
sub
jbe
cmp
dec
dec
mov
jge
push
jne
cmp
mov
inc
loopne
mov
dec
dec
mov
(bad)
xchg
rcl
adc
sub
cmp
ja
add
mov
xor
cmps
jmp
mov
aad
rcr
pop
dec
rol
fadd
xchg
xchg
ror
dec
arpl
or
test
push
mov
clc
mov
sub
xor
inc
inc
outs
(bad)
xchg
ficom
add
cld
or
retf
test
inc
or
bound
inc
jle
or
sar
inc
pop
jns
or
add
nop
add
mov
rcl
nop
add
mov
mov
pop
adc
jmp
sbb
and
push
add
add
outs
sub
adc
dec
cmps
ror
add
rcl
sub
push
fild
pop
add
or
xchg
cmp
mov
sbb
aaa
mov
mov
and
or
rcl
into
rcl
rcl
aam
je
and
stos
sub
inc
lock
push
call
or
pusha
or
xchg
add
aam
add
add
and
add
and
aad
push
xchg
sbb
fnstsw
add
push
pop
pop
inc
rcl
(bad)
add
adc
dec
loop
xlat
aad
inc
jo
pop
(bad)
pop
jecxz
pop
or
lock
(bad)
invd
call
out
and
mov
add
dec
adc
xlat
pushf
sub
nop
jmp
jnp
sbb
push
test
xlat
inc
in
enter
out
add
leave
sub
add
test
jns
add
push
or
push
add
add
and
leave
sbb
or
jecxz
enter
fisubr
jns
xor
sbb
test
ficomp
sbb
adc
inc
enter
(bad)
adc
adc
aaa
push
sub
(bad)
fs
adc
cmp
xlat
(bad)
cmp
sbb
push
aas
aas
fmul
cmp
xchg
or
ret
fsub
add
dec
ffree
push
add
add
add
sub
fnsave
pop
inc
enter
fcmovnu
fs
push
in
ficomp
xor
jb
pop
(bad)
xchg
or
inc
pop
popa
(bad)
clc
or
fild
or
cwde
nop
ret
inc
sbb
nop
cmps
xor
add
fild
pop
inc
dec
add
or
imul
adc
loopne
and
nop
add
nop
xor
loope
adc
aaa
add
adc
and
sbb
push
loop
lahf
xchg
push
and
mov
add
aaa
sbb
cmp
dec
sub
sub
and
mov
add
lock
sbb
push
jecxz
enter
out
push
jb
(bad)
in
adc
nop
push
and
xchg
stos
rol
cmp
in
lahf
in
leave
dec
pop
sbb
or
test
and
out
das
cmp
(bad)
adc
adc
sub
adc
add
or
sbb
out
daa
push
and
ret
add
adc
xchg
add
add
call
mov
push
test
sbb
push
add
xchg
sub
push
jmp
jb
jmp
cmp
jmp
xor
and
and
pop
pop
or
nop
and
sub
or
adc
leave
sub
inc
push
in
sub
add
pushf
fisttp
inc
jne
xor
in
add
pushf
sar
push
enter
mov
sbb
fdivr
push
mov
rol
inc
mov
push
cwde
xor
mov
add
push
out
jmp
jo
in
sbb
push
xchg
cld
mov
inc
hlt
inc
add
popa
clc
loop
in
imul
mov
in
add
sahf
xor
xlat
jo
xchg
loope
lods
leave
lock
dec
inc
cmp
inc
sbb
in
pop
les
inc
in
pop
mov
in
pop
mov
adc
in
inc
ins
jecxz
adc
icebp
push
adc
rol
fild
in
adc
add
(bad)
or
push
in
inc
in
in
or
or
mov
add
je
sub
int3
sahf
or
inc
xchg
add
fisubr
inc
or
fadd
data16
xor
xchg
push
es
dec
xor
adc
sub
dec
adc
pop
push
cwde
iret
sub
out
fbld
int3
push
popa
movs
je
gs
outs
outs
and
xchg
out
inc
imul
bound
cmp
adc
clc
or
xchg
fidiv
and
mov
(bad)
push
adc
outs
mov
data16
iret
rcr
sub
add
xchg
pop
or
outs
cmp
xlat
cmp
add
adc
adc
ror
pushf
(bad)
je
mov
outs
and
dec
add
loop
mov
ret
push
mov
das
nop
push
(bad)
push
xor
cmps
adc
sub
adc
mov
xchg
sbb
xchg
sbb
dec
add
shl
loop
ret
bnd
and
retf
cmovnp
add
js
data16
push
fimul
call
mov
das
cmp
jecxz
repnz
pop
(bad)
repnz
pop
jb
pop
cmc
outs
pusha
pop
mov
pusha
push
pause
pop
or
add
mov
push
push
push
mul
or
mov
mov
sbb
or
or
ds
push
pop
and
jg
xchg
inc
jb
je
arpl
push
mov
inc
ja
xchg
hlt
xchg
pop
gs
xchg
imul
pop
xchg
add
mov
cdq
hlt
inc
test
or
and
or
cmp
dec
dec
outs
(bad)
jl
jle
dec
dec
dec
jg
popa
bound
dec
dec
arpl
dec
dec
dec
dec
addr16
dec
dec
imul
dec
dec
dec
outs
push
push
push
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
push
pop
pop
pop
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
pop
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
xor
dec
dec
xor
dec
aaa
cmp
sbb
dec
fidivr
imul
test
push
xchg
fcom
mov
inc
loopne
bsf
mov
pop
or
or
nop
ror
dec
loopne
mov
mov
repnz
out
mov
ins
outs
bound
clc
dec
add
or
pop
popa
js
inc
jge
or
mov
or
dec
pop
push
push
jo
aam
cmp
xor
pop
dec
ret
ja
xor
xor
mov
xor
outs
outs
mov
ja
fld
call
nop
push
mov
mov
mov
stc
jne
add
popf
xchg
mov
push
aam
out
and
inc
jmp
adc
shr
mov
nop
inc
ja
(bad)
sub
or
mov
rol
jg
jge
enter
mov
mov
dec
and
retf
add
inc
aas
mov
add
mov
sub
or
ja
lock
inc
rcr
xchg
arpl
jmp
sbb
mov
add
or
and
adc
inc
mov
sar
dec
rol
add
fwait
ja
cmp
repz
in
cmp
xchg
loopne
sbb
jmp
lock
jno
pop
sbb
sub
cli
xchg
and
cli
jns
ins
sbb
lock
inc
enter
std
pop
push
stc
sbb
jecxz
hlt
pop
test
gs
and
xor
or
sbb
(bad)
in
push
cmp
cli
inc
add
dec
sub
shl
dec
bnd
add
mov
push
adc
test
dec
icebp
sar
and
rcr
je
or
mov
jmp
lock
adc
inc
jmp
adc
or
rcl
add
add
mov
ins
test
or
dec
ret
aas
ss
lock
pop
in
push
add
cmp
jbe
or
fstp
aas
mov
or
mov
sbb
out
mov
or
movs
jmp
add
je
jb
pop
neg
mov
or
inc
push
leave
inc
enter
or
cmps
mov
ret
sbb
adc
mov
fst
ret
lods
ja
jnp
mov
cli
outs
sahf
cld
ss
(bad)
mov
mov
add
mov
xor
and
je
and
xchg
add
push
dec
add
imul
ret
(bad)
adc
pop
rol
icebp
sbb
add
jp
aad
adc
clc
push
and
cmp
jne
inc
and
mov
jb
dec
jo
mov
loopne
jl
inc
cmp
add
or
mov
sbb
hlt
movzx
add
jg
je
sub
(bad)
ins
mov
push
or
movs
fnsave
mov
out
das
push
pop
xor
call
cmps
std
and
xchg
mov
aad
cs
or
test
and
lock
push
or
mov
add
mov
sub
add
push
mov
call
jnp
inc
test
imul
push
add
les
jbe
pop
mov
loope
dec
mov
xor
mov
mov
jo
fistp
mov
(bad)
fst
push
sbb
jmp
mov
inc
mov
outs
xchg
(bad)
xchg
(bad)
in
lea
fmul
cmp
popa
inc
and
(bad)
jne
test
push
pop
(bad)
out
xor
mov
add
aas
sub
jp
and
or
ss
mov
inc
dec
xlat
inc
lea
mov
or
jle
push
cwde
test
enter
test
xchg
out
add
pusha
xor
push
push
shl
mov
lea
nop
data16
mov
cdq
add
and
pop
test
retf
or
adc
add
rol
xchg
fldcw
dec
cmc
je
nop
les
and
or
leave
mov
mov
les
add
and
test
int
adc
cdq
out
movs
or
mov
lock
bound
cmp
fdiv
jno
add
outs
dec
jnp
add
loop
push
lea
scas
inc
dec
loopne
inc
les
loopne
xchg
add
ror
lods
call
fidivr
inc
ja
fsubr
sbb
add
jo
outs
add
add
pop
es
and
test
lock
xchg
push
cmp
mov
cmc
mov
lods
and
mov
cmp
inc
je
add
xchg
push
nop
add
outs
cld
add
and
outs
test
jae
shr
imul
lds
mov
mov
ror
xchg
mov
cmp
mov
add
daa
mov
daa
(bad)
stos
xchg
leave
aam
dec
out
into
dec
call
sbb
es
mov
mov
nop
push
cwde
inc
xchg
push
pop
test
add
push
pop
(bad)
rcr
gs
mov
shr
jno
sub
add
cmp
dec
sbb
paddb
jp
inc
inc
into
mov
int
jnp
pusha
mov
inc
jbe
rol
sbb
js
xor
xchg
add
mov
adc
(bad)
mov
xor
je
data16
pusha
mov
sbb
fiadd
outs
mov
inc
add
es
jbe
std
(bad)
std
retf
sub
sbb
jne
fnsave
push
sub
cmp
in
ins
xchg
add
enter
and
adc
or
xlat
ror
xchg
lock
lods
mov
mov
push
inc
push
sub
xchg
sub
and
or
iret
adc
inc
inc
fild
cmp
fsubp
mov
dec
ret
sub
arpl
setl
mov
add
dec
push
adc
inc
cmp
xchg
push
and
push
mov
stos
cli
pop
and
push
outs
jae
jo
adc
dec
jae
jb
add
push
adc
ret
out
aad
push
cmp
push
inc
ins
inc
jo
jl
or
pop
fadd
inc
in
popf
mov
xchg
sbb
sub
adc
inc
pop
jne
push
in
jbe
les
xchg
jmp
sbb
shl
xor
shl
or
or
cmp
or
scas
dec
push
pop
inc
pop
mov
test
or
dec
or
cmp
inc
sysret
cmp
sbb
ins
in
mov
mov
cmp
inc
dec
mov
pop
inc
and
neg
mov
or
push
int3
or
outs
leave
leave
add
sub
mov
mov
or
adc
dec
add
jg
stc
or
test
inc
scas
dec
enter
or
inc
add
mov
or
daa
sbb
push
adc
pop
ror
add
je
add
push
stos
mov
je
jo
fstp
or
inc
adc
adc
jp
mov
loope
aaa
mov
push
pop
mov
xchg
adc
mov
push
push
push
pusha
mov
jo
in
hlt
jno
jecxz
inc
pop
xor
rcl
shl
lods
sub
xchg
sbb
stc
sub
jl
lahf
dec
cmp
daa
out
push
ins
aam
test
lock
pop
jmp
(bad)
pop
pusha
jno
push
cwde
fmul
xchg
icebp
jo
cmp
sbb
push
pop
adc
ror
mov
pop
sbb
and
(bad)
mov
test
adc
test
or
inc
inc
cwde
in
ds
lods
jne
lahf
mov
sub
adc
jmp
repnz
add
cdq
outs
or
shl
loop
outs
pop
mov
pop
test
sbb
inc
pop
push
outs
loopne
jae
xlat
mov
mov
ja
push
mov
lock
mov
imul
and
nop
xor
jo
bound
ja
push
sub
ja
lods
mov
dec
and
xchg
adc
outs
aaa
and
(bad)
loopne
pushf
add
outs
push
mov
retf
pop
mov
ret
(bad)
in
pop
addr16
mov
inc
push
movs
or
pushf
popa
or
or
addr16
mov
jae
pushf
fs
dec
sub
iret
lods
mov
in
inc
aaa
lods
or
pop
sbb
sbb
push
mov
push
mov
mov
pushf
je
addr16
push
stc
xor
add
mov
mov
jb
jbe
ja
xchg
(bad)
xor
pushf
pop
sbb
data16
xor
dec
pop
push
fmul
shl
inc
rol
sub
cmp
adc
jbe
sub
push
push
xchg
cs
(bad)
cwde
adc
jae
(bad)
inc
sar
rcl
or
or
jne
pop
jns
push
in
outs
out
aam
adc
in
aam
leave
add
stc
outs
fadd
inc
dec
jne
das
push
dec
mov
jl
fadd
sub
sbb
retf
adc
or
pop
imul
ficom
daa
outs
arpl
jo
jb
call
and
dec
call
jo
iret
fs
push
push
sbb
outs
les
mov
ret
ja
dec
cs
nop
mov
repnz
jmp
mov
(bad)
in
dec
adc
mov
sbb
or
clc
pop
inc
xchg
dec
sub
cld
cmp
sar
or
bound
sahf
int
pop
add
pop
pop
xchg
outs
bound
addr16
inc
mov
loope
(bad)
jne
adc
add
adc
dec
push
imul
mov
adc
inc
popa
push
aad
leave
ins
ins
or
adc
xchg
xchg
in
inc
cmps
in
xchg
lahf
mov
push
inc
jns
adc
test
dec
sub
aam
jb
pusha
lahf
adc
push
jl
cmp
push
ja
lahf
sbb
lods
and
sbb
mov
sbb
js
xor
xor
mov
bound
dec
rcr
rcl
scas
and
push
fs
iret
adc
and
outs
je
mov
jno
and
cs
push
push
call
sub
cwde
push
xlat
jmp
inc
or
pop
jp
inc
pop
sbb
xor
push
xor
nop
xchg
jns
pop
arpl
xor
xor
jno
add
sub
xor
leave
and
lods
nop
pop
cmp
(bad)
jnp
or
in
pop
pop
inc
inc
push
or
adc
jne
arpl
dec
les
sbb
sub
inc
inc
push
dec
es
retf
dec
test
add
mov
inc
js
push
bound
ja
imul
push
stc
xchg
sub
push
in
dec
jb
push
adc
outs
ins
push
nop
xchg
(bad)
xchg
push
push
cmp
ja
rol
pop
xchg
and
push
add
xchg
cmps
pusha
inc
xor
sbb
mov
ins
popa
push
stos
push
shl
pop
enter
fs
sbb
test
or
adc
in
push
add
ja
shl
sar
and
sbb
add
and
dec
dec
fadd
cmps
je
pop
cs
sub
sub
inc
mov
and
pop
sbb
data16
js
sbb
int
sbb
dec
push
jl
sbb
enter
or
sbb
pop
dec
movs
sbb
mov
in
sub
test
adc
mov
adc
mov
jb
or
jae
mov
lock
add
add
daa
inc
sbb
nop
push
outs
fs
je
shl
nop
xchg
mov
jo
in
xchg
cwde
or
jbe
sub
or
xchg
outs
ret
and
dec
movs
jb
test
mov
mov
(bad)
movs
xchg
xchg
and
push
xchg
dec
and
or
idiv
xchg
and
popa
imul
jo
gs
push
and
mov
je
adc
mov
or
es
retf
inc
xchg
mov
mov
jb
dec
push
mov
leave
inc
mov
retf
add
adc
inc
xchg
dec
es
retf
shl
dec
xor
(bad)
lock
mov
and
nop
iret
es
enter
daa
ja
dec
add
mov
xchg
inc
addr16
xchg
pop
inc
(bad)
int3
jl
test
rol
or
test
addr16
and
inc
enter
adc
js
inc
xchg
sub
push
dec
scas
push
fsubr
fcom
dec
xchg
movs
jb
call
and
addr16
jb
mov
in
jb
inc
cs
pop
dec
add
dec
js
lods
fs
sub
jg
fs
push
in
movs
cmp
cdq
in
push
add
movs
jb
in
out
rcl
jge
push
pop
and
hlt
xor
and
fist
xor
xchg
xchg
clc
add
cdq
inc
sub
push
cmp
push
add
sbb
xchg
int
dec
or
adc
dec
movs
fimul
sbb
pop
push
call
aam
add
xor
add
add
or
or
mov
or
and
(bad)
dec
and
lahf
aad
mov
lds
sub
adc
or
xchg
dec
cs
adc
lahf
push
sbb
sbb
nop
xchg
dec
push
push
(bad)
xchg
add
jg
daa
sbb
push
inc
push
push
and
nop
pop
xor
or
retf
mov
adc
dec
pop
in
test
imul
retf
daa
outs
sub
adc
and
ins
and
in
or
or
repnz
ds
in
sbb
test
xchg
out
mov
in
xchg
cmp
xor
pop
sahf
scas
mov
test
lods
sub
arpl
mov
xchg
cmps
stos
push
mov
rcr
mov
enter
out
je
int3
pusha
shl
(bad)
adc
fmul
jae
xchg
push
loopne
mov
les
pop
add
imul
js
out
pop
hlt
mov
call
sbb
add
add
pop
sahf
retf
or
or
dec
jae
mov
adc
sbb
lahf
retf
in
sbb
adc
retf
jae
call
fmul
jae
ins
xor
cmps
repnz
adc
and
cmp
inc
fucom
mov
dec
lahf
sbb
adc
push
cmps
repnz
sbb
cmp
and
adc
mov
push
ins
mov
xchg
iret
in
je
sbb
cs
in
jl
sub
iret
in
jl
sbb
je
enter
cs
add
cs
cwde
mov
in
push
movs
pop
test
push
mov
mov
cmp
mov
cs
cmps
adc
cs
in
shr
iret
in
jl
and
dec
rcl
(bad)
sub
jae
cs
fdiv
in
sub
and
jl
mov
hlt
dec
adc
fcmovbe
cld
xchg
retf
cld
adc
dec
loopne
sahf
retf
sub
retf
mov
pusha
xchg
out
pop
sbb
push
test
and
sub
xchg
cmp
out
or
cmps
in
(bad)
sbb
gs
sub
sbb
(bad)
lea
cmp
sbb
fs
mov
inc
jo
test
mov
xchg
inc
cmp
adc
sbb
sbb
sub
(bad)
jo
inc
cld
push
push
xor
inc
dec
dec
fimul
mov
mov
je
jo
push
push
mov
xor
aad
sbb
push
jbe
in
(bad)
popf
sub
std
cwde
shr
push
in
fwait
mov
xor
pop
add
dec
xor
xchg
scas
mov
clc
or
xchg
out
cs
jg
xor
ds
out
sahf
out
push
pop
popa
push
outs
push
jbe
jmp
mov
ret
retf
mov
mov
aas
cs
mov
daa
mov
aaa
sbb
fnstsw
cmps
sbb
xor
ins
in
es
inc
dec
dec
lock
inc
(bad)
(bad)
dec
out
mov
sbb
xor
or
(bad)
cmp
cmp
inc
cwde
sub
xor
dec
das
inc
inc
repnz
das
or
cmp
das
xchg
or
inc
push
push
jo
cmp
icebp
(bad)
lea
jne
mov
and
push
inc
cmp
ret
outs
and
sbb
sbb
push
xor
callw
and
mov
cmp
push
or
cmps
mov
das
inc
mov
pop
push
mov
and
ds
sub
inc
push
jb
dec
bound
scas
push
js
and
inc
pop
or
cmp
push
in
mov
ss
into
imul
cmp
pop
push
xchg
test
fs
pop
adc
xchg
lahf
adc
inc
je
sbb
xor
test
popa
add
inc
pop
add
rol
in
dec
mov
imul
push
cmp
dec
xor
inc
jo
inc
push
sbb
ss
shl
mov
mov
ret
push
add
xor
and
xchg
dec
test
push
outs
and
loope
jne
js
call
rcr
add
xor
retf
int3
pop
sbb
pop
adc
mov
fstp
push
xchg
push
push
imul
cmp
in
add
sub
and
mov
ins
cwde
popa
popa
sbb
mov
clc
(bad)
(bad)
adc
adc
mov
(bad)
ror
std
stos
in
mov
add
leave
mov
cld
retf
sbb
movs
add
push
sbb
xor
add
sbb
add
add
aaa
add
add
and
xor
mov
je
mov
add
ret
jp
add
ret
inc
fst
out
add
push
sar
inc
call
and
in
je
and
clc
movs
pop
test
dec
dec
xchg
mov
and
hlt
mov
add
scas
sub
and
retf
mov
jo
xor
stos
add
popa
hlt
cmp
sbb
mov
pop
out
stos
add
movs
daa
mov
and
add
fstp
add
les
(bad)
sbb
lea
jbe
add
jae
push
xchg
call
inc
push
fstp
adc
jmp
ret
arpl
mov
dec
test
cmc
(bad)
mov
(bad)
repnz
test
test
pop
repnz
xor
xchg
xchg
sub
adc
push
movs
jmp
cmp
pop
jmp
dec
jl
xchg
cwde
mov
mov
jp
das
add
outs
imul
(bad)
dec
clc
loope
inc
mov
xor
push
psubsb
add
arpl
pop
sbb
add
inc
mov
aas
sub
ja
mov
mov
mov
mov
ret
dec
pop
inc
push
ins
pmulhuw
cmc
pop
cmp
jae
cmp
sub
repz
repz
pop
ins
jge
iret
repz
lahf
mov
shl
hlt
sahf
out
ds
dec
jns
out
pop
imul
jns
out
mov
rcr
push
cli
adc
out
aad
and
sub
and
mov
inc
js
enter
sbb
sub
nop
mov
test
in
sbb
sbb
push
xor
push
cmp
sbb
sbb
sbb
sbb
mov
mov
pop
int3
pop
and
cmp
test
sbb
in
xchg
sbb
and
xchg
inc
sbb
jmp
sbb
nop
addr16
iret
outs
call
aaa
enter
pop
inc
mov
enter
sub
add
jb
enter
or
hlt
xchg
mov
push
jne
in
gs
repz
jmp
(bad)
adc
icebp
cmp
pop
cmp
cmp
les
lahf
bound
repnz
inc
aam
aam
ret
or
lahf
mov
pop
pushf
out
dec
adc
xor
loop
pause
inc
xchg
mov
sub
dec
sub
inc
or
push
je
add
sub
and
mov
inc
scas
pushf
clc
inc
sahf
(bad)
jp
or
xlat
js
adc
push
xor
inc
repnz
xlat
lds
loopne
and
pop
rcl
popa
scas
xor
inc
pop
cmp
cmp
test
pop
cwde
cmp
or
outs
popa
jbe
inc
jnp
inc
mov
popf
out
ds
jnp
stos
ror
pop
mov
enter
push
imul
dec
sbb
dec
push
jl
les
int
push
sbb
fist
mov
cmp
and
mov
pop
xor
loopne
and
sub
or
fidiv
fs
pop
dec
push
lods
rol
inc
shr
enter
inc
aas
mov
mov
pushf
dec
inc
push
inc
dec
pop
jo
jnp
mov
push
fs
ror
mov
pop
dec
cs
jnp
idiv
data16
inc
sahf
nop
fdiv
frstor
and
push
add
pusha
xrelease
fiadd
inc
xchg
or
xchg
ins
adc
(bad)
stos
and
cmps
call
cmp
add
push
push
loope
fisttp
dec
lea
cmp
mov
cld
xor
add
stos
add
inc
dec
out
fcom
stos
add
sbb
or
sub
(bad)
imul
iret
call
sbb
xlat
mov
inc
in
test
push
mov
adc
leave
mov
arpl
cmp
cmp
push
rol
and
aaa
add
mov
fiadd
cmp
and
push
inc
dec
mov
push
xor
or
stos
movs
or
hlt
xchg
xor
sahf
fcomi
add
js
lods
(bad)
adc
push
(bad)
retf
clc
push
xlat
not
mov
outs
xchg
aam
mov
leave
mov
mov
test
cmp
xor
int3
add
(bad)
push
imul
rcl
pop
adc
xor
xor
pop
xlat
call
iret
lahf
pop
inc
jle
push
inc
sti
dec
xor
fs
push
sbb
in
mov
add
es
sbb
cvtpi2ps
add
mov
xor
idiv
jl
mov
pop
dec
sbb
aam
loopne
inc
inc
push
or
adc
lods
and
and
push
sti
or
cld
fsubr
ins
cmps
inc
mov
or
add
add
pop
xchg
xchg
push
push
rol
pop
adc
and
inc
mov
sahf
test
sbb
dec
jecxz
(bad)
jmp
pop
mov
sbb
movs
pop
fxch
xchg
popf
mov
inc
adc
sbb
or
pop
xlat
xlat
loop
or
lahf
adc
int
push
xchg
pop
dec
aam
cmp
cmp
rol
(bad)
push
jns
add
inc
sbb
shl
ja
or
ds
push
mov
inc
stos
or
fadd
test
iret
shr
enter
loopne
inc
push
aad
cwde
push
pop
xor
jae
mov
xchg
stos
cld
mul
pop
dec
aad
test
int3
mov
mov
pusha
lods
sbb
xchg
or
enter
enter
and
dec
dec
sahf
inc
mov
out
enter
rol
lock
and
jno
pop
sub
mov
ret
mov
mov
sbb
mov
xor
adc
sub
rep
cmc
dec
aaa
pushf
and
repz
call
cli
pop
cmps
jns
shl
pusha
mov
int
movs
(bad)
push
shl
dec
(bad)
cmp
and
int3
mov
out
inc
in
lahf
loope
cs
adc
and
pop
enter
push
or
cmp
mov
lds
in
inc
jae
dec
pushf
mov
push
pop
push
ins
pop
add
and
dec
mov
sahf
es
test
pop
fwait
mov
inc
por
stc
imul
fs
dec
fmul
aam
jno
std
inc
add
mov
cld
lods
adc
cmp
adc
jmp
clc
aam
sar
jne
fadd
dec
or
or
enter
jmp
add
or
aas
cmp
inc
ins
stc
mov
inc
sbb
test
push
jle
adc
cs
xchg
femms
in
loopne
adc
fimul
xor
fsub
fld
push
pop
repnz
push
push
adc
xor
inc
dec
cs
movs
rol
pop
ja
fist
or
xor
sbb
stos
lock
lock
add
push
sub
xor
and
add
pop
fstp
or
cs
jge
push
mov
xor
dec
cmp
sbb
das
push
out
pop
stos
loopne
cs
sbb
lds
cmp
dec
enter
add
ret
add
call
loope
push
inc
pop
leave
push
sbb
ret
xor
mov
and
adc
mov
pop
clc
mov
js
mov
push
sub
push
dec
inc
xor
xchg
inc
adc
pop
inc
inc
loopne
or
std
jle
inc
repz
repnz
aas
or
mov
add
jge
je
les
inc
imul
add
add
sbb
je
daa
frstor
inc
push
loopne
(bad)
leave
mov
in
cwde
data16
push
pop
adc
pop
test
pop
adc
fadd
pop
and
pop
push
sbb
not
inc
int
or
inc
and
add
fsubr
bound
dec
xor
adc
or
outs
fwait
movs
or
fsubr
loop
cmp
push
lea
cmps
push
mov
sbb
aas
repnz
lock
test
or
jge
pop
push
(bad)
dec
inc
add
hlt
lds
cs
sbb
aam
and
movs
push
or
movs
ins
xlat
add
mov
or
push
in
xor
dec
inc
add
or
push
enter
inc
inc
cmps
pusha
xchg
lahf
aaa
mov
ror
ins
rol
test
mov
or
fmul
cwde
rcl
addr16
jb
retf
fs
repnz
fild
test
sbb
cmp
aas
hlt
hlt
push
dec
xchg
push
cmp
icebp
out
fild
push
xor
pop
or
in
and
out
inc
cwde
or
jmp
hlt
hlt
lods
in
inc
sub
push
pop
adc
push
sub
mov
jb
add
dec
inc
mov
js
and
cmp
sar
cs
adc
pop
or
push
xchg
or
aad
stc
mov
pop
sub
add
xchg
inc
lock
dec
jne
push
mov
lods
pop
out
xchg
fdivrp
dec
push
sub
fidiv
mov
jg
add
or
jmp
nop
inc
adc
aad
rcr
out
clc
xlat
ss
cmc
call
sahf
inc
test
xchg
div
inc
mov
push
lods
mov
pop
jo
imul
inc
fsubr
push
push
push
or
cli
or
ret
push
mov
imul
ret
mov
adc
test
icebp
push
outs
mov
xlat
dec
adc
stc
rcl
test
adc
add
mov
push
dec
sbb
cli
push
clc
adc
push
push
pop
es
sub
imul
add
shr
inc
fs
add
aas
mov
push
xchg
adc
lea
jo
lock
daa
iret
in
(bad)
in
loopne
(bad)
sbb
jp
cmp
dec
jns
clc
or
into
add
xchg
cmp
mov
add
xchg
and
adc
in
xchg
and
dec
or
daa
in
xor
jnp
repz
mov
mov
adc
add
les
mov
sbb
and
push
xchg
hlt
push
mov
call
jle
add
push
mov
mov
mov
dec
icebp
imul
lods
cmp
das
add
pop
push
cmps
jb
lock
cmp
pop
gs
add
adc
push
test
cmps
(bad)
lock
or
cmp
mov
mov
mov
push
shr
pusha
bts
movs
and
push
sub
adc
test
std
add
inc
or
rcl
test
or
leave
jmp
jb
test
movs
loopne
(bad)
xchg
xchg
iret
lock
push
test
into
and
ret
mov
loope
and
jmp
pop
and
mov
mov
stc
push
(bad)
push
jb
(bad)
test
popa
mov
lock
enter
(bad)
retf
xchg
pop
push
mov
outs
pop
push
inc
pop
lods
nop
jbe
pop
aam
fmul
outs
mov
ror
or
push
lock
scas
test
sbb
push
xlat
outs
pop
or
pop
jo
daa
mov
xchg
in
pop
dec
pop
add
pop
lock
jo
repnz
jmp
cs
push
push
xchg
adc
popw
lea
mov
sbb
xor
and
fisttp
push
xor
dec
scas
and
sbb
dec
or
aas
(bad)
sbb
jp
pop
sete
add
dec
xor
(bad)
fcmovnb
xchg
test
add
cs
in
pop
inc
adc
and
ss
or
mov
add
mov
adc
push
ds
mov
sbb
cmp
sahf
je
les
(bad)
(bad)
sub
mov
test
test
mov
rcl
out
add
or
xor
daa
stc
mov
add
es
inc
or
jb
add
add
movups
sub
and
adc
pop
adc
test
fild
mov
call
jns
add
mov
mov
push
and
out
add
mov
jb
sub
pop
or
fs
test
add
ror
push
xchg
dec
inc
ret
add
loopne
arpl
mov
daa
push
mov
ja
xor
xchg
(bad)
in
push
sbb
pop
les
mov
add
clc
and
arpl
or
xor
mov
ins
imul
hlt
sub
jno
cs
inc
jne
sub
cmp
nop
in
adc
jge
add
dec
add
aas
sbb
and
and
dec
add
dec
movups
add
sbb
les
popa
je
inc
repnz
leave
je
add
xor
dec
push
adc
push
xor
popa
leave
adc
mov
push
xor
or
popa
in
repnz
xor
popa
xchg
pop
shl
pusha
lds
add
xor
enter
push
xor
popa
nop
push
nop
jl
push
xor
popa
adc
or
cmp
xchg
mov
inc
arpl
bound
sbb
fadd
cli
cmp
jnp
push
jnp
push
mov
rcr
mov
xchg
jb
test
add
cs
ror
scas
test
dec
fnsave
aam
cli
inc
loopne
or
mov
scas
dec
or
cmp
loope
sbb
mov
test
add
adc
sub
in
or
addr16
xchg
inc
adc
pop
mov
jmp
dec
inc
inc
dec
dec
dec
fwait
dec
and
push
push
push
cs
cmp
push
lahf
movs
daa
add
pusha
inc
cwde
xor
pop
and
test
dec
jb
push
arpl
sub
mov
ret
aaa
mov
mov
fs
hlt
and
(bad)
or
aas
jno
in
fs
dec
gs
dec
adc
inc
sbb
add
gs
imul
mov
test
or
fdiv
or
xor
and
pop
inc
sub
inc
xor
push
push
inc
jo
iret
mov
cwde
push
jb
add
jns
pusha
xor
movs
(bad)
into
and
ins
push
push
lock
int3
sub
bnd
cmp
outs
or
rol
add
fdivr
pop
daa
jns
add
mov
or
lds
retf
call
fs
and
js
add
fmul
sub
outs
mov
sub
adc
bound
rol
ds
mov
sbb
leave
stos
(bad)
jne
jnp
mov
xchg
sub
sbb
add
xor
(bad)
push
xor
sbb
add
ror
inc
dec
dec
in
pop
jg
sub
repnz
push
cld
gs
or
popa
loopne
ins
add
in
je
and
adc
or
in
or
jbe
push
ds
mov
sbb
gs
inc
retf
aaa
push
pop
scas
xchg
data16
outs
mov
jo
data16
and
data16
push
add
or
jne
pop
fdivr
xor
or
push
pop
sub
add
pop
inc
in
rcr
lea
or
xchg
nop
add
xchg
jp
fcom
ret
jp
push
shl
cs
ja
xor
adc
add
in
nop
cmp
or
frstor
mov
out
mov
mov
add
dec
gs
mov
xor
ror
(bad)
or
pop
ret
add
ror
or
dec
xor
or
sbb
push
mov
enter
jbe
in
imul
add
cmp
addr16
or
sub
inc
inc
mov
movs
adc
mov
add
or
out
sub
add
push
jbe
call
mov
sahf
rol
mov
ja
pop
or
mov
or
ins
jns
push
shl
stc
out
push
pop
mov
pop
mov
outs
in
inc
ror
(bad)
pop
push
sub
clc
cmp
push
xor
popf
sub
add
jo
and
cmp
push
inc
xor
push
xor
daa
or
gs
xlat
dec
pushf
ret
fs
lock
inc
bound
pushw
fadd
or
inc
mov
or
cli
add
das
addr16
jg
inc
xchg
jl
add
mov
inc
pop
rol
xchg
inc
xchg
push
mov
add
out
inc
(bad)
or
cmp
sub
pop
fild
dec
cmp
mov
call
mov
ds
rcl
cmp
and
mov
adc
inc
fsubrp
dec
dec
dec
xchg
nop
stc
cdq
in
imul
and
stc
add
cwde
xchg
imul
push
lahf
xchg
test
sahf
xchg
fld
pop
js
test
dec
repz
push
sbb
and
push
inc
sbb
les
cmp
push
adc
mov
cmps
sub
sub
push
sbb
pop
mov
xor
dec
cmp
push
cmp
cmp
dec
dec
dec
cmp
dec
dec
dec
and
and
dec
dec
dec
and
dec
dec
dec
sub
sub
dec
dec
dec
sub
dec
dec
dec
adc
adc
dec
dec
dec
adc
jo
dec
sbb
pop
inc
pop
jb
test
mov
bound
pop
in
xchg
outs
inc
add
je
out
and
jbe
jne
sahf
inc
outs
inc
adc
jg
push
popa
scas
add
add
retf
xchg
outs
sbb
jg
mov
test
sbb
cmp
and
jb
sbb
fs
pop
mov
in
add
call
cmp
mov
mov
inc
outs
push
js
cwde
ins
mov
cld
jno
sub
xor
or
mov
push
push
push
inc
mov
xor
inc
dec
push
mov
or
xchg
push
adc
xchg
or
cmp
sbb
or
add
push
xchg
dec
mov
jmp
sbb
cmp
jge
cmp
jne
mov
mov
add
pushf
xchg
adc
(bad)
enter
paddsw
mov
and
out
jge
jno
pop
dec
pushf
push
test
sbb
inc
pop
pop
jg
inc
out
adc
push
mov
add
dec
sbb
sbb
pop
sbb
scas
out
ret
hlt
mov
jmp
sbb
ret
call
pop
pusha
and
sub
fmul
pop
and
cli
and
sbb
xchg
pusha
ror
push
cmp
pusha
sti
fimul
cli
add
xor
fiadd
hlt
jnp
mov
add
and
add
cmp
jge
cmp
push
mov
je
(bad)
data16
pop
shl
pop
ret
pop
ins
or
mov
or
add
das
lea
fcomp
test
jge
pop
aas
pop
mov
pop
leave
jecxz
mov
fwait
cmp
movs
fnsave
call
ffreep
mov
push
mov
pusha
or
int3
push
fstp
adc
adc
lods
sbb
pop
lea
pop
inc
cmp
cmp
sbb
lods
inc
xchg
or
pop
imul
inc
jb
jb
jb
xchg
adc
sbb
outs
dec
jnp
push
pop
jae
sbb
push
sub
add
push
jne
aas
adc
add
xor
out
cwde
ins
sbb
inc
adc
jo
and
jp
or
pop
call
or
inc
cmp
jo
inc
pushf
adc
fcmove
inc
sub
pop
xchg
adc
rcr
adc
push
ret
mov
xchg
jmp
jl
aaa
lea
xor
mov
fs
test
and
adc
adc
(bad)
or
and
add
inc
lds
out
add
pop
xor
or
stos
xor
or
ins
adc
stc
ins
lods
xor
inc
or
outs
mov
cs
je
sbb
xchg
cmp
jne
adc
add
daa
adc
out
add
ret
sbb
adc
xchg
xor
inc
or
adc
push
cmp
pop
xchg
repz
add
dec
inc
jne
push
imul
clc
jne
and
ins
push
jbe
jbe
or
cwde
jb
jb
jecxz
addr16
inc
pop
shl
ja
inc
enter
sbb
les
inc
outs
fs
pop
popa
dec
outs
inc
jne
data16
inc
test
mov
loope
push
ror
mov
nop
in
iret
push
iret
mov
and
mov
dec
xor
mov
ror
push
jns
rcr
je
mov
pop
sub
les
or
movs
add
in
js
or
dec
xor
or
sub
inc
mov
add
stos
and
jle
pop
jmp
and
(bad)
push
mov
xor
lock
xchg
jns
mov
sbb
les
cdq
pop
dec
push
add
sub
and
das
sub
add
cmp
push
adc
push
movs
int
add
adc
pop
pop
sbb
mov
mov
loop
ss
sbb
loope
sub
ja
imul
das
fldcw
repnz
jb
jp
cli
push
push
inc
sbb
sbb
std
ins
test
xchg
mov
push
sub
cld
mov
or
cmp
mov
into
push
mov
push
add
cmps
fs
test
push
dec
les
rol
(bad)
jbe
add
ins
jmp
xor
dec
cmp
push
sbb
sbb
loope
inc
add
lock
ins
test
push
mov
ret
xchg
pop
sub
cmp
dec
and
sbb
xor
cmp
nop
cmp
jnp
in
pop
and
sbb
loopne
xchg
or
mov
sti
mov
test
mov
pop
dec
pop
xlat
and
fsubr
pop
add
sub
jae
ret
inc
push
lahf
add
adc
sub
outs
or
into
mov
jg
les
add
sbb
dec
add
sub
data16
jecxz
shl
test
inc
and
and
inc
and
sbb
add
inc
scas
call
lea
jmp
and
or
fdiv
cmp
push
cli
push
ret
cmp
ss
sub
lock
add
cmp
push
in
add
adc
mov
and
add
inc
and
jge
leave
push
mov
bound
repnz
sub
pop
add
xor
cmps
or
add
jo
imul
(bad)
cmp
xchg
test
in
xor
or
sbb
popf
dec
sub
int
cmp
cwde
mov
clc
ja
sub
fwait
add
add
inc
sbb
in
pop
pusha
fsub
stos
test
icebp
hlt
sar
mov
in
inc
pop
icebp
inc
mov
enter
mov
fsubr
cs
jl
mov
or
mov
mov
fsubr
lea
cmp
jbe
mov
mov
add
sbb
adc
cmp
je
push
add
cmp
push
mov
sub
mov
nop
inc
push
mov
add
scas
sub
and
push
or
xchg
test
push
push
aas
push
adc
jp
and
add
or
and
cs
jg
cmp
or
icebp
add
mov
mov
and
sbb
leave
push
inc
(bad)
sbb
pop
add
add
xchg
push
mov
ja
jmp
push
in
out
and
add
js
sbb
pusha
cmovne
add
push
out
xchg
mov
mov
das
pop
cmp
icebp
or
add
jg
dec
adc
or
pop
enter
inc
dec
dec
add
(bad)
loopne
sub
jb
iret
push
push
add
inc
gs
cmps
adc
add
adc
mov
push
add
dec
cmp
mov
and
jo
sub
dec
inc
mov
inc
inc
add
int3
call
push
mov
xor
push
xor
repz
repnz
xor
pop
jno
loopne
or
or
xor
pop
mov
add
es
and
inc
cmp
inc
jb
cmp
jae
repnz
mov
ins
jb
fld
jbe
add
adc
push
into
movq
jb
pop
mov
mov
inc
pop
and
test
nop
les
enter
pop
pop
dec
dec
test
push
and
cmp
push
inc
push
jae
mov
iret
mov
call
or
fld
(bad)
push
sti
(bad)
or
or
(bad)
or
sub
fcmove
(bad)
adc
imul
je
scas
rcr
nop
int3
push
outs
sar
adc
popa
popa
scas
lods
xor
inc
xor
mov
fimul
inc
add
mov
push
push
dec
cwde
les
ins
and
ficom
cld
xlat
add
adc
cmp
cwde
sub
mov
pop
ins
(bad)
(bad)
enter
push
cmp
xchg
js
inc
sbb
sbb
jl
in
xor
outs
arpl
loopne
mov
in
das
add
cmps
mov
in
add
std
or
and
sbb
add
and
inc
cmp
push
sbb
dec
aad
pop
test
xlat
aam
xchg
add
cmp
mov
cmps
cmp
fadd
add
pusha
adc
scas
cs
fisub
stos
inc
inc
inc
push
iret
imul
mov
mov
scas
inc
outs
mov
mov
(bad)
test
loopne
push
ins
add
push
add
imul
mov
fist
and
or
enter
arpl
out
inc
cs
rol
fimul
inc
inc
out
jmp
nop
xor
out
lea
montmul
cmps
xchg
xor
test
inc
sbb
sahf
cld
aas
push
push
dec
inc
js
imul
repnz
and
outs
ins
ins
popa
mov
xlat
mov
inc
aas
xlat
hlt
push
and
mov
mov
popa
push
or
pushfw
popa
retf
xchg
cmp
repnz
(bad)
jl
pop
jbe
loopne
nop
mov
add
fs
push
mov
and
leave
clc
xchg
nop
xchg
inc
sbb
xor
pusha
pushf
push
jl
or
push
jl
loopne
inc
or
(bad)
adc
movs
lahf
div
inc
inc
pop
push
xchg
sti
xor
jnp
fwait
jle
ds
cdq
call
fistp
mov
inc
cs
push
cmp
push
mov
int3
push
fs
arpl
loopne
js
cmp
cwde
data16
mov
push
fcom
add
or
cli
(bad)
mov
cmp
inc
mov
add
jnp
test
add
dec
fisub
cmp
inc
mov
fnstenv
nop
not
call
ins
inc
mov
mov
dec
sub
rcr
nop
push
or
sub
test
test
or
rol
add
push
lods
lods
dec
sbb
pop
or
push
cmp
add
mov
rcr
mov
add
ins
lea
inc
inc
nop
sbb
pop
and
push
sbb
xchg
test
add
cmp
out
adc
push
cmp
mov
push
and
loopne
adc
mov
mov
mov
mov
inc
mov
sbb
sar
mov
xor
push
jne
mov
mov
nop
dec
jnp
mov
inc
daa
je
call
fs
xchg
adc
pop
mov
js
movs
xchg
mov
(bad)
js
xor
push
mov
mov
cmp
xor
xchg
sbb
jmp
fidiv
add
and
lock
jle
out
nop
xchg
xchg
jle
and
sbb
or
jl
daa
xchg
lock
test
mov
add
or
adc
mov
or
stos
adc
aas
and
stc
daa
movs
repnz
xchg
push
inc
sbb
(bad)
leave
sbb
mov
ret
adc
(bad)
movs
push
jmp
rol
sbb
daa
ins
xchg
(bad)
push
shl
fincstp
nop
out
mov
push
sub
or
mov
fcmovnu
ret
xor
mov
dec
test
and
clc
enter
cld
jb
xchg
(bad)
push
add
mov
inc
sub
inc
and
aaa
xor
push
inc
push
mov
xchg
mov
sbb
stos
add
inc
jecxz
xchg
je
sbb
in
test
call
popa
add
nop
arpl
(bad)
(bad)
icebp
push
sub
jg
push
or
lods
push
mov
movs
cli
or
test
and
xor
inc
(bad)
mul
add
and
cdq
inc
inc
nop
push
ror
das
call
das
mov
push
cdq
inc
mov
cwde
add
adc
mov
inc
aad
mov
adc
inc
mov
in
loopne
inc
push
jle
xor
adc
inc
(bad)
jno
sahf
(bad)
in
cmp
sub
rol
dec
shr
xchg
loopne
mov
jne
adc
and
dec
pusha
test
or
xchg
ins
cmp
sub
ds
pop
inc
and
fcmovb
mov
mov
jne
dec
hlt
rcl
ins
sbb
les
jmp
pop
or
ss
pop
inc
add
test
sub
xchg
dec
jnp
pop
and
dec
mov
push
xor
sbb
mov
mov
xlat
sub
movs
dec
sbb
cli
cmp
push
mov
cdq
ja
mov
dec
pop
push
sbb
mov
xor
mov
xchg
movs
imul
adc
imul
xchg
mov
add
sar
les
ffreep
dec
jp
mov
pop
fwait
xlat
dec
fsub
xbegin
stos
mov
rcr
lahf
sub
jmp
jl
inc
and
inc
add
push
push
pop
xchg
pop
sbb
lods
mov
loope
rcl
mov
in
or
loopne
adc
add
loop
fmul
repnz
ins
xchg
pop
push
inc
lock
or
and
push
mov
fwait
js
sub
xchg
fwait
cmp
inc
push
cmp
ficom
push
loop
adc
mov
push
add
push
dec
cdq
pop
js
push
sbb
push
jg
out
or
pop
into
daa
jnp
xor
jne
stc
sbb
push
mov
xor
push
mov
pop
aaa
adc
push
or
xchg
pop
inc
cmps
jnp
jns
pushf
(bad)
mov
or
cmp
loope
leave
dec
pushf
fcomp
sub
(bad)
pop
mov
jl
nop
cwde
inc
aaa
sub
or
clc
leave
jns
cmp
lock
and
or
mov
xchg
adc
cmp
cdq
aaa
in
(bad)
les
jb
and
aas
sbb
mov
or
add
ja
addr16
mov
or
in
xchg
jle
lahf
aam
call
cmc
ror
sahf
jo
dec
pop
iret
daa
jmp
je
adc
or
and
push
lahf
adc
rcl
out
inc
and
xor
test
and
fwait
ret
hlt
xor
lahf
in
xor
gs
dec
pop
and
xchg
pop
pop
fwait
bound
inc
xchg
push
pop
fdivr
pop
leave
loopne
mov
xor
jo
nop
push
push
ror
aam
adc
sbb
and
and
lock
daa
and
dec
dec
ss
(bad)
loope
pop
dec
mov
adc
mov
mov
xchg
rcr
pusha
push
daa
inc
dec
sahf
dec
(bad)
hlt
adc
(bad)
pop
lahf
xor
arpl
inc
or
jmp
adc
mov
jge
cmp
mov
leave
jae
xor
outs
add
pop
aaa
aaa
jns
pop
jb
lahf
clc
sbb
cdq
adc
sub
lahf
inc
test
mov
push
pop
xchg
mov
scas
mov
les
aaa
sbb
mov
push
push
gs
pop
add
fcomp
push
cmp
(bad)
adc
call
loope
xor
cmp
hlt
add
iret
lea
push
leave
scas
test
jb
iret
imul
cmp
dec
mov
pop
inc
sub
adc
mov
pop
mov
dec
jle
push
push
sbb
sbb
or
popa
and
jmp
pop
xchg
outs
inc
mov
cmc
cmp
jge
in
pop
mov
in
int3
sbb
test
inc
loopne
cld
shl
push
pop
dec
sbb
xchg
lea
sbb
adc
clc
jmp
inc
ret
push
pusha
mov
inc
mov
push
xchg
addr16
pop
clc
imul
inc
repnz
mov
and
mov
hlt
cmp
and
rcr
or
clc
pop
add
sbb
lock
inc
add
movs
sub
popa
or
or
mov
inc
cmp
mov
pop
ss
or
add
mov
iret
cmp
inc
dec
test
sub
repz
pusha
push
xchg
movs
dec
iret
add
push
sub
pop
div
sahf
lock
cmp
cmps
add
or
pop
pop
pusha
sub
mov
jp
ins
and
mov
aas
push
xlat
outs
aaa
dec
lea
jmp
nop
mov
mov
fidiv
(bad)
push
dec
sub
and
enter
imul
xor
outs
repz
pusha
call
clc
cmp
clts
cli
sbb
inc
cmp
mov
repnz
or
xlat
sbb
(bad)
and
je
popa
jne
popf
movs
cwde
inc
jmp
or
or
sbb
test
(bad)
test
repnz
movs
jmp
add
sbb
ret
pop
mov
sbb
push
fst
xlat
jne
enter
retf
movs
push
stos
test
scas
nop
or
or
push
sbb
push
dec
mov
inc
mov
lock
movs
cmc
jo
inc
jle
cmp
jnp
ja
pop
jmp
push
out
xchg
jmp
mov
inc
and
sahf
push
rcl
sbb
in
jns
rcr
sub
in
stos
push
icebp
inc
cmp
leave
pop
aad
sbb
push
mov
loopne
dec
data16
scas
xor
adc
inc
push
retf
jbe
fldcw
sbb
xchg
fnstsw
push
xchg
or
and
mov
xchg
pop
mov
cld
or
jb
loop
lock
clc
and
cmps
int3
in
mov
or
cmps
mov
dec
add
jmp
mov
nop
inc
pop
cmp
and
mov
sub
les
mov
aad
popa
or
dec
mov
(bad)
mov
cmps
mov
dec
nop
sub
cmp
cmps
or
dec
retf
pushf
add
xchg
pop
test
push
mov
add
push
xor
ins
push
and
cvttps2pi
add
lods
es
xchg
test
inc
dec
add
adc
andps
dec
mov
pop
sub
(bad)
in
and
inc
or
inc
inc
ins
imul
hlt
dec
imul
cmp
add
and
and
inc
(bad)
sbb
ja
loop
dec
push
cli
xor
add
add
and
les
and
add
and
dec
push
aad
loope
sub
popa
push
data16
sahf
and
inc
xor
xor
pop
lods
push
fisttp
pushf
fdivr
ins
inc
xchg
lahf
add
in
das
mov
ins
sbb
mov
and
out
inc
pop
ins
push
xchg
jnp
and
push
movs
sbb
popf
in
icebp
or
jo
pop
and
ret
sub
add
retf
jmp
push
cmps
adc
xchg
add
das
push
and
xlat
sbb
or
popf
fisttp
pusha
xlat
xchg
cmp
dec
sub
scas
rol
pop
fsubr
int3
stos
out
(bad)
and
mov
adc
xchg
adc
fwait
cmp
jle
push
dec
add
mov
and
adc
add
jno
xor
loope
aaa
ret
mov
in
lock
jmp
push
push
imul
cmp
in
mov
add
sbb
mov
rcl
cmp
adc
in
and
mov
and
das
pop
stos
out
faddp
lea
cmp
sbb
sbb
rcr
push
jo
push
lods
xchg
pop
outs
stc
cmp
pop
hlt
(bad)
or
adc
pop
inc
adc
aad
out
cwde
pop
pop
rcl
or
or
inc
sbb
and
and
add
call
or
inc
hlt
adc
xchg
mov
jo
xor
sahf
adc
daa
dec
call
ins
arpl
test
push
mov
xor
and
sub
pushf
mov
xor
ss
stos
imul
adc
ret
jne
inc
pop
xor
sub
mov
adc
or
in
adc
icebp
mov
cmps
imul
jno
dec
mov
imul
jmp
les
lea
push
lea
cmp
imul
sub
mov
int
lahf
jecxz
cmp
test
sbb
and
in
and
(bad)
loop
enter
dec
add
and
mov
add
out
aad
mov
lea
popa
inc
sbb
aaa
mov
sub
idiv
cli
xchg
mov
je
mov
aas
enter
jne
scas
and
add
ror
xchg
inc
dec
or
adc
mov
sbb
inc
pop
xchg
sbb
pop
sub
mov
std
daa
mov
push
xor
js
pop
repnz
jbe
inc
sbb
nop
inc
and
mov
add
int
sub
test
and
mov
xor
pop
imul
fld
scas
in
in
and
test
mov
adc
jns
mov
xchg
push
test
test
hlt
mov
inc
push
nop
inc
fs
push
cmp
sub
mov
div
ss
add
mov
inc
xchg
sbb
aaa
add
je
sub
add
test
xor
retf
inc
in
sbb
mov
scas
hlt
les
std
sub
mov
jne
je
sar
je
inc
js
inc
js
jl
mov
jmp
pushaw
test
adc
fisttp
aam
sub
or
xor
enter
mov
and
fldcw
dec
mov
cmp
dec
iret
mov
push
sti
push
sub
xchg
mov
sbb
adc
dec
add
test
test
rcl
mov
fisttp
inc
ins
add
sti
inc
and
lea
outs
or
ds
inc
mov
ret
sub
test
push
shr
hlt
lods
ror
sbb
dec
cmps
(bad)
lock
ror
rcl
add
or
mov
xchg
test
jns
or
dec
mov
push
push
or
add
sahf
mov
push
xchg
pop
enter
movs
mov
fadd
aas
repz
cli
mov
scas
dec
mov
shl
mov
adc
mov
mov
das
das
cmp
sbb
fnstenv
fwait
jb
mov
mov
xchg
add
mov
mov
lods
mov
add
mov
sbb
cmp
dec
cmp
add
cwde
mov
outs
je
inc
repz
add
push
lock
test
xchg
mov
fs
mov
or
xor
imul
nop
inc
pop
sbb
pop
inc
add
and
addr16
fisubr
pop
add
in
or
jecxz
gs
and
mov
sar
inc
and
pop
adc
inc
sbb
adc
arpl
bound
rol
mov
fistp
pop
add
mov
push
adc
sbb
ins
xor
xchg
sbb
adc
mov
loop
xor
movs
add
pop
inc
nop
cmp
mov
push
pushf
and
push
or
pusha
dec
mov
out
and
aaa
out
sbb
pop
add
dec
imul
mov
nop
shl
movs
test
dec
mov
add
fadd
inc
pop
lods
(bad)
sub
xchg
mov
inc
aam
ucomiss
xchg
mov
in
lods
xlat
ror
(bad)
mov
inc
mov
test
rol
mov
pavgb
ret
sub
clc
into
inc
cli
adc
into
mov
cmp
fbld
enter
leave
stos
pop
add
loope
sbb
jecxz
sbb
pop
hlt
xchg
aaa
and
and
push
add
jae
push
cmps
pop
mov
xchg
popa
ret
or
jne
mov
pop
dec
dec
xchg
das
mov
pop
daa
fcom
inc
(bad)
mov
xchg
push
xor
xchg
es
scas
sbb
jmp
jb
das
cmp
mov
and
add
aas
in
push
jb
mov
call
mov
iret
mov
add
add
rol
daa
pop
and
and
in
adc
movs
add
ret
cmp
dec
inc
fiadd
mov
dec
mov
aad
test
test
mov
lock
pop
sahf
xchg
mov
mov
int3
fs
add
aad
bnd
gs
sbb
je
test
push
pusha
sub
in
test
mov
repz
mov
push
cwde
add
fdivr
test
daa
shr
sub
mov
xchg
fwait
rcr
pop
push
fwait
push
in
cmp
xor
ins
aas
and
mov
add
adc
(bad)
cli
test
jmp
xchg
fcomp
fcom
cmc
or
dec
mov
push
cmp
mov
inc
pop
inc
rcr
add
or
xchg
dec
mov
sbb
add
sub
push
cli
das
add
push
inc
in
bound
int
adc
mov
mov
repz
jb
sbb
arpl
and
push
in
pop
mov
loope
push
(bad)
mov
adc
jg
jmp
retf
test
pop
daa
rol
ror
push
leave
test
sub
inc
mov
or
add
sbb
xor
and
std
cmp
xor
call
jl
jns
dec
js
or
ret
dec
loope
ds
jne
fld
or
add
ror
loopne
push
fistp
jns
xchg
inc
rcl
xor
push
js
add
aaa
add
enter
inc
test
(bad)
cmovne
inc
pop
mov
adc
adc
mov
inc
jnp
frstor
push
cmp
mov
imul
loopne
adc
fmul
cmp
in
sub
or
leavew
push
mov
cmps
int3
in
call
ins
in
out
add
sets
movs
iret
leave
test
adc
xchg
sbb
daa
pop
xor
inc
pop
jnp
add
aaa
mov
xchg
cmps
mov
push
rol
push
or
xlat
popa
mov
inc
pushf
ret
sub
je
xor
cmp
ret
sub
loopne
out
xchg
inc
push
lods
push
(bad)
repz
add
xor
js
jo
in
sbb
cmp
or
and
dec
xor
inc
add
push
dec
and
mov
xor
cwde
mov
or
enter
pusha
ins
or
mov
mov
dec
and
push
or
gs
gs
pop
enter
jo
and
sbb
fnsave
leave
jl
mov
test
pop
fwait
jno
xchg
sbb
sub
cwde
test
lods
xor
leave
fdiv
jne
imul
pop
mov
rcr
add
jnp
inc
ror
xor
jno
add
dec
pop
adc
jno
cmp
jp
add
out
jge
lods
mov
and
je
adc
adc
mov
pushf
aaa
sub
add
shr
inc
dec
push
mov
rcr
mov
outs
sbb
cmps
lock
sub
inc
mov
push
lds
mov
sub
fwait
mov
sbb
rcl
loopne
test
popa
or
test
pop
cmps
ret
and
adc
and
inc
mov
add
mov
adc
add
cld
and
push
div
ret
jmp
nop
adc
scas
or
dec
pop
mov
sub
xchg
push
mov
push
mov
xchg
out
push
mov
pusha
mov
mov
cmp
test
mov
add
add
add
ror
mov
imul
inc
and
mov
(bad)
mov
ja
adc
jae
sbb
xchg
(bad)
mov
sub
sbb
xchg
dec
xlat
adc
push
ret
xchg
xchg
fs
add
fcomp
sbb
das
sbb
fiadd
sbb
push
dec
leave
add
mov
mov
ins
mov
fsub
loope
mov
push
in
das
rol
adc
pop
mov
pushf
rcl
mov
mov
outs
mov
clc
mov
and
xchg
inc
push
pop
mov
sub
repnz
leave
cwde
cld
add
loopne
pop
retf
sbb
mov
or
sbb
xor
ins
movs
retf
es
fdivr
call
mov
das
icebp
push
adc
push
cmc
inc
sub
test
mov
mov
sbb
in
stos
retf
push
push
mov
je
cmp
add
xchg
add
cmp
fcom
jecxz
stos
xor
or
push
jg
aas
mov
hlt
jmp
fsubr
xor
xor
pop
or
das
push
push
inc
jns
sbb
aas
adc
dec
inc
out
xlat
xor
pop
pop
call
mov
dec
call
xor
and
nop
jmp
adc
or
int
and
push
mov
(bad)
outs
add
clc
push
and
(bad)
mov
jae
loopne
in
hlt
lock
push
jle
xchg
int
fnstcw
push
adc
imul
retf
out
shl
fs
ja
add
dec
dec
sub
test
xchg
(bad)
in
mov
jne
(bad)
mov
push
jmp
push
sub
call
aam
cmps
mov
push
cs
and
repz
in
or
jb
jg
fldenv
jmp
sbb
mov
jbe
cmps
dec
cli
mov
nop
aaa
int
loop
jo
fistp
outs
sub
xchg
mov
xchg
jne
int
cli
dec
pop
sbb
mov
out
icebp
dec
inc
ds
or
add
xor
into
inc
out
out
add
retf
lods
xchg
sbb
xchg
inc
inc
ficom
mov
nop
adc
pop
pusha
jmp
cmp
xor
add
stos
fsub
ins
mov
jg
mov
dec
pop
les
jmp
inc
mov
pop
adc
leave
nop
outs
add
mov
rcl
rol
mov
xchg
adc
xchg
or
rol
inc
xchg
ret
add
sub
add
ret
rol
or
add
nop
adc
mov
rcr
rcr
adc
and
pop
pop
inc
sbb
dec
dec
inc
dec
push
aaa
(bad)
push
jmp
hlt
jle
add
lahf
std
call
jl
or
movzx
adc
xor
sub
sbb
fsub
add
adc
aas
and
jae
mov
push
push
outs
(bad)
mov
or
mov
mov
pop
js
pop
les
rcl
push
jecxz
in
sar
push
mov
stc
sbb
mov
jmp
movs
jle
pop
leave
ins
add
mov
add
xchg
push
jmp
or
sbb
pop
dec
or
pop
push
rol
rol
or
or
call
or
cmp
iret
rcl
pop
mov
or
inc
lods
ret
inc
xchg
leave
and
fs
(bad)
or
mov
push
mov
outs
imul
mov
(bad)
in
add
mov
pop
or
jns
sub
sbb
xor
loope
inc
sub
nop
ins
cmp
in
stc
xchg
push
aaa
ja
or
xor
neg
out
jge
dec
cmp
add
ins
dec
mov
cmp
mov
loopne
sub
and
jmp
pop
in
fcom
(bad)
xchg
xchg
sub
rcl
aam
sub
nop
aam
enter
xchg
push
int3
sbb
dec
ret
(bad)
mov
pop
les
push
pop
shl
push
fsubr
imul
stc
popf
xchg
mov
inc
cmps
bound
fnstenv
push
or
and
leave
sbb
fsub
in
es
movs
hlt
inc
pop
outs
rep
inc
mov
adc
cwde
int3
sub
(bad)
or
rcl
push
xor
sbb
mov
add
cmp
pop
inc
add
je
dec
call
jb
ds
sbb
addr16
sahf
inc
fiadd
sub
hlt
lods
lahf
inc
call
mov
xchg
jno
and
xor
fst
add
pop
adc
or
mov
fstp
dec
adc
xchg
add
call
cmovs
adc
jae
sub
inc
add
add
fisub
shl
cmp
jmp
or
dec
push
mov
jp
jo
call
fcmovnu
adc
adc
cld
inc
add
mov
int3
mov
adc
jo
add
dec
jae
scas
dec
fadd
mov
push
xor
push
fadd
pop
pop
fild
inc
add
mov
mov
adc
fsubr
inc
fdiv
mov
add
dec
shl
in
xchg
or
add
pushf
pop
mov
fmul
pop
rcl
in
sub
inc
cmps
clc
fld
add
js
push
sti
inc
loopne
cld
and
out
xchg
cmp
mov
sbb
shr
pop
shr
repz
jno
sub
push
sbb
push
scas
mov
add
test
xor
pop
in
rcr
lock
rcr
sahf
cmps
fnstcw
fisubr
mov
jns
jnp
add
add
jmp
mov
call
nop
adc
(bad)
dec
or
push
adc
sbb
cmp
je
mov
sahf
inc
fsubr
fsub
mov
sbb
lea
stc
dec
repnz
mov
stc
sbb
shl
mov
and
nop
int3
int3
push
adc
enter
or
je
pop
aam
add
dec
add
sub
pop
fisubr
adc
dec
ds
(bad)
jmp
pop
xor
push
enter
mov
mov
push
nop
fwait
pop
add
inc
dec
add
movs
loop
add
stc
dec
addr16
mov
stos
jo
pushf
test
div
addr16
jo
test
js
mov
push
test
pop
add
popa
dec
test
xor
add
hlt
and
or
xchg
or
in
call
jge
jne
sbb
and
xchg
jae
test
adc
sub
leave
leave
dec
fadd
(bad)
leave
enter
fcom
add
aam
pop
jns
inc
or
in
add
or
sub
imul
loopne
ret
and
push
ror
ret
mov
cld
in
out
aas
xchg
or
loop
mov
sbb
ins
dec
jg
push
mov
and
adc
jp
cmps
lock
jmp
adc
adc
es
sub
hlt
call
mov
pop
sub
inc
js
xchg
add
int3
inc
mov
ror
daa
dec
bound
out
add
add
or
cmp
adc
push
mov
dec
xchg
cmc
sub
add
cwde
xor
mov
daa
in
enter
inc
retf
aaa
pop
test
or
hlt
xchg
xchg
sub
dec
rol
and
mov
addps
cmp
dec
pop
adc
pop
es
adc
sar
mov
add
push
sub
std
push
cli
pop
das
mov
cmp
jbe
push
cmp
or
int3
mov
xor
jns
dec
sti
stc
mov
inc
outs
stc
and
call
je
mov
stc
add
and
call
xchg
in
in
add
xor
lock
dec
jecxz
ror
add
call
pop
stc
arpl
bound
mov
stc
push
adc
outs
jmp
or
hlt
int
adc
shl
jb
sbb
lock
pop
movs
push
push
(bad)
mov
in
fst
in
js
out
in
stc
hlt
mov
cs
hlt
xchg
retf
xor
xchg
push
mov
sub
push
jns
mov
xchg
pop
repnz
loopne
jbe
and
loopne
dec
fdivr
fmul
scas
jbe
and
fdiv
pop
and
aam
dec
shl
sbb
int3
pop
xor
xchg
pop
xor
dec
leave
hlt
clc
hlt
clc
xor
sahf
cmp
out
and
mov
mov
shl
inc
mov
fs
mov
sub
popa
in
mov
add
mov
sub
in
inc
rol
ror
xchg
data16
add
xchg
lods
cmp
lock
cmp
jbe
lods
mov
or
xor
aaa
xchg
sbb
rcl
xor
out
sbb
mov
mov
dec
(bad)
adc
inc
faddp
das
dec
test
add
shl
stos
sbb
in
and
xchg
cmps
lods
sub
pop
pusha
push
adc
mov
inc
jno
loop
push
call
out
or
push
pop
jnp
in
fs
call
leave
inc
cmc
lods
dec
hlt
mov
pop
dec
lock
lods
dec
in
mov
pop
dec
call
aad
dec
in
in
enter
loopne
enter
(bad)
into
enter
cld
push
mov
mov
retf
mov
fwait
push
sbb
jecxz
push
sub
mov
push
dec
outs
sub
push
dec
dec
enter
imul
mov
xchg
dec
jle
xor
push
dec
jecxz
xor
ret
mov
out
cdq
push
repz
popf
mov
or
inc
sahf
sub
in
fadd
sbb
sbb
out
es
and
fsubr
add
test
and
adc
(bad)
out
sub
push
fdivr
outs
cmp
nop
mov
lods
xlat
scas
sbb
add
inc
jle
hlt
push
jo
inc
hlt
and
mov
in
push
sbb
hlt
into
repz
arpl
inc
mov
mov
cmp
jne
sub
cwde
or
mov
mov
add
mov
inc
dec
mov
add
lock
sub
dec
xchg
jno
lods
in
fnstcw
fcomp
repnz
xchg
icebp
sahf
idiv
sub
push
jae
ins
sar
loop
mov
call
out
out
in
dec
loopne
pop
leave
push
out
loopne
fsub
push
push
out
fdiv
out
out
fdiv
enter
ror
and
int3
xchg
or
add
mov
mov
cmp
repz
call
mov
cmp
pop
ret
out
sub
add
and
les
mov
les
inc
fistp
cmc
add
sub
ret
push
xchg
dec
lock
test
imul
sub
or
push
mov
and
cmp
out
sbb
xor
ret
add
mov
pop
test
push
push
cmc
mov
dec
sub
add
mov
repnz
cmp
(bad)
dec
mov
stos
dec
int
mov
or
out
call
push
add
in
push
push
push
imul
add
in
push
fcom
jecxz
or
dec
jne
retf
mov
or
sbb
push
add
in
popa
pop
test
push
sub
test
add
sbb
or
int3
rol
push
sub
clc
cmp
xchg
pop
jne
adc
adc
xor
hlt
(bad)
movs
shl
pop
in
ret
popf
adc
stos
jp
xchg
test
jne
push
ret
movs
stc
fmul
in
in
sub
sub
inc
sub
xor
rol
mov
add
push
sbb
int
daa
add
mov
xor
adc
mov
mov
add
jecxz
es
(bad)
stc
adc
jo
mov
xlat
sbb
(bad)
cmp
and
shl
fcmovne
shl
jle
or
or
iret
rcr
hlt
cmp
hlt
imul
(bad)
mov
stc
in
mov
aas
clc
out
xchg
fild
jmp
sbb
add
cdq
xchg
stos
adc
add
mov
sub
jnp
jl
pop
frstpm(287
loopne
dec
cdq
or
xor
shr
add
in
mov
inc
add
xchg
sbb
pop
or
(bad)
imul
inc
(bad)
add
push
mov
xor
test
and
retf
stc
mov
dec
push
dec
loopne
inc
lods
inc
popa
mul
cmp
popa
cmps
push
pop
push
sti
adc
add
dec
scas
add
dec
hlt
push
mov
inc
lods
inc
add
shl
xor
aas
add
aas
add
popf
leave
dec
jmp
adc
lods
loope
add
call
loopne
push
mov
adc
jmp
pop
and
jno
int3
jo
sub
sti
(bad)
ret
icebp
add
pop
test
cmps
inc
add
mov
or
mov
xchg
push
push
retf
add
or
call
adc
cmp
mov
(bad)
sti
pop
xor
xchg
test
cld
mov
pop
std
and
cld
add
pop
leave
and
inc
inc
inc
retf
sub
jo
outs
in
(bad)
jns
add
fadd
inc
adc
ins
(bad)
in
in
je
inc
lods
add
jnp
and
push
int3
test
sbb
mov
jle
xchg
push
pusha
loopne
push
imul
mov
push
xlat
mov
movs
adc
mov
cmps
mov
xchg
inc
xchg
dec
push
cmp
shr
cmp
add
or
in
inc
ror
pop
rcl
pop
repnz
in
xchg
in
push
sahf
mov
call
xchg
test
xchg
vmwrite
call
loope
push
sub
add
mov
call
xchg
sbb
and
lods
adc
das
loope
out
add
lds
sub
cdq
mov
cmp
adc
mov
cmp
rcr
adc
adc
or
adc
fild
aad
mov
in
pop
or
icebp
nop
sar
mov
mov
mov
xchg
cmp
sbb
test
xchg
and
adc
xor
adc
test
mov
push
cs
aas
sbb
(bad)
push
or
loop
loopne
mov
and
sbb
pop
sub
not
mov
cwde
cmp
jne
add
jae
push
les
ja
(bad)
pusha
dec
pop
or
rcr
mov
cmp
test
test
pushf
pop
iret
jmp
sub
outs
retf
es
dec
mov
xchg
push
or
les
cmp
adc
cmp
cwde
jle
mov
push
pop
cmps
add
mov
js
fbld
nop
sbb
cmp
sbb
xor
or
xchg
xchg
(bad)
stc
sbb
add
add
push
in
retf
in
xchg
gs
imul
xchg
add
ret
popa
or
mov
dec
and
sbb
jg
xchg
mov
dec
mov
ds
lea
adc
in
pop
pop
sub
hlt
mov
cmp
jo
push
sar
mov
and
inc
in
mov
mov
ror
jnp
fbstp
and
outs
pop
sub
ret
fisubr
in
arpl
mov
and
push
rol
or
mov
scas
jne
push
ficomp
scas
mov
nop
mov
add
mov
cmps
mov
(bad)
lods
add
js
push
lock
sub
push
mov
sub
imul
daa
and
push
aam
out
ja
or
inc
lods
sti
inc
xchg
xchg
adc
sbb
or
enter
adc
add
xor
in
shr
pop
shl
pop
loope
add
loope
ins
in
or
add
mov
pop
sbb
inc
or
inc
adc
nop
xchg
inc
adc
xor
xchg
pop
mov
pop
xor
push
sub
dec
xor
jmp
bound
test
mov
add
ret
(bad)
pop
daa
xchg
dec
cmp
jb
into
enter
or
daa
pop
pop
cmps
dec
push
sub
loopne
ror
enter
dec
aad
out
adc
inc
or
jmp
inc
pop
xor
add
dec
push
(bad)
call
xchg
xor
pop
ficomp
fwait
add
sub
(bad)
mov
cmc
adc
les
add
jmp
sar
xor
xchg
add
sbb
and
jle
jl
in
push
xor
daa
jns
movs
push
movs
xor
ret
add
jl
mov
das
movs
(bad)
push
sbb
fisttp
imul
and
bound
stos
retf
stos
dec
sub
dec
mov
pop
pushf
pop
jmp
ja
stos
and
lock
sbb
cmp
xor
inc
dec
cmp
jg
fidivr
jne
arpl
pmullw
or
rcl
out
test
test
cmp
or
mov
mov
js
sub
pusha
(bad)
jo
push
jl
jbe
jmp
sub
pop
add
jp
inc
cmp
xor
adc
push
mov
rol
nop
fmul
mov
mov
xlat
push
inc
or
sbb
dec
cmp
(bad)
(bad)
retf
inc
xchg
and
inc
and
mov
js
or
cmp
sub
ja
loopne
push
push
mov
cmc
rcr
test
push
shr
in
fisubr
pop
push
mov
adc
jne
push
adc
cmp
popf
inc
mov
sar
or
fist
mov
test
movs
xor
arpl
pop
rcl
mov
enter
add
nop
test
shl
aad
mov
mov
hlt
sub
dec
into
xchg
adc
cmp
pop
or
dec
and
or
pop
mov
add
sbb
cs
cwde
jl
sar
dec
xor
cmp
daa
add
and
sbb
inc
inc
or
test
sbb
mov
add
mov
add
mov
mov
fs
fst
xchg
test
inc
popf
outs
mov
adc
xor
jmp
add
jbe
jne
stos
test
push
repnz
icebp
in
xchg
enter
or
popa
mov
push
out
add
and
popa
test
and
push
rcl
sbb
rcr
out
sti
adc
test
or
test
and
imul
sbb
call
adc
mov
dec
inc
add
cmp
lods
mov
jno
mov
and
inc
mov
scas
mov
push
jmp
repnz
xor
xchg
and
pushf
scas
push
loop
hlt
outs
dec
pop
adc
inc
or
inc
mov
mov
lods
jo
pop
jmp
xor
test
mov
daa
pop
movs
or
lods
push
retf
xor
push
and
mov
adc
ins
cld
sahf
mov
cld
sbb
pop
pop
loope
or
ror
dec
cmp
enter
dec
or
mov
xor
pop
and
add
or
push
pop
call
cmp
xor
add
and
or
pop
push
sbb
push
pop
test
cvtps2pd
jne
ds
adc
leave
or
xchg
test
or
sbb
push
push
aam
xor
jp
jbe
push
enter
pop
inc
mov
xchg
fcom
inc
test
inc
and
sbb
daa
out
ds
pop
xchg
shl
jecxz
fwait
add
loop
nop
xor
test
xchg
push
mov
mov
fs
fs
and
rol
mov
aam
xchg
test
push
cmp
inc
sbb
pop
es
(bad)
(bad)
xor
jl
inc
sub
imul
pop
inc
je
pop
les
dec
cwde
or
inc
js
jo
jb
push
mov
fimul
loopne
xor
or
pusha
lahf
bound
je
lahf
sti
xor
jnp
mov
sub
stc
or
inc
push
cmp
mov
or
push
jmp
imul
into
cmps
add
or
das
add
imul
or
xchg
or
mov
jo
out
or
or
cmp
icebp
pop
mov
xchg
xor
les
or
sub
fiadd
push
or
push
and
jmp
bound
xchg
lahf
jle
jmp
push
mov
rcr
je
pusha
adc
jnp
mov
mov
and
mov
sbb
push
cld
add
or
mov
daa
adc
dec
add
ret
call
pop
push
xor
sub
enter
mov
cld
mov
inc
sub
sahf
mov
mov
adc
daa
jbe
or
cmc
adc
cmp
add
ret
add
movs
xor
jne
fadd
mov
aas
jno
ins
rol
lea
scas
clc
and
xchg
lea
call
sbb
dec
cmp
or
sti
xor
cmp
das
std
pop
rol
std
in
sbb
(bad)
nop
xchg
adc
jp
sub
and
push
mov
adc
push
std
xor
and
popa
and
outs
xor
ror
mov
push
inc
pop
std
jo
cmp
adc
sbb
inc
cmp
sub
(bad)
mov
push
pop
adc
call
aad
js
mov
sbb
int3
inc
loope
dec
mov
movs
xor
into
and
cs
sub
pop
adc
lods
pusha
adc
push
jg
nop
cmp
cmp
cmp
cmp
add
add
cmp
cmp
cmp
cmp
or
or
sar
or
inc
jb
es
push
(bad)
jl
in
invd
push
sub
xor
iret
inc
dec
push
dec
pop
pop
xor
call
cs
xor
cmp
jae
sub
xor
adc
sub
cs
jbe
xor
xor
mov
dec
push
loope
or
dec
lock
ror
aaa
jae
dec
jmp
arpl
inc
in
(bad)
scas
jae
lahf
bndldx
movs
push
inc
adc
xor
jmp
or
xor
bound
lock
(bad)
pop
cmp
dec
add
and
jg
out
pop
nop
adc
dec
xchg
in
dec
push
inc
push
dec
inc
dec
push
or
mov
sar
xor
dec
call
add
mov
data16
xchg
pop
inc
push
pop
xor
xor
lahf
xor
xlat
pop
ret
dec
dec
inc
inc
addr16
out
imul
xchg
outs
imul
sub
clc
dec
inc
push
jb
inc
inc
(bad)
mov
daa
xchg
fmul
hlt
inc
inc
jg
rcl
push
xor
push
call
dec
dec
cmp
mov
mov
(bad)
xor
xchg
cmp
or
stc
mov
dec
pop
cmp
pop
sbb
test
push
push
inc
adc
add
or
push
nop
inc
xor
or
xchg
retf
enter
push
and
movs
leave
xor
aad
fdiv
dec
push
pop
inc
pop
xor
sti
push
xor
push
mov
sub
adc
jmp
imul
mov
dec
dec
int
pop
ins
imul
pusha
dec
push
daa
pop
pop
xchg
push
and
out
fdiv
inc
push
inc
pop
mov
mov
daa
or
mov
or
inc
mov
cvtps2pi
push
add
loope
(bad)
ss
ss
(bad)
mov
aaa
loop
cmps
mov
scas
dec
add
push
outs
popa
pop
js
adc
rcr
aaa
addr16
and
lods
stos
xlat
(bad)
outs
call
xor
js
bound
mov
xor
fcmovu
push
lahf
ja
push
mov
cmp
xor
inc
mov
xchg
push
add
dec
aaa
popf
(bad)
and
mov
jne
mov
lahf
inc
push
aaa
xor
mov
push
jo
outs
sbb
mov
(bad)
imul
fsub
cmps
cmp
cmp
jecxz
inc
pop
dec
pop
xchg
loopne
out
adc
cmp
fsub
xchg
addr16
push
lds
mov
xor
xchg
xor
inc
fisttp
bound
mov
add
xor
cmp
das
dec
inc
pop
pop
lock
or
daa
xor
sub
xor
dec
sub
aaa
(bad)
fcom
aaa
vpmacsswd
xor
aaa
mov
cs
inc
pop
push
xchg
sbb
mov
dec
ds
cmp
push
sub
popa
sbb
xchg
or
gs
pop
xchg
and
pop
add
ss
iret
adc
push
in
mov
push
icebp
dec
sahf
je
push
sub
cmps
cld
push
outs
xor
mov
das
ja
das
xchg
arpl
or
and
in
adc
xor
xor
arpl
cmp
xor
aas
pop
xor
je
sti
sahf
inc
inc
pop
jp
sub
cmp
xlat
das
arpl
dec
stc
sar
bound
xor
rcl
push
add
lahf
(bad)
inc
mov
js
cmps
push
add
mov
inc
pop
add
outs
outs
add
mov
mov
pop
dec
cmp
sbb
xor
aas
adc
ficom
xor
jbe
ja
pop
xor
xor
sub
outs
iret
cmp
loopne
cmps
inc
push
data16
and
push
push
bound
retf
shl
adc
lods
lods
lods
sbb
and
xchg
pop
sbb
pop
push
and
xor
dec
jecxz
sub
dec
cmps
in
xor
xchg
cmp
dec
hlt
or
dec
push
mov
aaa
cmp
or
dec
push
sub
loope
push
mov
popa
jb
loop
pop
or
cmp
aaa
out
bound
adc
add
lock
sub
lahf
aaa
cmp
xor
push
(bad)
cmp
gs
cmp
or
xor
lods
adc
cmp
cmp
xor
xlat
sar
aam
(bad)
cmp
and
xor
cmp
and
mov
dec
adc
xor
lods
scas
int3
mov
sub
mov
je
daa
dec
xchg
xchg
add
(bad)
(bad)
(bad)
push
loop
xor
jg
dec
inc
push
sub
shl
bound
cmp
movs
mov
aas
div
imul
sar
or
mov
push
xlat
xor
aad
xlat
adc
leave
rcl
xor
mov
bound
dec
(bad)
xor
ins
nop
inc
mov
mov
pushf
dec
xor
in
sbb
xor
mov
in
cmp
pop
ss
call
xor
stc
je
push
xor
bound
and
push
fist
cmps
cmp
imul
inc
pop
push
xor
fwait
sub
push
push
outs
jb
push
push
add
shl
pop
pop
daa
cli
aaa
ss
test
(bad)
fidivr
pushf
mov
xor
ins
xor
xor
inc
push
add
scas
dec
add
xor
and
xor
add
push
or
mov
je
sbb
int
xlat
push
and
pop
pop
jg
add
xor
outs
daa
add
ret
cmp
xor
movs
jb
cmp
nop
dec
cs
xor
sub
xor
and
xor
leave
and
ficom
inc
dec
inc
fistp
mov
addr16
xchg
add
xor
int
add
xor
xor
mov
les
jo
popa
mov
inc
and
ins
out
div
xor
inc
push
mov
div
xor
and
xor
les
xor
out
mov
imul
ss
jg
mov
mov
test
mov
push
dec
adc
adc
dec
or
pop
jnp
sub
fisttp
inc
xchg
enter
and
xor
leave
xchg
pop
ss
dec
dec
push
pop
cmp
push
sbb
xor
xchg
add
iret
jg
cmp
pusha
dec
mov
(bad)
or
inc
mov
sub
and
xchg
test
cmp
cmp
neg
push
nop
aas
push
ja
xor
cmp
or
dec
cmp
aas
dec
cs
cmp
test
xor
cmp
fistp
cmps
ins
addr16
pop
pop
fisttp
or
add
inc
push
add
inc
in
and
push
pop
iretw
inc
cmp
out
mov
daa
pop
push
cmp
(bad)
pop
mov
xor
mov
dec
adc
pop
and
push
jo
fs
jg
mov
test
and
xor
push
xor
xor
dec
xor
xor
push
jge
adc
adc
or
bound
push
pop
inc
lods
mov
das
xor
jbe
dec
ds
popa
arpl
sbb
outs
outs
pop
xlat
mov
or
pop
in
mov
cmp
cmps
sub
cmp
sub
mov
lods
mov
daa
(bad)
imul
push
daa
ja
jg
and
inc
inc
dec
push
xor
adc
iret
or
cmp
add
jne
push
and
mov
test
push
dec
dec
inc
jg
mov
ror
xor
mov
inc
xlat
sub
xor
ss
(bad)
xlat
outs
ins
aaa
xor
sub
push
xor
cmp
mov
fmul
pop
sub
xchg
xchg
(bad)
dec
dec
add
dec
arpl
xor
outs
sbb
add
ss
bound
scas
jne
pop
push
pop
fiadd
or
lahf
adc
jmp
aaa
scas
ffreep
dec
mov
push
ror
push
dec
mov
jo
sbb
inc
mov
ins
cmp
lea
sub
nop
push
daa
outs
div
mov
xchg
cmp
mov
push
pop
sbb
pop
dec
jne
or
lahf
imul
mov
mov
sub
(bad)
inc
enter
sub
inc
aas
cmp
lods
mov
addr16
mov
pop
pop
dec
popa
ins
pushw
je
and
or
outs
ret
or
add
es
scas
inc
push
cmp
pop
add
inc
out
gs
sbb
or
(bad)
push
sbb
dec
and
mov
loopne
mov
push
push
adc
aas
xor
sub
pop
loopne
xchg
push
push
aas
or
fcom
jae
es
cmp
pop
xor
inc
jecxz
add
or
push
sub
jns
das
arpl
je
ret
in
outs
ins
pop
push
nop
or
inc
ss
lock
inc
inc
dec
pushf
dec
dec
push
dec
cmp
cmp
aaa
xor
mov
addr16
addr16
and
xor
or
(bad)
mov
xor
xor
pop
xchg
fs
xor
add
add
das
xchg
test
aaa
and
cmp
add
imul
int
in
cmp
sbb
pop
imul
add
or
xchg
push
xor
daa
sbb
dec
enter
gs
xchg
xor
sub
dec
xor
adc
push
repnz
fisttp
(bad)
xchg
mov
aaa
dec
push
adc
data16
nop
pop
jb
aaa
xor
sbb
xchg
or
inc
mov
xchg
xor
fisub
push
xchg
seto
cmp
push
and
loopne
sbb
sbb
push
inc
cmp
push
mov
sbb
or
fist
sbb
xor
outs
and
nop
arpl
fdiv
jg
adc
and
mov
pushf
je
(bad)
cmp
sbb
sbb
es
shr
xor
cwde
(bad)
xor
rol
and
retf
cmp
and
cdq
nop
mov
xor
xchg
xor
and
xor
aaa
aaa
or
xchg
adc
xor
nop
or
xor
sub
and
lahf
xchg
add
fmul
jne
adc
pop
(bad)
cmp
xor
sub
xor
xchg
test
mov
enter
sbb
and
xor
and
ss
adc
sbb
in
jb
pop
cmp
cmp
addr16
inc
jb
cmp
xchg
nop
inc
push
cmp
(bad)
outs
arpl
jns
test
cwde
xor
inc
xor
pop
xor
dec
push
imul
sbb
pinsrw
sbb
cmp
sbb
cmp
cmp
xor
sbb
inc
mov
xor
pop
lds
push
or
dec
pop
jg
fs
or
in
lea
xor
mov
fcomp
xor
push
xchg
pop
lods
loopne
lods
adc
mov
sbb
mov
addr16
push
mov
pop
icebp
xor
xor
fadd
pop
push
or
rcl
pop
inc
mov
dec
lods
das
pop
xor
stos
popf
inc
xor
push
fwait
data16
push
pop
pop
adc
inc
dec
ss
pop
and
xor
push
pop
arpl
sub
fmul
push
mov
mov
dec
push
cmp
inc
push
or
ja
sub
scas
in
ss
daa
dec
inc
push
dec
push
in
dec
push
out
push
dec
mov
mov
sub
mov
sub
xchg
(bad)
xlat
mov
jns
imul
dec
xchg
scas
dec
outs
mov
outs
dec
add
push
(bad)
shl
jno
pop
pop
call
push
push
pusha
mov
xlat
pop
aaa
in
dec
cmp
sub
cmc
dec
imul
mov
cmps
adc
and
inc
sub
mov
pop
push
xchg
mov
sub
(bad)
les
and
cmp
xor
mov
push
sub
and
inc
cmp
repnz
mov
and
mov
xor
push
cmps
xor
xor
mov
push
jp
gs
xchg
and
inc
xor
mov
aaa
aaa
outs
outs
sbb
push
fbstp
xor
leave
nop
xor
cmp
gs
fbstp
xchg
add
cmps
and
enter
cmp
xor
xor
add
ss
and
xchg
ss
jb
dec
and
aaa
ins
push
or
jb
aaa
leave
add
cmp
or
sbb
inc
retf
sbb
es
dec
xchg
cmp
imul
addr16
sub
push
push
dec
add
mov
mov
push
and
xchg
aad
pop
adc
mov
push
or
nop
ss
xor
mov
and
xor
leave
mov
xor
xor
sbb
adc
sub
pop
and
xor
scas
clc
scas
ss
add
xor
xor
jo
add
xchg
cmp
xor
aaa
fcmovb
loopne
out
pop
cmps
rol
sub
cmp
push
add
xor
imul
mov
scas
pop
dec
push
aas
sub
es
pop
sub
sub
xor
pop
push
add
or
inc
frstor
xor
fild
fbld
pop
(bad)
fld
dec
popa
outs
push
pop
ins
in
xchg
pop
sub
pop
add
test
loopne
pop
rcr
pusha
jmp
int3
inc
mov
or
popa
xor
fild
iret
addr16
push
imul
cmp
dec
aaa
cmps
sub
add
test
lahf
dec
inc
aaa
or
push
sar
enter
pop
push
xchg
nop
out
adc
sbb
add
bound
sbb
dec
outs
ss
lahf
dec
push
das
adc
push
js
ret
out
mov
rcr
add
ja
leave
adc
mov
out
aaa
ss
pop
in
or
xor
aaa
push
xchg
sub
outs
sub
es
popa
ficom
cmp
add
inc
xor
mov
add
xor
xor
movs
dec
and
xor
adc
bound
je
push
jge
js
fs
mov
inc
inc
aas
lea
out
jb
out
mov
pusha
mov
mov
popa
mov
push
mov
inc
mov
xlat
jp
fistp
or
inc
mov
or
mov
(bad)
jnp
test
push
xchg
push
jns
bound
push
sub
add
xchg
cwde
xlat
scas
out
outs
dec
jp
xlat
sub
pop
add
dec
push
cs
dec
shl
data16
dec
or
sub
sub
xlat
sub
scas
sub
lahf
jns
test
cmp
push
sbb
jno
mov
or
ja
imul
shl
jp
hlt
dec
or
cmps
or
jmp
mov
push
xor
dec
sbb
jae
inc
loopne
push
mov
dec
rcr
inc
inc
pop
outs
pop
lds
xor
sub
js
push
mov
ins
sbb
inc
mov
pusha
pop
xchg
dec
pop
or
xor
add
cs
xor
ss
add
sub
sub
fistp
sahf
enter
aaa
outs
aad
inc
rcl
lahf
inc
mov
mov
inc
jbe
pop
add
inc
inc
fcom
push
add
out
inc
push
mov
xchg
add
nop
mov
mov
mov
mov
dec
lea
mov
cld
and
dec
jne
rcr
add
cdq
or
shr
adc
lock
add
push
repnz
push
inc
ins
add
dec
sub
or
add
push
jbe
inc
xchg
ficom
fs
sub
jbe
add
adc
mov
repz
jecxz
iret
int3
inc
in
mov
sbb
mov
iret
sbb
sbb
push
nop
sub
mov
mov
imul
cmp
jecxz
in
xchg
push
adc
adc
sbb
fild
mov
(bad)
cmc
ins
loop
push
clc
add
sub
xor
in
ss
add
jmp
add
xor
int
push
outs
cmp
add
mov
xor
dec
sbb
lods
(bad)
fs
or
push
cmp
inc
mov
scas
add
sbb
jns
ss
add
dec
inc
adc
pop
pop
out
push
xor
xor
or
adc
inc
call
adc
mov
mov
push
xchg
loope
ins
adc
mov
mov
xor
jp
add
jne
fadd
iret
mov
outs
loopne
mov
xchg
ja
mov
pop
fisttp
pop
mov
adc
or
pop
dec
adc
adc
sbb
nop
sub
mov
xchg
mov
jecxz
xor
xchg
js
ret
sbb
jmp
and
jge
sbb
lods
push
rcl
fwait
pop
push
retf
sub
shl
fidivr
nop
pop
std
push
push
jb
mov
inc
imul
movs
mov
mov
xchg
stos
sub
mov
push
mov
es
scas
inc
(bad)
jmp
retf
push
(bad)
mov
data16
and
cmp
push
pop
push
add
out
inc
sub
and
cmps
test
xchg
mov
add
dec
add
inc
bound
in
lods
mov
push
inc
pop
cs
pop
adc
or
fisttp
dec
dec
aad
cmp
lds
jae
leave
mov
leave
push
nop
inc
xor
pop
jmp
jno
inc
outs
(bad)
les
pusha
xor
les
dec
lds
jae
jnp
xor
xchg
cmp
test
dec
inc
cmp
sar
mov
or
push
and
jge
mov
adc
hlt
push
adc
add
int3
inc
js
cmps
adc
dec
sub
mov
inc
int3
inc
xchg
add
mov
in
jge
movs
push
adc
inc
pop
fcmovnb
mov
sub
dec
les
addr16
dec
jl
call
or
cwde
cmps
and
(bad)
adc
aaa
or
jnp
(bad)
lock
out
xor
rcl
ret
icebp
lock
les
jecxz
loope
mov
ret
or
pop
daa
popf
ds
mov
push
or
add
lods
xlat
inc
add
add
fbld
adc
daa
or
pop
push
test
(bad)
add
or
add
and
or
sub
mov
lds
cmp
or
ret
push
and
cmps
in
mov
dec
or
stos
push
fnstenv
add
popa
pop
mov
int3
shl
pop
cdq
nop
and
pop
xor
xchg
lock
call
stos
inc
lods
xor
daa
cwde
js
push
xlat
imul
movs
lods
int3
xchg
sahf
and
add
xor
sahf
lods
and
ins
sti
add
pop
test
mov
loop
xor
inc
or
pop
cmp
pop
push
imul
sar
adc
and
ds
dec
call
xchg
frstor
push
in
shl
xor
test
jno
adc
sub
aam
xchg
daa
cwde
cmp
js
xchg
inc
bound
adc
dec
dec
xchg
jge
sbb
lds
push
arpl
dec
(bad)
mov
dec
push
enter
test
pop
sbb
sub
movs
mov
adc
cs
fdivr
scas
das
nop
out
arpl
pop
mov
ret
cld
inc
add
es
or
mov
loop
imul
inc
xchg
hlt
xor
pop
mov
fild
push
les
div
adc
xchg
inc
sti
fnstenv
push
mov
out
ja
or
push
clc
push
xchg
push
xor
les
mov
mov
jnp
sub
or
stos
ror
add
js
jnp
hlt
fs
test
inc
(bad)
clc
or
xor
cmp
mov
aas
in
or
cmps
out
pop
in
pop
adc
sbb
sbb
inc
inc
xchg
jne
add
jl
dec
push
dec
outs
push
jne
das
push
gs
std
nop
xchg
push
add
in
dec
popa
inc
bound
mov
das
inc
jo
jns
imul
xlat
sbb
fsub
out
dec
arpl
jbe
movs
int
fild
das
and
sbb
fild
call
pop
adc
push
je
sub
pop
jp
and
push
repnz
aam
std
adc
pusha
imul
mov
lock
cmp
xchg
addr16
and
pop
or
push
dec
push
and
mov
inc
test
xchg
push
mov
fwait
mov
adc
jmp
jbe
and
enter
pmuludq
or
jne
xor
jne
pop
int3
fisubr
pop
inc
or
fcmovnb
inc
fist
push
jmp
sbb
and
js
add
das
push
je
imul
mov
aam
add
jbe
test
add
and
dec
sar
and
mov
inc
int3
add
(bad)
lods
adc
rcl
mov
mov
lods
enter
fsub
push
mov
jmp
test
push
mov
jg
call
dec
jle
daa
mov
and
movs
jae
and
lds
sub
cmp
pop
pop
movs
mov
lahf
rcr
std
cs
jbe
push
adc
pop
or
adc
ja
fwait
sbb
test
ror
dec
and
push
das
dec
pop
xor
sub
imul
push
add
gs
rol
jmp
sbb
push
and
sbb
pop
scas
loopne
lahf
pop
call
push
aaa
sbb
adc
inc
nop
sbb
out
xor
mov
and
dec
ins
cmps
fs
xchg
mov
or
adc
sbb
outs
mov
mov
cs
xor
mov
inc
mov
add
fs
out
dec
ficomp
xchg
lods
xchg
inc
lods
(bad)
in
mov
sub
sar
rcl
cmp
jmp
cmp
jae
or
or
repnz
push
pusha
xor
sub
stc
nop
movs
movs
mov
adc
inc
push
movs
or
(bad)
add
and
loop
mov
bound
popa
js
sub
sbb
push
pop
adc
add
cmp
or
cli
ins
shl
mov
push
imul
xlat
cld
jle
inc
push
cmp
adc
dec
in
ss
cld
cmp
pop
fcomp
sahf
and
cli
syscall
jge
ins
mov
mov
sti
inc
aam
xchg
jo
mov
sub
dec
mov
add
xor
cmps
add
dec
dec
and
and
or
loope
mov
push
outs
enter
and
cs
or
xor
add
jae
stos
ins
inc
pop
mov
push
hlt
add
cmp
add
xor
jmp
add
pop
xchg
adc
inc
mov
loopne
pop
fild
adc
mov
inc
or
and
ror
sub
stos
push
mov
xchg
jne
add
mov
test
push
leave
sbb
addr16
ret
or
adc
jge
mov
jmp
mov
mov
xor
in
push
mov
xor
fldcw
inc
call
or
fadd
out
outs
test
mov
(bad)
call
inc
dec
xchg
sub
xor
inc
lea
dec
or
and
inc
ins
cwde
in
mov
jmp
lsl
xchg
inc
inc
add
dec
pop
pop
ret
dec
adc
or
xchg
shl
stc
sahf
ss
sub
scas
push
ds
call
gs
sbb
adc
jmp
aas
pop
mov
loopne
ret
mov
push
xor
je
sbb
xor
mov
jl
in
mov
mov
lock
das
hlt
mov
xchg
or
inc
pop
(bad)
push
dec
dec
bound
and
fstp
call
dec
dec
nop
xchg
push
inc
inc
inc
dec
push
nop
or
repnz
dec
inc
push
(bad)
movs
and
push
imul
jno
sbb
cdq
dec
jno
paddusb
jb
enter
jno
jno
jno
dec
mov
jb
jb
mov
(bad)
jno
inc
repnz
jnp
inc
inc
das
dec
inc
push
inc
push
push
mov
movs
pop
pop
ja
push
dec
xchg
pop
push
inc
cmps
push
inc
push
dec
enter
inc
push
dec
dec
push
inc
inc
inc
dec
adc
pop
daa
inc
adc
jae
and
cmp
or
imul
adc
repnz
add
dec
sbb
je
cmp
nop
sub
push
fadd
out
retf
popa
test
cmp
inc
in
add
in
lock
aaa
or
inc
xchg
sub
loopne
dec
dec
jo
ret
test
adc
ret
cmp
(bad)
lea
mov
or
jge
les
jle
shr
popa
xchg
add
sahf
add
add
stos
lock
bound
dec
mov
sbb
cld
call
pop
xlat
pusha
addr16
jns
or
call
sti
pop
pop
movs
das
cmc
cmc
jae
pop
cmp
fs
outs
adc
je
mov
xchg
test
jge
retf
mov
ret
cmp
sub
dec
jne
test
jb
ror
pop
push
pop
pop
xor
adc
sbb
clc
xchg
js
(bad)
fs
lods
inc
retf
ror
std
arpl
rol
xchg
inc
jg
in
adc
jne
and
sub
ret
mov
jae
loopne
dec
cmps
push
xchg
pop
sysenter
push
(bad)
ja
add
call
inc
cmp
loopne
jne
cvtpi2ps
mov
addr16
mov
inc
or
mov
aam
cmovno
mov
xchg
(bad)
jle
sbb
fstp
std
outs
fsub
push
push
fld
jl
mov
(bad)
push
je
call
dec
cmp
jne
cmp
xchg
(bad)
jae
test
shl
shr
pop
outs
je
loopne
sete
rol
sbb
cs
adc
push
pop
test
fdivr
in
mov
sbb
hlt
and
fdivr
(bad)
in
jno
mov
jmp
sub
sub
xchg
sub
aam
sbb
dec
shr
stos
rcl
jmp
or
adc
xor
int3
inc
mul
mov
xchg
or
push
inc
out
enter
adc
sbb
test
mov
xchg
or
inc
lods
xor
js
add
add
xchg
iret
and
ss
fwait
js
push
mov
fnstsw
and
jbe
and
xor
cld
push
dec
sbb
ror
push
push
jb
pop
fld
sub
test
pop
inc
cmp
and
addr16
pop
dec
imul
mov
sbb
inc
das
mov
jbe
push
and
add
pop
pusha
bound
lods
xchg
cld
cwde
daa
inc
dec
push
inc
push
push
popf
dec
fsubp
and
xor
scas
xchg
fbld
repnz
in
jns
lock
jne
and
dec
jp
add
mov
pop
out
adc
or
and
xor
add
dec
(bad)
into
push
fadd
pop
mov
mov
xchg
inc
test
cmovle
aad
or
imul
(bad)
addr16
add
dec
adc
sub
push
sbb
test
or
push
in
rol
lock
fld
inc
das
inc
adc
sbb
push
inc
sub
or
or
mov
mov
cmp
sbb
mov
cmps
xchg
not
xchg
or
sbb
xchg
xchg
adc
adc
xchg
xchg
xchg
and
mov
mov
push
jg
adc
call
dec
sbb
mov
sub
ss
sub
cld
clc
jg
in
dec
ds
mov
out
(bad)
in
mov
jle
jl
lahf
hlt
push
pop
movs
push
push
repnz
mov
hlt
xchg
add
jae
lahf
ret
mov
shl
int3
dec
jmp
push
popa
ficom
lock
sub
sbb
rol
mov
dec
mov
and
add
inc
ds
xchg
pop
push
xchg
fadd
jne
sbb
iret
and
sbb
mov
add
in
add
sub
or
or
jo
or
xor
add
push
dec
neg
adc
jp
stos
jo
test
xchg
fsub
jg
in
push
dec
and
lock
sbb
test
outs
sub
and
inc
repnz
adc
(bad)
aam
sub
sub
outs
aas
aaa
(bad)
sbb
(bad)
jg
fdivr
and
(bad)
cmp
push
fld
nop
das
inc
pop
cmp
and
aas
add
pop
jb
and
dec
add
pop
sbb
inc
xor
scas
jno
jmp
add
or
pusha
aas
add
sbb
test
inc
fistp
or
push
sub
das
push
jno
jbe
mov
sub
fistp
pop
test
pop
and
jp
push
jo
les
mov
inc
xchg
aad
jmp
loop
test
push
leave
ja
jo
push
adc
and
fsub
add
push
sub
add
jmp
mov
add
daa
and
cmovae
adc
cmp
add
adc
in
aam
fst
inc
mov
push
cmp
out
fidiv
xchg
jbe
test
ss
push
rcr
and
aam
icebp
les
dec
sbb
(bad)
icebp
lock
mov
lock
jg
push
inc
adc
outs
and
xlat
adc
and
add
add
mov
xor
add
sbb
xchg
(bad)
push
add
sbb
or
stos
in
iret
out
iret
in
xchg
or
add
xor
dec
mov
in
pop
pop
xor
sbb
scas
cmp
push
add
cmp
mov
xor
sbb
ret
pusha
es
div
mov
gs
fs
push
mov
or
inc
xor
sub
or
sbb
test
cmps
lea
or
cmps
cmps
mov
xor
xchg
add
xor
pop
jp
xchg
(bad)
call
mov
(bad)
and
out
fcmovnu
test
(bad)
adc
call
(bad)
cmp
jg
xor
test
pop
or
lods
(bad)
mov
jne
ins
jp
cmp
inc
mov
add
pop
or
mov
mov
mov
push
jmp
xchg
inc
push
mov
mov
ficom
lea
lahf
je
lods
jne
dec
xor
inc
push
pop
mov
sbb
jne
pusha
pusha
mov
imul
in
xor
mov
jno
hlt
shl
adc
mov
mov
(bad)
mov
or
adc
lea
ror
jb
shr
lds
add
jg
xchg
add
jno
jne
data16
dec
enter
cmp
ins
inc
inc
or
icebp
movs
mov
push
int3
int
inc
ins
popa
into
xor
cmp
pop
push
test
inc
jo
dec
test
movs
out
mov
test
or
jecxz
and
add
int
xor
out
(bad)
and
mov
inc
or
xor
xor
dec
adc
jo
gs
sub
in
xchg
xor
icebp
pop
xor
jmp
imul
fisubr
aam
sar
inc
mov
fld
inc
or
aaa
mov
xor
cmps
mov
mov
push
push
outs
and
repnz
mov
mov
pop
and
or
pop
add
inc
adc
imul
adc
dec
push
hlt
jmp
jne
jns
test
mov
push
add
add
add
inc
pop
xchg
out
hlt
loopne
loopne
xor
or
imul
and
and
push
pop
adc
arpl
jle
jae
retf
aas
in
pusha
jg
(bad)
nop
xchg
mov
inc
fmul
mov
or
mov
aaa
adc
xchg
adc
dec
inc
mov
inc
xor
and
call
or
je
jmp
xchg
ss
cmp
mov
xchg
loop
out
in
ins
xor
in
popa
mov
sub
dec
cmp
movs
nop
cmp
adc
push
add
hlt
or
loope
lods
fcmovnu
loop
nop
pop
fisttp
lods
cli
cmp
adc
pushf
clc
(bad)
dec
adc
aaa
jl
sub
xchg
jae
add
push
lds
daa
adc
mov
sar
jge
sti
enter
test
mov
add
jge
dec
inc
sub
push
out
fmul
lea
mov
cmps
les
and
push
and
punpckhwd
clc
mov
or
leave
dec
cmp
outs
loope
cmc
xchg
in
push
ins
ret
and
push
mov
sub
scas
(bad)
mov
xchg
or
nop
mov
pop
(bad)
cmc
jnp
inc
adc
inc
adc
(bad)
cmp
inc
push
push
fsubr
(bad)
call
push
mov
xlat
daa
mov
test
cmp
sub
add
push
push
or
fstp
js
jmp
inc
test
and
sbb
data16
lods
or
push
add
and
and
or
xor
xor
bound
jbe
add
pop
and
jns
add
or
xor
sub
inc
xchg
mov
lea
xor
and
pushf
test
xlat
or
sahf
or
xor
fimul
adc
and
fnstenv
gs
adc
dec
ja
adc
xchg
sub
sbb
in
test
imul
nop
inc
mov
inc
jp
hlt
inc
push
adc
mov
imul
pop
add
pop
jge
into
test
mov
mov
inc
adc
jb
scas
or
xchg
xor
cmp
cmp
(bad)
push
hlt
xchg
out
and
int
xchg
cmp
sub
dec
xchg
inc
pop
push
push
sub
pusha
icebp
xor
scas
das
pop
sub
ja
push
add
or
outs
sub
mov
stos
rol
outs
or
or
jmp
mov
push
addr16
or
cmps
add
or
test
mov
aas
hlt
xchg
sbb
add
lahf
out
xchg
mov
(bad)
leave
cmps
mov
xor
enter
sub
and
sbb
push
jns
fist
mov
inc
jne
xor
push
aam
mov
leave
mov
xchg
mov
push
aam
push
push
dec
mov
xchg
in
ror
dec
mov
xchg
inc
pop
push
mov
clc
dec
lods
dec
rcl
cld
pop
dec
test
or
lock
test
pop
push
xchg
xor
in
or
daa
addr16
stos
cmp
fld
add
push
dec
inc
aas
xchg
test
jno
sub
sub
pop
bound
mov
mov
xchg
push
sbb
pop
pop
ja
das
xlat
push
aad
mov
sub
call
in
(bad)
xlat
dec
inc
mov
jb
mov
mov
adc
test
push
inc
add
sub
push
mov
mov
call
dec
cmc
sbb
in
jnp
or
ret
push
imul
int
push
pop
xchg
xchg
push
and
ins
add
sbb
cmps
adc
add
pop
push
cli
xor
loop
cmp
iret
ins
mov
clc
and
and
div
add
push
or
or
jmp
lods
mov
adc
adc
jle
push
mov
sub
or
xchg
test
inc
test
mov
and
fsin
es
lahf
jno
push
prefetcht2
adc
push
cmps
test
or
(bad)
sbb
jge
(bad)
push
mov
inc
sbb
push
xor
mov
mov
mov
retf
test
xchg
cmp
nop
hlt
pop
cmps
add
inc
dec
enter
inc
push
add
or
call
jo
adc
in
pop
ss
fild
add
out
add
ds
or
jl
dec
adc
fadd
rcl
test
mov
cmps
jb
xor
jb
inc
sahf
or
add
push
push
cmp
sti
rdmsr
inc
jmp
dec
jle
pop
push
repnz
cmps
in
sub
add
xor
test
add
mov
sbb
jmp
popf
xor
xchg
paddsb
loope
push
test
push
mov
iret
cmp
test
pusha
fild
cmc
sbb
adc
fild
out
mov
lea
xor
daa
inc
in
rcl
jl
adc
add
cmp
add
retf
pop
push
push
add
out
or
dec
pop
call
jne
sub
in
xor
mov
or
neg
enter
cdq
cmp
cdq
sbb
add
push
js
rcr
mov
push
loope
adc
call
dec
dec
dec
inc
nop
pop
pop
sub
mov
mov
fild
iret
inc
and
inc
dec
dec
mov
dec
dec
dec
dec
dec
fcom
push
cli
mov
pop
pop
(bad)
pop
addr16
movs
and
(bad)
out
jle
jb
je
jbe
js
jp
dec
xor
mov
aaa
cmp
sub
xlat
outs
daa
(bad)
cmp
pop
adc
inc
xor
dec
adc
enter
sbb
dec
pop
sti
and
call
inc
push
cld
(bad)
shl
and
fwait
js
ss
push
pop
cmp
in
inc
fisub
mov
mov
shl
push
enter
call
sar
lea
test
push
rol
adc
xchg
int3
clc
push
sub
cld
xor
rcr
ficomp
aam
sub
adc
sub
daa
adc
adc
mov
rol
cmp
scas
dec
push
mov
dec
push
pop
mov
inc
mov
and
test
push
out
cmp
sub
add
andps
test
inc
or
xchg
xchg
addr16
clc
mov
dec
pushf
add
and
xchg
ja
loope
push
daa
inc
fdivr
js
bswap
pop
retf
add
sbb
cmp
inc
mov
mov
rcl
push
imul
rcl
sbb
shl
test
or
push
stc
xor
pop
sbb
push
push
cmp
clc
pusha
adc
sbb
xor
loope
sbb
jne
push
add
and
sbb
pop
dec
sar
add
sub
mov
lahf
and
mov
mov
ins
push
add
xor
popa
ins
pop
add
jmp
out
or
mov
add
jo
adc
test
je
into
jne
sbb
loope
das
jo
jmp
mov
sbb
push
mov
add
clc
data16
inc
mov
xor
sub
adc
adc
or
es
sbb
or
outs
lods
cs
mov
jo
xor
jb
adc
jl
xchg
xchg
(bad)
jne
push
mov
mov
fisttp
pushf
mov
lahf
sbb
inc
les
sub
lods
(bad)
(bad)
pop
stos
push
inc
syscall
mov
das
or
inc
push
inc
xchg
mov
aas
jbe
nop
pop
data16
frstor
add
cs
sub
mov
ret
cdq
adc
mov
push
sbb
mov
or
inc
or
jo
jg
xchg
sub
cmps
fcom
mov
in
sbb
stc
(bad)
jo
clc
mov
xchg
mov
ret
popa
or
xor
xor
nop
xor
xchg
mov
inc
lods
mov
outs
xchg
fs
imul
and
jl
mov
dec
shl
jno
sub
into
in
(bad)
popf
jmp
nop
adc
add
inc
adc
mov
mov
add
xchg
movs
scas
sub
arpl
fsubr
outs
shr
mov
fldcw
xchg
lods
je
iret
out
cmp
add
mov
cmps
fs
les
into
cmps
push
jo
sub
pop
push
add
cwde
sbb
arpl
(bad)
ror
inc
out
inc
sbb
fwait
jo
sub
mov
add
jmp
xlat
bound
adc
movs
jmp
test
add
inc
fistp
fisttp
test
adc
dec
iret
out
cmp
(bad)
fdivr
dec
mov
sbb
movs
dec
jo
enter
adc
sbb
push
aas
jbe
movs
xor
inc
xchg
pushf
daa
push
fldcw
(bad)
outs
lock
fs
add
sub
add
daa
mov
pop
cmps
out
mov
daa
and
mov
pusha
push
sub
addr16
int
pop
jb
xchg
push
aam
enter
lahf
push
sub
pop
les
adc
pusha
stc
pop
mov
inc
outs
outs
imul
cmp
mov
or
xlat
or
movs
cmp
jge
shl
xchg
cmp
stos
sbb
cld
lods
inc
out
call
push
mov
ret
push
lods
clts
xchg
ins
push
cmc
sar
push
adc
dec
pop
shl
pushf
nop
int
test
test
test
sar
cld
cmps
inc
lods
mov
mov
inc
lock
hlt
mov
mov
div
(bad)
leave
leave
add
cmp
or
test
aam
xor
or
fsubr
mov
mov
fsubr
out
mov
cmp
or
sahf
(bad)
test
test
cmps
and
push
mov
movntps
push
dec
xchg
xor
add
test
sub
test
jmp
stos
jp
adc
daa
xchg
and
mov
lock
inc
or
mov
fild
and
mov
jne
ret
(bad)
fild
bound
hlt
pop
push
stc
lods
hlt
pop
stos
clc
and
dec
add
or
sub
inc
cmp
ja
and
cmp
lods
jno
ins
and
pop
ins
push
stos
hlt
and
pop
sub
add
out
fnstcw
and
lods
outs
mov
inc
rcl
enter
mov
mov
imul
stos
mov
adc
inc
sbb
or
lahf
pop
inc
sub
push
xlat
sbb
xchg
jmp
cmp
stos
add
lods
mov
adc
lods
pop
ins
scas
pop
adc
das
push
ds
inc
mov
sbb
mov
cwde
gs
les
gs
arpl
das
inc
xchg
cmc
outs
clc
mov
ror
xchg
les
sub
lods
je
pop
push
stc
dec
dec
clc
cmps
inc
sbb
xchg
(bad)
sti
out
pop
cmp
jo
lock
mov
lods
sbb
mov
inc
push
push
cmps
jmp
(bad)
adc
push
adc
adc
(bad)
jmp
cmp
gs
xor
daa
cld
adc
xchg
daa
out
dec
pop
push
jge
cmp
sbb
hlt
sbb
dec
lock
pop
dec
scas
mov
inc
dec
lahf
outs
sub
push
lds
adc
pushf
scas
bound
sbb
shl
sub
push
push
or
leave
mov
inc
lahf
mov
test
popf
test
jbe
call
mov
inc
and
add
inc
clc
adc
ins
xor
mov
adc
fdiv
adc
into
mov
mov
sbb
lea
pop
sbb
sub
adc
inc
gs
push
dec
or
push
and
stc
outs
ins
popa
pop
xor
fsub
div
enter
mov
clc
mov
pop
sbb
jle
std
mov
(bad)
inc
push
cmp
fild
pop
hlt
inc
sbb
(bad)
mov
and
mov
dec
xchg
(bad)
or
dec
fidiv
adc
out
mov
and
and
hlt
mov
arpl
mov
and
das
sbb
xchg
inc
test
test
repnz
cmp
push
inc
push
inc
dec
dec
inc
dec
dec
outs
xchg
mov
push
inc
inc
push
ds
sbb
and
mov
xor
leave
or
in
or
gs
or
sbb
sbb
pop
fs
and
arpl
popa
xchg
pop
sbb
jp
xor
add
pop
adc
push
std
adc
nop
outs
gs
not
mov
sub
(bad)
mov
pusha
push
cmp
mov
test
xchg
fdiv
fcomp
loopne
jge
push
and
fist
adc
adc
mov
arpl
test
(bad)
xchg
jbe
mov
mov
xor
aam
movs
xor
dec
les
add
mov
(bad)
enter
fdiv
lahf
ds
sub
je
es
add
mov
enter
dec
xor
jge
lea
mov
inc
or
cmp
mov
mov
scas
sub
int
fadd
inc
xor
xor
sbb
dec
add
mov
gs
xchg
xchg
mov
imul
dec
in
std
ss
push
fdiv
test
cmp
ror
mov
inc
xor
adc
ins
xchg
leave
arpl
mov
popa
ins
sbb
(bad)
cmp
stc
sbb
mov
xor
push
fadd
push
jbe
jmp
pop
inc
adc
pop
loopne
aad
in
push
jae
std
sub
cmp
cwde
mov
cdq
es
and
mov
mov
sbb
add
mov
ins
ds
adc
fcom
mov
aad
adc
leave
or
in
mov
jo
lods
sub
xor
add
cs
inc
add
in
cmp
or
xor
sbb
pop
push
pop
dec
fiadd
add
jl
mov
xchg
ds
nop
inc
cmp
(bad)
jmp
fstp
fwait
push
(bad)
fiadd
sbb
and
fild
nop
adc
xor
jg
fld
faddp
xchg
mov
pop
xor
xchg
movs
fdiv
aas
dec
inc
pop
sub
push
inc
push
push
dec
dec
dec
push
or
jg
dec
dec
dec
inc
loopne
test
mov
scas
sub
dec
movs
mov
mov
add
movs
or
sbb
lock
in
adc
xor
rol
movs
rcl
push
sub
xchg
movs
pop
cmp
jl
jno
clc
sub
fidiv
enter
bound
cmp
fld
test
push
adc
ins
jg
test
jne
xchg
dec
sar
call
add
xor
fmul
xchg
pushf
push
enter
mov
sub
(bad)
or
and
push
push
dec
(bad)
pop
mov
push
inc
push
and
dec
pusha
sbb
fild
sti
lock
sbb
(bad)
sub
dec
mov
mov
loop
mov
jne
jg
sbb
popa
jl
into
fst
test
mov
sub
mov
add
jb
fst
pop
push
adc
xor
jae
pushf
aaa
add
inc
arpl
and
movs
inc
sbb
sar
mov
aas
ret
sbb
and
xlat
cmp
lea
and
and
sub
sbb
mov
gs
push
xor
mov
enter
inc
fidivr
mov
add
xchg
fwait
push
xchg
ret
adc
retf
fldcw
pop
imul
adc
ret
loopne
push
push
dec
jmp
sbb
pop
add
das
mov
xor
cmps
adc
pop
add
addr16
or
adc
(bad)
fstp
not
adc
push
or
inc
add
sbb
inc
rol
add
dec
xchg
xchg
jo
adc
clc
mov
inc
int3
or
push
adc
dec
gs
and
inc
and
pop
push
fsub
clc
iret
xchg
loopne
pop
add
test
jmp
(bad)
lgs
and
imul
pop
mov
jle
push
stos
nop
add
cmps
pop
cmp
mov
mov
out
add
sub
(bad)
pusha
mov
mov
jmp
test
lods
sub
xor
push
add
es
mov
inc
rcl
cmps
lods
lods
js
inc
clc
jb
dec
es
outs
jns
inc
fnop
pop
test
jl
jg
mov
lds
lea
les
add
push
aam
xchg
jne
jg
dec
lea
stc
xchg
inc
shl
or
mov
jno
adc
xor
movs
push
in
xchg
mov
shl
pop
call
xchg
shl
shl
xor
mov
fsub
mov
sbb
mov
aad
shl
fld
cmp
inc
xlat
or
pop
hlt
adc
ror
sbb
adc
(bad)
fisubr
xor
and
dec
sbb
loopne
cmp
jg
inc
pusha
pop
fidivr
js
or
add
sbb
mov
dec
mov
test
mov
lock
in
(bad)
mov
movs
push
push
shr
rcr
mov
enter
sti
shr
sbb
mov
pop
rol
push
lock
pop
and
inc
add
fdiv
popa
rol
sbb
addr16
dec
jg
pop
or
cmp
rcr
in
ret
push
movs
mov
hlt
sti
add
sbb
add
push
xchg
pop
loopne
mov
pop
inc
dec
sbb
lock
stos
push
jmp
out
jmp
repnz
ret
sub
test
les
mov
or
fidivr
push
add
cmp
ds
mov
push
in
sti
mov
xlat
inc
enter
ret
dec
and
scas
mov
xchg
cmps
add
call
xor
cmps
sti
into
xor
dec
dec
xor
int
je
cmp
in
lods
rol
jne
les
add
cmp
lock
mov
xlat
sbb
sbb
add
test
push
pop
xchg
push
pop
rcl
add
inc
jmp
add
clc
cmp
clc
jne
xchg
hlt
push
repz
not
and
xlat
in
les
das
mov
js
dec
stos
nop
popa
add
nop
mov
xor
das
cmp
sbb
or
pop
mov
and
ins
(bad)
test
(bad)
loope
(bad)
in
pop
aam
add
dec
imul
outs
jb
dec
add
dec
mov
cmp
in
adc
inc
mov
pop
sub
mov
(bad)
mov
cmc
ins
pop
push
and
sbb
sbb
sbb
push
(bad)
push
into
and
cmp
dec
fdiv
and
add
mov
xchg
dec
mov
sar
or
jne
pushf
sti
je
fdiv
cmp
add
ins
lds
pushf
adc
(bad)
or
sbb
and
les
add
aad
(bad)
mov
pop
push
adc
inc
xor
ss
push
or
test
add
inc
add
pop
in
mov
push
push
test
jae
imul
push
inc
and
add
movs
stc
sub
sub
fadd
cmp
cmp
adc
outs
call
fldcw
adc
cmp
cdq
ss
dec
xor
xor
cmp
aam
jb
ins
outs
ins
fdiv
jb
fmul
enter
in
ror
mov
xor
in
in
fs
iret
gs
into
sub
(bad)
mov
push
leave
sbb
add
into
mov
inc
jo
add
fs
jns
and
xchg
leave
inc
jb
es
leave
fadd
retf
fs
xchg
and
loopne
aaa
xchg
add
sti
adc
push
mov
jp
add
loopne
mov
pop
xor
cmovge
add
aas
mov
call
inc
icebp
sbb
xlat
sbb
and
cmp
into
repz
(bad)
les
mov
pop
mov
ss
imul
pop
out
pop
xor
mov
je
mul
xchg
mov
ret
cmp
xchg
mov
clc
retf
jg
xchg
and
push
int3
inc
int
add
pop
lea
and
clc
fiadd
add
rcl
sbb
(bad)
xor
ja
retf
jp
push
lods
ret
or
sub
sub
adc
add
inc
in
pop
push
dec
ds
cmps
int3
retf
adc
das
sbb
test
push
bound
jl
add
and
add
into
add
inc
add
scas
mov
ss
sub
adc
pop
xchg
bound
in
push
mov
xor
mov
or
pop
sub
and
mov
mov
(bad)
clc
pop
in
nop
or
out
push
jmp
push
sub
pop
sub
push
push
sub
lock
add
popw
mov
ror
out
stc
push
stos
adc
push
xor
popa
pop
dec
jno
jmp
sbb
pop
int
pop
arpl
mov
jno
retw
pop
adc
ss
(bad)
and
add
into
pop
and
xor
mov
loope
rcr
xlat
xchg
sbb
sub
rol
fwait
sub
adc
inc
outs
fild
add
mov
push
fcom
(bad)
lock
fisubr
mov
addr16
cmp
mov
cvttps2pi
lock
push
xor
and
adc
mov
pop
pop
xor
mov
dec
push
push
push
xor
imul
dec
scas
cld
gs
les
push
retf
push
inc
push
lods
cmp
cmovae
jb
dec
mov
push
adc
add
pop
jne
cmp
jns
lods
outs
sbb
jecxz
add
push
test
add
stos
add
add
and
add
stc
inc
push
add
push
xchg
jmp
stos
dec
jp
push
push
xchg
ror
mov
nop
ja
fwait
ins
push
rcr
sub
es
enter
push
ret
pop
loopne
cmps
push
cmp
pop
or
add
loopne
popf
jae
adc
out
and
dec
cmp
stos
mov
inc
inc
push
or
loop
dec
jb
sub
xor
scas
mov
bound
(bad)
loopne
ja
dec
dec
fucomip
push
sub
xchg
push
aad
ins
dec
and
sub
pop
in
int3
mov
inc
push
xor
add
js
pop
pop
cmp
cmps
inc
add
pop
add
xchg
cmp
push
push
or
jno
xchg
fimul
ds
pop
or
stc
outs
xchg
in
adc
out
je
in
add
sbb
add
mov
data16
xchg
push
sbb
inc
das
ucomiss
add
mov
mov
out
jmp
dec
outs
daa
pop
subps
or
dec
dec
push
outs
adc
jl
mov
ins
sub
imul
addr16
scas
pop
xor
add
push
sbb
pop
jb
pusha
or
mov
psrlq
adc
xor
pop
enter
nop
out
mov
pusha
mov
add
adc
sbb
subps
shr
test
repz
adc
ins
cmp
imul
pop
adc
dec
popf
push
jo
sbb
xor
sbb
sub
sahf
sub
mov
outs
nop
and
lods
sbb
test
add
cmps
call
mov
fldcw
xchg
fldcw
in
test
jg
in
nop
out
imul
add
cmp
pop
push
push
jmp
nop
sub
je
adc
add
dec
outs
fstp
pop
inc
ret
adc
xlat
icebp
mov
adc
inc
inc
xlat
lea
ss
pop
bnd
icebp
cdq
push
xor
push
add
(bad)
iret
data16
adc
or
and
inc
xor
mov
or
(bad)
xor
and
gs
mov
rol
or
add
sub
push
or
or
shl
adc
sub
push
xor
int
sub
sbb
or
and
imul
imul
imul
sub
fs
sub
adc
adc
(bad)
jmp
or
cmp
xchg
cmps
ror
cmp
dec
inc
out
aad
(bad)
or
cmp
or
cmp
ror
fiadd
nop
push
or
fdiv
push
in
data16
sub
mov
aas
imul
in
ror
daa
loopne
sub
sub
jl
mov
daa
movs
mov
jnp
ja
add
mov
adc
ficom
mov
and
sahf
adc
fbld
clc
sub
iret
jae
xor
clc
mov
and
dec
in
push
rcr
sbb
add
jb
and
int3
mov
mov
addr16
cmp
enter
jae
les
movs
cmp
rol
je
fcom
xor
mov
(bad)
inc
fcmovu
idiv
rcr
mov
mov
aam
mov
shl
push
mov
xchg
outs
(bad)
mov
xor
(bad)
sub
add
or
data16
mov
ret
das
adc
aaa
jae
imul
or
das
xor
das
or
retf
mov
and
aaa
xchg
sub
ss
sub
loopne
sti
inc
test
push
test
enter
jb
add
mov
sbb
pop
dec
sbb
mov
enter
dec
jge
xor
sub
pushf
or
xchg
or
adc
enter
shr
sub
fisubr
mov
sti
hlt
adc
test
add
aas
es
or
add
push
rcl
aam
xor
sub
or
data16
ins
pusha
inc
test
push
loopne
lock
in
jp
fist
sbb
aas
mov
xor
push
shl
(bad)
dec
add
repz
aam
and
cdq
imul
addr16
leave
mov
add
and
sbb
pop
add
ss
test
xor
mov
dec
mov
pop
rcr
xchg
les
jbe
call
push
inc
xor
inc
shl
mov
push
push
xor
xor
sub
sub
inc
je
in
mov
mov
pop
add
mov
jns
mov
mov
shl
or
push
jg
(bad)
imul
add
and
sahf
push
(bad)
pop
cmc
adc
das
cmp
arpl
test
mov
inc
pop
dec
dec
iret
xor
or
leave
cli
mov
bound
mov
pop
fcmovb
ret
push
and
add
lock
adc
mov
xor
cwde
push
aam
ror
rol
leave
jo
mov
push
xor
inc
sbb
test
dec
push
push
lock
fdiv
jl
mov
cmp
and
call
in
daa
jp
jp
pop
pop
push
loop
pusha
data16
outs
dec
loopne
nop
push
push
or
pusha
mov
jo
movs
in
call
sub
xor
push
xchg
pop
ja
daa
or
inc
mov
(bad)
push
rcr
sbb
hlt
or
neg
inc
and
stc
arpl
int3
push
int
mov
xchg
out
pop
pop
(bad)
ficom
je
rcr
fsub
mov
hlt
pusha
nop
add
mov
out
jbe
pop
jb
out
nop
add
daa
outs
int3
out
in
pop
jb
out
in
out
pop
and
js
push
cmp
push
xchg
or
pop
fbstp
lds
pop
sub
lds
and
das
push
mov
jmp
shl
dec
sub
dec
cmp
push
imul
sub
aad
sbb
pop
adc
pusha
out
cmp
fs
cmp
pop
xchg
ins
xchg
inc
jae
push
add
mov
mov
xchg
cmc
leave
inc
and
retf
inc
pop
mov
cmp
mov
or
in
push
dec
sahf
das
inc
sub
or
xchg
daa
data16
xchg
add
sub
mov
ss
jns
sub
sbb
lods
cmp
aas
push
cmp
sbb
add
sbb
mov
inc
leave
push
popa
in
push
jmp
pop
xchg
or
and
pusha
xor
or
mov
mov
xchg
or
fs
enter
mov
or
mov
jmp
in
adc
dec
fcomp
xor
push
div
jge
push
loopne
in
sub
das
jle
or
pop
jmp
cmp
test
jmp
(bad)
cld
mov
jl
and
pop
pop
jo
cmp
jb
add
xchg
xchg
add
and
inc
ins
shr
(bad)
call
stos
mov
test
icebp
mov
mov
push
mov
push
shl
mov
add
aaa
mov
sub
clc
adc
retf
or
retf
mov
inc
push
mov
adc
pop
push
xor
wbinvd
pop
add
push
and
fs
mov
add
enter
out
and
dec
pop
and
xor
inc
out
jmp
push
xchg
jbe
inc
js
sub
fs
xchg
dec
pmaxsw
push
xor
dec
stos
jmp
pop
stos
push
mov
aaa
xchg
sub
sbb
outs
cmp
push
shl
mov
dec
push
(bad)
loopne
dec
test
shl
ds
rcr
inc
jg
sbb
out
aas
adc
pop
repnz
inc
clc
sbb
clc
inc
or
sub
cs
or
lods
pop
mov
jl
or
push
push
in
jmp
inc
cmp
push
push
or
sub
ins
add
pop
adc
out
adc
push
jne
or
dec
gs
sub
xchg
frstor
mov
nop
iret
jnp
in
jns
iret
add
(bad)
popa
sub
sbb
push
nop
inc
push
xlat
dec
cmp
xor
jae
and
inc
pop
sub
or
in
in
ins
jae
lock
push
jae
fsub
cmp
lock
fwait
ja
inc
inc
mov
idiv
add
xor
xor
jne
xor
lahf
dec
push
push
inc
jnp
add
jae
add
pushw
test
xchg
popa
dec
loope
adc
add
inc
cwde
(bad)
int
fs
mov
in
or
inc
loopne
test
push
les
xchg
fcomp
sbb
or
add
dec
mov
loopne
cwde
add
adc
and
daa
sar
mov
or
add
sub
icebp
adc
or
adc
mov
sbb
mov
adc
dec
fwait
adc
push
xor
mov
push
pop
pop
add
mov
pop
xchg
sub
or
js
inc
pusha
inc
xor
fistp
daa
sar
rol
inc
sub
dec
test
dec
push
ds
mov
adc
mov
movs
sahf
sub
xchg
outs
xchg
movs
push
ret
leave
push
pop
lods
pop
inc
sub
rol
daa
imul
push
inc
adc
aas
pop
fadd
je
mov
pmulhw
mov
lahf
mov
xor
pop
leave
mov
les
inc
cmp
(bad)
test
inc
mov
push
or
mov
adc
(bad)
addr16
pop
dec
sbb
pop
sub
retf
clc
or
fcom
dec
or
push
mov
adc
mov
cmp
sbb
or
iret
or
inc
shl
enter
push
mov
and
push
or
dec
inc
push
fdiv
outs
add
fadd
add
call
enter
xchg
or
inc
add
push
pop
and
test
clc
mov
fld
jae
cs
jmp
inc
and
hlt
or
iret
and
dec
pop
cmp
jb
aad
add
jb
xor
aaa
ucomiss
and
jo
mov
cmp
test
lock
push
and
out
stc
push
stc
adc
inc
and
test
in
(bad)
pop
aam
adc
adc
sahf
cs
test
sbb
add
xchg
test
and
fcom
ret
adc
aad
pop
repnz
add
hlt
adc
mov
push
sub
movs
or
iret
fdivr
aam
arpl
mov
or
(bad)
clc
(bad)
bound
lahf
sbb
dec
sub
imul
stc
(bad)
push
stc
inc
and
pop
mov
(bad)
cwde
stc
mov
inc
inc
adc
je
xor
xor
lock
(bad)
pop
xor
pop
sbb
lods
ss
(bad)
push
sub
push
dec
xchg
inc
or
bound
cld
cmp
xchg
add
add
mov
or
in
cli
sti
dec
or
outs
imul
inc
inc
(bad)
jle
or
cmp
icebp
push
sti
shl
jne
jecxz
xor
xchg
mov
stc
jmp
sub
mov
aam
push
ins
dec
add
jb
xor
iret
or
add
call
ret
xor
dec
pop
push
push
call
mov
mov
stc
out
sub
lock
test
pop
sbb
mov
mov
adc
xchg
inc
fsubr
in
sti
mov
jecxz
xor
enter
shl
cmp
mov
dec
add
shr
adc
add
das
or
lods
mov
out
mov
cld
mov
cld
jge
sub
out
inc
hlt
je
scas
lea
(bad)
dec
jmp
cmp
outs
cld
add
push
sbb
jne
sub
aad
std
xchg
fs
movs
push
push
test
lods
xchg
mov
rol
dec
sar
fwait
ret
sub
add
shr
mov
movs
lea
inc
pop
mov
pusha
jmp
dec
std
jb
hlt
fst
inc
test
imul
aas
jg
or
das
js
ja
ds
sub
dec
aaa
aam
mov
xchg
and
repnz
push
dec
shl
pop
add
xor
cmp
stos
mov
dec
xchg
fnclex
mov
mov
and
fist
cmp
stos
and
xor
push
push
push
mov
add
test
leave
(bad)
loope
mov
ja
mov
jae
cli
in
or
sbb
fist
scas
retf
idiv
xchg
or
or
pushf
sbb
and
xlat
pop
push
jb
or
rol
add
sti
cmp
sub
or
pop
dec
int3
inc
jmp
xor
adc
mov
movs
mov
xchg
and
push
adc
test
sub
je
inc
xchg
rcl
mov
jne
test
mov
push
sbb
mov
pop
pop
mov
fs
or
push
adc
nop
dec
test
clc
pop
push
adc
out
mov
test
adc
sbb
sub
mov
cmp
je
and
(bad)
pop
inc
jns
movs
dec
and
and
ret
popa
jmp
mov
inc
add
inc
mov
jns
xchg
loopne
mov
shl
ins
and
sbb
lock
(bad)
sbb
push
sub
pop
pop
bnd
out
jp
adc
jne
lock
int
cmp
mov
push
sbb
nop
pop
and
jmp
and
ror
hlt
sub
dec
addr16
rol
push
dec
add
xor
sub
push
add
ins
mov
xchg
test
call
push
or
shr
and
(bad)
pop
inc
push
daa
xor
ins
xchg
ret
push
add
nop
test
jge
cli
ds
jmp
xor
call
or
pop
dec
xchg
adc
inc
cld
pusha
fst
dec
nop
xor
sbb
add
cmps
add
and
push
sub
adc
stos
mov
dec
mov
xor
mov
jmp
ins
jno
or
bound
fst
nop
dec
das
fild
jo
inc
aam
mov
hlt
inc
jp
in
mov
hlt
stos
cmp
adc
shr
jo
icebp
pushf
lods
div
(bad)
scas
movs
movs
rcl
mov
out
push
dec
mov
test
out
pop
imul
nop
pop
pusha
das
sbb
xchg
cmp
xchg
lds
test
das
xor
jg
xor
jmp
add
js
sbb
add
or
push
aam
jo
jmp
inc
push
mov
out
pop
or
mov
sub
pop
retf
add
ja
sbb
and
dec
jmp
lahf
inc
dec
sbb
enter
imul
(bad)
adc
jae
adc
loope
sar
jne
pop
pop
add
adc
fs
mov
callw
addr16
jo
leave
push
xchg
cmp
inc
mov
sub
es
pop
loope
(bad)
xchg
sbb
and
sbb
inc
jmp
sub
nop
push
jl
and
sbb
push
adc
cli
adc
(bad)
aam
mov
popa
adc
pusha
ffreep
jge
mov
retf
sub
adc
push
cdq
in
sbb
or
fs
xchg
inc
or
jmp
sub
jbe
pop
enter
pop
sub
push
adc
jo
adc
gs
inc
sbb
adc
idiv
dec
outs
(bad)
loop
pop
add
mov
and
sbb
pop
addr16
dec
enter
mov
enter
and
es
sets
cmp
mov
add
or
or
js
jmp
and
add
add
add
cmp
fstp
sub
xchg
inc
sub
jg
outs
xor
std
sub
jae
cmp
je
inc
push
pop
bound
shl
add
or
jne
into
xchg
mov
dec
retf
loope
ins
pop
call
mov
sbb
add
xor
add
fcom
or
out
sub
cmc
sub
aam
jmp
in
ror
jo
pop
add
add
push
pop
fsub
in
imul
mov
xchg
dec
pop
js
nop
pop
jne
xor
sbb
add
sub
rol
fstp
ins
arpl
dec
lahf
imul
xchg
or
add
ror
add
icebp
mov
pop
cli
jge
test
mov
arpl
adc
fldenv
add
cmp
jg
cmp
aaa
inc
push
das
jmp
ins
ret
jmp
pop
addr16
mul
jne
sbb
or
ins
push
jnp
sub
cmp
mov
test
cmc
mov
xor
sbb
cld
fwait
push
pusha
and
add
cmp
adc
or
mov
enter
sbb
xchg
mov
cmp
cld
push
repz
inc
gs
ins
pop
cmp
or
js
out
push
add
lea
cmp
ins
jnp
mov
scas
lods
pop
repz
jae
sub
adc
and
xor
ret
lea
lods
mov
or
popa
or
outs
mov
(bad)
or
mov
lods
push
mov
mov
out
aad
or
js
aas
mov
add
(bad)
arpl
mov
(bad)
ror
loopne
and
jbe
dec
adc
or
adc
add
(bad)
cmp
dec
cmp
or
jmp
pop
push
mov
mov
or
mov
iret
rcr
adc
mov
pusha
cmp
loope
movs
dec
mov
jl
imul
imul
loopne
(bad)
xacquire
fwait
or
popf
cmp
vmread
das
adc
add
imul
add
pop
sub
push
cmp
pop
imul
and
and
adc
xor
adc
sub
lods
xor
in
mov
cwde
sbb
mov
mov
push
dec
dec
syscall
cwde
pop
mov
pmulhuw
nop
cmp
daa
movs
call
outs
xlat
xchg
das
ins
cmp
std
daa
cmp
pop
cli
and
rcl
lock
push
adc
or
jae
jmp
les
adc
pop
sbb
push
sbb
(bad)
pop
clc
mov
xor
jge
pop
pop
jb
push
retf
lahf
mov
adc
jbe
dec
mov
or
xchg
aad
sub
in
mov
gs
cld
retf
mov
push
outs
call
sub
aaa
push
sbb
lock
mov
xor
push
push
sbb
xor
mov
rcr
adc
call
mov
adc
xlat
xchg
je
fmul
pushf
and
xchg
popa
or
sbb
xchg
(bad)
lods
push
fimul
scas
xchg
pushf
imul
xchg
mov
xchg
out
and
cmp
inc
mov
call
in
mov
push
xlat
push
pushf
xor
ret
pop
outs
cmp
or
sub
adc
(bad)
dec
ins
pusha
(bad)
jne
mov
adc
sub
adc
inc
call
lea
add
mov
nop
and
and
pop
test
mov
push
call
adc
adc
push
dec
fcom
int3
cmp
mov
xor
mov
push
(bad)
test
and
and
adc
mov
add
xor
mov
push
in
xchg
push
retf
mov
out
loopne
xlat
and
ins
jae
dec
aad
dec
inc
test
lods
sub
xchg
cmps
cdq
movs
xor
sub
jo
add
pop
mov
lods
fwait
bnd
fs
lea
aam
add
in
or
(bad)
cmp
push
add
stos
mov
push
and
ror
sbb
cmp
push
push
int3
popa
std
add
out
xlat
retf
add
(bad)
sub
xor
pop
stos
mov
mov
pop
adc
and
push
sar
adc
and
dec
fcomip
mov
adc
mov
pop
and
sub
fs
fldcw
xchg
sbb
adc
jns
(bad)
loopne
mov
mov
xchg
sbb
and
rcr
sti
xor
dec
in
and
and
pop
add
dec
cld
push
or
fs
in
(bad)
xchg
test
inc
in
fisttp
into
stos
adc
xchg
movs
jbe
shl
pop
das
mov
xor
xchg
sub
pop
or
dec
(bad)
mov
fmul
xchg
push
scas
fs
push
sub
adc
(bad)
into
mov
fild
imul
or
add
(bad)
mov
push
ficomp
mov
pop
daa
jnp
adc
add
and
xchg
sbb
inc
mov
fist
imul
push
(bad)
mov
imul
push
xor
xchg
ja
nop
aas
test
pop
fdivr
jo
add
sbb
sbb
inc
js
rol
pop
pop
fstp
movs
pop
dec
and
mov
pop
lea
mov
lock
push
jo
adc
les
sbb
pop
test
pop
iret
dec
xchg
enter
xor
aad
inc
xchg
push
les
mov
xor
ficomp
cmp
pusha
mov
sbb
adc
xchg
in
dec
jae
pop
in
mov
pusha
sbb
push
xor
mov
arpl
add
jecxz
dec
out
dec
push
inc
scas
mov
inc
inc
push
sub
sub
inc
mov
jecxz
imul
aaa
hlt
cmp
adc
xor
cmp
xchg
xchg
arpl
xor
es
mov
loopne
ror
sub
scas
pop
adc
xor
retf
mov
sub
aaa
pop
dec
xor
mov
adc
mov
jl
jl
lahf
repnz
or
dec
add
(bad)
icebp
pop
je
cwde
pusha
enter
push
or
pop
aas
jb
pop
mov
dec
push
mov
push
js
ins
adc
jp
das
dec
loopne
pop
add
scas
dec
or
shl
xchg
mov
jmp
es
adc
mov
fcmovnb
out
pop
cmp
ja
jns
iret
imul
in
xor
mov
add
nop
push
dec
adc
add
nop
aad
jmp
xor
mov
jbe
mov
jb
sti
adc
hlt
add
add
xchg
jb
add
lock
and
jb
in
in
pop
imul
sbb
adc
enter
sbb
in
inc
push
rol
arpl
inc
or
dec
add
cmp
pop
fdiv
push
push
fcomp
xor
cmp
push
add
mov
mov
fisubr
jmp
add
sbb
add
dec
sub
cmp
add
push
add
lods
je
das
and
add
and
inc
push
and
push
push
and
push
push
dec
push
inc
es
stc
mov
push
push
inc
inc
inc
and
inc
and
dec
inc
inc
daa
and
out
pop
loopne
pop
jno
add
ds
loope
jno
movs
adc
popa
loop
lahf
add
add
scas
and
xchg
jg
add
pop
ja
lods
sub
mov
test
jmp
dec
fcom
scas
aad
pop
ret
or
data16
mov
adc
cwde
(bad)
add
test
or
lock
mov
fcmovb
shr
add
cld
and
arpl
push
popa
rcl
ror
rcl
or
xlat
mov
rcr
inc
xor
popa
movs
int3
fidivr
jg
inc
sbb
push
ins
rcl
outs
cwde
push
jno
push
jmp
xchg
ret
fs
jne
mov
push
push
sub
sub
cld
jne
jmp
add
pop
mov
hlt
in
and
and
std
add
inc
adc
mov
shl
and
clc
add
arpl
in
push
and
xchg
and
and
ins
clc
pop
mov
adc
cmovns
lds
fld
fild
fistp
xor
jne
xchg
and
(bad)
push
add
adc
shl
xor
and
sub
retf
cmp
pop
pop
xor
pop
addr16
cmp
or
(bad)
repz
inc
scas
jmp
sbb
retf
pop
mov
cld
mov
mov
dec
fiadd
lods
and
add
cmp
enter
sbb
pushf
mov
fist
cmp
add
pop
or
mov
xchg
bswap
pop
in
adc
mov
push
xchg
jno
je
lods
pop
jg
rol
pop
add
and
cmp
in
xlat
and
xchg
(bad)
icebp
mov
ret
and
or
sbb
and
xchg
mov
mov
and
(bad)
xor
inc
movs
nop
mul
xor
ror
js
add
fild
mov
call
add
scas
ret
add
or
loope
and
es
cmp
sbb
gs
jns
mov
scas
pushf
dec
sbb
mov
inc
cmp
fld
add
jmp
sub
dec
xchg
int3
mov
(bad)
adc
jmp
aad
rcl
adc
and
lods
cmp
dec
and
sub
pusha
int3
sbb
adc
jae
or
ins
add
ds
xor
loopne
loope
dec
fild
int
add
sbb
out
icebp
inc
pop
dec
xchg
push
mov
inc
mov
cmp
mov
push
dec
jno
mov
xchg
outs
movs
sbb
aam
call
mov
push
(bad)
movs
adc
loopne
loopne
adc
ja
das
pop
or
loop
adc
int3
or
daa
inc
and
push
fs
cmp
mov
mov
sub
popf
cmp
daa
add
pushf
pop
sti
and
enter
cld
jg
push
hlt
movs
inc
add
cwde
jp
jo
inc
sbb
mov
push
mov
movs
or
scas
xchg
inc
outs
rcr
js
xchg
js
inc
mov
sub
add
jge
hlt
clc
or
test
pop
in
and
inc
movs
or
mov
inc
push
inc
mov
mov
xchg
add
xor
ret
push
out
push
hlt
jbe
or
fimul
xchg
mov
inc
adc
pushf
pushf
in
jo
loope
jnp
mov
sar
cmc
in
push
aad
sbb
xor
xchg
in
push
add
rcr
mov
push
xchg
test
stc
mov
in
push
loopne
call
fstp
lea
xchg
fs
mov
jnp
or
leave
sbb
lods
int
mov
(bad)
(bad)
push
(bad)
cmc
push
push
sub
mov
imul
mov
ret
(bad)
sar
sbb
iret
mov
sbb
imul
in
and
xchg
xchg
jno
aas
mov
sbb
sbb
gs
imul
inc
ffree
dec
add
or
fcmovnb
stc
jno
add
adc
aaa
dec
inc
sahf
add
cmps
nop
xchg
cld
movs
pop
or
inc
dec
or
cld
sbb
xchg
bound
test
(bad)
bound
add
mov
cmp
loop
mov
das
pop
or
jns
pushf
and
pop
sub
fdivr
and
sbb
inc
movs
je
outs
pusha
bnd
and
add
adc
popa
aam
add
push
bound
jbe
dec
xor
fstp
inc
cmp
aam
jg
in
sub
popa
and
or
mov
int
ficomp
int3
int3
cmc
and
call
sub
ficomp
scas
or
or
popf
imul
add
outs
pop
cmp
cmp
push
ins
push
mov
push
add
and
xchg
ret
pop
sahf
add
enter
and
mov
sub
inc
loope
and
clc
pop
push
pop
das
mov
mov
and
mov
mov
push
lods
mov
rcl
test
cdq
sub
xchg
sbb
in
xchg
movs
mov
imul
sub
push
test
mov
and
aad
lock
xchg
rol
pop
add
xor
push
nop
lahf
push
aaa
xor
or
test
add
div
pop
js
add
mov
neg
js
jmp
mov
adc
jae
les
xor
jbe
sub
popf
mov
gs
xchg
jl
inc
imul
dec
cs
test
fcom
mov
outs
mov
dec
mov
mov
daa
mov
push
enter
je
shl
fcomp
js
mov
in
bndstx
movs
data16
cmp
jmp
outs
iret
lods
mov
xor
cmps
add
jg
imul
imul
adc
div
sbb
ret
shl
or
dec
fcmovbe
xchg
nop
mov
pop
and
sbb
sub
mov
sahf
sub
add
pop
add
fsubr
and
or
or
add
imul
pop
aad
push
mov
mov
fwait
adc
pop
jmp
add
jns
fiadd
xor
and
cmp
repnz
test
int
xor
cmp
or
out
cmp
outs
mov
inc
push
mov
imul
cld
hlt
hlt
inc
pusha
adc
pop
push
movs
sar
test
mov
add
pop
out
addr16
cmp
shl
add
mov
js
xlat
cmp
leave
sbb
retf
pop
out
inc
movs
cmc
adc
add
or
and
or
dec
jo
inc
xor
push
push
add
xchg
dec
mov
mov
mov
pop
loopne
mov
rcr
adc
jmp
or
xchg
cmp
sub
fdivrp
cli
add
mov
jmp
push
inc
inc
push
add
fwait
fwait
add
add
jge
add
xchg
push
add
push
and
aas
add
int3
scas
adc
mov
stc
sub
adc
gs
mov
ja
xchg
mov
jp
and
cmp
jp
outs
fmul
fdivrp
add
pop
sbb
retf
mov
mov
add
sbb
dec
iret
push
adc
mov
imul
dec
jle
mov
out
pop
xor
inc
add
sub
adc
test
sub
fs
sub
cpuid
add
in
adc
push
cmc
xchg
sbb
cwde
fnstsw
xor
cmp
shr
inc
test
push
sbb
adc
jno
dec
repz
xor
clc
adc
push
pop
pop
pop
inc
xchg
pop
fwait
rol
push
nop
xchg
adc
xor
inc
and
pop
pop
daa
mov
in
adc
mov
adc
add
loopne
push
sbb
mov
xchg
pop
mov
lea
jg
mov
jl
xor
push
cmp
dec
test
mov
fisttp
xchg
add
or
(bad)
jle
mov
add
sub
add
iret
adc
sub
inc
mov
push
(bad)
test
dec
lds
out
hlt
dec
jle
enter
inc
ins
lahf
jg
inc
or
inc
stc
add
push
jmp
(bad)
ss
lds
cmp
mov
in
and
xor
inc
pop
les
jne
idiv
pop
xor
add
call
sbb
inc
sbb
iret
push
push
adc
je
and
xor
jle
sbb
lahf
jo
add
retf
aaa
adc
shl
clc
fsub
sbb
inc
clc
mov
cmp
mov
pusha
stos
das
pop
sub
mov
jmp
inc
ins
xchg
es
and
add
pop
jne
in
cmp
sar
jg
call
or
pop
shl
stos
fs
sub
mov
nop
jg
cmp
dec
push
or
inc
outs
cmp
inc
and
dec
adc
inc
xor
jae
add
leave
enter
(bad)
(bad)
(bad)
icebp
leave
leave
leave
leave
repnz
cmc
leave
leave
leave
leave
div
clc
stc
leave
leave
leave
leave
cli
sti
cld
std
leave
leave
leave
leave
(bad)
jmp
loope
leave
leave
leave
loop
in
leave
leave
leave
leave
out
call
leave
jmp
leave
out
out
rcl
leave
leave
leave
leave
rcl
aam
leave
leave
leave
leave
(bad)
xlat
fcomp
leave
leave
leave
leave
fcmovu
(bad)
leave
leave
leave
leave
(bad)
rol
leave
leave
leave
ret
(bad)
leave
leave
mov
leave
leave
leave
leave
leave
retf
int
leave
leave
leave
into
iret
mov
leave
leave
leave
leave
mov
mov
into
leave
leave
leave
mov
mov
mov
or
cmp
and
dec
add
sahf
outs
mov
dec
test
add
and
mov
pcmpgtb
push
and
in
imul
or
and
xchg
cmp
or
push
jno
push
dec
ins
add
or
ficom
das
xchg
or
sub
mov
xchg
or
or
repnz
push
add
add
pop
jo
push
je
call
ins
xor
data16
enter
mov
inc
inc
arpl
adc
inc
mov
gs
fisubr
bound
cmc
inc
shr
out
mov
lahf
jae
xchg
cs
es
cdq
jbe
outs
int
aam
jo
outs
retf
jle
push
sbb
push
inc
popa
jae
add
sbb
dec
loope
enter
mov
jb
push
inc
add
test
pop
stc
int3
int
cmp
ins
inc
ins
jle
(bad)
cmp
je
add
je
shl
push
inc
jns
sbb
or
pop
shl
nop
and
add
sbb
adc
xor
retf
mov
push
aas
mov
xor
pop
outs
or
adc
sbb
jb
fimul
xchg
out
pop
clc
cmp
inc
sti
add
dec
repnz
dec
xchg
push
or
ficomp
or
inc
inc
imul
mov
shr
out
es
mov
mov
int3
ss
mov
das
or
test
call
push
ror
push
cmps
aad
xor
sub
xchg
sbb
mov
xor
ret
shl
cmps
adc
jle
dec
jbe
jmp
cdq
nop
into
push
mov
and
pop
call
sub
xchg
aas
out
(bad)
stc
loopne
scas
pop
mov
and
je
inc
pop
psubw
loopne
inc
and
pusha
sub
adc
int3
mov
xor
xchg
aam
pusha
lock
mov
dec
jnp
mov
nop
std
test
cmp
jmp
inc
or
and
or
aas
aam
push
inc
add
inc
push
dec
gs
imul
jo
mov
int
xor
inc
pop
add
mov
jmp
in
push
jge
xchg
or
and
sub
push
outs
fadd
jno
outs
inc
lahf
sub
repnz
loope
sbb
idiv
pop
jne
aad
pop
add
mov
pop
out
sbb
lds
and
in
add
add
es
cmp
xchg
add
cmp
shl
scas
inc
or
sar
ds
sbb
iret
and
gs
inc
push
rcr
inc
sbb
xlat
fwait
in
pop
in
push
push
cmp
jo
pop
sbb
add
add
xchg
ins
pop
and
sub
(bad)
(bad)
inc
inc
pop
xchg
fadd
inc
clc
pop
sbb
jmp
in
pop
daa
pop
inc
ds
out
adc
jb
pop
adc
jae
pop
sbb
cmps
fiadd
movs
and
adc
popa
push
add
jmp
in
pop
sub
lods
sar
or
dec
fcmovne
cs
pop
and
cmp
call
bound
into
jg
mov
pop
fcom
push
xchg
ins
dec
retf
mov
sbb
and
rcr
iret
repz
retf
cdq
cmps
inc
retf
mov
adc
mov
scas
ror
fst
ficom
aam
inc
test
pop
mov
movs
sub
and
mov
inc
inc
push
sahf
jle
xor
jnp
jnp
pop
mov
xor
pop
inc
pusha
ins
jnp
or
push
fdivr
pop
push
sub
cmp
movs
or
pop
inc
pop
and
dec
push
nop
inc
inc
mov
inc
or
mov
push
xchg
gs
ins
popa
addr16
jns
pop
mov
mov
inc
jmp
sub
and
mov
mov
mov
jl
jo
mov
jno
sbb
int
mov
lea
inc
sub
xchg
dec
lods
push
cwde
xchg
dec
xchg
popf
mov
repnz
add
cmp
push
nop
mov
dec
jnp
in
popf
je
push
mov
ror
pop
pushf
xchg
pop
je
sub
popa
sbb
rcr
adc
jl
(bad)
ldmxcsr
clc
push
sub
inc
inc
loopne
(bad)
lock
mov
pop
repnz
loope
test
xchg
les
xlat
and
inc
fs
nop
push
xlat
movs
movs
inc
sub
pop
inc
push
inc
pop
pop
mov
in
in
cs
test
cwde
add
xchg
dec
pop
sbb
loop
add
add
jae
ret
nop
mov
pop
aas
and
inc
xchg
scas
xchg
dec
adc
dec
and
mov
xor
rol
xor
push
add
add
jne
scas
mov
loope
mov
or
mov
xlat
and
mov
pop
inc
push
jge
jg
push
cmp
push
mov
movs
dec
push
add
sub
movs
movs
imul
push
sub
dec
mov
(bad)
lea
fisttp
inc
cmp
xor
push
cmp
mov
test
adc
and
fcom
into
xchg
sub
push
adc
inc
or
daa
sbb
add
dec
popa
adc
jae
dec
and
or
leave
loopne
stos
(bad)
pop
add
dec
cmp
lds
xchg
inc
inc
cmp
dec
aam
jp
lock
xor
dec
lock
repz
cdq
mov
pop
movs
rcr
adc
dec
jmp
sub
(bad)
dec
xchg
push
mov
and
test
std
dec
and
enter
dec
jnp
sbb
mov
int3
scas
or
je
ins
in
adc
mov
cmp
mov
outs
pop
addr16
cmp
cmps
mov
lahf
dec
sbb
inc
push
jle
(bad)
aad
lods
add
dec
aas
dec
neg
adc
int
cmps
dec
or
test
inc
test
repz
cmp
push
shr
or
ins
cmp
jb
loopne
scas
or
pushf
or
xor
or
cmp
shl
mov
jnp
inc
popf
mov
aam
cmp
jg
mov
pop
ret
lods
adc
je
mov
mov
and
push
cmps
mov
push
lods
outs
in
and
push
rcl
dec
sbb
push
ins
pop
imul
jb
ss
outs
out
nop
scas
sbb
dec
xchg
cld
movs
repz
xchg
dec
popa
jbe
add
loop
stc
jne
jo
gs
push
ror
bound
add
push
imul
rcl
dec
lea
sbb
ret
gs
fcomp
lods
iret
lahf
jne
or
arpl
ror
jae
popa
inc
jno
popa
mov
pop
pop
or
fwait
mov
add
fldcw
mov
shl
daa
push
cli
and
sub
inc
outs
jb
xchg
int3
mov
cmovae
jmp
mov
or
xchg
lods
pop
xchg
or
addr16
(bad)
fisub
sub
je
inc
push
xchg
dec
or
adc
or
cmp
data16
ins
shl
das
push
inc
jno
test
fs
lahf
sbb
jge
sbb
dec
outs
popa
inc
pop
pusha
add
push
not
shl
jg
dec
adc
mov
aaa
adc
adc
pop
shr
xor
data16
into
inc
push
sbb
outs
jne
inc
mov
adc
pop
lea
iret
or
lahf
and
aas
push
mov
add
imul
mov
push
pop
ror
daa
or
pop
jb
adc
ret
adc
push
mov
and
pusha
sbb
pop
pop
adc
rcr
ret
xchg
or
xchg
add
add
mov
neg
pop
xchg
aaa
inc
dec
inc
push
push
inc
push
xor
outs
lods
pop
push
inc
push
dec
push
xor
not
dec
inc
dec
dec
arpl
pusha
push
push
cli
push
adc
dec
jp
dec
inc
push
sar
and
inc
shl
dec
and
nop
mov
inc
popa
out
cmps
outs
fwait
aaa
mov
adc
inc
dec
inc
and
inc
xor
xchg
inc
push
inc
inc
dec
mov
cmp
dec
dec
push
dec
dec
mov
test
das
sbb
mov
inc
repnz
inc
dec
push
mov
dec
inc
dec
xchg
push
dec
pop
adc
inc
push
push
push
dec
push
inc
scas
dec
inc
fidivr
(bad)
nop
dec
push
mov
push
sub
jbe
daa
test
sti
mov
xor
lock
mov
push
into
jae
or
adc
cmp
and
mov
(bad)
mov
and
add
enter
add
or
not
pop
mov
lea
sbb
aad
idiv
outs
sbb
pop
fmul
paddb
pop
or
or
jmp
or
jmp
push
and
cld
add
push
test
pop
shl
jb
cmp
(bad)
xor
jle
push
inc
inc
inc
mov
loop
in
mov
add
push
adc
or
das
add
int3
imul
pop
cmps
test
push
cwde
sbb
mov
adc
fist
mov
jp
das
ret
sbb
repnz
sbb
inc
pop
and
push
sbb
fiadd
rol
mov
add
and
iret
xchg
loop
lock
in
cmp
scas
test
xchg
shl
or
cmp
jo
mov
push
push
cli
das
cwde
je
adc
or
cmp
retf
jae
jmp
inc
dec
push
pop
push
pop
push
cmp
mov
or
or
add
mov
mov
xor
out
fisttp
pop
jne
adc
mov
aad
mov
mov
out
pop
adc
rol
jg
dec
(bad)
enter
inc
sbb
je
mov
xchg
inc
rol
jmp
adc
adc
add
or
xor
or
mov
sbb
xlat
jbe
add
add
cmps
add
push
inc
daa
bound
and
mov
dec
pop
sar
jno
ins
jmp
jo
xor
cli
loop
mov
push
fcomp
add
dec
push
fdivr
push
or
pop
inc
fild
or
loopne
sbb
or
or
inc
cmp
sbb
pop
out
jmp
xchg
sbb
adc
repz
lock
adc
(bad)
mov
jne
call
xor
or
into
push
inc
inc
hlt
dec
in
popa
inc
cmp
ins
cmp
jg
sbb
aam
arpl
cwde
inc
lea
or
bound
inc
aad
sbb
(bad)
cmp
dec
mov
add
out
jecxz
ss
das
fdivp
ficom
adc
mov
ret
ror
sahf
mov
xchg
add
sub
or
add
inc
sbb
add
ret
xlat
sti
xchg
pop
sbb
and
pop
push
dec
cs
sbb
imul
pop
dec
test
xchg
inc
adc
push
enter
and
in
inc
add
sbb
inc
dec
cmps
pop
test
and
(bad)
lods
pop
loopne
inc
pop
aad
movs
add
or
ror
enter
pop
test
dec
or
inc
pop
pop
lock
repz
xchg
dec
fmul
adc
cmps
dec
aaa
in
push
inc
pop
sub
js
mov
add
jne
push
or
inc
inc
add
pusha
rol
or
movs
retf
movs
pushf
or
jae
movs
xchg
cmp
add
or
or
cmp
jns
nop
mov
sbb
sub
or
dec
les
and
or
jo
(bad)
in
in
lods
inc
add
adc
pop
mov
pop
lods
jno
jns
cmp
pop
mov
test
nop
jb
ret
xchg
cmc
pop
add
and
lods
cld
pop
mov
loope
push
out
mov
mov
jns
inc
ds
lods
pop
dec
nop
and
jne
(bad)
xor
inc
sbb
xor
lock
mov
inc
push
sub
sub
jnp
push
or
daa
test
xchg
push
not
mov
ss
adc
push
or
adc
pop
push
test
shl
jmp
popa
gs
lock
or
shl
lods
and
movs
dec
push
aas
inc
ret
inc
xor
mov
xor
and
cmp
xchg
and
mov
inc
nop
inc
test
cmp
adc
fild
inc
mov
jle
mov
es
xor
les
sbb
and
and
adc
outs
loopne
lock
das
push
mov
mov
inc
dec
adc
or
mov
(bad)
or
sbb
lods
xchg
mov
push
adc
inc
mov
ret
gs
jg
xor
push
daa
jge
sbb
mov
sub
ror
mov
push
mov
sub
or
sub
or
or
ror
or
xchg
push
sub
push
push
inc
fiadd
inc
fnstenv
dec
dec
rcl
or
sbb
push
xchg
in
push
mov
rcr
(bad)
push
lds
iret
shl
ss
sbb
test
dec
mov
adc
xchg
and
neg
sub
iret
sahf
add
cmp
loopne
adc
adc
add
(bad)
loopne
pop
or
push
push
xchg
push
cwde
test
push
mov
arpl
rep
or
loop
mov
mov
add
cs
sbb
fwait
jbe
xchg
push
mov
cmps
add
les
aaa
sbb
stos
loope
and
repnz
adc
adc
sbb
cs
jae
push
or
scas
inc
lods
fnstcw
add
inc
push
push
shl
aaa
(bad)
cmp
arpl
outs
dec
ss
sub
cmp
sbb
jg
cmps
dec
lea
mov
xor
jmp
cmp
dec
lods
xor
or
loope
enter
adc
and
sbb
enter
pop
xor
dec
add
push
lahf
cmp
stos
jecxz
xor
ins
arpl
xchg
jmp
xchg
int
fcom
mov
dec
das
daa
dec
lds
je
mov
xchg
pop
cmp
xchg
jo
xchg
inc
(bad)
mov
mov
and
mov
cmp
je
mov
sbb
mov
in
into
xchg
pop
aad
ins
pop
jmp
(bad)
pop
nop
jbe
out
movs
inc
and
in
dec
dec
push
or
sbb
sbb
jmp
add
arpl
(bad)
and
or
jecxz
arpl
out
addr16
(bad)
fistp
mov
not
and
mov
mov
shl
call
cli
inc
inc
cvttps2pi
mov
in
mov
mov
in
push
and
add
or
push
mov
and
dec
xor
push
dec
lds
xchg
jns
or
inc
jo
cmp
dec
adc
cmp
jl
sbb
jmp
pusha
cmp
sbb
shl
xor
in
add
add
call
or
adc
xchg
vpsubq
add
cs
das
sti
mov
push
test
inc
add
cmp
inc
sbb
push
je
nop
mov
adc
repnz
cmp
sbb
push
cmp
dec
adc
imul
dec
aas
add
and
and
test
adc
inc
std
dec
jnp
push
add
adc
clc
push
dec
gs
push
pusha
sub
mov
imul
loopne
aaa
jmp
mov
inc
lahf
push
add
jmp
in
popa
rcr
es
bswap
mov
es
movs
mov
adc
pop
bnd
cmp
inc
imul
rol
js
or
and
retf
gs
ins
enter
bound
cli
test
stos
cmc
mov
pop
sbb
dec
cmp
ror
sub
bound
js
mov
add
xor
and
es
jle
(bad)
add
pop
push
pusha
mov
sbb
or
ret
(bad)
ins
aas
in
adc
imul
or
adc
and
je
out
cmp
je
or
xor
add
mov
div
shl
and
sysret
in
add
sar
mov
dec
int
mov
pop
lea
sub
add
jne
adc
loop
lahf
add
cmp
push
mov
xchg
push
stc
sbb
and
ja
mov
jns
xchg
xor
xchg
add
or
repnz
(bad)
push
and
ret
push
iret
imul
(bad)
or
dec
pop
dec
cmp
add
enter
lea
mov
in
and
cmps
sahf
and
mov
push
(bad)
fidiv
sub
dec
jmp
jns
test
(bad)
fist
jae
dec
add
popa
test
lock
sub
inc
inc
das
inc
sahf
sub
inc
add
fs
js
adc
mov
enter
inc
and
cwde
sbb
loopne
or
popa
push
dec
cmp
rcl
push
and
(bad)
mov
adc
push
add
cmps
std
mov
mov
or
add
xor
faddp
inc
adc
cmps
fs
pop
dec
dec
ins
in
cmp
push
sub
mov
mov
mov
push
mov
pop
pop
and
inc
dec
jne
pop
das
dec
mov
adc
pop
inc
test
adc
adc
inc
push
inc
pop
popa
or
push
sub
sub
xchg
xchg
push
jne
scas
aam
fnsave
loopne
movs
dec
js
jl
stos
ret
and
ins
mov
enter
mov
dec
jns
jmp
push
xor
and
(bad)
mov
sub
shl
rol
sti
or
jmp
sub
mov
loopne
push
xchg
cld
push
or
add
repz
je
push
jns
loope
push
jno
cmp
add
push
jnp
or
fimul
xor
cld
rol
dec
arpl
ds
out
int
inc
movzx
lea
sub
cmp
mov
(bad)
pop
cs
jmp
addr16
cmp
shl
fucomip
ins
clc
push
cs
(bad)
icebp
push
or
inc
imul
fcom
loope
or
cmp
repnz
mov
sub
rol
clc
dec
jl
push
push
daa
inc
lods
icebp
aaa
sub
or
inc
add
dec
sub
mov
test
mov
ret
pop
pushf
inc
call
sub
dec
pop
cmps
add
pop
pop
push
push
dec
lods
loopne
imul
ror
daa
jae
test
(bad)
ss
and
jmp
es
mov
pop
and
inc
ss
mov
add
adc
les
clc
jae
jo
sub
adc
in
pop
mov
gs
dec
push
and
xchg
rol
pop
ja
jg
mov
ss
push
push
mov
sbb
mov
add
js
ret
cs
push
dec
sbb
ret
cmps
push
les
ror
shr
imul
pop
leave
push
sub
ficomp
sub
retf
loopne
and
push
das
dec
adc
and
cmp
movs
and
jp
lea
jl
sub
adc
movs
and
call
adc
mov
cmp
adc
gs
sub
sub
lahf
sbb
fld
arpl
and
inc
jo
pushf
stos
shr
mov
invd
sbb
and
nop
(bad)
cmps
ins
pop
cld
push
push
add
leave
add
jno
add
add
jno
je
mov
aas
lock
ret
add
inc
ret
xchg
inc
mov
gs
rol
adc
pop
or
js
cdq
push
or
pop
pop
jne
inc
shr
cmp
mov
rcr
jmp
jg
test
jle
cmp
jl
add
dec
cmp
jg
dec
push
shl
int
sar
daa
sbb
xchg
xor
jecxz
and
push
(bad)
repz
mov
inc
(bad)
xlat
ss
pop
iret
or
jne
push
push
enter
or
or
fs
int
push
adc
or
hlt
sahf
pop
jecxz
and
fcomp
int
mov
push
fsub
xor
ror
scas
mov
jbe
cmp
pop
in
jmp
retf
mov
lods
sub
jb
or
xchg
fdivr
inc
and
out
popa
inc
xchg
loopne
sar
test
fild
outs
movs
mov
inc
in
sub
loopne
es
cmp
cdq
mov
dec
jo
push
pop
lahf
add
mov
mov
inc
dec
push
cmp
fnstenv
cmp
rol
adc
popa
jno
cli
(bad)
mov
inc
ss
add
inc
xchg
or
dec
ret
xor
push
mov
and
ror
xor
pop
cmp
mov
enter
jbe
fadd
aam
mov
fcomp
fld
sbb
imul
xor
les
ret
jb
mov
movs
xor
fcom
popf
movs
cwde
jge
cmp
add
push
push
mov
cmp
push
mov
(bad)
rcr
xor
mov
push
mov
pop
stos
or
jmp
and
aaa
dec
lahf
repnz
pop
movs
jge
(bad)
aas
ret
inc
aam
sub
loop
lock
cdq
adc
icebp
or
sub
xchg
push
push
push
js
inc
ss
sbb
inc
jl
fsubr
fsubr
sub
jb
je
loop
mov
and
and
mov
or
(bad)
push
imul
push
jle
jb
inc
cmps
jb
jmp
mov
and
mov
mov
sbb
cs
adc
scas
data16
adc
aam
lock
cmp
jae
mov
and
and
add
push
lock
or
add
mov
mov
popf
shl
xchg
or
js
or
hlt
mov
mov
add
add
sub
xchg
(bad)
push
cld
adc
dec
mov
dec
sbb
mov
and
pop
sub
mov
add
cwde
fstp
push
gs
xlat
hlt
sbb
js
cmp
fiadd
fistp
(bad)
adc
sub
hlt
lock
jnp
nop
jbe
repnz
adc
aad
clc
icebp
loopne
cmc
add
or
stc
push
mov
inc
test
imul
clc
clc
hlt
mov
inc
add
or
cli
jg
cmp
mov
and
ja
pop
xor
inc
fwait
test
out
xor
lods
adc
jbe
mov
rcr
dec
sti
loope
enter
push
in
hlt
int3
movs
mov
mov
or
xor
imul
cmp
call
outs
sbb
dec
loopne
fdivr
loop
enter
imul
int3
mov
cmp
out
sub
in
lock
sub
test
fmul
(bad)
dec
jb
xor
mov
pusha
sar
(bad)
mov
mov
or
lods
data16
fld
pop
push
ins
mov
lods
cmps
mov
and
outs
jle
mov
fmul
add
dec
fstp
fstp
in
cmc
xor
and
and
fidivr
fcomp
dec
hlt
loopne
fcom
shr
lock
int3
inc
add
arpl
mov
xchg
dec
push
and
push
mov
or
xor
data16
fist
or
mov
sbb
mov
xor
aaa
sbb
jmp
sub
jnp
ss
into
xor
nop
pop
adc
or
cmp
xor
inc
push
sub
in
out
imul
jmp
sbb
sub
adc
sbb
or
sub
fisttp
repz
cmp
and
je
imul
push
pop
out
lds
jnp
mov
dec
pop
mov
hlt
mov
xor
(bad)
push
add
or
jne
cmp
or
dec
sub
adc
sub
ds
mov
sub
mov
ret
xsaves
in
cwde
jnp
push
rcr
fcmove
or
sbb
adc
cmp
add
(bad)
and
or
stos
and
push
jb
sbb
jl
pop
sub
xchg
inc
idiv
push
and
mov
rcr
xor
pop
pushf
jb
adc
sbb
pop
mov
add
mov
push
jle
jb
in
sbb
push
or
mov
sub
hlt
inc
push
xlat
cmp
sbb
mov
mov
add
ror
cmp
pop
dec
jnp
sbb
sbb
imul
xor
fsubr
outs
js
or
repnz
imul
cld
loopne
jmp
adc
xchg
mov
ja
cs
cmps
lahf
push
add
fmul
xchg
jle
es
add
cwde
and
in
push
scas
inc
add
add
and
jle
mov
push
dec
adc
bnd
ja
out
or
and
push
dec
or
cs
pop
rol
adc
sbb
nop
jg
aam
fisttp
mov
pusha
imul
punpckhdq
xor
fild
das
xor
in
sbb
fst
jg
push
pop
lds
mov
sbb
cmp
test
jg
xor
gs
ins
xchg
aaa
or
inc
test
xchg
movs
test
xor
add
js
pop
jmp
jb
dec
cs
jae
pop
int3
push
or
(bad)
arpl
lods
loopne
pusha
push
loope
xchg
xor
and
outs
jb
ret
out
dec
or
push
push
sbb
pop
dec
or
out
mov
dec
test
adc
imul
icebp
sub
and
cmp
push
and
cmps
cmp
je
mov
or
xchg
adc
add
addr16
aaa
int3
push
loopne
(bad)
pusha
adc
lock
and
pop
sahf
sub
or
aad
es
push
retf
stos
sub
sub
add
xor
jp
lds
daa
mov
adc
adc
mov
test
cs
jnp
push
mov
cmp
loopne
(bad)
not
add
pop
ror
mov
jne
(bad)
xchg
fwait
xor
loopne
dec
lods
cld
scas
test
test
cmp
jne
add
add
mov
out
lods
dec
and
mov
add
or
jns
jge
je
adc
and
enter
inc
jne
sub
push
sbb
add
adc
movs
nop
imul
mov
int
or
sbb
mov
xor
mov
xchg
lods
jecxz
mov
sub
dec
aaa
inc
add
or
mov
call
shl
clc
out
or
pop
test
out
aaa
aas
loop
or
mov
mov
fadd
xor
sub
xor
mov
push
add
adc
mov
test
or
call
scas
pop
ja
dec
ret
push
cmp
or
sbb
sbb
sub
shl
lods
ss
fistp
stos
pop
sti
push
int3
sub
sbb
fdiv
push
and
add
inc
dec
shufps
je
lods
jb
fst
mov
cmps
hlt
add
mov
cmp
pusha
stos
add
adc
nop
add
je
xor
cmp
pusha
inc
cmp
and
or
out
sbb
inc
mov
sub
adc
adc
sub
push
fsub
jno
imul
loopne
sbb
inc
mov
loop
pop
mov
jne
pop
mov
cmps
clc
inc
push
fadd
ror
xchg
ins
xchg
daa
dec
cmp
jne
mov
xor
push
test
(bad)
jmp
mov
jge
inc
sub
lock
dec
aaa
cmp
retf
sub
xor
imul
add
in
outs
jg
xor
loopne
and
dec
test
or
and
fisubr
(bad)
out
push
pop
ret
jb
sub
lock
mov
jmp
dec
mov
and
pop
adc
mov
push
push
lea
add
jmp
push
add
and
mov
dec
repnz
lds
loopne
jmp
lock
sbb
mov
popa
sbb
adc
and
push
std
loopne
cmp
push
mov
test
and
dec
push
stc
push
inc
xchg
push
test
cmp
call
punpckhdq
int3
sub
jecxz
rcr
mov
pop
adc
test
pusha
jb
int
jg
call
add
into
mov
mov
iret
lock
and
mov
ret
cli
jle
mov
adc
xchg
add
cs
add
inc
push
ror
xchg
icebp
and
out
or
add
rol
pop
out
pop
pop
pop
rol
(bad)
rol
imul
fsubr
or
mov
adc
test
cmp
ds
in
mov
pop
jne
push
addr16
push
inc
sti
adc
hlt
mov
sub
sub
inc
out
add
dec
jmp
test
mov
mov
out
jne
or
psubsb
sub
mul
sub
lods
mov
rcl
inc
lods
es
lock
stos
imul
jge
sub
inc
sub
mov
mov
pop
pop
js
in
popa
adc
aas
into
cmps
ror
mov
push
aaa
jo
sub
inc
addr16
enter
imul
bound
dec
inc
call
sub
jo
cmp
push
ficomp
or
lods
xor
dec
arpl
shl
pop
test
js
cmps
sub
push
push
cmps
gs
xor
lea
add
sbb
out
icebp
sub
lods
mov
xchg
and
imul
add
push
icebp
push
fld
test
sbb
xlat
adc
(bad)
fs
and
inc
pusha
inc
cmp
cmp
movs
push
pop
cmp
xchg
push
mov
aad
pop
imul
ror
xor
out
cli
clc
mov
mov
movs
add
fadd
mov
stos
adc
test
loopne
loope
ret
or
call
mov
hlt
mov
push
or
pushf
xchg
test
ins
ja
add
outs
adc
leave
inc
aas
lods
push
inc
retf
sub
inc
mov
add
rcr
mov
sbb
or
mov
out
rcl
push
test
test
mov
push
pop
adc
or
ret
adc
adc
movs
adc
and
sbb
sub
inc
pusha
packsswb
lods
push
sbb
out
jmp
add
fist
push
dec
sub
or
ins
sub
mov
sbb
aaa
mov
loope
cmp
push
dec
hlt
mov
popa
cmp
adc
mov
imul
(bad)
mov
sub
gs
xchg
inc
ror
call
sbb
call
inc
xchg
call
sub
dec
inc
or
inc
leave
sub
inc
sbb
pop
and
lock
dec
into
pop
mov
or
mov
loopne
ror
addr16
and
inc
sbb
xor
adc
push
aam
ss
jmp
icebp
test
jo
out
inc
call
pop
movs
inc
bound
rol
jle
ret
shl
jnp
popf
sbb
sbb
push
lods
dec
mov
int
into
sub
jb
xor
stos
sub
arpl
inc
sub
sub
sbb
and
sub
jno
ins
add
das
push
call
adc
adc
xor
sub
push
jl
or
pop
stos
outs
adc
mov
add
sub
add
mov
(bad)
jmp
ror
adc
add
jl
or
cmp
jp
push
adc
pop
sbb
scas
cmp
nop
add
or
add
sub
xchg
outs
(bad)
mov
nop
sbb
ret
add
out
outs
xor
pop
jp
inc
test
mov
cmp
and
pop
loope
push
dec
jecxz
or
pop
pop
inc
sub
mov
add
mov
movs
gs
idiv
cmp
adc
xchg
xchg
call
inc
or
(bad)
sub
jno
jbe
sbb
or
aam
add
adc
dec
adc
push
ja
jae
dec
test
out
repnz
xchg
adc
push
cdq
rcl
aas
cmps
cmp
xchg
xchg
inc
xchg
retf
push
iret
jne
imul
and
int
stc
or
mov
add
cmp
add
enter
(bad)
cmp
xor
ret
test
inc
cmp
or
mov
mov
shr
mov
jno
ret
xchg
push
xor
adc
cmp
dec
loope
inc
inc
adc
dec
mov
dec
xor
(bad)
clc
mov
sti
test
call
mov
adc
xchg
adc
mov
cmp
nop
xor
pop
add
leave
je
ffree
jb
retf
bound
sahf
and
mov
dec
outs
push
mov
pushf
jno
daa
push
push
and
adc
pusha
loope
inc
cmps
push
push
sub
jmp
cmp
or
xchg
adc
adc
mov
out
lods
lods
push
sub
add
clc
or
loopne
and
sbb
or
int3
cwde
mov
xchg
or
or
inc
inc
mov
sub
cld
or
inc
and
mov
xor
add
add
mov
enter
inc
cs
and
xchg
cmp
pop
or
jo
mov
adc
xor
lea
(bad)
mov
test
scas
lods
jo
dec
sub
xor
loope
iret
dec
retf
adc
lea
daa
ins
xchg
adc
shl
and
jg
sbb
cmp
xchg
jo
retf
gs
and
xor
dec
dec
cmp
daa
mov
jmp
imul
push
and
mov
inc
pusha
loopne
jmp
or
cs
cwde
push
fild
ss
js
loopne
loopne
add
mov
inc
mov
call
or
stos
mov
aam
mov
fstp
pop
mov
adc
pop
sbb
data16
rcr
push
sub
dec
xchg
sub
sub
adc
cdq
sub
push
mov
jge
retf
push
mov
lahf
xchg
inc
xchg
jno
enter
push
sbb
imul
dec
enter
das
sub
pop
sbb
dec
or
inc
sub
pop
jo
add
pop
and
(bad)
sub
xchg
adc
mov
imul
neg
push
mov
adc
dec
or
inc
loope
jp
add
inc
in
jnp
mov
loopne
add
sub
pop
add
dec
lods
(bad)
cmp
mov
daa
loopne
sti
xchg
mov
sub
jge
fs
and
inc
mov
add
adc
aas
popa
or
push
mov
in
push
sub
(bad)
aam
arpl
jbe
(bad)
fisttp
es
jg
dec
pop
fsubr
inc
mov
cmp
dec
(bad)
fstp
xor
loope
ja
pop
faddp
test
sbb
xor
movs
inc
and
lods
imul
in
sub
cwde
ror
jbe
mov
es
push
jecxz
and
mov
pop
sbb
add
nop
clc
loopne
mov
imul
sbb
inc
test
cdq
int3
or
pop
and
stc
dec
test
call
add
jo
cmp
dec
and
push
ret
movs
dec
sbb
cmp
or
mov
jno
out
or
pop
inc
ins
test
rcr
mov
adc
fs
and
outs
ins
mov
dec
cwde
and
sub
enter
ror
call
out
into
jb
add
(bad)
int3
fadd
fisttp
movs
push
or
pushf
mov
fmul
mov
aaa
or
push
sub
cwde
(bad)
xor
or
pop
xchg
mov
mov
mov
loope
cmp
jp
ins
add
scas
or
cwde
ror
dec
push
jle
jne
pop
sbb
adc
cmps
ret
fmul
pop
ret
and
pushf
imul
movs
imul
pop
cld
imul
adc
push
or
push
std
pop
lock
mov
add
cmp
lea
or
daa
adc
cmps
jns
test
pop
aaa
jo
lods
pusha
push
movs
xacquire
inc
add
(bad)
or
pusha
das
xor
cwde
push
cmp
adc
adc
push
jo
xchg
fucom
fcmovnb
int
xchg
mov
jge
mov
adc
mov
jmp
sub
add
inc
scas
push
add
ja
or
pop
out
xchg
test
jmp
adc
add
mov
call
mov
mov
dec
test
inc
aas
fiadd
inc
icebp
and
cmp
ja
repnz
(bad)
mov
push
pop
pop
ror
stos
ret
xchg
mov
imul
mov
or
add
lods
pop
sar
dec
inc
sar
add
pusha
sub
or
adc
pop
enter
(bad)
xlat
mov
dec
lds
lahf
inc
js
cwde
mov
xchg
add
punpcklbw
inc
pop
test
sbb
cmp
test
dec
mov
mov
retf
xchg
call
mov
iret
push
push
jb
push
or
and
lea
push
xlat
jle
xor
add
nop
dec
xchg
cmp
leave
sbb
sbb
jns
jnp
add
(bad)
xchg
mov
and
or
icebp
mov
cmps
and
es
lds
ror
loopne
push
jp
out
lock
pop
ins
fbld
mov
jl
cmp
inc
dec
mov
jp
dec
xchg
xchg
mov
sbb
loop
(bad)
inc
loop
or
sub
jge
and
dec
or
lock
movs
ds
dec
loop
adc
mov
cmp
ror
cwde
scas
call
jb
mov
retf
lea
sahf
jle
sub
inc
jae
or
sbb
imul
pop
push
cmp
jae
inc
call
jne
shl
loope
cmp
je
lods
sub
push
push
adc
inc
or
mov
jl
add
cmp
sbb
les
mov
sub
add
daa
je
pop
jnp
es
and
popa
mov
paddsw
push
adc
push
push
into
sub
add
inc
and
or
je
faddp
pop
inc
push
loope
fwait
push
mov
lock
push
mov
dec
jmp
inc
push
xor
ret
adc
xor
test
mov
and
mov
int3
pop
sub
sbb
cmp
test
xchg
sbb
dec
jecxz
dec
addr16
data16
mov
xchg
xlat
mov
mov
add
jle
pop
xlat
mov
cmp
scas
lods
enter
mov
mov
fs
rol
add
or
pop
sbb
mov
and
inc
out
pop
dec
push
add
sbb
jg
jecxz
sub
fwait
cmps
or
sar
push
push
sbb
mov
xor
sbb
mov
popf
add
ins
xchg
push
pushf
jmp
dec
pop
dec
add
in
xchg
ds
imul
pusha
movs
mov
fs
add
lahf
movs
and
inc
inc
mov
jo
daa
cmp
add
xchg
mov
(bad)
js
push
inc
adc
sbb
daa
adc
add
pop
push
mov
bound
sbb
in
push
sub
dec
lahf
push
out
add
add
inc
cld
or
add
push
rcl
push
xor
call
cwde
bound
popa
loopne
cwde
movs
or
mov
xchg
jne
test
jbe
pop
jecxz
xchg
cmp
cmp
add
pop
add
imul
mov
mov
inc
xchg
in
or
cld
test
lods
adc
jns
cmp
daa
pop
or
retf
sub
xor
mov
stos
pop
retf
push
ins
mov
retf
jno
inc
stos
pusha
stc
mov
adc
pop
not
outs
fsub
mov
js
in
xor
cmps
test
pop
xor
and
dec
xchg
add
mov
add
hlt
pop
pop
inc
scas
jge
pop
aaa
sub
cmps
rol
xchg
sub
mov
dec
stos
or
lock
rcl
jnp
sub
imul
mov
test
pop
push
dec
mov
push
inc
mov
add
lea
test
mov
xchg
enter
lock
pop
mov
push
adc
jae
add
xor
adc
repnz
dec
push
push
fucom
pop
xchg
adc
inc
imul
or
scas
aaa
in
xchg
loopne
sub
jne
mov
fcomp
ja
mov
sbb
clc
jmp
ins
xor
outs
adc
bound
or
sbb
cmps
sub
push
enter
add
retf
test
das
sub
fwait
and
add
xchg
cdq
pop
adc
dec
mov
stos
and
adc
jne
mov
adc
push
xor
sub
or
inc
mov
inc
(bad)
stc
and
pop
xchg
aam
or
push
call
add
in
ror
mov
and
sub
call
sub
mov
jp
cmps
fisttp
repnz
stos
or
aaa
mov
sbb
lods
clc
jo
test
or
sub
lods
inc
jmp
xchg
not
daa
push
int3
xor
mov
and
ss
enter
loop
dec
or
dec
push
in
pusha
pop
adc
add
push
push
ins
daa
push
jne
inc
cmp
ret
xor
cmp
adc
pop
pop
dec
push
icebp
sub
hlt
es
adc
sub
mov
pop
push
or
jmp
pop
dec
sub
jl
push
mov
push
and
cmp
lar
pop
mov
ins
inc
adc
dec
or
ror
popf
lods
pop
push
push
sahf
cdq
mov
mov
or
add
(bad)
ror
test
mov
lods
pop
fstp
mov
adc
mov
push
xchg
lock
inc
rol
fisub
pop
sub
jo
xchg
movs
lods
pop
sbb
retf
cmp
in
shr
fsub
fwait
adc
pop
nop
mov
inc
data16
xor
ins
sub
or
cwde
mov
jg
cwde
and
mov
inc
cmp
cdq
nop
data16
adc
lods
and
ret
pop
or
sahf
mov
lods
mov
ror
stc
(bad)
popf
or
pop
xor
mov
mov
repnz
cmp
jno
mov
jecxz
or
cmp
push
jne
push
sbb
cmp
mov
xor
jp
adc
mov
jne
inc
add
mov
hlt
and
outs
mov
mov
out
mov
jmp
test
lock
dec
call
adc
scas
push
inc
sbb
out
add
inc
add
imul
inc
aas
sbb
lahf
push
lahf
mov
mov
xor
push
fdivr
in
pop
push
jmp
jo
or
clc
dec
inc
jb
je
dec
je
dec
adc
adc
inc
mov
or
sbb
scas
adc
inc
add
shr
push
dec
adc
mov
jge
sbb
and
xchg
push
ja
add
push
and
pop
aaa
sbb
cmp
adc
fisub
cmp
or
(bad)
popa
cmp
jle
push
pop
inc
add
add
sub
cwde
das
sub
pop
mov
dec
dec
das
in
jle
mov
and
test
dec
loope
push
imul
dec
inc
ja
rcl
jmp
push
out
adc
(bad)
and
loopne
and
clc
push
adc
sub
adc
dec
adc
jecxz
mov
jnp
dec
sbb
jns
xor
sub
and
movs
and
inc
loope
dec
lock
hlt
jl
dec
jae
push
inc
or
ret
add
mov
and
sahf
cmp
mov
test
in
mov
add
int
cmp
outs
cmp
jb
sub
xchg
jl
adc
sbb
ror
or
or
add
cmpxchg
les
or
lock
(bad)
xor
inc
inc
and
ds
jb
push
add
xchg
mov
xchg
and
inc
dec
pop
push
dec
inc
pop
cmps
dec
movs
repnz
mov
add
int3
int3
je
inc
mov
inc
push
test
mov
push
dec
inc
jb
rcl
dec
mov
inc
es
push
aam
jle
mov
cs
or
test
lods
scas
push
push
push
add
movs
push
mov
inc
adc
xchg
mov
loop
pop
jecxz
call
dec
adc
clc
pop
push
mov
loop
neg
movs
or
pop
scas
xchg
add
pop
sbb
fild
xchg
push
sub
and
dec
pop
cmps
mov
xor
ds
pop
cld
push
out
add
adc
or
or
push
jo
aas
mov
cmps
ins
popa
sub
loop
jns
jae
inc
outs
sar
pop
mov
(bad)
mov
stc
movs
scas
rcl
mov
jae
sub
aam
test
pop
sbb
mov
push
mov
test
icebp
push
push
inc
push
aas
dec
push
cmp
jmp
scas
movs
inc
mov
add
ds
mov
push
add
and
adc
mov
mov
pusha
out
push
ds
inc
or
push
or
push
enter
gs
inc
dec
mov
push
cmp
iret
push
mov
mov
add
inc
mov
inc
xor
xadd
adc
xchg
gs
jo
xlat
sub
call
add
pusha
mov
xchg
mov
addr16
test
lahf
xor
adc
inc
rcl
or
xor
dec
fistp
(bad)
jo
or
push
inc
pop
sbb
sub
add
xor
mov
test
shl
in
fdiv
mov
adc
lock
prefetchw
xchg
mov
cld
dec
adc
cld
mov
pop
rcl
mov
mov
or
adc
aam
jg
outs
or
stc
push
mov
imul
mov
adc
fldenv
or
xor
fild
enter
ins
and
in
jnp
mov
shl
add
jbe
dec
push
and
add
les
and
add
movs
in
xlat
inc
mov
xor
les
mov
and
push
sub
jo
daa
cmp
call
add
lea
out
push
test
mov
vmwrite
aam
aam
mov
push
repnz
push
push
adc
aam
sbb
sti
mov
btr
inc
mov
pop
daa
call
jns
jns
out
push
pop
mov
sahf
out
sahf
mov
stos
(bad)
ja
and
(bad)
push
aaa
cmp
sub
cwde
mov
fadd
add
add
sub
js
inc
and
int
outs
sbb
inc
add
push
ret
fst
into
mov
movs
ror
mov
clc
setno
inc
clc
push
push
in
movs
and
lods
hlt
mov
xor
mov
inc
mov
pop
push
dec
and
pop
mov
sub
mov
push
in
adc
add
mov
push
fprem
mov
ja
lahf
sub
add
adc
pop
add
or
sub
das
and
jae
cmps
pop
dec
sbb
cmp
fs
inc
adc
xchg
mov
gs
sbb
fdivr
frstor
xor
in
push
sub
or
aas
ret
sbb
retf
cmps
mov
jbe
idiv
pop
pop
pop
xchg
or
hlt
pushf
add
hlt
sbb
inc
push
lds
mov
fbld
ins
imul
sub
pop
data16
push
jnp
test
inc
push
int3
rcr
push
mov
jmp
in
mov
xchg
nop/reserved
mov
mov
sbb
xchg
shr
ss
pop
jmp
cmps
or
shl
pop
adc
adc
add
es
xor
mov
xchg
push
cdq
push
call
dec
mov
fs
repz
inc
das
mov
cmps
mov
xor
jmp
movs
daa
dec
jbe
jmp
(bad)
adc
jle
rol
pop
les
cmp
xor
xchg
ret
sub
js
iret
sub
adc
push
add
jmp
mov
mov
and
xchg
mov
arpl
add
add
inc
or
jne
sbb
enter
repnz
push
xchg
pop
add
xchg
rcr
and
push
cmp
jge
lock
inc
mov
push
push
(bad)
cmc
shl
lds
xor
shl
clc
test
lock
ret
pop
movs
xchg
inc
xor
(bad)
mov
aad
mov
sub
jmp
xor
ins
lods
pop
fsub
test
pop
fsubr
sub
and
sbb
push
jl
mov
test
mov
sar
sbb
or
dec
add
adc
mov
ins
jle
adc
mov
mov
push
movs
add
pusha
and
ror
iret
das
(bad)
and
sbb
or
hlt
fadd
jo
cmp
or
dec
inc
dec
lea
jbe
(bad)
fmul
js
arpl
sbb
test
or
xor
and
mov
mov
inc
inc
shl
xor
ret
stc
or
pop
stos
les
ret
test
xchg
das
inc
adc
jne
mov
push
xor
inc
dec
xchg
movs
dec
test
lock
jns
mov
in
lock
cmp
dec
xchg
or
call
inc
daa
push
cld
loopne
push
adc
call
dec
scas
add
dec
lods
adc
and
clc
fisttp
mov
lds
or
pop
cmp
or
pop
clc
jecxz
dec
(bad)
xchg
rol
leave
test
lock
push
stos
fs
sub
mov
lock
mov
aam
test
pop
(bad)
cmp
or
hlt
or
pop
mov
jns
adc
pop
adc
lods
xor
push
adc
(bad)
xor
pop
inc
and
(bad)
dec
je
xor
sbb
and
loopne
and
scas
enter
and
clc
clc
jmp
push
(bad)
call
mov
enter
push
(bad)
xor
mov
inc
sbb
cmp
addr16
call
push
int3
sbb
or
fndisi(8087
push
adc
add
rcl
enter
mov
xor
mov
adc
xchg
add
inc
push
and
xor
in
dec
pop
xchg
mov
enter
dec
mov
push
enter
xor
add
or
mov
sbb
add
adc
inc
gs
sbb
xor
pop
mov
xor
xor
enter
push
add
push
retf
inc
jno
push
je
and
dec
sub
nop
retf
shl
cmc
imul
test
inc
ror
add
adc
fs
movs
xchg
retf
adc
xchg
inc
xchg
adc
movs
push
sbb
adc
adc
sub
inc
push
sbb
in
sbb
sbb
inc
push
movs
pop
and
jl
push
sbb
arpl
mov
inc
sub
inc
mov
inc
xor
push
inc
daa
push
sub
pop
loopne
popa
or
push
mov
push
das
push
ret
or
sub
(bad)
lea
cmp
sub
sub
lock
loopne
jae
daa
jg
add
push
fild
xchg
retf
test
retf
and
call
xor
pop
add
pusha
and
fcomp
push
dec
test
test
outs
or
jno
mov
sbb
sbb
cmp
inc
sbb
sbb
dec
dec
push
push
sbb
sbb
pop
pop
pusha
sbb
sbb
push
sbb
sbb
add
nop
xchg
sbb
sbb
cwde
pushf
mov
sbb
sbb
sbb
sbb
sbb
int3
rcl
sbb
sbb
fcomp
loopne
mov
in
lock
int
push
lods
xchg
adc
and
and
push
lock
pop
arpl
cmp
xor
fist
mov
inc
icebp
push
and
ins
ins
push
sbb
cmp
gs
sub
inc
je
retf
dec
test
add
nop
movs
push
mov
sub
pop
loopne
add
adc
dec
in
shl
and
dec
push
push
movs
xor
je
sbb
jl
sub
push
mov
dec
test
add
movs
hlt
xchg
add
movs
xor
xchg
cwde
adc
and
adc
movs
add
nop
dec
test
lods
dec
gs
sub
xchg
add
lods
push
movs
xor
mov
adc
sub
push
sbb
lock
cld
mov
or
aam
sub
push
sub
inc
test
pop
loopne
xor
xchg
add
mov
adc
in
(bad)
in
jge
lock
xchg
inc
push
rcr
mov
add
loop
cmp
fadd
inc
sbb
lock
sbb
sub
pop
xrelease
xchg
or
sbb
xchg
xor
enter
bound
arpl
add
outs
lods
xchg
iret
add
test
je
popf
fst
push
loop
adc
dec
imul
sbb
inc
fs
dec
arpl
jae
xor
ja
hlt
daa
lea
mov
ins
jns
jns
pop
inc
outs
das
and
adc
imul
mov
popa
pop
xchg
pop
add
cmp
scas
or
js
push
or
popf
sub
sbb
or
xor
push
(bad)
adc
movs
sub
mov
add
jns
dec
imul
retf
pop
pop
cmp
and
push
sub
cwde
xchg
test
daa
movs
das
jbe
jbe
fstp
in
pop
(bad)
pop
xchg
das
add
add
mov
out
fs
jg
mov
je
addr16
dec
in
mov
pop
mov
out
inc
mov
xchg
inc
jbe
push
sbb
fisttp
inc
outs
arpl
adc
add
mov
(bad)
pop
repz
ret
or
adc
pop
aaa
aam
and
dec
and
pop
inc
aad
imul
into
adc
lods
sbb
daa
lea
aad
test
mov
pop
jb
ins
sub
xchg
add
repnz
dec
sub
inc
scas
dec
leave
outs
or
dec
jb
mov
add
or
xchg
or
or
add
jbe
ja
adc
pop
leave
ficomp
pop
adc
sub
fadd
mov
fadd
into
loopne
xor
aam
lock
sub
out
and
adc
sbb
fimul
mov
sbb
add
mov
repnz
inc
and
dec
ss
nop
popf
bound
mov
jae
and
inc
in
inc
enter
xchg
mov
lea
inc
push
xor
mov
mov
pop
dec
jnp
push
push
push
sub
fwait
sbb
inc
inc
xor
push
push
les
xchg
sub
mov
inc
test
das
fisubr
mov
adc
test
rol
sbb
push
(bad)
and
cmp
hlt
fistp
ret
cmps
adc
mov
cmp
sbb
xor
ins
sub
xor
cwde
ds
dec
xor
les
adc
adc
mov
and
icebp
sbb
cmp
test
fdiv
popa
in
inc
sbb
test
or
test
adc
pop
inc
mov
pop
jle
lods
sbb
dec
jns
scas
jne
and
mov
out
and
and
call
out
fldcw
retf
and
dec
mov
fnstcw
jmp
sbb
dec
push
call
sbb
aas
fld
pusha
mov
mov
mov
and
mov
and
js
shl
ss
hlt
mov
out
jmp
daa
push
popa
or
push
push
aas
popf
add
pop
pop
adc
dec
outs
add
call
rcr
in
sub
inc
bound
sub
popa
(bad)
inc
daa
outs
outs
retf
fmul
in
ins
ins
pop
push
outs
pop
or
imul
xchg
xor
mov
shr
sbb
sbb
mov
jl
sbb
xchg
cmp
out
or
jecxz
xchg
and
push
pusha
sub
mov
mov
adc
fs
addr16
push
dec
push
mov
cmp
mov
push
retf
cmp
mov
cld
dec
out
pop
lea
es
push
fs
sbb
xchg
out
in
add
inc
sbb
pop
ja
dec
push
pop
push
das
sbb
cmp
lahf
dec
enter
inc
addr16
stos
sbb
inc
fs
xchg
fmul
pop
add
rcr
pop
jb
test
inc
std
in
call
push
xor
lea
fimul
jns
iret
inc
pop
dec
xchg
adc
xor
dec
cmp
mov
loopne
enter
dec
jbe
and
test
pop
dec
pushf
lods
cmp
es
pop
or
fcmovb
sbb
push
inc
test
inc
cpuid
outs
and
and
inc
shr
push
nop
(bad)
rcl
sbb
nop
test
sti
xor
xor
lea
inc
mov
ja
adc
jae
out
mov
(bad)
jl
xor
adc
out
call
out
add
mov
inc
js
or
pusha
sbb
jl
ds
mov
cmp
div
mov
test
enter
xchg
(bad)
add
cmp
adc
sahf
xchg
ficom
add
jmp
xor
jmp
lods
lods
sub
test
pop
test
aad
(bad)
jmp
aaa
fdiv
cmp
in
(bad)
ja
mov
in
pop
push
fadd
jnp
jo
icebp
pop
jnp
test
js
xchg
pop
adc
inc
and
call
aam
push
jl
push
inc
or
or
fcomp
adc
xor
mov
imul
sub
jp
mov
or
fcmovne
mov
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
cmps
cmps
test
xchg
xchg
xchg
xchg
stos
stos
lods
lods
xchg
xchg
xchg
xchg
scas
scas
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
xchg
xchg
xchg
xchg
call
xchg
sahf
lahf
add
add
xchg
xchg
mov
add
sahf
adc
es
repz
or
add
cld
loopne
sahf
out
shl
in
mov
jns
out
test
mov
sahf
cwde
int3
nop
les
jns
mov
lods
jo
jns
out
push
out
sahf
pop
mov
dec
jl
sahf
out
inc
je
ins
xor
jns
out
sub
sahf
out
sahf
sbb
or
int
jns
xor
pop
sub
repz
repz
sbb
adc
repz
fmul
add
cld
sahf
out
call
jns
out
in
fsub
out
int3
nop
les
mov
jo
or
jns
lahf
aam
cmp
ins
pop
ins
das
xchg
popf
inc
fnclex
pop
and
mov
sbb
dec
mov
test
cmp
jecxz
and
and
in
cmp
and
sbb
jecxz
pop
xor
and
daa
push
icebp
xchg
mov
sub
inc
mov
push
pop
jmp
push
imul
pop
pop
dec
dec
imul
mov
mov
cdq
dec
sub
jne
das
repnz
push
dec
add
push
in
dec
sahf
xchg
push
add
add
pop
jmp
ror
clc
scas
sbb
xor
in
lock
loopne
in
mov
popf
cmp
call
dec
ficom
in
mov
push
cmp
rcr
xchg
cmps
in
sbb
clc
jecxz
mov
sub
fidivr
(bad)
mov
or
add
fs
pop
mov
addr16
stos
dec
shl
push
dec
sub
mov
sbb
ins
xlat
push
leave
mov
je
push
adc
fsubr
shl
push
shl
sbb
and
and
sbb
out
mov
inc
loopne
hlt
push
mov
outs
push
add
push
adc
mov
cmc
inc
push
push
inc
pop
jb
pop
(bad)
mov
je
je
cmp
mov
mov
and
dec
movs
outs
push
shl
mov
pop
xchg
mov
movs
mov
jl
or
jo
ss
test
dec
shl
mul
push
xchg
fs
movs
and
pop
jle
(bad)
jl
int
in
out
out
push
add
jmp
pop
rol
adc
cmp
mov
sub
ins
sbb
add
and
xor
dec
imul
call
(bad)
cld
mov
add
outs
pop
arpl
ins
push
arpl
imul
scas
sub
pop
js
bound
test
jo
jb
jb
ja
dec
mov
popa
dec
es
ins
imul
data16
es
mov
mov
jo
addr16
jb
out
out
jnp
addr16
add
mov
pop
imul
arpl
ins
daa
push
jg
out
outs
into
sub
ins
das
xlat
mov
fnsave
sbb
and
mov
shl
mov
cmp
pop
je
jo
jb
or
daa
jns
outs
dec
pop
ret
or
add
or
imul
push
nop
mov
xor
mov
and
add
test
ins
mov
(bad)
movs
cmp
adc
mov
pop
popa
adc
rcr
pop
sub
and
inc
icebp
jo
pop
fmul
je
mov
sbb
aas
and
out
mov
mov
gs
or
mov
js
xor
mov
push
xor
dec
ins
pop
add
enter
push
push
(bad)
(bad)
and
loopne
clc
mov
cmp
jne
pop
pop
dec
adc
mov
scas
xor
icebp
movs
mov
cdq
and
(bad)
cld
stos
ins
aas
xchg
add
into
sub
rol
xchg
in
pop
ins
xchg
sbb
nop
sub
add
mov
addr16
xor
or
sub
gs
push
mov
mov
mov
mov
dec
push
pop
and
jmp
pop
jmp
adc
inc
movs
or
nop
push
or
out
mov
mov
mov
ret
mov
lahf
or
add
inc
dec
shl
add
add
jg
xor
push
pop
pop
or
or
or
or
or
or
push
movups
adc
repz
adc
iret
repz
sbb
sbb
push
pop
sahf
cmps
ins
jmp
and
and
in
push
arpl
sahf
out
xchg
cmps
mov
lahf
out
cld
or
repz
inc
push
bound
xchg
cmp
repz
mov
fldl2e
jns
out
sti
or
sbb
sahf
out
pop
data16
mov
jo
nop
sahf
xchg
in
xor
fild
mov
add
add
push
push
adc
dec
sub
xchg
retf
or
or
movs
jb
in
sbb
push
test
and
and
xchg
push
movaps
sub
and
adc
in
xor
cmp
push
mov
push
xchg
push
cs
and
sbb
in
retf
sbb
mov
sbb
retf
sbb
popa
imul
bound
arpl
push
test
and
cmp
xor
and
movs
jb
and
and
add
mov
int
sub
stc
add
sub
test
push
cmp
mov
sbb
xor
fdiv
fcom
loopne
test
out
sbb
push
lea
loopne
sub
outs
js
xor
(bad)
and
out
and
add
push
adc
inc
(bad)
call
push
sbb
and
mov
mov
push
in
mov
xor
movs
or
jmp
sub
dec
cmp
or
es
dec
fcomi
cdq
and
and
and
and
xchg
js
mov
and
pop
adc
pop
clc
cmp
sbb
mov
test
inc
push
idiv
sbb
dec
xor
mov
nop
sbb
and
pop
xor
xchg
inc
xchg
shl
and
repnz
shl
mov
pop
jo
inc
clc
or
dec
or
nop
xchg
pop
mov
adc
repnz
jecxz
ins
pop
or
push
cmp
xchg
aam
adc
inc
sub
dec
inc
addr16
or
and
mov
repz
dec
add
or
outs
ret
xchg
mov
and
push
add
mov
add
repz
ds
leave
sub
cwde
lea
loopne
test
jmp
sub
pmulhw
enter
call
jb
in
or
enter
repnz
iret
cmp
mov
shl
repz
jne
test
xchg
popf
movs
inc
dec
xchg
cmp
push
pop
cmp
jne
int3
cs
aaa
test
mov
(bad)
ret
push
pop
add
es
pushf
push
aaa
push
jmp
aaa
pop
movs
cs
mov
xchg
or
xchg
cmc
bound
sub
push
les
xor
adc
or
test
inc
sbb
inc
push
pop
aas
rcl
cmp
dec
adc
ret
sub
ja
push
mov
pop
sub
imul
dec
icebp
and
dec
push
jle
jne
push
(bad)
mov
adc
and
rcl
xlat
and
pop
in
push
mov
mov
sub
shl
fadd
mov
jb
pop
dec
adc
xchg
test
jecxz
test
xor
std
cmc
in
xchg
cmp
mov
jmp
(bad)
movs
and
cmp
dec
pop
push
mov
add
lods
xchg
rcr
test
or
mov
adc
xchg
es
sbb
dec
dec
xchg
xchg
aas
in
and
and
cmp
pop
inc
sbb
add
popa
and
sbb
out
sbb
or
je
in
cld
mov
test
and
mov
or
xor
mov
adc
adc
sahf
in
stos
dec
loop
in
jne
fwait
sub
out
call
pop
fs
mov
cmp
js
call
xor
add
adc
push
mov
loope
xchg
call
clc
in
sbb
fbld
aaa
sub
sub
and
sub
push
pop
sbb
pop
sub
fstp
jae
sub
sub
and
xor
jp
inc
or
sub
and
(bad)
adc
ja
test
adc
sub
and
imul
lds
stc
repz
test
add
adc
test
inc
xchg
in
hlt
lahf
lock
jne
test
mov
ret
mov
vcmpss
jo
jnp
xor
jo
(bad)
imul
push
cmp
pop
adc
enter
stc
cwde
add
pop
xchg
cmp
push
xchg
movs
mov
mov
push
xor
sub
or
cs
jbe
movs
test
ja
arpl
outs
pushf
fldenv
xchg
xlat
aaa
jns
cmp
mov
sbb
cmp
sar
cdq
ret
dec
inc
jg
jge
cld
xchg
cld
jl
pop
xor
and
add
loopne
repz
and
add
cmp
adc
or
pop
nop
adc
jae
pop
aaa
sbb
movzx
hlt
push
(bad)
or
sub
or
not
or
push
add
inc
aas
cli
fistp
dec
orps
inc
inc
sahf
cld
test
repnz
lods
pop
sbb
ja
mov
adc
adc
(bad)
push
jne
mov
popf
aam
or
or
add
mov
mov
xor
mov
aas
push
dec
dec
dec
inc
dec
retfw
xor
lods
ins
mov
add
xor
in
outs
adc
push
or
sub
cdq
mov
pop
repnz
inc
sar
pop
push
(bad)
test
mov
adc
adc
pop
adc
sub
shl
adc
jbe
mov
inc
sti
jmp
add
fidivr
inc
sbb
stc
std
stos
mov
inc
sbb
int
push
xor
add
adc
mov
out
cmps
aaa
rol
or
adc
cmp
sahf
nop
add
add
imul
add
out
outs
sbb
adc
sbb
mov
xchg
mov
call
jb
sbb
ret
cmp
xor
or
or
inc
push
or
jmp
scas
pop
pop
daa
mov
movs
xchg
loopne
mov
sub
ror
jmp
mov
mov
mov
or
sbb
or
mov
mov
test
fild
jb
div
(bad)
out
dec
add
rcl
jae
clc
push
hlt
out
or
shl
ins
cmp
stos
fdiv
push
mov
aam
dec
sti
push
sub
pop
cli
adc
ds
jbe
outs
sbb
dec
add
inc
mov
push
and
out
add
mov
out
ss
mov
push
ds
cwde
add
test
je
in
shr
mov
sbb
ror
mov
xchg
xchg
inc
bound
ror
movs
xchg
xchg
and
ins
push
sbb
daa
add
icebp
fidiv
push
push
push
rol
inc
hlt
or
sbb
pop
js
fiadd
xchg
jp
mov
jl
lock
sbb
ins
or
retf
lods
sbb
sub
or
shl
dec
add
fadd
jo
cmp
adc
inc
add
mov
(bad)
mov
ror
repnz
add
enter
xor
push
add
jl
movs
or
aam
dec
aas
fs
adc
outs
pusha
(bad)
mov
cmp
push
(bad)
or
sub
or
add
sub
push
les
cmp
dec
and
inc
iret
repz
aam
cld
sahf
out
adc
and
dec
pusha
jns
out
je
jl
test
jns
out
mov
pop
lahf
pushf
mov
movs
xor
jno
cli
fs
push
stc
pop
pop
pop
enter
pop
(bad)
stc
push
xor
aaa
jbe
push
add
xor
les
add
mov
add
hlt
mov
jb
add
lods
sub
neg
dec
js
pop
mov
sbb
inc
xor
mov
mov
push
cmp
(bad)
outs
adc
pop
lods
xor
cmp
retf
push
stc
pop
inc
jmp
push
dec
in
mov
sbb
dec
ror
xchg
data16
repz
xor
mov
pop
ret
les
and
ins
loop
adc
adc
push
xchg
cmp
popa
cwde
dec
push
pop
and
ins
scas
lock
inc
enter
aas
push
mov
push
fcomip
jnp
adc
inc
js
dec
and
xor
pop
call
ds
into
add
xlat
test
pop
cmp
dec
daa
test
xor
imul
cmp
sbb
add
aam
loope
xor
push
and
inc
ins
jp
xor
push
stc
or
push
mov
cwde
cmp
loopne
xchg
and
scas
(bad)
enter
sub
mov
and
cmp
xor
pop
xor
ror
cmps
cmp
mov
sahf
or
rcl
xchg
mov
sub
loop
adc
pop
mov
push
cmp
jle
add
and
sub
jle
shr
mov
out
sbb
push
add
inc
mov
pop
movs
test
test
or
clc
xor
push
test
mov
mov
inc
mov
adc
push
dec
pop
imul
sahf
ins
je
xchg
sub
cs
push
mov
iret
add
mov
sub
repnz
mov
and
in
popf
add
sar
(bad)
jmp
mov
data16
out
and
adc
push
dec
mov
ins
and
sbb
fidiv
aas
jnp
stc
sub
cmp
nop
add
inc
call
mov
inc
push
movs
push
jmp
aam
sbb
outs
mov
push
push
add
loope
mov
popf
sahf
push
call
bound
sbb
daa
jnp
push
or
and
and
cmps
sbb
lods
(bad)
fcomp
xchg
retf
test
(bad)
enter
jb
mov
addr16
and
adc
stos
nop
pop
and
mov
xchg
ins
bound
je
fidivr
(bad)
(bad)
xchg
out
sub
push
imul
pop
jnp
mov
ds
dec
adc
imul
sbb
data16
add
xchg
mov
jge
je
lahf
xor
cmps
push
push
out
inc
inc
dec
ss
inc
or
sub
pop
je
dec
adc
cmp
pusha
retf
inc
cs
adc
push
mov
js
(bad)
cmp
dec
cld
scas
fdivr
test
sbb
fbstp
xor
daa
xchg
push
push
rcl
cmp
out
mov
push
test
imul
push
js
sub
xchg
or
mov
xor
adc
jne
test
or
jle
out
maxps
test
test
clc
movs
adc
bound
xchg
pop
mov
je
lds
ins
shr
cmp
les
pusha
xor
add
lods
add
pop
clc
cmps
ror
mov
pop
cmp
xor
mov
les
sub
rcr
inc
mov
inc
mov
push
dec
lods
and
sti
test
sub
mov
sbb
xor
add
mov
adc
xchg
pusha
call
mov
cld
rcl
je
test
jb
jg
xchg
sub
jl
or
xchg
push
inc
push
je
jne
mov
mov
lods
sub
jbe
cdq
movs
inc
sub
mov
mov
mov
jo
cmp
pop
jle
xor
lods
mov
shl
jecxz
ror
lea
push
fs
outs
add
pop
add
mov
push
mov
dec
imul
pop
xor
rcr
dec
ret
adc
add
mov
and
loope
mov
mov
add
cmp
dec
jmp
popa
imul
xchg
jg
sbb
or
or
fidiv
mov
xor
inc
pop
or
ret
inc
leave
ret
mov
cmps
pop
jne
rcl
cmp
rcl
sbb
(bad)
mov
pop
out
cmps
push
sbb
shl
sub
dec
dec
and
inc
or
push
imul
sub
and
jmp
pop
jns
inc
sahf
push
adc
rcr
and
js
inc
pop
push
add
out
mov
ds
dec
outs
stos
aam
shl
outs
jg
adc
add
pop
mov
add
or
ins
sub
push
or
push
adc
sub
or
test
add
hlt
pop
ins
pusha
add
daa
and
cmps
push
ss
lock
cmp
movs
(bad)
or
mov
(bad)
xchg
or
mov
shr
jl
xor
add
or
inc
jne
jle
cs
add
sub
adc
pop
ins
jecxz
(bad)
call
leave
and
aaa
mov
mov
pop
push
push
and
sbb
xchg
ja
cmp
xchg
xchg
scas
dec
loop
mov
cmps
sar
sub
push
mov
cld
adc
inc
push
sahf
add
lds
pop
pop
mov
out
pop
push
and
(bad)
xor
mov
mov
or
(bad)
mov
sbb
mov
int3
or
shr
ins
bound
mov
arpl
loope
pop
test
push
imul
mov
jmp
popa
je
xchg
icebp
aaa
pushf
xor
ja
dec
mov
dec
enter
mov
popa
js
push
xor
pop
cmc
jnp
fiadd
add
sub
sbb
jl
dec
inc
cmp
mov
dec
rol
inc
adc
outs
mov
in
fmul
ret
xchg
push
je
cmp
cmps
out
pop
pop
push
dec
push
int
ins
mov
rcl
xchg
inc
mov
hlt
dec
repz
lock
les
fwait
mov
and
movs
fcomi
imul
aam
pop
data16
push
add
add
cmc
xor
jbe
int
pop
sub
pushf
fisub
dec
ficom
sti
out
jnp
or
mov
jle
clc
out
sbb
stc
cmp
xchg
ins
dec
sbb
inc
inc
inc
fidivr
loopne
es
inc
call
scas
neg
call
adc
ret
dec
mov
jp
stc
nop
xchg
aad
push
lods
pop
xor
sbb
shl
push
imul
fwait
or
inc
jp
mov
or
or
fcom
nop
lock
shl
pushf
dec
xor
mov
icebp
jno
inc
mov
ss
bound
or
call
adc
dec
in
mov
adc
out
fmul
or
mov
jae
sbb
mov
pop
fs
inc
movs
sbb
out
mov
das
mov
pop
imul
daa
pop
addr16
dec
into
mov
cmp
loope
int
xchg
or
sub
pop
aaa
jb
xor
sbb
data16
in
sub
cmp
or
push
cmp
add
push
xchg
or
cmp
inc
outs
mov
fst
jmp
jne
sbb
pusha
aaa
mov
nop
pop
mov
cmps
xchg
sahf
push
or
add
or
(bad)
cs
ret
or
add
sbb
or
addr16
adc
sbb
sub
sbb
sbb
and
xor
cmps
push
(bad)
sub
lock
lods
retf
push
or
adc
xor
or
pushf
test
imul
enter
scas
mov
arpl
fdivr
or
adc
call
cwde
adc
mov
ret
cdq
cmps
xor
scas
push
outs
adc
ds
cmp
add
sbb
sbb
pop
mov
or
pop
ds
sub
fcomp
(bad)
sahf
mov
or
mov
setne
inc
push
or
out
sub
iret
les
dec
push
loope
push
sbb
fild
xchg
sbb
push
jne
jns
sub
inc
mov
or
dec
xchg
inc
adc
dec
jae
push
push
push
dec
(bad)
ficomp
xchg
movs
mov
js
xchg
inc
in
neg
outs
add
or
mov
pop
rcr
jb
arpl
movs
cmp
cld
jmp
xchg
add
push
ror
sbb
ins
jnp
xlat
and
inc
pop
mov
mul
adc
add
dec
inc
and
inc
and
push
inc
add
push
loopne
jle
ds
inc
add
xchg
xchg
mov
inc
add
xchg
add
adc
push
inc
push
mov
inc
mul
pop
inc
mov
in
pop
dec
ins
outs
outs
pop
stc
sub
push
inc
aam
add
jns
inc
call
fldcw
es
ss
enter
dec
int3
mov
fidiv
pop
pop
cmp
jmp
push
pop
sbb
hlt
cmp
push
mov
call
add
add
add
jmp
sahf
sbb
and
sub
add
pop
shl
inc
div
jg
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
inc
push
push
jmp
jmp
icebp
jmp
in
int
int3
jmp
jns
jp
(bad)
or
jnp
mov
imul
enter
out
ds
repz
mov
jg
push
or
idiv
xor
adc
xchg
in
cmp
sti
push
sbb
push
xchg
ds
pop
lock
push
fcomp
push
hlt
xor
cwde
repnz
adc
stos
cmp
pusha
es
cld
ja
cmp
dec
mov
into
aam
push
push
pusha
in
jge
or
xchg
mov
nop
js
xchg
mov
mov
inc
les
jl
mov
add
loope
fwait
and
repnz
mov
and
xor
push
and
adc
cmp
and
loopne
enter
add
sbb
dec
sbb
rcr
pop
push
imul
aam
enter
(bad)
std
lods
iret
or
dec
cmovl
in
into
outs
jl
dec
pop
nop
push
pop
pusha
cmp
psadbw
loopne
pushf
xchg
inc
aas
adc
or
out
and
dec
xchg
in
xchg
mov
adc
pshufw
int3
popa
loopne
jo
test
adc
pop
aam
outs
arpl
mov
mov
add
jne
and
fst
ficom
(bad)
xor
dec
iretw
jnp
sub
pop
inc
jo
mov
xchg
aam
dec
test
and
adc
rcl
xchg
call
repz
dec
cmp
dec
dec
sahf
add
cvttps2pi
ins
add
or
pop
mov
xor
push
test
sub
sub
pop
add
jo
test
cmp
xchg
mov
or
add
xchg
das
in
dec
fs
sbb
or
push
jp
fdivr
inc
loopne
in
xor
call
fcomp
loope
xchg
in
push
(bad)
cli
and
push
add
adc
ja
hlt
ins
mov
mov
je
inc
fldenv
push
js
shl
jl
and
cmps
stos
add
and
std
and
push
push
jae
imul
cmps
xor
xchg
xor
mov
and
and
mov
stc
jmp
dec
and
pop
cmp
jne
push
bound
ficomp
and
jb
dec
and
ins
xor
pop
(bad)
pusha
jnp
inc
jbe
inc
mov
push
jb
movs
rcl
add
test
adc
xchg
jne
shl
ror
dec
sahf
cmps
loop
aas
test
push
mov
mov
das
(bad)
mov
fs
add
push
push
dec
test
les
mov
ins
mov
pop
push
sub
rcr
cdq
mov
jo
repz
in
cld
arpl
sub
loop
dec
pop
cwde
fwait
sub
imul
call
dec
add
sub
cmp
pop
xor
or
or
adc
cwde
out
bound
lock
das
push
push
add
pop
fnsave
pusha
call
ret
popa
xchg
push
cmps
retf
call
and
push
ins
jae
sub
add
mov
push
int
pop
outs
jo
jo
pop
pop
jb
xor
addr16
arpl
cmp
xchg
cmp
xor
fimul
xchg
(bad)
fisttp
mov
add
ss
cmp
pop
rcl
jo
cdq
int3
mov
xchg
aaa
cmps
(bad)
jae
repz
cld
cmp
in
or
inc
loop
cmp
xchg
cdq
or
push
and
fcomip
cmp
push
and
imul
or
add
xlat
test
sub
push
push
sub
xor
test
push
mov
mov
pop
ins
daa
sub
xchg
aam
dec
adc
pop
cmp
cmp
push
push
jmp
dec
xlat
test
test
fcom
aas
sbb
inc
cwde
cwde
push
inc
add
pusha
dec
out
mov
test
fcomp
dec
add
push
pop
inc
add
rcl
pop
push
aaa
add
scas
sar
rol
push
outs
pushf
xor
push
push
xchg
inc
jbe
nop
cmps
cmp
(bad)
fcomp
inc
inc
xchg
dec
add
mov
enter
popa
cmc
mov
pop
jbe
mov
fistp
inc
dec
pop
add
nop
cmps
dec
mov
xchg
gs
fcomp
cmps
sar
xchg
nop
or
push
dec
lock
popf
cmps
push
pop
xchg
cmp
leave
fstp
sbb
inc
mov
dec
pop
inc
sar
ror
or
and
fcom
bnd
or
jp
cld
and
add
test
inc
or
pop
rcr
and
dec
jnp
or
gs
outs
sbb
loopne
pusha
jo
push
lods
sti
jae
pop
repnz
call
enter
jo
pop
push
rcl
push
into
dec
and
scas
fxch
test
push
nop
xlat
sbb
xchg
loopne
loopne
mov
mov
aam
mov
loop
pop
enter
inc
shl
mov
add
popa
dec
inc
and
pop
enter
adc
push
dec
adc
push
mov
push
adc
in
sbb
add
add
out
cmp
dec
jbe
rcr
or
adc
enter
sahf
adc
cld
pop
data16
or
shl
lahf
std
cs
cmp
lock
sub
dec
or
rcl
pop
test
cmps
cmp
sub
pop
push
aas
test
add
retf
jmp
repnz
inc
mov
mov
mov
mov
dec
fiadd
push
mov
repz
pop
sbb
ja
or
out
cs
sub
ror
pop
pop
push
inc
mov
or
nop
test
add
dec
push
and
add
sahf
mov
fidiv
push
push
pop
scas
push
mov
out
pop
pushf
inc
and
inc
scas
inc
je
cmp
pop
arpl
(bad)
sysret
sbb
inc
test
jo
push
or
lds
pusha
out
inc
xchg
nop
fsub
inc
ss
scas
or
push
xor
mov
aam
xchg
test
inc
pop
push
mov
adc
(bad)
xor
mov
nop
addr16
dec
pop
mov
xor
inc
pmaxsw
inc
pop
and
sbb
mov
cmps
fwait
cmc
cmp
pop
or
je
and
or
addr16
js
push
pop
and
lea
mov
inc
xor
sbb
pop
xor
in
rcl
sahf
sub
dec
adc
(bad)
xor
rol
aad
aaa
ja
jl
cmp
push
call
sub
push
xlat
xchg
pop
test
jle
adc
xchg
(bad)
cld
fstp
imul
hlt
mov
je
inc
ret
xor
les
push
pusha
sbb
cld
mov
test
jp
test
inc
fisttp
adc
stc
mov
std
(bad)
leave
call
(bad)
not
loopne
out
pusha
or
sbb
adc
cmps
(bad)
call
jo
or
push
cmp
xor
ss
xchg
pop
sub
push
test
movs
in
outs
mov
cmp
mov
mov
(bad)
loopne
push
adc
ins
lods
or
adc
out
fistp
ret
mov
je
sbb
pop
and
sub
daa
jp
pop
sub
call
xchg
enter
xchg
(bad)
adc
add
mov
std
nop
pop
rcl
das
jge
add
repz
push
out
add
mov
mov
push
sub
adc
(bad)
cwde
rcr
and
int
cmp
xchg
xchg
sbb
cmp
addr16
test
sub
outs
mov
ret
test
push
add
or
adc
pop
sahf
retf
or
or
sub
adc
adc
and
in
mov
scas
jge
add
mov
inc
add
sbb
add
push
je
test
mov
aas
test
sbb
cs
adc
add
add
add
xchg
or
sub
lea
xor
int
ins
loopne
repz
inc
inc
add
sub
or
jmp
or
nop
dec
les
inc
loopne
add
test
push
push
(bad)
repnz
mov
inc
inc
or
dec
pop
and
cdq
mov
add
push
mov
pop
dec
mov
sar
add
mov
sbb
(bad)
mov
or
mov
push
mov
inc
cmp
mov
or
or
add
or
push
xchg
ss
ds
push
inc
add
add
hlt
pop
mov
xor
pop
cli
imul
sub
mov
sub
adc
clc
and
test
or
test
dec
ret
rcr
cwde
fadd
add
lahf
ja
sub
mov
push
or
push
bound
cmc
mov
push
mov
xlat
mov
adc
push
mov
jmp
sub
add
inc
aaa
inc
and
mov
jg
cmp
jne
ror
push
jb
hlt
mov
add
sbb
sub
xchg
cmp
test
push
hlt
sub
imul
xchg
inc
sahf
frndint
retf
add
cdq
inc
dec
dec
jecxz
js
mov
test
retf
pop
dec
jl
add
mov
sbb
sub
inc
outs
inc
(bad)
xor
dec
mov
rcr
cmp
sbb
popf
and
cmp
es
(bad)
neg
pop
jmp
sub
inc
pop
movs
dec
out
add
mov
xchg
add
adc
inc
test
lds
js
inc
fdivr
xor
mov
ins
inc
add
stos
inc
loop
lock
push
xchg
out
mov
mov
cs
adc
adc
add
mov
pusha
mov
xor
adc
fs
ds
add
pop
bound
(bad)
inc
mov
sub
test
jmp
arpl
je
dec
dec
adc
sbb
mov
dec
cli
jmp
adc
rol
mov
hlt
inc
nop
pop
std
and
mov
int
push
jnp
xor
movs
sub
fdivr
jmp
ins
push
cmps
jbe
inc
pusha
iret
(bad)
outs
or
sub
sub
rcl
xor
fmul
fnstcw
or
(bad)
aas
mov
dec
mov
pop
adc
jnp
mov
rol
sbb
jo
out
add
daa
push
fs
sbb
cmps
push
lahf
rcl
pop
adc
sub
sub
jecxz
imul
into
and
dec
or
gs
xor
cmp
push
and
out
div
jmp
inc
inc
or
ror
dec
hlt
out
ins
cmp
cs
or
sbb
or
retf
add
jp
and
fwait
lods
jns
add
in
sub
ins
or
mov
pop
sub
ins
cdq
sti
and
push
jmp
sub
fwait
retf
std
add
push
jmp
test
dec
adc
sub
and
loopne
dec
xor
gs
fsub
xchg
dec
mov
fcomp
ss
jmp
pusha
sub
mov
jmp
add
dec
out
cmp
xchg
dec
xchg
popf
sbb
daa
xchg
ror
mov
xor
and
adc
dec
inc
xor
jge
jl
js
pop
jle
push
dec
pop
ss
adc
out
fs
push
adc
shl
sbb
leave
inc
sub
mov
ins
mov
push
pop
pop
leave
pop
and
dec
inc
mov
push
and
int3
jne
adc
or
xlat
in
test
inc
mov
jp
inc
fidivr
cmps
pop
pop
aam
stos
and
or
je
out
sbb
sub
dec
sti
inc
sbb
adc
sub
(bad)
cwde
fldcw
nop
jmp
and
add
mov
xor
gs
ror
push
rcr
jle
fsubrp
push
test
mov
dec
ret
rcl
push
add
jmp
adc
ss
fidivr
je
pop
das
loopne
loop
mov
cmp
hlt
enter
retf
pop
mov
adc
mov
test
add
push
or
sbb
shl
mov
sti
pop
or
cmp
lds
xor
retf
add
xor
xor
adc
in
je
mov
outs
mov
and
mov
out
loop
adc
xor
scas
add
cmps
add
cmp
push
add
cmp
xor
pop
mov
cmc
add
or
xchg
jg
inc
xor
sbb
lea
and
pop
push
mov
sbb
jle
push
xor
inc
enter
cmp
test
cmp
xor
enter
aam
mov
scas
pop
shl
add
fcom
rcl
or
fisttp
and
mov
adc
lock
push
(bad)
and
push
mov
mov
push
mov
clc
sbb
or
jae
inc
fiadd
dec
pusha
loope
pop
jecxz
xchg
sub
idiv
or
push
jmp
fwait
inc
and
aas
or
push
mov
repnz
push
push
mov
mov
mov
adc
add
and
xchg
int3
in
rcl
dec
es
push
mov
add
sbb
push
mov
out
adc
or
push
xchg
and
bound
mov
cs
mov
xor
add
jne
mov
loopne
push
add
or
add
or
xchg
daa
push
int3
adc
and
or
or
push
inc
arpl
mov
fistp
shl
(bad)
pushf
and
sub
(bad)
out
or
enter
mov
or
rol
pop
ja
loope
or
dec
sub
sbb
jle
and
xor
sbb
or
jl
pop
es
mov
call
or
cmps
mov
mov
push
mov
inc
ds
fwait
cwde
out
fiadd
test
pusha
cmp
jg
sbb
pop
mov
and
aaa
daa
jo
clc
call
or
mov
sub
add
mov
mov
jle
ss
pop
cmp
sub
ins
data16
mov
sbb
cmp
inc
or
mov
sub
not
call
or
fiadd
jns
lods
adc
mov
cmp
pop
je
mov
sbb
inc
fisttp
sub
stos
outs
sub
and
loopne
or
xchg
push
push
cmp
pop
mov
and
or
pusha
test
sbb
test
test
jo
retf
inc
cmp
pop
mov
inc
mov
arpl
or
push
sub
sub
mov
xor
or
and
dec
mov
jns
icebp
push
inc
push
mov
movs
fwait
daa
out
call
popa
inc
xchg
je
test
and
cdq
push
jb
xor
loopne
cld
mov
pop
nop
xlat
and
or
rol
or
inc
add
or
(bad)
loopne
retf
je
je
push
sbb
add
sbb
data16
(bad)
adc
push
push
lea
push
sub
sbb
jle
les
(bad)
add
dec
mov
cmp
jge
sbb
out
sbb
fucomi
sahf
add
mov
push
fs
dec
mov
mov
in
imul
sbb
fdivr
xchg
retf
and
push
and
jns
test
pmaxub
inc
adc
ss
adc
repnz
leave
push
int
jne
stos
inc
fcomp
mov
push
push
mov
call
in
or
sbb
mov
dec
ret
push
mov
mov
(bad)
ss
sbb
xor
pop
mov
adc
and
out
mov
cwde
je
add
je
mov
push
outs
add
xchg
rcl
or
stos
mov
xlat
pop
std
inc
inc
push
rcl
add
add
out
adc
jne
sbb
or
mov
das
jp
not
pop
jns
or
leave
mov
cmp
cmp
fcom
pop
jb
mov
cli
jno
cwd
xor
xor
loope
sbb
fld
or
inc
mov
call
sub
fsubr
pusha
push
mov
lea
sub
push
xchg
rcl
push
mov
pop
add
dec
dec
inc
dec
pusha
fidiv
rcl
mov
cmps
cdq
inc
push
jb
or
ret
mov
push
xlat
(bad)
dec
add
or
jg
mov
mov
retf
dec
inc
pushf
and
mov
push
mov
dec
scas
ins
and
jnp
imul
inc
mov
mov
ret
icebp
in
jne
hlt
test
mov
add
or
and
dec
loopne
cmps
and
cmp
pushf
mov
into
lea
mov
and
test
lea
fsubr
imul
sbb
fs
outs
in
inc
jecxz
pop
or
in
scas
adc
inc
jns
jp
push
mov
icebp
test
shl
mov
mov
movs
fild
mov
ret
pop
js
call
adc
and
lods
cmp
xchg
int
cmp
clc
inc
xchg
cmp
cli
les
fiadd
xor
aaa
mov
and
inc
push
daa
or
mov
adc
adc
or
push
dec
dec
js
mov
push
cmp
jmp
cmp
jnp
loopne
sub
sub
add
add
xor
inc
cmp
int
test
pushf
ss
es
adc
imul
adc
pop
push
in
inc
mov
js
add
fcomp
push
mov
movs
mov
and
shr
lods
in
push
pop
outs
add
test
sbb
pop
push
jl
out
xchg
push
dec
aam
mov
xor
and
sbb
or
pop
jl
add
adc
fist
or
or
mov
pminsw
xchg
fdivr
inc
dec
inc
sbb
inc
pop
sub
jmp
jns
mov
inc
adc
mov
add
jns
sbb
pop
icebp
dec
xor
push
add
push
push
push
(bad)
nop
or
inc
dec
mov
fbld
add
mov
or
jne
pop
mov
adc
mov
push
fmul
shr
div
xchg
retf
fiadd
fdivr
push
in
pop
jb
mov
loope
aas
jo
lds
and
sbb
scas
test
mov
gs
popa
(bad)
push
gs
enter
sub
sbb
inc
add
push
sub
fidivr
sub
aaa
xchg
jnp
jmp
inc
ins
dec
jp
jle
jne
stos
mov
dec
mov
hlt
fs
pop
push
jl
xor
scas
xchg
mul
(bad)
call
in
jmp
cmp
movs
jbe
and
sub
xor
cmp
xchg
adc
pusha
call
arpl
cmps
jle
mov
push
dec
jb
jo
(bad)
add
stc
xor
jle
and
sbb
pop
mov
stc
pop
jo
dec
not
mov
je
adc
fdiv
cmp
je
daa
push
pop
and
pop
fst
jo
in
pop
bound
jecxz
sbb
inc
and
xchg
adc
pop
inc
xchg
repz
adc
mov
enter
sub
mov
repz
sahf
repnz
jnp
push
adc
xor
aad
pop
or
enter
je
inc
jae
cmp
add
xor
(bad)
push
inc
mov
ins
movs
push
aas
inc
mov
sub
sub
mov
jle
jno
sub
mov
dec
fisub
add
mov
cmp
sbb
fucom
popa
add
mov
test
or
push
loope
xchg
pushw
xchg
jno
dec
pop
xchg
mov
data16
sbb
js
xor
xchg
sbb
adc
mov
aad
pcmpgtd
and
xor
repnz
dec
adc
xor
test
sbb
lock
or
jo
mov
ja
rol
leave
imul
push
push
xor
lock
fs
inc
es
xor
sub
sbb
push
frstor
inc
les
jmp
call
sub
and
pop
fisttp
cmp
adc
cld
lahf
ss
leave
push
fistp
adc
aas
cmp
addr16
push
xor
or
mov
push
adc
dec
lods
sbb
dec
push
jl
inc
shl
fcmovb
cwde
xchg
cmp
jno
dec
fwait
in
outs
sbb
push
js
outs
adc
xor
push
add
add
push
shl
or
push
jo
add
ret
es
adc
sbb
nop
retf
sub
ret
add
pusha
mov
push
ds
xor
int3
enter
mov
sub
xlat
push
test
in
inc
jbe
push
cmp
sahf
out
mov
lods
test
cmp
dec
xor
sub
add
adc
imul
in
add
push
mov
nop
enter
sti
cmps
pusha
mov
int3
test
(bad)
xor
sbb
iret
mov
mov
mov
movs
or
dec
xchg
icebp
js
cs
dec
clc
jne
add
dec
xchg
adc
mov
in
pop
(bad)
lock
pop
mov
add
(bad)
scas
rcr
mov
adc
cmp
(bad)
adc
pop
adc
sub
jge
js
sbb
mov
arpl
jmp
mov
cmp
rcl
inc
addr16
dec
enter
movs
dec
ss
(bad)
sbb
pusha
je
cmp
aam
cmps
add
ret
loope
clc
pop
leave
pop
push
or
xchg
fisub
outs
ds
call
int
push
scas
lea
mov
mov
jle
test
inc
mov
jmp
and
les
cmp
test
(bad)
xor
call
sbb
ins
push
pop
pop
and
xchg
test
call
xchg
pop
dec
pusha
pop
inc
jb
mov
add
mov
add
into
push
js
and
xchg
xor
cdq
add
add
mov
adc
sub
pop
xchg
pop
and
mov
add
inc
jg
je
and
ret
jb
or
or
cmp
cmps
sub
mov
mov
dec
je
daa
cmp
jne
movs
(bad)
cmp
jne
sbb
test
mov
add
sub
inc
daa
mov
cwde
iret
je
and
or
inc
xor
cmps
pop
xchg
push
js
dec
sub
mov
and
jbe
inc
dec
clc
and
lods
test
push
xchg
lahf
daa
sub
pop
inc
adc
inc
test
cmp
add
adc
in
add
dec
sbb
inc
bound
lea
inc
pop
add
lea
movs
sub
sar
and
sar
mov
dec
jnp
push
pop
add
cmp
or
mov
and
movs
or
pop
dec
test
pop
pop
pop
adc
dec
jns
sbb
clc
ins
or
cmp
cmp
mov
jbe
xor
jmp
push
aam
pop
xchg
mov
and
add
cmp
and
imul
lock
push
mov
and
sbb
hlt
nop
add
je
sbb
out
arpl
stos
es
pop
adc
pop
sub
or
lock
inc
xor
adc
push
or
outs
or
or
leave
xor
dec
pop
adc
or
loope
pop
inc
or
pop
lock
cmp
add
and
and
or
cmp
or
sbb
lahf
adc
(bad)
adc
inc
ss
jbe
sbb
je
scas
jne
dec
jne
xlat
xchg
cmps
pop
movs
test
dec
frstor
(bad)
sub
cmp
pop
sar
jg
mov
cmovs
ss
fisubr
inc
out
inc
loope
shl
adc
xor
es
jecxz
or
dec
jl
or
jge
lea
or
jle
pop
cs
(bad)
icebp
adc
rol
popf
cmps
test
sar
and
dec
inc
sti
ss
movs
add
jo
test
mov
add
lea
cmp
dec
sub
mov
mov
(bad)
in
loope
and
leave
movs
dec
sbb
aam
(bad)
or
add
clc
sub
jb
pop
inc
xchg
push
inc
loopne
sahf
mov
movs
shl
mov
jg
dec
dec
test
fst
push
loopne
popf
jnp
xor
les
fsubr
adc
add
sti
in
pop
icebp
(bad)
pop
imul
and
test
add
or
xchg
push
adc
add
retf
pop
outs
loop
cmp
loopne
xor
push
popa
not
adc
pushf
ja
jle
retf
cmp
das
cmp
lds
mov
or
mov
scas
push
dec
push
imul
pop
jno
mov
jmp
inc
push
pop
(bad)
push
das
js
call
pop
cmps
(bad)
cmp
outs
in
jne
push
pop
lds
popa
cmp
test
xchg
jne
and
mov
mov
xchg
or
pop
mov
adc
dec
enter
inc
fild
sbb
adc
daa
add
mov
mov
mov
xchg
dec
cmp
xor
test
test
inc
or
mov
xor
adc
les
adc
not
jb
xor
xor
mov
xchg
sub
xor
xchg
movs
fwait
test
push
mov
sub
iret
jmp
sbb
ja
je
daa
mov
mov
jo
mov
movs
and
dec
rcr
push
pop
lahf
xlat
cmp
cmp
xor
aas
dec
(bad)
jo
aaa
cmp
add
add
cmp
es
add
(bad)
xchg
(bad)
out
mov
xchg
xor
or
xor
data16
add
mov
sub
dec
cs
pop
cs
push
jmp
dec
cmp
or
adc
inc
cmp
mov
out
add
stc
push
addr16
sbb
lods
(bad)
repnz
push
pop
adc
js
push
out
fld
mov
mov
retf
sub
cmp
adc
jp
mov
dec
xchg
and
pop
jmp
mov
and
mov
add
clc
mov
inc
pop
ja
pop
shl
push
and
test
test
jp
idiv
sahf
das
ins
shr
cmp
out
add
cwde
push
arpl
dec
add
enter
add
scas
lods
cld
inc
cmp
rcl
rcr
cmp
mov
ret
enter
cmp
adc
mov
xchg
out
mov
xchg
add
cli
in
(bad)
cli
inc
nop
pop
xchg
ret
push
push
push
push
mov
mov
inc
test
mov
mov
out
in
mov
fs
adc
je
push
inc
cmp
xchg
push
add
push
in
(bad)
mov
lods
inc
dec
dec
shl
cld
popa
js
sbb
popf
cmp
fld
fdiv
sar
push
rcl
inc
sar
lock
push
lds
dec
jne
jmp
xor
push
sbb
inc
adc
ret
je
enter
js
jne
push
cmps
movs
aam
iret
and
mov
std
or
pop
or
jle
lea
push
in
bound
jno
ret
sub
mov
clc
je
cmp
mov
cmp
jmp
int
cmp
cmps
iret
(bad)
sub
imul
aaa
(bad)
adc
popf
mov
lds
pop
add
movs
jns
addr16
lock
or
xor
mov
jmp
loope
jbe
cmp
jl
(bad)
into
cmp
loope
mov
iret
nop
shl
inc
and
or
(bad)
mov
push
dec
mov
push
inc
and
mov
inc
xor
sbb
cmp
or
push
jl
out
inc
sar
or
or
paddq
pop
jg
xor
or
mov
sub
sub
sub
jne
call
test
je
inc
jo
daa
mov
xlat
add
push
cmp
arpl
sbb
or
inc
loop
xchg
jmp
push
scas
jl
sub
mov
fs
cli
pop
and
xor
adc
jns
cmps
in
retf
or
shl
xor
bound
popa
jmp
mov
dec
adc
mov
cmps
add
fld
cmp
outs
and
out
push
mov
cmp
cmp
cwde
xor
enter
fidivr
scas
add
movs
mov
fwait
outs
inc
js
adc
jae
jne
jno
push
push
imul
ins
cwde
dec
jmp
mov
sub
add
jp
push
imul
paddsw
or
sub
xor
pop
add
push
cmp
mov
and
add
sbb
push
inc
aad
pop
data16
push
sti
outs
adc
push
sti
cmp
ret
push
add
gs
pusha
xor
and
push
xlat
es
add
xchg
add
sub
mov
sub
jmp
add
cmps
sub
and
xor
mov
mov
dec
shl
dec
mov
mov
xor
pop
jo
add
cmp
add
dec
sbb
inc
add
add
aad
mov
push
xor
test
cmp
lods
xchg
cmp
mov
inc
push
data16
cld
mov
jne
test
adc
or
iret
aas
pop
dec
mov
sub
sbb
lahf
sub
aas
mov
lods
sbb
add
nop
pusha
pusha
sub
test
pop
dec
and
xchg
cmp
ins
push
sub
add
adc
psrld
xchg
ins
jmp
sbb
int
cdq
jne
and
jne
adc
add
and
jmp
retf
sahf
movs
or
xor
add
hlt
fs
lea
xor
fisttp
inc
loopne
sti
mov
mov
inc
ret
and
fdiv
sub
add
add
xchg
pusha
xchg
ins
push
inc
loop
inc
or
data16
aad
mov
pop
sub
add
jmp
stos
and
adc
sbb
retf
out
jmp
(bad)
aas
add
push
or
lds
sbb
jecxz
mov
in
test
sub
xlat
cmp
xor
sub
cmp
es
jmp
repnz
jl
test
add
popf
jmp
xchg
mov
out
and
mov
mov
pop
(bad)
les
push
es
mov
or
xor
mov
inc
les
push
and
pushf
outs
adc
mov
hlt
popf
mov
push
push
jle
rol
in
movs
or
ret
shl
xor
ins
not
test
pop
cmp
loopne
cmp
icebp
adc
imul
dec
es
or
or
and
out
stos
aas
and
adc
mov
call
fsubp
push
mov
mov
mov
inc
dec
mov
cmovae
pop
cmps
imul
or
adc
call
hlt
add
fwait
ror
push
movs
fst
and
sti
pop
ja
or
inc
jmp
or
push
cli
mov
ins
pop
and
sub
xor
ds
out
push
mov
popf
fdiv
dec
inc
scas
and
je
mov
push
adc
jge
int
mov
push
pop
inc
cmp
jne
inc
ins
sub
test
mov
inc
(bad)
sbb
pop
loopne
aam
mov
adc
stos
mov
sbb
xor
mov
inc
inc
cmp
je
lock
cmp
adc
push
bound
xor
mov
js
mov
mov
iret
or
lods
fcmovb
adc
mov
mov
jb
ins
or
add
test
xchg
and
ffreep
pop
or
popf
popf
inc
xor
mov
outs
retf
neg
fs
test
movs
mov
(bad)
add
sub
jne
jge
inc
cmp
push
xchg
test
mov
clc
cmp
adc
sub
pushf
test
pop
sbb
and
leave
in
pusha
and
sub
mov
dec
jmp
and
movs
ins
sub
inc
pusha
push
add
aam
push
or
jne
push
sbb
mov
jne
js
push
(bad)
jb
dec
pop
adc
cld
lock
aaa
and
int3
jo
lds
sub
js
stos
ins
out
dec
add
pop
jl
push
mov
mov
call
jmp
fimul
fstp
dec
adc
sbb
pop
lock
mov
lods
inc
adc
mov
scas
mov
sbb
nop
add
sar
cmp
add
dec
sbb
jne
cwde
shr
xor
fist
(bad)
out
int3
jbe
mov
cmp
mov
jl
imul
pop
push
(bad)
sbb
sub
cmp
and
pop
inc
sub
lods
mov
push
push
jb
sbb
adc
xchg
cmp
outs
nop
and
or
mov
js
push
ds
jbe
cdq
sbb
xchg
or
js
cmp
cmp
retf
mov
cmp
fistp
cmc
sbb
pop
sbb
sub
adc
hlt
adc
stos
xor
mov
lock
sbb
xchg
dec
push
cmc
sahf
mov
add
ror
sbb
(bad)
push
loop
arpl
jo
lock
rcr
sub
push
imul
dec
dec
lods
lahf
jge
je
cmp
je
ja
mov
cmp
das
cmp
stos
ins
sbb
xchg
dec
jns
mov
movs
vandps
add
adc
adc
push
add
addr16
jb
and
push
pop
inc
ficomp
aam
sub
push
cs
mov
push
in
and
add
sbb
jbe
push
xchg
push
mov
outs
retf
cmp
dec
dec
loope
mov
pop
mov
mov
cmps
xor
mov
mov
mov
adc
stos
jo
test
fcmovu
fcomp
and
js
aaa
clc
or
or
and
sub
push
push
sti
ror
lods
xchg
(bad)
outs
loop
data16
xor
mov
mov
in
dec
add
sub
ins
cmps
add
cmps
dec
inc
lds
dec
dec
mov
cmps
or
mov
jmp
lock
xchg
jno
and
mov
call
mov
out
jge
push
cmp
jmp
ds
pop
xor
pop
ror
stos
push
gs
mov
pop
aaa
mov
push
mov
mov
sub
jne
jmp
push
sbb
sti
cmp
dec
jmp
inc
hlt
in
test
pop
(bad)
dec
popf
xor
icebp
das
adc
adc
lods
scas
inc
cmp
retf
aam
nop
inc
adc
or
mov
adc
cmp
mov
mov
jno
or
das
xchg
push
and
(bad)
xchg
scas
xor
test
add
test
cmp
loop
ja
mov
les
icebp
(bad)
xchg
cmp
xchg
clc
sub
sbb
push
sbb
inc
mov
fwait
push
or
jmp
dec
add
push
outs
jne
aaa
add
xor
in
push
jnp
jb
dec
mov
arpl
xchg
push
mov
adc
push
mov
adc
jne
fwait
add
mov
push
adc
add
xchg
mov
ins
jb
push
pusha
call
sbb
and
out
cli
dec
cwde
mov
push
push
and
inc
adc
je
adc
jo
in
xchg
sub
mov
dec
inc
xor
inc
jo
(bad)
fbstp
mov
aam
add
mov
sbb
fadd
daa
or
or
mov
pusha
push
sbb
xor
mov
enter
cmps
clc
ds
jge
sub
xor
jp
dec
sub
js
inc
and
push
jp
sub
movzx
aam
or
adc
add
inc
or
test
loopne
xchg
fld
iret
aam
sbb
pop
and
inc
mov
sub
rcr
aad
add
js
test
or
cmp
mov
(bad)
es
push
push
mov
cmp
scas
push
mov
movs
cwde
clc
cmp
loopne
or
in
sbb
sub
mov
push
mov
adc
push
or
nop
jp
push
es
add
fwait
and
pop
dec
sbb
add
(bad)
mov
and
sbb
popa
js
(bad)
inc
inc
arpl
out
movs
ins
push
xchg
mov
paddusb
or
sbb
jno
jno
dec
cmps
call
or
popw
adc
mul
or
or
outs
mov
dec
movs
dec
jmp
pop
into
mov
fldenv
xor
jecxz
push
nop
adc
jmp
cmp
outs
jmp
and
clc
sbb
daa
cmp
cmp
push
pushf
iret
inc
ror
je
aaa
push
and
push
nop
sbb
adc
shl
je
mov
ret
(bad)
sub
es
add
sbb
neg
push
xchg
jl
(bad)
mov
fild
retf
inc
cmp
or
dec
cmp
leave
outs
js
rol
lods
push
add
dec
fwait
lock
xor
push
add
or
scas
mov
mov
imul
adc
(bad)
xor
sbb
and
out
pop
push
stos
lds
and
test
mov
push
frstor
and
pop
nop
sbb
cs
fidivr
sbb
fcomp
xor
or
jo
mov
data16
sbb
ins
push
cmc
push
ins
clc
(bad)
idiv
les
fsub
and
adc
fcomp
movs
lock
jns
adc
rcl
lock
cmp
sub
mov
pop
ins
mov
sub
and
cdq
(bad)
test
or
add
xor
jb
inc
imul
xchg
pusha
mov
sbb
fsubr
adc
sub
in
add
mov
lea
shl
sahf
mov
cmp
xchg
or
std
imul
add
mov
push
fs
cmps
sub
or
inc
and
inc
ins
rol
and
sbb
sbb
inc
xchg
adc
stos
jno
jne
push
sub
inc
call
sub
mov
ins
(bad)
xor
scas
fcom
hlt
adc
cmp
xchg
cmp
inc
or
jge
ss
in
rcl
popa
pop
cmps
and
mov
out
jg
jb
pop
aas
loopne
lock
and
mov
and
loopne
mov
nop
add
jge
(bad)
mov
xchg
mov
test
lods
(bad)
jmp
jl
or
movs
add
(bad)
das
test
jmp
retf
pop
xchg
in
jl
sub
mov
xor
add
cmp
cmps
cdq
call
mov
sub
(bad)
leave
jmp
sbb
xchg
imul
in
mov
or
shl
add
jge
mov
lds
and
sbb
clc
jg
and
movs
xchg
std
add
in
cmp
add
mov
xchg
add
mov
sbb
xchg
xor
pop
push
ins
or
int3
mov
imul
test
sar
cwde
xor
sbb
rol
aaa
movs
in
inc
dec
int3
push
jmp
addr16
xor
add
adc
mov
bound
shl
mov
inc
dec
push
or
lock
xchg
test
js
and
sub
mov
ja
inc
scas
ret
mov
cli
fimul
or
pop
shl
jo
jmp
jne
movs
push
es
add
adc
xchg
add
dec
pop
cmp
add
leave
mov
adc
lds
cmp
inc
popf
inc
xor
jge
xchg
mov
(bad)
adc
adc
ss
push
and
cmc
or
sub
push
(bad)
out
ss
sub
adc
xor
das
movs
sbb
add
or
and
jp
mov
mov
in
aaa
in
mov
add
inc
scas
sbb
(bad)
or
ins
in
or
fst
dec
lds
inc
cli
les
loope
pop
push
retf
dec
adc
pop
fwait
pop
and
jne
and
ret
cdq
mov
cmp
js
movs
push
and
ja
or
sub
cmp
in
mov
and
cmp
ror
dec
jmp
sub
inc
push
mov
aam
add
cmp
xchg
inc
lds
xchg
lods
ss
ja
fs
jle
push
loope
(bad)
mov
inc
inc
push
lods
fwait
sbb
sbb
push
scas
adc
cmc
cmp
push
rcl
stc
or
sahf
jecxz
out
push
lahf
or
cmp
jg
dec
mov
jnp
xchg
pop
test
adc
lock
or
pusha
add
xor
sub
aam
mov
or
sub
mov
daa
mov
jmp
sbb
aas
push
dec
inc
and
jge
shl
jmp
adc
xor
add
and
arpl
inc
out
jle
dec
mov
sbb
add
mov
pushf
mov
scas
cmp
scas
adc
adc
jno
and
and
and
hlt
add
cmp
pusha
leave
xchg
xchg
sub
les
and
pop
aaa
jg
mov
or
add
lea
add
retf
jo
xor
jg
mov
mov
pop
lea
add
movs
notrack
mov
repnz
pop
ja
loopne
dec
nop
adc
loope
push
jp
sbb
add
je
or
pop
sub
mov
and
loopne
mov
mov
or
sbb
sbb
sub
mov
in
adc
test
mov
js
ins
int3
inc
popw
out
xor
movs
(bad)
aad
call
add
xchg
dec
gs
je
add
sahf
mov
out
or
int3
sub
lods
dec
jecxz
popf
add
adc
mov
pushf
add
stos
out
jae
mov
dec
or
pop
(bad)
movs
jo
daa
dec
push
cdq
add
stc
fld
mov
mov
(bad)
ins
jo
cmp
cmps
les
sbb
lods
dec
add
and
test
or
addr16
das
inc
mov
rcl
fs
mov
inc
adc
xchg
mov
and
cmp
lock
jno
and
inc
idiv
inc
lock
out
and
nop
nop
imul
arpl
pop
cmp
lods
push
out
pop
cli
xor
xor
mov
addr16
dec
push
mov
and
adc
mov
int
dec
fadd
push
scas
loope
xor
ss
lea
es
adc
mov
sar
and
add
nop
xlat
xor
ds
ins
inc
sar
fld
je
push
pusha
cmp
cmc
cwde
pushf
ret
xchg
or
add
nop
das
jne
loope
loop
nop
dec
(bad)
test
(bad)
cld
mov
repz
cmp
fistp
xor
pop
or
pop
dec
jl
pop
push
adc
sub
xchg
adc
pushf
loopne
cmp
ret
in
mov
mov
test
enter
xor
fisub
sbb
push
test
or
out
jb
lods
dec
push
inc
xor
add
add
pop
lock
stc
sbb
cmp
or
sub
cmp
je
adc
popf
repnz
inc
(bad)
mov
imul
ret
mov
dec
dec
test
xor
ret
jnp
pop
jb
and
push
out
jne
add
or
mov
ret
xlat
rcl
daa
adc
sbb
test
xchg
fist
js
adc
and
cld
adc
add
inc
mov
fnsave
inc
or
or
adc
scas
mov
enter
mov
add
into
mov
xchg
pop
or
add
pop
test
orps
js
add
data16
bound
ins
inc
add
loope
repz
adc
xchg
in
call
out
movs
inc
sbb
mov
add
nop
aam
cmp
mov
in
ret
es
sti
nop
xchg
loope
cmp
in
push
inc
dec
cs
shl
aas
je
call
xchg
mov
dec
adc
addr16
cwde
les
loopne
dec
mov
add
or
adc
in
mov
jge
sub
mov
adc
stos
jae
loop
or
lods
jl
lea
enter
or
mov
push
push
popf
mov
mov
push
inc
push
ror
daa
mov
jno
outs
add
ror
pop
sti
mov
xor
(bad)
fiadd
sbb
jl
sbb
sbb
add
aaa
ret
jo
push
movs
adc
fcmovnb
dec
aas
popa
nop
loopne
mov
or
test
cmc
dec
rol
stos
(bad)
es
xor
imul
xchg
push
adc
rcr
int3
or
(bad)
fdivr
aas
push
lea
std
xor
mov
xchg
add
push
sub
pop
jmp
sahf
nop
mov
cs
scas
push
mov
jge
je
xor
jle
inc
test
xor
mov
rol
and
ds
pop
imul
jmp
cmps
lock
ss
and
cmp
mov
add
mov
fistp
cmps
mov
mov
int3
adc
adc
mov
xor
mov
cdq
inc
push
pusha
and
cmp
jle
pop
or
push
sub
loop
push
push
and
jmp
sbb
cld
cld
fs
or
add
push
in
xchg
cld
cld
xchg
sbb
dec
pop
loope
push
add
mov
xlat
out
inc
push
adc
imul
inc
in
movs
int
sbb
push
push
push
adc
mov
jno
push
pop
mov
adc
das
xchg
fidivr
arpl
addr16
cmps
vmovaps
sub
inc
mov
and
xor
xchg
(bad)
inc
(bad)
mov
cdq
push
mov
pop
adc
push
add
fwait
inc
xor
mov
xor
sbb
pushf
sbb
mov
or
test
sbb
dec
enter
push
mov
cmc
es
loopne
xchg
xor
cdq
ret
cmp
ja
mov
aaa
scas
lahf
int3
fmul
test
mov
mov
mov
xor
out
or
adc
push
xor
test
(bad)
pushf
pushf
pushf
pushf
dec
xor
dec
adc
pop
cmp
cwde
pop
inc
jle
pop
mov
and
lds
or
xchg
pop
(bad)
sbb
or
test
or
sub
rcr
push
fcmovnb
(bad)
in
dec
cmps
pop
dec
dec
dec
test
(bad)
xor
mov
add
or
push
push
xchg
dec
jnp
fistp
inc
ins
and
lods
dec
call
pop
and
and
pop
jbe
neg
mov
enter
fisubr
xchg
movs
add
inc
fs
xor
push
jo
xchg
push
pop
in
fwait
and
adc
xor
sbb
mov
sbb
dec
ss
jne
lds
jae
test
mov
jne
enter
pop
xchg
sub
cmps
sbb
pusha
mov
ins
pop
mov
and
or
jle
mov
inc
and
cmp
sbb
pop
or
jo
ja
je
adc
jne
out
mov
icebp
xchg
lahf
pop
pop
cmp
rcr
xchg
clc
or
jmp
fcomp
push
(bad)
adc
xor
or
pop
sub
fisub
sub
push
dec
mul
pop
jg
jo
cmp
or
clc
sbb
mov
es
rcr
mov
fcom
sub
inc
inc
xor
les
call
fnsave
daa
xor
aad
fld
xor
add
xor
add
jo
push
dec
test
xor
cld
mov
mov
lea
mov
adc
aaa
shl
enter
xchg
mov
mov
pop
loopne
rcr
loope
jmp
into
xchg
scas
loopne
adc
jnp
ret
call
inc
in
std
adc
sbb
xor
pop
cmp
movs
cmp
jne
adc
adc
jno
and
std
shr
in
mov
inc
jmp
mov
sbb
std
jae
fsub
pop
xor
push
jb
cmps
nop
cmp
sbb
pop
jge
test
pop
gs
push
push
inc
mov
outs
adc
and
int3
mov
pop
push
js
ins
sbb
imul
adc
scas
jmp
sbb
(bad)
pushf
in
fmul
mov
pop
jl
cmps
mov
jne
cmp
(bad)
std
mov
rol
adc
pop
sbb
adc
xor
mov
int
dec
call
add
cmp
jne
shr
mov
sub
pusha
adc
pusha
mov
rcl
mov
rcl
mov
(bad)
push
fsubr
pop
push
mul
call
lds
inc
jmp
call
inc
call
aas
or
or
stos
jle
or
jns
jp
and
inc
movsx
xchg
and
jo
inc
dec
inc
jmp
and
aaa
int
sub
aaa
das
push
mov
add
dec
or
leave
push
adc
ret
push
push
push
test
mov
sbb
sbb
cmc
ja
sbb
adc
loopne
in
sub
test
imul
shl
sub
xor
dec
call
sub
and
ss
cmp
dec
inc
cmp
cmps
shl
fidiv
pop
popf
sub
rol
push
push
add
adc
mov
jmp
dec
dec
imul
lods
jg
ror
push
test
sbb
xchg
pop
ret
jp
xchg
popa
xor
mov
addr16
(bad)
dec
test
and
add
pop
inc
dec
push
inc
cmp
setg
mov
std
dec
push
inc
add
mov
add
cmp
setl
shl
adc
pop
jb
dec
inc
dec
loop
and
mov
cwde
cdq
push
jbe
(bad)
sub
aam
enter
add
or
ins
push
xchg
aam
push
jl
dec
jno
jl
rol
push
or
jmp
movs
ds
pop
inc
(bad)
and
lock
push
cmps
inc
test
aaa
mov
mov
dec
or
push
and
popa
pop
mov
cmp
sub
jne
mov
or
pop
sbb
xor
pop
movs
fisubr
sub
push
into
push
cmp
shl
add
lock
sub
test
mov
outs
(bad)
push
dec
cmp
mov
adc
ja
clc
add
loop
push
sbb
cmp
push
ret
cmp
clc
pop
push
ins
mov
or
xor
lock
or
es
sub
pop
add
sbb
lods
(bad)
imul
test
pop
loop
mov
shl
es
rol
lea
sub
and
(bad)
mov
cmp
pusha
adc
fwait
and
pop
imul
ds
jne
xchg
jmp
sbb
sti
lea
repnz
mov
pop
rcl
out
mov
ret
pop
hlt
pusha
mov
shl
inc
sar
test
sbb
ret
adc
sbb
mov
mov
cmp
outs
cli
dec
jne
sub
sbb
movs
outs
mov
cwde
outs
xchg
rcr
sub
pop
jo
lahf
mov
rcl
inc
or
xchg
pop
test
sub
pop
push
add
lods
dec
xchg
lods
inc
add
ins
mov
shl
dec
(bad)
xchg
jae
xchg
test
mov
push
xchg
jo
adc
sbb
add
mov
test
movs
mov
test
jg
in
pop
push
jo
jge
mov
jmp
sbb
xor
dec
inc
sbb
test
nop
in
jns
push
stc
out
fcomp
xchg
mov
and
cmp
xchg
mov
sub
mov
adc
popf
dec
jb
or
dec
xor
ret
pop
dec
cmp
jmp
mov
add
sub
mov
sub
add
sbb
adc
ins
adc
sbb
adc
cmps
dec
das
xlat
mov
test
mov
and
push
add
sbb
into
or
cmp
inc
fwait
cli
pop
gs
add
int3
push
mov
loop
xchg
cmp
int
lahf
rcl
lea
push
sub
(bad)
into
aam
cwde
xor
sbb
movlps
sqrtps
movs
(bad)
pop
sbb
mov
pop
adc
push
jbe
cmp
out
loope
mov
call
dec
add
icebp
repnz
sbb
xchg
mov
add
xchg
gs
cmp
leave
je
pop
add
jb
xor
push
rdtsc
xor
add
or
rcr
loopne
xor
adc
stos
lock
or
leave
or
xchg
pop
or
xor
es
cmp
in
sub
mov
test
dec
xor
(bad)
or
cmps
pop
sbb
push
push
popa
fstp
cmc
and
sub
mov
pop
movs
push
popa
mov
hlt
jb
int
jp
pop
jne
pop
jmp
icebp
in
sbb
push
sbb
daa
mov
and
add
fsub
test
ror
adc
mov
aas
adc
mov
xor
je
or
or
mov
mov
jo
xchg
push
mov
lods
cmp
xlat
add
add
add
int
adc
inc
cmp
arpl
shl
or
and
call
lea
daa
cmp
adc
out
mov
mov
sti
or
and
stc
add
add
mov
add
repnz
add
pop
pop
scas
aam
jae
sahf
adc
adc
jle
les
and
xchg
lock
ss
push
bound
inc
gs
xor
cdq
mov
fisubr
clc
xchg
jne
pop
or
or
lods
inc
mov
sbb
sbb
dec
leave
loopne
cmp
inc
scas
out
mov
popf
out
pop
sbb
jmp
push
add
mov
inc
mov
add
cld
add
cmp
div
cmp
je
rcr
loopne
sub
jle
or
ror
push
scas
dec
xchg
xor
fs
jecxz
and
sub
(bad)
sbb
xchg
nop
(bad)
jns
jge
dec
push
data16
jo
inc
inc
mov
push
mov
in
xchg
test
jp
fsub
xchg
push
pushw
stc
das
sbb
aam
jmp
xchg
push
icebp
cs
jecxz
jb
pop
cmps
lods
jo
sbb
sub
fs
pop
adc
into
movs
call
or
sub
stos
jo
fdiv
repnz
inc
push
shl
mov
nop
ja
xor
add
cmp
and
inc
xlat
mov
rol
out
mov
dec
les
cmp
out
push
push
dec
xchg
sbb
sbb
push
or
or
push
inc
push
cmps
je
dec
add
push
(bad)
lahf
fisttp
dec
sub
imul
cmc
test
mov
xchg
test
je
das
add
inc
push
push
test
jmp
cli
adc
nop
jge
rcl
add
xor
pop
loop
xor
fcom
je
add
xchg
or
push
adc
and
arpl
lahf
jne
pusha
je
cs
add
push
inc
pop
adc
push
adc
(bad)
adc
and
pop
cmp
mov
sub
add
(bad)
(bad)
inc
mov
xor
aad
push
cmovns
add
scas
jae
in
mov
imul
nop
retf
and
jmp
aaa
mov
xlat
pusha
enter
je
and
inc
lock
mov
jne
test
sub
mov
fsubr
test
sbb
(bad)
(bad)
xor
mov
xor
add
jecxz
mov
inc
nop
clc
sbb
into
sbb
lock
dec
pmullw
sub
jmp
push
mov
jne
cdq
and
retf
mov
add
push
cmp
jb
adc
sbb
shl
xor
jnp
add
add
or
and
add
adc
add
movs
adc
je
mov
data16
dec
mov
xor
shr
cmp
jo
mov
shr
nop
pop
fsubr
mov
and
ss
mov
xor
call
or
ret
lock
jmp
(bad)
xor
mov
sbb
jmp
inc
(bad)
fldcw
jle
push
jg
adc
add
push
jle
mov
push
adc
test
test
mov
pop
bound
aas
xchg
jp
daa
mov
outs
addr16
bnd
sbb
imul
inc
add
imul
aaa
cmp
adc
sbb
imul
sub
test
jb
sub
jns
js
add
add
add
and
ins
xchg
out
sbb
add
xchg
sbb
push
shl
and
pop
stos
sub
or
mov
or
stos
mov
sbb
push
and
pop
xor
imul
dec
pop
imul
jp
pop
jg
(bad)
sbb
test
add
and
add
(bad)
addr16
mov
sub
ret
and
jle
mov
or
repnz
je
cdq
xor
and
inc
or
sub
push
ret
mov
jg
inc
das
mov
imul
mov
test
jl
add
les
sub
clc
add
mov
adc
inc
pop
(bad)
mov
jns
xlat
mov
pushf
fdiv
arpl
fidivr
add
push
pusha
ficomp
call
jne
mov
ins
out
out
div
cmp
mov
inc
ja
jb
sti
xor
lods
repz
imul
outs
imul
jnp
mov
jo
or
push
mov
mov
(bad)
cmp
push
out
movs
mov
sti
es
cmp
and
jmp
sub
jo
in
loopne
mov
arpl
and
popa
cmc
rol
cwde
or
inc
pop
push
cmp
push
and
pop
rcr
dec
loopne
adc
adc
in
xchg
or
or
mov
into
or
sbb
iret
and
add
pop
test
sti
ja
sbb
lods
pusha
cmps
xchg
pop
push
rol
sahf
data16
mov
test
mov
test
mov
dec
ins
lods
dec
ins
das
test
sub
setae
inc
mov
out
jbe
fldpi
je
fild
mov
or
addr16
movs
dec
js
push
in
js
jmp
out
sti
or
ins
and
and
fisub
sbb
data16
outs
jb
push
fwait
xor
(bad)
jnp
mov
add
jmp
push
ins
je
jae
xor
add
dec
dec
or
mov
adc
or
push
movs
mov
daa
and
jo
rcr
push
mov
enter
imul
cmp
xchg
dec
adc
jg
sub
inc
push
(bad)
ds
xor
inc
inc
push
dec
pop
xor
xchg
loopne
push
test
stos
adc
mov
in
sbb
add
clc
pop
test
push
cmp
pop
dec
and
pop
icebp
or
add
jo
pop
ins
and
adc
adc
mov
pop
mov
cmp
mov
stos
dec
dec
movs
or
sbb
and
sub
sbb
or
cmp
je
push
std
adc
pop
sbb
xchg
lods
movs
les
popf
pop
or
sbb
and
lods
scas
shl
xor
ror
enter
push
jecxz
jne
mov
(bad)
xlat
shl
push
jmp
out
jnp
das
loopne
sub
shr
xor
push
mov
lods
ins
ins
mov
mov
mov
and
cmps
push
call
rcr
js
xchg
outs
xor
inc
pop
sbb
fs
cmp
and
fsub
sbb
sahf
add
mov
adc
mul
push
adc
add
cli
fistp
cli
jnp
cmp
adc
pop
add
retf
out
call
pop
cmps
jo
pushf
popf
xchg
fdiv
push
test
sahf
arpl
xchg
add
jp
add
add
add
lods
pop
cwde
jl
ds
mov
iret
shr
outs
adc
aad
pusha
popa
mov
add
push
loope
or
ja
xor
mov
adc
pusha
repnz
mov
add
fnsave
xchg
fdivr
sahf
mov
iret
aad
inc
daa
cmp
lods
call
ret
aas
cmp
xor
adc
mov
sub
jne
jl
mov
outs
pop
outs
pop
fbstp
scas
nop
xor
mov
inc
and
shld
cli
add
es
(bad)
enter
leave
ret
push
push
dec
push
stos
movs
mov
mov
daa
popf
mov
into
rol
ja
mov
push
mov
enter
sbb
mov
add
iret
div
cmp
jne
cmp
test
dec
and
inc
sahf
movs
dec
mov
or
push
lock
fcmovnb
inc
pop
inc
daa
loopne
push
stc
jno
inc
pushf
rol
pop
cmp
test
and
fstp
and
pop
or
les
add
scas
cmps
jecxz
pop
hlt
inc
and
inc
xchg
or
and
cmc
sub
and
sub
je
and
sub
sub
or
addr16
loope
pop
push
loopne
ins
js
stos
les
retf
push
sub
xor
pop
dec
jns
sub
sar
and
ror
pop
pusha
pop
cli
outs
sub
arpl
lock
lock
adc
inc
adc
pop
mov
and
inc
push
cwde
inc
or
call
sub
cmp
call
and
int3
dec
arpl
in
test
or
jge
and
mov
ret
inc
jns
pop
or
popa
xor
call
and
ins
push
pop
hlt
jbe
outs
xlat
dec
jmp
and
sbb
ret
and
ror
stc
lods
inc
test
cmp
add
mov
sbb
arpl
test
xchg
sub
fbld
or
or
mov
pop
ret
cs
sub
stos
add
(bad)
(bad)
arpl
push
xchg
xchg
test
es
add
repnz
hlt
xor
in
mov
adc
cli
sub
adc
jg
push
xor
and
fmul
inc
xor
sbb
or
loopne
push
test
add
cmp
add
imul
mov
mov
or
push
inc
dec
lods
pop
sbb
outs
fs
cmp
xor
xor
pusha
das
cmp
xor
cmp
push
and
and
ins
xor
mov
push
retf
or
outs
(bad)
int3
lds
hlt
cmp
inc
push
sbb
clc
cmps
lods
jnp
pminub
and
outs
shl
fdiv
iret
pmulhuw
in
(bad)
adc
(bad)
dec
(bad)
pop
and
add
sbb
cmp
and
test
or
and
mov
outs
test
ror
daa
jno
sahf
or
fwait
mov
inc
out
jb
xchg
enter
adc
ja
mov
addr16
fisubr
add
sbb
dec
or
je
mov
and
and
cmp
and
push
push
fs
add
retf
jnp
je
or
xchg
(bad)
jg
fiadd
push
cmp
jne
jnp
sbb
dec
push
inc
dec
add
adc
add
cmp
adc
lock
jmp
mov
mov
add
adc
or
dec
adc
add
dec
push
hlt
ss
je
or
cld
cmp
add
aaa
add
out
popa
mov
sbb
mov
or
test
hlt
xchg
add
inc
mov
(bad)
or
cmp
push
mov
push
xchg
cmps
mov
dec
inc
or
inc
sbb
mov
and
mov
gs
or
cmovae
inc
in
(bad)
jbe
inc
push
fs
add
mov
repz
cdq
clc
push
pop
ins
and
sbb
icebp
(bad)
loop
in
or
call
cmp
leave
inc
push
jo
jne
sub
push
aaa
push
cmp
cmp
sbb
cwde
fdivr
sbb
rol
adc
je
ins
jmp
int
sub
pop
pop
ja
mov
pop
or
inc
leave
push
cli
loope
shr
out
shl
stos
scas
dec
mov
push
inc
ret
add
cli
lahf
jg
enter
inc
mov
xchg
sbb
sar
and
xor
xchg
xor
mov
jmp
int
mov
mov
mov
cwde
push
shl
dec
rol
inc
data16
xchg
sbb
sti
and
rcr
call
push
mov
call
gs
cmp
popa
push
lds
sti
outs
push
test
or
pop
pusha
jne
xchg
shl
sbb
add
stc
jns
jg
inc
pop
mov
dec
xor
add
adc
js
call
inc
sti
lea
add
jp
loope
fimul
add
mov
fs
inc
dec
adc
inc
sub
movs
lods
leave
push
fwait
mov
imul
call
test
mov
inc
outs
ret
pop
pop
(bad)
xor
mov
inc
add
stos
mov
pop
(bad)
push
scas
mov
xlat
in
sub
push
xor
sbb
add
inc
push
mov
adc
repz
cs
cli
scas
mov
mov
pop
push
xor
adc
popf
xchg
fadd
or
sbb
and
add
pop
dec
lods
xor
push
add
(bad)
data16
movs
sbb
adc
je
pop
clc
push
mov
into
xor
pop
xchg
mov
test
fidiv
mov
add
and
and
pop
cmp
sar
clc
push
cwde
mov
mov
sub
adc
shl
pop
sbb
(bad)
daa
retf
or
shr
bound
adc
inc
xlat
inc
imul
idiv
sub
sbb
and
add
(bad)
push
jne
adc
inc
inc
call
(bad)
in
push
dec
inc
out
(bad)
sub
add
pop
ja
pop
mov
mov
cli
outs
retf
fdiv
cmovo
sbb
dec
call
loopne
jo
es
in
adc
clc
rcl
xchg
mov
or
rcr
and
or
sub
call
add
or
je
sub
push
or
sbb
scas
sbb
jle
pop
mov
and
aaa
inc
daa
pop
iret
inc
and
jo
add
int3
je
and
fldenv
icebp
inc
sub
pop
mov
lahf
add
dec
mov
push
sti
out
fiadd
movs
mov
and
add
jp
rcl
cmp
jne
fnstenv
or
popf
lods
inc
mov
pop
push
shl
mov
and
ja
imul
or
jle
in
and
sbb
cmps
lock
xchg
adc
repz
jmp
cs
or
gs
int3
xchg
retf
cmc
add
mov
pop
std
rcl
mov
adc
push
in
jb
lea
cmp
ror
mov
pop
sbb
and
cmp
lea
mov
sub
mov
mov
bound
push
mov
dec
mov
lea
xor
push
jecxz
or
loop
jge
adc
sbb
jecxz
pop
push
lock
jecxz
sub
push
jecxz
mov
pop
xchg
stos
pop
dec
mov
push
mov
adc
pusha
clc
push
pop
pop
repz
pop
je
add
fmul
adc
(bad)
fsub
xlat
dec
xchg
icebp
inc
test
pop
or
mov
adc
fdivr
xor
mov
loope
xchg
mov
adc
fsub
add
shr
lods
popa
push
in
(bad)
imul
lea
les
adc
sub
rol
push
or
xchg
add
xchg
jmp
call
pop
ins
sbb
dec
pop
pushf
inc
add
rcl
scas
jo
shl
inc
or
stos
jle
xchg
xor
pop
mov
pop
add
xchg
adc
mov
push
push
pop
dec
call
rcr
push
cmp
sar
xchg
imul
cmp
je
test
aaa
lds
imul
sbb
add
imul
pop
mov
cdq
lock
dec
call
mov
xchg
(bad)
ror
add
cmp
inc
in
shl
mov
rcr
or
xchg
xchg
fnstcw
mov
inc
je
push
or
bound
inc
sbb
popa
adc
ret
mov
mov
sbb
cmp
and
adc
mov
or
das
not
mov
mov
int3
jno
jl
xor
sub
or
ins
pusha
mov
jl
dec
add
inc
out
hlt
lahf
pop
les
xor
inc
jae
mov
pusha
(bad)
push
aaa
mov
jb
jne
jbe
fs
nop
push
add
cwde
pop
jne
rol
pop
movs
jmp
jecxz
retf
ficomp
ror
add
mov
jle
and
mov
jbe
push
imul
xlat
es
push
push
pop
(bad)
ins
fild
mov
je
push
cld
in
cmp
mov
inc
fdivr
pop
sti
scas
test
push
nop
outs
mov
cmp
loop
xchg
js
jg
inc
push
adc
imul
mov
xor
dec
and
mov
adc
or
lea
xor
fidiv
adc
sbb
xor
arpl
mov
or
pop
lea
pop
dec
ret
cmps
dec
sbb
ins
and
ja
fisubr
daa
lahf
out
inc
push
das
leave
in
dec
and
ins
mov
push
fild
repnz
fsubr
sub
cmc
dec
fdivr
sub
jge
cmp
ins
arpl
pop
mov
pop
dec
(bad)
inc
add
pop
rcr
int
cs
jne
dec
ins
dec
sbb
int
pop
mov
nop
add
cmp
ins
loope
mov
push
retf
bound
nop
dec
add
or
mov
shr
push
fs
xchg
and
jmp
je
call
jge
sub
gs
mov
fld
pop
sub
push
call
inc
xchg
inc
pop
adc
inc
xor
loope
add
mov
sti
shl
sbb
xor
call
rcl
sbb
jae
sub
mov
mov
mov
pop
sub
sbb
das
movs
loopne
outs
mov
jmp
test
mov
xor
mov
fadd
adc
daa
and
loope
pop
mov
outs
jns
add
add
mov
adc
sub
loope
pop
imul
mov
push
inc
sub
cmp
or
fld
or
inc
inc
add
mov
jle
lock
xchg
popf
push
hlt
mov
cmp
fld1
lock
popa
sub
add
rcr
push
cmp
cmp
jnp
jb
ss
fstp
jbe
ficomp
push
mov
inc
xchg
bound
(bad)
mov
jg
jl
ja
fadd
retf
mov
mov
or
retf
push
sbb
mov
int
std
neg
fdivr
dec
xchg
aam
lods
push
ret
jp
mov
push
jmp
or
adc
mov
cmp
jg
dec
xchg
lods
push
jmp
pushf
push
mov
(bad)
lar
sub
jae
mov
fisttp
xchg
fcomp
or
dec
jl
mov
pop
mov
push
adc
mov
mov
(bad)
in
mov
pop
add
ror
add
sbb
sbb
and
xor
fld
popa
(bad)
xor
pop
adc
add
add
xor
mov
rcr
inc
adc
push
inc
adc
push
ss
and
mov
push
dec
push
rol
stc
repz
inc
or
xchg
je
dec
jb
fwait
adc
xchg
popa
dec
sub
pop
pop
cdq
mov
pop
sbb
push
pushf
pop
xlat
xchg
test
(bad)
push
and
(bad)
jmp
push
or
mov
dec
or
popa
sbb
inc
mov
ret
mov
adc
add
jne
push
push
in
jl
test
outs
dec
aaa
xor
mov
shl
pop
mov
ja
pop
jb
mov
lock
add
adc
movs
rol
or
in
inc
mov
lods
pop
and
xor
sbb
push
xor
call
call
add
add
xchg
xchg
push
add
scas
nop
loopne
cmp
rol
xchg
leave
or
imul
pop
mov
mov
sub
dec
leave
dec
mov
call
cli
mov
jg
rcl
xchg
mov
mov
or
mov
sbb
inc
cmc
push
inc
inc
ret
or
push
cmp
mov
jmp
lea
loopne
pop
test
add
loopne
movs
cwde
les
rcl
or
and
js
xor
lods
add
sub
outs
arpl
setb
retf
mov
les
in
push
cdq
lds
cmp
jl
pop
sub
test
dec
dec
and
leave
outs
cmp
or
push
test
pusha
push
test
lahf
fadd
add
adc
test
sti
sbb
aad
mov
add
sbb
jmp
(bad)
or
outs
jg
mov
pop
(bad)
es
imul
pop
or
out
imul
dec
nop
popa
push
add
push
shl
pop
add
dec
pop
pop
and
daa
xchg
push
aam
call
lods
adc
lock
adc
scas
(bad)
adc
xchg
xchg
or
cwde
fstp
cmp
adc
adc
add
cmp
xchg
cmps
mov
inc
(bad)
cmp
retf
xchg
push
dec
hlt
outs
hlt
mov
add
mov
push
test
in
adc
and
xor
rcl
call
leave
enter
add
lahf
dec
add
add
(bad)
(bad)
or
jb
add
cld
cld
pop
aam
dec
in
and
or
(bad)
cdq
cmp
dec
popa
add
ror
ficomp
sbb
popa
ins
out
mov
mov
pushf
fsub
cmps
pop
inc
sbb
push
ds
xchg
(bad)
shl
mov
repnz
jno
and
and
jno
stc
es
cwde
in
cmp
imul
in
xchg
shl
xor
in
xor
imul
sub
jae
ret
push
mov
pusha
cdq
sub
in
inc
dec
xor
scas
xlat
scas
adc
mov
sbb
pop
mov
jns
hlt
lea
pop
dec
cwde
mov
inc
push
cdq
lock
dec
in
adc
push
call
fs
inc
in
fisttp
cmp
mov
loopne
test
ffreep
out
cmp
sbb
xchg
in
loop
lods
pop
pop
pushf
pop
lods
add
mov
pop
xchg
call
dec
mov
mov
adc
dec
call
rol
or
ds
jle
jg
lahf
mov
xchg
and
adc
cmp
xor
sub
out
mov
push
std
dec
jne
nop
dec
ficomp
dec
cmp
adc
mov
inc
out
xchg
pop
sar
add
dec
jae
xchg
je
push
or
lock
or
popa
jmp
pusha
clc
scas
test
lock
xchg
mov
mov
push
stos
inc
int3
mov
sub
adc
sbb
jecxz
stos
ins
mov
and
or
sub
pop
cmp
jne
ror
pop
fwait
adc
mov
adc
jmp
jecxz
xchg
outs
cmp
inc
and
or
int
add
push
push
dec
loop
add
scas
test
enter
sub
jmp
pop
retf
test
cmp
mov
dec
push
and
test
sbb
mov
outs
daa
shr
pop
sbb
popa
xor
test
fdiv
pop
xchg
or
in
dec
sar
les
pop
ret
push
push
rcl
mov
or
or
ins
inc
add
xchg
test
adc
movs
gs
adc
leave
and
sbb
inc
mov
je
add
jl
push
mov
outs
jne
lods
ins
mov
inc
jmp
imul
out
mov
mov
in
ins
bound
or
or
popa
mov
loope
jb
add
sahf
and
adc
mov
xchg
ja
push
fwait
push
push
(bad)
adc
or
outs
in
sbb
in
scas
adc
mov
mov
add
leave
add
inc
out
iret
in
out
movups
push
or
xor
jge
dec
loopne
mov
xor
push
inc
fs
arpl
add
rol
icebp
pusha
outs
(bad)
sub
adc
mov
mov
add
ins
sbb
sub
jne
fstp
mov
and
or
sub
and
ja
int
addr16
or
mov
sbb
or
dec
aam
lea
loop
in
pusha
dec
aaa
(bad)
(bad)
or
in
dec
fisubr
out
fmul
dec
movs
ds
js
inc
push
scas
cmp
sbb
dec
xor
dec
jl
dec
repz
cwde
push
enter
jnp
test
(bad)
sub
cwde
push
cmp
jae
int3
add
jl
mov
(bad)
fadd
dec
clc
sar
push
sbb
cmp
pop
cmp
xchg
rcl
add
scas
cmp
mov
dec
push
pushf
pop
bound
or
add
movsx
or
dec
test
add
test
ss
push
outs
ss
int
or
shl
or
dec
or
aam
daa
xor
call
xor
clc
fisttp
(bad)
ins
jb
and
sub
dec
and
cmps
pop
push
cld
add
pop
lock
sbb
sbb
and
xor
add
sbb
js
adc
pop
cmp
enter
fdiv
sbb
les
jns
dec
mov
pop
aaa
add
and
pop
jne
js
pop
mov
inc
mov
sub
sub
outs
cwde
push
cmp
lock
in
lods
and
add
push
jge
mov
outs
nop
mov
cmp
inc
cmp
imul
(bad)
fstp
adc
cwde
jmp
scas
cmps
or
sbb
push
je
jmp
xchg
inc
xlat
cmp
shr
or
stc
mov
clc
and
xchg
add
and
popa
sub
push
adc
dec
push
push
jo
mov
movs
loope
dec
(bad)
ins
dec
and
iret
shl
xor
sbb
nop
sub
cmp
popa
fs
repz
jnp
sbb
pop
nop
mov
push
rcl
pop
adc
jmp
ds
pushf
jo
adc
jo
sbb
mov
nop
addr16
nop
inc
scas
adc
add
sbb
push
pop
repnz
cwde
cwde
push
xor
add
and
jecxz
xor
pusha
dec
jl
lea
hlt
daa
pusha
push
nop
pop
jb
push
sbb
xchg
and
test
and
out
cmp
inc
mov
pushf
push
jmp
pusha
mov
jl
retf
pop
es
inc
mov
aad
imul
pop
adc
loope
add
xor
pusha
sbb
in
pop
add
fbld
in
out
pusha
out
repz
sbb
add
inc
mov
dec
adc
mov
pop
pop
and
shl
inc
mov
sti
stos
stos
mov
inc
push
add
pusha
lods
add
add
add
push
pop
addr16
push
add
icebp
push
inc
fwait
mov
inc
sar
push
mov
inc
or
inc
xchg
pop
cdq
nop
outs
mov
aas
or
jne
xor
inc
into
fmul
mov
add
push
add
loope
mov
lea
push
mov
mov
bndstx
sbb
adc
cmp
jmp
xchg
mov
lock
push
ret
dec
pop
push
jnp
loope
in
xor
je
imul
jbe
sbb
idiv
sbb
imul
cmp
mov
fisub
adc
inc
outs
mov
ins
sbb
and
push
sbb
int
cwde
into
push
push
add
(bad)
cld
not
pop
aad
mov
mov
scas
mov
dec
call
pop
movs
push
pop
dec
push
or
adc
inc
pusha
es
nop
and
repnz
add
nop
test
pop
inc
dec
xor
and
mov
and
fisttp
ins
or
push
imul
jecxz
or
mov
fld
or
and
mov
inc
sbb
and
xchg
jmp
call
dec
add
inc
dec
sar
push
inc
aaa
mov
sar
nop
or
xlat
sbb
mov
push
add
mov
cmc
xchg
sub
cmp
les
adc
xor
pop
dec
bound
mov
push
fild
add
fst
sub
mov
ret
jg
pop
add
movs
mov
sub
pop
jmp
out
mov
xchg
movs
xor
and
test
cs
in
cli
and
add
add
xlat
mov
jns
xchg
mov
sbb
sbb
mov
loopne
and
ror
add
sbb
in
outs
sbb
xchg
and
mul
pop
mov
test
movs
dec
sub
mov
jae
in
or
je
push
mov
cmps
cmp
jb
out
in
mov
rcl
xchg
punpckhwd
inc
mov
mov
and
mov
cli
push
sub
mov
add
repz
jle
cmp
lods
jae
and
add
add
xor
sbb
imul
sub
add
cmp
inc
push
cmp
rol
dec
pusha
sub
dec
call
xchg
imul
push
xchg
add
clc
leave
xor
add
lods
add
jmp
push
and
lahf
shl
pop
and
sub
inc
sub
mov
js
jnp
movs
sbb
jecxz
dec
cdq
xor
or
mov
add
aaa
push
test
rcr
cmp
jnp
aaa
rol
bswap
or
clc
and
shl
or
xchg
inc
enter
scas
adc
hlt
mov
enter
inc
cli
xchg
aam
pop
out
cmp
inc
inc
clc
dec
or
xchg
nop
and
fcom
jmp
popa
sub
inc
jb
xor
push
add
imul
fnsave
sbb
sar
(bad)
or
out
cmp
add
enter
jle
(bad)
jl
dec
dec
(bad)
pop
mov
ins
xor
sbb
add
cwde
lock
dec
lock
hlt
inc
dec
pop
adc
push
dec
and
sbb
inc
aas
push
inc
push
sbb
add
adc
xor
pusha
je
mov
add
aas
jmp
add
popa
push
cmp
jg
adc
fbld
add
hlt
mov
adc
inc
(bad)
fimul
push
pop
fcom
xor
jmp
jle
mov
pop
lock
mov
sbb
arpl
cli
sub
jle
pop
dec
mov
popf
mov
scas
cmp
ja
jo
mov
mov
lea
mov
xor
jmp
ss
jnp
movs
mov
add
pop
fucom
inc
cmp
pop
cmp
aaa
in
push
ficom
in
mov
sbb
or
test
push
adc
xor
pop
xchg
leave
pop
cmp
adc
sbb
and
add
ret
mov
and
adc
xchg
mov
fwait
les
ror
inc
ds
xchg
aad
arpl
inc
imul
nop
pop
inc
cs
shr
in
sub
clc
mov
cmp
xor
scas
sti
and
sbb
sbb
iret
int3
add
cmp
ftst
sbb
(bad)
xor
movzx
cmp
fild
gs
sub
adc
dec
movs
lea
push
in
cmp
xchg
inc
ds
test
(bad)
les
add
or
es
push
sbb
add
and
scas
xchg
pop
(bad)
cwde
sbb
adc
mov
(bad)
jg
cmp
adc
sub
mov
jl
sar
imul
push
aaa
adc
or
inc
cmps
cmp
adc
ror
cs
cmp
adc
sbb
jg
adc
icebp
add
adc
dec
loopne
cmp
out
jle
inc
mov
push
cmp
add
mov
cmp
aas
nop
data16
inc
mov
test
jne
inc
lea
xor
pop
jmp
ds
and
add
sbb
sbb
cmp
jmp
and
xchg
mov
jle
cmp
imul
cmp
dec
add
cmc
pop
bound
and
lock
inc
data16
xor
adc
pop
jmp
dec
pop
add
xchg
xor
or
test
add
shl
pop
add
xor
dec
jecxz
push
inc
cmp
inc
or
pop
test
mov
loope
push
pop
inc
cmp
and
scas
inc
add
arpl
sbb
fs
xchg
movs
push
add
jne
cmp
shr
mov
rcr
push
pushf
dec
fwait
clc
pop
or
xchg
mov
test
or
sub
ficomp
aas
sub
cld
lock
push
add
jle
lock
lahf
ss
ins
push
adc
cmp
inc
ins
pusha
aaa
in
das
add
sub
cld
pop
mov
inc
fist
and
data16
leave
mov
or
lea
je
mov
push
not
mov
pusha
cmp
pop
out
pop
fidivr
dec
push
lods
dec
movs
cdq
xlat
or
(bad)
leave
xor
add
movs
or
push
(bad)
fadd
push
push
and
test
jo
iret
in
inc
sti
cmp
sub
xor
test
lock
adc
div
cmc
in
push
or
push
in
push
pop
cli
and
pop
push
adc
pop
push
xor
mov
or
stos
sbb
sub
jmp
pop
cmc
aam
and
xor
or
ds
inc
xchg
lea
int3
hlt
shl
adc
es
or
test
xor
dec
das
sti
cmp
mov
js
lock
adc
ins
jmp
xchg
or
xchg
dec
les
out
cwde
setae
or
and
inc
dec
loopne
pop
adc
shl
dec
dec
add
ins
mov
out
mov
repz
mov
jnp
xor
add
in
cmp
fiadd
push
nop
xor
gs
dec
ins
jnp
call
js
xchg
stc
adc
jnp
pusha
repz
cli
jge
ins
out
pop
and
dec
xor
call
adc
clc
or
push
popa
dec
inc
push
xor
js
mov
jg
adc
or
cmp
ins
mov
and
pop
add
cs
je
xor
inc
clc
je
lds
mov
fwait
clc
mov
rol
xor
cmp
lods
mov
cmps
inc
aad
cmp
jae
mov
shl
jbe
sbb
dec
add
mov
pop
rol
das
xor
cmp
xchg
ins
mov
dec
mov
jl
pop
imul
mov
mov
je
clc
xor
cmp
and
xlat
or
(bad)
in
pusha
shr
dec
jmp
sub
sub
sub
inc
dec
bound
pop
or
add
clc
call
popa
loope
div
jecxz
or
and
sar
dec
inc
es
xchg
mov
add
test
je
push
adc
ja
sbb
js
minps
fldpi
fisubr
sbb
outs
mov
rol
and
in
sub
loopne
je
inc
add
scas
ins
jne
std
inc
pop
or
xlat
xlat
mov
rol
(bad)
cdq
mov
(bad)
js
imul
or
les
add
inc
jge
int3
jne
ret
ins
out
das
xor
sbb
lea
adc
and
out
inc
or
mov
push
lock
adc
cs
inc
enter
out
in
and
mov
or
or
rcl
or
ja
hlt
and
lock
lock
adc
mov
test
les
(bad)
dec
sbb
jg
jge
add
mov
pushf
fbld
clc
or
imul
mov
adc
sub
sar
sti
fsub
scas
fbld
pand
or
cmps
xor
xlat
inc
div
lods
or
adc
inc
jle
stos
inc
cmp
inc
iret
into
es
outs
dec
cmp
pop
adc
mov
cli
add
mov
dec
pop
scas
add
loopne
lock
in
enter
or
std
cli
push
out
push
xchg
jne
inc
clc
cld
call
rol
add
loop
movs
cdq
pop
inc
cmp
fstp
shl
imul
add
js
in
sbb
and
movs
xchg
dec
aaa
nop
addr16
sub
fimul
xor
add
sub
fs
add
push
nop
out
inc
xor
clc
sub
xor
push
add
dec
sbb
xchg
or
in
xor
pop
mov
jmp
or
cmp
mov
ins
inc
cmp
unpckhps
pop
cmp
push
lock
cmps
jecxz
jmp
or
dec
adc
pop
mov
jnp
lock
inc
cwde
pop
add
and
test
jge
repnz
cmp
push
push
inc
adc
fsubr
dec
icebp
push
fsubr
js
sbb
push
lods
cdq
add
mov
nop
ficom
jge
clc
outs
sbb
add
pop
mov
popa
cmp
enter
mov
inc
fst
or
pop
outs
or
sub
popa
push
add
inc
repnz
push
sub
pop
lock
nop
push
mov
rol
pop
movs
and
sbb
jo
push
es
test
cs
lea
(bad)
pusha
and
add
push
lock
dec
cmp
sub
inc
sub
inc
pop
sbb
mov
pop
mov
iret
hlt
cmp
xor
pop
sbb
sub
inc
add
rep
inc
scas
xchg
xor
repz
clc
or
pop
jns
fild
xor
ins
sbb
add
xor
retf
hlt
ror
cld
add
in
inc
dec
jp
ds
or
(bad)
pop
fild
push
rcr
movs
and
lock
or
sub
outs
lea
mov
loopne
mov
stos
inc
adc
xchg
loopne
ja
outs
sub
ss
fistp
dec
push
mov
push
sub
jmp
push
(bad)
sub
add
jne
test
add
dec
ja
xchg
pushf
pop
test
movntq
out
loopne
ret
call
sbb
or
push
sub
call
mov
dec
pushf
setb
inc
dec
loopne
and
xor
pusha
mov
cmp
sbb
xchg
pushf
or
xchg
or
sahf
sub
enter
add
inc
test
in
in
ret
add
or
xor
push
mov
cmp
xor
enter
data16
mov
adc
dec
call
ret
pop
lods
inc
sbb
mov
push
or
sbb
mov
dec
mov
mov
and
adc
sbb
test
lock
adc
adc
and
push
mov
or
add
xchg
mov
enter
lock
inc
movs
nop
retf
sub
pop
xchg
add
repnz
lock
clc
in
repnz
sbb
inc
and
dec
sbb
pop
and
push
push
lds
ins
add
add
add
dec
in
xchg
lock
call
test
pop
hlt
pop
mov
test
and
jno
adc
xor
xchg
gs
(bad)
cmp
aad
xor
xchg
das
loopne
rol
or
add
jmp
pop
ficomp
loopne
xor
fxch
xchg
adc
dec
xor
mov
sub
cmp
xlat
mov
(bad)
pusha
cwde
add
sbb
jne
mov
mov
xor
sbb
sbb
nop
cmp
lea
and
push
gs
shr
outs
sub
popa
(bad)
enter
and
add
fdiv
inc
push
mov
xor
xchg
sub
(bad)
loopne
pop
pusha
mov
enter
add
xchg
loopne
scas
add
or
int3
pop
pop
pop
xor
add
push
mov
lock
mov
out
jp
repz
or
jne
hlt
ins
inc
pop
aaa
ret
and
imul
or
imul
test
mov
sbb
dec
in
sbb
test
(bad)
and
xchg
repnz
or
or
fsub
dec
mov
adc
hlt
ss
les
imul
cmps
test
loopne
jl
daa
xchg
mov
(bad)
xor
(bad)
pop
pop
and
pop
add
sbb
jmp
dec
mov
es
bndldx
jmp
sbb
int
repz
fisub
ds
and
mov
add
xchg
retf
jb
sbb
outs
add
cld
popa
sub
fadd
aas
test
xor
rcr
ds
or
pop
mov
add
inc
push
and
sbb
mov
loopne
inc
bound
(bad)
stos
(bad)
retf
inc
loopne
pop
inc
retf
mov
inc
add
mov
dec
xor
call
adc
xchg
aad
addr16
sahf
dec
loopne
cmps
dec
out
dec
out
add
and
ret
push
jmp
xor
dec
jmp
outs
in
or
std
sub
add
rcl
clc
pop
jg
mov
jp
aas
and
mov
add
fst
fstp
(bad)
aam
add
inc
sub
loope
jle
xchg
inc
data16
xor
push
and
push
fs
push
icebp
dec
pusha
inc
in
pop
je
rcr
mov
and
cmps
cmp
jno
push
cmp
jne
rcl
pushf
ins
(bad)
jb
test
nop
add
add
jne
in
rcr
add
jno
out
push
add
(bad)
adc
sbb
retf
jne
mov
push
(bad)
jne
fsubr
lahf
inc
(bad)
jmp
sub
repz
and
(bad)
fild
jnp
call
into
pop
add
test
cmp
mov
mov
sub
inc
inc
push
inc
inc
lods
loopne
push
pusha
dec
je
outs
jecxz
or
(bad)
add
inc
loope
fisttp
xchg
test
(bad)
jg
adc
outs
shr
pop
jecxz
xchg
sbb
mov
mov
bound
ja
daa
pusha
xor
test
dec
in
outs
sbb
add
pop
shl
pop
cmp
cmp
ret
push
retf
shl
sti
std
and
cmp
ins
xchg
int3
imul
mov
mov
xchg
daa
pop
adc
(bad)
loope
iret
or
dec
ss
je
mov
dec
(bad)
pop
mov
std
push
aam
sub
push
test
sub
inc
adc
dec
sbb
aas
adc
xchg
add
pusha
push
std
sbb
mov
sahf
jp
jmp
add
mov
jne
mov
and
sub
mov
out
pop
push
sbb
test
sbb
pop
fisub
aad
mov
out
cs
imul
clc
push
xchg
inc
dec
mov
jecxz
outs
xchg
jne
xor
mov
lock
lahf
rcr
or
add
push
ret
ret
adc
je
sbb
loopne
pop
adc
imul
sbb
push
inc
dec
and
xchg
popf
rol
enter
mov
mov
gs
xor
xchg
push
outs
enter
xor
or
sub
add
in
and
lock
popa
jb
and
jmp
sahf
adc
dec
or
hlt
adc
add
add
jmp
add
dec
add
mov
ss
inc
mov
jno
popa
out
dec
inc
dec
or
add
pop
ins
sbb
adc
xchg
lock
jmp
mov
mov
pusha
je
sbb
call
cmp
test
iret
ins
outs
arpl
push
dec
xchg
sar
pop
and
cmp
retf
pop
mov
adc
inc
dec
push
or
mov
cmovb
scas
push
fnstenv
push
jg
lods
out
inc
loope
push
scas
out
cmp
pop
mov
iret
jecxz
ss
cmp
enter
dec
loop
fdivr
cmp
fld
sbb
movs
xlat
mov
xlat
loopne
retf
idiv
fistp
push
cmp
cmp
test
dec
movs
jnp
retf
aam
mov
pusha
mov
sub
jns
(bad)
mov
ror
xor
jle
jo
lock
repnz
fs
mov
push
lock
adc
cmp
lock
lea
ja
mov
sbb
pop
scas
gs
dec
mov
push
jl
pop
and
ja
movs
aas
ins
test
inc
data16
inc
inc
xchg
push
mov
shl
shl
sti
sar
push
push
data16
xor
out
xchg
xchg
stos
or
adc
call
inc
mov
fdiv
mov
(bad)
xor
pop
mov
test
dec
enter
inc
fst
mov
or
mov
sub
xchg
mov
and
cmp
mov
sbb
in
iret
mov
inc
mov
(bad)
sub
push
pop
adc
sbb
lock
loopne
push
push
pop
mov
mov
sbb
or
addr16
or
arpl
test
sbb
jmp
cmp
pop
push
js
push
in
or
jno
jne
stc
pop
and
js
bound
ja
mov
rol
add
dec
or
adc
xchg
push
push
sbb
and
ret
jmp
add
inc
add
dec
mov
sub
adc
adc
pop
xchg
and
iret
rol
icebp
push
mov
xchg
or
in
pop
(bad)
or
xor
sub
mov
movs
or
lods
je
(bad)
sar
call
je
rcl
add
outs
(bad)
xor
daa
push
stc
add
and
push
or
mov
jge
jae
mov
dec
jne
xchg
retf
inc
xchg
loope
les
ret
inc
nop
mov
mov
xchg
push
lock
mov
push
mov
mov
add
or
cmp
cld
push
dec
in
inc
add
ss
inc
xchg
xor
add
or
pushf
sar
jmp
dec
push
jns
shl
je
add
pop
pop
sub
imul
and
xor
mov
mov
dec
int3
and
dec
and
pop
xchg
mov
icebp
dec
xchg
dec
cmp
sbb
call
or
fld
adc
arpl
xchg
mov
or
movs
test
bound
inc
add
dec
sub
in
xor
or
inc
inc
pop
les
mov
sub
xor
mov
aam
cs
mov
pop
dec
xor
(bad)
int
jmp
sbb
aam
xchg
push
sbb
jnp
dec
repz
out
aas
je
push
xchg
pusha
push
adc
popf
push
adc
enter
retf
fs
mov
xchg
cld
push
inc
and
int3
jb
cmp
push
xor
les
(bad)
mov
mov
in
scas
cbw
js
jo
jmp
jmp
mov
aaa
frstor
ror
mov
and
fnstenv
ret
(bad)
xor
or
mov
ss
mov
sbb
mov
js
sbb
cmp
fld
dec
jmp
inc
(bad)
dec
push
inc
pop
push
mov
sub
sbb
sub
jle
pop
sub
not
dec
pop
(bad)
and
cmp
adc
sbb
loop
cmps
or
sub
mov
loopne
pop
iret
add
(bad)
push
data16
or
sbb
cmp
add
ret
pusha
sbb
add
sti
arpl
push
mov
sub
fs
aas
sub
inc
call
push
pushf
or
test
ret
(bad)
and
outs
je
not
push
mov
cmp
ret
mov
bnd
mov
fild
add
call
scas
into
mov
xchg
mov
cmp
jle
inc
mov
cmp
enter
aaa
xchg
jg
adc
clc
mov
mov
add
add
nop
adc
fcom
fmul
in
hlt
xor
ja
sti
jl
inc
test
fwait
sub
sbb
mov
pop
inc
jmp
add
mov
mov
retf
jle
dec
enter
or
inc
test
je
sbb
sbb
sbb
add
xor
pusha
or
mov
leave
test
aaa
dec
and
dec
inc
jne
mov
mov
idiv
mov
sub
lea
pop
cmp
xchg
add
call
xlat
xchg
pop
add
xchg
int3
push
cmp
ror
std
inc
fiadd
add
(bad)
es
mov
pop
jo
lock
xor
dec
sbb
not
iret
lds
fdivr
inc
cmp
xor
test
test
push
mov
xor
inc
push
and
jae
push
add
les
faddp
sub
mov
add
lods
cmps
(bad)
cmp
fsub
inc
stc
daa
pop
sar
mov
inc
mov
sahf
loopne
ret
push
lahf
push
dec
loopne
pop
jno
push
add
popa
or
jbe
ret
add
lahf
pop
and
fcom
jae
jne
pusha
xchg
hlt
xchg
mov
pop
sub
loopne
pop
push
stos
push
dec
sar
sub
pop
les
test
push
fbstp
or
(bad)
call
or
mov
ins
jmp
(bad)
and
call
pop
ret
add
retf
sub
pop
rol
gs
add
cmp
out
cmp
jle
fdiv
sbb
ss
call
js
int3
and
addr16
mov
mov
add
stc
inc
imul
push
cli
leave
xchg
nop
ret
or
js
pop
lea
xor
xchg
out
adc
sbb
jo
arpl
stos
adc
or
in
dec
xor
je
mov
cmp
xchg
out
rol
pop
sbb
cmp
sbb
xor
addr16
ret
(bad)
nop
pushf
or
add
mov
jle
xchg
inc
mov
or
fs
(bad)
pop
nop
les
add
lock
iret
sub
fstp
pop
mov
add
ret
dec
fwait
xchg
jbe
in
push
mov
sub
sbb
pushf
test
adc
push
cli
mov
js
in
mov
lods
popa
imul
adc
sub
add
cmp
xor
ret
mov
int3
cmp
or
sub
mov
int3
cmp
jp
jne
sbb
add
cmps
loopne
pusha
dec
sbb
aaa
or
pop
mov
lds
retf
cdq
pop
sub
retf
push
add
pop
pop
adc
nop
sbb
into
inc
ret
test
push
cli
data16
cli
xchg
cmc
fnstsw
test
sub
push
sbb
test
je
or
and
outs
pop
in
cmp
xor
in
mov
xchg
pop
mov
mov
scas
xchg
sbb
cld
ja
pop
les
push
(bad)
lea
mov
adc
pusha
loop
xchg
(bad)
mov
jge
add
test
test
popa
mov
ror
xor
push
adc
push
inc
jno
nop
call
mov
fwait
xor
js
adc
lea
mov
sub
cmps
call
pop
sbb
mov
adc
and
test
(bad)
pop
cmp
je
xor
lods
xor
lahf
dec
fistp
push
ret
ret
mov
xchg
jo
cmp
or
add
pop
aam
cwde
hlt
add
mov
imul
pusha
ja
or
inc
hlt
xchg
(bad)
repz
xor
and
xchg
push
lahf
push
out
test
and
push
add
and
adc
or
cld
xor
pusha
mov
pop
out
add
mov
or
mov
add
sbb
rol
sbb
sbb
inc
cmp
dec
pop
test
sbb
sar
test
add
or
or
hlt
(bad)
bound
arpl
pop
dec
in
or
cld
push
mov
sub
lds
in
int3
jns
adc
popa
pop
daa
dec
ja
imul
pop
mov
das
add
in
mov
or
inc
jg
sub
jnp
int3
inc
jmp
and
dec
add
mov
or
xchg
add
movlps
xchg
shr
cld
adc
add
inc
dec
or
test
cmp
retf
ret
add
retf
popf
call
xor
gs
inc
dec
sub
pop
scas
and
cmp
cmp
sbb
push
push
daa
inc
sbb
sub
xor
out
or
push
sbb
dec
sahf
sub
ret
sbb
jno
into
push
push
or
mov
xchg
xchg
nop
out
jmp
xor
adc
in
jmp
add
lods
icebp
pusha
loop
push
and
xchg
cdq
cmp
and
(bad)
jmp
repnz
test
push
fsubr
sub
or
dec
(bad)
lock
xchg
xor
or
xor
push
dec
sbb
push
cmp
add
xchg
xchg
pop
adc
mov
jo
cwde
sbb
neg
bound
sbb
dec
iret
cmps
call
xor
aam
movs
or
fimul
or
xchg
jbe
inc
xchg
cwde
dec
aas
push
sbb
daa
dec
push
sbb
ins
cli
xor
test
test
mov
std
sbb
out
int3
add
cmp
adc
pop
sbb
sbb
out
push
mov
adc
xor
jne
dec
sahf
sahf
test
jmp
push
cs
cs
adc
and
test
dec
or
jl
or
mov
jmp
nop
call
add
mov
aaa
in
aaa
and
outs
dec
inc
pop
mov
mov
mov
xchg
je
ss
leave
push
clc
pushf
xor
cmp
xor
hlt
pop
nop
popa
push
mov
shl
enter
and
dec
or
cmp
pop
ins
xchg
add
jb
sub
jmp
das
or
mov
dec
pop
jl
sub
js
imul
push
aaa
sbb
rcr
hlt
add
mov
add
fsubr
push
sbb
fnstsw
mov
sub
mov
jo
mov
fcomp
imul
adc
push
xor
ret
aas
mov
cmp
inc
pop
je
mov
mov
packsswb
imul
clc
cmp
sbb
pusha
or
in
adc
mov
add
cmp
xchg
es
retf
adc
es
rcr
fmul
fwait
add
stc
push
and
mov
ss
mov
aaa
xor
or
cmp
adc
or
pop
sub
push
pop
xchg
add
xchg
inc
dec
add
nop
add
cmps
sbb
test
jmp
push
cmp
ss
cmp
inc
cmp
or
add
daa
sub
sub
aam
cmp
inc
loopne
and
shl
pop
add
sti
in
ss
push
jl
arpl
and
test
int3
dec
dec
cmp
(bad)
gs
loope
pop
sub
xchg
pop
imul
dec
aam
inc
mov
das
test
and
sub
cmp
sbb
aaa
addr16
inc
push
xchg
cmp
xchg
shr
xlat
mov
sub
leave
hlt
outs
and
lock
sar
mov
push
ins
pop
and
repnz
cli
mov
add
mov
imul
adc
fstp
cmps
sbb
jo
xor
dec
push
bound
aam
push
std
push
push
or
sub
ins
into
mov
sbb
pop
or
or
pop
test
ror
in
popa
retf
adc
fdiv
jnp
dec
sbb
and
fdivr
rcl
sub
fmul
mov
inc
xchg
add
cld
push
dec
dec
fsubr
cmp
jb
push
enter
xchg
nop
push
inc
inc
(bad)
int3
push
fs
dec
and
add
mov
xchg
mov
cmp
adc
push
fdiv
mov
rcl
xor
leave
stos
popa
dec
cmp
in
jo
ror
push
in
cmp
fsub
xor
or
enter
es
inc
in
stos
popa
xor
add
retf
js
test
xor
sub
(bad)
push
dec
mov
shr
stos
xchg
rcl
jmp
and
test
xor
inc
fstp
retf
jecxz
inc
enter
repnz
push
push
dec
ror
mov
push
push
push
pop
push
and
outs
or
add
out
cmp
packuswb
push
mov
sti
xor
or
mov
lea
or
call
push
or
cmp
cli
pop
xor
cmp
inc
popa
add
movs
mov
or
mov
ins
sub
or
pop
and
push
mov
aam
test
push
mov
inc
mov
mov
mov
ds
jo
push
cli
std
jmp
sbb
jge
xor
aas
ffreep
ss
xchg
jns
cmp
rol
push
add
or
icebp
push
pop
jb
cmp
pop
leave
sar
iret
xor
push
fild
add
scas
xor
push
in
test
or
or
xor
ret
int3
jp
gs
pop
inc
and
shr
xchg
adc
mov
std
psubusb
or
in
pop
imul
clc
sbb
f2xm1
and
lds
cs
adc
pop
push
cwde
sbb
rcr
cmp
ficomp
or
adc
dec
and
outs
das
call
or
fldln2
jb
add
stc
push
adc
cdq
push
test
adc
or
scas
sbb
nop
rcl
push
mov
(bad)
fidivr
inc
hlt
and
xor
xor
cdq
fcomp
aaa
pop
push
stos
aaa
sub
mov
xchg
lds
push
dec
add
mov
stos
pop
jo
mov
xchg
sbb
jno
pop
mov
and
or
es
icebp
ss
lock
clc
xor
sbb
enter
pusha
push
(bad)
mov
xor
sub
arpl
shl
sbb
pop
or
test
daa
test
xchg
dec
sub
cmp
jl
add
mul
mov
and
push
jmp
(bad)
mov
mov
inc
sbb
popa
mov
inc
js
ret
mov
xchg
push
dec
pop
inc
jmp
aas
je
sbb
test
loopne
sar
dec
adc
imul
push
and
jnp
out
and
and
push
jns
sbb
sbb
repz
lock
in
add
out
or
add
push
cld
(bad)
push
sub
test
call
call
mov
sahf
es
sub
mov
or
in
mov
add
out
stos
lods
outs
xlat
scas
repnz
mov
mov
xor
mov
out
inc
push
dec
mov
fdiv
pop
add
xchg
pop
in
jbe
dec
in
xor
and
loopne
loopne
rol
hlt
mov
pushf
add
jne
test
or
sbb
mov
fist
or
push
popa
add
or
or
call
imul
popa
ins
push
sbb
jge
mov
stc
data16
movs
or
nop
lock
call
sub
mov
push
inc
pop
test
enter
xor
cmps
stc
enter
loopne
in
dec
jmp
fdivr
inc
push
pop
mov
and
jl
les
inc
iret
inc
inc
cmp
inc
hlt
cmp
sub
mov
inc
fdivr
cmps
in
cmp
pop
push
xor
push
les
push
in
cmp
sbb
adc
push
shl
adc
xchg
push
inc
jl
or
jb
test
xor
jns
pushf
or
push
jg
push
pop
in
inc
dec
inc
push
inc
push
jo
xcrypt-cfb
cmps
fs
adc
js
test
cmp
add
dec
mov
pop
fcom
mov
jnp
outs
dec
fs
push
sub
cmp
cmp
pop
(bad)
xchg
push
js
cmp
out
pop
sub
or
inc
ins
push
daa
cmp
xchg
jnp
enter
mov
pop
pusha
shl
push
xor
jmp
sbb
xor
dec
pusha
cs
cmp
jmp
(bad)
mov
cmps
dec
fnstenv
test
nop
scas
mov
dec
outs
ins
jmp
movs
(bad)
xchg
dec
scas
cmp
push
jo
dec
mov
dec
and
dec
fcom
mov
push
xchg
sub
(bad)
nop
xchg
dec
in
xchg
dec
or
dec
and
dec
push
inc
sub
inc
lock
(bad)
push
push
shr
fnsave
js
add
nop
cmp
xor
gs
cmp
jb
xchg
xor
pop
dec
mov
ins
bound
inc
jl
xor
rol
test
aaa
js
or
or
or
daa
add
jae
movs
adc
(bad)
ja
push
jle
mov
mov
or
adc
sub
fdivr
pop
fcom
cmpxchg
mov
loope
fistp
or
push
imul
imul
rcr
movs
sbb
push
pop
jns
jge
mov
inc
popa
imul
jne
add
push
and
jns
test
jnp
pop
or
movs
or
push
xor
sbb
xchg
sbb
iret
lds
in
dec
cmp
and
jp
push
pop
out
mov
mov
nop
out
sbb
push
loope
pusha
mov
nop
dec
mov
retf
adc
or
adc
adc
jl
add
add
gs
sub
inc
or
adc
inc
leave
stc
pushf
pop
ror
outs
lahf
xchg
dec
es
add
and
pop
outs
or
inc
sbb
push
and
mov
mov
repz
dec
sub
jo
pop
out
add
mov
inc
imul
wrmsr
sbb
mov
retf
imul
sbb
xlat
(bad)
(bad)
xchg
stos
fisttp
add
add
ss
iret
mov
mov
pop
xchg
into
dec
and
adc
nop
jnp
addps
mov
ja
ret
sub
push
pop
mov
or
xchg
es
sbb
mov
movs
pop
adc
test
loopne
and
(bad)
sti
jns
fcmove
into
inc
pop
or
loope
cmp
mov
pop
or
mov
mov
lods
or
in
cmp
push
dec
add
iret
cmp
stos
bound
stos
sbb
push
cmps
jae
pop
repnz
jmp
dec
and
mov
call
mov
mov
push
add
and
imul
pop
daa
adc
push
or
rcl
or
or
sar
xchg
push
or
cwde
dec
lea
ret
adc
pop
test
add
das
mov
add
fcomp
inc
pop
mov
push
or
add
or
cwde
mov
xchg
or
ds
push
ret
mov
mov
out
mov
push
mov
lods
pusha
xor
popa
js
sar
movs
pop
(bad)
pusha
adc
xor
fld
or
add
sub
mov
xchg
dec
lds
mov
punpcklbw
(bad)
dec
push
push
push
push
jo
lea
mov
aam
popa
add
ss
sbb
mov
sar
fidiv
bound
push
lock
push
adc
cmps
sahf
loop
aas
sub
ins
cmp
mov
cmp
mov
nop
pop
aaa
(bad)
pushf
xchg
pusha
xchg
ss
dec
jnp
mov
cwde
push
pushf
jo
cli
imul
xchg
inc
cwde
mov
cmps
xchg
sbb
in
lock
ja
and
dec
push
pop
push
(bad)
mov
add
push
add
inc
add
add
inc
add
add
mov
mov
scas
mov
pop
xor
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
jmp
out
(bad)
out
jmp
jmp
jmp
jmp
dec
jg
and
loop
loope
loopne
lods
(bad)
(bad)
(bad)
fdivrp
(bad)
fdivr
(bad)
(bad)
fcos
fdivr
xlat
call
call
call
call
call
aad
mov
into
add
retf
dec
jg
neg
call
push
dec
mov
cmp
jo
enter
sub
push
push
fsubr
retf
call
lock
jnp
out
in
push
cmp
push
pop
je
(bad)
jl
mov
mov
lds
in
cwde
push
test
xchg
mov
in
jge
les
stos
push
cmp
sub
(bad)
jl
fwait
pop
js
cmp
mov
cmps
stc
test
cld
add
push
adc
ret
ret
hlt
xchg
mov
dec
loopne
mov
sub
fisubr
mov
push
jl
push
adc
mov
rcl
pop
test
cs
jle
cmps
push
je
push
pop
pop
sbb
fwait
les
push
js
les
add
rcr
bnd
inc
hlt
add
inc
add
add
sub
leave
add
fs
dec
inc
xor
push
jns
shr
jge
mov
in
push
jo
pop
add
add
mov
loop
shl
aaa
sub
mov
enter
xchg
mov
or
inc
cmp
mov
add
push
jb
addr16
add
push
dec
js
sbb
stc
and
mov
lds
shl
iret
dec
fdivr
mov
push
xor
push
test
jbe
mov
cmp
push
inc
outs
arpl
js
jg
std
sbb
stos
pusha
ror
jo
aad
add
enter
push
imul
and
pop
and
cs
rol
dec
aas
push
enter
dec
in
leave
dec
add
ror
xlat
dec
int3
fmul
rcpps
add
sbb
sub
mov
inc
dec
pop
push
cmp
pusha
xchg
sub
push
push
inc
fistp
xchg
cdq
mov
add
add
aam
mov
add
fs
lods
leave
repnz
adc
sbb
dec
aad
push
add
add
mov
rol
pop
mov
or
xchg
cmp
adc
mov
mov
xchg
and
(bad)
(bad)
mov
mov
mov
mov
mov
add
push
mov
xor
cmp
push
rcr
add
in
inc
inc
inc
inc
inc
dec
fsubr
ret
xchg
mov
jl
lods
std
sbb
mov
push
loopne
(bad)
stc
call
mov
mov
movs
jmp
push
and
cwde
mov
repz
and
inc
push
repz
add
xor
shl
int
cmp
dec
mul
push
jl
dec
cli
hlt
sbb
out
ds
inc
push
push
jnp
iret
repz
mov
push
fs
sahf
cmps
push
fidivr
mov
push
pop
jo
out
mov
js
dec
push
cwde
jns
jge
mov
push
jo
out
cmp
jmp
js
enter
jnp
cmp
dec
push
lods
cs
shl
push
(bad)
int3
es
rol
push
and
cmp
div
int3
push
sub
dec
ja
push
mov
js
mov
(bad)
cld
hlt
jb
add
cmp
push
push
sbb
hlt
sar
lahf
out
xor
shr
repz
(bad)
ficom
into
or
push
sub
clc
pop
hlt
cmp
sbb
add
push
jo
sbb
ds
cmp
mov
lods
sbb
sbb
and
and
push
outs
movs
imul
jo
js
or
push
cmp
dec
mov
and
add
and
and
ficom
or
push
add
pop
test
sbb
cmp
push
mov
mov
mov
ins
dec
jb
outs
loopne
cli
ins
sbb
imul
fild
push
sub
dec
cld
pop
adc
fsub
sbb
push
mov
repz
add
adc
cwde
sbb
adc
adc
stc
imul
or
and
leave
mov
(bad)
xchg
sub
add
sub
test
push
subps
xor
add
mov
out
pop
or
vmread
movs
invd
sbb
or
sub
leave
or
and
fild
les
aam
mov
inc
push
sbb
jl
inc
push
sbb
cmp
repz
mov
pop
loop
out
cld
outs
test
out
(bad)
cs
je
enter
adc
push
push
js
xor
daa
mov
pop
fs
fsubr
cmp
cmp
fdivr
mov
ret
addr16
cmp
pushf
dec
push
mov
sahf
dec
jo
jo
aam
add
scas
push
aad
mov
es
les
mov
or
or
inc
or
dec
ss
hlt
and
aad
jae
sbb
enter
dec
sub
jb
out
test
rcl
ins
nop
adc
sub
xchg
lods
sub
push
push
iret
xor
push
dec
adc
inc
sbb
or
adc
or
or
iret
and
push
adc
dec
jne
ret
inc
dec
div
add
shr
clc
loopne
cmp
adc
pop
add
xor
mov
sbb
add
dec
push
push
not
mov
cmps
cmp
pop
daa
mov
inc
loope
into
ja
stc
imul
sbb
dec
inc
gs
ins
adc
shl
inc
fisubr
daa
leave
inc
pop
sbb
push
push
inc
adc
push
push
inc
daa
push
jo
jo
cs
or
inc
ins
popa
sbb
xchg
(bad)
dec
outs
mov
adc
xchg
xchg
mov
mov
push
mov
popa
xor
outs
cdq
push
push
pop
inc
add
loopne
lods
cmp
test
pop
mov
and
sbb
sub
pop
add
daa
xor
loope
push
dec
pop
sub
ret
aas
imul
pop
imul
jmp
add
(bad)
adc
cdq
jl
add
or
push
ret
fadd
add
sub
shl
pop
push
push
adc
jge
add
in
outs
inc
js
pop
out
sub
mov
int3
xor
cmp
inc
xor
push
adc
ffreep
out
ds
adc
aas
xchg
jne
add
add
movs
daa
std
mov
mov
or
adc
clc
fdivr
add
cmp
or
or
fistp
repz
add
xchg
les
add
sub
cdq
dec
xor
rcl
dec
jl
gs
js
pushf
sbb
fsubr
movs
ds
rcl
adc
(bad)
xchg
xchg
fstp
jmp
dec
lea
jmp
or
inc
(bad)
adc
bound
jne
outs
mov
cmp
cmp
shl
and
xchg
sub
add
push
push
inc
sub
or
std
js
inc
popf
(bad)
idiv
adc
outs
inc
mov
imul
imul
cmps
imul
and
mov
lock
mov
jl
push
push
pop
lahf
add
mov
or
ror
cwde
and
fbstp
adc
out
add
inc
sub
iret
bound
push
je
ds
lods
rcl
movs
test
mov
adc
ja
inc
rol
int3
out
sbb
into
mov
sbb
shl
sbb
outs
sub
dec
mov
inc
add
jne
mov
test
lods
(bad)
adc
(bad)
(bad)
jle
je
jmp
cmp
or
retf
retf
xchg
inc
out
out
sub
adc
(bad)
pop
es
clc
aaa
ja
push
mov
or
cmp
mov
jmp
xor
ja
cmovp
pop
sbb
imul
pusha
leave
mov
cmp
pop
enter
and
sub
and
and
data16
push
les
inc
jne
fdivr
inc
adc
outs
jecxz
aas
inc
mov
fwait
xchg
out
sbb
dec
pop
pop
add
add
and
adc
adc
add
jne
rcl
lods
inc
push
push
jp
and
adc
out
sbb
xchg
pop
scas
or
push
sub
pop
(bad)
cmp
or
fisub
dec
les
inc
test
pop
add
push
mov
xchg
stos
ins
xor
retf
inc
aaa
inc
mov
adc
sub
xchg
lods
pop
push
aaa
sar
mov
pop
push
ins
test
scas
inc
lea
ins
imul
push
dec
sbb
(bad)
mov
scas
popa
in
pop
dec
or
mov
je
or
add
test
outs
repnz
mov
inc
stc
ret
inc
pop
(bad)
dec
jle
add
mov
pushf
push
inc
pop
jbe
addr16
dec
jb
imul
adc
inc
rcl
pushf
cld
or
xor
push
inc
icebp
loope
or
push
mov
inc
gs
daa
ficomp
stos
xor
sub
out
jbe
pop
outs
pop
mov
popf
add
mov
inc
adc
and
add
gs
fdiv
or
mov
add
sub
sar
jb
or
out
jne
mov
cmp
xchg
dec
pusha
or
in
mov
les
xchg
neg
xor
shl
rcr
and
enter
in
sti
fisub
fs
mov
adc
aam
lea
mov
inc
lds
call
inc
pop
and
lock
mov
cwde
sbb
push
xchg
or
sub
jp
xor
and
lds
xchg
lods
inc
jle
shl
sti
or
push
xchg
mov
and
adc
inc
xchg
mov
cmp
push
scas
ret
xchg
sar
and
inc
inc
in
sub
jecxz
daa
add
je
xlat
xor
ret
and
sub
adc
pop
xchg
ss
movs
or
inc
sub
mov
and
bound
jno
ins
js
(bad)
fcomp
xchg
push
push
test
dec
jmp
shl
xor
sub
ret
test
mul
add
sbb
pop
fidiv
lods
mov
mov
sub
(bad)
in
pop
popa
test
in
daa
fadd
daa
jp
dec
cmp
push
xchg
pop
cmp
gs
or
push
inc
jle
sahf
push
mov
jmp
fmul
jmp
mov
(bad)
dec
sti
add
jno
push
mul
fmul
add
mov
and
cmp
xor
xchg
rol
xchg
daa
shl
fdivr
and
call
hlt
xor
jl
fnstsw
push
(bad)
cmp
fistp
enter
pop
and
jmp
jmp
iret
retf
push
mov
sub
adc
pusha
sbb
in
cmps
adc
add
pop
(bad)
dec
ret
mov
jns
adc
cmp
cmp
dec
call
jne
sbb
push
inc
pop
fild
mov
outs
dec
push
push
pop
inc
cmp
and
adc
jle
mov
sbb
das
push
or
add
sub
out
and
adc
dec
mov
sub
outs
jle
jge
xchg
call
xchg
adc
jl
test
sub
jmp
push
test
push
mov
push
push
sbb
inc
lods
lods
pop
shl
push
pop
fidiv
push
(bad)
xor
jb
and
pop
jne
pop
or
inc
int
pop
aaa
inc
jo
pop
mov
jae
cmp
adc
nop
xchg
shr
pop
pop
push
test
and
sbb
xchg
or
fdivr
mov
out
ds
bound
push
enter
shr
or
and
adc
add
repz
lds
sub
mov
mov
fld
(bad)
sbb
mov
sub
mov
cld
lea
pusha
sbb
mov
add
out
sub
inc
sbb
xchg
inc
mov
or
outs
and
mov
(bad)
mov
lods
add
jmp
xchg
add
jg
cmp
add
cmp
je
out
mov
jo
in
out
cmp
movaps
adc
into
(bad)
aam
or
rol
dec
sub
xchg
sahf
movs
mov
sbb
push
adc
or
jmp
mov
mov
cmovae
sbb
cs
fmul
ficom
sbb
(bad)
std
adc
sbb
std
adc
dec
ins
or
xor
and
pop
add
push
retf
sub
and
sbb
sahf
dec
sbb
push
push
push
cmp
(bad)
out
pop
xchg
fadd
mov
and
(bad)
fidivr
push
movs
test
pop
fdiv
mov
jmp
and
les
ret
dec
out
sub
scas
mov
movs
push
pop
retf
pop
and
shr
xchg
or
or
adc
xor
js
inc
sbb
das
iret
jge
outs
out
jo
xor
inc
add
push
dec
mov
loopne
aam
sbb
xchg
and
aaa
fsub
test
add
sbb
cmp
or
inc
dec
fmul
test
stc
dec
pop
test
mov
adc
jge
mov
or
popf
cmp
stc
fstp
fwait
jmp
inc
and
call
retf
jbe
outs
xchg
and
sub
imul
push
adc
imul
push
xchg
add
pop
popf
movs
pop
movs
jp
stc
sbb
sub
mov
aad
retf
dec
push
ins
xor
cmp
push
mov
push
arpl
stos
add
pop
repnz
repnz
loopne
in
xchg
sbb
aaa
and
retf
int3
mov
mov
ins
jno
ja
pop
xchg
clc
sub
and
fnsave
add
dec
cmp
sbb
jne
lea
push
clc
push
cwde
jo
and
les
push
sbb
sub
sahf
popa
pop
lods
sub
push
mov
dec
inc
inc
dec
push
add
jmp
xor
and
dec
call
lea
pop
dec
fld
ja
js
add
dec
add
pop
call
push
sbb
dec
jge
push
jnp
sbb
ins
cdq
je
jne
mov
or
add
add
popf
xor
iret
je
and
ja
jne
aaa
add
push
sbb
add
aas
add
leave
add
dec
stos
fmul
sbb
inc
jb
lock
inc
or
sub
sbb
cmps
pop
jmp
mov
cmps
das
adc
daa
in
mov
adc
pop
adc
or
mov
and
cmp
ret
jo
loopne
add
ins
cmc
dec
push
and
sub
ror
dec
enter
test
dec
cdq
movs
imul
jmp
and
or
loop
jo
add
or
jp
adc
adc
test
pop
mov
xchg
push
imul
push
test
inc
dec
aaa
sbb
adc
push
cmp
pop
jp
aaa
mov
add
cmp
mov
icebp
xor
mov
sbb
sbb
cmp
pop
pop
mov
add
jo
mov
sub
test
mov
or
sub
push
adc
sbb
cdq
or
xchg
aaa
iret
pop
mov
leave
ror
cmp
mov
cli
push
arpl
sar
das
rcr
pop
not
cs
push
sub
inc
ins
int3
push
lea
loope
push
bnd
dec
and
or
or
dec
ret
jecxz
fwait
mov
pop
inc
(bad)
push
repz
imul
lds
bound
jno
iret
push
push
push
add
jae
inc
pusha
arpl
call
enter
dec
les
test
mul
push
jo
scas
push
mov
add
rcl
jp
xchg
add
add
add
adc
dec
fcom
cmc
add
stc
mov
adc
xchg
ja
and
or
jnp
pop
ret
xchg
cmps
lock
adc
dec
cwde
xor
mov
ins
hlt
daa
mov
mov
aas
loope
xchg
je
push
cs
imul
mov
ja
inc
pop
dec
inc
pop
ss
sub
mov
pushf
arpl
cmp
jecxz
hlt
mov
adc
lea
adc
hlt
cmps
xchg
xchg
aaa
add
pop
adc
push
inc
xchg
jo
(bad)
(bad)
xchg
pusha
ret
dec
dec
and
scas
mov
call
(bad)
rcl
lock
add
data16
pusha
and
sahf
movs
sti
mov
pop
or
add
pop
jge
mov
pop
add
inc
or
adc
push
(bad)
fld
rol
rol
and
arpl
dec
push
pusha
movs
and
pop
ds
push
jns
push
xchg
aam
lods
inc
jecxz
or
(bad)
push
and
clc
and
cwde
pop
push
dec
pop
popa
and
push
adc
or
or
or
pop
retf
out
cmc
add
adc
mov
out
div
fild
jmp
cmp
je
mov
test
jbe
push
adc
out
jae
pusha
jge
cmp
push
mov
xchg
xchg
or
adc
je
sar
mov
jbe
cmp
cmp
pop
adc
sbb
or
xchg
loopne
cmps
mov
inc
push
push
cvttps2pi
movs
xor
sub
sbb
in
lea
shl
jbe
es
and
fisttp
pop
push
jl
cmp
xchg
test
and
inc
mov
add
imul
push
in
mov
popf
mov
or
nop
dec
pusha
cmp
fld
cmp
xchg
nop
in
xor
and
(bad)
mov
sub
pop
xchg
dec
inc
(bad)
fs
sub
hlt
push
xchg
xchg
out
adc
push
call
sbb
scas
mov
mov
mov
pop
cmp
pop
and
sbb
popa
mov
pop
lods
in
xor
add
das
cmp
xchg
jl
pop
sub
lahf
shl
add
push
push
and
out
setb
adc
xchg
ins
and
sbb
xchg
and
sub
je
mov
cmp
push
js
sbb
add
stos
add
aas
cwde
scas
cmp
push
xor
lods
call
add
retf
addr16
add
adc
sub
mov
repz
cmp
jae
push
push
aas
popa
pop
scas
add
push
adc
xor
mov
mov
or
jl
je
push
mov
adc
retf
inc
push
add
cmp
sbb
mov
pop
add
jp
jmp
mov
mov
adc
fs
(bad)
sub
ja
mov
rcr
cmp
xchg
sbb
or
push
or
retf
mov
mov
cmps
push
inc
ins
xor
sbb
daa
ins
push
push
adc
lahf
and
out
dec
push
inc
pop
ret
cmovae
pop
arpl
mov
mov
gs
aas
push
dec
aas
inc
ins
inc
add
dec
push
hlt
mov
pop
push
mov
xlat
dec
inc
add
daa
xor
cmp
sbb
das
xor
xor
lods
xor
mov
loopne
lds
rcl
mov
sbb
les
outs
fwait
add
jle
ins
add
adc
or
add
add
or
adc
adc
push
or
dec
fsubr
adc
ins
sub
jns
ins
call
inc
jg
pop
ret
inc
sub
push
int3
int3
ds
xchg
mov
push
xor
loopne
push
outs
adc
or
cli
fisttp
test
dec
daa
dec
dec
push
mov
mov
in
or
arpl
push
loop
jne
pop
ret
sbb
pop
and
cmp
xor
and
xchg
rcr
jmp
cmp
call
xchg
icebp
sbb
add
adc
xchg
movs
nop
lea
test
dec
stos
mov
push
xor
pop
(bad)
mov
push
cwde
or
aas
pop
mov
dec
sub
out
ret
jmp
cmp
jne
jmp
sub
je
adc
mov
scas
inc
dec
push
push
dec
dec
inc
mov
push
movs
or
mov
adc
push
xlat
push
js
inc
sbb
xor
xchg
pushf
test
cmp
dec
ror
or
or
xor
or
es
push
push
xchg
je
and
int3
mov
inc
inc
mov
mov
nop
pop
(bad)
lahf
retf
inc
add
dec
xchg
xchg
movs
imul
iret
das
push
adc
addr16
aad
inc
push
fwait
inc
nop
test
sar
cmp
sete
push
iret
or
scas
mov
dec
popf
mov
or
jmp
adc
adc
lds
cmp
xchg
or
dec
mov
mov
outs
fs
sub
scas
out
imul
rcr
and
(bad)
xchg
jg
ret
mov
and
pop
das
pusha
mov
fisttp
push
sbb
inc
dec
das
jo
sub
pop
dec
xor
das
xor
rol
loopne
mov
rol
jbe
cld
inc
inc
retf
inc
dec
cmp
push
adc
daa
push
xchg
mov
pop
ins
dec
add
push
inc
and
dec
or
sbb
popf
cmp
adc
jo
cmp
and
test
daa
lea
mov
mov
cmp
fs
mov
pop
fwait
gs
movs
push
loope
cmp
dec
and
jmp
mov
lds
out
cwde
inc
xor
mov
mov
adc
(bad)
or
mov
imul
or
fmul
adc
jl
imul
mul
inc
pop
mov
dec
cmp
xor
push
cmp
mov
dec
retf
outs
dec
add
add
dec
mov
or
movs
jbe
push
daa
ret
cmp
fisubr
jmp
int
adc
mov
ds
xchg
lea
inc
mov
mov
cmps
(bad)
or
(bad)
and
int3
mov
aam
nop
fsub
xchg
adc
xchg
lea
nop
aas
shl
aam
imul
stos
daa
adc
pop
sbb
add
or
aad
rol
pop
xor
push
add
push
xchg
lods
pop
test
fsub
mov
sub
push
inc
dec
sub
xchg
call
sbb
cmp
jne
inc
lea
adc
mov
inc
mov
mov
push
add
push
sub
adc
ret
add
imul
(bad)
sbb
in
inc
pop
and
daa
jle
(bad)
sub
cmp
and
test
sub
add
icebp
push
adc
push
mov
je
inc
adc
push
rcr
cs
or
adc
inc
out
push
adc
adc
add
cmp
mov
add
enter
icebp
sbb
jb
dec
adc
out
popf
and
jne
pop
ret
mov
imul
xchg
mov
adc
jp
mov
adc
rol
and
add
sbb
stos
popa
loope
cmp
lea
xchg
pop
push
sbb
jb
push
xchg
pop
add
adc
inc
pop
push
(bad)
cld
mov
outs
pop
and
fadd
movs
pop
add
add
mov
xor
test
test
ret
leave
(bad)
sbb
xlat
pop
into
mov
test
je
xor
or
ds
inc
iret
mov
cli
cmp
and
retf
sbb
scas
mov
out
loop
popa
inc
add
jp
dec
cs
fdiv
mov
sar
jge
sbb
pop
lahf
neg
push
adc
sbb
inc
dec
xor
fadd
mov
je
sbb
cmp
xchg
fcomip
mov
adc
(bad)
dec
mov
xchg
int3
sbb
out
ror
dec
idiv
pop
push
je
call
push
mov
call
inc
pop
cmps
pop
imul
inc
jle
cs
push
add
or
imul
and
add
jo
mov
mov
adc
adc
iret
push
jle
mov
dec
adc
movs
jne
mov
mov
and
jnp
mov
les
sbb
or
jne
aad
ret
lea
and
and
adc
push
adc
aaa
out
pop
adc
mov
outs
outs
outs
pop
je
mov
mov
ja
mov
movs
inc
cmps
inc
add
push
sbb
lods
push
adc
or
xor
pusha
loop
(bad)
add
push
add
push
or
test
xor
aas
pop
or
xor
je
adc
or
xchg
sub
or
dec
cmp
mov
(bad)
pop
jl
test
push
jo
xchg
mov
or
movs
jb
pop
or
push
imul
cmp
data16
data16
jae
imul
mov
or
sub
or
adc
nop
jp
jp
jle
add
xor
cli
xchg
mov
add
or
pop
cmp
outs
xor
mov
add
adc
inc
stos
or
jge
fistp
lock
je
loop
mov
xchg
dec
push
nop
rcl
ret
and
fwait
into
movs
mov
or
retf
pop
xchg
xor
mov
push
push
dec
inc
inc
jb
jo
mov
xchg
xor
sahf
outs
xor
mov
mov
and
add
mov
jnp
mov
push
or
fcom
mov
gs
mov
push
or
stc
mov
ins
sub
out
pop
jne
adc
mov
(bad)
clc
sub
mov
dec
jmp
sub
sbb
jmp
adc
add
jl
xor
shl
cmps
test
push
inc
cmp
jmp
nop
lea
sub
test
cwde
arpl
mov
mov
mov
adc
aaa
push
inc
inc
leave
pop
push
mov
inc
mov
or
mov
sbb
mov
lea
out
jo
imul
pop
pop
div
and
es
pop
cmps
outs
sbb
js
mov
adc
cmp
adc
inc
ret
add
push
lock
xor
leave
enter
push
inc
ss
xor
xchg
mov
xlat
ss
cmps
mov
or
test
jmp
test
cmp
add
nop
inc
ficomp
jb
int3
push
push
jg
lock
jns
jp
not
mov
sub
(bad)
sbb
push
push
bound
jecxz
push
push
add
js
inc
jecxz
iret
cld
(bad)
adc
(bad)
xchg
push
mov
push
js
loope
push
cmp
movs
fbld
mov
lea
or
push
mov
pop
add
add
or
clc
lods
and
fcomp
aas
jne
jo
test
das
ja
add
or
ja
add
push
push
mov
jge
lea
sbb
or
and
push
adc
push
adc
or
rcr
mov
pop
bound
std
repnz
lods
sub
adc
test
mov
sbb
inc
pop
fstp
pop
xchg
cmps
imul
loope
mov
add
pop
fist
inc
inc
or
fild
fmul
fild
fsubp
imul
or
mov
lea
fst
xchg
sbb
fucomp
adc
inc
mov
add
mov
movs
xchg
sbb
sbb
cmp
sbb
jo
push
ins
push
mov
inc
dec
mov
add
mov
and
adc
mov
stos
xor
xlat
xor
shl
add
and
out
and
xor
sbb
not
xor
nop
jmp
or
add
sbb
je
sar
pop
mov
sbb
mov
test
lock
fidiv
push
pop
ins
cmp
mov
stc
shr
xor
inc
cmps
sub
mov
cmps
sub
mov
test
inc
xchg
xchg
inc
add
sar
jp
inc
push
loopne
push
ror
jl
or
add
inc
mov
push
enter
xchg
dec
dec
rol
cs
test
loopne
sub
push
test
pop
jmp
sbb
mov
push
add
xlat
push
pop
ret
mov
xchg
lods
call
push
jb
inc
add
cmp
outs
cmp
push
(bad)
dec
dec
mov
inc
faddp
popa
push
(bad)
aaa
call
fdivp
dec
mov
in
or
test
xor
test
retf
xlat
imul
shr
test
imul
leave
(bad)
call
add
dec
bound
cmp
adc
add
adc
inc
push
xlat
jo
pop
cwde
dec
or
jnp
retf
mov
add
les
out
lahf
or
add
mov
mov
and
daa
cmp
test
gs
(bad)
sti
mov
or
inc
fimul
pop
ficomp
jmp
mov
leave
leave
or
fwait
adc
xor
adc
call
fimul
test
add
mov
out
cwde
sbb
push
test
xor
mov
xor
mov
(bad)
adc
jb
pcmpeqb
iret
lods
push
pushf
test
fistp
inc
rol
pop
pop
dec
addr16
ret
(bad)
xor
int3
push
pop
lock
and
jne
sbb
push
pop
jle
mov
mov
sbb
cmp
mov
pop
xor
movs
pusha
push
adc
ds
call
hlt
shl
mov
call
retf
stc
movs
and
or
xchg
push
add
js
or
mov
push
adc
adc
js
adc
pop
fwait
ins
xor
repz
js
aaa
lea
push
in
retf
and
test
outs
sbb
(bad)
call
clc
clc
mov
xor
loop
call
js
xor
ins
mov
and
or
sub
adc
es
and
enter
fwait
nop
push
mov
and
mov
mov
push
rcl
push
js
nop
push
mov
dec
push
cmps
pop
and
iret
mul
mov
movs
or
std
ins
ss
sub
hlt
mov
xor
push
jl
push
scas
imul
dec
or
xchg
pop
xlat
jge
ds
cdq
xor
and
mov
or
cmp
repz
cdq
sub
xor
push
mov
js
jmp
add
xchg
out
test
sub
xor
lahf
pop
je
push
add
push
call
add
out
nop
pusha
mov
shl
ins
icebp
jl
add
ror
adc
xchg
out
out
xchg
jmp
sub
sub
daa
xchg
xchg
or
or
loope
push
rcr
fld
push
xchg
add
call
xchg
rol
mov
add
scas
push
push
or
or
das
int
add
jmp
sub
push
add
push
or
pop
xchg
pop
cwde
inc
jb
and
cmps
sbb
cmp
push
ds
dec
dec
enter
fisub
pop
cmp
imul
dec
sbb
jl
in
mov
push
inc
cmp
ss
mul
not
addr16
jmp
add
in
fs
and
nop
jmp
dec
scas
sub
dec
xchg
sub
dec
sub
xor
add
or
mov
jmp
push
push
adc
and
sbb
adc
nop
dec
(bad)
loop
int
nop
mov
aas
add
imul
xor
push
sbb
adc
leave
shl
dec
jle
lock
add
cmps
push
jg
in
ss
nop
mov
xchg
movs
push
mov
jne
sub
ins
jmp
call
push
cld
sbb
add
pop
jmp
ret
dec
pop
cmc
ss
add
inc
stos
repnz
sub
push
dec
push
add
jle
call
push
(bad)
jmp
xchg
cli
ins
adc
pop
les
cmp
jne
xor
xor
mov
pop
xor
sub
pop
adc
and
in
push
cmc
jmp
int3
iret
cld
and
cs
in
outs
sbb
mov
adc
call
jmp
or
outs
clc
jbe
mov
xchg
or
popf
cmp
lahf
push
sub
aam
mov
sub
add
daa
jmp
xor
in
sahf
hlt
test
(bad)
loopne
push
sbb
cwde
in
xchg
sub
jge
inc
pop
xor
pop
lock
jne
loopne
shl
push
jno
xor
push
add
cmp
mov
fs
and
add
sbb
xchg
lahf
mov
cmps
ror
dec
test
jae
jmp
cmps
sahf
movs
dec
ret
arpl
cmp
adc
test
cmp
popf
cmp
jb
adc
mov
or
and
pop
xor
ret
fcomp
sbb
push
and
or
xchg
inc
and
test
sub
jecxz
adc
mov
fnsave
mov
mov
pop
daa
sbb
fcom
aad
rcr
data16
dec
inc
mov
add
mov
adc
ret
add
out
xor
xchg
pop
sbb
push
or
push
dec
mov
(bad)
cmp
xchg
imul
sub
sbb
jge
push
mov
xchg
aam
or
(bad)
push
dec
aaa
addr16
js
inc
push
add
aam
pop
les
inc
ins
gs
sub
popa
push
test
push
cmp
sub
mov
push
mov
fs
imul
ja
nop
ret
pop
sbb
xchg
xchg
movs
push
out
shl
mov
dec
inc
and
sub
cmp
pop
xchg
dec
lahf
outs
stos
dec
and
fiadd
push
mov
jl
mov
pop
cmp
sub
bound
(bad)
daa
ret
pop
inc
daa
inc
pop
aam
push
rcr
dec
or
mov
loop
loopne
cwde
cmps
mov
xor
and
sub
dec
call
pop
dec
xor
push
aam
add
sbb
adc
aam
(bad)
inc
push
pop
xchg
in
inc
cmp
mov
stos
jmp
mov
je
out
outs
sbb
mov
sbb
or
xchg
iret
mov
sbb
sbb
dec
jp
inc
sbb
add
push
add
mov
mov
shl
xor
xor
inc
lods
xchg
xchg
mov
push
fs
inc
xor
mov
outs
retf
and
jle
mov
mov
jle
push
lock
cmp
jge
lahf
cmps
sbb
adc
jle
cmps
xor
cs
or
sub
xchg
or
dec
sub
pop
aaa
je
mov
bound
rol
sbb
sbb
test
rcl
push
or
loopne
fwait
pavgb
rcr
fs
pushf
and
loope
adc
push
fwait
ret
sub
jl
add
rcl
dec
dec
stos
mov
mov
adc
and
or
sahf
(bad)
(bad)
jo
bound
stc
adc
daa
or
xchg
test
cmp
repnz
mov
dec
push
cmp
push
dec
pop
mov
xchg
sbb
aad
dec
stc
add
(bad)
mov
mov
or
jno
jg
jo
push
es
jl
es
push
out
pop
inc
push
sub
pop
push
in
pop
or
cmps
pop
jno
sar
pop
jle
and
mov
arpl
adc
test
loope
das
lahf
mov
das
mov
push
inc
or
pop
adc
sbb
daa
or
xchg
xor
js
fist
movs
mov
imul
js
mov
push
pop
sub
mov
and
imul
ret
retf
and
mov
cwde
jb
push
sub
fiadd
gs
mov
test
ret
mov
jb
and
push
pop
add
push
jo
mov
add
push
mov
and
dec
loope
push
cld
or
or
and
pop
and
xor
sub
daa
daa
or
cld
pop
or
add
xchg
xor
out
sub
or
sbb
ficom
and
push
sbb
stos
imul
push
adc
push
clc
fld
fwait
jns
daa
push
xchg
jl
inc
push
cmp
dec
(bad)
or
jl
sbb
inc
jne
lea
inc
cmp
inc
ds
xchg
ins
and
and
or
in
cmps
mov
ror
or
xchg
cmp
mov
js
push
das
xlat
adc
add
xchg
pop
and
inc
mov
ret
jnp
das
mov
inc
and
xchg
push
mov
cwde
push
pusha
or
int3
push
imul
nop
stc
in
adc
sub
sbb
add
add
sbb
pop
outs
ret
in
sub
cs
and
xchg
and
or
mov
lea
fcom
add
nop
ja
jbe
inc
scas
enter
sbb
js
or
mov
call
add
add
jns
lahf
add
or
add
ins
cmp
push
add
gs
idiv
fild
push
jo
int3
or
mov
sub
sub
adc
sbb
cmp
iret
xor
and
xor
fwait
lahf
push
ret
dec
or
pop
mov
je
add
jmp
bnd
and
aam
int3
(bad)
cmp
xchg
add
je
rcl
and
dec
dec
sub
frstor
mov
push
dec
push
push
dec
and
ficomp
pop
data16
out
sub
cmp
fsub
outs
stos
das
cmps
bound
and
pop
dec
push
mov
mov
inc
aam
fimul
ret
je
mov
mov
shl
retf
les
xor
push
push
inc
loopne
icebp
nop
dec
scas
les
sbb
(bad)
sbb
pop
sub
add
mov
add
sar
sub
jl
jne
xor
cmp
dec
cmp
dec
rol
fs
sbb
sub
add
cld
int3
dec
je
mov
inc
mov
or
aad
sub
sbb
adc
movs
or
xor
push
or
push
jg
adc
mov
jmp
sbb
xchg
cs
loop
(bad)
push
add
iret
sbb
shl
dec
inc
sbb
rol
mov
es
les
test
or
cmp
and
or
cdq
es
out
mov
lods
nop
cmp
and
jecxz
or
fdiv
in
fdivr
mov
bound
and
xor
outs
movs
retf
or
mov
mov
rcl
sub
sub
cmp
sub
js
xor
xchg
jle
xor
adc
hlt
xor
call
mov
jge
or
dec
lods
loop
cli
xor
push
dec
jl
(bad)
jo
gs
push
or
adc
xlat
shl
dec
or
mov
test
scas
fdivrp
movs
into
test
sbb
dec
das
fs
dec
sbb
hlt
sub
sbb
add
jbe
mov
in
xor
shr
jbe
(bad)
pop
jge
enter
scas
lods
pop
mov
shr
and
or
xor
or
movs
inc
and
test
out
imul
jmp
cmp
xchg
pop
mov
sar
shr
xchg
xor
pop
and
add
in
outs
dec
adc
rol
movs
dec
mov
pop
push
mov
mov
adc
ja
jmp
push
daa
test
inc
push
daa
arpl
test
jmp
cmps
pop
inc
push
cmp
rcl
cld
jge
movs
jle
lahf
enter
jp
das
rcl
or
adc
inc
adc
inc
sti
sub
js
je
inc
popa
retf
or
pop
mov
lea
dec
pop
call
pop
mov
jmp
sbb
ins
loope
pushf
and
enter
push
dec
xor
sub
xor
mov
test
fsubr
lods
add
inc
adc
cmp
adc
sub
sar
ss
sahf
jmp
aaa
hlt
jmp
pop
push
xchg
jo
neg
push
mov
sub
popf
sub
mov
or
xor
or
xchg
mov
call
dec
xchg
add
dec
call
mov
int3
xchg
test
pusha
adc
jb
jl
dec
bound
add
adc
add
jecxz
loopne
jl
push
xchg
sub
movs
bound
push
jbe
cmp
or
loope
xor
pop
add
pop
add
jg
in
jnp
(bad)
lock
scas
pop
rcr
adc
dec
mov
out
cmp
arpl
jge
in
mov
iret
pop
inc
push
lods
or
mov
xor
add
jmp
sbb
push
sub
lock
xchg
ins
xchg
lea
fdivr
push
adc
fsubp
ret
cs
push
mov
pushf
add
paddw
add
push
push
xchg
ror
jno
movs
out
aam
das
pop
sti
iret
jnp
or
jp
push
dec
pop
psubusw
cmp
adc
ret
enter
inc
push
daa
xor
(bad)
in
inc
sbb
popa
cmp
sbb
sub
aaa
mov
out
fstp
in
mov
lock
push
test
and
(bad)
push
pop
daa
out
sbb
sub
(bad)
cmp
jne
pop
movs
pop
dec
and
or
shl
std
sbb
lds
add
lods
mov
jns
pop
sub
push
mov
sbb
xchg
xchg
dec
repnz
push
iret
or
dec
xchg
je
or
sbb
and
nop
xor
mov
pop
pop
test
in
sar
iret
(bad)
cmps
mov
outs
sub
ins
xor
lahf
adc
test
jg
shl
mov
in
mov
leave
fabs
xchg
add
dec
cmp
sub
(bad)
sbb
mov
mov
sbb
mov
popa
(bad)
mov
(bad)
test
adc
gs
retf
push
(bad)
retf
test
add
pop
cmps
sbb
adc
push
cmp
cmp
pop
jmp
xor
sub
xor
test
pop
cdq
sub
dec
or
nop
inc
push
add
push
inc
movaps
xor
mov
pop
mul
xchg
lock
dec
ja
imul
pop
and
das
jbe
and
pop
pusha
pop
push
dec
push
jb
jnp
xor
jns
rcl
jmp
cli
mov
lock
adc
pusha
push
out
lods
popa
jmp
outs
pop
(bad)
pusha
add
std
mov
in
pusha
adc
jb
cmp
inc
sbb
call
hlt
inc
and
cwde
xor
and
mov
add
push
and
xlat
mov
push
sbb
cld
shl
push
or
push
and
movs
in
mov
shl
push
push
pusha
pop
cmps
sub
pop
or
add
inc
xor
mov
or
add
imul
frstor
adc
mov
xor
mov
mov
dec
mov
push
adc
(bad)
mov
xchg
jnp
add
cmp
popf
pop
xor
xor
fucomi
fisub
adc
jmp
pop
xor
std
adc
xor
pushf
dec
test
add
or
add
jne
push
into
aam
xor
inc
ret
or
pop
bound
inc
(bad)
pop
je
inc
add
and
dec
cmp
inc
jnp
sbb
cdq
ins
sub
fdiv
js
add
adc
js
js
gs
jecxz
add
push
ins
sub
mov
sub
mov
test
inc
xchg
fs
cmp
jne
inc
adc
pop
jecxz
mov
lea
xor
and
add
xor
dec
ss
sbb
test
cmp
mov
aas
(bad)
jmp
clc
repz
push
out
test
outs
ror
mov
test
sbb
jge
(bad)
arpl
ss
xchg
and
(bad)
ins
pushf
pop
sbb
fsqrt
cmp
jle
xor
mulps
fild
out
and
mov
imul
add
add
xor
daa
add
mov
cmp
push
cmp
or
ret
fstp
movzx
in
push
in
or
ja
jb
adc
push
or
add
mov
pop
add
mov
mov
dec
inc
push
and
add
fs
sbb
add
popa
rol
fmul
mov
mov
and
add
inc
push
(bad)
adc
(bad)
xor
xor
push
dec
sub
jmp
adc
in
lods
inc
push
adc
fcom
sti
and
inc
or
inc
adc
adc
mov
mov
push
xchg
outs
test
or
adc
and
xchg
sbb
sbb
adc
ja
sub
adc
xor
adc
push
add
sub
(bad)
rcl
dec
loope
adc
adc
enter
fisub
add
pop
aad
mov
nop
cld
jae
test
inc
je
pop
lods
movs
push
retf
and
or
mov
idiv
and
inc
xchg
lods
cmp
or
or
imul
ror
pop
xlat
inc
pushf
mov
jb
dec
or
add
mov
adc
jo
mov
xor
inc
push
mov
(bad)
popf
pusha
loope
aas
push
ja
pop
or
test
loopne
jns
xchg
and
add
and
cmp
sub
clc
ins
xor
rcl
out
add
sbb
push
inc
push
pusha
sub
add
xor
and
inc
and
mov
dec
sbb
sbb
fcom
push
aam
xor
push
cli
jo
add
or
push
dec
sub
push
sar
or
iret
add
mov
and
mov
and
sub
ja
xchg
ins
mov
mov
jnp
hlt
sbb
inc
jo
dec
leave
push
mov
inc
sub
fsub
fist
xor
pop
dec
cmp
add
stos
out
adc
fcmove
add
xchg
mov
xchg
pop
cmp
pop
pop
lea
cmp
mov
popa
jne
and
xlat
lea
or
rcl
pop
pop
loop
es
or
jb
(bad)
adc
retf
js
fadd
or
mov
pop
mov
pop
adc
mov
lahf
and
pop
movs
fs
mov
leave
sbb
lock
pop
test
or
or
in
and
add
add
cs
inc
pusha
add
push
fld
and
push
jmp
(bad)
sub
cmp
pop
sahf
(bad)
pop
inc
in
inc
pop
repnz
div
ins
outs
mov
dec
mov
pop
fsubp
fdivr
pop
sbb
xor
repz
sbb
and
mov
cld
mov
add
in
int
dec
loopne
mov
aam
adc
mov
jno
(bad)
ss
add
je
mov
out
and
nop
sub
lahf
dec
icebp
mov
cmp
cmp
mov
and
mov
xchg
xor
xchg
ret
js
or
addr16
js
inc
or
or
xor
sub
dec
inc
loopne
inc
jp
dec
inc
mov
test
dec
sbb
and
sbb
mov
add
iret
or
je
jo
cmp
cmp
test
fxch
and
fild
test
push
or
sbb
leave
icebp
ja
pusha
shl
cs
inc
enter
adc
cwde
add
out
pop
sub
(bad)
lahf
sub
xlat
xchg
arpl
js
mov
je
aad
cmp
fadd
cmp
sbb
and
xor
sbb
sub
xlat
add
lods
adc
sub
out
push
cs
arpl
adc
nop
mov
dec
aaa
sbb
add
gs
pusha
loope
ss
mov
cmps
dec
pusha
aad
psubd
pop
dec
clc
mov
sub
push
sbb
xor
retf
push
push
sbb
push
add
push
xlat
hlt
sub
dec
and
mov
adc
call
add
enter
lahf
xrelease
or
add
dec
adc
xor
imul
dec
xrelease
pushf
retf
addr16
xor
cmp
xor
mov
and
stos
dec
rol
add
shl
dec
lods
and
jmp
ins
test
scas
xor
clc
mov
xchg
pop
dec
loopne
xor
mov
mov
jmp
xlat
xor
inc
outs
(bad)
push
inc
inc
enter
pop
xchg
pop
add
loope
sahf
sbb
adc
dec
lods
adc
and
pushf
mov
fdiv
inc
cli
and
or
push
add
jg
xchg
push
pop
adc
je
push
pop
and
movd
ja
jo
push
and
aad
or
adc
jl
or
dec
bound
inc
outs
shr
or
icebp
ss
in
adc
mov
movs
xchg
pusha
or
sub
push
loope
repz
mov
mov
in
adc
sbb
cs
jae
sbb
adc
push
pop
jmp
sbb
cmp
sbb
cmp
adc
and
mov
xor
daa
inc
ss
push
add
cmp
jne
test
dec
int
sub
clc
xchg
lock
call
in
push
rcl
into
shr
fdivr
jb
add
cmc
adc
sub
push
mov
and
push
imul
test
jo
outs
fisubr
xor
cmp
inc
cmp
pop
cmp
imul
leave
js
jno
outs
clc
or
sbb
add
sub
shl
repnz
sbb
mov
add
retf
dec
push
(bad)
push
mov
jae
sub
mov
pop
mov
pushf
mov
(bad)
and
pop
dec
repnz
xchg
imul
and
loop
data16
inc
(bad)
scas
push
lock
enter
outs
and
popf
pop
mov
cdq
or
je
or
xor
add
and
sar
or
inc
xor
dec
cli
sbb
xor
je
inc
lock
sbb
call
xor
or
pushf
ret
outs
in
out
jo
sub
mov
repz
loop
adc
ins
xor
loop
inc
mov
xchg
test
xor
cmps
push
add
jl
mov
imul
ds
push
sub
sahf
inc
add
and
or
movs
fstp
lea
sub
add
add
adc
jo
add
sbb
inc
dec
out
inc
cmp
dec
and
nop
aam
mov
jae
xor
sub
mov
clc
loope
push
inc
aam
sahf
jnp
mov
pop
cmps
mov
mov
sub
data16
imul
ss
ins
push
xor
inc
cli
xchg
adc
pushf
cmps
loopne
movs
mov
xor
fldenv
arpl
sbb
ror
or
sbb
or
xchg
dec
or
unpcklps
test
jns
mov
fadd
cdq
inc
mov
pop
add
dec
stc
xor
push
jbe
ror
hlt
shl
test
push
jmp
pusha
sub
sbb
push
clc
rcl
mov
jecxz
push
pop
loope
jp
lods
retf
adc
dec
add
into
sbb
neg
in
or
and
mov
std
das
in
repnz
sbb
mov
pusha
test
xchg
cmp
mov
jmp
repz
cli
(bad)
adc
dec
xlat
lock
dec
sub
push
push
clc
adc
push
(bad)
cmps
clc
jecxz
or
xor
in
les
ret
mov
cmp
(bad)
(bad)
aad
sbb
add
mov
inc
fisubr
sbb
adc
mov
dec
nop
out
hlt
adc
repnz
mov
jmp
mov
cmp
add
fld
xor
push
and
sub
sbb
or
inc
aas
nop
add
in
rcr
fild
jmp
adc
leave
sbb
jae
or
and
push
mov
mov
(bad)
aad
aas
mov
inc
cli
xchg
rcr
cmp
aas
and
mov
stos
rcl
mov
xor
xchg
daa
push
or
pop
daa
aas
in
sbb
call
jbe
adc
aam
sahf
fisttp
mov
jmp
push
and
push
adc
xor
inc
out
push
mov
fisttp
cmp
bound
and
scas
lds
(bad)
sub
xchg
adc
mov
sub
mov
or
dec
movs
xchg
ins
neg
xchg
push
lods
test
push
imul
pop
nop
pusha
adc
adc
or
xbegin
(bad)
mov
stos
sbb
ror
lods
cld
push
sbb
shl
or
pop
aaa
sub
mov
out
(bad)
cmps
shl
inc
adc
push
adc
add
push
or
jmp
fild
inc
pop
ret
or
add
aaa
repz
sbb
and
cmp
xor
sahf
or
rcr
pop
jno
jnp
adc
cs
fidivr
cmp
jne
aad
adc
test
dec
jb
xchg
stos
dec
cmp
js
lock
add
inc
jnp
pop
movsx
jg
sub
sbb
jle
and
lds
add
cmps
test
sub
pop
inc
aaa
mov
clc
or
adc
ins
xor
test
arpl
daa
xchg
and
stc
(bad)
mov
(bad)
adc
xchg
scas
ja
add
mov
add
cld
ret
cmp
adc
push
cld
mov
add
mov
in
dec
fsub
cmp
test
dec
jmp
test
ret
inc
mov
push
cwde
mov
add
xchg
not
mov
mov
jle
xlat
cmp
and
ror
bnd
sbb
test
ret
adc
aas
shl
aam
and
xor
push
repnz
jo
repnz
cmp
pop
xor
test
pop
std
das
call
rcl
sbb
retf
popa
bound
mov
inc
pop
outs
cmp
or
mov
mov
mov
cmps
rcr
adc
in
das
xor
aam
stc
js
into
aaa
mov
sub
push
(bad)
imul
ret
das
jo
add
add
push
ins
stos
rol
iret
push
hlt
inc
push
push
jmp
push
sar
inc
ins
push
test
pop
mov
pop
dec
fcomp
(bad)
nop
push
fadd
inc
push
pop
add
inc
mov
sbb
das
icebp
and
push
xchg
clc
push
add
loopne
retf
cmc
push
push
js
iret
xor
shl
(bad)
inc
add
out
test
sub
dec
(bad)
sub
(bad)
psubsb
xor
xor
retf
daa
cmp
or
lods
cmp
mov
push
push
add
dec
out
test
adc
ds
daa
adc
adc
push
mov
fistp
or
mov
xor
outs
or
push
inc
push
sub
mov
xor
add
leave
sbb
loope
cmps
jno
pop
lahf
cmc
nop
sub
call
aam
enter
mov
sete
sub
test
cmp
ss
ret
div
mov
pop
add
clc
cs
xor
sub
xor
pop
outs
xchg
and
push
pop
imul
and
xor
adc
enter
add
cmp
shr
xchg
sar
pop
cmc
push
xchg
js
pop
enterw
imul
jne
cmp
push
cdq
test
push
lock
imul
aam
inc
cmps
inc
mov
adc
mov
enter
and
mov
test
imul
or
adc
cmp
cmc
add
movs
mov
mov
cmp
push
mov
es
es
xchg
pop
inc
pop
inc
or
repnz
add
mov
jg
test
cmp
xchg
push
sahf
push
or
push
dec
cs
push
iret
jmp
call
mov
cmp
jb
adc
shl
(bad)
jns
sbb
and
cs
or
shl
inc
xchg
xor
xchg
pop
jmp
call
mov
add
je
push
je
rol
and
cld
dec
cld
test
push
push
dec
cwde
(bad)
aam
inc
inc
sti
(bad)
movs
dec
pop
iret
add
pop
(bad)
cmp
xor
pop
fnstsw
and
loope
add
into
sub
add
das
push
daa
add
fstp
pusha
add
test
(bad)
sub
pop
sub
add
add
jne
or
push
mov
leave
add
pop
pop
jbe
pushw
or
popa
shufps
mov
es
cmp
fimul
iret
mov
std
addr16
cmp
and
jecxz
lea
test
and
repz
test
jge
sbb
int
push
and
shr
out
pop
xor
push
imul
mov
cmp
add
dec
call
sar
outs
data16
jge
dec
or
outs
scas
pushf
add
inc
neg
dec
rol
or
push
bound
pop
push
or
rcl
ds
lds
and
jmp
and
cmp
cmp
or
ret
shl
push
dec
xchg
rcl
popa
scas
jo
test
loop
icebp
jg
jne
mov
rcpps
outs
loopne
scas
fcmovnb
ins
repz
jno
push
cmovno
dec
mov
test
mov
push
leave
jne
and
scas
cmp
pop
add
add
push
adc
push
dec
mov
add
or
dec
lds
xor
push
or
jbe
das
dec
fdivr
ret
ret
js
nop
push
xchg
or
add
gs
push
push
or
jo
and
mov
pop
mov
outs
push
outs
mul
mov
jmp
lds
or
pop
je
dec
and
ins
pop
std
push
cmp
jp
das
or
and
shl
popf
cli
push
jmp
xchg
adc
xor
pop
jg
test
xchg
ja
push
cli
into
push
mov
sub
rcl
cmp
sbb
dec
test
pop
sahf
and
sub
or
push
into
stos
jne
lods
sub
cmps
push
out
stos
add
scas
adc
adc
pop
sub
sub
movs
mov
push
cs
sbb
ror
push
arpl
scas
fwait
sti
inc
pop
pop
data16
or
mov
ficomp
mov
or
add
pusha
dec
add
jae
add
lock
shl
movs
lods
mov
test
and
jae
jg
ror
xchg
jmp
cmp
jg
mov
adc
sub
lahf
jg
add
adc
pop
jmp
add
jb
mov
icebp
dec
rcl
jmp
mov
inc
xor
out
dec
add
test
test
mov
add
xor
cmp
adc
nop
mov
gs
lock
(bad)
dec
rcl
mov
add
(bad)
dec
push
cmp
por
add
jne
pop
iret
adc
push
movs
cmp
sub
test
push
fstp
push
jno
add
aad
mov
sti
out
sub
cmc
and
add
mov
and
addr16
or
aaa
jns
mov
stos
sbb
or
aam
and
xlat
jne
push
rol
adc
add
jmp
or
cmp
sub
js
adc
jbe
jl
cmc
sub
loope
movs
adc
inc
xchg
inc
js
nop
data16
mul
add
mov
int3
outs
clc
lds
or
or
and
in
aam
inc
pop
xchg
push
jecxz
cs
fisub
sbb
inc
xor
add
mov
lods
cmp
add
les
out
inc
adc
dec
ins
ja
push
push
or
xor
mov
push
(bad)
out
jg
add
push
call
ins
lods
push
movs
add
push
xchg
lods
mov
inc
sbb
cmp
or
arpl
movs
dec
jnp
xchg
int3
ins
aaa
mov
inc
or
push
jo
dec
push
and
inc
push
adc
in
sbb
mov
cmp
(bad)
fcmovbe
jp
out
add
push
inc
inc
sbb
jbe
cli
adc
cmp
adc
or
in
daa
sub
adc
inc
mov
std
push
cmp
in
push
xor
cmp
mov
or
cmp
sub
shl
mov
add
leave
dec
popa
jmp
mov
xor
mov
mov
cmp
xchg
and
xchg
sahf
ins
sub
and
dec
jns
add
test
jecxz
test
lds
jo
retf
in
mov
div
add
pop
gs
xor
mov
jns
mov
add
ret
mov
popf
mov
fisttp
sbb
idiv
sbb
dec
loopne
aaa
and
pop
pusha
dec
arpl
movlhps
lds
dec
dec
sbb
xor
push
mov
pop
int3
adc
pop
cmp
and
mov
xor
daa
adc
fldenv
jmp
sbb
pop
rcl
inc
sub
out
ins
aaa
pop
or
sub
xor
cmp
not
push
sub
push
push
daa
sub
dec
imul
inc
sbb
jmp
xor
daa
push
shl
inc
cs
and
fadd
loopne
inc
shl
popa
fistp
xor
push
mov
pop
push
pop
rcl
(bad)
dec
or
int
add
push
fnstenv
gs
clc
in
repz
jmp
(bad)
out
sbb
loope
mov
or
push
xor
add
adc
mov
retf
fcmovbe
xchg
aad
add
pop
jae
scas
push
sub
mov
mov
and
push
or
adc
pop
popa
es
mov
jno
pop
inc
lahf
dec
fidiv
call
adc
xlat
push
lahf
icebp
ret
shl
outs
sub
sbb
and
inc
shr
adc
adc
jl
cmp
(bad)
outs
inc
pusha
and
add
in
in
adc
mov
pop
xor
xchg
gs
dec
mov
add
sbb
adc
shl
stos
arpl
cmp
fcom
lahf
xor
cmp
sbb
adc
cmp
cs
cmp
sbb
xlat
lods
xchg
or
push
test
add
push
cmps
das
mov
in
minps
rol
dec
push
in
sahf
ret
adc
out
outs
xchg
popa
add
cmp
pusha
jae
(bad)
hlt
lahf
je
out
xor
das
push
push
push
or
push
push
and
push
push
push
xor
movs
sar
push
lock
enter
inc
js
xchg
adc
cdq
inc
xlat
sub
push
push
sbb
jno
stos
pusha
aam
push
cmp
clc
test
mov
test
push
daa
cmp
cmc
xchg
dec
repnz
or
add
test
pop
adc
icebp
add
cmp
push
add
pop
loop
in
push
mov
icebp
mov
call
mov
in
test
fs
push
ret
push
popf
pop
lock
dec
js
prefetcht0
outs
xor
outs
xchg
cwde
adc
jnp
pop
xchg
push
and
or
pop
jg
lea
add
sub
jge
add
inc
inc
fcomp
sub
lahf
inc
arpl
xchg
cld
mov
imul
xchg
add
add
pop
popa
and
or
and
cmp
sub
mov
out
xor
add
fistp
sub
or
push
mov
(bad)
xor
push
daa
loop
add
mov
jmp
call
adc
loopne
imul
jmp
sbb
or
or
or
dec
xor
push
adc
test
mov
scas
call
mov
pop
push
jge
xchg
mov
dec
or
jb
inc
add
jp
sub
scas
sub
pop
and
cmps
sub
xchg
in
or
ds
sub
dec
sti
hlt
sub
push
clc
clc
lock
push
imul
mov
adc
outs
cmp
push
test
aam
jb
add
shr
add
pop
in
jo
sahf
cmp
mov
aad
dec
push
jmp
mov
add
add
xchg
(bad)
pop
push
xor
jg
mov
call
mov
or
fisubr
add
cmp
add
or
jb
add
cmp
jbe
cmovbe
fiadd
shr
sbb
shr
jbe
or
xor
add
or
rcl
mov
xor
mov
retf
cmp
mov
mov
push
repnz
push
dec
or
(bad)
in
push
imul
sub
mov
mov
pop
lock
jmp
inc
and
adc
pop
xchg
and
jge
adc
or
test
mov
push
adc
cdq
sbb
push
mov
and
jle
adc
in
daa
cmp
rol
dec
sub
mov
out
(bad)
mov
mov
push
adc
fmul
adc
ja
or
mov
into
adc
lds
add
(bad)
mov
mov
xor
inc
push
mov
jl
jle
inc
ror
pop
cmp
and
shl
int3
or
sti
mov
xchg
cmp
clc
leave
movs
(bad)
sbb
imul
sbb
lods
push
ucomiss
inc
add
add
fadd
das
mov
sub
add
mov
scas
inc
sub
mov
test
mov
mov
into
sub
addr16
fld
dec
dec
mov
dec
mov
cwde
add
mov
jae
xchg
test
jge
dec
imul
adc
push
sub
add
stos
add
sahf
mov
mov
mov
fcom
sbb
dec
or
add
in
mov
mov
cmc
loopne
jns
dec
in
test
les
nop
adc
arpl
ret
xor
sub
cmps
dec
add
lods
fs
mov
int3
(bad)
call
sub
inc
sub
dec
shr
sub
repnz
stos
adc
sbb
dec
mov
lock
ret
rcl
push
ins
aaa
mov
fsubr
outs
mov
jnp
inc
dec
or
mov
cmps
add
xchg
xchg
add
xchg
sub
test
movs
imul
int3
inc
cdq
xchg
dec
hlt
add
adc
iret
daa
pop
stos
sub
adc
int
mov
push
imul
pop
aaa
push
shl
popa
cmp
sbb
mov
nop
fs
mul
je
int3
add
adc
pop
mov
enter
inc
or
push
and
das
popa
dec
les
sub
adc
dec
sbb
hlt
test
sbb
dec
aaa
adc
and
clc
rcl
xchg
sahf
add
fsub
aam
movs
push
(bad)
jle
and
dec
aam
sbb
jge
mov
(bad)
ins
sbb
in
xchg
push
dec
xchg
test
mov
and
push
in
dec
push
arpl
es
arpl
add
jge
rcr
add
es
movs
cmc
add
xchg
arpl
loopne
mov
dec
out
outs
dec
jo
xchg
xor
stos
retf
and
movs
xor
fdiv
ror
mov
add
nop
dec
mov
int
hlt
jecxz
push
loope
adc
xor
es
movs
je
and
imul
cwde
pop
cmp
and
sbb
xor
add
xchg
cvtps2pi
xchg
or
fistp
ja
push
add
xor
pop
pop
shr
pop
adc
xchg
jnp
outs
ss
daa
gs
popf
mov
add
lahf
pusha
xlat
jno
push
mov
sub
shr
add
adc
cmp
add
inc
mov
sbb
and
inc
add
push
inc
cmp
inc
imul
adc
adc
mov
or
les
add
mov
mov
mov
jmp
add
and
es
add
fistp
xchg
adc
les
xor
mov
push
inc
popa
jmp
fsub
hlt
cmp
pushf
leave
add
test
hlt
cmp
add
xor
push
mov
add
outs
(bad)
ror
hlt
test
popa
lods
add
test
add
add
retf
inc
sbb
sbb
add
nop
clc
scas
repnz
mov
inc
in
stc
xchg
sbb
xchg
add
hlt
add
adc
(bad)
arpl
mov
adc
add
inc
or
stos
xor
ret
add
jmp
adc
leave
pop
jns
add
dec
movs
lods
or
sub
add
cmp
sub
add
or
jb
adc
loopne
mov
push
or
jo
(bad)
and
es
iret
fwait
sbb
movs
add
lahf
push
xor
xchg
(bad)
mov
pop
pushw
xor
(bad)
adc
add
nop
xchg
mov
sbb
adc
dec
shl
inc
(bad)
repnz
mov
cmp
sub
add
test
ins
nop
sbb
jge
rol
and
inc
ror
and
add
adc
cmps
nop
inc
inc
mov
retf
and
gs
dec
call
call
or
sub
movs
cmp
hlt
push
mov
loope
jp
sbb
cmp
loopne
pop
inc
mov
xchg
adc
pop
cld
cli
xchg
popa
fs
cmp
adc
jno
add
push
adc
adc
nop
arpl
xor
mov
and
clc
dec
test
in
sbb
mov
sbb
call
mov
inc
push
add
add
out
mov
stos
mov
mov
add
loopne
sub
dec
(bad)
sbb
push
pop
inc
sub
cmc
pusha
test
mov
iret
out
jecxz
in
(bad)
sbb
xchg
add
add
push
push
or
pop
movs
pop
dec
jecxz
(bad)
in
mov
pop
mov
or
push
rol
pmaxub
push
sub
add
xor
adc
sub
ret
or
sbb
or
movs
pop
call
std
scas
or
adc
mov
xchg
mov
call
in
add
in
lods
jg
mov
jnp
jmp
aaa
cmp
sub
fldenv
or
mov
and
mov
jne
mov
ficom
or
pop
mov
mov
rol
rcl
cmp
(bad)
imul
xor
inc
jmp
inc
js
mov
or
mov
ficom
mov
inc
push
cs
enter
or
js
mov
or
and
or
loopne
scas
dec
popa
iret
push
xchg
(bad)
cmp
fwait
sbb
adc
push
js
popa
fcomp
int
lods
or
add
pop
adc
or
pop
test
push
jp
pop
ret
hlt
ret
loope
(bad)
cmp
je
push
jle
fimul
dec
cmp
retf
pusha
mov
xchg
push
js
cwde
xchg
push
pop
sub
xchg
cmps
and
or
(bad)
popa
loopne
cmp
pop
and
fst
daa
push
push
fprem1
or
sub
(bad)
aam
add
(bad)
dec
mov
dec
sub
or
nop
mov
jge
pop
and
enter
xor
xchg
jg
test
xchg
pop
inc
jmp
or
rcr
add
call
int
add
and
test
add
and
adc
or
and
xor
frstor
fsubr
loop
dec
not
and
xchg
inc
and
imul
leave
arpl
pop
lods
or
leave
push
lock
repz
fcmovnb
jle
cmp
xchg
push
mov
fs
adc
push
out
cmp
arpl
push
push
push
loope
and
inc
sar
movs
clc
xchg
mov
loopne
out
sub
adc
xor
in
inc
adc
cmps
repnz
mov
jmp
mov
push
push
ret
loopne
xchg
dec
inc
in
jbe
(bad)
daa
push
dec
test
mov
mov
dec
adc
outs
aas
fs
jne
mov
push
inc
inc
jle
pusha
les
in
cs
mov
push
ins
push
mov
jmp
iret
xchg
cmp
test
mov
or
or
cwde
jmp
cmp
icebp
stos
add
loope
inc
sbb
int
push
pop
sbb
retf
xchg
pop
popf
(bad)
sahf
push
add
movs
sub
jmp
sub
fld
sbb
inc
clc
inc
add
inc
nop
neg
pop
aas
inc
outs
test
ss
inc
add
or
inc
cmp
ja
por
dec
test
cli
and
lods
loopne
add
jl
stos
or
mov
and
add
jmp
inc
retf
mov
sub
jno
push
ror
cdq
ss
push
mov
mov
test
fmul
mov
xor
jmp
pop
ins
shl
in
adc
pop
add
imul
mov
mov
jno
aaa
loopne
add
jmp
shl
sub
daa
or
adc
inc
leave
enter
das
pop
xchg
clc
and
add
pop
jl
movs
sbb
inc
lea
loopne
adc
xchg
hlt
xchg
xor
fwait
sbb
inc
bswap
addr16
out
mov
xchg
and
rcl
xchg
inc
std
data16
pop
cmp
loope
dec
ret
test
cmps
aam
mov
hlt
mov
call
mov
or
sbb
xor
sbb
retf
js
imul
adc
int3
xor
mov
add
adc
sbb
int
add
or
pop
push
add
das
or
jp
mov
or
lock
outs
or
sbb
pop
add
ds
push
jne
push
repz
fnstenv
lds
and
xchg
adc
push
push
nop
xor
loope
leave
shr
fs
jb
xor
and
jo
push
ins
and
outs
mov
sbb
cmp
and
dec
and
cmps
mov
mov
scas
and
adc
pop
pop
mov
and
push
cwde
and
and
mov
jne
(bad)
mul
cmps
pop
jle
jno
fldlg2
inc
js
push
xor
inc
or
sub
ret
jbe
mov
and
adc
imul
ins
jl
daa
fistp
jle
adc
mov
inc
int3
data16
mov
dec
inc
xchg
or
pop
rcl
sbb
inc
sub
sbb
ret
daa
adc
add
cli
mov
jo
sub
push
call
or
mov
xchg
sbb
inc
data16
jl
dec
lds
lods
pop
addr16
pop
sub
movs
mov
sub
sbb
or
sbb
xor
or
pusha
out
add
or
adc
fs
call
inc
adc
xchg
mov
aas
mov
popa
fisttp
test
jmp
or
pop
xor
cmp
cmp
cmp
ret
mov
arpl
das
mov
and
inc
pop
(bad)
in
mov
jno
xchg
or
ficomp
inc
xor
and
js
test
xor
pop
mov
scas
clc
add
add
inc
push
dec
ins
popa
add
jg
push
sub
aas
in
clc
xchg
ins
call
fimul
mov
test
mov
pop
test
test
sub
mov
and
push
mov
inc
sbb
fimul
and
clc
xor
jne
push
cmps
or
rol
loopne
call
ror
loop
xor
mov
inc
bound
and
push
js
imul
xor
(bad)
shl
cmps
sub
inc
ja
ds
ret
daa
in
jg
jbe
ins
and
lock
scas
xchg
hlt
add
adc
test
rcl
mov
adc
jle
in
sbb
lock
lods
adc
jmp
sub
mov
ret
inc
inc
adc
test
sub
jae
pop
pop
rol
test
out
bound
or
hlt
sub
(bad)
sub
and
mov
out
rcl
mov
jp
push
push
mov
xor
dec
mov
adc
and
shr
xchg
mov
xchg
in
add
int3
ret
fadd
cli
sbb
cli
jns
data16
sbb
cmp
push
loope
mov
xor
mov
or
sub
jmp
push
int
bound
jnp
(bad)
mov
dec
outs
add
jmp
push
add
xchg
and
dec
xchg
add
inc
jnp
push
into
push
adc
and
push
dec
cmp
fadd
fdivr
and
push
cmp
clc
and
retf
push
pusha
cwde
sbb
into
mov
fmul
inc
adc
(bad)
push
push
xlat
cmc
daa
or
inc
dec
and
add
loopne
in
inc
mov
mov
je
pop
add
and
push
fmul
adc
jmp
xor
sbb
inc
cs
mov
inc
add
inc
dec
inc
lock
xor
xor
loope
cld
adc
stc
xchg
push
or
aas
push
lds
push
or
sbb
imul
or
sbb
pop
adc
xchg
mov
or
inc
mov
repz
mov
loopne
sbb
or
jmp
cmp
cmp
out
lock
addr16
sub
daa
fld
mov
adc
nop
test
cli
or
or
sbb
out
sbb
sub
pop
push
push
dec
sar
inc
mov
and
or
sbb
and
or
pop
mov
and
sbb
repnz
add
int3
push
in
sbb
add
xor
clc
sub
xor
jg
hlt
mov
jno
lock
and
cdq
or
test
jne
add
xchg
push
sbb
xor
xchg
in
jae
add
clc
jns
out
fs
add
jns
addr16
mov
aam
(bad)
clc
sbb
loopne
imul
ficom
sbb
and
push
pop
add
aaa
mov
mov
sub
aas
adc
adc
add
jmp
sahf
(bad)
and
jo
ror
jp
jg
mov
add
lock
ss
(bad)
loop
xor
rol
pusha
push
sti
jmp
cmc
ficomp
or
lods
xor
inc
es
dec
cwde
cwde
xchg
push
addr16
add
sbb
in
push
xor
xor
dec
stos
mov
pop
pop
outs
dec
into
xchg
inc
jnp
inc
sbb
add
push
add
cdq
pop
mov
xor
jmp
lock
test
sbb
pop
sbb
cmps
inc
popf
push
sub
cmp
nop
rcr
dec
adc
push
mov
and
adc
mov
sub
push
daa
jne
shl
ret
or
in
and
pop
push
jle
fnstenv
add
adc
adc
pop
mov
or
xor
cmps
inc
arpl
inc
aaa
adc
pop
or
xchg
pop
or
in
inc
add
rcr
pop
adc
mov
xchg
dec
add
imul
popf
cmps
rol
mov
ja
mov
hlt
pop
inc
sbb
(bad)
sbb
lock
and
and
sti
cmp
lea
fild
push
lock
or
sub
add
movs
js
dec
or
mov
leave
(bad)
or
jecxz
cmp
and
push
and
aam
or
ins
rol
dec
add
add
test
sbb
jmp
lea
add
loop
jae
xor
pushf
std
or
inc
sub
or
xor
mov
cli
loopne
mov
in
lock
imul
inc
inc
mov
sub
cld
test
repnz
movs
mov
clc
jo
cmp
cmp
sbb
in
cmps
mov
js
mov
add
sub
or
(bad)
clc
add
sub
adc
std
(bad)
mov
mov
xor
jmp
adc
fcomp
dec
aaa
dec
dec
and
and
push
push
xchg
fmul
pop
adc
add
retf
dec
and
dec
cmp
pop
(bad)
mov
push
rol
dec
test
mov
sbb
add
sub
add
xor
rol
inc
sub
or
cmp
push
jmp
inc
shl
mov
inc
mov
mov
push
add
cld
cmp
cdq
and
mov
ins
dec
or
loope
test
mov
retf
jecxz
xchg
xchg
(bad)
cmp
and
sbb
or
test
or
das
mov
adc
adc
xor
adc
xor
adc
or
pop
pop
jo
inc
arpl
call
push
adc
add
inc
movs
inc
call
(bad)
push
pusha
sub
pop
in
dec
lock
imul
ss
(bad)
fdivr
rol
jnp
push
sbb
jne
out
adc
out
cmp
or
cmp
sbb
xor
fstp
in
mov
add
pop
inc
popa
imul
ret
cmp
sbb
or
lods
sbb
cmp
mov
sub
imul
push
push
or
fild
or
rcr
or
add
mov
cdq
or
das
add
jnp
imul
pop
cmc
jae
dec
mov
sub
add
jg
hlt
clc
sar
jns
adc
mov
pop
or
jmp
fdiv
or
jge
mov
sbb
adc
iret
popf
icebp
pusha
aaa
test
push
out
pop
not
pop
fdiv
jmp
outs
mov
jns
dec
sub
and
xchg
push
icebp
push
pushf
popa
addr16
fisttp
pop
push
outs
sbb
call
push
cs
retf
cs
sbb
mov
mov
test
cvtps2pi
or
ins
push
xchg
and
xchg
pop
adc
inc
aaa
cmps
ror
pop
dec
test
popa
fdivr
push
mov
and
dec
leave
jns
push
aam
add
pop
lock
adc
mov
mov
sbb
ret
pop
inc
adc
inc
push
push
pop
sbb
pop
add
mov
mov
sbb
mov
movs
dec
aad
adc
sub
stos
add
rol
js
inc
mov
push
push
sbb
ret
(bad)
adc
push
mov
push
cmp
retf
mov
div
or
out
or
inc
add
clc
dec
push
mov
nop
outs
je
jmp
cs
cmps
cmp
push
pop
or
jo
out
xchg
push
out
sbb
jo
dec
adc
loopne
sbb
xor
sbb
je
or
(bad)
mov
fadd
outs
rol
sub
push
das
mov
mov
popa
cmps
push
aam
dec
add
pop
add
scas
add
repnz
dec
cmp
mov
test
movs
sbb
aam
das
adc
pop
adc
shl
cld
inc
add
(bad)
sbb
mov
mov
dec
dec
push
sbb
std
popa
dec
loopne
cmc
inc
fsubr
retf
and
and
push
imul
pop
jecxz
test
or
pop
jmp
(bad)
xor
push
inc
iret
push
fld
data16
add
inc
dec
ficomp
push
fild
dec
inc
adc
xchg
sub
sbb
iret
or
push
test
adc
(bad)
mov
push
lods
clc
push
mov
cli
stos
mov
sub
sbb
or
dec
addr16
test
push
arpl
es
push
cld
mov
lock
adc
movs
jl
addr16
popa
push
pop
inc
sub
sbb
mov
repz
daa
ja
adc
in
inc
xchg
adc
inc
sbb
adc
mov
xor
sbb
repnz
adc
lods
fadd
lods
xor
cmc
adc
add
add
enter
sbb
sahf
into
or
fcomp
and
pop
movs
xor
and
retf
inc
mov
mov
and
adc
les
sahf
inc
inc
add
cmp
loop
jmp
pop
jne
test
adc
mov
dec
jae
cmp
jne
pop
adc
push
add
loope
add
xor
xor
xor
pop
and
add
pop
cmps
push
cmovo
retf
xor
ret
and
inc
inc
loope
jb
push
or
add
xor
mov
add
int3
xchg
mov
add
push
and
pop
mov
push
push
mov
xor
ins
sub
pop
or
sahf
and
imul
cmp
push
adc
cmp
mov
daa
push
inc
add
arpl
pusha
mov
adc
add
pop
je
(bad)
ret
pop
es
push
add
jne
ret
mov
iret
fs
les
lea
ror
inc
inc
or
ins
and
pop
jns
inc
pop
adc
gs
(bad)
pop
pop
das
or
push
gs
fld
push
adc
repz
xchg
mov
outs
xor
push
adc
mov
jae
push
div
ins
leave
retf
inc
enter
jae
push
and
push
(bad)
arpl
mov
inc
out
pop
cld
je
popa
inc
mov
inc
push
test
mov
das
loope
arpl
aad
je
push
or
and
sbb
mov
pop
pushf
mov
shl
and
je
ror
clc
retf
jo
add
add
xchg
cmc
sbb
fistp
adc
sar
les
and
jnp
std
mov
xchg
scas
jle
nop
and
fild
adc
in
and
jge
jle
jl
dec
jnp
push
xor
lock
ret
fnsave
inc
ss
es
push
pop
inc
daa
mov
and
fdiv
clc
push
inc
mov
and
xlat
add
add
adc
inc
mov
sbb
adc
test
aaa
aaa
js
push
cs
jno
unpckhps
pop
adc
movs
adc
pop
xor
popa
adc
lods
mov
aad
and
inc
pop
aas
aad
clc
pop
jmp
cs
bound
add
cmp
inc
adc
pop
jbe
add
fadd
(bad)
cmp
or
cmps
mov
pop
(bad)
sub
lods
inc
lds
mov
mov
ins
jns
int
shl
lea
jo
jnp
in
mov
popa
sub
inc
pop
das
fdiv
jo
fist
sbb
adc
mov
add
mov
movs
pop
movs
out
aaa
retf
and
push
retf
aaa
clc
inc
aaa
loopne
lods
cmps
mov
inc
push
js
movs
lds
popa
add
cmp
push
push
popa
jl
retf
mov
jne
data16
adc
nop
or
pusha
pop
ss
push
add
mov
jl
or
dec
push
pop
mov
sub
jns
xor
jmp
push
xchg
ss
xchg
push
push
xor
dec
or
arpl
outs
adc
inc
jae
dec
dec
add
add
xor
fwait
shl
je
aad
call
mov
iret
ins
mov
sub
scas
or
test
adc
test
mov
mov
cmp
ror
dec
in
cmp
jns
xor
sbb
pop
aas
imul
mov
mov
(bad)
jae
pop
push
test
jno
pop
adc
cmp
inc
mov
ins
jo
mov
lock
jp
push
push
inc
add
enter
popf
hlt
xchg
rcr
outs
mov
jne
cmp
(bad)
cdq
mov
jne
dec
retf
adc
sub
movs
add
sbb
hlt
loopne
retf
or
jmp
and
das
imul
adc
in
(bad)
push
pop
adc
sti
bswap
and
inc
rcl
and
cmps
fcmovbe
in
add
add
or
pop
or
sbb
dec
mov
mov
sbb
jl
int
fs
cmc
loopne
mov
mov
sbb
mov
ss
inc
add
and
es
ror
aas
sbb
jo
(bad)
div
dec
adc
mov
sub
add
pop
mov
cmp
mov
test
call
mov
neg
ins
xor
jnp
cdq
inc
(bad)
adc
sbb
push
fcmovbe
push
(bad)
lods
movs
(bad)
loopne
loopne
inc
loopne
lods
retf
imul
inc
inc
bnd
and
xchg
mov
jmp
add
xchg
pusha
sbb
js
ret
popa
cmp
xor
icebp
loopne
cmc
or
add
adc
scas
inc
or
inc
add
push
sbb
add
xchg
or
jge
daa
mov
pop
shl
sbb
mov
sub
sub
sub
pop
jl
mov
dec
dec
sub
inc
cwde
bound
xchg
push
or
mov
cmp
popa
pop
push
cmp
inc
mov
sub
sbb
push
rol
xchg
loop
sbb
push
and
cmp
mov
aam
adc
push
or
imul
lock
add
mov
cmps
push
pusha
dec
fistp
mov
and
cmp
aas
or
push
jmp
adc
mov
pusha
fld
cmp
in
mov
adc
add
xchg
xor
xor
adc
rcr
push
cmp
fwait
jb
out
sahf
es
rcr
push
adc
jb
dec
cmp
pop
mov
out
add
fnstenv
sub
test
movs
and
int3
mov
dec
sub
enter
nop
retf
clc
pop
and
pop
and
movs
jb
cmp
pop
mov
fs
xor
test
fwait
jns
dec
movs
xchg
xchg
pcmpeqd
adc
das
aas
push
add
adc
push
scas
pusha
test
cmps
gs
imul
jno
push
xor
jb
scas
jmp
pop
push
gs
dec
daa
ins
mov
mov
jno
push
popa
inc
mov
and
ret
ins
jo
outs
push
adc
inc
in
inc
ins
pop
arpl
das
aam
cmp
xchg
dec
jae
pop
fidiv
jno
js
gs
cmc
sbb
push
inc
sahf
and
mov
ss
push
mov
lea
icebp
test
jmp
inc
pop
mov
sbb
mov
dec
iret
sub
or
sub
ret
mov
std
jns
inc
shr
jmp
push
inc
push
xchg
push
ret
hlt
or
aam
mov
jecxz
ret
lock
je
mov
dec
ror
movs
xlat
cmp
sbb
sbb
iret
xchg
pop
cmp
(bad)
xchg
es
adc
push
rcl
and
(bad)
push
add
and
fld
cmp
and
or
popa
int3
add
cmc
sub
inc
rol
cmp
push
jg
fs
add
mov
mov
ins
mov
inc
inc
jp
shl
push
aam
adc
cmp
pop
loopne
add
ficomp
xchg
inc
add
sub
pop
dec
ror
js
les
or
lock
inc
outs
add
xor
repnz
xor
mov
adc
mov
pop
mov
or
aas
xor
aaa
and
stos
mov
jo
bound
or
lods
aas
push
leave
xlat
push
les
pusha
and
add
xchg
mov
fimul
fild
dec
cmps
sti
outs
daa
adc
data16
aaa
ja
push
std
push
gs
add
stc
outs
iret
xor
clc
cmp
add
jecxz
jl
sub
mov
add
sbb
and
inc
(bad)
cmp
in
and
jmp
add
pop
rol
push
retf
ret
jge
sub
pop
mov
enter
mov
out
movs
into
leave
dec
(bad)
jo
xchg
cmp
in
xchg
adc
push
dec
jo
add
call
dec
or
jns
mov
adc
and
jno
fisubr
(bad)
call
neg
dec
pop
daa
sbb
jl
inc
and
adc
test
inc
or
push
inc
test
push
fs
aaa
dec
push
ds
movq
dec
gs
add
outs
push
rcr
pop
call
add
or
pop
or
push
imul
jb
sub
je
lods
inc
cmps
adc
clc
neg
and
pop
(bad)
and
dec
mov
(bad)
lea
dec
jl
xor
add
add
hlt
mov
lea
in
in
cmc
adc
gs
outs
xchg
add
cmp
nop
cmp
mov
mov
adc
adc
or
jg
mov
push
adc
cmps
nop
mov
dec
or
sbb
ss
pop
fmul
mov
sub
or
and
scas
sub
add
or
ds
push
test
icebp
mov
retf
pop
xor
xchg
mov
xor
mov
dec
inc
test
jns
xor
add
xchg
cmp
mov
dec
shl
rol
or
push
jmp
or
push
fimul
pusha
aas
lods
dec
xchg
test
dec
js
xor
imul
pop
push
push
adc
cmp
ja
int3
pop
sub
cmps
ins
ret
repnz
and
xchg
cmp
add
pop
dec
gs
retf
or
dec
dec
xor
add
add
pop
jbe
rcl
cmp
test
sbb
fstp
inc
fs
dec
inc
mov
mov
mov
mov
out
das
jae
ins
sub
mov
push
jne
push
or
xchg
xor
nop
push
sub
dec
pop
rol
adc
inc
adc
test
clc
sub
or
cld
dec
xor
ins
and
adc
cmp
ins
dec
sbb
sbb
push
cwde
dec
ret
inc
cmp
imul
in
ins
ror
add
pop
dec
loopne
fmul
push
add
sub
gs
add
cmp
pop
dec
loopne
lods
jne
int
jne
mov
(bad)
outs
mov
push
and
rcl
pop
cs
inc
push
xchg
(bad)
pusha
lock
rol
cli
sub
jle
in
add
inc
shl
repz
out
adc
lea
aas
cmps
fild
mov
loop
mov
sub
and
cdq
cli
mov
(bad)
psrld
into
xchg
inc
or
loope
sbb
je
lea
fisub
add
ins
xlat
test
pop
sub
rol
and
jle
adc
xchg
or
call
pop
sub
in
(bad)
fmul
push
add
pop
push
std
pop
daa
in
repz
inc
cli
or
and
js
lahf
xchg
add
inc
sti
jnp
into
lods
and
xchg
xchg
sbb
test
loopne
imul
xchg
and
loopne
icebp
dec
jmp
in
pop
inc
push
push
add
or
fsubr
dec
push
or
dec
add
xchg
adc
mov
sti
pusha
push
add
jg
dec
add
test
ss
adc
test
push
dec
call
and
xchg
mov
fwait
push
repz
push
pushf
pop
xchg
pop
mov
lea
wrmsr
lods
sub
add
add
enter
(bad)
in
aam
push
sub
or
xchg
push
jno
test
add
push
rcl
push
int
mov
push
push
mov
mov
push
cmp
pop
lock
js
popa
sbb
jl
or
sbb
jecxz
pushf
xchg
addr16
jae
adc
push
adc
out
push
ror
pop
inc
test
test
add
add
in
sub
and
in
mov
xchg
dec
dec
in
xor
rol
sub
sub
sbb
add
or
mov
js
fstp
and
pop
call
outs
icebp
mov
jmp
xchg
sub
inc
pop
pop
sub
xchg
mov
clc
adc
mov
cmp
test
xor
loopne
mov
add
cmp
hlt
shl
push
pushf
pop
jmp
lds
dec
mov
movs
xchg
ret
push
cdq
test
xlat
sbb
jnp
inc
jbe
arpl
icebp
call
or
xor
pop
loopne
xor
sbb
sub
std
push
mov
xor
add
add
and
xlat
mov
fs
adc
mov
dec
dec
pop
adc
lea
mov
xchg
test
pop
lea
sub
push
add
cli
push
add
popa
mov
sbb
data16
or
or
xchg
lock
push
(bad)
cmp
add
stos
inc
xor
adc
nop
push
and
and
xor
jno
sar
cdq
xchg
dec
cmp
push
fiadd
cmps
mov
jne
sub
shl
mov
add
cmp
mov
xor
and
aad
fild
push
adc
add
ja
push
(bad)
xor
add
jmp
fstp
loopne
jnp
push
fimul
and
fist
call
dec
jne
mov
lock
cmp
pop
inc
cld
push
out
mov
cld
mov
popa
stos
pop
push
in
push
push
push
xor
shl
fiadd
or
or
push
add
ds
cld
push
push
leave
inc
fmul
rcr
or
lock
and
pop
sbb
push
push
mov
add
xlat
daa
push
push
ror
outs
pop
ffreep
push
add
push
lea
cmp
inc
mov
add
or
cmps
jns
fistp
mov
mov
xchg
jl
mov
fs
outs
fisttp
sbb
fst
fisttp
push
mov
ins
dec
mov
sbb
shl
push
add
cmp
xchg
hlt
lods
or
daa
mov
dec
imul
jmp
xor
mov
(bad)
jmp
xor
scas
sbb
adc
adc
(bad)
mov
pop
test
and
and
jo
and
scas
pusha
(bad)
push
test
je
std
imul
mov
ret
loope
ja
cmp
data16
aaa
mov
add
div
repnz
fadd
push
adc
cmp
loop
jl
sbb
dec
and
dec
jp
loop
je
dec
jl
push
mov
pusha
dec
sbb
adc
fst
and
loope
mov
enter
xor
pop
pop
idiv
test
mov
data16
jb
cld
dec
add
repnz
mov
addr16
ss
mov
(bad)
adc
imul
jle
add
mov
cmp
fisttp
adc
cdq
push
push
push
adc
jl
or
jnp
or
leave
adc
aam
(bad)
xchg
inc
add
or
imul
cmp
inc
add
clc
or
and
xchg
cmps
sar
push
jnp
imul
imul
(bad)
inc
jae
xor
dec
je
or
fbstp
sbb
push
or
adc
mov
or
jne
cmp
in
shl
call
and
lock
aaa
adc
cmc
push
push
ins
imul
cmp
or
or
inc
adc
call
cmps
mov
movs
ret
sbb
stc
inc
or
adc
jbe
outs
inc
xor
push
or
sbb
sahf
mov
sbb
xchg
rcl
pusha
ja
jae
or
sbb
push
cli
sti
mov
add
lock
adc
pushf
xchg
jge
sub
loopne
jo
pop
inc
(bad)
(bad)
pop
add
fsubr
pusha
mov
and
mov
push
cmp
or
js
adc
push
mov
xchg
jge
adc
inc
mov
ins
and
xor
ins
dec
mov
out
shl
mov
cld
adc
mov
fwait
adc
ins
add
fiadd
les
(bad)
jae
jle
in
inc
adc
jb
adc
inc
adc
mov
and
cmp
mov
test
inc
fidivr
cmp
dec
iret
add
daa
and
out
mov
add
shl
call
rcl
pushf
lock
fstp
mov
and
test
xor
repnz
add
lock
mov
mov
sub
int
pop
call
mov
sbb
dec
xor
adc
dec
push
ds
add
and
add
cs
xchg
out
add
adc
retf
leave
inc
hlt
add
cld
pop
and
xor
add
nop
and
or
add
sbb
mov
add
in
push
add
(bad)
xchg
cmps
sbb
xchg
pop
and
adc
add
dec
sbb
jmp
mov
or
daa
scas
and
pop
aaa
inc
cmp
pop
push
loopne
xchg
jno
inc
dec
mov
mov
lock
cs
adc
and
inc
nop
mov
fs
inc
loope
(bad)
mov
add
inc
bnd
or
js
add
popa
pop
call
xor
and
cmp
adc
jg
(bad)
loopne
push
or
xor
inc
push
fs
push
in
add
cwde
xor
push
mov
scas
push
lea
fstcw
fwait
data16
dec
pop
ror
fldcw
fistp
pop
enter
adc
jecxz
shl
fwait
or
popa
mov
dec
push
or
sub
add
mov
mov
adc
adc
call
(bad)
mov
in
jg
add
rol
sbb
(bad)
(bad)
in
repnz
(bad)
xor
xor
sub
sbb
jne
cmp
jb
mov
mov
xor
div
xchg
cmps
cmp
retf
sub
mov
(bad)
mov
js
jmp
mov
add
shl
(bad)
test
rcl
scas
clc
mul
(bad)
std
add
sub
mov
fimul
sbb
add
and
or
push
mov
sbb
mov
inc
or
stos
iret
outs
aaa
lods
or
cmps
and
inc
jl
popa
sti
fsub
rcr
movs
push
loopne
sahf
mov
sar
jnp
sub
push
add
jae
ret
rcr
xchg
xor
push
push
leave
das
fistp
ja
shr
ret
fs
loopne
ja
jecxz
dec
cmc
dec
add
mov
or
not
adc
jecxz
add
sahf
out
jo
inc
add
cmp
ret
rol
fst
adc
push
pop
push
jmp
icebp
add
and
or
or
in
sub
pop
and
cmp
push
shl
push
fsub
daa
dec
(bad)
mov
stos
xchg
cwde
mov
adc
test
aad
rcr
mov
add
mov
cmp
sub
mov
mov
loop
jnp
out
push
loop
push
adc
or
out
dec
repz
call
mov
and
add
lahf
inc
xchg
mov
cdq
fs
(bad)
aam
dec
movs
or
sub
fisub
pop
jno
mov
ret
cwde
or
and
push
pop
aad
lea
mov
rol
mov
xor
adc
jge
inc
lods
inc
dec
and
and
and
push
sub
sbb
pushf
dec
movs
add
push
mov
pop
add
jmp
dec
jns
ret
in
mov
aaa
push
push
ret
rcl
pop
mov
cwde
loop
inc
daa
add
retf
inc
jbe
daa
xchg
fisubr
inc
jno
adc
sub
push
add
push
or
and
add
pop
mov
mov
mov
cmp
ja
jge
addr16
xchg
cmpxchg
push
rcr
jo
pop
shr
loopne
sbb
shr
jne
mov
xchg
xchg
mov
jo
jge
imul
arpl
add
sub
pop
push
add
add
inc
rcr
cmp
push
mov
xchg
mov
jae
je
lds
outs
adc
lods
adc
push
add
add
push
push
(bad)
pop
iret
ret
or
or
scas
or
adc
daa
scas
mov
ror
mov
cmps
cmps
lock
sub
inc
add
fidivr
nop
push
mov
iret
dec
out
lea
cmp
fistp
xor
inc
mov
ins
adc
or
test
xlat
lock
inc
ret
pop
jl
push
inc
sub
xor
xchg
or
add
mov
dec
dec
or
jmp
ins
ins
ss
mov
jns
mov
daa
or
loop
hlt
sbb
pop
mov
mov
sub
fxch
xchg
pushf
add
pop
daa
sbb
(bad)
lahf
add
div
inc
mov
inc
mov
and
(bad)
call
jl
xchg
sbb
jbe
and
xchg
sahf
sub
ror
faddp
in
cdq
(bad)
std
(bad)
data16
sbb
jmp
fnstcw
dec
cmp
cmc
scas
add
sbb
enter
std
addr16
add
add
cmp
sbb
cmps
push
mov
sti
xor
leave
test
push
ret
pop
cmp
aam
or
daa
aam
inc
retf
aaa
cwde
adc
pop
sti
fild
call
jmp
add
cs
loopne
(bad)
jns
mov
call
lea
adc
pop
cmp
sti
add
pop
adc
test
sbb
mov
clc
dec
add
and
(bad)
in
xchg
dec
adc
outs
push
sbb
aas
iret
inc
xchg
cmp
lods
inc
dec
adc
add
push
dec
inc
pop
pop
or
cs
arpl
in
inc
bound
mov
mov
jge
call
adc
nop
rcl
rcr
out
icebp
sub
mov
mov
in
mov
add
dec
xor
ss
add
int3
push
xor
mov
xor
pop
and
push
or
loopne
add
icebp
cwde
ret
popf
fldlg2
pushf
push
aaa
inc
and
or
xor
shr
mov
jmp
ins
add
and
inc
into
pop
adc
sar
add
inc
cmp
fcomp
dec
es
inc
adc
mov
dec
xor
stos
adc
cmp
popa
ret
mov
push
aam
adc
js
lods
cmp
xchg
lea
call
add
or
or
ja
inc
or
inc
jle
rol
sbb
jmp
mov
dec
dec
or
cmp
fst
mov
jbe
jle
lods
add
pop
jae
mov
int3
adc
retf
rcl
sub
or
jo
dec
and
aas
ins
push
xchg
aas
jmp
(bad)
mov
inc
dec
call
inc
inc
or
repnz
das
mov
call
sub
pop
mov
lock
mov
retf
shr
retf
add
out
xchg
es
jg
adc
xor
sub
bound
cmp
ins
push
mov
aaa
and
push
into
or
mov
sbb
adc
out
jl
ins
inc
or
xlat
xor
pop
add
jge
(bad)
es
adc
pop
and
pop
push
scas
shl
sub
add
inc
jbe
pop
ret
mov
dec
mov
out
and
jne
fld
push
jp
fadd
stos
lds
adc
fisubr
pushf
dec
jp
daa
loopne
not
movs
pop
movs
rcl
adc
inc
and
cdq
add
mov
sahf
cmp
add
mov
push
(bad)
in
js
std
jle
ss
sbb
or
loopne
sbb
pop
sbb
loopne
loopne
aas
lock
and
and
mov
xor
ud2
xor
xchg
push
pushf
sbb
sbb
mov
aam
pop
test
fdivr
(bad)
lds
pop
cwde
xchg
fldcw
push
fcomp
add
mov
push
jp
push
cdq
add
sub
xchg
mov
and
je
pop
cmp
dec
cmps
test
dec
inc
mov
and
not
and
mov
inc
lock
inc
inc
xor
push
jo
adc
inc
xor
push
xor
adc
mov
movs
and
in
dec
aaa
and
mov
push
adc
cmp
pop
xchg
fld
cmps
aam
lock
inc
inc
add
add
push
iret
mov
mov
inc
test
push
jge
sbb
pusha
mov
mov
jl
push
adc
out
ret
pop
loope
imul
fs
or
rcl
or
lea
outs
pop
push
dec
or
scas
mov
inc
jmp
dec
shr
mov
leave
call
in
(bad)
push
sahf
jno
out
dec
jmp
lock
in
adc
mov
mov
mov
fiadd
es
fcmovne
adc
je
and
(bad)
jmp
leave
jb
fimul
outs
xchg
cmp
cmps
pop
inc
les
cdq
inc
pop
call
imul
add
mov
inc
movzx
cmp
mov
pushf
sbb
pop
push
adc
sbb
add
dec
lods
mov
mov
dec
ins
aam
xchg
mov
dec
mov
(bad)
adc
iret
sbb
push
jg
push
test
xchg
mov
mov
test
and
(bad)
add
add
mov
inc
xor
sti
and
or
add
pusha
or
xor
shl
cmp
or
adc
test
xchg
and
jne
or
or
rcl
shr
and
sub
mov
test
(bad)
jmp
jb
mov
jne
jns
push
ret
pop
sbb
push
cmp
lods
or
xor
jmp
cmp
hlt
and
cmp
je
(bad)
or
jo
or
and
and
adc
jb
mov
xor
rol
jmp
and
les
and
jp
icebp
lahf
adc
jp
jne
xor
push
jg
mov
xchg
or
(bad)
jmp
sub
scas
lahf
jbe
jg
adc
lock
repnz
inc
or
sbb
mov
add
pop
xchg
not
jmp
inc
xchg
pop
movs
in
mov
and
lods
dec
mov
add
mov
leave
xor
inc
(bad)
rcr
aas
mov
inc
js
adc
inc
cmp
inc
pusha
or
push
imul
jne
dec
je
mov
aaa
lea
nop
or
es
and
mov
ja
rol
xor
or
pusha
js
(bad)
test
call
mov
mov
imul
cmp
(bad)
ins
or
ret
or
dec
js
xor
iret
enter
xor
mov
dec
and
out
rol
adc
xchg
shl
call
outs
add
add
push
ror
sub
xor
or
outs
sbb
or
out
rol
gs
jnp
loopne
xchg
mov
push
shl
(bad)
sub
push
sbb
pop
sbb
iret
fwait
test
push
repnz
pop
je
add
pop
dec
das
jge
sub
repz
(bad)
push
add
cld
neg
dec
sub
mov
loope
mov
xchg
sahf
jbe
sbb
inc
adc
lods
jo
push
jg
mov
or
pop
cmp
inc
add
push
mov
push
cmp
mov
cmp
pop
jmp
or
movs
daa
add
adc
push
sub
mov
adc
xchg
add
jg
inc
inc
pop
mov
movs
ds
fisttp
ins
stos
data16
dec
sbb
sbb
or
enter
sahf
std
dec
pop
pop
inc
inc
inc
cmp
mov
or
(bad)
xor
adc
and
mov
rol
or
or
das
icebp
push
push
ja
inc
mov
mov
sbb
xchg
mov
retf
rcl
pop
int3
(bad)
xor
pop
xchg
ja
icebp
push
iret
sub
aam
push
sbb
mov
test
add
jbe
retf
jecxz
xchg
out
jle
rol
out
mov
sub
call
xor
and
jg
imul
enter
add
or
pop
fs
add
jmp
ror
mov
and
or
and
imul
or
push
aas
cmp
adc
lock
shl
cmp
dec
cmp
aas
add
call
pop
add
or
push
data16
xchg
adc
mov
daa
dec
pushf
cmp
cmp
add
add
in
jle
mov
cli
xchg
mov
and
jecxz
mov
aas
or
xchg
adc
inc
inc
inc
pop
jg
mov
lds
clc
into
add
xor
out
lea
clc
pop
test
test
pop
mov
ins
sub
arpl
cli
or
sar
sbb
lods
cmps
fmul
pop
xor
(bad)
call
sbb
das
jge
push
in
sub
pusha
jns
pop
cs
pop
push
add
cmps
mov
push
sub
cmp
pop
xchg
fild
xlat
(bad)
fst
cmc
add
sub
and
mov
add
mov
hlt
aas
push
adc
sbb
int
and
scas
jecxz
fisttp
inc
call
xchg
adc
pop
or
or
mov
jmp
add
pop
jle
jecxz
adc
das
adc
jl
loope
mov
jbe
and
jl
xchg
je
and
push
lea
pop
jmp
or
ins
add
lea
sbb
inc
movs
mov
adc
sti
out
mov
in
sub
int
push
std
movs
popa
dec
xlat
add
scas
xchg
mov
scas
cwde
scas
repnz
bound
es
(bad)
jnp
in
out
retf
cmps
xor
and
dec
gs
mov
inc
mov
int
adc
add
jp
das
icebp
iret
retf
lods
xor
and
push
mov
retf
mov
jmp
test
jmp
(bad)
push
loopne
mov
int
pop
cmp
in
add
(bad)
lahf
stos
in
jge
mov
mov
mov
mov
fsubp
adc
lahf
sub
jmp
cmp
sbb
adc
mov
inc
inc
mov
cwde
adc
mov
test
je
dec
push
mov
push
enter
nop
dec
cmp
sub
add
lea
jle
in
pushf
ins
add
cmp
rcl
add
mov
out
push
ins
imul
inc
jg
push
jle
outs
mov
(bad)
stos
jg
rol
sahf
ud1
jle
and
pop
in
in
cmp
mov
add
and
fst
and
push
rcr
pushf
adc
mov
sbb
adc
dec
scas
imul
sbb
fdivr
push
pushf
inc
jo
adc
movs
pop
add
xchg
out
cmp
punpckldq
enter
cmp
and
shl
cmp
push
gs
mov
mov
inc
popf
sub
cmp
das
jmp
std
test
cmp
adc
dec
cmps
cmp
ret
xor
adc
pop
mov
inc
push
pop
(bad)
mov
sbb
mov
das
call
and
mov
retw
adc
jnp
and
mov
repnz
cld
shr
(bad)
std
stos
js
cmp
je
add
push
rol
loope
jne
pop
call
xor
mov
add
sbb
ins
cld
sbb
dec
sbb
test
dec
add
add
mov
adc
test
sbb
xor
pop
adc
sbb
call
or
ja
jmp
jle
cmp
call
sbb
dec
mov
adc
nop
xchg
cdq
mov
sbb
or
test
das
mov
add
cld
inc
adc
dec
adc
cdq
xchg
sahf
push
sbb
fdivr
mov
add
inc
push
fnstsw
fld
pop
push
jmp
xchg
push
imul
loope
mov
pop
add
add
vrsqrtps
pop
inc
or
xchg
nop
loope
xor
sahf
arpl
add
ret
movs
adc
js
je
or
arpl
outs
and
inc
enter
add
cwde
enter
loopne
jle
add
xlat
imul
test
jne
xchg
add
ficom
or
imul
jmp
pop
out
sar
loopne
pop
(bad)
mov
ret
jmp
ins
(bad)
mov
js
retf
ds
push
jmp
pop
mov
dec
jge
push
jne
cmp
lock
bnd
sbb
or
adc
int3
sub
dec
add
xor
pusha
dec
ds
sbb
mov
aad
inc
cmp
pop
sbb
dec
and
rol
imul
jmp
adc
dec
or
sahf
pop
push
jp
jp
inc
add
add
(bad)
addr16
cmp
mov
or
pop
mov
pop
mov
inc
jbe
jecxz
or
push
push
mov
pusha
movd
add
and
dec
add
in
add
push
ins
ret
sbb
push
dec
push
inc
sbb
add
retf
je
adc
or
push
push
pushf
sub
mov
mov
lock
add
add
and
loope
dec
pop
mov
shl
xor
sub
ror
sub
fwait
inc
mov
dec
xchg
cs
(bad)
adc
adc
adc
add
(bad)
sbb
loopne
ss
add
cli
fisub
neg
and
or
or
mov
sbb
jne
movs
add
push
push
mov
push
jnp
les
push
test
sub
push
xor
hlt
cmp
call
ja
ins
add
or
or
jge
daa
and
sbb
mov
xor
dec
mov
fisttp
inc
sahf
dec
adc
and
sti
dec
sub
sbb
mov
adc
sbb
aam
push
jbe
or
adc
stc
push
or
push
sbb
arpl
mov
jmp
or
clc
xor
dec
jb
adc
sbb
lods
xor
push
jmp
adc
je
stc
inc
jo
icebp
push
je
aas
enter
ja
mov
mov
fs
push
or
jmp
shl
out
or
push
or
pop
ret
mov
sub
data16
sbb
mov
in
mov
adc
jb
pop
mov
popa
jne
or
lds
ins
enter
xor
xchg
mov
mov
jo
jo
add
fs
add
ja
(bad)
pop
sbb
not
(bad)
cmp
ins
xor
test
cmp
adc
not
or
pop
lods
fiadd
jp
sahf
test
mov
shl
xor
mov
or
add
dec
sub
add
inc
adc
jne
jmp
dec
jne
mov
push
sbb
or
xchg
test
or
adc
cs
push
jo
loope
clc
or
adc
ins
add
loop
push
and
pop
ja
inc
xor
mov
retf
cli
sub
call
rol
jl
mov
mov
je
add
mov
or
push
adc
mov
inc
sbb
push
inc
dec
cmp
sbb
or
out
(bad)
call
or
cmp
push
std
aas
xchg
dec
cmp
mov
pusha
dec
mov
push
inc
push
cmp
aaa
mov
add
or
movs
lock
or
mov
dec
or
sbb
nop
xchg
out
push
pusha
push
adc
imul
addr16
and
bound
jo
jl
jg
aad
or
push
push
mov
and
pop
xor
xchg
das
dec
loopne
mov
jl
cdq
xor
push
les
sub
add
(bad)
sbb
mov
jg
dec
cli
push
and
in
push
mov
xlat
sub
add
test
cmp
pop
je
or
out
cli
rol
dec
add
xchg
jbe
jecxz
add
xor
neg
push
pop
jge
stos
fcmovnb
xchg
ss
out
and
push
movzx
pop
mov
dec
or
aam
xlat
sub
mov
inc
sbb
sbb
mov
ror
inc
jg
xchg
stos
xchg
(bad)
fist
cmp
or
xor
into
mov
jno
mov
repnz
mov
ss
xor
xor
inc
pop
fst
ret
mov
call
hlt
cmp
cmova
push
mov
jl
fadd
xor
sub
inc
adc
shl
cmp
(bad)
sub
add
mov
lahf
in
xchg
mov
adc
mov
mov
mov
jle
fidiv
pop
rol
jmp
adc
cmp
xor
xor
packsswb
jecxz
fbstp
je
push
aam
rol
or
pop
fisttp
(bad)
adc
mov
pop
je
xor
inc
add
push
mov
out
add
inc
lods
(bad)
pop
pop
sub
inc
js
xchg
dec
jg
lock
cmp
mov
xor
add
cmps
mov
ja
adc
outs
rcl
fcom
cmp
pop
pop
mov
fld
adc
and
retf
adc
ds
loope
add
pusha
std
clc
sbb
or
clc
inc
sub
cld
push
mov
mov
in
sub
add
jbe
shr
jmp
out
clc
or
pop
pop
ror
or
dec
pop
daa
xchg
adc
clc
inc
or
pop
adc
dec
xchg
aam
loopne
lahf
mov
int3
mov
or
mov
lods
add
adc
or
test
xchg
pushf
cld
mov
cli
sbb
push
mov
jmp
rcl
div
ret
add
call
pop
pusha
push
adc
cmps
add
shr
hlt
push
adc
cmp
pop
xor
sbb
ror
add
movs
and
xchg
or
adc
or
mov
call
mov
mov
push
jo
mov
jl
pop
iret
not
pop
mov
mov
ret
aaa
dec
or
cmp
outs
and
test
jne
sbb
pop
test
adc
movs
ins
std
mov
push
ja
mov
add
pusha
sub
inc
push
jmp
mov
sub
adc
into
lss
and
and
sub
dec
or
pop
aaa
add
je
nop
rcl
xlat
xor
cmp
test
adc
jnp
jnp
jno
xchg
int
int
ss
push
mov
pop
sahf
mov
lds
shr
dec
mov
es
(bad)
fs
jmp
inc
mov
mov
push
aad
movs
cld
mov
(bad)
out
xchg
adc
fstp
mov
cmp
rcr
add
adc
dec
add
pop
cmp
sub
inc
cmp
xchg
add
mov
push
scas
dec
out
test
cmp
add
test
bswap
xchg
xchg
stos
outs
stos
shl
jl
call
push
pusha
or
mov
dec
mov
sub
pop
jo
fwait
mov
or
in
ror
mov
push
and
mov
loopne
sub
or
iret
ret
push
fst
and
jo
fwait
cmovb
cmp
xor
add
rol
mov
into
adc
mov
lea
cmovge
movs
loopne
pop
mov
adc
das
add
pop
in
bt
xchg
lahf
or
mov
xlat
(bad)
adc
cli
pop
xor
adc
hlt
mov
jmp
inc
pop
into
mov
dec
cmp
jge
repz
add
add
or
add
rol
dec
adc
icebp
mov
aam
cmp
add
jle
or
pop
ja
inc
add
loopne
dec
hlt
mov
jb
shl
xor
mov
daa
fsubr
pop
fbld
out
pop
push
jge
cli
pusha
mov
xlat
cmp
dec
lods
(bad)
mov
clc
jo
add
lock
push
push
shr
sbb
adc
pop
jns
adc
and
sub
or
sub
push
push
mov
ret
cld
push
cmp
mov
mov
and
mov
dec
pop
(bad)
popa
and
and
js
or
mov
jns
xor
jnp
xor
jns
es
xchg
and
dec
(bad)
fs
adc
push
and
repz
adc
enter
adc
or
mov
nop
stos
inc
jl
add
ins
and
xchg
push
fiadd
cmc
cmp
cmp
dec
dec
sub
and
clc
add
popa
sbb
ins
vmovups
aaa
mov
adc
fadd
and
mov
mov
jecxz
jmp
sub
jae
or
add
or
sub
fmul
sbb
fild
jp
xor
lea
xchg
sbb
ret
adc
xchg
and
adc
es
not
sub
mov
dec
and
jg
lea
pop
scas
or
adc
adc
sbb
mov
push
daa
or
mov
hlt
xchg
push
cmovp
cmp
loope
mov
ret
mov
dec
je
push
and
and
icebp
xchg
aas
fucomi
pop
outs
add
pop
add
sbb
inc
and
jg
inc
ins
in
data16
xor
adc
jns
jo
inc
punpckhbw
sub
mov
dec
lds
fs
imul
sbb
mov
or
or
adc
ret
sub
movsx
stc
loop
add
inc
bound
mov
adc
fwait
xchg
or
jg
cmp
dec
cmc
ret
or
mov
inc
(bad)
fisubr
dec
das
ds
js
dec
sahf
xor
arpl
sbb
adc
pop
loop
(bad)
jbe
jle
ror
mov
push
push
adc
icebp
lock
jg
pop
dec
dec
cs
ins
inc
sbb
or
shr
sub
imul
repnz
(bad)
cmovae
pop
cmp
adc
call
adc
popf
mov
push
adc
loopne
sbb
pop
dec
lock
push
ins
push
jp
fnsave
jle
inc
push
nop
jb
lahf
mov
sub
adc
inc
scas
aam
clc
js
mov
lock
(bad)
int
inc
jl
mov
inc
cmp
jo
jmp
jmp
jbe
dec
out
adc
(bad)
test
add
sar
daa
or
add
fldenv
mov
sbb
pop
jbe
cmp
aaa
scas
add
or
outs
add
mov
outs
mov
mov
push
push
sub
not
jmp
push
adc
ror
jecxz
fmulp
jne
(bad)
jne
mov
jne
mov
jae
adc
or
ret
push
rol
and
repz
sbb
je
add
push
or
sub
rol
js
daa
sti
les
jecxz
fs
jbe
pop
sti
mov
push
push
std
adc
dec
add
add
mov
test
cld
adc
leave
sbb
mov
xchg
mov
test
pop
movzx
int
inc
addr16
adc
rcr
ss
scas
lods
sbb
ret
jecxz
xor
inc
sub
push
sbb
mov
xchg
sar
mov
adc
pop
inc
js
mov
sbb
test
xchg
xlat
push
push
mov
fsubr
dec
xchg
dec
mov
mov
cmps
push
mov
and
in
dec
cmps
ret
adc
or
adc
pusha
loop
mov
ror
inc
out
pop
jg
dec
push
inc
je
lods
hlt
push
or
inc
adc
mov
dec
out
dec
xchg
movs
sbb
xchg
xchg
cwde
inc
loopne
aas
push
fdivr
sub
push
in
push
(bad)
mov
daa
movs
lods
pushf
or
push
sahf
ins
test
fmul
fmul
mov
ins
cmp
mov
mov
push
inc
call
pop
mov
pop
or
pop
ss
add
sbb
jg
mov
push
(bad)
adc
je
cmp
(bad)
jge
outs
mov
inc
outs
scas
cwde
test
inc
add
mov
mov
push
out
xor
les
and
cmp
fstp
mov
sti
add
ss
jmp
pop
lock
push
ss
(bad)
pusha
sar
jp
or
mov
cmc
sar
push
pusha
cs
js
ret
push
ss
mov
or
add
push
mov
push
data16
add
retf
mul
les
cmp
fsubr
jne
lea
rcl
xor
inc
mov
push
push
pop
jp
xor
mov
mov
push
test
jne
push
lods
fistp
push
jle
mov
call
dec
xchg
fsub
or
out
add
ss
icebp
mov
addr16
dec
xor
add
adc
into
mov
push
push
add
mov
jecxz
xchg
adc
test
pop
mov
jl
test
mov
rcl
enter
jecxz
jg
mov
pop
loopne
adc
in
jmp
cdq
cmp
mov
sbb
cli
in
rol
arpl
mov
dec
add
ins
(bad)
ins
rol
jo
je
gs
das
bound
idiv
and
or
mov
cmp
jne
push
out
cld
ins
popa
gs
or
jmp
popa
data16
jl
outs
and
js
(bad)
mov
(bad)
push
add
fs
inc
mov
adc
add
add
test
sar
pop
jmp
push
push
test
pop
mov
add
dec
add
cmps
sbb
int3
out
cwde
mov
loope
daa
out
sbb
sub
mov
loopne
xor
jmp
inc
inc
lods
mov
sub
mov
xchg
and
cmps
(bad)
in
xchg
xor
pop
push
leave
pop
push
mov
sbb
add
arpl
adc
inc
ins
pusha
pusha
cmp
inc
cld
psrlw
aas
fs
adc
mov
test
(bad)
cli
mov
add
ja
shl
or
nop
adc
jo
ins
mov
call
aam
and
lea
or
cmp
mov
sub
int
xchg
cmp
sub
hlt
xor
dec
inc
sub
(bad)
mov
push
ins
mov
sub
shl
dec
cmps
sub
push
xlat
push
test
push
fistp
outs
or
adc
add
pop
xchg
or
jmp
push
pop
daa
sub
inc
mov
sub
xor
mov
outs
call
push
fidivr
mov
fnstcw
lea
cmp
push
jg
xor
add
push
outs
fimul
mov
or
rcl
dec
shl
or
sub
sub
push
test
xchg
adc
mov
xor
xchg
and
inc
sub
sbb
retf
or
jmp
sbb
das
push
add
xor
pop
sbb
cld
pop
lods
cmps
ror
cmps
mov
and
in
aaa
cmp
add
movs
sbb
xor
sti
xchg
in
xchg
mov
nop
and
not
lock
xchg
inc
fild
and
mov
and
push
dec
mov
dec
shr
jl
inc
les
inc
loope
jecxz
sti
loop
jne
push
mov
retf
xor
jecxz
retf
aad
scas
daa
loopne
addr16
push
jo
(bad)
xor
jne
iret
mov
add
es
push
mov
or
or
push
mov
xor
mov
push
lea
sbb
(bad)
push
mov
inc
adc
(bad)
push
lock
xchg
or
add
cmp
das
(bad)
jns
lock
inc
popa
pop
out
cmp
jne
inc
cs
mov
inc
add
hlt
xchg
je
sub
dec
push
stos
xchg
sub
hlt
and
inc
push
jne
cmp
jne
inc
loope
sub
dec
into
psadbw
(bad)
fdivr
ror
mov
(bad)
mov
or
pop
je
lods
xlat
aas
faddp
add
and
adc
push
sbb
and
or
or
push
pop
dec
or
mov
inc
arpl
sbb
dec
sbb
loopne
xor
lds
mov
out
and
ret
add
cmp
dec
dec
in
jl
(bad)
dec
add
cmp
jns
mov
mov
and
adc
adc
out
fs
sbb
jb
jbe
daa
rol
lahf
mov
clc
inc
push
leave
mov
into
and
xchg
cmp
js
neg
lahf
xor
push
push
or
int3
pop
or
pusha
imul
fmul
sub
popf
and
add
mov
hlt
dec
dec
lods
(bad)
in
and
rcl
fwait
adc
mov
mov
movsx
and
or
lea
out
sbb
sub
movs
(bad)
xlat
sbb
adc
inc
push
cli
jl
ret
push
push
add
pop
inc
ret
xlat
(bad)
ret
or
out
push
cmp
pop
(bad)
dec
push
add
dec
push
jl
jge
mov
push
and
jge
inc
push
fdiv
sbb
mov
test
aas
fiadd
push
mov
ins
scas
rol
mov
int3
movzx
test
jnp
cmp
jl
shl
lahf
fadd
push
add
fcom
jne
imul
mov
push
pusha
mov
cmp
sub
push
cmp
or
addr16
cmp
push
lahf
ret
icebp
js
pop
adc
repnz
add
(bad)
ficom
and
or
sbb
pushf
or
das
ret
lods
sbb
jmp
inc
in
mov
je
pop
std
sub
cwde
iret
push
aas
popa
movs
pop
out
push
sbb
retf
dec
adc
mov
dec
jl
repnz
dec
cmp
push
jg
(bad)
lods
das
popa
loope
rol
mov
jne
dec
ss
sbb
test
mov
mov
cmps
xchg
pmuludq
mov
sub
xchg
iret
jp
add
lods
mov
adc
pop
das
popf
cwde
and
sub
mov
adc
rcl
jle
mov
push
loopne
push
xor
mov
dec
fnstcw
inc
aam
jbe
dec
mov
push
imul
push
pop
nop
push
jae
and
push
cld
push
ja
push
ror
mov
call
rcr
mov
mov
jae
icebp
shr
add
movs
adc
cmp
or
lock
sbb
call
jp
in
xor
add
cdq
inc
or
(bad)
dec
xchg
outs
push
clc
rol
mov
shr
rcr
test
movs
adc
xchg
cmp
fild
or
int
mov
mov
and
mov
or
out
clc
xchg
mov
push
mov
xchg
test
(bad)
scas
mov
mov
push
push
sub
or
xor
nop
xchg
push
push
push
enter
ins
cmp
mov
sbb
push
fld
aam
adc
or
pop
sbb
add
push
sbb
add
mov
or
ror
sub
add
inc
xlat
push
xchg
cmp
and
inc
pop
push
pop
xor
add
jp
sbb
mov
push
aas
cld
mov
push
jns
mov
adc
adc
bswap
test
pushf
mov
inc
cld
or
mov
int3
xor
push
jb
js
push
(bad)
scas
xchg
addr16
test
dec
hlt
lock
cmp
sub
inc
sar
jmp
mov
mov
adc
inc
cmp
inc
add
test
aam
and
movs
sbb
sbb
xchg
shr
jns
add
std
sub
adc
aaa
cmp
dec
lds
cmp
or
pop
stos
out
outs
mov
push
push
sub
push
push
dec
mov
sbb
push
out
ss
js
call
cmp
xchg
sub
cmp
inc
xor
mov
inc
rol
push
dec
hlt
dec
push
sbb
add
push
call
or
fwait
mov
adc
iret
mov
inc
lds
test
ins
mov
mov
test
xchg
inc
lock
push
fdiv
add
adc
cmp
and
xor
ins
sub
cmp
push
loope
call
les
gs
pop
or
push
nop
or
cmp
sbb
imul
jl
sub
lahf
adc
push
mov
mov
popa
xlat
(bad)
in
loopne
arpl
rol
and
cmps
rol
(bad)
push
fild
sbb
push
int
cwde
cmp
gs
loope
push
xor
add
sub
shl
(bad)
jno
dec
mov
mov
outs
add
mov
push
lock
and
add
iret
sbb
add
pop
pop
cmp
push
pop
add
es
add
add
and
cmp
aaa
es
jp
aaa
mov
pop
call
ja
pop
mov
test
jno
fbld
sahf
sub
xchg
lods
mov
(bad)
dec
xchg
mov
push
mov
dec
push
pop
pop
cmps
movs
jo
outs
(bad)
fwait
mov
sbb
pushf
outs
and
mov
sbb
aad
adc
out
scas
jp
mov
ss
(bad)
push
int3
mov
add
dec
cmp
cmp
push
mov
push
adc
add
xor
mov
in
scas
xchg
pop
inc
aam
int3
cmp
scas
or
add
dec
shl
call
mov
pop
xchg
ss
inc
dec
das
outs
adc
inc
repnz
je
lods
adc
pop
je
mov
nop
pop
enter
push
call
fadd
jo
les
scas
test
out
push
jl
fwait
aas
sub
aam
and
loopne
cld
push
push
add
pop
cdq
add
stc
addr16
xchg
and
cld
int3
pop
cmp
mov
add
in
or
adc
pop
inc
mov
aam
mov
ins
cmp
lea
sbb
push
add
push
cli
xchg
lea
out
call
mov
jecxz
loopne
fcom
or
dec
sbb
sbb
add
sti
push
push
sbb
call
test
push
ss
sub
or
jmp
call
pop
sbb
or
mov
push
or
add
jbe
or
dec
jg
in
call
cmp
push
lea
add
mov
adc
pop
add
add
inc
and
xor
cs
call
sub
adc
sub
pop
xchg
mov
inc
(bad)
pop
mov
clc
add
popf
cmp
mov
cmp
push
lods
sbb
or
jnp
mov
mov
adc
push
and
fsub
push
inc
mov
mov
fdiv
sub
into
sbb
add
jge
adc
mov
test
neg
or
mov
jns
ret
div
into
and
and
or
pusha
xor
pop
ret
push
inc
cmp
add
pop
je
xor
mov
int3
adc
jmp
sub
dec
and
dec
inc
rcr
adc
mov
dec
sar
sub
or
and
and
adc
enter
push
jp
(bad)
clc
lods
ins
les
cmp
add
push
div
adc
pusha
lahf
and
sub
loop
jmp
inc
push
pop
ror
mov
mov
mov
mov
cdq
call
add
jmp
mov
and
hlt
call
test
jg
xchg
mov
add
jmp
sbb
add
dec
scas
je
jmp
mov
outs
push
inc
daa
pop
hlt
mov
xor
xor
cmp
test
cmp
and
xor
mov
push
(bad)
lea
jg
cmp
sub
xor
retf
adc
add
out
adc
outs
push
jg
add
cmc
add
jecxz
inc
aas
and
mov
stos
push
cwde
imul
test
test
ja
push
pop
sbb
inc
cmp
shl
sbb
xchg
lock
and
cmp
jne
and
ror
add
outs
mov
pop
stos
ret
pop
or
or
pop
mov
cs
call
clc
jne
mov
cmp
into
arpl
xor
dec
mov
je
add
mov
pop
adc
out
push
xlat
adc
clc
and
dec
and
sub
inc
add
pop
outs
clc
movs
add
cmp
push
je
push
lds
int
push
icebp
adc
pusha
add
add
mov
aam
dec
in
cdq
(bad)
xchg
movs
push
dec
aam
cwde
je
inc
pop
sub
shr
xchg
or
pop
add
aam
pushf
lahf
and
mov
ret
mov
stc
fwait
adc
(bad)
xor
or
cmps
or
push
add
add
sub
sub
xchg
out
call
stos
data16
push
or
mov
push
mov
sbb
push
cdq
mov
and
or
or
dec
pop
stos
jnp
adc
jne
loope
sbb
mov
mov
aas
je
sahf
ror
sbb
pop
jbe
test
xchg
jne
mov
xor
(bad)
into
test
mov
push
scas
jne
mov
or
push
sbb
push
dec
ds
fmul
or
and
xor
cmp
aad
lds
push
add
pop
ficomp
sbb
out
dec
fcom
adc
add
xchg
and
in
loop
mov
int
or
in
cmp
(bad)
jle
push
sbb
mov
push
mov
inc
lea
jmp
xchg
adc
jbe
dec
xchg
add
fistp
test
mov
sti
or
inc
mov
mov
cmp
mov
sub
add
mov
into
adc
sub
mov
jmp
hlt
mov
jmp
push
or
xor
push
or
xlat
sahf
(bad)
ja
xchg
test
je
les
adc
push
inc
xchg
call
(bad)
jl
int
(bad)
aaa
nop
xchg
mov
jne
lds
lds
push
(bad)
in
pop
sub
jbe
aad
cmp
aad
cmps
test
push
int
sub
push
out
jo
dec
push
jae
adc
adc
sbb
xchg
xchg
or
stc
int
and
push
fsub
fninit
fild
push
xchg
add
inc
imul
inc
or
call
or
xlat
push
iret
or
dec
sub
mov
ret
sbb
or
lods
lods
cmps
(bad)
push
(bad)
int
movs
mov
add
aas
(bad)
out
or
pop
inc
icebp
mov
add
jge
xor
cmpps
loopne
adc
stos
or
cmp
cmp
xchg
ins
pop
cs
xor
or
fdivr
add
arpl
xchg
clc
push
mov
push
inc
xchg
sbb
js
jge
push
mov
jmp
mov
inc
pusha
arpl
inc
comiss
xor
sbb
cs
mov
ins
dec
call
add
cmp
jle
in
add
xchg
shr
cmp
ret
cwde
ins
mov
mov
les
loope
pop
or
test
call
or
add
rcl
cs
add
or
sbb
or
xchg
sbb
jecxz
or
movs
dec
xchg
inc
jge
and
in
xor
add
mov
fistp
call
add
jl
(bad)
shr
add
into
cmp
jo
loop
jl
ins
inc
add
das
push
mov
(bad)
cdq
sub
push
sub
std
xchg
push
pop
mov
mov
push
or
or
in
stc
push
inc
into
push
enter
cs
bound
je
js
push
scas
sar
mov
push
fwait
repz
inc
pop
rol
in
add
nop
and
mov
bnd
cwde
cli
test
jnp
daa
add
mov
inc
add
(bad)
xlat
aad
or
sub
jmp
add
bnd
and
lock
mov
mov
in
add
add
(bad)
or
imul
or
inc
test
test
jge
ins
inc
out
mov
adc
mov
inc
or
mov
or
sbb
pop
inc
pop
inc
retf
and
hlt
mov
idiv
mov
sbb
(bad)
mov
inc
adc
data16
push
add
jl
movzx
out
or
add
add
in
(bad)
je
adc
repnz
inc
sar
mov
sub
es
sbb
mov
push
cmp
dec
mov
mov
test
sub
add
sub
xor
add
pop
enter
(bad)
loop
mov
cmp
mov
add
jbe
inc
cmp
jl
and
and
mov
dec
test
lea
jmp
jle
mov
mov
dec
pop
shl
xrelease
add
add
push
adc
data16
ror
test
(bad)
call
sub
jno
adc
dec
jo
mov
inc
inc
push
cmp
or
pop
adc
fcomp
leave
mov
add
xchg
dec
inc
push
aas
xlat
pop
sub
add
stos
jmp
sub
push
sub
ror
adc
jo
fs
add
push
xor
mov
xor
jecxz
cmp
hlt
sub
adc
outs
loopne
mov
dec
pop
pop
sbb
jbe
mov
int3
sete
cmps
sub
jecxz
inc
push
pop
dec
adc
test
call
dec
nop
popa
int3
sahf
(bad)
or
and
pop
cmp
jo
jne
mov
push
dec
pushf
adc
cmp
ss
mov
dec
or
add
popa
jne
or
call
mov
ins
addr16
add
dec
mov
inc
les
jmp
mov
mov
push
mov
ins
xor
out
adc
xchg
inc
iret
cmps
dec
sar
push
(bad)
cmp
mov
loopne
and
dec
pop
push
push
dec
add
pop
push
sbb
cdq
(bad)
push
pop
(bad)
movnti
add
pop
(bad)
push
mov
or
jnp
or
call
rcr
mov
pop
ins
add
dec
cmp
lea
jo
jo
jmp
lea
arpl
cld
mov
mov
mov
pusha
sub
xchg
pusha
adc
sahf
cmp
cmps
adc
pop
push
in
(bad)
int3
add
or
add
fdivr
es
ret
pop
ss
iret
cli
stos
mov
mov
call
cmp
int
adc
add
mov
addr16
inc
data16
jp
inc
jl
std
(bad)
push
push
cmp
hlt
scas
in
add
cmp
dec
pop
js
xor
add
mov
jne
or
mov
das
iret
pusha
mov
dec
adc
mov
adc
nop
xchg
aam
mov
mov
xchg
jne
mov
push
mov
xchg
adc
pop
xchg
dec
jl
adc
mov
fisub
and
movs
xlat
ja
add
scas
lds
cmp
fisttp
push
mov
push
cld
add
rol
xchg
adc
or
in
(bad)
sub
mov
retf
pop
or
cwde
push
push
pop
or
mov
push
rcr
fisttp
je
jne
repz
push
dec
xor
not
inc
inc
sub
cwde
sahf
mov
shr
rcr
inc
push
adc
jno
popf
cli
xchg
pusha
sbb
sbb
(bad)
add
jmp
mov
jle
xor
mov
iret
pop
add
icebp
and
ret
xchg
(bad)
mul
nop
jecxz
fistp
rol
add
ret
arpl
inc
and
or
add
mov
cmp
push
sbb
mov
(bad)
adc
mov
add
cmp
sbb
fdiv
and
adc
hlt
cs
adc
loop
inc
sub
fsubr
mov
lods
ret
mov
jmp
test
xlat
sub
sbb
sbb
xchg
push
cmp
mov
xchg
push
sub
int
movs
fdivr
lds
sub
(bad)
mov
clc
sbb
dec
mul
mov
pop
in
enter
enter
pop
cmps
icebp
or
xchg
sbb
add
(bad)
mov
xchg
je
sbb
push
lea
lock
cli
(bad)
ins
cmp
sbb
data16
rol
push
retf
jle
popa
and
pop
or
or
dec
lea
jno
aas
dec
sbb
mov
popa
pop
push
or
(bad)
aad
sbb
jb
push
mov
or
mov
add
sub
or
adc
pop
stos
mov
cs
push
sbb
sbb
popa
cli
dec
jnp
add
call
cld
rcr
cmc
outs
ja
or
mov
push
cmp
mov
lock
push
push
dec
test
cwde
jmp
call
dec
dec
(bad)
jl
jl
xchg
fnstenv
xchg
ret
mov
push
sbb
jmp
fild
add
inc
xor
xchg
xchg
xchg
xchg
femms
sbb
cmp
fs
mov
das
xor
or
xchg
outs
or
push
sub
push
push
cli
(bad)
sbb
aaa
pop
fwait
add
xor
cmp
xor
mov
mov
inc
jmp
js
push
std
sbb
and
jns
add
push
lods
out
pop
or
jp
fistp
adc
sub
dec
je
fstp
or
aaa
fcmovnb
push
xor
and
xor
out
ror
mov
sbb
add
push
add
nop
call
adc
adc
push
or
or
pop
push
add
inc
repz
aas
dec
fld
aad
ins
rol
and
cmps
fnstcw
aam
aad
mov
push
ds
idiv
movs
sar
sti
aad
fstp
dec
mov
push
xchg
test
sahf
out
pop
xchg
rcl
cmc
push
pop
es
mov
push
adc
inc
inc
(bad)
les
outs
outs
add
mov
inc
out
lds
jne
mov
jbe
push
add
cmps
sub
pop
sbb
enter
pop
adc
test
add
cs
pop
pop
sub
jg
sbb
xor
ds
mov
mov
inc
add
fild
or
jno
clc
cwde
inc
div
jno
in
pop
in
pop
icebp
dec
fnstsw
test
clc
cmp
movs
ror
push
add
ds
dec
adc
es
cmp
ins
bound
js
mov
test
pop
push
aas
ror
cmp
pop
stos
fcom
push
jl
mov
je
xor
adc
push
pop
pusha
add
js
ret
push
adc
enter
push
mov
iret
bound
xchg
fnstsw
pop
pop
jne
fcmovu
popa
push
inc
add
push
mov
std
and
es
or
cs
jmp
pop
add
jge
sbb
add
inc
mov
push
cs
inc
xchg
mov
jb
xor
xor
inc
jne
push
pop
scas
xor
(bad)
fistp
cmp
sub
dec
pop
add
sbb
mov
xor
ret
add
xchg
aas
inc
jne
mov
mov
faddp
pop
jle
pop
ins
jbe
and
icebp
sbb
push
xchg
mov
cmps
or
mov
clc
dec
aas
in
xchg
xchg
in
rol
mov
or
adc
cmp
jle
je
inc
test
mov
add
jmp
stos
pop
(bad)
xor
lods
dec
sub
inc
push
fsub
push
ins
or
mov
daa
(bad)
dec
loopne
cmp
xor
lea
hlt
dec
shl
scas
xchg
mov
xor
leave
cld
dec
cli
push
mov
push
adc
cmp
mov
shr
sbb
aad
ret
jns
xor
or
push
xor
mov
mov
add
jbe
mov
add
pop
and
jle
fstp
into
xlat
gs
dec
je
sbb
fdiv
adc
outs
add
xor
lahf
or
call
add
sbb
pusha
jp
mov
add
xor
mov
pop
xor
add
add
or
(bad)
adc
movs
pop
inc
out
cmp
or
mov
or
pop
add
push
aam
out
pop
ror
sbb
mov
fdivr
lods
(bad)
add
mov
pop
push
aam
fwait
cmp
xor
add
add
jmp
adc
and
add
aam
jns
ds
push
test
cmp
and
mov
push
inc
mov
popa
arpl
adc
mov
loopne
xor
or
jle
jno
xor
into
xor
ss
out
inc
je
(bad)
xchg
mov
sbb
leave
loopne
jg
xor
xchg
or
sbb
mov
cli
test
cmp
test
sub
je
mov
mov
sti
jle
dec
push
jle
cmp
sbb
adc
push
add
popa
pushf
aad
or
ja
xchg
xchg
setge
out
nop
clc
es
imul
or
mov
es
fcomp
cmp
bound
inc
popf
test
push
or
sub
fld
jge
ret
dec
dec
pop
add
push
sub
(bad)
jmp
add
sbb
sbb
mov
aam
adc
cmp
jne
fmul
movs
pop
not
dec
xlat
fcomp
inc
outs
call
test
pushf
xchg
nop
jo
inc
sbb
push
punpcklbw
mov
popa
(bad)
lahf
lea
adc
pop
mov
bound
das
icebp
pop
sar
ja
fiadd
or
add
pop
sbb
adc
cmp
and
data16
hlt
push
add
sahf
neg
xor
mov
push
mov
jns
les
sub
(bad)
jb
adc
xchg
lahf
xor
pusha
xor
inc
fisub
push
jg
cli
push
outs
ds
add
mov
cdq
sbb
lea
push
retf
push
and
adc
mov
js
retf
mov
into
jo
fdivr
(bad)
inc
ins
mov
dec
dec
cmc
mov
xlat
(bad)
or
pop
test
stc
xchg
les
jne
mov
clc
or
sub
stc
jmp
mul
xchg
ror
ins
jo
add
cmp
jae
sbb
mov
xor
dec
retf
push
xor
and
(bad)
dec
rol
cmp
fwait
push
nop
xchg
cmp
imul
or
mov
shl
dec
cdq
pop
or
xor
mov
xchg
sub
outs
mov
mov
dec
repz
ins
ffree
inc
scas
ficomp
inc
xor
dec
cmp
adc
int3
dec
sbb
pop
ror
dec
shl
aad
adc
mov
sahf
adc
add
test
pop
jne
(bad)
push
pop
add
test
outs
cmp
inc
push
mov
add
adc
dec
jb
add
mov
add
xor
cmp
shr
cmp
and
in
test
fcom
loope
and
div
dec
jae
loope
push
bound
daa
iret
mov
cmps
push
(bad)
(bad)
shl
in
cli
pushw
loop
add
dec
push
jno
test
jb
fdiv
xchg
lods
lds
iret
in
rcr
movlps
iret
jnp
jecxz
ins
push
jnp
xchg
mov
sti
cmps
loopne
fsubr
jecxz
cli
push
add
iret
dec
sbb
ds
bound
into
ds
outs
jl
in
xchg
in
and
loopne
mov
(bad)
in
fnstcw
jle
or
sbb
ds
jae
cmovnp
popa
outs
jnp
repz
push
into
add
out
sahf
xchg
or
call
hlt
push
inc
adc
out
pop
addr16
(bad)
jl
fwait
dec
ror
in
push
stc
adc
sub
fidiv
pop
push
ins
push
js
(bad)
cmp
aaa
or
jmp
repz
fidiv
dec
xchg
cs
ss
mov
dec
pop
jmp
cmp
out
push
jmp
pop
data16
imul
jo
out
adc
push
scas
leave
retf
mul
jns
std
push
in
es
lahf
out
jle
pop
in
push
les
fiadd
xor
sbb
dec
rol
dec
out
(bad)
clc
pushf
cmp
adc
test
jmp
icebp
pushw
pop
repnz
int
xlat
xchg
repz
hlt
mov
mov
jae
cmps
stc
mov
cmc
and
out
sub
lea
out
cmc
daa
dec
adc
bnd
cmps
push
daa
aas
push
imul
jle
mov
popf
pop
mov
ror
pop
sbb
inc
xor
mov
adc
iret
pop
int3
push
hlt
or
mov
xbegin
jmp
pop
retf
mov
mov
imul
or
das
and
dec
add
daa
add
les
lea
dec
in
dec
cmp
adc
sub
inc
loop
cwde
sbb
sub
popf
pop
xchg
xchg
lods
fisttp
daa
mov
aaa
daa
sbb
pop
cmp
call
(bad)
not
mov
mov
rcr
jo
pushf
adc
mov
ins
popf
mov
add
mov
call
aam
xlat
inc
int3
jne
hlt
sub
dec
(bad)
push
xor
mov
or
je
hlt
clc
sub
add
mov
mov
hlt
fst
jb
mov
leave
test
call
addr16
mov
pop
(bad)
sahf
lods
or
xchg
push
mov
inc
pop
fs
aam
pusha
mov
inc
in
sbb
lods
mov
shr
jge
and
or
in
inc
in
mov
and
(bad)
leave
hlt
add
in
movs
cmp
in
js
pop
jmp
adc
into
sbb
(bad)
les
lods
popa
(bad)
in
leave
cmp
jo
xacquire
jecxz
out
inc
retf
sub
enter
sbb
or
rol
lods
dec
add
push
sbb
cmps
inc
clc
dec
mov
rcr
push
aam
test
iret
repz
in
lods
add
in
sbb
test
sbb
mov
push
movs
scas
movs
jg
push
imul
and
cmp
add
mov
cmps
pop
movs
add
pop
pushf
rcr
inc
adc
add
cli
ins
icebp
stos
sub
push
dec
add
les
aam
cmp
imul
jae
sbb
sbb
push
pusha
addr16
inc
pop
scas
sub
cmp
out
ins
stos
or
mov
rol
jo
ret
xor
sbb
inc
cwde
mov
jae
xchg
or
xor
out
mov
push
xchg
hlt
das
inc
shl
mov
pop
retf
cs
das
pop
sub
and
aam
mov
jecxz
push
sbb
mov
ret
dec
add
test
inc
movs
mov
jmp
or
add
and
xchg
ud1
int3
mov
push
fs
push
mov
ins
add
mov
push
lds
lods
mov
dec
fs
out
pop
stos
arpl
(bad)
les
push
imul
imul
call
and
xor
and
dec
jne
test
adc
fmul
push
bnd
out
sub
ror
adc
bswap
loope
ret
call
jl
sbb
add
pusha
mov
inc
adc
pusha
and
or
pop
les
lsl
adc
and
xchg
loope
cmp
imul
mov
shl
mov
and
cli
add
cmp
shl
push
std
and
scas
push
add
pop
push
ret
sub
xchg
cmps
rcl
xchg
push
add
jns
mov
in
movs
shl
test
aam
mov
or
mov
pop
dec
xchg
js
push
retf
(bad)
mov
pop
mov
lock
adc
push
ins
add
xor
adc
xor
xchg
push
in
inc
loopne
or
in
cdq
mov
push
mov
out
pop
mov
adc
push
mov
loopne
dec
es
mov
sbb
pop
mov
sbb
push
sbb
xchg
mov
sub
les
and
adc
dec
adc
in
inc
inc
cmp
jp
push
lds
aam
adc
cmp
pushf
xchg
mov
jo
jo
js
sub
push
sub
adc
push
mov
xchg
ins
adc
jae
popf
enter
dec
add
test
fidiv
data16
imul
dec
xor
inc
in
mov
sbb
fsub
or
addr16
sbb
and
in
inc
(bad)
les
and
add
sub
xchg
sub
sub
adc
and
out
pusha
(bad)
jge
aam
push
push
imul
and
jne
push
sbb
adc
sbb
inc
dec
enter
lds
inc
inc
outs
fld
fdiv
lock
mov
mov
xor
icebp
jecxz
inc
cmc
out
pop
add
jmp
sbb
rcl
xchg
adc
xchg
loop
lock
stos
pop
or
dec
and
sbb
out
or
dec
add
popa
movs
adc
push
sbb
or
add
xchg
call
mov
leave
or
ds
test
mov
scas
stos
repz
and
cmp
dec
jnp
loop
dec
test
or
in
inc
or
cmp
xchg
pop
add
dec
add
cmc
in
sahf
or
xor
inc
xor
shl
add
and
push
jb
dec
fmul
or
movs
popa
and
fbstp
jmp
ss
push
das
mov
in
cmp
push
in
sbb
nop
aam
inc
cs
nop
dec
add
mov
mov
ss
xchg
sbb
jae
cmp
out
cmp
cmp
sbb
dec
jg
rdmsr
jle
mov
mov
dec
add
adc
inc
movs
add
push
pop
cs
mov
mov
mov
in
mov
jae
nop
and
push
jmp
aaa
dec
ins
and
pop
repnz
and
(bad)
sub
ds
cld
jmp
xor
jg
jo
addr16
jae
and
pusha
in
stos
add
out
push
sbb
pop
mov
pop
cmps
sar
mov
add
daa
aam
sbb
pop
or
lock
push
inc
push
dec
cmp
popa
cmp
pop
in
mov
mov
je
or
push
xor
clc
sub
add
xchg
push
fadd
aam
nop
adc
xchg
push
test
jge
mov
inc
jo
(bad)
in
jmp
arpl
in
in
repz
adc
arpl
mov
push
ins
dec
sbb
bound
jns
add
ss
xchg
(bad)
in
test
inc
iret
and
add
adc
test
push
prefetchnta
neg
xor
aad
and
adc
rcl
mov
ret
movs
pcmpeqb
pop
movs
fwait
inc
or
xchg
mov
add
add
clc
ret
inc
dec
lds
dec
sar
jecxz
xchg
inc
cwde
sahf
pop
jecxz
mov
imul
mov
or
enter
dec
pop
das
in
hlt
and
xchg
out
(bad)
jmp
pop
add
es
jmp
push
add
jle
movs
jnp
dec
adc
inc
loope
sub
ss
fbstp
pop
jae
sbb
les
adc
retf
in
jmp
mov
mov
test
adc
clc
sub
mov
neg
arpl
or
xor
hlt
bnd
sub
aaa
add
and
mov
(bad)
lock
pusha
add
add
in
mov
xor
pop
mov
inc
ror
int
mov
pop
or
push
or
out
or
aam
jl
inc
adc
daa
mov
pop
es
int3
test
test
add
rcr
mov
jge
cwde
push
adc
push
add
outs
jmp
sub
xor
pop
(bad)
lahf
push
mov
loope
push
mov
cmp
mov
add
ds
pop
or
int3
movs
jmp
mov
add
lock
out
adc
retf
cmp
xchg
rcl
test
ret
inc
jnp
mov
push
sbb
pusha
cwde
jp
adc
xor
cmp
test
xchg
inc
mov
jmp
mov
and
std
sub
add
stos
mov
pop
mov
jp
fild
adc
push
sub
cmp
jl
test
or
xrelease
pusha
xchg
inc
sub
(bad)
xchg
icebp
cmp
lods
ins
cmp
jbe
inc
and
scas
xchg
adc
push
and
jle
push
pushf
mov
lea
(bad)
adc
add
dec
ins
push
fdiv
add
rol
cmc
lods
aas
push
jmp
jge
stos
push
cmp
inc
jb
pop
and
sub
adc
push
ja
ret
adc
push
repnz
inc
sbb
push
push
or
pop
sbb
test
cdq
lahf
aam
dec
call
jmp
dec
add
push
mov
stc
add
dec
scas
in
inc
push
mov
call
sbb
(bad)
(bad)
mov
fmul
out
push
jle
call
push
push
push
pop
push
xchg
fcomp
xor
lock
pop
scas
and
ja
mov
bound
aad
nop
push
push
push
and
or
out
in
or
rcl
mov
push
mov
dec
xchg
sar
int3
mov
sub
push
mov
push
or
nop
into
je
outs
xchg
inc
sbb
rcl
pop
dec
push
js
push
sbb
inc
inc
pop
inc
js
jns
jno
mov
sbb
cmp
jg
sub
mov
(bad)
(bad)
ds
add
adc
add
mul
jo
mov
and
sbb
jmp
add
cmp
xor
fdivr
(bad)
jg
xor
jp
jbe
add
add
add
or
mov
push
ja
dec
dec
mov
inc
or
or
or
neg
push
in
xchg
data16
add
ror
inc
push
jmp
mov
add
xor
aaa
add
and
push
hlt
add
mov
add
std
sub
or
mov
push
mov
jo
(bad)
fadd
sub
xchg
sbb
or
jl
ror
into
jno
pop
lea
xor
call
push
sti
adc
das
mov
or
es
xchg
imul
push
jmp
add
inc
out
sub
inc
dec
and
fmul
adc
imul
and
imul
push
mov
mov
dec
enter
cmp
enter
sbb
out
mov
inc
pop
sbb
idiv
inc
les
scas
xor
loopne
enter
ret
movs
and
test
lods
mov
and
stos
sar
xchg
pop
or
neg
sahf
ficomp
add
jle
add
and
mov
or
jp
add
xchg
addr16
jmp
xor
push
enter
sub
neg
out
outs
and
cli
pop
mov
add
movsx
cmp
sub
mov
push
mov
mov
push
pop
in
push
mov
and
rcl
retf
or
add
add
xchg
retf
rcl
jne
xchg
add
lods
(bad)
push
pop
mov
add
pop
pushf
ds
and
push
and
inc
inc
push
cmp
pop
jne
inc
cmps
outs
nop
fadd
sbb
mov
(bad)
xchg
xchg
das
cmp
pop
out
push
push
mov
or
nop
sub
or
add
mov
mov
dec
inc
adc
adc
in
sub
test
(bad)
popa
sub
adc
add
cmps
add
sub
mov
push
popa
pop
popf
fcomp
into
hlt
cmp
mov
adc
or
mov
mov
cmp
pop
mov
ins
imul
shr
jl
pop
add
xor
or
call
fimul
loopne
out
mov
and
in
sbb
out
push
xchg
xor
dec
lods
das
adc
loopne
in
add
jb
sbb
pop
add
js
fdivr
rcr
push
or
nop
(bad)
cmc
xchg
cmp
jmp
inc
cli
movs
or
dec
dec
outs
loop
push
dec
xchg
sbb
sub
xchg
or
or
inc
push
add
stos
or
add
jb
jb
ror
mov
cmp
or
add
xor
jl
nop
pop
lock
inc
or
inc
movs
push
test
mov
movs
mov
mov
mov
sub
add
mov
and
jmp
adc
sbb
jl
jecxz
(bad)
pop
addr16
jmp
push
je
dec
push
es
add
xor
test
jmp
fnstcw
pushf
mov
jns
nop
push
sar
bound
dec
clc
call
imul
xchg
in
adc
dec
dec
loopne
cmc
adc
addr16
jae
adc
push
call
inc
add
xor
or
out
xor
and
mov
cli
cdq
add
jge
and
mov
lahf
fldcw
sbb
mov
ins
add
clc
sub
jb
test
adc
sub
inc
out
sbb
jmp
xchg
rcr
cwde
and
mov
mov
xchg
push
call
lea
mov
push
ffree
loop
push
lahf
jmp
ret
stos
or
(bad)
sbb
gs
jecxz
pop
or
inc
push
xchg
es
cmp
add
cli
pop
add
sub
xchg
dec
movsx
neg
add
je
xchg
push
cmps
xor
(bad)
sbb
test
out
mov
add
push
sar
inc
xchg
inc
add
push
jmp
fs
jl
jmp
shl
lfs
xor
das
or
sbb
pop
sub
jne
mov
enter
ins
or
push
xchg
add
xchg
idiv
lea
sti
xchg
or
nop
or
in
mov
inc
icebp
jmp
push
mov
push
dec
push
add
stos
cwde
rol
pop
or
ret
adc
(bad)
mov
fisub
mov
push
jmp
push
test
inc
sub
rol
lea
or
jl
and
(bad)
in
pop
lahf
idiv
mov
sub
push
bound
xchg
mov
ja
jbe
ins
int3
hlt
cmp
push
sbb
loope
push
imul
or
inc
cmps
push
pop
clc
je
shl
xor
fsub
and
pop
ss
dec
jmp
ins
jge
rol
cmps
sub
lds
inc
sub
jmp
test
pop
cmp
pop
inc
stos
xchg
or
push
das
call
ret
or
sbb
sub
and
sbb
push
add
aam
mov
cmp
call
jge
rol
retf
ss
jg
nop
dec
add
(bad)
mov
or
loopne
pop
sti
cmp
shl
mov
nop
shl
mov
or
mov
ja
mov
add
out
or
sbb
dec
hlt
cld
mov
jecxz
inc
push
mov
sub
jb
adc
mov
or
imul
lods
dec
adc
sbb
movs
add
or
loopne
fcom
inc
gs
adc
lock
pushf
mov
and
leave
cmp
(bad)
xor
xor
ins
cmc
aas
inc
test
je
fnstcw
push
pop
test
sbb
or
cld
bound
push
stos
adc
xor
sbb
add
inc
(bad)
es
int3
scas
add
cmp
push
out
inc
push
dec
imul
dec
ds
lods
por
adc
dec
sub
es
aad
test
push
push
cld
call
out
inc
xlat
cmps
xor
jl
je
mov
mov
call
adc
sbb
pusha
(bad)
push
pop
push
xchg
ja
aam
ret
(bad)
aas
sub
fcom
pop
xor
mov
sub
jg
rol
or
push
loope
or
jbe
sbb
out
sti
and
jg
jmp
and
je
push
cmp
xor
(bad)
loopne
mov
or
adc
inc
mov
ja
cmp
cmps
cmp
sbb
or
lods
(bad)
stc
data16
push
cmp
dec
movs
dec
(bad)
cmp
jns
cmp
or
out
push
mov
and
inc
cmc
xor
add
or
push
movs
sbb
jmp
jmp
stc
xchg
setb
jg
mov
sub
sub
and
pop
add
sqrtps
scas
cld
jge
adc
sub
xchg
movs
mov
pop
lea
rcl
mov
sbb
jecxz
add
jmp
mov
jp
icebp
or
retf
outs
xor
sub
mov
cmc
and
rcl
das
cs
pop
sbb
lahf
scas
adc
inc
sub
xchg
mov
hlt
shl
nop
fcom
fild
inc
cmp
imul
add
aam
aaa
mov
and
xchg
(bad)
cmp
inc
adc
xchg
or
rol
sub
mov
and
mov
inc
mov
add
pop
push
shr
mov
cwde
and
dec
or
ins
fcom
repz
mov
repz
(bad)
add
enter
or
into
xchg
xor
imul
xor
out
mov
(bad)
sbb
jmp
mov
(bad)
jbe
loopne
adc
add
inc
das
pop
imul
add
movs
sbb
mov
push
nop
jp
mov
or
iret
push
bound
movs
jge
add
dec
mov
push
pusha
call
mov
sub
jp
and
mov
(bad)
in
jl
and
or
into
out
es
jo
or
test
or
ss
or
or
mov
call
shl
shl
rcl
dec
inc
inc
push
dec
sub
daa
dec
cmp
div
fsubr
add
neg
loope
pop
shl
cmps
jge
jo
rol
in
fsub
or
shr
mov
inc
mov
add
inc
or
pop
and
dec
add
fist
daa
outs
out
in
jae
adc
(bad)
xor
jg
movs
rol
sbb
retf
inc
push
pop
aas
jns
push
mov
lea
jge
sub
sbb
out
test
add
popf
nop
les
mov
add
jg
or
adc
xor
pop
sar
(bad)
test
and
adc
dec
clc
inc
jbe
jo
sbb
add
fs
or
aaa
outs
dec
cmps
sub
dec
sbb
js
push
aad
adc
ins
push
iret
enter
or
inc
mov
adc
dec
inc
or
push
xor
inc
dec
cmp
test
ss
adc
(bad)
or
inc
imul
add
mov
xor
add
inc
or
aad
dec
and
addr16
cmp
jge
mov
push
movs
int3
test
je
test
and
scas
(bad)
int
cmps
jne
jbe
dec
sbb
cmp
fist
cmp
and
adc
in
mov
xchg
push
push
adc
or
jl
mov
add
mov
mov
cld
outs
dec
or
(bad)
leave
push
(bad)
movs
dec
xor
dec
add
sar
inc
push
and
sar
(bad)
aad
dec
cmp
cdq
into
je
shl
cmp
adc
push
or
adc
sbb
sbb
add
jecxz
seto
inc
repnz
(bad)
xor
push
leave
xchg
repnz
mov
mov
enter
pop
test
sar
dec
lods
test
nop
mov
aaa
mov
ror
adc
push
leave
repz
scas
popa
cmp
or
cmp
in
repz
sbb
dec
dec
add
xchg
inc
or
push
hlt
cmp
cmp
sub
mov
cmp
js
jno
in
shl
jmp
in
adc
js
(bad)
daa
out
mov
push
loopne
or
out
jge
jbe
loopne
cmc
inc
xor
scas
ret
sub
lock
sub
test
add
add
pop
cmp
nop
mov
nop
movs
fstp
mov
jbe
add
add
inc
and
enter
std
cmc
inc
fisttp
repz
dec
test
leave
or
pop
test
sub
test
faddp
imul
mov
pop
sbb
test
dec
cs
fisubr
cmp
add
imul
test
xchg
mov
das
push
pop
xchg
mov
int3
mov
mov
jmp
fsub
cmc
mov
mov
imul
sbb
add
cmp
mov
jne
jge
lea
or
mul
xor
inc
dec
jl
mov
test
push
ds
clc
das
inc
inc
pop
jmp
test
jns
push
fadd
rcr
push
out
push
and
test
pop
loopne
inc
and
cmp
sub
adc
(bad)
retf
push
and
push
push
or
cwde
mov
jmp
push
sub
or
cwde
xor
push
xor
stc
lods
or
iret
pop
pusha
daa
jle
add
lock
pop
fcom
cmp
rcl
cli
push
push
sbb
dec
scas
push
bound
mov
add
dec
adc
(bad)
jmp
pusha
loopne
or
ja
sahf
les
push
mov
cmp
jmp
pop
add
repnz
jno
setae
xchg
lods
pop
es
out
adc
mov
and
xor
imul
sub
mov
loopne
sbb
mov
push
sbb
pop
push
js
inc
std
xor
stos
push
add
jmp
jle
shl
add
inc
es
imul
das
gs
lahf
rcl
retf
mov
push
dec
sub
cmp
xchg
or
jbe
sahf
pushf
add
sbb
inc
lods
hlt
push
test
add
inc
das
jne
inc
retf
jo
addr16
jl
or
mov
push
call
lock
cmp
sbb
pop
sbb
arpl
stc
dec
add
clc
cmp
shl
xchg
in
dec
push
out
and
sar
jbe
adc
into
inc
xor
fbstp
push
mov
pop
jo
push
or
shl
daa
add
rol
mov
or
xor
adc
imul
adc
pop
push
repz
pop
cmp
cli
and
mov
jbe
stos
add
je
xchg
add
inc
or
or
aad
sub
pop
dec
or
fisub
mov
aad
mov
in
add
xchg
inc
push
sbb
es
cmp
cmp
stos
add
imul
inc
mov
adc
pushf
mov
clc
inc
imul
xchg
das
popa
and
hlt
enter
test
mov
sbb
sub
dec
pop
(bad)
std
(bad)
jmp
jo
inc
and
fsubr
sbb
jmp
cs
or
in
sbb
sub
lods
pop
push
(bad)
xor
fnstcw
jl
push
movs
scas
add
pop
(bad)
cmp
ds
ins
sbb
add
cwde
movs
xchg
mov
or
(bad)
hlt
jmp
jns
cmp
dec
xor
and
sub
sti
call
movs
push
jmp
or
inc
mov
mov
popa
cwde
add
push
and
mov
adc
cmp
(bad)
jmp
inc
shl
cmp
fmul
pop
fsub
movs
push
stc
pop
add
ret
arpl
push
pop
fcomp
icebp
push
adc
sbb
call
pop
pop
retf
dec
pop
mov
fnsave
sbb
(bad)
retf
cmp
xor
bndldx
dec
xchg
cdq
dec
ror
inc
lock
rcr
(bad)
ja
push
dec
add
in
pop
pop
aad
mov
jno
push
push
cs
js
lods
cmp
push
or
xor
jle
shr
jmp
bound
mov
popf
ds
add
push
das
int3
push
push
adc
mov
movs
mov
cmp
test
push
scas
add
mov
xor
cmp
pop
cmp
jbe
dec
sar
ss
or
stos
and
push
ins
cmps
aad
sub
imul
and
cmp
add
xchg
lods
mov
js
xchg
pusha
xor
in
ret
nop
out
cmp
push
inc
push
loope
xchg
out
fld
ss
mov
mov
mov
dec
jb
loopne
lock
xchg
inc
lock
outs
aas
mov
sub
or
xor
inc
daa
jns
ds
xchg
jle
fdiv
add
ds
and
pusha
mov
daa
adc
gs
jo
mov
nop
fmul
cs
daa
pop
test
and
fucompp
adc
jl
ins
ins
mov
outs
movzx
inc
add
and
sbb
mov
or
mov
dec
daa
sbb
push
arpl
jge
cmp
aaa
int
and
jmp
mov
test
ins
or
push
mov
add
dec
lahf
and
pop
sbb
inc
pop
jmp
push
or
out
test
fwait
das
cmp
xchg
in
lds
mov
push
clc
pop
pop
rcr
jg
and
test
add
sbb
sub
(bad)
xchg
xor
pop
inc
inc
adc
loopne
push
test
jns
and
cmp
xor
and
push
cs
in
dec
cli
fcom
sub
ficom
mov
mov
and
or
shl
loop
ins
jge
lock
jns
int3
fdivr
cmp
add
fldenv
mov
mov
enter
hlt
sub
sbb
jmp
fdivr
loopne
or
sbb
inc
sbb
imul
xor
or
aad
inc
arpl
or
jo
mov
or
add
shl
fsub
mov
mov
sbb
shr
sar
cmp
mov
jle
mov
mov
push
sahf
mov
lods
or
les
cwde
xchg
mov
pop
mov
fld
ins
inc
dec
js
mov
add
ror
dec
call
adc
imul
inc
rcl
jmp
sar
cs
add
mov
fwait
ins
push
xor
inc
cs
sub
add
fidiv
stos
loopne
aam
enter
sub
pop
jnp
pop
call
cmp
and
xchg
adc
call
popf
out
jne
add
jo
outs
shl
leave
and
lds
and
js
xor
xchg
and
add
sbb
dec
pushf
or
lock
sar
loopne
(bad)
or
inc
adc
push
inc
adc
sub
or
dec
loop
sub
cmp
rcl
ret
cwde
ds
inc
bound
adc
add
dec
mov
ja
rol
mov
sub
mov
in
out
lea
adc
dec
sbb
mov
pop
fwait
cli
push
xchg
or
xchg
sub
cmc
xchg
test
shr
imul
push
jns
xor
or
or
push
jmp
sbb
je
mov
mov
(bad)
cld
(bad)
fidivr
push
push
jmp
sahf
mov
stos
push
pop
add
jb
push
out
shl
inc
test
jns
and
pop
add
push
sub
cwde
jmp
addr16
loopne
xor
mov
daa
add
popa
mov
call
mov
inc
enter
ret
xor
ror
mov
(bad)
or
xor
inc
clc
mov
lahf
stc
adc
shl
mov
or
or
movs
or
imul
je
ss
or
mov
or
aam
aaa
adc
xor
loopne
mov
push
repnz
pop
mov
push
lock
add
mov
or
jo
sbb
js
push
rcl
jo
sub
jo
mov
pop
rcr
inc
sbb
mov
push
xor
or
loope
mov
dec
fs
xor
push
outs
pop
dec
nop
in
mov
call
and
add
mov
scas
or
inc
add
push
and
sub
imul
push
xchg
daa
stos
pop
neg
xor
xchg
mov
cdq
aaa
pop
and
add
mov
in
into
xor
sub
fisub
or
ret
push
lds
add
mov
fstp
(bad)
lar
sbb
pop
and
fldenv
xor
push
cmp
and
xchg
and
mov
adc
repnz
xchg
inc
ret
fisttp
dec
push
dec
xor
add
pop
mov
dec
neg
mov
or
add
and
push
add
loopne
push
pop
adc
add
xor
pop
push
mov
lods
push
or
lea
adc
out
jp
jbe
or
(bad)
push
sub
loope
sahf
mov
mov
cmp
xor
dec
sahf
xor
or
push
mov
jl
test
enter
pop
or
imul
les
nop
jge
inc
xchg
sub
sahf
jno
rcr
shl
sahf
fst
mov
mov
gs
call
push
and
push
dec
inc
stos
jle
mov
not
lods
inc
retf
aaa
into
ins
mov
push
fsub
sub
imul
jmp
sbb
ret
clc
or
pop
inc
push
pushf
daa
out
sbb
cld
or
test
jg
popa
fsubr
add
inc
cmps
fbld
mov
pop
xchg
pop
xchg
xchg
add
jae
(bad)
sbb
jns
lea
cmp
ret
xchg
out
aas
sub
push
jl
test
and
and
lods
js
push
lods
adc
nop
jle
aaa
shl
out
xor
loop
xor
lea
xor
je
rol
jge
cmps
outs
or
push
shr
and
sbb
inc
dec
je
sahf
mov
adc
sub
ins
add
aam
dec
push
int
add
mov
and
or
inc
inc
iret
push
dec
push
sbb
or
add
cmps
test
jo
jmp
add
nop
cmp
(bad)
cmp
push
mov
cdq
or
push
in
mov
cmp
or
cdq
and
dec
sub
jmp
sub
out
rcr
push
mov
enter
or
pop
loop
js
pop
shl
sbb
mov
mov
loope
sbb
dec
call
loopne
xchg
repz
adc
mov
es
add
hlt
mov
mov
xor
push
add
adc
mov
cs
cmps
or
repz
jmp
sub
jno
std
add
je
in
(bad)
aaa
or
pop
in
ins
mov
call
out
in
ins
das
or
lock
jae
mov
test
pop
inc
aas
mov
hlt
test
jl
mov
sbb
loope
or
add
call
jns
mov
movs
jne
fimul
call
dec
in
mov
or
cwde
ins
daa
push
sub
fs
pop
push
sub
push
sub
jbe
cwde
inc
xor
xor
cmp
cmp
dec
dec
dec
inc
dec
clc
mov
lahf
mov
pop
bnd
xchg
(bad)
test
add
push
mov
test
lea
in
jmp
mov
and
mov
int
inc
fidivr
dec
inc
or
mov
or
sub
lods
inc
rol
and
es
cmp
cmps
imul
and
inc
imul
sbb
mov
add
sbb
mov
push
ins
cwde
mov
popa
push
jmp
mov
inc
loopne
cmp
pop
daa
xor
(bad)
fsubr
push
add
test
mov
push
cmp
mov
and
add
push
out
push
add
xor
or
imul
jmp
inc
pusha
inc
jl
or
das
inc
push
dec
lock
jmp
call
add
cmps
lock
add
call
mov
int
mov
inc
xchg
dec
or
stos
jne
inc
(bad)
nop
sbb
ja
cdq
ficomp
jo
add
and
cmp
or
fcom
aad
push
fdivr
mov
add
add
or
fild
push
mov
pop
test
aad
jmp
and
lock
or
lods
jmp
cmp
sbb
inc
mov
add
rol
push
mov
xor
cdq
inc
test
pop
loopne
dec
fmul
out
shl
sub
pop
jmp
fyl2x
fild
adc
or
dec
add
les
stos
xchg
or
ss
xchg
pop
lock
cmp
test
xchg
(bad)
out
sbb
jae
inc
inc
shr
loope
and
adc
pop
sub
pop
or
mov
mov
(bad)
and
dec
cmp
mov
xor
clc
popa
stos
sub
and
jp
test
pop
cmc
and
add
jle
(bad)
push
push
push
es
mov
test
scas
sub
popa
dec
xor
cmp
xor
mov
enter
sbb
and
test
add
(bad)
mov
xchg
add
push
call
clc
inc
mov
(bad)
ror
pcmpeqb
cmp
clc
sbb
dec
out
or
push
sahf
or
ret
sbb
dec
pop
loop
addr16
sbb
mov
jo
sub
popf
jbe
jmp
fs
adc
int3
push
out
dec
xor
jnp
cmp
(bad)
dec
pop
add
mov
loopne
rol
sbb
and
pop
xor
iret
or
fcomp
and
lods
in
push
cmp
jne
pop
push
dec
add
xor
fst
adc
mov
aad
adc
cmp
imul
sbb
dec
rcr
push
and
ja
mov
sbb
or
gs
clc
lahf
hlt
cmc
adc
iret
or
gs
push
xlat
sbb
cmp
ss
inc
hlt
dec
(bad)
enter
jge
sbb
nop
sbb
or
sub
pusha
push
or
test
mov
xchg
and
outs
or
loope
sub
mov
out
pop
push
push
mov
add
rol
inc
pop
into
mov
jb
ret
jbe
cwde
pop
sub
fidiv
shl
bound
(bad)
dec
lahf
push
push
(bad)
rcr
loop
or
sub
cmp
into
cmp
enter
lock
mov
push
(bad)
mov
sbb
js
and
and
ja
cmp
xor
cmp
pop
sbb
or
in
movs
cld
and
(bad)
lahf
outs
add
push
jns
xchg
ret
dec
jle
cmp
sbb
pop
je
sbb
push
add
mov
mov
es
jge
idiv
test
push
sbb
push
outs
invd
ja
stos
pop
adc
daa
or
imul
je
adc
or
psraw
mov
out
inc
cmp
sahf
loopne
lahf
jmp
push
pop
shl
outs
inc
mov
push
jbe
push
mov
pop
loopne
pop
dec
and
mov
and
push
jl
push
add
or
inc
mov
lea
and
mov
pop
or
ror
adc
inc
mov
and
mov
in
(bad)
retf
mov
and
mov
fcomp
lock
add
jne
adc
dec
mov
xor
add
cmp
bound
add
or
jae
mov
jmp
call
sub
outs
pop
ror
test
mov
dec
aam
cwde
pusha
cmp
aam
sbb
adc
out
in
pop
adc
inc
call
cmc
mov
and
jmp
push
cmp
or
sub
test
(bad)
push
xchg
jnp
neg
inc
cmp
pop
cmp
sbb
push
cmps
ja
add
out
cmp
call
push
shl
mov
mov
jno
arpl
sbb
and
cli
sbb
push
ror
retf
push
push
pushf
push
jle
adc
(bad)
cmp
mov
jecxz
mov
adc
adc
add
jmp
sbb
add
pop
idiv
mov
imul
add
push
jns
xor
mov
push
and
(bad)
mov
loop
andnps
dec
inc
(bad)
or
in
in
mov
clc
sahf
or
jae
ss
cmp
add
por
sbb
mov
jne
je
ror
mov
sbb
ss
loopne
mov
cmps
jge
test
in
add
and
pusha
and
sti
lahf
icebp
dec
sbb
faddp
xchg
cmps
add
ins
adc
je
mov
adc
inc
je
or
dec
mov
sub
pusha
fidiv
test
imul
mov
inc
lea
lods
fimul
movs
push
adc
pop
dec
inc
sub
push
add
add
cs
adc
call
imul
pop
xchg
xchg
loope
mov
dec
fcom
shr
call
adc
dec
setnp
xchg
in
mov
fsubr
add
sbb
fisub
cli
and
ret
push
rcr
add
inc
or
fwait
pop
inc
sbb
stos
jne
and
scas
fcom
mov
daa
ja
dec
or
pop
int3
popa
je
pop
aam
xor
iret
add
shr
(bad)
data16
arpl
jge
leave
rcl
cld
mov
mov
dec
inc
stos
mov
clc
xchg
inc
std
fdivr
sar
sub
mov
adc
cmp
dec
je
dec
sbb
jb
sub
lds
loopne
pop
in
sbb
xlat
inc
xor
ret
outs
xor
cmps
xor
ret
or
jo
cmp
cmps
jl
jbe
fisubr
sbb
pop
xchg
lds
or
sbb
cmp
adc
xchg
push
(bad)
sub
xor
xchg
inc
lods
lock
mov
leave
div
push
inc
jmp
ss
pop
and
js
xchg
fsubr
aam
jne
mov
add
add
mov
je
daa
ins
das
xchg
cmp
call
mov
sub
jbe
ror
or
loope
sub
dec
or
or
cmp
and
xor
or
mov
js
adc
je
add
or
cmc
mov
pushf
mov
and
jmp
xchg
pop
mov
lea
hlt
rcr
out
adc
mov
cmp
adc
sbb
xor
arpl
add
sar
pop
push
scas
xchg
cmc
je
sbb
test
jl
addr16
dec
shr
test
or
scas
or
adc
jne
xor
test
outs
fisttp
(bad)
sub
dec
mov
add
and
inc
dec
sub
lock
xchg
int3
mov
push
dec
out
jno
fst
es
xchg
lock
jns
add
sbb
fnstsw
retf
test
(bad)
push
mov
out
in
(bad)
jmp
mov
fsubp
inc
jbe
jmp
ror
push
add
or
aaa
jo
sbb
inc
rcl
enter
jge
pop
cmp
cmp
dec
or
xor
or
inc
mov
sub
adc
pushf
inc
push
dec
popf
es
push
and
adc
test
push
or
loope
xchg
in
or
pop
adc
loop
xor
in
sbb
sub
mov
mov
sbb
jo
or
add
fcom
add
inc
daa
iret
dec
jnp
mov
jo
jmp
(bad)
fbstp
loopne
les
sbb
pop
inc
movs
mov
mov
nop
aaa
out
sub
pop
push
add
repnz
and
jae
mov
push
add
and
add
rol
movs
bnd
cmp
mov
ret
xchg
adc
add
and
cmp
xchg
ins
xchg
pop
(bad)
adc
xchg
jbe
mov
sbb
xchg
pushf
lock
dec
nop
ins
adc
jl
pop
sbb
nop
adc
shl
mov
rol
add
or
inc
loopne
cmps
loope
add
loope
sbb
rol
mov
sub
pop
retf
les
jle
push
inc
imul
mov
je
jbe
xchg
push
and
imul
lock
push
push
mov
push
or
lahf
es
ds
jl
(bad)
inc
sahf
outs
test
sbb
mov
push
and
mov
call
retf
sub
add
sbb
mov
or
movs
jo
and
cwde
xchg
pop
jge
inc
pop
jmp
cmp
push
ja
lods
add
(bad)
push
sub
idiv
movs
push
xlat
out
or
fmul
jmp
icebp
pop
push
cwde
inc
xor
xchg
rol
sbb
adc
mov
push
adc
imul
enter
adc
cdq
lock
dec
sub
push
dec
fnstsw
es
inc
or
or
push
pop
ud1
jle
lea
push
fild
(bad)
xor
or
or
mov
jl
repnz
mov
and
fdecstp
adc
loop
lods
xor
rcl
sbb
mov
je
push
xchg
jne
mov
and
nop
ja
inc
or
sub
or
push
jnp
push
sub
retf
call
pop
mov
ins
jmp
cmps
push
jne
into
push
inc
adc
and
cmp
cli
inc
or
sbb
jne
sub
sbb
aad
and
sub
ret
nop
pop
clc
jge
pusha
cmp
call
dec
mov
dec
cmp
imul
or
cmp
or
mov
mov
push
rcl
sub
push
fiadd
or
add
call
pop
enter
sbb
fadd
scas
xchg
add
ss
xlat
mov
mov
sbb
arpl
or
daa
push
and
(bad)
cs
xor
jp
outs
int
push
leave
(bad)
int
scas
outs
mov
dec
sar
fs
sub
in
mov
scas
mul
add
lock
aas
pop
inc
pop
xchg
ins
mov
loope
sbb
inc
push
sti
(bad)
xor
lock
push
inc
push
adc
mov
add
adc
arpl
enter
inc
xchg
cmp
xor
add
push
jg
(bad)
adc
test
mov
jl
xor
(bad)
cmp
mov
cmp
jg
adc
inc
out
inc
es
xlat
push
arpl
cmp
fistp
daa
out
sub
lock
inc
pop
out
je
cmp
ins
pop
cmp
loope
test
iret
ins
lock
dec
add
fs
nop
xor
inc
pop
push
push
sbb
test
add
adc
cmp
xor
jg
xchg
or
mov
aas
nop
loope
jecxz
mov
sbb
mov
mov
lds
dec
push
les
cmp
jge
mov
mov
icebp
inc
dec
sbb
cmps
sbb
cld
je
push
xor
or
and
xchg
xor
sub
xor
cmp
test
jae
sbb
mov
iretw
popf
clc
adc
rol
iret
mov
pop
das
mov
jo
push
pop
dec
sahf
add
dec
mov
or
adc
jne
xchg
pop
jle
dec
dec
mov
or
adc
jle
pop
ins
mov
or
mov
sub
push
push
or
or
movs
es
pushf
or
or
inc
adc
xor
sub
pop
fld
addr16
and
frstor
ror
test
add
push
mov
sub
dec
and
repz
popf
mov
loope
mov
cmp
retf
clc
adc
mov
ffree
jmp
(bad)
std
sbb
add
cmps
mov
int3
or
mov
repnz
or
cmp
js
push
push
or
rcl
sbb
shl
xor
rol
pusha
or
mov
adc
aad
jmp
mov
movs
and
xor
sbb
in
xchg
push
loopne
xchg
pop
sbb
add
dec
or
in
(bad)
sub
jp
jnp
xchg
out
mov
mov
pusha
ss
push
dec
pop
pushf
cdq
ror
call
arpl
retf
or
ja
push
outs
sub
add
inc
leave
push
jmp
aaa
dec
cmps
adc
or
add
test
clc
mov
popa
sub
pop
add
mov
les
or
pop
mov
jnp
(bad)
dec
sub
fdivr
mov
jmp
rcl
test
sub
enter
cmc
dec
out
mov
mov
mov
pusha
test
add
sbb
loopne
push
and
nop
js
aad
add
or
dec
pop
xor
adc
nop
ins
test
fadd
sbb
push
add
fsubr
add
fidiv
mov
aas
mov
sahf
push
and
jo
(bad)
inc
xchg
add
xor
stc
int
faddp
xor
pop
xchg
pop
pop
pop
ins
or
cmp
xor
xor
pushf
jl
pop
sub
xchg
rol
mov
sub
or
pop
add
cmp
sub
fdiv
or
fidiv
fadd
inc
aaa
sbb
xchg
push
and
mov
add
inc
push
or
nop
mov
xor
xchg
fiadd
mov
fdiv
add
and
push
imul
addr16
je
mov
test
push
loop
js
jle
mov
call
xchg
je
sub
sbb
aas
jle
sub
sbb
or
ja
pop
mov
adc
xlat
jg
push
fisttp
into
inc
aaa
mov
xchg
xlat
and
sti
sub
and
inc
and
inc
inc
xor
jmp
mov
cmp
dec
sbb
dec
inc
mov
jne
push
inc
ret
rcr
(bad)
adc
xchg
outs
xchg
jne
cmp
ss
jnp
scas
dec
jl
push
sbb
adc
or
fld
xor
inc
inc
cmp
popa
jge
dec
push
in
add
push
jne
mov
cmp
add
adc
mov
xchg
(bad)
pop
aam
fisttp
inc
jmp
sub
cmp
jbe
xchg
ins
adc
dec
dec
xor
xor
sub
nop
test
clc
jo
cmp
ds
jp
test
imul
cdq
jo
and
push
sar
mov
and
push
sub
jne
push
test
adc
inc
jle
fdiv
retf
std
fbstp
pop
je
std
dec
adc
aam
outs
enter
(bad)
retf
dec
or
dec
xlat
add
cwde
jns
daa
aaa
ret
sbb
ds
or
jmp
ins
inc
mov
out
jne
adc
add
dec
push
mov
push
mov
pop
loop
and
cli
sti
or
mov
sub
mov
and
dec
push
inc
sub
pop
call
(bad)
adc
mov
xor
fcomp
dec
add
dec
add
adc
ror
mov
xchg
popf
push
mov
pop
std
dec
loopne
mov
lea
cmp
jge
test
ins
add
call
mov
fcom
jno
pop
mov
pop
fcomp
push
addr16
fisub
ss
pushw
pop
add
cmp
inc
lods
jl
mov
dec
mov
sub
add
and
daa
or
dec
ins
sub
scas
sub
dec
sbb
xchg
inc
sbb
in
enter
jmp
adc
inc
jp
sbb
pusha
enter
test
mov
pop
and
mov
and
adc
popa
sbb
sbb
or
sbb
mov
clc
inc
and
jns
dec
ret
ja
adc
sbb
lods
push
adc
scas
(bad)
sub
mov
ja
aaa
fisubr
imul
push
daa
aas
cmp
and
or
xor
xor
mov
sub
push
or
and
mov
loop
cmp
push
outs
call
lock
dec
xor
pop
das
xor
fisubr
nop
mov
retf
es
xchg
add
mov
or
adc
mov
fcom
lea
mov
mov
add
ret
pop
into
sub
das
mov
stos
loop
mov
or
or
movs
aad
adc
rol
sbb
dec
add
(bad)
in
add
push
xor
push
call
jge
add
add
xchg
rol
call
xchg
inc
icebp
aas
mov
rcl
dec
lock
or
push
pop
call
test
pop
cmp
js
cmp
or
add
popa
inc
sbb
cmp
xchg
and
push
test
jne
out
or
jmp
mov
adc
lea
or
jl
xor
inc
add
(bad)
outs
jae
sub
push
pop
sub
sub
xchg
fisubr
shl
inc
ds
mov
call
jmp
jbe
test
sahf
add
dec
xor
mov
mov
shr
add
cmps
add
clc
mov
sub
dec
xor
dec
or
dec
push
cmp
jle
fs
imul
cwde
(bad)
arpl
leave
cmp
in
cli
cmp
sub
push
adc
pop
fiadd
cmps
sub
enter
push
xor
and
dec
mov
pop
ret
mov
mov
sub
into
outs
inc
and
mov
test
xchg
sbb
adc
dec
mov
mov
and
mov
push
cli
add
push
into
dec
dec
js
sbb
or
repnz
cli
xchg
sar
adc
movs
pop
xchg
or
data16
jnp
cdq
adc
arpl
inc
cld
sti
sub
or
out
mov
(bad)
pop
aad
xor
(bad)
jmp
in
jo
int3
dec
adc
pop
jns
adc
call
push
push
sbb
or
mov
cmp
sti
adc
push
adc
sub
jns
daa
mov
arpl
psubsw
loop
mov
inc
adc
and
pop
adc
xor
call
add
xchg
sub
push
xchg
dec
jo
sub
fyl2xp1
mov
adc
in
jg
inc
shr
push
push
cmp
mov
adc
clc
aaa
dec
or
iret
xor
jbe
jl
xchg
mov
push
or
mov
mov
mov
push
fs
dec
out
imul
js
cwde
je
or
pop
sbb
xor
and
pop
push
inc
test
xchg
xlat
(bad)
ja
and
push
cld
or
jae
nop
add
into
les
mov
and
enter
jno
aaa
add
fmul
xor
frstor
or
cmp
or
dec
or
iret
hlt
js
inc
dec
xchg
and
neg
sbb
mov
sbb
mov
push
scas
cmp
int
dec
add
jnp
mov
and
fcmovb
iret
xor
test
rcr
out
inc
sub
push
dec
cmp
mov
jmp
pop
mov
fwait
add
adc
and
xchg
es
push
push
push
mov
add
shl
(bad)
add
int
sahf
repnz
ins
inc
ret
mov
jne
or
pop
shr
pop
je
sar
mov
dec
mov
inc
adc
inc
and
push
jno
and
mov
adc
push
sbb
sub
sbb
jl
pop
sbb
dec
sbb
test
neg
mov
call
sti
add
inc
dec
sbb
mov
and
enter
cmp
in
xchg
nop
addr16
dec
rcr
aas
dec
and
push
xor
adc
push
dec
push
push
mov
mov
xchg
inc
outs
adc
pop
push
stc
jp
pop
mov
inc
mov
jno
imul
je
je
and
fs
mov
push
test
mov
inc
pop
push
mov
enter
inc
sbb
and
enter
adc
xchg
fwait
sti
inc
add
fistp
or
sbb
ja
push
nop
test
fsin
addr16
loop
inc
ds
push
dec
or
adc
test
loopne
or
jge
aas
xor
int3
cmp
fwait
push
jmp
push
cmp
imul
dec
mov
pop
adc
sbb
pop
movs
sbb
add
push
pusha
jle
push
dec
inc
cmp
dec
push
sub
dec
loopne
shl
or
sbb
push
inc
pop
dec
mov
add
or
data16
dec
movs
clc
push
and
fs
sbb
gs
fwait
jne
and
pop
data16
lods
mov
loopne
xor
shr
js
inc
xor
dec
lods
pop
xor
jge
adc
xor
pop
pavgb
xchg
push
call
pop
lods
mov
push
or
clc
sbb
lds
loopne
dec
xchg
or
rcr
add
cs
jmp
mov
jne
xchg
xor
adc
xor
iret
or
sub
mov
push
dec
add
mov
adc
and
dec
pop
leave
jne
push
mov
jmp
mov
dec
ret
(bad)
rol
stc
std
and
lock
push
sbb
pop
and
sbb
arpl
and
mov
add
add
xchg
sbb
in
mov
mov
xchg
xor
sub
mov
mov
lods
adc
adc
and
xchg
mov
iret
cli
add
adc
push
sbb
dec
xor
ins
pop
add
ficomp
push
pop
inc
add
sti
or
inc
adc
cdq
xor
mov
paddusb
mov
inc
mov
cmp
xchg
ds
imul
jns
pop
push
and
rcl
loopne
add
stos
and
add
call
test
sbb
jmp
aam
or
iret
fidivr
push
mov
dec
push
retf
push
fnstcw
mov
and
mov
mov
outs
aad
fwait
xor
rcl
pushf
aam
pop
sbb
and
and
add
cld
sbb
or
dec
dec
adc
jle
cmp
ret
and
out
mov
or
push
jnp
inc
fadd
or
inc
xchg
xor
sub
and
adc
psrad
dec
mov
daa
ret
mov
adc
mov
fcomp
daa
ins
mov
loop
xor
xor
sub
stc
stos
pop
xor
sbb
fwait
das
cmp
div
sbb
xchg
pusha
dec
jne
adc
adc
or
mov
add
sub
add
sbb
sbb
pop
xchg
and
popa
sub
sub
inc
int3
or
sub
xchg
test
cmp
rol
(bad)
push
es
and
fcomp
mov
and
clc
sbb
pop
scas
dec
cmp
test
ret
or
pop
in
jg
int
in
cwde
shld
pusha
out
inc
sub
dec
rol
lds
pop
aaa
sbb
gs
mov
push
enter
test
push
sbb
cmp
add
in
pop
add
out
(bad)
into
(bad)
and
je
(bad)
imul
add
inc
and
test
sbb
xchg
iret
(bad)
xor
fucomp
sbb
fdiv
inc
sbb
call
into
adc
push
adc
push
cmp
and
or
or
or
pusha
sub
cmp
or
adc
mov
sbb
xchg
push
lea
inc
out
mov
pop
sbb
dec
and
xor
cmp
dec
rcl
mov
sbb
and
add
inc
shr
popf
or
xor
call
(bad)
xlat
jbe
and
and
cld
inc
mov
in
add
popf
cmp
hlt
fild
(bad)
dec
pushf
jb
loopne
xor
enter
mov
dec
jge
adc
and
mov
sbb
and
call
mov
cs
mov
push
dec
loopne
mov
dec
popa
daa
mov
mov
sub
test
or
dec
push
test
popf
movs
jg
adc
cmps
push
jb
jle
mul
je
dec
adc
dec
cmc
retf
ret
sbb
mov
(bad)
in
and
push
push
dec
and
sbb
xlat
test
and
add
add
xor
cmps
mov
add
push
(bad)
push
jo
sub
dec
je
push
pusha
cld
sub
nop
sbb
dec
aaa
or
(bad)
rcr
pop
call
xor
ss
aaa
jmp
inc
sbb
or
add
or
add
add
mov
adc
outs
or
jg
mov
ss
std
xor
mov
(bad)
jbe
xor
mov
je
or
ret
outs
mov
adc
mov
cmps
arpl
pushf
push
and
fdiv
sbb
push
lea
and
icebp
jl
mov
and
xchg
sub
mov
xchg
push
pop
jmp
push
data16
push
daa
or
and
and
pop
test
mov
cdq
hlt
cmc
pushf
mov
push
sbb
push
mov
mov
xor
sub
sbb
arpl
jb
mov
lock
les
fwait
sbb
loope
int
sbb
ins
mov
xor
sbb
cmp
pop
cmp
nop
sbb
bound
aam
sbb
fsubr
mul
pusha
lods
add
xor
je
sub
cwde
and
sbb
pusha
sar
inc
lea
jo
(bad)
jo
add
mov
adc
pop
pop
and
xchg
addr16
cmps
sbb
xchg
mov
add
pop
(bad)
push
clc
mov
add
xor
add
sbb
adc
and
loop
inc
cmp
cmp
addr16
inc
fcom
inc
cli
les
sbb
and
test
imul
and
into
in
jno
ficomp
sbb
jnp
cmp
(bad)
popf
in
sbb
add
sub
movs
dec
idiv
xchg
fidivr
push
outs
lock
jl
jo
js
rcr
mov
pop
or
jb
jmp
shl
add
push
lods
out
fmulp
cmp
adc
loopne
mov
dec
seto
ret
mov
fs
dec
ja
dec
mov
mov
test
inc
jge
sub
pop
mov
add
push
enter
stos
loope
ret
into
add
scas
movs
les
lock
imul
sub
add
lea
imul
sub
mov
and
repz
xchg
add
sbb
sysret
mov
or
pop
and
jecxz
jmp
test
test
lods
ds
jno
gs
lea
adc
sub
test
dec
inc
fwait
icebp
bsf
jecxz
xchg
cmp
mov
dec
sbb
ja
push
mov
fwait
and
pop
inc
cmp
in
jp
or
out
pop
jmp
int
dec
sbb
sahf
add
std
add
pop
aad
lods
and
sar
mov
imul
mov
ret
fisttp
je
pop
jmp
inc
ins
out
add
retf
jl
pop
iret
and
movs
sub
sub
lea
in
add
mov
or
movs
dec
lock
add
getsec
xchg
adc
je
out
mov
je
hlt
outs
aam
out
push
sub
adc
stc
pop
popa
aam
sub
jae
xor
movs
mov
(bad)
into
aad
mov
dec
sub
dec
(bad)
pop
push
inc
daa
push
jge
(bad)
in
mov
add
push
sti
mov
cs
and
int3
add
push
lods
add
std
(bad)
sar
mov
inc
dec
lock
cmp
jl
icebp
(bad)
and
ja
cmp
mov
adc
outs
bnd
push
dec
sar
inc
pop
and
xchg
repz
jmp
or
jle
sub
push
push
dec
add
jmp
lods
xchg
pusha
retf
and
sbb
cmps
mov
xchg
mov
adc
stos
in
ficomp
add
cmps
bound
mov
imul
inc
mov
adc
push
imul
mov
ins
leave
lahf
sub
mov
lock
xchg
dec
jmp
xor
jp
mov
dec
dec
inc
out
push
sar
ret
int3
xchg
ret
dec
inc
xor
mov
inc
fiadd
cwde
repz
dec
mov
adc
pop
mov
mov
jge
inc
mov
inc
xchg
sbb
imul
mov
test
mov
ret
mov
and
sti
adc
inc
mov
push
lock
fwait
or
xchg
movs
rcr
mov
les
cmp
push
jne
dec
mov
xor
push
mov
pop
push
jnp
sbb
(bad)
das
xchg
sub
scas
dec
push
cmp
sub
movs
add
jecxz
imul
add
(bad)
jge
lahf
cmp
pop
icebp
inc
test
imul
sahf
cmp
add
pop
jl
adc
mov
jle
cmp
sub
movs
cmp
xor
xchg
mov
sbb
add
mov
in
loopne
and
push
(bad)
push
in
scas
gs
jbe
add
jnp
jecxz
pushf
dec
enter
add
sub
push
test
sbb
mov
loopne
add
xchg
and
lea
sub
fisttp
lea
add
and
movs
push
ss
inc
rol
and
mov
xlat
xchg
mov
inc
mov
inc
add
inc
sub
je
mov
loopne
push
jne
adc
jno
sub
pop
stos
out
push
and
cmp
jmp
and
imul
or
sar
pop
mov
add
outs
loope
imul
retf
sbb
or
sbb
sub
adc
adc
dec
rcl
or
mov
xchg
mov
jae
mov
jns
sub
sbb
jge
loopne
dec
or
xor
dec
sub
sub
fwait
je
sbb
or
sbb
sbb
(bad)
lock
cmp
dec
lea
sbb
cmp
jle
push
(bad)
dec
shl
cmps
fld
shl
std
dec
je
jns
in
repz
push
push
xor
mov
push
dec
cmc
push
pop
push
jp
loopne
ds
call
mov
call
cmps
inc
push
or
or
adc
cmc
xor
jl
and
mov
das
inc
cld
test
dec
or
jae
sub
mov
or
pop
aaa
and
fisttp
or
cmp
sar
or
sub
dec
cld
add
add
or
cmp
push
push
jb
jno
or
and
mov
pushf
or
cdq
movs
pop
xor
dec
or
or
or
push
push
lock
inc
push
dec
ins
or
xchg
loopne
jae
adc
jle
and
lods
pop
adc
or
mov
adc
mov
fstp
add
clc
cld
xchg
xor
push
jo
jmp
rol
jb
jecxz
dec
popf
data16
push
adc
in
push
adc
sub
push
push
mov
mov
cmp
loope
inc
add
and
xchg
dec
add
test
jbe
and
add
ins
or
xchg
jno
or
sub
test
(bad)
xchg
push
nop
add
ins
and
addr16
pop
aad
(bad)
fs
cmp
js
mov
ror
ins
xchg
inc
data16
add
sbb
js
addr16
mov
add
sub
jge
jge
sbb
add
fstp
mov
jne
mov
or
or
hlt
and
inc
inc
das
pop
sbb
ror
and
and
pusha
das
loopne
movs
mov
push
je
inc
lods
mov
aad
shr
mov
push
pop
mov
cld
or
xchg
adc
mov
xchg
add
lods
pop
sar
and
or
dec
popa
js
sbb
sbb
lock
or
jmp
or
shl
dec
sbb
xor
mov
or
mov
push
jl
xor
cmp
add
or
ja
cli
add
mov
pop
lea
ja
inc
adc
add
movs
cwde
or
je
adc
(bad)
hlt
iret
add
or
add
ror
mov
cmp
push
or
sbb
popa
mov
add
cmp
xlat
and
rol
or
sub
mul
xlat
sahf
ja
fsub
loope
fidivr
repz
into
das
jmp
test
imul
and
ret
mov
ret
pop
or
sbb
(bad)
jae
inc
adc
js
cmp
aam
xor
jp
add
adc
add
inc
dec
xchg
(bad)
nop
mov
or
bound
das
jmp
out
add
icebp
or
xor
mov
pop
test
sbb
das
add
jns
test
inc
arpl
mov
movs
adc
cmp
xchg
jl
mov
sbb
and
test
jbe
pop
loope
rcl
dec
cmp
es
mov
dec
nop
dec
xchg
das
iret
inc
test
ins
pop
imul
cld
and
push
jnp
in
jmp
ja
je
mov
inc
dec
jg
iret
arpl
retf
adc
xchg
jge
ret
jge
adc
xchg
adc
int
gs
sub
or
push
mov
xor
inc
push
mov
or
push
add
adc
mov
test
test
(bad)
movs
inc
cmp
xlat
xor
sbb
aas
outs
sbb
sub
adc
and
inc
enter
es
bound
outs
push
and
pop
jp
lea
jmp
inc
dec
inc
lods
lahf
push
std
pop
(bad)
mov
sahf
mov
stos
xor
or
push
pushf
adc
add
clc
call
adc
add
mov
aas
add
sbb
mov
sub
sbb
rol
push
nop
out
stc
lds
sbb
xchg
jg
mov
in
pushf
dec
mov
sbb
sbb
mov
xor
cmp
and
inc
dec
lock
inc
mov
je
inc
out
sub
push
jl
inc
fbld
add
pop
pop
std
mov
pop
push
and
cmp
jg
stos
neg
shl
mov
es
(bad)
sub
dec
push
cmp
mov
inc
icebp
rcl
cli
dec
add
mov
jae
mov
aas
ss
enter
adc
jmp
pop
inc
jmp
jl
sbb
cmp
pusha
rol
pop
xor
jle
retf
cdq
enter
jbe
dec
jo
or
xor
jmp
fnstenv
push
add
mov
sub
inc
push
lea
cmp
or
sub
ret
add
jge
jp
stc
xchg
add
inc
loope
imul
dec
sbb
pusha
cmp
and
push
or
add
inc
jo
or
jmp
retf
inc
jnp
je
sbb
pushf
or
xchg
sbb
inc
and
inc
pop
jle
inc
movs
lock
mov
cmp
test
jae
sbb
mov
jb
push
mov
pop
cmc
rcr
push
ja
shr
inc
leave
retf
jae
and
push
je
mov
(bad)
xor
(bad)
dec
jo
mov
or
test
clc
cmp
js
mov
add
shl
rcr
adc
cmp
cmp
cmp
xor
mov
adc
xor
dec
add
je
push
pop
push
pop
addr16
push
cld
retf
ror
add
cmp
(bad)
jmp
and
cmps
or
mov
arpl
add
lock
scas
mov
sub
test
cmps
cmc
out
adc
sbb
ins
icebp
sbb
xchg
fs
add
aad
mov
xchg
mov
mov
pop
inc
or
(bad)
es
bound
call
add
pop
and
jl
jmp
push
rol
push
xchg
jno
xlat
cmp
popf
adc
or
adc
inc
rcr
inc
stos
sbb
std
int
cmp
mov
mov
pushf
and
mov
push
ficomp
aas
pop
xor
pop
lea
adc
loopne
push
mov
mov
dec
mov
xlat
rep
pop
imul
enter
pop
leave
in
mov
aas
or
push
sbb
xor
pop
add
adc
push
outs
mov
mov
mov
cmp
mov
or
lods
lods
push
inc
inc
push
imul
mov
and
pop
xor
jmp
mov
push
xchg
pop
nop
sub
rcl
or
xchg
ja
xor
jmp
and
mov
or
or
sub
dec
call
fsub
out
sti
es
sbb
xchg
or
sbb
loopne
mov
mov
movs
push
lea
or
mov
fstp
leave
scas
push
ficom
(bad)
fstp
push
aad
mov
test
test
and
jmp
outs
jecxz
cli
inc
lods
dec
push
fwait
inc
add
stos
leave
js
pop
dec
cmp
int3
xchg
sub
or
push
adc
fisub
jp
push
add
pop
ret
mov
popa
popf
cs
sub
mov
add
ror
or
sbb
jns
push
(bad)
push
ret
in
jmp
pop
nop
pop
mov
mov
out
idiv
into
jle
push
sbb
add
daa
les
or
cld
mov
or
adc
retf
bound
fld
push
mov
adc
push
dec
lea
dec
(bad)
xor
add
ret
inc
inc
sub
std
and
add
inc
lock
mov
jg
jmp
inc
pop
ja
shl
js
mov
outs
sbb
jp
gs
mov
cdq
arpl
or
movs
or
or
or
mov
xchg
movs
outs
push
pop
add
push
mov
mov
(bad)
or
push
mov
sbb
neg
aas
push
push
xor
bound
and
cdq
mov
rcr
mov
and
dec
sbb
sub
ins
mov
mov
sbb
pop
mov
xor
cli
adc
movs
dec
mov
adc
jp
rol
add
test
push
add
cmp
push
outs
or
test
shr
ins
adc
push
sub
jp
cmp
jne
push
and
fidiv
dec
and
add
jne
pushf
xchg
mov
adc
sub
(bad)
jp
mov
dec
cmp
mov
in
gs
jmp
mov
adc
or
or
ds
mov
ror
fistp
(bad)
arpl
xlat
fcomp
lods
ins
jns
movs
ja
adc
sub
pop
outs
sub
fadd
pop
in
daa
aas
ret
lock
cdq
popf
test
clc
sub
ja
cli
jne
mov
loope
scas
fimul
jne
test
loope
add
scas
mov
test
enter
cdq
add
shl
aam
jle
cmc
xchg
push
pop
sar
add
jne
mov
fst
cmp
jne
and
cld
fild
jge
pop
fld1
xchg
in
(bad)
neg
jmp
push
or
or
clc
adc
adc
lods
push
inc
sub
cmp
jne
fcmovb
adc
and
xchg
adc
cld
sub
inc
rcl
push
and
pop
pushf
cmp
or
sbb
inc
sbb
pop
push
pop
or
or
push
xor
push
xor
test
js
push
xor
xor
sbb
and
add
jo
mov
push
clc
imul
add
aaa
xchg
inc
dec
xchg
lock
pop
rol
inc
adc
les
and
in
shl
dec
mov
pop
or
fadd
sbb
mov
xor
mov
mov
or
sahf
lods
stos
sbb
xchg
sbb
je
adc
(bad)
out
add
add
mov
cdq
xchg
inc
add
add
adc
test
out
(bad)
mov
mov
mov
dec
test
xchg
rsqrtps
cmp
pop
std
icebp
test
sub
adc
hlt
retf
data16
add
cmp
xchg
movs
stos
sub
push
ss
inc
adc
fdivr
add
inc
dec
inc
je
outs
test
dec
dec
or
nop
je
rcr
adc
scas
inc
nop
adc
js
or
mov
push
add
test
sub
push
add
jp
add
xor
sbb
xchg
int3
imul
dec
push
push
pop
push
push
xor
in
jns
dec
imul
jae
dec
or
jne
xor
xchg
add
cld
aad
dec
push
inc
adc
mov
dec
pop
sar
pop
int3
sbb
leave
xchg
push
fild
(bad)
dec
cmovge
or
dec
out
adc
xchg
or
adc
xor
int
push
xchg
(bad)
ficomp
jg
sbb
pop
adc
mov
mov
jle
scas
jne
xchg
cmps
sub
jo
mov
(bad)
aad
adc
sar
push
dec
stos
lods
gs
call
inc
daa
fs
lock
or
sar
pop
stos
inc
lock
or
jl
ror
mov
add
in
dec
(bad)
xor
lds
add
mov
int3
xchg
hlt
push
pop
aas
cs
and
xchg
daa
in
fcom
(bad)
mov
cdq
lea
(bad)
push
retf
sahf
pop
adc
xchg
xchg
push
pop
push
push
movs
scas
loope
pop
mov
add
dec
cdq
push
lea
fisttp
or
xchg
sar
push
pop
push
xchg
adc
pop
xor
mov
adc
adc
sub
push
aaa
test
dec
repnz
sbb
gs
xor
adc
push
call
les
xchg
movups
aas
inc
add
mov
(bad)
out
add
xor
push
mov
mov
inc
sbb
test
adc
push
and
mov
xor
sub
and
mov
pop
pop
fild
adc
movs
jp
popa
(bad)
inc
pop
or
jb
jg
sti
inc
outs
or
xchg
inc
pop
add
adc
add
or
inc
mov
xchg
data16
mov
pop
push
push
xchg
mov
pop
or
in
or
jmp
sub
jle
add
and
shl
xchg
jbe
add
adc
in
or
test
loopne
or
clc
add
call
push
xor
jge
ja
add
xchg
into
sub
mov
out
lock
push
movs
lock
cmp
leave
pop
pusha
pop
cdq
add
mov
inc
sub
inc
movs
pop
pop
fs
push
inc
(bad)
aaa
popf
adc
adc
and
or
jb
test
pusha
xor
test
les
cmp
mov
ss
dec
pop
into
add
sub
stos
hlt
sub
jno
cmp
xor
jbe
xchg
movs
or
pop
adc
push
ficomp
loop
pop
add
or
sbb
pop
and
sti
mov
add
iret
fwait
mov
xchg
xchg
mov
add
push
mov
adc
push
push
adc
(bad)
sar
jne
adc
leave
or
dec
and
dec
icebp
imul
mov
jo
les
xchg
xchg
(bad)
pusha
div
pop
pop
adc
lods
add
add
rcr
gs
and
cdq
inc
movs
xchg
add
(bad)
or
or
or
sub
adc
ret
or
sbb
nop
sahf
mov
or
jmp
inc
or
add
sub
or
jecxz
sbb
push
add
lds
loope
pop
or
test
inc
pop
cmp
xor
daa
xchg
in
aam
mov
sub
adc
fistp
es
jl
jecxz
fwait
jmp
pop
and
int
pop
ins
jmp
jl
cmp
sbb
push
dec
sahf
ret
in
and
cs
in
jmp
jg
mov
cmp
cmp
repnz
mov
xor
xor
mov
jp
int
push
sub
fwait
loopne
sbb
js
loope
xor
inc
adc
push
jl
xor
(bad)
pushf
cmp
push
cmps
pop
aas
mov
xor
fdivr
mov
jno
inc
dec
adc
call
hlt
push
dec
dec
sbb
jnp
cmc
adc
std
fdivr
cmp
and
and
ins
sbb
mov
repnz
dec
mov
mov
ins
ins
cmp
call
es
lock
inc
and
jb
gs
lea
test
in
imul
dec
xchg
inc
pop
and
out
and
push
add
jge
bound
push
test
fwait
enter
(bad)
movs
push
sbb
jg
jecxz
or
(bad)
jge
or
pop
xchg
push
(bad)
add
ror
movs
pop
xor
pop
fld
mov
or
cwde
shl
add
adc
sub
(bad)
jmp
movs
sbb
jne
dec
adc
nop
add
xchg
dec
call
sub
cmp
std
sbb
cli
and
inc
xor
sub
cli
retf
sub
icebp
mov
push
hlt
and
loopne
fistp
adc
aad
pmullw
add
cmp
dec
inc
or
mov
xchg
cs
push
in
ret
and
sub
mov
in
xchg
nop
jno
xor
mov
lock
add
add
or
dec
in
movs
lock
es
add
push
cli
fidiv
jl
push
xor
nop
xor
add
fisub
mov
inc
add
jecxz
aad
xor
add
out
aaa
and
jnp
and
adc
mov
xor
xor
(bad)
cs
or
jbe
adc
cmp
mov
mov
imul
sub
jg
js
lahf
push
add
push
sahf
loope
ja
test
mov
shl
jbe
xor
and
les
enter
dec
arpl
push
adc
jbe
mov
xor
jo
mov
cld
add
xor
add
add
add
ret
sub
push
test
mov
jae
clc
xchg
aas
mov
daa
jnp
cmp
or
ds
push
xchg
out
push
inc
adc
jl
inc
dec
out
pop
dec
jge
mov
(bad)
xor
jbe
dec
lea
push
pop
imul
sbb
inc
dec
call
jns
mov
imul
adc
mov
(bad)
adc
dec
pop
mov
push
pop
adc
jo
movs
xchg
js
pop
je
cmp
je
test
push
pop
inc
push
or
cmp
xchg
inc
push
sub
adc
sbb
(bad)
enter
daa
(bad)
aad
retf
out
mov
mov
and
lahf
mov
adc
or
scas
add
sbb
or
inc
adc
push
cmp
or
movs
sub
fwait
xchg
ficom
int3
sbb
jbe
xor
xor
loop
adc
xchg
movs
pop
pop
dec
jb
cld
ds
pop
cmp
sti
mov
cld
and
xor
xchg
adc
sub
jae
cs
mov
sub
sub
fld
cmp
adc
or
cmp
mov
into
lea
pop
movs
add
sbb
or
xchg
push
(bad)
call
call
push
in
inc
and
jne
and
xchg
mov
je
pop
inc
lock
inc
sbb
push
loopne
cmps
cmp
call
push
stos
jno
retf
add
mov
cmp
mov
add
in
push
lahf
rcl
mov
fs
gs
add
xor
sbb
dec
rol
call
pop
xor
sub
cmc
int3
add
ror
test
aam
loope
shl
rcr
or
or
and
(bad)
fild
rcr
cmp
jge
lea
mov
inc
(bad)
fcom
inc
fnsave
jle
inc
push
jl
pop
pop
inc
imul
cmp
mov
xor
or
or
pop
imul
adc
movs
inc
mov
loopne
push
pop
int3
mov
inc
in
inc
jg
and
jmp
aaa
jbe
sub
popf
and
aaa
inc
xchg
and
mov
mov
jg
dec
adc
and
fbstp
add
mov
mov
stos
add
cli
mov
mov
fsubr
movs
and
or
mov
cmp
pop
shr
mov
jno
xchg
inc
inc
and
adc
jp
mov
xchg
not
inc
mov
loope
bound
ret
lahf
pop
stos
mov
push
shl
add
xchg
adc
ds
add
int3
and
mov
sbb
outs
cmp
dec
mov
add
je
xchg
(bad)
jbe
xchg
mov
je
sti
push
xor
mov
xor
xchg
es
adc
loope
mov
call
mov
(bad)
push
xor
hlt
xor
dec
add
pop
and
cmp
daa
jo
call
das
jne
and
out
lds
pop
adc
shl
mov
dec
pusha
test
or
xchg
lods
test
push
aas
mov
add
push
add
adc
inc
add
add
push
pop
jge
mov
mov
xor
xor
or
inc
dec
sbb
sub
nop
mov
inc
mov
jns
push
dec
mov
or
xchg
cmc
sub
add
sar
pop
or
push
pop
test
sar
fwait
xchg
aad
aaa
jmp
and
dec
lahf
push
or
xchg
movs
fdiv
dec
add
mov
adc
stos
imul
sub
test
fld
push
xor
mov
call
call
push
fidiv
loop
mov
sub
xchg
add
inc
je
dec
mov
loope
add
mov
inc
mov
adc
aad
mov
xor
mov
cmp
shl
ror
adc
sar
mov
mov
scas
xchg
xor
adc
xchg
addr16
xor
inc
nop
cmp
xchg
pop
dec
mov
mov
dec
mov
cmp
pop
scas
mov
addr16
cmp
sbb
mov
sub
pop
fs
push
dec
jb
push
xchg
nop
iret
push
pop
inc
(bad)
pusha
mov
xchg
jbe
jle
adc
ins
arpl
sub
or
movs
dec
jbe
mov
call
jno
cmp
xor
mov
icebp
imul
mov
adc
mov
push
cmp
sbb
sub
gs
sbb
or
xchg
loope
xor
pop
ins
adc
adc
sub
push
push
jl
mov
pop
push
mov
add
shr
mov
jb
or
lea
jb
or
xor
xor
cmp
push
adc
inc
ret
imul
call
push
dec
fld
rcl
js
and
or
fs
jl
mov
je
xor
scas
sbb
mov
sub
dec
or
dec
adc
sbb
pop
imul
mov
out
cmp
inc
jge
mov
mov
adc
and
movs
and
push
hlt
fcom
lods
push
popa
xchg
jmp
add
mov
sbb
inc
shl
sub
sub
movs
lea
mov
arpl
pop
adc
rol
pop
or
dec
add
idiv
(bad)
cmp
xchg
dec
adc
jae
movs
pusha
pop
dec
inc
rcl
or
inc
dec
test
test
je
sub
mov
push
inc
mov
mov
adc
inc
and
movs
or
and
jns
fdivr
(bad)
xor
ins
or
dec
sbb
and
ss
dec
mov
push
mov
jbe
dec
sub
ds
sub
xchg
add
or
inc
or
add
and
fidivr
push
ror
dec
je
mov
daa
mov
lods
hlt
sbb
push
lea
icebp
pop
cmp
or
add
and
adc
adc
add
test
mov
sbb
jmp
pop
push
in
(bad)
test
add
arpl
push
sub
in
cmp
outs
push
(bad)
adc
imul
call
fs
push
xor
fst
mov
inc
xlat
cmp
pop
mov
and
inc
inc
fdiv
or
call
loopne
je
cmp
adc
(bad)
or
add
pop
jge
fcom
jmp
add
sbb
pop
dec
pop
(bad)
push
imul
xchg
pop
lock
movs
jg
mov
and
(bad)
loopne
sar
sub
sub
lea
aaa
aaa
xchg
std
push
jle
mov
add
out
fnstsw
addr16
jmp
and
xor
mov
add
jo
sbb
pushf
mov
xor
hlt
(bad)
jbe
xchg
add
aam
lods
movs
dec
retf
or
jp
sub
mov
jne
cli
jge
mov
das
cmc
sbb
xor
cmp
aam
and
cld
mov
movs
push
data16
add
pop
xor
mov
fst
inc
lahf
push
stos
xor
ret
xlat
or
sar
add
sbb
xchg
jo
adc
hlt
mov
or
xlat
or
xchg
aam
addr16
fld
mov
add
add
test
sti
lods
cmp
mov
aas
cmp
loopne
rcl
js
pusha
dec
adc
sub
and
retf
dec
sbb
xor
mov
jmp
add
and
sar
test
nop
adc
or
inc
add
aaa
nop
or
dec
es
lock
push
inc
je
jbe
inc
(bad)
jne
sti
movs
sti
jecxz
stc
icebp
lds
push
stos
mov
xchg
sbb
es
xlat
mov
pop
push
addr16
dec
enter
(bad)
and
jne
je
xchg
push
clc
rol
pop
mov
push
enter
inc
pop
rcl
mov
fcomp
js
adc
inc
sub
call
bound
push
not
mov
mov
or
sbb
out
movs
inc
dec
movs
(bad)
stc
inc
repnz
fst
cmp
lea
cwde
mov
xchg
add
or
and
cld
lock
(bad)
mov
adc
add
or
loopne
sbb
sub
inc
pop
sbb
lock
pop
inc
xchg
sub
fisttp
xor
in
inc
mov
jmp
cmp
or
push
inc
dec
add
dec
jo
lock
mov
ja
jp
cmp
imul
data16
hlt
outs
neg
or
rcl
add
inc
popf
and
je
or
or
fdiv
cmovne
jecxz
sub
inc
movs
retf
rol
ins
fwait
pop
push
fwait
pusha
test
adc
cld
xlat
xchg
lods
les
sub
pop
jmp
fs
dec
mov
adc
mov
ret
imul
int3
nop
adc
(bad)
sbb
jnp
fwait
pushf
cld
loope
retf
add
das
inc
xor
aas
pusha
jmp
jo
shl
mov
mov
cmp
or
pop
aas
dec
adc
dec
sub
jmp
pop
add
mov
fnsave
mov
mov
adc
jnp
or
xor
sbb
add
(bad)
fcom
pushf
jne
dec
and
mov
jp
lahf
loop
xor
xor
test
rcl
addps
xor
push
mov
adc
or
mov
adc
fistp
inc
cld
test
rcl
jae
dec
aam
and
xor
push
jo
pop
out
pop
push
mov
sub
leave
or
sub
mov
sub
mov
je
or
les
inc
sub
(bad)
dec
jmp
mov
lods
das
fld
dec
mov
adc
inc
adc
cmc
push
pop
xchg
outs
sti
sbb
hlt
ins
jecxz
jmp
sbb
and
cli
adc
adc
pop
push
or
test
add
aas
cmp
adc
mov
add
pop
mov
or
mov
test
shl
lahf
iret
cmp
sbb
dec
(bad)
clc
retf
lea
inc
cmp
jg
cmp
not
cmp
neg
inc
push
jl
add
sub
cmp
adc
jmp
lock
cmp
add
lods
sub
(bad)
mov
inc
add
mov
jge
in
cmp
(bad)
pop
sbb
inc
fistp
cs
sbb
fild
lock
or
xor
mov
inc
and
sbb
call
and
jmp
jb
out
jmp
inc
adc
pusha
pop
xor
xchg
dec
or
mov
mov
sbb
aam
add
or
pop
add
or
push
and
or
push
and
adc
or
aam
aaa
fisub
jecxz
sbb
jne
dec
push
jo
cmp
inc
adc
sbb
call
push
cmps
(bad)
jmp
loope
lahf
dec
retf
je
and
or
(bad)
mov
call
shr
adc
repz
and
jg
je
mov
call
mov
xor
add
cld
mov
sbb
add
adc
mov
test
pop
jbe
pop
cmp
ins
and
dec
dec
dec
jecxz
push
repnz
add
pop
(bad)
icebp
adc
aad
mov
inc
in
scas
fsubr
xor
add
add
stos
test
bound
cdq
mov
pop
popf
data16
test
dec
in
bswap
jmp
pusha
pop
xchg
mov
jns
or
or
loop
or
sub
push
xor
xchg
shl
test
mov
loop
lahf
mov
adc
(bad)
fwait
jnp
and
sub
adc
mov
and
xchg
push
sbb
jg
pop
cwde
mov
mov
mov
jbe
popa
ds
popa
lds
pusha
pusha
not
pop
add
push
xlat
dec
dec
js
enter
in
sbb
mov
int
or
or
repnz
sub
and
fild
mov
iret
daa
les
dec
dec
push
js
jp
push
pop
call
and
or
push
push
in
jbe
pusha
scas
in
sub
inc
lock
shl
lahf
call
or
pop
in
psadbw
xor
push
pop
inc
cmp
cdq
cmp
pop
or
sbb
cmp
ret
lea
hlt
add
add
fcmovb
pop
arpl
push
or
and
mov
inc
fstp
jo
jnp
retf
push
dec
je
or
sbb
je
ret
test
xchg
mov
fisubr
push
ss
imul
or
cmp
jne
data16
mov
(bad)
lods
xor
icebp
nop
and
fsubrp
push
scas
test
sar
adc
push
jl
add
or
(bad)
mov
add
mov
adc
ins
xchg
stos
xor
jmp
call
add
lea
shl
(bad)
adc
in
out
and
fwait
mov
mov
xchg
lods
ret
cmp
cmp
js
dec
xchg
mov
clc
das
pop
or
cmp
sbb
and
lock
cmps
mov
or
or
std
push
addr16
repnz
dec
sbb
or
or
mov
bsf
jo
or
sar
mov
rol
sbb
xchg
sbb
xchg
xchg
sub
add
or
or
popf
inc
in
xor
aaa
pop
sbb
mov
out
mov
xchg
imul
lds
mov
sub
pop
fist
mov
and
xor
mov
push
push
push
sbb
hlt
or
jmp
jno
xor
(bad)
ins
push
dec
or
fistp
push
loopne
inc
fisubr
xchg
aam
fwait
jp
sbb
mov
loope
dec
test
xchg
jo
mov
push
cmp
add
int
mov
pop
dec
mov
add
call
dec
mov
add
inc
jp
out
mov
(bad)
sub
push
dec
test
scas
aaa
aam
lods
out
rcl
js
sub
xor
jne
mov
dec
xor
and
and
mov
cmp
sbb
(bad)
sbb
and
push
xor
mov
inc
dec
add
jl
push
fisttp
cmp
xchg
adc
movs
and
jo
fs
pop
inc
adc
and
and
and
add
sub
test
and
sbb
and
test
adc
add
mov
mov
rcr
or
mov
push
in
ss
push
jge
das
dec
add
dec
or
fisubr
push
jno
mov
add
loop
push
fld
pmuludq
movs
imul
jp
aad
test
cmp
dec
pop
push
sbb
pop
add
enter
and
adc
jbe
push
pop
pop
push
add
fcmovbe
mov
stos
cmp
cmps
sbb
jo
mov
push
xor
cmp
call
mov
inc
les
add
and
dec
aaa
mov
and
and
ror
mov
and
add
sbb
push
retf
adc
test
loope
jbe
pop
out
mov
dec
and
mov
sahf
call
push
or
cmps
ret
hlt
cmp
mov
or
(bad)
xor
enter
jae
pushf
pop
cmc
mov
jnp
add
and
xor
push
sub
and
add
por
data16
cmp
push
ins
adc
cmp
mov
into
mov
mov
cdq
push
data16
xchg
js
cmp
adc
enter
jmp
dec
stos
push
leave
and
test
or
jl
imul
lods
or
jge
mov
in
sbb
push
pop
mov
mov
mov
pop
or
or
push
cli
dec
sub
pop
stc
fs
add
mov
jne
sbb
pop
and
dec
adc
pop
ins
or
xor
cmp
fucomi
shl
call
xchg
push
adc
dec
mov
adc
mov
icebp
or
and
push
and
inc
xor
imul
ret
or
add
jno
adc
movs
mov
jp
lods
outs
jo
push
mov
jecxz
push
push
test
cmp
iret
push
push
pushf
dec
dec
mov
adc
pop
movs
adc
(bad)
inc
jns
loopne
pop
sub
cmp
pop
hlt
ror
dec
push
and
and
adc
or
pop
in
or
or
mov
ds
mov
aad
pop
test
inc
push
push
sub
call
cld
xor
or
or
(bad)
pop
mov
retf
add
cmp
daa
les
or
pusha
std
add
mov
inc
pop
or
inc
sub
test
add
adc
or
cmp
adc
sbb
xchg
jmp
bound
cdq
scas
xchg
inc
xchg
enter
pushf
int
and
mov
mov
dec
add
es
stos
push
mul
ins
mov
test
mov
xor
dec
lock
mov
sbb
js
adc
mov
jecxz
push
out
cmp
push
dec
clc
(bad)
adc
dec
cmp
push
add
push
or
add
out
mov
push
push
jb
sub
push
mov
call
sub
mov
fadd
xor
aaa
cmp
sub
lods
pop
dec
loop
dec
sbb
sub
je
mov
pusha
aaa
push
rcr
push
sbb
xor
shl
(bad)
and
cmps
cmp
ds
adc
or
add
mov
call
dec
jge
inc
or
(bad)
aas
push
popa
or
shl
loopne
pop
lods
iret
jno
pop
mov
pop
cmp
imul
jge
or
loope
movs
or
nop
je
fnstsw
sahf
and
add
movs
into
and
clc
imul
cmps
cmps
cdq
inc
fnstsw
or
jl
push
jbe
mov
push
out
pop
dec
out
and
cld
adc
pop
js
add
or
imul
add
jae
or
jbe
sbb
pop
lock
or
dec
pop
outs
ds
adc
xor
clc
jb
mov
ss
(bad)
gs
pop
es
mov
aam
clc
mov
fild
adc
jl
into
or
pop
inc
mov
test
lea
call
hlt
jns
add
imul
mov
mov
or
sub
cmp
outs
clc
pop
dec
or
inc
add
add
sbb
je
cmp
add
shr
xor
sub
cs
lds
mov
inc
add
adc
les
mov
sbb
imul
sub
call
add
dec
adc
add
pushf
mov
rol
sbb
int3
rol
sub
or
adc
ja
(bad)
je
test
enter
in
dec
loope
fisub
inc
xchg
mov
out
or
cmp
jle
cmp
push
jmp
mov
and
xchg
(bad)
sub
enter
test
sbb
cmp
inc
sub
pusha
aas
dec
adc
xor
or
mov
adc
and
dec
mov
dec
adc
mov
lods
cld
(bad)
add
ja
xchg
fist
dec
mov
clc
leave
gs
fstp
jmp
xchg
jbe
push
mov
bound
pop
pop
and
call
xor
cmp
hlt
call
and
ficomp
mov
mov
jge
or
inc
aad
inc
pop
or
sub
loope
fistp
(bad)
dec
aam
fstp
outs
fcomp
dec
mov
or
sbb
and
or
add
and
xor
gs
and
dec
push
cmp
ins
xor
jecxz
call
fiadd
jnp
std
jl
add
mov
lahf
pop
push
sbb
push
pushf
push
sahf
cmps
iret
bound
add
inc
add
or
or
jg
das
lahf
fisttp
test
dec
in
dec
sub
add
add
jmp
and
icebp
jb
sub
inc
and
daa
sar
je
push
movs
push
push
adc
pop
ins
dec
out
pusha
add
cwde
dec
das
push
push
addr16
sub
inc
push
pop
mov
jo
xor
mov
and
pop
mov
nop
ficom
inc
push
(bad)
fadd
inc
add
inc
xor
mov
cmps
add
add
scas
shl
jno
dec
pop
in
push
jb
ror
ds
push
shr
add
retf
or
dec
cmp
or
cdq
push
in
lea
(bad)
call
dec
inc
cmp
push
pop
xor
xor
dec
mov
xor
icebp
dec
sub
in
rcl
add
inc
jne
jmp
shl
loope
push
pop
fdivr
sub
jp
cmp
push
push
test
std
xchg
call
clc
repz
ins
and
adc
jmp
cmp
fadd
add
jmp
ficomp
add
add
pop
cwde
ss
mov
popa
push
sub
pop
add
xor
std
(bad)
jmp
cmp
rol
push
sbb
ss
test
outs
dec
or
jge
(bad)
fadd
dec
(bad)
cdq
jbe
xor
loopne
dec
adc
push
test
ror
sbb
fdivr
and
dec
jnp
lock
mov
push
add
rcr
shl
shl
rol
imul
cmp
pusha
popa
pop
sub
or
sub
lock
mov
data16
mov
inc
sbb
int3
and
inc
xchg
(bad)
mov
sbb
dec
sub
loop
and
je
push
pop
dec
sub
lea
(bad)
nop
arpl
inc
and
cs
sbb
mov
cmps
xlat
push
and
sbb
dec
pop
cmps
int3
dec
loop
fwait
rol
mov
xchg
int3
push
ss
inc
push
push
mov
mov
push
jne
add
jno
mov
jl
or
or
sub
adc
cmp
sub
cmp
dec
js
mov
cmps
add
sbb
lea
adc
mul
je
cmps
xchg
adc
paddq
loop
lods
es
push
push
adc
repnz
(bad)
fcom
fwait
pop
lock
cmp
pushf
mov
sub
imul
mov
daa
pop
mov
ja
in
dec
lock
fsubp
jne
mov
xor
inc
outs
daa
inc
into
push
push
sar
test
inc
ins
pop
popa
mov
cwde
mov
push
push
test
jge
adc
mov
jno
adc
mov
mov
push
pop
loope
test
push
lods
loope
stos
ror
imul
add
sbb
push
nop
les
sbb
js
and
movs
mov
sub
xor
sar
fstp
les
jo
inc
lock
xor
xor
jmp
pop
pop
(bad)
and
push
ds
jno
cwde
xchg
scas
mov
mov
jecxz
push
mov
xor
adc
and
into
ja
mov
in
fidivr
ja
pop
and
xor
xor
or
xchg
outs
pushf
adc
sbb
cwde
int3
add
add
cmp
mov
xlat
orps
ss
lds
xchg
call
push
(bad)
jns
xchg
adc
mov
and
jae
mov
enter
mov
mov
cmp
or
xchg
push
jae
ror
push
jne
mov
pop
sub
jne
jmp
sub
loopne
adc
mov
mov
shl
nop
test
jle
and
jno
sub
sub
add
fsub
push
adc
int3
test
mov
loop
xor
imul
add
add
dec
sti
outs
and
push
adc
imul
pop
add
loop
inc
adc
pusha
or
clc
mov
mov
repnz
fdiv
cs
push
cld
cmp
inc
pop
neg
xor
fdivr
(bad)
nop
clc
js
cmp
test
gs
test
loope
add
jg
inc
aas
adc
mov
out
fisub
(bad)
loopne
mov
push
gs
shl
mov
xchg
ss
test
sub
adc
repnz
les
cmp
dec
jmp
adc
inc
out
mov
dec
inc
push
mov
push
xchg
jbe
xchg
push
cs
sbb
ins
mov
or
sub
xor
mov
retf
cmp
xchg
cmp
fld
pop
cli
jg
jo
popf
ins
cmp
lods
fimul
ficom
dec
into
adc
je
lea
cmp
adc
pop
cmp
adc
pop
or
test
in
sub
cmp
das
test
ror
sbb
cld
dec
pop
inc
inc
xchg
sbb
test
test
mov
mov
jns
dec
fs
pop
jns
mov
add
(bad)
mov
test
inc
lea
or
das
add
xchg
lea
stc
inc
cmps
mov
fs
add
ss
inc
pop
loope
enter
jmp
lock
jno
add
xchg
comiss
cmp
dec
arpl
sbb
in
push
dec
push
dec
es
push
dec
push
test
mov
ror
adc
jae
(bad)
sbb
pop
jnp
jecxz
dec
jne
inc
add
cwde
fsubr
dec
cmp
xchg
xchg
push
cmp
mov
retf
cmp
add
inc
jg
or
test
xor
inc
not
push
mov
test
dec
es
push
pop
fcomp
test
imul
mov
sub
imul
sbb
test
push
lds
adc
or
and
pop
pop
cmp
cmp
and
ret
dec
sbb
jmp
jbe
sbb
and
je
ss
adc
cmp
popa
or
fcom
dec
mov
or
push
xchg
adc
inc
sub
push
mov
(bad)
mov
and
adc
outs
sbb
and
push
dec
jg
mov
push
hlt
mov
fmul
sbb
mov
into
adc
imul
out
xor
mov
ret
sbb
dec
(bad)
or
inc
dec
in
dec
jecxz
popa
dec
or
xchg
xchg
movs
dec
fmul
cdq
dec
cmp
adc
sti
jecxz
push
inc
repz
clc
dec
pop
scas
xchg
dec
inc
inc
or
and
or
or
jne
mov
lea
push
or
pop
adc
push
int
mov
punpckhdq
leave
cmp
sbb
es
pushf
test
push
stc
fmul
daa
sbb
sbb
enter
sub
or
adc
cmp
aaa
movs
call
les
jg
push
fs
sub
mov
and
in
fistp
out
and
add
or
cmp
jbe
mov
mov
sub
dec
retf
je
sbb
or
push
mov
sbb
xchg
mov
or
arpl
push
xchg
jle
add
xor
or
(bad)
icebp
cdq
adc
push
xchg
sbb
add
dec
add
lds
mov
sbb
push
dec
sub
and
dec
rcr
inc
test
xlat
lds
(bad)
pusha
stos
push
sub
mov
mov
icebp
pop
mov
sbb
ins
popf
and
xlat
cmp
xchg
jno
repnz
sub
sub
jno
push
jmp
enter
dec
add
mov
or
pop
mov
mov
outs
add
mov
xor
and
cmp
mov
push
inc
stos
adc
sbb
gs
mov
add
cmp
add
and
je
sub
mov
mov
mov
popf
add
rcr
pop
xor
adc
or
push
adc
push
adc
dec
aas
imul
mov
push
dec
sti
cmp
push
or
adc
adc
jg
rol
inc
push
jg
rcl
jno
push
loop
fidivr
loope
sub
jg
pop
and
inc
and
mov
std
push
sbb
repz
cmp
enter
or
je
cmp
mov
inc
imul
mov
add
sbb
sbb
movlps
push
jl
gs
adc
lock
cmp
sbb
dec
sbb
mov
(bad)
ret
mov
jo
pop
shl
mov
mov
test
xchg
add
push
mov
popa
adc
dec
lods
in
mov
or
push
pop
xchg
mov
out
mov
nop
add
xchg
add
jmp
iret
add
mov
add
xlat
jns
and
push
ins
xor
jo
dec
outs
sub
lock
lock
jl
ins
cmp
je
imul
cmc
lods
sub
jg
clc
call
sbb
cld
test
jge
or
call
add
call
xchg
sahf
shl
sbb
fs
mov
cmc
les
arpl
shl
add
cmp
inc
or
or
xchg
addr16
add
dec
je
je
(bad)
jg
add
sub
and
sub
test
cmp
jne
push
add
or
mov
jge
inc
xor
loop
stos
shl
add
cmp
jmp
fnsave
jmp
push
sub
push
adc
cs
pop
movs
jp
xor
mov
js
call
jecxz
shl
and
lea
jge
pop
pop
rcl
or
dec
js
movs
xchg
add
and
adc
(bad)
hlt
js
ja
mov
not
adc
cmc
inc
or
lea
adc
adc
test
inc
cmp
mov
and
rcr
lods
scas
or
ds
(bad)
je
adc
call
jno
pop
push
arpl
(bad)
jle
les
inc
xor
inc
pop
inc
loop
enter
cmp
inc
(bad)
cmc
cmp
int
retf
push
push
ds
or
inc
or
add
mov
pusha
jp
or
mov
and
pushf
sub
cwde
dec
or
lock
sbb
in
lea
mov
sbb
add
mov
test
mov
push
rcr
mov
rol
adc
aaa
sub
push
xchg
fcomp
scas
lds
mov
ret
adc
pop
ffree
ins
push
sub
lods
xor
out
adc
out
stc
in
(bad)
xchg
(bad)
jmp
mov
cmps
cmp
mov
inc
iret
dec
rcr
xor
push
and
lods
dec
sbb
sbb
loopne
repz
les
or
lods
push
lock
fnstcw
bound
add
aas
jno
xor
div
pop
aas
jo
cwde
mov
jle
sbb
sbb
adc
out
and
or
fadd
inc
lock
and
cmc
mov
shl
(bad)
fcom
jne
xchg
xchg
and
in
cs
push
hlt
dec
add
jle
scas
rol
or
push
test
cwde
sub
js
(bad)
ss
popa
sub
call
jmp
std
and
adc
mov
cli
adc
mov
arpl
leave
sub
pop
lock
cmp
inc
add
(bad)
adc
push
dec
pop
clc
and
add
or
xchg
xor
mov
xchg
pop
mov
cmp
dec
dec
mov
cmp
mov
push
popf
mov
cmps
retf
jl
inc
popf
cmp
and
fidiv
enter
lahf
and
dec
nop
lea
loop
inc
xor
push
stos
aas
jge
inc
ror
(bad)
or
and
mov
dec
popf
pop
xor
rcr
call
pop
mov
movs
sbb
adc
pop
lock
test
cs
or
or
dec
or
ja
jl
dec
cmp
xlat
mov
add
in
shr
inc
and
push
shl
jns
clc
clc
mov
push
pop
add
add
add
scas
fs
scas
jnp
sub
mov
cs
data16
adc
push
push
sbb
dec
sub
loop
inc
adc
add
push
daa
fistp
sub
adc
ret
or
inc
and
push
retf
icebp
xchg
mov
clc
fadd
sbb
lahf
and
loopne
pop
test
add
(bad)
sbb
test
pop
and
scas
test
add
jno
push
add
retf
add
enter
cmp
xchg
add
loopne
dec
push
mov
(bad)
mov
jmp
icebp
(bad)
mov
or
or
push
jae
mov
fs
aad
xchg
and
dec
aaa
sahf
into
inc
mov
and
js
push
das
cmp
ret
(bad)
adc
mov
push
xor
and
and
aam
outs
or
xchg
mov
mov
inc
cmp
jmp
and
ret
test
push
sub
mov
rol
adc
dec
and
jecxz
xor
push
or
retf
mov
inc
ret
push
sbb
pop
jo
enter
or
add
xchg
pop
mov
sub
add
sub
mov
inc
pop
in
and
(bad)
adc
(bad)
dec
call
les
sub
push
xor
inc
pop
dec
jmp
retf
adc
push
add
ins
dec
mov
inc
das
xor
mov
sbb
add
aad
jmp
mov
mov
adc
and
add
inc
das
ins
cmp
sar
xchg
jo
stos
xlat
adc
adc
inc
fidiv
dec
clc
rcl
or
sbb
and
add
clc
xchg
loopne
out
daa
xor
push
and
int3
xchg
outs
add
push
ret
int3
es
in
or
(bad)
mov
outs
xor
inc
dec
add
or
inc
lods
and
data16
data16
adc
data16
sub
or
js
nop
lock
mov
sub
cmp
mov
mov
dec
or
jnp
arpl
aad
add
and
jmp
add
cmp
jl
adc
sub
dec
inc
ins
loope
test
loope
or
loop
jg
and
inc
sub
lahf
xchg
ins
push
xor
lods
hlt
(bad)
shl
rol
cmp
call
in
lods
out
mov
sub
cwde
inc
sbb
jl
pop
push
hlt
in
xchg
push
adc
adc
jge
or
or
and
and
push
mov
fld
js
(bad)
xchg
add
dec
inc
sbb
ror
dec
sub
cmp
sub
or
mov
enter
xor
lahf
(bad)
dec
dec
inc
fsub
in
imul
dec
and
pop
or
test
in
not
sbb
pop
push
dec
test
(bad)
fwait
xor
jge
inc
cmp
or
sub
add
mov
dec
mov
dec
retf
sub
jb
je
xor
js
or
lods
push
mov
xchg
inc
inc
push
sub
mov
mov
mov
dec
sbb
sbb
dec
ss
dec
dec
add
and
addr16
sbb
add
add
inc
hlt
sub
movs
push
xlat
mov
cld
cmp
mov
mov
mov
test
dec
ins
jno
iret
les
loopne
retf
(bad)
mov
std
stos
mov
ret
in
jae
mov
mov
test
idiv
aam
mov
push
loop
call
adc
push
dec
dec
in
mov
add
and
mov
loop
out
mov
je
rol
add
jo
inc
push
and
mov
(bad)
jmp
test
ficomp
pop
mov
(bad)
jmp
inc
or
push
pop
or
push
mov
sbb
push
add
adc
or
sar
pop
sar
and
aad
rep
fild
pop
xchg
sub
lea
add
xchg
movs
push
(bad)
into
movs
rcr
adc
adc
test
and
push
dec
add
sub
add
jb
nop
xor
jp
mov
cmp
out
nop
mov
jecxz
xchg
add
fsub
inc
pop
std
or
or
xor
das
or
ror
je
pusha
lahf
lea
shl
adc
or
sub
add
push
in
rol
push
mov
sar
jmp
(bad)
jg
mov
inc
cmp
sbb
dec
sbb
dec
loope
jbe
popf
ins
pushf
loopne
sub
movs
mov
js
shr
(bad)
in
and
pop
add
dec
xchg
mov
ffree
lods
inc
lahf
or
or
push
cmps
push
mov
mov
sbb
xchg
in
pop
jge
cmp
(bad)
mov
int
popf
sbb
call
xor
dec
push
sbb
pop
jg
lock
adc
add
retf
test
and
and
nop
xchg
(bad)
and
add
mov
pop
push
loopne
clc
test
ss
adc
sub
mov
dec
add
mov
push
mov
shl
jp
add
dec
push
or
imul
dec
mov
ret
inc
sub
jae
test
test
jae
xor
rol
mov
or
mov
lea
sbb
mov
mul
lock
call
ret
test
xor
cmc
ficom
and
pop
ret
or
cmp
outs
add
sub
xchg
xor
add
mov
dec
dec
inc
or
inc
mov
add
fcom
fild
retf
(bad)
test
into
push
mov
out
mov
test
test
or
shl
hlt
jne
inc
dec
inc
jne
adc
pop
ret
and
sahf
scas
dec
and
nop
dec
add
icebp
push
mov
jbe
dec
ret
popa
arpl
pushf
into
int3
pop
je
shl
fmul
adc
add
push
add
mov
shl
lods
aas
sbb
out
popf
dec
(bad)
div
mov
cmp
xor
mov
xchg
(bad)
mov
add
les
shl
jp
inc
hlt
push
dec
or
aam
inc
adc
mov
jnp
push
test
or
push
in
jp
fxch
pop
pop
cld
push
jle
mov
or
push
aad
xor
inc
iret
and
and
mov
int3
ret
daa
clc
fs
mov
fs
push
rol
mov
(bad)
movs
push
xchg
adc
pop
jmp
xor
add
cmp
mov
ret
push
lods
dec
scas
jl
and
call
rcr
pop
lods
cmps
xor
and
mov
sbb
or
jmp
xor
inc
and
popa
sahf
push
test
(bad)
jge
mov
jmp
sub
mov
push
(bad)
or
cs
cdq
test
push
push
ds
cmp
mov
int
or
repnz
ins
bound
(bad)
mov
test
js
jge
test
shl
pop
adc
ret
xor
je
pop
ret
add
jo
cmp
stos
inc
lods
xor
push
add
fwait
(bad)
in
or
push
push
sbb
or
mov
mov
or
add
retf
pop
add
and
aas
sbb
adc
sub
sub
call
cmp
jns
jl
test
int
inc
push
xor
jmp
scas
enter
add
in
(bad)
rcr
jle
adc
jbe
pop
test
lock
scas
add
imul
pop
jne
dec
dec
dec
pop
ja
mov
cmp
clc
out
mov
or
mov
pop
pop
add
inc
test
inc
loop
test
push
push
je
mov
cmp
and
and
jne
push
lea
dec
and
outs
clc
rcl
adc
mov
xor
push
xchg
sbb
sbb
dec
stos
clc
pop
mov
xor
movs
bnd
cmp
repnz
mov
mov
in
push
or
repz
adc
inc
sbb
aad
fwait
push
cli
jle
inc
push
cdq
rol
or
mov
sahf
stos
pop
sbb
mov
push
sub
dec
dec
les
cmp
xor
push
test
dec
pop
jno
and
mov
test
sbb
cmps
mov
test
jae
pushf
adc
into
xor
lea
or
sub
jae
into
or
or
setl
lods
rol
inc
lock
mov
inc
dec
adc
retf
add
or
loope
ja
sbb
adc
add
lods
or
push
xchg
and
ins
imul
jno
dec
in
adc
jmp
jmp
cmp
outs
or
sahf
push
shl
add
cmp
and
and
int
fist
adc
rol
sub
jo
mov
jle
jge
mov
jle
(bad)
dec
and
loopne
or
cmp
test
call
jp
fsub
jmp
sbb
inc
loope
out
mov
and
adc
xor
sub
pop
sub
loopne
sbb
mov
add
cmp
adc
inc
adc
ins
lock
push
mov
iret
daa
lea
das
push
fucom
fnstenv
loope
mov
add
loope
mov
movs
cmp
in
add
je
jp
dec
push
sub
mov
adc
(bad)
xchg
lods
cmps
mov
mov
push
add
push
push
std
inc
xor
je
es
pop
and
js
call
push
ret
outs
push
or
pop
jmp
cs
and
ficomp
inc
fdivr
sbb
out
dec
inc
inc
or
add
add
pop
mov
in
mov
and
pop
inc
pusha
jo
add
push
data16
dec
loop
or
adc
xchg
shr
popa
or
jp
js
add
push
nop
pop
pop
lock
or
xchg
add
dec
xor
and
dec
bound
jle
retf
sub
(bad)
cmp
or
cmp
jne
mov
cmp
mov
jae
jl
cld
mov
idiv
and
inc
inc
mov
dec
xchg
xor
mov
pop
or
pop
pop
push
mov
out
test
or
dec
cmp
fld
jecxz
mov
fild
adc
push
fst
mov
jno
adc
cmp
add
out
ins
mov
clc
retf
ret
mov
ja
sbb
jmp
cld
dec
or
xchg
rol
ret
push
xor
cmps
or
push
rdmsr
mov
out
test
and
jnp
retf
jg
adc
dec
push
out
jge
inc
jl
xchg
sub
ret
pop
aas
(bad)
leave
jmp
or
test
int
sub
pop
pushf
mov
sub
inc
pop
nop
xchg
inc
scas
mov
arpl
pop
sub
push
jmp
push
ror
adc
scas
xchg
jb
adc
rol
aas
xchg
cmp
call
mov
xor
dec
mov
jmp
inc
fidivr
dec
jl
mov
jge
push
test
daa
add
jbe
and
or
out
bound
mov
push
loopne
cmp
add
dec
add
xchg
inc
inc
jmp
mov
test
je
push
cld
cs
add
pop
cmp
jmp
repz
cld
and
icebp
add
lods
scas
icebp
xchg
inc
fs
add
push
jg
imul
mov
int3
fld
add
pop
adc
shr
inc
push
dec
mov
xor
add
mov
inc
or
mov
movs
loope
gs
pop
sub
adc
dec
xchg
push
pop
and
loopne
sub
dec
xor
xchg
mov
dec
cmp
mov
shl
das
or
fs
js
into
xchg
xchg
std
xchg
mov
sbb
push
add
jb
push
jge
lock
fsubr
add
pop
mov
mov
add
adc
add
sbb
(bad)
icebp
rol
xor
scas
jle
sub
test
ret
push
mov
iret
push
xlat
mov
push
cmp
inc
arpl
lods
xchg
ror
jne
add
pop
sbb
add
retf
lods
test
xor
inc
xor
jle
jo
mov
xor
mov
ds
popa
aaa
(bad)
out
adc
xchg
cmp
sub
iret
movs
pop
sbb
mov
dec
inc
xchg
or
leave
shufps
inc
retf
out
ja
mov
inc
and
cmp
lods
mov
stos
xor
outs
daa
aas
sub
push
(bad)
or
nop
jne
mov
and
adc
add
mov
push
cli
fisttp
jne
push
and
or
add
inc
jle
push
push
fcmovb
pop
mov
and
mov
add
ds
lock
add
js
ret
add
test
fcom
add
mov
sahf
inc
jmp
sbb
add
lods
or
jl
lea
das
rol
dec
cmp
adc
sbb
jmp
cs
test
lock
(bad)
or
sbb
sub
mov
sub
retf
xor
add
jmp
sub
mov
dec
xor
sbb
dec
xor
ror
inc
je
or
push
lea
movs
not
fsub
jmp
lahf
and
and
lods
cmp
sub
add
or
cmp
into
adc
inc
or
inc
inc
cmp
jl
jns
or
mov
xor
push
inc
sub
add
je
and
jecxz
lea
fimul
dec
pop
shl
call
arpl
and
cmp
cwde
add
sbb
xchg
ja
cmp
pop
and
sbb
xchg
retf
inc
add
or
xlat
imul
dec
stos
adc
stos
das
xor
movs
add
mov
cs
aad
fmulp
mov
push
xor
ds
inc
data16
mov
pop
loopne
int
or
add
mov
or
or
test
push
les
push
fisubr
loope
mov
and
in
pop
in
pop
cmps
xchg
pop
adc
mov
sub
stc
jbe
pop
xchg
add
test
cmp
adc
dec
ja
push
adc
pushf
dec
adc
aas
cld
sbb
stos
js
and
je
mov
push
popa
ss
and
(bad)
sbb
and
in
and
cmp
xadd
mov
dec
daa
adc
daa
xchg
add
stos
fwait
mov
es
fdiv
enter
in
jno
out
add
cmp
ret
in
or
add
pop
inc
inc
xchg
push
and
push
add
jo
xor
mov
and
mov
cwde
or
rcr
xor
xor
popa
lods
mov
stos
or
les
shl
pop
jne
aad
and
dec
cdq
add
call
fs
mov
sti
(bad)
ss
lods
rol
shr
lods
pop
mov
mov
in
mov
rcr
push
test
mov
mov
mov
adc
and
(bad)
aas
lods
adc
or
icebp
push
dec
inc
rol
add
arpl
xchg
xor
pop
in
mov
les
dec
sub
ret
inc
mov
pop
mov
fadd
mov
sub
add
or
jne
mov
out
(bad)
jp
jb
pop
jge
clc
jne
and
sub
outs
fild
push
push
add
jnp
mov
and
dec
dec
push
xor
jl
mov
adc
movs
loope
or
mov
push
je
sahf
mov
pusha
mov
nop
dec
xchg
shrd
iret
pop
add
in
nop
mov
sub
fsubrp
add
lea
or
add
gs
pop
cmp
mov
test
cmp
jnp
aam
xchg
rcl
pop
pop
and
push
jp
dec
and
fst
push
and
sti
add
lods
fs
and
arpl
adc
inc
test
mov
sub
pop
pop
call
das
dec
mov
push
lods
mov
mov
add
inc
dec
dec
loop
les
fisubr
retf
out
call
cmp
and
lods
sub
retf
or
fdivr
pushf
sub
mul
pop
adc
dec
sbb
cdq
and
cmp
push
pusha
lahf
jbe
sub
or
jae
fadd
jecxz
leave
lea
inc
shl
push
add
das
in
push
cmps
retf
cdq
jmp
pop
mov
ds
adc
and
push
in
mov
mov
add
and
nop
jle
sbb
lds
dec
lds
jbe
popa
xchg
(bad)
xor
xchg
out
stos
je
add
cmp
push
mov
div
pop
add
idiv
sbb
arpl
and
loopne
sbb
xlat
add
jl
inc
push
mov
inc
inc
in
sub
adc
push
outs
cs
test
mov
inc
cmps
mov
jne
sbb
jle
jecxz
jmp
sbb
in
push
pop
add
sub
adc
jl
test
ins
inc
xchg
ret
inc
xchg
ror
cwde
cli
lock
xor
cli
nop
jns
adc
push
sar
pop
sub
jae
adc
xchg
mov
jmp
ret
je
or
test
xor
inc
and
sbb
mov
ret
bound
(bad)
or
ret
(bad)
rcl
xchg
mov
loopne
cmp
stos
jp
imul
fcom
(bad)
mov
pop
ret
les
xchg
mov
dec
push
cli
stc
movs
add
add
ins
cdq
test
push
inc
arpl
icebp
or
xor
add
jecxz
cmp
shr
ret
and
fwait
add
pop
je
cmps
add
es
dec
jl
push
inc
dec
and
pusha
enter
addr16
pop
push
xchg
jbe
dec
sub
or
push
dec
ret
sub
lea
inc
jo
into
xchg
lods
das
push
clc
push
sbb
jne
lods
xor
pusha
mov
mov
out
xor
sbb
dec
xchg
adc
push
out
jo
lea
ret
gs
push
add
imul
sub
cdq
in
mov
push
jl
mov
ds
mov
or
retf
mov
nop
jp
sbb
ja
add
and
jl
cld
or
adc
add
push
popa
push
sub
in
mov
aaa
mul
dec
xchg
das
push
call
adc
shr
jae
ins
adc
mov
(bad)
jb
adc
and
adc
mov
mov
pop
cmp
pop
pop
adc
test
pushf
jmp
clc
and
and
sbb
sub
mov
push
test
not
int
lock
pop
mov
xor
enter
movs
add
xchg
mov
cmp
and
xor
rcr
daa
data16
loopne
ret
inc
dec
mov
dec
jae
cmp
jge
pop
mov
and
rcl
dec
cmp
jle
mov
dec
aam
or
push
div
ror
mov
or
and
and
pop
cmp
cmp
xor
push
mov
and
inc
mov
cmp
mov
mov
out
aam
xlat
mov
adc
or
adc
adc
or
xor
inc
and
lds
inc
xchg
in
mov
call
xlat
adc
out
shl
or
add
and
mov
adc
add
mov
lods
mov
inc
jnp
and
jle
dec
mov
pushf
and
or
sar
pop
xchg
icebp
inc
out
int
mov
cld
call
and
or
stc
xor
aam
mov
sbb
mov
jl
movsx
adc
je
or
call
pusha
fld
push
push
pop
test
imul
add
imul
sub
call
or
bnd
ror
push
icebp
pop
or
sar
fisubr
jmp
xchg
push
mov
adc
or
and
xchg
add
xchg
inc
dec
dec
add
loope
mov
push
add
out
stc
xchg
sbb
aad
add
push
or
mov
adc
push
push
inc
jbe
mov
jnp
and
cmp
or
dec
mov
xor
cdq
les
sbb
ret
outs
mov
(bad)
jmp
jmp
inc
push
mov
inc
push
mul
xchg
sub
je
mov
in
ret
sbb
adc
push
lds
xor
jmp
test
setp
dec
daa
mov
push
imul
or
aaa
out
xchg
lock
fcomp
(bad)
mov
cmp
add
lods
pop
ins
lock
cld
or
(bad)
mov
add
out
(bad)
idiv
cmp
sbb
and
push
test
mov
mov
cs
movs
dec
rol
arpl
sub
out
jae
sub
bound
rol
xor
je
arpl
je
adc
jb
sbb
enter
jl
cmp
cs
push
dec
jmp
push
jmp
or
iret
inc
movs
jmp
jmp
dec
movsx
out
push
jo
retf
sbb
xchg
sub
into
mov
rcl
add
pop
(bad)
xchg
add
inc
lock
sub
(bad)
cmp
stos
(bad)
xchg
add
add
popa
jmp
or
xchg
pop
cmc
cmp
ret
add
add
scas
pop
outs
adc
sbb
aaa
add
sub
push
dec
push
add
ss
mov
out
push
xor
lds
scas
fst
das
les
push
mov
mov
arpl
rol
arpl
cld
ret
pop
(bad)
aad
mov
push
dec
pop
or
xchg
inc
jne
dec
pop
stos
xor
mov
sbb
adc
push
xor
loope
push
sbb
or
inc
inc
repnz
test
je
test
dec
jmp
ret
adc
sbb
mov
inc
cli
je
xchg
and
sbb
imul
je
sbb
inc
dec
add
xchg
repz
and
sub
add
adc
add
push
pop
push
les
add
test
mov
not
inc
repz
sub
add
add
aaa
bound
dec
inc
pop
cdq
add
pop
dec
inc
int3
js
cdq
pusha
hlt
pop
lock
and
inc
loope
or
inc
(bad)
inc
add
lods
cmc
add
xlat
gs
dec
pop
push
into
mov
cwde
add
add
ror
mov
das
push
inc
dec
xchg
mov
dec
xor
nop
pop
je
xchg
js
movs
mov
mov
les
sbb
ins
movs
cmp
xchg
test
jle
lods
aad
mov
shl
xor
cmps
sub
push
rcl
(bad)
pop
test
jae
or
xor
add
mov
jb
test
add
adc
pusha
ss
rol
sub
cmp
icebp
add
pop
hlt
outs
sub
call
push
pop
mov
rol
mov
jp
and
(bad)
dec
mov
mov
rol
je
adc
and
xchg
pop
add
sbb
iret
sub
and
add
pop
lds
or
and
cs
stos
dec
mov
out
mov
cmp
test
cmp
lods
push
add
les
inc
pop
push
sahf
mov
jne
icebp
jbe
add
jb
jmp
cmps
pop
jne
and
inc
or
pop
mov
mov
adc
daa
fld
mov
mov
adc
dec
call
shl
std
sbb
mov
cmp
test
jl
and
inc
dec
stos
add
inc
adc
xor
adc
or
sub
mov
hlt
jle
adc
add
pusha
test
sbb
dec
jmp
xchg
arpl
ja
or
in
jbe
dec
add
mov
xor
sti
pusha
xchg
add
movs
lock
mov
mov
call
pop
xlat
xchg
cmp
sbb
sub
adc
add
nop
xor
and
mov
sbb
sbb
add
mov
sub
xchg
jae
je
outs
imul
cmp
sar
(bad)
mov
and
add
inc
adc
sub
push
sub
aam
sub
clc
movs
call
imul
jnp
call
ror
adc
lahf
dec
loop
push
clc
mov
cmp
in
and
mov
(bad)
not
adc
xchg
or
lock
jecxz
sbb
adc
js
ss
data16
jge
ret
js
mov
add
clc
or
xor
push
hlt
add
data16
(bad)
adc
pop
lods
test
iret
push
sar
cli
inc
aad
imul
ret
push
out
or
sbb
and
sbb
arpl
push
fidivr
xor
cmp
jno
adc
add
(bad)
stos
sbb
or
cmp
mov
and
xchg
mov
ins
lods
gs
sahf
inc
jno
ja
jae
lea
dec
dec
mov
xor
dec
push
div
out
push
xor
cwde
add
pop
mov
xchg
cmp
in
xchg
pop
add
pusha
mov
cli
jne
aam
or
dec
cli
inc
dec
and
jne
gs
sub
enter
mov
ror
cmp
and
push
cmp
mov
jae
sbb
inc
mov
and
(bad)
jo
and
jbe
outs
(bad)
cdq
push
sbb
jecxz
mov
sbb
add
je
push
push
(bad)
ret
clc
push
mov
bound
fidiv
loop
(bad)
pop
sbb
mov
cmp
add
mov
jo
ret
dec
or
pop
ret
lahf
jo
inc
dec
cmp
pop
pusha
dec
sbb
mov
icebp
inc
inc
in
shl
inc
mov
adc
xchg
test
push
jge
pop
inc
sub
in
ret
nop
jp
jne
push
or
jno
add
(bad)
push
sar
push
or
dec
or
or
inc
dec
mov
pop
repz
dec
sbb
pop
outs
icebp
push
test
add
in
or
mov
mov
dec
sar
test
nop
mov
out
add
cmp
push
add
movs
add
mov
xor
sbb
add
jg
fstp
mov
sub
je
cmp
ss
sbb
sbb
mov
push
jmp
pop
push
add
fwait
xchg
or
push
call
cmp
es
popa
pusha
push
pop
fs
loopne
xor
sub
daa
lahf
jno
and
mov
into
push
mov
dec
dec
cmps
push
cmp
scas
mov
push
stc
fisttp
cmp
push
pop
add
adc
adc
adc
or
outs
aas
mov
call
sbb
je
jmp
or
pop
mov
arpl
dec
iret
aam
dec
fisubr
gs
ins
ins
mov
nop
xchg
ins
ret
xchg
adc
(bad)
mov
add
dec
shr
fwait
sbb
fnsave
xchg
xlat
adc
add
adc
inc
inc
inc
cwde
cld
mov
iret
rcl
jnp
xchg
add
repnz
popa
push
adc
dec
push
inc
mov
jo
sbb
pop
add
xchg
push
inc
sub
cmp
add
(bad)
stos
adc
sar
xchg
jb
mov
sbb
pop
adc
cli
frstor
mov
loop
(bad)
jo
adc
sbb
adc
loop
adc
push
inc
(bad)
push
or
adc
in
sub
xchg
pusha
dec
(bad)
loopne
pop
ss
or
mov
and
adc
popa
mov
retf
sbb
and
mov
pusha
dec
loop
data16
ret
sbb
mov
pop
pop
mov
arpl
jns
call
xor
mov
dec
shl
mov
mov
dec
sbb
push
sub
jl
shl
push
adc
dec
in
(bad)
pusha
inc
sub
clc
(bad)
cmp
adc
inc
mov
push
push
mov
hlt
and
xor
loop
dec
sub
mov
scas
jns
pop
inc
jg
leave
adc
inc
fmul
xchg
mov
add
sub
sub
jecxz
pop
or
(bad)
sbb
or
(bad)
scas
mov
ja
movs
mov
div
scas
dec
and
push
pop
mov
and
push
inc
adc
or
add
fidiv
push
sbb
xchg
xchg
ret
push
or
pop
sbb
or
mov
sub
rcl
mov
movs
mov
inc
pop
movs
ret
sub
cs
or
mov
inc
add
mov
ins
data16
pop
adc
dec
shr
call
jnp
lds
jbe
outs
inc
pop
mov
sbb
call
xchg
inc
repz
lock
js
imul
adc
mov
and
pop
sub
and
ins
add
xchg
ror
add
enter
loop
adc
cli
sbb
pop
bound
push
and
dec
lods
lea
adc
es
cdq
xor
push
in
ds
push
adc
add
pop
sbb
add
dec
ret
jmp
leave
test
imul
lods
adc
pushf
mov
sbb
rcl
int3
mov
dec
loop
int3
sub
pop
inc
jmp
sub
dec
xchg
mov
int
inc
pop
inc
aam
(bad)
jmp
cmp
push
sub
jno
aaa
xchg
call
sub
les
mov
xchg
popa
xchg
stos
inc
pop
xor
test
xchg
and
(bad)
jmp
cmp
out
mov
and
inc
imul
dec
xchg
adc
and
inc
prefetch
int3
not
and
mov
int3
outs
sbb
(bad)
jge
jmp
cli
loopne
aam
in
or
xchg
pop
ins
int3
adc
cmp
test
jo
fst
test
push
sub
mov
inc
retf
and
xor
sub
push
xor
push
aas
jmp
add
cdq
or
pop
lods
push
(bad)
mov
sbb
nop
mov
ins
mov
(bad)
jne
pushf
and
jo
hlt
add
mov
push
les
or
sahf
scas
push
add
aam
dec
xlat
pop
fstp
dec
(bad)
cli
sbb
je
movs
pop
jle
add
sub
cmp
sbb
lock
into
adc
clc
push
and
gs
test
jbe
or
and
shr
aaa
adc
xchg
push
pop
scas
mov
sbb
add
jge
inc
mov
and
mov
push
push
cmp
pushf
xlat
push
repz
and
push
hlt
sub
cs
ins
push
or
mov
cmp
push
dec
ret
mov
leave
jae
add
es
or
cmp
iret
push
es
push
ds
cs
sbb
ficomp
aad
ret
lea
hlt
xor
es
jb
in
bound
lea
cld
shl
adc
cmps
mov
inc
and
mov
mov
add
mov
push
add
pusha
mov
push
inc
add
clc
clc
fwait
lea
push
ins
fsub
pop
inc
cwde
(bad)
rol
xchg
mov
push
pop
(bad)
mov
imul
je
neg
jle
mov
or
add
hlt
pop
push
adc
push
or
mov
and
jo
add
into
mov
and
cmps
repnz
repz
add
call
inc
out
cs
cmp
cmp
aam
jge
push
adc
clc
push
inc
retf
cwde
mov
and
in
sbb
inc
inc
unpckhps
lea
xor
mov
push
or
sar
mov
cwde
dec
(bad)
xchg
xor
inc
and
mov
lods
ins
movs
jmp
out
xchg
loop
cmp
adc
add
push
mov
pusha
or
ficom
sub
xchg
imul
add
adc
shr
lea
mov
je
add
jg
cmp
jl
mov
add
or
cdq
xor
test
icebp
fstp
pusha
xchg
cmp
sub
retf
add
push
dec
inc
pusha
into
inc
sbb
mov
sub
jp
shl
adc
shl
stc
out
das
add
push
pop
or
enter
sub
push
(bad)
push
dec
cmp
fwait
loopne
out
ins
xor
data16
cmp
call
mov
rcr
movs
inc
pop
add
inc
or
or
jle
jg
cmp
retf
add
xchg
mov
jl
data16
frstor
add
cmp
mov
dec
jmp
inc
add
clc
retf
sbb
or
sar
jno
adc
add
mov
xlat
mov
or
imul
cdq
leave
mov
inc
imul
imul
inc
shl
inc
popf
and
or
fcom
mov
sbb
js
inc
jge
push
push
push
clc
and
je
add
mov
adc
ret
add
push
ret
clc
seta
or
test
or
pop
mov
shl
retf
(bad)
and
repnz
cmp
jmp
sbb
pop
push
loop
nop
pop
test
js
loop
mov
sub
sub
xchg
mov
add
xchg
cmp
push
inc
mov
sbb
sbb
psubb
inc
push
rol
add
adc
adc
adc
adc
adc
femms
ins
or
ret
or
or
pop
ror
pop
mov
add
xor
ins
jmp
and
add
push
imul
dec
mov
pop
sbb
sbb
jns
push
and
out
mov
sbb
iret
push
push
sahf
add
es
and
dec
cwde
or
and
pop
add
std
sbb
mov
cmp
loop
pop
rcr
daa
mov
pop
dec
mov
fidiv
pop
in
sub
rcl
sbb
inc
lea
pop
je
mov
push
pop
mov
inc
pop
xor
mov
push
outs
ins
aas
dec
test
mov
sub
daa
(bad)
mov
or
inc
jne
(bad)
xchg
aad
sar
nop
mov
and
or
out
pop
std
xor
cmp
push
int
add
or
in
retf
shl
in
dec
cmp
dec
rcl
dec
add
push
or
test
lds
repnz
or
inc
daa
imul
or
adc
adc
fdiv
xor
ret
pushf
(bad)
mov
push
jmp
dec
sbb
push
shl
and
push
add
add
pop
enter
daa
ror
ja
rcr
jno
outs
aas
and
push
adc
xchg
stc
and
sbb
leave
lods
or
add
or
mov
pop
test
sub
ret
pop
(bad)
adc
adc
popf
adc
call
sub
xor
(bad)
adc
pop
mov
dec
mov
shl
retf
and
add
mov
add
adc
scas
mov
sbb
xchg
pop
sbb
or
popa
inc
in
loope
and
outs
adc
sbb
out
sub
ret
inc
push
movs
cdq
lods
lea
(bad)
repnz
inc
leave
inc
inc
(bad)
sar
xchg
mov
pop
or
cmp
push
push
aam
adc
add
lods
or
add
sbb
popa
arpl
je
xchg
dec
xchg
test
aad
hlt
shl
inc
loopne
adc
out
xchg
ret
xor
lea
aas
adc
repz
add
js
fnsave
adc
xor
pop
mov
dec
mov
xchg
cmp
pusha
jmp
adc
dec
and
and
(bad)
or
push
sbb
stc
cwde
and
or
fsub
lahf
ins
inc
or
pop
daa
inc
lahf
push
pop
sbb
ret
cmp
out
adc
push
aad
xor
push
fisttp
xchg
pusha
mul
sbb
int3
cmps
xchg
inc
std
jmp
push
dec
test
pop
into
dec
cli
inc
xchg
inc
push
cmp
jge
xchg
jb
fidivr
mov
push
or
ud2
fisubr
mov
lea
or
movs
mov
sub
or
sbb
out
movs
out
pshufw
lods
imul
pop
aas
lods
and
inc
add
or
and
popa
dec
stos
mov
sub
xchg
das
push
xor
push
cwde
aaa
fdivr
test
adc
loopne
add
dec
sub
inc
cmc
fld
adc
add
in
outs
push
fidiv
rol
jno
test
out
push
hlt
pop
push
push
cmp
jl
xor
(bad)
dec
add
dec
arpl
adc
call
data16
lock
xchg
jo
lock
mov
mov
xor
or
shr
adc
dec
cmp
rcr
dec
pop
mov
imul
pusha
add
and
cmps
mov
imul
xor
pop
xchg
ret
mov
fs
push
shl
icebp
mov
mov
push
jnp
mov
xchg
dec
add
adc
mov
sahf
ss
jo
jo
and
js
dec
cs
jecxz
adc
js
lea
push
mov
sub
mov
gs
arpl
add
arpl
sti
jb
mov
or
dec
lea
dec
imul
cmp
mov
xor
pop
aad
mov
js
sbb
sub
xchg
push
enter
dec
xor
mov
or
jecxz
xchg
mov
rol
push
push
mov
cmp
inc
add
mov
and
mov
cs
cld
jo
and
je
cmp
jle
xchg
sbb
int
push
nop
in
mov
push
add
adc
adc
push
fldcw
(bad)
cmp
jg
(bad)
loopne
and
adc
sbb
dec
fcomp
pop
gs
repz
ins
movs
add
sub
mov
loopne
scas
jl
ficom
mov
adc
push
jmp
jge
test
and
pop
push
or
push
xchg
aam
mov
push
or
or
fs
retf
sbb
int3
push
je
jbe
adc
push
push
cs
add
push
cmp
cmp
inc
add
push
or
cld
pop
adc
repz
add
or
adc
xor
jo
out
es
add
jle
test
es
icebp
or
mov
push
push
xor
add
xchg
sar
jo
das
jg
out
outs
push
loopne
dec
je
or
sbb
and
and
add
xlat
add
or
push
xchg
clc
sub
push
mov
lods
adc
dec
pop
or
mov
pop
pop
sub
pop
enter
xor
je
xor
cmp
shr
jp
and
pusha
sub
call
push
clc
or
push
jns
jge
xchg
add
lock
add
adc
shr
pusha
shl
add
push
sbb
ins
dec
jns
mov
xchg
inc
dec
fistp
cmc
hlt
adc
jl
arpl
xor
xchg
retf
movs
add
push
out
lea
sub
loope
inc
enter
sahf
xchg
mov
or
movs
mov
sub
jbe
ficom
lea
test
aas
mov
inc
adc
loope
pop
add
mov
in
test
out
cld
sub
js
in
jbe
ja
or
mov
push
add
call
mov
call
jnp
and
pop
clc
dec
jg
push
fnstenv
xor
sub
add
push
push
aaa
ror
ss
rol
stc
lock
aam
jmp
sbb
dec
movs
xor
dec
mov
fwait
cmp
iret
push
cmc
clc
sub
ins
and
xor
adc
add
pusha
lea
fnstsw
lods
sbb
ins
jmp
retf
sbb
or
dec
aam
add
(bad)
sub
pusha
cmp
lock
or
jns
shl
call
mov
mov
push
ins
sub
ja
data16
pop
dec
xor
sbb
cdq
pop
lahf
xor
ret
lahf
test
or
popa
mov
sub
push
add
sbb
xchg
mov
out
xor
jmp
not
cmc
cdq
ins
or
or
daa
jae
or
and
sub
jg
jbe
shl
test
adc
jecxz
lods
shl
and
fisttp
aas
sbb
mov
mov
lods
(bad)
repnz
shr
(bad)
xchg
add
adc
mov
aaa
je
dec
loop
out
dec
dec
std
pop
adc
(bad)
icebp
sahf
jmp
pop
cmp
sar
mov
dec
mov
dec
inc
sbb
call
movs
sbb
sbb
shl
lock
sub
and
push
es
jg
adc
inc
stos
cmp
cli
fdiv
xchg
sub
dec
dec
push
test
pop
hlt
scas
fwait
sti
mov
xchg
outs
(bad)
sti
je
jl
fcmovb
jg
hlt
(bad)
cmp
push
xchg
imul
cld
mov
sbb
jmp
popf
fld
push
jb
imul
xor
mov
aam
movs
jne
inc
push
stc
jmp
mov
jmp
inc
dec
test
dec
cwde
adc
xor
xchg
lock
xchg
adc
pop
arpl
cmp
push
(bad)
or
adc
pop
pop
(bad)
push
adc
loope
imul
sub
gs
pop
ins
test
push
je
mov
jne
leave
fsub
mov
icebp
pop
pusha
inc
add
jl
add
inc
mov
aad
add
mov
xchg
iret
jae
xor
xor
xchg
nop
dec
adc
cmp
xor
and
dec
and
cmc
inc
mov
imul
dec
or
push
or
jmp
jmp
mov
pop
sub
add
mov
and
jmp
inc
dec
pop
xchg
in
or
cmp
test
add
cmp
test
retf
les
pop
js
test
push
push
jno
and
sub
push
imul
push
cmp
je
push
push
dec
pusha
imul
ret
out
std
sbb
cmp
and
lock
add
ins
fdiv
bound
(bad)
aas
leave
push
mov
pop
or
shl
fnstsw
and
adc
adc
addr16
dec
jne
(bad)
jle
enter
dec
fimul
inc
cmp
fld
cwde
dec
push
or
xor
ins
dec
mov
dec
repz
sub
dec
jp
cmp
sar
or
add
pop
add
or
cmp
push
xor
sbb
rol
xchg
je
mov
dec
cdq
out
fiadd
into
jmp
cmps
icebp
ror
daa
add
lods
jno
mov
out
sbb
adc
cli
xor
xor
push
and
leave
and
and
imul
das
pop
dec
popa
movs
or
scas
sub
je
cmps
rcl
adc
lock
mov
or
inc
sbb
int3
and
outs
and
and
mov
xchg
pop
and
pop
dec
add
and
jb
cmp
mov
sbb
jl
lock
lock
mov
sub
rcl
pop
xchg
or
fs
fidiv
dec
ret
xchg
xor
inc
(bad)
enter
ror
mov
push
nop
dec
sbb
add
inc
adc
mov
pop
popf
dec
ret
into
cli
and
cmp
jg
push
cmp
scas
push
xor
dec
or
or
cmp
adc
jl
jle
or
jg
inc
adc
mov
mov
jmp
loopne
add
mov
or
sub
add
sbb
movs
jno
jp
or
xchg
xchg
push
data16
es
sub
outs
mov
xchg
and
shl
inc
xchg
out
sub
adc
es
popa
int
shr
sub
inc
call
add
arpl
adc
add
inc
inc
ret
or
cmp
add
fistp
pusha
dec
lds
push
in
adc
inc
add
add
inc
pop
dec
fisub
rol
push
movs
aad
addr16
test
jmp
cmps
lea
std
dec
mov
xor
and
mov
xchg
sub
mov
movs
test
inc
mov
cmp
dec
cld
aas
dec
addr16
dec
mov
ficom
mov
out
mov
inc
imul
and
pop
ffreep
dec
push
inc
or
inc
push
jl
jne
daa
cdq
arpl
jo
sub
mov
pop
sub
or
push
cmp
enter
and
mov
test
pop
jae
jle
push
xor
push
mov
cmp
cmp
test
xchg
sub
(bad)
push
in
mov
mov
inc
sub
add
adc
sub
or
adc
stos
add
fadd
xchg
cmp
out
mov
and
xor
add
sub
jb
xchg
in
mov
je
pop
out
mov
sbb
mov
into
sub
sar
dec
mov
jmp
push
sbb
sti
aam
jmp
jge
int3
jp
cmps
push
or
sbb
dec
sbb
outs
es
cvtps2pd
vmovmskps
dec
mov
adc
je
mov
jne
sti
sbb
lea
and
or
and
add
sbb
enter
push
ret
add
jecxz
push
and
jnp
or
xor
jo
mov
sub
or
xor
mov
inc
add
jno
enter
clc
clc
xchg
mov
xchg
movs
clc
dec
add
xchg
mov
aam
adc
bound
sub
test
or
fcom
rol
cmp
adc
sub
ror
adc
or
or
addr16
clc
pop
lock
sbb
inc
repnz
dec
dec
mov
xchg
inc
xor
sub
pop
movs
jne
test
mov
rol
push
lds
or
frstor
xchg
mov
and
jns
jecxz
pusha
sub
sahf
inc
adc
sar
mov
ficom
int3
jmp
(bad)
loopne
xor
inc
nop
or
jo
dec
sbb
push
test
adc
and
pop
and
shl
jmp
dec
sbb
sub
and
dec
mov
xchg
add
nop
cmp
sub
jno
pop
out
sahf
fild
xor
and
outs
add
call
test
jne
fwait
or
xor
xor
adc
add
sbb
jge
js
sub
mov
sub
icebp
push
pop
sbb
leave
aam
xchg
add
loope
(bad)
push
and
js
mov
adc
cwde
or
test
ins
repz
xor
rcl
or
outs
fdiv
fsub
inc
dec
and
je
mov
ror
sbb
sub
rol
sbb
xchg
adc
add
and
(bad)
retf
das
xchg
add
mov
cmps
repz
in
mov
adc
je
loopne
inc
loope
imul
xchg
aam
mov
cld
adc
add
push
mov
xor
push
movs
add
push
push
test
arpl
sub
and
jl
in
ret
push
cmp
call
pop
jmp
dec
ins
sbb
mov
ss
dec
jne
mov
push
sbb
push
and
or
sbb
mov
cmps
mov
pop
sub
sbb
add
jge
ror
test
or
and
in
cmp
push
cli
push
jmp
and
sar
sbb
adc
push
xor
int
adc
push
aaa
cs
adc
inc
xor
call
xor
inc
dec
mov
das
or
mov
sti
adc
add
mov
xor
or
or
pop
dec
loop
fs
or
sahf
xlat
sub
adc
test
scas
xor
imul
dec
sub
xor
or
das
or
je
mov
jno
(bad)
out
sub
and
push
xlat
push
adc
je
xchg
xchg
inc
cmp
nop
scas
je
or
add
push
xchg
adc
push
sbb
sub
adc
aad
jmp
jae
rol
pop
hlt
pop
mov
add
(bad)
sbb
rcl
(bad)
and
(bad)
adc
test
mov
pusha
jnp
jno
adc
adc
xor
inc
hlt
aaa
retf
rol
or
sub
mov
dec
mov
jl
inc
jne
push
sahf
mov
or
dec
add
int3
push
mov
iret
cmps
(bad)
dec
sbb
cwde
aaa
je
dec
push
xchg
xor
mov
pusha
sbb
rcr
imul
sbb
or
inc
add
sub
mov
or
pop
xor
and
jmp
leave
test
and
pop
rcl
nop
in
dec
(bad)
jmp
add
pusha
inc
ins
pop
lahf
push
dec
ret
mov
daa
imul
imul
out
sahf
mov
and
adc
daa
or
adc
pop
mov
sbb
mov
mov
ins
jge
cs
push
mov
adc
cmc
add
in
pmaddwd
sbb
push
push
jg
adc
xor
aaa
sbb
mov
adc
xor
add
xor
push
inc
inc
je
clc
aas
push
add
and
dec
and
jne
ins
ror
cmp
and
rcr
ins
mov
inc
sbb
sbb
ss
jp
and
push
test
push
adc
add
or
cmp
test
test
mov
sbb
push
push
ror
fsubr
inc
add
addr16
fild
sub
mov
xor
test
es
mov
inc
cmps
into
nop
das
push
sbb
out
xchg
shr
call
add
add
imul
sbb
mov
push
dec
or
inc
dec
rcr
call
mov
inc
and
mov
aad
sbb
inc
(bad)
sbb
test
add
bnd
pop
xchg
pop
sub
push
pop
push
sbb
das
sub
add
ins
(bad)
(bad)
rcr
iret
push
movs
stc
xchg
shl
and
add
stos
cli
sub
je
aaa
arpl
or
pop
mov
mov
movs
lahf
mov
and
mov
mov
cwde
pop
sbb
and
adc
pop
jge
imul
mov
or
sub
or
(bad)
dec
pop
fst
cmp
jle
push
xchg
mov
mov
xor
sub
or
rol
out
imul
push
sub
push
push
pop
push
frstor
iret
popa
(bad)
js
jmp
dec
jns
or
xor
fisub
push
pushf
push
push
xchg
or
add
pop
sbb
jle
fist
push
or
pushf
sbb
mov
fs
mov
jg
loop
inc
adc
mov
fwait
ret
xor
js
pop
call
pop
pushf
mov
add
cmps
aad
adc
sar
add
jmp
es
xor
cmp
jne
add
sbb
cmp
xchg
data16
and
ins
or
or
mov
xor
pop
dec
popa
les
aas
cmp
or
mov
cmp
in
inc
push
test
sbb
push
pop
sbb
pop
nop
(bad)
movs
sbb
hlt
or
and
pop
sar
test
pop
sbb
inc
shl
push
sti
test
xchg
push
push
and
dec
jo
jno
sub
test
sbb
loop
inc
xchg
push
add
imul
inc
pop
cmp
cmc
popf
adc
shl
scas
lea
pusha
arpl
loopne
call
movs
xor
dec
in
pop
out
push
jp
push
hlt
mov
xor
cld
cmp
in
shl
ficom
jp
pop
jg
pop
call
cmp
inc
clc
in
add
aaa
nop
mov
jg
jne
xchg
ss
and
idiv
or
sbb
rol
adc
or
pop
fs
inc
jg
cmp
or
movs
mov
mov
sbb
push
push
test
inc
loop
pop
push
pop
inc
or
push
ins
inc
lea
hlt
push
push
xlat
adc
sar
es
(bad)
or
inc
mov
sub
mov
movs
xor
loope
xor
and
xlat
adc
out
dec
pop
or
sub
shr
and
test
xchg
mul
push
cmp
adc
nop
add
icebp
xchg
cmp
cwde
add
mov
push
sub
add
add
xchg
push
sbb
mov
ins
outs
push
dec
sub
xor
rcl
cdq
push
in
dec
sub
std
ja
mov
(bad)
into
sbb
add
imul
fmul
ret
sub
or
mov
dec
pop
jp
and
and
mov
add
cmp
out
push
jo
sbb
rcr
xlat
adc
fldcw
push
mov
cwde
(bad)
mov
adc
cmp
ds
pushf
push
stos
loope
jp
push
sub
inc
cmp
jl
jl
mov
xchg
sub
loope
and
mov
cmp
sbb
adc
mov
xor
xor
inc
sub
sub
and
dec
xchg
outs
or
cmp
mov
jo
sub
movhps
sti
push
add
inc
imul
jmp
inc
adc
pop
adc
test
rol
push
mov
out
dec
aaa
inc
call
dec
jbe
mov
sbb
popa
out
in
xor
push
dec
pop
jmp
dec
retf
inc
sbb
call
or
scas
jle
mov
test
push
in
mov
jne
add
les
lock
and
stc
xchg
mov
std
dec
mov
adc
imul
sbb
adc
xor
cmp
inc
sbb
or
jle
mov
or
pop
xlat
push
mov
adc
fcmovnbe
inc
pop
and
or
loopne
xor
dec
aad
or
pop
stc
push
imul
jl
mov
nop
arpl
inc
sbb
lahf
xchg
add
sub
xchg
fcomp
mov
sub
lea
pop
int3
sub
add
sub
jge
aas
xchg
add
cmp
mov
pusha
cmp
and
mov
and
sbb
inc
cmp
mov
or
xchg
cdq
fisttp
fisub
push
xor
pop
push
or
mov
xor
mov
sub
arpl
xchg
aaa
push
pop
sub
xor
sbb
adc
cwde
sbb
add
add
mov
js
ret
adc
lds
dec
mov
les
lods
ss
repz
mov
scas
mov
xor
mov
inc
mov
sub
push
add
inc
push
xor
popa
mov
in
dec
sub
or
loope
inc
sub
shl
movs
daa
mov
mov
dec
(bad)
mov
add
pop
js
dec
mov
mov
and
and
add
aam
sbb
shl
int3
inc
xor
in
inc
mov
and
xchg
mov
jmp
xchg
test
aaa
mov
inc
loope
(bad)
sub
clc
scas
cmp
sub
js
mov
aam
and
and
or
int
or
iret
mov
inc
pop
lods
or
dec
push
dec
jne
pop
aaa
adc
js
cmp
pop
sub
inc
jb
sbb
push
shl
pushw
jne
add
push
clc
ja
sbb
rcr
addr16
cmp
sbb
ja
sub
or
pushf
sbb
(bad)
ficom
lahf
cmp
in
xlat
xor
mov
sysret
dec
pop
inc
mov
js
inc
mov
push
pop
adc
jg
lea
or
and
jae
ds
push
movs
jnp
push
and
sbb
and
xchg
add
adc
fidivr
(bad)
shr
(bad)
push
fisttp
inc
ds
inc
pop
add
(bad)
adc
xor
(bad)
adc
ret
cmp
stos
push
cmp
jne
in
mul
sub
emms
mov
jmp
sub
jno
pop
into
mov
nop
push
push
sar
mov
pusha
lock
add
xor
in
inc
push
pop
push
(bad)
movs
adc
pop
xchg
test
test
and
inc
xor
cmp
inc
cs
enter
adc
adc
xor
xchg
ja
cmp
scas
push
test
outs
sbb
clc
loopne
jb
or
push
dec
aad
pusha
ins
fmul
pop
cmp
add
in
xchg
pop
test
cmps
push
dec
pop
mov
clc
je
mov
pop
addr16
loop
jl
lods
repz
out
and
retf
add
(bad)
in
mov
adc
repnz
sub
pop
mov
push
pop
add
add
jl
and
sbb
mov
cmp
cmps
push
clc
pop
jmp
dec
dec
add
xchg
adc
(bad)
(bad)
xor
in
(bad)
sbb
or
push
push
push
push
in
inc
in
or
pop
push
adc
retf
mov
and
adc
xchg
add
mov
clc
inc
dec
ja
inc
in
and
je
xchg
loopne
daa
cmp
mov
and
mov
cmp
cwde
aam
test
call
add
jb
mov
add
or
ss
xor
stos
enter
(bad)
leave
cmp
pop
jnp
adc
movs
inc
or
rcr
mov
push
ret
mov
jnp
mov
or
dec
dec
or
sbb
lods
pop
ja
xor
sbb
jge
mov
push
shl
sbb
jns
push
sbb
cmp
outs
and
xor
sub
pop
test
cwde
sbb
scas
div
mov
add
adc
dec
sub
add
mov
scas
(bad)
and
adc
or
and
iret
out
xor
pop
xchg
jo
push
push
sub
fcmovu
add
sub
adc
pop
cli
mov
add
cmp
or
cmp
mov
or
add
ret
jmp
cwde
clc
add
mov
inc
not
jg
daa
cmp
ja
jmp
jno
cmp
sbb
mov
jno
rcr
adc
cwde
inc
jae
adc
or
(bad)
add
loope
adc
adc
dec
xor
mov
inc
mov
push
sar
jae
sub
push
add
fild
sbb
cmp
pop
rcr
pop
(bad)
sbb
js
mov
adc
ja
out
loopne
scas
stos
add
inc
fsubr
mov
loope
push
push
add
(bad)
inc
or
adc
mov
jne
adc
dec
call
or
pop
add
push
add
xchg
sub
outs
jl
fstp
shl
mov
cli
or
mov
sbb
cld
xchg
loope
jge
jge
add
add
std
fisubr
pop
dec
aaa
shl
inc
add
lock
sbb
sbb
sbb
xchg
je
outs
jl
sub
inc
int3
mov
mul
jge
add
fs
sub
cmp
sahf
and
cmp
fsub
add
jge
lea
addr16
arpl
loopne
inc
cwde
cli
or
inc
inc
(bad)
mov
mov
(bad)
fucomp
or
add
push
sub
sub
ja
add
add
dec
pusha
add
pop
push
rcl
int
nop
lods
adc
cli
inc
push
cmp
lods
mov
add
popf
pop
in
into
or
clc
js
adc
lahf
or
inc
cmp
es
pop
or
or
mov
jp
pop
adc
xor
push
shl
ror
cmp
and
inc
adc
jge
add
imul
loope
pop
xor
cmp
int3
mov
or
shr
ret
outs
rol
cmp
inc
mov
adc
lock
and
cld
cmp
jg
pusha
and
les
or
int3
punpcklbw
ins
xor
or
jmp
clc
lea
push
pop
push
mov
test
mov
rcr
adc
stc
or
adc
adc
and
push
mov
xor
cmp
(bad)
fidiv
je
pop
pushf
sti
add
push
push
push
(bad)
add
loope
mov
xor
sub
add
mov
cmp
push
stos
cmp
out
call
cdq
xchg
sahf
loopne
push
add
in
shl
mov
jns
lods
ds
dec
xor
mov
xchg
dec
ret
pop
es
daa
add
dec
shl
mov
(bad)
pop
sub
fcomp
add
xor
jle
mov
into
jae
sar
orps
pop
sar
dec
add
push
or
test
test
mov
add
inc
hlt
mov
push
push
cmp
push
cmp
ror
arpl
or
into
add
shl
sub
sub
jmp
loopne
jl
xchg
mov
nop
aas
mov
mov
sub
(bad)
sub
shl
push
or
stc
push
test
int
pop
jbe
add
adc
add
cmp
add
cmp
out
mov
cmp
or
push
xchg
das
ds
retf
jle
cmp
(bad)
pop
cli
add
add
mov
inc
neg
inc
or
pop
xor
clc
cmp
loopne
add
or
repz
fmul
fimul
inc
push
and
pusha
push
adc
mov
sub
sub
xchg
test
retf
dec
dec
ror
pop
adc
out
ret
mov
mov
repz
sbb
push
sbb
jmp
es
add
sbb
push
sub
push
sbb
ja
sbb
dec
adc
adc
push
call
dec
sub
or
dec
sub
inc
jl
sbb
pop
sub
(bad)
sti
test
push
and
dec
into
push
adc
mov
fwait
jecxz
dec
add
mov
data16
mov
ins
push
rol
jmp
xlat
data16
xchg
pop
sbb
add
xchg
test
sahf
add
cmp
adc
mov
clc
out
div
ins
fidiv
or
sub
stos
inc
push
or
inc
leave
add
add
inc
repz
cmps
inc
hlt
je
add
xor
pop
jmp
outs
ror
jb
pop
fmulp
mov
xchg
clc
pop
sbb
pop
pop
sbb
retf
sbb
add
es
adc
sbb
pop
add
jmp
mov
jge
cmp
fisub
dec
push
call
push
sub
jmp
sub
add
ror
enter
or
stc
sahf
imul
or
push
cmp
mov
mov
or
mov
cli
mov
add
xor
inc
icebp
fadd
adc
dec
add
sbb
icebp
sub
push
or
fwait
shl
adc
push
push
mov
pusha
jo
fs
sbb
fsub
inc
mov
add
sahf
cmp
ret
jge
inc
pop
rcl
sbb
xchg
rcr
popa
push
ror
or
hlt
sbb
lock
adc
mov
ret
into
sbb
jns
xchg
sub
mov
mov
pusha
loop
sbb
(bad)
mov
dec
ins
jne
ret
imul
xor
out
mov
adc
jmp
inc
xchg
add
mov
push
fs
mov
(bad)
stos
test
out
xchg
or
adc
sahf
dec
inc
sbb
cmps
mov
dec
add
nop
adc
or
pop
push
add
or
loope
sahf
pop
cmovo
fimul
xchg
xchg
out
test
das
lods
adc
mov
pop
xchg
mov
lahf
xor
fs
dec
push
je
mov
rcr
xchg
ds
xor
iret
and
push
and
movs
or
mov
mov
add
test
xlat
mov
xor
fist
movs
ret
pop
pusha
imul
push
out
add
jno
test
or
les
retf
adc
test
jle
retf
cwde
mov
sbb
push
sbb
mov
adc
mov
add
pop
sbb
push
out
js
clc
dec
mov
pop
sbb
cli
sub
pop
push
outs
adc
jl
jle
hlt
push
add
aas
inc
cmp
mov
inc
sub
call
jo
inc
out
push
lahf
cs
aas
or
daa
ret
jo
lea
call
iret
dec
cdq
mov
inc
adc
call
sbb
ret
jb
mov
pop
and
cmp
(bad)
pop
pop
jmp
pushfw
mov
test
sub
xor
add
mov
sbb
mov
pop
push
inc
push
sub
mov
jmp
push
inc
xchg
push
ret
lea
mov
dec
jae
pop
add
sub
xchg
ss
pop
(bad)
pop
cmp
popf
xchg
aaa
mov
sahf
adc
imul
mov
xchg
test
rcl
fld
stos
mov
cmovs
inc
ins
or
lock
pop
ret
movs
xchg
xchg
ret
outs
faddp
xlat
and
add
out
add
cmp
dec
loopne
cmp
push
inc
inc
pop
scas
data16
and
xchg
pop
cmps
sub
push
cmp
or
dec
test
add
dec
ret
and
and
dec
shr
ret
xor
push
or
sar
pop
or
push
dec
rcr
xor
test
push
and
jae
jae
cli
das
outs
or
jg
lea
test
mov
push
das
xchg
into
mov
inc
jmp
cwde
sub
fbstp
adc
shl
dec
push
rol
cmp
in
cmps
or
repz
jmp
sti
push
adc
push
xor
xchg
pop
adc
pop
xchg
ret
lea
or
or
scas
sbb
fldenv
xor
outs
pop
fcom
or
cwde
mov
inc
sbb
push
xor
loope
and
pop
ret
adc
and
dec
popa
mov
xchg
clc
ret
mov
dec
adc
mov
or
arpl
imul
adc
retf
aad
outs
fcmovnu
pop
mov
dec
jle
mov
mov
dec
xor
loop
dec
inc
jb
cmps
adc
lahf
scas
jg
jmp
push
cmp
in
ja
sti
clc
test
imul
xor
jmp
mov
fiadd
jmp
or
adc
xchg
add
jne
cmp
inc
xor
shl
jns
sahf
loopne
jae
es
mov
pop
mov
add
xor
pop
mov
inc
fidivr
add
call
sbb
fwait
dec
shr
clc
xor
rol
jg
jle
jg
cs
add
push
adc
inc
outs
int
sbb
dec
mov
and
inc
mov
dec
inc
out
dec
loopne
shl
aaa
or
or
inc
mov
call
lods
add
mov
inc
or
movs
jmp
pop
add
shr
test
mov
push
add
adc
mov
sub
mov
mov
cmp
adc
pop
xor
pop
fistp
sub
cmps
leave
fcmovb
dec
pop
adc
pop
add
dec
rcr
push
mov
inc
and
adc
adc
sub
or
or
or
outs
pop
sub
and
or
jno
fdiv
daa
outs
sub
add
adc
inc
sar
and
ror
add
in
movs
cmp
xor
xchg
mov
and
std
add
lahf
jno
push
sbb
mov
push
mov
pop
(bad)
mov
sub
add
ins
pop
add
sbb
dec
dec
retf
adc
cli
pop
sub
fadd
xor
mov
pusha
mov
cmp
jbe
mov
sub
push
push
stos
mov
sahf
arpl
cmp
je
retf
push
add
push
stos
jbe
push
add
test
dec
sub
mov
(bad)
cli
pop
int3
add
sbb
(bad)
in
call
mov
(bad)
sbb
or
shl
push
inc
fimul
or
push
pop
xchg
aam
mov
cmp
ins
inc
inc
and
jg
xor
dec
adc
cli
mov
enter
(bad)
ficomp
test
sbb
retf
and
adc
inc
adc
ds
xchg
mov
add
inc
mov
sbb
or
test
(bad)
mov
jl
pop
imul
jl
mov
lods
or
jmp
nop
sbb
clc
dec
pop
mov
movs
fistp
mov
call
mov
or
(bad)
xchg
cmc
or
sbb
dec
inc
inc
mov
pop
dec
add
sub
pop
xchg
mov
sub
or
enter
lods
or
xor
dec
ja
pop
sbb
sti
push
dec
mov
fcmovnb
xor
iret
pop
push
pop
mov
test
mov
pop
and
inc
or
push
mov
fmul
in
cmps
ret
xchg
mov
cmp
xor
inc
jecxz
jo
dec
mov
sahf
push
call
pop
ds
or
(bad)
fidivr
or
jo
mov
adc
sub
loop
mov
mov
adc
or
mov
push
add
and
mov
or
mov
cld
xchg
mov
or
arpl
(bad)
dec
mov
inc
and
mov
push
in
cmps
(bad)
lods
retf
ret
add
ins
mov
jl
or
repnz
mov
mov
loope
test
xchg
(bad)
or
mov
mov
loop
in
fdivr
cli
jle
add
jo
rcl
cdq
test
dec
and
mul
mov
inc
push
cmc
inc
add
cs
mov
scas
or
inc
in
test
add
or
jbe
pop
cdq
cmp
popf
scas
dec
ret
mov
fbstp
je
add
pop
es
pop
cdq
shr
mov
fninit
and
data16
push
mov
cmp
arpl
jecxz
jp
arpl
in
cmc
mov
cmp
pop
aas
pop
lea
jle
loopne
pop
add
and
sub
inc
mov
xchg
sbb
ins
lea
jl
shr
dec
das
rcl
nop
not
fdiv
xor
xchg
test
dec
pushf
lock
xchg
sbb
push
xor
push
aam
shr
mov
push
shl
cmp
sub
sub
mov
xor
ja
dec
push
ds
fcmovnbe
ds
add
cmp
call
mov
cmps
popf
subps
xchg
ds
jae
adc
pop
dec
mul
bnd
sub
mov
data16
pop
(bad)
add
cmp
pop
and
add
not
add
repnz
dec
shl
inc
test
data16
retf
jle
fld
xchg
or
add
adc
cmp
cmps
adc
xchg
ret
div
iret
fmul
and
sub
ins
sbb
imul
add
test
iret
pop
(bad)
cmp
add
test
test
int
adc
push
pusha
mov
shl
in
icebp
retf
xchg
(bad)
jecxz
add
nop
cmp
imul
sub
cld
nop
add
pop
cld
sbb
xchg
dec
mov
loopne
adc
cwde
or
adc
movs
imul
push
or
fdivr
push
in
sbb
adc
sub
in
out
shl
mov
test
cmp
outs
push
mov
shl
or
aam
shl
fcomp
cmp
fisub
div
add
call
jbe
lock
push
stos
not
loopne
adc
and
pop
push
sbb
and
and
mov
sahf
pop
loope
test
xchg
add
cmp
(bad)
retf
add
or
sbb
cmp
jecxz
mov
shl
jnp
call
mov
xor
sub
mov
(bad)
xor
add
push
popa
xor
add
scas
test
ss
rol
pop
in
scas
mov
sbb
into
fs
rcr
cmp
or
sar
adc
jl
retf
mov
jl
sbb
add
ret
mov
movaps
bound
mov
mov
xchg
cmc
rol
(bad)
cmp
add
es
or
cmp
test
adc
retf
mov
cmc
sbb
push
cmp
push
jo
and
mov
nop
add
lock
fdiv
hlt
(bad)
pop
pop
jmp
dec
add
cmp
xchg
inc
jmp
and
shr
jmp
idiv
daa
add
outs
mov
mov
jp
mov
gs
xchg
adc
ficom
test
popa
push
sub
push
adc
rol
ret
pop
retf
sbb
cmp
fdivp
xchg
push
dec
add
ss
add
jb
ins
and
loopne
add
in
or
pop
pop
and
jp
imul
pop
jmp
cli
in
stc
dec
pusha
test
in
cmp
icebp
and
in
leave
shr
jnp
or
scas
push
sar
jmp
enter
adc
inc
jp
cmp
aam
shl
fcomp
mov
mov
sub
push
add
xchg
dec
movlps
jno
mov
outs
loope
or
mov
cmp
out
lahf
movs
daa
fiadd
pop
xor
inc
test
sbb
sbb
and
cmp
movs
mov
dec
cmps
add
add
mov
aam
add
push
sub
adc
movs
xchg
fidivr
int
fs
or
imul
pop
nop
loopne
push
jmp
mov
add
inc
sub
test
pushf
xchg
sub
dec
dec
add
push
mov
lods
inc
pusha
ret
xchg
or
pop
pop
rol
lahf
or
inc
in
sbb
call
or
ds
cmps
out
(bad)
jno
push
add
stc
loop
dec
stc
scas
push
add
add
cmps
sbb
or
cmp
mov
sub
add
push
mov
or
mov
adc
and
xor
jmp
inc
or
ror
push
or
pusha
aas
add
mov
xor
mov
in
fld
xor
out
movs
fcmovbe
fcom
dec
fdivr
sub
dec
add
push
mov
ret
test
jg
loop
add
push
or
cmp
adc
jmp
lahf
push
dec
test
pop
push
sub
lea
jno
repnz
cmp
or
aam
sbb
adc
hlt
out
xor
aam
fdiv
rcl
(bad)
pop
pop
fcmovu
jae
dec
fcom
retf
jl
inc
mov
mov
(bad)
push
xchg
jmp
outs
mov
mov
sar
pop
ror
mov
adc
or
xchg
fdiv
shl
mov
rol
pop
sbb
inc
mov
inc
sahf
cs
dec
loopne
add
push
sbb
pop
dec
cmp
or
and
pop
push
push
jne
adc
cmp
jmp
xlat
rol
jae
push
movs
jp
popf
inc
jnp
xor
arpl
cmps
gs
and
mov
dec
stos
xor
(bad)
and
call
push
or
(bad)
daa
loopne
fist
xchg
fistp
push
call
pop
pop
(bad)
xor
adc
push
push
lock
mov
aas
jbe
mov
adc
cmp
inc
inc
push
mov
enter
dec
out
dec
dec
rcl
pusha
sbb
jne
adc
fnstcw
es
jmp
and
adc
lock
cmp
push
sbb
out
dec
gs
add
cmp
jae
outs
daa
or
es
fs
push
xor
and
test
retf
rol
addps
mov
cli
cmp
cwde
je
pop
imul
push
addr16
or
or
add
ins
scas
inc
pusha
push
pop
pop
aas
test
add
pop
push
push
stos
loope
(bad)
adc
shl
dec
dec
fild
dec
push
loope
(bad)
jmp
add
sbb
xor
xchg
mov
shr
pusha
cmp
das
ret
cmp
pcmpgtd
dec
dec
pusha
mov
mov
jmp
push
push
imul
sub
test
add
xor
dec
or
test
mov
leave
test
mov
mov
jp
in
hlt
xchg
jecxz
xor
xor
sbb
in
xchg
inc
xchg
mov
inc
out
or
(bad)
ret
jmp
(bad)
out
add
inc
ds
mov
and
retf
or
sbb
pop
retf
sub
lahf
mov
add
or
inc
inc
dec
inc
lea
out
jne
cmp
gs
and
sbb
fimul
add
out
add
mov
add
inc
pushf
add
adc
jae
mov
imul
xchg
cmp
mov
and
and
mov
cmc
ins
and
sub
mov
cmps
add
jbe
ja
push
adc
jnp
jmp
inc
ds
jmp
xor
pusha
mov
mov
rcr
stc
xor
out
fadd
dec
xchg
aam
push
pop
xchg
xlat
push
cld
in
and
ficom
mov
rol
jnp
je
sbb
pop
or
dec
cwde
dec
sbb
(bad)
push
adc
jno
enter
mov
and
and
fmul
jl
mov
cmc
rol
call
add
pop
(bad)
int
stc
cmps
mov
jno
mov
sub
cli
push
ss
and
(bad)
ja
push
sbb
inc
jmp
jp
cmp
mov
and
ds
inc
call
pop
pop
xchg
imul
mov
inc
outs
mov
add
sbb
and
jmp
pop
pop
inc
fadd
pop
es
inc
adc
into
ss
jl
icebp
add
dec
adc
jo
call
mov
test
jmp
add
mov
push
xchg
lock
(bad)
test
push
(bad)
loopne
push
mov
mov
xchg
add
jo
ss
je
ins
cmp
inc
xor
lock
mov
xor
sub
test
or
sub
inc
fcom
sbb
xor
cmps
xor
fsub
jecxz
pop
add
mov
ins
cvtdq2ps
cwde
inc
fucomip
sub
jnp
or
movs
(bad)
int3
rol
test
or
fcmovnu
scas
add
jmp
jmp
jae
cmc
out
cmps
int
fsub
ds
jbe
rcl
mov
cmps
mov
mov
sub
shr
rdpmc
mov
xchg
mov
int
pop
hlt
int3
rol
push
pusha
jne
xchg
push
mov
(bad)
cs
lods
or
and
sbb
and
push
ret
cmp
dec
jbe
inc
cs
nop
std
xchg
push
sub
test
out
ror
shl
stos
test
das
fdivr
adc
xchg
push
add
inc
push
and
shr
movzx
rcl
add
sbb
cmp
pop
inc
adc
inc
push
into
adc
push
push
sub
ins
and
mov
rcr
mov
pop
inc
push
ret
lods
or
loope
pop
sti
movs
jge
add
rep
cmp
jbe
push
and
or
sbb
cmp
fidivr
add
adc
out
pop
movs
loop
dec
sbb
jbe
loopne
adc
imul
(bad)
sbb
nop
and
mov
call
in
lds
adc
test
ret
mov
dec
add
and
cmp
sbb
int3
jo
adc
pop
(bad)
scas
adc
rol
stos
push
pop
(bad)
fld
test
in
jne
jnp
sbb
pop
ins
xlat
jo
pop
imul
sbb
sbb
fisubr
or
pop
xor
jge
mov
inc
xor
rcl
mov
sbb
push
pop
add
rol
sub
jg
mov
mov
and
xor
mov
or
mov
jmp
out
retf
jge
add
mov
lods
add
mov
adc
push
push
xchg
pusha
test
sar
jae
pop
xchg
(bad)
push
in
pop
mov
test
jns
rcl
cld
jmp
or
fisub
dec
cld
add
js
sub
ins
test
mov
cmp
loop
sbb
outs
push
loopne
dec
loope
lahf
mov
xor
sub
push
lock
sub
dec
inc
cmp
lock
mov
(bad)
jae
ror
or
xor
pop
mov
and
(bad)
xor
mov
jle
add
jg
jle
add
enter
stos
enter
cmp
push
mov
inc
cmp
ja
push
mov
cmp
xor
fld
cmp
(bad)
cmp
pop
jmp
aas
retf
inc
xchg
mov
test
pop
hlt
(bad)
cmp
jbe
and
mov
mov
add
adc
mov
adc
sti
cld
push
sub
push
push
adc
frstor
cmps
push
cmp
mov
and
pop
loope
sbb
add
dec
xor
sbb
scas
into
enter
pusha
cmp
jle
push
adc
or
lea
sahf
adc
std
hlt
(bad)
mov
(bad)
and
test
inc
mov
and
cld
add
dec
xor
push
mov
fnsave
or
bound
stos
or
xor
mov
adc
leave
(bad)
pop
nop
fcmovnb
inc
imul
push
stos
xchg
xchg
les
js
mov
fisttp
pop
add
add
inc
pop
aam
or
(bad)
sbb
mov
jl
mov
(bad)
xor
hlt
jb
jg
add
cmp
dec
mov
lea
retf
ss
movs
sub
add
add
enter
adc
push
shr
pop
cmp
xchg
dec
xchg
or
lds
clc
rcr
adc
clc
sbb
loopne
push
and
mov
in
jb
adc
add
add
sub
dec
mov
(bad)
sbb
mov
mov
nop
push
mov
jo
data16
jmp
sub
push
in
jae
dec
or
fs
mov
je
in
sbb
push
clc
fcom
mov
mov
push
test
pop
push
shl
xchg
and
ror
push
push
inc
popf
xor
fisubr
fwait
add
fwait
pop
cmp
dec
loop
fwait
push
adc
add
xor
push
fs
les
adc
add
pop
loop
mov
dec
clc
inc
and
ret
add
mov
inc
dec
popf
xor
mov
push
xor
inc
icebp
clc
dec
clc
cmp
pop
cmp
inc
push
aam
mov
mov
xor
xchg
clc
xchg
pop
add
out
cdq
mov
mov
adc
mov
lods
xchg
mov
push
push
fidivr
and
movs
sub
mov
push
jo
or
data16
adc
and
les
sub
(bad)
push
(bad)
xor
mov
dec
jecxz
push
sub
adc
pop
movs
int3
push
sar
add
shl
jmp
adc
shr
fs
mov
push
jmp
inc
inc
retf
aam
mov
add
sub
ret
jo
jbe
push
dec
cli
adc
rol
adc
and
add
in
lea
dec
sbb
lods
mov
test
adc
cmps
add
pop
or
sbb
sub
loopne
mov
xor
mov
sbb
inc
mov
push
sub
shl
dec
and
dec
aam
retf
lods
stos
ss
test
lahf
inc
cmp
ret
push
inc
mov
and
sahf
adc
ins
clc
cmp
adc
and
mov
enter
mov
loop
retf
jne
mov
sbb
adc
mov
les
nop
je
inc
jne
cmp
cs
cmp
jp
push
push
xchg
cmp
jle
mov
nop
add
mov
lock
xor
lea
pop
ficom
std
call
xor
xlat
add
in
sbb
jo
jbe
mov
loopne
lods
xor
push
enter
push
fldcw
cmp
xchg
mov
push
sar
add
scas
iret
and
xchg
outs
mov
(bad)
out
aam
cdq
outs
cwde
mov
jbe
adc
icebp
jp
mov
dec
fs
aaa
xchg
cwde
fs
or
sahf
inc
test
cmp
lea
mov
das
out
int3
lea
test
je
sub
mov
add
hlt
ds
imul
push
mov
data16
mov
loopne
cmp
mov
sti
push
mov
mov
pop
mov
and
out
(bad)
mov
int3
ss
sahf
mov
stos
mov
loop
mov
fiadd
cmps
sub
nop
add
mov
aad
mov
loopne
mov
xor
mov
pop
push
xor
mul
jmp
inc
je
leave
dec
jns
jecxz
xor
adc
mov
pop
cmp
inc
popa
mov
outs
inc
xchg
adc
or
test
(bad)
cmp
nop
mov
lea
dec
xor
xor
push
mov
push
add
cmp
xchg
pop
movs
and
sahf
dec
inc
(bad)
cli
inc
mov
mov
or
sub
add
and
push
lods
cmps
xchg
scas
gs
movs
imul
sub
sbb
mov
retf
xor
rol
xor
cmp
dec
pop
fadd
ret
cli
add
push
mov
xchg
dec
and
sub
fiadd
xor
jne
out
add
cs
inc
or
ror
add
mov
mov
sti
xor
sbb
jno
mov
icebp
add
add
movs
or
pop
or
or
cmp
fwait
lods
add
call
add
fdiv
cmp
test
bound
jp
pop
stos
add
xchg
fs
movs
mov
cld
jge
mov
pop
mov
ror
cmp
add
push
call
and
jge
add
adc
std
mov
inc
ret
cwde
fmul
cmp
xchg
and
adc
leave
add
fstp
xor
mov
pop
inc
push
jmp
xchg
je
or
dec
adc
push
lock
jo
and
xor
loop
les
xchg
pop
enter
push
or
in
js
iret
sub
jo
out
addr16
aad
je
adc
enter
jnp
rcr
icebp
cmp
jle
sub
js
xchg
and
jb
add
into
dec
cld
dec
jp
(bad)
inc
add
cmp
jo
sbb
mov
sub
and
mov
cmp
jo
jnp
xchg
loop
xchg
cmp
jge
dec
ja
arpl
into
jns
or
in
add
pop
test
mov
jmp
mov
fld
and
(bad)
mov
mov
add
mov
pop
jbe
mov
nop
mov
mov
and
es
aaa
mov
sub
div
adc
sbb
dec
hlt
int3
stos
pop
xor
jl
rcl
jmp
push
jge
or
cmp
popf
ret
xor
enter
or
inc
add
sub
inc
jp
jle
out
jl
cmp
sub
xchg
std
push
xlat
inc
mov
inc
push
js
pop
mov
sub
dec
cmp
sti
aam
rcl
mov
hlt
pop
mov
sbb
loopne
in
sub
jp
dec
inc
add
mov
fidivr
dec
pusha
int3
sbb
mov
sub
add
jo
push
sbb
movs
push
inc
sub
jb
jno
jb
xor
inc
imul
or
jno
mov
shl
mov
mov
cmp
test
mov
sub
mov
stos
pop
cmp
or
dec
mov
enter
addr16
cmp
addr16
mov
dec
dec
test
mov
sub
movs
xchg
stos
mov
add
sub
iret
movs
mov
xor
push
ja
outs
push
inc
mov
push
add
mov
push
push
sub
jge
or
int
push
add
mov
sub
sub
mov
or
ins
loopne
jns
inc
in
dec
ret
cwde
pop
push
xlat
lods
push
mov
pop
stos
adc
xor
fisub
(bad)
retf
stos
jno
lock
jle
push
or
push
outs
cmp
jo
xor
pop
dec
mov
inc
jae
lods
aas
push
lea
sbb
retf
stos
dec
adc
pop
arpl
sbb
lea
cs
iret
xor
dec
push
jl
inc
xor
stos
mov
add
push
push
in
clc
out
fimul
or
and
cmp
mov
cwde
call
icebp
imul
scas
mov
enter
test
stc
(bad)
lods
movs
(bad)
and
ret
and
jmp
pushf
pop
bound
and
das
cmp
fimul
shl
js
scas
dec
inc
sbb
jns
ds
pop
add
inc
sub
call
mov
mov
mov
push
out
push
dec
mov
push
test
mov
(bad)
pop
cs
inc
icebp
inc
or
mov
jge
and
ror
cs
sub
mov
call
out
sbb
in
inc
in
fwait
cmp
mov
in
enter
xchg
push
movs
scas
sar
out
jae
push
aaa
enter
and
xchg
sbb
sub
clc
js
or
xor
addr16
rcr
add
mov
push
jl
dec
add
adc
or
cwde
dec
push
xchg
push
cli
sub
or
cmp
add
sbb
or
xlat
xchg
adc
xchg
inc
stos
push
call
xchg
add
div
push
dec
mov
stos
fdiv
mov
test
fs
leave
gs
mov
cmp
inc
cmp
pop
dec
add
bound
mov
mov
and
xchg
jge
stos
clc
mov
aam
xor
or
cwde
js
mov
scas
inc
add
dec
jne
xchg
inc
sub
js
lods
nop
lds
dec
lea
je
iret
sbb
dec
mov
sub
add
(bad)
es
push
out
test
pop
push
imul
push
fmul
enter
rdpmc
pop
mov
push
test
test
xor
xor
adc
cmp
cmp
ins
test
enter
enter
xor
out
xchg
test
mov
ins
inc
sar
outs
inc
xchg
ret
aam
or
(bad)
arpl
ds
and
imul
inc
dec
pusha
sub
dec
mov
inc
retf
adc
frstor
adc
loop
xchg
inc
mov
inc
ret
mov
inc
push
pop
rol
ds
jo
push
xchg
and
sbb
cli
jo
nop
icebp
dec
jle
push
ins
gs
mov
and
or
mov
movs
mov
jg
jmp
pop
jmp
adc
lea
jae
push
retf
not
push
jp
or
js
iret
fwait
xchg
and
(bad)
sbb
out
test
mov
adc
jo
dec
push
jae
and
sub
dec
sti
icebp
ins
cmp
adc
add
mov
xor
mov
jnp
mov
xchg
push
push
mov
push
or
sub
loopne
jno
jae
loopne
loop
add
xlat
repz
rol
pop
mov
js
inc
push
sub
(bad)
jae
push
lds
mov
mov
sub
mov
or
dec
ss
lock
repz
mov
sub
(bad)
mov
jbe
dec
dec
mov
push
adc
shl
mov
lock
push
cmp
in
rol
or
lods
inc
adc
or
cmps
mov
rol
daa
or
xor
int
rol
push
mov
add
lds
mov
fdivr
outs
xor
movs
jge
jmp
mov
and
push
(bad)
les
addr16
jl
ja
or
mov
cmp
xchg
mov
mov
dec
ja
cmp
jmp
(bad)
mov
jmp
mov
pop
rol
adc
mov
xor
ins
xor
mov
es
imul
out
ret
repnz
aam
pop
(bad)
sar
les
and
fs
inc
sbb
inc
or
jmp
push
mov
ror
push
pop
push
arpl
scas
lock
lock
jb
cmp
sahf
out
mov
outs
mov
mov
lods
cli
movs
fild
jmp
test
mov
cmp
clc
sbb
lahf
pop
fisttp
stos
xchg
jmp
xchg
fist
or
pop
pop
push
sbb
call
gs
mov
fcom
retf
sub
gs
cmc
xor
div
inc
retf
add
es
mov
std
inc
shl
xor
inc
pop
mov
sub
(bad)
and
adc
sbb
repz
loopne
add
lock
shl
leave
cmps
cdq
das
sbb
pop
pop
xor
sbb
push
popf
cmp
push
sahf
sti
add
mov
jnp
bound
in
inc
shl
jmp
pop
pop
pop
rcr
fwait
lea
adc
test
dec
and
enter
mov
push
cmp
dec
and
icebp
and
cmp
push
inc
ins
enter
xor
and
mov
(bad)
addr16
adc
cmp
cmp
add
(bad)
xchg
or
push
or
or
xor
hlt
adc
adc
jle
cwde
add
cmp
test
inc
inc
or
loope
rcl
sub
inc
add
mov
mov
jb
pop
ja
fs
xchg
sub
hlt
mov
scas
icebp
or
call
xchg
or
(bad)
(bad)
mov
cmp
ror
dec
adc
xchg
imul
in
cmp
inc
repnz
mov
mov
mov
(bad)
js
mov
gs
stos
inc
add
in
adc
jmp
inc
mov
int
mov
pop
inc
inc
jb
sbb
adc
rcl
or
sub
mov
nop
adc
out
sub
sti
jns
xor
shl
loopne
imul
test
fidivr
mov
mov
movs
jns
sbb
pop
nop
cld
sbb
inc
data16
xchg
rol
mov
pop
es
pushf
stos
daa
inc
cmp
pop
popf
sub
push
pop
nop
pop
test
add
jno
(bad)
(bad)
and
in
add
jmp
pop
lock
mov
stos
in
imul
scas
dec
mov
in
dec
jne
inc
nop
es
dec
inc
(bad)
push
lea
jle
or
push
pop
push
aad
sub
fxch
cs
shl
or
dec
outs
push
push
stos
adc
cdq
jns
mov
xchg
pop
adc
jo
cld
push
push
imul
mov
mov
inc
enter
pop
aas
mov
push
jg
out
mov
ss
inc
mov
shr
adc
mov
mov
jmp
hlt
xor
in
inc
adc
mov
jl
adc
cmp
repz
xchg
dec
xchg
inc
inc
in
jns
cmc
or
ret
inc
add
enter
dec
dec
add
(bad)
ret
or
adc
test
cmp
pop
dec
bound
xchg
and
je
(bad)
test
xchg
mov
(bad)
sub
adc
inc
cdq
lds
or
or
cmp
data16
pushf
fs
mov
jne
inc
xchg
(bad)
jl
pop
dec
addr16
outs
out
inc
push
adc
int3
out
les
rol
ss
and
xchg
pop
sti
inc
ins
jmp
into
add
push
lahf
lock
xchg
and
sub
addr16
rol
inc
add
imul
pop
xchg
clc
push
lea
pushf
xor
dec
sbb
cmp
cwde
and
jo
movs
sub
sub
add
cli
push
and
imul
int3
sbb
add
into
pop
cmps
xchg
sbb
pop
push
adc
sbb
mov
adc
or
add
mov
mov
and
cwde
dec
jmp
pop
pop
repnz
jge
inc
pop
mov
adc
xchg
test
add
sub
pop
mul
in
cmp
mov
jge
pop
cmps
inc
mov
loopne
stos
mov
data16
push
push
xchg
(bad)
xor
pop
push
pop
push
jne
aam
cwde
push
shl
mov
sbb
ret
xchg
icebp
pop
dec
clc
inc
pop
push
sub
es
pop
int
pop
outs
inc
mov
push
mov
adc
je
and
or
lods
adc
sbb
js
xor
jns
sub
punpckhwd
gs
xor
mov
test
in
arpl
inc
test
jg
or
iret
fmul
jmp
or
adc
call
pop
cli
xor
mov
call
cmp
inc
shl
sub
sub
push
cmp
push
adc
es
(bad)
jmp
xchg
rol
es
dec
fs
rol
aad
popa
push
adc
cmp
outs
or
imul
mov
lahf
movs
pop
jp
lea
inc
loope
mov
inc
push
xchg
(bad)
js
jmp
mov
adc
or
pop
push
mov
(bad)
xor
mov
inc
dec
xor
loope
out
xor
sbb
adc
push
rcl
cmp
cmps
cs
xor
add
inc
dec
ins
mov
push
(bad)
xchg
into
fldcw
nop
test
lahf
jo
sbb
pop
mov
xor
sub
pop
sbb
pop
cmp
fs
lock
in
sub
mov
cmp
dec
cli
sub
clc
mov
call
add
inc
jnp
rol
fild
inc
inc
add
ret
dec
mov
add
or
mov
xchg
inc
jp
pop
and
mov
and
or
add
cdq
cld
rol
lods
adc
addr16
xchg
push
inc
dec
add
or
xor
push
xchg
xor
sub
ror
popf
and
or
jp
and
cs
jae
cmp
inc
push
dec
cmps
inc
ficomp
aas
lock
sbb
inc
mov
mov
in
add
add
pop
aaa
dec
(bad)
or
mov
lock
inc
nop
sbb
fimul
and
jno
es
push
fld
xor
stos
pop
pop
lahf
xor
and
add
ins
mov
dec
leave
inc
lahf
sbb
sub
jl
push
mov
pop
pop
ret
lahf
dec
imul
nop
aaa
or
sbb
pop
clc
into
or
cmp
jle
ret
xor
cmp
rol
fidiv
(bad)
loope
shr
shl
test
call
mov
scas
sbb
call
bound
movs
movs
mov
mov
ret
pop
add
in
add
add
sbb
mov
push
repnz
fild
cwde
hlt
or
add
inc
adc
xchg
jl
add
pop
jb
adc
xchg
sbb
dec
or
lods
pop
jge
mov
add
cmp
jle
mov
adc
jg
mov
xor
add
sbb
inc
pop
cmp
add
xchg
dec
adc
sub
test
call
xor
pop
jo
(bad)
fadd
lock
adc
push
fnstsw
xchg
cld
icebp
jae
popa
test
stos
popa
lock
test
cwde
inc
push
sbb
clc
sbb
adc
and
pshufw
or
iret
dec
fmul
cmp
sbb
or
jmp
out
jp
lock
dec
push
or
pop
and
cwde
clc
add
aas
xchg
jns
push
pop
inc
cld
and
ret
add
test
jne
inc
xlat
mov
loope
and
cmp
inc
mov
or
and
dec
fnstcw
xchg
ins
mov
xchg
cmps
mov
mov
jmp
push
add
call
inc
sbb
cmp
inc
test
je
fisub
fwait
sbb
dec
add
and
mov
ja
test
pop
and
jmp
or
mov
aaa
test
aad
jo
and
or
(bad)
sahf
in
inc
mov
cli
test
lock
cmp
and
xchg
mov
push
xor
(bad)
sbb
fdiv
sub
popa
loope
call
cmp
ins
ret
push
aaa
int
lods
push
bnd
mov
shr
and
cmc
(bad)
mov
pop
or
xor
call
rcl
test
push
cmp
push
and
ror
mov
arpl
and
sub
xchg
dec
inc
arpl
div
add
cmp
xor
adc
push
(bad)
jbe
inc
push
cmp
pop
nop
je
dec
cmp
jbe
ror
pop
xlat
mov
or
dec
pusha
popa
cmp
call
(bad)
sub
mov
mov
pop
ret
pop
mov
movs
inc
cmp
lea
movs
dec
adc
add
fwait
(bad)
dec
push
arpl
loop
or
mov
test
out
neg
fadd
mov
js
and
inc
adc
mov
iret
pop
mov
sbb
mov
je
sbb
or
adc
mov
je
fnstcw
adc
mov
jb
mov
mov
call
sub
das
inc
sahf
sub
and
imul
jge
push
dec
pop
add
xor
add
cmp
je
push
(bad)
jmp
cmp
mov
es
rol
test
sbb
popf
in
xor
ret
sbb
xlat
cs
gs
arpl
adc
lahf
xchg
sub
xlat
fucomip
dec
adc
sbb
or
add
retf
mov
adc
lods
adc
adc
xchg
ins
div
lock
add
daa
jns
aaa
loop
cmps
xor
mov
add
mov
sbb
xchg
mov
aad
pop
retf
push
pop
pop
pop
and
or
push
cmp
dec
hlt
pop
adc
out
(bad)
out
adc
out
loopne
mov
push
jmp
xor
pop
and
inc
and
inc
mov
adc
enter
or
xchg
mov
add
test
jmp
adc
inc
sbb
inc
test
inc
mov
es
ror
inc
les
and
dec
lea
(bad)
fwait
cmp
mov
add
pusha
cwde
mov
push
fidivr
hlt
pop
cmp
ja
out
or
and
dec
add
outs
mov
out
cdq
cmps
pop
inc
jns
mov
push
ret
add
stc
jp
mov
dec
add
test
cmp
cs
idiv
daa
and
sbb
xchg
xchg
lods
sbb
jne
pusha
retf
push
mov
add
pop
sub
or
sub
push
mov
mov
or
mov
call
or
mov
popf
je
sub
push
xor
mov
push
data16
lods
push
sbb
in
ins
sub
xor
fcomp
test
pop
add
pop
(bad)
sub
inc
sbb
xchg
push
jg
push
sbb
push
mov
outs
out
daa
inc
fwait
dec
fdivr
ins
inc
add
fimul
mov
lods
add
loopne
mov
push
mov
and
ror
pop
data16
push
test
add
call
add
movs
mov
jo
jl
adc
cmp
mov
fbld
inc
sbb
cmp
push
cmp
push
sbb
or
and
dec
stos
ror
sti
mov
in
stos
pop
sbb
mov
xchg
leave
push
sbb
xchg
fs
(bad)
cmovge
leave
add
or
mov
(bad)
fwait
add
xchg
popa
mov
jno
add
add
xor
jnp
enter
out
mov
xchg
cmp
test
fist
inc
add
inc
jmp
test
sub
icebp
inc
mov
ins
jmp
jne
and
sub
xlat
fwait
movs
movs
push
and
dec
mov
mov
fsubr
or
int
mov
fnstenv
mov
adc
call
mov
fisubr
test
arpl
mov
lahf
hlt
push
xor
pop
hlt
push
mov
fs
movs
cmp
aaa
mov
pop
add
test
jecxz
xchg
out
mov
add
push
jge
pop
fcom
jecxz
dec
mov
mov
rcr
repnz
pusha
jmp
mov
push
push
mov
add
adc
jb
fiadd
fist
dec
mov
mov
ror
in
adc
add
fiadd
call
cli
jmp
test
add
lock
jmp
cmp
div
test
adc
movs
scas
xchg
sub
dec
cmp
push
pusha
jmp
lea
and
scas
popf
popa
shr
xor
cmp
pop
sbb
push
mov
daa
movs
dec
mov
sbb
ret
cmc
add
sbb
mov
mov
cmp
ret
cwde
retf
ja
cmc
push
ins
pop
mov
fs
(bad)
push
mov
movs
cmp
sbb
std
cmp
mov
mov
clc
psadbw
add
and
jmp
inc
xor
inc
sbb
and
sbb
mov
sub
test
(bad)
ins
push
sbb
(bad)
add
fist
out
lea
dec
je
lods
cmp
lds
push
mov
test
jnp
jl
rcl
sub
adc
add
pop
jmp
mov
push
repz
cmp
ja
or
jmp
push
or
and
adc
or
lods
adc
jmp
pop
push
mov
sar
adc
popa
cmp
(bad)
enter
adc
pop
in
retf
mov
xchg
dec
dec
xchg
dec
or
into
nop
xchg
outs
push
ret
lahf
cmp
sti
push
sbb
not
jp
or
jnp
pop
loopne
and
jnp
jnp
jle
dec
dec
test
jmp
stc
das
mov
(bad)
loopne
and
bound
xor
push
dec
fld
mov
push
dec
xor
add
add
arpl
mov
sbb
lea
cmps
push
sub
adc
nop
out
imul
adc
cmp
xchg
(bad)
cmps
jne
dec
aaa
and
or
retf
inc
mov
cmp
xchg
xor
test
mov
or
cmp
outs
adc
dec
push
or
in
loop
adc
pop
push
push
out
add
add
mov
dec
push
rol
add
pop
sbb
dec
jnp
add
inc
xor
out
dec
xor
movs
or
je
xor
sbb
mov
cmp
sub
xor
imul
fsub
mov
loopne
jg
jg
or
xchg
fmul
and
(bad)
sub
push
scas
in
sbb
nop
jne
sbb
adc
pop
add
lods
jmp
ret
fisttp
push
test
mov
fcomi
mov
loope
js
leave
add
adc
push
mul
repz
stos
adc
or
and
mov
out
clc
pop
shl
xor
adc
and
dec
inc
sub
adc
gs
xor
sub
add
enter
dec
test
ret
add
test
push
mov
(bad)
dec
jmp
xchg
fisub
mov
mov
adc
ds
dec
or
mov
sar
xor
or
sahf
push
adc
jmp
mov
mov
ja
add
or
cmp
jge
bound
or
inc
pusha
lea
adc
pusha
mov
cs
inc
adc
or
cmp
or
cmp
daa
sub
add
fmul
loopne
adc
rcl
ds
add
test
jae
sbb
mov
and
and
scas
fld
shl
les
xor
inc
sahf
(bad)
cmp
xchg
aam
pop
not
pop
les
add
(bad)
mov
xchg
xchg
fwait
mov
lds
test
test
jmp
movs
and
popf
dec
popa
or
push
adc
mov
jecxz
xchg
call
mov
loope
inc
js
xchg
inc
ffreep
xchg
loopne
jl
mov
mov
imul
cs
imul
lods
or
lock
arpl
push
dec
fld1
jg
and
and
add
push
inc
mov
cwde
add
pop
vmovhpd
sub
(bad)
daa
and
daa
and
ins
adc
ficom
or
adc
pop
scas
lods
jbe
shl
dec
sub
repnz
mov
sbb
stc
adc
shr
jmp
dec
add
or
sub
dec
mov
push
and
sbb
pop
ret
xor
and
dec
xor
sub
int
(bad)
pop
adc
sbb
iret
push
ror
jmp
inc
pusha
sbb
lock
pop
and
lods
or
cmp
in
ror
pop
cmp
jo
add
and
vpmacsdql
jl
adc
adc
pop
fdivr
pop
inc
ins
push
cmc
cmp
in
sbb
sub
sub
inc
cdq
add
adc
ret
adc
cmps
jae
mov
xchg
dec
ins
fisub
sub
inc
test
jne
and
mov
bound
arpl
cmp
mov
xchg
test
clc
cmp
push
adc
mov
xchg
mov
mov
cmps
xor
pusha
adc
push
or
mov
movs
leave
ret
(bad)
adc
dec
xor
dec
sbb
pop
(bad)
and
fst
cmp
fldcw
test
(bad)
mov
rcl
ret
cmp
retf
sub
xor
pop
jne
xchg
adc
sahf
cmp
add
push
mov
pop
ss
xor
inc
cwde
bound
push
pushf
fcomp
and
movs
in
add
ret
ja
lock
clc
mov
inc
popa
test
les
ret
or
mov
adc
mov
inc
cli
arpl
sahf
ret
sbb
rcr
fmul
or
je
or
mov
jae
pmulhuw
cs
adc
imul
lods
push
mov
mov
cs
std
fs
push
jle
sbb
inc
sub
shl
lds
aad
xchg
xchg
aas
test
pop
mov
mul
es
ja
xor
xchg
pop
outs
or
fwait
or
(bad)
sbb
cmp
xchg
jg
mov
aas
or
or
add
jmp
jle
xchg
inc
mov
inc
sbb
and
cwd
jne
test
je
icebp
mov
jae
jae
aad
xchg
inc
cmps
sub
or
pusha
gs
daa
add
loopne
cmp
clc
gs
iret
or
adc
pop
mov
aam
aaa
sub
push
dec
outs
rcr
or
or
jo
inc
push
dec
mov
mov
xor
mov
pushf
push
mov
cmp
xchg
int3
pop
rcr
sbb
xchg
retf
mov
or
pop
inc
adc
mov
aam
pop
inc
and
sub
sub
ja
jmp
push
push
pop
push
push
push
(bad)
dec
cmp
ror
lock
and
and
sub
cli
add
push
rol
inc
pop
or
pop
push
div
loope
fnstcw
mov
cmps
push
push
div
sahf
push
stc
xchg
stos
dec
clc
sub
jmp
add
push
push
mov
rcr
and
dec
cld
ret
mov
mov
shl
xor
test
mov
adc
jl
pop
inc
jmp
jnp
lock
das
push
jne
sbb
inc
push
sar
hlt
sbb
lea
mov
mov
daa
cli
xor
outs
shl
add
imul
adc
sbb
and
push
stos
lahf
shr
lods
mov
sbb
push
sbb
xchg
mov
or
test
js
loop
push
add
jge
in
or
popa
or
in
push
sub
adc
xchg
or
pop
add
lods
(bad)
xchg
mov
mov
fild
mov
cld
cmp
out
jmp
push
push
inc
jmp
je
dec
add
shr
cmp
call
push
mov
or
(bad)
dec
add
dec
dec
lods
add
or
jo
test
cmp
push
out
mov
mov
or
xor
ins
or
push
push
add
popa
add
out
dec
aam
pop
lea
js
jl
mov
sbb
aam
scas
inc
adc
fiadd
cmp
movs
shr
fild
dec
or
mov
mov
and
and
mov
xchg
outs
inc
fwait
adc
neg
pop
pop
loopne
inc
setg
dec
sar
dec
jg
xchg
lods
(bad)
imul
push
lds
jl
fiadd
leave
mov
or
shl
jbe
push
dec
in
xor
add
jg
fcomp
add
or
scas
ja
cs
daa
test
xor
xor
adc
lahf
and
retf
or
add
test
cmp
xchg
pop
or
aad
ss
jb
mov
call
inc
inc
add
hlt
(bad)
idiv
ret
cmp
test
jbe
adc
movs
adc
fwait
sub
dec
sub
or
fbstp
in
retf
iret
sbb
scas
sub
push
add
add
fcmove
hlt
dec
push
ret
mov
fsub
mov
mov
inc
and
into
xlat
lods
push
fwait
scas
in
sbb
cld
or
mov
sbb
dec
sbb
lea
sbb
lods
push
or
add
or
xchg
out
push
add
enter
xor
jns
pop
mov
xor
out
das
push
hlt
outs
dec
pop
out
mov
cmc
movsx
cdq
ret
imul
xor
push
aam
fwait
icebp
push
dec
mov
enter
adc
mov
dec
add
rcr
adc
push
mov
fsubrp
lods
push
pop
sbb
outs
test
mov
or
sbb
add
add
sbb
xor
push
out
or
jno
or
je
and
pop
sub
push
add
mov
push
or
sub
loop
sbb
std
lock
inc
pop
and
out
pop
fs
out
dec
cli
push
stc
iret
adc
adc
xchg
xor
xchg
dec
inc
sbb
dec
push
mov
test
idiv
test
add
ds
or
and
call
pop
xchg
cmp
mov
sub
mov
shl
sbb
cdq
or
xor
push
add
movups
or
test
je
xchg
pop
ret
mov
push
rcr
rcl
add
jecxz
xchg
cmp
push
cdq
push
imul
cmp
mov
jg
mov
xor
or
mov
pop
add
jmp
gs
mov
jmp
mov
add
sbb
test
popa
inc
stos
pusha
jo
inc
test
(bad)
mov
sub
(bad)
in
cmp
stos
pop
inc
inc
push
mov
sub
repnz
or
mov
pop
seto
pop
push
scas
add
sbb
es
ins
pop
loop
pop
and
adc
enter
push
and
call
add
xor
movs
pminub
sar
or
adc
rcr
xor
jle
data16
lods
call
loope
es
jecxz
adc
inc
js
sub
adc
das
sahf
aas
mov
mov
ds
mov
outs
jmp
or
pop
or
inc
lea
lock
mov
mov
shl
or
jp
sbb
jg
mov
xor
pushw
cmp
xchg
mov
inc
div
cdq
into
outs
fstp
cwde
lods
and
xor
mov
lds
loope
xchg
mov
sub
fwait
pop
or
mov
(bad)
jnp
cmps
add
neg
sbb
push
ss
loopne
dec
sbb
mov
push
sti
inc
xor
sub
push
dec
js
inc
inc
and
adc
cmc
(bad)
pop
push
adc
jl
add
dec
jo
or
adc
adc
or
or
popa
pop
bound
les
sbb
lahf
mov
push
(bad)
fbld
popa
mov
push
aam
dec
mov
add
test
int3
movs
pop
jmp
xchg
or
lock
push
adc
push
add
or
xor
lock
icebp
sbb
or
lahf
ret
mov
or
mov
jle
pop
sub
popf
adc
into
mov
mov
aaa
adc
dec
push
out
fwait
(bad)
rcl
call
dec
pop
rol
leave
dec
outs
jge
mov
retf
mov
lea
push
or
hlt
inc
outs
push
dec
mov
add
adc
mov
pusha
pop
cmp
aas
test
add
and
push
aaa
jbe
xor
stos
jle
and
add
cmc
(bad)
mov
jl
mov
imul
movaps
push
int
retf
xchg
and
add
pop
and
add
pushf
test
cmp
outs
dec
out
push
add
pop
adc
movs
ss
jbe
sbb
adc
imul
xchg
sub
add
shl
push
aad
test
xor
pop
shr
cdq
push
movups
enter
mov
push
adc
cmp
jle
mov
jmp
(bad)
ins
(bad)
cmp
pop
test
xor
sub
jne
jne
mov
movs
sbb
mov
mov
add
or
push
mov
ret
or
hlt
(bad)
xor
imul
(bad)
out
movs
and
cmp
sahf
mov
dec
sbb
pop
xchg
push
adc
sbb
mov
sub
sbb
mov
mov
dec
inc
add
mov
xor
jno
mov
adc
or
stc
inc
adc
push
mov
fs
cmps
int3
dec
scas
adc
add
jmp
add
or
push
add
xor
mov
(bad)
jmp
test
jne
mov
into
dec
push
lea
cs
fwait
ror
mov
fisub
or
dec
test
adc
adc
mov
jbe
jmp
xchg
bound
mov
pop
xchg
dec
fld
jne
fiadd
jb
nop
enter
mov
xchg
icebp
xchg
clc
cmps
mov
repz
bound
or
pop
bound
push
je
(bad)
iret
fs
sahf
jecxz
psubsb
dec
or
in
inc
movs
(bad)
or
and
jp
push
ret
sbb
push
ds
and
push
sub
jb
lods
in
rol
ss
dec
dec
mov
or
xor
iret
rcl
push
into
and
and
aas
nop
lock
and
cmc
xor
scas
pop
(bad)
clc
or
push
and
push
div
dec
or
sbb
dec
and
dec
push
fadd
adc
sbb
or
mov
and
pop
sbb
xor
add
add
nop
inc
add
(bad)
retf
test
mov
out
cmps
or
dec
ss
je
xor
push
pusha
(bad)
int
fisttp
sahf
hlt
push
mov
sar
inc
adc
sti
jge
pop
dec
inc
outs
sbb
sbb
pop
push
pop
out
in
repz
add
push
cwde
cmps
stc
xor
mov
(bad)
test
sahf
fdivr
cmp
mov
fnstcw
dec
sti
sahf
push
cmp
dec
jecxz
jb
pusha
out
repz
data16
fwait
int
jmp
cli
inc
mov
sti
push
int3
test
pop
(bad)
pop
(bad)
jns
push
es
data16
mov
add
add
xor
and
or
jno
fstp
mov
push
in
inc
mov
or
loope
dec
cmp
ficom
in
lahf
pop
jnp
call
push
cmps
pop
test
fwait
and
xor
imul
das
cwde
adc
push
lods
adc
push
sub
ins
enter
add
sbb
push
nop
push
stos
into
sbb
fldenv
out
pop
pop
outs
sbb
inc
sbb
lds
fld
mov
inc
add
(bad)
mov
mov
add
ins
pop
push
inc
pop
test
data16
mov
(bad)
lods
adc
xor
dec
and
adc
adc
push
jne
adc
pop
es
add
cmp
movs
pop
xchg
adc
add
sub
(bad)
push
arpl
lods
(bad)
jmp
sbb
(bad)
arpl
stc
xor
pushfw
cdq
or
or
hlt
mov
cmps
cmp
clc
ins
inc
pop
lds
jo
push
adc
clc
cmp
xor
push
daa
test
sbb
adc
and
ror
nop
nop
out
inc
pop
imul
arpl
mov
and
pop
dec
cmps
pop
mov
sbb
mov
adc
adc
jg
xchg
and
lods
lods
imul
out
or
and
std
push
mov
or
mov
cld
jo
shr
pop
cmp
jge
cmp
add
loopne
mov
xor
(bad)
adc
mov
cmp
(bad)
push
iret
xor
pop
popf
ror
rol
add
push
push
adc
psubw
mov
movs
nop
out
sbb
ins
or
(bad)
xchg
jl
add
mov
(bad)
mov
cmp
jg
push
add
add
pop
push
xchg
lds
push
pushf
xchg
push
stos
mov
jecxz
and
mov
push
or
push
xchg
es
mov
mov
fadd
jecxz
loope
pusha
shr
and
add
jecxz
mov
and
inc
add
push
call
vpmaxsw
mov
mov
out
mov
adc
jmp
inc
sbb
xchg
and
iret
loopne
mov
pop
inc
(bad)
and
jmp
retf
lahf
mov
(bad)
aad
fnstenv
adc
xchg
mov
imul
loopne
sub
test
ror
add
dec
mov
add
mov
aaa
test
std
add
retf
frstor
cwde
or
test
ror
xor
dec
int
into
jmp
sub
or
inc
xchg
push
(bad)
je
inc
xchg
pop
mov
pusha
shl
clc
aad
(bad)
sub
sbb
or
cmovge
jle
sub
or
test
or
sub
inc
mov
mov
lock
inc
neg
sub
fnstsw
or
cmp
js
sbb
jne
sbb
xchg
add
dec
push
mov
inc
inc
mov
aam
xchg
add
cdq
inc
jne
add
lds
aad
cmps
xor
jae
test
lahf
fsub
add
sub
rdtsc
aaa
rcl
test
cmp
ja
out
and
jae
mov
scas
out
aad
stc
pop
inc
lock
outs
cmp
xor
xor
inc
dec
inc
rcr
add
and
ds
outs
fdiv
mov
pop
pop
pop
ret
adc
mov
pop
or
aaa
gs
xchg
inc
ror
mov
mov
sbb
inc
das
(bad)
int3
cli
add
and
xor
fst
and
xor
adc
loopne
push
xchg
adc
(bad)
out
inc
adc
add
push
retf
push
inc
inc
ret
pop
cli
int
in
pop
or
sar
dec
ret
sar
cs
xchg
pop
mov
adc
popf
pop
and
test
and
xlat
enter
sbb
adc
sbb
into
pusha
test
(bad)
mov
or
bound
sbb
jmp
cmps
loop
pop
out
pop
sbb
and
int3
dec
popf
clc
cmp
push
push
adc
adc
sbb
add
(bad)
fbld
mov
pop
sahf
fwait
jno
jo
mov
push
sbb
sub
jmp
(bad)
ds
jo
sub
(bad)
and
xchg
and
mov
setne
pushf
push
jl
push
mov
leave
imul
mov
add
cmp
mov
je
push
dec
xchg
add
js
jae
and
or
test
and
sbb
mov
push
sub
push
call
imul
xchg
and
add
test
out
aaa
std
xor
sub
xlat
and
xor
sub
add
les
jno
xor
mov
outs
fld
lock
cmp
cmp
into
inc
add
inc
or
stc
mov
nop
push
sub
cmp
in
jl
add
pop
xchg
out
ds
xor
retf
add
test
cmp
loopne
pop
xchg
mov
pop
push
loope
iret
push
das
into
test
ret
jl
loope
add
(bad)
outs
dec
or
push
out
sub
cmps
push
cld
cwde
mov
mov
xor
push
das
mov
or
pop
dec
inc
sub
or
sub
adc
mov
and
push
mov
xchg
dec
lods
pusha
rol
xchg
pop
fidivr
adc
daa
inc
cwde
(bad)
daa
push
jo
js
mov
jmp
mov
call
out
push
adc
pop
mov
(bad)
idiv
adc
adc
add
or
cmp
jno
dec
dec
(bad)
xor
cmps
in
and
xor
push
add
push
std
add
mov
pop
and
rcr
push
or
dec
repnz
push
or
outs
add
jns
fs
aas
mov
or
dec
cmp
jmp
out
scas
sub
mov
ss
jbe
cmp
push
dec
adc
cmc
jmp
mov
call
jl
mov
movs
and
inc
push
std
inc
adc
inc
add
add
cmp
xchg
push
jne
enter
cmp
inc
jle
pop
cwde
jmp
cmp
out
cmp
or
jno
mov
jg
repnz
neg
pop
push
xchg
retf
adc
xor
je
es
je
not
idiv
cdq
add
adc
inc
push
or
fidiv
add
jg
mov
mov
ds
xchg
and
jbe
and
push
not
fadd
test
xchg
cmp
test
shl
inc
test
mov
lods
and
scas
into
cmp
push
adc
dec
clc
data16
mov
push
mov
inc
mov
add
xor
sbb
or
adc
lock
inc
or
mov
adc
adc
retf
and
adc
jae
pop
cmps
in
xchg
jno
dec
cld
loope
je
mov
movs
push
sbb
sbb
xor
mov
pushf
and
pop
sbb
movs
xor
lea
stos
or
dec
push
sbb
mov
pop
sbb
mov
mov
ja
in
pop
in
popf
out
fiadd
jge
ins
mov
mov
dec
sbb
popa
imul
push
and
sbb
xchg
inc
pushf
adc
shr
or
and
sahf
jb
enter
and
xor
(bad)
cdq
mov
es
lahf
cld
push
or
outs
inc
jae
retf
sub
in
pop
out
xor
mov
pop
sub
sub
or
sbb
cmp
xchg
test
xlat
inc
ja
mov
adc
arpl
sub
loop
cdq
dec
lds
ret
cs
mov
aad
add
dec
dec
xor
pop
mov
jmp
pop
rcl
add
loopne
pusha
rol
mov
icebp
bound
test
add
jmp
ins
push
dec
nop
pop
push
jl
mov
lods
popa
jge
xchg
jmp
xor
mov
or
pop
push
dec
sbb
and
pop
dec
xchg
or
push
mov
sti
xchg
fwait
xchg
cmp
addr16
jne
daa
mov
lea
mov
std
add
(bad)
sbb
and
aad
xchg
add
aaa
push
add
jecxz
mov
jne
mov
push
xor
sbb
sub
nop
test
push
test
and
adc
dec
and
stc
sub
sbb
cs
mov
jb
xchg
enter
or
or
sub
loope
and
data16
(bad)
cmp
inc
test
hlt
cmp
jne
(bad)
in
and
ins
aas
jb
cmp
imul
xlat
inc
mov
or
addr16
pop
and
lods
sbb
pop
push
fs
push
or
lods
inc
mov
ja
frstor
inc
and
ret
or
cmp
dec
or
aam
sub
stos
add
mov
mov
and
icebp
push
iret
std
(bad)
out
fstp
cmp
jne
xchg
push
push
aaa
sub
inc
pusha
ror
jbe
pop
xor
dec
pop
fwait
(bad)
jns
pop
push
outs
push
inc
xchg
xor
movs
mov
imul
xchg
les
aad
jo
add
aad
dec
sbb
push
push
sbb
add
cwde
(bad)
xchg
dec
rcl
aad
sub
into
pop
push
addr16
dec
imul
repnz
jo
test
fild
add
and
and
ins
aam
push
pop
test
ja
cmp
xchg
jne
mov
or
or
sbb
retf
jmp
mov
ret
je
inc
inc
adc
pop
hlt
and
inc
fisttp
outs
loopne
or
mov
ja
data16
pop
jne
and
dec
rcl
jl
xchg
pushf
xor
ins
mov
imul
or
aam
mov
pop
xor
or
in
add
mov
or
addr16
ins
xchg
sbb
ret
pop
inc
ins
jg
xor
cmp
jae
pop
retf
cmp
adc
fs
mov
cmp
or
add
push
cmp
and
sbb
jp
rcl
pop
shl
sub
imul
ror
sbb
jae
xchg
push
jge
js
fnsave
setns
jo
xchg
add
cmp
jmp
mov
sar
jge
fsubp
outs
sub
popa
jae
mov
js
inc
js
sbb
push
push
sbb
fdivrp
and
push
test
xor
mov
jne
mov
test
and
xchg
jns
mov
add
fistp
mov
jmp
cmps
js
mov
adc
mov
push
cli
jl
mov
jp
mov
js
scas
sti
ror
sub
cmp
and
repnz
sbb
mov
xchg
in
js
sbb
sbb
inc
adc
cmp
out
add
inc
dec
lods
xor
xor
jmp
mov
fisttp
dec
loope
pop
push
loopne
push
inc
push
pop
sbb
adc
jmp
leave
es
imul
sbb
dec
xor
popa
xor
lea
add
pop
outs
out
add
push
lea
(bad)
dec
ss
sub
pop
mov
xor
shr
lahf
cmp
mov
in
mov
push
adc
lock
jnp
clc
pusha
ret
pop
shl
push
adc
(bad)
push
mov
add
cs
psubusb
cmp
popa
sbb
out
pop
fld
push
ins
xchg
loopne
or
add
pushf
ja
pop
and
(bad)
mov
lods
pop
push
sbb
pop
arpl
mov
(bad)
xor
or
sbb
jne
mov
cdq
fadd
xor
arpl
mov
imul
jl
push
or
push
pop
xor
sbb
dec
or
fmul
mov
jl
dec
mov
stos
mov
sub
xchg
and
mov
sar
add
js
inc
(bad)
xchg
jle
inc
aad
loopne
mov
cmp
ret
lods
call
add
js
jle
adc
(bad)
in
or
dec
xchg
push
iret
mov
mov
sub
jge
add
push
cmp
fimul
int
xchg
stos
sbb
xlat
je
daa
cmp
jmp
clc
retf
add
adc
cdq
sub
sbb
mov
int3
pop
pop
pop
push
and
push
push
cld
jb
dec
sbb
pop
push
cmp
jae
xchg
test
xchg
pusha
mov
mov
dec
jo
(bad)
adc
sbb
pop
add
mov
fcomp
xchg
js
std
fwait
push
jo
or
mov
adc
jb
push
lock
xchg
mov
call
lea
js
xchg
cmps
fadd
clc
and
repnz
fnstsw
cmp
mov
repnz
push
push
lahf
push
xchg
mov
cmp
test
rcl
fldenv
add
shl
or
adc
inc
imul
pop
add
dec
push
loope
and
(bad)
mov
jle
push
lahf
cdq
push
lea
push
test
xor
add
out
push
pop
jae
push
inc
mov
les
add
add
adc
sub
mov
int3
ret
ja
jecxz
mov
xchg
mov
popa
xchg
and
and
ins
je
ss
inc
cmc
and
shl
inc
xchg
loop
dec
cmc
mov
or
repnz
pop
addr16
fist
and
cmp
imul
or
dec
xor
loopne
adc
in
fidiv
add
dec
xor
pusha
cmps
popa
inc
jmp
add
mov
xlat
xor
popf
push
ret
out
sub
xchg
jl
mov
push
ror
push
adc
popa
jne
lock
cmp
add
sbb
in
je
popf
mov
or
dec
sbb
mov
sub
pop
ret
sbb
test
push
ins
inc
ds
mov
outs
bound
push
inc
inc
add
xchg
xchg
xchg
int3
sub
dec
jb
jp
xchg
xor
rol
mov
sbb
pop
xchg
adc
adc
rcl
nop
aad
mov
cs
push
std
cmp
or
push
imul
adc
sahf
test
jnp
out
push
push
vsubpd
dec
add
adc
scas
pop
call
sub
jnp
push
movs
mov
repz
mov
and
jle
inc
jp
mov
fwait
mov
sbb
inc
add
mov
dec
inc
jge
jne
mov
or
jmp
aas
mov
cmps
sbb
jp
pop
call
out
loope
int
daa
mov
out
call
retf
add
shl
adc
cwde
xchg
inc
idiv
cmps
pop
cmp
leave
sub
or
sahf
movs
cmp
ret
sahf
mov
lea
and
mov
cmp
xchg
lock
push
pusha
inc
add
jmp
rol
xor
pop
xor
sti
call
add
xor
fiadd
mov
mov
inc
mov
adc
xor
push
hlt
inc
popf
sbb
loopne
rcl
mov
rcl
lods
push
lods
add
sar
push
mov
movs
pop
adc
test
loope
arpl
(bad)
rol
leave
pop
xchg
ja
mov
imul
adc
shl
mov
xchg
sar
mov
bound
test
lds
ja
mov
mov
xor
jo
and
lock
repnz
pop
int
push
test
mov
rcr
add
cdq
adc
push
push
cdq
and
dec
mov
pushf
xchg
jbe
mov
lahf
mov
adc
mov
lds
xor
and
push
pop
inc
dec
mov
xlat
mov
jnp
sub
(bad)
xchg
push
add
add
loope
pop
push
push
sbb
out
add
dec
ficom
stos
jbe
ficomp
rol
lods
xor
loope
(bad)
mov
add
jo
pop
ja
pop
inc
adc
mov
movs
pop
xchg
je
mov
mov
dec
and
xor
fwait
push
inc
adc
and
shl
sbb
push
or
dec
pusha
add
and
aas
add
jne
in
sub
inc
repz
cmp
shr
lds
fidiv
inc
xor
jl
mov
loop
add
and
sbb
add
adc
cmps
cmp
sbb
dec
pop
sar
pop
pop
(bad)
sar
push
leave
fs
xor
inc
scas
inc
and
int3
mov
inc
in
dec
cmp
jae
sbb
mov
push
mov
pop
cmp
xchg
cdq
add
mov
lods
inc
fst
cli
push
dec
daa
les
dec
mov
mov
mov
aam
dec
mov
jp
mov
inc
loope
pop
repnz
xor
jle
xchg
icebp
pop
inc
cdq
fdivr
loopne
repz
push
ins
(bad)
ins
sbb
add
stos
scas
cmp
add
iret
rcl
dec
push
pop
or
push
pop
hlt
fmul
push
div
or
push
inc
sbb
mov
ds
xchg
or
int
mov
test
and
jle
rol
or
add
jmp
add
cmc
mov
lahf
jbe
call
add
mov
cdq
(bad)
inc
jb
fiadd
pop
cmp
leave
pop
push
mov
cmp
push
ror
adc
xchg
inc
sbb
inc
add
mov
inc
and
hlt
sbb
sub
adc
shr
push
jmp
and
(bad)
push
nop
inc
pushf
mov
or
cmp
dec
cli
cli
or
jnp
jno
cwde
and
xor
and
cmps
pop
pop
jb
inc
inc
outs
jb
or
add
mov
jl
fnsave
mov
inc
daa
xchg
ret
add
ja
and
mov
lock
xchg
dec
ret
cmp
stos
mov
push
pop
add
cdq
aas
jo
scas
add
pop
adc
aam
push
dec
or
out
adc
push
add
xlat
in
cmp
shl
xor
adc
sub
je
jae
dec
test
inc
inc
or
xorps
jmp
mov
add
ss
xchg
fnstcw
fmul
xchg
mov
fnsave
adc
and
inc
sub
lock
fstp
cmp
clc
dec
xor
add
sbb
jne
pop
aas
add
add
jl
sbb
hlt
call
pusha
rcr
cmp
mov
cmp
inc
add
sbb
sbb
or
xchg
mov
pop
leave
jne
mov
pop
nop
xchg
xchg
sub
inc
push
sub
sar
sub
aas
xor
and
xor
imul
add
mov
mov
fisttp
cmp
test
push
repz
in
jge
daa
adc
inc
adc
jmp
ret
sahf
rol
cdq
jbe
data16
ror
jl
sbb
jo
jo
gs
gs
push
and
adc
sub
cmp
icebp
repnz
add
jl
sbb
loope
jne
sbb
in
mov
sbb
into
dec
add
cmps
push
xchg
inc
jg
fs
xchg
aaa
sbb
inc
in
mov
mov
cmp
dec
aad
xlat
dec
pushf
inc
sub
cmp
(bad)
mov
sbb
cmp
dec
jo
fistp
imul
std
in
enter
fsub
add
push
mov
pop
inc
dec
dec
ins
js
outs
add
cwde
mov
or
mov
xchg
dec
lea
inc
or
add
xchg
pop
bound
mov
jo
mov
cmp
mov
ss
pusha
add
pop
mov
loope
mov
test
add
pop
arpl
(bad)
mov
push
sub
sahf
and
scas
jns
sbb
or
lods
inc
inc
dec
popa
inc
adc
inc
push
mov
call
cmp
xchg
inc
push
addr16
push
cmc
adc
(bad)
push
inc
data16
ss
jle
pop
dec
les
pop
shr
add
jl
or
or
jb
int
fwait
stc
sbb
pop
pop
sbb
outs
push
cmp
ins
dec
add
mov
(bad)
push
sub
in
mov
mov
push
out
mov
jmp
xchg
js
inc
arpl
push
cmp
loope
cmps
retf
jne
xchg
ja
aad
sub
mov
out
mov
cmps
cmova
es
and
and
pop
fld
push
loopne
retf
shl
inc
loopne
add
inc
mov
ja
sub
inc
mov
pop
jnp
movs
xlat
sbb
push
and
ret
arpl
pop
cmp
xchg
sub
loopne
(bad)
popa
cmp
push
or
or
or
mov
adc
pop
inc
push
jbe
cmp
mov
stc
fwait
mov
ss
jge
mov
lods
fisttp
adc
xchg
fwait
add
cmp
lock
push
bound
dec
call
and
pop
popa
je
push
push
or
lods
or
xor
sbb
push
out
sub
stos
ins
jge
lds
icebp
pop
pop
mov
fsub
cmp
ficomp
or
push
xor
ins
and
in
sti
xchg
and
imul
pop
sar
push
pusha
add
cmps
ffree
or
pop
push
pop
lea
icebp
lea
lods
(bad)
mov
or
shr
cli
fs
dec
xchg
ficomp
das
dec
cmc
dec
sbb
or
push
in
push
pusha
sub
xor
or
pop
jmp
dec
cdq
arpl
lods
inc
fs
(bad)
mov
test
sub
rcl
out
adc
jge
std
push
add
sbb
sar
mov
mov
xchg
push
mov
push
sbb
sub
dec
out
pop
aam
lock
sbb
cmps
loop
jl
adc
or
pop
dec
add
pop
mov
aam
pusha
(bad)
fnsave
xchg
pusha
push
mov
adc
fidiv
jbe
adc
inc
out
dec
mov
je
jl
or
adc
mov
mov
xor
je
jo
pop
das
push
pusha
pop
int
adc
or
call
inc
sbb
add
aam
mov
nop
and
cmp
sbb
cmps
in
add
push
mov
adc
in
push
rol
lods
or
js
shl
not
dec
adc
lock
add
(bad)
js
inc
or
add
cmp
add
cmp
mov
sbb
mov
and
push
jl
inc
fcmovnb
cmp
or
push
pusha
jne
push
lea
mov
imul
add
adc
lds
repnz
add
xchg
int3
xor
mov
inc
scas
bts
sbb
pop
repnz
sub
ret
push
sbb
rcl
ret
add
es
push
mov
loopne
xor
repnz
pusha
mov
pop
ins
pop
jo
jo
add
sbb
add
and
pop
cmp
push
mov
adc
pop
or
aaa
pusha
mov
dec
(bad)
addr16
xor
mov
add
adc
dec
and
aas
fadd
daa
lods
xchg
xchg
dec
mov
and
fldpi
sbb
int3
in
ins
dec
dec
cmp
je
hlt
rcl
leave
xchg
nop
inc
or
pop
jo
jge
xlat
aaa
add
inc
and
lock
jmp
sete
mov
inc
inc
out
add
lods
jmp
mov
leave
in
jnp
pop
push
icebp
movs
sub
xchg
mov
mov
call
add
(bad)
adc
fs
or
dec
add
js
data16
dec
fcomp
pavgb
fisttp
fldenv
arpl
je
mov
push
adc
inc
aas
sub
and
or
lods
loopne
shr
cmp
mov
jge
add
jecxz
cmp
or
dec
sar
mov
or
pusha
push
es
push
adc
adc
push
pop
or
jle
loopne
and
push
rcl
lds
ficom
sbb
fisttp
js
push
movs
or
out
cmp
pop
rcr
xchg
add
sbb
xchg
fcomi
sbb
dec
sbb
inc
jnp
mov
mov
xlat
inc
adc
gs
aad
dec
add
outs
mov
sbb
inc
ins
outs
adc
xchg
adc
or
or
cmp
retf
inc
mov
ss
pop
xchg
ror
jo
pusha
icebp
into
es
arpl
xor
mov
adc
pop
inc
pop
(bad)
push
retf
add
stos
es
pop
out
inc
cmps
lods
mov
dec
or
mov
mov
mov
mov
pop
pop
test
pop
mov
and
mov
add
call
cmp
or
out
leave
mov
js
stos
mov
out
jmp
inc
and
outs
out
dec
or
movs
fld
ja
pop
inc
mov
mov
jp
sub
(bad)
cmc
mov
bound
out
cld
push
jns
sar
inc
mov
mov
stc
add
mov
inc
pusha
add
adc
pop
sti
and
js
lea
adc
cmp
retf
mov
dec
pop
stos
adc
pop
mov
fadd
add
cli
movs
je
cdq
sbb
mov
cmp
fadd
(bad)
cmp
fs
ss
inc
mov
test
das
cdq
lods
sbb
mov
inc
retf
ror
sahf
shr
mov
jbe
loopne
jae
shl
into
push
shr
jl
xor
ins
xchg
xor
adc
imul
lods
xor
shr
adc
pusha
(bad)
arpl
push
pop
rol
outs
or
push
dec
or
pop
daa
rol
in
xor
xchg
(bad)
sbb
cmp
outs
mov
leave
dec
ins
push
addr16
cmp
or
call
and
sub
adc
mov
jne
popf
les
xchg
inc
out
daa
jnp
shr
xchg
mov
push
pop
mov
cmp
cmp
inc
add
jb
sub
mov
add
ss
mov
mov
je
sub
dec
lahf
xor
xchg
sub
enter
or
mov
pop
aaa
out
cmp
inc
cmp
or
ret
push
nop
adc
push
jne
and
aas
test
cmp
nop
shl
mov
mov
(bad)
cmp
or
fbstp
(bad)
add
mov
jo
mov
dec
push
jecxz
cmps
jecxz
dec
or
add
enter
sbb
push
das
jns
xor
ja
retf
fadd
in
shl
add
dec
ins
daa
jmp
xchg
mov
push
inc
and
stc
sub
js
sub
jno
mov
add
add
or
inc
sbb
adc
xchg
dec
test
movs
mov
inc
jge
stos
jns
in
inc
pop
pop
xor
xchg
test
cmp
outs
add
inc
xchg
fild
sub
into
push
adc
and
mov
jo
mov
sub
xchg
movs
loopne
add
adc
pushf
and
aaa
mov
mov
ins
cmp
in
inc
sbb
mov
shl
cdq
jnp
and
jg
push
jmp
add
jno
ret
cmp
shl
leave
cmp
mov
aaa
sub
sub
pop
pushf
jbe
dec
dec
dec
pusha
push
xchg
sub
dec
jmp
call
addr16
clc
pop
lock
xor
pop
add
cmp
lds
mov
adc
adc
outs
mov
jle
jmp
sub
addr16
adc
(bad)
iret
or
mov
mov
and
or
mov
movs
mov
je
push
and
repz
jae
mov
popa
clc
xchg
or
dec
outs
ins
mov
cmp
sub
push
int3
xor
and
je
cmps
push
mov
sub
sbb
add
dec
loope
sub
xor
push
fs
ds
push
cmps
inc
(bad)
pop
int
sub
lds
mov
les
push
test
pusha
push
movs
pop
call
inc
mov
je
sahf
js
jne
dec
add
in
mov
xor
mov
inc
je
aaa
(bad)
pop
rcr
dec
retf
or
(bad)
adc
jl
call
mov
movs
or
inc
xchg
push
xor
or
js
mov
jecxz
popa
mov
ins
and
or
dec
xchg
jo
cmp
pop
pop
mov
loope
clc
or
sbb
pop
pop
fldenv
adc
xlat
sbb
adc
xor
cs
or
movs
and
in
cmp
daa
xchg
(bad)
scas
pop
out
push
into
inc
adc
adc
dec
add
pop
jb
lods
sbb
dec
loopne
xor
push
pushf
and
retf
shl
inc
push
dec
cld
and
mov
inc
ins
mov
inc
pop
add
jo
(bad)
jmp
data16
loope
(bad)
sti
je
mov
loopne
ret
lods
inc
add
ucomiss
loope
push
sbb
imul
std
mov
loope
push
cdq
inc
js
test
xchg
dec
inc
mov
adc
dec
in
movs
pop
fcmovb
and
jecxz
ret
xchg
(bad)
ja
repz
inc
sub
sub
pop
jp
sbb
pop
jl
aam
inc
inc
mov
adc
stc
fcomp
dec
cli
push
call
aas
push
mov
jge
or
pusha
fs
(bad)
xchg
into
xor
dec
jne
stos
inc
adc
pop
fsqrt
add
mov
int3
add
mov
add
cmp
loopne
mov
adc
shl
xor
xor
(bad)
adc
mov
inc
es
out
cmp
pop
and
or
ffreep
or
and
cmp
into
ret
ror
pop
fcomp
dec
and
add
loop
int3
cmps
push
xor
mov
inc
inc
push
fmul
loopne
inc
retf
daa
push
nop
dec
sbb
(bad)
cmp
jnp
or
in
mov
out
xchg
mov
add
and
ret
or
outs
sbb
lods
rol
stc
mov
xor
out
and
outs
test
sub
and
imul
and
(bad)
and
ds
sub
mov
arpl
mov
jl
or
lahf
push
cdq
hlt
fnsave
jnp
sub
sbb
add
retf
pop
adc
add
cdq
adc
(bad)
adc
pop
jge
cld
call
or
cmps
sub
cli
xor
in
xchg
mov
ins
shl
dec
cmps
inc
fcomp
dec
pushf
and
add
sahf
stos
test
js
and
mov
jp
lock
into
push
push
popf
adc
shl
add
es
ins
inc
nop
mov
leave
or
adc
mov
(bad)
sbb
leave
jae
xchg
ret
outs
mov
pusha
xlat
adc
jae
and
sub
rcl
add
out
and
cs
sbb
or
add
add
icebp
push
push
inc
js
add
bndstx
jg
sub
or
outs
sub
jmp
mov
jne
sub
jb
ror
inc
mov
xor
ficom
and
sbb
jmp
push
push
cwde
push
in
add
sahf
mov
lock
add
push
and
pushf
xchg
arpl
mov
or
mov
fwait
adc
sbb
xchg
adc
clc
mov
xchg
cmps
fisub
or
pop
and
adc
mov
xchg
popa
add
in
call
sub
cmp
adc
and
pop
mov
adc
pop
push
adc
mov
sub
shl
cmp
icebp
xor
jl
sub
sbb
inc
pop
push
add
loopne
clc
inc
out
push
jbe
out
popa
adc
jle
(bad)
lock
push
xchg
retf
adc
dec
or
popf
and
ror
fsubr
repz
pop
loope
xlat
pop
adc
fisttp
aaa
pop
xor
or
add
cmp
mov
jo
add
data16
nop
dec
pop
push
xchg
adc
fisubr
outs
add
(bad)
sbb
dec
adc
push
loopne
pop
adc
jmp
pop
or
pop
outs
adc
jl
or
adc
add
lea
push
xchg
es
pop
push
mov
or
movs
mov
int
js
jl
jp
mov
push
jp
dec
mov
pushf
(bad)
add
outs
xchg
pop
push
push
dec
adc
jp
push
adc
ret
cs
pop
pop
mov
lods
dec
pop
addr16
and
jg
add
mov
pop
or
xchg
sbb
pop
adc
mov
lods
cmp
add
pusha
cdq
test
jle
xor
in
cmp
or
push
add
sub
pop
loopne
sub
dec
push
xchg
jl
loope
or
imul
xor
add
scas
ret
or
add
xchg
ret
movs
out
loopne
inc
jp
xchg
or
je
imul
test
rcl
add
ror
xor
pop
add
mov
sub
adc
xchg
mov
adc
xor
ret
nop
out
push
inc
nop
or
shr
cmp
inc
dec
jb
mov
cmp
sbb
pusha
xchg
add
sub
rol
jb
push
inc
(bad)
sbb
jbe
or
sbb
(bad)
shl
repz
nop
pop
pop
lea
pop
or
xchg
add
in
mov
dec
sbb
cmps
cmp
mov
jnp
push
inc
adc
pop
and
lds
pop
in
or
push
or
hlt
jmp
fild
cs
inc
cmp
push
gs
retf
push
pushf
mov
mov
cmp
pop
mov
js
mov
stos
stos
mov
aas
or
(bad)
fisub
in
in
pop
add
and
popf
inc
cwde
sub
push
dec
mov
mov
lds
jns
push
xchg
test
ja
fistp
add
mov
jge
out
jecxz
jg
jge
inc
sbb
mov
add
inc
cmps
sbb
cld
adc
popa
test
dec
sbb
mov
push
xchg
inc
add
pop
pop
cmp
(bad)
jp
jns
sub
add
retf
inc
lods
ror
ins
add
dec
or
push
call
cdq
add
popf
imul
int
aad
ret
sti
(bad)
mov
cmps
pop
push
int
add
sbb
and
mov
add
aam
xor
ret
mov
ss
adc
jns
call
jae
into
add
xor
push
aas
dec
xor
lods
inc
mov
xchg
add
lds
daa
inc
and
hlt
cmp
ror
call
jl
fcom
je
xor
pushf
or
sub
sub
clc
pop
inc
xchg
popa
addr16
sbb
jecxz
add
pushf
mov
push
test
or
mov
aas
sti
xor
inc
sbb
pop
rcr
sub
push
xchg
sub
add
inc
sar
push
pop
mov
data16
sbb
aam
xchg
jge
sub
mov
fld
pop
dec
mov
xchg
jge
stos
aas
add
nop
push
sahf
(bad)
icebp
sbb
ret
pop
mov
xrelease
adc
jp
dec
push
push
addr16
mov
test
ins
push
dec
(bad)
jae
push
xor
in
inc
cmp
jg
jl
mov
sbb
mov
sbb
rcr
lahf
adc
jnp
in
dec
add
xor
rol
sti
mov
and
jle
les
dec
lahf
dec
iret
push
ins
push
mov
gs
pop
xchg
add
mov
adc
fisub
mov
push
mov
xchg
scas
rcr
dec
in
fdiv
pop
push
ins
jne
jg
xor
mov
xchg
mov
imul
or
add
adc
ins
sub
push
xchg
mov
jno
imul
inc
scas
jmp
cmp
push
mov
cmp
jle
add
or
call
or
or
inc
add
loopne
add
inc
and
dec
xchg
cld
inc
and
shr
outs
adc
clc
push
and
sub
add
test
mov
int3
cmp
push
not
jg
gs
or
or
test
and
xchg
sub
xor
cwde
xor
(bad)
pop
cmps
xor
cmp
push
pop
add
ins
dec
shr
pop
and
adc
cmp
mov
sub
sub
into
js
clc
inc
add
lods
fimul
cmp
test
add
pop
out
dec
nop
jo
push
int3
inc
mov
fucomi
cmp
mov
or
dec
dec
outs
test
xchg
adc
repnz
sub
out
sbb
out
and
xchg
jecxz
and
adc
xchg
sar
mov
ror
lods
dec
add
dec
xchg
mov
sbb
push
cmps
and
imul
push
push
pop
sub
or
push
arpl
mov
adc
adc
push
test
adc
movs
inc
cmps
mov
test
out
das
cmp
cmps
push
xor
mov
xor
jp
inc
mov
je
and
popa
mul
sbb
arpl
imul
arpl
mov
sbb
dec
cmp
jecxz
(bad)
retf
push
mov
sub
pop
scas
add
mov
mov
bound
push
aam
pop
call
adc
dec
cmp
and
inc
call
inc
jmp
sbb
add
mov
lock
test
out
dec
setne
scas
pop
push
mov
push
leave
add
hlt
ret
mov
sbb
sub
rol
frstor
adc
cwde
(bad)
xchg
add
ficom
je
xor
add
or
mov
ret
mov
add
mov
xchg
dec
(bad)
sub
xchg
xchg
or
inc
or
ins
jecxz
push
rcl
inc
ror
bound
das
dec
mov
lock
fadd
test
pop
js
adc
adc
jnp
adc
aam
add
test
ret
ret
cmc
ret
xor
and
jns
or
mov
inc
adc
inc
add
or
test
push
imul
pop
int3
sbb
stc
inc
cmp
lock
add
push
mov
jle
dec
cmp
fisub
(bad)
fisttp
test
push
jl
arpl
mov
ror
cmp
mov
adc
xlat
lods
fwait
sub
jge
je
dec
xchg
inc
or
sub
sbb
and
cmp
push
lods
les
lock
or
mov
and
test
shl
not
aam
cmp
loope
push
xor
out
clc
pop
ret
jg
(bad)
es
data16
jmp
mov
mov
and
nop
pop
push
int3
dec
pusha
sub
aas
clc
into
push
mov
int3
sbb
(bad)
ins
adc
mov
lds
mov
or
add
(bad)
call
out
xchg
or
arpl
mov
lods
adc
xchg
sbb
cmp
jne
push
mov
cwde
push
or
(bad)
cli
lods
mov
ins
mov
clc
add
fld
clc
fidiv
inc
xchg
mov
adc
mov
(bad)
or
xchg
iret
rcr
adc
inc
popf
xor
and
sbb
xchg
enter
xchg
jmp
sbb
jae
xchg
xor
and
ret
sub
adc
dec
pop
icebp
mov
xor
mov
jbe
inc
adc
aad
or
add
adc
iret
mov
(bad)
fild
mov
loop
lea
ins
(bad)
gs
clc
inc
nop
cmp
cmp
loop
ret
add
add
adc
pop
xor
adc
pop
test
adc
popa
in
clc
dec
lock
dec
and
mov
sbb
and
repz
inc
inc
loop
and
(bad)
pop
inc
mov
or
mov
adc
les
push
jge
xor
int
test
sub
push
push
(bad)
es
and
fs
gs
lahf
xor
xchg
and
jno
fwait
mov
cwde
sbb
ret
ds
call
mov
lock
(bad)
adc
fsubr
mov
mov
jmp
xchg
xor
or
lea
and
sub
les
add
test
and
push
dec
(bad)
dec
add
into
jge
imul
push
xchg
lea
and
ss
inc
mov
mov
xchg
lea
and
lea
iret
je
pop
ins
xchg
inc
sub
and
and
xor
aam
je
mov
mov
or
not
mov
cwde
xor
mov
sbb
pop
in
add
dec
loopne
ret
mov
jae
or
jmp
bound
adc
inc
inc
out
cmp
das
(bad)
jle
push
cmp
cmp
pop
shrd
dec
mov
mov
in
loop
shl
pop
dec
into
add
mov
cmp
test
ins
mov
nop
(bad)
cmp
cmp
retf
sub
out
mov
inc
jb
fwait
add
or
or
pop
outs
fistp
sub
pop
nop
push
xchg
movs
fisub
jnp
pop
push
in
pop
adc
stos
xor
arpl
push
nop
adc
xor
inc
add
xchg
adc
or
out
jmp
xor
push
add
adc
inc
cmps
dec
aas
inc
xchg
dec
add
pop
lods
jmp
ret
ffree
adc
jne
adc
mov
jl
ret
gs
mov
and
cmps
xor
add
mov
outs
add
(bad)
dec
inc
cmp
mov
adc
repnz
pop
pop
pushf
add
imul
pop
ins
push
test
(bad)
clc
and
push
mov
jmp
out
mov
or
(bad)
aaa
ret
add
push
jmp
pop
fldcw
fs
call
xchg
adc
xor
pop
pusha
jl
mov
xor
xchg
nop
iret
cmp
idiv
sub
rcl
paddsb
(bad)
jne
sbb
mov
pop
or
push
fisubr
(bad)
jbe
cmp
mov
sbb
push
mov
cmp
sbb
xchg
repnz
sbb
fmulp
movs
stc
test
or
retf
dec
sbb
call
add
sti
xchg
fs
ins
fimul
arpl
shl
stc
and
cmp
(bad)
or
daa
fs
cdq
dec
aam
(bad)
fs
cld
adc
or
ret
sub
adc
add
jl
push
or
repnz
ds
xchg
xor
jne
inc
or
mov
movs
adc
scas
sub
adc
add
sbb
and
mov
icebp
mov
add
pminub
jo
inc
sbb
neg
mov
inc
rol
push
push
(bad)
mov
pminub
sbb
or
inc
stc
push
inc
(bad)
imul
push
cmp
sub
xor
jl
rcr
adc
fcomip
dec
or
pop
repnz
jmp
mov
sar
outs
pop
sub
jp
inc
pop
mov
adc
or
inc
add
jmp
pop
mov
ins
mov
sbb
xor
jae
mov
or
bound
das
inc
push
fnstsw
into
or
dec
fld
sbb
jge
and
clc
sub
dec
jbe
push
adc
test
in
cmp
mov
aaa
push
push
fld
inc
xchg
retf
popa
mov
push
jmp
shl
rol
or
adc
shr
imul
and
push
aad
dec
or
cmp
into
fldcw
mov
ds
dec
or
mov
pop
adc
je
jns
and
mov
or
arpl
dec
aaa
add
xor
hlt
push
xor
dec
dec
call
adc
mov
xchg
sbb
clc
sbb
mov
in
jmp
or
dec
pop
pop
stc
and
mov
jle
lock
bound
out
xchg
or
stos
movs
jb
inc
inc
mov
rol
jmp
add
adc
aam
call
shr
or
push
(bad)
xchg
and
nop
add
hlt
cmp
test
inc
or
int3
clc
jmp
outs
mov
mov
test
mov
jmp
add
rcr
sub
sahf
scas
sbb
cmp
popa
pop
cmp
inc
adc
push
or
inc
add
mov
mov
push
call
sbb
xchg
push
mov
sub
fimul
sub
fldenv
jb
sbb
ins
cmp
adc
dec
and
fs
xlat
sbb
call
cs
adc
add
cmp
xor
inc
cmp
sbb
loope
adc
and
adc
add
das
loopne
call
ror
pusha
jmp
mov
fs
pop
(bad)
pop
and
jo
icebp
xor
add
push
(bad)
cdq
add
push
pop
std
push
inc
pop
idiv
retf
add
retf
or
xchg
push
ins
adc
sbb
mov
adc
cmp
or
div
gs
je
xlat
and
fcomp
shr
push
mov
in
lods
dec
mov
inc
nop
add
cdq
repz
or
mov
fnstsw
ins
dec
fldcw
push
pushf
or
push
push
mov
aad
cmp
fadd
gs
aas
(bad)
or
or
popa
xchg
xor
pop
sahf
scas
test
xor
push
or
pop
je
jo
or
loop
pop
arpl
pop
fstp
pop
pop
pushaw
or
add
xchg
(bad)
xchg
jbe
add
sbb
xchg
(bad)
aad
sti
fimul
jo
or
pop
adc
or
movd
test
sbb
jne
push
push
or
or
mov
xchg
or
inc
rcl
or
push
add
pushf
adc
push
lods
inc
es
fld
inc
push
mov
xor
jmp
mov
and
add
gs
or
push
push
repnz
pop
retf
je
sub
cmp
or
mov
xlat
rcl
mov
xchg
movups
or
and
cmps
xchg
and
fistp
dec
jo
lods
and
nop
or
adc
pop
push
xor
add
sub
mov
adc
lock
pop
imul
mov
shl
push
mov
add
push
sub
and
adc
jle
add
or
fadd
adc
mov
leave
cwde
sub
popa
imul
mov
fwait
mov
or
dec
mov
mov
or
ret
hlt
ret
dec
cmp
adc
sub
daa
loope
cs
add
jp
shl
inc
xchg
and
outs
push
je
popf
dec
xchg
pop
and
adc
ss
out
dec
or
adc
pop
pop
add
mov
inc
adc
add
add
sub
outs
inc
jl
mov
mov
int3
sbb
rcr
mov
out
loop
call
and
sbb
movups
add
inc
mov
repz
int
and
idiv
mov
rcl
mov
rcr
mov
js
adc
lock
imul
cdq
adc
pop
rol
inc
mov
cmc
mov
int
adc
inc
push
pop
retf
data16
arpl
mov
call
mov
arpl
sbb
xchg
ins
lahf
ret
xor
shr
je
aaa
in
adc
sar
mov
mov
pop
repz
dec
call
test
adc
mov
sub
push
xor
xchg
sbb
test
sub
cmp
daa
neg
push
adc
mov
add
sbb
dec
xor
js
das
sbb
and
add
nop
sub
pmaddwd
cli
test
mov
inc
or
(bad)
fcom
jnp
push
add
std
lock
fwait
loopne
loopne
mov
jne
loopne
xchg
mov
dec
lock
jbe
pop
add
sub
test
mov
pop
sbb
and
rol
mov
retf
sub
in
das
push
arpl
ja
(bad)
(bad)
mul
jl
outs
inc
cmp
cmp
xchg
lock
rol
hlt
and
add
pop
add
sub
les
or
(bad)
xor
mov
mov
or
fdiv
dec
push
ja
ja
lds
adc
movs
pusha
jmp
pop
imul
push
fild
retf
nop
and
sbb
sbb
shl
call
fadd
sub
add
sahf
inc
sbb
sti
loopne
or
std
add
call
add
add
pop
dec
sub
push
in
inc
pop
jmp
jge
movs
pop
add
jns
sbb
dec
int3
or
adc
lods
xchg
cmc
push
aam
movs
inc
cwde
sar
or
inc
add
es
push
and
pushf
xchg
hlt
jmp
pop
inc
ds
leave
fwait
aam
push
pop
gs
rol
jg
or
add
rol
arpl
add
add
inc
imul
inc
scas
mov
jnp
dec
add
add
xor
add
mov
pop
sub
or
mov
cmp
xor
pushf
pop
or
loopne
dec
rcl
(bad)
xchg
je
ss
or
and
and
(bad)
pop
jne
xchg
repnz
or
inc
and
xor
std
les
add
dec
sbb
or
and
push
cs
outs
mov
mov
sub
dec
and
call
sbb
ja
shl
dec
fsub
jne
add
out
imul
push
or
add
or
pop
sbb
inc
and
mov
pushf
dec
push
or
ret
xlat
pushf
xor
in
popa
leave
jge
int3
mov
cmp
and
push
xchg
pop
push
pusha
test
mov
mov
cmp
push
cmp
rcl
inc
xchg
pusha
inc
(bad)
rcl
adc
push
or
jl
cmp
(bad)
push
retf
les
gs
(bad)
retf
inc
in
mov
inc
sub
call
push
lea
cmp
and
(bad)
or
or
and
sub
stos
adc
push
xchg
cmp
inc
pop
cmp
inc
push
adc
cmp
jne
(bad)
push
fadd
test
test
popa
arpl
lea
push
rol
cwde
sub
mov
out
adc
mov
dec
inc
add
or
in
mov
push
dec
pusha
and
xstore-rng
cmps
push
jmp
jmp
fidiv
scas
pop
shl
or
jmp
cmp
aas
ins
or
mov
and
cmp
adc
das
mov
ja
push
imul
jg
or
push
mov
xchg
add
sub
pop
in
sbb
mov
mov
push
jo
movs
(bad)
sub
mov
loop
call
clc
inc
inc
or
shl
xchg
jl
sbb
push
inc
int
cmp
div
sub
outs
adc
or
or
mov
sbb
into
mov
xor
adc
cmp
je
sbb
(bad)
mov
stos
xchg
pusha
mov
lea
dec
test
retf
mov
pop
jae
cmp
movs
pop
xchg
test
hlt
add
inc
push
movs
push
test
ret
call
mov
jl
pusha
(bad)
mov
inc
fbld
arpl
sub
aam
rol
push
cmp
xor
enter
pop
jb
movs
jmp
jle
adc
mov
or
aaa
fsubr
or
mov
punpcklwd
dec
sub
or
lods
or
sbb
xor
inc
data16
int3
outs
sbb
inc
mov
int
test
sub
inc
add
cmp
add
dec
loop
or
sbb
sbb
add
xor
(bad)
and
inc
dec
jmp
push
sahf
cs
adc
test
(bad)
mul
call
aam
xchg
jl
or
in
imul
retf
add
(bad)
xlat
mov
adc
push
inc
sub
and
jo
jl
gs
rcl
inc
or
mov
(bad)
call
int
xor
add
or
mov
add
leave
dec
mov
ret
xor
aam
xor
mov
push
dec
and
cmp
xor
jecxz
test
(bad)
or
xor
hlt
imul
pop
mov
dec
sbb
ror
xor
test
push
adc
std
jg
and
mov
pop
call
dec
mov
(bad)
push
and
fdivp
cmp
adc
push
jge
add
aam
mov
push
mov
popa
dec
adc
pop
test
push
inc
in
mov
leave
cmp
push
je
dec
adc
add
and
bound
cs
iret
dec
addr16
(bad)
adc
xchg
cmp
push
jge
ds
cmp
shl
push
jb
enter
mov
movsx
gs
sbb
ret
call
xchg
icebp
into
xchg
sub
sub
nop
and
adc
push
push
rdpmc
fisttp
lds
sbb
push
enter
aad
ret
add
mov
ins
add
push
mov
ja
mov
cmp
add
enter
mov
add
movs
pop
pop
or
int
jp
or
dec
pop
or
stos
or
push
mov
dec
mov
dec
add
mov
mov
or
mov
or
inc
sub
fsub
push
in
ins
pop
mov
call
ret
and
inc
or
and
sbb
inc
add
add
fst
mov
aaa
xor
cli
or
mov
dec
js
inc
inc
cwde
jnp
mov
in
inc
test
push
add
(bad)
inc
data16
and
mov
pop
push
or
add
ds
mov
inc
loopne
jmp
mov
test
inc
adc
xor
cs
push
jmp
and
rol
add
add
sbb
imul
or
jmp
das
pop
and
jns
stos
lds
ret
add
push
pusha
push
scas
add
push
xor
mov
test
xchg
mov
push
sbb
and
(bad)
sub
shl
adc
jne
leave
add
sbb
mov
sbb
jl
xchg
pop
outs
ret
pop
rcl
inc
call
push
jg
out
jae
or
rol
or
mov
jle
sub
imul
test
add
mov
lock
jne
aas
jg
in
mov
push
push
je
dec
jne
mov
hlt
pop
sub
adc
mov
pop
jmp
pop
pop
adc
add
and
in
in
mov
fidiv
in
imul
in
dec
sub
scas
(bad)
and
jae
fisubr
int3
push
adc
je
imul
xchg
outs
out
sbb
sub
pusha
aad
and
push
adc
cmp
test
sti
adc
outs
and
stos
daa
outs
in
adc
je
push
xchg
adc
pop
or
js
xchg
bound
push
sub
xchg
sbb
lods
add
push
test
inc
repz
adc
ret
jmp
sub
jnp
add
popf
or
lea
and
clc
out
lds
or
mov
xchg
cmp
fimul
mov
add
push
jge
jmp
jmp
mov
push
dec
ror
lahf
add
mov
xor
cwde
add
and
dec
push
movs
jecxz
loope
cmp
inc
xor
xchg
add
loope
sub
ins
dec
adc
pop
test
or
lods
js
sti
or
sub
push
mov
sbb
(bad)
push
cmp
cmp
sbb
or
addr16
mov
pop
ja
jg
add
adc
adc
jmp
add
aam
jmp
adc
ret
sub
add
out
dec
mov
dec
pop
jne
or
inc
or
fild
dec
inc
cmp
inc
pop
mov
add
mov
jge
imul
sbb
arpl
mov
inc
sbb
outs
aas
inc
stos
xor
mov
test
loopne
inc
adc
test
pop
pusha
arpl
pusha
pushf
shr
push
rol
xlat
mov
adc
std
add
loope
jp
cmp
push
loopne
call
stc
lods
pop
ffreep
cmp
push
and
mov
sub
add
cwde
add
daa
dec
pop
jmp
out
add
push
icebp
and
mov
pusha
fiadd
mov
hlt
iret
xchg
test
push
movs
mov
add
mov
int3
call
cmp
xor
pushf
or
adc
fst
jge
dec
mov
movs
out
pop
or
or
push
fadd
rol
add
or
fwait
and
pop
mov
loopne
lahf
iret
test
mov
jbe
pushf
and
or
sar
or
sbb
(bad)
fldcw
inc
mov
leave
adc
fist
adc
push
lods
or
cmp
pop
inc
fdivr
rol
adc
(bad)
icebp
movs
inc
psrlq
sub
sbb
inc
enter
xor
xchg
les
cmp
or
test
inc
loope
addr16
push
dec
repz
mov
jbe
mov
loope
and
mov
adc
add
adc
adc
les
nop/reserved
dec
push
icebp
add
popa
adc
cmp
sahf
or
inc
movs
pusha
xchg
shr
pop
dec
xor
push
clc
fdivr
xchg
lea
mov
mov
(bad)
fwait
sbb
add
cmp
(bad)
cmp
in
push
and
imul
mov
or
or
data16
imul
adc
jecxz
mov
adc
push
add
or
xor
out
sbb
adc
into
cs
test
and
pushf
test
adc
mov
rol
fadd
cli
or
push
icebp
adc
xchg
jo
icebp
adc
cmp
adc
sub
pop
cmps
adc
add
mov
(bad)
in
adc
lea
cwde
aas
aad
xchg
xor
add
add
lods
mov
inc
pop
faddp
xchg
xor
cmp
xchg
dec
mov
bound
mov
cmp
inc
xchg
or
lea
into
push
imul
inc
xchg
ds
movs
loope
(bad)
and
mov
test
adc
push
jo
fist
adc
or
fcomp
jmp
add
call
xor
and
lods
mov
push
mov
test
pop
mov
out
loopne
ss
je
jnp
mov
nop
adc
popa
cmp
dec
pop
jnp
movs
jg
dec
fdiv
jecxz
adc
push
jno
or
dec
add
adc
pop
rol
shl
or
and
sbb
inc
scas
sbb
xchg
mov
(bad)
mov
movs
sbb
dec
add
adc
data16
add
add
pop
es
cmp
cmp
stos
hlt
dec
loop
or
or
(bad)
add
jae
std
add
mov
outs
jne
push
mov
and
and
cs
arpl
rol
and
imul
sbb
movs
sbb
jmp
mov
xor
sti
retf
push
ss
and
popa
jns
fld
sub
int3
mov
cdq
sbb
sbb
je
xor
adc
add
pop
inc
scas
js
and
dec
push
icebp
jno
xchg
or
ins
lods
out
sub
clc
mov
inc
add
mov
(bad)
jmp
mov
dec
cs
in
sbb
push
pop
jmp
stos
add
pop
adc
add
or
sti
xor
lock
aas
sub
or
pop
mov
add
or
movs
inc
jmp
sub
das
mov
jo
inc
imul
cmp
xchg
inc
cmovae
push
cwde
sub
sbb
and
cmps
xor
retf
adc
mov
out
mov
icebp
push
fstp
retf
mov
mov
clc
dec
lock
ins
and
sbb
inc
cdq
inc
fld
(bad)
jg
pop
adc
inc
jg
or
clc
jne
mov
cmp
fsubr
test
or
mov
add
(bad)
jmp
cmp
pop
ret
dec
sbb
or
outs
mov
popa
sub
out
add
pop
hlt
jmp
jmp
jmp
sbb
pop
xchg
push
mov
add
ds
sti
rol
or
xor
rdtsc
lds
cwde
mov
retf
dec
int
push
cmps
shr
push
push
xchg
cmp
xor
jb
push
sti
push
sbb
repnz
sahf
call
mov
dec
mov
test
pop
jg
inc
movs
adc
or
xchg
push
adc
cmp
jl
mov
inc
sub
mov
and
iret
enter
mov
daa
lods
add
xchg
jo
outs
xchg
dec
popa
push
in
rcr
(bad)
aam
movs
xor
movs
or
dec
jmp
pop
jo
leave
dec
sahf
clc
or
jmp
pop
inc
or
and
and
or
jnp
scas
pop
fld
and
add
pop
add
and
data16
sbb
ins
aad
dec
push
inc
inc
push
cvtps2pd
dec
(bad)
jg
enter
mov
sbb
sbb
(bad)
call
lahf
lock
test
inc
mov
popf
outs
fistp
sbb
xor
mov
jecxz
ja
adc
or
pop
dec
mov
dec
xor
imul
pop
inc
jp
clc
dec
mov
add
ja
ret
or
and
test
sbb
mul
inc
pop
stos
not
sbb
mov
pop
test
or
pop
xlat
(bad)
add
shl
data16
and
mov
push
add
or
adc
push
mov
or
mov
(bad)
clc
(bad)
inc
les
add
mov
sbb
push
xor
or
mov
mov
add
xchg
jnp
or
jecxz
hlt
dec
or
not
push
and
pmuludq
dec
and
inc
sub
setbe
sub
inc
leave
push
addr16
sbb
fstp
ror
inc
sub
(bad)
mov
arpl
fnstsw
mov
inc
sti
cmp
inc
inc
rcl
dec
ret
mov
je
cmp
adc
and
push
mov
mov
lods
pop
outs
mov
cmp
add
aam
jmp
ins
xor
pop
pop
inc
jl
cli
rol
jge
cmp
pop
xchg
js
lock
xor
icebp
(bad)
icebp
or
pop
mov
mov
sbb
dec
jns
ficom
mov
sti
xor
aaa
inc
push
add
popf
or
ins
jp
xor
scas
jo
out
nop
adc
mov
mov
xchg
cwde
and
call
imul
jne
jmp
and
mov
inc
pop
mov
sbb
popf
cs
or
lea
cmp
mov
mov
add
adc
rol
(bad)
adc
pop
mov
jmp
loope
or
mov
inc
xor
rol
lahf
gs
mov
sbb
mov
inc
and
ret
add
gs
pop
cmp
lods
daa
sbb
push
mov
fcom
adc
fwait
jns
pop
push
xor
test
push
add
jp
loop
mov
scas
mov
pop
xlat
jo
or
xlat
xor
clc
adc
inc
cmp
jne
ror
add
add
mov
jp
and
(bad)
sar
retf
out
call
and
add
loop
mov
or
cmp
hlt
jge
adc
enter
es
add
adc
adc
inc
clc
ja
cmp
jnp
jg
jecxz
dec
push
retf
fstp
in
or
lea
lea
push
xchg
inc
mov
sub
jmp
jbe
jnp
dec
daa
in
rol
jle
sub
aam
xor
jl
jne
clc
dec
sub
or
daa
pop
pop
movzx
lock
lds
cmp
adc
addr16
mov
cmp
add
outs
mov
shl
xor
sbb
sbb
dec
daa
(bad)
retf
push
push
and
pop
pusha
dec
pop
or
pushf
jge
popf
xchg
push
mov
add
push
(bad)
xchg
jo
xchg
push
push
adc
nop
sub
mov
sti
movs
mov
dec
mov
loopne
jo
call
pop
ret
data16
inc
pop
nop
push
aad
adc
inc
push
dec
jnp
and
cld
jle
xchg
dec
in
or
sbb
push
xchg
mov
mov
mov
xor
or
cld
mov
pop
or
push
pusha
inc
fwait
clc
mov
call
push
mov
adc
imul
loop
push
add
ret
pop
out
xchg
sub
stc
fild
(bad)
mov
std
mov
pop
sub
sbb
inc
inc
data16
mov
pop
aas
xor
dec
sub
aaa
jmp
hlt
inc
add
popa
pop
loopne
inc
or
(bad)
push
adc
cmp
(bad)
mov
jmp
icebp
movs
arpl
das
adc
or
sub
out
lods
out
and
pop
push
add
loop
or
add
adc
ret
(bad)
mov
ss
xchg
push
ins
and
retf
aam
pop
ficomp
push
or
mov
aaa
aad
mov
in
jp
aas
retf
add
xor
cmp
and
push
bound
dec
cmpxchg
gs
ja
gs
test
add
push
sbb
mov
xchg
inc
or
into
pusha
je
inc
aas
out
enter
push
loope
mov
add
xchg
mov
dec
sbb
mov
adc
(bad)
adc
add
pop
add
jmp
xor
and
mov
add
and
push
cmps
hlt
inc
inc
call
jnp
bound
add
push
add
and
pop
mov
xchg
add
out
add
je
inc
jl
push
loopne
xchg
pop
call
cmp
sbb
cmp
inc
outs
je
cmp
or
pop
mov
movs
sbb
and
int3
ss
movs
in
sub
neg
or
inc
clc
adc
dec
or
sub
or
fisttp
adc
sbb
push
ret
cli
sub
add
xchg
ins
pop
mov
pop
in
jb
dec
mov
pop
and
adc
add
rcl
or
pop
add
movs
sbb
push
hlt
sub
les
xchg
movs
shl
test
sub
jmp
dec
rol
aad
cmps
fdivr
adc
sbb
out
push
mov
jbe
and
cmp
mov
mov
cmp
push
es
sub
jbe
push
inc
mov
pusha
dec
int
or
or
mov
push
push
cmps
cmp
arpl
and
jmp
add
mov
pop
pop
fmul
sub
adc
or
add
std
jne
sub
xor
xchg
pusha
or
shl
inc
fistp
lea
and
sbb
daa
dec
sub
cli
add
add
jbe
scas
mov
cmp
je
xchg
iret
mov
adc
ret
push
and
and
push
cmp
push
mov
mov
add
into
mov
xchg
jne
(bad)
cmp
inc
xchg
or
test
cmc
dec
and
add
loope
pushf
pop
and
or
or
mov
ss
sbb
add
adc
add
sbb
ret
adc
or
sbb
add
push
cmp
xchg
add
mov
xchg
xchg
dec
fcom
pop
add
dec
adc
mov
mov
lods
je
sbb
mov
sub
mov
inc
lahf
lds
mov
xchg
mov
stc
nop
xchg
jle
or
inc
dec
call
or
lods
movs
xchg
adc
int3
cmp
rol
inc
xchg
adc
and
lods
popa
adc
jns
mov
push
cmp
call
mov
rcl
xchg
and
adc
or
ss
shr
pop
and
jmp
(bad)
xor
jne
cli
mov
cmp
es
imul
xchg
push
std
bound
lds
mov
inc
add
shl
repnz
xor
ret
adc
add
stos
add
outs
adc
jmp
aaa
je
popf
adc
je
adc
mov
cmp
inc
iret
sbb
mov
sbb
push
dec
loope
adc
dec
sbb
inc
mulps
adc
imul
add
xor
pop
arpl
push
jl
and
sub
mov
or
pop
xchg
das
xlat
je
sbb
cmp
push
push
fs
dec
add
adc
pop
sbb
fwait
mov
push
mov
test
xchg
gs
mov
push
fwait
mov
sub
mov
push
ss
test
arpl
stc
call
adc
adc
jmp
pop
add
push
(bad)
or
sti
and
mov
fiadd
sbb
jno
es
adc
data16
add
add
mov
aam
(bad)
pop
cdq
and
out
pusha
pop
pop
and
jo
jae
ret
in
lahf
xor
ss
adc
push
or
in
sub
aad
xor
jle
xchg
je
sub
cdq
scas
call
push
hlt
enter
or
pop
dec
ror
or
call
fdivp
xchg
mov
or
out
inc
jmp
test
xor
outs
pop
dec
cwde
sbb
mov
in
jle
pop
rol
mov
outs
retf
fmul
jmp
rcl
adc
inc
jmp
inc
call
jl
or
mov
pop
xor
sub
mov
and
pop
add
xchg
jae
and
(bad)
mov
and
push
xchg
loop
aas
mov
adc
lods
dec
lea
mov
lahf
fcom
and
popa
xchg
data16
add
inc
test
lock
sub
jle
sbb
pop
cdq
mov
rcl
fsub
jg
movs
cwde
push
or
js
ins
or
sub
stc
pop
mov
dec
cmp
and
jmp
dec
and
mov
popa
xchg
std
cmp
sahf
and
das
push
arpl
fild
movs
adc
add
jbe
xor
xor
jmp
push
les
xor
and
xor
test
jg
mov
mov
stos
xor
mov
inc
out
dec
cmp
jbe
mov
sub
setl
mov
jge
movs
xchg
je
ss
pop
rcl
popf
sub
aad
ins
mov
nop
adc
jae
fs
test
or
mov
fdiv
or
jae
inc
push
mov
das
jp
fiadd
(bad)
cmp
dec
sub
jbe
adc
inc
inc
popa
je
cs
xchg
push
push
or
sbb
xchg
mov
inc
inc
pusha
or
aas
dec
sbb
clc
jae
idiv
jne
gs
pop
ds
dec
push
sub
or
inc
adc
jae
pop
add
adc
mov
adc
cmp
popf
lock
test
push
test
lods
jno
int3
xchg
adc
imul
rol
and
ja
add
add
mov
and
inc
lds
pop
inc
inc
mov
sbb
pop
inc
cld
pop
jle
sub
dec
test
sub
mov
dec
sub
in
inc
(bad)
xchg
and
pop
ja
push
sub
mov
gs
sbb
inc
jecxz
ja
dec
mov
cmc
pop
pusha
adc
xor
sbb
pop
sbb
add
std
int3
or
je
and
stos
cmp
(bad)
and
adc
adc
mov
daa
or
mov
outs
loopne
adc
dec
and
pop
adc
dec
or
push
push
sub
add
or
jbe
cwde
retf
push
and
call
pop
lods
jecxz
sti
mov
imul
bound
jbe
test
push
ja
or
cmp
ja
inc
mov
mov
push
mov
and
add
jl
pop
or
mov
inc
mov
sub
lds
push
sub
inc
pop
out
jne
fstp
or
adc
inc
jnp
cmp
out
lahf
mov
outs
add
mov
push
jmp
and
xor
pop
leave
mov
mov
fild
cmp
mov
into
call
mov
cmps
popf
adc
es
mov
popf
sub
jp
adc
xchg
dec
shl
sub
jl
mov
pop
xchg
ins
xchg
xor
or
ret
mov
push
adc
idiv
ins
std
jno
cmp
xlat
add
int3
lods
ins
and
fisttp
stos
xlat
sub
mov
add
or
pop
mov
stos
pop
xchg
stos
je
popa
push
and
dec
add
fld
push
sub
inc
or
cdq
xor
aam
add
xchg
mov
jle
jne
mov
pop
sbb
jo
xor
push
push
dec
sub
dec
and
push
fnstsw
jns
ret
or
nop
(bad)
push
and
jb
das
hlt
rcl
adc
pop
les
fwait
add
pop
push
inc
inc
dec
adc
adc
adc
inc
sub
mov
mov
mov
test
adc
stos
add
test
mov
dec
mov
or
cmp
inc
not
inc
mov
(bad)
fcomp
and
jecxz
loope
sub
jle
or
and
cdq
clc
add
jb
(bad)
adc
lds
mov
sub
push
outs
sbb
or
sbb
movs
adc
rcl
pop
pusha
call
mov
jb
mov
ins
mov
mov
inc
mov
jmp
or
push
inc
pop
mov
mov
es
dec
pop
add
lods
jbe
mov
pop
dec
ja
add
cdq
scas
sub
repnz
sahf
rcr
pop
xor
(bad)
jle
cwde
sar
cmp
xchg
or
and
and
sbb
outs
fwait
cmp
mov
(bad)
icebp
push
dec
bound
shl
or
pop
mov
lahf
push
jb
pop
ins
add
push
cli
adc
dec
hlt
retf
inc
pop
jnp
adc
fild
push
mov
movs
(bad)
mov
mov
mov
test
cmp
fidiv
jle
mov
out
cmp
xchg
sub
cmp
xor
dec
pop
mov
punpcklbw
test
pop
pop
mov
add
fdiv
cmp
mov
and
loope
xchg
movs
ja
leave
out
add
sbb
clc
xor
ret
xor
inc
mov
inc
jmp
cmp
ret
cmp
lea
aaa
mov
or
push
fistp
pop
lock
push
je
xor
mov
imul
cmp
ficomp
jbe
cmc
mov
loopne
call
push
and
arpl
add
shl
js
imul
imul
sahf
add
jmp
adc
jae
aas
sbb
cmp
cmps
ret
movs
jge
mov
sbb
aam
in
shrd
or
sbb
je
xchg
bound
mov
add
sbb
ss
jle
add
and
or
cmovp
push
sub
mul
inc
lods
xchg
lods
test
sub
inc
les
adc
mov
jne
mov
and
or
xchg
sbb
(bad)
test
rcr
ficom
ret
inc
mov
mov
fsubp
ins
shl
not
and
sub
loopne
popf
pop
or
mov
add
mov
sub
mov
rol
test
fwait
icebp
leave
add
xchg
pop
adc
fiadd
xchg
push
movs
sahf
add
push
sub
inc
rol
in
push
lock
sbb
mov
test
add
jnp
add
adc
aaa
mov
scas
or
mov
stos
xor
cmovne
inc
div
pop
fisubr
icebp
push
add
inc
xchg
out
xor
mov
mov
shl
adc
adc
shr
cmp
or
rcr
and
adc
jl
xchg
push
add
sahf
or
jbe
adc
retf
out
or
es
xor
mul
add
lods
(bad)
pop
cmp
mov
sbb
aad
ds
jns
jmp
popa
jne
movs
daa
gs
push
outs
femms
clc
jecxz
es
out
mov
sbb
add
dec
arpl
inc
or
scas
inc
ficom
inc
imul
retf
add
pushf
add
add
xchg
pop
cmc
cdq
adc
shr
dec
stos
jo
int
cmps
add
and
sub
lock
cwde
cmp
and
add
mov
xor
into
pop
or
fwait
xchg
mov
pop
ss
xlat
xor
inc
mov
(bad)
fst
xor
pop
addr16
add
jb
jo
xchg
cmp
mov
pop
mov
dec
cmp
cli
jmp
add
push
clc
adc
jne
aas
or
or
adc
adc
cmp
xor
sub
loope
jbe
ss
inc
sub
and
aam
outs
adc
push
mov
inc
jns
push
in
fwait
cmp
push
popa
sbb
sub
sub
hlt
retf
in
add
jmp
mov
sub
sub
adc
iret
js
or
js
cmp
or
fs
rol
xor
ins
push
push
mov
test
aad
loop
ret
jb
xchg
jl
jle
mov
and
adc
jne
mov
sbb
add
ins
push
movs
nop
es
inc
sbb
push
inc
pop
and
je
ror
jg
sti
ret
inc
mov
cli
sub
gs
jle
adc
cmp
mov
movs
inc
jnp
push
sub
(bad)
xchg
inc
xchg
iret
(bad)
cwde
adc
ins
sub
xor
add
jbe
sub
and
or
or
inc
imul
push
inc
pop
xchg
cmp
sbb
xchg
or
pop
inc
push
add
adc
pop
sub
mov
pop
adc
mov
je
or
pop
mov
or
sub
pop
jmp
sub
dec
sbb
inc
jge
cli
test
add
inc
jmp
or
sbb
sbb
shr
jecxz
add
dec
mov
xchg
inc
inc
outs
dec
jo
mov
adc
mov
mov
cmp
hlt
cld
add
in
leave
push
adc
nop
sbb
sub
add
or
jg
in
sar
fstp
mov
pusha
cmp
cli
int
jne
push
cmp
je
fstp
xor
sbb
ror
inc
push
sub
xchg
das
sar
and
mov
ret
xor
pop
add
xchg
ret
ja
adc
add
lea
inc
dec
xor
fmul
popf
int3
cwde
les
mov
inc
add
push
dec
jl
mov
loope
sub
push
cmp
mov
sub
lock
movs
add
inc
ret
ja
or
inc
retf
popf
and
xor
dec
add
mov
adc
jae
or
cdq
pop
pop
enter
outs
jg
mov
or
mov
icebp
push
jmp
push
sub
adc
pop
daa
dec
ja
and
je
jmp
and
(bad)
adc
jae
mov
cmps
lods
ret
cmp
shl
aaa
xor
or
adc
stos
jmp
pop
add
dec
cs
jl
jne
jae
jne
movs
add
cmps
dec
je
add
sub
sbb
pop
xor
test
add
jecxz
(bad)
gs
mov
or
push
pushf
(bad)
cmp
xor
adc
test
adc
or
inc
ror
mov
add
ror
mov
sub
push
mov
lds
sbb
lahf
mov
mov
test
scas
sahf
adc
shl
fisub
push
pop
and
retf
cmp
(bad)
jg
and
test
(bad)
jp
imul
pop
aam
add
adc
jmp
mov
dec
mov
mov
int3
jae
jge
inc
push
lods
rol
xor
pusha
or
sub
(bad)
ins
int
(bad)
fs
and
push
sbb
or
data16
dec
dec
out
sbb
xchg
push
js
lods
xor
jmp
cmp
sub
push
jge
jmp
inc
cs
fld
fmulp
sbb
dec
mov
ins
or
sub
mov
pop
stc
add
sub
clc
jbe
dec
aam
push
mov
pop
enter
lods
push
fld
daa
add
push
outs
test
xor
mov
(bad)
cmp
movs
mov
enter
loope
adc
inc
sub
ror
loopne
jmp
push
cwde
push
neg
adc
mov
or
mov
aam
add
adc
jle
push
and
dec
movs
cdq
inc
cmp
jmp
and
inc
sbb
(bad)
cmp
int3
loope
jmp
jg
test
push
(bad)
push
or
lock
ins
ds
sbb
fild
fcmovnbe
inc
inc
cmp
cmp
jl
lea
mov
mov
ret
enter
push
sbb
adc
push
leave
aam
imul
aaa
pusha
gs
jmp
retf
push
sbb
dec
dec
xor
sub
jne
jg
call
repz
mov
dec
std
add
lock
fimul
in
and
pop
in
fnstenv
pop
mov
sbb
imul
adc
pop
retf
and
test
sub
push
fcom
inc
fld
test
xor
loop
or
stc
xor
cmp
cmps
or
push
fs
xadd
mov
adc
icebp
and
sub
stos
lods
xchg
rcl
(bad)
pop
push
push
scas
sbb
ins
imul
loopne
popf
xlat
jb
shl
inc
fisttp
add
add
loope
fs
inc
pusha
push
pushf
xchg
jmp
dec
xor
or
bound
je
jae
das
lahf
jg
enter
jmp
pop
and
mov
or
and
add
scas
hlt
or
add
cmp
pop
fild
or
mov
push
jo
sbb
adc
sub
lods
test
sbb
(bad)
mov
ds
pop
ret
sti
cmps
or
or
movs
into
icebp
push
mov
test
cmp
xlat
inc
sub
lods
nop
pop
pop
push
add
mov
into
sbb
lock
mov
in
in
inc
dec
ins
pop
push
or
fmul
push
push
inc
xchg
(bad)
sub
or
mov
cmp
pushf
pop
dec
push
pushw
mov
lea
mov
jg
or
dec
pop
pop
dec
dec
jmp
fimul
mov
cld
dec
cld
popa
inc
adc
add
div
imul
arpl
dec
mov
rcr
mov
int3
lea
aad
retf
mov
rcr
rol
xchg
adc
rcr
mov
sbb
call
jo
rol
add
mov
das
pop
outs
or
and
push
ss
sub
or
rol
push
call
inc
es
cmp
adc
out
pop
or
inc
ror
dec
dec
xor
inc
push
fisttp
or
lea
push
rcl
pop
rcr
pop
lea
loop
push
out
xlat
mov
lds
enter
lods
mov
das
rol
adc
mov
or
sbb
adc
jecxz
(bad)
add
or
loope
push
and
add
or
sub
lock
pop
or
nop
sbb
and
bsr
add
test
mov
mov
into
outs
xchg
cld
adc
and
scas
add
add
(bad)
sbb
push
or
add
push
push
loope
test
out
imul
push
mov
xchg
neg
push
jmp
imul
fcmovbe
cmps
sbb
rol
jo
xchg
nop
aad
into
dec
or
push
movs
push
sbb
sbb
movs
imul
ins
cmps
or
fild
jmp
mov
add
and
or
ror
fldz
fwait
push
and
jmp
adc
ror
or
shl
fsubr
shr
cli
push
(bad)
lea
bound
ret
(bad)
loope
or
cmps
xor
inc
aad
fisttp
nop
cmp
inc
stc
fdivr
out
jle
pop
pop
sbb
adc
data16
dec
push
inc
add
pop
mov
xchg
mov
retf
pop
jg
inc
jb
push
sti
lods
enter
push
push
adc
pusha
dec
add
sub
xchg
call
daa
shr
and
jg
inc
adc
dec
cmp
test
sbb
popa
adc
imul
pop
ror
mov
add
je
scas
jl
add
jb
or
push
jl
cmc
jbe
in
and
adc
push
cld
sbb
shl
or
push
sbb
adc
xor
ds
adc
ror
xor
cmc
fwait
jb
adc
mov
add
xchg
or
test
inc
fld
xlat
sub
pop
daa
cmp
fmul
cmp
or
sub
sbb
ss
and
or
cdq
xor
je
(bad)
jnp
lods
movs
je
inc
loop
adc
xor
imul
leave
sub
dec
in
clc
sub
cmps
cmc
lea
sbb
mov
add
cmp
sub
and
fsub
pop
test
pop
dec
dec
inc
sbb
mov
and
shl
mov
rcl
fld
push
ins
mov
cmps
sub
es
push
xchg
mov
xchg
(bad)
and
cmp
sub
fstp
scas
pop
das
test
add
repz
jmp
into
jg
adc
jle
inc
and
mov
cmp
add
mov
push
movs
pop
retf
ds
test
lea
imul
imul
mov
dec
push
pop
jmp
sbb
movs
ret
add
rcr
test
shr
fsubrp
dec
jmp
ss
call
sahf
jecxz
int3
pop
adc
rol
jnp
imul
cmp
pop
pop
sar
mov
fs
fld
inc
jbe
(bad)
aam
inc
jp
(bad)
cmp
adc
pop
xor
inc
cmp
add
xlat
scas
or
mov
mov
cld
movs
mov
add
add
and
jg
xchg
int3
jne
aas
sub
dec
add
or
sti
pusha
pop
lods
push
mov
cmps
push
into
mov
cmp
jae
push
data16
sub
icebp
add
retf
mov
addr16
push
xor
add
hlt
pop
sahf
or
les
jl
push
adc
into
or
(bad)
ins
std
mov
push
sbb
push
cmp
pusha
or
jne
and
je
fdiv
add
add
jne
add
test
xor
mov
mov
gs
push
sahf
popa
mov
outs
add
dec
and
into
ss
xchg
and
or
or
cmp
neg
dec
pop
aad
jl
cwde
inc
or
and
ss
add
call
add
int3
push
pop
mov
pop
sub
lods
add
test
not
push
dec
sbb
cmp
lods
push
js
fwait
repnz
loop
jg
inc
ret
and
outs
test
pop
inc
xor
push
or
dec
inc
push
jl
and
nop
loope
xchg
add
or
cwde
and
mov
xor
ds
add
stos
int
rcr
nop
push
cmp
mov
mov
and
int3
jo
ret
add
push
sub
inc
addr16
fwait
sub
cmp
dec
mov
lds
rol
je
sub
movs
xchg
or
add
mov
mov
push
push
sbb
loopne
mov
ret
mov
inc
mov
mov
mov
add
daa
mov
fild
push
ins
jmp
dec
inc
mov
shl
scas
mov
ins
add
(bad)
repnz
retf
pop
cmp
mov
inc
icebp
push
ins
ja
inc
scas
dec
pop
pop
and
jecxz
xchg
cdq
mov
jb
popa
or
ss
adc
xor
jne
mov
rcr
pop
mov
sub
push
mul
daa
(bad)
dec
sbb
xor
or
jle
or
fild
or
das
sbb
cdq
fist
cmp
rol
hlt
add
and
cdq
test
cmps
rcr
nop
dec
call
lods
xchg
mov
push
or
inc
jmp
pop
invd
iret
jg
dec
or
shr
xor
xor
add
sbb
dec
and
dec
sbb
or
adc
xor
sub
inc
jmp
(bad)
fcom
pop
mov
inc
mov
das
jmp
shr
mov
sbb
(bad)
js
mov
outs
(bad)
pop
and
xchg
sbb
cli
(bad)
sbb
dec
clc
loope
shr
add
enter
fidiv
in
sub
cmp
or
mov
jp
xor
popf
jo
sbb
and
and
xor
mov
enter
cmps
mov
push
mov
xor
xlat
xor
test
push
and
xor
jo
iret
or
lea
mov
enter
mov
adc
gs
ret
(bad)
fldenv
sbb
aas
adc
gs
cmp
inc
mov
push
sti
add
xor
mov
xchg
or
add
push
add
pop
sub
inc
in
add
xor
and
test
push
fs
pushf
movs
cld
or
sub
mov
rcr
mov
or
sub
add
test
mov
inc
dec
pop
dec
loope
cmp
pop
frstor
mov
xlat
sti
mov
jo
pushf
inc
jo
out
inc
and
hlt
inc
mov
pop
test
mov
adc
add
xchg
xor
mov
ss
scas
sbb
aad
mul
mov
jne
shl
mov
scas
inc
test
mov
jecxz
or
(bad)
jg
mov
push
ins
cli
cmp
sbb
cli
imul
or
mov
int
popf
inc
bound
mov
push
mov
sub
add
inc
sub
mov
and
push
and
pop
pop
pushf
push
scas
lock
sar
pop
clc
cmp
lea
inc
pop
ret
xchg
lahf
cmps
jne
or
cs
mov
jo
mov
cmp
jbe
add
nop
hlt
dec
repnz
test
test
push
test
je
xor
sub
ret
call
pop
mov
or
out
pop
or
sub
push
test
dec
hlt
repz
adc
add
push
adc
or
or
das
mov
loope
lock
inc
cmp
and
mov
ja
push
sub
test
mov
bound
or
cmp
imul
test
repz
mov
xchg
push
jmp
add
and
xor
sar
mov
add
xchg
mov
(bad)
nop
or
dec
rdtsc
lock
scas
test
pusha
dec
test
xchg
jmp
sti
test
inc
and
jno
xor
add
push
adc
or
pop
aaa
jnp
pop
cmp
add
xchg
inc
test
dec
jmp
je
sub
mov
sbb
pusha
rcr
push
sub
sbb
ret
dec
ja
push
jne
sub
out
mov
push
inc
ror
outs
rcl
cmp
dec
add
jne
and
in
repnz
sbb
push
dec
aad
push
add
push
pop
jne
cmp
dec
jmp
push
push
add
movs
push
neg
sbb
push
or
or
inc
ficom
cmp
jo
fnstcw
mov
out
xchg
out
sbb
pop
(bad)
retf
or
dec
push
pop
lahf
push
(bad)
add
pop
xor
(bad)
adc
mov
sbb
add
adc
jle
mov
jns
fs
fcom
(bad)
jmp
je
and
xchg
push
fbstp
mov
jge
add
pop
pusha
punpckldq
sub
or
and
jo
sar
jg
or
pop
and
mov
fmul
popf
and
in
inc
push
pop
pop
in
dec
js
mov
into
or
mov
push
push
mov
daa
or
hlt
add
push
lea
lock
push
lds
mov
add
adc
mov
adc
push
pop
clc
jmp
mov
and
sbb
jmp
jmp
pop
sub
xchg
cmp
or
enter
(bad)
adc
int3
cmp
lock
sbb
or
and
sbb
xor
ret
xchg
and
xchg
pop
mov
test
pop
inc
sbb
xchg
pop
mov
or
pusha
push
retf
or
mov
aad
or
retf
sub
adc
dec
les
mov
ret
call
popa
adc
hlt
pop
in
aam
lldt
xchg
or
fmulp
cmc
inc
mov
push
add
push
pop
sbb
pop
and
adc
iret
adc
inc
lahf
mov
cmp
je
push
bound
add
add
dec
mov
repz
test
and
mov
inc
or
pop
cmp
jmp
add
sub
mov
loope
daa
xor
fs
nop
les
pop
push
push
cmp
jae
sub
and
xchg
xchg
push
add
fsubr
clc
bound
call
aam
mov
or
sbb
push
or
adc
push
mov
ins
jnp
dec
test
push
fstp
ror
xchg
or
nop
lea
pop
fdivr
push
push
mov
dec
shl
sti
mov
mov
pop
xor
cmp
popa
or
add
xor
add
adc
mov
fadd
(bad)
rol
jmp
xor
add
shl
sub
push
ficomp
sub
arpl
inc
mov
jl
js
stos
jmp
adc
or
pop
sub
icebp
pop
push
or
test
sbb
mov
pop
push
outs
leave
dec
pop
into
or
repnz
(bad)
mov
xchg
in
xchg
movs
and
(bad)
push
scas
inc
pop
adc
rol
add
pop
ror
push
cmp
aas
xlat
cmps
(bad)
sub
cmps
add
lea
add
or
add
test
jmp
push
or
push
call
lods
jo
data16
(bad)
cmp
inc
push
sbb
pop
test
xor
sub
inc
or
fstp
push
add
jg
retf
rcl
mov
daa
mov
call
lea
cs
pop
inc
mov
sbb
xor
xor
add
or
inc
cwde
mov
popf
or
inc
push
dec
cdq
aas
aas
adc
xor
push
inc
or
and
loop
(bad)
dec
lods
aaa
add
jb
js
sbb
jmp
dec
dec
xor
and
jmp
lds
adc
test
cmp
jp
nop
test
dec
jb
jb
jge
and
or
pop
aaa
pop
scas
mov
cmp
xchg
addr16
add
add
mov
dec
cmp
sub
or
loop
mov
nop
test
jmp
cmc
add
or
loop
dec
call
sub
movs
sub
push
shl
icebp
ret
mov
mov
cmp
nop
addr16
sbb
pop
into
xor
pop
or
imul
(bad)
adc
or
scas
and
cld
aad
rcl
jnp
shr
inc
out
or
dec
fld
cdq
mov
icebp
mov
shl
jmp
push
xlat
pop
pop
pop
movs
test
push
es
xchg
jl
add
cmp
pop
test
xchg
loope
ja
inc
adc
dec
sbb
out
fisubr
lahf
fadd
cmp
jne
adc
pop
int3
mov
jp
add
or
add
clc
mov
jno
mov
inc
mov
mov
add
rol
pushf
loop
add
inc
lea
fs
adc
ror
mov
add
shl
sbb
mov
add
push
or
fcom
or
pop
mov
lock
popa
push
cdq
push
js
shl
or
sub
and
push
dec
adc
(bad)
mov
cmp
test
push
mov
jge
lds
mov
add
imul
call
mov
ret
add
rcl
scas
movs
sub
cmc
or
movs
jo
and
out
fdivp
mov
in
(bad)
xlat
mov
inc
inc
cmp
cmp
in
push
add
mov
call
sbb
adc
dec
xchg
jno
mov
add
cmp
jne
push
xchg
xchg
bound
(bad)
fisttp
data16
add
retf
es
(bad)
sbb
xchg
mov
int
and
inc
pop
mov
push
ror
mov
(bad)
fnstenv
dec
hlt
mov
je
or
mov
adc
les
or
lock
xchg
out
xchg
movs
dec
cld
or
cmp
(bad)
das
inc
jno
ror
ds
ins
and
ror
rol
adc
stos
call
pop
inc
adc
pop
lock
add
cmp
mov
mov
or
fldl2e
sbb
iret
push
mov
and
(bad)
scas
mov
lea
push
cmp
rcr
mov
push
das
inc
dec
push
cmp
test
sub
jnp
(bad)
jmp
adc
jne
mov
push
pop
mov
pop
jmp
movs
into
gs
pop
mov
jnp
mov
add
xchg
test
cmp
sbb
mov
jmp
xor
pop
sub
iret
push
adc
sbb
scas
(bad)
hlt
sbb
mov
or
dec
ret
pop
mov
push
dec
or
icebp
or
add
inc
loopne
push
movs
xor
cmp
adc
ins
shr
arpl
dec
pop
add
adc
jae
nop
out
je
loope
mov
jmp
push
pop
lock
sbb
frstor
fmul
std
out
adc
ss
sbb
rcr
nop
jne
sbb
and
fld
sbb
ins
adc
cmps
mov
adc
add
das
xchg
movs
sti
mov
push
sub
div
cmps
add
mov
fcomp
pop
and
ret
mov
rcr
sub
jbe
add
(bad)
rol
add
lods
or
mov
out
adc
inc
dec
xor
cmps
je
push
je
mov
add
out
inc
xchg
(bad)
movs
sbb
add
add
loopne
dec
xor
and
sub
adc
test
lods
mov
add
mov
fisubr
imul
or
sub
hlt
scas
adc
add
add
mov
xor
mov
ror
jmp
push
push
fidivr
jnp
mov
sub
xor
jl
inc
and
aam
je
and
adc
leave
inc
cmp
jmp
lea
xchg
rol
sar
dec
jae
nop
push
test
daa
mov
cmp
cdq
sub
sbb
add
repz
push
sub
push
ds
sahf
nop
mov
ss
aaa
adc
inc
sbb
or
(bad)
ds
sub
xor
push
fnsave
mov
sub
ret
lea
sub
adc
inc
nop
add
add
xchg
shl
outs
aam
dec
add
pop
cmp
je
int
dec
xchg
push
or
call
jno
bound
push
sub
jbe
adc
cmps
mov
add
fild
xor
repnz
movs
nop
mov
js
mov
or
fprem
jae
mov
in
or
adc
jle
into
movs
aam
jb
imul
pop
fbld
jae
lods
nop
jno
mov
cmp
sbb
shl
xor
pop
dec
add
mov
inc
sbb
add
push
xor
cmps
pop
push
dec
add
xlat
in
inc
pop
xchg
pusha
ret
xchg
jmp
adc
jne
add
push
out
ret
jne
adc
test
out
test
ins
cli
pop
es
xchg
add
ror
xlat
mov
pop
cwde
mov
in
sub
pop
pop
xor
pop
inc
mov
mov
cmp
test
inc
xchg
jl
mov
adc
xlat
add
sbb
ss
push
pop
xchg
idiv
je
or
mov
stc
jg
enter
jmp
clc
ss
xchg
and
inc
ror
lea
mov
xchg
in
cwde
(bad)
xchg
adc
add
(bad)
inc
sub
dec
mov
loope
repz
add
(bad)
sti
jg
pop
inc
enter
xchg
sub
es
loope
ficom
fild
mov
sbb
push
daa
mov
in
sub
ds
adc
xchg
imul
pusha
or
xchg
add
mov
fisttp
call
ins
adc
imul
push
push
enter
push
loopne
sbb
xor
sub
shr
sar
fcom
xchg
iret
inc
xchg
lock
sub
sub
cmp
dec
lea
loopne
and
fldenv
jns
pushf
and
test
das
add
jge
rcl
push
jmp
dec
add
sub
jae
push
mov
jo
and
(bad)
push
pop
and
mov
sub
ins
fwait
xor
test
mov
push
cmp
cmp
inc
adc
inc
inc
dec
dec
out
test
xchg
dec
or
sub
jmp
inc
and
push
mov
push
fisttp
mov
es
inc
sub
xor
mov
call
test
rol
inc
jmp
sbb
or
sbb
push
cwde
add
cmps
jne
add
ins
inc
push
inc
sbb
or
out
lea
dec
cwde
std
jo
xor
sar
mov
push
xor
push
aaa
cmp
add
sub
pop
sbb
inc
nop
sbb
and
pop
mov
jno
pop
jmp
inc
jmp
add
sub
jno
dec
push
mov
jl
jg
or
push
adc
sub
pushf
cmps
sbb
add
cmc
sub
ficomp
in
arpl
mov
inc
jae
add
fdiv
aaa
movs
mov
mov
mov
mov
rol
push
push
sbb
int
push
or
push
fcom
ret
pop
test
retf
mov
and
ror
sahf
addr16
in
dec
xor
sub
adc
mov
push
add
mov
pop
iret
add
push
ds
imul
loopne
cmp
(bad)
xor
cwde
inc
pop
ins
or
inc
pop
adc
jecxz
or
ins
inc
stos
repz
ss
dec
lods
mov
add
mov
xchg
adc
pusha
inc
mov
lods
lahf
sbb
push
push
sar
xchg
adc
js
ss
test
ja
cmps
fcom
or
imul
push
mov
mov
test
pop
addr16
or
add
inc
movups
or
mov
das
or
inc
popa
add
test
jno
mov
mov
add
xchg
ret
cdq
ficomp
xor
and
xor
pop
or
ficomp
dec
inc
jmp
daa
movs
repnz
dec
inc
or
pop
and
or
jl
pop
aas
adc
jl
sub
and
mov
retf
mov
mul
sar
in
xchg
xchg
sbb
mov
inc
or
jmp
push
cs
sub
call
in
xchg
push
test
pushf
add
(bad)
cwde
fisttp
xor
adc
(bad)
cmp
je
mov
mov
into
(bad)
jb
nop
pop
mov
push
arpl
or
fild
add
pop
mov
les
push
add
or
xchg
ins
adc
enter
pop
dec
arpl
sbb
xor
out
mov
sub
dec
pop
cmp
jne
pop
pop
cmps
adc
pop
pop
and
ret
(bad)
xchg
pop
pop
xor
add
jmp
inc
int3
pop
repnz
outs
dec
dec
stos
sti
into
pop
mov
jl
movs
bound
inc
or
dec
iret
or
push
xchg
aad
jp
cmp
inc
(bad)
cld
pop
icebp
in
inc
sub
xor
iret
frstor
fmul
sub
pop
xchg
and
and
add
in
sub
ror
sbb
hlt
dec
in
add
mov
pushf
nop
add
add
add
xor
dec
out
cmps
push
dec
sub
ss
xchg
hlt
cmp
or
outs
push
mov
dec
adc
inc
or
call
pushf
and
mov
pop
ficomp
nop
or
(bad)
pop
iret
or
in
xchg
test
xchg
xchg
jnp
jnp
test
add
pop
or
push
push
leave
enter
cmp
scas
nop
inc
inc
cwde
pusha
jmp
push
add
add
inc
jl
cmp
pushf
ror
sbb
inc
xchg
(bad)
cmps
mov
push
push
jmp
xor
iret
popf
add
jno
jne
lds
add
clts
shr
retf
pop
xlat
add
push
sub
sub
(bad)
(bad)
dec
inc
scas
inc
dec
mov
ss
sub
jmp
and
lods
xchg
or
shr
and
cmp
sub
stos
iret
inc
inc
xchg
push
sub
and
aam
bound
outs
test
xchg
mov
mov
les
inc
loop
out
(bad)
clc
push
xchg
scas
sub
xchg
or
mov
dec
cmp
or
push
xlat
(bad)
in
fcmovbe
adc
sub
xchg
inc
dec
sub
and
or
or
mov
cmp
daa
push
or
and
pop
xlat
adc
scas
xor
clc
ret
cmp
sbb
aas
fs
jns
int3
push
pop
or
mov
mov
push
imul
(bad)
add
sbb
test
shr
push
(bad)
fiadd
push
leave
(bad)
xor
leave
add
enter
or
sub
lea
mov
push
fsubr
sbb
push
or
mov
imul
dec
jg
xchg
pop
call
and
clc
cmps
add
clc
jbe
inc
loopne
sbb
ja
daa
mov
push
and
mov
int3
push
jecxz
out
pop
inc
iret
les
ins
pop
pop
enter
push
dec
scas
push
lahf
sbb
ror
das
add
cmps
std
rcr
pop
xor
inc
inc
jnp
add
mov
test
gs
add
ss
push
or
bound
add
dec
xchg
retf
push
add
enter
mov
or
mov
sub
pusha
inc
fcomp
mov
lea
or
mov
mov
aaa
inc
sbb
inc
jb
sar
jl
cmp
or
int3
ficomp
cld
sub
ins
loop
dec
mov
mov
adc
push
add
mov
retf
pushfw
push
cmp
retf
dec
mov
leave
dec
sub
ss
sar
sbb
fisttp
(bad)
push
add
push
adc
cmp
sbb
mov
not
push
cmp
(bad)
mov
add
int
fcos
sbb
(bad)
dec
inc
jg
adc
out
out
add
bound
pop
mov
ret
sbb
inc
lock
push
into
push
add
call
and
inc
sahf
inc
test
or
outs
dec
adc
add
cdq
popf
mov
mov
sbb
out
xchg
sub
popa
(bad)
pop
call
push
ins
mov
dec
ret
mov
inc
pop
sub
test
add
in
mov
add
mov
clc
mov
loopne
lods
sbb
sub
fild
xchg
call
pop
test
jb
xor
shr
ins
pop
jecxz
inc
imul
mov
mov
loopne
jmp
mov
(bad)
add
stos
loope
jl
push
jmp
mov
daa
add
cmp
sub
pop
fdiv
jmp
mov
add
inc
and
cmps
movs
cld
or
add
inc
dec
cmp
mov
add
je
inc
sbb
pop
and
jae
mov
add
and
(bad)
call
int
icebp
mov
ret
dec
in
add
clc
add
jl
mov
xchg
inc
addr16
dec
ret
jb
push
cmp
shr
push
or
inc
xlat
imul
inc
add
adc
dec
push
push
and
push
cmp
and
cmp
mov
mov
inc
mov
inc
push
jbe
jmp
push
gs
dec
add
sub
pop
or
scas
mov
xor
sub
or
sub
mov
inc
dec
(bad)
aas
mov
sub
sub
fsubrp
jb
add
int
cmp
push
fild
call
sbb
sub
jmp
push
cmp
xor
stos
pusha
add
add
loop
call
je
je
outs
add
sbb
inc
setns
daa
in
repnz
adc
and
fwait
xor
or
dec
inc
cmp
mov
mov
mov
mov
cmps
imul
out
out
(bad)
pop
mov
add
cmp
ja
mov
out
add
push
push
(bad)
xor
sub
push
test
mov
and
out
call
in
push
jmp
xchg
popa
pop
jo
jne
inc
mov
sti
sub
mov
add
or
xor
ja
aas
jge
popf
neg
push
stos
xchg
movs
lahf
xchg
sbb
pusha
or
inc
mov
adc
push
add
inc
cmp
or
cmp
and
lahf
mov
dec
fild
inc
push
neg
mov
jb
in
or
mov
pop
pusha
test
mov
jne
inc
test
imul
call
callw
push
add
or
dec
ds
call
push
push
sbb
add
in
dec
jmp
or
mov
fstp
shl
pop
adc
inc
and
mov
add
or
sti
or
mov
call
sbb
pop
jl
cmp
sbb
out
stc
adc
xchg
mov
cld
or
repnz
adc
push
ror
xchg
ins
adc
ds
pop
addr16
jns
fstp
pusha
pusha
lock
shl
rol
mov
aad
int3
add
test
push
or
movs
sub
mov
mov
cld
cdq
xor
cmp
and
or
(bad)
inc
jge
add
cmp
mov
and
movs
je
ja
push
(bad)
push
xchg
fisubr
sub
imul
scas
sub
pop
push
in
pop
inc
lds
push
or
dec
ins
imul
ss
push
or
nop
xchg
add
sub
inc
push
jnp
xor
xor
daa
test
inc
mov
inc
out
fadd
popa
out
or
leave
rcl
lods
jb
xchg
add
cmc
(bad)
aad
sbb
inc
(bad)
cmp
adc
int
(bad)
or
aas
cmps
enter
clc
jmp
lea
and
add
sbb
lods
sar
adc
push
or
sub
add
or
add
inc
aam
enter
sub
adc
arpl
fwait
test
mov
add
mov
rcr
and
aaa
pop
mov
sbb
mov
xchg
fimul
sbb
and
mov
add
pop
shl
add
ret
add
fs
test
clc
int3
xchg
add
mov
ror
jl
enter
add
jnp
lods
jl
add
mov
dec
sub
hlt
xchg
sub
pop
cmps
mov
in
lock
xor
and
out
sbb
in
sub
sub
push
xchg
add
and
dec
cmps
push
pop
jge
xchg
mov
call
call
dec
xchg
mov
imul
adc
fld
fstp
fld
fstp
add
mov
lds
jmp
icebp
mov
test
add
add
jne
mov
dec
sbb
retf
xor
add
outs
iret
push
adc
out
mov
aas
pushf
aam
mov
and
dec
(bad)
call
fstp
fwait
sub
fld
or
cmp
fld
aam
shl
adc
ins
cmp
mov
push
test
mov
sub
mov
fsub
xchg
jne
inc
mov
fidivr
gs
inc
shr
and
add
mov
or
jmp
outs
inc
call
cmp
or
cmp
icebp
(bad)
xor
imul
fld
jno
fadd
in
and
jnp
fdivr
mov
xor
sub
jmp
sbb
adc
push
sub
adc
cmp
sub
lods
hlt
scas
add
in
adc
fisttp
add
add
inc
and
jno
es
(bad)
xlat
das
dec
stc
xchg
add
jp
(bad)
inc
out
fsub
add
sti
jmp
jb
fdivr
gs
imul
mov
mov
mov
or
sub
jmp
outs
push
inc
enter
sub
imul
or
push
aas
add
outs
mov
loope
push
in
add
push
scas
sbb
arpl
pop
adc
call
sbb
push
mov
ss
sub
sbb
mov
adc
xor
mov
push
aad
scas
sub
add
das
inc
mov
mov
jl
jmp
xchg
frstor
mov
(bad)
xlat
mov
aaa
out
addr16
cmp
fstp
xor
and
bsf
cmp
push
or
xor
cmp
mov
not
or
jo
fdiv
(bad)
sub
push
loopne
loopne
add
iret
and
or
sub
sub
inc
adc
fist
ss
test
(bad)
add
jmp
adc
test
and
fbstp
aad
or
in
test
cmps
jp
aas
test
shr
push
pop
mov
dec
adc
dec
sub
sbb
pop
mov
ret
(bad)
inc
test
mov
jnp
pop
(bad)
adc
inc
out
and
or
fist
cld
mov
jb
pop
add
xchg
or
mov
dec
or
cmps
mov
inc
in
and
mov
int3
cdq
scas
movs
test
cmp
rcpps
ror
push
rol
or
mov
rcl
push
sar
mov
rol
sub
out
fwait
sub
xchg
add
daa
mov
add
or
fs
or
xor
and
aad
sub
jnp
iret
mov
xor
mov
rol
mov
adc
aam
fdivr
test
sub
pop
mov
add
(bad)
adc
(bad)
mov
xchg
dec
mov
sub
sbb
xor
sbb
or
push
cmc
mov
pop
or
add
lea
test
pop
or
or
inc
scas
push
cmp
loopne
mov
mov
inc
pop
mov
push
add
pusha
mov
fidiv
dec
sbb
imul
mov
push
sbb
mov
jae
jb
jnp
dec
jns
mov
test
lods
xor
add
pop
inc
or
pop
imul
and
jp
inc
loopne
mov
cld
pop
mov
aad
pop
inc
lock
add
jne
cvtps2pd
adc
bnd
ret
pop
push
ins
sub
aam
sbb
jle
xor
fild
push
jno
add
ins
leave
push
push
sar
pop
cmc
and
loop
repnz
rcr
jno
(bad)
cmp
call
dec
xchg
dec
inc
movs
mov
movs
inc
mov
dec
call
popa
test
ja
imul
movs
stos
scas
mov
int3
add
push
pop
fadd
lods
and
cmps
push
ss
push
out
or
xor
xchg
xchg
hlt
test
inc
push
lock
mov
or
inc
cmp
lods
rcr
add
sub
dec
js
sbb
ss
xchg
daa
cmc
(bad)
daa
imul
cdq
xlat
and
fild
adc
in
pusha
into
add
fisub
cmp
jmp
mov
repnz
js
sbb
jnp
cmp
test
test
shl
sbb
js
xchg
adc
adc
cmp
call
mov
mov
or
dec
adc
xor
cmps
es
sbb
popa
add
daa
pop
aad
es
inc
dec
sbb
mov
sbb
dec
sbb
push
inc
scas
mov
cmp
or
inc
sbb
pop
or
rol
sbb
icebp
(bad)
xor
xor
inc
popa
rol
inc
inc
ret
call
stc
pop
mov
add
xor
movs
cmps
or
sub
adc
sbb
or
sahf
lock
out
add
pop
mov
repnz
imul
sti
call
aam
loopne
dec
or
and
mov
pop
and
popa
dec
add
cs
mov
loope
pusha
mov
es
mov
fsub
push
add
cmps
sub
dec
pop
or
and
cmp
pop
jmp
push
adc
pop
inc
jp
push
and
pop
inc
test
add
xchg
mov
push
in
cmp
jns
jg
daa
inc
cmps
in
add
out
add
adc
retf
mov
sbb
push
dec
pop
jmp
sbb
adc
jp
add
rcr
cmp
mov
add
ss
mov
add
iret
inc
xor
nop
rcl
cmp
iret
cmp
cmp
fxch
jo
push
mov
call
cmp
out
mov
mov
dec
pop
adc
jmp
push
popa
xor
add
fstp
scas
fwait
and
mov
push
call
fisubr
pop
dec
and
cmps
aas
lock
or
or
dec
or
shr
mov
lea
sbb
push
cld
xchg
fwait
mov
movs
arpl
rol
jge
loopne
lock
dec
jo
arpl
sbb
popa
sub
xlat
add
int
test
mov
pop
xor
and
pop
sub
jge
add
cmps
lds
push
pop
mov
or
mov
arpl
in
rcr
hlt
pop
adc
fs
adc
imul
xor
mov
adc
mov
mov
or
ret
add
push
adc
inc
lea
adc
mov
add
inc
push
mov
fcom
out
pop
push
cs
fwait
sub
jle
jo
pusha
add
cmp
rcr
jl
sub
add
imul
repnz
xor
dec
mov
mov
xchg
jmp
mov
call
outs
mov
and
sbb
dec
cdq
test
jg
push
push
pusha
rcl
pop
rol
inc
adc
push
mov
mov
lea
movs
nop
push
cmp
sar
sub
cld
call
sub
rol
pop
mov
movs
ins
add
fsub
gs
mov
int
push
and
jne
test
adc
sbb
mov
movs
repz
scas
dec
rol
scas
adc
mov
add
movs
std
aam
test
sbb
and
jle
sub
push
add
bound
inc
cmp
(bad)
add
sti
jmp
jmp
in
xor
sbb
js
pop
(bad)
fmul
shr
(bad)
aas
mov
sbb
ins
jne
jne
adc
nop
sbb
add
mov
fimul
jnp
dec
dec
xor
push
adc
sbb
(bad)
daa
outs
or
add
adc
test
pop
add
pop
push
jo
cmp
xor
hlt
add
aas
push
cmp
sti
sub
cdq
ds
add
jo
push
mov
or
pusha
push
dec
pop
mov
inc
push
add
neg
xlat
cmps
inc
nop
out
adc
or
jp
mov
scas
or
cwde
adc
adc
lahf
or
mov
inc
jmp
sub
mov
xor
xchg
and
dec
adc
jge
sub
neg
icebp
pop
ret
nop
and
pop
mov
mov
cli
sbb
je
cli
lods
test
ds
pop
mov
ins
jmp
ds
clc
ror
and
(bad)
sub
mov
push
jg
add
xor
mov
push
dec
dec
and
mov
cmp
push
inc
aad
lds
lods
add
les
test
stos
sub
dec
mov
fs
mov
sbb
adc
push
aas
(bad)
or
retf
push
push
sbb
cmc
dec
dec
in
push
lods
cmp
xor
adc
jns
push
or
leave
mov
xor
adc
xor
aam
add
pop
xchg
mov
stos
sub
les
xor
inc
pop
mov
not
xchg
inc
rcr
sub
mov
and
pop
arpl
aas
aaa
icebp
cmp
sbb
repnz
out
adc
mov
add
in
pop
jecxz
aaa
pop
push
inc
or
and
outs
dec
inc
and
sbb
lds
test
pop
std
pop
dec
xchg
add
ja
push
cmps
test
popf
pop
add
sbb
mov
jbe
cmp
imul
pop
mov
je
in
sbb
addr16
cmp
mov
loopne
and
call
pop
add
inc
add
les
add
mov
or
add
aas
in
data16
mov
or
and
jle
mov
mov
xor
pop
pop
les
scas
cwde
push
call
xor
mov
mov
sbb
xor
adc
ret
popf
pop
or
bound
xlat
cli
or
repz
jmp
jmp
in
lahf
jmp
imul
in
add
lock
jge
and
das
loop
mov
mov
mov
in
or
mov
xchg
das
push
xor
mov
add
imul
cmp
mov
movs
dec
rcl
pop
dec
xor
add
enter
ins
sbb
jae
dec
lahf
mov
fstp
fst
ins
xor
or
in
das
inc
push
or
push
sub
sbb
imul
push
test
fs
xchg
out
retf
lds
add
or
lods
or
adc
or
adc
aam
mov
ds
mov
in
stos
in
test
pop
mov
jle
call
movs
push
sbb
xor
jbe
adc
xchg
pop
xor
nop
aas
ins
xchg
mov
sbb
dec
adc
mov
inc
jl
ror
jae
mov
ss
sbb
leave
mov
in
dec
scas
mov
add
push
les
ja
test
sub
ins
popf
retf
and
or
push
sbb
mov
leave
jp
dec
and
(bad)
pop
ret
pop
push
and
fsub
xchg
or
and
push
add
mov
test
popa
pusha
cmps
sub
popa
shl
ja
xchg
mov
and
imul
cld
sub
icebp
jl
ins
(bad)
mov
sbb
or
push
push
xchg
lods
xchg
push
cmc
ret
xlat
movs
pop
dec
and
fs
mov
cmp
test
mov
xchg
pop
daa
lds
nop
adc
daa
or
xchg
fiadd
out
inc
pop
adc
add
xchg
sbb
pop
mov
mov
stc
psubusb
daa
lods
mov
cwde
xor
dec
sub
xor
adc
aaa
xor
stos
fs
cmp
mov
mov
inc
or
xor
mov
or
outs
in
cmp
and
outs
imul
rcr
clc
neg
and
int3
xchg
ins
or
pop
xor
sbb
pop
cli
(bad)
pop
and
out
or
ficomp
int3
xor
fimul
mov
mov
dec
out
pop
ins
lods
or
and
std
test
xlat
inc
add
pop
pop
xchg
sbb
adc
pop
retf
pop
popa
inc
ficom
jns
sahf
movs
xchg
or
jo
pop
xor
mov
push
(bad)
pushf
mov
push
adc
iret
xor
add
push
lea
or
sbb
push
icebp
push
and
ret
mov
loope
pop
adc
ret
dec
pop
sbb
sbb
out
(bad)
in
or
jge
frstor
cmps
inc
xchg
inc
xor
add
das
add
adc
push
sub
inc
jp
cmp
push
loopne
or
jge
push
test
call
mov
push
jne
mov
or
dec
pop
inc
cmps
sbb
sub
adc
aaa
movs
inc
mov
mov
pop
stos
out
dec
or
aaa
pop
pushf
push
xchg
or
xchg
les
push
dec
mov
push
push
pop
(bad)
mov
or
and
sub
rcl
fldlg2
jg
mov
dec
out
jmp
cmp
mov
enter
dec
rol
xor
movsx
shl
jne
mov
jmp
mov
xor
xchg
pop
xor
xchg
mov
add
xor
test
cmp
fist
xor
push
sti
dec
jl
dec
or
mov
add
jge
cwde
rol
popa
fisttp
inc
ror
ror
sub
adc
fsubp
cli
sti
lldt
fisubr
pusha
jo
adc
add
jnp
punpckldq
push
mov
mov
dec
les
mov
cs
es
xchg
dec
xor
ja
je
(bad)
add
and
jne
mov
pop
add
mov
dec
loopne
daa
push
adc
add
push
out
push
mov
aam
retf
mov
xor
push
cmp
pop
in
jmp
mov
(bad)
mov
xor
daa
pop
retf
mov
dec
inc
sbb
pop
pop
aaa
fist
shl
out
push
dec
add
stos
pop
cmp
xor
pop
xlat
sub
xlat
fistp
xchg
and
and
mov
mov
and
mov
jno
dec
xor
xor
scas
aam
outs
jecxz
add
pop
add
xor
cmp
push
scas
push
add
mov
sbb
inc
or
sbb
rcr
inc
and
mov
xor
push
add
sbb
jl
ret
dec
hlt
mov
loop
pop
cmp
mov
pop
cwde
or
add
nop
mov
add
adc
sub
inc
push
jbe
push
test
mov
in
or
(bad)
adc
xor
dec
icebp
push
lea
adc
lods
cmp
movs
xchg
mov
jmp
or
imul
aaa
sbb
jo
pop
lea
pop
sub
mov
mov
cmp
inc
xchg
adc
fiadd
out
out
mov
jb
in
or
aas
dec
push
pop
inc
mov
cmc
mov
push
fistp
adc
clc
push
jl
enter
sub
xchg
js
and
and
xchg
je
sti
inc
imul
inc
push
jb
push
arpl
and
adc
fldenv
push
push
or
pop
adc
scas
or
and
out
call
adc
xor
inc
adc
sbb
inc
das
jne
push
arpl
mov
push
jl
adc
adc
stc
jle
push
push
sub
adc
outs
iret
pop
outs
pop
int
in
(bad)
sub
in
(bad)
mov
and
add
add
ret
push
nop
jno
sbb
(bad)
xchg
call
and
dec
dec
outs
pop
or
xor
push
movs
movs
mov
xor
nop
and
sar
adc
mov
leave
xchg
mov
loopne
mov
je
and
push
inc
pop
std
push
inc
loop
xor
movs
xchg
mov
clc
push
mov
enter
push
adc
into
jae
cmp
mov
out
or
fcom
and
fmul
dec
outs
fdiv
cs
das
sbb
out
call
mov
inc
pop
movs
mov
jno
retf
icebp
movs
outs
fcomi
in
jmp
cli
fcom
clc
push
out
jo
int3
push
mov
mov
cli
and
lods
movs
out
jnp
push
adc
or
sub
sub
add
inc
mov
cmp
push
and
pop
clc
rol
outs
dec
hlt
mov
xchg
dec
jo
pop
inc
fcomp
or
cmp
adc
xor
mov
in
loop
ret
jmp
mov
pop
shl
fsubrp
cs
push
retf
xlat
std
add
mov
jg
fs
jmp
ret
and
syscall
push
out
dec
aad
jge
daa
jo
pop
dec
cmp
test
mov
in
mov
das
pop
mov
ja
adc
add
pusha
push
fld
adc
lods
inc
(bad)
or
into
dec
dec
and
or
or
inc
or
sbb
dec
arpl
lods
repz
repz
rcl
adc
inc
lea
push
ds
xor
clc
cmp
jns
xchg
jne
or
jg
arpl
cmp
js
lock
(bad)
rcr
jl
std
in
nop
mov
push
and
dec
dec
mov
cmps
test
and
mov
add
pop
mov
stc
hlt
sub
test
add
add
cmp
pop
cwde
add
sqrtps
or
or
scas
cmps
cli
loope
and
out
jo
mov
fadd
mov
or
cwde
retf
mov
pusha
clc
xchg
adc
sti
mov
mov
sub
pop
dec
push
mov
push
adc
ret
test
fistp
sbb
add
mov
retf
pop
and
adc
js
out
cwde
popa
retf
mov
test
cmp
out
test
nop
add
mov
push
push
or
retf
mov
add
mul
popa
cmp
push
and
pop
jp
mov
cmp
inc
rol
js
into
mov
and
fild
fsubrp
ins
or
test
jmp
add
xor
mov
retf
add
xor
push
std
sub
inc
add
mov
and
add
addr16
mov
inc
ja
mov
sub
cmc
pop
mov
add
outs
adc
pushf
ins
shl
xlat
or
add
adc
or
inc
movs
jle
aas
aad
jnp
sub
popa
and
shl
sbb
cmp
ins
adc
jnp
aaa
sbb
mov
pop
dec
loop
inc
bound
jo
add
dec
clc
push
and
sub
and
or
scas
ret
dec
add
or
call
pusha
jl
pop
xchg
push
fadd
lods
lahf
in
and
pushf
pop
push
inc
xor
es
lds
std
fidivr
sbb
adc
and
and
or
data16
jl
and
sub
mov
in
jl
(bad)
(bad)
xchg
push
add
xchg
add
fwait
sysret
test
in
pop
shl
xor
jne
into
mov
aaa
js
add
icebp
xchg
and
push
addr16
jp
dec
pop
sbb
dec
cmp
fsub
xor
mov
popa
clc
ins
add
jno
jno
in
fcmovu
inc
outs
mov
cs
push
nop
not
add
mov
mov
push
xlat
xchg
data16
or
dec
cmp
jmp
jns
jbe
pusha
or
retf
pusha
dec
out
sti
push
inc
inc
sysenter
lock
fist
(bad)
repnz
push
sbb
cwde
outs
mov
outs
or
adc
inc
adc
or
(bad)
sbb
or
sbb
inc
adc
push
jbe
push
jmp
cmp
test
in
mov
pop
or
push
das
pop
or
mov
stos
(bad)
popa
inc
lods
or
jo
add
(bad)
or
je
cmp
jns
ret
icebp
cld
loopne
outs
adc
or
ret
or
push
push
push
mov
repz
pop
and
xchg
add
sbb
in
xchg
or
rcl
sar
shl
aad
inc
sahf
xor
fsubp
jb
pop
sbb
jns
popa
imul
ror
push
add
add
or
pop
(bad)
mov
push
push
add
inc
dec
adc
sub
in
sbb
push
inc
push
loop
mov
test
cmps
jb
cmp
or
cmps
jne
jo
in
and
(bad)
fadd
sar
inc
inc
and
xchg
lea
pop
push
add
sub
push
shr
xchg
adc
pop
push
mov
sbb
ds
adc
mov
inc
inc
inc
ins
addr16
xchg
psrad
inc
mov
push
rcr
enter
(bad)
aam
les
add
adc
pop
and
js
imul
add
inc
and
jae
bound
push
ffree
and
xlat
push
push
(bad)
push
dec
add
ret
(bad)
cmc
fisubr
adc
aaa
punpckhwd
sbb
sbb
dec
bound
dec
aam
add
clc
add
and
push
out
sbb
jge
add
out
sbb
daa
push
repnz
fistp
adc
add
sar
inc
pop
rcr
rcr
and
das
or
jmp
(bad)
test
mov
or
popa
cmps
xor
pop
push
adc
stos
aam
div
jl
arpl
push
dec
sbb
add
mov
shl
imul
sbb
adc
xchg
(bad)
or
pop
imul
adc
or
push
mov
push
popa
arpl
mov
mov
ss
or
push
enter
inc
push
add
push
inc
pusha
mov
shr
das
popa
out
cwde
test
cs
or
mov
inc
dec
dec
pop
push
push
xor
arpl
inc
fs
lds
movlhps
sub
jne
sub
add
stc
push
add
test
js
jae
sbb
lods
jae
sub
mov
adc
add
pop
or
jge
push
fs
inc
adc
or
sbb
les
cmp
jmp
add
rol
clc
mov
test
mov
sub
xchg
and
mov
mov
test
add
adc
cdq
clc
daa
cmp
outs
test
mov
retf
sub
inc
outs
popf
add
add
pop
jl
fwait
sahf
and
sbb
fistp
push
lahf
xchg
pop
or
push
fmul
es
jmp
imul
nop
dec
fimul
(bad)
fs
movs
add
or
mov
mov
ret
mov
(bad)
cmp
ins
ret
add
pop
adc
retf
aaa
xchg
inc
add
push
mov
jo
ret
into
mov
jne
push
mov
cmp
adc
stos
les
pusha
nop
cmps
xchg
inc
hlt
lock
or
imul
adc
adc
nop
ss
cmp
jle
xor
lea
hlt
add
mov
or
test
or
sub
dec
popa
mov
clc
popa
mov
das
out
dec
je
push
xchg
lods
out
xchg
jl
je
mov
pop
mov
stos
xor
std
add
add
push
mov
and
cmp
add
jb
stc
popf
add
sbb
and
cli
outs
cmp
jne
cmp
add
gs
add
js
icebp
stc
push
cmp
jb
or
push
rcl
mov
mov
adc
out
jmp
pop
dec
cmp
fs
repz
jb
test
or
ret
(bad)
or
sub
repnz
adc
js
add
(bad)
jmp
fst
jnp
push
push
int
xor
push
in
adc
or
fdiv
xor
cld
mov
mov
lock
and
shl
in
jmp
pop
or
retf
adc
sbb
scas
dec
dec
inc
xor
mov
inc
or
jne
dec
pop
add
xchg
lods
ins
pusha
add
dec
nop
adc
(bad)
(bad)
jo
sub
adc
frstor
into
sub
pop
adc
and
mov
es
inc
push
ror
sub
add
loop
repz
loope
(bad)
and
in
mov
shr
mov
out
cdq
jnp
mov
adc
jo
or
mov
pop
clc
pusha
test
push
sub
loop
pop
inc
(bad)
push
sub
loop
pop
movs
mov
adc
and
out
(bad)
pop
add
hlt
or
test
stos
sub
das
and
push
loopne
inc
or
dec
and
jo
mov
xchg
xchg
idiv
cmp
sub
sbb
mov
push
loope
test
pop
addr16
push
xor
dec
fdivr
add
xchg
add
mov
pusha
xor
cmp
pusha
inc
sar
add
lock
dec
les
neg
and
jg
(bad)
(bad)
and
add
lea
sub
cmp
jne
call
enter
int
add
mov
mov
or
ja
call
lods
stos
sbb
fmul
fsub
sahf
xor
or
mov
(bad)
and
and
(bad)
add
xchg
retf
into
push
iret
xor
lods
test
jp
push
(bad)
adc
mov
es
sti
inc
xchg
dec
add
dec
add
or
or
je
lods
test
mov
mov
adc
xor
cmp
push
xor
jg
or
mov
xor
(bad)
xor
mov
xor
add
add
add
cmps
imul
cmps
imul
imul
adc
(bad)
syscall
aaa
movs
loopne
aaa
dec
and
pop
pmulhw
fdiv
sub
or
or
and
out
push
sbb
add
dec
cmp
adc
or
mov
cmp
sub
cmp
mov
retf
pop
aad
xchg
pop
ja
xor
ret
mov
jae
cmps
xchg
pop
mov
xor
jmp
dec
dec
inc
inc
push
push
add
add
add
shl
or
dec
shl
or
pop
dec
sbb
push
bts
push
mov
push
lods
and
repnz
pop
hlt
loop
daa
add
mov
and
xor
je
sub
adc
inc
sbb
mov
fst
adc
or
fdivr
add
adc
inc
jns
mov
adc
sub
sub
inc
(bad)
mov
mov
jo
inc
push
lock
xor
cs
(bad)
inc
loop
dec
add
inc
mov
mov
push
push
push
pusha
dec
mov
call
xor
mov
xchg
push
mov
mov
cmp
movs
mov
pop
movs
fadd
(bad)
mov
js
push
inc
inc
test
push
push
dec
add
call
pop
inc
add
cmps
imul
imul
cmps
imul
cmps
imul
imul
cmps
imul
cmps
imul
imul
cmps
or
pandn
push
and
jle
sahf
imul
and
xor
sbb
mov
lods
or
mov
and
icebp
cmp
pop
mov
lods
push
(bad)
mov
xor
sar
pop
xchg
inc
mov
adc
pop
cwde
or
push
or
retf
or
push
(bad)
push
lock
push
std
dec
jmp
dec
(bad)
fstp
rcr
sbb
lock
hlt
scas
jae
daa
(bad)
lds
pop
lock
test
gs
cmp
cmps
push
ret
adc
inc
loop
nop
lea
mov
xor
add
push
imul
or
or
je
(bad)
or
daa
cli
inc
les
int3
loop
hlt
hlt
inc
in
jnp
nop
mov
into
jmp
xor
mov
mov
sti
add
adc
pop
call
add
xor
cmps
rol
add
add
sub
movs
test
add
add
xchg
cmps
rcr
pop
pop
or
movs
test
or
dec
jae
sub
or
or
or
or
movs
test
or
or
imul
or
dec
push
push
push
sysenter
sbb
jno
sahf
sar
fisub
sub
fwait
lahf
push
inc
or
xor
inc
cmp
xchg
ret
add
dec
rcr
xor
add
xor
jge
in
mov
add
cdq
adc
inc
add
es
or
adc
dec
ror
cmp
mov
or
xor
call
ret
jle
je
cli
test
mov
pushf
call
dec
cmp
adc
push
inc
adc
inc
sbb
dec
dec
and
cs
or
imul
cmps
imul
imul
cmps
imul
cmps
imul
imul
lock
cmp
sub
dec
dec
adc
dec
inc
push
sbb
or
inc
vmread
stos
movs
add
jmp
repnz
pop
daa
ins
test
(bad)
sti
aam
cmc
or
mov
pop
pop
sbb
jae
inc
mov
jnp
pop
ja
push
mov
xchg
pop
fcmovbe
add
mov
or
lds
add
mov
inc
mov
arpl
mov
dec
in
ret
movs
inc
repnz
or
and
imul
stos
into
adc
add
or
lea
cmps
xor
js
lea
aas
rcr
aas
hlt
sar
pop
jg
popa
mov
and
pcmpeqb
push
xchg
push
adc
cdq
lods
add
test
repnz
out
add
lock
nop
mov
xor
xor
inc
push
mov
push
xor
ror
adc
lock
mov
or
into
and
shl
mov
in
cs
xlat
mov
dec
xor
inc
inc
adc
sbb
xor
call
imul
imul
imul
cmps
imul
cmps
imul
hlt
add
push
test
push
pop
push
jle
jge
jle
mov
(bad)
inc
scas
mov
jl
fwait
test
mov
adc
inc
dec
fcom
mov
push
add
arpl
in
xchg
and
adc
cmps
loop
loopne
pop
sbb
movlps
test
or
and
sbb
cmp
or
adc
or
or
pop
mov
sahf
or
rol
push
add
pop
icebp
inc
pop
dec
pop
add
or
rcl
or
or
aas
sbb
push
or
push
push
shl
or
sub
sub
sahf
std
add
and
pop
dec
retf
outs
or
loope
add
shr
shr
loope
outs
sub
in
cld
sahf
xor
pop
imul
mov
or
or
out
pop
test
pop
pop
fcomp
push
in
sahf
fwait
or
cdq
popf
inc
je
adc
into
pop
xchg
call
in
call
or
sub
pop
pop
mov
or
jb
sbb
jo
jnp
push
cmp
jecxz
fisubr
test
daa
mov
adc
mov
sbb
cmp
add
adc
es
and
mov
lock
arpl
xor
in
mov
aad
outs
jg
sbb
or
fisub
lahf
movs
in
adc
outs
mov
in
fisub
cdq
xchg
sub
add
sub
mov
xchg
sub
or
jecxz
pop
xchg
jb
scas
add
jmp
sbb
out
in
movs
ret
push
inc
call
arpl
jmp
ret
mov
or
arpl
push
dec
adc
jo
and
enter
and
xchg
out
inc
or
cs
rcl
fdiv
push
in
aad
or
call
and
icebp
pop
jbe
jo
xlat
movs
lahf
xchg
xchg
(bad)
sub
xor
xlat
pop
pusha
mov
add
or
add
je
test
cmp
(bad)
loop
cmp
inc
jo
jne
dec
cmc
add
xor
dec
dec
cmps
mov
pop
inc
je
cmps
mov
lahf
imul
or
add
shr
sbb
push
inc
sub
fisttp
push
dec
mov
mov
adc
xchg
mov
mov
test
dec
scas
in
scas
or
rol
out
shl
inc
add
adc
sbb
add
add
sub
push
push
push
mov
or
push
mov
or
movs
repnz
or
or
out
mov
sbb
pop
mov
adc
pop
das
inc
xchg
xor
addr16
cmc
xor
fist
iret
cmp
les
dec
jne
mov
cmp
dec
push
jp
pop
ror
or
and
inc
xchg
int
or
xchg
cmp
xor
add
mov
or
lahf
xor
sbb
mov
(bad)
(bad)
imul
adc
mov
lds
(bad)
xor
cmp
in
add
xchg
or
push
out
add
lahf
add
pusha
sbb
or
inc
or
out
aam
or
jb
fimul
stos
or
(bad)
jo
cdq
dec
lea
push
push
push
and
inc
enter
or
fs
ins
jo
adc
je
push
sbb
mov
jb
cmp
test
adc
mov
sub
test
or
cmp
mov
push
aam
mov
je
(bad)
nop
in
stc
call
idiv
sbb
call
sbb
pushf
out
mov
mov
rcr
push
test
test
cmp
or
or
jmp
out
and
sub
and
es
adc
adc
push
adc
shl
jb
enter
enter
pop
test
fsub
loope
jb
mov
loopne
sbb
add
in
in
nop
mov
cmp
clc
cld
jb
push
and
push
sti
push
inc
xchg
mov
and
and
cmp
dec
test
xchg
adc
or
or
mov
adc
fwait
xchg
test
js
pop
sub
fs
inc
mov
or
mov
int3
cld
sub
jnp
and
std
mov
cmp
ja
xor
std
inc
jns
jp
pop
repnz
or
xchg
out
sub
or
push
dec
push
sbb
or
retf
cmp
adc
mov
adc
push
adc
adc
adc
sbb
sbb
fldcw
jns
sbb
push
sbb
or
jnp
clc
dec
sbb
mov
clc
stc
stos
cli
jne
out
mov
or
xor
imul
add
xor
scas
jns
add
inc
sbb
imul
int
push
sub
push
popf
push
sub
imul
mov
jmp
mov
cwde
adc
or
or
sbb
xor
or
mov
jo
jle
ret
xchg
pop
xor
inc
inc
dec
dec
jb
inc
and
add
xchg
pop
pop
pop
pop
xor
enter
push
ins
jo
xchg
pop
jb
js
or
add
into
xor
mov
ins
add
sbb
aad
add
sahf
pusha
imul
xchg
imul
cwde
in
sbb
mov
repz
movs
test
jb
enter
and
xor
mov
adc
les
int3
adc
and
rcl
fcomp
xor
fcomp
dec
enter
in
jle
ss
dec
mov
pop
stc
shufps
cld
outs
into
test
shl
add
shl
imul
fcomip
mov
sub
or
adc
or
jns
jnp
xor
push
pop
movs
jge
fidivr
dec
add
add
in
in
or
or
and
call
xor
or
nop
dec
sahf
adc
adc
int
mov
out
add
out
xor
xor
pop
cmp
xor
or
xchg
mov
adc
rol
leave
or
push
repnz
or
rcl
push
pop
sub
gs
xchg
dec
jo
dec
pop
loope
and
push
rcl
xchg
aam
sbb
inc
gs
sbb
sbb
xchg
sbb
js
inc
pop
sbb
mov
movs
fsubr
xchg
arpl
fcomp
push
sbb
sbb
stc
dec
sbb
retf
or
or
loop
loopne
xchg
pop
(bad)
push
sub
fldenv
and
fwait
out
retf
sub
xor
xor
call
jge
xor
inc
test
dec
sbb
add
add
mov
pop
xchg
inc
mov
pop
add
pop
popf
sub
lahf
mov
adc
push
int3
xchg
nop
test
stos
add
sub
stos
pop
mov
push
jecxz
gs
mov
sbb
or
mov
inc
pop
stos
cmp
mov
test
inc
mov
ins
xchg
pop
mov
add
lods
cmc
fist
loope
sub
arpl
jne
mov
xchg
xchg
mov
cdq
cs
in
aam
in
dec
and
mov
nop
rcl
xchg
cmp
inc
or
imul
sbb
fadd
dec
xlat
test
imul
shr
mov
or
bound
pop
test
je
and
dec
pop
test
and
push
mov
adc
gs
jle
out
inc
out
sbb
leave
leave
div
and
push
(bad)
and
cmp
xor
mov
mov
and
xor
or
pusha
lea
dec
dec
fisub
fs
dec
dec
inc
and
add
adc
(bad)
daa
das
add
fistp
or
add
push
xchg
inc
push
sbb
pop
add
fs
cmp
or
loopne
push
sbb
and
sbb
sub
nop
mov
inc
push
sbb
cmp
sbb
pop
outs
inc
dec
mov
and
jmp
xchg
(bad)
lea
add
mov
add
adc
push
mov
and
cmp
and
sbb
and
dec
out
xchg
or
fiadd
dec
inc
outs
inc
fstp
xchg
jb
popa
inc
add
add
add
inc
add
and
inc
inc
add
push
add
sbb
mov
addr16
push
push
data16
adc
or
sub
imul
loopne
push
fsub
fucomip
push
je
gs
pusha
jb
jmp
push
sbb
sub
ds
ds
mov
cmp
push
xor
inc
cs
movs
movs
cmp
sbb
or
adc
sbb
adc
loop
stos
jmp
cmp
pop
xchg
or
loopne
mov
pop
pop
repnz
lds
mov
xor
mov
inc
push
add
fwait
mov
dec
ins
dec
or
in
lods
inc
jns
(bad)
daa
xchg
pop
das
pop
cmps
jne
or
jmp
shl
and
ss
sbb
xchg
and
movs
add
dec
sub
and
loope
ds
pop
test
or
mov
dec
adc
clc
inc
(bad)
fist
cmp
daa
pop
mov
cwde
je
sbb
leave
adc
ror
not
xchg
or
mov
test
rcr
(bad)
sbb
or
add
mov
xor
add
sti
mov
add
inc
sub
dec
and
aas
sbb
sti
jnp
add
push
dec
or
loopne
add
outs
or
sub
xchg
jns
int3
pop
dec
and
cwde
adc
es
jae
shl
and
sub
xor
mov
sahf
out
and
adc
repz
out
adc
pop
adc
repnz
and
mov
dec
pop
inc
and
enter
hlt
adc
and
add
pop
xchg
in
scas
adc
add
pop
dec
push
xor
sbb
js
lods
push
add
push
add
xor
inc
pusha
pop
cli
sub
nop
cmps
stos
or
inc
gs
push
push
add
sub
adc
fs
imul
mov
call
shr
ss
adc
sub
xor
push
xor
adc
adc
sub
les
or
lahf
nop
gs
pop
xor
add
fcmove
mov
or
push
mov
inc
mov
ret
cwde
or
pop
jmp
inc
or
dec
mov
sub
add
xchg
push
fidivr
and
cmp
adc
push
mov
add
loop
or
dec
retf
pop
repnz
add
jmp
inc
pop
inc
adc
add
adc
jno
xchg
adc
pop
pushf
sub
dec
add
cmp
push
adc
mov
add
inc
push
mov
adc
push
add
adc
mul
xchg
mov
pop
daa
xchg
xor
xor
imul
add
adc
mov
or
dec
dec
nop
pushf
je
xor
pcmpeqw
pushf
pushf
pushf
ja
jns
sbb
push
xchg
arpl
pop
(bad)
iret
adc
pop
push
into
leave
sbb
sbb
pop
sub
add
adc
retf
push
les
clc
xchg
lock
inc
jmp
jle
repnz
dec
dec
mov
and
in
adc
and
adc
adc
or
inc
fimul
cmp
inc
push
add
push
jp
dec
je
jnp
loopne
push
or
mov
mov
arpl
mov
jae
add
add
sub
cmp
mov
and
and
mov
mov
pop
rcl
lods
sbb
adc
inc
ins
je
movs
(bad)
dec
in
test
push
out
pop
mov
or
call
call
inc
pop
xchg
shr
adc
sbb
xchg
inc
sar
xor
loopne
and
add
jae
inc
adc
lahf
ficom
(bad)
je
sbb
js
xor
adc
mov
pop
lods
fsub
je
fld
adc
jle
dec
sbb
adc
or
dec
jg
sbb
cmp
mov
fidiv
loop
inc
and
or
xor
jo
jne
cmps
daa
sar
fwait
or
or
push
popa
jmp
ldmxcsr
lock
(bad)
dec
scas
test
cmp
dec
push
mov
rcr
xchg
adc
(bad)
jg
mov
loopne
popa
sbb
xchg
sbb
out
pop
in
push
sub
cmp
dec
dec
adc
fild
or
xor
daa
jbe
pusha
adc
daa
ror
cmp
add
adc
call
jnp
push
sbb
retf
xchg
adc
mov
xor
jbe
mov
icebp
addr16
jmp
adc
or
scas
xor
jg
cmp
(bad)
jmp
cs
mov
cld
sub
je
mov
leave
fs
test
add
and
mov
push
adc
in
test
in
xor
sub
add
sub
js
inc
pop
or
sub
sbb
outs
xor
and
mov
and
sub
xchg
cmp
xchg
xchg
fs
mov
in
xchg
add
inc
add
rcr
xchg
push
jae
test
stos
dec
and
(bad)
gs
inc
mov
dec
popa
xor
mov
mov
dec
jae
pusha
loop
cmp
rcl
xchg
and
popa
add
nop
adc
dec
imul
mov
jno
jne
push
fsub
fnstenv
dec
mov
enter
xchg
cmp
mov
or
enter
stc
in
push
jmp
and
push
cmp
outs
mov
push
sbb
xchg
pop
imul
lea
stc
push
imul
outs
sbb
inc
cs
and
push
les
popf
das
mov
imul
(bad)
mov
xchg
fmul
pop
dec
lock
(bad)
je
popa
mov
daa
and
xchg
xchg
popf
imul
movs
add
nop
adc
add
push
nop
fisttp
in
or
call
add
add
ins
dec
mov
add
or
je
rol
dec
sub
sub
jmp
push
xor
jns
jmp
push
lahf
pop
pusha
lea
test
sub
mov
imul
ja
jo
mov
inc
(bad)
aaa
add
inc
inc
inc
inc
push
push
inc
inc
repnz
and
push
inc
daa
inc
pop
inc
dec
push
push
dec
push
scas
in
add
ins
or
in
shr
xor
xchg
out
in
or
sbb
dec
sub
or
test
pop
pop
ficom
ss
xchg
cmp
scas
sub
xor
mov
push
and
test
and
sti
popa
ficom
sar
push
cmp
cmp
add
jle
and
mov
shl
cmc
cmp
sub
lahf
es
mov
(bad)
sbb
sbb
lea
mov
push
pop
lods
sbb
and
mov
into
sahf
xor
sbb
fdiv
test
pop
iret
rcl
mov
mov
xor
xadd
je
sub
xor
adc
sub
add
mov
stc
popa
dec
out
sets
in
inc
or
mov
mov
add
sub
test
aas
lea
pop
outs
adc
mov
cmp
test
dec
xor
push
adc
sahf
mov
xchg
pusha
les
movs
sar
push
cld
mov
shl
pusha
push
add
pop
push
bound
pop
enter
add
call
and
xchg
pop
inc
nop
ror
out
mov
test
push
and
push
imul
mov
retf
dec
jae
pop
cmp
fisubr
addr16
pop
lods
jmp
in
movs
idiv
lock
push
lea
icebp
mov
rcr
stos
pusha
and
idiv
into
es
dec
sbb
mov
pop
push
aad
mov
mov
dec
dec
mov
lods
and
aaa
in
add
add
xor
(bad)
and
xchg
shl
jae
sub
js
jp
rcl
inc
aam
adc
retf
es
adc
xor
ins
or
push
lock
test
cmc
mov
shl
movs
xchg
jle
mov
sub
xor
retf
cli
push
sbb
aas
cmps
push
leave
mov
add
popa
inc
fwait
or
mov
call
sub
lds
jae
adc
mov
shr
or
pop
or
xchg
push
xor
sub
imul
and
and
add
(bad)
into
call
popf
jae
inc
dec
leave
add
aad
jns
js
je
das
inc
mov
sub
lahf
lods
loopne
std
inc
in
jnp
inc
push
call
push
movd
dec
loopne
add
cmp
push
add
jo
int
xor
and
mov
mov
inc
test
inc
inc
in
sub
inc
sub
push
sbb
jecxz
xchg
push
fs
jg
jb
cmp
pop
jge
adc
mov
enter
cmc
test
les
mul
nop
add
inc
movs
ins
jle
aaa
dec
movs
in
mov
dec
cmp
shr
xor
gs
xchg
mov
mov
aas
mov
adc
addr16
repnz
lods
mov
clc
movs
xchg
push
and
movs
mov
jo
mov
pop
ror
adc
cmp
or
dec
or
add
pushf
pushf
cwde
adc
sub
add
or
ja
or
imul
pop
movs
rcr
or
cdq
movs
jb
test
movs
jb
pop
jl
jne
sbb
mov
inc
pop
adc
adc
leave
nop
adc
push
std
xchg
pusha
and
ins
clc
loopne
mov
jns
call
xchg
push
rcr
push
orps
fnstenv
lods
idiv
cld
out
js
inc
or
push
addr16
leave
stos
icebp
cwde
std
mov
call
add
les
mov
mov
add
mov
retf
add
fwait
mov
add
jmp
xchg
repnz
inc
cli
inc
cli
cs
ja
inc
cli
cmp
dec
push
jns
inc
add
pop
push
jns
cli
loopne
cli
sbb
cmp
ins
mov
sub
sub
push
dec
jb
and
cli
sub
xor
imul
jl
sbb
sbb
or
push
cmps
or
ret
fisttp
dec
jnp
nop
adc
and
in
movs
dec
and
and
test
cmp
cmps
test
cdq
movs
push
sbb
dec
sub
xchg
add
push
or
and
adc
dec
pop
xor
or
mov
add
movs
sbb
or
test
dec
jb
or
stc
push
pop
xchg
xchg
stos
add
call
scas
in
sar
sbb
or
in
psraw
xchg
out
xchg
stc
in
sbb
lock
cld
cmp
repz
stc
adc
loope
adc
ins
sub
push
in
pushf
stc
cmp
xchg
push
push
in
stc
call
or
xchg
dec
sbb
xor
in
loopne
loopne
cmp
dec
inc
aas
push
xchg
add
mov
sbb
nop
(bad)
jb
and
fcom
fdiv
in
sbb
cs
movs
xor
push
rcl
xchg
and
mov
jb
and
les
enter
in
adc
dec
cli
adc
cli
sbb
xchg
cmps
stc
pop
stc
stc
xchg
xor
jb
stc
pop
stc
sbb
stc
add
movs
pop
stc
stc
stc
sub
and
loop
pop
push
pop
or
aas
pushf
scas
and
adc
push
pop
push
fistp
cwde
dec
js
movs
pop
cwde
movs
stc
inc
add
and
cs
nop
mov
pusha
mov
test
popa
je
inc
test
sbb
cmp
leave
outs
mov
jl
sbb
xchg
arpl
jo
in
dec
fs
clc
retf
and
retf
ins
push
mov
pusha
sbb
gs
pushaw
pop
pop
mov
addr16
fs
sub
push
push
push
push
imul
dec
lahf
movs
xor
cs
stos
dec
push
retf
dec
push
inc
imul
popa
inc
cmp
push
in
cmp
cmp
xor
xchg
retf
inc
sub
outs
fisub
xor
pop
inc
pop
ret
pop
es
test
dec
sbb
sub
pop
inc
jp
mov
sub
or
leave
test
xor
sub
and
jmp
lea
jns
scas
lock
call
and
pushf
out
sub
adc
jmp
ret
stc
lea
and
xchg
push
or
or
and
jb
or
mov
call
xchg
dec
dec
bnd
clc
add
or
and
movs
jge
cmp
mov
dec
jae
ja
clc
mov
nop
pop
hlt
clc
imul
movs
hlt
call
xor
and
je
leave
inc
push
pop
in
clc
lock
lock
xchg
and
add
dec
jp
mov
mov
and
mov
jne
fdivr
aam
rcr
xchg
clc
sbb
jbe
and
rcr
clc
jmp
inc
mov
cmp
xor
push
mov
clc
clc
enter
ja
popf
int3
dec
dec
xchg
outs
adc
mov
sbb
mov
or
rol
das
or
add
push
inc
push
movs
dec
mov
lods
jns
retf
and
jno
mov
icebp
push
retf
and
or
push
mov
dec
mov
sbb
add
dec
cs
and
push
rol
dec
mov
call
cmp
stos
leave
mov
cmp
xchg
pop
aas
jge
shr
or
mov
imul
xor
mov
or
stc
stc
stc
xchg
dec
shl
jl
lea
das
add
sbb
adc
nop
cli
sub
xchg
fs
and
or
xor
mov
push
inc
xchg
mov
xchg
and
lods
add
fistp
es
ss
nop
retf
loopne
sub
or
inc
pusha
fdivr
or
iret
push
loop
scas
lods
std
jl
imul
jae
push
sbb
jge
add
enter
fwait
and
sbb
dec
push
imul
rcr
into
pusha
fist
mov
or
mov
in
cmp
jb
call
movs
jb
in
xchg
retf
mov
test
dec
xor
xchg
test
movs
test
dec
push
test
pop
cmp
push
lea
and
xor
lahf
dec
xor
and
loope
jmp
cmps
cmp
or
lea
nop
imul
js
pop
sbb
nop
xchg
mov
adc
sbb
pop
jne
mov
and
xchg
push
jl
add
xor
cmps
adc
inc
sub
shl
jl
jl
leave
test
rol
or
push
das
xor
jo
es
in
jo
je
cmp
xchg
push
mov
pop
movs
cmp
xor
sbb
or
dec
test
cmp
ins
ins
push
and
stos
push
xchg
sbb
pop
dec
xchg
xchg
pop
push
push
inc
dec
jb
movs
mov
cdq
movs
ret
cmp
xor
gs
mov
sub
mov
mov
xor
dec
mov
cmp
push
cmp
mov
and
sbb
and
sbb
sbb
jb
movs
jb
mov
adc
retf
adc
pop
xor
or
add
dec
sub
popa
leave
add
cld
cmp
xchg
xlat
inc
cld
cld
clc
cld
clc
cld
jns
lahf
xchg
add
cld
lock
repnz
push
repnz
cld
hlt
cld
call
add
fs
adc
in
or
cld
nop
xchg
jl
push
and
loopne
add
repnz
popa
imul
loope
xlat
add
retf
fdivr
fdivr
and
dec
mov
aam
test
xchg
enter
pop
int3
int3
ror
xchg
rol
gs
retf
cwde
mov
mov
xchg
pop
call
retf
test
jae
aad
and
push
aam
cld
mov
or
stc
push
test
gs
out
inc
mov
pushf
mov
rcl
cmp
test
stc
fst
dec
sahf
js
je
dec
sub
sbb
jo
cdq
in
and
shl
xchg
add
mov
pop
pop
clc
pop
cs
push
cs
mov
out
inc
pusha
frstor
movs
mov
pop
sub
xor
push
push
inc
movs
enter
inc
dec
dec
pop
es
inc
push
and
mov
mov
xor
cmp
iret
stos
sbb
inc
xchg
xchg
add
sub
and
in
leave
and
sub
imul
leave
and
xchg
sbb
mov
dec
es
jo
daa
and
xor
shl
sbb
push
sbb
adc
or
add
dec
jb
fs
or
outs
in
les
dec
dec
bnd
clc
sti
mov
sti
sub
cmps
add
shl
mov
cwde
clc
sti
lea
mov
cld
xor
fs
add
and
pop
enter
xor
xor
push
lea
inc
sub
xchg
dec
dec
dec
push
and
push
fs
push
ins
jo
xchg
leave
and
xor
ss
sub
scas
test
inc
popa
mov
mov
or
int3
adc
fs
dec
es
fmul
mov
cdq
loopne
popa
lock
xor
clc
add
sbb
or
adc
sbb
test
and
sub
in
xchg
dec
xor
inc
inc
dec
dec
dec
xor
and
push
pop
cdq
jbe
xchg
pop
ins
popa
jo
or
je
add
nop
inc
test
adc
fiadd
movs
lods
xor
mov
pop
repnz
inc
push
or
std
mov
jmp
ins
push
xor
xchg
xor
inc
sub
jb
push
call
xchg
inc
in
mov
cs
hlt
lock
xchg
fdiv
mov
leave
test
loopne
retf
dec
in
pop
aam
aam
es
nop
rcl
aam
xchg
retf
fmul
cs
enter
push
cdq
pop
rol
les
adc
les
sub
sbb
inc
adc
mov
adc
loop
jl
xchg
mov
cld
dec
or
sbb
cmps
cmp
xor
test
pushf
mov
lock
inc
fmul
mov
push
aad
sbb
and
jb
ins
add
std
pop
movs
xchg
xor
dec
cmp
mov
in
rol
js
jl
gs
out
add
leave
lock
nop
dec
sbb
sbb
xor
add
dec
and
dec
int
std
imul
fdiv
fsubr
sub
add
fistp
stos
mov
adc
xchg
loopne
jns
pop
inc
add
pushf
lea
ret
call
cli
(bad)
imul
jg
shr
es
call
mov
dec
jp
and
and
lea
fdivr
push
inc
mov
leave
ins
push
dec
aam
mov
fmul
jb
leave
fdiv
sar
inc
dec
sbb
cli
int3
rol
mov
inc
xor
enter
nop
add
dec
mov
or
xor
cmps
add
aad
and
add
clc
cmps
push
clc
xor
pop
xchg
ss
add
loopne
push
in
imul
cdq
in
pushf
mov
sti
nop
out
cld
xchg
mov
dec
jb
cwde
cwde
fld
mov
nop
out
mov
fcmovne
mov
movs
test
mov
dec
jl
mov
dec
pop
mov
add
fs
(bad)
inc
sti
sbb
push
retf
dec
shr
and
neg
or
adc
xor
xor
add
xchg
pop
pop
push
dec
jb
movs
rcr
xchg
pop
sbb
pop
push
push
xor
cmp
ror
in
adc
and
pop
in
pop
inc
xchg
add
ret
retf
and
inc
inc
es
xor
xor
and
dec
jb
movs
les
xor
xchg
ja
shl
imul
cmp
fs
add
push
xor
fisub
fs
imul
push
push
mov
fs
daa
mov
pushf
dec
push
in
mov
inc
dec
dec
mov
sbb
into
int3
in
jo
sbb
sbb
push
xchg
pop
iret
scas
bound
scas
sub
and
push
add
out
xor
jmp
enter
pop
into
(bad)
xchg
or
push
dec
adc
pop
sbb
add
sbb
movs
mov
mov
sub
iret
mov
push
jno
ja
add
mov
pop
xor
pop
sbb
into
cs
shl
adc
pop
(bad)
std
or
xacquire
les
jge
push
in
add
ins
dec
add
mov
mov
(bad)
pop
add
imul
cwde
jae
push
inc
xchg
sbb
and
and
enter
xchg
mov
(bad)
xchg
pop
sub
ficom
pop
and
inc
(bad)
dec
rcr
aam
mov
xchg
aam
dec
(bad)
xlat
es
addr16
xlat
or
add
ins
ins
nop
pop
cs
push
retf
fs
repz
popf
cmp
adc
add
test
dec
mov
and
or
aas
div
(bad)
out
in
nop
mov
(bad)
jl
and
cs
xchg
call
clc
add
ja
sub
ds
cmc
mov
add
dec
scas
fmul
clc
add
movs
add
inc
and
pop
jns
mov
jae
arpl
movs
mov
add
jo
pop
sbb
mov
ins
cmp
cmp
adc
inc
cmp
add
jno
mov
push
push
and
or
xor
cdq
fcom
loopne
inc
clc
cs
call
mov
dec
push
push
repnz
pop
ffree
mov
les
in
ss
push
leave
xchg
or
movs
and
sahf
addr16
enter
cmps
movs
imul
lahf
mov
jae
and
sbb
xchg
repnz
and
adc
daa
jo
inc
call
xchg
movs
int3
(bad)
es
int
jns
xchg
pop
pusha
pusha
aam
jb
movs
push
push
into
push
pop
xchg
retf
test
dec
iret
fs
retf
and
push
push
dec
push
imul
rol
es
xor
cmp
cmp
dec
out
cdq
inc
mov
sbb
bound
fdivr
xor
mov
xor
sub
rcr
add
cmp
pop
sub
sub
inc
dec
push
sub
mov
and
shl
lock
xchg
jbe
addr16
push
aad
(bad)
sub
push
add
outs
lods
sbb
inc
in
hlt
mov
mov
mov
add
shl
and
jo
loopne
repnz
cdq
movs
push
adc
(bad)
or
xchg
and
or
or
add
fs
adc
cmp
push
lahf
mov
push
xchg
xchg
ret
cmp
loop
add
add
pop
(bad)
aam
jle
call
or
mov
cli
adc
ret
cs
pushf
xlat
test
cmc
in
repnz
mov
es
mov
in
add
add
movs
pop
ja
push
mov
mov
push
sbb
rcl
cli
loopne
mov
inc
adc
fmulp
dec
adc
pop
sub
movs
iret
ins
cmp
adc
inc
cmp
sub
in
or
call
bnd
xchg
mov
push
sbb
scas
push
inc
dec
or
sbb
sub
loope
ror
pop
jne
sub
and
xor
sbb
es
dec
and
icebp
icebp
mov
aad
xor
outs
(bad)
repnz
xor
inc
test
xchg
fs
dec
sub
mov
pusha
out
cmp
inc
imul
cdq
inc
dec
sub
xor
push
push
pop
pop
dec
xor
and
fs
inc
ins
jo
outs
mov
adc
mov
xchg
ss
cdq
cmp
pop
inc
jle
jb
and
jecxz
cmovns
jle
mov
or
nop
dec
mov
mov
pop
add
dec
movs
ins
add
int
inc
or
test
dec
xor
dec
mov
add
or
or
fild
mov
sbb
sub
or
pop
and
jmp
scas
and
mov
adc
and
cli
add
outs
ret
push
mov
hlt
pop
imul
clc
js
retf
mov
xchg
iret
adc
jmp
test
pop
sti
sbb
hlt
ror
pusha
mov
xchg
inc
sbb
cwde
or
je
or
xor
push
push
sbb
pop
inc
and
sub
fisttp
(bad)
in
not
xchg
dec
in
push
cmp
fsubr
aad
lea
lea
test
mov
loopne
dec
sub
xor
fcomp
sbb
xchg
fcomp
fsubr
inc
add
cmp
mov
sbb
addr16
neg
dec
or
outs
sbb
xor
push
das
pop
lock
aam
call
bound
je
push
lods
pop
psubusw
sti
mov
or
clc
xor
sbb
out
adc
jmp
inc
adc
sbb
arpl
mov
xchg
pop
sahf
dec
cmp
inc
and
daa
or
out
add
int3
test
mov
and
jbe
lahf
cmp
add
in
in
dec
push
cmp
or
jne
(bad)
mov
loopne
push
add
or
pop
xchg
dec
xor
shl
push
imul
pop
push
ret
in
fdiv
lahf
dec
hlt
imul
lea
add
aas
test
fnstcw
stos
out
nop
mov
inc
(bad)
adc
add
dec
mov
sub
cwde
jb
push
inc
cld
mov
pop
in
xchg
ror
dec
push
clc
mov
bswap
push
hlt
dec
push
jns
dec
dec
mov
adc
sbb
mov
popf
sbb
pop
imul
cmp
pop
js
pushf
cld
lock
enter
shr
xchg
lea
add
and
sbb
aas
add
lods
xchg
aaa
push
or
mov
mov
popf
or
movs
sbb
test
das
pop
dec
xchg
dec
dec
pusha
inc
or
test
push
cmp
inc
mov
mov
mov
pop
repz
sbb
push
retf
sbb
fdivr
movs
fcom
movs
add
dec
in
outs
jo
inc
adc
(bad)
stos
movs
xchg
add
in
xor
xor
xor
cmp
adc
lldt
data16
mov
jo
and
adc
xor
outs
jb
std
xchg
in
(bad)
dec
push
sbb
test
cmps
add
dec
jae
push
pop
mov
popf
nop
in
arpl
sbb
xlat
pop
push
stos
add
ficom
leave
mov
push
or
mov
out
sbb
pop
jnp
mov
sbb
mov
sbb
and
inc
aam
daa
mov
aaa
mov
add
mov
or
xor
mov
and
mov
sbb
(bad)
stos
add
enter
loope
ja
sbb
add
mov
add
mov
xor
pop
loope
sbb
lds
rcr
and
mov
stos
ret
or
xor
sub
out
xor
push
adc
push
pop
jl
xchg
push
cmp
push
push
test
adc
retf
inc
jo
je
dec
in
pop
js
jl
push
cmp
sti
push
test
sbb
test
and
jo
in
retf
mov
jb
lods
test
push
push
test
lock
xchg
in
sub
movs
pop
les
xchg
nop
int3
mov
and
call
fadd
fsub
test
cmp
pop
sub
in
xchg
retf
inc
lock
nop
aam
lock
mov
mov
retf
inc
add
sub
xchg
retf
or
adc
mov
dec
in
mov
retf
test
or
and
out
sbb
and
sbb
movs
jb
cwde
xor
cwde
mov
call
cmp
or
inc
xor
and
jb
in
add
pop
sbb
cmp
mov
inc
sbb
xchg
push
push
cmp
test
sbb
movs
jl
sbb
and
add
xchg
inc
sub
out
nop
retf
mov
out
xchg
arpl
jo
in
mov
int3
xchg
push
pop
cmp
sbb
inc
sub
nop
retf
mov
jb
in
pushf
lods
mov
mov
push
adc
and
and
sbb
pop
or
add
jb
mov
retf
enter
(bad)
je
and
mov
inc
xchg
mov
sbb
ins
cwde
xchg
retf
enter
push
mov
inc
movs
cmp
pop
lods
push
mov
jb
xor
add
test
mov
les
and
enter
sbb
aam
gs
pushf
fmul
retf
and
in
and
push
add
pop
in
dec
sbb
inc
hlt
xor
in
jb
daa
cld
sbb
adc
and
out
mov
adc
sbb
xor
mov
retf
enter
cwde
xor
and
jno
mov
inc
push
gs
jb
dec
pop
cmp
pop
xor
fs
inc
and
push
mov
add
xor
loop
aad
xchg
retf
enter
mov
mov
fwait
sbb
xor
xchg
dec
jae
cs
ins
push
jbe
sub
push
imul
pop
call
mov
test
lods
xor
int
mov
and
pusha
shr
jle
xchg
gs
jns
jae
pop
pop
add
sbb
push
push
dec
pusha
adc
call
push
pop
pop
jae
je
arpl
push
pop
repnz
outs
gs
or
and
es
ins
mov
or
(bad)
data16
sbb
dec
loopne
jne
pop
push
jb
inc
ds
mov
imul
jmp
jg
retf
dec
mov
fs
gs
xor
jbe
jl
cmp
xor
pop
or
sbb
mov
mov
shr
inc
sahf
xchg
adc
aam
mov
inc
jns
aaa
pop
fs
push
jnp
push
inc
add
sbb
add
repz
dec
outs
or
test
add
jo
sbb
xchg
fcomp
fsub
dec
xchg
or
xchg
xor
or
(bad)
stc
shl
popa
fs
add
cmp
mov
xchg
pop
icebp
push
jb
or
xchg
das
or
xor
ret
sahf
popa
mov
mov
push
in
cmp
adc
xor
mov
scas
in
or
and
aas
repnz
nop
pop
test
jbe
outs
inc
lock
das
dec
aaa
pusha
adc
out
pop
mov
aad
cmps
inc
adc
xchg
pop
aas
adc
jb
push
(bad)
cmp
aad
inc
scas
inc
dec
or
(bad)
fwait
les
nop
jo
das
xlat
mov
dec
xor
push
sbb
imul
cdq
mov
pop
outs
sub
js
mov
call
lea
dec
pop
xor
push
dec
push
inc
lock
jle
or
push
push
idiv
inc
or
dec
push
imul
sbb
inc
imul
stos
fistp
pop
outs
outs
jo
inc
rol
rcl
dec
inc
dec
ins
cmp
sbb
push
push
pop
push
scas
and
(bad)
jne
ja
adc
lds
addr16
pop
cmp
inc
and
enter
or
pop
push
les
mov
mov
inc
push
push
adc
xor
and
outs
outs
je
jg
dec
pusha
mov
aas
scas
in
dec
and
sbb
xchg
mov
push
pop
jmp
pop
shl
pusha
arpl
add
and
arpl
push
inc
dec
inc
shr
push
inc
arpl
jae
push
loopne
(bad)
fs
loopne
xor
adc
or
mov
or
jb
das
addr16
mov
dec
pop
sbb
inc
int3
push
or
pop
xlat
and
fs
push
dec
stos
inc
xchg
jg
pop
or
push
dec
inc
adc
jp
push
movs
push
imul
sbb
(bad)
jg
push
sti
jo
dec
sti
mov
mov
call
push
cld
mov
push
ret
ins
and
or
cmp
push
scas
pop
fidiv
sub
cmp
mov
push
push
push
das
(bad)
leave
mov
xor
packsswb
xchg
outs
stos
cmp
xor
adc
dec
aaa
pop
outs
xor
and
ja
cmp
call
je
pop
scas
jae
pop
mov
adc
pop
ins
and
das
or
ins
inc
scas
out
mov
jle
ja
sbb
icebp
leave
sbb
mov
and
mov
push
out
xor
fild
mov
outs
xlat
xchg
xchg
mov
sbb
aam
xor
push
xchg
adc
ret
cmp
inc
dec
push
bound
and
mov
(bad)
jno
in
and
clc
je
ror
enter
rcl
popa
jl
nop
and
push
inc
and
rol
test
rcr
xchg
add
mov
ror
and
pop
mov
lahf
pop
mov
or
jbe
or
arpl
adc
sub
mov
dec
mov
or
sbb
or
je
push
push
push
outs
push
push
popa
add
ins
inc
adc
fst
out
or
sbb
pop
adc
aas
cmp
xor
push
add
lods
inc
jb
adc
mov
and
jge
stos
pop
in
mov
shl
inc
mov
push
adc
je
mov
mov
or
push
inc
cdq
stos
retf
sgdtd
push
dec
mov
add
out
jl
mov
lds
inc
dec
add
and
mov
test
scas
ffree
mov
pop
or
pop
xor
or
outs
in
sbb
sbb
loopne
add
xchg
test
xchg
out
lahf
mov
add
sub
jno
jmp
bound
sbb
or
in
or
dec
dec
ret
cmps
inc
xchg
inc
push
dec
es
and
jg
arpl
iret
rol
adc
inc
mov
lods
bound
lea
adc
and
bound
dec
ret
sbb
pop
je
lods
sub
push
or
es
ret
mov
(bad)
in
push
add
dec
inc
mov
fld
xchg
inc
imul
and
or
lock
inc
adc
(bad)
cmp
out
pop
daa
aad
mov
push
out
mov
push
hlt
dec
not
mov
jg
inc
adc
pop
call
cli
or
or
mov
and
adc
mov
mov
fcomp
sub
xchg
test
xor
lahf
repnz
enter
dec
mov
aas
add
dec
mov
aas
and
add
jmp
jnp
cmp
dec
xor
mov
push
sahf
idiv
inc
dec
out
out
push
jo
adc
sar
int3
mov
sbb
or
push
jne
lds
pop
dec
xor
int
push
mov
sbb
out
cld
test
adc
push
scas
add
scas
and
adc
push
dec
adc
add
dec
adc
adc
or
adc
movs
inc
mov
sbb
(bad)
cld
pop
call
repnz
mov
mov
mov
out
sub
dec
ins
out
jnp
sti
push
dec
fiadd
ss
push
xor
ficomp
fst
into
test
dec
add
into
push
pop
and
add
add
inc
inc
stos
push
inc
adc
xchg
push
sbb
dec
call
outs
or
push
lods
sub
add
imul
sbb
imul
add
and
or
dec
add
fs
lea
scas
clc
fisttp
mov
dec
jne
mov
pop
fdivr
cmp
dec
adc
lahf
inc
mov
mov
sahf
or
sbb
mov
retf
(bad)
push
sub
cmps
ins
adc
daa
xor
adc
movs
sub
test
lock
nop
xchg
mov
fist
inc
(bad)
rcl
jb
mov
clc
cld
loope
popa
jb
pop
repnz
sub
fdiv
and
inc
push
jno
adc
xlat
shl
jb
aam
daa
xchg
(bad)
adc
cmp
cmp
and
adc
push
lds
nop
mov
lds
adc
fmul
jnp
xlat
pop
daa
or
xlat
ret
in
loopne
sti
or
inc
(bad)
inc
fsubr
inc
enter
xchg
inc
cs
(bad)
fcom
js
and
outs
leave
xchg
push
inc
or
ins
sbb
in
loope
xchg
pop
sbb
sbb
cmc
fdiv
jae
inc
push
(bad)
dec
neg
clc
inc
adc
xor
and
or
add
xchg
xchg
fcom
push
aam
xchg
lock
(bad)
mov
jae
mov
sub
fidiv
pop
fistp
inc
and
mov
mov
movs
scas
hlt
outs
or
enter
xor
lock
lea
mov
fbld
or
aas
and
call
shr
sbb
and
ret
test
repnz
test
or
or
lea
pop
and
loop
mov
cmp
sub
or
pop
mov
cmp
sti
inc
jecxz
clc
add
sbb
retf
xchg
ds
sti
mul
sub
jle
ins
mov
adc
(bad)
push
push
ds
or
lock
int3
jecxz
sbb
sbb
cmps
int
cmp
test
add
mov
je
inc
mov
jne
psrlq
daa
add
cmp
or
(bad)
push
ss
fcmovnbe
jo
inc
mov
add
jp
jmp
jae
cwde
loope
mov
cmp
pop
in
push
sbb
xchg
or
out
pop
(bad)
push
sbb
mov
ret
ja
adc
jl
addr16
sti
in
pop
mov
sub
or
add
sbb
in
pushf
fild
sub
and
xchg
push
pop
rcr
pusha
ja
jns
scas
pop
add
add
add
pop
mov
dec
fadd
cmp
ins
and
sbb
cmp
test
adc
clc
sbb
(bad)
iret
or
ins
xchg
mov
daa
jb
add
inc
sbb
and
in
or
sbb
and
hlt
and
int
adc
sub
retf
and
adc
or
sub
js
jle
jo
jle
loope
and
add
xchg
loope
jnp
or
imul
int
imul
mov
dec
sahf
out
add
addr16
cmps
aas
in
dec
push
add
mov
add
adc
or
or
xor
sti
pop
inc
adc
adc
sbb
mov
pusha
rol
pop
sbb
add
inc
jae
and
outs
add
sbb
cmps
pop
rcr
pop
add
js
inc
jb
and
scas
rol
aad
adc
dec
sub
sysenter
je
fisub
ret
sbb
mov
or
jl
call
adc
xchg
and
sbb
xchg
push
mov
sbb
add
dec
test
adc
in
sub
mov
push
add
add
call
(bad)
mov
cmp
dec
or
xor
cmc
mov
or
mov
call
adc
icebp
lea
scas
pop
imul
dec
pushf
or
inc
and
and
loopne
xchg
call
retf
ret
jmp
add
add
cld
adc
add
retf
pop
adc
adc
xor
dec
add
sbb
daa
ldmxcsr
xor
jmp
iret
ja
in
nop
fdiv
fisub
xchg
pushf
cwde
add
scas
jnp
sbb
add
ja
lods
push
in
push
jl
add
dec
xchg
mov
mov
mov
xchg
mov
lahf
jb
inc
(bad)
jbe
xchg
push
push
rol
sub
sbb
adc
movs
pusha
(bad)
(bad)
in
stos
outs
movs
nop
daa
repz
mov
loopne
fwait
add
add
lock
inc
sti
cmp
push
es
enter
das
cld
out
cmp
pusha
das
pop
pop
not
lock
or
gs
in
adc
jmp
sbb
push
fst
xlat
lea
xchg
out
int3
adc
shl
lock
les
or
test
fdivr
jae
clc
pusha
enter
out
push
mov
lahf
je
pop
jae
imul
retf
mov
or
inc
ins
push
aaa
and
in
dec
cmp
js
jne
loope
lods
xchg
mov
clc
out
test
or
and
xor
xchg
std
push
push
or
clc
ret
sti
inc
dec
adc
or
push
xor
mov
and
mov
(bad)
nop
out
fwait
adc
outs
clc
ret
rol
mov
lahf
pop
sub
xchg
iret
movs
and
adc
mov
pop
mov
jae
and
sub
add
add
fsubr
stos
iret
pop
aam
fsub
add
(bad)
add
push
pop
arpl
xchg
iret
inc
dec
or
or
or
(bad)
in
jb
out
adc
fiadd
sbb
dec
mov
dec
retf
or
or
inc
push
add
adc
mov
(bad)
mov
mov
and
dec
jmp
jmp
xchg
sbb
movs
mul
adc
sub
mov
callw
add
mov
sbb
jnp
pop
clc
xor
jg
jne
push
daa
push
add
or
mov
add
pop
pop
pop
ins
loope
jg
add
xchg
or
scas
test
add
je
stos
push
addr16
or
pop
pop
or
inc
daa
add
lock
pop
push
inc
dec
push
pop
or
add
cmp
sub
jb
adc
mov
push
cmp
inc
mov
and
xor
lock
push
mov
iret
or
stos
lock
mov
ins
or
ret
imul
outs
xchg
repz
xor
inc
enter
out
adc
adc
mov
mov
sub
adc
(bad)
push
adc
shr
loopne
push
sar
sub
jl
push
lea
test
mov
add
popa
lea
mov
fmul
or
loopne
fcom
mov
leave
mov
lods
rcl
ret
pop
jecxz
ins
pop
sar
mov
test
leave
jmp
mov
sub
or
pop
xlat
inc
pop
jg
int3
sbb
pop
repnz
add
repz
aam
sub
mov
mov
repz
aam
mov
push
mov
xchg
cmp
or
xchg
retf
movs
push
or
adc
adc
jb
pop
adc
sbb
push
sar
dec
dec
pop
cmp
hlt
dec
push
adc
jg
(bad)
outs
imul
mov
js
into
mov
loope
bound
and
pusha
lods
inc
xchg
in
sbb
xchg
or
out
es
nop
sbb
inc
(bad)
ror
mov
ins
div
mov
adc
cs
fbld
mov
stos
lock
mov
mov
mov
mov
xor
jo
ds
lods
(bad)
add
and
repnz
push
and
shl
pop
ins
sbb
lods
sub
jmp
mov
retf
movs
add
fisub
out
(bad)
sbb
and
mov
push
mov
adc
dec
pop
inc
dec
mov
cmp
xchg
push
and
sub
cwde
and
push
dec
shr
lds
add
dec
inc
sbb
cmp
mov
pop
push
add
sbb
mov
dec
mov
sbb
cmp
sub
lods
repnz
inc
sub
mov
pop
inc
or
or
mov
addr16
mov
sbb
push
adc
xchg
xchg
jae
dec
or
idiv
dec
and
dec
cmp
xor
push
push
inc
cmp
dec
dec
inc
sbb
inc
fsubr
daa
push
dec
push
dec
dec
push
or
mov
out
or
pop
push
mov
stc
mov
lods
bound
pop
leave
cwde
cmp
lea
dec
(bad)
aad
bound
add
sbb
pop
pop
and
add
aad
pop
idiv
push
movs
es
cmp
stc
mov
sbb
test
xor
xchg
outs
pop
je
mov
test
inc
je
repnz
jmp
cmps
mov
mov
fiadd
push
and
xor
pushf
fdivr
inc
mov
in
push
in
dec
ins
mov
sbb
ins
shr
sbb
mov
mov
pop
xor
dec
add
jmp
sbb
pop
sbb
cld
fmul
cmp
and
sbb
mov
and
add
nop
add
leave
mov
adc
jno
loope
cld
pop
sub
das
fld
cdq
lods
mov
sub
mov
push
and
adc
hlt
movs
sbb
je
ret
jns
add
cmps
dec
push
ret
(bad)
retf
sub
ins
aaa
fnstcw
jno
jmp
add
ss
sub
inc
mov
mov
push
xchg
adc
hlt
push
ins
xchg
dec
ja
ss
inc
(bad)
out
sahf
out
stos
cwde
xchg
scas
movs
dec
xchg
sbb
mov
add
add
sbb
std
mov
pop
add
xchg
dec
int
pop
cmp
stc
add
sub
rcr
in
sbb
dec
add
lahf
pop
(bad)
and
pop
fmul
pushf
out
rol
lea
lock
sbb
sub
push
inc
and
and
call
je
and
call
leave
push
mov
addr16
mov
or
loopne
fs
das
or
sub
and
or
ret
test
mov
cwde
sub
cmp
and
and
call
mov
mov
xor
mov
lds
cmp
mov
jmp
and
pop
cmc
and
out
adc
mov
inc
push
in
jo
mov
out
jb
jmp
ins
dec
cld
push
aaa
test
jmp
icebp
xchg
(bad)
jmp
lea
sbb
(bad)
loop
pop
jmp
sbb
cdq
adc
push
rcr
adc
(bad)
sub
call
add
or
and
push
mov
sbb
pop
jl
or
scas
cmp
cmp
lods
jl
push
fcomi
or
test
or
inc
aas
fwait
rcl
and
pop
push
sbb
or
inc
inc
add
nop
add
mov
pop
out
xor
add
shl
push
add
adc
inc
nop
out
les
pop
adc
out
jge
xlat
jnp
call
and
mov
sbb
outs
scas
mov
nop
cmps
xor
(bad)
add
pslld
je
add
out
sti
outs
dec
add
push
or
and
or
je
mov
ret
loop
xor
mov
mov
adc
dec
push
icebp
add
and
and
sub
fisub
and
inc
adc
neg
std
add
(bad)
cmp
das
ja
cmp
outs
out
jbe
sbb
xchg
addr16
inc
pop
push
(bad)
pop
repz
outs
jo
addr16
and
xor
sub
xor
or
pop
and
ja
dec
push
jge
sub
fs
sub
je
or
std
or
imul
mov
and
inc
outs
inc
aas
ror
add
and
iret
or
dec
dec
push
les
or
dec
jmp
push
les
pusha
sub
rol
enter
jo
adc
ja
add
test
rol
(bad)
lods
pop
mov
mov
dec
dec
sbb
shr
inc
pop
xchg
aam
retf
cmp
inc
jl
mov
in
or
test
sbb
dec
xor
aam
ds
rcr
call
lods
outs
aaa
sbb
adc
add
mov
mov
lea
push
or
leave
add
sub
fbld
stc
jno
xlat
cmp
call
bound
rcr
add
jg
sub
(bad)
retf
and
jle
icebp
mov
jb
(bad)
ins
sar
pop
ret
fs
dec
jne
push
dec
adc
mov
inc
push
lock
and
mov
dec
inc
push
mul
push
mov
ror
push
pop
inc
push
aam
push
cld
hlt
pop
jp
push
or
pop
add
adc
retf
inc
cmp
sbb
and
fxam
test
jecxz
mov
inc
sbb
mov
xchg
xor
test
xchg
push
push
adc
jp
imul
add
add
jmp
rol
ins
or
mov
mov
adc
jnp
jae
outs
or
xor
mov
mov
pop
clc
jnp
xor
jb
inc
sub
sbb
leave
xchg
push
xor
fisttp
mov
pop
inc
addr16
inc
and
mov
adc
adc
nop
das
add
dec
(bad)
nop
into
push
call
add
popf
inc
add
jo
mov
loopne
mov
pop
cmps
xchg
bound
dec
lahf
add
mov
add
xchg
and
lds
push
mov
pop
aam
clc
jbe
dec
ret
aam
push
ret
shr
mov
xor
popf
ror
lock
add
js
cmp
lock
call
push
or
xchg
enter
pop
push
enter
add
mov
arpl
and
in
xchg
aas
inc
adc
sub
ins
imul
fst
jne
push
es
es
test
inc
mov
mov
adc
inc
mov
out
test
pop
xlat
int
push
mov
sbb
test
(bad)
test
test
pusha
or
leave
int
xchg
rcl
movs
sub
sub
add
pushf
out
dec
scas
nop
dec
pushf
mov
mov
push
add
pop
enter
out
xchg
nop
retf
sar
lock
mov
ficom
and
ret
and
mov
mov
mov
out
dec
push
ret
daa
add
idiv
cmp
inc
add
(bad)
sbb
mov
retf
xor
sbb
xchg
in
cmp
rep
dec
sbb
loope
and
nop
call
mov
(bad)
popa
addr16
adc
test
fild
call
inc
into
or
inc
jo
and
je
js
dec
pop
jb
ss
add
sbb
loope
shl
and
sub
push
and
fs
mov
pop
pop
popa
adc
jbe
shl
daa
sub
pop
jne
ss
inc
mov
adc
sbb
outs
xchg
mov
pop
cmp
mov
in
lea
dec
mov
pop
loopne
or
sub
xchg
mov
jno
(bad)
in
inc
and
jecxz
(bad)
cmp
jmp
lock
repnz
out
inc
(bad)
sbb
push
cwde
mov
pushf
mov
xchg
imul
add
xor
mov
or
add
movs
push
mov
inc
dec
mov
shl
jb
lock
pusha
and
adc
and
dec
inc
(bad)
sub
ja
xor
enter
in
in
and
and
xchg
adc
mov
add
xor
in
call
in
call
jnp
cmp
loopne
add
add
pop
(bad)
ja
pop
xchg
ror
or
inc
xchg
popf
inc
lock
or
cmp
mov
add
fld
cwde
jl
mov
inc
fidivr
push
in
mov
les
jmp
mov
xlat
cmps
scas
cmp
adc
ror
push
pushf
sbb
jg
test
call
mov
mov
in
add
loopne
lods
push
mov
dec
pop
pusha
jmp
(bad)
and
fadd
fisttp
pop
clc
xor
mov
sbb
addr16
inc
or
add
mov
retf
and
in
adc
xor
punpckhbw
push
push
sbb
lock
adc
in
add
sub
xchg
adc
fisttp
and
enter
daa
add
movs
imul
int3
and
mov
push
add
pop
push
jecxz
dec
mov
xchg
xor
test
push
dec
push
mov
dec
ret
call
adc
adc
xchg
cmps
jmp
or
jge
add
xchg
ja
jo
test
mov
mov
gs
xor
iret
mov
mov
(bad)
movs
movs
push
outs
or
imul
fisttp
ror
mov
jnp
dec
mov
cld
inc
test
or
sub
jge
sar
(bad)
and
aad
pusha
icebp
pop
or
mov
pop
dec
inc
les
dec
add
or
aaa
fist
mov
add
je
lods
push
mov
and
add
push
jo
aam
daa
pop
xor
pop
dec
adc
and
mov
sub
sub
sub
add
push
lods
and
fist
shl
cmp
mov
pop
mov
rol
cs
retf
adc
push
or
add
adc
aam
in
nop
add
lahf
xlat
lahf
jo
pop
mov
dec
pop
repnz
popa
ja
loop
jne
(bad)
mov
xor
add
retf
sub
ror
push
add
in
jp
call
fadd
jl
loope
add
gs
and
add
dec
inc
xchg
cld
cmps
rol
add
add
test
pop
out
int3
(bad)
addr16
and
shl
push
adc
cmp
cld
mov
loopne
test
rcl
pop
xchg
mov
and
mov
mov
pop
test
shl
jo
sbb
inc
jecxz
sub
pop
ret
jge
sbb
mov
sub
or
xor
or
mov
xor
loopne
in
lock
mov
repnz
out
or
pop
imul
outs
enter
cs
add
xor
aam
push
cwde
add
add
adc
gs
pusha
sbb
pop
dec
push
mov
popa
jb
mov
cld
and
js
movs
sbb
xchg
xor
dec
or
(bad)
mov
ja
retf
push
push
mov
dec
dec
pop
pusha
fs
ins
jo
js
xchg
dec
dec
jl
aaa
push
bound
ficom
or
mov
jae
les
xchg
and
and
or
sbb
mov
repz
or
dec
cmps
inc
and
enter
inc
or
loope
pop
sub
cld
sub
xchg
pop
or
mov
push
cmp
or
inc
stos
add
pop
dec
mov
cmp
cmp
dec
sar
or
jo
loopne
mov
xchg
fadd
fmul
and
xchg
fcom
mov
push
jb
rcl
int3
xchg
sbb
leave
mov
repnz
enter
scas
les
loope
lahf
(bad)
add
add
std
lock
mov
push
xor
mov
mov
mov
or
xchg
pop
div
and
cwde
in
nop
add
mov
test
test
jecxz
test
test
outs
and
sub
movs
test
sub
mov
daa
ds
jno
pusha
mov
mov
or
cwde
jp
push
xchg
inc
retf
mov
in
fs
xchg
test
dec
mov
mov
dec
sub
movntps
dec
sbb
in
sub
push
or
jne
and
mov
push
and
sub
daa
pop
cmp
repnz
push
pop
arpl
cwde
clc
test
outs
dec
push
dec
sub
dec
in
dec
jle
fwait
mov
xchg
push
out
test
adc
xor
mov
test
adc
jb
push
pop
fdivrp
lock
push
fisttp
pop
cmovbe
movs
or
and
xor
push
ins
ins
push
scas
push
cdq
fs
scas
xchg
or
and
add
pop
pop
pop
mov
or
pop
jne
adc
and
imul
push
dec
mov
dec
sub
mov
push
cmp
xchg
xchg
test
dec
mov
add
test
jo
jmp
inc
inc
jne
loope
adc
add
fcom
test
jmp
and
leave
and
xor
scas
and
dec
mov
pop
jmp
push
sbb
movs
add
stos
cmc
and
shr
add
sub
popa
stos
or
in
aam
fstp
and
add
test
inc
sbb
adc
sub
out
sub
add
dec
es
dec
pop
or
cmp
in
xor
pushf
dec
cmps
mov
add
mov
leave
mov
dec
and
shr
and
pop
pop
daa
push
test
push
or
jmp
push
push
sub
adc
mov
ins
cmp
je
out
fld
nop
inc
adc
mov
adc
mov
arpl
jns
imul
add
jl
jl
mov
movs
jl
lock
sub
mov
jo
in
out
mov
je
push
test
mov
add
mov
inc
push
mov
push
pop
pop
push
cmp
jb
mov
and
dec
inc
xor
nop
pop
and
inc
lea
cmp
test
sbb
sub
cmp
jns
xchg
sub
inc
cmp
dec
pop
pop
adc
xchg
or
bound
xor
fbld
jl
push
mov
xchg
lock
push
fild
clc
adc
fbld
pop
jns
hlt
fist
lock
xchg
sub
outs
icebp
data16
popa
adc
or
mov
jnp
dec
xchg
icebp
(bad)
pop
inc
and
ja
push
xchg
and
or
push
shr
es
in
icebp
dec
mov
xor
popf
adc
cdq
in
add
in
call
jo
cmp
movs
push
push
mov
cmp
add
nop
sbb
sub
lods
in
push
sbb
xchg
cld
sbb
loopne
ret
loopne
add
add
mov
cmp
xor
mov
pop
xchg
xlat
add
test
rcr
test
push
movs
movs
int3
int3
enter
mov
adc
and
sub
(bad)
les
mov
sub
sahf
pushf
add
mov
mov
mov
or
mov
test
arpl
xchg
pop
pop
enter
rol
xchg
cli
cmp
bound
lock
add
pop
or
sbb
dec
xor
pop
(bad)
es
pop
adc
add
xor
sahf
and
jae
(bad)
jbe
push
fmul
js
mov
iret
jmp
push
shr
cmps
inc
outs
or
xchg
test
sbb
or
inc
cmp
in
and
and
sbb
xor
in
call
fimul
pop
hlt
sbb
mov
xlat
in
push
nop
and
cmp
xor
in
in
sub
and
in
in
sbb
adc
ud1
adc
or
xor
and
jae
lea
out
cmp
not
mov
pusha
cmp
adc
xor
or
pop
sbb
dec
cmp
sub
adc
jb
adc
lock
enter
movs
hlt
hlt
hlt
hlt
dec
inc
fadd
sub
in
inc
or
jne
jl
stc
mov
into
movs
movs
in
xlat
adc
mov
push
lods
xor
out
popf
xor
je
and
call
mov
jl
sbb
daa
add
and
cdq
sub
mov
dec
cmp
loop
inc
clc
cmp
inc
add
(bad)
adc
int3
and
stos
and
int
push
push
sub
or
mov
jne
xor
cdq
inc
pop
mov
cwde
add
call
shr
adc
jmp
outs
mov
mov
cmp
jp
scas
adc
daa
dec
cmp
es
imul
xlat
jb
rol
retf
clc
icebp
(bad)
(bad)
xchg
lock
daa
int
call
adc
lock
dec
inc
push
push
nop
add
push
push
push
push
dec
fiadd
pusha
cmp
mov
dec
jno
push
icebp
(bad)
jmp
jns
jns
mov
pop
push
cmp
fcomp
shrd
lea
sub
pop
pop
cdq
sar
and
enter
retf
and
int3
rcl
pushf
xor
push
xchg
xor
cwde
inc
add
jns
fwait
pusha
es
mov
mov
es
mov
dec
push
les
fs
xchg
addr16
pop
mov
fs
xchg
data16
mov
xor
sub
add
addr16
mov
and
sbb
lods
mov
daa
int
movs
test
inc
in
leave
lods
add
pop
mov
and
dec
sbb
mov
(bad)
push
mov
mov
push
pushf
xchg
cmc
nop
movs
popa
test
out
(bad)
push
mov
scas
xlat
and
adc
scas
push
fwait
inc
cmp
pop
mov
nop
cmp
aaa
cwde
mov
rcr
nop
xchg
xchg
xchg
cwde
clc
push
shl
sbb
loopne
repnz
in
fs
push
movs
fmul
push
mov
pop
cmp
cmp
test
xor
and
in
das
pop
add
call
cwde
or
shr
adc
push
mov
sar
cmps
ror
push
dec
stos
rcr
mov
jl
adc
daa
rol
lods
test
cmp
mov
add
int3
xchg
pop
or
jecxz
imul
(bad)
mov
xor
js
xor
pop
xor
xor
push
enter
cmp
mov
cmp
nop
stos
in
cmp
rol
das
inc
or
je
enter
jnp
xchg
pop
lds
cmp
repnz
or
cmp
(bad)
(bad)
shl
sbb
jecxz
mov
push
pop
adc
jmp
outs
inc
cmps
jge
xlat
pop
in
dec
xchg
imul
inc
cli
fmul
and
and
fnstcw
fadd
mov
rcl
inc
popf
pushf
mov
push
sub
clc
pop
jne
adc
and
int3
jns
sub
enter
adc
hlt
jmp
dec
fwait
add
shr
enter
enter
inc
(bad)
out
addr16
xchg
sub
pop
mov
sub
je
test
xor
outs
mov
xchg
enter
sub
lock
and
sub
in
inc
mov
sbb
dec
mov
push
mov
xor
xor
cmp
pop
pop
cmp
test
sbb
and
or
clc
in
es
jne
clc
cwde
sub
pmullw
daa
shl
in
push
fmul
inc
sub
cmp
das
fnsave
and
inc
ss
sub
pop
mov
inc
stc
sub
mov
out
in
or
cmp
repnz
daa
cmps
cmp
jns
push
ds
or
sbb
or
push
sub
in
ds
push
or
mov
cld
inc
or
fcom
loope
leave
in
aaa
icebp
push
in
adc
lock
xor
xor
hlt
push
or
xor
sbb
xor
aas
repz
sbb
mov
or
cmps
aad
inc
add
fmul
inc
in
and
stc
cmp
pushf
xor
adc
(bad)
loopne
xchg
sbb
xchg
fdivr
or
cmp
fiadd
push
repnz
dec
leave
sub
inc
test
add
mov
or
das
pop
leave
fbstp
bound
inc
mov
push
xchg
sbb
fs
shl
add
cmp
xor
das
dec
fprem
mov
clc
mov
xchg
pop
xor
inc
push
or
xchg
and
test
scas
inc
dec
mov
fdivr
inc
fmul
add
fcom
call
sbb
push
jmp
mov
int3
mov
sbb
xor
fisubr
lock
lods
inc
inc
adc
pusha
cwde
dec
jmp
mov
or
mov
or
xor
je
sub
les
ins
push
add
or
mov
rol
dec
cmp
mov
mov
dec
(bad)
xchg
(bad)
pop
or
sub
mov
mov
push
inc
sub
push
fs
mov
leave
jae
mov
lods
pusha
stos
jl
jl
add
into
dec
jbe
and
inc
xchg
adc
xor
pop
mov
gs
mov
push
cmp
jge
inc
movs
push
aaa
fild
fwait
inc
inc
fnstcw
jb
sbb
cmp
add
and
inc
xchg
in
xchg
mov
and
sar
and
mov
mov
pop
dec
movs
mov
mov
mov
mov
cmp
adc
icebp
nop
test
mov
jl
fs
inc
cmp
test
xor
call
out
je
fs
outs
jo
lock
mov
add
je
push
push
dec
or
retf
aaa
mov
dec
mov
(bad)
movs
outs
sub
hlt
and
mov
xchg
and
pop
pop
or
pusha
(bad)
shr
outs
imul
js
call
stos
ss
retf
rcl
xchg
pop
push
shl
sub
push
pop
cmc
pop
xor
xchg
and
dec
push
add
dec
ja
jnp
pop
or
and
sbb
out
rol
jg
add
pop
or
je
or
mov
cli
inc
inc
sahf
push
in
jmp
add
dec
jb
xchg
cmp
inc
inc
cmp
xchg
nop
jb
dec
mov
mov
imul
test
xor
nop
js
adc
in
nop
mov
fsub
popa
je
rcr
enter
dec
push
les
mov
enter
pop
fcom
popa
push
cmp
in
sbb
leave
das
pop
inc
push
push
scas
and
retf
movs
cdq
inc
loopne
(bad)
nop
pop
cs
aam
int3
pop
and
les
pop
xchg
aaa
jmp
push
inc
repz
push
hlt
ins
sbb
test
push
inc
xchg
sbb
aad
mov
enter
daa
enter
ss
enter
mov
jmp
clc
clc
mov
xchg
dec
sub
enter
scas
mov
add
and
push
retf
dec
ror
jne
xor
adc
mov
cli
push
xchg
sbb
aam
in
inc
outs
loop
test
(bad)
gs
in
lahf
in
inc
add
in
xor
pop
sub
mov
fld
push
mov
mov
add
or
in
add
push
loope
pop
enter
dec
out
add
pop
repnz
int3
daa
cmp
test
mov
and
dec
rcl
clc
retf
loopne
add
push
pop
mov
sbb
outs
xchg
xor
or
push
iret
cld
add
add
push
lea
outs
sbb
add
dec
add
or
std
ins
jno
shl
pushf
es
xchg
sub
push
xchg
add
inc
test
loop
pop
cmp
mov
test
inc
lock
xchg
mov
push
inc
popf
aaa
test
pop
sbb
daa
mov
push
cdq
(bad)
jmp
mov
repz
je
lea
js
and
outs
add
and
push
in
and
and
xchg
pop
fs
int3
stos
bound
pop
in
pop
in
dec
and
dec
test
(bad)
call
add
mov
pop
and
adc
or
fisub
nop
inc
dec
or
adc
pop
ror
mov
xor
lea
cdq
js
jns
xor
and
dec
pop
scas
inc
(bad)
and
outs
xchg
je
sbb
fist
sub
icebp
and
(bad)
jb
xor
inc
add
ins
and
pop
sti
popf
and
xlat
movs
jb
shr
rol
xchg
xor
sbb
adc
cs
pop
sbb
adc
movs
jge
and
or
shr
dec
or
push
js
xchg
or
movs
jb
retf
xchg
xlat
clc
(bad)
and
xlat
hlt
(bad)
(bad)
adc
cs
int
add
or
inc
dec
jb
push
cmp
adc
pop
inc
iret
ins
jo
(bad)
push
bnd
dec
add
push
jns
mov
(bad)
in
jl
lods
int3
fmul
add
dec
loopne
mov
cmp
dec
and
sbb
loope
enter
sub
js
dec
aam
jb
and
rol
or
cdq
in
fmul
push
enter
int3
int3
aam
xchg
sbb
test
in
rol
lahf
and
dec
inc
scas
in
(bad)
mov
mov
push
or
mov
pop
xor
leave
mov
nop
dec
cs
rcl
aas
inc
inc
je
xor
xor
movs
and
add
pushf
mov
inc
cs
push
pop
xor
jmp
xor
je
adc
cld
in
test
xlat
inc
nop
xchg
push
jg
fiadd
xchg
lea
pusha
imul
int3
push
xor
xchg
or
xor
scas
rol
pop
test
and
ins
sbb
(bad)
and
dec
lock
or
pop
jmp
jbe
clc
pop
seta
pop
sub
imul
mov
(bad)
adc
dec
test
jl
push
add
(bad)
push
jns
xchg
pop
inc
movs
mov
dec
mov
mov
mov
mov
int3
imul
cmps
sbb
loopne
in
dec
les
nop
mov
in
inc
es
adc
sub
adc
dec
bound
jbe
mov
push
sub
ss
push
xor
cmp
and
mov
pop
dec
popf
mov
jae
aam
push
(bad)
loopne
cmp
xchg
jnp
dec
or
inc
sub
jg
pop
faddp
inc
mov
add
jo
jno
dec
imul
xchg
imul
inc
and
adc
xor
jg
inc
add
repz
pop
and
or
cmp
xchg
dec
push
test
imul
add
bound
stos
aam
adc
or
jl
jns
inc
in
call
inc
cdq
add
inc
dec
inc
lock
pusha
mov
and
and
mov
int
pop
pop
inc
xor
(bad)
loope
adc
pop
dec
cli
adc
cmps
aam
sbb
(bad)
repnz
(bad)
(bad)
lock
in
pop
loopne
mov
pop
outs
cwde
loope
cdq
scas
shr
xor
jecxz
mov
pusha
sub
loopne
add
xor
fstp
or
pop
sbb
add
push
inc
ror
in
cdq
push
and
jl
fild
jl
and
or
pusha
sbb
js
popw
and
jmp
ja
add
inc
or
jnp
(bad)
(bad)
sub
xchg
retf
ins
pushf
add
mov
mov
mov
xchg
clc
dec
inc
xor
inc
lea
dec
mov
test
sub
hlt
pop
gs
fcom
inc
or
inc
mov
ins
or
aam
xchg
or
dec
or
xchg
movups
jmp
pop
test
adc
les
call
push
dec
aam
mov
add
nop
ss
dec
aam
inc
and
pop
or
add
(bad)
or
jne
jno
pop
dec
ss
and
dec
shl
ror
enter
xor
call
push
mov
leave
lock
in
push
fsub
into
test
inc
ds
inc
int3
cmps
pop
xor
adc
pusha
xor
in
mov
(bad)
fdivr
fs
dec
jmp
sbb
xor
rol
loopne
mov
imul
nop
dec
dec
pop
pop
popa
outs
in
leave
js
fcomip
ins
scas
mov
js
xchg
out
shl
add
sbb
imul
test
and
loopne
pop
dec
or
ror
xor
hlt
hlt
lock
sbb
pop
xchg
aad
or
jns
aaa
fwait
adc
test
and
sbb
in
push
push
jecxz
pop
sub
xchg
sub
cld
not
inc
mov
and
push
prefetch
adc
xor
xlat
enter
pop
mov
sbb
jae
dec
sub
add
shl
xchg
pop
mov
mov
dec
sbb
adc
daa
jns
loop
(bad)
adc
dec
push
lods
punpcklbw
(bad)
movs
cdq
jbe
adc
mov
dec
ror
push
pop
inc
dec
call
inc
dec
call
cmp
hlt
mov
sbb
mov
pop
mov
lock
lahf
push
adc
shl
iret
and
or
mov
inc
jo
xchg
push
sbb
xor
in
mov
and
dec
or
xchg
mov
es
sub
bound
les
push
dec
push
lods
adc
(bad)
test
xor
xchg
in
and
(bad)
cmp
or
lods
and
mov
cmps
cmps
pushf
dec
fadd
pushf
lock
inc
neg
test
push
mov
jp
sub
in
sahf
inc
sub
jecxz
pop
push
mov
sub
fnsetpm(287
leave
mov
test
xor
push
call
enter
and
retf
ret
in
xchg
aaa
test
out
inc
adc
cmp
mov
sbb
repnz
test
sbb
std
inc
adc
dec
push
push
sbb
cdq
in
(bad)
call
sbb
movs
cdq
loopne
in
loopne
push
add
xor
bound
or
inc
lahf
leave
fcom
nop
xchg
xchg
xor
nop
dec
mov
inc
or
in
mov
inc
push
mov
or
push
or
adc
xor
sar
add
call
test
je
imul
aam
and
jno
loopne
movs
cdq
in
fcomp
fmul
jmp
adc
fdiv
popa
adc
out
das
adc
sbb
ins
rol
ins
inc
push
sub
imul
call
and
loopne
test
and
xor
outs
fadd
test
hlt
adc
adc
add
bound
sti
mov
enter
add
add
lea
aas
xor
jmp
mov
adc
push
pusha
dec
jae
mov
dec
push
cmp
lods
inc
dec
call
cwde
nop
mov
pop
add
push
cdq
xchg
sub
int3
js
pop
in
mov
ror
lea
add
(bad)
and
jb
jbe
xchg
imul
lds
jecxz
mov
out
sbb
pushf
add
push
shl
cdq
(bad)
and
hlt
or
nop
push
mov
push
mov
xor
add
lds
clc
adc
int3
inc
ret
out
and
xchg
cmp
add
cmp
jbe
cwde
push
cld
scas
mov
(bad)
pop
aad
xchg
cs
dec
mov
rol
mov
pop
idiv
in
adc
je
push
test
scas
test
nop
jno
xchg
add
out
fisub
dec
mov
xchg
movs
das
push
test
dec
jae
lods
add
movs
imul
add
pop
mov
and
je
mov
dec
ja
sbb
add
adc
adc
jo
int3
xor
jle
mov
out
mov
jg
jge
enter
inc
jb
inc
(bad)
lea
cmp
loopne
add
xor
mov
ins
bound
ror
push
pop
mov
inc
push
shl
or
cmp
ins
xor
push
cdq
inc
test
enter
and
inc
xchg
sbb
inc
xor
add
lea
or
jmp
sub
inc
loopne
mov
push
rcl
sar
cmp
into
and
outs
jbe
call
pop
pop
(bad)
or
sub
aam
ins
or
int
adc
fld
cwde
pusha
fst
icebp
sar
addr16
ins
sbb
and
cmp
(bad)
int3
out
movs
add
inc
cld
or
jns
or
inc
add
sbb
or
add
jl
pop
sub
lods
and
shl
ss
test
out
adc
cmp
xchg
mov
sub
nop
and
jg
ret
push
or
jb
mov
scas
cmps
int
les
add
mov
or
inc
(bad)
pop
scas
sbb
das
ficomp
sbb
(bad)
pusha
das
enter
pop
pop
outs
mov
outs
mov
and
mov
jb
jae
inc
rol
mov
enter
out
jbe
adc
fist
xchg
or
jo
pop
nop
mov
push
ins
xchg
test
pop
jmp
dec
fsubr
dec
outs
repz
adc
push
sar
push
xor
and
popa
mov
jo
or
icebp
push
outs
mov
shr
inc
push
shr
je
in
jno
cvtps2pd
lods
outs
cmps
mov
and
stc
ds
ja
mov
fcomp
aas
adc
mov
mov
adc
pop
push
pop
cmp
test
lds
push
fld
xor
and
push
mov
cmps
daa
xchg
je
sub
xor
call
sub
lea
mov
mov
inc
bound
jmp
mov
adc
jmp
in
cmp
mov
mov
push
imul
push
aad
xor
sbb
add
xchg
hlt
(bad)
pop
pop
or
sbb
or
sahf
ja
jmp
mov
push
cmp
mov
lea
inc
imul
sub
mov
fwait
mov
push
ror
jmp
loope
xor
xchg
sbb
add
(bad)
pop
push
inc
fcmovb
adc
adc
cmp
icebp
jbe
ret
adc
cmp
cs
dec
iret
or
icebp
dec
mov
enter
enter
jb
add
push
shl
ja
into
add
fs
and
push
pushf
cmp
fadd
lds
push
hlt
int3
mov
sbb
test
js
and
push
add
loope
mov
inc
dec
out
arpl
int
daa
jb
or
int
mov
push
ss
fstp
or
(bad)
jmp
adc
retf
and
in
jecxz
cmp
movs
in
push
jae
add
mov
outs
jecxz
add
in
lahf
and
in
data16
inc
inc
push
jns
jae
rcl
cmp
push
(bad)
rcl
inc
jp
fild
jne
pop
rol
(bad)
mov
jg
mov
test
adc
mov
clc
jb
xchg
inc
fs
cwde
and
dec
pop
hlt
call
jmp
fdivr
jge
adc
sub
sbb
push
lahf
fisttp
cmp
jb
cmp
sub
out
sti
add
jmp
ss
jb
or
ds
add
cmp
cmp
cmp
je
sbb
aaa
and
mov
inc
dec
cmp
push
xor
xor
sub
or
add
fnstcw
out
inc
cdq
or
inc
xchg
retf
adc
xchg
cmp
std
xchg
mov
int3
mov
mov
pusha
mov
sub
addr16
and
pushf
pusha
adc
pop
fmul
mov
add
sti
inc
add
and
sbb
push
push
adc
lods
retf
mov
mov
ja
jl
dec
jmp
add
sub
jmp
cli
jb
jbe
aad
cmp
pusha
sub
js
push
in
push
mov
jns
fst
jl
jb
or
cmp
cmp
rcl
popf
ins
cmp
jo
ins
cmp
dec
in
jl
fadd
daa
pop
inc
mov
add
retf
cs
sub
push
ins
test
jae
daa
jmp
fadd
or
inc
push
mov
ins
fsub
push
loopne
inc
fcomp
inc
popf
nop
popa
inc
lahf
add
movs
out
daa
pop
mov
popa
mov
mov
and
enter
adc
scas
pop
loope
and
cmova
loopne
or
in
popa
jne
popa
gs
sbb
pop
xor
jmp
into
inc
mov
arpl
dec
push
pop
xchg
rol
pop
das
jbe
or
ret
ret
cmp
hlt
mov
cwde
push
in
or
jno
xor
adc
sub
inc
add
sbb
daa
pop
push
aaa
sub
push
das
cwde
and
push
je
mov
mov
out
int
jne
lods
adc
xchg
scas
mov
sub
mov
loop
je
adc
(bad)
(bad)
enter
xor
lea
or
sub
sub
mov
mov
idiv
push
fistp
pop
pop
pop
ds
fcomp
fcmovu
pop
repnz
sub
arpl
and
push
test
pushfw
inc
(bad)
lds
pop
push
or
lods
mov
mov
and
jp
mov
sub
push
add
retf
jp
sub
and
or
cli
push
adc
call
mov
sbb
push
push
push
push
imul
repnz
adc
cmp
scas
in
mov
in
cmc
mov
in
div
sbb
xchg
out
push
and
xor
test
mov
and
add
sbb
and
ficom
xchg
stos
gs
sbb
mov
pop
xchg
mov
mov
or
mov
pop
lock
pop
cmp
push
push
or
push
imul
and
xor
cld
push
clc
inc
(bad)
cmp
enter
sbb
mov
fcom
xor
sub
add
dec
into
or
adc
xor
push
test
mov
and
and
(bad)
xchg
neg
and
rcl
sub
pop
pop
cs
push
arpl
and
cli
xor
es
nop
or
inc
out
add
inc
and
or
test
ror
cli
push
push
mov
jnp
mov
outs
cld
xor
sbb
and
add
jne
mov
test
aam
retf
mov
adc
add
inc
or
nop
dec
sbb
dec
es
and
push
cdq
adc
inc
icebp
cmp
add
push
sbb
xor
mov
data16
adc
and
sbb
inc
not
inc
cmp
lds
cmp
or
popf
pushaw
pop
mov
mov
mov
ins
or
xor
xchg
aaa
xor
push
(bad)
sbb
cmp
retf
add
dec
clc
add
outs
aam
shr
leave
ss
jle
xchg
dec
add
xchg
or
iret
inc
cmovae
pop
pop
push
hlt
sti
gs
sbb
jp
adc
dec
dec
jge
pop
jbe
lock
push
sub
jl
inc
xor
popf
push
mov
xchg
mov
adc
inc
adc
pop
push
icebp
add
push
mov
mov
je
xor
xor
push
adc
addr16
mov
aam
adc
dec
fcomp
loopne
mov
sbb
lds
add
nop
pop
jo
adc
jbe
out
and
les
or
push
add
push
pop
pop
repnz
fistp
pop
adc
add
ss
aaa
in
cs
je
rol
and
dec
cmc
cdq
iret
iret
iret
call
cmp
ja
dec
int3
or
call
add
or
or
adc
adc
push
pop
sbb
sbb
push
mov
in
jns
mov
jg
pushf
pusha
add
jns
out
int
sti
adc
sub
outs
test
retf
jae
es
jns
out
mov
fdivp
iret
repz
or
sbb
andnps
and
and
sub
add
cdq
inc
es
add
push
nop
or
or
cdq
inc
or
es
or
or
push
cmovo
nop
or
adc
add
es
adc
push
nop
or
sbb
cdq
inc
sbb
es
or
sbb
jmp
daa
push
bound
push
pop
dec
and
and
inc
push
cdq
and
and
sbb
cmps
cmp
xchg
mov
(bad)
jmp
cmc
add
call
jmp
mov
loop
imul
mov
js
imul
jne
rcr
nop
dec
push
inc
fcom
push
fisubr
jmp
jb
inc
add
mov
or
sbb
adc
inc
ret
and
bound
mov
mov
call
outs
add
in
add
xchg
xchg
sbb
jnp
inc
fcom
mov
cs
in
sbb
and
nop
out
add
add
or
mov
or
(bad)
nop
push
ja
push
mov
dec
xchg
(bad)
pop
or
inc
pop
icebp
retf
mov
xchg
add
sti
ss
sub
push
std
fsubr
pop
and
in
cmp
adc
pop
mov
push
sbb
(bad)
nop
outs
addr16
mov
aad
ret
add
(bad)
fst
adc
nop
push
push
add
fld
js
adc
jno
or
sub
cmp
fld
cmp
nop
in
add
mov
ja
xchg
ins
sar
jne
mov
add
push
sub
sbb
xchg
push
outs
dec
dec
add
pop
push
cld
dec
in
shl
or
dec
or
repz
jmp
ds
ret
loop
in
movs
into
out
adc
add
mov
repnz
and
mov
push
in
xchg
outs
call
dec
call
nop
in
fsubr
cmp
xchg
sbb
mov
adc
lock
hlt
inc
mov
hlt
xchg
add
in
add
clc
mov
push
in
push
mov
leave
dec
add
test
adc
cmp
xchg
not
xchg
sbb
fs
or
stos
retf
adc
out
inc
xor
imul
ins
inc
add
add
sysenter
mov
mov
jo
ins
jmp
push
jo
pusha
addr16
(bad)
lods
xor
xor
ins
xchg
out
repnz
or
in
cmp
rcl
inc
add
das
sbb
jmp
xchg
scas
xor
sahf
into
movs
nop
or
xlat
inc
adc
cmp
repz
test
lock
adc
adc
pop
neg
add
cmp
xlat
mul
and
sub
and
ret
cmps
in
enter
jge
add
mov
stos
add
iret
(bad)
jb
xor
adc
fadd
mov
int3
pop
sbb
xchg
(bad)
pop
int3
adc
push
mov
sbb
retf
mov
lods
popf
test
nop
or
scas
push
mov
nop
push
adc
adc
rcl
cmps
xor
mov
add
inc
xchg
xchg
mov
add
add
sti
pushf
dec
(bad)
push
jmp
lods
outs
mov
inc
dec
clc
mov
cmps
jne
mov
test
or
mov
push
scas
nop
jb
inc
push
push
xchg
dec
adc
fwait
and
mov
fs
imul
int3
cmp
popa
sub
and
xchg
sub
mov
nop
nop
dec
push
mov
cmc
dec
call
sbb
rol
dec
mov
sbb
mov
push
sub
aas
dec
pop
push
aas
sbb
and
sub
adc
test
add
adc
stos
clc
ror
inc
or
into
sub
dec
and
and
gs
xor
sbb
mov
lock
xor
imul
inc
lock
lods
lea
fcomip
mov
push
adc
or
jne
sbb
dec
add
cmp
or
add
movs
lea
xchg
outs
jne
or
test
ins
rol
lea
pop
test
jg
ja
and
aam
pop
xor
push
pop
push
pop
popa
pop
mov
push
lea
pop
icebp
inc
xor
shl
xlat
push
cdq
in
xchg
test
lods
mov
in
mov
loope
jge
push
test
adc
test
or
les
pop
cmp
add
push
and
sub
out
or
or
or
ja
or
xor
sub
and
scas
lock
mov
mov
rol
aas
retf
xor
sub
(bad)
adc
add
inc
dec
jne
int
cdq
in
inc
jecxz
mov
xchg
pushf
xchg
fwait
push
sahf
pushf
mov
mov
push
(bad)
ds
test
les
sub
add
aad
adc
fwait
sub
xchg
mov
nop
xchg
cwde
cwde
mov
push
add
loopne
popa
cmp
sbb
xor
mov
and
or
xor
es
test
popa
cmp
mov
cmp
add
int3
(bad)
adc
xchg
mov
call
in
add
inc
sub
pop
mov
aam
push
fstp
fwait
sbb
and
xchg
push
pop
mov
mov
ja
jb
mov
fmul
pop
dec
shl
nop
xor
in
scas
rcr
nop
add
pop
xchg
mov
jmp
sub
xchg
fistp
jge
push
and
add
pop
jle
mov
or
fs
enter
jle
inc
or
inc
retf
and
xchg
sbb
jno
ror
nop
xor
xor
cmp
sub
push
adc
(bad)
inc
or
and
jmp
jb
and
xor
cmp
push
rcr
adc
and
fcom
or
pop
mov
add
and
das
sub
lods
mov
adc
fistp
not
xlat
add
mov
pusha
sbb
mov
inc
or
or
int
enter
(bad)
sub
jmp
aaa
out
and
jo
outs
lea
bswap
xlat
call
(bad)
mov
loope
imul
add
pushf
inc
push
mov
jmp
jb
hlt
xchg
out
mov
ins
enter
(bad)
(bad)
sub
jo
xor
lds
lock
xor
adc
add
xor
push
and
cmp
sub
test
dec
(bad)
cmps
pop
enter
jo
mov
in
inc
outs
sub
dec
push
movs
test
dec
pop
push
in
mov
xchg
pop
je
lods
jno
jno
xor
addr16
pusha
xchg
mov
adc
sub
cmp
mov
xor
jne
(bad)
(bad)
outs
pop
imul
xor
pop
test
fbld
lea
iret
push
ins
daa
sub
bound
sub
push
xchg
nop
push
sub
xchg
add
add
test
adc
outs
dec
test
push
pop
sbb
outs
mov
dec
or
jns
dec
js
sub
test
in
pop
repnz
sahf
int3
ds
or
leave
jno
and
cld
and
dec
and
test
inc
ins
pop
js
push
cs
xor
pop
push
mov
pop
outs
inc
pusha
sbb
add
push
enter
cmps
xchg
push
mov
mov
xor
mov
sahf
inc
xchg
xchg
aas
adc
pop
lahf
cld
mov
enter
push
jo
cdq
repnz
cmps
icebp
rol
mov
fs
sbb
xor
xlat
xchg
imul
add
xor
mov
movs
std
out
test
sar
test
mov
adc
test
adc
cmp
xchg
fs
je
bound
sub
fs
shr
int3
movs
fadd
and
rol
xchg
rcl
cs
xchg
cs
and
lods
mov
pop
cs
lea
lea
scas
leave
aam
(bad)
std
sbb
pop
in
std
enter
xor
cmp
push
push
xor
sub
aad
mov
push
inc
dec
cmps
push
div
and
add
pop
mov
and
pop
jmp
lds
xchg
in
call
(bad)
(bad)
ficom
and
es
add
jle
lock
push
dec
and
and
or
or
or
push
pop
mov
mov
int3
int3
shr
add
and
sbb
and
add
and
mov
out
mov
mov
cdq
test
lods
movs
cdq
in
inc
movs
mov
es
add
mov
cwde
in
cdq
in
mov
in
inc
push
mov
stc
add
sub
popa
inc
lea
xchg
and
lea
shl
inc
and
sub
arpl
jo
push
add
sub
sub
fs
xchg
or
pusha
add
retf
and
aaa
or
and
add
xchg
retf
push
dec
sub
and
push
dec
mov
inc
inc
inc
inc
dec
and
test
adc
xor
xchg
retf
xor
and
sub
es
sub
cs
push
inc
sbb
sbb
or
enter
sbb
adc
loopne
inc
adc
jne
jb
nop
or
or
pop
es
add
jns
xchg
add
(bad)
in
iret
retf
cld
(bad)
clc
(bad)
xor
dec
outs
mov
hlt
push
push
jne
mov
sbb
xor
xor
imul
es
(bad)
loopne
adc
dec
fdiv
fsub
fcomp
push
fdiv
pop
xchg
pop
es
aam
mov
add
and
jb
(bad)
shl
mov
sar
in
mov
and
and
sbb
or
test
xchg
or
xchg
retf
nop
cmp
xchg
xchg
mov
mov
mov
push
test
adc
jl
or
xchg
xchg
xor
cs
js
jo
dec
gs
ins
cmp
fcom
push
pop
es
pusha
fs
dec
sub
pop
cmp
pop
test
pop
push
fs
retf
push
cmp
and
jne
mov
dec
dec
cs
push
inc
cmp
cmp
or
enter
cmp
xor
loopne
inc
xor
jne
jb
nop
sub
sub
pop
es
and
jb
xchg
and
sbb
dec
sub
sbb
push
rol
adc
adc
or
in
and
adc
inc
add
cs
or
add
std
inc
cld
std
sub
push
jne
xchg
pop
jb
std
lock
hlt
std
jb
push
fst
and
add
std
cdq
movs
jb
in
loopne
loopne
pop
ins
or
push
fdiv
adc
aam
fsub
nop
xchg
xchg
fmul
add
int3
and
xor
rcl
enter
imul
dec
mov
push
add
cmps
add
mov
leave
mov
dec
jb
mov
mov
mov
lods
test
push
sbb
test
push
dec
enter
pushf
pushf
push
inc
es
nop
dec
cs
xchg
cwde
cwde
xchg
xchg
or
sub
and
mov
or
retf
xchg
add
or
jl
jb
pop
je
jo
or
and
dec
or
sbb
push
push
or
nop
inc
pop
pop
pop
test
push
push
push
sub
movs
xor
push
add
nop
and
out
pop
imul
push
pop
dec
add
dec
push
dec
cmp
test
add
add
dec
jg
pop
enter
aas
add
mov
movs
enter
mov
rcr
pop
fsubr
clc
and
in
or
adc
jb
pop
xor
inc
pop
jb
pop
dec
pop
push
js
jb
pop
jb
mov
pop
mov
mov
in
mov
jb
or
aas
adc
and
pop
jb
sub
jb
pop
jb
pop
fs
and
je
xor
lods
and
xor
mov
xor
in
or
idiv
push
je
adc
xchg
pop
add
push
in
jo
and
mov
fiadd
jbe
fidiv
xlat
es
push
fsubr
aam
ss
inc
cld
mov
adc
adc
and
loop
dec
repnz
pop
(bad)
dec
(bad)
dec
in
sub
nop
pop
sbb
in
push
imul
addr16
int3
xlat
imul
leave
loope
mov
and
nop
jb
cmpxchg
xchg
xchg
jo
ja
cmp
adc
(bad)
fld
pop
sub
test
xchg
sbb
ins
add
cmp
and
arpl
mov
or
call
or
mov
inc
popf
loopne
mov
push
push
mov
xchg
and
(bad)
dec
add
adc
aaa
jl
mov
pop
inc
xor
(bad)
pop
push
or
loope
mov
adc
cdq
stc
loopne
dec
xchg
push
lods
nop
mov
es
popf
pushf
repz
adc
pop
data16
leave
inc
push
das
push
mov
fiadd
jmp
push
dec
push
aaa
push
(bad)
xor
in
jp
or
mov
pop
sub
bound
jo
repnz
jp
or
cmc
mov
cmc
rol
or
hlt
xchg
mov
outs
or
rcl
pop
push
or
inc
cmp
push
loope
and
cmps
popa
nop
sub
push
sub
or
dec
cmp
mov
xchg
cmp
test
mov
mov
lahf
xchg
int
rol
les
dec
sub
enter
(bad)
or
dec
or
call
nop
add
lds
(bad)
pushf
mov
sbb
pop
enter
jno
pusha
fs
mov
test
sbb
mov
call
add
ins
mov
mov
pop
jp
inc
mov
add
inc
shl
hlt
or
pop
fisubr
push
cld
clc
mov
mov
das
clc
cmp
push
ja
or
jae
imul
add
call
sub
sub
ror
imul
pop
xchg
cdq
dec
inc
inc
gs
jns
aaa
inc
cld
adc
pop
cs
push
dec
cld
les
sub
pop
jge
cs
pop
fcom
mov
out
mov
xor
or
push
dec
and
jbe
dec
jne
cmp
add
ins
mov
loop
sub
inc
mov
xor
sbb
mov
add
push
stos
sar
imul
mov
retf
inc
inc
mov
fmul
mov
mov
mov
xchg
mov
xchg
xor
imul
inc
xchg
js
pusha
lods
xor
icebp
adc
mov
rcl
inc
adc
xor
or
dec
repnz
cmps
pop
add
sbb
sbb
inc
inc
sub
loope
jge
scas
outs
sbb
pop
mov
jecxz
add
and
out
xchg
push
nop
cld
add
fadd
mul
cmp
aam
loope
iret
inc
or
rol
gs
push
fisub
loop
mov
pop
mov
test
mov
nop
rcr
inc
mov
pop
mov
les
mov
lock
sbb
outs
or
and
mov
pop
pop
and
or
dec
inc
fwait
les
inc
cdq
cmp
lock
es
js
jne
add
movs
mov
icebp
push
jmp
sbb
xlat
aas
pop
pusha
mov
and
xchg
sbb
mov
pop
in
cmp
and
pop
mov
leave
mov
(bad)
mov
cmc
cdq
mov
and
aam
movs
test
lea
or
in
bswap
lods
lods
add
fdivr
xchg
pushf
dec
mov
pushf
xor
dec
int
dec
adc
mov
and
push
push
nop
les
cli
xchg
and
lahf
fcomp
les
inc
ds
jno
pop
push
add
movs
sar
push
imul
sub
mov
loope
push
push
in
xor
in
adc
jmp
shl
enter
push
pop
repnz
or
test
adc
test
aam
xor
popaw
mov
ror
xor
sub
cmp
mov
mov
nop
dec
sub
inc
in
xor
iret
mov
or
movs
inc
adc
sub
jnp
or
nop
sub
jecxz
retf
dec
rcr
and
or
pop
pusha
inc
cs
stos
sub
aad
scas
sub
ret
ret
or
dec
(bad)
mov
xor
mov
dec
pop
push
cmp
xor
mov
adc
jl
sbb
dec
loope
add
xor
addr16
inc
cld
and
sub
dec
push
mov
mov
imul
dec
or
test
pusha
and
add
test
add
sub
sbb
cmc
pop
pop
dec
gs
add
inc
adc
add
es
and
ins
add
aas
arpl
push
repnz
dec
mov
or
jl
xor
mov
dec
or
push
iret
inc
inc
xchg
sahf
mov
xchg
mov
mov
pop
xchg
dec
push
lds
sbb
and
mov
xor
pusha
(bad)
lds
dec
pop
call
or
mov
and
mov
jno
adc
cwde
pop
and
cmp
ret
lods
sti
sbb
inc
pop
sti
(bad)
fs
aas
cmp
enter
ds
push
out
movs
(bad)
test
sub
push
push
pop
imul
cwde
pushf
pushf
cmp
sti
jne
fld
ret
dec
and
ror
adc
adc
pop
out
pop
or
inc
push
jg
and
pop
and
cmp
in
mov
fild
mov
ret
pop
fwait
jae
rol
cmp
add
fsub
js
aaa
xchg
jbe
mov
loopne
push
mov
and
or
bound
ins
aaa
pop
adc
mov
pop
jmp
test
ficomp
or
sbb
xchg
ss
pusha
mov
inc
gs
retf
push
pop
pop
dec
cdq
in
dec
or
push
push
retf
and
and
jns
inc
xchg
dec
(bad)
add
mov
jmp
dec
pop
sbb
adc
jb
in
xor
jbe
mov
jge
cmp
dec
sbb
in
jbe
xchg
xor
xor
or
cmps
rcl
add
xchg
sub
sub
and
loope
cmp
xor
fs
adc
jbe
sub
sbb
add
movs
add
fwait
add
or
or
cmp
dec
cs
add
std
dec
sub
xchg
repz
fcom
inc
pop
mov
in
in
nop
push
mov
call
adc
inc
into
sub
push
cmp
sbb
(bad)
fdiv
xor
xor
jb
int3
adc
rol
nop
nop
std
jmp
daa
stc
popa
(bad)
aam
fdivr
jmp
xor
imul
push
mov
dec
mov
mov
mov
or
lods
lods
push
inc
sbb
mov
push
enter
add
retf
test
mov
mov
mov
call
mov
test
mov
je
fwait
js
inc
cs
js
jl
pop
xor
add
mov
mov
test
cmps
lods
and
push
or
fs
cdq
or
adc
xchg
sar
pop
xchg
dec
cs
pop
pusha
pusha
dec
push
cdq
in
lock
xor
adc
pop
dec
ins
or
ja
int3
fcomp
and
jne
cmp
leave
in
cmp
inc
dec
adc
push
arpl
cmp
sti
retf
movzx
xchg
pop
es
add
cmp
nop
cdq
repnz
adc
lods
sbb
inc
cs
sbb
sbb
and
xchg
push
mov
adc
xchg
and
hlt
lea
xchg
xor
cmp
xchg
cld
xchg
(bad)
leave
push
xchg
cld
clc
test
cld
cld
cld
cld
add
dec
add
xor
imul
mov
cli
sbb
or
mov
in
outs
enter
in
lock
into
call
cld
bound
sbb
loopne
pop
enter
fdivr
(bad)
dec
loopne
push
mov
enter
inc
add
cdq
mov
adc
cmp
xchg
pop
sub
pop
push
mov
in
jns
and
movs
lods
lods
in
mov
test
mov
add
fs
mov
test
movs
test
and
xchg
test
lods
loopne
xor
fwait
inc
pushf
fwait
xchg
leave
mov
xor
leave
and
xchg
pop
imul
xor
mov
scas
sbb
test
or
pop
pop
xor
les
enter
push
es
xor
pop
dec
pop
pop
mov
pop
pusha
pusha
push
xchg
pop
es
add
bound
cdq
xchg
movs
cmp
jb
add
dec
cs
in
dec
dec
bound
mov
xor
sbb
xor
test
xchg
leave
mov
or
pop
xchg
sub
mov
movs
push
lock
xor
sbb
pop
or
scas
rcl
xchg
xor
test
jns
mov
cld
shr
mov
cmp
and
or
rcl
retf
cld
sti
add
retf
pop
inc
jle
bound
sti
rcr
clc
sti
pusha
inc
enter
lock
and
fldcw
movs
loopne
nop
pop
xchg
in
adc
call
pushf
call
sti
sbb
xor
das
repz
sub
cdq
adc
and
js
(bad)
sar
fstp
sub
repnz
or
in
dec
aaa
mov
arpl
cwde
ins
or
fst
adc
enter
inc
push
sbb
xchg
int3
adc
mov
pop
add
es
mov
xchg
pop
rol
clc
imul
paddusb
xor
lock
or
retf
adc
xor
pop
cdq
movs
repnz
mov
mov
xchg
push
repnz
xchg
sbb
xchg
sbb
pop
sbb
cmp
xor
mov
mov
mov
fadd
test
add
cmp
loopne
jnp
sub
sti
adc
dec
inc
enter
mov
sbb
pop
out
pop
enter
in
loope
lods
and
dec
clc
cld
xchg
fcom
add
dec
xor
and
adc
adc
and
sbb
or
cld
push
pop
dec
cmps
imul
push
or
mov
dec
push
pop
pop
inc
cs
jo
dec
fwait
in
sub
test
fist
pop
mov
enter
lods
cmp
pop
sbb
cdq
and
aam
xchg
dec
mov
in
lock
enter
hlt
xchg
clc
add
xor
inc
jo
std
adc
and
adc
std
sub
in
(bad)
inc
in
xor
and
inc
sub
nop
sub
or
mov
pop
enter
or
mov
add
mov
mov
and
pop
jb
loopne
call
shr
jbe
loope
inc
nop
mov
inc
or
(bad)
jmp
rol
push
aas
cmp
dec
cmps
sbb
dec
es
fs
dec
push
push
pop
cdq
fs
dec
pop
pusha
fs
xchg
dec
es
mov
xchg
xor
test
dec
jb
movs
xor
sub
adc
jecxz
stos
retf
dec
push
or
dec
mov
dec
stc
dec
lds
sbb
push
push
enter
cmp
aam
ret
mov
push
ins
cmp
lods
or
pop
lods
push
inc
mov
retf
cli
pop
mov
lea
lea
inc
loope
mov
dec
push
(bad)
fist
scas
push
sbb
or
ss
inc
cmc
cmp
sub
test
mov
or
push
mov
or
add
push
in
data16
adc
sbb
push
sub
rcr
lock
adc
repnz
xor
cmp
ss
push
sahf
adc
mov
sahf
adc
in
test
xchg
cwde
cmp
lods
ins
and
inc
lods
pop
jmp
xchg
movs
dec
xchg
xchg
jl
adc
or
sub
sbb
xor
mov
xchg
push
nop
addr16
mov
adc
inc
or
imul
pop
outs
fucomi
add
ins
mov
xchg
pop
or
in
repnz
and
arpl
sub
ins
loopne
jle
in
das
icebp
ror
je
pop
xor
jo
add
sbb
mov
loopne
stos
dec
add
or
sbb
xor
aam
jge
imul
fisubr
xchg
imul
push
rcl
sahf
xor
xor
and
aad
in
add
pop
clc
inc
add
mov
xchg
adc
or
out
xchg
sbb
leave
dec
dec
dec
sbb
push
dec
push
push
jmp
pushf
or
out
add
inc
add
cld
xchg
dec
sub
lock
(bad)
in
xor
pop
(bad)
test
dec
sub
enter
adc
mov
sub
and
xor
and
icebp
pop
cdq
and
mov
and
adc
xchg
pop
adc
xchg
retf
repnz
dec
push
mov
and
adc
pusha
and
dec
repz
cld
(bad)
popf
add
adc
push
or
hlt
iret
hlt
dec
dec
sbb
hlt
push
nop
and
push
in
cld
and
cmc
fsub
sub
loopne
push
sub
mov
and
inc
adc
add
and
xchg
pusha
pushw
mov
mov
iret
repz
xor
mov
adc
or
aad
and
push
inc
mov
sbb
outs
fwait
dec
movs
clc
sbb
lods
and
pop
shr
cwde
js
push
xor
xchg
sub
mov
push
inc
rcr
iret
sub
inc
push
dec
nop
mov
stc
out
mov
sbb
and
dec
pop
js
xor
retf
inc
mov
in
mov
dec
gs
test
push
jns
pop
sbb
cmp
ins
fs
dec
sub
ins
cmp
pop
pop
jne
jl
fldenv
(bad)
sbb
loop
xor
pop
mov
cld
cmp
xchg
dec
push
adc
gs
dec
sub
cmps
or
add
pop
enter
clc
sub
nop
pushf
add
lea
mov
sbb
jmp
xor
pusha
mov
adc
sub
pop
enter
inc
cmps
sub
xor
das
cmp
std
and
cmp
retf
xchg
std
dec
mov
out
push
hlt
xor
in
add
jmp
lock
popa
pop
add
sub
xor
call
sub
(bad)
dec
adc
xor
and
push
leave
xor
cld
adc
add
sub
or
mov
cmps
add
and
nop
out
and
jns
and
sbb
sbb
add
nop
sbb
icebp
cwde
add
or
in
mov
adc
mov
or
cmp
icebp
iret
in
ror
or
cmp
leave
and
sbb
add
adc
dec
nop
push
add
sbb
xor
das
les
mov
xchg
call
ror
das
test
sar
pop
hlt
std
adc
hlt
and
addr16
xchg
retf
clc
fadd
dec
push
mov
fsubp
dec
sub
fdivr
adc
jmp
mov
xchg
dec
push
cmp
add
les
jmp
stc
pop
jb
imul
add
jns
add
hlt
jnp
lods
and
out
inc
fdivr
xchg
pop
inc
(bad)
std
push
push
loope
das
fcomp
dec
mov
ror
adc
mov
test
in
dec
dec
dec
out
inc
dec
cdq
rcl
shl
leave
dec
mov
(bad)
mov
nop
outs
aam
xor
sub
lods
mov
je
xor
or
mov
or
pushf
cs
scas
sbb
jmp
aad
fsub
sbb
or
in
lock
in
and
xchg
cld
in
add
mov
jmp
push
stc
ss
add
outs
add
aas
xor
nop
std
sub
inc
outs
and
xor
in
dec
int
xchg
mov
test
mov
lods
push
xor
nop
(bad)
xchg
mov
dec
shl
cmp
cld
or
out
mov
push
adc
test
jmp
mov
cwde
cmp
test
or
out
sbb
and
dec
fdivrp
lods
nop
adc
ins
scas
sbb
inc
mov
dec
jge
movs
pop
inc
popf
add
repz
or
aam
repz
(bad)
mov
cmp
and
daa
icebp
sub
mov
xor
dec
sub
shl
push
push
inc
loopne
enter
xchg
add
push
inc
ror
jb
sar
cld
dec
push
dec
test
int3
mov
push
sbb
shl
push
xor
and
pop
hlt
sbb
icebp
idiv
dec
mov
and
sub
outs
pop
fsub
jb
or
mov
adc
dec
sbb
(bad)
inc
push
in
mov
fst
pop
fwait
sbb
and
xchg
lock
retf
jnp
js
mov
or
inc
movs
sbb
xchg
psubsb
inc
xor
scas
or
adc
and
fstp
lods
xchg
dec
pop
dec
jne
stc
or
fucomp
int3
inc
shl
jno
rcl
xchg
jae
mov
daa
add
jl
inc
stc
imul
and
push
cld
dec
jmp
xor
adc
mov
xchg
mov
fucomip
es
adc
adc
xchg
adc
jno
adc
xor
xchg
cld
jmp
push
adc
sub
rcr
cmp
ins
add
cmp
lahf
clc
push
mov
jns
loopne
pusha
and
mov
sahf
in
or
or
xlat
jmp
push
pop
nop
daa
int
cmp
mov
nop
setbe
fs
add
in
es
add
add
add
sbb
and
mov
js
adc
mov
add
ret
out
rol
mov
fcomp
mov
ret
pop
(bad)
lahf
pop
fild
sub
les
pop
or
call
std
mov
mov
aad
sbb
in
sbb
push
mov
push
shr
fs
(bad)
dec
sub
in
call
push
adc
sub
hlt
(bad)
(bad)
call
or
add
ja
mov
mov
mov
adc
dec
mov
add
test
xor
loopne
xor
inc
adc
jb
dec
inc
inc
inc
inc
xlat
frstpm(287
add
add
sbb
and
mov
stos
sub
xor
in
in
enter
cmp
cmp
popa
and
xchg
xor
nop
out
or
call
inc
sub
mov
and
jmp
mov
cmp
inc
sbb
sub
pop
test
mov
or
repz
add
add
push
mov
inc
scas
(bad)
inc
dec
lds
mov
das
or
lea
rol
add
sti
sbb
or
mov
inc
add
movs
movs
mov
call
mov
push
pusha
lea
push
cmp
adc
xchg
add
mov
mov
mov
push
xchg
and
pop
movs
mov
sub
mov
or
and
cmp
dec
call
cwde
in
pop
dec
add
sbb
mov
mov
push
inc
fiadd
add
stc
inc
lgdtd
loope
and
jnp
mov
aas
mov
xor
lds
cmp
adc
rcr
ror
ret
cmps
mov
nop
jmp
xor
mov
mov
sub
and
repnz
adc
jecxz
cli
(bad)
add
pop
mov
mov
and
dec
dec
inc
jg
add
inc
pop
rcr
fs
(bad)
cdq
adc
ret
pop
test
jecxz
add
mov
adc
fs
dec
or
in
add
xchg
inc
cmp
pop
es
sub
inc
cs
sub
bound
or
out
enter
and
pop
and
or
sbb
push
add
jbe
or
out
pop
sbb
and
in
dec
movs
dec
adc
adc
push
jb
adc
pop
push
jns
and
push
or
push
test
and
sbb
loope
pop
jb
mov
add
push
jo
or
or
xchg
pushf
in
hlt
(bad)
sbb
in
sbb
dec
push
inc
nop
lea
or
pusha
xchg
inc
and
in
(bad)
gs
add
aam
and
xor
gs
fcomp
and
dec
cs
and
enter
and
sub
stos
retf
mov
in
xchg
int3
and
sub
pop
enter
mov
inc
dec
aas
and
in
push
enter
add
in
mov
sub
xchg
push
and
pop
sub
mov
inc
pushf
daa
pushf
push
sub
jnp
in
add
fsub
sub
test
xchg
cwde
(bad)
xchg
pop
pop
xchg
js
sub
xchg
fmul
or
dec
sbb
and
add
fadd
ror
mov
xor
dec
ret
and
adc
pop
sub
push
jb
pop
dec
jl
daa
(bad)
hlt
mov
mov
xchg
push
jno
je
cdq
xor
pop
pop
fisubr
ins
dec
gs
jo
pusha
sub
pusha
std
xor
movs
and
mov
das
push
aam
inc
inc
sbb
xor
dec
ror
inc
jnp
lods
push
test
popa
dec
xor
enter
cs
shl
sbb
outs
sub
js
fnstenv
cmp
test
jo
sub
sbb
or
or
or
lea
and
ins
sbb
cmp
data16
sub
fmul
xor
mov
gs
dec
ret
xchg
and
and
sub
enter
add
(bad)
sbb
ja
ror
ds
movs
bound
rcl
dec
xor
xchg
hlt
and
nop
or
pop
aaa
or
movs
jb
adc
adc
xchg
and
or
clc
std
aam
bts
sub
lea
mov
dec
rcr
or
mov
cmps
cwde
jo
dec
in
cld
pop
and
push
call
mov
mov
popf
aam
pop
cmp
cmp
nop
pcmpgtd
xchg
ss
and
pop
pushw
aam
pop
add
pop
rcl
leave
cmp
and
push
imul
push
add
fadd
cmps
adc
and
inc
frstor
cmp
mov
or
ret
cmp
outs
test
(bad)
int3
lock
sbb
call
cmp
sub
mov
push
add
iret
call
inc
std
loop
add
fwait
ss
bound
cld
mov
bound
frstor
mov
add
test
mov
sbb
cmp
dec
stos
enter
push
jg
aas
pusha
xor
pop
sbb
lds
jg
mov
mov
and
pushf
jnp
jb
add
cs
sahf
mov
in
inc
fdivr
jne
pop
enter
enter
or
fcomp
mov
push
jg
or
jmp
push
fs
ss
sub
xor
and
je
pop
pop
fdiv
cmc
xor
xor
add
mov
xor
mov
jl
jae
add
icebp
dec
test
jg
stos
add
out
sub
gs
xor
push
jne
sbb
mov
daa
(bad)
xchg
daa
pop
popa
pop
dec
cmp
inc
push
cdq
cdq
push
and
das
or
pop
enter
and
sub
cmp
in
xor
jecxz
or
movs
push
ret
fld
popa
adc
fsincos
(bad)
sub
mov
sti
add
mov
mov
xchg
dec
loopne
sbb
sbb
add
sub
cmp
jo
mov
inc
add
sbb
push
and
(bad)
adc
pop
cmp
cmp
push
sbb
dec
push
nop
xchg
sub
add
in
xchg
xchg
bndldx
cld
imul
xchg
movs
sub
xchg
jo
jne
stos
sub
add
sbb
mov
sbb
jge
cli
push
pop
xor
out
jns
push
imul
fcom
test
jecxz
popf
adc
outs
add
ror
dec
outs
int3
mov
inc
pop
jo
lods
jno
pop
mov
movs
sbb
fdivr
and
mov
in
cli
push
or
je
cmp
fs
daa
mov
mov
sbb
sbb
xor
add
sbb
shl
and
xor
sbb
xor
movs
and
mov
leave
and
mov
mov
pop
cs
pop
stos
test
sbb
sahf
cmps
fld
push
sbb
out
inc
fidiv
push
mov
jae
icebp
add
push
cmps
cmp
mov
je
mov
cmp
xchg
xchg
mov
push
cs
cmps
add
cmp
das
add
test
xor
dec
gs
je
je
movs
rcr
jle
jo
jo
push
call
dec
xor
ds
fs
mov
(bad)
adc
aad
adc
xor
and
test
pop
lock
sub
push
es
movs
and
and
mov
(bad)
cld
mov
adc
pop
js
mov
mov
(bad)
imul
jne
jb
xchg
test
imul
cmp
dec
iret
sub
cli
in
cmp
mov
mov
add
(bad)
add
xchg
icebp
psllw
jne
imul
jno
push
cmp
xor
daa
and
or
nop
sbb
add
mov
inc
ret
add
dec
les
das
les
add
out
pop
add
(bad)
leave
and
imul
imul
and
das
jne
sbb
ins
dec
int3
rcl
jae
in
adc
enter
dec
repnz
xor
xchg
mov
js
pop
jb
mov
push
sbb
punpckldq
scas
sbb
jp
inc
mov
test
movs
movs
(bad)
jbe
cmp
xlat
add
mov
and
cmp
inc
and
xchg
mov
or
dec
in
fwait
adc
and
test
or
xor
or
pushf
ins
pushf
daa
xor
xchg
add
xor
mov
test
add
and
inc
or
bound
mov
xchg
mov
dec
stos
jo
pop
rol
rcl
inc
mov
dec
push
jns
test
add
ins
ins
lea
nop
retf
je
push
rcl
div
rcl
jb
es
pop
pop
and
pusha
sahf
dec
gs
mov
retf
sbb
xchg
gs
push
pop
pop
dec
imul
add
jo
xchg
push
pop
pusha
stos
add
add
sub
push
adc
outs
test
and
inc
outs
push
test
or
enter
and
std
and
es
sub
jl
test
sub
and
mov
(bad)
push
sub
in
mov
or
jb
or
mov
add
add
test
or
mov
in
jae
lock
and
hlt
mov
xchg
nop
clc
pop
sub
popa
xor
pop
cmp
jne
and
in
lods
hlt
cld
dec
push
sbb
jg
or
push
pop
cmp
pop
sub
or
dec
nop
or
test
jo
js
jb
repnz
or
repz
aas
or
nop
das
inc
test
daa
dec
jnp
and
sub
(bad)
pop
jo
or
sbb
neg
adc
cwde
sub
or
mov
ins
pop
xchg
add
sbb
xchg
dec
jne
add
mov
cmp
sbb
in
ss
jle
xor
add
test
and
pop
add
adc
mov
fnstcw
adc
push
add
push
mov
je
fld
sar
add
adc
xchg
jno
rcl
inc
shl
cmp
test
loopne
pop
sub
dec
mov
mov
sbb
test
mov
jnp
sbb
nop
mov
test
adc
add
or
(bad)
popa
mov
sti
sbb
xor
adc
and
mov
imul
test
js
out
xlat
aaa
mov
mov
int3
or
add
retf
push
(bad)
cld
repz
mov
inc
inc
add
imul
aas
sar
ss
fwait
int
in
inc
push
jo
shl
not
repz
int
xchg
cmp
sar
sub
push
lock
mov
enter
repnz
int
jge
movs
hlt
push
je
div
call
test
js
imul
cmp
ins
mov
sub
push
in
pop
arpl
inc
jae
jge
(bad)
adc
mov
in
mov
push
inc
dec
repz
fs
cmps
stc
cld
rep
inc
add
push
inc
add
js
dec
mov
ficomp
outs
push
push
jb
int
stc
push
enter
jbe
cld
jne
or
xchg
inc
push
xor
mov
mov
pop
cmp
in
out
push
mov
rcr
into
data16
add
shl
jg
xor
data16
imul
test
cmps
push
stc
xor
data16
int3
shr
shl
fs
lock
cs
sti
push
mov
inc
add
js
dec
and
hlt
leave
out
ds
in
mov
data16
xor
xchg
cld
retf
int3
sub
data16
jns
inc
adc
dec
add
mov
sti
sbb
out
(bad)
fsub
(bad)
cmps
push
enter
inc
add
ret
sahf
cmps
stc
xor
push
les
int3
jns
out
les
data16
ret
xor
add
in
es
test
inc
add
pop
xor
push
jle
push
pop
adc
ds
sar
rol
lods
(bad)
sar
repz
repz
in
ss
push
jo
dec
add
jl
xor
cwde
dec
add
pop
pop
push
inc
pop
sbb
pop
mov
inc
push
ds
dec
ds
mov
inc
adc
inc
push
sbb
data16
ins
call
stos
or
shl
fwait
int
(bad)
sbb
in
mov
mov
dec
lock
push
push
push
aad
cld
aam
out
mov
inc
adc
mov
jns
or
push
aad
(bad)
push
jl
and
cwde
aam
movs
pushf
neg
in
add
aam
cmp
jecxz
dec
sub
into
bnd
stc
xor
out
enter
adc
cmps
or
aam
out
sti
outs
clc
push
push
mov
aad
add
and
lock
adc
mov
dec
inc
adc
mov
aaa
pop
aam
dec
pop
imul
repz
outs
ss
out
cmp
ins
test
xchg
test
shr
cmp
push
je
idiv
in
sbb
sahf
out
sahf
test
hlt
les
movs
inc
ja
test
xchg
dec
call
sub
lahf
in
add
mov
jl
jb
pop
fiadd
or
retf
in
lods
mov
(bad)
in
mov
in
das
xchg
retf
in
hlt
cld
add
or
jb
pop
adc
and
pop
cs
retf
xor
inc
dec
push
retf
in
mov
mov
test
jb
lods
mov
mov
(bad)
int3
aam
in
retf
in
in
hlt
cld
add
mov
adc
and
xchg
retf
in
xor
inc
dec
push
jb
pop
cs
fs
je
xchg
retf
in
test
pop
movs
lods
mov
pop
cs
retf
(bad)
int3
aam
in
in
mov
jb
cs
dec
or
sbb
sub
in
mov
mov
pop
fs
je
retf
in
jl
mov
movs
lods
mov
cs
retf
in
int3
aam
in
jb
pop
in
hlt
cld
add
cs
retf
movs
or
sbb
sub
jb
pop
xor
inc
dec
pop
cs
retf
push
pop
fs
je
in
mov
mov
movs
lods
mov
xchg
retf
in
(bad)
int3
aam
in
mov
cld
add
xchg
retf
in
or
sbb
sub
mov
inc
dec
cs
retf
in
pop
fs
je
jb
pop
jl
mov
movs
lods
mov
retf
in
mov
mov
in
hlt
cld
add
retf
in
test
mov
pop
fs
je
retf
in
jl
mov
movs
and
in
stc
or
int3
aam
mov
in
hlt
cld
add
retf
in
test
mov
xor
inc
dec
xchg
retf
in
push
pop
fs
je
mov
mov
movs
lods
mov
in
mov
fcomp
xchg
retf
in
hlt
cld
add
in
mov
and
cs
retf
sub
cmp
dec
retf
in
mov
mov
jl
mov
movs
lods
mov
jb
pop
cs
int3
aam
das
xchg
retf
in
in
hlt
cld
add
jb
pop
sub
sbb
cs
retf
in
xor
inc
dec
in
mov
ins
pop
cs
retf
je
test
pushf
movs
lods
mov
pop
cs
mov
xchg
retf
in
in
hlt
cld
add
pop
cs
jns
adc
and
retf
in
sub
cmp
dec
jb
pop
cs
pop
fs
cs
retf
in
jl
mov
movs
lods
mov
cs
retf
mov
retf
in
mov
pop
cs
retf
or
sbb
retf
in
mov
mov
push
pop
fs
xchg
retf
in
je
test
pushf
movs
lods
mov
xchg
retf
in
(bad)
int3
aam
in
mov
cld
cs
dec
in
jnp
adc
and
jb
pop
sub
cmp
pop
cs
retf
dec
push
pop
fs
retf
in
mov
mov
pushf
movs
lods
mov
retf
in
mov
jb
pop
cs
hlt
cld
xchg
retf
movs
repnz
or
sbb
jb
pop
cs
cmp
cs
retf
in
push
pop
fs
in
mov
mov
retf
xchg
pushf
movs
lods
mov
in
mov
mov
in
hlt
cld
retf
in
jns
jge
adc
mov
sub
cmp
xchg
retf
in
dec
push
pop
fs
jb
pop
cs
test
pushf
movs
lods
mov
jb
pop
mov
cs
retf
fsub
in
hlt
cld
in
test
adc
pop
cs
retf
and
xor
inc
retf
in
mov
mov
je
test
pushf
movs
lods
mov
mov
int3
aam
xchg
retf
in
in
hlt
cld
jb
push
pop
add
or
sbb
xchg
retf
in
sub
cmp
in
mov
fs
cs
retf
ins
je
test
pushf
movs
lods
mov
mov
retf
in
fsub
in
hlt
cld
mov
or
xchg
retf
in
and
xor
inc
jb
pop
cs
push
pop
fs
retf
in
je
test
pushf
movs
lods
pop
cs
retf
mov
(bad)
int3
aam
in
mov
pop
cs
xchg
cld
add
or
sbb
in
mov
mov
dec
push
pop
fs
retf
in
ins
je
test
pushf
movs
lods
cmp
(bad)
int3
or
or
int
or
cld
push
mov
clts
hlt
or
sbb
in
pop
cmp
pusha
ss
xchg
add
push
dec
and
add
fld
xlat
push
add
pop
add
and
sbb
(bad)
(bad)
jg
cwde
es
int3
enter
enter
fcomp
fxch
(bad)
(bad)
loopne
cmp
inc
mul
add
in
ja
push
lea
dec
les
jne
and
popa
je
xor
xor
adc
(bad)
jg
dec
jae
js
pop
loop
push
push
ss
sbb
sbb
in
call
nop
out
inc
add
out
ret
pop
jecxz
or
or
cmp
add
pop
or
scas
repnz
and
dec
call
mov
cmp
repz
adc
and
xor
repz
cmp
push
pop
pusha
cmp
repz
jo
or
cwde
mov
cmp
mov
loopne
iret
repz
mov
rol
add
add
xor
repnz
dec
xor
clc
push
xchg
cmp
sbb
add
pop
mov
xchg
dec
inc
sahf
mov
js
fmul
xor
inc
fst
call
(bad)
stos
mov
and
pop
add
add
test
sub
xchg
rol
add
loope
mov
or
adc
adc
adc
ja
and
popf
popf
add
add
ins
mov
add
adc
sub
in
outs
jle
add
add
add
add
add
fnstsw
movs
sub
ins
sub
add
xor
or
or
rcr
sub
add
test
sahf
out
or
push
movs
mov
jns
call
repz
repz
pusha
jo
repz
or
aaa
cmp
popf
push
or
and
xor
mov
xor
jmp
dec
scas
hlt
test
hlt
int3
add
dec
and
gs
mov
push
(bad)
sub
clc
sbb
push
sub
and
lds
push
ins
jns
loope
cmp
add
push
pop
adc
ja
fild
movs
or
in
and
pop
popa
out
std
mov
inc
cmp
das
pop
lock
out
add
and
add
jns
dec
mov
pop
add
adc
mov
inc
inc
add
adc
and
fwait
bound
or
and
loop
fldenv
out
pop
add
mov
add
jnp
outs
gs
pushf
ins
dec
imul
xor
test
fiadd
and
push
dec
jle
ja
pop
mul
inc
fs
mov
add
push
push
sahf
out
sahf
pop
or
or
or
movups
pop
sbb
jns
out
and
xor
sahf
out
sahf
inc
push
arpl
mov
outs
ret
jecxz
add
inc
cs
add
cs
cs
add
shl
rcr
add
jle
xor
out
inc
popa
add
fild
add
or
repz
adc
and
adc
inc
pusha
(bad)
cmps
in
adc
xchg
pop
pop
in
in
or
or
pop
fucom
in
or
(bad)
inc
and
js
mov
mov
and
push
add
cmp
ins
les
ss
and
inc
xchg
xchg
adc
push
xchg
das
inc
lea
stos
lea
popa
inc
mov
not
adc
pop
or
or
inc
add
sub
dec
sub
loope
adc
dec
jge
xchg
cmovne
jbe
daa
adc
xchg
push
fist
pop
mov
push
sahf
xchg
xchg
xchg
add
rcl
repnz
(bad)
scas
js
(bad)
fdivr
gs
lds
xor
mov
and
adc
add
and
frstor
add
and
dec
rcr
retf
cli
fs
imul
iret
repz
aas
jg
jns
out
inc
(bad)
(bad)
(bad)
dec
jbe
out
(bad)
push
sbb
retf
mov
das
(bad)
jns
ret
push
push
push
adc
add
repz
out
fsubr
cld
adc
iret
repz
and
dec
pusha
jo
cmp
repz
lods
mov
iret
repz
xor
jns
out
push
pop
ins
jl
out
sahf
mov
int
jns
clc
or
adc
repz
repz
pop
ins
or
cmp
xchg
mov
repz
enter
inc
iret
repz
pop
ins
adc
shl
hlt
add
or
sahf
out
and
pop
push
jl
pushf
lods
mov
int3
fdiv
add
adc
cmp
repz
inc
push
pop
jo
cmp
repz
repz
fsubr
clc
or
sbb
sahf
out
outs
sub
cmp
dec
pusha
je
jns
out
cwde
test
int3
loopne
cmp
out
or
sbb
cmp
repz
push
fs
xchg
movs
cmp
repz
rcl
cld
iret
repz
push
sub
push
push
js
xchg
test
imul
hlt
or
adc
jns
out
xor
pop
xlat
fisttp
pop
das
add
popa
push
inc
push
inc
push
js
cmp
repz
call
cmp
ins
js
test
xor
out
fsubr
clc
sbb
sub
cmp
repz
pop
push
iret
cwde
lods
rcr
add
cmp
mov
inc
pop
ins
iret
repz
test
cmps
stc
cmp
or
and
jns
out
push
je
mov
out
fdiv
or
sbb
repz
sub
push
fs
cmp
sti
cmp
rcr
sbb
sbb
repz
push
sub
fs
cmp
repz
mov
aam
jns
cmps
stc
add
out
sahf
out
jo
pushf
mov
repz
(bad)
loopne
or
and
cmp
repz
pop
ins
test
enter
push
pop
cmp
repz
adc
fdiv
add
out
sahf
cmps
sbb
push
push
adc
fidivr
and
sahf
out
sahf
jo
pushf
mov
aam
dec
repz
add
adc
xor
cmp
repz
jo
cwde
lods
out
cmp
mov
and
xor
pusha
or
rcr
lock
out
test
pop
fs
out
sbb
lahf
out
cld
adc
cmp
push
pusha
je
mov
cmp
loopne
adc
mov
iret
inc
pop
jo
mov
sahf
out
cmp
cld
sbb
sub
jns
out
pusha
adc
in
add
and
dec
iret
repz
pop
jo
mov
clc
cmp
hlt
sub
push
xor
sahf
out
inc
push
pusha
jo
out
sahf
out
mov
fsubr
iret
repz
hlt
or
sbb
dec
pop
cmp
repz
sbb
repz
cld
sub
push
xor
repz
pop
jo
mov
ds
repz
pop
sub
iret
repz
push
repz
lods
mov
sahf
out
sub
sahf
out
sahf
jl
movs
mov
call
add
adc
inc
pop
repz
rep
test
cmp
aam
hlt
or
and
dec
pusha
js
mov
mov
in
adc
repz
shr
inc
push
push
iret
cwde
mov
fsub
lock
out
ds
and
push
fs
out
js
movs
mov
out
clc
adc
xor
cmp
push
ins
mov
cmp
clc
or
and
jns
out
cmp
fs
out
sahf
out
rcl
clc
iret
repz
adc
cmp
ins
test
repz
mov
loopne
jns
cmps
stc
or
and
push
pusha
out
sahf
out
mov
sahf
fsub
clc
xor
out
sahf
out
push
out
sahf
test
shl
lock
cmp
repz
and
push
fs
repz
movs
mov
iret
fsubr
cld
adc
and
inc
push
pusha
je
jns
out
xchg
lods
(bad)
fdiv
repz
repz
sbb
push
iret
repz
pusha
jo
xchg
test
call
add
adc
sahf
out
and
push
push
out
mov
sahf
ja
in
add
(bad)
push
sub
out
sahf
out
jo
cwde
lods
jae
jns
mov
inc
cmp
iret
repz
fs
cmp
pause
mov
out
ds
in
cld
adc
(bad)
push
cmp
cmp
repz
je
xchg
mov
mov
ds
out
sahf
and
inc
pop
push
jns
mov
ja
out
lock
jbe
and
jns
out
inc
dec
pusha
jo
out
sahf
test
sahf
aas
aas
inc
push
sbb
out
sahf
out
push
pop
js
sahf
out
sahf
cwde
movs
mov
cmp
jnp
ja
push
sbb
iret
repz
dec
pop
ins
jl
pushf
cmp
repz
rcl
in
jns
cmps
stc
add
and
push
out
sahf
out
je
pushf
mov
out
sahf
rcl
cld
or
sbb
iret
repz
inc
push
fs
cmp
repz
out
mov
fiadd
cmp
cmp
repz
pop
jo
mov
mov
sbb
dec
pusha
js
test
sahf
out
rcl
cld
adc
cmp
shl
dec
pusha
je
repz
mov
cmp
mov
xor
repz
push
mov
int3
fsubr
add
jns
out
and
pop
jo
hlt
jns
out
mov
aam
dec
iret
repz
sub
cmp
repz
cwde
mov
fmul
repz
repz
or
push
cmp
iret
repz
mov
iret
repz
add
and
jns
out
pop
je
pushf
int
jns
lods
aam
cld
or
sub
repz
push
fs
repz
repz
lods
mov
call
dec
sahf
out
sahf
pop
jo
cwde
mov
xor
out
fsubr
clc
or
and
cmp
repz
push
pusha
je
repz
test
out
add
push
mov
fdivr
adc
sub
cmp
repz
pusha
jl
mov
fdiv
adc
xor
out
sahf
ins
xchg
mov
hlt
sbb
iret
repz
pop
je
mov
ds
repz
push
cmp
jns
out
jo
pushf
mov
cmp
lahf
enter
push
push
push
sub
iret
repz
push
je
pushf
imul
loopne
push
and
jns
out
dec
pusha
jo
lahf
out
sahf
nop
test
fdiv
or
jns
ja
push
cmp
js
out
ds
push
fs
test
xor
iret
repz
repz
enter
clc
add
out
call
lea
call
sahf
out
rcr
call
jns
out
push
sbb
cmp
out
sahf
out
pusha
ins
js
inc
sub
fst
push
xchg
stc
inc
lods
stos
xchg
pop
mov
dec
push
and
outs
jae
jle
xor
and
js
mov
sbb
aas
add
add
mov
loopne
add
inc
idiv
adc
jmp
sub
cmp
add
inc
pop
sub
call
jl
cmps
retf
xchg
sti
mov
test
mov
(bad)
int3
push
add
cmp
repz
cld
add
iret
repz
cmps
cvttps2pi
inc
adc
iret
repz
ins
or
fldenv
cwde
sbb
jns
adc
or
cmp
repz
xor
inc
add
cmp
repz
adc
iret
repz
pop
mov
les
aam
test
inc
mov
fistp
adc
and
adc
cmp
push
add
iret
push
js
nop
pop
out
out
pop
push
push
add
cmp
jns
out
push
sub
out
sahf
out
pushf
xchg
int3
mov
push
mov
cmp
repz
repz
int3
pusha
fidivr
nop
ss
cmp
lods
mov
mov
add
sbb
(bad)
cmp
xor
push
punpckldq
scas
pop
sbb
pop
mov
pop
fucomi
data16
or
idiv
push
out
out
or
fsubr
jnp
sbb
add
sahf
(bad)
push
ror
mov
push
dec
sahf
out
sahf
push
fs
xchg
mov
mov
shl
xchg
sahf
cmps
push
sahf
call
adc
mov
in
jns
lock
adc
lds
jbe
and
fadd
adc
and
bound
push
out
fcom
cmp
setbe
add
or
pushf
pushf
pushf
pushf
unpcklps
adc
fst
or
dec
dec
dec
outs
femms
or
adc
dec
dec
sbb
add
adc
dec
inc
rcl
in
add
push
scas
push
pop
(bad)
pusha
push
js
jo
iret
repz
cwde
nop
mov
adc
dec
push
out
out
movs
test
jl
adc
push
sbb
sub
repz
cmp
adc
ror
iret
repz
repz
add
mov
xor
iret
repz
pusha
je
mov
add
fild
adc
icebp
rcr
adc
lock
into
and
outs
add
pop
jnp
sub
outs
xchg
iret
repz
stc
mov
iret
repz
std
(bad)
inc
repz
repz
add
xchg
add
outs
test
inc
pop
xchg
add
pop
pop
nop
adc
xor
cwde
cmp
sbb
push
and
nop
pop
in
in
or
add
jbe
test
jb
nop
mov
add
add
add
pop
pop
add
sbb
sti
popa
add
push
mov
fist
push
lsl
pusha
int
jns
loopne
std
lock
add
cmp
repz
stc
and
cmp
cmp
repz
iret
je
mov
cwde
repnz
repz
icebp
shl
repz
repz
call
jns
out
jae
and
xor
ja
sahf
jmp
adc
test
std
rol
(bad)
fisub
add
add
add
xor
outs
add
sbb
or
mov
cmp
or
js
repz
imul
cld
mov
jg
aas
pop
add
adc
ret
in
pushf
ret
push
adc
aad
fdiv
add
add
add
pop
sbb
xor
aaa
add
mov
pop
dec
add
inc
inc
scas
movs
or
test
inc
sbb
cmp
inc
mov
aaa
out
bound
cmp
inc
add
mov
add
mov
bound
mov
dec
jb
inc
cmp
dec
je
mov
inc
xchg
inc
dec
jb
bound
dec
es
loopne
push
leave
dec
scas
xchg
add
aam
in
shl
xchg
add
addr16
jp
imul
add
add
jnp
repnz
mov
jge
add
rol
ds
pop
and
dec
jge
xchg
add
xchg
dec
add
xchg
pop
add
sar
inc
cmps
pop
movs
jge
lods
pop
fwait
stos
add
mov
mov
jo
aaa
mov
pop
adc
lods
xlat
jmp
ins
jge
out
dec
and
mov
jns
and
xchg
xchg
dec
es
add
xchg
jns
dec
pop
push
mov
idiv
pop
dec
mov
fdiv
inc
pop
and
mov
mov
lock
dec
mov
add
call
and
je
inc
add
pop
ret
add
cmp
add
in
and
imul
lock
xor
inc
mov
bound
and
xor
add
data16
inc
push
clc
(bad)
lods
inc
dec
dec
inc
and
les
mov
in
inc
jecxz
int3
(bad)
js
inc
push
inc
inc
push
inc
adc
add
jne
je
bound
popa
and
add
and
(bad)
std
pop
xor
add
xor
add
inc
sub
dec
dec
push
or
add
push
inc
push
imul
and
ins
outs
or
imul
mov
popa
dec
retw
ror
test
mov
mov
mov
(bad)
inc
popa
and
inc
dec
add
jbe
ret
ds
shr
data16
xchg
imul
cmp
ins
jns
push
push
fwait
mov
xor
and
sbb
aas
cmps
call
jno
outs
adc
or
dec
pusha
or
ja
test
gs
je
or
or
pop
sbb
out
mov
xchg
jp
outs
loope
clc
out
pop
ror
push
movs
jbe
add
add
adc
adc
mov
ins
arpl
inc
je
push
les
mov
lock
sub
and
jmp
scas
and
ins
je
xor
lods
rcr
scas
shr
addr16
out
fmul
cmp
sahf
aas
or
dec
sahf
push
mov
add
sub
xchg
mov
sub
or
xchg
mov
movs
sub
add
pop
push
test
or
das
add
xor
sbb
add
popa
xchg
mov
push
sub
jae
push
ds
test
mov
cwde
mov
arpl
push
and
push
(bad)
jl
pop
inc
push
inc
xor
stc
sub
jg
add
sub
inc
push
dec
dec
and
and
loop
push
js
push
inc
push
and
and
inc
fcom
imul
test
leave
jae
shl
or
gs
repz
data16
jno
xchg
jb
pushf
adc
and
mov
pop
inc
and
mov
adc
or
les
bound
xlat
les
or
adc
adc
xchg
jo
sub
call
dec
les
shl
fstp
adc
or
das
sti
inc
daa
sbb
dec
xchg
fs
mov
xchg
not
(bad)
inc
sub
lock
add
and
sub
pusha
scas
or
mov
pop
ss
aad
lar
push
sbb
je
jns
sub
inc
and
call
retf
dec
mov
push
dec
dec
push
inc
xchg
in
and
test
xchg
or
pop
sub
repnz
push
add
dec
adc
in
int3
push
dec
bound
cmp
cmp
add
sub
test
push
push
inc
sbb
cmps
mul
stos
cmp
xchg
cmp
jl
ficomp
int
and
xchg
sub
push
dec
inc
scas
mov
(bad)
push
movs
inc
and
icebp
and
addr16
popa
push
inc
daa
pop
sbb
xor
dec
stos
pop
in
sbb
jno
adc
cmps
fs
cmp
pop
popf
cmc
jns
js
mov
retf
add
push
or
dec
cmp
adc
ret
ret
cmp
mov
daa
popa
adc
xchg
dec
(bad)
pusha
xor
sub
ja
cmp
sbb
pop
add
add
test
retf
inc
sar
sti
icebp
mov
pop
mov
loopne
movs
mov
arpl
rcr
mov
push
pop
cmps
fsubp
test
sub
dec
dec
and
inc
dec
dec
rcr
push
arpl
jbe
(bad)
imul
add
adc
dec
dec
push
mov
not
pop
dec
call
push
bound
push
sub
and
sbb
add
add
add
cmps
cmp
add
push
mov
adc
mov
push
sub
pop
repz
test
push
push
dec
dec
xchg
test
add
push
arpl
adc
or
dec
lds
push
ror
sbb
dec
dec
scas
pop
mov
add
clc
pop
imul
std
add
rcl
and
add
pop
jmp
mov
adc
mov
pop
imul
xchg
in
mov
jmp
ins
add
pop
das
sbb
les
add
push
push
inc
jecxz
inc
bound
fsubr
cmp
pushf
lods
fld
cmp
inc
or
test
sbb
and
mov
loopne
inc
push
test
dec
push
je
or
pop
or
test
pop
dec
xor
ss
push
inc
lods
dec
data16
mov
dec
push
mov
jecxz
push
sbb
add
xor
pop
adc
and
dec
inc
fs
call
xchg
dec
loopne
mov
in
cmp
inc
inc
scas
jp
push
push
dec
fimul
adc
dec
sub
inc
dec
or
push
sub
push
int
icebp
xchg
out
dec
add
and
mov
stos
sti
adc
mov
int3
mov
shr
je
adc
push
xchg
test
nop
pop
dec
push
push
push
loopne
add
aad
dec
mov
push
adc
inc
or
xlat
sub
inc
vandps
inc
aaa
add
lea
push
aaa
dec
cmp
cli
ss
test
fadd
es
add
adc
inc
sub
arpl
and
sbb
add
cld
or
fnstsw
add
add
aas
(bad)
test
cmp
xor
sbb
adc
push
add
icebp
jg
cmp
and
or
retf
sub
xor
je
std
sbb
or
xor
dec
sub
outs
add
jmp
add
das
add
push
or
sub
add
fwait
add
or
pop
push
mov
add
sti
add
sbb
pop
push
or
push
jnp
push
cmp
cmp
xor
ja
jg
or
or
add
mov
scas
stc
imul
add
inc
adc
inc
sbb
xchg
pop
rcl
es
xor
cmp
iret
mov
dec
add
add
arpl
imul
int
add
jle
test
mov
call
add
add
push
mov
add
dec
adc
adc
fadd
fild
outs
adc
pop
mov
in
add
add
mov
or
(bad)
(bad)
inc
sbb
and
daa
add
add
add
add
add
add
add
inc
add
dec
add
pop
clc
(bad)
(bad)
inc
pop
add
add
jae
arpl
or
xor
or
push
mov
imul
outs
retf
mov
cmp
inc
add
mov
adc
adc
xchg
(bad)
(bad)
call
inc
jnp
sub
adc
js
cs
push
cmp
dec
fs
and
push
je
jb
ja
pop
jl
ins
dec
jp
bound
addr16
icebp
cmp
xlat
data16
test
pop
stos
mov
inc
mov
jg
add
add
add
rcl
popf
add
add
sub
shl
loop
add
xor
out
test
xchg
mov
push
(bad)
or
(bad)
into
add
sub
sub
xchg
jle
add
fist
mov
push
lds
les
mov
add
shr
ss
or
sub
lahf
add
rol
and
test
mov
retf
push
xchg
add
add
add
add
faddp
push
xor
shl
adc
fld
fadd
rol
add
mov
sbb
mov
sti
leave
add
add
stos
dec
add
add
iret
add
nop
sub
aas
retf
or
(bad)
aas
adc
mov
add
add
loope
add
or
adc
jg
lock
test
cmps
clc
push
loopne
cmp
push
jbe
mov
xchg
repnz
add
push
jl
inc
or
add
mov
ds
add
xor
(bad)
out
xchg
add
mov
ja
pop
or
add
sar
jo
mov
repz
sar
cmovge
inc
add
jg
inc
outs
adc
sub
cwde
push
xchg
cmps
test
pop
xchg
add
xor
mov
mov
enter
add
jmp
sbb
xchg
cmps
cli
add
(bad)
clc
jo
mov
add
xchg
jg
or
sbb
aaa
xlat
add
or
xchg
add
add
dec
jbe
mov
add
cli
mov
sahf
xor
cwde
sbb
jg
hlt
push
sahf
xor
mov
aas
push
cmp
aaa
or
jg
add
add
hlt
or
jle
cli
retf
aas
sti
mul
dec
add
inc
add
add
mov
push
add
xchg
jg
push
add
test
stos
test
add
adc
or
mov
ficom
sbb
add
cld
shr
movs
add
jnp
adc
rcl
pop
xor
push
mov
(bad)
push
push
ja
add
add
add
add
push
inc
jg
repnz
add
test
enter
test
fld
adc
inc
shr
sar
jg
sar
cmp
pop
mov
mov
and
push
push
jl
jge
leave
repnz
gs
dec
fisubr
fadd
mov
add
sbb
add
jg
add
pop
sbb
and
aaa
xchg
add
add
jnp
test
ds
dec
push
dec
add
ds
aas
inc
ss
jl
cmp
mov
push
push
add
adc
pop
repz
pop
jp
cmps
ja
push
ror
push
dec
js
mov
arpl
int3
add
loope
add
add
add
(bad)
jbe
out
push
pop
clc
fisubr
add
add
test
mov
add
add
add
add
repnz
std
out
jmp
jmp
sti
add
and
movs
aas
fmul
call
fist
lea
in
push
pop
mov
iret
aaa
ss
les
popa
inc
push
mov
popf
add
inc
fild
ss
(bad)
idiv
retf
add
adc
pop
cmps
mov
add
add
mov
out
adc
mov
xchg
mov
push
mov
or
or
add
add
dec
add
jb
mov
clc
xchg
jle
add
pop
jg
test
add
ret
cmps
add
mov
(bad)
(bad)
mov
out
mov
repnz
push
icebp
add
or
out
add
add
mov
jmp
fiadd
loope
imul
fs
scas
add
outs
or
cmp
dec
vpmaxub
ds
cs
push
ss
pushf
push
or
ss
fucomip
mov
push
(bad)
adc
push
sub
mov
xor
mov
add
ds
add
repz
das
push
xor
and
push
inc
add
(bad)
push
sbb
pop
maskmovq
neg
mov
cmp
stos
adc
xchg
cmp
or
cmp
push
inc
inc
out
push
loop
mov
data16
mov
or
pushf
add
add
pop
mov
pop
mov
add
out
add
or
scas
pop
add
aaa
sbb
repnz
dec
inc
mov
adc
push
jmp
or
add
rcr
hlt
pop
add
cmc
add
ret
add
sub
add
pop
sub
add
pushf
repnz
fisub
jb
add
jb
mov
lahf
sub
inc
mov
add
test
mov
sahf
add
jmp
out
add
push
pop
add
add
dec
adc
mov
add
sub
das
add
(bad)
add
imul
mov
mov
add
jmp
jg
adc
rol
add
dec
add
aas
ins
jo
lea
add
jo
add
dec
add
mov
(bad)
cwde
cs
add
push
add
or
cld
add
sub
jb
scas
icebp
pop
loopne
cld
add
sub
cld
call
mov
add
add
add
sbb
popf
dec
fiadd
dec
sub
push
xchg
jl
lahf
mov
repz
mov
push
ret
add
stc
sti
mov
adc
add
mov
sub
and
pop
repz
jmp
add
add
push
enter
leave
xchg
ja
add
add
xchg
(bad)
call
loopne
push
push
add
add
data16
add
or
jns
loop
push
dec
in
rol
sub
sbb
add
dec
add
add
add
add
add
es
add
test
adc
add
add
scas
mov
aaa
retf
add
add
push
add
add
pop
(bad)
inc
inc
add
add
add
add
add
or
push
push
retf
cmp
adc
and
pop
sub
sub
fld
jle
or
jb
(bad)
jp
mov
(bad)
mov
mov
add
add
add
add
add
add
(bad)
mov
add
add
add
mov
and
hlt
add
add
add
add
mov
nop
add
add
add
inc
add
add
repnz
add
jae
cmps
loopne
push
push
fadd
add
add
mov
and
mov
bound
add
mov
xchg
add
in
add
ret
add
mov
(bad)
dec
add
add
add
add
xchg
add
add
add
add
mov
add
push
add
add
add
fdivrp
mov
pop
add
add
add
stos
sahf
add
adc
and
add
cmp
add
add
add
add
(bad)
(bad)
(bad)
inc
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
or
adc
mov
add
add
add
test
in
bound
push
and
pushf
xchg
test
add
add
add
xchg
or
add
xchg
rol
iret
out
add
add
xchg
call
dec
mov
into
call
mov
add
add
add
xchg
add
add
add
out
add
sub
call
add
test
jnp
fadd
add
or
ins
(bad)
mov
push
xor
xor
inc
add
and
pop
fdivrp
pop
fld
rol
rol
rol
aad
fiadd
ret
loop
mov
mov
mov
mov
mov
daa
push
and
dec
stos
add
xchg
ret
sub
das
std
add
add
jg
icebp
cmps
mov
fs
add
or
add
dec
or
mov
aam
ins
dec
or
add
push
xchg
add
je
push
or
pop
mov
add
loop
ss
jg
push
mov
je
lea
add
xchg
out
out
add
cld
add
push
cmp
daa
push
in
outs
adc
test
(bad)
mov
push
xlat
mov
push
movs
add
aaa
cwde
jmp
test
or
inc
std
push
jg
add
cs
add
add
add
in
and
inc
dec
push
jmp
xchg
fwait
add
add
aas
rol
scas
pop
add
add
jbe
pop
xchg
clc
jle
rol
fimul
add
add
dec
add
scas
mov
mov
mov
and
and
(bad)
push
add
add
and
push
add
xor
jecxz
loopne
fild
cmp
cli
repz
inc
aas
add
add
add
add
add
add
cmp
inc
add
(bad)
jg
loopne
cmc
add
pop
add
add
cmc
pop
xchg
sub
sub
scas
out
mov
(bad)
push
adc
jle
mov
add
imul
add
js
add
inc
ja
outs
add
test
xchg
xchg
test
into
xor
add
(bad)
mov
cs
add
add
add
add
add
add
add
add
add
add
(bad)
sub
es
retf
jo
add
mov
mov
maxps
add
add
(bad)
inc
test
clc
add
add
(bad)
stos
adc
mov
add
or
add
add
xchg
ret
(bad)
fucomi
add
add
add
add
inc
jg
add
add
jg
add
push
cmps
add
add
out
(bad)
add
add
or
dec
stos
pop
movs
scas
out
mov
stos
mov
add
lods
cmp
mov
add
fist
mov
mov
add
mov
iret
mov
lods
add
adc
add
int
lock
add
add
xchg
ret
add
add
xchg
fwait
lods
inc
retw
add
int3
add
pop
fstsw
int
loop
add
add
add
stc
cld
int
add
into
add
add
add
add
add
add
(bad)
scas
mov
enter
add
sbb
push
scas
add
aad
add
(bad)
add
add
add
sti
fsub
add
add
add
add
xor
lods
add
add
add
mov
aas
or
add
jbe
inc
fild
fisttp
add
add
xor
fld
fld
add
add
les
xor
mov
pop
sbb
outs
push
pop
loop
mov
jp
add
add
test
push
or
call
add
push
jmp
pop
sbb
not
push
adc
pusha
movs
pop
pop
pop
pop
xchg
in
call
add
das
popa
xor
fistp
mov
mov
(bad)
mov
popa
popa
add
adc
cmp
cs
bound
(bad)
xchg
adc
(bad)
sub
xor
gs
test
jbe
test
xchg
gs
cmp
loopne
arpl
imul
adc
jecxz
gs
mov
shr
jbe
lahf
pop
fmul
enter
and
fcmovu
jb
out
(bad)
adc
adc
fistp
jo
adc
inc
sahf
add
fwait
and
ffreep
inc
mov
in
dec
pop
ficomp
adc
(bad)
inc
js
mov
xor
jmp
cmp
mov
leave
dec
enter
loopne
adc
loop
in
and
outs
adc
sbb
adc
fisubr
xchg
sub
sahf
ror
jg
loop
mov
adc
shl
adc
dec
out
push
pop
stos
xchg
xchg
adc
js
in
add
push
push
mov
mov
fadd
pop
lahf
pop
outs
out
icebp
call
adc
fst
jbe
xchg
inc
aas
retf
int3
pop
and
loop
in
into
movs
cmps
cwde
adc
dec
mov
fsub
loopne
cmps
rcr
adc
retf
inc
sub
rol
inc
jae
xchg
sub
add
out
adc
out
test
push
adc
adc
fcomp
imul
outs
mov
in
or
or
xchg
xchg
add
xchg
push
call
pop
cld
mov
ficomp
out
xor
imul
movs
mov
xchg
retf
cmp
jle
movs
mov
aad
std
(bad)
xor
imul
jns
stos
or
ja
and
retf
cmp
xchg
add
jg
sbb
inc
add
mov
fild
fidiv
mov
inc
pusha
mov
fadd
inc
adc
add
jle
sahf
xchg
or
xchg
ja
sbb
push
sbb
xchg
shl
push
jnp
jl
sbb
sar
(bad)
fcompp
(bad)
pusha
mov
fisttp
enter
mov
pop
add
jnp
push
xchg
imul
push
push
jg
stc
retf
add
iret
lods
imul
mov
scas
mov
mov
pop
lods
call
mov
call
mov
call
xlat
mov
movs
scas
mov
rol
movs
movs
mov
scas
xchg
scas
jecxz
les
into
mov
mov
stos
pop
stos
push
add
pop
push
inc
outs
into
or
add
jo
js
push
add
adc
shl
mov
xor
mov
and
pop
cmp
lea
lods
cmp
jne
cmp
mov
mov
push
ret
gs
into
adc
in
dec
mov
pop
add
xchg
dec
adc
add
out
or
push
dec
mov
jl
adc
gs
jae
dec
call
mov
and
pop
sahf
mov
mov
push
adc
jbe
pop
sbb
das
push
add
mov
cmp
mov
pop
fist
test
pop
aam
push
sbb
push
sbb
add
push
pop
(bad)
mov
and
mov
jne
xchg
or
add
or
jl
ss
adc
outs
jge
push
cmp
repz
mov
pusha
imul
mov
mov
mov
pop
je
add
inc
jmp
rcr
jo
push
jae
gs
fdivr
mov
mov
mov
fstp
out
(bad)
mov
or
pushf
adc
push
jmp
shl
add
outs
das
test
inc
iret
dec
xchg
pop
aas
pop
outs
loope
cmp
push
pop
sbb
jo
or
adc
dec
adc
jle
mov
stc
and
mov
pop
addps
mov
add
jne
ins
cwde
pusha
and
mov
lods
sub
mov
rcr
push
add
outs
aaa
or
or
sub
lods
sub
and
ss
imul
xor
ds
jo
rol
xor
ja
sbb
cmp
pop
or
shl
fs
(bad)
loopne
js
xor
sub
xchg
arpl
pop
or
adc
xchg
xor
loope
je
and
cmp
data16
push
xchg
adc
mov
push
jmp
jno
or
jmp
jae
pop
(bad)
xchg
xor
mov
bound
jl
inc
pop
push
sub
or
sbb
sbb
(bad)
inc
ja
fisubr
jbe
inc
imul
xchg
les
jae
or
(bad)
loopne
inc
add
popa
mov
les
xor
aam
sub
ret
add
bound
sbb
mov
pop
xchg
popa
mov
xor
mov
push
jo
ror
inc
mov
dec
movs
and
jg
sub
add
adc
pop
add
and
pop
imul
push
sti
push
pop
or
(bad)
push
add
lock
push
adc
pop
aam
xor
jg
test
add
sub
data16
popf
shl
cwde
pop
mov
outs
into
clc
popf
mov
add
bound
push
inc
in
dec
sbb
in
ins
retf
daa
adc
aad
in
loop
xor
dec
push
stos
test
mov
adc
inc
int
or
adc
neg
mov
out
loopne
xchg
mov
push
push
inc
cmp
scas
push
adc
push
sbb
inc
push
xor
and
and
jle
and
shl
es
daa
jno
(bad)
jle
ss
sub
test
ror
imul
and
mov
add
pushf
or
fidiv
mov
rol
cmp
bound
mov
add
jnp
std
and
xor
add
push
iret
repz
pushf
scas
enter
sahf
out
call
jns
out
nop
cmps
ret
(bad)
repz
out
and
jg
std
iret
fwait
add
add
add
xor
or
and
fs
mov
clc
pop
dec
arpl
sub
adc
cs
lods
or
push
ret
out
jne
mov
aaa
lahf
mov
repz
push
add
mov
adc
push
iret
popf
xor
cmp
xor
xor
xor
sub
xor
xor
cmp
cmp
data16
xor
arpl
aaa
xor
xor
xor
push
cmp
jbe
std
xor
aaa
push
pushf
xor
popa
xor
add
scas
retf
jne
sub
dec
sbb
push
dec
loope
push
ret
(bad)
jae
xor
test
adc
aam
dec
les
adc
fcomp
in
xor
pop
ret
ret
and
mov
lods
test
ss
sahf
outs
dec
adc
mov
sbb
jge
bound
pusha
shl
(bad)
xor
push
(bad)
adc
add
mov
movs
sbb
ror
sbb
sub
dec
scas
xchg
or
es
or
das
and
stos
mov
fstp
popf
add
gs
imul
mov
mov
dec
adc
push
jo
add
dec
xor
arpl
dec
je
js
and
xlat
push
sbb
ret
sbb
(bad)
les
bound
add
les
mov
push
push
add
jl
(bad)
mov
out
and
cs
or
add
pop
push
les
in
das
and
pop
mov
sub
imul
lds
sbb
fs
imul
outs
bound
jo
lods
gs
inc
xchg
icebp
jno
call
adc
cli
enter
cmp
sub
pop
xchg
das
lea
and
cmps
sahf
fadd
imul
push
adc
mov
dec
push
or
cmp
or
cs
push
mov
popa
jne
and
clc
xor
or
pop
and
cwde
dec
adc
dec
pop
add
or
add
arpl
pop
or
pop
loopne
sub
pop
mov
push
les
mov
push
movs
add
lods
mov
cmp
pop
inc
cmp
add
pop
sub
xchg
pop
sbb
jae
add
cmp
push
and
push
push
dec
fwait
dec
and
nop
inc
rcr
cld
add
and
(bad)
and
push
paddusw
xchg
add
jnp
adc
jmp
push
icebp
xchg
xor
inc
je
(bad)
loope
fldl2e
adc
fidiv
popa
movs
xor
fisubr
cmps
cmp
out
shl
sar
pop
push
push
and
and
mov
(bad)
(bad)
push
nop
mov
mov
or
xchg
mov
sub
(bad)
(bad)
(bad)
(bad)
fsubr
jmp
sub
js
popf
adc
pushf
jbe
mov
adc
mov
cld
loopne
dec
(bad)
cs
dec
push
inc
push
repz
add
movs
stc
js
xchg
shl
mov
(bad)
into
and
imul
bound
loop
in
aaa
cmp
adc
dec
ins
test
mov
rcr
dec
jp
push
sub
test
outs
dec
cmp
mov
dec
ret
adc
sub
(bad)
push
jl
out
into
and
and
cmp
int
arpl
inc
rol
or
je
aas
loopne
cdq
and
inc
sub
and
sbb
sbb
mov
xor
ss
push
leave
neg
je
jl
aas
xor
sbb
and
mul
sti
std
sub
dec
push
dec
inc
pop
add
mov
stos
sbb
or
add
inc
jmp
int
add
pop
adc
adc
mul
xchg
jne
call
popa
add
jnp
mov
cld
jb
js
sub
ficom
sub
ja
add
sbb
call
and
push
xor
pusha
mov
test
inc
sbb
or
push
mov
js
outs
adc
imul
mov
or
sbb
pushf
xor
push
mov
cmp
adc
jecxz
jnp
mov
jno
mov
outs
lds
inc
outs
and
xchg
popa
dec
nop
pop
leave
push
ret
mov
mov
aas
lea
sbb
xor
inc
pop
nop
or
mov
mov
inc
xor
inc
sahf
pop
nop
jbe
test
sahf
out
xchg
cwde
pushf
mov
sub
aam
sahf
out
cwde
mov
sbb
push
inc
push
dec
arpl
inc
and
xor
dec
mov
mov
pop
nop
dec
fwait
push
pop
sub
dec
lods
sti
cmp
jg
aad
rol
fcom
inc
add
fcomi
pop
js
or
addr16
cmp
add
jge
(bad)
dec
dec
out
sbb
aam
out
leave
push
and
sub
pop
xor
enter
or
add
cwde
push
add
out
xor
and
shl
xor
jmp
push
push
add
(bad)
cli
sbb
test
ror
(bad)
mov
ins
add
xchg
imul
cmp
and
jo
mov
sbb
ins
cmp
ror
xor
push
sub
cmp
sbb
mov
mov
and
movs
inc
and
cmp
inc
jns
xor
movs
clc
xchg
jae
fistp
inc
mov
int
adc
xchg
mov
jno
inc
sbb
xlat
jmp
xor
sbb
(bad)
(bad)
add
xlat
pop
jle
xor
push
out
mov
jmp
fadd
bswap
data16
jo
dec
add
jl
dec
jmp
pop
push
jge
clc
push
or
movs
imul
int
jg
movs
cmp
adc
push
clc
or
or
bound
add
add
add
add
shl
(bad)
jg
fisttp
add
xor
xor
aaa
xor
xor
cmp
cmp
leave
loop
add
daa
mov
xor
mov
dec
and
sub
mov
push
add
and
sahf
sub
sub
xchg
add
inc
lds
in
push
mov
pusha
mov
or
and
or
cwde
(bad)
jns
xchg
mov
inc
int3
and
pop
leave
and
cmc
or
xor
mov
jne
loopne
jo
sub
fwait
aam
sbb
arpl
add
pop
mov
imul
or
cmp
adc
push
or
sti
lds
fs
nop
retf
cmp
xor
xor
pushf
ss
sub
das
dec
add
push
outs
retf
ja
lock
push
or
adc
sbb
lea
jnp
test
cs
add
pop
(bad)
aam
mov
out
shl
and
add
jp
xchg
jno
or
int3
xor
push
or
lock
imul
or
or
cmps
pop
cmp
pop
inc
data16
std
call
call
rol
pop
les
sub
add
or
jb
add
add
cld
mov
ins
or
pop
mov
lea
dec
popa
dec
sbb
rcr
xlat
and
or
sub
sub
cs
lods
cdq
(bad)
sar
push
push
xchg
sub
add
add
fild
push
mov
push
xsha256
cmps
adc
pop
aam
imul
daa
sub
sub
sub
cs
repz
xchg
add
cmp
cmp
ds
inc
lea
push
lahf
pusha
aas
jnp
jge
adc
pop
xor
mov
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
inc
or
lods
scas
scas
mov
mov
mov
mov
(bad)
(bad)
push
mov
rol
(bad)
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
call
clc
xlat
fcomp
fcmovu
cdq
loop
in
out
call
(bad)
in
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
cli
in
xchg
add
jb
xor
or
or
in
mov
pop
mov
inc
shl
pop
mov
and
add
xchg
dec
(bad)
push
clc
adc
add
pushf
sub
add
or
jns
popf
into
dec
add
add
xor
mov
pop
push
fdivr
inc
adc
jo
sbb
dec
add
int
mov
in
dec
add
cmp
or
xchg
mov
add
not
arpl
jne
fnstenv
inc
cmp
dec
jbe
ror
ror
pop
push
push
mov
es
cmps
sbb
rol
pop
sbb
dec
(bad)
inc
aam
push
les
jnp
in
cli
pop
or
iret
enter
jne
push
adc
cmp
mov
daa
inc
pop
pop
pop
jb
jl
in
jns
adc
xchg
mov
mov
jp
push
movs
repnz
shr
leave
xor
sbb
mov
sahf
and
cmp
ins
dec
test
stc
ret
cs
jns
jne
iret
leave
hlt
xchg
lahf
mov
cdq
pop
lods
dec
mov
in
jns
aam
loop
dec
sahf
pop
jg
in
fdiv
out
pop
daa
iret
dec
repz
in
or
sbb
jns
ds
and
ja
aam
daa
pop
dec
inc
jns
fmulp
and
push
push
push
pop
pop
out
in
cmp
je
int3
mov
in
popf
cmp
mov
pop
cs
lds
enter
iret
leave
cmp
loopne
ins
jmp
dec
fisubr
clc
out
or
inc
xchg
sbb
mov
shl
pushf
dec
pop
pop
jo
cs
loopne
in
ret
aam
out
leave
mov
or
cs
sbb
add
push
or
ins
mov
in
lods
stc
call
fstp
add
jbe
(bad)
cmp
dec
add
mov
mul
aam
std
arpl
mov
(bad)
pop
movs
cmp
mov
cmp
sbb
ins
daa
jg
add
add
ror
or
popf
in
xchg
or
or
mov
push
lahf
pusha
and
mov
add
add
sub
inc
jo
jae
xor
push
pop
stc
jnp
ds
jb
cwde
push
adc
or
mov
mov
xor
dec
popa
push
inc
push
lea
and
sbb
mov
test
xchg
or
mov
sbb
das
adc
sub
push
and
jae
out
mov
sbb
mov
popf
test
mov
and
dec
ficom
adc
dec
cmp
push
dec
in
mov
inc
and
shl
and
and
mov
bound
pop
test
jmp
sbb
push
mov
std
pop
or
lock
sbb
jae
inc
jae
das
push
dec
mov
sbb
arpl
push
add
ss
inc
or
inc
sbb
sahf
dec
inc
mov
push
mov
int3
xchg
or
sub
dec
jmp
fsubr
sahf
add
ins
lock
cs
inc
sbb
icebp
mov
test
jle
or
xchg
dec
xor
inc
pusha
cs
and
add
add
push
push
add
test
loopne
scas
out
push
enter
cmp
inc
jae
mov
(bad)
cmp
jb
outs
adc
jo
adc
mov
or
add
shl
adc
cmp
ss
loope
dec
adc
test
add
xchg
movs
fistp
mov
daa
push
push
and
inc
(bad)
int
test
push
dec
inc
push
scas
stos
dec
call
in
jb
xor
cmc
adc
xor
push
lods
call
dec
call
jae
mov
mov
lods
out
lods
(bad)
call
mov
ins
js
addr16
cmp
sahf
sub
loop
xor
pop
mov
dec
arpl
shr
and
(bad)
(bad)
fmul
dec
mov
jns
ins
daa
mov
inc
mov
das
mov
lods
sbb
xchg
shl
xchg
arpl
pushf
(bad)
xor
xor
xor
xor
xor
push
cmp
push
push
jne
retf
or
xor
shl
push
gs
sbb
call
dec
push
movs
jno
mov
xor
xor
xchg
mov
test
add
or
mov
ret
xor
jnp
and
xor
(bad)
add
xor
sub
adc
es
add
xor
xchg
dec
or
and
(bad)
xor
ss
arpl
clc
jl
test
out
(bad)
push
cdq
idiv
(bad)
push
repnz
fisubr
mov
vandpd
xor
(bad)
(bad)
inc
into
addr16
out
(bad)
sbb
stos
stos
out
jbe
call
cmp
(bad)
call
cli
jge
xchg
cli
cli
adc
mov
leave
sti
lock
lods
in
mov
aam
(bad)
(bad)
jmp
mov
scas
jmp
movs
mul
ins
xchg
fwait
rol
jne
(bad)
(bad)
(bad)
push
sbb
xchg
xchg
scas
dec
es
ss
jle
aas
inc
cmc
div
add
xor
(bad)
(bad)
push
push
movs
movs
hlt
shl
in
stc
icebp
icebp
or
jno
xchg
stos
fcomp
jae
xor
push
sub
(bad)
(bad)
(bad)
inc
xchg
mov
gs
ret
ret
pop
xor
sbb
aaa
xchg
xchg
mov
das
call
(bad)
inc
or
adc
sbb
loop
int
jmp
dec
daa
daa
imul
jne
adc
(bad)
mov
sbb
sub
je
sbb
cs
sbb
mov
pop
out
pop
mov
or
movs
push
push
pop
cmp
(bad)
(bad)
popa
jge
mov
sbb
(bad)
call
sub
jecxz
ds
das
das
jno
test
mov
pop
or
pop
in
in
sub
pusha
jecxz
cld
pop
jns
mov
mov
pop
in
(bad)
(bad)
(bad)
call
push
mov
addr16
cmp
dec
dec
ficomp
pop
pop
call
(bad)
(bad)
(bad)
(bad)
mov
out
out
sub
stos
in
sti
sti
push
xchg
lds
xor
push
adc
pop
dec
stc
stc
adc
(bad)
(bad)
jmp
repnz
lahf
lahf
mov
mov
mov
(bad)
inc
(bad)
(bad)
xchg
lods
and
cmp
cmc
cmc
add
mov
mov
and
inc
scas
fcmovu
jne
and
arpl
adc
xor
test
(bad)
(bad)
jg
repz
mov
int
dec
sbb
adc
adc
xor
mov
xchg
xchg
(bad)
(bad)
(bad)
jmp
cs
pop
cmp
cmps
cmps
repnz
jle
cmp
inc
enter
mov
pop
std
out
sbb
sub
test
sbb
dec
shl
and
sar
and
sub
jle
nop
nop
stos
or
retf
out
sub
mov
cmp
(bad)
jns
pop
pop
loop
or
sbb
fneni(8087
(bad)
(bad)
(bad)
jmp
cmp
push
je
cmp
or
push
xchg
dec
dec
fisttp
push
or
and
mov
ret
scas
cli
ret
rcl
clc
lods
lods
out
les
cmps
cmp
xchg
movs
shl
in
repnz
jmp
clc
jns
mov
out
mov
enter
aaa
pop
fisubr
mov
std
dec
mov
dec
dec
ror
test
lods
push
pop
mov
repz
hlt
pop
iret
jmp
jp
cmp
scas
jmp
adc
or
outs
mov
mov
and
jb
sbb
and
cmps
cmps
(bad)
(bad)
(bad)
push
jae
mov
xchg
mov
retf
call
fnstsw
je
ds
pop
and
mov
movs
fsubr
xchg
mov
nop
jl
fisttp
mov
(bad)
int3
data16
nop
dec
dec
fadd
xor
div
add
push
adc
popa
popa
mov
scas
push
push
stc
imul
rcr
sbb
or
loope
jmp
clc
adc
cwde
cwde
mov
adc
hlt
jg
and
imul
test
fwait
fwait
mov
push
push
and
jmp
into
dec
stos
push
push
(bad)
(bad)
out
add
sub
(bad)
jp
mov
or
(bad)
(bad)
(bad)
dec
fcmovbe
out
xor
push
ret
sub
sub
jmp
dec
adc
mov
test
push
cld
ins
mov
push
cmp
jns
cdq
lea
sahf
out
push
add
sahf
out
out
inc
popf
sahf
out
sahf
inc
xchg
iret
sar
addr16
jmp
xchg
pop
ret
repz
scas
push
inc
add
iret
repz
hlt
xor
xchg
repz
repz
aas
or
iret
repz
gs
sub
repz
ss
cmp
repz
repz
je
sub
iret
repz
dec
popa
into
jnp
cmp
repz
cmc
push
add
pop
enter
repz
inc
(bad)
repz
repz
dec
imul
repz
in
vandnps
adc
xor
inc
mov
repz
ror
iret
repz
shl
repz
repz
ins
dec
adc
repz
xor
cmp
repz
repnz
cmp
repz
xchg
mov
iret
sar
jle
cmp
cmp
sub
cmp
repz
repz
jbe
push
iret
repz
dec
push
fisttp
ins
in
iret
repz
outs
out
cmps
test
cmp
rep
aaa
mov
inc
iret
repz
pop
mov
fs
cmp
repz
cli
pop
and
repz
sbb
mov
repz
outs
jb
icebp
(bad)
push
cmp
repz
jl
and
repz
repz
repz
les
cmp
repz
pop
stc
rcl
pop
daa
mov
cmp
mov
mov
iret
repz
and
iret
repz
js
(bad)
clc
iret
repz
adc
xor
mov
ret
mov
adc
repz
repz
(bad)
cmp
iret
repz
ja
repnz
iret
repz
add
(bad)
repz
repz
stos
jbe
or
cmp
leave
jge
pop
inc
lock
repz
aam
scas
pushf
repz
rep
jb
mov
iret
repz
xchg
es
test
xor
in
jno
cmp
repz
adc
cmp
and
sbb
repz
adc
iret
repz
mov
or
sub
sbb
mov
push
cmp
mov
repz
repz
test
iret
repz
add
and
mov
cmp
repz
retf
mov
iret
repz
pop
iret
shr
iret
repz
stos
sti
inc
dec
xor
inc
stc
add
repz
repz
test
mov
inc
(bad)
xchg
popf
cmp
cmp
repz
mov
and
repz
repz
ror
or
repz
adc
pop
xchg
inc
pop
cmp
repz
cmps
jle
fs
repz
sbb
or
fsub
sub
cmp
out
mov
iret
repz
or
loopne
iret
repz
cmp
dec
push
and
cmp
repz
shr
repz
in
out
iret
repz
aaa
ins
(bad)
aad
test
ins
push
hlt
jmp
scas
or
iret
and
(bad)
cmp
repz
fnsave
repz
repz
iret
repz
mov
dec
add
push
cmp
repz
xor
cmp
repz
cmp
cwde
adc
mov
push
xchg
into
repz
repz
sub
mov
mov
cmp
repz
cdq
sub
iret
repz
mov
repz
ja
repnz
iret
repz
add
(bad)
repz
repz
stos
jbe
or
cmp
leave
jge
pop
inc
lock
repz
aam
scas
pushf
repz
rep
jb
mov
iret
repz
xchg
es
test
xor
in
jno
cmp
repz
adc
cmp
and
sbb
repz
adc
iret
repz
mov
or
sub
sbb
mov
push
cmp
mov
repz
repz
test
iret
repz
add
and
mov
cmp
repz
retf
mov
iret
repz
pop
iret
shr
iret
repz
stos
sti
inc
dec
xor
inc
stc
add
repz
repz
test
mov
inc
(bad)
xchg
popf
cmp
cmp
repz
mov
and
repz
repz
ror
or
repz
adc
pop
xchg
inc
pop
cmp
repz
cmps
jle
fs
repz
sbb
or
fsub
sub
cmp
out
mov
iret
repz
or
loopne
iret
repz
cmp
dec
push
and
cmp
repz
shr
repz
in
out
iret
repz
aaa
ins
(bad)
aad
test
ins
push
hlt
jmp
scas
or
iret
and
(bad)
cmp
repz
fnsave
repz
repz
iret
repz
mov
dec
add
push
cmp
repz
xor
cmp
repz
cmp
cwde
adc
mov
push
xchg
into
repz
repz
sub
mov
mov
cmp
repz
cdq
sub
iret
repz
mov
cmp
jnp
imul
sahf
out
lds
add
out
sahf
sub
xlat
stos
jbe
jns
out
or
cli
pop
out
sahf
out
lock
aam
sahf
out
sahf
scas
pushf
movs
jb
mov
popa
loope
std
xchg
xchg
dec
shl
xor
xor
shl
push
and
adc
imul
xchg
test
daa
xor
shl
jne
sub
dec
rcr
sbb
mov
push
cmp
mov
jecxz
xor
xor
test
(bad)
cmp
repz
pop
push
cmp
repz
mov
repz
pop
iret
shr
stos
sti
cmp
repz
dec
xor
repz
add
cmp
repz
lahf
test
mov
repz
popf
cmp
mov
mov
and
dec
repz
repz
or
in
cmp
repz
xchg
inc
pop
(bad)
repz
repz
jle
fs
iret
repz
sbb
or
and
nop
mov
cmp
repz
mov
repz
or
loopne
cmp
cmp
repz
push
and
ret
iret
repz
cmp
in
out
aaa
ins
cmp
repz
aad
test
repz
hlt
jmp
scas
or
iret
repz
cmps
mov
call
fnsave
mov
mov
cmp
repz
add
push
popa
repz
repz
iret
repz
sbb
adc
repz
(bad)
iret
repz
xchg
into
push
iret
repz
sub
mov
repz
out
push
repz
sub
scas
fst
mov
das
stos
push
hlt
cmps
push
jle
gs
sbb
movs
ret
cmp
pop
xchg
cmp
imul
popf
inc
icebp
lods
cli
pop
stos
dec
jecxz
xchg
and
cli
push
lods
jbe
test
dec
and
(bad)
call
cld
lds
retf
xlat
es
mov
dec
and
jmp
ret
das
(bad)
(bad)
(bad)
push
or
imul
mov
pop
out
xchg
pushf
xchg
mov
push
pop
fcmovbe
mov
sub
loopne
sub
ret
hlt
mov
cdq
pop
imul
jno
mov
dec
lock
data16
cmp
sbb
adc
jg
mov
(bad)
(bad)
(bad)
push
mov
and
pop
pop
sbb
clc
mov
jae
(bad)
(bad)
call
and
add
jecxz
(bad)
push
push
stos
sub
mov
add
aaa
or
(bad)
inc
mov
add
in
push
sbb
sub
pop
repnz
imul
(bad)
(bad)
push
int
add
bound
les
push
popf
mov
mov
xor
fidiv
cmp
out
stos
pop
jno
push
mov
and
(bad)
(bad)
fld
cmp
dec
out
inc
xchg
push
lea
add
aam
pusha
push
adc
and
(bad)
(bad)
(bad)
(bad)
mov
inc
int3
fstp
call
mov
jns
out
(bad)
inc
push
inc
jmp
mov
in
dec
push
jmp
(bad)
call
jo
ins
pop
jb
std
push
(bad)
sti
jne
aad
ss
fldenv
sbb
and
ss
addr16
push
out
mov
(bad)
(bad)
(bad)
out
xchg
rcr
fwait
xchg
sahf
add
dec
popa
fsub
mov
sbb
sbb
loop
mov
in
sbb
jmp
loopne
adc
pop
sbb
xor
movs
mov
push
test
test
pop
cli
(bad)
call
pusha
std
test
cmc
mov
pop
sti
(bad)
(bad)
jmp
inc
sub
and
fdiv
in
arpl
xor
retf
test
adc
(bad)
(bad)
call
adc
test
jge
mov
xor
(bad)
sub
dec
fdiv
(bad)
(bad)
inc
jecxz
sub
mov
cli
inc
jmp
mov
mov
(bad)
(bad)
(bad)
(bad)
jge
fsub
xor
(bad)
fnstcw
rol
mov
mov
cmps
cmc
or
(bad)
(bad)
(bad)
push
mov
in
js
or
push
jle
(bad)
test
call
(bad)
cmp
pop
add
cmc
lahf
pop
cmp
aad
test
enter
adc
jge
call
pushf
arpl
cmp
or
sbb
in
call
out
outs
gs
jmp
jle
(bad)
(bad)
(bad)
(bad)
mov
call
(bad)
ss
jmp
(bad)
xor
xor
jg
inc
cld
movs
xchg
xor
aaa
cld
or
loopne
(bad)
(bad)
call
fcom
inc
in
(bad)
jg
push
push
pop
xchg
imul
jbe
(bad)
lea
mov
int3
(bad)
(bad)
(bad)
jmp
add
sahf
shl
sbb
sub
mov
popf
pop
jmp
(bad)
(bad)
(bad)
inc
inc
cs
sbb
push
jmp
(bad)
inc
adc
mov
(bad)
(bad)
(bad)
clc
adc
jmp
cmp
into
test
leave
xor
jp
mov
pushf
rcr
pop
push
bnd
sbb
(bad)
(bad)
call
jns
(bad)
aaa
mov
pop
std
stos
pop
fistp
fild
mov
(bad)
(bad)
(bad)
jmp
sub
mov
ret
jb
loop
or
cmp
mov
or
add
or
(bad)
cli
aaa
std
push
nop
jnp
test
xor
sar
sahf
out
add
xchg
retf
icebp
out
sahf
out
xchg
push
not
and
dec
jns
out
addr16
loope
adc
jns
out
(bad)
out
jmp
out
sahf
fisubr
jns
out
js
fnsave
out
mov
and
jns
inc
loopne
sbb
pop
jns
out
sbb
jns
out
sub
add
movs
repnz
pop
sub
out
xchg
lock
sahf
out
mov
jns
jne
stos
push
push
stc
jns
out
cmp
out
sahf
out
jmp
int3
sahf
out
sahf
ja
mov
fild
sahf
out
jmp
out
sahf
out
dec
sti
push
push
sahf
out
sahf
daa
fs
cmp
psrld
sahf
out
push
or
inc
sahf
out
sahf
sbb
test
out
dec
mov
jns
out
xor
fsubr
out
sahf
arpl
adc
jge
sahf
out
clc
adc
repz
sahf
out
shr
sahf
out
sahf
and
sbb
out
(bad)
jns
out
sar
iret
sub
jns
out
movs
in
fwait
sahf
out
sahf
(bad)
call
sahf
out
jl
mov
cmps
out
sahf
out
jnp
hlt
add
gs
out
jns
out
into
aam
scas
xor
jns
out
shl
mov
out
sahf
adc
lea
out
dec
push
(bad)
sbb
jns
out
jg
pop
jae
out
sahf
cs
push
xor
mov
out
jp
mov
xor
in
cmp
aas
jns
out
sahf
mov
cmp
pop
jb
out
sahf
out
inc
jno
pushf
sahf
out
sahf
nop
popa
jo
inc
cmps
jns
out
movs
pop
imul
sahf
out
add
ins
jbe
out
sahf
dec
xlat
retf
inc
mov
jns
push
shl
jns
out
stc
pop
pushf
jp
out
sahf
pop
and
enter
out
jns
jno
lods
out
sahf
out
cmp
xor
ja
mov
out
std
ins
clc
rol
out
sahf
out
stos
sub
jnp
out
sahf
or
jns
out
mov
loop
mov
(bad)
(bad)
push
push
loope
out
sahf
jmp
out
lahf
adc
push
add
jns
out
adc
out
sahf
sahf
inc
mov
or
out
nop
xchg
out
sahf
out
jb
cmp
sahf
out
sahf
cmp
cmps
push
cs
out
out
xchg
lds
out
sahf
out
sbb
jns
pop
or
jns
out
pop
frstor
cmc
out
sahf
out
jle
(bad)
cld
sahf
out
sahf
icebp
fadd
sahf
out
cmp
out
sahf
out
jecxz
mov
sahf
mov
sub
dec
jns
out
shl
jns
out
mov
out
sahf
inc
adc
sahf
out
xchg
sub
jns
out
mov
out
sahf
call
sahf
out
or
out
sahf
out
mov
sahf
out
sahf
fcomp
jns
out
mov
add
mov
jns
out
push
jmp
inc
sbb
jns
out
or
cmp
leave
out
sahf
out
mov
jae
sahf
out
sahf
aaa
int
outs
fcomi
jns
out
les
ret
and
dec
xchg
add
sahf
rol
out
inc
pop
daa
stos
popf
out
sahf
out
jecxz
jbe
sahf
out
sahf
add
sub
out
mov
out
sahf
out
ror
jns
push
mov
jns
out
mov
loope
out
sahf
out
into
fistp
push
sahf
out
sahf
push
imul
jns
fidivr
dec
out
sahf
out
push
jmp
lds
sub
sahf
out
jns
imul
out
cmps
repz
and
and
out
fnstsw
out
(bad)
out
sahf
out
push
cwde
mov
sahf
fld1
mov
enter
out
inc
test
sub
jns
out
pop
push
test
sub
or
out
push
out
fwait
rcr
jns
out
adc
jns
sbb
mov
out
jne
jg
jb
jns
out
sti
inc
and
sahf
out
sahf
in
arpl
out
mov
out
sahf
out
shl
sahf
jmp
dec
jns
out
cmp
aam
jp
jns
out
lods
cmp
sahf
out
sahf
jle
fdivr
ret
pop
jns
out
rcl
and
sahf
out
cmp
pop
call
(bad)
mov
out
outs
lahf
mov
aas
out
sahf
out
mov
out
sahf
cmps
add
int
dec
jns
out
out
stos
xchg
shr
jns
out
gs
mov
or
adc
xlat
jns
out
mov
out
sahf
out
inc
shl
adc
out
sahf
(bad)
idiv
cmp
out
push
out
sahf
out
or
out
sahf
push
retf
xor
call
aad
cmps
jmp
cmp
inc
mov
imul
imul
imul
cmps
imul
cmps
imul
imul
cmps
imul
imul
imul
cmps
imul
xchg
push
aam
cmps
imul
cmps
imul
std
in
mov
imul
cmps
imul
mov
cmps
imul
test
sahf
shr
shl
lar
xchg
xor
shr
adc
mov
xchg
adc
xor
rol
addr16
dec
shl
lock
dec
shl
jae
lods
je
xor
shl
out
xor
sub
call
shl
outs
inc
icebp
sbb
xor
shl
sub
mov
xor
outs
mov
push
stos
sbb
cld
push
shl
jns
dec
shl
js
xor
shl
hlt
pop
(bad)
xor
shl
daa
xor
jg
xor
shr
dec
shl
xchg
leave
dec
ror
dec
shl
enter
mov
sbb
shl
add
xor
shl
ja
es
xor
shr
arpl
push
adc
add
push
loope
cmp
mov
or
into
mov
adc
push
mov
xchg
push
(bad)
pop
or
loope
scas
push
adc
ret
cs
xor
inc
scas
or
loope
into
ficom
ret
jbe
push
test
or
sub
inc
ret
or
xchg
adc
inc
push
jbe
and
inc
sbb
sub
jbe
adc
(bad)
sahf
push
and
test
pop
popa
(bad)
cmps
out
xchg
dec
into
pop
sub
xchg
mov
jbe
or
loope
fdivp
popa
sub
cli
ss
cmp
and
(bad)
lock
xchg
xchg
dec
mov
or
popa
out
scas
inc
test
das
popa
and
ret
or
xchg
dec
mul
pushf
test
inc
cmp
or
mov
xchg
cs
(bad)
and
fidivr
punpcklwd
ficom
pop
ret
mov
test
ret
or
push
ds
mov
xchg
push
push
pop
or
jle
adc
ds
fisub
test
das
loope
imul
push
ret
push
or
xchg
mov
mov
and
fimul
dec
test
and
cmp
xchg
ret
or
push
mov
outs
popa
sub
or
push
push
xor
ret
ds
cmps
js
inc
loope
jle
adc
ret
mov
test
or
and
dec
sbb
test
and
and
xchg
push
inc
push
pop
or
cmps
jo
sahf
(bad)
(bad)
mul
sub
or
cs
lock
sub
or
popa
scas
inc
inc
adc
ret
cs
xchg
xor
(bad)
or
and
dec
pop
push
xchg
das
popa
sub
jle
cs
or
xchg
xor
sahf
cmps
ds
and
push
pop
or
(bad)
pop
lock
ret
push
sub
or
es
xchg
adc
ret
pushfw
test
or
sub
mov
ret
push
push
push
test
sub
sub
pop
or
xchg
mov
into
mov
pop
loope
sbb
mov
inc
push
lock
push
push
out
and
cmp
dec
loope
push
jle
(bad)
ret
mov
sahf
or
sub
(bad)
ret
(bad)
pop
test
arpl
sbb
inc
iret
out
sahf
das
add
sbb
jns
cmp
pop
push
dec
inc
jns
out
je
bound
out
sahf
out
cmps
lods
pushf
xchg
sahf
out
sahf
mov
jns
out
(bad)
iret
rcr
jnp
jns
out
ins
push
pop
sahf
out
sahf
inc
dec
and
xor
jns
add
adc
out
sahf
out
fst
out
sahf
out
sahf
icebp
cli
xchg
cwde
test
mov
out
sahf
out
loopne
fcmovbe
sahf
out
sahf
int3
(bad)
scas
movs
mov
jns
mov
out
push
pop
push
sahf
out
sahf
jl
push
adc
out
xor
and
(bad)
out
sahf
out
fwait
nop
mov
sahf
mov
aad
ret
enter
jns
repnz
in
out
sahf
out
sub
adc
sahf
out
sahf
pop
or
outs
jae
jns
out
dec
inc
pop
push
mul
jns
out
loope
fcmovnbe
sahf
out
sahf
int
scas
movs
mov
jns
mov
sahf
out
push
pop
imul
jns
jge
pop
adc
add
out
xor
and
sahf
out
call
sahf
mov
aam
ret
sahf
out
clc
repz
in
out
sahf
out
sub
adc
sahf
out
sahf
push
or
jns
out
dec
inc
pop
push
add
jns
out
pop
sbb
es
out
sahf
cmp
pop
push
dec
inc
jns
out
jne
arpl
out
sahf
out
cmps
lods
popf
xchg
sahf
out
sahf
mov
jns
out
(bad)
fdivr
jns
out
ins
addr16
pop
sahf
out
sahf
inc
dec
and
xor
jns
out
push
add
jns
out
(bad)
out
sahf
out
sahf
lock
xchg
cdq
test
mov
out
sahf
out
sbb
xor
sahf
out
sahf
and
jb
jns
out
pop
push
inc
dec
shl
jns
out
retf
jmp
(bad)
repz
sahf
out
mov
jns
out
mov
out
sahf
xchg
cwde
rcr
leave
les
out
out
std
lock
sahf
out
jno
pop
push
sahf
out
sahf
inc
dec
add
sbb
sahf
out
aaa
cmp
sahf
out
ja
pop
push
sahf
out
sahf
inc
dec
add
sahf
out
xor
es
mov
stos
mov
sahf
aad
iret
ret
out
loope
sti
not
out
sahf
out
int3
shl
sahf
out
sahf
clc
cmc
mov
sahf
out
mov
jns
out
sbb
xor
sahf
out
sahf
sub
jns
out
pop
push
inc
dec
(bad)
jns
out
ror
jecxz
out
sahf
hlt
stc
mov
test
jns
out
xchg
jns
out
adc
jns
and
bound
jne
sahf
out
push
pop
dec
inc
popa
out
sahf
out
jnp
push
pop
sahf
out
sahf
dec
inc
or
push
jns
out
cmp
out
sahf
out
stos
cmps
test
lahf
xchg
(bad)
ret
into
jns
out
in
loopne
cli
mov
jns
out
lods
mov
jns
cdq
xchg
(bad)
(bad)
sahf
out
jmp
icebp
cld
addr16
sahf
out
jge
push
pop
sahf
out
sahf
dec
inc
lar
jns
and
out
sahf
out
push
sbb
xor
and
imul
push
pop
dec
inc
fsub
jns
out
(bad)
retf
call
sahf
repnz
out
or
sahf
out
adc
and
sahf
out
sahf
ss
dec
inc
pop
push
jns
out
ins
gs
nop
out
sahf
out
or
sahf
cmps
scas
fcom
retf
sahf
out
cld
cmc
out
out
out
sahf
out
sub
pop
push
sahf
out
sahf
or
push
push
pop
inc
dec
stos
out
sahf
out
mov
out
sahf
popf
xchg
jecxz
icebp
clc
jns
out
(bad)
into
aad
jbe
jns
out
fs
push
pop
sahf
out
sahf
inc
dec
ds
sub
jns
out
sbb
or
out
jns
out
hlt
std
ret
out
sahf
rcr
scas
cmps
mov
jns
sbb
out
pop
push
imul
jb
or
push
jns
out
and
xor
fucom
jns
out
iret
(bad)
stc
lock
out
sahf
jmp
xchg
pushf
xchg
mov
mov
sahf
out
(bad)
test
sahf
fcmovbe
movs
lods
mov
jns
out
or
sahf
out
outs
addr16
push
sahf
out
sahf
dec
inc
xor
es
jns
out
adc
add
xlat
out
sahf
out
(bad)
cli
sahf
out
sahf
loope
lahf
xchg
lea
mov
mov
out
push
pop
arpl
out
sahf
jno
clts
sbb
jns
and
xor
xchg
mov
jns
lods
movs
rcr
ror
sahf
out
idiv
in
or
jns
out
sbb
cs
sahf
out
sahf
cmp
inc
dec
push
pop
jns
out
outs
je
mov
test
mov
jns
xchg
sahf
jmp
sahf
out
int
(bad)
xor
jns
out
and
adc
sahf
pop
push
jns
imul
out
pop
push
dec
inc
pushf
sahf
out
adc
test
mov
int3
mov
out
fsub
add
sahf
cmps
stc
call
jo
xchg
cmps
test
add
lds
out
jns
xlat
ds
push
inc
nop
clc
adc
adc
pusha
test
push
push
add
push
mov
fcmovnb
push
mov
and
xor
ds
inc
ins
inc
push
push
sbb
mov
cs
adc
cld
adc
jp
add
ss
fs
mov
cwde
cmps
lock
jnp
mov
ds
xchg
inc
pop
ss
sbb
ins
cs
cwde
shl
out
xchg
xchg
mov
(bad)
popf
inc
sbb
loopne
push
add
jns
add
xchg
fistp
fsubp
mov
cwde
push
ins
xchg
imul
mov
ds
jl
cs
and
repz
inc
fidivr
jo
xchg
xor
push
enter
mov
(bad)
loopne
pop
mov
adc
daa
push
test
nop
push
cmp
and
inc
dec
mov
(bad)
mov
loopne
idiv
cmps
movs
inc
mov
loopne
out
int
(bad)
loopne
pop
dec
call
js
rcr
cmp
pop
int3
push
mov
es
cmp
cld
fdivr
out
data16
je
mov
iret
dec
rcl
push
enter
push
outs
call
pop
es
ror
fdivr
sub
cs
es
xor
push
cmp
cs
fsubr
(bad)
hlt
cmp
addr16
mov
cmp
jo
es
data16
jns
and
xchg
sahf
nop
ss
xchg
cmp
js
push
in
jbe
les
or
neg
mov
dec
cs
jbe
jl
cmp
mov
push
lock
mov
test
push
mov
push
js
mov
adc
push
lods
sahf
sbb
jo
ss
mov
mov
push
sub
dec
dec
mov
out
push
shl
mov
inc
or
cmp
pop
mov
ss
cmp
mov
inc
in
out
mov
dec
out
or
lea
jbe
and
in
jnp
pop
cmovbe
dec
fdivr
ins
push
sub
mov
faddp
add
pop
mov
cmp
cmps
cmp
jnp
ror
fsubr
enter
xchg
(bad)
adc
sub
je
pop
mov
(bad)
xor
cmps
call
and
cmp
jnp
push
enter
inc
or
push
or
imul
out
dec
inc
and
xor
loopne
neg
add
pop
inc
mov
imul
js
iret
pop
xchg
lods
test
xchg
mov
fidivr
add
jl
pusha
neg
out
je
aam
fs
loop
mov
mov
scas
inc
jnp
pop
iret
xchg
push
int3
ss
mov
push
sub
out
imul
sub
pop
inc
test
js
pusha
pop
mov
inc
into
push
cmc
add
mov
sahf
xchg
pop
fisub
es
neg
sar
loopne
mov
enter
xlat
ret
or
and
mov
les
mov
sub
jg
cmp
jl
pop
mov
pop
push
and
pop
push
and
js
iret
loope
or
push
mov
rcl
loope
out
cmp
mov
push
out
es
ins
mov
sahf
test
aad
jnp
ror
mov
mov
sub
outs
ror
loopne
out
push
movs
inc
pop
push
test
xchg
mov
cs
push
add
push
push
jo
mov
fcom
xchg
push
dec
xor
push
clc
dec
loopne
aam
and
xchg
fdiv
dec
jnp
jecxz
cmp
aam
xor
ss
fdivr
in
cmps
jle
cs
out
es
xchg
mov
inc
xchg
hlt
sahf
rol
xor
(bad)
nop
out
mov
push
add
(bad)
mov
cmp
dec
push
pushf
push
push
push
pop
neg
ds
pop
loopne
addr16
sar
cmps
mov
push
out
aaa
cs
mov
scas
adc
loopne
mov
add
mov
pop
pop
js
shr
push
pusha
push
and
hlt
push
jbe
xchg
aas
pop
add
cs
loopne
imul
iret
add
jle
cs
scas
cmps
loope
xchg
out
lea
cmp
ja
les
cwde
inc
fidiv
dec
ja
and
push
test
mov
cmp
push
adc
loopne
ins
pop
fcom
push
pop
dec
cmps
div
ja
iret
sar
xor
push
sbb
(bad)
ror
mov
jg
jns
sbb
cs
cmp
jns
iret
pop
cs
or
sub
fidivr
(bad)
ss
sahf
rcr
clc
or
inc
(bad)
xor
sbb
aas
and
push
add
or
push
and
add
add
rcl
mov
or
loope
rcl
and
push
and
add
sub
inc
add
adc
push
mov
push
push
push
add
add
xor
pop
mov
inc
inc
push
dec
sub
add
fidivr
or
inc
sbb
inc
and
mov
cmp
pop
dec
aaa
push
pop
dec
sahf
pop
out
into
add
inc
add
adc
jns
test
xchg
push
loop
push
mov
mov
mov
push
xchg
dec
fnstsw
out
xor
or
push
push
cs
and
inc
and
addr16
jnp
or
inc
sbb
inc
dec
test
(bad)
fimul
inc
sbb
dec
push
add
jb
sbb
mov
cmp
add
inc
add
movs
add
sub
add
mov
jmp
push
mov
aas
xor
(bad)
call
mov
add
add
pusha
ins
lahf
fcmovnb
movs
iret
add
(bad)
(bad)
(bad)
jmp
push
xor
add
pop
inc
add
or
xchg
push
pusha
popa
adc
(bad)
call
call
inc
inc
js
ins
xchg
push
not
(bad)
pop
(bad)
cwde
or
push
push
and
aad
imul
jne
mov
aaa
loope
hlt
jns
(bad)
lahf
xrelease
dec
iret
push
mov
ret
xchg
sar
psubq
pop
cld
jg
test
sbb
das
jmp
sub
jp
mov
jl
(bad)
outs
(bad)
inc
mov
(bad)
movs
lock
cld
push
jmp
cli
xchg
shl
(bad)
sbb
out
(bad)
outs
pop
push
addr16
mov
push
js
pop
jg
xor
dec
stc
outs
(bad)
mov
inc
add
aaa
cmc
daa
add
movs
push
(bad)
out
push
fnstsw
cmp
call
cld
sbb
clc
push
pop
jnp
push
mov
(bad)
jg
jg
in
arpl
mov
jp
add
inc
and
push
scas
sub
sbb
or
mov
push
aam
jl
pop
stc
dec
das
std
cmps
dec
xor
mov
(bad)
fisttp
sbb
scas
sahf
inc
xor
push
push
jg
pop
ins
add
loope
push
push
(bad)
add
or
pop
dec
mov
sbb
cld
ss
pop
in
xor
or
repnz
data16
repz
add
cmp
sub
mov
add
sub
fcom
pop
fnstcw
cmc
call
addr16
mov
mov
mov
sbb
and
retf
sbb
(bad)
sbb
lahf
daa
pop
fld
push
(bad)
mov
inc
ss
mov
xor
ss
ss
fwait
sbb
dec
or
ins
mov
std
xor
inc
fimul
inc
in
mov
in
stos
mov
mov
pop
pop
imul
pop
ss
cmp
mov
mov
adc
ja
stc
jno
int3
xlat
jg
mov
cmp
mov
in
aas
jp
push
jp
cmp
add
fwait
xor
cwde
pop
data16
outs
add
in
xor
mov
jg
pop
ja
fs
and
or
neg
sbb
dec
sbb
xor
inc
xlat
sub
xchg
jl
mov
and
inc
out
jmp
sbb
pop
pop
dec
inc
lock
adc
inc
call
clc
adc
mov
in
xor
(bad)
mov
mov
mul
test
loop
aad
ja
outs
sti
call
sbb
add
cld
jnp
or
sub
lea
sahf
add
ret
cmp
inc
je
dec
or
jp
pop
inc
movs
pop
repz
sbb
stc
stos
imul
inc
ss
sbb
xor
pop
ss
mov
lea
push
stos
or
jae
(bad)
sbb
sbb
imul
stos
push
popa
pop
xchg
aad
(bad)
fidiv
jns
cmps
or
scas
outs
outs
mov
repnz
cmc
jns
sbb
xor
xlat
sbb
push
xor
iret
lds
jle
add
test
scas
sub
xchg
fwait
inc
out
adc
sub
xor
fs
fist
jg
jg
or
push
inc
je
movs
sbb
das
cld
sbb
(bad)
aaa
pop
(bad)
add
icebp
pop
sub
fistp
push
fsub
add
and
jnp
ins
xlat
enter
stc
and
sbb
or
imul
pop
fsub
gs
xchg
sub
jge
push
sub
fwait
daa
xor
sbb
dec
retf
out
cmps
xchg
sbb
pushf
stos
jae
xchg
int
daa
sbb
mov
(bad)
call
or
mov
cs
popa
jecxz
repnz
stc
mov
sub
xor
in
pop
or
cli
sub
ins
sub
mov
leave
and
aad
call
jne
int3
jae
jae
ds
inc
out
jae
popa
test
sbb
icebp
xchg
mov
neg
jg
jl
cmc
repz
mov
add
pop
loope
push
pop
add
cld
or
inc
pop
jo
fdiv
shr
cld
(bad)
or
xchg
cmps
dec
sub
push
sbb
xor
push
adc
addr16
repnz
loopne
iret
enter
hlt
gs
imul
hlt
retf
leave
cmp
outs
stc
es
in
jae
inc
xor
xchg
lock
inc
popw
ins
jbe
or
sbb
out
cld
retf
ss
sbb
fcmovnu
popa
mov
aam
jmp
fistp
or
call
dec
sbb
pop
or
jge
cmc
pop
xor
stc
pop
xor
mov
pusha
movsx
or
cmp
xchg
xor
movs
mov
rcl
(bad)
xor
retf
sbb
mov
lahf
popa
ror
in
mov
std
lahf
stc
cmp
je
mov
pop
sar
mov
(bad)
outs
add
xchg
lods
xor
out
fwait
sbb
xlat
jno
enter
icebp
out
or
push
mov
xor
into
mov
xchg
pop
cmps
push
aas
imul
fcomp
ins
shr
popf
(bad)
out
jle
jg
push
(bad)
imul
xchg
inc
or
sbb
inc
ss
sbb
sbb
xor
push
ss
ss
popa
and
cld
in
(bad)
and
fstp
pop
in
mov
int
out
and
arpl
mov
nop
sbb
sbb
xchg
ret
dec
mov
pop
cld
or
xor
sbb
in
xchg
test
in
(bad)
out
bound
xchg
popf
jp
inc
or
in
or
or
dec
xor
ret
inc
ss
push
push
add
gs
pushf
cld
cmp
inc
out
push
cmp
scas
xor
iret
retf
cmps
fwait
sbb
xor
and
mov
in
fistp
dec
call
cld
inc
mov
xor
outs
xor
in
movs
pop
fnstenv
xor
xor
je
sti
or
mov
pop
popa
cdq
and
arpl
repz
or
retf
xor
out
out
iret
or
fxam
xor
dec
sahf
xchg
iret
mov
movs
mov
mov
or
xor
sub
xor
xor
pop
sti
inc
mov
adc
push
(bad)
push
scas
push
nop
sub
out
and
ja
movs
push
and
sbb
sbb
cmp
push
sbb
int
fwait
jl
les
lds
loopne
nop
jne
aaa
sub
gs
stos
add
int
mov
cmp
je
push
outs
sbb
sbb
cmp
fwait
ins
inc
lea
and
fwait
xchg
iret
daa
push
pop
and
(bad)
lods
sbb
repz
popf
xchg
xor
retf
mov
jg
(bad)
xchg
or
push
cmp
or
sub
jg
(bad)
fnstcw
fwait
add
inc
sub
int3
test
sub
mov
inc
xor
sbb
xchg
out
fidivr
dec
ja
stc
push
ins
cmp
sbb
loopne
fidivr
and
and
sub
pop
call
daa
xchg
jg
cdq
stc
xchg
jg
mov
gs
pusha
(bad)
inc
xchg
jg
dec
inc
cmp
cwde
pop
repnz
rol
(bad)
xor
imul
cld
rol
scas
adc
mov
test
lds
inc
xlat
(bad)
jmp
fcmovnb
in
pop
aas
sbb
loope
mov
icebp
fwait
clc
outs
mov
in
inc
push
xor
fisub
popa
ret
dec
jmp
scas
scas
aas
adc
pop
pop
inc
pusha
(bad)
xchg
aas
mov
cdq
ja
sub
aaa
push
pop
(bad)
mov
fimul
shl
aas
(bad)
mov
in
loop
out
ds
out
data16
ss
fisttp
fmul
or
idiv
sbb
push
jg
aaa
lock
jg
jecxz
fnsave
repnz
mov
ins
sub
mov
push
(bad)
jb
cld
add
dec
imul
mov
aam
sbb
jns
dec
aad
aas
mov
mov
sub
mov
call
pop
fwait
jmp
or
lahf
ret
aad
int
out
pop
fistp
pusha
js
dec
push
xchg
int
int
aaa
xor
fisttp
xchg
int
sbb
(bad)
dec
aas
aad
ret
sbb
aaa
cdq
fbld
scas
std
popf
mov
jmp
repz
sub
in
lea
sbb
push
ss
repz
fucomip
ror
pop
jno
cmp
lds
or
mov
mov
cld
les
(bad)
pop
outs
into
hlt
and
(bad)
in
push
jnp
pop
or
aaa
ins
pop
outs
pop
mov
dec
std
ret
mov
add
or
lahf
std
(bad)
sti
sbb
das
dec
ja
xor
jmp
int
int
ret
fistp
sbb
cmp
gs
sti
int
xor
and
adc
cmp
or
(bad)
aaa
mov
add
retf
xchg
cmp
xchg
pop
je
push
push
jno
fwait
lods
lock
jbe
cmp
stos
outs
and
xchg
push
fmul
and
push
lea
gs
das
push
movs
push
call
push
(bad)
imul
ret
inc
(bad)
sbb
outs
std
stos
xor
jae
jae
sub
pop
mov
(bad)
inc
or
cld
retf
jg
sbb
fnsave
adc
clc
fldcw
in
popf
mov
jae
int3
sar
js
add
mov
stos
cmp
jmp
(bad)
leave
ror
mov
and
outs
dec
cmp
cmps
loope
enter
pop
(bad)
sbb
repnz
shl
ss
pop
stc
nop
xchg
ins
mov
xor
sar
std
xor
jl
ss
ret
mov
add
repnz
fdivr
xor
(bad)
xor
les
xlat
in
xlat
iret
push
popf
xchg
lahf
loop
test
dec
ss
mov
inc
stc
repnz
xor
sbb
(bad)
xor
jae
repz
jmp
iret
sbb
(bad)
fs
ins
enter
xchg
sub
fwait
stos
jle
call
sbb
sbb
iret
leave
daa
mov
rcl
in
addr16
jns
aaa
and
sahf
outs
gs
fst
fwait
and
scas
xor
cmp
inc
jne
cwde
jnp
lahf
sbb
pusha
leave
bound
pop
pop
sbb
pop
and
inc
ss
imul
ss
scas
stos
xchg
in
fstp
pushf
and
es
ins
js
pop
fstp
sbb
mov
pop
fstp
pop
and
inc
mov
inc
mov
pop
movs
jmp
mov
sbb
dec
xor
mov
xor
(bad)
(bad)
cld
bnd
mov
mov
mov
mov
ja
icebp
rol
xor
pop
aaa
sub
or
sub
stc
aas
rep
jp
lock
fstp
aam
cmp
cmp
das
inc
mov
cmc
addr16
push
stc
xchg
int
mov
add
mov
das
lahf
and
adc
out
sbb
sbb
pop
add
imul
rcr
fstp
imul
sbb
fsubr
jnp
test
fldcw
cmps
mov
fld
(bad)
repz
mov
fbstp
jg
(bad)
jbe
inc
jne
or
fstp
pop
dec
ds
in
sub
shl
retf
push
push
popf
mov
mov
mov
sbb
mov
sub
pop
jmp
test
jae
push
std
test
das
adc
mov
repnz
dec
jnp
std
dec
jo
mov
add
aas
mov
xchg
sbb
inc
ss
fs
ins
jno
fnstcw
inc
call
mov
mov
pop
mov
xor
lods
je
enter
mov
add
pop
(bad)
imul
mov
lock
into
dec
fcos
add
xor
mov
xchg
fiadd
cli
(bad)
jmp
xor
fidivr
sub
popf
add
push
fiadd
sbb
add
arpl
out
(bad)
fistp
movs
clc
movs
out
aas
sti
push
outs
in
and
pop
add
mov
stos
add
xor
int
pop
sub
movs
mov
adc
loopne
jns
aam
stos
clc
xlat
mov
cmp
push
ins
pop
push
adc
dec
adc
dec
xor
sbb
scas
cld
jge
push
retf
fimul
popa
or
aad
jl
pushf
jmp
arpl
mov
fstp
loopne
cmp
pop
or
stc
xor
mov
push
mov
xchg
jg
hlt
xchg
(bad)
xor
shl
xchg
int
je
lea
sti
pop
mov
loope
outs
mov
jge
mov
cdq
dec
sbb
mov
xor
mov
ss
or
das
out
cld
jg
(bad)
jmp
xchg
in
fwait
pop
(bad)
test
or
pop
add
call
jg
add
or
sbb
addr16
lds
and
stos
xor
rcr
dec
adc
fwait
adc
jl
push
cmp
xor
fisubr
stc
adc
pop
mov
jo
int
jp
fsub
push
adc
iret
jmp
push
test
push
mov
and
int
test
shl
inc
mov
jecxz
in
(bad)
leave
aaa
fcomp
add
mov
mov
aaa
ins
leave
mov
jp
pop
aas
rol
in
push
lea
xor
imul
call
push
and
fild
push
pop
neg
out
or
sbb
mov
arpl
lods
mov
fwait
mov
inc
pop
jne
add
xchg
movs
pop
sbb
dec
mov
lds
sbb
cmp
fs
dec
ror
or
inc
inc
sbb
mov
pop
mov
jae
ss
dec
mov
int
lods
pop
mov
and
aas
xor
outs
cli
push
loopne
mul
ss
ss
fadd
xchg
sahf
and
int
std
pop
cmps
add
inc
in
push
(bad)
jmp
sahf
ret
scas
and
add
cld
bound
cld
xchg
cmps
xor
pop
stc
xchg
push
mov
fwait
and
lock
inc
xor
out
shr
add
xchg
int
or
inc
push
xchg
int
jns
leave
movs
pop
mov
and
sbb
dec
outs
in
stc
mov
sti
mov
cmp
or
xchg
out
repz
mov
xor
jno
out
sbb
sbb
pop
ss
pop
out
data16
aaa
std
xchg
add
add
in
stc
ins
sbb
fiadd
push
dec
addr16
rcl
bnd
je
enter
sbb
mov
loop
mov
shr
jb
jae
(bad)
outs
rcl
fcomp
pop
daa
jbe
gs
and
pusha
ss
pop
icebp
(bad)
(bad)
ds
mov
dec
mov
and
lods
mov
xor
(bad)
mov
push
ins
xchg
mov
or
sbb
mov
xor
(bad)
(bad)
(bad)
inc
lahf
add
adc
out
(bad)
pop
repz
mov
jg
in
out
pop
in
cmp
(bad)
(bad)
call
jmp
cwde
gs
outs
sub
mov
mov
cmp
outs
mul
test
push
fimul
idiv
cmp
out
(bad)
aaa
loopne
sti
jg
out
(bad)
mov
jmp
iret
js
out
or
std
aas
dec
mov
cld
sti
repz
cli
ds
(bad)
dec
cmp
scas
jmp
fdivr
jg
out
mov
lahf
jnp
jge
(bad)
(bad)
jmp
outs
mov
sbb
lock
jg
loop
pop
daa
leave
clc
cld
out
cmp
hlt
cmp
dec
mov
mul
cld
(bad)
(bad)
std
(bad)
mov
outs
std
dec
mov
out
jns
leave
and
scas
sub
out
std
repnz
sahf
addr16
iret
(bad)
(bad)
push
(bad)
mov
clc
repz
retf
iret
(bad)
fidivr
(bad)
(bad)
jmp
(bad)
mov
mov
std
fdivr
jle
out
out
mov
rcr
mov
push
sti
mov
push
cmp
jae
sub
clc
jle
leave
in
pop
mov
cmps
jmp
cld
fidivr
clc
(bad)
(bad)
(bad)
cld
jg
fdiv
mov
idiv
mov
mov
arpl
out
jge
rcl
das
pop
(bad)
aas
retf
dec
icebp
push
hlt
pop
pop
imul
out
je
(bad)
popf
or
push
(bad)
push
call
scas
js
push
mov
or
xchg
adc
(bad)
(bad)
int3
gs
outs
hlt
dec
mov
sbb
cmova
dec
sahf
ja
pop
aam
ins
(bad)
cld
(bad)
lock
mov
sub
or
test
sub
mov
sub
std
in
xor
mov
retf
dec
jmp
rcr
add
add
pop
cld
sar
jne
dec
popf
imul
fbld
inc
add
aad
iret
(bad)
pusha
xor
dec
outs
inc
sbb
lea
mov
data16
call
(bad)
xor
or
xor
je
sub
sub
mov
cli
movs
loopne
enter
not
das
ins
cmp
lock
sar
retf
out
scas
int
jae
pop
ja
retf
add
ins
jne
scas
repnz
xor
out
arpl
jl
or
stos
scas
ja
daa
iret
dec
xor
outs
adc
scas
retf
mov
daa
lahf
cmp
fiadd
cmp
xchg
in
jns
push
sbb
out
cmp
mov
scas
xchg
dec
sahf
xchg
aaa
retf
das
jp
jmp
jns
sahf
push
push
pop
outs
xchg
repnz
in
hlt
mov
pop
cmp
jge
call
mov
xor
mov
aad
or
call
cmc
xor
fld
stc
ret
jp
mov
iret
mov
cmp
(bad)
cwde
pop
sub
(bad)
nop
data16
ss
adc
movs
bound
enter
and
test
adc
xchg
out
and
xchg
mov
push
outs
add
fstp
jp
ret
outs
fcomp
sub
imul
mov
fcmove
cmp
mov
iret
mov
xlat
imul
arpl
rep
sbb
pop
stos
(bad)
mov
imul
lock
outs
lods
call
lods
loope
or
jl
push
mov
adc
sbb
cli
mov
lahf
jle
sub
sbb
imul
(bad)
sub
cmps
rcr
mov
ins
in
add
and
push
pop
fs
ds
fdiv
leave
rcl
outs
inc
movs
mov
leave
jae
and
int
daa
sub
fucomp
push
and
or
aad
sbb
jae
out
push
cmc
cdq
xchg
dec
sub
dec
sbb
lods
jmp
sbb
cli
sbb
mov
clc
(bad)
popa
pop
(bad)
pop
ror
outs
jns
fisubr
retf
pop
outs
xor
test
pop
shl
iret
or
addr16
push
xor
pop
add
xor
dec
pop
sbb
xor
rol
fcmovne
add
mov
cmp
test
outs
xchg
mov
repnz
mov
stc
ss
lock
dec
jae
xor
sbb
xor
xor
or
adc
xor
ret
pop
aam
movs
jmp
jmp
arpl
sbb
pusha
jae
fisub
mov
jae
mov
sbb
push
addr16
fild
jge
shl
loope
loopne
push
shl
(bad)
std
imul
cmp
icebp
rol
and
xchg
icebp
call
retf
dec
call
or
data16
mov
dec
call
(bad)
sub
sbb
fcmovbe
or
mov
mov
ins
mov
xor
push
push
(bad)
gs
xor
retf
sub
mov
pop
mov
add
push
daa
xchg
mov
movs
jp
sub
mov
data16
cmps
sahf
push
push
iret
inc
popf
lock
js
lods
lods
sti
lock
nop
mov
cdq
ss
dec
clc
movs
sbb
shr
and
pop
and
xchg
outs
xor
mov
daa
int
xchg
bound
les
int
lahf
fstp
jmp
stos
shr
mov
sahf
xchg
data16
or
jns
ret
imul
scas
(bad)
jmp
mov
jmp
mov
pop
mov
mov
gs
xchg
jns
jp
mov
fiadd
cdq
xor
push
sahf
sbb
loope
push
mul
sub
je
adc
sbb
dec
cmp
cmps
fiadd
xor
ror
lds
xor
push
les
repnz
xor
ins
mov
imul
leave
jae
add
pop
sub
repnz
imul
cmp
ds
(bad)
pop
sbb
dec
cmp
jns
xchg
repz
loope
sub
and
fcomp
xchg
jp
push
cmp
add
sahf
mov
out
ret
ror
jg
aad
in
(bad)
dec
dec
adc
cmp
movs
loopne
fstp
xor
mov
push
xchg
xor
adc
xchg
outs
enter
mov
iret
dec
xor
call
add
stos
and
jns
outs
add
clc
jmp
sub
ror
cmp
pop
mov
arpl
int
and
mov
ficom
iret
pop
push
xchg
out
pop
dec
and
xor
jmp
xchg
out
mov
mov
mov
sbb
dec
inc
or
sub
test
mov
arpl
mov
sbb
jae
xor
xchg
inc
push
add
sub
mov
inc
pop
(bad)
cwde
stc
inc
scas
mov
mov
sub
mov
aad
add
inc
xor
stc
mov
sub
fmul
push
sbb
fcomp
add
mov
rcl
mov
push
movs
adc
push
cmps
rol
add
xor
xchg
cmps
jmp
xchg
inc
dec
es
jle
es
icebp
in
test
loopne
xchg
xchg
out
mov
xor
repz
push
ins
jecxz
sub
rcr
pop
jo
clc
aad
fisttp
add
sub
outs
adc
ror
(bad)
rol
push
stc
dec
or
xchg
out
jns
sbb
cld
loop
pop
sahf
fdivr
(bad)
mov
cmps
and
adc
sbb
pop
js
(bad)
shl
leave
and
cld
cld
leave
and
sbb
loopne
jns
lds
sti
push
stos
pop
sahf
dec
jae
lods
aas
imul
pop
mov
les
pop
inc
jae
mov
stc
loope
mov
jmp
loopne
sar
or
dec
xor
rol
imul
repz
xchg
and
ss
push
imul
mov
retf
dec
lahf
sahf
xor
cmp
aam
shl
imul
clc
rol
leave
and
(bad)
sar
rcr
or
push
or
cmp
(bad)
mov
test
int3
dec
xor
ins
push
aad
in
fist
ins
outs
mov
mov
rcl
jge
or
add
sbb
aaa
sbb
popa
lods
in
and
dec
jae
fdivr
mov
popa
icebp
sbb
dec
sahf
sub
call
fisubr
lock
into
dec
mov
sbb
fs
aas
shl
in
dec
push
lock
xchg
cdq
loopne
sti
(bad)
dec
ja
xchg
out
mov
lods
mov
in
lods
outs
mov
pop
jmp
clc
in
sub
mov
fcmovu
inc
dec
xor
sar
cli
dec
sbb
jl
add
outs
and
xchg
cld
fdivr
fldcw
imul
popa
loopne
movs
sbb
shl
mov
sbb
cmp
shl
jnp
pop
clc
mov
nop
dec
es
push
sbb
aas
sbb
jg
lods
call
mov
push
enter
cld
in
and
xchg
adc
iret
leave
jae
and
mov
aam
mov
jge
retf
and
aas
xchg
cmc
sar
cmp
(bad)
ret
sub
dec
xor
clc
mov
das
ins
adc
popa
(bad)
shl
lea
fdivr
inc
mov
xchg
cmps
pop
hlt
cmp
mov
cld
aas
nop
inc
inc
es
js
cdq
in
lock
clc
mov
cld
jg
sub
imul
cmp
iret
inc
ins
and
pushf
fimul
js
mov
jle
jle
jns
cmp
lods
ror
test
fadd
xor
ret
jno
outs
data16
int
ret
mov
ret
mov
js
mov
sbb
cmp
cmp
imul
or
xor
jle
add
loopne
aam
xchg
rcr
adc
fldcw
loope
mov
xor
(bad)
movs
cmp
ins
mov
cli
ss
cli
dec
jge
or
xor
aaa
cmp
iret
or
sbb
data16
push
out
loopne
ror
xchg
int
jns
in
xchg
dec
and
adc
cmps
out
pusha
icebp
mov
test
out
cmps
dec
pop
in
jle
xor
cld
leave
and
xchg
aas
aas
sub
jle
movs
mov
jmp
sahf
cmp
adc
and
call
fidiv
scas
dec
call
dec
dec
rep
sbb
pusha
sbb
rcr
cmp
mov
jmp
rol
cdq
adc
fisttp
ss
adc
shr
rol
jo
loope
nop
imul
jb
inc
pop
sbb
(bad)
cld
call
mov
sbb
jns
ss
fistp
into
adc
or
push
lea
or
(bad)
push
mov
out
inc
push
xor
movs
mov
or
sub
push
arpl
dec
sub
push
(bad)
sub
xor
jne
adc
lods
mov
call
add
dec
xchg
outs
or
inc
xor
or
gs
push
pop
jb
and
push
pop
jb
xchg
fnsave
shl
sbb
jmp
repz
repz
cdq
adc
or
sbb
xor
dec
jb
iret
fldenv
dec
xor
and
jne
xor
and
call
loope
adc
jl
jl
enter
cmps
gs
out
cdq
dec
pop
add
nop
dec
push
fldenv
nop
dec
es
jne
enter
dec
ss
ins
and
cmp
out
jmp
cmp
fistp
cmps
and
or
cmp
xchg
push
ftst
nop
dec
push
aad
frstor
cdq
jne
cmps
mov
mov
ror
int3
mov
sar
inc
mov
(bad)
ja
or
xchg
xchg
mov
or
rcl
inc
push
add
les
jle
jecxz
jg
add
fsubrp
call
jp
push
add
jmp
cmp
add
dec
fnsave
les
add
shl
fild
loop
adc
ja
push
or
cdq
cmp
sub
mov
les
add
call
inc
jl
das
pop
add
rol
sbb
push
fld
mov
mov
sbb
and
das
pop
es
cld
jg
clc
aas
(bad)
cmp
iret
xchg
lock
jmp
rol
xchg
mov
pop
or
push
aas
(bad)
push
xor
jg
add
add
push
repnz
add
test
inc
aam
cmp
pop
jo
mov
(bad)
sar
rol
mov
xor
jg
shr
fucomi
push
out
ficomp
popf
xchg
(bad)
cmp
add
loopne
ins
xchg
xchg
pop
push
(bad)
aas
pop
jnp
xchg
pop
cs
pop
xchg
addr16
leave
out
push
mov
xor
pop
std
js
fstp
fld
fisub
pop
js
jl
pushw
jbe
into
repz
jg
sbb
out
pop
mov
jo
sbb
mov
pop
inc
lock
add
push
or
push
repnz
out
add
nop
es
jns
aaa
add
add
nop
into
push
add
jl
jnp
add
and
cmp
(bad)
sbb
das
aas
dec
add
outs
daa
add
ss
out
pop
std
clc
lock
aas
rcr
ins
rcr
dec
add
fstp
pop
outs
clc
pop
cmp
pop
adc
add
loopne
pop
sbb
sub
add
psadbw
into
cmp
jg
cmp
pop
or
adc
adc
out
(bad)
aas
nop
ds
cmp
sub
add
mov
pop
cmp
fmul
aad
cs
pop
popf
or
jno
add
cs
ret
sub
jle
fwait
int
sbb
push
sub
inc
add
mov
sahf
in
inc
add
pusha
xor
sbb
stos
ja
xor
push
sbb
js
push
inc
cmc
(bad)
mov
fldcw
lock
push
ins
ss
int
cmp
sbb
or
test
mov
xchg
fsubp
jmp
pop
and
or
adc
rcr
add
add
imul
in
in
cmp
mov
adc
fdivrp
fnstenv
repz
xor
daa
jnp
jbe
and
xor
iret
cmp
or
push
adc
cmp
(bad)
clc
dec
push
dec
push
mov
mov
push
daa
cmp
or
daa
xchg
push
(bad)
out
fidiv
sbb
add
out
fs
inc
daa
mov
idiv
neg
daa
clc
push
mov
add
xor
cmps
adc
outs
vmwrite
xor
cmp
cmp
(bad)
lock
repz
and
daa
inc
pop
jnp
cdq
push
movs
daa
dec
sub
xchg
mov
xor
mov
sub
sub
clc
xor
jbe
and
mov
lock
pop
push
es
and
(bad)
out
sbb
cmp
push
(bad)
cmp
sbb
mov
cdq
push
out
pop
push
(bad)
cmp
mov
xlat
push
retf
arpl
(bad)
push
and
xor
xchg
bnd
(bad)
mov
inc
push
cmp
clc
repz
and
mov
ja
test
inc
inc
inc
or
pop
pop
cmp
push
pop
xor
xor
inc
aad
mov
in
mov
push
dec
dec
pop
daa
mov
and
xchg
mov
push
inc
(bad)
(bad)
jmp
rcl
add
pop
pop
ret
repz
or
test
dec
pushf
es
sub
aad
sbb
xor
pop
add
xor
ds
in
popa
jecxz
daa
xor
arpl
mov
rcr
add
imul
imul
daa
push
in
es
sub
aas
daa
dec
mov
jmp
hlt
sahf
ins
cmps
call
fwait
je
out
jle
xor
in
repz
adc
mov
out
jecxz
test
inc
push
cmp
add
xor
in
inc
xchg
sbb
or
movs
out
sub
inc
out
fdivp
or
daa
xor
pop
in
mov
arpl
das
es
ss
mov
daa
push
inc
sub
pop
cmp
push
push
xor
ror
repz
sub
je
add
outs
data16
inc
push
jb
cdq
mov
je
push
inc
mov
ffreep
outs
je
stos
inc
aas
call
inc
fadd
stos
sub
push
ret
cmp
fmul
push
shl
movs
pop
xor
dec
dec
push
jns
xchg
daa
mov
xchg
stos
xor
ja
test
inc
jmp
js
xchg
jmp
jne
adc
cmps
fsubr
or
sbb
push
cmp
sbb
cmp
(bad)
xchg
sbb
and
inc
daa
adc
cmp
sbb
jmp
mov
mov
and
clc
or
sbb
pop
jbe
mov
fcom
daa
dec
xor
dec
xor
dec
daa
dec
daa
addr16
dec
daa
clc
dec
or
xor
cmp
cmp
adc
nop
inc
jno
ror
ret
sbb
(bad)
mov
mov
xor
cdq
cmp
push
mov
mov
loope
imul
daa
repz
xor
enter
cmp
ficom
sbb
inc
xor
(bad)
sbb
sbb
push
daa
xor
daa
rol
(bad)
push
mov
lahf
pop
cld
jne
adc
sub
inc
pushf
out
sbb
and
cmp
push
mov
call
push
push
push
sub
fadd
cmp
aas
ss
mov
imul
cwde
and
jbe
stos
sub
aaa
fs
ins
(bad)
(bad)
xlat
mov
outs
test
scas
push
imul
aaa
mov
ffree
outs
out
pusha
xor
push
and
out
jmp
xchg
add
mov
pusha
mov
aas
sbb
push
aad
aas
adc
sub
leave
mov
add
bound
popa
test
pop
push
sbb
fistp
xor
cld
push
lock
add
ins
mov
out
or
out
fst
add
mov
pop
or
fistp
push
adc
sbb
add
xor
xchg
jmp
add
add
push
rol
adc
or
add
add
fld
push
add
jg
fnsave
push
push
ja
mov
add
jns
xchg
outs
adc
xchg
mov
ret
pop
js
imul
jne
dec
ins
xchg
mov
push
arpl
aaa
in
mov
jo
and
repnz
jbe
pop
gs
mov
cmps
jo
outs
fidiv
mov
out
add
cmps
xor
out
mov
not
push
add
out
jne
xor
cs
push
and
ins
aam
or
jo
adc
dec
cmp
mov
jbe
inc
push
jo
adc
inc
push
push
sub
xorps
cmp
imul
dec
jne
dec
mul
pop
or
addr16
inc
jne
jne
ins
and
addr16
push
xor
in
repz
xor
loope
adc
sbb
inc
inc
sbb
cs
fisub
dec
ja
cmp
pusha
cld
sahf
adc
push
mov
bound
add
or
inc
sbb
xor
iret
sub
ins
push
push
jns
jecxz
jno
outs
addr16
jmp
gs
xor
enter
xor
stos
hlt
mov
adc
daa
out
adc
ja
pop
gs
(bad)
jmp
add
shl
scas
ins
pop
(bad)
ins
jns
inc
ror
mov
xor
push
xor
inc
ja
push
arpl
sub
cli
xchg
lahf
or
xchg
test
je
pop
adc
mov
imul
lods
arpl
jno
xor
ret
or
pop
ret
repz
ret
outs
ins
or
arpl
or
ins
xor
push
jmp
lds
mov
retf
(bad)
mov
sar
stos
jbe
push
add
jb
loopne
ja
cs
push
add
inc
hlt
jecxz
pop
push
push
jbe
add
push
xor
dec
out
hlt
mov
cmp
add
mov
(bad)
sub
xor
jno
add
out
jecxz
fucomip
pop
shl
or
imul
aam
ins
lahf
das
mov
lock
ins
pop
mov
cmp
adc
jb
sub
ins
sub
pop
jle
jne
jo
outs
xchg
xlat
dec
inc
add
xor
repz
ja
push
outs
stos
push
imul
jp
jns
mov
jne
xchg
and
pop
xlat
scas
pop
call
pop
out
je
ja
push
outs
push
xchg
daa
xchg
xor
cwde
add
jae
and
pusha
sbb
(bad)
or
adc
out
fadd
sbb
inc
xor
loop
addr16
mov
sbb
mov
pop
and
push
jnp
adc
push
lock
inc
data16
mov
push
aas
cmp
inc
or
or
xor
fwait
and
out
outs
pop
or
sub
inc
ficomp
cmp
pop
xchg
je
aaa
and
je
ins
lds
ds
ja
ins
mov
jae
jns
xchg
add
xlat
inc
push
mov
test
jmp
sbb
or
inc
cmps
or
push
div
jae
es
inc
ret
imul
add
add
push
pop
jb
push
and
ffree
push
push
push
adc
out
jnp
pop
add
dec
or
inc
jnp
out
add
push
cmps
add
fisttp
dec
repz
stos
ja
cmp
ja
mov
sbb
das
outs
out
fs
pop
dec
addr16
jnp
pop
hlt
loope
push
jnp
fild
fimul
call
pop
fnsave
fist
add
and
add
push
lods
js
add
add
shr
push
shl
fidivr
jns
es
outs
mov
pop
add
jecxz
and
mov
dec
sub
out
or
jecxz
ret
pop
pop
inc
cmps
adc
fwait
pop
jnp
ret
xchg
adc
xchg
cmp
je
add
mov
scas
push
inc
cli
sub
jne
xchg
cmp
dec
xor
sti
mov
fwait
jb
jbe
jmp
aaa
pop
cmp
scas
loopne
dec
jg
aaa
bound
pop
mov
mov
jo
arpl
adc
xlat
push
loopne
sbb
jmp
jecxz
repz
pop
dec
fdivr
pop
cmp
dec
xor
jl
out
outs
ins
adc
sub
inc
lods
add
sbb
out
arpl
mov
daa
push
push
mov
sub
jg
push
mov
retf
mov
push
outs
mov
inc
sub
(bad)
imul
sub
xor
and
pop
mov
sbb
mov
pop
push
idiv
popa
mov
pusha
sbb
outs
arpl
mov
pop
pop
adc
ror
ja
clc
cs
jae
outs
arpl
sbb
pop
push
call
mov
imul
lods
and
arpl
ficom
mov
stos
or
and
sub
rcl
jae
jnp
pop
inc
js
push
xor
out
(bad)
ja
cmps
ja
bound
push
(bad)
stos
pop
mov
and
out
lods
cmp
lock
fs
mov
sbb
arpl
push
push
(bad)
push
xchg
xor
push
mov
mov
push
jbe
mov
pop
mov
shl
cmovae
ins
rol
loopne
jmp
or
pushf
ja
or
inc
test
jbe
mov
dec
out
add
fcom
outs
push
scas
xor
mov
pop
addr16
daa
fs
jae
ror
add
push
xor
pop
dec
dec
pop
shl
arpl
mov
out
add
imul
adc
ret
inc
call
mov
iret
lods
pop
xor
xor
mov
push
out
sub
repz
mov
sub
gs
adc
aam
jo
xor
pop
add
cmps
add
inc
bound
bound
mov
fisub
xchg
rol
pop
call
push
popa
stos
xchg
pop
inc
(bad)
imul
cmps
ins
mov
jns
adc
out
sub
cmp
and
push
into
jb
cmps
lahf
fidiv
sbb
sbb
adc
mov
or
loope
inc
lar
test
adc
xor
(bad)
push
and
pop
(bad)
push
sbb
call
js
gs
imul
and
adc
arpl
(bad)
jno
iret
movs
jg
scas
dec
inc
pop
(bad)
push
xchg
daa
(bad)
jg
loop
xchg
fld
(bad)
ret
push
(bad)
mov
push
jo
cmp
mov
(bad)
jae
jo
jmp
push
dec
mov
lock
push
inc
push
jmp
(bad)
mov
shl
hlt
push
out
mov
cmp
jg
pop
push
mov
push
adc
inc
pop
pop
ds
out
jmp
mov
out
sbb
imul
sbb
push
xor
mov
or
pop
add
mov
sub
add
imul
cs
adc
adc
jle
pop
add
jne
add
in
or
fdiv
cmp
jg
or
rol
sub
ret
sub
stos
xlat
out
loopne
ins
jb
imul
push
xor
jp
dec
out
xor
xor
ins
xchg
add
mov
or
repz
ds
pop
push
inc
shr
mov
jp
mov
xor
cmp
push
push
xor
and
sub
and
sbb
imul
add
jle
xchg
mov
xchg
mov
imul
loopne
ins
rcr
adc
rol
mov
push
lahf
dec
jg
jge
mov
xor
sub
popf
add
(bad)
mov
jno
sahf
out
jmp
outs
into
shr
fild
arpl
jg
fdivr
push
xlat
das
mov
push
lods
sub
pop
xchg
xchg
add
or
arpl
jp
adc
pop
inc
inc
jo
sub
or
sub
push
dec
push
sbb
pop
dec
add
pop
mov
mov
arpl
retf
out
out
mov
jecxz
push
xor
push
outs
ffree
push
mov
mov
sub
scas
push
imul
aam
out
fist
push
ss
loopne
jecxz
inc
cmp
imul
lods
push
ret
inc
ja
pop
retf
ins
sub
js
out
inc
adc
stos
inc
sub
aaa
iret
cmp
out
ret
jno
outs
repz
js
fist
stos
icebp
mov
pop
xor
mov
inc
or
or
invd
xor
add
test
sahf
cs
mov
loope
sub
popa
(bad)
jae
(bad)
lock
xchg
sbb
push
mov
outs
or
scas
bound
popa
xchg
dec
lods
adc
aas
outs
aam
movs
sub
dec
in
arpl
daa
imul
(bad)
mov
iret
pop
inc
pop
fwait
sbb
aaa
cmps
aaa
(bad)
retf
sbb
ficomp
sub
xor
outs
out
or
aas
(bad)
test
push
imul
add
pop
outs
aas
lds
shr
(bad)
and
mov
add
xor
ja
jbe
cmp
arpl
jmp
sub
jns
push
rol
daa
in
adc
outs
adc
scas
(bad)
daa
scas
sub
aaa
ins
inc
imul
add
sub
ja
lods
test
cmp
push
fs
or
repz
jb
push
ficom
xchg
lea
inc
sbb
(bad)
mov
out
or
mov
inc
adc
mov
adc
push
outs
jnp
dec
xchg
out
inc
xchg
addr16
jecxz
call
and
fwait
mov
pop
loop
ffreep
inc
jae
jno
push
mov
rcr
jo
aad
fadd
popa
sub
es
add
adc
retf
and
mov
mov
aas
packsswb
ja
sub
push
(bad)
fstp
pop
ins
push
push
pop
pop
ret
inc
sbb
inc
test
sti
mov
aas
aas
pop
in
mov
xchg
mov
or
dec
push
loop
rcl
arpl
test
adc
push
push
pop
or
pop
xor
call
ins
sar
ret
adc
add
mov
test
out
aad
dec
push
arpl
inc
fdiv
lds
add
sbb
adc
xchg
mov
lods
test
and
out
fisub
shl
jg
push
fwait
icebp
push
enter
iret
icebp
lea
push
daa
gs
xchg
sbb
sahf
sbb
sub
mov
fucomip
ret
sbb
and
mov
add
scas
jnp
imul
push
and
mov
push
sbb
mov
jecxz
and
arpl
sahf
outs
(bad)
lds
push
mov
push
psadbw
ret
or
or
mov
cmc
dec
cmp
mov
jo
test
sbb
jae
push
ja
pusha
xchg
push
add
(bad)
aad
repnz
sbb
lods
in
push
add
push
adc
or
jnp
push
add
push
(bad)
or
sub
call
or
loope
retf
xlat
dec
cmp
addr16
fwait
adc
aas
mov
or
fistp
inc
pusha
push
and
into
adc
aad
inc
imul
loop
sub
xchg
repz
stos
aam
inc
pop
pop
mov
ins
sub
repz
and
out
push
or
imul
ret
pusha
das
and
push
sub
and
sbb
stos
mov
sbb
lds
jbe
cmp
pop
mov
addr16
lods
out
ret
xlat
sub
mov
sub
imul
mov
pop
pand
fwait
push
or
pop
xor
stos
rol
retw
pusha
mov
cmp
stos
retf
dec
mov
rcl
sub
adc
loop
xchg
loopne
cmp
xchg
jmp
test
div
push
mov
fbstp
fwait
test
adc
cmp
pusha
xor
push
dec
outs
push
mov
adc
hlt
dec
cs
(bad)
mov
mov
rcl
sbb
mov
in
xchg
mov
pop
imul
aad
leave
inc
sbb
and
scas
jecxz
sub
cmps
call
arpl
bound
cmp
add
mov
inc
je
out
dec
mov
ja
lods
push
mov
ins
sub
iret
cmps
scas
aad
mov
sub
sbb
(bad)
mov
lods
xchg
xor
jo
mov
sub
ins
mov
jo
fcomip
pop
movs
lock
ja
cmp
aas
inc
pop
test
inc
pop
in
mov
call
pop
ss
mov
or
outs
scas
mov
movs
add
push
mov
push
fild
pushf
sub
mov
xchg
jecxz
pop
adc
retf
imul
out
imul
popa
inc
cmps
pop
pop
or
jmp
cmp
sub
daa
cmp
scas
sub
push
lds
(bad)
out
stos
ror
test
ja
pop
jmp
cmp
add
cwde
or
outs
jo
cmp
jle
add
shr
lds
dec
movs
iret
adc
xchg
and
pop
dec
ja
test
stos
icebp
imul
or
sar
adc
(bad)
movs
test
inc
xor
xlat
sub
inc
or
test
daa
mov
ins
inc
dec
mov
adc
fsubr
outs
aaa
scas
outs
adc
dec
sbb
push
mov
mov
pop
out
xchg
call
lahf
sbb
ins
and
jp
cmps
and
push
rol
pop
cmp
sti
sti
push
push
gs
lahf
out
jp
fcomp
push
add
fisubr
push
jnp
pop
xchg
mov
in
jae
or
jecxz
fistp
xchg
sbb
dec
dec
ins
add
pop
ret
aas
ror
add
add
dec
mov
ja
pop
inc
jne
or
pop
loop
gs
fbld
outs
out
fadd
cs
gs
xchg
mov
out
push
sti
xchg
or
je
xlat
add
loop
mov
jo
jecxz
dec
dec
pop
shl
xor
dec
dec
pusha
outs
xchg
fimul
rcr
arpl
pop
lods
mov
je
rcr
xor
pop
mov
das
mov
adc
sbb
xlat
sub
cmp
sub
add
xchg
push
inc
mov
les
inc
movs
pop
inc
jmp
pop
inc
arpl
shl
iret
pop
jne
adc
mov
fisub
or
daa
jg
mov
sub
dec
loope
xor
cmp
cs
cs
test
hlt
not
inc
mov
popa
mov
adc
fist
jno
pop
dec
test
sbb
and
scas
mov
mov
pop
aam
sub
pop
jb
(bad)
jno
sub
dec
sar
mov
jle
push
pop
xor
jnp
cmp
bound
sub
lods
(bad)
outs
test
dec
(bad)
fiadd
ja
jg
ror
dec
(bad)
adc
add
jecxz
or
pusha
jne
pop
out
xor
or
mov
ss
jmp
cmps
xor
or
iret
cmps
jmp
cmp
idiv
pop
adc
pop
adc
xor
adc
dec
jo
imul
sbb
push
pop
and
lea
pop
lods
repz
out
shl
add
xchg
dec
pop
mov
imul
pop
jg
push
ins
sub
pop
arpl
dec
imul
dec
push
xchg
push
sub
and
add
out
mov
push
adc
push
gs
sub
imul
sub
mov
mov
adc
aaa
jnp
jne
xor
dec
adc
bound
lods
fs
movs
mov
jae
jo
fbld
adc
or
(bad)
imul
bound
adc
adc
fwait
push
push
cmp
and
push
sbb
aaa
and
adc
sub
pop
mov
inc
inc
inc
test
add
fnsave
les
gs
mov
jg
fwait
and
or
mov
pop
push
pop
sub
adc
or
repz
and
scas
iret
popa
adc
mov
cmp
cmp
mov
xchg
add
jmp
cmp
mov
jo
adc
repz
push
push
(bad)
jmp
dec
cmp
xor
repz
add
fwait
cmp
shr
int3
mov
movs
and
nop
adc
dec
je
inc
inc
outs
ins
jno
add
mov
jno
push
int
and
es
popa
mov
adc
pusha
test
push
or
(bad)
push
shl
push
popf
and
and
fmul
inc
jns
repnz
popa
sbb
inc
mul
ja
mov
adc
arpl
push
sbb
loopne
adc
cwde
ins
jns
fild
mov
out
mov
xchg
out
mov
fisttp
adc
push
push
popa
dec
imul
gs
dec
xchg
add
push
arpl
rol
cld
dec
outs
gs
push
inc
dec
ins
and
addr16
dec
push
mov
push
push
inc
sbb
pop
xor
ds
popa
fcomp
out
adc
push
sub
pop
inc
xchg
movs
pop
icebp
fisub
fs
xchg
push
push
dec
add
mov
pop
pop
adc
dec
add
cmp
or
imul
les
(bad)
jns
fs
pop
or
mov
pusha
mov
mov
jo
out
jae
push
jo
cmp
popa
enter
movs
adc
rcl
xor
xor
push
imul
sub
xchg
test
adc
in
fs
xchg
adc
imul
fidiv
sahf
ret
imul
mov
adc
daa
movs
adc
(bad)
mov
xor
jo
or
inc
adc
shl
xchg
or
in
popa
sbb
inc
ins
and
xor
icebp
cmp
adc
mov
adc
rcr
out
inc
xlat
adc
js
adc
xchg
xchg
push
ficom
mov
mov
inc
retf
mov
xchg
fs
sti
push
push
nop
jno
lods
jmp
ror
push
lea
pop
mov
ins
sbb
sbb
dec
pop
ror
stos
adc
and
pop
mov
push
adc
xor
mov
int
push
dec
je
adc
or
sbb
dec
dec
xor
push
xor
xchg
arpl
adc
fsubr
ds
xchg
adc
push
xchg
sbb
push
fwait
push
addr16
add
or
lods
cmp
pusha
inc
ja
or
(bad)
mov
push
xor
dec
popf
or
sbb
mov
add
and
pop
push
lock
pop
push
dec
ror
pop
mov
dec
cmp
or
dec
pop
shr
inc
add
xchg
bound
clc
dec
push
dec
(bad)
and
jno
fs
xchg
or
retf
xchg
or
inc
sub
rol
add
or
cwde
imul
and
shl
movs
xchg
sbb
sbb
adc
ud0
je
sbb
or
ss
inc
adc
inc
scas
add
dec
mov
dec
adc
lea
enter
sub
icebp
push
lods
and
cmp
pop
and
mov
es
sbb
sbb
xchg
imul
lea
xlat
cmp
inc
pop
int3
dec
and
setl
lods
add
inc
add
popa
js
add
inc
mov
sar
pop
push
nop
gs
dec
sub
mov
xchg
pop
daa
mov
pusha
inc
ss
pop
sahf
cmp
pop
cmps
sub
imul
mov
push
inc
ins
mov
mov
jge
jb
adc
or
push
rol
cld
ret
adc
push
inc
jg
shl
cmp
ins
bound
or
popa
mov
push
rcl
push
ret
jae
cld
push
(bad)
stc
adc
jne
push
retf
dec
aaa
ja
test
bound
xor
inc
outs
arpl
arpl
cli
mov
shl
pushw
adc
inc
xor
ret
popa
push
pop
inc
push
inc
adc
jbe
mov
add
or
add
in
add
dec
scas
in
push
pop
add
inc
and
sub
fs
sub
or
out
xchg
inc
bound
xor
sar
mov
sub
dec
add
dec
(bad)
cmc
sub
cs
(bad)
test
fs
arpl
es
clc
push
add
retf
int
add
stos
leave
popf
add
and
jmp
jne
(bad)
lods
sbb
mov
aam
or
sub
js
add
retf
cwde
dec
retf
jge
and
and
xor
adc
imul
(bad)
pop
test
scas
sbb
pop
cwde
test
inc
xchg
out
sbb
sbb
inc
push
add
(bad)
js
pop
mov
inc
jb
xchg
in
xchg
jno
push
dec
push
leave
daa
jmp
xor
data16
xor
dec
mov
inc
ret
push
sub
cwde
xor
xor
sub
lds
fldcw
mov
mov
sbb
and
sub
sbb
sbb
adc
push
enter
sbb
popa
call
jae
mov
cdq
xor
dec
sbb
fs
(bad)
retf
je
aaa
pop
nop
mov
inc
inc
ret
cmp
aam
mov
mov
dec
sub
test
mov
cli
push
imul
sbb
iret
fdiv
mov
fidivr
inc
inc
push
in
sbb
jmp
cmp
and
inc
adc
rcr
fst
sbb
shl
inc
scas
pop
dec
mov
and
pop
pop
sbb
or
shl
add
xor
jle
popa
bound
add
in
mov
(bad)
mov
pop
sbb
jbe
adc
dec
inc
lods
add
imul
inc
lahf
push
sbb
out
push
in
pop
add
fcom
jmp
sub
sbb
inc
imul
and
bound
add
sbb
cmp
or
ins
fwait
es
inc
xor
in
sub
inc
adc
jmp
push
and
or
or
popf
dec
and
mov
fwait
mov
xor
or
add
cmps
hlt
sbb
shr
rcl
addr16
outs
pop
lock
fmul
cmp
ins
inc
jnp
dec
inc
sub
mov
xor
fldcw
inc
inc
jecxz
sti
and
fcmovu
pop
fisubr
mov
stos
inc
sbb
daa
(bad)
mov
mov
sbb
adc
das
and
inc
and
add
sbb
and
mov
inc
loopne
sbb
sbb
fisub
push
mov
jge
push
fsub
sahf
push
add
lods
inc
cmp
sbb
jmp
enter
adc
sub
or
jmp
mov
int3
push
pop
inc
or
and
fwait
and
push
imul
popf
jae
and
outs
ss
shl
add
dec
inc
add
loopne
inc
mov
add
and
inc
mov
aad
dec
sbb
sub
or
fwait
mov
movs
and
int
movs
push
push
push
inc
inc
retf
addr16
inc
sub
cmp
pop
push
ficom
jae
jae
sbb
out
imul
das
and
sbb
sbb
or
and
push
int
xor
aas
jg
aad
ins
jne
sbb
sub
popf
mov
and
out
pop
jmp
adc
dec
outs
nop
push
fwait
inc
mov
aas
pusha
into
jo
shl
or
jmp
inc
cmp
push
add
imul
and
loop
or
xor
push
and
rol
outs
adc
jae
outs
je
push
add
jb
ins
shl
int3
inc
test
and
inc
in
dec
sbb
test
add
pop
aas
mov
sub
ss
imul
cmp
rcl
add
or
mov
div
std
sbb
or
mov
lea
fsubr
lea
push
inc
push
mov
pop
inc
es
lods
pop
(bad)
jbe
mov
cmp
sbb
jb
das
pop
or
pop
cmp
mov
sbb
ds
dec
test
hlt
neg
ins
or
dec
inc
sar
pop
aas
sbb
push
cmp
and
daa
and
sub
das
sub
inc
imul
cmp
call
aaa
xor
fiadd
inc
jmp
shl
imul
jbe
dec
fisub
stc
pop
cld
or
out
fsubr
ins
xor
and
or
inc
scas
xchg
iret
push
das
ins
ret
pop
icebp
mov
mov
jb
neg
sub
xchg
mov
and
ins
dec
jne
dec
arpl
fsub
add
es
push
and
cmp
inc
sub
pop
in
enter
push
xor
fstp
aaa
dec
mov
popa
shr
inc
xor
jae
mov
or
popa
ret
clc
in
add
test
sub
lea
jb
push
inc
gs
jb
out
cs
neg
mov
rol
xchg
xor
pop
push
fstp
shl
sar
retf
and
ins
xchg
test
xor
sbb
movs
nop
lea
and
push
sub
and
xor
xchg
pop
xor
nop
mov
inc
aas
fsub
push
mov
cmp
dec
inc
lods
mov
imul
cmp
and
aad
push
jb
pop
shl
ja
inc
add
ret
cmp
adc
and
add
pop
mov
jae
xor
push
xlat
xlat
lods
push
imul
add
push
dec
jnp
int3
les
mov
sbb
inc
bound
mov
dec
xchg
push
pop
jp
xchg
mov
jecxz
mov
jb
push
and
jge
inc
int
dec
daa
fimul
xchg
dec
mov
mov
cli
mov
push
mov
mov
ret
out
add
sti
das
pop
mov
push
and
(bad)
fild
xor
mov
mul
and
push
jo
rcl
pusha
and
jp
inc
fs
das
mov
lods
arpl
bound
lds
sub
int
push
in
pop
cmp
gs
dec
movs
jno
mov
and
sub
xor
sbb
xor
or
and
jb
adc
add
movs
and
sbb
ins
ror
sub
and
mov
mov
cwde
cdq
fnsave
fst
(bad)
sbb
sbb
push
and
mov
xchg
bndstx
mov
sbb
pop
dec
(bad)
cmps
ror
push
sub
and
mov
imul
push
dec
aad
or
bound
ror
ins
or
in
jne
sbb
xchg
sbb
push
mov
aam
jnp
daa
dec
dec
cs
bound
xchg
xor
sbb
ret
fist
(bad)
sbb
inc
cld
sub
cwde
pop
fld
pop
outs
mov
or
jne
adc
jmp
enter
pop
inc
cmps
xor
sub
test
lea
push
and
imul
test
dec
(bad)
cmps
mov
pop
test
sub
jae
adc
lods
dec
(bad)
mov
mov
fsub
inc
xor
fisub
jbe
xor
mov
jmp
push
pushf
ins
jecxz
add
or
push
xor
sar
push
repz
mov
cmc
shl
and
fsub
adc
add
add
cmp
sbb
lds
adc
jne
sub
sub
ss
out
stos
sbb
pop
pop
test
cmp
fnstsw
ror
pop
sbb
adc
mov
movs
push
mov
or
arpl
sub
mov
adc
shl
outs
push
dec
in
cmp
and
fwait
imul
adc
inc
add
and
push
xchg
scas
inc
sbb
adc
pop
bound
sti
add
push
aas
pop
jne
mov
jne
inc
cdq
test
dec
pop
rol
cdq
dec
mov
(bad)
aaa
nop
or
pop
movs
inc
fstp
movs
leave
push
jns
ins
test
aaa
sbb
outs
bts
loope
jns
push
jo
retf
shl
inc
mov
add
imul
inc
xor
sbb
mov
fwait
mov
adc
fucomi
pop
push
mov
ins
push
clc
push
push
sub
adc
fcom
sbb
sbb
sub
aaa
mov
imul
and
push
push
fs
loop
cmp
(bad)
adc
ins
imul
aas
imul
inc
inc
ins
adc
aas
or
rcr
enter
push
imul
and
sbb
sub
sbb
cmp
aas
sub
mov
in
xor
out
aam
inc
jecxz
sub
or
js
sar
sbb
inc
scas
sbb
test
add
jbe
scas
and
push
mov
mov
cmp
push
pop
ins
ins
and
push
inc
xchg
cmp
mov
loope
fld
push
and
ins
adc
jne
sbb
test
mov
xchg
loopne
push
cmp
add
ja
add
rcr
and
add
inc
retf
das
xchg
fcmovu
inc
sub
lds
add
aaa
fisubr
ins
outs
movs
gs
pop
xchg
xor
popa
mov
stc
popa
cmps
push
jne
daa
and
push
or
push
mov
and
movs
dec
pushf
mov
cmp
xchg
and
inc
lea
mov
and
outs
or
popf
and
push
dec
sbb
and
add
pop
sbb
sub
mov
adc
add
das
and
jnp
or
ja
sbb
adc
rol
and
mov
xor
sub
pusha
mov
ds
push
test
sub
jno
cmp
push
mov
add
fiadd
mov
inc
ins
pop
fld
inc
es
jb
stc
sbb
(bad)
mov
mul
push
loopne
mov
jecxz
dec
push
sub
adc
lahf
add
call
inc
dec
inc
add
fs
dec
sti
jb
imul
ss
inc
pop
or
push
popa
fiadd
ins
scas
inc
inc
push
xchg
mov
mov
or
sbb
jnp
jecxz
or
lds
ja
pushf
sub
xor
jo
addr16
mov
xchg
cwde
and
inc
call
cmp
dec
pop
xchg
mov
push
xor
popa
mov
push
dec
sbb
mov
fiadd
dec
cmp
shl
enter
outs
sbb
and
outs
sub
sub
inc
outs
pop
sbb
adc
ret
xchg
mov
xor
sti
jg
pop
or
sbb
xor
test
or
mov
xor
fs
and
sub
jae
push
push
dec
cmp
jecxz
ficom
and
or
daa
jnp
pop
sub
push
cmp
aam
add
add
sbb
jo
push
inc
pop
or
sbb
pop
xor
bound
mov
mov
gs
shl
xchg
pop
outs
sbb
sub
sahf
neg
mov
push
inc
ins
pop
call
mov
pop
dec
data16
sub
bound
xchg
xor
dec
pop
fiadd
addr16
ror
and
inc
sbb
xor
shl
loopne
xor
pop
add
mov
test
mov
neg
sub
sahf
push
loopne
cmc
shl
xor
cmp
push
adc
sbb
gs
jmp
mov
je
ret
outs
or
xchg
dec
mov
xchg
mov
scas
ins
outs
lea
push
fisub
push
retf
jge
ins
sub
aaa
adc
add
or
imul
mov
sbb
movs
add
and
pop
xor
js
pop
pop
jmp
test
arpl
imul
fdiv
xchg
test
xchg
sbb
adc
inc
mov
inc
fild
dec
retf
mov
and
pop
lock
jmp
arpl
mov
or
mov
xor
xchg
jbe
or
adc
push
outs
inc
or
inc
sub
mov
dec
ror
ins
test
shr
inc
and
loop
push
sar
xchg
rcl
ficomp
fs
int
dec
sbb
and
and
push
movs
or
stos
xor
movs
data16
dec
pusha
sbb
or
fadd
and
xor
sbb
jns
mov
inc
jb
and
scas
xchg
push
scas
jae
(bad)
ja
pop
cmps
xor
xor
sub
in
test
adc
loopne
adc
ja
dec
jae
cmp
test
sbb
leave
mov
sbb
sbb
add
and
xor
add
lods
jbe
add
cmp
jae
inc
and
das
sbb
xchg
mov
jmp
push
fdiv
test
push
jb
ins
jno
inc
lds
cmp
pop
retf
sbb
retf
test
pop
and
cmp
sbb
dec
and
jne
sbb
inc
mov
xchg
inc
inc
xchg
sbb
test
inc
mov
lods
loopne
xor
xchg
mov
xlat
mov
fadd
and
pusha
aad
ins
and
sbb
push
sbb
adc
rol
ins
sub
xchg
jmp
cmova
push
lods
and
and
mov
fnstenv
sub
add
imul
sbb
push
stos
inc
add
inc
push
mov
test
gs
ficom
adc
mov
ds
enter
dec
sub
push
idiv
mov
or
sbb
push
adc
inc
mov
adc
sbb
cmp
push
pop
adc
mov
pcmpgtb
push
xor
test
fistp
lods
sbb
sub
ss
mov
data16
js
inc
sbb
pop
and
popa
sbb
inc
push
pop
pop
jmp
test
push
repz
jns
push
fsub
push
jmp
ins
mov
add
jns
pop
add
add
dec
outs
pop
or
scas
in
movs
imul
pop
dec
sbb
lods
jmp
pop
pop
push
iret
inc
and
jl
hlt
imul
cmps
das
int
sahf
xor
sbb
inc
adc
add
call
add
add
pop
inc
sub
pop
add
mov
fwait
mov
sub
add
rcl
sbb
sahf
test
push
inc
movups
jo
in
dec
outs
adc
test
loopne
add
dec
test
adc
sbb
pusha
or
ins
scas
fs
es
xlat
inc
and
pusha
inc
inc
push
inc
pusha
fild
fimul
xor
dec
pop
in
out
rol
jno
inc
adc
loopne
push
leave
push
adc
adc
scas
dec
leave
fwait
out
dec
dec
inc
je
jae
leave
ins
jmp
jb
leave
ror
inc
sbb
inc
rcl
push
xchg
out
add
mov
jae
dec
sbb
push
sub
daa
adc
and
fisttp
into
or
jg
cmc
adc
inc
and
add
add
dec
add
inc
xchg
lea
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
and
add
add
