push
mov
push
push
and
push
push
push
push
call
mov
mov
mov
cmp
lea
jae
push
call
mov
lea
push
push
push
push
call
lea
mov
push
push
push
push
call
push
call
push
mov
push
call
mov
push
push
call
push
push
call
push
push
call
push
mov
call
mov
pop
pop
pop
leave
ret
out
fwait
jle
xchg
mov
jg
jb
ins
adc
inc
or
and
xor
ret
pop
or
pop
adc
or
ins
jne
call
dec
lgs
in
lods
or
shr
jbe
(bad)
movs
pop
(bad)
jae
cmps
fs
add
popa
les
mov
inc
inc
(bad)
push
sub
in
mov
xchg
out
je
xor
push
xchg
mov
retf
(bad)
out
ss
sar
cmp
mov
adc
rcl
mov
cmp
addr16
mov
stos
mov
repnz
cmp
or
cmp
mov
cli
movs
and
and
xlat
sub
add
add
jmp
sbb
lahf
rcl
xor
mov
xchg
(bad)
add
std
dec
test
mov
fidiv
cmp
pop
loope
inc
sbb
pop
repnz
aad
repnz
cmp
inc
jecxz
push
sbb
cwde
sbb
cmps
shl
call
mov
jbe
jne
test
cld
mov
jl
in
pop
jecxz
cmp
sub
push
mov
mov
sti
cmp
ins
shl
add
fist
punpckhwd
dec
dec
mov
mov
out
adc
and
aaa
mov
pop
out
pop
inc
lea
neg
add
cmp
and
mov
push
xor
cmc
xor
adc
(bad)
jge
in
loope
mov
inc
sub
xor
dec
(bad)
ret
(bad)
in
sub
pusha
js
push
dec
mov
jmp
cmp
cld
mov
xchg
add
mov
iret
cmp
out
xchg
push
cld
mov
lods
push
mov
rol
add
and
mov
add
sub
xor
mov
cmps
or
mov
gs
arpl
and
inc
test
dec
xchg
imul
dec
dec
inc
mov
std
xor
cmp
arpl
mov
pop
inc
scas
sahf
ins
push
mov
mov
sub
pop
inc
mov
and
fistp
rcl
mov
hlt
mov
or
add
mov
lock
jmp
jbe
lods
adc
je
pusha
shl
jbe
frndint
add
mov
mov
sub
mov
push
sub
add
arpl
test
icebp
call
mov
sub
adc
rcr
ror
test
dec
inc
stos
imul
push
pop
xchg
(bad)
sti
gs
push
(bad)
mov
jle
xor
iret
lock
push
mov
out
pop
movs
stos
pop
stos
retf
dec
push
mov
mov
repnz
fdivr
push
int
mov
mov
dec
push
pop
std
sar
leave
jbe
xchg
jbe
cmc
xor
jo
stos
add
sub
dec
int
inc
ds
push
out
cli
push
dec
add
repz
fldenv
les
jbe
jmp
shl
push
xchg
scas
cwde
(bad)
iret
adc
test
mov
test
rep
sahf
mov
xor
mov
mov
mov
push
push
cmp
sbb
rcl
div
out
loop
repnz
mov
inc
mov
mov
or
mov
rol
nop
aam
add
xchg
push
retf
pop
adc
jo
outs
(bad)
icebp
push
push
(bad)
pop
lahf
pop
mov
retf
scas
pusha
lock
mov
test
outs
inc
ja
push
(bad)
xlat
adc
push
nop
icebp
xchg
fisub
mov
pop
das
dec
jae
pop
js
icebp
jp
mov
xor
sbb
popa
cmp
les
inc
cmp
mov
cmps
sbb
jge
or
neg
ja
loopne
je
sahf
in
(bad)
ror
sub
inc
and
cmp
inc
iret
mov
mov
or
(bad)
out
jo
ja
pop
stc
mov
movs
mov
addr16
jge
cmps
fld
cwde
push
adc
shr
or
(bad)
lea
xlat
xor
int
xchg
ins
mov
xchg
lods
sub
pop
adc
movs
add
rcl
cmp
push
(bad)
fsubr
es
mov
adc
es
loope
inc
popf
sbb
mov
imul
and
dec
and
test
repnz
cmc
sub
adc
dec
pop
dec
sub
stc
ins
popa
mov
jo
xchg
imul
jmp
loope
xor
jae
mov
mov
cmc
(bad)
(bad)
jmp
clc
push
xchg
push
and
stos
mov
push
pop
sub
into
or
xchg
das
in
jnp
mov
sbb
and
mov
inc
inc
repnz
sub
mov
call
dec
fdivr
or
inc
movs
push
jmp
in
jbe
int
(bad)
jno
jl
sti
or
(bad)
in
ficom
push
add
cmp
(bad)
xchg
test
nop
daa
imul
sub
cmps
or
test
sahf
adc
pop
or
rcl
(bad)
(bad)
repnz
int
enter
mov
test
or
dec
jl
cmps
scas
inc
jg
xor
sub
xlat
js
and
inc
fst
es
push
stos
jle
pop
ds
mov
cmp
in
int
fld
xor
jbe
mov
je
movs
xor
inc
push
nop
dec
leave
pop
sbb
cmp
pop
int3
dec
adc
div
pop
sub
sbb
mov
mov
push
push
repz
xchg
std
push
add
xor
jmp
clc
pop
test
add
test
adc
push
lgdtd
adc
ror
adc
pop
cmps
cdq
(bad)
mov
mov
push
retf
(bad)
xor
in
mov
addr16
sub
in
jl
add
jb
xor
xor
mov
(bad)
sbb
pop
add
cmp
shr
scas
and
enter
inc
adc
loopne
cmp
inc
cmp
movs
mov
add
mov
int
push
mov
push
push
mov
push
xor
call
test
jbe
push
mov
sub
mov
push
xor
mov
inc
call
cmp
jb
pop
and
pop
pop
mov
pop
ret
mov
push
cmps
mov
jnp
sbb
pop
sub
pop
cmp
popa
(bad)
adc
ins
add
dec
cwde
mov
push
fld
outs
sbb
popf
outs
add
cmps
test
add
cmp
cmps
xlat
ror
push
scas
ins
xor
leave
sub
sbb
xchg
dec
xchg
fxch
out
dec
add
outs
call
jmp
dec
fdiv
gs
fmul
sub
hlt
call
add
sub
test
adc
jmp
mov
out
mov
loopne
test
xor
xor
xlat
lock
loope
jns
test
cli
mov
xchg
sahf
add
sar
xor
jle
sub
jb
hlt
jo
mov
mov
lea
and
jge
je
(bad)
ins
cmp
mov
fst
mov
xchg
pop
xor
pop
push
cmc
adc
retf
push
xor
ror
sti
adc
bnd
test
(bad)
or
repz
(bad)
mov
std
push
jnp
retf
fstp
add
mov
sbb
hlt
pop
xor
nop
in
cmp
mov
outs
sub
jmp
push
into
xchg
iret
imul
push
scas
pop
push
sbb
outs
mov
sub
push
cwde
add
leave
cmp
push
mov
push
scas
mov
popa
jmp
call
mov
clc
jmp
bound
dec
(bad)
add
mov
pop
je
xlat
cmp
jge
arpl
mov
push
sub
les
in
call
mov
mov
pop
call
mov
fld
bound
sub
jo
adc
inc
es
push
jge
mov
dec
lods
mov
jle
(bad)
(bad)
jno
push
jbe
and
and
xchg
xor
mov
rcr
pop
dec
sbb
shl
add
(bad)
ja
cwde
clc
inc
mov
gs
sbb
sub
lahf
rep
rol
sub
pop
push
fcomip
jns
loope
push
or
cli
(bad)
jle
fwait
(bad)
xchg
call
jbe
call
vmovdqa
dec
xchg
das
stos
push
jno
add
push
scas
movs
xor
xchg
repz
cmps
and
dec
push
xchg
pop
sbb
cld
or
imul
test
adc
or
jb
and
mov
mov
sub
lods
jno
jmp
or
aas
sbb
cmps
xor
imul
ins
cmp
cmp
sbb
cs
cmp
pop
cld
add
jp
xchg
(bad)
cwde
xchg
ror
push
into
mov
int3
pop
mov
or
inc
sbb
fbstp
dec
mov
lock
inc
shr
sbb
(bad)
(bad)
xor
sub
and
pop
or
enter
push
jecxz
push
rcl
jmp
gs
push
push
test
in
push
fiadd
cmp
push
and
js
lahf
(bad)
fcmovu
int3
(bad)
jecxz
fidiv
ss
mov
mov
fiadd
jge
retf
jb
cmps
or
ret
adc
mov
ret
std
xchg
movs
adc
cwde
mov
cmp
std
pop
pop
dec
jge
xchg
rcl
cld
push
in
lds
push
push
movzx
xor
test
jbe
lea
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
ret
lea
lea
mov
sub
add
jmp
push
mov
sub
and
push
push
xor
pop
lea
rep
stos
stos
push
lea
push
push
call
mov
mov
sub
push
push
lea
push
call
push
lea
push
push
call
add
call
push
call
pop
push
mov
sub
mov
push
push
push
xor
mov
mov
inc
cmp
jl
xor
mov
cdq
idiv
mov
inc
cmp
mov
mov
jl
lea
xor
sub
mov
mov
jmp
mov
mov
movzx
movzx
add
add
mov
cdq
idiv
mov
mov
mov
add
mov
inc
dec
mov
jne
pop
pop
pop
leave
ret
push
mov
sub
xor
cmp
mov
mov
jle
push
push
mov
push
mov
jmp
mov
inc
mov
cdq
idiv
mov
mov
lea
mov
movzx
add
cdq
idiv
mov
mov
lea
mov
mov
mov
mov
mov
movzx
add
movzx
add
mov
cdq
idiv
mov
xor
inc
mov
cmp
jl
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
inc
add
inc
add
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
push
inc
add
inc
add
inc
add
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
inc
add
push
inc
add
pop
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
inc
add
pop
inc
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
inc
add
inc
add
inc
add
inc
add
add
add
add
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
add
and
lods
and
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
