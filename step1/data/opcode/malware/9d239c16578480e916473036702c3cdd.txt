xchg
adc
add
adc
add
or
adc
or
pushf
adc
add
add
add
add
xor
or
lods
adc
add
adc
add
or
mov
adc
add
or
int3
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
add
add
or
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
ins
add
sub
add
add
je
outs
fs
gs
popa
outs
fs
gs
add
add
gs
xor
fs
ins
add
iret
pop
add
add
dec
gs
popa
addr16
outs
js
add
popa
fs
jo
xor
cs
ins
add
mov
add
add
push
gs
jo
outs
dec
gs
js
add
arpl
arpl
xor
fs
ins
add
in
add
add
dec
outs
imul
inc
outs
outs
je
outs
ins
jae
add
jae
gs
ins
xor
cs
ins
add
add
gs
ins
inc
bound
je
add
ins
jae
outs
jb
gs
ins
add
add
outs
jb
js
dec
popa
imul
add
and
dec
jae
rol
add
adc
add
sub
add
lods
add
or
add
jl
add
add
add
add
add
inc
add
add
add
add
add
pop
add
add
or
inc
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
add
mov
movs
add
add
add
je
jb
imul
inc
add
ins
add
dec
add
data16
add
add
add
add
add
add
add
add
add
bound
xor
add
sub
add
add
inc
add
ins
add
inc
add
jae
arpl
jb
imul
imul
add
add
and
add
xor
or
add
inc
add
ins
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
outs
add
add
outs
add
ins
add
popa
add
add
add
popa
add
ja
jae
js
add
js
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
and
add
inc
add
add
add
jb
imul
outs
add
ins
add
imul
outs
add
ins
add
add
jno
popa
add
ja
jae
js
add
js
add
add
add
or
add
push
add
outs
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
jae
jae
add
bound
ins
add
and
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
in
and
add
add
add
add
add
mov
ins
ins
and
jb
imul
xor
and
arpl
imul
sub
aas
ds
ins
jbe
cmp
jae
ins
bound
ins
popa
outs
imul
jb
imul
xor
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
js
ins
outs
jae
popa
jae
jbe
cmp
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
js
ins
outs
jae
popa
jae
jbe
cmp
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
js
ins
outs
jae
js
imul
ja
ja
ja
outs
jb
das
xor
xor
das
pop
dec
dec
push
arpl
ins
popa
sub
popa
outs
arpl
ds
popa
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
ins
gs
jo
ins
imul
cs
jo
and
ds
je
jne
je
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
and
and
sub
shl
sar
adc
and
mov
sar
rol
and
inc
or
and
and
and
and
and
xchg
rol
and
mov
mov
rol
sar
and
mov
shl
rol
adc
sar
sar
mov
rol
sar
adc
shl
ror
mov
mov
mov
shl
imul
and
and
and
and
and
and
mov
mov
mov
sar
and
adc
shl
gs
gs
gs
js
arpl
imul
ins
and
mov
sar
mov
adc
mov
adc
ror
cs
and
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
ins
gs
ins
cmp
outs
jbe
imul
and
inc
arpl
jae
cmp
jae
and
das
ds
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
ins
gs
ins
cmp
jne
jb
inc
fs
imul
je
jb
and
inc
arpl
jae
cmp
jae
and
das
ds
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
ins
gs
ins
cmp
push
jbe
imul
jne
inc
arpl
jae
cmp
jae
and
das
ds
and
and
and
and
and
and
xchg
rol
and
mov
mov
rol
sar
and
mov
sar
shl
shl
and
mov
mov
rol
sar
rol
and
test
mov
mov
shl
rol
rol
shl
mov
mov
shl
sar
or
and
and
and
and
and
and
adc
mov
rol
sar
sar
shl
mov
and
adc
shl
gs
gs
gs
js
arpl
imul
ins
cs
and
and
and
and
and
and
and
cmp
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
and
inc
arpl
jae
cmp
jae
and
das
ds
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outs
outs
ds
jae
jbe
cmp
jae
ins
bound
or
add
add
add
or
add
add
add
add
lods
or
add
add
loop
mov
or
cwde
mov
sub
stos
bound
bound
mov
cld
xchg
xchg
and
mov
mov
add
or
pop
mov
sub
sar
(bad)
stc
iret
rcr
pop
stos
sub
fld
enter
sub
fwait
xchg
fs
jge
mov
aas
dec
add
fnsave
or
sbb
adc
pusha
dec
jo
sbb
cmp
sub
mov
das
cmc
or
(bad)
(bad)
push
daa
dec
test
mov
push
push
sub
repnz
aad
outs
sub
mov
loope
and
clc
test
xor
xor
and
sbb
imul
xchg
in
nop
and
dec
pop
add
out
sub
dec
inc
shr
test
xor
push
xchg
in
adc
inc
adc
xor
xor
jns
ret
aam
fcomp
sub
fs
ret
mov
stc
sbb
sti
add
add
shl
push
jmp
cs
jmp
push
mov
jb
jno
jmp
test
(bad)
dec
call
jmp
icebp
cmp
stos
add
jmp
mov
jmp
xchg
jmp
add
add
fs
mov
jmp
frstor
jmp
sbb
add
jmp
test
and
jmp
push
add
mov
jmp
or
(bad)
mov
jmp
rcr
add
jmp
jmp
bnd
mov
add
add
inc
sbb
adc
mov
lahf
jmp
add
sub
cmp
loope
add
lahf
inc
jnp
and
jmp
or
and
add
mov
bnd
rcr
jmp
mov
les
add
inc
out
sbb
mov
xor
jmp
push
jmp
adc
fsubr
in
adc
add
cdq
push
jmp
pop
add
add
mov
imul
add
jmp
mov
push
gs
add
lods
mov
jmp
retf
add
jmp
sub
add
clc
jmp
mov
push
hlt
jmp
mov
jmp
fstp
or
call
mov
jmp
lea
and
add
jmp
adc
add
sub
mov
add
add
sahf
add
add
adc
adc
enter
push
jb
mov
jmp
mov
add
(bad)
or
add
or
add
addr16
jmp
jmp
mov
sbb
xchg
add
add
cwde
(bad)
(bad)
call
(bad)
jmp
or
add
jmp
and
add
add
mov
shl
imul
add
mov
sbb
xchg
les
add
jmp
add
mov
jmp
mov
push
add
add
mov
inc
jmp
rol
enter
mov
jmp
cmp
jle
jmp
test
jmp
or
mov
add
add
add
jmp
call
add
retf
jmp
jmp
rcr
add
hlt
jmp
cmp
pop
fsubrp
add
mov
jmp
call
jo
xor
jo
mov
jmp
call
jmp
or
add
add
add
add
add
mov
pop
sub
mov
or
jmp
imul
jmp
and
jmp
sbb
mov
cli
jmp
add
jle
ja
jmp
jmp
mov
jmp
sbb
jmp
es
add
sub
jmp
jb
jmp
add
jmp
jecxz
sti
add
add
cmp
(bad)
(bad)
jmp
jmp
push
jmp
test
shl
jmp
loop
in
add
aam
add
jmp
ror
iret
jmp
sub
or
add
jmp
jmp
bound
and
add
jmp
mov
or
add
xor
jno
mov
jmp
mov
jmp
es
add
mov
jmp
sbb
add
and
xor
popf
mov
jmp
mov
add
jno
or
jmp
cmp
(bad)
jmp
jmp
mov
add
jmp
imul
jmp
sbb
add
dec
push
jmp
bound
mov
mov
add
lea
jmp
mov
sldt
jmp
and
add
add
push
jmp
sar
add
jmp
test
fsubr
add
jmp
lds
add
add
jbe
jmp
jmp
sub
add
xor
jae
fdiv
shr
add
sub
jmp
add
add
jmp
arpl
xor
jmp
fnsave
aam
add
add
jmp
push
(bad)
(bad)
jmp
jmp
jno
jmp
xor
add
add
add
jmp
xorps
add
jmp
je
jecxz
jno
xchg
add
jmp
nop
jmp
sbb
add
add
jmp
cmp
sub
jmp
cmp
or
jmp
(bad)
mov
jmp
or
shl
jmp
mov
xor
add
jo
aas
jmp
cmp
mov
mov
xor
jb
jmp
jmp
adc
jmp
push
jmp
and
and
xor
jmp
mov
int
gs
jmp
mov
add
add
add
call
and
jmp
mov
(bad)
jmp
int
mov
jmp
mov
enter
mov
jmp
adc
add
jmp
ror
add
(bad)
jmp
mov
jmp
sub
jmp
add
aam
(bad)
(bad)
jmp
mov
add
pop
jmp
adc
jmp
cmp
cmp
jmp
jmp
add
add
stc
jnp
dec
sbb
div
mov
loop
retf
pop
ret
stc
pop
dec
sub
les
fld
sub
sub
lods
test
dec
mov
ret
arpl
add
mov
dec
mov
mov
int3
pop
(bad)
test
jg
jmp
dec
shl
jns
jns
pop
pushf
ja
inc
in
aam
pop
mov
in
xor
fcomip
push
sbb
aas
out
pop
icebp
xor
mov
and
bound
jnp
lods
add
push
mov
mov
das
lds
xchg
sar
pop
sub
outs
push
mov
push
rcr
dec
fadd
daa
adc
dec
fcom
inc
pop
sbb
(bad)
int
xchg
pop
je
pop
ins
push
(bad)
jne
cld
sub
cmp
adc
xor
dec
xlat
mov
add
jle
add
fs
inc
cmc
xchg
cdq
xor
out
cmc
popa
and
sti
dec
sbb
add
jae
sti
lods
dec
cmp
mov
pop
stc
mov
mov
push
shl
jnp
dec
mov
lock
dec
movs
dec
(bad)
(bad)
out
lds
and
dec
gs
mov
xchg
sti
loope
ja
ins
int
pop
xor
sbb
sbb
neg
inc
sub
mov
mov
(bad)
mul
mul
sbb
into
leave
das
or
ret
cmp
push
push
add
jbe
pushf
aaa
enter
sub
test
jne
inc
jno
dec
es
fstp
xor
fisub
inc
pop
inc
push
(bad)
mov
pop
jns
in
out
aad
xchg
fcom
rcr
push
jae
dec
outs
mov
xor
push
cmp
sub
pop
mov
inc
inc
pop
(bad)
jne
scas
lods
rcl
ret
stc
mov
xchg
daa
xchg
mov
loop
nop
cld
xchg
inc
outs
ret
or
cmp
cmp
mov
movs
mov
stos
mov
dec
nop
cdq
dec
cs
(bad)
out
fld
ins
sub
leave
repnz
mov
jno
pop
pop
pop
out
mov
out
call
mov
je
icebp
mov
add
movs
inc
xor
add
pushf
and
and
sbb
push
jl
sub
daa
jne
test
jb
sar
cmp
in
fisttp
cwde
xor
push
imul
sub
jno
cmc
pusha
mov
jmp
push
lods
ins
lea
out
add
inc
fwait
imul
inc
test
cld
pop
jg
nop
sar
je
stos
(bad)
xchg
adc
js
pop
out
sbb
stos
sub
fild
pop
cmp
sar
add
(bad)
jmp
sti
push
mov
fs
xchg
into
mov
push
push
leave
pusha
or
aas
mov
push
ins
call
adc
add
cmp
dec
adc
jg
jge
push
retf
adc
mov
std
sub
cli
movs
mov
mov
pop
mov
dec
sbb
stos
out
je
mov
es
or
mov
mov
test
fadd
sub
push
retf
jns
or
sar
shl
js
sbb
aad
mov
inc
and
mov
js
mov
out
lds
add
xor
fwait
or
icebp
dec
jne
aad
pop
cmp
xchg
mov
and
sub
cmp
inc
push
scas
mov
fs
add
mov
mov
fisttp
push
stc
inc
mov
ins
mov
movs
outs
xor
mov
daa
pop
jb
jecxz
mov
xchg
jle
jmp
mov
mov
mov
mov
cmp
(bad)
fcomp
sub
jb
fsub
push
mov
mov
rcr
inc
dec
jp
outs
int3
sbb
sub
xor
(bad)
add
mov
cdq
jae
test
aas
push
pop
push
sti
xchg
mov
lods
inc
nop
mov
cmp
inc
ret
and
add
xchg
push
add
and
jg
imul
add
push
inc
cmp
pushf
mov
mov
sub
mov
adc
popf
in
adc
js
call
jns
sub
sbb
scas
inc
enter
push
xor
sbb
lock
cmps
mov
mov
(bad)
inc
xor
test
aas
ja
adc
out
xor
push
out
xchg
pop
idiv
inc
fs
xor
(bad)
mov
lods
sahf
fisubr
add
loope
or
lea
shr
repz
cmp
fistp
popa
iret
ret
or
add
jnp
push
pop
arpl
adc
pop
inc
ficom
ret
jmp
jnp
repz
cmps
xchg
add
jo
(bad)
jle
pop
jmp
or
cmp
xchg
rcl
out
push
mov
cwde
loopne
into
pop
xchg
and
(bad)
fist
push
xor
dec
sbb
mov
stc
stos
mov
mov
loop
pop
cdq
mov
dec
add
xchg
mov
or
mov
jne
add
or
jbe
stos
xchg
push
(bad)
movs
mov
arpl
(bad)
inc
movs
cmc
pop
cs
adc
xchg
(bad)
adc
dec
sub
sbb
js
or
inc
sbb
add
push
enter
stc
cmp
in
mov
fld
cmc
mov
xor
cwde
push
and
leave
addr16
aas
cwde
shl
mov
mov
xor
jo
enter
test
push
fist
fstp
je
(bad)
fdivp
sub
movs
sbb
test
in
aas
ss
nop
add
inc
ret
push
xor
dec
test
in
jle
outs
adc
dec
enter
and
cld
mov
out
out
jae
loopne
mov
pop
mov
lods
into
outs
daa
and
xor
and
out
test
add
stc
add
ficom
add
rol
out
jne
sbb
mov
daa
cmps
push
inc
adc
loopne
pop
cmp
aas
adc
cmps
cmp
in
shl
cmp
inc
adc
aam
cmp
push
int
sub
xchg
push
xchg
dec
test
je
dec
push
in
pop
(bad)
cli
imul
jo
add
das
push
and
hlt
push
ror
in
mov
mov
inc
mov
push
xchg
jbe
push
mov
and
jno
dec
inc
in
retf
cmps
es
(bad)
movs
out
adc
mov
mov
mov
cmp
xlat
in
retf
pop
jno
and
jo
mov
xor
rol
and
cs
je
push
push
xchg
or
mov
xor
pop
push
in
test
mov
aad
fwait
push
mov
das
sar
arpl
daa
movs
lods
fcmovu
imul
fistp
(bad)
or
adc
fs
hlt
xchg
dec
adc
jl
cmp
cmp
sahf
sti
inc
lds
sub
adc
jge
inc
sub
xor
xor
rol
pop
push
pop
sbb
icebp
inc
mov
xchg
and
sbb
mov
mov
lds
and
das
daa
int3
retf
pop
mov
int3
cmp
fld
out
(bad)
lock
fmul
or
sub
jge
ins
mov
cmp
js
int3
(bad)
or
pushf
xor
or
popf
dec
scas
mov
jb
jnp
cld
or
loope
cmp
mov
sub
inc
mov
repnz
cmp
in
jmp
mov
inc
mov
adc
ret
cld
lock
or
fs
dec
ret
and
outs
dec
fisubr
and
movs
dec
fs
jb
cmp
nop
pop
jae
jge
adc
pop
add
pop
cmps
or
push
pop
mov
sub
xor
aaa
mov
mov
and
and
adc
mov
pop
lods
in
stc
adc
jp
or
push
inc
arpl
push
out
mov
test
xor
fiadd
jno
mov
es
bound
lock
pop
mov
mov
and
stos
(bad)
(bad)
rol
ret
into
in
or
stc
xchg
jl
inc
mov
push
xchg
xchg
jp
and
rcr
shl
retf
jmp
pusha
scas
sub
adc
pop
sbb
aam
push
arpl
jnp
lods
arpl
and
mov
lods
push
pop
push
and
xor
or
or
je
cmp
add
rcl
rol
xchg
mov
sbb
shl
fsubrp
add
(bad)
mov
xchg
dec
rep
clc
(bad)
mov
je
ret
mov
jecxz
push
xchg
test
sbb
mov
or
(bad)
push
sub
ret
idiv
push
outs
cmp
test
mov
and
cmp
outs
jne
popf
push
jb
jmp
ret
mov
imul
adc
test
dec
mov
popf
push
rcr
int
dec
push
add
out
test
mov
mov
jmp
xor
mov
(bad)
imul
scas
movs
movs
sub
mov
pop
das
leave
mov
mov
jg
shr
shl
movs
pusha
jne
mov
push
ffree
push
or
std
pusha
test
shr
stos
mov
add
mov
adc
jns
hlt
imul
cmp
in
test
ss
xlat
push
fcom
fwait
fs
cs
adc
gs
cmp
dec
adc
adc
aas
scas
mov
test
jle
push
mov
data16
rcr
hlt
dec
mov
mov
daa
test
xchg
scas
bnd
push
rol
mov
pop
inc
add
mov
rcl
(bad)
fmul
cmps
mov
inc
rcr
ret
inc
xor
shr
pop
xor
inc
in
retf
movs
(bad)
ss
les
ja
pop
and
fmul
inc
iret
mov
push
sub
fs
data16
lea
dec
adc
(bad)
push
cmp
jns
push
shl
sahf
jmp
mov
mov
mov
repz
push
jne
stos
cld
rol
and
push
adc
ins
in
dec
jae
clc
stos
loopne
and
dec
ins
sbb
hlt
mov
xchg
and
je
xchg
push
push
push
fdivr
jl
add
mov
jb
test
stc
xchg
hlt
dec
pop
xchg
(bad)
popa
scas
mov
adc
push
and
sbb
push
sbb
pusha
lahf
addr16
pop
(bad)
push
cmp
sbb
stos
imul
imul
sub
loopne
jns
sbb
add
out
pop
fdiv
aad
adc
push
jg
pop
ret
cmp
sbb
sub
fisubr
jno
xor
add
je
in
mov
jl
xor
push
push
jb
push
retf
pop
dec
shl
imul
pop
stos
sbb
jnp
loop
shl
fwait
sbb
or
add
lahf
loop
pusha
or
and
shr
clc
scas
dec
into
mov
in
cmp
inc
in
fcomp
nop
in
pop
mov
fcmovnb
pop
ret
js
cmp
popa
scas
sub
pop
adc
fimul
repz
cmc
dec
push
inc
dec
jle
inc
inc
std
push
xlat
mov
inc
loopne
int3
push
pop
cmps
xor
mov
bound
and
jmp
xchg
xchg
test
repnz
js
pop
and
cmp
shl
push
and
push
shr
sar
xchg
sub
mov
lods
bound
icebp
call
fcomi
inc
mov
ins
(bad)
pushf
fmul
retf
lods
stc
inc
xchg
ficom
cmc
xchg
cmp
iret
jnp
add
jno
lods
push
adc
push
xor
hlt
and
mov
mov
sub
mov
out
dec
ret
cli
mov
mov
sar
adc
call
mov
cmp
add
cmp
jmp
xor
mov
test
sub
mov
mov
loope
inc
ror
fimul
int3
mov
ret
out
or
cmps
mov
xor
add
inc
sbb
cmp
cld
add
mov
fwait
push
out
dec
int3
cmp
pushf
dec
dec
imul
cmp
call
push
jecxz
mov
xchg
mov
add
adc
ins
scas
jbe
sbb
pop
sub
fsubp
icebp
enter
pop
fisttp
mov
bnd
sub
pop
stos
inc
in
daa
sahf
sbb
test
ins
sbb
not
xor
addr16
jne
xchg
or
push
xchg
xchg
jp
cmps
rcr
jns
pop
and
push
jge
inc
pop
in
xchg
push
mov
ja
loop
in
pop
loope
and
(bad)
push
xchg
push
mov
scas
pop
xor
popf
cmp
mov
xchg
outs
loopne
mov
jmp
es
and
jmp
cmp
jnp
pusha
addr16
sub
and
mov
pop
sbb
mov
lds
cmps
test
fnstenv
popa
pusha
mov
fistp
lods
mov
xor
or
sub
test
cmp
jecxz
push
mov
xor
pop
add
or
retf
js
stos
inc
xor
daa
movs
popf
clc
mov
push
add
or
aam
in
shl
or
cmp
out
shl
jg
mov
mov
addr16
xchg
dec
cmp
aaa
loopne
sbb
ret
ret
mov
lds
fs
jns
xlat
call
sbb
or
push
scas
mov
call
(bad)
loopne
pop
inc
repz
and
jg
aad
add
icebp
mov
lods
mov
xor
les
cdq
sbb
adc
mov
xor
outs
scas
add
cdq
pop
jns
out
add
dec
or
xor
jp
push
retf
adc
outs
mov
jb
stc
mov
mov
call
pop
rcr
cmp
out
push
fstp
fiadd
mov
jg
dec
cmps
(bad)
retf
inc
lock
call
call
mov
adc
dec
fwait
jmp
jns
adc
gs
jmp
xor
and
rcr
push
(bad)
in
(bad)
int3
test
lods
pop
gs
mov
xchg
dec
xchg
and
mov
pop
fincstp
rol
dec
adc
outs
push
push
cli
dec
lahf
je
pop
imul
in
adc
jns
ins
std
aad
mul
push
add
(bad)
cmps
jle
sbb
push
cmp
cwde
test
jno
sub
pusha
adc
test
jp
stos
xchg
adc
fcom
mov
outs
ret
mov
sub
idiv
fldenv
ins
xor
aas
hlt
hlt
cmp
repz
adc
int3
std
jg
add
stos
pop
pop
ret
ret
in
sub
pusha
and
aaa
mov
jge
push
sub
jmp
dec
inc
clc
xchg
pop
and
cmp
xor
aas
inc
ficom
cli
div
mov
mov
out
mov
ret
imul
and
int
pop
xchg
sbb
push
pop
mov
ret
imul
pop
enter
fdiv
mov
xchg
mov
cmp
pushf
jns
cmps
pop
add
movs
and
xor
xchg
and
cdq
lds
cmp
stos
(bad)
xchg
fstp
shl
inc
das
inc
push
xor
rol
adc
repz
add
sub
fnstcw
lods
inc
inc
and
out
rcr
xor
movs
xchg
pop
add
stos
gs
pop
mov
lods
push
out
clc
nop
push
adc
cmp
mov
pop
xchg
aas
sbb
sahf
jp
pop
in
repnz
sbb
je
sbb
fs
push
aaa
adc
popf
push
dec
or
repnz
inc
loope
movs
stos
or
test
xchg
dec
ja
mov
sbb
shl
or
lods
pop
sub
jp
adc
fwait
ja
sbb
jno
popf
adc
xchg
inc
daa
sub
js
sub
sar
in
cmps
movs
(bad)
pop
mov
(bad)
cs
push
mov
sub
out
sub
mov
pop
dec
or
popf
jecxz
rcr
add
push
test
aad
movs
out
hlt
scas
inc
iret
jo
jae
lahf
inc
sub
test
in
inc
enter
arpl
shr
mov
and
and
fld
cs
mov
(bad)
fwait
shl
lods
push
stos
fimul
shr
dec
in
or
(bad)
pop
int
inc
cmp
mov
fdivr
push
mov
sbb
inc
sbb
adc
pop
push
lahf
pushf
or
and
add
out
addr16
enter
pop
test
pop
pop
popf
int3
cld
imul
cdq
icebp
retf
in
aam
outs
push
call
and
inc
sbb
js
(bad)
mov
jae
inc
mov
xor
ja
cmp
inc
jnp
jns
test
cld
dec
sahf
cmp
clc
jmp
xchg
mov
std
sbb
mov
je
js
mov
xchg
loopne
je
gs
xor
push
out
popf
jo
mov
ins
fcmovnu
sbb
das
add
lahf
(bad)
dec
adc
push
jno
fstp
repnz
in
ins
and
xchg
bound
les
xchg
aaa
cli
mov
mov
ror
cmp
adc
daa
fwait
jmp
mov
fist
pop
test
push
outs
push
dec
ror
sbb
dec
add
pop
or
sahf
dec
repz
push
xor
pop
mov
repz
cmps
xor
push
cmp
pushf
aam
pop
xchg
pop
cmp
add
jbe
rcl
lahf
xor
imul
cmp
push
in
or
mov
loope
mov
add
out
xor
and
aam
xchg
neg
out
sti
mov
or
add
test
daa
nop
or
pushf
mov
mov
push
jl
sub
(bad)
mov
inc
dec
pop
adc
mov
xlat
jb
je
sub
arpl
jnp
inc
stos
fwait
sbb
adc
enter
sbb
(bad)
adc
pop
or
loope
mov
int3
or
jnp
daa
aad
nop
bound
add
mov
popa
adc
push
in
and
dec
mov
mov
push
push
stc
adc
call
mov
jns
push
pop
sub
pop
scas
cmc
inc
pop
fild
xor
push
call
test
push
arpl
rcr
xchg
(bad)
cdq
sbb
add
jbe
aaa
(bad)
push
sbb
ja
ds
mov
mov
fldlg2
sbb
mov
inc
dec
xchg
mov
shl
xchg
xor
sbb
jbe
fsub
push
xchg
out
mov
push
mov
jge
sar
pop
push
cmps
aaa
shl
cmp
or
mov
outs
add
cmp
and
mov
(bad)
adc
sub
cdq
or
fdivr
fld
hlt
add
pop
pop
mov
lods
cld
jno
in
inc
or
sub
test
jnp
xor
inc
pop
into
jge
mov
in
jp
retf
outs
inc
test
pop
and
inc
and
mov
repnz
and
sbb
rol
mov
pop
push
pop
sub
mov
mov
test
cmp
mov
ds
lock
push
sbb
repz
pop
push
lahf
ss
fld
push
je
push
adc
mov
popa
cs
mov
(bad)
enter
fnclex
push
loopne
inc
dec
cmps
in
mov
rcr
mov
jns
es
mov
test
push
sub
in
cs
inc
dec
jo
cli
push
pop
sbb
cmp
mov
ss
mov
add
adc
sbb
mov
es
xchg
pop
mov
jno
jl
lock
cs
in
ss
and
sbb
adc
or
daa
pop
dec
es
jmp
jb
rol
push
aaa
dec
mov
push
aam
mov
sbb
add
cmp
dec
push
fstp
icebp
test
dec
test
pop
xchg
ret
cmp
out
enter
mov
loope
sbb
sub
adc
xchg
fs
dec
push
retf
lods
jbe
add
(bad)
repnz
pop
retf
pop
lods
adc
pop
dec
xor
ror
iret
stc
js
mov
dec
aas
cmps
neg
je
inc
in
push
loope
and
adc
jne
addr16
push
sbb
int
out
mov
add
push
pop
dec
test
out
inc
pusha
fcom
xchg
jno
call
daa
mul
aas
dec
sar
retf
cmp
cld
jmp
sar
pushf
xchg
push
out
xchg
icebp
scas
push
jns
pop
sar
xchg
mov
stos
xchg
(bad)
hlt
push
cwde
xlat
cmc
inc
call
enter
test
cmp
adc
and
jmp
gs
jne
fsin
mov
not
push
jmp
dec
ins
cmps
lods
(bad)
iret
test
or
fimul
movs
(bad)
loope
push
mov
sub
and
xor
xchg
loop
in
in
jmp
fs
add
lods
cmp
je
adc
movs
mov
enter
or
xchg
data16
push
xchg
pop
and
fsubr
xlat
sbb
cmp
dec
popa
and
nop
(bad)
lods
test
sub
pop
sub
mov
xchg
jp
mov
test
xor
call
inc
xchg
fdivr
and
xlat
call
mov
in
inc
xor
push
push
push
push
jae
jl
repnz
test
ja
out
js
scas
add
jne
or
mov
inc
test
hlt
mov
js
ds
or
fdiv
in
dec
sahf
dec
dec
jnp
lds
mov
mov
mov
or
rep
dec
scas
fmul
add
popa
mov
push
sti
add
out
xchg
aas
aaa
inc
dec
pop
xor
fld
popf
jns
test
lods
dec
jp
adc
test
rol
int3
cmp
xchg
dec
dec
sahf
ja
cmp
lock
lods
mov
sbb
mov
test
add
repnz
xor
sbb
mov
rcr
add
pop
gs
jmp
pop
movs
or
sahf
cmp
aad
xchg
into
shld
push
(bad)
pop
(bad)
stos
add
cmp
dec
iret
inc
stos
fisttp
sti
in
sbb
jns
add
xchg
scas
push
add
das
jns
addr16
xor
push
aaa
lahf
std
sbb
mov
and
jns
cdq
add
mov
(bad)
into
cmp
jp
lock
xchg
(bad)
into
sar
jb
cwde
out
dec
rep
nop
std
and
iret
stc
arpl
iret
icebp
(bad)
out
(bad)
lods
out
jnp
retf
sar
icebp
or
iret
inc
push
retf
mov
je
dec
fldenv
repnz
(bad)
or
fnstenv
push
mov
dec
adc
dec
out
and
and
shr
(bad)
lock
cmps
jecxz
test
rol
sub
bound
mov
arpl
into
cdq
fistp
mov
pushf
cmp
sbb
xchg
or
adc
and
xchg
jecxz
in
mov
jbe
pushf
test
add
mov
(bad)
rol
xchg
stos
mov
dec
mov
mov
loopne
les
scas
iret
dec
test
mov
ins
cmps
and
or
and
cmp
push
rcr
pop
xchg
iret
jo
aam
mov
add
fs
dec
pop
add
ins
std
mov
into
daa
loopne
mov
je
(bad)
mov
jo
loopne
imul
mov
cli
cli
push
adc
imul
faddp
bswap
out
sub
adc
mov
ins
out
clc
cli
dec
sbb
jp
sub
fiadd
popf
push
(bad)
aam
call
sub
xor
loop
push
jmp
shl
sbb
xchg
pop
cdq
lods
sub
std
add
enter
pop
or
add
push
xlat
xchg
aas
movs
add
jmp
sbb
dec
mov
leave
ret
ins
pop
add
scas
pusha
lods
ja
retf
mov
int
or
cmp
das
push
jae
retf
shl
call
cmp
les
jne
test
xlat
mov
fisttp
pop
(bad)
sub
cs
adc
aad
xchg
mov
add
outs
loop
in
out
daa
jns
enter
in
cmps
sub
ins
inc
or
in
jnp
xor
mov
ins
cmp
and
push
mov
fwait
xor
imul
icebp
pop
jmp
(bad)
int3
bound
into
je
scas
rcr
cmps
xor
pop
fmul
stc
mov
shl
sub
(bad)
or
(bad)
jge
dec
in
stc
ltr
pop
jno
pop
fs
lods
or
out
ror
xchg
cld
fs
pop
aas
xchg
scas
xor
or
cs
inc
dec
leave
xchg
dec
bound
adc
sub
ins
sub
cs
xchg
mul
dec
inc
fst
adc
sbb
push
mov
jl
int3
mov
dec
and
jg
rcl
dec
addr16
dec
js
shr
pop
sbb
xor
inc
ret
shl
in
out
sub
inc
mov
shl
mov
(bad)
mov
scas
push
cdq
lock
pop
mov
cmp
pop
sahf
jecxz
mov
or
dec
inc
mov
je
push
dec
jmp
mov
push
sbb
xor
xchg
mov
adc
call
call
in
mov
lahf
push
xchg
mov
mov
iret
sbb
adc
cmc
(bad)
cmp
sub
call
xor
loopne
dec
(bad)
cmc
cmps
push
add
les
and
or
push
or
sub
mov
add
daa
add
xchg
or
(bad)
mov
xchg
cmp
movs
je
jp
pop
jns
inc
mov
dec
aad
mov
pop
mov
test
push
test
pop
jl
aaa
jbe
jle
xchg
ret
(bad)
out
std
push
lea
jmp
jnp
outs
mov
lea
jle
inc
add
xchg
repnz
sub
mov
(bad)
cmp
jnp
pop
xor
xchg
fwait
in
imul
add
inc
mov
pop
cmp
and
dec
mov
popa
or
mov
(bad)
jnp
and
stc
test
retf
jecxz
or
and
scas
repnz
dec
aaa
sub
sbb
add
mov
xchg
and
jle
sub
adc
or
rol
popa
or
(bad)
jl
and
daa
push
sahf
push
hlt
pusha
sub
in
ror
dec
cmp
pop
xor
cmc
xor
imul
jnp
xor
clc
enter
sar
in
gs
jae
fild
or
or
in
ror
jnp
jo
nop
stos
push
push
jb
outs
jns
inc
jnp
inc
imul
jne
xchg
sbb
or
sbb
sbb
loope
mov
icebp
adc
pusha
pop
and
pop
mov
loope
jbe
jle
test
cmp
es
in
and
retf
pop
mov
movs
(bad)
in
xchg
call
nop
mov
cwde
mov
addr16
pop
in
les
das
popa
xchg
jg
je
stos
push
cmp
fistp
mov
mov
retf
mov
push
jnp
xchg
mov
xchg
sub
repnz
imul
pop
mov
gs
shl
fld
or
jae
jecxz
mov
pusha
das
into
mov
sar
stc
idiv
test
cmc
int3
mov
xchg
mov
and
ficom
mov
clc
jp
sub
ins
push
dec
icebp
outs
lods
jbe
sub
into
jp
add
out
in
jns
scas
xchg
outs
pushf
xchg
push
cmps
loopne
inc
add
hlt
jl
pop
add
fs
jns
push
inc
ret
cmp
xchg
inc
mov
push
arpl
ret
rcl
add
push
xlat
out
(bad)
imul
hlt
not
mov
pop
add
adc
xchg
mov
sti
mov
je
gs
xor
sbb
(bad)
ins
pusha
cmp
or
rol
es
sub
sbb
inc
jg
mov
pop
inc
arpl
lahf
scas
(bad)
push
out
stos
xchg
stos
push
mov
icebp
adc
sahf
aaa
cmc
aas
push
add
cmp
push
mov
lahf
mov
ja
stos
ret
sub
xor
jl
stos
bound
arpl
sub
out
in
ins
retf
inc
lods
push
jo
adc
(bad)
out
cmp
in
jmp
cmps
mov
fisub
mov
test
mov
aad
mov
and
xor
lock
adc
cmc
xchg
sub
and
push
fwait
dec
xor
in
sbb
push
in
add
push
popa
inc
ja
mov
mov
jo
dec
push
jmp
ins
mov
pop
sbb
pop
add
pop
dec
imul
jmp
and
cmps
rcl
sbb
stc
hlt
adc
and
retf
sub
fimul
repnz
call
pop
ds
cmp
pop
mov
mov
dec
add
mov
std
aaa
repnz
add
shl
adc
enter
push
jecxz
sub
mov
mov
xchg
aam
jbe
mov
mov
popa
int
or
jb
and
daa
(bad)
cmps
aaa
mov
or
shl
mov
imul
js
add
(bad)
mov
inc
fimul
in
and
out
cmps
retf
fisttp
pusha
sub
jbe
mov
sub
gs
cmp
add
inc
ret
and
xchg
ret
pop
cmps
in
into
and
jmp
mov
xchg
push
mov
sbb
dec
(bad)
sbb
js
cwde
or
fprem
mov
cmp
sub
jne
sbb
push
mov
int
jmp
jmp
jmp
iret
mov
fdiv
sbb
popa
ja
hlt
inc
outs
xor
and
mov
int3
jg
add
push
jnp
pusha
dec
cs
xchg
jg
popf
inc
ins
pushf
pop
sbb
add
sbb
data16
gs
stos
sub
mov
xor
xchg
in
bound
xor
inc
adc
dec
jbe
outs
xor
add
pop
test
popf
sbb
mov
into
mov
pop
dec
xlat
dec
mov
test
out
bndstx
pop
popf
sti
and
pop
test
out
sub
sar
xchg
mov
push
dec
stos
cmp
cmps
outs
lds
rcl
imul
(bad)
pop
cmp
and
or
and
les
je
pop
sahf
xchg
ficom
dec
and
(bad)
lahf
call
repnz
addr16
push
pushf
push
push
mov
sub
ret
and
std
cmp
imul
enter
scas
and
pop
movs
mov
xor
mov
iret
push
inc
cdq
jbe
fst
mov
imul
push
fmul
xchg
in
xor
(bad)
mov
lods
pop
and
nop
scas
cmps
pop
inc
out
std
and
dec
mov
loope
sahf
popf
sub
(bad)
xchg
sbb
add
out
test
loop
push
rcl
dec
aad
cdq
sbb
xor
cmp
fwait
call
jp
mov
cmc
iret
push
push
shl
cdq
std
sub
pop
or
pop
ja
jge
cmp
outs
or
mov
stos
sub
mov
push
mov
mul
les
fld
dec
add
sbb
cmp
inc
(bad)
hlt
or
xchg
fwait
test
movs
sbb
daa
iret
(bad)
mov
sahf
pop
addr16
and
cmps
mov
mov
push
ror
test
pop
xor
pop
lods
(bad)
les
or
pop
dec
int
jbe
xor
sub
mov
push
(bad)
jge
and
call
cmp
and
fcomp
leave
ss
push
js
shl
push
add
repnz
popf
mov
dec
or
into
jl
out
pop
pop
add
fisubr
mov
fsubr
mul
fadd
fld1
sahf
std
pop
dec
jle
cmp
adc
inc
popf
xor
inc
aam
call
cmps
inc
xor
xor
stc
and
jbe
es
sar
mov
push
inc
sti
mov
sub
pop
adc
sahf
sar
out
cmps
xor
pop
sbb
shl
fcomp
imul
loopne
sub
sbb
or
nop
test
in
inc
mov
sbb
es
and
xor
jbe
sub
sbb
cld
jo
push
add
out
push
jecxz
fist
push
add
mov
xchg
test
sub
dec
imul
lahf
sbb
pop
outs
push
out
mov
lods
jno
sub
fmul
jno
call
xor
leave
test
fiadd
sub
push
xor
cmp
std
or
xchg
cld
ja
xchg
fs
loopne
sbb
movs
retf
int
pop
xchg
add
das
xor
loope
adc
add
cmp
xor
mov
mov
outs
imul
(bad)
repz
push
jp
push
push
sub
fst
sar
sub
(bad)
stc
int3
pop
add
inc
pusha
cwde
jns
sbb
jb
inc
outs
mov
mov
add
(bad)
ret
bound
je
add
stos
jns
adc
mov
inc
call
cmp
into
sub
clc
popf
mov
cmp
out
pushf
mov
stos
jbe
or
sub
stc
sbb
cmp
or
mov
inc
pop
and
mov
pushf
stos
hlt
aas
mov
std
(bad)
sbb
or
adc
pop
movs
cmp
in
jmp
mov
shl
lods
stos
retf
inc
sbb
f2xm1
cmp
out
dec
xchg
cs
mov
mov
mov
es
pop
adc
xchg
icebp
mov
xchg
mov
arpl
loope
and
push
push
ret
jl
or
adc
scas
mov
jmp
sub
sub
mov
iret
xor
pushf
hlt
cmps
pop
xchg
mov
adc
lods
pop
icebp
outs
mov
and
jge
jno
(bad)
and
cmps
push
push
dec
loope
xchg
xor
dec
jge
add
add
lds
jecxz
cmp
hlt
xor
retf
pushf
sbb
movs
aas
dec
lds
xchg
icebp
mov
dec
test
stc
gs
mov
xchg
out
ret
cmp
repz
dec
rcr
or
cdq
jp
dec
jge
outs
jno
or
dec
pop
or
imul
or
cdq
xor
adc
xchg
pop
xor
push
mov
pop
adc
fld
mov
rcl
xor
xor
push
lds
mov
into
mov
imul
inc
and
cmp
mov
jmp
or
mov
or
mov
jecxz
ja
dec
push
(bad)
xchg
xchg
aad
push
cs
(bad)
pop
add
xor
je
call
cmps
fisub
mov
mov
sbb
adc
push
cmp
lock
sti
mov
adc
jno
sub
sub
jle
ret
clc
sti
ds
sub
adc
(bad)
out
leave
aam
push
jmp
data16
push
mov
imul
sbb
test
inc
mov
or
dec
scas
jae
and
mov
sbb
push
mov
sbb
stc
popf
cs
jnp
in
fs
add
out
cmp
xchg
jl
cdq
xor
push
gs
dec
mov
retf
jge
hlt
pop
mov
jmp
(bad)
(bad)
sahf
mov
(bad)
fstp
push
or
loop
enter
add
dec
inc
dec
adc
test
movs
cdq
iret
mov
pop
rol
std
inc
out
je
inc
out
mov
enter
pop
dec
push
mov
push
rcl
dec
sti
mov
adc
imul
or
jb
aaa
mov
jns
xor
jecxz
jns
mov
mov
sub
jns
aad
pop
and
sbb
ja
dec
sbb
arpl
test
fdivr
call
dec
dec
sbb
in
fdiv
js
test
push
mov
jne
sub
cmp
xlat
dec
adc
outs
mov
in
shr
xor
or
out
mov
xor
sbb
mov
push
outs
and
push
pop
inc
jb
outs
shr
cmps
in
adc
adc
dec
out
jp
adc
in
rcr
push
lods
pop
data16
adc
mov
loopne
sbb
loop
mov
and
aas
scas
mov
jne
shr
jle
aas
stos
cmp
push
ins
scas
or
cld
jne
mov
lea
mov
cmp
push
pop
out
aaa
fcmove
add
adc
mov
sbb
dec
loopne
sar
(bad)
mov
jmp
fcmovnb
xlat
sub
fcomp
sbb
push
in
cmps
adc
mov
fld
or
xchg
fdivr
jg
push
pop
mov
cs
xor
jbe
sub
nop
sbb
cmp
push
fmul
jl
pop
fcom
mov
fist
sub
aam
lods
leave
push
sbb
outs
imul
jg
aas
(bad)
arpl
push
cs
bound
lods
mov
inc
adc
ds
and
dec
dec
sbb
pop
xchg
out
lods
xor
fmul
stos
cmp
jno
not
pop
dec
dec
js
aas
pop
fnstsw
mov
and
push
or
push
inc
sbb
inc
jne
test
jmp
js
xor
fadd
push
dec
mov
ins
jmp
cmp
iret
sqrtps
in
mov
xchg
shl
aaa
sbb
jnp
sahf
lods
test
jp
sar
imul
jl
(bad)
push
dec
pop
std
loopne
cs
shr
mov
movs
push
dec
dec
(bad)
pop
loope
data16
out
and
push
mov
inc
mov
fs
xchg
inc
(bad)
push
stos
cwde
cmp
mov
int
fld
loopne
lds
cs
push
xchg
repnz
push
ins
sub
xchg
mov
in
mov
cmc
inc
cmp
push
mov
jbe
sub
pop
cld
sub
or
dec
mov
or
xor
popf
dec
js
dec
lahf
inc
sbb
inc
movs
mov
scas
or
mov
(bad)
repnz
ja
sbb
push
sub
sub
movs
test
xlat
sbb
xchg
ror
rcr
jae
test
jb
out
mov
xchg
ja
jns
sbb
sbb
pop
dec
dec
test
in
jecxz
sbb
xor
idiv
icebp
xor
sub
mov
sbb
adc
xor
and
or
retf
in
and
inc
sub
jmp
inc
in
inc
lods
(bad)
fild
mov
cmps
mov
sub
(bad)
mov
adc
pusha
idiv
jo
std
mov
mov
das
std
loope
(bad)
loopne
cmp
sbb
div
sub
cmp
jns
mov
or
and
scas
es
lods
push
test
jns
push
daa
push
adc
shl
dec
push
push
mov
loopne
mov
mov
out
rcr
shl
call
push
mov
ficomp
add
xchg
pop
cmp
hlt
ja
dec
es
and
xchg
mov
cwde
rcr
sub
cwde
pop
mov
je
icebp
jmp
cmps
sbb
cmp
mov
rcr
sbb
outs
pusha
xchg
ret
pop
mov
inc
pusha
pop
pop
pop
stos
outs
xor
out
cmp
xchg
aas
mov
cli
in
fdiv
fldcw
call
ret
add
xchg
out
add
xchg
in
dec
mov
sub
cli
mov
enter
inc
dec
ror
inc
jno
(bad)
and
dec
ins
push
and
loop
data16
int
push
mov
movs
cmp
mov
xor
pop
xchg
and
daa
test
push
dec
pop
mov
cdq
and
xor
dec
dec
or
pop
mov
add
pop
inc
jle
ror
test
lea
jmp
call
outs
push
jle
fsubp
xchg
jno
mov
or
popa
push
lods
test
(bad)
xor
mov
sbb
xchg
jl
mov
mov
loop
mov
outs
cmp
loope
cmps
mov
outs
cmc
inc
mov
inc
scas
aaa
sahf
iret
cmp
inc
loop
imul
xor
jae
repnz
mov
pop
movs
mov
ret
sub
inc
dec
cmp
test
jae
loopne
lock
hlt
in
mov
fcmovu
xlat
ss
pop
or
test
mov
sub
and
mov
inc
lock
pop
jp
fnsave
xchg
mov
in
bound
add
or
vcvtps2pd
mov
xchg
mov
pushf
push
std
movups
cmp
or
aad
adc
xor
and
outs
ds
sbb
aas
and
pop
jp
cmps
sub
cmps
test
pop
adc
pop
cmp
xchg
or
ins
and
adc
sbb
das
cmp
sub
rdtscp
add
mov
jg
mov
test
cwde
mov
aas
push
push
cmc
ss
out
pop
aam
out
sub
imul
mov
mov
cmps
or
lock
aas
enter
shl
adc
cmp
lods
lea
push
sub
xor
xchg
shr
adc
xor
stc
and
adc
inc
jno
std
repnz
sbb
pusha
mov
loope
dec
cdq
push
push
push
jo
scas
aaa
popf
jmp
icebp
sub
lods
mov
and
xor
loopne
fs
shl
add
pop
dec
sbb
mov
or
retf
mov
scas
inc
xor
int3
mov
push
das
inc
retf
and
cmp
sti
sub
cmp
inc
push
imul
xchg
shl
adc
xor
mov
call
push
retf
arpl
add
jge
jp
or
xor
out
push
mov
pop
xchg
and
and
mov
inc
pop
mov
out
into
jmp
sub
fmul
mov
test
ret
fdivp
fiadd
imul
shl
mov
ins
cmp
sar
mov
jne
pop
mov
std
cmp
cwde
leave
out
sbb
out
into
jle
stc
out
scas
rcl
fdiv
pop
pop
pop
push
jne
or
ja
and
mov
fst
cmc
bound
daa
mov
imul
fwait
imul
pushf
pop
enter
(bad)
aam
loope
adc
aaa
dec
in
ret
daa
stc
cmps
stos
(bad)
and
dec
call
mov
mov
cmc
xchg
ja
(bad)
push
xchg
push
cmp
movs
leave
into
loopne
sbb
jmp
dec
push
and
fsqrt
mov
aad
jmp
or
data16
sub
call
aad
push
test
inc
scas
cmp
out
test
jp
gs
cs
xor
inc
data16
push
add
dec
xchg
mov
fstenv
dec
push
aam
cld
enter
xchg
ss
lds
xor
or
pop
jmp
scas
pop
sbb
push
mov
ret
pop
push
int
iret
inc
fist
or
or
cmp
ins
xchg
(bad)
sahf
lahf
lods
mov
test
inc
sbb
pop
hlt
mul
nop
add
(bad)
xor
cmps
into
test
imul
jae
push
xchg
fisttp
pop
fst
mov
mov
sub
out
cmps
pop
xchg
mov
adc
add
add
xor
xchg
cli
push
and
xor
(bad)
xchg
xor
jp
pop
lahf
(bad)
cld
xlat
test
ret
stos
mov
xchg
ret
dec
cmp
bound
add
cmp
enter
jecxz
call
cmp
add
mov
push
sub
xchg
ins
dec
inc
push
retf
jnp
mov
enter
fimul
pop
inc
les
pop
inc
or
adc
xchg
cmp
inc
push
jnp
in
mov
push
jl
jge
mov
and
int
mov
ret
mov
xor
mov
push
jecxz
(bad)
iret
jmp
pop
imul
outs
mov
cli
and
je
aad
lock
fs
addr16
ja
nop
sbb
inc
jp
xor
lahf
stos
(bad)
aam
in
adc
fdivr
push
ret
mov
or
shr
xchg
push
stos
pop
cmps
mov
sbb
cmp
in
pop
jno
das
movs
pop
rcl
jmp
popa
out
dec
push
pop
mov
jo
push
xchg
stos
imul
je
popa
neg
mov
call
inc
nop
fbld
(bad)
cmp
and
(bad)
mov
jmp
pop
in
out
ins
call
or
pop
popa
dec
cs
and
dec
sub
(bad)
xchg
add
or
lea
dec
sbb
jecxz
(bad)
mov
ror
cmp
sub
test
in
rcr
jg
lahf
xor
xor
jb
popf
ret
sub
(bad)
mov
dec
out
jg
dec
fstp
fild
mov
ja
add
stc
add
push
into
jns
jno
adc
mov
aad
jno
add
mov
and
enter
adc
jg
and
sahf
ja
or
into
lea
cmps
xchg
pop
xchg
cmp
cdq
or
out
sahf
in
inc
sbb
dec
movs
or
or
dec
lds
inc
es
push
pop
popa
add
add
dec
jno
fbstp
imul
les
fs
or
outs
ins
sub
mov
repz
loope
(bad)
int
pop
jne
in
cmps
cmp
ins
jb
cmp
and
shl
ins
xchg
jnp
sar
jmp
into
mov
mov
xchg
xor
cmc
jnp
cmp
xchg
push
jmp
nop
xor
(bad)
out
std
xor
div
jmp
loopne
or
movs
and
dec
and
iret
xor
ins
sbb
(bad)
shl
call
cmp
xor
jl
scas
and
xchg
cmp
(bad)
sahf
retf
jae
loope
adc
rcl
das
rol
dec
or
loop
(bad)
add
mov
ret
xchg
gs
xchg
mov
repnz
xchg
and
fdiv
pop
or
pusha
xor
pop
xor
popa
and
push
cmc
push
mov
daa
mov
mov
fstp
sbb
xchg
cmp
and
aaa
cld
xor
lea
add
sbb
mov
inc
popa
dec
test
push
jno
and
out
add
sub
stos
cmps
jns
mov
adc
push
lahf
mov
icebp
push
or
xor
test
pop
mov
jmp
jmp
adc
or
xor
sar
add
or
lds
mov
aaa
xor
xor
shl
pop
pop
sahf
mov
pop
jne
call
push
xchg
sub
adc
sub
sar
sub
push
ins
aaa
inc
jo
retf
add
fild
cmps
out
mov
imul
dec
into
mov
in
adc
dec
je
or
pop
cmp
pusha
cmp
push
mov
lods
pop
push
sahf
dec
mov
mov
and
inc
sar
mov
sub
xchg
es
shr
and
sub
inc
and
adc
xor
dec
mov
pop
retf
je
dec
retf
fsub
pop
sub
inc
ret
cli
test
jle
loope
retf
jae
mov
inc
ror
inc
out
ret
inc
(bad)
imul
push
lods
pop
enter
xchg
cmc
inc
ret
ja
sahf
push
mov
cli
call
sahf
mov
inc
xchg
mov
fwait
cmp
adc
ds
in
xor
push
movs
sbb
mov
add
outs
mov
fsubr
jg
dec
xchg
mov
or
mov
adc
sub
jb
xchg
xchg
mov
sbb
mov
imul
aas
dec
xchg
out
or
cmp
mov
sub
pop
push
mov
cdq
adc
push
pop
push
mov
dec
loopne
xchg
adc
cmps
mov
add
pop
outs
adc
rcr
fsubr
call
(bad)
rep
adc
shr
push
lahf
(bad)
xchg
pop
lea
mov
adc
mov
cmps
out
mov
jo
fst
test
(bad)
(bad)
push
xor
scas
xchg
adc
aad
mov
xchg
adc
adc
sbb
(bad)
add
xor
inc
cmp
jne
add
cli
data16
ret
cmp
icebp
daa
push
cmp
inc
dec
inc
out
jno
or
sbb
pop
mov
sbb
popf
jle
mov
cmp
mov
fbstp
adc
mov
and
mov
(bad)
jp
clc
mov
adc
cmp
out
int3
popf
push
or
in
xchg
scas
dec
js
cmc
adc
jl
inc
xchg
clc
imul
test
shr
or
adc
push
push
cmp
retf
push
mov
pop
xor
dec
popa
push
int
rcr
xor
jp
pop
call
jo
movs
imul
imul
adc
xchg
mov
mov
mov
out
jmp
inc
fnstcw
sub
push
loop
dec
jmp
jae
pop
jb
test
jo
arpl
cmp
fild
sub
inc
push
imul
vpackssdw
dec
inc
mov
pop
jnp
add
clc
dec
jmp
or
fst
cld
jmp
jo
cld
test
aad
mov
mov
mov
int
shl
arpl
add
pop
dec
cmp
add
cmps
dec
out
mov
in
fwait
(bad)
pop
clc
sub
sar
mov
mov
dec
or
in
add
stos
sbb
ja
and
sub
(bad)
jnp
jns
dec
retf
fwait
jg
cmp
nop
rcr
rcl
sub
cdq
into
lahf
aaa
mov
dec
rcl
sbb
mov
push
sub
out
(bad)
dec
iret
cmp
sbb
pop
dec
bound
push
int
dec
enter
pop
push
xchg
and
inc
sbb
push
in
mov
cmp
(bad)
in
sbb
stc
pop
popf
cmps
xor
(bad)
sahf
xchg
and
or
fld
rcl
inc
sub
dec
cmp
sbb
shl
sub
aam
xor
xlat
popf
mov
jb
mov
or
mov
sar
mov
adc
inc
mov
jo
test
popf
shl
bound
mov
out
adc
dec
lahf
push
frstor
test
add
in
gs
jp
shl
mov
dec
inc
pop
(bad)
sub
push
mov
xchg
dec
test
inc
leave
cmc
ins
fwait
push
(bad)
lock
pop
jne
mov
sbb
(bad)
mov
aas
and
(bad)
out
push
xchg
xor
sbb
push
or
sub
sub
pop
mov
rcr
push
pop
and
mov
fmul
and
mov
(bad)
loope
inc
jo
xlat
fcmovnbe
fsubp
sar
adc
mov
fsubr
add
cli
aaa
sbb
fnstenv
shr
and
add
sti
das
icebp
ds
cmps
stos
sbb
stos
xchg
daa
sti
pop
fistp
popf
sub
mov
jb
sbb
or
mov
je
jle
lahf
sub
ss
stos
and
fadd
sbb
pop
inc
mov
inc
in
dec
out
sub
out
test
lea
jmp
mov
pop
ror
mov
aad
hlt
sub
jecxz
repz
es
imul
inc
xor
cmps
cmp
push
lea
je
popa
js
test
push
pop
or
ins
mov
sub
fs
sub
adc
in
mov
stos
push
mov
fidivr
outs
(bad)
push
enter
and
cwde
sub
cmp
mov
ja
mov
enter
cld
inc
cmp
(bad)
sub
data16
ds
out
xchg
xchg
jne
cmp
lds
loopne
push
das
stc
gs
aad
pop
addr16
nop
jg
fs
ror
imul
push
movs
popf
in
shl
adc
dec
out
add
ror
fwait
adc
mov
mov
ror
or
xor
xchg
pop
mov
and
js
mov
cmp
and
inc
arpl
(bad)
jle
ret
push
(bad)
and
popf
dec
pop
clc
(bad)
dec
push
cmp
rcl
xor
fprem1
bound
mov
int
xchg
push
sbb
daa
mov
lods
xlat
add
gs
mov
adc
sbb
push
pusha
ins
jmp
jge
outs
xor
(bad)
enter
scas
outs
addr16
mov
push
cli
call
sub
lods
pusha
dec
xchg
jno
scas
cli
sbb
cmp
mov
shr
cmp
sbb
test
js
lods
mov
shl
xchg
jb
pushf
into
adc
pop
test
pop
xor
mov
jecxz
cmp
into
and
or
bound
jbe
mov
mov
ins
xor
dec
clc
fxch
push
fisttp
cmps
sti
inc
or
and
mov
mov
inc
repnz
mov
aaa
loopne
movs
movs
ret
dec
call
cdq
dec
jge
mov
cli
push
mov
add
push
push
shl
inc
cmp
lock
jmp
shl
sbb
addr16
push
jnp
lods
inc
inc
(bad)
fisubr
cli
mov
shl
repz
lds
xor
add
inc
jmp
popf
mov
mov
and
or
fwait
stos
and
ror
adc
repz
adc
or
loop
xor
imul
jne
jmp
ins
adc
push
stc
ret
jae
push
xlat
cmp
adc
jae
(bad)
xchg
(bad)
sbb
and
test
sbb
sub
push
mov
imul
lds
jge
out
dec
pop
test
add
arpl
sbb
jo
xchg
adc
jnp
clc
sub
adc
fmul
stos
xor
arpl
clc
fisttp
inc
inc
cmp
push
push
sub
retf
(bad)
ins
jnp
das
sub
in
(bad)
test
pop
mov
xchg
pusha
loop
icebp
ja
add
mov
xor
dec
stos
dec
loope
cmp
test
and
cmp
popf
hlt
sub
adc
cmps
dec
jnp
mov
inc
or
add
int3
fist
sub
inc
add
es
cdq
fwait
out
lds
mov
(bad)
pusha
xchg
out
adc
popa
dec
dec
xor
fisub
neg
cld
jmp
into
iret
scas
push
cmp
aam
pop
pop
add
shl
jle
xchg
in
pop
sub
xchg
mov
cld
add
sbb
xor
add
pop
jmp
rcr
mov
out
scas
ja
jnp
int
mov
jns
jbe
xchg
fs
ins
mov
ret
inc
pop
sbb
dec
das
int3
jae
jge
mov
jns
repz
imul
push
icebp
js
xor
inc
push
mov
mov
inc
test
mov
push
popa
and
adc
adc
xlat
push
push
stos
inc
add
aas
xor
adc
mov
test
in
in
mov
test
push
outs
cmps
adc
add
xchg
or
sub
jmp
xlat
or
imul
loopne
push
fadd
ss
mov
push
jmp
neg
sahf
push
lea
ficom
aam
sbb
add
sub
sub
in
leave
mov
mov
dec
das
aam
fadd
xlat
leave
pop
call
popf
pop
(bad)
mul
mov
or
or
retf
nop
cdq
inc
dec
cmp
xchg
jp
hlt
int
or
fbstp
aaa
inc
xchg
test
js
mov
mov
mov
or
mov
pop
and
test
xchg
cmovl
dec
push
add
imul
js
stos
into
jg
test
imul
(bad)
xor
stos
pop
pop
cmp
dec
or
(bad)
xchg
jg
jae
(bad)
xchg
aas
cwde
jns
inc
cmp
arpl
sbb
shl
enter
arpl
fdivr
mov
sbb
xchg
aam
xchg
das
and
mov
bound
ja
cmp
mov
push
(bad)
cwde
fisttp
adc
mov
test
mov
jge
dec
sbb
cmp
push
pop
sub
or
or
xchg
mov
call
inc
inc
ja
ja
add
movs
ret
out
out
xor
add
(bad)
sbb
add
dec
mov
xchg
outs
xor
dec
test
pop
arpl
mov
add
inc
inc
idiv
jno
call
xchg
xor
xlat
jno
in
push
out
sub
or
inc
(bad)
not
pop
es
mov
mov
pop
mov
adc
in
fcmovnu
and
clc
push
or
aad
fadd
psadbw
loopne
pop
add
rcr
cmp
or
lahf
jp
push
shl
xchg
inc
int3
sub
repnz
adc
mov
or
lea
xor
mov
and
lea
push
mov
cdq
cmp
pop
cmp
lahf
mov
sub
mov
das
lea
outs
loope
repz
test
leave
lock
aas
or
push
inc
iret
xor
cmc
or
int
xchg
dec
lods
add
int3
pop
aaa
add
xor
pop
into
adc
add
or
pop
mov
nop
dec
retf
inc
and
(bad)
lock
nop
repnz
dec
ret
addr16
out
sbb
sbb
mov
add
push
inc
bound
mov
pop
jnp
xor
dec
lds
mov
mov
cmp
jg
jl
mov
rol
cdq
or
cmp
in
in
push
test
icebp
test
aaa
sub
or
adc
icebp
int
xor
xchg
pop
mov
mov
aad
popf
mov
imul
lds
movs
push
(bad)
sbb
addr16
ins
enter
dec
cmp
mov
ret
sub
jb
jp
fist
and
loopne
es
loope
stos
or
daa
xor
adc
pusha
(bad)
out
pop
mov
enter
push
shr
push
and
pop
push
lock
inc
rol
push
push
or
xchg
jg
imul
pop
fistp
cmp
mov
fdiv
sub
lock
outs
aaa
adc
dec
jmp
mov
stos
dec
push
les
cwde
mov
sub
xor
adc
sbb
xchg
fsubr
push
ins
call
mov
scas
push
pop
ficomp
cmp
pop
ja
mov
gs
mov
jno
ds
inc
sbb
xchg
jle
stos
pop
ja
popf
aad
(bad)
and
cdq
adc
jmp
into
test
inc
jecxz
mov
sub
or
mov
(bad)
sbb
lock
popw
mov
jl
adc
xchg
fdiv
jge
mov
adc
pop
addr16
cdq
mov
out
pop
(bad)
ret
popf
add
or
sbb
in
jge
les
sbb
xor
cs
leave
(bad)
sub
jno
popf
xor
cmps
inc
ins
shl
sub
nop
mov
pop
fcmovbe
dec
sar
lods
add
cmps
fild
fisttp
add
rcl
je
add
sub
out
sbb
outs
xchg
or
or
xchg
lods
inc
xor
clc
ret
dec
jo
pop
hlt
jno
push
mov
inc
nop
push
ficomp
ins
inc
retf
or
push
repnz
pextrw
cmp
std
shr
xchg
dec
leave
vfrczsd
(bad)
pop
sbb
cli
in
aas
push
movs
(bad)
and
nop
mov
cmps
cmp
push
and
out
mov
sahf
dec
sbb
pop
fstp
adc
repz
mov
mov
pop
(bad)
stos
in
push
(bad)
and
mov
in
aaa
adc
aas
imul
hlt
aam
(bad)
js
jne
xchg
push
popa
push
inc
into
jl
(bad)
sahf
dec
test
loop
(bad)
add
cmp
xor
dec
sub
xlat
outs
stos
and
xchg
pushf
aam
rcl
rol
push
jns
cmp
jns
ret
jo
push
ds
rol
pop
cmovs
or
mov
in
outs
test
cmp
retf
js
mov
inc
in
inc
mov
push
sbb
movs
sub
aad
xchg
div
mov
iret
cwde
add
sbb
test
cmp
mov
jg
int
mov
and
jne
jo
not
cmp
dec
lods
scas
jae
inc
les
fmul
out
mov
repnz
popf
cmp
rol
or
call
or
fwait
call
into
cmp
out
cmp
stos
call
adc
jp
data16
adc
and
loope
repnz
ror
pop
or
mov
and
or
add
aam
fild
dec
or
in
xor
out
lahf
pop
ins
mov
int
shr
inc
lahf
lahf
cmp
sbb
and
adc
jge
and
or
pop
pop
sti
and
or
daa
stos
inc
mov
addr16
xchg
or
jo
sub
pop
outs
dec
leave
xor
mov
mov
push
ror
pop
adc
and
jb
xchg
pop
int3
aaa
xor
out
jecxz
(bad)
stos
ins
pop
jl
add
dec
scas
stos
inc
mov
movs
call
pushf
push
lds
in
lods
jb
call
into
xchg
sub
jle
bound
mov
out
mov
adc
xchg
mov
or
cmc
mov
rcl
leave
adc
imul
nop
xchg
push
scas
inc
les
xchg
pop
ficom
lods
rcl
xchg
xlat
xchg
jbe
mov
and
setnp
inc
or
mov
mov
outs
push
pop
jmp
sbb
xchg
cli
sub
mov
adc
sar
out
jecxz
push
jge
pop
imul
or
lods
lock
dec
dec
xor
in
push
(bad)
xlat
mov
dec
jg
test
pop
jecxz
dec
sub
cmp
mov
cmp
lea
adc
scas
mov
or
imul
pop
test
lods
fld
fs
aam
arpl
add
fs
sbb
inc
cs
cmp
push
daa
and
mov
call
test
std
jmp
push
pushf
out
int3
popfw
dec
jmp
in
mov
mov
out
inc
call
test
(bad)
jns
movs
out
in
pop
pop
xchg
adc
cmp
sbb
cmp
out
xlat
jmp
retf
add
enter
imul
sub
(bad)
nop
or
sub
hlt
mov
xchg
jmp
dec
push
popa
push
inc
jns
jl
mov
fwait
push
in
jmp
mov
das
mov
movs
pop
cmp
fwait
xor
adc
(bad)
repz
(bad)
cld
cmp
mov
leave
shl
mov
push
push
mov
imul
jecxz
outs
jns
es
outs
inc
fidivr
mov
ds
or
jmp
dec
mov
jg
repz
popa
test
jle
sbb
fcomp
and
in
arpl
fwait
jo
pop
lods
shl
push
fwait
in
rcl
mov
clc
jb
idiv
rol
sbb
push
data16
and
lea
retf
inc
sar
push
pop
jp
mov
xchg
test
ja
cmp
leave
sbb
ffreep
test
and
jmp
push
loop
outs
into
mov
es
push
xor
xor
adc
pop
hlt
leave
pop
pop
in
retf
out
das
xor
xchg
xor
mov
dec
mov
pop
sub
sahf
sbb
dec
push
jle
aaa
sub
xor
pop
pop
js
in
pop
push
test
cli
in
jbe
(bad)
or
mov
xchg
jno
jp
push
pop
bound
shl
dec
out
cmp
mov
cs
xchg
jp
pusha
cmc
cmp
pop
js
or
inc
and
inc
and
das
std
adc
jno
sub
cmps
add
(bad)
pop
mov
add
jnp
cmps
inc
push
arpl
leave
jne
cli
les
pop
shl
push
jp
das
shl
fmulp
pop
jnp
cmp
mov
outs
repnz
dec
and
aaa
popf
pop
out
jle
ja
in
xor
pop
aad
rol
mov
icebp
xchg
das
icebp
popa
loope
cmc
inc
(bad)
push
xchg
add
dec
test
repz
fisubr
jg
jge
mov
sahf
jns
fwait
adc
mov
movs
sbb
sbb
fst
jnp
add
sub
and
inc
and
outs
jns
pop
mov
adc
xor
ja
sbb
mov
push
imul
pop
call
mov
jb
fisttp
add
aad
push
xlat
out
data16
add
mov
cwde
xor
mov
popf
dec
ins
mov
test
fistp
popa
fcmovb
mov
sbb
aam
rol
sbb
ds
and
mov
outs
mov
cdq
or
and
aad
jp
out
xchg
mov
in
sahf
cmp
xchg
shl
ret
add
jg
adc
clc
cwde
jle
or
cmc
popf
mov
dec
loopne
imul
jge
xchg
out
sbb
inc
loop
push
(bad)
jmp
or
pop
mov
dec
add
mov
int
sti
inc
cmp
cmp
cmp
nop
xlat
push
jmp
ror
mov
jbe
xor
in
add
iret
ds
int
push
push
call
and
fwait
mov
jmp
bnd
iret
addr16
cwde
sbb
pop
sub
mov
icebp
push
outs
lods
jo
das
mov
lods
sbb
fs
imul
sti
pop
xchg
int
ficomp
rcpps
lods
jbe
mov
out
sub
push
test
pop
pop
mov
retf
gs
aam
inc
xchg
add
or
cmp
sar
mov
rcl
mov
shl
pop
inc
(bad)
fstp
dec
ins
pop
mov
dec
ins
outs
loope
imul
aaa
pop
nop
mov
mov
retf
les
loop
fnstcw
jbe
dec
sub
fild
sbb
retf
cmps
inc
shl
mov
outs
xor
leave
push
icebp
scas
inc
pop
mov
xor
push
outs
movs
xchg
int
sub
std
xchg
dec
dec
test
pop
sbb
inc
cld
jge
adc
stos
rol
pop
jmp
jge
or
push
or
repnz
(bad)
(bad)
inc
xor
cdq
mov
pop
cmp
les
sbb
pop
sbb
leave
and
aaa
mov
mov
dec
jmp
fild
les
inc
inc
lahf
mov
stos
mov
movs
cmp
xor
or
xchg
pop
push
adc
imul
nop
ss
fld
stc
mov
mov
sbb
fcom
das
xor
loope
mov
in
lds
test
test
in
cmps
pop
inc
push
rcl
xchg
movs
push
shl
ds
(bad)
mov
mov
ja
into
and
or
enter
pop
xor
mov
movs
cmp
push
xchg
and
cwde
cmp
mov
cmp
in
xor
xchg
int3
leave
rcr
adc
mov
call
mov
mov
nop
inc
xor
mov
inc
jp
ins
jno
cmps
inc
ret
adc
bndstx
or
aaa
add
mov
in
sbb
mov
shl
xor
ss
sub
xchg
push
adc
retf
jns
arpl
push
rcl
pop
jbe
sub
data16
push
jb
jmp
inc
mov
dec
icebp
lea
ss
popa
add
out
shl
aad
push
push
scas
xchg
ins
or
or
test
mov
jns
stos
add
cmp
jl
mov
or
not
dec
idiv
std
repnz
fild
jge
shr
or
dec
push
mov
sub
les
add
mov
popf
sahf
loopne
data16
or
ss
mov
add
inc
inc
(bad)
lea
jbe
inc
xlat
dec
sub
xchg
(bad)
and
mov
xchg
push
dec
jg
adc
xor
mov
(bad)
xchg
push
mov
push
repz
test
dec
imul
mov
test
lea
gs
mov
movs
js
jo
mov
into
(bad)
xor
xlat
pop
adc
ds
fistp
pop
scas
gs
in
xchg
xor
mov
sbb
jns
dec
or
mov
mov
iret
or
shr
mov
icebp
xchg
sub
mov
sbb
sub
iret
(bad)
(bad)
fisttp
add
dec
push
mov
fldcw
aas
sub
sbb
retf
out
ret
push
outs
popf
icebp
scas
int
(bad)
lods
rcr
out
call
lods
jns
sbb
rcr
mov
mov
sbb
mov
loope
sbb
jae
movs
sbb
repnz
or
loopne
in
clc
inc
mov
mov
std
cmp
inc
inc
fisubr
add
leave
(bad)
jns
neg
pop
dec
sub
nop
push
xor
hlt
mov
rcr
mov
(bad)
jmp
mov
xchg
call
ret
xchg
cmp
adc
and
adc
data16
push
or
call
xor
repz
daa
cmp
add
mov
jmp
jg
pop
mov
test
pop
pop
mov
xor
test
cmp
mov
test
add
pop
icebp
and
pop
dec
dec
inc
dec
xchg
fwait
in
add
mov
add
or
(bad)
pop
push
xchg
xchg
lds
or
or
imul
mul
dec
test
repnz
cwde
hlt
ds
in
mov
cmp
mov
push
stos
in
cmc
loope
js
jl
call
in
fsubrp
pop
pop
ffreep
sar
outs
mov
mov
cwde
push
add
push
aam
(bad)
ins
pop
cs
add
in
cs
popa
push
and
imul
sub
jmp
lods
scas
loop
hlt
dec
cmps
dec
mov
push
and
jg
lahf
jmp
(bad)
mov
jo
inc
jns
xor
jecxz
adc
jb
inc
jns
cmp
ds
out
mov
xor
push
pop
xchg
mov
mov
repz
dec
in
sub
dec
inc
aad
xchg
sub
(bad)
out
cmp
inc
adc
inc
or
push
mov
sti
dec
jne
(bad)
xor
and
ret
ds
sbb
pop
cdq
mov
leave
xchg
sahf
das
mov
ret
xchg
sbb
sub
mov
je
cmp
inc
jnp
cdq
and
mov
push
and
xchg
jmp
push
or
shr
or
jnp
add
cmp
int3
xchg
push
inc
xchg
push
adc
ja
pop
pop
mov
and
mov
add
cmp
add
and
call
call
dec
jne
cli
pop
pop
push
xlat
out
mov
cdq
rol
sahf
inc
cmc
mov
retf
add
into
and
dec
loop
jae
xor
jg
cmp
cs
and
mov
xchg
or
in
sub
sub
mov
test
lahf
aad
sbb
or
cld
add
adc
outs
imul
sbb
mov
test
adc
or
int
(bad)
mov
xor
jnp
mov
and
xlat
cs
pop
dec
and
stos
xchg
js
pop
fyl2xp1
and
sub
inc
lods
icebp
add
loop
daa
push
add
xchg
xor
mov
jl
pop
fwait
or
jecxz
jg
push
addr16
mov
fisubr
push
and
inc
ins
adc
idiv
lods
jns
cmp
test
outs
mov
push
or
dec
mov
dec
mov
jnp
add
jge
mul
inc
mov
loope
(bad)
jns
push
mov
dec
stos
xlat
enter
pushf
adc
xchg
repz
mov
push
enter
cmps
fst
into
jae
(bad)
div
cmp
xchg
and
push
jnp
fwait
nop
gs
and
inc
pop
jp
cs
push
dec
dec
gs
sbb
inc
call
int
lods
test
out
addr16
push
shr
sbb
ret
faddp
inc
jp
sbb
dec
mov
bound
fstp
je
or
xor
hlt
pop
push
pop
mov
inc
cwde
sub
xor
sub
icebp
mov
adc
sbb
outs
pop
les
out
fld
push
(bad)
jnp
cwde
daa
sti
in
gs
retf
test
adc
popa
cwde
mov
movs
mov
mov
mov
inc
mov
arpl
dec
retf
int
xor
aas
add
adc
shr
mov
movs
and
add
daa
je
lds
xor
inc
push
pop
outs
clc
push
clc
xchg
test
adc
rol
adc
ds
xchg
shl
(bad)
(bad)
xor
movs
int3
xor
cmps
in
jo
mov
sti
push
dec
lea
jo
pop
jns
pop
movs
jo
data16
mov
pop
cld
hlt
loope
xchg
xchg
pushf
into
retf
xchg
loope
push
mov
data16
push
mul
retf
push
pop
mov
add
imul
in
test
fdivp
das
pop
stos
std
push
ss
fwait
or
aam
sub
jle
cs
data16
dec
add
dec
xchg
push
push
push
jb
push
adc
add
jne
loope
xlat
imul
loope
xor
pop
pop
outs
sub
mov
xor
lea
sbb
xlat
sar
sbb
jp
cmp
(bad)
rcr
fdiv
(bad)
mov
ficom
lar
mov
gs
cmps
iret
inc
stc
dec
retf
je
push
xor
mov
dec
xchg
retf
ins
and
dec
dec
mov
and
jnp
pop
push
hlt
call
mov
aam
or
mov
mov
mov
or
pop
sahf
daa
xchg
xor
push
push
rol
and
jmp
fldenv
arpl
jae
pop
inc
adc
(bad)
lahf
rol
ror
and
leave
test
jmp
mov
ins
pushf
inc
idiv
fwait
xchg
mov
(bad)
data16
xchg
jl
repnz
sub
mov
leave
aaa
mov
stos
adc
pushf
pop
sbb
fadd
mov
fldenv
out
xor
xchg
mov
call
test
ins
inc
dec
dec
sub
pop
int
dec
pop
sub
cmps
fist
xor
jmp
add
adc
inc
pop
popa
retf
aam
out
jmp
aas
cmp
mov
or
cmp
push
mov
or
mov
jmp
and
inc
lea
mov
daa
mov
loopne
mov
hlt
xor
adc
and
leave
push
icebp
sub
addr16
cmp
or
xchg
cmps
adc
dec
mov
xor
addr16
aaa
cli
test
mov
adc
outs
cmps
mov
xor
aad
jnp
jp
xchg
inc
cmp
xor
inc
pop
and
out
aad
stos
push
aam
jle
pop
rcr
aaa
add
fs
in
and
cmc
adc
std
add
mov
(bad)
sub
mov
push
dec
aam
mov
add
retf
mov
gs
mov
push
mov
lahf
pop
aad
(bad)
jp
add
xchg
xchg
xchg
(bad)
out
pop
stc
bound
ins
sbb
mov
push
pop
jle
push
jns
ja
and
push
cmp
mov
xchg
xor
and
xchg
lea
dec
out
xor
pop
and
and
sbb
es
loopne
retf
jo
adc
dec
xchg
jne
cmp
pusha
or
mov
or
lahf
pop
je
cdq
or
xchg
outs
cwde
movs
mov
jb
in
adc
sub
xchg
(bad)
cmp
xor
jbe
cmps
repnz
xchg
(bad)
sbb
pop
jae
dec
(bad)
std
ss
add
icebp
xor
(bad)
xchg
jle
stos
jl
mov
sub
std
cmp
push
sbb
popa
je
lods
mov
scas
add
aad
rcr
enter
shl
mov
mov
add
das
mov
cld
inc
sbb
scas
and
sbb
je
rol
xchg
mov
push
or
leave
in
jl
test
sbb
mov
or
push
push
icebp
add
mov
add
(bad)
mov
ja
sbb
mov
aaa
pusha
push
mov
jb
cmp
in
xor
das
add
movs
leave
std
int
mov
popa
aam
xchg
cwde
fidiv
outs
ror
mov
pusha
mov
pop
into
push
dec
xchg
out
loope
cmp
xor
test
adc
ss
xor
call
arpl
js
xchg
add
inc
out
adc
call
(bad)
loopne
cdq
(bad)
mov
fwait
or
(bad)
out
jns
push
in
pop
xor
mov
stc
jmp
(bad)
lock
mov
jo
or
xchg
test
add
adc
jno
mov
pop
mov
sub
cs
sbb
daa
popf
sahf
jno
push
cmps
dec
xchg
lods
lock
pop
mov
jne
push
fild
jmp
rol
sbb
xchg
mov
xor
sbb
lea
xchg
lea
imul
pop
jg
in
call
into
adc
test
es
mov
das
ret
mov
daa
mov
sub
mov
jle
dec
pop
dec
in
push
mov
push
rcl
jl
cmps
scas
ins
add
add
retf
clc
loop
inc
mov
cmp
add
jns
(bad)
fmul
lods
nop
(bad)
xor
jmp
leave
mov
pop
mov
dec
scas
cmc
add
sti
xor
fimul
push
nop
jmp
leave
and
and
pop
jmp
out
inc
cld
out
idiv
stc
cmp
or
dec
in
(bad)
fclex
or
or
loopne
push
lahf
push
add
jmp
test
jge
retf
xchg
lods
jl
aam
das
int3
sbb
sub
mov
xor
scas
cmp
or
xlat
push
cld
aad
jge
movs
rol
call
jno
pop
cwde
mov
ss
pop
lock
adc
xchg
ds
addr16
xchg
data16
hlt
or
popa
jp
pop
int
jg
imul
dec
shl
add
xchg
call
add
pop
stos
or
popf
and
mov
mov
lea
mov
clc
pop
and
cmp
imul
sbb
fld
inc
pop
mov
mov
sbb
ds
ds
pusha
sub
jae
pop
cmps
ins
xor
pop
fcmovne
rcr
into
push
(bad)
ins
mov
cmp
ins
cmp
xor
mov
dec
inc
pop
mov
hlt
mov
jne
inc
xchg
jne
(bad)
lahf
data16
and
fptan
and
sahf
in
xlat
(bad)
add
push
inc
clc
shr
jnp
idiv
pop
adc
enter
fstp
mov
pmaxub
sbb
mov
cmp
xor
push
arpl
stc
call
xchg
mov
or
add
xor
adc
pop
rcr
or
imul
sub
cmc
mov
inc
dec
retf
inc
(bad)
xor
outs
add
jecxz
pop
fistp
icebp
sbb
mov
gs
pop
lahf
cmp
cmp
jl
fist
mov
mov
xchg
cmps
idiv
sbb
mov
ret
imul
sar
jno
mov
iret
pop
test
leave
add
xlat
add
bound
xor
mov
xchg
scas
push
call
or
mov
popf
jne
loop
retf
test
cmps
cmp
or
dec
fiadd
in
loope
or
repz
mov
popf
aad
add
jbe
add
add
cmc
ja
xor
dec
pop
sub
mov
ins
shl
cld
out
push
ja
mov
stos
pop
sbb
sub
add
aad
outs
mov
test
pop
mov
jns
push
pusha
xchg
ret
jo
retf
(bad)
xchg
std
(bad)
mov
int3
cmp
xchg
pop
cmps
inc
fidivr
sti
jle
aam
xor
dec
dec
pop
fld
mov
jl
cmp
in
xor
ins
mov
(bad)
in
mov
jae
(bad)
sub
out
fwait
dec
call
adc
mov
dec
mov
outs
out
jle
mov
jge
jb
adc
gs
mov
arpl
mov
repnz
(bad)
repnz
mov
dec
lock
adc
out
data16
cmp
aaa
(bad)
mov
mov
idiv
dec
push
leave
jle
xlat
sti
pop
lods
and
push
xchg
xor
jl
enter
(bad)
mov
in
outs
push
cwde
outs
outs
jbe
pop
retf
popf
or
je
ins
scas
cli
adc
adc
cwde
sbb
cmc
retf
add
lea
int
xchg
leave
mov
(bad)
jmp
retf
test
dec
mov
add
inc
in
mov
mov
outs
aas
cli
out
or
aam
in
or
test
pop
data16
popf
jge
xchg
cli
mov
xchg
int
int3
push
dec
push
fcom
sbb
sbb
mov
cmp
mov
clc
test
jno
rcr
je
ds
lock
dec
push
cs
adc
mov
adc
cld
shl
cmp
mov
pop
and
push
jmp
push
sbb
scas
xchg
loope
add
xor
sbb
mov
jae
mov
iret
pusha
pop
and
push
pop
xchg
cmp
jae
popa
mov
and
ret
test
in
sub
cs
blcfill
stos
mov
push
cmp
inc
add
mov
cmp
jl
push
leave
jno
mov
xor
scas
cmp
push
retf
jmp
xchg
ja
aam
inc
lods
stos
call
adc
mov
in
out
push
inc
adc
xchg
xor
data16
mov
cli
mov
in
adc
mov
mov
ss
jne
add
pop
fsubr
fwait
xor
rcr
fiadd
push
sbb
(bad)
in
push
jg
sub
jg
pop
xor
inc
xchg
in
adc
sbb
idiv
inc
inc
push
std
inc
fadd
jns
mov
pop
push
(bad)
ins
mov
(bad)
sbb
and
dec
pop
push
mov
aaa
dec
fist
dec
dec
push
xchg
mov
js
imul
pop
lods
mov
push
mov
xor
inc
(bad)
xor
mov
jmp
js
jbe
jmp
or
pop
repnz
xor
loope
daa
pop
frstor
fsub
adc
mov
ds
and
in
cwde
into
or
or
mov
imul
jbe
ror
(bad)
jnp
xchg
jl
ins
or
aas
fist
inc
retf
jg
jmp
test
(bad)
inc
(bad)
push
in
cld
push
cli
inc
loop
mov
fnstenv
loope
mov
ret
sbb
fdiv
enter
cs
push
call
ficomp
fs
jae
iret
jle
ss
(bad)
sbb
mov
pop
fcomp
les
outs
not
out
mov
mov
xchg
jnp
hlt
cmp
sub
imul
push
push
bound
mov
mov
loopne
test
in
xor
mov
aaa
and
inc
xor
xor
pop
mov
out
iret
cmps
shl
lock
js
pop
movs
inc
call
xor
addr16
(bad)
(bad)
jns
retf
xor
pop
inc
mov
pop
or
ins
(bad)
stc
jno
mov
jge
shr
push
or
dec
cmps
sbb
mov
loope
shl
fwait
push
fidiv
xor
sbb
aaa
(bad)
cmps
push
loope
retf
cmp
cli
sbb
scas
(bad)
iret
fs
mov
cmp
add
push
xchg
jns
adc
add
or
sar
mov
daa
out
loopne
xchg
mov
rcl
je
pop
pop
sub
dec
sbb
mov
mov
xor
mov
fild
jmp
or
cmp
mul
adc
cwde
in
inc
(bad)
(bad)
imul
and
shl
mov
out
cmc
xchg
out
mov
xchg
add
clc
(bad)
js
jmp
adc
mov
mov
inc
les
sub
pop
shr
jns
repnz
jecxz
lods
arpl
sbb
rcr
inc
pop
fisub
push
dec
(bad)
dec
clc
pushf
iret
int
fwait
stos
(bad)
sbb
xor
add
add
and
mov
jmp
call
popf
inc
add
mov
adc
ins
xor
cmp
int3
xchg
js
movs
das
adc
mov
pop
div
ret
mov
cmp
sbb
push
mov
pop
cmc
sub
rol
addr16
(bad)
cmp
mov
xchg
(bad)
xchg
jecxz
dec
das
mov
jge
and
mov
push
jno
movs
nop
and
rcr
dec
cmp
and
sub
div
push
stc
and
sbb
sub
cmp
loope
call
inc
inc
xor
adc
ja
pop
pop
enter
in
iret
das
pop
ja
jne
stc
sbb
cli
xchg
jmp
and
jno
jns
sub
push
xor
jo
(bad)
sbb
pop
imul
add
div
bound
inc
in
gs
sbb
mov
clc
cs
mov
inc
cwde
fcom
push
pusha
in
jns
xor
in
into
cld
sar
inc
push
sub
jmp
movs
inc
push
xor
loop
test
addr16
arpl
xchg
ss
out
inc
dec
dec
in
pop
and
jge
push
ror
jnp
iret
lods
outs
mov
mov
add
rol
ret
jmp
popa
and
mov
xor
mov
retf
das
jmp
cdq
xchg
push
leave
int3
mov
pop
pop
sbb
pop
movs
adc
(bad)
adc
and
ret
outs
pop
xchg
stos
dec
aad
out
movs
cmps
out
call
aad
test
movs
mov
cmp
sbb
jae
jns
mov
lds
jns
or
jae
fs
push
mov
dec
cmp
jg
call
lods
sti
cmp
ret
mov
mov
pusha
mov
cmc
sbb
sbb
add
movs
int3
jecxz
fisubr
xchg
adc
sub
shl
inc
jg
test
pop
xor
clc
enter
call
and
popf
daa
add
or
shl
lods
adc
sub
lock
movs
sahf
out
ret
test
mov
mov
xor
add
jle
jae
push
add
test
sub
dec
daa
into
mov
ret
ja
sahf
test
das
xor
int3
das
aaa
gs
sub
jp
leave
dec
in
mov
int
mov
stos
pop
daa
sar
fisttp
mul
inc
ds
adc
test
nop
xor
nop
pop
inc
mov
stc
sbb
xchg
fild
retf
mov
dec
xchg
lock
call
sbb
pop
retf
rol
aas
dec
cmc
aaa
out
stc
test
mov
adc
adc
mov
sub
jecxz
bound
pop
out
adc
xchg
sub
rcl
adc
inc
sti
jne
fisttp
pop
mov
call
cs
or
lea
stos
sar
mov
addr16
sub
ss
(bad)
xchg
js
xchg
mov
jno
loope
cmc
xchg
mov
jno
dec
xchg
or
xchg
sub
push
xchg
dec
add
in
jecxz
sub
add
or
out
arpl
mov
cdq
retf
add
pop
mov
cdq
push
sbb
mov
push
mov
enter
and
call
and
inc
loopne
lea
mov
(bad)
cs
mov
scas
fdivr
mov
mov
xchg
out
add
das
aam
call
cmps
js
and
mov
aas
mov
or
add
and
and
cld
mul
popa
pushf
or
mov
pop
xor
(bad)
enter
inc
sti
xchg
lds
xchg
(bad)
imul
ss
mov
cs
dec
aad
jb
hlt
mov
call
leave
shl
or
xchg
(bad)
push
or
shl
fsubr
fnstenv
daa
(bad)
mov
repz
in
xchg
test
inc
retf
xchg
aaa
push
push
popf
cld
inc
sub
out
pushf
add
and
push
cmp
mov
fst
add
enter
push
pop
xor
ret
jb
add
ins
fisttp
iret
movs
jl
shl
jmp
and
ja
xor
add
jmp
cmp
aam
lahf
ins
jae
inc
outs
jecxz
loop
sub
imul
mov
jg
xor
sbb
push
dec
cmps
in
sbb
xor
pop
sbb
sbb
cmp
push
scas
nop
(bad)
loope
mov
sahf
jbe
lods
mov
cmp
les
add
cli
cdq
add
mov
or
sbb
xor
mov
outs
fwait
mov
aad
sbb
addr16
inc
xchg
or
xchg
xor
daa
jp
cwde
mov
lahf
pop
fs
imul
adc
mov
clc
xchg
std
enter
mov
in
sbb
jb
cmp
push
mov
pop
lahf
cmp
das
inc
lods
icebp
sbb
dec
repz
xor
pop
mov
retf
js
dec
or
mov
jle
movs
fmul
xchg
aam
movs
ret
outs
repnz
mov
shl
pop
inc
call
pop
scas
inc
mov
pop
adc
dec
dec
imul
(bad)
push
loop
call
or
pop
xchg
imul
arpl
pusha
movs
enter
mov
sub
ror
mov
sbb
ja
cmp
push
mov
mov
dec
lods
retf
je
mov
stos
call
mov
in
dec
outs
pop
shl
(bad)
aaa
or
mov
ss
sbb
popa
push
test
clc
inc
jecxz
jge
mov
repnz
mov
mov
ds
mov
cmps
xor
jae
add
stos
or
cs
dec
inc
sub
add
not
push
repnz
popf
mov
jmp
cmps
iret
fidivr
mov
inc
sub
daa
mov
scas
inc
xor
sub
jne
mov
or
pop
or
and
push
add
sti
sub
rcl
dec
mov
sub
xchg
movs
push
mov
jmp
mov
inc
adc
fistp
xchg
sahf
pop
adc
or
arpl
rcr
jns
cmp
data16
test
pop
adc
clc
pusha
call
bound
xchg
out
cld
inc
les
mov
inc
cmp
mov
mov
jae
push
pop
add
outs
shl
jecxz
sub
icebp
call
sub
and
mov
mov
xor
adc
outs
mov
and
stos
test
xchg
fdivr
sub
jge
xchg
and
sub
or
mov
test
jecxz
adc
add
xchg
adc
xor
outs
push
add
add
or
call
push
jle
push
ror
adc
mov
and
inc
push
inc
add
stos
adc
and
mov
inc
fsub
and
(bad)
mov
and
mov
xor
int
pop
adc
sbb
sub
lahf
jb
aad
jp
add
cmp
or
pslld
add
pop
cmp
(bad)
pop
rol
lods
sbb
inc
test
std
pop
ins
push
js
cmp
dec
jle
mov
and
add
mov
sub
(bad)
sub
push
mov
fstp
and
in
sbb
data16
mov
in
sbb
inc
fcom
cld
cmp
int3
mov
mov
sub
mov
ror
(bad)
pop
and
enter
jp
and
pop
addr16
adc
ficom
aaa
int
jno
out
mov
inc
sbb
inc
jnp
mov
dec
and
jp
sub
imul
bound
mov
(bad)
mov
imul
cmp
test
out
repnz
stos
movs
ror
sbb
xchg
cs
movs
fsub
(bad)
daa
fiadd
xor
stos
mov
inc
test
lock
pop
mov
dec
mov
test
add
add
and
sbb
cmp
imul
add
out
ins
stos
jl
fsub
(bad)
jnp
sbb
(bad)
out
jno
mov
adc
in
iret
xchg
pushf
inc
or
jge
and
shl
mov
mov
aad
or
ss
nop
push
out
fimul
setns
iret
outs
ins
sbb
push
(bad)
or
(bad)
push
mov
sub
or
neg
retf
or
lea
popa
lea
fbld
mov
jns
fmul
adc
jl
xor
push
imul
sar
es
leave
jle
sub
adc
aaa
adc
lahf
fdiv
in
sub
or
in
mov
fnsave
imul
mov
cmp
push
ja
and
loope
jp
xor
or
xchg
lods
leave
pop
push
lahf
add
ret
fxch
or
fwait
mov
push
(bad)
xchg
and
push
xsavec
mul
cmps
int3
int
(bad)
jmp
mov
or
vmread
pop
fdivrp
fnstcw
dec
test
movs
icebp
stos
cmp
mov
mov
sbb
jae
pop
outs
sbb
imul
jb
fild
sub
cmp
aaa
inc
jne
sahf
adc
out
push
pushf
lods
or
fcomp
out
imul
retf
jbe
jp
call
dec
mov
aam
jg
xor
xlat
push
retf
repnz
test
push
sbb
ror
fisub
jbe
add
in
push
push
mov
cmc
stc
sub
fcmovnb
add
jb
jecxz
outs
dec
add
xchg
cmps
(bad)
repnz
push
ins
push
shl
xor
ins
sbb
xchg
stos
je
push
aam
popa
and
inc
or
into
pop
mov
rcr
(bad)
jecxz
cmc
xlat
int
mov
les
pop
jle
pop
int
(bad)
xor
inc
sbb
(bad)
popf
aad
mov
or
movs
aad
cmc
test
cmp
inc
mov
cmp
mov
sahf
add
dec
mov
shl
push
jmp
ret
or
xchg
xchg
in
xchg
cmps
lods
loop
fsubr
mov
into
xchg
xor
fild
adc
sahf
aad
mov
stc
and
and
xor
sub
fadd
xchg
adc
repnz
mov
dec
cmp
ins
ja
dec
in
pop
js
push
test
es
lock
inc
jmp
out
mov
or
mov
fcom
repnz
adc
(bad)
outs
sub
add
inc
lock
dec
test
xchg
jp
int3
daa
int3
push
cwde
cmp
rol
addr16
xor
mov
lods
xlat
ss
aaa
mov
xchg
jp
sti
xchg
inc
cmp
loopne
lods
push
xchg
jle
retf
xlat
dec
xchg
cmp
test
retf
(bad)
outs
fwait
dec
scas
sub
cmp
add
loope
sbb
pavgb
jmp
shr
mov
jle
out
in
xor
bswap
push
addr16
mov
adc
mov
xchg
xor
mov
(bad)
sbb
mov
test
jne
xchg
lds
fld
and
xor
adc
test
xor
dec
sbb
cwde
inc
mov
stos
sbb
fadd
fcomp
fmulp
xchg
xor
mov
mov
or
push
outs
push
mov
pop
mov
repz
nop
jae
or
jmp
pusha
mov
xchg
pop
mov
mov
sub
sbb
div
pop
mov
in
mov
pusha
pusha
mov
(bad)
mov
pop
hlt
dec
popa
push
xchg
ins
mov
jne
xchg
xor
mov
jp
popa
ss
add
iret
jp
lock
retf
pop
push
ins
call
test
shl
(bad)
adc
and
ret
out
lods
add
mov
dec
mov
push
loope
rol
xchg
jl
add
popa
mov
(bad)
(bad)
mov
mov
pop
sub
and
mov
adc
cmp
stc
daa
(bad)
fsubr
aas
adc
pop
in
push
xchg
ret
sub
cli
dec
jne
mov
fcomp
and
sbb
addr16
repnz
jecxz
mov
test
adc
jmp
stos
fild
adc
out
jns
out
mov
push
inc
in
std
pop
xchg
jae
cmps
arpl
lahf
and
movs
or
jb
imul
or
fwait
ds
or
xchg
iret
pop
push
into
mov
sbb
jmp
inc
jns
inc
mov
jns
popw
dec
cmp
scas
daa
add
arpl
sub
mov
(bad)
shr
mov
add
fs
les
loope
in
inc
movs
add
cs
mov
stc
test
adc
mov
dec
or
scas
(bad)
mov
mov
mov
and
adc
xchg
mov
arpl
loop
loopne
ret
les
ret
in
or
cli
(bad)
lahf
mov
jo
ret
icebp
xor
test
sbb
mov
xchg
jecxz
add
or
mov
into
das
mul
jns
ins
pop
pop
bound
repnz
xor
cmp
jnp
mov
push
jb
cmp
fdivrp
jmp
xor
mov
add
lea
out
stos
pop
inc
push
jg
ss
adc
clc
loop
jg
ins
mov
and
div
push
(bad)
pop
ins
pop
data16
cmp
and
push
push
test
push
pop
dec
ret
ret
pop
hlt
adc
push
test
in
cli
pop
addr16
xlat
in
mov
push
sbb
hlt
test
test
push
mov
mov
stc
mov
adc
popf
iret
xor
aam
sub
repz
aaa
mov
jle
xchg
and
sub
push
out
outs
out
sbb
cmp
xor
jns
in
xchg
and
in
icebp
std
jecxz
retf
add
daa
adc
sub
dec
mov
mov
mov
pop
add
test
cmp
icebp
mov
sbb
js
popa
mov
and
fisttp
xor
shr
mulps
js
fcom
pop
div
cmc
adc
and
(bad)
data16
lods
fisttp
ins
xchg
pop
add
(bad)
mov
pushf
sub
movs
in
(bad)
mov
dec
mov
add
push
sbb
jne
js
inc
test
mov
test
push
mov
int
addr16
adc
into
add
fst
mov
repnz
sub
sbb
(bad)
mov
cmp
iret
addr16
sbb
js
and
test
mov
movs
fwait
xchg
pop
dec
ret
or
sub
mov
xor
popa
aaa
shl
mov
sbb
add
test
sbb
add
and
aam
and
push
fabs
push
aam
xchg
mov
inc
inc
out
js
icebp
pop
outs
bound
jmp
xchg
adc
push
ret
and
push
nop
adc
fwait
xchg
test
inc
cs
popa
and
repz
lods
loopne
(bad)
cld
pop
lods
ja
fucomi
(bad)
cmp
mov
push
out
dec
mov
and
mov
sub
hlt
cmp
and
xor
stc
retf
and
lock
enterw
jmp
adc
shr
sbb
test
add
sub
dec
pop
rcr
push
out
rol
or
and
enter
adc
jbe
mov
xchg
pop
iret
inc
repz
(bad)
xchg
xchg
pop
xchg
mov
dec
mov
sub
inc
scas
sub
ss
(bad)
pop
dec
int
pusha
pop
pop
xchg
mov
jmp
fadd
icebp
pop
call
inc
add
ins
push
cmp
and
imul
fisttp
cmp
jg
and
pop
add
(bad)
push
out
aas
xchg
sub
rcr
or
movs
jmp
lods
pop
inc
xchg
or
popf
shr
mov
jecxz
jno
jmp
mov
cld
jne
jae
add
pop
loope
cld
(bad)
xchg
mov
imul
stos
mov
mov
cmp
push
push
push
jo
mov
pop
fwait
repnz
retf
adc
iret
sub
and
into
(bad)
dec
jae
sub
es
mov
mov
sahf
sbb
out
xchg
xchg
or
xchg
jmp
mov
push
mov
mov
dec
jae
cmp
movs
dec
jae
and
leave
sub
sub
test
cmp
cmp
dec
fistp
or
mov
nop
adc
ja
pop
stos
jmp
aad
mov
lods
imul
mov
add
sub
mov
mov
cdq
mov
cdq
inc
loopne
jle
pop
stos
imul
and
jg
dec
xor
or
push
mov
jle
div
adc
mov
inc
repnz
dec
loopne
or
inc
pop
lea
movs
mov
out
dec
cs
ret
repz
icebp
outs
mov
xor
loop
sbb
sbb
punpckhdq
into
sar
(bad)
inc
mov
movs
inc
pop
sbb
lods
push
push
pop
cmp
or
add
dec
out
or
add
aas
pop
repz
dec
ja
dec
mov
div
stos
and
rcl
adc
(bad)
mov
pop
mov
xchg
call
dec
cmp
imul
outs
or
push
fimul
clc
clc
stos
adc
iret
lea
mov
inc
clc
push
mov
push
mov
call
sbb
rcl
std
jo
pop
fnstsw
xor
ds
out
jg
mov
pop
pop
sbb
cmp
mov
mov
stos
daa
fcom
or
inc
jp
in
jb
sbb
repnz
adc
mov
cmp
test
pop
in
dec
sbb
mov
add
ret
imul
cmc
fcmovbe
xor
sub
leave
arpl
pop
push
jno
mov
dec
test
dec
sub
ret
cwde
sub
js
sub
jecxz
add
jge
icebp
mov
ret
pop
fdivr
push
and
jmp
or
push
cmc
add
and
es
cmp
xor
lahf
cmp
fcmovb
shr
jecxz
push
les
mov
es
push
jg
retf
imul
pop
or
jecxz
pop
and
sbb
lahf
je
test
aas
jns
adc
ds
mov
mov
jno
sar
push
pop
mov
sti
cwde
jecxz
jo
inc
test
adc
push
test
rol
pop
ret
push
scas
pop
fcomp
or
sbb
cld
cmps
call
sbb
aam
cmps
jbe
add
xchg
adc
pop
xor
cmp
sbb
hlt
xchg
lock
pop
(bad)
sahf
dec
sahf
push
addr16
push
push
retf
mov
fadd
jmp
push
mov
(bad)
jbe
jns
je
sar
pushf
sub
fiadd
mov
jle
sbb
xor
mov
mov
stos
hlt
add
int3
adc
or
loopne
adc
xchg
inc
sahf
pop
cmps
cmp
jecxz
adc
ret
aaa
jge
pop
inc
test
jae
aad
pop
sub
ror
aas
xchg
mov
imul
jnp
in
mov
xor
add
push
jmp
loop
jge
repnz
out
out
mov
not
sar
out
outs
adc
stos
pop
dec
add
add
movs
and
sbb
retf
add
cmps
xor
and
mov
xchg
test
xchg
mul
sub
je
push
movs
ja
mov
call
fsub
test
ss
icebp
bound
retf
sub
fcmovnb
mov
ins
push
sub
in
pusha
add
adc
clc
and
imul
mov
call
out
retf
ret
mov
out
sbb
mov
ret
cli
sar
arpl
mov
mov
xchg
xchg
mov
nop
fist
es
lods
inc
pop
and
sbb
sbb
sti
call
(bad)
xor
pop
add
push
sbb
mov
fnstsw
pop
jmp
icebp
xchg
outs
pushf
and
shl
int3
ins
push
mov
lods
xlat
cmp
ja
or
push
push
mov
outs
push
mov
leave
test
and
dec
cld
pop
xchg
lds
sbb
dec
ss
(bad)
mov
push
mov
call
out
inc
test
dec
int
imul
sbb
and
fwait
mov
lods
imul
fmul
dec
adc
xchg
in
daa
mov
out
push
inc
inc
jp
or
lea
sub
mov
add
sub
dec
sti
lds
fwait
sub
xor
pushf
jmp
cs
mov
daa
retf
rcr
xor
shl
test
jo
and
xchg
or
outs
shr
lods
mov
daa
call
dec
ins
add
pusha
cdq
int3
mov
std
ret
pop
test
dec
lods
aad
dec
mov
xchg
push
jle
imul
imul
in
pop
adc
ins
std
mov
or
and
jecxz
lock
jge
cli
retf
js
cmc
cmps
push
cli
fbstp
test
(bad)
hlt
pop
hlt
aas
movs
jo
fxch
jmp
mov
fstp
adc
push
nop
ins
lahf
inc
popf
test
cmp
aad
adc
jbe
xor
push
shr
stos
into
sub
stos
inc
jl
repnz
pop
or
ret
mov
mov
call
inc
fcmovu
fdivr
test
stos
in
das
fs
jmp
pop
aaa
stos
dec
pop
(bad)
leave
lods
into
mov
jns
mov
mov
test
dec
fstp
(bad)
cmp
jmp
shl
(bad)
mov
jno
outs
adc
adc
imul
adc
stos
call
mov
mov
jnp
xchg
bound
and
clc
cmps
out
jne
add
call
jl
push
cdq
pop
jb
inc
jnp
outs
pusha
pop
ins
outs
jle
cmp
mov
imul
jae
jle
mov
inc
ret
xchg
jmp
push
xor
mov
dec
pusha
daa
call
neg
gs
xlat
and
pop
into
loope
cmps
jae
stos
mov
inc
arpl
bound
sub
inc
cmp
pop
es
inc
pusha
xor
jnp
mov
adc
cs
push
sbb
push
loopne
repnz
not
pop
mov
cmc
xor
adc
cmp
jp
mov
addr16
mov
jmp
xor
pmulhw
scas
push
fucomi
xchg
xor
push
cs
lods
out
fcom
inc
loop
or
lds
lock
imul
scas
retf
ret
rol
jne
jle
adc
push
xchg
sub
daa
sbb
cs
xor
inc
mov
xchg
and
jns
ret
cmp
call
xchg
pop
ret
shr
shl
aam
addr16
dec
lea
les
ins
mov
xor
dec
add
or
and
mov
addr16
xor
jle
dec
inc
xchg
or
add
and
dec
mov
and
or
adc
pusha
outs
std
push
imul
add
jmp
sub
in
jns
fisttp
mov
movs
into
xchg
mov
cmp
mov
sub
in
jns
popa
cli
or
add
js
clc
repnz
vpsubsb
cli
pushf
mov
ret
inc
or
add
out
loop
jl
shr
cmp
scas
lods
push
xchg
add
fidiv
xor
xchg
sub
loop
cmp
xchg
xchg
repz
mov
add
outs
fnstsw
jae
cmp
dec
je
or
or
mov
ins
nop
ins
int3
fldenv
lea
sbb
mov
lock
inc
and
jmp
pop
push
icebp
aam
push
pop
xchg
mov
jg
jl
mov
test
pop
push
xor
div
les
arpl
and
push
and
psubd
nop
not
nop
inc
mov
push
or
pop
mov
(bad)
leave
cs
fmul
in
mov
push
mov
jnp
jno
fs
pop
xchg
call
adc
xchg
arpl
and
icebp
in
fmul
lea
add
sbb
and
xchg
fstp
add
cli
inc
mov
lea
mov
cmps
arpl
pop
(bad)
mov
dec
mov
mov
pushf
cmps
cmp
inc
movs
lods
mov
push
call
test
xor
js
xor
test
add
xchg
mov
sbb
je
aad
xchg
push
popa
xor
jo
test
sub
dec
mov
retf
xlat
jb
loopne
xchg
ss
out
cdq
lods
jo
leave
cmp
sbb
dec
iret
add
push
ret
out
popf
fcomip
out
xchg
hlt
sbb
inc
jnp
add
sub
jge
imul
sbb
sbb
fist
nop
mov
xchg
lea
mov
loopne
(bad)
mov
xchg
sbb
sbb
xchg
adc
rcr
sub
leave
inc
es
lock
test
or
push
das
adc
shl
xchg
mov
in
and
(bad)
aad
dec
mov
lahf
push
push
sub
push
mov
xor
sbb
jmp
pop
test
push
mov
ins
mov
mov
mov
xchg
or
or
inc
dec
cdq
test
pop
aad
mov
dec
imul
in
mov
sub
lock
cmp
jbe
stos
or
call
ins
lock
inc
mov
adc
loop
fnsetpm(287
xchg
pusha
jbe
and
outs
test
mov
shufps
aam
out
int
mov
mov
hlt
cmps
jp
aam
hlt
sbb
push
add
pop
mov
sub
adc
scas
fsubr
mov
popf
mov
xor
xor
inc
inc
arpl
mov
adc
loope
lods
jecxz
xchg
fdiv
aaa
cld
or
ja
mov
inc
add
outs
jbe
lods
(bad)
movs
sbb
movs
out
inc
dec
lds
and
xchg
xchg
adc
icebp
ror
jecxz
cmp
loopne
movs
mov
sub
xor
scas
mov
pop
or
jnp
sbb
dec
mov
fidivr
cdq
(bad)
test
mov
lahf
(bad)
jle
inc
xchg
jecxz
cmp
xchg
lods
sbb
pop
jbe
mov
movs
bound
fistp
adc
and
aaa
push
(bad)
stc
int
push
fnsave
cdq
add
or
fcmovb
inc
fwait
xor
les
pop
add
xor
aaa
aas
and
adc
leave
mov
push
jbe
addr16
ret
xor
not
retf
and
sbb
in
mov
out
push
jg
pop
pushf
jo
xchg
fbstp
aad
sbb
icebp
pop
mov
sar
fs
(bad)
fcmovu
mov
in
aam
or
lock
adc
push
adc
(bad)
push
sar
jo
mov
push
cmps
shl
push
les
pop
cmp
push
push
mov
es
mov
jae
pop
test
bound
sbb
pop
add
cwde
and
popf
dec
xchg
scas
or
push
sub
jnp
mov
pop
lea
jbe
(bad)
xchg
cmc
js
loop
jl
jb
(bad)
int
jno
(bad)
into
outs
mov
xlat
ss
jb
xor
dec
xchg
jno
and
pop
arpl
stc
push
stos
lods
push
ins
push
into
repz
dec
push
aaa
mov
cmp
loope
add
push
pop
cdq
dec
sbb
push
call
xchg
add
jle
mov
mov
arpl
jmp
mov
pop
push
dec
or
mov
push
popa
rcl
scas
cmp
lahf
(bad)
xchg
push
sbb
int3
mov
mov
and
jb
cmps
sahf
fld
stos
shl
cmps
(bad)
pop
out
cmps
jmp
aad
stos
aaa
jg
mov
xchg
ins
mov
enter
rcl
add
ja
mov
outs
mov
xchg
scas
sub
mov
ins
ss
fild
aad
mov
imul
call
or
jb
dec
mov
push
imul
push
mov
test
xor
call
jge
sbb
mov
mov
xchg
call
repz
jg
ins
inc
scas
fs
sti
outs
aam
sub
leave
stc
inc
and
mov
out
pusha
sbb
and
ins
push
imul
out
cmp
(bad)
ss
pop
popf
pop
leave
pop
and
hlt
rol
push
cdq
pusha
test
test
aas
out
pop
xchg
test
dec
and
js
stos
dec
inc
pop
or
pop
fadd
cwde
mov
(bad)
cmp
imul
sbb
and
test
sub
pop
or
(bad)
call
dec
dec
stos
js
jmp
rcl
xchg
or
aas
adc
sbb
and
sbb
sbb
aam
lods
mov
dec
ret
adc
test
hlt
iret
adc
es
pop
jge
mov
adc
sbb
adc
test
pop
lods
arpl
push
push
pop
sti
adc
int3
mov
popf
xchg
mov
(bad)
arpl
and
into
or
push
(bad)
and
sbb
lods
sbb
(bad)
outs
int
pop
cmp
jae
or
or
fsubrp
jnp
das
out
mov
out
add
or
push
dec
cmps
and
dec
out
or
cs
jmp
xlat
mov
sub
sub
xor
inc
iret
mov
mov
mov
jl
or
jb
xchg
add
mov
call
fmul
xor
jo
xor
imul
mov
and
xchg
outs
dec
lea
mov
mov
push
call
cmps
outs
adc
xchg
mov
cmp
daa
lds
scas
call
arpl
les
adc
pop
adc
or
loop
rcr
sbb
nop
mov
jo
push
popf
daa
adc
and
or
xchg
test
scas
cmp
mov
mov
xor
rol
fincstp
jmp
add
inc
push
push
inc
mov
and
in
retf
cmp
pop
repz
mov
jb
push
sbb
loopne
xor
(bad)
jbe
cld
xchg
fsubr
pusha
daa
cmps
mov
fiadd
push
pop
jg
repz
and
popf
mov
ret
jae
add
(bad)
or
aam
rcr
sbb
add
(bad)
cld
and
inc
xchg
mov
aas
or
ret
sbb
mov
cmps
inc
call
stos
mov
test
loopne
xor
push
pop
(bad)
(bad)
jmp
arpl
push
sbb
xor
jb
dec
push
mov
jge
mov
ins
xor
jle
pop
sbb
stc
fs
lods
cmp
loope
mov
cmp
mov
jl
xchg
cmps
test
or
out
pushf
sbb
mov
mov
movs
push
imul
push
lahf
add
add
inc
das
or
jo
movaps
jae
dec
(bad)
sti
dec
push
cmps
iret
lods
addr16
mov
and
pushf
lds
push
sahf
lock
push
std
clc
pop
dec
test
test
je
and
(bad)
sub
fwait
aam
mov
mov
sar
mov
pop
sbb
push
pop
pop
and
inc
xor
jl
jp
test
dec
jge
leave
call
push
jne
rcl
ds
in
call
clc
adc
dec
mov
gs
test
push
cmp
xor
mov
fcomp
into
jle
pop
cdq
jge
shl
retf
sub
add
mov
into
sar
in
sti
jecxz
adc
das
ins
daa
xchg
xor
out
dec
es
dec
aad
or
jns
mov
fxam
scas
in
xor
adc
adc
sbb
pusha
push
das
out
mov
cmp
push
pusha
pop
xor
ret
dec
sbb
or
dec
jbe
sub
jns
mov
addr16
sub
not
cmp
sbb
add
sub
or
mov
ins
xchg
push
xor
ds
add
cmp
into
ficomp
mov
test
mov
xchg
add
mov
out
jmp
inc
xchg
xchg
pop
pop
stos
ins
jmp
mov
cmp
sbb
push
or
cwde
iret
cmp
jmp
int3
mov
jecxz
xor
inc
call
mov
sub
push
sbb
mov
aad
aam
mov
jnp
mov
dec
cmp
mov
call
rol
mov
out
xor
cld
out
xchg
stos
mov
xchg
scas
cld
add
mov
adc
ret
in
cld
push
add
stc
test
cli
ins
jns
dec
call
sub
pop
dec
dec
jecxz
or
sub
imul
cld
jecxz
leave
out
(bad)
push
inc
sub
div
fcmovnb
lea
adc
inc
push
push
cmp
bound
jp
sub
imul
inc
push
push
cmp
in
mov
je
test
test
mov
mov
push
cmp
mov
push
sar
sub
sbb
sub
test
fldenv
mov
cmps
mul
xchg
loop
xlat
jmp
imul
mov
dec
and
mov
cli
dec
inc
mov
aad
lea
pop
repz
mov
mov
adc
xlat
or
cmc
jg
xor
jmp
in
adc
div
lahf
and
add
sbb
xchg
mov
leave
nop
xchg
int
int3
pop
push
inc
nop
xlat
fstp
sbb
repz
inc
add
repz
fwait
inc
(bad)
aad
cld
outs
xchg
push
pushf
sbb
jge
lds
inc
(bad)
add
aad
ret
mov
xor
les
or
add
cmp
inc
fwait
mov
out
outs
mov
mov
pop
xor
cli
adc
fsincos
loopne
or
and
push
cmc
xchg
rcr
push
jmp
xor
xor
mov
dec
and
rep
cli
ss
stos
pop
ja
add
repz
jle
popa
mov
jmp
dec
sbb
fld
cmp
xchg
adc
icebp
call
and
lods
mov
dec
pop
and
sub
fs
cmp
bnd
sbb
sti
std
mov
adc
(bad)
je
xchg
inc
mov
cmps
xlat
rol
xchg
pop
nop
and
ins
mov
fdiv
mov
cmp
or
into
jge
cmp
test
fcomip
pushf
mov
or
scas
jb
popf
mov
adc
inc
push
fs
adc
sub
push
jns
mov
scas
dec
ds
lahf
pop
div
jns
push
js
add
jl
gs
or
les
adc
mov
sub
(bad)
ret
cmps
mov
cli
movaps
(bad)
stos
stc
inc
adc
sub
xchg
(bad)
dec
je
pop
pop
into
or
xchg
jb
or
mov
call
dec
addr16
xor
cmp
out
cmp
in
and
mov
pop
rcr
cmp
jmp
aas
lds
sbb
cmp
loop
cmp
fisubr
inc
div
pop
(bad)
cdq
test
mov
nop
daa
lods
or
sub
mov
lea
sub
aam
xchg
adc
rcl
cmp
pop
fwait
dec
pop
pop
mov
call
inc
mov
sti
fs
pop
cmp
mov
ins
call
cli
retf
jge
cmc
xchg
loop
int3
iret
push
pushf
xlat
and
cli
or
enter
push
jg
add
or
pop
add
jne
std
mov
adc
mov
jg
mov
xchg
test
and
xchg
mov
test
add
mov
mov
(bad)
pop
retf
sar
dec
repz
ss
jbe
sbb
fcomp
lock
inc
cmps
stos
jl
cli
cdq
popf
xchg
push
xor
inc
cmps
or
mov
test
jno
out
add
dec
cmps
and
iret
push
jno
(bad)
lds
and
mov
xchg
inc
xor
xchg
or
mov
sbb
cs
outs
in
xchg
in
std
jge
jae
mov
ret
mov
xor
iret
push
and
mov
es
fcomp
and
jl
xchg
fsubr
push
push
or
jge
adc
jl
sbb
ja
lods
sbb
push
cmps
jbe
add
jp
loope
cmp
push
pop
dec
or
or
pop
ret
xor
(bad)
fistp
or
add
jg
jne
test
idiv
stos
outs
xor
daa
ret
and
pop
addr16
cmps
jmp
data16
(bad)
mul
xchg
cmp
sub
inc
imul
sbb
sbb
dec
loop
cmp
loope
inc
gs
jo
mov
xchg
pop
push
lods
add
ret
mov
xchg
ror
xchg
or
nop
pop
add
lods
ret
lea
xchg
add
push
sub
fild
das
pop
sub
call
(bad)
fidivr
xor
je
ret
in
movs
daa
inc
mov
repnz
movs
or
jno
out
(bad)
mov
daa
stc
pop
xlat
imul
inc
scas
into
sub
inc
ins
inc
stos
test
sub
or
pushf
dec
inc
mov
cmps
jmp
jecxz
sub
add
xchg
test
cmps
mov
xchg
outs
xchg
cmp
push
clc
jge
test
adc
push
push
mov
sbb
and
sbb
sahf
mov
addr16
and
adc
and
mov
mov
sbb
sbb
fidivr
cmp
or
ss
(bad)
jne
fldenv
pushf
aaa
std
add
mov
inc
dec
dec
call
cwde
mov
inc
jl
push
movs
xchg
sbb
jnp
sub
inc
inc
and
mov
sub
xor
dec
(bad)
mov
push
add
nop
and
xchg
ins
mov
in
aad
add
jb
push
icebp
adc
fistp
iret
imul
or
jae
mov
neg
xchg
mov
scas
test
out
cmp
and
xchg
adc
and
icebp
cs
pusha
mov
cs
mov
repnz
mov
(bad)
retf
mov
adc
mov
add
cmp
mov
add
out
inc
stos
(bad)
in
and
out
jmp
ret
call
add
stos
mov
cmp
lock
fdiv
rol
ror
sti
fisttp
push
arpl
cmp
jecxz
dec
xor
lods
(bad)
cli
adc
sahf
dec
out
ror
add
push
and
sbb
iret
inc
cmp
sbb
jns
rep
adc
in
shl
fbld
jne
mov
mov
mov
pop
cmc
pop
jbe
or
adc
inc
fdiv
pop
popa
sbb
in
sbb
aad
fstp
outs
or
aam
lock
int3
mov
or
lds
jg
mov
icebp
add
(bad)
jne
mov
js
push
loope
in
int
std
pushf
xchg
sbb
aas
sbb
add
mov
xchg
xchg
fldcw
xor
pop
dec
hlt
cmp
ret
adc
sub
mov
mov
ds
mov
jmp
xchg
push
(bad)
jbe
icebp
add
shl
lahf
iret
sbb
adc
mov
and
stos
adc
leave
daa
dec
cmp
pop
bound
xor
ss
inc
add
or
or
popf
ja
stos
pop
sub
inc
leave
push
or
inc
sub
sub
jo
mov
xor
enter
into
and
sub
sbb
aas
jb
sub
xor
xor
call
cmp
shl
push
dec
(bad)
dec
retf
retf
cmp
sbb
mov
aaa
rcr
sbb
adc
neg
sub
ret
sti
in
mov
cdq
cmps
and
mov
bound
ret
mov
adc
(bad)
push
push
sbb
mov
xor
lods
push
lea
mov
es
ret
fwait
jg
jns
inc
mov
add
push
shr
addr16
xor
shl
add
pop
clc
fwait
adc
out
mov
scas
pop
adc
fcom
(bad)
mov
or
ret
xchg
stos
mov
int3
mov
test
cmc
les
mov
sub
inc
add
ret
xchg
xor
mov
mov
fs
outs
js
jmp
xchg
sub
pop
jbe
mov
outs
inc
add
lock
mov
call
outs
jno
dec
ficom
scas
adc
pop
jmp
retf
(bad)
push
sbb
mov
sti
scas
sub
mov
stc
xor
pop
xchg
jns
sub
jns
(bad)
mov
inc
push
pop
das
into
inc
push
outs
js
jl
xor
jnp
dec
(bad)
sahf
inc
dec
lods
lea
scas
pushf
inc
dec
aam
xchg
cdq
fidivr
aad
dec
dec
xchg
inc
or
mov
test
cmps
scas
out
(bad)
(bad)
mov
sti
mov
retf
cwde
mov
fwait
idiv
mov
retf
inc
test
sahf
cmp
mov
jae
jne
push
sbb
push
inc
fiadd
or
leave
xchg
mov
inc
hlt
mov
cld
daa
adc
pusha
push
xor
mov
add
test
imul
dec
imul
xchg
adc
jmp
sub
pushf
inc
jecxz
mov
adc
jns
xchg
xlat
out
pusha
or
nop
inc
or
cmps
outs
push
cs
mov
add
push
and
fsub
mov
rol
arpl
sbb
mov
xchg
jp
mov
sub
aad
inc
jmp
xchg
fistp
movs
or
fs
fs
int3
bound
test
mov
push
sahf
jge
clc
xlat
sbb
jne
inc
aad
daa
stc
xor
ds
stos
jge
push
imul
mov
xor
rol
dec
(bad)
loope
ret
sar
push
xchg
pop
push
mov
mov
adc
fisub
mov
jp
xchg
aam
repz
popa
cmc
adc
jp
(bad)
fst
xchg
test
and
xchg
repz
mov
loop
push
jmp
sub
xor
dec
fcomi
ficomp
jo
popf
push
loope
(bad)
in
lock
dec
shl
hlt
push
push
out
xchg
push
push
(bad)
jg
push
inc
jb
ret
das
jno
adc
cld
aaa
fisub
adc
mov
pop
pop
fisttp
retf
adc
ds
cwde
iret
cli
cs
pop
fidivr
xchg
sbb
rol
leave
adc
mov
pop
or
xor
dec
mov
lea
addr16
xor
inc
xlat
and
fxch
mov
cmp
fsubr
retf
dec
imul
shl
dec
cmps
test
call
adc
not
xor
sbb
push
test
or
ret
das
imul
in
xor
popf
aam
fnstenv
(bad)
pop
in
pop
cmovae
ret
sahf
pop
mov
out
ins
and
sahf
dec
and
pushf
sbb
sub
cmp
repnz
and
dec
int
push
test
leave
scas
mov
shr
lahf
hlt
push
mov
ret
out
aas
xchg
inc
imul
sub
pop
rol
dec
enter
(bad)
sbb
push
cmps
aad
(bad)
xor
push
iret
cmps
jae
test
push
mov
dec
cmp
outs
ins
daa
push
int
mov
pop
adc
test
neg
push
pop
test
into
(bad)
push
and
xchg
xchg
push
retf
loopne
nop
popf
nop
cs
jmp
movs
int
mov
sbb
rcr
add
in
neg
push
mov
in
mov
sbb
push
dec
dec
sbb
unpcklps
jge
inc
inc
cmc
repnz
in
mov
ins
or
out
jnp
mov
adc
jbe
loopne
push
push
mov
mov
xchg
cmp
mov
or
xchg
popf
jmp
lods
mov
call
mov
pop
add
bswap
or
mov
mov
ins
inc
rol
cmps
jge
cmc
add
mov
stc
sub
mov
retf
in
pop
push
ror
push
mov
xor
(bad)
push
mov
adc
aaa
ja
xor
in
out
inc
dec
inc
retf
cld
jecxz
pop
and
and
sub
out
fcomip
int3
push
pop
stc
shl
mov
ss
hlt
scas
cmc
jae
jp
push
retf
mov
mov
mov
ss
cmp
jo
out
dec
jmp
jae
rol
add
outs
adc
inc
cmp
in
xor
sahf
repnz
dec
pop
and
in
push
mov
adc
fadd
idiv
sub
shl
gs
clc
add
inc
jmp
jle
add
shr
rcr
(bad)
fisttp
ja
jmp
retf
std
cmc
mov
pushf
cmp
enter
dec
mov
stos
push
in
xor
popa
dec
leave
xchg
or
push
inc
cmps
mov
xchg
sti
jmp
pop
jg
outs
dec
jns
imul
dec
jp
aaa
dec
xor
adc
lods
mov
mov
shr
or
(bad)
in
jp
imul
dec
jo
out
addr16
pop
push
lock
pop
iret
xchg
push
adc
pop
pop
iret
iret
mov
outs
jle
clc
xor
xchg
inc
pusha
and
cmps
out
mul
lea
imul
sub
aaa
fisttp
stc
or
pop
ret
mov
sbb
xor
push
sub
scas
push
out
scas
mov
imul
jmp
mov
lock
pusha
daa
inc
sub
mov
jle
cmps
inc
fmulp
lock
sahf
cmp
add
shr
bound
jge
and
call
cdq
inc
or
push
mov
mov
out
faddp
xor
jle
sti
inc
add
mov
out
test
aaa
shl
jecxz
loope
sbb
pop
out
push
(bad)
fwait
enter
or
jle
ins
fld
repnz
shr
sbb
inc
outs
(bad)
(bad)
call
sbb
inc
add
jnp
sbb
cs
mov
(bad)
dec
in
cdq
mov
arpl
ret
push
xchg
mov
aad
jp
xchg
add
(bad)
movs
cs
mov
outs
les
xchg
mov
js
das
cmp
mov
and
repz
dec
icebp
adc
jg
mov
dec
outs
mov
aam
inc
sar
cmp
sbb
jle
or
dec
sahf
mov
std
jg
inc
dec
and
add
call
out
mov
jnp
ja
repnz
fsub
push
cmp
jmp
les
adc
sbb
sub
stc
add
push
mov
into
add
cdq
dec
aaa
std
into
test
push
in
movs
mov
pop
dec
jecxz
sbb
stc
jno
movs
mov
or
and
aas
mov
xchg
adc
pop
sbb
and
inc
pusha
in
or
in
mov
adc
pop
jb
mov
stos
cmp
sbb
cmp
data16
cdq
sbb
outs
js
inc
sub
adc
(bad)
xor
push
aaa
movs
jp
popf
jle
cmp
pusha
test
pop
popa
mov
test
(bad)
cmps
and
loop
out
(bad)
retf
aad
push
retf
inc
in
xchg
add
pushf
cmp
movs
xor
mov
cmp
mov
pop
push
cs
ret
or
les
je
and
cs
xchg
push
sbb
push
movhps
iret
mov
cs
mov
lea
xchg
cmps
aas
jnp
cmc
ret
aam
hlt
inc
aad
xchg
sub
stos
xchg
mov
data16
fimul
cwde
aad
and
inc
ror
mov
fiadd
dec
inc
repz
jge
pop
push
cmp
mov
cmp
mov
sub
adc
sub
scas
fisttp
xor
outs
sub
mov
gs
sub
adc
xor
adc
dec
inc
xor
xor
(bad)
repz
mov
and
paddusw
(bad)
push
ins
mov
adc
push
pop
fwait
adc
mov
enter
nop
int3
and
in
push
popf
lea
ret
out
mov
mov
sub
imul
jg
dec
and
dec
jg
(bad)
aaa
mov
(bad)
movs
inc
push
mov
dec
or
rol
mov
inc
pop
jbe
bound
mov
xor
xor
shl
mov
mov
jne
mov
(bad)
scas
or
jmp
cmp
push
out
(bad)
sbb
fs
adc
cmps
pusha
inc
cmc
cmp
pop
pop
test
mov
push
dec
repz
xchg
outs
inc
jne
dec
imul
push
sbb
pop
jns
inc
hlt
push
or
stc
xor
jmp
or
and
shl
inc
fdiv
mov
push
shr
cmps
jne
clc
gs
imul
je
mov
test
out
outs
push
int
in
jbe
ror
out
or
fild
xor
fbld
fnstcw
dec
pop
sbb
cld
cld
xchg
rcl
bound
push
jmp
pop
pop
test
aaa
imul
mul
movs
jno
mov
push
sbb
xor
mov
(bad)
int3
fcomp
movs
adc
ret
scas
dec
pop
es
xor
call
dec
jae
fadd
loope
fwait
mov
xor
xchg
(bad)
cmp
and
fcomp
and
pop
in
lahf
sub
stos
mov
repz
add
push
dec
loope
xor
pushf
stos
test
cmp
bound
push
jl
aad
mov
pop
jge
jmp
fimul
pop
out
dec
test
and
(bad)
mov
push
scas
pushf
sub
adc
out
push
cdq
es
(bad)
mov
jmp
pop
xchg
mov
cmc
jb
arpl
call
jge
mov
(bad)
in
and
stos
repnz
xor
mov
shl
xchg
add
mov
sub
dec
outs
dec
pop
add
add
adc
xchg
push
stos
popf
cmp
(bad)
loopne
jb
out
pop
or
add
loop
or
push
cdq
mov
jne
jae
pop
add
(bad)
retf
ss
or
and
mov
out
push
jns
add
adc
ss
retf
retf
bound
dec
scas
daa
jbe
xchg
sti
pop
lahf
arpl
inc
dec
adc
inc
mov
fnstsw
sbb
push
mov
fsubr
lahf
test
shr
xor
call
mov
rcr
adc
dec
into
pop
daa
cwde
sbb
add
xor
scas
pop
pop
xchg
int3
das
xlat
mov
inc
xor
mov
add
push
dec
jnp
push
push
loope
adc
(bad)
sub
jp
xor
dec
sahf
inc
out
(bad)
mov
push
into
outs
das
(bad)
(bad)
fld
arpl
mov
push
cdq
push
ins
es
fadd
cmc
inc
mov
(bad)
icebp
inc
scas
int3
push
mov
pop
dec
ds
fwait
xor
call
xchg
mov
push
iret
(bad)
cld
cmps
popf
sahf
or
mov
sbb
aaa
imul
jl
or
mov
jp
icebp
push
sbb
xor
push
inc
fwait
jb
shl
aaa
jne
ss
jmp
fbstp
and
adc
or
imul
test
movs
and
inc
sbb
sbb
or
in
mov
pusha
test
clc
sbb
mov
in
sbb
sbb
or
inc
test
fs
js
or
add
sub
sbb
push
fimul
mov
and
inc
cmps
cmp
mov
pop
pop
mov
mov
push
iret
dec
repnz
dec
ds
je
clc
ins
push
xchg
xor
fwait
je
xchg
test
xchg
out
mov
(bad)
fs
call
or
(bad)
or
cmps
mov
inc
mov
ret
pop
add
es
aaa
jnp
sahf
jb
mov
or
dec
xchg
scas
push
scas
mov
or
push
mov
in
shl
jmp
cmp
pop
inc
inc
or
adc
fs
icebp
movs
and
repnz
sbb
fmul
imul
pop
test
mov
mov
sub
pop
xor
popf
jno
call
dec
dec
arpl
dec
addr16
or
dec
xchg
cmp
cmps
clc
mov
sbb
test
aad
mov
lahf
daa
retf
arpl
ret
lods
mov
pop
sub
sbb
shr
je
in
lds
shl
lea
xor
xchg
les
(bad)
ret
push
and
cmc
mov
movs
adc
loope
mov
push
or
imul
or
in
in
inc
cmp
lods
jno
and
mov
lods
cli
xchg
dec
push
mov
pushf
pushf
pop
dec
repz
(bad)
and
mov
jecxz
adc
pop
std
and
add
cmp
clc
sbb
mov
cmp
rcl
and
cli
cmp
mov
jle
fwait
sbb
mov
dec
or
xlat
adc
push
pop
pop
imul
cmps
adc
jl
mov
inc
aam
and
push
mov
inc
lahf
sbb
mov
ins
out
push
retf
ins
jge
(bad)
leave
mov
pop
cmp
stos
jo
mov
sbb
push
sbb
mov
jo
ret
mov
jb
push
or
dec
rcl
pop
dec
(bad)
push
movs
mov
cmp
jno
mov
fxam
pop
lods
add
add
or
imul
shl
les
mov
out
mov
ficom
jno
inc
mov
adc
scas
push
sub
push
mov
movs
aas
mov
jns
sbb
inc
(bad)
movs
repz
add
les
or
aaa
xchg
adc
adc
mov
loop
fidiv
mov
dec
cmc
jmp
lahf
push
or
jno
sar
dec
shl
pop
clc
idiv
stos
or
pop
cmps
aaa
sbb
dec
cmc
(bad)
shl
mov
pushf
and
dec
outs
xchg
loope
retf
jmp
test
push
adc
enter
(bad)
imul
fdivr
jl
cmps
dec
mov
cmps
inc
mov
dec
sub
popf
cmp
mov
(bad)
cld
jno
xor
dec
push
cdq
jnp
imul
in
mov
test
inc
lds
les
mov
pop
jmp
xor
push
sub
inc
test
call
clc
lods
ret
push
inc
cmc
xchg
sub
and
idiv
dec
xor
(bad)
popf
lods
int
(bad)
pop
cmp
(bad)
xor
inc
pop
jnp
mov
mov
xor
adc
adc
int
lods
pop
or
mov
push
cmp
es
aad
xchg
xor
out
mov
lds
outs
sub
leave
xchg
clc
or
arpl
movs
sbb
add
sbb
jo
das
aaa
pop
(bad)
dec
test
dec
pop
jbe
mov
fdivr
lea
shl
dec
gs
adc
les
lods
aas
into
mov
sar
cli
jg
pop
jne
sbb
and
test
dec
pusha
mov
push
iret
inc
fadd
(bad)
aam
or
gs
call
mov
es
add
xor
loope
xchg
dec
stc
ins
mov
dec
pushf
pop
dec
test
outs
std
pop
sbb
pop
or
mov
xor
loopne
test
test
scas
ret
jle
sub
call
les
mov
and
or
or
fbld
in
push
dec
jmp
xchg
ss
idiv
imul
cmp
jge
pop
push
ss
xchg
mov
jp
push
mov
pop
and
addr16
(bad)
mov
push
retf
cli
dec
aad
pop
mov
fld
fidiv
(bad)
xchg
dec
fwait
jmp
repz
dec
push
call
repz
pop
sahf
xchg
lock
sub
inc
stos
daa
scas
inc
pop
push
push
and
lods
mov
jnp
xchg
sub
push
ror
lods
ins
dec
push
sahf
ret
adc
rcr
call
xchg
icebp
xchg
mov
jp
xchg
les
repz
fst
cmps
call
test
and
aad
shr
shl
dec
inc
inc
int
mov
fmul
cdq
mov
les
sar
add
out
sbb
das
aad
and
adc
stos
jmp
addr16
movs
pop
mov
and
mov
xchg
jae
je
dec
movs
outs
mov
hlt
sti
shr
push
or
out
test
pop
(bad)
aad
in
cld
movs
inc
mov
cld
and
and
jmp
movq
sub
out
lds
(bad)
aas
adc
arpl
in
jns
fbstp
aaa
sub
das
lods
lods
or
jae
icebp
lea
sbb
pop
into
mov
sbb
and
cmp
or
std
imul
ret
jecxz
sbb
ficomp
pop
dec
out
fcmovnu
jbe
cmp
mov
push
les
scas
pushf
imul
push
jmp
add
in
call
pop
ja
cwde
jo
cmp
and
add
pusha
int3
enter
jnp
stc
stc
xchg
or
sub
mov
rcr
popa
fcomp
pop
fild
jecxz
dec
imul
push
les
ffreep
xor
sbb
sbb
mov
dec
stos
xlat
and
add
aaa
push
out
iret
bound
mov
mov
cli
sahf
adc
add
jge
push
cwde
push
mov
loope
sub
add
lods
dec
into
xchg
sbb
pop
jle
test
ins
jo
push
pop
test
fdiv
int3
aaa
shl
mov
jmp
inc
pusha
lea
sub
addr16
imul
lea
leave
adc
sbb
int
gs
pop
es
sti
ror
adc
in
sbb
ja
in
je
mov
es
add
push
push
jae
push
cmps
maxps
dec
dec
stos
lahf
push
fwait
(bad)
pop
fidiv
and
adc
jns
int3
fcmovu
js
xchg
int3
xchg
mov
adc
pop
retf
ror
aas
ins
pop
pop
adc
push
outs
aad
into
ret
lods
push
loope
cmp
jg
outs
in
mov
rcr
cdq
inc
ins
retf
repz
cmp
aad
call
mov
jge
call
jmp
push
int3
gs
fadd
ret
adc
pop
test
outs
push
mov
dec
push
sbb
stos
mov
push
test
mov
addr16
stos
out
adc
push
in
lds
das
adc
inc
dec
test
inc
or
pop
rcr
push
cmp
sar
arpl
jnp
mov
jb
xchg
data16
ret
fmul
sbb
or
mov
test
leave
and
sar
push
enter
dec
cld
and
fsubr
clc
sub
push
sub
inc
jb
xor
cmps
lahf
stos
ret
xor
push
rcr
sahf
not
pop
ss
out
mov
(bad)
mov
test
cmp
or
sub
dec
retf
loopne
leave
cmp
arpl
mov
push
sub
cmp
inc
mov
test
out
out
ss
movs
add
ret
ret
xor
stos
adc
in
push
stos
dec
mov
inc
pop
add
sbb
out
xchg
xchg
in
sub
and
stc
arpl
gs
pop
sti
loopne
pop
out
test
push
ret
pop
cmp
dec
adc
js
jl
pop
aas
(bad)
adc
pushw
mov
call
mov
repz
fadd
xlat
jno
adc
inc
cdq
mov
push
popa
dec
cmp
mov
xchg
pop
dec
cmp
icebp
mov
aas
(bad)
fistp
mov
ja
enter
sub
fldcw
stc
hlt
inc
inc
mov
fs
push
in
and
cli
cmp
jnp
push
adc
xor
popa
cmp
cld
dec
mov
pop
cmp
jmp
jno
push
rcr
mov
pop
add
aam
sub
pop
loope
cmp
dec
pop
stos
add
test
cmp
clc
jae
lods
jp
push
or
neg
cmps
dec
dec
push
push
xchg
or
dec
je
jle
adc
popf
xor
mov
jmp
sub
jle
xor
loope
icebp
test
sbb
xchg
inc
fisubr
movs
jp
sbb
mov
mov
stos
gs
aad
sub
fisubr
pop
leave
xchg
cwde
push
add
jmp
mov
pop
sbb
and
mov
push
cmc
push
mov
lea
mov
ins
mov
bound
gs
repz
pop
pop
push
pusha
ins
cmps
or
push
mov
aad
cmc
loope
pop
ja
sbb
int3
out
xor
cwde
sub
mov
push
dec
mov
fwait
jno
add
push
push
or
test
out
ss
outs
sub
jo
mov
add
push
xor
pop
mov
aaa
xchg
xor
test
jb
icebp
push
and
mov
mov
stos
push
push
and
(bad)
retf
ret
cwde
dec
outs
sub
pop
or
push
sub
iret
out
aam
pop
(bad)
fisub
test
fwait
inc
jl
jae
fwait
out
call
push
mov
out
imul
lahf
jo
xor
mov
out
aad
xor
ins
push
in
lods
push
mov
add
sub
jbe
aam
xor
xchg
push
and
lods
cmp
cmp
cwde
dec
pop
mov
imul
aaa
dec
arpl
xchg
nop
icebp
fucom
test
cs
shr
cmp
lahf
inc
fiadd
xchg
loop
mov
mov
xchg
add
and
sub
fist
jo
es
sub
jmp
or
rcl
icebp
movs
ds
and
loope
pop
xchg
mov
push
cmp
fsubr
dec
mov
cmp
sbb
into
sbb
jg
out
ficom
jno
add
cmp
mov
les
out
nop
sar
adc
mov
xchg
inc
xor
leave
std
mov
into
dec
pop
dec
lods
sbb
mov
sbb
adc
int3
rol
push
sub
cdq
add
(bad)
ror
xchg
xor
sub
fwait
(bad)
ss
scas
stos
loop
punpcklbw
inc
jp
add
jno
fstp
or
inc
mov
imul
ins
pop
call
icebp
adc
cdq
ds
sar
bound
cmps
jecxz
jns
lods
sub
es
adc
push
push
test
in
loop
(bad)
(bad)
push
shr
jmp
dec
jl
xor
ds
cmp
jmp
pop
div
inc
xchg
(bad)
(bad)
retf
mov
repnz
adc
hlt
inc
pop
lods
mov
imul
mov
xor
dec
mov
dec
lea
inc
ja
mov
sbb
xchg
retf
call
in
xor
loop
xchg
cwde
dec
jae
imul
rcr
(bad)
dec
test
imul
pop
jmp
pop
xchg
ficomp
cmp
cmp
push
pop
cmp
jmp
in
in
xor
sub
or
jno
jge
adc
cmp
shl
outs
cmps
into
mov
call
add
cmps
leave
and
jo
into
bound
pop
stos
rol
sub
in
shl
ss
shr
sahf
sub
mov
aad
pop
rcr
movs
shr
(bad)
jmp
test
xchg
xor
cmp
lock
call
push
iret
cmp
rol
push
inc
add
and
adc
aas
scas
lods
pop
pop
add
(bad)
sahf
arpl
xbegin
cmp
arpl
pushf
clc
mov
addr16
ss
mov
mov
push
and
dec
ss
inc
jns
mov
aad
mov
popa
adc
jo
and
adc
xor
adc
stc
jbe
jg
cmp
jle
pushw
jb
clc
inc
or
mov
push
leave
das
and
fsubp
popa
iret
push
ins
push
bound
mov
pop
test
mov
push
ins
and
xchg
adc
inc
push
xchg
xchg
aam
push
ror
shl
push
mov
call
test
adc
fdivrp
mov
xchg
adc
sub
xchg
pop
inc
ins
mov
test
add
jb
sbb
dec
lods
jno
ss
add
xchg
pop
mov
push
ja
in
jmp
cmps
and
jnp
sbb
or
add
js
sbb
mov
dec
fcom
sbb
mov
or
mov
call
arpl
clc
sub
adc
mov
retf
pop
retf
jbe
daa
sub
iret
out
and
or
dec
lods
sub
je
mov
pop
sti
xchg
int
cmps
cmps
mov
jno
and
(bad)
mov
cmp
test
inc
cmp
inc
push
jp
pop
retf
cmp
stos
add
lods
addr16
pop
call
jp
out
xchg
mov
sbb
mov
lds
loop
xchg
pop
push
shr
push
xchg
int
test
lods
pop
ins
cmps
popf
fnstsw
pop
jbe
or
sub
addr16
jp
sub
jne
fdiv
into
cwde
inc
xor
pop
out
mov
add
and
cmp
dec
jecxz
or
and
lods
lds
xchg
jg
movs
mov
xchg
mul
jmp
lock
stos
add
ins
retf
scas
data16
sbb
mov
jno
xchg
icebp
mov
stos
test
imul
fadd
int3
loope
adc
fwait
in
mov
(bad)
push
inc
jle
fwait
nop
mov
sbb
popf
or
js
mov
push
dec
lea
dec
inc
adc
mov
aam
mov
xchg
ins
mov
retf
add
into
mov
dec
mov
(bad)
and
or
adc
cs
sbb
fst
xchg
xchg
shl
or
ins
adc
push
cmp
je
jb
icebp
je
mov
mov
out
(bad)
vmovddup
add
pop
loopne
sbb
out
in
pop
lods
dec
ins
ret
mov
cmp
sbb
pop
adc
lods
cld
mov
jbe
fldcw
lahf
ins
cmps
mov
sub
in
icebp
add
lahf
lea
test
cmps
xor
out
mov
jne
nop
cdq
nop
or
mov
mov
arpl
jecxz
xor
int
jns
cmps
sub
mov
push
xchg
jns
fstp
test
push
scas
or
fistp
hlt
mov
sbb
and
fwait
jo
jp
mov
ins
fwait
mov
dec
mov
cli
mov
pop
or
jl
xchg
into
fisubr
in
ja
jmp
ja
mov
or
cmps
es
cmova
push
(bad)
dec
cwde
add
jae
fmulp
call
jnp
pusha
jmp
xchg
push
enter
push
movs
xchg
push
clc
dec
test
push
xor
outs
cld
stos
in
pop
jbe
neg
sbb
or
cmps
retf
add
cmp
jb
ds
jae
call
pusha
push
or
lahf
repnz
pop
loope
pop
sub
test
ror
dec
repz
pop
(bad)
mov
mov
mov
jge
or
pop
jl
loopne
push
jmp
or
mov
not
mov
xchg
iret
push
iret
pop
movs
(bad)
ss
mov
loopne
cmp
js
je
js
add
out
cmp
das
movs
idiv
clc
daa
(bad)
rcl
cmp
ja
fsub
loopne
or
js
(bad)
outs
test
pop
sbb
xchg
hlt
push
jle
mov
loope
repz
mov
mov
add
call
rol
xchg
leave
es
sbb
sub
pop
push
repz
imul
mov
retf
in
cli
test
and
frstor
or
mov
mov
nop
mov
sbb
mov
mov
nop
stos
repnz
fisttp
jo
cld
push
cdq
and
in
ss
cmp
into
movs
mov
sub
lahf
int3
rcr
xor
inc
or
pop
pop
xor
test
(bad)
jbe
fdivr
push
mov
pushf
or
(bad)
ds
inc
mov
inc
xchg
xchg
or
add
push
jecxz
idiv
shl
xor
daa
pop
push
sbb
pop
(bad)
movs
add
lods
stc
push
pop
mov
pop
ror
xchg
jo
faddp
mov
ret
call
add
dec
outs
add
adc
call
(bad)
pop
inc
out
pop
mov
push
or
out
mov
jl
lahf
aam
sub
sar
jp
imul
dec
xor
push
dec
clc
imul
pop
bound
inc
mov
pop
les
dec
add
mov
or
and
mov
push
push
aam
add
mov
jmp
iret
push
pop
xchg
aad
adc
mov
lods
loopne
nop
aad
test
bound
mov
lea
mov
adc
and
xchg
out
push
outs
fcmovnbe
sub
jb
lock
add
adc
stc
xchg
dec
xor
(bad)
mov
add
lods
jmp
jne
xor
cdq
add
mov
jl
mov
add
adc
ins
addr16
outs
xor
push
enter
jae
imul
clc
popa
fbld
jl
cmp
mov
sti
test
movs
jge
movs
retf
loop
xor
movs
xchg
div
cld
fdivr
mov
pop
(bad)
ds
bound
inc
mov
call
movs
loope
cwde
test
ret
cmps
test
and
or
add
(bad)
push
imul
dec
xchg
dec
fcomp
movs
xchg
shl
aam
mov
sbb
stos
inc
xchg
sub
and
mov
data16
aas
sti
dec
stc
xchg
cmps
jno
jae
fcom
mov
add
mov
rcl
pusha
jecxz
xor
or
dec
jb
add
arpl
repnz
adc
add
idiv
mov
mov
cmc
cmc
xor
cmps
dec
pushf
dec
sar
in
popaw
mov
jns
(bad)
sbb
push
in
cli
cmp
pop
sbb
pusha
cs
push
fistp
dec
(bad)
iret
hlt
jecxz
push
jne
jge
xor
fnstcw
out
loope
mov
loope
(bad)
rcl
test
loop
or
out
data16
mov
fucomp
dec
and
imul
rol
test
dec
xchg
sub
int3
push
dec
inc
popf
sub
ins
pop
pop
jecxz
cmp
outs
pcmpgtw
mov
inc
mov
jae
mov
xor
(bad)
jae
cdq
pop
and
cmp
(bad)
fldenv
fist
xchg
out
mov
add
mov
retf
or
add
ficomp
add
adc
fnsave
and
mov
jns
jne
or
push
jle
xchg
sub
int3
out
xchg
retf
pop
inc
cwde
in
shl
daa
push
mov
mov
ds
jecxz
retf
push
ret
jnp
loop
ret
ret
ror
shr
inc
cs
pop
dec
aas
adc
push
push
clc
bound
outs
adc
outs
mov
dec
pop
mov
iret
and
in
scas
jmp
pop
bnd
mov
mov
ficom
fld
pop
inc
movs
xor
sbb
fdivr
cmp
sbb
adc
js
or
dec
mov
mov
pop
dec
add
in
cdq
pop
add
nop
or
xchg
push
into
xor
sar
xchg
les
inc
lds
cwde
inc
mov
mov
xchg
mov
jge
call
inc
lds
cmp
mov
js
or
int
dec
or
mov
or
cdq
pop
(bad)
xchg
inc
fst
xchg
sahf
pop
sti
xchg
out
push
push
sti
mov
xchg
fcom
xor
xor
pop
jmp
jns
out
dec
push
xlat
(bad)
imul
test
sbb
push
(bad)
repz
ins
push
sahf
aaa
pop
adc
arpl
sub
mov
mov
sub
jae
xchg
cs
out
or
pop
mov
mov
sbb
pop
jb
iret
daa
sti
aam
in
mov
repnz
imul
inc
mov
sub
push
ffree
ins
add
inc
dec
cmps
arpl
adc
aaa
les
in
mov
retf
add
or
add
mov
mov
aaa
inc
and
inc
mov
jge
lock
scas
push
mov
mov
(bad)
and
dec
sbb
sar
xchg
repz
call
adc
into
or
xchg
mov
push
hlt
stos
(bad)
dec
int3
sub
mov
pop
xor
jae
daa
int3
ds
jnp
lods
lahf
xor
adc
and
add
call
sub
arpl
jl
pop
popf
outs
movs
push
jne
aad
or
pushf
pop
and
and
mov
neg
loopne
rcl
mov
in
out
add
mov
pop
jg
pusha
into
cmps
xchg
scas
pop
clc
test
mov
mov
cdq
adc
call
je
xchg
mov
dec
or
xchg
mov
xchg
ins
js
jmp
xor
add
out
dec
pop
les
scas
mov
sub
mov
and
out
dec
push
pop
push
leave
and
cmp
push
retf
sahf
addr16
xchg
out
scas
jp
jl
pop
(bad)
push
add
xor
aam
scas
pop
ja
sub
and
xchg
push
cmc
and
stc
and
xchg
sbb
int
xchg
xchg
iret
mov
jl
jns
adc
push
outs
cmp
inc
inc
xor
in
call
inc
or
stos
and
sub
and
xor
mov
out
and
pop
jp
rcr
jmp
cmp
enter
lds
and
cmp
mov
cmp
cmps
push
push
fucomi
inc
pushf
xchg
sbb
outs
bound
inc
jecxz
mul
rcr
adc
xor
fwait
cs
push
leave
push
sbb
adc
sti
(bad)
and
push
nop
cld
jmp
inc
sub
cmp
mov
jmp
test
sub
push
(bad)
mov
call
ja
xchg
int
dec
clc
popa
scas
sbb
ss
aad
jns
pop
outs
cmc
in
cs
ins
lahf
scas
mov
fidivr
cmps
pop
into
mov
lock
and
or
mov
sub
mov
mov
lea
sbb
jb
pop
(bad)
push
and
push
les
stos
das
sub
mov
push
cmps
call
adc
ror
and
inc
inc
push
mov
adc
jl
lea
cmp
mov
clc
lahf
lock
ja
or
dec
push
jb
mov
jns
adc
cmp
jmp
aad
lds
scas
xor
sar
jmp
cmp
adc
std
leave
fsub
ds
push
and
fiadd
mov
pop
in
push
xchg
lds
mov
and
cwde
dec
ret
or
out
inc
sbb
xor
push
mov
mov
xor
shl
std
xchg
mov
sub
push
mov
scas
xor
outs
mov
imul
stc
pop
fisub
adc
int3
push
or
nop
ret
mov
mov
mov
fs
mov
jge
or
test
jno
aaa
mov
pop
movs
cmp
mov
fcomp
dec
fwait
das
(bad)
mov
jge
retf
test
addr16
shr
mov
loope
and
pop
stos
ja
into
aam
xchg
fsubp
xor
sub
fldenv
push
imul
xor
daa
add
int3
pop
aam
xor
pop
movs
test
push
(bad)
jae
dec
add
mov
mov
hlt
retf
int3
xor
test
mov
adc
cwde
into
and
push
iret
adc
scas
retf
mov
sub
jne
fbstp
mov
mov
ins
outs
jb
hlt
aam
cli
dec
dec
iret
outs
sar
in
out
inc
mov
xor
jecxz
das
mov
ins
lea
retf
std
idiv
adc
and
or
cld
mov
push
mov
aad
and
xchg
inc
adc
cmc
or
add
enter
retf
ret
mov
popf
mov
sahf
xchg
pop
jbe
fnstsw
dec
cmps
mov
and
and
pop
stos
pop
push
jno
sbb
jmp
xor
fwait
adc
cld
mov
int3
(bad)
xor
mov
(bad)
cs
push
jns
cmps
iret
mov
add
mov
fsubr
cwde
xor
fld
loopne
dec
adc
retf
jno
push
pusha
das
jae
xor
or
add
cmps
iret
fidiv
fwait
movs
(bad)
pop
jo
cmp
mov
iret
scas
add
pushw
ds
pop
sub
ss
push
and
pop
(bad)
jge
dec
js
sub
xor
dec
lock
clc
pop
nop
xor
call
loope
std
leave
mov
mov
nop
mov
lock
dec
movs
sbb
jp
adc
stos
lods
daa
adc
rcr
mov
pushf
cmp
retf
sub
shl
jmp
leave
je
lods
test
movs
cmp
call
sbb
loope
aaa
lods
imul
mov
pop
in
call
xor
test
jle
mov
(bad)
rol
add
je
mov
neg
popa
pushf
xlat
(bad)
jg
sub
aas
das
jno
arpl
fistp
xchg
lock
mov
cmp
hlt
dec
xchg
sbb
daa
stos
rol
mov
inc
out
xchg
imul
vpsubsw
push
and
or
test
inc
call
inc
int
in
mov
mul
or
sti
mov
outs
mov
and
xor
ret
int
inc
adc
fld
or
sbb
cmp
retf
xchg
sbb
pop
sub
pop
xor
in
js
lods
xchg
dec
cmp
jo
mov
rcl
scas
push
sub
stc
repnz
bound
ins
movd
jns
or
dec
and
ss
sbb
aaa
xchg
mov
movs
mov
and
movs
push
cwde
outs
jmp
sbb
push
push
rcr
jmp
stos
dec
mov
xor
ret
cs
cmp
mov
aaa
call
neg
stc
(bad)
lods
cs
or
ins
adc
sub
mov
pop
or
xor
jecxz
mov
xchg
fxch
cs
fld
ins
xchg
push
(bad)
rol
mov
and
ja
sub
aaa
lods
cdq
std
cs
cmove
movs
mov
aam
or
jbe
popa
pop
dec
adc
push
cmp
xchg
mov
test
pop
mov
xor
push
xchg
adc
sbb
loopne
push
mov
int3
push
enter
sub
jae
pusha
push
sub
mov
ja
mov
leave
jno
loop
cmp
cmp
mov
cwde
sbb
idiv
pop
sub
and
dec
xor
(bad)
call
add
pop
aad
jb
cmp
add
aaa
adc
cmp
inc
jbe
mov
sahf
add
cli
nop
jp
xchg
dec
retf
inc
xor
outs
pop
(bad)
xchg
ret
add
inc
push
cmp
inc
sahf
add
pushf
lods
ins
jp
jb
outs
mov
sub
pop
inc
jle
stos
or
jb
fisub
fdivr
cmps
mov
add
(bad)
jo
fnstsw
push
repz
pop
test
mov
xchg
mov
std
mov
sahf
inc
(bad)
jg
pusha
loope
scas
inc
jae
fistp
test
out
dec
jbe
lock
into
jno
xchg
jnp
sub
push
fwait
and
ret
int3
call
repnz
test
into
xor
jns
bswap
mov
or
aas
jle
std
jge
mov
fiadd
pop
movs
fs
jg
(bad)
push
rcr
xchg
out
in
in
call
ins
inc
(bad)
ffreep
xchg
imul
and
mov
mov
stc
data16
pop
ja
pop
xchg
in
xchg
(bad)
sahf
pop
fnsave
retf
pop
imul
mov
sahf
jle
call
in
sbb
xor
(bad)
sub
pop
xchg
sub
lock
loope
mov
sub
and
stos
repnz
jb
inc
xchg
cmps
adc
mov
rcr
xor
das
push
test
sub
cdq
(bad)
jecxz
mov
inc
xchg
jge
mov
cmps
cmps
enter
xor
sbb
enter
adc
(bad)
pop
jle
and
mov
mov
outs
xchg
jne
adc
push
sub
fld
in
mov
nop
adc
int
cmps
daa
cli
lea
xchg
sar
shr
mov
gs
sub
sub
repnz
cmp
push
fwait
pusha
(bad)
in
inc
(bad)
in
mov
sbb
mov
mov
adc
mov
add
aaa
inc
mov
mov
sub
fisttp
xor
(bad)
fist
stos
retf
test
scas
test
not
sub
mov
fdivr
xor
fs
and
movs
shl
idiv
daa
cmpxchg
jae
hlt
cmp
dec
mov
and
js
xchg
sbb
out
jne
pop
pop
jo
and
lahf
sub
frstor
push
jns
mov
fiadd
stc
js
push
jp
dec
push
or
jnp
in
add
int3
in
cmp
cmp
sti
call
ffree
mov
push
int
imul
mov
sbb
fdiv
std
pop
stos
mov
(bad)
les
test
pop
jl
mov
fcomp
inc
mov
dec
jb
push
jmp
test
aas
es
cmp
movs
mov
mov
pop
lods
rol
or
loopne
cmp
mov
sub
sub
inc
or
push
out
enter
mov
sub
inc
loop
push
sub
cmp
mov
iret
aas
and
imul
js
adc
enter
sub
jl
jno
(bad)
cli
sbb
or
frstor
mov
pop
sbb
adc
wrmsr
stc
inc
arpl
daa
pop
int3
and
inc
dec
dec
test
inc
jg
jge
xor
jle
sub
(bad)
shl
int3
mov
cmps
cli
fidivr
mov
and
fucomi
jmp
popa
pop
push
adc
stos
add
mov
lock
lods
enter
pusha
push
call
mov
sub
inc
stos
stos
cmp
sub
movs
lock
sbb
out
pop
aad
movs
xlat
inc
imul
cmps
adc
(bad)
mov
icebp
and
out
mov
cld
inc
push
dec
rcl
jmp
retf
repnz
dec
xor
add
mov
mov
int
xchg
mov
pusha
mov
test
sbb
jmp
and
xchg
shl
aad
inc
inc
inc
arpl
rcr
jl
(bad)
retf
stos
sti
xlat
xor
and
fnstenv
push
xchg
daa
sub
jle
fistp
cli
add
or
lods
mov
fdivr
arpl
imul
or
fnstsw
sub
mov
movs
pop
mov
loop
ret
in
mov
jns
jmp
mov
(bad)
push
pusha
xor
test
fadd
call
cmps
mov
cmps
dec
jmp
push
xlat
sub
jo
pop
mov
cmps
dec
jne
sar
retf
adc
icebp
cmp
mov
lods
and
push
sbb
je
mov
call
rcl
xor
movs
xor
(bad)
out
in
xchg
cmc
pusha
mov
mov
adc
out
mov
shr
retf
mov
div
add
dec
lods
mov
imul
pop
ror
sbb
jbe
(bad)
mov
nop
xor
mov
imul
aas
rol
outs
mov
push
mov
movs
xor
pop
or
lods
ss
mov
(bad)
lea
mov
movs
repnz
mov
out
sub
ret
mov
xor
arpl
ret
sahf
seto
into
mov
fstp
loope
mov
xor
pop
pop
fnstcw
mov
mov
arpl
int
inc
adc
xchg
push
adc
cmp
jl
not
inc
cmp
push
dec
pop
jp
ret
lahf
aad
and
inc
or
cmc
inc
jno
adc
mov
jg
shl
sub
lds
mov
bswap
adc
mov
das
popa
ins
aam
fiadd
scas
(bad)
mul
mov
in
cdq
inc
rcr
imul
(bad)
mov
aad
pop
cli
outs
lods
movs
xor
ficom
out
lock
(bad)
mov
setns
xchg
inc
popf
dec
mov
mov
add
mov
movs
xor
test
lock
inc
sbb
ror
jae
test
and
push
shl
add
mov
and
mov
mov
sbb
xchg
stos
xchg
pop
popf
or
dec
push
test
dec
push
dec
xor
cmp
dec
ins
fisubr
mov
xchg
mov
popf
cmp
loop
clc
adc
pusha
inc
lea
int
adc
jl
rol
pop
push
icebp
repnz
cli
retf
dec
(bad)
sub
jl
pop
fld
mov
mov
pop
adc
jg
test
or
rol
xchg
pusha
mov
inc
out
aaa
lods
push
push
retf
movs
push
inc
jmp
mov
mov
and
push
adc
dec
jle
pop
cmp
push
or
fild
push
enter
push
pop
mov
shl
leave
aad
xchg
xor
sub
or
js
in
movs
mov
cmc
shl
mov
sub
push
arpl
and
sub
pop
xchg
shl
repz
(bad)
dec
pushf
mov
lods
je
dec
mov
sbb
push
xchg
arpl
or
mov
(bad)
push
test
ja
ins
repnz
add
in
push
or
call
mov
(bad)
cmp
cmp
jns
notrack
or
jns
jns
arpl
push
mov
mov
jge
sbb
test
sub
cmp
or
pop
adc
mov
ror
imul
int3
dec
rcl
test
cmps
loop
test
popa
cmp
mov
and
jp
sbb
cmp
ins
pop
push
cs
in
sahf
mov
mov
lahf
or
std
and
repnz
cwde
push
adc
sub
inc
mov
repz
aaa
mov
jno
jp
movs
mov
push
gs
mov
mov
jnp
leave
and
loop
xchg
xchg
push
pushf
or
cmp
jbe
cmp
rcl
(bad)
ret
dec
aam
mov
mov
xor
sbb
mov
sbb
sbb
pop
inc
cmp
xor
xor
jbe
hlt
mov
ss
addr16
mov
lahf
movs
inc
xor
movs
adc
icebp
mov
and
fisub
(bad)
mov
mov
xchg
mov
sub
dec
inc
xchg
add
mov
adc
test
cmp
push
fnstsw
ins
(bad)
enter
xor
pop
or
dec
or
jmp
test
dec
or
int3
lock
sbb
and
sub
out
not
test
mov
les
les
jmp
cwde
jo
mov
sbb
pop
sub
and
mov
div
fwait
mov
jb
dec
or
shr
xor
out
nop
push
xor
fld
fwait
mov
jmp
rol
cmp
xlat
retf
xchg
mov
cmp
imul
inc
retf
cdq
and
into
mov
or
jns
pusha
or
cdq
retf
call
inc
sar
mov
add
mul
jno
iret
outs
jnp
mov
inc
adc
add
pusha
test
stos
int3
mov
stos
mov
repnz
dec
pop
jb
sub
push
or
js
iret
jo
dec
jae
adc
inc
sbb
mov
aas
jae
js
inc
cld
inc
nop
jp
adc
scas
enter
repz
jno
into
in
dec
pop
and
retf
movs
xor
ins
js
daa
adc
movs
popa
mov
or
sahf
fsub
xchg
and
cmps
scas
mov
sahf
sbb
test
or
loope
arpl
mov
(bad)
rcr
ins
int3
sbb
adc
add
adc
sub
sbb
clc
scas
mov
sbb
popa
xchg
mov
in
adc
popf
xchg
jno
mov
test
aaa
dec
test
aas
jle
stc
fld
mov
scas
inc
daa
imul
or
dec
dec
fist
mov
sbb
xchg
pop
fstp
push
jno
fs
rcr
scas
cli
cwde
and
xchg
adc
inc
mov
mov
adc
in
out
out
or
pop
mov
test
les
retf
mov
sbb
adc
add
xor
dec
scas
out
adc
loope
pop
and
fst
rcl
and
leave
mov
hlt
mov
imul
pop
mov
fnstcw
sub
js
je
cmp
mov
outs
inc
push
or
les
xor
jb
stc
pop
loop
mov
(bad)
pop
push
es
cmp
jg
xchg
pushf
inc
sbb
pop
push
mov
loopne
cmc
or
pushf
push
push
outs
mov
pop
enter
call
jne
add
xchg
and
push
sbb
add
mov
adc
sub
dec
push
and
cmp
xor
xchg
stos
jg
frstor
in
push
jne
repnz
add
dec
stc
push
push
stos
pushf
inc
jae
push
xchg
inc
jmp
mov
movs
test
sysret
sar
imul
sub
ss
pop
(bad)
dec
xor
jmp
out
sti
shl
jmp
pop
es
outs
inc
cs
test
std
fistp
int
add
pop
xchg
mov
sub
jns
pusha
aad
mov
push
sar
bound
leave
push
dec
into
sar
mov
xlat
add
push
sub
shl
(bad)
in
sti
pop
das
mov
int3
jmp
bound
pop
mov
jmp
jl
popa
jb
int3
cmps
ja
push
out
sub
add
std
push
dec
test
bound
add
jmp
and
int
add
jo
cwde
(bad)
jne
fwait
lods
retf
sub
mov
mov
in
push
das
psllq
dec
mov
dec
mov
(bad)
aam
cwde
inc
cmp
in
mov
inc
dec
xlat
es
ds
adc
mov
pop
dec
mov
test
add
lock
test
daa
sbb
enter
aas
cmp
test
adc
out
retf
xor
scas
mov
cmc
es
fisubr
pop
jl
dec
pop
and
aad
mov
and
test
hlt
and
xchg
sbb
inc
sbb
adc
push
jecxz
add
xor
loope
cmovb
gs
push
jns
dec
pusha
movs
pop
mov
push
not
fxch
pop
or
jns
push
les
sar
popa
call
lock
mov
cmps
xor
push
loopne
pop
and
mov
add
ds
add
mov
mov
out
xchg
jbe
jmp
arpl
hlt
repz
mov
outs
mov
mov
mov
(bad)
push
adc
sti
push
loopne
mov
ror
push
mov
adc
add
or
mov
out
sub
push
mov
mov
sahf
pushf
or
push
jmp
pop
fnstenv
fild
outs
pop
retf
sbb
inc
mov
pop
ret
nop
inc
push
retf
mov
jl
sub
add
xchg
mov
repz
or
mov
sti
and
rcr
out
loop
adc
out
in
cdq
jp
pushf
push
sbb
add
inc
inc
aam
push
test
ret
sub
xchg
ffree
jnp
and
sub
pop
jmp
push
loope
sub
mov
dec
and
inc
test
in
jl
or
enter
nop
imul
inc
pusha
scas
(bad)
das
rcl
inc
sbb
out
enter
cmps
out
scas
cld
dec
sbb
pusha
sbb
pop
leave
jecxz
mov
jmp
leave
jno
out
xor
cmps
inc
pop
or
adc
mov
and
jge
xor
mov
cdq
std
mov
outs
push
mov
dec
dec
jb
ret
popf
cmp
sar
loopne
imul
lea
dec
sti
add
mov
clc
mov
dec
je
jne
sub
pop
mov
loop
clc
cmp
xor
pop
dec
nop
mov
inc
popa
push
pop
in
aad
mov
(bad)
call
pop
nop
imul
or
mov
xor
add
xor
pop
mov
dec
enter
sub
and
les
(bad)
shr
popa
rcr
xor
aam
fs
and
lahf
aaa
pop
xor
ja
retf
(bad)
cld
(bad)
(bad)
mov
mov
nop
or
push
sbb
add
xchg
imul
and
jge
scas
pop
jno
mov
sbb
pop
push
fisub
add
xor
cmps
fwait
pop
cmp
mov
mov
dec
stc
fld
sahf
leave
jmp
add
pop
mov
sub
int3
mov
repnz
idiv
xor
mov
lock
pop
sbb
inc
lods
dec
sbb
out
mov
jle
jp
mov
inc
or
mov
jo
cwde
lock
int
and
jns
mov
(bad)
cdq
push
mov
xlat
inc
ficom
lahf
div
cmp
xchg
push
xor
mov
jle
jbe
push
outs
mov
or
dec
sbb
sub
test
leave
add
(bad)
fcmovnu
xor
mov
repz
retf
dec
dec
lock
test
push
cdq
inc
xor
popa
jae
icebp
mov
or
adc
loop
pop
imul
lods
jle
inc
or
jno
jmp
(bad)
cmp
int
pop
add
mov
add
out
or
xchg
xor
cmp
cmps
adc
test
pop
lock
cmp
pop
inc
mov
push
mov
or
mov
cmp
pop
mov
(bad)
sti
cmp
push
dec
cmps
sbb
das
nop
pop
and
and
ss
call
jmp
xchg
xor
add
ret
repz
and
jo
xor
sub
xchg
jmp
or
ins
lods
lds
push
mov
mov
cdq
js
(bad)
iret
pop
cmps
adc
loopne
lods
mov
stos
outs
mov
pcmpeqw
test
inc
mov
add
mov
xor
and
ds
push
sub
cmp
xor
xor
and
js
js
out
idiv
ja
les
xchg
nop
in
(bad)
jbe
outs
mov
jne
lahf
sbb
in
inc
or
out
hlt
fstp
xchg
jne
xchg
std
jle
mov
jno
sbb
lock
xor
push
or
mov
shl
test
sub
aad
mov
sub
inc
nop
dec
ror
ss
jnp
cmps
mov
add
pop
lahf
adc
cmp
inc
iret
mov
mov
sub
jns
adc
lods
je
pop
jg
call
js
push
mov
mov
add
(bad)
loope
call
lds
pop
mov
shl
idiv
retf
les
rol
sbb
sub
jecxz
fstp
dec
inc
push
mov
cld
pop
xchg
mul
stos
(bad)
bound
mov
jo
or
and
ja
mov
inc
nop
loope
mov
push
ficomp
jg
cmp
pushf
push
inc
push
cld
sahf
and
lds
mul
mov
das
shr
out
les
mov
mov
xchg
aas
aad
stos
sbb
popa
xor
mov
call
sub
je
jnp
sbb
xchg
adc
xchg
ss
addr16
add
(bad)
cli
mov
nop
push
mov
mov
hlt
jo
jo
fisubr
push
mov
cmp
push
js
push
sti
in
nop
xchg
daa
int3
jbe
and
outs
pusha
xchg
xchg
xor
inc
pop
xchg
fld
mov
je
push
push
aas
pop
pushf
pop
add
data16
xchg
fsub
cwde
rol
js
int3
or
push
mov
retf
xchg
sbb
inc
dec
sbb
add
shl
xchg
in
push
sub
call
aam
push
add
inc
pop
cmp
std
sbb
nop
mov
dec
mov
jns
pop
xor
mov
test
fwait
mov
push
sub
inc
int
dec
cmp
out
xor
daa
xlat
repnz
lods
out
ss
pushf
cmp
and
fsubr
enter
rol
ficom
cdq
mov
sbb
jb
iret
push
in
inc
aad
bound
ret
cs
ss
es
sbb
int3
push
mov
xlat
mov
rol
sbb
retf
shl
dec
add
inc
(bad)
call
push
cmp
sti
push
adc
xchg
add
mov
cmp
mov
sbb
inc
dec
(bad)
int
adc
or
rcl
xadd
aam
jnp
pushf
mov
and
mov
cwde
dec
addr16
xor
stos
dec
jbe
xchg
arpl
je
sbb
int3
mov
movs
test
les
jo
das
outs
(bad)
out
stc
jle
sub
dec
test
pusha
lods
movs
xchg
mov
inc
test
fwait
pushf
in
retf
imul
mov
fadd
aam
dec
xor
xor
lahf
std
and
sub
(bad)
mov
stos
xor
and
push
xchg
adc
pop
or
call
(bad)
xlat
repz
pop
or
enter
mov
repz
push
sub
iret
pop
test
mov
test
fmul
sbb
cmp
js
mov
and
inc
sti
sub
jle
cmp
adc
scas
fsubr
xchg
xchg
jmp
std
stc
daa
scas
add
clc
mov
sbb
xchg
ins
(bad)
fxch
lock
leave
jp
in
xchg
popa
xchg
mov
lahf
js
stc
xor
ins
or
jne
push
int3
imul
es
sti
cmp
lea
into
(bad)
and
adc
imul
(bad)
daa
in
fld
push
inc
xor
pop
rcl
jns
(bad)
(bad)
xor
mov
imul
mov
popa
sbb
scas
arpl
xor
add
cdq
outs
dec
jno
(bad)
retf
rol
inc
imul
cmp
xor
xor
jns
mov
dec
push
mov
sbb
dec
cli
scas
scas
pop
dec
dec
mov
retf
adc
hlt
pop
push
enter
lea
mov
sbb
std
jo
adc
cmp
ret
push
ret
mov
enter
fisub
fbld
shl
pop
rcr
pop
in
xor
js
push
xchg
mov
cmp
nop
pop
or
ret
call
cmp
in
xor
or
jno
in
out
xchg
(bad)
fbld
inc
in
sbb
xchg
add
sbb
in
inc
daa
lods
sub
dec
(bad)
das
xor
or
sbb
mov
push
pop
int3
test
nop
or
fist
mov
dec
sub
push
rol
lea
sbb
cmp
fwait
rcl
push
fs
jecxz
xor
cld
dec
repz
nop
icebp
add
movs
loopne
ffreep
jne
(bad)
fidivr
push
cdq
leave
ret
pop
sbb
adc
mov
mov
add
mov
stos
dec
sbb
scas
ret
pop
xor
int3
addr16
mov
mov
push
es
mov
jo
jp
sbb
retf
cmps
sub
fist
mov
ins
and
xchg
jo
scas
adc
lahf
movs
popw
shl
mov
test
outs
in
cmps
out
sub
mov
scas
sbb
mov
cwde
mov
scas
mov
xor
inc
xchg
ret
addr16
adc
enter
pcmpgtd
mov
stc
in
adc
call
popf
xchg
daa
clc
pusha
push
add
outs
ds
cdq
cmp
inc
scas
mov
cmp
shr
rol
fnstcw
inc
(bad)
xchg
cmc
mov
mov
mov
pop
jmp
cmp
fsubr
jmp
repnz
test
in
sbb
add
leave
clc
bound
cmp
lock
and
adc
inc
lock
ret
popa
inc
scas
pop
stos
pop
pushf
ror
jne
cmp
push
jo
sbb
xchg
imul
adc
adc
fwait
jp
jae
popf
fwait
int
adc
mov
mov
sbb
mov
jae
xchg
mov
sub
sar
pop
cmp
loope
mov
sbb
bound
jmp
sar
mov
fcom
adc
xor
rcr
or
sub
add
loopne
mov
shr
nop
xor
jb
ror
(bad)
ins
aas
(bad)
jno
sbb
push
inc
pop
push
iret
xor
cli
xor
out
mov
pop
cmp
dec
jl
pop
push
sub
loopne
cmp
stos
fbstp
les
jnp
fldcw
mov
sub
ficom
fisttp
je
jnp
ds
addr16
mov
test
mov
imul
sub
pop
ss
dec
or
or
arpl
mov
sub
leave
dec
and
mov
outs
mov
and
push
out
jo
or
add
jne
inc
(bad)
ror
repz
sbb
ins
int3
sbb
fnstcw
xchg
ins
cmc
(bad)
fild
in
cmps
inc
seto
mov
pushf
je
sbb
xchg
pop
jbe
sub
mov
cmp
sub
adc
push
loope
sar
xchg
push
sahf
push
push
sub
jnp
jge
ins
shl
sahf
add
movs
adc
or
stc
fs
push
mov
ins
js
scas
jae
lahf
call
pop
cdq
mov
mov
mov
mov
or
fbstp
fistp
fidivr
adc
add
adc
jecxz
cld
and
arpl
fldcw
(bad)
xchg
neg
stos
mov
mov
test
pop
lea
jno
or
dec
call
dec
idiv
test
sub
push
and
ins
ficom
jo
repz
xor
sub
loope
fild
push
mov
or
pushf
cmp
xchg
shr
inc
mov
repnz
mov
jbe
pushf
jle
jl
lods
xor
or
mov
test
dec
loopne
nop
jno
mov
jle
push
jno
cld
and
fbld
push
push
push
loope
or
outs
sub
add
cmp
and
cmps
cdq
xchg
adc
mov
loope
push
xchg
sbb
xchg
and
jp
xor
mov
or
sbb
inc
mov
inc
sub
inc
call
pop
inc
lods
les
ss
jnp
fild
sub
ins
imul
iret
pop
mov
push
clc
loopne
lods
das
mov
repnz
pop
jbe
xor
push
fdivr
pop
sub
loop
aam
mov
inc
inc
mov
outs
mov
mov
mul
xlat
ret
pop
jecxz
push
pop
mov
mov
inc
adc
push
push
leave
sbb
mov
jne
sbb
or
mov
fisub
inc
mov
hlt
into
pusha
outs
in
hlt
and
pop
cmp
ins
inc
mov
cmp
in
lahf
mov
push
mov
ret
and
stc
mov
sbb
jmp
mov
pop
jmp
mov
sbb
push
jbe
into
mov
ins
xlat
jle
xchg
add
mov
jmp
in
mov
add
iret
cld
(bad)
pusha
int
(bad)
xor
cmp
fxam
mov
movs
ds
adc
daa
pop
mov
sbb
pop
xchg
dec
loopne
gs
jmp
lods
inc
in
enter
cmp
(bad)
into
je
out
add
cmps
lods
jmp
rcl
pushf
sub
out
sbb
out
std
mov
mov
push
aaa
loope
dec
jecxz
push
xchg
sbb
fdivr
dec
iret
add
adc
test
jmp
push
pop
ror
push
shl
mov
mov
fdiv
call
gs
cwde
loopne
mov
dec
jne
icebp
or
in
inc
fdivr
jae
xor
adc
(bad)
fstp
push
add
inc
adc
stos
xor
call
rcr
nop
sahf
daa
push
out
mov
ret
test
movs
dec
inc
lods
mov
adc
mov
or
in
pop
or
out
and
pushf
pop
sub
pop
inc
dec
jmp
les
or
je
or
test
enter
push
dec
mov
sub
add
adc
pop
pop
pop
push
cmps
iret
mov
adc
pop
xchg
jns
xor
cli
adc
nop
jge
sbb
inc
mov
les
dec
lods
in
ins
mov
les
add
pop
sub
adc
std
ja
jle
ret
dec
mov
mov
fcomp
(bad)
shl
jo
mov
cs
fiadd
cmp
(bad)
cmp
mov
mov
cdq
scas
lods
xor
popf
add
pop
xchg
mov
stos
lahf
stos
repz
in
outs
outs
cmp
mul
aad
cmps
mov
sti
sahf
je
out
je
fs
dec
out
dec
out
mov
cmp
ins
mov
jb
lahf
pushf
clc
xor
and
popa
popf
cwde
cli
addr16
or
scas
mov
aas
(bad)
movs
mov
mov
test
xor
jbe
inc
inc
dec
adc
push
lods
sub
inc
js
rcl
cmp
clc
enter
(bad)
pushf
out
ss
in
stos
es
clc
aam
sbb
in
retf
(bad)
cld
dec
jmp
iret
addr16
fimul
pop
cld
hlt
dec
add
mov
jge
ja
sub
xchg
mov
gs
clc
dec
adc
test
sub
mov
inc
push
mov
(bad)
pop
or
loopne
jbe
push
inc
dec
sbb
ins
sub
test
push
mov
jnp
in
sbb
ret
mov
iret
fld
mul
mov
test
inc
enter
pop
cmp
mov
sub
jle
sbb
nop
mov
out
add
icebp
gs
sbb
inc
and
call
push
mov
sar
clc
lahf
addr16
add
push
lahf
xchg
add
pusha
lods
dec
mov
je
repnz
push
dec
jmp
cmp
xchg
in
push
out
dec
fnstsw
out
mov
icebp
loope
in
imul
pop
cpuid
fbld
pop
js
adc
mov
push
inc
fldenv
into
loope
rcr
mov
push
dec
mov
jp
cli
enter
mov
push
stos
mov
cmp
cmp
and
and
nop
jmp
lea
in
pop
fcmovnu
pushf
mov
out
jb
cwde
push
test
loop
aad
aas
aam
and
xchg
out
sub
or
mov
ss
inc
inc
sbb
imul
mov
xchg
adc
call
retf
test
in
jb
xlat
dec
xlat
xor
loop
dec
mov
pop
cmp
inc
lods
les
push
call
ss
and
std
aad
iret
adc
hlt
push
pop
fnstcw
inc
out
gs
fwait
add
fcmovne
(bad)
(bad)
outs
movs
push
std
xchg
ror
in
neg
push
dec
jle
rcr
xor
sbb
xor
and
mov
das
clc
pop
(bad)
scas
movs
lock
sub
(bad)
pusha
je
and
adc
or
sahf
cmp
les
aas
call
popf
shr
jmp
and
or
push
ins
(bad)
arpl
not
ficomp
aad
xchg
repz
dec
inc
jae
push
push
xchg
mov
jmp
adc
aas
push
dec
jg
sahf
fwait
rcl
xor
xor
into
test
mov
jmp
dec
sbb
dec
and
adc
nop
rcl
or
or
push
fdivr
pop
out
pusha
and
ins
adc
jnp
cmp
loope
add
dec
mov
adc
arpl
arpl
and
int
ss
dec
mov
mov
xor
cld
xor
or
xor
inc
cld
cwde
xchg
xlat
fnstsw
nop
xor
push
fst
in
inc
cmp
fwait
not
push
ret
dec
out
mov
sti
ret
imul
mov
add
cmps
dec
adc
mov
push
or
xor
aad
adc
jnp
cmp
(bad)
loope
sbb
movs
or
push
xchg
push
pushf
ds
outs
hlt
pop
add
out
push
adc
out
sub
xlat
(bad)
cmp
lgs
cmp
xor
sti
mov
daa
mov
jp
mov
xchg
adc
mov
add
mov
std
aas
(bad)
mov
xchg
add
mov
dec
mov
imul
cld
dec
imul
sub
and
fnsave
sub
ret
mov
fild
lods
dec
jmp
stos
outs
or
leave
test
pop
retf
adc
mov
mov
cli
jl
imul
stos
mov
dec
(bad)
in
inc
push
xchg
hlt
scas
das
sar
shl
jns
mov
icebp
mov
daa
jg
cmp
mov
adc
adc
jecxz
adc
inc
xchg
cmc
sbb
shl
jnp
mov
pop
inc
pop
js
iret
ja
ror
clc
xchg
fld
loopne
cli
fs
stc
jo
jp
xor
xchg
jl
bound
dec
arpl
sbb
pop
nop
sbb
rcr
sbb
add
fs
pop
les
mov
div
push
sbb
daa
push
call
shr
nop
ss
ss
xchg
sub
xor
cld
ret
rcl
shl
jnp
mov
ins
pop
enter
loope
pop
mov
je
jnp
cld
mov
cli
pop
lock
pop
add
and
inc
xchg
inc
dec
or
inc
or
jno
xchg
mov
push
gs
(bad)
jo
or
jb
fist
push
loopne
and
shl
imul
or
lahf
iret
pop
rol
xchg
sbb
mov
adc
jno
les
mov
pop
jno
sub
lea
icebp
lods
mov
push
(bad)
dec
adc
lea
xchg
push
das
aas
inc
or
cs
or
out
pop
popf
mov
xor
adc
in
sub
dec
or
pusha
push
sahf
pop
adc
(bad)
jle
bound
xchg
mov
push
xchg
jl
scas
pop
cmps
shl
push
fdiv
retf
jle
mov
ficomp
mov
mov
pop
add
pop
sub
mov
cli
shl
pop
popa
into
mov
nop
leave
loope
aas
loope
xchg
bnd
add
ss
je
rcr
sub
scas
inc
shr
fcom
jp
and
mov
in
pop
mov
daa
mov
jg
jmp
dec
pop
rol
fwait
sar
pusha
inc
lea
inc
imul
mov
aad
jle
add
inc
cmc
xchg
xor
(bad)
neg
cli
pop
mov
(bad)
repz
inc
scas
mov
aaa
ds
or
sar
outs
and
xchg
mov
outs
(bad)
pushf
inc
push
add
xchg
jmp
stc
ss
stos
popa
xchg
dec
push
(bad)
cmp
push
aam
push
jge
shr
cli
jmp
xor
push
push
imul
xchg
test
mov
out
repz
sbb
sub
nop
outs
push
out
pop
loop
xor
and
jg
adc
dec
ficom
jl
cld
in
and
mov
mov
mov
push
fdivr
pop
js
xchg
popf
addr16
in
add
xor
daa
jmp
shr
dec
rcr
fistp
rcr
push
stc
xchg
or
mov
mov
mov
and
rcl
adc
lahf
data16
arpl
sub
imul
inc
mov
jno
push
ret
push
jno
les
mov
cmp
jno
xor
jae
sbb
pop
jmp
inc
(bad)
cmp
add
cmp
jl
clc
in
repnz
sub
dec
mov
idiv
mov
mov
dec
idiv
std
xchg
mov
scas
imul
sahf
movs
mov
mov
in
dec
das
outs
pop
mov
add
fmul
retf
out
loopne
ret
fcomp
pop
je
xor
stc
or
push
mov
mov
lahf
iret
mov
ftst
stos
mov
sub
cmp
xor
int3
cmp
fs
mov
into
adc
or
scas
retf
push
push
pop
cmp
and
sti
repnz
gs
outs
push
mov
retf
hlt
pop
add
(bad)
sbb
xor
jp
dec
add
ins
mov
pop
mov
xor
adc
dec
mov
jo
lea
les
inc
scas
jmp
lods
mov
mul
enter
inc
dec
sti
bound
xor
add
and
and
and
push
inc
fld
(bad)
mov
jae
xchg
adc
aad
jg
dec
mov
dec
inc
sahf
push
xchg
fimul
dec
repnz
ins
add
(bad)
sar
mov
inc
push
jg
ins
arpl
ret
inc
cmp
retf
push
xor
mov
jo
lods
hlt
retf
outs
sub
pushf
aas
dec
in
leave
(bad)
jmp
ret
mov
cmp
out
jno
adc
xchg
movs
out
xor
lods
mov
test
ret
jnp
push
jno
clc
cmp
inc
ds
into
xchg
loopne
xchg
pop
outs
pop
out
cmp
lds
push
int
pop
in
js
or
mov
cdq
xor
adc
push
pop
and
aad
jmp
push
pop
mov
xchg
xchg
cmp
adc
sbb
sbb
lods
mov
xor
xchg
and
cld
inc
cmp
xor
push
mov
adc
iret
leave
(bad)
out
mov
push
pop
push
pop
xchg
add
rcr
stc
lahf
pusha
into
rcl
push
(bad)
pop
gs
pop
hlt
call
cmp
cwde
inc
(bad)
pop
cmps
mov
icebp
pop
hlt
scas
xchg
push
popf
cmps
lsl
jp
lods
sub
(bad)
ss
test
cmp
inc
fldcw
mov
add
ds
out
push
stc
or
xchg
ret
xchg
fdivr
inc
push
ja
jp
and
rol
ins
dec
fcmovne
fnstcw
inc
jno
fsub
or
mov
repnz
repnz
jb
stos
pop
lahf
xor
push
(bad)
xchg
xchg
movs
jmp
ins
(bad)
xlat
imul
ins
jge
xor
cmp
pop
jecxz
aam
dec
arpl
fs
xchg
js
in
adc
retf
jecxz
push
(bad)
repnz
nop
sahf
xlat
add
inc
push
sub
ror
shr
pop
sti
or
bound
out
outs
push
jae
imul
mov
ret
sbb
aad
inc
lods
fdivr
iret
inc
ja
lods
js
ss
xchg
loop
or
and
mov
js
(bad)
mov
sbb
mov
int
lahf
pushf
inc
dec
fistp
mov
xchg
pop
mov
or
stos
mov
jne
mov
dec
cdq
adc
mov
and
adc
(bad)
xor
sbb
mov
adc
mov
call
shr
retf
outs
outs
dec
repz
nop
cmps
(bad)
and
fst
jmp
pop
inc
push
gs
jne
mov
xlat
sbb
movs
jle
fwait
jge
rcl
pop
xchg
mov
jmp
xor
push
xchg
aaa
pop
retf
in
pop
test
or
dec
inc
loope
mov
mov
mov
dec
cmps
stos
es
inc
jecxz
mov
jmp
stc
nop
cmp
push
mov
adc
ins
cmps
dec
and
retf
xor
out
sub
or
xchg
add
mov
mov
push
rcr
imul
sbb
out
add
jnp
ja
jb
out
xor
inc
cmp
popf
and
ret
inc
add
sbb
nop
push
sar
popf
mov
movs
cmp
jge
push
adc
cdq
pop
cmp
xlat
pop
dec
jo
push
push
fist
sub
push
sahf
dec
dec
div
stos
push
movs
iret
sbb
dec
or
jo
call
jge
mov
or
ds
fwait
or
pop
jae
div
pop
scas
pop
test
ins
in
fcomi
shl
out
sbb
repz
sbb
add
push
push
loop
mov
bound
daa
and
fistp
popa
sbb
ret
test
pushf
mov
inc
les
jmp
not
inc
(bad)
(bad)
xor
mov
fxch
mov
gs
and
inc
out
jne
(bad)
cmp
sbb
inc
pop
xor
in
mov
call
push
add
or
pop
test
mov
or
test
mov
cmp
xor
fist
pop
pop
fucomip
in
retf
repnz
xor
mov
add
mov
sub
adc
jg
xlat
addr16
xchg
mov
aad
jnp
data16
inc
and
leave
jge
xchg
dec
ds
jge
pop
retf
jne
mov
and
ss
mov
mov
ret
je
jns
sub
or
or
stos
fcom
xor
mov
cli
jb
lods
cmp
xlat
ret
xchg
nop
xor
dec
(bad)
mov
xchg
test
adc
loopne
cmp
xchg
pop
push
pop
sub
add
adc
std
(bad)
outs
mov
cmps
push
inc
sbb
retf
aas
int
push
int
sub
add
mov
adc
movs
test
mov
sar
inc
xchg
iret
ss
jns
popa
pusha
mov
popf
adc
rol
or
lock
sbb
pop
mov
imul
scas
rcr
mov
call
mov
jne
(bad)
stc
or
rcl
mov
gs
jp
xor
dec
pusha
adc
mul
imul
dec
scas
jp
icebp
mov
movs
retf
addr16
pop
sti
dec
retf
imul
retf
lahf
das
cmp
pop
into
or
adc
repz
mov
jno
inc
fisubr
sbb
js
pop
movs
jl
mov
dec
adc
scas
ror
push
add
cmps
push
sub
inc
pop
xlat
pop
leave
dec
add
sub
pop
movs
aam
add
mov
or
push
aam
sub
pop
cmp
and
cld
mov
mov
dec
xlat
aad
std
dec
pop
or
loop
mov
stos
(bad)
iret
jmp
jle
sub
nop
inc
sar
xchg
js
(bad)
xor
adc
cld
adc
sahf
stos
fnstsw
cmp
ins
adc
std
rcl
xchg
push
out
xor
jno
pop
stos
sbb
and
mov
pop
fadd
dec
test
arpl
add
call
sbb
add
sbb
and
cwde
psubw
mov
mov
sbb
in
stos
pushw
clc
or
sub
daa
xor
jb
sub
mov
cdq
daa
xor
and
inc
data16
jp
cmc
or
xchg
xchg
pop
cmp
pushf
pop
arpl
iret
cmps
xor
jmp
imul
cmp
add
mov
ret
and
jb
push
ins
sahf
inc
jbe
ror
push
ins
mov
jns
test
jno
hlt
out
bound
repz
jge
hlt
jmp
mov
and
(bad)
mov
dec
xor
ret
cmp
cmp
cwde
mov
cmps
outs
popa
or
pop
xor
add
daa
pop
ret
idiv
arpl
pop
inc
jg
xor
inc
mov
in
push
pop
push
fwait
dec
rcl
mov
xchg
cmps
jl
sub
mov
or
mov
mov
xchg
push
not
pop
lds
adc
xor
push
dec
call
sahf
sub
movs
sub
adc
adc
xor
add
inc
int
aaa
cdq
mov
dec
pop
mul
mov
ins
jb
jns
cwde
fbstp
mov
sub
add
sub
int
cmp
push
test
mov
fldcw
push
movs
or
(bad)
fwait
or
push
pop
sbb
xchg
leave
sbb
xor
ds
pusha
cmp
mov
inc
mov
sub
fsub
mov
push
call
dec
cdq
xchg
rcr
aam
jp
push
or
psrad
movs
mov
ins
jge
xchg
out
or
and
sub
mov
data16
popf
push
scas
mov
lahf
pop
js
(bad)
push
lds
mov
push
outs
xchg
fisttp
icebp
cmp
test
es
cmps
pop
std
lahf
mov
push
pop
pop
push
push
inc
gs
push
mov
mov
cmp
mov
sub
or
sahf
or
cwde
mov
inc
fnop
aad
ins
das
(bad)
das
scas
adc
daa
pushf
push
fs
sbb
jae
lods
je
or
sahf
out
jl
in
clc
add
sub
imul
ror
sbb
mov
push
out
retf
xchg
sub
jnp
xchg
xor
sub
adc
jne
mov
cmps
lock
jnp
movs
or
xchg
dec
iret
sub
clc
aas
ret
fs
mov
imul
sbb
mov
jl
loopne
in
bound
or
sub
pop
dec
loope
xchg
mov
cdq
js
pop
repz
mov
test
stc
adc
mov
mov
pop
lock
sar
in
pop
mov
call
ret
cwde
mov
es
mov
jne
into
test
sbb
cmp
retf
(bad)
sbb
jmp
retf
outs
in
adc
add
frstor
in
jbe
(bad)
jmp
sbb
pop
aad
jecxz
or
add
aad
ins
add
sbb
icebp
mov
add
mov
jne
sub
sbb
push
cmp
xor
sub
test
pushf
test
rol
test
addr16
lods
pop
mov
sbb
movs
retf
add
gs
inc
xor
sub
xchg
int3
xchg
lahf
xor
mov
nop
and
cmps
scas
dec
mov
sahf
inc
dec
outs
xchg
xchg
(bad)
das
dec
mov
fsub
xchg
xor
push
push
dec
and
popa
sbb
cli
inc
mov
push
test
jmp
out
loop
and
pop
adc
in
int
data16
cmps
xchg
cmps
cmp
(bad)
xchg
jg
mov
xor
cmp
mul
lock
ins
out
cmp
icebp
sub
mov
push
rcl
cli
pop
dec
xor
daa
mov
sbb
xchg
cdq
jecxz
das
xchg
or
pop
lock
mov
mov
xchg
clc
(bad)
sub
xchg
pop
daa
mov
outs
es
or
and
addr16
jae
xchg
out
cmp
pop
mov
push
sub
inc
mov
ins
ror
jno
imul
adc
std
pop
popf
stos
idiv
cmp
mov
lods
ror
stos
sub
sbb
or
jg
add
push
mov
dec
pop
mov
ins
and
mov
xchg
sbb
jo
icebp
ror
out
dec
lods
scas
add
enter
xor
(bad)
lahf
mov
xchg
mov
push
movs
mov
iret
sub
push
xor
fisttp
fcom
xor
mov
test
loope
push
xchg
sbb
or
fs
cdq
mov
pop
xor
movs
cli
rol
cmps
seta
dec
sbb
jp
pop
push
cmp
sub
cwde
pushf
js
jb
sar
fcom
or
iret
or
das
daa
mov
xchg
and
iret
pop
sbb
or
test
ficom
mov
out
stos
jmp
frstor
sbb
or
push
jge
ror
cs
sub
add
aad
and
inc
pop
lods
and
push
mov
loop
ret
dec
adc
inc
mov
mov
xchg
lods
xor
fistp
dec
jae
ret
fsubr
lods
ins
ucomiss
lods
int3
mov
dec
fst
js
mov
leave
cmp
cwde
xchg
aaa
adc
mov
popa
shl
xchg
out
das
push
push
pop
inc
enter
dec
mov
scas
adc
cli
sets
mov
jcxz
sbb
or
cmps
push
pop
add
pusha
mov
cmp
mov
mov
mov
add
in
test
std
pop
add
mov
xchg
je
jg
mov
xor
fild
sbb
jp
xchg
jmp
imul
mov
jno
enter
pop
mov
push
rcl
cmovl
shr
jo
add
cmc
outs
xchg
xor
push
loopne
int
push
inc
push
aaa
jge
test
in
push
pop
jb
mov
pop
xor
mov
inc
jbe
mov
ss
jnp
dec
(bad)
loope
xlat
mov
sub
xor
and
repz
adc
ret
jecxz
xor
mov
adc
lods
fisub
(bad)
out
xor
mov
inc
pop
cdq
test
hlt
xor
xchg
cmp
add
add
add
dec
dec
mov
fist
inc
jmp
inc
sbb
gs
or
arpl
add
xor
mov
mov
je
xor
sub
fisttp
jo
add
in
xor
fld1
inc
cs
push
pop
adc
mov
aad
aas
les
shr
popa
sbb
clc
pop
ret
xor
fistp
cmp
test
es
push
xchg
enter
mov
sub
cwd
and
push
or
or
and
pop
cli
jmp
mov
sub
jo
fstp
mov
or
xchg
out
call
add
(bad)
lods
(bad)
(bad)
pop
mov
push
stos
add
fisubr
add
int3
cmp
jg
jge
int3
sbb
dec
push
jne
adc
pusha
out
push
dec
or
xchg
or
cmps
push
push
int
push
inc
push
jmp
ror
inc
in
mov
pop
rol
lods
sbb
in
loop
ins
enter
das
jae
jl
cmc
pop
mov
ret
imul
int3
jle
stos
or
imul
jno
test
mov
adc
pusha
jnp
lods
xlat
cwde
mov
push
xchg
repz
dec
cmp
adc
mov
pop
loopne
dec
pop
adc
jmp
adc
inc
sub
mov
or
movzx
ror
outs
xchg
lahf
pop
(bad)
jecxz
repnz
pop
xchg
mov
ss
jno
adc
mov
mov
enter
pushf
aam
inc
sub
add
dec
or
adc
pusha
mov
retf
outs
ds
scas
rol
xor
mov
inc
out
xchg
lds
mov
push
retf
jo
xlat
fld
rol
dec
pop
sbb
or
ret
jmp
dec
addr16
push
fwait
mov
(bad)
aam
rol
dec
mov
push
or
mov
addr16
pop
pop
outs
mov
fld
push
or
dec
in
push
fsubr
ret
xor
aas
jmp
cmps
xor
dec
mov
xchg
add
or
aam
push
mov
pop
sub
mov
xchg
lods
inc
mov
push
int
js
sub
xor
xor
inc
sbb
mov
jb
mov
retf
pop
lods
inc
leave
fbstp
pop
or
mov
add
pop
mov
lock
xor
mov
pop
js
sbb
cwde
pop
into
inc
cs
jmp
sbb
jb
mov
dec
(bad)
ds
xor
and
add
mov
mov
mov
mov
or
sub
(bad)
jmp
stos
test
ss
mov
mov
rcr
mov
(bad)
push
imul
xor
div
cmp
lods
imul
int
or
bswap
mov
repnz
or
push
mov
push
xchg
and
sbb
lods
enter
hlt
jnp
xchg
inc
int
sahf
xchg
xchg
ins
cmp
and
in
lahf
sub
adc
icebp
push
inc
jnp
push
mov
aam
scas
in
sub
cmps
cmp
ja
jnp
or
mov
adc
cmp
mov
and
or
sub
int3
loop
xor
out
je
dec
mov
xchg
cmp
jne
jg
fistp
adc
cs
je
sub
stos
adc
jne
sub
sbb
rol
fst
mov
and
adc
int3
mov
fbstp
gs
add
cmc
adc
popf
je
pop
icebp
xor
cmp
(bad)
popf
mul
sbb
mov
or
stos
inc
test
pusha
mov
sbb
xchg
jbe
repnz
es
fidiv
pusha
sbb
add
daa
imul
pop
and
or
or
std
fisubr
push
out
xchg
xchg
push
jo
js
add
dec
cmp
add
or
int3
addr16
pop
retf
and
pop
retf
mov
loop
inc
out
aas
adc
jp
call
rcl
test
xor
pop
dec
psrlq
sti
xchg
pop
mov
push
or
push
jg
test
cld
or
xchg
pop
mov
jo
sbb
frstor
mov
sbb
fisttp
inc
and
jbe
fild
sti
push
sbb
ror
inc
neg
mov
xchg
in
loopne
or
xor
loope
sbb
mov
mov
aaa
ror
xchg
add
jnp
jo
addr16
add
sbb
cmps
sbb
sub
add
rol
sub
mov
or
jp
ins
push
stos
test
nop
sub
addr16
push
iret
jl
pop
iret
sbb
push
(bad)
adc
sub
int
pop
mov
out
push
pop
popa
cmp
sbb
(bad)
movs
mov
(bad)
pop
mul
mov
mov
arpl
mov
xchg
int3
mov
das
pop
out
repnz
sbb
pusha
pop
addr16
mov
pop
icebp
cmps
mov
mov
imul
pop
mov
sub
jb
mul
std
adc
(bad)
jl
dec
repnz
cmp
shl
dec
cmc
jge
push
inc
lds
jb
mov
mov
test
or
std
out
mov
ja
fcomp
dec
int
jge
jne
ret
sub
push
adc
xchg
xor
popf
retf
cmp
push
daa
mov
xchg
mov
push
int
cmp
dec
jno
imul
ds
jnp
in
inc
mov
sub
mov
or
ins
(bad)
xor
(bad)
jne
ja
mov
xchg
aad
and
mov
jp
mov
xor
fcomi
sbb
leave
or
adc
jle
adc
hlt
scas
mov
adc
scas
mov
adc
mov
pop
int3
scas
and
cmp
ret
enter
rcl
fs
nop
fild
aad
sti
(bad)
xor
aam
jno
mov
test
(bad)
xchg
xor
pop
fistp
jno
jbe
mov
das
push
adc
bound
loopne
pop
(bad)
mov
push
inc
sbb
sbb
add
cmp
(bad)
ins
sbb
mov
add
cmc
push
or
retf
fldenv
aas
adc
retf
lock
shl
inc
add
ins
sub
loopne
mov
cmp
xchg
cmc
add
aas
aaa
push
icebp
pop
xchg
pop
mov
or
out
and
mov
xchg
xlat
mov
inc
dec
test
pop
jnp
stos
push
call
test
test
mov
sub
jle
jo
mov
pop
inc
cmp
(bad)
cld
and
je
cdq
jno
push
push
stos
(bad)
fnstsw
inc
cmp
mov
test
call
inc
mov
pop
es
int3
xchg
sbb
inc
pop
retf
enter
mov
jae
or
retf
into
adc
js
lods
leave
out
retf
fidiv
les
out
push
nop
test
or
loopne
inc
loope
sbb
shl
fisubr
fadd
rol
neg
mov
call
push
dec
retf
push
add
push
push
or
mov
ret
bnd
cmp
jns
pusha
lahf
fcomp
into
xchg
sbb
std
imul
fcom
dec
cmp
ret
dec
sub
(bad)
inc
loopne
or
adc
(bad)
xor
sbb
lods
mov
jmp
stos
mov
dec
dec
add
pop
pop
cmp
cmp
(bad)
mov
bound
test
cmc
mov
lock
pop
daa
push
mov
in
(bad)
dec
lahf
adc
lods
call
(bad)
retf
sbb
clc
adc
(bad)
mov
sbb
mov
je
mov
cli
add
jg
pusha
cld
test
inc
lea
mov
loop
inc
mov
cmps
call
ins
add
jo
mov
shr
sar
test
rol
lock
jp
retf
xchg
or
mov
inc
repnz
(bad)
and
fisttp
int
sub
add
ret
cld
push
jne
sahf
test
and
xchg
jmp
and
adc
cmps
aam
scas
outs
fisttp
xor
add
rcr
test
lods
popf
pop
pop
push
out
out
sbb
xor
leave
mov
ins
add
rcl
add
mov
sbb
or
leave
mov
mov
loop
out
dec
lock
(bad)
sub
stos
sub
mov
jmp
(bad)
mov
std
push
leave
(bad)
ficomp
mov
sub
or
and
scas
cmp
xchg
adc
lods
dec
jmp
mov
arpl
add
inc
inc
cmc
cmps
cmp
or
clc
repnz
mov
or
dec
jge
xchg
push
dec
ja
dec
jnp
inc
dec
xor
or
in
cmp
retf
cmp
lock
xor
(bad)
out
test
dec
cmp
repz
inc
dec
hlt
xor
pop
or
(bad)
mov
xchg
stc
jb
xchg
bound
retfw
fwait
rcl
add
(bad)
(bad)
in
xor
jecxz
aad
adc
ret
mov
sbb
sub
dec
sbb
in
daa
test
fs
call
rcr
pop
scas
test
adc
ret
fldcw
jne
cmps
pop
add
ins
pop
add
push
inc
sub
retf
out
ins
sbb
push
movs
jno
xchg
sbb
(bad)
xor
dec
pop
xor
icebp
test
dec
add
mov
sahf
outs
imul
rol
imul
mov
retf
test
arpl
adc
hlt
sub
aad
hlt
gs
cmc
dec
test
dec
lods
cdq
pop
cld
inc
data16
or
addr16
out
lods
pop
mov
dec
adc
mov
mov
mov
or
mov
out
stos
(bad)
jp
jae
iret
xlat
scas
out
mov
sbb
idiv
in
or
add
dec
mov
das
and
mov
hlt
mov
je
mov
xchg
pop
into
into
es
adc
push
inc
dec
stc
pop
mov
mov
fldenv
xchg
push
sub
enter
fild
icebp
outs
mov
jo
dec
das
test
mov
inc
pusha
daa
jge
xor
lea
push
leave
shl
xor
mov
ins
mov
cld
sbb
aam
sbb
jecxz
adc
xor
loop
jl
mov
mov
test
lods
imul
push
ss
(bad)
retf
push
aaa
sub
push
fcmovu
test
cmp
fs
add
pop
xchg
ins
adc
xchg
sub
cwde
ficom
push
mov
ja
leave
or
add
out
stos
xchg
xor
mov
dec
push
sub
fldcw
cli
pop
icebp
imul
lds
into
add
pop
lods
xchg
sbb
out
cmc
sahf
mov
test
call
sub
mov
xchg
xlat
or
xchg
inc
cmps
mov
mov
test
mov
mov
repz
cmp
cwde
addr16
mov
pushf
shl
outs
loopne
pusha
push
cmp
push
cmp
cmp
mov
fcmovne
std
in
mov
pop
fwait
stc
lahf
and
and
in
and
pusha
sahf
jbe
inc
xchg
int
or
iret
mov
das
mov
pusha
ins
leave
lock
mov
ror
sti
cli
xchg
daa
cmp
xor
pop
and
hlt
in
es
add
inc
xchg
push
pop
mov
jo
mov
mov
add
(bad)
xchg
sub
loope
mov
test
test
cld
cli
ds
in
mov
js
out
imul
adc
ret
aad
and
dec
sar
pop
scas
(bad)
push
jo
lea
dec
inc
es
mov
rcr
mov
and
ret
mov
ja
fs
inc
call
ret
or
add
add
fwait
sub
popa
mov
fmul
sub
pop
add
call
jo
call
stos
pop
pop
test
add
ret
imul
push
clc
and
popa
das
pop
xor
icebp
xchg
retf
aas
add
js
loop
xlat
pop
hlt
sbb
jne
push
adc
xor
fst
mov
sub
int
addr16
xchg
jbe
mov
xor
fisub
pop
test
(bad)
movs
test
loop
aaa
mov
nop
xor
mov
int
xor
and
push
ss
sbb
sub
mov
fsubr
push
lods
inc
(bad)
mov
adc
add
test
shl
mov
into
sbb
or
inc
repz
add
scas
mov
jb
fnstsw
jb
jno
push
cmp
or
pop
sub
retf
stc
xlat
add
jge
hlt
mov
das
(bad)
dec
(bad)
push
call
or
or
pop
ins
dec
or
mov
mov
jae
lahf
in
or
mov
mov
scas
stos
add
test
rcr
push
int3
pop
ins
mov
(bad)
pop
adc
pop
imul
pop
in
gs
(bad)
mov
xor
nop
mov
ud2
push
adc
push
add
mov
out
or
and
add
mov
pop
icebp
out
rcl
pop
sub
add
(bad)
pop
xor
pop
clc
cmp
jbe
push
jecxz
and
in
aad
jo
cwde
stos
jmp
imul
dec
add
in
xchg
xlat
push
adc
movlps
jae
rcl
xor
mov
fwait
jne
mov
jo
mov
mov
xchg
retf
sub
mov
inc
cmps
sub
pop
daa
fcmove
retf
movs
jmp
(bad)
fstp
(bad)
sar
dec
out
pop
pop
cmps
add
(bad)
sub
or
mov
push
aaa
mov
pop
js
jbe
push
jle
push
adc
int
rcr
inc
ss
ja
outs
or
sub
jno
into
add
cmc
inc
or
aad
adc
pop
outs
in
inc
icebp
fst
cmp
fmul
mov
dec
cli
outs
(bad)
xchg
jecxz
add
shld
dec
loop
inc
mov
sbb
out
(bad)
in
pop
repz
sbb
stos
pop
rcl
in
add
cmp
dec
mov
lock
in
(bad)
mov
movs
mov
pusha
push
xor
sbb
push
jmp
imul
ss
sahf
pop
or
adc
aad
adc
gs
pop
test
dec
(bad)
mul
stos
leave
pop
cli
jb
inc
(bad)
sbb
stc
xchg
aad
cdq
sbb
pusha
xor
lea
movs
aaa
ror
pushf
jle
popa
ins
pop
sub
fadd
test
dec
mov
cli
pop
pop
jp
xchg
cmp
adc
or
cwde
jg
fldcw
test
iret
push
push
xchg
inc
outs
mov
test
nop
mov
xchg
movups
sahf
pop
cs
mov
xchg
and
xchg
ss
inc
jo
xor
loopne
mov
dec
aad
mov
adc
push
xchg
jb
cli
pusha
cmp
sti
inc
adc
add
retf
dec
out
add
cmps
imul
push
les
in
(bad)
icebp
add
jge
ins
jge
and
inc
adc
mov
or
sub
xor
jmp
shl
push
leave
sahf
pop
popf
and
push
mov
out
test
pop
push
and
fnsave
xlat
repz
loopne
pop
push
mov
in
nop
pop
jno
nop
cmc
mov
jecxz
inc
or
inc
dec
cld
mov
jle
jl
xor
jns
jbe
lock
cmc
xchg
pop
xchg
fisubr
jns
pop
ins
arpl
jbe
dec
jmp
push
jmp
addr16
or
pop
mov
repnz
sti
loopne
les
fistp
pop
shl
mov
scas
pop
mov
sbb
jns
inc
movs
inc
mov
addr16
aaa
movs
and
jmp
cmp
aam
cs
test
in
sbb
inc
jmp
pop
and
push
fs
jmp
out
mov
push
add
push
jb
ficomp
jg
cmp
and
loop
fstp
cwde
add
lods
push
lahf
out
or
cli
(bad)
ins
pop
adc
repz
cmp
fiadd
sub
cmp
aas
es
cmp
inc
sub
xlat
sub
add
xchg
jo
xor
stos
imul
jne
or
cmps
in
(bad)
xchg
adc
push
in
push
adc
out
push
iret
inc
push
movs
pop
dec
jno
test
inc
(bad)
sub
xor
je
fwait
inc
xchg
add
fbstp
out
xor
fwait
push
mov
imul
rol
cmp
js
xchg
shl
cdq
in
mov
aas
sahf
xchg
scas
sar
(bad)
std
add
mov
lahf
dec
ret
or
jno
stos
rol
lods
jl
mov
retf
mov
inc
sahf
les
jl
cs
aas
es
dec
sub
mov
pop
adc
stos
push
outs
jl
aaa
scas
int3
aas
fbstp
jno
(bad)
inc
ja
mov
xchg
dec
xchg
jge
fcom
xor
mov
push
test
sbb
pop
out
lock
xor
psrad
retf
pop
mov
mov
(bad)
jle
aam
jbe
inc
call
push
(bad)
call
inc
inc
or
lea
in
cmp
adc
fidiv
pop
xchg
lods
ja
clc
mov
or
mov
test
rcl
mov
(bad)
ja
sbb
push
or
xchg
sbb
lods
sahf
ds
mov
adc
sbb
and
cwde
movs
test
in
ror
adc
cmp
(bad)
push
cmp
cs
adc
clc
scas
shr
(bad)
and
or
dec
ror
pop
cmp
std
mov
outs
mov
loope
sahf
(bad)
test
adc
jmp
jp
in
scas
imul
loope
loopne
rcl
xchg
scas
xor
dec
jae
push
inc
imul
fcmovnu
cdq
inc
fnsave
add
sub
ins
mov
cli
cld
and
lods
jbe
test
aaa
addr16
inc
dec
shl
dec
clc
add
sbb
cmp
add
stos
adc
mov
and
(bad)
in
int
lods
jnp
cmp
push
pop
mov
sub
pop
pusha
sub
dec
or
or
fbld
jbe
iret
cdq
fstp
dec
mov
push
sbb
xlat
in
push
shr
in
jb
mov
popf
sbb
repz
movs
cwde
outs
ret
cwde
imul
cmp
fst
mov
mov
xlat
clc
add
push
mov
sar
pop
add
mov
into
les
or
and
out
jge
lods
cdq
dec
loopne
call
movs
push
adc
cdq
popf
jne
cmp
mov
loop
sub
scas
call
(bad)
fidivr
dec
imul
and
in
adc
ficom
mul
mov
and
jo
jne
mov
or
jae
mov
mov
mov
xchg
or
stos
icebp
adc
loop
jo
stc
mov
mov
gs
fwait
movs
sbb
jp
jl
inc
push
or
daa
or
stos
ficom
cli
rcr
or
jo
out
das
aaa
cdq
iret
inc
add
mov
cmp
fdiv
jno
lds
addr16
iret
mov
call
mul
out
push
pop
mov
je
sbb
ja
and
test
mov
push
cmp
xor
pusha
xor
or
lahf
fdivr
ss
(bad)
das
rol
mov
cmc
enter
aaa
es
cld
push
(bad)
cdq
or
rcr
pop
cmp
repnz
arpl
movs
adc
minps
add
arpl
rol
sbb
aaa
push
mov
xor
out
jno
aas
fsubr
sbb
mov
jb
aam
test
adc
scas
jns
and
fisttp
lahf
fidivr
cwde
cdq
dec
mov
leave
push
ret
in
cld
(bad)
jns
adc
ds
pop
rcl
xchg
ds
jmp
jne
sahf
or
adc
movs
pushf
mov
jbe
retf
or
ss
(bad)
mov
and
or
leave
mov
xor
jb
and
sbb
jmp
movs
mov
pop
das
xlat
and
(bad)
cmc
nop
bound
xchg
and
push
adc
push
cdq
fisttp
test
sbb
ss
push
outs
es
or
pop
data16
or
cmp
dec
sub
stos
dec
repz
xor
jne
dec
push
xor
sub
stos
dec
int3
adc
mov
mov
sub
repnz
add
loop
sub
loop
xor
packuswb
popa
cmps
xchg
sub
jecxz
out
cmp
jne
mov
addr16
mov
shl
in
adc
xchg
pop
pop
add
mov
mov
(bad)
sub
jno
loope
mov
dec
inc
call
jno
push
dec
inc
or
sub
aas
mov
or
in
call
(bad)
pushf
add
test
rcl
fisub
int
jae
lods
push
push
sub
adc
loop
xor
nop
mov
sbb
xchg
xchg
sub
fs
mov
sbb
adc
or
jae
sbb
ss
jmp
push
push
xchg
or
push
sub
movs
repz
fsub
dec
call
add
enter
or
mov
enter
sub
es
je
ret
mov
fadd
(bad)
jb
mov
push
push
add
out
jmp
sahf
pop
ret
mov
nop
dec
mov
push
xchg
jmp
or
cmp
hlt
mov
enter
or
mov
cmp
rcl
push
push
xchg
setae
hlt
fcomi
pop
add
sbb
mov
mov
shl
cmovno
nop
push
jb
dec
cmp
cmps
imul
dec
mov
jp
icebp
rcl
adc
mov
xchg
sub
inc
xchg
(bad)
mov
inc
stos
push
scas
lea
retf
xor
test
loop
dec
sbb
jp
cmp
xor
ds
xlat
mov
jbe
xor
sbb
lds
imul
push
inc
out
movs
lods
lds
inc
aam
mov
jmp
mov
mov
cmp
ja
movs
xchg
or
movs
xor
dec
fs
ret
bnd
push
jne
cmp
jecxz
lods
lds
mov
dec
retf
shr
jle
jle
mov
and
clc
or
sub
repnz
pop
cmc
push
inc
jne
call
push
lods
add
(bad)
lahf
sbb
add
in
lahf
das
sub
mov
outs
add
dec
out
mov
sahf
and
push
sbb
fld
push
inc
sub
jmp
inc
retf
fndisi(8087
fs
scas
iret
test
push
nop
inc
xchg
loop
xchg
pop
je
fidiv
mov
in
outs
loopne
lods
xchg
sub
arpl
out
leave
and
repz
jb
ret
in
jo
mov
inc
push
mov
imul
jo
in
xor
jne
xlat
xor
in
and
jns
je
call
xchg
stos
movs
cmp
std
inc
aaa
lock
push
retf
xchg
fyl2x
sbb
sbb
cdq
rol
icebp
dec
mov
and
(bad)
rcl
push
mov
dec
cmp
retf
mov
outs
add
movs
rcl
cwde
call
outs
pop
sbb
ds
loop
leave
shl
arpl
inc
and
jmp
in
iret
cmp
xchg
mov
push
leave
and
ins
ins
leave
fdiv
imul
es
loop
mov
movs
retf
mov
adc
sti
iret
inc
setns
inc
or
mov
dec
cmp
icebp
das
add
inc
jl
into
(bad)
xchg
stos
imul
sbb
mov
or
into
jmp
sub
jns
pop
xchg
push
call
dec
movs
push
outs
mov
lock
cmp
adc
daa
in
call
arpl
cmp
push
(bad)
in
push
mov
mov
push
ret
scas
jb
je
js
pop
or
dec
je
es
repz
mov
cmp
dec
out
bound
int3
retf
in
stos
cwde
mov
scas
xlat
es
cmc
in
aam
leave
push
in
lods
jmp
jg
scas
jae
fist
in
push
dec
aas
sub
rcr
jp
xchg
outs
test
xchg
xor
jg
adc
stos
mov
std
out
fstp
mov
nop
enter
fwait
cld
inc
int3
icebp
std
push
adc
les
mov
cs
ss
jge
aad
cmps
pop
xor
cwde
call
jge
pop
adc
popa
push
push
cmc
inc
jno
scas
xchg
adc
cmp
xchg
sub
and
scas
icebp
and
aad
dec
mov
shr
test
push
mov
lods
xchg
sbb
cmp
cmp
adc
repnz
rcr
shl
xchg
mov
push
add
pop
dec
in
mov
jo
rcr
mov
jae
loopne
fmul
mov
xor
test
mov
dec
cdq
jmp
je
add
test
in
xchg
inc
jl
push
and
mov
and
mov
mov
dec
dec
jns
es
xchg
and
sub
cmp
outs
push
sub
data16
xchg
call
in
push
fistp
push
js
mov
test
add
aad
leave
pop
test
jnp
fisub
jle
pop
push
push
pop
sbb
inc
mov
sbb
or
bswap
outs
dec
sub
mov
rcl
pop
sbb
cld
in
ds
loope
mov
jle
ins
test
es
lock
retf
pop
enter
vmovntps
cmp
icebp
xchg
movs
mov
call
repnz
push
xchg
sar
mov
mov
mov
scas
(bad)
sahf
xor
outs
daa
jo
inc
lds
out
aaa
dec
push
jg
push
shl
les
mov
fmul
dec
out
pop
retf
xlat
imul
xchg
pop
pop
inc
jl
mov
out
pop
bound
div
das
out
sub
mov
jo
int3
mov
push
cld
scas
stos
or
dec
xlat
dec
out
call
cli
arpl
fst
pushf
mov
sbb
fs
shl
fs
sbb
xchg
in
mov
retf
pop
jno
ror
and
je
sbb
pop
and
rcl
and
lahf
iret
or
jne
aam
sbb
pop
cli
adc
push
adc
add
mov
shr
dec
xor
repnz
ror
rcl
xchg
add
(bad)
push
in
push
jl
add
inc
mov
sub
push
repz
int3
popf
cs
and
jp
imul
dec
mov
jge
(bad)
and
mov
js
jl
add
push
mov
xchg
js
(bad)
in
fstp
mov
fld
jle
ins
fs
push
fstp
movs
jl
aad
cdq
jnp
ror
mov
mov
data16
sahf
sub
pop
stos
leave
pop
fnsave
lea
mov
inc
call
gs
xchg
and
fidiv
inc
stos
aad
lds
mov
xchg
mov
rcr
inc
add
repnz
(bad)
xor
ror
pop
or
mov
pusha
shl
repnz
push
and
daa
in
es
cmp
push
or
pop
inc
xchg
enter
pop
sub
icebp
mov
sub
pop
iret
retf
int
arpl
pop
out
icebp
jmp
cmps
push
push
imul
xor
and
dec
mov
test
xlat
es
loope
xchg
jle
mov
adc
mov
lahf
ret
mov
in
xchg
nop
inc
jmp
stos
xchg
mov
lahf
push
jmp
cmp
cmp
cmp
and
cdq
call
lods
xchg
adc
dec
mov
mov
icebp
add
push
daa
scas
test
push
ret
icebp
push
rcr
xchg
add
jp
mov
inc
fst
jno
retf
sub
inc
jmp
push
out
pop
hlt
fdivr
jp
push
out
stos
sahf
loope
iret
push
lock
pause
test
fs
mov
out
imul
fldl2e
sbb
(bad)
loope
push
frndint
shl
inc
popa
pop
mov
pop
mov
xchg
idiv
(bad)
inc
cwde
mov
or
js
retf
adc
xchg
(bad)
mov
adc
sub
mov
push
das
inc
pop
add
sub
push
(bad)
call
add
das
push
and
imul
add
inc
mov
xor
cmps
movs
mov
icebp
mov
popa
sbb
sbb
sub
retf
pop
mov
fwait
sbb
es
test
inc
icebp
push
pop
lods
into
jp
jp
xchg
sbb
dec
loopne
and
outs
iret
fild
cld
fist
push
dec
push
inc
sub
inc
mov
mov
int
mov
in
fld
out
or
cmp
test
gs
scas
sub
(bad)
adc
sub
add
dec
shr
push
push
pop
add
inc
dec
add
out
fcomp
iret
push
stos
jp
pop
add
cmp
xor
shl
mov
cmp
or
ja
inc
(bad)
icebp
dec
mov
test
adc
xor
in
cmps
mov
push
cs
xor
mov
jae
aas
adc
xor
jp
push
icebp
ins
call
add
push
xchg
scas
and
dec
mov
ret
loope
movs
outs
jmp
pop
int3
pushf
test
stos
imul
inc
stos
mov
or
shr
and
push
loop
imul
cmp
das
push
push
mov
pop
out
retf
cmps
rol
nop
xor
fs
ins
lods
add
imul
jge
fdiv
(bad)
(bad)
pusha
sub
push
mov
jb
sub
sbb
cs
sbb
nop
cmps
sub
xlat
scas
out
inc
add
rcl
lods
jge
inc
es
stos
jp
jb
cmp
out
int3
pop
mov
loopne
adc
ret
les
(bad)
data16
pop
inc
lahf
mov
ds
xchg
test
in
popf
fwait
inc
int3
xchg
pop
sar
mov
movzx
jg
cmp
sbb
cmp
add
sub
das
aam
adc
add
ins
(bad)
scas
test
and
push
push
mov
jmp
dec
enter
mov
dec
(bad)
dec
jo
fs
call
push
pop
ret
in
in
mov
add
push
mov
imul
ficomp
fdivr
sbb
lods
dec
dec
rcr
jnp
adc
mov
cmc
and
mov
add
imul
stos
(bad)
in
push
in
jmp
and
jp
sbb
and
cmp
push
rol
jae
dec
stos
ins
and
imul
xchg
fcomp
inc
popf
stos
inc
mov
daa
jmp
lods
rol
pop
push
sub
lods
cwde
in
add
aas
cmp
push
movs
xchg
jne
and
push
gs
stos
sbb
test
inc
cmp
dec
pushf
hlt
or
adc
inc
add
arpl
dec
and
sub
cmps
lahf
add
out
jle
scas
ss
in
cmp
mov
je
adc
sar
or
aad
retf
out
out
fisubr
(bad)
pop
sub
into
cmps
or
popf
pop
repz
xlat
aaa
xchg
sbb
pop
mov
shl
mov
iret
loop
test
mov
jns
sub
cwde
clc
sti
jbe
mov
jmp
jns
ficom
add
and
call
add
out
jae
pop
mov
inc
cmp
inc
das
lea
stos
mov
pop
cs
push
mov
cdq
test
adc
clc
cmp
mov
xor
or
xchg
ja
loopne
or
mov
int
xchg
or
mov
jmp
dec
mov
push
push
pop
xchg
xchg
sahf
movs
std
imul
fisubr
mov
add
cmp
scas
clc
std
rcl
and
dec
push
pop
mov
and
sub
shl
pop
popf
ret
into
lock
and
lods
gs
fsub
in
mov
sbb
pushf
outs
stos
ss
gs
imul
and
call
shr
rol
mov
call
mov
leave
fcomp
popa
mov
pop
ja
call
jl
icebp
ror
cdq
mov
jecxz
shl
in
sbb
cmp
adc
cmps
dec
sub
push
fstp
sbb
add
shr
inc
mov
(bad)
push
push
adc
jmp
dec
div
clc
shr
mov
sar
pushf
jae
mov
and
and
arpl
mov
test
test
dec
data16
aas
pop
cld
push
jno
add
add
and
fild
push
xor
xchg
repnz
fdiv
jns
mov
xchg
imul
cmc
mov
out
pop
jnp
jno
mov
pushf
push
shr
cmc
icebp
fmul
add
sub
not
pop
and
mov
mov
je
ins
inc
pop
mov
sbb
pop
std
test
jle
ret
(bad)
lods
or
aad
cmp
ins
mov
repz
aam
cmps
lods
and
outs
ins
and
ja
add
bound
sahf
stos
and
(bad)
mov
jnp
push
jnp
mov
xor
push
jmp
mov
cli
vphaddubw
mov
lahf
jecxz
fwait
call
jmp
cwde
mov
lahf
xchg
pop
or
xor
fwait
cmps
sbb
cwde
arpl
(bad)
pop
cmp
int3
out
mov
and
adc
aam
(bad)
bound
add
and
jo
fstp
xor
daa
cli
cmp
jle
ss
sbb
(bad)
push
mov
add
mov
mov
adc
cli
cmps
xor
xor
fldcw
test
mov
cli
mov
stos
xchg
mov
paddusb
cmp
or
xchg
pop
cmps
and
jo
sbb
mov
inc
xchg
fsubr
cmps
bound
sbb
cmps
mov
xor
pop
(bad)
in
mov
fimul
lock
not
popa
xor
lds
clc
mov
in
nop
cmovnp
jb
(bad)
fisttp
cmp
pop
mov
mov
fwait
lahf
push
cmps
hlt
jne
sub
xchg
xchg
lds
sahf
dec
sbb
inc
jle
std
push
(bad)
repnz
idiv
jne
and
push
imul
stos
nop
sub
pop
mov
jns
sub
inc
imul
retf
addr16
mov
sub
mov
int
punpckhdq
pop
xchg
call
cdq
arpl
je
sti
movs
retf
adc
sti
xor
push
adc
jecxz
outs
xlat
push
dec
xchg
psrlq
data16
add
ficomp
pop
rcl
sbb
jmp
fnstenv
ja
inc
mov
in
dec
cwde
xchg
lods
mov
cmp
(bad)
xor
push
push
jno
enter
mov
mov
and
in
inc
pop
jb
jns
push
jecxz
inc
(bad)
pop
cmc
aaa
xor
add
(bad)
lods
inc
jmp
and
ret
jmp
ror
stos
jnp
mov
test
or
stc
cs
out
adc
sub
arpl
xor
sbb
mov
sbb
cmp
xor
xchg
xchg
call
sub
inc
cmp
ret
aad
push
lods
gs
add
push
dec
jp
leave
lods
pop
jmp
fwait
push
lds
mov
mov
cmp
loopne
jp
clc
adc
xchg
dec
fdivp
mov
icebp
mov
mov
dec
add
pushf
add
push
push
xchg
inc
sub
jne
pushf
imul
scas
xor
imul
push
pushf
or
sar
sub
lea
xchg
in
addr16
mov
inc
lds
sbb
(bad)
xchg
inc
sub
es
aas
sub
jp
dec
dec
add
xlat
mov
jnp
ins
inc
and
ror
add
jle
dec
js
sub
dec
jmp
xchg
dec
mov
retf
cwde
cmp
inc
je
dec
xchg
imul
in
mov
in
adc
in
jns
jnp
mov
lea
and
jnp
jmp
lods
add
das
xor
loope
xchg
or
(bad)
mov
pop
loopne
xlat
sub
shl
dec
xchg
retf
and
jne
push
xlat
xlat
sti
cld
aam
sbb
add
leave
mov
xchg
add
push
cmp
pusha
push
cmp
enter
outs
hlt
mov
ins
jecxz
aam
or
dec
(bad)
ins
test
or
pop
dec
lds
add
dec
mov
shl
cli
jbe
push
or
jecxz
into
jnp
add
push
inc
ja
mov
push
cwde
jg
cwde
loope
stos
fadd
repz
jl
inc
dec
loope
aad
ins
test
xchg
push
push
mov
cs
xchg
mov
xor
ret
or
rol
outs
lea
addr16
lods
push
pop
scas
pop
adc
mov
xchg
pop
mov
push
cmps
jl
jno
or
add
cmps
jbe
mov
xchg
xor
adc
xchg
push
hlt
in
cdq
fs
dec
add
ds
(bad)
mov
pop
push
fwait
dec
mov
xchg
sub
xor
int
(bad)
test
mov
je
rol
sbb
into
push
push
jp
mov
xor
mov
stos
addr16
mov
sahf
enter
out
fbld
add
es
(bad)
or
adc
add
call
sbb
scas
ss
xchg
gs
fwait
lahf
and
jnp
xor
jg
cmp
ficomp
ins
mov
jl
mov
retf
jmp
mov
shl
mov
xor
test
test
out
add
mov
push
pop
adc
cwde
cmp
jno
and
jp
mov
lods
lods
in
adc
push
and
pop
pop
bound
popa
in
inc
push
call
and
loop
imul
fwait
bound
jg
push
pop
loop
call
add
mov
jne
and
cs
sub
mov
xor
sbb
inc
retf
sbb
xor
add
mov
push
and
sbb
add
dec
add
inc
mov
data16
shl
mov
imul
sbb
scas
jp
sbb
repz
fcomp
xchg
call
aad
jbe
std
jl
(bad)
jmp
nop
and
call
push
addr16
mov
gs
sub
inc
into
pop
sar
lea
and
movs
neg
fcmovb
retf
pop
cmp
mov
or
js
adc
and
inc
push
mov
pop
adc
js
sti
cwde
fstp
and
mov
outs
in
sbb
dec
lods
xchg
movs
or
jg
mov
push
test
cmc
stc
jp
jbe
dec
lods
pop
ficomp
enter
fist
adc
test
xor
fwait
mov
cmps
sbb
int3
cmp
fdivr
mov
cmps
mov
les
stos
mov
inc
repnz
leave
xor
movs
(bad)
add
dec
push
dec
test
(bad)
fsub
(bad)
push
jmp
shr
jp
lea
jmp
push
mov
or
call
test
ins
gs
sahf
jp
adc
mov
inc
and
adc
cmps
and
pop
and
ins
and
shl
mov
rol
clc
fld
nop
lds
lods
stos
sub
sub
mov
push
xor
sbb
loope
shl
scas
or
and
add
sbb
rol
dec
or
test
push
loop
xor
lahf
xlat
add
jne
cmp
retf
xchg
mov
xchg
gs
lahf
adc
test
xchg
(bad)
mov
enter
out
jne
sbb
xchg
jp
xor
ins
jnp
inc
or
shl
sub
push
outs
or
sbb
dec
ret
pop
data16
test
(bad)
add
jmp
mov
js
push
push
and
shl
dec
xchg
jl
xor
stos
jle
jbe
bound
in
lahf
leave
and
icebp
pop
lods
cmp
jns
pop
popf
jge
inc
fucomp
mov
adc
fmul
pop
inc
lods
inc
mov
jae
(bad)
sub
sbb
imul
unpckhps
loopne
sbb
ficom
nop
pop
push
push
inc
and
sub
mov
not
mov
or
add
movs
cmp
cld
push
jle
fild
dec
sahf
dec
outs
mov
dec
movs
xchg
mov
cwde
fist
test
inc
dec
loop
ror
mov
leave
arpl
in
and
dec
lods
mov
sub
in
in
out
adc
arpl
aas
cmp
pop
js
arpl
mov
xchg
push
ror
and
in
mov
imul
pop
fst
shl
repnz
call
dec
dec
xchg
clc
aaa
sbb
push
inc
xor
jno
nop
mov
stos
sti
loopne
push
clc
push
sub
sahf
cmovge
rol
idiv
sub
jmp
mov
cmps
int
cmc
and
(bad)
repz
sbb
mov
ss
jg
out
out
loopne
or
add
sahf
xor
push
sbb
fdivr
in
mov
cmps
jecxz
aaa
fwait
cmp
jg
xchg
push
xor
bound
or
or
jno
ja
mov
cs
in
mov
add
adc
xchg
sbb
leave
fnstsw
fild
lds
ds
xchg
ins
add
sti
ds
movs
adc
ret
adc
sub
loop
(bad)
je
int3
inc
retf
mov
mov
jle
fwait
nop
xchg
mov
pop
jo
xchg
ins
mov
sub
fs
dec
outs
test
sub
jne
popa
xor
sbb
cld
mov
mov
fst
adc
lea
mov
sub
rcl
or
mov
ror
stos
jg
test
shl
je
or
ret
sbb
in
retf
std
add
mov
test
add
into
dec
daa
test
out
loope
dec
push
js
sbb
adc
mov
dec
jmp
pop
jo
fist
rcl
cwde
sti
data16
div
stc
(bad)
(bad)
mov
xlat
jae
or
adc
lock
adc
loope
mov
xchg
test
push
iret
lock
and
inc
jno
loop
xor
fwait
pop
cld
mov
push
push
push
je
je
out
cmps
mov
lahf
leave
ins
outs
xor
imul
stos
jne
ret
fwait
lds
add
(bad)
xchg
les
add
das
cwde
mov
clc
jnp
dec
xor
fnsave
mov
add
add
adc
mov
push
test
arpl
mov
sbb
sar
in
xor
xchg
cmc
test
mov
pop
mov
fisub
fsubr
push
inc
out
or
and
and
or
inc
xchg
mov
ret
jmp
jnp
inc
pop
xor
pushf
not
inc
adc
inc
bound
not
cmps
sti
sbb
lahf
cmc
jp
and
jl
scas
repnz
jmp
sub
aaa
push
push
test
in
out
dec
mov
icebp
adc
or
ja
fsubr
xchg
adc
jbe
iret
sub
sbb
mov
pop
movs
rcr
sub
int3
ss
dec
push
sub
push
hlt
aas
dec
adc
xor
psllw
cmc
sub
sar
pop
and
fisub
ret
fwait
dec
cmp
jmp
mov
std
fidivr
lahf
nop
aad
push
pushf
inc
sbb
imul
mov
(bad)
jbe
sub
add
movs
ds
movs
sub
sbb
(bad)
int
dec
(bad)
loop
pushf
mov
shl
sbb
stos
call
mov
mov
sub
push
test
ss
movs
pop
arpl
or
xchg
lods
mov
enter
data16
das
push
mov
sub
call
pop
sti
adc
xchg
gs
ds
ret
ins
add
fwait
loope
add
jae
jno
xor
jg
push
xor
test
sub
outs
movs
imul
lea
ja
jae
xor
mov
fcom
mov
and
push
sbb
sub
sub
popa
push
sbb
add
hlt
test
pop
adc
push
mov
stc
repnz
sub
push
leave
pop
cmp
clc
mov
mov
inc
xchg
iret
(bad)
sub
icebp
cmc
and
loope
shl
xchg
test
hlt
inc
dec
mov
dec
mov
jb
(bad)
adc
ins
push
xchg
ret
push
movs
jl
ins
mov
pusha
ins
mov
push
jg
repnz
mov
lea
arpl
adc
mov
xor
cmp
cld
lods
arpl
push
inc
adc
add
in
adc
cdq
les
xlat
fiadd
mov
xor
push
aam
mov
mov
popf
mov
test
lods
xor
outs
xchg
mov
aam
xchg
fsubr
cmp
mov
movs
imul
shl
mov
sub
mov
es
enter
dec
jmp
cdq
in
mov
fwait
lds
mov
push
iret
ret
retf
(bad)
idiv
repnz
sbb
push
xchg
jo
mov
loop
or
popa
stos
je
hlt
cmp
fistp
scas
lahf
(bad)
xchg
push
ins
sbb
xchg
sub
push
addr16
mov
pop
mul
lahf
cmp
data16
sti
dec
jle
adc
ins
lea
push
std
push
stos
test
xor
dec
jg
popf
movs
adc
mov
shl
or
pop
imul
mov
xchg
fxch
out
(bad)
xchg
sbb
dec
mov
mov
jg
jo
mov
aaa
mov
xchg
jle
leave
sbb
add
in
lea
sub
div
push
nop
pop
lods
mov
cmps
sti
mov
loop
mov
lahf
mov
mov
loop
ret
mov
mov
cld
or
sti
(bad)
movs
inc
fdivr
dec
in
push
xchg
mov
and
mov
stc
inc
add
dec
and
mov
mov
popf
adc
sub
fld
sar
test
push
pop
cmp
sub
mov
ss
leave
add
js
cmp
in
fdiv
fwait
push
jo
arpl
in
in
pop
shl
ins
stc
xor
outs
jno
push
(bad)
test
xchg
popa
inc
or
jne
pop
adc
int
add
lock
mov
rcr
imul
in
add
test
cs
or
mov
fst
xlat
dec
or
icebp
xor
jo
mov
mov
rol
push
out
cmp
repz
les
cmc
push
jae
jl
mov
push
jmp
pusha
sbb
retf
cmp
jle
cmc
leave
inc
out
xchg
and
mov
call
jne
cmovle
int
push
push
xor
mov
js
sub
mov
dec
arpl
sbb
js
sub
dec
xor
push
mov
pop
add
jg
jns
mov
das
mov
cmp
fs
popf
(bad)
mov
cli
xor
xchg
(bad)
repz
repnz
pop
sbb
dec
pop
push
test
out
leave
test
dec
call
push
mov
fwait
out
out
(bad)
dec
cmp
push
fild
dec
add
jle
xchg
push
sti
xchg
cmp
fiadd
mov
inc
push
jne
retf
in
repz
cmp
jmp
inc
dec
inc
or
jb
scas
scas
repz
(bad)
pop
cli
jp
and
xchg
mov
jge
fwait
push
mov
or
ror
xor
mov
lds
push
sub
xchg
cmp
ja
sbb
shr
les
lds
xlat
(bad)
test
add
aad
fsubr
xchg
push
cmp
mov
js
in
sbb
ins
nop
add
add
push
cli
xlat
pop
xor
shr
movs
xchg
cmp
adc
shl
aam
sub
xchg
cld
pusha
fwait
dec
shl
dec
pop
push
sbb
mov
mov
push
pop
sub
mov
mov
shr
pusha
repz
push
mov
aad
fwait
mov
dec
and
mov
dec
xchg
mov
mov
hlt
xor
mov
int
out
dec
xchg
xor
ret
outs
sub
ficomp
sbb
cld
push
adc
mov
js
imul
mov
pop
daa
cmp
sbb
call
cld
in
call
or
nop
jne
(bad)
in
movs
fst
ror
adc
xlat
inc
cmp
add
out
mov
and
push
push
pop
fdiv
xchg
add
rcl
push
das
dec
rol
push
push
xchg
lods
push
fwait
hlt
fs
mov
lods
fwait
sub
adc
xchg
aas
add
addr16
pop
jns
in
or
mov
loope
mov
scas
enter
cmp
jo
clc
fdivr
jae
scas
fimul
cmp
stos
mov
lock
pop
mov
stos
add
mov
jle
push
xor
shl
push
les
mov
sbb
mov
sahf
test
popa
scas
add
iret
lock
adc
jmp
mov
inc
std
movs
xor
int
xchg
xlat
test
mov
add
pop
inc
bound
jb
call
mov
pushf
adc
pusha
call
data16
mov
sbb
daa
adc
aas
ret
adc
shrd
mov
sbb
inc
dec
xor
in
out
pop
idiv
xchg
mov
out
iret
dec
push
cmp
xchg
jmp
add
pushf
retf
jle
scas
adc
lods
clc
xor
mov
int
clc
fs
pop
es
sbb
lods
push
mov
jl
inc
add
mov
lds
jl
loop
outs
jns
xchg
mov
jnp
int
push
out
pop
or
ss
adc
aad
pop
push
idiv
outs
adc
xor
(bad)
lahf
jmp
mov
cwde
(bad)
xchg
lods
add
xlat
mov
repnz
push
xor
mov
xchg
mov
pop
jle
mov
fidivr
retf
fwait
outs
and
in
cli
std
xchg
gs
lock
mov
push
leave
pop
dec
xchg
retf
imul
mov
shl
pop
xlat
js
cmp
mov
jg
shl
pop
loope
push
xchg
in
gs
jne
cs
xchg
stos
xchg
xchg
and
movs
stos
dec
xchg
inc
push
push
mov
(bad)
pop
push
xchg
(bad)
fnstcw
adc
in
out
dec
or
add
dec
das
lods
mov
out
xor
push
mov
adc
dec
push
push
xor
sbb
jp
pop
bnd
pop
leave
test
push
into
adc
and
dec
xor
cmc
mov
pop
pcmpeqb
inc
fcom
jne
movs
rcr
ss
ds
mov
and
mov
ja
fist
mov
dec
in
and
mov
movs
jnp
cdq
sbb
addr16
xor
sar
aam
idiv
enter
push
push
clc
inc
inc
fs
hlt
mov
and
lock
mov
out
mov
or
mov
cdq
adc
dec
addr16
mov
xchg
fwait
int3
adc
push
mov
mov
mov
sahf
jl
sar
push
mov
push
rcl
bnd
push
adc
(bad)
mov
cmc
fadd
je
pmulhuw
fsubr
mov
inc
not
xchg
jno
push
inc
mov
lahf
or
pop
iret
inc
mov
jbe
out
cwde
mov
mov
mov
iret
sti
jecxz
adc
lods
push
jmp
pop
dec
lods
sti
js
cwde
loop
sti
adc
mov
repnz
cmp
fidiv
shl
mov
loope
pop
add
or
push
pop
sbb
scas
push
add
pop
(bad)
js
mul
frstor
imul
outs
and
(bad)
ja
pop
fldenv
lock
jle
mov
mov
idiv
cmp
jle
add
(bad)
mov
test
jns
hlt
leave
imul
out
mov
push
cli
dec
bound
aad
mov
xor
(bad)
or
mov
std
daa
lock
or
dec
sbb
dec
lea
mov
int3
icebp
mov
movs
cmps
pop
stos
jno
or
jle
mov
add
jbe
jae
stos
clc
sti
push
stos
cmp
sub
dec
pop
mov
out
inc
pop
(bad)
aam
and
sub
mov
retf
or
ds
sub
add
cmp
out
popf
fst
jmp
loope
adc
adc
les
xor
jmp
adc
pop
movs
inc
mov
or
and
push
stos
mov
or
jg
xor
shl
xchg
adc
repz
sub
xlat
es
cmp
xchg
xchg
or
inc
shl
xchg
xchg
popa
clc
or
add
jno
jns
sub
leave
xlat
test
sub
jmp
sub
jbe
adc
mov
pop
call
ins
fisub
adc
mov
add
cmps
repz
adc
test
jle
sahf
enter
sub
imul
push
mov
mov
cli
clc
push
nop
push
pop
out
call
repnz
xchg
arpl
dec
mov
or
ins
dec
mov
sub
pop
cmc
fdiv
bound
leave
neg
xor
ins
push
lea
in
out
add
or
test
loop
pop
inc
les
inc
outs
not
xor
mov
cmp
loop
popf
enter
cmp
call
js
div
cld
adc
retf
jmp
aad
ret
test
lods
and
xchg
and
mov
inc
add
jge
(bad)
adc
add
inc
shl
pop
jge
loop
cld
iret
xchg
adc
(bad)
pop
scas
mov
sub
xor
js
push
xor
add
in
stos
mov
sbb
in
sub
ss
not
lea
leave
das
mov
mov
out
jno
and
push
rcl
pusha
sbb
dec
imul
mov
fiadd
push
jg
jl
fbstp
jns
jnp
add
push
jb
mov
sub
(bad)
shr
mov
movs
push
push
cli
std
not
inc
push
sub
mov
mov
xchg
inc
retf
nop
cwde
popa
clc
ds
retf
in
dec
and
pop
mov
adc
ret
or
das
inc
mov
push
jae
mov
fst
movs
sbb
inc
fisub
cdq
rcl
fisttp
fst
push
cs
pop
fwait
daa
pop
inc
push
dec
adc
push
je
rcr
add
and
mov
ss
jns
repz
push
int
push
inc
sbb
mov
popf
add
sub
out
shr
jle
or
jo
and
lahf
mov
leave
jno
cmp
push
movs
xchg
fidivr
pusha
dec
add
cdq
and
(bad)
push
xor
test
jmp
push
enter
leave
sti
xchg
stc
xchg
out
xor
xor
pop
mov
adc
mov
scas
leave
push
mov
mov
int3
jnp
neg
rcl
inc
jmp
jmp
jne
(bad)
push
sbb
cmc
pop
es
in
js
shr
jmp
icebp
ret
cwde
imul
mov
test
and
icebp
stos
cdq
int3
cwde
fistp
or
push
mov
shl
(bad)
sar
les
xor
dec
mov
fsubr
addr16
je
and
cs
add
pop
pop
mov
int3
xchg
pop
pop
mov
(bad)
cmps
in
ds
push
mov
add
shl
or
push
jns
sbb
test
sub
test
and
fwait
jmp
out
loopne
push
mov
sbb
cwde
aas
pop
lds
and
jno
mov
cld
jmp
jnp
(bad)
cmp
jmp
mov
mov
add
fist
adc
dec
inc
dec
xlat
mov
popf
arpl
mov
sub
call
loopne
movs
xchg
push
or
push
leave
(bad)
daa
sbb
mov
pop
leave
pop
mov
ror
imul
pop
sti
call
add
sub
and
inc
ror
lods
and
dec
xor
test
fisttp
cwde
call
fld
hlt
lahf
xor
adc
and
sub
pop
mov
pusha
test
out
popa
dec
push
xor
and
lods
mov
repz
cmp
mov
icebp
xor
sub
lds
xchg
mov
out
aad
sub
fisub
adc
or
push
add
mov
out
inc
ins
adc
jbe
push
mov
add
mov
in
(bad)
mov
sahf
inc
stos
movs
sbb
shr
mov
sbb
(bad)
out
jg
cmp
inc
stc
push
add
sbb
(bad)
mov
sub
or
stos
add
ds
aam
mov
jl
iret
sub
lea
push
ss
aad
shl
sub
in
mov
jbe
mov
push
xchg
pusha
les
xor
jb
cmps
hlt
push
js
enter
mul
out
imul
mov
sbb
lea
mul
mov
inc
mov
std
fld
inc
das
cs
jg
sbb
out
xor
addr16
rol
mov
pop
mov
push
fmulp
in
or
int
pop
fucomp
outs
loope
sahf
and
call
int3
inc
adc
ror
mov
jg
clc
pop
sub
jl
xor
jle
bnd
inc
mov
loopne
stos
push
cli
sub
pusha
or
shl
add
xchg
inc
and
stc
xchg
mov
pop
xchg
push
into
add
ins
or
and
push
mov
out
iret
mul
(bad)
sbb
and
mov
push
std
xchg
inc
mov
fst
sub
mov
add
jg
ret
and
mov
nop
mov
jmp
inc
mov
adc
repnz
lea
sbb
and
inc
out
fiadd
int3
mov
loop
adc
test
xor
push
sub
mov
cwde
lods
mov
arpl
dec
sub
jae
mov
add
inc
and
adc
cmp
sbb
stos
fistp
sub
arpl
push
cmp
dec
pop
icebp
pop
sub
lods
aam
add
mov
(bad)
(bad)
fstp
xchg
scas
ins
push
xchg
jp
imul
rol
xchg
mov
ret
xor
jecxz
outs
push
pusha
push
test
mov
sar
inc
jae
pop
popf
jnp
retf
xor
jo
add
iret
mov
mov
add
das
add
jmp
mov
stos
adc
fcomip
push
ds
add
adc
popf
xor
add
jmp
(bad)
xlat
adc
mov
fld
mov
adc
dec
sbb
mov
ret
aam
push
dec
cmp
mov
loop
sbb
mov
(bad)
test
pop
jge
addr16
or
arpl
add
sahf
sbb
jo
je
loope
cmp
push
add
mov
push
xor
xlat
repnz
sbb
dec
cmp
clc
pop
mov
data16
lods
aam
test
fsub
push
pop
mov
rcr
dec
mov
stc
ret
push
mov
inc
xchg
addr16
add
shl
je
cdq
mov
mov
and
push
dec
das
imul
push
or
sbb
jl
cdq
mov
lock
movs
jae
ins
push
imul
jae
cmp
clc
add
jbe
push
std
cmp
adc
nop
addr16
in
data16
inc
adc
pop
mov
mov
sub
ins
push
push
mov
xor
fxrstor
xchg
sbb
xor
xchg
fs
in
(bad)
jg
mov
aas
cmp
dec
mov
xor
sub
adc
add
fwait
enter
cmp
shr
mov
xchg
push
lds
mov
data16
jb
aas
jge
dec
push
mov
jg
push
push
mov
bound
inc
sbb
push
pop
inc
popf
mov
pop
xchg
aad
sbb
xchg
cmp
pop
nop
push
mov
(bad)
cmp
add
jmp
loope
test
inc
xchg
push
dec
pop
shl
jle
lods
test
xor
sbb
xchg
xlat
mov
push
stos
fadd
jno
push
popa
and
or
push
ficomp
test
jne
in
lahf
cdq
gs
out
dec
sub
jbe
sub
sub
lahf
retf
call
cmp
mov
or
test
out
xchg
xchg
cmp
test
pop
in
adc
out
mov
rol
pop
int3
clc
sub
(bad)
retf
jo
cmps
idiv
xchg
ins
call
ds
push
xchg
push
cmp
arpl
(bad)
mov
push
dec
or
dec
cmc
test
clc
repz
in
lock
and
sub
inc
sub
stos
xor
fadd
(bad)
and
adc
xchg
cmps
lods
dec
mov
xchg
enter
mov
pop
mov
mov
int
(bad)
sbb
out
enter
adc
pop
sbb
call
sbb
ins
push
mov
cdq
popa
add
sub
jb
in
push
repz
mov
iret
inc
ins
jecxz
outs
icebp
jg
jmp
ins
or
jg
in
push
mov
lds
push
test
xlat
mov
cmps
pop
dec
inc
mov
sub
cwde
cmps
daa
add
jmp
div
mov
dec
inc
pop
jmp
push
stos
aam
jmp
dec
xchg
aaa
enter
fist
arpl
cmp
sbb
and
cmps
into
push
mov
mov
inc
fld
mov
aaa
std
mov
xchg
test
rol
rol
sbb
add
sub
(bad)
sbb
add
adc
push
mov
mov
es
inc
and
xor
add
fcom
and
retf
and
nop
sbb
pop
mov
call
das
rcr
pop
rcr
and
test
or
and
int
hlt
adc
push
push
call
sub
xchg
jecxz
sub
or
xchg
cmp
pushf
xor
xchg
call
hlt
mov
inc
call
fdiv
es
lods
dec
loope
stos
(bad)
out
push
cmc
adc
xlat
mov
pushf
or
sbb
and
aas
xchg
pop
icebp
adc
inc
xor
adc
je
pop
imul
mov
push
and
push
lds
mov
fdiv
(bad)
jmp
jbe
outs
sub
xor
xchg
push
call
mov
iret
outs
xchg
lea
ss
push
sub
push
(bad)
dec
loop
movs
cmc
mov
xor
push
jle
add
fisubr
mov
call
mov
inc
jns
dec
push
gs
imul
arpl
mov
jmp
fwait
and
sbb
sbb
out
jmp
push
or
dec
mov
xchg
push
mov
and
aad
or
inc
setp
pop
mov
adc
inc
cdq
push
jae
jo
mov
sar
repnz
jg
add
sbb
shl
das
movs
scas
cmp
push
nop
(bad)
xchg
fbld
mov
push
in
jbe
dec
inc
movs
cld
cmp
adc
lock
push
mov
mov
mov
data16
cld
mov
xchg
adc
(bad)
mov
add
iret
nop
inc
jp
daa
jbe
sub
retf
push
xor
and
shl
jge
lahf
inc
out
scas
add
into
mov
jbe
fcomp
and
sbb
ins
jmp
sbb
test
std
inc
dec
call
add
add
dec
std
push
add
shr
popa
push
stos
dec
into
test
aam
mov
mov
xchg
push
inc
mov
ss
cmp
aam
jo
stos
xchg
icebp
xchg
push
push
xchg
repnz
movs
push
pusha
inc
(bad)
xchg
std
or
push
test
push
sub
jle
mov
xchg
jo
ret
mov
push
stc
dec
dec
mov
mov
iret
pop
mov
or
mov
cmps
shl
inc
cmps
sbb
adc
sbb
jecxz
mov
lods
inc
gs
inc
mov
add
mov
leave
pop
xor
inc
cdq
loop
addr16
icebp
or
mov
and
pop
cwde
push
mul
inc
pushf
addr16
mov
sub
lock
add
or
in
adc
icebp
addr16
aas
js
loope
out
dec
push
push
loope
push
fstp
(bad)
ret
xchg
push
push
jne
add
call
sar
cmp
adc
mov
add
push
and
aad
cli
leave
out
push
pop
rol
idiv
xchg
xor
(bad)
mov
jne
sub
stc
push
stos
xchg
test
adc
sbb
push
or
leave
adc
or
dec
in
ins
imul
int3
jp
dec
or
jb
lods
adc
pop
fdiv
cwd
mov
popa
fs
lods
sbb
fdivp
fidivr
in
push
fs
pop
adc
cs
inc
dec
outs
sbb
ss
int3
pop
int3
aad
mov
mov
cdq
jl
xchg
jle
and
dec
jnp
pop
xchg
repnz
clc
out
and
popa
jp
mov
(bad)
pop
out
int3
ins
sub
mov
rol
rcl
aam
int
cmp
cld
dec
pop
cmc
mov
xchg
adc
imul
sar
sahf
xor
push
adc
mov
push
xor
scas
pop
sti
mov
cmp
int
imul
fimul
out
jnp
add
lahf
mov
jbe
fcom
cld
and
test
ret
leave
jne
retf
cli
lock
cmps
sar
xor
jnp
aad
dec
push
pop
lahf
in
jp
mov
dec
out
sbb
arpl
in
mov
out
cs
or
mov
shl
mov
cmp
xchg
cli
mov
(bad)
sbb
push
sub
jge
ins
add
ins
hlt
pop
loopne
inc
cmc
or
mov
and
adc
jmp
push
imul
mov
int
pop
adc
pushf
cmp
daa
(bad)
push
and
mov
adc
cli
es
shl
xchg
push
xor
repz
setbe
shr
retf
inc
pop
mov
aaa
int3
adc
xor
and
sub
ror
sbb
pop
js
inc
je
outs
lahf
es
neg
pop
inc
popf
jp
or
pop
pop
and
mov
pop
sub
sub
fstp
ficom
pop
in
dec
jecxz
stos
sbb
cmps
test
and
xor
push
cld
jmp
lock
pop
sbb
mov
loopne
(bad)
mov
fmul
leave
sub
sbb
cmp
ins
sub
and
lsl
pop
sub
retf
xor
jns
cmps
(bad)
fsubr
jmp
loop
popf
aam
js
mov
bound
cmc
add
or
inc
sbb
sbb
xchg
enter
lock
cmp
adc
or
jmp
outs
mov
fwait
jmp
outs
aas
sub
les
pop
(bad)
mov
sahf
imul
inc
pop
ror
lock
pop
mov
jnp
mov
mov
xor
sub
cmps
std
or
sbb
push
daa
aam
movs
iret
pop
test
lahf
popf
push
jp
or
jnp
jae
and
pop
sti
cmps
pop
test
jnp
xchg
adc
es
push
je
xor
lea
dec
adc
clc
and
js
xchg
jp
lods
jno
out
inc
lods
cmps
pop
jp
jo
cmp
jecxz
push
or
push
and
fs
mov
sbb
sub
xor
ret
fiadd
dec
mov
jns
inc
jp
xchg
xchg
out
repz
in
aaa
push
jmp
mov
mov
test
add
pop
or
not
sbb
push
mov
ds
pop
and
xchg
lock
(bad)
fdivp
xchg
sbb
cmps
int3
jge
pop
cli
sbb
mov
int
dec
mov
scas
stos
jo
inc
fist
call
in
cmp
test
inc
scas
(bad)
rol
push
pop
mov
leave
icebp
leave
jg
shl
retf
sti
mov
fstp
ins
dec
movs
das
das
and
ret
dec
dec
adc
in
pusha
retf
mov
jno
push
lods
xchg
dec
stos
dec
dec
daa
je
and
out
and
jp
repnz
adc
icebp
sub
xor
test
sub
out
je
lds
or
cmp
gs
cwde
ins
xor
mov
inc
or
nop
sahf
cld
jge
push
outs
lds
xlat
out
push
adc
scas
or
xchg
mov
sar
popf
leave
sbb
jmp
inc
adc
push
pusha
cdq
call
call
dec
call
adc
mov
dec
xor
mov
cmp
push
dec
icebp
std
jne
cwde
jge
cs
iret
mov
stos
dec
and
mov
outs
lock
fnsave
add
(bad)
addr16
dec
or
mov
sub
xor
mov
mov
cwde
inc
add
jne
mov
jae
cmp
sbb
xchg
add
adc
sbb
pop
in
icebp
out
and
jne
sbb
ror
add
sub
jb
out
test
fld
pop
dec
in
mov
push
movs
arpl
xor
fldenv
push
and
pop
and
ds
push
mov
dec
out
push
outs
mov
jl
cmp
(bad)
xchg
pusha
js
mov
or
ret
into
enter
mov
jnp
out
mov
std
hlt
ss
retf
cmp
aam
dec
cdq
arpl
mov
in
inc
gs
dec
pusha
dec
aam
dec
push
icebp
movs
mov
jns
imul
dec
push
or
pusha
rol
movs
inc
sub
retf
js
inc
xchg
call
pop
push
or
rcl
xchg
xor
mov
cwde
push
push
mov
bound
sub
pop
mov
fldl2t
cmp
fwait
repz
adc
inc
sub
rcr
icebp
sbb
pop
pop
mov
pop
add
call
lea
sti
mov
xor
into
or
retf
push
retf
iret
cmp
jg
lock
mov
lahf
iret
pop
inc
add
into
pop
sub
mov
je
sahf
(bad)
(bad)
out
neg
pop
inc
icebp
jo
outs
pop
sub
xchg
mov
push
retf
std
repz
gs
loope
mov
loop
push
pop
in
mov
push
stos
lea
in
fs
js
inc
ds
out
(bad)
scas
shr
into
rcl
cld
adc
imul
rcr
push
ds
(bad)
arpl
lds
(bad)
or
xchg
lahf
hlt
imul
je
push
ror
retf
pop
or
sbb
scas
fnstsw
cmp
inc
test
test
shr
add
inc
fs
xor
je
les
and
out
push
addr16
mov
jmp
(bad)
fisttp
xor
cmps
lods
test
mov
and
pop
movs
sbb
movs
dec
or
sbb
out
inc
sbb
pop
push
jl
(bad)
das
scas
jge
mov
cmp
mov
and
sbb
jo
cmc
xchg
jge
and
sub
add
shr
push
jno
lock
shl
arpl
inc
sbb
pop
movs
stos
loope
sub
mov
mov
shr
pushf
leave
rcr
xor
test
jns
jno
sbb
mov
xor
mov
in
or
xor
sub
out
pop
stc
pop
sbb
mov
sti
add
sub
ficomp
int3
push
inc
mov
and
clc
in
les
push
xchg
add
loop
retf
loopne
push
mov
arpl
mov
ins
xchg
pmuludq
enter
pop
pop
scas
lods
cmp
sti
sbb
pop
mov
inc
fimul
lds
xchg
add
int3
sbb
lea
pop
sub
dec
mov
(bad)
into
test
cmc
push
xlat
jl
fwait
neg
aaa
sbb
xchg
ins
cmovb
inc
mov
jb
pop
fimul
jno
mov
imul
push
pop
jle
popf
or
jo
sbb
in
push
gs
mov
(bad)
outs
stos
loopne
cmps
dec
xchg
pop
mov
stc
xor
fnstsw
inc
xor
mov
pop
bound
test
sub
xchg
loope
xor
fisub
sbb
inc
out
jb
out
jecxz
inc
in
pushf
push
outs
jnp
cmp
mov
stos
sub
jecxz
movs
int3
sahf
cmps
add
sahf
aad
test
sbb
fld
mov
push
dec
js
ins
add
jp
js
push
or
psadbw
jae
jo
and
mov
ret
jecxz
sub
and
xor
jb
pop
cmps
sbb
cmp
pop
fstp
cwde
out
adc
imul
mul
gs
mov
dec
jge
out
inc
adc
jo
adc
push
mov
sub
stos
ret
sub
daa
xchg
xchg
or
clc
jg
pusha
popa
sti
nop
jno
ja
mov
addr16
adc
xchg
push
(bad)
ds
sbb
and
scas
xor
call
or
clc
xor
mov
mov
sub
imul
int
std
(bad)
repnz
add
sahf
ret
dec
aam
add
test
push
shl
std
sbb
mov
pop
fucomip
(bad)
cmp
cmp
jle
mov
pslld
add
jne
xchg
pop
cmp
xor
iretw
sti
adc
sub
ja
adc
(bad)
cmp
and
movs
gs
imul
or
test
stos
mov
jmp
cmp
push
outs
jae
rcl
or
dec
push
jae
jbe
mov
cmp
iret
mov
test
cmp
cmp
out
inc
adc
inc
jno
hlt
fcomi
(bad)
xlat
pop
retf
cmp
pop
xor
mov
xchg
sub
inc
mov
es
push
sahf
cmp
pop
shr
dec
in
mov
leave
mov
clc
cmp
data16
adc
jmp
add
pop
mov
shr
mov
xchg
mov
mov
daa
movs
scas
out
xchg
fstp
int3
pop
and
inc
inc
jne
push
jmp
test
ret
pop
add
shr
pusha
shl
out
mov
movs
loop
cmp
or
mov
adc
push
add
adc
push
lods
push
lods
clc
add
fist
(bad)
cs
mov
or
pop
cmp
fistp
dec
mov
loope
(bad)
lahf
mov
daa
sbb
dec
mov
inc
pushf
popa
jb
(bad)
cmp
jecxz
in
sbb
in
sbb
in
adc
xor
into
xlat
xchg
outs
movs
mov
adc
dec
add
mov
nop
(bad)
pushf
fwait
or
aad
stos
lods
nop
add
jl
sub
pop
bound
ficomp
lods
inc
movq
addr16
xchg
fs
imul
or
mov
push
test
aad
nop
sub
adc
mov
pop
ds
or
mov
mov
push
fistp
sbb
pop
mov
nop
xchg
mov
mov
jb
into
fwait
cmps
dec
call
div
daa
cmps
dec
pop
imul
push
xchg
(bad)
out
ror
add
fnstcw
(bad)
(bad)
push
mov
arpl
enter
loop
movs
pusha
mov
jl
repnz
outs
jnp
add
mov
imul
ins
stos
inc
push
xor
mov
adc
fstp
mov
and
jno
inc
cwde
dec
pushf
or
adc
mov
ins
daa
div
jmp
xor
dec
lds
and
in
push
int3
aaa
ins
jle
test
dec
mov
cmps
lock
stc
ja
lods
jb
mov
and
lock
ds
xchg
mov
mov
sbb
push
fdivr
into
xchg
pop
jo
add
loope
lock
aam
and
jnp
repz
sub
pop
sub
xor
add
lods
repz
shl
int
mov
pusha
mov
cmp
(bad)
test
pop
out
das
sbb
cmps
inc
into
cmc
stos
pop
xchg
pop
jge
mov
cmps
cmp
xor
fidiv
mov
outs
jno
loopne
cdq
test
and
mov
dec
out
push
mov
test
xchg
mov
iret
and
and
fiadd
push
pop
lea
test
inc
popa
pop
mov
xlat
popa
(bad)
xor
sbb
inc
push
cmp
in
fldcw
jb
repz
push
nop
(bad)
(bad)
dec
mov
mov
cmps
js
loop
adc
adc
fistp
cmp
push
fwait
sub
movs
jb
push
cwde
cmp
es
push
push
and
jge
xor
pop
mov
cmp
or
dec
dec
add
and
sub
gs
call
push
mov
inc
adc
in
dec
mov
fimul
jae
inc
xor
pop
cmp
fisubr
es
(bad)
mov
sub
push
stos
xchg
sar
fistp
xchg
xchg
push
neg
retf
call
loope
sub
cmps
loope
mov
sar
(bad)
fwait
push
mov
jecxz
pop
dec
mov
dec
jns
dec
cdq
dec
lock
idiv
es
jnp
pop
(bad)
repnz
out
leave
fisubr
add
ror
add
dec
mov
sub
jnp
pop
push
xchg
or
dec
gs
jmp
sbb
push
xor
pop
into
sti
(bad)
add
push
call
inc
xor
addr16
movs
in
dec
mov
sbb
retf
add
sub
cmp
movs
(bad)
sbb
mov
or
mov
imul
dec
cs
neg
mov
inc
mov
xchg
jge
in
mov
lock
lahf
(bad)
sti
iret
cmp
xchg
cmp
aas
jge
mov
adc
inc
fimul
inc
cdq
sub
add
fsubr
and
arpl
out
int3
je
push
ins
int
xchg
mov
(bad)
push
xor
cmps
xchg
dec
test
mov
ss
cmps
jo
add
pop
pop
icebp
sub
mov
and
(bad)
les
int
sti
fadd
imul
cs
mov
or
xlat
or
mov
test
mov
push
pop
(bad)
fmulp
push
inc
(bad)
jl
je
sub
mov
scas
xchg
lock
inc
ficom
(bad)
cmp
xchg
arpl
movs
mov
call
sub
xlat
pop
clc
mov
repz
hlt
or
call
sub
icebp
push
sbb
fcom
mov
adc
std
lahf
and
cld
or
arpl
imul
out
mov
dec
scas
inc
neg
xchg
clc
movs
push
int3
mov
in
mov
xchg
pusha
in
addr16
mov
fadd
mov
shl
nop
jns
es
xchg
les
dec
sbb
enter
hlt
ja
jg
pop
xor
into
pop
cmp
and
push
push
sub
xchg
not
push
std
sti
rcl
push
or
jle
in
loopne
push
inc
mov
cmp
call
(bad)
jle
fxch
fwait
stos
xor
fwait
jmp
div
jmp
lds
fwait
adc
push
jae
add
fidivr
xor
das
enter
(bad)
stos
mov
sbb
(bad)
sahf
mov
mov
mov
adc
std
mov
rcl
clc
rol
mov
cmp
mov
out
jne
ret
hlt
call
push
fs
fcmovnu
in
pop
test
test
jae
push
pop
movs
mov
add
cmp
ror
adc
inc
adc
push
mov
rol
ja
pop
push
out
mov
cmp
sub
fnsave
add
in
fwait
mul
scas
fist
repz
gs
mov
or
sbb
shr
rcr
fwait
and
dec
xchg
fwait
add
cmp
mov
inc
cli
hlt
cmp
push
pop
adc
popf
or
mov
in
dec
mov
sub
in
out
mov
lds
pop
fst
dec
or
mov
popf
dec
cli
ds
aas
daa
ja
fcmove
add
inc
jg
inc
pushf
pop
adc
fldcw
test
or
daa
push
jns
das
clc
lahf
push
mov
adc
mov
or
push
inc
retf
out
mov
add
dec
out
aaa
mov
daa
mov
or
call
ja
cdq
xor
lods
adc
mov
aas
dec
rcr
lea
lahf
mov
cmp
imul
cwde
sbb
stos
pushf
jne
add
cmp
dec
pop
or
popa
mov
jl
stos
lahf
jb
clc
pushf
mov
push
das
mov
sub
jb
and
mov
(bad)
push
sbb
int
mov
sahf
in
jle
dec
inc
jnp
enter
mov
mov
call
int3
pushf
mov
repnz
cmp
inc
adc
mov
cld
jno
jb
jl
in
rol
fwait
ja
mov
jle
and
sbb
and
push
nop
std
cmp
(bad)
(bad)
adc
push
iret
sbb
and
or
lahf
and
xor
xor
mov
es
adc
aad
lahf
jnp
push
outs
std
outs
sbb
test
and
cdq
xor
xchg
pushf
cmovg
inc
(bad)
fidivr
or
add
in
jle
or
imul
add
push
adc
xchg
inc
mov
invd
adc
mov
jns
mov
mov
mov
push
pop
ds
loope
std
push
out
adc
sti
imul
out
xchg
jb
out
mov
or
aam
dec
and
loop
mov
jmp
dec
push
test
rcl
mov
pop
mov
mov
js
(bad)
adc
jmp
add
or
lods
and
aas
sbb
and
fsub
pop
or
push
icebp
ss
add
movs
mov
icebp
and
daa
add
shl
enter
or
add
shl
adc
stc
movs
in
mov
cmp
sub
jb
add
inc
dec
jp
add
xchg
mov
xor
jo
lds
jns
pop
jmp
or
adc
sbb
push
std
hlt
mov
xchg
outs
arpl
aas
adc
jbe
(bad)
mov
dec
in
hlt
pop
pop
in
push
jae
jbe
mov
addr16
ficomp
pop
mov
push
mov
add
mov
or
pop
or
sbb
std
push
cmps
shl
ins
dec
dec
fbstp
push
or
xor
adc
dec
popa
xchg
and
leave
nop
jp
outs
dec
(bad)
in
push
pop
pop
mov
retf
idiv
push
nop
push
nop
inc
dec
dec
fld
scas
(bad)
jl
xchg
and
test
xchg
dec
outs
aaa
test
mov
xchg
gs
and
add
adc
mov
loope
push
(bad)
gs
sub
jae
xchg
sbb
not
(bad)
adc
jae
stc
shl
or
leave
mov
loop
add
ret
mov
sbb
out
push
add
arpl
call
cmp
aas
xchg
jle
xor
retf
push
add
sti
sub
pop
pop
sub
ror
xor
stos
stos
fs
and
loopne
and
mov
mov
jmp
or
arpl
js
inc
add
xor
or
idiv
sbb
ret
xchg
pop
fmul
in
sub
push
mov
xlat
mov
and
jns
adc
movs
xor
dec
pop
pop
mov
cmp
jnp
fsub
pop
pop
push
std
cmp
inc
aam
push
popf
push
or
(bad)
in
idiv
neg
pcmpeqb
xor
rdtsc
sbb
in
ss
push
loop
stos
div
mov
xor
mov
sub
(bad)
fwait
(bad)
xchg
in
and
(bad)
out
imul
sub
cs
lahf
test
int
and
sbb
stc
jno
or
gs
in
retf
push
pop
mov
icebp
push
xchg
stc
jbe
retf
dec
int3
jp
mov
arpl
sbb
dec
adc
pop
or
jb
int3
out
adc
in
xor
arpl
xchg
fstp
xchg
cmps
push
cli
ins
mov
mov
cmp
mov
mov
pushf
addr16
sub
ds
ds
mov
mov
test
clc
xor
daa
fld
xor
int3
mov
test
mov
mov
xor
and
push
and
jmp
jno
jp
mov
xchg
retf
jbe
add
gs
ret
mov
pop
or
push
icebp
add
movs
jns
imul
or
sbb
inc
pop
ins
cmc
mov
popa
push
out
dec
jl
mov
sbb
dec
and
lods
mov
dec
cld
sbb
inc
add
popa
mov
add
xchg
sbb
cwde
mov
dec
stc
test
icebp
leave
sbb
es
movs
test
std
xchg
test
xchg
jo
clc
pop
int3
jno
aaa
(bad)
pop
daa
je
pop
jbe
stos
popa
cmps
push
jmp
sbb
push
jmp
dec
not
aad
aam
push
dec
mov
jg
leave
popa
cmp
pop
and
push
dec
idiv
push
add
sbb
nop
or
daa
fild
lods
sbb
cmp
call
mov
leave
inc
mov
and
push
mov
imul
jge
shl
push
mov
xchg
push
dec
jb
adc
jmp
sub
ss
cmp
jne
xchg
and
daa
jge
pop
ret
dec
and
imul
and
cmp
daa
sub
xlat
push
aas
out
dec
or
retf
add
inc
inc
add
ss
jp
mov
and
popa
pop
call
adc
pushf
mov
(bad)
sar
dec
pop
jl
dec
aas
test
movs
repz
ficom
mov
aam
movs
sub
push
imul
and
ret
(bad)
ffreep
not
xor
cs
rol
push
sar
ret
inc
test
jno
mov
or
dec
mov
iret
repnz
mov
jmp
imul
jno
sahf
add
sahf
and
xchg
push
mov
int
jbe
pop
fisttp
lods
in
fisubr
jnp
stos
outs
loopne
sub
movs
mov
dec
lods
cmps
add
sub
in
xor
cmc
and
mov
retf
jnp
hlt
pop
jge
and
das
int3
push
aaa
imul
xor
shl
into
adc
mov
xor
mov
push
hlt
dec
fs
adc
mov
and
rcr
(bad)
sub
xchg
sub
adc
cdq
push
jl
fwait
push
pop
xor
push
stos
cdq
(bad)
jecxz
add
push
cmp
ret
jmp
adc
cmp
idiv
push
mov
arpl
add
inc
add
xchg
pop
loop
cmps
add
ret
dec
imul
into
sub
sahf
xchg
mov
test
in
dec
push
jns
fadd
dec
sbb
pushf
push
jnp
push
rol
fldcw
pusha
sbb
xchg
jb
test
inc
movs
and
or
call
jbe
cmp
mov
xchg
adc
sbb
aad
mov
inc
mov
xchg
mov
fimul
or
cmps
dec
test
inc
imul
rol
icebp
test
dec
not
js
pop
xchg
push
pop
add
nop
mov
mov
and
stos
cmp
add
jg
dec
mov
xor
leave
mov
xchg
imul
cli
enter
test
(bad)
or
enter
mov
cmps
das
xor
pushf
inc
cmp
push
cdq
inc
nop
xlat
retf
lea
xor
fisttp
les
push
jl
movs
scas
dec
cs
aaa
out
dec
xchg
in
mov
inc
fistp
dec
(bad)
ror
inc
call
jno
test
mov
in
pop
cmp
adc
out
adc
push
data16
lock
push
sub
(bad)
cli
xchg
bound
or
or
das
mov
imul
xchg
xchg
retf
aam
xor
test
icebp
enter
shl
mov
fdivr
retf
data16
mov
xlat
dec
dec
cmp
mov
imul
sub
mov
loop
mov
xor
pusha
aaa
xchg
pop
xchg
ds
push
pop
jecxz
mov
xchg
inc
jle
pop
aaa
xor
adc
mov
xchg
lods
call
int
scas
push
jno
test
scas
dec
mov
cs
test
push
rcl
adc
and
sahf
sub
jl
mov
jecxz
data16
push
and
add
add
adc
std
lods
in
fmul
add
and
pop
popa
adc
in
xchg
jmp
mov
lock
dec
icebp
push
jge
jnp
or
jne
daa
xor
retf
jl
call
aad
pop
ins
in
add
xor
adc
fmul
mov
pop
push
sub
leave
mov
cmps
fld
pop
imul
aam
jp
mov
push
test
sahf
outs
add
popf
repnz
lods
and
lods
pop
jl
xchg
dec
pop
pushf
pop
sub
loopne
dec
fdivrp
fistp
movs
lock
xchg
test
mov
shl
js
mov
ret
loopne
jbe
xor
pop
imul
xchg
test
dec
push
push
imul
adc
daa
test
mov
test
jb
fild
pop
dec
pop
mov
frstpm(287
out
xchg
or
out
fcmovu
mov
pushf
add
mov
add
cmp
(bad)
lods
sub
push
loope
mov
out
into
sahf
sbb
iret
fld
call
dec
outs
es
mov
mov
inc
sbb
scas
enter
sub
adc
add
shr
mov
push
popf
daa
std
sbb
retf
stos
aaa
in
and
adc
inc
mov
xor
test
inc
xor
and
mov
push
mov
cmp
out
mov
mov
bound
shr
iret
pop
adc
dec
jnp
mov
(bad)
out
pop
jo
mov
call
dec
mov
inc
cmp
sub
in
jns
gs
mov
(bad)
pop
imul
ret
lods
xchg
or
test
sub
add
ins
or
add
movs
mov
adc
xchg
fsub
xlat
fs
inc
jp
in
xchg
push
cdq
mov
pop
out
das
pop
cmp
push
cwde
addr16
fild
xlat
daa
(bad)
push
mov
sub
stos
hlt
std
loop
stos
push
add
jecxz
cmps
sbb
sbb
fdiv
and
je
mov
adc
sbb
inc
retf
mov
cmp
popw
inc
popf
retf
inc
data16
call
add
cld
imul
data16
lds
hlt
int3
(bad)
fs
(bad)
jmp
or
inc
or
sti
lea
jl
inc
jge
test
pop
enter
inc
test
imul
outs
xor
call
adc
xchg
jg
les
fnstcw
out
test
sti
push
jecxz
pop
stc
pop
dec
arpl
fld
hlt
xor
xchg
cmp
mov
ror
in
je
mov
push
loop
lods
and
dec
in
mov
stc
pop
scas
dec
pop
dec
daa
push
sti
sar
mov
fs
xchg
inc
cmp
jmp
aaa
popa
cmp
or
and
add
popf
std
mov
es
jecxz
cmps
mov
es
stos
ins
hlt
(bad)
je
jno
imul
into
(bad)
and
ret
(bad)
adc
fdivr
pop
jecxz
mov
xchg
ret
add
cs
lock
adc
pop
mov
sbb
pop
(bad)
dec
aaa
xchg
inc
scas
sahf
jmp
mov
xchg
add
ror
enter
out
mov
cdq
mov
cmp
addr16
out
es
sub
xchg
cdq
sahf
test
add
jg
or
in
js
stos
cs
ror
pop
lods
out
pusha
cs
mov
and
mov
adc
push
and
shl
inc
cmp
movs
add
add
xchg
aam
cs
in
adc
aas
push
sbb
xchg
cmp
pop
idiv
ja
enter
ret
enter
xchg
ins
aas
add
shr
jmp
cmps
out
outs
aas
push
ss
dec
mov
xor
std
std
and
and
cmp
loop
arpl
cmp
jmp
jae
in
(bad)
cmp
call
aam
sbb
mov
push
(bad)
mov
mov
lds
lods
pop
clc
fiadd
adc
pop
xchg
sub
lods
mov
(bad)
stos
mov
sti
push
xor
ins
retf
sti
jge
cli
inc
mov
or
add
je
mov
lods
ins
mov
pop
jmp
inc
arpl
fistp
imul
movs
scas
aam
es
repz
rcr
pop
cmp
and
loopne
or
xlat
repnz
mov
fistp
mov
fmulp
fiadd
or
in
dec
leave
retf
fstp
dec
or
add
jb
in
sbb
pop
adc
cs
pop
inc
dec
sbb
ins
adc
or
into
dec
push
popf
daa
mov
push
int3
shl
(bad)
cmp
ja
push
xchg
int
add
sbb
(bad)
aam
xor
mov
pop
dec
mov
into
sbb
sahf
xor
cmps
add
jae
and
jg
outs
jo
jbe
and
xchg
adc
in
jg
inc
(bad)
es
mov
in
push
shl
sbb
daa
dec
dec
sbb
push
adc
stos
mov
add
aas
push
mov
les
les
pop
jmp
inc
(bad)
fist
mov
cwde
pop
dec
retf
(bad)
dec
push
fiadd
inc
sti
out
lock
mov
and
fisubr
addr16
pop
jmp
aas
xor
sar
js
xor
call
ror
adc
dec
sub
mov
icebp
push
call
call
push
mov
xor
outs
push
xor
jbe
rcr
xor
fdivr
outs
or
in
dec
dec
xor
movs
cdq
ja
js
repnz
jl
(bad)
pop
mov
xor
imul
mov
adc
daa
sub
cmp
aas
push
sub
into
or
aaa
lea
mov
or
fwait
ins
int
dec
into
js
cli
out
iret
pop
and
fsubr
imul
out
test
pop
jge
jge
add
dec
clc
mov
and
or
mov
pop
sbb
ins
dec
mov
in
or
bound
enter
lds
loopne
daa
out
mov
and
cmp
dec
arpl
mov
mov
js
xor
or
rcr
in
pop
sub
aas
cdq
inc
nop
ja
or
push
sar
mov
inc
mov
xchg
mov
pop
sub
cmp
cmp
fbld
or
loope
jle
aas
out
imul
(bad)
sub
inc
lods
outs
add
xcrypt-ofb
cmps
ins
add
jmp
repz
ss
dec
cmps
jl
sub
xchg
sub
lods
cdq
pop
lods
fbstp
cmps
mov
(bad)
scas
enter
daa
add
lods
in
popa
xchg
mov
dec
dec
clc
mov
push
lods
(bad)
xlat
jb
fwait
inc
cmp
repnz
push
pushf
jecxz
inc
lds
(bad)
jl
sbb
and
push
fmul
ret
push
jmp
in
idiv
and
mul
mov
push
jno
and
sbb
cs
(bad)
jnp
push
cli
jecxz
mov
inc
jae
adc
and
jg
in
sub
and
or
and
cmc
dec
mov
clc
fisub
or
cmp
sub
je
hlt
push
shr
push
call
dec
cld
retf
cli
xchg
inc
pop
jne
sub
xchg
inc
pop
into
in
repnz
cld
nop
popf
pop
lahf
add
sti
test
ret
retf
mov
pusha
popa
iret
retf
inc
in
int3
or
jmp
outs
pop
mov
sahf
jb
lock
(bad)
ds
or
scas
dec
shr
cmps
in
jo
in
stos
pop
cmp
adc
sbb
js
add
repnz
push
ins
xlat
and
icebp
sbb
popf
aam
cmp
ror
sub
pop
mov
sahf
data16
jecxz
jne
xor
mov
pop
dec
shr
addr16
cmp
stos
cmp
or
out
pop
sti
stos
inc
sahf
add
mov
jmp
xchg
sar
es
xchg
ds
stc
iret
sti
lea
xor
dec
sbb
pop
(bad)
mov
test
loope
lahf
lock
push
lds
inc
adc
stc
nop
in
adc
aad
fwait
test
sub
repnz
and
lods
push
xor
mov
lods
jno
xor
aad
lock
mov
arpl
pop
retf
clc
sub
pop
mov
sbb
movs
in
(bad)
lods
inc
pop
sar
or
jle
sbb
inc
and
jne
dec
mov
les
inc
fsub
dec
ins
cmps
in
lock
jmp
das
ret
popf
xor
or
fcmovnb
mov
cmp
ret
adc
mov
sbb
sub
add
mov
adc
or
mov
mov
icebp
fdiv
(bad)
ds
call
not
test
jl
(bad)
int
lods
push
enter
ret
xchg
add
das
xchg
cmp
jns
jp
aad
aam
adc
enter
icebp
sbb
je
ret
nop
xchg
std
cdq
in
add
dec
test
or
pop
jecxz
fiadd
mov
cmp
pop
add
iret
xchg
(bad)
sbb
xchg
shr
bt
xlat
lahf
push
pop
mov
or
rol
lods
push
mov
jl
call
sub
out
jecxz
pop
jp
dec
fs
dec
dec
imul
inc
cmps
(bad)
add
ins
shl
sahf
lea
adc
jbe
xchg
push
in
add
rcr
pop
cli
xchg
pop
(bad)
mov
xor
stc
out
std
mov
mov
int3
adc
mov
iret
or
add
cld
shr
dec
and
xchg
mov
fwait
mov
movs
adc
in
sar
xchg
es
xchg
mov
push
mov
cmp
loop
push
mov
jle
lock
fidivr
test
fcomp
fimul
cmp
mov
inc
mov
add
dec
fwait
sub
ins
outs
leave
ror
dec
sahf
pop
std
xchg
push
pushf
add
mov
adc
dec
das
jb
jns
scas
jl
mov
add
xchg
retf
lods
push
test
int3
loope
aad
adc
bound
sub
dec
pop
sub
push
xor
dec
pop
push
ret
add
xlat
out
xor
nop
mov
gs
cmp
sub
loopne
add
stos
mov
out
add
jmp
push
push
lds
in
mov
imul
les
icebp
test
mov
loope
call
dec
jp
pop
gs
jne
mov
rcl
iret
fisubr
jmp
push
lahf
or
pusha
clc
cmps
xchg
dec
xlat
xchg
in
add
int
jnp
dec
push
push
shr
add
or
push
push
sub
adc
lds
xchg
cdq
jl
sub
arpl
data16
aas
das
pop
fwait
test
xchg
inc
les
das
jg
xchg
mov
sub
shl
push
sub
inc
test
mov
inc
inc
shr
sub
(bad)
dec
jo
sub
ss
jle
xor
push
mov
push
or
repnz
daa
imul
test
imul
test
inc
jno
pop
dec
mov
mov
scas
sahf
add
test
xor
test
push
add
cmp
mov
rcl
fwait
pop
push
mov
push
out
sbb
mov
das
add
sub
pop
lahf
enter
inc
ds
ins
mov
mov
pusha
cmp
in
js
pop
iret
jno
pop
ja
cmc
xor
gs
xlat
fisubr
xchg
jmp
mov
xchg
in
sub
jno
xor
das
sbb
jne
xlat
push
sub
cmc
daa
dec
add
adc
out
jmp
pop
retf
or
movs
cli
addr16
sub
mov
aam
push
out
or
cli
out
jae
aam
adc
jecxz
mov
int
adc
xor
sti
mov
mov
inc
cmps
js
jae
lods
bound
or
shrd
clc
cmc
add
and
sub
outs
aam
cmps
popa
xlat
xor
cmp
add
jecxz
mov
hlt
xchg
mov
mov
push
xor
in
mov
mov
into
jge
imul
arpl
push
jno
mov
push
arpl
fisttp
jns
ret
das
pop
jmp
icebp
xor
ds
cs
and
pop
fld
push
adc
mov
jnp
pop
and
pop
sub
jecxz
sbb
sub
jmp
mov
imul
pop
xchg
jae
cmp
mov
push
mov
mov
xchg
ins
mov
mov
enter
shl
hlt
cmp
inc
call
ds
jns
or
fld
sub
std
test
dec
pop
push
cmps
cli
daa
jmp
fimul
and
mov
sahf
dec
stos
sbb
mov
mov
pop
mov
daa
ds
pusha
call
div
jmp
and
xor
int3
rcl
test
mov
inc
mov
mov
clc
(bad)
clc
das
sahf
sbb
out
scas
xchg
mov
out
mov
mov
enter
sub
out
pop
test
mov
jns
inc
call
push
stc
jne
jp
jle
pop
inc
cmps
cmp
fistp
test
sub
rcr
xor
cmp
push
fs
in
jmp
dec
xchg
cmps
in
sahf
retf
sub
or
(bad)
jae
je
fcomi
fdivr
push
(bad)
sub
xchg
mov
aas
mov
cs
into
and
pop
push
sti
lahf
jecxz
push
dec
push
mov
xchg
mov
mov
lds
sub
shl
jae
ins
retf
call
and
(bad)
mov
enter
add
add
xor
enter
loop
popf
mov
ficomp
aaa
pop
stos
jo
fwait
jl
adc
aad
mov
outs
out
cmc
outs
dec
pop
or
scas
dec
push
fadd
inc
xchg
(bad)
mov
scas
push
inc
test
xor
jl
xchg
test
stos
jb
mov
push
pop
push
lahf
dec
jp
xor
cmps
mov
pop
aam
cmp
jl
push
jge
fadd
mov
dec
mov
ret
jl
mov
mov
xchg
shl
mov
mov
dec
jns
out
jecxz
(bad)
dec
fstp
gs
or
xlat
fisttp
cmp
cmp
lar
adc
pop
in
int3
in
mov
data16
and
xor
es
cld
scas
ror
bt
pop
mov
xlat
mov
stos
jmp
jecxz
call
ins
shl
xchg
lods
cmps
push
push
mov
push
xlat
lods
xor
or
in
shr
shl
scas
or
xchg
lea
pop
aam
sub
retf
ins
(bad)
aad
xchg
inc
inc
jp
jmp
mov
inc
adc
repnz
mov
add
jns
mov
dec
and
push
test
inc
mov
cmp
out
cs
sub
mov
sub
test
shl
les
dec
push
mov
cwde
jns
(bad)
es
or
movs
or
push
jle
xchg
pop
jne
out
lods
dec
pop
popf
inc
mov
pop
xchg
enter
gs
fcom
lea
ficomp
popa
or
stc
sbb
movs
cmp
xor
mov
aaa
pop
sbb
ja
in
lods
sbb
add
popf
inc
sbb
cmp
or
pop
or
out
rcr
aad
xchg
cmc
in
out
pop
ja
popf
add
push
xor
cwde
mov
fs
scas
xchg
cdq
jne
mov
mov
pop
fs
adc
mov
enter
mov
je
jb
xchg
es
int
cli
std
outs
ror
test
nop
push
sahf
fmul
dec
call
adc
dec
cmp
ret
int
addr16
jmp
mov
or
xor
and
out
std
push
dec
mov
ret
(bad)
mov
sbb
lods
push
test
or
cmps
dec
jmp
fbstp
stos
or
jecxz
icebp
je
push
jb
retf
retf
cmp
push
xlat
cmp
stc
add
scas
sahf
push
mov
mov
sbb
jecxz
xchg
dec
aad
(bad)
std
imul
mov
dec
xor
inc
xor
cmp
mov
int3
in
jb
(bad)
iret
mov
and
mov
fidiv
mov
js
sbb
jmp
pop
(bad)
call
bound
stos
push
push
bound
add
test
rcl
pop
(bad)
xor
pop
lock
aad
cmp
xor
jmp
cdq
stos
fld
inc
mov
xor
call
enter
clc
cmp
jge
push
inc
(bad)
xor
and
jne
adc
sub
into
sahf
jns
mov
or
pop
jmp
icebp
cmp
daa
and
adc
loop
dec
imul
cmp
ror
scas
mov
fmul
lea
std
dec
jns
mov
pushf
or
mov
dec
repz
jg
mov
lea
shl
sahf
sbb
addr16
mov
jle
and
popf
jb
adc
jne
aad
push
ss
retf
or
dec
adc
jl
fidivr
scas
jbe
loop
je
xchg
dec
mov
popa
xchg
pusha
pusha
cmp
fcmove
mov
fist
inc
mov
xor
mov
mov
or
add
xchg
sbb
sahf
xor
mov
ins
jmp
imul
fcmovnb
repz
ror
scas
in
and
int
into
ror
or
mov
mov
and
scas
outs
das
push
test
adc
mov
neg
repz
jne
test
arpl
sub
sar
add
popa
lock
push
mov
inc
push
test
mov
push
mov
adc
(bad)
repnz
or
cmp
movs
loope
in
fwait
mov
mov
enter
loopne
push
and
push
push
xchg
push
sbb
daa
jp
push
outs
cmp
lea
xor
push
jmp
es
and
test
mov
into
sar
sub
sbb
cmp
sti
(bad)
shl
mov
mov
push
sub
lea
in
sub
clc
xor
push
pop
neg
out
xor
xor
pop
dec
les
shr
mov
push
cmps
daa
adc
or
imul
(bad)
sub
sbb
push
mov
nop
clc
push
rol
pushf
dec
(bad)
fsubr
xchg
mov
dec
hlt
add
pop
pop
(bad)
out
jne
stc
retf
enter
fistp
dec
mov
dec
in
pop
pushf
xchg
mov
daa
enter
cmp
xlat
or
mov
pop
in
mov
jle
mov
push
mov
stos
mov
fs
add
sub
cmp
mov
push
rol
idiv
push
xchg
cs
enter
sahf
popa
inc
lods
icebp
sbb
jbe
sub
xchg
stos
xor
push
outs
(bad)
and
jp
sti
pop
gs
inc
xchg
cwde
loope
add
int
and
rol
mov
jg
fisub
retf
sti
lock
cmp
loopne
scas
jmp
xor
add
inc
cs
mov
fst
neg
jecxz
ror
aas
and
(bad)
lds
sbb
call
mov
std
loop
jle
jg
push
fldcw
retf
gs
mov
data16
cmc
(bad)
fisttp
repz
inc
adc
mov
imul
push
push
and
and
pushaw
data16
es
dec
and
mov
dec
test
in
sbb
stos
add
lods
mov
das
ret
arpl
lods
popa
or
das
js
or
out
and
out
stc
pop
jge
mov
jo
jae
mov
stc
outs
imul
shl
mov
outs
and
push
sub
inc
push
sbb
push
loopne
icebp
xchg
cld
dec
jo
adc
dec
enter
cmps
mul
stos
push
mov
outs
popf
outs
and
(bad)
jmp
and
mov
fistp
inc
outs
mov
and
sub
mov
das
nop
cmps
loope
movs
fwait
mov
dec
and
mov
pop
xlat
fs
pusha
push
or
inc
test
repnz
or
sahf
loopne
or
ss
cmp
or
xor
dec
xor
mov
xor
sbb
sbb
cmp
stos
jae
pop
sub
mov
or
or
sub
sar
dec
leave
out
or
push
out
ror
xchg
not
in
push
in
sbb
cmc
in
xor
inc
mov
pop
mov
imul
ins
outs
mov
mov
loope
xchg
inc
inc
out
fnstenv
mov
not
hlt
or
hlt
cdq
int3
imul
pusha
push
loopne
xor
cmps
mov
or
stc
inc
ja
push
dec
es
xchg
inc
xchg
jae
loopne
push
inc
jbe
or
cmp
loop
and
jns
movs
stc
pop
int
mov
sbb
mov
in
add
pop
push
sub
mov
cmp
sar
movs
lea
xor
xchg
scas
fcom
or
jns
out
lea
or
(bad)
jae
adc
movs
cmp
test
xor
pop
sbb
push
icebp
out
push
shr
pop
es
(bad)
mov
ins
aam
out
ins
cmp
idiv
loop
and
shl
push
mov
dec
mov
xchg
xchg
aaa
mov
sub
push
mov
fist
(bad)
push
mov
cmc
enter
rcl
xchg
jecxz
mov
cmps
or
nop
dec
das
inc
ret
xor
push
sar
das
jp
push
movs
clc
sub
movs
test
sub
es
aad
or
pop
jmp
inc
sbb
cdq
cmp
inc
addr16
lea
test
jmp
jg
jmp
inc
add
add
fwait
mov
jmp
movs
mov
jge
(bad)
icebp
repnz
push
cmc
shl
loope
imul
std
lock
lock
ror
sbb
adc
xchg
xor
int3
fistp
je
jbe
mov
push
gs
sub
mov
movs
js
outs
inc
xchg
xor
dec
dec
jmp
mov
ds
adc
stc
inc
inc
mov
nop
in
dec
ins
xchg
jo
push
lea
push
icebp
push
adc
jno
dec
in
cmps
stos
ins
add
mov
imul
mov
push
or
movs
jno
xchg
cmp
fimul
jo
fdiv
call
sub
fs
or
xor
test
mov
(bad)
fisttp
jno
lock
stos
rcr
sbb
fcomi
jmp
jmp
cdq
sbb
ds
sub
cmp
or
clc
imul
add
icebp
dec
sub
pop
adc
dec
cmc
(bad)
cmps
out
or
jecxz
cld
push
jnp
push
add
mov
sbb
sbb
push
fst
lea
retf
out
xor
lods
and
mov
test
jg
retf
push
pop
loopne
mov
shr
cli
lods
jmp
adc
daa
ins
ret
dec
cmps
loop
push
or
(bad)
dec
shl
ds
push
sub
dec
int
xchg
rcl
stc
push
jb
adc
je
fadd
push
scas
call
mov
ret
movs
mov
xchg
pop
cmp
mov
dec
and
dec
and
inc
adc
pop
aad
shr
jmp
fcom
mov
pop
in
daa
scas
mov
adc
or
sbb
call
shl
mov
jle
lods
xlat
xchg
push
test
cmp
sub
in
(bad)
mov
xor
bound
or
adc
and
pop
and
xchg
ret
sub
jb
stc
sub
xchg
or
and
retf
(bad)
cmps
mov
jo
mov
(bad)
cmp
stos
dec
adc
mov
mov
(bad)
ins
xor
arpl
mov
push
push
ss
push
cld
mov
fstp
push
cmps
inc
ins
or
cmps
and
test
jmp
imul
sbb
mov
test
pop
pop
test
or
add
cld
mov
jns
jo
push
jge
push
mov
or
lea
adc
push
cwde
jl
mov
int3
xor
cmp
mov
pop
fild
jmp
lods
adc
inc
add
pop
mov
mov
and
jne
and
pop
ins
inc
adc
(bad)
fsubr
xchg
int3
retf
mov
xlat
and
push
mov
xor
icebp
fcmovne
inc
xchg
das
xor
cmp
push
and
shl
mov
adc
rcl
test
lahf
and
fs
sub
sub
mov
jae
aas
arpl
mov
cmp
loop
and
sbb
xor
xor
push
and
nop
imul
mov
dec
jmp
dec
mov
outs
sbb
lahf
cmp
pop
in
pop
xlat
fisubr
add
inc
ds
push
outs
pop
jl
(bad)
push
(bad)
loopne
cmc
outs
sahf
loop
add
adc
jmp
add
fimul
ins
or
dec
jg
(bad)
fsub
paddusb
jp
sub
xchg
icebp
pusha
repz
test
je
mov
xor
add
mov
sbb
pushf
sub
retf
mov
mov
pop
mov
fnstcw
pop
lods
movs
imul
xchg
std
mov
dec
mov
jge
in
pop
ins
es
push
shr
dec
stc
xchg
jmp
in
not
or
stos
addr16
xchg
xor
es
sbb
mov
shr
into
jae
mov
and
sbb
lock
(bad)
jmp
ror
(bad)
sar
inc
es
aaa
push
push
shl
push
pop
fwait
or
dec
movs
loope
push
push
(bad)
rcl
cmps
adc
(bad)
or
outs
mov
adc
add
jle
inc
repnz
(bad)
mov
xor
cli
fyl2xp1
arpl
dec
and
mov
scas
adc
mov
pop
out
sbb
and
sub
dec
dec
mov
(bad)
fmul
push
push
jno
mov
loopne
sar
and
pop
jle
xchg
adc
(bad)
jo
rcl
sub
loope
and
and
cmp
adc
fs
or
sub
push
adc
jns
sbb
pop
jb
aam
mov
loop
and
add
mov
mov
scas
call
mov
pop
sub
or
push
outs
push
les
call
mov
cmp
imul
pop
add
dec
loop
or
add
lods
jno
dec
retf
dec
outs
loopne
ja
inc
cwde
sbb
out
jb
ja
add
adc
enter
sbb
mov
int3
mov
in
out
mov
jno
inc
enter
or
mov
out
jg
jp
shr
fcom
adc
cmc
or
mov
in
fild
repz
sti
hlt
cmp
mov
inc
inc
neg
(bad)
int3
inc
lods
daa
pop
test
dec
mov
imul
(bad)
ins
fstp
inc
fs
add
add
jns
inc
out
pop
jmp
adc
icebp
ja
jns
sbb
js
adc
jmp
mov
xchg
pop
fucomi
xchg
enter
push
jl
outs
mov
outs
js
or
clc
jae
jns
mov
ins
mov
test
(bad)
fwait
pop
mov
push
cmc
cmps
xchg
adc
dec
pop
lds
push
sbb
ins
fisubr
ins
push
cvtpi2ps
xor
stos
xlat
aam
ds
jae
out
xor
int
push
inc
imul
push
ror
inc
jecxz
dec
fcmovnbe
nop
shr
jle
call
in
std
push
pop
and
call
add
loopne
call
pop
inc
sub
dec
mul
cmps
stos
dec
retf
hlt
lods
pop
mov
std
shr
push
mov
xor
sahf
popa
imul
test
test
in
arpl
das
ficomp
mov
bound
push
or
pop
sbb
push
and
cld
aad
adc
into
inc
in
dec
bswap
inc
dec
ja
pop
lea
fld
mov
(bad)
in
test
call
dec
hlt
lahf
push
cmps
movs
jnp
sub
out
and
mov
(bad)
cld
nop
inc
inc
arpl
std
leave
jge
mov
call
push
in
dec
push
mov
call
xchg
fimul
mov
shl
dec
je
inc
hlt
push
push
pop
push
cli
xchg
sbb
xor
push
popa
cmp
cmp
xor
push
inc
in
push
xor
leave
or
(bad)
hlt
xchg
inc
(bad)
sti
jno
mov
dec
adc
pop
mov
dec
iret
sub
call
jmp
std
(bad)
mov
mov
ss
inc
cmp
sahf
jae
jg
je
and
mov
inc
inc
xchg
pop
pusha
sbb
(bad)
in
push
cld
ret
fcomp
mov
iret
push
push
xor
mov
xchg
out
and
mov
adc
xchg
sbb
fdivr
cmp
cdq
jnp
cmp
test
mov
xlat
aas
icebp
push
pushf
lea
add
aad
dec
pop
shr
loope
outs
mov
cmp
in
sbb
js
stc
mov
les
jae
shl
out
addr16
jmp
jb
mov
les
jno
pushf
fst
mov
pop
dec
sar
xor
and
sub
sti
mov
push
mov
pop
popa
pop
js
mov
loope
ja
cmps
popf
clc
(bad)
vunpcklps
adc
imul
mov
sti
mov
mov
ds
cwde
test
lds
out
sahf
scas
fst
sbb
inc
ret
stc
xchg
cld
fisttp
je
cmc
sub
enter
push
push
out
(bad)
dec
jo
mov
inc
cmc
jmp
jecxz
out
ss
mov
xchg
pop
jecxz
fnstcw
loopne
or
or
jmp
daa
or
jl
adc
repnz
mov
dec
xor
cmp
add
(bad)
mov
dec
lds
jg
mov
nop
add
push
adc
inc
sar
jmp
jmp
loope
xor
sbb
loopne
hlt
pop
sbb
out
ss
xor
imul
repz
jp
gs
clc
shr
aaa
mov
mov
jbe
mov
dec
fstp
mov
retf
nop
aam
mov
mov
cli
(bad)
imul
xor
mov
xchg
jle
mov
psrad
fild
cmps
lods
cmps
pushf
sub
addr16
jo
mov
mov
adc
pop
mov
xlat
pop
cmp
mov
cmp
pop
sbb
sbb
mov
push
outs
movs
in
jmp
and
mov
inc
dec
aam
push
pop
leave
xlat
fs
sub
add
push
adc
stos
scas
rcr
in
ins
cmps
test
xor
retf
cdq
loop
scas
push
push
inc
ss
inc
pop
inc
and
stos
xor
or
test
mov
mov
dec
push
jnp
or
adc
fist
cmp
push
call
sahf
call
in
cmc
(bad)
pop
data16
lock
pminub
js
fcmovbe
dec
out
xor
out
stos
mov
div
push
jecxz
pop
add
hlt
push
in
fmul
mov
nop
xchg
ja
repz
(bad)
add
or
sbb
call
add
mov
xor
movs
sahf
add
movs
shr
xor
cld
push
pushf
out
cmp
push
xchg
push
xchg
das
pop
aam
outs
daa
and
pop
(bad)
xor
daa
stos
int3
cmp
mov
int
pop
mov
out
jecxz
lods
xlat
call
xor
adc
cmp
sub
jb
int
out
mov
push
mov
push
pop
push
xlat
xchg
rol
jecxz
loop
and
push
aad
xchg
test
xchg
mov
sub
mov
mov
test
ss
xchg
popf
mov
xchg
loopne
mov
pop
mov
cmovo
xchg
jb
out
and
inc
in
push
fistp
dec
call
imul
add
mov
push
in
cwde
jmp
push
mov
in
inc
jae
sahf
push
ins
adc
pop
inc
xchg
scas
pop
jge
ja
icebp
adc
pop
push
dec
inc
mov
inc
xchg
scas
sbb
stc
mov
ins
shl
retf
push
retf
sbb
gs
retf
arpl
sar
jmp
aas
not
push
add
arpl
jmp
sbb
xchg
(bad)
fisub
mov
or
out
mov
jnp
enter
xchg
xor
rcl
or
sub
mov
pop
mov
movs
adc
xchg
pop
mov
imul
sub
pop
xor
call
inc
pop
dec
and
iret
scas
loop
cmp
call
div
aaa
psadbw
xchg
pop
outs
in
cmpxchg
lds
mov
enter
(bad)
mov
mov
fs
mov
pushf
arpl
int
std
add
push
or
loop
dec
(bad)
cs
mov
adc
and
push
sbb
push
fs
sbb
add
cmp
mov
inc
push
enter
cmp
out
aas
out
and
enter
clc
sub
and
jns
test
mov
cmc
ficom
xchg
data16
fstp
adc
cld
cwde
stos
loopne
mov
outs
mov
sub
neg
sbb
push
aaa
inc
and
ret
jle
cmp
xchg
cld
add
mov
ret
and
stos
jg
imul
int
pushf
inc
push
popa
dec
cdq
push
inc
movs
movs
adc
ficomp
xchg
push
and
pusha
xor
jecxz
ss
mov
cmp
add
out
dec
jns
jmp
and
and
adc
cmc
jp
cmp
jg
sub
push
nop
jp
or
or
out
idiv
daa
sub
mov
pop
in
mov
in
popf
dec
dec
ret
not
sbb
ret
repnz
and
nop
pushf
sbb
cmp
jge
sub
les
repz
cmp
(bad)
jmp
lds
xchg
cmp
int
xchg
push
push
jecxz
inc
aaa
jne
pushf
fdivr
xchg
or
shl
add
push
pop
mov
aam
(bad)
retf
cmc
loope
gs
mov
out
dec
call
and
xchg
dec
pop
jg
xor
add
xor
scas
inc
addr16
push
mov
mov
pusha
mov
out
pop
mov
adc
call
jge
jae
and
push
xchg
ds
fst
test
mov
loop
dec
mov
ficomp
mov
jecxz
out
sub
aaa
pop
fucomp
sbb
cwde
fninit
popf
les
jmp
add
pop
lock
jmp
movs
fmulp
aam
add
loop
and
aam
pop
sbb
jmp
dec
outs
loope
fsubr
push
sbb
pop
jl
test
xchg
data16
mov
sub
out
mov
adc
repz
xchg
mov
adc
stc
push
nop
cs
push
mov
and
inc
mov
lahf
mov
and
fistp
dec
xchg
mov
inc
push
popf
jae
sbb
jmp
aam
daa
inc
adc
ins
adc
xchg
scas
push
sub
pop
or
data16
pop
mov
jae
sbb
mov
out
ins
lahf
aas
pop
push
jp
mov
shl
sbb
fnstcw
xchg
out
xchg
fs
enter
call
xor
inc
jl
in
mov
sar
iret
sti
call
dec
mov
call
test
pop
dec
mov
cld
mov
dec
repnz
add
adc
in
push
inc
or
popf
cmp
cli
mov
lds
pop
(bad)
icebp
add
jno
test
fiadd
push
pop
test
(bad)
enter
test
(bad)
cmp
xchg
ret
inc
mov
jb
cwde
movs
push
inc
sbb
rcl
xchg
add
js
push
popfw
pop
mov
xchg
add
jno
inc
adc
(bad)
jmp
or
or
in
mov
enter
add
rcr
jo
pop
mov
(bad)
call
or
sbb
dec
mov
xchg
(bad)
ror
mov
neg
inc
leave
loop
fcmovne
enter
(bad)
call
call
or
cld
push
cmps
sti
sbb
(bad)
call
adc
clc
and
inc
mov
out
into
jle
retf
mov
repz
jl
mov
(bad)
cmp
pop
aad
stos
fstp
pop
mov
cmp
rcl
je
sbb
and
jmp
out
pop
or
jnp
sbb
in
out
int3
(bad)
in
xor
(bad)
sti
xlat
push
not
stos
js
inc
cli
and
or
dec
mov
mov
dec
mov
mov
add
les
jp
test
sub
std
jns
xor
xchg
jle
inc
cmp
arpl
cwde
push
sub
mov
stos
xor
sti
sub
in
inc
sbb
je
fcmovb
cmc
adc
xor
sub
jg
ins
stos
pop
dec
jg
shl
fstp
retf
mov
sub
mov
adc
fist
xchg
sub
or
inc
(bad)
sub
rol
sar
scas
in
rol
movs
mov
pop
ss
lahf
mov
push
(bad)
adc
hlt
sbb
push
pop
call
adc
ret
mov
mov
mov
mov
adc
ret
mov
ja
jbe
enter
call
test
fprem1
pop
adc
clc
loopne
mov
adc
inc
cld
sbb
sub
sar
data16
imul
push
in
mov
jns
je
pushf
fs
repnz
scas
or
retf
add
test
loop
adc
cmp
stos
mov
pop
push
arpl
shl
dec
add
fisttp
lds
pop
cdq
lds
mov
outs
btc
mov
daa
mov
push
lods
inc
sbb
xchg
dec
xchg
push
jo
das
add
and
loope
jecxz
data16
push
mov
adc
pusha
addr16
pop
xchg
in
lea
retf
arpl
ins
add
cld
inc
int
adc
or
cmp
pop
and
push
mov
push
jecxz
dec
repnz
jmp
scas
push
jbe
data16
dec
outs
lahf
jmp
mov
out
int3
jo
and
mov
sub
cmp
cs
hlt
in
mov
lea
bound
jmp
adc
sbb
jp
mov
ret
shl
jl
pop
adc
(bad)
in
icebp
and
hlt
cli
jg
(bad)
cmp
pop
mov
div
sub
sar
or
mov
(bad)
jae
and
xor
push
jno
sbb
rcr
lods
in
sti
push
ja
sub
jecxz
push
outs
jp
or
aad
xchg
dec
gs
mov
inc
xchg
xor
xor
pop
sti
std
pop
pop
popa
mov
(bad)
(bad)
dec
adc
call
sbb
test
push
imul
sbb
pushf
xor
push
sbb
in
mov
xchg
sub
stc
imul
xchg
repnz
imul
adc
cmc
mov
cwde
and
in
fwait
add
scas
cmc
es
out
sti
add
mov
jae
inc
or
loopne
in
or
hlt
xchg
cs
mov
mov
ja
inc
cmp
mov
shl
(bad)
xor
mov
ja
(bad)
jo
adc
mov
pavgw
out
fndisi(8087
sub
jno
mov
daa
data16
inc
pop
or
cmp
sbb
xchg
and
xor
cmp
fadd
add
or
sti
popf
imul
and
push
lods
ss
sbb
loop
aad
push
sbb
inc
ins
xor
fstp
dec
push
push
cdq
and
scas
xchg
jl
aaa
mov
test
out
cwde
paddusw
ins
pop
ret
call
adc
hlt
cs
scas
add
pop
lods
jg
into
sbb
mov
push
gs
mov
cmp
inc
(bad)
xchg
call
add
sub
lahf
das
push
and
xchg
jmp
push
cmp
out
mov
push
dec
aaa
mov
mov
imul
les
aad
shl
lds
pop
sub
inc
not
add
popa
cmc
iret
mov
int3
mov
pop
cld
neg
mov
mov
retf
pop
cmps
xor
out
mov
and
fwait
jp
xchg
ins
inc
dec
lahf
push
mov
ja
push
xchg
je
sub
adc
sub
out
mov
fisub
outs
out
cmps
add
cmp
mov
jp
mov
sub
fisttp
stc
fiadd
ins
dec
fdiv
int3
adc
mov
ds
xchg
setg
mov
and
lea
fimul
xchg
add
gs
mov
out
mov
outs
inc
push
add
xor
jg
xchg
js
fsubr
in
ds
inc
pxor
inc
(bad)
lahf
enter
or
add
mov
jl
pop
cmp
fwait
jg
push
scas
mov
mov
outs
fwait
pop
je
neg
(bad)
push
test
js
xor
clc
ins
jno
arpl
or
cmp
xor
loope
pop
cmp
dec
ret
pop
xlat
imul
mov
pusha
outs
inc
cmp
mov
add
ins
inc
dec
push
sbb
inc
jmp
mov
dec
cmp
xor
xlat
int
dec
adc
sub
fisubr
mov
fmul
arpl
sahf
sub
sbb
shl
hlt
ret
jg
aas
mov
mov
pop
imul
push
ficom
adc
mov
pop
mov
in
retf
xchg
loop
jns
repz
cmp
test
xchg
sbb
pop
fisttp
mov
cmp
(bad)
jb
scas
mov
std
pop
movs
sub
int
sub
jne
inc
je
dec
sub
or
or
push
add
retf
mov
mov
mov
add
sti
push
jo
sbb
test
punpckldq
mov
aaa
lods
jo
xor
stos
push
push
shl
jg
jmp
add
ror
movs
jg
call
pushf
push
mov
in
imul
mov
sub
aad
(bad)
jge
test
arpl
out
test
jo
(bad)
push
mov
push
mov
sub
jmp
cmc
mov
mov
dec
mov
das
sbb
sub
jnp
mov
data16
xor
pop
lds
and
inc
das
adc
(bad)
cld
(bad)
out
gs
fnsave
das
mov
xor
cwde
psrld
and
imul
in
jnp
fisttp
adc
loopne
cmp
jne
xchg
xor
mov
loopne
or
xor
mov
inc
into
add
fldenv
xchg
ret
pop
mov
cs
hlt
cmps
test
mov
inc
in
inc
sub
sbb
push
pop
inc
jne
cdq
and
fisub
ror
out
sub
xor
call
aam
cwde
mov
xchg
mov
pop
pop
lods
call
je
movs
sbb
and
jle
xchg
fidivr
test
push
stc
sub
stc
stos
pop
cmp
adc
into
aad
push
jl
lahf
or
or
pop
out
ss
imul
inc
fistp
push
pop
pop
lock
ss
int3
pop
(bad)
pop
dec
out
mov
mov
pop
lahf
outs
cmovle
iret
jl
adc
lods
(bad)
adc
outs
mov
(bad)
bound
inc
xchg
pop
ret
test
sbb
dec
lea
jmp
ret
push
mov
sbb
and
movs
les
test
(bad)
pushf
dec
xor
sub
xchg
sub
fnsave
mov
loop
mov
add
loop
jmp
adc
adc
xchg
shr
mov
lea
int
adc
outs
dec
fwait
sbb
repz
push
adc
mov
sbb
enter
adc
push
cmc
cdq
in
mov
jmp
cmp
jecxz
aaa
cmp
gs
lock
pop
nop
push
cmps
dec
daa
arpl
lods
jle
dec
add
ss
stos
dec
dec
push
ins
lock
cwde
test
in
aaa
rcl
pushf
pop
cmps
sbb
dec
loopne
and
push
fwait
outs
cli
or
dec
pop
inc
arpl
add
jne
pusha
sub
out
test
xchg
iret
out
shl
leave
and
idiv
cdq
sbb
push
mov
sub
cs
gs
mov
adc
sbb
cdq
adc
mov
sub
add
add
loopne
inc
push
das
in
repnz
dec
add
cld
cdq
mov
je
xor
xor
daa
cli
mov
xchg
outs
add
xchg
pop
mov
(bad)
adc
movs
repz
push
mov
cmc
sub
jbe
int
or
jne
sbb
add
mov
jnp
adc
jmp
std
out
mov
xchg
std
clc
pop
out
js
pop
push
add
inc
in
mov
into
and
mov
xchg
jge
mov
aam
fcmovu
sbb
sub
sbb
sub
fdiv
pop
mov
dec
xchg
jecxz
es
imul
push
xchg
into
jbe
sub
push
pop
push
cmp
push
in
jne
sbb
mov
aas
jbe
or
dec
dec
ins
pop
pop
ret
xor
inc
outs
xchg
mov
mov
sbb
cdq
push
out
jp
cmp
xlat
clc
aaa
mov
(bad)
mov
or
jno
ret
jb
jmp
mov
data16
cld
(bad)
imul
cwde
repnz
int3
jge
mov
xlat
mov
adc
mov
call
cmp
xchg
push
imul
mov
aad
gs
lods
mov
inc
int3
in
shl
out
pop
mov
cli
jg
retf
jnp
xchg
inc
mov
add
pop
jmp
(bad)
pop
aas
pop
push
xlat
bound
inc
and
xchg
movs
cmp
fwait
data16
lods
dec
push
lock
fst
xor
xor
idiv
add
in
or
inc
pop
push
stos
fadd
aam
ds
jb
cmp
xor
(bad)
xchg
mov
sbb
clc
lock
mov
lods
shr
(bad)
mov
stc
mov
ja
call
xchg
push
xor
out
pop
retf
popa
scas
and
test
pusha
or
sahf
xor
(bad)
outs
dec
daa
int
mov
dec
pop
movs
arpl
jmp
mov
pop
or
xor
cwde
dec
jae
jnp
push
mov
test
out
imul
pop
not
xor
push
jb
test
stos
mov
and
jp
push
imul
int3
fisttp
jmp
test
fmul
mov
add
jge
jbe
test
dec
mov
pusha
xor
lods
xor
mov
and
cmps
pop
dec
pop
aam
into
xor
test
fwait
mov
leave
pop
cmp
xchg
mov
add
enter
xchg
sbb
scas
lock
sub
dec
push
repz
pop
in
inc
add
out
iret
or
inc
fistp
cwde
ror
movs
nop
(bad)
inc
dec
and
pop
outs
jns
int
mov
rol
dec
or
push
dec
les
iret
pop
ret
mov
pop
mov
test
jmp
mov
ret
retf
and
(bad)
cli
xor
scas
jns
mov
mov
mov
out
stos
mov
xchg
sub
icebp
retf
adc
xchg
and
dec
or
pop
mov
cmps
adc
cwde
jno
pop
and
popf
int
pop
out
pop
jno
pop
fdiv
sbb
adc
cmp
scas
fnstsw
dec
(bad)
cmc
adc
div
inc
jns
mov
xor
cmp
out
outs
fsubr
mov
repz
imul
sbb
adc
cmps
(bad)
and
cmp
test
scas
mov
(bad)
mov
dec
sti
(bad)
push
sbb
mov
repz
stos
nop
outs
mov
adc
xchg
lds
mov
jbe
pushf
push
js
sub
movs
dec
shr
(bad)
mov
and
adc
mov
mov
sahf
inc
mov
mov
sub
out
hlt
mov
and
popf
mov
out
in
xchg
add
sahf
shr
test
jo
xor
xchg
push
rcl
xor
inc
out
fwait
popa
je
push
inc
mov
stos
pop
jae
dec
cwde
stos
jbe
sbb
mov
sub
add
inc
inc
js
into
push
jno
mov
dec
adc
arpl
stos
pop
xchg
lock
es
int3
pop
nop
add
jecxz
vshufpd
sti
movs
adc
movs
ins
lods
jnp
pop
cmc
shl
lea
js
sahf
sbb
push
mov
fs
and
int
cmc
add
jmp
cmc
inc
out
loop
stos
jb
rcl
and
call
stos
test
cmp
ja
inc
pop
or
pop
jp
dec
bound
loope
push
in
je
push
sbb
sub
ins
cwde
xor
jmp
fimul
adc
fisub
push
push
ds
into
bound
fidivr
leave
out
fistp
fstp
sbb
push
call
(bad)
hlt
sbb
push
nop
pop
arpl
mov
mov
mov
jb
sub
mov
xchg
stc
mov
mov
and
mov
or
mov
scas
(bad)
cdq
jae
sbb
and
xchg
test
dec
idiv
stc
outs
les
cmovo
loope
or
cmp
xchg
test
fsub
dec
outs
leave
fnstcw
stc
mov
ins
arpl
outs
fs
xor
adc
das
iret
loop
cmps
mov
mov
in
(bad)
or
fidivr
(bad)
outs
jp
(bad)
jmp
lock
dec
cwde
fldenv
mov
mov
ja
pop
mov
bound
jne
jns
rcr
xchg
movhps
sahf
xchg
inc
xchg
push
(bad)
lods
fisub
jno
lds
mov
lahf
sbb
imul
cld
mov
fisub
cmps
dec
push
or
rol
adc
(bad)
jns
in
pop
div
mov
mov
loop
xchg
(bad)
jecxz
mov
mov
mov
ins
lods
rcr
add
jecxz
popa
xor
sbb
or
jge
dec
ret
aas
imul
mov
inc
popa
cmps
ja
push
adc
adc
pop
jg
mov
xchg
out
add
mov
lods
xlat
cli
lock
shr
aam
xchg
xor
mov
outs
call
or
dec
adc
lahf
movs
dec
mov
nop
stos
xlat
mov
ss
jecxz
mov
nop
je
pop
mov
idiv
cmps
outs
cmp
movs
sub
test
jae
mov
and
pop
movs
lods
push
imul
push
dec
push
jecxz
rep
(bad)
mov
inc
xor
push
pop
jbe
sub
or
xor
push
fxch
cmc
dec
inc
inc
imul
dec
loopne
repnz
xchg
cld
cli
in
sbb
daa
rcl
test
add
jp
and
inc
out
je
inc
xchg
mov
pusha
xor
test
popf
or
clc
sbb
adc
jl
sti
or
mov
cmp
aaa
push
in
pop
pop
mov
scas
xor
out
jecxz
sahf
not
jle
pop
sar
push
fisubr
sub
fist
aad
sub
sub
loope
xor
(bad)
push
test
retf
mov
add
push
shr
retf
dec
mov
jo
adc
icebp
loope
out
lods
paddsb
call
mov
in
cmp
push
sub
jbe
cli
jmp
sbb
outs
and
sub
adc
ror
sub
ja
sub
cld
adc
adc
mov
cli
sbb
pushf
or
call
inc
xchg
mov
push
dec
mov
add
inc
inc
fbld
sbb
mov
mov
addr16
je
dec
sbb
fcomip
cmp
dec
retf
inc
mov
popa
je
jle
jmp
cli
in
pop
inc
iret
mov
out
icebp
sbb
push
add
push
sub
xor
jmp
jbe
add
inc
or
push
jle
jl
retf
(bad)
cmp
ror
scas
or
out
pop
stos
jmp
mov
aam
xor
and
outs
dec
loope
hlt
and
lods
mov
xlat
cmp
(bad)
mov
fild
pop
daa
mov
imul
shl
and
sub
mov
lods
std
inc
scas
xor
jno
inc
dec
(bad)
call
loop
pop
push
mov
pop
cmp
push
adc
add
aaa
and
mov
mov
mov
push
movs
and
push
and
push
out
aas
ins
xlat
add
out
fsub
cmps
mov
data16
outs
mov
adc
cwde
and
push
and
out
mov
lods
sub
adc
mov
jb
sbb
mov
dec
cmp
(bad)
lock
(bad)
addr16
jns
push
repnz
lods
pop
bound
fmul
mov
imul
mov
loopne
push
adc
ds
mov
jmp
enter
loope
int
out
pop
rol
and
sub
add
ds
jecxz
sub
mov
loop
and
push
mov
push
mov
cmp
mov
push
lahf
fistp
mov
dec
in
push
std
inc
inc
inc
mov
and
mov
mov
movs
xchg
test
and
test
stos
mov
repnz
retf
pop
xchg
xor
sub
mov
loop
les
shl
shl
iret
push
mov
jmp
jbe
xchg
test
imul
loop
cs
call
lds
lods
push
xchg
aam
mov
(bad)
out
jae
ja
data16
loope
sar
pop
pop
or
out
std
jbe
mov
ret
aad
push
inc
aas
adc
push
push
loope
outs
push
dec
cmc
push
fisttp
push
int3
cmp
inc
add
cmp
pop
cmp
pop
(bad)
jp
enter
les
cld
and
xor
dec
int
push
jecxz
inc
out
xchg
add
gs
std
fisub
retf
je
xchg
iret
fisttp
sub
daa
and
paddb
dec
sbb
pushf
sub
jbe
fucomi
sbb
repnz
out
mov
gs
xchg
xchg
stc
outs
test
add
(bad)
outs
mov
in
test
loop
test
jmp
fwait
es
(bad)
add
push
cmp
mov
push
push
and
jl
add
imul
inc
push
pusha
mov
ret
or
cmp
or
cld
jmp
mov
dec
or
cld
hlt
mov
in
pop
sub
lods
pavgw
rol
inc
inc
imul
adc
dec
call
cdq
adc
jae
shl
mov
call
inc
retf
rcl
sbb
retf
inc
mov
add
dec
pushf
ss
mov
lods
sbb
dec
jmp
cmp
stos
(bad)
jp
in
sbb
add
jno
gs
cs
adc
push
xlat
ja
fdiv
out
movs
xchg
test
repnz
dec
mov
mov
jns
dec
xchg
imul
ret
(bad)
fbstp
push
cmp
cmps
fmulp
mov
push
or
hlt
test
stos
xor
dec
jmp
push
jne
add
cld
jmp
pop
push
sbb
sub
dec
outs
ins
pop
sub
sub
mov
movs
xor
pop
cmp
xchg
adc
fild
mov
aad
pop
in
jle
sahf
shl
fild
add
xor
pop
je
jbe
xor
mov
cli
mov
js
fwait
xor
nop
or
test
es
adc
xchg
inc
stos
shl
mov
(bad)
sub
xor
aad
scas
movs
daa
sbb
xchg
leave
inc
imul
xchg
cmp
cmps
inc
imul
idiv
adc
test
push
adc
retf
popf
vpxor
in
cmp
push
xor
fidiv
sub
mov
js
mov
addr16
inc
xchg
ins
jp
sbb
(bad)
dec
sub
rol
add
out
xor
ficom
jno
ror
push
cs
jp
pop
lods
push
mov
or
daa
jecxz
push
sbb
adc
xor
pop
and
arpl
mov
push
cmp
adc
fstp
test
and
popa
data16
adc
cmps
ds
test
xchg
mov
adc
aam
sbb
fs
pop
ss
pushf
fxch
bound
cli
jne
dec
mov
inc
xor
xchg
push
out
inc
(bad)
jo
mov
int
pop
or
retf
in
mov
aam
push
(bad)
repnz
retf
adc
leave
out
push
in
dec
cmp
pop
jmp
pop
dec
ret
cmp
push
jle
stos
dec
cwde
pusha
adc
outs
std
call
mov
adc
fimul
mov
aas
repnz
fisttp
je
data16
daa
cmps
icebp
sbb
sbb
push
out
stos
xor
pop
jb
push
mov
test
and
jb
fsub
std
je
push
push
push
add
leave
adc
xor
outs
loopne
jmp
push
fldenv
sub
ret
sub
pop
sub
inc
mov
leave
out
mov
pushfw
pushf
push
jl
pushf
xchg
add
jp
popa
pop
stc
fwait
mov
push
jnp
loop
mov
leave
adc
dec
inc
ds
pop
loope
cmp
mov
inc
xor
clc
dec
rep
and
retf
pop
cmp
rcl
sbb
jbe
call
test
fimul
add
and
adc
jnp
ds
cld
sbb
sahf
enter
lods
call
sub
jno
xchg
mov
jg
repz
or
(bad)
push
sbb
xchg
lahf
in
test
jmp
add
(bad)
dec
(bad)
sub
int3
sbb
pop
fist
jbe
inc
aam
test
pusha
mov
cdq
mov
sbb
or
pushf
sub
mov
inc
aad
cld
iret
in
xor
and
adc
mov
fnsave
pop
adc
inc
mov
pushf
inc
jp
dec
rol
mov
scas
xor
sar
pop
fdiv
mov
add
cmp
stos
lea
loope
shl
xor
adc
addr16
push
fnstsw
and
nop
(bad)
adc
(bad)
lock
cmc
out
and
jmp
jno
jnp
movs
fcom
clc
enter
icebp
(bad)
std
shr
cwde
lds
or
push
push
je
retf
push
imul
mov
call
mov
das
xor
retf
pop
iret
test
push
xlat
xor
dec
cmp
popf
daa
int
in
jbe
inc
dec
ffree
cdq
popa
dec
test
jmp
or
dec
mov
mov
xor
cmp
and
push
mov
sbb
jno
(bad)
mov
pop
pop
dec
stos
add
nop
ja
or
lods
sub
fwait
pop
out
sub
push
cdq
leave
sbb
jmp
mov
push
xor
lods
cs
mov
ret
pop
mov
adc
jg
sbb
add
xor
cmp
mov
cs
cmp
imul
xchg
enter
ror
lea
inc
jne
pop
mov
or
inc
into
push
out
or
cld
ret
mov
cwde
popf
fwait
scas
sbb
dec
pop
in
call
and
mov
jmp
mov
xchg
adc
hlt
or
mov
mov
jge
popa
mov
xchg
fld
(bad)
adc
add
mov
lds
out
and
sub
rcl
out
add
pop
or
xchg
nop
pop
or
jno
popa
cmp
mov
xchg
(bad)
outs
jno
ret
xchg
sahf
sbb
mov
hlt
scas
jmp
jnp
xor
(bad)
(bad)
hlt
pop
and
mov
add
out
fidivr
push
push
xor
je
fild
aad
stos
xlat
adc
imul
sbb
lds
xor
mov
push
jns
stos
cmp
ret
mov
xchg
mov
jge
ret
inc
inc
iret
(bad)
mov
sbb
(bad)
jge
jge
push
push
fstp
dec
aaa
add
or
and
pop
fnstsw
mov
push
jo
xor
out
rcl
lods
loopne
push
je
push
icebp
xchg
pop
stos
or
das
data16
test
cmps
jns
sbb
jbe
sar
add
xchg
inc
call
cli
ret
daa
dec
mov
mov
mov
lahf
loop
jmp
jnp
sbb
(bad)
sar
push
icebp
mov
scas
jle
jmp
xor
jb
cmp
mov
aas
jecxz
aas
loop
stos
push
adc
and
pop
mov
add
sbb
dec
cwde
adc
adc
scas
add
mov
lods
lds
mov
mov
or
sbb
xor
push
sub
aas
and
mov
clc
mov
ror
out
(bad)
aad
test
adc
pop
cmp
or
sahf
and
xchg
in
xchg
inc
mov
sti
lidtd
dec
retf
push
stos
xor
in
jle
sbb
in
lea
jne
sahf
xchg
clc
fnstenv
out
mov
repnz
ds
adc
out
adc
(bad)
pop
arpl
mov
stc
cmps
pop
gs
mov
or
ss
data16
aas
xchg
jae
jmp
fistp
xor
cmp
iret
out
enter
fst
das
cmps
cdq
enter
push
jle
or
(bad)
fmul
mov
into
sbb
xchg
pop
call
in
jg
sub
data16
inc
dec
clc
pop
sbb
inc
adc
scas
cmc
push
cli
pop
xchg
lock
or
pop
dec
(bad)
aas
ficom
std
ror
dec
pusha
sti
ins
fcomip
or
xchg
dec
pop
icebp
jo
(bad)
fadd
push
push
add
leave
imul
mov
(bad)
test
push
inc
mov
push
push
stos
std
(bad)
sub
jb
rcr
inc
cmp
sar
inc
mov
(bad)
sub
jbe
jbe
inc
mov
aaa
in
mov
fs
and
jbe
popf
cmp
xor
lea
jno
jmp
in
push
aas
cmps
add
dec
xchg
cmp
xchg
lea
mov
loop
push
xor
jge
pop
push
inc
push
and
push
icebp
in
ja
es
ret
and
test
outs
mov
pop
cli
call
cmps
fcom
mov
push
and
hlt
sbb
(bad)
sub
jnp
int3
cwde
adc
adc
adc
out
push
popf
mov
rcl
scas
xor
xlat
or
stos
mov
lea
jo
adc
imul
pop
cmp
pop
or
xor
adc
xchg
lahf
icebp
neg
js
xor
dec
shl
iret
rol
imul
sti
sahf
mov
js
adc
(bad)
sub
mov
sub
sub
cwde
xor
inc
push
adc
jo
gs
scas
sbb
icebp
test
xchg
sbb
xlat
in
or
adc
in
out
xor
stc
mov
dec
add
mov
mov
fisub
or
xor
lods
xor
imul
inc
adc
pop
and
and
xchg
sbb
loop
pop
out
in
sbb
pop
es
or
mov
fistp
dec
sti
retf
outs
in
repz
inc
out
cld
cmps
ja
mov
add
inc
pop
int
fs
xor
pop
pop
movs
dec
fsubr
int
pop
inc
bound
inc
xor
dec
lahf
xlat
cmp
xchg
and
ret
rep
mov
dec
fbstp
push
fsub
jecxz
adc
mov
xchg
cdq
jb
pop
(bad)
mov
mov
and
popa
jns
pop
imul
aad
(bad)
retf
jp
mov
popa
mov
jo
lods
pop
rcl
out
inc
das
out
sub
rcr
out
pop
pop
shl
push
xor
pop
jno
mov
rol
in
es
loope
inc
sub
jl
(bad)
aam
mov
mov
sub
add
push
dec
mov
fs
cli
mov
test
and
call
out
xchg
in
test
and
les
jne
call
push
sti
and
(bad)
dec
outs
xchg
add
shl
sbb
pop
scas
lahf
mov
jl
mov
mov
mov
out
mov
(bad)
jp
mov
adc
scas
loop
dec
jmp
(bad)
pop
aam
xor
iret
sbb
inc
retf
ss
xlat
xor
nop
repz
popf
inc
jle
outs
inc
jmp
(bad)
or
xlat
retf
or
mov
popf
lahf
arpl
mov
adc
bound
ja
jmp
stos
sub
bound
into
cmc
inc
(bad)
pop
mov
jnp
dec
das
iret
(bad)
pop
cmp
xor
add
imul
fsubr
pop
(bad)
cmp
iret
xor
sti
retf
or
mov
js
add
rcl
sbb
aas
shl
add
addr16
daa
push
inc
jns
push
inc
sbb
mov
pop
sbb
mov
xor
pop
dec
mov
sub
push
inc
push
pushf
mov
ss
adc
gs
jl
jne
mov
push
and
popf
repnz
jp
sar
std
jbe
sbb
(bad)
in
mov
pop
cdq
stos
js
push
sar
test
dec
in
sbb
mov
(bad)
lock
mul
mov
fld
adc
jg
addr16
jle
xchg
or
push
jo
pop
xor
jg
test
ins
addr16
mov
scas
lock
pop
inc
pop
mov
sub
xor
movs
ds
push
add
rcr
outs
dec
arpl
dec
in
frndint
cld
push
xor
cmc
mov
pop
mov
call
mov
das
ficom
in
adc
push
pop
mov
popa
fmul
jl
inc
mov
sub
cmp
fwait
arpl
popf
cmp
call
cmp
rol
cmps
sub
push
pop
stos
in
in
or
or
push
ss
icebp
outs
push
outs
leave
xor
pop
jae
jnp
pusha
test
mov
or
test
imul
addr16
cmps
sti
sbb
sahf
mov
std
mov
pushf
gs
push
or
call
and
mov
or
push
jb
add
jnp
aad
inc
add
into
jecxz
out
push
and
mov
out
icebp
outs
or
inc
bound
cmp
cwde
movs
or
xor
test
or
test
aaa
xor
pop
inc
xor
(bad)
repz
icebp
inc
mov
add
leave
ret
push
imul
lods
jg
xchg
push
mov
inc
jo
stc
cmp
ret
inc
push
test
fadd
push
jecxz
add
push
xor
mul
mov
cmps
and
mov
or
push
push
dec
jl
mov
adc
cmps
aad
mov
sub
cmp
and
xor
lahf
jbe
add
ins
add
mov
adc
imul
test
mov
jae
arpl
mov
xchg
stos
out
mov
xchg
cmp
push
add
(bad)
add
sub
retf
sub
ins
(bad)
outs
xchg
out
test
jae
sti
push
push
fs
xor
mov
lods
or
out
fidivr
jl
ins
jo
mov
ror
loop
inc
cmp
push
adc
lods
jp
cmp
sub
js
inc
div
sahf
xor
pop
fmul
mov
daa
cmp
sub
cmp
sbb
fsub
aad
xchg
inc
sti
aas
mov
sbb
pop
push
pop
cmp
stc
add
add
add
hlt
sbb
mov
stos
mov
push
mov
sub
into
xchg
cmps
dec
fs
add
imul
jl
cmp
mov
push
ja
pop
mov
dec
cmp
pusha
repnz
xchg
xchg
dec
dec
sbb
fwait
mov
iret
mov
ret
out
adc
mov
lock
push
cs
dec
mov
mov
dec
inc
jno
call
lds
dec
in
cli
scas
cmp
xchg
icebp
lods
or
and
jne
adc
je
lods
test
in
cwde
dec
mov
iret
cmp
or
or
push
fild
inc
out
dec
mov
mov
iret
sbb
(bad)
cmp
sub
cwde
imul
jno
xor
xor
shl
test
push
adc
mov
cmp
out
repnz
jg
lock
shl
xchg
cmp
out
out
add
imul
xor
adc
pop
mov
fbld
jmp
loope
dec
or
aaa
mov
and
add
lock
mov
ins
and
(bad)
jns
shl
add
pop
add
add
add
mov
aad
jmp
push
push
pop
xchg
mov
arpl
add
sbb
cs
dec
cmp
inc
cmp
loopne
mov
inc
je
pop
and
lea
lahf
inc
mov
push
and
in
sub
inc
fidiv
sbb
je
pop
and
add
push
aam
je
add
stos
ret
arpl
cmp
mov
or
dec
xchg
repnz
cmp
dec
loop
lods
add
enter
clc
sahf
fsub
psubsb
mov
mov
jbe
(bad)
cmp
pop
sbb
sub
dec
push
or
int
sahf
repnz
xchg
sti
jmp
or
gs
cld
test
sub
ficom
push
shr
mov
arpl
sub
xchg
(bad)
push
arpl
push
aad
cmp
sbb
pop
in
push
xchg
stos
fwait
mov
lods
ss
dec
mov
xchg
push
xor
aas
call
adc
mov
sub
dec
sti
int3
push
je
xchg
aam
imul
push
xor
add
outs
call
dec
pop
out
xchg
outs
ins
xchg
adc
xchg
pop
in
daa
data16
ins
and
inc
cmp
imul
mov
sti
cwde
adc
sub
loop
ret
mov
movs
push
popa
pop
fld
jecxz
mov
movsx
aam
mov
mov
cmp
jmp
mov
dec
jmp
pop
xlat
cmp
addr16
jl
and
mov
ds
div
or
pop
or
push
(bad)
out
nop
movs
clc
pop
cmc
cld
dec
jl
xchg
movs
pop
jge
pushf
jo
fistp
clc
jge
push
mov
cmps
fadd
push
lds
and
test
or
pop
mov
stc
dec
mov
xchg
pop
rcr
and
mov
fnstcw
(bad)
sbb
fadd
add
push
sub
xchg
pop
and
jle
dec
mov
add
sub
push
(bad)
fist
sbb
jecxz
ins
xlat
dec
jge
hlt
add
imul
sar
stos
xchg
loope
js
ja
mov
repz
add
ret
push
mov
movs
inc
cwde
les
loopne
push
scas
cdq
push
cli
ja
cmp
fwait
and
mov
call
out
cmc
sub
sbb
ss
and
scas
xchg
mov
retf
fisttp
sbb
adc
shl
mov
push
jns
(bad)
les
aam
add
sahf
les
xchg
sbb
mov
bound
sbb
fs
and
in
arpl
dec
outs
cmps
leave
dec
inc
int3
int3
dec
jne
xor
push
inc
fmul
and
sar
or
xchg
cmp
dec
xchg
ins
scas
mov
test
ja
mov
pop
xor
hlt
push
mov
push
inc
sti
icebp
push
push
cwde
jno
xlat
ds
and
aas
jbe
in
test
ds
jns
pop
aam
push
pop
pop
push
movs
sbb
and
dec
dec
je
jnp
shl
loope
or
adc
lods
cld
xlat
leave
aas
rol
aad
bound
pushf
aam
es
les
mov
sub
sbb
jbe
arpl
jne
jb
fcomp
mov
add
xchg
adc
or
lahf
stc
clc
ret
cwde
in
(bad)
xchg
mov
imul
scas
pop
add
iret
add
jae
adc
or
pop
inc
jp
rcr
movs
in
sbb
scas
aaa
dec
xchg
mov
mov
gs
out
adc
scas
fcom
adc
leave
sahf
or
sbb
jmp
mov
call
das
cwde
mov
jmp
pop
push
mov
sub
and
xor
dec
sbb
fwait
push
daa
in
lsl
in
call
or
xlat
retf
mov
test
sbb
test
pusha
add
add
jb
add
sti
into
retf
cmc
ss
push
stos
movs
inc
mov
cmp
push
iret
push
rol
js
mov
push
std
cs
mov
imul
sub
out
push
or
mov
mov
sbb
mov
cmc
pop
sbb
sub
cmp
std
sbb
icebp
fsubr
or
add
je
(bad)
jl
mov
sub
ror
or
mov
ror
scas
sub
xor
dec
mov
aaa
or
les
pop
mov
cmps
(bad)
jge
push
add
push
xchg
mov
loope
ret
test
jge
repnz
dec
xchg
jl
cmp
jne
and
mov
jge
sub
(bad)
push
test
sbb
pop
sub
pop
je
ins
and
add
cmc
jmp
shr
call
xor
stc
add
xor
out
cmp
sti
dec
addr16
fldcw
sbb
xchg
cs
dec
inc
adc
scas
sbb
ret
retf
or
movs
push
push
and
sub
ins
or
ds
xor
sbb
bnd
mov
inc
jb
jns
cmp
fcom
(bad)
out
inc
dec
rcr
loopne
sub
jmp
not
rcl
clc
arpl
(bad)
dec
pop
jecxz
inc
push
add
scas
movs
in
jno
lods
imul
lods
sahf
push
add
pop
icebp
lods
push
adc
in
mov
push
jae
push
mov
mov
pop
les
addr16
arpl
loop
cmps
mov
call
jbe
ror
lea
push
retf
pop
inc
inc
xchg
aad
jecxz
mov
mov
and
adc
shl
iret
cmps
adc
inc
mov
pop
ret
mov
ss
loopne
pop
inc
mov
popf
mov
nop
push
push
mov
push
out
pop
push
and
xchg
(bad)
div
lock
popa
mov
xor
(bad)
retf
loop
adc
sub
inc
out
push
jge
mov
pop
(bad)
sub
stc
nop
mov
mov
leave
in
retf
outs
cmp
pop
ins
movs
aad
pop
add
xor
jge
xchg
dec
cmps
cmp
fcmovnu
dec
jb
mov
enter
xchg
out
mov
cmp
out
gs
mov
ins
aas
push
in
shl
jg
push
dec
pop
fwait
popa
sub
sbb
out
and
add
and
add
retf
test
call
mov
loopne
pop
mov
add
jb
sub
push
sbb
clc
xlat
fdivp
loope
push
ins
out
out
mov
mov
inc
jle
lods
mov
lods
push
test
or
sbb
dec
(bad)
cdq
imul
lods
js
mov
clc
add
(bad)
sub
mov
adc
jns
out
adc
dec
cli
retf
cmp
(bad)
in
push
out
mov
or
mov
mov
hlt
mov
push
adc
or
xor
pop
jnp
jle
fwait
xor
pop
loope
jo
std
ja
pop
ror
loope
ficomp
jge
and
rol
bound
sahf
or
sub
sbb
sbb
test
or
sub
or
scas
mov
or
mov
retf
push
fild
lea
add
repz
xchg
push
pusha
cmp
or
fisub
das
fs
xchg
sbb
ins
es
fs
arpl
or
inc
add
mov
add
lods
cmp
mov
inc
cmp
and
and
ror
add
bound
in
lahf
lahf
add
js
js
xchg
bound
imul
in
fld
in
sub
mov
clc
cmp
adc
dec
mov
cs
in
shl
cdq
fisttp
rcl
into
in
call
dec
rdmsr
pusha
sub
stos
mov
cmp
add
xor
mov
xchg
adc
out
(bad)
push
cmps
jbe
lea
xor
loopne
jmp
mov
cmps
inc
dec
popa
lahf
push
fstp
fwait
loopne
cmp
addr16
cli
mov
imul
mov
les
test
mov
push
or
sub
adc
dec
fdiv
jecxz
dec
pop
(bad)
retf
ss
daa
fimul
lea
cli
xchg
imul
adc
lock
pusha
scas
add
lods
pop
gs
push
mov
in
sahf
sub
mov
mov
aam
adc
xchg
mov
idiv
adc
clc
jns
sub
jnp
jmp
cs
cdq
in
out
loopne
sub
jnp
pop
mov
jae
cmc
out
mov
xor
jno
sub
xor
sti
pop
and
push
add
jmp
xchg
mov
pop
adc
push
jle
das
and
aaa
movs
test
enter
mov
cmp
adc
cmp
(bad)
jp
sahf
(bad)
add
ds
nop
mov
fisttp
pop
xchg
stc
arpl
into
mov
data16
(bad)
mov
call
sbb
aad
(bad)
pop
or
out
bnd
imul
sbb
leave
and
leave
movs
ds
fstp
imul
test
jae
loope
mov
or
push
pushf
push
add
pusha
push
icebp
push
cmps
adc
pop
and
dec
outs
into
fild
call
cmp
xchg
iret
sbb
pop
dec
dec
xchg
sti
sbb
(bad)
nop
ins
frstor
les
int
sbb
dec
daa
std
ja
inc
xchg
pop
xor
ret
call
not
and
les
popa
cmps
jo
adc
clc
sbb
std
pop
inc
repz
dec
jle
dec
vhaddps
ds
jbe
jnp
pop
xchg
(bad)
outs
and
cmps
add
inc
push
test
push
stos
sbb
mov
sbb
retf
inc
hlt
cs
je
nop
je
jmp
inc
(bad)
jbe
add
clc
lods
sbb
cmp
iret
push
retf
(bad)
ror
pusha
ret
mov
scas
push
xchg
dec
push
dec
inc
sar
loop
stos
xchg
sti
fcom
and
dec
retf
xor
scas
xor
cld
repnz
aas
add
mov
test
shr
cld
in
dec
hlt
pop
xchg
mov
pop
adc
lods
cmp
js
jnp
cmp
comiss
and
inc
mov
mov
pop
jl
repnz
pop
std
xlat
adc
pop
inc
xor
cs
sub
or
add
je
xchg
cmp
mov
add
inc
cld
test
sub
xchg
add
cmps
into
add
sub
in
out
lahf
add
pop
jbe
(bad)
fnstenv
sub
pop
cmp
arpl
xchg
dec
or
mul
loopne
std
and
sub
out
adc
adc
iret
(bad)
pop
cmp
xchg
es
pop
mov
cmp
aaa
neg
mov
loope
shl
shr
pop
or
inc
in
inc
aam
sbb
adc
jl
and
mov
pop
jg
sbb
adc
dec
xor
loop
lds
dec
movs
ret
leave
and
aam
loope
pop
and
neg
popf
test
dec
hlt
and
ds
es
push
and
std
or
cwde
pushf
scas
nop
push
popf
mov
arpl
and
cmp
test
pop
enter
inc
pusha
in
cs
ins
inc
(bad)
jle
xchg
xor
dec
hlt
int3
lahf
xchg
xor
add
push
fwait
cmp
or
pusha
call
mov
or
jne
xchg
jge
int
cmps
retf
shr
cmp
jp
aas
pop
xchg
scas
lock
(bad)
xor
adc
mov
inc
xor
(bad)
adc
mov
xor
ja
rol
aam
cld
daa
adc
not
pop
sbb
pop
xchg
ins
rcr
sbb
rcl
xlat
mov
push
ins
scas
adc
ds
mov
and
loope
shr
outs
dec
lahf
arpl
or
cmp
call
cli
leave
mov
xchg
rol
adc
in
aas
jg
add
lea
sbb
adc
sbb
xor
cld
lds
addr16
stos
mov
retf
shl
ds
push
pop
mov
int3
aad
nop
aad
mov
(bad)
pop
mov
mov
sbb
mul
je
je
stos
dec
xchg
sti
xor
mov
jne
pop
clc
mov
xor
mov
pop
neg
ins
xor
xor
fcmovnb
addr16
ins
dec
in
pop
mov
jno
xchg
dec
add
cmp
jne
mov
hlt
das
jne
adc
and
push
mov
nop
out
jno
jmp
ins
cmps
xor
pop
fmulp
jmp
icebp
xlat
stc
and
push
test
into
dec
add
or
and
sub
add
outs
pop
test
jmp
push
push
rcl
les
add
add
cmp
das
ds
stc
cmps
shl
in
movs
iret
sub
dec
xchg
or
xor
cmps
mov
mov
ss
jnp
cld
(bad)
push
mov
test
outs
cmc
lea
or
mov
fld
jl
xor
jae
push
cmp
int3
ins
in
(bad)
retf
jno
popf
out
and
pop
adc
push
fldcw
push
jns
mov
and
ror
sub
ss
fnstenv
repz
push
jg
adc
mov
retf
pop
or
inc
sbb
out
ds
jle
or
or
repz
retf
mov
ror
push
mov
inc
inc
dec
(bad)
lds
dec
add
pop
imul
test
mov
jp
pop
stc
mov
mov
mov
lock
mov
lahf
imul
test
repz
xchg
mov
repnz
test
(bad)
adc
mov
mov
push
(bad)
rol
(bad)
fwait
out
mov
cdq
add
out
bound
hlt
(bad)
cmp
or
cli
ss
sbb
sub
add
add
retf
xchg
cmp
mov
(bad)
mov
sbb
add
xchg
(bad)
sti
push
sbb
cmps
xor
js
pop
mov
mov
retf
xor
lds
add
cwde
gs
jne
movs
inc
inc
aas
or
sub
add
out
mov
fs
add
rcr
add
adc
inc
push
inc
cmp
push
jo
xor
retf
mov
push
mov
shl
adc
pop
dec
and
jmp
lea
shr
repz
and
mov
fldcw
add
dec
pop
lods
sbb
add
push
pushf
dec
test
mov
push
ins
loopne
cmp
adc
arpl
sub
(bad)
cmp
adc
sbb
and
mov
pop
rcr
iret
cdq
scas
adc
mov
iret
repnz
sbb
mov
inc
xchg
mov
pop
imul
jge
mov
mov
or
loop
stos
pop
inc
sub
or
lods
and
push
stos
push
and
retf
dec
add
mov
push
in
xor
in
adc
leave
ins
mov
test
call
push
or
cld
xchg
push
inc
lods
xor
arpl
aas
out
xor
(bad)
out
imul
mov
out
in
jg
dec
mov
div
in
jmp
fstp
inc
movs
or
pop
add
or
xchg
inc
mov
and
cmp
(bad)
(bad)
retf
push
retf
jno
sbb
cmp
call
call
fmulp
cmps
push
repz
stos
mov
loop
cdq
add
dec
mov
sahf
jne
mov
nop
mov
inc
ins
cmp
sbb
or
stos
xor
rcl
test
xor
das
call
inc
or
aaa
outs
aaa
in
test
xchg
or
push
push
leave
mov
xor
rol
cmp
lahf
lods
fyl2xp1
jmp
mov
sar
sub
push
out
sub
inc
popa
sub
aas
mov
jnp
sub
inc
test
and
jne
ds
das
push
sbb
xor
in
mov
ds
addr16
mov
pop
xchg
jnp
mov
cmp
push
cli
adc
xchg
mov
outs
fst
pop
jp
add
mov
pop
(bad)
adc
mov
jb
popf
mov
(bad)
xlat
lea
test
out
push
push
hlt
mov
add
fiadd
mov
std
cmps
(bad)
fdiv
stc
mov
ror
hlt
shl
mov
mov
mov
lods
aad
cdq
push
mov
mov
loopne
stos
movs
mov
ret
sysret
test
mov
loopne
push
inc
inc
adc
xor
test
mov
repz
push
stos
or
les
adc
lods
mov
xchg
pop
jns
jne
outs
xchg
inc
sbb
mov
xor
test
rcr
arpl
fiadd
push
mov
fbld
aas
push
sub
and
xchg
loopne
push
int
push
cmp
pusha
movs
ins
stos
ror
dec
pushf
push
push
xchg
aad
adc
inc
clc
pop
mov
jp
js
and
ret
sub
jecxz
cmp
lahf
or
cmps
hlt
jle
arpl
into
xchg
mov
ss
lods
leave
mov
out
mov
fwait
dec
add
or
sar
ss
lods
jnp
adc
add
icebp
fwait
retf
xor
jp
push
fisubr
cmp
sbb
enter
(bad)
jo
jne
cmp
xchg
dec
lods
ficomp
out
xor
sahf
dec
bound
xor
xor
mov
call
nop
jg
pop
fcmovnu
pop
xlat
jmp
inc
gs
arpl
add
leave
and
repnz
jge
push
clc
xor
daa
aaa
xchg
scas
fist
int3
adc
rcr
pop
ret
xor
ret
or
adc
inc
push
into
push
dec
(bad)
mov
dec
(bad)
sub
add
fwait
mov
mov
mov
xlat
mov
das
xor
jbe
mov
je
jge
xor
les
stos
test
push
ss
in
adc
mov
out
out
icebp
mov
mov
mov
ret
mov
js
sub
(bad)
xchg
push
ss
in
or
xor
ss
xchg
std
lahf
loopne
xor
sahf
fisubr
repz
(bad)
ins
mov
mov
mov
stc
xor
cmp
mov
call
push
loope
jns
or
cmp
push
mov
sub
out
jg
mov
(bad)
(bad)
sub
ja
inc
xchg
sbb
adc
mul
leave
add
enter
sbb
(bad)
pop
adc
push
(bad)
(bad)
cmp
fwait
stos
jg
sub
in
push
ret
cmps
xor
push
outs
push
mov
mov
and
and
push
jmp
call
xchg
sbb
in
jl
jp
sbb
cmp
mov
es
stos
fwait
xchg
int3
loopne
sbb
lahf
dec
fimul
cs
imul
daa
aad
and
je
push
ret
mov
xlat
and
pop
push
pop
add
idiv
loope
das
test
dec
mov
outs
push
retf
xchg
sub
xor
lods
repz
jge
cmp
mov
or
pop
sbb
sub
in
popa
cmps
mov
add
xchg
ins
das
in
sahf
je
cdq
cmp
xor
cmp
sbb
mov
mov
mov
sub
mov
xchg
ss
dec
mov
(bad)
jl
jmp
mov
ins
ss
cmp
gs
(bad)
xor
and
and
xor
cmps
xlat
imul
cmp
xchg
mov
popf
cld
ins
icebp
ja
sti
or
int
mov
mov
fld
(bad)
ss
xchg
pop
clc
push
cwde
lahf
(bad)
fdivr
not
mov
mov
scas
adc
push
jmp
xor
ja
and
or
or
mov
inc
cmp
hlt
xchg
jge
push
imul
test
jo
in
outs
or
xchg
and
ja
push
xor
loope
je
jg
imul
dec
pop
inc
dec
ret
and
(bad)
push
mov
shl
jmp
leave
xchg
add
cdq
mov
cmp
dec
outs
shl
ss
cmps
add
mov
or
inc
pop
xor
in
push
jmp
push
idiv
sti
adc
cmp
call
je
movs
jb
sub
lea
fs
dec
or
aad
gs
jbe
mov
mov
xchg
inc
push
clc
outs
cld
int
xor
sub
jl
lss
pop
lods
call
cdq
(bad)
push
sbb
clc
cmp
stos
js
mov
retf
add
fbstp
fsub
(bad)
xchg
cmps
dec
jae
and
cmp
call
mov
xor
bnd
lods
xchg
mov
add
xor
and
mov
xchg
jne
loopne
jbe
add
jb
mov
jmp
pop
ja
push
pop
cli
mov
mov
stc
jg
sub
cmp
ss
dec
xchg
leave
pop
mov
loop
lock
push
sbb
call
sub
jge
xchg
data16
mov
call
shl
push
adc
call
mov
or
aam
inc
mov
jle
pop
inc
sub
xor
movlps
sbb
setle
gs
dec
mov
cmps
aas
fild
xchg
scas
in
dec
adc
leave
fucomp
or
adc
add
ss
sub
out
enter
jecxz
pop
ror
push
outs
mov
push
aam
aas
shl
push
leave
dec
jb
jg
stc
ins
pop
fstp
mov
and
emms
lods
sub
push
pop
jae
rol
jo
adc
xor
add
sub
(bad)
clc
sub
fwait
xchg
cs
je
mov
lds
dec
push
out
in
lods
sbb
xchg
xor
mov
popf
out
mov
and
push
and
xor
jae
popf
into
dec
sub
xlat
dec
clc
std
dec
dec
push
(bad)
movs
xchg
addr16
mov
clc
mov
mov
scas
out
add
repnz
test
push
cmp
cwde
leave
mov
jp
mov
pusha
and
addr16
mov
and
aad
(bad)
popf
js
ds
lahf
ret
mov
test
(bad)
rol
out
xchg
pop
lea
jae
mov
dec
xor
fnstsw
push
xchg
jmp
mov
xor
mov
ja
push
cmp
sbb
fwait
inc
fucomp
ficom
sbb
fst
daa
jb
adc
(bad)
leave
mov
fwait
push
xor
adc
loopne
cmp
and
loope
or
cmp
fidivr
ror
ror
(bad)
mov
sub
push
fwait
stc
(bad)
pop
aaa
pop
push
test
dec
inc
adc
inc
sub
add
sbb
ins
inc
test
mov
aas
adc
arpl
push
pop
out
push
nop
push
nop
jns
jl
enter
in
lods
jo
loopne
xchg
jg
arpl
ja
adc
ror
adc
scas
mov
xor
pop
imul
and
out
repz
pop
dec
push
lods
cdq
in
xor
mov
jne
movs
and
mov
add
shl
dec
out
or
leave
jge
scas
das
retf
fadd
xor
ror
dec
xchg
lods
mov
idiv
adc
or
icebp
aam
sbb
pop
push
cld
fwait
push
jl
jnp
popa
or
retf
test
inc
cmps
js
jge
add
retf
nop
aad
out
push
test
test
std
or
cmp
dec
mov
mov
pop
cld
push
xchg
sbb
movs
xchg
adc
aaa
mov
les
adc
xchg
sbb
pop
adc
stos
rcl
cdq
cdq
pop
xchg
inc
inc
push
jnp
cdq
fisubr
cmp
or
fadd
push
xchg
pop
ins
mov
or
xor
aaa
(bad)
retf
dec
in
pop
movs
bound
es
sbb
je
sub
cmp
pop
lea
push
ret
enter
mov
or
(bad)
jo
daa
or
and
sbb
xchg
loope
sar
pop
stc
mov
ja
shl
or
stos
gs
test
ss
test
jmp
add
std
jle
retf
jp
dec
or
jmp
sbb
inc
adc
inc
outs
fist
push
push
push
cmp
adc
cs
add
sbb
cmc
aas
jge
push
sbb
push
pushf
xor
aaa
push
mov
pushf
je
pop
inc
adc
mov
fcomp
stos
call
cli
out
ja
mov
push
pop
ja
xchg
retf
daa
fisub
icebp
xor
out
or
push
mov
rol
and
mov
(bad)
fs
int
aas
shl
fisub
outs
cmp
pop
push
xchg
gs
pop
mov
call
mov
adc
loop
mov
cmp
cmps
aad
pop
mov
mov
retf
(bad)
jb
sub
mov
dec
xor
aam
or
popf
(bad)
push
mov
ds
ret
mov
dec
shl
cmp
mov
gs
inc
lods
shr
in
aad
ins
enter
or
sub
out
jmp
pop
les
push
jecxz
pushf
mov
outs
and
mov
cmc
pop
jle
sub
pop
scas
cs
sti
mov
std
(bad)
in
shr
popa
add
stos
mov
fiadd
mov
sub
cdq
cdq
ror
or
cmp
or
rol
jae
mov
fild
push
aaa
inc
shl
enter
cmp
ret
jp
xchg
or
or
mov
adc
inc
mov
stc
add
in
div
out
iret
xor
mov
stos
icebp
imul
or
sub
cmc
dec
iret
cmovnp
fsubr
nop
jb
loop
adc
adc
retf
in
test
(bad)
ins
cli
or
cmp
xchg
pop
dec
xor
imul
sbb
push
imul
dec
movs
cmps
mov
pop
hlt
jmp
jmp
out
add
vmovups
in
xor
rol
push
pop
dec
mov
mov
xchg
or
or
popf
cmps
out
add
pop
outs
add
cmp
dec
mov
mov
es
test
mov
shr
pop
mov
pop
mov
lock
pusha
push
jp
enter
jo
daa
mov
dec
sbb
mov
push
jle
popf
cli
scas
arpl
add
push
test
push
cli
fdivr
cmp
pmaxsw
outs
jnp
and
rol
mov
inc
scas
in
out
pusha
inc
sub
or
add
in
dec
add
loope
ja
mov
nop
out
mov
add
mov
jnp
push
pop
lods
dec
movs
add
std
int
mov
cld
call
fild
xchg
adc
mov
imul
push
sbb
stc
mov
inc
fisttp
add
xchg
(bad)
stos
fdiv
test
dec
adc
dec
xor
sbb
movs
pusha
mov
dec
(bad)
cmc
sbb
sub
sbb
lds
dec
mov
pop
cmp
cmp
push
call
cli
mov
pop
fs
stc
and
int
mov
xchg
mov
shr
lods
je
(bad)
in
or
inc
push
ja
dec
aad
adc
or
push
mov
mov
xor
jge
fwait
ret
out
pop
xchg
out
test
adc
mov
mov
inc
test
mov
adc
sbb
ins
movs
add
sbb
pop
call
add
out
jns
jmp
and
mov
push
retf
sub
and
mov
mov
gs
repnz
mov
retf
cs
pop
fcomp
pop
adc
jo
jne
out
mov
cli
mov
inc
scas
sbb
pop
sbb
inc
inc
int
std
ins
and
jg
pop
mov
adc
cli
and
cmp
mov
cmp
mov
sub
movs
fisubr
repz
scas
pop
test
jge
es
mov
popa
mov
jmp
ror
sbb
jge
clc
dec
jge
aad
cld
cmp
push
mov
fucomi
mov
pop
rcl
xor
call
adc
shr
pop
add
pop
dec
inc
push
jae
scas
dec
lds
addr16
and
(bad)
iret
es
imul
push
jnp
jne
int3
pop
cs
dec
jns
ins
std
mov
mov
mov
outs
cs
imul
pop
jbe
dec
arpl
shl
push
(bad)
test
ja
push
div
push
adc
movs
call
fdiv
out
(bad)
pop
jbe
mov
pop
cld
mov
add
xchg
fsqrt
jo
jbe
ror
cmp
inc
push
imul
fld
cli
call
retf
jbe
mov
cmps
outs
std
(bad)
fcomp
xor
(bad)
jbe
xor
daa
shr
and
mov
fisttp
xchg
mov
cld
dec
ficomp
std
adc
lahf
mov
push
jae
xor
sub
inc
sti
push
pop
stos
shr
int3
cli
add
pop
xchg
ins
or
push
jmp
push
push
shl
loopne
out
mov
lods
mov
add
lahf
jmp
in
mov
jle
mov
dec
mov
or
test
shl
sbb
ins
mov
or
pop
jbe
cmp
adc
in
xor
xor
add
and
and
dec
(bad)
xchg
jecxz
ror
cmp
pop
mov
xchg
daa
or
scas
daa
push
dec
scas
lock
pop
stc
mov
test
fidivr
cmp
inc
movs
pusha
sbb
jecxz
outs
inc
in
or
pop
push
sub
cli
adc
sahf
fld
push
ret
mov
aaa
sbb
and
or
aaa
inc
sbb
adc
sbb
and
adc
mov
ror
jg
lea
rcr
xor
xor
dec
sub
mov
mov
adc
mov
jmp
xor
adc
or
lea
sbb
mov
mov
in
popf
ret
and
mov
xor
shl
popf
jbe
out
js
push
ins
add
std
mov
dec
sub
adc
cmp
retf
mov
xchg
stos
mov
inc
inc
dec
sbb
push
xchg
or
in
cs
push
repnz
push
push
cs
xchg
inc
fnstcw
push
jnp
stc
test
add
mov
and
(bad)
fdivr
fwait
(bad)
cmp
inc
push
mov
rcr
pop
jnp
pop
cwde
ds
sub
sar
popf
js
fmul
(bad)
adc
icebp
jg
mov
xor
xor
clc
repz
mov
or
sti
inc
lds
dec
retf
mov
push
xor
(bad)
jae
mov
push
dec
add
mov
imul
sbb
sub
jp
lods
mov
addr16
mov
adc
ret
aas
pop
(bad)
out
int
nop
iret
addr16
daa
enter
fwait
or
jno
mov
or
ds
add
(bad)
out
das
xor
repz
pop
dec
mov
push
pop
push
cmp
jb
jmp
les
push
or
dec
mov
xchg
xchg
sar
xchg
sbb
daa
gs
pop
lar
cld
(bad)
fiadd
jbe
pop
xchg
and
sub
jle
and
or
jbe
mov
inc
outs
in
sub
stc
adc
out
pop
gs
cli
xchg
mov
movs
popf
int
scas
sub
fadd
shl
out
loope
div
lods
pop
mov
popa
inc
mov
movs
cmp
scas
test
add
or
inc
(bad)
xchg
hlt
and
pop
mov
sub
jg
arpl
sbb
inc
out
sbb
cli
dec
lds
mov
xor
cmp
cmp
mov
test
dec
jb
push
mov
je
sub
or
lods
out
add
(bad)
mov
aad
sbb
mov
loope
push
(bad)
cmp
jmp
or
data16
sub
repz
das
adc
dec
add
pop
icebp
mov
dec
icebp
jnp
mov
and
mov
add
xor
mov
and
arpl
scas
sub
cli
aad
cwde
dec
mov
jne
sbb
add
push
jmp
mov
ins
(bad)
cmp
imul
push
push
out
adc
sbb
(bad)
mov
out
add
inc
cmp
push
or
xor
push
dec
xchg
mov
bound
pop
add
bound
mov
xchg
mov
inc
je
sbb
dec
rcr
xor
dec
add
sbb
xor
sub
sbb
pop
pop
and
dec
cmp
jmp
iret
mov
loope
push
or
fisub
inc
sbb
test
jbe
scas
xchg
xchg
rcl
push
pop
and
xchg
jo
add
sahf
out
shl
xor
scas
jno
(bad)
mov
and
scas
jo
sbb
mov
unpcklps
stc
out
shl
clc
xchg
inc
mov
push
cmp
inc
xchg
enter
jb
clc
ficomp
repz
sbb
lea
cmp
stc
rcl
sbb
adc
mov
ja
test
jo
push
fistp
inc
adc
push
lea
cdq
inc
push
jnp
ret
cmp
pop
pop
cmp
pop
aam
iret
push
jg
rcl
mov
and
fistp
call
call
fisttp
jmp
mov
stos
xor
in
lea
outs
fcompp
lea
(bad)
mov
leave
push
jae
mov
inc
gs
in
cmp
add
dec
cld
cmp
inc
popf
es
inc
loop
outs
mov
stos
hlt
lods
xchg
cmp
or
loop
and
shr
cli
pop
mov
lahf
adc
ss
fidiv
cmc
xchg
xchg
fld
sahf
inc
or
inc
mov
dec
in
jg
push
mov
adc
sub
dec
sahf
or
outs
inc
fdivr
(bad)
push
and
jle
out
aam
xor
es
pop
mov
inc
pusha
jmp
ret
dec
add
pop
lods
pop
inc
sbb
imul
sbb
aaa
jb
sar
jnp
mov
movs
dec
cdq
sbb
xchg
in
retf
inc
or
rcr
ja
xchg
pop
in
push
scas
or
je
cmp
dec
and
xchg
adc
cmps
pusha
and
xor
and
mov
jne
mov
sub
in
cmp
lods
sti
movs
mov
mov
leave
test
xchg
inc
stc
dec
sbb
xor
cs
fdivp
sub
mov
xchg
lods
inc
xor
loopne
cmp
xchg
push
inc
cmps
mov
inc
xchg
scas
rol
push
in
cwde
xchg
nop
icebp
ficom
loope
ret
(bad)
pop
mov
test
sar
ins
cmp
pop
push
cmp
adc
push
xor
sbb
(bad)
aad
push
aas
mov
ins
aam
dec
call
loope
xchg
inc
xlat
sub
inc
and
sub
push
push
sbb
xchg
test
mov
ficomp
int
stos
pop
push
or
mov
or
pop
sbb
jge
adc
(bad)
sahf
cmp
int
imul
cmp
mov
cmp
mov
sar
popa
lds
in
(bad)
(bad)
fld
cmp
lds
daa
mov
xor
fwait
imul
lea
xor
dec
mov
push
imul
cli
push
je
jl
inc
movs
aad
sub
and
push
add
call
sub
xchg
push
jno
aam
stos
jg
aad
call
and
pop
sub
jb
or
jno
fistp
outs
inc
fwait
sbb
div
pop
dec
lds
xor
sub
or
icebp
jecxz
pop
pop
test
(bad)
lock
mov
inc
dec
dec
sbb
(bad)
fucom
in
outs
hlt
inc
adc
push
dec
movs
push
ins
sbb
mov
add
adc
lahf
ret
jmp
bound
test
sbb
jmp
sbb
mov
mov
es
jo
jb
(bad)
and
(bad)
and
xor
test
jmp
imul
adc
sub
or
ins
pop
xchg
ins
xchg
xchg
push
lahf
fwait
inc
into
movs
(bad)
cmp
aam
test
icebp
and
icebp
xor
adc
call
push
mov
je
push
lods
int
xor
daa
cmp
mov
pop
and
push
mov
add
movq
or
cmp
xor
push
out
inc
test
ins
mov
xor
cmp
or
cwde
mov
add
fdiv
fdivr
jbe
push
bound
jg
les
sub
mov
loop
mov
pop
pop
jae
or
jno
push
sti
outs
ret
xchg
jmp
and
es
xor
into
gs
rcr
pop
jnp
inc
js
std
and
outs
pop
dec
cmp
loopne
jmp
mov
cwde
mov
fst
stos
retf
xor
or
jae
test
in
jno
inc
cmp
ds
xor
dec
push
cmps
mov
or
in
popa
and
(bad)
cli
mov
rol
mov
push
fidivr
cmp
in
jnp
out
cdq
loop
repz
ret
sub
daa
cmps
or
jge
shl
loope
jmp
ret
adc
xor
outs
mov
push
mov
sahf
xchg
cli
inc
xchg
xchg
rcl
xor
and
(bad)
(bad)
(bad)
ror
dec
ret
fstp
add
xor
or
cmps
ds
dec
xor
fld
jle
pop
sbb
adc
pusha
jae
xor
call
leave
sub
mov
rcr
mov
add
inc
mov
and
arpl
out
cmp
adc
jns
arpl
pop
cmp
add
add
out
mov
jnp
aad
mov
jb
addr16
pop
and
mov
jnp
stos
and
dec
xchg
das
jmp
daa
test
dec
ds
adc
call
aad
aaa
push
xor
(bad)
imul
mov
fcomp
push
pop
cmp
in
fsubr
mov
ja
mov
add
jae
push
adc
(bad)
aas
push
enter
cli
pop
pop
cwde
pop
xrelease
dec
or
jl
test
sub
mov
xor
fwait
lods
cmp
dec
(bad)
or
fsub
adc
dec
or
sbb
aaa
and
and
dec
hlt
push
enter
push
xchg
mov
mov
push
inc
xchg
and
fiadd
daa
inc
out
jne
fxch
ins
dec
mov
movs
pushf
lods
xor
dec
xchg
sbb
fiadd
les
or
dec
rcl
xchg
sti
mov
mov
rcl
cmp
adc
or
sub
xchg
adc
cmp
pop
test
test
rcr
adc
leave
ins
stc
test
xchg
popa
or
ss
pcmpeqd
add
sbb
jl
inc
enter
xor
cmp
jmp
cs
push
xor
jno
fisttp
xchg
retf
cmps
shl
dec
xchg
bound
jg
mov
lds
or
jmp
adc
enter
xor
jns
cmp
cwde
mov
rcl
ficomp
add
cmc
das
in
xchg
pop
xchg
mov
out
cmp
fist
lods
iret
(bad)
call
jnp
cmp
xor
repz
frstor
pusha
enter
add
jne
dec
shl
js
sbb
xchg
xor
daa
mov
or
mov
leave
jnp
fmul
xlat
div
and
sbb
loopne
not
test
fcom
es
pop
cld
mov
add
shl
pushf
lods
mov
fdivr
inc
mov
pushf
xor
mov
dec
jp
fisubr
je
jl
fldcw
xchg
test
dec
enter
(bad)
aaa
jmp
sbb
sbb
daa
jns
mov
mov
dec
addr16
(bad)
or
jmp
and
and
cmps
cwde
push
ficomp
std
iret
pusha
ja
(bad)
inc
je
sub
pushf
cld
cmp
mov
add
xchg
adc
fist
in
mov
sbb
cmp
test
ins
mov
adc
pop
and
popa
push
hlt
inc
ins
dec
xchg
and
aaa
loop
rcr
mov
shr
cmp
xchg
repz
xchg
xchg
xor
pop
sub
in
nop
(bad)
mov
jge
in
and
dec
lock
jecxz
out
and
pop
pop
xlat
xchg
push
mov
movs
sbb
fidivr
imul
inc
mov
jnp
xor
ins
sub
ja
jp
adc
enter
retf
mul
(bad)
mov
jmp
imul
gs
xchg
adc
sub
je
add
add
jge
out
and
mov
fsubr
add
xor
hlt
add
jno
out
dec
and
sti
scas
frstor
fistp
add
mov
ret
xor
mov
xor
addr16
jle
mov
mov
call
retf
xchg
mov
jg
xor
pop
shr
ins
inc
arpl
in
xchg
prefetcht0
jmp
test
hlt
lods
mov
or
jns
fmul
push
jecxz
mov
sub
popa
adc
sub
out
adc
retf
jo
inc
cmp
or
div
jle
xchg
fcomi
pavgw
je
std
ja
imul
mov
stc
mov
jmp
sti
add
fnstsw
cmp
jmp
mov
int3
int
or
cmc
cmp
cs
rcl
or
shl
ror
and
clc
mov
punpckhdq
jno
pop
adc
jl
or
xlat
mov
push
dec
nop
sar
dec
fdiv
add
ficom
mov
gs
add
movs
inc
sbb
(bad)
mov
sbb
int
(bad)
pop
mov
jo
sub
das
into
dec
mov
shl
jp
fld
push
push
xor
or
ins
push
push
inc
mov
xor
sbb
mov
pop
das
cmps
ret
xchg
cs
xchg
xchg
sub
sbb
loopne
adc
adc
xchg
js
mov
cmp
lds
adc
pop
ret
fs
std
gs
mov
push
loopne
loopne
mov
or
dec
adc
pop
(bad)
out
sar
ss
out
xor
fistp
stc
out
test
popf
sahf
iret
ja
sub
jbe
add
xor
lahf
call
xchg
fldenv
pop
adc
lods
mov
call
ficom
mov
jns
jge
mov
pusha
push
inc
adc
mov
mov
lock
pop
in
push
cmps
scas
xchg
pusha
fidiv
jmp
dec
xchg
pop
neg
or
xchg
test
adc
into
test
cmp
daa
jl
sbb
xor
dec
inc
ret
sbb
xor
rcl
mov
jg
push
or
aaa
or
stos
loop
and
cwde
add
push
sbb
(bad)
sub
push
dec
pop
mov
sbb
mov
mov
arpl
mov
mov
and
mov
aaa
ja
dec
xor
inc
cld
xchg
mov
adc
std
repnz
test
fabs
jo
add
jmp
jle
mov
cmp
gs
adc
mov
(bad)
push
jnp
or
ins
cli
jbe
dec
jle
test
add
dec
fst
cmp
icebp
jmp
imul
adc
jecxz
push
push
leave
add
aaa
and
sbb
sub
out
mov
iret
xlat
out
outs
ins
adc
repnz
(bad)
adc
test
xchg
aad
dec
dec
stos
leave
push
lods
jle
pop
out
push
repz
push
out
ret
sub
xchg
sbb
sub
mov
cmps
jo
ja
ins
pop
sbb
retf
push
les
push
int3
sahf
stc
push
xchg
test
cwde
inc
jg
jg
mov
mov
(bad)
mov
xchg
xchg
ins
stos
stos
out
pop
lock
xlat
lds
lods
data16
ror
jmp
mov
jge
test
and
mov
shr
and
hlt
(bad)
jmp
pop
sub
cmps
pop
jp
and
dec
pop
xor
aam
out
xchg
adc
and
jne
or
inc
outs
and
mov
addr16
loopne
aad
sub
push
mov
aad
adc
mov
xor
ror
sahf
mov
add
add
inc
jae
enter
bound
adc
add
mov
loop
call
and
sub
inc
mov
jp
mov
adc
idiv
shl
sbb
dec
leave
or
pop
cmp
(bad)
cwde
mov
stc
ss
mov
outs
lods
mov
cmps
dec
mov
pushf
sbb
sub
outs
ret
sub
fmul
nop
inc
sub
into
les
aas
cld
iret
in
and
sub
clc
lods
fdivr
adc
sub
arpl
sub
inc
rol
test
movs
ret
pop
inc
add
dec
out
stos
cdq
mov
xchg
ja
push
jbe
das
in
and
fist
dec
xchg
ins
scas
popf
repnz
or
movs
cmc
xor
inc
ror
out
(bad)
repz
xchg
(bad)
loop
xchg
jmp
push
lods
mov
inc
and
xchg
cmp
adc
add
jno
(bad)
ror
and
push
inc
inc
pop
pop
xor
(bad)
jb
outs
ss
jle
movs
dec
aam
and
jnp
xlat
mov
or
fwait
call
icebp
cld
jl
cmps
xchg
pop
pop
lea
dec
cmps
rcr
jnp
imul
cli
sbb
jae
ficom
cmp
adc
pop
sbb
jecxz
xchg
loope
jb
sbb
mov
pop
lds
mov
out
or
sbb
mov
sbb
not
xchg
in
dec
(bad)
cmp
cdq
sub
xor
jge
loope
sbb
fdivp
shl
jbe
imul
pop
imul
push
pop
cdq
int
jecxz
xor
push
push
inc
push
dec
inc
inc
sub
push
nop
cli
adc
(bad)
loope
pop
mov
jbe
xchg
push
imul
rcl
ror
mov
or
scas
jle
adc
lods
loop
sbb
(bad)
xlat
leave
cs
pop
jg
mov
mov
loopne
sub
dec
adc
mov
add
xchg
inc
loope
add
jae
arpl
nop
mov
sub
(bad)
jnp
movs
aas
lods
loopne
push
sbb
es
imul
ret
pusha
mov
push
jp
mov
cld
xchg
addr16
(bad)
dec
lds
mov
fwait
xchg
clc
ins
dec
push
enter
or
jae
mov
cli
pop
add
and
pop
dec
adc
neg
out
pop
lods
jecxz
inc
pop
push
jno
imul
cmp
test
fidivr
and
das
in
sub
xchg
mov
cld
xchg
cwde
gs
inc
xor
movs
pop
pushf
scas
xchg
test
pop
fs
xchg
mov
dec
sbb
jno
sbb
int3
aam
shl
lock
cmps
sub
test
movs
xlat
mov
ins
adc
jp
inc
aam
ror
cwde
mov
jns
push
fdivr
cmp
(bad)
sub
jnp
rol
aam
scas
in
xchg
push
inc
and
cdq
push
inc
call
lahf
sub
call
das
pop
xor
ret
std
dec
aam
hlt
and
outs
sub
nop
xor
repz
inc
cmc
pop
mov
add
lock
out
js
jb
cmp
movs
xchg
in
stos
mov
cmps
and
ret
(bad)
mov
je
xor
movs
xor
cmc
in
test
mov
out
fnstenv
mov
mov
test
pop
aam
mov
icebp
adc
inc
call
add
dec
sahf
rcl
inc
jmp
xchg
out
pop
lods
leave
mov
pop
stos
sub
fs
pop
push
test
mov
jmp
test
cs
xor
inc
sbb
mov
pop
dec
and
loopne
push
push
adc
sub
(bad)
(bad)
clc
mov
or
movs
ja
xchg
pop
fsubrp
popf
call
adc
inc
rol
cmps
or
ficomp
fstp
adc
sbb
mov
stos
sbb
mov
push
ds
retf
leave
or
cli
div
pop
imul
(bad)
mov
pop
xchg
jbe
cld
das
push
in
sbb
pop
dec
sub
lock
or
nop
lds
pushf
jne
ds
in
cli
dec
xchg
xor
scas
or
inc
les
push
fidiv
mul
lahf
in
push
fisub
jo
lock
adc
push
mov
dec
mov
push
popf
shl
jno
adc
dec
arpl
xchg
test
dec
push
or
add
fcomp
sti
xchg
pop
mov
loopne
cdq
jle
cmp
ror
inc
jbe
ja
lea
mov
rol
xchg
inc
inc
in
iret
sbb
sub
cdq
cmp
movs
mov
dec
or
(bad)
and
fmul
addr16
iret
cdq
cmps
or
stos
dec
imul
pop
or
dec
xchg
mov
mov
pop
mov
mov
and
cmp
sub
arpl
xchg
sbb
and
cmc
cmp
fisttp
inc
xchg
cmp
retf
pop
sub
inc
adc
jecxz
jne
cdq
mov
movs
in
or
pop
ficomp
rol
fistp
shl
jns
pop
push
dec
push
jle
mov
aad
add
movs
jmp
sbb
repz
jns
inc
cmp
push
int3
aad
test
fisubr
ins
ret
dec
sbb
dec
adc
jle
es
dec
(bad)
mov
out
inc
xor
adc
or
ins
sub
mov
gs
pop
pushf
xor
ds
in
adc
jnp
adc
xchg
sbb
(bad)
lea
xor
aaa
pop
int
cli
mov
je
fnsave
mov
pop
test
into
push
adc
xor
ds
hlt
retf
and
push
arpl
test
adc
cmp
arpl
xor
adc
leave
pushf
push
int
dec
xchg
movs
pushf
clc
pop
and
ret
fst
and
ins
jne
div
dec
xchg
repnz
lods
ins
sbb
stos
push
rol
mov
xchg
call
popf
clc
cli
test
cmc
jbe
adc
and
add
fsubr
pop
push
arpl
imul
pop
in
push
pop
repnz
scas
adc
stos
lock
xchg
and
imul
adc
and
mov
(bad)
popf
cmps
jge
fs
xor
mov
jne
ret
std
fs
ret
call
inc
pop
mov
mov
fstp
dec
xchg
imul
sbb
cmp
xchg
loop
adc
jg
mov
ret
stos
(bad)
lock
dec
pop
inc
inc
dec
pop
mov
mov
pop
inc
out
mov
pop
sub
adc
sub
sti
mov
cmps
js
sbb
push
mov
pop
out
into
out
jae
sti
std
mov
jmp
mov
imul
push
pop
out
bound
ss
out
adc
lods
es
inc
iret
lock
ficom
test
xor
movs
add
outs
pop
gs
imul
test
pop
xor
cmc
sub
and
mov
hlt
outs
stos
shufps
add
mov
sti
push
inc
repz
and
mov
mov
add
mov
sub
sbb
jnp
or
mov
push
add
ret
xor
test
(bad)
data16
and
ins
mov
fmul
mov
jmp
dec
in
jg
mov
test
add
push
pop
fist
jecxz
mov
dec
scas
and
mov
pop
sbb
pop
dec
retf
nop
icebp
sub
mov
add
xchg
into
pop
xchg
arpl
adc
jmp
sub
mov
sub
and
jmp
scas
fiadd
stos
jae
ror
and
cmps
add
pop
dec
cdq
repz
adc
rcl
mov
ss
fist
fistp
aam
iret
dec
iret
int
or
or
cmp
f2xm1
mov
scas
xchg
(bad)
cwde
cmp
xor
dec
adc
shl
mov
cli
aad
adc
mov
mov
retf
xchg
(bad)
dec
cmp
or
push
sbb
(bad)
mov
inc
mov
inc
or
cmp
and
fldenv
sti
lea
mov
dec
add
push
sbb
mov
fnstcw
xchg
mov
in
loopne
add
stc
add
xor
bnd
pop
test
div
aas
outs
push
mov
mov
jg
movs
das
cmps
clc
jae
pop
jge
dec
stos
cli
and
(bad)
dec
retf
in
mov
xchg
jmp
dec
icebp
push
scas
scas
jl
inc
jg
aas
sub
xchg
scas
jb
mov
xor
sbb
and
bound
movs
dec
and
out
mov
in
in
je
test
ret
xor
push
icebp
add
push
lds
mov
sbb
dec
arpl
xchg
dec
repz
jge
pop
cli
xchg
mov
fwait
in
outs
ss
xor
cmp
lock
int3
cmp
outs
fwait
ret
fldcw
mov
cdq
ja
iret
inc
and
arpl
and
add
stos
fdiv
push
push
aam
sbb
cmp
ins
sbb
mov
leave
push
test
or
dec
push
dec
rol
and
adc
or
jg
xlat
sar
out
adc
inc
pop
and
push
je
mov
push
dec
into
or
cmp
aas
xchg
and
fcomip
mov
sub
sub
rcr
adc
dec
dec
lods
into
(bad)
pop
inc
ret
mov
mov
push
loope
xlat
cli
jb
in
jp
je
repz
jb
and
inc
pop
rcr
xor
movs
ins
dec
mov
xor
mov
mov
(bad)
xlat
int
inc
popa
shl
imul
scas
mov
jecxz
out
movs
stos
cmp
sub
jmp
cmps
shl
inc
div
(bad)
mov
pop
cmp
xor
enter
mov
inc
ja
mov
cdq
mov
stos
pop
mov
ds
add
sub
pop
iret
mov
jmp
jbe
aaa
movs
jp
cmp
mov
dec
in
mov
mov
fstp
dec
xor
pop
mov
mov
scas
push
or
xchg
repz
fdivr
aam
aas
adc
cmp
mov
adc
pop
lea
cmps
neg
xchg
mov
xchg
call
mov
lods
pop
mov
iret
inc
pushw
pusha
push
pushf
jge
and
stos
imul
movs
aaa
daa
sbb
cdq
pushf
aam
inc
mov
mov
inc
pop
bound
aaa
jle
dec
xlat
inc
imul
jmp
or
hlt
jns
enter
inc
test
imul
add
outs
aas
ins
packsswb
das
mov
les
cmp
mov
inc
gs
fcomp
in
sub
or
mov
xchg
push
loope
mov
add
outs
mov
imul
sub
add
bound
jns
pop
push
jne
bound
stc
xchg
ja
mul
aas
aam
test
lods
imul
push
inc
jmp
shl
and
(bad)
fnsave
mov
hlt
imul
test
inc
and
in
loopne
add
pop
popf
aaa
in
push
dec
dec
enter
mov
mov
dec
xchg
sub
inc
inc
ja
xchg
es
sti
adc
add
mov
(bad)
in
dec
push
sbb
mov
sysexit
push
jmp
ins
xchg
or
push
mov
imul
je
sahf
jg
sbb
ret
xor
cmp
shl
mov
lods
adc
fidivr
xor
(bad)
cmp
pop
cmc
in
test
mov
test
push
jnp
jmp
ret
pop
out
test
nop
jo
jle
ss
inc
sub
dec
jno
sub
pop
(bad)
sbb
mov
retf
or
mov
icebp
dec
hlt
mov
mov
cmps
push
adc
or
dec
bound
mov
mov
xor
aaa
pop
div
xlat
jo
jno
sbb
mov
aas
pop
addr16
sbb
aas
push
(bad)
fcomip
mov
test
repnz
cmps
pusha
and
test
sbb
pushf
cmc
or
pushf
cmp
dec
fild
cmp
movs
scas
lock
and
and
nop
fiadd
std
and
cmp
dec
push
pop
(bad)
out
fst
add
fwait
test
aam
dec
ds
cld
mov
pushf
shr
sbb
cmp
ins
test
fldenv
outs
xchg
dec
or
ja
iret
sti
pop
js
or
loope
sbb
mov
gs
xchg
shl
es
pusha
push
call
jno
pop
std
cmp
(bad)
add
(bad)
imul
mov
pop
sbb
enter
cmp
call
gs
imul
loop
mov
mov
bound
into
lods
out
inc
ss
jg
call
ins
fcomp
ins
cmp
mov
mov
movs
mov
pop
add
and
cmp
jns
mov
rcr
mov
adc
outs
stos
lock
pop
rcr
jge
out
(bad)
scas
mov
jmp
fimul
push
mov
popf
lds
xor
retf
push
nop
sbb
inc
sbb
xchg
clc
inc
push
pop
mov
loopne
std
repnz
dec
xlat
leave
out
unpckhps
push
pushw
aas
mov
push
test
dec
push
dec
adc
and
pop
mov
push
mov
inc
mov
and
and
hlt
mov
and
mov
mov
sahf
ret
lds
and
mov
stos
sbb
lds
lods
jo
hlt
iret
pop
or
or
sti
lahf
imul
jmp
or
mov
int
mov
sub
stos
sbb
in
gs
aam
cmps
hlt
jp
std
jmp
sahf
ja
test
movs
scas
add
stc
cmps
mov
add
fdivr
push
fwait
sbb
xchg
xchg
adc
or
jmp
dec
in
mov
pop
ret
ja
jns
push
idiv
adc
xor
inc
cwde
cs
cld
adc
retf
push
dec
jecxz
test
push
pop
das
add
addr16
jg
lods
xchg
hlt
das
xchg
sbb
into
hlt
dec
xor
mov
repz
pop
pop
dec
cmp
es
mov
xchg
jl
mov
clc
add
cmps
jg
int3
cmp
dec
sbb
sbb
je
(bad)
data16
(bad)
mov
adc
(bad)
(bad)
in
fwait
and
loop
movs
jge
rcl
mov
test
movs
(bad)
xor
fst
inc
aad
hlt
push
cmp
leave
adc
repnz
pop
imul
movs
or
adc
(bad)
push
lea
test
inc
into
add
aad
outs
cmps
jne
mov
and
lea
inc
add
call
icebp
fild
cdq
in
pop
fimul
int
lods
mov
sub
push
add
push
adc
nop
iret
sahf
daa
dec
push
add
jmp
cmp
je
mov
ins
fld
inc
xchg
inc
inc
xchg
mov
lock
cmc
sbb
sub
xchg
and
fisub
sub
pop
jo
inc
xor
xor
dec
outs
inc
mov
cmps
cmp
jns
aas
sub
shr
cmc
popa
pop
mov
pusha
push
dec
add
stos
inc
push
lds
ret
or
xor
xchg
retf
pop
sub
or
mov
jae
test
arpl
mov
xchg
repnz
xor
out
cmp
mov
push
nop
jb
cmps
movs
push
xchg
and
rol
pop
fadd
cmp
xchg
push
fwait
std
rol
shl
add
push
jp
add
mov
(bad)
mov
arpl
push
push
jge
jo
ret
(bad)
or
cmp
pop
sub
or
xor
cmp
icebp
daa
and
cmc
gs
pop
les
fiadd
jmp
stos
inc
push
xchg
hlt
mov
push
adc
sub
xchg
add
cmc
sub
dec
add
adc
jb
adc
addr16
aas
and
mov
sub
loope
and
add
imul
aas
(bad)
fdivr
adc
stos
xor
pop
jle
pop
sbb
hlt
stos
push
pop
xor
mov
nop
pop
cmp
loop
push
jae
jl
xchg
mov
nop
mov
mov
popf
lods
stos
jo
call
(bad)
out
mov
shl
gs
jmp
das
jb
sbb
inc
pop
mov
repnz
pop
add
pop
outs
push
mov
pop
adc
js
mov
fstp
jecxz
cmp
pop
aad
xchg
jbe
ror
ins
imul
aaa
addr16
push
add
sti
mov
jle
sbb
call
loope
sub
lods
mov
xchg
enter
sbb
mov
clc
inc
ins
cli
neg
cmp
sub
icebp
popf
xchg
mov
mov
bound
popa
cmp
cmc
dec
out
push
arpl
enter
dec
push
pop
pop
sbb
aas
fs
ins
mov
inc
push
mov
fnstenv
movs
jae
push
push
push
add
dec
and
fadd
(bad)
jp
cs
out
ror
xor
xor
push
push
dec
sbb
fcmovne
fist
mov
mov
dec
(bad)
out
cmc
push
dec
test
idiv
mov
mov
add
das
inc
jb
cwde
in
shl
inc
bound
adc
or
(bad)
lods
inc
jno
std
dec
fild
sub
shl
mov
fldl2e
lea
push
mov
jmp
inc
mov
cmp
and
jbe
popf
lods
in
(bad)
mov
adc
mov
xor
sub
stos
arpl
stos
shl
outs
mov
add
pushf
mov
pop
and
push
mov
pop
push
in
in
mov
push
mov
cmp
mov
jmp
pop
push
mov
fwait
xor
rcl
xchg
sub
fwait
dec
(bad)
test
xor
adc
sahf
sbb
cmc
and
pusha
jge
mov
iret
ret
rcl
cs
mov
sbb
jge
aad
je
jp
sar
bound
jmp
shr
pop
push
leave
lea
sahf
push
aad
test
(bad)
js
push
cmp
push
dec
xchg
fdivr
jne
fld
cdq
sbb
sbb
pop
aad
pop
ret
jo
int3
test
cwde
mov
and
sbb
mov
pop
adc
stc
es
popf
lods
add
(bad)
scas
out
pop
out
push
jl
jp
cmps
mov
loop
xchg
mov
xchg
retf
and
cli
xchg
and
or
inc
and
and
fidivr
out
fnstenv
fcomp
dec
lds
sbb
stc
or
or
les
add
rol
test
inc
inc
xor
mov
jg
mov
clc
push
rcl
lds
mov
pop
enter
sub
or
iret
call
popa
enter
iret
mov
inc
and
lock
add
pop
dec
ret
cmp
adc
repz
mov
test
sub
inc
ja
ror
adc
rol
jo
je
dec
cmp
rol
ss
xchg
jecxz
add
jno
xor
mov
retf
push
dec
sbb
outs
mov
mov
das
push
add
add
scas
(bad)
fdivp
aaa
popa
outs
xlat
push
lock
hlt
push
lods
inc
call
mov
jo
das
pop
outs
add
ret
mov
xor
fdiv
cmps
aad
imul
and
inc
push
and
lods
stc
enter
mov
and
lahf
xchg
div
pop
add
mov
pop
retf
stos
inc
movs
and
(bad)
mov
addr16
push
sar
enter
sbb
mov
or
in
call
xor
sbb
nop
in
mov
cmp
cwde
adc
adc
aaa
js
jmp
xor
ror
mov
std
or
mov
push
aad
jne
scas
add
adc
mov
and
repnz
int3
dec
std
cmp
inc
lds
and
pop
jge
pop
mov
aas
outs
mov
push
adc
test
sub
xchg
lods
jecxz
push
imul
scas
adc
mov
mov
sub
repnz
push
pop
js
ret
jp
test
cmp
cmp
sub
popa
jmp
std
(bad)
sub
mov
(bad)
sar
jae
aad
out
push
dec
sub
adc
fbstp
mov
sbb
sub
inc
call
mov
(bad)
sbb
cmps
loopne
lds
adc
cmps
js
loope
fiadd
ret
sahf
(bad)
movs
mov
xchg
test
mov
dec
and
ins
fwait
or
jl
cmp
in
pop
faddp
in
ret
sbb
mov
sub
ror
add
cwde
xor
dec
out
inc
ret
cmp
ror
retf
push
cmps
jnp
dec
(bad)
out
and
lahf
nop
mov
in
pop
sub
outs
out
xor
xor
out
call
(bad)
retf
out
adc
(bad)
pop
repnz
dec
iret
(bad)
retf
jg
cmp
fcomp
pop
add
xchg
fst
cmc
xor
mov
mov
sub
mov
jecxz
movs
loopne
push
movs
jno
nop
xor
or
loop
jo
mov
popf
je
xchg
cmc
sar
inc
into
cmp
stos
jmp
add
or
sub
std
mov
icebp
lock
xor
stos
ror
push
outs
loopne
add
test
gs
pop
mov
xchg
mov
stc
enter
jmp
call
mov
loop
fld1
push
pop
mov
dec
adc
(bad)
jmp
jmp
inc
push
jmp
sti
mov
ins
repnz
xchg
add
outs
fiadd
jmp
mov
add
ret
mov
test
xchg
fs
lods
jne
mov
xchg
sbb
xchg
jne
or
adc
shl
xchg
(bad)
pop
int
xchg
mov
jo
dec
ja
jb
jno
(bad)
mov
adc
fwait
add
or
into
cmp
in
cli
cmc
sub
inc
fwait
pushf
cmp
and
adc
jle
jg
mov
pop
sbb
push
push
pop
sub
jp
imul
stc
cmp
mov
ret
cmc
sbb
push
mov
inc
call
fnstenv
ja
xchg
dec
(bad)
nop
pop
push
jge
sub
mov
lods
icebp
or
(bad)
sbb
scas
cwde
inc
mov
les
adc
lods
in
mov
daa
fsubr
fwait
xor
movs
popf
movs
or
clc
nop
mov
xchg
loope
loope
add
or
sub
push
jnp
pop
js
jo
clc
adc
js
sbb
push
in
jmp
sub
icebp
stc
clc
loopne
add
sub
mov
inc
push
or
outs
in
in
push
xor
dec
lods
iret
cdq
daa
mov
cmp
mov
push
cld
and
and
inc
cdq
leave
and
loope
mov
outs
mov
int3
fcmovbe
jp
mov
into
icebp
mov
dec
enter
aas
(bad)
out
mov
out
(bad)
jmp
popf
(bad)
lods
nop
jne
test
jns
aaa
leave
xchg
cmc
int
test
cwde
xchg
adc
pop
add
jge
jo
push
jo
test
(bad)
(bad)
iret
loopne
out
icebp
mov
add
push
pushf
ror
cmp
cmp
sbb
fldenv
ficom
dec
and
cld
fnstsw
pop
add
pusha
(bad)
jno
mov
(bad)
lahf
clc
add
dec
and
ret
mov
clc
mov
cs
clc
loope
cwde
mov
rol
pop
xor
dec
pop
add
inc
test
lahf
push
ja
push
dec
and
fistp
fidiv
into
push
sbb
sbb
cmp
not
cmp
push
push
(bad)
dec
aaa
(bad)
jmp
dec
sub
je
iret
(bad)
or
sub
mov
pop
xchg
cmpps
push
repz
mov
pop
pop
fisub
push
pop
(bad)
inc
fwait
jge
sar
push
sbb
mov
sub
test
xlat
sbb
dec
mov
int
mov
jae
lds
xchg
cs
popf
inc
retf
mov
std
aad
pop
cld
rcr
iret
sti
ins
sbb
retf
add
popa
pushf
sbb
inc
jmp
mov
xor
es
or
mov
xor
push
mov
jb
add
inc
call
push
pusha
xor
sbb
adc
push
lods
gs
in
pop
sub
fadd
inc
shr
mov
lea
es
and
push
sti
das
imul
imul
mov
in
in
imul
cmp
data16
xchg
cli
fsubr
add
push
and
jo
test
cmp
sti
and
sub
inc
mov
outs
jbe
sbb
jge
lods
sbb
jg
ja
pop
dec
mov
test
lods
cdq
aad
mov
push
ret
ror
inc
lock
outs
es
mov
jns
xchg
xor
pop
(bad)
sbb
mov
and
mov
mov
jl
and
cmc
aas
pop
xor
mov
jb
gs
xchg
lds
test
pop
int
imul
sar
daa
mov
outs
inc
test
out
movs
hlt
rcl
adc
in
pop
jp
rcr
or
cwde
je
jle
inc
inc
mov
stos
lock
mov
icebp
add
or
ins
or
mov
xor
mov
fcmove
cli
out
stc
ror
mov
ds
repnz
jmp
xchg
mov
dec
inc
mov
sub
mov
leave
es
(bad)
xchg
and
ja
mov
jmp
test
(bad)
pushf
test
sbb
push
fbld
fcomp
xor
in
loop
loop
add
rcl
mov
sti
inc
mov
pop
jbe
mov
xchg
sub
das
inc
fst
addr16
cmp
lahf
push
cmp
retf
jp
aam
and
retf
mov
loopne
or
popf
xchg
or
inc
dec
mov
and
ss
mov
or
sti
dec
shl
dec
aas
lahf
mov
fs
jp
sub
sub
dec
test
ror
pop
xchg
xor
xor
mov
gs
cdq
stos
ja
cmp
call
lahf
xchg
jp
xchg
in
in
cmp
jecxz
xor
stos
mov
jl
push
jmp
(bad)
out
inc
sub
(bad)
out
shr
in
xchg
es
cmps
jl
jge
sub
(bad)
nop
xchg
neg
mov
xchg
jmp
(bad)
out
xlat
jnp
xchg
add
stos
test
mov
(bad)
jmp
aad
stc
mov
adc
mov
mov
mov
mov
js
jb
xchg
test
cwde
out
es
je
ret
pop
in
xchg
vmwrite
inc
jno
mov
mov
xor
nop
nop
(bad)
popa
shl
inc
es
fiadd
outs
or
outs
mov
and
and
inc
push
adc
repz
outs
dec
xchg
inc
ss
adc
(bad)
or
xor
fcomp
stc
xchg
pop
shr
retf
cld
scas
pop
fnstenv
push
cld
xor
jp
imul
jmp
jae
js
retf
and
in
mov
not
ss
jmp
dec
adc
cmp
sub
(bad)
in
push
test
mov
sbb
push
push
gs
cmc
aas
fidiv
ror
je
fcmovne
lds
aaa
sbb
and
into
cmp
pop
pop
inc
arpl
and
fld
movs
add
stc
je
or
jmp
cmp
test
jno
pop
sbb
add
call
stc
dec
pop
adc
test
mov
js
xchg
loop
pop
(bad)
cs
sub
adc
dec
shl
lahf
or
mov
movs
xor
js
push
xor
aad
popf
enter
movs
inc
fprem
mov
clc
in
push
dec
lods
xchg
mov
je
mov
or
inc
xor
pop
mov
cli
leave
fsub
fpatan
pushf
adc
mov
cmp
jl
aas
xchg
mov
aas
pop
retf
sub
jbe
sub
inc
sbb
test
mov
ret
jle
(bad)
es
mov
xor
int3
ins
inc
add
call
xchg
lds
fidiv
and
or
jns
mov
sbb
cmc
dec
pop
fld
out
inc
ja
stc
xchg
mov
retf
es
in
mov
jb
in
cld
dec
pop
xchg
movs
dec
and
dec
sbb
or
dec
xor
xor
xor
nop
in
fisub
cmp
les
out
lahf
enter
lss
ret
outs
or
mov
stos
fldcw
push
out
es
in
in
fs
aas
fs
pop
add
cli
mov
mov
sbb
jmp
sub
es
call
mov
aad
dec
sbb
mov
xor
cmp
das
imul
stc
aaa
cs
fwait
fwait
dec
jno
mov
pop
sub
daa
gs
xor
xor
dec
in
push
mov
push
outs
xchg
mov
xor
stos
lock
std
xchg
xor
mov
lods
mov
or
jge
ss
push
jmp
xor
stos
popf
pop
sub
outs
xor
adc
pop
mov
xchg
(bad)
clc
jb
icebp
adc
xor
xor
cwde
sub
xchg
adc
movs
movs
lahf
push
les
dec
add
fild
(bad)
test
int
xlat
ins
rol
mov
and
jne
ja
cmp
xlat
mov
jl
clc
push
sbb
ret
sti
hlt
inc
xchg
gs
xchg
adc
xor
inc
add
mov
adc
in
xchg
push
aad
enter
cld
aad
rcr
cli
mov
sbb
xchg
sub
cmp
clc
inc
dec
retf
or
mov
and
mov
pop
and
mov
sbb
push
cdq
int3
push
std
push
es
adc
arpl
cwde
add
addr16
mov
xchg
adc
add
jg
sbb
push
adc
not
in
(bad)
retf
ss
xor
rcr
mov
push
add
mov
sub
cmp
ins
iret
jle
inc
je
cld
push
nop
(bad)
test
jmp
sub
aam
in
xor
push
pop
pop
in
jle
bound
pop
xchg
imul
out
jmp
cli
push
mov
sub
mov
mov
out
or
xlat
aad
push
aaa
cmp
push
cmps
inc
aas
jbe
lahf
mul
std
aas
imul
fsubr
xchg
xor
loopne
xor
adc
js
fidivr
dec
lds
cld
jecxz
mov
cmp
data16
cli
aas
(bad)
dec
stos
mov
add
dec
(bad)
mov
sahf
arpl
cmp
test
mov
out
(bad)
ja
out
adc
ja
(bad)
popf
push
lds
enter
popf
dec
repnz
fnstsw
xchg
adc
mov
frstor
sbb
push
inc
(bad)
in
sbb
fs
jp
mov
jns
in
jl
add
fnsetpm(287
pop
cli
cmc
data16
push
hlt
mov
cmp
sub
push
(bad)
pop
retf
stos
fstp
retf
fwait
sbb
cmp
rol
sub
je
imul
(bad)
call
add
mov
mov
test
push
mov
imul
pushf
sbb
cmps
adc
nop
cmp
mov
mov
stos
movs
push
stos
add
push
xchg
sub
lods
mov
(bad)
adc
idiv
dec
or
movs
jb
loop
mov
leave
push
stc
in
aad
inc
dec
sbb
dec
cmp
out
ret
add
push
xchg
int3
fsub
mov
mov
pop
mov
mov
daa
(bad)
sub
add
stos
imul
xchg
xor
out
mov
popa
and
ins
inc
and
sti
jle
cs
adc
xor
lods
dec
in
cmps
call
cdq
scas
aaa
ja
loopne
mov
add
hlt
daa
dec
test
mov
es
cwde
dec
and
mov
es
xor
jns
xor
test
and
xchg
cmp
sahf
jl
imul
push
inc
fiadd
mov
and
add
ss
popa
and
mov
cs
nop
mov
pushf
jg
and
sub
xor
ret
dec
jae
int
out
into
outs
jp
sbb
mov
test
out
ja
dec
je
mov
fisubr
cmp
sub
int3
jbe
add
leave
stc
xlat
mov
dec
pop
sbb
dec
cmps
dec
xor
add
push
loope
push
bnd
xchg
not
mov
adc
mov
xchg
hlt
sub
push
aaa
cmp
mov
mov
aam
hlt
(bad)
mov
mov
mov
push
arpl
in
xchg
sub
in
ja
pop
stc
xchg
dec
jae
leave
push
push
aaa
sbb
push
fdivrp
dec
jg
inc
jecxz
sub
add
and
cli
hlt
(bad)
jb
cmc
retf
push
mov
je
or
aam
arpl
std
push
dec
scas
fwait
lds
rol
mul
mov
sub
loopne
out
dec
dec
add
popf
jmp
and
or
pop
mov
popf
(bad)
out
es
xor
dec
lods
fnstsw
mov
push
add
or
cmp
pop
(bad)
xor
mov
sub
pusha
push
sub
add
mov
push
add
cmp
icebp
leave
mov
xchg
leave
nop
test
xor
cmovl
and
cmps
dec
inc
repnz
leave
cdq
pop
jb
rcr
daa
aas
imul
fidiv
sbb
aas
inc
int
test
cmps
or
xchg
xchg
xchg
xchg
in
cmp
sbb
push
neg
mov
call
sahf
fcomp
into
mov
cdq
cmp
gs
and
cmp
pop
mov
dec
sti
add
std
push
mov
loope
mov
pop
pop
add
cli
mov
aas
lea
arpl
(bad)
xor
jbe
sub
fnstcw
in
mov
inc
fs
adc
std
aad
sti
or
jecxz
xchg
std
cli
dec
add
fwait
stc
fisttp
div
out
push
sub
pop
cwde
ins
pop
(bad)
ror
daa
fs
or
jnp
sub
pxor
lahf
push
lahf
mov
sbb
or
dec
pop
pusha
ins
ss
xor
and
ins
sub
xor
mov
adc
or
pop
inc
push
pushf
call
cli
jge
jo
das
(bad)
inc
dec
lods
lods
pop
fcom
ficom
int3
jno
sub
cmp
popf
jnp
and
shl
inc
sbb
daa
adc
adc
pop
enter
in
cmp
fldcw
mov
div
mov
sub
push
(bad)
cmp
adc
test
sbb
ins
scas
std
cli
mov
data16
fld
cmc
adc
lds
xchg
push
adc
mov
mov
mov
lds
sbb
retf
pop
pop
jecxz
daa
cld
and
inc
retf
enter
mov
pusha
int3
jno
and
scas
iret
jecxz
xchg
popf
or
jne
mov
add
xchg
sub
scas
out
mov
and
adc
call
das
mov
pusha
xor
aaa
iret
retf
jg
dec
mov
xchg
dec
nop
test
inc
xchg
dec
lods
(bad)
sub
jmp
lock
les
dec
(bad)
sub
ret
fcomp
movs
pushf
or
mov
shl
mov
dec
mov
jo
xchg
push
scas
ss
popf
lea
test
mov
or
fld
test
inc
icebp
or
stc
loop
push
inc
out
xchg
test
mov
loope
aas
mov
cld
int
sar
cmps
out
int3
fdivr
xchg
ret
dec
sbb
or
and
enter
xchg
mov
adc
dec
sbb
xchg
xor
and
cmp
or
hlt
mov
aam
retf
cmp
dec
(bad)
and
sbb
nop
fwait
dec
sar
ret
jbe
mov
fsubr
push
push
dec
dec
loope
jns
loope
jg
inc
or
sbb
inc
dec
fcom
pop
xor
jg
xchg
int
cwde
jmp
es
addr16
cdq
jle
add
sub
sbb
mov
inc
mov
jae
push
adc
retf
jecxz
pusha
mov
cmp
sar
ja
fild
cmp
jne
rol
int3
jnp
sbb
sahf
call
movs
outs
mov
mov
push
mov
xor
xchg
pop
and
ds
movs
mov
(bad)
jmp
add
xor
mov
inc
sbb
lea
mov
cmp
push
ds
jae
aas
icebp
(bad)
sti
cmp
sbb
das
imul
icebp
jns
push
inc
and
leave
mov
inc
ds
cs
jl
lods
push
sub
cmp
leave
sbb
loope
arpl
adc
repz
stc
ss
mov
js
xchg
push
and
movs
add
pop
ficom
jmp
and
cmp
jns
add
mov
pusha
mov
test
push
fist
mov
shl
aad
pop
pop
test
loop
lods
or
cs
rcr
or
jo
scas
loopne
fimul
xlat
inc
out
sbb
or
pusha
shr
sbb
jl
imul
(bad)
xor
fcomp
xlat
jl
cdq
adc
clc
stos
pushf
popa
xchg
fisttp
or
retf
mov
xlat
fs
mov
bound
cmp
dec
cmps
sbb
xchg
shl
movs
dec
popf
fs
in
sbb
mov
mov
iret
dec
mov
adc
pop
jle
add
xor
and
cmp
(bad)
int
mov
sub
(bad)
in
adc
pusha
rcl
push
(bad)
in
push
pusha
sbb
pop
and
mov
jle
mov
lock
push
sbb
shr
pop
shl
mov
ret
dec
jp
xchg
dec
dec
sbb
daa
mov
pop
inc
retf
inc
mov
out
sub
int
jg
(bad)
jne
bound
daa
adc
cmp
dec
adc
pop
mov
cmc
mov
push
xor
sti
adc
push
xchg
jnp
mov
sbb
in
sub
jmp
jecxz
in
add
test
xchg
mov
dec
cmp
pop
daa
inc
xchg
add
(bad)
sbb
test
ret
xchg
xor
push
lods
jl
call
ss
pop
cmp
mov
pusha
and
retf
ins
cmp
neg
xor
out
dec
stc
iret
inc
dec
mov
mov
add
xchg
push
cmp
or
jg
inc
shl
xor
lds
push
mov
mov
aaa
ss
cli
dec
pushf
fldenv
(bad)
and
xchg
int3
or
shr
sti
adc
loopne
outs
mov
hlt
ins
fcomp
mov
pop
mov
jno
lahf
inc
scas
pop
jmp
imul
cdq
es
pop
sub
jmp
outs
xlat
into
lock
or
aam
mov
js
cmp
mov
xchg
inc
ds
or
jg
data16
test
jge
mov
jmp
fwait
jl
add
dec
outs
xchg
ins
jno
sub
test
mov
or
scas
or
sbb
pop
xchg
fiadd
inc
inc
xchg
and
and
xchg
in
cmp
adc
mov
pop
mov
test
nop
lods
imul
push
sub
out
out
jmp
sbb
scas
push
dec
dec
push
dec
js
xor
xor
popf
add
mov
sti
stc
out
das
adc
outs
mov
inc
in
fldcw
mov
lds
or
mov
pop
rcr
rcr
jo
dec
push
scas
hlt
scas
lods
stc
retf
inc
adc
cmps
mov
mov
cdq
(bad)
jno
fisttp
lock
push
lea
pop
cmp
xor
inc
sbb
out
sub
pusha
push
jle
sahf
inc
stos
(bad)
das
jmp
es
jl
outs
adc
adc
bound
mov
xor
js
sbb
jmp
sub
mov
lahf
js
je
xor
and
mov
into
loopne
fsubp
adc
jle
push
dec
inc
mov
sub
dec
repnz
(bad)
xchg
(bad)
scas
bound
jmp
cmp
cmp
in
sub
xchg
lds
mov
retw
jns
push
fist
jo
cmps
cmp
in
(bad)
inc
jno
lods
mov
mov
out
test
fisub
adc
loope
out
sbb
ret
pop
dec
mov
xchg
jle
jg
pop
pop
push
and
jbe
shl
dec
ds
cs
inc
mov
aas
jo
fnstcw
pusha
test
jmp
inc
(bad)
adc
ja
and
push
dec
(bad)
or
icebp
lds
mov
mov
(bad)
add
cdq
out
cmps
xchg
int
or
pusha
mov
mov
jae
ret
mov
shr
lahf
repnz
xchg
add
pop
nop
shl
jle
mov
push
inc
xor
push
(bad)
fild
fidiv
pop
adc
and
sbb
xor
pop
aas
mov
sbb
call
push
hlt
xchg
lds
mov
pop
fisttp
outs
cmp
mov
bound
test
stos
and
and
xchg
inc
mov
sbb
xor
push
scas
cmp
mov
ret
cmp
or
xor
fmul
inc
(bad)
push
add
stc
(bad)
push
into
sub
dec
fild
ds
das
jl
into
xor
gs
push
aas
inc
cwde
in
in
retf
or
xlat
outs
enter
pop
pusha
and
push
pop
add
push
mov
jno
in
dec
jle
mov
inc
push
pop
movs
jne
lock
dec
jge
enter
cdq
cdq
div
lock
jnp
pop
fidiv
bound
fstp
je
sub
scas
sahf
call
aas
push
and
or
add
adc
sub
jmp
mov
adc
in
outs
test
jmp
dec
enter
cli
xchg
add
ins
inc
mov
mov
imul
sub
cs
add
add
cmc
mov
lds
daa
push
xlat
mov
cmp
sahf
jmp
add
push
mov
sbb
mov
(bad)
push
xor
gs
pop
and
mov
adc
sub
push
sub
and
add
iret
or
fidivr
sub
jo
mov
jl
jnp
out
fld
call
in
iret
sub
cmc
jne
or
and
pop
retf
xchg
xor
and
push
xchg
sbb
mov
(bad)
(bad)
sub
or
(bad)
sbb
cmps
test
dec
fild
dec
mov
or
fisub
lods
jmp
retf
retf
jl
ror
pushf
mov
(bad)
int
mov
lahf
mov
mov
mov
in
sbb
fld
daa
ds
retf
inc
outs
jbe
es
cs
movs
loop
push
lods
inc
push
push
(bad)
jb
clc
icebp
jmp
sub
and
inc
dec
in
or
sbb
jp
and
push
push
cmp
mov
mov
pop
imul
ds
shl
div
cmps
dec
imul
mov
inc
cmp
xor
lds
adc
pusha
test
add
mov
out
inc
or
xlat
test
addr16
and
add
bound
mov
xor
clc
pop
add
ror
jecxz
das
std
dec
inc
adc
xchg
cwde
ds
mov
push
test
xchg
out
add
inc
int
repz
pop
xchg
out
loope
(bad)
pop
and
xor
call
push
pop
add
(bad)
iret
fnstenv
adc
adc
lods
in
cmp
sbb
inc
jecxz
dec
je
std
add
frstor
cmc
mov
dec
stos
jo
stc
retf
push
(bad)
icebp
retf
push
jbe
int
out
or
leave
jne
fstp
sar
(bad)
push
mov
daa
sub
xor
mov
jne
cmps
js
test
pop
ds
out
sub
mov
or
dec
inc
adc
gs
add
fwait
sub
cmps
fist
jo
movs
mov
xlat
daa
dec
pop
cmp
js
push
mov
dec
fnsave
(bad)
test
sub
and
sub
test
mov
ror
cmp
mov
mul
inc
retf
xchg
cwde
hlt
rol
mov
mov
inc
dec
jmp
in
stos
sub
ins
cmpps
nop
xchg
ins
xchg
xchg
fstp
dec
imul
movs
mov
(bad)
fisttp
je
sbb
fcom
aas
push
icebp
pop
aas
ja
ins
xchg
and
rcr
fcom
inc
repnz
mov
mov
inc
fs
and
xchg
xchg
inc
scas
and
xchg
mov
aad
test
ss
aas
mov
fwait
cmps
mov
js
pop
(bad)
fsub
lea
out
sub
js
jbe
jl
and
sbb
push
inc
push
mov
das
les
and
cmp
test
sbb
sar
dec
test
push
loopne
sub
push
mov
test
hlt
mov
(bad)
adc
bound
repnz
retf
xlat
in
loope
(bad)
out
scas
xor
sbb
add
test
adc
jle
lods
mov
mov
mov
ffreep
test
push
cmc
or
in
xlat
(bad)
lds
mov
sbb
mov
call
shr
push
pop
out
cmps
lea
cmps
repnz
jg
scas
aam
inc
xchg
frstor
jmp
adc
sub
mov
mov
sti
mov
dec
adc
je
add
adc
add
or
adc
and
cmp
add
ins
in
adc
push
(bad)
jl
cmp
outs
mov
out
or
mov
(bad)
jbe
out
and
jae
mov
and
jbe
mov
pop
add
std
and
cmp
ja
mov
pop
call
mov
or
sti
add
in
nop
mov
mov
adc
pusha
push
les
mov
cld
rcl
mov
mov
movs
adc
sub
inc
scas
xor
mov
outs
dec
test
push
adc
cmp
inc
mov
sahf
fs
cmps
shl
sub
sub
or
mov
sbb
jns
xchg
adc
or
jle
push
and
ret
dec
retf
(bad)
inc
inc
(bad)
pop
(bad)
fistp
gs
aas
xchg
int
imul
in
movs
or
push
leave
aad
fs
xchg
(bad)
lahf
arpl
sub
cmps
out
pop
adc
out
rcl
sti
mov
in
jmpw
mov
ret
jg
rcl
mov
mov
inc
jnp
and
icebp
push
and
adc
push
mov
fwait
jmp
es
dec
jge
ins
aad
add
mov
sbb
dec
sbb
mov
pop
cmp
stos
fwait
cmc
and
test
(bad)
dec
push
mov
add
jg
cs
ins
imul
sar
cmps
enter
call
adc
xor
imul
lea
stos
test
and
cli
mov
fs
repnz
pop
out
ror
jne
std
repnz
push
sub
fistp
xor
(bad)
jno
es
mov
int
ins
cmp
cmp
fsubr
add
clc
adc
add
dec
sbb
sub
mov
sub
fld
mov
lods
cmps
jno
or
mov
add
sub
dec
xchg
xchg
pop
adc
aas
dec
inc
sar
jl
lods
pop
push
add
into
and
pop
addr16
(bad)
fisub
jmp
das
pop
sub
in
bound
jg
in
arpl
gs
cmps
xor
cwde
and
mov
jle
sbb
fdivr
mov
repnz
leave
sbb
retf
aaa
(bad)
jns
lahf
les
pushf
jnp
pop
inc
ret
dec
neg
pop
jle
push
imul
rcl
cs
cwde
mov
mov
gs
in
(bad)
out
xor
aam
or
xor
or
arpl
mov
das
xor
cmc
pop
pop
and
sahf
adc
xlat
(bad)
inc
ss
push
popa
test
xor
xchg
lods
jb
sub
dec
(bad)
mov
outs
cmps
(bad)
(bad)
daa
mov
lods
push
pop
pop
and
addr16
aad
jbe
fimul
add
mov
dec
mov
inc
lahf
mov
jo
repz
imul
call
clc
je
hlt
les
(bad)
repz
aaa
ins
stos
mov
inc
cmp
lock
(bad)
jns
push
fs
repnz
mov
(bad)
ds
cmps
fwait
add
push
cmp
out
in
jno
add
xor
ret
xchg
movs
jne
push
inc
adc
sub
fcmovnb
dec
pop
or
cmp
xor
mov
ss
out
mov
retf
leave
loop
outs
pop
loopne
xor
fs
in
int
ins
cmp
jmp
xchg
jne
mov
jno
sbb
sub
mov
aad
mov
xchg
cmp
pusha
add
mov
mov
mov
or
and
sbb
or
ret
cmp
sub
test
and
mov
icebp
xor
lods
mov
ss
fdiv
sub
(bad)
test
test
dec
stos
adc
retf
xor
sub
test
add
es
adc
mov
imul
sahf
mov
sbb
mov
jle
pop
pop
je
jmp
scas
sti
or
ins
ret
dec
imul
jne
push
int
push
push
dec
shr
(bad)
ins
adc
fcmovnu
daa
sbb
jb
iret
(bad)
mov
retf
imul
mov
jmp
xor
imul
xlat
xchg
adc
dec
xor
fs
dec
(bad)
and
pop
arpl
cdq
bound
push
(bad)
sub
retf
sbb
xchg
test
dec
and
stos
dec
adc
cmc
cmp
push
je
adc
mov
std
xor
adc
xor
mov
rcr
xchg
movs
jae
add
ror
push
mov
or
pop
xor
mov
push
pop
sub
enter
(bad)
fst
retf
sbb
jmp
ss
or
mov
sbb
mov
aaa
xchg
clc
pop
sub
add
outs
les
nop
lods
xlat
retf
lods
mov
and
inc
mov
inc
test
icebp
mov
fsubr
inc
fucomp
or
test
retf
mov
xchg
test
outs
mov
pop
push
mov
jns
pop
jmp
xor
sub
push
sub
jo
test
xchg
inc
jp
adc
ja
ins
and
and
rcl
push
inc
fistp
push
mov
test
ins
add
leave
jg
mov
dec
and
push
sbb
and
dec
inc
sub
retf
pop
sub
sbb
push
leave
mov
fucomip
pushf
rcl
jp
cdq
(bad)
fwait
mov
bound
pop
loope
mov
aas
xor
jo
fimul
retf
arpl
fmul
sbb
jns
adc
mov
sbb
popf
pushf
mov
(bad)
sbb
rol
psubd
ds
xlat
test
cli
adc
(bad)
xor
lahf
arpl
fs
fstp
in
call
xchg
clc
and
call
lods
ror
jge
movs
nop
fisubr
xor
gs
out
and
xchg
pop
pop
inc
rcl
push
mov
gs
mov
cmp
jno
cmp
rol
push
xor
pop
inc
and
adc
add
mov
pop
jmp
retf
adc
or
add
mov
mov
icebp
fsub
pusha
dec
ror
std
cmp
add
enter
cmp
fistp
mov
les
add
fisttp
dec
xchg
bound
mov
nop
in
ds
(bad)
xlat
add
fdiv
rcl
pop
mov
dec
or
test
cwde
popf
je
and
sbb
xchg
data16
gs
mov
mov
sub
dec
or
mov
ds
adc
dec
pop
pop
pop
push
jg
leave
add
inc
xor
gs
aaa
dec
adc
or
jp
retf
(bad)
lods
jmp
popa
jae
push
push
out
test
int
movs
xlat
je
das
cmp
or
add
jge
mov
mov
and
ret
aaa
mov
ds
das
lea
aaa
stc
jno
push
mov
std
pop
in
mov
jp
es
jmp
shr
inc
or
fnsave
jecxz
mov
test
stos
pop
pop
mul
add
dec
add
mov
movs
mov
arpl
nop
and
data16
or
pop
xchg
push
mov
outs
add
scas
lods
ss
sub
fist
pop
xchg
adc
push
aaa
fnstcw
mov
pop
push
push
cld
mov
adc
xlat
jecxz
sbb
adc
fisubr
int
movs
push
mov
ja
in
fisubr
mov
scas
sbb
fnstsw
icebp
test
mov
or
mov
xchg
in
sti
cmp
mov
cmps
push
pop
in
xlat
sti
sbb
lods
xchg
or
mov
popa
and
mov
imul
rcl
fs
inc
xor
mov
out
aas
ret
cmp
retf
outs
add
add
mov
inc
jg
and
test
cmp
push
fisttp
das
inc
mov
pop
les
dec
xchg
jns
aam
in
jl
sahf
sub
cmp
outs
and
imul
popa
and
mov
lods
ins
add
xchg
lods
inc
loope
imul
push
jle
dec
push
xchg
xor
or
add
mov
lds
lock
pop
pop
mov
cmp
mov
enter
push
mov
loope
mov
out
cdq
adc
js
mov
mov
adc
xchg
jmp
xchg
pop
loope
jmp
inc
scas
mov
shr
sub
fwait
mov
cmp
push
xor
adc
push
mov
mov
test
add
sahf
jle
fucom
(bad)
pop
mov
adc
rcr
mov
into
pop
fs
inc
mov
pop
gs
or
mov
out
push
jnp
adc
pop
aas
dec
cld
in
jb
xor
inc
nop
dec
dec
dec
pop
movs
nop
pop
xor
popf
push
pop
retf
in
movs
out
leave
sub
cs
mov
xchg
dec
(bad)
sub
arpl
and
add
dec
xor
cs
or
cmps
stos
je
push
hlt
jmp
mov
add
or
sub
movs
push
into
inc
mov
mov
dec
ret
sub
sub
test
arpl
push
out
arpl
add
stos
sub
sbb
mov
iret
cmps
jnp
xchg
cdq
in
pop
daa
jae
mov
push
xor
inc
jns
xor
test
pop
sti
xor
mov
gs
neg
mov
dec
call
stos
mov
add
rcl
sbb
or
add
or
xchg
cmp
sub
lds
mov
enter
cdq
pushf
add
(bad)
mov
jecxz
sbb
xchg
pop
stos
cmp
adc
and
ficom
push
mov
sbb
nop
and
rol
jae
loopne
push
mov
add
fdivr
in
pop
js
dec
out
jg
push
stos
jmp
movs
add
or
cld
shr
out
dec
adc
dec
call
rol
cdq
scas
out
inc
sti
push
mov
movs
push
xor
pop
mov
shr
add
sahf
pop
jno
inc
mov
lods
fidivr
ror
mov
mov
arpl
imul
out
std
jmp
add
stos
sbb
cmps
sub
retf
add
xchg
xchg
mov
add
aam
aas
dec
cld
push
out
mov
lods
xchg
fwait
loope
push
or
push
jns
imul
leave
xor
xor
outs
sub
popf
jge
mov
arpl
and
(bad)
pop
daa
push
mov
and
jge
add
xchg
adc
ret
or
add
mov
cmp
sub
mov
call
sti
xchg
bound
test
cmp
scas
add
jecxz
and
inc
dec
sahf
mov
jmp
(bad)
xor
sub
jo
ret
mov
dec
push
bnd
retf
mov
imul
and
xor
js
mov
sub
fldenv
pushf
mov
sub
add
sub
cmps
xchg
call
sub
jge
xchg
out
inc
dec
cmp
out
jg
adc
sbb
sbb
daa
adc
enter
dec
xor
jne
push
sbb
inc
mov
rol
mov
mov
and
outs
xor
dec
xor
xchg
stos
mov
and
and
push
rcl
test
xchg
or
fiadd
sub
std
cs
jecxz
pop
cmc
adc
push
mov
push
test
mov
stos
sahf
iret
cmp
cli
inc
or
pop
ret
out
add
adc
mov
mov
cmp
or
std
imul
pop
fs
mov
jb
xor
fistp
test
cmc
fcmove
sub
xor
dec
cld
jp
dec
iret
mov
inc
push
jg
scas
mov
pusha
cmp
and
cld
jle
in
cdq
dec
cwde
js
inc
jle
xchg
ret
sbb
rol
cld
out
call
pop
xor
sub
or
shr
push
movs
movs
inc
mov
movs
xchg
xor
ss
push
cmps
and
test
sahf
xlat
xor
jb
(bad)
pop
sbb
or
mov
aam
mov
sub
push
or
xor
inc
and
add
rcl
bound
hlt
clc
bound
mov
xor
js
gs
iret
cmp
inc
push
icebp
ds
xchg
push
dec
dec
cwde
pop
jmp
pop
test
cli
fdivr
das
lods
lea
shl
sbb
dec
dec
gs
nop
sub
in
ret
das
or
inc
scas
xchg
aas
lock
jb
push
jmp
mov
adc
xchg
and
xchg
jae
in
arpl
lea
dec
movmskps
jg
pop
adc
(bad)
mov
inc
sub
cli
or
and
adc
in
sar
jl
push
dec
mov
cld
xor
bound
sub
dec
repnz
dec
in
or
ins
test
jle
test
jbe
sbb
inc
sbb
cmp
shr
lods
sbb
fsubr
sub
mov
mov
rcr
(bad)
jmp
and
mov
push
adc
add
ja
fistp
or
(bad)
ds
imul
sub
pop
mov
inc
inc
jns
mov
sub
sbb
into
push
test
push
pop
xor
mov
std
xchg
xor
adc
sbb
push
xlat
lahf
xchg
jge
movs
je
gs
aaa
pop
std
pop
pop
ret
fist
adc
sub
jno
sti
data16
or
clc
push
jge
add
pop
sbb
outs
rep
dec
adc
push
(bad)
xchg
js
dec
xchg
and
sahf
and
sub
idiv
jnp
jmp
jge
pop
dec
(bad)
out
mov
fwait
cmp
jmp
mov
std
or
sub
sub
dec
mov
jge
sbb
mov
(bad)
sti
aas
stos
dec
push
and
cmp
movs
lahf
push
in
cmp
or
inc
mov
xchg
jmp
fnsave
sbb
lea
cld
push
push
and
pop
test
adc
mov
dec
ficom
ds
xchg
inc
mov
and
and
rcl
test
fdiv
leave
out
jle
xor
jg
shl
cmps
push
and
lds
inc
pop
scas
mov
popf
repz
push
es
xor
scas
inc
inc
pop
mov
jb
xor
aam
sbb
push
cs
ins
ja
mov
adc
cmp
pop
loopne
cld
ret
dec
mov
stc
out
dec
cmp
stc
(bad)
retf
fdiv
adc
mov
mov
sub
cmp
xchg
aad
addr16
mov
and
xor
nop
cdq
and
call
mov
pop
hlt
cmp
out
je
push
icebp
fsub
cmps
inc
aas
jno
jmp
into
inc
adc
push
inc
test
popa
int3
out
(bad)
and
sbb
and
or
pusha
add
pop
fmul
xchg
mov
dec
xchg
and
or
xlat
pop
or
out
sti
cmp
fidiv
push
or
jg
call
and
xchg
push
dec
bswap
xchg
jb
scas
movs
outs
hlt
inc
jbe
test
add
xchg
scas
cmp
mov
lahf
mov
or
rol
shl
and
pop
mov
push
pop
lea
xor
pop
mov
movs
mov
aas
retf
push
pop
push
pop
inc
cmp
cdq
jg
ret
xor
test
fstp
add
loope
jmp
pop
cmps
movs
mov
push
(bad)
ss
push
lea
pop
push
jnp
aad
xchg
xor
push
inc
jmp
push
dec
dec
pop
ror
(bad)
daa
shl
or
jne
or
bound
(bad)
and
xchg
jne
das
mov
clc
and
xor
mov
fadd
mul
lahf
jg
hlt
loope
xor
push
xchg
fidivr
lahf
inc
ret
adc
push
ret
mov
inc
mov
sbb
inc
jmp
pop
xor
fisttp
sub
ficomp
xchg
es
and
push
xchg
mov
cmp
cs
mov
pop
dec
sub
add
enter
lea
nop
xchg
inc
shr
dec
ins
adc
(bad)
push
xchg
cmp
mov
sbb
imul
into
fstp
das
mov
lods
and
lds
mov
jne
jnp
jae
in
sub
jg
or
mov
iret
or
inc
test
push
addr16
pop
aas
jecxz
mov
imul
sub
out
gs
mov
mov
fstp
add
mov
clc
adc
and
popf
call
sub
cs
imul
daa
lock
hlt
movs
imul
call
dec
push
jle
sbb
add
sub
out
xchg
pushf
push
dec
dec
xchg
dec
lock
cmps
adc
mov
fstp
mov
sbb
or
ds
xor
pusha
push
jecxz
dec
or
or
or
mov
pushf
xlat
inc
pop
shl
jmp
ds
sbb
in
push
mov
pop
int
call
test
xor
inc
ret
sar
ja
sub
mov
out
les
add
push
mov
sahf
push
add
gs
xchg
lahf
mov
int3
pusha
(bad)
out
scas
in
je
sbb
test
dec
iret
ss
in
xor
stc
out
push
out
lods
imul
mov
jns
jae
and
ins
mov
push
in
ins
mov
cmp
or
pop
fmulp
je
sbb
and
mov
sti
xor
leave
cmp
mov
push
cmc
cmp
ja
test
xchg
in
and
jns
lahf
or
idiv
and
push
in
lods
daa
xchg
ins
jp
frstor
sbb
movs
xor
mov
sahf
add
call
mov
ja
sbb
addr16
mov
dec
ins
add
retf
es
enter
and
psraw
out
movs
sub
jg
gs
sar
retf
mov
xchg
mov
and
xor
movs
inc
aad
adc
jb
jecxz
clc
pop
das
mov
clc
push
cmp
add
aas
mov
js
inc
jmp
sar
ins
pop
rcr
leave
and
mov
sahf
jmp
adc
dec
xor
iret
mov
jbe
in
jne
iret
sub
jp
and
mov
push
push
(bad)
cmp
adc
cwde
sub
push
xchg
add
cmps
pop
sbb
sar
cwde
push
cmp
add
inc
movs
movs
(bad)
dec
(bad)
and
cld
mov
ret
shl
pop
and
sub
popa
xor
cwde
jmp
xchg
pusha
xchg
jbe
xchg
dec
call
and
pop
xchg
leave
inc
cdq
push
mov
xchg
adc
outs
inc
mov
sti
dec
mov
and
popf
pop
int3
dec
sub
lods
sbb
adc
call
icebp
sbb
retf
cmp
fsubr
xchg
neg
dec
stc
in
sub
cmp
test
push
jecxz
sub
bound
pop
sbb
cmp
aad
push
imul
mov
ds
fild
test
fcom
inc
lods
sti
push
mov
leave
inc
pop
push
frstor
mov
cli
cld
repz
retf
mov
stc
push
jmp
cwde
xor
(bad)
pusha
mov
push
in
rol
push
ja
mov
xchg
cmp
mov
lea
mov
ror
push
inc
popf
ins
push
cmp
nop
pop
dec
push
push
pop
ins
fimul
jle
sub
inc
mov
cmp
imul
aaa
ret
xor
add
push
push
aas
(bad)
cmps
jbe
loop
imul
pop
pop
clc
and
jne
mov
push
stos
call
sbb
out
dec
je
test
sbb
iret
adc
push
(bad)
iret
(bad)
fwait
jbe
jmp
std
ja
pop
lock
dec
mov
add
jne
or
jle
lock
cmp
iret
(bad)
shr
dec
pushf
(bad)
fisub
(bad)
pop
pop
cs
mov
adc
mov
pop
xor
push
outs
xchg
clc
sbb
into
and
xchg
dec
call
cdq
stc
or
ins
push
xchg
cwde
or
pop
mov
(bad)
sub
push
fistp
inc
loope
bswap
cmp
div
fnstcw
fist
fmul
inc
retf
mov
sti
jge
jns
adc
adc
popf
cvttps2pi
pop
stos
and
adc
cld
push
arpl
push
push
sub
mov
dec
daa
stc
cld
sub
(bad)
jle
loop
mov
add
push
fistp
dec
and
daa
sub
cmp
inc
aam
test
sbb
out
inc
arpl
int3
mov
neg
test
in
mov
(bad)
(bad)
outs
dec
call
ret
sbb
or
and
push
jle
xor
sub
add
loope
ret
sti
cmp
(bad)
test
push
loop
imul
ret
sub
ret
lahf
popa
test
fdiv
in
bound
pop
scas
retf
pop
add
mul
arpl
imul
movs
aaa
push
enter
xor
test
shl
jnp
(bad)
jae
jmp
push
icebp
inc
idiv
sub
std
xor
pop
xlat
repz
je
or
mov
fwait
pop
or
pusha
add
stos
cmp
sub
sbb
call
rcr
xchg
or
xchg
mov
leave
or
add
mov
js
xor
dec
push
pop
pop
ss
cmp
mov
add
mov
ret
fdiv
xor
inc
sbb
push
mov
call
aad
pop
(bad)
int3
dec
cmp
mov
inc
repnz
cmp
into
add
jbe
repz
lahf
jne
in
movs
inc
adc
xchg
ror
push
mov
(bad)
shl
or
inc
psrlq
jl
aas
retf
int
cmp
call
std
int3
inc
inc
retf
pop
stc
int
push
xlat
out
(bad)
ds
xor
jmp
leave
out
xchg
stos
xchg
in
popa
pop
mov
mov
cmp
add
cmp
outs
gs
mov
out
addr16
or
out
out
mov
mov
in
and
pushf
pop
nop
xor
mov
dec
punpcklbw
in
xor
dec
aaa
js
or
xor
into
push
scas
cmp
push
jno
fcmovu
adc
out
pop
sahf
pop
jle
xchg
repz
addr16
pop
es
jmp
jmp
std
sub
lods
inc
push
jns
(bad)
ror
add
cmp
mov
inc
push
cwde
test
pop
clc
xor
cmp
int3
cmp
nop
sub
jnp
sub
div
(bad)
xchg
jp
repnz
iret
pop
mov
push
xor
arpl
mov
ins
and
push
push
(bad)
ret
pop
dec
xor
pusha
fs
dec
push
(bad)
test
movs
pop
add
lods
out
sub
push
mov
scas
inc
sub
dec
(bad)
dec
mov
mov
ja
mov
mov
lock
inc
and
idiv
in
js
das
je
mov
mov
je
ins
dec
pop
ret
mov
xor
fwait
cmps
mov
jo
cmp
mov
aam
fs
test
adc
ss
mov
adc
fdivr
cmp
mov
sbb
push
push
pop
dec
cmps
jbe
out
(bad)
xor
add
es
cli
sar
ins
push
shl
shr
ret
push
scas
enter
outs
jb
add
jmp
push
jp
mov
hlt
test
mov
shl
std
data16
in
fs
shl
fild
push
mov
dec
xor
outs
xor
cmp
push
(bad)
or
jb
dec
scas
iret
out
mov
mov
xchg
mov
inc
jmp
gs
pop
(bad)
repnz
mov
int3
and
and
add
(bad)
push
shr
sbb
sub
pop
mov
mov
mov
add
aam
leave
dec
nop
dec
pop
repz
adc
jecxz
fsubr
xor
int3
or
cmps
xchg
loopne
jns
mov
les
pusha
mov
mov
jbe
(bad)
jnp
sbb
pop
and
cmp
push
sub
sbb
cmp
jecxz
inc
or
sub
in
sub
inc
int
into
mov
jmp
dec
imul
jae
inc
test
adc
cmp
and
inc
lock
jg
addr16
cld
mov
cld
mov
push
jmp
mov
xor
push
imul
popa
mov
dec
mov
fwait
pop
repnz
leave
or
daa
sahf
mov
mov
or
dec
aad
dec
in
push
dec
mov
ja
sar
and
sbb
das
cwde
mov
scas
retf
xchg
pop
cmp
adc
repz
inc
sbb
pop
imul
push
test
jo
retf
fstp
add
fiadd
xor
xor
jmp
mov
xchg
dec
scas
adc
fwait
push
adc
in
out
jnp
sbb
dec
aam
frstor
xlat
rol
movs
xchg
sbb
adc
aad
(bad)
jne
std
sbb
mov
xor
push
loopne
adc
cdq
popf
jae
inc
neg
repnz
sub
wrpkru
pusha
out
and
mov
iret
ja
cmp
sbb
sbb
call
(bad)
retf
gs
push
shr
sbb
dec
call
je
stc
or
add
scas
sub
push
in
or
sub
cli
xor
push
sbb
dec
enter
arpl
adc
push
jge
xor
popa
sbb
jmp
into
push
rol
(bad)
mov
pop
dec
cmp
into
xor
in
loopne
shr
cmp
inc
mov
jbe
cmp
mov
cli
or
stos
mov
shl
daa
inc
hlt
push
fsub
sbb
add
and
std
jmp
and
sub
in
ja
icebp
clc
mov
cmc
adc
pop
mov
inc
out
mov
int3
push
in
cmps
int3
add
jno
cmc
add
xor
inc
(bad)
(bad)
and
and
call
jmp
leave
xor
outs
(bad)
aad
and
test
dec
mov
out
call
leave
sub
adc
sub
mov
dec
lods
arpl
sub
je
movs
mov
xor
inc
jnp
aas
retf
sahf
sahf
mov
adc
sub
das
imul
into
outs
pop
cmp
mov
retf
and
into
mov
jl
fnstenv
daa
inc
test
mov
push
in
mov
pop
sbb
mov
pusha
pop
adc
lods
imul
cld
test
sahf
cdq
into
rcr
jl
inc
mov
inc
inc
pop
fcomp
jno
aaa
lea
enter
loopne
ins
(bad)
cmp
cmp
rol
scas
cmp
not
movs
popf
imul
leave
or
adc
sahf
jmp
in
(bad)
sub
std
pusha
xor
and
dec
sar
sub
mov
pop
sub
jo
in
xchg
pop
or
test
icebp
cmp
pop
cld
push
pop
fistp
jno
xor
mov
pop
inc
shl
and
sbb
shl
xor
nop
mov
xor
test
ins
scas
shr
sub
and
stc
(bad)
inc
mov
dec
jns
mov
xor
xor
pop
jmp
shr
ret
add
ds
sbb
pop
mov
adc
or
cs
mov
and
mov
shl
xor
iret
repz
call
test
std
aad
push
cwde
mov
lods
shl
cmps
dec
mov
push
mov
ins
jb
lea
pop
adc
dec
jecxz
test
cmps
je
not
div
aam
mov
aaa
inc
pop
sub
xchg
mov
mov
add
push
int3
sahf
pusha
leave
sub
adc
fsub
sbb
sbb
adc
ret
mov
and
sbb
stos
dec
and
fadd
or
lods
aad
and
mov
jecxz
ret
pop
and
push
(bad)
dec
add
(bad)
mov
mov
in
imul
rol
dec
xchg
inc
xchg
add
jbe
sub
sbb
sub
inc
ret
mov
adc
ret
gs
scas
push
mov
movs
loopne
imul
add
sub
loope
jb
lea
dec
sahf
mov
jp
mov
jno
dec
aam
out
push
xor
bound
xlat
xor
mov
rol
jbe
inc
adc
les
mov
imul
xchg
push
or
jns
push
xchg
cmp
sub
and
push
dec
scas
adc
inc
neg
shl
dec
jle
dec
or
shr
out
push
pop
mov
jne
xor
mov
add
push
mov
lds
xor
pop
mov
repz
jg
call
push
mov
mov
(bad)
push
leave
xchg
dec
mov
xor
sub
daa
(bad)
rcl
fsub
cmp
pop
lahf
loop
test
icebp
(bad)
xchg
hlt
hlt
pop
push
arpl
mov
push
(bad)
mov
imul
(bad)
out
sbb
gs
sub
pop
out
xor
pop
mov
fisttp
push
or
fisttp
in
sub
cmps
scas
out
push
push
mov
lods
mov
jmp
and
fcomp
add
dec
fadd
cld
sar
mov
out
dec
cmp
sbb
repz
fwait
je
icebp
jns
pop
jne
mov
mov
xor
or
pop
mov
sub
es
and
shr
adc
rol
push
jl
out
push
aas
mov
sub
push
fist
das
mov
and
adc
js
in
xchg
sbb
jne
xchg
push
(bad)
in
pop
jb
test
(bad)
sub
call
mov
shr
aad
pop
ja
rcr
xchg
ja
mov
std
sub
mov
inc
(bad)
and
jecxz
(bad)
test
call
dec
xchg
sbb
(bad)
adc
outs
sub
pusha
mov
test
add
popa
(bad)
enter
mov
out
ja
pop
shr
lods
add
add
(bad)
int
and
push
not
pushf
rcl
stos
fwait
or
lods
xchg
clc
les
out
xchg
mov
fisttp
inc
dec
mov
add
dec
inc
pop
int
push
loop
xchg
outs
sbb
ja
imul
xor
inc
mov
rcl
inc
loope
sti
dec
mov
loope
stos
std
jae
push
xchg
add
mov
xor
inc
ret
imul
xchg
mov
xchg
stc
mov
sub
sahf
mov
int3
push
ret
les
mov
xchg
or
mov
test
pop
gs
add
stos
ins
mov
mov
cmc
scas
xor
ds
in
add
mov
mov
out
icebp
add
xchg
das
(bad)
jge
gs
retf
popf
std
stc
cdq
inc
ins
mov
fist
arpl
jmp
outs
or
lahf
das
js
or
pop
aaa
mov
(bad)
pop
mov
pop
out
mov
int
rcl
xchg
pop
or
jns
adc
jb
dec
add
fistp
jne
adc
and
xlat
adc
in
or
out
sub
repz
adc
xchg
outs
jnp
inc
mov
sub
push
sub
jle
in
lock
adc
or
sbb
pop
je
adc
adc
jmp
mul
cmp
mov
cmp
(bad)
in
adc
adc
rcr
nop
sbb
daa
jo
pop
test
test
mov
lods
jne
pusha
xchg
cs
push
adc
dec
pop
(bad)
(bad)
(bad)
sti
pop
mov
jmp
cdq
addr16
aas
outs
cmp
ret
aad
pop
jo
inc
inc
test
bound
xor
jnp
ret
sub
dec
lock
xchg
and
add
(bad)
jge
jns
adc
addr16
cdq
or
ss
and
int
sbb
push
outs
jae
ret
add
mov
lds
mov
js
push
test
cmp
dec
push
fist
add
sbb
out
mov
fisub
mov
mov
jne
xor
inc
adc
(bad)
push
(bad)
cmp
int3
pop
push
xor
add
pushf
out
arpl
sub
jg
fs
cmp
inc
mov
repz
in
sub
xor
inc
sar
out
int3
and
mov
jecxz
inc
jne
mov
rol
jno
mov
jns
stos
sub
push
jne
dec
loop
adc
sbb
cmp
leave
in
xchg
mov
clc
jnp
adc
xchg
xlat
call
xchg
dec
(bad)
jmp
jge
arpl
arpl
test
cmp
arpl
arpl
arpl
dec
xor
sub
pop
xchg
jmp
xchg
pop
test
sar
mov
sub
push
pusha
adc
test
aam
jbe
xor
fnstenv
jnp
pop
or
xchg
imul
call
jne
dec
out
es
pop
jno
dec
pop
jp
int3
adc
gs
repnz
in
clc
out
inc
mov
pop
xor
iret
inc
and
scas
rcr
out
jmp
lock
push
aaa
cmps
pop
mov
sbb
pop
call
pop
mov
xlat
push
repz
loope
cmc
scas
or
sbb
add
(bad)
sub
inc
inc
pop
out
out
out
push
cmp
push
ins
push
in
cmp
mov
adc
int
jb
sub
sbb
xchg
push
mov
in
xchg
cmps
and
xor
mov
stc
popf
out
daa
push
into
mov
mov
ds
enter
ins
int3
adc
push
dec
aad
jne
xlat
in
mov
cmc
push
aad
outs
aam
retf
(bad)
icebp
xchg
adc
sbb
mov
(bad)
loopne
cs
pop
jnp
les
pop
mov
fdiv
push
mov
loope
dec
jae
and
sbb
add
or
cld
jl
adc
aam
add
sti
xchg
sahf
cmps
ror
loop
mov
and
mov
mov
(bad)
cmc
mov
dec
inc
sbb
xchg
sbb
mov
and
lea
adc
js
or
mov
sub
jge
mov
(bad)
iret
daa
ins
mov
or
test
ins
add
imul
aad
jo
sti
fmulp
sti
es
(bad)
xor
xchg
inc
pop
push
push
out
in
ficom
jle
movs
sbb
dec
ins
add
xor
rol
popa
pusha
mov
pop
int3
sub
cli
mov
mov
inc
sub
loope
xlat
cmc
fistp
imul
cmp
and
cmp
ror
ficomp
ja
clc
jae
add
mov
jnp
cmc
into
(bad)
cmp
nop
popf
mov
loopne
cmps
mov
add
enter
outs
jbe
imul
mov
or
outs
cmp
jmp
xlat
jmp
imul
cmp
frstor
loop
and
addr16
sub
pop
sub
mov
cmp
ja
and
test
mov
add
inc
push
or
xchg
int3
push
lahf
add
int
push
push
push
(bad)
cmp
cmp
loopne
shl
ret
sub
(bad)
pop
call
aam
daa
sub
push
(bad)
loop
and
dec
cmc
xor
(bad)
stc
cmp
fbstp
lods
sbb
movs
ret
push
xchg
pop
loop
jg
pop
mov
retf
neg
mov
mov
je
inc
fcmove
jbe
cld
das
pop
(bad)
push
fsubr
pop
xchg
sub
mov
js
pop
cmp
push
jnp
fs
and
push
stos
test
int
push
popa
pop
pop
in
dec
mul
jmp
pop
or
sbb
inc
mov
add
xor
sub
cmp
mov
push
add
shl
int
je
ins
pusha
out
inc
sub
out
ret
xchg
pop
mov
sbb
xor
mov
pop
cmps
mov
out
data16
mov
sar
jnp
ins
fucomi
xlat
je
fwait
mov
shr
push
push
jg
sbb
out
dec
gs
mov
mov
ja
xchg
ins
ja
retf
xchg
outs
inc
adc
outs
xor
sbb
push
das
mov
add
mov
sti
lods
ss
pushw
xor
scas
inc
neg
jne
aam
dec
sub
pop
fldenv
out
mov
sub
int
pop
ins
test
mov
mov
ret
stos
xchg
sub
shl
pop
int
sbb
pop
xchg
mov
adc
movs
(bad)
(bad)
not
or
mov
mov
jmp
rcr
fwait
and
xchg
mov
arpl
or
aas
icebp
clc
data16
int
das
inc
cld
rol
inc
jmp
cmc
cmp
jns
mov
shl
repz
mov
std
mov
cmp
push
inc
emms
sbb
mov
das
sub
mov
mov
adc
fucomi
xchg
push
mov
mov
jb
std
mov
pusha
adc
outs
cmp
mov
inc
pop
sbb
shr
enter
sub
push
add
ins
sub
jo
fbld
es
je
inc
mov
cmp
push
addr16
xchg
sbb
call
shl
or
repz
shl
mov
add
daa
xchg
or
mov
je
or
into
neg
pop
or
xchg
mov
outs
mov
arpl
mov
mov
cmp
push
jge
mov
push
scas
jle
jnp
dec
ins
div
aaa
rol
add
adc
push
mov
scas
mov
pop
cld
aam
rol
out
adc
ror
jle
mov
dec
sub
push
retf
mov
shl
mov
lods
sub
add
mov
xor
xor
xor
fadd
iret
aaa
or
push
fs
sub
lods
sahf
adc
stos
xlat
pop
(bad)
mov
sbb
xchg
and
popa
mov
and
adc
dec
mov
sbb
pop
ret
das
pop
mov
call
shr
pop
out
mov
inc
mov
pop
call
mov
mov
dec
rcr
(bad)
xor
out
shl
and
movs
dec
cmp
pop
pop
sbb
cmp
dec
sbb
or
fsincos
rcl
sub
fiadd
call
sbb
loopne
and
mov
mov
(bad)
mov
mov
stc
les
neg
bound
mov
in
mov
int3
out
jp
cmp
sbb
jno
xor
sahf
inc
cmp
popa
pop
jae
xlat
mov
dec
mov
mov
cmps
ja
pop
xor
cmp
pop
cli
or
sub
mov
cs
xor
lods
mov
sbb
ds
xchg
cli
ss
xlat
outs
push
mov
mov
pop
fadd
cs
mov
ins
mov
and
(bad)
adc
xchg
loope
icebp
fstp
in
sti
icebp
push
lock
cmp
jl
sub
sahf
stos
loope
stos
movs
cmp
or
js
fwait
das
mov
pop
fs
dec
add
movs
repnz
rdmsr
into
iret
or
inc
jnp
test
pop
aam
jmp
popa
adc
add
fist
or
fld
sub
out
mov
les
push
jb
ret
mov
psubusw
(bad)
jmp
(bad)
fst
or
mov
inc
adc
dec
sub
aaa
in
rol
rol
shl
mov
dec
push
movs
or
fld
push
mov
mov
shl
shr
arpl
iret
jno
pop
aaa
jge
jle
enter
mov
mov
cld
sbb
mov
pop
cwde
push
adc
add
mov
adc
add
dec
push
dec
dec
xor
and
in
mov
inc
(bad)
and
sbb
push
in
or
adc
jle
xlat
cmps
xchg
mov
lods
mov
jne
scas
iret
mov
cld
and
xor
arpl
not
rol
adc
inc
shl
imul
loop
enter
stos
in
pushf
js
adc
(bad)
movs
jb
mov
loope
(bad)
in
in
out
aad
xor
xchg
push
push
in
or
into
and
xchg
or
add
xchg
xchg
outs
and
mov
xchg
(bad)
jbe
jmp
out
inc
std
jmp
mov
dec
dec
inc
jnp
sti
fild
mov
sbb
push
mul
lock
push
scas
sub
lds
mov
lods
jno
cmp
and
push
fcom
ins
jno
cli
adc
mov
xchg
pushf
and
push
fwait
cmc
xchg
out
icebp
add
loopne
test
mov
or
sub
jecxz
out
inc
pop
sbb
(bad)
popa
out
pop
outs
and
xchg
das
inc
cwde
sub
add
or
mov
sbb
sub
scas
movs
out
xchg
adc
mov
mov
xchg
sbb
jns
push
cmp
inc
(bad)
ins
stos
sub
mov
icebp
mov
mov
mov
jo
mov
pushf
mov
mov
lock
mov
popf
aad
in
mov
mov
icebp
fistp
(bad)
test
inc
(bad)
rol
(bad)
movs
xor
add
out
sti
cs
and
push
push
pop
sub
bound
imul
inc
repnz
(bad)
fnstenv
jae
(bad)
popf
jno
stc
bound
into
and
test
iret
lea
sbb
pop
shl
sbb
cli
retf
inc
ja
call
nop
mov
aam
xlat
xor
sub
imul
sub
xchg
enter
xor
push
and
cmc
sbb
aad
ficom
and
mov
adc
adc
sbb
(bad)
pop
pop
jno
jno
imul
push
mov
sbb
push
sub
jb
xchg
shl
retf
retf
data16
rcr
cdq
cwde
fldcw
xchg
mov
aaa
dec
mov
and
jl
adc
in
push
sahf
enter
xchg
sbb
inc
or
push
jle
cmps
out
cmp
out
movs
dec
scas
add
xor
rol
or
or
dec
jecxz
xchg
pop
lea
add
es
mov
ret
mov
test
mov
inc
fnsave
fild
ror
push
(bad)
ds
jne
sar
test
out
lods
mov
adc
mov
pop
cmp
xchg
cmp
adc
push
stos
mov
imul
ss
std
add
ins
imul
xor
cli
cmp
and
and
push
shl
jle
mov
adc
push
outs
pop
add
out
jl
aad
std
dec
sbb
lods
mov
stos
sub
xor
sbb
es
imul
(bad)
add
mov
adc
or
(bad)
das
stc
add
stos
jle
(bad)
pop
adc
rcl
xchg
pushf
push
(bad)
mov
jl
out
xchg
dec
push
push
dec
fisubr
dec
ss
cld
xor
xchg
jmp
scas
mov
into
cmps
jmp
xor
outs
xchg
fisub
lods
popa
in
inc
inc
jbe
xlat
and
leave
rcr
lock
sbb
cmp
xchg
je
inc
xor
mov
(bad)
arpl
cmp
dec
rcr
or
repz
or
loop
(bad)
out
enter
sbb
dec
arpl
out
faddp
iret
mov
push
jae
je
push
arpl
inc
in
int3
(bad)
test
mov
jmp
retf
fisubr
ret
jnp
inc
stos
push
mov
mov
xor
outs
cmps
dec
push
es
fnstenv
lds
lods
inc
pop
rol
or
(bad)
jbe
in
lods
push
pop
int3
sbb
xor
je
lock
xchg
adc
inc
ret
push
push
mov
sbb
dec
(bad)
sti
cwde
xchg
push
pop
fisttp
loop
(bad)
mov
pop
inc
mov
ficom
jmp
retf
test
pop
push
xchg
add
and
mov
xor
mov
mov
sbb
add
cs
add
ins
inc
and
inc
push
adc
xchg
fwait
lods
fsub
sbb
leave
adc
stos
lock
xor
js
jmp
pushf
or
outs
jnp
push
shl
jp
sbb
lods
inc
dec
pop
in
ret
in
rcl
mov
or
enter
movs
adc
push
aas
movs
adc
fisttp
mov
pop
ficom
nop
dec
movs
cmp
ins
jmp
cwde
pusha
ins
fisub
movs
loopne
hlt
sbb
cmp
cmp
or
xchg
enter
jns
xor
push
jecxz
mov
dec
push
cmc
out
sub
mov
sti
add
sub
fidivr
cmp
cmp
rcr
out
loope
pop
dec
sbb
call
pop
dec
call
jge
cs
invd
daa
jns
loopne
sbb
push
hlt
daa
push
outs
ins
ret
xchg
mov
movs
xchg
push
mov
xchg
ins
jmp
inc
mov
pop
pop
cmp
mov
pop
outs
jno
movs
ror
jle
cmp
jb
adc
sbb
retf
sbb
rol
ins
xor
in
(bad)
cmp
ja
movs
inc
xchg
out
jae
sub
int3
popf
sub
mov
or
sub
and
push
mov
push
enter
fld
int
jbe
lods
call
jle
dec
jb
xor
mov
movs
stc
fidiv
mov
jb
dec
dec
pop
dec
fisttp
mov
jae
mov
sub
aas
and
pusha
mov
sahf
inc
outs
fldenv
test
xchg
mov
fiadd
gs
call
mov
sub
cdq
jno
adc
(bad)
push
add
inc
adc
add
jmp
nop
sbb
int
nop
sub
test
out
jne
fdivr
inc
mov
or
icebp
inc
jns
in
inc
jnp
xor
sub
jno
shr
into
mov
inc
cmp
sub
cmp
push
fsub
push
call
push
movs
ret
dec
out
xchg
jle
(bad)
stos
jmp
sub
push
fwait
out
inc
dec
adc
sub
cdq
mov
imul
dec
not
and
sub
lods
xor
arpl
data16
movs
dec
fnstcw
imul
arpl
call
in
mov
repz
lods
pop
test
mov
and
push
cmps
add
mov
ja
call
sub
fld
push
mov
dec
push
or
mov
dec
push
loope
nop
fwait
scas
mov
cmp
popa
cmp
test
aas
cmps
nop
cmp
iret
pop
jno
mov
test
or
sub
jl
mov
xchg
(bad)
lods
mov
add
outs
cwde
sbb
pop
inc
or
add
mov
mov
stos
push
rol
fs
xchg
pop
inc
test
adc
cmp
xchg
pop
mov
mov
add
mov
stc
neg
daa
jns
inc
or
xor
push
push
mov
xor
pusha
mov
test
lahf
cmp
test
fstp
sti
fldenv
je
stos
lsl
push
out
icebp
mov
gs
push
movs
aad
add
mov
loope
data16
hlt
sub
inc
adc
jmp
out
pop
xchg
gs
lock
xor
retf
scas
and
in
hlt
push
dec
shl
xchg
jno
xchg
dec
call
retf
mov
pop
push
int3
leave
in
adc
inc
xor
fiadd
punpckhwd
fstp
ja
mov
test
movs
mov
aas
push
test
add
ins
jns
lea
cmp
cmps
jecxz
adc
inc
cmp
dec
mov
jns
je
sub
mov
fsub
and
call
sbb
call
cmps
int
inc
bnd
in
xor
cs
and
pushf
popf
xor
xor
ins
jecxz
mov
adc
icebp
pop
ins
push
int3
add
int
xlat
mov
pop
mov
and
loop
and
cmp
mov
int
xchg
in
xchg
rol
sub
fst
rcl
xor
(bad)
push
(bad)
not
mov
xor
xor
call
sbb
jl
not
sbb
dec
sbb
in
sbb
mov
movs
out
xchg
nop
add
sbb
dec
sub
jns
scas
sti
mov
pop
add
repnz
loope
arpl
pop
add
ins
repnz
ret
mov
sahf
xchg
xchg
mov
sub
sar
push
sub
adc
aas
and
aas
mov
das
push
outs
movs
cmp
mov
fisttp
out
enter
jmp
sbb
jbe
cmp
push
out
xchg
test
lods
xlat
movs
rcl
inc
imul
loopne
mov
clc
add
cld
dec
mov
mov
test
out
adc
and
aad
xchg
rcr
into
push
push
push
inc
imul
xor
ds
inc
daa
nop
imul
es
fstp
call
sbb
iret
and
movs
add
or
or
clc
fstp
stos
repz
cmp
mov
in
std
in
fnstenv
stos
pop
cwde
aad
outs
push
retf
mov
cmps
push
xor
pop
fcomp
jl
sbb
icebp
pop
sbb
pop
sbb
idiv
loop
lea
imul
fld
test
arpl
jae
in
push
mov
pusha
(bad)
(bad)
clc
mov
daa
and
xor
stos
movs
les
movs
xor
cmp
aad
push
push
outs
in
pop
mov
inc
bound
pop
mov
enter
pushf
cli
sub
ss
out
sahf
push
inc
dec
xor
cmp
sub
shl
xchg
xchg
adc
sbb
inc
imul
inc
push
ins
add
mov
sahf
int3
or
scas
sub
js
movs
and
aam
cs
test
inc
inc
rol
stos
and
dec
push
mov
imul
mov
or
scas
dec
mov
jge
add
aam
mov
xlat
pop
cmp
cld
jle
shr
ss
iret
jmp
jl
js
and
dec
retf
rcr
dec
call
ret
sub
int
call
lahf
rol
and
and
or
movs
xchg
jmp
and
outs
nop
adc
lods
pop
fadd
sbb
outs
sbb
push
push
loopne
ss
ficom
jl
mov
jp
lods
pop
arpl
sbb
push
stos
sbb
retf
adc
fisub
je
push
cmp
sub
enter
cld
xor
mov
pop
ror
fwait
mov
sub
jns
dec
jbe
pop
xor
loopne
and
sbb
mov
mov
xor
pop
dec
push
push
nop
sbb
int
je
jne
(bad)
iret
fwait
in
mov
repz
fdiv
jp
loop
jns
ss
xor
wrmsr
clc
or
int
(bad)
test
jne
sub
retf
int
and
wrmsr
sahf
pusha
push
add
repz
cmps
dec
mov
(bad)
cmp
sbb
js
(bad)
icebp
mov
mov
dec
addr16
add
sbb
cmp
ins
or
or
mov
loope
jle
stos
neg
add
mov
jbe
mov
fistp
(bad)
pop
jae
dec
(bad)
jmp
sbb
les
sbb
aad
inc
sbb
adc
hlt
adc
or
dec
dec
xor
jno
push
jno
movs
addr16
(bad)
sbb
out
lods
mov
pop
movs
stc
jmp
ins
ret
in
jae
sahf
cmp
or
mov
pop
imul
jle
aas
jmp
lock
inc
jnp
adc
bound
xor
xchg
popa
cmp
loope
movs
icebp
xchg
or
rol
add
(bad)
aam
jecxz
sbb
aam
test
out
ret
sub
inc
dec
nop
in
cmps
mov
shr
icebp
mov
mov
jbe
loopne
add
out
and
sub
scas
loopne
in
sub
add
inc
pop
inc
xor
je
mov
cdq
scas
ds
and
out
mov
push
(bad)
iret
not
cmp
clc
push
pop
xchg
dec
outs
aad
into
pushf
call
fild
mov
pop
cmp
add
test
push
cmps
test
outs
sahf
sbb
ror
or
into
ret
jns
idiv
scas
or
sub
jmp
iret
shr
add
add
push
call
xchg
in
fstp
inc
adc
and
mov
(bad)
fimul
ds
inc
loop
jge
sbb
iret
dec
and
and
jp
push
es
mov
aaa
inc
dec
shr
data16
or
test
ins
jae
pop
mov
arpl
out
inc
lds
sub
cmp
xchg
fisubr
adc
inc
pop
lds
(bad)
sub
jl
mul
jl
jne
imul
sbb
cli
(bad)
push
sub
and
push
lods
add
leave
lea
xchg
xchg
into
pop
pushf
scas
(bad)
xlat
adc
(bad)
aaa
ds
aad
add
mov
dec
ins
pop
xchg
pop
stos
icebp
rcr
out
sub
lods
out
mov
call
rcr
cmp
loopne
add
cmp
cmps
or
out
fucomip
div
mov
test
cwde
cmp
repnz
and
jmp
jb
cmp
mov
aad
je
sbb
inc
out
and
mov
xchg
cmps
hlt
and
or
sub
cmp
call
fsub
jne
call
pop
pop
in
fiadd
xor
and
and
push
mov
pop
mov
bound
iret
push
(bad)
mov
cmp
cmp
mov
adc
jbe
gs
cmp
fucomp
sti
push
pop
xor
fcomp
and
sub
imul
cmp
sub
jb
ins
sub
add
mov
data16
xchg
sahf
push
outs
bound
dec
call
sbb
cmc
cmp
call
jo
mov
push
push
xor
and
frstor
in
fdiv
cmps
sbb
fs
fsub
test
sub
mov
inc
loope
repnz
dec
adc
stc
rcr
ret
and
hlt
out
ret
dec
ins
jl
dec
adc
popf
xchg
(bad)
pop
pop
nop
aaa
xor
sub
cmp
scas
cmp
mov
aam
iret
(bad)
jno
xor
into
js
push
jg
ret
mov
push
mov
enter
or
lea
jb
sahf
in
mov
cmp
or
cmp
arpl
pop
push
loop
cli
sub
je
scas
aam
lods
xchg
ja
xor
mov
xchg
mov
add
dec
mov
jmp
in
mov
xor
ret
cdq
cli
mov
dec
dec
fbld
xchg
mov
int3
mov
push
daa
and
repz
int
and
push
pusha
and
sbb
cmp
sbb
out
ret
ffreep
fsub
inc
cmp
and
jae
out
int
(bad)
xor
push
ins
lods
aad
mov
test
aad
pop
pmulhw
sub
pop
mov
pop
cmp
mov
std
(bad)
outs
jne
jecxz
sbb
fcmovnu
and
sbb
inc
and
ds
adc
inc
xor
adc
and
(bad)
(bad)
loopne
loopne
mov
aam
rep
loopne
arpl
scas
lahf
or
and
dec
sti
popa
mov
xchg
in
xchg
test
aaa
fcom
aad
mov
xor
pop
nop
sbb
or
fwait
sbb
imul
imul
inc
rcl
ja
add
inc
dec
pop
mov
sbb
les
add
scas
or
dec
scas
jg
adc
movs
out
(bad)
nop
scas
mov
scas
sbb
in
jnp
xor
mov
adc
pushf
jae
in
pushw
mov
mov
sub
push
push
jne
fmul
sbb
dec
pop
add
xchg
loopne
or
sub
dec
mov
loop
mov
and
test
fs
adc
fs
inc
(bad)
adc
int3
ja
pop
sbb
mov
and
dec
aaa
sbb
mov
mov
push
mov
or
pop
int
ret
(bad)
clc
pop
pop
mov
cmps
loop
(bad)
adc
int
jae
mov
mov
xlat
mov
leave
inc
jp
push
cmps
push
push
add
out
xchg
sub
dec
jg
leave
sub
pop
xchg
xchg
push
hlt
mov
prefetch
(bad)
(bad)
and
inc
push
xchg
cli
test
fcom
ret
cmp
repz
jae
ins
stc
lds
jmp
xor
test
mov
imul
sub
cmp
xor
retf
add
push
hlt
lea
loope
sub
mov
and
xor
xchg
add
fldenv
adc
dec
pusha
pop
sbb
(bad)
popa
mov
pop
or
pop
xchg
test
fadd
sub
hlt
add
mov
daa
mov
add
or
loopne
mov
or
push
les
data16
lock
xlat
adc
sbb
out
(bad)
xchg
cwde
(bad)
mov
inc
jmp
xor
rol
xchg
outs
cdq
lods
enter
fist
jb
shl
jns
add
and
sub
jae
loope
je
cmp
adc
push
imul
scas
add
shl
shl
scas
mov
es
retf
mov
sub
adc
mov
in
jle
in
popa
rol
test
add
in
outs
cmp
dec
ins
jbe
sub
test
stos
xor
jle
lea
jle
cs
pusha
repnz
dec
fdivrp
dec
aad
gs
sub
sub
or
sbb
dec
xchg
iret
ja
jecxz
lods
jmp
outs
inc
imul
fnsave
cmp
sbb
out
mov
movs
mov
and
jae
push
fsub
pop
(bad)
cld
xor
xchg
lock
cdq
jle
mov
lahf
(bad)
add
mov
xchg
sbb
jle
jo
xor
add
cmp
stc
pop
inc
inc
jge
loop
or
xchg
adc
ficom
cmp
in
loop
dec
mov
leave
ret
pop
sbb
aaa
popf
stos
lahf
frstor
jae
das
cmp
dec
clc
retf
daa
fadd
icebp
jg
jg
sbb
push
and
hlt
shr
push
pop
shl
test
add
sub
xor
into
movs
pop
sub
ror
call
fist
jmp
mov
jl
dec
mov
mov
mov
push
mov
add
cmp
rol
ins
aas
inc
(bad)
outs
cmp
sar
sbb
in
ins
xchg
mov
(bad)
int
push
inc
add
test
sbb
out
ds
xchg
cmps
or
adc
aas
clc
enter
ds
adc
das
or
pop
in
xchg
ss
dec
pop
pavgw
in
fwait
cmp
jnp
jnp
into
mov
in
xor
aam
retf
sar
adc
mov
pop
jns
mov
add
cmc
cmp
jle
movs
push
pop
sub
call
inc
or
arpl
iret
aad
out
sub
inc
cs
jmp
in
mov
add
es
(bad)
pop
jo
sub
xchg
aad
sub
inc
cwde
outs
sbb
xchg
xor
jns
xor
adc
or
imul
fs
adc
mov
pop
push
movs
je
mov
mov
sbb
xor
mov
(bad)
push
xor
addr16
mov
clc
addr16
adc
cli
adc
pop
call
aas
test
fs
push
adc
rcr
pop
inc
adc
out
mov
bound
addr16
adc
sahf
cmc
xchg
(bad)
in
adc
loopne
and
xchg
mov
xor
mov
test
or
mov
or
jnp
push
jnp
imul
out
mov
aad
sub
pop
clc
jmp
shr
out
in
in
retf
lds
pusha
movs
push
cmp
outs
xor
scas
cmp
xchg
out
mul
fdiv
and
mov
int
or
mul
jmp
retf
test
pop
cmp
fs
jl
jg
mov
pop
cld
xchg
ss
fmul
dec
pop
(bad)
scas
test
xchg
xchg
push
push
ins
rcr
call
push
jns
hlt
mov
pop
out
fstp
pop
add
sbb
popf
jmp
inc
dec
dec
popa
ins
loopne
pop
pop
movs
xor
fxch
pop
xor
inc
cmp
pop
imul
xor
pop
cs
std
ror
in
xor
fcom
pop
lea
adc
mov
lea
cmp
dec
push
or
mov
xor
dec
sbb
push
jne
or
mov
lods
je
or
or
mov
gs
push
sahf
bound
lods
std
jbe
je
pop
retf
xor
dec
daa
cmp
int
in
xchg
mov
dec
pmuludq
daa
mov
aad
cli
push
xor
test
dec
inc
lahf
or
popf
aam
cmps
fiadd
sar
push
(bad)
sti
jae
in
dec
arpl
dec
push
test
cmp
sub
mov
pop
repnz
jecxz
cmp
int3
cwde
out
inc
es
push
ret
loopne
jo
add
pop
(bad)
das
scas
ret
in
dec
outs
sbb
int3
popf
sbb
ins
int3
mov
mov
xchg
jecxz
mov
test
sbb
sub
stc
mov
xchg
mov
ins
jle
in
pop
and
mov
(bad)
sub
push
jl
sub
in
push
mov
movs
pop
xchg
adc
movs
loop
push
iret
in
into
push
addr16
xor
lods
scas
aas
js
(bad)
pop
or
mov
sbb
jbe
daa
scas
dec
ret
hlt
in
js
cmp
clc
sbb
mov
jo
cmp
mov
inc
ret
pop
ja
mov
mov
push
push
enter
mov
inc
fcmovu
(bad)
pop
fsub
popf
adc
fwait
out
push
mov
mov
bound
ret
ss
call
xor
mov
mov
sub
pushf
mov
scas
dec
loopne
cmp
fmul
mov
cld
inc
adc
jns
in
test
bound
inc
sub
mov
fnsave
xchg
mov
push
ins
jmp
aad
ss
pop
repz
adc
or
add
or
(bad)
je
pop
pcmpeqd
xchg
mov
xor
adc
cmps
inc
xchg
sub
mov
xor
pop
xchg
stc
mov
movs
bound
pop
xchg
test
ret
xor
sbb
(bad)
mov
cld
or
shl
sti
test
test
pop
push
imul
xchg
rcl
sbb
sub
rep
jg
pop
add
mov
out
and
gs
bound
push
sub
xchg
fldpi
mov
xchg
mov
dec
cmp
or
ins
mov
xchg
push
sub
inc
mov
push
mov
and
in
jnp
lahf
cmp
xchg
push
pop
outs
jecxz
xor
push
sti
adc
pop
aas
pop
and
inc
and
repnz
imul
mov
push
add
xor
adc
dec
aas
push
adc
les
shl
movs
faddp
xor
jnp
enter
les
xchg
outs
sub
dec
mov
jl
in
dec
into
mov
mov
call
bound
jno
shl
pop
inc
push
repz
ror
pop
call
xor
dec
aam
or
das
cdq
inc
stos
clc
add
or
mov
adc
imul
mov
cmp
jle
fbld
jbe
movs
and
test
add
mov
mov
jge
test
or
jmp
adc
add
mov
pop
mov
mov
aam
lods
add
shr
dec
js
or
jb
pop
call
xchg
jo
push
sub
outs
and
aam
sti
mov
xlat
std
sub
xor
xchg
xlat
sbb
adc
push
mov
xchg
movs
lds
int3
outs
fisubr
jno
sahf
push
pop
inc
outs
pop
nop
fadd
jno
nop
add
js
sub
add
mov
mov
cdq
mov
popa
xchg
inc
cmp
(bad)
or
or
daa
cmp
sbb
pop
(bad)
pop
aam
jae
lahf
and
aaa
mov
pop
cwde
xor
sti
movs
sub
cmovs
jae
dec
jmp
outs
jg
jg
jo
add
xchg
cmp
add
jno
aad
mov
inc
jb
inc
fstp
cmc
or
inc
iret
rcl
or
xlat
xchg
add
les
sbb
jae
nop
pop
inc
xor
or
pop
aaa
adc
push
imul
push
cmps
mov
xchg
ins
and
mov
ins
jno
outs
lds
jmp
mov
je
cmp
sbb
push
push
mov
leave
movs
pop
jmp
shr
add
fild
mov
xchg
jp
push
in
sub
mov
xchg
adc
andnps
jns
cmp
mov
daa
inc
mov
loope
fwait
les
pop
repz
or
and
iret
sbb
mov
cld
cmps
lock
sbb
dec
fisubr
or
adc
cli
push
test
ins
(bad)
aas
and
rol
or
ret
js
sub
mov
add
jp
leave
clc
fdivr
aaa
rcr
mov
jnp
jl
mov
fcomp
lods
out
ds
(bad)
imul
xchg
(bad)
cdq
mov
sbb
push
fbstp
adc
pushf
jae
adc
in
jle
aad
shl
sbb
mov
js
or
sub
and
mov
iret
pop
jmp
mov
xor
xchg
scas
sub
dec
jmp
je
ja
nop
mov
clc
inc
pop
loop
sub
inc
cmp
sahf
sub
adc
pusha
addr16
mov
ret
and
xchg
or
in
or
(bad)
adc
inc
int
jp
and
sbb
in
test
scas
in
mov
cmp
mov
mov
imul
or
jae
into
xlat
mov
add
and
push
leave
mov
mov
sbb
pop
mov
shl
xor
xor
iret
shl
push
(bad)
and
sub
push
popf
dec
mov
pop
aaa
dec
dec
jne
dec
pop
jle
test
gs
pushf
xlat
jno
sub
arpl
fadd
test
dec
es
xchg
das
pop
pop
stc
add
jb
fsub
retf
pop
fcmovnb
sbb
aaa
arpl
sub
dec
jmp
shr
pop
add
(bad)
push
mov
aas
pop
sbb
inc
or
mov
pop
push
test
repz
pop
push
outs
sub
(bad)
xor
adc
and
repz
mov
popa
push
adc
cwde
je
sub
cmps
call
fmul
cmp
sub
rcr
outs
cmp
adc
xchg
mov
dec
or
repz
mov
jb
fsub
cdq
clc
pusha
push
out
xor
push
ret
pop
outs
mov
mov
mov
scas
aas
dec
add
or
pop
dec
xor
cld
mov
lods
mov
xor
jo
sbb
or
mov
mov
inc
ror
xchg
nop
dec
inc
arpl
or
xchg
inc
rcl
into
adc
lock
cs
sbb
test
cmp
shl
xor
dec
icebp
into
sbb
jb
jmp
or
sbb
xchg
adc
test
test
xor
fdivr
sub
(bad)
out
or
fcmovu
call
mov
cmps
cmp
mov
hlt
sbb
data16
sbb
add
in
sub
inc
jno
das
or
bound
je
mov
and
pop
loope
add
xlat
fwait
jmp
inc
mov
cmp
cmp
cmp
cmp
sbb
mov
stc
out
adc
dec
cmp
and
call
sti
sub
push
lea
cli
ins
je
mov
xor
mov
mov
loope
and
inc
out
jge
(bad)
scas
sub
popfw
pop
and
in
mov
dec
les
mov
cmc
mov
test
push
jp
or
pop
shl
push
call
fsub
test
scas
add
sbb
xchg
cmps
mov
jge
and
jns
loop
ret
sub
icebp
cdq
xchg
jb
out
inc
leave
mov
inc
popf
ja
jno
out
es
jno
xchg
enter
or
adc
jmp
jle
dec
ins
hlt
pop
nop
pop
pop
or
xchg
(bad)
fild
mov
pusha
(bad)
adc
adc
sub
pushf
jbe
sar
add
xchg
test
push
sahf
xchg
push
xchg
mov
and
ins
(bad)
stos
loopne
xchg
sbb
jge
mov
adc
(bad)
aad
adc
fsub
scas
std
test
push
mul
stos
int
mov
loope
aad
pusha
jp
jmp
jmp
test
pop
ret
call
(bad)
in
mov
(bad)
and
mov
retf
xchg
clc
test
fs
inc
pop
cs
sbb
ins
mov
aaa
lahf
jp
mov
xchg
pop
sub
mov
repz
jne
add
imul
mov
cmc
hlt
nop
pop
out
into
dec
jo
pusha
dec
mov
add
xchg
xor
adc
gs
inc
and
cmps
(bad)
xor
fucomip
jmp
std
inc
in
xchg
popa
ret
data16
inc
mov
or
inc
jne
call
push
into
add
pop
cdq
rcl
sti
sbb
jo
movs
jp
les
out
fs
daa
mov
aas
(bad)
call
dec
sub
in
hlt
adc
out
(bad)
jle
loope
adc
hlt
aaa
pop
cmp
mov
cmc
(bad)
test
or
jge
mov
stos
sbb
push
pushf
in
pop
addr16
sti
xchg
call
daa
leave
ret
push
jmp
xchg
pop
rcl
lea
pop
test
mov
addr16
and
cli
mov
addr16
out
inc
sbb
push
test
(bad)
in
push
jnp
icebp
jo
ins
adc
inc
add
jl
pop
(bad)
lds
rcl
pushf
xlat
cld
add
mov
pop
xor
pop
sbb
enter
push
repnz
push
dec
addr16
mov
ss
dec
mov
je
movs
push
adc
xchg
adc
xchg
mov
dec
xchg
cmp
das
pop
sar
hlt
mov
aam
xchg
stos
xlat
cmps
arpl
into
aam
mov
or
cwde
out
pop
dec
clts
pushf
inc
xor
es
jl
pop
pop
retf
lea
ret
sbb
stc
mov
ret
dec
pop
jg
lock
out
dec
cmp
add
bound
sbb
sbb
and
cmp
push
daa
shl
pop
aam
movs
mov
je
jns
fidiv
ja
push
ins
in
(bad)
mov
xchg
xlat
mov
jg
les
and
jmp
dec
dec
bound
test
push
mov
or
ror
pop
xchg
adc
cdq
or
mov
pushf
enter
fidiv
pop
and
in
jae
test
add
std
in
cmp
jae
cmp
add
cmp
push
mov
shl
sar
outs
inc
inc
cmps
stos
scas
icebp
jno
rcr
(bad)
popa
pop
mov
pop
mov
mov
popf
mov
adc
xchg
push
popa
hlt
retf
push
inc
bts
and
mov
mov
shr
cmp
arpl
ret
xchg
mov
sub
jg
pop
and
pop
fsub
ror
repz
(bad)
repnz
cmp
jle
lds
ins
mov
pusha
mov
fidivr
mov
stos
xlat
pop
(bad)
test
(bad)
in
test
fimul
cdq
pop
scas
out
push
fiadd
mov
pop
(bad)
mov
add
aas
xchg
sbb
arpl
adc
rcr
call
push
in
retf
add
test
js
push
xchg
pop
(bad)
xchg
call
shr
stc
rol
retf
aas
scas
push
outs
inc
jno
not
cmp
mov
(bad)
adc
sub
outs
ret
mov
loope
mov
popf
xor
pop
test
cld
aaa
outs
jp
or
inc
jg
add
ret
sbb
ja
bound
jle
inc
(bad)
(bad)
in
pop
nop
add
cmps
mov
hlt
pop
sbb
mov
(bad)
sti
jge
xor
iret
pushf
dec
call
std
cs
ins
jns
retf
gs
adc
push
or
mov
lods
hlt
jns
jae
ret
mov
pop
xor
rol
inc
push
sub
aaa
or
rol
(bad)
shl
mov
jbe
shl
and
ins
sahf
cmp
xchg
and
ins
sub
sbb
ficomp
icebp
scas
xchg
sub
aad
jp
xchg
add
and
push
push
jae
retf
lahf
stos
nop
(bad)
push
mul
rcl
push
pop
or
dec
or
sub
xor
aas
mov
repnz
xor
xchg
pop
stos
or
jae
dec
inc
gs
pop
or
in
mov
inc
mov
dec
jnp
stos
lds
hlt
cs
mov
mov
push
lods
inc
icebp
rcr
dec
scas
add
xchg
pop
mov
call
ins
cmp
xor
xor
(bad)
lods
dec
pop
push
pop
cmc
mov
xchg
push
sbb
scas
pop
mov
stos
imul
int
clc
call
lods
xchg
sbb
sub
fidiv
xor
imul
push
xor
sub
loope
cmp
dec
or
(bad)
fstp
xor
pop
mov
jno
jg
or
dec
mov
pop
or
dec
adc
mov
test
into
lds
xchg
mov
std
ds
sub
retf
in
cld
push
sub
or
(bad)
sbb
jl
ja
rcl
or
test
jae
test
aad
add
add
xchg
jp
cdq
daa
addr16
std
dec
jne
adc
cmc
sub
mov
xlat
mov
pop
stc
jae
dec
xchg
(bad)
test
lock
icebp
in
push
xor
popa
sub
ja
test
pusha
sbb
mov
sub
push
mov
cli
push
aad
inc
and
mov
inc
mov
jbe
xchg
push
or
dec
or
inc
jg
sub
ins
pop
das
gs
jbe
retf
push
pusha
adc
scas
add
nop
fcomp
jns
xchg
push
sbb
rol
or
jecxz
lods
adc
mov
stos
popa
pop
bound
mov
xor
pop
enter
add
in
jg
shl
inc
test
fmul
xchg
and
stos
mov
out
xchg
out
scas
pop
cld
fistp
dec
cdq
or
push
imul
pusha
jmp
imul
ja
cs
cld
mov
pop
popa
data16
shr
std
xchg
pop
scas
pop
ret
jno
cmp
(bad)
cld
add
inc
leave
xor
mov
aam
inc
xchg
xor
pop
es
test
fnstenv
sub
cld
call
dec
dec
pop
retf
repnz
test
mov
sti
fdivr
or
dec
mov
dec
sbb
sbb
test
imul
pop
push
and
xchg
lds
inc
jbe
jmp
pop
int3
pop
and
or
test
outs
xchg
in
add
xchg
movs
xchg
mov
outs
test
xlat
loope
sub
arpl
(bad)
pop
retf
test
es
inc
arpl
dec
std
cmp
out
aas
mov
inc
push
call
push
jge
(bad)
or
fwait
mov
outs
and
fdiv
dec
or
mov
cmp
int
test
(bad)
sbb
or
mov
cmps
leave
pop
sahf
cli
scas
rol
fldcw
jns
fwait
add
stos
dec
outs
aas
syscall
inc
icebp
xchg
push
cld
pop
or
(bad)
(bad)
push
dec
mov
sbb
add
and
stos
jo
iret
jo
cmc
jb
gs
dec
add
jns
ret
mov
cmp
gs
xchg
aaa
mov
xlat
loopne
push
leave
add
jmp
push
ja
clc
(bad)
mov
(bad)
daa
adc
xchg
stos
loope
inc
inc
pusha
mov
cdq
and
aad
stc
dec
in
movs
imul
and
mov
sub
xchg
(bad)
jne
test
std
jp
and
push
inc
xchg
adc
mov
es
fsubr
pop
pop
fadd
sub
addr16
aas
neg
dec
xor
or
gs
mov
dec
add
dec
ja
jecxz
add
sbb
in
push
test
dec
pop
jle
out
push
aam
mov
sub
test
mov
mov
push
mov
pop
ss
ds
push
div
call
mov
push
jb
mul
repnz
mov
jae
mov
and
sbb
xchg
addr16
xchg
aas
and
pop
icebp
cmc
inc
ja
inc
adc
xchg
mov
mov
add
xchg
sar
xor
int3
mov
cwde
cwde
(bad)
jne
leave
int3
stc
xor
xor
ins
enter
loop
stc
mov
imul
pop
shl
fild
adc
(bad)
lods
cli
call
and
push
jbe
mov
test
enter
xor
nop
jne
rol
std
inc
xor
shr
jae
or
test
and
enter
inc
mov
inc
repz
lea
add
or
pop
or
imul
mov
xchg
cmp
shl
add
add
cld
into
test
xor
jmp
idiv
push
push
cli
test
adc
lods
cmp
dec
dec
neg
stos
(bad)
jg
push
ja
cdq
sub
push
inc
shl
jno
das
xchg
retf
push
es
aam
mov
cwde
add
xchg
and
cmp
clc
mov
rcl
cmps
sub
mov
xor
rcl
fidivr
sbb
xchg
fisubr
mov
(bad)
repnz
sti
aam
test
add
jb
xchg
mov
pop
mov
sbb
mov
test
mov
push
call
cld
(bad)
mov
int3
jmp
sub
mov
inc
div
mov
les
test
fmul
xchg
add
xchg
jmp
dec
mov
pop
sbb
xchg
call
aam
in
mov
jg
adc
lds
scas
repnz
push
addr16
loopne
mov
or
outs
dec
dec
retf
test
fcmovnb
mul
and
and
pusha
and
(bad)
(bad)
inc
test
mov
and
outs
adc
xor
pop
mov
push
ss
pop
xchg
rol
inc
scas
adc
push
out
dec
inc
imul
jmp
retf
scas
jg
sbb
cmp
sbb
hlt
xor
xor
or
push
adc
mov
fwait
in
movs
jbe
inc
(bad)
xchg
fs
mov
jge
sbb
mov
push
dec
icebp
fisub
and
or
sub
mov
rol
call
dec
jmp
sub
clc
pop
mov
cdq
and
xchg
mov
pop
xor
adc
add
sar
in
es
jmp
and
bound
or
dec
popa
icebp
icebp
fstp
icebp
mov
jne
jno
push
cmp
popf
shl
mov
cwde
xor
ret
sub
sub
adc
test
ins
nop
sub
adc
inc
mov
push
cmp
push
sahf
je
shr
cld
push
push
jne
mov
popa
dec
push
jle
out
jmp
mov
jne
movs
sti
xor
cmps
test
out
fwait
xchg
sti
mov
and
fnstcw
xchg
in
sti
inc
mov
xchg
mov
sub
adc
icebp
sbb
int3
fst
mov
inc
push
daa
retf
and
dec
push
cli
mov
shl
movs
mov
jge
sub
arpl
fld
aam
mov
sub
and
pushaw
adc
imul
mov
xchg
mov
pop
xor
rol
jecxz
sub
cli
sub
call
jmp
and
aad
imul
and
mov
aam
sbb
out
fsub
cmps
fbstp
ins
push
dec
cmc
call
xor
mov
jbe
lahf
ds
add
sbb
mov
push
and
mov
iret
ss
xchg
inc
into
outs
cmps
cmp
(bad)
push
test
pop
pop
and
jp
je
repnz
mov
retf
and
vpsubsb
sub
div
addr16
cld
mov
popf
jns
out
test
dec
ret
sbb
push
xchg
popa
cmp
jnp
popf
movs
jmp
daa
jns
jno
int3
fiadd
mov
lahf
rcr
xor
test
mov
add
ja
pop
jo
dec
leave
inc
in
pop
cmps
lods
cdq
hlt
lods
out
sbb
sbb
test
and
xchg
xor
imul
mov
fldenv
inc
dec
pop
in
(bad)
stos
inc
mov
add
inc
jb
icebp
sahf
pop
movs
ins
sahf
xchg
ins
out
int
mov
dec
mov
(bad)
loop
xchg
test
push
imul
lds
xchg
lock
ja
push
push
xor
pop
repnz
push
push
rol
lods
dec
jne
fisttp
inc
lods
jecxz
push
(bad)
out
mov
mov
sbb
xchg
or
mov
adc
mov
popf
in
sbb
(bad)
dec
mov
fldenv
popf
adc
cmp
mov
xor
pushf
inc
jle
mov
imul
out
js
pusha
out
push
stc
call
xor
inc
xor
mov
pop
test
add
or
dec
cdq
xor
xchg
dec
mov
aaa
rol
sar
xchg
std
xchg
xchg
lahf
fbld
addr16
jae
pusha
jp
xchg
rcr
out
sbb
pop
nop
pushf
mov
movs
stos
outs
pushf
xor
cmp
popf
js
dec
dec
or
sub
sub
jmp
loopne
mov
movs
enter
(bad)
out
xor
jp
pop
push
adc
sbb
inc
dec
inc
xchg
xchg
test
cmp
inc
fdivr
aad
cmp
inc
adc
or
adc
ret
jns
sahf
rol
fstp
test
mov
enter
mov
pop
les
cmp
lahf
repnz
xchg
and
addr16
xchg
jns
xchg
push
lods
and
xor
shr
dec
ja
in
nop
jne
rcr
test
frstor
jmp
ror
mov
pop
outs
in
adc
call
mov
inc
out
push
dec
call
inc
adc
gs
jp
aaa
jge
sbb
mov
call
mov
inc
hlt
loop
stc
cmps
mov
xchg
mov
mov
iret
mov
inc
cld
xor
(bad)
int3
out
(bad)
xchg
jo
lods
pop
adc
outs
je
push
mov
add
ss
push
or
jg
lahf
out
fistp
mov
mov
test
push
aam
bound
sub
inc
mov
xchg
dec
xchg
lds
xchg
cmp
and
jae
pop
mov
scas
bound
inc
sti
lea
add
pusha
cwde
icebp
mov
jne
js
out
test
outs
lock
xor
leave
mov
xchg
gs
cmc
mov
push
das
retf
fsubp
push
test
hlt
ss
cmps
shr
xchg
dec
inc
ret
out
fnclex
in
push
mov
in
adc
movs
outs
dec
xchg
jbe
and
xchg
(bad)
arpl
or
xor
and
and
fidivr
jnp
shl
xchg
aad
cwde
jle
push
adc
pop
sub
cwde
call
xor
xor
push
out
xchg
pop
xchg
or
push
adc
pop
loope
daa
mov
call
or
outs
call
pop
add
jmp
in
push
and
sub
adc
mov
retf
das
mov
sahf
and
push
loop
scas
mov
cmp
xor
mov
adc
clc
jo
or
bound
or
cmp
xchg
lock
loopne
test
mov
jmp
or
cmp
inc
mov
add
hlt
int
cmp
xchg
jb
sub
ffreep
fisubr
mov
adc
outs
(bad)
movs
and
lock
cmp
jmp
xchg
call
push
ins
outs
push
xchg
lds
pop
mov
fisub
cmp
push
and
inc
(bad)
in
pop
xor
pop
add
ror
dec
cmps
popf
(bad)
fisubr
in
call
xor
jns
cmp
xor
adc
sbb
ficomp
inc
and
mul
cmp
dec
lds
or
adc
hlt
rol
(bad)
addr16
pop
fwait
push
cmp
mov
loope
dec
out
xor
dec
mov
arpl
xor
pop
cmp
aas
sbb
movs
out
outs
out
clc
mov
(bad)
mov
pusha
cs
xor
enter
iret
movs
xor
add
popf
pop
out
cld
or
call
out
mov
xchg
popa
(bad)
stos
dec
loope
in
mov
call
shl
enter
ffree
(bad)
cld
xchg
addr16
pusha
xchg
ins
popf
movs
adc
stc
inc
arpl
jle
pop
xchg
ret
cmps
pop
ja
dec
je
sbb
ins
push
xchg
or
sbb
fld
ret
mov
and
jge
mov
add
(bad)
jae
test
aas
iret
jmp
cmps
cmp
out
jbe
mov
dec
shl
movs
or
fucom
mov
add
mov
or
loope
mov
shl
sbb
shl
mov
or
call
add
sub
out
movs
movs
outs
pop
lahf
mov
test
shl
pop
imul
pusha
les
outs
xchg
sbb
fidiv
pushf
cli
imul
jmp
shl
sti
fcomp
inc
aaa
inc
pop
mov
into
popf
nop
jge
aad
xchg
ins
jo
leave
jbe
inc
and
dec
es
add
inc
lods
push
mov
call
fcomp
cdq
dec
mov
mov
aam
mov
repnz
mov
push
jns
ds
mov
fwait
nop
daa
iret
mov
aad
and
jno
mov
jmp
xor
aas
xchg
sub
xor
daa
cdq
mov
or
add
push
not
cmp
int3
push
stos
out
sar
and
sbb
jmp
xchg
dec
push
call
data16
sub
arpl
jle
into
mov
rcl
pushf
mov
loopne
fidiv
(bad)
adc
fdiv
rcl
xchg
or
sbb
dec
addr16
sar
arpl
sub
es
cmp
popa
sbb
jge
adc
rcl
call
mov
arpl
cwde
nop
sbb
mov
rcr
ins
cmp
in
(bad)
(bad)
fstp
fadd
(bad)
pusha
rcr
data16
(bad)
es
adc
(bad)
out
outs
xlat
add
out
adc
pop
jmp
cmc
inc
or
(bad)
mov
xor
outs
adc
mov
push
xor
js
mov
es
cmp
cmp
jecxz
sbb
fstp
sbb
das
add
clc
pop
in
scas
inc
sbb
cmp
xor
(bad)
push
jecxz
mov
rcl
and
pop
jecxz
icebp
into
clc
mov
pop
cmp
adc
fwait
add
(bad)
mov
jns
enter
cmp
neg
cmp
adc
sahf
(bad)
cmp
sub
dec
stc
lods
sbb
call
cmp
pop
sub
(bad)
cwde
dec
int
out
fwait
mov
ins
movs
cmc
or
in
pop
inc
xor
bound
mov
ja
sbb
neg
hlt
sbb
in
rcr
push
xchg
cmp
xor
jecxz
mov
cmp
jne
push
cmps
push
sbb
scas
sub
stos
ds
arpl
xchg
mov
ret
imul
fiadd
pop
adc
push
and
jno
sub
icebp
mov
pop
xor
or
pop
pushf
mov
xchg
mov
enter
and
lock
shl
sbb
xchg
icebp
cdq
and
cld
push
pop
sbb
movs
imul
rol
jge
jbe
xchg
mov
daa
cmp
and
mov
xlat
les
ret
inc
test
push
add
push
pop
pop
or
les
shl
in
imul
das
ficomp
jo
jb
mov
cmp
push
adc
pop
pop
mov
leave
sbb
out
adc
out
or
adc
clc
xor
jno
sub
lods
dec
ds
add
rcl
retf
mov
or
and
dec
inc
fsubp
and
xor
dec
outs
ror
inc
ret
ss
pop
push
sub
and
test
adc
test
dec
mov
out
daa
add
daa
push
enter
pop
je
retf
movs
fbstp
lea
pop
push
push
sub
clc
jae
mov
add
fiadd
cmc
jmp
pop
add
addr16
icebp
loope
fwait
nop
xchg
pop
lds
mov
jae
rep
pop
loopne
psrad
aaa
xor
xor
or
cmp
out
iret
cmp
fwait
nop
dec
jecxz
dec
add
jne
rcr
push
je
sub
in
call
mov
push
mov
pop
dec
add
push
jo
lahf
adc
ss
mov
add
sub
retf
mov
inc
pusha
dec
shl
mov
ins
xor
mov
out
jle
mov
jmp
jp
push
outs
fst
stc
xor
mov
mov
neg
in
adc
fwait
jmp
mov
retf
dec
jnp
xchg
mov
std
repnz
xor
jbe
cmp
lock
push
sub
mov
sub
scas
mov
add
or
xor
or
pop
sbb
enter
pop
pop
sub
outs
out
repz
pop
lock
push
and
sbb
call
add
stc
daa
add
nop
cld
ret
lock
mov
inc
pop
jnp
push
scas
stos
lods
outs
add
dec
jl
and
enter
push
test
adc
outs
aam
repnz
das
repnz
aaa
inc
repnz
add
adc
inc
inc
in
adc
adc
push
or
shr
pop
outs
sbb
cwde
mov
adc
in
xor
fstp
jnp
or
gs
jmp
jcxz
das
fs
and
daa
jl
fsubr
dec
popf
aam
cwde
aas
mov
inc
add
fdivrp
das
call
shr
(bad)
sahf
outs
pop
arpl
mov
in
jne
test
shr
popf
scas
imul
retf
add
in
sbb
(bad)
fs
cmp
dec
in
mov
ins
test
(bad)
or
hlt
or
arpl
dec
or
call
mov
mov
aaa
mov
dec
cdq
sbb
addr16
frstor
lds
lods
int3
pop
ins
stos
sub
int3
push
not
icebp
adc
jecxz
or
aam
xchg
adc
clc
clc
push
xor
ss
in
bound
fimul
shl
push
xor
into
div
fcmovbe
jno
cmc
rcr
(bad)
push
pop
xor
jbe
jae
imul
mov
cmps
dec
sub
cs
movs
fisub
scas
jns
in
inc
xor
and
ficom
repnz
inc
jmp
pop
fld
inc
bound
mov
fwait
std
repz
sbb
dec
inc
cdq
xor
gs
push
and
cmps
fnsave
push
mov
std
jb
xor
jmp
xchg
inc
(bad)
adc
and
lods
in
xchg
cli
cmc
lods
inc
cli
jl
jo
popf
push
(bad)
cmp
adc
(bad)
sub
push
ds
xchg
jecxz
bound
cmp
add
loop
xor
or
lahf
clc
jg
add
push
mov
out
adc
sbb
mov
and
jecxz
sub
jb
jl
mov
mov
xor
test
xchg
mov
jb
fmul
xlat
fnstenv
cmp
mov
cmp
xchg
xchg
mov
das
mul
cmp
mov
adc
pushf
xchg
mov
push
xchg
fisub
dec
jb
mov
(bad)
cmp
or
les
bound
cdq
cli
mov
sub
pop
les
add
call
xor
dec
mov
ficomp
adc
jp
aas
jp
arpl
test
ror
lods
stos
xor
hlt
iret
or
lds
or
bound
cmp
int
sub
shl
jecxz
shl
jge
xor
arpl
sub
xchg
call
stos
ds
sub
inc
stos
mov
and
adc
mov
int3
inc
mov
js
dec
mov
and
adc
mov
inc
clc
sahf
retf
xor
fdiv
xchg
clc
add
test
test
push
aam
das
stos
inc
popa
pop
sub
mov
outs
(bad)
fcomp
mov
sub
(bad)
test
js
jecxz
in
fild
call
jnp
xchg
aas
fldenv
sbb
cmc
pushf
ret
gs
sbb
pusha
mov
and
cmp
mov
add
call
neg
test
push
popf
rcr
push
sub
pop
fwait
sub
pop
scas
sbb
adc
hlt
sbb
adc
mov
jb
pop
movs
xchg
mov
or
inc
lea
add
imul
inc
or
loopne
or
fld
std
dec
add
xchg
sbb
cmp
lahf
fdivr
inc
fs
mov
pop
imul
or
repz
ret
addr16
cli
jle
sbb
push
dec
push
xor
call
hlt
push
stos
iret
cmc
and
(bad)
fild
mov
push
xchg
xor
imul
cmp
xchg
pop
bound
in
rcl
movs
or
outs
mov
xchg
cwde
and
push
das
das
jmp
xor
jle
inc
call
je
jmp
sub
shl
pop
and
pop
call
inc
adc
shr
xor
gs
xor
adc
inc
shl
jne
xlat
mov
icebp
push
mov
or
ds
or
jp
int
dec
ret
xor
(bad)
cmp
jns
popa
mov
gs
sub
in
out
xor
sbb
jne
mov
jae
ret
xchg
shl
push
and
outs
arpl
(bad)
xor
mov
sub
pop
sbb
jnp
xor
sub
dec
cmp
cmp
sbb
and
sub
inc
clc
das
jg
xchg
int
mov
and
sbb
mov
lock
(bad)
test
adc
in
xor
(bad)
push
rcl
and
out
or
pop
xor
out
jnp
xchg
cmp
pop
sbb
push
dec
clc
(bad)
cwde
(bad)
mov
(bad)
push
pop
mov
in
mov
jge
dec
pop
push
cwde
in
mov
xor
fwait
scas
xchg
inc
lea
mov
cmp
push
sub
or
or
sbb
mov
test
xchg
mov
movs
lea
xlat
scas
(bad)
pop
test
jae
xchg
push
stos
sub
out
mov
inc
aaa
push
cli
call
ret
aad
cmp
fsubr
cmp
ret
dec
aad
mov
out
hlt
cmps
add
mov
jo
jmp
jne
jno
mov
cmc
pop
and
mov
pop
mov
mov
in
push
pop
mov
xor
inc
loopne
pop
inc
dec
dec
aam
mov
push
jns
xchg
adc
mov
and
xchg
sub
or
sub
sub
push
arpl
cmc
inc
jnp
mov
(bad)
cmp
jmp
icebp
clc
adc
add
dec
sub
sub
popfw
test
pop
ins
shr
fs
sbb
jge
push
pop
xor
(bad)
sbb
and
inc
jp
dec
lods
lds
mov
push
addr16
jmp
push
sbb
or
or
repnz
dec
mov
cmp
imul
dec
jb
out
xor
ins
mov
aad
and
mov
jmp
retf
ret
add
add
retf
push
repnz
add
daa
mov
lods
adc
pop
xor
fild
aam
scas
adc
mov
ins
movs
js
cs
push
adc
lods
or
cli
daa
ins
xchg
leave
push
popf
rcr
jo
fwait
adc
imul
xchg
lds
es
cmp
cmps
push
push
fld
stos
repnz
call
es
movs
push
pop
jne
jl
dec
loopne
cmc
nop
sahf
jno
mov
pop
iret
and
nop
scas
or
addr16
popa
xlat
mov
mov
mov
cld
loope
das
lahf
xchg
(bad)
out
das
mov
daa
das
call
and
fdivr
retf
mov
mov
pop
mov
dec
movs
sar
ss
pcmpeqb
inc
repnz
adc
pop
call
jp
test
push
cld
js
in
test
das
rol
test
outs
fcmovb
(bad)
into
xchg
std
cmp
cld
jb
jmp
test
dec
add
fsin
dec
iret
jg
dec
leave
jp
and
lods
test
fldcw
aaa
out
xor
out
xlat
call
lea
stos
sbb
add
push
mov
imul
aaa
adc
test
outs
call
jmp
xchg
outs
pop
hlt
jns
(bad)
and
out
ins
(bad)
clc
lahf
push
stos
cmp
hlt
movs
cmps
adc
enter
and
dec
add
inc
lods
xchg
movs
push
push
push
cs
or
push
ins
mov
mov
es
xor
ss
jge
jb
and
adc
pop
pushf
xor
adc
test
jle
or
or
ror
(bad)
jnp
cwde
in
mov
pop
aam
xchg
scas
dec
inc
xchg
fst
sub
ds
sbb
mov
jmp
in
sub
ss
mov
dec
xchg
or
repnz
inc
and
in
movs
cmp
jno
cdq
in
mov
sbb
and
scas
mov
fdivrp
mov
xchg
mov
xor
and
mov
call
xchg
aad
xchg
std
mov
sub
xor
mov
out
pusha
sub
mov
lock
imul
call
(bad)
icebp
sti
int
sbb
enter
mov
mov
or
jmp
imul
xor
cmps
cwde
data16
xchg
pop
hlt
stos
inc
test
mov
add
loop
adc
jp
imul
and
and
add
xchg
mov
test
sub
sbb
mov
xor
shl
out
call
xchg
xchg
(bad)
in
xor
not
cdq
add
mov
jmp
cmp
mov
enter
sbb
cmp
arpl
loop
ds
fbld
and
adc
fcomip
push
nop
sahf
mov
rcr
push
jb
rcl
mov
pop
mov
mov
int
cmps
(bad)
fs
xchg
dec
jns
mov
into
int
aas
add
jae
dec
xchg
xchg
sub
mov
enter
in
sti
test
fst
movs
mov
add
add
icebp
(bad)
jmp
inc
pop
mov
ins
adc
cmp
adc
pop
xor
lods
push
(bad)
xor
out
push
pop
jg
dec
and
out
data16
sub
inc
sar
cwde
mov
hlt
pop
push
jmp
adc
and
std
fwait
mov
jmp
mov
or
retf
mov
movs
loopne
push
pop
sysenter
sub
dec
mov
loopne
movs
inc
mov
sub
les
dec
mov
ss
jmp
jae
adc
cmc
ins
cmps
xchg
dec
cmp
(bad)
std
mov
aas
jl
ins
nop
out
rcr
add
xchg
push
cmp
push
mov
mov
into
or
popa
adc
mov
mov
adc
mov
jne
(bad)
sub
aam
jl
pop
stos
adc
rcr
out
icebp
rcr
in
lods
imul
mov
stos
(bad)
jne
mov
xor
push
jg
out
pusha
cdq
xor
xchg
ss
pop
cmp
arpl
loopne
push
xchg
dec
pop
sar
pop
lea
mov
mov
inc
out
stc
add
dec
vpcomuw
pushf
or
jnp
xchg
rcl
xchg
xchg
nop
jl
call
sub
jg
scas
ror
(bad)
cmp
mov
ja
xlat
pop
inc
pop
pop
iret
mov
into
out
jle
outs
mov
and
cmp
jmp
push
mov
jecxz
push
cs
cmps
inc
or
cmp
call
or
rcr
pop
data16
scas
lods
mov
addr16
cmp
mov
mov
rcr
in
add
adc
cmps
hlt
mov
fs
bound
cmp
(bad)
adc
(bad)
fldcw
cmp
sbb
mov
push
dec
in
jno
jmp
xor
xor
retf
adc
loopne
js
push
add
call
aam
(bad)
push
addr16
lahf
sar
test
cmp
jmp
jg
loope
loope
sub
gs
mov
ror
rcr
add
cdq
addr16
mov
and
push
adc
int3
cmps
jecxz
xchg
cmps
fsubr
or
mov
or
dec
or
and
sahf
push
in
and
jne
add
adc
cmps
adc
out
mov
lods
cwde
fwait
shl
in
xor
lahf
adc
jle
in
retf
hlt
loopne
dec
adc
sub
jmp
dec
jb
or
jno
jns
hlt
push
mov
xchg
or
xchg
sbb
xchg
outs
fisttp
pop
pop
mov
jns
inc
dec
retf
jge
retf
sbb
push
icebp
out
outs
mov
ret
outs
jmp
mov
jge
cs
int3
jmp
ret
dec
jp
(bad)
jmp
xchg
ss
(bad)
into
sbb
out
dec
ficomp
mov
mov
push
inc
dec
ja
aad
inc
call
fisubr
pmulhw
out
shl
js
sub
sub
dec
or
inc
jo
cmp
int
popf
inc
rcr
sub
inc
mov
and
(bad)
cmp
pop
out
stc
and
mov
bound
xchg
pop
pushf
and
sub
xchg
pop
ret
sub
int3
lea
adc
cmp
xchg
ja
stos
enter
mov
popa
imul
and
push
loopne
sbb
aas
mov
aad
push
inc
dec
push
in
mov
pop
add
sbb
loopne
div
mov
push
pop
push
xor
test
mov
out
push
(bad)
push
(bad)
sbb
call
retf
dec
gs
jp
xchg
cmp
dec
xor
adc
jmp
test
mov
sbb
push
inc
xchg
ror
ja
aas
adc
sub
lds
gs
sbb
pop
add
or
fsubr
add
jbe
push
pop
inc
stos
push
repnz
movs
dec
push
mov
mov
cmc
dec
les
cmp
xor
addr16
or
ret
or
and
sbb
dec
jmp
in
nop
call
or
jbe
addr16
iret
or
fld
in
adc
repnz
in
add
pushf
ds
dec
(bad)
add
pop
jbe
je
ins
(bad)
dec
(bad)
movs
test
popf
fdiv
cli
mov
test
cwde
addr16
pop
sub
xchg
sti
ins
mov
fcom
cwde
and
repnz
mov
ret
pop
mov
repnz
add
push
add
add
fild
(bad)
mov
add
into
(bad)
call
inc
retf
cmc
adc
xor
fist
mov
aam
jno
lds
movs
mov
fbstp
xor
test
mov
retf
sub
xor
add
retf
xchg
sub
shl
movs
es
adc
push
mov
jae
ss
and
rcl
pop
addr16
test
pop
aam
push
imul
inc
add
gs
and
inc
mov
sbb
cmp
xchg
xchg
ja
ss
inc
jmp
or
loope
jmp
imul
mov
(bad)
fld
stc
(bad)
lods
ja
ret
or
and
out
popf
dec
mov
mov
dec
popa
fisubr
mul
loope
mov
rol
in
mov
dec
ret
jmp
loop
and
and
mov
adc
repnz
push
inc
mov
ret
or
cmp
sahf
mov
div
push
pop
inc
add
add
repnz
jns
iret
push
stc
call
stc
cmc
test
(bad)
push
sub
sbb
das
mov
jno
(bad)
jmp
scas
mov
jg
cmc
inc
sahf
pop
enter
fsubr
mov
lahf
ins
xchg
cmp
mov
xlat
cmp
popa
icebp
jmp
or
ja
push
nop
movs
out
adc
es
push
out
loopne
mov
sbb
and
outs
outs
mov
xor
jae
fs
std
cmp
jge
pop
sti
mov
dec
dec
inc
jl
xchg
or
mov
add
les
lea
in
mov
aad
ja
xor
mov
fwait
aaa
into
mov
mov
or
mov
ror
pushf
in
adc
sar
fist
or
cmps
dec
sub
sub
mov
outs
lds
(bad)
imul
mov
sub
(bad)
std
fsub
popa
mov
(bad)
xchg
loope
test
sub
push
mov
mov
xor
js
dec
sbb
mov
push
es
arpl
jae
test
scas
jg
xchg
adc
ret
mov
jno
mov
push
(bad)
adc
(bad)
dec
dec
dec
inc
pop
xchg
add
lods
pop
adc
nop
adc
retf
mov
dec
pop
inc
fst
nop
je
xchg
mov
jl
fist
sub
rcr
dec
gs
data16
cmp
das
sub
mov
out
xor
cli
stos
loopne
out
shl
(bad)
stc
popa
xchg
cdq
mov
ret
pop
jb
jecxz
pushf
test
sbb
stos
xchg
sub
mov
mov
mov
imul
loop
mov
daa
and
es
into
or
stos
sub
ficom
inc
out
mov
sub
xchg
sub
pop
arpl
lahf
dec
scas
pop
and
int
in
lock
je
loopne
(bad)
jo
mov
aas
outs
fistp
xor
in
lahf
xlat
sub
add
ss
add
stc
lods
inc
in
sbb
sub
arpl
pop
mov
test
xor
cmp
jl
std
and
add
dec
xchg
cmps
dec
dec
jb
out
xor
inc
cmp
stos
bound
(bad)
cs
les
not
and
mov
jl
cli
xchg
call
ret
pop
mov
or
mov
and
pushf
push
jle
adc
pusha
sti
test
(bad)
xchg
int
xchg
inc
xchg
xchg
xor
mov
push
mov
in
enter
adc
jmp
(bad)
in
imul
neg
loopne
inc
fdivr
mov
(bad)
sti
rcr
jle
repz
int3
shr
push
movs
popa
das
pop
jmp
lea
call
and
ins
jmp
pop
xchg
push
aam
mov
sti
mov
add
mov
cli
outs
or
pushf
mov
jmp
std
and
aaa
aas
add
pop
not
push
xchg
xor
rcl
stc
lock
rcl
sub
push
cli
jns
dec
lods
mov
add
xchg
push
inc
in
cmp
or
jmp
cmp
sti
xchg
je
dec
(bad)
fnstsw
retf
scas
mov
popa
xchg
aad
xchg
nop
mov
movs
sahf
jecxz
ins
adc
sbb
(bad)
lock
sti
test
mov
xchg
xor
ins
(bad)
loope
call
sbb
psubd
xchg
xor
pop
mov
shl
es
sbb
jns
leave
fldenv
fs
mov
xchg
xor
pop
cmp
and
test
jnp
and
sub
ret
sbb
or
outs
ins
scas
xchg
xor
cmps
scas
add
jae
add
fcom
(bad)
movs
jg
pop
mov
and
call
jb
pop
adc
push
ds
(bad)
(bad)
mov
add
stos
xor
dec
stos
imul
jp
inc
or
xlat
adc
xlat
daa
push
sbb
push
loope
dec
pop
xor
sbb
pushf
lock
(bad)
daa
jnp
cwde
mov
clc
xchg
lods
jnp
hlt
sbb
call
xchg
test
xor
ins
sbb
jg
outs
fimul
lea
pusha
loope
rcr
dec
ss
ins
sbb
xor
jae
mov
mov
or
mov
sbb
inc
es
(bad)
imul
loopne
pavgb
mov
push
mov
pop
fcomip
shl
repnz
aas
push
inc
xchg
jbe
sbb
sbb
push
fsubr
mov
sbb
or
mov
or
inc
mov
jg
imul
stc
pop
aam
sbb
ret
adc
ficomp
sbb
pop
mov
mov
dec
cld
or
shl
fdivr
and
jno
xchg
or
enter
mov
pop
push
xor
call
mov
aad
paddsb
stos
(bad)
mov
in
jb
mov
int3
out
jl
inc
dec
clc
add
fiadd
mov
stos
in
and
mov
jns
xor
mov
arpl
xchg
inc
in
(bad)
sub
push
push
fs
inc
jmp
out
retf
mov
xor
je
sbb
ins
push
out
ret
adc
sub
jb
into
pslld
repz
int3
add
mov
xchg
aad
xor
clc
sub
jp
jnp
jecxz
mov
in
out
mov
inc
rol
adc
jb
and
into
sub
sub
push
xchg
test
mov
cmp
fist
mov
iret
jp
jle
adc
in
mov
shl
retf
jmp
jae
retf
jmp
jbe
pushf
add
stos
std
call
test
xor
jno
and
sub
js
std
mov
(bad)
jmp
(bad)
fldcw
and
out
jb
dec
mov
inc
sub
jno
sbb
repz
ja
inc
mov
xor
xor
jl
pop
out
cmp
mov
(bad)
stc
cmps
in
sub
loopne
lahf
push
or
into
or
in
cmp
adc
xchg
xor
cli
pop
mov
inc
inc
xor
lock
mov
pusha
xchg
repnz
xlat
inc
xor
aaa
lods
adc
jmp
iret
xor
push
inc
add
popf
push
push
and
add
int
adc
xchg
clc
out
mov
push
imul
pop
mov
aaa
push
clc
dec
xlat
push
ins
xchg
jge
inc
or
adc
mov
add
sti
sar
call
xchg
mov
daa
out
mov
mov
jnp
pop
(bad)
push
out
mul
(bad)
sbb
xchg
neg
xchg
and
pop
cwde
xchg
xchg
popf
sbb
sti
sbb
mov
add
arpl
jno
and
and
call
call
ja
inc
stos
inc
enter
sub
scas
add
sbb
push
pop
cmp
add
pop
in
retf
mov
mov
in
xor
inc
mov
jae
(bad)
jp
xchg
call
cmp
scas
mov
fwait
or
loope
lock
mov
mov
or
out
mov
out
imul
mov
(bad)
pop
xor
xchg
loop
inc
movs
(bad)
dec
(bad)
out
sbb
add
(bad)
xor
cmps
add
std
jne
bound
loop
int
loop
popf
jnp
in
xor
dec
retf
es
aad
jnp
call
int
dec
arpl
fistp
add
jle
pop
xchg
add
call
stos
retf
mov
mov
loop
mov
nop
push
push
jl
add
into
out
push
xor
and
cmp
lods
repnz
pushf
dec
add
pop
rol
or
in
pop
lods
imul
scas
popf
(bad)
pushf
loop
sbb
mov
loopne
xchg
pop
fwait
daa
loope
mov
pushf
push
lds
scas
fwait
or
adc
jmp
(bad)
jmp
fild
sub
movs
das
cmp
jmp
mov
mov
imul
and
mov
mov
cmc
lahf
out
repz
pop
je
data16
sub
push
mov
xor
jb
test
cmp
adc
add
loop
xlat
gs
enter
mov
and
ror
jno
aaa
inc
pop
in
ins
rol
inc
popa
xchg
cwde
mov
aaa
adc
iret
and
lea
pusha
pop
leave
loope
xchg
int
out
fcomp
shl
push
add
push
daa
adc
jb
fadd
cs
add
test
add
xchg
inc
push
idiv
dec
ins
js
call
sbb
lock
bound
inc
clc
and
imul
into
rol
xor
stos
movs
hlt
and
out
xchg
sar
mov
int3
in
setbe
out
xor
in
int
aaa
or
xor
movhps
pop
int
sub
sahf
inc
pop
cmp
stc
push
out
mov
ins
sbb
fwait
cmp
aam
cmc
pop
lods
or
mov
add
daa
pop
mov
sub
mov
jecxz
ins
les
jg
jecxz
(bad)
jmp
mov
and
int
repz
dec
pop
lods
sub
dec
sub
xchg
retf
xor
ds
pop
inc
std
out
mov
out
push
adc
or
dec
adc
aad
(bad)
mov
inc
fdivr
fsubr
(bad)
shl
or
push
pop
sbb
jge
leave
adc
dec
jle
leave
mov
arpl
js
cli
xchg
mov
(bad)
scas
ins
ins
and
jmp
xchg
inc
out
div
imul
retf
das
out
cld
dec
xor
std
movs
pop
sub
xor
mov
pop
cmp
and
mov
bound
add
add
fdivr
sub
pop
int
pop
cwde
pop
add
daa
(bad)
stos
add
or
mov
lds
xchg
aaa
pushf
cmp
adc
push
cmp
scas
aas
lock
sub
scas
sahf
pop
leave
sbb
push
retf
xchg
rcl
rcr
std
cli
enter
push
outs
pop
std
cmp
xor
scas
cmp
and
cmp
mov
imul
int
jle
gs
out
inc
ffreep
or
inc
xchg
mov
mov
ret
test
arpl
cmc
inc
pop
(bad)
xchg
sbb
push
js
je
lahf
push
cmp
lds
sub
pop
sbb
sub
addr16
pop
fpatan
(bad)
in
inc
adc
and
push
sbb
adc
push
(bad)
dec
test
sub
pushf
mov
syscall
add
push
ret
leave
rcl
in
mov
pop
test
push
push
aad
in
ficom
mov
repz
or
push
data16
push
cmp
xor
pop
cs
push
xchg
ror
push
(bad)
adc
movs
sti
or
pop
pop
push
xchg
cld
add
outs
sub
(bad)
aas
cwde
movs
fstp
repz
mov
and
jae
js
jne
mov
(bad)
hlt
shl
cld
pop
mov
or
add
je
(bad)
or
cwde
pop
mov
out
arpl
repz
pushw
jns
cmc
(bad)
mov
sbb
jp
and
stos
inc
mov
lods
sub
pop
ret
arpl
inc
push
cld
ja
enter
and
sti
mov
mov
fcom
in
(bad)
push
add
(bad)
fnstenv
retf
daa
push
imul
(bad)
cmp
sbb
ds
adc
mov
inc
(bad)
cmp
jl
lahf
fstp
ins
rcl
push
sbb
out
and
ja
and
call
sub
je
mov
aaa
inc
push
test
out
and
add
sub
xchg
retf
pop
js
fs
dec
jecxz
retf
popa
mov
loope
ins
pop
mov
dec
mov
add
adc
mov
xchg
stos
adc
loopne
(bad)
mov
adc
(bad)
cmp
imul
daa
movs
pop
fcomp
sbb
mov
or
and
jecxz
mov
jecxz
jno
test
mov
inc
in
xor
inc
retf
scas
jae
mov
inc
and
xor
(bad)
shl
sub
mov
adc
xor
xor
mov
xchg
inc
xor
adc
loop
pop
xor
cmp
cld
cli
lods
sub
add
xchg
xor
popf
inc
adc
xchg
pop
inc
push
adc
sahf
mov
aad
call
mov
int3
loop
nop
inc
lods
adc
xor
push
arpl
push
fst
lea
ja
cld
jo
dec
xchg
(bad)
mov
sahf
mov
and
popf
in
dec
pop
cdq
sbb
stos
aas
inc
inc
dec
or
stc
shl
xchg
ja
(bad)
adc
out
sahf
inc
or
fadd
cwde
(bad)
sti
call
adc
jno
jne
cmc
jecxz
cdq
push
sbb
cmp
push
cli
outs
frstor
mov
mov
jmp
das
fbstp
add
ds
repz
dec
int
addr16
movd
mov
daa
push
adc
out
gs
arpl
inc
inc
xchg
inc
inc
push
sub
jbe
dec
daa
in
and
repnz
cmp
and
jl
jecxz
prefetch
or
sub
shl
cmps
push
ja
mov
cli
scas
(bad)
sub
and
in
pop
scas
adc
inc
into
push
and
pusha
and
ror
icebp
call
xchg
js
out
xchg
sub
mov
adc
(bad)
clc
outs
push
js
dec
xor
cwde
fmul
or
dec
pop
add
icebp
inc
mov
ins
cmp
int
mov
inc
inc
out
out
mov
arpl
lods
and
in
int
sub
inc
push
inc
xor
xchg
repnz
icebp
dec
mov
or
dec
add
add
ror
xchg
call
inc
shl
sti
aam
mov
add
fcomi
xchg
and
jno
movs
mov
mov
mov
jnp
jmp
sub
lfs
pop
mov
xor
or
outs
int3
hlt
fcmovnu
lahf
xchg
enter
std
dec
xchg
mov
rcr
outs
sub
js
mov
in
xchg
or
cmp
dec
lods
dec
mov
or
addr16
mov
add
bound
mov
xchg
fwait
push
sbb
or
or
dec
sub
mov
mov
or
imul
inc
enter
adc
loopne
jge
sub
sahf
adc
jae
cmps
cmps
cmp
add
scas
pop
pop
js
push
xchg
(bad)
rcr
xchg
jmp
test
or
imul
in
adc
fwait
lahf
pop
mov
pop
jae
imul
sub
loopne
ins
push
push
mov
pop
imul
mov
pushf
cdq
xor
mov
sub
mov
cs
sub
leave
jg
pop
adc
pusha
adc
retf
add
sub
dec
sbb
jp
push
or
pop
or
aas
rcl
xchg
aas
dec
je
add
jecxz
jg
mov
shr
jnp
add
mov
hlt
imul
inc
loopne
xchg
xchg
lea
push
pop
ltr
cmpxchg8b
push
movs
(bad)
push
push
cdq
inc
inc
adc
xor
push
push
mov
inc
add
dec
loope
inc
sub
cwde
inc
pop
mov
dec
mov
xchg
jge
push
iret
xchg
fld
mov
outs
pop
mov
push
loopne
pop
je
push
inc
lock
or
cli
inc
add
ror
dec
les
pop
les
mov
scas
std
pop
aad
add
lods
add
pop
pusha
adc
sbb
addr16
dec
sub
fld
pop
out
test
retf
push
stc
mov
or
or
cmps
test
retf
fs
push
mov
mov
aaa
fld
mov
or
das
loopne
xor
mov
fs
in
push
ja
call
(bad)
or
adc
pop
icebp
sub
inc
iret
cmp
push
(bad)
(bad)
mov
pop
test
dec
xchg
arpl
mov
mov
fdiv
dec
mov
imul
xor
or
inc
into
jge
popf
ror
loopne
push
mov
pop
push
mov
xor
cmp
(bad)
dec
or
sub
stc
dec
mov
cmp
dec
xchg
int
loop
loopne
push
push
push
sar
jg
shl
mov
loopne
add
jmp
cld
out
mov
cmp
lahf
retf
jl
inc
dec
cmp
fcom
jmp
push
mov
mov
movs
(bad)
sbb
or
stc
out
jecxz
sahf
cmps
cdq
leave
mov
add
outs
jl
(bad)
mov
mov
and
inc
and
adc
clc
adc
pop
pop
pop
xchg
and
pop
pop
jp
jmp
mov
dec
(bad)
adc
mov
mov
ds
adc
lock
aas
mov
adc
mov
scas
(bad)
cmp
jp
xor
xor
xchg
jle
adc
inc
pop
dec
js
repz
adc
mov
mov
mov
scas
out
outs
jnp
(bad)
aad
jmp
add
dec
test
ja
(bad)
inc
add
and
push
push
pop
mov
xchg
gs
xchg
dec
push
lahf
test
xchg
popa
in
in
das
or
cmp
and
outs
(bad)
and
out
scas
add
inc
dec
push
push
and
adc
std
ds
or
xor
aad
out
mov
das
xchg
fstp
or
fdivr
iret
aad
inc
jle
ins
in
out
push
movs
icebp
lea
leave
in
arpl
and
retf
jecxz
dec
mov
xchg
ror
iret
or
mov
push
dec
fucomi
push
mov
lahf
shl
lock
dec
jp
inc
fwait
sbb
mov
jmp
mov
xor
jmp
ficom
arpl
pushw
(bad)
and
fnsave
pop
stc
ret
test
inc
inc
dec
xor
aad
inc
sub
addr16
dec
fstp
in
mov
imul
mov
jns
fs
pop
cmps
cdq
pop
loop
ffree
mov
stc
std
ret
in
xchg
and
retf
cdq
push
sub
dec
dec
push
das
mov
rcr
dec
jbe
movs
and
dec
les
mov
aaa
pop
pop
sbb
or
shl
out
jge
cli
sar
xchg
inc
aam
call
(bad)
fadd
add
cld
stos
inc
outs
inc
adc
sub
pop
imul
pop
sub
iret
pop
dec
jge
jg
aad
push
jno
nop
jno
pop
cmp
call
cmps
(bad)
mov
in
or
retf
xchg
ds
xor
cmp
fstp
or
cwde
xchg
ja
pop
ret
stos
dec
cdq
cs
sbb
jl
cmps
fmul
es
(bad)
adc
add
iret
push
cmp
add
loope
aaa
adc
inc
mov
xlat
adc
(bad)
test
adc
pop
test
xchg
add
mov
dec
cmp
ins
jecxz
mov
push
dec
sub
mov
ret
inc
outs
pop
pop
sbb
hlt
sub
add
adc
pop
int3
enter
cmp
sub
popa
xor
fxch
push
push
out
mov
pop
xor
(bad)
or
cmp
add
jo
frstor
stos
arpl
outs
clc
add
ret
ficom
loope
ss
or
push
int3
ja
pop
push
and
(bad)
mov
mov
aaa
cmp
mov
ins
inc
sub
mov
inc
pop
rcl
sub
(bad)
mov
dec
test
sar
push
mov
cmp
cmc
push
outs
lahf
out
call
inc
fld
mov
dec
icebp
mov
or
out
sub
jmp
lea
imul
pop
cmp
xor
loope
lock
and
stos
mov
fimul
jp
mov
add
bswap
mov
dec
sti
mov
inc
(bad)
(bad)
bnd
jmp
sub
stos
adc
cmp
aaa
dec
jb
lahf
mov
and
outs
xor
xor
(bad)
or
stos
cli
jns
aas
fsubr
xchg
pop
fsubr
cmc
fst
leave
pop
push
test
and
xor
push
int3
aas
shr
inc
mov
mov
les
add
cdq
push
pop
call
(bad)
cmps
stos
call
jo
pop
in
aad
cmp
push
aaa
adc
js
lods
test
fimul
inc
sub
cmp
test
dec
(bad)
icebp
psllw
xlat
loopne
pop
mov
ins
sahf
cmp
and
pop
mov
jbe
movs
or
test
cmp
mov
out
les
and
outs
xor
arpl
mov
sub
sbb
pushf
sub
xor
jmp
dec
inc
dec
int3
aam
es
push
mov
test
jg
movs
mov
test
xor
daa
data16
lea
xor
jb
mov
sub
mov
and
push
jmp
xchg
mov
test
adc
xlat
outs
mov
xor
jns
add
(bad)
out
cli
mov
ror
int3
inc
xchg
add
and
push
dec
nop
mov
and
lock
adc
data16
ins
pusha
pop
int3
in
jne
inc
scas
test
(bad)
jne
movs
mov
data16
mov
sbb
xchg
dec
xchg
xor
bound
push
scas
icebp
outs
mov
out
mov
push
mov
pop
pop
sub
xor
push
xchg
pushf
popf
pusha
inc
scas
cmp
enter
fcomp
push
into
mov
out
mov
cmps
jno
gs
jp
mov
adc
push
leave
stc
dec
add
cmps
mov
sub
xchg
pop
xchg
mov
mov
jge
xlat
xor
dec
loopne
mov
pusha
movs
xchg
or
ds
mov
push
test
mov
xchg
arpl
aaa
mov
push
int
sbb
gs
sbb
test
cmp
scas
mov
and
push
in
fucom
xchg
push
push
fisttp
inc
sub
daa
div
es
mov
outs
movsx
dec
das
cdq
jmp
add
js
cmps
mov
adc
add
imul
fisubr
int
adc
pop
fldl2t
mov
jae
inc
(bad)
sub
jne
hlt
pop
ret
in
rcr
mov
daa
outs
adc
or
add
push
mov
dec
data16
sbb
xor
jae
pop
push
xchg
out
or
mov
inc
xor
cmp
(bad)
divps
cmps
popa
push
mov
pop
xchg
inc
push
xchg
fwait
in
mov
shr
out
(bad)
sbb
cdq
xor
push
pop
es
pop
cmps
inc
icebp
xchg
and
mov
inc
push
repnz
push
sub
cmc
mov
add
les
fisub
out
ds
pop
outs
into
fsubr
pop
add
push
xor
leave
jmp
addr16
repnz
sbb
cmp
jge
mov
jns
dec
bound
in
lods
xor
in
out
sbb
inc
mov
in
mov
jnp
jbe
scas
xchg
jg
test
jne
ins
push
popa
aas
loope
pop
loop
add
dec
sbb
stos
cmp
or
mov
pop
sbb
sbb
adc
mov
xchg
push
pop
xchg
adc
call
dec
hlt
mov
stc
iret
and
mov
mov
pop
test
dec
ror
dec
and
mov
mov
xchg
sti
shl
rol
xor
jnp
push
xor
aas
pop
jmp
clc
jmp
xchg
mov
sub
clc
in
in
inc
add
sub
aas
stos
and
fdiv
sub
mov
sbb
add
mov
push
sub
sahf
mov
mov
mov
mov
mov
mov
pushf
adc
dec
lea
fistp
xchg
mov
jb
les
mov
stos
outs
mov
cmp
hlt
xor
add
inc
or
cdq
push
jne
aam
(bad)
scas
mov
xchg
inc
pop
push
imul
rcr
add
sub
stc
nop
or
push
add
mov
movs
inc
jo
mov
xor
sub
in
pop
jae
push
outs
loope
in
js
xor
mov
ss
int3
lods
scas
(bad)
push
sub
mov
cmp
inc
jmp
add
push
inc
imul
xchg
mov
push
mov
xchg
and
lods
mov
mov
and
call
mov
fimul
and
pop
data16
and
cmps
gs
xor
iret
push
hlt
jno
cmp
sbb
jecxz
push
shl
jle
rcr
push
adc
cmp
cdq
mov
adc
fistp
xor
in
sti
inc
dec
ins
imul
mov
out
xor
pop
addr16
add
(bad)
loopne
in
inc
jmp
cmc
imul
call
push
cmps
(bad)
mov
inc
popf
and
or
inc
inc
push
dec
sub
or
xlat
and
pop
repz
nop
add
cmp
test
add
inc
add
std
xlat
xchg
jbe
xor
repz
inc
mov
or
test
outs
outs
dec
cmovo
nop
call
(bad)
(bad)
mov
std
jg
mov
sub
enter
push
push
stos
test
push
adc
and
xchg
enter
push
or
pop
test
aam
xor
fs
ins
mov
in
xor
test
fist
movs
(bad)
stos
inc
loop
sub
dec
loop
ins
sub
into
adc
into
ins
out
fmulp
fistp
add
push
(bad)
icebp
fucomi
pop
sub
or
cdq
fcom
movs
js
cmc
inc
or
jecxz
xor
push
push
dec
sub
jns
iret
add
push
cmp
or
or
shl
enter
fwait
xchg
or
add
neg
int3
inc
or
add
sbb
inc
inc
xor
scas
fdiv
add
push
clc
pop
ss
add
hlt
sti
inc
pop
xlat
mov
push
mov
cld
imul
dec
mov
(bad)
scas
pop
sub
jle
mov
test
jb
std
pushf
sub
xor
jb
fsubr
into
nop
cmp
pop
mov
pop
jns
lea
xlat
ret
pusha
out
and
xor
mov
enter
sub
xchg
jbe
sbb
aas
cmp
into
push
sub
out
stos
into
push
inc
retf
sub
inc
aad
nop
mov
mov
idiv
call
mov
jns
int3
loope
pop
cmp
test
data16
sub
cmp
jmp
scas
xchg
arpl
iret
mov
sti
push
mov
adc
inc
mov
in
fdiv
cmp
sub
popa
mov
add
or
cvtps2pi
outs
arpl
and
gs
jle
aam
ret
xor
or
mov
(bad)
gs
psadbw
and
cmp
mov
test
jmp
mov
add
mov
dec
mov
cmp
push
lock
call
fisubr
(bad)
and
out
(bad)
into
js
add
test
jo
adc
lds
or
cli
or
mov
xchg
mov
ret
add
mov
repz
push
jo
push
mov
(bad)
and
into
popf
clc
punpckhbw
push
fcom
in
into
jb
lahf
jae
inc
pop
(bad)
loope
pop
ret
shr
cdq
(bad)
jmp
adc
inc
test
stos
push
fmul
dec
movs
outs
sbb
cmps
mov
xchg
aam
fist
sbb
(bad)
and
retf
enter
inc
fnsave
cdq
push
fwait
in
push
(bad)
arpl
pop
mov
mov
mov
and
sub
and
sti
mov
fstp
stos
(bad)
inc
out
adc
pop
lock
adc
clc
mov
cmc
mov
int3
add
inc
and
jno
cmc
scas
xchg
or
or
push
pop
mov
sbb
out
pop
mov
repnz
mov
mov
je
push
mov
adc
pop
jae
add
out
cmp
ret
push
lea
xor
in
imul
jl
cmp
pop
daa
(bad)
dec
push
fisub
jmp
clc
jae
cli
xchg
mov
cmc
loopne
loop
retf
cmp
sbb
jb
pop
mov
and
(bad)
push
jae
xor
dec
push
loop
in
add
mov
popa
jg
dec
or
rol
cmp
cmp
out
pop
aam
into
int3
cmp
leave
movs
push
push
ins
sub
push
mov
lock
xchg
push
rcl
into
retf
pop
(bad)
test
dec
outs
push
jb
dec
mov
(bad)
jb
sbb
test
push
outs
int3
test
or
lahf
pop
xor
test
lds
pop
push
setge
lock
dec
inc
lea
popf
jge
retf
pop
jbe
cmps
xlat
sub
inc
mov
arpl
xor
cmp
bound
jl
bound
gs
add
push
aad
mov
jae
lods
push
or
sbb
clc
jecxz
mov
ins
jecxz
outs
shl
mov
frstor
outs
test
loopne
dec
fst
out
not
pusha
ds
dec
xchg
test
ret
xchg
sbb
cmp
mov
outs
dec
mov
nop
(bad)
lea
mov
mov
in
fcmovnbe
xor
cli
es
mov
mov
aam
fs
xor
lods
jb
push
movs
int3
mov
pop
jb
sbb
and
xchg
pop
(bad)
jbe
retf
lds
outs
bound
pop
push
ficomp
repz
cdq
and
in
xchg
neg
jae
repz
ins
(bad)
imul
pop
pop
ds
mov
rol
xor
pop
jmp
xchg
pop
bnd
outs
and
shr
adc
repnz
sti
je
sbb
inc
test
fsub
test
icebp
jmp
mov
(bad)
sub
xor
mov
retf
lds
inc
push
mov
and
sbb
ins
movs
in
jl
jle
loop
hlt
xchg
sar
mov
and
icebp
mov
mov
outs
pop
jmp
mov
stos
mov
push
add
mov
mov
int3
not
cmp
sbb
mov
add
mov
xchg
mov
sqrtps
jp
lods
loop
mov
ds
outs
jb
sub
jmp
pop
push
inc
xlat
(bad)
cmp
jg
push
xlat
daa
add
movs
pop
cmp
sub
cmp
mov
pop
mov
ins
jne
es
xor
pop
mov
mov
dec
or
cmc
leave
jmp
cmp
or
lods
pop
in
dec
iret
bound
and
pop
cli
popf
nop
das
xor
xchg
add
lods
mov
int3
dec
mov
or
addr16
sbb
jecxz
cdq
pop
jae
adc
cwde
xor
(bad)
lods
pusha
cli
push
mov
add
pop
mov
pushf
popa
push
shl
pop
scas
jmp
cmp
mov
cld
ficom
fldcw
pop
hlt
out
and
(bad)
mov
dec
fiadd
inc
and
retf
cmp
xchg
mov
jg
(bad)
mov
cdq
les
(bad)
out
mov
xchg
mov
add
pop
ret
pop
xchg
(bad)
mov
jle
imul
mov
call
cmp
in
sub
call
sar
sub
loopne
push
popa
pop
test
mov
add
lds
rcl
push
sbb
test
jns
xchg
stc
pop
div
cmps
addr16
arpl
stos
stos
popf
cmc
cmp
clc
ins
cmp
pop
in
test
fbld
call
pop
sub
jne
mov
add
push
adc
dec
(bad)
hlt
je
xchg
mov
dec
jp
out
and
cdq
jmp
pop
div
loopne
xchg
fs
xchg
sub
add
fisttp
imul
(bad)
imul
fst
out
cli
mov
mov
push
xor
add
iret
aad
or
ficomp
std
test
xor
pop
lahf
lea
ins
mov
mov
sub
jbe
push
jb
pop
mov
cmp
push
cmp
mov
cwde
jl
rol
aaa
shl
test
movs
mov
aam
fcom
push
pop
jge
pop
stc
inc
and
and
dec
xchg
loop
sub
cli
std
jbe
sub
das
dec
fdiv
das
shl
test
pop
sbb
neg
sub
pop
xlat
(bad)
pop
pop
movs
xor
mov
dec
fistp
adc
stos
sub
mov
xor
jmp
js
repz
inc
mov
cmps
xor
cmp
ja
iret
push
jl
jge
aad
dec
(bad)
jo
cmp
(bad)
rcl
clc
push
jns
inc
or
imul
xlat
cld
cwde
adc
das
cli
rcl
imul
jecxz
xlat
pop
stos
rcr
fisttp
stos
and
and
mov
aam
gs
inc
pop
fwait
push
fiadd
add
add
ins
push
mov
call
pop
cmps
daa
fdivr
shl
ins
sub
ret
dec
ss
sti
mov
loope
shr
jmp
aam
push
pop
push
data16
mov
stos
pop
add
mov
fadd
mov
lods
sbb
adc
push
hlt
int3
aaa
mov
jle
loope
fimul
fimul
stos
sub
sbb
mov
lahf
xor
sbb
ror
pop
and
or
test
fldcw
push
mov
xor
sbb
sub
dec
addr16
inc
mov
mov
je
aaa
jns
mov
and
mov
jmp
movs
jmp
stc
xor
jl
in
mov
out
bound
aam
stos
push
xor
(bad)
lahf
popa
jae
mov
shr
ret
out
pusha
xchg
xor
mov
out
mov
stc
dec
cmp
mov
dec
mov
outs
std
pop
in
ret
jmp
mov
add
push
xor
mov
ja
shl
ss
push
pop
push
das
xchg
cmp
inc
in
cmp
xor
cmps
mov
int3
outs
cmps
mov
mov
ins
jmp
cmps
sbb
mov
sub
or
dec
and
add
inc
or
dec
sbb
mov
dec
dec
mov
or
aas
or
repnz
hlt
addr16
inc
ins
shl
pop
mov
jecxz
js
sahf
pop
jno
bnd
sub
push
js
mov
mov
call
mov
jecxz
jg
pushf
aas
repnz
out
out
inc
pushf
ins
inc
ret
jne
jae
xchg
xchg
cmp
xor
push
cmc
imul
gs
cmps
mov
out
mov
xchg
push
daa
pushf
out
inc
xlat
outs
cmp
outs
not
jp
mov
imul
mov
mov
aad
dec
adc
add
push
jae
adc
shr
pop
or
outs
cdq
sbb
(bad)
out
cwde
imul
adc
mov
jge
mov
adc
imul
or
imul
mov
push
mov
in
pop
fmul
fadd
pop
and
jle
dec
cmp
lods
es
sub
cmp
pop
pop
pop
and
ds
and
loop
and
cmp
sbb
mov
mov
(bad)
sahf
ss
outs
ins
(bad)
arpl
ins
loope
push
xchg
retf
pop
dec
or
cdq
push
pop
pop
inc
(bad)
and
xchg
cmp
xor
mov
sbb
sbb
cmp
xchg
in
xchg
rcl
aam
aad
and
stos
lock
out
sar
(bad)
dec
mov
fmul
jmp
sar
sti
in
sti
lock
rol
mov
test
mov
not
ficom
sbb
add
mov
cmps
fwait
dec
xor
ds
enter
pop
push
jmp
(bad)
sub
retf
call
cmps
aas
mov
mov
mov
lea
out
in
push
mov
add
jecxz
mov
mov
bound
adc
arpl
xlat
add
inc
ret
lds
call
aas
mov
test
mov
add
jno
xchg
dec
dec
pop
nop
addr16
mov
or
cmc
sbb
mov
mov
mov
add
push
(bad)
xchg
je
add
shl
icebp
fcmovnb
mov
xor
(bad)
icebp
pop
and
out
mov
pushf
(bad)
jb
mov
jmp
lahf
mov
dec
pop
iret
adc
dec
sbb
or
add
dec
push
mov
adc
mov
stc
fmul
outs
mov
hlt
jno
dec
pop
popf
ret
sar
inc
mov
xchg
pop
dec
jb
and
bound
call
or
mov
scas
dec
mov
in
and
ret
mov
add
mov
cmps
cmps
sub
xlat
test
mov
xchg
pop
test
inc
(bad)
dec
mov
aas
cmp
cmp
je
sub
dec
aaa
sbb
(bad)
sub
sub
mov
out
or
xchg
jp
repz
ret
pop
int
test
sahf
pop
mov
push
mov
repz
jl
jg
mov
mov
dec
add
sub
(bad)
test
retf
and
mov
les
leave
cmp
cmp
aaa
sti
push
(bad)
lea
xchg
cmp
inc
mov
xchg
test
lahf
pop
aad
and
mov
or
fwait
cmp
inc
mov
dec
lea
mov
xor
jl
adc
outs
mov
test
mov
out
pop
xchg
mov
or
xchg
imul
movs
mov
cmps
inc
mov
cmp
fild
add
ins
or
(bad)
fld
cli
je
sbb
mov
jae
jmp
dec
pop
dec
icebp
ss
bound
rcr
stos
pushf
sbb
fdivr
dec
out
mov
aad
test
mov
fcom
pop
add
pop
push
and
mov
das
dec
mov
push
rcl
sbb
xor
mov
daa
push
add
mov
es
inc
in
xchg
jbe
repz
es
inc
push
sub
in
sbb
(bad)
jnp
or
pop
popf
stos
push
mov
dec
push
inc
jp
fadd
xchg
or
mov
push
cli
clc
xchg
js
shr
push
mov
jle
daa
das
mov
add
in
and
mov
push
jge
sti
mov
mov
popf
adc
int
test
out
stos
rcl
dec
cmp
xlat
test
cwde
xor
movs
cli
mov
rol
or
jecxz
xchg
jne
jmp
inc
add
scas
xor
(bad)
sub
jns
mov
(bad)
adc
pop
mov
jle
xor
loop
mov
xchg
cmp
mov
imul
mov
dec
stc
mov
out
adc
loopne
jmp
add
(bad)
out
mov
mov
iret
pop
push
pop
or
movs
addr16
dec
xor
nop
dec
mov
mov
jmp
xchg
mov
adc
ja
inc
push
daa
cwde
enter
cmp
sub
jbe
fild
xor
popa
jb
inc
not
mov
ret
ins
adc
loope
cmp
dec
jnp
push
rcl
scas
ret
push
adc
ins
mov
ins
or
stc
std
data16
jnp
jmp
repnz
ss
popa
dec
das
cdq
ret
pusha
loop
mov
push
xchg
inc
cmp
scas
popa
push
shr
ret
or
aaa
shr
mov
neg
sub
adc
jo
cld
jns
lods
cmp
rol
lods
mov
push
pop
std
and
mov
in
xor
push
inc
xchg
inc
xor
not
jno
jmp
dec
popa
nop
cmps
pop
pop
mov
mov
std
aas
fs
test
xor
fdiv
sar
scas
cwde
aad
les
or
iret
jnp
les
xchg
mov
jae
dec
mov
mov
out
cmp
ficom
mov
ins
leave
cmp
xchg
add
push
jg
ds
inc
add
es
sub
pop
jmp
test
sahf
xchg
out
cmp
call
scas
test
adc
jns
ins
sbb
inc
push
lods
fadd
push
aas
outs
or
push
dec
inc
clc
pop
aas
pop
js
fistp
push
inc
push
call
cmc
leave
pop
jecxz
ds
stos
push
ss
mov
fstp
adc
pusha
and
ret
lea
fstp
retf
mov
fstp
xlat
pop
dec
sbb
hlt
div
fnstsw
sub
je
pop
cmp
jnp
test
or
fbld
fwait
(bad)
sbb
popa
cmp
call
shl
add
inc
mov
les
inc
sbb
sbb
mov
fisttp
fisttp
retf
sbb
test
ins
js
cmc
dec
addr16
jns
jo
mov
xor
pop
in
sub
out
ja
lea
repz
xchg
mov
sub
retf
pop
xor
push
cmp
push
jne
jmp
xor
ret
stos
or
lods
mov
sub
xor
loop
lds
cmps
jle
ja
lods
les
push
and
call
mov
xchg
clc
fld
shr
icebp
shl
pop
inc
imul
push
rol
pop
push
rcr
push
pop
lea
dec
imul
sahf
cmp
imul
cmp
inc
popa
xchg
(bad)
enter
stc
(bad)
mov
ficom
pop
pop
arpl
hlt
add
stos
iret
mov
hlt
cmp
jnp
in
icebp
sbb
inc
cwde
repz
mov
cmps
push
mov
jge
shl
pop
fdivrp
and
jno
repnz
jmp
and
jo
pop
hlt
(bad)
stc
retf
iret
mov
inc
adc
leave
(bad)
inc
xor
or
pop
pop
push
(bad)
jl
das
xchg
and
lds
jmp
call
cmp
mov
dec
int
(bad)
call
repnz
mov
cmp
sbb
mov
(bad)
retf
ss
sbb
cli
sar
aad
add
cdq
mov
enter
pop
xchg
sbb
sbb
mov
jmp
arpl
push
adc
push
push
outs
loop
push
popf
int3
cmps
int3
xchg
mov
std
aas
dec
jmp
addr16
int3
aad
jmp
pop
pop
popf
cmp
imul
adc
push
loope
mov
add
retf
add
cmps
(bad)
jmp
xadd
pop
mov
push
add
and
sar
jns
fst
ins
sbb
sub
aas
mov
adc
mov
fisttp
ftst
out
jmp
ret
ins
out
in
in
aam
sbb
dec
xor
fucomi
loop
dec
repz
fs
dec
and
ret
imul
push
jge
dec
fs
neg
aas
in
fdivp
mov
loopne
in
pop
(bad)
mov
mov
dec
daa
icebp
nop
adc
shr
int3
clc
fs
push
(bad)
in
inc
cld
mov
test
xchg
neg
jmp
rol
jp
sti
dec
popa
jo
cmp
pop
cmps
cmp
xchg
ficomp
inc
mov
inc
mov
jecxz
aas
cmp
inc
dec
adc
out
fstp
mov
(bad)
in
test
dec
xor
mov
xchg
inc
jmp
xor
push
out
ins
inc
sub
dec
(bad)
retf
xor
es
and
call
ret
or
test
mov
addr16
test
mov
inc
adc
pushf
inc
loope
in
mov
iret
nop
out
gs
out
push
bound
test
pop
and
xchg
jle
mov
mov
dec
(bad)
popa
retf
imul
mov
mov
mov
ror
jmp
add
xor
jbe
jae
push
data16
mov
rcl
pop
jmp
retf
in
mov
dec
sub
mov
test
cmc
cmp
adc
gs
out
adc
sub
xor
xchg
push
scas
mov
and
push
or
xchg
dec
or
rcr
call
cdq
inc
imul
repnz
repz
hlt
mov
push
add
cwde
or
mov
test
push
clc
movs
fs
or
and
jp
sbb
in
lds
inc
pop
clc
jns
push
cld
iret
adc
jmp
cli
cli
call
cld
ror
sub
xchg
es
ins
xrelease
in
retf
bound
or
cmp
push
pop
movs
(bad)
outs
bound
mov
sbb
jp
push
call
xchg
mov
mov
into
sub
movs
or
nop
cdq
(bad)
sti
mov
int3
push
mov
pop
cmp
jbe
movs
(bad)
imul
test
js
push
(bad)
pop
jno
sbb
push
push
aaa
cmp
lock
pop
cmp
xchg
inc
dec
fs
hlt
fs
mov
add
dec
pushf
paddsw
xchg
jb
das
mov
inc
std
fucom
cld
stos
movs
adc
dec
cdq
inc
or
ja
scas
nop
idiv
shl
daa
mov
inc
push
dec
pop
dec
ss
pop
pusha
xchg
jmp
or
movs
pop
jmp
int3
pop
ins
push
xor
in
jne
sbb
and
pop
xor
push
ret
inc
sti
in
ins
stc
ins
aam
mov
iret
and
ret
sbb
in
popa
loopne
mov
mov
mov
cmp
jae
bound
and
(bad)
popa
ror
clc
xor
xchg
(bad)
test
push
daa
sar
pop
(bad)
repnz
test
sbb
jg
jae
mov
jb
ror
pmaddwd
pop
(bad)
retf
stos
movlps
std
(bad)
int
clc
and
into
sti
pop
ja
stos
sub
imul
cdq
push
sub
mov
lods
(bad)
xor
int3
ss
dec
outs
movs
scas
movs
out
gs
or
xchg
inc
sbb
mov
or
sub
jno
jbe
mov
mov
dec
icebp
fidiv
jnp
test
dec
cli
fidivr
or
shl
push
xor
adc
(bad)
and
enter
xchg
hlt
clc
in
mov
pop
push
idiv
call
rcr
adc
inc
push
dec
ror
push
push
mov
and
and
mov
xor
sub
ja
jecxz
mov
ins
(bad)
daa
int3
(bad)
pop
jo
test
add
into
retf
mov
rol
sbb
push
and
inc
jne
mov
jnp
sub
jmp
adc
inc
int
dec
mov
jb
bswap
ja
cmp
dec
mov
test
in
paddq
jns
or
add
je
inc
sbb
mov
mov
and
mov
jne
pop
in
hlt
jnp
popa
add
frstor
dec
jmp
jmp
add
repnz
pop
lds
jl
stos
dec
movs
adc
mov
ins
jl
and
or
jge
out
mov
ja
push
daa
push
cli
pusha
sbb
ja
sbb
imul
(bad)
cmp
bound
or
fmul
into
mov
(bad)
mov
imul
inc
aad
(bad)
hlt
jecxz
sti
pop
jae
mov
fist
icebp
jb
out
cmp
push
push
sbb
jecxz
les
add
mov
or
xor
inc
fcmovbe
in
daa
or
xchg
xchg
pusha
mov
pop
nop
mov
out
jae
fstp
mov
pop
(bad)
mov
retf
and
out
xchg
out
(bad)
rcl
add
test
push
mov
stos
out
adc
pop
xor
test
scas
out
add
xchg
stos
and
loop
sub
imul
outs
cmovs
fistp
mov
sub
sub
inc
popa
cmps
adc
popa
dec
and
cmp
inc
(bad)
call
lods
add
jmp
adc
inc
or
jmp
jb
inc
in
xor
fild
mov
fisub
pop
arpl
fldenv
and
xchg
sbb
sbb
sbb
sub
xchg
retf
in
imul
pop
sub
mov
stos
jb
sub
and
or
push
sub
push
xadd
aad
imul
imul
leave
sbb
sbb
xchg
dec
inc
retf
out
dec
mov
cmp
repnz
dec
fidivr
mov
fmul
pusha
and
inc
xor
test
cmps
rcr
sub
sbb
mov
(bad)
cmp
mov
push
xchg
test
movs
dec
popf
scas
fild
push
neg
push
test
sbb
push
outs
cmps
or
arpl
outs
cmp
test
scas
jmp
cmps
jne
jmp
repz
fs
fist
push
pop
push
xchg
dec
js
lods
(bad)
lods
clc
std
leave
adc
inc
jecxz
dec
loopne
sar
popa
cmc
jp
add
jns
push
mov
xchg
imul
enter
outs
test
mov
xchg
fadd
pop
push
gs
pop
pop
jnp
fcos
ss
xchg
inc
sti
cmp
inc
das
shl
xor
sbb
inc
sub
mov
pop
pop
and
addr16
ins
jmp
xlat
jo
std
popa
xchg
cwde
fldcw
jno
pop
adc
xor
in
(bad)
(bad)
and
push
aam
test
sub
mov
and
and
hlt
sub
jns
or
dec
retf
mov
retf
and
and
or
sbb
(bad)
lods
cs
out
ret
stos
xor
sbb
not
cdq
xor
out
cmp
push
xor
push
inc
icebp
pop
adc
std
xchg
loopne
loope
aam
jg
adc
adc
test
icebp
cli
and
mov
cli
xlat
out
cwde
pop
add
push
ins
nop
lods
sbb
push
nop
add
adc
dec
sti
sbb
scas
adc
jl
ins
fst
mov
mov
stos
cmp
sbb
pop
and
add
xor
xor
push
jb
mov
push
test
sbb
cmp
adc
cmc
or
add
mov
je
das
les
pop
add
cmp
sub
cmps
xor
out
jnp
aaa
and
pop
(bad)
test
stc
xor
je
int
or
in
bound
jno
dec
movs
shl
pop
pop
push
jecxz
add
cmps
jno
push
repnz
xchg
and
cs
xchg
dec
sbb
sub
push
fimul
mov
mov
add
jne
mov
mov
push
add
addr16
int3
aad
add
add
pop
sub
jne
adc
ja
pop
das
sbb
cmp
sub
fisub
test
imul
cwde
push
rcl
or
dec
in
ins
mov
pop
mov
lea
shl
push
mov
inc
cdq
int
lods
push
jno
jmp
int
repnz
sbb
cmp
cs
or
mov
loopne
sub
test
clc
div
jne
daa
adc
cdq
pop
sti
fld
(bad)
mov
out
adc
jno
add
push
pusha
loopne
test
add
xor
jle
mov
xlat
push
push
fmul
mov
out
or
mov
add
cmps
adc
sti
pop
adc
(bad)
push
mov
pop
pop
ins
pushf
jp
dec
add
fisub
fstp
or
xchg
mov
pop
push
or
aad
imul
(bad)
jo
mov
in
(bad)
loop
addr16
neg
xor
sbb
push
cmps
shr
push
bound
sbb
xor
xor
jmp
cmps
jns
push
aaa
xchg
loopne
mov
addr16
jb
or
push
aam
cmp
cmps
adc
push
popa
jne
sub
xor
repnz
lock
(bad)
cmp
adc
fidiv
xchg
mov
icebp
imul
cmp
sbb
push
aam
ins
or
sbb
int
std
mov
mov
push
into
push
in
sbb
cmps
dec
stc
out
ja
sub
rol
cwde
shl
je
pop
and
pop
cmp
xlat
xchg
adc
retf
push
lods
sbb
ds
jmp
xchg
inc
jb
and
pop
loopne
cmp
sbb
push
jle
imul
cmp
scas
lock
js
in
xor
adc
xchg
push
cmp
mov
arpl
push
pop
and
pop
adc
pop
and
pop
push
inc
push
imul
push
popf
adc
sub
loopne
mov
cmp
inc
pop
jno
ins
sub
and
icebp
mov
lock
cmp
dec
add
ret
jg
dec
adc
push
and
adc
mov
movs
pop
sub
jo
out
add
xor
ret
mov
xor
cmp
cmp
aas
sub
xlat
repz
ins
jns
xchg
arpl
scas
ja
pop
aaa
js
mov
sbb
cdq
mov
push
shl
cmp
outs
jbe
cmp
pop
fsub
mov
push
sbb
mov
jmp
sub
xlat
idiv
out
arpl
repnz
add
(bad)
mov
push
pop
mov
loop
js
dec
mov
push
aas
pop
push
popf
inc
cmp
cwde
mov
mov
stc
into
leavew
scas
push
mov
inc
fwait
or
arpl
cmovns
jmp
dec
and
push
sbb
mov
aad
push
dec
test
sub
sbb
pusha
or
cmps
and
push
retf
or
mov
in
mov
cmp
fwait
or
ficomp
mov
lahf
sbb
jnp
gs
ins
adc
pusha
(bad)
fs
sahf
imul
xchg
out
mov
mov
test
test
inc
pop
lods
das
fist
sub
ret
and
cmp
ins
add
rcl
mov
out
mov
jns
dec
jp
xor
sub
popf
stc
jg
cwde
xchg
nop
test
add
out
jle
xor
xchg
fisub
mov
fsubr
repnz
sub
arpl
rcl
or
test
sub
das
shr
js
push
jecxz
jno
and
dec
fisubr
pop
(bad)
in
push
xor
or
lahf
jmp
(bad)
shl
lds
int
retf
ror
inc
out
mov
and
(bad)
movs
in
ins
addr16
pusha
mov
call
aas
push
jl
test
xor
jl
dec
push
fs
pop
mov
adc
or
dec
(bad)
cs
iret
lds
mov
cmps
retf
les
adc
scas
jno
dec
jnp
lea
(bad)
aad
mov
mov
inc
icebp
aam
mov
bound
fbld
addr16
push
cmp
arpl
cmp
clc
jmp
(bad)
push
test
mov
mov
mov
push
sti
dec
dec
jl
cmc
push
and
out
sbb
ss
sub
xchg
sbb
rcr
or
outs
inc
ins
xor
adc
(bad)
aaa
mov
xor
je
mul
cli
repz
jmp
out
adc
ja
jbe
leave
cdq
xor
in
lods
inc
jno
aad
in
mov
js
test
int3
popf
in
cld
add
out
xor
sub
xor
xchg
push
pop
shl
push
cmp
imul
loop
push
pop
mov
xchg
gs
mov
mov
cmp
or
mov
push
stc
ds
sub
addr16
pop
out
adc
sbb
outs
push
enter
adc
lds
mov
pop
pusha
or
int3
cmc
out
cs
mov
xor
adc
cld
xchg
lods
mov
and
out
xchg
inc
dec
add
jg
in
mov
je
outs
dec
rcl
in
ret
mov
ficom
in
mov
call
ins
sub
mov
cs
int3
fisub
dec
push
clc
dec
inc
and
test
inc
sbb
jge
or
sar
jmp
stc
push
dec
and
mov
cmp
cmc
or
pop
cmp
inc
mov
enter
cmp
cld
mov
lock
sbb
xchg
in
ins
icebp
jnp
push
out
fidivr
xchg
jmp
imul
push
add
jne
add
je
imul
mov
ret
icebp
call
icebp
push
mov
in
out
add
das
add
mov
cmp
jge
xchg
mov
sbb
xor
cmps
xor
test
aam
xchg
(bad)
es
pop
mov
iret
ret
dec
cmc
jb
aaa
out
mov
idiv
inc
(bad)
and
mov
test
iret
mov
and
inc
or
jge
(bad)
js
(bad)
nop
aas
xchg
adc
push
loop
push
sbb
pop
(bad)
scas
ins
lods
inc
fstp
(bad)
retf
shl
cmp
xchg
(bad)
imul
jbe
nop
cmp
mov
pop
jae
inc
in
pop
sbb
xor
bound
and
mov
or
sahf
aaa
les
shl
scas
xor
push
cmp
push
mov
movs
inc
inc
mov
out
mov
mov
xor
cmps
es
std
and
add
and
dec
cld
xchg
cmp
test
popa
pop
xor
nop
pusha
pop
pushf
(bad)
jl
add
les
cmp
inc
jecxz
mov
div
call
mov
mov
jb
xor
or
sub
cmp
or
inc
and
shl
push
das
shl
addr16
push
cdq
and
repz
pop
repnz
test
cmp
pop
ds
jmp
sub
inc
adc
repz
push
fs
fnstenv
adc
stc
mov
outs
das
stos
xchg
test
cmp
mov
jnp
cmp
jmp
xor
jnp
test
lds
or
and
push
lahf
push
es
sub
push
sahf
outs
lock
in
mov
pop
sub
cs
or
cli
in
imul
bound
ins
mov
in
xchg
inc
data16
retf
je
(bad)
add
sub
mov
cwde
popf
jb
adc
rcl
stos
fld
push
loope
mov
retf
sbb
and
inc
iret
shl
imul
jb
leave
shld
call
sub
pop
mov
sbb
fisttp
push
fst
mov
add
add
mov
inc
out
ror
int
stos
call
xor
js
stc
mov
pop
mov
xlat
jmp
cmp
shl
add
inc
push
pop
shr
fild
scas
cmps
gs
pop
ss
movs
inc
pop
repnz
arpl
lds
into
dec
icebp
mov
mov
pusha
es
pusha
arpl
movs
mov
cdq
bound
retf
data16
add
add
imul
inc
and
add
lods
or
in
xor
mov
lea
mov
push
scas
inc
jae
and
push
fisttp
mov
and
out
pop
addr16
fistp
xchg
gs
mov
cdq
jl
jns
test
repnz
mov
or
and
enter
int3
sahf
jp
mov
or
xchg
fsubr
mov
imul
imul
aaa
pop
out
imul
aas
cmp
arpl
and
mov
int3
call
cmp
out
xchg
mov
mov
add
fisubr
push
lock
repnz
pushf
push
pusha
mov
stos
fs
pop
ins
loope
push
push
and
mov
ins
mov
js
xchg
mov
cmp
pop
fwait
lds
(bad)
jge
inc
call
xor
mov
cmp
sbb
sub
aad
retf
and
out
jecxz
xor
(bad)
mov
das
mov
in
imul
add
sbb
jg
jp
xchg
jg
or
loop
cld
push
sbb
pop
hlt
jnp
jmp
out
imul
push
and
xchg
inc
sar
ins
and
sbb
cmp
(bad)
(bad)
out
clc
test
imul
loop
add
fld
loopne
mov
push
inc
push
fidivr
sti
add
xchg
or
sub
pop
enter
cmps
test
adc
dec
adc
adc
mov
dec
gs
fs
lock
rcl
ins
cmp
pop
outs
loop
retf
pop
adc
mov
ficomp
push
out
or
sub
ret
scas
add
jno
ins
inc
fs
aad
mov
les
dec
push
dec
mov
or
dec
es
push
adc
mov
das
fsubr
mov
sub
aaa
(bad)
push
mov
sub
jmp
and
cmp
sub
aaa
adc
pop
add
pop
pop
xchg
aas
and
inc
(bad)
mov
fcmovnbe
push
aad
aas
js
ss
sbb
pop
jge
retf
push
inc
stos
imul
repz
shr
pop
mov
push
enter
loopne
test
sub
gs
push
or
mov
inc
xlat
sbb
mov
clc
and
leave
dec
ja
call
in
xchg
push
pcmpeqd
test
xor
sbb
xchg
out
fwait
test
or
jo
mov
jae
adc
das
add
push
scas
dec
sub
xchg
stc
aaa
movs
fadd
mov
into
mov
sub
cmp
xor
inc
or
push
pop
mov
add
enter
push
jo
ins
xor
cwde
or
sbb
stc
mov
xor
scas
or
aas
das
stc
add
mov
call
sub
xchg
inc
sbb
pop
sub
out
mov
lahf
sbb
sbb
push
cdq
loopne
inc
push
jne
fbld
popa
xlat
imul
or
or
daa
neg
mul
das
movs
jmp
add
int3
bound
xchg
nop
cmps
cmp
icebp
(bad)
fmul
loope
inc
mov
bound
cmps
mov
cwde
xchg
adc
cmc
lds
cmp
nop
int
test
xchg
xchg
std
mov
int
loope
add
lods
rcr
xor
dec
inc
stc
xor
cmc
lods
mov
mov
stos
cmps
pop
cmc
mov
leave
sub
sbb
cs
fs
mov
je
xchg
pop
and
pusha
mov
xchg
lock
jns
inc
idiv
pop
mov
and
add
cmp
push
inc
add
jge
aam
push
test
dec
mov
sbb
mov
movs
push
jmp
call
sub
out
in
retf
test
mov
mov
out
fcom
lds
ss
jmp
std
jo
xchg
outs
sar
mov
lds
mov
fild
or
sbb
ret
sub
ins
add
fs
jmp
fistp
lds
jl
push
pop
xchg
mov
mov
xchg
jne
inc
scas
jmp
ins
sub
push
xor
inc
add
and
loope
or
dec
stc
js
rcr
pop
(bad)
jno
xchg
sbb
dec
(bad)
mov
jecxz
pop
pushf
sbb
stc
push
test
push
lea
lahf
add
jl
mul
nop
jb
push
in
jns
scas
loopne
sub
adc
mov
aaa
adc
pushf
lahf
push
fist
shl
out
les
aad
add
movs
lods
add
ins
push
jno
call
cwde
and
lsl
repnz
fld
jp
imul
pop
fdivr
adc
mov
fs
lods
imul
dec
jle
gs
ds
push
mov
cmp
and
mov
mov
inc
call
cld
push
push
(bad)
repz
sbb
scas
adc
mov
int3
mov
add
mov
adc
mov
inc
mov
jge
and
(bad)
dec
xor
xor
mov
pusha
push
xor
cdq
mov
mov
add
and
sbb
(bad)
jb
jnp
jge
imul
sub
shufps
int3
add
and
and
fsubr
ins
popa
ja
das
xor
xchg
push
mov
jno
into
add
mov
jo
sbb
jns
or
adc
jb
lods
push
popf
dec
mov
aas
push
int
scas
push
das
pop
scas
pop
mov
cmps
mov
xor
fmul
add
dec
sub
leave
push
test
or
pop
iret
adc
fwait
ins
scas
xlat
loopne
xor
ins
sub
ror
aaa
jne
adc
cmp
inc
or
cs
(bad)
repz
jg
push
sahf
and
push
fcomi
mov
dec
iretw
hlt
into
jp
pop
scas
push
xor
fisub
pushf
push
inc
lods
je
pop
sahf
pop
cmc
popa
nop
or
cmp
adc
or
mov
adc
mov
jle
lods
repz
das
jecxz
dec
push
xchg
push
push
sbb
adc
sahf
test
cwde
in
xchg
dec
cmc
dec
stc
jb
sti
lods
jbe
ds
in
gs
pop
add
in
or
mov
(bad)
jp
int3
pop
addr16
in
ret
popf
and
push
shl
fist
and
je
int
xchg
xchg
dec
into
rcr
push
mov
mov
pop
dec
dec
inc
imul
out
jp
cmps
adc
push
mov
ins
in
loope
fnsave
jo
sub
pushf
dec
jnp
dec
inc
push
outs
mov
outs
pop
aas
enter
and
mov
xor
cmp
mov
int3
aas
pop
cli
mov
sub
jne
shl
repnz
xchg
ret
ins
xchg
push
and
cld
cdq
test
jo
push
retf
pop
scas
inc
retf
movs
mov
mov
xor
call
or
je
sbb
push
mov
sub
xor
jge
mov
fldcw
ins
push
sar
ret
jge
pop
push
aas
test
mov
(bad)
push
fadd
pop
sbb
mov
int
mov
jns
mov
jo
stos
dec
dec
lock
push
xchg
fucom
test
test
fisttp
cdq
jmp
jb
stc
xor
ret
xor
out
cmp
push
pop
aam
jno
pop
cmp
jo
mov
jmp
cmp
xchg
nop
mov
pop
ja
jl
inc
cmp
adc
or
sub
outs
xchg
and
icebp
mov
sbb
adc
aaa
daa
adc
dec
push
shl
ins
test
mov
jge
and
sbb
stos
jae
cmp
sbb
pusha
(bad)
lds
mov
outs
xchg
movs
jmp
adc
sbb
jbe
inc
xor
outs
stos
jbe
leave
popa
mov
mov
xchg
inc
aaa
sub
dec
mov
mov
int
out
stos
bswap
push
mov
mov
push
add
das
inc
hlt
or
sub
imul
(bad)
retf
or
fcom
fcmovb
outs
xchg
je
inc
xchg
adc
dec
test
ror
mov
ins
jns
lods
push
fsubr
sbb
push
sub
or
sub
sbb
pop
push
fcmovnb
mov
call
adc
fisttp
dec
hlt
arpl
mov
jge
daa
pop
stc
ja
pushf
shr
adc
mov
push
mov
xor
out
lods
int3
mov
xor
inc
(bad)
jl
fwait
jg
aad
push
je
or
iret
mov
dec
ja
bound
fidivr
rcr
push
xor
clc
ja
bound
lea
loopne
cmp
rcl
jp
loope
push
push
xor
or
mov
adc
out
repnz
ret
or
vpmacssdql
fs
sub
cmc
ja
or
adc
dec
sbb
xchg
jbe
pop
xchg
jp
rcl
push
sub
mov
and
fstp
ret
imul
out
xor
xor
scas
inc
ins
xor
hlt
push
imul
jmp
sbb
test
adc
outs
nop
pop
pop
lahf
mov
inc
dec
leave
jbe
arpl
popf
out
cs
scas
not
add
icebp
outs
sbb
xor
jnp
(bad)
mov
pop
test
test
aad
ins
mov
movs
iret
pop
pop
add
mov
sub
fisttp
xor
lahf
lea
bound
pop
and
and
and
shl
add
js
imul
mov
stc
xchg
das
repz
xchg
test
(bad)
fldcw
fisubr
sbb
jns
push
cwde
mov
sbb
mov
stos
jno
mov
lahf
outs
(bad)
ins
sar
sub
push
jnp
es
inc
mov
push
push
adc
call
pop
jp
cmps
pop
jae
xor
lods
push
retf
jnp
aad
daa
out
aad
(bad)
mov
mov
lock
out
mov
and
pop
ins
mov
jnp
call
or
outs
sti
cmps
shl
iret
scas
or
inc
inc
cmp
dec
ret
mov
adc
fst
adc
hlt
cdq
inc
rcl
(bad)
mov
out
fbld
je
xor
push
dec
ret
adc
mov
ret
lock
or
aad
das
xor
jns
jmp
sub
fcomp
push
rcr
mov
scas
push
(bad)
pop
stos
in
adc
sar
fidivr
fst
and
sub
adc
cmps
xor
jmp
std
xor
xor
loopne
or
cmp
inc
mov
inc
mov
push
ins
shr
shl
xor
or
pop
adc
sbb
push
sub
in
xchg
not
fdiv
inc
mov
mov
sub
cmp
push
cmps
dec
int
jp
outs
cli
pop
(bad)
rcl
adc
mov
sti
push
xlat
movs
push
or
ror
inc
pusha
fdivr
dec
popa
cwde
retf
and
fisub
xor
cli
pop
jmp
int
addr16
jo
dec
retf
xchg
outs
jnp
xchg
aaa
dec
xchg
rcl
xchg
xor
scas
and
xor
sub
xchg
xchg
pop
call
rcr
cli
imul
and
cs
jbe
jae
out
mov
nop
push
stc
pop
adc
cmp
and
pop
sub
mov
or
ror
cmps
xchg
loop
ror
sti
jbe
inc
(bad)
shl
sbb
mov
inc
mov
or
scas
mov
pushf
ins
sbb
stos
daa
movs
jmp
sbb
or
in
or
out
mov
sbb
mov
jle
push
dec
adc
xchg
out
fcmove
popa
(bad)
xor
and
lods
xchg
shl
ins
dec
mov
sbb
add
not
fwait
add
test
outs
dec
popa
int3
fcomp
std
mov
inc
je
push
aad
daa
movs
cmc
pop
sub
ficom
cwde
sbb
leave
xor
push
or
xchg
pop
stos
jp
add
imul
lods
jb
or
push
add
jns
cmps
loope
sbb
and
push
cwde
scas
mov
ret
inc
mov
push
mov
aad
jnp
mov
push
and
outs
add
sahf
cdq
or
loop
cmps
int3
sbb
bound
pop
mov
ins
in
mov
push
and
sub
call
mov
or
sub
pop
shl
(bad)
adc
jecxz
mov
mov
mov
inc
and
inc
mov
jmp
push
cs
mov
dec
dec
cmc
(bad)
cmp
cmp
jo
repz
mov
clc
test
ret
mov
sahf
adc
clc
call
jbe
sub
jmp
lods
jle
sbb
add
jmp
loope
mov
(bad)
dec
mov
inc
jo
out
pushf
repz
imul
fadd
add
cmp
cmp
fldenv
lock
scas
and
mov
in
mov
(bad)
stc
dec
jmp
in
(bad)
mov
add
in
pop
sti
ret
sub
les
fisubr
test
sub
lea
hlt
mov
cld
and
mov
cmc
arpl
sbb
or
adc
mov
xchg
cwde
mov
movs
and
push
xlat
jbe
call
mov
sub
sbb
gs
xor
xchg
sub
pop
mov
scas
(bad)
mov
pop
fsubrp
std
into
mov
jne
js
jae
jecxz
test
movs
xchg
mov
pusha
jns
imul
sub
or
jno
retf
xor
dec
icebp
lea
dec
pop
adc
mov
push
cmp
push
xchg
push
dec
cmps
pop
inc
sub
push
adc
sahf
sahf
inc
(bad)
xor
adc
scas
cmc
dec
jnp
lahf
mov
movs
pop
pop
xor
stc
outs
arpl
cmp
inc
test
push
sbb
inc
sub
mov
cdq
sbb
fucomip
popf
add
pop
adc
retf
inc
add
into
cld
int3
into
or
push
outs
mov
(bad)
jl
fcompp
(bad)
sbb
xchg
add
push
(bad)
cwde
sub
in
retf
mov
mov
jno
and
outs
mov
or
cmp
cmp
sub
mov
inc
cmp
sub
add
pxor
and
fdiv
fadd
pop
rcl
mov
fsubr
ins
or
and
mov
inc
or
leave
ss
sbb
mov
in
mov
pop
cli
mov
lds
jge
ss
xlat
mov
mov
cmc
or
and
aas
out
mov
cmp
add
sub
jno
(bad)
repnz
sar
and
xor
(bad)
aam
ret
arpl
(bad)
scas
adc
sbb
xlat
test
inc
js
adc
arpl
je
out
stc
pop
outs
mov
jge
dec
sub
or
sbb
pop
xor
not
mov
idiv
push
push
(bad)
jmp
mov
outs
int3
popf
mov
into
xor
cmp
mov
push
xchg
sub
cmp
rol
fstp
add
or
mov
inc
cmp
cmps
iret
inc
jae
clc
inc
popa
sbb
es
popf
mov
pop
fmulp
test
fucomi
push
mov
sbb
xor
mov
js
adc
iret
xchg
mov
lock
(bad)
stos
jnp
mov
inc
jge
mov
retf
shl
add
jmp
psubsb
cld
test
sub
add
(bad)
mov
pop
mov
sbb
jo
xchg
cwde
adc
lea
cmps
cmp
(bad)
imul
inc
(bad)
addr16
hlt
test
imul
test
movs
push
xchg
add
mov
jmp
ret
nop
int3
and
cli
popa
movs
adc
xor
or
inc
adc
dec
xchg
retf
ret
les
dec
xchg
int
add
inc
sub
sbb
pop
or
test
outs
movs
xor
hlt
clc
imul
pop
xor
xchg
fdivr
call
mov
lahf
lods
out
sbb
test
sub
mov
in
sbb
jl
aaa
lea
cwde
xchg
fnstsw
cmp
sti
mov
popf
loopne
ja
sub
jbe
push
imul
pop
inc
scas
pop
inc
pop
push
sub
fisub
test
popa
sbb
imul
mov
inc
in
dec
inc
in
aaa
int3
ficom
xor
mov
call
mov
inc
(bad)
sub
mov
sub
push
pop
cmp
imul
push
push
mov
mov
mov
loope
mov
pop
push
shl
iret
outs
popf
pop
cmp
(bad)
cwde
out
push
imul
pushf
cmps
ret
inc
add
sbb
sbb
mov
hlt
pop
adc
add
cwde
mov
sbb
inc
in
retf
mov
mov
jo
pop
lea
ret
inc
movs
aas
push
push
mov
out
aaa
xchg
dec
cmp
adc
mov
push
mov
movs
xchg
out
fiadd
test
cmc
xchg
fist
adc
sbb
mov
cmps
sub
sbb
(bad)
sbb
pop
dec
push
imul
inc
mov
(bad)
pop
pop
pop
mov
shl
cmp
dec
inc
mov
sbb
or
cmps
jecxz
mov
mov
cmp
mov
cli
dec
cmp
jmp
dec
pushf
and
push
sar
jb
mov
mov
jecxz
retf
jnp
pop
mov
call
cmps
sub
int
or
(bad)
cld
bound
jp
leave
adc
sbb
sar
add
inc
sbb
add
imul
or
xchg
jle
adc
sbb
pop
push
push
ins
inc
inc
dec
fist
cdq
fstp
xchg
lods
mov
and
jbe
out
and
xchg
sub
nop
xchg
and
call
push
data16
pop
inc
add
lods
ret
xor
in
int3
and
add
adc
aad
bound
scas
sub
daa
pop
xchg
pop
mov
ins
outs
mov
arpl
fwait
push
add
fcomp
mov
mov
addr16
adc
mov
movs
ins
rol
stos
test
sbb
adc
cs
(bad)
mov
adc
cmp
or
mov
fisttp
icebp
sbb
aaa
ffreep
cmp
and
shr
xchg
xchg
sub
and
push
retf
outs
adc
pop
cmp
fdivp
cmp
mov
cs
cld
addr16
jae
jo
mov
xor
ins
mov
pop
in
out
cmps
hlt
imul
mov
popa
cmps
dec
jno
push
repz
scas
leave
pop
xchg
enter
sbb
lods
jmp
dec
es
clc
ins
mov
push
ret
(bad)
mov
ret
scas
fidiv
cmp
and
add
jp
stc
dec
or
icebp
mov
out
mov
(bad)
cmp
adc
mov
outs
pop
mov
retf
imul
ds
sbb
adc
shl
mov
inc
push
pop
jecxz
cli
dec
mov
in
rcr
pusha
in
out
mov
add
icebp
push
sti
xchg
mov
fistp
sbb
arpl
test
outs
cld
add
mov
ror
mov
or
out
sub
xchg
pop
cdq
scas
rcl
into
scas
aas
and
inc
push
in
push
ja
bound
popf
mov
psubsw
sbb
pop
lods
loop
test
or
movs
sub
fsub
(bad)
sub
jle
repz
mov
jecxz
push
int3
mov
mov
adc
jp
push
aas
jns
into
pop
fcomp
and
and
ficom
xchg
pop
mov
cmc
repnz
popf
mov
dec
cs
stc
jp
lds
jne
add
adc
es
or
add
ret
gs
ds
jg
cmp
retf
shl
sahf
mov
inc
xor
pop
out
sub
in
jne
push
or
sub
jnp
stos
inc
xor
adc
pop
fistp
add
mov
les
and
int3
cmp
movs
jbe
out
iret
mov
adc
sbb
lds
push
jp
test
out
out
sar
inc
js
xor
mov
hlt
pop
sbb
cmps
add
mov
aad
rol
add
jp
lods
jl
dec
enter
adc
and
cmp
sbb
leave
jge
icebp
xor
dec
cmp
pusha
mov
xor
fxch
test
aas
jge
in
mov
inc
fiadd
pop
dec
and
movs
pop
dec
leave
pop
in
fiadd
scas
dec
iret
or
ds
fs
push
jnp
test
cmp
and
mov
and
jo
jmp
out
xor
xor
pop
xchg
cmova
dec
(bad)
fistp
inc
(bad)
cmp
jmp
mov
jno
movs
jl
daa
cmp
dec
inc
outs
mov
(bad)
pop
repnz
int3
aas
in
mov
cmp
or
aas
pop
xchg
sti
ret
repnz
scas
pop
stos
inc
nop
sbb
sbb
nop
sbb
mov
and
sub
mov
push
xchg
sub
jns
out
dec
mov
or
scas
adc
fiadd
sbb
rcr
into
cmp
call
or
fwait
jo
and
mov
sbb
cwde
fs
iret
call
and
push
xchg
xchg
mov
mov
cmp
rol
enter
mov
push
lea
xchg
sbb
movs
mov
movs
pop
outs
jl
repnz
add
ret
push
mov
(bad)
sub
sbb
sbb
hlt
add
and
outs
fcom
(bad)
pop
mov
sbb
or
adc
dec
test
mov
outs
xchg
fmul
and
movs
push
nop
xchg
fst
(bad)
adc
nop
leave
in
xor
lds
test
sub
js
sbb
sahf
jb
adc
sbb
neg
jo
or
jge
hlt
mov
or
gs
dec
jge
popa
dec
sahf
adc
or
cmp
or
loope
lods
lock
loop
jp
mov
xchg
mov
xor
inc
dec
sbb
movs
inc
scas
call
push
push
or
scas
loope
or
add
push
pop
shr
aaa
inc
or
call
mov
movs
xor
cmc
add
hlt
inc
mov
push
sub
xor
pop
es
xchg
cwde
(bad)
movs
pop
stc
cs
jl
sahf
fisub
cmp
loope
mov
xchg
cmp
bound
jnp
repz
inc
adc
out
into
inc
shl
mov
mov
mov
inc
aad
adc
adc
adc
cwde
and
xchg
lahf
addr16
push
mov
jmp
cmps
imul
sar
mov
not
mov
into
dec
jno
add
mov
mov
lods
mov
adc
cmp
add
fdivr
add
pop
sbb
in
cmp
fwait
pop
jno
repnz
jno
jmp
pop
mov
pusha
or
icebp
imul
sbb
xlat
inc
cmp
addr16
stc
cs
sbb
test
stc
mov
das
clc
sub
push
dec
xor
icebp
cmp
stc
mov
inc
mov
lahf
jbe
mov
fisttp
pop
fldcw
fwait
add
pop
add
test
fs
xchg
ins
and
or
adc
adc
popa
mov
pop
arpl
mov
xchg
aas
das
dec
js
mov
(bad)
leave
add
cli
in
pop
les
cdq
sahf
pushf
test
cmps
mov
std
ins
fs
out
out
push
out
std
and
and
repnz
jmp
dec
mov
jns
xchg
ds
jecxz
add
mov
mov
xchg
icebp
cmp
cwde
mov
mov
mov
mov
(bad)
arpl
fs
dec
cmp
out
outs
retf
xlat
dec
ret
push
push
mov
in
xchg
sbb
cmp
stos
mov
jmp
sub
dec
inc
and
les
pushf
sti
(bad)
loop
repnz
dec
sub
mov
aaa
mov
in
(bad)
aam
mov
and
and
push
adc
cmps
mov
movs
out
xchg
dec
bound
rep
jecxz
jle
add
(bad)
imul
js
fnstenv
in
arpl
inc
or
icebp
retf
ret
dec
mov
rol
movs
inc
add
pop
into
push
jno
pop
jns
(bad)
adc
or
enter
jns
add
pushf
mov
push
sbb
ret
ins
aas
in
push
out
adc
push
stos
push
cmp
pop
repnz
enter
adc
lods
daa
hlt
dec
jb
or
or
mov
inc
jl
scas
clc
mov
and
xor
mov
push
cld
xor
mov
dec
and
pop
push
gs
rcl
and
inc
pop
xchg
in
mov
ret
push
mov
mov
jmp
xchg
in
cmp
add
retf
and
add
scas
sbb
(bad)
ror
lahf
daa
sahf
out
cs
mov
test
push
out
pop
dec
xor
iret
cmp
mov
pop
add
xadd
(bad)
clc
push
(bad)
(bad)
lds
es
add
add
fcom
rcl
mov
or
sub
fdiv
mov
fdivr
push
fist
push
aad
loop
ret
add
lods
inc
mov
pop
mov
cmp
pop
push
xor
lea
jge
jg
or
fild
sub
(bad)
lods
mov
push
add
nop
rcr
ror
sbb
mov
inc
and
push
mov
aas
jnp
mov
add
pop
out
aas
dec
sti
sub
loope
xchg
or
dec
sub
sbb
push
jne
xlat
loopne
scas
(bad)
loopne
dec
cwde
mov
xchg
nop
jmp
pop
and
xchg
adc
jb
cwde
dec
imul
add
jecxz
loopne
xchg
inc
mov
test
repnz
out
fsub
data16
xor
push
xchg
xor
sub
jmp
adc
enter
ins
sbb
lock
push
out
hlt
pop
sbb
xor
dec
mov
xlat
lea
jmp
stos
xor
sbb
xor
xor
cmp
jmp
jo
sbb
jecxz
push
jnp
mov
repnz
sbb
dec
add
mov
mov
inc
adc
jl
mov
ds
jmp
sub
mov
push
mov
lahf
push
(bad)
cmp
add
cli
fidiv
sti
xlat
lods
test
not
inc
es
xor
leave
out
sbb
adc
push
mov
dec
repnz
jle
cld
jl
xor
mov
pop
sub
mul
gs
xor
jne
dec
movs
pop
cmc
out
adc
sbb
cld
xchg
push
ficom
add
loope
leave
cmp
and
inc
ss
mov
shr
add
push
push
adc
pop
aaa
xchg
sbb
test
sub
aaa
imul
xchg
sbb
fsub
jmp
imul
jbe
cmps
leave
pop
lea
mov
adc
(bad)
mov
add
sub
jae
inc
shr
mov
dec
add
or
jp
mov
mov
add
pop
xchg
dec
xor
mov
les
jmp
mov
ret
out
mov
dec
adc
cmp
aad
stos
hlt
and
fisub
xor
push
xchg
add
stos
push
call
aaa
sub
pop
lds
mov
loope
mov
cmc
adc
xchg
sbb
addr16
jl
cmp
xor
push
sub
push
test
out
push
ret
stos
call
out
cmc
push
js
out
pop
inc
jl
rcr
xor
mov
mov
aam
mov
dec
ins
push
cwde
ins
call
xchg
push
xor
add
lea
pop
sub
xchg
mov
sbb
stc
aad
pop
push
adc
xchg
outs
ja
adc
(bad)
fs
call
aas
lds
adc
pusha
adc
lds
push
push
pop
inc
popf
pop
jge
mov
or
jb
push
mov
(bad)
push
ins
and
out
ins
sti
mov
adc
outs
jno
lock
cmp
and
push
cs
cmp
ja
mov
dec
sbb
ret
call
in
call
jmp
mov
sbb
xor
bound
fcmovnbe
sbb
in
mov
xor
into
ja
lock
sub
mov
sub
mov
xchg
(bad)
sbb
fcmovnu
or
pop
adc
or
shl
add
ror
push
scas
pop
add
xchg
mov
lods
pop
pop
sub
sub
push
not
rcr
movs
jp
mov
out
push
xchg
aam
jb
or
test
mov
and
adc
xchg
mov
in
aaa
sbb
mov
int3
fs
ret
fild
xor
dec
inc
jg
or
or
aad
push
popf
adc
fstp
xor
aam
mov
jecxz
mov
push
mov
iret
addr16
adc
dec
clc
stos
jmp
fisttp
fstp
test
xor
and
jne
dec
(bad)
(bad)
mov
and
(bad)
push
jp
xor
cmp
jle
dec
loope
mov
punpckldq
inc
adc
xchg
in
inc
rcl
or
or
xor
ss
test
rcl
add
loopne
(bad)
xor
pop
aaa
mov
pop
es
sub
les
and
mov
bound
pusha
mov
repz
push
stc
add
mov
ret
jo
inc
cmp
pushf
stc
movs
iret
cmps
adc
stc
and
sti
repz
jbe
popf
xor
mov
mov
(bad)
cmp
cld
sub
mov
test
call
ss
push
xchg
and
jnp
mov
xor
mov
xchg
inc
or
jmp
pusha
pop
inc
mov
out
adc
(bad)
sub
call
sub
push
and
mov
mov
sub
mov
mov
aad
addr16
mov
cs
jne
lahf
arpl
and
inc
mov
jbe
mov
stc
jl
ror
jne
fcmovu
and
dec
pop
arpl
stos
sahf
dec
es
or
mov
in
dec
and
in
int3
repz
mov
mov
cs
icebp
pop
cmc
xchg
inc
push
sahf
fcmovne
gs
scas
fiadd
call
out
pop
movs
jo
(bad)
pop
push
cld
pop
add
xlat
mov
mul
(bad)
cmp
jmp
js
pop
push
cli
ret
out
inc
fistp
jo
sbb
fdivp
shl
std
cli
icebp
sub
ret
xchg
inc
(bad)
outs
in
or
mov
sbb
cs
cld
les
sbb
xlat
lahf
push
(bad)
stos
(bad)
push
mov
in
jg
mov
pushf
out
frstor
repz
stc
or
push
add
cmps
mov
dec
mul
outs
in
fisubr
xor
cmp
das
sbb
repz
xchg
and
jmp
(bad)
(bad)
xor
fdivr
xchg
push
jns
cmp
mov
outs
and
jae
xor
jmp
push
cmps
mov
mov
sbb
push
pop
add
xor
popf
jmp
iret
xchg
ficom
cmps
lea
ret
aam
cmp
loope
cmp
(bad)
hlt
mov
ret
cmps
mov
pop
and
jae
mov
fs
cmp
retf
fwait
xor
xchg
mov
pop
nop
fldcw
xchg
cwde
jae
in
arpl
movs
popa
xor
adc
es
(bad)
mov
leave
push
loop
bound
movs
add
and
nop
adc
int
add
adc
cmp
add
jle
dec
jmp
bound
pop
retf
and
ja
xor
les
in
scas
enter
dec
imul
cmp
and
cmp
mov
movs
repnz
mov
rol
loopne
xchg
jg
ret
dec
(bad)
pop
addr16
sub
push
call
push
lds
mov
retf
in
dec
fxch
shl
jl
pushf
ret
loope
sub
(bad)
jno
xor
mov
pop
inc
or
or
popf
sahf
gs
adc
loopne
aaa
ins
popf
lods
imul
(bad)
movs
mov
fdivr
sub
ins
and
loopne
test
ret
out
and
lock
add
aam
add
pop
ret
or
mov
das
push
pushf
xchg
fst
inc
ds
es
mov
retf
xchg
test
lahf
xchg
cmp
mov
arpl
xor
mov
daa
dec
into
sbb
and
jge
arpl
or
std
inc
dec
(bad)
or
inc
push
movsx
cmp
das
in
cmp
xchg
mov
cmps
not
leave
mov
lods
push
test
fisubr
ins
mov
inc
mov
and
cmp
fdivp
cmp
and
mov
and
aaa
hlt
push
sub
stos
inc
idiv
arpl
(bad)
xchg
push
pop
into
push
xor
popa
xchg
movs
popf
sbb
xchg
outs
popa
cwde
mov
xor
movs
mov
push
scas
shr
stc
pop
push
pop
ins
push
push
mov
add
xor
mov
data16
or
mov
outs
mov
cmc
and
cmp
push
pop
gs
fwait
sub
fnstcw
neg
add
mov
outs
test
repnz
jge
pop
repnz
iret
cmp
mov
push
shl
test
(bad)
lds
add
push
pop
jb
stos
rcr
mov
adc
jmp
retf
mov
ret
movzx
dec
and
lods
add
lods
imul
clc
rcr
repz
jle
in
mov
je
push
leave
(bad)
scas
mov
sub
outs
(bad)
clc
push
shl
pop
inc
(bad)
fwait
jp
movs
push
mov
mov
push
stc
xchg
xchg
repnz
jg
clc
cwde
hlt
mov
mov
enter
sbb
add
imul
(bad)
out
in
cmps
pop
lea
lock
add
jbe
(bad)
aaa
hlt
loopne
pop
jecxz
in
push
pushf
(bad)
shl
out
arpl
pop
jae
or
into
mov
test
mov
jl
sti
dec
jmp
inc
or
mov
add
inc
dec
and
mov
fild
sbb
sub
xor
dec
outs
mov
ss
sbb
jle
fbld
or
or
xchg
jmp
xchg
pop
push
or
inc
test
and
dec
les
xor
movs
aam
repnz
js
and
and
and
div
popf
inc
aam
rcl
in
mov
sub
mov
add
dec
push
push
adc
scas
(bad)
sub
ror
sub
xchg
xor
gs
push
adc
pushf
test
mov
imul
fisttp
inc
mov
mov
test
jp
imul
ja
bound
lock
imul
retf
push
dec
sub
cmp
(bad)
(bad)
pop
cmp
jbe
mov
push
hlt
push
lea
scas
push
fistp
repnz
cmps
dec
imul
adc
jmp
icebp
pushf
in
test
icebp
add
aad
repnz
movs
cmp
pushf
cmc
sbb
sub
pop
push
shl
jp
and
push
packuswb
mov
test
pop
loopne
xchg
pop
ror
pop
mov
jmp
mov
imul
aam
adc
or
xor
mov
sbb
fimul
(bad)
into
iret
fistp
push
int3
pop
push
inc
mov
out
aaa
inc
js
cs
dec
and
(bad)
add
bound
push
rol
pop
in
cmp
(bad)
fmulp
mov
std
retf
jmp
jge
scas
sbb
push
test
add
jno
shl
mov
pop
add
repz
sbb
pop
rol
jne
push
and
into
cli
or
adc
inc
push
loopne
jp
cmp
fwait
rcl
gs
stos
xchg
sbb
and
std
(bad)
out
jnp
arpl
jmp
popf
daa
out
sbb
mov
pop
or
daa
lea
pop
inc
adc
xor
daa
push
adc
and
popa
mov
add
ret
test
jl
inc
lds
inc
xchg
mov
sbb
xor
jo
jmp
cmp
pop
cmp
push
test
repz
jno
mov
mov
jl
mov
xchg
and
pop
bound
mov
sbb
add
dec
in
retf
sub
es
shr
ret
push
aaa
stos
add
hlt
push
mov
jae
push
adc
retf
cmc
iret
cs
jle
or
mov
in
add
dec
cs
in
mov
push
daa
add
cdq
xchg
mov
retf
mov
bound
pop
enter
imul
inc
mov
add
and
push
push
stc
shl
pop
and
leave
and
fstp
push
and
clc
aad
stos
out
ss
adc
lock
in
les
jle
sahf
mov
push
jne
xchg
pop
ret
jmp
xchg
or
sub
and
add
cmp
inc
cwde
icebp
sbb
rcl
xlat
test
iret
jb
dec
mov
jmp
out
or
mov
das
mov
push
sbb
mov
and
shl
mov
test
out
inc
mov
es
push
push
in
mov
pop
cmps
out
icebp
mov
mov
xchg
jo
scas
test
in
xchg
repnz
xlat
sub
sub
fsub
scas
mov
sbb
loopne
xor
(bad)
jmp
cmp
sbb
sub
jo
dec
adc
out
in
pop
sbb
je
xchg
xor
lea
call
inc
test
(bad)
enter
lock
adc
or
loopne
pop
add
inc
lds
js
jle
sub
cmp
rol
cli
cmp
add
inc
(bad)
fisttp
je
sahf
pop
sub
cmp
adc
dec
test
std
sar
ins
dec
test
jns
cmp
les
fsubr
(bad)
mov
jns
fild
outs
dec
lods
(bad)
bound
cwde
push
mov
test
imul
ficom
ret
push
adc
xchg
cli
sub
mov
sub
mov
push
mov
mov
cmp
jne
adc
stos
xor
jmp
sahf
xor
pop
mov
cmp
outs
mov
sahf
sub
aam
aaa
js
mov
sbb
push
push
pop
imul
shl
mov
xchg
pop
(bad)
cmps
add
adc
sbb
mov
jno
sub
xchg
mov
cmp
stc
and
pop
movs
loope
stos
pop
cdq
or
or
dec
nop
les
pop
loop
xchg
and
sbb
xlat
jmp
(bad)
mov
dec
push
cli
jmp
cwde
push
push
jge
push
outs
dec
xor
aaa
cdq
sub
or
enter
lods
dec
pop
cmps
nop
xor
jbe
push
add
mov
and
mov
jb
ja
cld
mov
adc
cmc
pop
xor
mul
fiadd
mov
dec
jle
sysexit
dec
pop
jb
sub
xor
fwait
xchg
mov
cmp
stos
test
mov
dec
inc
js
dec
add
push
xchg
nop
cmp
cmp
das
fcomp
cmp
out
popf
dec
mov
call
push
sbb
add
pop
movs
or
fisttp
fnstenv
xchg
mov
loope
stc
or
add
test
(bad)
nop
scas
test
shr
push
push
add
mov
ins
repz
or
in
addr16
pop
jg
mov
stos
mov
outs
adc
call
fidivr
dec
aad
adc
in
ftst
adc
xchg
loop
xor
enter
out
icebp
mov
stos
jbe
(bad)
movs
mov
pop
cmp
lea
das
jg
and
dec
into
lea
popf
sub
jne
adc
jg
sub
or
push
popa
xor
push
sbb
sub
(bad)
popf
and
repz
test
repnz
mov
or
inc
pop
pop
push
mov
xor
ret
imul
sar
int3
sbb
push
mov
xor
sub
push
push
hlt
sar
add
xchg
call
sbb
mov
mov
sub
je
sub
in
dec
mov
les
xchg
cmp
lock
rcl
shl
mov
mov
inc
jmp
bound
dec
pop
adc
pop
jmp
jns
pcmpeqw
push
jle
and
mov
jns
push
daa
xchg
sub
cmps
mov
int
adc
test
inc
xor
push
fst
or
lods
lods
pop
pop
pop
mov
xchg
mov
push
mul
clc
sbb
dec
mov
dec
dec
sbb
in
mov
ror
aam
or
adc
xor
push
xlat
ror
mov
arpl
das
xchg
add
loop
(bad)
mov
and
mov
bound
add
aam
sub
pop
cmc
enter
xor
loope
lea
clc
pusha
push
pop
pushf
int3
xchg
jno
mov
mov
lods
dec
outs
jb
cli
cdq
mov
mov
or
out
xlat
cmp
inc
dec
add
cmps
pop
es
push
mov
pop
shl
cwde
in
cmp
sti
push
cmp
mov
fs
push
or
cmp
adc
imul
lods
xchg
pushf
cmp
sub
push
push
mov
(bad)
fld
push
cmp
enter
call
mov
into
push
test
add
rcr
cli
jecxz
das
mov
jae
enter
pop
xlat
into
imul
setg
xchg
movs
and
test
mov
or
mov
xrelease
jecxz
aas
scas
push
cmc
add
jo
push
jp
push
cwde
sbb
outs
aad
push
stos
mov
cmp
mov
inc
repnz
mov
xchg
mov
(bad)
call
jg
jp
sub
pop
aaa
aaa
xor
pop
loope
mov
arpl
dec
(bad)
in
outs
jl
enter
push
int
jmp
popf
ret
rol
mov
jmp
push
aad
xchg
outs
sub
lock
into
cmc
xchg
loopne
fcomp
mov
repz
inc
sub
shr
out
lea
aas
popf
adc
push
pop
xchg
mov
sar
mov
ret
jae
mov
mov
xchg
xor
push
inc
daa
inc
call
mov
cdq
fimul
and
xchg
jle
in
pop
push
push
push
cs
sbb
int
(bad)
test
push
mov
(bad)
popf
xchg
(bad)
sub
(bad)
(bad)
das
movs
dec
and
rcl
loopne
mov
fstp
rcr
scas
fnstenv
stc
and
mov
or
outs
push
fstp
mov
out
inc
lea
icebp
xchg
mov
lds
out
fs
pusha
std
mov
cmp
loop
fbld
cwde
jmp
push
fmul
sub
push
mov
ds
leave
mov
shl
shr
leave
test
stos
add
lods
dec
test
push
mov
mov
repz
call
mov
mov
adc
out
cmp
push
cmps
ret
aas
cmc
fistp
mov
dec
fcom
in
rcl
jp
(bad)
fmulp
mov
aaa
mov
imul
pusha
(bad)
arpl
lock
dec
fist
adc
aaa
in
mov
mul
push
pop
cmc
lahf
in
xchg
inc
push
push
cmp
jecxz
dec
mov
pop
pop
inc
dec
pop
and
enter
cmp
push
lods
inc
cmp
mov
or
shl
scas
ror
test
sub
(bad)
loopne
mov
mov
mov
aam
loopne
inc
adc
test
sub
in
jle
cld
xchg
mov
pop
lods
cmc
fimul
adc
shl
js
add
push
adc
inc
shl
pop
cs
cwde
mov
inc
adc
or
jbe
add
add
xor
cmp
(bad)
cmp
inc
(bad)
dec
out
test
push
cmp
repnz
test
loope
mov
in
dec
into
sub
js
fnstsw
adc
aam
inc
adc
xor
and
add
call
shl
lods
mov
scas
fneni(8087
test
stos
xchg
ss
push
ret
inc
xchg
sub
not
mov
scas
jbe
adc
pop
pop
stos
ins
jmp
test
aam
ror
call
inc
call
cmps
pop
xchg
dec
and
xor
je
loop
jge
xchg
and
xchg
xor
pop
outs
daa
inc
js
loopne
and
bound
push
adc
pop
enter
adc
in
push
xlat
out
int
or
lds
pop
add
(bad)
mov
mov
addr16
call
push
stos
mov
fsubr
ds
adc
pop
pop
mov
push
stc
pushf
js
in
retf
in
cmp
cmp
adc
add
retf
mov
and
les
xchg
inc
mov
xchg
ins
test
cld
inc
inc
push
xchg
push
push
(bad)
fcmovnb
or
in
dec
js
int3
dec
dec
mov
rcl
xchg
and
es
dec
mov
mov
mov
je
(bad)
ffree
fmul
ja
mov
add
cwde
jmp
fcomp
push
pop
cld
repz
hlt
or
test
ret
and
daa
enter
test
iret
lock
in
loopne
int
inc
dec
xor
mov
adc
pop
imul
xchg
loopne
mov
shl
out
mov
push
jg
cmp
nop
mul
mov
out
sbb
test
inc
push
cmps
arpl
(bad)
pop
xor
mov
mov
jbe
(bad)
mov
fistp
fiadd
or
gs
sbb
shl
mov
or
aam
popa
jmp
cmp
daa
push
and
lods
sub
mov
push
jbe
pop
mov
mov
pop
(bad)
xor
into
stos
mov
in
jle
xchg
repnz
lea
add
pop
mov
pop
sub
adc
fild
mov
aas
adc
cmps
mov
inc
push
push
inc
hlt
das
fsubr
jne
in
push
mov
jl
dec
imul
retf
(bad)
(bad)
outs
movs
sub
je
jnp
popa
push
jne
arpl
xchg
mov
mov
retf
loop
or
lea
mov
nop
fist
add
cmc
dec
xor
scas
int3
push
jnp
cmps
bound
pop
int3
adc
enter
add
push
cmp
test
sub
mov
xchg
and
cmp
jns
test
out
test
and
push
dec
lock
cmps
out
push
xchg
dec
aaa
push
mov
fnsave
xor
call
sbb
fldcw
cmps
test
jmp
mov
aas
jle
cs
sub
push
gs
dec
push
loop
jmp
xor
add
sub
push
push
lahf
jnp
jge
pop
stos
je
mov
cli
rcr
xor
push
cmps
lock
clc
stos
(bad)
pop
sub
in
mov
or
ret
or
inc
push
adc
or
xor
jae
pop
movs
and
dec
fs
pop
push
imul
lahf
clc
mov
shl
xor
es
fldenv
xchg
jbe
shr
or
call
or
es
cmps
psubw
and
and
pop
add
adc
mov
out
add
push
pop
inc
adc
mov
xor
xchg
xor
std
jmp
fstp
out
dec
cld
dec
outs
scas
xor
mov
jno
out
retf
leave
retf
cmp
mov
stos
xor
push
pop
loop
icebp
shr
in
sub
mov
sahf
arpl
mov
popa
and
mov
inc
sar
test
adc
xor
ja
mov
not
ds
or
sahf
arpl
imul
imul
std
fisttp
aam
mov
out
or
push
pop
je
dec
fst
mov
ss
popa
pop
mov
and
sbb
push
mov
aas
mov
and
frstor
ins
dec
sbb
inc
repnz
pop
(bad)
dec
and
push
mov
sub
jno
daa
std
push
aad
dec
daa
sbb
das
(bad)
stc
rol
mov
in
adc
mov
test
jecxz
pop
call
jl
inc
xchg
or
pop
add
dec
mov
and
adc
mov
jno
dec
cmp
inc
(bad)
je
sbb
stos
fiadd
lock
aas
in
mov
push
enter
pop
cld
dec
jmp
cwde
pop
xchg
mov
push
(bad)
rcl
dec
mov
pushf
(bad)
icebp
push
bnd
sbb
xchg
in
shl
(bad)
adc
push
mov
jo
dec
push
add
stos
push
mov
aas
dec
mov
push
arpl
shr
sub
mov
scas
mov
sub
lahf
das
sub
push
les
imul
loope
sbb
pop
(bad)
cmp
(bad)
leave
aam
lods
push
pop
push
arpl
ins
and
add
(bad)
jae
or
add
jno
cmp
clc
test
sbb
sub
mov
(bad)
mov
adc
sbb
inc
cmps
push
push
pop
psrlq
pop
daa
and
push
push
cdq
mov
pop
sti
arpl
lea
scas
push
in
movs
and
and
add
nop
data16
inc
push
add
outs
pop
mov
out
or
inc
sbb
loope
sbb
push
dec
inc
dec
or
cmp
push
mov
ja
shl
push
test
pop
in
movs
push
sti
mov
inc
add
gs
mov
add
mov
cdq
push
mov
pop
sub
retf
sub
rcl
cmp
mov
inc
into
mov
jmp
je
jmp
out
or
out
gs
xchg
daa
out
add
aad
sbb
leave
test
int3
add
cs
clc
loop
lods
int
cmp
sub
dec
adc
dec
cmp
(bad)
les
shl
or
push
inc
xor
push
fild
call
inc
cs
xchg
mov
push
aaa
sbb
add
push
fs
xlat
in
mov
mov
push
stc
inc
ins
lods
fimul
movs
adc
mov
mov
inc
mov
(bad)
fdivr
pop
outs
jne
cdq
pop
sbb
jmp
mov
lea
outs
or
imul
in
jo
hlt
mov
hlt
and
rol
push
gs
mov
add
dec
into
push
inc
xor
retf
cmp
pop
or
stos
jae
data16
sbb
or
movs
mov
cmc
mov
push
dec
out
mov
inc
in
jl
in
adc
outs
mov
push
jg
fst
cmp
cmc
shl
push
push
pop
mov
xchg
(bad)
or
fcom
xor
cmp
or
dec
jne
xchg
adc
loopne
imul
(bad)
(bad)
mov
(bad)
sbb
scas
leave
scas
in
sub
repz
dec
popf
out
inc
jmp
sbb
sahf
push
jbe
sbb
int3
cmp
sbb
aad
(bad)
clc
mov
lods
mov
mov
ror
outs
jae
lock
inc
out
mov
(bad)
xor
cmp
mov
jl
jge
jnp
mov
push
sbb
outs
sbb
stc
xor
stos
mov
xor
lock
push
bound
xchg
add
scas
outs
xor
mov
inc
pushf
pop
fmul
rol
inc
dec
and
xor
xchg
movs
jb
retf
inc
xchg
inc
inc
ret
xor
xchg
cmp
mov
jns
push
retf
or
call
aas
push
xor
add
pop
fmul
xor
icebp
push
ss
mov
sar
aas
mov
shr
and
xchg
sti
jmp
loopne
jmp
mov
xchg
sbb
and
lock
cdq
push
push
out
(bad)
arpl
dec
sbb
or
hlt
je
dec
mov
and
bound
ret
xor
mov
xchg
inc
pop
mov
mov
jnp
js
sbb
retf
dec
push
push
nop
enter
and
fisubr
in
jg
jmp
push
outs
cmp
pop
xchg
dec
adc
cmp
jbe
mov
fbld
or
jp
ds
mov
lea
jp
imul
leave
mov
popa
push
(bad)
lahf
or
sub
cmp
push
and
add
mov
or
adc
pop
scas
sbb
fadd
sbb
xor
pop
xchg
xchg
clc
movs
or
jmp
and
test
push
or
addr16
bound
outs
add
pop
cli
push
inc
(bad)
pop
jle
sahf
jp
scas
sar
(bad)
(bad)
ds
mov
aaa
mov
mov
packsswb
pop
mov
scas
pop
sbb
repz
movs
cmps
ja
pop
out
cmp
movs
or
pop
adc
cmp
pop
les
fiadd
push
xor
push
cs
xchg
mov
rcr
jg
add
mul
mov
jge
adc
dec
fild
jecxz
push
popf
or
shl
sub
adc
aas
jmp
fst
jo
outs
sahf
mov
mov
jo
stos
inc
movs
repnz
mov
cdq
mov
inc
pcmpeqb
dec
rol
outs
jae
or
mov
inc
sub
ds
fidivr
test
into
das
loopne
inc
jo
fs
inc
rcr
push
(bad)
stos
xor
push
imul
inc
mov
push
dec
(bad)
iret
mov
in
xchg
icebp
pop
mov
ins
jecxz
mov
or
lods
repz
adc
pop
cmp
xchg
cmp
cmp
mov
pop
in
sub
mov
lea
mov
icebp
repnz
xchg
cmps
stc
xor
ins
inc
test
bound
test
cmps
mov
ret
or
mov
hlt
pop
in
jp
(bad)
ins
hlt
ret
js
scas
aam
jle
fstp
sub
scas
add
cli
add
(bad)
sbb
jge
jl
call
inc
outs
push
loope
out
(bad)
stc
int3
call
cdq
mov
(bad)
mov
retf
mov
xor
jns
inc
cmp
push
push
into
sub
pop
movs
dec
jge
mov
pop
pop
sub
cli
scas
(bad)
adc
(bad)
pop
neg
sub
jne
cwde
lods
(bad)
ffree
push
ror
pushf
xchg
dec
or
push
shr
call
fadd
pop
imul
dec
sbb
(bad)
jecxz
popa
movs
call
cs
mov
sti
xchg
sub
ja
pop
lods
out
int
cmp
fwait
int3
pop
int3
pop
imul
dec
or
push
outs
add
scas
xor
inc
in
dec
neg
and
je
or
test
retf
mov
movs
sbb
push
mov
stos
retf
sub
cmp
test
loop
int3
imul
add
xchg
push
dec
inc
dec
cmps
inc
xchg
sti
or
mov
sahf
xchg
or
jle
or
xchg
or
cmp
imul
mov
jge
sbb
sub
sbb
mov
or
aam
hlt
jl
mov
mov
test
test
jmp
xor
and
hlt
test
pop
dec
fild
test
push
sbb
pop
ss
repnz
xor
shr
mov
(bad)
and
es
ret
das
cmp
and
mov
cmp
test
fisubr
lock
inc
inc
cmp
adc
xlat
js
mul
bound
cli
mov
mov
mov
inc
iret
addr16
pop
sbb
icebp
pop
or
inc
lods
in
(bad)
aas
mov
jle
mov
out
mov
aaa
pushf
add
push
rcr
mov
cmp
dec
lea
les
jecxz
pop
jecxz
fimul
inc
add
pop
sub
inc
inc
in
pop
and
sbb
sub
push
lock
stos
push
mov
gs
icebp
repnz
sar
sar
sbb
iret
mov
iret
xchg
mov
std
scas
dec
scas
dec
push
in
imul
jnp
out
out
movs
out
pop
adc
in
xor
gs
mov
shl
aad
fisubr
sub
xchg
push
jge
xor
push
pop
aad
(bad)
jne
push
add
retf
add
xchg
sar
inc
enter
lock
dec
mov
sub
jne
sbb
cmp
dec
int3
ret
movs
(bad)
cdq
rol
ja
adc
sbb
lock
sub
iret
fild
and
cdq
adc
mov
and
jle
outs
ret
pop
ret
je
jp
pop
sbb
jae
iret
mov
cli
mov
popa
dec
adc
popf
movs
mov
push
mov
pop
or
jp
inc
mov
adc
and
and
popa
and
sahf
mov
inc
out
int
std
jle
xchg
repnz
aaa
sti
or
rcl
cmps
popa
xor
and
xor
scas
push
mov
lock
add
(bad)
out
fnstenv
xchg
test
in
dec
mov
(bad)
sub
(bad)
adc
retf
in
mov
jb
repnz
jecxz
mov
int
popf
clc
mov
and
pop
stos
add
or
loope
jne
xor
fs
stc
mov
stc
imul
sar
outs
in
cmp
xor
pusha
xchg
(bad)
std
mov
dec
jge
bound
or
pop
aaa
js
sub
jle
mov
mov
jb
fnclex
sbb
aam
arpl
or
ins
jnp
out
pop
int3
scas
cmp
popf
or
xor
sub
in
add
push
pusha
cwde
inc
pminsw
fisttp
pop
loopne
pop
dec
push
stc
(bad)
in
push
rcr
add
and
(bad)
jo
mov
inc
adc
mov
fdiv
sbb
push
fild
cmp
sub
or
data16
and
(bad)
jae
adc
jmp
mov
mov
and
mov
lods
pusha
fild
lods
mov
cmp
into
mov
inc
mov
mov
adc
mov
adc
xchg
jo
mov
xchg
adc
outs
xchg
pop
inc
popf
ss
daa
mov
(bad)
js
nop
cld
mov
xchg
iret
out
int
stc
xchg
jb
fild
fdivr
lods
test
push
scas
pusha
cmp
and
retf
dec
jns
push
pop
push
iret
cmp
mov
popf
cmp
inc
push
stos
sbb
cli
mov
scas
das
dec
ja
adc
sub
popf
jae
retf
stos
ret
xchg
mov
movs
or
scas
pop
aad
test
lock
pop
adc
push
cs
and
std
push
add
bnd
inc
aam
les
add
sahf
dec
push
mov
adc
and
test
lock
dec
dec
arpl
or
pop
jno
pop
(bad)
fcom
jns
jp
dec
xchg
lds
mov
push
sbb
mov
mov
inc
dec
ret
dec
cmp
sar
cmp
(bad)
mov
test
test
aam
adc
ss
(bad)
imul
(bad)
cmp
add
mov
frstor
xchg
sahf
jmp
pop
loop
pop
inc
movs
sbb
scas
iret
inc
pop
mov
and
cmps
fldenv
shl
rcr
push
popa
mov
dec
lods
inc
jns
dec
rep
dec
push
push
adc
ret
out
test
test
enter
push
mov
jmp
dec
outs
je
pop
test
lahf
cs
icebp
movs
cmps
into
xchg
or
adc
xlat
mov
icebp
pop
out
retf
and
adc
in
lock
dec
std
adc
in
mov
int
pop
add
cli
lods
dec
icebp
jb
imul
xor
xchg
test
(bad)
cmp
mov
imul
sub
push
and
jnp
mov
ret
sub
repnz
add
mov
in
mov
cli
lds
and
mov
popf
adc
sub
sub
ss
out
adc
xchg
bound
or
pop
jnp
scas
jnp
jae
aad
jmp
mov
push
pop
cmc
xchg
cwde
push
xchg
xor
mov
pop
or
imul
es
pop
adc
mov
test
call
push
ss
mov
add
sbb
sbb
dec
xor
pop
xlat
cdq
into
xchg
jo
sub
jge
xchg
jae
jne
retf
jb
sbb
sbb
mov
out
jae
sbb
fidivr
mov
add
push
jle
shl
hlt
inc
or
rcl
pop
(bad)
mov
sbb
(bad)
loope
mov
adc
dec
enter
dec
or
mov
xchg
shl
add
and
sbb
shl
adc
mov
fldenv
mov
push
adc
repnz
sbb
fwait
cmps
dec
aad
add
das
lea
jno
lods
and
repnz
popf
ins
imul
mov
mov
loop
add
mov
or
popf
push
lds
mov
sub
pop
mov
stc
inc
push
xor
sbb
(bad)
jp
cmp
jg
js
iret
xchg
fdivr
mov
ffreep
call
sar
fsubr
dec
cmp
mov
cmp
inc
lods
out
mov
test
aad
lock
daa
fwait
inc
das
xchg
dec
jg
stc
rol
jl
(bad)
in
dec
out
(bad)
out
and
sar
sbb
xlat
lods
pop
xchg
scas
clc
xor
add
xor
sub
pop
pop
repz
adc
mov
sub
add
cmp
jp
call
dec
xchg
push
dec
push
mov
pusha
out
mov
jge
repz
dec
or
mov
mov
jnp
xor
enter
stos
clc
(bad)
mov
sbb
lahf
fdiv
ins
movs
pop
cmp
out
push
mov
jnp
fnstsw
test
sbb
push
inc
and
ror
clc
ja
sar
dec
inc
mov
pop
sti
outs
lds
in
xchg
pop
push
mov
je
movs
stos
outs
push
in
test
xchg
push
sub
and
lods
push
jle
lds
fs
test
in
mov
dec
stos
arpl
enter
push
inc
add
inc
arpl
sbb
in
jge
pop
inc
mov
pushf
xor
test
sar
mov
scas
add
in
adc
scas
inc
fcom
xchg
pop
xchg
jo
ficomp
cmps
mov
sub
jg
out
cmp
mov
jbe
push
pusha
mov
jp
pop
cmps
mov
fwait
xchg
push
pop
adc
movs
movs
mov
imul
ins
dec
hlt
push
in
add
push
push
pop
jge
mov
outs
cs
scas
xchg
inc
int3
enter
cmp
and
mov
rcr
push
add
(bad)
or
inc
jns
mov
cmp
pop
adc
dec
mov
retf
add
test
sbb
cmps
aam
mov
inc
ror
xor
out
out
pop
test
es
xlat
ret
pop
daa
sahf
or
enter
shl
sbb
imul
lds
adc
adc
push
hlt
xor
icebp
jp
fisub
loope
loopne
adc
sbb
mov
neg
sbb
cmp
and
add
shr
or
push
jno
in
and
test
dec
rcl
mov
jnp
lock
pop
jmp
inc
cmps
fidivr
test
dec
sbb
ja
rcr
add
xlat
dec
or
ret
adc
jne
mov
icebp
or
setb
adc
mov
popf
fs
and
pop
in
mov
int3
imul
jnp
cmps
push
push
jno
sub
popf
dec
pop
fldl2t
pop
ror
or
add
xchg
out
bswap
movs
stc
dec
test
fstp
sub
out
test
mov
pop
dec
stc
out
inc
(bad)
scas
stc
mov
jae
push
jle
das
stc
xor
in
jge
rcl
xabort
jae
adc
aam
and
cs
cmps
xchg
into
jle
into
cmp
push
scas
adc
loopne
daa
sub
cmps
pushf
push
sub
xor
jl
hlt
sub
pop
xor
pusha
in
fnstsw
sub
nop
stos
ds
adc
xor
and
mov
and
push
outs
adc
adc
les
jne
mov
retf
and
pop
or
mov
dec
cmps
xchg
adc
test
out
push
mov
mov
(bad)
fs
jne
add
sti
cmp
les
add
sbb
add
jne
mov
ja
shl
fnstsw
bound
aaa
fnstenv
jae
mov
xor
jmp
pop
dec
popa
mov
rcr
jl
cmp
mov
mov
rol
hlt
(bad)
loop
ds
mov
test
aad
jge
enter
cwde
push
sbb
fcom
push
and
test
cwde
(bad)
lea
ins
sar
je
icebp
push
mov
nop
sub
dec
push
or
into
fidiv
arpl
pmuludq
lods
add
retf
jns
cdq
jno
sbb
mov
daa
aas
and
cmp
daa
adc
push
repz
loopne
or
ss
daa
ins
mov
sub
or
gs
xor
in
addr16
shl
xchg
mov
dec
nop
dec
les
js
push
lds
outs
mov
push
pusha
jecxz
je
es
adc
jle
dec
imul
xor
dec
sahf
scas
loop
popa
mov
mov
enter
int3
test
out
cmc
or
pop
mov
sar
in
xchg
addr16
xlat
xchg
pop
in
xchg
hlt
sub
pop
scas
xchg
bound
push
push
pop
jae
xchg
cmp
inc
xchg
ss
int3
sub
popa
cmp
push
xlat
jne
lods
mov
ds
into
mov
pop
jno
popf
loope
cs
lds
sar
dec
test
adc
es
movs
inc
inc
ins
fstp
dec
test
push
xchg
popf
mov
shrd
in
shl
mov
lds
fiadd
out
dec
loope
pop
sub
icebp
xchg
ficom
les
and
cmp
mov
push
xor
jg
cmp
jno
mov
mov
test
mov
jle
mov
push
xor
add
std
inc
sub
inc
or
cmc
test
jge
mov
and
iret
mov
jecxz
add
mov
push
loop
outs
mov
xor
(bad)
sar
xchg
fld
test
xor
lock
call
jl
lds
mov
test
pop
sbb
xor
dec
jecxz
mov
gs
push
fst
mov
imul
(bad)
retf
cmc
jae
leave
aam
mov
push
ret
jb
and
out
adc
sub
sub
dec
jnp
in
xor
out
addr16
icebp
out
mov
lahf
mov
jge
mov
ret
pushf
and
add
pop
jb
fwait
push
mov
repz
(bad)
rcr
mov
dec
jl
mov
add
call
scas
aad
popa
adc
daa
not
ds
fs
retf
shr
push
push
cmp
mov
je
cs
leave
shr
jl
dec
adc
scas
pushf
call
mov
das
cmp
cmp
cmp
mov
add
(bad)
mov
lods
cmc
pop
lods
and
imul
push
in
mov
lods
imul
mov
xor
out
loop
adc
mov
pop
mov
cmp
push
xchg
fist
bound
(bad)
ror
fisttp
cli
pop
cs
mov
(bad)
imul
lds
jne
stos
pop
sub
mov
xchg
or
stc
idiv
pop
adc
dec
mov
movs
inc
jl
pop
cwde
addr16
dec
jp
pop
outs
mov
cmc
mov
enter
pop
or
sbb
scas
ja
fadd
stc
cwde
js
xchg
fstp
cmp
cld
leave
mov
sbb
loope
inc
shl
cmp
out
mov
in
mov
ficomp
pop
fidivr
ret
push
push
(bad)
leave
xchg
xchg
fstp
and
or
pop
pop
dec
shl
lds
ret
add
mov
cmp
and
cmp
pop
sub
inc
jae
retf
and
test
add
xor
mov
leave
pop
daa
pop
or
movs
aaa
jle
pop
or
mov
sub
out
sub
dec
jg
mov
addr16
cmp
or
scas
mov
imul
jns
push
rcr
inc
mov
or
sub
movs
dec
jbe
xchg
push
cmp
jno
sub
stos
sub
inc
xlat
shr
inc
add
xchg
sahf
mov
mov
mov
pop
rcl
inc
mov
stc
mov
leave
mov
mov
jae
pop
mov
jae
add
out
pop
cdq
xor
xchg
sbb
push
aaa
rcr
imul
xchg
es
cmp
js
fadd
mov
xchg
movs
dec
mov
xchg
es
sub
fs
iretw
test
popa
iret
(bad)
push
cmps
cmps
mov
xor
mov
pushf
aas
pop
in
mov
test
mov
cli
sar
ret
inc
call
xor
pop
into
pop
xchg
sub
mov
(bad)
loopne
leave
stc
ret
shl
ds
adc
lods
stos
or
jp
mov
out
inc
mov
mov
sbb
scas
and
pusha
push
stc
fdiv
jecxz
sti
in
pop
mov
das
cmp
addr16
movs
push
mov
jl
sub
(bad)
ficomp
pop
add
xchg
sbb
jno
lods
ins
sub
in
mov
and
fld
movs
sbb
scas
call
sbb
cwde
sbb
xlat
inc
in
cmp
jge
clc
push
mov
mov
(bad)
mov
jge
sub
fiadd
imul
jl
dec
sbb
dec
out
fstp
push
pop
jmp
push
pop
loopne
and
jg
xchg
inc
and
pop
lds
jp
imul
out
ror
fiadd
push
or
mov
push
push
inc
out
retf
mov
sub
icebp
enter
clc
cwde
mov
or
lds
sbb
bound
retf
pop
(bad)
push
push
sub
mov
lods
push
ror
repnz
(bad)
lds
jnp
dec
xor
add
jbe
cmp
sub
movs
push
pop
pop
mov
xor
xchg
imul
mov
jge
movs
or
leave
mov
ja
hlt
sub
sti
or
adc
in
test
pop
adc
and
fwait
sti
movs
adc
gs
xor
repnz
inc
inc
add
(bad)
iret
int
outs
repz
mov
aas
popf
jecxz
sahf
cmp
mov
pop
xchg
(bad)
jb
push
popa
sub
and
add
repnz
mov
jns
jmp
mov
je
aad
cmp
adc
jnp
push
retf
jmp
in
aaa
(bad)
pusha
mov
inc
test
pop
das
fcmove
mov
cld
repz
out
push
aaa
xor
inc
add
test
push
call
mov
mov
je
jp
sbb
sbb
mov
popa
je
iret
and
les
test
and
pop
sub
loope
nop
aas
cs
inc
fnstsw
mov
adc
int
mov
xor
popa
cmp
or
or
pop
lahf
add
push
and
ret
mov
pop
sub
cdq
es
xor
nop
pop
mov
inc
js
mov
cmps
mov
fisttp
mov
mov
popf
adc
push
pop
adc
inc
icebp
jne
popa
ror
dec
dec
iret
popf
mov
inc
imul
repz
push
cdq
pushf
inc
inc
sbb
fs
outs
sub
pop
mov
lock
mov
retf
pop
nop
fdiv
popa
mov
pop
xor
cmp
(bad)
sar
mov
jg
lgs
or
pop
sub
jns
and
mov
out
fcmovbe
mov
and
mov
lock
xchg
jl
dec
out
adc
mov
test
(bad)
popa
test
sahf
in
iret
int3
leave
arpl
fwait
xchg
jle
inc
pop
aad
cmps
or
loope
cdq
popa
add
jl
sar
adc
ret
fucomi
sub
pop
scas
jle
inc
add
ss
or
push
(bad)
dec
fisubr
ss
mov
mov
shl
jnp
out
mov
inc
fldl2t
or
jo
jns
push
xchg
adc
add
sub
repnz
xor
pop
sub
cmp
jecxz
add
int3
pop
jmp
das
in
imul
sub
adc
call
sbb
stos
xchg
(bad)
loope
fdivr
adc
sub
pop
dec
(bad)
imul
jl
shl
lock
xor
aad
stos
and
mov
fld
idiv
lods
and
bound
fnsave
dec
shl
(bad)
adc
aam
ds
retf
sub
es
rcr
sahf
pop
sub
lds
(bad)
lods
call
push
cmp
sbb
xlat
mov
sub
add
les
in
xor
mov
cdq
sub
ficom
sub
int3
cwde
cdq
sar
das
dec
or
and
dec
mov
push
fs
jne
pop
loopne
mov
out
test
mov
jo
out
scas
mov
sub
mov
data16
fwait
std
enter
enter
loope
inc
pop
xchg
arpl
test
loopne
mov
adc
push
and
aad
add
add
aad
sbb
xor
inc
push
mov
add
mov
pusha
ret
and
xor
inc
add
fisub
sub
loop
cmp
inc
jnp
dec
and
sti
cld
cmp
sub
pushf
shr
clc
cmp
and
fs
shl
sbb
mov
mov
cli
(bad)
idiv
jno
dec
xchg
inc
push
add
hlt
je
mov
xchg
push
pop
jo
inc
in
daa
adc
fs
stos
mov
test
cwde
call
pop
call
jb
aam
or
sub
mov
clc
pop
jne
sub
int3
xchg
sub
in
push
or
fimul
jnp
xchg
pop
out
shl
xor
retf
out
push
mov
popa
or
ds
and
mov
sbb
xor
fdivr
in
cmc
aad
bound
add
cmp
out
addr16
push
ds
mov
(bad)
xchg
addr16
pop
repz
mov
ins
inc
pop
sub
into
push
or
je
jno
test
pop
(bad)
pop
adc
(bad)
and
mov
mov
aad
ret
push
inc
shl
in
test
pop
sub
ds
push
pop
sbb
and
pop
xchg
pop
sub
pop
iret
push
out
sbb
fadd
scas
in
mov
test
cwde
int
sbb
dec
jo
cdq
test
mov
sub
pop
and
mov
sub
or
push
xchg
shl
pop
movs
xchg
pop
xchg
call
jecxz
and
call
jb
xchg
ret
lahf
push
aas
mov
scas
jae
cwde
dec
in
fwait
das
xchg
push
jbe
fadd
outs
dec
arpl
sub
xlat
cmc
adc
sub
cmp
pushf
mov
pop
sbb
mov
loope
rol
retf
pop
fstp
hlt
fiadd
jb
mov
mov
out
ret
or
out
xchg
or
ins
lock
ins
outs
or
es
inc
fdiv
jg
pop
push
shl
mov
loopne
lock
out
mov
aas
shr
mov
jo
pop
adc
in
aas
xor
cmps
test
aaa
call
dec
sub
xchg
xlat
(bad)
mov
jns
pop
xor
sub
icebp
adc
jp
jmp
ins
pop
mov
retf
stos
loop
imul
pop
jno
mov
clc
dec
push
jb
sub
mov
jp
sahf
cmp
ins
jmp
jae
inc
inc
iret
lahf
outs
mov
retf
xchg
add
or
cwde
xchg
jmp
ret
xor
dec
stc
sub
imul
or
jo
fadd
push
aam
sub
xchg
in
add
movs
mov
pop
or
jecxz
xchg
in
shl
and
icebp
pop
gs
ds
popa
test
fs
mov
arpl
retf
pop
mov
xchg
mov
repnz
mul
mov
out
inc
(bad)
idiv
or
dec
mov
push
pop
test
xor
pop
pop
or
jo
les
bound
jecxz
mov
sbb
inc
pop
sbb
fistp
adc
adc
inc
outs
movs
push
rol
add
sub
stos
adc
mov
repz
sbb
sub
sbb
in
cmps
mov
xlat
cmps
shr
mov
test
in
and
daa
gs
sahf
mov
mov
mov
stos
js
mov
or
fidivr
(bad)
sbb
lods
test
rol
call
xchg
and
pop
ret
cmps
cwde
pop
icebp
lods
fiadd
test
fdiv
lock
out
gs
imul
aam
in
mov
push
pop
adc
repz
jno
xchg
pop
sbb
jo
mov
push
sbb
into
mov
call
data16
popa
jns
cmp
jno
fstp
fwait
mov
mov
iret
xchg
inc
mov
jp
dec
mov
inc
dec
dec
sbb
dec
loope
jo
(bad)
ret
inc
or
in
std
sub
iret
lods
adc
call
mov
das
(bad)
rcr
test
and
arpl
es
sub
xor
outs
inc
ret
dec
sub
cdq
popa
sub
push
push
ins
mov
or
push
aas
or
pextrw
push
cld
(bad)
fs
je
jmp
or
jae
cmp
xchg
pop
push
das
xchg
xlat
or
add
push
das
stos
outs
inc
dec
adc
dec
loop
aas
test
inc
lock
xchg
push
cmps
dec
jmp
int
rcr
or
sbb
xchg
push
js
call
jne
or
sub
lahf
data16
jmp
fwait
adc
xor
into
jnp
mov
jmp
jns
sbb
fldcw
add
or
mov
adc
retf
add
lods
adc
jg
adc
(bad)
int
xchg
adc
xor
mov
rcl
jnp
push
fnstcw
dec
sbb
in
in
paddsb
jne
or
neg
into
inc
jne
call
mov
scas
adc
hlt
aas
mov
jno
and
xor
mov
xor
xlat
mov
xor
test
dec
test
pop
rol
bound
jl
aad
sub
leave
lds
sub
and
add
adc
jne
pop
cmp
std
and
movs
rcr
test
hlt
xchg
jmp
icebp
mov
int
or
push
cwde
push
cmc
cs
and
mov
(bad)
(bad)
mov
imul
js
enter
dec
pop
in
xlat
push
xor
in
push
cld
mov
sbb
lock
movs
mov
lahf
mov
sbb
jae
sti
call
sbb
ins
mov
adc
addr16
popf
push
xor
or
xor
(bad)
jbe
sbb
in
(bad)
push
gs
sub
cmp
imul
and
in
xchg
repz
lods
aad
mov
addr16
jns
dec
movs
adc
xlat
movs
push
mov
scas
mov
data16
int
jecxz
cmp
or
add
push
inc
and
outs
out
sub
push
inc
mov
int3
cmps
rcl
bound
mov
(bad)
in
call
sub
cmp
jecxz
js
ret
cmps
outs
xchg
mov
test
and
mov
cmp
bound
test
or
pusha
xor
xchg
fbld
mov
xchg
cld
sbb
inc
cld
and
sub
stos
mov
push
cmp
jle
ss
cwde
ror
popf
sti
xchg
fs
in
pop
add
mov
mov
push
mov
jbe
or
cmp
int
jne
or
mov
dec
pop
call
outs
add
sub
(bad)
push
pushw
or
dec
adc
sbb
jns
push
cmps
xor
sub
into
data16
lea
js
pop
adc
ins
out
lods
mov
(bad)
popf
mov
jnp
xor
mov
jo
das
in
call
mov
outs
in
cmp
gs
push
jl
inc
push
dec
pop
mov
sbb
ret
jg
jmp
movs
add
ja
sbb
(bad)
mov
xchg
outs
inc
in
in
pop
and
mov
jae
inc
(bad)
cmp
jge
sub
or
into
sahf
ds
test
imul
and
js
jae
push
es
mov
jg
cmps
push
xchg
jb
jge
dec
(bad)
or
dec
mov
in
loopne
jl
fbstp
dec
rol
jge
sbb
call
push
popf
mov
mov
shl
ins
mov
imul
cwde
add
xchg
retf
jmp
ror
mov
(bad)
(bad)
mov
or
lahf
arpl
std
iret
hlt
pop
jmp
sub
adc
add
xor
sbb
fisub
outs
sbb
ss
and
mov
xor
dec
addr16
mov
jmp
cvttps2pi
push
push
add
lea
jg
sub
out
hlt
scas
iret
les
aad
xlat
dec
xchg
test
std
mov
ror
and
mov
das
aas
pushf
mov
push
inc
iret
inc
(bad)
cmc
std
cmps
push
xchg
push
ret
imul
xor
cmp
pop
fwait
push
jmp
mov
push
xchg
push
dec
mov
imul
sbb
lahf
push
std
dec
xor
inc
lock
es
and
loopne
hlt
sti
push
jb
mov
iret
dec
scas
jl
aad
ins
cmps
pop
xchg
mov
dec
dec
test
push
inc
adc
ret
test
jns
mov
cmp
std
add
jb
inc
out
adc
retf
imul
add
add
movs
stos
fmul
stos
cld
or
jb
in
sbb
dec
mov
ins
mov
ins
jle
lods
sti
test
xchg
adc
fistp
rol
cmc
leave
inc
mov
lds
cmps
cmc
fwait
ja
xor
bound
pop
leave
push
adc
sbb
mov
repz
(bad)
push
lock
in
shl
daa
ret
stc
aas
inc
jnp
pop
fcom
(bad)
cli
mov
test
inc
daa
pusha
xchg
xchg
repz
mov
retf
xor
or
ins
mov
adc
cmp
fild
gs
loop
dec
xchg
dec
add
test
fwait
jns
sbb
out
cmp
cmovl
xchg
xchg
cmp
mov
jb
xchg
cmp
xchg
mov
fsubr
outs
(bad)
adc
add
push
imul
sahf
or
inc
or
addr16
out
gs
fldcw
push
sar
lahf
jle
fimul
dec
push
mov
cmp
pop
push
imul
(bad)
pop
mov
leave
add
fisttp
nop
inc
mov
sub
mov
ret
mov
test
cmp
aam
mov
mov
xchg
mov
ret
cmps
cdq
fimul
adc
or
test
idiv
mov
aad
rcr
rcl
js
or
jno
or
and
and
or
into
loopne
dec
es
gs
sbb
pop
mov
xchg
aad
jge
mov
jecxz
push
pop
push
jp
add
sub
in
xchg
push
xchg
cdq
xchg
outs
jg
and
pop
addr16
adc
iret
and
cmp
dec
xchg
dec
ret
mov
arpl
mov
mov
dec
mov
sub
aam
shl
stos
popa
sar
cmp
inc
shr
pop
enter
retf
fwait
enterw
fwait
sub
popf
in
add
pop
imul
sti
jb
xchg
inc
pop
sbb
cmps
push
aam
push
mov
test
inc
std
in
call
jmp
adc
dec
or
pop
int
push
sbb
imul
inc
std
iret
inc
fsubr
mov
xor
mov
lds
out
jns
pop
mov
sub
ds
mov
test
enter
(bad)
adc
lock
out
lea
(bad)
data16
inc
fisttp
(bad)
mov
pop
loope
mov
add
not
test
(bad)
cmps
push
jnp
pop
out
rol
and
shl
imul
sahf
dec
jecxz
sub
jne
hlt
jmp
out
mov
loop
push
lock
and
jne
stos
xchg
adc
pop
pop
xor
dec
mov
bound
imul
or
outs
mov
cmp
add
or
mov
jne
mov
inc
cdq
in
xchg
pushf
ins
ins
iret
cwde
fnsave
loop
cmp
pop
into
in
cld
xchg
arpl
pop
and
pop
xchg
sub
ret
cs
push
xor
and
sbb
add
fsubr
(bad)
jnp
cmp
cmp
add
mov
xchg
mov
jo
jmp
xchg
push
mov
fisub
xchg
xchg
mov
data16
jo
and
cwde
and
adc
sub
sub
fs
retf
enter
aad
pusha
pop
imul
xchg
cmps
dec
push
daa
loope
movs
and
adc
test
ds
ret
out
ror
xor
jge
pop
test
pop
sub
ins
sar
dec
push
leave
jae
push
fs
adc
jmp
mov
scas
push
outs
pop
scas
in
or
xchg
loope
es
jecxz
call
mov
pop
inc
aad
lahf
mov
jp
inc
mov
push
push
push
pop
out
(bad)
cld
out
lock
push
sbb
dec
mov
mov
jmp
sbb
mov
movs
clc
sub
push
push
(bad)
xchg
push
ins
pop
cmp
push
aam
cmp
rcl
ret
or
dec
dec
ficomp
xor
jmp
(bad)
mov
xchg
push
jle
push
fdivr
sub
stos
lods
stos
pop
mov
push
test
push
jo
hlt
mov
xchg
addr16
jle
cmp
cmp
inc
pop
fcomip
es
jp
shl
push
or
aad
je
and
or
and
aad
pop
mov
mov
fmulp
push
mov
xchg
rcl
pop
shr
lods
sahf
cmp
movs
jno
dec
out
out
xor
adc
mov
ds
mov
inc
dec
inc
jns
cmp
fdivr
aam
icebp
jge
dec
enter
inc
ror
imul
ficomp
cli
mov
pop
cmps
inc
cmp
adc
sbb
xchg
retf
movs
mov
stc
int
adc
mov
xor
addr16
pop
daa
retf
cmps
retf
fs
les
jns
rcr
sbb
inc
inc
ins
sbb
into
cmp
xchg
movs
out
sbb
fidiv
and
movs
mov
push
mov
leave
mov
lea
shl
(bad)
adc
std
cmp
fidivr
std
adc
and
popf
cmp
inc
daa
or
cmp
(bad)
xchg
cmc
div
xchg
cmp
ror
adc
mov
sub
push
jae
loopne
arpl
loopne
sbb
mov
dec
dec
rcr
repz
ret
or
pop
adc
pop
daa
movs
pop
mov
div
retf
jle
inc
pushw
adc
dec
xchg
aaa
repnz
pop
push
jp
repnz
(bad)
pop
sti
xor
cmps
sti
sub
loopne
inc
push
pop
xchg
mov
call
out
sahf
daa
in
dec
stos
pusha
call
push
cs
mov
push
mov
dec
jo
arpl
(bad)
jne
stos
cmps
mov
mov
push
mov
stos
dec
add
dec
pusha
scas
and
pusha
movs
push
push
mov
enter
pop
scas
or
jge
iret
mov
xor
adc
push
ss
jne
add
test
and
fwait
test
xor
dec
mov
mov
mov
pushf
loope
inc
pop
(bad)
ins
imul
outs
mov
inc
int3
cmps
aam
or
or
sub
rcr
jne
stos
and
xor
mov
pop
mov
or
dec
xor
rcr
jle
adc
mov
and
retf
ror
addr16
add
in
ficomp
ins
mov
cmps
mov
mov
pushf
repz
xor
mov
cmp
inc
cdq
outs
cmp
(bad)
das
jecxz
outs
xor
or
dec
ret
or
cmp
pop
xor
xor
cli
jge
jmp
sub
ret
enter
push
or
jmp
dec
inc
movs
jecxz
add
cmp
or
js
sub
hlt
mov
sbb
xchg
jge
mov
(bad)
out
dec
jmp
aaa
mov
adc
addr16
mov
sbb
das
fwait
test
lods
jmp
movs
movs
mov
push
dec
push
dec
out
fwait
stos
les
cli
into
test
dec
repnz
fisubr
jmp
dec
rol
add
dec
jno
aad
inc
xchg
lods
cmp
mov
push
fistp
fwait
add
pop
mov
sar
and
popf
mov
imul
scas
scas
inc
mov
repz
(bad)
pushf
sti
(bad)
hlt
sbb
lods
std
sbb
or
(bad)
dec
xor
inc
add
cld
fldenv
fisubr
add
and
cmps
sbb
retf
pop
mov
test
scas
stos
and
in
push
shr
inc
int
imul
rdtsc
fldenv
lahf
xlat
jmp
sbb
fstp
adc
rcr
xchg
sub
pusha
gs
mov
adc
sbb
in
jo
sbb
jg
outs
sub
or
mov
outs
pusha
xchg
loop
add
jbe
jecxz
jne
mov
es
bound
xchg
and
sub
fild
mov
xchg
and
loopne
test
push
js
adc
xchg
jecxz
xor
pop
inc
fimul
(bad)
fidiv
cmc
cmp
dec
int
int
cld
xor
div
mov
push
enter
out
jmp
dec
sbb
push
pop
inc
stos
iret
out
call
sub
sub
rcr
fwait
ror
inc
(bad)
dec
lahf
xor
loop
dec
cmp
mov
pop
int
jb
int3
in
(bad)
xlat
jbe
rcl
push
stos
inc
pop
sti
push
fstp
and
jae
mov
daa
xchg
push
into
adc
adc
aaa
(bad)
xor
jl
out
jp
sbb
stos
cmp
aad
scas
addr16
add
loope
adc
ja
xlat
adc
aas
loope
push
pop
rol
mov
outs
lods
fiadd
cld
retf
dec
rcl
jp
sbb
inc
add
jp
daa
jg
ins
or
sub
xchg
cld
pusha
and
in
mov
mov
cwde
sub
and
mov
dec
shl
or
sar
sbb
nop
loopne
mov
cmp
cwde
mov
imul
inc
rol
pop
push
das
xlat
push
frstor
pusha
addr16
cwde
jg
sbb
int3
and
ja
sub
mov
and
scas
dec
adc
xlat
mov
inc
jnp
(bad)
xor
data16
stos
loopne
mov
pop
(bad)
mov
lock
jle
(bad)
das
arpl
jno
mov
push
sbb
jnp
imul
add
jo
rcr
scas
push
sub
push
mov
cs
mov
das
or
mov
fdiv
mov
mov
jb
mov
sbb
ja
enter
and
ficomp
arpl
jo
adc
and
or
mov
and
inc
dec
mov
stos
sbb
xchg
and
cwde
and
fsubr
gs
fs
aaa
sbb
xchg
adc
sub
rcr
and
push
sub
xor
scas
int3
jecxz
or
inc
xor
out
and
mov
or
pop
les
pushf
retf
push
jmp
rcl
jecxz
mov
stos
push
iret
xor
inc
out
sbb
pusha
aas
or
cli
fcom
sahf
imul
das
add
jmp
ss
inc
in
add
ffreep
xor
push
sbb
jle
cmp
jns
std
cld
push
pop
sbb
stc
in
fcomp
add
and
loope
ja
inc
cmps
sbb
add
push
mov
icebp
aad
dec
or
xchg
ins
(bad)
out
ret
xchg
cmp
xchg
add
vmread
sbb
mov
mov
sbb
sbb
jmp
adc
xchg
lods
xor
push
or
sbb
lock
xlat
mov
enter
sbb
mov
mov
and
enter
add
push
in
cdq
add
loop
test
mov
jmp
out
outs
pop
adc
inc
inc
xor
inc
pop
fmul
push
cmp
mov
je
outs
scas
pop
outs
lods
mov
fwait
pop
iret
retf
shl
sub
icebp
mov
cdq
sbb
stc
pop
mov
fwait
lods
cmp
out
leave
jbe
pop
mov
add
out
call
repnz
call
lods
and
lea
push
mov
inc
cmp
xchg
pop
int3
aas
xchg
fcomi
push
repnz
jo
jne
or
sti
add
jno
inc
rcl
mov
rcr
aam
pop
adc
xchg
movs
fld
sahf
jne
rcl
jg
daa
(bad)
push
mov
jl
mov
mov
or
or
js
jmp
dec
int
es
(bad)
pop
test
outs
xor
and
ss
loop
loopne
and
gs
aas
shr
inc
mov
xchg
push
mov
sub
xchg
xchg
test
jmp
adc
ret
or
pop
cli
arpl
cli
pushf
es
xchg
popa
xor
arpl
push
cld
inc
in
inc
std
out
nop
cmp
or
(bad)
imul
fwait
sub
cld
dec
cld
add
jnp
call
loop
xchg
push
inc
pop
cmp
fsubr
pushf
rcl
into
leave
dec
push
pop
jle
jp
pop
xchg
jne
(bad)
fild
int
adc
not
adc
cmp
sar
out
test
ja
out
movs
jg
call
xchg
adc
mov
jbe
int3
push
stos
mov
jmp
add
movs
jnp
mov
js
inc
stc
push
xor
outs
or
add
push
cli
mov
cmps
aaa
mov
mov
imul
mov
sar
sbb
ret
add
hlt
hlt
js
sub
fisub
js
and
sahf
pop
and
push
popf
cs
xchg
popf
inc
xchg
cmp
inc
lods
(bad)
pop
add
xchg
adc
out
xor
dec
loop
inc
ins
(bad)
push
adc
loope
cld
rol
fcom
fidivr
hlt
push
dec
dec
out
sar
in
sti
mov
(bad)
repz
pop
or
movs
mov
sbb
and
(bad)
cmp
inc
stos
out
mov
icebp
sub
gs
call
jg
aad
sbb
rol
ret
iret
and
pop
adc
ds
in
xor
xchg
rcl
push
pop
stos
out
jg
call
adc
cmp
xchg
push
cmps
xlat
inc
xchg
dec
xor
and
mov
into
adc
xor
push
adc
xchg
push
ds
(bad)
popa
test
sbb
call
sub
pop
mul
push
mov
jmp
movs
and
int3
sbb
(bad)
sbb
jle
mov
bound
cmp
push
js
ss
sub
cmp
fcom
or
rol
and
fld
into
and
cmp
inc
pop
ds
mov
sub
sar
mov
add
fsubr
int
std
adc
cmp
add
ins
dec
sub
jmp
lods
loope
sahf
fwait
int3
data16
fidiv
int
mov
add
loope
pop
leave
add
sbb
add
or
retf
mov
js
xor
and
int
dec
mov
xchg
or
xor
call
mov
inc
loopne
push
mov
xor
call
imul
ins
xchg
scas
hlt
xor
and
sub
sub
(bad)
xchg
loopne
cmp
lea
mov
call
adc
jmp
adc
nop
sub
fdiv
jl
inc
call
xchg
stc
shl
inc
mov
jnp
je
mov
push
mov
in
repnz
push
sub
sbb
jne
call
pusha
xchg
in
mov
jle
into
push
push
int
scas
mov
push
dec
pop
and
inc
mov
(bad)
out
mov
mov
gs
(bad)
sti
dec
xchg
je
stos
js
adc
cmps
push
movs
daa
imul
jl
xor
int3
xchg
pop
lods
aas
ret
dec
ja
mov
sbb
sahf
dec
repz
js
or
in
pop
jnp
sti
ss
rcl
js
test
ds
cmp
jmp
adc
pop
dec
xchg
in
movaps
sbb
sub
push
imul
mov
cmp
xor
and
mov
inc
xchg
ins
(bad)
ins
fidiv
ficom
xor
imul
popa
loope
lock
mov
int3
leave
cdq
cmps
test
mov
addr16
xor
xchg
xchg
dec
cli
xchg
pop
scas
adc
mov
jb
mov
dec
adc
pop
sbb
loope
mov
std
xlat
jle
mov
cmp
sub
test
jae
mov
inc
inc
jne
adc
aad
fxrstor
adc
sub
add
rcr
retf
cmp
iret
movs
imul
rcr
jmp
jp
inc
mov
push
repnz
xor
pusha
or
xor
push
push
xchg
push
cwde
sbb
lock
jb
pop
fimul
cmp
aad
push
std
adc
dec
sbb
inc
sbb
jmp
(bad)
fnstsw
cld
pop
jns
mov
mov
and
pop
mov
add
cmps
mov
js
xor
punpcklwd
mov
(bad)
dec
nop
pusha
xor
mov
repnz
sbb
mov
in
fwait
pushf
sub
jbe
fst
sub
daa
call
(bad)
dec
xchg
mov
scas
pusha
fsub
xor
dec
sub
and
push
ss
dec
xchg
sub
jns
nop
jnp
pop
or
dec
pop
jno
fs
sbb
loop
push
inc
push
pop
imul
sar
pop
es
pop
push
inc
ins
out
mov
lock
sbb
inc
pop
outs
add
or
push
cmp
push
(bad)
rcl
mov
aaa
arpl
cmp
xchg
aaa
sub
jno
jecxz
jle
cwde
push
retf
mov
jne
xchg
sbb
or
push
std
jg
mov
xor
sbb
dec
add
cdq
enter
pop
cmp
lods
dec
or
cmps
mov
jbe
push
imul
cmp
xlat
mov
fadd
bound
fnstcw
ror
pushf
and
je
movs
mov
js
jnp
int
(bad)
push
mov
scas
or
sbb
sbb
outs
cmp
xchg
loopne
mov
lds
(bad)
shl
sbb
test
fisttp
loop
fadd
popa
outs
out
adc
scas
xor
int
pop
push
dec
xor
mov
cmp
mov
pop
stos
daa
mov
mov
cmps
jmp
dec
add
fwait
jge
pushf
inc
mov
pop
fstp
popf
inc
cld
imul
or
inc
mov
std
sar
mul
je
hlt
loopne
js
mov
mov
fcmovnb
add
daa
aaa
(bad)
push
jnp
cmp
fstp
addps
xchg
mov
cmp
and
aad
adc
push
push
or
ret
stos
inc
(bad)
repnz
inc
jg
adc
retf
adc
mov
cmp
push
test
mov
das
cwde
loopne
mov
addr16
cmp
ret
jb
(bad)
call
js
mov
movs
push
mov
push
ins
push
jns
inc
mov
cmp
mov
sar
(bad)
fcomp
adc
cmp
dec
inc
sbb
pusha
fist
push
sub
je
mov
arpl
into
cmp
mov
push
inc
icebp
and
push
jle
ror
jge
aas
dec
jns
jb
or
stos
movs
mov
inc
(bad)
sar
dec
or
jmp
pop
stc
sbb
push
or
out
mov
push
push
dec
clc
mov
jg
pop
and
clc
cmp
sub
add
push
cmps
ins
adc
sbb
into
jnp
push
(bad)
out
stc
stos
gs
sbb
jge
mov
fldenv
adc
mov
rcl
push
add
lahf
mov
imul
sti
div
add
xchg
ds
xchg
sub
xchg
popf
pop
sub
aas
inc
imul
sahf
inc
gs
popf
ins
mov
in
bound
adc
shr
ret
mov
out
les
and
dec
ja
xor
scas
and
cmp
inc
mov
ins
test
lods
jge
xchg
movs
jecxz
sub
push
test
dec
neg
push
lods
push
mov
push
push
arpl
in
add
retf
push
fld
mov
dec
xor
cmps
cmps
cmp
loop
fcomp
retf
in
add
mov
loopne
sub
jmp
fsubp
xchg
shl
pusha
xchg
(bad)
mov
jge
cmps
cmp
ret
sub
dec
(bad)
(bad)
int3
hlt
cmp
ins
dec
aam
fcom
xor
sub
loope
lea
and
jp
repnz
mov
xor
cdq
add
and
mov
daa
mov
movnti
ins
jno
dec
jo
cmp
out
aam
sub
push
cmp
mov
shl
mov
or
daa
push
push
sbb
loope
rcl
in
sub
aas
frndint
push
mov
push
call
inc
lods
jo
(bad)
cmps
cmp
mov
add
mov
ja
adc
adc
dec
out
fsub
mov
pop
and
test
int3
mov
es
pop
aaa
clc
shl
sub
adc
iret
retf
sahf
(bad)
movs
push
inc
sub
inc
inc
or
add
xlat
cmps
add
pop
repz
into
jmp
push
imul
mov
sbb
imul
pop
inc
sahf
adc
pusha
into
mov
or
js
test
mov
retf
mov
in
cmp
stc
jbe
ja
pusha
adc
ror
in
add
std
xchg
inc
lods
addr16
xor
lahf
mov
sbb
push
or
mov
imul
xchg
enter
call
or
lods
jnp
push
retf
loop
cmps
psrlq
mov
hlt
test
adc
push
jle
xchg
add
sub
(bad)
xchg
jns
sub
lods
push
outs
(bad)
push
stos
mov
sbb
jno
ret
in
dec
outs
xchg
scas
mov
(bad)
cmp
and
int
jmp
mov
xchg
rol
cld
cmp
mov
sub
xchg
jns
pop
adc
push
push
xor
jnp
sbb
mov
push
push
sbb
pop
test
mov
jge
in
cmc
aas
xchg
cmp
std
jnp
scas
cmp
shl
loope
ret
mov
jmp
pop
fild
leave
in
mov
imul
lods
xchg
or
enter
add
pop
dec
cli
test
out
in
and
add
jae
push
xor
push
push
xor
pinsrw
ins
mov
sbb
jmp
inc
or
and
mov
jo
cwde
fcom
(bad)
sbb
push
xchg
or
add
sbb
in
ja
cmp
sub
xchg
jns
ret
ficomp
xchg
ins
xchg
jl
es
fidiv
inc
push
repnz
out
pop
fisubr
ret
sar
or
inc
enter
sub
repz
add
cmps
shl
inc
push
add
inc
call
shl
sub
mov
mov
ficomp
ror
jp
jl
sub
push
in
jnp
push
pushf
sbb
mov
loop
push
mov
lds
out
cwde
scas
jb
std
repz
int
sbb
add
adc
call
push
or
push
cli
mov
xchg
sub
xlat
pop
and
(bad)
movs
fmul
xor
dec
es
gs
jg
pop
ret
sbb
int3
cli
or
fdiv
ss
mov
stos
fld
push
lds
test
retf
fwait
inc
repz
outs
push
dec
mov
push
(bad)
push
xor
pusha
scas
and
iret
cmp
push
jecxz
leave
mov
test
jge
jmp
mov
cmp
not
(bad)
dec
jae
push
out
ds
pop
mov
mov
mov
inc
out
fst
xchg
aaa
jo
ror
inc
shl
and
cmp
(bad)
out
inc
and
push
pushf
dec
cmp
or
cmps
xchg
out
pop
jmp
daa
outs
mov
dec
mov
lea
push
ja
dec
cdq
jmp
push
movs
fcom
bound
pop
dec
das
inc
push
jmp
inc
push
cmp
test
dec
sbb
and
adc
cmp
inc
or
mov
or
fst
adc
ret
xor
mov
je
sub
jb
cmp
inc
in
arpl
inc
xor
lods
xchg
sbb
ins
pop
xlat
push
in
xor
sbb
xchg
cwde
push
jmp
iret
jae
mov
test
imul
retf
(bad)
retf
mov
ins
cmc
mov
aaa
jnp
in
stos
fild
inc
addr16
push
pop
repnz
xor
adc
lods
xchg
adc
loop
adc
xor
push
xchg
add
push
xchg
mov
mov
jle
xchg
mov
lods
inc
push
xor
jmp
imul
and
adc
push
icebp
mov
inc
jbe
sbb
xor
cmps
popa
cli
dec
cmp
xchg
push
clc
repz
popf
ror
cmp
nop
pop
(bad)
or
cmc
mov
mov
outs
sub
in
fisubr
loopne
jns
punpckldq
pop
daa
inc
fidivr
out
and
ins
mov
push
push
fcmove
enter
inc
js
mov
scas
sub
sub
retf
jge
or
pop
xchg
fisttp
add
and
mov
loope
popf
(bad)
or
jae
imul
daa
cmp
mov
(bad)
fldcw
add
adc
add
imul
loope
and
jae
push
xchg
sbb
outs
in
xor
rol
and
retf
out
add
adc
add
jmp
jo
jo
mov
mov
in
lahf
and
das
scas
pop
pop
mov
pop
xchg
pop
push
fild
xor
stc
fst
stos
push
cwde
mov
pop
ss
xchg
call
or
jg
mov
pop
std
stos
jle
pop
mov
sub
call
leave
mov
dec
mov
ins
call
ret
mov
sbb
sub
dec
pop
movs
mov
dec
jno
cwde
repnz
jne
leave
inc
adc
in
pop
jle
int
daa
xchg
cmc
fistp
sub
add
pop
lock
out
pop
inc
mov
xchg
mov
sbb
xor
aad
xor
adc
scas
arpl
nop
mov
popf
ret
jb
call
sbb
mov
xchg
adc
add
mov
(bad)
cmps
xchg
jmp
jmp
cmc
fs
mov
jg
inc
mov
xchg
sbb
(bad)
popa
cmp
aaa
mov
push
aaa
loop
pop
push
(bad)
repz
adc
xchg
jge
xlat
inc
and
and
or
jne
addr16
int3
push
movs
das
add
inc
lea
in
push
retf
mov
bound
dec
mov
cdq
push
call
leave
add
xchg
ret
xchg
movs
inc
push
ror
mov
outs
mov
mov
mov
pop
xchg
addr16
xchg
sub
fisub
cs
call
pushf
dec
popa
popf
gs
sub
out
jmp
repz
push
ins
push
dec
inc
adc
xor
dec
push
cs
ret
ins
lods
cmp
call
test
fild
or
addr16
and
mov
movs
mov
les
mov
mov
retf
mov
mov
js
dec
lock
cwde
cli
aas
out
mov
jp
or
shl
out
mov
cld
adc
stc
movs
movs
push
test
xchg
inc
xchg
cmp
mov
scas
(bad)
jnp
imul
cdq
fs
cli
jo
mov
shl
in
or
or
ss
push
ret
ret
mov
sub
movs
inc
cs
cmps
or
pop
or
in
ss
movs
int3
jl
test
mov
ror
inc
push
xor
shr
pop
xor
jne
mov
das
pop
sub
das
loope
jb
and
jns
or
mov
scas
add
or
les
jbe
out
int
xchg
pop
sbb
data16
add
pop
add
dec
clc
mov
inc
xor
pop
rcl
les
js
aas
dec
lahf
cmc
(bad)
rcl
out
xor
pop
jmp
test
xchg
jl
dec
repnz
inc
test
mov
int
or
cmp
push
cmp
mov
mov
enter
pop
loop
jnp
push
bound
cdq
les
or
mov
inc
xchg
in
xchg
mov
xor
mov
scas
fcom
in
call
les
out
dec
ror
push
daa
lea
out
cmp
idiv
xchg
fcmovb
mov
imul
loop
push
lds
cmp
je
mov
in
push
mov
dec
push
stos
sbb
std
loopne
repnz
and
pop
aad
clc
dec
push
and
int3
sbb
add
cli
pop
shl
inc
push
out
and
push
jmp
push
(bad)
mov
daa
imul
sub
xchg
pop
jnp
imul
fbld
sub
mov
mov
pop
call
xor
int
xchg
lahf
lods
push
fst
cmp
dec
add
les
cli
inc
or
and
adc
cwde
scas
es
cmc
xchg
cwde
jne
and
xor
jecxz
mov
push
pop
mov
loop
mov
stos
push
int3
in
data16
push
or
fdiv
dec
out
jb
or
mov
loop
pop
jmp
add
popa
fisub
pop
fld
imul
imul
or
pop
inc
xchg
dec
adc
out
pop
add
cmps
jo
scas
daa
std
or
iret
leave
dec
sbb
jns
sbb
lahf
jle
lock
mov
pop
mov
call
xor
inc
sub
mov
mov
cmp
shr
movs
adc
adc
int3
loopne
sub
shl
mov
push
jbe
jnp
pop
ror
push
test
(bad)
sbb
sbb
xchg
cmp
in
xchg
test
inc
int3
cmc
xor
dec
pop
sbb
push
sbb
cmp
scas
mov
dec
in
jecxz
jp
shl
pop
pop
dec
lock
je
push
and
lods
mov
mov
xchg
sub
fidiv
sbb
sbb
stc
jge
inc
xchg
repz
mov
shr
ins
fcmovu
lods
add
sub
pop
(bad)
cmp
inc
loope
cmp
mov
mov
aaa
sti
scas
add
push
sub
mov
in
ret
outs
aad
add
jns
cmc
(bad)
(bad)
ja
mov
adc
jno
mov
pop
nop
push
push
(bad)
loop
imul
in
call
mov
and
enter
pop
push
outs
repz
jne
sbb
sahf
aam
xchg
(bad)
mov
popa
repz
adc
inc
dec
sub
jecxz
retf
adc
xor
fimul
dec
inc
sub
push
arpl
std
cld
inc
lods
push
sub
push
push
mov
pop
mov
hlt
pop
pop
clc
mul
nop
mov
dec
gs
(bad)
pop
dec
add
push
mov
(bad)
jle
lods
mov
add
jge
out
xchg
jne
jns
pusha
add
dec
les
sub
hlt
xchg
out
adc
push
add
pop
mov
and
xchg
mov
sub
popaw
int3
mov
fwait
mov
retf
mov
outs
cmp
sub
sbb
mov
fdivp
hlt
rcl
mov
jp
add
jb
daa
mov
sti
or
movs
add
mov
inc
popf
mov
pop
jb
jg
xchg
push
loopne
sbb
stos
sbb
push
bound
jo
lahf
pop
retf
sbb
movs
dec
gs
mov
and
dec
out
dec
dec
fst
repnz
pushf
or
xlat
aaa
fsubr
push
xchg
inc
iret
std
jne
dec
fnstenv
sub
jmp
push
mov
mul
daa
pop
push
movlps
push
gs
fistp
clc
popa
jns
cmp
mov
dec
mov
sbb
(bad)
inc
enter
jbe
(bad)
shr
mov
rcl
leave
xor
or
cld
cmps
sub
cmp
sti
mov
mov
ja
sub
outs
das
jp
add
xor
mov
mov
mov
mov
es
inc
fsubr
scas
mov
lods
cs
mov
push
sbb
push
mov
mov
sub
xor
in
push
sub
pusha
clc
mov
fwait
push
push
push
xchg
mov
sti
add
in
xor
pop
jae
and
fld
sub
sub
loopne
(bad)
loopne
shr
movs
bound
jmp
in
push
inc
rol
jmp
add
pushf
cmps
and
and
hlt
ja
dec
fmul
fisub
aas
imul
and
sbb
xor
or
xchg
repnz
aaa
inc
add
mov
imul
mov
pop
sbb
dec
call
cmp
mov
in
push
movs
sub
in
jb
jp
scas
xchg
dec
aam
dec
sbb
and
sbb
xlat
mov
ficom
jb
add
dec
xlat
mov
(bad)
or
mov
mov
jp
shr
bound
aad
scas
arpl
mov
add
(bad)
retf
jl
cmps
xor
fisub
xor
and
daa
ret
out
inc
lds
not
inc
(bad)
pushf
push
test
jecxz
mov
jp
push
dec
dec
and
lds
popa
cmp
loop
clc
les
cmp
xlat
(bad)
and
jmp
adc
ror
sub
and
rcl
add
sbb
xchg
mov
fldenv
or
add
in
mov
cdq
cld
aaa
fcmovb
sahf
mov
fs
pop
call
jle
clc
test
fucomi
movs
push
push
loop
sub
push
sub
pop
pop
xchg
pop
xor
dec
mov
daa
pop
or
sbb
dec
imul
cmp
cdq
sub
les
out
and
out
cld
nop
out
jl
mov
stos
iret
xchg
push
mov
idiv
int
lahf
outs
mov
and
inc
inc
jg
lock
xchg
mov
aad
mov
(bad)
push
cwde
adc
out
add
clc
cmp
push
outs
sbb
sbb
inc
cmp
jo
add
inc
scas
xchg
jp
int3
xor
jmp
cdq
push
mov
or
xlat
mov
dec
adc
xchg
test
shl
cmp
pop
cmps
iret
je
stos
dec
movs
xor
dec
movs
fs
inc
mov
dec
in
ins
pop
out
mov
ret
inc
mov
adc
lea
push
xlat
and
pop
out
inc
sbb
in
test
(bad)
pop
adc
sbb
push
test
shr
shl
and
pop
pop
inc
mov
or
cmc
mov
and
int3
pop
cli
std
cmps
inc
and
fsubr
sar
push
je
sub
das
ds
out
stc
cli
jo
xor
dec
dec
adc
test
nop
dec
(bad)
lock
dec
sub
jmp
sbb
push
std
mov
iret
stos
fist
and
daa
dec
lds
cmps
pop
int
jmp
movs
inc
jno
retf
xchg
lods
xchg
xor
push
push
std
retf
aas
fisub
or
mov
xor
das
in
cmps
pop
push
stos
add
test
or
sub
fisttp
add
push
daa
aam
test
ins
sar
aas
not
das
leave
sbb
push
jno
bound
push
es
rcl
test
sahf
mov
out
cwde
jns
jmp
jns
sbb
out
jle
xor
cmps
add
lahf
inc
dec
sub
dec
(bad)
inc
enter
xor
cs
xchg
jmp
cs
imul
adc
sahf
and
enter
(bad)
xor
int
mov
fwait
sar
jecxz
cmps
aad
ja
sbb
fbstp
ffreep
mov
sbb
xor
(bad)
hlt
xor
sar
int
jmp
movs
jmp
inc
and
fcom
jge
jbe
clc
imul
dec
out
inc
pop
pusha
addr16
js
add
push
push
push
in
mov
mov
cmps
or
fcmovnu
pop
sub
fldcw
or
aas
mov
inc
lods
mov
xor
jg
pop
scas
je
mov
jge
(bad)
aad
scas
ret
or
jmp
and
pop
sbb
push
dec
cld
dec
lods
outs
adc
mov
sub
adc
mov
shr
xor
pop
jl
aad
idiv
dec
inc
cmp
inc
adc
jl
div
push
fs
jge
adc
inc
adc
cmps
xor
mov
(bad)
je
(bad)
mov
add
das
jns
fadd
in
out
push
fmul
fcom
xor
xchg
sbb
sbb
pop
push
sahf
pushf
outs
test
arpl
push
imul
sbb
ret
rcl
push
stc
or
shl
lods
(bad)
mov
inc
frstor
rcr
push
jbe
call
(bad)
aas
push
rol
(bad)
xchg
idiv
clc
pop
and
hlt
adc
loopne
jae
(bad)
and
addr16
fmul
mov
les
push
lea
adc
and
pop
pusha
push
das
jge
nop
push
shl
cmp
cmp
aam
jge
out
in
out
(bad)
cmp
dec
mov
mov
mov
rol
aas
fdivp
adc
fs
push
addr16
sub
gs
icebp
les
ins
push
jmp
(bad)
fwait
mov
scas
scas
mov
dec
mov
xor
xchg
jl
test
mov
(bad)
arpl
xlat
scas
stos
in
and
bound
lock
mov
jecxz
cdq
stos
cmc
test
das
icebp
gs
push
je
xchg
rcl
daa
cmp
mov
iret
sbb
mov
cmp
cmps
bound
cmp
pop
or
inc
mov
dec
sub
sbb
sub
jecxz
out
pop
cmp
xor
daa
in
jmp
push
xor
mov
push
jge
xchg
jb
push
test
out
jno
adc
lods
mov
vsubps
xor
repnz
push
xlat
enter
cmps
imul
rcr
dec
mov
mov
loop
jl
sub
mov
int3
and
push
or
xlat
and
pop
pop
add
retf
popa
ja
mov
mov
mov
sbb
cmps
test
test
mov
and
mov
adc
das
mov
jge
loope
ss
addr16
push
ret
dec
fsub
mov
mov
xor
aam
or
mov
pop
scas
mov
popf
fst
data16
cli
add
retf
mov
test
sbb
add
mov
sub
mov
data16
sub
fcom
(bad)
mov
lods
sbb
mov
jne
mov
mov
jg
dec
(bad)
(bad)
jmp
push
dec
jp
iret
cwde
fstp
push
sub
adc
cmp
cmp
sub
pop
pop
jno
sbb
xor
popa
out
(bad)
inc
sub
pushf
xchg
and
jg
mov
xor
mov
mov
sti
xor
mov
in
push
ins
(bad)
nop
push
sbb
in
mov
hlt
shl
cmp
xchg
pop
inc
(bad)
rol
pop
mov
sub
xchg
xchg
scas
js
leave
js
aad
in
(bad)
sbb
jle
or
jo
pop
pop
arpl
dec
ficomp
cmc
jnp
sub
mov
cmp
push
inc
push
mov
sti
fbstp
gs
sub
je
xor
xor
sahf
test
imul
cmp
push
jp
add
in
(bad)
outs
jb
rcl
xor
jl
mov
lahf
inc
enter
jb
add
loopne
pop
inc
add
dec
das
loop
inc
imul
(bad)
std
in
loop
adc
mov
push
int
into
retf
es
cld
loopne
scas
mul
hlt
mov
cmp
aad
mov
retf
scas
mov
push
out
dec
imul
cdq
mov
mov
test
popa
dec
mov
in
aaa
out
push
in
fwait
call
xor
pop
mov
(bad)
aad
add
sbb
movs
hlt
mov
mov
pop
sub
cmp
adc
test
adc
ins
loopne
xor
cmp
push
xor
xor
lds
sub
xbegin
and
mov
inc
mov
dec
mov
adc
xor
out
js
rol
in
out
icebp
cmp
(bad)
in
pop
mov
nop
ds
push
cli
outs
cdq
push
icebp
bound
ret
jb
std
fst
out
data16
movs
ins
cmp
aad
retf
mov
cmps
fsub
pop
or
xchg
in
int
cwde
(bad)
push
out
imul
mov
stos
jp
push
lds
cdq
dec
pop
pop
gs
pop
xchg
std
dec
sbb
xchg
mov
push
lods
xchg
inc
loopne
jle
retf
and
sahf
jb
sub
cld
clc
sub
cwde
mov
sbb
test
rol
ret
aad
icebp
fidivr
or
push
in
add
aam
popa
ret
xchg
ds
mov
cmp
jl
pop
push
iret
xor
inc
xor
push
mov
add
lahf
js
ja
addr16
cmp
jnp
jecxz
inc
xlat
in
add
rcl
outs
sbb
call
sub
into
rol
in
and
stos
enter
lds
imul
jg
cmp
clc
cmp
shl
pop
mov
dec
sahf
stos
pop
rcr
bound
push
mov
sbb
adc
dec
jae
test
popf
and
mov
xor
jbe
adc
push
ins
cmp
data16
push
jnp
fs
and
loopne
and
sar
xor
clc
xor
sar
repnz
push
cmp
loope
aam
outs
and
adc
inc
hlt
cmps
test
out
sbb
inc
loopne
dec
jno
int3
lock
mov
std
sbb
movs
test
fnstsw
xor
jle
adc
jl
add
das
imul
std
cwde
int
cwde
xchg
outs
pop
push
dec
dec
repz
call
ss
adc
or
xor
inc
dec
jnp
(bad)
ret
pop
or
and
pop
mov
dec
or
push
jmp
push
bound
scas
push
jp
cmp
sub
mov
push
aam
adc
pop
and
mov
popf
leave
mov
or
jl
cmp
enter
xlat
mov
mov
mov
les
lods
pop
jbe
cwde
push
ds
dec
test
neg
fwait
data16
xlat
mov
push
adc
push
mov
cmp
mov
jo
in
loopne
cld
inc
sahf
imul
jp
xor
ret
lock
add
push
push
xor
test
cmp
sahf
or
pop
(bad)
rcl
das
push
sbb
jge
repz
pusha
das
jp
mov
pop
sub
fmul
retf
test
or
mov
mov
mov
outs
repz
scas
inc
std
cs
mov
mov
pop
into
sbb
retf
adc
lea
int3
push
clc
and
aam
mov
mov
and
or
ror
call
mov
adc
imul
es
cmp
gs
fisubr
jae
lds
ss
enter
out
(bad)
xchg
int
stc
movs
rol
repz
lods
dec
jg
test
pop
sub
out
push
or
arpl
and
sbb
add
xor
fsubr
lea
pop
stos
push
das
sti
shl
sub
and
cmps
pop
xchg
int3
push
sbb
sbb
pop
retf
repnz
popa
lods
in
sub
fadd
lods
addr16
hlt
in
retf
add
pop
ret
test
mov
std
inc
mov
pop
lods
jle
add
dec
inc
cli
loop
xor
(bad)
fsub
lock
mov
sub
and
sub
ror
bound
push
setne
sub
jg
add
icebp
fsubr
and
adc
popa
pop
xor
pop
mov
je
sbb
es
mov
cmp
jne
loop
sub
push
mov
sbb
(bad)
and
(bad)
loope
inc
jae
cld
(bad)
pop
fcomp
inc
popa
xor
fistp
dec
add
sahf
(bad)
dec
fs
mov
mov
pop
in
ficom
ret
cmp
lock
push
inc
es
push
das
adc
jg
and
inc
xchg
xlat
xlat
mov
jns
mov
adc
repnz
outs
jmp
xor
jmp
test
cdq
pop
sub
call
xchg
ret
outs
cli
(bad)
xchg
sbb
jmp
xor
ror
pushw
mov
add
jbe
push
test
in
std
sub
add
inc
cmps
mov
xor
jp
inc
sbb
shr
data16
mov
dec
fimul
mov
push
scas
add
mov
cmp
popa
jecxz
or
jmp
lahf
stos
jbe
add
mov
fnsave
sub
pop
mov
jmp
or
pop
repz
add
shr
cmp
push
data16
das
dec
add
cs
ja
in
repnz
aas
movs
nop
cmp
mov
mov
call
fwait
cmp
jmp
mov
(bad)
aam
leave
push
sbb
mov
sbb
mov
std
push
xchg
fdivr
sahf
xor
xor
js
addr16
and
imul
inc
test
mov
or
inc
fadd
adc
call
(bad)
mov
and
pop
imul
mov
fbld
inc
mov
inc
cmp
rcr
jmp
out
mov
add
jne
lds
xchg
mov
sub
mov
mov
js
xchg
sbb
xor
unpckhps
push
outs
cmp
(bad)
sub
fild
lods
mov
adc
sub
mov
js
and
cmps
mov
pop
sbb
les
sub
sub
pushf
add
push
sbb
dec
in
loopne
push
adc
fmul
dec
cmps
repnz
lea
sahf
push
sahf
sub
fcomp
xchg
(bad)
sub
push
mov
shr
push
shl
or
jp
test
mov
adc
pusha
jl
cmps
inc
xchg
jno
dec
sahf
adc
and
push
add
pop
dec
or
fld
xchg
cmp
mov
cmp
adc
dec
xor
push
mov
ror
call
mov
cmp
mov
dec
jns
add
jmp
(bad)
retf
loop
lods
ja
sub
push
and
cmp
sub
push
inc
mov
(bad)
aam
addr16
adc
pop
or
pop
fidivr
mov
xchg
cmp
add
pop
pop
xchg
(bad)
aaa
cmps
outs
outs
lahf
(bad)
int
pusha
call
dec
scas
xor
jno
dec
add
add
shl
mov
or
jnp
sbb
xor
movs
jecxz
in
inc
mov
mov
push
mov
ret
and
(bad)
xor
or
add
dec
imul
sbb
(bad)
pop
in
and
push
es
xor
hlt
mov
in
adc
mov
jmp
adc
iret
sar
(bad)
mov
stos
jl
mov
scas
stos
or
jmp
push
jae
clc
mov
(bad)
mov
sbb
cwde
cmps
int
je
cmp
dec
xor
(bad)
xchg
push
xor
out
and
push
push
sahf
lods
(bad)
dec
mov
repz
cwde
arpl
mov
loop
repz
test
sub
retf
mov
scas
js
ja
int3
in
add
lahf
pop
adc
cmp
push
loope
push
jo
(bad)
test
jns
fwait
arpl
js
cmp
mov
push
mov
lea
jns
dec
repz
mov
out
xchg
sbb
iret
retf
leave
add
push
jae
daa
add
mov
sbb
call
(bad)
enter
jmp
(bad)
jmp
loop
and
sbb
push
add
mov
and
in
outs
add
xor
mov
xchg
cmp
pop
pop
mov
mov
mov
mov
mov
outs
jg
mov
stc
cld
pushf
sar
add
or
loopne
push
sbb
call
mov
out
dec
inc
inc
in
sbb
cmp
xchg
mov
loopne
arpl
jp
fidiv
or
and
dec
inc
jge
inc
ins
inc
ss
push
jge
mov
fs
sbb
cmp
jns
add
adc
outs
xchg
push
jl
aas
fidiv
stc
mov
sub
sahf
jo
xchg
jae
call
push
daa
xchg
shl
hlt
push
xchg
lods
xor
std
sub
lea
dec
imul
fcom
imul
sbb
retf
mov
pop
jnp
add
and
stc
add
enter
cmp
xor
arpl
sub
inc
aad
add
xor
xchg
mov
test
inc
sub
jge
sub
pop
inc
jl
stos
sub
sahf
mov
ja
into
push
(bad)
(bad)
pop
jb
loop
hlt
jno
pusha
push
sbb
jo
inc
pusha
or
sub
jne
js
mov
pop
sbb
adc
xchg
dec
jno
in
or
es
addr16
sbb
dec
icebp
sbb
cmp
mov
gs
cmp
loopne
add
xchg
pop
mov
movs
mov
sub
adc
xor
ror
mov
fcom
movs
sti
pop
call
xchg
cmp
ret
lods
test
and
adc
stc
pop
lods
add
xchg
aaa
xchg
push
int
add
sbb
xchg
or
(bad)
bound
mov
jae
fst
mov
lahf
pop
std
cmp
fcmovnbe
mov
mov
mov
loopne
loope
cmp
pop
mov
cmp
add
int3
push
xor
stc
sub
data16
out
mov
std
sbb
pop
xchg
loopne
or
and
inc
cmp
repz
mov
sbb
aas
jmp
jl
xchg
test
or
pop
or
inc
adc
ja
push
daa
mov
adc
cmp
adc
aaa
xchg
and
mov
cmp
leave
into
lods
jb
sbb
and
stos
lds
ficomp
mov
mov
jbe
or
call
xchg
shl
jmp
fstp
jge
hlt
aam
cmp
bound
sub
xchg
into
call
xchg
push
les
shr
test
(bad)
jecxz
xlat
xchg
jl
cmp
outs
jne
ret
daa
aas
adc
mov
xchg
push
pop
mov
inc
mov
(bad)
push
jecxz
arpl
sbb
call
lds
sub
cmps
jg
adc
cli
fimul
inc
fild
ror
not
jne
lea
pop
jmp
jnp
cs
mov
push
pop
dec
push
xor
(bad)
jmp
arpl
outs
add
xchg
pop
popa
fwait
sbb
push
sahf
repnz
and
add
in
jno
xchg
shl
sbb
mov
and
ds
loope
xchg
fnstsw
int3
and
das
xor
or
mov
push
sub
pop
ret
cmp
xchg
mov
and
pop
inc
mov
(bad)
pop
inc
inc
pop
or
or
inc
shr
push
pusha
cmp
lods
(bad)
into
add
les
or
fmul
repnz
and
scas
cmp
xor
adc
mov
add
push
aam
xchg
out
scas
call
jns
scas
ss
hlt
ret
push
xor
dec
retf
xchg
sti
push
jg
repz
inc
jle
cmps
pop
stc
aam
(bad)
adc
pop
pop
sbb
inc
jmp
mov
pop
jnp
inc
ds
mov
(bad)
aam
test
xchg
dec
fnstcw
aaa
pop
pop
jl
xchg
sub
inc
push
jae
sub
cwde
data16
cmp
sub
adc
jo
mov
or
fstp
xchg
jl
rcl
repnz
sysret
mov
xor
pop
jb
sbb
or
in
push
ret
gs
fwait
jmp
js
stc
jae
test
sbb
imul
loop
lea
std
imul
pop
movs
mov
adc
adc
sub
hlt
idiv
scas
jb
scas
mov
adc
int3
jmp
sub
leave
cmp
inc
adc
mov
xchg
sub
jmp
call
cld
loopne
sub
test
ins
push
out
xchg
call
jno
mov
jb
scas
jb
jae
fild
and
(bad)
in
push
aaa
adc
pop
int
fsubr
rcr
inc
jo
stos
sbb
dec
xchg
lahf
jge
shr
rep
mov
mov
(bad)
jecxz
(bad)
dec
cmp
push
out
call
mov
pusha
popf
push
mov
add
loope
movs
or
cld
adc
sub
jb
int
jl
jge
jle
dec
xor
cwde
(bad)
jmp
cmp
adc
jg
retf
(bad)
pop
and
jno
push
jge
add
fsubr
push
retf
movs
outs
shl
loope
fstp
jmp
(bad)
(bad)
xor
lods
mov
mov
pop
lahf
sbb
mov
ds
inc
sbb
dec
or
cmps
xor
mov
cwde
and
sub
sub
lahf
mov
dec
cmp
pop
scas
pop
fimul
dec
inc
fwait
sbb
cmp
arpl
sub
mov
jl
sbb
jmp
xchg
pushf
int3
mov
out
mov
or
mov
jne
stos
loop
(bad)
lods
mov
inc
sbb
xchg
mov
mov
repnz
mov
xchg
mov
jo
sbb
loop
push
les
push
add
dec
outs
cmp
loope
or
cmp
test
inc
adc
ss
fadd
xor
aad
fstp
jge
popa
adc
mov
ja
dec
(bad)
jo
xchg
fcom
cmps
adc
ja
mov
pushf
cmps
(bad)
fiadd
(bad)
and
mov
mov
fadd
les
add
mov
test
mov
pop
inc
push
fwait
(bad)
pop
mov
xchg
imul
fs
xor
sahf
js
shl
ret
jg
test
pop
mov
push
hlt
inc
std
jno
jns
dec
(bad)
jae
lods
mov
mov
std
adc
sub
sub
sub
pop
xor
mov
inc
inc
push
popf
inc
and
sbb
xor
aaa
mov
sub
(bad)
lods
pop
push
cmp
jae
xor
adc
or
push
sti
cmps
out
adc
test
int
sbb
xchg
int
push
xchg
movs
rol
pusha
push
retf
mov
push
add
xor
jnp
ja
out
mov
adc
xchg
pop
ret
jge
cmps
mov
dec
sub
mov
pop
jecxz
mov
sti
repz
iret
out
dec
and
in
mov
cld
jb
xor
div
xor
test
jnp
stos
in
jo
mov
hlt
or
cmp
and
stos
sbb
pop
inc
xchg
mov
mov
cmps
adc
xchg
scas
jmp
ins
div
push
or
icebp
jae
or
das
pop
inc
pop
pop
sbb
rol
and
popf
scas
pop
aad
stos
fs
pop
jno
leave
fdivr
iret
cmc
scas
xor
xor
mov
and
into
loope
stc
jo
leave
mov
repz
cmps
jmp
test
pushf
stos
fsubr
xchg
call
mov
(bad)
push
hlt
popa
jmp
add
sbb
cs
push
dec
loope
jne
in
or
stos
lock
pop
(bad)
jg
sub
adc
jge
je
inc
adc
sbb
int
mov
push
imul
stc
iret
xor
mov
add
enter
mov
shr
cs
scas
arpl
sbb
loope
sbb
rcl
dec
sbb
repnz
sbb
or
ins
sub
ficom
outs
out
loope
ret
fild
rol
fmul
bound
xlat
pop
jns
dec
je
fdiv
mov
or
loope
inc
sbb
sbb
mov
adc
jne
je
lea
cli
(bad)
mov
je
adc
pop
and
cdq
leave
jo
mov
push
in
int
rcr
jmp
mov
(bad)
enter
cdq
sub
cmp
xor
cli
jb
das
ds
int3
push
push
out
cmps
xchg
(bad)
pop
cmp
mov
xchg
sahf
popf
cmp
mov
retf
aas
repnz
sbb
xchg
hlt
inc
sub
repz
jnp
mov
fwait
push
xchg
iret
test
sbb
jmp
jnp
mov
mov
jmp
daa
xchg
push
or
xchg
ja
or
stos
ds
pop
ds
icebp
cmp
cmp
adc
adc
(bad)
ins
pop
shl
imul
sub
hlt
pop
movs
push
dec
jle
or
pop
cmp
dec
out
mov
wrmsr
(bad)
test
pop
jmp
call
jecxz
pushf
(bad)
mov
mov
and
or
fs
data16
push
nop
push
sub
stos
bound
xchg
stos
(bad)
jns
imul
(bad)
or
add
and
jmp
cdq
fsubr
adc
jge
jge
pop
test
int
xor
lea
xchg
sub
xchg
sub
std
dec
xchg
push
add
push
clc
nop
dec
mov
jmp
pop
(bad)
mov
clc
aaa
sub
(bad)
in
mov
adc
(bad)
test
sub
pushf
dec
adc
les
xchg
in
xchg
dec
pop
add
sar
adc
(bad)
loop
fld
scas
mov
sub
pop
adc
mov
xchg
retf
mov
mov
adc
cmps
or
push
(bad)
sub
push
mov
inc
test
movs
in
loop
mov
shl
inc
xchg
ss
sub
mov
in
je
outs
out
stos
clc
aam
lds
stos
sub
ins
pop
or
aas
js
bound
rcl
adc
jl
rcl
adc
jne
xchg
pop
scas
mov
out
mov
jmp
hlt
sbb
in
bound
sub
adc
cmp
in
and
mov
out
jle
sub
enter
cmps
xor
push
cmps
aam
cwde
sbb
adc
fisub
imul
inc
cs
jl
enter
pop
lds
sub
pusha
retf
add
iret
add
xlat
cld
cld
push
nop
xchg
lahf
push
and
clc
inc
inc
or
push
push
or
or
clc
xchg
cmp
stos
call
popf
shl
adc
push
stos
lea
data16
sbb
(bad)
sub
pop
ja
lods
clc
jmp
push
xor
sbb
fs
add
jmp
test
xchg
jmp
inc
fdivp
inc
push
lock
repnz
ret
aad
mov
add
int3
xchg
scas
mov
sub
test
test
dec
sar
pop
add
(bad)
in
push
dec
sub
jg
cmp
inc
sahf
cs
mov
mov
std
adc
add
rol
js
cdq
jg
jbe
jno
push
popf
or
cmc
js
push
and
gs
cmp
add
push
in
out
out
scas
pop
jp
(bad)
fcom
fcom
shl
push
and
lods
loope
cdq
xchg
movs
and
mov
in
stc
pop
stos
and
push
icebp
(bad)
pop
faddp
pop
jbe
dec
xor
mov
dec
push
lods
in
xchg
test
inc
mov
ss
add
and
bound
sbb
push
add
call
rcr
in
shl
stos
push
adc
add
mov
pop
cmp
push
cmc
(bad)
popf
mov
cs
popa
add
loop
push
pop
push
mov
cmp
fistp
inc
jmp
mov
xor
jge
sub
sbb
jge
repz
xchg
cs
(bad)
scas
shl
in
ret
test
push
push
cld
enter
aam
loope
or
adc
cmp
icebp
std
lock
mov
sub
push
pop
imul
or
aad
push
loop
popa
push
cdq
dec
push
stos
(bad)
pop
mov
aam
out
cmp
sbb
das
xchg
jmp
jg
mov
push
test
scas
inc
rol
add
stc
or
cld
add
inc
repz
sub
jmp
into
sub
aad
sub
push
aam
pop
addr16
addr16
outs
cmp
dec
sub
std
adc
into
test
add
inc
aas
sbb
mov
(bad)
dec
sub
mov
and
iret
adc
push
jbe
fbstp
sbb
fcomp
sbb
sbb
iret
or
in
inc
mov
in
leave
jno
push
pushf
pop
dec
loope
mov
jl
pop
sub
call
jns
icebp
add
in
mov
cmp
test
stc
dec
xchg
popf
out
into
ins
jp
sub
xlat
add
xchg
js
int3
add
cmp
push
pop
repz
aaa
mov
fdivr
bound
cmp
in
(bad)
sub
(bad)
and
retf
mov
scas
dec
std
xchg
jp
dec
pusha
aad
je
mov
gs
(bad)
ins
out
xchg
aam
pop
add
mov
xchg
dec
(bad)
jg
add
in
xchg
and
and
and
cmp
lods
mov
popf
mov
cmp
cmps
sub
pusha
adc
leave
fwait
xchg
das
and
cmp
push
push
and
mov
push
das
(bad)
jle
pop
jp
cmps
and
movs
inc
xchg
sbb
icebp
mov
jle
add
lods
mov
stos
jno
sbb
dec
mov
inc
rcl
std
in
mov
out
adc
cmp
nop
sub
nop
cmp
xor
jb
out
loop
add
pop
mov
mov
ds
xor
fstp
stc
pop
pop
icebp
inc
gs
xor
or
mov
sub
push
sub
mov
push
or
mov
(bad)
adc
dec
cmc
sar
xchg
inc
xchg
xchg
mov
lea
mov
leave
or
popf
ret
sbb
cld
pop
push
add
bound
xor
mov
mov
dec
in
push
test
sti
dec
jo
repz
xor
enter
dec
js
mov
and
xchg
frstor
dec
inc
push
retf
mov
dec
loopne
push
mov
sub
and
ins
sub
sbb
mov
push
cmc
add
mov
icebp
push
movs
out
jnp
in
int
dec
xchg
out
mov
test
pop
sbb
call
xor
aas
sub
cwde
inc
rcr
jnp
or
add
mov
adc
xchg
pop
cmp
push
bound
scas
inc
movs
repz
and
daa
mov
sbb
and
pop
push
test
mov
push
inc
repz
or
mov
mov
int
xchg
push
in
xor
xchg
and
clc
call
fwait
and
data16
sbb
dec
add
dec
das
jl
mov
or
xchg
nop
adc
xor
out
and
cmc
aam
call
cmp
test
sbb
pusha
sti
or
test
es
mov
xchg
xor
out
fsubr
jg
ret
out
xchg
mov
retf
xor
mov
in
push
mov
cmp
xor
push
push
movs
add
jno
int3
dec
(bad)
or
adc
call
cmp
icebp
nop
fdivr
push
or
repnz
inc
xchg
xor
sbb
hlt
pop
shl
in
repnz
call
inc
popa
and
rcr
lods
sar
cmp
cmovns
loopne
inc
daa
mov
addr16
mov
loopne
stos
sub
pushf
mov
push
jo
add
out
push
jno
stos
test
adc
xor
inc
push
loopne
ret
add
repz
fist
shl
dec
ins
xchg
movntq
fdiv
mov
xchg
into
out
test
pop
das
adc
into
out
mov
inc
pop
push
inc
sub
dec
loop
ins
stc
call
cli
icebp
jge
jge
pop
ror
inc
arpl
scas
cs
xchg
or
or
jnp
movs
and
push
xchg
and
fcomp
sbb
add
(bad)
aam
mov
mov
(bad)
sahf
icebp
jmp
xchg
adc
jns
xchg
xor
fiadd
lahf
pop
sbb
retf
das
cmp
or
outs
cmp
ret
sar
or
fisub
sahf
inc
aaa
std
dec
mov
or
movs
mov
int
mov
addr16
cmc
xchg
or
out
xchg
ja
or
lock
pushf
jg
aas
loop
and
ins
or
xchg
retf
cmp
imul
loopne
cmp
inc
iret
sub
sub
push
cwde
push
push
es
repnz
test
xchg
adc
cs
or
jecxz
inc
mov
mov
lar
in
sti
out
mov
mov
ret
and
jmp
xchg
xchg
pop
xor
add
inc
mov
jmp
xor
add
mov
pop
jp
and
or
adc
push
sub
popa
daa
fsub
mov
pop
fs
test
and
js
xchg
push
ss
adc
bound
pop
cmp
sbb
xchg
mov
or
adc
or
pop
imul
push
imul
repnz
adc
loope
inc
int3
movs
jmp
fidiv
push
cmp
cwde
shl
dec
test
loope
ror
dec
sbb
icebp
pop
sbb
iret
pop
arpl
aam
test
mov
add
test
xchg
push
and
call
add
test
sar
add
retf
inc
and
jns
sbb
loop
lods
int3
jg
retf
popa
fstp
bound
test
mov
lock
shl
dec
repz
mov
sub
nop
mov
add
dec
jne
fs
or
imul
push
and
icebp
std
mov
(bad)
and
dec
dec
jg
outs
mov
mov
icebp
mov
icebp
es
sbb
adc
pause
fdivrp
and
(bad)
repnz
or
bound
push
ds
xchg
xchg
and
cwde
push
pushf
mov
cmp
or
imul
add
adc
sti
arpl
push
sub
out
push
mov
jmp
push
movs
jmp
imul
in
inc
stc
jbe
jno
cmp
lock
outs
(bad)
xchg
scas
or
cmp
pop
stc
and
stos
loop
push
call
xchg
scas
in
mov
dec
cmp
ret
or
mov
xchg
xor
imul
dec
stos
imul
dec
mov
shr
jp
lahf
in
ins
ss
call
call
aaa
sti
dec
leave
(bad)
(bad)
xlat
into
inc
popa
adc
fild
xor
or
fs
pop
sub
into
adc
es
fs
in
lods
dec
mov
sub
mov
mov
lods
retf
lock
dec
lea
xor
out
aas
jo
hlt
sub
hlt
stc
push
movs
cwde
push
repnz
adc
ficomp
int
jmp
fst
fisttp
loopne
out
pop
fmul
loopne
mov
call
in
pop
add
and
xor
lds
adc
loop
and
test
xchg
fcmovne
cld
jb
mov
icebp
and
xchg
add
add
ins
icebp
mov
outs
xchg
jns
call
int
mov
repz
push
lock
mov
and
lock
dec
sub
in
and
ret
iret
pop
or
aad
(bad)
add
jg
pop
add
push
pop
call
and
cs
push
shr
or
cs
adc
out
and
mov
dec
cmp
inc
call
test
les
rol
jecxz
inc
push
push
sar
push
sti
pop
lahf
jne
or
ins
push
inc
mov
xchg
out
push
shl
mov
stos
xor
inc
push
(bad)
in
loop
sbb
fs
dec
jmp
fcomp
cmc
loop
iret
xchg
(bad)
fisubr
pushf
iret
das
push
inc
push
lods
(bad)
call
fnstenv
in
cld
mov
(bad)
fimul
(bad)
gs
sub
add
movs
lahf
gs
xchg
lds
jmp
shr
out
mov
push
lods
push
enter
add
sub
(bad)
js
pop
popf
ret
sbb
mov
push
sub
inc
mov
outs
xchg
sub
repz
retf
inc
das
cmc
add
xor
push
push
outs
icebp
enter
fstp
xor
les
jle
cli
data16
pusha
pop
daa
pop
and
popa
icebp
leave
ffree
xor
gs
sub
imul
add
in
cs
sub
nop
adc
scas
pop
jmp
fidiv
sbb
ror
push
push
inc
pushf
pusha
mov
and
clc
pop
mov
rol
xlat
sbb
mov
mov
or
cmp
push
or
int
dec
outs
cmc
dec
mov
repz
(bad)
or
mov
fsub
add
xchg
lock
leave
test
call
dec
stos
out
jb
fmul
das
xor
cdq
daa
js
pop
push
sbb
jnp
int3
mov
push
push
stos
leave
pop
push
enter
jp
cmp
les
fs
ins
sub
test
fsub
call
in
lahf
jnp
sahf
outs
es
fs
mov
sgdtd
sub
iret
aam
in
jbe
pop
cwde
cwde
or
pop
push
xlat
mov
cmps
mov
repnz
jns
(bad)
mov
jp
dec
fadd
mov
or
clc
push
aaa
jg
pop
fdivp
cwde
push
(bad)
out
xchg
sbb
jno
fistp
pop
(bad)
mov
push
cld
and
out
cmps
or
pslld
jmp
push
clc
xchg
icebp
push
and
cmp
push
loop
push
out
js
in
shr
ss
repz
push
ret
imul
or
std
cmp
or
mov
jmp
loopne
and
dec
add
or
jge
add
mov
xchg
cmc
jmp
push
es
sub
cld
outs
es
fsub
nop
outs
jno
mov
mov
adc
mov
and
mov
test
retf
mov
xlat
cmp
outs
xor
je
pop
sub
fld
leave
mov
cmp
add
test
bound
pop
movs
test
imul
jb
stc
mov
jne
adc
jp
inc
hlt
and
pop
xor
jae
ret
out
mov
mov
int
bound
shr
dec
xor
and
rcr
mov
int3
into
dec
dec
sti
or
icebp
cli
aaa
outs
test
call
or
shl
jge
test
dec
sti
jae
(bad)
les
pop
arpl
add
(bad)
ficom
xor
xor
jmp
stos
cmc
inc
jl
dec
in
aaa
sub
in
mov
or
push
mov
popa
dec
int
mov
clc
popa
shufps
xchg
jmp
data16
imul
add
jb
cli
mov
jb
fcmovnb
pop
icebp
jle
mov
and
(bad)
ins
jno
pop
xchg
std
mov
push
retf
call
mov
jae
or
sbb
ret
add
in
sbb
xor
push
shl
jbe
dec
pusha
push
stc
imul
popa
out
jmp
xchg
lods
jnp
int3
leave
push
mov
dec
lock
jnp
adc
xchg
add
xchg
xchg
or
push
je
cmp
js
xchg
or
fisttp
pop
mov
outs
cli
and
pop
lock
xchg
rcr
imul
xchg
ds
mov
out
mov
add
pusha
adc
xchg
dec
jmp
inc
int
cmp
rcl
inc
stc
out
add
imul
push
inc
rol
(bad)
cld
or
mov
push
jnp
das
cwde
cmc
fst
push
push
lds
ins
xor
pop
out
ffree
jnp
adc
push
rol
js
mov
mov
sbb
aas
push
repnz
jno
hlt
add
and
out
cmp
add
pop
cmp
or
jg
add
dec
lods
jge
loope
fisub
scas
xchg
cdq
mov
dec
into
dec
push
call
sub
cmp
jmp
movs
jl
xchg
xor
in
inc
dec
aam
sbb
and
add
xchg
mov
sub
(bad)
cmp
jle
dec
aas
dec
lods
cdq
ss
xchg
fisttp
(bad)
inc
push
or
xor
pusha
pop
mov
and
or
sahf
movs
leave
sbb
jmp
test
cmp
or
push
mov
in
hlt
nop
aam
mov
inc
stos
add
dec
inc
out
xor
or
pusha
adc
sti
cmps
inc
stos
mov
xchg
shl
sbb
cwde
std
sbb
leave
into
cmp
loope
inc
pop
add
stos
xchg
leave
push
mov
mov
add
dec
cmp
mov
sub
mov
inc
xor
pop
call
pop
xor
sbb
mov
aas
test
nop
sti
jl
cld
cli
jecxz
imul
push
add
cs
jg
add
pop
scas
test
jo
and
pop
movs
jmp
outs
rcr
in
call
cmp
clc
lods
jle
ds
xchg
repz
ficom
cmp
cmp
or
add
dec
cmp
push
xor
jb
pop
xor
fst
imul
jbe
mov
pusha
gs
std
loop
iret
int
xlat
ror
retf
mov
push
push
scas
loopne
test
sbb
mov
jg
dec
push
repnz
jecxz
and
or
shr
and
sbb
int3
sahf
cmps
mul
cli
mov
out
mov
add
idiv
and
imul
dec
pop
mov
out
xor
std
cmp
dec
aas
xor
push
cmp
add
test
std
hlt
jne
inc
push
in
rol
xor
imul
aad
push
lds
mov
jno
pushf
mov
sbb
ror
loope
leave
inc
jp
pusha
adc
test
mov
push
sti
or
adc
mov
in
loopne
scas
retf
test
ficomp
into
stc
mov
fiadd
rol
pop
inc
int3
test
rcr
outs
inc
fcomip
add
ss
out
jb
xchg
adc
inc
aam
fldenv
loopne
loope
dec
or
loopne
sbb
xchg
mov
sub
cmps
mov
fldenv
rcl
xchg
adc
sub
hlt
push
test
cwde
and
test
dec
push
sub
or
push
inc
aad
js
fucomip
sar
or
adc
jp
xchg
cdq
xor
outs
mov
mov
adc
sub
repz
pop
adc
mov
xchg
ss
sub
mov
xor
sub
push
and
(bad)
loope
inc
ror
mov
jb
(bad)
xchg
(bad)
cld
cmc
cdq
push
push
xor
in
inc
cs
jmp
sub
cmp
lods
xor
mov
or
xor
test
mov
jecxz
out
mov
mov
out
jp
xor
fs
xor
movs
pop
mov
popa
dec
jmp
sbb
loope
mov
mov
fdiv
sbb
push
push
xor
scas
mov
jb
cmp
xlat
pop
ins
or
add
fwait
sbb
xor
mov
adc
xchg
js
test
xlat
mov
pusha
aad
mov
fstp
adc
test
clc
dec
mov
cmp
xchg
fcomp
(bad)
lods
pop
out
shl
fnsave
jg
aam
and
mov
xchg
mov
test
div
ins
dec
sbb
push
lock
call
jmp
(bad)
repz
lahf
mov
sbb
pop
push
lods
mov
inc
cmps
push
cmp
mov
in
repnz
adc
in
cld
xchg
mov
cmps
(bad)
std
fld
or
mov
sar
or
(bad)
into
cli
xchg
cmp
fcom
or
in
xchg
fild
int
pop
push
add
adc
mov
nop
push
mov
adc
nop
cmp
popa
gs
sbb
pop
pop
je
mov
mov
je
(bad)
dec
mov
and
psadbw
or
xchg
repz
das
push
xchg
and
(bad)
mov
or
jbe
movs
gs
(bad)
cmps
hlt
push
mov
scas
mov
imul
mov
adc
pushf
xchg
sbb
aaa
xchg
loop
std
fidiv
scas
movs
xchg
mov
stos
jo
sub
cmp
jge
jbe
in
cmp
sub
pop
imul
mov
jmp
pop
arpl
xor
and
cdq
sbb
iret
ss
pop
mov
jnp
jnp
es
stos
imul
sbb
pusha
jmp
sub
inc
shl
push
jl
sti
in
xlat
scas
push
mov
dec
and
jo
lock
pop
out
lock
or
stos
inc
add
movs
or
sti
std
jp
or
push
cmp
(bad)
dec
dec
fdivr
les
mov
xor
daa
mov
mov
sbb
mov
dec
lods
jecxz
lock
xchg
loopne
add
xchg
cmp
cmp
lock
out
mov
(bad)
mov
fld
inc
mov
push
cmp
mov
xchg
mov
xchg
push
inc
adc
mov
std
cdq
sti
div
push
ja
inc
gs
jne
movs
adc
shl
mov
ss
cmps
dec
repz
test
lods
or
je
enter
pusha
adc
push
and
jge
lods
xor
pop
mov
fsub
push
dec
jb
or
ins
jbe
push
and
push
cmps
jmp
sub
pop
dec
inc
pop
inc
mov
cwde
lods
rcl
or
jp
mov
jnp
jns
mov
cwde
and
adc
fldenv
mov
fsub
push
icebp
lea
(bad)
pusha
pop
pop
je
sub
stc
push
add
arpl
sub
mov
popa
add
inc
mov
fiadd
lods
xchg
inc
dec
xor
test
jmp
inc
arpl
test
cld
pop
fnsave
outs
cmp
add
jno
push
mov
mov
mov
and
adc
cmp
mov
mov
jne
js
out
cmp
gs
mov
ins
fldcw
test
push
dec
pop
cmps
enter
in
sbb
cmp
arpl
xchg
cmp
mov
cmp
and
mov
data16
mov
aad
mov
inc
fdivr
cdq
cs
dec
mov
movs
aas
cmp
lahf
ins
add
jp
enter
loopne
retf
add
xor
sub
cmp
shr
fbstp
sub
or
popf
arpl
stc
jbe
ins
sub
rol
push
loope
xlat
mov
neg
loopne
loopne
mov
out
test
dec
shl
(bad)
xor
shl
sub
fucompp
or
js
mov
pusha
add
sub
sub
icebp
push
out
fcom
ror
xchg
and
(bad)
pop
iret
scas
mov
bound
test
mov
add
pop
jecxz
dec
sub
jns
add
mov
cld
pop
lea
out
sti
xchg
fs
xchg
add
div
xor
fbstp
inc
mov
mov
dec
ret
div
fs
cmp
stos
mov
lods
cmp
and
or
cmp
push
(bad)
pop
mov
mov
mov
jns
mov
or
pop
lock
adc
dec
cmp
xlat
push
shl
inc
daa
scas
xchg
sbb
add
test
xchg
mov
push
push
loopne
int3
xchg
cmp
(bad)
leave
xchg
mov
mov
sbb
fisttp
push
push
inc
imul
stc
adc
test
dec
mov
inc
jns
jnp
jae
cmps
out
push
xchg
jle
adc
xor
sbb
sbb
leave
sbb
push
hlt
aad
pop
push
sub
xchg
pop
add
xchg
xchg
into
scas
pop
mov
jg
popf
rcl
sub
scas
inc
pop
sbb
call
or
mov
push
mul
enter
push
mov
icebp
das
push
xchg
cmp
xlat
(bad)
cld
inc
sti
push
scas
inc
scas
push
add
sbb
mov
jb
inc
lods
inc
js
mov
sbb
mov
or
mov
xor
mov
inc
cwde
add
pop
dec
xor
(bad)
mov
das
test
push
(bad)
jl
jle
jmp
jge
addr16
and
dec
dec
ss
mov
ins
sbb
lods
inc
shr
xor
jb
nop
mov
inc
cmp
popf
push
iret
(bad)
sub
retf
or
cmp
int
adc
and
cli
test
movs
mov
lds
mov
das
or
cmps
jnp
dec
iret
ds
aas
sub
add
jl
pusha
sti
cld
test
mov
js
jb
fucomp
ror
dec
(bad)
mov
retf
call
in
mov
push
fld
push
dec
sahf
jmp
pusha
jle
and
push
in
(bad)
gs
arpl
retf
xchg
and
sbb
lods
retf
retf
and
mov
repnz
xor
mov
xchg
mov
dec
in
sbb
jecxz
add
mov
mov
fcomi
shl
xor
mov
push
pop
loopne
sub
or
xor
dec
push
aam
ret
push
into
jp
sbb
clc
movs
mov
sbb
aam
(bad)
jbe
scas
inc
push
jmp
rol
jb
icebp
loope
daa
jno
inc
shl
sub
mov
dec
push
or
inc
push
cwde
adc
es
retf
mov
and
sub
gs
xchg
(bad)
mov
icebp
mov
test
leave
pop
inc
loopne
and
lods
fs
in
push
mov
dec
mov
and
dec
xor
cmp
retf
clc
sub
jecxz
jecxz
cmp
push
mov
sub
movs
and
icebp
pop
jg
fidivr
jmp
addr16
or
outs
call
jp
mov
stos
push
clc
add
fisub
push
scas
mov
cmp
sub
lea
or
push
dec
mov
jg
bound
inc
and
adc
ja
in
fs
sti
xor
fidivr
bound
and
jl
mov
adc
lods
hlt
xor
push
fiadd
popa
les
das
addr16
imul
inc
int3
xlat
pop
shl
pop
sbb
mov
idiv
mov
jecxz
outs
lds
xchg
adc
inc
mov
jp
ret
push
cmps
pop
mov
push
jp
xchg
repz
push
ret
adc
fnstcw
mov
xchg
outs
push
call
loope
inc
jg
xor
add
or
xlat
sub
adc
jmp
das
jge
mov
les
aad
dec
pop
jbe
nop
mov
fldenv
sbb
fnstenvw
sub
jmp
xchg
sbb
ret
pop
sbb
push
mov
mov
xor
idiv
lea
call
push
in
dec
pop
fwait
or
pop
loope
leave
push
jb
mov
ret
push
jmp
cmp
push
lahf
mov
(bad)
(bad)
out
jg
aad
ja
jmp
mov
push
cmp
mov
imul
sbb
out
mov
push
or
sbb
clc
cmp
cmp
cmps
cmp
ins
repnz
das
out
xor
jl
addr16
cmp
pop
sti
or
bnd
fiadd
mov
fiadd
push
test
sbb
and
mov
fld
jne
gs
les
dec
mov
jne
leave
mov
ja
pop
adc
in
nop
scas
mov
mov
lock
in
sbb
enter
sbb
js
(bad)
mov
shr
push
test
or
jle
jno
dec
jo
aas
or
in
or
adc
mov
jno
sbb
dec
mov
mov
pop
mov
adc
cmc
outs
stos
cli
jns
imul
cmps
cmp
dec
push
jmp
mov
repz
sbb
inc
jne
cld
cmps
adc
loopne
mov
cmp
cmp
push
popa
sub
in
ret
lods
mov
mov
cld
lock
or
cmp
mov
dec
in
cmc
std
das
ret
jnp
mov
push
mov
(bad)
mov
add
jg
jp
and
push
arpl
in
pop
jbe
adc
into
lods
fcmovnbe
xchg
(bad)
ins
(bad)
scas
jecxz
or
aad
in
and
xchg
mov
add
and
sbb
jg
(bad)
fcmove
xchg
xchg
out
(bad)
idiv
(bad)
imul
popf
call
ret
and
jmp
jns
push
gs
lods
adc
mov
jmp
cdq
and
cmp
cli
dec
xchg
push
sti
arpl
push
sub
mov
xor
pop
and
mov
mov
mov
sub
and
xchg
sub
popa
adc
jge
ret
and
int
inc
test
repz
jns
inc
jg
jl
or
push
in
cmp
(bad)
(bad)
mov
pop
xor
rol
out
loop
call
loopne
adc
adc
lods
fadd
pop
ret
mov
sbb
mov
out
cmp
sub
into
jg
push
test
cmp
call
cmp
gs
mov
mov
xchg
(bad)
jecxz
mov
mov
add
aam
pop
gs
add
cmp
lods
fwait
cmp
push
sti
sub
xchg
mov
xor
imul
clc
cmp
sub
push
push
pop
adc
pusha
sbb
push
inc
sub
xchg
adc
mov
and
cmp
jbe
mov
cmc
push
jg
push
shl
fidiv
scas
loopne
xchg
leave
xchg
adc
add
add
retf
adc
inc
das
or
mov
rol
mov
mov
pop
push
in
(bad)
pop
and
inc
hlt
mov
cwde
cmp
das
adc
ja
mov
jbe
jno
sbb
cs
out
push
cmp
cmps
(bad)
imul
and
dec
push
bound
mov
or
hlt
aas
mov
push
xchg
cmps
imul
push
ins
hlt
es
sbb
dec
dec
fstp
les
mov
sbb
mov
sbb
imul
sub
pop
mov
test
sbb
jp
xchg
adc
fiadd
ret
dec
mov
push
jmp
fwait
inc
nop
ins
imul
xlat
add
xchg
bnd
test
xchg
fs
scas
ret
fimul
mov
xor
mov
lahf
jns
mul
inc
sbb
cmp
xchg
fdivr
repz
lods
retf
repz
adc
jo
dec
pop
pop
xor
ds
push
mov
cwde
dec
xchg
out
push
sbb
and
shl
adc
gs
adc
scas
fidiv
mov
leave
out
cmp
cld
stos
test
sti
cvtpi2ps
lea
mov
push
or
and
lds
sti
lods
in
out
mov
sub
movs
ja
sbb
repz
mov
loop
mov
call
pop
push
push
sbb
xor
cmp
push
mov
or
jbe
shr
mov
je
xchg
test
aam
retf
loop
push
dec
sub
mov
xlat
(bad)
std
pop
fldenv
rol
mov
imul
cdq
daa
mov
ror
inc
and
int
jbe
mov
sub
fwait
adc
(bad)
int3
mov
(bad)
dec
jl
les
add
or
mov
jb
int
shl
in
xchg
sar
jbe
cmps
push
adc
xor
jb
adc
jmp
cmp
pop
jne
lods
xchg
xor
mov
sbb
retf
or
rcl
(bad)
lock
gs
ret
xor
mov
cmp
rcr
(bad)
(bad)
xchg
out
xchg
xor
xchg
loop
enter
mov
dec
rcl
push
mov
inc
lahf
pop
daa
aas
xchg
ja
retf
arpl
jl
(bad)
push
mov
jbe
mov
in
out
or
out
mov
inc
outs
jae
mov
mov
or
clc
push
sbb
or
xchg
and
xor
xchg
idiv
test
hlt
stc
adc
adc
bound
sub
inc
sub
das
and
arpl
jmp
sbb
clc
dec
adc
jmp
cmc
imul
(bad)
and
ds
pop
lds
in
add
popa
cmp
jecxz
js
hlt
aas
add
ret
sbb
les
ins
adc
dec
inc
aaa
repz
cmp
add
nop
jmp
in
gs
mov
push
or
push
push
out
outs
mov
shr
sub
sub
cmp
sub
add
or
push
test
or
(bad)
dec
cdq
call
dec
shr
cdq
add
es
sbb
ret
and
aam
repz
lahf
ror
cli
pop
xchg
cmp
les
adc
ret
mul
push
mov
pop
sbb
retf
xchg
push
adc
mov
mov
push
cli
jge
jnp
push
mov
out
das
(bad)
jl
or
rcr
rcl
shl
and
mov
ffree
fs
adc
cmp
mov
hlt
dec
lock
pop
hlt
shl
mov
add
pop
dec
pop
popa
mov
sbb
shl
adc
loope
fsubrp
loopne
inc
xchg
iret
ret
adc
mov
and
mov
xchg
dec
push
retf
popf
jne
or
xor
pop
dec
popf
push
inc
shr
pop
adc
in
ror
jno
pop
push
xchg
loope
(bad)
ret
inc
js
cli
leave
out
std
xchg
jmp
xor
dec
rcl
int
mov
add
xor
bnd
out
add
sbb
sub
mov
gs
add
and
jle
outs
(bad)
gs
loopne
jg
repnz
or
lds
int3
fptan
xchg
enter
mov
(bad)
(bad)
and
sbb
(bad)
sbb
adc
daa
cmp
iret
xchg
and
inc
into
cmp
pushf
push
jno
jge
jecxz
test
push
jae
repz
js
fcmove
or
mov
cmp
rcr
ins
cmp
xor
ret
jl
lds
pop
add
jae
push
pop
cmp
xchg
leave
or
neg
aas
ror
imul
dec
inc
xor
dec
mov
xchg
mov
dec
ret
nop
imul
or
cmp
add
fisubr
aam
mov
ss
push
scas
shr
xchg
rcl
mov
and
mov
add
add
sar
call
ins
sar
add
jmp
mov
push
loop
aaa
dec
add
jo
xchg
xor
cmp
pop
lock
data16
pusha
(bad)
popa
add
dec
mov
mov
in
jl
(bad)
xor
dec
out
xor
mov
iret
add
adc
loop
jo
adc
stc
or
jecxz
lods
idiv
les
loope
int3
cli
aaa
push
and
lods
pop
mov
jg
push
(bad)
ror
ss
shr
jmp
and
repz
lds
mov
cmp
cmp
inc
adc
cs
cld
inc
arpl
pop
push
fnsave
(bad)
pop
push
mov
mov
cmp
fs
jne
jle
data16
std
cmc
mov
callw
dec
dec
scas
lahf
jb
xor
cdq
aas
aaa
add
push
push
xchg
or
xchg
cmp
xor
pusha
rcr
cmps
mov
(bad)
mov
jo
pusha
lods
sub
ss
stos
xchg
dec
into
outs
or
sbb
push
repz
and
shr
cmps
movs
ja
adc
jmp
jbe
aaa
jno
loopne
and
push
popf
dec
push
sti
mov
test
out
mov
sub
mov
or
pop
nop
or
lods
push
jne
sti
jge
push
and
repz
push
inc
stos
lahf
xchg
scas
das
push
outs
shr
mov
mov
pop
mov
ins
mov
les
cli
cmp
sub
xchg
mov
inc
mov
xor
loope
fcomi
pop
xor
ret
lods
cmc
and
sub
xor
pop
dec
stos
and
cli
daa
push
xor
xor
cmp
add
cwde
test
mov
mov
pusha
dec
repnz
pop
mov
pop
adc
mov
jns
xchg
mov
fnstcw
jns
cmp
shl
xchg
fist
ss
inc
fwait
hlt
fcomp
inc
mov
andps
push
mov
rol
hlt
mov
add
cmp
jmp
cld
es
mov
fmul
mov
out
jecxz
sub
and
dec
mov
mov
mov
cwde
pop
shl
push
add
push
jp
sub
fldenv
sbb
into
lea
adc
out
pop
adc
or
rep
adc
fcom
jno
xor
aam
dec
adc
lds
pop
stos
les
in
scas
mov
and
cwde
pop
xchg
cmp
cmp
mov
inc
fnstsw
es
cmp
dec
xor
loopne
in
addr16
lods
mov
call
mov
mov
inc
lock
xchg
leave
out
cs
mov
inc
aas
add
mov
shl
hlt
or
test
or
mov
xor
cmp
mov
pop
mov
ja
mov
rcl
or
push
test
popa
test
sub
loope
inc
inc
rol
pop
leave
mov
inc
mov
retfw
(bad)
jmp
aas
scas
pop
sub
push
aas
stc
mov
lds
pop
(bad)
mov
pop
sbb
add
leave
jae
inc
jecxz
popf
cs
mov
jno
jns
popa
add
inc
mov
dec
inc
ja
pop
outs
stos
cli
in
(bad)
sbb
adc
or
(bad)
in
(bad)
jo
mov
(bad)
ror
adc
test
imul
inc
mov
mov
push
bound
aaa
add
ret
add
into
(bad)
rcl
cli
mov
cwde
jno
xor
adc
rcl
mov
pop
mov
movs
xor
mov
adc
mov
dec
sbb
and
push
dec
je
movs
jmp
push
or
aas
sub
sbb
jp
sbb
div
iret
int
mov
mov
pop
ror
(bad)
dec
jae
outs
pop
adc
out
out
loop
je
aam
movs
int3
or
out
lods
add
fsubr
(bad)
(bad)
retf
(bad)
aas
mov
icebp
daa
xchg
mov
int
push
inc
mov
and
sbb
mov
(bad)
out
fs
frstor
xchg
cmp
mov
stos
add
mov
stc
cli
jmp
movs
test
inc
mov
ins
cmc
mov
rcr
ss
test
imul
cmps
mov
arpl
sub
mov
call
mov
or
xlat
mov
lods
fidiv
add
lds
aaa
clc
test
mov
stos
jnp
fstp
cdq
fs
leave
cmc
retf
mov
sti
lods
inc
call
add
in
(bad)
push
and
(bad)
rcl
out
fadd
shl
push
in
push
and
push
pop
mov
mov
into
gs
call
push
repnz
sti
pop
push
mov
ins
cmp
adc
pop
mov
sub
mov
sahf
xor
mov
dec
dec
sub
lods
pop
cdq
xor
ss
mov
sbb
dec
cmp
ins
rcl
jo
sbb
adc
jg
sbb
lea
sbb
cmp
into
popa
jge
pop
pushf
(bad)
in
inc
cdq
je
add
add
and
jmp
jmp
hlt
and
cdq
sbb
rcl
daa
loopne
aas
std
sub
sahf
jl
gs
and
ret
mov
sti
mov
movs
imul
lock
iret
ins
imul
lahf
mov
push
dec
outs
jne
pop
adc
jns
iret
xchg
sbb
mov
clc
int3
mov
cld
jmp
cmp
push
inc
lds
or
and
mov
push
inc
pop
xchg
dec
jmp
mov
mov
xchg
fild
fs
cmc
push
xor
xchg
add
xor
out
fsub
(bad)
in
push
dec
(bad)
loope
out
pop
loopne
outs
adc
repnz
daa
xchg
ss
mov
daa
retfw
mov
jmp
cmp
xor
or
pop
mov
sbb
dec
sar
pop
in
sbb
mov
into
sub
scas
je
push
push
or
out
jns
lds
call
or
ds
cdq
ror
xchg
test
sbb
xor
shr
xor
je
xor
aaa
fsubr
adc
shl
push
rcr
pop
sti
xlat
dec
xor
mov
shl
hlt
sub
sbb
mov
jb
sub
std
mov
out
sbb
sbb
je
xor
sar
mov
mov
adc
xchg
sbb
lods
les
stos
in
dec
add
(bad)
pop
(bad)
jg
push
cwde
and
jbe
call
shr
xchg
sahf
cmc
out
iret
sub
mov
jge
cs
sti
pop
jp
(bad)
mov
jae
scas
inc
mov
sbb
aas
(bad)
xchg
addr16
xlat
enter
test
mov
dec
loope
sbb
inc
xor
cmps
repz
ret
push
push
cmc
pop
mov
or
and
cli
sbb
or
and
xor
dec
loope
dec
pop
arpl
ss
movs
shr
ret
add
sub
loope
dec
add
xor
mov
or
aam
cwde
in
mov
dec
mov
std
dec
jle
mul
mov
loope
mov
pop
jbe
pop
xor
jae
sub
and
pusha
cmp
fild
sub
jg
jnp
xor
jmp
jbe
fidivr
cdq
jmp
js
xchg
in
xchg
fs
and
xchg
js
cmp
cmp
mov
call
aam
loopne
sti
ds
cmp
xor
xchg
mov
cmp
jo
push
push
mov
inc
add
loopne
add
sbb
pusha
or
adc
in
mov
jg
add
cld
test
mov
adc
inc
cmp
jbe
out
push
sub
push
inc
mov
fwait
adc
into
fidivr
jl
jge
dec
inc
xlat
outs
retf
push
(bad)
jmp
hlt
in
enter
sub
xchg
xchg
lea
ret
inc
mul
arpl
add
add
or
(bad)
cmp
push
pop
pop
xlat
push
je
(bad)
outs
mov
and
sbb
push
sbb
add
js
movs
shl
test
je
push
mov
xchg
xor
ds
xchg
aad
add
lahf
(bad)
shr
or
jno
lea
xchg
les
push
sub
pop
xchg
icebp
xchg
mov
inc
jmp
pusha
retf
(bad)
lahf
nop
or
push
test
js
outs
adc
(bad)
das
pop
dec
mov
mov
js
add
and
pusha
dec
and
retf
shl
je
adc
stos
xor
and
cmp
fnsave
xor
nop
pop
popf
mov
test
adc
(bad)
mov
bound
mov
out
jg
ins
jge
jl
xchg
rep
enter
cmc
pop
xchg
ror
xchg
aam
adc
push
shl
fist
sar
aaa
scas
ret
idiv
push
cmps
rcl
jns
push
cmps
aam
or
mov
xchg
jnp
mov
retf
sar
inc
dec
jo
into
jnp
push
xchg
jns
add
push
(bad)
mov
rep
loope
and
mov
fld
jo
test
movs
test
mov
mov
inc
jbe
push
xor
jnp
popa
sbb
cmp
test
fadd
and
icebp
adc
out
cmc
out
dec
jg
xchg
jmp
retf
mov
data16
push
jns
mov
mov
mov
mov
shl
outs
enter
jno
fsubr
in
icebp
pop
in
xor
mov
push
dec
push
lock
cmps
and
push
mov
enter
pop
inc
sti
nop
push
cli
das
cmp
iret
xor
cmp
outs
sub
xchg
push
mov
(bad)
xor
ret
adc
out
inc
pop
mov
(bad)
xchg
jecxz
jb
hlt
add
cmp
sub
sbb
jmp
fs
lahf
pushf
mov
in
inc
cmp
pop
(bad)
jno
inc
aam
cmps
and
nop
sub
add
imul
jle
(bad)
in
loope
xor
sbb
mov
cmps
aam
pop
popf
js
ror
sbb
xor
xor
dec
dec
mov
cwde
dec
cdq
fcom
adc
das
jp
mov
rcl
pop
(bad)
xor
inc
sub
xor
xlat
gs
mov
adc
sbb
dec
mov
shr
shr
fcomip
xchg
xchg
mov
ret
fs
imul
adc
jmp
shl
xor
xchg
stos
ret
add
cmp
stc
fwait
add
xchg
loopne
out
loop
fwait
jbe
jae
mov
hlt
into
pop
jne
cld
sub
jle
scas
add
shr
and
mov
mov
das
adc
jmp
mov
scas
inc
(bad)
lea
sbb
xor
push
(bad)
out
jmp
sub
into
adc
xchg
cmps
adc
test
add
and
icebp
mov
xor
cmps
out
xlat
mov
test
mov
scas
mov
cmp
lds
es
(bad)
dec
lods
mov
sti
push
pop
pusha
popa
rcr
stos
jne
dec
sbb
or
movaps
lock
test
(bad)
lds
(bad)
mov
aam
jne
mov
adc
cmp
sub
mov
jbe
sbb
jno
cmp
lods
cwde
jmp
outs
pop
out
fs
call
je
push
pop
or
or
xchg
lds
jae
dec
lds
push
pusha
xor
xchg
nop
mov
pusha
mov
retf
jb
mov
or
test
rol
mov
rcr
sar
cmp
mov
ds
or
xchg
rcr
push
test
mov
mov
call
xchg
mov
out
jmp
xchg
loope
nop
lds
mov
mov
dec
lahf
dec
jp
into
xchg
jecxz
xchg
jno
sbb
push
pop
add
lods
jmp
xchg
test
shr
mov
dec
jecxz
cmp
sbb
out
mov
cmp
mov
arpl
pop
lahf
rcr
xlat
add
or
pop
addr16
jecxz
adc
xchg
lea
mov
xor
jmp
fistp
scas
aam
cmps
sub
pop
sub
addr16
retf
je
jp
repz
in
cmp
iret
dec
push
aad
push
xchg
sub
jmp
repnz
adc
add
fmul
jmp
gs
and
int3
sar
movs
retf
add
scas
add
push
std
ins
cli
xchg
mov
pop
pop
ret
pop
or
sbb
out
mov
or
push
xor
stos
add
ret
sub
dec
pushf
mov
(bad)
repz
xlat
jmp
xor
out
test
sub
sbb
push
movs
adc
and
jle
lea
xor
dec
add
adc
cmp
fcom
and
lahf
ja
adc
mov
mov
jb
mov
neg
aas
int3
dec
cmp
push
push
jne
xchg
rol
jb
and
push
das
sbb
lahf
out
cli
scas
pop
outs
daa
xor
inc
aaa
jp
cwde
xlat
mov
cmps
test
push
lea
pop
in
das
sub
es
dec
shr
ret
fcmovbe
ins
test
mov
and
and
xor
or
xchg
adc
add
pop
push
add
lds
pand
jg
imul
mov
nop
dec
push
jno
retf
sub
das
jg
imul
sbb
mov
pop
sub
jl
sub
xchg
inc
adc
imul
jle
ja
in
ins
mov
pop
leave
add
idiv
jae
rol
stos
enter
sbb
add
xchg
mov
mov
jl
rcl
sub
retf
inc
and
dec
or
neg
jne
add
cmps
pushf
ins
mov
adc
adc
add
gs
pushf
inc
outs
stc
aas
dec
cmp
sti
div
icebp
cwde
jp
mov
lock
cmc
inc
jmp
sub
les
sbb
outs
ins
cmp
jbe
scas
jl
test
xchg
pop
rcr
ja
in
cmc
in
and
sbb
cmp
fyl2x
repz
mov
xchg
repnz
fild
fisubr
xchg
sub
cwde
gs
ins
mov
mov
pop
pop
mov
add
les
mov
pop
mov
inc
mov
add
mov
sub
inc
pop
cmp
cwde
add
dec
iret
jbe
push
ds
cmps
cmps
push
xchg
(bad)
lds
ja
dec
nop
rol
xor
dec
dec
cmps
in
fimul
sub
and
pushf
loope
sub
(bad)
(bad)
idiv
jecxz
pop
push
cli
mov
ret
sti
data16
inc
mov
mov
dec
sub
rcr
mov
outs
icebp
bound
sbb
push
jb
imul
test
lods
mov
nop
shl
cwde
xlat
ins
vmulpd
ret
jb
cmp
jge
ja
arpl
mov
enter
fisubr
xor
inc
pushf
cs
fwait
cmp
mov
adc
xlat
fldenv
sar
dec
mov
loop
jbe
jmp
mov
ret
or
(bad)
das
fdivr
mov
pusha
push
stos
out
xor
lea
int3
(bad)
pop
jecxz
mov
and
jno
xchg
mov
mov
and
mov
sahf
sbb
mov
adc
cmc
push
jg
jb
cld
push
aaa
xlat
retf
fmul
push
cli
test
mov
inc
mov
or
lea
mov
test
add
out
jo
add
mov
xor
mov
lock
inc
sbb
and
dec
sub
mov
push
clc
mov
inc
sbb
daa
mov
jnp
imul
or
mov
adc
(bad)
test
push
xrelease
sub
mov
jl
jno
cli
pop
int
pop
sub
push
inc
jp
xor
jns
mov
lea
xchg
out
jle
mov
jge
scas
ret
or
jge
sbb
inc
pop
xchg
dec
pop
hlt
icebp
dec
fist
push
xor
push
in
mov
xchg
rcr
imul
add
test
hlt
ins
mov
out
or
sbb
in
cmp
inc
and
mov
cmp
dec
mov
stc
inc
or
aam
out
sbb
or
jne
ror
ins
mov
dec
and
mov
inc
in
add
pop
jmp
add
aas
add
addr16
div
pusha
test
gs
sbb
sbb
jmp
or
cmp
pop
push
int3
fidivr
retf
jns
cwde
fwait
xchg
push
jge
pop
mov
xor
out
outs
dec
icebp
adc
retf
clc
or
add
in
jmp
movs
mov
jle
in
es
and
and
mov
push
dec
arpl
in
pop
xchg
dec
out
jle
push
push
adc
nop
fld
push
retf
dec
arpl
mov
aaa
add
pop
les
mov
push
pop
fisttp
add
jmp
stos
cli
dec
or
bound
les
pusha
push
int3
and
adc
test
in
cmp
aad
fmul
ret
les
add
cmp
(bad)
shl
data16
push
es
sbb
ret
ss
sahf
pop
mov
add
ds
inc
leave
jecxz
cmc
aad
sbb
pusha
dec
pop
cmpps
xor
scas
or
xchg
jb
xchg
inc
cmps
jo
lock
pop
ja
inc
push
test
fwait
aam
xchg
xchg
sbb
inc
add
mov
out
jnp
das
gs
adc
push
mov
jno
pop
sub
cmp
fs
jge
cmps
or
cmps
ins
aaa
cmp
jecxz
mov
add
in
clc
je
fbstp
cdq
test
dec
cwde
mov
test
jns
(bad)
std
mov
call
pop
push
push
out
push
sbb
jmp
jecxz
pop
inc
sbb
xchg
dec
mov
add
xchg
popf
stc
sub
cmp
int3
cmp
add
mov
jl
je
mov
sbb
lds
dec
mov
js
enter
xor
cmp
sahf
or
xchg
jo
ja
jne
ja
sbb
inc
loop
mov
mov
in
(bad)
dec
sub
mov
in
adc
mov
sahf
jmp
data16
outs
in
test
jmp
dec
loop
loopne
and
xor
inc
mov
mov
mov
mov
mov
pop
outs
ins
loope
push
rcr
int3
fdivr
loopne
adc
repnz
dec
and
test
or
or
mov
rol
call
pushf
mov
call
into
add
ret
add
pop
adc
in
xor
dec
stc
xchg
lock
xor
cld
sub
jae
mov
cmp
repz
in
sbb
ret
(bad)
jbe
push
mov
push
adc
pop
push
test
imul
fist
test
aam
xor
xchg
dec
cwde
pop
sbb
push
enter
stc
popf
ret
imul
push
out
push
rcr
test
pop
and
mov
xor
or
mov
xor
and
jno
cld
rcl
push
add
jp
add
into
mov
xor
push
popa
movs
or
mov
jmp
arpl
(bad)
cdq
add
cld
test
sub
push
mov
adc
inc
mov
xor
int
in
jb
pop
pop
and
dec
sbb
pop
dec
inc
push
push
push
dec
lods
call
call
add
repnz
cld
xor
inc
jnp
dec
or
(bad)
in
lea
popa
pop
mov
mov
retf
fsub
sub
pop
les
ficom
add
jne
sub
into
(bad)
add
jb
fdivr
push
cdq
shr
lahf
fisubr
je
popf
cmc
cmps
lods
sbb
jo
xor
dec
pop
cli
jge
into
jmp
popa
in
and
sar
cmp
xor
shl
std
mov
adc
sbb
add
adc
sahf
fisubr
jl
lock
pop
popa
push
dec
neg
in
in
pop
or
mov
loope
rol
cmp
int3
out
dec
pop
jb
push
pop
fbld
out
fidiv
cmp
ret
cmc
in
pusha
jne
movs
(bad)
xchg
xchg
or
add
movs
inc
repz
(bad)
xchg
xchg
ret
repz
jbe
out
dec
movs
jl
inc
lods
(bad)
js
xchg
xchg
add
clc
das
jge
iret
jle
loopne
inc
jecxz
pop
cmp
rcl
cld
inc
test
cli
call
pop
mov
push
imul
pop
push
(bad)
lds
pop
jns
dec
dec
inc
inc
in
icebp
imul
inc
jae
icebp
(bad)
aad
jbe
popa
inc
stos
inc
ja
fwait
bound
mov
add
inc
cmp
nop
jg
or
lods
adc
xchg
mov
in
cmp
mov
sbb
dec
outs
test
test
adc
xchg
js
loope
or
lods
dec
xchg
adc
sbb
inc
fnstenv
push
dec
nop
adc
mov
movs
add
out
or
jmp
mov
mov
shl
in
sub
xor
mov
pop
add
lahf
imul
and
ja
xor
jbe
or
das
push
das
inc
cmp
repz
sar
sti
adc
cmp
xor
dec
mov
imul
or
push
retf
out
xchg
mov
mov
(bad)
enter
retf
shl
in
dec
sti
aaa
mov
mov
sbb
mov
das
ja
aam
stos
cmp
push
ja
jl
out
adc
push
clc
dec
sbb
loopne
pop
cmp
inc
sub
rol
mov
jnp
int3
push
and
and
xchg
iret
push
scas
stos
in
pushf
clc
sar
ins
pushf
push
mov
sub
mov
outs
inc
jmp
inc
push
clc
fsubr
and
fst
(bad)
ins
data16
pop
mov
add
fcomp
scas
nop
pop
mov
xchg
jecxz
stos
cmps
mov
rcl
dec
xchg
out
ja
jae
cs
test
fistp
fimul
out
adc
ds
(bad)
retf
outs
jg
adc
sbb
pop
xchg
mov
mov
movs
popa
in
es
shl
clc
and
pop
dec
mov
ins
xchg
sub
test
dec
xchg
inc
mov
imul
fcomip
mov
std
adc
xchg
jmp
pop
pop
retf
add
ffreep
fisttp
cs
les
or
jp
les
pop
xor
xor
cmp
and
add
xor
push
sub
loopne
inc
les
cmp
movs
call
sub
pop
cdq
mov
pop
mov
movs
aaa
cli
repz
retf
hlt
loopne
outs
xchg
push
in
lock
aam
mov
call
lock
idiv
or
stos
fidivr
iret
test
jle
mov
mov
pop
xor
inc
fimul
in
push
inc
and
pop
mov
add
leave
add
test
repnz
dec
xor
sub
sub
lahf
push
adc
into
mov
loope
call
add
icebp
lock
movs
sub
xor
in
push
mov
mov
push
jg
test
push
sub
outs
push
xchg
out
in
hlt
dec
push
repz
push
movs
loop
ds
aas
int3
dec
inc
fistp
cmp
jae
les
idiv
add
fwait
mov
out
inc
sbb
in
sbb
xchg
ins
sbb
push
pop
ret
cld
sub
adc
sub
dec
ja
mov
lods
ja
jns
in
stc
or
shl
xor
mov
outs
pushf
fild
cmps
and
(bad)
jb
jbe
sbb
sbb
xlat
out
pop
adc
ficomp
shr
test
in
loop
rcr
pop
or
dec
test
add
inc
xchg
or
aas
leave
mov
mov
fisttp
ss
push
xchg
popa
jnp
jae
inc
mov
gs
jne
addr16
div
push
inc
dec
mov
sub
ins
not
and
xor
push
push
arpl
cs
cmps
pop
or
jg
outs
std
pushf
or
jge
loop
rcl
js
jle
test
cmp
pop
xlat
stos
test
popf
sub
or
jnp
fs
arpl
push
ret
leave
push
mov
add
xor
mov
test
or
popf
adc
stc
fwait
mov
(bad)
xor
test
int
push
(bad)
jmp
jno
sbb
pushf
(bad)
fst
pop
add
push
sbb
and
push
(bad)
pop
adc
mov
(bad)
neg
cld
push
mov
(bad)
pop
sub
in
jmp
cmp
stos
pushf
jl
cld
out
(bad)
pop
jne
mov
scas
xlat
test
jmp
add
cmp
pop
adc
movs
and
mov
mov
jnp
or
popa
mov
dec
or
add
jecxz
mov
dec
inc
mov
mov
xchg
clc
loope
dec
mov
lods
inc
pop
add
lods
inc
and
or
pop
push
(bad)
loop
jae
lods
mov
adc
mov
shl
xor
cmps
sub
push
test
dec
mov
aaa
retf
(bad)
outs
fs
arpl
js
or
jl
adc
xchg
sbb
dec
xor
jmp
mul
and
into
lods
mov
sbb
or
and
jp
sub
repnz
push
or
or
and
jae
lods
push
or
mov
xchg
xor
aaa
mov
mov
and
ins
xchg
imul
in
cmps
pop
dec
aad
dec
push
pop
jle
in
push
shrd
sub
cwde
mov
and
ror
fst
cld
dec
pop
mov
out
and
stc
push
pop
(bad)
dec
popa
mov
fldenv
gs
xchg
xchg
lock
mov
or
jge
jle
outs
and
push
cmp
sub
fist
sbb
in
pushf
shl
xchg
sub
cwde
inc
dec
jp
mov
push
pop
xchg
mov
xor
popa
mov
stos
add
mov
fidivr
xchg
and
push
xor
rcr
ret
push
or
sub
add
or
fdivr
icebp
out
out
add
mov
cwde
sub
ja
mov
sahf
popa
clc
cmp
jae
sbb
arpl
lods
mov
dec
fist
(bad)
xor
repnz
call
push
and
das
(bad)
aad
mov
repz
add
ret
int
je
std
pop
push
bound
push
push
out
pushf
or
loope
(bad)
cmp
push
sbb
push
sub
out
mov
pop
in
cmp
and
jge
cmp
icebp
jne
mov
pop
mov
cmp
adc
sbb
int3
xor
rcr
lock
xor
push
mov
outs
outs
out
jnp
repnz
xor
test
pusha
jecxz
sub
pop
jge
pusha
jecxz
mov
sbb
inc
or
pop
push
leave
inc
jne
adc
or
popa
test
imul
shl
push
jb
ins
js
loopne
sbb
mov
push
call
cld
int3
(bad)
cmc
les
mov
aam
push
ror
pop
call
out
aaa
(bad)
call
fst
pop
int3
out
leave
sbb
int
mov
pop
popf
shr
in
aam
sub
mov
dec
mul
or
sub
push
push
mov
jns
les
push
imul
inc
mov
mov
mov
ss
or
clc
imul
std
jmp
ss
sti
ficomp
inc
sub
mov
xor
sti
jne
jmp
repnz
or
in
pop
lds
dec
(bad)
loop
fdiv
sub
fsubrp
dec
aam
outs
fsub
popf
ret
xchg
scas
lods
sub
or
xchg
(bad)
mov
add
mov
cmp
jle
into
cmps
cmp
stos
or
jle
mov
xchg
mov
or
sbb
fdivr
fidivr
push
out
inc
dec
outs
(bad)
lods
xchg
(bad)
or
mov
cmp
jecxz
stos
inc
fild
int3
in
popa
stos
cdq
push
jg
sub
int
lock
int
sub
cli
cmp
cwde
jne
mov
mov
pop
test
loopne
adc
sub
cmp
bound
ret
inc
xchg
shl
xchg
and
arpl
mov
inc
jle
sbb
nop
xchg
mov
repz
xchg
outs
ficomp
cdq
imul
pop
lds
cmc
lahf
dec
or
cmps
add
fbld
push
jne
mov
xchg
cmc
push
pop
mov
call
lahf
jl
jp
and
xchg
ror
je
lock
pop
pop
inc
cwde
fdivp
(bad)
arpl
cmp
jecxz
xchg
cmp
ss
lods
ror
pop
add
ins
or
in
add
js
js
mov
stc
std
cwde
add
loop
jbe
aaa
bound
dec
(bad)
pop
xor
clc
pop
ret
xor
mov
lahf
or
mov
jmp
push
mov
in
loop
arpl
mov
mov
cmp
out
mov
jp
rol
test
jo
sahf
pusha
add
xchg
cmp
jno
xor
jecxz
int
sbb
pop
or
fs
xchg
and
mov
and
imul
jecxz
add
popf
pusha
jle
cld
inc
push
cmp
into
mov
scas
jmp
popf
xor
sub
inc
mov
mov
popa
jno
mov
and
data16
fld
mov
and
jb
xchg
or
aam
shl
arpl
add
pop
xchg
pop
in
(bad)
mov
dec
cmps
mov
xchg
mov
repz
rol
cmps
dec
mov
popa
mov
popa
and
and
shl
mov
jae
cli
mov
test
xor
aas
ins
idiv
mov
adc
(bad)
dec
push
push
push
mov
sub
cmps
sbb
adc
cwde
inc
(bad)
inc
clc
jg
dec
aas
fbld
ret
mov
mov
scas
movs
pop
daa
(bad)
jp
mov
add
inc
mov
movs
sbb
cdq
and
push
dec
or
xor
fwait
ins
call
pop
ins
and
lahf
push
jge
xor
out
inc
sub
ret
or
inc
sbb
and
add
arpl
mov
add
adc
mov
rcl
cmp
pop
pop
fwait
cmp
dec
std
movs
cli
xor
mov
popf
mov
mov
add
dec
xchg
sbb
popf
sub
lods
stos
lods
push
sub
sbb
xchg
addr16
cli
add
movs
push
xchg
xor
add
mov
adc
(bad)
in
mov
arpl
pop
test
xchg
inc
dec
sbb
jecxz
aad
jnp
ss
sahf
sbb
cmp
movs
sub
repnz
xor
enter
adc
scas
xor
push
les
sbb
arpl
and
xchg
into
and
mov
mov
loope
or
cmp
test
adc
(bad)
fist
fistp
pop
int
test
or
lock
f2xm1
cmps
pop
ror
xchg
mov
aad
popf
dec
pushf
das
jae
jnp
outs
test
jno
mov
js
pop
stos
xchg
cmp
out
mov
mov
lods
stos
mov
arpl
or
cmp
pop
xchg
fcomp
pop
out
nop
movs
idiv
arpl
add
xor
mov
pop
retf
ret
lods
and
enter
inc
jge
or
das
jmp
lods
std
test
cs
sub
div
jae
(bad)
leave
push
sar
inc
jle
ins
add
dec
xchg
jg
or
nop
push
add
cmp
mov
jecxz
xchg
aam
mov
iret
out
and
in
push
adc
pop
call
jb
sbb
mov
inc
iret
fidiv
mov
data16
dec
xchg
inc
mov
in
jo
mov
pop
cmp
mov
dec
xor
and
inc
bound
cdq
imul
daa
cli
pop
pop
fidivr
(bad)
test
push
fistp
int
and
or
xor
push
pop
es
mov
in
xchg
ins
retf
add
call
cmp
retf
je
loop
mul
call
imul
jbe
adc
dec
push
jnp
addr16
pop
scas
sub
sbb
inc
movs
xor
xchg
push
pushf
jl
jmp
sub
sti
inc
aam
into
mov
add
add
aas
ss
(bad)
jge
xor
pop
ror
xchg
inc
rcr
fdivr
push
pop
jge
es
ja
add
xor
and
add
mov
(bad)
out
sub
cwde
pop
sub
or
inc
out
iret
das
pop
or
mov
cmp
pusha
repnz
jp
icebp
aam
stos
inc
int3
pop
dec
or
xchg
sub
mov
sub
mov
icebp
hlt
mov
arpl
das
mul
lods
(bad)
pop
ret
nop
jge
xchg
ds
mov
mov
cmp
shr
push
mov
and
jecxz
adc
out
imul
das
in
in
adc
es
jno
leave
mov
inc
stc
jnp
and
push
jb
or
sbb
clc
mov
mov
add
push
repz
and
loop
xor
es
sub
das
movs
jae
jnp
pop
mov
fisubr
sub
inc
aaa
stos
jnp
rol
sbb
inc
aas
dec
and
xlat
in
mov
mov
mov
jl
cmp
lds
mov
jne
jge
imul
mov
add
or
mov
mov
sub
cli
pusha
adc
xor
xor
pop
dec
push
xchg
cmp
dec
lahf
mov
push
fnstenv
scas
ins
mov
imul
inc
push
dec
and
fbstp
nop
mov
enter
sub
sub
clc
loopne
mov
ins
das
sub
ds
out
leave
lds
pusha
jg
and
inc
push
or
sub
add
ins
fs
(bad)
add
outs
push
call
fstp
push
xchg
cmps
add
in
cmps
push
shl
mov
and
mov
mov
dec
icebp
pushf
xchg
out
cmc
jo
push
lds
ret
outs
add
mov
sar
nop
jp
fimul
mov
ret
in
ins
adc
mov
sbb
inc
mov
cmps
sub
jl
in
das
fdiv
jns
inc
and
fistp
inc
out
jnp
cmc
fucomp
cmp
push
adc
and
jp
rcr
data16
jnp
cmp
sub
dec
pop
mov
in
push
ins
or
cmps
in
stos
jmp
add
in
test
jecxz
and
ror
or
movs
dec
and
sbb
xchg
int3
push
mov
test
cmp
dec
add
mov
sbb
adc
and
ds
es
add
rcr
ja
xchg
test
or
push
lds
and
inc
jbe
scas
mov
jl
jmp
jp
(bad)
xor
movs
xchg
enter
popa
push
mov
mov
mov
lods
inc
in
add
push
xor
add
pop
mov
repz
fcomi
xchg
retf
repnz
cmc
mov
cmp
fldcw
(bad)
jl
out
inc
add
mov
and
mov
sub
and
xor
inc
xchg
adc
or
into
mov
and
call
retf
fimul
or
pop
lods
adc
int
enter
add
(bad)
icebp
fstp
mov
ret
leave
in
icebp
pop
ror
inc
addr16
add
or
fwait
mov
loopne
jmp
jne
out
xchg
leave
jb
cmps
dec
fwait
int
test
int3
out
push
mov
pushf
ja
ret
aam
test
movs
xchg
in
cmps
and
inc
stos
ret
jecxz
sub
jg
jno
inc
dec
cmp
inc
adc
shl
ins
jne
cmp
sub
or
div
scas
lea
jns
popf
pop
test
cvttps2pi
mov
jbe
dec
cli
sub
jns
(bad)
xlat
mov
lods
pusha
jle
sub
mov
pop
sub
jb
cli
sub
xchg
(bad)
adc
push
push
mov
inc
xchg
dec
(bad)
popa
leave
mov
add
mov
sub
dec
in
and
ins
out
add
jg
ins
test
(bad)
addr16
cmp
sub
aas
hlt
jg
sti
(bad)
cmp
push
mov
shl
push
enter
sbb
mov
(bad)
in
inc
fisub
daa
movs
jle
fcmove
or
movs
popf
push
lods
jmp
or
stos
or
repnz
mov
mov
push
mov
ds
rcr
retf
cld
xchg
mov
add
mov
adc
fsubr
(bad)
xchg
adc
sbb
popf
push
mov
sysexit
push
push
mov
sahf
push
mov
adc
push
push
mov
jle
jecxz
aam
push
push
ins
push
add
cmps
xchg
jmp
pop
cs
cli
xchg
call
je
push
data16
call
pusha
fstp
and
cmc
push
(bad)
pop
fst
arpl
fcom
fwait
ins
aad
sbb
mov
jmp
and
and
sub
(bad)
jle
push
push
aas
mov
inc
pop
(bad)
fidivr
ins
inc
int
test
repnz
and
inc
das
jecxz
outs
sbb
xor
sbb
and
sbb
push
xor
or
push
enter
mov
and
mov
push
fcomp
hlt
inc
inc
rol
inc
fnstenv
out
jl
mov
jb
sub
icebp
test
lods
xchg
mov
or
test
shr
(bad)
xchg
mov
adc
aas
add
mov
adc
test
ret
cwde
pop
cmp
arpl
xlat
test
push
cmp
shl
gs
retf
in
inc
jle
dec
test
loopne
mov
addr16
shr
jecxz
push
sbb
jle
pop
(bad)
jmp
mov
mov
out
adc
out
(bad)
cmp
aam
outs
cmp
fidiv
mov
adc
xchg
fadd
cld
inc
mov
dec
push
or
dec
sub
mov
push
jae
mov
adc
cmps
sbb
mov
in
dec
add
test
xchg
fcom
ds
retf
bound
cmc
or
mov
fdiv
jne
dec
add
xor
or
in
std
popa
je
int3
or
loope
daa
pop
jmp
inc
int
fsub
cli
sub
sub
and
clc
mov
es
inc
nop
cli
cdq
shl
jnp
scas
hlt
cmp
xlat
cmps
cmp
pusha
arpl
popf
dec
dec
jp
push
jl
loop
(bad)
retf
stc
mov
sbb
and
push
jle
add
sbb
xor
call
lea
rol
outs
and
in
push
add
xor
daa
adc
mov
lods
call
clc
mov
and
xor
add
xchg
pop
sti
jmp
or
pop
mov
pop
aaa
mov
movs
(bad)
shl
inc
mov
xor
stos
rcr
std
jecxz
mov
ins
loopne
inc
jb
vpmaxub
pop
adc
xchg
jne
hlt
mov
mov
and
jmp
mov
cmp
mov
addr16
adc
rcl
inc
pop
push
sub
jns
pop
out
sub
pop
in
call
jg
mov
arpl
rcl
js
bswap
movs
add
shl
inc
cli
or
cmp
inc
mov
inc
arpl
mov
dec
xchg
popa
mov
enter
mov
lods
je
pop
sub
nop
mov
test
add
sbb
fs
dec
mov
push
pop
mov
imul
mov
loope
popa
call
or
dec
sbb
test
inc
stos
mov
retf
inc
cmp
out
pop
mov
mov
pop
test
cmp
sub
push
push
test
cs
test
mov
fcom
push
movs
outs
jae
cmps
inc
or
rcl
shl
aaa
add
jl
outs
scas
cmc
leave
mov
push
sbb
scas
mov
movs
ret
aad
xor
int3
xchg
sti
pop
dec
retf
jmp
add
push
test
dec
mov
xchg
fs
adc
pop
shl
repz
mov
das
push
out
pop
mov
jb
cmc
or
out
jno
push
xor
gs
in
das
sub
arpl
jnp
icebp
test
sbb
aas
mov
push
(bad)
sbb
push
dec
sar
cmc
ficom
and
sub
loop
ins
add
js
mov
pop
pushf
xchg
sub
sbb
xchg
sahf
enter
xchg
jb
sbb
sar
inc
jo
push
std
je
cmp
rcl
mov
push
sub
sub
sub
unpckhps
not
add
mov
pop
test
(bad)
and
add
rol
fucomip
inc
jne
cli
and
test
(bad)
xchg
dec
adc
fdivr
fnstcw
repnz
lods
fs
pop
nop
mov
or
sbb
ds
scas
jmp
lock
icebp
jae
loope
dec
imul
add
xchg
push
addr16
mov
mov
cmps
sti
test
mov
cmp
ficomp
popf
adc
test
mov
sub
shr
xchg
mov
push
mov
aas
stc
push
xchg
fcomi
dec
aam
sub
adc
lea
pop
shl
xor
call
sub
xor
xchg
loopne
in
inc
movs
push
arpl
jns
push
push
jmp
and
sar
and
pop
js
jecxz
lods
iret
icebp
mov
or
xor
sar
stos
mov
movs
call
push
cmp
mov
xchg
cmp
push
push
pop
mov
(bad)
outs
push
int
and
(bad)
jo
add
out
lahf
sbb
jo
lods
scas
fcmove
mov
clc
scas
xchg
push
or
pusha
and
xor
sub
mov
daa
dec
je
mov
sub
ins
not
pop
xchg
repz
test
fsub
add
or
addr16
and
inc
cmp
sub
pusha
pusha
inc
xlat
pop
jmp
pop
in
stos
jg
sub
cmc
xchg
data16
(bad)
xchg
pop
add
add
jge
adc
jne
(bad)
fs
lock
pop
daa
mov
dec
seto
and
push
cmc
pop
inc
loopne
push
jbe
fnstcw
jno
push
jae
aam
stc
aam
jmp
ja
sub
or
test
add
repnz
xor
pushf
push
cwde
frstor
mov
dec
daa
lods
in
or
ds
imul
out
out
sbb
cs
cmps
jb
pop
cmp
(bad)
xchg
sub
jmp
int3
movs
mov
xchg
mov
xchg
sbb
inc
cld
stos
dec
out
and
fst
pop
mov
jmp
int3
pop
pop
addr16
and
mov
aad
sbb
sub
pop
jbe
test
ret
movs
scas
popf
mov
inc
sahf
and
dec
jecxz
fcom
daa
mov
movs
(bad)
in
rcl
sbb
sub
jg
add
sub
jnp
jo
and
mov
ss
push
(bad)
jns
lods
popa
fbstp
movs
mov
xor
and
or
retf
loopne
dec
fisttp
popa
mov
xchg
call
push
inc
add
or
cld
sub
shl
inc
xchg
in
sbb
(bad)
out
nop
or
pop
mov
sbb
lods
imul
pop
cmps
aad
hlt
ss
xor
movs
js
inc
jmp
dec
daa
jmp
xor
test
(bad)
dec
xchg
shl
dec
loop
ret
cmp
push
ret
push
(bad)
clc
test
xchg
adc
adc
aas
and
(bad)
div
jp
bound
pop
arpl
push
add
push
sub
jno
ins
jae
sbb
pop
pop
ror
sbb
cmp
fistp
mov
ins
pop
sbb
test
jae
cmp
sub
adc
inc
dec
into
enter
data16
dec
js
ins
jmp
repz
mov
imul
fdivr
and
push
imul
mov
adc
mov
aam
mov
cmp
add
into
sub
push
inc
les
aaa
xor
fdivr
inc
lds
gs
sbb
fcomp
loopne
out
pop
mov
icebp
nop
and
push
imul
and
push
(bad)
stos
fs
cli
inc
sub
sbb
adc
sahf
pop
push
in
arpl
je
cmp
or
cld
mov
icebp
mov
test
cs
sti
xchg
xchg
dec
imul
outs
push
xchg
cmps
push
outs
ss
scas
stc
test
inc
add
ficomp
add
fsubr
add
arpl
fisttp
loop
aam
mov
pushf
shr
push
pop
pop
jnp
mov
out
outs
or
push
ror
xor
cmp
mov
sub
sar
aas
jne
js
mov
(bad)
cdq
stc
ins
bound
dec
arpl
cmps
ror
mov
xor
push
cmp
leave
lods
popf
jns
jecxz
fdiv
xlat
xchg
mov
pop
sub
jbe
push
jb
movs
paddusw
xor
push
push
into
sbb
je
or
jns
fadd
mov
mov
mov
nop
adc
add
or
int
sbb
out
pop
scas
xor
(bad)
dec
sbb
shr
mov
mov
xor
pusha
jecxz
push
and
ss
cdq
add
add
call
bound
mov
ja
jp
in
or
and
out
mov
cmps
fidiv
dec
bound
movs
xchg
cwde
jo
iret
mov
mov
adc
xchg
adc
and
enter
pop
xchg
(bad)
mov
test
fcom
xor
shr
mov
and
mov
jmp
jb
add
aas
pop
mov
cmc
pop
js
outs
out
jae
out
fnsave
cmp
imul
dec
fwait
inc
pop
gs
pop
movs
stos
mov
dec
std
outs
punpcklwd
loopne
mov
test
add
outs
xor
sahf
bound
test
cmp
or
fidiv
in
(bad)
sub
jp
aaa
es
inc
int
mov
jmp
push
xor
xchg
xchg
and
icebp
jmp
add
cmp
lods
mov
fsub
aas
inc
repz
xlat
loope
loope
mov
sti
fisub
mov
push
jae
fst
mov
fsubr
pop
(bad)
jb
mov
shr
cdq
lds
adc
cmc
shl
mov
push
sbb
jbe
jl
ficomp
add
fs
gs
pop
sar
add
lods
and
out
mov
xlat
xor
scas
cmp
sub
push
sbb
inc
mov
cmc
scas
or
pop
stos
pop
adc
mov
push
rcl
outs
movs
push
pop
adc
int3
and
(bad)
mov
jge
cmps
call
sbb
adc
int3
repz
mov
pop
sub
std
sbb
xchg
push
dec
jle
clc
aam
sub
jle
rcr
mov
and
dec
inc
pusha
add
xor
fimul
jnp
stos
dec
popf
jp
push
cmp
loope
xor
jnp
or
jle
lods
mov
xchg
sub
cli
add
retf
lods
mov
cmc
int
es
push
jno
mov
adc
fsubr
ins
enter
lds
sti
mov
xor
out
push
xchg
hlt
and
ror
mov
jne
sti
data16
cmc
ret
div
jg
scas
call
imul
and
repnz
es
jl
call
jg
and
xor
stc
adc
fcomip
or
mov
iret
sub
adc
out
lock
xchg
(bad)
sub
jge
sub
outs
sbb
les
in
add
and
jp
xchg
jmp
xchg
iret
(bad)
jle
pop
in
push
shl
loope
mov
rol
adc
int3
inc
mov
or
sbb
push
cmp
pop
add
(bad)
aas
repnz
add
jge
adc
aam
movs
xchg
clc
stos
sti
mov
loopne
adc
rol
leave
cmps
iret
bound
mov
jae
ret
popa
jecxz
jmp
push
data16
movs
lods
push
mov
cmps
pop
loop
enter
mov
push
retf
mov
inc
sub
xchg
pusha
arpl
and
nop
ja
imul
mov
gs
adc
fcom
daa
mov
mov
adc
mov
pop
lods
cld
dec
sub
add
and
inc
jmp
pop
lods
(bad)
dec
retf
pushf
pop
and
inc
fisub
inc
fs
fs
sbb
or
jmp
push
mov
ret
dec
(bad)
out
inc
mov
adc
xor
ss
and
(bad)
and
jns
pop
hlt
cmp
mov
inc
jmp
pop
fistp
lods
jns
enter
xor
sbb
repnz
jp
xor
mov
shr
in
sub
movs
sti
sub
push
mov
jbe
jno
dec
lock
sbb
cmp
stc
push
jo
scas
iret
add
cwde
cmp
jmp
fwait
cmp
stos
mov
fistp
cmp
std
mov
add
sti
sub
lock
xchg
or
sbb
mov
sub
pop
leave
jae
fs
mov
cld
push
cmp
jl
ss
stc
xor
mov
mov
mov
loop
mov
test
xor
pop
xor
cmps
xor
repnz
xchg
sbb
in
or
ins
or
lock
pop
sub
fadd
dec
(bad)
jb
sub
lahf
inc
lods
jbe
stos
jl
addr16
cwde
mov
out
add
mov
dec
cmp
xchg
inc
adc
cmp
jb
ret
and
arpl
jae
imul
mov
scas
pcmpeqb
pop
shr
jae
das
in
mov
popf
cdq
inc
and
pusha
sti
mov
jae
cli
dec
mov
mov
xchg
frstor
push
gs
push
mov
xchg
arpl
or
pop
ds
add
aaa
shl
xchg
inc
shl
fisub
or
sti
lods
dec
dec
mov
xchg
cld
inc
stos
jp
mov
add
push
loope
sbb
in
cmp
hlt
cdq
sub
mov
fsubr
movs
add
repz
jmp
inc
test
cs
movs
imul
ror
sqrtps
aas
pop
mov
sub
lods
mov
outs
jns
dec
aam
cmc
(bad)
ins
inc
out
int
ins
or
mov
call
mov
xchg
call
gs
xor
mov
mov
push
mov
or
mov
sub
lods
jmp
adc
push
shr
push
inc
sbb
push
mov
scas
pop
mov
pop
xor
jne
add
test
push
ins
(bad)
shr
or
out
mov
scas
mov
icebp
mov
ret
jo
add
adc
and
not
and
pop
push
ja
cdq
mov
xlat
sub
(bad)
cdq
xchg
sar
cmp
add
pop
add
sub
jb
pop
xor
stos
pop
lods
es
push
cmps
adc
es
jns
(bad)
and
data16
push
jge
mov
adc
jl
test
ins
ins
or
jne
aas
jmp
les
adc
rol
add
mov
and
or
mov
cmp
ins
in
dec
cwde
cmp
xchg
jne
mov
into
fidiv
push
xchg
retf
lea
dec
mov
dec
sub
jns
jg
fisttp
inc
iret
outs
or
push
fwait
sub
cmps
mov
jmp
fcomp
sahf
mov
inc
sub
sbb
cmc
not
add
outs
cmp
mov
aad
pop
sub
and
(bad)
int3
or
call
rcr
stos
jge
(bad)
mov
repnz
cmps
enter
push
scas
jae
int
jns
and
stos
xor
hlt
dec
mov
cli
div
jmp
jo
mov
push
fild
(bad)
mov
and
mov
push
mov
jne
mov
shl
sub
rol
or
ret
es
aas
sub
and
cmp
inc
xor
mov
scas
jo
outs
sahf
outs
add
mov
je
pop
jmp
mov
out
mov
lods
inc
repnz
xor
(bad)
dec
sub
pop
call
pop
xchg
add
retf
cmc
xchg
repnz
mov
adc
enter
pop
(bad)
ins
xchg
pop
in
sbb
mov
das
shl
mov
push
aad
and
ins
mov
push
gs
inc
nop
push
mov
xchg
jl
push
out
mov
pop
retf
and
inc
pop
lea
push
mov
enter
adc
mov
jle
out
movs
xchg
adc
mov
inc
(bad)
jae
sub
pusha
jae
fucomip
mov
das
ss
push
sbb
imul
or
xchg
(bad)
imul
mov
fidivr
sbb
mov
(bad)
data16
dec
in
int3
test
inc
das
dec
push
dec
mov
xchg
dec
mov
lahf
xor
adc
pusha
xchg
cmps
mov
jecxz
push
mov
stos
idiv
jg
push
retf
int3
mov
(bad)
hlt
adc
mov
add
popa
pop
pushf
test
fild
mov
jg
inc
sar
xchg
test
dec
jae
(bad)
mov
and
cmp
jb
mov
jno
cmps
in
adc
stos
cmp
stos
push
adc
mov
xchg
fs
mov
mov
sbb
mov
inc
mov
jns
gs
sbb
dec
jmp
jb
mov
jns
test
loop
(bad)
sbb
mov
xchg
mov
xchg
xor
mov
sbb
push
mov
xchg
into
pop
shr
into
xor
fucomi
cwde
ret
aad
(bad)
fdivr
cmp
fcom
sub
cmp
loopne
push
fcomp
into
cld
and
out
mov
out
mov
push
or
pop
std
cmp
sbb
leave
and
add
pop
daa
(bad)
sbb
jge
call
imul
fdiv
cmp
inc
les
(bad)
shr
sahf
aad
inc
and
xchg
or
xor
push
cmp
xchg
stc
push
or
mov
jo
stos
cdq
stos
xchg
and
lea
aaa
(bad)
jno
sbb
movs
jmp
retf
mov
int3
push
mov
ja
pop
or
mov
push
push
pop
cli
xlat
add
(bad)
int
add
cmp
dec
sub
jl
mov
icebp
dec
test
imul
movs
lods
mov
mov
mov
lea
es
push
inc
cmp
jnp
(bad)
ds
pop
aaa
xchg
pop
das
sar
mov
jne
dec
xchg
shr
push
(bad)
lea
sahf
gs
xchg
retf
sbb
push
imul
sub
push
stos
inc
daa
or
and
push
std
popa
sbb
ret
test
cmp
xor
jne
push
add
bound
jecxz
inc
lock
fstp
imul
test
mov
movs
xor
push
cmps
mov
fbld
loop
jle
fabs
mov
sbb
retf
jle
js
sahf
or
daa
xchg
sahf
js
es
jg
(bad)
loopne
cmp
sub
rcr
loope
rcl
add
rcr
mov
jnp
sti
sub
jae
rcr
outs
outs
fimul
xchg
imul
call
and
mov
aas
mov
ins
pop
jae
lea
jmp
mov
jb
and
mov
jbe
add
cli
mov
xchg
(bad)
dec
push
cmp
cmp
cmp
pop
adc
xor
(bad)
das
jnp
adc
ret
and
and
scas
(bad)
push
adc
jge
xor
xchg
mov
test
clc
xchg
pop
and
sbb
ins
int3
addr16
dec
lea
pop
dec
sub
call
aad
lahf
or
es
jle
mov
dec
xchg
mov
add
push
mov
pushf
ret
cs
inc
mov
push
mov
jg
(bad)
jl
and
and
dec
jne
dec
xchg
jmp
ja
js
inc
hlt
push
jnp
push
addr16
loopne
jnp
pop
data16
shl
cmp
adc
xchg
in
gs
sub
push
xchg
or
add
cmp
xor
push
mov
mov
ficomp
pop
xchg
out
out
cmps
lods
enter
push
in
xor
pop
mov
leave
enter
jle
mov
xor
inc
or
inc
lock
call
xor
mov
lods
ret
js
mov
cmp
(bad)
cmps
(bad)
push
sar
cmp
pushf
and
jl
xor
div
gs
cli
cwde
push
xchg
jbe
mov
jae
fstp
pop
sub
test
scas
sub
shl
xor
jl
fucom
xadd
cmps
mov
in
jns
xor
popa
mov
adc
cld
mov
mov
adc
enter
push
and
jbe
pop
fnstsw
call
lods
jmp
imul
sub
int
jp
xor
js
aad
inc
enter
jl
std
or
xchg
cld
add
sub
add
jle
jle
pop
ss
sub
xchg
loop
mov
inc
shl
xor
mov
push
sar
aad
jp
pop
dec
add
inc
mov
scas
out
inc
test
mov
push
add
in
lahf
xor
sbb
sub
xchg
sub
and
pop
aam
cld
outs
and
js
loope
leave
loop
sub
(bad)
push
sub
sbb
push
sbb
ror
dec
or
mov
pop
je
lock
or
je
dec
sbb
xor
rcr
daa
and
xchg
mov
or
xchg
imul
cmp
push
fstp
in
adc
fsub
pop
adc
add
push
jb
add
or
inc
std
stos
sbb
dec
xchg
out
inc
bound
ror
sbb
loope
sub
inc
sub
cwde
cmp
jmp
hlt
inc
scas
dec
cmc
pop
movs
mov
sbb
dec
rol
xchg
push
pop
adc
mov
pop
xchg
hlt
adc
mov
icebp
cmp
and
out
jl
push
scas
shl
lods
push
cld
adc
clc
mov
cs
pop
dec
adc
fcom
xor
cmp
xor
int3
lea
adc
push
out
xchg
ja
push
jge
add
push
popf
mov
mov
mov
(bad)
aam
repz
dec
xchg
cmps
xor
adc
cmp
mov
dec
jmp
shr
push
mov
outs
adc
sbb
test
inc
add
hlt
jg
outs
hlt
ror
jmp
xchg
clc
xor
(bad)
fnstsw
inc
add
movs
or
sbb
leave
loope
cs
pusha
ret
cmp
mov
and
call
adc
dec
outs
xlat
loope
out
jmp
sbb
aam
add
and
aad
mov
jae
ins
jne
xchg
cmp
outs
(bad)
mov
ins
ins
mov
sahf
pop
inc
ret
push
sbb
(bad)
js
lds
cmp
inc
(bad)
pop
mov
pop
push
adc
add
dec
lods
sub
xor
push
leave
call
or
lods
inc
inc
mov
inc
and
mov
jmp
push
xor
test
imul
xor
lahf
pushf
or
push
scas
mov
mov
nop
bound
add
pop
sub
stc
repz
call
cmps
stc
and
arpl
xchg
mov
clc
test
sbb
mov
xchg
push
sub
icebp
sub
or
dec
push
add
loope
sbb
mov
push
xor
mov
pop
stc
les
ror
movs
xchg
loopne
xchg
imul
adc
xor
push
push
scas
daa
xchg
test
dec
(bad)
adc
jo
sbb
jmp
aam
sub
sar
mov
nop
daa
pop
xor
mov
mov
and
jo
retf
mov
sbb
xor
shr
aad
pop
loop
popf
aas
(bad)
fadd
repnz
aas
out
fisubr
(bad)
adc
mov
adc
dec
arpl
cmps
jge
dec
adc
push
test
(bad)
dec
cld
cmp
(bad)
fiadd
mov
cmp
test
inc
sub
jnp
outs
mov
pop
adc
out
lods
adc
(bad)
jmp
inc
daa
mov
jbe
jp
dec
pop
out
pop
and
ficomp
dec
out
sbb
mov
sbb
shl
nop
loop
sar
retf
jne
sbb
mov
push
mov
fnsave
cmp
mov
and
fild
jo
shr
repnz
mov
pop
repnz
in
in
ds
hlt
dec
mov
add
popf
test
icebp
mov
out
aad
pop
jmp
jne
in
int3
js
sbb
dec
sbb
jmp
pop
aaa
lods
idiv
xor
mov
push
dec
repz
outs
out
loope
retf
js
push
pushf
xlat
movs
rcl
cs
out
aas
fst
stc
or
add
xchg
push
xor
loopne
fisttp
sbb
sub
mov
mov
jecxz
sub
push
shl
xlat
mov
dec
or
sbb
sbb
neg
out
sub
es
(bad)
dec
dec
pop
cmp
inc
or
icebp
xchg
pusha
push
mov
mov
mov
shl
jbe
shl
arpl
stos
lods
sbb
sub
mov
jae
fdivrp
dec
push
repz
jo
lahf
mov
push
dec
or
mov
mov
lock
loope
sub
xchg
or
retf
or
hlt
xrelease
pop
ins
add
aaa
pop
push
and
fisttp
(bad)
mov
mov
mov
pop
push
inc
leave
dec
sub
nop
mov
in
jp
cs
jge
popf
leave
push
jmp
push
pop
ror
jns
dec
push
loopne
(bad)
outs
xlat
hlt
jo
int3
mov
add
and
or
adc
add
test
push
data16
jnp
ror
inc
mov
movs
dec
mov
xor
cmp
imul
add
(bad)
pop
repz
dec
pushf
cld
or
push
dec
jmp
xchg
loopne
aas
mov
inc
cdq
mov
mov
jbe
sbb
or
mov
sbb
movs
(bad)
out
pop
outs
cs
or
ja
adc
cmp
sbb
lea
or
(bad)
cmp
sahf
shl
shr
jl
sbb
inc
xor
jge
pop
cld
sbb
fdivrp
mov
cmp
inc
sbb
bound
aaa
sbb
push
mov
dec
xchg
add
or
lds
movs
push
add
data16
adc
dec
jae
add
and
popf
cwde
(bad)
mov
in
mov
and
dec
xchg
mov
retf
test
in
ja
mov
cmps
xchg
inc
inc
jl
jo
mov
adc
repz
in
repnz
cmp
pop
sub
lea
into
mov
iret
pop
mov
ins
inc
adc
aas
sub
ja
xor
mov
mul
inc
inc
das
les
call
mov
imul
cli
(bad)
cli
jmp
push
mov
in
dec
aaa
mov
and
add
adc
js
(bad)
inc
xchg
(bad)
jge
int
cmp
jb
add
add
mov
lods
jle
push
add
xchg
cmp
fdivr
mov
lea
mov
fwait
icebp
cmp
cmc
xchg
pop
jmp
pop
cmc
scas
fst
icebp
ins
and
test
push
bound
out
inc
push
push
pop
fist
es
fucomp
aas
not
dec
add
add
dec
(bad)
into
add
pop
push
or
push
push
imul
mov
and
jmp
std
pop
ja
sbb
fimul
out
scas
out
push
std
pop
aas
pushf
aaa
stos
xchg
pop
sbb
sbb
outs
push
add
mov
vpcomuq
xor
xor
mov
mov
test
mov
popf
pop
scas
clc
mov
test
xor
shl
je
and
mov
not
mov
push
stc
stos
mov
mov
add
test
cmp
mov
cmc
shl
inc
and
push
out
adc
mov
les
js
jne
sbb
inc
test
push
iret
xor
test
inc
dec
call
sahf
jns
repnz
sbb
sbb
xchg
out
movs
lock
dec
xor
psllw
cli
xchg
sbb
retf
cmps
jmp
pop
push
mov
inc
cmps
or
xor
mov
in
clc
cmc
lea
rol
add
and
lds
push
dec
and
adc
xor
loope
test
push
push
dec
fisttp
cdq
inc
ja
push
fdivr
xchg
ror
jg
jo
push
sub
test
scas
(bad)
dec
sbb
fbld
enter
adc
mov
shl
mov
retf
shl
btc
add
adc
xchg
(bad)
and
(bad)
iret
add
sahf
jne
repnz
into
mov
popa
out
loope
xchg
enter
jae
sbb
dec
cmp
sub
mov
pop
and
popa
fs
ins
push
icebp
xlat
(bad)
mul
(bad)
and
shl
sbb
xor
(bad)
xchg
fld
pop
dec
mov
push
in
and
iret
dec
mov
ins
ror
mov
push
out
stos
jne
aaa
fsub
call
adc
add
pop
icebp
pop
pushf
dec
pop
loopne
test
xchg
repnz
fwait
gs
lea
jl
mov
add
xchg
lea
inc
or
mov
out
daa
daa
mov
cmp
jo
in
inc
inc
xchg
xor
outs
fwait
mov
idiv
je
jbe
or
ins
sbb
xor
mov
cwde
dec
mov
ss
sti
(bad)
out
inc
or
push
pop
out
outs
dec
bnd
cs
mov
ror
and
por
or
dec
push
mov
and
cwde
in
mov
inc
icebp
or
and
lods
mov
add
scas
or
jo
dec
mov
pop
dec
and
shr
std
dec
clc
(bad)
movs
into
inc
xchg
fbstp
jle
jmp
js
or
adc
aad
(bad)
cmps
add
pop
(bad)
xchg
test
jb
nop
movs
add
push
mov
xor
lds
es
imul
or
(bad)
dec
sub
add
test
push
scas
rcl
xchg
mov
(bad)
push
loope
cmc
inc
add
int
pop
js
(bad)
in
je
inc
ss
pop
sub
gs
int
lahf
and
fimul
ret
(bad)
inc
jne
mov
in
fisttp
adc
fs
loop
cs
xor
js
scas
out
mov
mov
pop
out
push
and
mov
loop
jg
jmp
(bad)
(bad)
mov
hlt
inc
push
sub
cmp
lahf
push
push
mov
dec
popf
popf
xchg
or
fisttp
mov
mov
cmp
adc
mov
inc
fwait
test
xchg
cmp
pop
or
test
pop
sub
mov
mov
mov
cmp
mov
and
jo
pop
push
je
and
outs
dec
(bad)
mov
and
out
fild
inc
push
xor
jb
inc
lock
lods
movs
pop
(bad)
retf
out
push
in
pop
ret
mov
lahf
dec
jae
dec
xchg
mov
retf
out
outs
cmp
add
xor
loopne
jecxz
dec
cdq
cmp
mov
add
jo
add
pop
shr
ss
ret
xor
adc
mov
jle
rol
cmp
jge
dec
lahf
les
je
retf
sbb
or
repnz
rcr
into
sub
stos
push
mov
pop
jno
sar
push
dec
mov
fisub
dec
movs
and
mov
sub
ds
scas
jge
(bad)
push
adc
aas
or
sub
fnstcw
std
or
retf
adc
pusha
xchg
jnp
adc
jle
sbb
jb
mov
and
mov
sub
push
cs
xchg
inc
add
sub
rcr
das
(bad)
xchg
sbb
sahf
push
xchg
stc
inc
ins
pop
das
into
pop
cs
mov
ins
or
pop
in
push
dec
xor
xor
fdiv
enter
ret
shr
or
scas
fbld
jl
inc
pop
push
sbb
dec
jecxz
stos
sbb
mov
dec
fcom
dec
mov
inc
push
push
dec
xor
mov
xor
push
cmp
pop
cli
fwait
movs
lds
inc
cmp
call
fld
fwait
pop
call
loope
jae
cwde
sub
ret
stos
repnz
ret
aam
ficom
(bad)
mov
mov
dec
pop
(bad)
sbb
fwait
jmp
mov
dec
jbe
jns
ror
outs
sbb
rcr
jno
ret
(bad)
test
sbb
xor
call
mov
inc
mov
push
stc
test
stc
cdq
or
add
es
add
lea
popa
into
adc
add
add
cmps
cmc
retf
hlt
dec
lahf
test
xlat
in
xchg
pop
push
lods
ror
inc
test
test
inc
sub
fcmovu
in
icebp
test
sbb
dec
ror
mov
jge
cmp
ins
pop
ret
mov
sub
sbb
imul
cmp
movs
mov
or
fadd
xor
cli
or
inc
and
into
imul
adc
add
jp
pop
and
shl
mov
fadd
stos
movs
fst
cmp
mov
push
sub
aas
(bad)
loope
fild
sub
inc
xchg
cmp
jp
jns
mov
leave
fld
push
(bad)
pop
mov
mov
daa
fmul
fs
or
pop
mov
push
pop
rol
ror
fadd
ja
pop
inc
sub
add
add
mov
bound
inc
push
jbe
dec
aas
clc
inc
pop
sbb
mov
adc
sahf
dec
(bad)
jbe
mov
jg
adc
inc
pushf
adc
shr
lods
jb
cmp
test
scas
add
sbb
aaa
nop
dec
xor
jnp
ss
push
ja
addr16
mov
fs
lea
call
lock
sub
cmps
psrlq
clc
xor
into
add
sti
mov
xchg
(bad)
and
out
push
cmp
test
int3
mov
or
scas
or
(bad)
mov
lods
cli
outs
adc
add
aas
test
(bad)
fucomi
push
aam
(bad)
and
ja
inc
dec
fmul
inc
mov
in
mov
jo
outs
aad
cli
loop
inc
pop
cli
push
call
lds
and
sub
pushf
(bad)
mov
fisttp
fldcw
sbb
inc
mov
clc
pop
shl
push
or
test
(bad)
fsubr
fldcw
jecxz
out
leave
scas
xchg
inc
inc
nop
outs
add
cmp
imul
or
mul
sub
cmp
inc
cwde
push
xchg
imul
aaa
int
mov
int
es
inc
xchg
adc
leave
test
retf
lods
fwait
jns
ins
and
stc
dec
jl
jb
in
inc
or
loop
push
mov
mov
in
or
and
and
into
(bad)
(bad)
jbe
and
push
xchg
adc
and
out
inc
fwait
arpl
jne
mov
push
or
enter
mov
push
lods
sbb
sbb
ja
xchg
(bad)
inc
ins
imul
loope
push
xchg
push
fdiv
(bad)
adc
loop
pop
xor
dec
adc
inc
pusha
or
sbb
adc
cmp
jo
movs
pusha
push
add
pop
cwde
pop
hlt
lods
daa
mov
lods
pop
je
jmp
aas
push
pushf
call
sbb
std
pop
stos
sahf
int
add
shl
dec
mov
or
sbb
aam
cld
push
sbb
or
stos
imul
push
mov
jg
arpl
fcmove
out
sub
pop
pop
xor
(bad)
lods
pop
push
xlat
lea
xchg
pop
pop
adc
mov
mov
scas
xor
clc
sbb
xlat
xchg
cmp
inc
mov
adc
push
fsub
repnz
push
or
or
inc
pop
(bad)
and
pop
sbb
push
mov
dec
je
movs
adc
jge
pop
sbb
pop
iret
test
lds
mov
and
mov
out
mov
dec
dec
mov
xor
or
pop
cs
into
fbstp
adc
scas
fwait
inc
adc
inc
lock
push
mov
aam
fstp
dec
mov
arpl
mov
sub
sub
mov
(bad)
daa
fwait
loopne
cmp
push
cmps
(bad)
pop
dec
jp
int
cld
inc
add
cmp
inc
sub
out
mov
sti
cdq
adc
add
xor
mov
pop
or
gs
push
pop
jo
sub
scas
int3
inc
pusha
jae
inc
daa
or
pop
mov
shl
mov
test
cmps
add
fild
(bad)
hlt
ds
shr
add
xor
stos
inc
or
mov
pop
(bad)
jg
retf
popa
movs
mov
test
mov
or
inc
(bad)
jmp
leave
in
jg
or
mov
(bad)
icebp
dec
mov
retf
(bad)
shr
loop
(bad)
jmp
data16
add
pop
add
push
and
dec
ffreep
stos
and
or
push
dec
std
mov
lea
addr16
adc
jns
push
int
sbb
inc
aad
adc
mov
sub
or
sub
ins
mov
pshufw
mov
jae
add
popa
push
pop
push
in
sub
pop
retf
adc
in
cmp
scas
imul
and
pop
imul
inc
push
adc
and
sub
pop
pop
jmp
lahf
mov
mov
sbb
fsubr
imul
(bad)
pop
and
inc
inc
sbb
sbb
aas
test
ficomp
inc
sbb
inc
pop
mov
sbb
mov
(bad)
fdivr
mov
push
pop
jge
in
pop
xchg
push
sar
std
or
xchg
push
(bad)
mov
jp
pop
jns
es
inc
sar
xor
outs
aaa
enter
sbb
lods
push
pop
int
ror
sar
(bad)
push
pushf
cli
pop
sbb
fbstp
mov
out
push
jle
fisubr
adc
pop
adc
inc
in
xchg
cmc
lahf
mov
xchg
pushf
dec
popf
add
iret
shl
push
xchg
pop
xlat
push
test
pop
in
dec
jns
sub
(bad)
out
xchg
ret
iret
jl
xchg
sub
fwait
fs
or
jg
movs
xor
mov
mov
ret
daa
cmp
nop
inc
pusha
sub
fdiv
inc
lods
fs
jo
cmp
and
lahf
sbb
dec
loope
imul
dec
into
cld
dec
ror
sub
adc
movntps
xor
outs
(bad)
cli
xchg
cdq
je
jmp
(bad)
fdiv
stos
jbe
test
cld
pushf
inc
xor
gs
mov
and
cmp
std
mov
scas
cli
ins
and
mov
pushf
aad
fs
sub
out
js
or
dec
mov
aas
dec
adc
mov
rcl
stc
call
aad
pop
push
nop
push
cdq
ficomp
xchg
pop
loopne
jl
leave
imul
ficom
or
xchg
(bad)
jae
mov
ss
pop
(bad)
nop
jmp
cmp
loop
lods
int
jae
push
aas
loopne
sbb
mov
push
out
shr
ss
call
les
popa
loop
jle
addr16
(bad)
fld
in
dec
lea
retf
sub
mov
fiadd
xchg
into
imul
ins
mov
cwde
push
je
mov
mov
mov
jae
jnp
sub
sbb
test
shl
test
test
jmp
sub
daa
jl
push
andnps
idiv
push
iret
clc
jge
fstp
aam
fabs
push
(bad)
and
mov
adc
aaa
push
les
out
jbe
ror
adc
sti
push
jecxz
neg
adc
sar
pop
pop
or
sbb
sub
lock
pop
neg
add
and
jmp
(bad)
jo
neg
cmp
mov
loope
push
icebp
stos
data16
add
jg
into
repz
push
or
mov
jge
cmp
rcr
mov
call
outs
daa
call
jp
int3
out
fistp
outs
dec
clc
stos
or
cmp
scas
adc
cs
dec
jge
movs
mov
fmul
fist
lahf
add
cmps
inc
dec
adc
add
mov
pop
dec
jl
scas
inc
cs
rcl
js
imul
ror
scas
loope
push
popf
fs
movs
movs
mov
pop
inc
pop
pop
ss
xchg
pushf
fsub
push
retf
fnstcw
popf
push
adc
nop
mov
sub
mov
ins
pop
iret
jle
mov
xor
sub
icebp
mov
mov
les
scas
xor
dec
call
xlat
add
mov
das
adc
fwait
stos
push
enter
pop
sbb
lods
out
ins
repnz
add
dec
or
jmp
test
popf
xchg
mov
pop
adc
adc
xor
mov
lock
mov
adc
aad
sahf
scas
int3
dec
in
mov
or
cmp
sbb
addr16
xor
adc
jmp
jae
lods
ja
mov
or
mov
pop
cmp
jae
mov
jmp
cli
lea
arpl
pop
mov
daa
sub
xor
outs
retf
jle
xlat
aam
adc
dec
push
dec
adc
mov
je
dec
aad
ja
jmp
pop
mov
jo
das
repnz
daa
xchg
lods
cwde
mov
popa
adc
in
xor
clc
test
mov
sub
ss
pushw
sub
sbb
scas
or
push
lock
cmps
mov
xchg
cmp
fldlg2
add
loop
adc
inc
cmp
dec
popa
repz
cmc
jne
repnz
inc
pop
inc
push
mov
int3
rcl
mov
cmp
loope
lds
aam
mov
dec
jp
nop
jne
(bad)
outs
in
dec
loop
mov
fcomp
stc
mov
in
aas
push
mov
aad
or
ficomp
ins
xor
adc
in
inc
mov
movs
jns
dec
aam
jbe
pop
and
out
ins
aaa
mov
mov
sub
data16
ss
out
ja
cmp
fstp
ja
xor
into
fsub
ror
dec
cli
pushf
repnz
pop
jae
imul
popa
lods
rcr
mov
rol
adc
push
cdq
push
sub
jl
mov
ret
push
sub
jo
dec
outs
inc
test
fimul
aas
fsubrp
or
xor
push
repnz
ret
jl
dec
jno
adc
pop
and
cld
xor
sub
cs
sub
xchg
xchg
mov
sub
mov
movs
add
cmp
mov
sbb
jb
fild
mov
shl
mov
sbb
jmp
daa
fsubr
sbb
jae
jne
mov
repnz
and
scas
dec
iret
add
leave
fcmove
lock
sbb
(bad)
add
add
push
mov
and
repz
es
jmp
shr
fdiv
sti
(bad)
jne
(bad)
mov
rcr
out
pop
push
cmps
jmp
scas
inc
icebp
aaa
cmp
mov
mov
out
scas
ins
pop
in
sti
scas
mov
(bad)
pop
jno
push
fld
addr16
mov
mov
mov
mov
xchg
jecxz
fisub
mov
and
sbb
sti
das
test
ficom
inc
fstp
hlt
out
dec
rol
cmp
sub
adc
lock
adc
mov
mov
fwait
inc
popa
fild
imul
scas
jl
cwde
test
mul
xchg
xchg
ss
je
test
imul
fs
and
xchg
outs
popf
mov
int3
loop
push
mov
ret
sbb
add
sub
icebp
mov
adc
mov
push
test
pop
stc
pop
dec
pop
jl
jmp
push
xchg
xlat
fnstsw
mov
iret
xchg
inc
pop
jle
adc
and
adc
mov
pop
mov
push
rol
inc
out
out
enter
dec
sub
xor
fscale
idiv
movs
sub
stc
xchg
push
fiadd
adc
movs
out
mov
adc
out
dec
adc
xchg
sbb
push
std
cdq
xor
sti
add
mov
rol
mov
hlt
push
mov
ror
icebp
cs
(bad)
push
push
ds
call
retf
test
add
(bad)
shl
dec
sbb
icebp
pop
sub
mov
rol
loop
xacquire
lahf
iret
std
pop
jecxz
fwait
clc
fild
adc
push
add
xchg
jns
mov
mov
mov
dec
imul
popa
and
fldcw
adc
mov
dec
inc
shl
cmp
cmps
xchg
popf
mov
pop
pop
pop
jmp
xchg
shl
sahf
jmp
lods
repnz
sahf
jns
mov
pop
or
scas
and
jae
cmps
movs
adc
push
mov
mov
adc
jnp
ds
push
push
pusha
lea
push
add
test
test
out
sbb
shl
or
jne
pushf
pop
les
icebp
push
and
es
inc
xchg
lock
shl
imul
mov
xchg
add
std
inc
div
push
cmps
push
fwait
dec
and
fsubr
cli
sub
mov
add
push
dec
test
(bad)
mov
jne
out
inc
push
add
jp
cld
jg
jnp
ins
aad
nop
addr16
sbb
sub
add
shl
push
sahf
out
loopne
pop
mov
loope
gs
inc
sub
sub
mov
in
sbb
scas
cmp
add
cli
shr
arpl
imul
adc
pop
pop
mov
push
outs
js
jae
xchg
adc
sbb
sub
cmc
xchg
popa
rcl
sub
cmp
enter
cli
or
test
pushf
xchg
in
rol
add
sbb
add
xchg
mov
inc
xchg
nop
enter
clc
test
cmp
sub
cmp
add
inc
jg
push
sbb
xor
mov
sub
or
or
or
fild
test
xchg
fnstcw
fcmovnb
ficom
test
or
add
jae
adc
test
ds
scas
test
adc
or
add
mov
sub
jl
xor
adc
xor
lea
mov
sub
rcr
fisttp
and
dec
push
aad
xor
cli
mov
test
xlat
mov
sub
mov
ss
fldenv
int
xor
cmp
sbb
or
and
popf
dec
dec
xchg
dec
and
jno
ficom
cld
mov
and
mov
push
(bad)
jae
int3
push
push
ins
movs
mov
push
cmp
(bad)
inc
xchg
sar
jmp
mov
mov
stc
add
xchg
pop
inc
push
inc
cmp
std
cmp
(bad)
cld
sub
inc
sahf
and
and
push
cmp
xlat
push
bound
(bad)
push
in
cdq
cmp
shl
jl
mov
mov
icebp
jle
dec
pop
(bad)
sti
fiadd
popa
lds
sub
adc
dec
loop
jmp
lock
push
addr16
out
add
cmc
pushf
jl
mov
xchg
inc
js
jecxz
(bad)
xor
stc
mov
adc
pop
push
jbe
jmp
inc
lods
mov
aam
cmps
out
mov
imul
cmp
mov
call
jno
cmp
popf
mov
(bad)
cdq
(bad)
fdivr
repz
lods
mov
dec
push
cmp
(bad)
jg
or
out
dec
out
cmc
xor
fcom
cmovo
call
pop
pop
mov
mov
jmp
mov
ja
movs
pushf
jecxz
cmps
lahf
inc
rol
lea
cmp
mov
ret
push
sbb
sbb
jmp
and
iret
in
test
push
stc
jecxz
sbb
nop
mov
cld
sbb
push
or
push
fwait
int
in
or
(bad)
sub
push
mov
push
cmp
mov
add
loopne
dec
in
bound
das
fld
adc
add
fnstenv
int
jno
js
ret
cmp
sti
loope
inc
je
imul
imul
ins
mov
nop
xchg
cli
push
imul
adc
mov
pop
sub
dec
pop
neg
test
mov
out
ror
imul
sbb
xchg
cs
fwait
dec
ficom
xlat
mov
adc
cwde
mov
fisub
repz
mov
hlt
inc
and
mov
in
adc
xchg
or
cmc
cli
push
outs
pop
mov
bound
enter
sub
sub
cli
pop
pop
mov
arpl
mov
and
push
mov
mov
adc
inc
inc
push
mov
inc
xchg
loop
push
cmps
call
sub
movs
adc
xor
movs
scas
int
mov
inc
add
retf
push
mov
adc
hlt
pop
mov
adc
out
call
(bad)
call
mov
pop
push
dec
mov
out
add
repnz
fcomp
push
jl
or
loop
arpl
adc
les
fistp
and
inc
xchg
jno
dec
cmps
scas
sub
pop
sbb
cmp
lods
iret
fcomi
mov
xchg
dec
movs
sbb
repz
inc
nop
movs
in
cmp
or
pop
mov
xor
xlat
jno
jecxz
sbb
add
add
xor
outs
std
test
xor
push
shl
lahf
xor
inc
int
jmp
fsub
rol
cdq
shl
xlat
sti
mov
xlat
je
test
jb
jns
inc
imul
imul
cmp
imul
(bad)
jg
(bad)
test
test
add
mov
dec
cmps
dec
push
repz
adc
adc
rol
mov
in
imul
gs
(bad)
cmps
(bad)
dec
mov
push
or
iret
mov
iret
xchg
ins
sub
pushf
lea
push
adc
out
mov
pop
out
test
scas
jecxz
and
mov
sahf
mov
push
xchg
call
shl
push
scas
mov
pop
jg
mov
pop
lock
jb
ins
int3
in
enter
lea
push
fwait
js
dec
push
and
cmc
pusha
jmp
mov
bound
sar
loop
pop
(bad)
mov
adc
dec
test
dec
nop
jno
sahf
push
sub
fild
cs
or
or
push
fcmovnbe
mov
aas
mov
mov
vmwrite
mov
push
test
push
sahf
cmp
push
rcr
into
jnp
cmp
shl
jl
test
jmp
out
mov
xchg
add
test
sbb
call
mov
ins
adc
scas
es
sbb
inc
cmp
xchg
add
dec
je
daa
jb
rol
xchg
mov
pop
les
dec
jg
sbb
add
xor
fld
jp
xor
sub
dec
aad
fld
or
ins
jne
and
mov
cs
das
inc
jb
retf
daa
and
ins
cs
mov
inc
xchg
cmp
movs
shr
lea
xor
push
adc
push
add
test
es
sar
sahf
ss
mov
cdq
retf
js
aas
out
aaa
lods
lea
pop
bound
bound
xchg
mov
cmp
and
xor
cdq
fs
sub
(bad)
push
ins
test
sbb
out
pop
psllq
and
pop
mov
mov
xlat
rcl
xchg
inc
retf
lahf
int
add
adc
ror
dec
mov
mov
lahf
aas
xchg
cli
bswap
inc
clc
xor
dec
inc
cmps
ret
jne
cli
or
mov
mov
xchg
and
add
jl
xchg
inc
loope
in
xor
dec
nop
xchg
call
(bad)
mov
pop
loop
call
(bad)
sbb
sbb
(bad)
ret
popa
xor
loop
cmps
gs
(bad)
adc
xor
mov
adc
adc
(bad)
outs
(bad)
in
out
pop
test
mov
mov
or
pushf
mov
dec
jge
stc
jmp
loopne
mov
cmp
lea
lock
pop
push
ds
xchg
adc
mov
xchg
out
jg
xor
inc
adc
pop
jns
pop
or
scas
daa
or
xor
mov
imul
loop
scas
push
xor
dec
mov
or
jne
mov
sbb
inc
inc
(bad)
xchg
jb
enter
or
stc
jle
jmp
rol
imul
ss
repnz
sti
call
add
cdq
sub
mov
enter
push
je
pop
repz
add
cmp
xor
aam
mov
dec
sar
rcr
out
and
pusha
in
sar
pop
mov
stc
lock
div
movs
movs
movs
fimul
jmp
arpl
mov
popa
sub
jmp
push
bound
ror
ret
xor
bound
(bad)
cmps
in
imul
cmps
mov
call
cmc
xor
das
xor
pusha
mov
push
nop
mov
jb
add
xchg
push
dec
push
sub
inc
repnz
jb
mov
sahf
scas
iret
jb
nop
pop
(bad)
mov
repnz
dec
and
mov
leave
xor
data16
hlt
xchg
pop
mov
add
or
cmp
out
inc
sbb
cld
fisubr
hlt
in
lea
popa
pop
or
sbb
adc
dec
mov
sub
out
scas
out
inc
cmp
push
xchg
adc
pop
or
(bad)
not
mov
or
into
inc
and
push
mov
out
cdq
sahf
popa
pop
adc
sub
imul
lods
int
xchg
imul
int3
cld
sar
push
int3
dec
das
addr16
shl
stc
stc
jns
ret
int
sub
xchg
jns
sbb
repz
mov
inc
int
cs
inc
sub
hlt
push
dec
(bad)
and
leave
xchg
movs
add
pop
mov
xor
dec
call
sti
push
and
ins
stc
pop
adc
movs
bound
rcl
outs
adc
push
jno
sub
js
xor
jmp
(bad)
hlt
mul
test
mov
out
and
stc
cdq
push
xor
xchg
adc
sub
pop
jp
mov
shl
stc
wbinvd
push
cmp
push
sub
xor
aam
push
lods
out
lea
iret
fsubrp
int3
or
xchg
in
xchg
aaa
jmp
call
sub
fldpi
push
arpl
jmp
(bad)
mov
mov
(bad)
pop
cmp
in
pop
add
pop
mov
sub
mov
mov
or
jecxz
daa
(bad)
xlat
hlt
fs
push
sar
mov
pop
sub
out
cld
sub
xor
lahf
lea
mov
sbb
pop
mov
in
mov
(bad)
leave
inc
and
push
sub
jbe
mov
xchg
pop
cmp
lea
int
or
retf
mov
sub
movs
xor
enter
mov
push
pop
cmp
(bad)
mov
pop
pop
dec
xlat
mov
push
in
and
(bad)
dec
lock
or
iret
sbb
clc
gs
cmp
mov
(bad)
ds
and
xor
loopne
(bad)
cmp
xchg
adc
xchg
jbe
(bad)
stos
xchg
fs
out
mov
add
movs
div
ror
inc
dec
neg
push
pmaddwd
retf
data16
mov
movs
push
cmp
jl
mov
test
adc
adc
dec
hlt
adc
mov
int3
mov
js
push
cmp
mov
movs
cmp
dec
mov
xchg
in
cmps
jl
cmp
std
stos
aad
xor
icebp
in
fiadd
sub
sub
jns
jle
arpl
cmc
cmp
mov
imul
dec
enter
into
cs
sub
loop
add
rcr
dec
cmp
adc
dec
ret
cwde
lahf
cmp
out
mov
push
cli
xor
cld
dec
cdq
jecxz
xor
dec
xor
pop
pop
sub
add
mov
fmul
aam
and
and
inc
std
inc
mov
jle
xor
inc
jl
cli
scas
test
in
mov
dec
add
fisttp
add
in
mov
cwde
movs
or
dec
dec
mov
and
inc
test
add
lock
xchg
jg
push
pop
dec
fbld
inc
js
int3
enter
adc
dec
outs
jno
jno
sbb
mov
mov
lds
test
add
lea
ins
push
fild
cmps
and
inc
loopne
scas
in
sub
ins
dec
cld
xchg
and
icebp
inc
adc
iret
mov
(bad)
leave
jp
(bad)
ds
and
pushf
lods
sbb
call
jb
stc
dec
mov
inc
adc
mov
aam
sar
dec
sar
nop
(bad)
xchg
int3
mov
hlt
push
inc
les
into
mov
and
out
popa
test
adc
iret
nop
lds
test
pop
xchg
cld
or
add
repz
fidiv
cmp
mov
imul
sub
lea
fucomip
scas
xor
arpl
sti
jb
adc
or
jmp
push
and
add
lock
call
sti
adc
push
test
repnz
lds
nop
stos
loope
add
cmp
pop
jmp
or
pop
jno
sbb
push
adc
shl
or
call
in
xor
mov
cmp
or
cmp
mov
xchg
jg
and
ins
push
into
sbb
outs
jae
outs
retf
dec
mov
fst
or
cmp
cli
in
out
and
sbb
inc
push
ret
jecxz
inc
adc
aad
add
xchg
sub
add
in
test
ins
in
fcomp
cwde
adc
jbe
and
ret
or
jb
push
mov
idiv
test
fcomp
jmp
xchg
leave
push
mov
add
jb
xor
dec
sbb
and
(bad)
jecxz
xor
movs
inc
mov
and
push
mov
daa
adc
mov
nop
or
push
push
mov
cmp
dec
cmp
cmp
push
icebp
adc
dec
push
xor
jecxz
sub
imul
cmc
(bad)
jecxz
pop
sub
push
mov
sub
mov
pop
cmc
sbb
loop
cld
mov
pop
mov
shl
fcom
jmp
xor
stos
lahf
fldenv
jle
mov
adc
out
push
add
mov
mov
sar
ror
test
or
dec
(bad)
mov
jns
sbb
xor
imul
out
stos
add
push
fild
fist
in
data16
pushf
add
pop
dec
fdivp
ins
push
mov
adc
test
jmp
mov
xchg
int
adc
adc
sub
mov
pop
xchg
fdivr
lods
push
aaa
ja
into
lea
xor
std
and
and
das
push
push
sar
inc
cmc
push
push
add
mov
sub
mov
out
xchg
stc
push
fsub
test
xchg
xchg
or
stos
lods
sub
inc
push
mov
push
sbb
stos
inc
xchg
nop
stos
push
inc
mov
les
(bad)
push
xchg
pop
aad
stc
pusha
cmp
or
cmp
int
cmc
(bad)
js
cmc
mov
dec
(bad)
out
or
iret
stc
ret
cmp
jecxz
xchg
nop
in
jge
mov
scas
sub
cmp
xor
outs
aas
bound
in
or
shl
cmps
vsubss
mov
ins
loope
sub
inc
ds
es
fcom
call
dec
push
in
sti
jmp
pop
icebp
pop
sbb
cmc
jg
dec
push
leave
loope
push
push
mov
mov
out
lahf
aaa
or
mov
jne
cmp
or
xor
jmp
pop
mov
jg
test
fwait
mov
in
loopne
jp
mov
(bad)
or
aad
xor
dec
out
push
inc
mov
mov
jne
jae
push
into
push
or
ret
and
sub
or
lods
aas
dec
sub
fist
ret
push
push
xchg
call
neg
adc
push
ret
dec
sbb
xchg
dec
mov
js
jnp
outs
push
sub
fldenv
popa
or
aas
retf
rol
aad
fdivr
hlt
(bad)
cmp
icebp
lods
dec
hlt
dec
or
sbb
inc
in
mov
jne
(bad)
cmc
push
nop
or
aaa
xchg
sub
mov
js
add
nop
js
push
outs
add
test
(bad)
mov
dec
out
and
jle
or
test
fcomi
mov
mov
les
and
inc
test
fbld
mov
enter
imul
in
lock
aad
jecxz
cmp
add
inc
aad
inc
mov
mov
xor
cmp
push
lds
sbb
cmp
add
adc
mov
and
inc
cmp
mov
inc
sbb
scas
jns
adc
mov
cs
dec
into
ja
mov
add
pop
mov
(bad)
inc
in
imul
mov
clc
in
or
sbb
ss
sbb
aas
pop
stos
addr16
mov
push
or
mov
mov
pop
enter
add
pop
cwde
push
pop
mov
inc
fcmovbe
imul
in
sbb
mov
shr
aaa
aas
mov
leave
cmp
jecxz
mov
adc
fmul
lea
sbb
repz
scas
xchg
dec
cmp
mov
sub
out
(bad)
out
shr
movs
sbb
or
push
adc
ret
xchg
inc
mov
pop
mov
cld
icebp
cmp
pop
sti
retf
push
pop
xor
mul
test
(bad)
push
sub
loope
jo
dec
push
sub
pop
adc
(bad)
(bad)
aas
cmp
stos
inc
aas
xchg
(bad)
lock
in
mov
rcr
mov
leave
mul
push
shr
pushf
shl
xor
stos
sbb
sub
dec
jecxz
and
sbb
in
lea
add
sbb
rcr
or
adc
add
and
and
arpl
repnz
cli
aaa
(bad)
sub
mov
scas
fsubr
mov
out
scas
(bad)
out
pusha
rcr
adc
mov
pop
or
jmp
push
repnz
(bad)
sbb
retf
push
in
pop
jecxz
mov
fdivr
into
(bad)
test
cdq
inc
test
cmps
mov
ja
push
retf
sub
in
nop
xor
xchg
ja
mov
ret
loopne
pop
pop
xchg
jg
push
jp
pop
out
cwde
jecxz
inc
call
popa
retf
test
fldenv
js
stos
leave
test
inc
fnstsw
je
mov
scas
push
xor
and
mov
lods
enter
xor
retf
int3
div
ror
and
out
mov
jmp
dec
add
adc
adc
mov
(bad)
sahf
cmp
ss
(bad)
jnp
xlat
jb
sub
jmp
push
clc
mov
jmp
icebp
fidivr
in
or
leave
dec
push
fcmovnbe
aad
and
cmps
xor
mov
std
jnp
out
cmp
sti
lea
mov
cmps
sub
repnz
sbb
xor
cmp
mov
sahf
push
mov
cmp
mov
xchg
imul
lods
or
dec
cmp
(bad)
fimul
dec
dec
lock
pop
mov
loopne
jb
pop
dec
pop
cmp
inc
jne
dec
mov
sahf
mov
xor
dec
sub
fldcw
xchg
add
xchg
popf
mov
adc
inc
cmp
ja
shl
add
and
cmp
or
push
adc
mov
jmp
nop
jle
sbb
pop
dec
das
popf
fist
fdivr
xchg
ins
rcr
gs
aaa
shl
push
push
xchg
mov
and
jp
cmp
in
pop
push
jb
mov
add
jnp
inc
stos
les
mov
xchg
pop
mov
and
rsqrtps
lods
cdq
sbb
mov
inc
sar
add
arpl
dec
mov
aam
stos
outs
cmp
cs
adc
shl
loope
mov
es
xchg
jmp
pop
jmp
les
and
js
push
jecxz
push
(bad)
push
pop
and
push
sub
call
mov
stc
(bad)
ss
xor
push
(bad)
or
push
add
xor
sbb
push
outs
xor
(bad)
or
pushf
cmp
xchg
sub
das
cmp
mov
mov
push
outs
loop
in
add
dec
mov
xchg
cmp
pop
rdpmc
push
bts
cli
sub
rcl
or
mov
sbb
cmp
jnp
js
jecxz
jle
mov
sub
sti
sbb
jae
cmp
(bad)
in
mov
nop
cmp
xor
nop
(bad)
dec
adc
inc
ja
fwait
push
mul
jle
mov
add
cwde
clc
xor
test
inc
sbb
inc
adc
xlat
push
ja
push
cmp
xchg
mov
hlt
inc
adc
(bad)
fadd
adc
rep
int
shl
xchg
(bad)
in
mov
into
pop
outs
xlat
cmp
adc
mov
cmp
(bad)
arpl
test
pusha
popf
shr
add
xchg
xchg
push
mov
mov
je
shl
test
cmp
xchg
nop
div
jmp
mov
movs
xchg
cmp
sar
(bad)
sti
imul
xchg
cmp
in
data16
dec
loopne
pop
push
pop
rcl
push
je
jno
or
lea
stos
pop
and
pop
aam
push
mul
aad
add
pop
rol
fwait
mov
lea
nop
push
push
or
push
mov
nop
fstp
gs
sbb
enter
imul
push
xchg
and
sbb
imul
xlat
xor
lds
inc
xchg
pop
or
jp
or
neg
add
add
mov
xchg
inc
rcr
clc
jns
xchg
inc
iret
repnz
dec
sub
ds
mov
inc
jge
mov
mov
sti
sti
cmp
cmp
xor
loopne
mov
inc
call
je
push
mov
mov
dec
es
dec
scas
mov
cmps
cmp
dec
xchg
iret
add
mov
jp
pop
fwait
test
inc
push
mov
push
aad
adc
sti
out
sub
push
pop
pop
pushf
push
stc
adc
call
dec
sbb
ja
or
adc
leave
mov
jp
add
xchg
mov
xor
jbe
hlt
imul
xor
shr
mov
(bad)
(bad)
mov
sub
jle
call
loop
pop
adc
sub
sti
fisubr
lds
call
and
sbb
sbb
mov
sahf
inc
stc
or
leave
ins
or
inc
or
dec
and
adc
movs
sbb
jnp
adc
xor
idiv
mov
jno
aaa
pushf
push
cmp
shr
or
lahf
shl
inc
cmp
add
mov
retf
xchg
mov
mov
int
icebp
sub
and
pop
add
sub
jle
sbb
(bad)
adc
and
xchg
(bad)
dec
dec
xor
(bad)
and
pop
mov
ret
test
xor
xchg
mov
dec
mov
movs
inc
test
cmp
fnstsw
stc
test
fnsave
jl
mov
repnz
mov
push
(bad)
sub
call
jb
mov
dec
aaa
or
fnstsw
sbb
ja
mov
aam
or
xlat
jae
inc
loope
arpl
sbb
sahf
aad
and
frstor
outs
jo
test
cmc
fld
imul
inc
cmp
push
xchg
mov
pusha
aaa
mov
jmp
xor
mov
push
sbb
add
test
or
sub
outs
in
mov
ja
push
inc
imul
mov
call
out
ds
scas
add
xchg
add
push
pop
scas
aam
dec
sub
imul
not
pop
or
popf
xchg
cmp
mov
mov
mov
jg
jmp
sub
(bad)
out
adc
je
call
and
sahf
(bad)
add
cmps
push
jo
ins
dec
push
cmps
jg
mov
(bad)
pop
push
xchg
add
xchg
xor
mov
and
or
jae
cmps
jns
ss
pop
jae
pop
shr
movs
bound
scas
dec
fs
cmp
inc
test
and
cmp
sbb
scas
dec
jb
cmps
pop
xchg
jl
test
jmp
or
pusha
or
sbb
and
imul
clc
out
jecxz
jae
test
sub
cli
adc
jb
inc
mov
pop
xor
lea
add
xor
sub
(bad)
adc
adc
(bad)
out
es
mov
je
add
inc
(bad)
pop
mov
mov
push
jno
and
sub
mov
mov
xor
jne
rcl
mov
xchg
dec
(bad)
stc
add
sub
mov
or
xor
js
mov
mul
dec
add
jg
xor
imul
pop
add
cmc
je
push
push
into
pop
mov
leave
jmp
xchg
cwde
xchg
sbb
lods
add
push
loop
dec
jns
sbb
mov
das
xor
adc
push
fadd
mov
push
add
push
or
mov
xor
lods
pop
imul
call
je
xchg
pop
popf
leave
lahf
cwde
xor
jp
jnp
ins
fild
fsub
mov
dec
je
or
ds
mov
sbb
cmp
jbe
dec
add
cmps
loope
mov
or
mov
push
aas
cmp
pop
aaa
shl
mov
test
imul
push
mov
test
xlat
stos
(bad)
jns
xchg
das
jmp
mov
mov
xor
sbb
adc
and
sbb
dec
das
inc
xor
imul
stc
push
ins
cmp
inc
adc
sbb
(bad)
pop
pop
jne
pop
or
mov
stos
inc
cmp
shl
sbb
imul
pop
dec
loopne
popa
sahf
or
mov
mov
arpl
retf
(bad)
out
or
mov
aas
cwde
test
icebp
or
mov
imul
push
cdq
inc
data16
(bad)
mov
stos
push
aas
push
stos
aad
loope
sub
call
hlt
repz
hlt
mov
rcr
mov
std
jmp
in
xchg
ss
inc
lods
in
(bad)
xchg
mov
xor
pop
test
cdq
adc
sbb
rcpps
jl
push
cld
fcomp
(bad)
in
mov
in
int
in
inc
xchg
push
pop
packsswb
push
jbe
pop
pushf
aam
push
jge
shl
mov
imul
inc
retf
je
leave
adc
jge
and
cmc
call
mov
dec
push
inc
dec
adc
sbb
and
sub
inc
push
jge
push
cmp
rcl
xchg
xor
add
(bad)
repnz
clc
pusha
repz
mov
pop
xchg
test
and
or
mov
or
push
sbb
dec
cli
lds
sub
cwde
fs
xor
fwait
xor
add
mov
sub
test
xchg
xchg
std
scas
imul
in
dec
sbb
pop
jecxz
dec
pop
push
jae
mul
and
add
push
pop
dec
xor
hlt
inc
push
inc
xchg
sbb
js
sbb
jmp
and
(bad)
jecxz
loopne
dec
mov
std
lock
sbb
pop
fadd
dec
das
adc
out
and
cli
sbb
add
adc
scas
mov
push
inc
lods
(bad)
fidiv
push
into
dec
jbe
add
(bad)
jmp
adc
js
mov
cdq
repz
adc
iret
bound
pusha
pop
and
xor
retf
pop
fadd
fild
mov
(bad)
sbb
sbb
out
and
mov
sbb
mov
test
inc
popf
jp
dec
mov
loope
fwait
repnz
pop
addr16
push
mov
and
test
cmp
adc
xchg
adc
inc
dec
mov
icebp
sar
icebp
sbb
(bad)
idiv
xchg
arpl
sahf
sub
jle
mov
adc
imul
call
jmp
mov
add
xor
adc
jbe
cmp
stos
clc
add
sti
and
sahf
pushf
pop
sub
bound
or
mov
jne
in
jp
or
stos
shr
pop
int
retf
pop
in
cmp
mov
rcl
cwde
lea
dec
push
inc
sbb
sub
(bad)
mov
mov
aad
dec
sbb
pop
sbb
push
inc
pop
outs
pop
fisttp
mov
imul
sar
pop
lods
shl
and
xchg
nop
push
push
int
adc
arpl
mov
stos
repz
popa
cmps
or
ds
mov
dec
inc
stos
pop
push
mov
xor
mov
test
ja
(bad)
loopne
(bad)
popa
jnp
mov
in
or
pop
mov
mov
add
sub
jecxz
pop
or
inc
xor
test
jo
push
out
movs
cvtps2pd
adc
push
call
call
jb
push
fsub
add
stc
push
sbb
fld
mov
movs
stc
fdivr
out
inc
cmps
cmp
int3
mov
add
sub
jo
jmp
mov
mov
cli
in
lods
and
fild
fmul
icebp
mov
stos
bnd
retf
pop
push
mov
pop
cli
popf
cmp
cmp
pushf
ret
fadd
out
rol
sbb
dec
cmp
and
rol
fst
ret
cmp
test
and
ins
das
mov
mov
(bad)
xchg
push
dec
and
xchg
mov
xchg
and
push
in
mov
pop
(bad)
out
sub
dec
test
and
int3
aas
pop
(bad)
adc
push
jl
in
inc
adc
and
test
dec
mov
js
enter
(bad)
jp
inc
push
inc
out
outs
pop
mov
add
shl
outs
cwde
add
in
shl
xchg
aad
aad
lds
iret
add
cmp
je
add
mov
rcr
mov
mov
adc
pop
imul
push
popf
je
aam
fwait
jno
xor
pop
lods
jb
int
sub
test
inc
fisubr
fwait
inc
into
mov
out
call
or
int3
xlat
sub
mov
pushf
jecxz
dec
mov
mov
dec
inc
in
pop
xor
ss
cmp
jmp
scas
dec
mov
ins
jb
push
or
xchg
jo
(bad)
xchg
fimul
test
jns
dec
sub
bound
cs
mov
add
xchg
or
xor
(bad)
int3
and
xor
mov
jp
dec
sub
mov
lods
cwde
fst
aas
xor
es
push
lods
cmps
mov
mul
jae
fwait
cmps
dec
jmp
loop
call
mov
or
xlat
jne
xor
mov
out
aam
sar
imul
les
xchg
add
test
test
cmps
pop
aam
xchg
fadd
es
cmp
jp
test
push
cmp
scas
mov
out
add
shl
dec
cmp
adc
jmp
pop
out
push
in
dec
out
add
out
inc
ret
jbe
xchg
xlat
out
into
dec
(bad)
pop
into
mov
mov
stc
addr16
adc
push
and
test
jle
jne
rol
inc
fcmovbe
pushf
out
jo
xor
aam
ror
test
jae
repnz
xlat
scas
and
ja
sbb
adc
addr16
push
push
push
mov
in
ins
hlt
or
ja
and
push
sub
inc
mov
inc
daa
xchg
inc
scas
popf
in
sub
add
icebp
mov
pushf
in
pop
loop
mov
rcl
outs
pop
setne
and
fucom
cmp
push
shl
or
push
shl
add
cmps
enter
rcl
xor
and
push
mov
fnstsw
mov
xchg
out
xchg
push
das
mov
std
jmp
and
imul
clc
fnsave
mov
xor
jo
daa
ja
jmp
popa
sbb
inc
loop
push
test
mov
imul
jmp
xlat
enter
xchg
loope
mov
fbstp
pusha
fldenv
gs
xchg
mov
push
popa
in
rcl
jp
dec
fistp
into
idiv
jl
in
sub
sub
call
adc
inc
shr
rcl
mov
cmovbe
sbb
add
sbb
fistp
jne
in
adc
(bad)
aam
adc
mov
dec
pop
dec
mov
adc
ret
sbb
add
das
mov
cmp
test
sbb
jl
jae
mov
lea
cmp
xor
stos
fldcw
hlt
or
mov
jle
push
xor
mov
jecxz
(bad)
mov
mov
div
fdiv
pop
pop
mov
pushf
add
dec
push
jge
in
mov
sahf
call
imul
repnz
outs
push
inc
cdq
mov
(bad)
push
retf
inc
fucomi
(bad)
dec
sub
inc
jno
mov
and
loopne
(bad)
jnp
test
int3
xchg
sar
inc
(bad)
xchg
mov
xchg
and
xlat
icebp
xchg
mov
ins
popa
cmp
push
or
or
push
ja
in
sub
es
push
xchg
dec
(bad)
cmc
mov
aad
and
ins
cmps
aas
mov
mul
jne
retf
fcomp
test
jecxz
mov
xchg
cmp
je
addr16
mov
adc
cmp
(bad)
test
gs
or
sbb
and
mov
(bad)
sbb
and
and
movs
sar
inc
add
jbe
stos
jno
dec
pop
mov
aad
lds
push
and
dec
test
addr16
fistp
ret
xor
mov
push
dec
xchg
ins
or
cmp
jl
pop
xchg
jp
aas
dec
into
dec
adc
fnstcw
das
iret
push
and
fisub
mov
pop
push
inc
std
stos
inc
stc
aad
es
stc
adc
imul
and
cdq
xlat
shl
(bad)
xchg
xchg
cmp
into
popa
rol
xchg
mov
jl
xor
sbb
pop
jb
ins
retf
cs
scas
loopne
inc
hlt
cli
loope
gs
push
jo
pushf
jno
xchg
push
clc
les
mov
cmps
pushf
icebp
and
push
cmps
call
xor
ret
(bad)
pop
jns
sbb
(bad)
jmp
repz
and
mov
adc
jle
aaa
int3
cmp
test
mov
inc
ja
stos
adc
xchg
mov
retf
cdq
pop
popa
outs
pop
fsubr
ss
xchg
inc
cmp
sti
fmul
sbb
mov
movaps
jl
inc
jmp
imul
jl
retf
out
inc
xor
aas
mov
inc
or
cmp
mov
sbb
(bad)
inc
mov
push
sysexit
add
mov
fisub
add
and
aas
ss
push
cmps
and
and
jnp
or
arpl
ficomp
xor
or
xchg
and
popa
inc
aaa
aaa
pop
mov
jnp
retf
scas
and
add
aas
push
push
(bad)
mov
add
inc
inc
and
sbb
js
pop
rcr
es
pop
out
and
lahf
das
sub
leave
test
loope
fst
cwde
push
mov
jp
ret
rol
inc
nop
stos
retf
pushf
aad
adc
das
in
fwait
mov
lds
xchg
and
movs
mov
lods
xchg
retf
push
mov
fst
popa
loopne
xchg
xchg
jbe
push
in
inc
xor
dec
shl
add
add
inc
jnp
ret
pop
popa
fstp
loopne
dec
pop
std
and
mov
xchg
dec
repz
fwait
inc
inc
jl
or
or
push
push
mov
cmp
les
outs
aad
fdivr
mov
dec
pushf
enter
stos
fnstsw
nop
in
dec
push
or
or
sub
adc
pop
mov
cmp
pop
jns
push
fistp
or
call
pop
ds
cmp
shr
iret
push
sahf
mov
or
push
mov
xchg
or
or
adc
inc
or
test
cmp
in
adc
jns
aas
jb
addr16
dec
shl
push
sbb
stos
xor
psrlw
xor
jmp
jl
push
movs
jge
loopne
or
in
mov
mov
xchg
lds
icebp
iret
lods
sub
pop
push
xchg
or
inc
and
sbb
cmp
sub
out
retf
ins
xor
dec
or
pop
in
cmp
sub
cmp
push
sub
lahf
popf
stc
imul
pop
mov
lea
lea
sbb
jns
std
xchg
sbb
dec
sbb
inc
lods
imul
jb
xchg
sbb
cld
and
adc
mov
mul
pushf
sub
int
lods
(bad)
xchg
mov
xor
push
push
cmc
sub
pop
mov
pop
push
movs
jbe
data16
arpl
cmc
pop
(bad)
jmp
(bad)
xchg
outs
aam
out
out
jne
cwde
retf
retf
lods
mov
imul
mov
lods
repz
repz
pop
mov
mov
xchg
and
lock
xlat
aas
push
jecxz
inc
movs
push
inc
mov
or
mov
clc
xor
dec
ins
movs
in
cmp
shr
pop
aas
hlt
stos
inc
stc
iret
jbe
adc
xchg
not
cmp
in
push
aam
gs
addr16
mov
dec
mov
jnp
mov
jp
xlat
mov
inc
das
xor
sub
pop
ror
pop
sbb
add
sub
mov
cli
cld
jmp
push
cmp
or
fsubr
retf
inc
test
ret
inc
mov
out
mov
out
mov
and
add
scas
in
pusha
shr
xor
jno
jg
pop
es
adc
jnp
adc
add
cld
mov
xor
mov
(bad)
js
out
ror
fwait
or
jne
lods
(bad)
fwait
std
pop
xor
adc
sbb
mov
retf
adc
push
stos
cmp
lds
call
(bad)
push
pop
sbb
ins
adc
ficom
mov
gs
add
or
mov
sub
bound
cmps
mov
pop
addr16
mov
shr
sbb
jae
lods
cwde
retf
loopne
iret
add
cmp
jo
rcl
mov
into
pop
mov
or
not
retf
test
(bad)
idiv
or
mov
lods
dec
add
mov
push
ss
or
(bad)
out
sub
aad
inc
or
imul
mov
mov
adc
adc
lods
int3
retf
dec
leave
jns
call
lock
dec
cmp
(bad)
fcmovb
push
out
xchg
popa
or
and
enter
jbe
push
sub
push
xor
(bad)
push
lea
inc
adc
mov
push
aam
add
sub
int
push
add
jle
jmp
retf
jo
or
daa
jl
and
push
cmps
fwait
cdq
xor
lock
pop
push
call
add
(bad)
xor
pop
xchg
and
test
adc
das
jecxz
imul
add
aam
xor
xchg
push
xor
lea
push
sbb
repz
dec
enter
je
(bad)
sub
adc
test
retf
ficom
movs
mov
xchg
sub
adc
dec
adc
jmp
cmp
or
mov
ss
cmp
add
mov
push
mov
sub
out
(bad)
fwait
pop
repnz
sahf
inc
mov
repnz
inc
xchg
aam
cwde
inc
add
adc
(bad)
adc
cmp
push
push
pop
repnz
or
jnp
mov
xchg
ja
pop
jno
add
xor
adc
mov
inc
fxrstor
int
xor
cmp
call
(bad)
das
jb
fcmovb
pop
jnp
xlat
fwait
daa
ss
ss
jmp
stos
cmp
push
dec
mov
lds
add
shl
pop
and
or
push
jp
mov
cmps
xchg
sbb
push
adc
mov
out
mov
fsubr
mov
icebp
hlt
xchg
xchg
sub
(bad)
jbe
and
inc
aaa
out
push
push
bnd
test
fldenv
out
mov
aaa
addr16
adc
in
lahf
xor
inc
sub
sub
retf
(bad)
jle
repz
je
pop
mov
rol
adc
pop
(bad)
popf
mov
add
shr
mov
xchg
fild
adc
in
mov
loope
dec
cmp
pop
movs
add
pop
(bad)
mov
adc
loop
enter
mov
inc
mov
test
jmp
pop
leave
int
add
or
sbb
pop
adc
pop
cld
push
inc
dec
jp
cmps
fwait
and
add
and
out
add
imul
retf
dec
bound
sub
mov
jecxz
mov
loopne
int
aas
and
lock
adc
cmp
mov
(bad)
jo
retf
shr
cdq
push
mov
dec
mov
outs
jmp
inc
movs
mov
not
scas
mov
jecxz
xchg
fld
hlt
or
jmp
cmps
aaa
jmp
sbb
shl
pop
lock
cmp
mov
outs
cdq
out
hlt
add
repz
add
lar
push
test
xor
je
stos
mov
and
dec
jnp
mov
in
jae
sbb
ins
dec
sahf
aas
or
movs
or
and
rol
lods
pop
mov
jo
cs
cld
pop
xchg
leave
jno
sti
and
(bad)
cli
lods
icebp
jl
pop
test
aas
imul
movs
or
shr
fsubr
shr
pop
fs
add
xchg
cmps
out
add
addr16
shr
ds
aaa
loop
sahf
mov
mov
push
xchg
cmp
cmps
adc
sahf
add
mov
test
cmp
add
xchg
adc
(bad)
inc
in
into
scas
jnp
call
cwde
adc
jp
enter
or
test
stos
rol
retf
sbb
push
setl
loopne
mov
dec
xchg
mov
in
inc
(bad)
or
xchg
adc
mov
inc
gs
jne
mov
xchg
cld
xor
adc
push
dec
popa
mov
dec
sub
fwait
inc
ret
pop
je
ror
dec
aaa
repz
retf
xchg
out
call
pop
jb
loop
jnp
in
add
mov
push
xchg
cmp
sbb
jecxz
and
jg
push
xchg
cmps
stos
(bad)
pop
popa
dec
mov
es
add
sub
std
cld
call
cli
mov
movs
ret
inc
sahf
cmp
push
push
popf
cmps
gs
cs
dec
xor
jge
clc
jmp
jnp
rcr
sub
sub
stos
in
mov
mov
fcmovnb
sub
push
outs
clc
clc
clc
sub
mov
add
or
popa
lods
sub
or
in
and
daa
jo
ja
push
cmp
sbb
mov
test
xchg
imul
imul
repnz
xchg
arpl
sub
sar
pop
cmp
cwde
adc
ss
lahf
rol
mov
fucomip
pop
cmp
test
jae
fbld
pop
xlat
add
ja
xchg
das
retf
outs
pop
push
repz
pop
sub
inc
call
lods
pop
pushf
cmp
dec
repnz
mov
mov
sub
adc
mov
addr16
in
mov
add
jmp
test
je
push
inc
aam
sub
stos
push
cmp
cmp
test
out
retf
daa
into
ror
popf
movs
out
xor
int
sahf
clc
and
in
dec
jbe
xchg
add
push
fldcw
outs
adc
inc
dec
jl
fdiv
mov
fldenv
seta
jl
call
sub
dec
je
retf
dec
popa
mov
(bad)
outs
lahf
jl
adc
pop
outs
cwde
push
retfw
and
repnz
sbb
ja
cmp
shr
and
sbb
xor
xlat
bound
adc
jp
add
fild
cmps
sbb
mov
xor
xchg
hlt
sub
jnp
pop
fstp
xchg
rol
xor
xchg
cmp
outs
fdivr
sbb
xchg
cmps
push
(bad)
pop
mov
sar
outs
cli
xor
pop
outs
lds
call
pusha
mov
cmp
nop
int3
sbb
rcl
(bad)
push
cs
sbb
dec
mov
popa
retf
push
inc
or
movs
jo
jl
loope
mov
sub
aam
mov
add
enter
dec
xor
mov
sub
cmp
popa
popf
jns
jbe
and
mov
or
push
mov
mov
sub
cwde
movs
fist
add
popf
xchg
inc
ja
scas
mov
pop
fs
jmp
sar
pop
xchg
and
mov
inc
adc
push
(bad)
les
push
fwait
cwde
sub
(bad)
xor
dec
int3
push
gs
and
xor
mov
jne
nop
jmp
pop
sub
or
lods
je
pusha
cmps
ins
jp
shl
outs
xchg
cmp
xchg
stos
je
out
sbb
retf
ret
stc
jmp
jne
and
sub
mov
xchg
fiadd
or
shl
pushf
cmp
retf
mov
push
ror
sbb
pop
jle
dec
fisub
fbstp
fwait
adc
imul
icebp
ret
hlt
add
push
mov
lods
test
das
inc
xor
xor
and
dec
adc
lods
lea
das
popf
scas
(bad)
xchg
out
(bad)
ficomp
retf
movs
stos
mov
and
or
adc
ret
jae
in
in
cmps
(bad)
in
stos
divps
dec
js
pop
sbb
stos
adc
fcomip
pop
out
lods
bound
dec
pop
mov
and
pop
xchg
int3
sub
xor
inc
sar
out
adc
rcr
(bad)
xchg
or
cli
and
test
icebp
ror
ins
jg
cs
lods
dec
cs
ret
push
adc
nop
std
xchg
scas
adc
or
mov
(bad)
pop
int3
ror
les
inc
pop
dec
inc
adc
lods
ja
out
or
iret
inc
xor
retf
pop
data16
sub
popf
and
dec
test
repnz
push
push
and
dec
pop
dec
mov
rcl
add
stc
xchg
push
or
mov
add
mov
cmps
or
sbb
shl
cmp
adc
into
imul
push
sahf
sbb
rcr
arpl
xor
inc
mov
ds
movs
repz
xchg
xchg
add
ret
iret
ret
mov
jbe
or
cs
(bad)
and
sti
push
nop
or
pop
cmp
cli
sub
cld
(bad)
push
daa
inc
or
retf
mov
sbb
push
popa
gs
or
and
ror
adc
lea
stc
idiv
sub
aas
sbb
jle
dec
xchg
mov
sti
shl
mov
movs
cmp
cmp
movs
es
xchg
add
loope
or
pop
cmps
scas
add
add
xor
sbb
imul
mov
push
mov
mov
and
(bad)
fwait
add
mov
pop
ffree
ja
mov
and
mov
loopne
cmp
int
xchg
and
push
out
xchg
mov
sbb
xor
cmovnp
mov
jmp
mov
arpl
in
sub
jecxz
fnstsw
rcr
adc
sbb
xchg
push
xchg
pop
aas
adc
xor
aad
sbb
jmp
mov
cmp
add
cmp
pop
sbb
adc
div
cmp
icebp
mul
push
aam
outs
retf
xor
xor
retf
std
cs
mov
inc
push
jns
inc
leave
cmp
jmp
pop
arpl
and
shr
inc
pop
mov
jbe
imul
pop
cs
push
bound
xor
mov
cwde
jbe
adc
mov
enter
inc
into
jp
iret
or
mov
dec
jl
and
dec
add
nop
sbb
jmp
test
popf
lods
jb
jge
lds
xchg
int3
pop
arpl
mov
mov
movs
ror
or
aad
test
mov
loop
stos
ret
outs
out
fwait
or
mov
sahf
sub
cmp
scas
mov
out
stc
add
cmp
add
mov
dec
pop
sahf
add
pop
dec
inc
xchg
out
sub
push
fst
jae
jae
adc
mov
sub
(bad)
mov
push
inc
mov
mov
and
and
push
inc
mov
je
(bad)
stc
shl
dec
add
out
fimul
ins
pop
lea
inc
mov
push
cmp
test
inc
mov
xchg
jns
xlat
cmps
xchg
pop
mov
out
je
adc
push
leave
mov
aad
sub
inc
or
add
jge
fsub
loopne
and
inc
nop
hlt
dec
dec
lods
stc
adc
push
aas
in
mov
cmc
repz
mov
sbb
pop
repnz
(bad)
mov
movs
xor
mov
out
loop
mov
xchg
pushf
push
pop
cwde
imul
call
push
xchg
pop
adc
jl
inc
sbb
push
ret
test
ins
fadd
movs
imul
push
or
add
mov
xor
or
cmps
mov
jne
lods
push
das
xlat
xchg
sub
dec
push
fdivr
test
ss
clc
lods
dec
cmp
lock
lock
adc
and
daa
ja
push
sbb
arpl
mov
xchg
gs
shl
test
sahf
mov
cwde
dec
adc
jne
xchg
mov
mov
sbb
push
or
xor
mov
xchg
ffreep
inc
call
ret
ret
ss
enter
mov
shl
dec
loope
les
iret
or
mov
inc
pop
or
lock
push
add
jmp
sub
mov
adc
movs
jmp
ss
inc
jne
cmp
mov
sub
bound
xor
repz
add
jmp
mov
arpl
nop
lods
or
lds
(bad)
(bad)
jmp
aas
shr
fstp
(bad)
inc
mov
(bad)
les
add
add
lds
jge
fucom
and
mov
hlt
bound
shr
nop
dec
jns
and
fstp
ret
dec
lods
mov
jne
(bad)
jp
push
ret
repnz
add
fcom
leave
xchg
cdq
push
pop
imul
aaa
mov
call
or
pop
outs
mov
(bad)
push
je
sub
push
movs
aad
aad
mov
int3
pop
icebp
icebp
fcom
pop
push
cmp
into
jnp
in
pop
(bad)
jmp
and
push
xor
mov
gs
mov
in
shl
inc
rcr
pop
out
xor
mov
in
push
ja
and
in
rol
jmp
jmp
dec
sti
xor
mov
inc
jae
loopne
mov
xlat
leave
call
aas
rol
mov
std
int3
dec
sbb
nop
push
popa
add
push
pushf
dec
sbb
sbb
xlat
stos
cdq
addr16
fldcw
imul
enter
push
lock
sbb
test
in
jg
test
jo
cdq
in
in
sub
mov
xchg
add
addr16
inc
int
jae
xchg
fnsave
sub
jne
mov
sbb
or
inc
or
lea
rol
test
jecxz
fst
in
mov
xor
or
outs
xor
and
fs
dec
not
pop
push
(bad)
clc
retf
leave
scas
es
scas
popa
pop
bound
mov
imul
and
fbstp
shl
(bad)
xchg
or
pop
cmc
test
and
test
in
stc
ins
and
popf
cmp
repz
out
out
test
int
xor
dec
jmp
mov
inc
scas
push
inc
imul
ret
and
hlt
retf
or
xchg
movs
imul
pushf
in
and
sub
xor
clc
sub
cli
jle
cld
sbb
cld
jge
xor
cld
push
imul
inc
push
leave
dec
pop
mov
shr
ret
nop
iret
inc
cmp
push
mov
test
mov
popf
mov
ds
or
xor
js
or
mov
or
es
adc
mov
push
sub
fist
icebp
sbb
sub
or
outs
pop
pop
clc
sbb
fild
dec
dec
fcmovu
imul
jmp
outs
push
dec
sar
call
out
(bad)
imul
sub
jne
fsubr
nop
popa
test
mov
int3
jnp
xchg
iret
repnz
xchg
pop
mov
pop
loopne
xor
dec
xchg
ins
adc
dec
xchg
jp
and
inc
adc
lahf
add
xlat
inc
in
jnp
mov
movs
clc
scas
dec
nop
fsubr
push
test
out
add
call
std
movs
sub
loopne
lods
fdivr
stc
jg
jge
cmp
and
adc
fild
pop
stos
inc
ins
push
dec
std
arpl
adc
push
and
add
xchg
sar
jo
bnd
test
addr16
call
inc
test
sbb
cmps
cmp
push
sbb
sub
add
lock
ds
add
rol
outs
int3
aad
mov
pop
push
and
xor
jne
int
push
into
lods
jecxz
mov
mov
repnz
add
lds
loope
(bad)
jnp
push
test
and
jns
adc
pop
cmp
arpl
hlt
rcl
movs
sub
mov
gs
fcmovnbe
sub
mov
nop
push
pop
ficomp
pop
retf
jo
bound
push
and
int3
push
ins
push
jo
mov
and
loop
jns
ins
xor
rol
inc
sti
lods
or
push
div
xchg
dec
and
test
mov
loopne
movs
scas
sub
push
jmp
call
or
in
mov
cmps
loopne
jb
sub
pop
jmp
sbb
fs
out
pop
aas
pushf
or
cmps
mov
push
push
in
jo
jae
sbb
or
loopne
xchg
mov
ds
jle
scas
pop
add
pop
cld
sahf
adc
imul
(bad)
fidiv
cmp
movs
xor
mov
mov
loope
jg
mov
(bad)
xchg
in
popf
jle
test
dec
jmp
sbb
pop
xchg
push
mov
cmp
out
bound
imul
cmps
pusha
cmps
mov
pop
jmp
fwait
pop
push
add
aad
(bad)
dec
fsub
out
loope
mov
mov
xor
ds
push
xchg
mov
pop
xchg
rcl
call
push
mov
sar
rcr
jl
in
push
aas
push
call
cmps
and
addr16
aas
repnz
sti
dec
mov
sbb
cmp
pop
out
into
pop
retf
imul
pop
fs
mov
pop
mov
(bad)
inc
repz
dec
pop
add
adc
add
jmp
xor
add
inc
inc
and
mov
cdq
cmp
cld
xlat
push
push
fidiv
adc
dec
(bad)
cdq
push
leave
cs
mov
dec
test
cli
jae
addr16
xchg
dec
mov
daa
sub
inc
test
imul
adc
mov
test
inc
mov
mov
nop
pop
add
pusha
jl
pusha
fidiv
sub
into
arpl
jnp
mov
and
call
pop
outs
mov
out
pop
xchg
push
nop
adc
mov
jno
addr16
aam
iret
mov
mov
int
or
test
jecxz
mov
xor
sbb
push
shl
and
dec
xchg
cmps
pop
ficom
and
cmp
idiv
mov
cld
mov
jae
jno
pop
adc
xlat
mov
adc
pop
cld
movs
cmp
jb
or
fwait
nop
mov
in
mov
cmps
daa
arpl
lahf
fistp
fld
push
jmp
mov
mov
and
sahf
cmp
xchg
inc
lahf
xor
mov
cli
iret
mov
push
mov
inc
inc
cli
xor
aad
scas
pop
mov
bound
pop
mov
mov
xor
lods
or
sbb
xchg
addr16
or
xchg
imul
cmp
push
js
mov
mov
in
pop
pushf
xchg
add
retf
lea
inc
dec
add
fcomp
leave
clc
pop
and
sti
jae
aaa
mov
out
call
jp
cmc
mov
sahf
push
push
push
push
stc
mov
push
push
mov
xchg
dec
xchg
push
icebp
jp
adc
fcmovu
dec
push
out
xor
mov
out
sahf
mov
xchg
push
cmp
sbb
aam
icebp
xchg
xor
dec
jle
aaa
jg
pop
(bad)
repnz
aaa
shl
cmc
in
inc
pop
dec
data16
add
or
out
sbb
dec
mov
inc
and
popf
mov
add
jno
call
xor
jne
mov
retf
xlat
fsub
out
and
mov
ja
test
jbe
xchg
or
inc
inc
ja
inc
out
cwde
or
push
push
xor
fbstp
adc
outs
push
aaa
adc
movs
cld
push
mov
and
popf
push
or
xor
mov
fwait
cmps
es
or
push
out
in
and
mov
sub
stos
lea
shr
mov
in
sar
fs
cld
daa
popa
mov
arpl
jno
aas
push
xor
xchg
pop
pushf
dec
fldenv
push
sahf
xor
out
sub
test
shl
mov
sub
xchg
xor
mov
jecxz
ror
sar
xchg
push
cli
aaa
or
xchg
jmp
sbb
xchg
fstp
fsubrp
pop
div
pushf
std
js
scas
(bad)
aaa
ins
mov
or
bound
push
push
lock
or
push
(bad)
mov
xchg
les
mov
mov
cmp
aaa
fstp
mov
xor
in
imul
out
outs
mov
int
clc
jns
sub
inc
and
cmps
or
adc
(bad)
hlt
scas
in
push
mov
aaa
fsub
push
mov
in
pop
test
sti
jp
or
ins
push
jle
push
fdivr
popa
pop
jno
ins
cmp
inc
adc
and
gs
jo
xchg
mov
push
push
ret
push
inc
loopne
movs
popf
stos
outs
pop
popa
sub
inc
gs
imul
add
mov
js
add
in
inc
add
repnz
jge
not
xlat
(bad)
out
inc
cmp
ret
repz
not
fild
pusha
sub
stos
push
test
(bad)
xor
cwde
test
(bad)
in
fidiv
fcmovnbe
xchg
gs
sbb
pop
pop
jl
mov
push
fistp
inc
adc
or
sbb
xor
gs
mul
pop
mov
mov
out
push
xchg
push
jns
cmp
pushf
sbb
xor
stos
adc
mov
add
fistp
movs
sbb
pop
mov
int
sbb
push
cmp
dec
cli
sti
test
and
and
sub
dec
push
push
push
ret
ja
ins
push
stc
xchg
mov
jecxz
loopne
add
or
shl
repz
push
stos
adc
retf
rol
test
sub
outs
mov
xor
es
mov
aam
mov
test
pop
nop
pop
push
jbe
xchg
sub
enter
outs
shl
dec
and
out
and
mov
pusha
inc
test
xchg
inc
xchg
cmp
test
adc
loope
in
int
cmps
cdq
pop
(bad)
jo
xchg
mov
(bad)
call
mov
cmps
mov
mov
mov
inc
lods
fs
ror
add
cld
loop
into
jecxz
rol
or
add
mov
ret
lea
fwait
pop
aad
cs
xor
je
adc
xor
sbb
pop
cmp
outs
dec
daa
rcr
fdivr
addr16
loope
movs
mov
jae
xor
push
lods
push
ins
or
cmps
sar
push
xchg
call
retf
(bad)
fwait
jg
sbb
inc
(bad)
or
xor
fs
loop
cmp
in
shr
mov
rcr
ins
mov
shl
imul
and
xor
add
jmp
or
sbb
xchg
pushf
mov
je
mov
adc
stc
jmp
mov
mov
retf
xor
loopne
lahf
push
push
popf
dec
scas
shr
cmp
jnp
hlt
mul
in
pop
push
adc
loopne
ja
test
iret
sar
xor
test
dec
push
mov
int
loopne
sbb
clc
aas
(bad)
mov
je
ins
jne
(bad)
pop
fnstcw
dec
hlt
test
popa
pop
fmul
or
xor
cwde
(bad)
jg
lods
adc
xchg
shl
inc
xor
adc
data16
(bad)
mov
sub
mov
gs
push
out
test
(bad)
ficomp
pop
jg
cmp
stc
imul
gs
sbb
mov
jle
cmp
leave
(bad)
pop
xor
(bad)
std
in
pop
adc
push
adc
ficom
adc
jns
mov
(bad)
and
fdivr
dec
fist
push
mov
sub
push
outs
arpl
(bad)
dec
test
and
cmp
push
and
lods
cdq
dec
mov
push
mov
sbb
fimul
pushf
sbb
adc
and
jo
push
cmc
mov
(bad)
mov
add
inc
lea
fsub
inc
js
hlt
sahf
add
inc
pop
mov
cmp
adc
mov
sbb
aaa
inc
xchg
jmp
fbld
add
mov
or
int3
push
(bad)
sbb
dec
xor
and
sbb
lods
and
(bad)
xor
stos
jmp
lea
adc
fdiv
dec
fcomp
daa
fcmovnb
cli
sahf
sub
xor
fst
ins
xchg
jnp
stos
adc
pop
test
cdq
sbb
jns
popf
icebp
inc
fmul
fs
add
call
xchg
adc
mul
test
mov
loope
add
ret
inc
push
lahf
add
jl
out
xchg
jno
sahf
loop
test
mov
data16
daa
aaa
sub
push
mov
and
mov
dec
sub
dec
cmp
mov
inc
call
movs
ja
mov
and
xchg
or
arpl
cmp
sub
mov
loop
(bad)
movs
sub
pop
push
pop
in
jmp
jg
sub
mov
mov
xchg
ja
cmp
outs
repnz
daa
jno
mov
pop
push
pop
push
or
lock
jle
jp
sub
dec
jge
icebp
or
mov
jae
and
stos
sub
out
and
in
iret
sbb
lds
inc
mov
mov
xor
loop
cmp
mov
or
jns
ror
xchg
and
sub
push
xchg
inc
imul
ins
daa
ja
les
data16
mov
xlat
mov
retf
xor
ja
popf
adc
test
push
dec
(bad)
into
das
cmp
loopne
mov
je
fwait
(bad)
retf
(bad)
sbb
test
scas
mov
lods
mov
pop
popf
xchg
cmp
add
add
ror
ins
pop
adc
dec
mov
dec
push
in
out
jle
cmps
test
movs
mov
retf
aaa
fwait
mov
nop
or
sbb
dec
in
sub
lods
test
push
popf
mov
xor
imul
sub
sti
fld
pushf
sub
aam
shl
mov
push
loop
cwde
scas
pushf
jmp
ss
cmp
sub
outs
xchg
push
cmps
ins
leave
cli
idiv
retf
aas
cmp
jae
add
push
push
and
leave
pop
cmc
or
cmp
imul
pop
ins
pop
push
popf
ror
jne
or
rcr
push
(bad)
push
mov
dec
call
push
jmp
cs
fidiv
dec
int3
mov
cmps
cwde
push
test
dec
pusha
repz
xor
out
std
pcmpeqd
dec
js
mov
sahf
retf
je
push
leave
mov
pop
les
mov
sbb
lock
jo
pop
call
mov
pop
test
pop
hlt
in
pop
out
add
cld
dec
rcl
xchg
cmc
rcl
and
jle
cld
jo
mov
push
cmp
cmps
fidivr
mov
xor
push
mov
into
loope
ret
xchg
xor
sub
xchg
adc
aad
sbb
cwde
jbe
outs
cmps
push
jne
ficom
aad
cmp
cmp
jbe
out
or
mov
lea
inc
cs
xchg
(bad)
jo
sbb
pop
or
mov
jbe
loope
jns
shl
xchg
nop
cmp
not
cmc
sub
popf
imul
fcmove
data16
jb
imul
or
cwde
pushf
out
jae
pop
mov
mov
(bad)
pop
leave
sbb
push
cs
xchg
mov
aas
sub
jo
cmp
rcr
mov
xchg
call
adc
leave
fidiv
cmp
pop
pop
movs
xchg
das
enter
ret
xor
xor
mov
xchg
xchg
pop
xchg
mov
jge
adc
pop
push
fdivr
test
pop
sub
and
nop
pop
stos
sub
and
rcl
mov
push
cmps
out
ins
cmp
sbb
scas
mov
arpl
jae
mov
cs
cmps
mov
dec
cmp
sar
or
sub
out
aas
xchg
add
cld
out
pop
mov
mov
aad
inc
ds
in
cmp
add
mov
mov
imul
jmp
test
popf
dec
sub
mov
pop
fsubr
je
dec
aam
or
test
sahf
(bad)
xor
nop
inc
test
outs
in
xor
in
add
push
dec
cld
sub
lods
sahf
(bad)
in
idiv
arpl
out
cld
push
push
jg
sar
shl
jmp
pusha
pop
jo
(bad)
fwait
ror
cdq
stc
repnz
push
jo
sub
sub
fwait
fwait
cmp
lds
es
aam
jno
xor
adc
push
test
mov
pop
rcl
inc
mov
sub
ins
rcl
out
pop
aas
mov
xchg
sub
lahf
lahf
idiv
inc
xor
std
adc
daa
lods
ins
or
jae
or
pop
pop
dec
aas
jns
repnz
cmp
adc
inc
inc
mov
xlat
push
int
gs
sbb
inc
push
int3
test
(bad)
mov
jle
aaa
sbb
in
daa
adc
xlat
or
addr16
sub
mov
sub
scas
test
pop
leave
pop
push
mov
inc
cmp
add
icebp
push
or
jmp
jb
shr
into
sahf
imul
xchg
in
adc
mov
and
scas
adc
aad
push
adc
dec
pop
inc
adc
cmp
call
sbb
lahf
jo
mov
sbb
stos
add
fucomip
mov
dec
inc
mov
adc
loop
add
popa
cmp
cmpps
add
(bad)
fs
or
mov
sub
jge
xchg
out
cmc
dec
xchg
cmc
mov
test
not
nop
aaa
sbb
xchg
outs
jge
jp
mov
push
xor
sub
jmp
test
mov
jnp
(bad)
inc
cli
xchg
mov
int3
les
cwde
jo
adc
dec
call
loop
dec
in
push
mov
fs
or
push
cmps
dec
sbb
nop
cmp
inc
or
pop
jp
retf
and
xchg
mov
test
dec
test
ss
jns
lods
pop
call
xor
sbb
mov
cmp
sub
(bad)
mov
jnp
mov
nop
jmp
push
xor
cmp
or
into
or
sub
mov
cmp
or
dec
xchg
pop
sub
xor
stc
mov
inc
adc
mov
or
jae
add
mov
stos
xor
je
sub
mov
cmp
mov
sub
add
jae
mov
xchg
pushf
in
or
dec
jp
or
ror
push
dec
imul
inc
sbb
dec
xchg
nop
push
sbb
inc
sar
push
push
and
or
xchg
inc
repnz
sbb
sbb
(bad)
ret
call
cmp
ins
gs
inc
mov
or
dec
retf
rcr
push
mov
icebp
cmps
ds
mov
inc
(bad)
mov
or
sub
cmp
out
and
bound
ds
data16
xor
or
pushf
loope
adc
psrlw
int
mov
ss
mov
mov
pop
rcr
inc
aam
loop
xor
shl
je
jb
daa
xor
ror
adc
dec
cld
jle
mov
push
out
inc
js
push
bound
push
dec
pop
test
data16
and
out
iret
or
xchg
inc
dec
mov
ror
push
or
test
push
mov
push
lods
jl
pop
mov
pop
xchg
inc
xchg
xchg
icebp
lahf
daa
sar
inc
lods
(bad)
aad
hlt
fs
jae
(bad)
std
xlat
mov
les
div
push
cmp
jbe
dec
mov
enter
outs
js
jae
xor
fcmove
mov
or
or
mov
add
loope
mov
in
scas
jmp
cmp
mov
adc
aas
or
ins
mov
jge
or
test
inc
mov
pop
leave
loopne
inc
mov
inc
adc
out
add
jne
and
sub
xchg
jo
loope
icebp
out
out
dec
frstor
or
aaa
xor
xor
jne
and
pop
out
add
adc
adc
and
add
push
mov
pop
mov
int
pop
jo
sti
add
call
mov
cwde
sub
jl
(bad)
cs
mov
cmp
sbb
loop
jl
cmps
sub
sbb
xchg
aaa
push
cmp
adc
xchg
add
sar
fist
jecxz
push
sub
adc
or
push
xchg
pop
add
jecxz
aaa
fidiv
pop
and
inc
xchg
rcr
test
sbb
data16
mov
call
inc
int3
add
sti
mov
call
pop
sub
daa
jne
jg
bound
inc
adc
bound
dec
(bad)
inc
aas
lahf
xor
outs
shr
push
inc
stos
mov
test
pop
push
jb
push
inc
in
enter
arpl
mov
jmp
sub
stc
pusha
dec
movs
in
or
xchg
cmps
(bad)
enter
fidiv
add
dec
or
bound
(bad)
mov
dec
adc
hlt
jo
sub
mov
adc
div
and
nop
std
popf
stc
addr16
xor
mov
xlat
mov
fdiv
pop
push
pusha
push
fcmovnu
add
pop
icebp
xlat
shr
ret
cmc
arpl
loopne
mov
jl
aaa
push
inc
adc
inc
pop
lods
xor
mov
lods
dec
inc
bnd
jo
addr16
cli
jmp
and
sub
ja
inc
xchg
inc
adc
pop
inc
test
xchg
pushf
push
gs
cmps
and
cmp
jne
test
sahf
cmp
jge
adc
dec
lahf
call
shl
inc
or
mov
icebp
jae
push
cld
dec
mov
adc
out
cdq
js
retf
jle
push
js
or
xchg
push
mov
sub
call
xor
adc
jno
add
jo
add
mov
imul
cmp
hlt
dec
jmp
jne
dec
das
pushf
cmps
sbb
hlt
xor
lahf
dec
and
sub
js
rol
xchg
inc
mov
push
xor
add
fstp
inc
dec
out
ja
stc
out
lods
dec
adc
loop
test
loope
inc
in
xchg
aad
in
ret
sub
jmp
aaa
adc
push
(bad)
xlat
shld
mov
sbb
movs
repnz
mov
out
inc
sbb
fwait
sbb
mov
aam
ss
sti
pop
jle
(bad)
aam
xor
dec
mov
mov
test
cmps
bound
jle
es
sbb
sbb
sbb
cs
mov
push
and
sub
mov
test
jae
mov
push
push
jmp
xchg
jecxz
mov
data16
inc
retf
mov
push
(bad)
fisubr
and
(bad)
jnp
cmp
dec
jns
fisub
in
popf
imul
jmp
dec
shl
les
dec
sbb
hlt
leave
add
add
adc
mov
dec
xor
test
jne
dec
dec
adc
xchg
xor
retf
cmp
fstp
retf
ss
xchg
sbb
stos
popa
adc
push
add
sub
dec
movs
xor
add
sub
push
(bad)
and
test
mov
test
jnp
sbb
sub
push
std
addr16
int3
mov
mov
cmp
bound
sub
xor
aaa
test
push
mov
jno
and
push
cmp
mov
ret
dec
xor
sub
stos
stos
add
scas
out
mov
inc
je
cmp
or
jb
or
fcomp
fdivr
fwait
pushf
fsub
inc
ss
je
mov
or
jb
sti
dec
dec
(bad)
mov
jp
enter
cmp
jmp
fdivr
fadd
stc
xor
in
adc
stc
dec
cmp
xor
dec
mov
xor
shl
adc
loop
mov
xor
sar
pop
inc
mov
dec
ins
sub
idiv
pop
or
mov
cli
mov
adc
mov
imul
jae
rol
pop
mov
xchg
mov
out
push
stos
(bad)
leave
fwait
out
popa
jbe
(bad)
cdq
clc
es
sar
fcmovu
add
lahf
push
sub
cmp
mov
test
bound
imul
and
(bad)
fst
mov
push
dec
or
or
jns
or
pushf
fsub
xchg
mov
push
mov
fld
push
adc
or
cli
jecxz
stos
pop
dec
fldcw
ins
std
push
clc
mov
pop
retf
jns
cmps
mov
sbb
cmp
dec
mov
icebp
cmp
ficom
dec
pusha
adc
retf
push
(bad)
adc
fstp
std
cmps
frstor
push
cdq
(bad)
call
or
(bad)
and
ss
out
adc
cmps
adc
push
or
std
or
dec
sbb
cdq
rcl
cmp
jae
test
sbb
arpl
mov
dec
xchg
cmp
loop
add
xor
mov
inc
(bad)
daa
lods
cmc
and
test
mov
push
adc
lods
loope
xor
(bad)
sar
loop
pop
sub
push
or
push
fstp
cmp
cdq
repnz
dec
fnsave
inc
dec
add
popa
popa
lahf
fld
imul
aam
push
ins
fisttp
imul
cmc
xor
xor
sbb
jmp
lahf
in
nop
aaa
mov
fmul
iret
xor
add
popf
in
mov
xor
mov
mov
cmp
pusha
test
scas
jle
out
add
out
mov
jno
sbb
mov
test
mov
jle
dec
cmps
out
and
mov
xor
jae
mov
imul
stc
ret
in
inc
jmp
icebp
pop
mov
div
icebp
inc
jbe
pop
jmp
inc
mov
leave
je
pop
ret
mov
sbb
test
out
sub
dec
xchg
dec
sub
and
adc
dec
ds
pop
dec
push
xchg
push
push
and
dec
inc
pop
in
dec
sbb
cmps
dec
ja
dec
xchg
pop
ret
xor
(bad)
fst
inc
push
cmp
mov
or
cmps
(bad)
sbb
push
inc
add
lock
test
xchg
jg
inc
test
xchg
lahf
and
enter
add
pushf
mov
jae
sub
pop
inc
jg
and
test
inc
les
xchg
xchg
adc
xor
jl
sbb
test
call
push
cmp
fidiv
jge
neg
mov
cwde
sahf
maxps
(bad)
sub
out
in
test
in
pop
mov
xchg
xchg
rcl
xor
mov
pop
fsubp
popf
pop
mov
into
aad
out
xor
shr
pop
add
test
xchg
push
sub
(bad)
data16
or
mov
push
sbb
js
inc
icebp
clc
hlt
pop
std
adc
push
xor
push
lock
jns
xchg
jge
or
addr16
mov
mov
jmp
icebp
(bad)
(bad)
jmp
out
jle
repnz
inc
xor
cmp
push
sbb
std
inc
add
xchg
pusha
scas
lea
int3
aad
lahf
push
pop
xchg
sub
int3
cmp
inc
(bad)
out
test
cmc
mov
idiv
in
pop
fcmovbe
add
fdiv
repz
mov
dec
mov
adc
adc
or
or
je
cmc
lahf
inc
nop
dec
(bad)
into
into
xor
scas
aam
xchg
lods
popf
rcr
loope
or
pop
push
ds
cmp
cmps
xchg
(bad)
rol
fdiv
(bad)
out
jge
sub
and
in
push
rol
push
test
add
push
or
fisubr
jl
and
xor
xlat
add
fcom
std
push
or
data16
adc
pop
cmps
push
cmp
mov
outs
mov
or
jmp
scas
mov
cli
cmp
aaa
xchg
int
xor
push
sub
lods
cmps
ss
(bad)
std
add
inc
jmp
dec
cld
outs
retf
dec
stc
mov
jne
jp
fs
inc
cmp
jo
movs
into
rol
mov
pop
div
or
dec
push
js
out
sub
or
pop
jmp
cld
aaa
sub
xor
mov
int3
adc
mov
mov
mov
(bad)
xchg
add
scas
push
xor
mov
adc
or
inc
into
arpl
mov
(bad)
jbe
(bad)
xor
stc
outs
scas
mov
movs
pushf
fwait
mov
stc
sub
js
cmp
arpl
imul
push
jmp
ror
lds
ins
mov
sbb
and
inc
jle
cmp
xchg
add
mov
movs
daa
nop
mul
mov
sub
test
ror
mov
lods
sbb
cmovne
xchg
sub
or
sar
imul
mov
add
test
push
gs
shl
ret
cmc
jecxz
scas
movs
sbb
mov
push
xchg
sub
or
dec
stos
adc
pop
enter
inc
and
jns
adc
xchg
mov
rcl
jbe
(bad)
and
idiv
int3
xor
popa
stc
xchg
loopne
dec
mov
add
and
sahf
setg
ss
push
pop
adc
out
cmps
pop
and
add
jg
(bad)
sub
xor
addr16
push
test
or
jnp
out
or
pushf
les
fs
pushw
(bad)
nop
test
(bad)
cli
jns
idiv
adc
retf
aad
add
mov
inc
cld
jmp
xchg
inc
(bad)
and
test
fisttp
xlat
leave
xlat
xor
call
fcom
cld
push
(bad)
mov
cmp
nop
lods
mov
out
xchg
lock
gs
push
aad
call
call
fiadd
xchg
ret
aaa
dec
push
js
add
mov
sbb
fcomp
cdq
sub
fstp
push
sub
inc
shl
jae
mov
push
pop
push
lds
sub
cmp
jl
data16
retf
addr16
lods
sub
xchg
clc
cwde
mov
mov
xor
mov
jmp
jge
cmp
movs
inc
aaa
stc
pop
(bad)
push
xor
push
es
dec
pushf
imul
test
inc
sbb
and
shl
mov
(bad)
shl
sbb
and
pop
iret
add
stc
addr16
test
ret
cmp
popa
xor
data16
scas
paddsw
mov
cmp
cld
call
and
push
jg
sub
push
ret
outs
or
push
ins
daa
pop
xchg
push
sub
mov
push
in
mov
loopne
mov
arpl
das
or
push
not
je
lock
scas
rcl
sahf
mov
xor
mov
ins
sub
adc
mov
mov
movs
test
pop
(bad)
pop
in
jg
mov
fisub
mov
sahf
aad
xchg
pusha
cmp
fsub
cmp
test
lds
(bad)
clc
retf
jae
outs
or
mov
je
dec
or
je
inc
cmps
fst
jl
rol
add
cmp
cli
pop
imul
dec
inc
inc
push
addr16
inc
sub
retf
cmps
stc
or
and
stos
cld
fld
inc
lock
adc
jae
push
fild
pop
add
test
or
repnz
call
mov
int3
inc
ds
sbb
int
and
cmp
push
ret
xchg
mov
inc
xchg
cmp
sti
sub
mov
in
ja
adc
clc
fs
pop
fld
cli
ret
fnsave
push
movs
dec
sbb
(bad)
nop
fsub
pop
xchg
cmps
jne
lds
bt
jmp
in
repnz
inc
mov
adc
fstp
xchg
in
mov
pop
imul
mov
shl
scas
push
or
pop
jb
jp
fwait
jge
scas
test
adc
adc
dec
mov
stc
xor
fild
sbb
sbb
add
icebp
xchg
loop
pushf
add
arpl
cld
lods
imul
push
(bad)
mov
out
test
inc
add
mov
dec
and
and
add
js
inc
shr
in
mov
or
adc
dec
push
mul
mov
push
push
lods
mov
inc
and
xchg
and
push
sbb
cdq
sahf
retf
cmp
rcl
or
dec
out
cmp
add
ror
xor
sbb
in
neg
(bad)
outs
inc
xchg
retf
test
add
or
cld
data16
loopne
ins
jnp
loope
xchg
inc
push
xor
or
(bad)
bnd
cmp
icebp
xor
xchg
push
mov
retf
pop
out
cli
and
call
ret
out
mov
in
jae
push
fwait
mov
mov
or
xor
adc
adc
mov
push
jno
or
int3
jecxz
div
mov
pushf
pop
fbld
dec
test
push
or
mov
cmp
inc
jecxz
fsubr
movs
cmp
push
ss
jge
fwait
inc
jl
add
cmp
jmp
push
mov
lock
out
mov
not
popf
jp
sbb
add
mov
jne
dec
xchg
bound
add
ins
fadd
cmp
repnz
adc
push
inc
cli
pop
hlt
sub
lock
mov
mov
pop
push
inc
pop
mov
jp
aad
add
mov
dec
cmps
scas
fwait
cs
jmp
shr
cmp
push
sub
scas
(bad)
cmp
lock
or
aam
cmc
mov
icebp
fcmovbe
test
dec
scas
xchg
enter
out
adc
push
pop
icebp
or
cmp
rol
shl
add
dec
pop
mov
iret
xchg
xor
mov
mov
arpl
add
cld
movs
adc
aad
jbe
fadd
fdivp
pushf
addr16
(bad)
jne
mov
fsub
push
cmp
xor
sti
or
(bad)
cwde
test
sbb
mov
push
sbb
inc
in
popf
in
or
fmul
aaa
retf
xor
gs
fsubr
shl
clc
sbb
mov
push
dec
scas
sub
xchg
jns
cdq
fs
pop
or
sbb
jmp
pop
or
or
xchg
sub
movs
sub
test
test
sbb
les
adc
aad
loope
outs
pop
sub
push
add
xchg
mov
adc
sub
(bad)
iret
enter
mov
mov
movq
xor
pop
push
add
or
je
jl
lock
test
pop
mov
mov
jae
pop
(bad)
(bad)
leave
pop
mov
inc
retf
test
gs
adc
xor
inc
inc
mov
mov
inc
push
mov
push
inc
mov
clc
sbb
push
push
xchg
adc
jnp
or
cs
outs
mov
adc
dec
(bad)
xchg
(bad)
jp
fstp
dec
or
sbb
dec
fcomp
xor
inc
cwde
out
pop
jmp
sahf
icebp
xacquire
sub
ja
push
scas
(bad)
test
in
push
icebp
and
popf
loopne
mov
jne
jl
xchg
mov
adc
pop
int3
inc
adc
dec
jg
push
adc
jmp
push
push
ja
sub
xchg
cli
add
pop
mov
dec
xchg
pop
xor
pop
sbb
sub
ficomp
xchg
add
xchg
sbb
adc
dec
dec
jno
add
test
dec
aad
pop
mov
clc
push
in
add
scas
mov
sub
in
jbe
xchg
xor
jmp
fldcw
pop
adc
jl
mov
leave
sbb
fnsave
mov
adc
and
push
jle
mov
jecxz
je
jne
xor
jns
adc
fmul
int3
mov
cmp
add
xchg
in
sub
jne
cmps
cld
aad
xor
jne
mov
cmps
push
push
jb
(bad)
jae
adc
pop
sub
push
and
test
sub
fdiv
sar
sub
xor
mov
mov
xchg
mov
or
jne
add
adc
pop
push
mov
les
or
test
inc
(bad)
jmp
inc
push
lea
adc
ret
lahf
(bad)
sub
call
pusha
or
cwde
sbb
sbb
add
adc
cmp
mov
jns
dec
sub
adc
loope
cmps
out
icebp
hlt
fcomp
cwde
pusha
shl
lock
or
xor
mov
daa
sbb
gs
pop
adc
in
imul
adc
push
xchg
push
add
fs
fiadd
in
aaa
inc
pop
inc
ret
xchg
and
(bad)
call
(bad)
cmp
add
leave
jb
out
out
xchg
xchg
push
enter
ja
inc
sbb
dec
(bad)
xchg
sub
mov
pushf
sub
add
mov
xor
push
pop
xchg
movs
in
out
push
add
rol
cmp
mov
in
pop
in
push
scas
inc
sbb
iret
test
leave
mov
inc
sbb
lds
scas
adc
js
mov
ja
mov
xlat
je
shr
or
jl
sbb
ret
in
inc
ins
mov
inc
or
ins
ja
push
enter
jge
push
mov
mov
sbb
test
and
pop
fisttp
neg
pop
ins
mov
(bad)
fstp
shr
push
out
lods
sub
dec
aam
push
xchg
popa
push
fs
add
pop
push
arpl
fist
push
std
xlat
clc
aas
cld
push
ins
push
cmp
jo
jae
aaa
stos
call
dec
stos
vpxor
jo
(bad)
stc
stc
ror
fsubp
ret
cs
mul
in
dec
sub
mov
stos
sub
mov
aam
test
fst
es
jl
push
rol
pop
and
and
scas
sbb
in
mov
mov
xor
ins
jbe
push
jne
jp
inc
lahf
aam
mov
mov
out
add
mov
xchg
int3
and
cdq
dec
cld
jecxz
mov
xlat
xchg
leave
xor
jl
pop
stos
mov
ror
add
mov
xchg
aam
cmp
repz
cmp
ins
push
pushf
push
ins
xchg
imul
das
je
cmps
int3
mov
lods
ret
xchg
and
js
ret
pop
jne
xor
mov
sub
add
mov
popf
retf
pop
in
popf
jmp
fistp
xor
(bad)
dec
into
mov
sbb
cdq
jl
inc
mov
ret
pop
add
into
push
mov
cmp
outs
mov
or
add
movs
jg
mov
cwde
inc
popf
pusha
(bad)
cdq
jmp
pop
pop
cmp
mov
push
int3
xor
nop
shl
fwait
cmp
test
push
push
loop
push
sub
dec
aas
scas
jnp
stc
cs
(bad)
fstp
pop
mov
push
call
add
xor
adc
xor
cmc
inc
clc
in
loopne
push
xor
mov
mov
das
(bad)
(bad)
(bad)
movs
mov
or
mov
mov
mov
repz
cld
aas
icebp
loope
cli
add
in
sar
(bad)
int3
cmps
or
imul
scas
sbb
dec
jecxz
add
jnp
test
lock
push
imul
add
pushf
dec
adc
mov
and
mov
adc
pop
(bad)
(bad)
xchg
les
dec
les
inc
enter
stc
mov
xchg
adc
retf
mov
jne
jecxz
pop
out
jne
int
imul
cmps
mov
xchg
les
xchg
mov
cmp
jns
cwde
leave
sub
mov
in
js
adc
pop
mov
fidiv
jne
jo
cmps
or
push
in
not
rol
mov
mov
mov
xchg
inc
ror
and
pop
mov
dec
out
in
mov
sahf
inc
pop
mov
retf
cwde
inc
mov
sbb
cmp
scas
adc
push
test
mov
cmp
xor
sahf
mov
call
dec
mov
or
inc
pop
daa
inc
xchg
movs
xchg
sbb
pop
dec
mov
push
aas
cdq
in
xor
rcl
pop
sar
jae
leave
push
inc
jnp
mov
sbb
dec
ins
jecxz
jno
loop
adc
imul
xlat
xchg
icebp
push
cmps
(bad)
sti
jmp
jne
div
xlat
sbb
lock
xchg
xchg
mov
data16
jge
adc
xor
or
popf
jle
les
pop
in
jmp
pop
cmps
rcr
popa
inc
fist
sbb
dec
sbb
or
mov
cmp
jb
ins
sbb
ss
fnstsw
fsubrp
add
(bad)
js
mov
sub
mov
pop
mov
sub
nop
leave
xchg
leave
and
lds
dec
cmp
dec
pop
lock
into
cmp
int3
mov
(bad)
xchg
into
test
hlt
add
pop
add
in
in
es
xchg
cwde
ds
mov
mov
out
xor
cdq
test
add
jne
xchg
mov
std
cmps
enter
ror
fidiv
ins
inc
fs
push
add
xor
mov
fdiv
dec
imul
jbe
adc
ins
shr
adc
inc
or
cmp
push
inc
popf
push
loopne
pop
or
xlat
rol
pushf
pop
ret
cs
push
sahf
or
inc
jp
cmp
mov
xchg
aaa
sbb
push
or
in
call
cmp
ret
mov
stc
int3
cwde
and
mov
test
ficomp
cmp
int
aas
mov
push
leave
and
int3
adc
cmp
push
je
jl
not
ret
fistp
ins
jg
pop
fnsetpm(287
mov
or
(bad)
ja
push
cmps
jb
xacquire
idiv
setns
std
ins
sti
imul
jecxz
jmp
mov
std
add
jno
inc
pop
out
pop
in
dec
sub
pop
out
adc
push
pusha
inc
pop
adc
cmps
outs
stos
int3
inc
shr
call
test
and
fisub
hlt
mov
cmp
cdq
sti
mov
loopne
xor
pop
scas
xchg
cmp
dec
push
sbb
sar
stos
repz
add
stos
jns
jl
xchg
rcl
jmp
cmp
sub
into
fs
mov
or
cmp
test
rcl
mov
jae
ja
sub
push
aaa
fdivr
(bad)
ficomp
cli
sbb
cmp
ror
push
inc
mov
or
adc
daa
push
leave
int3
dec
ss
add
mov
cdq
ja
loope
pop
or
cmp
dec
inc
pop
sti
xor
jno
fisubr
cmp
cmp
xchg
test
sub
cmps
stos
cdq
jns
icebp
popa
enter
push
das
mov
adc
shl
mov
adc
bound
xchg
adc
mov
scas
es
test
lock
in
inc
jo
in
push
or
xchg
or
inc
imul
sbb
cmp
sbb
inc
out
sbb
scas
pop
nop
xchg
jmp
dec
repz
cmp
and
xchg
mov
imul
repz
scas
call
shl
sbb
ror
out
je
dec
iret
sbb
ror
jge
sbb
test
daa
rcr
ins
dec
push
xor
sbb
ins
les
cld
mov
or
jmp
dec
or
addr16
sub
sbb
or
pop
cmp
xchg
std
dec
(bad)
push
sbb
sub
pop
mov
leave
(bad)
and
dec
mov
inc
jg
out
adc
cmc
xor
nop
lods
add
cmp
mov
dec
jl
sbb
jmp
adc
lahf
cmp
pusha
cmps
adc
mov
ret
mov
xor
cmp
or
xor
mov
jne
jge
jecxz
movs
fild
add
xchg
test
rcr
aas
add
shl
out
and
mov
outs
repnz
pop
clc
das
(bad)
je
lods
inc
es
pop
pop
(bad)
jae
out
dec
mov
sub
call
ret
dec
imul
sbb
bound
in
inc
adc
pop
cli
rcr
adc
shl
out
pop
add
nop
add
lods
pop
fnstsw
cli
inc
xor
add
inc
les
push
and
hlt
cld
pop
ret
xor
mov
ins
mov
data16
fnstsw
and
stos
jge
loop
cmp
les
mul
cld
in
movs
cmps
push
fistp
xor
rcl
sbb
add
dec
call
jbe
iret
push
add
mov
xchg
std
ret
mov
mov
stc
add
and
shufps
cmp
mov
shl
into
add
loopne
call
(bad)
jle
mov
es
sbb
ss
sbb
and
fsub
push
jbe
push
add
lock
out
(bad)
xlat
test
jns
lock
xchg
mov
test
das
aaa
(bad)
jmp
and
ficom
in
jl
hlt
push
push
adc
dec
dec
lahf
cld
sub
loop
(bad)
pusha
xor
mov
lahf
(bad)
cmp
mov
sahf
imul
xor
and
js
(bad)
(bad)
cmp
push
test
mov
fist
pop
in
lds
and
scas
xor
xor
int
(bad)
xchg
shl
shl
out
inc
ror
mov
mov
xor
xor
sub
mov
inc
sub
mov
pop
add
xchg
mov
or
sbb
or
pop
dec
mov
pop
push
xchg
fs
jge
cmp
dec
ficom
and
fwait
lods
mov
scas
jle
sub
iret
lods
gs
jl
xchg
xchg
sbb
shr
das
adc
rcr
ins
jbe
loope
les
jmp
inc
repnz
call
cmp
(bad)
fs
pop
stos
jle
in
adc
int
imul
push
ret
sbb
cdq
dec
fs
mov
std
mov
sub
cmc
out
call
cmp
push
(bad)
enter
push
nop
pusha
mov
mov
add
sub
inc
push
mov
shl
mov
sar
xor
fnsave
stos
test
sub
mov
lds
ds
icebp
jb
jmp
pop
outs
lea
sub
jle
iret
sub
push
outs
clc
int3
sub
xor
ret
sbb
push
iret
mov
call
jge
dec
jo
stos
mov
repnz
and
pop
aad
and
pop
out
dec
je
ror
daa
(bad)
into
in
mov
push
lods
xchg
push
retf
inc
xor
out
or
addr16
int
mov
loop
stos
mov
mov
xchg
mov
call
adc
jp
int
mov
jp
andnps
retf
mov
inc
aad
out
jmp
xor
out
out
popa
stc
push
dec
sbb
pop
ja
ror
rol
lods
mov
mov
lea
cdq
bound
add
jg
or
jl
cmp
xchg
jmp
ins
xor
in
pop
inc
dec
lds
jae
cdq
movs
jbe
sbb
(bad)
adc
pop
(bad)
xor
mov
xchg
or
push
sub
leave
add
inc
in
rcl
fisubr
xor
dec
cmp
xor
cmp
daa
mov
jno
and
lods
ins
xlat
mov
sbb
pop
mov
adc
xchg
jg
cmp
dec
add
sub
(bad)
mov
adc
mov
call
shl
aam
mov
and
or
push
cmps
dec
cmps
push
add
push
call
test
mov
push
gs
fadd
in
xchg
fdivr
pusha
fsubr
imul
xor
out
xor
dec
out
enter
and
das
(bad)
jmp
adc
pop
repz
jl
inc
xor
mov
pop
aam
or
or
aad
frstor
cmp
mov
cmp
pop
jne
mov
arpl
rcl
xor
xor
and
xchg
xor
jmp
stc
mov
dec
mov
mov
ret
hlt
out
stc
fdivr
xor
dec
(bad)
xlat
sbb
adc
dec
lea
or
movs
(bad)
jle
dec
add
and
mov
test
dec
add
icebp
sbb
mov
jnp
cdq
xchg
sbb
push
jmp
(bad)
jmp
cvtps2pd
push
lea
pop
shr
dec
test
stc
aad
retf
mov
lds
mov
add
or
dec
mov
adc
aam
xchg
(bad)
shl
push
pushf
push
dec
call
xor
jmp
mov
push
cmp
test
jg
and
xchg
mov
int
outs
cdq
pusha
jecxz
cmps
ins
ror
je
sub
add
adc
in
into
inc
idiv
mov
xchg
push
or
mov
push
sbb
in
inc
push
mov
ret
lods
sahf
mov
push
lock
dec
rcr
push
ins
(bad)
ror
out
das
addr16
adc
in
cmp
push
or
call
or
loop
hlt
mov
jbe
(bad)
pop
jnp
jne
(bad)
dec
ds
sbb
imul
fistp
rcl
in
pop
jne
stos
add
sbb
cdq
push
pop
fimul
cmp
mov
cs
push
cmps
dec
ins
jnp
xor
and
lods
push
cmp
popa
int3
(bad)
push
mov
push
mov
cld
cmp
aam
in
jno
loopne
lea
adc
inc
mov
push
jbe
adc
loope
gs
imul
mov
ja
ret
jae
mov
sbb
or
push
xchg
and
mov
or
std
stc
sbb
inc
int
adc
fisttp
xchg
sub
mov
cwde
dec
movs
xchg
and
mov
cwde
hlt
fwait
and
mov
test
in
call
xor
ja
js
not
fnstsw
ror
push
xchg
fcom
adc
scas
cli
xor
mov
inc
and
jo
xor
mov
xchg
push
call
pop
stc
mov
cwde
icebp
mov
cli
daa
mov
and
(bad)
push
lods
mov
in
sub
mov
adc
mov
fiadd
test
imul
je
ja
fld
cli
jge
pop
sbb
ss
cmp
xor
popa
push
jecxz
mov
dec
adc
adc
mov
dec
xor
add
jge
push
movs
in
scas
pop
xor
and
push
sahf
inc
lds
jae
xchg
data16
jge
sbb
cmp
cwde
mov
fmul
outs
mov
jmp
mov
lea
fwait
enter
loop
inc
cwde
std
mov
or
mov
adc
pop
call
imul
je
fisttp
mov
pop
imul
push
jmp
gs
inc
in
xchg
push
pop
mov
push
pop
mov
mov
aas
dec
mov
je
cs
clc
push
sbb
dec
test
mov
js
aaa
add
or
mov
stc
imul
into
(bad)
xchg
sbb
push
mov
xchg
or
xchg
ret
mov
pop
xchg
mov
hlt
mov
fbld
or
adc
aas
mov
add
push
mov
xchg
push
lds
js
ss
push
push
jbe
in
cmps
cmps
and
mov
call
sbb
jbe
repz
mov
stos
icebp
fmul
sub
cs
lods
(bad)
daa
clc
jp
stos
in
idiv
pushf
adc
xor
mov
inc
sub
adc
movs
cmps
ret
jl
adc
jge
dec
jmp
pop
aaa
mov
xor
faddp
adc
lahf
mov
and
popa
sub
test
ins
jno
or
sub
mov
sub
stc
mov
add
cmps
iret
and
push
mov
push
sbb
das
dec
(bad)
mov
sar
je
inc
sub
ins
inc
jae
ror
clc
cmp
aad
jl
mov
or
push
in
fidiv
icebp
mov
aam
jl
adc
cmp
fs
stos
call
rcr
push
mov
pop
xchg
adc
fdivr
and
out
xchg
dec
addr16
mov
adc
cmp
(bad)
mov
sbb
add
dec
jmp
std
fs
stos
xor
inc
pop
test
jle
shl
push
ja
jo
in
sar
mov
(bad)
or
(bad)
fcomi
mov
mov
lods
and
(bad)
jl
lahf
std
mov
icebp
or
jge
cmp
jno
(bad)
int
or
ds
aaa
mov
mov
mov
xchg
loope
(bad)
xor
add
dec
psubsw
add
lea
mul
sbb
repnz
icebp
inc
pushf
and
scas
int3
jo
cmc
lea
and
or
push
test
(bad)
and
aaa
call
sub
sbb
add
in
ins
(bad)
hlt
out
sar
jnp
sar
xor
dec
jecxz
xor
shl
fdecstp
jb
xor
ja
fdivr
sbb
fnstcw
and
cmp
popf
cdq
mov
ficomp
into
int
push
inc
dec
jns
call
sub
icebp
jmp
pop
push
retf
(bad)
loopne
and
dec
and
es
pusha
xchg
cmp
dec
sbb
push
xchg
push
push
push
inc
pop
mov
ffree
push
jecxz
jge
cmp
pop
xchg
movs
test
loop
mov
lods
shr
add
mov
sbb
test
sahf
int3
push
dec
cmps
js
and
fst
xlat
mov
out
jl
xchg
inc
push
pop
fild
in
and
and
mov
dec
in
out
outs
mov
cld
push
jmp
icebp
xor
push
lods
mov
push
repz
shl
jmp
or
mov
ficom
lods
mov
fwait
push
xchg
fnstsw
mov
(bad)
lods
out
xor
lods
and
and
dec
add
jb
rcl
sahf
xor
mov
inc
xchg
xor
lods
call
inc
aas
jne
cmp
out
fnstsw
dec
(bad)
fild
ja
dec
leave
rcl
pop
dec
xchg
cdq
add
mov
div
loopne
push
cmp
das
stos
ja
imul
add
cmp
sbb
out
push
stc
inc
cmp
cmp
loopne
pushf
bound
(bad)
into
sti
je
imul
pop
jmp
mov
add
push
jmp
pop
(bad)
mov
xlat
test
les
pop
ins
data16
dec
add
add
jmp
jne
ins
sub
mov
das
push
jne
in
call
pop
sbb
sbb
sub
xchg
les
loop
iret
inc
sub
pop
aas
sbb
jge
sbb
pop
jb
in
dec
mov
jne
xlat
inc
jbe
and
fdiv
movs
out
les
jle
adc
or
enter
mov
shl
mov
daa
xchg
xor
xrelease
xor
pop
sbb
adc
sahf
mov
aam
rcr
int
call
dec
mov
addr16
mov
(bad)
popf
mov
or
cwde
test
adc
(bad)
mov
inc
scas
hlt
shufps
cmps
mov
icebp
retf
xor
push
mov
cmp
dec
mov
pop
stos
repnz
pop
mov
xchg
(bad)
in
xor
je
addr16
xchg
(bad)
stos
sub
mov
or
aaa
fcmovne
xchg
fdivr
daa
cmc
adc
pop
mov
push
ds
xchg
mov
movs
xor
push
cld
or
and
push
add
movs
sar
aas
ja
cmp
sahf
mov
aas
xlat
add
push
mov
or
sbb
jl
xchg
dec
(bad)
out
cmp
or
sbb
push
lock
sub
inc
mov
enter
out
sub
push
in
loop
outs
adc
icebp
sbb
jmp
xor
dec
pop
jmp
scas
test
mov
mov
mov
jl
cwde
and
adc
xor
xchg
inc
add
ins
pushf
stos
dec
fisttp
arpl
stos
pop
push
and
push
jl
ficomp
xadd
fisttp
pop
push
cmp
popf
call
addr16
cdq
ds
xchg
shl
pop
mov
mov
mov
pushf
jmp
jo
mov
fcomp
shr
je
adc
pop
(bad)
pushf
addr16
xchg
adc
mov
dec
(bad)
mov
jb
adc
xor
imul
out
jno
(bad)
mov
cdq
loop
pop
dec
ss
and
cmp
out
out
fwait
mov
push
or
add
mov
xchg
sar
adc
jge
sbb
adc
cmp
mov
out
cld
add
xlat
iret
ret
xchg
fcmovnu
pop
adc
int
pop
popf
adc
jns
mov
jle
out
enter
inc
das
sub
rcl
enter
fs
adc
repz
push
leave
hlt
mov
or
xor
mov
push
call
xchg
dec
or
mov
dec
dec
mov
into
xlat
mov
xchg
sbb
cmp
loopne
ds
cwde
xchg
add
mov
add
adc
inc
lods
sahf
adc
inc
dec
cmp
test
jmp
test
sub
in
jmp
push
pop
sub
je
xor
popf
ins
adc
pop
inc
xor
icebp
xchg
fcmovb
mov
sbb
cmp
sar
mul
scas
jae
fwait
cmp
lods
das
(bad)
retf
mov
cli
test
in
lea
sub
in
sbb
out
ins
div
fldenv
mov
mov
xchg
sbb
mov
jg
and
cmp
adc
lds
ja
push
or
cdq
mov
dec
stos
or
pushf
retf
ja
jge
cmp
pop
fldenv
div
shl
das
test
loopne
bound
push
adc
xchg
das
mov
aaa
pusha
sar
aas
enter
mov
(bad)
mov
cmps
shl
mov
out
aam
(bad)
fldenv
into
aad
pop
add
jle
pop
lea
mov
inc
pop
aas
ja
xchg
mov
push
ds
gs
fiadd
or
in
adc
movs
in
pop
fisubr
test
jle
inc
xor
arpl
repnz
ss
cdq
inc
cmp
mov
dec
xchg
cld
retf
push
sub
dec
cld
fld
scas
popa
fisub
xchg
and
mov
movs
(bad)
xor
dec
mov
les
add
sub
test
mov
mov
out
lahf
cmps
ret
iret
rcr
(bad)
push
jge
jno
add
push
in
fcmovu
push
jg
sti
clc
nop
fisttp
cmp
leave
mov
iret
into
jle
loopne
sbb
cmp
sbb
pop
add
adc
pop
push
in
sbb
or
bound
jg
jnp
xchg
fiadd
jp
jne
cmc
inc
push
push
lods
daa
xchg
xor
inc
push
mov
dec
push
mov
dec
sbb
mov
test
sahf
push
jne
in
or
or
(bad)
lahf
scas
outs
mov
push
int
and
icebp
lock
push
cwde
mov
retf
movs
mov
rcl
sbb
jb
retf
push
jmp
add
call
and
dec
dec
mov
jl
jae
sub
dec
nop
mov
inc
shl
jge
sub
dec
fsubr
pop
xor
dec
fcom
inc
inc
shl
nop
add
repnz
jle
lods
mov
cmp
ja
ror
or
enter
mov
aam
(bad)
ret
sahf
mov
jbe
and
dec
mov
jno
xchg
shl
in
mov
jb
mov
call
les
movs
push
cli
pushf
sbb
fiadd
or
das
imul
mov
sahf
cli
mov
inc
dec
stc
inc
sub
mov
push
mov
add
rcl
(bad)
push
bound
ja
mov
cmp
mov
jp
push
fsub
and
test
dec
sbb
cmps
cmp
repz
xchg
(bad)
in
fsubp
mov
mov
adc
outs
mov
daa
ds
outs
jg
push
scas
sbb
and
js
bsr
aas
clc
fisub
arpl
enter
mov
push
add
mov
sti
gs
rcr
scas
sub
stos
fstp
jle
pusha
(bad)
inc
add
clc
sub
xchg
xor
mov
dec
in
lods
neg
sub
mov
test
adc
add
pop
ficomp
call
mov
pop
popa
jl
push
mov
mov
popa
bound
inc
(bad)
cmps
pop
cmp
enter
outs
loopne
fnstcw
add
fiadd
mov
addr16
dec
sub
cmps
addr16
sahf
push
xor
int
shr
mov
jno
pusha
add
xlat
dec
pop
les
ds
lahf
stos
jge
mov
call
outs
mov
adc
aaa
outs
mov
sbb
xchg
xchg
fnstcw
jecxz
xlat
and
pushf
das
andnps
repnz
ja
fistp
iret
xchg
mov
mov
imul
(bad)
ds
push
inc
adc
pop
repnz
pop
jg
aaa
retf
xor
inc
loopne
dec
(bad)
mov
inc
bound
enter
push
scas
mov
xor
jmp
leave
inc
cmp
cld
mov
jns
jno
cmp
mov
movs
rol
add
aas
cmp
dec
push
xlat
div
jbe
sub
popf
xchg
jne
cmps
fsub
fisttp
test
iret
shl
cmps
jae
outs
and
call
jns
sub
adc
out
xchg
clc
shl
rcl
daa
dec
jno
dec
cmp
sub
pusha
and
cmp
adc
add
sub
or
add
gs
mov
fs
dec
fwait
sbb
mov
pop
cmc
lea
in
mov
out
jp
std
xor
or
and
je
inc
ds
mov
cmps
daa
mov
pusha
sbb
aam
sub
cmp
jp
fsubp
dec
mov
iret
enter
jo
lods
aas
push
stc
lea
xor
pop
mov
test
mov
xor
imul
jno
shl
xor
in
test
jnp
add
mov
dec
(bad)
bound
mov
jns
mov
inc
scas
lods
out
ins
add
mov
dec
cli
das
lds
mov
mov
or
mov
pop
cli
lods
adc
ret
inc
add
jo
or
int
jl
adc
loope
xor
xchg
sub
aas
in
lods
hlt
dec
or
or
dec
int
call
das
leave
or
lea
mov
pop
xchg
aad
sub
arpl
ins
mov
dec
sub
sbb
in
jmp
dec
jo
bnd
sub
lods
cld
in
pop
jmp
xchg
push
cld
out
mov
enter
scas
call
jg
call
sar
pop
xor
fwait
out
or
and
push
out
mov
jbe
repz
and
inc
inc
mov
std
mov
sysenter
iret
loop
xchg
ins
push
and
dec
push
adc
pushf
icebp
or
(bad)
jg
inc
mov
in
pop
fistp
pop
(bad)
xchg
shr
sahf
aas
mov
into
cmp
xor
adc
jmp
push
mov
sub
dec
mov
(bad)
mov
dec
ds
and
sbb
adc
mov
push
push
mov
or
and
sub
neg
sahf
rcl
mov
loop
popa
xlat
fdiv
ret
out
icebp
sbb
fidiv
pop
mov
xor
cmp
push
dec
inc
sbb
dec
jmp
fsubr
(bad)
push
and
xchg
cmps
arpl
mov
popf
cld
mov
cmp
pop
repnz
push
push
jns
inc
mov
out
in
gs
das
jae
mov
adc
mov
retf
push
retf
popa
mov
out
dec
push
adc
adc
mov
cdq
jge
or
loop
mov
into
inc
adc
movs
mov
xchg
inc
nop
movs
imul
dec
cwde
cmp
fcom
cdq
push
push
mov
add
imul
add
sbb
lock
cmps
xor
or
or
jl
sar
gs
call
js
hlt
push
and
jmp
xor
or
clc
std
or
sub
mov
push
(bad)
sub
(bad)
xor
lock
cmp
jb
out
add
jmp
imul
pop
jle
jo
or
xchg
cmp
fld
lock
retf
inc
jl
pushf
jno
mov
jmp
repnz
pop
dec
push
into
dec
ret
push
xchg
cmps
push
cmps
lahf
pop
rol
ins
sbb
push
loop
mov
js
movs
push
push
jle
mov
mov
gs
pop
out
cmp
data16
sbb
adc
add
call
cmp
and
dec
jp
out
out
stc
pop
sbb
or
setns
fild
pop
jno
ficomp
(bad)
xchg
(bad)
push
mov
add
jno
fwait
push
popa
mov
in
push
in
call
fist
push
dec
into
movs
xchg
mov
neg
xor
push
jle
not
push
xchg
cmc
ins
pop
jle
inc
jne
(bad)
neg
js
mov
mov
movs
push
dec
sahf
sbb
dec
leave
and
jae
push
mov
je
push
out
sbb
scas
cld
jno
das
sbb
sub
mov
leave
push
mov
xor
adc
mov
adc
mov
fistp
push
into
add
daa
dec
push
fdiv
repnz
cmp
push
out
adc
add
inc
dec
cli
cld
cwde
cmp
xchg
mov
mov
out
pop
sahf
xlat
mov
cmp
push
xchg
jbe
mov
cmp
sbb
inc
xchg
sub
es
or
jnp
jbe
sbb
sub
fisub
test
and
adc
mov
inc
add
das
push
mov
cld
add
sbb
mov
cmp
sbb
inc
xor
test
add
nop
fisttp
lods
out
sbb
inc
add
popa
add
out
jb
repnz
pop
sar
leave
mov
lea
inc
in
retf
call
push
lea
imul
das
mov
pop
adc
cmp
add
jmp
push
pop
pop
icebp
push
cld
dec
mov
in
xchg
mov
(bad)
or
ficomp
sub
cli
dec
push
rcr
shr
call
inc
fistp
xor
dec
cld
lds
mov
xchg
xor
sbb
inc
cmps
sti
mov
leave
ror
mov
add
mov
sbb
daa
gs
loopne
cld
outs
mov
xchg
cmp
xchg
push
mov
cli
(bad)
not
lds
adc
cmps
xchg
push
mov
xchg
push
or
add
mov
into
push
jno
out
and
jge
stos
fmul
inc
popa
clc
repnz
cmp
pop
sub
imul
xchg
scas
imul
jno
inc
retf
call
cmp
mov
call
push
aam
dec
xchg
retf
inc
adc
mov
retf
xor
push
add
adc
stos
mov
pop
loopne
cmp
sub
dec
xor
mov
push
call
not
popa
sahf
fsubr
std
pop
fndisi(8087
mov
ret
fdiv
outs
sub
sub
out
push
ja
and
icebp
daa
and
into
mov
or
pop
mov
pop
or
xchg
sbb
ret
xchg
fucomip
mov
jp
gs
dec
js
std
and
xor
fdiv
cmp
(bad)
jp
pop
sbb
out
xchg
jmp
in
push
push
sub
adc
fwait
mov
add
sub
add
mov
test
mov
push
jg
and
pop
aad
nop
shl
(bad)
add
jg
adc
sub
cmp
setbe
xchg
push
das
hlt
aaa
sbb
repz
outs
dec
or
or
sub
jb
xor
enter
pop
ret
cld
inc
push
or
shr
mov
mov
enter
and
dec
xchg
xor
sbb
cdq
adc
jne
add
or
xchg
adc
cs
push
add
pushf
popa
jg
cmp
cld
arpl
aam
xor
add
lods
push
idiv
inc
xchg
xor
movs
mov
in
sbb
(bad)
lock
in
xchg
les
fst
xchg
inc
cmp
les
or
dec
add
xchg
hlt
movs
ss
jmp
cmp
jmp
pop
ja
mov
icebp
mov
dec
dec
mov
adc
add
fimul
push
rcr
fstp
jb
jns
cmp
jl
or
jmp
addr16
in
les
pushf
rcr
mov
test
cmp
xor
or
cdq
xor
push
mov
push
mov
or
sbb
stos
les
mov
test
adc
aad
mov
or
or
adc
in
cwde
sahf
sub
xchg
sti
push
(bad)
sti
sub
mov
movs
xor
sbb
movs
and
adc
test
adc
dec
scas
sub
or
ja
mov
push
sub
out
loop
cmovbe
cmp
in
data16
jl
or
js
add
test
mov
inc
(bad)
jle
inc
jecxz
cmp
push
fstp
movs
push
mov
fmul
rep
test
mov
fidivr
xchg
mov
inc
dec
or
cli
mov
inc
cdq
dec
mov
inc
mov
mov
mov
out
adc
xor
or
lea
jne
fsubrp
cld
(bad)
fisttp
mov
retf
out
pop
inc
sbb
out
cs
inc
adc
lock
push
aam
out
retf
push
shr
or
adc
sbb
int
mov
not
mov
sub
es
push
sub
loop
lods
mov
pop
clc
pop
mov
or
or
fstp
pushf
cmp
add
mov
inc
inc
push
imul
adc
or
sbb
jno
adc
enter
cmp
sub
loope
and
push
or
aam
std
mov
jbe
in
and
shl
xchg
pop
cld
sub
call
pop
retf
icebp
sub
pop
xlat
shl
sub
sub
push
and
mov
popf
push
test
jmp
dec
push
(bad)
out
call
rcl
sbb
cli
jecxz
xchg
imul
in
jns
loop
dec
sbb
sub
(bad)
retf
ret
mov
inc
mov
push
mov
aam
dec
lods
pop
or
push
push
imul
jo
loope
dec
or
outs
sub
ficomp
mov
or
xor
dec
xchg
mov
pop
dec
mov
pop
inc
xchg
in
cmps
and
fsubr
jne
(bad)
out
into
(bad)
sub
unpckhps
aaa
dec
xchg
rcl
add
dec
stos
cdq
inc
ret
adc
js
clc
cmps
call
adc
retf
shl
xchg
(bad)
pushf
ja
pop
call
inc
fldcw
and
ss
popf
(bad)
mov
sbb
and
nop
xchg
jns
mov
or
dec
cmp
in
scas
stos
lock
push
mov
sbb
cmp
mov
cmp
sar
repz
movs
mov
adc
dec
mov
and
cmp
dec
push
in
imul
jns
mov
sub
or
push
xchg
or
mov
fiadd
std
cli
or
pop
add
mov
xor
loope
cmp
cmpxchg
in
cmc
lods
xchg
xchg
cdq
jno
mov
(bad)
cmp
packssdw
rcl
gs
hlt
fdiv
pushf
leave
arpl
xchg
nop
sub
sub
bound
xor
sahf
cmp
mov
and
test
adc
jmp
pop
xor
push
lock
loope
repnz
clc
push
dec
or
add
xor
out
push
loop
pop
mov
loopne
jecxz
mov
push
ins
cmp
daa
fs
jmp
pop
pop
inc
sub
in
lods
sbb
mov
pop
push
inc
push
dec
in
jmp
add
sbb
mov
outs
push
inc
sahf
fld
test
out
retf
xchg
sar
nop
jns
aas
ror
retf
loop
loop
(bad)
sahf
sbb
cli
popa
mov
nop
push
mov
retf
(bad)
mov
pushf
fist
jg
(bad)
test
dec
(bad)
pushf
sar
mov
stos
push
nop
xchg
repnz
imul
cmc
pop
fild
in
out
pop
repnz
dec
cld
stos
push
mov
btc
aas
or
mov
or
sub
scas
shl
addr16
mov
stc
xor
push
retf
into
sub
rcl
mov
call
lods
out
das
xchg
cmp
iret
(bad)
ins
mov
cwde
loope
mov
mov
sbb
xlat
dec
sbb
adc
and
fwait
imul
cmp
enter
fcmovne
test
out
dec
xchg
shr
repnz
and
mov
push
push
xchg
int3
in
sub
lea
sbb
test
xchg
(bad)
cmp
mov
inc
dec
xor
sub
mov
adc
dec
xlat
pop
mov
adc
mov
shl
dec
mov
push
jno
(bad)
into
lock
mov
lea
int
mov
(bad)
jbe
jecxz
xchg
push
sti
push
jae
leave
push
push
jae
jl
(bad)
stc
mov
inc
fistp
cwde
movs
fbld
and
xchg
js
retf
xor
shr
adc
sbb
mov
pop
cli
cmp
scas
jle
jmp
gs
or
dec
ins
jb
mov
and
jl
pxor
mov
fsubrp
inc
popa
out
arpl
mov
push
inc
mov
(bad)
test
mov
mov
add
icebp
mov
jecxz
pop
lea
adc
loopne
ret
cwde
int3
in
rcl
rcl
stc
ds
and
jne
pop
add
int
(bad)
jnp
sbb
out
pop
sub
sub
jno
jp
dec
fwait
mov
movhps
fist
xor
xor
mov
(bad)
(bad)
adc
adc
sbb
test
push
mov
pop
(bad)
sbb
es
push
or
popf
mov
daa
bound
sbb
cmc
in
into
lahf
into
aad
sub
xchg
into
mov
hlt
xchg
in
sub
(bad)
fwait
movs
cld
cmp
dec
push
popf
or
jns
movs
sbb
imul
sub
ins
adc
inc
in
dec
inc
(bad)
lea
mov
cmp
jo
(bad)
out
push
scas
movs
add
test
imul
jecxz
push
xor
int3
xchg
(bad)
cmp
dec
cmp
in
sar
adc
rol
out
popf
add
mov
pop
retf
inc
pop
mov
inc
mov
dec
push
add
pop
aad
lods
or
(bad)
iret
sbb
xor
pop
sub
rcl
icebp
push
call
add
jmp
mov
dec
push
cmp
and
mov
adc
push
leave
in
outs
in
jl
add
xchg
mov
xor
mov
push
mov
stos
or
inc
fcom
out
or
mov
dec
cmp
add
iret
jbe
dec
int3
iret
jns
mov
test
mov
cmp
repz
rcl
jp
aaa
mov
pusha
ds
dec
inc
sbb
sbb
jnp
cs
dec
xchg
jo
aam
out
fidivr
jne
hlt
jge
mov
test
add
inc
mov
sub
cmp
cmp
std
movs
inc
jmp
pop
add
and
xchg
cmp
out
mov
imul
cmp
pop
sbb
retf
popa
adc
pusha
jmp
ins
jns
fld
int
cmp
inc
inc
cli
std
jl
sub
daa
imul
sbb
push
js
test
and
push
jne
add
in
pop
cmp
xchg
in
push
or
pop
stos
inc
fstp
add
push
pop
mov
pop
sub
and
add
(bad)
rol
ds
gs
lds
ret
sbb
inc
jmp
mov
add
aad
cwde
loopne
enter
push
and
in
jmp
pop
lahf
mov
fst
lods
dec
retf
int
enter
jp
inc
sub
js
mov
push
xchg
gs
xchg
mov
adc
shl
sub
xor
clc
mov
out
in
pop
mov
xchg
jno
inc
shl
clc
cs
test
outs
stos
dec
ffree
popf
stos
sbb
fcom
inc
int3
push
mov
mov
adc
addr16
fiadd
push
dec
push
fbld
div
mov
xchg
popf
or
cmp
repz
pop
fwait
pop
push
mov
sbb
mov
mov
or
popf
call
fisub
lea
push
in
icebp
push
fsub
mov
jmp
mov
sbb
jg
shr
inc
dec
fiadd
mov
pop
test
mov
jecxz
xchg
fmul
pop
cli
push
test
mov
mov
dec
pop
xchg
fsubr
pop
xchg
xchg
test
mov
mov
je
nop
(bad)
pop
jge
cdq
pop
adc
xchg
in
sbb
xchg
inc
push
jmp
imul
mov
sub
(bad)
mov
mov
xor
fisub
jne
xor
out
test
mov
call
cwde
xor
into
loop
jae
cld
bound
inc
inc
xchg
fucomip
sbb
fwait
stc
mov
jns
cmps
add
aam
jmp
popf
ficom
stos
sub
jnp
dec
jle
xlat
cmp
adc
enter
mov
cmp
je
pop
outs
es
jle
leave
sar
sar
xchg
pop
pop
retf
push
fsubr
mov
sar
popa
xchg
or
push
jl
mov
bound
test
into
(bad)
xor
add
jnp
aaa
xchg
xchg
pop
mov
sahf
mov
fistp
ins
push
dec
js
(bad)
jecxz
cmps
lahf
out
mov
add
mov
mov
enter
ret
cmp
int3
mov
ss
dec
test
jne
ins
cdq
(bad)
fstp
jmp
lock
and
cwde
adc
rcr
xor
mov
ret
mov
cmp
dec
and
lods
aaa
sbb
sti
repz
xor
sbb
push
mov
add
push
pop
mov
lds
push
pop
push
sbb
xor
jae
xchg
cmp
mov
jb
int3
ret
and
ja
cld
jne
in
and
ret
div
movs
(bad)
cmp
daa
cmp
and
jb
imul
xor
je
(bad)
mov
call
fcmovu
mov
lahf
sub
retf
pop
pusha
cld
dec
mov
loopne
cmp
stc
jl
xor
gs
xchg
retf
xor
dec
adc
push
mov
(bad)
adc
rcr
scas
adc
(bad)
js
retf
clc
sub
test
es
movs
mov
mov
js
fild
(bad)
loop
sbb
mov
dec
pop
sbb
out
clc
push
adc
in
cmps
xchg
test
mov
sbb
movs
enter
lahf
dec
loopne
js
js
mov
int
pop
adc
push
cs
cmps
mov
push
cmp
cmp
gs
icebp
xor
and
sub
mov
test
ds
mov
movs
jne
xchg
and
jo
and
xor
(bad)
xor
popa
jmp
ror
pop
pop
sub
nop
arpl
xchg
jg
test
push
mov
es
dec
mov
and
cmp
cmp
sbb
and
lock
iret
dec
fstp
lods
and
fcom
stos
fcom
(bad)
pusha
call
mov
mov
cs
rol
leave
int3
adc
es
in
jo
test
xor
and
out
and
shr
lahf
je
push
jno
aaa
das
inc
popf
ror
pop
add
lea
cmp
mov
xchg
add
(bad)
xchg
sar
jns
or
pop
scas
cmp
pop
mov
popf
loopne
outs
int
leave
pop
or
xchg
pop
fwait
push
(bad)
scas
test
outs
test
mov
pop
inc
add
enter
xchg
xchg
outs
push
xchg
test
out
imul
adc
add
jmp
nop
push
xlat
repz
dec
dec
and
sub
jae
mov
in
push
js
pop
mov
push
scas
mov
(bad)
scas
adc
or
xlat
push
leave
xchg
adc
inc
push
inc
rol
lods
sub
imul
jae
jo
(bad)
jmp
stos
cwde
lahf
(bad)
push
or
jecxz
push
stc
inc
bound
xor
mov
cmc
xchg
jns
jae
aas
lds
xor
hlt
jmp
add
cld
mov
cmp
gs
push
jecxz
outs
popa
adc
cmp
in
ret
xchg
mov
jg
dec
inc
clc
cmps
loopne
push
in
dec
das
and
in
jo
lds
addr16
sbb
clc
add
cmp
jmp
mov
dec
pop
(bad)
lods
jb
xor
push
shl
adc
or
pop
sbb
or
push
idiv
js
push
into
fsub
lock
add
je
push
ret
mov
inc
js
push
fisttp
mov
cmp
dec
fldcw
rol
adc
(bad)
clc
mov
or
mov
dec
jp
and
adc
test
mov
into
mov
ret
pushf
mov
fld
lods
adc
retf
dec
and
cwde
ror
and
push
ins
out
push
pop
jae
mov
mov
imul
movs
cmp
jns
fmul
cmps
push
cmp
addr16
in
dec
sbb
test
loop
and
cmps
xlat
push
mov
test
mov
mov
test
repz
aam
mov
icebp
popf
rcr
jo
xchg
adc
cmps
movs
push
mov
adc
mov
push
(bad)
js
sahf
pop
jae
lea
jge
mov
(bad)
cld
outs
fldenv
stos
int
jecxz
adc
inc
jae
adc
xchg
xor
popa
call
ror
lods
test
cmp
sub
inc
gs
mov
nop
enter
sub
xor
sbb
xlat
lea
sub
jmp
lods
adc
dec
in
int3
fiadd
mov
xor
xchg
add
jecxz
shr
lahf
inc
add
sti
jecxz
jo
fcomp
pusha
sbb
cmp
jno
mov
ins
lock
mov
sub
retf
pop
push
mov
sbb
xchg
jne
mov
scas
pop
les
lock
fstp
sub
fnstenv
lea
mov
fldcw
ins
add
call
jb
sbb
bnd
cmp
shl
jns
stos
in
(bad)
retf
jo
clc
xchg
imul
push
sbb
test
xchg
pushf
addr16
mov
jmp
inc
push
jns
in
push
call
inc
les
inc
mov
inc
add
or
mul
mov
gs
shl
dec
xchg
icebp
xchg
imul
cld
pusha
shl
xor
cwde
repz
in
and
and
sbb
(bad)
and
cmp
cmps
nop
stos
fcmove
mov
imul
outs
mov
int3
push
mov
cmp
ins
mov
mov
or
inc
mov
mov
adc
shl
test
add
in
cmp
and
jmp
stc
add
hlt
xchg
das
adc
pop
mov
cmp
cmc
icebp
call
mov
int
es
sbb
push
jo
aaa
daa
lock
ret
mov
mov
stos
jnp
push
mov
pop
frstor
pop
xchg
scas
jns
(bad)
call
jg
pop
fsubr
mov
ror
and
sub
push
push
arpl
mov
pop
push
cmp
xchg
or
int
mov
shl
or
sbb
test
sub
mov
daa
push
xor
popf
es
sbb
in
add
and
test
or
(bad)
(bad)
or
pop
mov
adc
xor
enter
mov
movs
or
retf
outs
push
xchg
mov
sbb
fistp
cmps
std
iret
imul
or
scas
push
das
sub
push
mov
cli
xor
sbb
test
or
fcom
inc
jp
lea
mov
xchg
mov
lods
adc
in
pop
push
je
jns
xor
call
enter
lahf
retf
push
cli
(bad)
stos
dec
dec
adc
hlt
xor
jmp
std
in
and
loop
push
mov
sbb
xor
leave
cmp
jae
pop
adc
(bad)
int3
xchg
icebp
mov
pop
jp
cmp
xchg
pop
ficomp
pshufw
arpl
mov
mov
push
cmp
cmps
jbe
jno
outs
scas
pushf
dec
imul
fld
add
xchg
and
add
clc
add
out
cmp
popa
stos
stos
add
jle
mov
ja
stc
in
jecxz
xor
neg
mov
mov
mov
pop
cwde
dec
mov
adc
pop
sub
pop
cwde
and
clc
pop
adc
mov
rol
push
sbb
mov
pop
addr16
push
mov
mov
ds
inc
cmc
mov
sbb
jmp
add
mov
cmps
ins
out
push
ret
mov
ror
cmp
sub
pop
aaa
data16
or
int
out
cmc
jp
test
or
test
push
xor
jmp
xor
rol
xchg
icebp
cwde
mov
push
mov
xor
sub
push
sar
pop
frstor
psubq
mov
jnp
mov
inc
jp
push
or
cmp
cmc
dec
fiadd
or
mov
ret
cmp
or
or
lods
push
adc
int3
call
loop
jb
imul
push
fnsave
jmp
mov
sbb
xchg
pop
(bad)
int3
shr
add
cmp
arpl
clc
mov
sbb
cwde
fwait
bsr
inc
push
pop
into
ds
popf
pop
call
sub
in
add
xchg
push
lahf
(bad)
jecxz
and
xchg
sbb
aad
scas
sbb
mov
adc
fucomi
jg
cli
mov
in
cli
inc
sub
adc
in
das
fild
ins
adc
rcl
xor
xchg
adc
cwde
mov
bound
add
shl
and
retf
or
fdiv
cli
jl
add
(bad)
add
and
shl
fnstcw
jmp
inc
call
and
mov
outs
das
mov
lock
cmp
mov
retf
and
push
arpl
mov
cwde
test
mov
cdq
dec
out
jbe
es
enter
(bad)
addr16
cwde
add
call
cmp
addr16
mov
sub
or
or
or
repnz
add
imul
mov
sub
xor
cs
mov
add
movs
lods
(bad)
int3
mov
mov
xchg
fs
ss
xchg
pop
fsub
cdq
or
jle
int3
push
jmp
push
(bad)
mov
fcomi
dec
xchg
push
mov
ins
fiadd
gs
dec
in
jmp
push
daa
push
jmp
jnp
icebp
mov
fadd
jp
addr16
loopne
mov
test
sub
pushf
ficomp
ss
xor
mov
mov
lahf
dec
dec
adc
mov
xor
jmp
inc
cmp
mov
cmp
cmps
shl
scas
cmps
push
add
jne
fbstp
xchg
and
fidivr
or
clc
fwait
push
pop
out
mov
mov
(bad)
mov
out
adc
idiv
push
in
test
shl
ja
cmp
jno
push
fwait
jg
lock
sub
ror
jg
lahf
(bad)
xor
sub
loop
out
gs
pop
and
pop
repz
clc
call
mov
mov
dec
jno
aam
cli
aaa
das
cwde
push
repnz
aad
retf
rcr
rol
jnp
inc
(bad)
into
call
push
xchg
(bad)
pop
int
jo
mov
movs
add
gs
and
ds
inc
pop
xchg
push
cmc
jge
xchg
jnp
xchg
mov
shl
jl
fsubr
imul
mov
loop
ficomp
repnz
fstp
fcom
or
push
jmp
out
xor
mov
cmc
xchg
test
(bad)
sub
lods
rcl
lods
test
mov
sar
rcr
jmp
mov
jmp
(bad)
pop
inc
ret
mov
sub
cli
xor
mov
fcompp
(bad)
fistp
or
pop
int
scas
cli
cmps
dec
mov
jb
shl
add
hlt
cmps
sahf
pop
dec
push
add
mov
pop
push
int3
adc
mov
hlt
mov
cmp
push
(bad)
js
jnp
and
push
aam
and
loop
jae
jnp
dec
xor
movs
cdq
ins
adc
aam
xchg
push
ret
sub
sbb
(bad)
in
xchg
cdq
aam
jne
icebp
jle
xchg
xchg
or
cmp
cmp
jmp
movaps
mov
dec
mov
repnz
aad
mov
cmp
fisttp
adc
xor
dec
popf
pop
add
xchg
mov
adc
or
ja
inc
mov
fst
data16
dec
pop
imul
fcmovb
fs
sub
mov
ret
cwde
pop
inc
test
mov
mov
mov
js
test
fist
test
ins
and
cmps
lahf
mov
dec
xor
fstp
mov
or
enter
dec
xor
mov
and
aas
mov
js
sti
stos
inc
xor
and
push
cmp
jbe
mov
and
clc
imul
add
nop
add
mov
dec
and
fdiv
es
je
cli
xor
push
mov
or
ins
xchg
push
sub
mov
add
xchg
sbb
bound
rcr
(bad)
fcom
xchg
inc
sub
shr
ss
pop
pop
inc
push
test
jp
sub
or
imul
push
pop
xchg
popa
jmp
jmp
imul
fnstsw
sub
cmp
iret
in
mov
xchg
jns
mov
pop
inc
jbe
fcomp
adc
call
call
iret
lock
repz
aas
test
cmp
pop
mov
and
cmc
mov
xor
daa
xchg
push
jp
or
retf
mov
cmp
xor
aad
mov
push
mov
lods
pop
adc
ds
nop
test
repnz
das
sti
jge
push
xor
mov
cmps
jp
and
xor
int3
idiv
lea
ret
dec
daa
mov
cdq
cwde
push
cli
cmp
call
(bad)
mov
(bad)
(bad)
fistp
jbe
outs
sahf
cmc
cmp
aad
das
jne
(bad)
adc
test
aaa
sub
repz
cmp
or
popa
(bad)
repnz
sub
mov
in
test
clc
mov
scas
inc
stos
adc
mov
arpl
call
mov
inc
push
mov
in
sbb
(bad)
adc
fmulp
jle
sub
xchg
ret
rcl
out
lock
loope
inc
sub
test
pop
popf
mov
es
aaa
setg
xchg
cmp
(bad)
popa
pop
lahf
cli
sub
(bad)
pop
nop
jb
pop
cli
retf
(bad)
cmp
mov
add
jle
mov
dec
push
mov
(bad)
std
and
xor
cli
xor
jp
or
sub
mov
push
out
xchg
xchg
stos
ds
and
jg
lods
pusha
mov
(bad)
sbb
inc
push
test
sti
xchg
push
add
retf
pop
and
pop
push
sar
add
sti
mov
nop
or
xor
in
test
je
mov
js
or
inc
mov
gs
enter
sbb
mov
outs
ins
xchg
stos
xchg
jae
shr
retf
daa
sub
push
fsubr
fs
push
and
fnstcw
mov
retf
out
or
adc
xor
pop
sbb
sub
dec
mov
shl
mov
mov
mov
mov
clc
mov
ret
dec
out
cmp
xor
mov
push
add
mov
adc
mov
jne
pop
scas
(bad)
lahf
stos
sub
xor
or
rcr
pusha
sbb
scas
outs
xchg
div
sub
hlt
xchg
fwait
cli
(bad)
jp
fcmovu
push
inc
arpl
or
sub
adc
xchg
int
mov
loop
mov
fsub
retf
neg
or
push
das
ds
std
push
mov
xor
pushf
jp
jo
sub
mov
inc
and
inc
sti
xchg
pop
fmulp
cli
xchg
dec
mov
idiv
fnstcw
movs
xadd
mov
dec
xor
lods
sbb
mov
sub
mov
icebp
xor
jge
and
pop
in
nop
les
adc
mov
ins
lods
mov
cmp
fcmovbe
daa
icebp
pop
imul
cmp
mov
(bad)
mov
xor
outs
pop
jecxz
adc
ins
or
jne
aad
xor
sbb
(bad)
clc
into
pop
mov
call
outs
sbb
mov
and
xor
jp
jnp
adc
pop
xlat
(bad)
mov
fwait
mov
jl
sbb
rcl
push
mov
jge
out
rol
aad
ja
mov
cwde
adc
or
dec
add
push
mov
rol
test
pop
and
pop
cmp
mov
mov
and
test
mov
dec
les
leave
or
loope
mov
cmp
dec
mov
lods
pop
jns
mov
loopne
mov
outs
pop
jbe
ss
call
mov
sahf
push
aaa
dec
adc
retf
adc
bound
fwait
push
(bad)
aas
jmp
mov
mov
push
popf
push
add
jns
and
pop
jns
xor
data16
ret
shl
dec
out
cmp
mov
jmp
push
inc
push
adc
inc
fcmovu
xchg
arpl
mov
mov
ss
arpl
gs
cmp
push
out
jno
push
jae
xchg
shr
sub
addr16
out
jmp
test
sbb
push
pop
mov
mov
adc
inc
dec
repz
dec
sub
mov
std
imul
nop
push
sahf
cmp
sub
fst
sbb
shl
add
(bad)
int3
clc
test
or
xchg
mov
aam
retf
cmps
ins
mov
shr
pop
inc
pop
aad
mov
sbb
test
and
repz
sbb
mov
push
lahf
iret
mov
xchg
daa
fmul
in
out
push
call
and
add
adc
dec
push
dec
jnp
jmp
mov
add
ins
push
sub
jmp
cmp
add
or
fstp
call
xlat
push
xor
adc
mov
ret
cmps
push
cmp
dec
push
xchg
mov
(bad)
cmp
mov
in
push
or
xor
enter
fwait
xchg
inc
add
lods
xchg
mov
mov
sbb
popa
mov
sbb
sub
inc
mov
push
pop
ffree
sbb
daa
ret
psubsw
into
mov
aas
retf
or
leave
jmp
xor
ror
outs
jmp
rol
jle
dec
pop
pop
fidiv
popa
pusha
out
mov
mov
and
sbb
jp
xlat
fimul
aad
fcomp
retf
push
in
or
adc
jp
out
(bad)
xlat
lock
fdiv
and
nop
imul
and
mov
nop
rol
add
out
cmp
sbb
dec
out
xor
fisubr
inc
cmp
mov
addr16
dec
inc
and
shr
stos
int
in
dec
popf
dec
(bad)
stc
push
jo
add
pop
xchg
and
jg
fdivr
adc
mov
cmc
lock
mov
sbb
sub
das
cmp
rol
and
jno
dec
data16
push
jne
cmc
sar
outs
xor
pusha
loope
into
in
sbb
fwait
scas
jmp
jmp
imul
mov
aaa
jnp
pop
(bad)
call
mov
mov
jmp
sub
or
cmp
int
mov
push
cwde
pusha
or
je
(bad)
push
push
mov
push
mov
sbb
add
pop
sub
clc
jle
mov
in
cmp
and
push
fs
cmp
add
call
cmp
dec
jmp
mov
daa
ror
xchg
in
sub
sbb
test
or
pop
inc
xor
pop
pop
xor
ds
sub
(bad)
mov
pxor
pop
(bad)
in
fadd
sar
sar
cmp
fadd
ja
mov
cmps
outs
push
add
pop
cli
dec
sub
ret
push
mov
test
daa
gs
int3
ficomp
jbe
jne
push
mov
pop
fmul
sahf
ja
add
js
mov
pop
jg
adc
jecxz
and
and
(bad)
fist
cwde
mov
xor
mov
and
mov
inc
lahf
test
clc
loopne
cmp
xchg
test
icebp
mov
retf
out
test
pop
adc
rcl
xchg
jmp
addr16
hlt
pop
dec
rol
sub
and
das
fs
cmp
jecxz
push
cmps
stos
les
ja
cli
pop
pop
mov
push
out
(bad)
mov
jno
mov
xor
in
adc
neg
mov
sbb
pop
(bad)
mov
push
push
inc
add
popf
push
sbb
mov
inc
mov
cmp
xor
pop
(bad)
xchg
mov
push
cmps
jecxz
add
into
inc
xor
out
jns
cwde
fisttp
xor
or
mov
cs
mov
push
cmp
or
ret
nop
dec
mov
jb
ss
inc
in
jge
frstor
cmp
pop
add
jmp
add
nop
icebp
in
fist
pop
iret
sbb
dec
xchg
sub
ds
fist
mov
addr16
sahf
sbb
fst
jo
hlt
clc
jo
lock
arpl
sbb
sahf
repnz
jbe
fcomp
mov
test
jge
sahf
nop
mov
aad
bound
dec
mov
or
push
stc
bound
stos
mov
sub
in
adc
pushf
fwait
dec
dec
pusha
ins
ret
rcl
jp
xor
pop
mov
hlt
dec
push
shl
int3
inc
outs
inc
add
int3
adc
repnz
xchg
push
mov
movs
mov
xor
push
movs
int3
ror
sbb
arpl
pop
loopne
cli
pop
xor
cmps
mov
and
or
icebp
pop
das
cmp
ficomp
pop
rcr
adc
mov
push
add
inc
pop
out
test
xor
push
movs
pop
in
ins
add
xlat
in
cmps
xor
cdq
or
inc
pop
(bad)
jno
xor
jbe
mov
retf
mov
xor
icebp
xor
mov
les
sbb
iret
stos
mov
bound
(bad)
dec
push
xlat
retf
neg
sub
pusha
test
mov
and
outs
jo
stos
(bad)
shl
les
inc
call
stc
iret
sub
inc
mov
js
jo
int3
loope
movs
or
add
(bad)
outs
add
xchg
and
xchg
sti
shl
push
mov
mov
mov
imul
push
loop
scas
mov
shl
(bad)
sub
sub
add
pop
adc
jg
div
mov
sub
call
cs
inc
inc
mov
sbb
mov
sbb
call
mov
push
repnz
sub
mov
stos
mov
add
xor
mov
je
push
sub
mov
ror
cmps
cmovns
sahf
loope
into
mov
dec
push
sti
or
outs
cmp
jno
mov
cmp
adc
mov
js
pop
push
loop
std
mulps
xlat
shl
and
repz
outs
sti
test
in
and
repz
mov
push
xor
test
hlt
popf
popa
clc
jl
out
adc
jg
push
push
call
mov
sbb
std
xlat
inc
dec
dec
pop
call
scas
(bad)
and
(bad)
mov
pop
inc
mov
call
out
pop
jp
jnp
ins
movs
adc
mov
pop
out
leave
push
add
mov
les
pop
mov
push
rcl
pop
aad
mov
jmp
jo
pop
div
adc
inc
push
sahf
xchg
pop
mov
call
jo
test
popa
or
sbb
fwait
jmp
into
sbb
pusha
lds
or
and
adc
(bad)
fistp
xor
mov
pushf
test
(bad)
pop
pop
in
jae
pop
adc
mov
dec
cld
sub
popf
add
cmps
scas
push
aaa
shl
jbe
xchg
aaa
fsub
adc
jg
sub
retf
nop
shl
dec
push
(bad)
adc
inc
push
movs
fist
dec
shr
pop
icebp
cmp
in
out
pop
int3
sub
imul
mov
call
sub
icebp
sub
ins
(bad)
jnp
or
or
mov
jne
sbb
jecxz
call
fild
sbb
les
imul
and
sbb
aaa
dec
mov
in
pop
push
xor
and
das
mov
fyl2x
aaa
test
or
(bad)
pop
jno
ins
cdq
pop
push
adc
cs
ss
imul
sub
push
inc
js
jno
jo
lds
dec
add
mov
push
loope
mov
or
jns
cli
pushf
adc
mov
out
das
hlt
sbb
fcom
jnp
mov
shr
and
jnp
cmp
mov
jmp
cmp
mov
push
sub
retf
inc
cdq
fstp
mov
dec
mov
pop
push
loope
fadd
stos
(bad)
mov
mov
push
push
adc
dec
sub
mov
int3
mov
int3
mov
mov
loopne
cmp
pop
jp
daa
and
jo
imul
(bad)
or
sbb
xor
cli
mov
pop
add
pop
inc
rol
pop
je
and
sbb
mov
cmp
dec
xchg
adc
adc
push
test
and
xchg
sar
mov
fcmove
nop
push
jne
shr
xchg
dec
xchg
call
pop
stc
jmp
aad
(bad)
pop
movs
xor
push
js
or
mov
retf
dec
mov
cli
sahf
mov
mov
mov
(bad)
stos
mov
mov
mov
sbb
xchg
mov
jl
jae
pop
ret
(bad)
frstor
add
cmp
push
shr
rol
inc
pop
jb
aas
push
js
(bad)
xlat
fstp
ss
mov
lods
sub
loope
mov
jg
and
pushf
imul
pop
lahf
mov
cmp
cmp
outs
or
add
jo
(bad)
cld
cs
popf
mov
lods
(bad)
push
push
lds
mov
aas
pop
mov
shl
adc
call
dec
ss
cmps
jno
dec
retf
addr16
add
mov
cmp
dec
mov
in
mov
add
jle
adc
ja
xchg
xlat
out
mov
push
push
or
mov
dec
inc
(bad)
cwde
add
dec
inc
jge
out
fmul
shl
sub
pop
lods
inc
ins
out
jle
mov
jns
out
jnp
jp
jecxz
es
add
sbb
lock
fs
inc
cli
in
jbe
call
rcl
or
mov
jecxz
daa
add
scas
or
mov
mov
inc
lock
xor
add
adc
jmp
cmp
popa
cs
pop
push
cdq
aas
push
jmp
sbb
dec
cld
jg
(bad)
fild
mov
mov
inc
xchg
aad
ins
sub
add
inc
(bad)
outs
aas
add
pop
and
push
ds
clc
cdq
xchg
cmp
jbe
(bad)
fadd
xlat
sbb
cdq
out
ds
and
out
cmp
jg
add
mov
and
int3
gs
sbb
xor
ins
or
push
mov
mov
js
xor
and
adc
adc
and
stc
mov
pop
mov
adc
stos
dec
or
adc
pusha
push
loop
mov
or
xchg
and
rcl
push
(bad)
xchg
add
retfw
and
mov
fidiv
add
and
lock
cmp
add
add
mov
cmp
add
mov
or
sbb
cdq
sbb
pop
or
sbb
xchg
pop
ror
xchg
adc
pop
imul
hlt
shl
repz
mov
adc
shl
dec
pop
aaa
stos
test
pop
sbb
fwait
dec
add
xor
test
mov
retf
push
add
call
push
pop
mov
xor
xor
xchg
leave
in
in
leave
dec
pop
lods
add
xor
xor
icebp
add
in
sbb
sbb
imul
add
sub
jp
sub
push
out
pop
adc
pop
dec
repnz
jecxz
sub
mov
enter
push
dec
inc
add
sub
or
in
in
sub
sti
loop
mov
mov
mov
(bad)
push
ja
xor
jns
call
mov
xor
in
sbb
lods
mov
or
data16
hlt
fbstp
imul
inc
and
add
xchg
xor
pop
push
inc
adc
icebp
mov
repnz
and
xor
xchg
jecxz
pop
inc
iret
xor
adc
movs
xor
mov
cdq
in
int
inc
xchg
(bad)
adc
mov
call
sub
xchg
jmp
inc
ins
cdq
jge
fwait
pop
add
xor
mov
xchg
aaa
mov
adc
inc
pop
push
hlt
add
lea
out
movs
shr
cmp
(bad)
lea
jmp
(bad)
mov
shl
mov
in
dec
out
shl
push
push
fwait
js
adc
adc
jne
push
inc
pop
mov
jb
(bad)
push
test
movs
and
je
mov
out
jne
pop
sbb
xchg
and
xor
sub
ror
std
xchg
mov
cmp
sahf
mov
aad
mov
add
lock
lock
mov
ins
mov
lea
lahf
ins
push
pop
mov
clc
sub
fwait
pop
and
fisubr
inc
call
inc
enter
cmp
into
xchg
mov
sub
fnstsw
sub
aaa
mov
repz
sbb
fistp
mov
loopne
cli
xchg
cmp
lods
cmp
jmp
push
das
das
test
mov
add
jecxz
xchg
rol
mov
cmp
aad
push
mov
or
sahf
arpl
pusha
stc
scas
in
jno
xchg
cmp
mov
stos
call
sbb
stos
mov
(bad)
xchg
sbb
mov
sbb
sub
enter
cmp
xlat
add
pop
imul
mov
jb
in
ret
add
popa
mov
and
inc
mov
pusha
iret
or
ja
lahf
cs
fcmovu
or
jmp
mov
lods
and
enter
or
jecxz
in
out
xlat
in
in
std
out
imul
pusha
aad
imul
sbb
in
movs
mov
gs
pusha
outs
push
les
inc
mov
mov
sub
cli
cmp
or
adc
fcmovne
sbb
fld
ja
aaa
dec
rcr
addr16
jbe
fdiv
retf
shl
dec
pusha
xor
mov
mov
and
mov
(bad)
adc
cmp
in
sub
cld
sar
xor
push
sbb
les
clc
inc
mov
retf
jecxz
add
cmp
cwde
ins
arpl
add
mov
dec
add
call
lea
mov
cvttps2pi
sahf
clc
lea
loopne
cmps
(bad)
mov
sbb
xlat
jb
xor
cmps
xchg
push
sub
es
mov
and
jb
jae
loope
lods
daa
dec
cmps
adc
mov
(bad)
cmp
loopne
stos
mov
add
out
add
pop
in
push
xor
add
clc
add
or
sub
call
mov
stc
(bad)
stc
xchg
ins
movs
daa
test
mov
dec
xchg
push
sbb
daa
adc
xor
data16
jmp
popa
(bad)
in
pop
not
cmps
loope
fwait
clc
aas
cwde
stos
mov
mov
fld
mov
repnz
bound
jno
outs
adc
pop
push
stos
arpl
(bad)
pusha
adc
retf
or
pop
inc
nop
dec
cmp
popf
les
sub
aas
(bad)
sub
(bad)
mov
div
fisttp
out
or
pop
mov
call
push
ror
push
mov
fcmovbe
xor
add
(bad)
cmp
xchg
xchg
push
mov
xchg
sub
cli
mov
pop
cld
add
push
arpl
or
mov
iret
or
neg
mov
repz
dec
jb
ss
scas
jp
test
push
sub
add
add
inc
(bad)
les
mov
sub
mov
retf
jmp
sar
sub
mov
iret
adc
and
lahf
xchg
xchg
pushf
pusha
sti
pxor
das
js
mov
out
les
clc
(bad)
xor
mov
xchg
daa
fwait
fwait
dec
xor
mov
mov
hlt
push
aaa
(bad)
or
or
jb
clc
movs
movs
pop
push
xchg
pusha
mov
sti
mov
mov
mov
cmp
xchg
data16
xchg
test
dec
out
stos
sub
push
dec
mov
call
jnp
call
je
jmp
daa
imul
inc
dec
sub
and
mov
mov
dec
cmc
pop
loopne
jmp
mov
inc
or
fst
mov
inc
repz
push
rcl
pop
mov
or
pop
push
ins
retf
mov
xor
push
aad
cmps
(bad)
icebp
xchg
(bad)
aaa
mov
sbb
imul
mov
cmps
push
addr16
mov
(bad)
add
repz
dec
add
sub
or
aaa
pop
or
mov
lods
enter
mov
add
hlt
mov
cmc
mov
shl
cld
imul
(bad)
add
int3
jl
xor
push
xor
and
add
xchg
or
outs
jo
or
ror
test
and
jl
outs
inc
mov
sub
inc
xchg
cmp
fucom
ja
xchg
mov
pop
jg
mov
xchg
stos
add
nop
sahf
movs
jne
retf
ficomp
pop
bound
xlat
sbb
icebp
xchg
test
mov
mul
ins
inc
or
ds
xchg
dec
jae
js
pusha
pop
into
in
fimul
mov
adc
jne
cmps
xchg
mov
dec
jmp
fidiv
push
ja
or
std
pop
add
call
and
dec
fs
fs
pop
adc
mov
sbb
in
cmp
ror
outs
or
mov
sbb
arpl
dec
enter
push
mov
movs
dec
bound
daa
jle
lods
leave
mov
xor
jmp
jmp
xchg
pop
sub
es
inc
je
and
jg
push
xor
inc
xchg
pop
sub
nop
push
pop
inc
pushf
jecxz
push
pop
out
cmps
pop
jns
popf
jns
aas
dec
out
jle
(bad)
mov
call
in
je
test
adc
inc
ins
test
outs
add
loope
sbb
cmp
jp
emms
test
movs
mov
inc
cmps
test
arpl
inc
mov
clc
mov
sbb
push
popa
or
test
lds
inc
sahf
push
adc
cmp
jl
cmp
mov
popf
push
pusha
lds
push
lahf
mov
sar
sbb
adc
mov
ss
pop
popa
sub
test
pushf
jmp
outs
or
int
inc
xchg
int3
mov
or
xor
(bad)
pop
gs
addr16
cmps
dec
in
dec
jne
and
jmp
call
sbb
mov
push
out
dec
shl
enter
jecxz
or
stc
xor
bndstx
aas
add
test
cwde
sbb
out
loopne
lods
jb
push
jl
cmp
call
sub
in
arpl
mov
enter
std
movs
inc
arpl
xchg
sub
call
ds
pop
mov
es
fs
pop
(bad)
imul
rcl
enter
shr
lods
jbe
mov
cmc
into
stos
bound
(bad)
lahf
punpcklwd
dec
scas
push
mov
fstp
in
loopne
push
std
call
mov
xor
and
inc
loop
mov
or
addr16
sbb
pop
loop
cs
jecxz
ja
sbb
adc
sub
mov
stc
aam
cld
xchg
push
sbb
call
fcmovbe
xchg
pop
(bad)
js
arpl
inc
dec
or
xor
ror
test
fs
repnz
fwait
mov
aas
pop
(bad)
dec
js
or
test
jl
mov
pop
call
mov
data16
rol
dec
shl
sar
imul
outs
or
xor
or
mov
popa
add
call
bound
popa
jns
ja
sbb
pop
gs
mov
push
pop
dec
or
mov
inc
fisttp
inc
cmp
sbb
push
or
and
adc
dec
into
and
test
ret
dec
out
ja
test
mov
and
outs
adc
pop
movs
mov
popa
or
xchg
xchg
stos
mov
js
call
cli
or
inc
sbb
push
repnz
test
jae
xchg
xchg
retf
jecxz
inc
ins
push
fmul
xchg
popa
and
mov
or
mov
test
jmp
cdq
xchg
mov
add
rcl
and
sbb
sbb
popa
stos
mov
aad
cmp
cmp
cdq
sti
pop
shl
cmp
push
in
iret
xlat
out
push
xor
push
push
inc
add
test
push
cli
cmovs
mov
inc
xor
xor
mov
les
sbb
dec
gs
cmp
mov
push
jno
dec
pop
inc
ins
cmp
push
movs
loopne
scas
scas
out
popa
das
aas
stos
hlt
mov
sar
enter
cmp
sub
jmp
mov
mul
cmps
xchg
pop
xchg
cmp
adc
add
xchg
imul
mov
mov
repnz
iret
(bad)
xchg
hlt
les
pop
jnp
push
sti
pop
das
push
aas
inc
test
repnz
aas
mov
sahf
mov
jl
mov
ds
imul
and
ror
cmp
ins
and
(bad)
push
sub
(bad)
shl
xchg
push
adc
gs
mov
add
cs
fistp
into
inc
xor
and
add
cld
push
call
sbb
sbb
sub
fbld
arpl
dec
fs
cwde
sub
dec
dec
xchg
retf
mov
pop
int
mov
out
fcomip
push
jae
sub
push
sub
sub
inc
stos
gs
xchg
inc
out
pop
pop
retf
ins
pop
lds
sbb
inc
push
mov
and
dec
shl
sub
jmp
sub
ror
pushf
mov
or
push
sbb
(bad)
movs
dec
ja
(bad)
in
into
rcr
cwde
clc
push
movs
jge
adc
mov
xor
xchg
lods
(bad)
fs
and
setle
lea
pop
loop
js
inc
push
mov
sub
addr16
fnstcw
jb
mov
dec
sub
retf
inc
in
js
aam
sub
mov
xchg
fsubr
mov
xchg
outs
loopne
aaa
cld
mov
jmp
rol
cmp
jnp
sti
fcom
push
lods
sbb
mov
or
jnp
(bad)
fdivr
loope
lods
cmp
mov
sub
mov
std
outs
jne
jb
xor
mov
test
or
push
xchg
cmp
xlat
inc
and
les
sar
in
xchg
pop
sti
out
(bad)
inc
repz
mov
mov
jg
retf
movs
retf
or
stc
add
jno
in
mov
aas
shr
leave
out
ror
push
xor
push
movs
jno
push
push
mov
mov
mov
push
dec
pop
ror
outs
sbb
es
ret
dec
ror
(bad)
in
pop
inc
aam
(bad)
pop
add
(bad)
inc
mov
sub
push
fdivr
sub
(bad)
clc
(bad)
retf
lea
mov
and
inc
mov
ss
mov
(bad)
jecxz
mov
rol
aas
(bad)
jbe
mul
push
inc
stos
out
pop
pop
gs
(bad)
mov
cmps
cmovg
or
cmp
pop
enter
jae
fadd
inc
sbb
adc
sub
or
dec
sbb
out
inc
aaa
bound
mov
add
scas
popf
cmps
dec
cli
pop
ds
jns
adc
(bad)
mov
mov
push
mov
xchg
retf
sbb
lods
jge
movs
mov
jmp
mov
cmp
stc
arpl
test
mov
es
rcr
mov
inc
sbb
xor
sti
and
xor
pop
and
into
test
xchg
xor
or
shr
pop
and
arpl
ss
sbb
adc
js
arpl
mov
call
fs
inc
repz
mov
loop
jns
mov
sahf
inc
je
and
push
xor
push
jecxz
jmp
xor
sub
test
push
dec
cs
push
adc
xor
data16
adc
jmp
pusha
pop
and
cwde
pop
sahf
lahf
jne
jae
or
movzx
pop
push
cld
push
ins
in
adc
aad
mov
aad
and
push
movs
movs
mov
adc
mov
loopne
xchg
fwait
loope
dec
add
ds
loopne
mov
jle
sub
mov
jmp
retf
ficomp
loop
jbe
push
sub
rol
xor
fs
lods
push
xchg
arpl
mov
cmp
(bad)
pop
inc
push
sub
movs
mov
xor
movs
sub
xor
je
std
sbb
(bad)
jp
push
sbb
int
mov
and
scas
jg
out
retf
shr
stos
xchg
fidivr
fst
pop
sbb
jb
fldenv
add
dec
sbb
movs
sub
push
sahf
xchg
test
jae
xchg
cdq
pop
fucompp
push
sbb
pop
fimul
push
or
pop
movs
mov
ret
dec
xor
jecxz
adc
mov
or
mov
imul
push
jg
dec
pop
or
inc
add
imul
test
stos
xor
or
iret
inc
sub
repnz
push
xor
call
sub
jl
add
pop
aam
inc
outs
stos
pop
ins
fwait
or
ja
inc
(bad)
or
mov
xor
fdivr
push
iret
and
jmp
aaa
(bad)
xchg
fsubr
push
gs
push
cmp
loope
arpl
enter
add
push
loope
mov
mov
mov
jns
and
and
xchg
test
aad
mov
jae
dec
out
sahf
dec
das
cmp
call
jo
mov
inc
aas
push
dec
push
les
stos
cmp
or
call
test
mov
shl
lds
(bad)
mov
movs
or
jo
cs
dec
cmp
ins
sub
jl
jnp
mov
addr16
out
repnz
push
cdq
(bad)
mov
mov
rcl
jno
fistp
or
sub
and
add
jg
sub
mov
xor
mov
xlat
pop
jne
inc
out
imul
loopne
jge
not
push
icebp
xor
xor
stc
jnp
daa
cmp
jp
fisttp
inc
mov
sbb
dec
push
inc
jmp
xchg
sub
mov
cmovle
pop
sar
mov
bound
mov
test
jp
jecxz
lock
inc
adc
icebp
jmp
mov
fmulp
ins
push
pop
push
outs
not
in
(bad)
cmp
sub
stc
pop
out
fsub
mov
cld
mov
and
and
jae
and
sbb
call
cwde
mov
mov
add
jl
shl
aam
xor
adc
test
int3
in
(bad)
js
jle
test
sahf
dec
inc
sar
popf
sbb
push
inc
adc
push
outs
rol
dec
cmp
and
(bad)
loope
nop
push
cmps
in
ja
push
shl
sahf
in
(bad)
mov
push
cdq
jbe
ror
or
xor
mov
mov
loope
cld
xor
imul
dec
ret
push
pop
or
gs
sbb
repnz
adc
fwait
seto
loop
or
pop
or
xor
iret
add
call
push
pop
push
test
lds
fisttp
nop
mov
shr
xchg
rcr
mov
mov
repz
lahf
mov
enter
cmp
mov
push
xor
push
fsubr
inc
ret
pop
fldcw
lea
out
push
ja
fucomp
movs
push
rcl
loope
push
jno
and
jp
inc
shr
outs
adc
int3
pop
xchg
jmp
cmp
sbb
mov
stos
ffree
popf
ror
dec
scas
inc
cwde
and
inc
cmovns
pop
(bad)
into
fmul
leave
or
xchg
mov
test
arpl
push
or
push
sub
outs
fwait
mov
dec
inc
dec
jp
or
mov
mov
leave
(bad)
enter
repz
pop
push
push
arpl
sbb
push
(bad)
mov
js
shl
adc
es
in
xchg
sbb
iret
pop
or
dec
jle
std
cmp
cli
arpl
pop
sbb
add
and
adc
repz
test
xor
sbb
ficomp
pop
sbb
sub
mov
out
cmp
xor
jae
lods
pop
jnp
adc
pop
xchg
cli
dec
(bad)
adc
xchg
lds
loop
(bad)
mov
cli
lds
or
pop
dec
or
or
jl
test
jg
mov
loopne
fst
add
sub
dec
push
pop
and
xor
out
cmp
and
dec
adc
ds
sbb
mov
mov
ins
and
pop
mov
jne
push
push
sbb
test
adc
inc
loopne
xor
loopne
clc
xor
hlt
mov
xlat
stos
je
jo
jbe
mov
test
xchg
mov
cwde
xor
mov
push
dec
scas
lea
xchg
repnz
loope
pop
sub
push
dec
push
sub
stos
scas
cld
and
cmc
jmp
scas
movs
dec
stos
jae
xchg
test
(bad)
outs
xchg
scas
jmp
push
pop
adc
add
or
dec
fldenv
fist
push
imul
out
stos
arpl
or
mov
lods
cmc
(bad)
pop
imul
add
sti
cmp
add
mov
sub
and
mov
out
pop
xlat
mov
add
sub
fsubr
repnz
das
push
mov
cmp
rcl
inc
sub
test
mov
int
mov
jno
jecxz
push
clc
sub
mov
push
jmp
mov
out
add
xchg
pop
mov
xchg
scas
mov
sub
sub
push
xchg
fs
and
xor
cmp
movs
or
loop
xlat
inc
jnp
hlt
sbb
cmp
mov
repnz
mov
imul
data16
or
add
xor
and
dec
push
fist
push
std
test
retf
adc
lods
dec
inc
xor
inc
addr16
add
inc
arpl
adc
shl
inc
in
inc
shl
dec
mov
adc
fistp
sub
sub
out
xor
imul
sub
and
scas
fadd
push
icebp
inc
push
adc
jne
retf
pop
sti
je
push
add
sbb
ret
inc
call
lahf
inc
aaa
imul
xchg
ret
sbb
mov
inc
mov
push
mov
outs
(bad)
lock
repz
add
push
call
sub
ja
dec
inc
int3
cs
inc
dec
xor
xchg
dec
ds
cdq
pop
test
jecxz
lahf
outs
ret
pusha
mov
stos
retf
pop
(bad)
mov
rol
dec
jae
lods
and
sbb
xchg
xor
inc
jne
jle
xor
add
sti
mov
jbe
clc
mov
mov
jnp
dec
adc
sbb
push
jne
sbb
jle
jo
lds
xor
out
pop
sbb
lods
inc
popa
mov
fld
inc
or
jecxz
lods
pop
popa
cmp
mov
syscall
jge
rcr
lea
(bad)
ins
outs
and
inc
shl
mov
push
xchg
scas
sbb
retf
pusha
pusha
dec
dec
aas
mov
lods
ins
jne
fidivr
outs
sub
frstor
jbe
adc
and
popa
mov
cmp
sbb
std
mov
inc
add
jne
xor
cmp
cmp
adc
jl
vpcmpgtb
fisttp
mov
ret
push
leave
fistp
leave
lea
mov
sbb
mov
push
inc
clc
ret
and
mov
shr
add
inc
test
mov
cmp
xor
jecxz
nop
mov
inc
mov
or
pop
cmp
jmp
data16
(bad)
lahf
mov
dec
imul
das
push
ficomp
pop
into
add
xor
ss
cmp
lods
inc
sbb
cmp
dec
shl
je
loope
(bad)
mov
loopne
xchg
inc
jecxz
aad
jns
jmp
cld
fs
dec
pop
loop
call
mov
xchg
out
add
pop
inc
imul
lods
push
out
test
mov
cmp
dec
fisubr
lds
jno
adc
xchg
pop
enter
out
int
das
js
leave
cld
xor
lahf
mov
int3
(bad)
adc
call
jl
dec
aad
aas
cmp
xchg
xchg
into
jmp
psubusw
fdiv
mov
adc
lods
sbb
adc
stos
inc
pop
push
ja
sub
scas
fwait
mov
lods
int3
dec
inc
dec
or
adc
dec
sub
jge
or
and
mov
cmp
cmc
mov
inc
xchg
or
push
ss
jl
lds
daa
ss
(bad)
sahf
loope
bound
les
sbb
gs
and
fldenv
icebp
hlt
ins
mov
xchg
out
(bad)
inc
adc
mov
jo
pop
dec
push
cmp
cwde
xor
sti
jmp
aam
js
sbb
and
sbb
or
(bad)
in
mov
mov
cs
push
dec
sub
dec
cmp
or
inc
clc
adc
clc
inc
test
inc
aad
test
(bad)
fnstsw
mov
test
imul
xchg
jb
aaa
lds
(bad)
push
mov
push
jo
and
(bad)
or
les
(bad)
or
and
scas
loope
mov
sbb
dec
mov
mov
or
aad
(bad)
sub
rcr
call
(bad)
pop
xchg
mov
movs
dec
add
mov
add
jp
inc
mov
push
sbb
out
and
es
or
inc
xor
cmc
xchg
xchg
stc
test
push
(bad)
loop
imul
stos
movs
and
dec
pushf
in
pop
bt
sti
add
mov
and
sti
mov
jbe
mov
cmp
outs
pop
xor
jno
mov
cmps
jmp
mov
add
icebp
stos
and
cmp
loope
cmc
pop
cli
ins
inc
mov
retf
xchg
outs
leave
retf
repz
fistp
push
repz
sub
dec
clc
sub
and
or
mov
cmc
lods
mov
call
mov
push
dec
cmps
in
inc
jns
not
inc
loope
iret
int
shr
xor
mov
xchg
nop
ss
outs
mov
pop
dec
daa
inc
cld
dec
add
mov
inc
cmp
js
push
jo
aam
in
jmp
sub
idiv
pop
pop
pushf
inc
push
fdivr
push
test
aad
xor
mul
cmp
cdq
mov
mov
cmp
arpl
sbb
repnz
test
pop
mov
mov
cdq
jecxz
out
push
push
mov
pop
pop
push
out
je
imul
mov
xchg
mov
xor
cmp
inc
push
inc
jae
and
mov
in
dec
scas
sub
movs
xchg
mov
in
xchg
mov
fwait
dec
dec
es
cmp
jge
mov
cmp
in
jmp
xor
push
and
pop
adc
inc
xor
sahf
cmp
dec
xchg
pop
add
je
repz
in
or
(bad)
jmp
xlat
dec
jle
or
shl
and
out
cdq
mov
jo
xor
push
sub
retf
xor
js
or
adc
jmp
jne
gs
lahf
mov
iret
iret
lds
sub
mov
cli
aas
scas
pop
or
in
ret
cdq
fstp
pop
cli
(bad)
ja
add
(bad)
loopne
or
sub
mov
mov
fwait
mov
test
xchg
hlt
jbe
mov
out
or
sub
xor
sub
add
dec
push
push
xchg
ret
add
(bad)
xlat
pop
lahf
xor
jns
outs
fst
cs
add
fistp
mov
fidiv
xchg
mov
jo
push
ss
mov
aad
cmc
inc
adc
mov
xchg
retf
loop
sub
jmp
fmul
push
out
cmp
fisttp
aad
call
std
loop
mov
jo
dec
xchg
xchg
xchg
fbld
lds
les
in
mov
jge
addr16
movs
adc
add
mov
pushw
jo
call
push
xchg
mov
xor
arpl
icebp
push
lock
pop
nop
xor
daa
ret
retf
fiadd
(bad)
data16
push
mov
cwde
rcr
jae
mov
retf
pop
adc
cmp
into
mov
sbb
push
push
cmps
xchg
xor
stos
or
adc
jg
pushf
add
push
sub
in
sub
jmp
aad
jbe
pop
dec
mov
push
pushf
push
(bad)
xor
dec
mov
xor
xchg
test
cli
stc
test
int
sbb
sar
push
mov
ins
xlat
(bad)
mov
xchg
cmps
stc
fwait
jne
pop
sbb
ret
inc
inc
out
push
ss
lods
(bad)
mov
push
fcomi
pop
inc
pusha
push
add
or
jg
jno
mov
cmp
(bad)
xor
out
cmp
pop
int3
cmp
das
gs
mov
inc
xchg
aam
rcl
mov
(bad)
mov
lods
aad
mov
sti
xchg
inc
scas
std
aas
ins
(bad)
cmp
xchg
and
int3
cmp
mov
test
xchg
into
aas
stc
xchg
cdq
jb
(bad)
retf
sar
jnp
mov
xor
stc
push
sbb
mov
fimul
cmp
call
cli
mov
mov
fcomp
xor
cmp
mov
push
sbb
or
mov
push
mov
and
push
sbb
or
xchg
nop
pop
les
jmp
inc
lods
les
and
call
loopne
sub
loop
add
and
call
je
adc
mov
out
das
fiadd
cmp
dec
loopne
pop
ret
xor
stos
cmp
outs
push
ja
push
inc
stos
(bad)
stc
inc
sbb
fdiv
in
(bad)
jecxz
mov
test
fdiv
fiadd
inc
xor
push
jae
mov
pop
cli
jmp
adc
cdq
inc
daa
repnz
out
sbb
add
jo
in
mov
ret
in
jo
inc
adc
add
pop
pop
jg
push
inc
jmp
popa
scas
lock
mov
cmp
movs
cmp
sar
push
adc
lock
ins
mov
adc
add
js
sar
push
adc
int3
and
xor
sbb
jnp
adc
adc
mov
jmp
ror
fld
pop
or
xor
inc
push
push
xlat
dec
mov
inc
aas
out
stos
jnp
pop
mov
push
out
test
cmp
movs
cmp
fcmove
lods
push
bound
pop
xchg
in
push
add
and
xlat
test
ja
test
fdiv
enter
mov
cwde
(bad)
cmps
add
in
stos
fcom
daa
ins
add
stc
aam
fadd
push
xchg
fcomp
or
gs
mov
rcl
inc
nop
sub
or
sub
push
frstor
adc
jecxz
clc
test
arpl
in
test
daa
xchg
pop
clc
cmp
inc
dec
inc
jl
in
pop
(bad)
push
mov
popa
sub
(bad)
into
mov
sub
mov
dec
xchg
gs
icebp
(bad)
scas
adc
sub
push
test
jo
cmc
sub
cmps
dec
(bad)
repz
stos
fldenv
imul
das
ja
movs
mov
loope
jle
ret
scas
mov
sbb
fldenv
ins
int
cld
xchg
jnp
aas
ds
ret
jb
fadd
pop
push
xchg
mov
or
sub
fld1
dec
jmp
movs
or
out
xlat
rcr
mov
jns
clc
mov
jbe
(bad)
lods
je
pusha
cmp
cs
xor
cmp
sbb
ja
and
int
xchg
jmp
in
push
push
sub
(bad)
call
cmps
xor
xlat
add
add
or
mov
pushfw
iret
pusha
mov
or
fbstp
stos
add
jle
gs
cmp
(bad)
mov
loopne
scas
cs
push
dec
mov
(bad)
cmp
es
inc
push
mov
fcomip
aas
clc
mov
pop
les
mov
pop
leave
(bad)
push
cmps
push
jae
les
test
shr
xchg
shr
es
mov
imul
(bad)
xor
adc
data16
mov
int
arpl
rcl
sbb
jnp
ds
pop
adc
mov
push
inc
and
outs
shl
fidiv
jle
and
mov
je
inc
(bad)
lock
mov
gs
mov
outs
xchg
pop
or
jecxz
lock
mov
xchg
jns
int
push
int3
mov
push
movs
(bad)
faddp
or
cmp
sets
lods
adc
jmp
pop
dec
in
retf
daa
test
mov
lock
adc
lods
aaa
fstp
inc
pop
test
push
movs
mov
rcr
sub
into
fstp
sbb
int3
add
xor
popf
mov
stc
js
fwait
shr
inc
mov
fsub
test
mov
jb
iret
add
jge
pushf
fisttp
inc
cmps
stos
gs
xchg
dec
imul
in
jb
ja
xchg
shr
jle
scas
and
int3
or
ins
loop
mov
jmp
bound
ja
dec
les
dec
out
fld
push
in
add
pop
cmp
stos
fsubr
xchg
add
xor
inc
ds
in
mov
or
shl
cmp
or
(bad)
call
or
push
cmp
mov
cwde
cmp
pop
sub
inc
push
or
movs
in
sti
iret
xchg
jle
cld
cmp
push
cmp
pop
movs
dec
pop
shl
mov
dec
or
iret
ds
sub
jmp
or
inc
jb
in
imul
mov
xchg
arpl
pop
and
sbb
xor
dec
scas
xchg
scas
xor
pop
shl
retf
out
sub
pop
dec
xchg
jge
(bad)
ja
cmp
ins
mov
ins
add
fstp
sbb
(bad)
adc
or
and
mov
or
adc
les
jne
xchg
cmp
sub
sbb
mov
mov
out
xor
nop
xchg
and
fld
mov
sbb
jmp
mov
jmp
dec
dec
popf
repz
push
adc
loopne
out
call
shr
xor
dec
ins
add
cld
mov
bound
mov
mov
or
push
mov
mov
les
pop
sub
aaa
push
cmp
add
(bad)
and
mov
xchg
fnstenv
mov
cmp
pop
in
bound
daa
pop
push
test
xchg
dec
mov
xor
adc
lea
pop
mov
out
adc
(bad)
not
sbb
aam
sbb
cwde
dec
ret
push
addr16
mov
mov
fwait
loop
pop
stos
mov
pop
mov
push
call
mov
adc
mov
sti
bound
cmps
aaa
and
addr16
les
jecxz
sub
enter
lock
mov
sub
fsubr
stos
rcl
cdq
xor
in
pushf
aas
sahf
jb
jns
sub
pop
sahf
xor
sub
jmp
enter
sub
test
(bad)
ficomp
cmp
mov
cmp
inc
add
adc
into
test
nop
xor
pop
cmc
ds
mov
mov
mov
dec
sub
or
jmp
pusha
scas
(bad)
jb
shr
cmp
jmp
mov
out
cmp
cmp
mov
mul
push
xor
inc
xlat
mov
add
jmp
dec
mov
retf
sub
inc
inc
pop
push
or
or
ins
fst
sub
pop
ret
aad
dec
neg
sbb
fiadd
cmp
(bad)
mov
(bad)
jo
dec
stos
mov
movs
xchg
jae
mov
inc
hlt
pusha
mov
jp
mov
xchg
add
aas
aas
in
nop
or
inc
(bad)
stos
add
add
dec
in
xor
stos
lahf
sub
push
cmps
out
jge
mov
out
lods
and
pop
jbe
push
popa
dec
lds
loopne
add
inc
int3
ror
push
sbb
inc
scas
jno
push
pop
vpcmpgtb
cmps
es
scas
sbb
push
jmp
lods
mov
out
adc
jge
mov
sub
jnp
test
add
or
lds
and
or
pop
out
fsubp
loopne
sub
das
or
fnstcw
or
out
outs
stc
dec
adc
mov
int
push
cmp
push
enter
loopne
sbb
imul
inc
inc
lods
pushf
sub
loop
(bad)
movs
jnp
sub
lods
add
mov
push
push
cld
cmps
fs
add
mov
repz
in
add
add
mov
popf
or
rcr
pop
adc
enter
imul
retf
xlat
hlt
loopne
cmc
repz
mov
and
fld
in
test
(bad)
ficom
inc
in
mov
loope
fmul
rcr
das
jno
sbb
lea
jp
add
clc
test
xchg
jp
cmp
sbb
test
movs
outs
xchg
test
push
popf
fcomip
sbb
xchg
lods
jbe
xor
daa
(bad)
cmp
xlat
test
xchg
push
(bad)
pop
stos
adc
cmp
outs
dec
test
mov
fistp
xchg
jmp
outs
jns
push
sub
pusha
test
and
sbb
rol
push
popf
xor
xor
and
js
lock
or
call
gs
test
gs
cmp
and
gs
lock
cmp
push
pop
mov
les
lahf
int
jno
cli
jge
sub
push
xchg
adc
mov
inc
out
cmp
jo
mov
test
pop
sub
push
loope
jo
pusha
xor
add
sbb
xchg
test
or
push
out
sar
push
xchg
ins
or
popa
push
mov
xor
mov
les
rol
inc
or
cmps
div
arpl
in
or
loopne
loop
mov
outs
mov
jo
push
xchg
call
pusha
mov
repz
lahf
add
or
not
in
xchg
add
cmps
and
das
out
xlat
mov
jne
jae
cwde
test
xchg
add
jns
mov
lds
ds
nop
cwde
and
xor
mov
aas
cmp
div
(bad)
cmp
fadd
fwait
enter
int3
adc
pop
sbb
xlat
mov
add
inc
add
aad
jbe
mov
repz
push
cmps
inc
retf
adc
inc
stos
shl
ss
aaa
inc
and
sub
adc
mov
xchg
mov
sbb
inc
inc
pop
inc
or
mov
cmp
pushf
mov
scas
aaa
rcl
add
dec
test
and
ret
in
push
push
mov
out
push
rcr
in
jae
mov
mov
aam
dec
mov
sar
hlt
out
push
sbb
cs
and
mov
sub
lds
pop
sub
sub
add
mov
jne
mov
in
sti
repnz
in
and
sub
ja
cmc
push
dec
lahf
jnp
mov
xlat
cwde
jbe
xchg
fimul
sbb
jb
inc
mov
inc
add
pop
daa
pushf
push
dec
mov
out
repnz
mov
aaa
ss
cmp
dec
outs
jae
dec
ss
xchg
(bad)
pop
jl
mov
inc
lea
scas
xchg
mov
xlat
popa
push
mov
sub
sub
lods
xchg
inc
cmps
ret
outs
retf
popa
div
xor
fstp
and
call
loopne
sbb
fcom
and
or
sbb
test
bnd
sub
push
mov
test
aam
mul
inc
pop
outs
fwait
sahf
sahf
addr16
out
div
cld
dec
fld
test
popf
or
mov
pop
imul
xchg
xor
push
mov
movs
int
dec
mul
fdivr
inc
aas
xchg
scas
inc
cdq
fdivr
cmp
fisttp
mov
mov
sub
cmp
loope
or
pusha
out
or
shl
sbb
out
mov
out
cwde
push
lea
cld
adc
mov
xlat
mov
cmp
lods
xor
cmp
(bad)
(bad)
stc
jmp
pop
sbb
sub
push
mov
repnz
loope
out
xor
mov
inc
in
inc
fimul
scas
mov
rol
es
xor
mov
add
frstor
sbb
and
adc
cmp
mov
xchg
mov
add
inc
mov
xor
nop
or
sub
dec
vpsllw
and
inc
outs
pop
sub
fs
imul
aas
push
add
loopne
(bad)
cmp
pop
mov
test
and
push
ss
icebp
jmp
inc
inc
repz
mov
or
dec
aas
fldcw
sti
addr16
push
out
clc
das
sub
xlat
cli
dec
not
fistp
shr
xor
loopne
mov
popa
jge
sbb
dec
add
aaa
mov
imul
adc
mov
pop
pop
mov
daa
in
enter
mov
mov
cdq
dec
(bad)
mov
ins
outs
popa
or
add
pop
ins
pop
sub
push
jb
aas
sbb
addr16
pop
sub
xor
pop
cmp
xor
push
ds
je
sbb
pop
xchg
cmp
(bad)
popa
mov
lods
jl
mov
clc
rcr
fcomp
xchg
pop
aam
das
call
repz
xor
aad
lds
jl
out
adc
outs
mov
mov
loop
lahf
push
in
repnz
lea
or
in
push
push
(bad)
imul
dec
or
mov
pop
sbb
jne
xor
jo
sub
sub
pop
aam
cmp
(bad)
push
dec
jns
pushf
push
in
mov
arpl
mov
dec
imul
les
(bad)
pop
jo
jo
mov
lods
mov
aad
or
frstor
xor
call
xchg
out
outs
cmc
cwde
xor
mov
add
dec
(bad)
(bad)
jnp
bnd
imul
pop
push
mov
sub
inc
sub
sbb
xchg
sub
pop
push
not
jmp
cmp
xchg
enter
sbb
mov
add
inc
int3
jnp
push
cs
mov
sbb
mov
scas
xor
and
(bad)
stc
retf
cmp
jl
push
xchg
rol
ds
or
gs
in
dec
ret
retf
inc
mov
xchg
dec
cmp
xchg
mov
mul
and
loope
call
arpl
push
sub
les
xor
sbb
cmc
jecxz
jmp
cdq
mov
mov
rcr
mov
pop
dec
repz
sbb
int
pop
adc
test
cmp
and
clc
lods
cli
outs
mov
ret
(bad)
cmp
jmp
test
cmc
pop
push
and
(bad)
dec
movs
mov
cmp
loope
mov
cwde
mov
ins
fs
(bad)
movs
jns
cli
dec
sbb
in
jae
pop
pusha
popa
xor
pop
jnp
or
in
add
fcom
sbb
push
repz
sbb
movs
xor
stos
rol
pop
mov
jl
stos
call
imul
(bad)
mov
jp
repnz
pop
fidivr
inc
and
xchg
lock
ja
stc
jmp
push
dec
mov
aas
add
jmp
sbb
std
push
inc
mov
mov
mov
ins
scas
ja
inc
inc
mov
ss
pop
call
mov
inc
(bad)
push
push
lods
(bad)
or
dec
push
pop
or
loop
pop
mov
imul
shr
jg
push
dec
iret
push
cli
aas
or
or
(bad)
mov
push
cld
push
lahf
dec
add
mov
call
out
outs
jp
xor
dec
mov
cmp
sahf
jg
pushf
call
lock
bound
mov
mov
clc
(bad)
dec
xchg
std
imul
cmp
sbb
push
ror
inc
dec
cs
mov
adc
jl
sti
shr
sbb
dec
lahf
inc
sbb
movs
cs
(bad)
xchg
lahf
stos
out
jo
xchg
in
push
stos
leave
mov
xchg
pusha
div
adc
jge
repz
pusha
fidivr
(bad)
pop
pop
ficomp
arpl
(bad)
mov
pusha
sub
aaa
daa
mov
xchg
fmul
or
xchg
shl
popf
or
and
xlat
jno
sbb
loopne
push
cmp
cmp
inc
mov
mov
xchg
aaa
inc
pop
and
cdq
int
das
pop
cmp
pusha
es
je
fwait
popa
xchg
jae
dec
cmp
add
int
mov
into
dec
popf
lds
data16
inc
sbb
dec
test
pop
js
cli
inc
pop
and
jge
cmp
mov
adc
fistp
bound
mov
ret
call
fidiv
cld
repz
push
jae
pop
sub
xor
outs
arpl
sbb
cmp
aaa
addr16
dec
repz
les
jno
test
inc
(bad)
out
or
xchg
out
mov
push
push
cmp
or
call
stc
icebp
jp
stos
mov
mov
jp
dec
jbe
mov
mov
aam
and
sub
scas
xlat
mov
out
sub
and
ror
xchg
dec
popf
fimul
pushf
xor
jno
xchg
lock
push
into
pop
push
xchg
leave
clc
out
or
sub
ret
pop
inc
mov
test
jmp
cmps
fwait
xchg
fnstsw
retf
jns
lods
jmp
ins
arpl
dec
add
(bad)
popf
push
xor
js
xchg
imul
enter
xchg
inc
pop
shl
or
sub
in
push
inc
xor
sbb
or
inc
push
test
mov
add
and
movs
sub
shl
jo
mov
push
imul
(bad)
ja
lods
dec
arpl
add
aam
retf
fsub
sub
(bad)
jne
and
outs
cs
sub
popf
pop
push
fnsave
mov
fiadd
inc
push
pop
lock
jle
jo
jnp
cmp
neg
dec
out
ror
cmp
lods
mov
test
std
dec
scas
movs
rcl
mov
ins
xchg
popf
dec
inc
mov
push
mov
adc
shl
out
pushf
fidivr
pop
inc
cdq
movs
rcr
cmp
retf
out
xchg
dec
and
ss
or
repz
dec
clc
rcr
push
mov
call
jb
or
packssdw
pusha
jg
pop
fcmovnb
lock
pop
(bad)
xlat
xor
mov
push
(bad)
retf
lahf
add
call
sbb
jnp
jne
cmc
pop
pop
(bad)
loopne
int3
dec
stos
mov
fadd
imul
(bad)
and
shrd
push
jno
sbb
nop
dec
adc
pop
push
repz
add
scas
in
daa
push
or
ficomp
fdiv
(bad)
aaa
dec
scas
leave
outs
sub
push
loope
mov
mov
ins
aam
sbb
xchg
or
imul
stos
pop
imul
dec
int3
adc
xchg
add
fistp
xchg
pop
sub
cmp
mul
out
sahf
stos
(bad)
jne
mov
shr
leave
xor
fs
ret
mov
jns
fmul
and
retf
sbb
jo
xor
jo
push
push
shl
fild
add
ret
aam
or
bound
jno
sar
cdq
popf
daa
leave
xchg
int
mov
add
cs
dec
mov
(bad)
ins
push
pushf
sub
jmp
gs
lods
or
or
push
push
dec
hlt
xlat
add
mov
jne
mov
ins
xchg
movs
dec
add
mov
in
xchg
push
and
jb
mov
int
adc
xor
cmp
fidivr
stc
add
ja
pop
add
mov
jnp
and
add
leave
xor
stos
inc
out
cwde
xor
inc
lds
push
ret
cld
and
jo
pop
icebp
jg
xchg
sti
nop
addr16
pop
popa
in
in
daa
ja
lods
stc
sbb
hlt
ins
jmp
imul
xchg
shl
and
retf
add
mov
push
mov
lods
outs
pop
mov
dec
add
jge
sub
sahf
(bad)
movs
xlat
sbb
ret
add
adc
inc
xor
les
scas
sar
gs
sbb
rcl
cmc
and
ret
adc
xchg
sti
ret
arpl
add
and
pop
aad
pop
mov
aas
mov
pop
and
cs
xchg
xchg
rcr
xchg
mov
dec
add
cmp
movs
cmps
je
xor
loope
movs
test
test
repnz
pop
mov
ror
pop
fist
adc
cli
and
iret
dec
sbb
or
retf
mov
inc
hlt
mov
xchg
xchg
call
movs
mov
test
and
pop
adc
and
mov
or
pop
lock
and
ds
stos
stc
pop
sbb
shl
test
out
call
daa
scas
ins
(bad)
icebp
jmp
fs
or
jp
dec
mov
xchg
retf
aad
xor
jl
dec
push
cdq
cmps
jbe
sahf
dec
inc
sbb
hlt
jnp
push
repz
cld
aam
jmp
jb
mov
dec
jecxz
(bad)
push
push
xchg
pop
ja
xchg
mov
mov
fst
mov
pop
outs
jns
fwait
xchg
mov
inc
mov
imul
jg
imul
push
xchg
fcomp
add
mov
in
pop
arpl
or
jo
retf
cdq
shl
cmp
jmp
and
loopne
sar
mov
loop
bound
and
mov
dec
xchg
pusha
adc
jle
outs
lds
popa
dec
mov
aam
mov
arpl
out
xor
loop
ficom
out
mov
enter
jae
mov
jmp
nop
mov
out
adc
fnstsw
sub
cmp
outs
jne
adc
ss
xchg
imul
dec
adc
sbb
lods
lea
mov
inc
sbb
push
adc
mov
push
adc
push
mov
lods
test
mov
movs
jl
and
in
adc
inc
fisubr
jg
arpl
lea
not
pop
gs
movs
jmp
mov
loopne
dec
and
(bad)
(bad)
jge
and
sbb
xchg
int3
fstp
call
aaa
push
mov
mov
jbe
(bad)
pop
pop
adc
ret
xchg
sbb
add
push
push
dec
in
imul
movs
inc
xchg
dec
add
out
mov
add
popf
inc
xor
xor
stc
pusha
xchg
push
dec
push
test
test
pop
scas
das
repnz
daa
cmp
int
or
jecxz
ror
push
sub
add
inc
fist
add
push
inc
frstor
std
pop
push
(bad)
pop
das
adc
mov
pop
enter
popa
pop
fs
iret
dec
mov
pop
outs
and
(bad)
sahf
pop
dec
mov
test
mov
loopne
adc
out
push
jbe
inc
dec
sub
test
js
add
cmps
sub
dec
bound
test
inc
hlt
les
fcomp
(bad)
mov
xchg
mov
add
inc
pop
xor
enter
(bad)
(bad)
popa
xchg
add
push
(bad)
jo
or
sbb
enter
mov
cld
jnp
xchg
jmp
sbb
(bad)
mov
mov
xor
stc
push
inc
xor
adc
or
nop
nop
or
push
and
rol
adc
jle
out
xchg
daa
adc
ficom
xchg
clc
mov
add
fcomp
or
dec
sub
in
mov
daa
imul
jg
cmp
out
mov
mov
mov
and
cmp
loopne
pusha
mov
lock
jmp
hlt
ins
fistp
(bad)
push
mov
ror
pusha
stos
xchg
out
scas
ficomp
dec
test
mov
outs
sub
and
ins
mov
xchg
test
repnz
mov
repz
repz
leave
mov
mov
or
aaa
imul
jg
stc
or
cwde
mov
ins
sbb
mov
cli
add
loopne
cmp
inc
dec
sar
mov
jb
mov
lods
pop
pop
xor
sub
push
sub
jae
mov
push
std
imul
aas
sbb
int3
xor
outs
sub
test
xchg
push
adc
fisttp
int3
div
out
dec
imul
and
dec
xchg
icebp
pop
pusha
stos
loopne
jmp
mov
fsubr
lds
loop
or
jg
inc
ficomp
mov
popf
rol
add
sub
cmp
dec
xor
inc
sub
mov
jne
jbe
cmc
mov
shr
sub
ja
lea
jp
mov
add
sbb
fld
jb
xor
int3
lea
daa
repz
and
pop
mov
mov
mov
and
movs
mov
cmp
xor
fcomp
mov
(bad)
aam
js
inc
retf
out
std
pop
jmp
(bad)
ss
sub
gs
and
cmps
mov
add
retf
fld
cmp
adc
mov
cmp
xchg
sbb
pop
adc
popf
(bad)
daa
or
enter
cmp
mov
aad
mov
add
sbb
sbb
(bad)
leave
mov
repnz
(bad)
pop
sub
div
addr16
pop
pop
fwait
loope
hlt
mov
std
jbe
enter
inc
dec
dec
sbb
imul
data16
push
popa
ss
enter
dec
push
inc
xchg
(bad)
push
xchg
mov
add
pop
cmp
jge
movs
pop
mov
sti
jmp
js
pop
outs
sub
push
cmp
int3
test
ret
pop
mov
aad
or
aam
cdq
in
or
pop
mov
pushf
(bad)
test
add
into
gs
out
xchg
call
fucomip
dec
mov
cwde
sub
xchg
lds
inc
pop
or
aam
loopne
addr16
jbe
popa
xchg
and
dec
cmps
xchg
ss
retf
nop
xchg
stos
inc
adc
push
mov
out
xor
mov
leave
mov
mov
push
dec
(bad)
or
xchg
out
into
and
and
sti
jae
dec
scas
(bad)
pushf
in
push
ins
sbb
dec
pop
bndcn
cmc
mov
jg
mov
outs
jecxz
mov
or
or
xchg
out
dec
ds
pop
dec
xchg
xchg
in
cmps
mov
cmp
(bad)
fistp
loope
jmp
ret
test
scas
adc
pop
mov
cwde
movntq
out
loop
sar
jne
adc
icebp
xchg
push
push
xor
lahf
sbb
jne
pop
dec
or
imul
cmps
aam
or
mov
adc
mov
sub
test
clc
je
fnstcw
xor
in
sbb
dec
(bad)
repz
pop
add
(bad)
mov
pop
in
or
(bad)
ds
push
mov
das
stos
cmc
xor
and
lea
je
adc
inc
cmp
ja
fwait
inc
xor
sbb
xchg
mov
lock
mov
jmp
mov
js
jecxz
mov
test
icebp
ss
sbb
loope
arpl
shl
cmp
pop
sbb
lea
or
ds
xor
dec
lods
mov
push
bound
aaa
and
fcomip
pop
out
daa
inc
push
ins
add
xor
mov
sub
sbb
add
fs
adc
mov
cmc
jl
nop
int
std
push
mov
loop
push
enter
sbb
in
sbb
push
or
or
loopne
bswap
popa
jmp
mov
pop
(bad)
mov
sub
or
imul
fs
and
int
jnp
inc
mov
bound
fcmovb
je
inc
sub
jmp
or
pop
push
mov
mov
pop
out
push
(bad)
je
push
cmps
mov
pop
xor
cmps
fisttp
inc
xor
push
sti
repz
cmp
js
test
xchg
mov
bound
push
dec
cmps
in
mov
fnstcw
arpl
stos
mov
popa
fcmovne
std
jbe
dec
out
stc
int3
mov
stos
jmp
test
mov
mov
mov
out
xchg
dec
jg
movs
addr16
stos
jecxz
cld
cmp
dec
or
rol
mov
jg
mov
push
xchg
or
lahf
shl
ror
push
call
movs
inc
out
xchg
sbb
addr16
cmp
jmp
sub
jmp
stc
push
call
jmp
in
sub
cmc
adc
cmps
sar
scas
sub
mov
mov
popa
jl
fcmovnb
aam
xor
int3
rol
pop
adc
add
test
adc
push
xchg
sbb
pop
dec
in
call
mov
sti
jbe
mov
dec
(bad)
ror
and
add
(bad)
int3
imul
mov
dec
adc
push
and
sub
or
xlat
dec
cdq
mov
mov
cmps
mov
jne
jg
test
cmp
scas
jbe
mov
stc
mov
or
cmp
push
rcl
push
arpl
xchg
nop
cli
loope
pop
cmps
sar
sti
add
sbb
dec
mov
pushf
stc
dec
mov
fwait
pop
mov
cld
pop
push
dec
div
cmp
out
lds
jmp
shr
mov
add
pop
cmp
icebp
adc
aas
mov
js
ror
cld
jp
pushf
jnp
xchg
mov
mov
or
xor
ja
pop
jnp
test
fisub
inc
fs
dec
sub
xchg
cmps
aaa
jl
jp
sub
idiv
(bad)
outs
shr
jl
mov
in
dec
pop
sub
inc
sbb
cmp
and
mov
cmp
sub
cmps
in
test
movs
dec
lods
adc
into
push
in
ins
repz
stc
nop
into
test
repz
pop
in
(bad)
push
sbb
cmc
mov
pop
jp
idiv
bound
sub
sahf
mov
scas
inc
mov
sub
adc
push
or
sbb
sub
or
outs
(bad)
and
pop
fstp
mov
rcr
xchg
lods
inc
xchg
add
arpl
mov
pop
xor
jp
jmp
imul
dec
int
fs
inc
pusha
enter
out
bound
and
cmp
dec
mov
ds
push
mov
stos
or
pop
daa
mov
sbb
sbb
mulps
pusha
ins
xchg
clc
cdq
mov
rcl
sbb
aam
lds
adc
ins
sbb
pop
add
lea
push
clc
aas
dec
in
inc
xchg
gs
mov
(bad)
aas
repz
in
pop
call
xchg
pop
sar
mov
sub
pop
iret
mov
aas
aam
sbb
(bad)
lea
inc
mov
xor
retf
scas
push
push
sub
dec
cmp
scas
call
adc
je
jecxz
pop
pushf
lods
fnstcw
xchg
mov
sub
stc
icebp
scas
lods
cmp
mov
jmp
jne
jp
inc
add
sar
or
cmps
mov
mov
push
and
cmps
and
fs
adc
test
cli
sub
aas
pop
push
(bad)
lods
mov
into
cli
inc
loopne
push
(bad)
jle
ret
push
mov
in
js
pop
jae
mov
ret
mov
push
xchg
scas
ins
add
jge
aas
add
jne
jne
cmps
pushf
xchg
dec
push
or
push
add
xor
cwde
and
pop
retf
sub
push
mov
leave
and
sbb
cmp
sbb
xor
mov
adc
xlat
pop
and
mov
add
xor
pop
or
jl
xor
and
pop
pop
mov
or
ins
aas
pop
pop
pop
or
or
lods
js
mov
adc
push
and
mov
sbb
sub
into
pusha
cli
jg
sbb
imul
fsubr
(bad)
in
gs
add
mov
hlt
(bad)
shl
ins
ret
xchg
jnp
adc
bound
push
inc
sub
adc
bound
push
cmp
cmps
sbb
frstor
dec
ja
pushf
fbstp
lds
mov
cmc
mov
ficom
mov
(bad)
sub
xchg
bnd
rol
shr
dec
pop
sub
or
pop
pop
fist
xchg
fidiv
mul
cmp
mov
pop
xor
lods
or
fdivr
aam
ds
fistp
sbb
inc
scas
add
div
mov
cmp
mov
jae
push
sbb
imul
pop
mov
loop
mov
rcl
cdq
lods
std
dec
jno
fidiv
sub
adc
stos
repnz
xlat
xor
mov
ror
lds
out
fisub
div
(bad)
push
cmp
lahf
cmp
sub
sbb
push
dec
dec
or
jbe
bound
cmps
aaa
and
arpl
mov
push
xor
xchg
int3
or
fwait
les
jbe
jl
push
sbb
loop
pop
mov
mov
and
xchg
adc
inc
cmp
iret
out
dec
pushf
sti
pop
fwait
mov
daa
adc
xchg
jp
pop
mov
in
repz
mov
nop
shl
sub
cmp
movs
push
mov
xchg
mov
sbb
push
and
and
adc
pusha
(bad)
cmp
test
sub
arpl
mov
jne
inc
cld
fnstcw
adc
call
push
test
fdiv
cmp
sbb
push
les
lods
outs
dec
test
movs
push
cmp
push
and
sbb
arpl
pop
stos
lea
xor
lock
fist
or
mov
mov
pop
pop
jge
repnz
je
or
and
sti
pop
int3
jl
lds
ror
inc
outs
(bad)
and
cwde
jnp
cmp
inc
dec
jle
sbb
or
fwait
js
les
adc
push
pop
das
sub
inc
sahf
push
xor
(bad)
(bad)
popa
push
jmp
and
inc
mov
clc
xchg
fcomp
(bad)
pop
frstor
xor
inc
dec
addr16
hlt
cmp
mov
ret
push
xor
loopne
enter
stc
out
ds
ss
cmps
(bad)
rol
and
add
add
test
adc
pop
pusha
mov
sub
pop
cmp
mov
adc
or
fwait
jl
int3
cmp
push
mov
mov
xchg
not
popa
jecxz
int
hlt
fsub
jg
aam
lods
jae
(bad)
call
loop
sar
je
(bad)
fnstsw
cmc
push
push
jmp
or
fs
add
lsl
dec
aaa
mov
mov
in
cmp
cmp
movs
(bad)
dec
icebp
adc
and
dec
cli
fstp
push
pusha
test
mov
mov
cs
add
pop
jae
pop
mov
xchg
dec
call
add
pop
jns
nop
ds
pushf
test
aaa
lea
ret
sub
and
dec
es
and
les
adc
rol
sbb
stc
pop
ret
push
sbb
(bad)
ins
jl
mov
test
inc
push
in
mov
xor
lahf
(bad)
dec
ret
int3
pop
cld
and
fadd
jecxz
xor
mov
jne
or
pop
stos
and
pushf
mov
mov
xchg
and
retf
lahf
icebp
jecxz
pop
out
cli
stos
push
pop
jo
outs
std
sbb
dec
add
push
dec
rol
xlat
call
cld
or
pop
retf
push
inc
inc
mov
sahf
call
mov
sbb
(bad)
call
jecxz
or
imul
fsub
in
rcl
mov
dec
add
aad
and
scas
jb
dec
or
mov
(bad)
sbb
or
lea
lock
gs
call
jp
jl
jg
loop
in
cs
jo
fild
lahf
or
pop
and
sbb
and
pop
push
xchg
std
push
mov
sbb
dec
mov
push
sti
in
out
mov
mov
daa
mov
mov
sbb
push
adc
pop
dec
xor
mov
jg
or
jno
fs
mov
fsubr
shr
aaa
pop
fist
xor
dec
dec
loope
repnz
jmp
pushf
cmps
dec
sbb
mov
add
add
push
lock
std
aad
or
mov
pusha
popf
pop
xchg
nop
mov
(bad)
stc
mov
fcom
cmp
fsub
or
ds
fild
fbld
jno
cmp
ins
mov
jg
(bad)
stos
int
xchg
js
mov
rcr
cmp
push
xlat
cmp
cs
xchg
jno
lods
repz
ss
fs
ret
add
push
(bad)
push
push
sbb
fidivr
jecxz
jnp
sub
rcl
std
pop
loopne
pop
sub
adc
push
in
lods
int
mov
int
jns
js
xchg
ja
adc
lods
cdq
shl
les
js
repz
addr16
or
(bad)
enter
ret
mov
sbb
ins
and
xchg
push
shl
retf
(bad)
mov
mov
xor
jp
cmp
ja
pop
fsub
sub
cmp
lea
and
mov
sbb
xor
mov
dec
xchg
cmps
dec
fs
jno
lods
loop
inc
adc
enter
retf
or
pop
arpl
cmp
ins
sahf
sbb
push
adc
outs
adc
data16
xchg
cs
call
push
inc
or
jo
cs
and
fiadd
sbb
add
mov
outs
mov
enter
or
jbe
xchg
neg
shl
stos
xchg
adc
loope
out
xor
jmp
jb
inc
imul
add
cmp
add
int
xlat
or
retf
push
test
mov
pushf
sbb
sbb
das
test
jmp
hlt
jns
and
fld
shr
xor
pop
repz
popa
inc
add
cli
xor
mov
js
dec
pop
mov
bnd
push
mov
out
adc
retf
mov
xchg
adc
add
daa
in
jle
in
scas
out
ss
ret
pop
adc
xor
fadd
add
xchg
dec
mov
or
pop
xchg
mov
push
xor
movs
fidivr
mov
mov
cs
sbb
mov
sti
or
ds
rcr
call
pop
scas
add
pop
ins
dec
popa
ins
lds
mov
test
jne
scas
or
sbb
out
sub
lea
int
jo
mov
pop
nop
or
cmp
sub
cdq
scas
mov
sub
test
xchg
data16
dec
in
bound
ins
sub
int
jle
pushf
mov
jecxz
stc
xlat
cwde
sub
cld
imul
cmp
sar
int
test
js
hlt
cli
mov
jp
int
sub
jbe
push
jmp
cmp
sub
aas
outs
fld
push
or
lahf
loope
loopne
loop
cmp
pusha
xchg
data16
push
imul
cmp
stos
dec
mov
add
jmp
mov
cmp
retf
scas
in
push
mov
adc
adc
pop
stos
jmp
and
in
mov
jnp
and
je
pop
and
std
retf
lods
push
xor
cmp
jg
mov
mov
inc
push
mov
adc
and
and
sub
cmps
sub
ret
xor
lahf
xor
mov
(bad)
in
sub
xchg
xor
es
xor
int
mov
xchg
fdivr
(bad)
jle
test
cmp
pop
pop
leave
pop
jae
sbb
stos
out
dec
or
cmp
push
in
out
shl
cmp
jp
fs
mov
mov
xor
cs
imul
mov
repz
dec
aas
mov
mov
cmps
aaa
fcom
xchg
movs
bound
(bad)
mov
jp
cmp
jg
addr16
jns
les
sbb
ret
into
mov
sbb
gs
repnz
imul
rcl
sbb
and
mov
push
xor
pop
aaa
daa
adc
repz
cmp
and
adc
fst
jge
outs
add
fldenv
bound
or
cmc
sub
mov
push
push
jnp
mov
mov
inc
or
sbb
mov
cmp
repz
add
or
push
sub
push
dec
sti
stos
lods
or
dec
aaa
inc
xor
out
dec
arpl
mov
call
or
popa
shl
(bad)
gs
mov
stos
daa
or
cmp
pop
and
fyl2xp1
mov
cwde
mov
push
mov
jns
mov
push
mov
mov
and
call
fdivr
xchg
enter
arpl
mov
jmp
nop
sub
test
mov
in
fisub
mov
pusha
bound
adc
nop
inc
jmp
in
or
pushf
lahf
push
and
pop
xchg
mov
mov
pop
imul
mov
ins
pop
in
push
ret
push
ins
jg
fwait
sub
stc
fs
pop
cmp
(bad)
mov
dec
data16
mov
xchg
jmp
mov
mov
add
inc
pop
cmp
and
mov
push
cmp
add
fadd
xor
lods
sub
ficom
sbb
mov
mov
sbb
loope
mov
popf
gs
push
fwait
pop
shl
out
mov
pusha
dec
(bad)
sbb
mov
rol
mov
cmp
mov
and
push
dec
cmp
add
push
adc
inc
pop
push
cwde
or
cmps
sbb
or
push
mov
pusha
sbb
add
adc
call
push
jle
mov
int3
and
ins
ds
int
sbb
addr16
push
scas
fwait
push
mov
mov
loopne
jmp
das
cs
dec
and
fbld
nop
cs
shl
fcomp
add
pop
xchg
xchg
and
push
ret
test
lds
and
cmp
gs
imul
inc
add
shl
cmp
dec
xchg
rol
pop
test
sbb
sbb
cmp
cwde
xchg
and
mov
push
jb
dec
jae
push
aam
cmp
les
out
pop
and
fld
or
push
(bad)
adc
mov
cmps
dec
or
mov
popf
mov
jmp
mov
leave
xchg
retf
cmp
mov
mov
scas
mov
and
push
adc
dec
pop
inc
jle
out
add
mov
fmul
pop
ds
add
pop
push
mov
pushf
xor
frstor
das
push
jno
xor
push
in
inc
neg
xor
sub
or
mov
fnstsw
aam
sbb
lea
repz
fwait
dec
add
ret
ja
in
sub
popf
mov
and
cmps
pop
dec
pop
inc
jmp
ins
xchg
repnz
call
inc
rol
mov
jno
mov
repz
push
cmp
daa
push
int3
mov
jnp
outs
cmps
jl
mov
fild
retf
fimul
(bad)
loope
dec
test
movs
popa
retf
sub
cmps
shr
(bad)
cdq
cmp
fwait
push
pop
push
pop
sub
or
mov
or
cdq
xor
xor
(bad)
push
les
adc
pop
mov
inc
call
fimul
jo
and
mov
pop
push
push
mov
mov
ror
mov
sar
xchg
xor
pop
mov
cdq
jns
or
mov
push
fwait
xchg
mov
add
bound
push
das
into
in
call
cmp
add
xchg
xor
jle
sub
cmps
push
(bad)
adc
cdq
retf
mov
int
xlat
mov
ret
or
(bad)
daa
adc
and
call
sbb
inc
cs
cmp
mov
stc
imul
mov
std
pop
xchg
loope
push
mov
xor
and
push
add
and
call
fnstenv
inc
inc
ret
xlat
jl
shr
push
pop
aas
push
jecxz
fcom
jbe
mov
test
mov
inc
div
inc
test
pop
pop
dec
out
(bad)
jmp
mov
std
call
pop
mov
dec
repz
adc
loop
in
popf
cdq
cmc
sbb
push
and
jmp
(bad)
push
xchg
scas
xor
rcr
mov
imul
dec
jns
push
addr16
push
ret
sbb
push
jno
out
rol
arpl
mov
inc
mov
loope
xchg
dec
push
shl
sub
or
ret
xchg
xor
adc
or
ins
and
or
dec
(bad)
(bad)
adc
stos
cmps
xchg
outs
mov
lea
jmp
nop
push
fsubr
cld
push
mov
xlat
add
push
adc
out
dec
xor
out
sbb
repnz
push
xchg
popa
pop
and
sbb
add
pushf
fimul
cmc
pop
xor
add
jo
cli
cwde
out
mov
(bad)
adc
jnp
xchg
pop
cmc
(bad)
mov
addr16
aad
scas
frstor
aas
jns
cmps
and
sbb
cmp
pop
pop
scas
sahf
xor
xchg
shr
stos
aas
std
push
cdq
jno
mov
push
es
jno
cmp
mov
scas
xlat
xchg
xor
aaa
jp
scas
daa
sbb
add
rcl
clc
add
add
add
add
add
add
nop
into
sub
sahf
cmp
jecxz
xchg
rcr
pop
aam
or
popf
sub
jp
jge
cwde
lods
adc
push
xchg
rcr
adc
adc
xor
xchg
pop
pop
xchg
push
xchg
sar
mov
xchg
xor
pop
jne
mov
sbb
(bad)
in
sub
mov
lods
jl
aaa
jne
or
sub
frstor
(bad)
mov
movs
inc
outs
lahf
ss
jno
dec
addr16
jbe
mov
fdivrp
and
push
mov
pop
test
xlat
stos
test
add
jmp
xchg
sbb
outs
sbb
scas
scas
mov
repz
sbb
xchg
pushf
pushf
pop
jg
adc
imul
shl
xchg
dec
sub
call
std
inc
cmp
ins
push
jo
dec
movs
daa
and
pop
lea
or
out
test
frstor
sbb
mov
mov
fnstsw
aam
sub
cld
loope
scas
sbb
push
push
enter
movs
je
std
outs
pop
(bad)
pop
or
xor
pop
push
test
mov
add
jg
sbb
ss
mov
mov
mov
xor
movs
and
outs
sbb
and
out
fwait
rcr
adc
rcr
mov
bound
popa
add
mov
jmp
mov
jmp
inc
data16
cli
inc
test
fs
adc
cwde
cmp
pop
cmps
pop
popf
fincstp
or
(bad)
movs
adc
push
popf
xchg
pop
pusha
xor
aas
enter
std
das
push
dec
mov
in
mov
fisttp
dec
mov
idiv
dec
bound
ins
fcom
clc
pop
mov
cmp
aas
adc
pusha
cmp
jnp
pop
cmp
shl
lea
mov
or
or
jae
xchg
movs
jae
out
jle
inc
mov
ret
retf
sub
sub
xchg
add
jmp
mov
dec
dec
lds
retf
pop
adc
mov
stos
sbb
aam
dec
outs
adc
jns
add
jecxz
inc
cmp
pop
mov
test
cli
mov
cmc
int
test
movs
ret
pop
lods
adc
or
(bad)
loopne
pop
ret
sti
jl
cmc
in
call
ja
adc
shr
mov
and
cmp
dec
pop
or
xor
(bad)
popa
imul
loop
jns
jo
inc
ss
cmp
push
adc
inc
cmps
lods
out
mov
mov
sar
inc
or
dec
aaa
popf
loope
adc
push
aas
mov
mov
ins
push
inc
xor
and
and
dec
xchg
jecxz
mov
out
(bad)
out
pop
cmp
sbb
sbb
(bad)
or
add
idiv
pop
pop
test
fisubr
repz
push
les
inc
or
ret
leave
and
cmp
loope
mov
out
bound
(bad)
aam
sub
ins
shl
jb
fisttp
mov
push
lock
dec
jmp
icebp
cmc
int3
cwde
leave
inc
lahf
xor
adc
div
cmp
sub
in
(bad)
cld
jmp
pop
sbb
(bad)
adc
xchg
mov
idiv
mov
iret
movs
dec
pop
pop
scas
mov
sub
movs
loop
jmp
pop
jae
pop
xchg
fs
ja
cli
xor
sub
or
push
add
adc
push
mov
ins
fld
jbe
lds
mov
lods
fwait
pusha
dec
inc
xchg
retf
jmp
dec
sub
push
xor
mov
aam
jmp
dec
(bad)
scas
dec
push
pop
push
mov
call
push
adc
icebp
fstp
sub
fs
test
fcmovnbe
push
enter
inc
push
dec
imul
push
repnz
jmp
mov
in
add
es
pop
sbb
push
inc
cmps
inc
cmp
dec
sub
inc
sar
dec
fiadd
cmp
jb
xchg
es
inc
repz
into
test
mov
cmp
or
or
shr
inc
retf
or
bound
shr
lods
(bad)
mov
sbb
das
les
leave
dec
xchg
pop
or
shl
push
add
and
sub
sbb
and
or
sti
jl
mov
jl
in
das
mov
dec
jle
mov
stos
ins
arpl
(bad)
retf
and
adc
mov
pop
aam
adc
mov
xchg
sub
cmps
mov
mov
out
scas
ret
or
dec
or
xor
ja
adc
fs
xor
pop
and
mov
lds
(bad)
jecxz
sbb
cmp
pop
daa
pop
push
dec
aaa
cmp
clc
lds
adc
(bad)
mov
jo
neg
aaa
(bad)
retf
call
pop
jmp
sbb
call
lock
in
jecxz
dec
jne
or
loopne
pop
jnp
(bad)
call
in
jnp
jmp
mov
mov
jo
pop
inc
mov
cmc
movs
push
es
in
mov
outs
xor
dec
mov
xor
idiv
sub
sbb
add
sar
movs
mov
sub
aas
cmp
arpl
cmp
in
push
jne
add
scas
fsub
inc
daa
mov
mov
or
shr
es
pop
jbe
cmc
dec
sub
shl
push
fimul
bound
not
xchg
mov
pop
sti
mov
adc
inc
sub
mov
xchg
fs
imul
xchg
into
sub
mov
sbb
jmp
lods
and
mov
mov
ret
test
std
aas
lea
and
mov
pushf
movs
movs
or
int
(bad)
jmp
and
addr16
in
jno
aas
dec
inc
and
(bad)
mov
out
cmp
out
and
mov
jmp
cmp
repnz
mov
pop
push
sbb
and
push
ins
lock
repz
scas
seta
jmp
xor
jg
mov
sbb
cld
push
out
inc
cld
pop
fwait
mov
inc
fsubr
aaa
in
jno
xor
js
ins
pop
and
cmp
adc
sbb
ins
jmp
aam
add
push
(bad)
sub
jo
jge
mov
bound
xor
xchg
data16
sub
push
lods
and
mov
push
xor
pop
iret
sub
mov
push
shr
or
sub
dec
inc
retf
and
das
adc
xchg
cmp
es
addr16
shr
sbb
add
mov
push
cld
and
xor
adc
fwait
js
or
call
push
mov
inc
cli
das
or
cmc
push
dec
or
xchg
scas
out
sbb
push
dec
pop
jge
mov
les
jno
mov
sbb
mov
mov
adc
into
xchg
stos
mov
rol
xlat
pop
mov
movs
outs
cmp
pop
dec
sbb
push
and
lods
pop
jle
sbb
lahf
add
or
push
pop
aaa
imul
sub
mov
out
ds
out
pop
pop
bound
jecxz
add
cmp
add
mov
pop
fsubr
stos
(bad)
enter
repnz
mov
add
jo
xlat
aas
inc
mov
mov
cmp
fst
mov
fld
ret
stos
mov
or
scas
lahf
pop
int3
dec
cmps
addr16
push
add
ret
data16
or
mov
mov
cld
loope
test
and
jne
pop
jmp
aam
iret
sahf
cmp
pop
loope
dec
std
popf
(bad)
mov
add
lods
and
jae
dec
in
fs
js
push
xor
std
sbb
xor
adc
jp
xchg
or
pop
shl
jge
xchg
sbb
push
idiv
jp
into
daa
xor
cmp
xor
jmp
ds
fwait
adc
pop
jno
(bad)
mov
add
add
fild
jg
mov
stos
or
std
(bad)
fld
and
repz
in
mov
jg
mov
sub
movs
mov
jle
in
xor
jb
repz
pop
popa
adc
fisubr
fist
xor
aam
mov
add
add
enter
aaa
jmp
out
fdivp
mov
sahf
xchg
mov
out
leave
fnsave
pop
scas
mov
fwait
jb
(bad)
and
and
and
cmp
inc
add
repnz
and
sub
daa
push
sbb
arpl
js
repz
or
outs
push
mov
enter
adc
adc
adc
rcl
bound
imul
test
pusha
sbb
cs
fisttp
ret
adc
add
lea
ins
sub
push
aad
cmps
cld
shr
in
hlt
jg
mov
dec
mov
ss
pusha
jp
fsub
lahf
and
mov
rcr
mov
(bad)
xchg
add
call
push
outs
pop
mov
adc
jg
push
pop
mov
mov
sub
adc
mov
xor
(bad)
clc
mov
xor
xor
xchg
inc
mov
mul
rcl
loopne
out
mov
fwait
mov
cmp
jg
imul
jns
add
sub
pop
leave
ins
dec
pop
arpl
ja
push
fstp
mov
daa
fs
xor
mov
daa
shl
out
fwait
js
loope
test
push
xchg
jnp
shr
xchg
dec
inc
add
inc
sub
mov
sbb
pushf
mov
pop
sub
add
rcr
lock
jecxz
leave
mov
inc
and
and
idiv
cmovg
test
sub
cli
clc
loopne
ds
in
daa
add
in
inc
pop
sbb
lds
sub
movs
jns
cmp
adc
fimul
test
lods
cmp
add
retf
fistp
scas
imul
jnp
xchg
jns
or
popa
push
sbb
in
neg
movs
das
mov
pop
cmp
out
pop
popf
retf
loopne
aas
lods
fs
pop
inc
mov
pop
push
mov
adc
push
mov
jl
mov
arpl
push
sti
jp
mov
mov
push
xchg
js
out
sbb
push
push
xor
sahf
and
pop
add
imul
xor
xchg
cs
inc
mov
call
dec
enter
add
sbb
inc
(bad)
mov
mov
push
loop
cs
cli
inc
popa
fucomip
pop
movs
sbb
stos
mov
xor
les
lea
jae
jbe
and
push
je
(bad)
into
adc
xor
jecxz
mov
cmps
pop
xor
mov
hlt
inc
push
enter
popa
cs
aas
jne
into
or
pop
dec
adc
and
retf
loop
xchg
cmp
pop
xor
mov
inc
es
bound
aam
movs
dec
scas
pop
jb
repz
or
jmp
push
mov
loop
mov
(bad)
cmp
fldenv
aas
aad
jb
dec
mov
retf
gs
xor
ret
ret
jg
pusha
lods
push
push
jmp
mov
add
xchg
mov
pop
bound
mov
add
sub
pop
xlat
mov
out
and
mov
mov
(bad)
mov
jle
fwait
cmp
mov
xor
push
mov
adc
push
jno
mov
ins
loope
adc
int
(bad)
outs
cmp
xchg
add
xor
cmp
lods
pusha
push
xchg
ins
xor
(bad)
xlat
sub
and
add
loopne
stos
iret
sahf
in
mov
pop
mul
mov
mov
adc
jmp
cmp
movs
fs
clc
push
cmc
mov
xchg
(bad)
mov
fsub
cs
mov
rcl
adc
jp
mov
add
nop
and
lock
aad
fs
jae
mov
adc
aad
scas
out
es
push
xor
cwde
inc
pop
pushf
or
push
and
xlat
mov
and
adc
sub
mov
lods
cmps
xchg
je
popf
mov
iret
inc
push
ror
fisttp
mov
pop
push
into
bswap
stos
cmp
out
ins
mov
pop
dec
sbb
enter
sbb
sbb
scas
je
mov
outs
sub
push
fistp
xor
lahf
gs
rcr
lahf
xchg
dec
scas
dec
mov
add
mov
and
les
aaa
out
jge
enter
icebp
sti
iret
int
xchg
mov
scas
xchg
adc
out
in
ret
mov
sbb
(bad)
ja
jae
cmp
fdivr
cmp
push
fadd
lock
cld
mov
movs
stc
cmp
cmp
mov
js
cmp
add
adc
(bad)
repz
movs
cmps
pusha
ds
(bad)
fcomi
cwde
test
xor
test
xchg
and
jmp
cwde
cmp
ror
pop
push
xlat
mov
mov
ret
pop
jo
or
aam
mov
add
adc
mov
push
xchg
or
mov
pop
std
dec
mov
jb
out
outs
in
push
jmp
shl
lds
xchg
retf
and
inc
mov
jl
call
push
xchg
mov
in
or
sbb
loop
mov
adc
aaa
(bad)
fs
and
and
jp
das
bound
fsub
mov
xchg
and
dec
arpl
or
xor
pop
adc
icebp
imul
in
xchg
pop
icebp
pushf
dec
(bad)
cmp
push
add
push
fimul
out
ret
pushf
pop
(bad)
push
mov
inc
cmps
sub
mov
retf
inc
out
xor
dec
jmp
mov
(bad)
ss
aaa
arpl
cmp
push
fs
mov
xor
(bad)
cmps
xor
lea
iret
repnz
mov
jp
je
pop
loopne
and
lods
adc
inc
sub
pop
cmc
cmp
imul
mov
add
std
out
sub
mov
sahf
mov
adc
adc
je
mov
pop
stc
in
data16
push
out
mov
ror
push
jg
mov
adc
cmp
sub
sub
test
adc
pop
mov
adc
test
xor
dec
or
retf
pop
inc
out
mov
into
lock
cdq
dec
sbb
push
jl
mov
xchg
mov
add
aam
and
sahf
and
in
or
imul
cli
cli
mov
jp
std
cmp
or
add
jne
mov
xchg
xchg
and
lods
or
jmp
out
je
shl
push
bound
popf
xlat
dec
je
rcr
jmp
sub
scas
adc
jo
push
adc
(bad)
jmp
pushf
push
inc
cli
enter
push
inc
lods
(bad)
and
pop
test
iret
dec
ret
test
dec
pop
mov
aad
ja
call
jp
sar
cmps
xchg
push
mov
std
out
and
push
loope
(bad)
mov
lahf
sub
in
xor
add
call
stos
inc
xchg
daa
popa
sbb
aaa
push
xchg
mov
addr16
sete
cmp
fwait
out
mov
ins
jb
popf
mov
sbb
retf
xchg
rcl
jbe
cmc
fistp
cld
jne
in
jno
imul
pop
add
out
pop
dec
mov
sbb
jne
popf
sbb
xchg
jecxz
(bad)
test
mov
mov
jl
in
jge
adc
int
jae
pop
scas
test
jo
into
and
les
fwait
loope
push
scas
or
fbld
mov
dec
dec
repnz
dec
into
jl
stos
dec
out
cmc
push
lods
cmp
cmps
or
cmp
jp
cli
rcr
sbb
stc
fild
rcl
mov
pop
js
rol
aam
push
clc
adc
pop
es
dec
push
xor
fimul
mov
and
xor
in
test
ins
out
push
jecxz
jl
cmp
scas
test
(bad)
jns
loop
idiv
outs
xchg
adc
pop
mov
sub
and
mov
mov
sahf
nop
stos
pop
es
adc
xor
shl
sbb
sub
call
xor
cmp
nop
sbb
mov
cs
sub
loope
test
xor
and
jo
mov
std
mov
jae
in
sbb
cmp
jp
adc
fwait
sti
push
adc
jno
adc
(bad)
icebp
(bad)
jae
cmp
jl
(bad)
jae
push
mov
ins
neg
aas
retf
sbb
clc
fmul
fcom
mov
out
xchg
idiv
dec
inc
push
outs
fiadd
xchg
pop
push
lods
repz
ss
inc
pop
push
hlt
mov
push
clc
dec
cmp
aad
(bad)
cmc
mov
add
scas
out
dec
repz
mov
xchg
vcvttss2si
pop
rcl
sub
lods
arpl
imul
add
sbb
pcmpeqd
lea
cmp
xor
mov
sahf
mov
aas
test
sbb
jmp
xchg
bound
pop
adc
in
mov
xchg
cmc
and
movs
shl
xchg
xchg
fistp
(bad)
mov
retf
loope
add
out
mov
pop
ins
and
lods
mov
cdq
gs
ret
fs
xor
fistp
punpckhwd
sar
fmulp
xchg
cmp
pop
ss
mov
loopne
pop
push
shr
inc
xor
imul
test
mov
pop
or
fucomi
je
mov
mov
js
pop
fucomi
adc
push
jmp
cmps
rcl
mov
xchg
cwde
(bad)
xlat
cmp
mov
mov
(bad)
lock
hlt
mov
inc
xor
mov
sub
in
aam
mov
iret
cmp
mov
xor
adc
daa
xor
pushfw
rcr
movs
mov
aas
lods
mov
jecxz
lock
jnp
xchg
inc
int
lahf
mov
in
and
dec
push
sub
mov
lds
and
(bad)
enter
push
call
inc
xchg
sti
fisub
inc
outs
test
call
imul
fldenv
out
daa
xchg
sar
das
call
or
test
fld
xlat
inc
daa
neg
dec
das
jae
lock
in
adc
add
add
(bad)
push
and
ret
xor
js
and
sbb
(bad)
push
cmp
(bad)
fs
push
das
mov
cmp
arpl
and
push
mov
test
das
mov
pop
pop
xchg
stc
pop
sub
inc
adc
aaa
(bad)
jns
xor
push
(bad)
or
mov
loope
in
sbb
imul
mov
js
jecxz
icebp
mov
cmc
shl
sbb
and
rcr
(bad)
(bad)
mov
sahf
jmp
push
neg
sub
sub
pop
push
gs
adc
(bad)
xlat
mov
inc
inc
(bad)
add
ins
sub
clc
out
jl
sbb
xor
xchg
pop
(bad)
dec
daa
movs
sti
outs
jae
call
push
adc
mov
pop
mov
inc
pushw
jbe
add
sbb
jbe
mov
pop
mov
add
movs
call
mov
cmp
cmps
(bad)
(bad)
xor
rol
inc
loop
or
punpckhdq
fwait
adc
jbe
xchg
shl
das
sbb
and
stc
mov
fiadd
test
(bad)
stos
jno
or
or
cld
movs
add
sbb
int
jg
jg
dec
push
lds
lock
mov
es
and
lds
ins
outs
lds
xchg
pusha
mov
and
idiv
mov
std
xlat
jae
call
inc
mov
mov
pop
push
aad
inc
std
jns
jb
loope
imul
and
cdq
(bad)
mov
lods
imul
mov
pop
je
dec
fcmovnbe
in
mov
ret
fiadd
data16
mov
xlat
shl
sahf
pop
pop
mov
inc
sub
and
(bad)
mov
retf
inc
outs
rcl
bound
jmp
mov
ds
or
cmc
fwait
mov
iret
xchg
mov
ds
mov
test
push
or
pop
bound
or
xchg
jno
call
xor
(bad)
in
cmp
inc
push
or
fwait
and
cmp
lea
xchg
dec
jl
inc
adc
add
in
cdq
xchg
push
cli
mov
sub
bound
mov
cmc
sub
push
push
mov
jo
jae
jnp
stos
test
cwde
mov
ins
outs
pop
xchg
outs
mov
stos
jmp
inc
gs
dec
out
push
inc
hlt
dec
adc
pop
fwait
repnz
inc
xor
jg
cmc
test
nop
xor
push
(bad)
pop
mov
cmp
inc
pop
jp
inc
xchg
enter
(bad)
cmps
jne
cmp
lahf
scas
xchg
adc
fwait
test
mov
loope
dec
mov
jmp
ret
test
jg
jb
fstp
add
jmp
call
out
push
push
cmp
rol
ror
mov
add
int
sti
fmul
das
push
ins
imul
and
xor
fs
push
lea
movs
jmp
scas
mov
out
mov
dec
dec
test
pushf
popf
stc
nop
sub
ss
ss
cmp
icebp
jmp
xor
adc
leave
lea
sub
sub
cmp
jae
dec
mov
daa
mov
push
sub
sti
repz
leave
loop
pop
jo
pop
mov
call
xchg
xor
lds
out
(bad)
and
sar
cmc
retf
jl
and
sti
mov
lahf
aam
add
ins
sahf
cmps
push
ror
dec
clc
in
cs
xor
or
hlt
sbb
jb
push
dec
xchg
inc
pop
js
jmp
adc
mov
inc
addr16
cmp
xor
neg
repz
nop
xor
push
je
ror
ror
stos
dec
mov
dec
(bad)
fwait
or
hlt
jmp
or
pusha
stos
push
call
lods
loop
xchg
pop
jle
push
pop
pop
test
sub
mov
jbe
jae
add
xor
mov
mov
sbb
imul
pop
cmp
mov
ins
sub
push
mov
xchg
mov
mov
fcom
mov
cld
sbb
aas
push
cwde
out
adc
or
push
lds
inc
shl
push
mov
fistp
fst
sub
dec
sti
dec
pop
pop
in
push
sti
scas
jb
adc
add
pop
dec
jle
mov
pusha
(bad)
dec
pop
mov
mov
fcmovbe
xchg
pop
loop
pop
addr16
call
sbb
sbb
lea
mov
arpl
inc
pushw
imul
movs
bnd
aad
push
lahf
mov
pop
cmp
paddq
clc
push
cmp
fsubr
scas
call
and
mov
sbb
add
jns
popf
loop
cmps
cwde
in
dec
(bad)
std
or
shr
xchg
pandn
sub
stos
cwde
es
stc
(bad)
pop
sub
adc
out
daa
call
fs
mov
jmp
shl
ja
inc
add
(bad)
mov
xchg
or
xor
adc
cmp
inc
pop
imul
xchg
lods
adc
arpl
jns
fstp
fisttp
xchg
sahf
adc
and
jl
xchg
mov
xor
clc
fldcw
add
les
push
idiv
adc
sbb
in
sub
cmc
sbb
inc
sub
add
aad
mov
ret
or
and
shl
rol
ret
cmp
sub
imul
pushf
fstp
popf
or
xlat
cmp
ss
xchg
cmp
dec
stos
pop
outs
pop
popa
data16
jo
pop
pop
push
jecxz
lods
lds
xchg
mov
jno
shl
fld
cmps
pop
idiv
cwde
ret
push
sub
mov
xchg
adc
rol
out
popa
dec
mov
pop
popaw
mov
ins
fcmovbe
adc
jecxz
add
sub
imul
fdivr
sbb
and
sbb
mov
push
mov
and
inc
sbb
fild
rol
jb
je
scas
jbe
lods
loop
ret
in
outs
imul
push
jmp
mov
xchg
in
fld
xor
xchg
stos
cmp
imul
test
cmp
mov
cdq
jb
ret
pop
retf
aam
scas
mov
mov
(bad)
shl
test
pop
fs
mov
mov
mov
hlt
scas
fidivr
test
pop
into
retf
mov
loop
push
mov
push
sub
jo
mov
stos
or
xor
mov
dec
mov
adc
hlt
fistp
adc
jmp
aas
push
jle
fisub
mov
jl
and
jle
imul
movs
outs
mov
push
inc
jg
adc
movs
lods
dec
xor
mov
pop
jne
jnp
dec
enter
sbb
jmp
call
daa
leave
call
(bad)
xchg
add
call
fwait
daa
pushf
xchg
out
data16
mov
ins
popf
jmp
dec
stc
jno
icebp
mov
hlt
iret
jg
jle
dec
ret
(bad)
ds
shl
shl
jle
jne
pop
les
in
adc
(bad)
ss
xchg
in
std
retf
das
stos
mov
lock
mov
mov
push
xchg
movs
dec
or
addr16
iret
inc
adc
jecxz
lods
div
and
pop
sbb
loop
push
pop
inc
or
push
inc
in
ss
xor
imul
imul
xchg
push
xor
loop
adc
xor
xchg
and
cli
bound
fnstcw
sahf
mov
outs
lahf
(bad)
dec
xchg
prefetch
jae
add
loopne
jg
into
add
xchg
es
aad
push
sbb
adc
adc
retf
mov
in
gs
into
aam
jmp
loope
sbb
fsub
sub
cmp
fbstp
pop
inc
jl
fnclex
repnz
test
add
lea
mov
or
mov
push
inc
ins
fstp
fdivr
cs
scas
jbe
stos
push
in
cmp
xchg
dec
mov
adc
xlat
sub
imul
jp
sub
cmp
and
loop
jge
(bad)
cmp
outs
movs
ret
scas
and
fsubr
div
sti
mov
rol
out
adc
add
test
daa
sti
inc
nop
xor
aad
vmread
retf
mov
fstp
sahf
stos
ror
lock
repnz
and
jecxz
loope
push
jp
and
mov
fld
fnstenv
xor
add
mov
jg
jecxz
cmp
pop
mov
inc
fdivr
adc
call
call
outs
scas
pusha
mov
adc
xlat
jp
dec
rcl
(bad)
out
movs
and
dec
cld
mov
cmp
repnz
adc
pop
mov
mov
ins
or
pusha
in
jl
cmp
xor
sbb
sar
pop
and
mov
mov
xchg
mov
mov
mov
and
push
xor
pop
and
push
lea
int3
xchg
add
es
mov
retf
rcl
cmps
jns
mov
cmc
sahf
xchg
das
mov
dec
mov
adc
mov
push
fcomp
lahf
ss
in
jp
xor
sbb
push
(bad)
adc
or
hlt
leave
outs
and
push
inc
or
cmp
cmps
nop
out
popa
pop
stos
cmps
or
sub
jbe
out
add
lea
loope
mov
jp
out
inc
dec
pop
imul
pop
xchg
(bad)
xchg
test
fistp
stc
mov
std
mov
xchg
cmp
shr
gs
or
fs
push
call
int3
adc
mov
pop
jg
cmc
xor
es
js
and
cmp
xor
or
je
jle
les
or
sub
(bad)
cmp
(bad)
out
sbb
pop
push
(bad)
shl
popa
or
sbb
xchg
imul
pop
or
fld
cmp
push
push
lods
fwait
or
loop
sbb
jb
(bad)
fwait
jns
aad
js
(bad)
adc
push
shr
adc
xchg
pop
mov
sti
ficomp
ds
fistp
aas
(bad)
mul
add
stos
dec
xchg
fnsave
xlat
add
cmp
mov
xchg
pop
xor
mov
sti
enter
or
push
xchg
or
inc
push
cmp
ja
xor
rcr
add
push
fwait
cmp
shr
dec
fsubp
cld
jnp
cli
and
mov
shl
hlt
mov
inc
mov
dec
push
sbb
mov
pop
sub
mov
add
push
pop
xchg
leave
mov
xchg
xchg
mov
int
pop
pop
xor
lea
cdq
stos
hlt
mov
popf
mov
loope
mov
scas
inc
xchg
jmp
nop
test
pop
sub
stc
out
jp
add
lds
sub
pushf
cwde
rcl
ror
dec
in
test
sub
das
test
cmp
jo
fstp
adc
mov
cli
icebp
xlat
and
mov
jae
push
clc
popa
inc
iret
stc
bound
gs
js
sub
dec
push
dec
std
jnp
mov
pop
push
pop
xchg
sub
loopne
xchg
arpl
retf
mov
or
mov
mov
jno
loopne
out
dec
push
jge
pop
inc
pop
les
mov
xchg
dec
dec
ins
adc
adc
jbe
ficom
jnp
pop
outs
xor
lock
pusha
imul
jo
fwait
push
aas
add
adc
addr16
cmp
xor
or
sar
icebp
mov
ja
mov
xor
test
int3
xchg
dec
ds
pop
xchg
stc
call
fisttp
leave
ret
jp
dec
out
xor
retf
jae
push
dec
push
pop
cmps
mov
movs
(bad)
call
jge
or
sbb
cmps
and
push
pop
fwait
shr
sub
imul
sub
xor
adc
inc
mov
sbb
mov
xchg
pop
pop
fsubp
retf
sbb
bound
push
sub
pop
(bad)
inc
lahf
sbb
enter
sub
xchg
(bad)
sbb
cli
loopne
or
sbb
mov
push
xor
pusha
cmps
pop
(bad)
pop
adc
push
adc
aaa
cs
pop
test
retf
or
cld
push
or
popa
(bad)
pop
iret
mov
mov
ins
shr
ins
data16
sbb
inc
stos
repnz
(bad)
shl
cmp
in
out
inc
aas
cdq
mov
jecxz
push
cli
scas
mov
push
ins
mov
outs
push
sbb
add
inc
ss
stc
(bad)
jl
leave
in
cld
test
ds
(bad)
ret
mov
add
retf
jnp
cmp
push
fisub
push
ret
xlat
push
(bad)
fidivr
jle
push
je
pop
mov
mov
cmp
(bad)
and
call
shl
pop
in
jecxz
and
fistp
and
(bad)
imul
fs
and
mov
dec
mov
dec
(bad)
ret
fsub
in
push
dec
xchg
inc
pop
cmp
jmp
cmp
enter
sahf
rol
inc
ficom
into
mov
and
xchg
and
shr
push
data16
mov
cs
lds
pop
sub
icebp
dec
push
iret
push
push
inc
cli
mov
(bad)
test
push
in
pop
scas
(bad)
push
cwde
mov
or
clc
lock
test
xchg
mov
fdivr
dec
pop
lods
scas
in
clc
clc
and
ins
or
and
jb
aaa
sub
stos
xchg
es
mov
mov
loop
leave
mov
xchg
rcl
dec
add
scas
xchg
dec
and
sbb
adc
ins
shr
icebp
addr16
jmp
mov
movs
addr16
mov
mov
test
mov
dec
(bad)
adc
daa
aam
sub
data16
pop
scas
retf
mov
fcmovbe
cdq
mov
mov
arpl
mov
xor
popf
lock
xchg
cmc
cvtdq2ps
popf
in
add
push
jmp
in
push
cmp
ins
mov
leave
push
push
cmp
xchg
adc
je
cmp
mov
neg
add
jbe
sbb
test
xchg
cmp
mov
repnz
mov
test
pop
adc
(bad)
ins
cmps
dec
mov
retf
das
lods
(bad)
mov
ss
addr16
inc
jl
dec
mov
push
retf
stos
stos
xchg
mov
mov
movs
xor
aam
addr16
sbb
(bad)
(bad)
into
adc
test
mov
push
inc
push
sub
enter
dec
fistp
or
pusha
xchg
pop
(bad)
mov
dec
jbe
punpckhbw
jne
xchg
inc
adc
sti
jns
loope
xor
repz
cmc
sbb
fisub
xchg
sbb
cmp
mov
loope
shl
or
cmp
hlt
scas
daa
stos
xor
enter
bound
add
jmp
sbb
stc
icebp
mov
cmps
mov
jns
add
dec
outs
out
ins
jo
in
xor
sbb
jnp
cs
jnp
jmp
(bad)
(bad)
int
enter
sub
rsm
dec
inc
cmps
dec
and
and
mov
jns
xor
pop
int
mov
cmc
pop
jmp
and
cmc
int
icebp
mov
aam
sahf
pop
fidivr
daa
inc
loope
adc
pop
stos
xor
aas
imul
cs
repz
lahf
cmp
push
mov
(bad)
pop
dec
or
ins
sti
(bad)
xchg
(bad)
mov
test
sbb
mov
lock
std
sbb
mov
sub
xchg
aad
add
sub
out
inc
cmp
cmp
fwait
in
dec
mov
test
repnz
outs
fs
adc
push
mov
inc
xchg
push
jno
(bad)
out
data16
clc
sub
push
imul
push
add
cld
ja
jg
adc
xchg
shl
inc
mov
mov
icebp
lds
add
push
and
jae
mov
add
pop
jbe
rcr
movs
popa
lods
fld
xchg
sar
sub
sbb
jns
mov
inc
das
lods
(bad)
call
jae
mov
or
dec
arpl
ret
out
xor
push
mov
cmp
add
bound
xor
push
ret
arpl
mov
cmp
sub
jecxz
fcomip
pop
mov
dec
push
push
jge
cmp
nop
call
in
imul
mov
or
imul
xlat
dec
adc
ins
or
push
lea
and
pusha
dec
jo
pop
int3
xor
mov
inc
lock
sub
or
xchg
in
das
cmp
test
enter
push
and
loop
push
or
xor
adc
push
(bad)
mov
mov
popa
or
stos
jmp
xor
mov
push
push
push
cmp
clc
dec
adc
loopne
stc
push
xchg
ins
xor
in
jae
mov
div
in
nop
sar
dec
(bad)
mov
xor
sbb
push
jbe
mov
test
out
in
arpl
in
jae
lods
mov
mov
clc
sub
clc
lea
repz
push
retf
mul
sub
mov
mov
xchg
push
fcomp
dec
xchg
xchg
xlat
cmp
push
ret
scas
sub
cmps
jnp
imul
repz
cs
fdivr
outs
jmp
pop
mov
(bad)
loopne
adc
(bad)
push
inc
adc
mov
sti
push
xor
jno
pop
and
sbb
push
leave
ret
sub
jmp
or
rol
jl
mov
push
int3
stos
add
mov
sub
cmp
add
adc
inc
add
std
outs
shr
inc
lods
cmps
push
jbe
inc
cmps
in
sbb
pop
xchg
call
push
sbb
xlat
mov
in
push
push
jecxz
fisttp
ds
or
or
jecxz
sbb
(bad)
shr
or
stos
cmc
fadd
fwait
(bad)
(bad)
int3
es
(bad)
sbb
rol
mov
fbstp
and
test
movs
dec
mov
shr
push
lods
ret
add
mov
add
sahf
jmp
push
add
out
xchg
les
pop
aad
(bad)
mov
(bad)
in
or
retf
sub
aad
cmc
stos
pop
cmp
stc
jnp
inc
lock
xor
jle
mov
sub
push
aam
mov
out
(bad)
in
xor
sbb
lods
inc
mov
xchg
clc
outs
push
push
outs
mov
mov
imul
pop
jb
xor
data16
out
lea
shr
xor
xor
lods
jmp
ins
cld
inc
shl
jae
jp
adc
ja
lods
jl
je
xor
lea
pop
push
mov
js
imul
dec
mov
and
sub
lock
jmp
out
test
loopne
retf
cmp
inc
add
sub
pop
pusha
ins
and
sub
call
lds
mov
jp
and
dec
mov
loope
iret
loopne
dec
(bad)
mov
and
scas
adc
nop
mov
aaa
pushf
sub
pop
pop
jp
mov
int3
call
stos
adc
pop
xchg
out
stc
in
pop
mov
sub
push
gs
pop
mov
or
or
sar
cmp
aas
movs
pop
ret
imul
add
mov
cmp
cmp
ss
into
add
push
icebp
(bad)
icebp
xchg
jnp
outs
(bad)
lock
fisttp
call
mov
or
jecxz
or
xchg
cdq
jnp
les
sbb
fwait
stc
xor
cmp
div
outs
xor
fsubr
pop
retf
fimul
jmp
inc
and
ins
sub
ja
jbe
push
(bad)
fdivp
lds
add
aam
fcmovu
jb
ret
cmc
jb
jle
add
mov
jle
test
imul
dec
std
jbe
movs
mov
mov
cli
xchg
mov
(bad)
push
ror
pop
inc
sub
dec
and
aas
dec
cmps
jnp
jo
push
ins
(bad)
arpl
add
stc
and
adc
push
ins
cmp
jl
aaa
pop
loope
jmp
stc
inc
jo
dec
sbb
sbb
sbb
in
std
hlt
mov
jmp
push
lahf
scas
dec
fwait
pop
add
or
mov
push
sbb
shr
sub
loop
jl
jno
popf
loopne
adc
xchg
lods
sbb
xor
clc
and
cmp
je
xor
push
pop
pop
jb
pop
dec
sub
push
adc
jbe
jno
jl
mov
shl
pop
mov
mov
popf
loope
lods
fwait
push
lock
lock
ret
push
pop
cmc
sar
ret
call
or
mov
push
(bad)
inc
mov
pusha
dec
push
retf
lods
push
push
add
cwde
leave
retf
pop
outs
in
pop
add
xchg
lods
xor
xchg
das
and
mov
adc
push
js
test
cmp
xchg
push
cmp
scas
scas
add
adc
and
add
pushf
or
(bad)
je
out
ins
dec
xor
adc
xor
data16
lea
xor
adc
sub
xor
loopne
push
pop
dec
jmp
fld
fbld
nop
inc
mul
mov
out
mov
sahf
enter
xlat
mov
out
cmps
out
and
inc
icebp
inc
push
fs
pop
rol
adc
(bad)
test
aas
lods
pop
cmp
cmp
push
stc
les
dec
mov
dec
lahf
jmp
stos
loopne
shl
les
jne
push
das
and
mov
push
in
dec
add
xor
jecxz
push
rcl
loop
xchg
jb
aam
push
cwde
cmps
add
push
nop
xor
or
inc
sub
xchg
(bad)
xor
out
cmp
pop
lock
retf
or
xor
cs
jae
rcr
pushf
mov
cmp
xor
movs
jbe
jl
pmuludq
aad
jge
mov
inc
int3
pop
sub
fwait
mov
sahf
iret
jmp
jae
adc
or
sbb
jg
xchg
and
fprem
(bad)
shl
fsub
sub
inc
popa
mov
dec
mov
pop
movs
mov
shr
aad
cmp
test
xor
or
inc
jl
inc
ins
sub
int
mov
push
scas
nop
dec
test
push
pop
and
inc
dec
test
std
or
in
sub
jbe
(bad)
and
inc
pop
xor
clc
inc
mov
jne
movs
pop
icebp
inc
xor
imul
jmp
inc
sub
cli
push
dec
inc
mov
or
loopne
sub
jge
loope
shl
or
scas
xor
mov
cmp
fadd
sahf
push
ret
or
sbb
sbb
dec
je
push
push
mov
pop
xchg
jmp
add
push
jo
push
repnz
test
jle
punpcklbw
test
iret
inc
mov
xor
sbb
(bad)
pop
and
mov
pop
call
retf
push
adc
lods
jecxz
push
inc
(bad)
leave
push
js
mov
fcmovbe
test
jb
not
jp
(bad)
xchg
jae
dec
dec
xchg
pop
js
test
cmp
mov
fild
adc
mov
shl
inc
xor
inc
cmc
mov
mov
or
inc
cmps
test
add
cmp
test
popf
jo
pop
aas
add
pandn
std
aam
mov
xchg
ret
mov
lock
sar
cwde
pop
dec
xor
lods
dec
minps
push
in
jnp
add
mov
cmp
sbb
popa
cmp
sub
cwde
mul
popa
enter
and
imul
iret
aam
fs
fidivr
jae
mov
mov
mov
pop
shl
jp
xor
adc
xchg
rcl
and
or
dec
stc
mov
adc
cmp
push
rcr
mov
cmps
lea
pop
rol
push
sbb
or
sbb
xchg
js
les
pop
sub
or
mov
(bad)
rcr
leave
fst
mul
jnp
push
test
xchg
jnp
xchg
cs
loope
pop
fisub
jbe
ins
loop
lods
dec
xor
int3
les
mov
int3
inc
dec
pusha
dec
jecxz
xchg
add
or
jecxz
iret
lea
adc
jb
sbb
sub
mov
pop
mov
cmps
dec
inc
call
fidivr
mov
out
rol
push
daa
test
xor
lds
clc
pop
imul
sub
movs
jb
push
imul
jno
ins
sbb
idiv
popf
xchg
in
or
fs
xchg
cdq
(bad)
loopne
sbb
lock
pop
clc
cmp
pop
mov
jnp
in
loop
lods
js
mov
mov
sbb
popf
adc
jp
push
scas
add
fidiv
cmp
jns
pushf
and
ret
sub
push
mov
lock
mov
scas
xchg
les
and
fidivr
cmovne
(bad)
in
leave
jmp
adc
leave
or
mov
gs
imul
pop
xor
sub
jnp
xchg
aam
xor
push
mov
jo
sbb
or
jge
push
imul
mov
in
pop
mov
mov
cmp
mov
xchg
or
js
rcl
pop
test
inc
dec
scas
rcl
arpl
dec
dec
xchg
xchg
mov
sbb
cdq
call
repz
rol
or
sub
and
adc
pusha
retf
stos
cdq
inc
cmp
lods
sahf
(bad)
push
mov
shl
lds
and
dec
jmp
(bad)
pop
dec
(bad)
shl
lahf
xchg
xchg
dec
pushf
sub
dec
and
daa
push
ret
stos
pop
in
dec
(bad)
jbe
xchg
clc
pop
pop
xchg
hlt
imul
(bad)
repnz
or
pushf
(bad)
jge
push
jp
jnp
or
test
inc
repz
xchg
cmp
scas
pusha
xchg
gs
sub
mov
retf
aad
repnz
nop
mov
mov
push
mov
and
icebp
sbb
sbb
pop
xchg
mov
add
xor
cmc
adc
hlt
fist
add
xchg
lods
scas
mov
pop
and
(bad)
jae
sti
test
int
mov
dec
popf
stc
popa
ins
add
stos
mov
outs
xchg
jne
jbe
mov
sub
and
daa
push
cs
sahf
xchg
les
mov
pushf
push
lods
mov
std
cli
add
sub
loop
adc
push
jmp
into
or
jmp
and
(bad)
cld
sub
addr16
push
aam
xor
cmc
out
and
or
mov
cmp
stos
enter
cmp
and
xor
push
popf
dec
xchg
push
pop
push
mov
jns
in
gs
push
sar
imul
pop
ret
je
push
xor
cli
(bad)
ins
imul
mov
jmp
push
mov
aad
sbb
sbb
push
sbb
jae
scas
icebp
jle
xchg
xchg
adc
addr16
fmul
or
call
data16
jns
adc
adc
shr
mov
mov
xchg
retf
scas
int
rol
jno
je
cs
call
jo
fsub
cmp
inc
arpl
shl
(bad)
call
retf
ss
aas
je
sub
je
cmp
adc
sbb
lea
(bad)
mov
adc
xor
push
popa
cmp
push
(bad)
cld
dec
sbb
stos
mov
push
nop
push
aaa
call
lea
pop
jae
adc
pop
jne
in
aam
(bad)
fdivr
push
jg
sub
pop
loope
jns
sub
dec
cld
push
and
inc
adc
outs
int
lahf
shr
mov
push
call
cmp
stc
pop
push
hlt
(bad)
pop
add
cmp
push
pusha
(bad)
fistp
jp
inc
push
enter
outs
inc
dec
(bad)
dec
xor
icebp
retf
shr
cdq
sub
clc
mov
dec
xchg
cmp
jns
mov
retf
or
and
inc
mov
mov
or
jno
and
add
adc
sub
frstor
test
add
shl
dec
mov
ds
mov
mov
repnz
ror
ins
dec
add
dec
xchg
outs
or
lods
and
cmp
jnp
xor
ret
jmp
aad
shl
or
push
imul
mov
es
fst
xor
(bad)
mov
push
pusha
mov
sbb
mov
dec
shl
pop
jb
mov
xor
add
pop
cmp
or
cld
jae
dec
ds
daa
or
sahf
pop
ret
retf
and
mov
sbb
pusha
mov
sub
imul
add
movs
and
sahf
int3
cmp
es
push
nop
mov
pop
lahf
imul
mul
inc
cli
jb
xor
or
xor
or
out
movs
aaa
xchg
sub
inc
push
and
in
add
push
rcl
inc
xchg
ds
jg
and
cmp
test
mov
hlt
call
mul
out
or
fwait
mov
mov
out
ins
dec
pop
sbb
push
rcl
sbb
and
dec
ja
xor
loope
or
inc
sbb
test
cmp
(bad)
cmps
push
shl
das
call
cld
pusha
call
mov
or
or
pop
mov
loope
mov
std
or
pushf
neg
jmp
lahf
pop
push
test
aad
imul
cmp
jne
shl
enter
xchg
ret
mov
lahf
and
fwait
dec
(bad)
gs
fmul
push
pop
out
repnz
stos
add
adc
adc
bound
sbb
std
inc
pop
dec
outs
pop
gs
shr
inc
out
ds
ins
dec
leave
lock
mov
mov
ror
xor
jmp
jo
sbb
push
jp
add
stc
sbb
je
add
ffreep
dec
push
lods
mov
lods
xor
loop
mov
je
cmp
pop
ss
stos
pop
imul
je
retf
rcr
xchg
jge
popa
imul
dec
das
mov
fcomp
jae
lock
les
jo
ss
je
rcr
into
iret
sub
add
(bad)
xchg
push
retf
cmp
jbe
loop
adc
cmp
outs
aam
retf
aad
jge
mov
mov
cs
ds
(bad)
sub
and
fadd
mov
push
rcr
retf
aas
push
in
and
cmp
push
(bad)
mov
pusha
int
cmp
arpl
scas
(bad)
mov
pop
call
sbb
or
xor
cmps
xor
ret
lock
mov
sub
add
mov
addr16
push
daa
add
jo
push
xor
sbb
in
fnstenv
retf
jle
test
test
sub
stos
inc
hlt
call
inc
ins
lock
cmps
mov
inc
dec
lods
es
clc
adc
pop
retf
je
mov
leave
ja
xor
or
mov
mov
jmp
adc
ret
rol
ror
cmp
mov
into
xchg
or
not
mov
ds
dec
sbb
pop
cmp
(bad)
ficomp
call
jmp
pushf
add
(bad)
cdq
cwde
sahf
cwde
cdq
les
pop
out
popa
mov
in
dec
enter
iret
jmp
repz
add
mov
pop
inc
sub
into
xor
or
ficom
fdiv
jmp
pop
cli
mov
xor
(bad)
mov
mov
dec
mov
add
or
xor
imul
pop
sbb
xor
cmp
popf
mov
jnp
pop
add
sahf
icebp
stos
repnz
cmp
clc
sahf
mov
mov
dec
push
add
int
ror
ss
stc
loope
(bad)
jl
lahf
sahf
stos
fs
sahf
push
hlt
ds
stos
xchg
pop
call
push
and
scas
sbb
pop
lock
(bad)
lods
arpl
jmp
pop
movs
int
(bad)
cmc
sbb
sbb
cdq
std
cmp
mov
mov
ds
mul
and
movs
lods
outs
jae
test
(bad)
and
es
inc
mov
xor
dec
sub
shr
mov
ins
in
fs
jmp
retf
cmp
mov
adc
push
repnz
pop
out
mov
or
sub
sub
cmp
jns
pop
dec
jns
dec
scas
pushf
retf
icebp
xchg
mov
fidiv
xchg
in
sub
jl
or
daa
and
mov
sub
scas
xchg
pop
mov
xchg
aad
jl
xchg
icebp
cmp
mov
(bad)
add
popf
push
cwde
add
dec
aas
pop
ja
jne
pushf
xchg
jg
fsub
pop
xor
pushf
sub
outs
push
and
imul
mov
or
movs
or
or
jecxz
inc
xchg
cmc
imul
xor
inc
sub
dec
pop
and
daa
pop
in
sub
jmp
dec
pop
pop
ret
retf
xlat
push
ret
loope
push
movs
dec
clc
pop
(bad)
mov
jge
stos
dec
mov
ds
sbb
push
mov
jle
sub
pop
jo
xchg
sub
out
(bad)
das
sbb
jo
push
sbb
out
sti
pop
cmps
mov
sbb
pusha
lds
std
movs
call
dec
pushw
in
loope
xor
jno
imul
loope
popa
mov
into
cwde
in
sbb
dec
aam
inc
mov
arpl
push
fild
(bad)
push
add
jns
popf
xor
mov
pop
mov
cs
les
loop
out
ins
adc
inc
ja
call
push
jp
and
sub
dec
hlt
outs
push
(bad)
lahf
push
in
add
lea
mov
push
or
iret
rcr
sbb
push
imul
aaa
adc
dec
cli
lahf
jl
pop
lods
icebp
xor
out
into
xchg
sub
adc
repz
sti
mov
fcmovnbe
jg
ja
jp
ins
aaa
icebp
pop
dec
jmp
movs
mov
xchg
(bad)
cmp
jbe
jle
arpl
stc
adc
sete
repnz
inc
mov
jl
dec
mov
xchg
sub
xchg
int
push
mov
adc
mov
out
sbb
(bad)
pop
gs
and
fst
sub
add
ja
and
xlat
lds
stos
pop
stos
mov
and
icebp
push
ror
or
jge
dec
lock
retf
jg
sbb
shr
inc
adc
mov
clc
xor
dec
loope
aas
cmp
lock
mov
(bad)
fdiv
(bad)
dec
cmp
push
(bad)
cmp
mov
xchg
iret
das
cmps
stos
bound
pop
sub
sub
jg
sbb
aas
hlt
fwait
gs
or
sub
daa
cli
mov
shl
jle
sbb
add
push
pop
pop
add
inc
in
pop
lock
push
pop
std
ret
xchg
(bad)
icebp
push
ret
clc
mov
adc
(bad)
jns
aas
dec
add
das
jb
in
pop
test
bnd
out
pop
mov
inc
into
(bad)
aaa
movs
out
xchg
popa
scas
movs
ret
sbb
push
test
(bad)
or
popf
ror
loope
(bad)
mov
mov
aad
cmp
das
mov
shl
sbb
sub
int3
adc
xchg
mov
mov
dec
mov
mov
into
aad
push
(bad)
mov
je
push
jnp
jg
adc
xor
pusha
jecxz
sahf
pop
xor
sbb
sub
neg
imul
fisub
outs
gs
mov
adc
test
jmp
cmp
inc
xchg
cs
cli
ret
xor
pop
cld
nop
test
and
inc
jae
xor
in
fdiv
gs
adc
retf
daa
pop
imul
dec
xor
iret
xor
adc
repnz
test
adc
stos
aad
sbb
lods
pop
stos
clc
cmps
sti
pusha
fadd
jb
mov
adc
inc
pop
dec
call
fdiv
cdq
jbe
dec
xor
add
nop
inc
test
mov
retf
xchg
jg
sti
in
jno
lahf
fst
sbb
pop
adc
or
pop
xacquire
mov
cwde
lock
mov
leave
rol
sub
mov
in
lds
div
cdq
and
jne
jne
inc
dec
mov
pusha
add
rcl
mov
addr16
xchg
and
sbb
inc
xor
pop
mov
cdq
dec
sub
mov
pop
arpl
scas
push
add
fistp
test
out
imul
pop
aad
sbb
sub
gs
add
mov
push
pop
xchg
pop
dec
or
mov
addr16
cwde
jge
call
add
mov
xor
push
bound
stc
mov
iret
push
cs
mov
loop
cmp
mov
out
bound
shr
push
jmp
fstp
jae
adc
enter
xor
push
mov
mov
xchg
add
movs
adc
mov
imul
add
das
lods
pop
fidiv
or
lahf
fisubr
cs
fidivr
jbe
inc
pop
dec
add
ins
push
nop
mov
cmp
add
cmc
cmp
rcl
sub
inc
sar
mov
jmp
retf
mov
pop
sahf
fucomip
dec
fild
jp
jae
add
shl
(bad)
push
int
pop
ins
mov
xor
ds
test
mov
aaa
loop
pop
aad
mov
xor
xor
sub
sbb
adc
(bad)
jns
into
in
pop
mov
xor
and
jae
sbb
sub
pop
nop
mov
in
loope
jge
cmc
xchg
and
inc
int3
cld
lods
fs
ret
jmp
loopne
(bad)
movmskps
dec
and
adc
daa
cmp
mov
inc
inc
ins
mov
jo
loopne
cmps
adc
adc
dec
lock
inc
mov
xchg
xchg
xor
in
push
and
pop
ret
neg
loopne
sub
mov
sar
sbb
js
loop
dec
aas
popf
inc
stos
cmp
mov
popf
ret
jl
dec
jo
mov
dec
in
imul
add
shl
cmc
jnp
or
cmc
mov
xchg
push
or
sub
fnstcw
mov
jg
sti
ret
mov
xor
fidivr
dec
inc
and
repnz
sar
pop
cdq
push
arpl
ficom
jno
es
loopne
cmp
clc
scas
fstp
pop
cmp
fwait
jp
int
xchg
jno
movs
sbb
dec
cld
call
sub
(bad)
jp
mov
repz
jmp
add
mov
xchg
and
pop
xchg
jg
add
in
ss
push
pop
ss
sti
ss
add
xchg
mov
adc
hlt
push
mov
xor
retf
bnd
popf
(bad)
jmp
jno
cmp
dec
fcom
cmps
dec
push
(bad)
ror
sub
push
and
shl
sbb
pop
pusha
mov
or
jp
shl
cmp
out
popf
scas
jo
adc
mov
out
sbb
sbb
pop
test
jae
movs
jne
jmp
push
or
popa
sub
sub
add
outs
fbld
movs
or
and
mov
fcomp
das
sahf
inc
data16
add
mov
dec
jne
(bad)
popf
jmp
fwait
sbb
retf
jg
pop
and
jl
xchg
leave
jecxz
adc
pushf
pop
fs
out
xor
mov
xor
cli
cld
sub
push
enter
fwait
adc
or
shr
(bad)
sahf
jge
pushf
test
sbb
jnp
lahf
mov
sbb
imul
mov
movs
cmp
push
mov
mov
loop
add
es
cmp
sahf
mov
xor
mov
mov
xchg
not
leave
ficom
mov
push
pop
ds
imul
out
push
inc
in
push
mov
popf
pusha
(bad)
neg
pop
xor
and
dec
lahf
push
lods
and
jae
mov
push
fs
fwait
sub
xchg
out
sahf
mov
sbb
cmp
adc
out
ins
jmp
push
mov
adc
mov
ss
lahf
jnp
add
pop
xor
mov
rcr
push
mov
int3
fdiv
retf
nop
or
adc
(bad)
nop
push
xor
stc
std
dec
and
sbb
dec
rol
outs
mov
cmp
pop
outs
je
movs
je
adc
mul
adc
xlat
mov
out
push
sub
and
push
mov
mov
pop
push
jno
xchg
int3
jge
test
sbb
in
arpl
push
pop
pop
sbb
mov
movs
js
dec
xlat
fwait
imul
mov
je
ins
sbb
hlt
jge
pop
div
or
scas
and
push
movs
test
js
inc
jb
std
dec
fst
inc
sub
call
cmp
imul
xchg
push
into
aam
pop
fistp
jge
mov
mov
daa
movs
ins
cli
into
(bad)
nop
sub
movs
jmp
sub
mov
mov
ret
jmp
jnp
rcl
xlat
call
sub
adc
pop
sbb
xor
xchg
data16
dec
push
addr16
gs
add
outs
pop
jecxz
adc
jmp
out
(bad)
(bad)
stc
ss
imul
enter
inc
inc
popf
mov
or
js
mov
cdq
in
iret
jnp
jmp
xchg
xchg
push
xchg
push
aad
cwde
dec
imul
or
sub
push
or
(bad)
(bad)
pop
in
in
loopne
adc
jnp
inc
push
sub
stos
fwait
mov
aam
(bad)
jne
jl
sbb
imul
call
mov
mov
mov
das
push
cmp
lods
adc
sub
push
mov
aaa
mov
cdq
pop
loopne
cmp
xchg
push
mov
movs
aam
and
mov
mov
outs
mov
mov
push
addr16
xchg
out
enter
popf
aad
cs
sbb
pop
daa
in
jae
jle
popa
or
fs
aam
lods
xor
scas
fsubr
not
nop
gs
mov
leave
push
dec
sbb
mov
(bad)
icebp
sar
inc
mov
push
xchg
sub
int
add
xor
jae
xchg
(bad)
(bad)
jmp
push
loopne
stos
pop
pop
pop
(bad)
mov
fdivrp
gs
scas
iret
ss
mov
sub
(bad)
popf
and
add
ss
add
retf
cmp
push
sub
and
aaa
mov
inc
add
lahf
loop
cwde
aas
xor
leave
lock
les
jb
je
fs
retf
xor
addr16
dec
cmp
mov
push
and
inc
cmp
inc
dec
mov
mov
mov
xor
jmp
lea
aas
inc
int
xchg
cmp
nop
push
retf
inc
inc
jp
push
stos
adc
mov
push
or
sub
repz
dec
(bad)
mov
dec
bound
pop
pop
les
sub
jl
xchg
lea
repnz
fld
not
push
sub
push
and
sti
mov
sbb
or
out
jmp
sub
sub
mov
and
or
mov
push
mov
pop
ret
(bad)
enter
push
stos
pop
and
jge
loopne
inc
cli
xchg
lods
adc
sar
lds
inc
outs
mov
movs
add
and
ja
pop
and
out
push
or
cmp
retf
not
and
sub
js
xchg
popf
movs
int
push
ror
push
mov
test
dec
(bad)
or
lods
sub
gs
inc
cmp
xchg
(bad)
sbb
dec
movs
pop
pop
lea
fcmovnb
push
daa
ins
add
adc
mov
or
xchg
pop
pop
test
and
fnstsw
mov
gs
das
jle
jg
pop
mov
push
pop
ins
fs
pop
(bad)
push
mov
pop
and
pop
or
add
pop
and
push
pop
in
fsub
lods
mov
xchg
xchg
pusha
cdq
jl
lahf
(bad)
(bad)
cli
dec
shr
push
adc
and
test
test
leave
mov
sub
outs
in
adc
sti
mov
add
or
jmp
gs
xchg
sar
pop
addr16
inc
mov
cmps
out
movs
pusha
lods
xor
in
mov
jl
std
inc
pop
mov
xor
push
and
hlt
jecxz
inc
loop
repz
lock
lods
cli
jbe
test
cmp
lds
mov
pusha
or
(bad)
jns
push
mov
sbb
xor
mov
ss
pushf
dec
cmovne
dec
cmps
repz
fxch
adc
arpl
mov
div
lods
(bad)
sti
lods
adc
and
pop
xchg
loope
add
call
cmp
std
outs
pop
mov
sbb
hlt
or
mov
pop
pusha
cmps
cs
jb
outs
call
dec
imul
repz
mov
std
mov
aad
loop
cmp
add
cdq
xchg
pop
(bad)
cdq
popf
xchg
push
gs
mov
jbe
mov
mov
repz
js
and
imul
jb
in
lods
cmp
pop
mul
inc
test
inc
push
cmps
out
(bad)
or
jl
mov
sub
sbb
xor
pusha
bound
shl
push
sub
mov
xchg
sub
mov
jecxz
xor
test
rcl
adc
jg
mov
stos
(bad)
pushf
cwde
or
jmp
mov
(bad)
fimul
push
shl
adc
(bad)
fsubp
jge
cdq
add
or
fs
and
fimul
dec
mov
mov
inc
jecxz
outs
outs
mov
mov
cmp
push
xor
imul
nop
hlt
mov
outs
add
sbb
stc
fcmovnu
and
mov
dec
cli
mov
cmps
or
and
popf
rcr
cmp
and
mov
int
fwait
gs
mov
fcmove
lock
mov
popa
inc
out
pop
pop
lea
int3
dec
jae
pop
call
dec
bound
fild
fdivr
pop
mov
xchg
mov
inc
sbb
and
(bad)
repz
or
iret
hlt
in
or
lea
push
cmp
clc
iret
outs
add
adc
dec
xchg
pop
adc
xchg
cmp
jmp
sbb
xor
add
mov
push
cmp
mov
jl
jb
jns
lahf
inc
xchg
ja
dec
ja
outs
jbe
sbb
xor
sub
jecxz
mov
mov
cmp
mov
jne
cli
es
push
in
pop
pop
out
and
dec
call
(bad)
push
std
xor
dec
cld
adc
pop
fdiv
bnd
add
int
imul
lods
popf
pop
cmp
jle
sbb
xchg
iret
xchg
mov
mov
xchg
stos
mov
xor
push
ficomp
sbb
aad
xlat
es
out
sti
and
sahf
cmp
shr
es
dec
test
div
ror
out
je
scas
or
inc
xor
fwait
or
mov
jns
lods
dec
mov
std
mov
jecxz
lods
outs
leave
jbe
inc
xchg
addr16
stos
out
mov
stos
lods
add
lods
in
or
in
(bad)
fnstcw
cmc
out
adc
sar
cmps
int3
pusha
ss
ret
out
ss
movs
adc
mov
out
mov
dec
jmp
inc
test
lahf
mov
jne
mov
fwait
dec
pop
inc
cmp
dec
mov
or
add
out
inc
sbb
shl
sbb
ror
test
pop
aad
xchg
push
inc
jmp
xchg
add
(bad)
mov
rcr
loope
paddb
mov
jnp
fld
inc
cmps
repz
fwait
mov
mov
inc
mov
push
push
mov
push
dec
popw
xor
mov
push
fidivr
inc
add
sbb
scas
stos
xchg
cwde
fimul
xchg
dec
adc
mov
mov
sbb
mov
cmp
aad
aam
repnz
idiv
jle
popa
retf
or
fsubr
jb
popf
sbb
cdq
repz
cdq
fadd
jno
dec
aad
mov
int3
xor
aam
imul
push
hlt
xor
add
test
jae
popf
push
jmp
lds
mov
lods
mov
cmp
es
je
push
in
mov
sbb
and
sub
jns
mov
lds
je
addr16
sub
neg
jmp
(bad)
mov
stc
cs
mov
cld
push
hlt
jo
ins
aaa
pop
rcl
inc
and
pop
xor
adc
imul
cdq
and
fld
cmp
imul
stos
xor
rcl
out
adc
pop
xchg
mov
cmp
fist
mov
xchg
jp
test
(bad)
or
mov
mov
cmp
cmp
out
add
inc
dec
aam
add
iret
inc
fbld
ss
outs
add
in
(bad)
pop
cmps
or
clc
gs
ins
jmp
pop
push
sbb
nop
add
xchg
xor
lods
mov
cmp
std
scas
mov
ins
fucomi
jecxz
cwde
int
das
xchg
leave
jo
dec
push
cmps
xor
movs
add
imul
sbb
xor
std
int
addr16
xchg
dec
add
or
(bad)
jb
leave
cmp
in
fwait
cld
nop
xchg
jmp
stos
paddsb
and
fstp
cmp
xchg
dec
xor
inc
fxch
leave
jmp
mov
out
and
inc
inc
cmp
enter
jmp
inc
mov
xlat
jecxz
popf
cli
dec
mov
push
lock
push
(bad)
or
sbb
mov
cmc
std
xchg
int
ror
and
call
sbb
fdiv
xchg
int
or
jno
shr
cwde
inc
cld
jne
arpl
(bad)
lea
scas
cmp
lea
hlt
dec
lea
pop
das
dec
jmp
cld
sub
push
xchg
mov
fs
in
or
push
xchg
retf
sbb
test
adc
dec
test
enter
sbb
in
call
jnp
add
sub
mov
jg
mov
test
and
fdiv
aas
fnsave
and
add
xchg
cmp
movs
fs
pop
fidiv
sbb
hlt
shl
push
xor
mov
sbb
jnp
xor
dec
inc
add
inc
in
adc
adc
fist
push
lds
int3
xor
sub
and
push
xor
inc
pop
and
daa
sbb
mov
iret
in
cmp
and
std
rcl
dec
lods
sub
nop
and
cli
push
cmp
mov
mov
mov
cmp
pop
fisub
or
xchg
sbb
sbb
aam
xchg
mov
or
sbb
inc
push
push
xchg
pushf
jno
es
ret
xlat
sbb
jnp
push
push
or
popa
xor
jl
push
inc
mov
mov
les
dec
cmp
in
mov
dec
rol
sahf
mov
mov
sbb
pusha
jne
and
in
or
outs
and
jp
jle
pushf
jbe
fisttp
test
adc
scas
xchg
cmp
aas
sbb
cmps
or
scas
das
retf
daa
lds
cld
jae
push
movs
fld
adc
in
mov
test
cli
sbb
adc
rol
dec
adc
fimul
out
fs
mov
or
sahf
sub
add
inc
popa
cmps
pop
jle
jnp
and
sahf
mov
sbb
dec
adc
leave
bound
xchg
or
movhlps
ror
add
shr
mov
or
xor
scas
int3
cld
push
ret
and
call
adc
std
cmp
out
add
xchg
stos
mov
push
leave
push
imul
cmps
neg
pop
push
pop
leave
or
push
or
push
adc
pop
imul
fadd
imul
icebp
push
or
pop
movs
stos
shr
call
lahf
cwde
(bad)
dec
jmp
stos
xor
dec
fidivr
push
aad
inc
push
cmp
add
mov
iret
scas
dec
stos
sti
cmc
xchg
test
or
mov
sbb
mov
mov
inc
outs
shr
pop
add
icebp
jbe
fbstp
daa
and
cmp
std
movs
rcr
mov
cmp
das
jg
fxch
add
dec
idiv
popa
fmul
sbb
push
jl
xchg
mov
outs
jbe
(bad)
adc
das
xchg
rcr
jmp
sbb
js
pop
jl
mov
mov
sti
mov
sbb
mov
cmp
mov
cmps
stos
xchg
inc
not
or
sub
lock
int3
(bad)
out
cmps
popf
or
sub
clc
cmps
aaa
cwde
lea
mov
je
pop
in
stos
mov
jecxz
mov
into
mov
das
push
jbe
rcr
adc
pop
mov
out
pop
ficomp
or
jle
fbstp
loopne
out
leave
or
push
test
fwait
jmp
icebp
xor
call
mov
aas
jae
pop
xor
adc
call
loopne
mov
retf
add
inc
or
xor
inc
pop
xor
retf
xchg
repz
push
aad
xor
push
inc
xchg
add
or
add
jp
pop
ret
cdq
xor
rol
mov
mov
mov
scas
mov
cmp
pop
dec
gs
(bad)
mov
xor
fmul
(bad)
fmul
pop
les
jp
loop
pop
dec
sub
(bad)
adc
repz
in
pop
push
or
or
jg
out
mov
or
xor
sub
not
or
adc
adc
jle
(bad)
mov
aaa
jb
sub
mov
out
movs
pop
in
pop
call
addr16
cmc
mov
stos
pop
and
lock
(bad)
iret
out
inc
pop
lods
or
ds
(bad)
sub
sbb
das
adc
add
and
scas
call
clc
jno
pop
in
je
ret
jmp
jle
in
cmp
cmp
ja
xor
xchg
add
test
lock
mov
xor
lods
sbb
push
in
daa
sbb
or
adc
mov
mov
jo
jge
cmc
ins
dec
xchg
repz
dec
push
dec
dec
imul
out
mov
sti
rcl
mov
cmp
test
(bad)
imul
xor
sahf
add
xor
push
stos
push
xor
mov
fadd
in
push
or
sar
and
push
or
(bad)
das
out
push
das
jns
inc
mov
jne
jmp
push
push
fwait
cmp
jle
xor
inc
sbb
xlat
ret
(bad)
mov
push
mov
lock
push
imul
daa
arpl
adc
sub
add
pop
sub
mov
mov
cwde
jecxz
sub
les
xor
inc
pop
or
movs
in
clc
fistp
(bad)
push
mov
mov
test
rol
dec
mov
pop
mov
cld
mov
push
push
imul
out
movs
pop
iret
push
mov
adc
xchg
ret
sbb
pop
and
xor
daa
sub
in
adc
mov
push
cmp
call
in
leave
(bad)
outs
fmul
pop
test
fisubr
loopne
and
shl
push
data16
jecxz
mov
or
cmps
(bad)
iret
dec
inc
inc
mov
es
cli
xor
popf
adc
mov
(bad)
add
dec
sbb
mov
(bad)
fdivr
jnp
mov
xchg
pop
jp
cmp
fistp
rcl
pop
pusha
dec
fcomip
ins
mov
out
or
mov
js
jge
out
ins
xor
or
cmc
mov
pusha
int3
mov
push
mul
aaa
ret
dec
or
push
ror
xor
movs
sbb
jmp
or
scas
mov
sbb
push
mov
push
and
add
add
stc
pop
in
cli
jecxz
xchg
sub
retf
jp
push
cld
and
sub
into
lds
jge
outs
sub
stos
fist
push
jno
ins
inc
pop
out
sub
or
pushf
mov
sbb
or
and
add
cmp
cmp
or
mov
push
(bad)
mov
xchg
or
arpl
data16
out
loop
fucomp
and
rcl
jmp
mov
mov
or
and
stos
jne
pop
ret
sbb
mov
stos
xchg
(bad)
jmp
scas
arpl
mov
add
js
jg
sbb
into
jns
dec
lahf
clc
pop
cmp
mov
pop
push
aas
arpl
sbb
jle
pop
pop
rcl
cmp
cdq
sbb
jp
inc
cmps
xlat
and
jmp
jne
ins
dec
(bad)
outs
push
sub
mov
test
movs
inc
out
xchg
mov
xor
xchg
call
xor
fbstp
repz
and
jge
std
mov
outs
mov
test
(bad)
out
sbb
jne
cmp
and
ins
sbb
inc
sbb
lahf
fsub
push
push
call
sub
or
dec
and
in
and
add
inc
bound
mov
jno
jns
retf
pusha
mov
retf
cli
imul
push
je
fcom
aas
retf
cmp
mov
cmps
adc
or
push
cld
stos
jg
daa
pop
inc
push
adc
jle
pop
xchg
mov
jbe
or
mov
cmp
or
mov
cmp
dec
ret
je
adc
jp
sub
(bad)
hlt
subps
sbb
adc
and
sub
push
int3
retf
test
dec
stc
lods
adc
pop
mov
cwde
pop
and
inc
mov
inc
cmps
scas
jp
rcr
xor
jmp
cwde
test
xor
jns
gs
(bad)
adc
pusha
retf
jnp
add
sbb
out
imul
loop
call
hlt
add
fbld
sub
xchg
and
and
push
mov
ss
daa
fs
inc
mov
cli
fidiv
jecxz
div
push
push
sub
(bad)
pop
sub
dec
push
mov
push
inc
push
sub
shr
cmp
add
pop
cwde
add
cmp
mov
push
mov
(bad)
jne
outs
int
cmp
push
aas
push
in
mov
test
add
adc
out
jl
test
and
mov
push
lock
add
es
mov
xchg
fxsave
bound
repz
xchg
mov
push
neg
leave
std
popf
xchg
xchg
jmp
fst
fwait
je
shl
neg
pop
pop
(bad)
cvtpi2ps
pusha
push
movs
jp
mov
loope
lock
into
sub
std
push
mov
in
inc
push
lods
push
call
(bad)
cs
in
int3
mov
and
not
adc
out
das
call
sbb
xchg
movs
ds
sub
ss
lds
jb
into
pop
imul
dec
cmp
inc
and
pop
fsub
mov
in
fidiv
fadd
std
cdq
daa
sub
sub
inc
(bad)
mov
in
and
aaa
pop
adc
cmps
imul
hlt
icebp
(bad)
out
stos
pusha
fldcw
cmp
xchg
xchg
or
xchg
inc
bound
sub
stos
sub
inc
in
stos
ss
push
int
aas
outs
dec
stc
sub
outs
bound
cli
shl
xor
fiadd
sub
dec
in
adc
inc
aas
adc
sbb
inc
sub
int
xor
cmp
fcom
cmp
pusha
stos
xchg
inc
mov
dec
out
dec
adc
cwde
xlat
or
or
movs
and
add
ficomp
push
jecxz
shr
jo
sahf
(bad)
jmp
(bad)
adc
scas
ror
push
aaa
mov
sub
int3
icebp
(bad)
ja
pusha
loopne
cmp
jbe
ret
jo
call
inc
mov
xchg
mov
push
xor
mov
shl
shr
sti
add
sbb
adc
inc
dec
push
push
adc
jo
lock
gs
cwde
and
ins
in
loope
fisub
shr
pop
cwde
fs
mov
aam
fdivr
sbb
retf
add
sub
data16
pop
sub
mov
sbb
(bad)
scas
inc
iret
mov
out
mov
jmp
xchg
mov
sbb
sub
and
loop
pop
in
stos
xor
inc
cmp
sti
mov
adc
aad
mov
mov
xor
add
add
mov
jns
xor
cmp
loopne
nop
pop
mov
je
les
push
mov
retf
pusha
or
pusha
js
jl
mov
cmp
inc
inc
lods
and
dec
jne
pop
aaa
dec
add
aas
mov
das
ret
fsubp
push
dec
in
mov
or
sbb
and
idiv
sbb
sub
xchg
pushf
pushf
fcmovnb
and
mov
push
cmp
pop
retf
sub
das
or
add
inc
cmp
or
add
jl
(bad)
xchg
shl
call
xor
outs
push
xchg
popf
xchg
loop
inc
in
inc
cmps
mov
stos
ja
nop
nop
xor
(bad)
inc
out
sbb
sub
paddd
mov
div
inc
std
sbb
inc
push
jge
call
pop
movs
adc
(bad)
mov
aam
(bad)
or
(bad)
fwait
xchg
mov
es
or
push
xor
daa
pop
out
mov
dec
push
in
push
lahf
inc
sub
push
movs
inc
mov
dec
out
jp
out
fwait
and
xor
dec
dec
jl
dec
sbb
pop
mov
sub
repnz
xchg
and
xchg
cdq
adc
sti
fwait
xchg
sub
mov
and
fadd
(bad)
call
imul
dec
imul
jb
loop
outs
test
adc
jge
lock
xchg
dec
push
and
jo
cld
dec
adc
ins
js
cwde
js
es
jg
ds
ret
mov
dec
aas
push
and
test
or
cmp
jge
ins
inc
xor
or
cmp
dec
(bad)
out
idiv
sub
jl
ret
arpl
rol
dec
pop
pop
jge
sub
enter
xchg
fistp
push
out
add
mov
jbe
sbb
mul
movs
jmp
cli
jmp
nop
(bad)
push
adc
int3
mov
das
imul
cmp
adc
(bad)
push
push
cmp
sub
mov
movs
ret
and
leave
in
repz
aas
mov
mov
fisubr
loope
pop
int3
add
add
sbb
cmp
punpckhwd
pop
mov
cmp
dec
sahf
enter
fst
cmp
dec
dec
das
pop
mov
or
es
or
jl
test
pop
imul
(bad)
or
dec
data16
fistp
bound
xor
mov
mov
push
bound
pop
and
das
xor
imul
cmps
cmp
in
push
popa
pop
sub
in
aaa
pop
mov
aad
mov
cmps
sahf
add
push
jbe
movs
lea
pop
jno
call
pop
repnz
sbb
xor
sbb
repz
push
mov
jmp
in
push
xchg
or
and
icebp
mov
cmp
or
loope
cli
jp
sbb
and
mov
lds
int3
in
retf
mov
aas
add
push
test
in
push
mov
cdq
mov
mov
je
dec
and
mov
lods
mov
xlat
sub
sbb
leave
jmp
fidiv
cmp
and
push
fiadd
test
(bad)
cmc
imul
test
jp
xchg
jmp
mov
cmc
or
dec
out
popf
inc
ins
mov
retf
add
inc
lahf
mov
inc
or
pushf
mov
push
push
loope
xchg
iret
jmp
je
into
(bad)
mov
xor
xor
adc
jge
sbb
xor
std
adc
push
push
lods
sub
or
add
xchg
(bad)
in
push
mov
cld
push
fisttp
in
add
dec
adc
lea
dec
cmp
xchg
dec
xor
mov
inc
pop
ins
xchg
test
and
cs
pop
cli
mov
sbb
sub
sbb
shl
fnsave
mov
mov
push
icebp
nop
add
scas
xchg
xor
dec
(bad)
mov
adc
ins
jae
mov
enter
add
addr16
cli
sahf
in
xchg
jge
mov
push
sub
ret
popf
jb
arpl
cmps
and
int
inc
cs
xchg
cdq
outs
dec
mov
shr
cs
xchg
and
fdiv
or
fst
mov
pop
jb
add
sti
fsub
push
jl
ja
aam
jbe
std
cmps
cdq
int
fcmovnb
inc
icebp
inc
pop
ins
adc
daa
xchg
out
loop
mov
push
enter
repz
sub
or
adc
push
fst
cmp
retf
sub
mov
mov
cmp
xor
cmp
daa
inc
repz
or
test
or
mov
gs
mov
es
aaa
ds
fdivr
scas
sti
sbb
not
mov
cli
dec
inc
mov
(bad)
mov
ja
fist
data16
(bad)
cmp
mov
lock
das
add
outs
sub
out
in
mov
and
rcl
mov
jno
in
mov
push
not
sti
rcl
in
or
es
dec
jp
pusha
clc
fcomp
in
jmp
pop
stos
xlat
mov
mov
cmp
inc
cs
pop
cmps
push
or
cmp
clc
lods
out
xor
test
jl
push
jg
cs
mov
push
(bad)
cvtps2pd
mov
data16
mov
mov
ds
out
dec
scas
dec
scas
cmp
add
fdivr
lock
sbb
lahf
movs
retf
pop
mov
xor
cmps
mov
push
xchg
(bad)
sbb
(bad)
push
push
mov
sub
jae
jp
rcr
jecxz
lea
jp
jecxz
je
in
cmp
cmp
data16
(bad)
in
cmps
data16
dec
scas
(bad)
sub
pop
sar
push
xor
dec
scas
mov
ficom
push
xor
cs
inc
aam
inc
in
inc
scas
pop
mov
jl
jp
mov
adc
jo
adc
mov
aad
icebp
sbb
movs
mov
xchg
enter
mov
enter
jg
imul
mov
mov
mov
(bad)
out
mov
pop
cwde
mov
jg
xchg
cmp
in
lock
or
test
imul
pop
(bad)
dec
mov
or
cmp
jo
xchg
cs
sahf
fwait
sbb
movaps
gs
jge
mov
or
lock
xchg
jns
daa
repnz
arpl
mov
shl
cmp
push
int
adc
inc
add
push
cs
add
adc
inc
cmps
push
lahf
mov
retf
pop
cmps
mov
lock
sub
mov
retf
cld
add
xchg
adc
inc
cmp
xor
div
mov
nop
movs
test
stc
pop
xchg
mov
cld
sbb
bound
rcl
xchg
jae
dec
shl
dec
les
test
push
pop
pusha
stos
jle
fcmovnbe
and
data16
(bad)
ror
je
call
fimul
ins
xchg
out
(bad)
push
or
jl
fcom
shl
jae
xor
push
xchg
ret
xor
scas
xor
cwde
mov
xlat
push
cmps
stc
fs
rol
dec
pop
(bad)
pop
popf
jno
aas
inc
cmp
imul
pop
mov
sub
adc
and
fidivr
in
or
sbb
call
cmp
(bad)
sub
mov
pop
jbe
arpl
test
cmc
inc
push
or
je
add
imul
sahf
jmp
push
aaa
jnp
loopne
mov
jne
mov
adc
add
enter
pop
cdq
or
mov
bound
jmp
sub
(bad)
mov
xor
ss
popf
cmps
outs
es
inc
pop
les
scas
push
stc
jbe
out
inc
in
mov
cmp
arpl
ret
test
(bad)
xchg
sbb
(bad)
xchg
push
or
mov
sbb
outs
xchg
xor
and
sub
mov
push
inc
addr16
bound
adc
sahf
sub
sub
jp
(bad)
dec
stos
mov
xchg
adc
lds
adc
hlt
das
aaa
and
pop
inc
mov
pop
jmp
ja
and
pushf
mov
mov
movs
sti
rol
adc
add
test
loop
push
and
mov
dec
sbb
add
mov
test
jno
add
dec
out
aad
arpl
fsubr
shl
(bad)
push
fs
outs
push
push
sbb
and
jns
xchg
jne
adc
jge
aam
fbld
dec
imul
xchg
mov
or
and
les
pop
mov
fsubr
mov
sub
into
or
mov
lds
rol
adc
or
jecxz
call
es
xchg
loopne
shr
loope
push
cmovns
nop
mov
and
inc
pop
les
or
fwait
or
fsub
and
fsubr
pop
sbb
and
jne
cmp
jge
pop
pop
push
outs
jp
cmc
pop
pop
into
push
xchg
xor
inc
xor
dec
div
sub
jmp
xchg
mov
icebp
xor
sar
lds
inc
adc
adc
xchg
push
jne
mov
pop
inc
inc
into
repz
mov
sbb
ret
cmp
fsubr
sub
mov
add
xchg
outs
mov
dec
jmp
pop
cdq
test
or
test
or
outs
cmp
mov
mov
jg
rol
imul
bswap
sub
in
fwait
push
in
popf
cmp
pop
popf
inc
call
jns
adc
adc
(bad)
out
inc
fisttp
aaa
adc
sub
retf
cwde
dec
shl
jecxz
sub
inc
xor
sbb
scas
sub
stos
sub
xchg
jmp
add
loope
stos
or
shl
dec
mov
out
in
cli
dec
adc
pop
sti
inc
ror
cmps
pop
sahf
push
out
retf
aam
adc
loopne
fadd
xlat
pop
inc
or
stos
pop
jb
mov
test
int
ins
sbb
int
es
xlat
ja
adc
scas
imul
inc
jne
pop
jae
lods
adc
dec
push
cmp
fsub
leave
leave
and
call
icebp
pop
out
dec
cmp
add
jl
jae
aam
out
sbb
cdq
dec
call
pop
stos
push
inc
sub
and
inc
mov
or
jne
pop
pop
xor
mov
loopne
ret
adc
push
add
and
movs
xchg
mov
jecxz
cs
aas
xchg
push
shl
dec
movs
sahf
jmp
pop
mov
movs
outs
push
pop
mov
adc
das
movs
fs
lods
jl
mov
pop
cs
scas
cmp
movs
xor
xor
inc
pusha
dec
jp
lods
aas
sahf
adc
fs
add
jle
rcr
js
dec
mov
push
xchg
(bad)
loope
inc
fdivr
push
outs
or
std
ror
popa
scas
shr
jns
mov
adc
cwde
add
je
mulps
ja
pop
cmp
mov
add
loope
mov
pop
cli
push
imul
scas
cmp
test
daa
push
add
fnstenv
lods
sub
test
leave
inc
(bad)
mov
pop
inc
jmp
xor
movs
pop
popa
sub
imul
mov
ror
inc
mov
movs
test
dec
inc
repnz
add
adc
push
sbb
sbb
ficomp
shr
shr
xchg
or
rol
xchg
dec
mov
sahf
dec
xchg
test
inc
lods
addr16
fnstsw
in
mov
lea
mov
cmp
int
fild
leave
and
add
cmps
pop
das
iret
or
xor
mov
popf
aam
jno
(bad)
mov
jae
sbb
sbb
out
pop
cmps
push
cmp
into
(bad)
retf
repz
(bad)
in
scas
out
xadd
out
inc
jmp
mov
dec
sub
push
xchg
jg
out
sbb
add
jl
sub
dec
aas
xchg
adc
push
leave
addr16
dec
adc
je
xor
scas
or
sbb
les
dec
mov
int3
das
adc
fs
mov
mov
xchg
push
aaa
ds
shl
test
mov
dec
xor
mov
(bad)
mul
pop
or
cmps
(bad)
scas
ss
xchg
lods
aaa
xchg
xor
out
fs
ret
pop
icebp
mov
jp
jge
icebp
ins
fldl2t
mov
in
mov
or
int3
cmps
adc
sbb
pop
outs
sar
mov
sub
jmp
sub
sbb
test
pusha
es
nop
cmp
mov
pop
inc
call
lea
cli
jb
cmp
mov
enter
hlt
xor
xchg
das
(bad)
mov
cmp
jecxz
sub
(bad)
xchg
outs
call
mov
aam
inc
repnz
test
adc
cmp
push
push
sti
push
add
out
retf
fwait
lock
jae
cdq
repnz
arpl
adc
and
arpl
enter
sub
push
xchg
cmp
pushf
loope
fwait
mov
jbe
jl
xor
xchg
xchg
or
imul
popa
pop
int
(bad)
sub
adc
js
mov
fisubr
adc
dec
idiv
in
aas
pop
leave
mov
pop
leave
leave
xchg
cmc
jnp
pop
pop
jbe
xchg
ins
cmp
ins
sub
jbe
cmp
jmp
dec
loope
test
addr16
shl
scas
je
in
test
pop
xchg
shr
dec
ins
mov
inc
inc
xchg
lods
sbb
leave
clc
adc
mov
enter
mov
xchg
add
fidivr
sar
mov
and
cmp
mov
dec
retf
into
sbb
mov
dec
stc
xor
int
xchg
xchg
sub
cmovge
dec
ja
lods
xchg
mov
sub
cmp
sbb
or
mov
jb
(bad)
cli
and
movs
xor
mov
inc
dec
push
imul
mov
lahf
sbb
inc
jae
jmp
mov
xor
test
stos
test
jmp
xchg
inc
mov
jo
pushf
jbe
mov
and
out
jb
test
add
mov
mov
sub
inc
xchg
inc
push
push
sar
add
inc
or
cmp
inc
cmp
push
gs
push
call
repz
addr16
cmp
xor
or
cmp
push
les
jg
mov
jnp
sbb
retf
adc
mov
push
xchg
fild
jb
pop
test
push
test
scas
push
cmp
ins
xlat
jnp
dec
xor
iret
ret
test
mov
pushf
shl
retf
fidiv
or
mov
mov
nop
sub
lds
(bad)
adc
cmps
mov
add
mov
lock
repnz
lock
cmp
xchg
cmp
je
fdivr
ret
mov
clc
sar
pop
mov
inc
call
pop
repnz
addr16
loope
test
mov
out
push
sub
ficomp
fs
out
pop
sub
das
iret
jle
dec
stos
push
push
xor
xchg
cmp
imul
sub
cmps
push
shl
ins
and
push
ins
shl
mov
mov
sub
sbb
and
push
mov
jne
fs
ins
add
scas
add
mov
scas
xor
pop
mov
call
mov
push
stos
lea
dec
mov
stos
out
xchg
test
sbb
ret
xor
pushf
push
call
lds
mov
dec
or
gs
ss
jge
mov
retf
adc
mov
retf
xor
xor
add
xor
nop
or
add
fmulp
jo
xlat
dec
jns
mov
mov
std
in
or
mov
mov
cmp
rol
sti
inc
lods
inc
pop
fcomp
xor
mov
std
mov
dec
test
inc
dec
ins
inc
sbb
push
jmp
jp
int
jb
jo
mov
and
bound
gs
sbb
js
rcr
iret
pushf
mov
mov
leave
cdq
jecxz
sbb
xchg
add
pusha
mov
loop
xchg
inc
jp
fisubr
jge
fidivr
cs
sbb
(bad)
fxch
or
or
enter
icebp
mov
sub
jbe
mov
adc
addr16
cmp
fwait
pop
adc
ret
int3
popa
movs
adc
mov
lahf
sub
and
add
int
cld
ret
clc
inc
stos
pop
lods
lea
in
dec
call
lds
pop
cmc
(bad)
bound
stos
cli
push
cmp
int3
mov
out
jmp
in
inc
loop
cs
imul
in
pop
xor
adc
xor
addr16
inc
movs
dec
pop
xor
ja
in
pop
sbb
pushf
cmp
sub
jecxz
cld
xchg
and
inc
cmp
in
lock
imul
test
or
pop
call
outs
mov
dec
sti
stos
ins
jp
inc
jns
inc
mov
icebp
xchg
xor
sbb
popf
scas
cmc
(bad)
repnz
mov
sub
mov
out
mov
dec
(bad)
div
fdivr
push
add
jb
xchg
and
sub
pop
sbb
sbb
test
inc
xchg
dec
icebp
xor
stos
sub
aas
mov
jg
sbb
dec
out
call
jns
sti
jae
fiadd
sbb
adc
push
mov
and
aam
sub
test
inc
and
repnz
test
out
icebp
xor
into
movs
in
bnd
mov
sub
xlat
add
cli
pop
popf
jp
add
add
dec
add
jecxz
cmp
mov
xor
add
push
xchg
pop
fld
sub
dec
cdq
sbb
dec
in
out
xor
inc
stos
mov
and
(bad)
pushf
pushf
jb
mov
movs
(bad)
sbb
jne
push
mov
mov
out
arpl
aad
mov
fisub
shr
inc
dec
or
jnp
and
aas
and
outs
dec
stos
pop
neg
movs
or
popf
into
popa
mov
sub
cmp
popf
je
in
xor
xchg
aad
lods
fisttp
or
cmp
fnstcw
inc
mov
and
or
adc
std
arpl
popf
dec
mov
daa
adc
xchg
int3
push
mov
and
xchg
(bad)
loopne
(bad)
test
shl
fwait
imul
hlt
sub
stos
or
out
mov
fiadd
aaa
stos
stc
xor
fs
dec
sbb
jmp
sti
ret
push
stos
and
dec
pop
cs
cmc
sti
cdq
sbb
(bad)
lahf
retf
sub
(bad)
sbb
lahf
sbb
xor
loopne
aam
push
retf
jnp
xor
movs
aas
aad
mov
fadd
addr16
(bad)
mov
adc
jmp
in
mov
cmc
arpl
pop
or
cmp
pusha
push
or
pop
add
sbb
test
mov
imul
dec
fwait
jno
jne
adc
and
in
pop
into
scas
lds
add
pop
fisttp
adc
sahf
mov
mov
ss
call
mov
cmp
imul
ret
popf
sbb
xor
mov
sbb
loop
das
mov
fisubr
sub
into
shl
arpl
mov
cdq
xchg
mov
iret
xor
test
rcr
sbb
pxor
imul
or
mov
(bad)
stos
inc
mov
movs
mov
enter
sub
sub
pop
pop
fcmovnbe
xchg
popa
xor
call
cmps
nop
imul
test
test
aad
ins
and
sar
sub
ins
loopne
mov
mov
dec
jge
mov
dec
jmp
xor
test
pop
ss
arpl
jmp
les
cmp
and
xor
add
fidiv
test
sub
rcl
fwait
cs
popa
aad
or
xchg
aas
(bad)
lods
and
xchg
jno
mov
xor
adc
fbstp
xchg
cli
stc
xchg
mov
mov
jno
ret
jae
dec
pop
les
sbb
jg
xchg
add
cs
mov
mov
cs
push
cmps
and
in
mov
sub
in
scas
int
dec
hlt
or
gs
loopne
mov
sbb
jne
rcr
call
fwait
jp
mov
pop
dec
or
ss
mov
dec
inc
inc
pop
repnz
xlat
(bad)
sub
addr16
cmp
push
xchg
int
das
xor
and
add
sbb
adc
es
loopne
std
pusha
out
mov
mov
sti
sbb
xlat
or
xlat
aam
and
dec
ja
loope
push
int
add
popa
(bad)
aad
mov
push
imul
mov
neg
in
(bad)
shr
xor
adc
(bad)
add
shl
dec
aaa
mov
ja
push
push
sahf
imul
xor
jnp
sub
inc
ret
jmp
adc
mov
ficomp
icebp
mov
fbld
lds
loop
lock
jmp
ret
cli
ret
mov
repz
cmps
sub
(bad)
pushw
sub
inc
cmc
loop
dec
sbb
xor
push
xchg
mov
into
mov
xor
shr
sbb
in
sbb
imul
in
jo
inc
dec
xchg
cmps
push
mov
pop
cmc
popa
cmps
nop
cwde
dec
jne
jge
jbe
cmp
sbb
inc
(bad)
(bad)
pop
adc
(bad)
mov
gs
sub
inc
lahf
pop
cmp
xor
fbstp
out
movs
xchg
and
xchg
ror
fisttp
mov
loopne
jp
sbb
sub
loope
xor
mov
addr16
or
aaa
xchg
jmp
rcr
sbb
nop
mov
imul
pop
jae
adc
cmp
ds
pop
int
sar
popa
cmp
mov
xchg
push
or
jge
sub
loop
adc
fs
adc
cmp
pop
repnz
or
fldcw
xchg
jbe
out
push
pop
jg
rcr
enter
or
cmp
fwait
pop
or
ret
jge
cmp
test
aaa
retf
push
jecxz
xchg
(bad)
fbstp
and
mov
ins
push
hlt
addr16
push
cmp
push
movs
sub
popf
xor
int3
lods
jmp
test
sbb
xchg
mov
add
aad
aad
dec
sar
cmps
test
je
aad
or
xlat
sub
stos
mov
and
pop
jmp
es
retf
xor
(bad)
js
xchg
cmp
pusha
mov
push
movs
dec
rcl
xchg
(bad)
dec
inc
imul
clc
mov
xchg
dec
pop
imul
add
les
jmp
pop
jecxz
adc
jb
aam
scas
xchg
or
(bad)
neg
add
or
pop
adc
inc
lahf
(bad)
ret
les
out
in
leave
jecxz
xor
enter
pop
je
rol
mov
lock
xor
sbb
stos
adc
jbe
sti
jmp
jne
jmp
dec
push
xor
add
call
dec
jnp
cli
or
inc
maskmovq
idiv
add
test
inc
fcomi
test
cmp
adc
ds
scas
retf
aam
and
imul
fcom
xchg
add
jl
aaa
arpl
xchg
jne
adc
enter
fdiv
inc
test
sub
(bad)
dec
ja
call
jl
jnp
and
dec
fmulp
jbe
dec
mov
sub
sbb
sbb
push
lods
jno
jge
fsub
scas
jge
push
jne
mov
loope
jnp
test
ficomp
(bad)
xor
mov
enter
mov
jno
sbb
mov
es
xchg
cs
sub
xor
xor
rcr
bound
dec
mov
adc
sahf
test
gs
or
sbb
mov
or
jb
test
shl
je
lds
sbb
ret
fmul
mov
(bad)
fstp
(bad)
icebp
lods
shl
dec
sbb
mul
std
push
pop
sbb
hlt
pop
xchg
push
sbb
aas
pop
or
jg
add
lahf
out
mov
xchg
cmp
int3
loopne
imul
jg
popf
sbb
push
leave
or
icebp
jbe
lods
xor
iret
imul
out
xor
mov
mov
jnp
inc
mov
cmp
scas
jns
sbb
pop
push
sbb
mov
in
jle
jno
outs
in
cli
mov
adc
int3
push
jo
bound
add
mov
in
push
sti
mov
arpl
lock
out
jmp
sub
mov
mov
xchg
repz
add
xor
scas
repz
fisttp
cmp
xlat
fcom
(bad)
mov
push
adc
push
mov
(bad)
push
test
(bad)
scas
popf
sbb
xchg
add
mov
xor
sbb
xor
or
rol
inc
imul
pusha
cmp
mov
add
ror
in
pop
pop
adc
adc
std
push
lods
clc
lods
adc
dec
pop
fdivr
retf
shl
fmul
imul
rcl
out
outs
(bad)
iret
xchg
sar
call
xor
xor
stos
adc
pop
arpl
cwde
shl
add
xor
xchg
dec
pop
int
loope
loope
and
cmp
and
or
mov
push
mov
add
inc
outs
pop
pop
adc
inc
push
dec
cmp
ds
retf
jae
sbb
add
pop
push
mov
mov
lock
clc
das
jl
xor
xchg
mov
outs
into
mov
and
in
(bad)
aam
sub
icebp
imul
sbb
xchg
xor
jp
imul
mov
inc
or
scas
cli
test
repz
jle
aad
loope
pop
ret
add
pop
dec
in
aaa
mov
into
iret
mov
jle
outs
dec
inc
(bad)
cmp
fsub
sti
cmps
lea
or
inc
fst
repz
idiv
pop
pushf
jo
push
retf
lods
or
cs
nop
lods
cmp
cli
adc
int3
push
or
xchg
adc
in
sub
push
jmp
ror
jmp
push
retf
sub
ror
mov
add
les
int
or
daa
mov
adc
jmp
jne
mov
dec
pop
add
xchg
xchg
pop
fidiv
jbe
push
push
pop
or
add
xlat
add
jl
jae
or
loop
jp
scas
cmps
jmp
fs
xchg
mov
dec
lods
(bad)
dec
cli
dec
lods
add
cmc
stos
shr
xchg
pop
outs
jmp
cmp
xchg
neg
mov
cmp
ins
dec
xor
test
sbb
xlat
push
scas
lods
fimul
(bad)
mov
mov
lea
cmp
xchg
(bad)
out
adc
jecxz
das
sahf
fild
pop
movs
and
(bad)
test
cmc
hlt
push
push
mov
ss
xchg
mov
out
stos
or
cmp
and
js
push
js
fdivr
mov
pusha
out
ins
je
movs
sbb
ins
fwait
pop
pushf
add
jns
jmp
jo
repnz
out
jbe
mov
inc
add
and
xor
sub
fs
ret
aam
jmp
(bad)
jmp
fwait
pop
es
lds
jo
xor
fsub
or
cmp
dec
sti
fiadd
cs
push
jp
push
fsub
cmp
mov
pop
sub
mov
inc
dec
jns
inc
xchg
jle
je
les
xchg
ins
dec
je
xchg
mov
and
test
sub
or
bound
sahf
fsubp
cmp
adc
clc
retf
pop
(bad)
loope
sub
mov
les
inc
cmps
es
fs
sub
jnp
mov
imul
xchg
retf
inc
mov
fnsave
adc
mov
loop
call
and
and
in
inc
out
shl
adc
push
pusha
cmp
and
sbb
dec
mov
adc
(bad)
pop
(bad)
dec
out
cmp
mov
mov
idiv
out
jmp
leave
mov
or
repnz
xchg
jl
jbe
mov
fnstenv
das
dec
stos
jb
psubb
add
inc
adc
mov
push
imul
sar
test
add
outs
pop
xchg
shl
cmp
xchg
aas
aaa
fadd
loope
sub
and
out
sub
(bad)
jno
xchg
or
cs
adc
jmp
add
test
sbb
into
adc
sub
mov
sub
pop
xchg
cmp
idiv
xor
push
jo
sub
and
popa
xor
mov
popa
sbb
jo
test
mov
repnz
mov
test
call
shr
inc
into
pop
movs
dec
nop
aad
adc
sar
in
cli
pushf
adc
lods
and
movs
sti
jbe
inc
mov
inc
fs
adc
or
push
jp
mov
data16
psllw
mov
mov
mov
mov
loopne
inc
retf
movs
adc
ret
add
outs
adc
and
adc
jno
or
inc
pusha
add
test
jns
(bad)
xlat
add
inc
fbld
ret
adc
rcr
test
and
mov
cmps
in
cmp
fmul
xchg
add
mov
pop
xchg
sub
in
rcr
sub
loope
das
(bad)
or
idiv
add
movs
fsubr
and
sub
loope
adc
jne
lods
test
scas
inc
inc
cdq
into
popf
mov
nop
iret
pusha
sbb
cmp
cmp
push
repz
bound
xchg
arpl
shl
mov
mov
xchg
fcmovnbe
xor
retf
(bad)
and
retf
lahf
mov
jo
(bad)
sahf
dec
dec
adc
mov
test
pusha
out
dec
(bad)
xchg
fisttp
pushfw
jbe
cs
pop
shl
sbb
outs
jl
jmp
sbb
mov
gs
mov
rcr
(bad)
call
mov
loopne
rcr
icebp
mov
or
je
add
jle
(bad)
sub
sub
int
push
inc
push
xchg
out
pop
and
(bad)
not
xor
in
sub
ja
mov
jns
jae
movs
push
mov
cmp
mov
movs
and
xor
xchg
jmp
scas
sahf
gs
daa
pop
cdq
loope
(bad)
mov
(bad)
mov
mov
mov
or
and
sbb
xchg
inc
sbb
fbld
in
sub
adc
inc
mov
popf
rol
(bad)
shl
aas
and
fsub
movs
mov
repnz
test
out
(bad)
aam
jb
sbb
data16
pop
mov
fcmovnb
shr
mov
sub
jl
retf
rcr
jle
jbe
sub
cdq
jle
xor
(bad)
mov
cmp
in
push
(bad)
fisubr
out
retf
out
jl
pop
test
sub
mov
cwde
rcl
pop
sbb
test
into
mov
out
add
pop
mov
fst
xor
mov
inc
inc
outs
push
and
iret
(bad)
shr
lea
fincstp
enter
cmp
xor
test
bound
sub
mov
(bad)
jne
xor
dec
pop
in
pop
cmp
loope
lock
bound
ret
sbb
xchg
aaa
push
in
push
data16
sldt
mov
mov
inc
sbb
call
outs
adc
add
cwde
cmpxchg
inc
int3
mov
movs
xchg
sbb
inc
mov
loop
add
sbb
and
push
(bad)
push
and
in
or
test
scas
adc
push
sub
and
xor
push
scas
jae
clc
mov
jmp
call
repnz
js
mov
loopne
xchg
inc
cwde
mov
cmp
jno
push
cmp
out
loope
aad
jns
(bad)
pop
pop
sbb
jno
imul
cmps
xchg
dec
in
retf
fwait
sar
pusha
mov
sub
in
jno
ret
sbb
cdq
add
(bad)
ficomp
pop
(bad)
jp
inc
pop
in
pop
adc
in
loope
xor
lahf
int
sbb
in
test
or
dec
push
fnstsw
aaa
scas
dec
je
stos
sar
pop
mov
jmp
lea
repnz
mov
mov
cmp
mov
int3
xlat
mov
shr
arpl
cmp
xor
outs
nop
xor
inc
mov
stos
fwait
test
mov
outs
cmp
rcr
loop
and
cmp
(bad)
mov
dec
or
stos
clc
mov
pop
call
inc
sbb
mov
xchg
out
mov
ss
cmp
xor
or
in
push
(bad)
mov
les
sub
adc
sbb
jmp
xchg
add
mov
cmp
jg
fdivrp
push
sbb
mov
xchg
lahf
mov
mov
mov
or
sbb
jl
add
mov
pop
inc
jb
pop
hlt
and
out
xor
cmps
dec
mov
and
(bad)
jle
inc
out
or
mov
je
mov
call
lea
cmp
out
test
out
in
bound
stos
into
inc
pop
ins
js
clc
inc
gs
mov
jecxz
or
adc
xchg
mov
(bad)
cmp
and
int
fild
inc
cdq
xor
mov
pop
cmps
mov
and
mov
mov
popf
mov
fidivr
cld
std
bound
or
mov
cmps
mov
pusha
mov
xor
fcmovnb
sub
retf
repnz
push
shl
shl
and
cmp
cmp
or
adc
dec
jle
out
xcrypt-cfb
cmps
in
ds
into
xor
mov
adc
adc
sahf
pop
push
enter
mov
imul
lds
cmc
jns
jbe
movs
js
inc
stos
es
movs
jne
fiadd
add
fs
arpl
push
sub
aad
jge
jns
ds
pushf
dec
pusha
dec
sti
ss
jg
fadd
jl
out
sbb
push
push
retf
push
push
adc
mov
jb
js
xlat
inc
and
adc
int3
push
in
xchg
sbb
pop
jne
jns
pop
xchg
jl
mov
lahf
retf
jmp
repz
jge
cmc
outs
and
bound
pop
push
pop
pop
shl
lahf
je
cdq
mov
das
pushf
mov
add
or
push
lds
mov
dec
mov
push
(bad)
push
out
dec
pop
jmp
xor
arpl
clc
stos
fwait
xchg
(bad)
clc
ffree
inc
leave
xlat
xlat
add
push
gs
fisub
mov
scas
jmp
test
xor
xchg
cmp
jnp
xor
shr
out
jp
in
xchg
lock
(bad)
in
jns
or
ret
pop
rcr
xchg
push
sti
add
outs
sub
xchg
pop
jae
rcl
cmps
push
mov
loope
sbb
adc
jge
dec
xchg
mov
fiadd
inc
into
mov
fist
movs
or
mov
out
mov
pop
mov
and
dec
cmps
stos
mov
inc
ins
scas
xchg
add
push
ds
mov
xor
pop
cmp
sar
dec
fld
outs
or
and
(bad)
in
outs
not
fldenv
cmp
pop
aas
mov
add
mov
ins
push
mov
xlat
dec
jl
mov
iret
add
jne
add
mov
shr
fsub
ss
das
adc
adc
retf
and
aaa
dec
and
fild
ror
jb
mov
push
punpckhbw
pushf
xchg
shl
stc
inc
adc
jp
push
pop
jo
stos
jb
call
pop
push
inc
mov
mov
sbb
cmps
int
mov
movs
mov
xchg
into
cmp
lods
div
jp
mov
push
mov
ins
or
add
pop
xor
jbe
lea
sbb
mov
xlat
mov
and
jne
cmps
add
das
popa
jge
outs
push
mov
and
cmp
sub
in
xor
xchg
scas
std
stos
ret
dec
dec
icebp
std
(bad)
pop
(bad)
retf
adc
scas
dec
cdq
mov
sbb
push
sub
mov
(bad)
daa
mov
cld
pop
mov
sbb
adc
mov
arpl
mov
imul
js
push
jns
leave
in
fs
and
push
les
pop
mov
aaa
inc
inc
mov
xor
loop
mov
int
retf
ret
aas
icebp
ins
into
hlt
fisttp
sar
push
pop
aaa
push
lods
jg
mov
mov
repnz
dec
pop
pop
cmps
jmp
push
cmc
mov
fsub
das
xor
mov
iret
sub
push
pop
jl
neg
sub
je
jnp
fnstcw
cmp
inc
lock
jmp
fwait
and
xchg
and
xor
add
inc
sub
cmp
scas
std
xchg
push
mov
daa
mov
test
push
ret
xor
out
(bad)
jne
nop
(bad)
hlt
cmp
mov
sbb
add
add
movs
nop
xor
icebp
sub
repz
retf
or
lds
scas
test
adc
mov
mov
fsubr
retf
and
or
jo
cmp
(bad)
add
ret
jnp
mov
push
or
add
adc
cwde
fsubr
je
or
push
mov
sub
pop
scas
push
pop
scas
push
lods
sub
xchg
cmps
dec
jle
jg
pop
aaa
sbb
push
or
mov
enter
mov
jnp
add
mov
mov
neg
mov
push
sub
je
xchg
fistp
mov
jnp
push
imul
xchg
pushf
xor
in
and
das
lahf
shl
and
xchg
xor
sbb
call
and
pop
mov
lahf
and
jmp
test
mov
xor
stos
pop
pop
xor
int3
stos
and
sbb
xchg
outs
inc
mov
adc
sub
js
sti
mov
pop
lods
cdq
sti
jge
jp
rcl
sar
scas
mov
sub
and
out
or
(bad)
hlt
aam
fiadd
in
in
xchg
fist
aaa
adc
inc
lock
sti
sbb
jnp
and
mov
retf
jle
sub
xor
stos
xchg
iret
mov
lds
call
jo
daa
std
loop
cmc
inc
(bad)
sub
mov
sbb
mov
add
arpl
(bad)
shl
cs
jecxz
or
push
ins
adc
or
inc
fsub
push
lahf
std
fidivr
sbb
adc
lods
gs
icebp
jbe
retf
inc
stc
movs
push
cmp
leave
aas
lods
test
iret
scas
sub
lods
pop
push
fild
or
das
bound
xor
cmps
dec
or
(bad)
fsqrt
int3
add
sbb
push
fisttp
aad
add
(bad)
imul
fisub
xchg
adc
xchg
add
adc
xchg
ficomp
test
into
xchg
(bad)
retf
aas
cmp
(bad)
xor
ins
fild
fstp
bound
sub
add
jp
pusha
sbb
sti
pop
cmp
icebp
cmp
std
push
inc
push
rcl
bound
test
xchg
xchg
lahf
adc
mov
push
fsubr
adc
fwait
add
jp
retf
rcl
sub
in
movs
mov
rcl
(bad)
dec
sar
dec
call
xchg
xchg
call
and
and
in
rcr
pop
xor
add
les
fild
xor
imul
xchg
add
clc
jns
push
sbb
pop
shl
sub
sub
mov
push
stos
add
iret
js
dec
dec
ficomp
loopne
pop
xchg
mov
adc
int
std
imul
mov
push
inc
sbb
adc
outs
pop
xor
push
ja
push
iret
in
shr
mov
mov
xchg
jle
loope
(bad)
mov
idiv
stos
sbb
scas
call
cmp
loope
in
unpckhps
jmp
adc
inc
mov
sbb
cmc
aaa
idiv
inc
mov
and
mov
shl
inc
repnz
inc
scas
movs
xchg
sbb
jnp
xchg
mov
lods
test
test
or
adc
xor
mov
xchg
in
xchg
lods
test
les
mov
retf
mov
ins
jl
and
and
repnz
push
loope
add
pop
imul
sbb
(bad)
pop
bound
push
lock
or
pop
sar
mov
dec
or
pop
xchg
(bad)
push
xlat
mov
add
and
outs
lock
jg
int
xchg
aaa
ja
in
sub
add
cmp
retf
loop
sti
cmp
adc
xchg
jbe
cld
(bad)
push
mov
repnz
xor
mov
pop
pushf
shl
mov
shl
adc
jp
xchg
cmps
call
(bad)
pop
in
leave
push
mov
mov
jne
ins
aas
mov
cs
adc
inc
jae
cmp
call
out
fimul
ds
jl
sub
(bad)
mov
leave
jmp
or
xor
out
jmp
sbb
cld
cmp
sbb
push
xchg
in
xor
xlat
pop
xlat
push
push
mov
not
ins
fwait
xor
ja
stos
pop
jg
pop
pop
stos
les
loope
mov
jmp
sbb
mov
imul
mov
nop
(bad)
into
inc
out
cwde
pop
fdiv
and
or
test
jecxz
aam
call
adc
xchg
in
fsubr
imul
in
push
jecxz
and
cmp
cmp
push
repz
cwde
xlat
inc
pop
test
sbb
div
push
out
div
(bad)
cmp
(bad)
(bad)
scas
les
jae
icebp
outs
mov
jns
inc
out
cmps
jg
mov
movs
mov
jmp
cwde
div
ins
outs
inc
fcmovnb
and
mov
and
or
mov
push
push
push
mov
(bad)
mov
rcr
adc
mov
xor
mov
aam
call
add
fild
daa
cmp
pop
mov
pushf
xor
dec
cs
scas
inc
sahf
cmps
inc
nop
pushf
and
ss
dec
sbb
pop
mov
shl
sub
in
lods
adc
into
sbb
ins
cli
icebp
dec
inc
test
test
add
cmp
icebp
add
fdiv
inc
popa
mov
(bad)
scas
mov
jge
cmp
dec
mov
mov
sub
fsubr
and
ds
fcmovu
outs
push
dec
ins
dec
call
push
xchg
sub
jae
xchg
xchg
mov
leave
xor
inc
and
jmp
or
xchg
add
dec
cmp
add
pop
cmp
push
push
pop
clc
cld
fsub
xlat
in
and
jle
sub
pop
aam
jne
ins
fmul
imul
(bad)
sub
test
dec
movs
mov
cmps
imul
jno
jecxz
cmp
adc
push
mov
test
movs
stos
lds
sub
scas
icebp
leave
mov
js
mov
jecxz
aas
nop
jnp
or
stos
in
push
mov
jg
and
cmp
mov
cmp
adc
jl
sbb
lahf
mov
jnp
or
inc
(bad)
push
mov
inc
into
out
xchg
inc
int
fist
mov
cs
inc
xor
jmp
mov
or
jmp
and
xor
loopne
jo
repz
inc
fwait
leave
enter
adc
add
pop
inc
icebp
test
les
enter
sbb
inc
inc
lods
clc
push
fs
leave
in
out
outs
jns
jmp
ret
addr16
mov
xor
imul
jmp
pop
jns
jo
(bad)
inc
in
std
mov
mov
(bad)
push
ins
jl
or
jnp
aad
mov
test
fnsave
or
scas
into
cdq
xchg
push
cmps
sbb
retf
push
xchg
lahf
jl
neg
mov
call
mov
adc
test
cli
xchg
mov
(bad)
xor
call
pop
xor
jmp
mov
jb
test
stos
imul
jb
sti
jns
and
push
inc
fidiv
repz
inc
ret
dec
fs
test
mov
cmps
mov
jb
aad
pop
cwde
lods
add
inc
and
xchg
jge
inc
js
clc
xor
inc
inc
ror
outs
jl
repz
add
and
xor
xor
inc
dec
sti
dec
daa
mov
dec
rcl
or
xchg
and
sahf
rol
icebp
retf
dec
pop
aas
test
xchg
mov
jle
fucom
xor
jecxz
jne
mov
cmps
mov
inc
pusha
retf
mov
inc
call
stos
pop
adc
pop
mov
test
cmp
xchg
sub
ds
push
mov
mul
in
mov
loopne
cmc
jmp
sub
add
and
shl
ja
clc
jbe
xlat
xor
shl
xor
fsqrt
fst
mov
xchg
shr
mov
add
inc
sbb
scas
cld
cmp
fidiv
pop
jl
(bad)
dec
mov
mov
inc
pop
mov
adc
loop
adc
ds
cmp
loop
(bad)
and
fdivp
rol
test
push
sub
add
sub
mov
inc
push
mov
dec
arpl
cmp
cdq
shr
popa
call
push
pushf
(bad)
imul
and
mov
clc
push
das
(bad)
ret
stc
sub
or
cmps
jno
xor
push
scas
loope
ret
je
pop
cmp
lds
cmc
add
sub
rcr
shr
sub
pop
mov
sahf
jge
and
or
cmp
pop
add
add
ins
(bad)
mov
enter
and
stos
inc
ret
fwait
loopne
test
movs
add
mov
das
mov
in
(bad)
jns
pop
ds
std
lds
rcl
sbb
dec
ds
sahf
jne
sar
movs
adc
clc
leave
enter
retf
push
imul
scas
mov
in
test
mov
push
pop
inc
adc
cmp
sbb
jb
fwait
gs
dec
and
adc
das
dec
icebp
scas
dec
mov
js
xor
rol
mov
xor
and
dec
xchg
fcom
pop
pop
mov
icebp
xchg
xor
push
fisubr
lock
lods
inc
xor
xchg
pop
ss
ins
jne
jg
sbb
nop
out
out
and
ret
push
dec
fadd
sbb
pop
cmp
jle
aaa
out
movs
or
and
call
repz
mov
fwait
jne
mov
mov
mov
(bad)
idiv
cmp
test
test
stc
ret
and
or
cmps
dec
cmp
inc
add
in
loopne
and
pop
and
retf
cwde
(bad)
mov
inc
ds
jmp
ret
jle
leave
fisub
leave
adc
cmp
add
push
inc
xlat
cmp
fs
inc
shl
pop
(bad)
mov
out
pop
mov
pop
iret
out
jl
mov
ds
mov
or
(bad)
or
lds
xor
jb
xchg
cmp
outs
xchg
cmp
inc
sar
pop
ins
dec
push
js
mov
or
inc
mov
pop
push
movs
test
imul
ins
gs
aam
jne
outs
mov
out
sbb
lock
ins
pop
dec
xor
inc
ds
mov
mov
xchg
xor
dec
fist
mov
cmps
ja
cmc
mov
jbe
es
fisub
enter
arpl
adc
jmp
and
in
sub
loope
retf
and
mov
adc
pop
out
loopne
nop
xchg
arpl
push
jle
add
adc
je
and
xor
or
repnz
jg
out
retf
push
scas
jmp
adc
lahf
stos
out
push
sbb
out
lods
add
ins
and
dec
lds
stos
leave
xor
lahf
sbb
adc
rcr
xchg
bnd
xchg
push
in
push
pop
lods
cmps
outs
cmps
sar
scas
pop
arpl
fnstsw
adc
addr16
and
mov
lahf
cmp
stc
rol
shl
mov
xchg
test
cld
sub
push
push
and
mov
clc
ret
fisubr
and
add
xchg
pop
mov
pop
pop
outs
inc
outs
fisubr
cmp
(bad)
cmps
jmp
test
or
aam
cmp
xchg
call
(bad)
xchg
or
js
mov
pop
sub
jmp
pop
inc
pop
outs
push
fs
arpl
test
into
lock
sbb
fucomp
cmp
pop
in
iret
and
call
popa
mov
fs
dec
xor
(bad)
fmul
jmp
sbb
jmp
rcl
movs
cli
mov
cmp
lods
dec
ja
xchg
popa
jns
adc
pop
dec
iret
fmul
push
cmp
add
movs
jmp
test
movs
sti
ret
js
test
xor
test
push
xor
iret
aas
movs
inc
out
mov
cmp
iret
fdivr
int
stos
ret
push
hlt
out
aas
xchg
mov
cmps
pop
cmps
imul
scas
mov
into
daa
fistp
(bad)
sub
push
les
add
adc
or
push
push
fwait
and
inc
mov
in
sbb
xlat
sbb
push
push
sub
xchg
xchg
ror
mov
cmp
gs
mov
cmp
in
sub
ret
xchg
xor
iret
sbb
int
xchg
sub
cmp
gs
xor
fs
xchg
xor
mov
inc
shl
sbb
es
sub
xor
cmp
sti
(bad)
hlt
into
fnstenv
lods
cmp
pop
shl
push
cmp
repz
stos
adc
enter
in
mov
inc
stc
pop
jnp
dec
mov
mov
mov
or
ja
or
hlt
and
pop
scas
out
dec
sbb
adc
lods
adc
jae
push
mov
push
jg
pushf
mov
inc
fcom
je
cli
jb
daa
out
ins
pop
nop
mov
scas
xchg
sahf
gs
sbb
and
pusha
ret
add
inc
push
rcr
fist
inc
sbb
pop
hlt
xor
jo
cmp
xor
(bad)
imul
add
push
mov
push
add
shl
sbb
cmps
add
add
jne
call
rol
push
fbstp
mov
int
inc
sub
(bad)
mov
pushf
(bad)
sti
add
fwait
popf
sar
mov
mov
sbb
sub
jo
adc
inc
imul
dec
push
dec
and
pop
jbe
cmp
popf
out
fst
in
pop
jbe
adc
cdq
sub
jno
(bad)
ror
stc
retf
xchg
lods
outs
sbb
jge
mov
mov
or
sbb
mov
adc
mov
adc
pop
push
xor
sbb
mov
rcr
mov
dec
dec
into
nop
jmp
xor
push
das
mov
and
inc
out
test
(bad)
in
inc
fimul
loope
test
faddp
mov
mov
pop
mov
sti
es
xor
cs
mov
aam
inc
loop
mov
push
pop
mov
(bad)
aas
outs
loop
lods
inc
dec
(bad)
xchg
mov
repnz
jecxz
cmp
test
or
xchg
mov
jl
in
jae
or
sub
lods
call
add
cmc
pushf
inc
cs
loopne
adc
ss
mov
xor
clc
in
test
pusha
xchg
xor
sbb
daa
movs
jnp
jmp
jmp
or
loopne
leave
add
jg
or
add
inc
add
xor
test
push
xchg
lods
mov
cmp
lahf
leave
inc
sbb
ror
mov
fidivr
push
dec
inc
(bad)
xchg
sbb
gs
cmps
(bad)
add
pop
jge
inc
and
aad
jae
lds
xor
inc
jnp
adc
neg
inc
sbb
rol
dec
mov
pop
cmp
movs
mov
add
push
in
inc
shl
push
fdiv
jno
aam
arpl
(bad)
je
cmp
pushf
pop
rcl
push
jae
lahf
cmps
sbb
add
xor
adc
repz
movs
or
push
sbb
test
mov
int3
adc
sub
leave
retf
push
cmps
push
jmp
pop
push
enter
data16
mov
outs
pop
inc
dec
push
adc
enter
and
cdq
imul
mov
popf
pop
lea
pop
sub
push
mov
mov
and
push
cli
inc
stos
sub
mov
and
push
sbb
(bad)
sbb
leave
push
out
daa
jo
xor
fldcw
movs
aad
push
push
stos
pop
rcl
push
cmp
xchg
push
sbb
jp
push
xchg
cld
xor
dec
les
aam
jg
mov
aas
lds
gs
mov
xor
mov
(bad)
in
rcr
jnp
pop
and
call
addr16
stos
arpl
test
je
outs
mov
mov
cdq
mov
xor
adc
shr
mov
and
add
push
pusha
push
pop
jp
push
jmp
dec
aad
inc
aas
repz
push
xor
or
mov
jge
push
fstp
lea
pusha
cwde
cmp
and
ds
cdq
fisubr
lods
je
std
(bad)
sti
mov
fst
ja
cli
(bad)
test
cmp
or
jne
cwde
inc
in
loope
xchg
mov
mov
jmp
repz
inc
push
add
jne
clc
sbb
in
sub
push
cmps
sbb
xor
add
in
fwait
test
loop
push
sub
cmp
inc
arpl
cs
adc
jbe
ss
and
jno
push
ret
pop
fld
pop
push
jecxz
inc
call
sub
mov
rcr
out
mov
mov
jns
xlat
inc
adc
push
gs
sbb
outs
rol
jl
xor
add
xor
and
test
dec
loop
std
inc
xchg
push
inc
dec
push
pusha
and
addr16
jge
clc
push
gs
and
inc
outs
ss
push
sub
mov
adc
sbb
mov
(bad)
and
fnstsw
(bad)
cmp
mov
daa
and
int
pop
xchg
enter
lock
fwait
mov
loope
add
int3
sbb
movs
adc
xor
sbb
xchg
and
and
jo
mov
pop
cmp
xor
sbb
fs
mov
mov
cmps
cmp
idiv
inc
into
cmp
fidiv
lods
call
mov
push
leave
(bad)
out
mov
dec
xchg
das
cli
push
xor
loop
mov
add
ss
mov
jg
hlt
push
popa
fnstcw
scas
or
or
mov
pop
mov
retf
(bad)
cmp
adc
jae
inc
stos
mov
fstp
les
in
mov
xchg
sbb
pop
mov
test
(bad)
pushf
adc
in
and
scas
dec
ror
les
(bad)
and
add
adc
addr16
into
sub
iret
or
addr16
pusha
mov
pop
mov
and
les
popf
jp
cli
jne
xchg
cmp
and
ret
repz
cmp
xor
test
or
mov
jbe
in
jb
arpl
test
out
push
arpl
rol
xor
retf
lock
mov
arpl
pop
ins
pop
scas
xchg
js
jle
rcl
mov
mov
aam
mov
pop
repnz
lock
call
and
ficomp
inc
leave
cmove
xchg
repnz
scas
add
push
xor
push
cmp
mov
add
mov
xor
call
retf
mov
js
pop
out
adc
dec
in
and
cmps
xor
std
mov
sar
int3
pop
stos
ins
in
cmp
mov
hlt
sahf
js
push
ret
ss
and
jg
mov
rcl
mov
push
mov
cs
and
xchg
sbb
fadd
push
push
fadd
loop
jae
fcmovbe
push
aad
add
popa
pop
sahf
in
into
sbb
and
inc
and
adc
pop
cmp
add
in
and
mov
out
aas
cs
mov
mov
dec
into
into
aaa
mov
xor
sub
sub
cmp
inc
push
or
mov
idiv
call
push
and
push
push
pop
shl
pop
and
and
stc
xor
xor
add
mov
cld
mov
les
mov
and
aaa
jo
xchg
rcl
add
cld
pop
adc
mov
and
aam
loop
imul
jg
push
mov
or
jae
rol
dec
idiv
(bad)
sbb
addr16
pop
push
cmc
jmp
mov
fsubr
daa
popa
clc
loop
movs
xor
jmp
cmp
ret
mov
xchg
add
mov
push
stos
jge
into
movs
test
adc
out
mov
aaa
lods
xchg
mov
add
xor
jge
inc
int
iret
fbstp
repz
mov
clc
mov
test
sub
fs
jne
ins
xchg
cli
or
push
mov
leave
out
sbb
stc
sub
inc
popa
push
aaa
out
cmp
mov
cld
sbb
ret
add
jo
push
sub
dec
sbb
jmp
pop
repnz
in
fild
adc
jmp
and
int3
pop
pop
adc
lods
or
ins
out
loope
sub
mov
mov
repnz
sbb
in
xchg
dec
jmp
jmp
xchg
cmp
and
sub
sub
push
xchg
sbb
or
xor
mov
test
jb
sub
inc
das
adc
cli
jmp
push
jne
and
pushf
jbe
je
jge
cmp
adc
jne
pop
(bad)
ja
inc
(bad)
rcr
test
cmc
sahf
jo
les
retf
fwait
(bad)
loope
push
inc
and
dec
int3
mov
dec
in
loope
gs
test
xchg
lahf
mov
leave
add
dec
in
jp
jb
sub
xchg
call
loope
inc
xor
addr16
dec
jmp
fistp
sub
sub
xor
lahf
test
or
mov
push
and
mov
push
test
imul
and
dec
jno
mov
cmc
adc
(bad)
jmp
push
lods
ins
adc
mov
loop
xchg
fsubrp
push
int
(bad)
jp
adc
push
ins
bound
arpl
push
data16
xor
fwait
xchg
sub
pusha
xchg
xor
mov
sti
gs
push
xchg
cmc
iret
aam
aam
jle
jbe
loop
in
adc
add
aaa
popa
sub
jae
stos
or
inc
xor
std
jne
fist
int
adc
repz
push
dec
dec
ja
pop
push
and
fsqrt
cmp
xchg
pop
pop
adc
pop
out
and
ror
popa
out
jae
adc
inc
mov
pop
loope
xchg
cmp
mov
inc
cmp
ds
mov
push
sbb
sbb
test
pop
popf
arpl
outs
cmp
cmp
add
ins
(bad)
pop
cs
lahf
and
arpl
push
mov
add
inc
fidiv
jl
retf
out
add
cmp
adc
or
and
lods
pop
out
loopne
jbe
stc
cmp
sub
add
(bad)
jnp
xor
push
shl
push
(bad)
hlt
jb
or
cmp
and
inc
push
lock
xchg
jecxz
add
mov
inc
lahf
stc
xchg
mov
jbe
jo
(bad)
xchg
out
push
or
sbb
xor
inc
add
sub
ret
inc
mov
lds
sbb
icebp
movs
rcr
mov
lods
je
sbb
scas
loop
cmp
test
repz
movs
add
push
(bad)
adc
or
test
sub
and
add
dec
adc
sti
xchg
popa
or
aad
jbe
adc
test
clc
test
ror
xchg
arpl
pop
or
pusha
xor
es
xlat
jle
test
daa
jl
or
loop
pop
bound
add
mov
shr
push
adc
scas
fiadd
sbb
stos
cmc
or
xchg
cmp
shr
jle
outs
lds
inc
push
pop
pushf
add
lds
jbe
sar
and
jle
dec
xor
retf
pop
aam
(bad)
sub
sti
dec
push
mov
das
call
dec
arpl
pmulhw
push
lahf
addr16
adc
leave
mov
clts
pop
inc
xchg
push
das
push
dec
nop
mov
inc
pop
sti
mov
(bad)
jmp
cmp
pop
xchg
sub
and
dec
scas
call
sub
xchg
(bad)
jno
(bad)
sbb
leave
xchg
xchg
mov
add
xor
pop
in
imul
mov
dec
lods
cld
jnp
xchg
je
mov
out
add
mov
outs
xchg
mov
dec
mov
push
or
mov
test
push
or
rcr
idiv
arpl
call
and
aad
retf
xchg
(bad)
mov
jle
iret
mov
mov
dec
cmp
cmp
push
pop
les
dec
and
loope
dec
shr
lods
shl
dec
add
pop
jb
and
sub
mov
dec
retf
push
xor
add
das
arpl
sti
jb
mov
mov
push
mov
sbb
lds
es
pop
jb
xor
rcr
movs
sub
push
jns
xchg
jg
mov
sub
sbb
mov
lods
ja
inc
inc
fs
pop
test
mov
test
stos
(bad)
dec
push
xchg
fsubr
inc
dec
in
retf
mov
or
aaa
not
jbe
cli
and
push
loopne
test
js
sub
jo
dec
loopne
mov
mov
inc
gs
retf
div
jo
xor
sub
loope
inc
repnz
and
das
mov
add
mov
test
clc
xor
pop
and
adc
or
mov
rol
push
fmul
push
rcr
lahf
jae
iret
pavgw
(bad)
fiadd
or
mov
sbb
dec
jge
mov
or
pop
mov
adc
stos
add
ins
daa
and
das
push
aam
lds
cmp
std
xor
xor
mov
push
ins
fcmovnb
aad
clc
inc
push
ds
mov
xchg
mov
fild
test
push
and
ret
repz
add
loopne
xor
mov
std
push
jo
aad
(bad)
jne
dec
jecxz
inc
pop
xchg
fsub
pop
mov
mov
fcomp
inc
retf
cli
mov
fldcw
lock
dec
aam
je
(bad)
je
push
leave
pop
ret
ror
xchg
shr
push
cmps
jno
jg
rcr
cmp
mov
iret
sbb
movs
and
xchg
inc
xchg
mov
add
dec
inc
dec
lods
xchg
adc
xor
sti
daa
xchg
and
es
and
lea
call
ret
and
cmps
test
inc
clc
movs
(bad)
dec
gs
test
adc
xchg
cmp
pop
arpl
jae
ins
or
daa
rol
inc
jns
pop
or
inc
jae
imul
cmp
in
scas
mov
ret
xor
test
mov
icebp
cmp
mov
xor
jecxz
push
aam
push
pop
fistp
mov
outs
mov
inc
sub
push
jmp
out
ret
xchg
test
nop
outs
cmp
dec
xor
mov
in
push
fs
xor
mov
push
xor
outs
shl
outs
(bad)
shl
das
sub
mov
es
dec
pusha
cmps
je
jae
push
das
lock
movs
inc
retf
sbb
inc
mov
add
sub
scas
and
push
cmp
add
mov
add
dec
or
push
jno
and
adc
cdq
popf
test
xor
movs
push
inc
clc
data16
xchg
jne
es
in
push
pop
fbld
xchg
cwde
push
push
dec
mov
mov
ret
in
push
out
inc
pop
mov
push
cs
add
inc
dec
lea
mov
in
das
ror
lea
into
cmp
and
movs
push
es
fld
repnz
xchg
clc
shr
mov
adc
push
rcr
cdq
jnp
sbb
inc
pop
pop
jmp
shl
push
mov
rol
or
add
mov
or
ret
mov
sbb
dec
pop
fcmovnbe
and
fwait
sub
dec
pusha
mov
push
enter
ret
sub
cmp
cdq
ret
mov
sahf
outs
or
int
inc
dec
sbb
mov
adc
jnp
(bad)
fistp
jge
std
pop
clc
or
movs
fwait
je
or
cmp
cmp
mov
(bad)
jg
push
lds
push
ret
mov
cmp
cmp
scas
jnp
pop
lds
mov
xor
call
and
pusha
idiv
cmc
push
sahf
jo
test
fisubr
test
mov
dec
dec
xchg
shl
xchg
in
enter
mov
xchg
sub
dec
lock
or
sub
push
jns
ffree
ins
out
in
sti
shl
pop
sbb
inc
(bad)
in
dec
ret
fnstenv
mov
mov
aad
cmp
inc
int3
std
adc
iret
or
lods
add
stos
push
inc
jae
addr16
gs
cmp
xchg
inc
int3
pop
enter
enter
dec
and
sub
ret
xchg
pushw
sahf
jbe
scas
mov
xor
mov
adc
mov
sbb
mov
sub
das
jp
jnp
fnsave
xor
aam
imul
test
mov
xor
inc
hlt
gs
adc
or
jae
pop
in
scas
inc
inc
mov
sub
fwait
add
sub
xor
(bad)
iret
mov
punpcklbw
cmps
push
mov
mov
push
lahf
push
js
xchg
adc
xlat
jns
pop
sub
xor
or
aas
pop
stos
jg
or
push
mov
popf
std
fldenv
arpl
and
xchg
jge
jmp
sbb
or
jmp
enter
cld
push
adc
cli
(bad)
out
xchg
jge
fbstp
mov
test
in
and
rcr
add
repnz
fdiv
sub
push
shr
cmp
mov
pop
inc
retf
ret
bound
xor
pop
enter
or
mov
cdq
add
mov
jo
into
inc
pusha
dec
jnp
xchg
push
leave
rol
and
sbb
inc
xchg
sbb
dec
scas
add
int
dec
pop
sub
mov
jne
mov
sbb
sahf
pop
xchg
(bad)
adc
lea
push
add
test
in
jle
sar
mov
aad
sbb
push
sub
dec
scas
aaa
mov
bound
sub
sbb
imul
ds
adc
aaa
and
mov
movs
dec
test
jae
(bad)
fist
and
idiv
ds
mov
mov
inc
mov
adc
add
iret
test
retf
dec
xor
test
pop
leave
mov
ficom
mov
adc
ret
inc
mov
xchg
mov
sub
push
loop
mov
fdivr
mov
js
adc
mov
in
sbb
jmp
pop
lahf
mov
shl
mov
mov
js
inc
pop
cdq
dec
and
out
sti
sbb
cmp
in
jp
in
xchg
inc
dec
sub
jmp
aaa
imul
(bad)
mov
jecxz
xor
or
fiadd
(bad)
loop
push
inc
ja
ins
sub
test
ret
std
repz
cmps
std
fwait
into
(bad)
adc
outs
cmc
pop
pushf
xchg
lods
adc
jp
dec
and
out
test
push
arpl
cld
inc
imul
push
mov
inc
loope
data16
clc
pop
test
inc
xor
aaa
mov
xor
add
(bad)
push
das
shr
jp
mov
loopne
or
fldcw
ret
aaa
cld
loopne
dec
adc
pop
push
jle
sbb
fdiv
jg
shl
push
mul
jae
bound
sbb
pusha
out
jnp
call
sbb
shl
xchg
leave
xchg
shl
fdivr
mov
or
test
mov
clc
bound
cmps
std
push
sub
in
fwait
repnz
fiadd
call
lods
cmps
sbb
mov
out
mov
inc
jmp
mov
std
test
jb
push
mov
xor
mov
iret
mov
adc
push
xor
and
inc
mov
retf
setge
cmc
push
jnp
stos
cld
sahf
push
jl
and
repz
mov
pop
and
fld
inc
cmp
test
lods
sub
stos
in
sub
mov
aad
mov
loope
mov
push
pop
jns
fistp
(bad)
into
lock
fldcw
mov
mov
fistp
mov
je
scas
hlt
in
push
test
sar
mov
ds
add
jge
xor
sub
test
add
xchg
cmps
repnz
adc
in
retf
enter
minps
lock
in
cdq
sbb
imul
fnstsw
mov
xchg
add
push
sbb
pop
enter
loop
add
retf
xor
aad
xadd
add
lock
popw
arpl
jg
(bad)
mov
ds
mov
jge
fldcw
cwde
je
inc
pop
pop
bound
add
shl
clc
ret
test
lods
xchg
dec
cs
push
or
mov
mov
shl
(bad)
jmp
adc
mov
xchg
enter
mov
push
push
(bad)
stos
and
in
stos
cmp
into
push
dec
jecxz
dec
cmp
jne
(bad)
xor
xchg
ins
jp
cmc
inc
adc
adc
movups
cmp
and
imul
jmp
dec
in
rcr
sub
lea
mov
call
cmc
in
aas
sub
jl
or
sub
call
and
loopne
pop
jmp
aad
repz
outs
fmul
push
add
inc
add
sbb
test
mov
(bad)
or
loope
fcomi
add
sar
push
ror
adc
inc
call
mov
(bad)
psubsb
cmp
pop
aaa
ret
and
sub
scas
fsubr
scas
xor
addr16
mov
nop
mov
add
pop
ror
jne
shl
push
leave
pushf
cwde
or
push
or
imul
or
jp
ret
push
or
jmp
gs
xchg
xor
mov
or
and
sbb
sar
xchg
mov
sub
pop
and
ret
xor
xchg
cmps
inc
nop
mov
add
loope
call
aad
data16
std
pop
jp
jle
sbb
mov
cmps
cmp
adc
fs
fs
dec
imul
scas
adc
loopne
push
sub
or
pop
jecxz
das
mov
addr16
ins
popa
ds
mov
push
adc
hlt
cmp
mov
inc
fdivr
xchg
xchg
xor
sbb
inc
mov
shl
mov
inc
addr16
pop
das
push
(bad)
jns
or
mov
repz
jae
loop
dec
shl
xchg
push
xchg
mov
push
mov
in
dec
in
sub
inc
pop
sti
mov
shr
mov
push
inc
nop
dec
add
sar
push
xchg
xchg
outs
xchg
adc
xchg
outs
dec
inc
sub
out
push
aad
inc
sub
retf
stos
jle
jns
neg
aas
js
call
xchg
inc
pop
xchg
fs
daa
ja
ds
and
call
out
out
xor
or
cdq
inc
addr16
rcr
aad
scas
sub
leave
adc
mov
out
in
ss
mov
(bad)
shl
dec
imul
lods
test
mov
std
add
int3
pop
loope
(bad)
mov
sub
jmp
pop
add
push
int3
inc
test
rcr
jbe
into
inc
and
push
aaa
jb
pop
jo
add
in
(bad)
mov
call
gs
mov
mov
repnz
mov
cmp
les
cs
(bad)
mov
push
mov
mov
sbb
jle
cmc
xchg
add
repnz
fst
stos
fisttp
jbe
jbe
outs
inc
xor
mov
xchg
inc
jno
popa
mov
mov
jl
or
mov
push
in
and
fcom
cld
cmps
data16
jle
xchg
fwait
outs
or
ds
jae
loope
inc
mov
cmps
out
mov
cmp
mov
out
in
fst
mov
push
xchg
inc
pop
repz
imul
test
fidiv
(bad)
ror
popa
push
lock
ins
imul
pop
js
test
adc
int3
jl
push
(bad)
pop
daa
bound
clc
mov
mov
inc
push
jl
fimul
push
mov
inc
mov
sbb
xor
add
jae
imul
aaa
push
mov
push
xor
xor
adc
mov
fcmovnb
pop
rcl
movs
adc
leave
fnstenv
jno
sbb
adc
xchg
in
adc
repz
xchg
int
pusha
out
add
mov
lods
lds
pop
add
stos
jnp
cmp
je
dec
aam
push
bswap
add
fld
fsub
lahf
jbe
jl
sub
or
iret
fsubr
xlat
jp
dec
les
out
jb
nop
mov
dec
and
dec
test
repnz
adc
loopne
arpl
pop
nop
in
clc
shl
(bad)
push
test
lea
push
cmc
pop
scas
sub
fld
dec
lahf
dec
xor
test
std
mov
lods
pop
mov
data16
les
mov
mov
push
push
xchg
in
dec
imul
sar
jo
add
not
pop
adc
cmp
cmp
or
xchg
ja
and
xchg
adc
jno
dec
adc
xlat
mov
jp
cmp
sub
mov
mov
lahf
or
mov
push
push
sbb
mov
dec
pop
jnp
(bad)
cmp
add
rol
aad
or
ins
jmp
inc
test
daa
inc
push
movs
mov
aaa
mov
js
repnz
adc
fisub
fsubr
cmp
mov
sub
(bad)
xchg
jmp
cmp
sub
or
js
das
sbb
add
inc
jg
sbb
fwait
xor
and
in
(bad)
ficom
lock
out
cmp
call
xchg
sbb
push
into
or
enter
int3
mov
add
push
enter
jge
dec
or
dec
loop
and
push
inc
int
mov
loopne
mov
scas
cmp
cli
xlat
outs
mul
pop
(bad)
jne
(bad)
or
lods
and
dec
scas
mov
mov
xor
aaa
popf
mov
fdivr
pushf
pop
add
jge
sbb
in
lds
push
test
in
inc
and
or
ficom
das
xor
jmp
or
clc
and
push
mov
adc
pop
ins
sub
sub
mov
dec
or
mov
es
dec
pop
lock
(bad)
adc
lahf
pop
inc
sub
je
push
out
jae
shl
cdq
retf
cmps
mov
mov
cmp
inc
pop
jno
les
jnp
or
iret
cmp
dec
nop
mov
shl
or
(bad)
cmp
rol
sub
sub
jmp
or
pop
push
sub
sub
lock
popa
inc
cwde
dec
(bad)
lock
sbb
stos
imul
in
or
inc
pop
(bad)
adc
push
aam
xlat
je
adc
push
cmp
bound
jg
pop
call
jnp
out
shl
push
and
inc
add
xor
jecxz
lahf
daa
and
push
or
rol
push
and
rol
or
adc
xchg
add
mov
or
cmc
loope
fcmovu
je
fisttp
ret
sub
sbb
pop
adc
mov
inc
scas
or
lea
mov
mul
xor
nop
pop
sahf
mov
sbb
pusha
mov
bndldx
fs
stos
pop
outs
cdq
sub
dec
cmp
call
sbb
and
ds
or
dec
ss
and
push
add
ja
(bad)
mov
xlat
popf
and
push
sbb
push
test
data16
jge
push
loopne
dec
iret
xchg
ds
daa
out
jnp
mov
bound
dec
lods
imul
lea
es
jecxz
sar
jecxz
dec
push
out
outs
mov
ror
sar
xor
cmp
out
test
jo
iret
scas
(bad)
sub
or
pop
aam
(bad)
mov
iret
pop
mov
mov
int
int3
ins
dec
sub
cwde
mov
xor
sub
popa
rcl
add
pop
jmp
and
mov
cmp
mov
lsl
dec
loope
leave
icebp
(bad)
ret
mov
xchg
(bad)
popa
xor
es
ds
cmps
push
xchg
or
aaa
jns
int3
popa
push
sbb
sub
test
mov
add
push
movs
addr16
and
ins
jns
inc
or
push
icebp
(bad)
int3
lds
mov
xchg
mov
adc
mov
jge
pop
movs
add
cdq
mov
fwait
mov
push
sub
adc
cli
or
out
xchg
and
push
push
cmps
pop
or
pop
retf
sbb
adc
mov
outs
pop
and
out
scas
nop
es
xchg
rcr
fst
dec
push
popf
dec
cmps
xlat
jmp
cmp
inc
enter
pop
push
mov
repz
push
add
es
fld
mul
dec
push
ja
scas
jmp
popf
aam
and
(bad)
dec
ds
sbb
ss
mov
and
xor
call
add
mov
jns
mov
pop
iret
push
shl
mov
jb
in
sbb
aad
(bad)
icebp
push
retf
retf
rcl
mov
dec
addr16
fs
and
mov
clc
popa
sub
sbb
xchg
fwait
cmp
mov
add
stos
or
(bad)
int3
adc
adc
dec
test
bound
xchg
mov
mov
xor
call
cmp
inc
xor
mov
jnp
ss
jmp
jne
dec
sub
leave
or
test
fidiv
mov
jl
aas
cmp
xchg
xor
mov
imul
cmc
(bad)
cmp
jecxz
xchg
aam
test
scas
jns
mov
test
push
loop
mov
shl
sub
(bad)
cmc
arpl
xor
jg
in
outs
sahf
mov
pushf
lahf
stos
push
js
fwait
pop
dec
inc
nop
push
add
mov
sub
add
add
ror
gs
lea
aas
scas
xor
and
sub
ja
cmp
add
mov
test
arpl
xor
ss
pop
imul
call
sti
cmp
fmul
xor
loop
lods
adc
push
sub
aad
cld
dec
out
imul
mov
mov
(bad)
int3
in
xchg
cmp
and
add
shl
push
mov
(bad)
in
lock
jbe
std
push
ret
leave
aaa
jmp
sahf
shr
jmp
mov
mov
retf
jno
xor
push
mov
mov
mov
push
leave
cmp
adc
out
daa
xor
jns
xor
stc
cmp
int
int
scas
fucomp
inc
pop
dec
inc
(bad)
in
fiadd
push
iret
test
outs
jmp
jb
lea
or
cmps
lock
loopne
(bad)
test
dec
adc
push
out
adc
ss
fdiv
add
xor
xchg
gs
xor
sti
pop
pushf
sti
test
dec
clc
popa
jnp
pop
xchg
cwde
cmp
mov
jl
popf
sub
sbb
mov
addr16
aad
imul
(bad)
std
jmp
scas
ss
pop
adc
and
ss
cmp
jle
add
adc
jge
scas
push
xor
mov
int
pop
mov
adc
icebp
mov
inc
push
mov
cmp
cmc
pop
enter
sub
inc
mov
ss
outs
test
add
lea
mov
push
int3
imul
add
in
pusha
pop
cmp
xchg
rcl
xor
sbb
inc
pushf
inc
ins
dec
jp
inc
test
jnp
cwd
fadd
bound
cld
cmps
lahf
popf
imul
test
xchg
loop
xor
aam
stos
movs
pop
sbb
jbe
in
pushf
stos
test
imul
gs
xchg
push
addr16
pop
les
loopne
loopne
jle
or
sub
(bad)
movs
xor
xchg
aas
dec
and
mov
push
retf
push
(bad)
call
in
fs
and
test
repz
dec
cmp
xor
xor
shl
adc
and
or
jb
icebp
lods
ins
mov
xor
mov
push
sbb
adc
ffree
push
xor
jns
pop
mov
and
loope
iret
jnp
cld
pop
mov
add
aad
inc
ja
add
mov
or
test
in
aaa
adc
push
fsubp
add
lods
adc
push
add
lahf
cmp
test
(bad)
jno
jae
mov
xchg
inc
cs
gs
jecxz
mov
adc
cmps
sbb
shr
fld
into
add
rol
xchg
inc
imul
sti
push
mov
mov
jg
or
mov
and
push
dec
das
cmp
shl
inc
or
test
push
rcr
daa
dec
out
mov
inc
sahf
setns
adc
mov
and
jns
lods
xchg
jo
in
mov
jbe
sub
push
test
nop
or
loopne
pop
test
iret
mov
and
add
xor
loopne
fucom
mov
sahf
arpl
retf
cmp
push
add
sub
push
sbb
js
and
aaa
pop
adc
rol
sbb
shr
std
lods
outs
stos
add
ret
(bad)
ficomp
pop
sub
fcomp
push
push
push
out
sub
sar
out
iret
les
dec
xchg
repz
push
mov
ds
add
cwde
ret
(bad)
pop
ins
mov
dec
dec
rol
dec
jmp
cli
cld
lock
dec
out
sbb
enter
aad
mov
sub
(bad)
imul
out
sub
mov
ins
adc
cld
fwait
dec
adc
out
shl
outs
imul
mov
enter
mov
test
sub
lea
add
or
xchg
mov
mov
and
or
xchg
hlt
mov
(bad)
ror
xchg
lods
call
out
inc
fldcw
and
fcom
pop
lods
jb
ins
popa
jmp
(bad)
mov
adc
xor
add
icebp
ja
push
scas
bound
sbb
mov
or
(bad)
mov
cs
mul
inc
and
in
cdq
xchg
push
cli
push
in
mov
adc
sbb
sti
xlat
dec
dec
xchg
mov
(bad)
mov
xor
cmp
push
sahf
int
dec
mov
pop
mov
cmp
adc
mov
jno
sbb
xchg
imul
pop
into
add
mov
jl
rcl
jmp
dec
les
(bad)
push
les
in
and
mov
sub
in
test
scas
dec
adc
leave
push
add
out
es
leave
jge
mov
lods
sub
push
lahf
or
adc
mov
jmp
out
pop
test
xchg
or
js
lahf
mov
test
xchg
mov
cmp
adc
and
jmp
mov
jno
outs
sub
int3
lods
jmp
std
lea
repz
mov
and
mov
push
or
pusha
and
dec
cmp
push
pop
js
adc
lahf
pop
pop
shl
nop
or
add
(bad)
xlat
in
repnz
jle
inc
push
push
dec
add
pop
jmp
jmp
mov
mov
sub
sti
inc
fbld
pop
dec
stc
or
jns
jle
xchg
add
lahf
add
push
loop
stos
push
and
aam
fist
ds
xchg
stos
into
in
pop
mov
scas
js
push
sti
sti
test
xchg
(bad)
pop
mov
mov
fmul
inc
outs
in
and
lods
xchg
test
jp
cmp
push
mov
cmc
retf
xor
stos
cdq
adc
cmp
cmps
out
fsubr
neg
dec
iret
std
mov
or
sub
cld
cmp
int
lods
lods
int
jne
inc
test
jmp
fwait
mov
inc
shl
je
stos
pop
jp
dec
test
repz
call
inc
pop
sahf
mov
dec
stos
outs
in
dec
add
fdivr
pop
inc
mov
jp
cdq
shl
cmp
sbb
jecxz
inc
xchg
ins
int
icebp
cld
jnp
sub
sbb
ds
jmp
call
and
(bad)
test
adc
push
mov
ror
pop
inc
cmp
in
jmp
cmp
and
ror
std
or
xchg
mov
rcl
pop
loop
cmp
popa
std
cs
xchg
mov
jae
cmp
sbb
inc
mov
cld
xor
mov
jmp
ja
mov
mov
stos
shr
dec
jmp
jnp
data16
dec
hlt
push
mov
dec
pop
in
xchg
ins
in
lahf
or
test
popf
adc
out
cmp
adc
jbe
cmc
add
daa
xchg
lea
add
int3
sub
jecxz
add
sbb
das
xor
jo
out
xor
outs
mov
jg
test
sti
aam
push
fwait
addps
push
mov
call
cs
cmc
push
dec
pop
inc
outs
adc
push
arpl
mov
mov
inc
sbb
or
out
pop
cmps
mov
sar
dec
pop
cmps
mov
rcl
aam
retf
or
je
mov
add
daa
or
mov
mov
mov
(bad)
mov
sub
cmps
dec
jge
stos
pop
ret
push
fst
jae
fstp
or
xchg
div
pop
dec
and
lods
adc
sbb
dec
jge
lds
test
nop
ror
mov
imul
pop
push
aas
test
push
jle
cs
pushf
repnz
xchg
aas
sbb
cmps
or
mov
pop
add
add
dec
call
cmp
les
imul
icebp
xlat
in
inc
sub
inc
cwde
or
cmps
mov
jns
pusha
cmps
mov
jns
xchg
ror
mov
ret
lds
push
adc
jno
pop
dec
test
pop
mov
dec
xor
mov
gs
dec
dec
push
xor
xor
das
push
outs
jns
jmp
jns
stos
inc
add
out
lock
fwait
xchg
mov
aam
call
sub
sbb
js
lds
mov
das
cmp
mov
icebp
mov
dec
add
jmp
out
les
xor
aam
adc
pop
imul
out
sbb
cmp
or
daa
iret
adc
xor
fmul
jmp
jecxz
push
and
aad
mov
xchg
leave
xor
ja
push
lahf
dec
and
add
xor
and
xchg
mov
test
mov
pop
or
sub
daa
rcl
inc
jns
xor
add
push
jbe
(bad)
push
aam
cdq
call
inc
call
leave
cwde
push
cmp
in
lds
pop
(bad)
scas
adc
push
adc
add
aas
pushf
push
je
fcmovnb
sub
sti
aad
sub
in
outs
in
push
dec
in
pop
sub
xor
jb
push
int
adc
fisttp
mov
sub
jbe
sbb
xchg
sub
dec
mov
mov
or
push
xor
rcl
cmp
ins
jns
fiadd
(bad)
aam
cdq
inc
inc
and
shl
int3
in
or
fdivr
sbb
mov
cmp
sub
and
aad
ins
in
retf
movnti
jo
test
sbb
xchg
dec
jae
jmp
mov
jp
jns
js
bound
sub
mov
pushf
addr16
mov
pop
and
mov
xchg
push
shr
mov
mov
sbb
jne
mov
jg
xchg
retf
aad
adc
fmulp
sub
(bad)
js
pop
shl
mov
test
les
mov
pop
imul
add
scas
and
inc
jge
scas
mov
and
cvtdq2ps
mov
inc
mov
cmps
push
out
push
mov
retf
mov
rcr
jmp
dec
aaa
outs
xor
xor
aas
les
dec
out
cmps
mov
xor
and
sbb
(bad)
imul
xor
or
retf
(bad)
xchg
push
mov
in
jg
jmp
dec
jge
dec
inc
mov
sub
mov
(bad)
mov
dec
addr16
add
movs
into
call
(bad)
(bad)
jmp
out
push
or
and
gs
dec
pop
rcl
dec
stos
inc
cwde
ins
repz
jmp
xchg
ds
outs
(bad)
push
mov
dec
stos
or
or
push
ins
or
repz
or
cwde
or
cmp
nop
or
cmc
push
movs
jmp
or
lea
xor
add
(bad)
push
pop
enter
jge
stos
pop
cli
sub
fld
loope
scas
jp
jmp
out
push
pop
mov
xlat
shr
cmp
lea
pop
dec
and
int
call
adc
fstp
fild
in
and
(bad)
(bad)
adc
ds
jbe
cmp
mov
inc
jecxz
cmps
mul
movs
xchg
(bad)
fimul
cmp
test
bound
dec
adc
fwait
jo
sub
cmp
mov
in
mov
sub
xchg
test
jl
sub
test
mov
cmp
shld
jae
call
jnp
mov
in
fcmovnu
pop
sahf
shl
or
fwait
popa
mov
rol
imul
mov
dec
push
addr16
cld
and
or
pop
xor
lods
pop
sbb
cs
loope
imul
addr16
cmp
dec
sub
cdq
fadd
adc
iret
lock
iret
push
jnp
imul
popa
rcl
add
adc
loope
icebp
xor
sub
repz
mov
mov
adc
iret
xchg
mov
hlt
movs
and
jecxz
out
sbb
jbe
sbb
retf
ret
cli
jns
sahf
popf
pop
push
cmp
repnz
addr16
mov
stos
sbb
retf
sub
call
mov
arpl
mov
push
mov
shl
add
sbb
push
lahf
(bad)
cmp
xor
push
sub
push
mov
test
aas
sub
sub
jp
pop
ret
(bad)
dec
loopne
xchg
sahf
inc
xchg
mov
or
jle
jbe
dec
fisttp
xchg
sbb
ret
aas
cmps
dec
push
icebp
sbb
fnstsw
lock
rcr
sbb
fistp
data16
mov
sti
mov
cmp
into
inc
and
(bad)
xor
fwait
enter
loop
mov
sahf
in
scas
mov
mov
fxch
jg
push
shl
pop
(bad)
push
jbe
sub
xchg
fs
dec
out
push
add
jb
cmp
jb
jmp
test
adc
and
mov
or
cdq
(bad)
ror
call
aad
shl
jo
(bad)
sahf
gs
mov
and
scas
xchg
sub
xchg
retf
ret
scas
fmul
aam
ins
sbb
sub
loopne
jmp
push
inc
stos
jmp
hlt
add
mov
mov
cmp
mov
sub
jne
inc
push
inc
cmp
pop
std
pushf
movs
aad
(bad)
arpl
mov
mov
and
out
loopne
adc
and
je
clc
cmc
out
jns
jmp
je
cdq
sbb
pop
sbb
or
test
inc
dec
retf
mov
lahf
movs
mov
mul
mov
out
pushf
jno
lock
mov
inc
scas
sbb
outs
pop
sahf
or
jecxz
das
out
fdiv
xor
cld
data16
mov
(bad)
cmp
repnz
mov
sbb
stos
xor
sbb
cli
sub
retf
fldcw
jnp
sub
mov
ss
mov
(bad)
lds
cs
jl
inc
fsub
jecxz
and
mov
sub
ja
add
mov
jge
add
mov
push
sbb
lds
fdiv
fdivr
aaa
and
cs
ret
das
xchg
push
mov
sbb
inc
mov
cmps
fadd
(bad)
dec
push
mov
in
jo
in
into
push
xor
out
mov
push
cmp
mov
xor
enter
cmp
icebp
jp
or
mov
(bad)
xchg
jle
cmps
mov
repz
in
mov
inc
and
mov
or
dec
adc
ds
pop
adc
and
add
dec
add
add
enter
add
stos
inc
das
movs
dec
adc
stc
sub
rcr
in
int3
add
jo
xchg
mov
pushf
loope
xchg
fldenv
fsubrp
cmp
jecxz
add
clc
pop
sub
add
out
pop
jns
inc
loope
mov
call
or
jl
ds
outs
stos
fadd
inc
xor
ja
aaa
in
push
or
dec
sub
add
sub
shl
jmp
int
nop
pop
xchg
mov
add
retf
mov
fs
gs
(bad)
mov
xlat
xor
pop
and
cmp
int
out
cmp
imul
mov
jmp
or
pop
mov
sbb
test
sub
pop
pop
cmp
aam
sub
leave
or
bound
inc
xchg
and
js
xchg
sub
dec
lock
add
or
inc
jp
lods
mov
jmp
enter
pop
mov
push
pop
in
jbe
push
jb
sub
mov
mov
(bad)
jecxz
call
outs
xchg
ds
mov
loopne
outs
jno
cmps
or
ror
inc
or
call
fs
pop
ds
or
(bad)
call
pop
(bad)
retf
xchg
fwait
xchg
xor
sbb
jne
lahf
add
fild
scas
sbb
sbb
dec
xchg
cmp
cmps
mov
push
xor
(bad)
popf
lods
sbb
cmps
int3
pop
mov
xchg
repnz
clc
dec
lds
imul
mov
inc
shl
jne
imul
movs
or
cmp
pop
cmp
ret
jmp
imul
leave
pop
addr16
fld
mov
xchg
std
int3
fucomi
mov
pushf
push
aaa
or
adc
and
xchg
xor
xchg
arpl
push
mov
cmp
cdq
scas
xchg
inc
or
fistp
ss
mov
mov
push
lahf
cs
mov
in
xor
clc
ins
jnp
mov
xchg
and
call
cmp
cs
stos
xor
pop
pop
push
cmps
icebp
mov
mov
push
out
imul
rcpps
jl
test
pop
(bad)
popa
inc
pop
gs
icebp
test
out
imul
retf
mov
sti
nop
mov
mov
inc
jbe
mov
mov
dec
lods
push
adc
scas
icebp
je
mov
mov
mov
push
sub
lahf
loop
sub
aad
clc
fs
push
cdq
or
sbb
push
push
fcmovnb
jmp
cmp
add
fbld
sub
jae
rcl
and
les
xor
cmp
mov
test
popa
cmps
in
test
mov
cdq
mov
push
movs
dec
jae
add
inc
add
out
ret
xchg
push
fs
inc
adc
pop
sahf
xchg
mov
jmp
push
movs
and
adc
lods
or
mov
sub
add
cmp
inc
jae
pop
daa
xor
retf
outs
pop
mov
xchg
pop
icebp
test
dec
arpl
mov
aas
sub
stc
(bad)
(bad)
mov
je
sar
adc
dec
dec
push
sbb
push
or
or
imul
cmp
push
leave
imul
jns
(bad)
mov
dec
inc
mov
jnp
ins
fdivr
mov
retf
hlt
mov
push
jnp
and
sub
call
or
repz
sub
test
xchg
pop
out
dec
push
mov
mov
mov
xor
stos
int3
lahf
call
aad
sbb
or
mov
imul
jnp
out
pop
lods
dec
push
fidiv
out
mov
mov
data16
push
push
push
nop
enter
mov
sbb
jecxz
retf
(bad)
sti
cmp
sub
ja
int
into
inc
(bad)
jecxz
mov
iret
xchg
cmp
or
mov
push
mov
sbb
retf
mov
fwait
inc
pop
lahf
add
push
mov
pop
adc
repz
imul
pop
ret
jmp
aaa
jb
(bad)
data16
lahf
cmp
aaa
inc
adc
fisttp
add
sub
mov
shr
sar
xor
dec
add
mov
and
push
or
ins
daa
mov
daa
jmp
(bad)
fwait
iret
xchg
push
mov
scas
sub
pop
mov
scas
push
dec
inc
add
sbb
icebp
lock
ror
mov
dec
fadd
or
ret
jnp
jo
sub
jp
(bad)
lods
(bad)
ror
test
inc
stos
and
adc
inc
dec
xor
dec
jle
test
dec
aaa
dec
icebp
push
mov
ret
mov
jno
inc
dec
jmp
push
dec
jge
jns
adc
push
mov
stos
sbb
xor
mov
js
fcomp
sbb
cmp
jne
adc
xchg
inc
hlt
xchg
adc
shl
and
adc
jecxz
shr
in
stos
xchg
push
xchg
and
std
lds
lahf
mov
aaa
pop
sbb
pop
xor
fdiv
ja
jns
xchg
add
sbb
inc
out
or
push
xchg
bound
or
mov
js
data16
ret
push
mov
pushf
sbb
jns
push
add
mov
rol
mov
cmp
cmp
or
jnp
pushf
pop
sti
pushf
jbe
or
cli
pop
cli
aam
ins
test
sub
clc
stos
cmc
out
(bad)
(bad)
aad
mov
add
pop
cmp
sbb
fdiv
sbb
cmp
loopne
repnz
in
mov
imul
cmp
test
sar
jl
imul
scas
dec
dec
jbe
xor
mov
fcomp
push
lds
adc
idiv
popf
cmps
pop
xor
and
cmps
jg
push
adc
nop
dec
xchg
das
xor
outs
xchg
sbb
xlat
addr16
enter
inc
mov
push
jno
cld
fsub
in
(bad)
xor
pop
cmp
xor
or
imul
dec
ret
push
sar
push
das
test
dec
mov
cs
les
dec
jbe
jmp
cmp
hlt
adc
pop
es
(bad)
and
push
out
mov
nop
addr16
sub
jg
or
xchg
mov
pusha
pop
push
pop
push
jmp
call
add
arpl
ret
lahf
or
mov
and
dec
sbb
dec
gs
movs
and
jo
push
sbb
ror
cmps
jle
jns
adc
push
imul
nop
or
dec
aaa
mov
or
dec
xor
pop
loop
(bad)
mov
es
adc
fsubr
mov
jp
test
mov
aaa
(bad)
popf
in
or
ret
dec
dec
dec
sbb
sub
dec
xchg
xchg
xchg
dec
and
jb
push
pop
clc
ds
and
stos
mov
mov
sub
dec
popf
xchg
mov
push
jo
mov
fdivr
aad
leave
out
and
xchg
lock
sbb
imul
jmp
test
xchg
in
jmp
xchg
into
in
sub
push
pop
ins
jo
fcmovne
enter
dec
imul
mov
(bad)
pop
pop
rcl
cmp
jo
mov
mov
add
in
(bad)
ins
xor
and
ds
xor
sub
fwait
jl
dec
adc
mov
clc
call
add
jmp
(bad)
(bad)
out
(bad)
movups
dec
outs
(bad)
iret
arpl
fidiv
shr
jp
cmp
imul
mov
loop
ret
xchg
push
mov
jmp
shl
daa
in
add
cmp
xor
in
call
dec
in
repz
mov
ret
sub
in
dec
add
idiv
rcr
and
jge
add
push
adc
pushf
sub
(bad)
mov
and
lods
mov
pop
jmp
mov
lahf
(bad)
outs
cmps
xchg
dec
inc
addr16
ins
(bad)
adc
pop
mov
add
adc
mov
and
pop
stos
ficomp
in
sub
neg
push
and
popa
jge
sar
sbb
xor
mov
lods
xor
les
add
cs
movs
xchg
cwde
sub
cmp
push
and
bound
cs
push
xchg
mov
sbb
mov
inc
test
test
inc
(bad)
dec
sti
les
and
fs
mov
sub
cld
push
lods
scas
pop
sbb
nop
scas
adc
mov
mov
mov
cmp
enter
pop
iret
outs
jmp
fcom
dec
ret
into
addr16
add
mov
adc
test
int
jns
popa
hlt
lahf
push
int3
dec
aam
inc
loopne
mov
mov
movs
clc
mov
(bad)
jmp
mov
pop
cs
xor
sub
xchg
je
or
and
jne
cdq
cmps
xor
cli
int
dec
mov
and
aam
dec
xchg
mov
repz
mov
out
jo
adc
test
cmps
out
rcl
push
into
lock
xor
(bad)
mov
int
scas
jp
fild
add
fcmove
shr
loopne
lds
jle
loopne
jecxz
fwait
jmp
adc
into
inc
jg
jp
fwait
in
pop
fwait
xor
shr
xor
xchg
adc
mov
dec
pushf
pop
cmp
xchg
fcomp
mov
out
mov
call
jmp
dec
mov
jmp
stos
ins
mov
pop
xor
icebp
movs
sub
sbb
aad
mov
add
imul
xchg
lea
cli
cmp
out
lods
leave
retf
or
mov
retf
mov
add
aad
clc
mov
inc
jnp
into
ja
adc
push
and
shl
inc
adc
pop
pop
sbb
and
imul
push
nop
dec
jge
push
(bad)
mov
mov
icebp
(bad)
fwait
cwde
mov
jp
(bad)
jecxz
nop
and
pop
xor
xor
jb
pushf
push
and
dec
ins
cmp
fcom
and
jmp
add
les
pop
jb
outs
lahf
pop
push
or
mov
sbb
jmp
push
sbb
arpl
retf
sub
inc
test
retf
or
cmp
ins
retf
in
push
jmp
sub
add
addr16
cmp
das
(bad)
push
add
dec
pop
xor
push
imul
outs
or
and
mov
pop
pop
mov
adc
jb
cmps
(bad)
mul
jl
out
push
stos
mov
aad
(bad)
test
xor
mov
lods
out
jnp
mov
mov
cmp
les
mov
movs
jns
repz
pop
dec
or
ja
js
leave
bound
xor
xchg
mov
in
aaa
xor
mov
pop
movs
daa
(bad)
sub
test
pop
xchg
mov
lds
call
add
cmps
push
fwait
sbb
mov
and
enter
aam
push
sbb
(bad)
out
ins
push
cmp
rcl
mov
icebp
jo
add
pop
adc
out
add
pushf
inc
aad
pop
push
cwde
mov
dec
or
xchg
arpl
sub
xor
cmps
loopne
mov
in
fcom
adc
mov
(bad)
mov
out
ins
cmp
mov
inc
cdq
cmc
mov
sbb
fwait
mov
int
jl
jbe
out
add
pop
jb
sub
jbe
dec
rcl
mov
retf
xor
test
sti
xchg
cmp
sbb
pop
cmc
test
stos
pop
popf
xchg
into
push
shr
jae
mov
rcl
bound
in
xchg
test
ret
adc
xchg
ins
cld
in
in
adc
xor
test
xchg
sub
push
int
cdq
push
mov
dec
shl
fimul
stos
push
mov
jnp
and
ds
je
pop
outs
mov
mov
mov
lods
push
adc
fmul
es
cmp
iret
jns
movs
lods
cs
fist
xchg
popa
inc
push
inc
mov
out
sbb
in
rcl
call
sub
std
mov
adc
jb
xchg
shr
pop
aaa
dec
lea
push
retf
enter
jb
jle
test
daa
jecxz
ja
fadd
ficomp
iret
addr16
lods
xor
scas
outs
aas
mov
pushf
push
jae
(bad)
adc
add
outs
sub
shl
pop
rol
dec
ret
in
xchg
jo
mov
push
sub
jae
ror
push
pop
jp
jp
in
in
sbb
push
jno
lahf
ja
push
push
sub
enter
(bad)
jg
movs
sub
dec
sbb
rcl
adc
pushf
inc
ja
mov
stc
add
outs
rcr
or
mov
push
hlt
outs
push
add
mov
sbb
rcl
dec
(bad)
jbe
jp
(bad)
xchg
rcl
lds
sbb
dec
in
bound
rol
or
adc
in
push
and
cmc
lock
xor
cs
push
cmc
arpl
das
mov
(bad)
int
jmp
daa
jl
jge
add
inc
pop
push
popa
mov
je
stos
(bad)
push
rol
push
jge
push
ret
mov
cmc
fstp
mov
adc
lods
push
pop
mov
sbb
std
pop
or
scas
add
mov
or
rol
outs
jne
(bad)
dec
xor
retf
inc
cmps
daa
jle
add
and
ret
shl
shl
pop
repz
call
push
xor
(bad)
jge
sar
outs
inc
(bad)
ss
test
sub
jl
dec
ficomp
retf
and
popf
adc
mov
ins
pop
mov
adc
es
xchg
mov
enter
jo
int3
in
into
jmp
ins
fst
and
sub
test
jae
push
test
jne
pop
in
mov
js
adc
pop
iret
scas
aaa
pop
je
or
rcl
ds
movs
enter
mov
xor
xlat
sbb
div
imul
cmp
push
test
neg
mov
lock
dec
or
clc
jno
(bad)
popa
out
clc
in
icebp
ja
jb
test
mov
sbb
mov
nop
ret
push
jne
into
out
xlat
push
shl
mov
ss
push
(bad)
loop
sahf
inc
in
inc
in
imul
outs
or
out
pushf
sbb
mov
mov
pop
fdivp
jnp
out
imul
mov
sbb
cwde
jae
cld
jmp
push
sub
pushf
and
mov
out
bnd
mov
fild
cmp
mov
xchg
pop
mov
cwde
jmp
sub
iret
pop
sbb
cmp
clc
scas
or
jle
cli
dec
and
dec
test
loop
pop
inc
sti
push
jmp
lods
adc
pop
fbld
leave
pop
les
sar
dec
adc
enter
xchg
aam
and
out
pop
mov
retf
jb
xchg
dec
adc
jbe
test
jg
inc
xor
inc
or
sub
stos
iret
out
cld
and
sbb
outs
xor
nop
aaa
sub
and
adc
lds
dec
mov
cmp
(bad)
dec
rol
call
xor
jp
test
push
jg
jle
(bad)
repnz
inc
leave
inc
test
cmp
ds
adc
adc
push
push
(bad)
mov
gs
mov
and
dec
add
test
popf
adc
mov
cmp
cmp
mov
xor
push
or
ror
fs
es
sahf
and
stos
jnp
mov
push
cs
nop
dec
cmp
sub
dec
and
clc
imul
mov
push
lods
fstp
mov
pause
cmp
test
stc
cdq
sbb
in
adc
test
or
popa
mov
hlt
(bad)
ins
mov
mov
pop
je
mov
and
jmp
cmps
sti
popa
or
(bad)
xlat
rcl
fwait
cmc
mov
(bad)
fidiv
in
mov
cwde
fwait
push
je
daa
cmps
(bad)
ds
fiadd
scas
sub
retf
sti
test
gs
adc
out
cmp
and
add
push
mov
lock
je
(bad)
shr
lahf
sti
aas
addr16
mov
sbb
cmps
out
mov
(bad)
jge
lds
lock
pop
dec
or
xor
and
push
xor
(bad)
push
push
lea
push
in
aad
mov
mov
cs
jmp
sar
popa
pop
out
push
movs
pop
sub
test
popa
retf
lea
inc
std
jmp
cmp
fist
pop
fild
sbb
cmp
(bad)
std
and
and
mov
or
enter
scas
imul
mov
movs
push
mov
aad
adc
stos
rol
clc
fbld
inc
xor
adc
mov
mov
dec
mov
ret
jmp
je
xchg
pop
mov
shl
jmp
or
mov
loopne
mov
mov
adc
lods
sahf
std
fdivrp
push
adc
add
test
icebp
xor
mov
(bad)
cmp
mov
stos
outs
xor
cli
mov
jno
test
xchg
jmp
push
ret
cmps
test
jp
pop
fdivr
ror
aad
sub
fcomp
push
jo
jle
mov
xor
xor
imul
shr
or
add
aaa
or
sub
(bad)
sub
cld
fst
adc
add
xor
sub
inc
sub
retf
daa
mov
sbb
les
mov
(bad)
inc
inc
or
xor
leave
sti
sub
dec
aas
add
pop
or
dec
sub
and
jb
ret
ins
cmp
push
push
push
ins
lods
mov
push
mov
imul
push
in
inc
loop
lods
mov
in
or
mov
pop
stos
mov
push
pop
sti
hlt
cmp
jo
sar
mov
or
fwait
inc
sub
ficomp
pop
xchg
inc
(bad)
dec
cmp
(bad)
cli
sbb
cmp
push
sbb
daa
and
cmc
add
fadd
inc
jmp
mov
ins
push
in
and
cmc
mov
push
es
jne
mov
adc
clc
dec
adc
stos
jle
and
mul
or
dec
jnp
loope
xchg
pop
cdq
ds
sar
sar
(bad)
jecxz
imul
pop
xchg
mov
mov
mov
cmps
pop
or
fistp
jnp
cmovo
jecxz
jb
pop
jmp
clc
sahf
loope
mov
das
adc
push
add
add
jno
es
mov
dec
and
or
outs
sub
fmul
cmc
cld
leave
mov
xor
xchg
cmp
addr16
fmul
int3
cwde
shl
ss
in
pop
lods
sbb
inc
jl
sbb
inc
inc
scas
rol
and
shr
fisttp
call
mov
sub
mov
mov
dec
inc
xor
pop
mov
add
add
mov
rcl
push
mov
mov
fwait
pop
ds
mov
jecxz
ficomp
mov
scas
inc
std
mov
mov
add
out
out
mov
mov
dec
ss
ins
mov
or
popf
add
pusha
dec
jns
iret
leave
pop
jo
xchg
cmps
fild
add
adc
cmp
and
scas
cmc
push
jge
push
lods
ja
sahf
sbb
imul
repnz
dec
cmps
jle
ret
jg
out
test
mov
add
xchg
(bad)
xlat
xchg
cld
mov
movs
inc
test
mov
in
sti
out
inc
mov
xor
or
ret
vxorpd
pop
int3
repnz
dec
jmp
mov
dec
cmp
sub
cmp
add
sub
or
into
push
stc
stos
adc
fsqrt
jmp
jae
jmp
pusha
shr
loop
cmp
daa
lock
push
xchg
dec
sub
cmp
mov
and
loop
sbb
jmp
ja
and
and
xchg
mov
leave
inc
xchg
fiadd
dec
out
pop
rcr
and
jle
push
in
pusha
outs
dec
ins
rcl
push
adc
into
lock
retf
xor
and
mov
xchg
mov
inc
pop
push
aam
mov
pop
loop
sbb
dec
movs
pop
push
adc
adc
outs
adc
stos
test
loop
nop
imul
int
(bad)
push
cmp
sbb
or
inc
pop
or
std
add
movs
jbe
mov
and
xor
mov
push
adc
push
xor
mov
dec
add
mov
repnz
mov
mov
jl
ret
pop
mov
nop
adc
lahf
cmp
mov
and
pusha
lock
fwait
inc
and
add
adc
mov
sbb
or
and
mov
jg
out
stos
fldenv
test
scas
inc
test
ror
js
pop
pop
or
pop
push
lds
xchg
aad
mov
mov
pop
sti
fcom
inc
pop
add
and
ja
sbb
mov
outs
xor
outs
cmp
out
sbb
sti
inc
jp
in
inc
enter
jp
hlt
fisttp
fimul
mov
popa
cmp
stos
jno
(bad)
pop
xor
cld
shl
imul
mov
test
call
mov
pop
pop
and
sub
fadd
pushf
xor
jg
add
aaa
fst
addr16
fimul
rcr
fldenv
xchg
cmp
jg
fnstsw
mov
mov
mov
xor
(bad)
cmp
pusha
mov
sub
outs
pop
mov
xlat
aaa
(bad)
and
arpl
lock
int
test
ret
xchg
inc
add
push
mov
and
add
push
mov
(bad)
mov
xchg
push
pop
jne
cwde
scas
pop
push
cmp
ins
repz
(bad)
pusha
and
mov
pop
push
xchg
push
outs
movs
js
xchg
popa
sub
mov
outs
and
sbb
in
push
pop
or
pop
arpl
lods
mov
das
lods
push
daa
push
ja
jmp
lock
sbb
jns
les
xor
push
mov
cmp
cmc
pop
jge
push
test
inc
pop
fdiv
inc
in
daa
cmp
test
and
jl
cmp
xor
jne
or
cmp
add
icebp
sahf
xchg
or
and
xor
inc
rcl
popf
dec
fdivrp
sbb
cmps
push
stos
inc
das
mov
mov
in
adc
ins
faddp
or
shr
ror
and
mov
mov
cli
icebp
or
xchg
push
push
mov
jo
adc
lea
scas
pop
test
dec
mov
dec
push
call
cs
mov
inc
and
inc
fadd
sub
mov
sub
jnp
or
fisttp
scas
lods
mov
shr
pop
xchg
cmp
jbe
pop
mov
adc
out
push
loop
mov
ror
js
jg
(bad)
mov
fiadd
lea
test
add
mov
xchg
xlat
sub
loopne
fisubr
push
and
lahf
pop
or
pop
scas
push
inc
jns
aad
xor
cmp
mov
pop
and
xor
aad
pusha
xchg
dec
jno
sbb
jo
pop
out
pop
jp
inc
sub
jecxz
jecxz
jp
les
mov
sub
mov
jl
mov
and
out
push
pop
and
mov
jle
scas
sbb
repnz
cdq
ret
test
retf
lock
and
pop
fild
cmp
jmp
call
mov
lahf
cwde
cld
je
xchg
jo
jb
push
cmp
jns
pop
inc
sub
addr16
jmp
sbb
ins
and
stc
mov
les
pop
stc
mov
push
sub
(bad)
or
sub
jmp
jmp
inc
sub
shl
fs
jnp
and
mov
call
or
xchg
cld
or
shr
mov
inc
mov
or
clc
jmp
jb
xchg
inc
jns
bound
cld
dec
add
daa
mov
jnp
and
(bad)
in
sub
cdq
(bad)
fld
mov
fst
lock
push
push
xchg
imul
pop
cld
out
xchg
shl
repz
repnz
popf
jl
and
nop
enter
jne
pusha
mov
cld
aaa
std
xchg
push
mov
xchg
std
ficomp
rcr
and
add
je
cmp
inc
(bad)
push
xor
jmp
aam
mov
push
sub
sbb
mov
leave
push
mov
pop
inc
adc
sub
fs
fwait
mov
lods
lock
xor
into
stc
pop
imul
movs
int
push
pop
pop
add
iret
inc
pop
dec
loopne
stos
sbb
enter
and
pop
test
movs
xlat
dec
cmps
mov
mov
sub
shl
adc
test
loop
shr
jbe
mov
lods
in
and
shr
ja
es
ror
mov
rcl
add
(bad)
int
xchg
jle
inc
scas
fdivr
mov
xchg
mov
loop
lds
mov
rcl
fidivr
scas
enter
mov
daa
adc
scas
test
and
or
push
bound
in
pop
fidiv
push
rcl
pop
mov
push
imul
nop
(bad)
(bad)
dec
push
sub
cld
outs
sub
or
jnp
loope
mov
addr16
mov
jno
lods
sub
inc
in
shl
cmp
and
stos
popa
int3
lahf
scas
popa
ret
push
push
mov
jmp
stos
ins
(bad)
cmps
inc
mov
shl
movs
pushaw
inc
imul
xchg
dec
and
or
and
fsub
data16
hlt
jle
mov
out
dec
jl
repz
bound
test
pop
sub
xor
in
mov
loope
add
bswap
movs
jg
inc
dec
scas
dec
ret
test
bound
pusha
fisub
out
movs
retf
mov
jl
jb
dec
pop
cmc
inc
inc
xor
mov
add
ret
scas
xchg
adc
push
xchg
cmc
leave
inc
cmp
loop
aas
jnp
mov
pop
rcl
xor
or
in
shl
dec
pop
mov
test
jmp
adc
fistp
fs
out
xchg
sub
pop
add
neg
mov
into
outs
rol
adc
je
inc
ins
mov
outs
xor
push
(bad)
sub
data16
aas
mov
repz
lock
lods
sub
fsub
push
xchg
movs
xlat
push
inc
adc
jecxz
add
and
jp
xor
sbb
or
pop
cmc
sub
lods
mov
dec
pop
sahf
add
xor
jns
add
into
iret
dec
sub
sub
mov
lds
std
std
jbe
xchg
sbb
dec
lea
add
stos
pop
cmp
bound
mov
xor
daa
mov
neg
sub
or
hlt
shl
stc
adc
push
adc
sbb
add
lods
les
lahf
scas
ja
dec
jne
std
out
push
repnz
or
mov
enter
(bad)
or
ins
icebp
(bad)
mov
push
ja
ins
add
(bad)
ja
fwait
adc
sub
xlat
xchg
into
fwait
shl
mov
fldenv
jno
data16
out
cmp
xchg
clc
or
loope
push
ret
push
mov
imul
xor
and
mov
jp
push
repnz
lock
push
xor
xor
mov
push
adc
adc
lock
mov
adc
adc
imul
mov
fdiv
mov
loop
sbb
cwde
push
cmp
push
stc
or
jae
(bad)
(bad)
vmwrite
mov
aas
jmp
lahf
aam
pop
mov
adc
mov
dec
ins
pop
jae
bound
jmp
adc
sbb
out
mov
icebp
loope
xor
sti
jmp
mov
(bad)
jg
adc
imul
(bad)
cdq
ja
out
or
int3
(bad)
arpl
cmp
and
out
sub
sbb
das
es
lea
cmp
outs
cdq
fisttp
mov
jle
xor
shl
mov
mov
inc
ror
or
mov
scas
cmps
les
pop
mov
pop
cmps
enter
or
lock
enter
mov
cmp
inc
test
popf
xlat
hlt
mov
push
sub
mov
(bad)
cmp
jecxz
fidivr
pop
stc
jecxz
jmp
dec
popa
cmps
jl
mov
push
stos
shr
jb
dec
xchg
push
rcr
je
push
sbb
push
dec
sti
push
dec
mov
push
dec
lods
lods
jl
hlt
test
jmp
(bad)
(bad)
repnz
out
and
sub
aas
xor
adc
add
add
push
sbb
xor
inc
test
stos
push
cdq
adc
mov
inc
cld
in
xor
inc
stos
fucom
nop
pop
mov
pop
pop
pop
mov
test
call
jle
imul
loope
inc
jmp
xor
mov
xchg
cmp
sbb
jl
shl
or
xchg
loopne
int3
lods
fwait
hlt
and
inc
fucom
add
xchg
sub
retf
(bad)
mov
add
push
and
xchg
xor
lds
fiadd
dec
push
lea
dec
push
mov
into
test
sub
lahf
adc
dec
ja
ret
and
or
xchg
mov
pusha
mov
jl
jbe
js
mov
jne
dec
cmp
lods
ficomp
adc
mov
mov
mov
or
inc
jmp
inc
lea
jo
pop
inc
es
pushw
dec
les
and
sub
adc
pop
stc
pop
icebp
das
pop
fild
sub
xor
pop
push
mov
mov
mov
jnp
adc
adc
addr16
in
hlt
cmps
xchg
mov
inc
mov
sub
cli
mov
int3
sbb
inc
int
call
and
inc
xchg
cdq
mov
cmps
or
xchg
stc
push
in
imul
dec
inc
std
dec
shl
shr
ins
shl
sub
mov
and
push
cmp
mov
in
cmp
cs
sub
mov
ror
mov
pop
dec
mov
ins
jbe
repnz
call
and
mov
jb
je
out
cmps
xor
aaa
xor
jne
jbe
test
inc
push
daa
xor
pop
or
pop
add
inc
push
es
sahf
pop
sbb
mov
out
mov
jge
iret
xor
pop
lock
cmps
stos
ret
mov
cs
test
mov
mov
lds
mov
bnd
test
retf
or
out
out
pusha
fadd
mov
sti
mov
or
ret
push
enter
ins
inc
adc
je
mov
mov
stos
push
fistp
dec
aam
push
rol
xchg
in
pop
rcr
in
push
jmp
out
fistp
inc
retf
aam
pusha
pushf
out
cli
lods
call
ffreep
sub
call
xor
dec
shl
mov
mov
aam
ror
push
add
frstor
jmp
jl
cmp
xor
std
mov
jp
push
sbb
push
or
push
push
xor
fdivr
or
add
aad
out
jg
cmp
and
bound
xchg
stc
ja
push
xchg
xchg
pusha
mov
data16
push
push
and
inc
mov
xor
js
fsubrp
(bad)
iret
jg
mov
(bad)
aam
xchg
out
sub
sub
dec
mov
mov
(bad)
rcl
cmp
inc
in
stc
pop
xor
sbb
sub
xlat
adc
sub
lock
pop
fst
pop
movs
ins
js
add
sub
daa
pushf
retf
or
and
scas
(bad)
ror
and
and
lock
adc
cdq
cdq
aam
lahf
jns
std
and
mov
xchg
retf
dec
fadd
inc
ss
add
dec
fucom
add
mov
cmp
pushf
aas
cmp
fisubr
mov
or
movs
call
in
pop
arpl
sub
dec
int3
loopne
jle
mov
xchg
les
sbb
xor
icebp
push
mov
repz
fild
inc
ja
int
xor
popa
retf
outs
push
pop
lahf
mov
lods
mov
je
(bad)
ret
jnp
jp
sbb
or
loop
or
mov
mov
icebp
arpl
aaa
sbb
and
xor
outs
ds
(bad)
cwde
dec
jl
add
test
retf
push
hlt
jmp
imul
in
lods
or
scas
rcl
pop
mov
loop
outs
fsubrp
sub
xchg
lock
fisub
pop
xor
test
repz
sbb
movs
jae
cmp
movs
add
push
lea
push
mov
inc
arpl
mov
mov
pop
in
pop
mov
loope
sub
nop
dec
or
push
cli
dec
fnstenv
push
mov
jo
xor
mov
div
cdq
aas
ins
inc
pop
sbb
jb
or
xlat
fyl2x
loop
xlat
mov
int3
fcom
icebp
in
add
cwde
rol
inc
hlt
sub
pop
scas
(bad)
int3
inc
(bad)
das
sub
lods
jo
mov
out
cmp
(bad)
cmp
idiv
clc
jge
clc
shl
inc
mov
dec
pop
daa
and
js
int
push
cwde
xor
fcom
movs
pop
push
rol
ret
jl
mov
and
xor
cmps
push
mov
jnp
pop
or
fwait
mov
int
pop
fwait
xor
mov
fwait
sbb
sub
mov
jae
ja
and
dec
jl
add
adc
xchg
inc
js
cmp
cmc
jbe
jmp
add
mov
and
jne
inc
inc
jbe
popf
into
sub
ins
cmp
adc
enter
dec
cmp
(bad)
(bad)
xchg
out
xor
push
fcmovu
popf
jecxz
out
inc
adc
wbinvd
(bad)
xchg
mov
out
dec
cmp
cmp
mov
shl
and
dec
int3
and
add
xchg
(bad)
pop
xchg
and
iret
(bad)
mov
push
push
cmps
mov
cmp
or
xlat
fsubr
push
xlat
shr
xor
stos
dec
mov
sub
mov
mov
jge
ins
mov
ds
push
enter
out
add
movs
sbb
test
maxps
cmc
mul
xor
loopne
fldcw
sbb
enter
out
xchg
stos
push
cmc
mov
mov
cwde
hlt
test
repz
sbb
xchg
inc
test
xor
xchg
sbb
push
(bad)
xchg
addr16
retf
xchg
mov
or
jbe
sbb
js
pushf
push
pusha
leave
mov
inc
sub
cmp
jns
jecxz
push
mov
xchg
and
add
les
lods
test
iret
sub
enter
loopne
mov
jbe
add
movs
and
xchg
aam
loop
ud1
das
push
fwait
in
mov
hlt
ret
xor
mov
fwait
into
lahf
fcomp
pop
and
js
scas
xchg
and
push
jl
cmp
lock
push
pop
sub
xor
in
in
loop
sar
pop
(bad)
jl
xchg
push
and
cli
cs
pop
xor
out
mov
cmc
loope
or
dec
xor
mov
mov
dec
adc
std
sub
fucom
inc
and
das
push
add
push
ins
ror
jbe
adc
icebp
scas
sbb
mov
xor
iret
cmp
mov
mov
mov
mov
mov
outs
shr
into
loope
jg
sbb
movs
sbb
ss
jle
jns
adc
inc
dec
mov
dec
cmps
cmps
dec
(bad)
mov
(bad)
hlt
jo
mov
mov
cmp
lds
outs
pop
sbb
mov
mov
sbb
retf
repz
mov
lods
push
mov
dec
sub
stos
(bad)
loopne
jl
enter
sub
xchg
push
ficom
stc
pop
in
enter
int3
leave
jge
cs
shl
loope
movs
cmps
adc
leave
sbb
push
inc
sub
ins
or
pop
jmp
jnp
mov
dec
pushf
das
or
push
popf
xor
outs
test
push
push
mov
xchg
adc
mov
int
fadd
sbb
mov
scas
loop
push
shr
test
out
jae
sti
dec
sbb
div
cmp
ret
idiv
cdq
push
jle
fwait
xlat
mov
xchg
fstp
mov
scas
test
popf
sbb
push
push
loope
mov
loopne
push
fs
inc
adc
and
or
jecxz
and
in
and
push
and
test
ins
xchg
test
and
loop
sbb
stc
mov
add
xchg
sbb
jl
xor
lock
sub
jbe
ficomp
and
stos
xor
pushf
add
or
xlat
in
adc
stc
dec
jb
mov
sbb
not
xchg
dec
(bad)
push
(bad)
mov
mov
in
ret
mov
or
add
pop
pop
ret
cmp
xchg
gs
movs
sbb
fld
rol
mov
xchg
(bad)
inc
xchg
dec
pop
and
mov
outs
repz
jae
xchg
mov
cmp
xor
or
xchg
add
je
popf
ror
aam
loope
fs
aaa
push
inc
jno
dec
leave
fdiv
(bad)
into
imul
push
in
ror
mov
std
and
dec
and
stc
push
push
movaps
inc
add
jnp
pop
dec
pop
movs
pop
mov
cmp
or
data16
jae
sbb
add
push
jne
popa
push
mov
cld
mov
jb
adc
call
sbb
fdivr
sbb
or
or
(bad)
movs
push
mov
jp
cmps
out
adc
js
loope
mov
(bad)
mul
ret
mov
mov
aam
stos
leave
clc
outs
xchg
into
mov
ja
push
gs
inc
sbb
nop
jnp
push
xchg
js
sbb
cld
daa
stos
push
lods
push
lock
dec
stos
dec
cwde
push
cmp
das
neg
add
scas
push
cwde
xor
iret
cmc
xchg
mov
pop
pop
push
and
add
call
inc
and
sbb
mov
aam
jg
xchg
xor
fist
inc
ret
sbb
dec
mul
ins
shr
dec
gs
dec
sar
bound
mov
sti
mov
dec
test
pusha
mov
xor
cmps
inc
cmc
mov
pop
ds
dec
mov
test
push
ss
and
inc
int3
movs
and
mov
mov
loope
fprem1
or
xor
int
pop
cmp
add
add
mov
repnz
mov
xchg
push
push
mov
cld
xor
ret
jmp
cmc
cmp
into
or
xlat
bnd
push
out
jae
add
push
mov
out
xchg
call
inc
and
jecxz
pushf
xchg
pop
ret
add
loope
cmp
ins
xchg
dec
(bad)
xchg
retf
(bad)
enter
add
pop
adc
enter
gs
scas
loope
cmp
pop
dec
bound
data16
repz
push
mov
(bad)
repz
stc
sub
pop
icebp
sbb
xor
and
scas
push
std
push
sub
mov
repz
xacquire
mov
outs
aaa
cmp
xchg
pop
into
add
jmp
sbb
or
das
cmps
push
ds
or
nop
jne
mov
mov
adc
lods
inc
mov
xor
cwde
dec
ins
outs
cmps
xchg
fstp
jno
jbe
jnp
mov
add
into
outs
jmp
sub
in
mov
icebp
inc
inc
adc
sbb
push
outs
and
or
cmp
add
sti
scas
aas
jecxz
jg
std
sbb
repz
pop
and
jnp
add
add
adc
jge
clc
dec
pop
and
adc
xor
mov
fsubr
xchg
pop
pop
xor
scas
in
repz
jle
int3
dec
cld
xchg
test
push
adc
enter
lock
push
jg
dec
or
xchg
sbb
scas
ret
addr16
mov
adc
jg
aad
inc
inc
fprem
mov
dec
dec
pop
jge
mov
xor
sub
xchg
adc
imul
sar
adc
lock
mov
jp
add
pop
(bad)
mov
adc
mov
ds
push
or
jg
(bad)
(bad)
jmp
add
push
mov
pop
push
mov
imul
inc
repz
fwait
adc
mov
inc
mov
jg
sar
xor
(bad)
jp
push
pusha
jae
sub
out
xchg
lods
mov
dec
popa
aad
mov
leave
scas
pop
adc
pop
pushf
add
sub
xor
(bad)
shl
mov
mov
idiv
add
sub
mov
jl
mov
popa
xor
scas
dec
jns
xchg
ds
into
mul
push
mov
mov
imul
mov
and
push
outs
adc
xchg
xchg
mov
pop
sub
das
xor
pop
mul
(bad)
call
xchg
into
xor
or
dec
sub
(bad)
and
div
xchg
rol
fistp
jmp
inc
movs
pop
push
in
fist
ret
pop
jmp
inc
aas
mov
icebp
adc
inc
sub
jnp
cmp
adc
ret
mov
addr16
inc
adc
xchg
sub
fimul
jle
mov
movs
gs
scas
ja
out
sbb
pop
std
inc
sahf
cs
iret
inc
rcr
cmp
jmp
mov
xchg
ins
leave
scas
mul
jl
sti
mov
jae
mov
imul
dec
dec
std
inc
shl
dec
push
xchg
inc
(bad)
xor
mov
pop
sub
lds
es
ds
dec
and
sar
scas
sbb
xchg
icebp
ret
inc
add
xor
das
or
aaa
inc
fidivr
ror
in
push
sbb
test
or
lahf
aam
pop
daa
inc
add
pop
and
inc
scas
mov
mov
leave
xor
push
call
jp
clc
cdq
push
lds
xchg
fisubr
inc
sub
inc
jle
js
fidivr
clc
dec
push
sar
ret
xor
dec
dec
and
hlt
sub
or
mov
fstp
sbb
das
lods
or
push
and
push
sbb
mov
mov
add
mov
jl
lahf
addr16
or
dec
fdivp
loope
xchg
cmp
mov
sub
cmps
(bad)
push
in
xchg
pop
and
aaa
jg
sub
popf
rol
cwde
sbb
inc
retf
hlt
pop
rep
sub
jno
std
sbb
aas
(bad)
jae
or
xchg
sbb
retf
adc
jl
jmp
mov
movs
sub
outs
fnsetpm(287
pop
(bad)
mov
and
inc
loope
push
test
adc
dec
std
in
sbb
mov
test
add
sbb
sub
imul
push
xlat
lds
stos
push
fstp
stc
int3
push
or
fistp
dec
push
mov
jl
mov
and
mov
sub
sub
imul
ret
mov
inc
aam
cs
out
bound
cmp
xor
pop
ins
sbb
fist
fiadd
(bad)
cli
nop
cmps
das
std
out
cld
add
cs
cdq
pop
je
into
xchg
out
add
shl
movs
pop
jo
mov
or
mov
fist
stos
stos
add
add
inc
out
jl
pop
jnp
dec
mov
and
jnp
fnstcw
pusha
pop
xchg
xchg
push
mov
dec
dec
inc
fadd
fild
cmps
mov
xchg
cmp
fs
sbb
and
shl
(bad)
in
inc
gs
xlat
pushf
arpl
dec
pop
or
imul
add
mov
xchg
sbb
xor
shl
das
jmp
call
mov
popa
pop
cmc
mov
imul
test
fbstp
mov
and
fwait
les
sbb
xor
inc
popa
ja
in
xchg
pushf
inc
add
pop
fwait
sub
pop
push
in
mov
leave
out
mov
fnstcw
scas
adc
repz
sub
inc
cmp
cmp
push
mov
(bad)
mov
sbb
call
cmc
jb
xor
pop
adc
xchg
js
into
fsubr
sub
cli
fstp
call
jnp
bnd
xchg
push
xchg
sbb
cli
xchg
xchg
mov
cmp
jae
mov
mov
loope
add
xchg
mov
pop
add
xor
lea
ins
adc
adc
hlt
retf
inc
ds
std
lods
test
push
ror
sub
ins
push
inc
dec
imul
mov
dec
pushf
push
data16
scas
adc
imul
loop
mov
fdiv
int3
outs
xchg
inc
adc
int3
push
and
ins
out
lods
add
rcr
loop
jg
and
in
mov
retf
adc
inc
test
call
cmp
rcl
dec
lahf
sub
sbb
jb
cld
pop
push
lock
data16
pushf
sahf
movs
scas
pop
imul
sbb
fisubr
cmp
movs
add
fwait
lahf
xor
add
fisub
mov
inc
xchg
sub
outs
add
mov
imul
mov
xor
jge
mov
daa
std
cdq
push
add
in
out
mov
arpl
pop
add
rcr
test
inc
popa
repz
js
out
fist
xchg
inc
xlat
inc
leave
pop
sub
mov
hlt
mov
xchg
int3
movs
sub
mov
xchg
lahf
fcmovb
pusha
xor
sbb
xor
lods
cmp
aad
xor
xor
adc
test
in
clc
jo
jge
mov
pop
mov
pop
or
pusha
addr16
cdq
rol
rcl
fisub
popf
dec
mov
jp
mov
jno
xchg
mov
xchg
xchg
xchg
shl
icebp
mov
cmpxchg
xor
adc
and
cmp
aam
pusha
sahf
and
mov
daa
adc
test
jge
inc
sub
ror
xchg
mov
or
cmp
xchg
outs
ds
pop
jl
fwait
es
sbb
mov
and
jb
push
out
sahf
jecxz
loopne
das
mov
sti
pop
fist
or
aas
in
shl
xchg
mov
cmp
sbb
sbb
loope
jne
mov
or
xchg
test
adc
cmps
es
lahf
imul
cmc
jmp
mov
ins
in
or
out
and
mov
pop
ret
mov
lea
loopne
test
daa
pop
xchg
push
cmp
add
mov
sub
mov
out
adc
cs
jnp
mul
(bad)
cmp
lds
adc
xor
dec
and
mov
or
pop
test
nop
fs
xchg
dec
inc
inc
dec
imul
movs
out
sub
lahf
loop
pop
pushf
jmp
je
add
enter
xchg
xchg
out
mov
adc
and
pop
retf
pop
xlat
cmps
cmp
lds
enter
mov
mov
aaa
sahf
inc
call
movs
es
scas
sub
aam
lods
bound
mov
cmps
push
dec
adc
xchg
xor
jbe
fisttp
ror
dec
xchg
dec
push
push
sub
sahf
fisub
fwait
or
xor
ficomp
(bad)
dec
sbb
sub
xor
push
adc
cmp
cmc
and
data16
cld
repnz
inc
xchg
test
dec
mov
retf
xchg
push
jnp
out
sahf
sbb
ja
cmps
aaa
inc
jecxz
aam
xchg
push
scas
fimul
mov
sbb
test
and
dec
jno
pop
adc
dec
imul
cmp
mov
mov
hlt
sbb
push
outs
aam
cdq
out
popa
ficomp
out
outs
xlat
mov
pop
jle
ds
inc
movs
dec
pop
test
mov
mov
aaa
out
xchg
dec
mov
dec
or
aas
adc
xlat
div
je
in
dec
jne
daa
mov
sub
jno
lea
ins
rcr
scas
in
pop
add
loopne
cmp
mov
popa
pushf
sub
cmps
jb
dec
sub
push
ret
outs
lahf
sub
push
mov
push
pop
adc
dec
add
call
(bad)
in
pop
(bad)
hlt
inc
cld
call
sbb
pop
push
cmp
js
ror
in
sub
pop
sti
or
xchg
inc
sbb
(bad)
cmp
aaa
enter
inc
movs
pusha
or
call
pop
popf
push
mov
imul
lds
clc
pop
js
dec
iret
movs
in
sub
je
loop
xor
ret
push
xchg
sbb
mov
std
xor
mov
mov
lds
add
dec
mov
pushf
daa
and
mov
ffreep
lock
push
dec
ins
and
push
mov
ins
loope
in
cmp
dec
jmp
js
dec
fstp
popf
mov
and
mov
sti
push
add
test
pop
xchg
es
ret
and
or
fimul
mov
enter
jne
ja
sbb
es
sti
outs
outs
jg
mov
bound
sahf
data16
lahf
dec
scas
rcr
mov
daa
cmps
cmps
jmp
rcl
test
or
mov
retf
or
mov
ror
outs
inc
inc
scas
ret
xor
repz
fist
xor
mov
(bad)
xor
mov
mov
push
loopne
aam
dec
add
jno
mov
or
movs
xchg
mov
push
mov
das
outs
jmp
mov
jae
popa
jno
in
out
jmp
repz
out
cli
aaa
sub
mov
mov
xor
push
mov
fmul
xor
xchg
add
sbb
jg
mov
mov
sbb
add
icebp
sub
dec
cmps
cmps
cmp
or
add
clc
shl
test
(bad)
popa
inc
nop
and
xchg
cld
inc
pop
jg
aas
pop
mov
sbb
std
dec
and
gs
aaa
xchg
js
sub
out
add
js
movs
xlat
data16
imul
and
pusha
sub
(bad)
pop
pop
lods
repz
and
jbe
out
fisub
mov
movs
les
add
ss
mov
stos
hlt
mov
cdq
xlat
aas
ins
or
push
mov
or
mov
fimul
sub
push
or
sub
test
adc
pop
or
fnstenv
xchg
push
push
fnstenv
ins
and
adc
jmp
xchg
test
cmp
pop
xchg
rcl
xchg
ror
icebp
sub
inc
or
call
cmp
mov
push
adc
cld
push
adc
div
jmp
icebp
and
pop
inc
sbb
dec
sub
mov
push
or
or
popf
test
icebp
sbb
pop
loopne
mov
and
jae
sbb
outs
pop
sub
aam
mov
xchg
int3
ror
shl
fmul
mov
inc
jo
cwde
mov
dec
rcr
fadd
and
pop
(bad)
sub
pop
push
das
mov
or
std
mov
mov
iret
cwde
fs
stos
sub
and
cmp
xor
sub
sub
mov
ja
jle
sub
mov
jbe
push
sub
fs
fnstenv
stos
fwait
ins
cli
test
add
int
push
adc
push
push
ins
mov
(bad)
push
mov
repz
je
ss
lock
sar
sbb
fnstsw
enter
hlt
jg
jle
add
das
imul
mov
leave
sar
cmp
(bad)
mov
or
mov
pop
mov
out
outs
lods
lds
xlat
mov
jmp
mov
xor
xor
push
push
sar
sbb
jge
pop
nop
test
cs
cmps
xchg
loopne
push
sub
pop
mov
dec
mov
shr
ficom
cdq
je
int
imul
(bad)
std
mov
bnd
inc
cmp
jmp
sbb
cmps
jl
addr16
or
xchg
mov
xor
xchg
popf
jns
mov
or
sub
shl
mov
add
sbb
pop
pop
adc
cli
ja
and
cli
aad
adc
aad
push
mov
push
mov
add
adc
or
mov
mov
xchg
push
outs
sbb
into
inc
jle
push
scas
ficomp
push
sbb
and
aaa
mov
push
icebp
sub
jecxz
inc
push
(bad)
pusha
adc
mov
jle
dec
and
cli
adc
imul
mov
mov
push
je
sub
(bad)
xchg
cmp
outs
in
pop
mov
jmp
stos
bound
xlat
inc
int
inc
cld
jecxz
lea
sub
js
int3
or
dec
and
popf
mov
(bad)
mov
inc
push
xchg
sbb
int
pop
es
(bad)
int3
mov
dec
and
inc
mov
outs
add
and
push
or
cmp
fyl2xp1
fld
out
into
xor
out
fdivr
fisubr
and
(bad)
sub
add
sti
mov
xor
jecxz
push
cmp
mov
adc
ds
mov
call
jo
fisub
jl
pop
jecxz
ss
mov
add
lahf
les
jmp
and
shr
sub
out
stc
fwait
js
dec
ret
mov
mov
sbb
jb
push
sbb
fadd
dec
mov
fs
loope
mov
cmp
cdq
in
mov
les
cmc
sub
hlt
push
js
fwait
dec
ss
or
popa
push
sub
ret
fstp
loop
xchg
pop
mov
cmp
(bad)
shr
mov
rcr
dec
loop
push
mov
add
and
aam
pop
aad
data16
push
ins
ds
cmp
les
jp
in
ss
inc
push
(bad)
(bad)
out
push
xchg
add
push
xor
cmc
jp
push
adc
add
cmps
xchg
test
push
ret
xchg
mov
push
dec
dec
repz
rcr
arpl
dec
gs
add
cli
xchg
pop
mov
mov
or
jmp
pusha
fistp
aam
nop
add
lea
xchg
add
and
call
xchg
xor
mov
mov
(bad)
mov
lods
into
cdq
int3
pop
rcl
mov
fld
xor
jmp
mov
out
in
adc
popa
fstp
cmp
xor
fstp
xor
inc
in
psubb
popa
and
cwde
ror
push
pop
rcl
push
pop
mov
daa
fiadd
rcl
jns
out
in
mov
add
sbb
js
aaa
sub
into
push
addr16
daa
ds
ret
ds
pop
das
xlat
or
cmp
adc
lock
arpl
repnz
stos
jo
pushf
jae
aas
mov
aaa
cmc
mov
test
enter
bound
hlt
and
adc
dec
mov
mov
test
add
imul
push
pop
or
jmp
cdq
xchg
cmp
shl
inc
cmovno
test
jo
pmullw
ja
int
cmps
lods
fld
das
xchg
push
sar
add
xchg
jl
cld
cmp
aad
popa
mov
jno
je
fcomp
loope
fs
std
ins
pusha
ret
mov
push
mov
out
int
add
jno
xor
push
jo
jecxz
push
xchg
dec
and
(bad)
inc
pop
out
cmp
lods
aaa
lock
fcomp
dec
pop
mov
imul
loopne
sub
(bad)
mov
add
jns
mov
dec
mov
cmc
ror
and
xchg
push
ins
cmp
ror
pop
adc
outs
outs
(bad)
cmps
or
(bad)
imul
das
retf
and
loopne
ds
xchg
sbb
push
jl
pop
xchg
xchg
lahf
sbb
call
xor
and
rsqrtps
ins
int3
jae
xor
(bad)
xchg
jecxz
jnp
aaa
(bad)
fwait
xor
dec
pop
retf
psubsb
outs
cdq
xor
mov
int
adc
xor
dec
pop
sub
out
repz
std
out
or
shl
mov
fs
fmul
in
imul
clc
mov
mov
das
inc
addr16
in
inc
jmp
and
sub
sbb
aaa
addr16
sbb
pop
pop
in
in
jle
inc
mov
or
pop
xor
lock
fidivr
pop
xchg
ins
movs
pop
mov
pop
push
shr
jno
xor
repz
movs
cmps
das
test
sub
outs
mov
lods
push
xchg
arpl
jmp
lods
cmp
sbb
repnz
cmps
mov
push
aas
fild
inc
dec
mov
pop
aaa
stc
hlt
je
pushf
out
jb
xchg
icebp
fwait
movs
mov
sbb
mov
ror
push
and
test
mov
mov
fimul
or
adc
push
sub
jne
fsub
adc
ss
pusha
add
sbb
les
push
std
xor
inc
dec
inc
neg
mov
xor
mov
mov
xor
aad
push
and
mov
fbstp
(bad)
fsubr
sub
dec
cmps
in
cdq
loope
popa
xchg
xchg
jge
call
rcr
push
call
inc
mov
push
mov
lea
cld
sub
(bad)
cmp
lock
test
xchg
sub
mov
xchg
leave
add
and
jecxz
not
jmp
lock
cli
outs
sbb
ins
out
jbe
shl
int3
or
ret
cwde
jnp
mov
push
cwde
mov
sbb
inc
aaa
pop
xchg
call
adc
sti
aas
mov
sar
sub
bound
jp
dec
mov
cdq
push
loopne
ja
jecxz
mov
lea
xchg
les
retf
fdivr
mov
pop
mov
push
lods
int3
mov
dec
mov
cmp
enter
icebp
cwde
iret
mov
popa
mov
movd
or
xchg
ds
lods
sbb
inc
pop
and
jae
clc
arpl
dec
call
jl
xchg
test
test
inc
pusha
int
mov
xchg
or
xchg
mov
iret
out
sub
clc
mov
xor
push
xchg
cmp
iret
movs
and
push
adc
retf
and
xchg
repnz
arpl
pop
jg
pop
gs
jle
pop
inc
mov
ret
rol
sbb
(bad)
cmc
sbb
add
pusha
ficom
sub
or
adc
jl
adc
mov
pop
push
shl
mov
clc
mul
outs
(bad)
mov
cs
retf
mov
and
iret
cmps
sub
jge
xchg
cli
popa
pop
sbb
outs
fwait
cs
out
and
jl
cld
jb
outs
xlat
and
out
mov
data16
hlt
push
cmp
ror
ss
sti
xor
sahf
push
imul
mov
cmp
or
scas
shl
inc
rcr
jg
push
pop
retf
outs
mov
pop
ja
lods
js
(bad)
inc
sbb
pop
cs
mov
stos
pop
shr
xlat
pop
sti
sbb
lahf
call
stos
in
mov
pop
shl
push
pop
ins
inc
mov
retf
mov
repz
cmp
push
lods
call
lea
aad
mov
add
xlat
mov
dec
sbb
sub
bound
std
pop
outs
and
(bad)
fcom
pusha
in
rcl
or
inc
gs
sbb
sbb
xchg
iret
mov
add
ret
xchg
ds
aaa
jge
fcomp
mov
std
inc
mov
data16
rol
jns
test
test
xchg
sub
push
xor
xor
fcomp
ret
pushf
sub
mov
push
mov
jl
sub
and
arpl
sub
mov
inc
call
jae
xchg
and
push
rol
addr16
cmp
sti
jmp
inc
ins
push
ss
loopne
adc
mov
daa
or
test
aam
loop
js
cwde
shl
ss
shr
cs
push
hlt
nop
inc
or
adc
inc
test
aaa
dec
mov
adc
movs
jp
push
test
iret
(bad)
enter
mov
xchg
test
inc
jp
test
add
out
out
lds
cli
cwde
cmps
gs
aam
push
cmp
lahf
mov
(bad)
std
cs
repz
or
jmp
xor
(bad)
call
ja
test
fiadd
xor
xlat
pop
inc
jae
stos
sub
jae
xchg
dec
jbe
int
outs
in
adc
(bad)
add
aam
scas
mov
cmp
(bad)
jle
mov
retf
mov
movs
push
mov
dec
dec
or
sub
test
std
imul
jg
xchg
(bad)
lahf
fs
outs
sub
cld
loope
out
pop
jmp
jbe
test
cmps
sbb
xlat
cmp
sbb
jmp
(bad)
jmp
pop
call
fdivr
in
adc
aad
jno
fmul
pushf
shl
mov
inc
es
(bad)
mov
sub
outs
fidivr
repz
rol
push
ins
xor
add
mov
test
loop
mov
sar
fwait
rcr
or
fmul
add
fwait
xor
mov
daa
inc
sub
loop
dec
scas
push
pop
sub
loopne
sbb
jo
adc
pmaxub
test
lahf
aaa
ret
bound
dec
nop
leave
(bad)
mov
push
sub
mov
inc
adc
jae
fs
adc
scas
addr16
popf
jo
or
sbb
fwait
add
mov
jmp
mov
or
adc
mov
nop
movs
jbe
xchg
push
push
ja
ss
adc
add
pop
sub
push
stos
adc
pop
ins
xor
xor
add
sub
lods
icebp
sub
mov
mov
mov
and
mov
add
push
int
outs
xchg
out
and
cmp
sub
les
jecxz
xchg
dec
mov
dec
inc
js
shl
fdivr
mov
js
je
das
das
fwait
mov
mov
ror
add
jg
adc
inc
sub
rol
and
repz
lea
jmp
retf
fidivr
gs
or
cmp
fstp
inc
sub
mov
pop
inc
add
ins
mov
pop
jo
inc
add
out
sbb
js
pop
fs
or
(bad)
mov
and
cdq
rcr
push
and
popa
js
mov
dec
icebp
leave
xchg
xor
jae
clc
ja
add
or
jmp
xchg
add
mov
and
xchg
lahf
pop
xchg
push
js
pop
loopne
mov
xchg
test
inc
jae
vcvtps2pd
mov
xchg
pop
stos
jo
jmp
push
sub
xor
sbb
fdivr
mov
dec
hlt
adc
and
sbb
or
jnp
inc
int3
xor
(bad)
loope
pusha
in
sbb
xor
in
xchg
add
into
aam
push
dec
jp
sub
jae
enter
push
mov
test
daa
(bad)
sti
pop
xchg
xchg
test
call
pushf
les
mov
mov
adc
pop
jnp
mov
in
and
xchg
movs
inc
jg
aas
cld
call
sbb
mov
and
cdq
and
sbb
or
hlt
push
into
dec
inc
loope
out
mov
int
xchg
xor
movs
ret
fs
shl
mov
push
outs
fsub
iret
leave
pusha
or
cmp
adc
mov
mov
fnstenv
and
or
cmp
jns
sub
loopne
sub
dec
sbb
aad
aas
ins
jns
mov
sbb
leave
jp
or
fild
or
ds
popf
nop
jns
aaa
adc
imul
inc
pop
je
aad
push
daa
(bad)
aam
and
xchg
mov
inc
fmulp
cwde
clc
imul
sar
nop
sbb
inc
or
and
fwait
inc
cld
into
fmul
mov
sub
push
push
xchg
push
call
ror
jg
stos
add
addr16
(bad)
sub
mov
pop
sahf
inc
xchg
daa
mov
push
mov
les
xor
loop
fidivr
arpl
sbb
mov
and
mov
repz
jmp
scas
ins
lods
in
mov
cmps
imul
cmp
ins
in
cmp
cmp
or
ds
jnp
jmp
push
and
mov
cmp
(bad)
(bad)
out
icebp
or
rcl
daa
jae
sahf
shl
inc
push
enter
stos
rcr
fisubr
sbb
jo
(bad)
mov
mov
inc
jmp
push
leave
ss
mov
push
pop
pop
pop
add
xor
mov
rol
and
cmps
push
jg
xlat
jnp
adc
test
out
sbb
mov
dec
jmp
sbb
pushf
cmp
rcl
cmp
mov
push
push
test
jp
pop
ss
gs
mov
fnstenv
cmp
pop
sub
push
and
rcl
xor
jae
mov
mov
int3
lods
cmp
xor
js
xchg
xchg
in
pop
ss
enter
inc
cs
in
sub
inc
jae
retf
sbb
call
pop
push
in
or
mov
addr16
cmp
sbb
pop
ins
cli
lods
mov
test
sti
scas
and
pop
dec
scas
aaa
iret
fwait
jno
xchg
jmp
es
sub
mov
scas
test
sub
sti
and
or
loopne
and
pop
test
in
(bad)
iret
fs
jo
add
and
das
pop
ficomp
fs
cld
nop
inc
mov
jae
adc
mov
xor
jmp
cmp
shl
mov
sahf
dec
jmp
(bad)
sub
loope
fs
cld
pop
cmp
pop
bound
out
scas
pop
xchg
(bad)
ficom
xor
push
cmc
sahf
fwait
mov
mov
ja
mov
repnz
imul
(bad)
pop
push
jno
cmp
je
jmp
pop
loopne
data16
bnd
cld
rcr
fsub
pop
fcos
in
pushf
test
push
mov
fimul
xchg
xchg
sub
(bad)
ja
(bad)
and
retf
dec
addr16
mov
pushf
les
mov
push
push
(bad)
pop
mov
and
call
adc
call
ins
cli
xchg
sbb
push
jbe
idiv
xor
cmp
pop
lea
xor
(bad)
mov
in
push
cmp
mov
xchg
sbb
dec
test
loopne
push
movs
push
sti
mov
call
pop
(bad)
fisubr
xchg
jmp
jb
dec
jl
push
sar
xchg
pop
jae
add
add
cmp
cmp
gs
add
dec
and
and
mov
pop
scas
mul
out
imul
(bad)
iret
test
xchg
jbe
cmp
cmp
stc
inc
shl
pop
and
mov
mov
ss
movs
(bad)
sub
shr
push
into
and
cmc
arpl
popa
imul
sbb
xchg
pusha
std
push
sbb
iret
dec
cld
test
sub
loope
xlat
dec
adc
push
cmp
cs
cmp
pop
pop
xchg
pop
xchg
dec
adc
lods
fidiv
cmps
fcmovbe
push
stos
jmp
and
dec
dec
inc
stos
cdq
int
daa
adc
lock
xchg
sub
outs
fidiv
fiadd
xchg
stc
adc
shr
leave
pop
ret
cmp
cmp
mov
jne
dec
xor
xor
adc
lea
push
hlt
jns
inc
adc
movs
cdq
mov
mov
stc
pop
xchg
mov
pusha
pop
adc
cmp
and
cld
cs
push
adc
sbb
(bad)
lea
adc
and
mov
pop
outs
es
mov
test
jmp
inc
cmp
jg
mov
mov
xchg
add
mov
xchg
dec
(bad)
mov
scas
sub
or
push
dec
pusha
and
int3
cmps
ja
bound
lds
int
mov
xchg
jg
dec
pop
sbb
fidiv
sbb
popf
sahf
aam
sub
(bad)
(bad)
loop
sbb
mov
dec
jno
cmp
add
out
mov
loop
frstor
out
bound
(bad)
std
cwde
mov
ror
jle
or
add
lds
xchg
push
sub
cwde
mov
or
xchg
cmp
into
cld
stos
pop
in
mov
js
aas
daa
sbb
adc
push
in
mov
mov
je
pop
adc
fmul
pop
ja
pop
add
dec
xor
push
stos
aam
push
xchg
add
(bad)
fld
jo
mov
(bad)
movs
arpl
pop
retf
jae
enter
cmp
adc
das
fs
adc
inc
mov
out
sar
mov
repz
mov
nop
fmul
jb
mov
(bad)
and
mov
jb
sub
lock
xor
xor
or
(bad)
loop
mov
mov
adc
cs
xchg
outs
in
out
xor
pop
sbb
sahf
in
jg
or
fdivp
int
rcl
fstp
loop
out
sub
add
sub
adc
jmp
push
outs
pop
pop
add
cs
push
pushf
push
aas
sub
mov
jg
xlat
inc
and
call
ficom
arpl
sub
icebp
inc
or
hlt
jo
xor
stos
repnz
out
mov
sub
mov
xor
xor
dec
cmp
stos
pusha
lahf
dec
xchg
sahf
inc
sub
sahf
outs
jp
mov
cli
fld
adc
call
cmps
xor
aad
pop
call
cs
mov
pusha
pop
inc
mov
cs
scas
add
pop
jmp
cmc
jp
das
repnz
pop
sub
pop
es
out
nop
(bad)
repz
scas
cdq
das
or
shr
(bad)
mov
sub
fdivr
call
jmp
sub
pop
rcl
int
mov
adc
mov
xor
mov
lahf
cmp
dec
inc
mov
adc
call
cs
add
sbb
push
ret
xlat
leave
push
popa
jmp
mov
xor
jge
jecxz
and
stos
mov
lock
sbb
lds
ror
push
test
loop
pop
dec
dec
push
mov
leave
ret
mov
outs
push
xchg
cli
push
xchg
and
mov
push
and
movs
xor
mov
cmp
int
mov
test
or
add
in
test
out
push
retf
mov
inc
push
fadd
sbb
daa
and
mov
das
cmp
or
add
fld
pop
and
fnsave
pop
xor
mov
stos
pop
adc
or
sbb
je
inc
(bad)
pop
pop
xchg
rcl
cld
mov
adc
mov
cmp
mov
pop
sahf
nop
mov
scas
mov
mov
mov
inc
sar
and
sbb
scas
push
push
loop
push
fld
jl
jecxz
xchg
jge
mov
addr16
test
gs
and
add
sbb
xor
or
retf
stos
cmp
das
aas
mov
in
mov
pusha
cmp
popa
cld
mov
lea
les
aad
xchg
getsec
jecxz
sub
mov
and
fwait
in
push
push
(bad)
fistp
dec
aam
(bad)
rol
mov
or
push
pop
and
add
xchg
retf
xchg
bound
pop
outs
dec
inc
cwde
sub
sbb
xchg
jl
pop
and
push
xchg
pop
les
dec
xchg
cmps
scas
pop
cs
pushf
inc
or
jecxz
cmps
sub
cmps
xchg
rcr
dec
xor
inc
enter
(bad)
data16
int3
(bad)
dec
les
fadd
clc
outs
push
push
cmp
dec
or
pop
jge
dec
sbb
jnp
das
lock
sar
push
xor
into
xor
jmp
cdq
jge
mov
jne
bound
or
es
jmp
cdq
push
mov
rcr
or
stos
sbb
and
xor
ds
cmp
scas
dec
(bad)
popf
ss
das
dec
push
jno
stc
ror
xchg
outs
mov
sub
add
mov
in
repz
loopne
in
rcl
xchg
cmc
jae
push
mov
push
ins
outs
js
movs
add
stos
ss
cmp
jmp
pop
sub
xor
mov
push
and
stos
sbb
jmp
loop
test
add
out
cld
pop
test
scas
lods
repnz
add
xchg
stos
fucomip
dec
pushf
jae
add
pop
jmp
into
sbb
mov
and
mov
jno
mov
mov
jns
xlat
(bad)
push
(bad)
(bad)
in
retf
mov
mov
mov
sub
pop
mov
cmp
sbb
mov
add
(bad)
pushw
push
cdq
mov
iret
pop
hlt
xchg
pop
mov
xchg
push
push
ds
pop
xor
add
adc
daa
(bad)
sbb
ds
arpl
stos
xor
stos
(bad)
(bad)
in
adc
adc
std
xchg
sub
dec
pusha
jne
cmps
adc
and
jae
sub
in
mov
push
loopne
or
push
inc
xor
sub
sub
mov
cmp
inc
iret
je
mov
gs
into
repz
xor
and
(bad)
fwait
mov
(bad)
out
sbb
dec
mov
push
or
mov
stos
xchg
sbb
adc
sub
das
cs
mov
pushf
scas
dec
add
pop
jno
push
aaa
popa
test
add
push
dec
lds
adc
jg
fnstenv
sbb
movs
(bad)
retf
test
add
ja
dec
pop
scas
pop
jl
(bad)
push
aad
iret
and
pop
clc
and
dec
mov
(bad)
push
or
(bad)
mov
pop
and
xlat
sahf
shl
and
or
(bad)
push
sbb
test
(bad)
ins
pusha
lods
dec
push
sub
cmp
repnz
pop
sbb
xor
sbb
push
push
clc
div
dec
(bad)
(bad)
in
pop
aaa
sbb
popa
dec
sub
fs
inc
(bad)
stos
ficomp
scas
mov
out
fimul
js
in
out
iret
push
mov
ds
ds
mov
(bad)
push
mov
popa
movs
adc
scas
jecxz
xor
dec
and
mov
xlat
ret
and
out
or
sub
add
mov
gs
dec
mov
xor
movs
aam
xchg
push
mov
shl
mov
push
inc
daa
xchg
mov
clc
(bad)
loop
daa
into
push
test
mov
and
fcom
push
push
je
push
daa
pop
xor
mov
pop
mov
daa
jmp
xchg
or
repnz
hlt
sbb
push
fisttp
addr16
cmp
mov
cmp
call
mov
shl
cdq
lds
mov
pop
adc
mov
out
xchg
pop
pop
xchg
imul
imul
xchg
out
mov
inc
mov
lds
sbb
push
jmp
fcmovne
sbb
mov
xor
repnz
clc
fiadd
mov
and
lock
cmps
ins
adc
out
push
or
mov
pop
in
dec
mov
iret
test
sti
aaa
dec
data16
adc
sbb
(bad)
popa
das
lock
loopne
test
cmp
adc
mov
or
push
dec
movs
sub
enter
pop
stc
sub
add
into
inc
sbb
inc
(bad)
out
cmp
push
stos
outs
xlat
ds
xchg
mov
in
(bad)
adc
mov
scas
scas
movs
bound
imul
pop
ds
cmp
repz
jnp
xchg
cmp
and
test
stos
and
cdq
pop
or
xor
sar
out
(bad)
sahf
xchg
mov
or
mov
mov
jle
mov
xchg
dec
in
xchg
dec
fbstp
push
scas
gs
mov
imul
inc
push
cmc
icebp
adc
mov
sbb
out
dec
(bad)
xchg
inc
mov
mov
test
aam
adc
cmp
pushf
or
in
jp
jle
pop
mov
fstp
jp
mov
push
mov
imul
mov
fisubr
jo
mov
mov
xor
add
mov
ins
jno
xor
jl
pop
jge
cmps
loope
xchg
retf
jnp
popf
rcl
test
cs
in
imul
fbld
and
jmp
cmps
push
sub
jecxz
push
mov
loop
cli
ds
push
xchg
in
sub
aad
sub
xor
aaa
and
aaa
xchg
imul
stos
sub
add
jge
sbb
in
aam
sti
push
repnz
mov
sbb
xor
mov
fnstenv
sahf
mov
(bad)
jne
je
movs
cmps
cmp
xor
mov
push
dec
popf
jnp
in
pop
sbb
xor
sbb
inc
sub
add
faddp
xchg
jp
sar
outs
pop
mov
movs
gs
push
dec
sahf
or
and
retf
repnz
stc
xchg
lock
imul
push
cmp
inc
cwde
shr
test
xor
mov
pop
clc
mov
pop
cld
out
and
xor
fld
mov
es
fidiv
mov
lods
stc
sub
and
mov
sahf
dec
adc
mov
push
jmp
adc
xor
inc
ror
clc
adc
sbb
mov
xchg
xor
push
leave
mov
jge
mov
movs
retf
adc
das
icebp
pusha
mov
call
jge
shl
(bad)
jne
or
mov
dec
retf
stos
sbb
and
fwait
cmp
ss
push
xchg
in
cwde
daa
ins
sub
inc
mov
(bad)
das
rol
sbb
inc
das
sti
gs
sbb
mov
outs
inc
ficomp
repz
or
cmp
clc
adc
xor
nop
add
mov
mov
pop
bound
jnp
push
lea
scas
sar
mov
jge
sar
ds
mov
inc
bound
hlt
mov
cdq
add
push
jae
test
mov
pop
xchg
std
fist
or
retf
mov
dec
imul
lahf
add
pop
mov
and
lock
add
int3
jecxz
iret
fisubr
jle
loopne
sbb
adc
mov
movs
dec
mov
fst
and
xchg
mov
push
push
mov
aaa
and
add
mov
sub
movs
pusha
in
sub
rol
dec
adc
aas
js
xchg
fimul
into
scas
xchg
xchg
imul
shl
jmp
push
loope
adc
adc
leave
es
jb
jns
enter
fdivr
cwde
inc
and
mov
jnp
fild
rcl
in
dec
cli
mov
stos
jg
repz
xchg
xchg
sar
and
arpl
cmp
adc
cmp
cmp
sbb
in
pusha
inc
fidiv
out
cmp
mov
add
sub
shr
mov
mov
sar
pushf
xor
mov
pop
int
sub
mov
fcmovnb
xor
and
aam
inc
(bad)
dec
jl
out
push
test
inc
sub
mov
xlat
sar
ret
retf
xchg
and
out
add
inc
push
lahf
xchg
in
sbb
add
push
(bad)
jne
lahf
ds
repz
mov
je
inc
xor
aad
xrelease
jg
loope
pop
aas
dec
loop
mov
push
ficomp
ret
popa
mov
pop
sbb
test
lock
push
mov
(bad)
jmp
(bad)
jge
and
rcl
cmps
cmp
mov
add
inc
ds
add
mov
dec
stc
and
and
test
pop
aam
dec
add
movs
and
hlt
pop
jae
enter
cmp
mov
repnz
jg
or
mov
aad
mov
movs
test
xchg
call
xor
outs
push
push
lahf
dec
in
pop
sahf
ins
push
imul
out
rcr
add
xchg
cmc
inc
xchg
xor
retf
sub
sbb
imul
cmp
sbb
dec
mov
jb
sbb
inc
(bad)
cmc
sar
icebp
addr16
mov
dec
in
es
xlat
aaa
push
fs
sub
ss
sub
sub
gs
mov
push
retf
adc
clc
xchg
dec
test
cmp
dec
mov
jmp
sahf
call
pop
leave
test
push
xor
lock
sbb
(bad)
pop
fdiv
xor
add
popfw
(bad)
dec
sub
(bad)
jmp
jbe
and
sub
pop
out
mov
jmp
and
jle
repz
(bad)
popf
xor
xchg
push
hlt
sahf
es
test
inc
adc
out
fcmovb
test
lahf
dec
out
js
sub
lea
div
(bad)
das
stos
clc
jecxz
jge
push
aad
xor
add
jmp
leave
les
xchg
rol
inc
cmps
inc
inc
mov
jl
add
test
add
cmp
push
rcl
neg
xchg
neg
push
add
add
scas
pop
popf
and
dec
ja
sbb
out
out
out
xor
outs
jecxz
iret
fst
hlt
ret
fwait
sbb
push
cmp
repnz
dec
data16
mov
pop
cwde
adc
in
aam
mov
sbb
cmp
pop
lahf
dec
imul
ss
push
adc
mov
and
inc
and
outs
or
imul
stos
add
ss
rcl
jno
push
mov
dec
push
push
dec
mov
cmc
add
lods
ret
jnp
imul
push
dec
or
xrelease
retf
int
push
out
cmp
jp
aad
push
fs
aad
mov
pop
shr
shl
push
mov
add
mov
or
(bad)
outs
and
sbb
dec
lods
dec
adc
inc
inc
sbb
pop
inc
push
sbb
repnz
inc
aaa
and
nop
arpl
retf
loopne
cld
iret
adc
jo
shl
loopne
test
call
cmp
push
inc
repz
adc
xchg
scas
sub
adc
pop
(bad)
xor
ror
mov
pop
adc
push
push
movs
xchg
or
fsub
xor
pushf
movs
and
cmp
adc
lahf
jbe
ins
imul
clc
dec
xlat
fadd
pusha
inc
repz
cmp
gs
xor
adc
inc
mov
repz
rol
dec
push
push
stos
and
enter
iret
dec
mov
mov
and
scas
mov
pop
xchg
popa
enter
mov
xchg
mov
(bad)
xor
adc
in
xchg
xchg
daa
(bad)
xchg
xchg
in
repz
lds
std
test
mov
out
jmp
or
arpl
pop
jb
and
sub
ja
in
shl
mov
sbb
jbe
dec
cdq
push
xor
xchg
pop
jp
add
mov
jb
aas
xchg
ret
mov
push
retf
scas
xor
push
fistp
cmps
push
jge
sbb
xchg
push
(bad)
and
sahf
les
hlt
shr
scas
test
mov
loop
daa
stos
test
cmp
xchg
fadd
(bad)
dec
(bad)
jecxz
sub
pusha
js
dec
movd
ja
rcl
shl
or
cmp
inc
call
out
ror
daa
stos
xchg
mov
fcmove
out
stos
push
add
sbb
ret
std
xor
fwait
aas
jno
and
(bad)
fistp
sbb
test
push
arpl
dec
mov
ins
lock
or
jl
fcmovbe
retf
xchg
mov
jle
push
(bad)
push
dec
sti
iret
(bad)
jge
xchg
rcl
shld
mov
push
cmp
ret
inc
dec
sbb
div
ret
imul
(bad)
setbe
call
inc
mov
mov
mov
stos
rcr
fidiv
mov
retf
lahf
push
dec
xchg
jno
shl
sub
in
mov
push
in
not
into
iret
fwait
cmps
sub
sub
seto
stos
int3
ficom
jae
jmp
fsub
jno
mov
or
loopne
(bad)
fst
xchg
mov
cdq
sub
cmp
out
pop
lahf
or
cld
pop
mov
repz
aas
nop
fnsave
mov
inc
(bad)
cmp
mov
ret
xchg
sahf
test
into
adc
out
jnp
jne
mov
jb
test
fist
inc
sub
mov
fcom
inc
cwde
div
int
mov
jmp
es
sub
lahf
mov
ds
sub
ret
and
(bad)
push
pop
mov
lods
ds
(bad)
mov
xchg
bswap
sbb
test
xlat
dec
pop
mov
mov
xchg
sahf
stc
clc
push
push
pop
test
popa
ins
xchg
out
fisub
in
cmps
stos
iret
je
inc
jno
mov
rcr
fld
inc
pop
hlt
fiadd
sbb
int
lea
(bad)
cmp
popa
ret
repz
mov
sbb
jb
iret
pop
aad
mov
xlat
pop
rcr
xor
push
mov
push
xchg
cmp
mov
mov
call
loope
xor
fdiv
cmps
pop
push
ffree
pop
movs
push
ret
or
and
out
jb
xchg
xor
out
pop
xchg
call
mov
add
call
into
mov
ret
xor
lods
sbb
dec
mov
and
add
jnp
rcr
ins
gs
mov
mov
sub
jne
mov
mov
xchg
xchg
cmp
jo
and
sbb
addr16
mov
sub
push
(bad)
adc
fwait
inc
or
sbb
inc
push
inc
sbb
loope
loope
mov
neg
pop
add
mov
lock
cmp
repz
dec
ja
add
push
test
(bad)
out
jle
inc
jae
mov
aas
fdivp
adc
leave
aas
fs
data16
loopne
sbb
fcomp
bound
js
sbb
push
test
inc
test
mov
loop
sub
stc
mov
add
cmp
jb
xchg
daa
push
inc
sub
xlat
or
inc
lock
fistp
mov
jo
xchg
scas
pcmpgtw
jecxz
mov
push
repnz
leave
lock
lea
dec
adc
xor
mov
jnp
xchg
and
out
bound
xchg
clc
mov
cmp
sbb
jp
movs
push
lods
mov
lea
iret
adc
and
enter
sub
fs
fiadd
bound
and
movs
adc
(bad)
clc
mov
repnz
lods
fisubr
ss
into
jo
sbb
xlat
jmp
and
rol
push
jmp
pop
inc
jp
cmp
inc
lahf
cli
mov
int
js
sbb
mov
shr
jecxz
pop
cwde
retf
dec
es
rcr
and
repz
iret
jmp
mov
pop
mov
mov
sbb
and
mov
pop
sub
or
sub
mov
xchg
mov
pop
xchg
js
dec
repnz
pop
out
lods
lea
cld
mov
icebp
popf
dec
or
sub
arpl
inc
or
sub
sub
inc
movs
cmp
inc
nop
pop
jns
int
out
pop
jno
mov
lea
jl
mul
std
cdq
aaa
mov
inc
xchg
push
sbb
fdivr
leave
sub
outs
add
xchg
cmps
xor
add
cmp
sbb
pushf
adc
add
int
add
nop
(bad)
ror
mov
inc
mov
cmp
mov
xor
sbb
xor
in
lahf
retf
push
inc
and
inc
mov
xor
dec
aaa
les
cmps
jno
sub
add
jmp
push
int3
sub
sbb
fild
inc
jp
fsub
xor
sbb
addr16
inc
mov
adc
movs
sbb
or
mov
push
jle
xor
mov
stos
outs
cmp
mov
add
pushf
sti
jmp
fs
jmp
bound
sub
adc
ret
test
cmp
mov
xor
cmp
call
inc
test
adc
jno
(bad)
jge
inc
icebp
and
bound
inc
(bad)
aaa
je
pusha
addr16
movs
daa
sbb
imul
jp
sahf
jmp
out
cmc
inc
les
add
jns
jmp
std
adc
jo
scas
pusha
sahf
popa
dec
(bad)
mov
fidiv
dec
fldcw
xchg
inc
xor
xor
mov
jbe
xor
and
lea
dec
rcr
loop
xchg
mov
and
sbb
cmp
mov
lock
fdivr
ret
jle
pushf
pusha
xlat
adc
jnp
pop
xchg
xchg
jl
mov
and
pop
pop
iret
repnz
in
shr
mov
inc
inc
mov
mov
mov
xor
fucom
cwde
mov
loop
sbb
jmp
arpl
cdq
inc
ret
mov
fidiv
sbb
addr16
lods
sbb
sub
sub
push
fstp
aas
add
out
loopne
out
xor
shl
imul
mov
cmp
fcmovbe
movs
inc
inc
call
mov
leave
mov
mov
cmp
pop
dec
int3
inc
out
lock
rcr
add
cmp
dec
lock
dec
pop
push
lea
fcom
mov
xchg
pop
daa
xchg
mov
mov
mov
clc
inc
test
pop
mul
mov
nop
int
rol
fimul
inc
imul
cdq
out
repz
scas
cmp
pop
pop
and
loopne
mov
ins
mov
lock
mov
adc
jo
outs
pop
loope
fwait
inc
pop
dec
sbb
aas
aaa
loopne
stc
loope
push
dec
lahf
ins
repnz
and
or
xor
inc
sub
dec
mov
test
pop
cld
push
sbb
and
pusha
dec
addr16
and
adc
xchg
xor
outs
pop
ins
repnz
cmp
xor
test
cdq
(bad)
out
sub
push
in
sub
push
lods
inc
repz
cld
into
out
xchg
loop
(bad)
lea
sar
lods
out
pop
lgs
test
xchg
or
(bad)
mov
fs
xchg
ins
mov
or
xlat
or
xor
out
push
hlt
adc
dec
dec
inc
xchg
xor
popa
adc
cmc
mov
inc
mov
push
mov
cmp
aas
sub
rcl
sbb
push
jno
mov
pusha
jnp
std
(bad)
mov
out
cld
pop
add
xlat
pop
and
hlt
fs
dec
push
ja
icebp
pop
mov
shr
push
into
inc
ror
dec
or
leave
pop
pop
or
mov
adc
(bad)
jnp
pop
cmp
call
sar
fwait
daa
sbb
jecxz
(bad)
push
xor
dec
clc
mov
mov
pop
mov
and
scas
push
pusha
mul
push
frstor
lahf
or
mov
dec
mov
aaa
sbb
sub
cmp
inc
in
add
jne
div
push
push
in
jmp
push
jmp
inc
les
repz
retf
dec
inc
imul
nop
push
je
xlat
xchg
ret
or
aas
daa
push
popa
mov
xchg
mov
lods
dec
aas
test
loope
sti
sar
cmps
xchg
pop
add
push
dec
movs
sbb
shr
(bad)
push
retf
xchg
movs
jbe
scas
lods
scas
xor
movs
sub
sbb
shr
je
add
ss
mov
mov
data16
retf
fstp
or
jno
sub
adc
outs
xchg
shl
scas
adc
mov
cmps
sti
in
mov
test
icebp
(bad)
push
xor
movs
adc
push
cmp
sbb
xlat
mov
int3
cmp
out
sbb
(bad)
and
sbb
mov
call
out
mov
mov
cmps
aas
in
push
add
mov
out
cmp
scas
inc
or
pop
pop
xchg
in
add
pop
cmps
or
or
shl
out
cmp
ror
xchg
pop
in
out
and
jp
out
push
adc
ror
mov
mov
mov
xchg
inc
or
fwait
sub
sub
call
sbb
or
dec
std
in
push
xchg
ficomp
cmc
pop
jl
ret
dec
les
pushf
nop
xor
or
pop
(bad)
push
cmp
mov
pop
ins
jb
cmps
inc
mov
out
jbe
jge
je
xchg
dec
(bad)
in
ja
dec
int3
add
or
clc
and
mov
jno
jmp
pop
push
es
loopne
in
jne
inc
lods
repnz
in
shl
rol
and
call
add
cmp
sub
add
dec
movs
icebp
push
not
pop
popa
push
jmp
(bad)
jl
xchg
mov
push
push
jo
mov
dec
sub
or
lods
test
sbb
push
sub
inc
clc
or
lock
or
ins
std
cmp
pushf
das
les
mov
ret
setne
push
push
add
sbb
sar
xchg
hlt
aam
setno
pop
pop
lds
dec
mov
mov
or
dec
push
repz
pop
sub
inc
pop
or
fdiv
retf
adc
fbstp
mov
mov
adc
test
mov
rol
loope
call
daa
ss
stc
push
sub
add
loop
fcomp
inc
lds
addr16
xor
jl
mov
fistp
fidiv
mov
xor
sbb
js
aam
outs
mov
dec
int
lock
pop
(bad)
out
inc
popa
dec
pop
adc
push
lods
jg
cwde
push
push
push
and
clc
dec
lea
inc
jo
nop
fild
sub
int
jno
mov
and
icebp
fwait
inc
leave
shr
or
pushf
pop
imul
jp
mov
adc
mov
or
repnz
dec
xchg
mov
jg
in
out
sub
ja
lods
cmp
(bad)
lods
scas
movs
sbb
fist
sub
jmp
sti
jmp
push
sub
lods
jae
bound
stos
inc
mov
inc
scas
pop
fdiv
fs
(bad)
and
dec
pop
pop
test
pop
cli
pop
mov
xor
int3
fwait
jp
mov
out
mov
cwde
or
inc
loope
sbb
dec
cmp
scas
outs
loope
ja
jmp
cmps
gs
mov
xor
call
(bad)
inc
je
mov
inc
fs
je
pop
sub
ins
mov
arpl
pop
hlt
pop
pushf
ja
push
xchg
or
sub
mov
xor
fild
fisubr
test
inc
scas
adc
inc
mov
fimul
pop
mov
mov
fwait
or
xchg
inc
pop
and
ficomp
xor
(bad)
mov
jl
in
repnz
fwait
js
std
xchg
inc
mov
mov
push
stos
pop
loop
iret
gs
loopne
das
jp
fistp
jno
cli
and
mov
mov
sahf
test
sub
imul
mov
mov
aad
ss
retf
mov
add
add
sbb
pop
clc
mov
(bad)
stos
fdivr
rep
jns
dec
in
inc
xchg
inc
mov
adc
add
mov
in
enter
push
sub
test
fidiv
xor
dec
icebp
cmp
mov
sub
mov
jecxz
pop
jo
inc
xchg
cli
mov
inc
cmc
jge
and
das
inc
and
mov
test
push
adc
pusha
fldlg2
or
lock
stc
test
lahf
popf
inc
adc
jl
pop
pop
inc
rcr
sbb
arpl
cmps
xchg
adc
or
mov
adc
cmp
pop
pop
dec
stc
not
sub
fcom
or
(bad)
loopne
rcl
ror
fstp
dec
fcom
xor
sub
cmps
jo
(bad)
jmp
ja
sub
dec
out
inc
lea
mov
call
xor
push
arpl
mov
hlt
adc
ss
mov
jnp
(bad)
in
xor
std
push
adc
sbb
mov
mov
inc
retf
adc
push
sbb
dec
lods
push
lahf
shr
rcl
pushf
push
dec
xchg
xor
mov
stos
add
sub
cs
test
nop
mov
leave
fisub
in
sbb
sub
add
xchg
mov
in
mov
sbb
sahf
test
xchg
push
mov
test
scas
xchg
lock
sbb
push
jnp
fisttp
pop
sti
mov
shl
js
call
fs
mov
sbb
pop
std
leave
mov
xor
sbb
xchg
movs
mov
cli
lahf
clc
pop
add
movs
sbb
xchg
jle
imul
ror
out
(bad)
out
ja
xchg
cmp
add
cmc
bound
and
addr16
push
jg
mul
and
imul
jmp
mov
out
push
and
sbb
into
jle
mov
fld
lahf
jo
lock
dec
mov
ret
lods
sahf
sbb
jns
ret
(bad)
adc
retf
mov
shl
data16
add
sub
jge
pusha
retf
rol
jae
xchg
mov
and
stos
rcl
xor
mov
imul
pop
rcl
fwait
jmp
js
fcomp
or
xor
dec
inc
dec
sub
sti
and
dec
cmc
icebp
test
push
movs
xor
and
inc
outs
clc
fwait
push
sbb
out
sbb
mov
mov
adc
mov
lea
pop
hlt
xchg
pusha
cs
icebp
mov
mov
jp
xor
mov
imul
das
cli
push
mov
outs
xor
xchg
mov
ds
jl
sub
fldenv
dec
jno
jecxz
fild
mov
mov
clc
in
sbb
and
aas
cmps
lods
cmp
dec
cs
ret
sbb
popa
mov
cmp
pop
loopne
dec
es
and
jg
retf
jae
jae
or
cmp
mov
sbb
sbb
and
and
cdq
call
or
and
mov
int
xor
aaa
bound
inc
int
mov
dec
xlat
retf
ret
retf
jno
stos
(bad)
cmp
fdivr
mov
and
pop
sub
in
mov
xchg
pop
out
inc
pop
in
mov
sub
sub
inc
and
ins
pop
aas
xchg
sbb
mov
mov
js
pop
sahf
push
cmp
into
and
dec
sar
in
sub
ret
cmp
sub
add
cmp
jbe
jge
xchg
pop
shl
mov
or
fcmovb
pop
js
sbb
(bad)
lahf
test
pop
jecxz
pushf
loope
dec
and
xchg
adc
mov
jge
pop
mov
mov
cmp
adc
mov
pop
mov
rcr
cmp
out
sbb
(bad)
rcr
jp
aam
mov
shl
rcr
rcl
fwait
push
mov
retf
xor
pop
pop
jl
in
adc
cdq
and
xchg
js
jmp
mov
push
test
mov
fnstcw
jp
inc
mov
shr
push
push
xor
jmp
lods
stos
push
mov
xor
aaa
popa
push
les
adc
xchg
pop
sbb
div
or
aas
push
pop
push
adc
dec
dec
stc
mov
aaa
jbe
cmp
and
out
mov
not
mov
mov
sti
add
inc
lahf
test
mov
adc
or
bound
push
pop
fldcw
leave
mov
mov
(bad)
idiv
loop
inc
sbb
add
xor
setb
int3
test
or
aam
repnz
into
lock
jmp
(bad)
mov
mov
mov
dec
push
icebp
test
movs
movs
cmc
call
lods
aas
fmul
out
imul
mov
mov
or
pop
cmps
je
lods
jno
bnd
add
mov
ret
mov
add
movs
enter
cs
sbb
sub
daa
mov
push
and
fidivr
xchg
lahf
and
fbstp
cmp
arpl
arpl
in
or
ret
jmp
adc
mov
(bad)
stc
add
lahf
push
mov
inc
pop
imul
or
cdq
adc
pop
gs
mov
sub
sti
cld
outs
dec
sub
sbb
and
inc
dec
adc
out
dec
in
xchg
dec
cmp
inc
fstp
xchg
sahf
pop
dec
mov
mov
xor
cmp
jl
cmp
dec
push
cmps
ret
ins
dec
(bad)
add
and
pop
in
pop
mov
(bad)
fidiv
inc
ret
xchg
dec
ss
mov
pop
setg
retf
(bad)
je
sub
out
das
or
push
imul
enter
pop
scas
ret
xchg
or
int3
inc
jb
dec
xchg
scas
push
push
fsub
movs
sbb
ret
mov
xchg
inc
loope
jbe
sti
xor
stc
and
and
mov
sub
add
repz
pop
mov
dec
popf
mov
pop
add
mov
call
daa
jbe
add
mov
test
lods
jb
fist
stc
add
push
jp
sub
lods
lods
(bad)
addr16
mov
retfw
retf
popa
jg
mov
jne
stos
or
push
ja
jmp
ficomp
cmps
pop
add
mov
xor
dec
ret
fstp
sbb
repnz
pop
xchg
jbe
icebp
lods
sbb
dec
scas
jecxz
add
or
call
cwde
adc
out
inc
jns
ror
push
(bad)
lods
jmp
xchg
cwde
sti
repz
mov
aam
scas
les
fild
add
into
lock
push
cmps
into
sbb
cmp
ficomp
in
push
jo
or
inc
mov
fild
clc
test
popa
inc
repnz
popf
test
aas
test
cmc
sub
add
(bad)
fbstp
ins
sbb
push
adc
test
ror
pop
jmp
mov
je
movs
lea
and
inc
sbb
cmp
imul
jmp
mov
xchg
or
les
xlat
out
aas
enter
jbe
mov
gs
sub
daa
pop
push
out
jge
mov
cwde
mov
mov
int
mov
pop
pop
xchg
in
jecxz
pushf
sub
jo
lds
fs
push
js
inc
lock
dec
mov
mov
lahf
inc
cli
into
push
pop
outs
jnp
pop
pop
(bad)
cmp
movs
push
inc
mov
jmp
fdiv
inc
or
fst
rcr
fs
cwde
jmp
jo
dec
in
inc
push
jo
enter
arpl
pop
push
mov
dec
cmp
pop
xor
xchg
cld
je
and
call
add
jne
jo
repnz
addr16
pusha
sub
sub
mov
jae
ja
cmp
push
jae
sbb
xchg
xchg
xchg
mov
loope
cmps
mov
outs
ja
sbb
pop
xchg
div
pop
ins
pusha
repz
mov
mov
mov
adc
sub
xor
(bad)
fld
out
mov
push
add
inc
and
bound
jne
sbb
bound
xchg
leave
adc
es
sahf
xlat
enter
jmp
xchg
sbb
mov
cmp
xchg
call
or
aam
pop
dec
inc
ffreep
movs
and
or
pop
mov
lock
(bad)
dec
and
into
lods
cdq
mov
inc
inc
xor
mov
mov
and
and
or
push
call
mov
fisub
test
add
movs
aam
rcr
push
icebp
push
ss
pop
int3
xor
pop
push
cld
xor
mov
pop
jecxz
in
in
or
mov
sub
in
shr
(bad)
jmp
fsubr
mov
ret
mov
cld
xrelease
push
fcom
test
aas
mov
aaa
(bad)
pop
fisubr
aad
dec
int
cwde
iret
xor
or
and
je
loope
jle
mov
dec
outs
cmc
std
jnp
call
shl
jge
loopne
cmp
push
cli
push
xchg
inc
jno
jns
int
sbb
pop
(bad)
jo
and
jle
into
mov
adc
clc
xor
cwde
adc
pusha
sbb
mov
jecxz
sti
frstor
scas
jge
xor
jp
xor
sbb
jno
push
jnp
mov
xchg
inc
mov
pop
sub
or
test
call
mov
sahf
mov
test
fst
leave
push
sar
mov
mov
bound
xchg
out
les
addr16
and
cli
cmp
call
inc
jne
cli
mov
xchg
or
inc
pushf
mov
mov
es
fwait
cmps
out
dec
mov
push
mov
push
mov
psubd
jnp
call
mov
sbb
sub
mov
mov
call
es
push
or
in
bound
(bad)
mov
pop
ret
xchg
adc
or
std
and
mov
fwait
mov
out
xor
or
popf
adc
call
int3
nop
popf
jle
rcl
xchg
mov
lods
mov
mov
push
movs
dec
xchg
into
clc
sbb
dec
dec
ret
mov
mov
dec
js
or
shl
mov
outs
test
push
pop
in
sub
jb
mov
test
mov
js
inc
fwait
mov
popa
or
stc
hlt
mov
adc
add
and
push
int3
pusha
adc
cmps
push
shr
mov
(bad)
mov
mov
int
imul
(bad)
adc
sub
stos
fld
push
fsubr
movs
sbb
es
push
inc
ret
add
pop
add
enter
push
add
outs
jmp
xchg
cld
(bad)
lock
inc
test
sub
neg
gs
inc
shl
call
xchg
jae
mov
fisttp
adc
outs
cli
cli
lahf
cdq
clc
pop
push
pop
mov
(bad)
daa
push
call
pop
jmp
scas
sbb
leave
(bad)
sub
push
arpl
push
mov
jmp
push
stos
xor
sub
or
cmps
jl
sbb
push
mov
in
(bad)
pop
pop
enter
iret
pop
js
inc
xor
movs
xor
mov
push
xor
inc
xchg
cmp
cmc
inc
dec
xor
or
dec
cs
int3
push
data16
imul
adc
jl
pop
sbb
or
or
ja
mov
jno
addr16
cmp
sbb
sbb
xchg
and
cmp
pop
call
call
in
inc
ror
cmp
mov
je
dec
test
std
xchg
sub
out
stc
lahf
js
sub
retf
sub
jp
jl
data16
movs
inc
xchg
outs
xchg
cmp
sub
popa
jb
or
in
enter
mov
push
daa
xor
jp
mov
test
and
xchg
into
and
mov
cmp
fdivr
ret
call
or
jmp
mov
inc
pusha
cmps
loopne
mov
cmp
adc
outs
je
jle
cmp
std
fdivr
mov
mov
and
(bad)
mov
stos
sub
jl
in
je
mov
aam
xor
jp
ss
movs
xchg
and
aaa
add
add
cmps
or
sbb
fild
sar
js
das
pop
cli
ss
add
xchg
adc
adc
jnp
mov
addr16
xor
xor
retf
retf
pushf
scas
outs
aaa
shr
xchg
retf
xchg
jge
xchg
dec
out
cmp
dec
adc
jne
fwait
xchg
jnp
popf
pop
leave
leave
iret
or
mov
jge
leave
jbe
inc
add
inc
jge
aad
mov
lock
into
int3
xlat
fisubr
jo
xchg
enter
or
sbb
jbe
aam
xlat
cmps
in
inc
jnp
stc
(bad)
out
aas
add
push
icebp
ja
mov
rol
test
fcom
loop
int
adc
vmovapd
aas
mov
je
aad
cmp
sub
shr
sbb
pop
sahf
mov
push
sub
add
movs
push
into
shl
or
dec
sbb
ficomp
push
cmp
xor
cdq
sar
push
pop
xor
dec
retf
and
scas
push
sub
jno
adc
fistp
unpcklps
mov
or
and
fwait
pop
ins
mov
sbb
push
mov
fwait
dec
dec
push
mov
arpl
pop
cmp
fsubr
call
cli
sbb
out
or
inc
les
push
ins
adc
fistp
enter
adc
fstp
(bad)
mov
fidivr
scas
xchg
sbb
push
fldenv
jl
mov
sub
mov
mov
inc
sar
fld
push
mov
cmp
rcr
xchg
push
xchg
inc
push
cdq
ret
imul
test
cmp
mov
int3
xchg
fnsave
adc
jns
add
stos
xchg
addr16
adc
cmc
sbb
sbb
jp
sub
imul
sub
pop
sbb
popa
mov
ret
adc
in
js
rol
icebp
cli
and
push
test
pop
mov
inc
test
out
call
dec
pop
ficomp
or
pop
sbb
inc
add
ss
mov
xchg
dec
addr16
jne
icebp
out
cs
ja
pop
aam
test
push
sbb
inc
fcom
loopne
test
out
mov
test
add
or
cmp
xor
stc
movs
pushf
or
icebp
fsubr
cld
(bad)
in
mov
cmp
popf
iret
mov
scas
cmp
inc
sub
fdiv
in
push
lods
push
in
sub
xor
mov
mov
gs
xchg
pop
pop
jno
popa
dec
retf
in
mov
call
cld
cli
sbb
xchg
lods
mov
aaa
pop
xchg
push
inc
push
repnz
ret
push
push
mov
int3
stc
mov
jmp
js
dec
dec
scas
xchg
fcmovnb
jle
sub
call
push
hlt
scas
je
mov
aaa
inc
lds
mov
push
ret
loopne
push
dec
inc
mov
cdq
stc
mov
inc
ud1
adc
leave
push
jns
mov
loope
push
jge
jmp
and
sub
sub
cs
out
ficomp
(bad)
mov
leave
mov
shr
fisubr
or
xchg
call
pop
ins
clc
xchg
sub
inc
retf
sub
out
jecxz
or
mov
pop
push
adc
aam
jb
push
(bad)
rol
sbb
test
fild
mul
pop
ret
mov
retf
scas
xor
dec
add
push
pop
addr16
xor
pop
jno
jno
in
out
ins
fmul
mov
sti
js
cmp
pop
and
cmp
xchg
pop
nop
mov
cmp
mov
cmp
pop
test
(bad)
aad
iret
dec
cmp
cli
(bad)
repz
mov
push
inc
push
out
adc
test
popa
fld
lock
scas
dec
push
cmp
xchg
xchg
aad
xlat
(bad)
cmp
(bad)
retf
aam
test
cmp
xor
dec
jae
aaa
nop
call
sbb
mov
sbb
xor
pop
outs
push
stos
mov
sub
dec
inc
mov
mov
out
daa
mov
mov
mov
push
pop
or
xlat
int3
retf
mov
mov
push
fisub
xchg
and
add
mov
jge
shr
cdq
cmp
inc
test
mov
jg
jae
jns
sbb
movs
imul
jmp
paddw
pop
out
jle
les
adc
adc
mov
les
shr
aad
stc
(bad)
sbb
pop
ins
test
dec
mov
push
sub
xor
xchg
sbb
cdq
cmp
cmp
(bad)
ss
inc
fild
(bad)
ins
cmps
je
lock
inc
adc
cmp
and
fisttp
mul
dec
push
jns
push
jmp
dec
push
enter
imul
enter
adc
mov
(bad)
push
(bad)
test
daa
pop
pop
jns
mov
mov
add
dec
outs
scas
jg
loope
adc
dec
pop
and
cmp
retf
cmp
loopne
cmps
add
jnp
je
jns
jge
xor
dec
es
mov
jo
ret
jnp
sub
les
shl
sub
xchg
(bad)
jo
sar
ss
jo
push
xchg
dec
jge
or
jae
or
ss
cmp
lahf
fstp
xchg
mov
loope
push
cmps
icebp
inc
sbb
and
enter
arpl
test
push
jnp
not
cmp
sbb
test
nop
test
dec
ins
jmp
ins
mov
hlt
(bad)
shr
push
cdq
adc
mov
shl
ret
sub
xlat
iret
push
mov
cmps
stos
inc
daa
mov
jo
add
hlt
(bad)
fsubr
and
dec
cdq
add
movs
or
pop
jge
sbb
aam
rcl
cmp
lea
sbb
xchg
inc
shl
inc
jnp
pop
adc
pop
imul
inc
sahf
pop
or
or
stc
mov
inc
pop
cmp
es
lock
cmp
in
fwait
cld
cmps
jns
mov
arpl
imul
mov
pop
rcr
cs
or
add
and
cmp
ins
xor
iret
add
adc
xor
popf
add
xchg
dec
loopne
dec
fwait
div
(bad)
pusha
bound
aam
add
repnz
dec
push
xor
and
ss
inc
mov
jae
pusha
loope
shl
dec
or
sub
inc
adc
shr
pop
pop
std
push
repz
test
sub
xchg
xor
xchg
cld
enter
(bad)
xor
mov
push
lods
push
push
fsubr
in
dec
sbb
cmp
sub
(bad)
pop
popf
ficom
sub
xchg
adc
sub
xchg
push
cld
sbb
cmps
lods
push
retf
push
pop
mov
sar
repnz
xchg
add
inc
out
inc
push
pop
(bad)
data16
shl
repz
mov
in
fidivr
pusha
ror
dec
jbe
dec
cmp
popf
jns
mov
jecxz
(bad)
mov
in
sahf
(bad)
fwait
jb
(bad)
mov
sub
pop
push
scas
je
inc
xor
lods
xchg
div
push
call
repz
(bad)
cmc
mov
sbb
in
pop
cmp
nop
sub
sub
retf
and
pushf
popf
xor
jno
ret
add
fadd
fiadd
in
out
in
test
add
cdq
pusha
div
jae
cmp
push
dec
scas
sahf
in
jnp
cmp
aaa
jg
add
or
xchg
xor
jecxz
inc
or
pop
pushf
adc
mov
adc
jp
aad
mov
sar
dec
dec
sub
data16
jo
jns
rol
jnp
xlat
leave
stos
shr
and
xor
sub
push
xor
ja
jl
(bad)
cmp
pop
imul
shl
pop
ins
pop
call
mov
pop
retf
xlat
dec
push
ins
inc
stos
imul
aad
mov
adc
cdq
xor
bound
push
inc
mov
bound
jne
aas
adc
pop
cdq
dec
cmps
jbe
sbb
push
jo
and
popa
xor
or
shl
sub
not
ret
stc
cmc
add
sbb
and
out
outs
stos
push
out
test
(bad)
sbb
xor
rcl
cli
test
xor
js
sbb
ins
dec
dec
mov
add
push
mov
iret
mov
sub
stos
push
shl
inc
cld
add
add
mov
or
cmc
xchg
(bad)
sbb
mov
xor
dec
push
sbb
mov
imul
jns
popa
fucomip
repnz
lock
cmp
jno
inc
mov
hlt
pop
cmps
inc
out
shl
sbb
dec
das
dec
xchg
mov
fdiv
fsubr
xor
inc
je
jnp
lock
stos
rcl
adc
data16
cmps
adc
adc
aas
lds
adc
movs
pop
stos
push
leave
xor
push
std
sub
cmp
mov
sbb
dec
sub
or
ret
in
add
sbb
or
inc
xchg
mov
pusha
scas
xchg
int3
inc
push
cld
test
mov
out
mov
mov
mov
bnd
mov
or
cmp
iret
das
out
(bad)
in
push
pop
ins
xor
into
in
iret
inc
push
lock
inc
jecxz
xchg
fwait
test
test
std
test
retf
and
inc
jge
fdivr
fcom
hlt
add
aaa
mov
aad
(bad)
cmp
mov
push
jp
push
les
or
sub
pop
in
(bad)
loope
or
mov
jo
mov
into
in
or
(bad)
lods
xlat
cmps
cwde
jne
xor
jg
movs
scas
push
arpl
inc
mov
push
dec
sub
cmp
or
mov
mov
(bad)
push
push
lea
sub
cwde
push
push
jp
loopne
sahf
(bad)
rol
jge
mov
push
adc
lock
lock
shl
test
test
jo
pusha
cdq
cmp
out
dec
dec
test
xor
mov
mov
lahf
(bad)
popa
xchg
xlat
rol
jmp
xor
fcom
sub
xor
mov
adc
fwait
mov
paddsb
mov
pop
mov
shr
inc
jne
or
outs
xchg
addr16
call
sbb
xor
push
stos
cmp
ret
push
call
pop
js
jnp
call
add
jnp
fcomp
pop
sbb
das
stos
sbb
pop
or
mov
dec
xor
cmp
nop
rcl
loopne
das
cli
or
mov
pop
sbb
in
mov
and
out
leave
movs
mov
pop
mov
in
jae
fdivr
and
cbw
(bad)
imul
bound
ffree
aam
cmp
mov
movs
inc
retf
adc
mov
mov
lock
sub
xor
lods
inc
pushf
sahf
push
mov
dec
inc
jo
push
sub
sbb
jae
shr
mov
sub
and
ins
xor
test
nop
(bad)
jle
and
cmc
fsubr
int
ds
fdivr
inc
lods
xor
inc
inc
and
cmc
jo
int3
rol
push
fdiv
out
pop
mov
rol
push
add
fnsave
rol
xor
mov
mov
jle
and
test
xlat
shr
retf
push
xchg
push
sar
mov
int3
lods
xchg
sti
cmp
cmp
inc
rcl
fcomp
dec
xchg
mov
out
out
dec
popf
imul
mov
js
mov
retf
in
lds
mov
inc
jg
shr
call
xor
call
aas
movs
daa
or
jnp
jo
repz
sbb
aaa
out
(bad)
adc
and
lahf
test
icebp
sbb
xchg
cmp
outs
add
(bad)
sahf
aad
dec
push
ins
dec
pushf
cdq
cmp
xchg
ret
jp
imul
xchg
pop
(bad)
not
lods
fist
in
ror
adc
cwde
dec
dec
cmp
or
sbb
or
mov
out
adc
mov
push
mov
dec
scas
push
(bad)
cli
mov
add
cmp
loopne
addr16
ror
sbb
in
mov
and
and
fsubr
js
cmp
push
add
add
fimul
mov
test
lock
fs
mov
mov
sbb
or
and
loopne
test
movsx
inc
inc
cdq
add
scas
(bad)
dec
add
mov
adc
xor
mov
out
daa
mov
sar
scas
jno
push
in
push
mov
ret
dec
dec
adc
mov
(bad)
rcr
out
out
adc
and
or
aas
pusha
jmp
dec
ins
mov
inc
out
pusha
or
pop
and
mov
cmps
leave
std
add
icebp
ror
push
cmps
je
out
xchg
inc
sahf
sub
dec
dec
jne
int3
test
push
out
imul
(bad)
and
sub
pop
dec
std
scas
pop
pop
stos
mov
aad
mov
into
aaa
or
xor
jne
cmp
mov
cmc
lock
sbb
push
das
fisubr
inc
arpl
and
bound
sub
or
mov
aaa
int
leave
stos
or
push
mov
sub
mov
cmp
ficomp
idiv
xlat
add
xor
bound
push
pop
cmp
mov
fcomp
pop
retf
fcomp
cmps
push
out
movs
adc
mov
ins
popf
adc
adc
retw
cmc
pop
ins
loop
(bad)
pop
dec
or
aam
inc
and
and
dec
scas
pop
hlt
pop
push
adc
das
fld
add
stos
and
aad
int3
push
mov
xor
mov
clc
push
daa
retf
shl
push
sbb
and
jnp
xchg
(bad)
adc
cmps
xor
repz
inc
xor
js
shl
or
xor
outs
add
jecxz
test
fnstenv
jbe
and
dec
lds
scas
cmp
daa
cmp
pop
or
int
ficom
sbb
(bad)
and
adc
cmp
and
cmp
dec
cmp
ror
lds
and
sub
fs
sbb
or
inc
xchg
jne
dec
mov
push
(bad)
sub
shr
popa
mov
jmp
jg
inc
add
cld
dec
test
repnz
jmp
sbb
push
(bad)
push
and
cmp
lds
nop
push
imul
push
sbb
inc
xchg
sar
stos
inc
jg
test
or
or
pusha
lods
test
xchg
dec
loopne
(bad)
push
rcl
popf
lods
in
xor
(bad)
adc
(bad)
das
inc
loopne
jne
sbb
inc
xchg
cmc
mov
icebp
or
jbe
loop
pop
retf
dec
add
or
popa
xchg
test
bound
loopne
test
rol
xchg
jo
addr16
or
aas
mov
xchg
daa
mov
jns
imul
jnp
ret
mul
movs
ficom
imul
scas
push
cmp
cld
fisub
or
xchg
inc
jo
fisub
shl
cmp
fcomp
retf
stos
rol
inc
arpl
pushf
call
stos
xor
xor
dec
adc
dec
inc
movs
lea
add
cmp
cmp
(bad)
ss
cmp
mov
lods
lahf
inc
xchg
aas
fiadd
jo
ret
repnz
ror
and
mov
xlat
pushf
leave
xlat
(bad)
dec
fmul
push
xor
movs
adc
test
in
jmp
std
sbb
sbb
and
out
pop
imul
xchg
push
fstp
das
xor
in
ja
(bad)
out
ret
dec
jns
jmp
fdivr
(bad)
dec
xchg
popa
pushf
dec
cmp
mov
add
pop
or
imul
ds
xor
dec
outs
inc
mov
sub
add
lods
push
xchg
mov
movs
pop
outs
(bad)
jg
cmp
or
xor
adc
inc
add
mov
xchg
push
into
add
jmp
psubsw
cld
pushf
jns
xor
and
cwde
mov
jae
sbb
adc
ret
test
pop
(bad)
cmp
ret
cmp
(bad)
mov
ret
(bad)
fst
lods
mov
cmp
rcr
push
std
leave
mov
movs
xor
arpl
or
or
sub
mov
sub
xchg
test
adc
jg
or
aam
or
(bad)
dec
or
mov
jecxz
xor
addr16
xor
add
test
xchg
ret
(bad)
dec
stc
ror
jns
outs
pop
nop
idiv
mov
clc
inc
push
add
popa
ins
test
add
push
jns
sub
jo
out
shl
xchg
movs
es
sahf
add
or
inc
jmp
push
mov
cs
dec
inc
and
and
mov
out
or
int3
std
(bad)
adc
add
mov
int3
mov
and
push
xchg
jbe
ins
stos
sub
push
fs
stc
dec
das
pop
inc
inc
mov
adc
xor
xlat
out
lahf
xchg
push
cmps
call
dec
test
inc
hlt
pop
fsubr
mov
mov
or
fs
das
jge
pushf
das
pop
jnp
scas
ins
mov
sbb
xchg
clc
sbb
push
out
ds
sar
push
adc
push
inc
dec
mov
cs
stos
cmp
mov
loop
fld
js
(bad)
push
in
out
inc
mov
sub
and
in
adc
je
aas
mov
movs
inc
mov
push
pop
pop
aas
sub
xor
jnp
xor
mov
je
rcl
movs
push
inc
dec
stos
out
xchg
les
dec
fsubr
cmps
jle
xchg
lods
xlat
das
call
inc
adc
aaa
repnz
cmp
push
leave
daa
retf
dec
cmp
test
jns
sub
jbe
xor
ins
and
les
repz
xor
adc
imul
push
push
sub
rol
add
into
xor
loop
sahf
rcr
imul
pop
fcomp
adc
cmc
sub
jl
cs
scas
jno
or
pop
aad
xchg
adc
in
push
aas
dec
pushf
into
int
mov
int
shl
sub
jno
push
adc
jno
fsub
sahf
add
das
dec
mov
add
add
or
mov
xor
add
mov
movs
loop
mov
sbb
xchg
fmul
ss
std
inc
(bad)
stc
icebp
add
mov
out
adc
dec
jmp
adc
in
out
lock
jge
aas
or
ficomp
sbb
pusha
les
push
xor
mov
or
cmp
retf
inc
retw
nop
push
(bad)
call
inc
aaa
adc
push
pop
jl
lock
add
pop
xchg
sbb
cdq
sub
jmp
mov
ret
fcomip
int
xor
scas
dec
(bad)
jp
xor
sahf
mov
clc
retf
xlat
int
cmp
ds
or
jmp
imul
vpsubd
inc
jno
out
mov
sub
fisubr
lock
std
sbb
lods
xchg
shl
psrlq
pop
mov
loop
and
(bad)
cmp
(bad)
mov
mov
ret
mov
shl
pop
retf
pop
retf
sbb
push
mov
xor
mov
sub
inc
inc
xchg
ja
dec
pusha
inc
ja
xchg
jp
fcomp
dec
ret
(bad)
fnstcw
(bad)
nop
cli
mov
call
push
ins
imul
ss
div
push
fbld
(bad)
loop
std
repz
inc
nop
ins
push
add
fld
adc
shl
mov
and
call
fcom
cmp
sub
(bad)
cmp
rcl
mov
push
mov
cmp
scas
xchg
out
lahf
arpl
add
fistp
add
cmp
(bad)
jg
xor
mov
test
mov
lock
inc
mov
mov
fist
xchg
xchg
mov
cmp
add
sbb
in
fsubr
out
ja
xchg
repz
jle
(bad)
inc
xor
mov
mov
dec
xchg
cmp
addr16
adc
imul
out
bound
xor
fs
lods
push
les
imul
imul
jmp
mov
ret
ja
rol
jge
push
cdq
jmp
pushf
movs
popa
adc
scas
neg
dec
jl
sub
dec
and
aad
pop
lahf
repz
shl
xchg
push
(bad)
lahf
(bad)
mov
sub
in
(bad)
xlat
mov
je
sub
clc
and
call
test
inc
cmp
out
in
jns
pop
jl
pop
xchg
add
imul
dec
in
aam
je
sub
mov
dec
adc
in
pop
in
(bad)
sbb
(bad)
mov
and
dec
sbb
mov
clc
inc
adc
ret
jmp
mov
cmps
stos
(bad)
push
mov
lods
jg
mov
push
or
sub
(bad)
adc
lahf
push
cmps
xchg
es
fld
push
sub
jne
and
mov
sahf
mov
xchg
jo
in
out
pusha
jp
and
sbb
xchg
mov
pop
jmp
loop
ret
dec
cdq
sub
test
mov
shld
shl
iret
inc
mov
scas
inc
dec
lea
xchg
mov
pop
ins
inc
xchg
mov
adc
lock
idiv
leave
push
xlat
(bad)
test
inc
jle
push
dec
mov
scas
mov
daa
stos
pop
fldenv
bound
adc
lock
jo
call
jmp
xchg
clc
ja
sub
inc
jno
(bad)
mov
jl
mov
fwait
mov
cmp
push
mov
bound
cmp
(bad)
ss
les
mov
add
(bad)
(bad)
jns
shr
ins
les
dec
enter
stc
fwait
lods
retf
xchg
mov
popa
add
xchg
mov
fcom
ds
not
push
icebp
js
xor
gs
push
mov
adc
repnz
push
int
cmps
push
jno
xchg
xor
nop
stos
fwait
fwait
and
jg
pop
bound
push
xchg
xor
sbb
cmp
sbb
and
mov
adc
pushf
add
aam
xor
and
lods
mov
dec
imul
loopne
mov
out
add
dec
dec
add
cmp
in
adc
mov
daa
aas
vcmpngtss
xchg
ins
fld
inc
sub
lea
or
dec
adc
aas
jne
gs
loop
or
stc
repz
push
out
adc
enter
(bad)
outs
scas
stos
and
repnz
dec
mov
add
pop
mov
std
shr
imul
dec
xor
and
cdq
mov
lds
dec
inc
cmp
mov
xchg
aam
fdivr
movs
leave
sbb
test
sub
adc
enter
cmps
push
or
gs
adc
jle
xor
imul
outs
xor
push
scas
ins
fidivr
pop
jle
int
popa
lea
add
inc
adc
nop
fs
scas
pusha
jp
dec
aas
ftst
lock
dec
mov
inc
pop
daa
ds
inc
push
mov
test
mov
sub
push
add
mov
and
mov
mov
xor
cs
and
mov
stos
jmp
dec
push
fistp
shr
dec
mov
sub
cmc
xlat
add
cmp
(bad)
fld
int
loopne
repz
dec
mov
mov
rcl
ficom
outs
jg
mov
xor
add
xchg
sbb
sub
sub
xchg
nop
mov
or
jmp
jg
xchg
lahf
lods
(bad)
xor
fldcw
stc
enter
xchg
loope
pop
inc
(bad)
movs
clc
stos
(bad)
xor
aam
mov
xchg
and
inc
mov
inc
pop
jmp
ds
fsub
xchg
pop
adc
adc
mov
push
test
and
fnsave
inc
aas
movs
xchg
icebp
pop
test
dec
xor
adc
retf
fsubr
call
dec
shl
(bad)
in
dec
adc
mov
mov
mov
jb
push
pop
jle
cmp
inc
bound
or
cmp
test
scas
icebp
sbb
pop
xchg
add
sbb
pop
jo
xchg
not
ins
movs
xchg
pop
adc
arpl
in
lods
jmp
in
add
pop
sub
or
push
call
push
push
cmp
(bad)
cmp
pop
push
(bad)
je
jp
fdiv
adc
lahf
rcl
call
pop
sub
retf
mov
sbb
mov
push
sbb
pop
in
xchg
int3
dec
and
call
(bad)
out
test
sub
jl
pop
pop
and
(bad)
adc
data16
lock
loopne
xor
inc
mov
lods
mov
and
or
cmp
xor
xchg
rcl
sbb
xor
jb
movs
dec
cmps
dec
sub
mov
jnp
dec
fidiv
mov
retf
cli
outs
mov
out
aas
sub
xchg
mov
xlat
lods
pushf
jns
add
lock
adc
in
mov
hlt
sub
pop
jl
push
ret
jp
mov
call
sbb
aas
call
lods
add
daa
inc
or
test
inc
outs
add
push
(bad)
and
loope
test
xchg
pop
adc
rcl
sbb
mov
cmc
mov
out
jl
or
stos
jp
lea
(bad)
xchg
push
in
mov
mov
dec
cdq
(bad)
jns
add
push
mov
cmp
cmps
push
pop
push
cwde
daa
rcl
lods
mov
sub
bound
xchg
aad
or
es
inc
pop
push
mov
push
nop
or
jg
push
lods
loope
mov
push
dec
cdq
pusha
movs
mov
popa
or
dec
arpl
sbb
push
jg
pop
adc
rcr
lock
leave
xor
cli
call
adc
pop
inc
cmp
jbe
cmp
jmp
jne
inc
xchg
out
cli
pop
je
add
out
pop
or
neg
cmp
lods
test
stos
push
xchg
retf
push
data16
inc
cmps
push
and
das
call
xchg
jmp
imul
inc
cli
call
test
(bad)
test
jl
shr
dec
add
xchg
mov
and
in
jl
jl
pop
les
xchg
push
inc
cli
cmp
movs
pop
ss
call
adc
add
mov
mov
push
xor
fcmove
mov
scas
inc
hlt
gs
cmp
cmp
adc
pusha
shl
frstor
ja
sahf
scas
sbb
adc
cmp
cmps
cli
pop
sbb
fldl2t
aas
mov
adc
mov
mov
(bad)
loopne
aam
pop
gs
mov
xor
(bad)
fisub
(bad)
out
inc
dec
imul
fbld
inc
cmp
mov
vmwrite
mov
xchg
or
aam
cdq
fwait
or
xchg
adc
outs
test
bound
xchg
stos
rcr
mov
outs
fcom
out
(bad)
cld
sub
fs
mov
imul
sub
jne
mov
jbe
jno
add
aaa
loop
pop
jae
or
add
or
xchg
ds
mov
cs
jg
ja
stc
mov
int
jp
push
(bad)
cmp
data16
stos
pop
jge
ret
(bad)
retf
in
stc
xor
push
mov
cmp
add
enter
mov
jl
icebp
push
popa
dec
mov
(bad)
jg
aas
jmp
out
push
shr
loope
add
cmp
movs
push
ror
and
sbb
ins
xchg
cli
mov
inc
pop
or
in
dec
mov
in
int
dec
shr
mov
test
lods
and
ret
ins
cdq
jl
add
pop
pop
cli
push
(bad)
push
xor
lahf
xchg
sahf
stc
cli
repnz
ins
mov
pushf
adc
jmp
mov
xchg
repz
imul
fistp
sub
pop
popf
and
inc
out
inc
out
aad
pushf
ret
mov
dec
mov
mov
inc
arpl
aas
ja
retf
dec
sbb
loop
jge
fisub
and
dec
retf
sar
lods
lea
push
push
pop
push
scas
mov
or
rcr
clc
mov
mov
mov
push
sbb
leave
sub
sbb
stos
sub
pop
stc
dec
or
loopne
and
and
arpl
mov
adc
mov
cdq
popa
jecxz
aam
call
(bad)
jg
daa
and
xor
or
xchg
cli
leave
cmc
cmp
mov
sar
add
mov
lahf
mov
xchg
jmp
es
test
nop
popa
xor
or
out
popa
scas
test
xlat
fwait
jg
data16
mov
xor
fsubr
sbb
mov
sbb
retf
pop
(bad)
iret
or
jbe
movs
es
and
xchg
adc
aad
mov
mov
(bad)
cmp
add
sbb
aam
mov
aam
rcr
enter
inc
mov
mov
js
dec
dec
les
xor
(bad)
sbb
add
cmc
push
cmp
xchg
jmp
dec
(bad)
in
and
es
xchg
in
fsub
cli
cmps
mov
mov
jns
push
sub
or
jnp
test
jno
je
pop
clc
mov
jb
pop
cld
and
xor
retf
leave
in
lock
jmp
dec
dec
jno
sbb
je
add
sub
jns
sub
jg
pop
jl
nop
(bad)
mov
dec
mov
out
mov
cmp
iret
out
js
in
and
and
hlt
scas
pop
ret
ds
jno
mov
cmps
sub
frstor
lahf
push
cli
call
jnp
xchg
rcl
xor
inc
pop
das
mov
shl
dec
mov
in
aaa
fisub
data16
pushf
dec
jge
in
mov
or
xchg
push
add
mov
test
or
lock
movs
icebp
mov
push
int3
inc
scas
add
leave
movs
(bad)
cwde
xchg
out
pop
cmp
sub
pop
std
call
js
cld
inc
inc
scas
and
movs
mov
mov
lods
sar
pop
sbb
sar
jb
mov
pop
pop
cmc
ins
call
mov
inc
push
jge
sub
sbb
lods
xchg
clc
std
pop
dec
(bad)
shl
push
jno
and
idiv
fild
outs
and
mov
xchg
sub
dec
jbe
jae
out
ret
hlt
(bad)
push
xchg
mov
and
mov
xchg
fwait
xlat
cmp
inc
sbb
ret
test
lods
stos
dec
imul
pusha
loope
fisubr
pop
and
call
leave
daa
mov
sbb
pop
je
ins
adc
ret
pop
xor
sbb
stos
dec
test
add
xor
mov
fs
mov
dec
iret
lds
movs
outs
or
mov
push
push
imul
bound
jae
xchg
cmp
inc
xchg
sbb
add
sbb
push
ja
js
leave
mul
es
jae
mov
shl
mov
xor
rol
mov
dec
imul
out
aas
push
div
lock
cdq
out
jge
test
in
mov
mov
adc
jns
pop
popf
push
sbb
ficomp
(bad)
loope
ficomp
js
mov
pop
lock
aam
and
push
adc
or
test
loop
cmp
xor
fnstcw
xor
cwde
(bad)
scas
cmp
ds
and
fbstp
call
xlat
cli
dec
imul
test
jl
stc
pop
sbb
movs
stos
or
std
(bad)
aad
mov
inc
pop
psrld
inc
js
pop
lahf
mov
lea
push
inc
fidivr
scas
out
cmps
push
mov
outs
scas
jge
les
mov
es
mov
shr
pop
ficom
jno
mov
dec
ins
imul
add
icebp
push
in
cmp
int
push
cdq
sbb
push
and
call
xchg
push
sbb
stos
or
jecxz
in
sbb
add
lea
cld
sbb
xchg
xor
pop
in
test
jbe
dec
jp
mov
mov
icebp
loop
sub
test
cli
popa
daa
cli
mov
cld
add
out
mov
shl
add
xchg
fmul
lahf
cwde
xor
sahf
int3
stos
loope
push
aad
mov
sti
(bad)
stc
out
out
movs
test
cli
pushf
mov
nop
jecxz
adc
div
int3
fidiv
in
test
int3
adc
scas
std
stos
sub
lds
cli
fisubr
repnz
or
push
push
and
inc
(bad)
out
pop
add
lahf
add
in
jg
rol
inc
mov
push
xrelease
hlt
mov
push
retf
jnp
pop
xor
mov
mov
(bad)
dec
fist
hlt
inc
add
jbe
addr16
repz
jmp
push
pusha
pop
pop
pop
xor
push
daa
jecxz
xchg
cwde
jge
xchg
xor
hlt
bound
xchg
sbb
sahf
inc
cli
and
lea
dec
dec
or
sbb
push
fisttp
fdivr
inc
movs
sahf
xchg
and
mov
out
cmp
mov
sbb
lahf
xor
inc
loopne
cmc
lea
ins
add
hlt
and
push
xchg
aaa
(bad)
jmp
leave
fwait
(bad)
inc
out
(bad)
add
pop
push
inc
shl
ret
mov
add
cwde
or
cmp
xchg
clflush
loopne
fnstenv
mov
sub
repnz
push
ret
int
xlat
xor
cmp
ror
mov
push
scas
and
(bad)
ja
mov
inc
enter
cmp
jne
lods
jmp
jbe
inc
push
cmc
out
scas
add
xchg
shr
fidivr
xor
push
pop
xchg
mov
cmc
push
sub
ss
xchg
(bad)
pop
pop
shl
stc
mov
dec
daa
dec
pop
add
mov
lods
and
in
hlt
fistp
sbb
call
movs
scas
inc
mov
xchg
neg
fimul
jb
mov
scas
movs
jnp
ret
mov
pop
addr16
xor
dec
sub
sub
scas
test
test
popf
jl
ins
loop
aam
pop
jge
rcl
bnd
fld
push
mov
add
ss
jae
and
(bad)
stos
retf
push
jmp
hlt
movs
or
fadd
lea
mov
out
fmul
fnstsw
and
xchg
fsin
sar
xchg
add
adc
dec
ror
arpl
sar
into
hlt
movs
(bad)
cmp
mov
pop
popa
dec
cdq
push
push
inc
push
imul
aam
out
push
sbb
addr16
jge
inc
mov
ds
mov
add
xor
mov
sysret
mov
sub
pusha
(bad)
lods
fst
test
push
scas
std
sbb
in
jg
jnp
(bad)
ficom
pop
and
es
push
add
pop
inc
mov
or
mov
xchg
or
aad
call
daa
or
mov
and
imul
cmp
push
cdq
test
sbb
mov
pop
jg
mov
sbb
out
jl
fadd
jmp
push
xor
fld
push
in
sti
jno
loope
sub
pop
pop
rcr
fild
lea
or
mov
add
jne
adc
fsub
pop
sbb
movs
in
inc
or
cmp
or
popa
setno
retf
ss
mov
sbb
bound
mov
pop
repz
mov
popa
mov
(bad)
(bad)
aad
lea
cmp
mov
xor
sub
mov
xor
cmps
sbb
push
adc
ror
in
mov
(bad)
movs
aam
or
push
div
fbstp
jo
mov
je
aaa
stos
adc
push
and
stos
push
sahf
cdq
mov
test
shl
cmp
stos
stos
call
and
or
mov
jle
pop
push
inc
push
jl
cmp
call
ss
sub
push
std
mov
and
aaa
mov
ret
ss
ficomp
rcl
int3
cdq
pop
inc
mov
and
xor
xchg
pusha
loop
imul
push
es
pushf
ror
(bad)
sub
inc
mov
mov
pop
dec
test
pop
retf
inc
xor
xor
lea
mov
fisttp
jle
push
inc
cld
inc
aad
cmps
pop
jle
push
sub
inc
dec
jge
pop
stos
mov
xchg
sahf
mov
std
dec
add
pop
dec
lahf
xor
popf
into
int3
xor
scas
call
mov
sub
bound
inc
jge
xchg
int
sub
icebp
xchg
cmps
gs
shl
ins
inc
and
out
inc
sub
jno
leave
rcl
mov
push
ret
shl
pop
pop
inc
les
int
hlt
pop
shl
pop
(bad)
into
pop
pop
fistp
mov
sub
xchg
xchg
pop
popf
mov
dec
sahf
fistp
aad
jecxz
and
mov
ror
sar
cmp
cli
mov
push
cld
inc
popf
std
pop
xchg
cmp
push
or
or
clc
jno
ret
cmp
or
sbb
loop
outs
shl
pop
(bad)
jle
jmp
mov
inc
mov
xor
mov
ret
lods
push
sbb
mov
and
adc
or
dec
mov
addr16
movs
mov
hlt
enter
test
out
xchg
int
mov
mov
cmp
push
xchg
js
test
leave
fcomp
lock
or
outs
aam
fs
(bad)
pop
mov
outs
ins
cwde
arpl
pop
mov
inc
xor
lock
repnz
ret
movs
dec
scas
(bad)
mov
mov
adc
adc
popa
pop
outs
dec
sub
jnp
jl
xchg
pop
mov
dec
loopne
mov
or
sar
enter
xor
xlat
jmp
adc
jb
cli
mov
adc
mov
ds
out
shl
mov
outs
(bad)
cmp
inc
dec
aaa
dec
add
out
inc
scas
jns
add
bound
aad
push
pop
add
ds
lods
loope
mov
ficom
adc
int
popf
mov
xchg
mov
mov
shl
dec
mov
pop
pop
inc
retf
addr16
(bad)
test
mov
out
(bad)
pusha
jle
pop
aad
popf
mov
mov
fst
jae
call
shl
cmp
xlat
into
mov
pop
mov
mov
ja
hlt
add
mov
shl
xchg
adc
push
aad
ins
inc
mov
imul
xcrypt-ecb
cmps
or
(bad)
out
shr
xchg
clc
call
test
jl
sar
das
jae
movs
mov
jo
sub
push
retf
(bad)
inc
mov
jmp
imul
lahf
jno
mov
mov
pop
imul
(bad)
loop
adc
(bad)
in
cmps
cmc
push
fisttp
push
aam
push
int3
jne
mov
xor
fwait
mov
cmp
lock
inc
shl
pop
stos
icebp
sbb
dec
(bad)
loope
mov
mov
ins
and
push
xchg
xor
mov
enter
ss
jb
inc
aam
pop
sar
ja
sub
xor
pop
dec
mov
stos
dec
mov
pusha
out
xchg
jo
les
ret
jmp
sbb
pop
sbb
(bad)
(bad)
cmp
out
mov
pushf
int
jnp
pop
call
xlat
clc
jp
inc
add
es
mov
mov
imul
in
push
adc
ins
sub
ret
test
and
aas
addr16
cmps
cld
rcr
movs
das
inc
sahf
fistp
popa
out
mov
or
dec
xchg
es
(bad)
mov
adc
jecxz
scas
retf
outs
dec
fnstcw
lds
cmp
sub
mov
into
xor
xor
test
ds
xlat
test
in
xchg
(bad)
xchg
dec
cmp
mov
xor
sbb
cs
into
enter
out
jbe
sub
test
sub
add
sbb
imul
xor
ret
mov
xor
sbb
jbe
div
popa
adc
fs
mov
push
loopne
push
and
xchg
dec
mov
pop
cwde
pop
or
imul
adc
mov
mov
xchg
test
or
sahf
dec
sbb
out
mov
out
xor
inc
mov
lahf
je
add
xchg
mov
and
adc
popf
push
cmc
mov
popa
ss
mov
cmps
mov
cwde
repnz
test
xor
fcom
repnz
or
out
(bad)
pop
push
cmp
cmp
movs
ins
mov
cmp
std
loopne
movs
jb
adc
jmp
ins
pop
jl
add
add
dec
dec
cmp
fild
inc
rcr
sbb
jmp
push
(bad)
test
ffreep
mov
mov
push
rol
mov
stos
aaa
outs
sbb
in
cmp
mov
or
mov
daa
ds
pop
aas
push
add
jle
adc
sbb
sub
fild
inc
aad
iret
mov
add
retf
inc
(bad)
mov
xor
cs
int
ja
mov
jmp
fbld
sub
loopne
test
sbb
xchg
loop
jmp
sbb
inc
jnp
call
pop
mov
or
int3
pop
push
mov
aad
arpl
(bad)
lea
mul
enter
adc
mov
jnp
push
add
rcl
or
adc
in
xchg
cmc
fisubr
mov
mov
aaa
out
dec
push
mov
xor
adc
fiadd
adc
int3
aas
das
xchg
ss
xor
mov
fsub
pop
dec
push
pop
push
xchg
dec
mov
test
movs
jnp
stos
and
cmp
js
mov
pop
mov
ret
xor
inc
inc
dec
aad
ret
push
add
lods
inc
sub
jnp
rcl
les
mov
mov
pusha
xor
and
cmc
push
in
ja
aaa
sbb
loop
shr
stos
shl
inc
stos
ja
dec
and
popa
ins
dec
jp
pcmpeqd
push
(bad)
call
out
jae
jb
mov
enter
pop
iret
fstp
push
mov
dec
aad
jmp
(bad)
jno
add
fisub
mov
sub
test
xchg
fadd
daa
call
test
fs
adc
stos
sbb
inc
cmp
rol
cmps
xor
jnp
test
inc
jp
stc
je
(bad)
clc
adc
adc
jno
inc
in
iret
fwait
pushf
mov
(bad)
jbe
pop
cmp
sub
lahf
jp
(bad)
shl
inc
or
popf
mov
fbstp
outs
cwde
cmps
add
sbb
popf
sbb
cmp
clc
dec
mov
cmp
jne
xchg
imul
mov
ret
pop
aad
call
mov
mov
push
inc
(bad)
jg
repz
dec
xchg
pop
ficomp
out
pop
cmp
add
add
push
stos
adc
sbb
into
sub
sbb
xchg
jmp
cld
enter
xchg
add
lea
and
mov
xchg
leave
imul
(bad)
stos
lea
in
js
jl
(bad)
test
or
jle
movs
inc
adc
aad
cmps
sahf
lahf
fcomp
cld
sbb
dec
mov
sub
sti
(bad)
sbb
aas
ins
lods
push
add
dec
fld
add
shl
fdivr
inc
es
ins
jp
or
daa
hlt
jo
arpl
(bad)
fnstenv
mov
retf
pusha
leave
cdq
add
(bad)
pusha
jo
cmp
shl
push
sub
and
lods
fisub
sbb
lods
not
ds
pop
xchg
int
pop
fidiv
mov
not
mov
mov
fild
jo
sbb
sub
mov
rcr
test
inc
mov
mov
je
call
jne
jne
mov
xchg
ret
int
mov
sub
lock
xchg
repnz
mov
xchg
cmp
nop
and
cs
jecxz
das
imul
enter
inc
movs
(bad)
mov
adc
popa
mov
sahf
loope
mov
(bad)
movs
das
adc
and
ins
(bad)
retf
mov
sahf
out
fcomp
fadd
cmp
out
cmps
mov
scas
jl
mov
pop
jmp
cmps
in
scas
hlt
jge
push
test
xor
add
leave
pop
pop
into
int
or
sub
out
pop
scas
xor
lds
jo
sub
mov
mov
jle
sbb
sahf
ret
xlat
and
aas
fcom
and
xchg
fisttp
or
jae
inc
push
add
or
(bad)
sbb
icebp
pop
or
adc
lods
mov
and
mov
mov
ja
es
into
xchg
aam
mov
mov
retf
js
mov
add
sbb
cmp
and
or
lea
mov
(bad)
idiv
pop
pop
xchg
lahf
iret
and
daa
jno
into
mov
add
cdq
lea
jnp
and
out
sbb
int
sub
xor
xor
ficomp
das
mov
and
mov
pop
enter
cmp
test
jne
ficomp
adc
or
pop
sub
mov
hlt
adc
int
adc
cmp
cdq
stos
push
jecxz
xor
push
mov
sbb
adc
cmp
inc
shr
loopne
cmp
add
cmp
ins
mov
jmp
cmp
mov
adc
inc
sbb
hlt
dec
ret
mov
cmp
mov
jae
pusha
addr16
out
mov
mov
inc
xchg
lock
cmp
jne
hlt
mov
int
jl
lahf
call
or
rcr
stos
ficomp
inc
xchg
pop
adc
repnz
mov
ins
or
pushf
and
cmp
std
das
ret
inc
icebp
mov
push
mov
pop
sbb
inc
xor
push
mov
mov
pushf
out
std
jg
gs
pop
jg
add
sbb
inc
add
outs
mov
(bad)
dec
hlt
dec
dec
push
push
sub
dec
or
push
and
add
popf
iret
pop
pop
aaa
cmps
and
mov
pop
jmp
xchg
ret
xlat
call
mov
arpl
out
jns
rcl
sbb
jp
xor
popa
push
ss
dec
cmps
push
test
sbb
push
inc
push
push
test
ja
mov
dec
mov
cmp
sub
cmps
retf
movs
inc
test
pop
loope
popf
dec
mov
mov
icebp
inc
in
cdq
sub
sbb
dec
je
lds
mov
mov
sub
(bad)
retf
adc
das
pop
sbb
xchg
outs
push
push
xchg
mov
(bad)
push
push
push
xchg
std
enter
lea
mov
sub
rcr
mov
mov
push
loope
test
cmp
pop
ret
add
arpl
das
out
mov
and
dec
pushf
cdq
and
and
cmp
jnp
stc
jae
repnz
cdq
xchg
stos
pop
and
ja
pop
jb
adc
pop
xor
adc
sbb
inc
out
loop
shl
jnp
mov
xlat
jecxz
retf
push
sbb
push
movs
and
add
cmp
out
(bad)
push
adc
pop
ds
fs
clc
xchg
(bad)
jecxz
fucom
sub
repz
int3
push
xchg
mov
repnz
rcr
addr16
jp
retf
jl
leave
lea
mov
into
ss
aam
mov
rcr
jbe
adc
mov
xor
in
test
sub
imul
jae
mov
les
and
push
stc
out
dec
pushf
movs
je
sti
mov
jae
loope
xor
les
add
adc
xor
pop
jge
ins
jb
(bad)
pop
fs
dec
pop
xor
je
dec
sahf
dec
movs
fs
push
(bad)
jp
add
jbe
pop
mov
arpl
stc
dec
pop
ins
push
nop
js
hlt
jl
xor
mov
mov
jmp
mov
test
rcl
data16
or
arpl
sbb
jmp
mov
sub
cmps
call
fdiv
dec
push
or
in
sbb
icebp
dec
in
jmp
mov
aas
ins
loope
inc
outs
fbstp
call
or
sub
inc
sbb
mov
aaa
inc
jp
idiv
xor
mov
jg
dec
mov
mov
lea
test
xor
xchg
jg
cmp
push
loopne
sub
in
lds
nop
ins
in
stos
movs
fwait
inc
int
cmp
hlt
mov
out
std
or
test
into
out
mov
dec
dec
mov
xor
push
fdivr
mov
(bad)
dec
and
jno
push
or
outs
lods
cmps
lahf
in
xchg
xchg
mov
dec
(bad)
push
xlat
cmp
outs
xchg
pop
jb
not
dec
imul
outs
mov
sub
ds
int3
cwde
jb
lock
mov
or
cli
test
clc
retf
leave
outs
xor
cmp
in
and
adc
call
cmp
mov
jmp
daa
imul
fs
mov
jp
push
mov
dec
(bad)
mov
test
enter
add
sti
popf
jp
pop
imul
sub
jmp
ficom
imul
mov
dec
loopne
push
(bad)
call
and
in
inc
xchg
pop
bound
push
imul
jl
(bad)
not
cmp
outs
repz
out
pop
sti
and
and
in
and
shr
add
fimul
push
push
div
ror
std
or
ret
js
inc
je
imul
stos
add
stos
dec
test
adc
enter
out
jne
addr16
int
mov
fldcw
aas
dec
xor
cmp
add
jo
mov
mov
ins
mov
adc
loope
pop
inc
mov
mov
cmp
jo
cmp
or
cmc
vmread
lahf
int3
push
das
mov
jno
repnz
sub
lods
adc
cld
push
jmp
dec
sbb
icebp
pop
leave
in
shl
stc
mov
jecxz
xchg
or
xacquire
lea
(bad)
mov
inc
inc
mov
in
pop
lods
int
push
xlat
dec
loopne
rcl
dec
xor
cdq
test
add
and
jae
icebp
inc
loopne
jns
fist
test
sahf
mov
cmp
out
inc
jecxz
or
sahf
aad
sub
inc
lods
mov
pop
inc
fwait
and
bound
xchg
and
sub
scas
cmc
(bad)
popa
rcr
call
inc
std
jmp
sbb
movs
inc
lock
test
push
into
jge
inc
int3
(bad)
cli
ss
pop
out
sbb
lahf
mov
and
and
cmp
xchg
aam
dec
shr
add
sbb
ja
pop
hlt
fwait
cmp
jge
int3
pop
movs
(bad)
xlat
inc
mov
mov
lea
mov
mov
call
sub
and
cmps
jecxz
dec
or
fcomp
or
pop
lea
mov
or
cmc
cdq
movs
(bad)
fisttp
xchg
(bad)
sbb
cmp
mov
mov
movs
into
jmp
scas
into
xor
xor
or
lock
push
mov
jbe
arpl
(bad)
dec
xor
jno
inc
or
sar
stos
mov
ja
jbe
mov
out
push
enter
fcmovu
sar
test
mov
daa
gs
add
sub
hlt
mov
push
push
xchg
mov
cmp
cmps
fs
inc
push
jbe
or
xchg
mov
fs
jb
push
sub
mov
enter
mov
mov
jmp
pop
inc
mov
sub
imul
(bad)
stc
push
mov
popa
call
or
pop
sub
ret
or
inc
cmp
loop
mov
ins
push
cmc
ins
clc
in
mov
stos
inc
clc
addr16
jmp
cli
xchg
not
nop
jg
mov
inc
xor
adc
fistp
add
cmp
sbb
out
pop
jmp
push
and
mov
ret
sub
inc
sub
dec
and
inc
fnstsw
pop
bound
xlat
sti
pop
adc
xchg
clc
sub
enter
pop
(bad)
sbb
out
pop
ja
mov
popf
jl
sbb
dec
gs
popf
mov
or
fisubr
xlat
loopne
outs
push
sub
adc
xchg
adc
xchg
jmp
scas
loope
movs
push
sub
aam
mov
push
push
rcr
and
inc
(bad)
mov
jmp
xchg
dec
adc
fdiv
ror
bound
mov
int3
mov
mov
sbb
add
add
jae
add
cmps
jo
shl
push
iret
add
or
out
sub
shr
mov
mov
add
push
xor
mov
pop
push
mov
ins
jl
mov
xor
stc
das
jnp
push
mov
inc
push
add
add
push
es
pushf
loopne
dec
test
inc
lods
in
sbb
and
jecxz
mov
(bad)
fnstenv
ret
ja
into
sub
mov
or
push
mov
xchg
push
xchg
dec
pop
mov
loope
out
or
es
es
push
add
sahf
pusha
xchg
imul
mov
push
data16
dec
das
(bad)
aaa
mov
ins
inc
pushf
rcl
jo
pop
repz
pop
leave
inc
loop
push
sub
push
add
mul
jns
or
dec
jbe
or
xchg
xchg
or
cmps
mov
adc
lods
pop
and
nop
dec
inc
push
adc
daa
enter
or
and
inc
pop
adc
mov
into
inc
ret
test
sub
ins
daa
(bad)
xor
mov
fcomp
(bad)
sahf
dec
(bad)
loopne
jns
sub
cli
jle
dec
dec
(bad)
call
dec
push
sahf
aad
or
test
pushf
push
mov
mov
cmp
inc
imul
cmps
adc
fisttp
sti
clc
inc
lods
hlt
scas
mov
cwde
adc
xor
aad
adc
push
dec
or
pop
pextrw
jl
pop
and
xchg
mov
fwait
scas
sub
leave
inc
xchg
into
adc
std
pop
lods
pop
xor
adc
test
pop
xor
fadd
hlt
mov
loope
sbb
xor
xor
pushf
ret
or
pop
test
ds
xor
inc
push
stos
xchg
int
xlat
sar
mov
add
sbb
jecxz
mov
cmp
movs
iret
enter
jp
adc
mov
mov
fisubr
jg
sub
dec
push
(bad)
fidivr
mov
sti
outs
daa
mul
fldcw
add
cdq
fsubr
ret
test
and
xor
in
(bad)
jno
mov
(bad)
popf
mov
push
icebp
sub
movs
sub
inc
cmp
movs
dec
xlat
stos
(bad)
stc
fwait
lea
mov
and
mov
mov
push
sahf
push
inc
lock
fisub
cmp
lods
iret
outs
test
(bad)
fwait
hlt
inc
jecxz
push
fs
xchg
push
sahf
xor
stos
cmp
mov
into
dec
in
or
push
inc
xchg
inc
xchg
aam
ss
(bad)
cmp
push
cmps
and
lock
add
test
mov
cmc
adc
mov
in
vcvtpd2ps
lods
xor
nop
mov
or
sbb
jb
xchg
sbb
mov
or
push
cdq
imul
lods
and
cmp
dec
in
mov
mov
sub
pop
sub
lahf
ins
or
popa
shl
loope
xor
dec
movs
sbb
bound
cs
aas
cwde
adc
pop
mov
jle
(bad)
fadd
out
xor
jne
or
call
dec
mov
pushf
outs
in
mov
xor
and
adc
add
sub
jg
ret
jl
jnp
std
pop
popf
jl
pop
push
call
pop
lods
push
test
repz
dec
in
pop
inc
arpl
and
xchg
jmp
push
jl
xor
inc
cmova
dec
jo
sbb
xor
pop
xor
mov
popf
loopne
dec
clc
mov
inc
sbb
fs
inc
jns
lock
fwait
xor
push
sub
aam
dec
nop
sbb
mov
lock
movs
das
retf
xor
pop
mov
sub
push
leave
ds
or
sbb
je
sbb
sbb
sub
rcr
call
push
pop
xor
sub
mov
aad
out
jge
(bad)
addr16
imul
dec
mov
shl
add
mov
add
loope
and
stos
cwde
jg
rcr
pop
push
inc
jge
and
cmps
gs
bnd
and
xchg
xchg
inc
lock
lods
call
enter
je
jno
jp
mov
jnp
repz
rcl
dec
in
out
hlt
add
lods
out
pushf
pop
jge
jnp
xlat
shl
pop
xor
clc
pop
add
std
push
xor
jmp
in
dec
jbe
xchg
arpl
mov
xchg
popa
sbb
ins
fisttp
cmp
(bad)
ins
cmp
cmp
and
popa
pop
cmp
add
pop
fadd
sbb
jnp
int
mov
pushf
ret
js
stos
xchg
shr
ins
aam
mov
fdivr
inc
into
jge
add
mov
(bad)
call
test
cmps
ja
push
clc
lods
dec
push
les
or
les
add
fsubr
inc
cld
mov
movs
mov
mov
aad
test
je
lea
fistp
sub
imul
mov
sbb
mov
xchg
aam
sbb
retf
lahf
jne
ins
xchg
sub
scas
fmulp
mov
sub
or
stos
mov
sub
movs
popf
sar
inc
jg
mov
imul
add
loope
js
je
mov
xor
jb
push
jl
rol
push
pop
loop
inc
ins
cmp
dec
xchg
repz
icebp
loope
data16
xor
test
sub
lahf
jo
pop
or
sub
mov
adc
addr16
stc
in
inc
mov
sahf
stos
add
cmp
jne
mov
(bad)
cwde
int
mov
ds
jnp
in
test
out
dec
stos
fsub
stos
popf
add
mov
adc
sub
or
xor
pop
(bad)
test
and
xor
in
cmp
nop
ret
test
and
xchg
cmp
aad
in
hlt
sar
lds
loop
or
fisub
es
inc
popf
mov
cmp
pop
jns
mov
lods
out
or
add
arpl
ins
bound
push
xchg
sbb
sbb
(bad)
aas
mov
lds
or
fcom
pop
push
xor
mov
push
dec
adc
lock
lods
push
out
add
push
inc
fs
add
aad
std
xchg
push
addr16
das
and
xor
cmp
mov
cdq
je
dec
ret
in
shl
mov
add
xlat
jp
push
xchg
fbld
mov
lods
aam
cmps
stc
dec
push
push
or
jmp
loop
dec
outs
add
mov
(bad)
sbb
mov
xchg
movs
xchg
sbb
cmp
ins
outs
cmp
mov
mov
movs
dec
(bad)
xchg
adc
ss
xor
js
sub
sub
lahf
in
mov
stos
jbe
xor
jbe
outs
and
mov
mov
mov
stc
(bad)
shr
fwait
or
jmp
cmp
pop
fistp
mov
rol
xchg
mov
dec
jecxz
rol
leave
inc
adc
ins
xchg
rcr
das
and
mov
and
sahf
push
cdq
xchg
pop
enter
shr
cwde
pushf
int
aaa
sub
bound
leave
dec
xchg
nop
std
imul
cmp
jns
or
xor
mov
fld
push
pop
pop
dec
jne
addr16
mov
leave
and
repz
fimul
imul
and
cwde
mov
repnz
ins
out
push
int3
popf
pop
mov
add
mov
jmp
bswap
je
add
outs
call
lods
in
add
rol
cmp
mov
es
and
dec
in
xor
js
inc
in
leave
push
les
push
clc
in
jb
repz
outs
or
mov
jmp
jg
(bad)
shr
mov
jbe
mov
mov
sbb
mov
pop
pop
std
std
dec
stos
retf
jne
(bad)
retf
mov
pop
adc
sahf
adc
ins
mov
push
add
test
push
test
dec
xchg
ins
jns
pusha
lahf
(bad)
fs
mov
mov
imul
mov
fs
sahf
in
push
out
sbb
outs
std
leave
ins
nop
mov
imul
rep
xchg
xor
sahf
sbb
stc
iret
in
out
push
mov
and
jns
icebp
retf
into
sub
adc
fidivr
mov
lds
cmp
rcr
xchg
sbb
lds
push
fstp
rcr
loope
pop
ret
gs
psrad
push
or
and
outs
inc
gs
outs
xchg
mov
aas
xchg
xor
push
or
dec
sub
add
cmp
jnp
jb
add
xor
cmps
cdq
push
in
xor
xor
(bad)
in
test
in
scas
dec
nop
push
div
leave
push
mov
cmc
movs
push
and
lds
fild
push
jno
(bad)
(bad)
inc
adc
jge
aad
jns
dec
cmp
or
cli
inc
mov
fiadd
ins
xchg
mov
pop
aam
push
dec
mov
sbb
push
lock
jnp
faddp
fnstenv
bound
dec
jnp
adc
jecxz
mov
pop
cwde
sub
js
stos
or
lods
xlat
sahf
push
in
push
loop
mov
adc
pusha
lea
dec
mov
lea
pop
jo
push
add
or
rol
xchg
xor
sub
adc
sub
sbb
jne
sbb
movs
mov
cmp
adc
jg
in
in
jmp
dec
sub
out
dec
loope
bound
cli
enter
and
sub
in
lods
xlat
adc
mov
ret
mov
inc
mov
adc
xor
mov
or
inc
and
cli
out
cmp
mov
cmp
adc
and
mov
cmp
adc
sbb
enter
stc
stc
ds
mov
jbe
mov
out
mov
mov
ins
and
shl
(bad)
enter
mov
dec
or
js
bound
arpl
inc
mov
clc
ss
out
(bad)
sbb
cmp
jmp
xor
push
dec
push
add
add
xchg
sub
inc
std
shl
push
jp
daa
aad
xor
shr
or
cmp
jle
std
push
les
dec
sbb
arpl
cs
cld
pusha
sub
stos
fstp
mov
cmp
iret
mov
loopne
ins
test
add
pop
imul
push
iret
push
inc
jno
leave
(bad)
data16
and
dec
xchg
repz
add
push
pop
sub
jno
mov
dec
push
sub
pushf
push
cmp
test
or
mov
scas
jmp
mov
mov
push
xor
xor
pushf
jae
out
lock
pop
or
ds
(bad)
sbb
aad
daa
retf
sti
inc
(bad)
cmp
call
jmp
push
in
xchg
mov
jl
lahf
ja
push
add
jl
xor
mov
pop
pop
std
cwde
or
jle
leave
mov
fwait
jecxz
adc
xchg
out
inc
mov
movs
retf
xchg
cwde
stos
xor
into
sahf
out
add
pop
les
or
(bad)
test
inc
ret
fdiv
and
test
pop
or
sub
ret
cs
jns
or
iret
cwde
scas
xor
fsub
movs
test
mov
push
(bad)
js
stc
inc
movs
gs
ds
out
jge
das
or
and
lods
mov
cmp
jne
or
lea
fiadd
ja
and
and
mov
cmc
scas
jge
icebp
lock
inc
(bad)
inc
fbld
and
rol
rcl
ins
jle
xchg
ror
cmp
xor
mov
inc
dec
sub
fs
add
dec
js
push
popf
fwait
rcr
lea
push
jl
in
les
sub
imul
addr16
dec
and
cmp
movs
mov
fimul
ins
cdq
pop
inc
pushf
out
int3
leave
arpl
push
push
div
adc
fidivr
mov
dec
and
ret
arpl
sub
lea
fsubr
or
sbb
xchg
adc
mov
nop
sub
in
dec
pop
stos
std
je
and
mov
gs
repnz
lds
xor
inc
mov
adc
frstor
pop
xchg
sub
(bad)
hlt
(bad)
jo
pop
and
dec
shr
adc
dec
push
je
ja
and
adc
div
fsubr
cwde
repz
sub
dec
cmp
jmp
rcl
movs
hlt
xchg
dec
push
in
jae
sub
in
xchg
jo
xchg
es
fincstp
ins
xchg
and
inc
jge
xchg
cli
test
ds
xchg
repz
mov
mov
pusha
shl
jne
lods
push
in
stos
jg
fistp
push
sub
xor
cdq
retf
mov
dec
sti
sub
shr
xor
jae
call
push
mov
mov
fcom
mov
(bad)
in
les
out
repnz
jp
add
in
xchg
jmp
sar
loop
nop
jb
into
dec
retf
neg
lods
push
retf
mov
shl
add
jg
mov
dec
jmp
js
cmc
out
push
dec
sbb
pop
push
(bad)
mov
cmp
jmp
test
jbe
cmp
jnp
lods
xor
sub
dec
pop
outs
fldl2t
inc
sbb
mov
and
mov
out
xor
pop
xchg
rol
pop
cs
(bad)
and
lds
bound
lods
movs
iret
aad
in
sqrtps
loope
sub
and
mov
test
mov
std
ret
cmp
inc
mov
pop
and
adc
and
sti
stc
pop
scas
add
pop
fadd
xchg
jo
mov
lods
in
iret
into
and
shr
xor
and
cmp
adc
dec
jb
(bad)
xlat
in
retf
bound
call
imul
(bad)
sub
icebp
fnsave
std
in
sbb
pushf
fs
test
std
jae
or
mov
sbb
sbb
loope
(bad)
jle
push
jle
jecxz
retf
mov
test
push
cmp
adc
std
dec
mov
call
and
inc
ins
mov
mov
enter
mov
xchg
xlat
dec
fiadd
iret
cmps
and
dec
repz
push
fcmovne
mov
or
es
std
sbb
dec
push
xchg
sysenter
fdiv
mov
bound
or
daa
test
inc
fldenv
clc
mov
or
inc
push
les
or
in
cmp
pop
mov
mov
adc
sub
sub
sbb
daa
sbb
in
jecxz
stos
mov
cmps
(bad)
mov
sub
fisub
imul
mov
popa
jge
mov
cmp
dec
loope
jmp
sbb
mov
adc
aam
popf
ror
or
add
pop
test
push
mov
jno
adc
sbb
je
popf
add
mov
inc
or
gs
mov
mov
sub
inc
push
mov
add
or
cmps
dec
xchg
pop
fbld
repnz
cmp
in
ror
push
popa
cmp
push
shr
pop
repnz
mov
loope
pop
shl
and
push
or
int3
push
dec
pop
push
xchg
and
adc
adc
pop
adc
sbb
ficom
(bad)
cmp
xchg
cli
icebp
into
dec
ds
sub
pop
int3
clc
pushf
mov
retf
outs
adc
inc
dec
int3
dec
push
sub
fcom
lds
aam
into
sub
rcr
push
or
mov
fwait
push
cs
push
cmp
push
(bad)
shr
mov
iret
loop
sub
ins
jne
pop
in
push
mov
sbb
adc
sbb
mov
sti
sbb
out
ds
jmp
pop
fdiv
fldenv
push
push
movs
mov
pop
jmp
pop
push
pop
das
fcmovb
aam
hlt
mov
push
xor
push
lock
pop
sbb
cmc
repz
mov
mov
push
lods
mov
mul
stos
retf
push
test
fs
push
call
xor
test
mov
push
fstp
mul
call
push
loopne
(bad)
jg
pop
adc
in
clc
xor
stos
jp
mov
clc
scas
sbb
mov
(bad)
imul
fisubr
mov
sbb
sub
jne
movs
or
push
(bad)
bound
inc
pusha
adc
hlt
int
je
ins
and
cmp
mov
cs
ja
scas
jns
movs
aad
push
imul
test
mov
or
loop
cmp
ret
ja
fld
xchg
iret
cmp
and
in
adc
push
nop
in
push
ins
push
push
in
loope
retf
daa
aaa
or
je
lods
movs
popf
repz
fisttp
mov
cmps
outs
cmp
ret
(bad)
bound
test
outs
in
dec
out
push
(bad)
or
mov
dec
and
sbb
mov
(bad)
or
xor
xchg
arpl
sub
je
and
lahf
neg
jne
jnp
push
das
xchg
push
(bad)
inc
ret
lock
rep
mov
sbb
sub
fcomip
xchg
aas
push
lahf
add
neg
add
(bad)
mov
mov
xchg
ds
das
ficomp
not
xor
jg
or
(bad)
fcmovb
lods
pop
inc
(bad)
shr
repnz
dec
ins
pusha
jmp
popf
sbb
popf
arpl
push
dec
rol
jae
or
sub
dec
cmps
push
jmp
and
or
(bad)
adc
push
(bad)
mov
and
mov
dec
mov
mov
fbstp
loope
stos
shl
scas
loopne
mov
and
jmp
in
out
or
je
in
rcl
inc
aas
cmp
mov
jl
pusha
sub
call
mov
lock
hlt
sub
mov
imul
cmp
dec
inc
sbb
dec
xor
fdiv
cmp
cli
sub
ins
js
das
icebp
sub
xor
add
pop
dec
movs
mov
daa
or
fadd
sar
xor
repz
retf
mov
in
cmp
pop
jno
inc
inc
bound
mov
dec
mov
sub
in
push
arpl
pop
push
ror
inc
push
js
pusha
inc
sbb
iret
dec
push
test
add
les
xchg
xchg
test
imul
ror
push
add
push
or
add
jge
mov
ins
loope
or
jle
jecxz
out
xor
inc
pop
ja
and
popa
sti
cmp
add
movs
push
jmp
xor
out
cmps
lahf
dec
in
dec
(bad)
cli
mov
dec
jmp
dec
shl
jp
sub
fmul
xchg
jge
add
scas
daa
add
pop
add
dec
xlat
cmps
mov
sbb
xor
sbb
(bad)
test
jno
mov
xchg
test
gs
lea
push
pop
lock
cmc
xchg
pop
rcr
in
push
shl
push
and
das
mov
(bad)
stc
mov
adc
xchg
xor
loopne
ret
jo
xor
xor
out
retf
inc
push
(bad)
mov
mov
test
pop
sbb
cmp
dec
pop
xchg
sbb
adc
jecxz
scas
test
xchg
bound
iret
xchg
add
cmp
jle
cs
jns
xchg
data16
loop
and
fistp
call
retf
or
cli
lahf
mov
movs
sub
ret
pop
inc
sahf
in
xor
and
pushf
pusha
leave
pop
sahf
mov
and
addr16
int3
dec
push
jmp
add
mov
inc
cmp
retf
xor
mov
mov
int3
dec
mov
fistp
test
adc
inc
retf
cld
clc
retf
sbb
popa
xchg
adc
ret
pop
xor
std
xor
mov
cmp
sub
and
cmp
push
aaa
fdivr
jecxz
and
mov
adc
push
dec
out
cmps
mov
dec
imul
jg
inc
rol
ins
dec
sar
push
push
or
mov
mov
jge
push
sar
sbb
aad
loope
ins
jmp
adc
(bad)
push
scas
popa
jmp
int3
ins
jge
fwait
inc
xchg
mov
mov
xchg
add
pop
mov
add
sbb
sub
mov
pop
ins
dec
push
add
mov
aaa
jnp
cmp
xchg
or
mov
in
lea
cmc
mov
push
sti
aaa
jb
xchg
cld
mov
fs
inc
popf
jns
mov
popf
push
xchg
lock
lds
les
stos
mov
in
iret
jle
clc
add
outs
and
push
jbe
xor
ins
lock
or
hlt
fdivr
repnz
mov
cli
cmps
ret
mov
test
inc
xchg
mov
add
lds
int
mov
adc
cli
sub
into
rcl
pop
outs
jae
inc
aaa
and
xchg
nop
je
mov
or
hlt
sbb
pop
inc
or
pop
mov
xchg
sub
pop
add
ficom
mov
sahf
cmp
push
dec
sub
iret
rol
xlat
popfw
and
mov
and
cmp
mov
ins
imul
dec
daa
out
push
mov
fwait
div
dec
fisub
in
retf
movs
jo
mov
jne
rcr
(bad)
in
and
js
popf
jae
call
xor
jnp
mov
jmp
outs
in
mov
push
push
cmp
add
sar
std
jg
dec
fnstsw
push
and
das
xchg
add
add
sub
inc
popa
lds
jg
sbb
pop
mov
sub
fstp
rol
and
mov
test
add
ins
inc
out
test
aaa
xchg
lahf
test
out
cmps
lods
pop
mov
mov
ret
fdivr
or
inc
and
push
jp
out
popa
repnz
inc
push
dec
cwde
daa
arpl
retf
dec
test
sbb
outs
inc
fsubr
cmp
mov
cli
jne
call
loopne
popa
pop
xor
jo
add
jp
cld
mov
ins
add
mov
pop
jl
jmp
cmps
ret
or
inc
jbe
or
mov
fucomip
rol
xchg
xchg
xchg
pusha
enter
repnz
sub
pop
pop
in
stc
push
fadd
ins
dec
cmp
repz
out
clc
test
add
shl
test
fcomi
nop
ins
out
fst
test
enter
lea
sub
in
rcl
xchg
jp
enter
pushf
sub
pop
aas
aad
jne
cdq
push
dec
ins
ins
call
jmp
jg
xchg
fidivr
pop
(bad)
frndint
mov
cdq
pop
mov
pop
inc
sub
mov
xchg
arpl
xchg
dec
dec
and
mov
int
cmps
outs
add
dec
cdq
ins
loope
jge
in
and
mov
cdq
fcom
call
cmp
aam
bound
nop
dec
jmp
idiv
dec
mov
dec
adc
pop
xchg
mov
dec
lahf
mov
shr
adc
movs
dec
icebp
jmp
jp
bound
in
das
add
stc
push
pop
mov
push
mov
fistp
mov
sbb
dec
xor
retf
dec
scas
into
test
in
bound
pop
test
movs
or
jb
das
mov
test
inc
and
push
push
adc
xor
lods
adc
jb
jns
aas
jle
xchg
mov
ror
mov
(bad)
mov
dec
pop
xor
dec
(bad)
out
jle
enter
sub
inc
and
cmps
cmp
lds
xchg
or
ds
cmp
add
inc
add
pop
aam
lea
popf
sbb
dec
mov
rcl
dec
and
jns
enter
mov
je
push
popf
scas
cmp
call
xor
inc
shr
arpl
jns
test
mov
ret
aas
xchg
(bad)
jae
jp
movs
push
sub
sbb
les
aam
and
xchg
jb
pop
rcr
into
jl
push
sbb
loop
sbb
and
adc
lds
repnz
xor
mov
sahf
jno
div
(bad)
fcomp
xor
push
sbb
mul
cwde
or
and
popa
sub
mov
les
(bad)
jne
cmp
gs
add
pop
xchg
(bad)
xchg
out
jb
jb
mov
popa
push
pop
int
sub
cmp
add
sahf
sub
into
cmp
mov
adc
pop
push
pop
int3
xchg
adc
sub
xor
adc
mov
(bad)
stos
shl
out
shr
push
jge
mov
add
sub
ins
test
jae
fst
push
mov
push
pop
dec
(bad)
leave
aas
pop
shl
inc
mov
dec
and
sub
js
push
cli
scas
into
fiadd
jb
or
popa
loope
mov
out
std
jbe
mov
jae
inc
and
push
addr16
retf
pop
popf
hlt
pop
js
and
cmp
cdq
push
(bad)
vcvttpd2dq
cmp
mov
add
aad
adc
rcr
xchg
popa
jne
aaa
xor
outs
outs
xor
push
movs
mov
adc
in
push
inc
imul
mov
mov
pop
enter
retf
repz
jnp
xor
ds
cmp
retf
cmp
repnz
push
jecxz
fwait
enter
lods
call
lock
pop
pop
push
xor
sub
mov
call
int
hlt
iret
imul
rcl
add
adc
loop
jp
lods
les
jge
cmps
ins
in
sub
(bad)
push
das
popf
stc
(bad)
or
and
xchg
mov
dec
test
jne
cmp
outs
fdivp
movs
cdq
inc
jge
mov
enter
push
shl
stc
test
cmp
pop
push
aas
stc
inc
call
add
sub
push
inc
and
lods
add
pop
inc
(bad)
and
and
add
stc
call
xchg
sar
sbb
push
fild
aad
sbb
sysenter
lock
nop
inc
pop
bound
or
loopne
dec
or
sti
sub
dec
test
pushf
sub
clc
pop
mov
stos
movs
repnz
pop
pop
stos
retf
push
ins
retf
dec
sbb
jne
and
mov
addr16
push
xor
cmp
test
inc
loopne
xchg
daa
mov
iret
and
mov
or
or
push
cmps
mov
xor
and
xchg
lods
into
mov
(bad)
adc
add
add
icebp
jbe
ret
(bad)
mov
outs
jnp
test
hlt
gs
adc
test
lahf
mov
adc
mov
stos
movs
push
or
mov
test
ins
scas
ret
ja
adc
rcl
movs
push
mov
and
call
pop
push
xchg
cmp
retf
mov
mov
loope
fsub
inc
add
jmp
or
or
movs
shl
out
jl
leave
xlat
inc
xor
mov
lods
push
xchg
(bad)
pop
pop
imul
ins
cmp
mov
movs
add
jge
fnstcw
(bad)
fldpi
xor
jnp
mov
lahf
and
outs
retf
(bad)
pop
adc
mov
aad
ror
mov
push
in
(bad)
cli
movs
scas
in
imul
(bad)
cmp
fistp
out
jl
cmp
inc
xor
cli
xor
or
push
add
mov
and
sar
(bad)
loop
mov
sub
clc
jp
push
adc
mov
(bad)
mov
xlat
cmp
js
add
sahf
aad
ffreep
fistp
int3
into
xchg
rcl
stos
sbb
cmp
cmp
push
icebp
push
fnstcw
fnsave
stos
daa
jp
add
ins
shr
mov
push
jno
movs
and
int3
lods
xchg
imul
and
aaa
out
retf
loop
adc
imul
jmp
mov
xor
(bad)
fstp
dec
dec
push
mov
test
fdiv
inc
fisttp
std
es
sbb
or
dec
cwde
in
sbb
and
pop
bound
(bad)
adc
fist
mov
mov
dec
or
jge
ficomp
add
repz
xor
fld
je
push
(bad)
sar
(bad)
fisttp
jmp
mov
sahf
aaa
sbb
sti
adc
rol
cmp
mov
out
mov
enter
xchg
and
jmp
jno
pop
cmp
mov
loop
call
cmps
aam
bnd
inc
add
mov
out
push
aam
adc
xor
nop
bound
sar
fsubr
popa
mov
dec
int
sub
mov
fistp
jg
mov
or
cwde
cmp
mov
dec
mov
loop
adc
mov
add
push
pop
out
stc
repz
mov
int
pop
push
stc
ss
lock
pop
pushf
lds
sub
xchg
pop
push
jno
sub
shr
pop
pop
xor
scas
lea
cmc
xor
out
fstp
push
fiadd
stc
inc
mov
pop
sbb
mov
mov
push
sbb
(bad)
clc
(bad)
(bad)
test
sub
stc
std
push
add
sub
cld
dec
sbb
adc
sti
xor
pop
and
jno
mov
adc
mov
or
fist
mov
add
inc
mov
in
adc
lods
fld
(bad)
aam
int3
cwde
stc
cdq
mov
dec
xchg
fucompp
xchg
mov
stc
mov
xor
aad
nop
stos
out
int3
push
xlat
inc
jae
push
xor
push
movs
dec
mov
sub
sub
shr
test
mov
jmp
das
push
jnp
inc
loope
mov
mov
pushf
inc
scas
sar
adc
or
and
in
(bad)
xor
xchg
push
push
sub
in
(bad)
lods
mov
mov
pop
shl
mov
and
xchg
mov
(bad)
aas
cmp
sbb
pop
pop
shl
cld
sahf
stos
sub
daa
and
add
sbb
fs
mov
xor
push
cmps
fdivr
stc
mov
aad
dec
jns
xor
leave
retf
rcl
jb
std
jns
add
(bad)
push
xor
jl
shl
ds
cmps
jmp
jae
ins
adc
mov
inc
lods
or
out
or
pusha
div
shl
fs
adc
xchg
sub
and
ficomp
mov
popa
pop
dec
fld
ja
mov
pop
xor
les
cs
das
or
out
jb
aas
int3
mov
neg
jmp
sbb
enter
cld
inc
sbb
pop
inc
icebp
mov
sub
lods
or
retf
mov
and
stos
pop
gs
les
in
(bad)
lock
pop
cmp
mov
or
and
pop
add
xchg
pop
cmc
mov
dec
rep
in
in
lods
pop
jae
sub
dec
sub
add
xchg
mov
sub
adc
out
int
pop
shr
rcl
jp
neg
lds
sbb
fxch
fsub
icebp
stos
cmp
jmp
sub
xchg
data16
ret
xor
(bad)
pusha
pop
imul
sar
cmc
mov
(bad)
xchg
shl
sub
jle
je
shr
mov
in
(bad)
outs
outs
movs
imul
cmp
cmp
stc
popf
mov
mov
int3
inc
retf
cld
ret
sbb
test
xor
or
cmp
inc
mov
dec
sbb
fbstp
int3
mov
das
rcr
dec
inc
sbb
in
ins
jmp
mov
jp
dec
mov
das
xchg
push
adc
cmp
cmps
jl
cmp
out
mov
iret
adc
clc
jg
mov
mov
(bad)
lods
inc
cwde
loop
mov
mov
fidiv
mov
in
push
pusha
jbe
adc
push
repnz
cmp
stos
cmp
xor
icebp
and
sub
cmp
inc
dec
fcom
es
push
jmp
dec
scas
cwde
rol
pop
mov
imul
imul
call
mov
xchg
retf
mov
and
pop
or
imul
arpl
or
sub
cmps
mov
jo
mov
ret
mov
sbb
pop
sbb
les
je
int3
mov
ins
push
scas
fild
push
mov
sub
pop
push
pop
mov
fstp
xchg
nop
and
xchg
add
fisttp
xor
add
mov
push
arpl
xchg
imul
outs
ins
stc
jecxz
repnz
rep
jnp
stc
mov
clc
cmc
cmp
pop
gs
into
call
dec
js
xchg
jbe
enter
push
or
push
adc
mov
xor
xor
(bad)
mov
scas
ret
movs
jp
mov
lods
or
jle
xor
and
call
dec
int
push
jns
jmp
pop
pop
push
and
mov
movs
popf
pop
dec
jl
xchg
push
jmp
pop
fild
mov
loop
shl
jae
ret
jno
inc
popa
aas
adc
hlt
les
stos
dec
xchg
popf
or
loope
inc
pop
sahf
loop
outs
jge
cmp
fwait
retf
mov
aam
out
sbb
and
lods
lahf
sub
add
and
xor
mov
mov
(bad)
push
adc
mov
jp
cmps
imul
mul
or
test
lods
aaa
jmp
mov
push
xor
sub
aas
mov
jmp
pop
mov
sbb
loop
mov
pop
pop
ret
cmps
adc
inc
or
inc
adc
pushf
cmc
mov
mov
pusha
pusha
jle
jne
mov
fwait
xchg
and
adc
cmc
jbe
mov
wrmsr
pop
add
fcmovne
std
sub
lods
icebp
scas
mov
loopne
adc
mov
stos
pop
jecxz
dec
pop
pop
pop
or
in
pushw
fimul
jne
add
lahf
mov
push
pusha
setge
icebp
jns
movs
add
cmp
or
dec
mov
lea
ins
push
imul
jnp
ja
adc
pop
pop
inc
retf
arpl
inc
ror
call
mov
pop
sbb
xor
call
outs
pop
adc
mov
push
icebp
test
adc
lods
dec
cmp
sbb
mov
(bad)
sub
jo
test
mov
movs
es
rol
xor
je
xor
loope
xchg
jg
fstp
or
hlt
inc
stos
out
bound
adc
je
sub
jle
or
inc
ins
mov
dec
jg
add
movs
movs
inc
out
dec
cdq
movs
arpl
outs
jl
mov
cmp
xor
test
ins
pop
fld
hlt
test
shr
in
sbb
jmp
sub
xor
std
mul
or
popf
ret
scas
push
and
and
push
jno
(bad)
hlt
cmp
push
fiadd
sub
scas
cmc
inc
cmp
xor
adc
inc
cmp
cmps
inc
push
enter
push
add
dec
push
aad
test
mul
fwait
pop
inc
cmp
jmp
shl
ror
cmps
sub
pop
addr16
in
adc
nop
cmps
xor
popa
mov
adc
mov
shr
imul
(bad)
xchg
mov
shr
or
pop
adc
mov
les
push
push
cmp
into
add
xchg
repnz
add
leave
dec
cmp
xchg
dec
or
mov
imul
rcl
xor
and
das
sub
les
xor
cmp
lods
and
jno
and
add
into
test
mov
scas
rol
(bad)
ins
shl
push
popa
sub
in
sub
lock
dec
test
jmp
les
les
xlat
cmp
cmp
mov
scas
mov
mov
imul
gs
cdq
movs
dec
jmp
inc
retf
sub
mov
cmp
jecxz
mov
(bad)
ret
add
rol
sbb
add
inc
and
and
inc
loope
fldcw
inc
sbb
xchg
mov
cmp
test
fnsave
(bad)
xchg
adc
add
mov
stc
sbb
xor
push
mov
movs
xchg
loopne
add
clc
xchg
dec
mov
cmp
mov
add
and
addr16
jno
daa
(bad)
pop
mov
shl
int3
and
xchg
cmp
(bad)
retf
outs
jb
int
sub
rol
sub
loopne
push
lods
fwait
xchg
imul
adc
ins
adc
test
mov
sbb
ins
xor
adc
stc
pop
push
cmp
jmp
lock
out
iret
repnz
mov
add
js
(bad)
sub
dec
push
jno
jmp
jb
add
cli
push
jge
jl
xor
sar
jecxz
pop
leave
sti
xchg
xor
aaa
cmp
std
xlat
mov
or
ins
ret
add
cmps
xchg
cs
cmp
movs
mov
fsub
enter
sbb
push
movs
mov
adc
inc
jae
mov
pusha
inc
mov
ret
mov
out
popf
out
int
sbb
sti
inc
hlt
dec
push
test
lods
idiv
clc
hlt
ret
out
fst
dec
aas
test
adc
jp
arpl
std
lods
sub
and
leave
cli
sub
xor
jnp
mov
leave
adc
call
sub
or
or
imul
sbb
fnstenv
(bad)
js
sahf
sub
out
clc
js
jmp
cwde
inc
mov
pop
jp
or
sub
xor
adc
push
push
sahf
cmps
mov
and
shl
stos
mov
das
cmp
mov
jge
repz
ss
loope
inc
pop
ret
and
xchg
push
es
fwait
mov
mov
repz
fnstcw
mov
xchg
outs
je
in
rol
push
loopne
shr
mov
inc
ror
inc
mov
adc
and
push
hlt
push
fmul
mov
add
jns
ss
mov
pop
lock
lock
jnp
jp
pop
push
test
push
cmps
jle
shl
add
and
pop
retf
push
call
jl
es
test
loopne
jl
or
jge
adc
repz
fmul
lds
lods
pusha
jb
(bad)
and
(bad)
pop
add
inc
or
cmps
mov
mov
dec
mov
ins
pop
or
addr16
sub
or
cmps
(bad)
fst
into
mov
mov
outs
jae
aad
lds
icebp
and
ret
loop
loopne
xor
sti
xchg
movs
cmps
push
bound
fild
cli
cmp
add
mov
cmovl
es
xchg
fsubr
mov
mov
retf
out
(bad)
cmp
pop
jge
pusha
jno
cld
sbb
add
cs
faddp
fcomp
mov
xchg
adc
mov
fwait
xor
sub
lea
jg
cmps
test
pusha
ins
neg
lods
dec
dec
inc
mov
pop
js
jp
out
xchg
retw
call
(bad)
dec
jnp
fwait
(bad)
push
push
popa
ret
xchg
jmp
test
dec
sub
mov
xor
les
sub
call
lods
sub
in
cmp
jg
or
pop
lahf
arpl
dec
je
aad
rcr
into
(bad)
push
mov
or
push
pop
mov
cli
and
mov
xchg
and
mov
add
out
(bad)
push
mov
pop
inc
nop
jae
call
int3
pusha
loope
dec
mov
cmp
aas
std
adc
jmp
and
and
mov
loope
jmp
ds
jns
sub
outs
push
nop
or
sahf
dec
sbb
mov
sub
mov
push
xor
cmps
or
bound
and
jg
(bad)
push
lds
ret
imul
dec
arpl
jae
retf
(bad)
cs
mov
adc
adc
lods
jne
es
xor
cmp
xchg
inc
xchg
loopne
arpl
sti
add
or
mov
pop
ja
popa
in
push
mov
(bad)
in
int
cli
jp
cmp
rcl
jl
push
pusha
and
pop
in
mov
sub
cmc
cmps
test
ds
push
push
repnz
nop
xchg
inc
aas
jmp
jmp
pushf
in
jp
and
mov
repz
aas
add
lds
(bad)
call
xor
cmps
out
pusha
out
dec
adc
xchg
adc
or
or
cmp
push
inc
push
repz
pop
and
or
stc
xor
int3
lods
cli
movs
mov
dec
movs
mov
mov
mov
ja
and
icebp
ficom
add
(bad)
scas
xchg
fbstp
mov
js
mov
pop
aam
adc
lods
or
movs
mov
inc
xor
repnz
fld
mul
push
push
repnz
inc
das
pop
pop
outs
or
mov
lods
scas
out
test
ror
mov
movs
inc
cmp
add
dec
pop
jge
inc
std
(bad)
cmp
adc
cdq
and
inc
dec
push
cmp
jbe
xor
push
daa
cmp
lock
cs
lds
jp
push
repnz
and
nop
call
pushf
xchg
out
nop
fiadd
mov
iret
cmps
sub
cs
(bad)
pop
jp
xchg
call
dec
lahf
iret
(bad)
cmps
neg
xor
popa
sub
xor
mov
cmp
pop
mov
fstp
mov
loopne
cmp
cmp
(bad)
pop
pop
call
mov
test
mov
scas
stos
imul
push
jbe
push
pop
or
push
(bad)
data16
pop
jne
(bad)
dec
arpl
jae
pop
ror
add
dec
pop
mov
int
in
popa
xchg
pop
sub
fist
aaa
pop
rol
xor
sub
cmps
push
inc
jnp
pop
xor
adc
or
mov
scas
adc
aas
mov
imul
cmovo
mov
push
mov
scas
mov
pop
test
jb
dec
(bad)
pop
xchg
mov
pop
and
jmp
test
inc
pop
xchg
xchg
cld
jne
lock
fnstenv
xor
ins
in
xchg
mov
cli
push
cmp
int3
fild
add
xchg
lahf
mov
pop
int3
mov
adc
lea
(bad)
mov
pop
loope
and
(bad)
lods
mov
mov
and
inc
adc
xsha1
cmps
mov
dec
retf
cmps
mov
pushf
sub
int3
movd
shl
dec
and
xchg
popa
pop
xchg
xchg
push
adc
ret
addr16
ins
gs
mov
mov
stos
in
jmp
mov
mov
pop
leave
daa
pop
ja
das
mov
push
fstp
(bad)
mov
std
mov
mov
jp
les
cs
loop
xchg
push
mov
push
or
mov
mov
mov
sbb
add
xchg
loop
xchg
xchg
fdivr
dec
call
in
iret
jmp
pushf
inc
pusha
(bad)
mov
je
mov
adc
jecxz
iret
push
or
and
loope
mov
(bad)
pop
xchg
xchg
cwde
and
jl
adc
scas
cmovno
inc
pop
add
jns
pop
cdq
xor
imul
mov
scas
je
sbb
cmp
dec
imul
retf
adc
adc
sbb
bnd
cmc
adc
push
adc
loope
sti
cmp
js
rol
in
test
add
sub
loop
mov
mov
or
(bad)
mov
and
dec
jmp
in
jb
mov
addr16
shl
mov
pop
sub
jmp
push
dec
dec
mov
in
xchg
mov
mov
fidivr
lea
sub
dec
int3
jae
or
adc
jmp
mov
add
xor
in
cmp
adc
xor
call
test
or
call
pop
out
push
push
pushf
(bad)
aaa
fistp
or
outs
mov
rol
cs
stos
movs
dec
out
sbb
and
add
dec
cmp
scas
xor
call
mov
inc
mov
sub
cld
rcr
ins
mov
lea
fwait
sub
inc
pop
cmc
fs
lods
outs
ins
pop
loope
cmp
int3
sahf
pop
inc
imul
sub
inc
daa
pop
pop
adc
imul
(bad)
stc
xchg
rcr
jns
hlt
shl
xor
sub
sahf
jmp
inc
or
lea
mov
scas
ja
ins
xor
ret
mov
sbb
inc
popa
dec
jae
(bad)
xchg
xchg
jle
popf
jmp
inc
loop
pop
pop
jle
imul
sub
popf
jb
adc
cld
sbb
pop
hlt
(bad)
daa
xor
or
mov
shl
jecxz
(bad)
stos
and
sub
mov
sti
jns
in
dec
stos
out
cmp
jecxz
stos
xlat
mov
icebp
jl
sbb
fist
xor
inc
paddq
in
xchg
dec
push
scas
fisttp
dec
retf
js
push
jmp
sub
in
jmp
enter
pop
aas
or
pop
or
push
or
sbb
ret
xchg
sti
test
cli
adc
mov
js
push
nop
jnp
cwde
xor
mov
jp
rsm
aad
mov
xchg
pop
mov
pop
dec
cmc
adc
or
xchg
xchg
arpl
rcl
inc
mov
push
iret
fmul
and
aam
jns
dec
dec
dec
fidivr
and
jle
push
inc
repz
mov
aad
enter
scas
push
test
fstp
sub
aas
inc
pop
xchg
sub
loop
repz
sbb
out
pop
pop
ins
in
imul
popa
mov
aam
fisttp
xor
sub
inc
push
and
comiss
jmp
mov
mov
xchg
rol
or
mov
or
cmp
add
push
inc
cs
fisttp
ins
daa
or
mov
dec
jno
out
inc
push
pop
xor
pop
mov
mov
popf
aaa
push
mov
mov
jmp
aam
add
mov
test
rcl
mov
jle
adc
cmps
xchg
cmps
mov
cld
sbb
mov
loope
mov
pop
mov
fistp
aam
out
iret
xchg
push
cmp
fadd
push
cmp
int3
cmc
dec
fst
mov
pop
add
loopne
test
movs
pop
cld
fistp
cdq
cmc
inc
xor
loope
pop
fistp
dec
add
adc
mov
in
lock
(bad)
mov
xadd
adc
clc
adc
sar
push
test
mov
push
out
int3
fiadd
js
inc
sbb
aad
push
fimul
xchg
les
sub
xor
repz
jae
addr16
mov
aaa
mov
int3
cmp
inc
sbb
jmp
lds
test
mov
popf
inc
pop
xchg
jno
test
adc
enter
pop
jle
leave
jmp
pop
out
sub
cld
pop
add
or
sar
xchg
mov
mov
popf
push
push
add
mov
push
sti
cmp
addr16
adc
popf
into
jne
not
mov
sti
adc
dec
sub
data16
mov
ss
add
adc
loopne
sbb
test
pusha
(bad)
loope
jb
mov
push
and
xchg
and
sbb
pop
push
mov
jp
f2xm1
push
fidivr
dec
xchg
test
dec
push
mov
xor
mov
out
xor
sbb
mov
or
xchg
mov
es
out
out
xchg
mov
jle
inc
xchg
retf
test
push
adc
sub
stos
jno
repnz
je
or
jbe
jge
sbb
test
sbb
icebp
fbstp
in
fld
aas
jo
pop
and
les
pop
loop
push
jo
push
sub
cli
pop
lods
cld
dec
jbe
lock
jne
push
mov
jmp
fiadd
neg
mov
imul
adc
and
ret
hlt
adc
cdq
std
sar
sub
aas
fld
fbld
popa
aaa
stos
and
in
sub
xor
aad
(bad)
or
jnp
shr
mov
pop
jge
jp
outs
jo
jmp
mov
je
mov
push
and
inc
inc
push
jle
jo
popa
cdq
dec
pusha
mov
add
movs
retf
dec
arpl
sahf
fwait
mov
loop
mov
jnp
xor
in
inc
(bad)
rcl
stos
and
mov
outs
ss
ins
je
fwait
mul
rep
ja
mov
add
cwde
lds
int
jmp
sub
xchg
push
cld
adc
cmp
cmc
or
sub
xchg
fidiv
jmp
jg
xchg
sahf
or
dec
neg
mov
out
stos
xchg
cmc
in
jne
iret
daa
and
fnstenv
cmp
add
lods
cs
into
(bad)
cmps
jge
sbb
es
icebp
xor
push
in
lahf
leave
ins
je
shl
arpl
mov
aad
jecxz
mov
ja
in
cmc
sub
mov
push
jl
push
aam
stos
mov
jbe
loopne
xor
je
and
cli
push
lods
fwait
adc
jecxz
and
cmp
or
stos
jne
push
les
lock
fwait
push
inc
cdq
push
sbb
jmp
xchg
cs
jmp
cmp
jle
pop
fnsave
ret
bound
xchg
ss
(bad)
sbb
dec
ds
mov
(bad)
pop
push
jnp
addr16
inc
fsubr
cmps
ror
dec
loopne
and
dec
xchg
xchg
aad
call
pop
mov
mov
daa
dec
xor
lds
and
pop
xlat
pop
je
icebp
mov
int
ja
mov
push
lock
xchg
adc
and
push
and
shr
iret
pushf
daa
sub
movs
ret
daa
jnp
sub
or
dec
add
xor
inc
lea
mov
mov
pop
cdq
sahf
pop
popa
push
sahf
mov
div
xchg
pcmpgtw
cmp
jno
jecxz
push
inc
xchg
mov
or
push
and
fucomip
jmp
int
dec
jmp
cwde
mov
sub
dec
mov
cmp
pop
pop
in
das
ror
aam
add
sbb
mov
shr
iret
mov
jns
in
cs
pop
or
popf
pop
push
push
dec
push
mov
aaa
loopne
push
and
aam
inc
xchg
mov
push
nop
je
push
mov
mov
ja
inc
xchg
outs
adc
jbe
aaa
xor
mov
pop
(bad)
push
fs
adc
xchg
cmps
inc
scas
mov
sub
pusha
jge
js
es
in
arpl
dec
mov
jg
in
xchg
pop
sub
cmps
nop
iret
gs
movs
ss
push
lods
adc
cmp
mov
mov
imul
je
xchg
cwde
inc
fdiv
or
shr
dec
jle
seta
jmp
repnz
not
or
xchg
int3
cs
imul
and
out
pop
arpl
adc
cmp
jmp
sub
sub
dec
cmp
xor
fld
fisttp
jne
ja
xor
add
in
or
xchg
xchg
and
adc
test
cwde
int
out
cmp
or
stos
addr16
pop
cmp
pop
dec
jno
jmp
xor
jg
movs
clc
loop
leave
jecxz
sbb
mov
push
retf
dec
test
mov
test
pop
les
gs
(bad)
mov
or
push
daa
out
dec
push
sahf
out
cmp
daa
dec
js
outs
mov
cdq
call
lahf
enter
xor
je
daa
or
aas
mov
adc
repnz
fdivr
cs
rol
mov
aad
repnz
mov
call
test
mov
mov
outs
push
outs
call
std
sub
cmc
test
adc
mov
dec
xchg
pop
add
aas
ins
jae
fisub
(bad)
pop
jl
jmp
jecxz
sub
inc
jmp
push
push
test
test
add
hlt
loope
push
xor
popa
pop
not
pop
mov
nop
xchg
in
mov
fstp
jmp
or
pop
aaa
cmp
jge
(bad)
outs
fist
xchg
ins
fimul
jg
mov
adc
jmp
mov
lods
pop
(bad)
(bad)
fbstp
das
out
addr16
xor
and
pop
mov
dec
(bad)
ficom
mov
stc
sub
(bad)
(bad)
pop
adc
fild
push
ror
mov
(bad)
cdq
cmps
nop
mov
push
cmp
xchg
popf
loopne
popa
in
outs
add
push
sar
xchg
push
xor
arpl
mov
ret
ja
pop
lods
adc
and
adc
adc
popf
mov
or
je
int
xor
xor
sbb
jno
pop
fisttp
dec
leave
pop
xchg
rcr
jg
jb
(bad)
into
lahf
xlat
and
push
movs
pop
leave
imul
repnz
vpabsd
jbe
ds
cwde
(bad)
jnp
mov
fld
add
inc
mov
mov
popf
bnd
pushf
loop
push
push
addr16
jae
ffree
fsubr
inc
hlt
push
int
les
mov
and
xchg
test
xor
mov
xor
or
xchg
push
mov
ret
rcl
movs
in
push
pushf
dec
inc
mov
adc
sbb
outs
cwde
push
xchg
sbb
std
ja
stc
inc
sbb
out
ss
push
loop
push
push
jbe
jp
add
pushf
js
fwait
add
clc
or
lea
es
les
ss
aas
mov
mov
cld
ins
ror
fld
mov
punpckhdq
pop
ds
xchg
lods
loope
pop
mov
pop
or
adc
or
adc
adc
mov
jns
jecxz
mov
xchg
xor
or
lods
sbb
inc
inc
dec
sbb
or
call
dec
pusha
jno
loope
enter
push
pop
lock
cmc
out
(bad)
aad
sbb
add
inc
jb
test
mov
or
mov
and
xor
mov
inc
mov
cmp
dec
cmp
bound
loope
ds
ss
invd
xor
movs
adc
mov
pop
retf
sub
mov
ja
mov
stos
pop
cwde
fwait
retf
loop
cmps
cmps
aaa
dec
ss
leave
xor
cmp
sbb
dec
cmc
jp
cmp
movs
jg
(bad)
push
sbb
test
pushf
loope
xchg
js
cmc
in
mov
aad
mov
pusha
popa
add
sub
rcl
sbb
pop
rcr
cmp
inc
stc
sti
sbb
mov
dec
repz
xchg
jl
jb
mov
fdivr
popf
test
jb
cs
dec
jmp
ficomp
cmp
jno
xor
inc
cmp
mov
aaa
mov
inc
mov
mov
pop
sub
pop
dec
mov
(bad)
pop
add
neg
loop
dec
mov
cmps
sbb
jns
aas
cmp
int3
jmp
pop
adc
adc
jns
dec
and
iret
jg
shl
mov
xor
push
stos
mov
xchg
movs
push
cs
mov
inc
cdq
mov
retf
mov
adc
adc
imul
lds
sub
enter
dec
adc
mov
mov
adc
pop
std
out
outs
scas
or
fadd
rcl
ja
test
add
fist
xchg
sub
cwde
(bad)
retf
cmp
xor
sub
in
test
adc
lock
sub
retf
xlat
sub
dec
fmul
cdq
dec
xor
inc
push
dec
cmp
add
push
add
in
dec
adc
cmc
push
rol
mov
cmp
mov
mov
fst
pop
repnz
aas
scas
daa
pop
and
iret
xchg
xor
popa
cs
push
popa
cmc
or
jge
dec
cmp
push
and
pop
jae
mov
in
mov
call
sbb
sub
or
cmp
int3
jmp
fsub
daa
sahf
gs
mov
mov
or
(bad)
mov
punpcklbw
adc
out
in
lods
add
stc
in
inc
(bad)
in
in
imul
je
dec
add
pop
loop
rcl
mov
sub
pop
retf
(bad)
or
sahf
xchg
mov
enter
(bad)
mov
inc
jbe
in
sub
and
jmp
lods
cmp
ja
pop
out
push
jnp
clc
fsubr
mov
xor
scas
sbb
cli
neg
xor
and
push
adc
fs
dec
mov
sbb
sub
adc
loopne
pop
(bad)
mov
ins
cli
jle
mov
adc
out
outs
gs
inc
jge
pop
(bad)
out
mov
add
enter
mov
xor
add
cld
lock
fbld
inc
pop
cmp
jne
mov
jl
lea
dec
cmps
fisubr
loopne
scas
fbld
jno
jo
lea
es
push
repnz
inc
mov
pusha
bound
jg
sbb
cmp
jne
das
ins
add
mov
mov
and
cdq
imul
and
pop
or
aas
inc
cmps
ret
sub
(bad)
js
jmp
push
jno
js
xor
inc
sbb
stos
(bad)
stc
push
sub
sub
xor
inc
cli
push
jle
xlat
popa
hlt
lods
push
sbb
dec
pop
cmp
inc
enter
(bad)
mov
add
je
pop
push
cs
enter
pusha
jge
gs
or
xor
(bad)
stos
push
adc
(bad)
scas
cmc
rol
cmp
adc
mov
retf
out
cmp
mov
shl
push
add
mov
and
loope
xor
xor
xor
push
outs
shl
fistp
lock
mov
ss
shr
sbb
loopne
cdq
push
ret
mov
sahf
push
repnz
(bad)
hlt
mov
pop
aas
out
leave
bound
call
fld
dec
fdiv
pushf
adc
xchg
lods
or
icebp
mov
ins
cmp
xchg
ror
xchg
mov
aad
dec
and
mov
loop
adc
lods
loope
adc
adc
add
ins
push
xchg
retf
inc
cmp
and
ror
int
pop
call
push
imul
xor
fidiv
ins
(bad)
lea
add
arpl
dec
inc
mov
inc
std
push
push
fcomp
jmp
mov
fcmove
mov
loopne
mov
mov
loope
ret
(bad)
cmp
fsubp
and
jne
pop
fwait
xchg
add
xor
mov
icebp
lea
ja
jle
sub
mov
ins
jmp
add
cmp
sbb
add
adc
dec
int
or
or
cs
ins
dec
stos
(bad)
scas
call
inc
and
add
inc
sub
cmp
jnp
dec
or
test
xor
loopne
push
mov
and
je
in
out
inc
xor
and
add
(bad)
pop
mov
test
sar
rol
sub
mov
sub
imul
fwait
loopne
mov
nop
test
push
mov
outs
jbe
or
daa
or
(bad)
ficomp
push
mov
mov
aas
mul
xchg
add
imul
or
les
mov
sub
cmc
sbb
les
movs
(bad)
int3
iret
lds
cmp
mov
(bad)
push
dec
adc
push
sbb
aad
lds
jnp
call
dec
data16
sbb
repz
imul
jmp
shr
loope
call
nop
sbb
aad
mov
outs
iret
jl
repz
sbb
std
xchg
pop
pop
shl
retf
adc
mov
inc
inc
fdivr
or
jns
fnstsw
mov
push
xchg
inc
or
dec
or
xor
inc
(bad)
mov
call
cmp
lods
sbb
daa
std
pop
adc
pop
sbb
aas
lods
aaa
add
xchg
into
jge
mov
neg
xor
xchg
(bad)
ja
pop
loop
test
xchg
mov
lock
movzx
or
mov
pop
sub
(bad)
call
(bad)
lahf
mov
sub
sbb
into
pop
dec
lahf
imul
fisttp
or
dec
gs
test
jecxz
cmp
sbb
mov
stos
stos
lds
aam
popf
mov
adc
push
cld
jae
in
mov
adc
or
std
gs
mov
test
repnz
div
in
jnp
retf
or
mov
ret
pushf
dec
sbb
scas
ja
cmp
js
out
stc
jno
add
or
gs
popf
push
mov
or
sub
pop
and
jno
and
call
add
or
lods
mov
and
push
test
xor
addr16
imul
mov
adc
sub
fwait
mov
xor
fnstenv
retf
test
jg
loope
xor
es
add
je
inc
popf
pop
pop
rcr
sub
and
and
add
adc
lock
fwait
jb
fdivr
mov
sbb
xlat
inc
stos
push
js
and
xchg
fcos
mov
out
fimul
cwde
cli
sar
hlt
not
mov
and
fucomip
rcl
pop
call
xchg
ds
and
in
mov
lods
outs
dec
out
in
bound
add
aas
icebp
stos
add
aaa
leave
mov
retf
mov
pusha
sbb
not
jo
in
dec
stc
das
push
mov
jno
clc
mov
mov
out
jnp
lea
cmp
mov
aas
wbinvd
push
loopne
rep
push
pop
iret
cmp
push
mul
and
cwde
jl
in
scas
xor
mov
movs
xchg
push
(bad)
adc
leave
push
push
xor
cmps
fs
or
leave
sti
ret
pop
push
jmp
cmp
cmp
xor
jbe
daa
dec
sar
nop
jmp
add
stos
adc
in
outs
(bad)
(bad)
repnz
cmps
mov
cmc
and
aad
xchg
cmp
xor
inc
(bad)
push
mov
push
jmp
sbb
dec
sub
loope
xchg
rol
and
or
fwait
clc
mov
mov
icebp
xor
push
push
adc
mov
ret
jb
mov
je
gs
jo
push
jl
or
jg
xchg
pop
push
movs
leave
sbb
lock
push
loope
xchg
cmp
aaa
mov
fucomp
add
mov
out
ror
(bad)
jmp
int3
mov
fadd
pop
aas
mov
sub
icebp
loope
push
mov
push
ja
stos
pop
(bad)
xchg
js
(bad)
jg
and
jmp
retf
or
push
push
adc
or
cmp
xor
out
jne
int
adc
dec
std
push
jne
sbb
adc
popa
or
arpl
addr16
loope
adc
sub
adc
adc
mov
mov
popa
jb
sub
or
inc
popf
pop
cmp
stos
rcr
out
sub
icebp
das
(bad)
or
sahf
pop
cmc
clc
xor
or
cmp
sub
mov
sub
leave
add
add
(bad)
push
leave
and
and
imul
pop
mov
test
call
lods
retf
add
jns
cmp
sbb
stc
aad
inc
lea
jne
das
xchg
push
pop
mov
adc
mov
mov
lods
push
push
sub
mov
mov
xor
and
movs
pop
inc
cld
movs
jae
jmp
loopne
dec
adc
mov
icebp
adc
repz
inc
sahf
iret
test
mov
test
ja
retf
jae
scas
mov
inc
xor
jecxz
shl
mov
pop
test
mov
ret
jmp
xor
sbb
mov
sub
adc
test
loop
or
ret
mov
pusha
jnp
test
add
cwde
rcl
pop
push
push
push
ins
fwait
and
xchg
sub
mov
sub
popf
repz
lods
mov
stos
mov
scas
cld
hlt
inc
shr
xor
jle
mov
push
scas
add
scas
fiadd
ins
or
mov
jmp
mov
sub
sahf
fwait
dec
push
(bad)
mov
mov
mov
lds
ret
cmps
in
mov
push
mov
sahf
or
aad
or
outs
cmp
(bad)
cmp
add
enter
xchg
xor
retf
retf
pop
std
pop
inc
arpl
inc
or
cmp
sbb
stos
sub
(bad)
mov
or
inc
sub
sub
dec
mov
popf
out
mov
mov
es
leave
sahf
aas
jge
mov
cdq
pop
xchg
mov
push
xor
scas
and
push
xchg
inc
mov
push
or
test
mov
xchg
jnp
stos
push
mov
ret
vcvtps2dq
loope
cmps
arpl
inc
shl
imul
mov
mov
xchg
adc
inc
fdiv
xor
pop
fsub
pop
mov
(bad)
out
or
add
inc
mov
xor
retf
jmp
outs
adc
nop
mov
popf
ja
jl
movs
xor
cmps
das
cmp
sub
shl
call
or
push
sbb
add
movs
ins
pop
and
jp
jg
popa
fcomp
shr
bound
cdq
mov
adc
hlt
mov
hlt
sub
aam
in
pop
jmp
stc
xor
or
out
cmp
sub
in
std
aaa
fidivr
xor
sub
pop
sub
lahf
shl
jnp
dec
je
add
retf
popf
dec
ror
cli
push
das
into
and
test
fisubr
push
pop
and
repnz
and
mov
inc
std
xlat
popa
(bad)
inc
(bad)
xchg
xchg
sbb
push
imul
pop
push
bound
sub
fld
sub
xchg
ss
jb
mov
xchg
fsubr
mov
pop
mov
mov
jbe
push
jg
xor
sar
xor
movs
shl
xor
repnz
jnp
mov
test
push
sbb
xchg
pushf
sbb
aas
sbb
and
pop
inc
xor
mov
shl
push
mov
bound
lahf
sub
adc
and
jg
sub
in
sub
ins
enter
je
sti
popf
sbb
adc
fiadd
mov
push
out
or
popf
repz
xchg
ja
(bad)
das
cmc
inc
mov
mov
cmp
or
cmc
push
imul
inc
mov
pop
aaa
and
xchg
sub
push
and
xchg
mov
cmp
push
movs
ins
std
ins
xor
call
enter
sub
dec
imul
mov
push
jmp
mov
cs
sub
mov
mov
push
inc
stc
lahf
dec
ror
popa
push
or
mov
jmp
mov
enter
adc
cdq
push
and
or
or
mov
pop
or
mov
mov
movs
fcmovnb
mov
stos
fdiv
out
mov
ret
in
xchg
or
neg
(bad)
add
imul
test
push
addr16
into
aaa
inc
sub
ins
sub
jbe
mov
and
dec
in
(bad)
not
sub
mov
sbb
xor
adc
sub
and
mov
test
dec
dec
nop
jl
xchg
adc
adc
add
sub
xor
inc
in
fisttp
push
cmps
pop
inc
stos
sub
add
mov
mov
in
pop
dec
push
and
out
cwde
push
xchg
cmps
(bad)
add
cmp
aaa
cdq
shl
repnz
mov
mov
scas
sub
pusha
inc
cmps
pop
mov
dec
out
out
mov
xor
aaa
(bad)
leave
cmp
jno
mov
std
test
aad
mov
push
sahf
imul
add
mov
dec
(bad)
and
das
push
mov
cmp
sbb
shl
popf
dec
dec
jmp
mov
in
imul
inc
bound
outs
and
iret
loope
push
or
inc
dec
sub
cmp
xchg
sub
push
call
out
jg
ss
scas
lods
cdq
loope
jmp
pop
mov
fdivr
push
call
add
call
jnp
loope
cmps
or
sti
xor
(bad)
lock
cwde
pop
gs
and
test
mov
cmps
ficomp
lea
mov
add
into
lods
mov
mov
daa
mov
push
out
loopne
dec
pop
push
push
xchg
add
jl
pop
cmc
mov
div
mov
fs
fwait
aam
jle
xor
test
in
popa
cmc
in
mov
dec
lock
inc
mov
out
jne
es
push
xor
cmp
pop
and
jl
sar
int
movs
cdq
ins
loopne
dec
fcom
into
jmp
or
jno
rcl
mov
xchg
push
mov
retf
movs
add
sub
mov
or
and
add
cmps
sub
jecxz
jmp
pop
inc
test
xor
sbb
arpl
(bad)
push
lea
(bad)
(bad)
mov
pop
and
fist
inc
dec
xchg
repz
ror
jecxz
jmp
xchg
pop
dec
sbb
std
mov
leave
sub
add
push
xchg
inc
in
pop
dec
ret
dec
sub
adc
in
pop
loope
les
xlat
icebp
xor
rcr
sub
pop
and
xor
dec
jbe
xor
imul
push
cmp
shr
scas
fst
push
test
(bad)
cmps
xlat
es
mov
(bad)
je
les
lods
inc
ret
clc
gs
mov
sub
push
imul
pop
cmp
mov
pop
into
cmp
push
repz
xor
dec
pop
fimul
das
fist
dec
xchg
retf
jp
repz
dec
fild
jne
mov
or
repnz
repnz
std
lods
das
jle
(bad)
lea
out
cmps
mov
in
add
or
xor
neg
outs
cdq
imul
adc
jo
mov
ss
lods
movs
fs
push
adc
pop
mov
mov
mov
pop
inc
dec
in
lods
call
adc
xor
push
fcmovbe
fist
xchg
ror
imul
cmp
sbb
mov
mov
mov
cmp
add
mov
aaa
pop
lods
cmp
ret
xor
mov
lahf
jmp
xor
add
cmovp
pushf
dec
mov
push
inc
sub
mov
cmp
mov
out
cmps
lods
rol
fcmovu
xchg
lea
and
xor
(bad)
jno
dec
fisubr
adc
arpl
or
dec
pusha
cmc
xchg
pop
inc
xchg
stos
mov
loop
jle
cmc
dec
popa
adc
aas
add
loopne
mov
das
jp
test
fidivr
xchg
pop
jmp
iret
stc
out
fistp
mov
jmp
cmps
pop
sub
xor
mov
test
push
in
imul
mov
jbe
lds
das
mov
sub
adc
adc
add
pop
or
ret
xchg
jecxz
nop
loopne
xchg
int3
sbb
aam
push
pop
pop
iret
mov
pop
enter
jp
sar
outs
add
mov
movs
dec
pop
dec
pop
sub
out
pop
dec
inc
movs
pusha
jl
pop
pusha
xor
repnz
push
shl
adc
inc
loop
add
cld
sti
jnp
vsqrtsd
mov
mov
fnsave
out
jae
call
mov
int3
mov
ins
int
bound
inc
sar
mov
mov
mov
int3
mov
shl
xchg
ss
popf
adc
(bad)
retf
add
jl
imul
push
ds
mov
mov
scas
cmp
xchg
push
fsubr
sub
loopne
ins
sbb
ror
pushf
fsubp
ret
jge
imul
outs
stos
lahf
popa
stc
mov
out
fcomp
retf
pop
xlat
cwde
(bad)
mov
mov
mov
and
pop
aas
jle
dec
arpl
jp
push
mov
clc
imul
xchg
xchg
xor
push
(bad)
fisub
inc
ret
repz
ss
sti
retf
pop
add
sbb
sub
jb
jp
daa
sbb
pop
push
retf
adc
jmp
mov
inc
call
xchg
(bad)
xor
test
mov
call
sub
mov
jge
stc
xor
adc
es
stos
xor
add
mov
dec
cdq
pop
or
mov
ror
sub
popa
fs
xchg
pop
(bad)
shl
jno
sbb
push
je
and
mov
sbb
out
in
push
cdq
shr
push
jle
mov
add
fcom
push
add
lock
xchg
jl
movs
xchg
cdq
aaa
je
out
sub
into
mov
leave
push
(bad)
xchg
ins
jns
sub
ret
inc
outs
xchg
cli
dec
and
xchg
dec
and
push
dec
and
enter
jno
pusha
repz
adc
rcr
inc
dec
or
stc
cmp
fdiv
xchg
mov
fwait
inc
scas
ins
mov
or
sbb
mov
fsub
adc
popf
dec
stc
fild
mov
xchg
mov
stos
clc
push
dec
jo
(bad)
mov
dec
sbb
adc
ss
jae
dec
out
rcl
jns
mov
xor
sbb
clc
aam
js
(bad)
cwde
mov
sub
inc
and
aad
call
mov
jge
hlt
shl
(bad)
lock
nop
xchg
mov
jo
mov
mov
fisub
mov
in
fs
(bad)
mov
sti
jmp
out
xor
push
je
cld
fcom
pusha
test
ret
mov
shl
ret
mov
(bad)
jl
jb
adc
cmp
mov
pop
movs
scas
ins
sbb
jnp
std
inc
outs
add
outs
push
pop
push
cwde
xor
pop
lds
adc
rcl
mov
popf
sub
cmp
mov
leave
(bad)
mov
es
call
xlat
xchg
push
idiv
jmp
jg
shl
xchg
mov
mov
xchg
adc
mov
and
call
jle
out
push
mov
mov
mov
mov
cmp
addr16
movs
lods
mov
retf
lds
jb
aad
mov
daa
mov
xchg
xchg
aam
sbb
adc
inc
push
xchg
stos
out
aam
loope
mov
adc
or
leave
int
mov
scas
loope
and
and
mov
sti
call
adc
pop
jg
nop
bound
mov
stc
sti
ret
stc
mov
mov
(bad)
mov
or
jmp
hlt
test
out
inc
in
mov
xchg
xor
lods
in
repnz
in
xor
retf
into
and
stc
jmp
int3
adc
ins
fisttp
inc
pop
loope
cmps
mov
sub
inc
dec
pop
xor
jo
test
push
jmp
cmp
or
mov
lock
(bad)
or
add
lods
mov
xchg
out
xor
gs
mov
pop
outs
loop
mov
xchg
or
loopne
jne
xor
pusha
inc
outs
cmp
repnz
fs
dec
adc
mov
push
adc
rcl
sub
sbb
cmp
add
mov
dec
dec
sub
aad
loop
jg
push
push
iret
jecxz
mov
mov
sbb
xor
or
ret
out
sbb
dec
out
xchg
imul
add
mov
or
dec
pop
xchg
fnstcw
mov
je
rcl
in
dec
test
fnstsw
sub
into
ja
(bad)
(bad)
sbb
dec
dec
imul
out
sub
stos
dec
push
outs
jno
sar
rol
retf
jmp
repz
and
bound
ins
push
nop
(bad)
fcmovnbe
shr
movs
mov
fdivr
mov
js
mov
add
jmp
xor
test
fstp
and
mov
xchg
aaa
and
xchg
cmp
stc
popf
jp
fisub
and
sbb
ins
jle
mov
mov
adc
test
push
and
jecxz
(bad)
dec
(bad)
out
sub
retf
sub
in
rcr
imul
pop
ficom
movs
adc
in
popa
test
inc
jmp
push
cmp
int3
lods
adc
adc
add
shl
sahf
mov
lods
cmps
call
inc
cmps
sahf
sbb
inc
out
mov
cmps
adc
pushf
fs
jne
call
cli
outs
fbld
(bad)
fild
fisttp
adc
sahf
(bad)
aad
cmp
cmp
cmp
cmp
lods
test
xor
add
call
push
pop
adc
cmp
adc
arpl
rcr
jo
retf
mov
push
sub
jne
enter
not
mov
ds
or
pop
add
push
or
dec
inc
ins
mov
adc
add
cmp
icebp
retf
or
retf
test
mov
xchg
jecxz
fcomp
xor
mov
sub
clc
int3
pushf
push
in
das
je
inc
and
ds
jg
jmp
in
mov
pop
add
addr16
or
addr16
jecxz
mov
div
scas
call
mov
fst
ret
out
push
addr16
cs
jmp
mov
in
es
out
inc
push
or
jnp
jne
mov
fmul
stc
cmps
aaa
or
cwde
mov
or
mov
imul
nop
jp
psrld
inc
sbb
jg
add
xlat
popa
jb
sub
xchg
fild
mov
cld
in
test
push
mov
(bad)
push
call
shl
adc
ret
and
call
xchg
pop
aam
sbb
mov
add
and
repnz
out
popf
bt
and
mov
test
add
idiv
cmp
test
push
xchg
rol
enter
stos
xor
scas
jnp
pop
mov
inc
jg
mov
xchg
xchg
mov
mov
fnstcw
std
leave
(bad)
gs
imul
rol
dec
cld
iret
mov
cmp
mov
repnz
and
xchg
add
out
xor
fnstcw
xchg
lods
enter
adc
cmp
(bad)
mov
retf
ret
inc
xchg
or
xor
ss
xchg
aas
jns
sub
(bad)
aam
xor
ror
in
(bad)
daa
jge
push
sti
sahf
nop
je
push
test
call
mov
push
rol
(bad)
out
add
adc
sbb
mov
inc
out
hlt
dec
add
mov
xchg
push
jge
xchg
(bad)
sar
popf
mov
pop
fwait
and
cmp
xchg
sub
jno
and
and
xor
mov
mov
ins
pop
and
int
mov
inc
push
add
push
jnp
outs
push
test
push
popa
push
adc
xchg
or
ror
cmp
hlt
ja
pop
ror
xchg
and
add
jmp
cmp
aaa
lea
jp
fsub
mov
mov
xor
or
jecxz
pop
popf
push
test
push
sbb
dec
movs
ins
pop
sbb
dec
adc
dec
jb
jne
daa
ror
or
ins
add
push
cmp
jo
ins
or
sub
fidiv
xchg
movs
dec
adc
in
jae
bnd
sbb
into
popf
push
leave
jg
mov
in
xchg
stos
scas
sahf
sahf
add
pushf
sub
in
and
retf
mov
jae
pop
sbb
sbb
mov
test
add
push
shl
jecxz
cdq
ret
gs
sbb
add
sbb
movs
and
out
rep
cmp
(bad)
retf
xchg
into
int
add
lods
cli
test
mov
or
pop
(bad)
sub
adc
adc
sti
or
test
es
jp
cmc
inc
jmp
loop
inc
(bad)
sar
out
repnz
inc
arpl
int3
hlt
sub
icebp
xchg
jo
mov
mov
loope
out
and
xchg
pop
jnp
imul
sub
cmps
add
loop
popa
jl
iret
lds
out
mov
jbe
mov
mov
stc
inc
iret
inc
xchg
scas
pop
adc
mov
mov
push
inc
movs
xchg
pop
sub
mov
idiv
mov
mov
cli
sub
cli
mov
aad
mov
pop
shl
arpl
out
cmc
or
mov
xor
daa
push
or
pop
int
dec
retf
bound
jbe
pusha
mov
cmc
das
(bad)
and
push
pop
push
into
sub
push
or
mov
push
cld
cli
adc
pop
xchg
dec
cs
xor
sub
jns
out
jne
lahf
mov
or
dec
mov
clc
add
jmp
popa
in
mov
ret
enter
cld
sub
ret
or
or
mov
mov
pushf
clc
cmp
xlat
test
push
ja
push
out
hlt
cmps
mov
dec
jnp
jecxz
popf
rcl
mov
xchg
popa
mov
push
jp
cmp
in
cmps
lock
(bad)
push
inc
(bad)
mov
sbb
in
out
pop
out
jge
mov
jg
xor
sbb
fsubr
cmps
and
out
xchg
sub
fcomp
sti
mov
lock
jns
(bad)
popa
test
jne
xchg
test
sub
mov
mov
ins
inc
fisttp
pop
push
jns
pop
jnp
aas
int3
movs
aas
pop
fwait
cmps
div
imul
aas
in
dec
sub
and
jns
jg
iretw
pop
outs
push
jo
rol
les
das
scas
jmp
cmps
sbb
sbb
dec
lods
adc
ja
xchg
in
and
stos
imul
fisttp
mov
call
cmp
push
adc
test
fiadd
cdq
jmp
sub
or
sbb
ja
outs
mov
lahf
repz
daa
fmul
shr
add
out
jmp
jbe
ret
xchg
adc
retf
cmps
xchg
adc
mov
in
mov
ret
adc
push
push
loope
imul
xchg
cdq
out
add
jbe
es
jge
pushf
(bad)
jae
cmps
stc
pop
int
inc
stos
retf
stc
cli
loope
into
aam
iret
repz
mov
lods
mov
fistp
dec
sub
std
dec
lods
outs
enter
clc
jbe
test
jmp
imul
push
push
add
push
mov
mov
jno
adc
adc
pop
cwde
aad
(bad)
sbb
adc
frstor
jecxz
leave
std
dec
or
mov
stos
inc
mov
push
iret
cmp
and
cmp
xor
ins
or
xchg
sahf
outs
lahf
sub
pop
std
or
or
pop
sub
or
dec
mov
cmp
xchg
adc
in
dec
addr16
(bad)
enter
pop
ins
cmp
movs
inc
leave
pop
jae
jne
mov
imul
js
ret
xlat
lahf
call
mov
out
adc
outs
sbb
loope
scas
and
cmp
mov
popf
ja
lods
hlt
inc
fwait
out
or
jmp
(bad)
outs
mov
pop
xchg
test
sbb
(bad)
ja
and
jns
movd
jmp
jmp
popf
nop
ins
cmp
cmp
xchg
sbb
cwde
cmp
js
mov
pop
pop
enter
adc
xchg
xchg
lods
loope
pusha
inc
outs
pop
clc
cmp
inc
fisubr
jbe
cs
fsub
mov
dec
push
jge
xor
inc
mov
xor
int3
push
pop
mov
cmp
jecxz
push
mov
sbb
and
mov
sub
jg
stos
test
xlat
std
pop
push
fstp
ds
in
mov
fistp
aam
push
xchg
mov
sbb
add
push
mov
push
inc
stos
mov
cwde
pusha
xor
stc
imul
test
int3
stc
cli
ret
pusha
test
sub
retf
add
lds
cld
pop
xchg
ret
or
bound
inc
xchg
xor
icebp
addr16
ror
leave
inc
inc
test
fiadd
mov
adc
push
fild
call
repz
sbb
dec
das
cdq
jmp
fdiv
fwait
jmp
mov
sbb
sbb
push
mov
ret
movs
sub
jmp
or
jmp
popf
xchg
das
addr16
add
rol
mov
adc
retf
stc
loop
sub
bound
jnp
xchg
xchg
aaa
jns
and
inc
mov
xor
repz
call
cmp
add
addr16
cmp
popa
mov
(bad)
or
and
dec
lds
scas
cmps
pusha
cwde
mov
pop
sub
xchg
or
mov
ja
add
ss
mov
mov
xchg
fimul
out
lea
clc
lock
mov
lea
and
ins
pushf
xor
das
adc
adc
call
arpl
mov
call
pop
xor
fwait
sti
or
mov
sbb
stos
cwde
dec
fild
jmp
xchg
lahf
out
into
mov
xchg
arpl
sub
scas
cli
dec
ret
ins
pusha
scas
xchg
xchg
dec
in
mov
dec
add
shl
dec
rcr
dec
jne
cmp
push
ins
scas
fnstsw
add
mov
mov
popf
adc
jne
add
cmps
xor
dec
mov
cmp
or
jmp
dec
jg
pop
and
rol
ret
mov
jp
fcomp
rol
sbb
cmp
mov
add
in
mov
mul
and
inc
repnz
cmp
hlt
dec
mov
lods
or
mov
jmp
xor
cwde
sahf
sbb
inc
dec
pop
xchg
push
repnz
ins
addr16
pop
jg
push
cmp
cmps
int3
sub
sar
mov
(bad)
sbb
cmps
outs
sub
xchg
je
out
push
in
hlt
adc
bound
jmp
push
sub
retf
xor
mov
inc
add
cmp
test
test
cmp
adc
jae
cld
push
or
xor
xlat
mov
imul
mov
stc
fidiv
or
(bad)
or
ds
or
popf
aad
ja
std
rol
sbb
lea
(bad)
(bad)
lahf
lods
sti
xchg
add
ficomp
ins
(bad)
ins
in
movs
or
push
dec
sub
js
pop
sbb
pop
jb
jmp
adc
mov
and
xor
cmp
imul
mov
dec
or
xor
mov
push
jnp
shr
jmp
mov
bound
lods
test
jl
cdq
push
das
xchg
push
icebp
mov
pop
push
mov
push
(bad)
leave
and
push
(bad)
xchg
mov
aad
imul
rcr
ret
mov
rcr
mov
jo
cs
rcl
lods
ret
push
and
sbb
pop
pop
adc
dec
lock
pop
jae
jecxz
out
or
std
push
enter
call
inc
cdq
or
outs
out
dec
in
adc
loopne
cmp
(bad)
mov
mov
push
fs
fsubr
test
adc
pop
sbb
pop
mov
push
push
outs
dec
push
mov
movs
push
mov
inc
cmp
retf
dec
sbb
fsubr
cmp
imul
fnsave
aaa
mov
movs
dec
arpl
mov
shl
outs
fnstenv
pop
dec
adc
xor
fist
jno
xor
rcl
js
mov
pop
ror
jg
cmp
bound
and
pop
clc
mov
jmp
in
dec
(bad)
mov
inc
xlat
sub
cmps
jne
sbb
xor
stos
or
sbb
xchg
fiadd
je
jns
fstp
mov
adc
out
in
sub
out
es
mov
loop
add
or
jne
cs
inc
movs
sub
sub
gs
pop
loop
mov
push
push
sbb
fs
inc
hlt
pop
imul
adc
rcpps
pop
cdq
cmc
je
xchg
sub
push
fsub
xchg
in
nop
ja
test
out
out
add
pusha
and
psllq
cwde
pop
push
push
or
out
out
lds
sbb
cdq
xor
mov
into
jecxz
or
stos
pop
cmp
bound
push
sub
mov
fld
sbb
ss
ds
and
getsec
jp
(bad)
setae
cmp
pop
dec
inc
sub
jo
pop
push
(bad)
push
(bad)
jecxz
jmp
cmc
call
daa
stos
std
(bad)
(bad)
call
int3
and
adc
jbe
cmp
pop
pop
or
out
mov
(bad)
stos
dec
xor
and
xchg
or
adc
jns
sub
jle
(bad)
pop
cmp
cs
shl
jp
cs
push
(bad)
mov
pop
ins
fidivr
pop
idiv
xchg
femms
rcl
xor
sub
dec
mov
inc
aad
pop
pop
adc
cmp
popf
mov
inc
adc
cmp
inc
mov
popa
scas
mov
daa
mov
mov
and
and
and
or
and
mov
shl
mov
adc
lock
pusha
add
fidivr
mov
push
mov
dec
pop
push
mov
stos
jg
jne
push
fsubp
int
test
sbb
dec
aaa
jmp
outs
sbb
repz
addr16
shl
jp
imul
(bad)
(bad)
fwait
loop
inc
loope
loopne
push
dec
jne
not
lods
and
xor
dec
jle
retf
enter
add
adc
inc
xlat
shl
cmp
jmp
adc
jecxz
retf
jmp
adc
or
fst
or
popa
sbb
and
sbb
lea
mov
and
std
mov
xor
pusha
cmp
lods
add
pop
pop
sub
cmp
mov
test
fldcw
add
in
xor
in
mov
jp
dec
std
pop
pop
mov
lahf
cmc
add
mov
push
mov
inc
js
push
inc
out
xor
mov
(bad)
xchg
and
hlt
je
js
dec
xor
in
jno
mov
mov
into
mov
lds
test
add
pop
push
fisubr
hlt
in
mov
and
xchg
fadd
adc
int
jb
mov
sbb
les
dec
pop
syscall
dec
mov
mov
loop
test
pop
in
jmpw
or
imul
inc
test
ret
pop
and
cld
inc
cmp
jne
stc
xchg
and
pop
aaa
pop
cmp
push
icebp
and
ror
push
mov
push
mov
outs
les
ja
fwait
popf
adc
retf
outs
ss
push
vaddsd
dec
lods
pop
loop
jmp
sbb
clc
movs
jnp
dec
idiv
xor
cmp
cmp
sbb
cmp
mov
xlat
retf
and
lods
adc
lds
adc
out
dec
jecxz
stc
or
push
push
popa
inc
inc
jg
pop
mov
sbb
jecxz
lods
mov
mov
and
fisttp
push
sahf
mov
gs
repz
cli
mov
xor
sub
inc
add
fisttp
dec
inc
xchg
sbb
imul
call
pop
popa
int
mov
sub
test
mov
fwait
mov
arpl
and
movs
adc
mov
pushf
push
pop
xchg
add
mov
cmp
lods
sub
adc
out
cdq
sar
jl
addr16
lods
xchg
adc
dec
stos
cli
js
push
or
adc
sub
mov
imul
mov
jecxz
inc
out
or
dec
mov
rol
mov
fcomp
adc
or
sbb
stos
lods
loopne
fwait
in
add
fdiv
push
test
mov
nop
dec
jns
mov
cs
(bad)
test
xchg
cli
sbb
or
xchg
push
add
push
clc
and
ds
push
test
or
push
dec
or
jl
fcmovnbe
pop
mov
fs
mov
daa
dec
js
xchg
out
push
or
hlt
pop
cli
test
movs
adc
iret
xor
(bad)
cwde
outs
aam
dec
push
div
pop
or
fstp
stc
inc
pop
add
inc
xor
sar
clc
xchg
out
scas
ins
mov
adc
mov
push
out
mov
(bad)
ins
neg
adc
jle
add
pushf
mov
in
jb
jg
nop
sti
mov
je
jmp
push
dec
jmp
cwde
xchg
jnp
push
aas
sub
xchg
retf
dec
add
and
lods
mov
cmp
imul
dec
cmc
pop
int3
push
sbb
jecxz
popa
dec
mov
pop
sub
sti
push
pop
jmp
mov
or
mov
fst
test
sub
fld
std
xor
add
test
or
inc
scas
inc
psllw
xchg
add
fist
jns
xor
test
or
imul
push
lods
mov
xchg
sar
xor
js
mov
in
mov
pop
mov
mov
and
or
inc
xor
cmp
fisub
aaa
dec
unpcklps
stos
cmp
(bad)
out
pop
sti
aas
ds
adc
and
outs
adc
xor
dec
cmp
outs
test
cdq
dec
icebp
xchg
cwde
mov
sbb
fdivp
mov
pop
in
test
jns
xor
cmp
pusha
push
xchg
(bad)
sti
and
jo
cmc
add
aas
cwde
test
or
sbb
stc
add
and
inc
sub
mov
retf
jmp
fisttp
clc
sahf
pop
adc
clc
mov
jmp
xchg
hlt
retf
and
popa
int3
outs
mov
and
out
push
div
retf
dec
cmps
cmc
mov
and
pop
push
jmp
test
and
retf
popa
and
rcl
sub
xor
cli
cwde
(bad)
mov
(bad)
test
sub
adc
or
ret
outs
xor
xchg
push
xor
mov
jae
mov
and
push
les
int
mov
dec
dec
mov
xchg
pop
cmp
dec
(bad)
retf
mov
neg
cmp
cmp
inc
outs
add
mov
adc
pop
jecxz
or
fdivr
(bad)
pop
jle
aaa
aad
mov
lods
cs
(bad)
movs
lods
mov
pop
(bad)
mov
pop
or
outs
xor
jmp
(bad)
jae
pushf
lea
rcl
xor
xchg
retf
xchg
xchg
push
sub
or
lock
data16
out
fdivr
push
sti
cdq
hlt
popa
dec
mov
mov
xchg
outs
fistp
or
movs
cld
rol
xchg
scas
xor
jmp
mov
dec
outs
xchg
adc
jae
push
jp
sub
cmps
xchg
lds
dec
xchg
mov
es
push
call
jno
or
es
jecxz
push
frstor
xchg
inc
ja
popa
mov
mov
add
or
outs
test
pop
retf
and
xor
fldenv
sti
ror
push
xor
es
test
out
ss
sbb
cmc
das
inc
cli
test
fiadd
nop
call
pop
addr16
jns
lds
fs
lock
sti
add
sub
and
mov
xchg
(bad)
mov
fwait
inc
sub
add
fdivr
rcr
fst
mov
sub
jg
lds
in
invd
in
jnp
imul
es
js
xlat
cli
jp
xchg
scas
popf
push
jmp
and
aam
add
test
imul
sub
pop
popa
stos
mov
out
xor
clc
scas
inc
hlt
clc
cmp
gs
repnz
xor
mov
rcl
adc
push
add
and
cmp
sub
mov
out
push
cs
xchg
enter
fnstenv
in
pop
mov
call
(bad)
inc
sbb
mov
mov
pop
sahf
test
das
jge
retf
call
inc
lock
mov
fcmovbe
mov
xchg
ret
cmp
stos
call
test
(bad)
xchg
dec
pop
pop
or
sbb
sbb
dec
cmp
pop
dec
add
mov
and
sbb
mov
or
je
int
mov
mov
(bad)
mov
aaa
in
adc
(bad)
add
(bad)
test
inc
int
scas
enter
add
mov
mov
popa
push
add
xchg
pop
clc
js
inc
mov
xchg
jecxz
or
add
push
jne
loopne
into
dec
pop
popa
cmp
cli
retf
mov
and
sbb
xor
cli
push
xchg
imul
xlat
cld
mov
or
push
add
test
sub
add
sub
jne
pop
pop
outs
test
fist
ins
aam
xlat
xchg
mov
push
ret
and
mov
xor
jle
sbb
mov
xchg
mov
ret
pop
push
jb
and
mov
ins
arpl
ret
repnz
ds
mov
xor
jmp
jnp
outs
cmp
fdiv
dec
mov
aam
ja
cli
les
shr
out
rcl
mov
push
sbb
xchg
pop
sti
movs
or
pusha
mov
(bad)
sub
mov
cmps
(bad)
xor
dec
and
mov
and
aaa
imul
test
mov
pop
pop
jg
or
pop
xchg
test
mov
push
xchg
inc
jno
in
ja
add
(bad)
or
es
xchg
push
mov
dec
dec
fdiv
mov
xchg
iret
sbb
mov
mov
pushf
in
xor
sbb
mov
cmp
retf
mov
outs
push
mov
xor
out
in
xchg
push
cmps
loope
fadd
xchg
repz
retf
sub
fadd
call
fs
jmp
push
inc
sbb
sub
jns
jp
fst
push
xchg
and
out
retf
int3
jp
imul
xchg
lds
ror
pop
fisttp
or
inc
lock
js
in
pop
js
jmp
daa
jle
test
(bad)
jl
push
sbb
pop
jge
ficomp
dec
jmp
jle
pop
sar
inc
in
xchg
iret
sti
retf
stos
sar
data16
test
hlt
cmps
jmp
add
pop
adc
ds
cmp
pop
retf
adc
popw
loop
mov
or
int3
jnp
add
cmps
pop
je
jecxz
xor
(bad)
cmc
ins
xlat
xor
push
pop
jbe
and
jmp
mov
jnp
fild
fimul
mov
into
adc
cmp
in
mov
sub
and
jne
push
sbb
rol
push
mov
add
push
cli
call
arpl
out
jnp
jle
mov
jno
ja
pushf
scas
addr16
loop
and
mov
fidiv
stos
loop
ret
mov
dec
iret
lahf
xchg
dec
mov
mov
fcmovnu
(bad)
cmp
xor
mov
imul
std
lea
pusha
cld
push
popf
lods
js
sub
inc
ins
push
jp
in
xchg
call
sti
out
sub
mov
adc
adc
mov
jp
mov
cmp
adc
rol
push
xor
sbb
push
in
bound
xor
into
out
sbb
aas
ror
test
dec
and
mov
push
pop
outs
mov
cmp
loope
add
fldcw
movs
add
loope
xchg
and
xor
aam
sub
push
mov
inc
ror
je
cmp
xor
inc
(bad)
and
dec
pop
aam
cmps
xchg
test
pop
dec
outs
and
adc
bound
popf
out
mov
dec
dec
idiv
sbb
inc
mov
dec
shl
repz
jle
jle
push
out
and
lock
sbb
cmp
mov
mov
fiadd
mov
jg
lds
and
inc
push
xchg
sub
xchg
ss
mov
aam
push
pop
icebp
or
or
mov
stc
or
jmp
and
fstp
outs
ret
or
jnp
popf
adc
push
sahf
leave
loop
stc
arpl
test
retf
retf
pop
ins
retf
dec
and
mov
mov
push
test
jb
adc
aaa
loopne
das
bound
pop
gs
xchg
fbstp
imul
loopne
scas
test
rol
fwait
int3
in
(bad)
jmp
outs
xchg
and
xchg
mov
xchg
xor
inc
xchg
mov
jge
cs
pop
dec
sub
ficomp
(bad)
fadd
loope
sahf
xchg
add
rcr
and
mov
sti
cmp
cmp
xchg
inc
mov
ja
jg
xor
dec
popf
test
jns
or
jns
rcl
sahf
dec
add
imul
mov
push
pop
int
test
mov
(bad)
test
movs
inc
enter
pop
xor
or
sub
lea
pop
mov
push
pop
popa
mov
push
mov
out
push
mov
sbb
pop
jg
push
xchg
fadd
sbb
sbb
out
fisttp
nop
call
(bad)
in
cs
cmps
dec
fwait
xchg
inc
adc
mov
pop
hlt
pop
jmp
pop
gs
jecxz
dec
nop
loope
in
aas
jb
cmp
xor
and
or
cmc
xor
push
pop
mov
ret
jbe
pop
ret
pop
and
out
mov
xor
xchg
arpl
popa
sbb
push
out
jnp
mov
ficom
sbb
cld
sbb
scas
inc
mov
and
cmp
movs
imul
sbb
inc
data16
int3
lahf
test
mov
loopne
push
push
dec
push
in
jbe
int3
jno
cmps
nop
retf
mov
push
jae
adc
imul
cmp
pushf
mov
push
xor
cld
inc
cld
or
fdivr
sti
adc
retf
xchg
and
pop
hlt
xchg
sub
jle
inc
fisttp
xor
jnp
pop
cmps
enter
adc
push
lds
jle
(bad)
nop
mov
out
push
ins
call
inc
xchg
inc
(bad)
pop
test
jg
push
sub
retf
ss
xchg
mov
aas
out
pushf
mov
fild
daa
not
in
or
push
mov
xor
sbb
dec
cmp
stos
imul
scas
sbb
sub
test
inc
(bad)
pusha
fdivr
pushf
push
or
ins
xor
mov
dec
(bad)
mov
or
xchg
or
popa
inc
lea
scas
jle
mov
daa
pop
ror
js
pop
pop
std
mov
int
leave
push
das
test
fist
sar
out
ss
repz
cmp
push
fcom
pop
ins
out
loop
cmps
jle
push
xchg
mov
in
sub
gs
sbb
sbb
or
pop
std
add
arpl
push
dec
mov
pusha
ds
pop
push
lahf
cwde
mov
fidivr
out
mov
into
mov
and
sahf
mov
cmp
mov
test
and
xor
sub
clc
jmp
popf
inc
es
lea
jecxz
es
cmps
mov
add
sbb
jle
cmp
out
jbe
fcmovnu
ror
hlt
call
sub
fild
adc
loopne
mov
in
retf
fdivr
test
shl
jb
inc
lock
add
ror
push
cmc
cmps
push
ja
fisttp
or
es
mov
pop
sbb
mov
add
xor
loope
ins
jecxz
test
inc
pusha
mov
mov
sub
jno
daa
test
mov
cs
dec
xchg
mov
fldlg2
mov
scas
xor
int
data16
mov
xor
mov
or
mov
pop
sub
retf
stos
call
jecxz
movs
push
ror
fstp
push
fadd
scas
mov
xchg
icebp
push
stos
outs
push
cmp
stos
bound
fiadd
test
and
call
pop
jle
(bad)
or
mov
cli
jmp
pushw
jl
rcl
cdq
xchg
xchg
fcomip
loope
inc
shr
movs
and
cmovo
sar
inc
sub
and
lock
or
call
add
push
cmps
push
cmp
in
hlt
cwde
cmc
jle
loope
mov
push
(bad)
push
push
clc
fistp
pop
mov
or
jbe
call
out
stc
inc
pop
sbb
push
jl
sahf
pusha
pop
imul
xor
push
fisttp
xor
movs
jbe
jno
inc
cmp
xor
mov
cwde
jno
add
leave
fmul
pop
jmp
sub
ins
push
cmc
shl
mov
(bad)
mov
mov
jecxz
out
std
or
dec
mov
mov
mov
jp
fs
jnp
push
cmp
add
loop
addr16
and
nop
ins
xor
mov
mov
mov
hlt
shl
scas
outs
mov
mov
clc
ror
mov
loop
fcmovb
mov
adc
pusha
jae
cwde
test
dec
dec
mov
loop
sub
sahf
and
push
sub
in
pop
cmp
xchg
test
fstp
or
push
rol
jecxz
push
neg
xor
and
out
pop
push
pop
adc
inc
push
outs
ret
daa
shl
adc
ins
cmp
pop
mov
xchg
adc
jnp
adc
push
xchg
and
aas
mov
adc
push
mov
cmp
popf
inc
or
fsubr
dec
in
inc
or
sahf
std
sbb
mov
daa
push
call
das
xor
xchg
sbb
push
push
cmc
xchg
mov
stc
pusha
dec
aam
dec
test
dec
in
xor
jmp
push
add
and
or
arpl
cli
ja
mov
xor
aaa
xor
jecxz
sub
stos
scas
or
xchg
iret
imul
(bad)
push
aas
(bad)
outs
dec
jbe
lahf
dec
sub
sar
(bad)
pop
sub
dec
dec
inc
leave
std
mov
or
dec
lahf
and
mov
ret
cmps
mov
fs
push
stos
in
xor
test
xor
ror
jl
add
int3
add
mov
jns
test
retf
pop
scas
je
lods
sbb
pop
ja
inc
cmp
inc
bound
(bad)
dec
or
sbb
xor
in
(bad)
(bad)
mov
outs
movs
loope
fistp
mov
mov
push
push
xor
or
and
or
mov
out
mov
into
test
sahf
in
and
jle
outs
fcmovnbe
lahf
inc
xor
sbb
add
sbb
dec
and
sar
into
push
fimul
add
or
das
or
icebp
or
jle
cmp
mov
in
fst
fdivr
(bad)
mov
movs
scas
in
jle
or
cmp
push
fidivr
push
or
xchg
and
xor
pop
(bad)
mov
ins
xor
xor
mov
into
outs
mov
test
ja
in
add
popa
or
pop
mov
cmp
pop
fs
loopne
aad
les
pop
push
cwde
dec
pop
fucomp
out
cmp
outs
mov
pusha
jno
push
dec
or
sub
addr16
push
ins
imul
jno
mov
aam
ss
stos
cmp
call
adc
mov
mov
pop
pop
lods
mov
aaa
mov
xchg
adc
mov
xchg
and
test
das
data16
cmc
sub
das
and
dec
pop
cmp
call
scas
pop
adc
mov
ret
mov
icebp
popa
std
and
mov
int
std
pop
and
repnz
jbe
push
ror
mov
jl
(bad)
pop
loope
fs
jmp
dec
add
bound
or
movs
sbb
pop
inc
stc
pop
mov
jmp
jae
jge
rcl
and
xchg
cmp
pop
mov
sahf
mov
sub
pop
sub
out
and
or
imul
adc
jp
fisttp
test
xor
fiadd
adc
frstor
stc
and
mov
jmp
inc
aaa
mov
stos
repnz
fucomip
or
fadd
out
jo
js
or
inc
in
retw
loop
xchg
xchg
mov
push
jg
xor
mov
aas
mov
xchg
and
inc
cmp
ss
cmps
jg
xor
jae
retf
dec
cmp
loop
mov
push
ror
sub
mov
or
dec
jmp
xor
(bad)
adc
jle
push
call
ds
cmps
jg
ret
js
mov
js
or
pop
mov
mov
pusha
aaa
mov
jae
(bad)
cmp
daa
mov
or
imul
sub
push
dec
int3
mov
loope
add
cld
imul
jno
jmp
xchg
jnp
or
fs
push
rol
pop
std
fwait
inc
enter
and
xchg
sbb
jae
outs
(bad)
sbb
push
movs
(bad)
fdiv
lock
xor
pop
sbb
sbb
pop
test
sub
xchg
stc
pop
std
jne
loop
cmps
clc
fcom
lods
pop
push
in
adc
gs
mov
retf
xchg
adc
mov
in
jmp
or
dec
push
js
hlt
jns
bound
test
arpl
popf
sub
mov
daa
add
enter
push
es
sbb
inc
mov
pushf
nop
mov
xor
push
cwde
out
jo
mov
and
xchg
sub
lods
xchg
mov
mov
sti
cli
les
inc
pop
out
jle
bound
cs
or
xchg
scas
lock
pop
and
sahf
imul
sbb
and
push
xchg
inc
adc
daa
mov
(bad)
mov
inc
add
cmp
jno
stos
mov
mov
ror
(bad)
mov
adc
les
cmp
daa
cmp
mul
adc
fstp
mov
pop
jl
mov
pop
cmp
out
in
mov
mov
(bad)
fidiv
inc
outs
add
call
jmp
daa
xchg
cmp
dec
arpl
mov
xor
mov
cmp
pop
cmp
push
(bad)
inc
mov
xchg
dec
fstp
mov
imul
xor
inc
xchg
mov
xor
jp
xor
out
cmps
sbb
sbb
jmp
out
sbb
pop
stos
mov
mov
inc
xchg
test
fdiv
call
mov
stc
scas
pop
std
ds
xor
jecxz
dec
cmc
leave
push
pop
xchg
add
mov
loopne
sub
lahf
loope
frstor
pop
fidiv
test
mov
pushf
cmps
or
inc
fldcw
dec
sub
jmp
jmp
xchg
or
in
cmp
mov
test
mov
dec
stos
lahf
lods
xchg
dec
push
iret
nop
jb
push
retf
adc
ins
xor
repz
shl
stos
test
inc
std
inc
pop
inc
mov
daa
movs
dec
cwde
arpl
or
jle
shr
dec
popa
mov
sbb
add
jl
dec
repnz
xchg
xor
je
sub
ret
loope
jo
cli
adc
sbb
xor
(bad)
cmc
(bad)
sub
(bad)
mov
imul
mov
in
std
pusha
jb
stos
pop
pop
clc
or
pop
mov
test
jbe
out
cmps
stc
inc
jno
les
cmp
add
aad
or
cmp
push
mov
xor
sbb
inc
out
mov
call
xchg
pop
int
jge
xor
mov
(bad)
out
mov
pushf
outs
imul
ror
imul
imul
push
jp
mov
xor
mov
push
icebp
push
mov
and
es
(bad)
or
retf
cmp
mov
sbb
pop
out
pop
dec
in
int3
mov
sub
or
les
ins
lea
add
pop
or
pop
call
jae
jmp
push
dec
sub
in
adc
pop
inc
sbb
push
xor
xor
fdivr
iret
xchg
jae
shl
in
dec
nop
leave
loopne
out
jl
dec
scas
pop
push
jmp
add
mov
sub
fldcw
sbb
stc
push
inc
xor
push
js
ds
lods
jne
mov
mov
inc
(bad)
push
or
fidivr
aaa
sbb
or
adc
inc
iret
mov
and
add
aad
call
fwait
pop
repz
addr16
les
adc
adc
cld
fsubr
test
or
lds
cmp
cli
mov
into
adc
cs
or
pop
jle
sub
jae
mov
add
mov
bound
lea
das
scas
sbb
stc
sahf
jb
add
mov
std
ins
push
and
ins
shl
test
and
push
mov
sar
sbb
imul
fdivp
inc
xor
cmp
jl
mov
mov
xchg
pop
das
arpl
sahf
add
xor
mov
mov
movs
cli
dec
shl
mov
jnp
ja
pop
(bad)
cli
dec
das
clc
mov
and
sub
fmul
inc
and
mov
cdq
mov
push
mov
js
retf
fimul
cmp
mov
mov
scas
retf
xor
jle
cdq
mov
mov
in
leave
call
fidivr
cld
lea
pop
cmp
inc
iret
sahf
sub
inc
inc
and
ins
push
cmps
rcr
fiadd
xor
out
inc
int
fucomip
fs
sbb
(bad)
jle
outs
cs
push
retf
sbb
mov
out
or
int3
mov
jp
out
or
xchg
movs
and
mov
or
mov
les
and
call
test
pop
ret
hlt
cmc
ficom
dec
ret
aas
jmp
xlat
jmp
mov
adc
daa
data16
sub
mov
bound
sub
pusha
push
sub
mov
ja
mov
sub
retf
pop
adc
aad
into
sbb
div
jb
dec
xor
push
or
adc
movs
inc
fst
ret
mov
sub
push
clc
adc
and
xor
(bad)
mov
pop
lods
inc
or
mov
lea
mov
loope
add
or
jp
jns
and
retf
movs
cmp
push
in
add
or
mov
ds
ja
xchg
cmp
jmp
xchg
mov
mov
jl
xlat
jge
mov
jo
fldenv
cld
stc
sub
xor
mov
rol
in
fmul
mov
xor
mov
in
icebp
loop
mov
jb
push
hlt
dec
inc
inc
adc
dec
xlat
jg
fisubr
shl
pop
cmp
or
std
inc
sahf
test
jo
xor
popf
imul
jg
xor
mov
mov
pop
lods
adc
or
mov
aaa
mov
mov
shr
cmp
mov
je
xchg
(bad)
jp
repnz
xor
(bad)
aam
out
nop
adc
movs
inc
push
push
div
xor
std
xchg
das
stos
mov
stos
mov
(bad)
mov
leave
push
cmps
mul
jo
out
movs
sub
stos
lahf
loopne
xor
loop
push
sbb
inc
std
loope
daa
mov
pop
clc
xchg
mov
ss
hlt
in
push
leave
rcl
sub
cmp
call
aam
retf
inc
mov
push
enter
inc
ret
inc
adc
add
ins
aaa
mov
pop
dec
cmp
or
pop
pop
aad
sub
repz
cwde
in
inc
pop
inc
or
in
sbb
sahf
mov
ret
sbb
gs
mov
and
inc
push
xchg
mov
xlat
in
stos
and
push
push
imul
dec
xor
xor
add
push
test
fucomi
sub
jo
mov
je
ret
lahf
or
call
mov
enter
adc
or
lods
(bad)
stc
push
inc
pop
mov
dec
pop
cmp
in
mov
add
repnz
sbb
pop
dec
jmp
jns
or
push
add
aaa
xchg
jbe
loopne
inc
in
cmps
bound
test
push
mov
pop
mov
sub
adc
jge
push
pop
lea
loope
ror
aam
mov
adc
repz
retf
sub
loopne
aas
add
cld
inc
push
stos
fsubr
pop
repnz
arpl
add
aad
cli
mov
gs
xor
test
sbb
adc
sti
mov
aad
inc
out
mov
hlt
jae
not
test
push
clc
push
adc
sar
xchg
or
add
cli
jmp
xchg
in
sar
pop
add
adc
in
fs
or
rcl
ret
mov
retf
pop
or
mov
jne
pop
jp
sbb
ins
or
scas
jo
xchg
jg
cli
aam
call
jo
or
sbb
lahf
or
mov
sbb
int
div
mov
lahf
mov
popf
dec
and
pop
pop
cmc
fidiv
or
inc
push
bnd
sub
jae
popa
jb
addr16
push
sbb
fsub
es
or
fldenv
push
in
cld
push
(bad)
jns
pop
fild
xor
push
add
not
and
pop
push
in
inc
adc
cmc
test
(bad)
cli
sahf
jmp
push
repnz
out
ss
xchg
sub
adc
push
aaa
mov
xchg
cld
dec
inc
jmp
addr16
fdivrp
call
ror
cmc
push
(bad)
push
idiv
fistp
mov
sub
call
adc
rcr
pop
je
push
cmp
fxch
fstp
pop
clc
pop
xchg
jg
mov
(bad)
rol
fcomp
push
push
in
mov
aas
push
(bad)
nop
sbb
xchg
or
cli
sti
jo
in
int
not
push
icebp
jno
jecxz
out
fwait
mov
fiadd
sti
movs
dec
(bad)
adc
int3
mov
dec
mov
mov
fnstsw
dec
out
or
into
dec
push
retf
ret
or
fldcw
ss
cmp
out
in
push
sub
jle
or
push
mov
int
daa
or
scas
mov
stc
outs
fs
dec
clc
std
pop
push
retf
xchg
pop
or
pop
cdq
cmps
dec
cdq
inc
bound
sbb
test
jl
mov
hlt
xor
fsub
inc
sub
xchg
push
inc
jg
adc
mov
jmp
fldenv
pop
retf
pop
mov
mov
xchg
outs
mov
sub
shr
xor
mov
fs
nop
push
dec
add
test
outs
stos
push
xchg
imul
xor
stos
rol
repz
mov
test
in
pop
push
cli
ss
jbe
push
ins
or
repz
fsub
leave
adc
push
xor
pop
jnp
pop
sub
ss
mov
dec
in
jecxz
fimul
test
pop
sbb
jo
enter
mov
cmps
push
out
cs
adc
mov
xor
or
mov
adc
xchg
sbb
rcl
push
and
pop
icebp
in
mov
dec
mov
sahf
loop
mov
inc
mov
cmc
adc
and
cli
mov
aam
and
fisubr
xchg
lods
dec
fld
add
add
adc
mov
out
xor
(bad)
fdivr
pop
sahf
sbb
mov
aas
lods
or
inc
(bad)
das
dec
dec
push
mov
cmps
dec
js
jmp
addr16
pop
jg
sbb
pushf
stc
lea
daa
mov
sar
dec
push
ror
jb
fistp
sbb
push
out
movs
push
sub
xchg
(bad)
sbb
inc
cmp
and
inc
sub
mov
in
fmul
pop
fnstenv
add
ins
xchg
iret
scas
lods
pop
test
xor
jmp
inc
sub
jp
push
add
push
es
sti
bound
push
movs
cmp
inc
test
ret
fiadd
loop
inc
imul
inc
add
mov
add
jo
out
loop
out
out
and
imul
xor
call
mov
jg
push
or
clc
(bad)
adc
xchg
xor
push
pop
mov
movs
mov
popf
cmp
mov
cmp
xchg
add
frstor
adc
xor
call
lahf
jle
loop
and
cmp
mov
sbb
mov
xor
movs
in
ret
push
ror
aam
mov
stos
mov
test
cmp
xor
jg
sub
mov
sub
inc
(bad)
aam
cwde
into
popf
adc
xor
test
mov
cmps
jnp
aaa
out
in
js
inc
jle
aaa
push
fmul
push
es
and
adc
ins
repz
ret
arpl
repnz
add
jl
dec
or
ds
lds
jbe
fstp
xchg
pop
cmp
xacquire
cmp
inc
loop
xchg
add
mov
out
jmp
rol
sbb
cmp
and
mov
adc
fwait
jl
xor
mov
popf
xchg
dec
scas
push
jl
inc
add
frstor
xchg
and
and
popf
or
jae
(bad)
mov
fild
bnd
aam
jbe
pusha
mov
lods
shl
add
mov
xchg
mov
dec
mov
paddusb
ret
(bad)
(bad)
js
jne
push
mov
adc
icebp
mov
mov
stos
aaa
ins
addr16
push
push
(bad)
shl
and
(bad)
mov
std
push
rol
pusha
scas
adc
out
in
mov
inc
adc
icebp
aaa
in
inc
aam
call
dec
mov
movs
mov
popf
or
adc
xor
in
xor
jg
adc
sti
ret
je
and
inc
iret
dec
pop
inc
popf
pop
dec
mov
cmp
lds
(bad)
retf
in
aaa
pop
cs
js
mov
mov
pop
and
imul
push
mov
out
xchg
dec
cmp
push
dec
pop
out
lock
shr
fsubr
sbb
pop
pop
xor
cs
xor
lahf
or
push
je
fmul
dec
call
pop
mov
test
bound
and
mov
cli
ret
jns
mov
jl
xor
outs
push
xor
(bad)
xlat
ins
pop
shl
sbb
sub
fnsave
jmp
inc
(bad)
mov
ret
jns
rcl
iret
xchg
xor
sub
ret
gs
mov
fld1
ficom
cmps
dec
mov
add
push
or
test
cmc
push
cwde
and
lahf
adc
sar
fiadd
lds
xchg
mov
mov
clc
int3
fidivr
add
(bad)
and
cmp
lock
repz
inc
add
mov
test
inc
jb
les
mov
xchg
inc
cmp
(bad)
jo
mov
fcom
mov
inc
cmp
mov
or
push
sahf
lock
adc
bnd
fbstp
outs
mov
jae
mov
call
adc
mov
das
xchg
mov
arpl
int
dec
pop
push
push
int3
stos
pop
add
mov
push
push
inc
cmps
call
cdq
pop
ins
pop
and
es
mov
jmp
mov
in
push
leave
pop
cmp
ja
mov
frstor
fisttp
xchg
xchg
sub
push
sub
bound
dec
in
jnp
jae
ficom
jmp
jmp
ins
call
sti
xor
out
and
nop
or
imul
loop
mov
cmp
(bad)
jl
movs
loope
sub
leave
adc
add
ds
(bad)
ss
aad
cmovnp
ja
pop
mov
mov
icebp
out
xor
call
cmp
sub
(bad)
jmp
adc
into
jae
fist
ds
mov
pop
imul
(bad)
stos
test
push
cmp
and
out
sti
mov
in
test
imul
jl
imul
lds
test
xchg
mov
test
xchg
push
daa
fmul
dec
mov
sub
dec
sub
mov
imul
js
lahf
jns
(bad)
push
icebp
adc
sbb
or
dec
inc
jne
inc
dec
mov
aaa
inc
pop
loopne
(bad)
cdq
rcl
sub
stos
sbb
ins
into
mov
inc
lea
xor
ja
jb
enter
enter
popf
xchg
adc
sbb
sti
aaa
jb
shl
cmp
(bad)
les
push
call
lea
daa
test
or
loopne
cmps
xor
ret
jns
hlt
arpl
arpl
jmp
mov
das
add
dec
mov
in
mov
(bad)
mov
int
add
pushf
fidiv
sub
push
xchg
or
nop
push
test
mov
mov
bound
cli
xor
loop
mov
scas
mov
in
xor
adc
push
jne
cmp
inc
sub
leave
dec
add
cmps
enter
cwde
dec
(bad)
test
inc
(bad)
inc
je
aaa
adc
int
in
xchg
fdivr
jp
stos
sbb
cmps
js
mov
test
ins
sbb
das
xchg
cmp
dec
das
pop
int3
movs
mov
int
inc
add
jbe
lods
in
xchg
jl
sbb
sbb
jge
jge
mov
cs
jg
cmp
scas
fisubr
pop
das
mov
fs
movs
mov
push
lahf
mov
xchg
call
dec
lods
mov
sbb
imul
mov
mov
mov
gs
jmp
arpl
and
jmp
mov
cld
mov
or
jno
jle
es
or
add
test
pop
pop
int3
(bad)
pushf
call
scas
dec
repnz
arpl
cs
mov
xchg
int3
mov
mul
push
sub
pop
sahf
xor
xchg
shr
lock
sbb
data16
or
jle
mov
add
jp
mov
inc
outs
outs
fdiv
push
push
sub
adc
mov
xor
aam
xchg
push
push
pop
and
dec
(bad)
js
inc
das
daa
jb
push
and
mov
push
cmp
sub
mov
jmp
nop
mov
fiadd
sbb
arpl
xor
inc
mov
jno
outs
jbe
popa
xor
(bad)
cld
and
jg
je
neg
xchg
and
add
xchg
imul
jge
xor
dec
xor
aam
xor
add
scas
pop
pop
pushf
ins
cld
sub
and
adc
mov
push
repnz
pusha
mov
sbb
and
and
hlt
inc
push
cmp
loopne
dec
stos
loop
pop
inc
mov
mov
cmp
or
ins
inc
inc
leave
and
xchg
push
idiv
ret
loope
push
pop
mov
sub
xchg
stos
dec
fs
neg
mov
and
leave
cli
or
fisttp
and
addr16
jl
mov
jo
pop
push
add
or
scas
es
retf
call
cdq
ss
or
dec
sub
mov
lahf
sub
pop
sbb
out
sbb
sub
dec
sbb
imul
(bad)
sbb
jb
adc
test
jmp
ror
(bad)
mov
enter
out
inc
fld
dec
sub
daa
mov
pop
mov
jnp
adc
cwde
sub
inc
or
push
cmp
outs
and
jne
(bad)
xor
fimul
push
or
mov
jecxz
inc
mov
(bad)
je
cmovg
mov
mov
add
jne
mov
ds
stos
cmp
pop
inc
jmp
dec
mov
mov
ins
sub
pop
dec
loop
mov
ss
mov
xchg
adc
sti
ret
jb
adc
mov
pop
cdq
xchg
lods
pop
cmps
and
add
xchg
push
push
daa
jae
jmp
xor
mov
bound
fistp
add
mov
push
bnd
xor
xor
(bad)
push
sbb
jno
(bad)
cmp
retf
xchg
fiadd
out
mov
std
bound
iret
hlt
imul
jecxz
int
clc
rol
aam
or
mov
mov
dec
enter
or
in
dec
adc
adc
xor
(bad)
imul
sti
std
mov
xlat
and
adc
xchg
call
jns
aas
push
xchg
je
(bad)
shl
jg
add
add
daa
aas
cwde
mov
stc
xlat
mov
out
in
fsubr
or
cdq
das
inc
cmp
dec
jle
jbe
mov
mov
mov
inc
retf
jle
retf
sbb
xor
shr
mov
mov
daa
int
div
dec
mov
xor
movs
adc
xor
mov
scas
aad
(bad)
pop
adc
jnp
mov
daa
xlat
lahf
adc
jae
pop
mov
or
sbb
sub
ds
(bad)
not
jne
push
cmp
sbb
loop
pop
dec
sub
cmp
je
mov
sbb
mov
rol
leave
mov
cs
test
mov
mov
es
pop
rol
jge
add
lea
and
jb
jl
test
xlat
add
test
ret
stos
sub
popf
pop
in
pop
pop
mov
mov
cmp
fld
sbb
outs
fild
mov
lods
cs
jne
das
js
push
push
daa
fwait
jg
adc
aaa
inc
movs
inc
sbb
mov
adc
push
in
fcmovnbe
loopne
jns
xchg
shr
jl
fst
xor
lods
mov
cmp
inc
icebp
mov
pop
pop
repz
loop
cmp
dec
loope
add
aam
xlat
imul
mov
and
jg
cli
inc
xor
jge
xor
sbb
aas
xchg
arpl
cmp
push
or
mov
jecxz
xchg
dec
cld
pop
iret
jmp
pop
push
push
(bad)
retf
jns
push
dec
push
ds
cmp
xchg
test
or
scas
mov
jns
sub
loope
xchg
daa
(bad)
xchg
adc
test
popf
(bad)
ficom
ins
imul
movs
inc
popa
stos
sub
pop
sbb
jmp
into
push
int3
xor
pop
mov
jmp
je
add
push
sbb
outs
jb
out
mov
imul
xor
jno
xor
push
arpl
push
repz
aam
push
int3
test
in
(bad)
xor
cs
cld
or
adc
xor
sub
mov
stc
add
cs
loop
out
movs
hlt
add
in
mov
cmp
push
scas
movs
scas
movs
sbb
push
(bad)
inc
or
into
dec
push
stc
outs
and
je
retf
pop
adc
mov
push
(bad)
call
sbb
aam
in
xor
dec
and
call
push
mov
sub
aas
aam
fistp
jg
and
mov
cmp
cmp
pop
and
or
test
(bad)
pushf
test
or
xchg
(bad)
pop
mov
out
sbb
mov
jle
xor
stos
xlat
push
cmp
or
jg
out
cmps
aad
stc
call
cld
(bad)
retf
pop
fisub
jbe
mov
ins
push
(bad)
xchg
jae
ret
xchg
xchg
mov
xchg
ins
daa
push
fs
mov
sub
pop
loope
mov
jmp
popa
adc
pop
dec
adc
iret
cmp
in
dec
push
int
out
mov
sbb
fwait
(bad)
cmp
out
bound
xor
jle
lahf
rcl
call
or
push
movs
call
or
test
sar
shl
push
xlat
enter
push
test
jns
xchg
push
pop
jbe
(bad)
xor
vcvttsd2si
jmp
adc
or
mov
sub
push
mov
scas
mov
sbb
inc
and
and
cmp
sub
rcl
mov
mov
push
mov
pushf
push
push
dec
jo
pop
cmp
lds
cli
mov
ds
das
jecxz
xlat
push
in
bound
(bad)
idiv
cmp
jecxz
dec
retf
aad
inc
push
jae
push
jo
sbb
sar
aas
sbb
mov
and
mov
(bad)
jb
dec
pop
inc
in
stos
mov
xor
in
inc
repnz
in
jge
adc
into
je
sahf
test
xor
adc
pop
adc
lods
stos
cmps
loop
retf
cmp
push
and
das
mov
lea
mov
inc
pop
mov
mov
outs
lock
sub
mov
data16
jge
shl
fwait
pop
inc
je
inc
popf
fiadd
rcl
pop
mov
retfw
sub
addr16
mov
dec
js
dec
push
lock
mov
sbb
fist
sar
mov
mov
mov
sbb
bound
sbb
clc
inc
fstp
mov
ret
sbb
sub
lods
cmp
std
pop
movs
dec
mov
mov
in
fs
xor
jp
popf
sub
pop
scas
push
popa
nop
je
mov
int3
push
test
sti
inc
add
hlt
cmp
test
stos
mov
push
das
out
mov
enter
(bad)
mov
adc
dec
dec
imul
ret
clc
mov
dec
xchg
mov
lea
pop
test
aam
sahf
pop
shl
mov
mov
dec
xchg
mov
jae
push
dec
dec
push
stos
cmp
inc
std
iret
data16
dec
push
pop
pop
das
aaa
mov
aam
pop
push
ds
out
xor
imul
xor
into
mov
rcr
rol
push
add
shl
idiv
(bad)
ja
jle
add
mov
cmp
je
fwait
sti
dec
(bad)
xchg
push
daa
loopne
mov
push
iret
mov
xchg
in
popf
ds
or
scas
movs
sar
in
inc
xchg
xor
shl
popa
jb
es
lods
push
vpshufb
cwde
or
(bad)
jns
mov
push
fbld
mov
(bad)
lds
scas
add
les
xchg
add
jb
mov
into
xor
mov
out
push
(bad)
fs
push
cld
not
lds
and
mov
call
sub
jle
in
xchg
fwait
cmp
sahf
(bad)
and
or
imul
lock
mov
sub
adc
in
int
cmps
jp
out
aad
sbb
pop
mov
pop
cwde
inc
mov
int
lods
sar
sub
mov
and
mov
inc
add
sahf
mov
call
loop
pop
loop
aam
jns
ror
rcr
pop
inc
jmp
inc
push
mov
movs
adc
ds
hlt
xchg
in
sub
jmp
or
xchg
scas
xchg
adc
adc
lods
dec
ss
mov
ret
adc
popf
aas
xchg
fimul
cmp
bnd
xor
mov
mov
imul
(bad)
arpl
dec
addr16
or
and
pop
xor
inc
mov
xchg
pop
lea
cld
and
mov
aas
inc
push
lds
cmp
enter
popf
pusha
cmps
fstp
add
lock
push
pop
pop
pop
or
mov
inc
sub
loop
jnp
cs
sbb
xchg
xchg
popa
jmp
retf
cmp
jge
mov
mov
pop
jecxz
popa
repnz
inc
push
aam
aaa
mov
int3
inc
adc
xchg
xchg
repz
lock
sbb
hlt
adc
pop
ret
xor
call
jae
mov
sahf
jp
cmp
cmps
leave
loop
jb
xlat
add
call
push
mov
enter
jnp
pop
pcmpeqw
push
test
adc
push
out
(bad)
adc
js
mov
mov
das
sar
dec
shl
loop
aad
mov
test
or
dec
push
scas
jmp
retf
in
mov
int
pushf
pop
int
jge
pop
and
fidiv
rcl
jle
mov
xlat
into
xchg
jnp
sub
xchg
xor
dec
xchg
ja
call
test
mov
and
jnp
out
sbb
jnp
mov
fimul
stos
in
ss
mov
adc
ja
ins
sbb
mov
daa
lahf
xchg
or
and
imul
aad
cdq
popf
or
mov
retf
aam
icebp
push
mov
mov
dec
stos
jge
cld
jge
dec
movs
and
fdivr
retf
in
mov
push
mov
xchg
rol
push
dec
jmp
mov
sbb
out
aam
mov
mov
and
mov
mov
and
ror
fnsave
arpl
add
mov
mov
cmp
imul
leave
push
cmps
jp
outs
retf
xchg
(bad)
xchg
gs
add
xor
fisub
scas
in
jne
neg
mov
xchg
loop
mov
dec
out
call
outs
add
xor
jmp
fs
and
dec
xchg
push
push
push
rcl
scas
outs
xor
cmp
aad
test
aas
rcr
addr16
mov
addr16
adc
out
push
(bad)
repnz
mov
cmps
add
mov
int
dec
sub
adc
dec
mov
rol
sub
fiadd
xlat
mov
jno
pop
mov
push
inc
in
xchg
sub
aad
add
cwde
leave
inc
sar
add
mov
stos
gs
loopne
test
inc
out
addr16
jg
cmp
shl
add
enter
xlat
or
add
inc
jp
rcl
repz
xor
mov
int3
mov
sub
(bad)
pop
ins
jecxz
push
mov
mov
adc
jg
test
rol
enter
out
mov
push
add
pusha
out
loope
and
inc
gs
outs
loope
fstp
rcl
sub
cmp
mov
pop
mov
dec
stc
cmp
fadd
repz
daa
(bad)
jne
or
pop
into
xor
scas
or
pusha
stos
mov
(bad)
dec
loopne
xor
ds
shl
icebp
and
pop
lods
ret
add
and
pop
gs
push
cmc
and
adc
mov
clc
and
test
pop
or
mov
pop
xchg
call
(bad)
mov
or
fld
cmp
mov
aas
jmp
pop
xor
cmp
sub
(bad)
rcl
adc
jl
sahf
jno
test
push
test
dec
int
dec
inc
inc
addr16
mov
stos
dec
sub
xor
fld
out
or
jmp
push
loope
jmp
add
adc
or
inc
es
cmp
lods
push
or
test
popf
pushf
sub
sti
lahf
repz
sub
jnp
pop
mov
ds
loop
test
inc
daa
retf
(bad)
xchg
jl
add
xchg
mov
in
cwde
add
das
shl
sbb
mov
fsub
sub
daa
mov
movs
push
add
pop
out
shl
addr16
icebp
pop
out
xchg
mov
in
shr
aas
cmp
pop
das
fwait
movs
sub
ss
(bad)
int
icebp
out
clc
xchg
mov
inc
sar
sbb
or
xor
std
xlat
out
sub
aad
inc
stos
pop
cdq
loope
out
pushf
xchg
push
jbe
pop
sti
iret
xchg
mov
mov
jge
cmc
dec
popf
sbb
mov
mov
hlt
cli
xchg
cdq
sbb
mov
and
jecxz
into
in
enter
cld
fldlg2
gs
ss
pop
mov
test
(bad)
push
loop
jae
pop
ja
repz
in
test
into
mov
or
mov
and
loop
mov
mov
and
sbb
add
add
pop
out
and
dec
jns
cmc
pop
in
jnp
dec
fcomp
sub
jl
sbb
das
inc
(bad)
cli
out
cmp
aas
and
pop
push
int3
pop
pop
dec
sbb
inc
or
jmp
jb
cmp
adc
adc
add
or
add
js
imul
std
xor
pop
repnz
stos
xor
movs
fisubr
xchg
clc
cmp
std
and
push
jecxz
into
and
push
jb
add
arpl
and
jno
jb
or
shr
xchg
mov
dec
fwait
jne
aam
lods
test
daa
lahf
jae
dec
retf
pop
popf
push
push
ja
sahf
jmp
dec
push
sti
mov
pop
add
xchg
mov
lea
mov
mov
mov
xchg
inc
or
dec
(bad)
in
fbstp
and
(bad)
rol
(bad)
cmp
inc
popfw
mov
pop
cdq
je
pop
cdq
dec
push
sbb
push
cmps
fwait
sbb
mov
int3
xchg
mov
xor
xor
inc
out
push
pop
jo
call
push
mov
clc
lea
add
or
push
or
bound
add
or
fbld
test
fstp
ror
div
jbe
pop
xlat
pop
mov
je
cmc
inc
out
mov
out
retf
jmp
hlt
pop
repz
pushf
add
fldcw
cmp
lods
retf
push
jge
daa
out
dec
lock
out
arpl
xor
cli
loopne
mov
mov
jae
inc
push
jnp
enter
mov
add
inc
test
scas
sub
cwde
shl
iret
push
outs
fnsave
mov
push
sub
mov
clc
retf
mov
(bad)
adc
jmp
mov
out
adc
sbb
jae
cld
rol
(bad)
gs
mov
dec
dec
push
test
hlt
js
sbb
fwait
cmps
sbb
test
inc
cmps
in
cmp
and
sbb
out
mov
(bad)
mov
pusha
lahf
mov
mov
enter
test
int
add
loop
sbb
add
jmp
repnz
les
add
xor
aaa
inc
jle
pop
mov
es
sbb
xor
fnstcw
rcl
push
fdiv
in
push
js
push
je
pop
movs
lods
jb
or
dec
daa
mov
and
cmc
xor
xchg
mov
arpl
(bad)
arpl
ins
xor
push
clc
xor
jb
sub
and
jg
shl
push
ror
test
aas
std
push
sub
jge
out
ret
out
xchg
xor
inc
fwait
jb
dec
call
in
xchg
sar
imul
sub
push
cmp
push
jle
adc
out
cmp
mov
jb
add
dec
mov
or
xchg
into
pop
mov
sbb
fs
lods
mov
mov
aad
hlt
or
into
inc
rcr
mov
mov
inc
and
mov
mov
ds
pop
ficom
jno
jno
cmp
jle
retf
stos
ins
sub
add
ror
aad
cmp
adc
fist
ffreep
cs
daa
mov
sub
add
add
nop
sbb
lahf
xor
and
and
xchg
mov
bound
push
pop
pop
gs
push
pop
sub
mov
mov
xor
inc
pop
inc
repnz
sub
mov
mov
aad
cmovo
inc
sahf
pushf
xor
inc
pop
dec
mov
repz
test
rcl
dec
add
cmp
push
cli
outs
dec
jns
jns
xchg
xchg
dec
dec
out
jb
mov
sbb
push
push
jmp
xchg
enter
in
mov
mov
pop
cdq
arpl
cmp
pop
je
jae
ret
(bad)
fidivr
into
std
int
xor
inc
push
push
mov
call
out
int3
push
dec
ret
(bad)
adc
lock
out
mov
fild
cmps
mov
aad
sub
psrlq
xlat
inc
ins
pushf
clc
fild
out
jmp
or
xor
outs
mov
and
dec
mov
adc
jmp
pop
stos
xchg
scas
je
cmp
dec
outs
xrelease
jnp
movs
and
inc
stos
hlt
loope
stos
push
sbb
ret
test
cmps
push
fsub
(bad)
fcomp
std
and
dec
dec
pop
mov
mov
clc
sbb
sub
mul
cmp
dec
imul
pop
push
push
dec
stos
in
rcl
jge
pop
sbb
and
sub
aas
icebp
js
cs
out
jns
dec
punpckhdq
pop
cmps
pop
shl
test
cmc
push
retf
or
pop
mov
aam
movs
(bad)
arpl
pop
cdq
adc
cli
sub
adc
push
push
add
mov
xchg
loop
call
mov
xor
push
push
iret
xor
mov
adc
bound
pop
sbb
repnz
sub
out
fiadd
sub
in
loope
mov
nop
mov
mov
jns
scas
es
fst
sbb
pop
fcom
outs
or
aaa
mov
je
ds
sub
mov
mov
sub
sbb
cmp
mov
mov
arpl
cmc
mov
jge
add
enter
push
push
js
push
inc
fld
push
in
or
and
pop
fmul
cmp
mov
lock
stos
mov
push
aas
(bad)
or
lahf
cs
mov
mov
popa
pop
jmp
jge
stos
enter
movs
add
das
add
inc
dec
push
fcomp
arpl
add
pop
sbb
jnp
pusha
cmps
leave
xlat
jge
fwait
lods
or
mov
or
pop
stos
cmp
add
pop
cmps
lods
jns
or
dec
sahf
xchg
ret
addr16
out
adc
stos
mov
fcomip
loopne
sub
add
push
(bad)
test
push
mov
daa
jno
repnz
jnp
push
fld
adc
xchg
push
mov
(bad)
leave
cmp
dec
mov
mov
push
mov
push
mov
sub
stos
xchg
jle
pop
stos
add
pop
popf
cmc
inc
sbb
ins
mov
lock
and
mov
pop
shl
push
repz
js
(bad)
test
repnz
xchg
add
jmp
mov
cli
inc
pop
adc
inc
cmp
pop
mov
lock
jbe
fs
or
add
into
mov
xor
dec
popa
cmps
repnz
ss
dec
dec
jl
fldcw
pushf
and
in
outs
inc
ja
add
in
lea
(bad)
xchg
movs
cdq
mov
xchg
sub
pop
js
shl
push
add
fs
dec
jp
xchg
out
push
daa
test
cmps
mov
movs
js
ds
sahf
fisubr
xlat
ds
rol
xor
or
lods
sbb
sar
ret
jno
pushf
aad
mov
push
add
jo
inc
xor
in
add
push
pushf
sbb
mov
fisub
test
and
xchg
bound
jns
addr16
sub
clc
mov
aam
mov
test
scas
lods
xor
and
stos
sub
rcl
push
or
dec
push
fdiv
xchg
dec
aaa
sub
jae
popf
xchg
leave
ja
dec
mov
adc
mov
cmps
xchg
repnz
inc
(bad)
stc
enter
xor
add
mov
push
sbb
mov
fcom
push
out
iret
push
push
inc
mov
adc
inc
mov
int3
mov
or
out
sbb
idiv
push
lock
mov
jb
repnz
adc
cmp
das
cmp
out
mov
fwait
addr16
pop
push
fidiv
inc
inc
jle
jecxz
retf
fild
mov
pop
jns
cdq
(bad)
icebp
dec
add
das
repz
fs
cld
adc
pop
xchg
cmps
inc
dec
test
outs
addr16
arpl
stos
sub
cmp
dec
and
push
out
mov
push
cmp
mov
mov
les
fisub
addr16
pop
scas
xchg
out
push
gs
das
shufps
inc
sub
fwait
sbb
mov
mov
push
sbb
dec
jg
shl
movs
retf
jp
fcomip
lahf
fdivp
jecxz
and
jle
dec
add
ror
out
jle
(bad)
(bad)
xchg
ins
pusha
fadd
add
mov
int
and
out
push
shl
not
loopne
cmc
and
jecxz
cdq
std
rol
xchg
ret
clc
hlt
cld
cdq
dec
inc
fcomp
dec
jmp
daa
inc
pop
scas
xor
es
xor
jle
dec
pop
imul
(bad)
xchg
mov
dec
iret
ret
(bad)
loope
add
popf
fldenv
gs
test
test
mov
je
leave
neg
push
sti
mov
es
stc
adc
rcl
neg
add
mov
idiv
out
cmp
dec
out
sbb
add
addr16
ret
loopne
lods
enter
dec
lahf
or
push
fistp
mov
icebp
xor
mov
in
mov
loop
or
cld
gs
sub
inc
cdq
in
ss
inc
sbb
popa
push
std
stos
(bad)
mov
ss
inc
fdiv
movs
in
es
out
push
jno
jmp
push
ja
pop
lahf
sbb
adc
xchg
add
sub
(bad)
outs
mov
xor
(bad)
sub
ds
es
cmp
or
add
movs
or
mov
push
sub
jp
adc
ins
or
add
or
cmc
mov
mov
int
mov
fidiv
(bad)
retf
jecxz
or
jle
cli
in
push
pop
stos
mov
pop
jne
mov
xchg
in
inc
xor
(bad)
adc
inc
loopne
lock
mov
fistp
xor
fidiv
icebp
or
or
loopne
pop
mov
pusha
sub
mov
push
jmp
cs
pusha
int3
arpl
imul
jp
into
xchg
ficom
push
sbb
aaa
push
pop
jp
iret
cmp
call
adc
pop
(bad)
fwait
inc
scas
or
movs
aaa
xchg
xchg
cmp
ja
cs
mov
aam
call
fild
fisub
push
inc
lahf
fs
das
adc
rol
pop
mov
popf
adc
sub
mov
push
push
dec
push
popf
out
jmp
test
addr16
das
jb
push
push
xchg
rol
and
adc
add
mov
clc
and
js
sub
cmps
iret
inc
lods
test
sahf
gs
cmp
mov
add
scas
fadd
jle
cmc
adc
fwait
jne
push
lock
and
sbb
cmp
inc
ror
fdiv
mul
adc
sbb
mov
or
cmps
sub
or
sbb
push
and
sahf
adc
inc
ja
or
leave
cmps
int3
lahf
out
pop
and
and
fdivp
out
sub
cmp
fs
mov
xor
imul
out
cs
call
lock
push
or
stc
jp
xchg
std
out
les
mov
sti
mov
(bad)
mov
sub
test
adc
xchg
ja
mov
inc
xchg
dec
sar
xchg
lods
ins
jmp
aad
jg
adc
iret
jmp
pop
les
aam
xchg
inc
mov
fild
jmp
pop
mov
push
mov
lods
(bad)
jo
xchg
sbb
jecxz
and
push
mov
add
js
and
jno
movs
cli
cmp
jns
leave
imul
push
mov
ret
nop
rcl
shl
jle
xchg
cmp
div
cli
mov
add
jecxz
xchg
int3
cmp
mov
pop
inc
pop
add
bound
push
jge
inc
frstor
es
(bad)
popf
jmp
push
cmp
les
xchg
loop
xchg
cmp
inc
out
mov
hlt
scas
jbe
loop
ret
fld
and
push
jbe
xchg
leave
mov
test
mov
daa
jnp
mul
pop
mov
or
retf
and
aad
cmp
sbb
das
loop
mov
fbld
mov
in
xor
into
outs
leave
cmp
(bad)
clc
mov
xchg
inc
mov
push
aas
inc
jmp
lds
mov
dec
xchg
outs
mov
inc
xor
jl
xchg
add
enter
outs
sbb
xor
jbe
xor
mov
(bad)
cs
mov
push
or
shl
mov
cld
not
(bad)
(bad)
stos
loop
mov
setp
mov
(bad)
js
inc
aas
cmp
ss
js
adc
gs
icebp
in
mov
cmp
mov
fsub
xor
cmp
out
mov
and
out
and
gs
dec
ins
push
sti
stos
inc
adc
and
retf
scas
mov
pop
and
and
pop
pop
jns
aas
cli
sub
fild
jp
(bad)
pop
(bad)
mov
jmp
into
bound
mov
mov
jl
fs
and
test
xor
cmps
test
pop
or
adc
test
and
aas
pop
shl
(bad)
gs
sbb
sub
or
mov
pop
pop
mov
add
out
stc
movs
adc
and
mov
aaa
and
add
mov
mov
cmps
lds
mov
xchg
push
add
daa
push
imul
push
lods
xlat
or
out
mov
xor
or
loope
in
inc
dec
stos
mov
inc
imul
stos
or
add
pusha
inc
sub
mov
lods
xchg
mov
mov
mov
ins
and
xor
xchg
mov
push
mov
xor
and
mov
in
mov
dec
gs
ror
into
ja
pop
sub
pop
sbb
push
js
dec
xchg
rcr
int3
stc
(bad)
mov
shl
fnstcw
in
pop
cmp
jmp
jae
test
js
add
inc
cmp
pop
gs
jno
mov
add
jb
push
xchg
inc
pop
jl
les
adc
sbb
jle
xor
push
xchg
int3
mov
or
push
imul
in
(bad)
out
(bad)
push
(bad)
idiv
test
jmp
sbb
std
das
push
test
mov
fwait
ss
push
dec
outs
pop
mov
iret
pop
sbb
dec
lea
pop
adc
(bad)
neg
pop
stos
adc
cmc
mov
push
cmp
xchg
les
push
aaa
fnstcw
std
or
cmc
mov
clc
in
out
repnz
das
cmp
push
test
mov
pop
add
div
add
icebp
xchg
mov
mov
cmp
es
xchg
push
test
in
inc
es
jle
sbb
rol
cmp
(bad)
mov
ins
jnp
inc
sbb
or
fstp
jmp
jmp
push
aad
push
sub
jbe
cmp
(bad)
and
and
fld
push
stos
fcmovbe
jmp
or
ja
int3
outs
sbb
push
cdq
sbb
sub
les
inc
push
push
fwait
test
lods
mov
pusha
add
(bad)
cmp
es
cld
jl
fdivr
jge
(bad)
(bad)
out
jmp
add
in
mov
ret
clc
inc
leave
pop
pop
inc
dec
adc
stc
push
push
push
lds
icebp
aas
shl
mov
into
cli
scas
inc
mov
cmps
inc
stc
mov
xor
daa
or
xor
(bad)
push
into
xchg
push
sbb
mov
aad
icebp
dec
ins
xor
in
cwde
sbb
mov
fild
dec
pop
jg
dec
or
cmp
cmp
inc
sti
hlt
pop
fidiv
jle
cmps
in
xchg
(bad)
add
lods
push
imul
and
aaa
inc
jmp
retf
xor
mov
cwde
jecxz
(bad)
cmp
aam
test
adc
outs
(bad)
xchg
aas
hlt
adc
(bad)
stos
mov
inc
jmp
call
fcom
push
mov
dec
cwde
dec
loopne
inc
pop
push
mov
inc
xlat
punpcklbw
xor
int
(bad)
stos
movs
mov
jbe
sahf
retf
call
adc
and
dec
and
cwde
gs
xchg
mov
test
les
mov
xor
es
arpl
shl
jno
or
xchg
xchg
pop
je
sahf
adc
pop
jmp
sbb
pop
(bad)
cli
out
mov
enter
mov
call
std
mov
dec
cmp
mov
gs
rol
call
sub
pop
rcr
push
inc
test
retf
(bad)
fmul
add
aaa
repnz
mov
int
cmp
hlt
repnz
rcr
sbb
pop
pop
shr
jecxz
sbb
loop
cmp
mov
cmp
out
or
popf
mov
jbe
push
rcr
arpl
inc
repnz
push
mov
lods
fistp
pop
scas
retf
les
jbe
add
pop
xor
ret
and
les
int3
test
adc
in
cmps
push
int
mov
outs
pusha
das
(bad)
push
repnz
xor
mov
fistp
push
fdivr
fsubr
aam
sbb
mov
das
out
loope
inc
pop
mov
in
mov
xchg
call
jecxz
adc
into
imul
push
pop
in
sub
lods
ror
arpl
jge
add
jle
leave
cmp
je
push
bound
(bad)
push
pop
mov
mul
cdq
cmp
jmp
dec
xor
ss
shl
out
mov
mov
gs
test
aas
aam
mov
std
xor
call
dec
dec
das
jnp
jns
mov
mov
mov
mov
pushf
jg
adc
mov
xchg
pusha
push
jge
and
retf
outs
data16
sar
jns
lods
in
mov
ret
loopne
adc
jb
jle
push
adc
adc
ret
hlt
xchg
stos
jmp
outs
sbb
ror
arpl
cli
xor
in
lock
inc
jno
push
inc
pop
aas
(bad)
or
fsubp
loop
mov
fsubp
fdiv
dec
movs
xchg
cmp
jne
xchg
in
sar
addr16
jbe
mov
outs
xlat
daa
addr16
shl
mov
xor
aas
pop
fisubr
jge
lock
inc
xor
dec
cmp
mov
and
ror
sbb
icebp
inc
je
test
cld
xlat
mov
(bad)
fwait
lods
cld
add
aam
popf
repz
std
and
in
cmc
aaa
leave
test
loopne
push
repz
inc
add
xchg
fld
in
xchg
mov
(bad)
int3
and
jmp
stos
cs
adc
push
xchg
ret
cmp
shl
push
inc
pusha
and
scas
jle
pop
popa
add
int
xchg
pop
leave
and
or
push
mov
fdivr
inc
push
sbb
and
cmp
mov
jo
and
in
xchg
sahf
or
or
adc
nop
clc
cmp
jmp
call
pop
cwde
fisubr
retf
mov
hlt
xor
push
adc
dec
nop
xchg
aas
loope
mov
mov
adc
scas
sti
xchg
inc
pushf
add
sub
or
into
test
pop
std
sbb
cmc
adc
cwde
xchg
mov
pusha
cmps
inc
lds
cmp
sub
mov
int3
lahf
pcmpgtw
test
jno
out
inc
jmp
add
add
jne
call
or
mov
push
jnp
scas
jmp
sbb
movs
push
jbe
xlat
mov
mov
int
enter
sub
dec
arpl
sar
or
push
leave
add
lock
xchg
xchg
push
push
retf
sar
add
ss
push
add
clc
adc
push
pusha
shr
and
shl
or
mov
cmps
pop
sbb
(bad)
dec
mov
mov
popa
and
adc
sub
mov
in
mov
movs
cmp
xchg
jns
pop
cmp
mov
int3
jb
mov
rcl
jne
loop
movs
stos
retf
enter
out
pop
int
pop
test
push
push
and
pusha
dec
rcr
mov
adc
mov
in
out
out
xlat
cld
(bad)
les
mov
jo
cmp
inc
mov
jno
dec
js
in
in
fist
jnp
ret
mov
adc
mov
xor
sbb
inc
dec
add
aad
inc
cmp
cmps
in
(bad)
imul
sbb
je
es
in
(bad)
mov
mov
sahf
sbb
add
push
dec
cld
scas
ss
pop
sub
aam
shr
pop
cmp
popf
jne
add
rol
sbb
mov
neg
pop
lock
sub
xor
pop
cli
out
aaa
aam
repz
enter
into
or
push
add
mov
(bad)
iret
xlat
jle
int3
xchg
mov
cdq
mov
pop
add
idiv
push
gs
cli
lds
dec
push
fisub
jno
popa
(bad)
iret
in
dec
fcom
jns
test
call
ja
stos
js
call
inc
adc
mov
pop
icebp
or
dec
add
ret
xchg
sbb
inc
int3
sbb
xor
inc
add
cmp
(bad)
stos
jmp
pop
cmps
jns
jb
je
add
dec
inc
dec
lds
cmp
in
xor
push
dec
push
sbb
xor
cs
in
pop
test
xchg
cdq
mov
mov
mov
cs
js
jb
xor
enter
loope
jecxz
mov
mov
jl
pushf
popa
nop
ret
les
mov
jmp
in
imul
xchg
loope
or
ror
inc
mov
dec
shl
jmp
cdq
xchg
test
lock
fisttp
add
(bad)
mov
xor
arpl
mov
scas
mov
outs
xchg
stos
jl
mov
jmp
adc
sub
iret
mov
inc
mov
das
test
add
aad
test
out
ins
neg
shl
xchg
jle
add
xchg
jbe
jl
xor
movs
fnsave
dec
fwait
mov
and
dec
leave
inc
cmps
inc
inc
cmc
or
mov
or
repz
pop
mov
fidivr
sub
push
adc
clc
xchg
int3
mov
nop
mov
nop
mov
ret
xchg
push
inc
lds
pusha
or
mov
inc
cmp
push
or
push
inc
fwait
and
sub
retf
jae
(bad)
dec
nop
rcr
shr
adc
cmp
push
xor
inc
fbstp
addr16
out
int3
cmps
xchg
push
jo
retf
jmp
js
(bad)
sub
(bad)
test
(bad)
pop
sar
shr
or
in
into
and
shr
arpl
cmc
xchg
addr16
or
xor
jno
(bad)
jmp
jmp
and
push
lea
jl
icebp
push
fidiv
fst
and
movs
jmp
push
cmp
dec
inc
jnp
in
cdq
sbb
lods
fidiv
push
sti
sub
mov
in
sub
xchg
sbb
or
je
sti
fist
call
out
scas
mov
dec
inc
dec
jecxz
xor
mov
xchg
xor
pop
jae
dec
std
sub
js
mov
sub
test
inc
leave
stos
sub
mov
mov
push
fadd
push
or
cmp
inc
fdiv
or
push
push
fsub
cmp
and
stc
jl
cwde
cmp
jg
pop
mov
je
lahf
inc
push
push
das
enter
dec
cwde
in
lds
or
push
mov
jl
jne
sub
in
fwait
mov
test
call
add
mov
add
arpl
push
movs
mov
push
scas
cmp
sbb
dec
dec
mov
push
sbb
mov
cmps
in
sub
aas
(bad)
daa
sbb
hlt
les
or
add
or
int3
xor
sub
sbb
jo
in
leave
push
pop
pop
fmul
jne
pop
adc
sbb
lock
fs
(bad)
call
aaa
clc
mov
pusha
pop
adc
adc
addr16
mov
scas
or
std
aam
pop
pop
mov
(bad)
sti
pusha
or
movs
mov
cli
add
xchg
sar
add
mov
mov
into
jl
push
push
adc
(bad)
outs
popf
fwait
add
mov
movs
dec
cmp
pop
cld
inc
cmc
loop
jnp
xor
bound
and
ror
xchg
lahf
push
sti
les
cmp
jno
test
sbb
xor
mov
sahf
or
cmp
pop
pop
push
int3
ja
test
call
add
mov
sbb
or
jecxz
add
pop
xchg
daa
cld
stos
es
sub
(bad)
cdq
(bad)
(bad)
lods
adc
or
in
sbb
repz
test
shl
or
and
dec
or
repnz
xor
or
sbb
(bad)
out
adc
adc
add
int3
mov
lea
stos
xchg
dec
retf
and
sub
jmp
push
ret
fs
xchg
bound
icebp
jno
loopne
je
arpl
push
cmps
inc
daa
push
in
adc
inc
xchg
iret
push
and
pop
movs
dec
cmp
mov
fdiv
clc
mov
adc
xchg
fild
inc
mov
cmps
xchg
push
cmps
xor
push
cld
mov
call
mov
push
cmps
inc
retf
dec
ss
jl
das
or
js
dec
add
inc
mov
sbb
lea
xchg
inc
mov
push
nop
pop
xchg
ret
or
int
ja
push
mov
inc
jle
cmps
or
sbb
adc
pop
cmps
adc
jle
gs
lds
psubq
test
push
adc
xor
push
fsubr
and
add
retf
and
cmp
ins
std
cmp
ror
sub
mov
pop
pop
mov
in
sti
rcr
not
cmp
loope
inc
into
pusha
les
das
pop
xlat
or
cwde
in
(bad)
aas
mov
mul
test
jns
adc
sahf
mov
adc
lods
jl
inc
xchg
jno
cwde
sbb
jl
mov
loop
div
aam
mov
lock
pusha
jns
jl
dec
ins
jns
lds
pop
cmp
jl
xchg
cli
push
dec
fnstsw
jbe
out
push
(bad)
jge
cmp
xor
cld
nop
pop
imul
jb
cmps
mov
pop
scas
dec
add
outs
add
xchg
lea
push
push
das
(bad)
or
inc
jae
cmp
pop
adc
push
imul
sbb
arpl
gs
shr
xchg
mov
aam
sub
aaa
cwde
add
pop
push
loope
lds
sbb
pop
ret
xchg
ret
sbb
enter
adc
xor
mov
jmp
es
lods
or
fwait
cmp
or
sbb
and
push
adc
pop
jle
sub
lock
xor
jns
xor
inc
mov
pop
ret
or
gs
lds
sub
cmc
mov
into
faddp
jl
adc
cmc
loop
(bad)
es
push
mov
xlat
and
(bad)
mov
cmp
push
inc
repz
push
scas
add
cmps
lods
push
pushf
cmp
pop
clc
push
push
leave
pop
arpl
aas
mov
mov
pop
popf
push
jg
inc
cmc
mov
jge
ja
outs
int3
adc
pop
std
sbb
sbb
lea
sahf
cmp
xchg
mov
mov
add
pop
and
cmps
jge
lds
mov
adc
ins
cld
les
cmp
scas
mov
mov
cmps
add
mov
pop
mov
stos
mov
nop
cmps
test
pop
stc
lock
push
and
hlt
add
mov
loope
jbe
dec
mov
call
xchg
xchg
mov
push
mov
xchg
jbe
mov
icebp
mov
data16
pop
punpckhbw
sbb
cmps
push
jmp
in
fild
fdiv
fidiv
ss
add
jmp
loop
lock
imul
mov
movs
scas
into
add
outs
sbb
or
jle
xchg
retf
cmps
xchg
add
sub
sbb
and
and
leave
and
inc
pushf
and
pop
div
mov
lods
rcl
xor
push
repz
mov
in
aad
lds
mov
std
mov
inc
xor
sub
retf
dec
xchg
cmps
or
ficomp
and
cmp
xchg
cld
or
daa
jns
xor
mov
add
cmp
in
in
jnp
dec
js
vdivpd
fadd
adc
in
jmp
scas
push
adc
scas
aas
adc
pop
pop
inc
or
mov
mov
addr16
js
inc
push
cld
push
mov
dec
lock
adc
mov
repz
repnz
shl
xchg
fild
movs
inc
ins
clc
test
sbb
out
push
fidivr
adc
fdivr
movs
ror
inc
(bad)
repnz
cmp
mov
in
shl
pop
imul
jae
imul
mov
push
inc
and
xchg
jge
xchg
cld
imul
mov
pop
adc
push
mov
addr16
push
pop
or
add
stos
add
enter
and
hlt
ja
cmps
test
call
inc
je
retf
out
rol
shr
into
push
mov
iret
cmp
bound
pop
jb
aam
fisubr
sar
xor
dec
mov
xor
mov
or
cmp
daa
enter
adc
mov
mov
lock
pop
adc
dec
(bad)
pop
or
pop
mov
xchg
cmp
jecxz
sbb
lods
mov
pusha
xchg
xor
cli
sbb
push
scas
aas
sar
mov
and
lods
rcr
mov
mov
mov
cmps
add
xchg
adc
mov
or
repz
sbb
scas
jo
ret
cmp
in
scas
mov
add
cmps
in
or
jecxz
cs
pop
cmp
sub
into
jne
sub
jl
pushf
cmp
ret
pop
arpl
ins
enter
mov
sub
mov
mov
add
out
dec
add
cmp
test
fild
adc
sub
in
arpl
dec
inc
jo
lea
mov
xor
in
xor
bound
stos
sub
sbb
ret
lahf
or
and
lds
ret
sbb
adc
outs
(bad)
add
xchg
sahf
add
or
sbb
adc
mov
or
test
dec
xchg
fs
inc
sub
xchg
xchg
stc
mov
test
pusha
dec
enter
jne
imul
mov
xchg
cmp
xor
pop
popf
push
xor
jb
add
or
xchg
je
inc
cmps
fdiv
pop
(bad)
adc
dec
js
and
push
mov
and
sbb
inc
pop
inc
call
adc
gs
shr
mov
sbb
push
ds
jge
mov
ds
push
xor
sub
jmp
inc
and
loopne
cwde
xchg
dec
(bad)
sbb
inc
cli
cdq
in
pop
or
test
mov
sbb
(bad)
fstp
jns
dec
cmp
sbb
pop
retf
mov
jmp
leave
sbb
push
not
xchg
and
adc
imul
lods
popf
call
add
rol
dec
pusha
ror
scas
fwait
stc
test
inc
cmp
jl
jae
popa
retf
pop
add
cs
mov
xchg
(bad)
jb
sti
xchg
popa
test
add
mov
rcl
nop
aad
push
in
pop
imul
cmp
mov
loopne
sar
aam
mov
sub
(bad)
fisttp
push
ret
mov
add
jb
and
and
sub
or
sar
adc
imul
imul
and
push
and
fldenv
shl
int3
jmp
mov
pop
das
pusha
mov
pushf
adc
mov
outs
cmp
xor
lods
push
cmp
fwait
inc
mov
pop
dec
fwait
cli
pop
pop
mov
mov
retf
pushf
outs
stos
rcr
jle
push
sbb
loopne
mov
xchg
rol
lods
cmp
mov
add
dec
cmp
mov
nop
stc
mov
sub
cdq
sub
cmp
fsub
lods
sub
cmp
sbb
push
xchg
shl
std
mov
(bad)
sti
mov
test
push
sub
pop
or
inc
cli
ror
pusha
icebp
icebp
enter
or
xor
mov
bound
and
fisub
sti
cwde
cli
hlt
dec
addr16
lahf
aam
addr16
cli
fwait
jb
push
mov
ja
(bad)
sub
sar
add
jae
(bad)
(bad)
ja
cwde
enter
js
dec
sub
xchg
inc
loop
pop
dec
aad
jle
xchg
sub
addr16
in
push
dec
call
jge
push
cmp
jne
in
in
test
inc
sub
ja
loope
mov
or
mov
adc
adc
out
std
dec
sub
sbb
dec
add
mov
popa
push
mov
in
and
bound
mov
mov
outs
push
iret
xchg
or
call
add
inc
mov
and
mov
sbb
push
sub
xchg
pushf
mov
icebp
mov
jecxz
out
scas
imul
push
ror
and
mov
sbb
in
(bad)
adc
fwait
lods
jl
fstp
xor
test
stos
rol
call
(bad)
in
sar
loopne
movs
cwde
pusha
test
popf
mov
push
leave
mov
cld
sar
dec
out
mov
adc
shl
iret
cmp
adc
repz
(bad)
data16
xchg
test
push
or
sub
and
sub
cld
pop
jno
inc
dec
adc
mov
xor
and
and
pusha
fnstcw
pop
dec
mov
jle
sbb
aas
cmps
cld
push
mov
hlt
adc
push
mov
or
(bad)
imul
unpcklps
jb
mov
jecxz
leave
leave
dec
pop
fs
cmp
(bad)
mov
popa
add
shr
imul
mov
fnsetpm(287
add
push
xchg
cmp
ins
jae
test
pmullw
adc
bound
fstp
(bad)
xchg
std
push
or
and
in
mov
icebp
ds
mov
mov
inc
lea
and
pusha
retf
sub
(bad)
jge
rcr
repnz
inc
sub
hlt
jne
aas
mov
jle
and
cmp
lods
shl
jnp
aaa
mov
mov
cmc
imul
aas
xor
in
mov
sub
pop
sbb
push
loop
add
(bad)
sub
(bad)
sbb
pop
pop
repz
outs
inc
int
or
jns
xlat
inc
dec
mov
xchg
enter
test
shl
movs
xor
das
and
or
adc
cmc
push
xchg
mov
xchg
inc
add
test
cmp
(bad)
aaa
mov
shr
arpl
xor
jp
int3
cwde
push
loop
xor
push
push
dec
xchg
dec
lea
mov
(bad)
arpl
retf
shl
pop
push
xchg
mov
xor
pusha
push
call
xor
call
lds
(bad)
fisubr
leave
mov
xchg
jmp
sub
mov
stos
repnz
xor
jns
xchg
mov
cmp
imul
or
jb
and
or
loopne
sub
out
imul
ins
pop
sbb
or
mov
movs
rol
loope
sbb
lahf
add
xchg
ret
inc
sar
idiv
js
in
mov
pop
push
mov
cmp
rol
fld
jmp
xor
int
xor
inc
inc
sbb
aaa
or
dec
loop
not
sbb
sbb
sbb
jle
and
push
mov
repnz
jbe
or
hlt
pop
adc
fisubr
push
bound
add
test
test
mov
fistp
mov
jbe
inc
jo
dec
iret
mov
sar
loopne
xor
dec
loope
mov
mov
sub
mov
lea
movs
mov
and
in
jae
jne
das
in
pop
xor
es
dec
fcmovnu
pop
jmp
lods
stos
or
adc
cmp
aaa
xor
inc
imul
mov
stc
pop
fcom
call
jge
mov
mov
inc
adc
out
outs
test
pop
adc
lods
sub
div
jmp
or
stos
cli
ja
and
(bad)
mov
and
ret
and
fnstcw
mov
sar
shl
in
lds
xchg
jg
mov
stos
xor
mov
mov
iret
cmps
std
mov
cmp
pop
add
bnd
mov
lock
pop
sbb
cdq
dec
mov
out
call
or
or
inc
or
mov
fcom
push
inc
mov
mov
daa
add
out
xchg
add
push
sbb
add
dec
gs
pop
mov
mov
ss
test
mov
dec
scas
add
je
test
mov
mov
js
or
pop
mov
adc
popf
test
dec
jmp
fsub
mov
or
lea
cmp
adc
enter
outs
jl
add
jg
jmp
jge
cmc
les
adc
cld
movs
sbb
mov
je
out
lea
mov
add
std
popf
mov
lock
jmp
fst
adc
adc
fucomi
adc
daa
ror
sbb
repz
pop
pop
retf
lea
js
or
out
inc
cmp
ror
ror
lock
cli
ror
nop
mov
jp
cwde
hlt
sub
repnz
jle
push
push
jl
iret
ja
jp
lahf
mov
sub
sub
(bad)
mov
scas
inc
lahf
and
sbb
pop
or
pop
xchg
inc
adc
xchg
jp
cmc
inc
xlat
aam
shl
(bad)
cmp
inc
sbb
xor
test
sub
daa
pop
jle
mov
xchg
mov
sbb
cmp
dec
pop
or
out
jbe
xchg
mov
dec
enter
cmp
(bad)
pop
iret
mov
ja
mov
push
xor
rol
adc
mul
cdq
outs
(bad)
xlat
mov
mov
xchg
add
clc
bound
pop
push
or
push
mov
popf
bound
jg
jne
mov
adc
popf
pop
sar
jp
mov
and
jae
dec
clc
jmp
or
mov
out
sbb
mov
xchg
xor
inc
pop
nop
push
sub
jge
push
imul
es
ins
test
(bad)
sbb
mov
jmp
out
xor
mov
pusha
and
mov
jne
cld
leave
xchg
stos
jne
adc
shl
jae
lahf
and
push
xlat
icebp
push
imul
mov
(bad)
mov
mov
ins
mov
les
jmp
pop
or
mov
(bad)
idiv
leave
add
push
fs
test
ret
jecxz
rol
xor
mov
mov
push
and
push
xor
push
push
jo
cdq
clc
scas
sbb
jmp
dec
nop
adc
dec
(bad)
jg
clc
pop
rcl
jmp
mov
xchg
arpl
jnp
add
ret
push
jo
jmp
adc
inc
icebp
mov
mov
jmp
in
out
pop
cwde
lea
and
(bad)
mov
mov
data16
jp
cmps
cmps
mov
add
mov
shr
retf
in
mov
test
jns
lea
bound
push
ins
aaa
je
shl
out
adc
imul
(bad)
push
fidivr
pop
rcr
js
cmps
test
pop
dec
lds
xchg
adc
ds
inc
xchg
push
test
cmp
sar
aad
(bad)
ds
inc
pop
sub
mov
into
pusha
adc
rcr
fs
cld
jl
xchg
(bad)
cmp
lods
jl
push
mov
sub
push
add
mov
jmp
xlat
mov
jnp
test
clc
sub
dec
mov
jbe
mov
sub
or
pop
or
mov
sbb
jbe
sbb
inc
mov
stos
(bad)
jns
inc
retf
pop
lock
ins
mov
xor
(bad)
outs
or
mov
add
stos
xor
rcpps
pop
xchg
aas
pushf
cmps
mov
or
into
test
xchg
fcom
out
test
sbb
mov
retf
arpl
push
int
outs
scas
out
or
push
adc
stc
sub
pop
mov
xchg
fwait
popf
push
sub
jle
test
fcomi
or
sbb
sub
sbb
rol
sbb
inc
fcos
inc
sbb
push
xor
mov
fsubrp
stos
xchg
jo
mov
inc
inc
pop
ret
in
(bad)
cmp
pop
push
loopne
mov
or
clc
sub
lds
loopne
mov
test
or
sub
push
and
and
mov
lahf
cwde
jno
cs
mov
jl
cmp
dec
popf
sbb
xor
ins
push
inc
cmp
aas
inc
shl
pop
hlt
xchg
cmps
xchg
inc
cwde
mov
test
cmp
cmp
ss
fbstp
dec
(bad)
ffree
cmp
ror
addr16
lahf
cmp
jg
mov
lock
je
movs
in
xchg
sbb
js
or
rcl
jb
inc
fistp
shl
ins
lahf
hlt
repz
push
adc
lods
data16
add
aas
jle
xcrypt-ctr
cmps
pop
or
mov
add
mov
xchg
and
jmp
mov
or
cld
sbb
sub
inc
aas
jnp
daa
dec
fs
sub
sbb
shl
out
xor
imul
imul
outs
jb
push
dec
jecxz
dec
icebp
and
cli
int
xor
jecxz
adc
call
and
mov
sahf
aaa
cmp
(bad)
push
dec
(bad)
out
lds
call
int
inc
mov
and
and
dec
jge
add
inc
out
stos
(bad)
cmp
ficomp
pushf
dec
pop
sub
vpsubw
shl
fsubr
dec
cmp
lods
int3
jp
(bad)
fisub
fidivr
outs
sub
sbb
imul
xor
lea
mov
imul
in
test
int3
fwait
cmp
pusha
cmc
ror
aas
pop
mov
mov
clc
sub
mov
cmp
push
sbb
xlat
or
inc
jo
fidivr
inc
aad
or
push
adc
or
jae
add
add
test
fbld
xchg
push
lds
xor
fcmovu
dec
daa
sti
stos
xchg
adc
jg
pop
dec
std
dec
sub
jns
addr16
pop
shr
(bad)
mov
movs
pop
out
pop
shr
sbb
adc
cli
add
sbb
mov
cs
daa
push
or
push
sub
lahf
icebp
fnstenv
test
clc
mov
jbe
dec
push
rcl
push
(bad)
shl
jmp
xchg
bound
test
mov
es
mul
lods
lahf
cmp
dec
movs
and
or
es
leave
mov
dec
sti
and
mov
push
or
add
push
popa
nop
fldcw
mov
mov
push
in
scas
sar
add
dec
enter
aaa
les
in
(bad)
popf
out
je
xor
mov
inc
cmc
jmp
retf
mov
mov
shl
pop
push
inc
je
push
loope
dec
add
inc
mov
mov
xchg
mov
aad
sbb
(bad)
movs
adc
cmp
gs
add
fsubr
pop
adc
call
jmp
stos
jl
das
mov
test
sub
rol
mov
fimul
div
outs
imul
fmul
sub
xor
cmp
sub
pop
not
mov
ds
cmp
xchg
stc
adc
pusha
and
hlt
or
adc
call
sub
push
(bad)
jmp
int3
mov
push
or
into
gs
imul
cld
adc
scas
jns
mov
xor
sub
out
sub
loop
fild
arpl
lds
cdq
xchg
jno
jg
pop
xchg
mov
movs
xor
xchg
lock
and
sbb
xchg
mov
jne
mov
aam
call
xchg
int3
out
ja
xor
mov
pop
outs
int3
push
jno
xchg
dec
push
mov
nop
cld
jno
loope
cmps
lock
mov
adc
cmc
pop
mov
push
cmp
jbe
push
dec
aad
jnp
adc
loope
cmp
xchg
add
in
test
dec
push
es
(bad)
addr16
mov
fbstp
fwait
lds
mov
adc
dec
push
clc
(bad)
fld
push
in
xchg
xor
lods
test
mov
shl
dec
iret
lahf
adc
sahf
lea
or
add
es
cs
jns
out
mov
cmps
stc
push
imul
push
push
movs
test
push
in
or
addr16
les
sub
(bad)
cmp
pop
sub
add
xor
jmp
jno
pop
neg
fadd
jbe
xchg
loope
fidiv
loopne
loopne
das
inc
pop
or
mov
sub
and
mov
mov
movs
lds
xor
pop
add
mov
add
add
cwde
dec
neg
loope
(bad)
mov
gs
push
push
xchg
dec
repnz
popf
sbb
sbb
sub
adc
pop
push
or
push
scas
cmc
outs
ins
daa
call
and
lahf
lock
jg
push
repz
cs
sbb
inc
inc
inc
jge
push
bound
rol
popf
or
mov
mov
into
sti
adc
pop
imul
test
adc
mov
dec
icebp
jb
(bad)
stc
ret
xlat
add
ins
xchg
jmp
mov
sahf
cmps
test
or
leave
out
pushf
and
or
push
fs
add
pop
jo
push
fst
add
enter
leave
xchg
mov
pop
fldenv
sar
mov
add
pop
fcmovnu
test
hlt
sbb
sar
add
(bad)
movs
mov
jmp
sbb
stc
and
mov
jno
leave
mov
mov
sbb
adc
xlat
mov
mov
jmp
adc
mov
sti
and
out
je
inc
mov
sbb
cwde
sbb
loope
bound
mov
test
rcr
push
jp
jge
xchg
mov
aad
ins
sub
aam
rol
xchg
ds
cmp
(bad)
mov
(bad)
ficomp
jle
iret
jmp
(bad)
std
or
inc
jl
aad
nop
into
sbb
mov
cli
in
pop
adc
or
in
inc
scas
add
jo
std
mov
cli
mov
push
imul
aaa
xor
lods
sub
fstp
pop
add
pop
add
sub
scas
repnz
push
push
push
(bad)
xlat
push
fadd
xor
and
or
inc
and
divps
inc
sub
lahf
mov
add
cmp
aam
pop
inc
cld
loope
(bad)
or
dec
jle
pushf
sti
retf
and
mov
xor
sbb
add
cld
cmp
sub
pop
out
enter
ret
cmp
jb
int3
add
aas
clc
sbb
xchg
ja
add
mov
push
sub
cwde
je
fst
push
jecxz
push
or
in
in
cmp
push
call
das
dec
push
imul
hlt
mov
lods
and
push
xchg
cdq
push
mov
or
push
cmp
adc
jle
pop
inc
dec
cmps
cs
jecxz
sahf
movs
fidivr
loop
nop
pop
jno
mov
pop
inc
sahf
div
push
sub
push
scas
inc
mov
inc
imul
es
inc
gs
mov
sub
retf
pusha
fmul
rcl
xchg
mov
cmp
mov
xor
pop
out
test
xor
ftst
je
popf
adc
mov
inc
movs
dec
cmp
leave
adc
hlt
sti
imul
stc
inc
out
xchg
in
dec
lds
cmp
cmp
push
push
std
xor
sub
retf
mov
dec
std
mov
push
jecxz
xchg
test
ret
(bad)
jmp
rcl
(bad)
sti
jns
sub
xchg
out
xchg
sar
out
or
dec
ficomp
clc
das
sbb
xchg
arpl
cmps
in
ret
loope
mov
jl
cmps
sub
jmp
in
and
jmp
push
pop
jp
sbb
das
stc
and
movs
inc
shl
or
or
jp
xchg
mov
cmp
or
aad
sub
push
mov
fcomp
std
ficomp
sahf
sbb
ja
sub
and
xor
jmp
mov
mov
scas
aad
iret
mov
sbb
xlat
imul
std
jl
pop
ret
jns
fiadd
sbb
jge
add
add
mov
pop
loop
jge
rcr
pusha
pop
cmp
test
dec
adc
dec
xchg
inc
mov
jns
mov
fstp
sbb
aas
and
fsubr
or
add
popf
jmp
mov
mov
and
xor
out
pop
mov
pop
jb
jmp
cmp
jns
(bad)
mov
xchg
mov
dec
call
cmp
mov
and
retf
retf
xchg
test
loope
dec
inc
repnz
popa
adc
(bad)
bound
pop
aas
aaa
push
mov
add
in
mov
scas
ret
mov
outs
call
loop
retf
mov
cmp
jecxz
(bad)
imul
int3
je
xchg
add
inc
pop
sub
xor
lea
test
cmp
pop
inc
push
test
fidiv
inc
int
adc
cmc
imul
or
sbb
fsub
int3
sar
popf
icebp
stc
(bad)
pusha
jle
jne
es
rcr
int
mov
jmp
loop
inc
lds
sbb
not
inc
outs
div
out
add
aad
aam
jmp
push
iret
ss
dec
cmp
lea
int3
inc
int3
mov
daa
and
add
shr
xor
ror
and
mov
imul
or
jnp
je
ror
push
push
shl
outs
mov
pusha
into
jns
xchg
adc
sbb
or
sub
or
pop
push
jmp
out
sub
mov
jmp
sub
jo
addr16
jmp
push
push
in
jecxz
jo
xor
xor
or
sub
mov
add
in
fimul
enter
push
push
mov
jecxz
jp
mov
pop
std
mov
jl
dec
xor
adc
popf
in
and
ins
jg
cmc
mul
jmp
dec
xchg
sahf
cmp
mov
pop
cmps
pusha
lock
sbb
mov
sub
cmps
les
xchg
mov
inc
inc
add
inc
push
rcr
into
scas
cmp
or
inc
ficomp
ror
in
ins
loop
movs
dec
(bad)
and
adc
inc
lods
pop
sub
sar
fldenv
push
mov
loop
mov
xchg
xchg
js
xchg
push
lds
aas
inc
jb
jmp
dec
lahf
lahf
retf
mov
(bad)
xor
cld
pop
jmp
ret
es
sbb
xchg
xchg
gs
mov
lods
mov
add
ficom
xchg
(bad)
not
add
jp
adc
ja
mov
inc
call
sbb
sti
lods
push
dec
mov
fiadd
mov
jecxz
movs
jge
jns
movs
xor
mov
mov
xor
imul
aad
in
sub
cs
mov
repnz
mov
mov
(bad)
je
pop
out
call
test
push
inc
scas
and
add
aad
mov
test
sti
xchg
popa
(bad)
arpl
cmps
push
jae
xor
mov
cmp
lahf
adc
scas
pop
cdq
sub
(bad)
aad
sbb
(bad)
ins
add
add
jbe
mov
ins
fwait
das
or
dec
imul
dec
mov
mov
inc
sti
stos
fidivr
inc
mov
ja
pop
push
ficomp
lods
and
in
sbb
xchg
lods
out
test
jle
push
push
imul
in
je
ss
sub
sti
push
mov
jmp
cmp
inc
mov
sbb
mov
sub
or
cli
shr
hlt
sahf
cwde
push
into
outs
enter
in
xor
test
aaa
in
cmp
xlat
xchg
dec
inc
add
into
pop
inc
mov
and
cli
xchg
pop
movs
fnstenv
mov
and
cmp
lock
or
rcl
lea
iret
out
hlt
jno
jns
and
in
outs
cmc
and
out
xchg
mov
sar
in
movs
fidiv
xor
jbe
les
scas
(bad)
pop
adc
in
dec
pop
jecxz
xchg
pop
fmul
or
or
xchg
rcl
sti
addr16
push
adc
out
cld
fld
cld
repnz
xchg
scas
and
sub
jecxz
jecxz
cmp
ret
lods
inc
sahf
push
loope
mov
xlat
push
mov
(bad)
jne
(bad)
mov
pop
out
aas
mov
add
(bad)
cmp
aam
jge
lds
ins
imul
dec
mov
cmp
cli
push
int3
cs
cmps
in
pusha
mov
inc
pushf
and
mov
push
rol
push
fisub
add
dec
int3
call
jno
push
ror
inc
inc
fld
mov
loope
arpl
shl
push
adc
push
mov
icebp
cdq
cmps
push
mov
mov
(bad)
pop
xor
test
xchg
jns
sbb
or
push
repz
hlt
mov
or
mov
push
jecxz
sbb
or
pop
cmp
xchg
dec
mov
xchg
or
mov
sbb
xchg
ret
shl
push
push
pop
xor
lea
in
ror
pop
int3
mov
mov
jl
fsubr
ret
adc
and
sbb
mov
fs
jp
fisttp
sbb
fcom
push
lahf
movs
inc
rcr
mov
mov
sub
loopne
dec
inc
mov
or
xchg
(bad)
adc
sbb
inc
jo
push
and
xchg
jne
mov
sbb
lahf
sub
(bad)
dec
mov
add
pop
mov
(bad)
dec
stc
pop
mov
dec
mov
shr
pop
mov
dec
sbb
pop
lock
loop
mov
jmp
stos
lods
mov
pop
in
ret
dec
dec
adc
pop
push
dec
mov
pushf
push
js
out
mov
nop
add
test
fs
cmp
loop
rol
arpl
pop
add
into
sub
stos
pop
cmp
push
and
pop
push
dec
adc
je
arpl
inc
rcl
adc
into
es
push
xchg
xor
jmp
inc
imul
stos
add
mov
clc
imul
jmp
mov
sub
outs
clc
or
in
push
pop
xchg
inc
test
mov
add
xor
stc
mov
js
mov
xor
mov
push
stc
pop
dec
xchg
mov
stos
repnz
in
dec
dec
ret
fdiv
add
or
xchg
push
sbb
mov
clc
sbb
mov
xor
jg
sbb
daa
fdiv
leave
fcos
rcr
push
les
dec
push
and
dec
inc
cwde
dec
mov
fist
je
mov
enter
aam
retf
cld
ja
push
jl
cld
scas
mov
stos
jns
shl
je
aaa
das
push
xchg
dec
outs
fs
test
fwait
jge
mov
xchg
daa
ins
mov
ret
imul
mov
inc
mov
jmp
pop
mov
in
mov
lods
sub
fwait
(bad)
mov
inc
ins
pushf
add
sar
mov
push
in
add
outs
ins
(bad)
ficom
xchg
in
in
cdq
push
xor
dec
ret
adc
push
push
lods
int3
mov
cmp
adc
call
cmp
mov
clc
push
enter
pusha
fidiv
or
test
dec
jmp
test
push
adc
stos
inc
fisub
jbe
jp
mov
pop
test
xchg
fs
gs
mov
in
sar
ret
cmps
or
jge
mov
and
in
pushf
cli
add
and
arpl
pop
imul
and
cmps
test
cwde
push
imul
neg
sbb
scas
mov
daa
retf
ds
pop
lahf
inc
and
aaa
jle
ss
jecxz
or
movs
mov
push
xor
push
int3
pop
in
dec
lods
jno
adc
loopne
add
stos
sahf
sub
jmp
jbe
add
ss
mov
push
mov
aas
jae
jmp
cld
and
movs
dec
cwde
push
retf
pop
dec
std
jl
mov
mov
push
out
mov
push
dec
fsub
or
test
sbb
aaa
mov
xchg
jge
gs
cmp
push
mov
scas
and
lods
inc
and
jp
and
in
jecxz
cli
sub
inc
fiadd
adc
inc
clc
inc
cwde
xchg
mov
cmp
push
mov
test
jg
fistp
and
inc
cwde
lea
ins
(bad)
fs
push
jb
push
mov
add
sub
fldcw
cmp
push
xor
sahf
sahf
xor
or
or
push
sub
retf
in
stc
ret
inc
sub
ins
push
loopne
dec
dec
lahf
sub
ins
rcl
sbb
xchg
gs
int
jae
sbb
mov
loop
aas
test
jmp
mov
std
sti
cmp
icebp
rcr
aam
sub
and
sbb
or
jmp
mov
test
and
sub
ja
xlat
xlat
sbb
ret
mov
inc
mov
shl
jo
push
dec
pop
adc
out
je
jae
jg
inc
jae
aaa
mov
xchg
sub
mov
gs
popa
mov
scas
inc
(bad)
lea
add
sbb
pop
les
(bad)
mov
inc
push
in
loop
mov
add
pop
cmc
or
adc
inc
je
daa
push
adc
pop
push
(bad)
xchg
jmp
or
jge
lock
push
jae
mov
cli
and
sbb
mov
push
imul
movs
cmps
ret
(bad)
cmps
test
pusha
inc
std
fisub
in
inc
aam
sbb
adc
out
push
jp
push
je
or
aam
sahf
iret
ret
mov
push
mov
iret
loopne
mov
push
inc
xchg
aam
lahf
cmp
dec
mov
mov
dec
in
cmp
aam
xchg
mov
retf
ins
inc
sub
xchg
xchg
mov
mov
data16
out
imul
add
cmps
pusha
adc
xchg
push
jl
jmp
outs
pop
das
cmp
xlat
xor
fldcw
sub
lods
shr
mov
mov
mov
sbb
xchg
cmps
inc
in
jb
xchg
sub
sbb
fld
mov
lds
inc
add
fnstcw
out
xor
daa
mov
push
stos
in
inc
(bad)
mov
mov
dec
out
outs
cmps
mov
dec
mov
push
jle
jmp
pop
bound
sub
push
cdq
es
xchg
jmp
add
sub
push
pop
jmp
rcl
adc
xor
cs
cmp
jge
dec
leave
mov
cs
pusha
push
fidiv
mov
xor
repnz
iret
lock
mov
gs
imul
pop
movs
pusha
test
ss
pushf
retf
sub
scas
mov
cmp
jmp
xchg
jmp
in
or
pop
in
(bad)
pop
in
jl
mov
xchg
repnz
aaa
add
or
xchg
lods
xchg
dec
push
xchg
cs
jp
in
add
jg
fild
sbb
int3
xchg
or
(bad)
popw
out
pop
lahf
add
std
jecxz
loop
mov
popf
mov
daa
inc
fld
shl
jge
mov
ror
xor
mov
sahf
inc
into
test
add
outs
pop
mov
and
xor
outs
sbb
jmp
jne
sbb
or
inc
jmp
sbb
not
and
add
mov
repnz
or
loopne
sbb
jnp
xchg
ret
gs
pop
stos
xchg
dec
jne
(bad)
stos
add
into
repz
aad
mov
cmp
call
or
adc
sbb
inc
shl
push
pop
add
std
sbb
call
add
pop
or
ret
mov
stos
inc
adc
adc
test
outs
mov
adc
sub
xchg
scas
(bad)
cmp
sahf
push
out
jo
stos
sub
gs
repz
idiv
fmul
or
push
add
loop
cmc
sub
push
xor
push
pop
mov
pop
cmp
push
inc
cli
fs
sub
push
sbb
cmc
retf
test
daa
pop
cdq
xchg
data16
fsubr
xor
mov
push
inc
add
and
cmp
out
dec
inc
sub
retf
stc
mov
mov
cmova
popf
push
std
into
cs
mov
xlat
jmp
jecxz
mov
or
outs
int
or
mov
dec
inc
push
in
pop
push
xchg
loop
sub
icebp
pop
test
imul
popf
pop
lahf
cwde
dec
mov
push
lods
sub
xchg
dec
mov
mov
push
jmp
jle
push
fimul
sub
adc
ret
push
sbb
jne
push
jmp
jb
or
mov
mov
push
jne
das
push
sub
shl
cmp
test
jp
add
adc
out
xchg
call
mov
(bad)
sbb
stos
div
daa
pop
dec
shl
push
call
jb
iret
sbb
xchg
sbb
in
or
bound
xor
xor
imul
mov
movs
xchg
outs
das
mov
jb
fmul
or
dec
test
ss
jmp
inc
or
adc
add
or
mov
cmp
push
cmps
ret
or
ds
test
lock
mov
xchg
retf
into
div
and
xchg
mov
mov
aaa
dec
pushf
mov
xor
jnp
mov
shl
sbb
cdq
adc
adc
rcl
mov
push
aam
int3
pop
loop
les
les
shr
mov
push
jge
inc
fmulp
shl
xchg
mov
out
jb
data16
mov
mov
jge
test
imul
and
mov
adc
movs
pop
shl
lock
push
sub
add
loope
mov
lods
mov
mov
sub
popa
pop
cwde
adc
jo
mov
fisub
mov
sub
sbb
mov
mov
fdivr
push
shl
adc
adc
std
in
retf
outs
or
frstor
clc
or
aad
push
xor
and
sub
test
faddp
ds
jmp
(bad)
pop
outs
pop
in
in
xchg
ret
xchg
lea
push
push
imul
hlt
in
ins
dec
xchg
test
in
rcl
jno
lods
retf
inc
push
xchg
add
pop
add
mov
inc
nop
or
xor
enter
mov
imul
push
dec
dec
cmp
pushf
lods
out
dec
fild
iret
push
add
scas
cmc
inc
daa
fwait
addr16
stos
mov
pop
pop
push
xchg
jmp
sub
mov
dec
dec
call
test
sub
or
nop
add
or
mov
adc
cwde
popf
mov
out
cmc
xchg
mov
adc
xchg
sbb
xor
sub
(bad)
jne
mov
sub
sub
cmps
jno
xchg
retf
xor
fwait
adc
mov
imul
xor
and
cmp
mov
cli
push
mov
outs
adc
fld
aaa
inc
xor
jmp
icebp
cmp
pushf
(bad)
adc
add
jne
les
jmp
shl
add
add
xchg
je
hlt
mov
aas
add
lods
mov
add
arpl
dec
out
jb
inc
pop
push
mov
push
(bad)
xor
cmp
xor
call
rcl
test
pop
jbe
mov
xchg
cmp
xchg
bound
pop
nop
js
jno
jl
add
ins
shr
mov
inc
sbb
xchg
xchg
repz
das
jl
sti
add
adc
nop
ss
or
cmps
aad
fs
mov
lds
fs
mov
jp
es
or
cld
ret
dec
fldl2e
mov
adc
test
push
out
clc
mov
sbb
inc
scas
ins
jb
mov
fcom
pop
push
cmc
int3
and
enter
sub
push
inc
mov
bound
(bad)
mov
inc
or
xor
or
adc
mov
stos
test
jp
sti
fistp
loope
mov
cmc
adc
jl
call
adc
aas
pop
sub
push
adc
(bad)
mov
jae
es
cmps
ds
cmp
out
loop
stc
fmul
inc
jl
push
hlt
stos
mov
mov
call
mov
jns
(bad)
inc
cmp
xchg
fimul
les
push
pop
push
pop
stos
stos
and
add
fs
add
pop
push
xchg
pop
and
mov
sahf
es
fidivr
or
imul
out
lock
pop
inc
sar
cmp
add
gs
cli
add
add
inc
ins
js
mov
in
cmp
loopne
fmul
mov
test
scas
mov
fdiv
lods
or
push
push
pop
mov
jecxz
movs
mov
jecxz
mov
cmp
arpl
adc
arpl
and
in
daa
xchg
fs
pop
xor
stos
inc
cmp
mov
jae
stos
into
cmp
hlt
icebp
imul
adc
iret
dec
(bad)
in
(bad)
je
hlt
pop
adc
call
xor
adc
or
aad
xor
fistp
addr16
jmp
div
jne
or
daa
push
mov
les
mov
mov
or
pop
loop
in
jnp
in
jl
out
mov
cwde
fst
jb
cmps
mov
ret
dec
adc
ins
sbb
imul
in
mov
movs
push
or
jmp
push
int3
out
inc
rcr
dec
in
stc
aas
ficomp
mov
neg
sti
daa
pop
mov
and
push
push
mov
shl
add
dec
not
inc
ins
or
adc
outs
adc
add
out
xchg
pushf
clc
dec
sbb
push
fwait
cwde
adc
xchg
mov
(bad)
js
adc
sub
div
xchg
fbld
and
fist
ins
mov
dec
hlt
push
arpl
xchg
inc
std
(bad)
jno
lds
xor
mov
fld
adc
bnd
and
ins
inc
or
cdq
add
mov
fistp
leave
enter
inc
mov
mov
push
outs
xor
mov
pop
jmp
es
sbb
outs
sar
xchg
mov
dec
cmp
(bad)
fdivrp
loopne
js
rol
jo
pop
sbb
outs
adc
repnz
sub
(bad)
ret
(bad)
(bad)
out
aam
ficom
or
xchg
mov
or
stos
int
mov
jecxz
add
(bad)
fsubrp
int3
jl
jmp
xchg
push
and
popa
retf
mov
test
loopne
push
lds
or
mov
xor
lods
cmp
out
and
dec
push
iret
sub
dec
mov
loop
out
sbb
lods
(bad)
cmps
or
inc
or
inc
push
lock
mov
inc
loopne
mov
push
mov
inc
mov
mov
repz
pop
int3
sub
inc
mov
pop
mov
repz
or
test
loope
push
dec
dec
mov
popa
jecxz
leave
jle
dec
fstp
cmp
inc
pop
sub
and
add
lods
or
ja
sbb
repz
sbb
jmp
mov
mov
cwde
sub
test
pop
xchg
push
fist
popf
add
jo
fmulp
js
stos
adc
cmp
sub
sub
test
gs
add
ret
arpl
call
mov
mov
lea
jp
je
rcl
js
cmps
cmp
lahf
jl
and
push
mov
push
push
retf
cs
dec
ja
mov
sub
xlat
rcr
mov
mov
add
jg
aam
popf
cli
xchg
jo
repz
dec
out
push
cmp
fst
pusha
sahf
dec
sub
lds
pop
pop
shl
mul
mov
fisubr
(bad)
stc
xor
les
pop
push
fimul
add
adc
call
sbb
cwde
jbe
pop
bound
leave
or
in
xchg
fdivr
push
jbe
xor
push
lea
iret
movs
test
test
fisubr
mov
idiv
shl
dec
stos
jmp
inc
cs
add
outs
daa
inc
test
lods
es
mov
faddp
jne
adc
inc
mov
sub
or
rcr
pushf
cmps
lahf
jle
mov
in
push
nop
scas
movs
cmp
add
xchg
sbb
push
push
mov
cmp
pop
fbld
std
ror
sahf
out
mov
or
lea
(bad)
leave
pop
jge
enter
sub
push
lea
test
cmps
test
imul
repz
std
sub
or
ret
jmp
sub
iret
xor
out
test
sub
xchg
enter
sbb
mov
dec
shl
je
loopne
test
js
mov
call
dec
pop
push
or
inc
sub
in
dec
sbb
mov
dec
pushf
repz
cmovne
daa
dec
test
dec
mov
ins
dec
xor
inc
sub
and
ins
mov
imul
call
cdq
xchg
push
in
aad
(bad)
scas
fnstcw
(bad)
out
xlat
das
ins
sbb
lock
icebp
(bad)
or
xchg
cwde
clts
call
mov
je
daa
rcr
push
popf
inc
fsubr
cmps
repz
sbb
sub
or
fs
xchg
add
ret
mov
add
(bad)
add
call
add
mov
addr16
ins
push
icebp
retf
and
js
fldenv
mov
jno
mov
mov
imul
add
xchg
call
cmp
imul
jmp
push
push
les
rcr
adc
fidiv
and
cmp
aas
out
sub
mov
jne
hlt
popa
lahf
push
add
fldcw
ins
and
mov
imul
dec
fsubr
mov
jae
adc
mov
add
cmp
xchg
aaa
(bad)
fcmovbe
sbb
leave
xor
cmps
lods
push
xor
mov
or
mov
lea
ss
aaa
daa
cs
push
ror
xor
mov
mov
rep
xor
cmp
push
popf
push
enter
repnz
push
pop
xor
sub
push
dec
sub
xchg
pop
je
call
fsub
out
xchg
dec
push
jle
dec
mov
dec
dec
inc
ss
pop
fimul
mov
adc
arpl
sti
mov
xor
hlt
loopne
leave
enter
push
xchg
hlt
xchg
outs
imul
ret
adc
xchg
retf
shl
rep
cmp
out
or
test
or
rol
or
fcom
shl
ins
push
sbb
mul
dec
in
aaa
mov
(bad)
jg
pusha
mov
mov
mov
les
push
dec
ss
fadd
or
push
xchg
jg
shr
pop
jnp
iret
ret
jge
retf
push
pop
xchg
xor
sub
or
adc
inc
add
(bad)
pop
test
aad
popa
movs
arpl
inc
push
mov
adc
loope
adc
and
lods
xor
call
jecxz
(bad)
retf
pop
sbb
nop
outs
test
push
jp
mov
mov
fdivr
sub
sub
jmp
inc
aas
cli
enter
mov
sub
cwde
jnp
or
pop
mov
mov
pop
add
shr
aaa
fcomp
jmp
outs
int3
push
mov
loop
push
test
scas
and
add
or
xchg
and
pop
outs
jmp
out
stos
clc
cmp
(bad)
pushf
je
(bad)
mov
jmp
and
mov
ror
mov
int3
enter
retf
xchg
imul
outs
call
xchg
sbb
sbb
in
retf
xchg
add
test
(bad)
mov
pop
pop
mov
dec
ds
retf
in
les
add
sub
out
pop
fcom
mov
dec
loopne
xor
(bad)
mov
xor
mov
ins
dec
(bad)
mov
cmc
adc
mov
sub
(bad)
sti
and
lds
inc
mov
mov
lock
int
(bad)
mov
dec
add
(bad)
jae
adc
es
adc
jmp
add
loopne
movs
push
(bad)
sbb
test
mov
xchg
mov
adc
sbb
test
xchg
icebp
stos
shl
mov
movs
lock
retf
xor
add
or
jb
mov
outs
es
rol
dec
adc
sti
jle
xchg
cld
rcl
aam
push
sub
mov
fmul
ins
jmp
(bad)
sahf
xchg
fiadd
test
dec
ins
push
sub
mov
add
mov
cmp
or
cs
das
int
sbb
mov
jne
hlt
ja
jno
pop
lock
popf
mov
dec
outs
push
push
cmp
ins
inc
push
daa
test
dec
loopne
mov
cmc
push
in
push
int3
std
cmp
cmp
or
pop
jge
push
mov
aas
jl
pop
imul
les
xchg
pop
pop
add
sahf
dec
test
out
addr16
aam
pop
fnstenv
mov
lahf
push
push
jae
shl
les
mov
cmp
mov
dec
adc
popf
arpl
test
lds
push
ret
in
sar
jo
xlat
test
rol
xchg
sti
sbb
std
jl
cmp
lods
dec
pop
test
jmp
retf
fisubr
lods
cmps
pop
cmps
or
dec
adc
mov
pop
aad
adc
push
fucomip
xrelease
ja
adc
ins
xchg
mov
sahf
inc
push
mov
or
pop
jo
retf
mov
movs
xchg
and
aas
add
(bad)
dec
cmps
arpl
repz
(bad)
jno
test
fist
pop
(bad)
outs
mov
dec
int3
fdivrp
xor
push
jge
test
cmps
pop
xchg
dec
jge
loop
(bad)
out
xchg
shl
gs
ds
mov
dec
sub
stos
xchg
pusha
cmp
stos
and
mov
pop
adc
add
adc
jmp
outs
loopne
cdq
pop
aas
dec
jns
dec
mov
add
stos
jns
dec
in
jnp
add
mov
or
out
cmp
xchg
mov
mov
leave
into
in
cld
call
imul
out
push
lds
ficomp
dec
jp
bound
sub
push
cmp
icebp
push
les
ret
(bad)
adc
dec
mov
inc
cmp
pop
je
mov
or
mov
frstor
mov
pop
aas
test
cwde
or
and
mov
in
jg
outs
mov
sar
popf
mov
retf
jmp
sti
bound
sub
sub
mov
data16
xor
cmp
xchg
lds
mov
popa
lock
fisttp
mov
(bad)
jmp
push
pop
in
rsm
mov
xor
aaa
adc
fwait
pop
pop
cwde
sbb
test
pop
lea
inc
imul
pop
mov
mov
push
adc
adc
cld
cs
repz
outs
jmp
mul
or
mov
test
pop
out
adc
dec
sbb
inc
out
mov
adc
xchg
add
pop
movs
or
mov
lea
call
xor
inc
shr
xchg
repnz
jae
popa
push
in
mov
jl
mul
aaa
push
repnz
stc
mov
add
loop
arpl
adc
jge
adc
(bad)
adc
or
push
scas
rcl
(bad)
imul
xor
mov
sbb
in
fwait
lods
lds
push
ret
jl
push
inc
jno
and
and
movs
pusha
or
outs
fdiv
mov
ja
jle
call
fbld
leave
dec
mov
xor
xor
jg
dec
inc
jl
inc
sar
mov
rcl
test
int3
lahf
lds
bound
repz
aad
test
mov
gs
lock
jne
push
mov
movs
aaa
fcom
imul
out
mov
push
movs
xchg
loope
arpl
inc
clts
xchg
aam
cdq
data16
sub
fiadd
pushf
mov
movs
std
mov
jb
pop
mov
push
cmp
inc
stos
movs
sbb
or
push
std
outs
jns
fadd
loop
retf
xchg
or
test
mov
jg
movs
pop
in
cmp
sub
mov
enter
(bad)
aaa
xor
neg
sar
sub
dec
cmp
lea
ror
outs
pushf
xchg
push
out
mov
stc
cmp
sub
dec
ret
dec
sahf
icebp
xor
mov
xchg
xlat
adc
xor
add
dec
xor
sbb
cli
xchg
xor
jbe
in
hlt
std
inc
pop
mov
xor
add
dec
sbb
movs
mov
in
(bad)
mov
cmp
add
dec
jno
pop
cmp
stc
xchg
sub
add
dec
inc
pop
jno
mov
jnp
mov
mov
sub
mov
lahf
(bad)
cmp
jl
push
nop
das
ret
inc
mov
mov
jb
aam
(bad)
cld
repz
out
and
jg
stc
ja
adc
lods
in
mov
xchg
fs
add
pop
inc
mov
sbb
stc
fst
ins
cmp
stc
mov
lock
fld
jno
xchg
imul
gs
jbe
sub
pop
cmp
xor
dec
jecxz
test
ss
retf
adc
out
int3
jle
ds
repnz
sar
pop
hlt
retf
jbe
retf
mov
test
mov
push
imul
mov
mov
dec
lock
in
jnp
cmp
mov
arpl
call
and
or
cmps
sar
fwait
out
or
add
ins
(bad)
aad
mov
xor
jp
xchg
cmp
and
or
xchg
fisttp
inc
push
sub
lods
lea
ficomp
dec
jmp
scas
mov
je
add
popa
jno
leave
cmp
xor
call
push
pop
jmp
mov
cdq
add
outs
push
scas
jno
cmp
lahf
gs
jns
jecxz
pop
sbb
xchg
pop
fild
cmps
dec
fimul
mov
add
int3
push
add
mov
dec
push
sahf
aad
xchg
sahf
ficom
mov
sub
mov
inc
(bad)
es
aam
nop
push
or
jle
sub
push
cli
inc
clc
mov
xor
arpl
bound
les
push
(bad)
popa
mov
mov
mov
mov
xchg
out
cmp
inc
mov
cs
mov
or
or
jecxz
outs
sub
ins
ret
icebp
out
icebp
inc
lods
test
cmp
add
push
add
mov
(bad)
mov
or
mov
mov
into
stos
aam
test
push
das
jbe
out
inc
inc
sub
leave
cli
lods
jp
dec
inc
aad
jle
loopne
jns
out
dec
frstor
out
dec
mov
mov
fcmovb
iret
mov
mov
mov
fidivr
mov
(bad)
xchg
mov
call
fmul
xor
dec
xlat
xchg
not
pop
or
ja
shr
push
outs
xor
cmp
pushf
mov
lock
xchg
or
sti
fistp
jge
push
test
mov
push
aam
push
lods
pop
xchg
test
push
ud1
mov
in
push
cwde
lods
adc
mov
xchg
jns
or
lea
jns
inc
dec
sub
bound
or
xor
icebp
and
in
mov
mov
popa
adc
pop
dec
dec
xor
fcomp
icebp
and
xor
dec
(bad)
js
jo
lds
lahf
sub
(bad)
mov
dec
dec
outs
outs
xor
jnp
mov
mov
ret
sti
xchg
test
mov
call
sub
ss
push
jae
test
sti
lds
xchg
test
mov
mov
repnz
repz
xor
dec
or
cld
cld
pop
call
aas
cmp
pop
xchg
pushf
scas
or
lods
jmp
das
add
(bad)
jae
adc
lods
shl
and
pop
ss
iret
mov
cmp
fcomp
scas
cld
inc
mov
xchg
lods
mov
ja
sub
shl
fcomi
and
push
xlat
push
push
cld
cdq
icebp
fistp
xchg
nop
fnstenv
jb
ins
mov
scas
in
(bad)
jbe
out
xor
mov
(bad)
into
sub
stos
inc
scas
ficomp
dec
rcl
popf
enter
adc
mov
mov
inc
xor
pushf
inc
lods
je
stos
jecxz
jmp
adc
movs
jbe
fisub
sbb
inc
dec
or
imul
je
shl
dec
sub
add
push
inc
xchg
dec
movs
popa
stos
sub
inc
ds
inc
outs
loope
add
and
lahf
add
mov
sbb
push
(bad)
lods
std
mov
pop
ret
pop
fdivrp
add
les
aam
pop
jl
ds
push
mov
call
or
mov
jmp
mov
adc
icebp
iret
mov
sub
xor
fstp
adc
mov
pushf
mov
loop
push
dec
mov
fmul
xchg
stc
cmp
nop
test
idiv
rcr
in
arpl
push
mov
leave
sub
and
or
ds
fld
shl
add
ins
fiadd
cmps
repz
clc
and
adc
fisub
mov
cli
out
sbb
push
sub
or
scas
pushf
arpl
lods
shr
cld
pop
jnp
xlat
retf
dec
daa
fiadd
pop
jb
xchg
or
mov
push
retf
or
or
retf
arpl
mov
imul
out
cmp
add
gs
inc
fs
pop
nop
stos
fs
gs
mov
mov
or
int3
sub
movs
lods
adc
and
fstp
push
pop
sbb
mov
xchg
(bad)
jg
mov
jo
into
push
rcl
(bad)
inc
shl
push
mov
jp
out
(bad)
je
int
enter
jo
cld
data16
mov
xor
push
jge
dec
pop
aaa
cld
leave
push
or
fucomip
loope
jp
inc
call
and
push
call
fisub
cmovnp
ret
popa
or
loope
mov
fsubr
pop
test
dec
push
mov
or
or
int
add
jecxz
in
in
cwde
leave
fsub
int3
push
mul
iret
mov
xchg
inc
xor
aas
mov
xchg
loopne
add
loopne
and
jnp
cmp
rcr
xor
inc
mov
add
outs
iret
mov
in
jmp
in
xor
and
nop
pop
mov
(bad)
fst
or
jne
mov
aam
js
push
or
aaa
dec
add
inc
(bad)
popa
mov
(bad)
xchg
imul
or
(bad)
not
xor
ror
cmp
popf
(bad)
enter
shl
sti
lods
fdiv
addr16
push
cmps
addr16
test
xchg
test
das
sub
push
sar
xlat
test
sti
xchg
arpl
xchg
cmps
push
inc
fidiv
fsubr
shl
scas
sbb
pop
stos
fwait
(bad)
sahf
in
ret
iret
div
jmp
inc
sub
nop
push
aam
lds
imul
rcr
popf
test
(bad)
sub
push
stos
add
sub
lods
outs
mov
aad
ret
imul
or
fadd
push
push
pop
inc
cmp
in
mov
test
push
cld
sub
retf
cmps
aam
mov
xchg
jge
push
int
cld
jl
fst
lahf
jbe
nop
inc
std
out
mov
adc
mov
dec
mov
mov
loopne
push
sub
inc
cmp
test
retf
push
fld
jbe
daa
jle
push
stos
add
push
ja
ret
mov
addr16
imul
add
out
and
sub
call
jge
dec
xchg
xchg
push
femms
sbb
mov
mov
cs
stos
xor
lds
popa
clc
mov
leave
nop
lods
push
add
repz
sar
adc
repnz
jns
add
sbb
ins
movs
add
push
sbb
nop
sbb
mov
sub
jne
cli
(bad)
dec
data16
sbb
addr16
cdq
test
rep
stc
rcl
pop
xchg
jmp
retf
ror
or
int3
dec
shr
pop
mov
aad
xchg
add
sbb
ja
or
les
(bad)
scas
cdq
lea
mov
loope
push
mov
push
adc
test
inc
(bad)
xchg
enter
xor
mov
inc
mul
mov
fbstp
jmp
fisttp
jnp
xchg
pop
scas
mov
adc
cdq
scas
pushf
fdivr
or
dec
mov
and
shl
fwait
or
gs
fstp
les
xchg
or
adc
stos
dec
fst
mov
fadd
and
mov
adc
pop
icebp
xchg
jl
pop
sbb
or
(bad)
jge
popa
shr
inc
add
inc
sub
add
ins
aad
jns
sbb
pop
jmp
or
mov
jb
sbb
jmp
dec
add
jg
call
xchg
ficomp
mov
gs
mov
fwait
mov
mov
mov
in
lods
sub
adc
ror
aas
cmp
inc
mov
and
jns
ins
(bad)
jmp
out
aaa
cmp
push
mov
cmc
add
mov
xadd
(bad)
mov
loope
inc
mov
xchg
inc
xchg
sub
cmps
mov
adc
adc
xchg
xor
test
and
mov
loope
test
in
xchg
pop
out
jo
cmps
mov
lods
sti
ss
mov
pop
push
(bad)
jp
mov
cmp
dec
xchg
movs
pop
inc
sti
add
cdq
(bad)
xlat
(bad)
fcmovnu
outs
adc
mov
hlt
ret
or
adc
fisttp
push
retf
aaa
stos
mov
sub
loope
sub
push
sbb
out
fldenv
xchg
movs
in
loopne
mov
adc
jbe
pop
mov
adc
call
sub
test
adc
xchg
push
mov
and
test
fstp
lds
pusha
sar
pop
and
add
cmp
sub
jle
inc
in
jb
pushf
iret
dec
dec
aas
mov
push
sbb
ret
not
adc
cmp
rcl
loop
adc
add
int
imul
jne
xchg
cs
mov
sbb
sbb
mov
sub
add
or
bound
dec
mov
xchg
add
mov
loop
pop
mov
bnd
jmp
jecxz
cmp
cld
xor
(bad)
out
dec
dec
lock
neg
sbb
pop
cdq
mov
jb
pop
in
adc
retf
and
in
mov
enter
pop
xchg
mov
loopne
pop
push
mov
outs
push
sbb
adc
sub
int
shr
ds
ret
outs
push
iret
enter
sbb
inc
in
mov
inc
sti
mov
aad
dec
sbb
or
cmc
fwait
aaa
push
mov
daa
jle
sub
add
outs
inc
and
push
ss
pusha
xchg
test
sbb
xchg
out
pushf
jns
or
(bad)
mov
popa
pop
xor
stos
jl
hlt
sub
cmps
mov
ins
add
cmovl
cmps
lds
imul
xchg
or
pop
sbb
jo
mov
or
pushf
ins
mov
xchg
fild
repnz
mov
ins
addr16
jmp
shl
mov
test
aas
test
add
loope
in
sbb
jb
cs
or
pop
or
mov
imul
aas
xchg
(bad)
and
add
out
inc
clc
inc
cmp
xor
dec
xor
mov
data16
stos
xor
(bad)
frstor
int
inc
ss
adc
es
popa
inc
mov
call
(bad)
ficomp
aad
push
push
sbb
xchg
cmp
xchg
xor
int
leave
scas
iret
push
xchg
shl
push
mov
xor
xor
shl
in
lods
in
push
sub
dec
test
repnz
aam
out
mov
mov
inc
adc
test
inc
inc
add
pop
and
popf
sar
gs
aaa
repnz
icebp
or
mov
push
dec
out
call
sub
jbe
and
push
mov
mov
sbb
xor
(bad)
div
jg
dec
pop
jae
lock
nop
add
jge
mov
xchg
test
jne
mov
cmps
push
call
add
mov
dec
rcl
xor
rcl
cmp
addr16
stos
xchg
push
and
mov
ss
cmps
(bad)
xor
mov
or
adc
iret
call
jmp
frstor
mov
dec
jb
cmp
jmp
fnsave
xchg
xor
imul
mov
je
inc
inc
sub
outs
or
shl
hlt
call
xchg
mov
pusha
lods
fdivrp
(bad)
(bad)
add
cs
ins
js
fadd
out
mov
out
nop
ds
and
jo
cld
pop
add
fst
inc
fdivr
xchg
test
xchg
inc
cmp
in
mov
sbb
jae
cmc
add
adc
cmp
mov
mov
ds
iret
and
sub
ret
in
movs
shl
outs
pop
fs
cmc
dec
fisttp
sub
fsubrp
sbb
jle
fst
les
mov
mov
mov
sub
sbb
lods
rcr
mov
xor
mov
mov
mov
xchg
sbb
fdiv
leave
(bad)
xor
pop
pusha
outs
mov
ins
sub
pop
jecxz
jg
add
fsub
xchg
sbb
mov
pushf
xchg
dec
repnz
mov
or
push
mov
rcr
call
inc
or
dec
sub
int
int
jp
test
adc
dec
adc
lock
out
stos
ror
sbb
pusha
xor
lods
lea
jl
mov
or
dec
or
dec
and
lods
fldcw
sub
cdq
pop
repnz
xlat
jnp
cmp
sub
lds
test
sub
xchg
in
push
retf
push
jo
shl
(bad)
jno
imul
xor
lahf
rcl
cmc
xchg
xchg
push
sbb
add
xor
outs
int
inc
lea
push
repnz
jbe
lods
clc
test
sub
inc
dec
(bad)
mov
test
icebp
xor
lds
inc
cdq
retf
out
mov
clc
xor
ret
jnp
aad
lahf
adc
jae
push
aas
or
push
dec
lock
div
rcl
adc
(bad)
cs
mov
xchg
sahf
sub
xor
outs
push
(bad)
cmps
in
push
int
mov
loop
add
pop
bound
push
mov
ja
icebp
inc
scas
add
mov
and
les
fstp
add
push
add
inc
adc
xchg
mov
xor
mov
test
and
or
sub
shl
cmps
(bad)
call
imul
mov
popa
fwait
add
or
(bad)
xchg
jl
mov
inc
arpl
retf
test
sbb
xor
mov
mov
aaa
pop
hlt
jbe
jmp
xor
iret
aas
cmp
stos
xchg
sti
jmp
jo
push
pop
xchg
shl
scas
fmul
mov
sub
lahf
or
imul
dec
sti
ret
dec
or
mov
outs
push
dec
out
(bad)
movs
or
fs
ins
cmp
pop
call
or
push
mov
call
sbb
sub
push
(bad)
fwait
retf
cmps
icebp
xchg
mov
aad
aas
ds
scas
lock
jmp
test
adc
and
inc
lea
dec
xor
fs
loop
pop
sub
int
sar
shr
push
jge
je
jle
inc
push
inc
jns
fwait
daa
or
xlat
test
fs
mov
jge
jle
retf
cdq
clc
mov
dec
cwde
sub
mov
xchg
xchg
loop
ins
scas
push
aam
imul
dec
leave
bound
fidiv
add
or
xor
cld
aad
adc
movd
or
mov
push
js
or
(bad)
stc
enter
xchg
or
xlat
mov
add
sub
add
add
sub
pop
dec
dec
jno
or
in
leave
loop
clc
sub
jb
push
jbe
cmc
xchg
stc
add
je
sub
add
cld
int3
jno
mov
mov
inc
sbb
ja
mov
pop
pop
mov
push
sbb
mov
jg
push
mov
stos
sub
xor
scas
rol
int3
sub
lods
or
clc
sbb
cli
dec
je
and
jl
cmc
cli
push
mov
cvtps2pd
pop
xchg
sub
out
or
(bad)
leave
sbb
in
jp
cs
mov
mov
scas
cdq
xor
nop
out
imul
mov
in
fldcw
in
jae
push
(bad)
ror
pop
and
inc
push
dec
icebp
(bad)
(bad)
test
lea
movs
shr
xchg
das
es
mov
int3
lahf
adc
adc
pusha
in
fs
into
ins
inc
push
pop
test
fsub
and
push
(bad)
mov
movs
sahf
sar
jno
sbb
mov
mov
in
mov
jo
je
or
fcmovnbe
or
bound
xor
ficomp
(bad)
fsub
ins
movs
mov
aas
and
das
addr16
(bad)
lock
in
retf
inc
pop
dec
sbb
loop
lock
call
aas
sub
adc
ins
es
mov
fs
xor
push
in
dec
jb
add
xchg
push
pop
and
jae
push
icebp
retfw
push
ins
fisttp
cs
and
nop
jo
loope
fwait
mov
xchg
sub
repnz
sti
call
bound
xor
and
jl
in
adc
mov
dec
xor
inc
rol
lods
test
retf
pop
xor
outs
pop
inc
sbb
mov
xor
out
lods
and
fidivr
jp
std
sub
jmp
mov
adc
cmp
push
mov
inc
out
call
pop
xor
hlt
jae
int
mov
xchg
dec
mov
std
adc
cmp
(bad)
into
retf
pop
dec
or
jo
frstor
bound
enter
pop
popf
xchg
(bad)
das
imul
addr16
ss
call
cwde
jle
pop
into
out
or
add
daa
pop
inc
dec
xor
dec
xchg
test
mov
mov
push
ins
mov
loope
test
push
stc
sub
xchg
jmp
xchg
xchg
or
test
push
mov
inc
add
cmc
jbe
loop
or
imul
inc
jge
inc
sub
loopne
nop
adc
mov
fistp
pop
mov
in
xchg
xlat
jge
in
call
iret
cmps
sbb
mov
xor
inc
dec
sbb
das
retf
fcmovnb
sub
rcl
loope
or
sbb
aam
and
xor
stc
dec
outs
sub
cmp
neg
add
mov
dec
cmps
rol
inc
xchg
std
lock
add
es
sub
jne
push
adc
ds
xchg
mov
dec
sahf
jnp
xor
cmps
cld
loope
mov
jmp
jg
jo
pop
mov
sbb
push
rcl
out
out
push
mov
mov
inc
pop
cmp
xlat
in
dec
xor
jo
fcomp
aam
mov
shr
clc
rcr
lds
in
std
jns
nop
jg
push
jge
js
or
ret
setae
jb
push
xchg
aas
xchg
mov
cmps
mov
das
aas
mov
aaa
inc
pop
pop
ret
or
adc
test
leave
iret
in
sar
bound
mov
cmp
outs
popf
inc
adc
ret
inc
pop
xor
and
mov
inc
push
adc
cmp
stos
push
je
js
mov
gs
aaa
stos
(bad)
not
and
adc
sbb
sbb
imul
and
cmp
lahf
test
sub
mov
clc
add
push
mov
out
leave
push
push
mov
or
jmp
mov
sbb
jbe
jnp
mov
pushf
pop
mov
int
jmp
sbb
nop
jp
test
sahf
pop
fcom
out
and
fimul
dec
xor
sub
mov
dec
js
pop
push
xchg
mov
inc
mov
std
or
pop
sti
call
(bad)
mov
mov
movs
jne
adc
push
lea
enter
jmp
leave
mov
cs
repz
gs
xor
sti
pop
gs
or
(bad)
xchg
jl
mov
lods
pop
mov
mov
or
(bad)
cld
rcr
or
or
sar
movs
cmps
sbb
imul
iret
xchg
outs
out
inc
test
inc
lods
add
xchg
mov
or
adc
or
fisubr
jb
cwde
sbb
adc
xchg
fwait
xchg
fistp
sbb
jp
out
xchg
dec
dec
rcr
mov
call
xchg
imul
push
jns
dec
jmp
sub
dec
and
call
(bad)
mov
bound
sub
add
and
or
pop
cmp
ror
sti
mov
stos
fdiv
or
jle
cmps
adc
(bad)
cli
js
or
clc
int
push
jae
xor
daa
mov
push
popa
(bad)
mov
mov
stos
jmp
test
jg
push
mov
push
adc
cwde
xchg
jl
loope
add
xor
mov
push
push
cmp
fimul
mov
mov
push
sbb
test
mov
mov
pop
jp
fiadd
xchg
jmp
lods
sete
pop
scas
fld
xchg
cmc
jg
inc
push
loop
pop
mov
xor
aam
xchg
dec
sti
push
leave
das
or
push
pop
loop
stos
iret
outs
xchg
ret
sbb
mov
in
loop
fimul
mov
movs
mov
or
sbb
pop
sub
mov
loope
ins
(bad)
call
push
pushf
pop
fwait
pop
inc
add
mov
cdq
cmp
sub
xchg
das
sar
rcr
dec
mov
stc
inc
dec
es
jno
adc
jne
(bad)
hlt
or
xor
push
jne
inc
sub
xchg
je
adc
test
lahf
outs
fbld
rcr
dec
sub
xchg
repnz
mov
sub
xor
into
mov
je
es
imul
enter
outs
push
out
ror
sbb
mov
xchg
dec
pop
mov
lock
jle
mov
mov
mov
adc
fwait
icebp
cmps
mov
dec
jbe
ds
mov
jle
aas
fsub
sub
push
dec
and
add
sub
popf
mov
mov
imul
push
jl
adc
pop
test
aas
ins
xor
std
push
stos
lods
fsub
mov
adc
lods
and
data16
mov
push
xlat
mov
adc
repnz
add
xor
shl
stos
xor
adc
pop
or
mov
pop
xor
adc
jns
call
movs
mov
jbe
sub
mov
leave
std
sti
push
cmp
cmp
dec
cdq
adc
outs
inc
ss
add
mov
xchg
test
mov
pop
sbb
out
movs
xor
push
les
and
fisub
sahf
retf
test
and
sbb
int3
jl
xor
mov
sbb
fst
dec
lock
sub
pop
push
xchg
xor
jge
call
ret
mov
les
push
mov
mov
and
cmp
jb
pop
sub
or
sub
xor
push
xor
movs
(bad)
mov
mov
in
xor
cmp
jne
mov
fwait
xor
push
or
outs
arpl
push
inc
and
in
js
mov
popa
scas
(bad)
pmulhw
and
cmp
xor
shr
push
mov
xor
stc
xor
inc
sub
out
scas
popf
jl
xor
mov
lock
int
mov
jnp
push
inc
and
jns
mov
ds
push
jns
call
rcl
adc
fimul
(bad)
aad
mov
adc
push
fild
aad
and
xor
imul
mov
sub
in
lods
nop
outs
(bad)
call
jno
push
fist
push
push
(bad)
lea
stc
fldenv
nop
ret
mov
(bad)
outs
mov
jbe
es
stc
fs
lea
lock
mov
repz
adc
cmc
pop
mov
outs
dec
jge
ins
popa
rcr
and
pop
lods
mov
xor
pop
test
mov
push
clc
mov
adc
push
ja
test
cld
test
sbb
ins
xchg
mov
and
in
adc
ror
push
adc
in
clc
and
call
mov
mov
lods
pop
sub
sub
sub
das
xchg
int
adc
pushf
mov
adc
jecxz
adc
adc
mov
das
sbb
mov
pop
and
sub
ror
int
xchg
push
push
lds
out
icebp
daa
je
jbe
push
icebp
not
icebp
cmp
xor
or
fcomi
add
sahf
stos
jmp
leave
lea
repz
icebp
push
inc
mov
xchg
mov
fmul
push
and
dec
pop
adc
lock
outs
dec
jae
pop
lods
stos
push
cmps
mov
mov
mov
sub
sbb
call
cmp
add
push
dec
mov
adc
sub
dec
or
and
mov
sbb
test
lods
imul
sub
inc
xor
cli
mov
jo
push
aaa
dec
fs
ret
jle
add
imul
xchg
inc
mov
cmp
jecxz
push
cmp
popf
pushf
loop
mov
jns
clc
mov
dec
aad
scas
pop
xchg
ss
or
xchg
jo
retf
outs
adc
jbe
mov
arpl
xchg
dec
push
xchg
mov
jp
dec
push
cld
xlat
mov
fnsave
rcr
mov
nop
scas
push
nop
(bad)
neg
or
(bad)
lods
sbb
ds
outs
dec
repz
and
bt
mov
loop
adc
out
(bad)
movs
in
int
dec
addr16
fwait
jg
jns
popf
rcr
retf
xor
imul
push
mov
or
mov
sbb
inc
(bad)
mov
(bad)
cmc
stc
hlt
arpl
push
imul
push
inc
enter
lods
xchg
daa
sub
xor
cmp
jnp
sub
mov
adc
loop
scas
inc
sub
sahf
aaa
in
sti
dec
je
stos
cmp
cmp
pop
inc
jl
(bad)
movs
mov
gs
mov
ret
pop
push
push
mov
jbe
xchg
sahf
cmp
push
jle
aaa
ret
mov
push
int
sar
sbb
xor
push
pusha
cmps
push
cmp
mov
aas
add
shl
add
mov
test
jmp
(bad)
shl
js
jb
out
aas
dec
movs
fld
add
gs
clc
sbb
imul
sbb
push
add
push
xor
cmp
xchg
sysexit
or
xchg
ret
in
mov
adc
test
pop
sub
adc
inc
xor
mov
outs
jge
sahf
popa
xor
dec
dec
or
pop
lock
sub
xchg
fstp
or
out
mov
jo
pop
ror
jge
cs
push
adc
adc
mov
xor
in
out
cmp
pop
sbb
and
mov
jmp
xor
loopne
ins
pop
xchg
sbb
sahf
fcmovb
lods
or
xor
sub
pop
out
xor
xor
es
lock
nop
or
dec
push
(bad)
cmp
xchg
(bad)
fistp
sub
cmc
add
test
data16
sbb
gs
or
inc
cwde
jle
pop
mul
loop
cs
in
clc
cs
xor
stos
sahf
std
mov
rcr
pop
inc
push
out
sar
fnstsw
adc
call
fisttp
lea
add
sahf
ins
sub
call
xchg
ret
push
rcl
test
fwait
and
or
hlt
imul
push
sub
lock
daa
or
cmp
sbb
and
jns
push
std
pushf
push
aam
(bad)
or
test
xor
cmps
shr
and
sbb
pusha
mov
cli
sbb
add
and
inc
jb
push
(bad)
icebp
push
add
popf
push
mov
pop
pop
into
fidivr
sbb
shl
in
call
mov
sbb
es
enter
out
jp
and
dec
and
js
test
scas
jnp
inc
movs
fucomi
ins
test
pop
rcr
jae
dec
dec
jbe
pop
imul
pop
pop
xchg
or
mov
imul
pop
pop
pop
mov
loopne
inc
es
dec
call
pop
add
push
std
lea
jns
mov
in
pop
pusha
xchg
fcom
cmps
in
and
inc
fnsave
pop
data16
sar
fstp
inc
pop
cld
mov
lds
ret
cmp
adc
mov
or
add
mov
pop
ret
jecxz
xchg
imul
sub
add
mov
sbb
push
inc
xchg
xor
mov
mov
sbb
xchg
add
push
adc
jg
cs
addr16
outs
in
hlt
enter
test
push
sub
inc
js
scas
(bad)
fcom
fstp
sub
mov
or
scas
jl
add
push
sbb
ins
inc
and
mov
cmps
xchg
(bad)
jg
mov
mov
ret
mov
pop
lock
mov
out
lds
mov
js
pop
push
push
repz
inc
in
clc
mov
sysret
jl
(bad)
jmp
in
leave
mov
add
pop
jne
and
xor
mov
xor
pusha
xor
cwde
mov
aaa
fistp
xchg
cmps
cmp
or
lahf
xor
dec
cmp
mov
sub
or
xor
push
jle
(bad)
mov
ret
iret
pushf
xchg
lods
mov
adc
push
sub
imul
cmps
int3
loopne
lahf
xchg
mov
jae
add
dec
in
sti
outs
dec
ror
cmp
jo
fwait
loope
cmp
and
sub
jne
sar
into
sbb
(bad)
fldz
mov
xlat
cmp
cmp
aaa
jp
loopne
outs
fisttp
and
add
jno
sub
enter
out
and
xor
call
mov
out
pop
ins
mov
push
push
add
mov
lahf
call
pop
mov
test
mov
jmp
and
(bad)
out
rol
xchg
adc
push
hlt
inc
iret
pop
push
push
mov
out
jno
in
pusha
xchg
mov
add
inc
adc
sbb
enter
sub
xor
xor
neg
iret
sbb
cli
mov
mov
popf
mov
add
and
jno
lahf
jno
or
sub
repnz
dec
xor
fcomp
mov
aas
mov
sub
fisttp
aam
dec
dec
push
imul
loop
mov
sub
add
push
add
leave
cdq
and
xchg
pop
jl
jnp
imul
push
add
imul
mov
fcmovnbe
mov
ficom
lahf
loopne
(bad)
out
adc
or
sbb
xchg
ss
rol
sbb
dec
mov
bound
push
in
pop
cmp
in
pop
or
or
mov
adc
fisttp
inc
pop
mov
cs
push
dec
repnz
out
mov
fiadd
cmc
rcr
(bad)
adc
stos
adc
les
int3
out
xchg
icebp
jmp
add
ret
(bad)
adc
pushf
mov
mov
cli
and
aad
mov
cli
push
push
sub
cmc
iret
xor
call
in
mov
adc
push
cld
add
inc
retf
call
shl
mov
rcl
or
movs
ins
cdq
lods
or
das
lea
cli
xchg
or
fmul
inc
fstp
outs
jge
pop
lock
call
and
xchg
bound
xor
inc
sbb
(bad)
and
int3
dec
push
ret
in
xor
loope
mov
(bad)
push
and
in
jge
xor
xchg
mov
jnp
stos
push
ror
out
inc
hlt
movs
xor
inc
inc
push
mov
aaa
pusha
imul
loope
push
xor
xchg
add
mov
outs
mov
xor
mov
jnp
xchg
cwde
mov
inc
or
lea
(bad)
pop
cmp
lods
stos
daa
xchg
xor
inc
jns
dec
sbb
lods
or
hlt
call
sub
sbb
stos
aaa
adc
adc
jo
mov
and
shl
out
mov
cmp
std
mov
out
int3
stos
movs
sub
aas
fadd
outs
jmp
push
into
lock
leave
cs
mov
out
cmp
dec
dec
xor
test
int
xchg
push
add
and
cmp
es
out
inc
lahf
pop
jns
mov
cli
retf
cli
in
icebp
adc
push
dec
cmp
adc
out
das
pop
pop
rcl
adc
inc
sub
loope
inc
sub
stc
push
push
mov
xchg
pop
or
inc
mov
or
sub
jo
pop
xchg
aam
add
xchg
call
adc
mov
sub
ds
push
jmp
ins
hlt
xor
pop
mov
cmp
movs
jnp
pusha
cmpxchg
xor
test
lahf
scas
jmp
cmc
arpl
repnz
imul
sbb
jae
out
std
loope
pop
nop
bound
mul
xchg
pop
jae
into
jb
aas
sub
retf
mov
iret
mov
mov
dec
mov
mov
inc
xchg
mov
rcr
cmps
scas
sub
sub
and
push
pop
icebp
cmps
fs
push
mov
xchg
mov
dec
iret
stos
out
ret
ins
jbe
mov
cmp
push
std
call
mov
pushf
popf
addr16
dec
int3
mov
test
or
int
jb
je
out
ds
cmp
not
fld
mov
push
imul
and
cld
movs
add
jmp
loop
push
xchg
imul
scas
jns
and
shl
jns
data16
or
repnz
mov
lods
movs
rcr
jg
jo
shl
ret
mov
js
es
pop
jg
aaa
fldenv
mov
and
sub
loope
pop
aam
xchg
ins
xchg
jp
xchg
jecxz
sbb
test
into
adc
ret
jnp
mov
add
dec
mov
mov
dec
adc
aam
test
push
cmp
sahf
in
inc
or
mov
push
adc
sub
fisub
fbld
ds
push
add
out
xchg
pushf
jnp
mov
(bad)
adc
mov
cmp
or
pop
add
adc
pop
cmc
jmp
sti
into
fldcw
xchg
mov
mov
dec
retf
dec
push
js
mov
(bad)
std
ret
or
xor
or
gs
lods
cmp
add
aaa
leave
jl
mov
fdivr
adc
push
fcom
dec
mov
mov
or
xchg
in
mov
inc
jge
rol
fwait
sbb
jecxz
fild
imul
push
es
fs
inc
adc
fisub
rcr
test
sub
and
test
push
call
pusha
mov
dec
bound
fisub
add
mov
mov
std
sbb
stos
pop
xchg
add
test
out
test
mov
push
mov
(bad)
hlt
std
add
push
retf
add
jmp
cmps
mov
ins
cmp
cmp
icebp
(bad)
daa
sbb
and
cli
jo
mov
nop
outs
sub
mov
stos
out
add
sbb
das
call
aaa
add
dec
test
cmc
push
or
retf
repnz
js
into
sub
push
sbb
getsec
cwde
add
cs
arpl
retf
std
adc
jg
mov
stos
adc
les
call
cld
sbb
in
lock
add
ja
out
pop
arpl
xor
xchg
(bad)
inc
pop
pop
and
sub
mov
pusha
test
sbb
(bad)
lahf
cmp
in
mov
je
jbe
or
cmps
sub
mov
jmp
out
cmp
nop
repz
add
xchg
lea
call
xchg
pop
xor
inc
mov
jo
fimul
sub
rcl
sub
cmps
bound
mov
xchg
push
sbb
jo
sub
ret
sbb
retf
mov
ficom
jl
lahf
ja
leave
jb
adc
scas
ret
pop
mov
fbld
mov
int3
in
(bad)
imul
and
adc
add
stc
jge
retf
call
adc
inc
mov
push
out
and
inc
push
dec
dec
push
or
sbb
scas
push
icebp
or
mov
xor
scas
adc
(bad)
neg
test
jmp
push
aaa
lods
xchg
mov
mov
jecxz
xor
out
add
lahf
jne
into
jge
jno
mov
cwde
and
stc
in
push
inc
pop
icebp
rol
stos
jb
fs
sub
push
popf
inc
cwde
cs
je
cmps
jg
mov
jnp
xchg
sti
bound
inc
or
(bad)
call
pop
adc
xchg
lods
cwde
jecxz
push
rol
mov
xchg
je
push
fldenv
int
popw
pop
ss
mov
xor
xlat
push
ins
push
pop
hlt
sbb
add
dec
adc
mov
fsubr
cmp
xchg
fst
sbb
daa
or
ja
test
sbb
mov
and
ins
test
push
repnz
mov
or
hlt
fistp
xchg
pop
out
aad
stc
or
adc
xchg
sbb
fisttp
mov
aaa
xchg
jnp
fistp
fprem1
mov
cmp
cwde
and
mov
mov
fmul
mov
push
stos
and
loop
(bad)
pop
pop
ins
mov
mov
mov
add
jl
and
xor
scas
jmp
(bad)
int3
aad
pusha
inc
jb
bound
fcom
dec
lock
push
inc
pop
mov
es
mov
aam
sub
cs
out
sbb
loope
mov
or
add
xor
pop
sbb
xchg
xor
mov
xor
jmp
xor
sub
add
pop
pop
ja
mov
adc
xor
test
cs
fimul
test
retf
mov
sub
cmp
test
fdiv
dec
dec
sbb
mov
dec
adc
sbb
je
lea
xlat
cli
mov
mov
mov
inc
xchg
test
lahf
fs
jns
add
xchg
repz
mov
mov
dec
push
in
xchg
adc
cmp
inc
cs
daa
adc
sub
scas
loope
cmp
ror
push
icebp
addr16
and
hlt
dec
call
mov
push
add
pop
sahf
(bad)
fcomp
sub
xchg
or
fwait
push
pop
je
add
mov
mov
pop
mov
cmps
sahf
imul
hlt
mov
in
xor
xchg
mov
rol
cmp
loop
int3
out
bound
js
movs
push
das
jbe
cmps
mov
mov
pop
add
adc
repz
push
out
sub
pop
xor
or
retf
ja
fimul
rol
jb
push
pop
mov
push
pop
test
xchg
jmp
add
add
frstor
xor
dec
or
(bad)
jns
daa
jmp
mov
mov
pop
xor
xchg
cmp
push
and
dec
(bad)
xchg
gs
dec
xor
(bad)
or
xor
pop
inc
xchg
dec
(bad)
pop
cmp
pop
inc
dec
xor
mov
jno
sbb
ja
scas
repnz
dec
push
jnp
mov
push
loope
call
or
jl
pop
sbb
test
xor
outs
push
popf
sub
cmps
adc
rol
adc
out
adc
push
dec
into
daa
leave
and
inc
scas
lock
shl
pusha
(bad)
scas
jbe
xchg
(bad)
lods
adc
and
sbb
in
jns
jo
in
and
push
xchg
sub
pop
pushf
dec
arpl
pop
and
aad
pop
pop
loopne
mov
test
sbb
mov
sub
push
cmp
loop
stos
sar
adc
cli
(bad)
add
cs
jnp
push
outs
xor
adc
push
bound
(bad)
aam
adc
popa
loop
pop
idiv
gs
dec
rcl
lahf
loope
hlt
cmp
and
push
aam
sub
sub
cmp
mov
cmp
bound
fsubr
movs
fcom
pop
fist
mov
(bad)
xor
mov
arpl
push
loop
(bad)
test
clc
mov
aas
cmp
fist
mov
out
in
aas
loope
call
clc
icebp
fdivr
pusha
jmp
cmp
std
sbb
mov
hlt
adc
jl
jg
mov
lahf
repnz
mov
(bad)
shr
cmp
dec
dec
mov
lods
sbb
(bad)
add
inc
lods
push
and
test
lock
das
lock
aam
pop
(bad)
sbb
fxtract
dec
sbb
retf
cmp
xchg
xchg
sub
push
adc
pusha
dec
enter
adc
pop
jae
add
push
cmp
cmp
adc
sub
fndisi(8087
div
stos
lock
adc
call
ins
or
xchg
loope
adc
xchg
pusha
sub
adc
pusha
jno
xor
call
adc
cmp
push
inc
inc
jmp
(bad)
(bad)
jmp
gs
add
icebp
mov
fdivr
mov
add
lock
sub
idiv
sbb
ds
push
add
mov
shl
add
cld
inc
out
leave
cmps
fld
dec
pushf
and
iret
sahf
or
push
fisub
and
cdq
xor
lahf
mov
cmps
xchg
jns
inc
mov
movs
pop
jp
cmp
mov
jne
ins
sar
in
leave
push
ret
jnp
call
shl
push
cmps
int
and
imul
xchg
nop
call
pop
inc
xchg
mov
adc
push
std
or
inc
or
not
jge
sub
inc
gs
mov
stos
lahf
sub
jp
jp
push
test
inc
push
jno
jmp
daa
cwde
fdivr
mov
ja
or
add
rcl
div
icebp
pop
jmp
adc
add
dec
rcr
xchg
xchg
pop
outs
or
jns
push
retf
mov
jns
and
xchg
ss
js
push
push
jne
ins
jne
aaa
pop
out
mov
pop
test
or
cmc
fxtract
fistp
cmp
test
pusha
xchg
mov
mov
cmp
enter
in
shl
lock
popf
inc
push
leave
jmp
or
push
inc
pop
fmul
add
cmp
push
push
mov
pop
fs
jle
das
mov
repz
fdiv
retf
loope
mov
mov
mov
mov
inc
add
add
lds
pop
dec
aad
add
repz
popf
push
or
push
inc
xadd
mov
sbb
inc
cwde
inc
inc
cdq
(bad)
in
in
das
push
add
in
movs
das
mov
mov
outs
mov
push
in
mov
mov
push
inc
jmp
aaa
gs
int3
mov
(bad)
js
push
pushf
lods
test
push
jbe
jb
fcom
dec
xchg
xchg
lods
dec
dec
fcom
or
pop
cmp
mov
repnz
push
pop
fwait
inc
leave
xchg
pop
pop
cmp
aam
mov
push
arpl
sub
xchg
inc
adc
test
adc
cmc
aam
fnstenv
fild
popf
xor
idiv
dec
xchg
test
and
sbb
leave
xor
pop
sub
jl
test
ret
mov
stc
rol
push
iret
add
jmp
pop
sub
fwait
adc
add
adc
sbb
jmp
rol
adc
sub
lock
sub
inc
les
movs
push
push
rcl
xor
or
inc
shl
sub
icebp
push
adc
or
push
rcr
pop
int
push
push
sub
inc
mov
pusha
sbb
add
jmp
cli
out
push
ror
inc
mov
adc
fdivr
dec
pop
stos
imul
jg
xor
test
and
loope
test
pusha
stc
and
adc
jo
xchg
outs
bound
xchg
pop
xor
fisttp
nop
pop
imul
push
push
movs
and
and
adc
rcr
jmp
sub
retf
mov
xor
bound
xor
test
mov
jne
data16
or
xor
sar
mov
push
jmp
adc
jb
mov
inc
fnstcw
xor
aaa
pop
cmps
std
jno
fadd
ins
cld
pop
test
js
pop
mov
imul
std
cmp
inc
out
adc
shl
push
iret
scas
add
loope
and
rol
cmp
jb
fs
xchg
retf
or
popa
movs
mov
cmps
bound
xchg
cmp
mov
or
mov
mov
jmp
cmps
pop
and
jle
jecxz
inc
sub
ss
jecxz
dec
mov
jle
iret
ret
cli
mov
add
dec
sub
cmp
xor
dec
mov
mov
pop
inc
sbb
ror
cmp
sti
scas
inc
and
pop
jmp
fstp
add
imul
and
pop
or
push
mov
pop
inc
mov
jno
int
pop
cld
arpl
gs
je
fdiv
les
fwait
jo
and
fs
(bad)
out
test
mov
cmp
aaa
fptan
lahf
push
ds
clc
push
sar
add
sysenter
je
cmp
mov
out
dec
outs
out
or
fimul
jae
iret
scas
cmp
call
cmp
std
cld
int3
inc
pop
fstp
sub
enter
pop
(bad)
jmp
inc
(bad)
mov
ret
adc
aas
outs
psrlq
dec
ret
pushf
push
push
and
jne
cmp
lods
pop
mov
push
movs
rol
dec
cdq
push
sar
mov
dec
aaa
push
mov
xchg
sbb
pop
push
add
icebp
into
je
pop
mov
cs
sbb
dec
lods
and
xchg
sbb
fsubr
test
aam
dec
push
movs
xchg
idiv
inc
mov
ins
lds
(bad)
and
or
neg
out
add
inc
rol
pop
and
imul
adc
cs
ja
stc
mov
lods
add
cmc
xor
shl
ss
leave
and
jns
retf
retf
push
cmp
push
sub
shl
push
inc
jno
sbb
fld
outs
push
inc
xor
retf
mov
pop
arpl
les
ds
push
aaa
and
ja
ret
cmp
cmps
cmp
cmp
cld
pop
xor
pop
add
ds
adc
call
xor
mov
fwait
push
mov
cmp
jge
cmp
test
stos
rcl
push
call
sahf
call
add
retf
adc
sbb
mov
adc
mov
jmp
retf
mov
jmp
add
sub
sub
sbb
dec
xchg
shr
jp
cmp
fld
jns
cld
sbb
inc
jb
(bad)
mov
nop
push
nop
add
(bad)
dec
mov
div
sbb
push
js
sar
and
repz
ins
add
or
sub
sbb
pusha
fadd
stc
iret
js
inc
dec
dec
add
mov
cli
cmp
xor
out
dec
adc
imul
cmps
cwde
jns
and
(bad)
mov
mov
fidivr
out
fstp
pusha
xchg
fmul
inc
ret
sub
mov
adc
jnp
and
stos
jmp
call
inc
mov
inc
shl
xor
cmp
sub
bound
mov
mov
xchg
ficomp
leave
mov
mov
iret
test
mov
adc
add
adc
mov
or
inc
mov
cdq
inc
shl
or
inc
outs
pop
inc
into
ds
adc
cmc
in
xor
sub
jae
in
adc
and
stos
push
call
shl
call
cwde
mov
shl
fdiv
or
push
mov
movs
(bad)
push
stc
mov
movs
push
hlt
push
inc
push
cdq
xchg
jmp
push
(bad)
pop
sbb
leave
sahf
dec
arpl
xchg
mov
ds
xor
pop
cmp
fs
lea
out
in
inc
adc
sub
jle
out
inc
call
gs
jecxz
stos
(bad)
jl
dec
cmp
mov
shl
cmp
mov
push
xor
mov
movs
jmp
cli
jo
inc
and
jmp
pop
jnp
adc
add
jl
div
pop
scas
imul
sub
fsub
arpl
cmps
scas
mov
out
dec
out
xor
mov
push
mov
or
push
cmp
inc
ret
repz
mov
xor
or
scas
clc
add
mov
test
scas
shl
mov
xchg
sub
sub
pmovmskb
sub
data16
dec
cmp
cmp
mov
sub
lahf
dec
inc
outs
jecxz
sbb
popf
xchg
inc
pop
push
scas
mov
jo
dec
push
xor
outs
sbb
or
inc
sbb
fld
or
mov
or
ds
in
inc
mov
sub
xor
movs
inc
dec
jmp
bound
adc
adc
(bad)
sahf
arpl
sub
sbb
lahf
mov
xor
pop
iret
add
fisttp
jg
retf
std
mov
pop
loop
jle
jmp
je
xchg
aas
mov
pop
mov
cmp
pop
es
int3
enter
shl
pop
cmovae
jnp
pop
sti
and
fidiv
(bad)
dec
fadd
xor
icebp
xchg
cmc
mov
push
popa
stc
xor
int3
and
xchg
sbb
inc
pop
sub
inc
lods
push
mov
pop
cmp
scas
mov
mov
in
je
jl
xchg
out
mov
xchg
in
ja
loope
dec
inc
mov
xchg
xor
retf
cmp
xor
repz
xchg
pushf
imul
aaa
jae
dec
dec
jno
mov
mov
loope
push
fdivr
repnz
sbb
aas
js
xchg
push
ret
(bad)
sub
scas
hlt
(bad)
pop
jnp
int3
scas
repz
mov
pop
sub
ret
jne
xchg
dec
or
fbld
xor
mov
nop
push
mov
mov
xchg
enter
or
retf
adc
push
fisub
out
dec
popf
sub
adc
dec
dec
test
xchg
cld
imul
stos
or
jl
jns
jbe
enter
jns
xor
into
push
test
inc
mov
inc
pop
stos
xchg
push
jl
inc
mov
ficomp
int3
cmp
in
xchg
push
push
or
das
pop
js
jg
and
xchg
dec
xor
lods
cmp
push
xchg
ins
xlat
iret
ds
or
or
inc
sub
outs
adc
cs
hlt
xlat
xchg
sub
adc
in
rcr
adc
mov
mov
outs
push
or
or
mov
adc
into
and
sub
sub
das
mov
popf
pop
or
mov
jge
fld
(bad)
xor
idiv
inc
outs
fdivp
sub
push
dec
push
(bad)
mov
fisttp
push
iret
dec
dec
ret
test
(bad)
sub
in
push
pop
cmp
fisubr
push
inc
sti
arpl
and
mov
int3
push
rcl
jbe
xchg
dec
bound
mov
cmp
popa
retf
jnp
(bad)
or
stos
jle
pop
popf
adc
out
loop
pusha
dec
inc
addr16
daa
pop
cmp
mov
loop
out
jecxz
or
fld
ds
es
dec
adc
push
imul
ja
jne
mov
ja
and
sbb
(bad)
into
mov
aad
inc
add
cmp
cs
and
repnz
jecxz
call
mov
(bad)
call
dec
out
add
jo
jns
aad
push
call
cmps
mov
pusha
dec
pop
pop
adc
sti
push
xor
xor
in
mov
dec
cmp
rcr
pop
jo
mov
dec
xor
fldcw
inc
mov
xlat
test
sar
rcr
lea
cmovo
mov
mov
fcmovbe
and
jle
xchg
in
js
ret
xor
mov
xchg
test
call
iret
dec
adc
dec
test
lahf
(bad)
and
(bad)
adc
jge
wrmsr
stos
lds
mov
sbb
(bad)
cmp
mov
out
movs
aad
sub
pop
(bad)
jl
push
cmps
lods
adc
mov
inc
mov
pop
xor
out
popa
adc
ret
push
add
push
aad
xchg
fisubr
jo
repz
adc
inc
xor
jg
and
and
mov
ins
cmp
enter
outs
bound
mov
mov
pop
cmp
xchg
sbb
fidivr
xor
addr16
mov
ins
stos
mov
scas
dec
cdq
jnp
or
xor
(bad)
pop
into
dec
cmps
add
inc
(bad)
lock
push
in
int3
mov
fyl2x
dec
mov
inc
stc
xchg
aaa
mov
repnz
fwait
mov
inc
sbb
xchg
and
sbb
clc
sub
add
in
mov
pop
or
pusha
outs
xor
mov
sti
cdq
out
pop
ret
and
ja
mov
jmp
pop
ror
loopne
out
in
(bad)
push
adc
cmp
inc
xchg
lods
aas
mov
call
out
fadd
fwait
in
pop
ds
lock
sar
lds
pop
inc
cmc
ins
sbb
ins
and
push
dec
not
fadd
push
or
fbld
sub
push
dec
test
mov
pop
pop
rol
xchg
stos
fmul
mov
shl
push
xchg
mov
out
ror
mov
xchg
jb
mov
mov
push
sub
fadd
or
jg
xchg
xchg
adc
cdq
daa
mov
jne
test
mov
sbb
out
inc
or
jmp
jge
mov
sbb
add
add
jecxz
mov
jp
or
lods
adc
les
xchg
sti
cmc
mov
jae
mov
xor
fwait
(bad)
out
xor
cmp
loope
ror
push
sbb
sub
loope
or
(bad)
icebp
mov
push
arpl
repnz
mov
mov
ins
cld
jl
or
sahf
mov
es
out
fistp
fsubr
popf
ja
mov
adc
jno
jecxz
cmps
idiv
loope
sub
inc
mov
cmps
xchg
push
(bad)
(bad)
mov
sti
retf
pop
(bad)
mov
(bad)
test
mov
into
lock
fs
push
aaa
mov
jp
loop
push
pop
lods
push
shr
add
inc
hlt
int
mov
outs
jle
dec
sbb
add
xor
cwde
pop
js
mov
xor
aaa
cwde
scas
sub
repnz
mov
icebp
(bad)
xor
aad
push
cmp
(bad)
cli
test
nop
lahf
mov
fild
push
mov
lahf
cmps
ins
jge
push
ds
xor
daa
movs
xchg
in
(bad)
push
push
mov
pop
mov
pop
inc
test
mov
test
or
mov
aam
outs
and
xlat
das
repz
repnz
dec
fdivr
cdq
ret
push
mov
adc
pusha
jmp
fild
push
jae
call
cmc
push
mov
and
call
xchg
push
pop
(bad)
stos
push
adc
fst
es
mov
sub
or
xchg
add
pop
adc
std
jmp
dec
mov
mov
or
adc
jb
jle
retf
clc
xor
mov
dec
mov
jg
sbb
fisub
add
jbe
rcl
mov
pop
sbb
sub
(bad)
pop
adc
outs
jns
je
mov
adc
aad
push
inc
rol
hlt
and
jb
int3
push
pop
dec
out
jmp
push
xchg
and
cmp
mov
and
(bad)
pop
inc
clc
mov
add
and
sahf
gs
adc
adc
dec
push
data16
mov
in
add
aad
aaa
test
outs
sbb
mov
and
in
push
mov
aam
xor
loope
jge
or
and
mov
sub
cmp
fadd
retf
cmp
daa
push
aam
xlat
sbb
shr
cmp
cmps
add
daa
jge
std
sbb
xchg
js
push
fdivr
sbb
cmp
add
push
out
xor
sub
popa
adc
and
(bad)
out
sti
jmp
or
xor
adc
or
mov
mov
or
sbb
loopne
xchg
and
(bad)
call
out
pushf
aaa
dec
(bad)
retf
push
dec
outs
add
push
fs
pop
in
sti
cli
and
dec
dec
inc
xor
lods
fld
movs
adc
xchg
cld
jge
push
push
cld
scas
jecxz
pushf
fcom
mov
das
cmp
sbb
sbb
jne
sub
mov
pop
add
stos
xchg
add
or
cmc
arpl
pop
mov
shl
adc
outs
movs
fwait
retw
push
pop
mov
fstp
adc
mov
dec
fld
sbb
in
inc
test
cmc
cwde
push
sbb
sbb
mov
cmps
mov
lods
cwde
jle
jb
lods
cmp
pop
dec
inc
adc
xchg
mov
in
pop
sar
jns
jmp
mov
mov
add
jmp
adc
jg
mov
jnp
sub
add
and
or
push
ja
cmc
repz
bound
add
push
dec
retf
sub
and
dec
lahf
je
shr
aas
or
pushf
aam
bound
pop
stos
or
dec
movs
fist
inc
sub
mov
inc
cmp
mov
mov
push
das
jb
xor
outs
test
add
fwait
in
(bad)
in
aad
loopne
dec
mov
adc
xlat
mov
pop
xchg
aam
outs
sbb
mov
mov
setl
jge
fld
or
(bad)
pop
mov
push
in
or
jns
hlt
(bad)
popa
je
adc
dec
pop
aam
and
iret
mov
jb
ins
jno
xchg
jecxz
rcl
outs
push
adc
ret
je
xor
sub
xlat
pop
mov
inc
adc
rcr
and
push
fs
sbb
mov
xchg
inc
in
jne
mov
movs
xchg
push
mov
add
mov
test
int3
cmps
jl
ins
stc
push
mov
mov
sbb
nop
xchg
jle
mov
stos
pop
inc
rcl
int3
enter
clc
retf
xor
out
fwait
loop
stc
dec
shl
outs
xchg
mov
shr
pop
aam
mov
sbb
cmp
inc
imul
pop
xchg
fcomp
jne
imul
jp
pop
xchg
scas
sbb
gs
mul
mov
adc
sub
aas
or
sbb
pop
or
inc
push
jae
and
dec
loope
sub
cmc
sbb
gs
adc
mov
xor
xchg
mov
fcmovnbe
adc
mov
mov
fs
xchg
jbe
pop
xchg
aaa
and
int
shl
out
sahf
hlt
sbb
cli
clc
jg
mov
mov
fcomp
movs
mov
push
cld
dec
aam
(bad)
mov
bound
outs
and
ds
or
scas
loopne
sbb
out
dec
mov
adc
(bad)
mov
jge
jecxz
out
sub
popa
add
imul
nop
scas
and
imul
cmc
fimul
icebp
or
xchg
xchg
mov
xor
xor
cmp
(bad)
cs
cs
std
xor
or
cmp
mov
ins
lods
sub
sub
pop
sub
push
stc
out
jmp
sbb
in
loope
ret
pop
enter
je
int3
in
mov
(bad)
cld
call
mov
sub
and
in
arpl
mov
loop
neg
outs
leave
add
jge
pop
jae
lea
movs
scas
(bad)
cmp
mov
(bad)
std
pmaddwd
call
cmp
mov
sar
xor
mov
or
jmp
out
push
lock
cwde
mov
hlt
jne
ficomp
jbe
jnp
xor
rcl
imul
push
shl
js
adc
fild
push
in
add
pop
call
stos
std
das
mov
shr
call
mov
or
mov
sar
mov
popf
movs
shl
je
cmp
push
add
arpl
loopne
jecxz
jl
add
(bad)
jl
dec
dec
call
xor
push
shr
sub
inc
scas
pusha
pop
mov
cwde
xchg
pop
push
pop
mov
cmps
push
or
loop
out
int
xchg
adc
(bad)
adc
std
cmp
cdq
jg
mov
stc
cmp
mov
je
inc
cdq
and
cmp
xchg
dec
adc
loopne
adc
pop
aas
mov
ja
out
pop
xchg
lds
jo
mov
pop
adc
mov
retf
out
xchg
in
dec
or
mov
fwait
xchg
dec
out
dec
(bad)
test
test
aas
jae
loop
mov
sub
ficom
lea
xor
sub
stc
gs
inc
not
clc
push
fs
fs
cmp
and
call
and
sahf
dec
loop
fldcw
pop
push
xchg
(bad)
xor
pop
xlat
lea
inc
add
push
jae
add
fs
mov
sbb
not
cmp
push
adc
ins
icebp
and
lock
mov
(bad)
and
mov
and
stos
in
or
and
int3
sub
ss
lods
enter
sbb
aas
cli
or
cmp
sbb
cmp
shl
jmp
ret
mov
and
mov
jbe
push
sbb
mov
out
xor
pushf
mov
js
mov
std
xor
mov
int3
mov
inc
add
mov
pop
arpl
jmp
push
test
mov
call
jle
inc
and
xchg
or
sbb
je
push
fistp
cmp
sbb
jmp
dec
cmps
popa
pop
in
mov
and
popa
pop
ins
jge
mov
xor
sbb
and
push
(bad)
push
jo
jge
aaa
jg
cld
aas
jmp
xchg
jecxz
mov
rcr
sub
ret
leave
adc
ins
fdivp
mov
rcl
sub
cmp
ror
dec
mov
jecxz
or
push
pop
dec
stc
sub
lahf
and
jmp
out
(bad)
or
test
sub
fmul
fsubr
xchg
mov
pop
add
xchg
cmp
cmp
in
xchg
shr
mov
lock
dec
xchg
inc
xchg
gs
addr16
test
mov
call
inc
push
mov
clc
push
xchg
xchg
mov
push
test
ins
ss
cli
cwde
call
adc
or
movs
inc
lock
movs
jb
dec
sbb
cmp
popf
pop
(bad)
retf
push
ja
push
jecxz
dec
inc
dec
lock
movs
cmp
jle
popa
outs
inc
pop
push
pop
xor
ret
xchg
push
outs
mov
fidivr
cmp
aam
ficomp
int
in
ret
jno
cmp
add
push
jl
sbb
pop
jnp
bndstx
jne
inc
call
and
pop
mov
pop
dec
sub
into
or
inc
lahf
mov
and
clc
arpl
xchg
mov
adc
data16
fs
arpl
iret
mov
xlat
mov
sbb
aaa
(bad)
out
es
rcl
xchg
sub
push
out
pusha
jno
mov
int
or
test
cli
ror
add
cmc
mov
mov
aad
pop
jns
repnz
mov
in
in
xor
(bad)
popa
jmp
sub
mov
jl
idiv
push
aam
iret
test
int
sbb
rcr
add
dec
xor
mov
mov
xchg
es
cmp
ins
and
outs
test
(bad)
int
xchg
cmp
mov
icebp
cmp
mov
inc
pop
or
in
fsubr
push
xlat
pushf
mov
lods
enter
sub
push
add
jge
mov
xor
xchg
ins
add
xchg
mov
cwde
addr16
xor
scas
xchg
rcl
pushf
cmps
dec
sub
loopne
out
sub
stos
lahf
mov
aas
and
jb
sbb
add
inc
adc
mov
clc
push
inc
fidivr
jg
inc
out
ret
push
outs
pop
mov
push
loopne
xchg
seta
xchg
mov
jb
test
mov
push
lea
cli
repz
movs
loope
dec
mov
jns
cmc
push
mov
xor
or
xchg
sbb
jmp
dec
sub
ret
add
inc
dec
jnp
jbe
cmp
adc
or
scas
leave
cld
inc
call
push
test
icebp
(bad)
jmp
xchg
mov
push
cwde
xor
push
test
xor
dec
je
rol
stc
(bad)
lods
jle
mov
int
rcl
cmp
xor
or
in
push
in
or
in
jae
shl
mov
mov
repz
iret
retf
sub
dec
sbb
jp
push
movs
fdiv
mov
clc
mov
loop
and
mov
je
das
call
ins
rcr
xchg
(bad)
sbb
adc
mov
push
push
jb
mov
in
daa
nop
mov
mov
pop
adc
mov
push
call
fst
mov
cwde
imul
adc
std
sub
sub
add
lods
add
or
ret
std
sar
jecxz
inc
mov
outs
adc
and
fisttp
aaa
mov
das
xor
stc
aas
ret
sbb
cwde
jg
int
lea
sbb
adc
adc
cli
jg
fcmovnu
pop
rcr
push
mov
mov
test
das
or
mov
iret
mov
pop
pushf
xor
addr16
movs
adc
sbb
int
std
out
cli
bound
or
add
cli
push
popa
retf
jb
push
stos
push
es
imul
lods
sbb
jnp
mov
fistp
add
push
lods
cmp
inc
popa
fisttp
aam
dec
mov
enter
hlt
in
aad
cmc
(bad)
jnp
(bad)
lahf
call
into
cmps
(bad)
sti
lods
pop
jp
scas
pop
inc
inc
sahf
add
mov
sub
push
dec
ror
jmp
jnp
pusha
xor
xor
push
aaa
scas
sub
mov
sub
imul
adc
push
test
xchg
mov
xchg
mov
(bad)
(bad)
sub
push
or
mov
adc
retf
dec
out
fild
pushf
ss
adc
cmp
inc
js
jns
sub
cmps
xchg
push
jmp
stc
add
jp
ja
add
mov
(bad)
aam
cmps
add
mov
dec
mov
addr16
mov
jne
movs
out
sub
sub
mov
int
xlat
push
push
(bad)
stc
leave
in
shl
js
dec
add
xchg
dec
iret
jbe
mov
sub
dec
retf
fdivr
int3
mov
ror
sub
cmc
cs
add
nop
fwait
or
js
pop
xchg
push
std
push
test
pop
jmp
(bad)
shr
push
sahf
pusha
add
and
jns
std
add
sbb
ret
and
jp
shl
test
jne
push
mov
aas
or
call
xor
push
lods
stc
leave
add
sar
(bad)
jmp
out
xchg
call
mov
push
leave
cs
jo
(bad)
into
out
(bad)
popf
jne
inc
shl
test
push
call
push
fisub
neg
jge
clc
cmc
sbb
mov
mov
fsubr
xchg
or
les
(bad)
or
arpl
das
or
dec
dec
leave
(bad)
jmp
in
jecxz
mov
and
ds
jge
je
dec
call
lahf
cmp
xlat
push
cmp
push
mov
(bad)
scas
pop
rol
cli
mov
pusha
and
fisttp
cmps
sbb
scas
or
movs
fs
in
push
lea
xchg
addr16
cli
push
pop
in
(bad)
push
sub
ror
mov
loope
sub
mov
mov
jmp
push
inc
ja
pop
mov
and
adc
mov
sub
xor
jmp
push
xchg
in
sbb
cmp
pop
stc
sub
adc
in
mov
or
and
mov
(bad)
js
sub
inc
daa
cld
adc
fwait
jmp
xchg
or
and
imul
push
cmp
mov
(bad)
xchg
call
cmps
pop
mov
(bad)
and
sub
out
adc
loope
loope
cmp
add
jae
cdq
mov
es
cld
cmp
push
adc
retf
int3
stos
scas
xlat
dec
mov
shl
aaa
jno
mov
retf
or
fmul
push
inc
dec
add
(bad)
retf
xchg
add
dec
jne
mov
pop
(bad)
inc
adc
sbb
push
aam
mov
fmul
fidivr
popa
dec
add
fdivrp
cmp
test
add
add
and
lds
add
dec
(bad)
and
movs
bnd
ds
sahf
nop
jg
push
nop
jae
aad
mov
loopne
inc
jecxz
(bad)
ret
mov
sub
dec
cmp
ins
mov
jnp
mov
push
fld
xchg
addr16
mov
test
xchg
inc
mov
cdq
dec
les
loopne
aaa
(bad)
push
jns
(bad)
sub
stos
dec
push
ffree
jnp
int3
repz
inc
sub
dec
push
loope
push
loopne
fstp
pop
pop
scas
add
test
in
adc
mov
push
cmp
daa
jg
pop
mov
(bad)
idiv
repnz
fwait
ret
push
inc
mov
xchg
stos
out
fcomp
sbb
add
jmp
ret
bound
or
cmc
mov
imul
gs
push
sti
lahf
push
add
pop
jl
cmps
test
push
sub
not
ds
push
int3
(bad)
call
jge
push
arpl
out
lea
xor
xor
fsubp
js
sub
xor
fiadd
punpcklbw
cmps
add
xor
push
adc
jg
jg
jg
popf
adc
adc
aad
and
in
mov
adc
mov
std
push
in
push
xor
pop
pop
jg
retf
or
rcr
adc
lods
test
and
loop
into
not
mul
add
push
enter
mov
std
popa
inc
inc
inc
test
js
xchg
fisubr
mov
pop
call
pminsw
sub
cmps
inc
push
hlt
gs
inc
aad
out
out
cdq
rcl
movs
sbb
clc
push
xchg
sbb
mov
sub
int3
cmp
pop
mov
jo
gs
ds
jg
sbb
cs
mov
aam
ret
add
sub
mov
ds
add
xchg
mov
mov
lahf
shl
xor
jae
pop
dec
fwait
jae
in
xchg
push
leave
pop
inc
aam
call
and
lahf
les
ds
je
es
cdq
inc
jb
mov
sbb
mov
cld
sbb
mov
pop
frstor
scas
fcmovne
scas
mov
int
stc
fcom
push
in
jl
pop
inc
pop
xor
mov
inc
pop
int
or
mov
movs
pop
cmp
dec
or
push
adc
xchg
icebp
mov
or
popf
sub
or
js
cmps
inc
sbb
leave
mov
mov
fld
push
cmp
out
mov
imul
or
outs
lods
aaa
mov
or
adc
mov
lods
or
sub
test
xchg
cli
fstp
rol
sbb
dec
xor
fs
sub
inc
mov
mov
sbb
leave
popa
push
stc
aas
or
icebp
jae
repnz
pop
nop
xchg
dec
aaa
mov
fld
and
pop
lea
movs
mov
gs
sub
pop
inc
cmps
jbe
xchg
sti
call
push
in
leave
inc
add
add
add
adc
mov
jp
adc
stos
add
sti
add
xchg
inc
(bad)
out
retf
cld
push
pop
popa
push
jno
cmp
inc
out
jle
add
add
mov
popa
lds
xchg
fldcw
loopne
in
enter
fs
push
movs
and
popa
push
or
imul
inc
sbb
jge
jno
or
div
dec
arpl
mov
es
loopne
mov
push
dec
inc
popa
mov
xor
jno
sbb
(bad)
in
mov
sbb
pop
(bad)
icebp
cmp
iret
mov
jge
call
fisub
(bad)
inc
lods
push
outs
push
mov
test
pusha
cmp
stc
mov
pop
mov
mov
dec
in
icebp
out
ret
jne
jb
scas
jge
dec
test
mov
inc
stc
jp
pop
lahf
jns
xchg
sahf
lea
imul
xchg
sub
lods
mov
jg
out
xor
cmc
dec
mov
jp
sbb
outs
push
shl
mov
sbb
mov
fisub
inc
mov
mov
push
stc
not
das
push
enter
rcl
(bad)
pop
adc
jne
test
xchg
and
sar
jae
cmp
cmps
jb
xchg
xchg
and
in
dec
int
sbb
inc
mov
sub
pusha
pavgw
rcl
push
jge
je
mov
and
mov
or
inc
xor
mov
lods
cs
adc
push
inc
or
loopne
jge
add
popa
int
sar
adc
mov
or
mov
test
cmp
push
mov
xor
cli
pusha
dec
cld
mov
sbb
std
je
test
mov
sbb
adc
dec
sub
and
ins
fstp
pushf
into
loop
mov
and
test
ja
cmp
jbe
sub
sub
mov
fs
cmps
dec
mov
fcomi
fidivr
lods
repnz
movs
pop
lods
repnz
push
push
idiv
loope
pop
xchg
cmp
fld
jbe
add
add
icebp
mov
inc
bswap
xor
jbe
or
cs
in
xchg
inc
ins
into
sub
or
jnp
mov
sahf
pop
icebp
cli
scas
and
int3
mov
loope
cmp
adc
adc
pushf
mov
scas
xchg
outs
out
dec
ja
imul
mov
call
add
idiv
push
sub
int3
std
pop
xchg
fnstcw
test
dec
push
les
jge
sub
jge
xor
push
ds
scas
mov
scas
xor
push
jns
xor
je
shl
fisubr
pop
das
repz
or
mov
.byte
