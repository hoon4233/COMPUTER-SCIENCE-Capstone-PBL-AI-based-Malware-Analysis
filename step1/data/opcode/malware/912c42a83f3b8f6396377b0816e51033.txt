iret
in
out
xchg
add
dec
inc
add
add
loope
push
(bad)
std
ds
pop
adc
bound
add
outs
les
add
int3
add
jnp
add
fcomi
jl
loopne
xor
add
(bad)
jle
iret
popf
ins
lahf
cwde
add
rol
pop
enter
imul
add
(bad)
add
pop
les
push
ror
jle
popa
mov
push
mov
mov
mov
outs
ins
in
aaa
loopne
pop
mov
ds
jmp
outs
das
add
call
sbb
xchg
mov
add
and
es
pusha
and
sub
inc
out
in
dec
jmp
bound
inc
sub
dec
dec
dec
dec
nop
jmp
add
(bad)
mov
add
and
or
call
out
fstp
pop
or
add
add
call
(bad)
mov
or
xor
jmp
sti
add
inc
lahf
je
mov
out
scas
pop
or
pop
add
push
push
arpl
pop
push
je
mov
ja
or
je
and
loopne
pop
or
xchg
add
adc
icebp
push
mov
mov
call
cmp
sti
ins
and
add
add
jnp
pop
neg
mov
add
or
jmp
outs
(bad)
push
jge
dec
xchg
pusha
mov
push
push
mov
ja
or
je
dec
jg
jae
mov
out
out
fadd
sbb
fsub
les
hlt
or
jne
mov
push
push
push
xchg
xor
std
es
or
pop
pop
pop
pop
sbb
jns
sbb
cld
ret
je
pop
cmp
jb
cmp
je
leave
pop
jbe
push
sub
xor
inc
icebp
retf
fidiv
mov
pusha
push
test
ret
xor
movs
mov
ret
nop
nop
mov
out
out
frstor
cmp
icebp
sbb
add
cmp
push
mov
push
mov
mov
mov
cmp
mov
test
add
gs
adc
mov
mov
mov
add
in
in
mov
adc
add
fnstenv
mov
test
fst
fild
sub
push
pop
sub
xor
or
mov
pop
ret
nop
push
push
push
popa
int
sbb
cmp
shl
shr
std
(bad)
mov
mov
call
adc
outs
sbb
retf
mov
mov
jbe
push
mov
call
pop
out
fdivp
fisttp
inc
sub
sub
inc
aaa
push
mov
mov
inc
movs
or
add
pop
sub
jbe
push
sbb
add
and
inc
push
ins
or
in
sub
xor
sub
lods
sbb
movs
pop
mov
sbb
clc
and
movs
mov
pop
(bad)
(bad)
mov
xor
ins
dec
push
push
cmp
ror
loopne
idiv
mov
add
mov
mov
adc
push
push
or
and
jge
jns
pusha
sub
dec
dec
ret
dec
ja
imul
add
int
jge
cmp
push
outs
mov
xchg
inc
pmulhw
mov
in
pop
push
lds
hlt
push
int3
retf
outs
jns
cs
inc
add
mul
jae
pop
(bad)
push
jb
add
add
dec
std
ins
sahf
push
clc
jne
add
sub
add
jbe
ret
sub
cmp
adc
inc
test
pop
jb
push
cmp
jbe
add
cld
mov
cld
aaa
mov
in
rcr
push
ss
xchg
or
or
into
leave
adc
or
jl
and
dec
pop
pusha
fs
and
lock
mov
and
dec
push
das
and
lods
movs
sti
(bad)
cmp
inc
js
gs
imul
out
adc
pop
int3
mov
inc
mov
jo
nop
pop
fcom
xor
int
jg
inc
dec
jne
dec
dec
gs
outs
jb
nop
nop
or
mov
dec
and
dec
mov
dec
outs
pop
inc
jb
pop
push
nop
mov
or
adc
je
jb
mov
xor
mov
push
pop
rol
inc
push
cmp
imul
push
ss
mov
dec
pop
xchg
out
add
or
or
xchg
inc
xchg
leave
mov
inc
imul
push
clc
clc
in
inc
and
add
sbb
push
popf
jg
xor
outs
jbe
jb
ins
outs
ja
ret
pop
lods
lods
arpl
dec
popa
je
mov
or
push
repnz
or
or
inc
aaa
mov
jbe
imul
dec
pop
jmp
mov
pop
gs
mov
or
imul
mov
pusha
pop
or
repnz
pop
push
or
cmp
psraw
pop
push
outs
imul
sbb
or
xbegin
jae
outs
push
sbb
lods
pop
push
sbb
inc
inc
and
imul
pusha
or
retf
adc
arpl
jae
push
mov
mov
sub
sub
and
xchg
jbe
ins
gs
wrmsr
fbld
repnz
scas
push
je
arpl
xchg
mov
pop
mov
outs
je
test
nop
push
in
(bad)
and
or
lahf
add
and
adc
adc
mov
rcl
fs
pop
mov
mov
push
fcomp
jb
mov
inc
xchg
stos
popw
leave
ret
dec
cmp
pop
adc
adc
nop
pop
outs
push
popa
data16
inc
call
adc
xor
push
ins
aam
mov
pop
or
jae
and
repz
cmp
int3
add
jmp
pop
jns
aam
pop
mov
add
jne
cdq
in
inc
sbb
int3
outs
loope
xor
rol
jmp
ror
cs
retf
arpl
adc
sub
mov
outs
pop
xor
pop
inc
mul
add
cmp
lock
das
inc
or
sub
add
push
dec
jne
push
or
add
jae
gs
mov
shl
mov
outs
arpl
outs
imul
pop
push
mov
mov
shr
div
mov
mov
add
mov
push
push
push
mov
mov
mov
pop
retf
mov
mov
jae
rol
sub
pop
(bad)
mov
fmul
mov
mov
xor
mov
fidiv
mov
or
adc
push
nop
inc
cli
sbb
xor
sub
(bad)
and
not
mov
(bad)
xchg
inc
add
push
cmp
ja
sub
mov
inc
inc
dec
adc
rcr
jmp
cmp
(bad)
jg
leave
add
mov
mov
or
je
mov
or
outs
(bad)
(bad)
out
push
push
cld
mov
cmp
jbe
mov
cmp
repz
je
movzx
add
or
jae
push
cmp
xor
movnti
jnp
cmp
dec
mov
imul
xchg
adc
mov
cmp
pop
jmp
inc
lock
cmp
jl
cmp
jbe
or
mov
pop
mov
add
jmp
dec
adc
clc
xor
in
sub
inc
call
into
xchg
jnp
cmp
clc
push
mov
test
lea
jl
jnp
ret
adc
jbe
lock
pop
ret
cmp
out
add
or
cld
mov
leave
not
lea
xor
in
nop
xor
push
mov
lds
xor
jne
lock
cmp
lahf
add
and
sub
push
mov
cli
loope
mov
cli
clc
cmp
add
pop
in
into
or
ret
push
and
sbb
push
jns
scas
loope
and
xlat
pop
cmp
push
add
mov
outs
mov
jne
sahf
mov
pop
mov
adc
je
dec
mov
enter
adc
nop
adc
rol
inc
ret
xlat
or
push
fist
arpl
out
outs
dec
repnz
jl
inc
mov
adc
mov
test
add
call
jecxz
push
xor
or
sub
scas
xor
ins
mov
test
mov
(bad)
fcmovnu
sbb
loopne
setne
jmp
sbb
in
ins
shl
push
fcomp
add
mov
and
adc
lock
lods
or
cmps
ret
in
and
xor
xor
sub
sbb
ja
(bad)
in
or
jo
sub
adc
jmp
adc
adc
popf
lock
mov
adc
into
fcom
sub
add
je
dec
ds
test
jle
mov
pop
sbb
vmovdqa
aaa
xor
pushf
test
mov
sub
dec
mov
jne
dec
dec
pop
(bad)
ret
mov
jg
sti
inc
adc
push
pop
mov
pop
shl
push
lea
xor
mov
js
add
xor
pop
cmp
push
sahf
add
xor
lds
add
clc
cld
push
pop
mov
jl
cmp
inc
call
sub
hlt
or
mov
and
pushf
mov
mov
push
add
jp
cdq
xchg
lock
(bad)
pop
sub
xchg
push
shl
mov
int3
push
mov
xchg
push
mov
sbb
adc
push
push
mov
leave
leave
fistp
mov
sub
mov
mov
inc
fld
jmp
and
repz
add
rcr
xor
(bad)
xor
ror
xor
adc
shr
adc
into
and
pop
(bad)
jbe
cli
or
sub
jecxz
fmul
fdiv
lahf
not
pop
mov
cmps
sbb
aas
sbb
mov
dec
and
inc
pop
imul
xor
ret
pop
and
dec
cs
mov
movaps
jbe
push
lea
mov
mov
outs
lods
mov
lea
(bad)
(bad)
jne
lea
jmp
movs
jb
xchg
pop
mov
sti
pop
jbe
mov
jl
ror
mov
add
dec
mov
dec
cld
push
mov
mov
jnp
aad
jg
and
lea
add
jo
xor
and
enter
or
fisub
add
adc
ficom
push
or
dec
in
cmp
xchg
jnp
(bad)
clc
or
add
in
das
jl
fucomip
or
lods
cmp
mov
sub
ins
jnp
scas
jmp
jmp
out
jbe
call
sub
lods
mov
push
cmp
pop
hlt
mov
mov
adc
lods
jmp
or
mov
std
std
ins
shl
mov
fcom
or
pop
mov
mov
sbb
dec
or
retf
mov
jbe
add
ret
movs
xchg
or
lods
jno
fistp
cmp
or
ja
sbb
dec
popf
sbb
(bad)
cmp
je
cmp
jb
cmp
ja
imul
aad
mov
ret
xchg
add
pop
daa
ret
push
mov
add
jle
imul
sbb
je
leave
ret
and
mov
addr16
sub
cs
jne
lea
mov
dec
nop
jmp
cs
mov
fld
sbb
and
sbb
sbb
imul
int
add
lods
imul
test
jbe
jl
inc
jge
mov
dec
fsubr
shl
rcr
outs
lods
inc
fcom
mov
cmp
jle
push
je
mov
jne
mov
inc
add
fbstp
sbb
cmp
jne
sub
mov
ret
mov
mov
sbb
push
out
and
rcr
rcl
pop
xchg
add
or
jb
pop
ja
fild
sub
and
cmp
add
(bad)
mov
and
scas
fstp
jbe
mov
jbe
mov
popa
push
sbb
out
cli
ret
cwde
adc
jmp
xor
push
neg
nop
sbb
outs
or
icebp
jg
jne
int
and
data16
push
pop
sar
add
cmp
push
les
cmp
jbe
lods
mov
sbb
dec
xor
and
sbb
scas
enter
sub
sbb
imul
xchg
jmp
push
hlt
add
pop
cmp
mov
call
pop
cmp
mov
or
ins
sti
jg
addr16
je
mov
cmp
ja
mov
push
dec
cmp
push
stos
jecxz
dec
mov
mov
ret
sub
inc
fmul
jo
(bad)
mov
push
and
aas
mov
out
repnz
outs
push
inc
je
mov
inc
je
mov
dec
je
aaa
cwde
das
mov
cmp
mov
jbe
fucomi
shl
retf
jmp
mov
mov
mov
cmp
packuswb
outs
push
or
iret
inc
push
iret
mov
dec
retf
pop
sbb
adc
pop
add
ins
sub
retf
inc
pop
lahf
dec
adc
jp
dec
icebp
push
inc
daa
test
and
pop
cld
fmul
or
mov
xlat
mov
mov
ret
jmp
les
cmp
or
xchg
sub
xchg
xchg
or
add
mov
lock
mov
add
cld
icebp
add
cmp
in
cmp
aaa
ins
jge
push
imul
in
cwde
mov
out
cmp
or
imul
xor
jl
jmp
add
cmps
pusha
inc
stos
mov
(bad)
lds
or
inc
cmp
div
sub
push
lea
jmp
adc
or
(bad)
push
cmp
jmp
or
lods
pop
in
shl
mov
loopne
xchg
sbb
jecxz
mov
clc
(bad)
mov
fbld
mov
dec
mov
stos
cmp
jne
pop
jnp
add
shr
mov
popa
mov
pop
or
add
cli
mov
repz
test
(bad)
in
repnz
lock
mov
adc
sbb
js
add
jle
sbb
sub
adc
inc
jmp
fst
in
int3
mov
movzx
sub
sar
add
add
dec
adc
lock
in
mov
jge
aaa
ss
cmp
je
add
or
mov
cmp
pop
jle
movs
lea
sbb
sbb
rol
cld
mov
jo
push
and
add
push
cs
int
dec
inc
dec
out
or
add
ret
cdq
(bad)
mov
jg
jo
jle
dec
aam
dec
or
sbb
fistp
jl
sub
ds
mov
sbb
add
stos
neg
or
inc
inc
imul
(bad)
mov
clc
pop
adc
or
and
push
fdivrp
daa
sahf
push
ss
(bad)
in
jmp
pop
add
mov
cdq
mov
or
ins
add
add
fistp
pop
in
mov
mov
test
adc
mov
ret
add
popa
mov
ret
div
mov
inc
push
fcmovnbe
mul
hlt
(bad)
cli
aam
stos
sbb
pop
ja
call
add
je
ins
in
(bad)
in
inc
jne
cs
repz
mov
and
or
cmp
sbb
clc
retf
jbe
mov
test
fs
push
inc
cmp
je
push
ret
(bad)
inc
sub
in
retf
or
jmp
mov
and
cwde
lods
lods
inc
out
test
sub
imul
add
and
mov
or
and
adc
inc
sub
iret
in
jle
sub
or
out
and
sub
sub
test
sub
je
sbb
sbb
push
sub
test
add
mov
or
neg
mov
bound
jne
mov
clc
and
inc
push
mov
cmp
or
outs
cmp
inc
sbb
and
fld
or
imul
clc
adc
bound
push
int3
jg
mov
push
in
pop
frndint
in
fld
fstsw
jnp
lds
add
fidiv
icebp
fnstsw
jne
lea
mov
inc
sub
dec
inc
jecxz
push
ins
dec
in
add
sub
shr
stos
inc
clc
add
jns
push
push
mov
cmp
push
add
call
jae
sbb
add
add
or
(bad)
adc
jmp
data16
mov
std
or
adc
popf
and
and
je
(bad)
out
mov
shr
mov
push
add
in
adc
fs
dec
rcr
je
adc
rol
lods
icebp
sbb
mov
or
(bad)
jge
dec
add
pop
mov
cmps
sbb
jae
dec
add
or
in
ins
outs
call
mov
fidiv
or
or
fwait
loopne
lods
daa
or
jne
shl
(bad)
and
jne
dec
sbb
cmp
pop
fwait
jnp
adc
push
and
add
outs
mov
add
aas
jecxz
mov
ficomp
jmp
fisttp
ret
adc
hlt
add
adc
cs
fclex
fldcw
mov
and
mov
cmp
fadd
fcomi
lea
add
icebp
adc
xor
test
cmp
je
adc
cmp
sub
pop
add
aas
pop
scas
push
mov
rol
mov
sub
fchs
sbb
add
aas
mov
loopne
test
pop
mov
fadd
mov
jmp
pop
in
scas
push
push
cmp
faddp
fsubr
lock
or
fimul
inc
jmp
mov
xor
sti
scas
stc
xchg
outs
xlat
fisttp
ror
pop
jmp
mov
add
mov
cwde
xchg
xchg
jle
mov
enter
jo
shr
fldcw
add
mov
mov
and
(bad)
pop
and
aaa
adc
ror
aam
or
dec
mov
push
fwait
out
(bad)
ins
leave
add
sub
and
pop
add
xor
and
nop
mov
fcom
fwait
pop
pop
jmp
addr16
sbb
or
pop
xchg
sub
pop
inc
clc
cmc
in
or
clc
sbb
add
cli
cmp
inc
stc
inc
cmp
cmp
mov
ins
clc
shl
out
add
shr
pusha
jmp
or
call
lods
stos
add
fild
fdiv
mov
cs
xchg
pop
push
int3
clc
sbb
or
dec
mov
test
or
jne
(bad)
(bad)
mov
mov
ficomp
scas
(bad)
mov
lods
cdq
push
xchg
popf
mov
je
cmp
jp
xchg
dec
aaa
iret
adc
call
in
add
push
sub
rol
sub
ss
fld
test
nop
add
test
cmp
dec
push
jns
nop
pop
scas
fldcw
sub
jno
std
ins
(bad)
bound
or
arpl
add
mov
mov
jg
inc
jb
sub
ja
jbe
jle
call
ja
or
fdivr
(bad)
cmp
ja
or
jle
mov
dec
add
inc
dec
mov
mov
lahf
cdq
idiv
imul
xchg
jns
imul
pop
ret
cli
add
repnz
pop
mov
stc
xchg
outs
fild
lock
add
out
mov
jae
(bad)
std
std
add
int
add
sbb
adc
fs
and
or
dec
in
test
sbb
pop
clc
hlt
add
mov
ret
add
scas
sub
pop
jge
rol
dec
push
cmp
out
or
jl
sub
adc
pusha
repnz
xchg
lods
mov
cwde
sub
add
dec
sbb
push
imul
add
sub
mov
repnz
sub
push
and
jns
outs
ins
adc
lock
ss
adc
mov
lahf
mov
or
push
dec
outs
pop
jae
push
xor
dec
cmp
jb
int
retf
out
or
mov
mov
add
or
ret
push
jmp
sbb
ret
mov
pop
stos
add
adc
xor
push
(bad)
popa
push
clc
mov
adc
mov
dec
inc
clc
mov
outs
or
and
mov
inc
adc
pop
ins
jnp
cld
xlat
cmp
(bad)
mov
fdivr
cmp
xchg
adc
lea
addr16
movs
mov
cwde
sbb
xor
adc
or
mov
or
sub
add
push
cmp
xor
add
push
btr
gs
adc
int
or
ja
push
inc
or
pop
inc
clc
loope
loop
mov
sub
dec
sti
je
fnsave
mov
inc
hlt
ja
mov
in
add
scas
(bad)
inc
mov
mov
dec
out
add
mov
dec
repnz
or
inc
in
add
aaa
outs
and
jecxz
sub
push
ins
inc
inc
(bad)
ds
jmp
jecxz
call
push
or
or
ret
pop
dec
pop
aaa
and
in
aad
xor
or
out
out
bnd
inc
xlat
pushf
mov
push
push
mov
mov
(bad)
(bad)
call
fnclex
loopne
sbb
dec
xchg
xchg
test
sub
(bad)
adc
das
fmul
test
adc
je
or
jmp
or
ja
cmp
or
fs
aam
int3
scas
and
icebp
cmp
aas
clc
or
cmp
dec
fdiv
fcmovbe
lods
loope
and
div
das
pusha
mov
add
add
xchg
bound
ret
gs
hlt
pop
adc
in
and
mov
jmp
add
pop
and
test
push
or
sahf
lock
jg
sub
or
in
js
xor
mov
cmp
jne
push
inc
adc
popa
add
push
leave
nop
sbb
jns
inc
scas
and
add
xor
repz
push
ins
lods
leave
adc
fadd
xor
mov
retf
xchg
nop
scas
mov
jne
add
or
inc
pop
test
loop
xor
sbb
scas
mov
or
in
mov
push
mov
mov
or
jae
or
or
mov
mov
jle
sub
cmp
fidiv
cmp
xchg
(bad)
adc
jmp
cmp
loopne
jecxz
push
add
add
scas
sti
stos
xchg
or
or
pushf
inc
dec
shl
mov
arpl
xor
shl
jne
outs
mov
shl
stos
or
cs
push
fnsave
push
es
push
and
js
mov
mov
xchg
mov
and
ret
mov
push
xor
mov
adc
or
repz
sub
cld
fsubr
pop
stos
add
hlt
dec
mov
pop
rcr
jmp
mov
push
hlt
mov
adc
dec
sbb
ins
gs
pop
fs
or
xchg
outs
(bad)
je
add
jg
push
shl
add
inc
ftst
int3
movs
pop
mov
movs
nop
dec
aaa
and
adc
sub
mov
mov
arpl
loope
jne
sbb
and
or
rcr
jl
outs
mov
dec
jg
je
fbld
je
add
je
in
pop
(bad)
das
sbb
pop
sub
je
pop
je
jmp
cmp
and
jne
push
xor
inc
sbb
and
(bad)
adc
mov
pop
repnz
mov
je
push
in
in
adc
add
push
imul
inc
jns
mov
call
data16
push
and
jecxz
or
or
add
or
lock
test
mov
outs
stc
das
inc
popa
daa
sub
call
dec
and
hlt
adc
or
xchg
xchg
cs
in
mov
dec
imul
xor
jne
imul
add
icebp
and
adc
pusha
inc
xchg
or
cmp
xchg
nop
nop
add
cmp
jae
in
sahf
jmp
adc
cmp
xor
xchg
aaa
cli
push
enter
inc
or
leave
mov
jmp
sahf
(bad)
mul
mov
adc
and
call
mov
mov
and
pop
pop
and
xor
lea
and
in
ja
sbb
popa
push
jmp
or
movs
push
ret
jmp
sbb
sub
rol
push
cld
sub
mov
dec
mov
sub
adc
mov
sbb
cmp
dec
sahf
mov
imul
das
push
dec
movs
push
add
cwde
jae
dec
or
add
mov
lods
es
clc
jp
aam
xchg
mov
dec
fcomp
cmp
or
pop
ror
cmp
shl
ins
in
lea
mov
movs
pop
mov
pop
call
cdq
xor
adc
push
stos
jg
clc
cmp
jg
push
jmp
je
mov
xchg
push
test
push
mul
pop
mov
dec
jl
mov
xor
jmp
inc
add
or
sub
pop
mov
lods
cs
pop
mov
inc
sbb
sub
pop
(bad)
ficomp
ds
jb
push
cmp
jle
xlat
dec
adc
ret
jbe
mov
sbb
mov
outs
pop
adc
add
neg
add
xor
mov
leave
ret
ss
test
scas
fisub
add
mov
test
mov
or
js
je
inc
clc
pusha
lea
add
push
mov
or
scas
scas
push
mov
loope
xor
cdq
outs
dec
std
outs
xchg
push
pop
imul
add
pop
test
push
aaa
xor
pop
sar
(bad)
mov
je
dec
je
sub
pop
sub
je
jmp
mov
jmp
add
ficomp
lods
push
sub
pop
jno
jnp
clc
jle
outs
xchg
ins
add
fld
mov
test
add
ds
inc
test
call
outs
lods
mov
mov
add
push
sub
sbb
add
pop
push
je
pop
mov
das
add
in
xor
or
(bad)
dec
jne
pusha
push
mov
es
nop
hlt
aas
push
adc
or
adc
cmp
jg
(bad)
or
lock
movs
loope
cdq
xor
loopne
test
ret
sar
imul
aaa
cli
call
js
jle
or
pop
and
nop
push
jno
cld
xor
ret
sbb
add
icebp
xchg
movs
xchg
loopne
sar
cmp
sbb
adc
sbb
push
dec
push
stos
fcom
por
int3
ss
imul
adc
mov
int3
cmp
mov
jae
aaa
inc
mov
push
jnp
or
adc
pop
inc
mov
in
adc
pop
aaa
mov
sar
fs
adc
sbb
or
or
or
sbb
pop
fist
hlt
push
xor
sub
adc
rcr
test
cs
into
add
lock
fidivr
sub
jb
and
jmp
(bad)
push
inc
jge
adc
in
call
out
hlt
pop
loopne
sbb
or
hlt
mov
lock
xchg
movs
push
and
adc
loop
jo
push
ja
out
or
test
loop
jecxz
retf
shl
in
loopne
ja
mov
sbb
jbe
inc
cmp
jle
adc
fs
mov
fsubr
das
cmp
test
dec
ret
xchg
adc
adc
pop
sub
shl
out
jmp
ret
(bad)
adc
mov
cmp
jbe
sbb
jne
pusha
sbb
call
fs
call
data16
fs
sub
and
jo
pop
rcl
test
repz
cmps
out
daa
dec
jns
sbb
div
pop
add
dec
add
das
ret
mov
es
and
push
xlat
inc
pushf
jmp
mov
sbb
or
sub
mov
xor
adc
fs
daa
je
inc
jmp
sub
sbb
dec
cmps
jo
mov
add
xor
mov
adc
dec
push
mov
addr16
sbb
xor
stos
xor
push
or
sub
or
jb
add
inc
sub
mov
add
sbb
inc
push
push
test
sbb
test
dec
push
mov
or
ds
hlt
add
xchg
add
add
inc
pop
add
mov
test
mov
lods
adc
es
inc
add
popa
addr16
jns
int3
lds
test
pop
test
mov
sbb
dec
xchg
cmp
aaa
mov
icebp
or
sbb
retf
mov
jb
jnp
jns
cmp
sub
inc
push
(bad)
push
or
rcr
cmp
out
rcl
js
add
mov
push
sbb
icebp
jbe
clc
popa
jne
push
cmp
fnstsw
sti
ds
push
fmul
xchg
mov
push
fstp
fwait
jmp
or
or
ret
test
out
add
mov
push
fsub
inc
test
ss
iret
mov
shr
jl
inc
pushf
pop
out
popf
push
lea
push
(bad)
push
mov
inc
add
add
add
sti
ss
je
mov
ins
xor
push
mov
cmp
sub
mov
cmp
push
add
in
mov
loop
cmp
dec
and
fidivr
sub
add
push
push
adc
add
or
lea
dec
fcomp
mov
ret
and
fist
lahf
(bad)
and
lahf
sub
sub
pusha
add
mov
sub
mov
dec
push
mov
xor
popa
xchg
jb
pop
pop
leave
call
inc
xor
sub
pop
push
shr
inc
iret
push
jb
inc
loopne
ss
ds
je
dec
cmp
out
jne
or
inc
or
dec
push
mov
rcl
push
pop
fld
sub
jmp
inc
scas
ds
movs
mov
pop
out
push
pop
xchg
mov
jne
jbe
es
fwait
ja
inc
xchg
je
adc
adc
jb
push
push
ins
aaa
jmp
leave
cmp
lock
(bad)
lds
cmp
or
stos
and
cwde
mov
inc
sar
hlt
push
sub
(bad)
in
xor
shl
leave
sub
xor
sub
adc
das
(bad)
jo
clc
iret
xchg
pop
repnz
cmp
adc
rol
or
repz
xor
xor
xor
xchg
sub
imul
xchg
xlat
dec
push
xor
movs
xor
jle
inc
dec
pop
stos
xor
cmc
bound
inc
call
mov
or
js
push
add
aas
cmp
mov
ja
(bad)
sbb
sub
sub
adc
or
xchg
ja
dec
lods
mov
xor
pop
je
jne
sbb
leave
xor
add
in
test
or
mov
xor
jecxz
or
or
and
sbb
gs
add
rcl
mov
add
xor
xchg
imul
cld
fisubr
lea
out
push
and
jne
push
daa
push
out
std
test
and
lods
pop
rol
dec
enter
sbb
(bad)
lock
sub
pop
dec
ret
(bad)
push
adc
rol
repz
call
in
and
pop
inc
push
mov
pop
sub
and
ins
and
daa
(bad)
int
fcmove
clc
fimul
test
add
cs
pop
in
jbe
cmp
inc
inc
add
mov
inc
push
repz
jns
sahf
ja
and
lea
test
nop
adc
xchg
int
(bad)
mov
sbb
into
fmul
les
dec
jl
loopne
fld
lea
js
sbb
fs
retf
test
push
dec
xor
jmp
sbb
dec
or
aad
sbb
xchg
mov
(bad)
(bad)
dec
dec
or
cmc
or
jecxz
mov
hlt
outs
xchg
mov
pop
inc
adc
cmp
cmp
inc
call
push
push
fisub
pop
dec
add
ins
mov
or
mov
and
aaa
icebp
inc
fiadd
fdivr
push
and
push
nop
pop
lods
add
adc
pop
pusha
xchg
inc
jae
push
leave
inc
stos
inc
or
xor
and
fdivr
pusha
xchg
xchg
add
int3
inc
mov
inc
fmul
mov
dec
mov
mov
inc
js
fs
mov
inc
retf
adc
push
inc
jg
cwde
lock
add
int
cmp
ja
inc
jbe
or
inc
mov
or
sar
push
arpl
mov
adc
inc
and
push
inc
push
jg
cmp
stc
mov
jne
or
hlt
aaa
retf
or
dec
jmp
mov
(bad)
xchg
jge
jge
push
cld
aaa
sub
push
inc
std
push
and
or
adc
push
or
mov
adc
jg
mov
add
dec
sub
jb
jmp
mov
sbb
sub
sbb
(bad)
jo
les
sbb
test
in
mov
test
jmp
outs
enter
cmp
shl
loopne
add
jo
cld
repz
mov
adc
sub
mov
sub
cld
test
ins
mov
mov
push
lock
clc
and
pushw
dec
sub
xchg
dec
dec
js
mov
stc
pmuludq
lods
push
dec
inc
sbb
aas
lock
add
mov
mov
mov
mov
mov
out
bound
inc
dec
mov
pushf
arpl
addr16
ins
adc
jne
loopne
(bad)
xchg
adc
jg
cmp
mov
adc
je
sub
adc
dec
je
jmp
add
cld
idiv
mov
je
jmp
cmp
xor
push
fcomi
fist
add
jmp
sub
cmp
(bad)
jmp
mov
ret
mov
add
retf
mov
or
or
push
inc
aaa
or
mov
mov
sbb
or
add
xchg
lods
mov
dec
jecxz
jl
inc
sub
cmp
(bad)
and
or
pop
dec
jae
mov
or
or
jge
sahf
jne
add
cmp
add
mov
movs
add
(bad)
dec
push
or
enter
das
fmul
jae
arpl
or
pcmpgtb
addr16
rcl
mov
xor
inc
lock
dec
lea
aaa
push
sub
into
fcomp
jmp
xchg
xchg
ds
pop
pushf
dec
inc
dec
inc
mov
push
pop
inc
add
xchg
nop
xchg
dec
jmp
xchg
mov
inc
bnd
cmps
xchg
aad
pop
add
movs
xlat
jb
and
mov
cld
dec
add
jmp
sbb
and
mov
pop
or
inc
sbb
mov
push
arpl
add
test
in
and
iret
or
or
nop
mov
dec
mov
jo
push
std
add
mov
or
pop
ret
push
out
xor
or
cwde
in
sub
out
in
or
dec
shl
sub
mov
scas
lahf
mov
or
dec
hlt
mov
push
xchg
xchg
or
clc
jg
scas
sub
ins
jp
call
jl
pop
xchg
sbb
or
pop
sbb
xchg
call
jb
hlt
ins
xchg
ins
or
adc
sbb
and
cmp
(bad)
adc
scas
mov
je
adc
or
mov
leave
mov
cmp
mov
dec
data16
jmp
adc
add
dec
dec
mov
or
test
sar
jae
or
and
mov
sub
adc
cmp
fwait
cmp
or
inc
test
jne
mov
pop
add
inc
xor
mov
stos
adc
mov
mov
sbb
sbb
mov
leave
sbb
pop
adc
test
or
jle
addr16
xor
fist
push
test
jg
mov
push
das
push
outs
push
jmp
xchg
add
lea
push
pop
inc
inc
and
push
lods
test
mov
int3
or
sub
fmul
mov
stos
call
xchg
sti
outs
jb
hlt
jge
cmp
jl
add
push
in
cdq
mov
xor
repz
mov
mov
pextrw
and
jle
popa
aas
and
jbe
popa
jle
out
cs
push
outs
cld
sbb
loope
dec
dec
cmp
or
arpl
and
jg
inc
jmp
inc
mov
mov
mov
pop
adc
cwde
inc
adc
sub
popa
inc
or
data16
pop
push
pop
jge
or
ss
mov
mov
push
adc
bound
movhps
xchg
xchg
test
mov
or
test
jae
xchg
lea
cmp
adc
mov
scas
inc
add
xchg
dec
pop
and
(bad)
mov
popf
stos
outs
jo
mov
inc
mov
xor
push
cmp
adc
retf
push
aam
mov
je
cmp
out
icebp
call
mov
mov
push
mov
out
cmps
add
adc
neg
fld
clc
adc
sbb
mov
or
sub
jmp
jbe
int
mov
adc
retf
cmp
pusha
aas
stos
mov
adc
test
sbb
(bad)
in
sub
pop
cmp
(bad)
mov
hlt
scas
xlat
cdq
push
sub
stc
inc
mov
es
pop
jle
jp
ror
xor
and
aaa
stc
push
push
adc
mov
pushf
add
nop/reserved
pop
sub
pop
fistp
adc
jmp
xor
jl
call
add
(bad)
aam
dec
push
test
push
mov
aaa
pop
sub
jb
inc
mov
mov
stos
neg
mov
push
dec
jne
mov
or
or
cmp
(bad)
hlt
adc
pop
ja
lods
repz
xchg
shl
sbb
xchg
push
or
enter
ret
add
(bad)
shl
mov
xchg
add
mov
sar
call
cwde
push
sar
cmps
sahf
mov
shl
push
cmps
dec
jge
(bad)
jle
push
adc
pop
rol
push
shl
sti
(bad)
out
es
mov
div
pop
mov
pop
ret
sti
mov
xchg
ret
mov
mov
mov
jo
jae
add
addr16
cmc
jp
cwde
xchg
push
and
push
push
(bad)
mov
push
cmp
jmp
(bad)
pusha
add
jmp
(bad)
inc
aad
out
shl
add
mov
add
sub
add
cmp
aaa
inc
fmul
stc
push
in
push
stos
imul
aas
adc
inc
fcom
dec
inc
in
jg
push
mov
mov
mov
mov
add
push
in
jle
push
mov
dec
sar
loop
lahf
lds
push
mov
nop
add
and
or
outs
mov
sbb
adc
mov
mov
mov
ins
in
dec
in
or
add
das
mov
mov
mov
nop
addr16
inc
pushf
loopne
aam
inc
xchg
add
mov
fadd
fcom
cmp
and
aas
shl
mov
add
aaa
enter
pop
add
sahf
int3
and
and
enter
or
mov
fxch
add
or
sbb
les
les
popa
enter
rol
dec
hlt
and
push
xor
or
retf
mov
jbe
loop
pop
hlt
enter
call
pop
push
sub
ja
mov
push
mov
pop
adc
xor
cmp
add
push
ins
das
fs
icebp
out
or
push
ins
add
fs
cs
popa
ins
or
cmp
push
or
and
sub
in
mov
pop
push
and
cmp
cmp
jae
mov
clc
nop
jmp
add
mov
or
push
pop
jb
pop
pop
or
push
adc
pop
ss
inc
ffreep
push
adc
sub
pop
inc
ror
mov
neg
sub
imul
ins
xor
cs
ins
shr
gs
imul
push
jo
arpl
js
pop
int3
neg
mov
shl
ret
xchg
rol
dec
call
inc
in
mov
pusha
adc
push
push
lock
fs
outs
repz
outs
jne
and
out
out
lock
ins
mov
add
dec
lds
outs
mov
dec
inc
dec
adc
and
and
pop
dec
lock
cmp
push
(bad)
or
(bad)
adc
add
loopne
cmp
aaa
adc
dec
pop
lods
push
test
mov
cwde
mov
jbe
add
scas
rcl
add
jo
scas
lds
test
push
adc
mov
(bad)
dec
xchg
pop
jmp
lods
mov
aas
lea
loope
cmp
cmp
fwait
mov
daa
mov
mov
or
rcl
test
leave
aas
pop
lods
lock
mov
pop
or
ss
into
lahf
mov
push
sbb
adc
ja
hlt
rol
pop
rcl
fmul
xchg
call
leave
inc
adc
push
and
cs
xchg
or
unpcklps
sbb
push
pop
cld
cmp
add
mov
cmp
rol
test
mov
sbb
ja
sahf
pop
(bad)
mov
(bad)
and
inc
sub
inc
or
adc
sbb
adc
cdq
in
test
adc
cmp
mov
mov
add
outs
sub
push
pop
les
sbb
mov
ret
fsub
lea
pop
shr
sbb
mov
fisttp
lock
pop
mov
cwde
jmp
and
push
ins
in
and
or
mov
sub
fld
pcmpeqw
inc
out
ret
in
in
lahf
je
push
cwde
fadd
cmp
and
mov
iret
inc
loopne
add
popf
sbb
test
add
pop
cmp
dec
lock
pushf
cmp
or
add
or
jmp
mov
sub
jmp
pop
adc
mov
pop
dec
or
jae
fst
rcl
or
mov
cmp
sbb
add
sbb
dec
add
sbb
fst
arpl
inc
call
ret
ins
inc
xlat
or
mov
shl
js
jo
shl
sbb
shl
push
fs
jl
xor
rol
cmp
dec
shl
inc
sbb
cmp
xor
call
sub
cmps
imul
imul
cmps
imul
jne
call
mov
imul
pushf
xor
inc
call
inc
call
inc
call
inc
call
inc
call
inc
call
pusha
(bad)
cld
or
int
int
hlt
pop
lock
and
pop
in
push
repnz
sub
or
in
or
ror
or
fadd
or
or
aam
rcl
or
or
int3
xor
ror
or
les
ror
or
mov
ror
mov
mov
or
or
lods
adc
ror
or
movs
or
sbb
jns
call
pop
test
call
fs
pop
dec
pop
cmp
(bad)
xchg
das
push
mov
sub
fdivr
into
dec
sub
movs
mov
xchg
test
loopne
rcr
neg
xchg
or
das
inc
mov
ds
sub
add
mov
ror
push
nop
sub
xchg
or
and
dec
and
cmps
cwde
dec
xor
add
mov
or
xor
test
popa
pushf
fsub
leave
dec
jg
or
fst
xor
pop
cmp
sub
inc
mov
xor
test
in
ins
sahf
mov
bound
xchg
cmp
add
js
nop
inc
into
outs
inc
lock
icebp
repnz
push
sbb
cmc
push
sbb
idiv
stc
sbb
cli
sti
cld
fs
inc
push
std
(bad)
call
loope
inc
push
sbb
in
pop
fs
out
out
arpl
pop
rol
call
push
sbb
in
out
out
sbb
rcl
shl
push
rcl
aad
inc
push
sbb
xlat
fadd
sbb
fild
sbb
fstp
fistp
fs
inc
rol
fs
inc
push
ret
(bad)
lds
(bad)
enter
fs
retf
sbb
int
iret
sbb
mov
mov
nop
inc
push
mov
mov
inc
push
sbb
sbb
mov
mov
fs
inc
mov
inc
push
mov
push
sbb
and
push
gs
xchg
xchg
gs
and
test
jge
dec
dec
mov
jne
sub
icebp
sbb
add
bound
pop
ret
sbb
or
mov
dec
and
dec
fs
and
adc
or
push
mov
dec
pop
adc
pushf
and
ss
mov
dec
pop
push
inc
dec
data16
dec
inc
cmps
add
inc
pop
sbb
sbb
jle
inc
jb
or
add
mov
leave
xor
std
xchg
ins
jle
lea
push
sbb
sbb
xchg
xchg
adc
mov
add
add
mov
xchg
jle
loope
addr16
cmp
test
xor
push
in
sbb
cld
cmp
cmp
push
in
push
into
xor
jb
icebp
xchg
and
mov
outs
loopne
dec
and
test
xor
push
les
pop
test
dec
or
inc
inc
lea
fs
pop
jne
mov
adc
pop
and
xor
adc
aaa
call
xor
adc
dec
pop
pop
cmp
add
fwait
fs
ins
push
xor
sbb
js
movs
ins
ret
lock
xor
jmp
das
cmp
jb
adc
(bad)
xchg
call
add
jae
cld
dec
adc
pop
rcl
mov
mov
aad
sbb
popa
or
ins
or
aaa
mov
and
and
or
in
mov
cs
xchg
dec
sahf
xchg
cmp
dec
cs
cs
dec
pusha
mov
push
cs
js
dec
cs
xchg
dec
sahf
push
dec
sahf
xchg
dec
fs
and
dec
mov
mov
shl
shr
jns
cs
loopne
mov
push
jns
fldcw
xor
adc
inc
outs
ins
gs
jne
rcl
adc
pop
jno
sub
pop
adc
add
xchg
arpl
outs
je
fs
jne
fcom
ins
inc
imul
pushf
std
pop
outs
fs
outs
dec
jb
pop
fidivr
enter
ins
jo
inc
jb
ins
push
je
mov
push
cmp
gs
ret
adc
pop
inc
outs
outs
ins
inc
jle
xchg
(bad)
je
inc
jns
test
rcr
aaa
aaa
push
enter
inc
sub
dec
or
sahf
inc
imul
add
aad
test
mov
or
frstor
sti
js
test
add
adc
jno
jmp
nop
fld
or
or
adc
or
je
add
dec
sti
xchg
add
push
outs
mov
dec
xor
sbb
stc
stc
enter
jnp
pop
add
fadd
pop
sti
out
cli
xor
test
pop
cli
adc
push
inc
jne
and
add
xor
pop
sbb
(bad)
test
mov
outs
fsub
sets
inc
pop
inc
or
sub
nop
pop
leave
out
arpl
jo
add
fsub
adc
jl
arpl
adc
xchg
arpl
hlt
sub
inc
jb
arpl
in
jb
pop
jno
in
cmp
or
arpl
sub
jbe
fmulp
fs
jb
arpl
in
in
and
inc
pop
das
fcomp
popa
jns
imul
addr16
dec
xchg
push
xor
mov
pusha
enter
adc
retf
push
push
retf
jae
inc
test
dec
push
ins
sbb
mov
mov
and
aaa
pop
arpl
je
ret
pop
arpl
in
ret
jo
arpl
arpl
dec
inc
dec
test
xchg
mov
xor
or
lahf
mov
loopne
inc
jb
jmp
dec
adc
in
fs
call
or
jne
fs
shr
lods
jns
push
inc
jbe
inc
hlt
or
call
push
push
call
pop
iret
push
xchg
in
cmp
and
nop
in
jne
or
dec
retf
mov
out
jne
jl
jb
mov
cmp
cmp
dec
and
je
jbe
and
and
add
cmp
jbe
dec
enter
push
out
sub
cmp
sbb
lea
push
out
retf
dec
sahf
popa
jns
mov
cmp
je
clc
mov
add
sub
ss
sub
add
fnstsw
je
out
sub
dec
je
push
or
sbb
lahf
ss
jbe
dec
adc
dec
cmp
outs
pop
in
add
sbb
in
inc
jno
and
das
jne
clc
dec
out
mov
clc
das
push
hlt
push
jbe
enter
jo
lock
dec
and
enter
in
jb
enter
call
pusha
mov
je
push
cmp
and
pop
xor
daa
add
cs
jb
add
fadd
mov
sub
pop
aam
cwde
mov
jns
sbb
adc
fidivr
or
jnp
add
add
mov
jno
sub
sub
(bad)
pop
pop
je
jmp
mov
mov
mov
add
xor
xor
fs
adc
lods
out
jno
sbb
repz
imul
pop
loop
or
enter
adc
xor
or
pop
add
cs
ret
aas
jp
and
fs
fs
push
adc
jp
pop
add
or
xor
retf
sbb
pop
mov
stos
dec
add
adc
movs
cmp
or
ret
add
xor
inc
jge
xchg
push
jns
sub
xor
test
out
idiv
(bad)
(bad)
dec
jne
pushf
xchg
dec
sar
and
call
add
push
inc
mov
test
neg
int3
inc
sbb
test
loop
and
and
dec
xchg
mov
adc
lock
mov
out
jne
(bad)
cli
xchg
das
les
adc
ss
imul
clc
jmp
adc
fldenv
push
clc
movzx
lock
mov
imul
lea
ss
sbb
add
jge
lea
push
cmp
nop
ins
ss
lea
lods
inc
or
jle
inc
shld
xchg
std
add
dec
jne
jne
inc
inc
inc
xlat
mov
or
sbb
push
and
inc
sub
in
lea
test
js
push
in
push
ss
sbb
ins
jne
sub
dec
inc
pop
xor
adc
adc
or
sub
push
or
push
mov
sbb
inc
jnp
inc
pop
mov
pop
loope
jmp
jl
loopne
idiv
and
add
and
mov
mov
ret
xor
jmp
pop
push
mov
sbb
adc
mov
or
inc
les
call
inc
cld
(bad)
jp
cmp
jne
jmp
add
and
mov
mov
and
mov
or
test
ins
arpl
in
nop
ret
jecxz
lock
repnz
cmp
je
ror
adc
push
jmp
sub
mov
pop
add
cmp
lea
xor
push
test
cwde
je
sub
pop
and
retf
lea
sbb
mov
or
icebp
xchg
test
scas
adc
psubb
dec
cmc
movs
or
les
and
shl
sbb
and
jle
loopne
clc
mov
xchg
fimul
adc
or
mov
or
jb
repnz
loopne
xchg
or
adc
in
cmps
or
ss
std
jl
or
lods
or
test
jne
dec
jbe
cld
dec
lahf
in
cwde
or
jo
les
out
jle
dec
call
in
push
in
jle
and
and
lahf
daa
sbb
xchg
jmp
push
jmp
push
pop
jne
add
push
push
xchg
jg
movs
jnp
cs
(bad)
add
dec
push
add
push
jns
pop
add
inc
scas
scas
ins
or
mov
fisub
inc
adc
cmp
add
sbb
movs
jmp
mov
adc
xor
shl
add
ds
loopne
jmp
fmul
sub
or
pop
fs
xchg
or
cmp
je
lods
jne
mov
jl
inc
fs
jae
push
push
add
inc
add
sub
jnp
add
adc
adc
inc
in
pop
cmp
in
cmp
jmp
ret
pop
xchg
or
mov
aaa
je
shr
mov
bound
fs
mov
dec
retf
and
ja
xchg
add
push
mov
xchg
pop
adc
xchg
sahf
in
sahf
and
adc
imul
and
fdiv
pop
dec
movlps
je
repnz
adc
xor
call
mov
cmp
xchg
adc
cs
and
imul
inc
fnsave
sub
push
jl
jle
or
test
pop
fcom
sbb
add
jbe
jnp
cmp
mov
adc
leave
leave
jb
add
add
fldenv
pop
mov
sub
rcl
jno
aaa
dec
ret
adc
or
jmp
push
mov
mov
add
xchg
sbb
fist
inc
inc
mov
jge
enter
mov
or
cmp
add
xor
add
test
jmp
xchg
stos
sbb
inc
cs
xchg
test
pop
iret
or
dec
cmp
pop
xchg
cmp
test
ins
cmps
mov
sub
pop
fcomp
cmp
fs
(bad)
jnp
dec
(bad)
lock
hlt
sbb
mov
dec
je
ja
pushf
enter
and
cmp
pusha
lds
push
enter
test
rcl
push
jo
mov
jb
(bad)
mov
daa
inc
and
push
push
push
imul
adc
cmp
fs
mov
pop
xchg
pop
jno
gs
cmp
push
jns
ds
xor
mov
sub
fsubr
inc
and
cli
nop
scas
xchg
push
je
sbb
es
sar
adc
pop
sbb
cmp
sbb
test
popa
cld
lods
add
cmp
jne
stc
sub
sbb
cmp
arpl
or
xchg
out
xchg
xor
shl
ret
cmp
call
dec
add
je
repz
cli
or
push
xor
add
cmc
sbb
hlt
lods
add
add
stos
in
repnz
test
jecxz
jp
fld
ss
ret
(bad)
fdiv
and
ret
jl
retf
retf
into
jle
fstp
fwait
cs
fstp
movs
fistp
dec
enter
cmps
dec
in
dec
mov
call
mov
sbb
(bad)
xor
adc
and
jmp
mov
in
cmp
jg
ret
loopne
cmp
test
les
lock
ror
and
mov
data16
addr16
popa
and
inc
stc
xchg
xchg
addr16
sbb
mov
test
(bad)
test
xor
cmp
sub
cwde
arpl
add
mov
push
shl
xor
push
adc
mov
into
or
sti
(bad)
std
jg
cmps
xchg
loop
sub
push
hlt
jns
add
daa
mov
xchg
stos
cmp
lea
test
call
pop
xchg
and
xor
ror
pusha
adc
jne
int
push
nop
mov
lds
jmp
(bad)
out
pusha
pop
and
push
daa
and
pushf
mov
sbb
jnp
xor
in
stc
in
add
aaa
adc
mov
xchg
sub
pop
neg
arpl
pusha
add
push
and
mov
imul
stos
cli
or
xchg
push
and
and
mov
sub
in
add
cmp
nop
dec
imul
xor
xor
mov
sar
add
adc
push
(bad)
cmps
add
push
mov
or
sub
pop
retf
dec
rol
xchg
loope
push
mov
cdq
mov
or
adc
call
push
mov
fwait
sub
cs
popa
jle
mov
inc
mov
or
(bad)
jp
movs
and
add
fmulp
repnz
retf
jmp
popf
xor
addr16
add
or
mov
mov
leave
lods
popa
movs
mov
mov
shl
out
loope
lea
and
dec
jno
and
movs
push
setp
mov
aam
pop
mov
imul
sub
loope
(bad)
shr
fs
or
inc
lock
cmp
pop
jno
aam
adc
lods
xchg
(bad)
dec
dec
ret
jmp
jmp
jge
enter
imul
sar
in
adc
test
or
sub
add
prefetchnta
jmp
lea
xchg
or
shl
in
aas
xchg
mov
mov
dec
mov
and
push
mov
cs
adc
out
scas
icebp
call
pop
or
add
mov
cs
xchg
sub
sbb
xor
push
sti
mov
jmp
pop
push
aam
inc
outs
leave
(bad)
adc
mov
addr16
inc
inc
mov
fs
imul
sbb
dec
test
sbb
mov
sbb
push
je
or
push
rcl
dec
mov
pop
and
cmps
adc
push
outs
adc
loope
xchg
adc
add
add
xor
shl
aaa
push
pop
arpl
mov
ins
fs
(bad)
fadd
pop
xlat
int3
test
shl
sbb
mov
sbb
dec
nop
mov
cmp
inc
clc
and
add
neg
sub
adc
repz
cmp
add
scas
pop
add
and
sar
gs
inc
pop
fist
shr
sbb
xchg
mov
pop
or
in
iret
adc
fist
mul
xchg
inc
add
or
in
or
sub
rcl
inc
push
adc
mov
mov
dec
jmp
cli
rcl
test
es
rcl
adc
call
stos
out
sbb
or
fmul
in
ja
push
or
xchg
xor
mov
and
ds
sub
fwait
jne
pushf
test
imul
add
fs
add
retf
add
add
mov
in
mov
in
hlt
inc
xchg
push
cmp
jp
xor
clc
sub
fld1
loopne
mov
ins
imul
mov
or
fld
and
scas
inc
jmp
and
aam
into
ins
adc
pop
xlat
daa
xor
pop
inc
sbb
aad
inc
xchg
mov
xor
mov
xchg
es
inc
push
pcmpgtb
call
xor
and
pop
ss
jo
xchg
imul
jle
push
test
adc
in
mov
pop
xchg
push
adc
pop
pop
cwde
fld
nop
hlt
retf
xchg
sbb
outs
xor
shl
stos
mov
out
cld
xchg
sbb
int3
fisttp
int
nop
cmps
inc
mov
push
addr16
inc
shl
(bad)
mov
fwait
into
hlt
js
out
adc
sub
xchg
cmp
lock
mov
jb
retf
sub
fld
cdq
sub
sub
popf
xchg
xor
xchg
cmp
mov
leave
test
mov
adc
or
sbb
sub
mov
push
xor
dec
nop
xor
sub
mov
xchg
fild
test
pop
shl
aam
pop
or
and
xor
add
test
out
jmp
retf
pop
xchg
frstor
popa
xor
mov
adc
leave
pusha
pop
pop
shr
js
mov
sbb
fcom
push
cmps
test
adc
add
inc
repz
enter
lock
add
push
push
adc
inc
es
adc
inc
ror
mov
frstor
aaa
add
jns
push
repnz
fcomip
push
fld
pop
not
test
lea
cs
lds
mov
or
mov
or
and
or
add
add
inc
xchg
or
pop
sbb
std
dec
leave
add
call
out
out
lea
cmp
jecxz
call
clc
mov
xor
or
or
push
aas
sbb
pop
rcl
jp
xor
xchg
push
jb
shl
int3
loope
cmps
imul
pop
imul
xor
fadd
add
loopne
xor
push
jo
mov
or
lods
jnp
dec
pop
lods
ins
outs
xchg
push
or
sub
adc
adc
sbb
sub
xor
jge
dec
push
mov
jg
or
pop
leave
mov
or
fcomp
adc
adc
dec
ins
ret
lods
jmp
nop
xchg
jmp
xchg
mov
mov
call
js
pushf
mov
add
push
lods
imul
add
pminsw
movs
mov
int
dec
mov
cmp
mov
push
imul
je
push
frstor
and
dec
ja
bound
sbb
add
or
mov
shl
or
pop
test
jne
adc
inc
xor
push
jl
cs
mov
sbb
inc
add
shl
ret
call
sahf
loope
jge
push
retf
cmp
inc
cli
mov
ins
sub
ret
or
ins
call
mov
add
sahf
call
and
pop
jbe
sbb
mov
stos
fmul
add
inc
mov
lea
dec
push
dec
add
push
shr
add
imul
or
push
mov
mov
mov
xchg
xor
nop
or
outs
setp
push
xor
arpl
cmp
push
or
and
cmps
fistp
fimul
fisttp
inc
push
fldenv
cmp
cdq
and
imul
pusha
and
inc
and
sahf
sub
xor
loope
mov
adc
ins
add
mov
mov
jp
imul
fild
mov
or
adc
push
mulps
inc
push
mov
and
sub
in
mov
mov
dec
shl
jae
fwait
and
outs
pop
aaa
stos
pop
and
add
xlat
xor
(bad)
adc
fild
ror
test
and
les
push
mov
mov
daa
cli
fisttp
je
jb
push
mov
jmp
adc
jns
push
push
xor
jnp
mov
mov
loope
mov
and
fadd
cmp
rol
and
fist
fstp
fild
mov
aad
inc
sbb
shl
mov
imul
shr
inc
dec
adc
mov
imul
jb
inc
sbb
xor
fbstp
retf
sub
fild
and
or
dec
cwde
adc
in
nop
lock
lds
mov
cmp
movs
in
sbb
add
mov
fcmovu
pop
sar
xor
fnstsw
loopne
movs
call
hlt
push
jmp
push
sbb
jo
inc
cld
add
jb
loopne
mov
das
loop
ds
and
pop
pop
adc
add
sbb
and
jecxz
popf
shr
(bad)
or
icebp
pop
mov
xchg
frstor
add
leave
and
hlt
adc
arpl
pop
xchg
mov
sbb
mov
cmps
clc
pop
dec
sar
add
xor
test
push
movaps
cmps
imul
shl
add
js
cmps
sbb
mov
fs
repnz
mov
add
dec
jb
nop
inc
and
xchg
inc
adc
xor
sub
inc
stos
mov
fcomp
sub
mov
xor
fsub
sbb
push
dec
xchg
lods
leave
das
cwde
and
adc
inc
call
stos
ins
test
nop
outs
inc
mov
(bad)
xlat
or
add
out
add
mov
stos
mov
sub
dec
and
nop
les
cmp
enter
xchg
dec
mov
sbb
dec
cmps
push
cmps
cld
or
sbb
inc
loopne
push
repnz
das
fs
xchg
dec
mov
and
scas
in
push
stos
dec
inc
mov
sahf
cdq
inc
push
inc
pop
push
push
and
sub
ins
push
sub
or
inc
jb
dec
and
add
jge
and
ins
push
in
and
mov
shl
pop
outs
imul
xor
mov
call
add
cmps
jmp
add
sbb
or
mov
push
mov
xor
aaa
mov
mov
sbb
out
lods
(bad)
sub
mov
and
add
rsm
cwde
ja
and
ret
mov
xor
and
(bad)
pop
and
jbe
xchg
stos
push
cmp
adc
out
hlt
jnp
xchg
mov
cwde
and
lods
inc
add
xor
mov
xor
xor
lsl
and
pop
cli
adc
xchg
adc
stos
test
fwait
(bad)
mov
fdiv
je
mov
mov
add
inc
push
int3
imul
cmp
fld
xlat
sub
dec
shr
dec
or
xor
jo
cmp
inc
loope
push
mov
cmps
cmps
rcr
sub
and
lea
xchg
inc
adc
cmp
stc
inc
mov
mov
pop
mov
and
mov
out
fsin
cmp
adc
dec
xor
jmp
and
nop
in
es
or
in
dec
rcl
rcl
nop
stos
arpl
add
mov
into
mov
xchg
rcl
mov
in
adc
add
mov
xor
stos
adc
aam
test
test
aas
in
inc
outs
xbegin
add
or
mov
int3
jnp
leave
sub
xor
sbb
(bad)
in
dec
sbb
add
sub
push
pop
sbb
adc
or
adc
in
(bad)
inc
mov
add
adc
push
xchg
sar
push
mov
mov
xor
jo
mov
sbb
test
fxam
mov
cmps
imul
jae
mov
out
xchg
cmps
imul
and
rol
pop
jns
sub
add
mov
mov
xchg
mov
les
jp
rcr
adc
cdq
lods
mov
sbb
sbb
mov
adc
lahf
fbstp
add
pop
(bad)
jle
inc
push
in
icebp
and
lock
add
lock
add
popa
retf
jo
pop
jle
sbb
and
xor
movs
call
rol
leave
loopne
xor
inc
mov
dec
push
fsub
mov
sbb
test
loop
inc
sti
fmul
cmp
(bad)
aam
sbb
sbb
fs
rcr
shr
jge
xchg
test
int3
inc
fadd
enter
push
in
jno
jae
data16
ffree
sub
xor
push
sub
cmp
aaa
mov
shl
jb
dec
or
in
out
in
mov
add
cmps
leave
mov
pop
or
sub
stc
add
ins
(bad)
call
call
mov
out
mov
in
neg
mov
cdq
mov
and
mov
or
push
jp
jo
xchg
lods
push
jecxz
sbb
pop
push
ret
adc
mov
xor
movs
mov
nop
out
inc
pushf
sbb
pushf
xor
jns
cwde
mov
sbb
cmp
push
xchg
cmp
push
fs
jno
push
jmp
dec
mov
fwait
mov
sub
daa
xchg
ins
int
lds
mov
mov
mov
jbe
movs
dec
sbb
xchg
add
dec
gs
leave
sbb
mov
fs
sub
sahf
xchg
push
repnz
add
enter
mov
and
in
inc
pop
leave
or
mov
mov
push
cmp
inc
enter
jo
add
cmp
das
mov
push
mov
sbb
cmp
push
push
loopne
and
sbb
loope
or
mov
sbb
popf
push
in
and
and
push
mov
ins
sbb
inc
sub
sbb
dec
push
dec
sub
rcl
mov
cli
add
imul
scas
mov
sub
push
(bad)
cmps
imul
test
jae
call
cwde
imul
pop
or
adc
(bad)
(bad)
je
inc
and
dec
je
je
nop
or
and
and
sbb
sub
nop
pop
mov
in
mov
loopne
loopne
pop
and
(bad)
out
fdiv
pop
adc
sbb
and
and
sbb
retf
rcl
out
xlat
mov
test
in
xor
enterw
mov
mov
adc
addr16
sbb
jb
les
mov
xchg
mov
cmps
mov
xor
mov
imul
xlat
xor
rcr
movhps
or
mov
xor
rol
sbb
or
and
fisttp
add
pop
adc
xchg
push
addr16
mov
cwde
nop
sbb
ins
inc
loop
movs
jmp
mov
mov
xchg
cmp
sbb
js
dec
addr16
add
xor
hlt
mov
mov
dec
cmp
add
sbb
mov
jno
dec
je
enter
mov
xor
and
sbb
sub
adc
mov
cmp
cmp
dec
push
stc
or
in
dec
xor
xlat
xchg
lahf
test
add
call
add
or
arpl
ja
mov
aas
jmp
sub
ret
fisttp
aas
push
cmp
jmp
ss
push
add
inc
test
js
or
push
pop
mov
jne
ins
or
jmp
cmp
cmp
mov
outs
rcl
and
mov
gs
mov
adc
rol
lods
retf
sub
push
jmp
(bad)
xor
add
inc
ins
inc
scas
fs
or
nop
and
add
add
sbb
sbb
sub
inc
ror
test
xchg
pop
(bad)
test
jnp
push
add
ins
adc
ror
loopne
sub
ins
add
pop
cmp
and
push
add
fist
jo
push
adc
mov
fwait
adc
xchg
adc
scas
in
adc
pop
adc
mov
mov
or
mov
ret
sub
in
adc
leave
xor
sub
les
enter
push
push
or
pop
adc
out
mov
stc
inc
mov
popf
mov
add
pop
or
xor
pop
fcom
sub
in
xchg
inc
rol
xlat
and
push
(bad)
out
shr
es
int3
test
inc
adc
inc
(bad)
out
pop
pop
xor
mov
or
push
rcl
jl
mov
cmp
cmp
ret
in
pop
repnz
sub
and
fild
es
xor
lock
xor
loop
inc
push
and
and
pop
mov
push
ret
fcom
bound
adc
(bad)
mov
xchg
cmp
jo
mov
cmp
add
push
data16
scas
fchs
add
cmp
das
sub
push
inc
test
push
cmp
das
outs
(bad)
mov
or
test
std
push
push
or
jmp
mov
(bad)
fmul
mov
adc
jl
cmp
jne
inc
test
pop
jmp
iret
(bad)
jle
sub
mov
dec
push
ror
(bad)
pushf
inc
aaa
clc
test
clc
cmp
inc
rol
jmp
fwait
pop
popf
or
(bad)
(bad)
and
push
add
in
sub
enter
and
add
cmp
mov
xor
clc
pop
sub
ja
ins
mov
or
leave
repnz
dec
or
xor
hlt
pop
cwde
add
fs
add
pop
fiadd
fcom
pop
or
add
jae
ds
test
sub
jne
jae
jno
test
inc
sbb
lock
addr16
cmp
inc
outs
and
fmul
push
push
dec
repnz
lods
add
test
push
fadd
mov
xchg
adc
xchg
mov
test
jne
mov
adc
ja
inc
sbb
and
fs
jp
adc
in
in
sahf
ins
sub
ret
sbb
mov
nop
jl
repnz
lock
imul
in
xor
or
jg
pop
das
fwait
jmp
dec
fsubr
adc
in
call
aas
int3
pushf
or
sbb
retf
push
add
mov
scas
test
mov
and
and
dec
xor
dec
push
pop
xor
retf
imul
call
ins
adc
push
and
and
push
aam
gs
loopne
icebp
mov
or
leave
fidivr
daa
xor
inc
lock
sti
adc
xor
add
push
mov
and
jmp
push
clc
adc
loope
adc
or
pop
mov
ins
mov
sbb
lock
outs
pop
add
sub
sbb
je
add
jmp
push
ins
adc
fsub
mov
dec
adc
ftst
jne
adc
inc
and
ins
pusha
ret
jnp
dec
(bad)
add
in
dec
jmp
cmp
gs
pusha
popa
adc
jmp
xor
pop
sahf
jmp
lock
xchg
in
pop
sar
push
int
add
add
xor
cmp
dec
push
inc
xor
outs
jbe
mov
mov
seto
ins
adc
pop
imul
dec
push
sti
(bad)
mov
jmp
push
cdq
idiv
adc
or
mov
pop
sub
and
jne
sub
and
sbb
jge
repnz
rol
out
sub
push
jne
add
ins
nop
test
clc
or
mov
call
iret
sbb
imul
xor
dec
sahf
rol
test
lock
mov
je
sub
add
push
jnp
lds
pop
adc
sbb
xchg
inc
lds
adc
and
sbb
xor
pop
push
idiv
xchg
popf
or
sbb
jo
mov
and
cmps
inc
push
imul
cmp
mov
pushf
ins
imul
enter
pop
pushf
or
and
iret
inc
and
sub
mov
dec
sbb
xor
mov
dec
fldl2e
adc
inc
lds
add
rcl
mov
je
dec
je
(bad)
shl
mov
push
mov
call
push
fs
xor
fnstcw
mov
push
jne
int3
inc
mov
and
inc
daa
mov
and
loopne
and
arpl
sub
inc
sar
int
xchg
mov
jb
jmp
mov
dec
mov
(bad)
sub
clc
and
nop
and
pop
inc
add
cmp
push
cmp
pop
and
ss
pop
and
and
sbb
cwde
mov
ror
xchg
add
in
(bad)
enter
add
inc
or
add
xor
cmps
imul
xor
mov
mov
mov
or
rol
shl
jne
adc
sub
cs
pushf
add
jge
jl
sbb
cmp
or
xor
pop
aam
aam
les
fcomp
faddp
xchg
push
or
ret
and
pop
mov
cmp
pop
xchg
add
sbb
sti
xchg
inc
shl
cmp
pop
sub
ins
mov
xchg
xor
aaa
call
pop
cmp
(bad)
(bad)
dec
mov
sub
add
sub
stos
xor
lds
and
(bad)
lock
popa
fsubr
or
or
mov
les
add
cmp
or
or
nop
popf
cmp
cwde
les
inc
inc
or
jne
adc
xor
and
and
xor
jmp
pop
mov
or
add
mov
fnstenv
or
cmp
xchg
or
adc
into
test
mov
sbb
loop
test
push
cmps
ror
jmp
(bad)
rcl
ret
clc
inc
mov
dec
das
rcr
xor
(bad)
sbb
pop
and
pushf
in
or
movs
mov
fcom
mov
out
push
or
in
aaa
fistp
nop
shr
(bad)
fbstp
cmp
fisttp
popf
xlat
push
sub
mov
sub
mov
(bad)
cmp
or
cli
add
mov
mov
fwait
xor
mov
aaa
push
mov
in
inc
add
push
je
dec
je
dec
or
ja
arpl
or
movs
sub
add
sbb
or
sbb
ins
mov
sbb
jne
inc
call
adc
(bad)
adc
outs
pop
call
or
(bad)
shr
jmp
aas
push
xchg
jmp
jne
jmp
stc
xchg
xchg
ds
jmp
and
sbb
mov
xor
sbb
ret
test
mov
lods
cdq
nop
cmp
hlt
adc
dec
push
add
ret
cmp
jle
jge
rcr
push
jge
add
adc
push
mov
and
or
jge
sbb
or
pop
jbe
aaa
xchg
stos
mov
xchg
frstor
fcomp
jns
fadd
es
xor
push
jbe
daa
mov
adc
or
fstp
and
sub
adc
(bad)
or
or
jge
ret
and
rcr
jne
js
or
adc
fcomp
retf
dec
and
or
and
fucomip
js
cdq
add
fs
je
dec
mov
call
sar
dec
cmc
shl
leave
mov
lea
add
pop
inc
sbb
cli
cmp
shl
pop
outs
cmp
pavgw
sahf
scas
stos
cmp
(bad)
dec
push
sti
into
xlat
js
int
mov
stos
mov
push
adc
pop
sbb
ins
inc
inc
mov
lods
mov
(bad)
or
call
and
cmps
dec
fst
pop
aaa
mov
mov
or
iret
cmp
pop
or
jnp
and
mov
or
leave
mov
dec
inc
mov
jo
popa
mov
xor
inc
popa
test
xchg
cmp
push
neg
jl
je
push
inc
sar
sbb
xchg
(bad)
sbb
mov
cld
adc
xor
sahf
cmp
xchg
xor
push
scas
das
in
xor
fdiv
push
mov
aad
push
and
sbb
add
cmc
enter
xor
mov
fisub
inc
add
sub
sub
add
mov
movs
fld
or
movs
add
ret
xor
rcl
gs
push
sub
dec
push
pop
gs
add
and
cmp
mov
jle
or
lods
ja
movs
sbb
cmc
divps
out
cmp
repnz
rcr
and
leave
push
in
loop
sbb
lds
xchg
rol
iret
xchg
sar
sbb
pop
fld
ja
dec
stos
enter
mov
pop
out
in
or
xchg
pop
cmp
arpl
push
xchg
ret
fld
jne
sbb
pop
cmp
dec
adc
or
js
push
adc
mov
push
sub
sbb
ret
xchg
ins
int
push
push
sbb
mov
lahf
xor
js
adc
ror
jns
mov
imul
les
jnp
sbb
jl
vmread
push
aas
pop
cmp
test
cmp
pop
inc
adc
add
ins
(bad)
dec
test
sbb
fimul
xchg
out
fistp
add
dec
neg
mov
add
mov
rcl
jbe
ins
add
das
add
sub
js
mov
fld
lods
pop
sbb
sbb
imul
out
jl
add
popf
test
loop
das
int
pop
ror
mov
fneni(8087
lods
inc
xlat
xor
stc
adc
fnsave
push
int3
add
ins
pop
sub
imul
fwait
or
fstp
jbe
fild
fistp
popa
add
mov
test
push
jl
adc
pusha
lods
shl
pop
or
push
adc
out
jl
gs
cmp
mov
ror
test
or
and
test
ins
cmp
sub
push
fwait
cmp
jmp
mov
addr16
scas
jge
jbe
and
js
jecxz
shl
repz
loop
(bad)
add
xor
cmovg
dec
sar
jo
xchg
mov
scas
xor
or
cmp
cdq
adc
(bad)
dec
push
dec
adc
fild
and
push
add
ret
pop
mov
cmp
cmp
mov
and
int3
movs
cmp
or
pop
inc
js
xchg
xor
lods
jmp
jo
nop
sbb
adc
aam
pop
gs
pushf
adc
sti
dec
dec
es
mov
clc
sub
mov
sar
retf
cld
sbb
adc
and
in
ret
stos
cmps
xor
les
repnz
inc
mov
sub
sub
and
add
adc
rcl
and
es
mov
in
xchg
push
adc
rcl
cmp
adc
imul
pop
mov
and
mov
in
or
fiadd
in
out
dec
call
add
xor
imul
dec
repz
ins
inc
adc
fdiv
cmp
popf
scas
dec
and
mov
push
jbe
ror
lock
clc
(bad)
gs
inc
neg
sbb
data16
sub
imul
jb
push
dec
ins
push
call
xchg
pop
push
call
out
dec
lods
sbb
pop
add
imul
cmc
adc
pop
shl
xchg
adc
call
scas
das
or
rcl
ds
pop
inc
mov
pop
lods
and
pop
mov
adc
leave
jbe
sub
xchg
jne
fst
add
ds
fidivr
in
pop
xchg
xchg
jl
(bad)
mov
sbb
add
mov
cmp
sbb
xchg
and
or
pop
inc
ins
jo
jns
int
dec
push
rol
invd
push
popa
movs
mov
ins
popa
adc
int
dec
push
scas
jb
sti
jbe
and
pop
ins
add
inc
outs
and
outs
enter
inc
jne
jb
outs
arpl
or
imul
xor
xor
mov
(bad)
and
xor
test
ja
clc
gs
outs
setb
fldcw
outs
outs
ja
mov
std
inc
arpl
punpcklbw
in
and
inc
out
pop
je
mov
inc
jns
push
outs
jb
out
or
not
mov
fidiv
xor
or
std
shr
add
inc
sahf
(bad)
jmp
pop
outs
pop
call
push
test
xlat
cmp
ror
jmp
adc
ss
pop
xor
cld
sbb
and
jno
push
outs
jne
loop
lea
jl
cld
mov
add
jl
adc
cmp
out
pop
popf
sbb
(bad)
adc
pop
hlt
sbb
hlt
mov
pop
(bad)
mov
ret
imul
fsubr
pop
xor
and
in
rcl
sbb
js
and
fnstsw
stos
fs
mov
in
addr16
mov
sbb
or
pop
push
inc
sahf
inc
outs
jns
and
enter
push
por
push
lods
sub
pop
push
cmp
add
pushf
xor
mov
pop
mov
aam
inc
out
ss
aad
and
and
je
or
or
xlat
mov
mov
imul
xchg
xor
clc
dec
jl
nop
iret
push
adc
push
std
in
or
and
and
push
dec
and
sbb
fsubrp
adc
nop
pop
scas
(bad)
stos
jge
mov
inc
sti
imul
ficom
retf
in
adc
sahf
inc
or
and
adc
test
push
xor
sbb
ficom
mov
sbb
push
aaa
dec
inc
dec
daa
adc
pop
ficom
cmp
jg
and
mov
sbb
or
push
fmul
call
rol
fcom
sbb
add
and
pop
(bad)
ror
(bad)
and
mov
lods
mov
add
push
ret
add
adc
sbb
sub
push
clc
push
push
hlt
push
outs
data16
xchg
pusha
les
mov
jno
cwde
ins
ss
or
(bad)
lock
add
mov
ret
lock
sub
cdq
addr16
push
int
movs
(bad)
aam
ror
jmp
jle
sub
xchg
push
adc
and
mov
nop
out
mov
int3
push
add
jnp
dec
in
gs
jl
aam
ins
xchg
pop
add
push
test
fcomp
mov
and
fs
das
fdiv
mov
and
addr16
jae
cmps
push
inc
es
test
pusha
cmp
nop
add
fcomp
repz
ins
fild
jbe
add
fs
xor
shr
sbb
pmulhuw
dec
call
add
cmc
inc
call
je
pop
inc
xor
add
jp
push
jo
mov
mov
xor
ss
scas
mov
test
aam
adc
and
push
mov
mov
sub
leave
and
and
call
ja
inc
jle
push
dec
jns
push
cmps
loop
inc
push
out
pop
lea
mov
mov
mov
nop
or
loopne
out
mov
(bad)
out
sbb
cmp
out
push
add
and
aaa
shl
adc
jne
dec
mov
(bad)
test
add
popa
cwde
jmp
outs
lock
test
cmp
adc
adc
aaa
(bad)
adc
pop
sub
add
cmp
outs
aaa
xchg
jb
add
jne
jbe
push
lea
mov
add
gs
shl
js
cdq
dec
ficom
push
push
outs
out
dec
daa
loopne
mov
mov
lds
fild
out
mov
inc
ret
xor
mul
jg
nop
pushw
cli
mov
inc
cmp
jle
mov
mov
(bad)
clc
dec
rcl
data16
mov
leave
adc
scas
lahf
jbe
sub
int3
cmp
push
fsubr
adc
or
mov
inc
xchg
cmp
scas
ret
adc
inc
cmp
int
leave
mov
sub
and
call
arpl
cmc
jle
mov
cmp
je
inc
mov
or
dec
rcr
jmp
jne
mov
xor
dec
retf
dec
fdiv
adc
(bad)
enter
add
jl
inc
xor
jle
pop
adc
adc
adc
jmp
add
pop
pusha
call
xchg
(bad)
clc
cmp
aam
dec
test
jl
inc
xor
jae
dec
inc
fdiv
mov
dec
jne
cmp
inc
test
sub
mov
pop
dec
ret
jnp
fsubr
pop
out
push
dec
sub
neg
push
ins
mov
mov
xchg
push
mov
xor
sbb
xchg
push
cwde
inc
leave
jg
push
pop
add
call
jl
sbb
mov
lds
inc
call
push
rcl
pop
or
test
mov
xchg
jg
jae
loope
sti
push
pcmpeqb
push
(bad)
mov
jmp
gs
inc
xchg
stos
and
mov
adc
pop
(bad)
or
or
imul
mov
in
xchg
in
pop
ret
add
jo
jle
pop
mov
call
pop
icebp
test
adc
xor
dec
pop
and
jmp
(bad)
adc
mov
repnz
or
icebp
pushf
lock
push
sbb
xor
jae
add
mov
xlat
outs
or
cmp
sahf
mov
push
and
enter
sbb
into
mov
popa
mov
pushf
lea
sbb
enter
hlt
sbb
cmc
test
hlt
xchg
test
enter
mov
add
adc
jg
and
addr16
call
jecxz
cmp
add
add
out
lds
retf
jbe
movs
adc
inc
xor
in
or
out
pop
or
push
(bad)
call
pop
cmc
lods
xor
out
mov
cld
fld
adc
inc
nop
rcr
fild
sbb
or
in
mov
push
cdq
adc
jns
shl
cmp
ins
jmp
mov
xchg
push
push
call
sti
push
mov
add
push
inc
inc
daa
lahf
and
pop
js
cdq
adc
pop
jno
(bad)
push
add
cmp
push
cli
lock
xor
pop
icebp
lock
dec
or
push
not
das
jnp
test
call
or
sbb
add
adc
add
add
jbe
enter
in
mov
hlt
cmps
int
add
mov
cmp
jge
jp
test
and
loop
push
add
std
fs
and
pop
sub
inc
xlat
clc
popf
or
or
aas
dec
inc
jp
std
shr
xor
mov
mov
leave
push
ret
pop
call
in
fdivr
(bad)
cdq
ds
and
pop
inc
sbb
nop
inc
push
test
call
fwait
add
cmps
mov
jmp
in
sbb
push
test
repnz
nop
aam
fdivr
xchg
ret
es
out
add
pop
ret
or
cmp
setns
fstp
fwait
paddusw
or
cmps
cmp
popa
daa
enter
mov
push
xchg
jge
jmp
imul
shl
add
sub
mov
or
(bad)
or
xor
jmp
shl
loopne
jmp
dec
fnstenv
inc
and
shr
inc
popf
popa
es
push
cmp
cmp
clc
out
das
mov
add
xor
pop
xor
inc
add
dec
call
and
add
adc
stc
ja
inc
ins
mov
sbb
sbb
fiadd
adc
imul
or
popa
pop
ins
or
test
jle
imul
xchg
out
fisubr
mov
adc
sbb
adc
stos
push
popa
add
xchg
add
ss
mov
aas
cmp
or
cmp
je
pushf
cmp
test
push
inc
pop
and
sti
push
pushf
xchg
sub
test
pop
call
add
clc
xor
fiadd
jle
adc
add
(bad)
inc
xor
int3
dec
fstp
or
adc
ret
int3
xchg
ret
out
mov
push
sti
popa
cmp
(bad)
cli
repz
add
scas
call
add
sbb
pop
or
lods
cld
(bad)
cli
cli
jnp
and
mov
loopne
or
or
inc
test
(bad)
or
imul
add
inc
daa
cwde
jns
sub
pop
jp
xor
push
push
jmp
ss
push
aaa
enter
push
push
pop
lods
test
mov
(bad)
push
stos
push
add
out
test
cmp
ins
mov
(bad)
jb
push
inc
jbe
pop
shl
or
js
cld
test
ror
pushf
push
sti
dec
push
mov
cmp
adc
(bad)
and
mov
xchg
fidivr
adc
fs
add
jo
imul
pusha
adc
add
in
test
push
cs
enter
mov
pop
mov
shl
sbb
lock
leave
mov
cmp
les
inc
lods
inc
mov
imul
es
pop
(bad)
repnz
shr
mov
fst
push
cwde
or
out
inc
cmp
pushf
mov
sbb
jge
les
and
fld
and
xchg
int
pop
adc
sbb
retf
cmps
jmp
and
and
nop
sub
mov
mov
xor
sub
mov
cmp
ret
and
retf
data16
inc
inc
les
cmp
cmp
mov
push
push
fs
retf
mov
retf
movs
pop
js
hlt
pusha
sahf
in
lds
pop
push
pop
ins
call
jp
jge
(bad)
js
add
(bad)
sbb
sbb
or
dec
xchg
daa
retf
loope
mov
lods
mov
cmp
sahf
sub
call
bnd
cwde
out
pop
pushf
out
dec
retf
xchg
in
mov
sbb
jecxz
ret
cmp
seto
cmp
pop
mov
add
stc
jns
mov
add
pop
sub
cs
cmp
add
pusha
sub
jg
sbb
lea
std
xor
cmp
jae
(bad)
jmp
adc
push
popa
pop
add
dec
push
inc
push
or
add
push
dec
push
inc
adc
jo
or
jb
popa
arpl
add
add
sub
jns
mov
ins
add
mov
movs
push
sub
dec
bound
xor
push
add
sub
jne
cmc
mov
int3
pop
adc
adc
mov
les
cld
sub
jl
out
push
inc
push
xor
in
out
int
outs
push
adc
or
inc
cmp
mov
or
jno
ret
pop
pop
xor
ins
fcomp
add
add
push
adc
test
add
dec
and
mov
call
or
addr16
mov
cmp
add
inc
cmp
pop
push
icebp
add
pop
or
aad
mov
dec
xchg
psubb
clc
mov
add
xor
ror
fimul
sti
mov
sbb
pop
popa
inc
mov
mov
sbb
out
pop
and
pop
ss
mov
inc
push
iret
pop
inc
sub
ret
nop
mov
pop
sub
sbb
ins
adc
mov
jl
and
dec
sub
ss
add
dec
cmp
or
cdq
add
add
or
pushf
fist
ret
sub
cli
add
push
xor
or
stos
sub
je
loop
and
test
add
clc
in
cmp
push
out
jno
aad
in
test
into
ficom
frstor
pop
add
pop
call
rol
mov
push
inc
cmp
jne
sbb
add
outs
sbb
and
pusha
test
add
ins
xchg
call
mov
pop
or
add
cwde
scas
test
adc
ins
push
mov
into
cmp
adc
stos
les
mov
cmp
or
push
or
sbb
push
or
add
test
adc
add
xchg
in
mov
cmp
jne
sbb
mov
push
add
push
jmp
ret
rcl
outs
inc
in
add
out
mov
inc
stos
or
dec
cmp
jb
fist
inc
mov
dec
xor
mov
stos
fidiv
adc
mov
sbb
push
aad
add
popa
sub
aas
fnstsw
add
cs
jb
add
cli
(bad)
mov
(bad)
stc
mov
hlt
and
or
test
or
cmp
jne
or
add
push
std
lahf
cmp
pop
pop
mov
add
inc
mov
jmp
mov
clc
fadd
inc
cld
arpl
test
jecxz
add
pushf
clc
add
inc
shl
push
push
call
xchg
mov
push
jb
pop
jne
js
and
push
mov
dec
cmps
jbe
or
in
mov
enter
gs
gs
or
cld
ss
ins
out
add
popf
mov
sub
xor
jae
out
ja
fcmovnu
mov
sbb
cmp
mov
adc
jbe
add
mov
jb
or
je
data16
fcom
fild
pop
cmps
mov
fnstenv
dec
pop
mov
ins
mov
div
mov
sub
pusha
add
adc
hlt
mov
xchg
jmp
lock
or
out
xor
pop
loop
(bad)
cmp
jbe
sub
mov
std
(bad)
mov
sbb
nop
jbe
mov
cmp
mov
mov
adc
sti
push
or
rcl
mov
push
mov
repnz
xchg
repz
in
xor
jmp
dec
and
jne
pop
sub
inc
test
pop
mov
std
sbb
jae
mov
out
jae
std
sbb
fcomp
adc
inc
add
pop
rcr
fcom
sub
sbb
mov
leave
adc
mov
sbb
jg
dec
leave
dec
aas
cmc
push
xor
push
mov
inc
adc
xor
jmp
cs
and
jb
mov
movs
adc
sbb
jl
or
and
icebp
es
add
neg
push
add
mov
xchg
sub
push
test
push
je
sbb
jle
cmp
mov
sbb
out
mov
xor
repz
lahf
inc
xor
pop
enter
data16
ss
jmp
imul
test
dec
sbb
xlat
cmp
adc
fdiv
cmp
sub
inc
dec
in
nop
dec
js
push
adc
dec
xor
mov
cwde
sbb
add
fcmovnu
xor
cmp
jae
pushf
jge
mov
imul
mov
dec
mov
mov
xchg
imul
pop
xchg
cmc
adc
cmp
add
or
add
enter
add
inc
push
inc
fdivr
xor
(bad)
ret
or
jecxz
pusha
dec
add
mov
cmp
bswap
mov
push
add
fiadd
ss
inc
dec
xor
cmp
jecxz
rol
mov
jmp
xchg
dec
inc
add
xchg
xchg
adc
push
sub
sahf
xchg
lea
xor
add
pop
sbb
mov
adc
add
rol
cmp
mov
sbb
or
mov
pop
xor
fstp
jne
(bad)
push
xchg
add
xor
fmul
push
cmp
icebp
jmp
mov
or
fild
pop
xor
pop
cmp
sub
aam
mov
jmp
push
pop
add
fst
adc
mov
sti
or
icebp
(bad)
push
xor
shl
pop
ret
or
repz
and
data16
lea
out
push
retf
add
sbb
pushf
jl
fistp
adc
xor
dec
add
fistp
add
or
or
xchg
add
or
(bad)
aas
addr16
aam
adc
pushf
or
mov
xor
jl
xor
test
sub
or
dec
or
int3
rcr
and
pop
inc
sbb
lock
je
jg
dec
iret
add
push
arpl
in
xor
test
dec
loope
add
fcomi
and
jb
(bad)
cmp
sbb
push
jnp
add
stos
and
arpl
mov
or
fcom
test
mov
repz
xor
lock
jbe
and
cmp
adc
and
push
or
pop
test
sar
inc
or
clc
sub
jmp
fld
add
fstp
retf
outs
jae
cdq
adc
xlat
(bad)
jne
push
mov
ins
adc
dec
cld
aad
(bad)
(bad)
rcl
aad
aas
test
pop
rcr
or
pop
das
loop
cli
push
inc
aad
sub
mov
mov
pop
and
jo
(bad)
adc
in
arpl
inc
arpl
adc
js
jb
pop
mov
sbb
cmp
inc
or
ss
ds
jmp
in
pusha
add
xor
mov
cwde
jge
ss
jle
or
or
(bad)
ins
dec
call
enter
sbb
fdiv
mov
or
sub
pop
lock
pusha
or
push
sbb
xchg
push
clc
xor
push
mov
cmp
xor
scas
push
sub
(bad)
add
popa
mov
sbb
xchg
adc
arpl
xchg
ja
outs
add
or
push
(bad)
aam
lock
cmp
les
mov
dec
cwde
mov
ins
adc
imul
jo
jo
pop
mov
xchg
scas
cmp
push
adc
dec
add
or
sar
div
mov
and
sub
mov
fidivr
or
pop
jg
pop
xor
or
cmp
je
pop
jmp
adc
or
dec
or
push
imul
and
lock
sub
jge
(bad)
mov
ret
mov
add
mov
xor
lock
or
xor
movs
(bad)
(bad)
scas
mov
mov
and
(bad)
xchg
fs
jp
xor
cmp
lods
sbb
or
scas
sub
add
fsubr
push
call
or
jle
mov
cld
mov
jno
pop
xchg
hlt
xor
add
push
shr
inc
gs
add
sbb
inc
adc
(bad)
xchg
in
in
xor
pop
push
xor
scas
inc
push
shl
sub
inc
pusha
fs
rol
hlt
xor
in
cmp
add
mov
int3
or
stc
jmp
fadd
pop
sbb
loop
xchg
sub
dec
sub
pop
or
and
cdq
sbb
jo
jmp
mov
mov
mov
adc
aad
sbb
test
and
xchg
loopne
or
test
cmp
cwde
adc
adc
sub
ret
popf
cmovb
cmp
and
fdivrp
or
sub
mov
clc
push
int3
push
inc
mov
sar
inc
test
out
inc
push
cmp
or
ret
pop
add
shl
lods
jbe
es
outs
mov
xor
push
pop
sbb
jle
mov
outs
inc
mov
fisttp
xchg
or
ret
sbb
std
sti
(bad)
or
jmp
xor
test
ds
jl
or
or
test
ror
shr
sbb
aad
xchg
movs
pop
and
xchg
(bad)
(bad)
in
out
mov
clc
call
xlat
test
jno
(bad)
cmp
jl
mov
mov
jo
cmp
cmp
push
jb
or
jns
popa
adc
mov
sbb
add
dec
rol
dec
adc
sbb
mov
popf
or
add
cld
test
cmp
xor
and
adc
mul
loope
or
nop
sahf
lds
sbb
adc
xor
pop
dec
add
sbb
and
sbb
jne
ins
jo
inc
or
mov
ja
sahf
fcom
data16
add
mov
push
or
clc
fcomp
ret
ror
iret
xor
cmp
mov
push
or
dec
jmp
jne
je
push
and
iret
test
test
jmp
adc
or
cmps
and
mov
push
daa
imul
sti
push
xor
inc
or
sub
inc
int
test
and
imul
aas
ret
push
pop
(bad)
push
sbb
add
pop
adc
retf
xchg
mov
lds
(bad)
adc
rol
adc
adc
mov
arpl
dec
or
pop
pop
je
test
pop
je
mov
(bad)
mov
mov
push
mov
daa
pop
pop
or
ins
das
add
sub
pop
(bad)
pop
pop
jne
adc
shl
adc
jns
out
pop
loopne
cmp
mov
scas
sub
dec
push
or
imul
pop
test
or
and
or
js
jbe
push
fistp
jne
or
or
es
fwait
adc
sti
mov
sbb
inc
jno
mov
or
test
and
xchg
into
mov
or
inc
movs
pop
xor
xor
aas
push
pop
repz
sbb
mov
adc
cmc
ins
mov
or
add
add
loopne
cmc
sti
sbb
mov
mov
sub
shl
jle
ss
ret
push
push
push
lods
xor
mov
iret
fsub
ret
push
dec
pop
push
add
jl
or
je
jne
sbb
push
jmp
cld
ret
sub
inc
mov
adc
sar
(bad)
mov
inc
lea
push
scas
adc
sbb
call
push
imul
mov
jmp
mov
and
mov
stos
int
lods
stc
add
nop
or
icebp
pop
adc
adc
or
ss
js
dec
rol
outs
inc
ret
lea
lea
sbb
std
sbb
scas
fisttp
add
(bad)
pop
cld
and
add
mov
cwde
push
call
and
cs
adc
mov
cmp
(bad)
hlt
mov
mov
jbe
mov
mov
adc
cmp
retf
fist
sbb
sbb
sub
push
cs
sbb
sub
or
icebp
mov
mov
or
and
repnz
push
pop
icebp
pop
adc
or
test
ret
call
jne
sub
aas
rol
inc
ja
jae
test
pop
pusha
daa
inc
xor
call
mov
pop
sbb
sub
int
jle
sbb
xchg
in
(bad)
ss
mov
cmp
sbb
test
jne
or
xor
or
lock
and
mov
and
sbb
and
mov
xchg
out
pop
jmp
pop
inc
add
and
push
and
and
cmp
mov
mov
ss
pop
clc
inc
dec
aam
adc
jecxz
aas
cmp
push
push
test
in
sbb
dec
daa
push
and
inc
push
sub
mov
lahf
push
sbb
pusha
retf
shl
mov
push
pusha
lea
aaa
mov
cmp
dec
push
test
cmp
jae
cmp
push
out
out
push
dec
sub
std
iret
pop
inc
cmp
jbe
cmp
mov
sbb
cwde
xor
loope
cli
je
imul
push
sbb
mov
or
xchg
cmps
pushf
ins
addr16
mov
pop
les
sbb
push
pop
sub
xor
sbb
fdivr
out
loopne
fild
dec
add
jmp
inc
das
push
mov
rcr
mov
sub
sbb
cmc
xor
sub
fist
bound
dec
sbb
fldcw
mov
sbb
cmp
div
and
mov
add
push
mov
jae
and
pop
or
xor
popf
mov
(bad)
sub
or
dec
out
scas
rcr
cmp
jne
dec
sbb
mov
or
sti
xchg
mov
loop
push
or
pop
in
je
mov
cmp
jne
sub
ins
movs
or
dec
retf
or
outs
xchg
das
pop
pop
cmp
cmc
fistp
cmp
jne
shr
js
or
cmc
jo
(bad)
mov
shl
enter
shl
mov
mov
stos
pop
pop
js
(bad)
inc
xor
mov
push
inc
xchg
mov
pop
dec
and
add
sub
je
and
push
pop
jle
je
pop
je
ret
sub
inc
es
(bad)
xchg
lea
adc
ja
cmp
ja
lea
aaa
loopne
xor
sub
sti
(bad)
in
mov
jge
jmp
inc
fdivp
fdivr
js
pop
sub
jmp
inc
and
mov
aad
lock
fild
add
dec
mov
das
(bad)
pop
adc
or
into
add
push
cld
ret
push
aad
xor
mov
(bad)
sbb
loopne
pop
clc
cmp
stc
adc
dec
ins
sbb
mov
mov
retf
adc
and
push
(bad)
(bad)
js
in
or
daa
sbb
push
jg
xor
js
sub
cmp
jg
add
sub
push
arpl
cmp
mov
pop
pop
jmp
dec
or
ins
fisttp
mov
push
mov
loopne
ins
jecxz
jle
test
je
or
mov
rol
or
jg
xchg
adc
repz
lea
jmp
mov
dec
add
jg
sub
lea
inc
loope
add
mov
cmps
fisubr
div
pcmpeqb
and
in
sbb
je
jecxz
inc
and
fnstenv
dec
jge
inc
stc
cmp
xor
sbb
mov
or
stos
xor
pop
mov
or
cmp
and
mov
cli
or
pushf
or
ret
(bad)
daa
aas
stc
leave
hlt
adc
mov
(bad)
cld
in
out
sbb
add
mov
mov
dec
adc
out
xchg
sub
out
inc
sub
pop
jecxz
add
leave
sbb
inc
cs
jbe
imul
cmp
mov
(bad)
mov
jg
fwait
bound
cmp
xlat
fadd
repnz
(bad)
lods
outs
xor
xchg
push
or
push
push
int3
into
sbb
shl
inc
mov
push
pop
test
enter
mov
inc
cmp
(bad)
(bad)
push
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
pop
(bad)
mov
addr16
(bad)
(bad)
(bad)
dec
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
dec
js
(bad)
jmp
inc
mov
stos
mov
cmp
or
mov
pop
out
sub
push
mov
inc
imul
(bad)
div
jl
xor
cmp
call
mov
popf
sti
jmp
stos
push
inc
mov
push
sbb
sar
repnz
test
nop
fild
(bad)
(bad)
(bad)
jmp
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
(bad)
(bad)
call
xchg
pop
(bad)
ds
push
cmps
scas
mov
pop
or
add
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmps
lock
cld
rcl
popa
sub
(bad)
repz
mov
mov
outs
fwait
xchg
and
and
outs
bound
xor
sbb
pop
pop
stc
push
push
or
cmp
inc
pop
jg
mov
push
mov
mov
jle
idiv
push
xchg
add
pop
sti
add
cli
rol
push
jmp
xor
mov
clc
icebp
fdiv
mov
push
fst
or
push
lods
dec
out
mov
not
aas
or
mov
or
inc
push
inc
pop
inc
outs
jb
popa
outs
fs
(bad)
call
ins
jo
imul
push
dec
popa
mov
jle
add
fninit
fldcw
fcmovu
mov
rol
repnz
shl
xchg
mov
inc
xchg
add
and
leave
push
pushf
lea
ror
or
push
pop
lea
or
cmp
nop
inc
nop
dec
ret
sbb
sbb
sub
xor
inc
les
jge
add
push
add
dec
fsubr
or
dec
mov
inc
stos
sbb
pop
pop
cmp
cmps
mov
sbb
in
cmp
je
pop
mov
add
jae
div
or
mov
nop
sbb
pop
nop
push
jecxz
push
(bad)
aam
add
fwait
push
aam
cmp
pop
adc
cmp
popf
jmp
std
loop
cmp
(bad)
jb
xcrypt-cbc
cmps
push
call
loope
add
shr
adc
jno
push
mov
dec
clc
or
sahf
icebp
and
arpl
imul
pop
cmc
popf
in
adc
clc
mov
movs
push
cs
lods
mov
rcl
rol
sub
push
fadd
inc
mov
imul
add
cmp
jecxz
mov
sub
xor
adc
and
jo
stc
pop
or
jne
rcl
fidiv
and
dec
sub
xchg
dec
lds
mov
cld
add
enter
jbe
jle
fucomip
rcl
and
add
scas
(bad)
ret
push
leave
pop
pop
div
pop
jmp
mov
xor
ss
je
inc
fcom
repz
neg
push
sbb
add
pop
inc
sub
mov
or
pop
int
and
sbb
ins
mov
and
sub
jp
(bad)
push
cmp
xor
xchg
inc
mov
mov
mov
cs
inc
or
or
ficomp
inc
sub
iret
into
call
or
push
mov
push
gs
sar
les
ja
or
or
clc
sbb
jecxz
(bad)
jg
or
call
fcom
int3
idiv
jbe
add
or
mov
cli
in
push
aam
sbb
add
inc
xchg
int
sbb
inc
call
retf
mov
fwait
jae
mov
imul
fsubr
pop
push
push
adc
cli
sbb
jmp
sbb
arpl
jmp
add
in
mov
sbb
jno
shrd
push
pop
loop
adc
inc
add
push
inc
push
cli
adc
cmp
loope
rol
adc
outs
push
movs
scas
shl
and
sub
inc
adc
icebp
xor
(bad)
out
inc
sbb
mov
cmp
mov
es
test
add
or
ja
sbb
stos
loopne
in
pop
cmp
push
jp
sbb
or
and
push
adc
test
je
pop
sub
jo
sbb
cmps
cmc
pop
jne
inc
or
push
cld
xchg
in
xor
fldenv
sub
add
mov
jb
xchg
pop
add
inc
add
into
ret
add
push
sbb
and
mov
adc
mov
inc
dec
xor
mov
pop
push
sbb
cmp
pop
aaa
inc
dec
sub
cli
mov
pop
shl
pop
add
lds
inc
mov
das
aas
xor
rcr
sub
fdivr
dec
fdiv
xor
mov
or
pushf
jecxz
inc
inc
jo
je
js
loop
jg
xor
jne
and
or
jnp
sub
test
inc
add
jae
xchg
push
push
cdq
xchg
inc
adc
inc
js
mov
cmp
and
adc
inc
or
fild
pop
jmp
xchg
xor
dec
mov
push
mov
push
cmp
cdq
and
shl
aaa
or
fsubr
call
and
and
add
cmp
and
out
pop
xor
inc
dec
sub
test
mov
push
loope
xchg
inc
or
pusha
add
sti
or
ins
pushf
outs
aaa
mov
adc
sbb
mov
int3
adc
cmp
pop
pop
mov
pusha
push
(bad)
pop
inc
enter
jmp
inc
call
ret
mov
push
push
std
dec
cmp
ficomp
test
or
lock
jne
fwait
sub
push
mov
fcmovu
inc
or
push
pop
stos
pop
test
jb
xor
push
(bad)
out
ficom
inc
fiadd
rcl
jg
push
add
adc
pop
test
jg
mov
mov
add
mov
mov
add
add
mov
xor
jmp
pop
push
daa
add
outs
adc
add
es
data16
test
fs
into
pop
sahf
mov
mov
jmp
inc
stos
add
mov
adc
push
xchg
(bad)
adc
scas
cmp
xchg
or
mov
dec
jp
pop
push
and
cs
xchg
js
movs
adc
pop
and
push
add
mov
popf
mov
sub
movs
sub
pop
push
mov
pop
push
push
xchg
shl
mov
or
mov
mov
and
sbb
mov
pop
sub
imul
shl
in
pushf
add
sbb
mov
xor
jnp
inc
aas
pop
push
mov
jmp
call
out
movs
adc
mov
sbb
push
push
mov
pushf
xor
ror
add
push
mov
fiadd
jp
mov
test
cmp
or
dec
push
out
jne
xlat
test
pusha
les
mov
xor
or
inc
mov
push
(bad)
popa
pop
mov
mov
sub
loopne
pop
add
adc
popf
jmp
push
imul
sar
dec
jl
lock
mov
call
xlat
enter
test
add
sahf
sub
or
mov
xor
xlat
cmp
inc
jg
fadd
mov
push
cs
pop
or
sti
mov
jmp
(bad)
jmp
cmp
xchg
dec
gs
fadd
inc
or
test
push
dec
add
and
push
(bad)
aam
ins
loopne
push
inc
pop
test
adc
sub
mov
cld
push
clc
adc
addr16
mov
mov
xchg
stc
mov
sub
ror
lahf
mov
pushf
mov
adc
icebp
mov
xchg
sub
arpl
xor
scas
arpl
add
xchg
mov
aam
xor
fs
sar
sbb
pop
lea
cmp
scas
jge
push
loop
adc
cli
cmp
jl
mov
mov
or
mov
sub
(bad)
in
xor
das
jge
xor
jl
movs
inc
push
or
inc
mov
mov
and
inc
inc
jns
xor
mov
add
fimul
call
pop
sub
jle
(bad)
jmp
push
cmp
and
or
sub
add
fistp
xor
jmp
add
add
bound
sub
(bad)
cmp
push
add
push
mov
outs
hlt
add
sar
pop
add
frndint
aaa
adc
mov
or
fnstcw
add
xchg
popf
rol
pop
xor
and
aas
and
push
mov
xchg
or
mov
add
in
inc
test
scas
adc
mov
sub
mov
adc
sub
(bad)
repz
popa
inc
inc
cmp
pop
sti
adc
or
scas
add
mov
stos
xchg
xor
push
ror
sbb
fnstenv
ror
push
or
pop
movzx
ds
mov
jmp
jo
sbb
cmp
inc
xchg
adc
mov
cmp
ss
sti
or
add
cmp
adc
dec
mov
push
ins
scas
lods
jbe
add
push
add
dec
jmp
mov
mov
clc
inc
pushf
sbb
add
or
shl
or
mov
aaa
push
xchg
dec
sahf
pop
lea
dec
jge
push
dec
aas
aad
jne
sub
dec
jl
cmp
jge
sub
pop
pop
test
push
sbb
cs
loop
or
xchg
jmp
cmp
int3
adc
pop
pop
ds
mov
xor
out
cld
push
fnsave
aaa
or
mov
inc
adc
adc
adc
rcr
std
pop
inc
in
pop
adc
pop
fldcw
or
adc
test
dec
lahf
push
and
pop
jmp
sub
or
loopne
inc
gs
loope
pop
fisub
add
xchg
xchg
xor
pop
cmp
cmp
rcr
retf
retf
jge
pop
cs
pop
pop
mov
fstp
or
rcl
push
fsub
xor
mov
push
daa
and
mov
inc
push
push
sbb
scas
pushw
jae
xchg
or
dec
loopne
aaa
push
sbb
dec
out
mov
mov
test
or
and
cmp
dec
xor
add
push
sbb
js
dec
sbb
or
xor
lods
xor
int
add
push
dec
push
push
test
pop
fist
adc
fsub
scas
ins
sahf
jbe
or
out
shr
inc
push
xchg
push
jmp
adc
verr
popa
sub
pop
in
xor
in
jle
into
add
mov
pop
cld
jl
jnp
jge
pop
xlat
sub
add
aam
inc
jnp
sbb
jne
ja
jge
pop
dec
cmp
adc
(bad)
mov
mov
ret
cmp
mov
rol
(bad)
inc
add
add
sbb
xlat
bound
jne
daa
dec
xchg
cs
push
fnsave
or
adc
mov
mov
jnp
nop
jno
lea
popf
or
mov
push
adc
or
shl
mov
and
inc
xor
add
aaa
inc
adc
push
add
ds
je
push
push
push
cmp
in
dec
push
(bad)
gs
cmp
pop
mov
sbb
dec
jg
xor
pushf
jl
jmp
sbb
pop
sbb
arpl
ja
xor
jmp
adc
adc
pusha
jnp
in
repz
aad
fcmovnu
lods
sub
or
dec
cs
lds
sbb
sub
adc
add
imul
je
sbb
sbb
or
icebp
jmp
mov
adc
inc
add
xor
lea
outs
cld
inc
je
cmp
fild
add
sar
add
and
fwait
pop
test
cmp
xor
je
or
dec
or
je
push
je
punpcklbw
fsub
ins
pop
jno
inc
mov
jbe
and
cmp
jmp
adc
lock
lea
xchg
repz
mov
mov
int
fld
add
dec
ror
test
sub
cmp
pop
add
xchg
xchg
and
ret
fcmove
inc
rcl
adc
test
mov
arpl
imul
adc
pop
jmp
lods
or
mov
pop
adc
psadbw
push
popa
jge
sub
nop
xchg
pushf
loopne
mov
mov
dec
jne
push
cmp
cmp
jp
(bad)
sar
adc
dec
mov
ret
cmp
sbb
or
add
loop
xor
and
jmp
pop
(bad)
mov
push
cmp
adc
mov
loop
add
jnp
xchg
addr16
rcl
pop
out
xor
or
rol
mov
push
cmps
inc
add
enter
dec
jmp
or
push
mov
sub
jb
inc
call
add
add
fs
clc
sub
mov
and
arpl
jmp
les
lock
xchg
mov
or
mov
xchg
cwde
mov
movs
test
add
xchg
push
push
daa
cmp
xor
and
rol
enter
rcl
fcom
or
fdivr
cmp
xor
bound
aaa
pop
movups
jle
jb
aas
mul
mov
xchg
data16
loop
call
loope
cmp
ret
push
js
pop
inc
add
mov
mov
cmps
pop
imul
iret
add
or
fincstp
fild
mov
test
ja
xor
shl
rcl
rcl
rcl
cmp
pushf
das
cmp
jb
sub
sbb
inc
loop
pop
test
sbb
div
repz
repz
jnp
das
sub
lea
pop
dec
mov
and
add
dec
popa
enter
ret
(bad)
jnp
nop
out
das
pop
dec
mov
dec
and
and
add
jl
add
outs
adc
dec
cdq
sub
rcl
pop
test
rcl
jmp
lock
mov
or
xchg
or
jg
and
cmp
daa
and
add
dec
push
inc
jmp
cmp
push
mov
jne
cmc
std
and
sbb
xor
fiadd
add
bound
cmp
rdmsr
sbb
shr
inc
inc
lar
repnz
jmp
jb
out
push
xchg
pop
jp
pusha
and
out
xor
sbb
jmp
(bad)
pop
rcl
or
mov
cs
outs
inc
adc
xor
jbe
xor
sbb
in
adc
movs
push
push
les
adc
cmc
and
fwait
or
inc
xlat
call
push
cwde
into
sub
shl
or
inc
mov
mov
cdq
nop
retf
push
jae
xchg
xor
xor
cmps
inc
cld
fisttp
mov
ja
or
xchg
das
jg
popa
or
mov
cmp
jne
test
pop
or
lea
sbb
add
pushf
sar
je
dec
add
fwait
mov
fsubr
popa
mov
mov
(bad)
mov
pop
lahf
or
adc
sub
pusha
xor
push
dec
mov
xor
je
xchg
arpl
addr16
mov
sub
cvttps2pi
jno
pusha
idiv
jge
mov
adc
out
pop
scas
inc
add
(bad)
dec
in
mov
call
retf
inc
or
ins
call
inc
ins
inc
in
cmp
je
xor
add
sar
jge
sbb
or
cmp
in
push
shr
scas
dec
add
aam
iret
xor
in
xor
outs
scas
loopne
pop
cmps
push
cmp
and
in
jge
add
sub
in
inc
test
inc
(bad)
dec
xor
dec
and
mov
mov
mov
(bad)
into
push
enter
inc
iret
aam
sub
sbb
lods
in
aam
xor
mov
test
add
push
lock
push
mov
imul
ins
add
push
sub
cs
or
dec
sbb
fisub
inc
cmp
push
loope
call
adc
call
out
xchg
mov
sub
aad
sbb
adc
dec
cmp
sbb
aas
mov
sbb
mov
mov
sbb
shl
mov
jne
lock
es
hlt
mov
adc
xlat
cmp
jle
push
jge
add
jle
inc
rol
mov
ret
or
or
mov
stos
pop
cmp
xor
and
retf
hlt
cmp
xor
xor
sbb
xchg
sbb
add
repz
icebp
cs
sbb
mov
sbb
sub
hlt
cmp
outs
jnp
inc
adc
add
lds
(bad)
loop
fcomip
dec
jne
pop
mov
push
adc
outs
and
dec
loope
sbb
push
cmp
jmp
out
sbb
les
gs
adc
dec
push
push
push
cmp
inc
clc
adc
pop
dec
inc
test
sbb
push
mov
xor
dec
jne
or
loop
push
and
xor
mov
mov
cli
pop
push
adc
mov
inc
pop
mov
scas
inc
sbb
in
pop
sub
leave
sub
dec
call
add
add
mov
arpl
or
sti
inc
sbb
ret
jmp
(bad)
aam
adc
mov
pop
jne
jg
sbb
bound
fild
cmp
mov
call
cmovl
mov
loop
das
lods
test
push
sub
xor
pop
test
adc
(bad)
jmp
inc
xor
out
xchg
loopne
add
ds
rol
xor
sbb
ds
repnz
pop
push
call
in
div
aad
add
mov
sub
push
sub
arpl
and
sub
aam
outs
aas
rol
rol
cli
cmps
jg
jae
xchg
data16
inc
mov
mov
div
inc
jecxz
jae
adc
push
shl
pop
loop
int3
push
out
neg
lods
aas
inc
cmp
test
ret
push
or
sub
dec
push
sub
pop
jle
aam
aas
inc
dec
test
or
cmps
fisttp
adc
push
sbb
std
adc
adc
and
mov
outs
mov
outs
mov
out
adc
sbb
in
rol
inc
nop
push
lods
rcr
rol
and
bound
scas
inc
gs
mov
cmps
stc
test
rcr
out
mov
mov
fstp
mov
addr16
sbb
ins
pop
push
adc
outs
ins
and
or
jmp
adc
dec
push
push
repz
cmps
movs
cmp
add
fmul
sub
out
cmc
ret
pop
cmp
mov
xchg
(bad)
jmp
dec
cmp
push
(bad)
fdiv
or
popf
inc
inc
and
sub
push
ret
test
push
pop
les
js
fs
leave
test
pop
aaa
repz
mov
xor
mov
outs
data16
popa
jb
mov
push
gs
add
or
(bad)
shl
inc
add
movs
pusha
mov
sbb
cmp
inc
or
xor
sbb
cmp
inc
(bad)
push
add
jne
and
js
lods
mov
inc
adc
pop
dec
add
jecxz
and
fldenv
add
add
inc
cmps
pop
arpl
mov
or
pop
mov
mov
xchg
test
sbb
and
jmp
mov
mov
ds
inc
pop
sub
adc
mov
pop
cmp
mov
push
and
and
mov
lahf
je
sub
sub
mov
sahf
shl
and
adc
movs
sbb
sub
int3
inc
mov
add
outs
rcl
sbb
push
ret
ret
in
sbb
cmp
ret
add
cmp
rsqrtps
or
add
inc
push
sub
jg
sub
mov
das
and
pop
pop
sbb
enter
inc
stos
ins
or
das
pusha
dec
xor
adc
add
enter
aaa
shl
mov
daa
sub
xor
mov
or
test
dec
jns
add
(bad)
sbb
mov
cmp
pop
in
cmp
arpl
and
(bad)
pop
sbb
out
je
cwde
call
arpl
sbb
xor
add
xor
out
out
or
add
or
push
mov
outs
sbb
or
dec
xor
retf
cmovns
mov
sub
mov
fld
retf
mov
jge
inc
add
test
icebp
ds
fwait
jmp
cmp
loopne
xor
lock
inc
add
adc
or
adc
and
jne
xlat
in
push
add
sbb
enter
pop
fld
dec
cld
pop
inc
cli
cmps
xor
mov
mov
and
sbb
add
dec
inc
add
(bad)
fld
push
cmp
push
add
imul
popa
fs
xchg
pop
(bad)
push
push
sti
dec
js
inc
add
fadd
dec
pop
jnp
fisub
in
add
mov
inc
push
adc
xchg
or
or
nop
add
pusha
dec
and
add
adc
add
add
and
or
(bad)
xor
mov
xor
and
push
add
sar
je
cld
xchg
mov
push
ret
adc
xor
popa
and
sub
inc
inc
dec
idiv
or
into
cmp
cmp
mov
xor
xchg
retf
aas
nop
sub
pop
or
push
cmp
(bad)
mov
fistp
sbb
cmp
or
mov
repz
add
push
jp
xor
or
pusha
mov
inc
mov
sti
cmp
rol
inc
ficom
push
or
leave
xchg
repz
clc
push
out
adc
add
adc
mov
xchg
cmp
add
pop
inc
mov
mov
mov
mov
jns
dec
mov
sub
mov
dec
ss
xlat
lea
push
jae
or
mov
push
cmp
or
ins
mov
mov
push
retf
shl
adc
and
jo
bound
mov
jb
fdiv
sub
inc
sub
jae
leave
xchg
imul
sbb
inc
mov
mov
dec
nop
dec
movs
dec
mov
jbe
jb
xor
sub
ins
sub
sti
ins
push
in
mov
add
cmp
je
sbb
(bad)
adc
sub
xor
mov
inc
xor
adc
js
sub
inc
jmp
fdiv
cmp
nop
push
pop
and
push
xor
add
in
invd
stos
dec
add
loopne
retf
push
and
adc
movs
stc
or
add
push
mov
or
inc
or
pop
push
leave
xchg
lea
or
push
mov
push
sbb
add
ret
loopne
xchg
clc
addr16
clc
lods
mov
dec
mov
ret
inc
adc
cwde
push
xlat
cmp
aaa
mov
mov
hlt
lea
add
pop
setl
jo
and
fisttp
in
je
inc
and
dec
sbb
xchg
sbb
mov
stc
not
xchg
outs
scas
es
cmovl
repz
movups
mov
dec
jl
in
sbb
or
je
adc
enter
push
or
test
js
jb
cwde
sub
cs
xor
sbb
les
ds
test
lods
call
sub
out
pop
adc
xchg
nop
pop
push
adc
or
arpl
repnz
nop
in
cmc
popf
movs
pmulhuw
add
add
pop
jmp
sbb
sbb
daa
or
sar
pusha
mov
mov
gs
jae
cmp
xor
pop
add
inc
push
int3
adc
leave
mov
and
pop
xchg
movs
bound
pop
sbb
sub
scas
inc
das
push
pusha
ins
test
push
push
add
push
repnz
and
jns
imul
js
test
cmp
das
push
lock
pop
push
add
push
inc
dec
jne
xor
call
sbb
sbb
sub
push
movs
mov
push
mov
mov
lds
fidiv
push
ja
add
and
inc
jo
fs
fs
adc
jb
xchg
retf
cmp
and
dec
fs
cmp
adc
sbb
pop
xchg
mov
mov
xor
leave
and
repz
or
fmul
xchg
(bad)
jmp
mov
(bad)
in
std
push
add
mov
cld
rep
mov
xchg
and
push
imul
(bad)
jb
je
std
lea
lea
cs
in
mov
sub
movs
cld
or
pop
mov
nop
dec
arpl
and
cmovl
push
mov
test
mov
dec
pop
cld
push
inc
mov
loop
fadd
shr
mov
add
fldcw
int
or
or
xchg
gs
xchg
adc
sbb
and
sub
ja
dec
jne
mov
outs
ins
or
mov
cmc
test
inc
add
rol
mov
xlat
pmovmskb
stos
sbb
mov
adc
lea
(bad)
and
loop
stc
xchg
fwait
and
dec
sub
shr
add
inc
fbstp
ja
sbb
loop
je
cmp
shl
adc
sub
mov
jmp
sub
inc
cld
js
xchg
lods
dec
add
dec
and
xchg
add
sbb
or
push
xchg
mov
pop
xor
cli
or
add
inc
dec
jne
sbb
pusha
pop
and
jecxz
adc
mov
mov
sub
mov
or
add
push
add
lods
inc
sbb
bound
popa
ret
push
ss
add
pop
pop
(bad)
pop
push
dec
js
lods
scas
mov
jne
or
cmc
jg
ror
jnp
mov
jg
adc
and
push
cmp
xlat
add
jne
mov
sub
and
add
add
inc
test
lea
in
or
xor
xor
and
ins
sbb
add
add
sub
enter
iret
push
push
ins
addr16
cli
inc
rcr
pop
adc
popw
mov
pusha
push
xchg
mov
push
or
sub
add
push
and
add
(bad)
ja
fcomp
add
jp
loop
sbb
aaa
scas
mov
push
xchg
arpl
add
cmp
jbe
mov
or
mov
inc
out
adc
mov
jb
mov
mov
sub
pop
cdq
shr
dec
ror
and
fst
in
add
and
adc
add
push
addr16
push
int
pop
mov
inc
test
jmp
sub
inc
js
xor
ins
int3
and
ret
pop
adc
or
mov
and
sub
sub
div
aaa
lds
and
cmp
add
clc
xor
push
pop
pop
cmp
cdq
in
jnp
sbb
add
add
in
movs
ds
daa
jbe
add
pop
adc
and
popf
not
push
mov
loop
jne
mov
adc
inc
push
loopne
clc
outs
rol
mov
das
rcl
dec
fcom
in
adc
sbb
pop
lods
test
fisttp
mov
pop
adc
fadd
cwde
and
jne
int
xchg
sbb
xchg
jbe
adc
clc
push
jnp
test
xchg
inc
xor
jns
or
jo
scas
sbb
test
sbb
pop
adc
push
inc
and
aam
mov
jmp
mov
jl
sub
mov
hlt
adc
lods
hlt
pop
jo
sub
adc
pop
dec
add
xchg
mov
movs
adc
push
sub
sbb
(bad)
pop
stos
and
test
cld
xor
mov
sbb
inc
mov
xor
push
push
inc
sub
ss
lock
xchg
adc
sbb
and
pop
scas
jae
mov
or
add
push
cmp
xchg
pop
paddsb
cld
xor
in
mov
call
call
pop
out
mov
push
nop
lea
adc
jae
test
jne
add
into
and
ins
xor
sbb
jo
and
inc
popf
sti
mov
adc
push
fst
jo
jmp
int3
call
push
imul
sbb
jne
xor
sbb
mov
out
addr16
imul
(bad)
jp
pop
retf
or
imul
or
popa
push
inc
add
xor
mov
pop
xor
mov
bound
and
adc
sahf
or
inc
add
add
sub
(bad)
hlt
xor
(bad)
jl
pop
cmp
adc
cmp
push
add
mov
inc
add
ret
pop
imul
test
imul
xchg
push
aad
jno
or
mov
add
xchg
mov
ret
mov
mov
adc
dec
outs
inc
test
mov
jmp
sub
or
cmps
aam
xchg
mov
fcmovu
xor
aad
or
dec
push
xchg
cmp
inc
inc
retf
in
mov
js
mov
out
jmp
push
not
and
mov
repz
adc
fnsave
inc
lea
cmp
jmp
xchg
test
push
lods
vmwrite
stos
cmps
cmp
jne
stos
jo
sahf
pop
push
shl
inc
sbb
xchg
cwde
or
push
aaa
jb
or
ret
popa
jle
sti
lahf
xchg
jl
ins
push
push
shl
ins
and
jle
fdiv
mov
inc
cmp
push
add
mov
ins
push
bound
sbb
test
pop
jns
add
lock
cmc
fbld
adc
out
and
jmp
sbb
dec
rcr
les
and
cmc
(bad)
xor
and
test
or
in
dec
xor
cdq
jle
mov
pop
push
jbe
or
mul
ret
clc
sub
dec
or
stos
and
push
ror
sbb
push
lahf
xor
std
jmp
jecxz
sbb
jecxz
pop
(bad)
loope
addr16
mov
add
xor
lods
in
aam
std
mov
push
dec
js
sub
sub
adc
push
cmps
add
push
push
mov
mov
loopne
add
iret
xor
pusha
fs
push
push
aas
test
popw
and
jno
inc
or
mov
adc
neg
js
add
(bad)
dec
lds
nop
xchg
add
aad
push
pop
jmp
pusha
or
aam
cmp
dec
fistp
aam
aam
jno
push
das
or
jmp
sub
mov
sub
dec
iret
leave
sahf
add
(bad)
jle
jl
pusha
mov
sti
mov
and
fsub
call
xchg
out
dec
adc
inc
loopne
mov
add
add
adc
xchg
push
dec
xor
call
jge
mov
push
push
ficom
shl
sbb
mov
mov
cmps
movlps
test
scas
push
jge
int3
je
ret
dec
icebp
mov
shr
add
push
pop
(bad)
xchg
sub
fiadd
cmp
test
mov
xor
pop
mov
dec
dec
adc
jmp
adc
cmp
mov
add
mov
bound
movzx
and
push
leave
dec
fsub
inc
ss
mov
adc
(bad)
push
aad
mov
or
dec
sub
rol
or
rcl
inc
adc
xchg
inc
add
sbb
xor
add
hlt
mov
jecxz
xor
adc
rcr
dec
pop
lock
neg
outs
outs
inc
adc
pushw
and
mov
shl
iret
popa
dec
xchg
and
dec
call
jg
adc
pop
retf
dec
std
xchg
fs
out
push
icebp
or
bound
mov
mov
fisttp
pop
and
sub
adc
pop
fwait
inc
add
call
ds
dec
add
cmp
mov
add
xlat
pop
xor
and
xchg
inc
mov
aaa
jae
pusha
or
or
lock
inc
bound
and
pop
aad
retf
xor
stos
jmp
fstp
mov
cwde
dec
dec
sub
pusha
xor
mov
add
pop
mov
mov
jg
setne
rcl
add
call
arpl
push
fs
and
xor
adc
jnp
ror
and
mov
mov
jb
clc
std
hlt
xor
mov
xor
cmp
add
repnz
cmp
mov
and
push
inc
gs
call
dec
mov
sbb
imul
lods
pop
jmp
pusha
pop
inc
jb
push
ror
push
fsubr
nop
nop
dec
mov
and
jno
pop
mov
mov
inc
lea
fwait
pusha
sbb
mov
(bad)
jb
popf
jbe
ret
sbb
add
push
or
retf
lahf
data16
push
inc
(bad)
inc
retf
mov
push
mov
adc
mov
in
dec
pop
gs
cmp
pusha
fstp
addr16
cmp
nop
cmp
xor
mov
sbb
cld
pop
mov
ror
or
adc
pusha
sbb
cmp
jno
sbb
stc
cmp
jae
jmp
mov
jmp
fisttp
jecxz
jmp
popf
mov
mov
jmp
mov
inc
rcr
jbe
adc
jmp
movs
jb
outs
ja
lea
mov
lock
test
xchg
push
adc
xchg
push
ret
sbb
dec
or
and
pop
jmp
fild
jmp
push
cmp
add
hlt
sbb
(bad)
imul
jns
mov
and
push
or
add
jmp
add
xchg
in
lock
iret
pusha
push
cld
jge
lods
das
imul
sub
inc
inc
add
mov
mov
or
jmp
pop
or
lods
add
dec
loopne
icebp
(bad)
ja
test
fld
popf
cmps
cmp
shr
cmp
sbb
sbb
inc
ins
jge
outs
push
push
sbb
icebp
neg
dec
fisttp
cli
fst
(bad)
jmp
xchg
loope
je
or
mov
inc
inc
mov
enter
pop
retf
sub
add
xchg
test
sub
jb
sbb
push
stc
jge
add
cmp
ins
sbb
retf
sub
xchg
pop
jno
add
add
dec
jb
js
sbb
das
ret
mov
push
mov
adc
ret
push
icebp
outs
loopne
xor
bound
pop
hlt
(bad)
je
movs
push
in
jg
jl
imul
sbb
adc
sar
cdq
loopne
lock
xchg
inc
push
or
cmp
inc
push
sbb
add
fsub
pop
mov
(bad)
and
xchg
jnp
sub
push
mov
sbb
and
add
dec
les
or
shl
adc
call
adc
lea
dec
dec
or
cs
jbe
sbb
adc
jno
cmp
push
popa
pop
jmp
jmp
pop
sbb
gs
mov
jge
adc
sbb
scas
jg
cmp
xadd
jnp
pop
je
ins
and
das
pop
jl
sub
or
cmp
mov
or
inc
dec
adc
add
push
pop
adc
mul
add
inc
sub
push
icebp
mov
fidiv
add
push
push
push
lock
jmp
inc
adc
test
rcpps
jmp
jo
stc
test
hlt
xchg
sub
fcmovnbe
cs
dec
loopne
sub
xchg
xchg
or
loop
in
add
jne
lds
int3
add
mov
sub
lock
(bad)
adc
mov
pusha
stos
sub
cwde
xchg
adc
adc
jo
xchg
je
bound
cmps
cld
mov
ins
xor
shl
push
data16
mov
js
rcr
jl
sbb
ins
jmp
dec
adc
ins
aaa
mov
loop
rcr
mov
idiv
arpl
mov
or
mov
mov
scas
add
fwait
pop
xchg
push
nop
push
int3
xor
lea
jl
loop
pop
xor
inc
mov
mov
movs
add
inc
in
jl
pop
fist
jne
sub
adc
sub
jne
cmp
or
sahf
dec
adc
sti
sbb
pop
cmc
mov
inc
jge
aaa
out
test
shl
shl
adc
sub
pop
rol
add
rol
mov
addr16
pop
pushf
sbb
jae
mov
pop
lahf
sbb
jo
adc
stos
or
mov
dec
pop
inc
out
repz
adc
bound
and
push
test
or
pop
sub
sbb
push
test
add
lods
mov
(bad)
or
jne
paddusw
rcr
inc
xor
sub
stos
rcl
push
dec
or
packuswb
xchg
mov
xor
ins
lods
imul
(bad)
push
mov
jp
mov
mov
push
retf
and
mov
je
and
jbe
push
mov
ins
push
mov
call
cmp
ret
in
inc
hlt
test
mov
ins
mov
sbb
jge
mov
inc
xchg
test
add
sbb
xor
mov
cmovae
dec
fbld
or
mov
jne
cmp
push
push
rol
(bad)
adc
pop
movups
loope
push
push
add
mov
jmp
push
mov
shl
fs
push
mov
pop
mov
dec
or
lahf
push
push
fsub
ja
lods
jmp
and
sub
jle
outs
dec
call
jecxz
xor
rcl
add
clc
pop
cmp
push
xor
sbb
xchg
fsub
fimul
enter
fistp
(bad)
cmp
out
push
into
es
nop
lea
iret
adc
stos
call
jmp
and
push
jae
mov
bound
mov
loope
adc
xor
sub
popa
add
sti
ret
in
in
inc
je
jmp
sbb
jmp
push
or
mov
mov
and
dec
add
mov
in
inc
push
cli
test
jne
inc
jae
push
push
cdq
pusha
cmp
js
loope
(bad)
shl
cmp
xor
scas
xor
xchg
or
sub
loop
push
prefetcht1
add
inc
and
mov
sbb
and
retf
fcmovbe
inc
in
fdiv
and
push
mov
dec
push
and
pusha
add
pop
xchg
xor
push
dec
pusha
xor
sub
les
inc
inc
dec
enter
xor
and
sbb
movs
xor
in
adc
sar
enter
xor
xor
leave
out
xor
test
xor
adc
add
iret
scas
ins
or
push
add
or
jo
pop
test
mov
pop
cwde
inc
sub
enter
ret
add
push
xchg
test
push
lock
je
int3
cmovp
xor
push
je
and
inc
mov
add
xor
push
push
inc
sub
or
nop
and
adc
test
int3
jae
aas
sub
call
or
ins
push
xchg
sub
movs
in
fldcw
adc
add
fcom
mov
xchg
add
aam
or
adc
adc
push
add
add
das
or
adc
repnz
add
xchg
xchg
das
adc
xchg
test
aam
add
add
adc
adc
xchg
inc
push
pusha
push
add
push
cmp
xchg
pop
cmp
mov
xor
(bad)
(bad)
lods
push
xchg
cmp
add
(bad)
out
dec
xchg
and
mov
jg
push
sbb
xor
push
ja
cmp
inc
jp
sbb
pop
mov
pop
cmp
inc
ins
pop
sbb
dec
dec
ret
int3
push
dec
adc
push
mov
adc
stos
sbb
jo
idiv
dec
pushf
mov
fld
pop
mov
and
adc
or
inc
in
pop
sbb
push
fld
adc
and
and
jge
mov
mov
adc
sar
add
jg
lea
push
imul
pop
or
pop
adc
fistp
mov
leave
fstp
fwait
sar
mov
or
int3
ret
aas
sbb
or
ja
adc
mov
adc
or
adc
call
repnz
or
xchg
or
cmp
or
outs
js
inc
sbb
aas
xchg
sbb
fnclex
lahf
lock
loope
inc
inc
ror
aam
outs
fadd
add
not
fwait
and
dec
adc
shl
mov
cld
das
push
xor
fisttp
dec
mov
fninit
push
push
xor
ja
inc
mov
sbb
mov
dec
add
cli
dec
(bad)
ds
div
aaa
mov
mov
mov
je
sub
mov
mov
cmp
dec
das
xor
inc
inc
jecxz
and
in
jo
sbb
fstp
fwait
jnp
add
das
shl
mov
or
jb
inc
or
inc
int
or
pop
sbb
(bad)
jb
push
mov
ins
sub
or
(bad)
jg
cli
sub
icebp
lods
xor
adc
ja
ja
cmp
inc
sbb
sub
scas
sbb
lods
mov
loopne
cmp
add
inc
pop
mov
fstp
outs
inc
in
push
int3
mov
pop
or
in
push
mov
aam
push
xchg
jbe
(bad)
or
add
add
jne
(bad)
adc
jbe
(bad)
jmp
jbe
jbe
mov
or
jmp
jmp
data16
neg
loopne
clts
jmp
ss
imul
outs
outs
and
push
inc
jl
add
jg
out
add
adc
and
mov
sbb
(bad)
fsub
div
xchg
ss
adc
sbb
test
retf
xor
test
sbb
clc
or
jbe
push
fcom
loop
or
cmc
xchg
lods
sti
iret
popa
cmp
adc
mov
icebp
push
xchg
ins
push
or
div
cmp
push
mov
mov
push
std
pop
inc
retf
sub
mov
into
jne
cli
ss
(bad)
or
sbb
push
jge
mov
(bad)
jae
push
pop
cmp
cmp
addr16
jmp
dec
cmp
jb
(bad)
jmp
jg
jo
js
add
dec
popa
out
mov
mov
add
cwde
dec
add
jne
or
cli
push
pop
mov
loope
mov
ficomp
sub
out
clc
neg
mov
and
sub
mov
sub
out
jmp
adc
in
mov
test
loope
inc
dec
push
xor
push
push
xor
mov
and
cmp
stos
pop
data16
pop
adc
push
ins
push
lock
dec
or
mov
xchg
inc
mov
in
jnp
aas
(bad)
mov
cmp
jb
aaa
stos
out
out
xor
mov
je
add
es
mov
(bad)
std
jl
push
or
lea
nop
and
or
xchg
jg
inc
xor
push
pop
adc
hlt
cdq
or
or
dec
lea
push
dec
inc
pop
sub
inc
loop
in
add
cmp
push
in
pop
jge
xchg
idiv
add
inc
pop
push
mov
xor
add
dec
call
jmp
add
nop
sbb
push
pop
add
and
xor
sub
mov
pop
inc
popa
add
popa
das
mov
or
or
pop
repnz
fdiv
dec
and
push
jmp
neg
xor
sbb
loop
or
mov
sub
mov
jmp
sub
or
cmp
mov
sub
or
je
add
add
add
inc
rol
sar
shl
retf
mov
push
lods
in
or
(bad)
jecxz
nop
push
(bad)
fistp
push
and
jmp
adc
or
nop
loop
adc
xchg
(bad)
mov
mov
jge
(bad)
cld
adc
shr
ins
add
mov
adc
ins
sub
pop
push
(bad)
jne
sbb
arpl
pushf
add
aad
and
dec
jbe
xchg
or
sbb
cmp
push
mov
sbb
mov
leave
or
mov
leave
gs
retf
jl
into
mov
inc
push
adc
jle
mov
call
push
dec
push
les
and
outs
jecxz
push
mov
push
inc
enter
ror
mov
(bad)
and
fist
or
(bad)
adc
adc
iret
(bad)
out
repz
cmp
repnz
inc
rcl
test
loope
loope
aas
cs
cld
and
push
sbb
scas
adc
(bad)
jnp
jae
and
or
cmp
jle
imul
fnstenv
and
cmp
in
nop
jne
adc
jne
imul
xchg
in
adc
imul
dec
push
inc
add
adc
dec
lods
aam
and
and
stc
push
mov
jmp
sub
test
and
jnp
adc
adc
fist
js
adc
jno
and
in
cmp
cmc
rcr
cmps
dec
inc
adc
mov
mov
adc
int3
jne
push
sub
les
jg
xor
call
es
int3
xor
push
fcmovb
jmp
mov
lods
mov
inc
xchg
xor
sub
ret
cmp
inc
xor
or
js
add
outs
and
jne
mov
(bad)
(bad)
jbe
cmc
add
and
xchg
push
inc
adc
fiadd
inc
dec
xchg
sbb
popf
fisttp
retf
data16
or
mov
cmp
bound
mov
jle
(bad)
mov
mov
xor
cmc
xchg
(bad)
cmp
or
xor
add
fild
mov
(bad)
mov
mov
mov
mov
jl
neg
aas
or
ret
mov
adc
jne
push
add
test
sbb
test
push
dec
lock
ins
add
pop
push
das
js
lea
xor
das
addr16
jne
(bad)
pop
vdivps
mov
jae
(bad)
push
xor
fmul
(bad)
pop
lods
gs
popa
ret
pop
fmul
pop
mov
pop
or
sbb
or
ret
repnz
dec
mov
pop
hlt
fsub
push
(bad)
shl
jl
lock
xlat
add
pop
mov
(bad)
mov
cmp
(bad)
push
dec
adc
or
in
push
jo
call
adc
cld
add
sub
add
mov
inc
outs
in
mov
int3
push
inc
add
add
jbe
inc
jmp
inc
or
sbb
or
add
jecxz
cmp
rcr
pop
pop
(bad)
dec
mov
fcmovnb
(bad)
jmp
neg
push
sbb
jge
out
ins
mov
rcr
stc
sub
cmp
imul
adc
push
arpl
mov
or
or
adc
test
cmp
clc
add
jmp
push
(bad)
sar
adc
jmp
not
push
in
or
cmc
rcr
mov
cmc
xor
fsub
movs
push
gs
(bad)
mov
inc
inc
imul
and
jmp
jne
ss
sub
jge
mov
scas
lods
xchg
xor
test
mov
or
add
mov
mov
ss
jmp
pop
addr16
push
pushf
inc
test
int
pop
mov
dec
pop
dec
add
dec
mov
push
adc
xchg
movs
loop
dec
test
push
add
xchg
mov
jle
sbb
pop
add
inc
test
adc
in
inc
sahf
pop
fwait
dec
xchg
loopne
ins
fnstcw
in
mov
ret
jb
jns
test
jns
test
jns
ret
shl
nop
adc
nop
pop
add
pop
and
or
fxch
mov
inc
pop
xchg
jmp
loopne
in
mov
int3
les
jmp
aad
or
and
inc
or
xlat
mov
je
adc
fcom
call
add
and
inc
arpl
fstp
add
push
and
xchg
hlt
clc
cld
mov
ds
hlt
adc
pop
pop
rol
push
les
jne
test
mov
add
mov
inc
push
cmp
push
adc
inc
sbb
cld
and
movs
push
movs
(bad)
pushf
retf
sub
mov
mov
sub
mov
imul
ret
and
cdq
mov
ret
int
shr
mov
add
mov
xchg
ins
jmp
(bad)
add
movd
adc
enter
test
or
jge
dec
aas
push
js
push
push
in
sub
adc
call
adc
mov
lods
push
outs
aaa
ds
mov
add
div
push
pusha
loopne
pop
fwait
scas
fmul
fsub
sahf
icebp
add
or
push
bswap
sub
mov
push
xor
pop
lahf
fidiv
adc
push
stos
jle
xor
push
(bad)
outs
fcomp
inc
fmul
dec
pusha
das
add
jbe
pop
dec
(bad)
call
jp
mov
jno
dec
xchg
cmp
mov
add
cwde
mov
and
push
rcl
dec
aaa
sbb
xor
inc
adc
mov
push
fsubr
cmp
sbb
js
lods
dec
repnz
dec
je
aaa
xlat
out
out
push
sar
dec
add
mov
js
push
add
adc
ja
lods
pop
or
mov
mov
sub
push
adc
fcom
push
mov
and
daa
in
imul
xor
arpl
pop
test
mov
mov
dec
stc
cwde
xchg
and
aam
pushf
and
add
mov
fld
and
enter
xor
loop
sbb
retf
or
xor
fmul
jecxz
push
inc
add
add
sub
cli
jns
fwait
lock
dec
push
sbb
mov
aas
cmc
inc
sbb
or
push
jecxz
sub
std
fs
adc
pop
pop
xor
in
(bad)
push
and
pusha
inc
or
pop
dec
ins
(bad)
fwait
pusha
adc
cmps
mov
and
or
fisubr
jbe
adc
lea
in
cmp
add
add
jbe
cmc
(bad)
ret
jle
rol
sahf
push
cmp
stc
pop
jecxz
(bad)
lock
cmp
mov
fcomi
cmp
jno
xchg
dec
into
mov
add
mov
jle
pop
test
mov
outs
mov
mov
mov
or
xor
dec
hlt
xchg
sbb
pop
adc
into
push
mov
test
mov
ret
icebp
not
dec
shr
daa
sbb
jecxz
out
in
mov
fidivr
retf
jne
adc
jmp
adc
fiadd
inc
das
mov
mov
or
adc
adc
cmp
or
jle
je
push
cwde
or
add
xchg
hlt
jo
pusha
sub
push
sub
xor
cli
pop
hlt
adc
or
mov
cmp
mul
inc
inc
nop
xor
in
xchg
ror
xchg
pop
dec
sbb
out
add
dec
ins
or
push
cmp
push
and
push
dec
and
push
adc
sbb
push
inc
inc
and
or
sbb
mul
mov
loop
mov
shl
les
adc
adc
fld
mov
hlt
mov
cmp
pop
push
or
adc
or
adc
adc
arpl
cmc
xor
push
jo
ins
adc
cwde
push
sub
add
ret
mov
rcr
loop
test
call
adc
in
rol
mov
sar
aam
add
mov
mov
jbe
fisubr
pop
pop
adc
or
jl
cmp
push
cmps
add
adc
mov
and
aaa
and
add
jl
test
(bad)
pop
lea
sti
add
jne
pop
push
push
or
add
repnz
add
les
call
popa
inc
fwait
mov
mov
push
ret
pop
pusha
dec
into
sbb
(bad)
jmp
mov
je
or
je
push
call
pop
mov
adc
repz
adc
or
xchg
sub
pop
loop
psubusb
mov
cmc
xchg
clc
pop
jbe
adc
add
push
cwde
fwait
pop
sub
xor
popf
dec
inc
sbb
sbb
jo
adc
mov
or
or
das
loop
sbb
outs
stos
js
mov
push
ins
(bad)
aaa
movs
fdiv
pop
sbb
push
jl
je
pop
in
mov
nop
add
sub
pmullw
cmp
test
jns
adc
bound
mov
mov
add
xchg
sub
and
or
sbb
add
cmp
sub
and
mov
adc
sbb
push
add
mov
(bad)
adc
stos
or
pop
(bad)
mov
out
mov
movs
push
xchg
cdq
xor
ja
sub
sbb
mov
stc
data16
sbb
lods
jmp
cmp
and
or
mov
call
sbb
add
jecxz
cmps
lods
mov
mov
dec
sbb
mov
adc
or
mov
(bad)
hlt
push
cmp
xor
mov
lods
cmp
add
inc
mov
pop
adc
lock
pop
outs
inc
or
mov
or
pop
mov
inc
inc
adc
lock
mov
pop
sub
inc
cmc
inc
cmp
push
cmp
fldcw
or
mov
or
xor
push
fisttp
add
add
mov
adc
add
push
sbb
jmp
add
and
or
push
sbb
std
add
pushf
and
sar
push
mov
int3
dec
push
lock
mov
sub
or
push
sbb
addr16
retf
fidivr
test
(bad)
mov
cmps
adc
add
xchg
cmp
cwde
sbb
in
mov
fiadd
add
(bad)
loope
xor
cmp
movnti
inc
bnd
and
nop
and
xchg
jne
pusha
jnp
pop
fist
jns
rcl
inc
(bad)
push
add
dec
fs
mov
and
pop
jne
pop
(bad)
not
push
and
(bad)
mov
or
add
(bad)
pop
lds
call
dec
mov
scas
loop
enter
or
add
or
adc
push
or
mov
pusha
into
inc
sub
pop
ror
das
call
loop
cli
nop
cmp
push
or
and
or
dec
mov
push
adc
aaa
cdq
not
sbb
adc
adc
mov
ja
push
pusha
adc
add
cmps
push
cli
sar
and
adc
cmp
test
test
mov
adc
iret
popa
adc
out
call
aas
cdq
movs
jns
adc
xor
and
adc
pop
loope
mov
pop
push
xor
inc
add
push
bound
xchg
das
sti
add
add
mov
push
add
mov
ror
inc
fmul
loope
call
mov
js
jmp
dec
out
add
mov
mov
aas
jge
jb
push
add
mov
mov
push
xor
mov
add
and
and
jno
mov
std
les
dec
mov
push
call
retf
adc
ins
lahf
aam
jae
sub
xchg
jecxz
pop
les
pop
sub
xor
push
scas
inc
push
push
sbb
and
inc
sub
jmp
cli
mov
inc
outs
xor
mov
xchg
cmp
mov
sbb
jle
jp
test
mov
mov
dec
push
mov
mov
test
lock
jmp
call
pop
hlt
mov
lds
jno
push
aad
inc
adc
mov
hlt
push
push
push
call
sub
inc
js
sbb
icebp
add
hlt
fs
fdiv
fld
lock
ja
push
movs
push
xor
or
inc
pop
mov
push
in
jmp
xor
adc
sar
push
or
sahf
xor
sbb
cmp
mov
cmp
in
mov
js
loop
adc
pop
retf
cmp
push
or
cmp
ja
sbb
mov
jbe
jmp
add
or
dec
clc
jg
add
xchg
mov
je
int
xchg
fcmovb
xor
mov
mov
mov
and
add
or
jmp
ins
sbb
xor
lea
adc
inc
adc
icebp
cwde
inc
out
mov
add
aaa
jl
outs
enter
addr16
xchg
pshufw
test
out
or
pusha
adc
adc
data16
add
(bad)
push
add
pop
add
pminub
retf
lock
clc
xchg
push
(bad)
out
loopne
sub
dec
adc
or
add
sbb
mov
xor
mov
sbb
ss
out
pop
outs
push
sbb
lahf
adc
out
add
or
adc
arpl
cmp
add
lods
test
iret
das
pop
dec
inc
xchg
ins
push
outs
mov
pop
add
sti
loop
inc
mov
jge
mov
rep
dec
adc
mov
fnsave
inc
lods
jle
mov
jp
mov
popa
adc
sub
outs
dec
jge
rol
lea
adc
mov
mov
pop
xchg
fcom
and
add
cmp
xor
mov
pop
pop
push
pushf
pop
cdq
cmp
aaa
jle
ficomp
xchg
lahf
(bad)
xchg
test
sub
mov
add
das
adc
sbb
push
(bad)
mov
pop
sbb
inc
jno
sbb
pop
je
out
sub
push
ins
jo
jecxz
push
lea
mov
mov
inc
add
cwde
inc
inc
mov
jl
jmp
jle
ror
je
mov
mov
add
loopne
mov
pop
in
mov
cmp
jmp
sbb
imul
pop
mov
sbb
fnsave
or
push
mov
je
cmc
push
dec
fst
mov
ins
inc
sub
pop
cmp
pop
add
(bad)
nop
push
cmp
mov
inc
sbb
mov
fucomi
or
(bad)
mov
dec
test
xchg
add
cmps
cmps
(bad)
jbe
addr16
mov
mov
test
les
mov
xchg
sbb
loopne
add
jg
mov
call
sbb
dec
enter
xor
dec
enter
push
jne
rol
inc
or
ror
(bad)
outs
sar
shl
lods
jl
inc
(bad)
fnstsw
adc
sbb
out
sub
add
icebp
mov
cmp
jl
adc
sbb
adc
dec
sbb
(bad)
sbb
aas
mov
cmp
fsub
sbb
dec
stc
movs
xchg
mov
movs
enter
test
enter
imul
add
xchg
add
cwde
jno
jno
jno
jmp
aas
sbb
je
or
pop
je
sub
ins
hlt
aas
xchg
je
dec
je
jmp
sub
ins
sbb
mov
xchg
push
sub
cld
adc
das
lock
(bad)
add
jmp
paddw
cmp
jbe
mov
mov
call
or
or
mov
ret
fmul
mov
out
push
pop
mov
rol
(bad)
push
mov
mov
cmps
mov
xor
fadd
push
and
pop
inc
fsubr
or
lds
int
rcr
mov
clc
add
movs
imul
sbb
cmps
mov
sub
add
shl
mov
mov
mov
add
int3
in
and
leave
ins
(bad)
test
dec
imul
stos
(bad)
cld
loope
test
dec
xchg
xchg
rcl
mov
add
out
retf
cmp
enter
or
add
in
hlt
sub
cmp
retf
jo
xor
xchg
in
or
int3
sbb
mov
or
inc
jecxz
in
xchg
push
and
enter
in
in
cmp
int
in
xchg
gs
pop
cmp
loopne
sub
inc
push
fxch
and
push
and
fmul
fdiv
ins
push
leave
fmul
inc
iret
js
xchg
xchg
out
and
push
aam
mov
dec
std
shl
aam
adc
and
push
push
out
pop
add
add
inc
inc
out
jle
xor
mov
cmp
jne
sbb
enter
lods
je
ins
sub
xchg
ret
inc
test
and
and
add
push
adc
rcl
std
ins
jnp
std
sbb
lods
mov
dec
cmp
pop
adc
mov
add
mov
sub
fist
xor
loopne
dec
push
cmp
inc
add
mov
add
mov
aas
mov
dec
lea
inc
dec
push
or
and
and
mov
mov
pusha
add
repz
mov
push
push
push
test
stc
jmp
enter
sbb
ds
xchg
ins
inc
pop
dec
pop
cmp
mov
call
or
stc
sbb
add
outs
pop
jo
or
adc
test
jmp
add
inc
adc
inc
nop
xchg
je
stc
and
mov
mov
jns
fild
mov
ja
push
inc
inc
or
mov
and
arpl
push
push
jo
adc
pusha
sub
inc
and
add
cs
mov
xchg
(bad)
ins
adc
adc
add
rcl
adc
xor
add
loope
add
xor
xchg
sbb
xchg
cmp
(bad)
xchg
fs
dec
mov
add
and
jbe
sbb
rcl
stos
and
loop
fisttp
iret
(bad)
ret
or
mov
push
xor
xor
sub
cmp
arpl
xlat
sahf
loop
sbb
and
aaa
int
sub
xor
dec
mov
and
pop
and
add
push
xor
test
scas
push
push
daa
or
gs
sub
popa
clc
and
mov
sub
nop
ss
mov
adc
std
shl
loope
outs
adc
add
jno
and
sub
jmp
and
pusha
adc
add
(bad)
nop
addr16
out
xor
xchg
lods
std
and
dec
std
add
scas
out
adc
stos
add
push
sub
adc
inc
pop
jnp
or
xor
or
adc
cmp
in
test
add
inc
iret
pusha
daa
xor
adc
sti
sub
mov
push
jmp
bound
aaa
mov
or
jle
repnz
and
push
push
xor
cmp
or
and
push
sbb
push
add
sub
add
sub
mov
mov
xchg
pop
dec
sub
lock
mov
push
inc
sbb
jb
mov
xchg
inc
cli
mov
or
jne
je
dec
adc
sub
wrmsr
and
fstp
add
ins
sub
fadd
bound
cmp
aaa
cmp
test
push
push
and
(bad)
push
mov
loopne
adc
push
and
fld
cmc
aam
clc
mov
pop
push
dec
lea
push
mov
or
cdq
and
ror
xchg
mov
cwde
fisttp
push
pop
adc
mov
sbb
fcom
stc
sub
loop
pusha
mov
ss
sub
sub
inc
xor
and
arpl
add
cmp
adc
and
sbb
adc
inc
out
mov
out
jmp
rcl
mov
js
test
xchg
xor
cmp
loop
in
inc
push
mov
push
xor
jb
xor
jno
adc
or
xor
fnsave
add
pusha
cmp
pop
and
xchg
dec
inc
stos
and
lea
stos
jo
pop
add
imul
bnd
out
sub
iret
inc
add
pusha
and
nop
lds
xor
sbb
push
ret
test
adc
(bad)
sub
comiss
or
out
adc
mov
ret
test
or
mov
dec
rcl
pop
or
adc
fmul
push
rcl
fistp
push
push
out
inc
add
gs
xchg
sbb
or
or
xor
stos
dec
movs
int
jbe
push
cmp
lea
inc
dec
add
mov
mov
xchg
ud0
cmp
push
add
xchg
sub
push
jmp
and
mov
add
dec
or
cld
sahf
inc
aad
sti
push
cmc
jae
mov
and
shr
xor
xchg
sbb
mov
add
mov
lea
sbb
pop
jo
jnp
add
mov
dec
sub
or
mov
sub
push
jmp
mov
jns
mov
pop
push
stos
cmps
mov
xchg
sbb
test
inc
sbb
xor
fidiv
or
and
pop
cs
push
retf
dec
sub
jo
adc
cmp
les
xlat
cli
mov
repnz
inc
mov
pop
mov
nop
out
std
and
sti
inc
pop
outs
retf
sbb
sub
jbe
loopne
mov
gs
dec
ds
xchg
mov
jge
sub
xor
fdiv
xor
push
sbb
add
or
out
add
or
stos
cld
xor
ss
ds
nop
in
xchg
cmp
je
aaa
mov
sub
mov
push
adc
or
adc
push
adc
call
loopne
push
in
or
bound
push
inc
mov
push
mov
stos
push
stos
xchg
fidivr
mov
in
mov
loop
ret
mov
mov
xor
inc
push
adc
xor
out
xor
add
jmp
mov
jge
or
and
cs
or
add
or
adc
push
call
dec
icebp
xor
out
retw
pop
stc
or
pop
jl
sbb
and
jecxz
ss
sub
and
mov
or
aaa
add
add
mov
data16
cmp
pop
inc
jmp
jnp
pop
ficomp
add
inc
xor
cmp
and
hlt
cwde
movs
pop
mov
lea
mov
xor
test
push
fnsave
and
lahf
retf
push
inc
mov
mov
les
sub
cmp
sahf
xchg
pop
mov
scas
lds
hlt
push
and
inc
mov
sbb
fist
nop
xchg
add
cli
and
inc
arpl
pop
push
in
push
rcr
or
lock
mov
dec
push
shl
mov
mov
pop
or
jge
inc
add
test
and
dec
pop
(bad)
add
aaa
cmp
call
mov
jnp
pop
mov
cmp
les
fnsave
mov
mov
and
xchg
or
in
inc
pop
xchg
sub
aam
mov
push
test
jmp
add
xor
xchg
inc
dec
js
inc
sub
or
rcr
icebp
icebp
bound
daa
scas
adc
stc
sub
int3
imul
ins
lock
in
les
fmul
inc
sbb
xor
add
(bad)
retf
mov
and
repnz
dec
je
sbb
mov
outs
in
inc
inc
inc
mov
test
out
mov
mov
int
cmp
pushf
sbb
inc
xchg
and
mov
push
pop
scas
jmp
nop
mov
dec
outs
sbb
push
clc
push
mov
jmp
cmp
imul
or
nop
(bad)
sbb
daa
and
add
loopne
and
dec
sub
jne
inc
push
xchg
push
dec
shl
xor
adc
fidivr
add
sub
inc
aam
bound
imul
aaa
or
push
fimul
adc
jns
adc
out
add
cmp
adc
aas
sti
mov
push
add
cmp
adc
adc
enter
push
mov
inc
adc
mov
sub
mov
pop
pop
(bad)
pop
addr16
xchg
inc
adc
outs
add
xor
push
sub
sbb
pop
repz
stos
or
out
cs
mov
movs
mov
dec
leave
lods
push
sub
adc
rol
mov
mov
cld
sar
add
arpl
and
add
ret
mov
cmp
mov
push
xor
and
mov
xor
lock
push
dec
push
cmp
jne
shr
mov
adc
cmc
pop
jnp
mov
cmp
add
pop
sub
fadd
or
add
add
str
xlat
pusha
fiadd
xchg
sbb
repnz
scas
sub
push
sbb
mov
sub
add
or
mov
lea
adc
repz
cmp
lock
push
adc
mov
mov
les
push
ja
retf
xchg
(bad)
div
js
popf
stos
aas
or
out
push
sbb
test
inc
add
push
je
in
push
sub
jb
pop
(bad)
ins
add
push
fist
aas
sahf
sbb
adc
lods
outs
out
sbb
dec
add
sub
mov
(bad)
add
ret
loope
or
retf
or
sub
imul
push
outs
sbb
sub
jns
mov
(bad)
pusha
in
or
pop
dec
push
mov
adc
test
or
mov
inc
rol
js
aam
pop
inc
or
jp
movs
push
je
dec
mov
das
ret
hlt
mov
loop
push
fisttp
and
xor
shl
scas
scas
add
outs
push
inc
mov
push
arpl
sbb
jno
jne
call
mov
lods
test
mov
shl
es
dec
or
xor
xchg
fist
mov
mov
xor
aam
inc
ins
ins
sub
cmp
shr
cmp
mov
sbb
mov
mov
add
cmp
jno
out
mov
add
test
or
stc
mov
pushf
mov
sub
and
imul
mov
push
push
add
push
inc
cmps
loopne
cmp
loopne
and
das
scas
mov
in
xchg
call
ror
push
in
xchg
ins
mov
add
cmp
and
jbe
(bad)
pop
shl
mov
xor
popa
cmps
es
mov
adc
push
sub
and
neg
lods
xor
add
push
dec
aaa
loopne
lods
push
mov
dec
fcmovu
jne
sub
test
xor
push
and
aaa
int
fisubr
mov
mov
popf
int3
fistp
mov
test
outs
and
sub
data16
or
scas
sbb
or
hlt
je
jb
lea
adc
adc
test
sub
push
fld
fadd
sub
mov
or
cld
ret
or
push
lods
add
sbb
cmc
in
pop
call
mov
loop
mov
test
pop
rcl
pop
xor
(bad)
sbb
int3
pop
sahf
popf
in
(bad)
int3
jmp
push
je
movs
mov
inc
add
or
fist
pusha
add
pop
imul
adc
iret
mov
rcr
aaa
bound
jecxz
scas
mov
sub
dec
es
push
test
mov
retf
pop
dec
(bad)
stos
cwde
add
loop
cmc
fcomp
mov
lods
mov
or
sbb
pushf
cmps
jg
xor
data16
sbb
retf
dec
das
popa
shr
xchg
add
sub
iret
(bad)
in
xor
adc
pop
aas
popf
movs
push
rol
test
repz
sub
add
dec
jae
dec
adc
lock
push
sub
(bad)
hlt
xchg
jmp
je
cmc
sub
xor
adc
push
rcl
mov
xchg
and
jno
mov
pop
bound
adc
retf
mov
call
jge
lea
in
add
in
ds
pop
loop
push
fcom
test
pop
cmp
ss
mov
jnp
jne
gs
sbb
stos
enter
mov
pop
and
cmp
jmp
xor
mov
shl
cmp
outs
push
dec
mov
xor
dec
rcr
js
fild
sbb
call
add
adc
xchg
setno
sbb
in
mov
hlt
add
or
rcl
inc
and
fdiv
cmp
add
retf
das
push
ja
mov
sbb
cmp
inc
inc
aas
xor
xchg
loope
push
or
cwde
mov
je
mov
mov
test
inc
je
push
sub
add
(bad)
jle
test
jns
ss
push
retf
add
or
(bad)
fs
mov
ret
jmp
outs
xchg
add
call
mul
jl
div
imul
mov
shl
xor
pop
dec
shr
dec
test
inc
or
call
dec
adc
call
ins
inc
dec
fcomp
jmp
jae
push
fsubr
sub
mov
test
xor
sbb
xor
push
jmp
inc
aam
jne
xlat
je
lds
(bad)
sbb
out
es
and
jl
add
or
shl
int3
pop
popa
es
scas
mov
jnp
cmp
sahf
inc
mov
jns
add
adc
mov
pop
add
jne
jo
xor
sub
(bad)
cmp
mov
js
clc
imul
sub
cmp
inc
mov
and
mov
out
das
imul
add
push
jb
sub
adc
push
sbb
popa
aaa
mov
xor
push
sbb
xor
adc
pop
cmp
pusha
and
adc
fstp
in
fsubp
push
dec
push
je
or
adc
test
sti
pop
sub
ds
or
push
push
sbb
(bad)
aaa
or
in
jns
(bad)
jle
jae
sub
and
cmp
or
hlt
mov
int3
add
repnz
and
pop
int3
enter
push
rcr
xlat
push
shr
and
cmp
ja
aas
add
scas
xor
leave
pop
and
adc
gs
addr16
jnp
inc
inc
push
sbb
ins
pop
dec
dec
clc
jl
mov
push
and
pop
and
int
dec
jae
cmp
fimul
push
repnz
adc
sbb
dec
(bad)
and
sub
fidiv
daa
(bad)
adc
or
lds
jmp
add
(bad)
inc
sub
sbb
pop
fadd
or
jmp
xor
mov
pop
scas
adc
inc
daa
or
and
jmp
ss
inc
lds
or
add
add
je
in
or
mul
inc
rol
daa
add
adc
clc
mov
add
pop
pop
add
adc
cmps
add
sbb
dec
add
mov
push
cwde
mov
ret
push
sub
addr16
aas
jle
mov
(bad)
lahf
jbe
mov
or
or
add
inc
shl
les
sub
jae
fiadd
inc
inc
xor
call
adc
sbb
jmp
mov
loope
movs
inc
push
xor
adc
mov
inc
sbb
pop
out
int3
cs
addr16
popa
outs
adc
cmp
call
in
scas
xchg
push
and
(bad)
in
inc
jne
faddp
fild
sub
and
ss
fnstcw
pop
call
dec
arpl
mov
push
out
dec
mov
sub
pushf
fcomp
retf
xchg
xchg
mov
icebp
out
addr16
and
js
pop
je
cmp
jb
(bad)
fldcw
in
lea
push
adc
in
pop
mov
cwde
mov
sbb
mov
sbb
and
call
and
sbb
cmp
ins
imul
cld
clc
or
or
in
xchg
or
out
dec
ins
in
mov
jle
cmp
fsub
pop
sbb
out
sbb
push
addr16
stos
sub
or
iret
int
aad
pop
fwait
cs
push
in
xor
sbb
jo
add
inc
push
or
pop
fucom
test
cmp
xchg
std
mov
mov
mov
inc
adc
xchg
sub
cmp
and
(bad)
clc
jae
dec
mov
adc
push
mov
sub
adc
cmp
pusha
and
jnp
mov
pop
inc
mov
add
iret
gs
mov
and
dec
add
inc
mov
and
cmp
dec
leave
pop
inc
cmp
and
pop
add
cmps
xor
call
ret
add
pusha
adc
rcl
push
sub
aam
or
or
or
cld
dec
in
cmp
adc
fdivrp
dec
dec
mov
lea
loopne
add
sbb
mov
mov
rcr
fld
retf
adc
push
xchg
mov
cld
ret
push
test
sahf
(bad)
cmp
arpl
sbb
sbb
add
sub
xor
jl
and
and
pushf
nop
or
ltr
mov
shr
nop
inc
test
sbb
or
mov
or
pop
inc
enter
inc
movs
jns
mov
add
add
fiadd
ret
and
mov
ja
nop
xor
sbb
pop
add
xor
shl
aaa
sbb
cmp
leave
or
cmp
fdiv
test
pop
push
fcom
fadd
inc
mov
test
or
xchg
(bad)
int3
bound
xor
xor
dec
adc
dec
sub
adc
(bad)
aam
xchg
je
or
adc
mov
mov
cld
aaa
sub
or
xor
xor
iret
mov
add
jo
dec
add
cmp
inc
outs
jae
and
or
cmp
add
mov
mov
inc
mov
dec
mov
and
xchg
xchg
movs
test
inc
cwde
es
dec
lahf
push
cs
add
jnp
xchg
test
add
fisttp
cdq
jne
fidiv
inc
and
sbb
test
mov
xchg
or
pop
push
repnz
jmp
pop
nop
ins
sbb
sbb
and
lock
nop
pop
sbb
and
and
fld
enter
dec
add
nop
in
add
pusha
push
and
nop
rol
lock
in
ret
inc
ins
inc
jb
add
pop
or
and
fiadd
mov
pop
lock
mov
call
pop
add
cmp
pop
gs
int
add
sbb
and
pop
nop
mov
adc
sub
and
cld
outs
icebp
push
fstp
jl
pop
ins
pop
add
ins
adc
add
mov
icebp
add
cmp
add
mov
or
and
clc
pop
test
adc
and
add
cdq
in
add
inc
push
or
lods
shl
sub
add
sbb
and
add
leave
and
test
adc
loopne
dec
cwde
cmp
add
add
adc
add
and
dec
push
loopne
and
mov
dec
pop
in
add
xchg
pop
pop
mov
aam
add
add
pop
mov
and
dec
aaa
dec
add
sahf
adc
adc
adc
xor
ret
jmp
cdq
sbb
call
fld
mov
cmp
adc
ret
jge
sbb
jo
mov
test
mov
mov
push
sbb
lock
push
cmp
test
mov
sbb
emms
mov
dec
adc
mov
jmp
int3
fadd
or
jge
add
std
lahf
pop
xchg
bound
(bad)
inc
dec
jecxz
in
shl
add
dec
jl
dec
nop
(bad)
cld
or
adc
inc
clc
xchg
cmp
xor
and
push
and
retf
sahf
ret
xor
adc
ret
push
mov
hlt
pop
pop
clc
push
lds
(bad)
clc
push
cld
pop
ret
adc
mov
clc
mov
fcomi
loop
push
mov
jge
adc
mov
rol
xchg
rol
enter
sbb
sbb
fcomp
loopne
sbb
sbb
call
repnz
clc
cld
xchg
add
xor
xor
or
adc
xor
xor
sbb
and
xor
xor
sub
xor
xor
xor
cmp
inc
xor
xor
dec
dec
push
push
xor
xor
pop
pop
pusha
xor
xor
push
xor
xor
add
nop
xchg
xor
xor
cwde
pushf
mov
xor
xor
xor
xor
xor
int3
rcl
mul
repz
mov
fcom
or
ds
iret
out
or
adc
sbb
pusha
cmp
pop
xlat
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
adc
fcom
add
sub
inc
dec
and
jbe
stos
ret
add
imul
je
xor
xor
and
jo
hlt
fldenv
add
add
cmp
and
or
pop
mov
add
xchg
retf
xchg
inc
xchg
fdivr
lock
fist
push
fisttp
jae
gs
in
(bad)
inc
inc
and
ins
outs
mov
jno
imul
outs
pcmpeqw
ins
sub
mov
and
je
fsub
outs
data16
ja
mov
cmp
jne
and
dec
xor
jae
shr
out
daa
rol
ja
inc
nop
and
mov
add
jns
push
je
jo
ins
outs
sti
or
lods
lahf
push
add
pop
dec
push
xor
fs
jo
add
sub
loopne
dec
xor
mov
adc
add
retf
test
sbb
mov
push
test
and
mov
retf
add
or
and
adc
sub
add
pop
shl
movs
test
mov
shl
(bad)
enter
xor
rcl
fcomp
shl
in
lock
mov
cld
sub
add
cmps
imul
cmps
imul
mov
add
or
inc
push
dec
addr16
pop
jb
gs
clc
in
daa
iret
inc
or
pop
pop
daa
cmp
or
repnz
js
jl
and
inc
stos
pop
add
adc
in
pop
sar
rcr
and
or
fs
call
xchg
or
inc
sbb
imul
push
pop
repnz
sbb
mov
add
pop
fs
bound
add
push
xor
scas
add
mov
mov
jmp
add
add
or
xlat
lea
imul
jae
imul
repz
mov
pop
or
and
adc
(bad)
out
add
push
add
mov
or
imul
push
adc
pop
pop
cmp
mov
add
add
add
xor
adc
add
pusha
jmp
call
mov
lods
mov
xor
lock
inc
xor
shl
pusha
je
xchg
mov
cmp
test
add
or
lock
or
mov
adc
mov
in
call
or
add
int3
enter
enter
call
retf
(bad)
(bad)
loopne
jecxz
in
das
push
test
(bad)
lods
jb
lock
and
add
ja
int3
pop
xor
xor
xor
ss
cmp
inc
inc
inc
inc
inc
inc
xor
cmp
out
or
or
addr16
sar
dec
pusha
or
add
fsubr
xor
jns
sbb
pop
adc
xchg
push
pop
shr
and
dec
pop
test
and
les
ins
adc
push
dec
inc
aam
pop
push
lea
bound
arpl
and
and
jb
and
adc
and
in
mov
inc
mov
add
pop
add
call
sub
mov
jbe
sbb
sbb
add
fld
lods
sbb
sub
add
data16
sbb
xchg
popa
daa
sbb
pop
int3
jo
mov
cmc
jg
retf
mov
retf
clc
ins
fnstenv
pop
dec
and
fiadd
add
add
ror
mov
scas
jne
jo
push
stos
sbb
addr16
cmp
adc
and
push
mov
dec
push
cmps
sbb
outs
nop
fild
push
clc
pop
pop
push
ret
push
test
pusha
stc
sbb
gs
inc
jnp
xchg
mov
pusha
stc
ins
(bad)
xor
in
add
push
sbb
sbb
xor
outs
popa
ins
sbb
pop
adc
je
leave
(bad)
retf
mov
adc
sbb
jb
shl
(bad)
xor
pop
mov
mov
out
(bad)
imul
add
adc
jo
add
pop
mov
xor
xor
or
push
dec
push
pop
push
push
push
push
inc
sub
push
hlt
sbb
and
and
int
and
outs
test
cs
arpl
das
mov
or
sbb
dec
inc
ds
or
sbb
sub
jne
addr16
mov
xchg
pop
pop
shl
jbe
inc
inc
test
(bad)
push
je
sub
xor
cmp
ins
xor
adc
jnp
lods
push
or
in
arpl
fs
lahf
sbb
addr16
je
stc
or
jae
arpl
sub
sbb
fisubr
push
outs
ss
out
and
inc
sub
and
call
cmps
inc
in
and
gs
ins
jbe
ret
in
inc
popa
jnp
shl
adc
arpl
jnp
mov
pop
sub
push
push
mov
outs
outs
fadd
and
and
dec
(bad)
sbb
pop
popa
cwde
dec
call
cmovl
je
xchg
mov
(bad)
fadd
cmp
rcr
jb
pushf
pop
add
push
jb
sbb
bound
dec
lods
jecxz
cmp
movs
rcr
outs
mov
and
and
addr16
cmp
dec
pop
or
add
add
add
push
adc
add
pusha
push
test
(bad)
lock
jmp
push
push
movs
int
mov
lods
push
push
loop
arpl
sbb
gs
jle
jae
adc
imul
sbb
sub
jmp
retf
or
adc
adc
push
add
stc
add
sub
push
add
push
add
mov
add
sub
adc
sbb
add
or
and
xor
and
int3
adc
sub
or
add
sbb
push
push
pop
add
sbb
push
adc
sub
xor
sbb
or
and
adc
xchg
sbb
mov
adc
jae
mov
add
lock
or
xor
sbb
xor
shl
cmps
mov
xlat
imul
cmps
imul
imul
dec
shl
aaa
inc
push
(bad)
jbe
mov
cs
(bad)
or
cs
adc
pop
pop
xor
call
push
or
outs
jne
bound
sub
jne
push
xor
push
jns
or
sbb
push
outs
sub
jns
sti
fld
lahf
cs
inc
ins
test
sub
adc
xchg
inc
and
push
jnp
pop
dec
pop
outs
popa
enter
pop
jae
and
push
andnps
cmp
xchg
int
popf
mov
hlt
scas
sub
xor
pushf
push
into
push
shl
cs
push
popa
shr
mov
push
outs
mov
fs
popa
pop
sbb
and
or
jg
add
pop
adc
sbb
sbb
dec
je
aam
adc
adc
aaa
inc
stos
or
movs
div
jne
inc
or
mov
jb
jmp
dec
lods
(bad)
ins
imul
sub
jae
test
stos
or
outs
fld
or
ror
dec
das
dec
out
fild
daa
add
push
fild
xchg
fdiv
mov
inc
or
mov
gs
push
or
(bad)
ins
mov
sbb
gs
sub
ins
jns
jae
stos
fld
pop
mov
mov
imul
ss
(bad)
mov
pop
xchg
jns
and
(bad)
in
push
or
fs
xor
cmps
lock
or
jecxz
dec
jne
(bad)
add
cs
jo
das
outs
add
jb
cmp
ret
adc
mov
movs
sub
fcmovnu
pop
popa
jae
pop
out
dec
popa
(bad)
or
inc
xchg
cmp
bound
dec
fadd
jecxz
xor
push
add
(bad)
or
je
mov
mov
adc
push
adc
adc
daa
push
add
sub
xor
ins
pop
sub
sub
fld
and
sub
dec
and
or
test
add
add
add
inc
and
test
mov
mov
push
xor
xor
cmps
imul
cmps
imul
fstp
inc
add
inc
add
push
aaa
xor
outs
add
xor
jbe
mov
shl
lods
mov
mov
mov
dec
shl
out
neg
add
adc
push
imul
imul
mov
dec
or
or
mov
add
dec
iret
inc
in
cs
or
or
add
dec
cmp
and
mov
xchg
(bad)
jns
and
inc
fs
pop
sbb
dec
lods
lahf
ins
jmp
fstp
push
jne
pop
push
push
outs
or
lods
cmc
push
push
push
push
mov
adc
jne
cmp
fidivr
xor
push
add
out
pop
or
bound
dec
jae
lods
aad
cmc
jno
aad
cmove
ins
dec
and
add
adc
add
test
addr16
dec
mov
jnp
int
mov
push
push
dec
dec
fidivr
fmul
inc
inc
cmp
cmp
add
stos
inc
and
pusha
inc
xor
xor
xchg
add
add
push
xor
xchg
push
and
or
push
jno
and
add
cs
ret
mov
or
fst
xchg
mov
xor
jo
in
or
jbe
add
retf
sahf
lea
loopne
jg
jne
iret
mov
add
add
pop
add
pop
jbe
(bad)
pop
shl
aaa
lock
mov
inc
clc
(bad)
clc
lock
rcr
int
jge
dec
dec
imul
or
dec
dec
lods
push
jp
cmp
add
frstor
pop
inc
add
or
retf
push
inc
adc
ins
mov
ror
daa
add
std
cmps
fbld
test
inc
mov
popa
lods
jg
push
ret
push
jb
cmp
dec
inc
inc
pop
mov
mov
pop
push
imul
cli
jp
bound
and
mov
int
xor
add
add
sbb
add
fs
mov
or
add
adc
mov
daa
sub
or
outs
mov
ins
hlt
addr16
je
add
loopne
jg
leavew
sbb
into
mov
shl
popw
adc
mov
and
xor
dec
cs
inc
cmps
add
dec
shl
adc
push
adc
call
add
adc
jmp
xor
pop
js
pop
sub
sbb
and
addr16
push
push
or
adc
or
adc
jae
scas
or
inc
mov
sub
call
push
adc
sub
leave
rol
add
or
or
(bad)
and
xor
jae
or
fs
leave
nop
or
lock
call
in
fadd
leave
nop
fcom
cmp
adc
or
test
enter
or
call
xchg
push
or
pushf
sub
nop
sub
das
scas
sub
aam
xor
into
stos
in
jecxz
or
rcl
dec
jbe
xchg
pop
cmp
xor
push
shl
sub
cmp
or
je
in
add
imul
adc
cmp
xchg
cmp
and
xor
inc
push
enter
push
add
or
lods
mov
shr
sbb
and
sbb
enter
ins
jl
xor
add
aam
hlt
in
enter
cmp
xchg
xchg
mov
js
inc
xchg
mov
xchg
mov
or
sbb
sub
adc
xchg
inc
je
xor
add
and
in
and
cmp
pop
repnz
pop
sbb
sbb
sbb
or
mov
xchg
or
cmp
sbb
nop
popf
cmp
lahf
fist
les
jl
dec
call
push
neg
(bad)
shl
call
and
or
imul
data16
pushf
xchg
data16
shl
imul
outs
and
push
data16
push
adc
sub
or
je
or
add
rol
mov
ins
shl
or
or
inc
xor
xor
adc
adc
inc
or
fdiv
pop
rol
shr
fimul
pop
and
push
dec
pop
push
push
inc
inc
and
adc
pop
mov
mov
xor
xor
xor
and
or
xor
cmp
cmp
push
and
xchg
sub
push
xor
outs
xor
stc
dec
les
loopne
push
fs
inc
ins
and
sub
pop
inc
inc
sti
or
or
push
dec
dec
inc
pop
inc
stos
push
dec
dec
dec
sub
hlt
pop
push
push
push
arpl
popa
vmread
ds
inc
jne
pusha
outs
fsub
adc
mov
push
dec
inc
mov
dec
cmps
cmp
jb
sahf
imul
test
jecxz
push
and
les
mov
sub
mov
fst
ficom
out
mov
jnp
xchg
push
inc
push
inc
fild
push
and
or
retf
and
adc
and
xor
ret
adc
adc
push
mov
inc
jae
jle
fucomip
mov
or
sub
stos
adc
and
loopne
xchg
pushf
and
scas
and
pop
jne
ja
sub
and
test
rcr
rcl
test
pop
and
gs
fs
dec
sub
push
dec
push
cs
xor
(bad)
sub
and
dec
scas
and
ds
cmp
sub
retf
push
bound
add
push
mov
fs
mov
(bad)
mov
lahf
cmp
es
jno
pop
movs
push
xor
inc
(bad)
mov
loope
push
push
add
ret
inc
cmp
popa
ja
pop
jb
popa
inc
ins
sbb
adc
push
gs
(bad)
cmpxchg
cdq
xor
dec
or
jl
sub
nop
cmp
inc
jbe
lods
inc
dec
outs
push
sub
and
js
push
adc
je
fwait
adc
inc
adc
pop
std
stc
scas
cdq
int
inc
push
inc
push
inc
push
inc
dec
jl
xor
sub
add
ror
jo
push
xlat
adc
sub
pop
shr
and
jbe
and
in
dec
sbb
or
movs
xchg
or
enter
mov
add
adc
add
jae
cmps
test
push
rcr
nop
add
add
xor
jae
dec
push
pop
pop
inc
call
icebp
pop
pusha
fcom
xor
adc
call
sbb
cmps
jmp
and
sub
call
push
pop
pusha
imul
imul
imul
cmps
imul
or
xor
rcl
and
cmp
mov
xor
shl
ror
fadd
dec
shl
call
call
and
xor
inc
dec
push
imul
shl
fs
shl
fs
fs
add
dec
shl
pusha
js
rol
retf
or
add
add
or
nop
adc
add
mov
add
adc
(bad)
mov
or
dec
pop
stos
dec
or
out
adc
dec
mov
xchg
cmp
popf
jb
imul
mov
add
jne
outs
add
dec
add
mov
daa
pop
add
add
or
push
or
fs
adc
and
jb
leave
xchg
push
popa
pop
ins
stos
ins
mul
adc
xor
je
xlat
popa
bound
jne
xchg
add
mov
jo
ins
lds
mov
(bad)
push
add
dec
lds
ins
xchg
fucom
mov
cdq
je
push
aaa
out
out
je
ins
add
fisttp
adc
emms
dec
or
ja
pop
xlat
adc
adc
imul
outs
pop
and
sbb
fwait
xor
pavgw
add
test
out
mov
or
mov
jnp
jne
cmps
sbb
add
jmp
sbb
jbe
out
cmp
outs
adc
add
add
and
ja
ja
ins
add
ja
mov
jmp
jmp
cs
or
into
pop
dec
popa
stos
mov
popf
cdq
add
popa
ss
mov
aaa
inc
cmp
cdq
push
inc
add
xchg
xor
test
jno
pop
add
pop
leave
sub
pop
ins
(bad)
inc
adc
jnp
je
jo
arpl
push
jbe
jecxz
mov
sbb
fs
fsubr
jb
and
das
sbb
add
and
arpl
add
xor
or
imul
mov
cmp
dec
push
jae
push
rol
ror
adc
xchg
or
fwait
je
data16
fsubr
sbb
mov
or
cmp
and
inc
ficomp
add
gs
adc
pop
dec
addr16
push
xchg
xor
mov
inc
mov
jge
das
sub
push
pop
or
pop
jmp
inc
pop
jae
jo
outs
out
in
leave
lock
mov
js
arpl
pop
gs
adc
pop
js
jb
xchg
sbb
pop
ss
std
js
inc
cmps
cmp
xor
mov
out
pop
(bad)
inc
scas
mov
mul
sbb
imul
idiv
xchg
xchg
aas
and
push
dec
imul
pop
lods
sub
push
xor
cmc
add
cmp
nop
sub
push
add
or
je
imul
das
ror
sub
mov
push
icebp
xchg
adc
js
addr16
stc
adc
xchg
ss
and
popf
iret
sbb
mul
ins
retf
mov
adc
mov
adc
addr16
dec
imul
or
ins
pop
and
in
test
movs
mov
into
push
bound
push
push
add
sbb
mov
inc
and
fbstp
push
pop
clc
sahf
mov
fld
enter
add
and
mov
cmp
mov
mov
nop
mov
gs
popa
xchg
imul
icebp
cmp
sub
xor
add
pop
jno
fs
nop
ins
ret
pop
movs
test
sub
int
adc
mov
fldenv
outs
sub
ins
inc
sbb
sub
enter
pop
sub
retf
fsubrp
int
mov
fist
fadd
imul
or
sbb
adc
mov
lahf
jo
adc
sti
pop
mov
fwait
and
pop
cmps
enter
add
and
adc
pop
ja
dec
adc
mov
rcl
push
(bad)
pop
or
ins
jo
les
or
xor
gs
push
retf
sbb
mov
int
pop
xor
adc
dec
ret
mov
pop
fwait
cmp
adc
sub
sub
and
xchg
test
cmp
mov
outs
ins
jo
jo
add
inc
push
sbb
or
loopne
xlat
sub
ins
adc
inc
push
gs
ins
setno
inc
cmps
fcmovnbe
push
rcl
fs
dec
fld
inc
js
push
mov
push
push
fadd
push
sbb
or
jb
je
inc
dec
inc
push
lods
je
adc
jae
adc
or
mov
push
pop
push
popa
push
add
bound
fisubr
adc
arpl
and
loop
mov
fwait
sub
jg
cmc
bound
push
mov
scas
or
jns
dec
ret
pop
adc
and
outs
or
or
jnp
pop
dec
test
xor
jmp
test
fbld
test
xor
into
(bad)
inc
add
sub
je
jo
adc
mov
test
fcom
cmps
pop
test
jae
or
push
pop
ins
cmp
mov
or
dec
cmp
mov
sbb
mov
adc
ss
or
dec
adc
movs
add
jbe
or
bound
mov
test
ss
nop
or
pusha
jnp
outs
push
aam
xchg
imul
out
pop
out
add
pop
arpl
sbb
je
push
sti
fnstcw
add
dec
push
outs
jae
and
fld
inc
push
sbb
(bad)
cmp
or
int
cmp
mov
arpl
push
pop
gs
jnp
sbb
or
jne
jne
push
int3
and
push
lds
and
or
dec
or
inc
xor
and
loope
xor
add
xchg
push
sbb
fcmovu
ins
gs
jmp
or
cs
jns
or
inc
dec
getsec
pop
bound
fcomp
test
or
mov
faddp
or
mov
ss
ss
dec
add
retf
mov
retf
adc
xchg
sbb
add
retf
mov
push
add
xor
mov
or
ret
sbb
lahf
jne
push
ret
aaa
imul
and
pop
inc
nop
sub
push
imul
push
add
fidivr
outs
stos
inc
je
lods
test
movs
loop
xor
dec
(bad)
(bad)
ins
arpl
int
add
mov
pop
and
add
or
or
push
fdivrp
(bad)
fisttp
or
adc
push
sbb
or
push
adc
or
and
push
sbb
cs
or
sub
sbb
or
or
push
(bad)
sti
or
pop
or
and
adc
lods
add
or
cmp
adc
cmp
add
push
adc
or
enter
or
sbb
test
inc
ret
or
mov
sbb
repnz
or
sbb
or
sbb
lock
(bad)
push
add
cmp
mov
adc
or
adc
addr16
add
jg
(bad)
aas
mov
add
push
pop
shl
add
gs
sbb
(bad)
out
mov
aas
add
adc
adc
or
lock
push
out
push
sub
outs
dec
pop
inc
pop
cmp
daa
jg
test
adc
xor
adc
adc
xor
ss
pop
aaa
(bad)
das
adc
adc
or
ret
bound
push
jmp
adc
add
sbb
push
lahf
adc
adc
sub
adc
adc
(bad)
push
lock
push
or
sub
cmp
es
adc
outs
cld
jmp
bndldx
cmp
sub
sbb
cmp
inc
lods
sub
or
(bad)
(bad)
push
xchg
das
(bad)
cmp
and
pop
sbb
adc
pop
or
inc
push
sub
adc
pop
mov
ss
idiv
xor
ins
push
add
test
add
add
add
push
pop
pop
push
xor
push
adc
ins
popf
out
clc
(bad)
jmp
and
sbb
or
adc
pop
adc
xchg
jle
test
jnp
adc
add
pop
push
pop
sbb
sbb
test
fisub
pminub
adc
adc
xor
cwde
enter
js
xor
or
aas
adc
or
adc
or
push
or
nop
loope
cmps
and
faddp
es
jp
add
fs
sbb
cmp
xchg
adc
xor
das
cmp
add
jne
lock
imul
push
add
ror
sbb
addr16
sub
push
and
ins
fistp
inc
movhps
cmp
sub
add
pop
and
xchg
and
int3
adc
jae
and
sbb
outs
add
out
add
in
inc
lock
call
je
sbb
and
xchg
jne
inc
sbb
or
pop
add
test
sbb
push
adc
add
push
pop
add
sub
pop
push
or
or
xchg
(bad)
pusha
movs
imul
jle
pusha
mov
lock
xchg
addr16
mov
mov
add
cmp
imul
sub
into
xchg
cmp
lock
popa
jg
sbb
ret
arpl
cmps
nop
mov
add
daa
adc
cmp
and
add
(bad)
adc
pop
loopne
pusha
cmp
pop
pushf
sbb
push
xor
sub
or
in
call
add
das
pop
push
sbb
inc
sbb
sub
sbb
pop
pop
pop
dec
pop
adc
mov
add
int
sub
xor
sub
pop
jb
cmp
inc
pop
inc
jno
dec
sbb
sbb
add
jmp
lock
add
mov
adc
pop
mov
push
add
cmp
or
paddsb
sbb
or
lock
aas
adc
and
add
cs
pusha
outs
fiadd
pop
add
popa
cmps
pop
pusha
lahf
rcl
mov
jmp
xor
outs
pop
adc
xchg
outs
xor
adc
sub
add
clc
push
mov
mov
sub
add
cpuid
add
adc
pop
adc
inc
jecxz
and
aam
or
mov
sbb
in
and
jge
mov
or
pop
push
add
or
or
rcr
loopne
or
or
xor
push
mov
adc
leave
or
pusha
xor
xor
inc
add
and
push
dec
inc
adc
inc
xor
jne
mov
dec
add
adc
ret
fist
or
(bad)
ret
add
pop
push
clc
ret
push
adc
or
aam
sub
inc
push
dec
jg
fistp
lock
jns
sbb
or
dec
sysret
and
test
mov
mov
fisubr
or
push
cmp
jo
imul
das
push
sbb
(bad)
push
mov
push
cmp
push
mov
ins
out
call
and
adc
cmp
ins
outs
into
rcl
cmp
push
pop
aaa
fisubr
or
pusha
adc
aas
inc
mov
lock
jp
icebp
aaa
cli
dec
lock
add
mov
pop
jp
add
outs
mov
adc
or
jle
nop
push
push
pop
adc
ror
pop
jbe
in
outs
je
mov
sub
movs
mov
jg
push
mov
or
or
and
or
sub
xchg
or
sbb
pop
pop
mov
pop
and
xor
pop
fld
jnp
add
or
lock
push
pop
mov
(bad)
inc
add
push
sbb
lock
inc
inc
push
ss
push
das
pop
adc
add
add
rcr
or
or
push
aas
adc
(bad)
imul
or
or
scas
sbb
push
bound
dec
bound
ins
xor
jbe
pop
jmp
push
ja
push
cs
adc
test
or
sbb
call
inc
adc
(bad)
sbb
or
movs
loope
dec
adc
pop
or
cdq
add
outs
jne
inc
jmp
fistp
inc
add
inc
adc
sbb
cmp
add
imul
add
xchg
add
outs
clc
sub
push
add
add
add
mov
xor
inc
or
scas
push
fist
push
xor
ins
mov
aas
and
or
test
call
xchg
push
cmps
aas
aaa
inc
jg
push
xor
push
mov
add
adc
sbb
xchg
popa
mov
sbb
sti
xor
mov
mov
mov
xchg
adc
adc
das
jg
std
ds
adc
push
or
inc
or
jmp
cmp
dec
(bad)
adc
push
lea
push
inc
inc
cmp
rcl
and
sbb
push
pop
js
imul
rol
pop
cmp
lods
rcl
add
xchg
add
jns
push
ror
cmp
mov
push
sub
pop
(bad)
xchg
fstp
aaa
into
inc
xchg
ror
(bad)
cs
scas
or
inc
cmp
std
jmp
pushf
adc
mov
das
push
mov
mov
cmc
sbb
sub
push
clc
fwait
mov
cmovne
adc
xchg
sub
mov
xor
or
dec
jno
pop
inc
or
push
test
sbb
push
mov
push
aas
xchg
jp
xor
rep
aaa
adc
shl
gs
sub
and
call
pop
add
or
pop
test
add
arpl
aam
jg
cmc
add
add
sbb
pop
dec
std
scas
and
cmp
jo
add
mov
add
les
dec
cmp
sbb
or
in
push
ins
pop
outs
push
ja
and
sub
and
dec
add
add
mov
pop
xchg
and
call
ins
add
xor
add
daa
fist
pop
add
lods
cwde
imul
push
add
ja
add
inc
xor
and
sbb
adc
fmul
and
sbb
push
add
mov
das
cmp
pushw
sub
and
and
pop
or
add
rol
push
lock
cdq
adc
mov
adc
js
sub
aaa
loopne
pop
retf
add
and
mov
add
or
add
int
push
pop
sbb
sbb
or
mov
xor
or
and
and
lock
stos
add
ins
popa
mov
inc
ins
sbb
cmp
dec
push
pusha
jmp
push
push
cmp
dec
shr
or
and
add
imul
or
sub
lock
add
sub
push
inc
add
dec
add
add
hlt
xchg
mov
add
and
(bad)
push
adc
nop
adc
adc
or
or
push
lods
add
pop
and
test
jl
pusha
mov
push
mov
jb
mov
or
and
jbe
pop
jl
push
out
cdq
mov
jecxz
popa
leave
jle
out
mov
and
test
ins
xor
add
inc
mov
in
ins
jae
nop
daa
add
add
push
daa
mov
xchg
sub
gs
mov
daa
jb
cs
(bad)
xchg
push
cmp
daa
xor
test
and
add
mov
add
pop
add
add
add
add
add
add
add
add
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
