(bad)
push
stos
nop
add
add
xchg
and
popf
std
xchg
inc
add
and
pop
pop
add
mov
ss
clc
pop
pop
(bad)
and
retf
xchg
daa
aas
daa
mov
call
xor
add
xchg
xchg
xchg
and
adc
sub
js
xchg
xchg
xchg
xchg
inc
pop
adc
xchg
xchg
xchg
xchg
pushf
add
xor
xchg
xchg
xchg
xchg
cmp
mov
xchg
xchg
xchg
xchg
sbb
xchg
xchg
sub
xchg
xchg
xchg
xchg
mov
xchg
or
nop
push
cmp
mov
xchg
inc
mov
adc
call
and
sbb
cmp
or
inc
lock
add
push
je
imul
(bad)
push
jns
popa
ins
dec
xor
add
cmps
movs
sbb
movs
or
je
pop
cld
(bad)
(bad)
dec
adc
lods
fld
das
cmp
xor
or
stos
add
xchg
lahf
rcr
std
inc
outs
jb
in
popa
mov
gs
sub
sbb
call
cmp
inc
add
add
inc
and
div
fdiv
adc
inc
add
(bad)
(bad)
sti
add
add
rol
add
gs
add
add
daa
jbe
cmp
in
or
add
add
inc
es
add
add
inc
ss
xor
js
add
push
loope
sbb
push
out
push
cld
and
fcom
sbb
add
arpl
push
enter
xor
or
enter
movs
pusha
sub
nop
xchg
sbb
test
fistp
inc
xor
jnp
stc
test
or
mov
shr
clc
data16
add
adc
xor
js
add
jnp
pop
inc
add
hlt
mov
in
repnz
sbb
or
or
adc
pop
movs
pop
sar
mov
cmp
xor
add
add
jb
jbe
xlat
mov
fadd
imul
xlat
mov
add
pop
popa
add
push
add
punpckhdq
cmp
xchg
mov
add
xlat
leave
cwde
shr
jg
fsub
loope
xchg
aas
or
push
pop
inc
getsec
push
mov
sets
xchg
add
mov
cmps
jnp
add
cmp
or
pop
cli
int3
(bad)
shl
xchg
xor
add
add
adc
mov
dec
inc
or
xchg
jge
int
add
xor
sbb
add
shl
test
mov
call
in
cmp
cmp
daa
cmp
or
pusha
jns
daa
inc
pop
daa
nop
add
in
add
scas
sbb
dec
cmovo
pop
addr16
imul
dec
mov
add
adc
jmp
(bad)
push
sbb
xchg
add
pop
jnp
sbb
jb
ins
adc
jns
ins
and
shl
mov
cmp
add
aaa
adc
leave
cmp
dec
aas
push
or
fistp
in
inc
pop
and
sbb
iret
(bad)
sub
dec
mov
fbstp
push
or
fdiv
or
cmp
jg
sti
cmp
ins
push
sub
in
call
add
fs
mov
mov
dec
inc
movs
(bad)
inc
push
(bad)
call
adc
pop
lods
pop
dec
(bad)
xchg
adc
sub
cli
fimul
call
pop
mov
fmul
mov
push
mov
(bad)
jge
cmp
push
add
xor
inc
cmp
outs
addr16
ins
and
outs
(bad)
imul
dec
imul
and
jae
aaa
clc
cs
jle
jne
imul
push
dec
ja
ss
imul
mov
dec
(bad)
and
daa
or
cld
add
inc
fnstsw
js
dec
(bad)
or
and
int
dec
and
mov
das
outs
stc
frstor
jne
ins
ins
outs
outs
adc
addr16
call
dec
inc
outs
ja
ins
outs
popa
fs
outs
lods
inc
mov
in
push
xor
clc
pusha
arpl
pusha
pop
scas
ins
add
aam
mov
mov
jmp
push
rcl
movntq
out
pop
sbb
or
dec
outs
fs
add
int3
dec
fcomp
and
in
outs
int
or
ins
push
cs
imul
fs
push
mov
xchg
(bad)
out
stos
xor
jb
das
cmp
inc
sbb
pusha
xchg
cmp
lahf
clc
inc
dec
es
inc
test
lea
je
lea
arpl
nop
daa
(bad)
fidiv
xchg
push
mov
inc
sbb
inc
dec
push
sahf
outs
ins
push
outs
popa
jo
push
mov
sbb
leave
sbb
in
dec
sbb
cdq
loope
cmp
sbb
leave
mov
cwde
sbb
and
movs
or
imul
gs
popa
outs
fs
fdiv
in
add
or
fwait
dec
gs
and
inc
in
pop
jb
dec
xor
leave
(bad)
ss
jne
xchg
dec
das
ret
ror
mov
arpl
fsub
jns
movs
js
mov
imul
and
add
or
scas
imul
adc
ins
and
sub
and
mov
mov
push
(bad)
and
(bad)
and
or
jl
mov
daa
sbb
sub
ret
pop
adc
cdq
adc
sub
test
sbb
sub
arpl
xor
pop
pop
mov
enter
in
imul
mov
mov
mov
cld
xchg
in
ret
sti
and
mov
enter
lods
pop
add
test
mov
sbb
and
icebp
mov
mov
(bad)
mov
(bad)
rol
retf
outs
mov
push
int3
imul
dec
xchg
mov
adc
or
mov
sbb
lods
lods
sub
push
into
call
pop
nop
rol
inc
ins
add
add
iret
mov
xchg
mov
xchg
add
mov
repnz
mov
sub
sbb
mov
pop
jbe
popa
inc
ret
sbb
dec
bound
mov
push
mov
dec
adc
movs
or
dec
outs
jbe
ja
sti
mov
outs
jo
dec
and
push
(bad)
cmp
add
popa
cmc
push
in
dec
push
ins
je
add
fnstcw
dec
inc
or
pop
dec
push
outs
mov
adc
outs
jae
xor
sahf
ins
jge
aam
jns
gs
inc
jb
jb
dec
xor
inc
cs
and
push
push
adc
or
int3
pop
add
movs
jns
mov
add
enter
add
adc
add
cmp
xlat
inc
cs
xchg
iret
out
dec
inc
shr
sub
push
fmul
pop
xlat
imul
or
in
sub
push
lock
push
mov
push
push
mov
mov
pop
loop
sbb
lea
xor
repz
fnsave
loopne
push
mov
add
and
push
(bad)
(bad)
sti
sub
xor
(bad)
mov
mov
not
test
je
hlt
(bad)
out
sti
lea
push
push
push
je
test
add
fld
popf
mov
enter
mov
enter
fisubr
rol
adc
or
or
mov
push
dec
fdiv
push
push
push
push
inc
jmp
mov
fcom
push
outs
retf
(bad)
outs
lea
(bad)
enter
pop
pop
pop
cli
imul
mov
pop
ret
add
or
clc
shl
test
push
mov
call
mov
(bad)
jne
add
mov
push
mov
test
fist
push
push
stos
cwde
mov
push
(bad)
push
int
fisttp
inc
or
or
in
div
in
sub
daa
in
sub
pop
stc
or
xchg
cld
inc
push
dec
jbe
or
les
push
mov
call
or
shr
into
iret
fistp
je
dec
mov
mov
push
and
push
mov
push
pop
fcom
push
add
mov
mov
xchg
fnclex
jge
push
fnstenv
ins
push
push
mov
push
dec
nop
sbb
xor
mov
inc
enter
cld
and
push
xor
xchg
mov
call
cwde
jnp
pop
mov
or
fmul
gs
sar
sub
jge
or
push
sbb
add
in
adc
push
lods
push
mov
push
sbb
push
mov
or
push
push
ins
mov
add
add
test
mov
push
add
add
or
cmp
mov
fmul
or
fwait
push
mov
pop
and
aam
fadd
mov
ret
mov
sbb
adc
clc
dec
pop
mov
dec
sbb
mov
add
or
aaa
push
idiv
pop
jp
mov
fdivr
xor
mov
out
fstp
push
or
nop
clc
push
dec
call
rcl
or
add
mov
pop
or
dec
push
inc
xchg
xor
inc
mov
push
inc
mov
dec
push
inc
mov
dec
push
inc
mov
push
mov
push
js
out
inc
jo
adc
cli
pop
dec
or
es
punpckhdq
aad
rcr
push
inc
mov
sahf
push
test
into
or
jle
mov
lock
xlat
jmp
push
fistp
mov
add
push
mov
fcomp
sub
lods
call
pop
movs
jmp
push
ss
je
inc
mov
loopne
test
jp
fldcw
test
mov
test
in
ins
mov
sbb
popf
mov
mov
adc
ins
xchg
call
pop
xor
inc
push
cwde
loop
fadd
and
lea
xchg
fnstcw
cmp
or
adc
sub
or
and
dec
mov
mov
dec
mov
mov
inc
inc
push
or
pop
lods
pop
movhps
fs
mov
or
ins
lods
adc
retf
mov
xor
jge
out
sbb
daa
mov
cs
push
arpl
add
and
sbb
pop
jg
mov
inc
dec
arpl
loopne
fwait
jae
fs
data16
popa
outs
or
add
mov
imul
daa
ins
xor
add
add
rol
inc
dec
fadd
sbb
xor
xor
imul
jb
scas
jae
mov
inc
imul
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
inc
pop
sti
jg
fs
data16
inc
jne
arpl
outs
xchg
or
popa
loope
sub
(bad)
(bad)
popa
jae
add
pop
add
je
push
jne
jb
inc
clc
in
jns
outs
(bad)
jb
popa
arpl
js
loopne
or
sub
or
and
cmc
sbb
mov
push
or
pop
push
inc
bound
sub
mov
xchg
(bad)
in
outs
addr16
adc
or
add
add
xor
add
sar
jb
pop
push
rol
add
sbb
push
popf
inc
mov
sub
ins
jne
ins
popa
jg
push
pop
gs
mov
inc
or
jg
add
dec
add
add
stc
enter
sidtd
add
sub
push
jne
and
add
fxch
adc
inc
add
(bad)
cwde
or
pusha
pop
sbb
pop
mov
add
add
mov
inc
(bad)
fs
sub
sbb
cli
ret
clc
pusha
cs
div
fcomp
sub
cs
jb
add
fist
inc
adc
add
lahf
das
lea
add
add
add
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
