mov
push
push
mov
push
xor
xor
push
mov
test
jne
call
mov
test
je
mov
jmp
call
mov
test
je
mov
mov
cmp
jne
test
jne
call
mov
test
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
sub
push
sar
inc
push
mov
push
push
push
push
push
push
call
mov
test
je
push
call
mov
add
test
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
add
xor
push
call
mov
pop
pop
pop
pop
ret
push
call
xor
pop
pop
pop
pop
ret
cmp
jne
test
jne
call
mov
test
je
mov
mov
test
je
mov
inc
test
jne
mov
inc
test
jne
sub
inc
mov
push
call
mov
add
test
jne
push
call
xor
pop
pop
pop
pop
ret
mov
mov
mov
mov
shr
rep
mov
push
and
rep
call
mov
pop
pop
pop
pop
ret
pop
pop
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
xor
test
push
je
cmp
je
inc
mov
or
xor
repnz
not
dec
mov
lea
test
jne
lea
push
call
mov
add
test
mov
mov
jne
push
call
add
mov
mov
test
je
mov
or
xor
repnz
not
dec
mov
inc
cmp
je
push
call
add
mov
test
jne
push
call
add
mov
or
xor
repnz
mov
not
sub
mov
mov
mov
shr
rep
mov
and
add
rep
mov
mov
mov
add
test
jne
mov
push
call
add
mov
mov
pop
pop
pop
pop
pop
ret
nop
nop
mov
mov
push
push
mov
push
push
push
push
push
push
push
push
push
push
push
call
mov
push
push
push
mov
mov
push
push
push
push
push
push
push
push
push
call
push
push
push
push
mov
call
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
push
mov
mov
push
push
push
push
push
push
push
push
push
push
push
call
mov
push
push
push
mov
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
mov
call
mov
push
mov
mov
push
push
push
push
push
push
push
push
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
push
daa
jg
add
xor
fisubr
push
dec
fmul
fwait
call
mov
enter
inc
mov
dec
dec
mov
imul
adc
inc
inc
stos
cld
cs
inc
adc
or
fwait
xchg
loop
xchg
mov
sub
xchg
xchg
out
mov
out
pop
fidivr
rcr
jecxz
inc
inc
add
icebp
in
gs
xchg
lods
xchg
cmps
ret
add
movs
je
cmps
dec
xchg
mov
addr16
mov
mov
sub
repz
cli
in
jmp
mov
and
mov
and
in
das
cmps
push
ret
add
lahf
pop
out
add
jns
mov
mov
rol
fucom
hlt
xchg
adc
pop
clc
mov
lods
test
sbb
call
and
mov
fidivr
push
adc
or
outs
or
dec
test
jb
add
inc
xor
enter
test
sub
sbb
test
sbb
push
(bad)
and
fcomp
dec
mov
cmc
enter
pop
or
nop
add
idiv
not
aad
dec
sbb
daa
cs
jp
push
cmps
push
lock
sahf
jmp
jo
pop
xchg
loop
sbb
int3
repnz
enter
add
aaa
mov
(bad)
sbb
pop
div
test
ins
push
out
xor
les
add
enter
dec
sub
inc
mov
rcl
jmp
pusha
mov
push
add
aaa
sbb
sbb
ficom
mov
and
push
pop
std
aas
pop
das
popf
aad
aas
fisttp
inc
sbb
xor
test
add
hlt
pop
cld
push
xchg
adc
out
ficom
stos
xchg
xchg
mov
movs
or
adc
sub
xchg
or
into
fldl2e
sti
sbb
inc
sbb
(bad)
cli
int3
xchg
mov
add
jb
imul
call
cmp
mov
fst
push
inc
xchg
add
pop
cs
fild
retf
xor
lds
sbb
xchg
push
sub
out
push
mov
add
pop
scas
jns
cmp
arpl
xor
xchg
add
out
fild
les
fwait
xchg
dec
aad
mov
push
or
popf
sti
js
dec
cmp
push
mov
(bad)
mov
in
jnp
setge
pop
or
dec
sub
fld
hlt
das
sub
aam
fld
add
sar
push
push
inc
lods
xor
arpl
ds
and
(bad)
push
add
outs
mov
stc
jne
fnstsw
fnstcw
ja
cmp
rcr
aaa
sub
mov
jne
aad
les
sbb
xchg
cdq
test
cmp
cs
add
mov
xor
into
cmps
call
fcom
sbb
cmp
dec
jbe
mov
fadd
add
enter
inc
imul
rcr
push
(bad)
cli
int3
ins
mov
dec
jl
mov
sbb
cwde
jb
pop
cwde
dec
arpl
daa
icebp
out
jmp
(bad)
bound
outs
cli
push
movs
or
ss
(bad)
(bad)
fnstenv
outs
stos
jle
mov
or
cmp
arpl
xchg
cdq
add
pop
loopne
fiadd
mov
out
icebp
inc
mov
adc
mov
cmp
or
lahf
(bad)
pop
add
push
adc
and
aad
loop
push
jmp
(bad)
int3
adc
jo
xchg
in
test
pop
and
add
out
int
hlt
or
nop
push
jno
jns
std
ins
sub
mov
clc
xlat
mov
js
mov
mov
int3
daa
sbb
sbb
enter
sbb
out
jmp
ret
jo
lea
scas
xor
das
nop
push
xchg
repz
into
add
xchg
hlt
fs
jns
cmp
dec
jmp
ficom
xchg
ret
icebp
cmp
xor
in
test
pop
and
inc
mov
(bad)
lock
adc
pushf
repz
in
mov
inc
mov
cmp
inc
jmp
fmulp
mov
pop
data16
inc
adc
ss
fld
mov
mov
jb
data16
shr
stos
data16
xchg
jns
mov
adc
jns
loope
xchg
rcr
mov
sbb
push
jle
lock
inc
aaa
loopne
mov
icebp
mov
fwait
xchg
mov
ja
and
test
lods
lods
cdq
retf
mov
xor
loopne
add
mov
add
cmp
ret
(bad)
mov
in
idiv
pop
mov
inc
jbe
cmp
mov
dec
add
lahf
std
daa
pop
sbb
adc
jns
in
xchg
and
pusha
and
data16
dec
leave
pop
jnp
shr
or
sbb
lods
test
adc
sahf
mov
imul
sbb
clc
jns
in
xchg
and
pop
pop
data16
jbe
cmp
pop
jnp
push
jbe
cmp
mov
push
jno
sub
sbb
mov
ror
cld
jle
jb
dec
pop
sbb
test
repz
inc
jecxz
jge
repnz
in
(bad)
pop
faddp
and
xor
adc
outs
cli
movs
pop
jns
dec
out
jl
fidivr
in
adc
data16
pop
gs
push
lea
ror
sub
xchg
pop
jmp
pop
scas
or
mov
movs
push
rsm
mov
dec
icebp
sub
mov
jne
dec
inc
add
cmp
jp
popa
cli
repnz
(bad)
inc
hlt
fs
jle
js
stos
mov
pop
fstp
loope
fcom
mov
fdiv
mov
mov
cmps
mov
daa
pop
js
ja
xchg
jns
push
mov
push
shl
sub
inc
(bad)
cmp
inc
mov
int3
ret
sbb
addr16
movs
jo
sbb
fnstcw
fs
jne
aad
jne
lea
jb
mov
mov
mov
ret
popa
jge
adc
out
adc
fnstenv
cmp
and
aam
push
xchg
in
ret
or
out
rcl
icebp
mov
and
mov
icebp
repz
retf
jl
or
jp
cmp
arpl
loope
push
mov
and
fbstp
bound
or
xor
jb
xchg
fldenv
shl
ja
ror
out
mov
mov
pop
or
inc
shl
cmps
jno
push
lock
mov
enter
call
jb
mov
push
xchg
add
js
push
mov
push
push
xchg
mov
dec
xchg
in
push
fs
sbb
not
and
push
inc
ins
repnz
out
mov
pop
sahf
mov
call
jns
push
mov
mov
cld
inc
push
jno
mov
outs
outs
sar
sbb
js
call
pop
and
or
test
push
xchg
add
hlt
clc
jp
mov
cdq
pop
mov
xor
ret
popa
sub
push
es
iret
test
test
jecxz
int
(bad)
and
and
add
retf
cld
and
das
in
out
xchg
movs
(bad)
repnz
es
fsubr
in
pop
arpl
bound
mov
ret
call
cmp
sar
pop
mov
(bad)
cmp
or
cs
(bad)
push
mov
mov
out
lahf
popf
pop
cmc
jle
js
test
(bad)
ins
mov
int3
fcmovnb
jp
jmp
call
test
nop
ja
pop
dec
clc
stos
mov
and
icebp
div
in
xor
mov
shl
add
lds
mov
mov
out
(bad)
mov
cmp
cdq
fsub
sbb
outs
out
mov
pop
addr16
pusha
mov
jp
sbb
data16
jbe
mov
je
cmps
ins
mov
in
outs
stos
adc
not
test
dec
mov
je
cmp
cli
ja
cdq
retf
mov
push
mov
data16
and
push
fimul
outs
add
jno
cmc
jp
cmp
arpl
loope
in
jge
pop
shr
mov
gs
movs
(bad)
mov
xor
movs
and
sbb
and
mov
pop
xchg
lock
lds
push
aas
shl
retf
jo
outs
push
in
fdivrp
push
or
shr
and
lods
cmp
dec
cwde
in
adc
inc
push
push
movs
arpl
push
es
jp
cmp
cmp
mov
add
push
shl
mov
call
inc
xor
push
jge
push
ins
stos
dec
in
mov
xor
fdiv
fs
and
outs
xchg
call
mov
and
(bad)
enterw
push
scas
fld
inc
hlt
cmp
arpl
jb
scas
jnp
pop
loopne
or
std
fistp
pop
mov
or
(bad)
push
scas
add
mov
sbb
jp
popa
cld
sbb
add
arpl
mov
cmp
shr
or
imul
mov
lea
out
or
fidivr
nop
lods
test
push
pop
dec
xchg
inc
loopne
add
xor
call
inc
scas
test
cdq
mov
arpl
lea
retf
xor
adc
push
mov
mov
mov
call
hlt
mov
pop
aam
adc
dec
push
dec
adc
mov
mov
sar
add
mov
scas
xchg
test
mov
xor
pop
xchg
pop
loope
mov
outs
dec
in
enter
in
jge
mov
mov
mov
aas
sbb
or
xor
jb
xchg
cmps
stos
imul
pop
cld
repz
sub
data16
and
shl
retf
jns
in
outs
sbb
inc
arpl
sbb
jne
mov
aad
stos
aaa
shl
add
test
cdq
fs
repnz
iret
mov
and
in
int3
repnz
mov
jecxz
leave
dec
js
movs
inc
je
xchg
lods
or
arpl
xchg
xchg
cmps
adc
mov
aaa
shr
or
rol
sub
cmp
sbb
cmp
dec
push
xlat
ja
cmp
test
jae
jmp
repnz
cmc
mov
and
fwait
push
rcl
push
add
mov
cmp
push
mul
or
pop
(bad)
adc
jmp
hlt
cmp
or
and
fwait
mov
push
mov
pop
mov
jp
movs
(bad)
lods
popa
shr
int
cmp
fisub
and
inc
sbb
repnz
pop
xor
adc
dec
sbb
(bad)
gs
es
mov
cwde
sahf
inc
jno
(bad)
outs
push
or
inc
bound
xchg
je
or
push
jmp
mov
ffree
into
sub
jl
movs
push
popf
sti
sub
push
jb
xor
xor
ficom
jg
in
or
scas
sub
pop
cli
add
in
repz
jo
fist
pop
pop
out
shl
push
inc
and
shl
dec
xchg
adc
fisub
push
imul
in
fcom
mov
and
shl
sub
stc
xor
jecxz
sbb
hlt
ins
call
add
add
and
dec
aam
push
addr16
or
imul
jns
pop
test
and
stos
cmc
in
(bad)
cmp
mov
mov
xor
fild
xchg
push
ins
movs
fs
mov
adc
cmp
cwde
stc
jl
fmul
dec
clc
popa
popa
rol
in
(bad)
cmp
xor
inc
jle
xchg
das
mov
mov
inc
ss
pop
ret
mov
test
loope
fmul
bound
mov
mov
pop
sbb
cmp
mov
sbb
add
repnz
sbb
test
inc
lods
fmulp
inc
pop
ret
mov
xchg
sti
jge
shl
xchg
test
out
rcr
imul
mov
push
mov
test
and
movs
mov
into
repnz
loopne
fistp
xchg
inc
lds
adc
and
mov
les
(bad)
imul
lea
or
mov
popa
cmp
dec
and
dec
je
adc
gs
push
and
adc
mov
jecxz
imul
mov
push
cli
jmp
int
xchg
mov
cmp
push
push
and
ss
mov
xchg
dec
cmp
dec
xchg
cmp
inc
fistp
scas
pusha
aad
cmp
or
and
cmp
(bad)
cld
pop
in
and
repz
stc
pop
test
popf
bound
jecxz
pop
mov
loop
dec
push
mov
sti
inc
gs
aaa
mov
inc
sti
mov
ret
dec
sar
cmp
sbb
int
(bad)
jnp
push
es
clc
push
mov
rcl
imul
or
dec
xor
pop
cwde
mov
popf
jo
xchg
mov
pminub
push
jmp
sti
xchg
push
add
outs
ret
mov
dec
sub
inc
xchg
retf
imul
dec
push
(bad)
(bad)
cwde
loopne
in
sub
add
out
push
add
adc
loop
xchg
push
or
push
loope
inc
pop
fsub
popa
iret
mov
mov
sti
psrlw
imul
call
pop
inc
sbb
pop
xchg
jmp
ret
mov
ret
ret
xchg
retf
pop
pop
nop
fisubr
ins
mov
add
xor
stos
enter
cmps
fimul
retf
imul
shr
xchg
retf
imul
adc
repz
dec
mov
push
rol
ret
loopne
sbb
call
les
cmc
test
inc
not
rcr
inc
sbb
int3
repnz
xor
addr16
jmp
repnz
cmp
cmp
inc
fs
idiv
ret
test
popa
mov
in
or
(bad)
and
mov
in
cwde
lahf
pop
dec
mul
fdivrp
fsubr
lahf
xchg
test
push
(bad)
call
jg
in
gs
clc
(bad)
arpl
in
imul
hlt
xchg
xchg
dec
in
rcr
xor
fld
mov
outs
push
cmps
cld
lahf
pop
sub
(bad)
pop
xchg
lock
mov
daa
cmp
aam
cld
sub
xchg
inc
pop
push
test
inc
lods
mov
mov
mov
mov
vandnps
mov
inc
dec
inc
and
mov
stos
inc
bnd
mov
jno
push
les
lock
jb
pop
cmp
jle
inc
hlt
(bad)
outs
call
stc
mov
popa
ins
inc
shl
lahf
out
scas
outs
mov
out
jg
loopne
out
xor
loope
in
lahf
out
xchg
in
lahf
out
shr
out
hlt
(bad)
xchg
add
jg
lahf
out
mov
loop
mov
lahf
out
inc
enter
xchg
fisttp
in
lahf
out
enter
out
mov
xchg
lahf
out
daa
loopne
lahf
out
imul
in
jmp
out
sbb
jns
out
call
and
je
retf
out
push
cmps
sbb
out
mov
test
adc
ds
out
dec
cmp
lahf
out
cmp
mov
out
cmps
adc
out
popa
cmp
lahf
out
les
out
out
scas
ret
out
ins
out
cli
lahf
out
xchg
push
push
out
jmp
xchg
jmp
out
dec
and
lahf
out
clc
pusha
es
out
es
lahf
out
jg
neg
sbb
repz
out
push
mov
ins
push
adc
xchg
jecxz
retf
push
scas
fs
push
lods
imul
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
inc
add
mov
rol
add
pusha
cmp
pusha
mov
mov
nop
pusha
add
mov
(bad)
(bad)
inc
mov
mov
jmp
mov
ror
sar
nop
rol
pusha
mov
pusha
add
pusha
dec
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
push
push
mov
call
push
push
mov
mov
mov
mov
call
push
push
mov
mov
mov
call
push
mov
mov
mov
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
push
call
mov
add
test
jne
push
call
add
lea
mov
cmp
mov
mov
jae
mov
mov
mov
mov
add
add
cmp
jb
lea
push
call
cmp
je
mov
test
je
mov
lea
cmp
mov
lea
jl
mov
mov
mov
cmp
jge
mov
push
call
add
test
je
mov
mov
add
mov
lea
cmp
jae
mov
mov
mov
mov
add
add
cmp
jb
mov
mov
add
cmp
jl
jmp
mov
mov
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
mov
mov
lea
mov
mov
mov
inc
inc
add
cmp
jl
mov
xor
mov
mov
lea
cmp
jne
test
mov
jne
mov
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
mov
or
jmp
cmp
jne
mov
or
jmp
mov
or
jmp
mov
or
mov
inc
cmp
jl
mov
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
mov
call
test
push
add
test
jne
je
sar
mov
mov
mov
inc
xor
pop
push
pop
mov
mov
inc
inc
mov
add
inc
inc
push
xor
push
mov
lods
inc
test
jne
mov
pop
dec
cmp
je
pop
inc
loop
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
call
test
mov
jne
ret
call
test
jne
mov
push
call
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
xor
push
test
push
jne
push
call
mov
test
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
mov
mov
mov
push
push
push
push
call
pop
pop
pop
ret
pop
pop
xor
pop
ret
nop
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
test
jne
pop
pop
pop
ret
push
push
call
push
call
mov
pop
mov
pop
pop
ret
int3
int3
int3
inc
rep
push
stc
cdq
mov
sub
daa
pop
(bad)
mov
add
inc
add
add
and
add
mov
call
add
add
pusha
mov
ror
nop
rcl
int3
sub
push
push
push
push
push
call
mov
mov
cmp
jne
mov
lea
lea
push
push
push
push
push
call
mov
mov
add
lea
push
call
mov
add
test
jne
push
call
add
mov
lea
push
lea
lea
push
push
push
push
call
mov
add
dec
mov
pop
mov
pop
add
ret
nop
nop
mov
sub
mov
push
push
push
push
xor
cmp
je
add
inc
cmp
jb
cmp
jne
mov
cmp
je
test
jne
cmp
je
cmp
je
lea
push
push
push
call
test
jne
mov
mov
lea
rep
movs
movs
lea
or
xor
lea
repnz
not
cmp
jbe
lea
or
repnz
not
dec
push
mov
lea
sub
push
add
push
call
add
mov
mov
lea
xor
rep
movs
or
mov
repnz
not
sub
lea
mov
mov
or
mov
repnz
mov
dec
shr
rep
mov
lea
and
push
rep
mov
or
repnz
not
sub
push
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
lea
and
rep
mov
or
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
lea
and
push
rep
call
add
pop
pop
pop
pop
add
ret
mov
test
je
mov
cmp
jne
push
call
mov
mov
lea
push
push
mov
or
xor
repnz
not
dec
push
push
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
add
cmp
jbe
test
jne
mov
cmp
jbe
mov
lea
add
cmp
ja
xor
mov
mov
mul
seto
neg
or
push
call
mov
add
test
jne
pop
mov
pop
ret
mov
mov
add
add
push
push
push
call
mov
push
call
adc
push
push
mov
sub
dec
je
call
pop
pop
mov
pop
ret
pusha
or
add
rol
pusha
mov
add
(bad)
(bad)
inc
dec
add
nop
add
dec
sar
mov
rol
add
pusha
dec
mov
inc
les
mov
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
push
push
push
call
mov
mov
add
cmp
mov
jne
xor
pop
pop
pop
pop
add
ret
xor
cmp
jne
call
xor
pop
pop
pop
pop
add
ret
xor
mov
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
mov
xor
mov
rep
stos
cmp
jbe
mov
test
je
lea
mov
test
je
xor
and
mov
cmp
ja
mov
or
mov
inc
cmp
jbe
mov
add
test
jne
mov
mov
or
mov
inc
cmp
jb
push
mov
call
add
mov
jmp
mov
mov
xor
xor
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
je
call
xor
pop
pop
pop
pop
add
ret
or
pop
pop
pop
pop
add
ret
mov
xor
mov
lea
rep
stos
xor
shl
lea
mov
mov
test
je
mov
test
je
xor
and
mov
cmp
ja
mov
or
inc
cmp
jbe
mov
add
test
jne
inc
add
cmp
jb
mov
push
mov
call
mov
mov
mov
lea
add
mov
mov
mov
pop
pop
mov
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
lea
add
push
add
push
call
test
jl
sar
inc
(bad)
dec
rol
call
nop
rol
or
add
add
jmp
pusha
nop
add
mov
mov
pusha
pusha
mov
inc
mov
add
add
mov
mov
pop
mov
inc
mov
pop
push
lods
push
call
test
jne
mov
mov
push
mov
call
mov
push
mov
mov
push
push
mov
call
push
call
mov
mov
call
lea
test
jne
add
mov
xor
mov
pop
add
add
nop
add
or
add
nop
pusha
mov
pusha
add
add
ror
add
and
mov
mov
add
add
int3
int3
int3
mov
push
mov
push
mov
xor
push
mov
mov
mov
or
add
rep
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
ret
pop
mov
mov
dec
dec
jne
mov
dec
mov
loop
inc
ret
push
mov
mov
mov
pop
mov
mov
mov
push
mov
inc
mov
pop
dec
dec
dec
jne
pop
pop
mov
push
mov
push
test
jne
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
call
add
ret
nop
nop
nop
nop
nop
mov
push
mov
sub
push
mov
push
push
xor
push
lea
mov
xor
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
mov
push
mov
mov
mov
mov
mov
mov
call
cmp
mov
jl
mov
xor
cmp
je
lea
mov
cmp
je
cmp
je
mov
cmp
jne
jmp
mov
mov
cmp
je
inc
mov
cmp
jne
mov
test
je
xor
mov
mov
mul
seto
neg
or
push
call
add
mov
test
je
mov
lea
push
push
push
call
mov
xor
mov
mul
seto
neg
or
push
call
mov
add
mov
test
jne
mov
lock
jne
clc
push
add
sub
add
add
add
add
push
push
push
mov
call
add
test
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
test
je
lea
push
push
push
lea
push
or
call
test
jl
mov
mov
xor
test
jbe
mov
cmp
je
inc
cmp
jb
mov
cmp
jne
mov
mov
inc
mov
mov
mov
sub
test
jne
mov
mov
test
je
mov
lea
push
push
add
push
lea
add
push
call
mov
test
jl
mov
lea
push
push
push
lea
push
mov
call
mov
test
jl
mov
test
je
lea
push
push
push
lea
push
or
call
mov
test
jl
mov
test
je
lea
push
push
mov
dec
mov
mov
mov
and
mov
xor
mov
dec
dec
and
inc
mov
lods
cmp
jne
push
dec
dec
mov
jmp
push
mov
lea
push
call
test
jl
push
push
push
lea
push
mov
call
test
jl
lea
push
push
push
lea
push
or
call
test
jl
mov
mov
neg
sbb
add
and
shr
add
cmp
ja
mov
mov
call
mov
test
jl
mov
mov
lea
push
lea
push
lea
push
call
xor
add
cmp
jbe
mov
add
mov
add
add
add
add
inc
add
cmp
jb
mov
push
lea
add
push
call
mov
test
jl
add
mov
add
mov
jmp
mov
push
push
lea
call
add
mov
mov
push
call
mov
push
call
mov
add
test
je
mov
mov
mov
mov
test
jne
test
jne
mov
push
call
add
push
call
mov
add
test
jne
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
je
dec
jne
mov
cmp
je
cmp
je
xor
pop
ret
mov
movzx
push
push
call
mov
pop
ret
int3
int3
int3
int3
mov
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
jbe
cmp
jb
mov
cmp
je
jmp
test
jne
mov
and
cmp
jb
mov
mov
mov
mov
and
sub
mov
sub
sar
lea
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
mov
call
test
je
call
mov
test
jne
xor
pop
mov
pop
ret
push
push
lea
lea
push
mov
pop
sub
jne
dec
push
dec
pop
dec
inc
mov
inc
loop
mov
pop
pop
ret
sbb
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
push
call
mov
mov
test
je
mov
cmp
je
mov
mov
mov
push
dec
jne
inc
or
ror
push
test
je
mov
mov
mov
lea
sub
cmp
je
mov
mov
mov
mov
push
call
mov
test
je
mov
mov
inc
add
mov
cmp
jb
pop
pop
pop
mov
pop
ret
pop
pop
xor
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jne
call
mov
push
call
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
mov
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
push
call
add
test
je
mov
ret
xor
ret
mov
test
je
mov
mov
mov
mov
sub
mov
mov
mov
inc
lods
inc
dec
jne
dec
mov
mov
jne
cmp
jae
push
sub
add
pusha
add
mov
rol
add
pusha
add
sar
dec
add
add
add
and
call
rol
mov
inc
add
add
mov
mov
lea
mov
mov
mov
push
mov
push
mov
push
push
call
pop
test
jge
mov
mov
mov
mov
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
mov
test
je
add
jne
mov
mov
push
call
mov
test
je
add
jne
mov
push
pop
push
mov
pop
inc
dec
inc
inc
inc
stos
push
pop
mov
mov
add
add
loop
inc
call
test
jmp
mov
mov
push
call
lea
mov
nop
mov
test
je
add
jne
mov
mov
push
call
add
sub
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
xor
sub
sar
mov
lea
mov
mov
add
mov
mov
mov
mov
cmp
jne
mov
inc
cmp
mov
jne
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
push
mov
mov
cmp
je
mov
lea
mov
sub
sub
sar
shl
add
cmp
jae
mov
cmp
jl
cmp
jbe
push
push
push
call
add
test
jne
mov
mov
add
add
cmp
jb
mov
mov
lea
cmp
jae
mov
cmp
jl
cmp
jbe
push
push
push
call
add
test
jne
mov
mov
add
add
cmp
jb
mov
mov
cmp
mov
je
jmp
mov
mov
mov
sub
mov
mov
pop
pop
pop
pop
pop
ret
mov
mov
mov
sub
mov
mov
pop
pop
pop
pop
pop
ret
mov
or
cmp
je
mov
test
jne
mov
cmp
je
jmp
mov
mov
mov
mov
sub
mov
sub
sar
shl
add
xor
cmp
jne
cmp
jge
mov
add
inc
cmp
je
mov
push
shl
push
push
push
mov
call
cmp
jne
mov
mov
xor
test
mov
jle
lea
lea
mov
mov
mov
mov
mov
add
add
dec
jne
mov
lea
mov
cmp
jae
cmp
je
add
cmp
jb
cmp
sbb
and
mov
mov
mov
mov
sub
mov
mov
sub
lea
mov
mov
lea
pop
pop
pop
pop
pop
ret
call
test
je
mov
mov
lea
mov
mov
mov
sub
and
mov
mov
sub
mov
lea
pop
pop
pop
pop
pop
ret
pop
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
call
push
push
call
add
push
push
call
add
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
push
push
cmp
ja
je
mov
dec
je
dec
je
sub
jne
mov
lea
push
push
call
lea
push
push
mov
call
push
lea
push
lea
push
call
push
lea
push
push
call
jmp
push
call
xor
pop
pop
mov
pop
ret
push
mov
call
mov
mov
call
xor
pop
pop
mov
pop
ret
mov
push
call
mov
mov
push
call
lea
push
push
call
xor
pop
pop
mov
pop
ret
cmp
je
cmp
je
mov
mov
push
push
push
mov
push
call
pop
pop
mov
pop
ret
mov
shr
mov
add
cmp
jne
mov
push
push
push
push
call
add
xor
pop
pop
mov
pop
ret
cmp
jne
mov
push
push
push
push
call
xor
pop
pop
mov
pop
ret
mov
movzx
sub
je
dec
je
mov
mov
push
push
push
push
call
pop
pop
mov
pop
ret
mov
push
call
xor
pop
pop
mov
pop
ret
mov
mov
push
push
push
push
push
call
pop
xor
pop
mov
pop
ret
int3
int3
mov
push
mov
push
mov
call
test
mov
sub
xor
mov
dec
push
inc
mov
dec
jne
inc
or
je
call
mov
pop
pop
add
ret
int3
int3
int3
push
mov
push
push
push
mov
push
mov
add
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
call
test
jne
push
call
add
mov
call
call
call
mov
call
mov
test
je
mov
test
jne
push
call
add
call
call
call
mov
mov
cmp
jne
inc
mov
mov
cmp
je
test
je
and
push
call
add
test
je
inc
mov
jmp
cmp
jne
inc
mov
mov
test
je
cmp
ja
inc
mov
jmp
mov
lea
push
call
test
je
mov
and
jmp
mov
push
push
push
push
call
push
call
mov
push
call
jmp
mov
mov
mov
mov
push
push
call
add
ret
mov
mov
push
call
add
mov
mov
mov
pop
pop
pop
mov
pop
ret
cmp
jbe
inc
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
call
add
test
je
mov
test
je
cmp
jne
mov
mov
pop
pop
pop
ret
cmp
jne
or
pop
pop
pop
ret
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
sub
lea
mov
add
dec
jne
mov
mov
cmp
mov
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
push
push
call
add
mov
mov
or
pop
pop
pop
ret
push
mov
call
add
mov
or
pop
pop
pop
ret
mov
push
call
pop
pop
pop
ret
nop
nop
mov
push
mov
mov
push
push
mov
push
xor
xor
mov
test
je
cmp
je
lea
mov
add
add
inc
inc
mov
nop
add
adc
mov
add
add
add
add
add
mov
and
ror
nop
mov
add
add
in
(bad)
(bad)
mov
pop
pop
mov
push
push
mov
call
dec
adc
xor
mov
cmp
ja
movzx
jmp
xor
jmp
mov
jmp
mov
jmp
mov
inc
mov
shl
add
or
cmp
jb
cmp
je
mov
mov
push
mov
push
push
call
add
mov
push
inc
mov
pop
push
pop
push
inc
dec
add
lods
pop
mov
mov
mov
add
add
add
movzx
inc
mov
push
mov
lea
pop
mov
dec
mov
add
test
jne
add
ror
shl
nop
mov
add
sar
pusha
ror
or
mov
ror
nop
mov
add
add
add
inc
push
add
add
xor
pop
pop
pop
pop
ret
mov
pop
pop
pop
pop
ret
pop
pop
mov
pop
pop
ret
lea
pop
mov
mov
mov
mov
mov
add
add
add
add
add
add
add
add
add
add
add
int3
int3
push
push
mov
test
je
lea
lea
push
push
push
call
add
test
je
mov
push
mov
push
push
call
add
pop
pop
ret
mov
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
xor
mov
mov
mov
mov
mov
mov
mov
inc
mov
dec
dec
and
mov
inc
add
add
mov
pop
mov
add
pop
dec
mov
add
mov
mov
test
jne
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
mov
cmp
je
test
jne
cmp
jne
push
call
mov
add
test
je
call
push
call
add
ret
nop
nop
nop
push
mov
sub
push
mov
push
mov
push
push
call
push
push
call
push
push
call
call
mov
push
push
push
push
call
push
push
push
push
call
push
mov
call
mov
push
push
call
add
test
jne
pop
pop
mov
pop
ret
mov
push
push
push
lea
push
call
test
je
mov
push
mov
lea
lea
push
call
lea
push
call
push
push
push
lea
push
call
test
jne
pop
call
mov
pop
pop
mov
pop
ret
int3
int3
mov
push
mov
push
push
mov
xor
test
je
mov
test
je
mov
mov
movsx
add
cmp
ja
movzx
in
sub
push
mov
push
mov
test
jne
and
or
jmp
mov
or
jmp
mov
or
push
mov
call
add
mov
xor
mov
pop
ret
mov
call
nop
pusha
pusha
add
mov
pusha
shl
nop
pusha
add
cmp
add
pusha
add
(bad)
jmp
add
add
add
nop
or
rol
pusha
add
mov
or
add
pusha
mov
mov
pop
pop
pop
ret
pop
mov
pop
pop
ret
mov
ins
mov
mov
mov
mov
mov
add
add
add
add
add
add
add
add
add
add
add
int3
mov
push
push
mov
cmp
push
jne
push
call
push
call
mov
mov
test
mov
mov
jne
mov
test
je
mov
sub
cmp
jb
mov
test
je
call
mov
sub
cmp
jae
push
push
call
add
push
push
call
add
test
jne
push
mov
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
mov
push
mov
cmp
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
lea
cmp
jae
cmp
je
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
test
jne
mov
test
je
xor
mov
mov
and
jmp
xor
test
jne
ret
mov
ret
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
mov
test
mov
mov
mov
mov
je
mov
add
mov
cmp
jne
mov
inc
cmp
je
test
je
and
test
je
mov
inc
test
mov
je
mov
mov
inc
inc
mov
inc
test
mov
je
mov
mov
inc
mov
inc
cmp
jne
mov
inc
test
mov
je
mov
inc
cmp
jne
inc
jmp
mov
inc
test
mov
je
mov
mov
inc
mov
inc
mov
mov
and
test
je
mov
inc
test
mov
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
test
je
mov
add
mov
mov
inc
mov
xor
cmp
mov
jne
mov
inc
inc
cmp
je
cmp
jne
test
jne
test
je
cmp
jne
inc
jmp
xor
mov
xor
test
sete
mov
shr
mov
dec
test
je
inc
test
je
mov
inc
mov
inc
dec
mov
jne
mov
test
je
test
jne
cmp
je
cmp
je
test
je
test
je
mov
and
test
je
mov
mov
inc
inc
inc
mov
mov
mov
mov
inc
inc
mov
inc
jmp
and
test
je
mov
inc
inc
mov
inc
inc
jmp
test
je
mov
inc
mov
mov
inc
mov
mov
jmp
test
je
mov
mov
pop
pop
pop
mov
pop
inc
mov
ret
nop
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
ret
nop
nop
nop
mov
add
cmp
ja
xor
mov
jmp
mov
ret
mov
ret
mov
ret
mov
ret
xor
ret
fisttp
add
dec
pusha
add
dec
pusha
add
dec
pusha
add
dec
pusha
add
add
add
add
add
add
add
add
add
add
nop
push
mov
xor
mov
rep
stos
xor
pop
mov
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmp
jne
push
mov
call
call
jmp
pop
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmp
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
cmp
push
ja
test
jne
mov
mov
cmp
ja
push
call
add
jmp
xor
test
jne
test
je
push
call
add
test
jne
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
lea
mov
and
cmp
ja
mov
shr
push
call
add
test
jne
mov
push
push
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
cmp
push
jne
mov
jmp
mov
push
push
push
call
mov
test
je
mov
push
push
push
push
call
mov
test
je
push
push
push
push
call
test
je
cmp
jne
mov
test
jne
mov
mov
test
jne
mov
jmp
mov
mov
mov
mov
mov
mov
lea
lea
lea
mov
mov
mov
mov
xor
mov
xor
cmp
setge
dec
add
and
dec
inc
mov
mov
cmp
jl
mov
xor
mov
rep
mov
add
cmp
jae
mov
mov
lea
mov
mov
mov
mov
add
add
cmp
jb
mov
pop
pop
pop
ret
push
push
push
call
cmp
je
mov
push
push
push
call
pop
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
call
cmp
jne
mov
mov
cmp
je
mov
mov
push
push
mov
mov
mov
mov
mov
push
call
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
push
push
push
push
mov
cmp
je
xor
lea
mov
cmp
jne
mov
push
add
push
push
call
test
je
mov
mov
dec
mov
mov
test
je
cmp
jbe
mov
mov
inc
dec
mov
je
sub
sub
test
jge
mov
mov
test
je
cmp
jne
mov
lea
cmp
jne
inc
add
cmp
jl
cmp
jne
push
call
add
cmp
je
mov
test
jg
pop
pop
pop
pop
ret
nop
nop
nop
mov
push
push
push
push
mov
mov
mov
cmp
mov
mov
lea
jb
lea
mov
cmp
jae
mov
mov
add
sub
mov
mov
jmp
lea
mov
mov
lea
lea
mov
lea
shl
sub
pop
pop
pop
pop
ret
add
cmp
je
mov
lea
cmp
mov
jae
mov
test
jne
cmp
lea
mov
jne
inc
inc
cmp
je
cmp
jae
mov
cmp
jne
mov
mov
mov
jmp
sub
cmp
jb
mov
mov
jmp
and
add
lea
lea
cmp
jb
jmp
lea
lea
cmp
jae
sub
mov
mov
jmp
lea
mov
jmp
lea
mov
cmp
jae
lea
lea
cmp
jae
mov
test
jne
cmp
lea
mov
jne
inc
inc
cmp
je
cmp
jae
sub
cmp
jb
mov
jmp
and
add
cmp
jb
xor
pop
pop
pop
pop
ret
lea
lea
cmp
jae
sub
mov
mov
jmp
mov
mov
lea
mov
lea
lea
shl
sub
pop
pop
pop
pop
ret
pop
pop
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
