add
mov
pop
xor
adc
xor
xor
fsub
out
xchg
ja
test
pop
cdq
rcr
and
mov
pop
xor
xchg
push
addr16
cmp
in
loopne
mov
cwde
int3
aas
or
pushf
cmp
xor
lods
mov
das
mov
dec
aam
pop
inc
mov
dec
sub
push
call
mov
inc
push
xor
dec
or
xor
sub
jae
inc
push
(bad)
push
lods
xor
inc
ins
cmp
rep
movs
inc
dec
mov
xor
dec
data16
in
mov
cmps
cli
pop
mov
addr16
pop
aaa
popa
mov
mov
jbe
xor
out
std
jecxz
idiv
xor
std
out
and
xchg
inc
imul
cmp
inc
loopne
jecxz
pop
xor
adc
les
xor
repz
push
js
xor
in
repz
and
sbb
repz
add
xor
xchg
push
pop
js
xor
lea
repz
test
repz
js
xor
out
int3
xor
sbb
xor
outs
js
sbb
mov
cwde
inc
loopne
mov
out
dec
(bad)
pop
mov
call
in
nop
cmp
ret
pop
mov
call
inc
cs
dec
mov
xor
mov
cwde
inc
pushf
imul
pop
hlt
bound
pop
xor
adc
mov
jl
cmp
jg
and
mov
fiadd
outs
mov
inc
pusha
add
xor
hlt
adc
inc
loopne
dec
call
pop
xor
cmp
cmp
mov
pop
mov
mov
pop
outs
cmp
inc
mov
pop
xchg
fbstp
mov
pop
xor
not
or
add
xor
hlt
in
sbb
xor
dec
mov
jnp
pop
xor
and
jae
call
pop
xor
repz
dec
mov
pop
pushf
jns
imul
mov
mov
pop
pop
inc
js
xor
cwde
fbstp
push
add
js
xor
mov
pop
xor
popf
or
and
mov
cs
out
cmc
jecxz
(bad)
push
stos
xor
fcom
mov
pop
data16
pop
pushf
fild
dec
fs
int
mov
cs
jnp
ss
xor
fucomp
xor
fucom
xor
sahf
fadd
mov
cs
mov
out
xor
adc
adc
out
mov
inc
pop
mov
mov
pop
iret
adc
pop
and
jmp
bound
pop
retf
mov
xchg
lock
out
mov
inc
pop
mov
mov
fadd
inc
pop
retf
in
std
pop
mov
daa
cmp
xor
out
and
mov
inc
loopne
addr16
sbb
addr16
push
add
xor
test
imul
and
inc
test
add
inc
loope
out
jp
icebp
out
sub
loopne
repz
xor
std
pop
mov
daa
cmp
xor
out
mov
mov
hlt
jns
dec
hlt
and
inc
ss
in
in
pop
mov
bound
es
sbb
mov
inc
loope
out
cmp
xchg
mov
inc
loope
nop
sbb
xchg
mov
inc
loope
out
cmp
xchg
jmp
dec
fnstenv
cwde
mov
loopne
mov
loope
pop
enter
out
cli
movs
in
xchg
(bad)
ss
inc
aas
mov
xor
add
addr16
idiv
mov
movs
loopne
fimul
(bad)
out
jns
fldenv
cmps
ss
out
push
fst
lods
sub
data16
fild
jp
out
std
out
and
outs
jle
sub
inc
push
cmp
aas
xor
dec
mov
fwait
mov
test
mov
pop
retf
out
std
jecxz
xchg
push
cmp
test
pop
xor
lds
mov
faddp
lea
xor
inc
add
lods
xor
push
jp
icebp
push
xor
add
add
iret
out
jp
icebp
out
in
jecxz
bound
jno
xor
mov
(bad)
pop
xor
jp
out
std
jmp
and
cmp
fsub
pop
dec
arpl
dec
mov
jae
pop
iret
rcr
jmp
out
jecxz
inc
mov
fbstp
xor
fdivr
pop
cmp
sbb
out
inc
ss
adc
lods
push
or
clc
hlt
and
fcomp
mov
pop
retf
out
std
jecxz
cmps
out
push
sub
pusha
xor
xchg
inc
outs
pop
jae
inc
mov
pop
xor
mov
mov
fistp
int3
out
std
jecxz
cmp
jno
out
neg
call
jo
out
idiv
call
cmp
inc
call
mov
scas
jnp
mov
in
in
mov
mov
jp
addr16
sahf
pushf
addr16
jne
cmova
xor
dec
int3
adc
test
lahf
mov
sbb
addr16
ins
cmp
inc
lock
cli
pusha
xor
xchg
inc
outs
pop
ror
sahf
les
pop
xor
test
repz
sbb
repz
inc
dec
cmp
(bad)
sbb
adc
mov
mov
xor
int3
xor
mul
mov
inc
lock
cli
mov
pushf
dec
xor
push
fdiv
pop
out
xor
xor
mov
xchg
hlt
in
sbb
or
mov
dec
pop
xor
xor
xor
mov
mov
mov
repz
std
repz
dec
in
jno
rcr
pop
addr16
mov
lock
js
call
and
repz
sbb
pop
in
jno
xor
int3
push
xor
int3
jae
pop
xor
xchg
lock
je
addr16
clc
mov
push
js
call
and
repz
or
nop
pop
xchg
jbe
xor
gs
dec
loope
cwde
loope
repz
inc
cli
movs
in
xchg
(bad)
fisttp
add
xor
aad
push
stos
sahf
shl
fbstp
sbb
addr16
mov
jmp
pusha
xchg
lock
fcomip
and
sbb
repz
inc
dec
cmp
popf
fcomip
and
xchg
(bad)
mov
addr16
loope
aaa
inc
push
pop
xor
push
pop
push
dec
pop
xor
cmp
dec
fist
int3
in
adc
cwde
inc
pop
xor
mov
push
cmps
js
xor
or
jmp
pusha
xchg
lock
mov
pop
inc
dec
das
out
std
jecxz
sbb
jecxz
pop
xor
(bad)
iret
addr16
(bad)
addr16
pop
mov
push
cmp
rcr
(bad)
pop
xor
xor
sbb
std
push
xor
out
std
idiv
adc
fbstp
clc
mov
pop
xor
pusha
aaa
xor
and
xor
mov
cwde
inc
loopne
movs
cmp
addr16
pop
cmps
js
xor
mov
pop
ret
aaa
xor
int3
jae
pop
xor
xchg
jbe
mov
inc
push
xor
les
loopne
movs
xor
loopne
(bad)
js
jno
call
mov
addr16
fild
xor
pop
cmp
imul
pusha
push
jmp
jnp
push
cmps
js
xor
adc
cmps
js
xor
xor
int3
xor
pop
(bad)
pop
std
out
in
loopne
cwde
cmp
repz
cli
pop
xor
pusha
call
int3
cdq
inc
xchg
lock
inc
cli
movs
in
xchg
(bad)
ss
jge
pop
ret
sahf
les
loop
xor
inc
call
mov
rcr
pop
rcr
pop
addr16
pop
fucomi
adc
xor
jle
xor
push
mov
jbe
xor
mov
inc
pop
mov
mov
fcomp
xor
loopne
imul
adc
mov
adc
rcr
mov
shr
shl
pop
xor
push
es
addr16
fsub
pop
cmps
mov
pop
fisttp
dec
mov
aam
jbe
push
ins
cmc
loop
loopne
cwde
mov
pop
fistp
xor
cmp
xchg
mov
inc
loope
aaa
push
ror
cwde
inc
inc
cmp
mov
(bad)
mov
les
mov
xor
inc
loopne
jmp
fild
inc
loopne
in
adc
cmp
repz
cli
pop
xor
jno
lds
mov
call
xor
loopne
(bad)
js
jno
call
push
mov
adc
xchg
jmp
pop
xchg
mov
inc
loope
out
jnp
mov
inc
loope
aaa
sar
mov
inc
loope
aaa
xor
int3
jae
pop
xor
xchg
jbe
mov
cmp
pop
sbb
addr16
les
loopne
movs
mov
mov
cwde
inc
loopne
(bad)
js
jno
call
addr16
push
mov
pop
int3
sar
int
push
jnp
cwde
inc
pushf
imul
fdiv
out
cdq
inc
xchg
mov
inc
loope
les
jno
cmp
or
mov
loopne
cwde
call
pop
arpl
and
sbb
pop
iret
outs
js
mov
mov
mov
xor
sub
addr16
loope
addr16
jno
mov
mov
mov
inc
loope
aaa
push
sbb
cwde
inc
pushf
imul
fcom
add
xchg
jmp
pusha
xchg
lock
inc
loopne
cwde
inc
pop
xor
les
addr16
loopne
cwde
clc
dec
mov
cwde
call
pop
fist
adc
xor
jl
cmp
cmp
fnstenv
bound
xor
jns
loop
loopne
cwde
mov
inc
xor
push
cmp
cmp
xchg
aaa
bound
jno
call
pop
fucomi
dec
loopne
in
adc
cwde
inc
pop
xor
movs
xchg
mov
inc
loope
aaa
sar
pop
call
push
out
pusha
cs
jnp
test
adc
int
xor
mov
and
clc
lahf
pcmpgtd
mov
cmc
out
dec
jns
ficom
loopne
cwde
fsubp
mov
inc
loope
push
inc
loopne
pop
mov
pop
cmp
(bad)
loopne
cwde
xor
loopne
punpckhbw
into
cwde
inc
pushf
imul
fmul
mov
loopne
cwde
mov
pop
mov
ins
jle
addr16
add
pusha
loopne
cwde
call
loope
aaa
xor
int3
xor
xchg
jbe
mov
cmp
dec
sbb
addr16
push
push
mov
loopne
cwde
call
loope
aaa
xor
int3
xor
fistp
jl
xor
mov
xor
lahf
cmp
addr16
cld
mov
cwde
xor
mov
push
pushf
mov
inc
loope
data16
repnz
or
mov
inc
loope
jo
fdiv
mov
jmp
mov
cwde
call
loope
aaa
xor
int3
xor
xor
cmp
dec
pop
mov
pop
xor
cmp
dec
mov
addr16
jecxz
cmps
mov
or
pop
mov
cwde
call
loope
aaa
xor
int3
lock
pop
iret
ffreep
push
xor
cld
mov
cwde
xor
mov
inc
pop
cmp
dec
sbb
addr16
loopne
in
cmp
dec
mov
out
std
jecxz
cmps
mov
mov
mov
pop
xchg
mov
inc
loope
out
jnp
adc
cdq
inc
dec
mov
cwde
call
daa
mov
dec
pusha
xchg
lock
jecxz
push
mov
pop
xor
cmp
dec
mov
cwde
call
cmp
push
mov
xchg
mov
inc
loope
out
jnp
xchg
xchg
inc
loope
addr16
stos
retf
cwde
inc
loopne
xlat
daa
pop
xor
cmp
dec
fist
jl
mov
push
loopne
cwde
mov
pop
pop
addr16
mov
jmp
pop
xchg
mov
inc
loope
out
jnp
xchg
cmp
dec
pop
jp
pop
xor
cmp
dec
fist
or
movs
(bad)
mov
inc
loope
gs
loope
out
cmp
xchg
mov
inc
loope
aaa
xor
loopne
mov
pop
xor
mov
int
cmp
and
pop
cmps
aaa
addr16
mov
fs
xchg
fs
xor
out
pusha
call
int3
cdq
inc
xchg
lock
jecxz
push
mov
loope
addr16
sbb
and
int
call
pop
mov
cwde
call
and
addr16
push
repz
mov
xchg
lock
mov
cwde
call
jae
and
push
mov
loope
addr16
cmps
xor
jne
(bad)
sbb
jmp
pusha
xchg
lock
push
cwde
inc
loopne
addr16
add
sbb
int
xor
mov
cwde
call
loope
in
(bad)
add
xor
in
xchg
jmp
fbstp
clc
mov
pop
xor
loope
xor
and
xor
xchg
jbe
mov
cmp
lock
xor
mov
xor
pusha
push
jmp
jnp
mov
inc
loope
aaa
shr
mov
inc
loope
aaa
xor
int3
jae
pop
xor
xchg
jbe
mov
cmp
inc
pop
xor
mov
xor
repz
xchg
mov
inc
loope
aaa
rcr
int3
ror
cwde
xor
arpl
and
inc
xor
out
pusha
call
int3
cdq
inc
xchg
lock
jecxz
push
mov
loopne
cwde
mov
mov
mov
inc
int3
cdq
inc
pop
cmp
and
call
or
imul
inc
loopne
mov
xor
mov
cli
jne
cmp
inc
loopne
adc
fdiv
mov
cwde
or
xchg
mov
inc
loope
aaa
ror
shl
loope
aaa
push
into
xchg
addr16
fdivr
mov
loopne
cwde
cmp
int3
daa
cmp
xor
out
loop
loopne
cwde
inc
stos
jnp
inc
loopne
loop
loopne
cwde
call
loope
jmp
arpl
cmp
aas
out
retf
push
addr16
loope
addr16
pop
mov
ror
xor
inc
loopne
in
mov
outs
inc
call
and
int
sbb
int3
cwde
xor
arpl
mov
outs
cmp
xchg
push
mov
loopne
cwde
call
pop
int3
loop
loopne
cwde
xor
or
push
loopne
cwde
mov
iret
fwait
inc
loopne
fimul
int
mov
loop
cdq
inc
pop
mov
movs
xor
arpl
mov
outs
cmp
xor
mov
mov
inc
loope
aaa
xor
int3
xor
pop
xor
add
pop
inc
imul
out
inc
loopne
in
mov
outs
xor
arpl
mov
outs
xor
arpl
mov
outs
cmp
cld
jge
pop
mov
cwde
call
pop
ficom
inc
loopne
cmp
inc
cli
movs
in
xchg
(bad)
or
cli
pop
pop
std
test
xor
sbb
xor
dec
push
out
popf
pop
xor
pushf
fistp
dec
fs
(bad)
hlt
and
in
sahf
pop
or
xor
pop
iret
addr16
sti
sub
pop
pop
aas
mov
mov
aaa
(bad)
(bad)
call
xlat
out
inc
call
mov
cmp
mul
jbe
add
std
jecxz
cwde
inc
loopne
dec
jg
shl
pop
xor
std
push
in
(bad)
hlt
and
out
mov
out
xor
jmp
(bad)
sbb
mov
inc
loopne
cmp
mov
addr16
fnsave
addr16
xchg
(bad)
ss
and
xor
out
xor
iret
out
jg
inc
outs
ror
xchg
and
mov
ja
call
sbb
cvtdq2ps
mov
aas
jae
rcr
pop
addr16
push
nop
addr16
call
mov
(bad)
mov
fsub
pop
dec
fs
and
xor
sbb
js
jno
mov
hlt
or
or
jno
sbb
mov
pop
xor
jo
jae
test
xor
inc
xchg
cmc
in
push
gs
xor
push
pop
xor
fstp
out
inc
ss
out
jg
xor
pop
ins
cmp
fsub
pop
dec
arpl
dec
mov
cmp
aaa
mov
mov
xchg
jbe
xor
int3
bound
jno
cmp
int3
adc
xchg
addr16
cmps
xlat
inc
mov
pop
retf
out
jle
call
mov
xchg
jle
xor
in
mov
pushf
hlt
gs
out
push
mov
into
fsubr
in
pmaddwd
stos
push
xor
pop
xor
dec
ss
out
jle
fld
pop
xor
out
cli
movs
in
xchg
(bad)
fistp
addr16
push
lods
addr16
or
in
sahf
ror
mov
and
(bad)
pop
xor
dec
out
addr16
pop
xor
mov
pop
xor
sbb
pop
mov
cwde
xor
pop
mov
pop
xor
xchg
mov
inc
loope
out
jnp
jbe
xor
mov
jl
int
mov
pop
les
loopne
movs
rcl
dec
(bad)
mov
loopne
cwde
mov
cmp
xor
xor
jmp
inc
loope
(bad)
jp
xor
call
int
int3
shl
int
push
push
lods
addr16
xchg
lock
js
gs
mov
loopne
cwde
xor
pop
rcr
pop
addr16
mov
cwde
inc
loopne
and
ss
xor
imul
or
mul
stc
mov
(bad)
mov
jb
pop
xor
pusha
cs
jnp
jbe
xor
mov
popaw
xchg
clc
in
daa
mov
fwait
inc
loopne
loop
loopne
cwde
call
loopne
xchg
inc
mov
and
repz
int3
pop
xor
cwde
inc
loopne
mov
jnp
sub
mov
pop
xor
pusha
cs
jnp
mov
inc
loope
in
mov
fistp
in
mov
loope
out
int3
jl
mov
loope
aaa
xor
loopne
or
inc
loope
cwde
sub
xchg
jbe
inc
call
jl
int
fsubr
outs
js
push
cdq
inc
xchg
xor
std
jecxz
mov
cmp
cmp
mov
loope
cwde
or
loopne
stos
inc
loope
out
std
out
and
out
std
jecxz
movs
or
addr16
cmp
mov
loope
cwde
int
int3
bnd
int
xor
mov
xor
fmul
cs
xchg
xor
std
jecxz
mov
fisttp
in
mov
loope
jmp
pop
addr16
loopne
or
inc
mov
and
jmp
pusha
xchg
lock
mov
mov
movs
xor
loopne
jmp
pop
inc
stos
scas
cdq
inc
loopne
repnz
int
xor
cwde
cmp
pushf
mov
inc
loope
add
sbb
cmps
int3
and
cwde
xor
mov
nop
pop
xchg
mov
inc
loope
out
jnp
jbe
cmp
cmp
mov
loope
cwde
or
loopne
stos
inc
loope
out
std
out
mov
xor
mov
cwde
inc
loopne
repz
xor
std
jmp
xor
out
pusha
call
iret
cdq
inc
xchg
lock
std
jecxz
cmps
in
xchg
xor
cmp
xchg
mov
inc
loope
aaa
rcr
mov
cwde
call
loope
aaa
rcr
int3
adc
jmp
loope
out
std
out
ret
int
mov
xchg
mov
inc
loope
out
jnp
mov
inc
loope
in
mov
(bad)
xor
mov
xor
cmp
xchg
mov
inc
loope
aaa
xor
loopne
or
inc
loope
cwde
sub
xchg
jbe
inc
call
js
int
push
sbb
addr16
sbb
cmps
int3
and
cwde
xor
mov
popaw
xchg
clc
in
pop
mov
cwde
inc
loopne
rol
loopne
cwde
inc
mov
cwde
inc
loopne
and
fwait
cdq
inc
loopne
xchg
test
xor
inc
loope
out
jnp
jbe
xor
mov
cmp
pop
xor
js
mov
fwait
inc
loopne
addr16
loopne
jmp
pop
addr16
push
cwde
sub
xchg
jbe
xor
in
mov
(bad)
xor
nop
xchg
xor
cmp
jne
jmp
mov
cwde
call
loope
aaa
rcr
int3
adc
out
loope
out
std
out
and
out
std
jecxz
xchg
dec
cmp
addr16
ja
mov
loope
or
inc
loope
aaa
xor
loopne
jmp
int3
shl
loope
cwde
xor
loopne
jmp
pop
addr16
push
cwde
sub
xchg
jbe
inc
sbb
addr16
xchg
mov
inc
loope
aaa
push
fisubr
mov
call
rcr
xor
jne
jmp
fcmovnb
daa
pop
xor
mov
pop
mov
cwde
call
pop
mov
cwde
cmp
aaa
in
mov
fsubr
addr16
xor
xchg
mov
inc
loope
aaa
shl
int3
adc
popf
inc
loopne
loop
jecxz
cwde
cmp
aaa
in
mov
pop
pop
cwde
mov
xchg
cdq
inc
dec
pop
cwde
inc
push
(bad)
repnz
cwde
rcr
pop
cwde
mov
mov
cdq
inc
dec
pop
cwde
inc
stos
stos
cdq
inc
loopne
dec
inc
loopne
in
jg
rcl
cwde
push
repnz
addr16
pushf
mov
int
fiadd
mov
ja
xchg
cli
pop
mov
cwde
call
loopne
mov
mov
sbb
pop
test
xor
add
dec
(bad)
int3
in
adc
cwde
inc
pop
xor
cmp
addr16
loope
out
push
xor
or
addr16
adc
out
sbb
push
mov
loopne
addr16
loopne
cwde
or
loopne
mov
int3
(bad)
xor
int3
cwde
rcr
pop
mov
cmp
dec
fcmovne
push
loopne
in
aas
push
cwde
inc
pop
xor
jmp
gs
jno
xor
loopne
(bad)
ss
cmp
aas
pop
inc
loopne
addr16
add
rol
ret
xchg
mov
inc
loope
aaa
push
outs
ficomp
jle
ss
inc
loope
addr16
xor
ins
loopne
cwde
jg
jae
inc
loopne
addr16
jecxz
cwde
mov
pop
iret
cdq
inc
lahf
(bad)
bound
cwde
mov
pop
iret
cdq
inc
je
daa
inc
loope
imul
sbb
cwde
inc
loopne
cmps
cmp
xor
fistp
cwde
inc
call
dec
loopne
cwde
test
iret
cdq
inc
ins
and
sbb
mov
loope
aaa
xor
loopne
(bad)
out
jno
inc
push
(bad)
jp
xor
(bad)
in
std
pop
mov
cwde
xor
mov
inc
pop
mov
mov
stos
setnp
mov
sbb
pop
int3
loop
loopne
cwde
cmp
mov
pop
pop
data16
ret
xchg
mov
inc
loope
aaa
push
xchg
fistp
test
int3
addr16
ja
xchg
cli
pop
mov
cwde
call
loopne
mov
adc
int
mov
loope
addr16
cmp
cwde
cmp
int3
addr16
mov
cwde
jle
ss
inc
loope
dec
inc
call
dec
loopne
cwde
test
iret
cdq
inc
ins
clc
jmp
mov
cwde
call
pop
int3
adc
pop
mov
test
lock
sbb
in
std
pop
mov
cwde
xor
mov
inc
pop
mov
mov
stos
jae
inc
loopne
sbb
xchg
jmp
pusha
xchg
lock
or
mul
bound
jno
push
push
enter
jmp
pusha
xchg
lock
std
pop
mov
daa
cmp
xor
out
and
mov
jle
xor
mov
fwait
inc
loopne
loop
jecxz
cwde
xor
mov
cwde
out
push
cmp
aaa
fs
push
fsubr
xor
lahf
xor
int3
bound
jno
cmp
nop
arpl
sbb
rep
call
loopne
aaa
push
out
addr16
pop
xor
pop
xor
inc
loopne
jmp
pop
scas
dec
pop
xor
cmp
dec
fld
xor
mov
dec
cmp
(bad)
sbb
arpl
cmp
dec
fcmovne
and
xor
inc
cs
out
jg
test
mov
jecxz
cwde
mov
loopne
aaa
xor
loopne
(bad)
out
jno
xor
loopne
pop
test
addr16
pop
jmp
sti
cwde
clc
lahf
pcmpgtd
pushf
cmc
data16
int3
add
int
mov
pop
int
jp
es
js
xor
mov
mov
inc
loop
cwde
xor
and
inc
pop
int
cvtps2pd
push
inc
loopne
mov
into
mov
mov
test
fwait
inc
loopne
mov
and
js
xor
pop
fsubr
out
lahf
xor
int3
bound
jno
out
cli
movs
mov
data16
pop
pushf
fbstp
dec
fs
in
lea
xchg
mov
pop
xor
push
stc
mov
(bad)
pop
xor
pop
fneni(8087
das
pop
xor
mov
sbb
lar
jno
push
inc
movs
addr16
mov
addr16
pop
fs
push
mov
xor
in
out
and
inc
fbstp
mov
pop
les
jle
xor
scas
xor
addr16
xor
jne
or
out
imul
repnz
adc
in
mov
pop
or
fbstp
into
repz
push
mov
or
pop
xchg
jbe
xor
xchg
lahf
js
xor
out
cli
movs
in
xchg
(bad)
in
das
pusha
xor
xchg
jbe
ficom
push
popa
sahf
cmps
mov
mov
pop
xlat
out
jnp
ss
xor
mov
ja
addr16
div
lock
xchg
jmp
pusha
xchg
lock
push
mov
addr16
dec
and
cmp
int3
addr16
mul
mov
xor
add
xor
push
xor
ret
(bad)
jle
xor
sbb
movs
(bad)
push
xor
jp
addr16
push
xor
xchg
jbe
xor
mov
inc
pop
mov
mov
fst
in
ror
sub
jno
xor
les
iret
mov
addr16
push
addr16
pop
shl
test
ds
xchg
jbe
jle
xor
dec
mov
shl
xchg
jbe
mov
adc
mov
jl
cmp
mov
pop
shl
aad
jbe
jle
xor
out
std
(bad)
mov
movs
inc
pop
shr
std
out
and
xchg
or
addr16
sbb
std
shl
adc
fwait
mov
xchg
addr16
aas
push
std
jecxz
and
jbe
jle
xor
out
pusha
ss
jnp
jbe
mov
sbb
cwde
std
jecxz
cwde
push
or
test
xchg
addr16
xchg
daa
ja
or
and
xchg
jmp
pusha
xchg
lock
std
jmp
sar
or
and
lea
int3
cwde
mov
jne
jmp
mov
aaa
inc
push
(bad)
addr16
test
xchg
repnz
addr16
push
(bad)
out
mov
addr16
push
sub
fs
adc
fwait
or
fbstp
xor
add
inc
dec
pop
pop
mov
loopne
imul
pop
mov
addr16
xor
loopne
jae
push
pop
addr16
push
cwde
int
fistp
das
pop
xor
das
pop
xor
loop
xor
clc
mov
cmp
data16
pop
pushf
fbstp
mov
mov
and
cwde
mov
xchg
retf
push
inc
xchg
hlt
jmp
cmp
rcr
int3
adc
movs
addr16
push
jmp
inc
ja
push
(bad)
mov
xor
lds
mov
out
mov
(bad)
pop
mov
xor
mov
les
jg
cli
movs
in
xchg
(bad)
out
push
xor
dec
xor
je
mov
mov
pop
fucomip
jg
xchg
repnz
out
lahf
xor
pop
ja
pop
ret
aaa
out
div
data16
xchg
call
loopne
mov
mov
sbb
xor
fs
gs
sahf
mov
xor
dec
std
ret
push
sbb
lahf
xor
xchg
jbe
xchg
pop
rcr
pop
xor
ins
pop
(bad)
out
imul
repnz
(bad)
adc
call
mov
and
gs
scas
mov
cmp
xor
push
mov
dec
imul
pop
in
push
adc
out
not
repz
pop
in
xor
pop
mov
fisubr
mov
pop
pop
data16
xor
dec
fild
sub
pop
xor
push
pop
gs
dec
cmps
addr16
pop
xor
std
sti
sbb
and
push
pop
fisttp
push
cdq
mov
xchg
jbe
xchg
pop
out
pop
(bad)
push
xor
call
push
xor
xchg
adc
in
std
sti
sbb
and
mov
pushf
shl
pop
jmp
jg
ins
addr16
sbb
dec
mov
pusha
pop
inc
daa
rcr
xor
fnstcw
mov
mov
pop
xor
jle
jbe
mov
dec
(bad)
xor
jle
jbe
mov
sbb
cmp
test
mov
pop
loopne
push
adc
out
test
mov
xor
pop
mov
fsub
push
dec
outs
addr16
out
arpl
push
mul
xchg
cli
adc
out
out
inc
push
mov
pop
xor
adc
out
inc
push
retf
out
jg
xor
pop
mov
cwde
call
pop
xor
std
ret
arpl
push
push
addr16
loopne
mov
jbe
addr16
push
in
(bad)
out
inc
call
int
inc
xchg
hlt
in
xlat
and
add
xor
xor
dec
std
jmp
std
ret
mov
xor
in
xlat
popa
dec
std
(bad)
mov
call
sub
jno
rcr
fld
xor
std
mov
xor
inc
loopne
out
jg
and
xor
or
inc
push
(bad)
push
mov
addr16
push
(bad)
mov
xor
pop
pop
addr16
xor
dec
fucomi
sub
xor
imul
mov
pop
xor
push
pop
mov
addr16
add
rcr
pop
xchg
mov
jp
addr16
xchg
mov
ja
sub
sar
pop
fisttp
jg
dec
addr16
frstor
addr16
mov
mov
mov
sbb
and
xor
lock
jno
ror
and
mov
loopne
out
xor
addr16
pop
pop
ins
dec
pop
xor
mov
push
xor
mul
pushf
inc
loopne
bound
jno
rcr
and
cli
pop
pop
jge
pop
xor
mov
cmps
enter
les
cld
out
jno
sar
ret
and
cli
pop
pop
mov
(bad)
and
int3
cwde
cmp
jae
jnp
mov
mov
lea
(bad)
pop
xor
clc
mov
(bad)
loopne
int3
cwde
xor
add
xchg
pop
xor
mov
stos
jno
push
push
mov
movs
in
xchg
(bad)
in
adc
out
xchg
jbe
ficom
sub
jecxz
retf
push
inc
xchg
hlt
cwde
mov
jne
jmp
arpl
cmp
aas
out
cmc
jno
mov
pop
xor
jg
dec
addr16
pushf
fstp
std
out
out
and
mov
adc
inc
pop
xor
xor
push
inc
pop
xor
pop
int3
out
and
addr16
pop
xor
std
jmp
int3
pop
mov
pop
mov
movs
pop
xor
fild
(bad)
lock
cli
mov
push
xor
jmp
fs
lds
mov
gs
jno
mov
push
xor
fadd
addr16
mov
ret
int3
cwde
mov
pop
xor
add
pop
inc
je
mov
cdq
inc
loopne
loop
loope
cwde
xor
int3
in
jecxz
cwde
inc
pop
inc
je
mov
cdq
inc
loopne
loop
loope
cwde
xor
int3
cwde
mov
xchg
jmp
pusha
xchg
lock
jmp
cwde
inc
pop
mov
dec
jecxz
cwde
clc
ins
and
sub
loopne
xchg
inc
loopne
out
add
retf
fwait
inc
loopne
fimul
cwde
clc
ins
and
sub
loopne
xchg
inc
loopne
out
or
retf
fwait
inc
loopne
ret
int3
cwde
mov
xchg
mov
inc
loope
out
jnp
mov
retf
or
repnz
loop
cwde
inc
call
sub
pushf
mov
retf
or
repnz
loop
cwde
inc
call
sub
loopne
arpl
xor
pusha
cs
jnp
xchg
pop
addr16
fistp
mov
bound
addr16
loopne
jmp
mov
cwde
call
loopne
aaa
rcr
xor
cmp
dec
gs
pop
xchg
xor
fistp
push
pop
xor
mov
call
mov
push
mov
loopne
addr16
loopne
xor
mov
xchg
inc
loopne
in
loopne
je
div
in
mov
dec
xor
(bad)
(bad)
mov
sbb
and
inc
loopne
addr16
gs
sbb
add
push
popa
xor
xchg
mov
inc
loopne
mov
inc
loopne
cwde
mov
jne
aaa
xor
loopne
xor
mov
cwde
int
fs
ficom
sbb
call
iret
cdq
inc
xchg
lock
js
or
pop
mov
cwde
call
pop
xor
adc
jmp
gs
mov
xor
fistp
sbb
xor
pop
pop
cwde
inc
pop
xor
cmp
dec
fs
xor
inc
loopne
lahf
inc
push
xor
mov
and
call
mov
fidiv
add
pop
inc
jle
sbb
cmps
cli
pop
fs
outs
xchg
xor
fsub
mov
lods
xor
loopne
arpl
xor
cmp
fnstenv
cwde
mov
xchg
lock
inc
loopne
jmp
gs
addr16
int3
adc
pop
xor
jnp
or
mov
xchg
mov
inc
loopne
aaa
out
mul
mov
cmp
bound
ss
dec
cdq
inc
xchg
lock
mov
daa
push
and
addr16
loopne
xor
mov
adc
pop
xor
pusha
ss
jnp
repz
push
or
mov
push
js
aas
out
pusha
call
iret
cdq
inc
xchg
lock
inc
cli
movs
in
xchg
(bad)
in
or
xor
fadd
push
pop
mov
fidiv
cmp
arpl
and
inc
je
pop
pop
outs
rol
ret
and
push
dec
mov
or
ja
jno
inc
imul
add
addr16
out
mov
adc
aaa
cmps
cli
pop
mov
xor
xor
int3
bound
lds
call
mov
nop
jle
retf
addr16
retf
mov
addr16
repz
xchg
cmp
dec
aaa
xor
push
mov
imul
inc
out
std
loope
and
xchg
jbe
rcr
pop
ins
xor
imul
addr16
push
daa
mov
inc
cli
movs
in
xchg
(bad)
xor
inc
cmp
dec
inc
xchg
hlt
cwde
mov
adc
adc
loopne
mov
mov
arpl
xor
inc
cs
out
jg
outs
movs
in
xchg
(bad)
ss
fs
int
mov
jns
addr16
pop
xor
(bad)
pop
xor
icebp
xchg
ret
in
pop
arpl
xor
cwde
mov
push
repz
pop
xor
inc
ss
out
jg
xor
push
fs
cwde
inc
pushf
imul
fcomp
mov
hlt
push
in
std
jecxz
daa
mov
xor
mov
sub
out
cmp
out
pop
cmp
push
shr
int3
cmp
arpl
test
(bad)
adc
scas
jns
cmp
adc
imul
arpl
fidiv
mov
ins
adc
test
cmps
pop
pop
cmp
fcomp
js
ins
cmp
fsub
pop
dec
pusha
xor
xchg
inc
outs
pop
mov
hlt
test
mov
dec
fstp
loopne
rcr
pop
data16
xor
ds
xor
jns
loope
pop
xor
pop
mov
xlat
add
addr16
jne
call
pop
mov
loope
pop
xor
(bad)
addr16
addr16
sbb
cmps
cli
pop
mov
stos
dec
xor
(bad)
xchg
mov
dec
int3
sar
pop
xor
into
mov
mov
loopne
arpl
xor
inc
call
mov
(bad)
aam
int3
cwde
cmp
cmp
inc
ss
out
jg
repz
push
push
int3
bound
out
dec
mov
test
mov
repz
inc
cli
movs
in
xchg
(bad)
out
pop
xor
dec
xor
push
fcom
call
cmc
loop
loope
cwde
mov
xchg
mov
inc
loopne
out
jg
arpl
xor
sbb
pop
mov
(bad)
bound
cmp
inc
loopne
adc
xchg
scas
fwait
inc
loopne
cwde
cmp
xchg
arpl
mov
mov
inc
sbb
addr16
loopne
addr16
loopne
or
cmp
dec
pop
push
jle
addr16
pop
xor
jg
inc
addr16
loopne
aaa
inc
imul
addr16
inc
jl
pop
pop
xor
cdq
inc
loopne
cwde
into
sbb
inc
ds
xor
push
test
hlt
sub
mov
xchg
hlt
mov
mov
push
xor
adc
cwde
push
adc
nop
pop
xchg
mov
inc
loopne
out
jg
ins
cmp
fsub
pop
cmps
pop
ja
pop
(bad)
out
dec
mov
lahf
sub
push
pop
retf
mov
ret
pop
aaa
adc
loopne
arpl
xor
int3
int
inc
xchg
icebp
out
jmp
mov
dec
jp
data16
jmp
lea
mov
icebp
out
jmp
cmc
and
push
mov
fs
pusha
(bad)
adc
int3
cwde
loope
dec
mov
cmps
pop
int3
and
mov
std
out
movs
xchg
fnstsw
cmova
xor
call
retf
sbb
xor
pop
xor
pop
fisubr
mov
(bad)
mov
add
xor
in
xchg
cwde
mov
cmps
into
push
pop
les
inc
xchg
jbe
xor
xor
pop
int
inc
dec
fistp
loopne
out
jp
pusha
es
add
xor
std
out
jnp
pop
pusha
(bad)
cwde
loope
cwde
cmp
and
jp
pusha
and
fs
int3
add
fdivr
pop
xor
imul
mov
loopne
in
pop
add
mov
pop
xor
std
out
movs
mov
mov
and
sbb
test
inc
jnp
pop
pusha
(bad)
lods
jecxz
cwde
cmp
cmp
neg
and
icebp
push
jp
data16
mov
dec
and
clc
xor
les
shr
(bad)
or
sub
ret
int3
ds
mov
and
push
push
xor
in
jmp
sbb
pop
xor
pop
iret
mov
mov
loopne
xor
out
jp
addr16
loopne
fwait
xor
pop
std
jecxz
cmp
and
rdpmc
addr16
jge
inc
loopne
movs
xor
push
pop
into
cwde
inc
pushf
imul
fnstsw
arpl
xor
ret
daa
xor
mov
push
pop
push
sbb
cmps
push
sbb
sti
pop
ins
cmp
(bad)
lock
cli
bound
out
xchg
inc
outs
pop
div
lds
xor
mov
sbb
push
push
outs
mov
mov
xchg
hlt
in
sbb
adc
inc
mov
mov
imul
into
pop
fld
cmp
xor
(bad)
adc
adc
pop
mov
mov
xchg
hlt
in
lahf
xor
pop
inc
ins
inc
test
fild
pop
xor
mov
repz
les
jg
ins
scas
jnp
mov
xor
xchg
dec
outs
push
in
xchg
xchg
ret
dec
xchg
cmc
xor
leave
cwde
inc
inc
int3
bound
add
aas
fwait
xor
sbb
dec
aaa
push
loop
addr16
xor
rcl
out
dec
push
ret
out
jle
arpl
xor
cmp
xor
loopne
outs
push
mov
adc
dec
int3
adc
jne
xor
(bad)
cwde
inc
pushf
div
fbstp
jnp
xor
out
add
inc
push
xor
fild
inc
sbb
cmps
cli
pop
mov
mov
call
inc
fs
clc
jmp
pusha
push
addr16
stc
mov
push
js
fcomp
cmp
lahf
or
mov
test
sbb
loopne
pop
rol
vpcomb
jecxz
addr16
dec
mov
addr16
neg
out
pop
mov
cwde
int3
sti
mov
mov
cli
pop
cmp
aas
mov
addr16
pop
xor
jnp
test
pop
xor
dec
loopne
in
lar
dec
stc
mov
cmp
inc
cli
movs
in
xchg
(bad)
in
adc
out
mov
mov
mov
mov
out
mov
push
adc
cwde
inc
xchg
icebp
out
out
pop
int3
bound
outs
pusha
mov
in
cwde
cmp
cmp
jp
cbw
cmp
(bad)
int
mov
mov
xor
pop
les
adc
(bad)
pusha
in
cwde
loope
jbe
mov
pop
int3
adc
xor
cli
pop
int3
adc
gs
push
in
cwde
loope
lock
push
inc
pop
inc
sbb
cmps
cli
pop
mov
mov
inc
loopne
outs
js
adc
sar
pop
xor
not
mov
push
out
addr16
pop
les
jg
enter
gs
popa
loop
cwde
loope
repz
imul
cwde
inc
pushf
imul
imul
addr16
sbb
fwait
loop
cwde
loope
repz
pop
xor
out
cli
movs
mov
pushf
fistp
dec
fs
inc
pop
pop
xor
sbb
mov
cmp
sar
pop
xor
mov
pop
nop
arpl
pop
xor
jg
fbld
xchg
retf
push
inc
xchg
hlt
or
mov
adc
call
pop
mov
mov
movsx
push
dec
int3
push
mov
cs
mov
sbb
out
pop
cmp
mov
jno
mov
xchg
jbe
xor
add
mov
fidiv
xor
les
jg
outs
jns
xor
out
lahf
xor
push
mov
push
pop
cmp
std
loope
cmps
sbb
xor
and
arpl
xor
adc
std
loope
sar
loope
addr16
pushf
push
xchg
or
adc
addr16
pop
mov
mov
mov
mul
cvtps2pd
push
js
xor
xchg
aaa
bound
loopne
arpl
pop
xor
xor
mov
fisttp
cmp
int3
adc
loopne
arpl
xor
pop
int
js
xor
xchg
pop
bound
jbe
ror
xchg
addr16
sub
daa
mov
jbe
ret
mov
sbb
mov
pop
popa
or
mov
ja
pop
clc
pop
pop
rcr
fcmovnbe
cmp
xor
jnp
retf
push
inc
xchg
hlt
xor
cmps
mov
mov
loopne
cmp
(bad)
icebp
arpl
repz
xor
xchg
jbe
ficom
imul
pop
retf
out
jg
arpl
xor
dec
daa
sbb
jns
and
pop
xor
mov
pop
xchg
addr16
pop
fild
cmp
adc
bound
sbb
and
rcr
pop
imul
xor
sahf
pushf
xor
fnstcw
mov
mov
fidiv
xor
sbb
push
(bad)
mov
mov
fidiv
mov
sbb
and
pop
xchg
jbe
xor
cmp
mov
inc
ins
scas
jnp
mov
xor
xchg
outs
outs
add
sti
data16
repnz
mov
xchg
in
in
pop
inc
es
imul
cmp
cmps
call
popf
mov
mov
pop
bound
mov
pop
xor
pop
xor
leave
ja
addr16
(bad)
mov
mov
mov
xchg
ret
and
pop
xchg
addr16
xor
sbb
loope
pop
cmp
mov
pop
xor
arpl
addr16
fidiv
cmp
cmps
call
rcr
cmps
cmps
cli
pop
add
sub
sbb
std
jmp
bound
jb
push
push
xor
lahf
ds
pop
xor
dec
sbb
push
mov
pop
xor
adc
mov
es
mov
ret
pop
xor
inc
sbb
popa
mov
mov
and
aaa
pop
xor
sbb
cmps
push
pop
xor
sahf
ret
pop
xor
mov
mov
addr16
xor
push
bound
push
sub
cwde
inc
jmp
xor
sbb
cmps
push
add
sti
data16
repnz
mov
inc
loopne
xchg
mov
pop
inc
pusha
mov
ficomp
jo
sti
out
jns
ds
pop
xor
pop
mov
mov
pop
fiadd
mov
push
inc
pusha
mov
fisubr
jo
sti
out
jns
ds
pop
xor
sbb
stc
pop
xor
pop
fcmovu
inc
loopne
xchg
mov
sbb
fcmovb
mov
push
sti
out
jns
ds
pop
xor
sbb
loope
pop
xor
pop
mov
mov
xor
xchg
int
inc
loopne
repz
xor
mov
pop
xor
mov
mov
ins
mov
xchg
jb
mov
pop
mov
pop
xchg
jbe
xor
mov
sub
jb
clc
not
addr16
pop
xor
js
xor
xor
retf
xor
mov
xor
bound
push
(bad)
addr16
pop
xor
xor
stos
xor
loopne
repz
xor
mov
sbb
xor
push
xchg
sub
pushf
ss
daa
pop
xor
xor
repz
xor
adc
out
icebp
dec
addr16
pop
xchg
xlat
sbb
push
cli
pop
cmp
mov
xor
pushf
call
mov
and
addr16
cmp
out
mov
inc
sbb
push
sbb
es
pop
xor
pop
xor
lahf
dec
xor
(bad)
mov
out
mov
mov
fidivr
mov
and
mov
pop
xor
mov
pop
xor
out
jne
mov
pop
mov
cmps
mov
mov
js
xor
pop
les
sbb
(bad)
cli
pop
mov
mov
test
xor
adc
out
call
ss
pop
xor
dec
mov
mov
and
ins
sbb
mov
mov
pop
xor
test
mov
mov
(bad)
les
dec
mov
dec
sbb
cmp
rcr
stc
pop
xor
push
out
mov
mov
out
jne
mov
pop
cmp
mov
pushf
shl
pop
(bad)
jmp
dec
nop
mov
dec
mov
or
cmp
fistp
stc
pop
xor
or
sbb
pop
mov
lahf
cmp
test
stc
pop
or
bound
retf
scas
dec
(bad)
mov
in
test
xor
jne
lods
test
mov
pop
int3
bound
jb
sbb
ss
pop
xor
js
xor
dec
ss
mov
fbstp
mov
xchg
repnz
(bad)
lock
cli
bound
out
mov
mov
adc
addr16
sbb
(bad)
jle
xor
xor
pop
les
xor
push
dec
addr16
pop
mov
cs
shl
mov
pop
xor
sub
cmc
and
les
xor
cmp
cmc
and
les
xor
sbb
les
jg
frstor
xchg
arpl
sbb
mov
dec
mov
addr16
movs
cmp
dec
cld
mov
cwde
mov
ja
mov
adc
jb
mov
fstp
pop
xor
pusha
call
mov
addr16
out
hlt
and
addr16
pop
les
pushf
push
lahf
mov
loopne
repz
xor
(bad)
xor
pusha
ss
jnp
push
mov
fdiv
mov
pop
out
mov
out
jge
addr16
pop
xor
std
dec
bound
jno
jg
and
xor
pusha
call
mov
mov
in
cmps
xor
pusha
call
mov
jmp
xor
ja
addr16
dec
int3
jb
xchg
jb
add
shr
std
fwait
mov
aaa
rcr
mov
rcr
pop
arpl
sbb
adc
sbb
dec
int3
adc
jbe
call
popa
xor
sbb
addr16
push
or
mov
sti
fist
pop
xor
jnp
jb
mov
retf
mov
pop
xor
std
mul
int
mov
jb
xchg
jb
xor
mov
les
inc
ins
cmp
fsub
pop
pushf
fild
pop
iret
fxch
jp
out
jecxz
pop
mov
xchg
jbe
xor
out
cmc
out
add
mov
dec
fucomip
std
neg
rcr
pop
xor
aaa
xor
push
or
call
pop
int3
jb
xor
pop
(bad)
mov
pop
xlat
out
std
inc
add
mov
jnp
mov
ins
mov
out
mov
cli
pop
int3
adc
(bad)
mov
push
repnz
xor
in
data16
pop
pushf
fild
dec
fs
int
mov
repz
xor
adc
addr16
test
int3
addr16
test
int3
addr16
test
int3
addr16
test
int3
addr16
sbb
and
cld
sbb
in
lods
and
cwde
mov
adc
and
xchg
icebp
push
mov
test
cmp
xor
xor
in
lea
es
adc
xchg
leave
in
sbb
shr
mov
push
push
pop
xor
inc
cmp
std
loopne
cmps
mov
aaa
bound
jno
call
pop
cmp
in
loopne
mov
xchg
daa
jb
(bad)
jno
jmp
out
std
out
scas
inc
xchg
data16
dec
and
in
lea
mov
mov
pop
and
cld
sbb
inc
pushf
(bad)
dec
(bad)
out
lods
sbb
addr16
test
daa
out
sbb
cli
pop
xor
mov
jbe
mov
loopne
bound
jno
cmp
or
lahf
lock
punpcklwd
(bad)
and
lahf
cmp
xor
test
aaa
adc
sbb
mov
or
xor
mov
retf
in
sbb
jno
(bad)
xor
test
addr16
mov
fbstp
mov
pop
mov
xchg
jnp
test
xor
in
retf
in
sbb
inc
ss
mov
mov
push
out
inc
pushf
(bad)
test
xor
imul
pop
xor
xor
ja
dec
and
in
lea
(bad)
pop
retf
in
std
movsx
mov
div
in
in
out
jae
push
xor
lahf
mulps
push
mov
mov
out
(bad)
mov
push
out
inc
pushf
(bad)
xor
lahf
cmp
aaa
push
test
pop
inc
pop
xor
sbb
cwde
mov
not
mov
xchg
addr16
push
leave
in
sbb
addr16
sbb
addr16
test
jecxz
lock
cli
mov
mov
xor
cmps
cmps
cli
pop
mov
push
inc
hlt
xor
test
xor
mov
mov
push
sbb
addr16
out
mov
push
sbb
addr16
or
push
(bad)
mov
imul
addr16
cmp
mov
(bad)
xor
es
lds
push
arpl
fstp
inc
sbb
sar
xor
lahf
and
addr16
jp
addr16
adc
in
lods
sbb
fwait
sbb
inc
es
neg
inc
xor
sub
mov
push
mov
out
dec
push
jmp
bound
jecxz
std
jmp
and
xchg
and
inc
es
xchg
mov
inc
xchg
shl
jecxz
inc
push
jmp
arpl
pop
retf
mov
cld
add
in
in
out
ja
sbb
scas
inc
ss
jmp
(bad)
pop
retf
mov
test
xor
dec
gs
pop
sbb
sti
and
inc
loopne
mov
jno
data16
pop
cmps
outs
inc
mov
pop
xor
dec
(bad)
cmp
pop
fcmovne
into
pop
xor
pop
xor
retf
sbb
loop
ror
mov
loopne
addr16
sbb
ficomp
int3
cwde
mov
call
mov
push
inc
jge
mov
xor
stos
adc
cwde
cmp
ss
jo
xor
sbb
cmps
xchg
push
loopne
out
sub
je
push
jo
xor
push
add
xchg
cmps
iret
data16
out
mov
pop
cmp
sub
je
jns
adc
or
xor
jns
xor
sub
loopne
jb
cdq
jb
push
rol
mov
loopne
out
mov
pop
mov
dec
lock
cwde
mov
lock
cwde
rcr
sub
scas
cli
pop
xor
push
int3
cwde
inc
fnstenv
addr16
cmps
xchg
push
loopne
cmps
pop
sbb
dec
es
sbb
addr16
cmps
xchg
push
loopne
cmps
pop
sbb
mov
mov
loopne
cwde
mov
lahf
mov
fwait
movs
mov
push
inc
loopne
out
cmp
loopne
repz
xor
sub
xchg
loopne
push
or
test
pop
jae
xor
add
test
xor
mov
cmc
in
push
repnz
sahf
lock
xor
fcomp
cmp
dec
(bad)
mov
and
push
loopne
addr16
xchg
xor
ja
cwde
mov
lock
cwde
inc
stos
jmp
inc
loopne
jo
loopne
in
adc
adc
pushf
xchg
out
loopne
xor
inc
loopne
and
jns
xor
inc
xchg
pop
fnstsw
stc
aaa
pop
or
retf
mov
inc
outs
call
xor
mov
xchg
jmp
mov
call
cmp
xor
pop
mov
mov
test
and
cmp
pop
xor
xchg
mov
data16
dec
inc
loopne
sbb
in
int3
cwde
inc
sbb
shl
int3
cwde
push
ds
addr16
pop
cmp
sub
(bad)
xor
es
lds
out
sub
pushf
xchg
xchg
push
loopne
xor
inc
loopne
test
sbb
jle
xor
and
xor
fstp
dec
lock
cwde
jns
xor
popa
(bad)
gs
xor
xor
cmp
sahf
mov
mov
loopne
repz
xor
add
pop
inc
cmp
icebp
cli
and
mov
ror
xor
xor
and
addr16
loopne
in
xor
call
sbb
int3
cwde
xor
mov
movs
sbb
out
cmp
xchg
mov
data16
in
sub
sbb
out
cmp
xchg
mov
addr16
in
cmp
xchg
mov
addr16
or
addr16
aaa
inc
stos
out
mov
int3
pop
xor
cmp
es
addr16
adc
xchg
mov
addr16
out
cmp
push
mov
addr16
out
cld
in
cwde
inc
pop
inc
movs
rcr
xor
jne
in
sub
fcompp
imul
cmps
fbld
int3
cmps
push
adc
mov
xor
mov
cld
inc
sbb
shr
(bad)
xor
sbb
ins
ror
xor
es
cmp
push
inc
loopne
test
bound
xor
pop
addr16
xor
mov
loopne
outs
js
mov
mov
pop
xor
and
mov
push
loopne
push
mov
lahf
dec
outs
mov
pop
xor
xor
mov
addr16
pop
xor
call
sbb
int3
cwde
mov
loopne
bound
stos
xlat
mov
lock
or
aaa
mov
out
pop
inc
jns
out
mov
mov
or
out
pop
inc
ins
xor
mov
mov
push
jge
jne
ss
xor
mov
test
(bad)
cmp
xor
sbb
mov
xchg
aaa
push
mov
test
out
cmp
hlt
mov
dec
hlt
cmp
cmp
push
retf
dec
dec
xchg
and
test
or
pop
ror
retf
retf
int3
cwde
mov
ror
jns
xor
add
xchg
mov
mov
pop
xor
push
out
and
addr16
lahf
cvtps2pd
push
out
and
addr16
lahf
cvtps2pd
imul
push
xlat
cmp
cmp
push
repz
imul
push
call
or
loopne
mov
loopne
(bad)
iret
out
cwde
cmp
aas
out
cld
in
cwde
inc
pop
inc
and
inc
loopne
in
sub
(bad)
gs
repnz
push
iret
in
cmp
fstp
test
loopne
out
jmp
cwde
inc
pop
aaa
addr16
mov
and
inc
loopne
loop
lock
cwde
mov
lock
cwde
rcr
sub
scas
cli
pop
xor
xor
cwde
inc
inc
ins
cmp
fsub
pop
dec
arpl
xor
add
pop
cmp
jbe
fnstenv
lock
adc
fbstp
mov
jbe
rcr
daa
cwde
mov
and
stc
pop
fisttp
jecxz
sar
pop
pop
cmps
lods
pushf
pop
bound
loopne
repz
xor
pop
cmp
or
es
test
outs
rcr
daa
in
sbb
adc
pop
xor
inc
call
mov
xor
cli
bound
out
xchg
jbe
ficom
push
mov
pop
les
jg
ss
xor
pop
cmp
or
push
mov
test
inc
loopne
repz
xor
pop
cmp
or
es
test
outs
rcr
daa
mov
stc
pop
xor
pop
fsubr
test
outs
rcr
daa
in
sbb
adc
pop
xor
inc
push
retf
out
jg
cli
movs
in
xchg
(bad)
in
adc
pop
push
out
std
pop
mov
xchg
adc
out
std
out
mov
cli
pop
mov
mov
imul
pop
xor
imul
outs
fidivr
bound
jno
mov
xchg
hlt
punpckhbw
xor
pop
pop
ja
pop
xor
cmp
aas
jmp
xor
mov
rcr
pop
addr16
es
addr16
pop
mov
cmc
pop
xor
xor
pop
addr16
jmp
js
jno
mov
mov
and
js
jno
out
lock
cli
mov
mov
inc
imul
jl
mov
fbstp
mov
(bad)
mov
pop
xor
clc
mov
bound
push
in
sbb
adc
pop
xor
fucom
ss
xor
dec
call
mov
addr16
jmp
push
mov
imul
or
pop
xor
inc
sub
jae
pop
xor
add
xor
call
mov
mov
pop
mov
mov
mov
div
es
jnp
in
loopne
cwde
ror
xor
mov
imul
mov
jmp
int3
push
mov
mov
addr16
pop
xor
jmp
pop
addr16
sub
(bad)
pop
fcmovnb
xlat
pop
xor
mov
pop
int3
bound
jno
out
cli
movs
in
xchg
(bad)
in
cmp
out
mov
mov
mov
mov
fbstp
rcr
pop
data16
xor
mov
out
lahf
xor
push
mov
mov
mov
jp
addr16
inc
fucom
fucomp
xor
jg
or
jne
jmp
stc
and
mov
pop
xor
mov
pop
mov
adc
pop
xor
lock
addr16
ret
mov
cwde
inc
neg
addr16
mov
jbe
test
xor
lock
pop
int3
bound
jno
xor
pop
fbstp
inc
sub
lods
cli
pop
(bad)
rcr
xor
jle
int
int3
stc
push
mov
push
cmp
std
loope
cmps
lods
pushf
punpckldq
push
in
sbb
adc
pop
xor
stos
sahf
fadd
out
pop
xor
inc
pop
int
cvtps2pd
in
jnp
mov
sbb
in
loope
adc
pop
xor
inc
call
mov
sar
loope
cmps
lods
xchg
pop
bound
int3
push
addr16
ret
mov
cdq
mov
jecxz
push
push
out
mov
pop
int3
bound
jno
xor
pop
cmp
std
loope
cmps
lods
xchg
aaa
bound
ja
aas
clc
pop
pop
rcr
fucomi
(bad)
pop
xor
push
xchg
mov
loopne
mov
xor
inc
push
cmp
inc
xor
dec
mov
dec
xlat
inc
mov
add
sbb
imul
arpl
cmp
aas
fild
xor
clc
mov
mov
mov
xchg
jle
cmp
int3
daa
cmp
xor
out
jmp
xor
out
lahf
xor
pop
data16
jbe
call
loopne
mov
inc
loopne
addr16
mov
aas
push
xor
bound
addr16
pop
data16
ret
and
call
loopne
mov
mov
pop
mov
inc
imul
mov
clc
mov
and
fdiv
mov
test
cdq
xor
push
aas
in
lods
push
mov
and
test
inc
pushf
retf
cmp
std
mov
or
xor
push
pop
cmps
dec
pop
xor
push
dec
imul
push
out
in
loope
aaa
(bad)
jbe
mov
test
cdq
xor
push
aas
in
lods
push
mov
and
test
inc
pushf
retf
cmp
std
mov
mov
dec
pop
xor
push
or
xor
push
out
in
loope
sar
loope
pop
mov
loopne
cdq
inc
sbb
data16
ret
dec
fist
loopne
in
adc
push
loopne
addr16
sbb
int3
mov
pop
xor
lock
mov
loope
arpl
xchg
cwde
inc
pop
xor
clc
adc
mov
pop
xor
xor
out
inc
call
mov
addr16
add
xor
push
pop
jno
addr16
aas
push
mov
ss
out
jg
ss
xor
push
add
mov
push
retf
out
jg
call
cwde
inc
loopne
je
out
lahf
xor
int3
bound
jno
xor
mov
inc
cli
movs
in
xchg
(bad)
(bad)
sbb
addr16
add
cmps
leave
xchg
jmp
pop
xchg
mov
inc
in
out
jnp
ss
xor
pusha
cs
jnp
hlt
loop
loopne
cwde
mov
cld
mov
cwde
xor
mov
cwde
xor
pop
mov
pop
xor
loopne
cwde
mov
loopne
cwde
call
(bad)
xor
push
loopne
cwde
mov
push
and
inc
loopne
addr16
pop
xor
inc
in
out
jnp
mov
inc
loope
aaa
shl
arpl
xchg
jbe
inc
das
fist
fistp
xor
mov
jb
addr16
xor
inc
loopne
addr16
loopne
in
std
pop
int3
push
push
jbe
addr16
loope
(bad)
jp
xor
call
inc
loopne
cwde
mov
pop
cmp
clc
adc
jle
int3
cwde
loope
xor
xor
sbb
inc
loopne
cwde
inc
adc
in
cmp
and
mov
push
adc
mov
cmp
addr16
mov
daa
mov
fnsetpm(287
inc
loopne
rcr
fld
rcr
xor
mov
addr16
data16
push
pop
test
inc
cmp
inc
loopne
scas
inc
pop
mov
mov
call
sbb
nop
pop
xchg
mov
inc
in
in
cmp
xchg
lock
or
xchg
mov
inc
in
aaa
xor
loopne
(bad)
addr16
aas
in
cmp
fnstenv
cwde
mov
pop
push
in
in
int3
call
xor
xchg
rcr
pop
mov
mov
call
xchg
(bad)
mov
cwde
inc
loopne
loop
loopne
cwde
call
loope
aaa
push
pop
addr16
call
mov
pop
push
mov
push
add
std
loope
movs
mov
loopne
rep
jmp
fwait
inc
xchg
cmps
bound
iret
cwde
fsubp
jbe
mov
jbe
mov
cmps
xchg
inc
loop
pop
push
sbb
dec
loopne
cwde
xchg
call
xor
ficom
mov
test
sbb
pop
mov
cwde
xor
xor
push
popf
adc
inc
loopne
and
dec
fild
loopne
rcr
fist
push
jmp
jnp
xor
inc
loopne
nop
fistp
xor
lds
mov
loop
loopne
cwde
mov
cmp
add
xor
fdiv
mov
test
cdq
xor
int3
out
sub
stos
pushf
inc
loopne
cwde
std
loope
sar
loope
loop
loopne
cwde
(bad)
adc
xor
fdiv
mov
test
cdq
xor
int3
out
sub
int3
cwde
inc
loopne
cwde
std
loope
sar
loope
shr
es
arpl
and
xor
adc
xor
xor
inc
out
out
cmp
int3
cwde
inc
loopne
cwde
std
loope
sar
loope
loop
loopne
cwde
(bad)
int3
cmp
cmp
sbb
lahf
inc
loope
out
cmp
xchg
jmp
pop
xchg
mov
inc
out
out
jnp
hlt
loop
loopne
cwde
mov
loopne
cwde
jle
ss
inc
loope
rcr
dec
pop
xor
cmp
dec
fild
int3
in
adc
cwde
inc
pop
xor
mov
mov
int3
sbb
pusha
mov
xor
mov
loope
data16
mov
inc
loope
aaa
shl
mov
inc
loope
aaa
push
cli
xchg
test
int3
addr16
pop
xor
call
pop
out
jno
xor
loopne
pop
stos
int3
cwde
cmp
aas
pop
inc
loopne
addr16
push
in
cmp
jns
and
adc
pop
int
jp
mov
repz
int3
cdq
inc
xchg
cmps
bound
cwde
fsubp
jbe
mov
jbe
mov
cmps
xchg
inc
loope
fs
es
jb
test
dec
loopne
cwde
mov
loopne
out
cmp
div
loopne
pop
sbb
nop
pop
xchg
mov
inc
in
out
jnp
mov
inc
loope
push
and
cwde
inc
loopne
repz
xor
inc
sbb
dec
arpl
call
(bad)
sbb
loop
loopne
cwde
mov
loope
out
cmp
adc
cwde
call
pop
mov
cwde
call
loopne
mov
xor
fild
xor
cld
mov
cwde
xor
cmp
std
loope
cwde
inc
pop
xor
in
xor
adc
cwde
clc
dec
pop
retf
dec
pop
xor
cmp
dec
fcmovne
or
int3
in
adc
xchg
inc
loope
out
shl
addr16
loopne
cwde
test
int3
addr16
out
cdq
inc
jns
loop
loopne
cwde
mov
mov
inc
loope
mov
inc
loopne
push
xor
int3
cwde
inc
loopne
scas
inc
pop
mov
mov
fdiv
rol
loope
fild
dec
cmp
add
xchg
(bad)
pop
dec
loopne
cwde
out
neg
(bad)
pop
mov
mov
jmp
pusha
xchg
lock
inc
loopne
shr
adc
cld
rdmsr
add
call
cmp
and
lahf
inc
loope
adc
loopne
cwde
jle
ss
inc
loope
and
call
xor
addr16
cld
mov
cwde
xor
fisubr
add
push
cmp
add
int3
cwde
rcr
xor
cmp
dec
fcmovnbe
or
int3
in
adc
xchg
inc
loope
out
fwait
ss
loopne
cwde
test
int3
addr16
call
mov
pop
mov
cwde
cmp
int3
daa
cmp
xor
out
loop
loopne
cwde
inc
sbb
loop
loopne
cwde
clc
dec
mov
cwde
call
in
aaa
push
push
pop
addr16
out
jno
xor
loopne
pop
fld
out
jg
mov
imul
mov
movs
mov
jbe
test
int3
addr16
pop
int
push
lds
addr16
pop
int
sub
ss
loopne
repz
jns
and
test
inc
xchg
cmps
lahf
inc
loope
and
rcr
pop
test
int3
cdq
inc
dec
(bad)
jl
mov
cdq
xor
add
std
loope
cwde
inc
pop
xor
fnsave
jl
test
cdq
xor
loope
aaa
push
mov
imul
fdiv
fimul
cwde
xor
les
loopne
movs
push
ds
std
loope
shr
xchg
repnz
xor
int3
add
int
cvtps2pd
in
sub
pop
or
rcl
cwde
inc
loope
aaa
push
pop
sbb
(bad)
mov
pop
xchg
mov
inc
in
out
jnp
test
inc
and
cwde
mov
loopne
cdq
rcr
pop
push
dec
pop
xor
pop
int
cmp
int3
cwde
inc
loopne
(bad)
mov
fstp
out
jg
hlt
ficom
int3
out
mov
adc
pop
int
jp
mov
repz
int3
cdq
inc
xchg
cmps
bound
int
fsubp
jbe
mov
jbe
xor
jno
push
loopne
cdq
inc
pushf
sti
cwde
clc
lahf
pcmpgtd
out
cdq
inc
loopne
repz
xor
inc
loope
aaa
xor
loopne
pop
fstp
out
pusha
call
enter
mov
inc
in
out
jnp
mov
inc
jecxz
rcr
dec
pop
xor
cmp
dec
fstp
or
int3
in
adc
cwde
inc
pop
xor
cmps
jne
nop
jno
xor
loopne
(bad)
cli
scas
int3
cwde
cmp
aas
mov
inc
loopne
or
cli
pop
mov
cwde
call
loopne
mov
mov
call
mov
loopne
cwde
xor
loopne
jmp
mov
cwde
call
pop
(bad)
cwde
inc
pushf
div
call
inc
imul
inc
loope
push
cmp
int3
adc
pop
mov
cwde
call
out
addr16
in
es
ficom
iret
cwde
inc
push
cvttps2pi
xor
call
int
(bad)
jl
mov
daa
mov
fnsetpm(287
dec
loopne
rcr
fld
fcomp
xor
pusha
ss
jnp
ss
xor
add
pop
cmp
cmp
xor
push
mov
cwde
call
loope
aaa
push
dec
sbb
call
dec
cld
mov
cwde
xor
mov
cwde
cmp
int3
daa
cmp
xor
out
rol
int
mov
loopne
pop
mov
mov
cwde
call
jecxz
(bad)
fidivr
addr16
aas
jmp
sti
cwde
clc
lahf
pcmpgtd
pushf
hlt
mov
cwde
inc
loopne
mov
xor
loopne
scas
inc
pop
mov
mov
stos
int3
cwde
inc
loopne
rol
int
mov
xlat
int3
fwait
inc
dec
pop
sbb
xor
add
dec
fcomi
fcomp
xor
jl
int3
bound
jno
rcr
pop
data16
xor
lds
mov
dec
pusha
xchg
lock
jmp
inc
loopne
addr16
mov
inc
jecxz
aaa
push
mov
hlt
add
mov
mov
cwde
xor
pop
ja
call
std
pop
int3
pop
mov
pop
mov
cwde
cmp
xor
hlt
ja
mov
loop
loopne
cwde
call
jnp
addr16
hlt
and
mov
fbstp
xor
push
push
push
fcomp
rcr
(bad)
call
enter
mov
inc
in
out
jnp
mov
int
int3
bound
jno
xor
add
gs
cwde
cmp
int3
daa
cmp
xor
out
addr16
in
xor
bound
cwde
iret
sbb
and
pop
xor
cmp
pushf
mov
inc
in
cwde
int
fistp
in
xor
cmp
addr16
pop
add
push
addr16
mov
loop
in
cwde
call
pop
pop
mov
pop
xor
scas
jle
addr16
pop
mov
push
loopne
cwde
mov
loopne
cwde
mov
xchg
jmp
pusha
xchg
lock
sti
cwde
clc
lahf
pcmpgtd
dec
mov
cwde
out
xchg
dec
outs
inc
sub
movs
in
xor
cmp
pushf
mov
inc
in
cwde
mov
cmp
inc
loopne
nop
jecxz
xor
cmp
addr16
int3
xchg
inc
loopne
add
push
addr16
mov
xor
pop
int3
rol
int
xor
loopne
in
std
pop
int3
pop
mov
pop
mov
cwde
inc
sbb
lahf
inc
adc
(bad)
push
inc
xor
sub
addr16
loopne
or
mov
inc
ins
cmp
fsub
pop
cmps
das
addr16
pop
xor
dec
mov
aas
push
jnp
jge
mov
pop
xor
pusha
cs
jnp
xchg
xchg
inc
jecxz
cmp
inc
loopne
in
out
fwait
inc
pop
mov
in
jle
addr16
mov
inc
loop
addr16
pop
xor
pop
iret
aaa
shl
arpl
xchg
jbe
inc
outs
aaa
(bad)
adc
jle
into
cwde
inc
loopne
cwde
mov
jne
(bad)
adc
addr16
xor
inc
loopne
addr16
loopne
in
std
pop
int3
pop
mov
pop
mov
cmp
xor
cmp
inc
loopne
cwde
retf
sbb
jnp
pop
cmp
pop
aas
aaa
push
inc
ficomp
mov
jnp
inc
jne
(bad)
push
inc
xor
sbb
sbb
outs
xor
in
pop
inc
dec
xor
push
push
xor
cwde
inc
inc
mov
ja
jne
pop
inc
xor
in
addr16
sti
int3
fwait
inc
xchg
lock
jecxz
adc
sahf
int
lahf
pop
xor
lods
sahf
int
lahf
pop
xor
mov
int
lahf
pop
xor
pop
int3
cwde
inc
xchg
jbe
mov
jae
call
loopne
in
out
int3
fwait
inc
pop
inc
imul
cmp
sub
xchg
arpl
sbb
addr16
add
mov
pop
xor
call
mov
mov
mov
adc
call
enter
dec
fwait
(bad)
repz
loop
loopne
cwde
xor
add
test
int3
fwait
inc
xchg
mov
inc
loopne
cwde
call
test
inc
loopne
cwde
sbb
fdivr
test
fwait
inc
loop
out
inc
push
icebp
in
cmp
ficomp
lods
loope
call
shr
call
inc
xchg
jbe
(bad)
mov
inc
loop
addr16
pop
xor
std
jecxz
jecxz
loope
call
jno
cmp
xor
movs
jne
bswap
out
jno
xor
loopne
(bad)
xor
pop
inc
loopne
addr16
ficom
pop
xor
cli
pop
mov
cwde
call
loopne
mov
mov
sti
int3
fwait
inc
xchg
lock
cli
pop
mov
cwde
call
loopne
mov
inc
jecxz
out
loopne
addr16
loopne
addr16
cmp
add
hlt
sub
call
xchg
fnstsw
call
iret
cwde
call
test
inc
loopne
cwde
mov
arpl
push
inc
loopne
and
loop
loopne
cwde
push
mov
cwde
inc
sahf
rcr
pop
xor
pusha
cs
jnp
inc
fwait
xor
loopne
jmp
fist
pop
xor
inc
loopne
cwde
call
pop
int3
bound
jno
rcr
pop
or
pop
xor
cmp
dec
(bad)
adc
int3
in
pop
push
cwde
inc
pop
xor
loopne
jmp
pop
xchg
mov
inc
jecxz
out
jnp
xor
inc
loopne
cwde
call
das
fistp
cmp
pushf
retf
cwde
int
fistp
xor
cmp
addr16
pop
add
ins
addr16
pop
cmp
pop
aas
aaa
push
lods
fstp
push
push
imul
out
jno
xor
loopne
(bad)
sahf
mov
cwde
cmp
aas
out
jg
lock
inc
loopne
addr16
pop
xor
fwait
push
call
aaa
pop
and
sbb
int
stos
xchg
mov
inc
loopne
cwde
test
dec
arpl
jne
int
dec
mov
push
call
add
test
int3
cdq
inc
dec
fstp
pop
xor
cmp
jne
nop
jno
xor
loopne
(bad)
adc
mov
adc
xor
push
pop
adc
pop
xor
cmp
dec
fucomi
adc
int3
in
add
cwde
cmp
int3
cwde
mov
call
inc
ss
pushw
arpl
call
xor
mov
mov
int3
pushw
xor
int3
bound
jno
push
or
loop
loopne
cwde
xor
mov
lahf
inc
jecxz
or
xor
loopne
in
std
pop
int3
push
push
mov
addr16
jecxz
in
loopne
jno
cli
gs
pop
inc
ins
sar
or
pop
xor
push
(bad)
mov
xchg
inc
jecxz
(bad)
jbe
xor
dec
cmp
cli
pop
int3
bound
jno
push
or
inc
cmps
loop
mov
call
out
push
sub
fs
int
mov
and
inc
mov
sub
xor
sbb
out
xcrypt-cfb
cmps
data16
pop
fist
xor
push
bound
mov
out
lahf
xor
push
out
bt
adc
push
pop
xor
push
jle
addr16
out
mov
inc
pop
mov
mov
pop
arpl
xor
cwde
mov
(bad)
mov
xor
inc
push
cmp
daa
gs
mov
mov
push
dec
xor
sbb
addr16
icebp
jno
xor
les
inc
loopne
mov
mov
punpckldq
jns
fldenv
cmps
ss
out
push
fdiv
inc
xchg
cmps
cwde
inc
loopne
out
dec
push
ret
out
jle
jbe
mov
inc
xor
test
jle
test
mov
popf
mov
aad
mov
xchg
icebp
in
jle
repz
int
inc
lahf
jbe
mov
pop
inc
lods
jle
xor
inc
loopne
pop
inc
xor
ffree
movs
mov
sbb
cwde
inc
sub
loop
loopne
cwde
mov
cmc
jmp
pop
xchg
pop
xor
gs
jno
xor
loopne
(bad)
loop
xor
pop
pop
rcr
pop
rcr
pop
addr16
in
cwde
inc
dec
fld
pop
xor
cmp
loopne
outs
add
jmp
dec
in
xor
dec
push
ret
out
jle
xor
cmp
dec
pop
data16
pop
xor
mov
jno
inc
stos
(bad)
call
xor
inc
div
xor
fbstp
jmp
test
loope
cwde
call
pop
mov
gs
xor
call
jl
jno
xor
loopne
(bad)
pop
xor
push
pop
xor
loopne
repz
xor
adc
jno
shr
mov
inc
loopne
aaa
rcr
xor
not
addr16
out
mov
mov
pop
pop
add
xor
mov
pop
xor
pushf
div
out
push
cmp
aas
xor
dec
mov
push
enter
xchg
cmps
cmps
cli
pop
mov
mov
xor
pop
iret
aaa
rcr
pop
pop
mov
jne
or
inc
push
(bad)
inc
addr16
xor
cmp
int3
daa
cmp
xor
out
and
inc
lahf
out
jne
or
inc
push
(bad)
test
xor
les
std
jmp
mov
scas
inc
xor
inc
push
sub
pusha
xor
xchg
inc
outs
pop
ret
push
xor
les
jg
add
mov
pop
retf
out
jg
int3
addr16
test
cmp
int3
daa
cmp
xor
out
mov
xchg
pusha
jle
add
mov
loopne
sbb
ins
cmp
fsub
pop
dec
arpl
out
mov
mov
cli
push
xor
out
lahf
xor
pop
rcr
mov
jne
(bad)
pop
xor
mov
addr16
mov
inc
push
push
js
or
inc
push
retf
out
jg
xor
push
dec
fs
jecxz
cwde
int
int3
adc
xor
push
out
addr16
push
mov
and
hlt
cmp
(bad)
lock
cli
mov
test
xor
pop
arpl
repz
retf
dec
inc
xchg
hlt
or
mov
pop
pop
rcr
xor
loopne
outs
push
fisub
mov
loopne
jnp
bound
addr16
sbb
addr16
inc
addr16
jmp
mov
rcr
gs
addr16
mov
test
pop
daa
push
pop
gs
out
xor
(bad)
out
jg
xor
lds
xor
mov
jbe
xor
mov
pop
ret
cwde
int
pusha
cwde
int
gs
fimul
addr16
popf
adc
dec
xor
pop
iret
mov
xchg
hlt
cmp
inc
cli
movs
in
xchg
(bad)
ss
add
retf
push
inc
xchg
hlt
fistp
dec
xor
clc
mov
or
mov
pop
pop
rcr
xor
loopne
outs
push
sbb
mov
loopne
arpl
sbb
gs
xchg
dec
xor
out
lahf
xor
mov
in
loopne
out
push
xor
inc
xchg
lock
jmp
loopne
pop
xor
call
in
jno
out
test
push
dec
xor
lock
mov
pop
xor
out
cli
movs
in
xchg
(bad)
in
das
pusha
xor
movs
data16
inc
mov
inc
cmp
addr16
jbe
mov
pop
mov
push
pop
mov
pop
pop
mov
push
pop
pop
xor
mov
mov
xor
bound
data16
push
mov
xor
push
std
loopne
dec
xor
xor
std
loopne
sar
sbb
in
add
and
cwde
mov
repz
pusha
cs
jnp
pop
cwde
mov
push
in
std
adc
clc
sbb
sbb
jnp
pop
addr16
adc
cmps
cmps
push
jbe
cmp
gs
mov
push
sbb
mov
data16
addr16
mov
xor
push
rcr
pop
mov
shr
std
cmp
jp
jbe
add
shr
std
ret
mov
out
jo
jbe
mov
jle
dec
(bad)
mov
xor
aas
push
in
pop
cmp
jmp
test
sti
mov
daa
mov
outs
mov
popa
outs
xchg
iret
xor
pop
xchg
jmp
pop
xchg
jbe
xor
mov
out
pusha
call
mov
scas
jnp
mov
xor
dec
mov
lahf
push
fs
dec
cmp
icebp
stc
pop
xor
(bad)
push
xchg
jno
add
xor
in
xchg
in
std
out
movs
xchg
fnstsw
mov
sub
pop
mov
pop
xor
sub
cli
pop
mov
pop
xor
jle
cmp
push
adc
push
mov
scas
xor
nop
fst
mov
lahf
jle
les
or
nop
sbb
int
mov
inc
sbb
ins
cmp
data16
jbe
sti
mov
inc
push
inc
addr16
neg
fs
xchg
sbb
mov
movs
addr16
push
mov
fucom
mov
lahf
mov
jo
test
xor
bound
pop
xor
pop
xor
out
adc
test
xchg
icebp
in
sbb
in
sbb
cmp
jae
mov
sahf
pop
lahf
mov
test
xor
mov
sbb
sar
push
push
cmps
mov
pop
xor
sbb
sar
pop
inc
ins
dec
pop
xor
sbb
or
push
addr16
lahf
dec
xchg
mov
mov
inc
loopne
mov
scas
xchg
xor
dec
(bad)
pop
cld
or
adc
hlt
cmp
std
jmp
pop
cmps
push
add
jbe
xor
push
mov
lahf
jbe
mov
inc
ins
cmp
fcom
sub
and
mov
pop
xor
add
and
int3
(bad)
mov
sub
mov
outs
sub
mov
imul
(bad)
mov
imul
(bad)
jae
sub
mov
mov
add
repz
dec
pop
xor
add
adc
sub
mov
outs
sub
aaa
imul
(bad)
(bad)
mov
imul
(bad)
push
imul
(bad)
mov
xchg
inc
loopne
pop
sub
(bad)
pop
xor
sub
lods
adc
std
ins
jae
sub
in
lock
outs
sub
mov
arpl
(bad)
mov
imul
arpl
imul
(bad)
mov
imul
pushf
or
(bad)
mov
imul
jle
imul
(bad)
mov
fwait
inc
pop
and
mov
sbb
push
int3
pop
repz
mov
fcom
sub
and
mov
(bad)
mov
imul
(bad)
mov
mov
dec
mov
mov
pop
xor
xor
mov
cmps
sub
mov
imul
(bad)
mov
imul
pop
nop
sub
mov
imul
(bad)
mov
push
int3
pop
push
sub
mov
xchg
sub
repz
mov
dec
mov
jae
pop
xor
xor
mov
cmps
sub
mov
imul
(bad)
mov
imul
pop
nop
sub
mov
imul
(bad)
mov
xchg
xchg
pop
push
sub
mov
xchg
sub
mov
mov
fsub
pop
pushf
fistp
dec
fs
std
adc
std
adc
out
pusha
ss
jnp
shr
std
out
mov
mov
push
std
xor
xchg
jbe
mov
jecxz
cwde
loope
icebp
out
in
loopne
mov
push
xchg
lock
loopne
adc
hlt
sbb
xor
fild
xor
sbb
addr16
xchg
retf
xchg
sahf
xor
mov
sahf
xor
mov
outs
xor
xor
pop
(bad)
push
xor
mov
jle
xchg
aad
ja
pop
cmp
sbb
addr16
mov
daa
mov
and
push
int
jb
and
pusha
ss
jnp
cmp
sub
xor
pop
lds
push
repnz
addr16
dec
mov
aaa
xor
dec
int
push
pop
xor
call
out
arpl
cmp
pop
out
pusha
call
mov
add
(bad)
push
sbb
int3
cwde
out
push
cmp
add
dec
(bad)
icebp
fild
out
dec
cs
out
jle
scas
xor
mov
faddp
lea
fmulp
js
aad
mov
xchg
icebp
out
in
lock
int
xor
and
adc
sbb
cwde
imul
mul
inc
loopne
mov
js
mov
mov
(bad)
fsub
test
and
sar
jno
xor
jl
(bad)
mov
pop
xor
xor
fs
pop
sbb
aad
mov
fwait
aad
mov
pop
xor
pusha
sbb
jecxz
pop
xor
arpl
cmp
sub
xor
jno
xor
mov
pop
xor
pusha
sbb
fwait
xor
mov
ja
pop
iret
arpl
xchg
aad
mov
pop
xor
jecxz
mov
mov
or
in
lods
adc
mov
inc
pop
addr16
mov
xor
stc
jno
sbb
ss
div
sbb
test
push
shl
enter
stc
jno
push
jp
addr16
inc
bound
xchg
dec
mov
test
out
jp
test
outs
xchg
push
sti
pop
pop
xor
dec
cs
out
jle
jae
sar
addr16
xor
stc
jno
call
pop
mov
mov
mov
and
out
xchg
ins
addr16
jmp
jb
stc
jno
mov
mov
dec
sbb
fs
es
retf
repz
pop
xor
std
out
fdivr
(bad)
xor
dec
xchg
es
pop
pop
xor
xchg
ret
nop
pop
xchg
jbe
xor
mov
dec
sbb
fs
es
retf
mov
cli
pop
cmp
in
lock
xor
cmps
(bad)
pop
pop
xor
mov
aad
mov
cmps
push
addr16
iret
mov
pop
cmp
jno
mov
data16
mov
and
pop
pop
xor
mov
mov
push
push
inc
arpl
jb
jg
test
(bad)
fs
dec
fneni(8087
inc
loopne
in
pop
mov
mov
rcr
pop
addr16
pop
fild
pop
xor
std
sti
mov
and
pop
mov
adc
int3
adc
sub
test
mov
test
cmp
fsub
pop
dec
fsub
jnp
cmp
iret
add
pop
mov
mov
jno
mov
push
retf
out
jg
jbe
sbb
and
push
push
addr16
pop
mov
mov
rcr
pop
mov
pop
xor
dec
data16
rcr
pop
addr16
bound
mov
pop
xor
jno
data16
pop
dec
fdivr
push
sbb
mov
jno
mov
pop
xor
mov
pop
push
mov
push
ja
nop
test
xor
test
cdq
rcr
adc
pop
mov
cmp
xor
pop
cmp
std
loope
cmps
cwde
push
xor
or
(bad)
pop
int3
push
mov
pop
cmp
std
loope
cmps
cwde
push
xor
or
(bad)
pop
mov
test
xor
mov
jbe
inc
mov
pop
mov
mov
pop
push
cwde
std
loope
sar
loope
lahf
mov
cwde
lea
mov
mov
jbe
cmp
cmp
cli
pop
xor
jno
data16
pop
dec
arpl
fld
inc
xor
add
mov
jno
mov
loopne
pop
(bad)
jbe
mov
test
cdq
rcr
adc
pop
mov
cmp
xor
sbb
std
loope
jle
loopne
cdq
mov
jbe
cmp
add
outs
xchg
sti
nop
pop
xchg
jbe
xor
mov
inc
(bad)
lock
cli
bound
jmp
fs
lds
lea
push
gs
dec
call
mov
xor
jge
mov
bound
addr16
push
push
mov
push
or
std
loope
pop
mov
test
cdq
jle
xor
fsubp
jbe
out
test
shl
loope
movs
(bad)
xchg
addr16
jbe
lock
punpcklbw
imul
frstor
neg
xor
jl
fsub
(bad)
jbe
mov
test
cdq
cmp
xor
int
cmp
std
loope
arpl
loope
(bad)
push
push
xor
test
cdq
sbb
add
std
loope
out
sbb
mov
test
inc
push
cmc
arpl
(bad)
lock
cli
fsubr
push
and
fcomp
sbb
cmps
jno
mov
pop
int3
push
push
bnd
mov
pop
pop
addr16
push
(bad)
cmp
addr16
aas
out
xchg
ja
mov
pop
fnsetpm(287
lock
xor
inc
push
retf
out
jg
outs
movs
in
xchg
(bad)
in
aas
pusha
xor
mov
mov
movs
jg
addr16
fbstp
pop
xor
dec
or
xchg
cs
pop
xor
inc
push
retf
out
jg
jae
mov
sub
(bad)
pop
fild
pop
xor
mov
pop
nop
mov
pop
xor
fucomp
xor
aaa
xor
clc
mov
add
ret
gs
fbld
cmp
addr16
push
out
in
in
pop
ja
pop
ret
aaa
inc
sub
aad
pop
fisttp
pop
xor
jg
aas
addr16
iret
and
rcr
mov
fdiv
pop
xor
jl
mov
mov
xor
sub
aad
pop
fild
jle
fadd
pop
xor
inc
loopne
jecxz
pop
xor
cmps
into
cwde
inc
xchg
lock
loopne
cmp
fcom
mov
jb
cmps
jno
xor
xor
inc
push
retf
out
jg
jbe
call
aas
xor
sbb
outs
add
aaa
rol
xor
mov
push
xor
push
frstor
mov
pop
mov
movs
dec
fstp
hlt
pop
xor
jl
fsub
div
ja
pop
mov
jo
pop
xor
jl
mov
and
hlt
mov
loopne
cwde
out
push
cmp
cmp
pop
pusha
xor
mov
mov
(bad)
pop
xor
pop
cmp
js
arpl
cmp
dec
(bad)
pop
xor
jl
mov
mov
push
add
std
loopne
fstp
xor
mov
jbe
jle
ss
inc
loopne
dec
cmp
xor
cdq
inc
loopne
(bad)
rcl
addr16
inc
cwde
sbb
pop
sub
cmp
dec
(bad)
jle
mov
cwde
rcr
pop
sub
cmp
dec
fcmovne
cs
out
jle
mov
cwde
cmp
arpl
pop
cmp
cmp
fnstenv
cwde
mov
loope
cwde
jle
ss
inc
loopne
addr16
add
inc
loope
cwde
call
dec
js
mov
loopne
push
inc
loopne
and
push
xor
fdivr
cwde
xor
xor
inc
loope
cwde
mov
cmps
popf
inc
loopne
jmp
jns
mov
fdivr
cwde
mov
mov
push
stos
retf
loopne
ror
aad
mov
cmp
jg
ins
cmp
fsub
pop
sahf
fild
pop
xor
dec
mov
nop
pop
js
jg
add
cmps
scas
or
call
xor
out
xor
rcr
mov
cwde
call
dec
fld
loopne
in
adc
nop
pop
xchg
mov
inc
loopne
out
jg
mov
inc
loopne
aaa
push
xor
mov
loope
cwde
mov
xchg
mov
inc
loopne
aaa
xor
in
add
jae
int3
cwde
inc
push
jmp
pop
and
xor
cmp
dec
(bad)
repnz
xor
jl
mov
mov
inc
loopne
(bad)
jp
xor
fnstcw
in
push
inc
je
in
loop
imul
int
inc
dec
fild
xor
mov
pop
pop
rcr
xor
xchg
mov
inc
loopne
aaa
push
retf
mov
push
retf
out
jg
int
int
pop
pop
push
pop
xor
rcr
arpl
xor
xor
cwde
mov
mov
mov
out
mov
xchg
out
mov
jmp
mov
pop
mov
cwde
jmp
xchg
mov
xchg
retf
inc
xchg
hlt
jmp
fistp
xor
inc
loope
cwde
out
xchg
dec
outs
inc
sub
dec
sti
pop
xor
push
push
jbe
mov
fsub
pop
sahf
fild
pop
xor
out
mov
mov
mov
xor
out
xor
rcr
mov
cwde
call
dec
fcmovnb
inc
loopne
in
adc
addr16
loopne
(bad)
addr16
ss
inc
loopne
addr16
es
xor
cdq
inc
loopne
in
std
pop
mov
movs
dec
fist
inc
loopne
cwde
int
mov
cwde
call
pop
mov
cwde
call
pop
mov
movs
sahf
fdiv
mov
loopne
aaa
push
jle
addr16
xchg
mov
inc
loopne
aaa
sar
frstor
inc
loopne
aaa
push
(bad)
jnp
mov
out
lahf
xor
mov
cwde
call
pop
pop
addr16
loopne
xor
push
cwde
mov
ja
mov
and
and
mov
ja
mov
pop
mov
(bad)
sahf
pop
xor
lock
mov
fsub
pop
sahf
fild
pop
xor
out
mov
mov
loop
loope
cwde
xor
pop
xor
cdq
inc
loopne
in
std
pop
mov
movs
dec
fcmovnb
inc
loopne
out
inc
cs
out
jg
inc
imul
arpl
std
icebp
jno
xor
loopne
(bad)
sahf
push
xor
fld
jmp
fcomi
sti
pop
xor
cmp
xchg
cmc
in
push
mov
mov
into
fnsave
inc
loope
cwde
out
test
fiadd
int3
cwde
test
pop
jmp
(bad)
js
imul
icebp
jno
push
jb
addr16
add
inc
outs
inc
sub
add
pop
xor
inc
ss
out
jg
gs
fisttp
imul
mov
es
mov
add
inc
outs
inc
sub
dec
stc
pop
xor
inc
push
retf
out
jg
adc
test
jno
push
or
mov
paddusw
inc
sub
ins
stc
pop
xor
dec
xor
ins
scas
jnp
mov
mov
xor
mov
mov
mov
rcr
mov
cwde
call
fild
aaa
push
cdq
retf
cwde
inc
xchg
ret
nop
pop
xchg
mov
inc
loopne
out
jle
inc
imul
arpl
std
icebp
jno
xor
loopne
(bad)
mov
fld
jmp
fist
cli
pop
xor
jg
icebp
in
push
mov
mov
into
fnstenv
dec
loope
cwde
jmp
rcr
mov
jne
(bad)
pop
xor
xor
loopne
(bad)
xor
xor
in
loopne
push
ror
frstor
mov
ja
mov
pop
mov
pop
movs
xor
cmps
clc
jbe
pop
les
inc
loopne
mov
mov
pop
pop
addr16
pop
mov
(bad)
mov
xor
pop
mov
mov
pop
xor
fcomp
rcr
mov
mov
loopne
arpl
or
mov
inc
xor
stc
mov
cwde
xor
cmp
inc
push
mov
out
xor
loopne
fwait
push
mov
addr16
pop
int3
pop
mov
pop
mov
outs
xor
jmp
stos
and
pop
pop
addr16
pop
mov
(bad)
and
addr16
dec
and
inc
not
xchg
and
addr16
push
cmp
daa
mov
xor
xchg
outs
outs
pop
js
movs
rcl
push
inc
xchg
hlt
in
std
adc
or
inc
loopne
aaa
xor
daa
call
loopne
mov
scas
pop
xor
cmp
dec
fstp
pop
xor
inc
loopne
mov
jmp
cwde
inc
dec
mov
aaa
push
mov
retf
nop
pop
xchg
mov
inc
loopne
out
jg
inc
imul
arpl
std
icebp
jno
xor
loopne
pop
fld
or
mov
pop
pop
rcr
xor
xchg
mov
inc
loopne
aaa
push
bnd
mov
out
adc
pop
fcmovnb
cli
pop
xor
push
pop
xor
mov
pop
xor
inc
loopne
out
jg
xchg
addr16
pop
xor
rcr
arpl
mov
sub
adc
pop
xor
inc
ss
out
jg
xor
mov
pop
jb
mov
xchg
jbe
call
pop
gs
int
fnsetpm(287
stc
pop
xor
inc
call
int
inc
xchg
hlt
in
jecxz
adc
jecxz
cwde
retf
sbb
dec
xchg
xor
inc
push
retf
out
jg
neg
test
xor
dec
bnd
push
push
jno
mov
jmp
add
xor
les
inc
loopne
mov
mov
idiv
daa
mov
(bad)
lock
cli
mov
mov
and
addr16
fcom
sub
call
into
cdq
inc
xchg
lock
int3
or
xchg
mov
inc
loope
jmp
aas
addr16
hlt
daa
pop
mov
pop
xor
rcr
arpl
push
bnd
xor
cwde
(bad)
div
xor
call
mov
movs
dec
fild
loopne
in
adc
cmp
addr16
mov
cwde
call
pop
mov
cwde
call
pop
mov
mov
sub
loop
loop
cwde
call
pop
mov
cwde
call
pop
mov
test
lock
rcr
xor
lds
xor
cmps
ja
mov
pop
(bad)
pop
xor
push
pop
xor
lds
int3
adc
fsub
call
cmp
dec
mov
cwde
call
pop
mov
cwde
cmp
addr16
test
pop
mov
inc
adc
jmp
mov
cwde
call
pop
mov
cmp
addr16
loopne
push
inc
loopne
push
inc
loopne
push
inc
loopne
push
inc
loopne
cmp
int
out
loopne
xchg
int3
in
add
pushf
aam
mov
mov
test
cmps
movs
xor
pop
fcmove
loop
cwde
(bad)
pushf
hlt
dec
out
ja
mov
pop
mov
cwde
out
not
mov
pusha
xchg
lock
fild
pop
xor
or
int
out
xchg
dec
outs
inc
push
xor
call
or
mul
cmps
mov
and
sbb
addr16
loopne
jmp
fld
repz
inc
dec
cmp
cmp
dec
cmp
cmp
dec
cmp
cmp
dec
cmp
add
(bad)
gs
loope
xor
rcr
js
int3
cwde
cmp
and
pushf
int3
ja
mov
out
sub
je
pop
inc
loope
push
cmp
push
xor
mov
and
inc
loope
xor
jb
mov
fsub
loop
loope
cwde
call
pop
pop
addr16
loope
xor
bound
cwde
iret
sbb
xor
pop
xor
inc
stos
lahf
cdq
inc
loopne
aam
pop
xor
pusha
ss
jnp
jbe
inc
outs
aaa
pop
and
fisub
mov
ja
mov
pop
mov
(bad)
scas
and
addr16
push
cmp
daa
mov
xor
xchg
inc
outs
xor
fcomp
sub
call
int
inc
xchg
hlt
fistp
xor
clc
mov
cwde
xor
pop
xor
cdq
inc
loopne
out
dec
pushf
repz
test
mov
or
call
mov
pop
xor
xor
call
inc
loope
cwde
call
pop
mov
mov
imul
mov
mov
out
mov
movs
dec
fist
xchg
xor
jp
mov
push
les
das
dec
int
mov
mov
jle
ss
inc
loopne
rcr
mov
aaa
xor
loopne
pop
int3
cwde
cmp
aas
mov
pop
xor
lock
pop
push
cwde
cmc
loope
sar
loope
cmps
(bad)
stos
add
mov
xor
or
(bad)
jae
rcl
ret
xchg
mov
inc
loopne
aaa
push
jle
addr16
les
addr16
repz
inc
xchg
hlt
mov
lahf
dec
data16
rcl
ret
xchg
mov
inc
loopne
aaa
push
sub
mov
fsubr
sub
xchg
mov
inc
loopne
aaa
rcl
mov
inc
loopne
aaa
push
push
jae
mov
out
lahf
xor
mov
cwde
call
pop
mov
inc
imul
mov
add
cmp
dec
fistp
loopne
in
adc
mov
mov
inc
cli
movs
in
xchg
(bad)
in
or
out
xchg
inc
outs
pop
inc
jo
(bad)
xchg
retf
inc
xchg
hlt
or
mov
pop
mov
mov
pop
xor
std
out
arpl
cmp
aas
add
ret
gs
xchg
hlt
push
push
(bad)
or
xchg
lock
inc
shr
pushf
repz
out
mov
jne
jmp
fcomi
sbb
in
loopne
pop
cmp
addr16
int3
adc
loopne
in
pop
mov
mov
inc
imul
xor
retf
pushf
imul
fmul
sbb
sbb
and
push
ffreep
cwde
inc
pushf
imul
push
pop
ja
pop
xor
rcr
arpl
test
jno
inc
sub
les
sbb
inc
sbb
out
inc
call
mov
scas
jnp
mov
bound
xchg
outs
outs
pop
fs
adc
hlt
in
scas
pop
xor
inc
push
retf
out
jg
push
push
mov
call
shl
and
mov
ja
mov
pop
int3
push
push
pop
or
jne
(bad)
sbb
addr16
loopne
cwde
mov
sub
pop
mov
lahf
xor
cmp
inc
push
xor
(bad)
ret
cwde
inc
inc
cmc
jecxz
pop
iret
cwde
inc
pop
mov
cwde
xor
add
inc
loopne
lahf
dec
clc
mov
cwde
xor
pop
arpl
loopne
jmp
fistp
mov
pop
mov
cwde
call
loopne
mov
mov
push
pop
pop
push
pop
xor
cmp
dec
fstp
loopne
in
adc
jecxz
pop
iret
cwde
inc
pop
mov
pop
arpl
rcr
push
pop
xor
cmp
dec
fistp
adc
cwde
inc
pop
xor
cmps
jne
bswap
bnd
xor
loopne
(bad)
xchg
int3
cwde
cmp
aas
mov
inc
loopne
in
cmp
and
std
dec
cmp
(bad)
sbb
mov
push
mov
dec
ja
mov
cli
fs
sbb
test
and
pop
xor
test
aaa
std
adc
sbb
pop
cmp
xor
jge
addr16
pop
cmp
jae
xor
dec
aaa
addr16
dec
inc
cmp
xor
xor
cmp
xor
pusha
and
dec
jl
mov
mov
pop
fimul
pop
xor
pop
pusha
xor
fwait
aaa
fs
pop
xor
push
pusha
xor
pop
dec
ja
dec
jbe
in
adc
mov
xor
dec
push
in
adc
mov
xor
sbb
push
pop
xor
cmp
dec
fisttp
jl
push
cwde
inc
pop
xor
aam
xor
addr16
loopne
(bad)
cwde
cmp
aas
pop
inc
loopne
addr16
mov
cwde
call
loopne
aaa
push
outs
ret
cwde
inc
xchg
jo
cmp
mov
loop
in
cwde
call
adc
and
addr16
and
shl
jno
push
or
addr16
jbe
and
mov
xor
pusha
xor
ja
mov
pop
fist
mov
pop
xor
mov
out
mov
mov
adc
out
sbb
cwde
inc
xor
cmp
pop
adc
xchg
mov
inc
loopne
aaa
push
stos
or
xchg
mov
inc
loopne
out
cmps
push
addr16
loopne
arpl
xchg
mov
inc
loopne
out
jp
icebp
arpl
mov
addr16
loopne
out
sub
xor
push
in
cwde
xor
or
push
in
cwde
retf
fidivr
cmp
mov
in
enter
imul
or
cwde
cmp
ss
rcr
pusha
(bad)
fs
cwde
cmp
aas
out
inc
cs
out
jg
test
pop
mov
mov
inc
jb
call
mov
test
fisub
xor
fs
addr16
or
cwde
cmp
ss
rcr
int3
cwde
cmp
aas
out
inc
push
retf
out
jg
pop
gs
jecxz
cwde
cmp
aaa
aaa
jmp
loopne
inc
loopne
mov
cli
xchg
jmp
js
arpl
jecxz
jno
xor
loopne
(bad)
call
out
push
adc
xchg
mov
inc
loopne
aaa
push
mov
addr16
mov
popf
inc
loopne
cwde
mov
xchg
push
mov
pop
xor
xor
addr16
xchg
or
jne
aaa
shl
(bad)
cmp
xor
in
xor
lahf
mov
loopne
addr16
cmp
cwde
cmp
ss
jmp
jnp
inc
loopne
mov
mov
call
push
fdiv
addr16
pop
fistp
xor
push
pop
xor
mov
pop
xor
add
pop
inc
jns
call
mov
lock
cwde
cmp
cmp
push
cmp
test
pop
pop
pop
push
pop
xor
rcr
arpl
xor
addr16
sub
mov
push
xor
out
lahf
xor
pop
sub
xor
rcr
arpl
div
jno
inc
sub
lods
mov
xor
push
sub
addr16
pop
pop
and
pop
xor
rcr
arpl
sti
bnd
inc
sub
ror
pusha
addr16
pop
pop
ja
pop
xor
rcr
arpl
test
jno
inc
sub
in
pop
xor
dec
popa
xor
clc
mov
cwde
xor
fiadd
pusha
pushf
repz
ja
mov
pop
mov
cwde
call
pop
mov
mov
mov
mov
call
xor
loopne
(bad)
rcr
arpl
sub
dec
int3
push
push
add
imul
dec
push
pop
xor
rcr
arpl
xchg
bnd
inc
sub
ins
mov
xor
push
inc
or
mov
pop
iret
cwde
inc
pushf
repz
dec
fld
jl
mov
lock
addr16
inc
mov
mov
push
setns
jno
push
rol
aaa
sar
fisub
jle
xor
push
pop
jne
pop
xor
rcr
arpl
stos
bnd
inc
sub
int3
mov
xor
dec
(bad)
push
addr16
bnd
push
mov
aaa
rcr
fisub
xor
add
inc
loopne
cmp
inc
cli
movs
in
xchg
(bad)
ss
cdq
jge
shl
xor
iret
out
jg
inc
outs
rcr
pop
push
jbe
addr16
call
mov
arpl
push
gs
jle
xor
fsub
out
sub
addr16
fsub
out
lahf
xor
ins
cmp
(bad)
lock
cli
mov
fcomp
fs
add
jnp
pop
mov
push
inc
xchg
hlt
add
in
inc
loopne
addr16
les
inc
loopne
mov
mov
pop
xor
xor
pop
mov
push
loop
addr16
outs
push
addr16
pop
int3
sar
cwde
push
cli
add
xchg
mov
inc
loopne
vmwrite
jno
inc
stos
neg
mov
xor
cmp
push
call
mov
addr16
mov
mov
sbb
jecxz
inc
loopne
loop
loope
cwde
nop
push
xor
mov
and
push
jb
addr16
xchg
hlt
push
arpl
int3
push
mov
cwde
call
loopne
cwde
sub
push
repz
(bad)
int
inc
dec
int3
shr
int3
cwde
inc
mov
cdq
inc
loopne
cmps
int3
and
lahf
xchg
out
mov
cmp
xchg
mov
inc
loopne
aaa
inc
stos
rcr
cmp
dec
gs
repz
out
mul
mov
xchg
retf
dec
inc
xchg
hlt
mov
loopne
mov
loopne
(bad)
mov
out
lahf
xor
int3
sar
cwde
push
jmp
outs
loope
cwde
out
push
add
mov
mov
pop
pusha
xor
xchg
dec
outs
push
and
inc
scas
xchg
ret
push
dec
xchg
cmc
push
arpl
xor
fucom
xor
mov
mov
addr16
fwait
int
mov
dec
int3
adc
cmp
inc
sbb
addr16
neg
dec
mov
pop
xor
dec
ss
out
jle
xor
std
jecxz
or
mov
jp
addr16
xor
fwait
mov
xchg
jbe
call
jne
cwde
iret
pand
pop
xor
dec
ss
out
jle
dec
fwait
mov
pop
xor
pop
pop
addr16
pop
jae
mov
loopne
aaa
mov
inc
ins
xor
out
cmp
hlt
cmp
call
mov
cwde
inc
stos
retf
sbb
(bad)
xor
dec
call
dec
cwde
inc
xchg
cmc
jmp
mov
cwde
call
pop
pop
addr16
push
jmp
int3
push
push
mov
addr16
xchg
cmc
push
arpl
daa
in
pop
inc
push
xchg
pop
xor
pop
xor
out
push
xor
cli
mov
mov
xor
push
in
in
mov
mov
cmp
inc
cs
out
jg
(bad)
mov
xor
ins
ss
js
fcomp
sub
lahf
mov
mov
addr16
push
xor
push
addr16
int
mov
mov
out
in
jecxz
and
aaa
jns
or
std
jmp
mov
out
cli
movs
in
xchg
(bad)
out
adc
addr16
push
fsub
out
lahf
xor
mov
mov
mul
fs
push
cwde
mov
pop
dec
mov
sbb
addr16
adc
pop
mov
pop
cmp
addr16
loopne
or
sub
or
jb
xor
imul
push
mov
out
mov
mov
pop
iret
cwde
inc
dec
int3
push
push
sahf
sbb
fwait
inc
loopne
in
loopne
arpl
sub
ins
xchg
pop
xor
inc
loopne
aaa
rcr
pop
call
cwde
into
pop
(bad)
mov
xor
test
xor
clc
mov
cwde
xor
gs
sbb
addr16
repz
push
xor
call
mov
pop
mov
loop
in
cwde
xor
pop
not
jmp
(bad)
xor
jl
cmp
clc
pop
xor
mov
not
pushf
inc
loopne
out
inc
push
retf
out
jg
fist
dec
pusha
cwde
mov
ret
dec
mov
pop
xor
inc
cs
out
jg
xor
addr16
loopne
(bad)
jmp
int3
cwde
cmp
aas
outs
js
mov
mov
pop
iret
cwde
inc
dec
fcmovnbe
mov
xor
inc
sbb
jne
xor
mov
xor
inc
cs
out
jg
mov
inc
loopne
aaa
rcr
mov
inc
loopne
in
sbb
inc
sub
addr16
aas
in
jecxz
cwde
inc
pop
inc
dec
shr
and
mov
ja
mov
pop
int3
push
push
jp
addr16
pop
xor
cmp
mov
rol
cwde
push
ror
cwde
inc
inc
cmp
out
jno
xor
fsubr
or
cli
pop
mov
cwde
inc
stos
(bad)
pushf
inc
loopne
rol
cwde
sar
and
inc
loopne
xor
mov
call
dec
das
xor
pop
arpl
sub
dec
int3
push
push
repnz
addr16
push
retf
out
jg
mov
inc
loopne
aaa
push
into
add
jne
jmp
arpl
sub
dec
int3
adc
pop
mov
inc
and
addr16
sbb
cwde
inc
inc
ins
cmp
fnsave
addr16
xchg
(bad)
in
daa
pusha
xor
mov
mov
pop
xchg
jbe
xor
add
mov
ja
loope
pop
fcmovne
mov
xor
jl
mov
out
pop
xor
xor
pop
popa
rcr
pop
gs
outs
pop
addr16
out
xor
inc
ss
out
jg
test
mov
(bad)
pop
xor
jp
mov
and
or
call
pop
xor
imul
mov
xchg
jbe
xor
add
mov
out
sbb
xchg
retf
inc
xchg
hlt
mov
mov
clc
mov
jmp
arpl
jle
addr16
jecxz
fild
iret
out
std
(bad)
mov
mov
pop
inc
outs
inc
pop
iret
in
jecxz
adc
mov
and
push
push
sbb
hlt
imul
std
retf
mov
addr16
pop
out
mov
and
stc
pop
mov
and
hlt
jmp
daa
addr16
xchg
jbe
xor
pop
xor
ror
mov
or
mov
xor
addr16
les
jg
bound
jecxz
icebp
arpl
dec
fs
sbb
jp
mov
dec
pop
addr16
push
shufps
addr16
pop
sbb
mov
pop
xor
add
xor
clc
mov
cmp
data16
pop
pushf
fist
jmp
fs
int
mov
lods
xchg
gs
jb
addr16
xchg
hlt
out
xor
jbe
mov
xor
pop
mov
pop
xor
(bad)
jbe
call
xchg
ret
in
adc
into
xor
addr16
sbb
xor
out
mov
mov
mov
cmp
pop
xor
call
xchg
ret
in
packsswb
rcr
addr16
fiadd
addr16
fcom
jbe
pop
hlt
and
xor
xchg
jbe
xor
in
std
mov
retf
nop
pop
xchg
jbe
xor
mov
xchg
jg
(bad)
pop
xor
jg
fbld
xchg
jbe
call
jne
or
mov
pushf
push
xchg
xor
gs
mov
addr16
sbb
addr16
xor
mov
inc
popa
xor
out
(bad)
sbb
addr16
push
(bad)
mov
xor
push
(bad)
xchg
xor
addr16
adc
pop
int3
adc
adc
pop
int3
adc
sub
pop
mov
mov
(bad)
outs
cmp
add
mov
inc
ins
cmp
fsub
pop
dec
xor
push
fcom
inc
out
xor
sbb
mov
xlat
dec
mov
imul
dec
mov
mul
dec
mov
inc
xor
push
int3
adc
int3
adc
pop
jae
pop
pop
xor
addr16
aas
out
inc
call
mov
movs
in
xchg
(bad)
xor
cmp
retf
inc
xchg
hlt
cwde
int
fstp
xchg
pop
xor
lods
loopne
ja
push
cwde
int
fist
pop
xor
jl
ins
cmp
mov
sbb
arpl
mov
xor
push
cwde
int
int3
adc
pop
mov
mov
xchg
(bad)
in
adc
jno
and
out
lahf
xor
mov
xor
addr16
pop
iret
aaa
rcr
pop
popa
mov
jne
or
inc
push
(bad)
out
xor
addr16
inc
arpl
push
cwde
int
int3
adc
int3
adc
dec
mov
adc
adc
dec
mov
or
nop
pop
xchg
jbe
xor
int3
adc
dec
mov
inc
cli
movs
in
xchg
(bad)
in
or
xor
in
std
pop
push
out
std
pop
mov
sub
out
sub
addr16
xchg
hlt
mov
dec
clc
mov
jmp
xor
pop
int3
adc
push
addr16
repz
dec
pop
rcr
int3
adc
into
push
addr16
loopne
fwait
push
mov
addr16
loopne
fwait
push
mov
retf
nop
pop
xchg
jbe
xor
cmp
std
pop
ins
cmp
data16
pop
dec
arpl
out
mov
mov
mov
cmp
fild
xchg
test
xor
out
inc
ss
out
jg
fild
inc
push
push
js
fsubr
cmp
sbb
mov
fdiv
addr16
jne
jnp
push
addr16
pop
mov
test
fild
mov
fdivr
sub
cmp
pop
xor
std
jecxz
jnp
pop
xor
xor
mov
scas
jnp
nop
pop
test
sbb
xor
arpl
pop
mov
out
pop
dec
xor
inc
cmp
loop
push
or
out
sbb
mov
ja
test
adc
xchg
cmc
in
std
adc
out
bound
icebp
xor
out
xor
addr16
aas
out
test
addr16
adc
gs
pop
xor
inc
pushf
repz
jge
out
and
adc
pushf
dec
imul
xor
mov
and
ins
int
mov
addr16
xlat
inc
mov
pop
fcom
(bad)
xor
mov
(bad)
sahf
lds
inc
imul
pusha
sbb
imul
inc
ja
(bad)
adc
mov
out
outs
xor
sbb
out
push
cmp
pop
xor
dec
mov
xchg
data16
aas
add
cmp
call
fucomip
std
out
pusha
pop
xor
retf
in
std
out
mov
or
out
std
(bad)
mov
lahf
imul
pop
daa
push
pop
sbb
xchg
jbe
mov
fdiv
test
inc
outs
js
cmp
sbb
in
outs
mov
adc
(bad)
out
out
mov
mov
loope
addr16
push
cmp
(bad)
rol
xor
xchg
sahf
xor
mov
(bad)
lahf
add
jl
jl
les
in
ret
mov
xor
(bad)
(bad)
xor
xor
and
xchg
pop
xor
jl
push
cwde
std
loope
sar
loope
and
pushf
in
std
jmp
cmp
(bad)
lock
cli
mov
sbb
xor
dec
(bad)
out
xor
dec
loopne
cwde
mov
loop
addr16
les
inc
loopne
mov
inc
loopne
cwde
int
(bad)
jl
mov
pusha
mov
fidiv
add
pop
inc
push
not
mov
fidiv
addr16
inc
sbb
xchg
mov
inc
loop
fbld
mov
mov
cwde
xor
pop
fisub
cwde
mov
jmp
fs
mov
loopne
cwde
add
aad
cmp
xchg
cmc
cwde
int
pop
arpl
cmp
addr16
jmp
and
loop
out
jns
sti
cwde
clc
lahf
pcmpgtd
jne
in
sub
push
leave
xor
inc
pushf
imul
cmp
and
push
push
sbb
pushf
imul
push
cwde
int
pop
mov
jbe
jno
inc
stos
retf
cwde
inc
loopne
ins
xchg
pop
xor
jl
pop
not
xor
inc
loopne
cwde
call
pop
arpl
cmp
daa
in
aas
xor
adc
addr16
loop
addr16
pop
xor
icebp
jp
mov
pop
int3
cwde
mov
loop
addr16
imul
cwde
inc
loopne
loop
loopne
cwde
retf
ins
mov
hlt
inc
xor
mov
xor
jo
into
cwde
mov
subps
out
jge
pop
xor
dec
out
movs
(bad)
lahf
add
jl
jl
les
sub
xchg
in
jg
fs
pop
dec
push
pop
xor
add
dec
fld
xchg
pop
xor
jl
int3
loop
loopne
cwde
cmp
mov
mov
loopne
cwde
inc
stos
(bad)
cwde
inc
loopne
adc
loopne
aaa
xor
arpl
in
jno
call
pop
mov
mov
pop
les
inc
loopne
mov
inc
loopne
addr16
loopne
cwde
xor
or
je
into
cwde
mov
cmp
loop
loopne
cwde
push
and
addr16
call
mov
addr16
sbb
addr16
loopne
addr16
lds
pop
mov
idiv
das
bound
call
mov
call
push
loopne
cwde
xor
out
jbe
sbb
int3
imul
inc
push
psraw
jno
xor
loopne
(bad)
fidiv
xor
fstp
out
imul
inc
loop
in
loopne
out
push
xor
inc
xchg
hlt
add
mov
mov
cwde
call
loopne
cwde
xor
loop
aaa
push
retf
mov
pop
xor
cmp
dec
fld
loopne
in
sbb
cwde
push
or
loop
pop
int3
cwde
call
loopne
out
cmp
loopne
xchg
inc
loope
cwde
int
int3
ror
int
xor
arpl
in
jno
call
pop
mov
mov
xchg
cmc
cwde
or
imul
mov
loopne
cwde
xor
loopne
cwde
or
dec
fstp
jl
mov
cwde
mov
cmp
popa
loope
cwde
ror
fldenv
inc
loope
(bad)
push
aaa
xor
fstp
out
dec
ss
out
jle
xor
mov
pop
xor
inc
push
pop
call
inc
loopne
cwde
push
jmp
add
dec
arpl
inc
loopne
add
(bad)
jbe
xor
out
sbb
pop
loopne
cwde
push
jmp
inc
loope
(bad)
push
cmp
addr16
xor
adc
xor
call
cmp
outs
(bad)
pop
ins
cmp
(bad)
lock
cli
mov
mov
xor
mov
mov
mov
push
pop
mov
loop
loope
cwde
xor
cmp
std
loopne
(bad)
cmc
jno
xor
loopne
(bad)
jle
xor
pop
pop
out
push
pop
xor
cmp
dec
pop
mov
(bad)
mov
fld
out
xchg
pop
addr16
xchg
jbe
test
inc
aad
pop
pop
pop
push
pop
xor
cmc
cmc
jno
rcr
xor
imul
nop
inc
loopne
and
xor
div
shl
fisub
mov
loopne
in
aas
mov
inc
je
addr16
lock
cli
mov
and
xor
dec
fdivr
xchg
ds
sbb
and
int3
cwde
mov
xchg
hlt
in
std
pop
mov
mov
push
out
cmp
xchg
jbe
xor
ss
out
cmp
cmps
js
mov
call
mov
mov
in
sbb
cmp
xor
jmp
xchg
call
mov
cwde
xor
gs
into
cmp
xor
inc
loopne
rcr
loop
cwde
push
jp
addr16
xchg
inc
call
mov
out
sub
dec
(bad)
pushf
pop
xor
cmp
loopne
mov
xor
call
and
int3
cwde
push
cmp
addr16
xchg
inc
call
mov
cwde
xor
dec
xor
xchg
cmps
out
inc
loopne
out
shr
addr16
pop
fcmovnb
call
cwde
inc
xchg
retf
push
inc
xchg
hlt
or
cmp
dec
fld
xor
call
pop
pop
arpl
stos
into
cwde
inc
dec
pop
rcl
xor
add
jno
rcr
and
pushf
push
repz
pop
xor
test
pop
mov
mov
inc
ja
mov
loop
loope
cwde
call
loopne
aaa
push
(bad)
adc
loopne
repz
loopne
cwde
or
loopne
jmp
loopne
cwde
or
loopne
inc
int3
cwde
or
dec
mov
cwde
call
loopne
mov
inc
loopne
outs
js
and
push
adc
xchg
retf
push
inc
xchg
hlt
push
js
ss
pop
xor
cmp
dec
(bad)
popf
pop
xor
inc
push
retf
out
jg
mov
inc
loopne
aaa
xor
loopne
(bad)
cmp
xor
cli
lds
inc
loopne
out
loope
addr16
xchg
mov
inc
loopne
aaa
push
adc
addr16
fcomp
xor
loope
cwde
cld
pop
xor
call
mov
test
out
inc
and
pushf
mov
inc
loopne
addr16
add
cmp
push
xor
inc
ss
out
jg
mov
inc
loopne
aaa
push
pop
les
sbb
int3
cwde
call
loopne
aaa
rcr
pop
sar
pop
rcr
pop
addr16
loopne
or
mov
frstor
pop
int3
rcl
loop
cwde
push
adc
cmps
adc
mov
call
inc
stos
cmps
call
xor
cmp
jno
xor
loopne
(bad)
cmp
addr16
and
inc
pop
fmul
fsubr
mov
loope
cwde
call
pop
(bad)
call
adc
pop
fist
cdq
pop
xor
cmp
push
mov
cwde
test
inc
scas
mov
inc
push
rcr
dec
addr16
pop
mov
or
cmp
inc
loopne
adc
pop
fistp
pop
xor
mov
call
push
retf
mov
div
xor
loopne
(bad)
mov
int3
cwde
cmp
aas
pop
inc
loopne
addr16
mov
and
int3
cwde
mov
xchg
hlt
mov
int3
addr16
xor
cmp
xor
push
jno
addr16
loopne
aaa
push
push
addr16
pop
xor
inc
push
retf
out
jg
xor
inc
idiv
inc
mov
loop
cwde
push
inc
sub
mov
loopne
mov
xchg
hlt
cmp
inc
cli
movs
mov
pushf
fistp
dec
fs
in
mov
shl
out
inc
call
mov
mov
dec
aas
xor
fst
in
loope
adc
mov
fwait
inc
push
(bad)
outs
aas
xor
fst
in
jmp
mov
xor
ficom
addr16
dec
(bad)
push
cmovp
pushw
xor
jecxz
cmovp
jmp
fneni(8087
cmps
pop
xor
jle
repz
add
push
push
xchg
xor
addr16
pop
arpl
dec
pop
arpl
cmp
aas
cwde
int
mov
aaa
push
push
addr16
xchg
hlt
cwde
int
cmp
std
loope
and
inc
cs
test
cdq
xor
test
fwait
xor
div
mov
pop
int
cld
sbb
push
push
xchg
ja
mov
pop
xor
std
out
or
sbb
or
mov
fnstcw
mov
jp
xor
pop
retf
aaa
out
div
jp
pop
gs
mov
xor
out
lahf
xor
mov
cmp
fsub
pop
cmps
jnp
mov
pop
xor
dec
mov
dec
sub
mov
out
mov
inc
loopne
js
pop
mov
loop
dec
cwde
xor
mov
cwde
call
loopne
aaa
shl
and
mov
fistp
sub
xor
out
lahf
xor
pusha
cwde
or
neg
mov
push
repz
loopne
cwde
int
fild
pop
xor
pop
fadd
cmp
cmp
mov
dec
cwde
clc
add
addr16
mov
mov
cwde
call
loopne
aaa
out
not
cmps
int3
xor
or
imul
inc
mov
push
repz
loopne
cwde
int
fld
pop
xor
inc
cs
out
jg
repz
push
adc
int
(bad)
popa
cmp
push
cmp
(bad)
lock
cli
mov
pop
xor
jmp
fs
int
mov
inc
push
retf
out
jg
retf
out
jg
pop
arpl
add
add
sub
call
in
cwde
inc
xchg
hlt
out
dec
pushf
sti
cwde
clc
lahf
pcmpgtd
jne
out
dec
push
loop
push
rcr
inc
pushf
imul
cmp
and
cdq
pop
xor
jl
int3
adc
fsub
cli
pop
mov
cwde
call
pop
mov
lods
xchg
retf
inc
xchg
hlt
or
mov
ja
addr16
add
addr16
mov
test
addr16
loopne
(bad)
xchg
add
rcr
mov
cwde
out
dec
mov
cwde
out
dec
fld
xor
and
addr16
pop
xor
mov
or
mov
cwde
xor
mov
scas
jnp
mov
arpl
mov
mov
adc
xor
mov
xor
inc
cs
out
jg
(bad)
pop
mov
inc
jnp
addr16
mov
pop
mov
gs
loopne
out
inc
ss
out
jg
iret
jl
pop
arpl
push
jmp
ficom
pop
les
inc
loopne
mov
mov
pop
mov
cwde
xor
xor
rcr
mov
cwde
call
pop
pop
arpl
stos
into
cwde
inc
dec
pop
rcl
xor
add
jno
rcr
xchg
xchg
inc
loopne
mov
cmp
xor
ja
mov
loop
loope
cwde
call
loopne
aaa
push
outs
sub
xchg
retf
dec
inc
xchg
hlt
cwde
or
dec
mov
cwde
call
loopne
mov
cmp
xor
ja
mov
pop
mov
cwde
call
pop
mov
cwde
jg
addr16
loopne
jmp
(bad)
cmps
pop
xor
xor
mov
mov
xor
pop
pop
addr16
loopne
(bad)
pop
add
addr16
das
out
inc
ss
out
jg
mov
inc
loopne
and
sti
int
inc
push
xor
pushf
mov
inc
loopne
addr16
cmp
cmp
push
xor
xchg
xor
clc
mov
cwde
xor
mov
cwde
call
loopne
jmp
mov
cwde
call
jne
or
mov
loopne
aaa
rcr
fistp
js
mov
mov
mov
cwde
inc
mul
mov
out
mov
inc
loopne
mov
cmp
jno
xor
loopne
(bad)
rol
xor
(bad)
mov
inc
pop
fmul
call
mov
cwde
call
pop
fisttp
xor
jle
repz
pop
fstp
pop
xor
cmp
push
mov
cwde
test
inc
scas
mov
cmp
mov
xor
pop
ret
addr16
pop
pop
arpl
(bad)
iret
cwde
inc
dec
gs
jbe
xor
fsubr
mov
outs
fisub
inc
loopne
aaa
push
loop
cwde
inc
pushf
imul
loopne
addr16
pop
xor
cmp
dec
pusha
(bad)
cs
cwde
cmp
cmp
adc
or
inc
loopne
jmp
fisttp
cmp
dec
int3
shr
int3
cwde
push
popa
lock
inc
xchg
cmc
out
inc
push
retf
out
jg
xchg
inc
loopne
(bad)
repnz
addr16
(bad)
mov
div
out
test
adc
pop
fistp
and
pushf
fcomp
xchg
lock
dec
int3
shr
int3
cwde
push
scas
icebp
cwde
inc
pushf
imul
add
cwde
cmp
add
out
loopne
repz
loopne
(bad)
cs
cwde
cmp
aas
out
inc
ss
out
jg
fcmovnbe
mov
push
retf
out
jg
mov
inc
loopne
mov
jmp
(bad)
ss
out
jg
xor
inc
not
jge
pop
mov
mov
inc
loopne
shl
into
cwde
inc
inc
ins
cmp
fnsave
addr16
xchg
(bad)
in
or
out
xchg
outs
outs
pop
mov
retf
push
inc
xchg
hlt
nop
pop
xchg
jbe
xor
pusha
(bad)
repnz
(bad)
cwde
int
fistp
pop
xor
in
jmp
xor
imul
jle
pop
mov
push
scas
pop
xor
sub
loopne
imul
pop
jo
pop
mov
mov
mov
dec
pop
addr16
ja
sar
pop
rcr
fld
xor
jle
int3
xor
sub
cmps
add
les
jg
jbe
call
pop
xor
push
out
addr16
adc
nop
pop
xchg
jbe
xor
ins
cmp
(bad)
lock
cli
bound
jmp
fsubr
shl
cmp
dec
je
pop
mov
data16
xor
lahf
mov
push
dec
adc
aad
inc
outs
push
(bad)
sub
xchg
retf
nop
pop
xchg
jbe
xor
fcomp
rcr
fcomi
mov
jne
(bad)
cwde
loope
jmp
mov
pop
mov
xchg
ja
(bad)
cli
pop
fist
pop
xor
push
div
call
pop
mov
dec
inc
xchg
hlt
(bad)
push
or
rcr
in
out
xlat
daa
pop
xor
or
inc
cwde
inc
pushf
imul
add
adc
aas
cwde
int
fstp
mov
cmps
mov
xor
retf
out
jg
ins
cmp
frstor
addr16
xchg
(bad)
ss
fs
int
mov
fnstcw
out
jg
addr16
lds
addr16
pop
xor
in
sbb
out
in
jecxz
xor
inc
pushf
imul
fild
rcr
pusha
(bad)
sbb
xor
push
fisttp
jg
adc
inc
ins
cmp
fnsave
addr16
xchg
(bad)
in
aas
fcomp
call
mov
sbb
pop
(bad)
cmps
xchg
jbe
call
pop
mov
neg
xor
xor
mov
xor
jne
or
call
pop
cmp
mov
pop
xor
jno
and
xchg
(bad)
(bad)
add
addr16
ss
dec
and
dec
xchg
cmc
out
cdq
dec
addr16
pop
xor
push
in
push
addr16
pop
les
inc
loopne
mov
cli
pop
cmp
mov
pop
xor
dec
push
adc
mov
pop
arpl
push
test
pusha
mov
call
xor
test
mov
int3
addr16
add
mov
pop
pop
out
pop
xor
cmp
dec
fcmovnbe
lods
pop
xor
repz
xor
stc
mov
cwde
xor
mov
cwde
cmp
int3
daa
cmp
xor
out
mov
cmp
ret
nop
inc
loopne
or
adc
jno
ror
mov
dec
loopne
aaa
shr
jae
inc
loopne
mov
int3
adc
xor
rol
aad
pop
pop
rcl
jmp
fucomi
mov
cs
out
jle
xor
cmp
dec
fstp
pop
loopne
in
pop
mov
cwde
mov
cmp
mov
les
addr16
(bad)
addr16
loopne
addr16
test
mov
inc
jecxz
cwde
fwait
adc
or
cli
pop
mov
cwde
call
loopne
mov
xor
mov
mov
xor
test
std
dec
loopne
pop
inc
loopne
addr16
inc
fs
test
cwde
inc
fnstenv
cwde
mov
pop
xor
jo
jae
test
xor
inc
xchg
hlt
in
sbb
mov
fiadd
cwde
out
neg
add
mov
test
retf
data16
sbb
mov
test
cwde
inc
adc
xor
loopne
aaa
xor
loopne
(bad)
addr16
shl
pop
mov
cwde
call
loopne
aaa
push
and
hlt
inc
out
jecxz
cwde
inc
and
xor
mov
or
push
xor
fnstenv
addr16
(bad)
es
out
cwde
call
pop
mov
cwde
call
pop
mov
mov
mov
int3
fild
xor
jnp
sub
push
fmulp
pusha
jns
sub
jb
jecxz
xor
je
add
adc
jle
or
pushf
push
xchg
xor
gs
pop
addr16
jecxz
cwde
inc
dec
(bad)
adc
mov
cwde
xor
mov
cwde
call
pop
mov
cwde
call
pop
pop
out
pop
xor
cmp
dec
fild
or
and
pop
aaa
addr16
loopne
aaa
push
into
and
xchg
ret
push
dec
xchg
cmc
jmp
pop
adc
cmp
dec
fucomi
scas
pop
xor
(bad)
jno
xor
loopne
(bad)
or
addr16
daa
jmp
fisttp
xor
aas
xor
stc
mov
cwde
xor
mov
cwde
cmp
aaa
aaa
xor
loopne
pmulhuw
jno
xor
loopne
pop
(bad)
or
inc
loopne
aaa
push
mov
addr16
pop
xor
cli
pop
mov
cwde
call
loopne
mov
cmp
xchg
mov
inc
loopne
in
sbb
sbb
xor
xchg
mov
inc
loopne
in
adc
cmc
push
xor
sbb
mov
mov
and
js
xor
inc
ja
aad
pop
pop
and
xor
cmp
dec
fcmovnbe
scas
pop
xor
jl
mov
jb
xor
out
and
loopne
aaa
push
push
and
xchg
mov
inc
loopne
aaa
push
xor
addr16
loopne
mov
loopne
out
sbb
cdq
inc
loopne
adc
loopne
mov
inc
loopne
mov
loopne
in
xchg
cwde
inc
sbb
mov
stos
retf
lahf
inc
loopne
loop
loope
cwde
call
pop
mov
cwde
call
pop
mov
test
ret
dec
xchg
cmc
jmp
(bad)
mov
cwde
inc
xchg
mov
push
scas
and
xchg
mov
dec
loopne
jmp
fucomi
stos
pop
xor
cmp
sahf
frstor
pop
xor
cmp
dec
int3
ror
cwde
push
mov
addr16
loopne
aaa
push
push
addr16
loopne
xor
mov
mov
(bad)
(bad)
rdpmc
addr16
loopne
or
inc
loopne
setb
pop
addr16
inc
and
dec
fild
test
ss
out
jle
mov
inc
loopne
aaa
jmp
xchg
add
int3
cwde
cmp
aas
out
jnp
repz
inc
loopne
xchg
inc
loopne
(bad)
mov
fldcw
dec
mov
(bad)
icebp
arpl
dec
mov
dec
outs
addr16
pop
xor
cmp
bound
jno
cmp
popf
dec
mov
dec
pop
rcr
pop
mov
mov
or
xlat
ja
pop
ins
scas
jp
xor
xor
mov
cld
push
xor
dec
mov
popa
push
fild
clc
mov
cwde
xor
xor
mov
ror
cwde
inc
dec
int3
push
pop
bound
push
xchg
and
xchg
retf
dec
inc
xchg
hlt
or
mov
pop
pop
rcr
mov
cwde
call
pop
mov
aaa
rcr
pop
addr16
div
mov
dec
mov
cld
mov
xor
jb
xor
clc
mov
cwde
xor
mov
and
fucomi
mov
xor
push
pop
and
xchg
jbe
call
pop
mov
pop
xchg
mov
inc
loopne
out
jg
xor
std
iret
arpl
std
jmp
xor
out
jle
push
ret
js
xor
test
pop
les
inc
loopne
mov
push
pop
xor
xchg
div
rol
xor
lahf
(bad)
pop
loopne
out
inc
ss
out
jg
jecxz
cli
pop
pop
inc
push
pop
xor
mov
push
xor
not
mov
jp
xor
xor
mov
lods
push
xor
dec
fcomp
push
push
or
xor
les
inc
loopne
mov
mov
rdpmc
addr16
mov
nop
sbb
ror
(bad)
cli
pop
pop
rcl
jmp
fcmovnb
stos
pop
xor
mov
pop
loop
sub
jno
inc
sbb
(bad)
dec
jno
cwde
xor
out
add
mov
dec
pop
addr16
call
mov
fist
in
out
mov
dec
out
neg
pop
inc
loopne
and
and
addr16
call
ins
addr16
cwde
cmp
daa
out
inc
cs
out
jg
(bad)
mov
pop
loop
sub
jno
inc
sbb
arpl
adc
ds
cli
pop
pop
gs
sti
int3
cwde
cmp
daa
outs
js
aaa
in
jecxz
out
inc
call
int
inc
xchg
hlt
or
shl
mov
out
pop
xor
cmp
dec
(bad)
loopne
in
pop
mov
inc
out
ja
(bad)
cli
pop
pop
push
pop
xor
mov
pop
rcr
xor
les
inc
loopne
mov
cli
pop
cmp
mov
pop
xor
dec
addr16
addr16
fsub
pop
cmps
shl
pop
(bad)
xor
out
mov
mov
pusha
daa
xor
sbb
mov
mov
and
js
xor
push
cmp
addr16
loopne
ja
pop
xor
dec
cs
out
jle
or
mov
jp
addr16
fistp
xor
xor
fstp
mov
pop
xor
cmp
dec
fcmovnu
mov
xor
dec
loopne
aaa
push
sub
addr16
out
sbb
push
jmp
cmps
push
pop
mov
mov
inc
loopne
(bad)
pop
adc
addr16
loopne
(bad)
(bad)
adc
xor
inc
loopne
rol
dec
cmp
add
dec
cmp
add
dec
mov
cwde
xor
mov
xor
fldz
jo
icebp
cmps
inc
sbb
lahf
cmps
ss
inc
sub
div
and
push
cli
pop
fs
icebp
jno
xor
mov
cwde
inc
dec
mov
cwde
out
imul
mov
stc
mov
cwde
xor
pop
xchg
pop
xor
call
call
or
addr16
loopne
(bad)
jb
xor
adc
cwde
inc
dec
fistp
push
out
or
xchg
mov
push
loopne
aaa
xor
loopne
(bad)
and
pop
rcr
mov
pop
mov
cwde
call
loopne
aaa
push
jbe
cwde
inc
pushf
test
inc
loopne
mov
xor
loopne
(bad)
xor
xor
mov
xor
test
pop
xor
dec
add
mov
adc
addr16
xchg
cmc
push
js
ins
scas
jnp
mov
gs
pusha
mov
out
xor
(bad)
call
(bad)
cli
pop
pop
rcl
jmp
fild
test
xor
cmp
dec
pop
xchg
or
(bad)
cmp
int3
cwde
cmp
sub
inc
push
retf
out
jg
cli
movs
mov
dec
fs
adc
cmp
push
arpl
dec
pop
rcr
pop
mov
pop
xor
outs
adc
addr16
pop
ins
scas
jp
xor
xor
bound
pop
pop
sub
dec
inc
xchg
hlt
in
mov
and
sub
jno
inc
sbb
inc
or
(bad)
and
rcr
addr16
pop
xor
cmp
xchg
aas
mov
pop
xor
clc
push
push
addr16
pop
xor
xor
pop
pop
addr16
lahf
daa
mov
imul
mov
adc
addr16
xor
xchg
pop
xor
mov
pop
ins
scas
jnp
mov
mov
xor
movs
ins
add
(bad)
mov
dec
mov
fbstp
mov
push
repz
xor
mov
pop
mov
cwde
call
adc
xor
xor
loopne
jmp
(bad)
std
out
lahf
inc
adc
or
push
cmp
mov
xchg
icebp
in
sbb
int
fld
xor
pusha
push
jmp
jnp
xor
cmp
dec
pop
bound
loopne
cwde
int
fcmovnu
mov
xor
add
xor
retf
(bad)
cs
add
mov
dec
pop
addr16
loopne
out
std
jecxz
addr16
push
(bad)
mov
pop
addr16
sbb
inc
dec
int3
adc
xchg
ins
mov
jne
(bad)
scas
adc
addr16
mov
cwde
cmp
lods
mov
addr16
loopne
in
std
jecxz
(bad)
mov
out
and
pop
xor
hlt
sub
sbb
js
cmp
inc
jbe
ins
mov
aaa
push
cmp
pop
out
mov
jecxz
(bad)
mov
pushf
ss
xor
cmp
bound
jno
xor
mov
inc
pop
mov
mov
fnsave
(bad)
imul
retf
mov
mov
cdq
inc
loopne
loop
loope
cwde
xor
mov
daa
cmp
xor
out
sbb
xlat
int3
daa
cmp
xor
out
movs
cmp
xor
stc
pop
fcomi
mov
xor
jl
mov
daa
cmp
xor
out
sbb
jo
addr16
pop
mov
mov
fnsave
cmovs
addr16
adc
pop
mov
arpl
push
jbe
addr16
or
push
cmp
xor
out
sbb
push
xor
pop
ds
or
push
cmp
xor
out
sbb
xlat
int3
daa
cmp
xor
out
movs
cmp
xor
stc
pop
fisttp
adc
loop
loope
cwde
xor
mov
scas
inc
pop
mov
mov
arpl
xor
pop
mov
mov
fnsave
(bad)
test
aas
addr16
adc
pop
mov
arpl
xor
pop
mov
mov
fnsave
punpckhbw
aas
addr16
(bad)
pop
mov
xlat
int3
daa
cmp
xor
out
sbb
adc
addr16
aaa
les
jno
xor
sbb
cmp
int3
daa
cmp
xor
out
sbb
adc
addr16
aaa
les
fbstp
xor
pop
mov
mov
arpl
cmp
add
pop
xor
(bad)
les
jno
inc
stos
ret
cdq
inc
loopne
test
pop
xor
dec
pop
add
loopne
lahf
push
jmp
js
xor
cmp
bound
jno
out
push
cmp
fbld
pop
pusha
xor
mov
mov
mov
mov
pop
mov
fisttp
addr16
es
mov
pop
pop
rcr
mov
pop
mov
cwde
mov
inc
push
push
fidiv
mov
xchg
mov
inc
loopne
out
jle
daa
pusha
mov
loop
cwde
push
push
addr16
sbb
addr16
les
inc
loopne
mov
mov
pop
fisttp
pop
xor
dec
cs
out
jle
dec
pusha
mov
adc
rcr
xor
xchg
mov
inc
loopne
aaa
inc
sub
sbb
pop
(bad)
xor
cli
pop
mov
cwde
call
loopne
mov
cmp
xor
pushf
ss
xor
xlat
xor
call
xor
cmp
mov
int3
push
fbstp
xor
les
inc
loopne
mov
mov
bt
fmulp
js
aad
mov
fdiv
inc
xchg
scas
dec
inc
loopne
out
dec
call
enter
cmc
mov
inc
push
fcom
fidivr
addr16
jecxz
cwde
add
jle
test
repnz
push
fmulp
pusha
jns
sub
jb
loopne
jnp
mov
cwde
inc
lahf
mov
inc
loopne
data16
movq
fprem1
loop
jecxz
cwde
mov
pop
mov
adc
loopne
push
jle
add
out
dec
push
ret
out
jle
mov
inc
loopne
aaa
sar
and
xchg
in
cwde
call
pop
pop
addr16
loopne
jmp
fucomi
mov
xor
cwde
inc
dec
fist
dec
call
enter
cmc
jmp
fisttp
jl
pop
addr16
loopne
(bad)
and
xor
out
les
inc
loopne
mov
mov
lods
jno
shl
aam
mov
pop
fisttp
push
out
addr16
pop
xor
std
jecxz
add
xor
std
idiv
xor
out
dec
ss
out
jle
xor
mov
ret
mov
jp
cmp
addr16
(bad)
bound
push
ret
out
jle
jbe
mov
jp
cmp
addr16
addps
dec
fld
mov
and
mov
pop
xor
lds
or
mov
pop
xor
rcr
xor
ja
addr16
pop
xchg
xor
pop
clc
jno
rcr
fstp
xor
dec
stos
jno
rol
xor
mov
stc
mov
cwde
xor
mov
cwde
call
pop
(bad)
xor
and
pop
inc
es
pop
mov
mov
mov
pop
(bad)
mov
clc
jno
shr
and
pop
pop
ds
pop
xor
sub
xor
xchg
ret
dec
dec
xchg
cmc
pmaddwd
jno
rcr
test
mov
pop
xor
push
inc
xor
fdiv
xchg
pop
xor
mov
push
ret
out
jle
shr
stc
pop
fcmovnbe
mov
xchg
jb
sbb
xor
mov
xor
jg
mov
addr16
xchg
cmp
pop
(bad)
mov
xor
jg
mov
rcr
xor
xchg
mov
inc
loopne
aaa
shr
aad
mov
pop
pop
gs
(bad)
int3
cwde
cmp
adc
push
or
inc
loopne
aaa
push
adc
inc
sahf
(bad)
pop
xor
cmp
dec
pop
div
stc
jno
ror
and
pop
pop
div
stc
jno
shl
aad
mov
lahf
fstp
loopne
in
aaa
fdiv
call
sub
xor
adc
call
loopne
sar
dec
fild
push
ins
pop
addr16
loopne
cld
push
pop
xor
pop
lods
jno
sar
mov
inc
loopne
aaa
push
mov
ret
dec
dec
xchg
cmc
jmp
fld
mov
jne
or
sub
cwde
shr
daa
mov
pop
pop
arpl
out
xchg
mov
adc
shr
daa
mov
pop
pop
dec
retf
cwde
(bad)
out
xchg
mov
out
mov
rcr
pop
addr16
add
cwde
inc
loopne
sar
xor
cmp
mov
push
or
jno
push
jnp
cwde
inc
pushf
test
pop
int3
inc
and
jo
sub
int3
inc
sbb
sub
mov
sbb
sub
mov
sbb
sub
mov
sbb
sub
mov
sbb
sub
mov
sbb
sub
mov
sbb
sub
mov
sbb
sub
mov
sbb
sub
mov
sbb
sub
mov
sbb
sub
mov
sbb
sub
mov
sbb
sub
mov
sbb
sub
mov
sbb
sub
mov
sbb
sub
mov
sbb
sub
mov
sbb
sub
mov
sbb
sub
mov
sbb
sub
mov
sbb
sub
mov
sbb
sub
int3
inc
test
jo
sub
int3
inc
lods
sbb
sub
int3
inc
mov
(bad)
xor
pop
data16
pop
dec
fs
addr16
mov
call
daa
call
pop
mov
mov
jbe
mov
inc
dec
xor
je
mov
imul
movs
pop
cmp
mov
pushf
retf
inc
int
fsub
adc
bound
out
adc
xor
rcr
fs
push
loopne
cmp
push
push
pop
and
xor
ja
pop
mov
pushf
and
ja
pop
inc
mov
loopne
addr16
pop
add
inc
cwde
leave
xchg
push
call
mov
in
les
aaa
xchg
sbb
mov
xor
arpl
xor
pop
int3
inc
pushf
sbb
sub
int3
inc
nop
sbb
sub
int3
inc
xchg
sbb
sub
int3
inc
mov
jo
sub
int3
inc
mov
jo
sub
int3
inc
sbb
sub
mov
sbb
sub
int3
inc
clc
sbb
sub
int3
inc
cld
sbb
sub
int3
inc
lock
sub
int3
inc
hlt
sbb
sub
int3
inc
call
(bad)
xor
pop
int3
inc
in
sbb
sub
int3
inc
loopne
jo
sub
int3
inc
in
jo
sub
int3
inc
fcomp
jo
sub
int3
inc
fcomp
jo
sub
int3
inc
rcr
jo
sub
int3
inc
aam
jo
sub
int3
inc
enter
sub
int3
inc
int3
sbb
sub
int3
inc
rcr
sub
mov
sbb
sub
int3
inc
cmp
jo
sub
int3
inc
cmp
jo
sub
int3
inc
xor
jo
sub
int3
inc
xor
jo
sub
int3
inc
sub
jo
sub
int3
inc
sub
jo
sub
int3
inc
and
jo
sub
int3
inc
and
jo
sub
int3
inc
sbb
jo
sub
int3
inc
sbb
jo
sub
int3
inc
adc
jo
sub
int3
inc
adc
jo
sub
int3
inc
or
jo
sub
int3
inc
or
jo
sub
int3
inc
add
jo
sub
int3
inc
add
jo
sub
int3
inc
js
jo
sub
int3
inc
jl
jo
sub
int3
inc
jo
jo
sub
int3
inc
je
jo
sub
int3
inc
push
(bad)
xor
pop
int3
inc
ins
sbb
sub
int3
inc
pusha
sbb
sub
int3
inc
sbb
sub
int3
inc
pop
sbb
sub
int3
inc
pop
sbb
sub
int3
inc
push
sbb
sub
int3
inc
push
sbb
sub
int3
inc
dec
sbb
sub
int3
inc
dec
sbb
sub
int3
inc
inc
sbb
sub
int3
inc
inc
sbb
sub
int3
inc
mov
(bad)
xor
pop
int3
inc
mov
(bad)
xor
pop
int3
inc
mov
jo
sub
int3
inc
mov
jo
sub
int3
inc
test
jo
sub
int3
inc
lods
sbb
sub
int3
inc
mov
(bad)
xor
pop
int3
inc
movs
sbb
sub
int3
inc
nop
sbb
sub
int3
inc
xchg
sbb
sub
int3
inc
mov
jo
sub
int3
inc
mov
jo
sub
int3
inc
sbb
sub
mov
sbb
sub
int3
inc
clc
sbb
sub
int3
inc
cld
sbb
sub
int3
inc
lock
sub
int3
inc
hlt
sbb
sub
int3
inc
call
(bad)
xor
pop
int3
inc
in
sbb
sub
int3
inc
loopne
jo
sub
int3
inc
in
jo
sub
int3
inc
fcomp
jo
sub
int3
inc
fcomp
jo
sub
int3
inc
rcr
jo
sub
int3
inc
aam
jo
sub
int3
inc
enter
sub
int3
inc
int3
sbb
sub
int3
inc
rcr
sub
mov
sbb
sub
int3
inc
cmp
jo
sub
int3
inc
cmp
jo
sub
int3
inc
xor
jo
sub
int3
inc
sub
jo
sub
int3
inc
and
jo
sub
int3
inc
sbb
jo
sub
int3
inc
adc
jo
sub
int3
inc
adc
jo
sub
int3
inc
or
jo
sub
int3
inc
or
jo
sub
int3
inc
add
jo
sub
int3
inc
add
jo
sub
int3
inc
js
jo
sub
int3
inc
je
jo
sub
int3
inc
push
(bad)
xor
pop
int3
inc
ins
sbb
sub
int3
inc
pusha
sbb
sub
int3
inc
sbb
sub
int3
inc
pop
sbb
sub
int3
inc
pop
sbb
sub
int3
inc
push
sbb
sub
int3
inc
push
sbb
sub
int3
inc
dec
sbb
sub
int3
inc
dec
sbb
sub
int3
inc
inc
sbb
sub
int3
inc
inc
sbb
sub
int3
inc
mov
(bad)
xor
pop
int3
inc
mov
(bad)
xor
pop
int3
inc
mov
jo
sub
int3
inc
mov
jo
sub
int3
inc
test
jo
sub
