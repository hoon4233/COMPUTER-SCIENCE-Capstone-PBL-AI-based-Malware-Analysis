add
add
add
add
inc
add
dec
inc
add
add
add
pop
inc
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
add
add
and
dec
add
add
add
add
add
add
add
push
inc
add
mov
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
je
add
bound
add
and
add
add
add
add
add
push
je
imul
add
add
add
add
push
push
add
add
add
add
inc
push
dec
inc
add
add
add
add
add
add
add
add
cli
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
jp
add
add
gs
xor
xor
xor
xor
sub
sub
sub
xor
xor
xor
xor
jge
add
outs
outs
data16
gs
js
jae
jb
outs
addr16
add
add
lahf
loop
mov
fwait
mov
test
test
add
xor
mov
mov
jmp
xchg
mov
add
mov
call
xchg
jmp
mov
add
out
mov
dec
outs
fs
gs
add
pop
mov
cmp
shrd
xchg
push
cmps
test
sub
out
jmp
imul
add
add
add
fxch
cld
sbb
adc
test
inc
sbb
jnp
mov
pushf
jecxz
loop
mov
cmps
xchg
test
xor
push
out
push
sahf
dec
aad
shl
mov
aaa
fcomp
lds
std
xchg
cwde
push
sbb
push
aaa
pop
cli
sbb
ja
repnz
xlat
arpl
push
rol
stc
leave
ret
pop
fdiv
call
(bad)
outs
inc
aas
pop
cs
idiv
push
lods
mov
dec
stc
test
or
add
fnstcw
int
fidivr
xchg
xchg
push
pop
dec
push
xor
ret
popf
inc
cmps
cwde
cdq
retf
cmp
shl
es
out
lods
jmp
or
inc
sti
aaa
es
sbb
jmp
mov
or
rcl
xchg
add
push
in
enter
(bad)
mul
call
je
adc
cmp
mov
cmp
repz
test
cmp
pop
in
mul
sbb
xor
inc
dec
sub
test
popa
push
dec
test
in
scas
add
lahf
add
adc
xor
mov
popa
mov
jb
sub
(bad)
jl
fstp
test
lock
test
(bad)
sub
xchg
jns
prefetch
xchg
es
cmp
bound
push
out
outs
mov
add
repnz
pop
adc
fmul
(bad)
mov
je
xchg
ret
cmp
(bad)
leave
pop
mov
cmc
fld
push
hlt
add
cs
xchg
and
aad
adc
mov
or
jne
add
test
xor
mov
push
adc
add
outs
(bad)
pop
or
fs
mov
arpl
out
xchg
test
xor
aas
(bad)
xchg
cmps
sbb
push
jl
jge
jnp
jl
fimul
push
pop
dec
rol
pop
sub
(bad)
ss
jmp
jl
xchg
cmp
aaa
imul
jmp
retf
js
jb
or
jg
sbb
and
test
pop
xchg
mov
cmp
int3
pop
fdiv
dec
ins
(bad)
or
sbb
mov
inc
ja
enter
adc
mov
mov
inc
fild
ins
outs
int3
jp
cmp
in
pop
(bad)
ror
repz
and
ds
rol
cmps
push
lods
mov
in
movs
jle
scas
imul
fsub
fwait
xchg
dec
(bad)
push
adc
cdq
add
and
jmp
cmps
push
ins
vmovups
or
jae
push
inc
cs
mov
dec
jmp
shr
jg
inc
pop
icebp
dec
mov
ins
cmps
ins
outs
sub
popf
fistp
inc
out
xor
call
and
add
les
inc
sub
inc
ins
add
daa
adc
(bad)
jl
das
jb
les
popa
xor
retf
loopne
repnz
mov
je
imul
pop
sub
push
ins
push
inc
dec
push
inc
imul
ja
gs
sub
fsub
stos
jne
fucomp
jns
fs
cmps
mov
dec
inc
mov
jge
push
jne
mov
xchg
pusha
inc
rol
pop
adc
movs
sbb
or
mov
mov
fistp
and
ins
pusha
adc
or
retf
loopne
jne
fild
repnz
stos
xchg
movs
xlat
fstp
jmp
sbb
pop
add
adc
ficom
pop
in
repnz
sub
mov
retf
imul
xor
fstp
int3
lea
in
adc
push
dec
loop
bound
repz
sub
dec
ret
outs
hlt
mov
push
neg
ss
xchg
xchg
jmp
mov
push
fmul
and
xor
pusha
ins
sbb
retf
hlt
pop
sub
cmp
cmp
lods
push
sbb
rcr
xor
popf
xlat
mov
dec
test
fwait
popf
repnz
pusha
xchg
hlt
pop
fild
and
mov
mov
movs
xchg
mov
shl
push
mov
pop
pop
add
(bad)
nop
imul
cwde
idiv
cmp
jne
arpl
nop
jne
mov
mov
push
es
jl
lahf
cmp
push
std
out
mov
push
pop
mov
(bad)
dec
stos
shr
xchg
bound
push
sahf
out
fstp
daa
add
jnp
fsub
test
mov
enter
mov
or
int
xchg
rep
adc
shr
inc
rcr
std
out
mov
adc
sub
xor
leave
je
jb
ror
cs
xchg
cwde
xchg
sub
inc
repz
mul
fist
or
(bad)
fst
les
push
or
stos
xchg
jns
adc
push
mov
dec
sbb
push
cmp
cmp
mov
jl
(bad)
lods
adc
sbb
mov
ins
pop
ins
cwde
inc
jge
leave
mov
outs
push
cmp
add
inc
sub
adc
dec
repz
mov
xchg
enter
aam
mov
inc
lahf
and
(bad)
jmp
test
and
jg
clc
push
push
sub
jne
stos
cmp
cwde
inc
pop
lock
jnp
xor
pop
mov
ror
pop
mov
aas
outs
(bad)
jae
push
out
out
js
dec
adc
int
lahf
mov
push
and
ret
mov
leave
arpl
mov
mov
fmul
pop
push
das
test
leave
jno
call
xchg
or
mov
test
mov
pusha
pop
mov
int3
mov
inc
add
mov
cli
xchg
test
ja
hlt
pop
sub
es
xchg
loope
add
(bad)
sub
sbb
mov
fisubr
cli
mov
(bad)
aam
inc
cwde
test
sbb
std
in
jbe
loopne
and
cmp
mov
adc
or
imul
fld
leave
(bad)
mul
retf
sub
hlt
cli
push
icebp
sbb
gs
add
mov
pushf
xor
cmp
pop
pop
pop
ficom
sbb
adc
mov
ret
cdq
fisubr
bound
mov
mov
jmp
push
xchg
scas
push
push
add
inc
push
push
jb
jo
cwde
in
xor
out
sbb
test
sti
cmp
(bad)
fnstcw
mov
pop
repz
stc
mov
or
das
stos
clc
dec
sub
xor
arpl
push
imul
pop
fwait
call
add
add
stos
or
mov
imul
add
push
stos
adc
es
jno
enter
xchg
retf
xor
in
out
scas
out
rcr
lods
jle
movs
cmp
and
jp
(bad)
inc
pushf
popf
out
loopne
adc
add
fcom
jbe
out
fist
add
mov
and
push
inc
dec
aaa
push
outs
adc
xchg
out
and
adc
movs
stos
and
jmp
sbb
cli
inc
adc
cmp
icebp
test
xchg
push
pop
jns
and
ret
sub
mov
leave
jne
sub
lea
aad
mov
mov
iret
mov
mov
cld
push
jmp
punpckhwd
loopne
inc
mov
jno
sub
jp
(bad)
(bad)
in
mov
test
add
cmp
lock
cli
push
mov
clc
loopne
test
xchg
cmp
ret
xlat
or
jnp
jmp
xchg
int3
jno
xchg
retf
cmp
xlat
ds
pop
jmp
mov
aaa
inc
mov
inc
out
pop
into
pop
mov
pop
mov
das
popa
pop
xlat
mov
mov
call
xor
fiadd
jge
pavgb
or
adc
enter
aas
push
adc
(bad)
mov
imul
mov
addr16
mov
cli
dec
gs
mov
mov
and
add
sub
or
push
cs
fcom
das
loope
xchg
stos
adc
(bad)
enter
xchg
and
pop
mov
jno
cmc
test
mov
loop
inc
aam
mov
jne
push
pop
sub
pushf
push
jmp
pop
inc
js
lds
xchg
pop
jmp
jae
lahf
test
cli
daa
addr16
or
mov
pop
mov
jp
in
(bad)
xchg
scas
cmp
call
ficom
xor
push
std
xchg
js
xchg
cmp
jmp
out
int3
btc
dec
mov
int
das
data16
mov
push
(bad)
add
pusha
xchg
adc
rol
xchg
cmp
call
call
rol
jecxz
dec
pop
and
sbb
or
mov
leave
add
in
leave
mov
aas
sbb
jp
stc
out
inc
ret
dec
repnz
sbb
dec
pop
pushf
test
mov
sti
mov
into
inc
cmps
pop
mov
cs
out
push
mov
(bad)
xor
test
xlat
xchg
mov
cmp
in
ss
cmp
fistp
mov
test
ja
mov
aam
pop
and
loope
and
push
lock
xchg
pop
repnz
or
or
mov
and
div
ret
pushf
mov
in
push
sub
fild
or
adc
imul
xchg
pushf
lock
sahf
ins
inc
add
and
test
mov
sbb
mov
pushf
inc
leave
xlat
xlat
stos
adc
push
pop
adc
nop
cmc
ss
enter
stos
test
xchg
ror
pop
jnp
fcom
mov
(bad)
leave
add
(bad)
dec
mov
add
ret
gs
mov
fs
popf
retf
mov
(bad)
and
or
and
mov
jns
leave
sub
add
lahf
rcl
dec
daa
scas
aas
sahf
cmps
mov
shl
inc
test
aad
fst
sub
cmp
jne
call
popa
sbb
aam
fbstp
xchg
push
xchg
sbb
inc
mov
xor
jmp
outs
add
fwait
(bad)
cmc
rcr
lock
sub
shr
fld
push
jmp
or
imul
push
mov
aam
rcl
in
mov
cmc
sahf
dec
pop
xor
loopne
inc
fsub
stos
mov
aad
int
pop
sub
repz
in
fcmovu
test
es
inc
or
mov
push
inc
inc
(bad)
cmp
push
mov
sbb
mov
or
and
test
(bad)
je
std
xchg
out
dec
add
in
enter
pushf
inc
jmp
iret
mov
mov
ins
push
mov
mov
lock
in
and
out
or
sub
xor
adc
inc
sub
or
lock
ins
dec
repnz
xor
aam
rcl
in
pop
dec
hlt
jmp
aad
hlt
(bad)
mov
sbb
iret
cmp
int3
icebp
jnp
and
les
cmps
xchg
rcr
push
cld
sahf
test
into
ret
lods
xchg
data16
and
jmp
call
mov
sbb
and
dec
cmps
pop
fild
xchg
xchg
mov
xchg
std
cld
push
shl
popf
rcl
mov
aas
sub
mov
fidivr
jbe
in
ret
ins
mov
xor
div
jno
mov
ins
xchg
mov
mov
sub
mov
test
mov
mov
lea
inc
ret
(bad)
push
fsubrp
int3
stos
(bad)
or
pop
jmp
imul
or
add
ja
sahf
cmp
test
test
dec
and
stc
pop
iret
xchg
inc
xchg
add
rcr
sub
inc
jno
stos
retf
fnsave
mov
pop
add
sub
sahf
dec
push
sub
(bad)
mov
gs
cwde
sar
iret
lds
sbb
push
cmc
mov
and
or
xor
int3
ins
jl
mov
mov
dec
test
movs
fild
mov
(bad)
lock
jecxz
(bad)
imul
jne
shl
mov
fs
shl
sub
into
aaa
cli
push
js
das
push
mov
push
ror
sub
(bad)
mov
dec
xor
movs
repz
mov
retf
pop
movs
xchg
inc
push
fsub
adc
shr
mov
int3
jnp
and
mov
jbe
mov
enter
(bad)
daa
and
arpl
pop
push
cmp
es
mov
fnstcw
mov
int
out
cld
and
add
imul
scas
stos
add
sbb
or
jg
mov
or
in
test
or
cmp
sbb
push
adc
out
fwait
or
cvtpi2ps
add
adc
xor
test
push
sti
sub
push
cmp
xor
jmp
cmp
sub
(bad)
mov
mov
imul
(bad)
sbb
push
mov
mov
add
sti
push
stos
pop
fisub
mov
or
clc
xchg
sbb
sub
test
rol
sub
mov
rcr
lods
outs
mov
or
jmp
ins
mov
mov
push
inc
in
add
inc
retf
fidiv
mov
cmp
out
enter
je
out
stos
xor
adc
stos
(bad)
pop
push
in
daa
nop
push
push
adc
test
inc
xchg
add
test
add
xchg
jmp
das
mov
xlat
pop
inc
inc
sti
mov
out
cmps
fcmovu
xchg
aad
adc
stos
mov
retf
xchg
cmp
(bad)
mov
enter
sbb
daa
pop
cmp
loope
pop
jae
scas
clc
hlt
adc
or
movs
loope
(bad)
push
inc
int3
push
xchg
loop
push
cdq
inc
jno
push
out
pusha
xor
mov
jnp
test
sub
cmp
out
xor
and
fmul
int
xchg
outs
jb
jb
inc
or
(bad)
fnstsw
fcomp
repnz
in
retf
lahf
mov
aas
clc
mov
fst
ja
jmp
push
dec
scas
dec
jl
inc
jno
in
cmp
cmc
pop
sbb
nop
(bad)
repnz
dec
(bad)
shl
lea
dec
mov
add
push
jns
jne
dec
gs
in
out
mov
push
hlt
mov
xchg
rcl
dec
(bad)
sub
jg
in
stos
push
(bad)
pushf
iret
fld
div
mov
shl
mov
popa
pop
loope
(bad)
xor
mov
jg
iret
add
sbb
cmp
mov
adc
sub
mov
lds
xor
mov
mov
cmp
scas
sub
jmp
punpckhdq
aad
rcr
and
jge
das
ss
fadd
mov
shl
add
icebp
bnd
sbb
outs
dec
(bad)
dec
push
ins
gs
xchg
jg
test
sbb
out
cwde
mov
adc
xchg
pop
aas
lds
xchg
stc
xor
fdivr
popf
les
out
push
push
jae
test
sbb
xchg
inc
xor
lods
icebp
outs
mov
pop
lea
dec
mov
cmp
jmp
sbb
int
mov
and
mov
cmc
adc
jl
inc
lea
mov
mov
ins
lea
ret
xchg
pop
adc
dec
out
xor
mov
pop
pop
sti
test
push
stos
js
adc
lods
loop
or
pop
push
(bad)
pop
jbe
cwde
adc
push
inc
jne
inc
xchg
scas
push
(bad)
fadd
pop
mov
mov
adc
mov
repz
mov
shl
cmp
cmp
jp
sti
hlt
(bad)
mov
cmps
inc
imul
xor
sar
ins
daa
pop
adc
pop
push
dec
data16
sahf
loope
push
lods
xchg
pusha
loopne
xchg
adc
sub
lods
mov
add
leave
mov
movs
int3
movs
gs
(bad)
fidivr
out
cmp
js
sbb
jb
fdiv
push
mov
cmp
imul
xlat
xor
ins
out
bound
mul
lock
jo
hlt
cmp
outs
test
outs
or
shr
stos
in
or
popa
ficom
dec
repnz
add
out
mov
xchg
das
shl
cs
ror
sbb
inc
jno
cdq
xchg
add
adc
jl
nop
xchg
ret
fcmovbe
repz
call
mov
daa
nop
cmp
in
adc
mov
jns
cmp
maskmovq
mul
lods
dec
and
sub
in
rcl
jmp
cmps
mov
or
adc
call
xlat
pop
pusha
push
pop
dec
addr16
xchg
fcmove
jo
movs
mov
or
bound
add
xchg
jbe
xchg
xor
push
shl
mov
and
aaa
xor
shr
fidivr
mov
xchg
push
sbb
ret
dec
imul
scas
xor
or
shrd
add
jle
jb
sar
mov
inc
inc
fwait
js
hlt
mov
stos
fs
outs
jl
out
sahf
adc
dec
jp
ss
jnp
add
push
xchg
add
pop
adc
or
in
and
add
(bad)
and
add
imul
clc
push
xor
pop
adc
pop
push
addr16
dec
stos
sub
shl
cmp
jg
shrd
in
xchg
cs
shl
mov
cmp
int3
mov
test
sub
je
inc
adc
scas
xchg
out
push
test
movs
(bad)
in
pop
jmp
imul
and
adc
cld
jb
or
fbld
xchg
pushf
add
fmul
jns
imul
ss
or
das
int3
jmp
mov
outs
aaa
xlat
and
outs
ret
in
jl
mov
mov
lods
push
mov
xchg
ret
(bad)
lock
xor
sbb
pop
mov
movs
je
or
cmp
dec
lock
out
mov
add
add
mov
daa
lods
imul
aad
dec
movs
pop
sub
inc
push
shl
jb
ret
cld
mov
mov
dec
push
test
std
stos
dec
sbb
mov
sub
sahf
dec
in
mov
inc
mov
daa
imul
scas
jl
icebp
dec
cwde
mov
in
push
and
adc
jmp
xchg
loope
fcom
jl
push
or
nop
push
ss
gs
push
mov
inc
into
mov
aam
lds
mov
rcl
nop
lahf
push
retf
mov
add
inc
mov
js
dec
pop
sbb
push
mov
xchg
add
push
jmp
fisub
inc
cmps
xor
hlt
or
or
in
repnz
retf
dec
cdq
std
jle
mov
add
push
rol
mov
sub
or
ss
adc
pusha
(bad)
std
aam
or
xchg
les
pushf
bound
stc
mov
cdq
push
inc
cmp
inc
test
movq
sub
lahf
leave
rol
(bad)
cdq
inc
and
in
(bad)
(bad)
add
mov
inc
mov
in
sbb
in
cmp
aaa
lds
push
cwde
push
sub
mov
pop
rcl
ror
fist
pop
out
mov
(bad)
cmps
mov
lea
inc
add
js
xchg
test
ja
fdivr
je
cmp
inc
sar
test
mov
cmp
xor
scas
leave
or
in
mov
sbb
xor
cwde
loop
dec
or
xchg
fisubr
lods
pusha
loope
fist
adc
scas
pop
xchg
hlt
mov
pop
movs
xor
repz
xchg
xchg
call
and
pop
sbb
es
stos
js
addr16
and
icebp
test
cs
or
add
inc
pop
mov
aaa
or
cmp
stc
sbb
sub
sbb
pop
inc
sar
mov
sub
cdq
jg
leave
imul
fimul
pushf
xor
dec
adc
repnz
jmp
pusha
addr16
adc
sbb
dec
mov
sbb
in
adc
jno
cmp
mov
hlt
cmp
and
in
aaa
xchg
(bad)
pop
cld
pop
retf
and
clc
in
jne
scas
mov
(bad)
jg
mov
and
xchg
shr
stos
inc
aam
loopne
mov
inc
les
(bad)
fcomp
push
add
push
cs
frstor
les
stos
scas
xchg
loopne
shl
mov
cmc
and
pop
(bad)
(bad)
loope
lods
push
retf
push
jmp
push
sub
pop
loop
pop
(bad)
jmp
test
mov
(bad)
dec
ja
(bad)
fstp
xor
cs
cmp
mov
mov
xchg
or
loop
(bad)
dec
push
ret
push
pop
sbb
(bad)
xchg
pop
inc
int
pop
into
dec
fsubr
xchg
cmp
xlat
fist
adc
mov
push
xor
bound
stos
mov
in
jne
test
sar
sbb
rcr
test
dec
(bad)
xor
cmp
leave
pop
push
aaa
push
pop
adc
stc
push
cwde
adc
retf
mov
fmul
in
mov
fild
gs
nop
std
xchg
mov
jp
dec
mov
cmp
ret
mov
aaa
mov
pop
leave
push
(bad)
mov
pop
icebp
stc
popf
cdq
fild
dec
pop
or
dec
jno
daa
cmps
push
retf
xor
add
mov
enter
adc
dec
retf
cld
pop
jns
nop
(bad)
clc
and
ins
mov
sbb
sbb
out
movs
inc
pop
cmp
fpatan
mov
push
pop
fmul
adc
(bad)
xor
pop
dec
xchg
jb
scas
lock
sub
sub
dec
sub
mov
arpl
cld
jg
in
sub
push
das
pop
shld
xor
adc
jmp
jmp
(bad)
in
mov
mov
cdq
and
inc
mov
mov
cwde
xchg
cmp
lods
mov
nop
jle
ss
push
ins
or
imul
push
jle
cmp
xor
rcl
mov
sbb
mov
mov
lea
dec
pmuludq
loop
icebp
sbb
shl
sub
mov
mov
cmp
loop
rol
mov
mov
mov
add
loope
nop
cld
pop
int
jno
in
jnp
fldz
inc
or
mov
and
test
fld
push
dec
inc
push
sti
arpl
mov
cmp
stos
jae
sub
xor
sub
(bad)
clc
xor
mov
into
test
jbe
fmul
jmp
addr16
mov
inc
int3
push
ja
out
iret
mov
push
add
stos
mov
loope
stc
jbe
xor
(bad)
imul
jmp
xchg
push
cli
outs
sbb
jbe
out
add
sub
icebp
(bad)
pop
inc
fsub
or
aad
dec
adc
mov
xchg
mov
push
mov
and
fstp
xchg
dec
fwait
jge
jmp
(bad)
mov
mov
outs
and
jbe
fisttp
jo
cmp
jo
hlt
and
lods
add
push
sub
jp
jo
xchg
pop
push
push
dec
stos
xchg
mov
call
mov
jle
cdq
push
test
imul
outs
xchg
pop
jmp
xchg
push
mov
sbb
aaa
jl
dec
mov
push
shl
jno
popa
mov
outs
xlat
hlt
ins
jnp
gs
mov
shr
pop
repnz
shl
pop
push
dec
mov
mov
pop
sbb
mov
(bad)
out
jo
sar
call
iret
and
mov
stc
outs
and
xchg
sub
jle
xchg
inc
push
push
lods
cld
xchg
push
dec
jne
rcl
xchg
xchg
dec
push
in
adc
dec
fnstsw
fnsetpm(287
bound
repz
sti
iret
push
push
ret
cmp
iret
cmp
cmp
movs
sbb
fdivr
int3
out
inc
mov
xchg
mov
mov
arpl
jl
mov
mov
pop
ins
cs
lods
ja
xor
(bad)
aam
pusha
inc
cld
and
cmp
sbb
mov
jmp
inc
popa
ins
push
inc
out
call
cmc
gs
scas
adc
cmp
hlt
add
jge
rcl
dec
jp
dec
lahf
push
and
jp
add
scas
popf
cmp
adc
jb
fst
jo
loope
(bad)
cmp
xchg
push
or
xchg
daa
sbb
sbb
sub
xor
repnz
pusha
cdq
pop
out
or
test
sub
call
pop
mov
bound
xchg
push
js
pop
enter
adc
xor
shl
int
arpl
dec
inc
pop
push
mov
jecxz
xchg
and
cmps
imul
push
push
add
and
fbstp
js
xchg
loop
xor
dec
xor
retf
in
mov
imul
pop
cmps
dec
test
call
or
or
inc
mov
retf
vmsave
fild
sbb
sub
push
cmp
(bad)
or
pop
clc
mov
jge
stos
div
jp
mov
sbb
(bad)
push
popa
outs
imul
les
das
xchg
pop
jne
cmp
popa
das
sbb
and
mov
inc
movs
mov
xchg
es
shr
pushf
mov
popa
and
popf
adc
dec
call
fs
daa
mov
mov
jmp
call
icebp
mov
daa
xchg
loopne
call
sar
test
inc
mov
mov
mov
or
sbb
add
ja
repnz
in
fnsave
push
sub
cmp
sbb
test
lock
hlt
jb
sub
jecxz
mov
fisttp
test
dec
test
mov
rcl
in
rcl
jb
add
adc
xor
rol
dec
pop
mov
jmp
push
push
adc
fs
mov
int3
sbb
cld
dec
xchg
fucomp
xchg
jmp
sub
sub
adc
mov
retf
sub
ror
and
dec
popa
gs
jmp
mov
add
ret
sub
pop
xor
test
mov
pop
sbb
mov
lods
push
std
mov
iret
sbb
fcomip
ret
jne
ins
ds
mov
ja
sub
pop
jmp
cmp
mov
es
sbb
pusha
clc
call
repnz
inc
shl
sbb
or
loope
push
adc
jb
(bad)
aad
cwde
test
aaa
fisttp
sti
loop
inc
adc
sbb
mov
pop
lock
jne
xchg
iret
mov
les
pop
or
into
mov
jecxz
mov
ins
xchg
jecxz
std
and
gs
daa
cmp
call
test
out
pop
(bad)
daa
dec
dec
jecxz
test
ja
rcl
shr
sahf
xchg
sbb
sbb
iret
popf
lahf
cmp
push
sub
mov
xchg
or
scas
push
sbb
ins
and
call
cmps
mov
lock
and
xor
sub
test
mov
pop
sar
aad
hlt
imul
lods
pusha
inc
dec
(bad)
sbb
pop
or
push
fisttp
and
mov
push
xor
scas
push
mov
inc
add
cmp
loope
dec
and
xor
aaa
ss
pop
cmp
xor
mov
mov
call
mov
xchg
test
cmp
add
ret
add
xor
(bad)
retf
lods
data16
sub
cmc
scas
pop
fnstsw
xchg
fsubr
dec
xor
pop
or
jg
cmp
mov
repz
sbb
adc
repnz
(bad)
inc
mov
add
mov
sub
jns
pop
lods
in
or
cwde
rol
repnz
in
pop
sbb
add
gs
dec
adc
into
push
add
jg
repnz
mov
pop
(bad)
fstp
xor
mov
mov
adc
or
jno
mov
xor
cmps
inc
enter
dec
mov
push
push
mov
or
sbb
jg
adc
push
sbb
(bad)
movs
arpl
sbb
sti
pop
js
(bad)
pop
lods
or
pop
mov
mov
xchg
sub
sbb
fmul
jmp
mov
mov
or
fadd
js
imul
mov
nop
sub
dec
push
icebp
cmp
data16
inc
xchg
dec
(bad)
pop
arpl
jb
push
iret
sbb
dec
jmp
sub
add
fdiv
cmp
loope
fxch
repnz
addr16
data16
les
jg
sub
scas
jbe
mov
ja
movs
(bad)
repnz
push
jp
(bad)
in
inc
or
mov
not
clc
dec
sbb
xchg
sub
and
lahf
push
movs
es
icebp
xchg
mov
cmp
lock
mov
inc
ins
xchg
loop
lods
das
inc
call
adc
rcl
je
push
mov
leave
dec
mov
sub
fwait
lods
or
das
or
aam
sbb
cs
cmp
ficomp
xchg
mov
retf
mov
xchg
(bad)
(bad)
stc
jg
sbb
lock
jno
mov
sar
mov
pop
mov
and
mov
mov
push
pop
mov
out
sahf
leave
movs
stc
pop
add
(bad)
sub
stc
stc
std
sbb
scas
sub
push
or
or
add
ret
loopne
je
in
cmp
mov
mov
outs
or
dec
add
repnz
cmp
fsub
xlat
mov
(bad)
std
fsubr
and
cwde
loopne
sub
xchg
jmp
lahf
jmp
in
stc
out
mov
in
jecxz
or
or
dec
outs
mov
aad
fxch
or
loopne
(bad)
retf
add
aaa
mov
dec
push
inc
repz
add
adc
mov
in
pop
mov
inc
imul
ss
dec
jmp
fldcw
xor
add
push
sub
pop
push
es
and
in
out
cmp
pop
enter
ins
inc
jbe
push
icebp
(bad)
sub
cmp
(bad)
xor
add
adc
xlat
inc
jbe
or
into
mov
in
push
ss
pop
push
mov
xchg
xchg
adc
sbb
sbb
aam
enter
cs
fs
inc
push
out
jne
pop
jl
sub
inc
aas
xchg
enter
and
aam
push
pop
pop
lods
or
inc
xchg
or
pushf
addr16
(bad)
mov
in
ins
cmp
dec
stc
push
outs
mov
leave
dec
nop
push
aas
stc
outs
jge
sbb
icebp
je
rcr
and
test
cmp
cmp
fdivr
test
(bad)
pop
das
popf
addr16
mov
jo
cld
cmp
mov
cmp
and
adc
inc
mov
dec
mov
mov
jb
outs
rcr
adc
in
mov
outs
fidiv
pop
mov
cdq
(bad)
aad
and
iret
jnp
push
inc
dec
add
outs
push
xchg
and
jg
ds
mov
inc
enter
push
push
dec
mov
(bad)
jb
and
or
dec
and
and
in
xchg
stc
dec
jl
mov
icebp
jnp
add
xchg
inc
push
and
mov
loope
cli
out
mov
xor
neg
lods
push
and
jl
outs
jne
lahf
rcr
xchg
push
ds
cdq
jno
mov
and
es
sbb
xor
inc
gs
in
cmp
mov
push
test
jmp
ss
(bad)
mov
arpl
or
add
mov
into
sbb
push
fsubr
sub
std
loopne
and
adc
add
call
add
stos
jmp
mov
jbe
lea
push
enter
cmp
pop
cli
das
ret
dec
mov
inc
test
inc
lea
mov
call
adc
lahf
adc
cdq
mov
sbb
int
test
out
dec
jae
sbb
jne
jne
out
idiv
shl
jb
arpl
lahf
push
div
dec
xchg
xor
bound
push
loop
or
xchg
jmp
fdivr
int3
lds
stos
and
adc
sbb
hlt
sti
mov
inc
retf
outs
test
inc
jle
add
and
inc
shl
or
mov
aad
xor
jno
jle
dec
cmp
jp
outs
stos
dec
arpl
sahf
retf
(bad)
gs
ror
cmps
pop
xor
scas
leave
out
sbb
cmc
in
sub
in
scas
data16
cmp
push
stc
shr
fs
(bad)
jmp
loope
jp
push
cmp
cmps
dec
and
les
scas
scas
inc
mov
(bad)
mov
lds
add
mov
test
xor
fstp
adc
test
arpl
or
(bad)
xor
push
mov
push
repz
mov
pusha
sbb
ds
cli
neg
ins
xlat
pop
(bad)
cmp
fs
mov
mov
sahf
test
cmp
xor
mov
mov
lods
fs
retf
cs
call
mov
shl
or
mov
cmp
mov
mov
push
pop
push
gs
enter
daa
jmp
and
and
sbb
mov
pop
inc
mov
inc
push
mov
popa
lods
sbb
and
adc
outs
cmp
push
aam
out
jbe
inc
pop
push
nop
inc
mov
ds
cdq
gs
inc
mov
test
inc
es
pop
push
(bad)
bound
fwait
lods
pop
stc
and
push
push
mov
es
cwde
and
or
inc
ds
mov
sbb
inc
inc
inc
clc
dec
fiadd
sbb
jge
push
(bad)
or
jb
in
retf
bound
sub
sub
mov
jp
cmp
scas
push
pop
test
or
enter
fisubr
out
pop
out
(bad)
xchg
pusha
push
sar
pop
(bad)
mov
jns
fdiv
cmp
lahf
mov
int3
pusha
or
cmp
call
pop
test
neg
fwait
ret
mov
arpl
jnp
pop
ret
call
mov
inc
popf
scas
push
xchg
aas
adc
das
xchg
xor
add
cmc
fisttp
rol
cmps
(bad)
out
mov
cmps
jge
stos
adc
dec
jae
addr16
sar
xchg
mov
retf
pop
and
dec
push
and
and
xor
popa
mov
icebp
inc
push
int3
jne
inc
xchg
frstor
adc
out
cwde
mov
arpl
mov
cmp
adc
in
inc
fcmovnu
ret
(bad)
cli
call
ins
dec
mov
stos
fmulp
cmp
sbb
daa
call
cdq
dec
dec
int
mov
divps
and
push
jge
xor
dec
push
mov
rcl
sar
cmps
sub
cmp
mov
xlat
xchg
jg
jae
pop
push
sub
icebp
ss
push
jns
clc
jae
std
dec
push
sbb
or
pop
mov
jmp
add
push
loopne
je
sub
dec
sub
cmp
(bad)
stos
fnsave
sbb
test
mov
xchg
ins
adc
in
test
ror
or
je
inc
imul
call
fwait
cdq
xchg
leave
push
lds
fwait
pop
sti
arpl
push
(bad)
push
fs
push
push
mov
ds
(bad)
cmp
jg
cwde
fisub
popf
push
and
dec
dec
mov
cwde
push
imul
and
push
xor
adc
clc
rcl
int
ror
sub
add
mov
nop
stos
shl
adc
ja
pop
int3
dec
dec
adc
mov
loope
mov
jg
mov
sub
sub
mov
mov
dec
in
xor
sub
or
not
mov
frstor
jmp
pop
sbb
aam
inc
jo
loop
call
mov
jl
mov
aam
movs
ds
(bad)
nop
or
dec
cmp
imul
jne
ds
stc
bound
xchg
inc
mov
je
fwait
cmps
sub
lahf
loopne
cmp
xchg
mov
outs
sti
ret
lea
xchg
sbb
in
aad
jle
out
aaa
mov
mul
jb
out
inc
dec
call
adc
sbb
jp
nop
(bad)
push
or
xor
and
sahf
lds
pop
in
xchg
jecxz
jge
xor
aam
mov
es
pop
mov
sbb
cmp
(bad)
cmp
cmp
jmp
xor
adc
dec
es
add
and
cmp
mov
or
cmp
out
add
push
mov
cmp
call
popa
adc
push
hlt
mov
xlat
inc
jg
(bad)
or
push
push
stos
outs
ror
sbb
jecxz
test
jl
retf
lods
xchg
push
add
rol
outs
dec
adc
test
shl
xor
retf
jae
adc
in
push
aas
cmps
mov
sti
jg
test
cld
dec
xchg
pop
push
ret
cmps
xchg
out
jne
pusha
scas
push
inc
and
cmp
ror
lock
out
xor
cld
adc
cmp
adc
mov
mov
pop
pop
pop
ds
test
pusha
leave
sub
(bad)
lock
ret
xor
mov
mov
lods
ja
jmp
fiadd
in
inc
(bad)
sbb
mov
rol
pop
mov
test
scas
stc
mov
(bad)
jo
mov
dec
and
lahf
je
ins
(bad)
xor
inc
nop
in
fst
pop
dec
inc
mov
rol
cmp
xlat
(bad)
lods
and
pop
nop
outs
das
dec
dec
stos
inc
push
dec
mov
or
loope
inc
fiadd
pop
mov
loop
pop
ret
dec
sbb
icebp
mov
jecxz
xchg
inc
mov
cmc
dec
imul
mov
les
rcr
sar
inc
mov
mov
das
rol
mov
fwait
or
lds
jp
ret
push
(bad)
daa
and
cdq
add
xor
sub
mov
mov
fcmovne
lea
mov
sbb
stos
xor
ret
loope
jne
ins
jnp
mov
mov
push
add
(bad)
(bad)
imul
inc
mov
js
cmp
sub
sub
jmp
mov
or
push
loopne
aaa
(bad)
and
xor
shl
pop
pop
sbb
sub
in
and
ds
sbb
fisttp
jb
xor
fimul
rcr
das
mov
pusha
lock
jns
fidiv
repz
lods
mov
adc
push
jg
xor
push
sbb
xor
in
aam
sub
mov
or
in
or
out
mul
push
lock
cs
dec
out
pop
call
lods
iret
loopne
stos
push
ins
dec
pop
fcomp
xchg
gs
mov
jp
inc
add
lods
cwde
inc
retf
fcomp
adc
pop
fisttp
fidiv
es
lds
jae
add
iret
repnz
outs
ror
ret
test
(bad)
mov
imul
cmps
in
mov
mov
cmps
xchg
push
outs
outs
mov
cs
and
fsubr
shl
push
mov
jno
adc
and
jmp
add
pop
pop
sub
iret
ja
pop
nop
fs
xlat
mov
mov
in
adc
xor
imul
in
cld
add
xchg
mov
lods
pop
pop
mov
add
dec
and
or
add
outs
sbb
add
aas
pop
hlt
ror
rcr
jns
sahf
out
test
je
xchg
jle
ins
cmp
in
xchg
daa
mov
retf
cli
jmp
enter
test
mov
push
out
(bad)
jp
or
dec
xor
shr
shl
cmp
in
nop
mov
das
movs
mov
cmp
and
inc
mov
shl
xchg
push
scas
inc
into
pop
fist
jge
mov
or
sti
into
sub
hlt
inc
sbb
cmp
cmc
jecxz
cmc
mov
sahf
add
ficom
pop
retf
xchg
fistp
jbe
mov
scas
into
pop
cli
and
scas
pushf
mov
inc
sub
(bad)
mul
jns
xchg
daa
add
std
nop
sahf
fcmovnu
mov
xor
xchg
mov
jns
stos
cmps
sbb
(bad)
pop
jne
mov
cmc
cwde
inc
lock
sbb
bound
inc
jmp
loope
push
sbb
scas
sbb
xchg
cmp
cmps
in
cmp
mov
mov
ins
mov
out
and
mov
aam
dec
shr
sbb
fwait
imul
pop
xchg
jl
inc
jmp
push
pop
pop
mov
adc
and
mov
(bad)
stc
inc
jmp
fnstsw
(bad)
not
add
xor
push
inc
or
and
aad
lods
jns
mov
push
loope
sub
stos
push
imul
xor
mov
cs
cmp
arpl
ja
retf
push
cs
mov
dec
inc
pop
sub
das
pop
xchg
arpl
sbb
pop
(bad)
das
add
jns
push
mov
enter
sbb
push
movs
add
lods
mov
pop
in
daa
(bad)
fisub
mov
lahf
mov
mov
inc
inc
mov
sub
dec
cmp
xor
mov
gs
stos
pop
gs
repnz
fcomip
ins
loope
mov
sahf
jo
popa
mov
test
push
popf
mov
mov
mov
jns
pcmpeqb
xchg
aam
(bad)
call
dec
xor
xchg
dec
scas
ror
mov
mov
cwde
das
sbb
call
imul
scas
lock
ja
mov
lahf
pop
jg
mov
gs
es
mov
adc
icebp
shl
cli
inc
adc
lahf
ret
xor
inc
pop
lock
dec
ror
dec
or
xor
popf
hlt
cmp
(bad)
aas
daa
pop
lods
pop
outs
aas
shr
enter
cs
sahf
cmc
sub
jne
sub
xor
movs
shl
pushf
movs
pushf
mov
sbb
cmp
into
push
pop
pop
push
repnz
cmps
icebp
pop
fldz
push
xor
xchg
shr
out
jnp
addr16
or
mov
in
lock
mov
or
and
add
xchg
fcmovnu
ror
fimul
es
scas
mov
out
or
pop
jb
(bad)
cli
inc
(bad)
jmp
pop
cmps
pop
std
std
in
or
xor
retf
adc
xor
fcom
pop
add
ins
mov
pop
inc
int
jge
inc
inc
movs
mov
adc
inc
jno
imul
stc
pop
mov
test
adc
xor
enter
cmp
out
mov
not
add
sub
sub
sahf
(bad)
in
aam
into
xor
fmul
mov
cmp
xor
das
(bad)
mov
mul
sbb
pop
pop
clc
dec
mov
ret
mov
imul
inc
pusha
push
inc
pushf
call
add
push
pop
daa
inc
aam
addr16
pop
add
or
sbb
cmp
pushf
int3
cmp
aad
xchg
nop
xchg
popa
fist
test
pop
rcl
loopne
xor
stos
adc
pusha
leave
xchg
adc
pop
mov
mov
add
stos
cmps
xchg
adc
imul
cmp
mov
shl
call
dec
cmc
ja
enter
adc
and
psubb
aam
jge
cmovnp
pop
icebp
mov
pushf
cmp
or
addr16
int
push
and
fwait
sub
pop
aaa
or
mov
lods
lea
test
in
sub
jmp
outs
mov
sub
mov
xchg
or
fist
inc
out
leave
pop
cld
pushf
adc
test
jp
rol
sbb
ins
popf
dec
jmp
lds
adc
cs
icebp
ficom
mov
dec
sub
jl
loop
pop
mov
repz
sti
imul
je
test
inc
mov
out
(bad)
leave
test
mov
lods
xor
and
out
jg
sbb
push
mov
pop
jmp
cmc
sbb
pop
in
adc
or
sub
repnz
inc
mov
aaa
in
jne
mov
sub
sub
dec
das
adc
push
mov
push
and
mov
add
jo
jecxz
and
ja
lods
pusha
pusha
das
jae
inc
pusha
or
inc
fwait
xchg
dec
rcr
xchg
lds
jns
jb
jle
pop
push
push
mov
add
mov
pop
dec
pop
jge
jmp
jbe
adc
push
push
out
pop
push
push
mov
mov
mov
cmp
pop
inc
shr
pop
xchg
mov
(bad)
not
stos
mov
jmp
retf
cmp
sbb
mov
test
lahf
lock
mov
add
test
hlt
and
jmp
sbb
and
mov
sti
jp
stos
jmp
sub
inc
push
movs
adc
out
mov
dec
cmp
sahf
retf
scas
loopne
fld
add
sahf
add
sahf
mov
jno
stos
mov
ret
stos
pop
shl
ds
push
jecxz
sub
loope
sahf
pop
adc
dec
fdiv
out
dec
jb
jno
je
test
test
adc
mov
jns
sbb
mov
jl
cdq
xchg
jmp
mov
jmp
loop
in
and
addr16
xchg
aad
pop
cmp
enter
push
std
ss
neg
xchg
xchg
add
mov
aam
xchg
push
retf
(bad)
xchg
(bad)
iret
fst
pop
push
jno
fcom
ins
out
mov
sub
sbb
push
and
movs
rcl
pop
rol
(bad)
mov
sub
and
add
iret
es
dec
jae
mov
mov
cmps
jg
xor
mov
add
or
sar
add
push
popf
and
js
test
push
mov
leave
inc
jnp
lock
jmp
call
lods
xchg
into
(bad)
loope
jp
outs
loopne
dec
sub
shl
dec
stc
mov
inc
mov
and
inc
shl
shl
(bad)
lods
loop
shl
pop
aaa
xchg
fsub
shl
les
cdq
mov
(bad)
jmp
mov
sub
pop
std
inc
jmp
retf
(bad)
loop
mov
(bad)
xchg
cdq
cmp
lea
leave
sub
call
cmp
cld
jns
mov
movs
mov
xchg
adc
sar
int3
cmps
in
mov
or
sbb
cmp
cs
push
pop
out
int3
stos
fist
or
mov
leave
cmp
mov
call
movs
pusha
sbb
mov
sbb
stos
nop
sbb
push
mov
push
xor
add
test
(bad)
ds
sbb
test
push
enter
gs
mov
dec
or
iretw
jo
mov
nop
popf
adc
add
or
sub
add
fwait
push
push
push
(bad)
daa
xor
mov
outs
call
xchg
repz
in
push
stos
and
dec
adc
jle
sti
shl
cld
mov
fcomp
test
push
cld
pop
push
mov
bound
cmp
repnz
fldcw
pop
rcl
dec
mov
shr
out
stos
es
mov
pusha
paddw
call
jne
call
adc
fwait
cs
fmul
xor
hlt
dec
dec
ror
and
dec
and
in
in
icebp
std
mov
push
dec
test
mov
cmp
imul
mov
xlat
shr
and
jo
jmp
lods
fmul
enter
sub
cmp
mov
mov
fcomp
jle
cmp
xchg
pop
fisttp
cmp
call
mov
vpackuswb
sub
xchg
inc
outs
push
daa
and
pop
mov
fs
cmc
mov
(bad)
sbb
lea
jp
xchg
cdq
jo
mov
mov
push
scas
jne
bound
or
scas
and
mov
and
and
inc
loop
or
and
aam
call
sbb
arpl
jo
std
fs
test
mov
mov
ss
popf
pop
jae
jnp
xlat
out
push
leave
jne
fwait
dec
push
cmp
mov
lods
stos
or
adc
xchg
fcom
div
test
jne
sbb
popa
mov
ins
sti
cmps
sub
sbb
test
fcom
loope
or
mov
lahf
mov
in
jns
pop
pop
pop
ja
(bad)
lahf
js
cmp
xor
xor
call
cmps
jns
cmp
aad
outs
mov
iret
sub
inc
stc
loope
or
out
xchg
outs
outs
mov
add
inc
(bad)
and
adc
aaa
cdq
and
pop
lock
mov
clc
dec
dec
pusha
fnstsw
jae
adc
inc
mov
pop
fisub
xor
es
scas
xchg
dec
(bad)
adc
jno
xchg
call
(bad)
jmp
scas
cmc
adc
dec
icebp
sbb
add
sub
and
xchg
dec
mov
or
cs
shr
into
cmp
ja
(bad)
mov
fbld
(bad)
dec
and
mov
push
mov
lds
adc
inc
mov
imul
pop
in
sbb
mov
pop
mov
xor
inc
jmp
dec
pop
div
push
jg
movs
in
fwait
cmp
lods
fwait
int3
push
xchg
pop
xchg
cmp
nop
mov
(bad)
lods
xor
mov
imul
sahf
lods
loop
(bad)
adc
pop
push
pop
jmp
sbb
inc
push
lock
pop
ja
inc
ds
jg
add
cs
mov
cmps
mov
push
sbb
pop
(bad)
sbb
aam
ds
mov
stos
adc
cmc
rcr
jae
jmp
jmp
ffreep
pusha
jnp
jmp
je
imul
mov
data16
jae
add
mov
sbb
out
push
loopne
stos
js
mov
and
pop
in
in
aad
in
call
jp
or
pop
push
mov
jp
imul
ins
(bad)
jmp
gs
stos
cmp
(bad)
retf
clc
test
push
sti
out
dec
xchg
sub
or
and
inc
and
add
add
xacquire
pop
push
outs
outs
add
jg
sbb
or
mov
xchg
pop
adc
popa
add
push
sar
stos
mov
pop
hlt
and
in
and
vmread
inc
call
mov
inc
gs
(bad)
and
je
jmp
repnz
mov
push
dec
leave
aam
sbb
sbb
(bad)
xlat
rcr
call
leave
mov
pop
add
xchg
jmp
and
gs
(bad)
aaa
mov
or
mov
mov
loope
xor
lods
repz
push
ins
mov
or
xchg
adc
pop
or
cmp
mov
repz
jbe
jmp
push
xchg
ds
cdq
jle
adc
add
adc
lods
test
inc
xor
cmp
lahf
add
inc
jb
jmp
xor
push
sub
xlat
sbb
jp
mov
xor
retf
out
dec
scas
ror
pop
and
xchg
je
pop
xchg
jmp
xchg
mov
add
jns
sbb
jne
or
push
dec
xor
push
push
loop
push
fisttp
pop
ins
inc
push
push
shr
sbb
iret
inc
add
pop
xor
add
lea
jo
jecxz
mov
popw
cmc
cmc
jge
out
xlat
lds
(bad)
mov
ss
(bad)
xor
add
pop
sub
xchg
xor
mov
fdiv
cdq
ret
dec
jp
(bad)
xor
mov
ja
test
mov
push
sbb
push
adc
cwde
je
sbb
(bad)
xlat
push
xchg
xchg
call
push
lods
add
test
lods
cmp
enter
push
(bad)
xchg
xor
jae
scas
repnz
loopne
loop
add
push
push
sub
mov
movs
cmc
scas
fdiv
push
ja
jo
jl
daa
(bad)
test
fdiv
sbb
dec
push
xor
adc
mov
sahf
jno
xlat
mov
rcr
xchg
gs
xor
xor
push
cs
lahf
push
jne
jl
and
scas
loop
jp
adc
clc
adc
push
sbb
adc
adc
jp
jecxz
ret
push
mov
mov
retf
mov
mov
fbld
sub
popw
ror
stos
fxch
ss
fiadd
imul
call
ror
mov
syscall
out
pop
fild
mov
adc
fcmove
sahf
xor
dec
dec
jnp
or
lock
fcomp
cli
inc
sub
mov
add
mov
fldenv
sub
xchg
push
sbb
loop
lods
int3
leave
inc
mov
cmp
int
pop
xchg
mov
fisubr
or
ins
addr16
nop
jle
jno
das
jb
pop
mov
xor
test
stc
sbb
xchg
cmp
mov
push
cli
out
(bad)
xlat
popf
sub
push
sub
push
(bad)
call
data16
shl
out
dec
mov
leave
pusha
jnp
and
mov
int3
outs
out
fdivrp
or
(bad)
sbb
push
fsub
push
adc
imul
mov
sub
and
popa
retf
fiadd
add
call
pop
les
lods
clc
push
movs
push
ret
packsswb
data16
jns
(bad)
pop
or
and
pop
add
daa
sbb
cdq
addr16
pop
mov
rcl
sbb
jmp
or
jb
das
test
(bad)
adc
ret
pushf
fmul
movs
mov
cmp
pop
push
loope
jecxz
aaa
push
test
sub
loopne
(bad)
mov
ja
mov
fbld
mov
mov
xchg
repz
add
jno
push
push
add
repnz
pop
or
dec
jmp
(bad)
call
push
mov
push
pop
sub
cmp
sbb
addr16
jge
pop
mov
xchg
hlt
fist
and
test
mov
jne
add
out
adc
mov
pop
push
or
and
and
adc
movs
add
sub
loope
ins
call
fmul
int3
mov
lahf
xchg
stos
pminsw
sub
jno
pop
or
aaa
test
push
daa
xor
sbb
mov
xor
xor
ja
pop
add
sub
shr
or
movs
cmp
dec
je
jno
adc
xchg
jns
mov
mov
add
cmp
sar
loopne
fwait
jl
jno
std
xchg
add
jnp
scas
out
push
out
adc
sbb
pop
sub
add
fsubr
jae
inc
les
xchg
cld
test
stc
shl
(bad)
mov
and
dec
pop
sub
int
pop
xor
les
adc
dec
pop
mov
jne
xchg
sbb
mov
jmp
push
sbb
cdq
sbb
add
stos
dec
fsub
adc
push
int
pushf
ins
mov
cmp
push
popa
pop
sar
in
sbb
cmp
mov
dec
push
and
and
pop
push
js
fwait
stc
std
xor
mov
ins
fidivr
mov
jno
push
add
imul
cmp
push
mov
mov
mov
mov
jecxz
inc
mov
icebp
mov
pop
bnd
lahf
les
pop
or
gs
aad
aas
push
ror
fbld
push
sub
fwait
mov
push
rol
or
je
sbb
jle
mov
dec
aad
add
test
ds
sti
lea
scas
and
das
cld
jp
movs
mov
mov
jae
and
dec
jmp
and
rol
mov
mov
jb
scas
pop
mov
ret
repz
repz
mov
mov
pop
rol
fs
loopne
stc
bound
inc
(bad)
out
fist
adc
inc
(bad)
mov
bt
retf
rol
xor
add
xchg
clc
mov
cmp
out
and
fnstcw
or
hlt
ins
icebp
xor
sbb
pop
dec
xor
dec
mov
loope
xor
sub
cwde
mov
or
adc
loop
inc
sahf
jb
jae
or
add
(bad)
imul
int
push
xor
xchg
lea
ds
ret
out
and
cmps
stc
ror
es
scas
scas
pop
sbb
into
out
and
mov
and
cmp
or
popa
cmc
or
in
fsubr
sti
xchg
stc
into
repnz
inc
lods
push
mov
in
pop
lea
dec
jl
test
pop
sub
sbb
popa
or
bound
fsubr
ds
pop
or
aam
xchg
jmp
cmps
and
fstp
movs
cmp
in
ret
dec
aas
mov
ret
popf
and
pop
and
fist
xchg
pop
and
inc
retf
fisubr
mov
int3
dec
jno
hlt
adc
outs
inc
call
inc
mov
add
mov
dec
ds
sbb
gs
jmp
adc
iret
mov
and
mov
push
mov
retf
and
(bad)
mov
and
add
es
push
ins
dec
push
lods
(bad)
repnz
pop
loopne
inc
sub
push
push
adc
push
and
xchg
rcl
dec
pop
iret
jne
mov
or
ins
and
fwait
sbb
jns
pusha
adc
cmp
leave
or
push
jae
sbb
push
mov
xor
outs
mov
xchg
(bad)
mov
fstp
into
and
jp
dec
sbb
sbb
pushf
pop
add
xlat
imul
add
adc
loopne
addr16
dec
inc
jp
and
sub
and
mov
or
inc
mov
cmp
icebp
int3
in
pop
cmp
pusha
xor
ror
js
or
loopne
add
in
sbb
addr16
adc
movs
sub
jl
xchg
mov
out
rcr
jo
test
rcl
jmp
loope
dec
movs
dec
sbb
pusha
aam
adc
in
jne
and
test
fimul
cmp
in
scas
outs
jge
add
out
mov
in
test
cmps
repz
jns
jl
fbstp
xchg
and
test
xchg
jno
mov
xchg
mov
movs
push
sahf
cs
psrlw
xchg
sbb
jmp
retf
cmp
adc
or
or
outs
je
out
out
mov
sti
movs
mov
cmps
sbb
inc
leave
add
mov
push
scas
lahf
push
and
loop
xchg
xchg
bound
mov
mov
out
fcomp
sub
clc
push
(bad)
iret
pop
cld
std
push
pusha
jae
or
repz
mov
ja
pop
(bad)
sti
test
sbb
mov
in
mov
xchg
dec
adc
dec
lds
add
clc
pop
scas
pop
(bad)
retf
rcr
cmp
jne
jae
pusha
jnp
mov
cwde
adc
and
cwde
pop
push
mov
xor
stos
out
add
das
test
outs
sub
add
cmp
in
xchg
jno
outs
aam
sub
ds
dec
push
jae
mov
sti
adc
adc
leave
jo
jnp
loop
add
loop
mov
inc
lds
ja
(bad)
scas
cmp
outs
lods
icebp
sar
or
(bad)
mov
add
ret
out
shl
xchg
xor
mov
popf
daa
clc
add
xor
xchg
jnp
mov
icebp
sbb
aad
add
pop
ret
mov
loopne
int3
js
sub
mov
in
or
cmovs
xchg
movs
cwde
mov
and
icebp
or
ins
inc
les
shl
xchg
pusha
xor
adc
push
fimul
cmp
pop
inc
xlat
inc
js
(bad)
lods
movs
repz
das
int
and
dec
test
pop
add
pop
pop
xchg
xchg
mov
pop
mov
das
pop
jg
sbb
add
imul
arpl
mov
inc
das
sbb
dec
lods
dec
outs
shl
xchg
mov
push
aaa
mov
mov
pushf
sub
sub
fs
jle
in
sbb
cmp
cwde
pop
lea
mov
mov
pop
cmp
cmps
xchg
mov
mov
ret
lods
lds
popf
call
xchg
pop
push
ss
ret
cmovns
and
stos
test
aad
xchg
aam
(bad)
enter
xchg
(bad)
mov
cmps
jg
inc
fiadd
xlat
ja
pusha
add
fidivr
test
mov
test
aam
cld
outs
addr16
sub
jnp
test
adc
mov
es
clc
mov
hlt
sub
std
adc
jns
xlat
jmp
fdivp
push
outs
sbb
mov
jmp
(bad)
jmp
dec
push
retf
xchg
in
cmp
dec
mov
call
sub
push
adc
jbe
sbb
stc
inc
ds
(bad)
inc
jmp
xchg
ret
out
ins
cmp
clc
jecxz
xor
pop
cld
iret
pusha
nop
mov
jmp
int
aam
addr16
xchg
scas
xor
jnp
test
inc
push
and
pop
mov
repz
xchg
mov
mov
mov
(bad)
push
dec
push
xor
js
aaa
sub
pop
iret
mov
adc
(bad)
mov
sbb
outs
mov
inc
in
jno
dec
pop
pop
out
nop
mov
jb
or
(bad)
cmp
adc
mov
inc
out
mov
and
popa
std
mov
sub
out
jl
leave
jg
in
jmp
jns
daa
sti
push
in
mov
fistp
adc
sub
mov
xor
xlat
lods
stos
mov
push
jp
cmps
scas
lds
sbb
adc
or
(bad)
xchg
aas
dec
jae
movs
nop
popf
retf
push
out
pop
jle
dec
cmp
push
rcr
in
push
into
cmps
std
push
and
adc
outs
mov
cmc
into
stos
dec
repnz
xchg
jb
xor
jns
enter
or
cmp
mov
in
inc
rcl
inc
mov
repnz
cld
call
add
test
loop
pop
outs
pop
ins
cmps
ins
xchg
inc
xor
repz
retf
ja
mov
push
xchg
cmp
int
xchg
jns
lock
out
cwde
data16
jl
pop
jecxz
push
inc
(bad)
push
xchg
push
pop
xor
pop
sub
inc
movs
mov
mov
popa
dec
je
daa
dec
into
shl
out
dec
mov
ds
repz
in
out
lea
sub
pop
mov
scas
jbe
jmp
iret
jmp
fwait
dec
jmp
jl
xor
in
mov
mov
xchg
ja
jnp
mov
jecxz
push
movs
jbe
mov
push
retf
mov
mov
sbb
push
lods
push
jne
dec
jl
add
out
add
mov
(bad)
lock
fdiv
jge
sbb
repnz
retf
out
sub
pop
pop
imul
clc
and
push
jecxz
nop
and
mov
jno
mov
pop
outs
cmp
mov
inc
xchg
out
xor
lock
dec
dec
sbb
std
xchg
push
sub
ret
scas
retf
sub
test
or
jge
sbb
jns
jae
inc
(bad)
xchg
repnz
jle
push
inc
mov
sub
sub
fld
cwde
iret
bound
cmps
push
call
jns
scas
mov
fcomp
aad
mov
enter
push
adc
mov
mov
in
mov
dec
call
add
and
push
xchg
push
xchg
imul
js
adc
icebp
cdq
mov
mov
xlat
pop
movs
out
nop
xor
sub
mov
call
xor
fs
loopne
(bad)
jno
mov
dec
je
mov
xor
fistp
rcl
push
xchg
cwde
push
or
mov
dec
aas
pop
xor
cmc
retf
mov
mov
nop
mov
arpl
cmc
sar
push
push
fst
ret
std
test
dec
neg
jno
push
out
adc
out
data16
jbe
jae
pop
xchg
pushf
(bad)
xor
mov
push
mov
cmps
mov
cmps
sahf
xor
jmp
and
and
pop
mov
or
jecxz
xchg
sub
pop
fld
jmp
bound
dec
add
ret
inc
or
fistp
ins
push
sub
mov
mov
push
jmp
mov
and
test
xor
xchg
sbb
imul
or
loopne
xchg
add
mov
xchg
add
imul
dec
inc
cwde
sub
(bad)
fbld
mov
sbb
dec
lea
jge
pushf
dec
inc
les
sub
mov
xchg
imul
dec
aad
in
int
xchg
pop
addr16
pop
cmp
dec
sbb
add
cmp
mov
aaa
and
push
cmc
int3
int3
xchg
jmp
out
out
xor
out
jge
cmp
mov
jl
pop
lock
and
push
jp
rcr
push
outs
jno
push
pop
call
(bad)
mov
jmp
lahf
mov
test
les
out
loope
pop
ja
sub
ffreep
call
xchg
adc
push
sub
popf
dec
dec
sbb
scas
mov
xchg
stc
cmp
xchg
xor
ja
inc
mov
sar
jo
or
xchg
pop
adc
shr
cmps
imul
shl
std
or
movs
cmps
xchg
pop
sbb
in
sub
mov
pop
cs
js
dec
mov
sbb
outs
mov
ss
push
mov
jmp
pop
std
(bad)
jmp
mov
ds
push
mov
jbe
cld
add
mov
sbb
xor
mov
std
or
push
cmps
inc
adc
xchg
and
jne
adc
repnz
mov
and
add
clc
ret
repnz
pop
(bad)
pop
push
adc
push
ret
fisttp
in
popa
mov
aam
in
jecxz
sub
dec
lock
dec
fnstenv
add
cmp
add
movs
cdq
scas
sbb
sti
jns
jns
fst
cmp
outs
cmc
(bad)
test
sub
outs
and
push
mov
pop
cli
pop
xchg
rol
push
nop
sub
sbb
push
test
xor
jo
inc
(bad)
push
dec
dec
test
jb
adc
fsub
or
in
dec
scas
aad
psraw
and
iret
iret
fimul
mov
xor
ret
retf
push
test
aaa
out
fidivr
mov
jecxz
push
scas
fidiv
cs
mov
movs
adc
dec
into
bound
movs
js
and
(bad)
popa
push
stos
jb
sbb
mov
and
xchg
or
mov
idiv
and
inc
mov
cld
adc
mov
fcomp
cmp
movs
inc
lods
pushf
cdq
mov
ds
test
inc
cmp
push
jmp
inc
mov
pop
jbe
mov
mov
pop
enter
mov
add
or
mov
xchg
nop
pusha
ja
scas
in
in
clc
test
xor
mov
cwde
jmp
cmp
xor
sti
sbb
sbb
lods
and
enter
inc
std
(bad)
imul
fwait
jb
mov
jo
(bad)
fild
fs
pusha
daa
leave
add
cli
mov
addr16
pop
sbb
into
aaa
cmp
mov
dec
and
push
icebp
stc
xor
call
xor
ror
adc
adc
scas
(bad)
mov
iret
dec
stos
xor
aaa
call
data16
mov
stos
sbb
pusha
xor
(bad)
dec
fidivr
adc
retf
fisttp
sub
(bad)
dec
mov
rcl
dec
push
stos
push
jecxz
daa
or
cmp
adc
sub
inc
ins
sbb
ror
or
xor
jl
int
js
mov
fdivr
mov
cmp
jmp
js
mov
adc
push
aaa
or
jnp
or
das
out
int3
retf
lods
ret
cmp
lods
fxch
or
xchg
(bad)
out
mov
in
aas
pop
cmp
mov
cmp
stos
push
inc
push
repz
js
jmp
inc
pop
jo
jo
loopne
not
lds
call
push
test
fld
add
shr
fldl2t
mov
in
jl
mov
mov
sub
sbb
(bad)
mov
fcom
jmp
jecxz
sub
sub
arpl
jmp
outs
xchg
or
das
xor
dec
push
adc
les
xor
jl
mov
fsubr
adc
(bad)
and
lea
dec
icebp
and
cmp
mov
xchg
xor
adc
add
retf
or
aam
dec
jge
mov
add
or
mov
pop
lock
push
or
ins
sar
add
pusha
cmps
hlt
mov
idiv
idiv
imul
movs
jge
js
and
push
dec
sbb
ja
mov
adc
inc
xor
stc
mov
pop
dec
lods
adc
and
(bad)
cmp
xor
imul
or
and
inc
sub
fld
loop
sub
ret
pop
push
lods
add
(bad)
sub
adc
adc
jbe
shl
clc
aas
arpl
mov
add
enter
and
sbb
or
mov
xor
jnp
jecxz
xchg
or
in
sahf
sbb
inc
cmp
lahf
pop
(bad)
sbb
pop
es
xor
pushf
int
popa
out
sbb
je
adc
mov
aam
pop
in
xlat
lea
int3
out
dec
xchg
ror
aad
or
daa
sub
mov
mov
sub
xchg
add
pop
mov
or
mov
(bad)
not
(bad)
leave
sbb
fnstcw
das
aam
push
pop
sub
add
shl
add
pop
mov
int
loop
repnz
pop
mov
jg
xchg
sbb
arpl
or
or
test
mul
ins
push
(bad)
mov
loop
(bad)
lock
push
xlat
aad
push
mov
push
div
into
mov
repz
aam
adc
sub
add
add
lds
lahf
test
(bad)
jmp
mov
sbb
adc
mov
out
add
mov
mov
in
push
xchg
cli
mov
js
xchg
mov
mov
int3
inc
sub
xchg
outs
aas
or
clc
data16
enter
jns
(bad)
in
loop
lods
sbb
les
fs
mov
fsub
adc
adc
stos
data16
sbb
or
pop
cwde
scas
jge
rol
inc
(bad)
mov
in
add
jl
fcomp
bound
sbb
and
jg
addr16
mov
mov
int3
sbb
sub
arpl
sbb
jnp
cmps
sar
cs
std
inc
push
cdq
adc
jbe
adc
cwde
mov
jo
sbb
xchg
ret
aaa
outs
xor
inc
inc
cmc
xor
imul
mov
xchg
cdq
adc
retf
pop
mov
pop
inc
out
inc
in
adc
xchg
loope
dec
popf
lods
popa
add
ror
mov
sbb
add
mov
popa
sub
cs
ret
xchg
pop
xchg
iret
pop
cdq
stos
xchg
or
movs
adc
jmp
jge
xchg
mov
dec
pop
jecxz
cmp
xchg
arpl
test
fiadd
pand
shl
jb
dec
push
xchg
xchg
jmp
sbb
and
mov
fisubr
pop
xchg
dec
push
push
jne
cmps
push
sub
out
adc
leave
stc
mov
sbb
shl
or
je
mov
int
push
retf
push
pop
test
fcmovnb
cmps
add
pop
movs
mov
pushf
arpl
das
xchg
and
mov
aas
cdq
push
repnz
scas
inc
(bad)
aas
in
in
aam
imul
mov
and
and
cmp
xchg
xor
mov
outs
cmps
push
dec
sub
and
mov
adc
(bad)
int
jbe
(bad)
fisttp
xor
jae
and
xchg
dec
ins
mov
inc
nop
fst
sub
mov
test
js
cmp
shr
sub
mov
fistp
ret
lods
sub
or
clc
dec
scas
adc
mov
arpl
icebp
cmp
push
adc
mov
int3
and
mov
mov
pop
mov
mov
add
mov
xchg
dec
jge
sub
inc
(bad)
adc
enter
inc
popf
cld
cmp
out
pop
adc
test
repz
lahf
test
push
out
mov
out
push
pop
in
adc
pop
jmp
sub
pop
leave
cld
sub
push
add
rcr
inc
push
jb
adc
push
out
shl
in
push
inc
cli
add
mov
fsub
sbb
mov
mov
adc
psrad
(bad)
fidiv
or
and
pop
dec
fcmovb
sahf
repnz
mov
cmp
xchg
and
push
xchg
adc
inc
push
rcr
adc
shl
xchg
jp
mov
jl
xchg
shl
cld
popf
cld
add
test
and
loop
mov
push
fwait
icebp
es
data16
fs
dec
dec
pushf
mov
push
jle
xor
add
stc
shl
sbb
rol
xor
dec
jg
(bad)
cmps
xor
xor
in
sbb
test
jns
add
(bad)
aas
daa
cli
hlt
add
jecxz
push
ins
out
in
test
mov
adc
xor
mov
add
shl
mov
adc
xor
pop
frstor
cmp
xor
sbb
scas
or
mov
mov
dec
in
in
inc
lea
sbb
or
stos
stos
and
mov
mov
mov
stc
test
xor
push
sub
inc
mov
sub
loopne
mov
sbb
jge
add
mov
aad
push
jne
xchg
shl
pushf
sbb
not
outs
or
pop
push
xor
xchg
or
(bad)
loopne
inc
fnstcw
cmp
cmp
aad
xor
dec
cmp
push
pop
jb
dec
mov
in
pop
nop
ins
pop
ds
sub
repnz
push
inc
mov
mov
xor
repz
dec
rcr
sbb
cli
xor
std
push
pop
push
pop
(bad)
mov
out
fld
adc
repz
xchg
dec
or
inc
lods
push
add
in
mov
stc
push
xor
xor
adc
jmp
cmp
xchg
movs
inc
xchg
jp
fsubr
mov
fst
mov
inc
xor
jne
add
mov
ficom
or
mov
cmps
cli
xchg
or
push
fnsave
jae
mov
dec
mov
cmps
cmc
mov
dec
(bad)
cmc
cmp
ret
stos
dec
mov
cmp
jb
nop
push
aaa
jecxz
movs
xchg
je
pop
lea
xor
mov
cld
jl
cli
inc
fs
cmps
sahf
xchg
jle
add
into
in
test
aam
aaa
bound
je
scas
fcom
sti
xor
fisubr
imul
into
or
(bad)
cmps
xchg
arpl
ins
xchg
jmp
add
in
(bad)
and
pop
prefetch
loope
bound
jl
jg
sbb
dec
imul
loope
cmp
ja
sub
cdq
push
nop
xor
inc
dec
add
mov
xor
and
outs
faddp
imul
push
cmp
call
(bad)
cvttps2pi
iret
dec
xor
imul
aaa
sahf
jg
dec
sbb
adc
cmp
pop
iret
mov
inc
call
xchg
rcr
into
sbb
data16
shl
cmp
pop
push
xor
addr16
sub
jecxz
repz
add
pop
ins
push
jo
(bad)
retf
pusha
or
and
test
idiv
dec
xchg
sar
dec
push
or
xor
dec
aaa
mov
dec
fstp
fist
xchg
mov
sub
mov
gs
inc
cmp
test
ret
sahf
icebp
cmps
mov
(bad)
outs
cld
mov
ins
icebp
pop
shl
retf
call
or
fnstcw
mov
inc
add
mov
mov
inc
aas
jae
rcl
mov
push
in
js
fistp
sub
sub
or
and
mov
push
or
imul
cdq
inc
push
or
push
sub
xchg
popa
repnz
lods
xlat
jle
or
jle
cs
xchg
push
push
jns
fwait
cld
gs
pop
mov
jb
iret
into
xchg
inc
adc
out
movs
dec
xchg
outs
dec
mov
out
std
push
and
repnz
in
in
push
das
mov
cwde
cmp
pop
cmp
and
out
in
test
sbb
mulps
pop
retf
adc
sbb
add
cmp
sub
and
add
sbb
fsubr
or
pop
fmul
nop
jmp
sti
out
sbb
(bad)
ret
add
sar
sbb
daa
mov
jae
ror
inc
lds
sar
mov
dec
mov
fisub
test
sbb
popfw
ds
jg
sub
or
xchg
mov
scas
repnz
adc
cdq
mov
cmp
pushf
test
ret
in
std
pop
xchg
mov
jb
sub
mov
add
add
repz
mov
push
fdivr
xchg
lahf
sub
mov
cld
jmp
cwde
sbb
pop
hlt
adc
dec
mov
bound
inc
ja
call
std
jnp
sub
icebp
les
(bad)
inc
mov
(bad)
out
mov
std
adc
mov
inc
adc
out
or
inc
call
jmp
stos
add
icebp
inc
hlt
cs
in
repnz
xchg
pop
rol
dec
div
out
lock
inc
mov
xor
push
ja
xor
std
movs
rcr
cmp
fstp
cmc
aad
mov
gs
lods
jge
ficom
ret
xchg
jmp
xor
fsubr
dec
push
(bad)
in
aad
pop
sbb
int
add
xchg
movs
sbb
out
mov
mov
inc
dec
dec
push
pop
test
adc
mov
pop
iret
imul
mov
inc
sub
and
jmp
pop
loop
lock
stc
mov
mov
retf
mov
out
popa
xor
out
fst
push
fcom
or
push
not
inc
or
push
loop
out
inc
test
xor
jo
dec
add
pop
dec
sbb
xor
(bad)
sbb
div
aad
cmc
sbb
dec
mov
popf
jg
and
ja
fisubr
cmps
ficomp
ds
mov
push
mov
mov
rol
lods
loop
mov
rol
in
inc
jmp
mov
add
push
div
xchg
xchg
jp
popf
iret
jge
cs
shr
add
adc
aam
jno
sbb
fstp
(bad)
fisttp
(bad)
mov
call
mov
call
in
inc
jmp
bound
and
xchg
push
mov
pop
mov
jl
neg
jecxz
cmp
repnz
stc
(bad)
xor
ror
loop
loop
repz
outs
pop
lahf
es
dec
mov
int3
icebp
aam
test
cld
push
lea
imul
ror
out
and
dec
or
or
mov
leave
dec
daa
or
test
cld
add
mov
jle
or
sar
lea
xchg
inc
xchg
pushf
jae
mov
xchg
out
dec
push
into
cmps
fsubr
pop
or
rcr
mov
outs
xchg
jge
fistp
sub
mov
(bad)
stc
pop
mov
inc
setge
inc
stos
retf
push
sbb
loope
jbe
(bad)
(bad)
fidivr
cmp
scas
test
(bad)
pop
xchg
pop
shr
adc
inc
or
daa
retf
sahf
cmp
mov
push
inc
sub
mov
mov
shl
add
sbb
and
sbb
ins
pop
fwait
gs
mov
int3
pop
lahf
push
sub
aaa
rcl
in
stc
mov
in
and
jo
sub
fbstp
add
leave
mov
div
fild
loope
lahf
leave
pop
adc
and
popf
pop
adc
xor
aaa
rcl
int
mov
gs
inc
(bad)
cmp
test
and
adc
mov
movs
in
int
sub
outs
cmp
jmp
stc
add
mov
daa
mov
and
mov
pop
ret
push
pop
jecxz
int
mov
xor
pop
call
dec
out
iret
jmp
cmp
ficomp
jbe
mov
(bad)
xor
(bad)
js
sbb
clc
repz
cmp
push
push
mov
add
jne
data16
jecxz
retf
and
sbb
jb
pop
xor
jb
int
imul
inc
pop
add
adc
nop
mov
(bad)
mov
sbb
lea
pop
inc
push
mov
jle
loop
and
xor
adc
lock
sub
push
sbb
xchg
mov
pop
jle
lock
ins
mov
scas
iret
repnz
repnz
fcom
mov
add
xchg
add
frstor
sub
adc
xchg
inc
icebp
sub
out
add
jns
mov
dec
icebp
xchg
(bad)
jge
scas
cmp
repnz
adc
cld
test
cwde
jb
sbb
pop
icebp
push
enter
popf
pop
mov
shr
push
and
add
cli
das
sbb
out
inc
cmc
mov
pop
jp
movs
mov
add
mov
leave
mov
pusha
inc
fist
pushf
shl
ret
or
ins
pop
aaa
push
retf
sub
(bad)
mov
inc
pop
xor
jge
out
bound
mov
inc
fstp
pushw
pusha
push
push
ins
inc
aas
inc
clc
cli
icebp
dec
push
lock
loope
(bad)
test
sbb
jg
mov
loope
dec
inc
leave
xchg
mov
adc
mov
(bad)
xchg
xchg
inc
out
arpl
out
or
mov
out
test
add
cmp
pop
jnp
xchg
jns
shl
test
mov
imul
xchg
mov
nop
out
and
addr16
addr16
xchg
cmp
jb
(bad)
out
xlat
in
push
retf
rol
fs
cwde
fcmovb
ret
sub
aad
shr
and
movsx
aaa
jg
test
add
in
(bad)
ins
jns
aad
xchg
push
les
inc
sbb
cmp
fnstcw
push
mov
and
xchg
enter
add
add
jae
pop
imul
ret
cmp
ret
in
pop
sbb
xlat
fwait
xchg
add
ja
icebp
push
test
movs
push
sahf
les
and
ss
add
or
mov
test
xchg
gs
scas
sti
jno
xchg
ror
pop
inc
mov
jno
out
inc
mov
fcmovu
dec
js
jne
pop
(bad)
bound
shl
outs
adc
cmp
leave
popf
mov
jp
jmp
xchg
jb
fucomip
call
xlat
pop
lea
fstp
dec
jl
add
inc
add
cmp
and
or
mov
ins
rol
and
fucomip
sti
xchg
aad
(bad)
lahf
push
out
pop
xchg
js
sbb
inc
pusha
idiv
sbb
mov
mov
inc
enter
popa
lods
dec
jne
push
es
add
loope
mov
cmp
pusha
loop
push
inc
call
push
xchg
xchg
adc
out
(bad)
loopne
sar
retf
jle
clc
add
sbb
jmp
loop
mov
(bad)
mov
cmp
mov
mov
mov
pop
enter
mov
icebp
daa
or
sbb
shr
cmp
ret
mov
sub
jns
shr
fsubrp
pop
sbb
stos
jp
loope
pop
sub
cmp
je
mov
xchg
cmc
repnz
pop
rol
movs
mov
jg
dec
inc
xchg
jb
mov
inc
call
push
sbb
hlt
or
mov
pushf
sub
es
pop
test
fst
xchg
inc
adc
mov
clc
dec
cmp
jecxz
in
pop
adc
pop
ds
lock
mov
jmp
push
push
call
jmp
mov
pushf
in
and
iret
ficom
pop
imul
aad
mov
in
mov
repnz
cmps
pushf
cmc
adc
(bad)
lock
inc
inc
lock
test
mov
push
into
or
mov
sub
inc
les
ret
pop
xor
icebp
mov
lock
stos
and
dec
fmul
pop
mov
sbb
mov
jnp
pushf
mov
inc
popf
jmp
retf
ins
into
xchg
cld
fmul
cmpxchg
loop
cld
scas
lds
test
inc
mov
xchg
adc
in
add
stos
pop
imul
xor
cmp
icebp
test
adc
(bad)
aaa
xchg
mov
dec
dec
mov
es
or
pop
sub
rcl
xor
mov
pop
stos
add
dec
push
imul
movs
adc
stos
mov
jmp
retf
popa
leave
xchg
test
adc
pusha
lods
ret
and
or
push
mov
mov
mov
stc
test
adc
(bad)
fst
and
pop
into
jge
addr16
jmp
scas
test
movs
mov
mov
dec
scas
inc
call
jecxz
adc
rcr
imul
(bad)
push
adc
mov
adc
cld
inc
xor
dec
dec
cmp
leave
sub
ficom
cmp
call
xchg
aam
js
jmp
jecxz
mov
or
pop
push
int3
pop
aam
cmp
popa
or
psadbw
out
aas
(bad)
imul
push
adc
arpl
scas
ins
sbb
xchg
sub
push
fisub
sub
and
es
add
imul
push
test
js
std
and
daa
push
and
xor
push
ret
or
rcl
jmp
mov
cmp
fdivr
mov
aad
sbb
xor
popf
inc
lock
cmp
push
cli
pop
out
mov
imul
jmp
add
adc
xlat
iret
sbb
push
jbe
aad
cld
sub
mov
nop
retf
int
pop
inc
jmp
dec
outs
repz
jmp
in
and
and
cmc
aad
inc
mov
sbb
ss
push
xor
dec
aam
imul
mov
in
jge
test
ss
xchg
fldcw
cmp
pop
jnp
loopne
es
cmp
out
cmp
pop
cmp
pop
imul
lods
mov
std
push
mov
cwde
clc
js
xchg
sbb
test
sub
inc
mov
lods
inc
stos
mov
sub
jbe
adc
out
pop
xor
or
(bad)
loopne
mov
pop
jbe
ja
fsubr
mov
in
pop
(bad)
outs
cli
lea
(bad)
das
js
int3
test
ret
sbb
jbe
pop
ror
pushw
mov
out
mov
and
mov
pop
mov
mov
clc
sar
movs
inc
cmp
inc
push
xchg
add
sahf
and
mov
pop
sbb
dec
sar
lds
push
jno
jg
xchg
arpl
sbb
adc
mov
and
cwde
mov
cli
xchg
mov
pop
cld
test
cmps
xlat
fdiv
data16
mov
adc
test
xchg
cmp
pop
pop
push
lds
pop
call
es
push
mov
cmps
stos
push
ja
shl
inc
mov
mov
adc
out
inc
addps
mov
mov
pushf
xlat
add
pop
cmps
sbb
fsub
mov
add
pop
idiv
out
dec
pop
xchg
ret
movsx
mov
lahf
pop
cmp
and
pop
out
mov
sahf
test
mov
dec
out
mov
(bad)
mov
and
in
fisttp
jne
std
xchg
xor
xchg
aaa
lahf
rol
add
popa
jae
mov
idiv
pop
jmp
or
adc
sahf
xchg
repz
xor
xchg
and
mov
pop
mov
cld
push
jmp
mov
or
loopne
add
cmps
sbb
pop
daa
fisttp
shl
lods
repz
and
inc
ss
enter
inc
loopne
inc
lods
int3
sub
mov
fs
scas
push
aaa
out
inc
fmulp
xor
rcl
mov
bound
sbb
dec
add
xlat
pusha
ja
pusha
icebp
pusha
(bad)
dec
jp
aad
xchg
xchg
push
jle
jns
or
retf
push
and
fcomip
and
mov
test
dec
push
mov
xchg
dec
sbb
outs
shl
adc
(bad)
retf
pop
push
pop
add
mov
lods
dec
lds
aas
push
(bad)
cld
dec
xchg
out
and
jg
mov
(bad)
xor
lahf
(bad)
aam
xor
mov
push
inc
icebp
dec
jge
mov
dec
push
adc
mov
or
pop
retf
jmp
sahf
mov
in
mov
jne
jle
jecxz
outs
pop
sbb
cmp
jecxz
sub
jecxz
out
call
dec
retf
dec
stos
add
ja
sub
or
mov
dec
cmc
mov
sbb
mov
push
add
and
adc
aam
jo
or
cmp
dec
pop
fwait
mov
pop
add
je
shl
jl
sti
dec
shl
in
inc
movs
sub
in
xor
pop
test
mov
das
mov
out
inc
repz
xor
add
fdivp
sub
mov
cdq
shr
fisttp
gs
lods
pop
sbb
push
push
jle
data16
sub
daa
je
xlat
and
dec
or
mov
lds
popf
xchg
pop
fstp
icebp
fidivr
dec
dec
in
push
jle
mov
dec
loop
int
dec
outs
pop
fwait
xor
and
inc
out
ja
lods
jnp
fsubrp
sbb
sbb
push
addr16
popf
jnp
jge
push
jmp
shr
in
ret
pop
pop
fwait
xor
pop
ret
inc
mov
pop
jbe
rcr
xor
dec
mov
scas
dec
add
(bad)
adc
or
shr
push
pop
(bad)
int3
adc
cmp
and
jnp
and
daa
cwde
(bad)
inc
push
and
mov
(bad)
gs
mov
ret
mov
add
xchg
mov
or
dec
jae
sbb
icebp
outs
rol
jmp
nop
cmp
dec
imul
adc
aad
push
mov
add
lds
mov
js
add
or
xchg
push
je
gs
xor
aad
adc
pop
mov
out
bnd
icebp
cmp
popa
xchg
push
fisub
inc
pushf
sti
sbb
mov
outs
shl
lds
es
ret
sbb
les
fwait
sti
mov
data16
call
cs
fistp
out
mov
mov
nop
dec
inc
cmp
cdq
jns
push
inc
sub
pop
fcomp
jp
sub
jp
xchg
scas
push
ret
nop
inc
pop
sub
mov
mov
(bad)
cs
ret
and
sbb
or
xchg
jge
fisub
lock
push
mov
inc
push
adc
mov
cdq
inc
cs
mov
pop
push
cli
repnz
stos
(bad)
jle
repz
sbb
cmp
jmp
and
fdivr
loop
leave
push
aaa
push
adc
adc
out
and
xchg
xchg
aas
loope
xchg
xchg
loope
pusha
or
mov
adc
push
outs
xchg
in
sbb
je
sub
ss
pop
jl
pushf
or
bound
cmp
fidiv
dec
and
cmps
pushf
fidivr
dec
imul
mov
sub
lds
xchg
es
mov
retf
or
inc
mov
mov
adc
jbe
and
dec
push
xchg
nop
rcr
test
test
fbld
in
push
dec
ss
dec
mov
hlt
jmp
rcr
ss
aad
ja
xlat
mov
fwait
(bad)
enter
inc
int
or
adc
cld
inc
xlat
adc
sbb
xor
or
adc
inc
js
in
stos
scas
xchg
mov
fucomi
rcl
mov
xchg
push
ficomp
mov
int
jns
pusha
inc
in
adc
and
mov
pop
cmp
div
out
mov
int
cmps
imul
push
sub
loopne
jbe
pop
loopne
jmp
shl
ss
stos
rol
pop
mov
cmp
adc
int
rol
jge
cmp
sub
add
mov
int3
push
or
in
sahf
mov
xchg
imul
jnp
ficomp
call
xlat
xor
jae
imul
sub
lds
test
jg
gs
dec
mov
pop
sti
outs
test
sahf
sbb
push
dec
add
jp
cmp
pop
mov
fiadd
fidivr
cmp
loop
js
mov
dec
bswap
cmc
cwde
movs
mov
and
test
fdivr
sbb
pop
(bad)
lds
cli
(bad)
por
jl
sub
jmp
in
mov
sub
lea
inc
je
adc
xlat
mov
mov
mov
dec
out
xchg
jae
jmp
es
jle
sub
test
dec
xchg
popf
mov
sub
pop
pop
xchg
xchg
test
and
mov
pop
fdivr
test
mov
mov
loopne
mov
cmps
repz
mov
clc
mov
int3
cmps
cs
inc
cwde
aas
inc
sub
push
add
mov
jne
push
fmul
sbb
jb
ins
push
movs
aas
mov
es
dec
leave
mov
ret
pop
inc
push
jns
mov
retf
leave
and
ins
jmp
push
xchg
inc
jnp
sbb
sbb
adc
rol
xchg
ret
push
fst
popf
movs
call
add
retf
js
add
cmp
cdq
ds
sbb
add
xor
xchg
inc
or
and
lds
cmp
and
and
(bad)
loop
test
jno
mov
ja
mov
push
stos
movs
xchg
ret
pop
inc
js
jbe
clc
xor
pop
sub
adc
push
jg
test
push
adc
mov
ja
sar
xor
adc
ficomp
sub
aaa
inc
call
add
fild
mov
cs
and
bound
sbb
add
sar
inc
cdq
pop
pusha
and
movs
and
test
cmps
enter
push
xchg
push
xchg
mov
mov
inc
cmp
daa
cmp
jb
pop
ret
adc
xchg
cmp
mov
stc
sub
das
gs
lahf
or
ins
jle
pop
daa
add
sub
xor
mov
nop
lds
dec
lock
js
pop
adc
and
xor
and
xchg
add
and
retf
fidivr
bound
mov
push
or
mov
shr
cwde
js
cmp
or
mov
fs
fwait
add
sub
repz
aaa
fld
jg
cwde
push
add
jl
pusha
repz
jae
mov
sbb
dec
(bad)
(bad)
test
out
push
sub
icebp
scas
rcr
in
cdq
push
inc
xchg
inc
mov
lods
sub
push
jmp
loop
adc
xor
cmp
icebp
mov
loope
stos
add
arpl
sub
push
aad
stc
push
fcmovnu
xor
(bad)
loopne
xor
fsub
clc
inc
adc
dec
dec
stos
rcr
jno
ror
jmp
sbb
push
pop
xor
mov
jmp
test
movs
(bad)
movs
push
pop
loope
xlat
jl
or
cmps
(bad)
enter
outs
mov
ficom
aam
fldcw
pop
cmc
popf
sub
dec
cmp
pop
sub
fsub
std
xlat
aam
js
mov
dec
cmp
cmp
mov
jb
das
dec
(bad)
in
inc
out
cmc
clc
sbb
test
out
pop
cmp
popf
jb
sar
cmp
in
vsubss
repz
jae
pop
add
or
scas
push
iret
mov
stos
mov
dec
dec
or
ja
mov
push
sbb
nop
sbb
xor
mov
jb
push
push
pop
cdq
mov
in
loopne
push
jg
jmp
ins
(bad)
mov
and
mov
popf
js
sbb
fnstcw
sub
lock
in
dec
xor
pop
pop
and
shl
ds
push
ds
or
arpl
outs
fimul
and
pushf
(bad)
mov
loope
movs
adc
jp
inc
outs
push
ja
and
dec
out
in
leave
inc
cmps
inc
cwde
mov
inc
ret
jo
mov
repz
sti
sbb
adc
sar
sti
push
ins
push
mov
cld
cwde
rcl
nop
rcl
mov
xor
push
jmp
mov
js
jle
dec
mov
inc
ja
xlat
push
sub
ds
cmp
jmp
pop
dec
pop
adc
enter
mov
cmp
mov
adc
pop
ja
xchg
data16
jmp
sub
or
ja
sub
xor
js
ja
jne
pop
sbb
ins
xchg
sub
cmc
push
cwde
cmp
hlt
aaa
popa
adc
mov
jno
je
ja
test
dec
push
jge
ins
jb
mov
pop
dec
dec
push
cmp
ins
pop
mov
inc
clc
mov
dec
pop
or
mov
inc
data16
jp
(bad)
mov
jno
ret
add
les
inc
dec
xchg
loop
push
jg
dec
sar
shl
mov
sti
push
fld
pop
imul
dec
hlt
test
in
xchg
mov
packssdw
test
js
cld
in
gs
(bad)
out
xchg
pop
sbb
out
in
adc
xchg
stc
fisttp
es
or
movs
icebp
fldcw
push
stos
rcl
mov
pop
xchg
sub
xor
(bad)
cmp
mov
stc
lock
jns
(bad)
mov
mov
xchg
push
fs
xor
push
add
xchg
aam
jo
xor
test
jg
or
jmp
mov
mov
sbb
jle
dec
jg
les
dec
sbb
imul
sar
inc
int3
addr16
dec
mov
lahf
xlat
sbb
mov
push
or
jmp
or
retf
mov
jg
push
xor
in
scas
mov
pusha
sbb
sub
mov
sbb
js
(bad)
inc
je
call
mov
enter
xor
shl
ror
push
sbb
xlat
xchg
dec
mov
mov
cwde
test
mov
push
add
aas
ret
inc
retf
xor
push
sbb
clc
push
xchg
ja
sub
xchg
mov
xchg
dec
fs
lods
dec
repz
stos
pusha
jns
aad
and
ins
fsub
scas
gs
mov
leave
xlat
jge
cmp
ins
hlt
sub
cmp
push
rcl
into
xor
retf
inc
shr
pusha
out
xor
push
aas
cmp
lds
clc
sub
loope
mov
push
mov
jbe
fwait
jns
lahf
(bad)
lods
inc
(bad)
jl
jge
ret
test
int3
rcl
mov
fwait
push
in
js
icebp
xor
ins
mov
(bad)
in
out
jp
cmp
neg
xchg
shl
sbb
adc
iret
emms
mov
xor
ds
xor
ret
inc
jno
and
mov
xchg
mov
pop
enter
inc
mov
xor
sbb
bound
dec
sbb
mov
mov
inc
mov
js
push
gs
sub
fwait
loope
and
pop
push
ror
or
mov
in
adc
cli
loope
sbb
sahf
lods
dec
mov
push
mov
bound
dec
adc
loope
or
mov
cmp
and
mov
scas
push
xor
xor
pop
stc
pop
xor
ret
xchg
into
lahf
inc
or
out
mul
mov
fld
popf
xlat
xor
clc
loopne
loopne
fisub
pop
repnz
mov
cmp
loopne
xchg
lea
xor
or
jp
jo
add
fst
retf
test
jmp
jmp
sub
aaa
mov
push
push
stos
cdq
pusha
xchg
xlat
js
add
loope
push
dec
sub
push
xor
xchg
cs
pop
test
pop
repnz
adc
mov
jmp
ja
(bad)
push
cmps
mov
xchg
inc
lahf
pop
stc
call
fdivr
ret
push
pop
dec
sbb
or
shr
stos
inc
std
cwde
mov
shr
js
dec
mov
dec
pop
pop
adc
mov
mov
out
mov
mov
add
test
inc
cmp
jp
ret
dec
adc
mov
sbb
stc
xchg
xchg
out
fbld
sbb
hlt
mov
movs
idiv
adc
mov
fdivr
xor
cdq
lods
xchg
and
jnp
mov
out
inc
ret
sub
repnz
lds
retf
cmp
or
xor
or
adc
outs
stos
cwde
or
adc
mov
ins
cmp
hlt
ret
dec
jle
sbb
mov
or
(bad)
mov
lahf
add
mov
addr16
shl
mov
arpl
add
inc
sub
aam
xchg
call
in
aaa
xor
fcomi
inc
sub
test
hlt
movs
adc
shl
das
push
adc
ins
(bad)
sub
adc
push
ds
(bad)
xor
inc
vmovdqu
jmp
out
lock
mov
bswap
mov
mov
push
cdq
cmp
and
mov
push
xchg
xor
daa
sbb
lods
pop
jge
das
cdq
adc
(bad)
mov
jg
jne
push
xchg
pop
mov
push
push
jmp
and
push
sbb
sti
add
out
retf
sub
das
popf
outs
mov
(bad)
mov
aam
adc
int3
sbb
retf
sbb
(bad)
xor
les
jecxz
pop
or
iret
jge
je
xchg
xchg
pop
lea
xor
sar
push
sub
arpl
mov
xchg
mov
nop
push
sbb
lods
test
ja
xor
lea
mov
cmps
hlt
dec
test
dec
hlt
xor
retf
sub
sar
xchg
jns
mov
and
push
fs
loopne
(bad)
sub
inc
call
test
jl
xchg
fdivr
lods
dec
xor
xor
pop
ss
dec
in
sbb
mov
lods
fs
adc
mov
add
repz
pop
inc
(bad)
mov
or
xorps
inc
xchg
push
mov
xor
test
and
pop
sbb
cli
mov
inc
scas
mov
jecxz
test
pop
mov
push
gs
or
sbb
dec
jno
imul
or
cmps
or
adc
add
ret
out
jb
xlat
adc
(bad)
(bad)
stc
push
bsr
(bad)
xor
xchg
and
jno
cmp
or
dec
stos
xchg
mov
dec
jecxz
das
aaa
pop
jp
jne
call
mov
pop
mov
pop
or
inc
enter
cmp
sbb
into
mov
loopne
fdivr
push
mov
dec
xor
push
repz
rol
push
in
pop
dec
mov
inc
jle
lahf
sub
arpl
pop
sub
push
ins
xor
push
inc
jmp
inc
sbb
hlt
cwde
shr
in
xor
mov
push
and
int
push
stc
add
repz
in
imul
repz
pop
int3
xchg
sar
lock
ins
ret
out
ins
stos
adc
mov
(bad)
loope
mov
sbb
(bad)
shl
mov
das
fxch
xor
mov
(bad)
jmp
hlt
pop
cmp
and
add
das
popa
xor
pop
retf
mov
lds
aas
movs
and
dec
sub
sti
pop
mov
stos
and
jle
(bad)
cmp
bound
cdq
jbe
jmp
in
adc
popf
xchg
pop
leave
cmp
lock
jmp
ja
nop
mov
mov
sbb
mov
rcl
aas
loop
fwait
cmp
int3
aad
test
mov
adc
push
outs
xchg
pusha
or
or
inc
stos
mov
out
ret
dec
sub
or
and
cmp
jns
inc
cmp
push
aas
inc
add
je
adc
xchg
xor
or
jecxz
test
cmps
nop
cli
mov
jecxz
pminub
popf
push
gs
xor
fisubr
xor
fistp
mov
sti
adc
test
je
fcom
push
ins
add
xchg
jbe
(bad)
pop
push
sub
and
fisubr
mov
jp
xlat
les
xchg
adc
push
int3
or
inc
lods
lahf
test
jns
pop
xlat
(bad)
imul
cmp
bound
fsub
lock
or
shr
div
sahf
ins
xor
cli
jo
popa
pop
jno
push
out
scas
loopne
mov
xor
shl
xor
mov
add
cdq
cmp
neg
push
sub
dec
mov
cmp
scas
int
mov
pop
cli
ret
inc
movs
jmp
fcom
cwde
pop
test
cmp
(bad)
gs
mov
mov
xor
icebp
out
lahf
push
int3
ret
sahf
outs
ret
and
add
add
sbb
pop
daa
sub
jnp
fs
add
pushf
dec
push
mov
jg
add
ret
inc
test
stc
loope
imul
aas
mov
retf
or
mov
sub
add
cmp
int3
mov
pushf
push
cmp
cmp
call
out
or
arpl
out
rcl
inc
push
add
ss
cdq
jmp
mov
lds
aas
fsubp
lods
adc
jmp
sub
aaa
movs
cmp
xchg
mov
mov
sbb
ret
test
cmp
aad
mov
out
mov
xor
sub
jmp
(bad)
outs
inc
das
fidiv
cli
cmps
xchg
stos
arpl
mov
and
dec
adc
pusha
dec
mov
sbb
movs
test
fcom
dec
call
push
mov
in
jg
iret
std
mov
cmp
mov
xchg
cdq
xchg
jmp
push
shl
std
xor
fwait
cmps
enter
test
ja
rol
gs
push
in
xor
cmp
xchg
xlat
pop
aaa
outs
movs
add
push
ficom
dec
(bad)
in
xor
mov
or
pop
out
ss
clc
lahf
fwait
popa
add
xchg
leave
mov
mov
push
inc
pop
(bad)
mov
rol
pop
add
scas
inc
aaa
mov
sub
(bad)
push
or
(bad)
imul
shl
xor
or
jmp
int3
jo
aas
hlt
sub
je
ins
int
pop
jp
inc
dec
imul
mov
dec
pop
test
loope
popa
in
or
xchg
add
sahf
adc
fadd
fist
cld
lods
fdiv
(bad)
sub
xchg
mov
push
ja
(bad)
repz
fwait
cmc
outs
or
push
test
mov
cmp
push
movs
out
(bad)
mov
adc
mov
(bad)
mov
xlat
stos
sbb
jle
mul
sar
mov
sub
cmps
xor
jae
arpl
inc
sbb
xchg
int3
scas
lea
inc
and
fwait
push
add
int3
ror
int3
mov
pushf
xchg
mov
je
nop
bound
dec
(bad)
scas
fldcw
inc
iret
sub
imul
inc
cmps
pop
in
add
pop
inc
loopne
daa
js
scas
mov
mov
push
(bad)
jp
xchg
and
rcr
push
pop
bsr
mov
jbe
inc
(bad)
icebp
call
jle
out
(bad)
ja
inc
out
and
mov
dec
loop
adc
jecxz
mov
jne
call
push
div
test
jne
les
mov
sbb
das
jl
cmp
jae
fld
arpl
push
jnp
jnp
or
cdq
add
fs
into
pushf
fnstsw
in
mov
test
enter
push
sbb
ins
lods
test
pop
mov
jl
bound
(bad)
xchg
inc
lahf
(bad)
or
call
pop
int3
outs
mov
pop
pusha
mov
dec
daa
stos
test
xor
dec
cdq
stos
xchg
mov
push
inc
adc
outs
lea
lahf
add
pop
xchg
call
lea
sub
add
push
push
mov
push
shl
sbb
dec
pop
addr16
xchg
inc
ja
push
int3
jbe
mov
ret
cmp
cmp
pop
jle
lea
data16
pop
ins
or
push
sbb
jno
push
push
mov
aam
push
sbb
ret
mov
inc
xor
movs
clc
push
in
adc
xor
call
add
push
int
fcom
outs
imul
nop
sub
jbe
dec
pop
fisubr
cmp
sub
(bad)
out
add
add
es
icebp
push
int3
inc
repnz
xor
fwait
cmp
add
mov
jp
ins
jle
movs
in
pusha
cmc
dec
or
in
aas
stos
pop
pop
ins
cmp
xchg
je
out
cli
sbb
xor
xlat
rol
rcl
xchg
push
scas
out
jp
sub
popf
rcl
pop
out
xchg
retf
cmps
cmp
sub
lea
push
xchg
test
pop
popf
pop
int3
inc
pusha
pop
lds
fstp
and
xchg
mov
cld
mov
jnp
stos
sbb
sub
sbb
xlat
and
cmp
and
fsub
mov
iret
jmp
nop
or
xchg
xchg
ja
jmp
adc
xor
dec
fs
daa
mov
sub
neg
mov
cmp
push
jae
dec
and
or
fcomp
mov
jle
sub
ss
add
pop
dec
ss
ja
push
inc
outs
(bad)
bound
xchg
mov
pop
or
push
inc
scas
dec
dec
mov
out
jne
movs
mov
lahf
dec
out
ja
push
mov
(bad)
sahf
cmp
dec
sub
stos
mov
xor
movs
jp
clc
dec
push
(bad)
pushf
(bad)
test
dec
in
jbe
or
jl
push
jl
inc
(bad)
fdiv
cmp
jbe
add
adc
nop
js
outs
sbb
or
clc
test
sub
mov
fcmovnu
push
scas
jecxz
js
mov
pop
(bad)
jp
call
scas
in
sar
aas
mov
repz
add
and
or
jle
dec
outs
hlt
pop
push
jbe
push
daa
cmp
mov
fldenv
mov
pop
mov
adc
inc
aas
cmp
jmp
cs
fild
dec
les
xchg
or
retf
cmp
je
neg
adc
out
cld
push
pop
sti
aaa
xchg
sub
add
push
test
clc
sub
mov
aaa
outs
xchg
sub
(bad)
sbb
fdivr
leave
les
mov
mov
aas
push
outs
inc
movs
jmp
and
jbe
jo
sbb
sub
and
(bad)
into
cmp
sbb
xchg
jle
stos
pop
daa
shl
add
cmps
push
mov
dec
call
push
pop
or
and
out
push
jb
push
push
les
xor
and
in
sub
leave
ja
ror
bound
adc
sub
pusha
sub
sub
or
sub
push
add
and
fwait
gs
sub
jmp
mov
pop
dec
inc
test
(bad)
jmp
push
sbb
mov
jns
inc
sub
lds
fcomi
dec
jge
push
out
je
adc
arpl
jge
ds
in
jl
loopne
std
pop
jae
jl
inc
js
push
push
dec
cmps
jns
bound
push
add
push
mov
mov
cs
adc
clc
mov
add
int3
sbb
icebp
les
call
sub
jae
mov
sbb
lds
adc
inc
je
lea
fst
add
je
scas
sub
(bad)
fsubr
xchg
mov
mov
pop
loopne
stc
imul
dec
and
pop
pushf
lods
dec
pop
daa
mov
sbb
mov
enter
push
pusha
jne
shl
fwait
sub
leave
sub
push
sahf
mov
cmp
pop
daa
mov
in
ss
imul
test
sub
fcmove
xchg
xlat
mov
sbb
jmp
xor
and
es
pop
push
movs
add
(bad)
cmp
leave
jnp
cmps
adc
loope
leave
test
sub
pop
js
mov
xor
sub
mov
xchg
cwde
gs
aad
mov
cwde
test
rol
xor
xor
push
loopne
mov
ss
pop
xor
pushf
pop
jle
ret
je
js
inc
sub
mov
sbb
sub
imul
inc
adc
dec
ds
jb
aaa
xchg
pop
ret
mov
das
jnp
inc
mov
ret
dec
sbb
adc
aam
mov
repz
aas
sti
adc
test
push
sub
enter
push
mov
sub
cmp
inc
aam
ja
(bad)
mov
loope
dec
mov
call
mov
pop
in
pop
sub
push
sub
aaa
fisub
lock
ja
fcom
and
je
inc
cmp
sbb
fwait
(bad)
xchg
xchg
stc
inc
jl
xlat
xchg
xor
mov
push
popa
pusha
dec
mov
mov
pop
xchg
(bad)
fist
movs
sbb
repnz
cmp
sub
push
fld
lea
xchg
ret
int
ficomp
and
enter
adc
stc
mov
hlt
inc
std
jecxz
and
ret
aam
loop
sbb
or
jmp
xchg
mov
cli
(bad)
fs
add
pop
inc
outs
icebp
sbb
les
inc
inc
jno
cmc
jge
(bad)
mov
das
aad
test
repnz
xchg
sub
out
lods
test
fild
rcl
cwde
adc
xchg
jg
sbb
xchg
jle
loop
popf
add
ins
sbb
not
shl
xchg
jmp
push
shr
sti
call
cmp
mov
inc
rol
mov
pushf
cmp
inc
mov
cmps
pushf
xchg
pop
call
push
push
mov
mov
lea
fild
in
mov
cmp
cmp
push
aad
shl
outs
sbb
adc
cmp
xlat
test
and
retf
nop
cmp
adc
ss
lds
mov
push
push
bound
mov
xchg
inc
call
xchg
and
dec
jmp
bound
test
mov
outs
mov
shr
out
stos
stos
dec
cmps
jno
stos
(bad)
dec
ins
sbb
dec
(bad)
clc
cs
push
jg
leave
adc
inc
mov
mov
ret
push
mov
fnstsw
call
mov
jmp
repnz
test
enter
dec
push
pop
mov
xchg
xor
cmp
ins
xchg
jo
jmp
push
xor
ins
or
jl
mov
in
push
inc
cmp
xchg
ja
fwait
mov
mov
jle
mov
fist
test
mov
into
sbb
sar
xchg
push
(bad)
fldenv
add
jbe
outs
stc
out
mov
int3
lahf
dec
arpl
or
ja
pop
sub
or
popa
out
scas
pushf
mov
cmp
push
pushf
cmps
push
cmp
ja
xor
lock
cli
inc
in
xchg
aad
dec
nop
push
sub
add
and
ja
push
push
ficom
dec
retf
movs
std
xor
test
fsub
sahf
ss
lods
pop
mov
pop
xchg
sbb
xchg
stos
xchg
mov
cmp
push
pop
out
popf
outs
sub
cld
retw
imul
adc
mov
iret
add
pop
aas
clc
imul
int
jl
or
leave
push
cdq
dec
dec
(bad)
cmp
jl
pop
aam
inc
push
call
mov
(bad)
mov
jge
push
pop
sub
push
mov
mov
cmps
jo
cmp
arpl
inc
iret
sub
movs
xor
mov
add
mov
push
shr
das
mov
xor
push
les
mov
sbb
jmp
xor
push
push
sbb
fistp
pop
out
aam
xlat
add
fcomp
outs
daa
enter
and
outs
push
jne
sbb
mov
out
ins
adc
(bad)
jbe
sbb
adc
mov
das
shl
add
pushf
and
shl
ror
loope
ret
inc
in
add
shl
imul
sub
sub
and
mov
and
aaa
out
aad
push
jae
push
or
lods
adc
pop
pop
test
inc
and
loope
adc
mov
aas
or
cmc
ins
out
xchg
sub
xor
inc
dec
gs
das
inc
cmp
loop
push
mov
dec
mov
mov
fs
stc
jmp
ins
xchg
jg
(bad)
jae
push
imul
push
shl
aad
test
jg
cmp
mov
and
mov
xor
adc
xchg
or
(bad)
aam
push
pop
cmc
nop
pop
arpl
movs
mov
(bad)
cmc
jmp
mov
cdq
jmp
sub
rcl
mov
pop
cmp
jne
mov
jmp
pop
mov
xchg
add
adc
and
cmp
loopne
jl
inc
and
cmc
mov
cld
or
rcl
jb
mov
mov
mov
loope
sbb
dec
cmp
inc
mov
call
shl
mov
xor
and
jo
push
add
xchg
movs
mov
xor
sbb
pushf
sub
and
xlat
stc
jnp
jp
mov
cmc
aaa
hlt
pop
stc
bound
test
push
scas
les
mov
or
nop
scas
pop
lods
jnp
jno
fisttp
pop
add
jmp
mov
xchg
cmc
sub
xchg
sti
xor
(bad)
mov
daa
pop
int
add
inc
cmps
jecxz
aaa
daa
dec
cmp
add
pusha
cmp
fld
fist
push
gs
fnstenv
cmps
sub
dec
aad
aad
arpl
and
push
rcl
out
(bad)
nop
stos
jae
sub
dec
cmp
pushf
popf
inc
jo
lock
loop
stos
xchg
xor
pusha
fstp
mov
mov
fadd
adc
push
mov
mov
mov
mov
in
cdq
jg
mov
mov
jmp
jge
jecxz
adc
xor
cs
mov
ja
je
lock
lahf
xor
popa
rcr
sbb
xchg
cmp
push
jbe
or
jb
xchg
mov
mov
js
mov
loop
xchg
jmp
stos
cmc
je
lods
sar
push
pop
push
inc
sub
icebp
xor
js
sbb
jp
(bad)
aam
dec
popa
xchg
(bad)
sbb
xor
shl
add
rcl
dec
pop
cwde
ins
sub
push
(bad)
mov
sbb
inc
dec
aad
movs
(bad)
jo
mov
data16
mov
dec
in
movs
adc
ret
xor
jns
(bad)
mov
inc
aaa
xor
arpl
inc
call
test
mov
add
jne
inc
adc
xor
add
jl
or
daa
or
aas
sub
scas
xor
aaa
lea
rcl
xchg
test
pop
dec
mov
addr16
fld
jnp
xor
outs
inc
scas
imul
out
sub
iret
ss
retf
imul
fadd
jae
jae
mov
idiv
adc
jmp
sbb
add
or
(bad)
mov
retf
pop
push
and
in
out
inc
xor
xchg
mov
pop
xor
sub
mov
mov
adc
test
enter
mov
jns
or
addr16
push
xor
das
test
fwait
xchg
stc
jmp
dec
addr16
(bad)
int
push
(bad)
and
in
jecxz
xor
sub
dec
retf
cmp
ins
test
xor
mov
sbb
and
jle
push
movs
sahf
mov
or
ins
jno
mov
mov
push
es
inc
out
cdq
jecxz
dec
jecxz
mov
popa
in
mov
cmp
(bad)
repz
cli
cwde
xchg
lds
rol
cmp
mov
addr16
push
leave
stos
leave
xchg
sub
outs
out
mov
jge
retf
mov
and
out
(bad)
es
or
in
mov
out
jns
xchg
mov
imul
mov
push
push
clc
ss
or
scas
fcomi
sub
add
pop
push
lods
mov
rol
or
cmp
or
inc
sti
cmp
imul
mov
loopne
push
jle
or
(bad)
fcmovb
pop
xor
sti
pop
add
in
xor
mov
add
inc
push
inc
ret
xlat
into
and
mov
imul
movs
mov
scas
out
bound
jns
and
ficomp
and
jg
sub
mov
into
ret
movs
(bad)
hlt
push
inc
lods
ret
outs
cmps
inc
cmp
sbb
outs
jno
std
arpl
or
ror
mov
sbb
pushf
push
jle
call
scas
sahf
xchg
push
mov
mov
pop
movs
sub
popf
loope
xchg
call
iret
xor
mul
repnz
fidiv
push
add
cs
cdq
retf
stos
mov
es
jb
cmp
mov
mov
imul
add
int
or
or
addr16
push
into
push
or
jecxz
mov
cmps
aam
ficom
xchg
pop
jle
lea
pop
sub
iret
jnp
lods
fwait
push
inc
stos
sbb
cmc
ficomp
and
popf
lods
inc
jae
test
push
dec
xor
imul
std
sub
xor
push
mov
pop
sub
sub
icebp
adc
cmps
push
inc
stc
in
hlt
das
xchg
rcl
sub
loopne
inc
mul
push
push
jmp
test
add
mov
jmp
shl
loopne
cmps
mov
sti
inc
xor
stc
lds
jmp
fild
jae
adc
add
cld
out
loop
shr
pop
fs
call
dec
shl
cmp
xchg
fisub
jnp
in
ja
dec
xchg
nop
mov
pop
aaa
pop
out
mov
lods
mov
push
loop
jmp
ret
stos
add
push
push
ins
xor
mov
sti
cld
aaa
retf
inc
xor
cmps
jg
sub
hlt
dec
out
test
popa
les
adc
(bad)
or
xchg
aaa
pop
(bad)
movs
nop
js
retf
sub
ss
dec
sub
fcom
loope
jae
mov
stos
sub
aaa
sbb
(bad)
fwait
jbe
mov
and
les
and
pop
xor
mov
pop
adc
sub
out
nop
jmp
push
inc
daa
adc
and
jmp
add
movs
pop
pop
int3
push
jle
or
jo
mov
jmp
cld
movs
cmp
mov
push
adc
jge
ret
xchg
jmp
repnz
dec
xchg
lock
out
inc
in
push
ins
fnstenv
rol
push
aas
pop
cmp
test
mov
xchg
mov
call
inc
mov
lock
adc
jmp
stos
dec
xchg
jnp
mov
loopne
repnz
mov
mov
mov
adc
or
jg
int3
mov
mov
cs
dec
dec
(bad)
mov
jmp
sar
pop
jmp
bound
xchg
adc
cld
add
jge
push
xor
xor
jmp
bound
loop
cmp
aaa
mov
xor
mov
xchg
gs
mov
xchg
jmp
xor
dec
sti
mov
pop
mov
(bad)
jl
sahf
repz
addr16
pusha
push
ret
inc
xor
arpl
retf
sbb
jo
(bad)
dec
push
or
mov
rcr
pusha
(bad)
aas
jbe
sub
cmp
pop
popf
into
jo
iret
lock
test
cmp
mov
int3
(bad)
xchg
pop
ins
push
mov
cmps
mov
lods
lods
and
sbb
push
xor
mov
and
outs
in
(bad)
push
mov
and
or
into
mov
adc
cmp
fisttp
out
xor
loopne
rcl
stos
xchg
dec
adc
pop
outs
xlat
fisubr
or
pop
test
mov
loope
fisttp
outs
call
jae
xor
bound
retf
iret
mov
ds
jbe
jns
xor
jno
outs
sbb
mov
pop
dec
xor
sbb
cmps
int3
inc
out
ins
sbb
jae
repnz
scas
adc
fnstenv
into
mul
rol
into
mov
push
fsubr
push
pop
sub
cmp
aam
cmps
int
push
aad
cmp
dec
and
adc
push
cmp
adc
sbb
outs
push
sub
jge
sbb
rcr
push
push
stos
in
outs
sbb
inc
or
mov
jo
jne
xchg
mov
int3
jg
pushf
pop
xor
aam
sbb
jno
adc
and
mov
ins
je
fsubr
(bad)
dec
stos
sbb
xor
arpl
jge
aam
imul
cmp
xchg
cmp
imul
bound
inc
xchg
jle
mov
mov
sahf
sti
pop
pop
mov
test
dec
push
repz
jecxz
rol
xor
int
cli
add
mov
mov
lods
xchg
cmp
inc
aad
call
or
jmp
push
xlat
inc
xchg
aam
lods
fimul
sub
mov
test
jmp
fistp
scas
sub
nop
jmp
ds
pushf
sbb
inc
out
loopne
js
dec
add
int3
iret
std
push
fs
iret
add
jg
sbb
sub
scas
iret
xchg
add
sbb
xchg
lds
pop
daa
clc
or
ds
cmp
or
mov
aaa
mov
xchg
mov
mov
sub
div
lods
mov
idiv
add
arpl
push
ja
cmc
dec
and
dec
sub
int
mov
inc
outs
xchg
cmp
rcr
lea
ins
sbb
ins
pop
cmps
sbb
push
test
push
fwait
sbb
add
sbb
add
out
and
test
es
scas
mov
outs
dec
sbb
mov
xor
popf
leave
or
cli
jno
jae
mov
(bad)
mov
sub
aam
addr16
mov
std
mov
cmp
test
int
cmp
in
sbb
jns
add
inc
dec
push
sbb
push
popa
fwait
sar
stos
lods
imul
loop
leave
repnz
popf
ins
cmps
mov
int
enter
mov
jp
xchg
mov
aam
nop
arpl
jecxz
inc
repnz
adc
push
adc
js
inc
cld
into
xor
jmp
cwde
jp
stos
retf
test
cmc
xor
jnp
sub
push
test
movs
stc
dec
cmp
sub
jmp
sub
mov
popa
mov
loop
or
nop
stc
shl
cmovle
adc
jo
push
sbb
retf
(bad)
inc
call
enter
jecxz
pop
adc
push
mov
pushf
rol
mov
ret
cmp
pop
xlat
mov
cmps
mov
inc
arpl
mov
dec
call
push
sar
push
pushf
bound
std
out
ss
mov
es
xor
pushf
loope
push
mov
ss
cli
out
mov
sub
cmp
or
pop
int
call
and
sbb
adc
jmp
mov
xchg
mul
fnsave
sub
in
or
std
mov
mov
dec
fwait
mov
or
and
mov
pop
(bad)
inc
test
lock
stc
test
sbb
lock
aad
das
add
cmp
out
frstor
pusha
test
call
idiv
div
mov
mov
fnstsw
dec
jne
nop
call
push
sbb
fcmovu
sub
cmp
pop
imul
sti
test
punpcklwd
jo
dec
add
inc
mov
sar
dec
push
mov
mov
int
sbb
ins
jmp
jp
mov
xor
adc
das
xchg
add
mov
add
push
stc
gs
or
sub
out
pop
outs
push
fadd
(bad)
std
bound
pop
shl
cdq
scas
mov
or
jg
mov
dec
add
or
aad
mov
jecxz
pop
mov
cdq
jmp
ds
push
int
xchg
xchg
int
fdivr
dec
lods
pop
int3
arpl
loopne
jl
popf
and
or
scas
sbb
mov
cmp
mov
lods
add
fwait
fs
adc
retf
fcmove
pop
jno
popf
mov
mov
es
pop
(bad)
push
js
or
xor
outs
cmc
(bad)
(bad)
mov
adc
(bad)
loopne
dec
cmp
cmps
fsubr
xchg
sbb
push
(bad)
pop
test
sbb
movs
xchg
sub
pop
(bad)
push
arpl
or
cmp
xchg
adc
pop
add
leave
lods
pop
push
sub
mov
jecxz
sub
outs
(bad)
(bad)
mov
loopne
add
mov
add
sub
mov
jb
adc
cs
push
push
inc
enter
cmp
hlt
add
rcr
retf
cmp
adc
mov
cmc
pop
test
xchg
or
cmp
retf
or
inc
sbb
pop
nop
sti
aaa
xor
xor
sub
sub
xor
gs
je
xchg
retf
mov
mov
aas
nop
fistp
dec
lods
iret
lahf
jae
(bad)
outs
retf
mov
push
ins
loop
shl
sub
int
shl
mov
sub
je
mov
mov
cmc
pop
adc
pop
retf
sbb
jno
jae
iret
lods
sbb
push
ins
fdiv
lea
and
xchg
cmp
fmul
iret
ja
outs
mov
sbb
div
fstp
retf
lods
retf
arpl
ins
dec
xor
(bad)
in
fst
sti
or
sahf
add
cmp
adc
or
or
mov
and
or
loop
add
mov
jge
pushf
mov
adc
xchg
(bad)
gs
push
xchg
ss
add
jecxz
jo
jne
out
(bad)
lods
mov
jae
cmp
je
in
mov
popa
xor
outs
sbb
mov
fst
push
add
adc
cmovp
imul
fsubr
pop
push
mov
sti
lea
mov
add
cmp
or
lea
call
mov
leave
jecxz
mov
lea
popa
jbe
jb
loopne
and
push
ds
add
dec
into
cmp
rcl
jmp
pop
mov
cmps
ins
shl
call
cmp
test
fisub
out
imul
jnp
and
mov
cld
mov
mov
push
cmp
repnz
jno
imul
push
sbb
xchg
mov
fadd
loope
gs
imul
retf
ins
and
ret
jne
retf
mov
addr16
pop
jae
fs
jg
adc
(bad)
ret
push
(bad)
sbb
out
(bad)
dec
dec
mov
push
loopne
xchg
test
mov
ret
lds
inc
inc
sub
pop
ficom
inc
cli
pop
and
xchg
mov
mov
shl
test
icebp
fmul
call
ret
xchg
mov
mov
aas
fs
dec
mov
(bad)
shl
xor
push
xor
test
fcomp
cmc
loop
neg
sbb
jnp
xor
sbb
push
stc
(bad)
(bad)
mov
addr16
das
sahf
call
push
mov
and
rcl
(bad)
out
cmp
ret
popa
jo
fwait
into
pop
xchg
xchg
mov
imul
test
jmp
iret
addr16
adc
pop
idiv
sbb
push
mov
xchg
sti
nop
out
shl
(bad)
std
and
call
test
jecxz
das
popa
sbb
xchg
call
mov
stc
movs
fld
inc
dec
ret
mov
sahf
xor
mov
outs
js
mov
pusha
(bad)
call
add
jge
xlat
xchg
jmp
std
sub
jno
cmp
es
mov
jno
jp
sti
ror
mov
jnp
pusha
or
stos
push
xor
cmp
mov
jae
ds
sar
movs
xor
jle
ss
jns
nop
ins
inc
aad
and
pop
mov
mov
cmp
sub
xor
cmp
ins
add
(bad)
ss
ror
in
inc
loopne
push
mov
pop
imul
fsub
pop
cmp
out
dec
push
jmp
loop
test
outs
xchg
dec
jmp
mov
mov
dec
mov
adc
fdiv
in
sti
pushf
mov
xor
(bad)
add
ins
and
cmp
push
shr
test
in
scas
xchg
jge
(bad)
xor
pmaddwd
fldcw
jl
mov
(bad)
pop
adc
ret
jo
mov
mov
push
inc
cmp
dec
xor
aas
pop
sbb
neg
inc
call
sub
sub
inc
inc
xor
add
aam
movs
cmp
push
and
mov
mov
in
xor
retf
fs
cwde
movs
(bad)
ficomp
popf
mov
sbb
push
out
(bad)
(bad)
(bad)
icebp
aad
shl
mov
and
push
stos
imul
stc
int
sub
or
cld
cs
inc
jmp
imul
mov
jl
out
and
push
fst
scas
pop
ret
cmps
mov
mov
sub
icebp
or
pop
cld
outs
cmc
call
mov
hlt
(bad)
ins
jnp
jge
aam
mov
inc
pop
xchg
cmp
xor
shl
jae
inc
jle
sbb
add
fsubr
rol
push
leave
mov
cmp
ficom
add
cmc
adc
mov
jg
(bad)
repz
out
xchg
and
xor
scas
fnstcw
push
fadd
push
in
in
jo
cmp
shr
sbb
sub
add
jle
push
or
pop
xor
push
adc
add
mov
aas
push
mov
cmp
pop
adc
mov
rol
sbb
fld
jns
das
(bad)
out
xor
mov
mov
rol
mov
(bad)
je
mov
sti
mov
mul
retf
lods
adc
pop
sbb
mov
retf
int
sub
out
xchg
push
into
cmp
sub
dec
jae
pop
(bad)
shl
mov
sub
icebp
and
mov
jb
call
out
fxch
jns
pop
cmp
nop
xchg
loop
cmps
loopne
jbe
test
jne
dec
push
dec
push
fsub
iret
pop
xchg
in
shl
inc
aam
inc
outs
lods
jg
rcl
sub
mov
cmp
xor
mov
add
jmp
pusha
(bad)
and
aam
lock
and
fimul
scas
mov
arpl
mov
sbb
push
jl
sub
cdq
push
jno
daa
sbb
xchg
jne
and
adc
(bad)
inc
scas
cwde
movs
cmps
sahf
mov
mov
xor
mov
push
push
xchg
pop
lock
shl
sbb
nop
adc
faddp
imul
test
loopne
stos
sub
bound
xor
pop
lahf
cs
ja
imul
mov
sahf
lds
loope
sbb
adc
lahf
pop
lea
xchg
or
dec
push
mov
sti
jl
jo
fwait
ret
jmp
inc
cmc
push
outs
stos
add
xor
data16
inc
push
addr16
je
addr16
push
retf
fild
adc
push
mov
adc
mov
ins
sbb
popf
jecxz
jb
mov
or
xor
adc
or
fisub
call
jg
inc
js
fdiv
mov
add
ins
push
sub
test
shr
lea
add
std
mov
xchg
mov
inc
cli
out
hlt
cli
popa
and
cmp
sbb
adc
stc
call
jnp
addr16
dec
sub
mov
sub
xchg
push
aas
shl
test
mov
sub
xchg
das
pop
sub
xor
test
int
inc
inc
(bad)
and
xchg
mov
(bad)
cmp
push
mov
inc
fnsave
push
fadd
jecxz
cmp
sbb
popf
mov
test
retf
mov
sub
and
rcl
bound
in
(bad)
int
adc
cmps
call
and
gs
inc
xchg
add
sub
sbb
enter
xor
scas
mov
enter
or
push
in
clc
or
aas
and
ret
aad
nop
jbe
mov
es
jecxz
and
or
(bad)
js
es
inc
outs
pop
fcmovne
cmp
mov
mov
lds
out
sub
movs
xchg
movs
and
xchg
mov
pop
ret
xor
push
add
jb
push
mov
inc
movs
pop
dec
mov
js
sbb
pop
enter
jg
cmps
mov
loop
popf
mov
mov
pusha
and
mov
iret
cmps
repnz
dec
mov
(bad)
das
xchg
xor
adc
cdq
mov
adc
cmp
push
mov
adc
out
retf
and
(bad)
imul
adc
stos
cld
cmp
sub
cld
mov
push
mov
inc
xchg
xor
push
cmp
and
xchg
cwde
out
mov
aad
fs
xor
data16
mov
sub
ds
fdivr
inc
test
(bad)
out
jge
je
out
outs
inc
pop
rol
jno
enter
out
and
fcmovb
add
jl
jno
and
(bad)
(bad)
div
lea
push
and
scas
hlt
js
lods
(bad)
mov
call
lods
inc
push
aam
and
retf
mov
cld
je
rol
pushf
xor
test
pusha
mov
imul
pop
cli
add
dec
(bad)
repnz
into
or
cdq
mov
xchg
js
push
nop
scas
inc
mov
sub
mov
mov
xor
or
in
add
adc
das
addr16
cmps
inc
scas
inc
xchg
xchg
pop
cmp
or
push
repnz
and
xor
(bad)
inc
fwait
mov
outs
aaa
push
adc
mov
ror
fld
and
cld
push
or
or
cmp
test
mov
or
retf
arpl
cmp
mov
dec
pop
add
or
cdq
xlat
sar
aaa
bound
dec
jp
sbb
cdq
adc
mov
lods
push
movs
mov
int
mov
ins
sbb
les
xchg
mov
je
push
aam
jae
jmp
sub
mov
iret
mov
adc
pop
dec
push
inc
ret
clc
stos
mov
fucomp
jno
in
mov
rol
jmp
xor
fcomp
xor
cmp
cdq
in
sbb
fucomp
pop
sbb
pop
and
ret
xor
sbb
cmps
div
and
adc
dec
sar
push
mov
cmp
mov
mov
test
xchg
rcl
or
inc
xor
jecxz
into
inc
and
stos
stc
aam
cs
cmp
ins
mov
addr16
adc
mov
loopne
je
sub
fmul
cmp
xor
repnz
xchg
dec
inc
dec
mul
or
push
fwait
lahf
fcom
ins
cmp
jp
xchg
xlat
cld
dec
stos
inc
movs
push
test
ret
mov
mov
test
mov
push
loop
mov
enter
xchg
faddp
or
mov
mov
mov
xlat
push
call
out
jns
in
jb
fxch
retf
(bad)
push
rcr
loop
jo
fld
shl
hlt
mov
xor
xchg
cmps
mov
xor
aam
mov
adc
pop
mov
sbb
inc
xor
pop
lods
add
xchg
mov
lods
inc
sbb
out
xchg
xor
repz
cmps
les
push
push
inc
popf
es
fstp
cmp
cli
pop
imul
adc
xchg
int
and
aad
mov
sub
inc
dec
es
mov
or
pop
fxch
xchg
xchg
jp
jle
enter
aad
jnp
add
rcr
sub
hlt
xchg
sub
inc
dec
data16
dec
cld
or
or
mov
mov
js
sbb
scas
and
sub
push
pop
jo
mov
imul
or
sar
jb
(bad)
rcr
retf
ret
cmps
sub
push
cmp
mov
xchg
xchg
add
mov
aam
cmps
add
test
adc
sub
sub
or
jp
sbb
or
adc
es
into
push
cmp
add
add
mov
pop
add
idiv
stc
cmp
call
mov
shl
stos
sbb
cmp
mov
xchg
test
mov
(bad)
jg
(bad)
pop
cmp
ja
shl
cmp
retf
and
dec
or
mov
sub
sub
mov
mov
xchg
mov
aaa
out
mov
js
test
test
fstp
nop
bound
xchg
(bad)
iret
or
nop
rcr
cmp
xchg
ss
inc
or
push
ss
sbb
(bad)
lods
jae
fadd
mov
rcr
fiadd
aas
cmp
cmp
call
mov
mov
adc
xor
mov
pusha
jnp
mov
jns
add
call
dec
cmps
mov
push
rol
and
jbe
sub
and
or
inc
enter
int3
sbb
shr
out
pop
cdq
lods
push
popa
cmp
in
cmp
mov
lods
emms
lahf
mov
inc
inc
jg
push
call
(bad)
cmp
add
cmps
(bad)
mov
mov
jmp
(bad)
bound
fild
iret
gs
leave
pop
call
repz
mov
sbb
push
(bad)
inc
out
sbb
push
or
pop
push
pop
dec
and
test
lds
lods
mul
hlt
gs
jbe
sbb
ins
je
or
adc
pop
xor
jp
sbb
xor
and
mov
mov
jne
clc
push
add
imul
fwait
pop
ins
ret
or
or
in
scas
(bad)
mov
adc
mov
push
or
test
pusha
scas
cmp
jae
in
popf
fist
add
popa
and
xchg
mov
movs
int
fwait
lods
dec
addr16
sub
jge
jne
mov
dec
xor
adc
add
and
dec
js
mov
cmps
aad
clc
push
int
leave
aaa
mov
jg
fucomip
mov
leave
out
xor
fsubr
les
daa
dec
test
into
jge
dec
add
cmp
stos
dec
fstp
jae
loope
mov
fisubr
pop
mov
cmp
jmp
mov
mov
push
inc
popa
sbb
ins
in
sub
arpl
jl
in
(bad)
fild
(bad)
out
fsub
fcom
out
scas
push
or
retf
push
mov
sub
in
jle
out
fs
cld
call
sub
inc
jmp
ficomp
pop
ins
stos
push
arpl
inc
mov
int
or
dec
cmc
mov
adc
push
ds
push
rcr
jno
and
ja
jno
es
jecxz
shl
jle
in
xchg
mov
cmp
adc
xchg
adc
and
mov
sub
push
jmp
jecxz
dec
or
shl
pop
call
mov
pusha
pop
mov
pop
inc
cmp
shr
cs
mov
mov
or
icebp
fsubr
mov
mov
mov
inc
mov
inc
push
test
imul
imul
in
sahf
jl
sub
jb
sbb
lea
xchg
scas
loop
xchg
add
jns
(bad)
xor
inc
test
ror
mov
dec
fdiv
adc
add
arpl
shl
inc
dec
pop
js
scas
inc
mul
xor
jg
dec
sub
bound
jp
mov
je
pop
mov
addr16
aaa
arpl
xchg
sub
sti
inc
je
mov
iret
xor
bsf
cmp
xchg
xor
push
ins
adc
retf
fbstp
in
inc
or
ins
push
jbe
xchg
or
arpl
inc
add
ficom
sar
xchg
mov
(bad)
loope
jle
push
stos
jno
mov
mov
adc
aas
je
and
jecxz
or
sbb
mov
push
sahf
rol
xor
mov
sub
dec
pop
and
and
jle
pop
mov
inc
test
cwde
cmp
push
inc
lds
lahf
cs
mov
dec
dec
movs
push
imul
pushf
scas
ins
mov
lea
(bad)
inc
lods
call
loope
sub
pop
clc
lahf
dec
adc
mov
repnz
inc
icebp
cmp
sub
pop
mov
ret
sub
mov
loope
sub
cs
sbb
call
pop
out
in
int3
cs
mov
(bad)
mov
fidivr
add
xlat
test
mov
adc
int3
mov
mov
mov
xchg
sbb
add
jge
xchg
jo
adc
sti
leave
test
xor
dec
cmc
jmp
shl
cli
jne
or
xor
ins
js
mov
mov
icebp
sbb
rol
and
and
and
push
and
movs
pop
mov
xchg
inc
das
dec
and
add
ja
rol
imul
xor
inc
stc
pop
fstp
cmp
mov
pop
push
pushf
rcr
sbb
push
inc
cmc
sbb
push
and
ss
test
push
cmp
pop
movs
xchg
movs
pop
and
add
mov
push
dec
mov
dec
addr16
pop
cmc
jg
jg
sub
ja
loopne
sub
dec
(bad)
cmp
icebp
call
loop
sub
shl
xor
xchg
cmp
pop
jmp
jo
and
pop
cdq
mov
dec
mov
jno
rcl
pop
stc
sbb
inc
call
stos
push
sbb
mov
push
bound
and
arpl
mul
or
push
or
xor
inc
loop
push
into
loop
in
dec
nop
std
mov
stc
shl
daa
jns
(bad)
mov
fimul
shr
outs
loop
mov
lock
scas
sahf
cmc
mov
jmp
popf
add
call
ins
and
dec
fcom
push
fsubr
lahf
xchg
in
fnstenv
scas
pop
sbb
ins
pop
dec
pop
sbb
fwait
adc
imul
mov
or
xlat
sub
in
(bad)
stos
stos
leave
dec
dec
adc
div
jl
sub
push
enter
sbb
xor
loopne
add
pop
test
cmp
lea
lods
xor
test
or
and
stc
call
out
jle
popf
and
icebp
pop
jmp
imul
inc
mov
and
imul
or
scas
fsubr
scas
jle
adc
mov
call
sbb
call
fimul
or
mov
dec
mov
icebp
and
jbe
jbe
pop
aas
fnsave
xor
lahf
les
lahf
add
or
or
ret
mov
int3
sar
jmp
les
push
sbb
ret
and
jno
push
push
enter
jmp
xchg
ja
adc
pop
mov
popw
lods
sub
pushf
(bad)
pop
sub
test
gs
cwde
xchg
(bad)
imul
stos
fdiv
aam
outs
pause
aas
loop
xchg
mov
and
pop
fisub
shl
or
mov
sti
mov
sub
mov
add
adc
add
in
mov
popa
pop
jo
test
pop
je
nop
add
add
std
pop
jl
out
fs
loopne
cmp
popf
xor
push
.byte
.byte
