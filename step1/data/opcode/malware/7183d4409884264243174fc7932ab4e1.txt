in
loope
std
nop
add
nop
jbe
and
jns
gs
push
jne
push
and
jne
and
std
cwde
add
(bad)
jbe
popa
xchg
adc
adc
jbe
and
(bad)
stc
and
push
cld
stos
into
jle
push
call
push
mov
test
sbb
stos
call
imul
and
jge
mov
and
sub
jb
and
dec
add
pushf
and
aam
ror
jp
call
adc
and
fs
aad
xchg
aam
push
cmp
(bad)
sahf
and
fsub
xchg
jbe
cs
fsub
xchg
call
test
mov
es
lods
ror
scas
sub
push
jbe
and
jp
mov
loop
mov
int3
stos
rcr
jg
es
stos
ret
call
xchg
std
sahf
and
xchg
and
and
xor
stos
mov
test
stos
dec
ins
arpl
xor
js
sub
jne
jb
jg
sub
sub
hlt
pop
mov
sahf
neg
imul
xor
push
jle
sub
sbb
stc
aam
in
jle
sub
jg
and
imul
dec
xchg
jb
jecxz
fisubr
sbb
xchg
sahf
and
jge
dec
jmp
fsub
jecxz
mov
push
jae
xchg
aam
aam
xchg
jbe
sub
mov
sub
ja
and
mov
xor
xor
leave
movs
or
and
data16
arpl
jbe
in
into
frstor
xchg
jbe
jle
sub
pop
sbb
(bad)
sahf
and
jbe
and
jge
es
dec
popf
mov
cs
and
jbe
and
mov
or
pushf
and
adc
xchg
jbe
and
and
jle
add
sub
mov
sbb
dec
xchg
push
hlt
xchg
aam
mov
es
dec
mov
sahf
and
mov
or
xor
fisub
mov
add
xor
test
bound
sahf
test
jbe
in
inc
adc
leave
movs
or
and
mov
and
mov
xchg
jbe
mov
jbe
jb
and
loopne
sub
xchg
imul
fmul
sbb
dec
xchg
push
fsub
xchg
div
ins
push
fsub
pop
mov
out
xor
and
inc
sbb
iret
sbb
lods
adc
mov
fidiv
lods
adc
(bad)
fsub
lds
in
xlat
cld
ja
mov
xor
lods
adc
xchg
push
ja
and
mov
and
jae
loope
popf
iret
mov
xchg
cmc
sbb
lods
ret
sub
cmps
mov
jg
mov
pop
int
and
sub
mov
fstp
mov
outs
es
fs
mov
dec
cs
sbb
dec
xchg
sbb
fsubp
jp
push
sahf
sahf
pusha
pop
xchg
jbe
out
mov
add
jb
loope
aaa
and
test
dec
xchg
mov
leave
push
or
and
mov
push
push
inc
pop
xchg
jbe
xlat
loop
in
loope
outs
pop
pop
outs
ja
es
and
cmp
out
mov
jle
mov
lea
leave
aam
dec
pop
push
fnstcw
xor
jno
outs
fsub
xchg
sbb
fsubp
jp
push
sahf
sahf
test
jbe
out
sub
imul
and
(bad)
jecxz
and
cwde
pop
xchg
jbe
out
add
leave
mov
fsub
lahf
sub
cmps
mov
retf
sbb
enter
pop
xchg
pop
int
and
shl
ror
push
outs
call
(bad)
xrelease
jle
cdq
fldcw
test
aam
pop
inc
bound
inc
push
aaa
dec
cmps
lods
push
outs
call
(bad)
repz
push
fs
call
xchg
aam
in
fidivr
push
fs
and
ret
jle
lahf
xchg
je
lahf
or
jecxz
lahf
test
cmc
adc
(bad)
mul
and
add
(bad)
adc
dec
cdq
aad
jae
fs
in
ror
fwait
test
cmc
adc
(bad)
mul
and
add
(bad)
mov
sahf
call
mov
outs
dec
cdq
fstp
mov
jbe
jle
sub
cmp
jle
test
jbe
add
stos
retf
sbb
cmp
pop
repz
push
jbe
and
ret
sbb
cmc
adc
(bad)
mul
and
add
out
ja
fisubr
aaa
pop
pop
xor
rcr
dec
push
mov
ja
fisubr
in
jmp
ficomp
mov
jecxz
jecxz
fisubr
push
stc
mov
ja
fisubr
push
movs
xchg
jbe
fmulp
sub
les
and
call
jo
xor
test
mov
bound
sub
ror
xor
out
jbe
stos
jmp
data16
jo
mov
retf
push
mov
loopne
imul
test
cmc
push
inc
push
(bad)
jmp
scas
test
neg
outs
fsubr
jp
cdq
leave
popa
adc
test
xchg
push
fs
cmp
mov
lds
mov
push
cdq
rcl
jecxz
and
adc
cli
leave
je
fsub
sbb
cmp
(bad)
jl
es
pop
or
js
mov
jecxz
dec
push
ror
pop
inc
mov
push
and
stos
sar
and
push
cdq
fstp
xor
(bad)
repz
call
call
adc
and
xchg
xor
ror
push
je
mov
push
and
test
popf
shr
dec
push
fstp
jns
xor
xchg
inc
sbb
jge
fwait
sbb
cmp
ror
cdq
aad
adc
rol
sbb
enter
ret
(bad)
cmp
and
sahf
leave
xor
adc
int
fsub
imul
push
call
leave
aad
and
pop
xor
stos
jmp
fwait
jbe
sub
arpl
mov
jno
or
shl
enter
mov
pop
mov
test
daa
(bad)
ja
std
sub
outs
call
fsubp
jle
(bad)
push
sbb
dec
xchg
push
and
xchg
jbe
ja
add
dec
xchg
sbb
leave
ins
add
and
out
and
xchg
sub
xchg
cmp
out
sub
(bad)
(bad)
and
aam
in
push
add
mov
fstp
mov
sbb
aad
and
aad
and
std
(bad)
faddp
jle
addr16
mov
jb
std
fcmovu
mov
jle
fldenv
push
fs
sbb
js
fsub
leave
sub
les
and
sahf
leave
pop
aas
shl
fst
push
fsub
xchg
sahf
fs
xchg
jbe
fs
jne
fmul
or
fsub
pop
mov
into
push
push
fsub
cmps
mov
cli
cdq
jmp
jecxz
mov
xchg
sahf
and
jb
and
xor
jle
lods
and
jg
or
sbb
mov
jb
dec
ss
sahf
and
and
xchg
call
test
cmp
out
mov
cli
cdq
jmp
jecxz
in
loope
popf
shl
jle
fisubr
pop
into
clc
add
and
mov
adc
pop
fsub
lds
mov
pop
mov
pop
xchg
jbe
sbb
ret
imul
sahf
and
jbe
fs
stos
sar
pop
and
cdq
fild
and
push
movs
dec
mov
ficomp
mov
sbb
aad
and
aad
and
std
in
faddp
jle
shl
or
and
jbe
mov
xchg
push
and
xchg
jbe
movs
ja
and
(bad)
mov
and
xchg
sahf
and
repz
leave
mov
and
adc
mov
and
jp
add
aad
and
jbe
movs
mov
call
imul
cdq
sub
dec
and
call
and
jbe
pop
push
shl
adc
pop
dec
mov
ficom
scas
(bad)
pop
mov
and
ret
sbb
or
xchg
add
mov
xchg
jbe
pop
and
test
mov
mov
fsub
cld
jbe
and
jbe
js
scas
cmc
stc
pop
mov
out
xchg
fisub
sbb
sahf
jg
and
lods
rol
pop
int
(bad)
cmp
rcl
sahf
std
mov
faddp
push
push
fs
das
hlt
scas
jbe
sub
xchg
aad
and
mov
arpl
std
in
or
xchg
jbe
fs
sbb
stos
inc
jne
pop
icebp
imul
and
jmp
imul
push
fs
sbb
xor
fisubr
fsubr
dec
mov
fsubp
inc
push
stc
mov
dec
inc
adc
fcom
xlat
inc
adc
mov
imul
in
outs
jns
or
and
xchg
jbe
stc
cmps
scas
push
loop
sub
les
and
cmps
gs
ja
test
inc
sub
outs
call
mov
sar
sbb
sbb
and
xor
and
imul
mov
out
jmp
dec
ds
fld
jle
gs
ja
adc
loop
pop
inc
push
push
fs
sti
cwde
and
xor
leave
mov
mov
mov
xchg
mov
xor
sub
imul
fst
call
mov
ret
adc
xor
retf
sub
mov
mov
adc
(bad)
test
inc
and
push
jg
push
xchg
dec
das
push
xchg
popf
into
stos
sar
and
xchg
dec
in
pop
xchg
cmc
mov
push
jmp
xor
mov
adc
fisubr
mov
fst
jle
adc
ss
jo
fsub
jge
push
fnstcw
jbe
and
jb
and
jbe
and
call
lods
and
je
and
jbe
leave
fadd
fsub
sbb
cmc
adc
(bad)
mul
and
sbb
lods
fild
aam
jecxz
xor
out
fmul
sti
cdq
aad
sbb
dec
xchg
sahf
and
and
call
cdq
sbb
jbe
push
outs
sahf
enter
cmp
pop
je
xchg
lea
sbb
and
and
add
pop
mov
movs
imul
ret
aam
xor
sti
jbe
test
and
imul
and
repnz
fisubr
aad
cdq
repnz
xchg
jbe
stc
mov
jbe
jbe
jbe
leave
add
fsub
pop
repz
push
jo
and
sti
pop
in
mov
jno
jo
fisubr
sbb
aam
fcom
imul
inc
nop
jbe
lods
adc
jge
xor
dec
and
call
xchg
sbb
add
push
xchg
sahf
and
mov
xchg
jbe
and
xor
mov
xchg
jg
adc
and
mov
jno
jmp
imul
push
stc
cmps
scas
push
loop
or
and
jbe
jno
aaa
(bad)
and
clc
fld
pop
in
call
popw
retf
and
push
mov
fidiv
neg
ins
(bad)
jbe
lods
adc
and
imul
fdiv
dec
and
call
movs
inc
jno
and
cmc
popa
lahf
imul
pop
pushf
imul
xchg
xchg
jbe
dec
xchg
push
add
jbe
movs
imul
xlat
imul
outs
fisubr
push
stc
popa
xchg
push
movs
cmp
rcl
imul
movs
stos
je
and
mov
popa
(bad)
sti
pop
fsubr
and
es
xchg
sahf
in
push
xchg
jbe
in
jns
movs
and
and
push
jb
jno
aaa
fsub
adc
mov
mov
xchg
jbe
movs
push
ja
and
rol
test
fisub
fild
pop
dec
xchg
push
or
aam
mov
ss
fmul
fld
rcr
mov
and
push
mov
(bad)
mov
popa
fsubr
and
inc
sub
imul
and
xchg
add
out
ret
imul
dec
push
xchg
sahf
and
es
xchg
sahf
rcl
imul
test
cld
ja
cwde
je
fsubr
and
arpl
loope
imul
xchg
imul
jno
aam
mov
ss
fmul
pop
and
adc
mov
and
push
mov
dec
arpl
mov
jbe
fsubr
fisubr
sbb
xchg
add
out
ret
imul
shr
jbe
dec
xchg
push
jg
aam
mov
ss
fmul
adc
mov
sbb
mov
and
push
mov
dec
arpl
mov
jbe
adc
fisubr
sbb
xchg
add
out
ret
imul
dec
add
pusha
xchg
sahf
popf
aam
mov
call
sub
push
and
cmc
arpl
jbe
cmp
push
jp
fisubr
fcom
mov
xchg
imul
movs
ret
aam
mov
ss
fmul
popa
and
adc
mov
and
xor
arpl
mov
jbe
lods
sub
imul
and
xchg
add
dec
xchg
push
lods
ret
aam
push
pushf
imul
aad
mov
call
sub
push
and
inc
fsub
adc
mov
push
xor
and
repz
push
mov
fmulp
popf
int
xchg
push
push
jne
xor
xor
sahf
and
scas
(bad)
pop
mov
movs
imul
and
jbe
stc
cmps
scas
push
loop
repz
push
stos
and
imul
sub
repz
jbe
movs
mov
faddp
std
pop
stc
imul
cdq
fstp
scas
cmc
stc
pop
mov
pop
push
shl
ror
fisubr
fsubr
push
cmc
jns
imul
(bad)
sbb
fsub
xchg
imul
stos
(bad)
jbe
inc
push
repz
push
rep
fisubr
frstor
xchg
jbe
movs
push
mov
faddp
sti
pop
mov
and
repz
push
mov
push
xchg
jbe
movs
inc
mov
faddp
push
dec
ret
push
movs
mov
faddp
std
in
or
xchg
jbe
fs
sbb
adc
pop
icebp
imul
mov
xchg
jbe
test
mov
cmps
scas
push
loop
or
and
jbe
movs
jle
and
(bad)
std
pop
icebp
imul
cdq
fstp
movs
fbld
xchg
sti
pop
leave
imul
mov
pop
xor
test
pop
add
push
cmc
mov
les
cmp
fild
pop
lods
adc
push
movs
jle
and
(bad)
std
in
rcl
push
sbb
adc
fbld
xchg
into
xchg
jbe
ret
ins
fisubr
push
loop
shr
push
mov
fild
mov
imul
dec
xchg
jbe
in
cmc
jns
imul
fmul
mov
fsub
pop
scas
in
stc
pop
mov
xchg
jp
and
sbb
and
push
xchg
sahf
and
repz
push
sbb
and
repz
fisubr
fisub
sbb
mov
push
mov
ficomp
repz
push
out
fild
xor
pop
xchg
gs
xor
imul
das
jb
and
sahf
and
imul
lock
mov
arpl
shl
shl
mov
lods
adc
and
imul
fsubr
imul
loope
xchg
jbe
test
mov
popf
push
fsub
lahf
mov
movs
xlat
je
and
repz
push
fisub
fild
push
sbb
mov
ror
(bad)
jne
pop
lods
imul
pop
daa
xchg
jbe
mov
imul
dec
xchg
sahf
lock
xchg
jbe
test
cmp
fild
pop
inc
push
rep
fisubr
fisub
sbb
mov
out
mov
ficomp
repz
fisubr
mov
cmc
xor
pop
xchg
gs
xor
imul
push
(bad)
das
jb
and
fisub
fild
push
push
imul
pop
retf
fsub
lahf
mov
movs
out
fsub
adc
mov
lods
adc
and
imul
fsubr
imul
loope
xchg
jbe
test
mov
loope
repz
and
mov
ficom
jbe
lods
adc
and
imul
sub
push
mov
faddp
std
in
rcl
push
dec
push
xchg
jbe
ret
test
push
or
and
jbe
mov
imul
and
mov
adc
pop
js
mov
jno
ret
mov
push
mov
mov
sar
popa
jne
mov
mov
xchg
mul
imul
sbb
jbe
and
jb
xchg
cmp
and
push
xchg
sahf
and
repz
push
sbb
enter
add
push
sti
push
fsubr
and
stos
ja
push
outs
call
imul
pop
js
mov
jno
repz
push
mov
fild
xor
cld
jbe
mov
sbb
and
push
xchg
sahf
and
repz
push
sbb
and
ja
test
cmc
popa
test
loop
push
movs
adc
in
faddp
jle
mov
jne
pop
jne
mov
test
mov
imul
pop
lea
and
adc
and
imul
and
inc
and
std
pop
sub
and
mov
imul
pop
int
mov
cs
and
imul
and
jecxz
sbb
inc
dec
call
stos
adc
push
adc
aam
sub
test
sbb
mov
cs
and
fisub
fild
pop
mov
imul
fisubr
mov
sbb
mov
sbb
mov
cs
and
fisub
fild
pop
stos
adc
push
adc
aam
mov
xchg
push
and
cld
mov
or
pushf
and
xlat
fsub
xchg
jbe
inc
pop
push
fsub
xchg
jbe
int
and
xor
rcl
push
pop
jb
and
jno
cdq
rcr
sbb
fsub
xchg
neg
and
fisub
xchg
sahf
ror
pop
in
sahf
mov
imul
add
test
jbe
inc
jb
cdq
std
sbb
xchg
sbb
and
imul
push
fs
mov
inc
jle
cdq
stc
test
sbb
retf
jbe
retf
cdq
(bad)
and
leave
sub
inc
xor
out
jecxz
jbe
test
daa
mov
pusha
repnz
outs
call
dec
push
ret
cld
jbe
and
pop
stc
popa
xchg
sbb
dec
xchg
sahf
test
xchg
jbe
out
sahf
xor
jbe
and
call
jg
mov
test
cmc
xor
sahf
iret
test
and
mov
jae
xchg
aam
push
call
jbe
cdq
pop
imul
fs
sbb
pusha
xchg
jbe
add
jmp
stc
sub
fsub
push
jae
mov
xchg
jbe
loopne
jp
and
cwde
mov
xchg
jbe
rcl
cld
fadd
cdq
rcr
getsec
fsubr
push
jns
cmps
xchg
jbe
sbb
jbe
and
jbe
add
xchg
not
cmp
aaa
fsub
pop
fisub
xchg
mov
push
and
adc
loop
cdq
jecxz
imul
dec
inc
pusha
xchg
lahf
xchg
and
jmp
ficomp
cdq
repz
xchg
jbe
and
out
popf
and
jmp
and
jbe
daa
imul
enter
and
fisub
xchg
mov
sbb
aaa
fmul
nop
je
and
test
aam
sub
jmp
fist
push
lahf
call
jbe
(bad)
ja
cdq
rcr
mov
sub
jmp
pushf
mov
push
ss
mov
jae
mov
xchg
inc
sbb
xor
pop
mov
sbb
mov
popf
and
mov
and
jmp
fist
push
lahf
and
jmp
adc
pop
call
and
jl
xchg
lahf
cmp
imul
fist
push
lahf
sbb
xchg
jbe
sub
jmp
sbb
out
call
xchg
lahf
push
and
jmp
fist
push
lahf
inc
and
mov
les
xchg
xor
xchg
je
and
mov
and
ret
imul
jmp
push
jnp
mov
pushf
ja
and
call
or
fsubr
push
not
cmp
aaa
fsub
fsub
xchg
xlat
xor
ja
sbb
aaa
fmul
dec
jbe
and
xor
xchg
ja
sub
ss
pop
jbe
and
call
or
fmul
sub
fsub
imul
and
jmp
je
xchg
jbe
hlt
cdq
jbe
(bad)
ja
cdq
int
mov
and
jmp
dec
and
test
sar
or
fadd
cs
fbld
xchg
cmp
stos
xchg
aam
adc
es
xchg
jg
pop
ret
sub
jno
add
xchg
dec
pop
and
mov
out
mov
sbb
aam
pop
sub
jmp
jmp
xchg
add
xchg
popf
repz
and
jbe
add
in
xlat
jbe
loopne
push
fsub
push
jnp
mov
fwait
inc
sbb
retf
and
mov
and
ret
pusha
jae
mov
adc
sub
sbb
jle
aaa
xor
test
cmp
push
aaa
xor
add
jbe
and
xor
and
adc
pop
rcl
cdq
(bad)
stos
mov
and
jbe
mov
nop
mov
sub
fcomp
popa
xchg
push
fs
sbb
sbb
jbe
and
jge
gs
fsub
xchg
jle
popa
xchg
cmc
loope
getsec
fsub
jecxz
pop
pop
popa
jbe
ins
push
or
daa
jecxz
pop
and
out
and
fcom
sar
or
fsub
pop
mov
rcl
cld
fadd
cdq
rcr
or
fsub
pusha
mul
mov
xchg
cmc
fldcw
push
fsub
(bad)
jbe
retf
sub
sbb
jbe
and
jb
sbb
aaa
(bad)
xchg
jp
popa
xchg
xlat
aam
(bad)
jbe
and
out
and
lods
pop
shr
dec
fsub
adc
jbe
retf
sub
sbb
jbe
and
jb
mov
jp
popa
xchg
xlat
in
xlat
jbe
and
out
and
lods
and
ret
pop
xchg
stc
xor
inc
sbb
jge
pop
loopne
push
fsub
enter
ret
(bad)
cmp
and
arpl
jmp
and
mov
imul
sub
fmul
fcom
fsub
pop
mov
xor
fdiv
das
mov
adc
xor
jbe
aas
mov
mov
les
(bad)
jo
cdq
fstp
mov
sbb
xor
jbe
pop
mov
mov
sub
fdiv
imul
jbe
jg
xor
jbe
jnp
and
jbe
jg
mov
test
cmc
xor
and
daa
pop
scas
(bad)
pop
mov
and
ret
(bad)
repnz
mov
jge
xor
out
sahf
les
xchg
jbe
stc
xchg
scas
push
loop
adc
and
xor
xchg
bound
fsub
xchg
cmc
mov
inc
xor
repz
ficom
cmc
mov
xchg
jbe
ret
inc
test
cmc
mov
stc
xchg
jbe
and
add
xchg
jbe
lods
xchg
add
xchg
call
xchg
aam
sbb
fsub
xchg
neg
mov
rol
frstor
xchg
jbe
inc
cs
pop
sub
test
and
sahf
mov
jbe
and
xor
jno
arpl
mov
jbe
fsub
sbb
inc
jno
jbe
xor
mov
cld
jbe
and
jb
pop
inc
xchg
jbe
fs
cdq
xchg
(bad)
sbb
leave
adc
and
test
aam
mov
imul
fmul
sbb
fsubp
xchg
xor
hlt
jbe
mov
xchg
mov
and
xor
lods
rcr
push
fs
and
jmp
and
imul
jmp
jbe
jle
sub
cmp
push
lea
mov
cdq
fstp
mov
jecxz
and
stos
sar
fs
xchg
xor
cmp
repz
inc
dec
dec
xchg
sbb
dec
xchg
sti
cdq
fld
sti
cdq
leave
(bad)
mov
bound
mov
imul
inc
pusha
xchg
std
cdq
aad
js
mov
jbe
(bad)
repz
jb
cdq
fstp
mov
shl
and
xor
fsubp
jle
fisubr
int3
mov
push
and
adc
and
sahf
std
sub
cdq
rcr
stos
mov
and
xor
and
add
and
jmp
stos
mov
and
xor
and
add
and
jmp
stos
mov
and
jbe
stos
shl
gs
jae
xor
push
xor
and
rcr
hlt
retf
cdq
ror
scas
mov
movs
add
and
mov
sbb
test
ins
cmc
and
mov
pop
pop
mov
xchg
jns
xor
clc
jmp
jle
rcl
xchg
jbe
push
enter
imul
fdiv
daa
and
imul
fdiv
sahf
mov
push
outs
cmc
adc
sbb
fldenv
ins
cmc
ss
outs
cmc
xor
pop
xor
stos
shl
gs
jae
fst
adc
ja
and
xor
dec
push
bound
movs
pusha
arpl
xor
and
and
imul
fcom
and
push
dec
fisub
adc
jo
push
(bad)
jmp
jle
pop
sbb
pop
mov
xchg
jns
and
test
and
mov
xchg
mul
daa
mov
retf
jne
xor
and
and
pushf
fsub
xor
xchg
mul
pop
xchg
add
sbb
pop
mov
xchg
mul
daa
xchg
add
and
dec
fisub
jecxz
push
fst
jb
sbb
jbe
and
jno
enter
push
mov
and
lods
ret
and
and
adc
mov
xchg
cwde
and
jb
je
dec
and
jbe
and
dec
loop
jecxz
push
(bad)
mul
daa
xchg
add
and
dec
fisub
jecxz
push
fst
jo
push
movs
jmp
jle
rcl
loop
loope
xchg
jbe
push
xchg
dec
and
xchg
jbe
cmp
xchg
xchg
std
mov
sbb
iret
and
mov
xchg
(bad)
fdiv
jbe
and
mul
and
shl
imul
mov
lds
mov
xchg
add
xchg
std
test
fidivr
pop
sbb
shl
and
xchg
jbe
push
mul
leave
xchg
jbe
push
test
push
fs
out
scas
xor
mov
loop
sahf
and
xchg
fisubr
(bad)
jbe
cli
pop
mov
stc
(bad)
sahf
pop
xlat
imul
push
mov
and
lahf
fsub
xchg
add
mov
cwde
inc
ror
enter
and
scas
xor
push
jle
sti
stos
xchg
imul
std
fsubr
xchg
lods
cmc
icebp
pop
mov
sti
xchg
cmps
push
fs
sti
cwde
aas
xchg
std
mov
pop
data16
out
and
cmc
adc
pop
test
sti
mov
lods
(bad)
adc
mov
and
mov
je
dec
ficom
cmc
adc
mov
jae
icebp
adc
mov
es
fcomp
jbe
and
and
xchg
ret
sbb
mov
xor
retf
jle
and
imul
xchg
push
and
cs
and
jbe
ja
sahf
and
imul
ins
jnp
jbe
and
mov
ret
and
push
repz
into
imul
pop
pushf
jne
and
xchg
add
cs
das
into
imul
test
push
retf
aas
(bad)
imul
and
push
dec
fld
xor
and
je
jg
ror
mov
test
fiadd
fisubr
push
sbb
sbb
xor
jo
xlat
xchg
xchg
std
dec
mov
and
xlat
jbe
xchg
add
push
aas
sbb
jmp
xchg
fisubr
imul
test
xchg
std
dec
test
and
(bad)
jbe
movs
gs
and
xchg
jns
movs
gs
and
std
mov
mov
aam
fsubr
adc
and
imul
dec
sar
and
je
pop
sbb
xchg
jbe
movs
or
fsub
cdq
ror
mov
loopne
je
xor
xchg
dec
dec
mov
ficom
mul
dec
mov
and
jbe
jle
mov
test
scas
add
imul
add
imul
sbb
and
jbe
and
repz
imul
fdiv
rol
mov
xchg
jmp
outs
cdq
and
shl
pop
and
xor
imul
add
imul
(bad)
xchg
add
xchg
cmc
jns
jns
and
jg
fsub
xchg
push
and
xchg
jbe
xchg
jp
and
imul
xor
ins
mov
mov
push
sbb
hlt
cmc
jns
dec
mov
and
mov
arpl
pushf
fsubp
je
fbstp
call
sbb
retf
and
imul
fcom
mul
ficom
inc
xchg
data16
pop
repz
jmp
aaa
outs
pop
mov
xor
xchg
and
shl
push
(bad)
fld
test
imul
lods
dec
mov
or
mov
and
mov
cmps
retf
mov
fisubr
test
aam
and
inc
test
xchg
lahf
pushf
and
test
fisubr
and
fsubr
imul
and
sbb
mov
loopne
je
rcl
test
arpl
imul
fisubr
push
xchg
fisub
fisttp
(bad)
adc
popa
aad
mov
and
mov
push
and
mov
imul
arpl
jbe
movs
ss
ficomp
mov
xor
xchg
dec
dec
mov
mov
pop
repz
jmp
push
movs
ss
ficomp
mov
mov
test
loop
fisubr
pop
or
add
imul
fisubr
pop
lea
and
imul
and
sti
pop
cdq
dec
mov
jno
ret
add
imul
add
imul
push
aad
pop
in
mov
test
ret
imul
mov
imul
daa
mov
fsubr
imul
and
jl
mov
jbe
and
jo
imul
rcl
imul
imul
jp
adc
fsubr
and
das
into
imul
pushf
and
jecxz
into
imul
mov
xchg
call
dec
mov
sub
pop
inc
xchg
jbe
mov
adc
xchg
std
pop
aad
mov
and
enter
push
cdq
mul
sbb
lea
and
mov
xchg
ja
and
xor
and
imul
jno
dec
mov
and
ret
cmp
imul
push
rcl
jbe
aas
pop
xchg
xchg
mul
and
bound
adc
jbe
sub
xchg
xchg
mul
and
jg
retf
fst
xor
cs
jg
imul
and
push
repz
imul
fcom
fcom
jbe
and
inc
fsubr
imul
xor
imul
test
jb
and
in
pop
mov
jns
mov
test
ficom
fisubr
imul
fsub
xchg
add
mov
xchg
jbe
push
mov
loopne
xchg
jbe
and
dec
fsub
xchg
jbe
push
pushf
mul
sbb
jbe
and
mov
add
imul
sub
repz
into
imul
imul
loopne
and
adc
xchg
add
imul
into
imul
and
scas
sbb
and
arpl
imul
and
imul
ficom
lahf
repnz
pop
movs
gs
and
xchg
jns
movs
gs
and
std
mov
mov
aam
fsubr
adc
fisubr
cmp
mov
lds
mov
outs
out
outs
cmps
into
leave
adc
call
out
mov
lods
jmp
push
adc
retf
sahf
and
fsub
xchg
test
ror
push
je
sti
mov
pushf
aam
gs
jbe
shl
sti
mov
pushf
aam
gs
jbe
shl
mul
inc
jecxz
lahf
stos
ror
push
je
neg
fist
jns
je
dec
cwde
xor
add
mov
pushf
neg
fild
mov
pop
xchg
jbe
imul
xchg
jbe
stos
xchg
jns
je
dec
cwde
xor
jns
mov
jbe
mov
and
fsub
jmp
fs
(bad)
repz
pop
call
and
cmc
and
jecxz
pop
imul
jecxz
xchg
(bad)
adc
cmc
and
jmp
pop
imul
bound
xchg
(bad)
push
xor
and
mov
and
jbe
and
pop
xor
stos
jbe
and
(bad)
xchg
jbe
push
pushf
sbb
ror
frstor
adc
and
imul
push
push
cwde
xor
add
mov
pushf
neg
fst
mov
pop
call
test
mov
outs
jns
and
add
mov
and
and
sub
cmp
and
test
sub
and
push
fs
sbb
jbe
and
sbb
leave
jl
fsub
pop
xchg
imul
test
das
push
dec
loop
jecxz
sbb
ja
retf
pop
ficom
sub
cmp
jle
mov
xchg
and
inc
cmps
ret
and
mov
fisubr
sbb
jle
movs
xchg
xchg
and
(bad)
sahf
fdiv
jbe
adc
(bad)
and
jbe
and
jns
and
adc
mov
leave
sub
jo
leave
dec
or
aam
(bad)
jno
cdq
fstp
mov
and
jbe
push
sahf
sbb
leave
in
fsub
leave
mov
pop
int
and
lahf
fnsave
jbe
dec
xchg
push
pop
and
jbe
and
jbe
and
mov
and
mov
and
jo
fs
ins
xchg
jbe
loope
and
jo
jbe
loop
mov
jno
ss
les
test
mov
jbe
(bad)
jno
cdq
aad
mov
and
jle
fs
outs
call
jb
add
ja
out
mov
xchg
and
(bad)
jbe
test
inc
and
push
std
cdq
(bad)
sub
(bad)
(bad)
es
ja
leave
mov
into
jge
fsub
cld
jbe
mov
xchg
sbb
dec
xchg
push
fsub
xchg
mov
push
sahf
sahf
nop
jae
jbe
out
mov
push
xchg
inc
sbb
div
sub
xchg
sbb
dec
xchg
and
les
stos
sar
loopne
mov
frstor
jecxz
push
loop
jbe
je
and
fsubp
jp
leave
or
and
jbe
fs
mov
inc
xor
les
ja
pop
lea
xchg
into
push
pop
xchg
jbe
(bad)
pop
xor
ror
fsub
xchg
sub
test
daa
mov
leave
push
dec
push
add
std
dec
fsub
cld
jbe
mov
xchg
sbb
dec
xchg
push
fsub
xchg
mov
push
sahf
sahf
ins
jo
jbe
out
mov
fstp
mov
fild
fcom
push
popf
out
dec
xchg
sbb
dec
xchg
and
(bad)
jbe
dec
xchg
sti
cdq
ffree
mov
ja
mov
xchg
and
(bad)
jbe
cdq
test
xchg
push
outs
call
adc
cmp
mov
lds
mov
push
jecxz
fcomip
test
and
jno
xchg
xchg
dec
fucom
ror
sub
jecxz
mov
je
fmul
shl
fsub
sbb
inc
push
test
mov
movs
and
and
popf
iret
and
jno
inc
arpl
jbe
in
xor
xor
imul
fcomp
mov
or
(bad)
pop
arpl
jbe
in
std
cdq
fstp
xor
rol
cdq
rcr
xor
jle
sub
cmp
sar
sub
mov
cmp
add
push
cdq
fstp
xor
(bad)
repz
call
arpl
jbe
adc
iret
and
jno
inc
arpl
jbe
in
xor
(bad)
in
mov
je
fmul
adc
fsub
iret
div
and
sub
les
and
cdq
loop
cdq
dec
jl
and
push
fs
call
inc
push
xor
and
cmc
mov
lds
inc
inc
pushf
aam
and
imul
jmp
jbe
mov
nop
adc
fs
fsubr
(bad)
je
imul
push
loop
rcr
addr16
sbb
xchg
xor
mov
xchg
cmc
mov
xchg
div
ficom
dec
fsub
popa
xchg
push
fs
call
stos
sar
xchg
(bad)
je
fs
xor
and
fnop
adc
sahf
pop
pop
push
sbb
pop
scas
in
stc
pop
mov
dec
push
jbe
imul
icebp
mul
xchg
cmp
loop
xor
and
je
jns
xor
ja
and
fstp
and
xchg
push
ins
jle
adc
rcr
sub
pop
xor
rcl
fsub
sbb
fisubr
les
icebp
cdq
ror
rcl
imul
mov
cdq
ror
jb
cdq
vmovapd
mov
out
cdq
xchg
pushfw
and
int
scas
(bad)
jbe
cwde
fstp
or
repz
push
out
push
mov
inc
aam
push
out
popa
push
out
mov
ss
mov
out
popa
push
out
mov
ss
mov
out
sbb
dec
mov
add
mov
out
cdq
xchg
(bad)
sahf
and
int
ret
dec
cwde
mov
repz
push
out
push
mov
dec
mov
inc
aam
push
out
mov
push
dec
add
push
out
push
jp
dec
mov
pop
dec
mov
out
inc
jg
int
imul
fsub
xchg
jbe
mov
out
mov
fsub
popa
xchg
out
jno
fdiv
push
out
imul
out
xor
out
mov
mov
mov
out
jmp
dec
mov
out
loope
out
mov
dec
fdiv
push
out
mov
out
mov
out
enter
ficom
stc
pushf
and
jp
or
xchg
sahf
and
push
dec
mov
out
cdq
xchg
pushfw
and
sbb
mov
out
jle
out
mov
cmc
and
push
out
push
(bad)
out
mov
int
scas
(bad)
jbe
test
out
mov
pop
sbb
adc
mov
es
mov
out
test
out
mov
sub
mov
out
mov
cs
mov
out
lahf
fstp
or
inc
in
mov
out
and
dec
mov
xchg
cs
out
cdq
xchg
(bad)
sahf
and
cmc
and
push
out
push
(bad)
out
mov
int
ret
dec
test
out
mov
pop
sbb
adc
mov
es
mov
out
test
out
mov
sub
mov
out
mov
cs
mov
out
lahf
mov
inc
in
mov
out
and
dec
mov
xchg
cs
out
inc
push
out
mov
adc
loop
and
adc
and
sahf
std
cdq
sub
push
xor
pop
icebp
cmc
mov
ss
jbe
xlat
sbb
call
pop
xor
test
mov
and
fsub
xchg
inc
data16
popa
mov
js
mov
je
std
cdq
fstp
mov
jecxz
and
mov
nop
mov
fist
cmp
and
xor
imul
fsub
xchg
jns
je
jmp
fcomp
mov
fs
sub
pop
mov
je
cld
fdivr
stos
push
scas
xor
pop
scas
fst
(bad)
jns
xor
mov
fdivr
stos
xchg
fsub
xchg
add
test
ja
popa
cdq
ror
and
or
cdq
add
and
and
push
aam
push
jbe
and
xor
jno
and
fs
es
stc
xchg
xchg
ret
mov
icebp
(bad)
sahf
in
outs
xchg
jbe
daa
sbb
cs
scas
fst
(bad)
sahf
cld
outs
xchg
jbe
in
std
cdq
fstp
mov
jecxz
and
mov
rol
xchg
sbb
pop
xor
and
sub
cmp
ror
cmp
push
shl
push
fs
call
leave
cwde
cmp
and
fsub
push
daa
push
loopne
pushf
fucomp
push
mov
loopne
imul
test
dec
(bad)
pop
xor
push
cmc
loope
sub
and
jno
loope
fisub
xchg
sti
cdq
rol
test
fisubr
sbb
pop
mov
loope
repnz
cdq
sbb
sbb
retf
sahf
and
xor
test
cmp
jle
rcl
xchg
mov
sbb
retf
sahf
and
test
sahf
and
sahf
test
jbe
push
mov
(bad)
jo
cdq
cmc
pop
mov
sub
xchg
jae
pushf
aam
fbld
xor
fdiv
mov
sub
test
mov
ss
scas
fbld
leave
icebp
sub
adc
call
mov
pop
retf
sahf
and
jbe
fs
add
and
xor
cmp
sbb
sbb
jbe
xor
mov
fyl2xp1
sub
sbb
mov
and
adc
cdq
shl
push
jns
repz
xchg
int3
sub
loope
sub
leave
dec
cmp
and
xor
leave
inc
cmp
and
mov
cdq
ror
je
aad
pop
dec
add
imul
cdq
sub
test
jne
loope
xor
jno
pop
xchg
and
mov
cdq
aad
ins
push
shl
push
fs
call
test
jne
aad
arpl
aam
in
xor
mov
fldln2
sub
sbb
sub
xchg
call
rcl
scas
fbld
leave
std
sub
adc
xlat
or
retf
sahf
and
inc
and
jns
je
cmps
ds
and
pushf
aam
push
sub
retf
sahf
and
jp
test
jne
in
xor
and
xor
je
enter
sahf
and
jbe
sub
jo
cdq
jmp
jns
test
cmp
inc
xchg
mov
arpl
mov
mov
cld
jbe
and
jbe
and
jbe
and
mov
and
jbe
fs
and
and
aam
xchg
jbe
iret
cs
and
cmp
or
fsub
lds
in
loope
sub
test
div
xor
shl
sbb
out
and
xor
mov
mov
adc
sbb
int3
cmp
and
push
loopne
pushf
sbb
ds
call
mov
push
jecxz
fild
sbb
aaa
movd
and
int3
(bad)
hlt
lea
ins
jno
fmul
das
push
jecxz
mov
test
imul
aam
pop
mov
imul
push
xlat
push
ja
das
push
repz
imul
push
shl
push
movs
jp
and
pop
mov
movs
imul
mov
ja
fsubr
es
fnsave
dec
xchg
sbb
dec
xchg
sbb
dec
xchg
push
fsub
xchg
ss
movs
ins
mov
faddp
sahf
mov
xchg
jbe
movs
bound
cmc
rcr
mov
push
sahf
into
push
in
aam
mov
add
push
movs
mov
faddp
push
fnstsw
xchg
jbe
fldcw
xor
fisub
and
imul
and
jle
fwait
and
xor
jb
stos
cmp
fisubr
and
and
or
sbb
es
ja
fsubr
es
xchg
jbe
leave
shl
and
test
aam
mov
ja
fmul
xchg
sahf
and
repz
imul
fsub
xchg
and
fmul
xchg
sahf
and
je
and
sahf
shl
xchg
jbe
in
imul
jl
jbe
jle
sub
cmp
and
mov
jns
xchg
and
xor
mov
xchg
cmc
mov
fld
sti
cdq
ffree
sbb
dec
test
jbe
and
jbe
push
call
and
call
test
cmc
adc
(bad)
mul
and
mov
push
outs
and
push
xchg
xchg
and
xlat
xchg
and
and
(bad)
and
(bad)
aaa
aad
outs
cmp
out
add
leave
cmp
fsub
cld
ja
fsubp
bound
push
xchg
aam
cmps
jbe
and
mov
test
and
int3
adc
mov
xchg
sbb
dec
xchg
sti
cdq
xor
imul
xor
xchg
jbe
mov
push
and
(bad)
mov
pop
adc
outs
es
fs
mov
(bad)
jo
and
sbb
fsubp
jp
push
sahf
sahf
fsubr
jbe
loope
jb
loope
inc
and
test
dec
xchg
mov
leave
test
fsub
lahf
mov
sub
je
fsub
cmps
mov
xor
mov
fstp
mov
push
push
or
xchg
jbe
loope
sub
mov
sbb
outs
mov
add
push
test
push
mov
and
mov
fstp
mov
fs
mov
xchg
je
dec
xchg
mov
leave
or
fsub
lahf
mov
and
sbb
les
sbb
dec
xchg
mov
leave
sbb
fsub
lahf
mov
sub
lock
cmps
mov
imul
fsub
cdq
rcr
popa
xchg
push
call
jle
mov
lea
and
ror
mov
outs
ja
test
cmc
loope
inc
xor
and
push
xor
shl
jno
aas
fwait
and
xor
fld
fcomp
ror
pushf
retf
fmul
jbe
and
jbe
and
jbe
inc
ja
fmul
xchg
xor
and
neg
cmp
jbe
sub
fcom
push
popf
retf
mov
arpl
jbe
fs
fisub
xchg
sub
dec
xor
fsub
sbb
arpl
jno
mov
test
daa
(bad)
ja
std
test
xor
neg
aaa
int
fsubr
push
dec
loop
jecxz
push
fs
rcl
data16
fidiv
mov
mov
data16
adc
inc
dec
call
pushw
dec
loop
jecxz
pop
pop
call
and
push
loopne
pushf
add
stos
shl
and
call
fs
fs
test
inc
dec
call
sub
ret
jne
sub
jle
lahf
and
call
fs
retf
add
jne
cdq
fstp
mov
jg
mov
pop
int
and
aam
rol
pop
fs
and
jbe
test
mov
inc
xchg
pop
out
and
and
xor
push
pop
push
test
xchg
xlat
jge
rcl
out
sbb
pushf
jns
and
push
jb
lods
add
jae
sbb
fmul
fidivr
pop
push
jmp
mov
and
and
cwde
mov
and
xor
fadd
push
je
dec
mov
jmp
mov
xchg
sahf
and
sahf
enter
pop
in
adc
fs
dec
cdq
ftst
fst
bound
push
jecxz
mov
je
sub
test
into
nop
and
fdiv
and
retf
(bad)
retf
test
ja
test
cmc
jns
imul
fsubr
and
(bad)
shr
pop
in
call
mov
xchg
jg
push
xchg
inc
sbb
scas
jge
and
mov
push
fwait
and
aad
fcom
push
lahf
jmp
xchg
jbe
push
sbb
movs
dec
mov
fisubr
outs
fsub
xchg
cmp
adc
popa
stc
imul
push
mov
mov
ficomp
retf
xchg
jbe
jbe
ss
aam
fsubr
imul
sub
pop
repz
imul
dec
xchg
ja
and
sahf
and
jbe
ret
adc
imul
test
mov
sbb
mov
outs
call
dec
sahf
std
dec
jmp
ins
and
repnz
mov
mov
ja
(bad)
jecxz
xor
shl
mov
ja
(bad)
and
or
xchg
jbe
in
sahf
ins
fs
jbe
sub
(bad)
pop
fist
xchg
sahf
and
and
push
jbe
mov
shl
cwde
pushf
jbe
and
and
and
jbe
(bad)
outs
and
pushf
push
and
rcr
rcl
mov
loopne
fsub
adc
pop
add
push
sahf
mov
sub
(bad)
pop
fist
xchg
sahf
and
and
push
jbe
mov
ja
(bad)
and
and
in
sahf
les
sub
(bad)
pop
fist
xchg
sahf
and
and
push
jbe
mov
shl
cwde
pushf
jbe
and
and
and
jbe
(bad)
outs
and
pushf
push
and
rcr
rcl
mov
dec
xor
and
push
mov
ja
fsubr
imul
fdiv
mov
and
scas
in
stc
pop
mov
mov
pushf
jbe
and
and
arpl
mov
leave
sub
fsub
adc
xchg
sahf
and
and
push
jbe
mov
shl
cwde
pushf
jbe
and
and
arpl
mov
leave
adc
fsub
adc
xchg
sahf
and
and
push
jbe
mov
nop
inc
fsub
jle
cwde
and
jbe
(bad)
outs
cmc
es
push
xor
shl
cwde
cmc
jbe
and
and
dec
test
sahf
and
sahf
int3
gs
jbe
in
sahf
sub
xchg
jbe
leave
xchg
jbe
mov
imul
fisubr
mov
js
fsub
sbb
add
imul
movs
push
and
(bad)
push
or
aam
mov
inc
xor
cld
leave
and
fsub
das
jl
and
mov
pop
mov
jl
xchg
jbe
inc
xchg
jbe
mov
sub
mov
ja
fdiv
jmp
and
mov
aas
test
mov
fsubr
pop
leave
clc
xor
fsub
xchg
out
sub
adc
push
sub
aam
and
sti
lahf
and
aas
lahf
and
jbe
(bad)
outs
cmc
es
gs
jbe
(bad)
and
mov
xchg
jbe
in
sahf
clc
bound
jbe
mov
xchg
or
dec
xchg
sahf
and
and
push
jbe
mov
call
loope
arpl
repz
push
xchg
sahf
and
sahf
and
jbe
in
sahf
add
jbe
sub
(bad)
pop
fist
xchg
sahf
and
and
push
jbe
mov
aam
fcomp
jno
mov
arpl
mov
leave
inc
xor
and
xor
and
jl
and
mov
pop
mov
pop
arpl
jbe
mov
sub
mov
ja
fdiv
or
xor
repnz
xchg
jbe
test
and
xchg
lahf
cdq
and
jbe
ficom
jbe
ret
fisubr
push
loop
shl
imul
loope
mov
and
retf
imul
push
(bad)
std
popa
loope
mov
and
retf
imul
cwde
mov
and
and
and
mov
(bad)
je
and
jecxz
fisubr
push
not
retf
fsub
imul
fsub
imul
enter
and
imul
and
adc
and
jecxz
push
movs
xchg
jbe
faddp
std
pop
(bad)
and
adc
xchg
es
xlat
jbe
mov
mov
neg
and
cmc
es
gs
jbe
(bad)
and
jl
xchg
jbe
in
sahf
and
sub
(bad)
pop
fist
xchg
sahf
and
and
push
jbe
mov
xlat
jbe
cwde
pushf
jbe
and
and
arpl
mov
leave
shl
and
mov
fsubr
fsub
xchg
mov
imul
pop
loope
mov
cs
and
imul
and
xchg
lahf
pop
and
call
imul
fsub
imul
das
sbb
jbe
stos
shr
and
fcomp
adc
pop
ins
xchg
jbe
stos
adc
pop
int
mov
fsubp
bound
adc
xor
(bad)
jbe
mov
bound
and
dec
frstor
jecxz
push
out
jmp
imul
pop
and
rcr
mov
lods
adc
fisubr
mov
and
fsub
sbb
sub
imul
ficom
xchg
fsubr
imul
jecxz
and
repz
push
xchg
sahf
and
sahf
call
in
sahf
enter
sub
(bad)
pop
fist
xchg
sahf
and
and
push
jbe
mov
mov
fsub
jle
jecxz
xchg
iret
(bad)
and
cmc
es
gs
jbe
(bad)
and
aam
xchg
jbe
in
sahf
sbb
xchg
jbe
sub
(bad)
pop
fist
xchg
sahf
and
and
push
jbe
mov
mov
fidivr
loopne
xchg
mov
imul
and
imul
(bad)
imul
and
rcr
in
call
imul
and
xchg
sahf
and
and
push
jbe
mov
repnz
fsub
jle
jecxz
xchg
iret
(bad)
and
cmc
es
gs
jbe
(bad)
and
mov
in
sahf
cld
push
xchg
jbe
sub
(bad)
pop
fist
xchg
sahf
and
and
push
jbe
mov
test
fcomp
jno
mov
arpl
mov
leave
mov
and
xchg
sahf
and
and
push
jbe
mov
mov
retf
loop
xchg
iret
(bad)
and
cmc
es
push
xor
test
fcomp
jno
and
push
xchg
sahf
and
sahf
je
xchg
jbe
in
sahf
push
pop
xchg
jbe
sub
(bad)
pop
fist
xchg
sahf
and
and
push
jbe
mov
test
fcomp
jno
mov
arpl
mov
leave
adc
fsub
adc
dec
fsub
das
jl
and
mov
pop
test
sub
aam
and
sub
and
popf
lds
jbe
xor
jbe
and
and
and
jbe
(bad)
outs
and
pushf
push
and
rcr
rcl
mov
push
mov
dec
mov
ret
and
push
jbe
mov
stos
jbe
cwde
pushf
jbe
and
and
arpl
mov
leave
jl
fsub
adc
xor
and
push
movs
push
mov
ficomp
mov
cmp
and
adc
xchg
jbe
in
sahf
pop
sbb
jbe
sub
(bad)
pop
fist
xchg
sahf
and
and
push
jbe
mov
jbe
(bad)
and
dec
sbb
jbe
in
into
je
xchg
jbe
ret
pusha
fisubr
push
loop
dec
loope
xchg
iret
(bad)
and
cmc
es
gs
je
(bad)
and
sbb
pop
in
sti
pop
jmp
and
repz
push
xchg
sahf
and
sahf
rcr
pop
in
sahf
and
xchg
jbe
mov
xchg
or
dec
xchg
sahf
and
and
push
jbe
mov
jbe
(bad)
and
aam
xchg
jbe
in
neg
mov
sub
and
jl
and
mov
pop
test
sub
aam
and
stos
loopne
xchg
cmc
sbb
jle
loopne
xchg
iret
xor
xchg
jbe
(bad)
outs
dec
mov
xchg
and
push
and
rcr
(bad)
aam
mov
sbb
and
dec
fsub
das
jl
and
mov
pop
test
sub
aam
and
sti
loopne
xchg
cmc
sbb
cs
and
into
and
imul
sahf
and
and
push
jbe
mov
stos
jbe
cwde
pushf
jbe
and
and
arpl
mov
leave
ror
and
dec
fsub
das
jl
and
mov
pop
mov
sub
xchg
jbe
inc
xchg
jbe
mov
sub
mov
ja
fdiv
fwait
out
xchg
cmc
sbb
(bad)
cmps
add
mov
imul
aam
xchg
sbb
dec
xchg
sbb
dec
xchg
push
fsub
xchg
and
movs
sbb
mov
ficomp
scas
(bad)
pop
mov
xchg
push
and
jle
in
xchg
sbb
lods
sub
mov
and
imul
inc
dec
fsub
imul
xor
mov
mov
fild
les
xchg
jbe
shr
jbe
stos
adc
cmp
mov
xchg
jbe
jbe
pop
mov
adc
sbb
ror
and
outs
call
and
and
std
add
sti
pop
fisubr
and
pop
out
xchg
sbb
dec
adc
and
imul
sub
imul
and
sbb
and
xchg
push
in
aam
mov
dec
xor
dec
xchg
jbe
mov
imul
mov
dec
xor
dec
jge
sahf
and
jne
and
sahf
mov
in
jmp
outs
call
jle
mov
test
div
mov
shl
sub
arpl
test
cmp
fisubr
sbb
imul
and
ja
movs
push
mov
ficomp
jae
and
mov
ficomp
mov
(bad)
pop
rep
fsubr
push
out
lods
push
fs
call
mov
sub
and
je
arpl
jecxz
fsubr
mov
cmp
fsub
pop
repz
imul
jmp
xchg
std
mov
sbb
mov
pushf
jae
jne
ja
test
out
and
imul
sbb
add
and
mov
fisub
(bad)
and
imul
and
imul
xor
mov
jle
lods
out
and
sbb
(bad)
and
sti
mov
imul
sahf
test
(bad)
and
imul
fmul
scas
sahf
and
jmp
mov
mov
xchg
sbb
dec
xchg
sti
pop
test
and
add
and
jbe
leave
and
fsub
(bad)
jb
and
mov
jno
fld
arpl
jbe
and
cdq
and
adc
add
ja
outs
jmp
je
and
cdq
adc
jbe
and
and
push
push
fsub
xchg
jbe
movs
push
and
(bad)
sti
pop
xchg
imul
and
mov
fisub
out
fisubr
imul
imul
and
imul
and
(bad)
sahf
hlt
shr
pop
in
call
imul
ja
shr
and
ja
and
(bad)
add
sti
pop
(bad)
and
addr16
xchg
div
xor
jbe
lods
adc
and
imul
and
(bad)
sahf
and
xchg
jbe
xchg
jns
and
imul
fmul
sbb
lods
adc
and
imul
fsub
mov
repz
cwde
and
mov
ficom
mov
leave
push
cmc
popa
movs
imul
out
sahf
and
imul
test
sti
pop
cdq
push
mov
push
movs
xor
pop
cdq
push
jbe
and
push
mov
cld
jbe
and
repz
imul
aad
cdq
repnz
mov
fidivr
call
sbb
repz
out
ret
dec
fsubr
mov
ja
fmul
test
and
repz
imul
int3
out
sbb
aaa
nop
push
movs
push
and
(bad)
push
test
pop
mov
jg
push
lea
xor
xchg
jbe
loop
jbe
mov
imul
fisubr
lods
test
(bad)
jbe
and
jbe
pushf
push
mov
ficom
xchg
and
call
and
mov
faddp
and
fmul
push
mov
aam
push
movs
push
and
(bad)
sahf
dec
popf
imul
test
fsubr
fmul
xor
mov
pop
cdq
jbe
xchg
jbe
es
mov
lods
adc
and
imul
fsub
xchg
and
movs
jbe
dec
xchg
mov
imul
and
js
imul
and
imul
and
imul
adc
test
cmc
xor
retf
bound
fldenv
outs
ja
test
mov
and
and
mov
xchg
mov
and
and
fsubp
data16
mov
adc
pusha
and
fsubr
bound
fs
ja
and
sub
inc
jns
je
sti
cwde
xor
push
out
and
jne
and
push
call
adc
mov
loope
xor
test
shr
test
ss
mov
and
jle
rcl
jmp
and
jbe
fsubp
jp
xchg
ror
pushf
jno
repz
and
rcr
cdq
ror
(bad)
sahf
mov
xchg
jbe
and
and
and
and
imul
xor
jbe
cdq
imul
and
push
fs
sbb
and
xchg
sbb
leave
les
and
mov
faddp
sahf
fcom
xchg
jbe
outs
es
sbb
and
mov
(bad)
pop
xor
test
and
cmps
jbe
stos
ror
pop
je
xchg
imul
and
cmp
cmp
fisubr
sbb
adc
cmp
imul
pop
popf
jbe
and
repz
imul
in
and
jns
mov
jbe
mov
xchg
and
and
jle
call
sub
ret
adc
imul
push
fnstcw
mov
retf
pop
popf
jbe
and
jbe
lods
adc
cmp
imul
and
(bad)
and
mov
add
test
inc
and
push
and
and
jle
call
sub
ret
adc
imul
pop
into
xor
and
popf
jbe
push
popf
fisubr
push
sub
test
into
les
xchg
jbe
retf
fdiv
and
sahf
enter
dec
pop
iret
add
fst
pop
mov
dec
xchg
ja
and
in
and
mov
outs
call
dec
sahf
inc
and
inc
sub
jle
rcl
and
mov
jbe
mov
popa
nop
push
movs
bound
sub
imul
pop
and
and
cmp
and
pop
call
and
cmc
es
bound
adc
fisubr
xor
mov
jle
mov
jbe
and
and
and
jbe
(bad)
outs
and
pushf
xchg
xchg
and
rcr
call
jbe
pushf
xchg
xchg
and
rcr
in
sahf
adc
xchg
jbe
sub
(bad)
pop
fist
xchg
sahf
and
repz
imul
aam
js
out
xchg
push
jmp
aam
push
movs
xchg
xchg
and
(bad)
sahf
or
xchg
jbe
in
sahf
push
adc
jbe
mov
xchg
or
dec
xchg
sahf
and
repz
imul
aam
lock
fsub
das
jl
and
mov
pop
mov
jbe
inc
xchg
jbe
mov
sub
fisubr
mov
dec
xor
lods
sub
fisubr
xor
movs
jbe
mov
xchg
into
rcl
push
movs
xchg
xchg
and
(bad)
push
std
rcl
push
movs
xchg
xchg
and
(bad)
sahf
hlt
adc
jmp
call
leave
xchg
inc
fsub
das
jl
and
mov
pop
sbb
ret
aam
push
movs
xchg
xchg
and
(bad)
sahf
cld
adc
push
(bad)
rcl
push
movs
xchg
xchg
and
(bad)
sahf
rcl
xchg
jbe
in
sahf
adc
xchg
jbe
sub
(bad)
pop
fist
xchg
sahf
and
repz
imul
aam
xchg
xchg
sahf
and
repz
imul
aam
data16
test
sahf
push
adc
jbe
mov
xchg
or
leave
loopne
fsub
das
adc
sub
(bad)
sti
popa
and
and
add
sti
popa
and
and
sbb
and
pop
cmp
xchg
sti
pop
and
and
or
and
dec
out
and
jbe
(bad)
outs
cmc
es
bound
adc
fisubr
xor
movs
jbe
mov
aam
(bad)
jo
pop
ror
and
aam
push
movs
xchg
xchg
and
(bad)
sahf
call
in
sahf
sub
xchg
jbe
sub
(bad)
pop
fist
xchg
sahf
and
repz
imul
aam
mov
fadd
imul
aam
push
movs
mov
adc
jbe
mov
xchg
or
dec
xchg
sahf
and
repz
imul
aam
jecxz
push
movs
xchg
xchg
and
(bad)
push
bnd
jbe
movs
xchg
xchg
and
(bad)
sahf
push
adc
sahf
mov
xchg
jbe
sub
(bad)
pop
fist
xchg
sahf
and
repz
imul
aam
xchg
xchg
sahf
and
repz
imul
aam
movs
inc
fsub
das
jl
and
mov
pop
sbb
ret
aam
push
movs
xchg
xchg
and
(bad)
sahf
mov
xchg
jbe
in
into
adc
xchg
jbe
(bad)
pop
repz
imul
xor
xchg
jbe
(bad)
outs
dec
mov
xchg
and
xchg
xchg
and
rcr
call
jbe
pushf
xchg
xchg
and
rcr
in
sahf
adc
xchg
jbe
sub
(bad)
pop
fist
xchg
sahf
and
repz
imul
aam
dec
test
fadd
imul
aam
cmp
sahf
add
imul
fsub
das
jl
and
mov
pop
sbb
ret
aam
push
movs
xchg
xchg
and
(bad)
sahf
js
xchg
jbe
in
sahf
mov
sub
(bad)
pop
fist
inc
fsub
das
adc
sub
(bad)
sti
popa
and
and
add
sti
popa
and
and
xor
and
cmps
add
sti
pop
and
and
and
and
jbe
and
je
and
jbe
and
cmps
lock
mov
mov
xchg
sti
pop
and
and
and
and
mov
fisubr
mov
and
xchg
push
and
jle
icebp
and
mov
leave
push
pop
fsub
cmps
mov
retf
sub
xor
enter
ret
(bad)
cmp
xchg
and
rol
sbb
cld
jbe
mov
imul
and
jbe
jl
and
fsubr
xchg
ja
mov
mov
ficomp
mov
(bad)
pop
repz
fisubr
push
out
out
mul
xchg
es
mov
and
cs
mov
xchg
cmp
fisubr
sbb
scas
sahf
and
mul
xchg
call
imul
test
or
fisubr
sbb
sbb
lods
adc
and
imul
fmul
ja
and
repz
dec
cmp
add
push
fisub
xchg
div
jae
and
cdq
repnz
and
jbe
lods
adc
push
movs
and
test
xchg
jbe
fldenv
ret
jl
imul
xor
ins
mov
mov
cdq
repnz
and
xor
lods
adc
xor
mov
ret
imul
and
(bad)
sahf
or
xchg
jbe
test
adc
and
imul
fmul
sbb
lods
adc
and
imul
fsub
mov
(bad)
jno
pop
pop
ins
mov
test
mov
cdq
push
jbe
out
xchg
and
imul
mov
loop
mov
fisubr
fcomp
popa
xchg
push
movs
loop
and
pop
mov
movs
mov
faddp
sahf
inc
les
test
es
movs
mov
faddp
sbb
dec
xchg
sbb
dec
xchg
sbb
dec
xchg
sti
pop
(bad)
and
jbe
push
mov
jns
mov
jbe
fisub
fisub
fisubr
xor
xchg
jbe
fst
ret
jl
imul
sahf
and
repz
imul
int3
out
add
fisubr
aaa
adc
pop
rep
fisubr
push
out
repz
imul
mul
xchg
call
sub
(bad)
dec
jle
fsub
jle
mul
xchg
neg
ins
mov
and
stos
fisubr
loopne
in
aad
cdq
repnz
xchg
jbe
and
fmul
in
fsub
(bad)
jb
and
mov
jno
sahf
sub
xchg
jbe
into
inc
and
and
ja
dec
dec
xor
lods
adc
and
imul
and
imul
and
mov
jno
sahf
mov
in
jg
cs
fsub
xchg
sbb
fisub
loop
fisubr
pop
lods
ins
mov
jno
pop
cmc
and
mov
jno
ret
dec
fsubr
xor
inc
mov
test
into
movs
push
xchg
jbe
(bad)
pop
rep
fisubr
push
out
ret
dec
fsubr
xor
mov
test
and
mul
xchg
es
dec
xor
ja
addr16
and
mov
or
jge
arpl
jbe
mov
adc
mov
rol
mov
imul
ficom
std
pop
mov
jle
mov
ret
dec
fsubr
xor
inc
mov
mov
xor
fsub
rcr
movs
or
fsub
pop
mov
fstp
mov
movs
and
add
xchg
jbe
and
js
imul
cmp
imul
and
imul
and
leave
sub
je
xchg
pop
int
and
aam
jmp
xor
pop
fsub
pop
xor
jecxz
xor
mov
mov
xchg
data16
sahf
dec
or
mov
fstp
mov
ja
inc
sti
and
jbe
fsubp
jp
jne
ja
leave
mov
fsub
lds
push
fnstcw
xor
jno
jbe
dec
fsubr
pushf
and
jbe
and
cmc
and
and
mov
dec
fsub
popa
xchg
push
fs
call
lods
ror
sti
and
jbe
stos
ror
sub
pop
xor
push
sub
test
into
fdiv
xchg
jbe
mov
ror
xor
push
push
fldenv
jae
push
sahf
sahf
fmul
xchg
jbe
out
sub
pop
mov
fstp
mov
ficomp
ja
fisubr
mov
js
fsub
cld
ja
push
call
jno
xor
cmc
sbb
xchg
add
test
popf
ror
and
mov
popf
imul
xchg
pop
int
and
stos
mov
test
mov
lock
fist
mov
fstp
mov
xchg
ror
sahf
and
xor
jno
mov
cdq
iret
(bad)
sbb
dec
aad
fsub
imul
adc
xor
mov
imul
mul
xchg
cmc
sbb
sbb
xor
jbe
bound
pop
inc
pusha
xchg
sahf
fmul
xchg
jbe
(bad)
xchg
adc
and
mov
fist
sub
jo
and
jno
xchg
(bad)
pop
xor
test
sbb
dec
xchg
sbb
dec
xchg
sbb
dec
xchg
sbb
dec
xchg
sbb
dec
push
ja
and
jbe
and
jo
xor
cmc
and
and
adc
xor
mov
and
mov
mov
cmp
out
ja
dec
cmps
mov
mov
in
pop
fsub
cld
ja
dec
cmps
mov
or
cld
pop
fsub
cld
ja
dec
cmps
mov
cmp
int3
pop
fsub
cld
ja
dec
cmps
mov
or
aaa
fmul
fcomp
and
cwde
test
xchg
jbe
and
sbb
fisub
sahf
call
and
sbb
fisub
sahf
clc
or
sbb
fisub
sahf
enter
pop
iret
push
inc
fsub
cld
ja
dec
cmps
mov
adc
aaa
fmul
push
ja
dec
cmps
mov
ror
aaa
fmul
js
fsub
cld
ja
dec
cmps
mov
mov
xor
leave
dec
push
fsub
cld
ja
dec
cmps
mov
mov
pop
push
fsub
leave
sub
push
dec
pop
push
fldenv
mov
adc
jmp
and
sti
and
jbe
enter
dec
push
jmp
leave
les
and
mov
adc
xlat
sahf
and
sti
and
jbe
enter
dec
push
jmp
leave
mov
mov
adc
jmp
sti
and
jbe
enter
dec
push
jmp
leave
pushf
push
fsub
pop
mov
fstp
mov
(bad)
shl
fadd
(bad)
lahf
pop
popa
xchg
sbb
fisub
sahf
cmp
xchg
jbe
(bad)
hlt
mov
mov
fadd
(bad)
lahf
pop
popa
xchg
sbb
fisub
sahf
pusha
pop
xchg
jbe
(bad)
cld
mov
mov
fadd
(bad)
lahf
pop
popa
xchg
sbb
fisub
sahf
inc
pop
xchg
jbe
(bad)
pop
adc
xor
mov
fadd
(bad)
lahf
pop
popa
xchg
sbb
fisub
sahf
test
xchg
jbe
loop
(bad)
cmp
sub
mov
adc
sbb
stos
sahf
and
aam
xor
mov
dec
xor
ja
out
and
imul
inc
pusha
xchg
sbb
jno
jecxz
and
jbe
lods
rol
stc
and
inc
inc
pusha
xchg
sbb
ja
xor
or
or
es
cld
jbe
and
xchg
sahf
and
xchg
add
push
fsub
xchg
jbe
jp
jbe
adc
popf
and
jbe
adc
jmp
mov
std
cdq
fnstcw
adc
xchg
jbe
jno
mov
arpl
jbe
and
cli
and
jbe
into
popf
add
and
jbe
adc
jmp
and
(bad)
popf
and
out
and
xor
jle
mov
sbb
dec
lahf
jbe
jno
stos
cmp
cld
aam
mov
jle
stc
and
jbe
and
je
and
jbe
and
ja
and
jbe
and
retf
xchg
sbb
dec
xchg
sbb
dec
sbb
out
ja
dec
cmps
mov
and
adc
fsub
cld
jbe
adc
jmp
and
(bad)
popf
and
data16
xchg
jbe
dec
repnz
dec
xchg
jbe
jno
sbb
arpl
jbe
and
stc
and
jbe
and
call
and
cwde
adc
push
fisub
xchg
sbb
dec
mov
es
dec
xor
dec
dec
stos
sahf
and
jbe
push
mov
fadd
pop
mov
(bad)
pop
xor
test
sbb
fisub
sbb
fisub
sbb
dec
inc
ja
and
(bad)
fsub
xchg
sbb
dec
xchg
jbe
jno
mov
push
cld
aam
mov
jle
clc
and
jbe
and
call
and
cwde
adc
push
frstor
xchg
push
bound
xchg
jbe
or
jbe
and
push
push
std
aam
mov
dec
xor
dec
xchg
sahf
sbb
or
fmul
mov
adc
xchg
mov
inc
ss
dec
repnz
dec
cmp
fsub
cld
bound
dec
xchg
sahf
and
repz
sbb
leave
sbb
and
neg
pop
icebp
jbe
dec
in
stos
sahf
and
jbe
bound
cmp
and
jbe
and
xor
jmp
leave
mov
jbe
adc
jmp
and
(bad)
sahf
and
pop
frstor
xchg
sbb
dec
cmp
fsub
cld
or
and
xchg
sahf
and
repz
sbb
leave
mov
fsub
xor
sbb
fisub
sbb
fisub
push
lock
(bad)
and
jbe
and
xchg
sahf
and
repz
sbb
leave
jl
fsub
xor
sahf
loope
imul
mov
imul
xor
dec
mov
xchg
jbe
dec
(bad)
ja
and
jbe
and
push
mov
aam
mov
dec
xor
dec
xchg
sahf
jo
xchg
jbe
mov
xor
test
cmp
out
jbe
adc
jmp
and
(bad)
popf
and
data16
xchg
jbe
dec
imul
and
es
dec
xor
dec
dec
stos
sahf
and
jbe
inc
mov
fadd
cld
jbe
adc
jmp
and
(bad)
popf
and
data16
(bad)
outs
frstor
xchg
push
pop
and
jbe
dec
aam
sahf
and
lods
add
sbb
leave
mov
inc
inc
pusha
xchg
sbb
fisub
sbb
fisub
sbb
dec
imul
inc
and
jbe
jno
add
push
push
cld
aam
mov
jle
(bad)
and
jbe
and
call
and
cwde
adc
and
ss
and
jbe
and
push
(bad)
aam
mov
dec
xor
dec
xchg
sahf
pusha
add
xor
dec
xchg
mov
adc
xchg
mov
inc
ss
dec
mov
lock
jbe
dec
sbb
and
es
ja
fmul
stos
sahf
and
jbe
and
jbe
movs
aaa
xor
dec
xchg
mov
adc
xchg
mov
inc
ss
dec
mov
pop
and
jbe
dec
sbb
and
es
xor
fmul
stos
sahf
and
jbe
and
jbe
cmp
popa
or
and
inc
inc
pusha
xchg
sbb
fisub
sbb
dec
mov
jbe
xor
(bad)
push
add
aam
mov
dec
xor
dec
xchg
je
and
(bad)
and
jbe
and
call
and
mov
cmp
adc
sbb
and
es
ja
fmul
stos
sahf
and
jbe
and
jbe
add
aaa
fmul
mov
adc
xchg
mov
gs
fmul
push
inc
and
jbe
dec
mov
fsub
push
es
dec
xor
dec
ins
lods
sahf
and
jbe
mov
jbe
or
sahf
and
and
imul
sbb
push
(bad)
and
leave
sub
mov
sub
mov
neg
aaa
loopne
fmul
stos
sahf
and
aam
aam
and
pop
mov
int
xor
ja
inc
sub
imul
inc
pusha
xchg
into
loopne
xchg
jbe
(bad)
pop
xor
test
sbb
fisub
sahf
cld
add
es
mov
and
and
imul
and
std
cdq
fnstsw
xor
rol
fmul
jbe
jno
stos
cmp
cld
aam
mov
xchg
jbe
leave
jo
fsub
xor
sbb
fisub
sbb
jno
dec
push
outs
pop
cdq
rcl
bound
mov
aam
mov
dec
xor
dec
xchg
sahf
ins
add
aaa
fmul
mov
adc
xchg
mov
gs
fmul
ja
and
xchg
repnz
cld
bound
dec
xchg
sahf
and
lods
add
sbb
leave
in
fsub
xor
sbb
dec
xchg
sbb
dec
xchg
sbb
dec
xchg
sbb
dec
xchg
sbb
dec
sub
cld
jbe
and
jle
xor
xchg
call
mov
xchg
sbb
ja
inc
and
jmp
cld
and
inc
inc
pusha
xchg
sbb
fisub
sbb
dec
repnz
dec
sbb
and
es
ja
fmul
stos
sahf
and
jbe
and
jmp
and
mov
fstp
mov
pop
dec
xor
dec
xchg
push
lahf
and
jmp
and
ret
and
jbe
and
xor
jmp
leave
xor
and
dec
dec
adc
call
dec
xchg
push
xchg
and
jmp
and
ret
and
sbb
dec
fdiv
and
xor
xlat
jbe
push
mov
dec
xchg
mov
adc
xchg
mov
inc
ss
dec
mov
inc
mov
cld
or
and
xchg
sahf
and
repz
sbb
leave
lock
arpl
call
dec
xchg
mov
adc
xchg
mov
inc
ss
dec
mov
dec
mov
(bad)
fcomp
and
es
ja
fmul
stos
sahf
and
jbe
push
mov
cmp
sub
imul
pusha
xchg
sbb
fisub
sbb
dec
pop
jbe
and
sbb
xchg
jbe
jno
and
push
cld
aam
mov
jle
ret
aad
adc
pop
(bad)
lds
fsub
cld
jbe
adc
jmp
and
(bad)
popf
and
data16
(bad)
icebp
fsub
xchg
push
pop
and
jbe
dec
aam
sahf
and
lods
add
sbb
leave
cmp
fsub
xor
sbb
fisub
sbb
fisub
sbb
dec
imul
(bad)
(bad)
fsub
xchg
sbb
dec
xchg
jbe
jno
add
push
push
cld
aam
mov
jle
ret
aad
mov
imul
and
cwde
adc
and
ss
and
jbe
and
push
(bad)
aam
mov
dec
xor
dec
xchg
sahf
in
xchg
jbe
mov
xor
dec
xchg
mov
adc
xchg
mov
gs
fmul
push
cmp
xchg
jbe
(bad)
xchg
jbe
dec
mov
fsub
xchg
es
dec
xor
dec
dec
stos
sahf
and
jbe
fimul
xlat
sahf
and
mov
fstp
mov
and
call
and
cwde
adc
mov
and
jbe
aas
(bad)
jbe
and
push
mov
aam
mov
dec
xor
dec
xchg
sahf
sbb
xchg
jbe
xor
aaa
fmul
mov
inc
ss
dec
mov
pop
and
bound
push
aam
and
ja
arpl
jbe
cmps
mov
or
and
jmp
and
(bad)
sahf
and
outs
mov
cld
xor
mov
aam
mov
dec
xor
dec
xchg
je
and
shl
aad
mov
sahf
daa
fsub
cld
jbe
adc
jmp
and
(bad)
sahf
and
outs
mov
cld
sub
mov
aam
mov
dec
xor
dec
xchg
je
and
shl
aad
mov
imul
and
cwde
adc
in
fsub
xchg
push
pushf
and
jbe
mov
aam
mov
dec
xor
dec
xchg
sahf
add
xor
test
fidivr
sub
imul
fdivr
mov
pop
int
and
enter
mov
pop
xor
test
sbb
dec
push
jbe
and
jne
and
jne
and
jle
mov
and
cdq
repnz
and
sahf
jo
xchg
jbe
loop
cdq
imul
mov
push
outs
fsub
adc
xor
and
rol
mov
data16
and
dec
xchg
jbe
mov
imul
sub
pop
xor
push
dec
sbb
imul
sahf
and
and
arpl
add
leave
call
mov
test
mov
xchg
mov
adc
imul
outs
and
loope
aam
mov
xchg
jbe
leave
adc
mov
jle
sub
cmp
xchg
and
or
pop
xchg
rcr
mov
out
sbb
and
aam
arpl
mov
jno
pop
les
xchg
sahf
fdivr
jbe
cs
jbe
mov
push
sub
mov
xchg
popa
xchg
aam
push
movs
xchg
mov
faddp
sahf
pushf
cmp
je
xor
scas
ins
arpl
mov
jno
pop
les
xchg
div
dec
out
jbe
mov
xchg
sub
xchg
mov
faddp
sahf
sar
xchg
jbe
pop
imul
arpl
mov
jno
or
xchg
mul
dec
cmps
(bad)
sahf
and
repz
imul
and
jecxz
mov
daa
xor
lods
adc
fisubr
xor
xor
and
add
dec
repnz
sahf
and
repz
imul
and
jecxz
mov
daa
xor
lods
adc
fisubr
xor
xor
push
xchg
jle
aam
push
movs
xchg
mov
faddp
sahf
mov
pop
imul
xchg
sti
pop
and
and
adc
and
call
push
mul
dec
xchg
les
fisubr
mov
aam
fsub
push
or
sub
and
fsubr
es
xor
push
xchg
in
aam
push
movs
xchg
mov
faddp
sahf
enter
pop
pop
imul
arpl
mov
jno
mov
and
push
sahf
cli
aam
mov
dec
xor
lods
adc
fisubr
mov
or
fmul
add
and
dec
arpl
jbe
popa
or
fmul
ror
sub
jbe
in
jmp
call
enter
fmulp
sub
mov
sar
sub
cmp
je
jbe
(bad)
pop
xor
test
jmp
ja
jecxz
and
and
ficom
add
dec
xchg
and
mov
jle
sub
mov
sahf
jbe
jb
and
mov
mov
pop
sub
push
jmp
call
dec
in
sahf
and
repz
imul
(bad)
and
jbe
(bad)
outs
dec
outs
mov
mov
imul
arpl
mov
jno
jnp
and
jbe
(bad)
pop
repz
imul
ficom
sbb
jnp
and
(bad)
sahf
cmp
jbe
pushf
mov
ficom
les
(bad)
imul
das
fldcw
fcom
fst
jnp
and
(bad)
sahf
ins
xor
jbe
pushf
mov
ficom
lds
(bad)
imul
sub
pop
repz
imul
ficom
call
movs
jnp
and
(bad)
sahf
lods
xor
jbe
pushf
mov
ficom
lds
(bad)
imul
das
fldcw
aam
xchg
mov
aam
push
movs
jnp
and
(bad)
sahf
loopne
xchg
jbe
shl
push
movs
dec
and
pushf
mov
ficomp
lds
(bad)
imul
das
fldcw
(bad)
push
xchg
jbe
aam
push
movs
jnp
and
(bad)
sahf
and
mov
ficomp
lds
(bad)
imul
das
fldcw
rcl
xor
aam
push
movs
jnp
and
(bad)
sahf
adc
xchg
jbe
out
or
das
fldcw
rcl
fist
jnp
and
(bad)
sahf
je
xchg
jbe
pushf
mov
ficomp
ret
sbb
xor
imul
jl
xchg
sti
pop
int3
popa
mov
jno
je
fisubr
sub
jbe
dec
out
sahf
and
stc
outs
arpl
mov
xchg
pop
leave
popa
mov
mov
imul
imul
sub
call
mov
xchg
inc
pop
dec
xchg
push
lods
adc
mov
mov
jp
and
lahf
mov
movs
sub
jg
fisub
xchg
mul
push
and
cdq
bnd
xchg
jbe
pushf
push
and
lods
jns
or
mov
fisubr
shl
repz
imul
pop
fldcw
and
inc
pop
arpl
mov
jno
jmp
and
retf
and
imul
data16
ins
mov
retf
push
mov
loopne
imul
test
xor
pushf
outs
mov
ficomp
jbe
sbb
jmp
and
sahf
and
pop
pop
arpl
mov
jno
inc
les
xchg
imul
jg
jbe
dec
push
xlat
sahf
and
imul
(bad)
and
arpl
and
xor
fsubr
es
xor
pusha
(bad)
out
xchg
sti
pop
(bad)
and
popw
arpl
mov
jno
xchg
retf
and
jbe
movs
push
and
(bad)
sahf
sub
xchg
jbe
in
sti
pop
(bad)
and
dec
leave
and
mov
mov
adc
mov
dec
xor
lods
adc
xor
xor
and
repz
imul
mov
dec
xor
lods
adc
xor
or
aad
cdq
repz
xchg
jbe
movs
push
and
adc
ja
and
mov
ficomp
xchg
rcr
mov
pushf
outs
mov
ficomp
(bad)
and
dec
adc
mov
dec
xor
lods
adc
xor
xor
scas
and
fsubr
es
test
lods
adc
xor
xor
adc
cli
stos
adc
pusha
and
mov
fidivr
scas
sub
imul
rcr
sbb
popa
stc
popa
mov
and
cmps
pop
xlat
sub
fsub
imul
push
movs
push
and
(bad)
push
or
aam
push
movs
push
and
(bad)
sahf
ins
aaa
xchg
jbe
in
sti
pop
(bad)
and
or
xchg
call
popa
mov
lods
sub
xor
test
stos
sub
mov
popa
jle
iret
and
mov
lods
adc
and
fcmovne
and
mov
jno
fcmovne
and
mov
jbe
retf
sub
imul
fsub
pop
cmp
xchg
jbe
movs
outs
mov
faddp
sbb
fisub
and
push
push
and
jbe
stos
test
jno
jae
and
mov
jno
mov
outs
mov
leave
adc
and
adc
jg
adc
fisubr
imul
sbb
pop
cwde
lods
dec
xchg
jbe
popa
loope
fmul
lock
and
lahf
adc
imul
push
les
sbb
and
jbe
ja
int
sbb
push
fsub
pop
scas
cmc
stc
pop
mov
mov
xor
dec
xchg
push
frstor
mov
push
jbe
test
shl
fisubr
sbb
cwde
es
xchg
dec
xchg
sahf
call
stos
sar
adc
mov
fsub
popa
xchg
push
movs
and
sbb
jmp
and
jbe
and
es
pusha
xchg
sahf
dec
xor
jbe
dec
push
xlat
sahf
and
int
xchg
sahf
mov
leave
fsub
and
popf
rcl
jbe
lods
adc
xor
imul
and
xchg
jbe
and
out
arpl
mov
jno
inc
inc
fisubr
sbb
stos
mov
and
jbe
mov
xchg
jle
add
ret
imul
xchg
test
(bad)
jne
pop
mov
push
sahf
adc
xchg
jbe
repnz
jo
mov
retf
push
mov
loopne
imul
test
cmc
sbb
mov
fwait
and
push
rep
int3
imul
rcl
imul
lea
ins
jno
fmul
das
push
out
mov
test
dec
xor
rep
int3
imul
aam
push
mov
mov
and
jle
enter
push
xlat
push
ja
das
push
repz
imul
push
stc
xchg
scas
push
loop
repz
imul
push
arpl
mov
jno
inc
enter
fsubr
es
movs
daa
cwde
and
(bad)
sahf
test
xchg
jbe
movs
or
adc
imul
mov
in
inc
dec
call
dec
xchg
sti
pop
mov
jle
int
xchg
into
(bad)
or
repz
int
mov
cld
ja
push
jbe
dec
sub
arpl
jbe
popa
or
fmul
sub
and
mov
pop
xchg
jbe
pushf
hlt
cwde
and
sbb
stc
aam
add
shl
push
xlat
sahf
and
mov
arpl
jbe
stos
test
lods
sub
fisubr
jmp
cwde
mov
and
jns
dec
pop
add
push
push
ja
aam
mov
aaa
xor
dec
push
lods
sahf
and
push
dec
popa
xchg
sahf
test
xchg
jbe
pushf
je
and
sbb
stc
aam
add
shl
push
xlat
sahf
and
mov
arpl
jbe
or
ss
pushf
sub
sbb
aam
sub
neg
fucomp
jbe
dec
xchg
sbb
dec
xchg
sbb
dec
xchg
push
fsub
xchg
ss
or
fmul
cmp
and
xor
xchg
sbb
dec
xchg
es
cdq
jbe
mov
xchg
mov
cdq
imul
jno
repz
hlt
js
and
sti
imul
imul
test
push
and
imul
xor
xchg
jbe
and
xor
je
shl
fsubp
ret
cdq
jbe
out
into
and
xchg
jbe
fs
movs
and
push
xor
cdq
and
adc
dec
frstor
jecxz
mov
sbb
fs
sti
popa
xchg
jns
and
add
or
fsub
cld
jbe
fs
inc
test
and
push
shl
xchg
inc
dec
call
lods
xchg
xchg
add
call
pusha
xchg
call
pop
(bad)
jbe
fs
push
fcomp
jbe
and
shl
xchg
call
and
(bad)
xor
imul
and
xchg
jbe
and
shl
xchg
call
and
sahf
je
xchg
jbe
fs
mov
popf
xchg
jbe
and
popf
inc
sub
jbe
and
jbe
and
xor
jle
shl
xchg
sbb
fisub
sbb
dec
xchg
sbb
dec
xchg
sbb
dec
xchg
push
fsub
pop
jbe
ror
dec
ja
sahf
and
jbe
cmp
jmp
ins
arpl
sahf
test
xchg
jbe
and
outs
fisubr
sbb
xchg
dec
fsub
xchg
imul
arpl
jbe
pop
dec
xor
jno
dec
shl
xchg
call
jnp
and
popa
xchg
push
movs
ds
and
sbb
mov
jle
shl
xchg
sbb
jno
jecxz
int3
imul
fsub
pop
popf
cmp
xchg
jbe
movs
cs
and
(bad)
sti
pop
lea
and
sbb
xchg
push
movs
sti
aam
mov
and
dec
xchg
jbe
mov
imul
test
xchg
aam
fsub
xchg
sbb
xchg
ja
and
mov
xchg
scas
push
loop
repz
imul
pushf
and
jbe
and
shl
xchg
es
call
fisubr
mov
cld
jbe
fxam
fmul
sbb
leave
pusha
jnp
and
sahf
lods
sub
inc
fstp
mov
sahf
mov
cmp
xor
jno
mov
and
call
lods
rcl
fsub
cld
jbe
and
jbe
fs
xor
cwde
jbe
sub
or
sub
mov
xchg
jbe
jb
and
in
out
mov
xchg
std
cdq
sub
adc
frstor
xchg
or
mov
out
fsub
jg
aam
xchg
dec
int
xchg
jbe
movs
out
fsub
stos
frstor
xchg
add
sbb
ja
and
jbe
sbb
neg
and
jbe
sbb
ret
xchg
jns
sti
xchg
jbe
dec
arpl
mov
aam
xor
jb
and
imul
pop
in
mov
test
push
xor
aam
and
imul
imul
xor
imul
imul
test
and
jbe
and
repz
imul
and
xchg
jbe
loope
sbb
jbe
and
mov
mov
xchg
std
dec
icebp
imul
fisubr
or
mov
pop
lds
and
adc
xor
sbb
mov
mov
mov
fisubr
ja
movs
jb
and
mov
mov
imul
jno
jbe
and
cwde
adc
jbe
test
pop
and
push
cmc
loope
and
and
jbe
inc
and
cmp
sahf
and
mov
fstp
mov
add
ret
xchg
mul
push
and
and
jp
adc
ret
jle
aaa
fisubr
pop
sbb
ret
xchg
jns
pop
xchg
jbe
fisub
sahf
add
mov
and
mov
fstp
mov
and
aaa
fcomp
sar
movs
ret
and
jbe
and
jno
and
jbe
pusha
xchg
dec
cdq
sub
jle
push
sahf
sahf
int3
sub
jbe
fldenv
pop
(bad)
xchg
std
cdq
xor
imul
dec
adc
test
lods
jae
adc
test
lods
jae
mov
lods
jae
mov
lods
jae
adc
test
lods
jae
adc
test
lods
jae
adc
test
lods
jae
mov
lods
jae
mov
inc
jo
and
jbe
push
xchg
push
movs
outs
mov
fisubr
jbe
xor
jbe
sub
jbe
sub
(bad)
int3
xor
retf
shl
xchg
push
and
imul
sub
shl
and
mov
mov
imul
faddp
sahf
inc
sub
jp
and
jg
fisub
xchg
jmp
outs
call
enter
and
mov
cs
jbe
ficom
ja
fisubr
and
jmp
and
(bad)
and
mov
and
push
mov
cld
jbe
jb
xor
dec
xchg
sahf
mov
adc
jmp
and
xlat
and
jbe
(bad)
dec
inc
fsub
sbb
fstp
imul
sub
imul
shl
mov
and
mov
jno
inc
pop
adc
xor
pushf
jbe
lods
sbb
fisubr
adc
(bad)
mul
and
jae
cmp
ja
jg
xor
lods
or
fisubr
xor
add
and
imul
dec
xchg
push
out
sti
aam
mov
jle
(bad)
and
xor
leave
call
adc
and
call
lods
adc
fisubr
push
movs
arpl
icebp
sti
aam
push
movs
arpl
dec
sub
xchg
and
xchg
jbe
movs
xchg
mov
faddp
mov
cmp
push
retf
fstp
imul
sar
aam
mov
jle
(bad)
and
ss
cmp
mov
and
mov
mov
stos
ja
push
outs
cmc
and
loop
mov
cld
jbe
(bad)
dec
xor
dec
xchg
sahf
call
adc
jecxz
and
aad
xchg
lahf
sbb
xchg
mov
ficom
repz
imul
in
pop
xchg
dec
in
mov
fmul
push
cmp
aam
mov
jle
aad
xchg
mov
cmp
xor
fsub
jg
fsub
xchg
neg
imul
loopne
in
push
fst
repz
imul
mov
dec
xor
lods
adc
xor
popf
jbe
mov
xchg
jbe
lods
adc
fisubr
and
xlat
sahf
and
aad
xchg
mul
imul
mov
dec
xor
dec
xchg
sahf
mov
adc
xlat
sahf
and
aad
xchg
lahf
shl
xchg
jbe
(bad)
jno
pop
int
mov
test
sti
pop
and
and
repz
imul
sub
imul
int3
dec
imul
fisubr
mov
mov
sahf
jl
xchg
jbe
pushf
xchg
mov
ficom
sbb
dec
ds
sahf
and
jbe
sub
pop
inc
pusha
xchg
sahf
sub
jbe
lods
adc
fisubr
push
movs
arpl
jle
aam
push
movs
arpl
or
xchg
jbe
in
push
and
xchg
jbe
movs
xchg
mov
faddp
mov
or
aaa
fmul
test
fsub
push
retf
fstp
imul
mov
aam
mov
jle
aam
xchg
mov
or
aaa
fmul
sar
jg
fbld
xchg
sti
push
and
and
stos
ja
push
outs
cmc
and
loop
mov
cld
jbe
or
xchg
sahf
test
xchg
jbe
adc
jmp
aam
xchg
lahf
(bad)
xchg
jbe
movs
imul
and
imul
in
pop
xchg
dec
in
mov
fmul
push
lock
aam
mov
jle
aam
xchg
mov
or
aaa
fmul
je
fsub
jg
fisub
xchg
neg
push
repz
imul
push
out
repz
imul
mov
dec
xor
lods
adc
xor
lahf
jbe
mov
xchg
jbe
lods
adc
fisubr
and
jmp
(bad)
xchg
mul
imul
mov
dec
xor
dec
xchg
sahf
pusha
es
jbe
adc
jmp
(bad)
xchg
lahf
xchg
and
mov
ficom
repz
imul
in
pop
xchg
dec
in
mov
fmul
push
xor
aam
mov
jle
(bad)
xchg
mov
add
aaa
fmul
mov
data16
xchg
neg
push
sti
fstp
imul
test
fild
and
push
add
test
cmp
fisubr
pop
leave
imul
and
and
repz
imul
sub
imul
int3
test
cmp
fisubr
pop
lds
and
xchg
sbb
dec
xchg
sbb
dec
xchg
jbe
popa
(bad)
ss
pusha
xchg
sahf
inc
and
jbe
movs
bound
mov
cld
jbe
xchg
bound
fldenv
xchg
mul
push
and
and
xor
cmps
out
pushf
and
dec
frstor
jecxz
push
loop
jbe
mov
mov
faddp
and
(bad)
and
cmp
xchg
jbe
and
repz
imul
and
mov
and
mov
mov
stos
ja
push
outs
sbb
lods
add
mov
and
and
jle
fldenv
xchg
sbb
lods
adc
mov
inc
imul
call
mov
fstp
mov
xchg
bound
fsub
xchg
mov
gs
fmul
sub
and
jbe
and
jb
and
jbe
and
out
and
fsub
xchg
call
push
xor
xchg
sbb
fisub
and
imul
sahf
and
dec
frstor
jecxz
push
loop
jbe
mov
mov
faddp
and
(bad)
and
fsub
jbe
and
repz
imul
and
xchg
fsub
xchg
mov
push
jne
and
mov
aam
frstor
xchg
jbe
fst
jb
and
xchg
push
movs
sti
aam
mov
and
dec
xchg
jbe
mov
imul
and
jmp
fldenv
xchg
jmp
jno
pop
shr
test
popf
int
jecxz
and
test
leave
fs
and
sub
je
xchg
pop
int
and
aam
loopne
outs
and
mov
cmp
sbb
ja
and
jbe
pop
xchg
movs
push
jbe
and
jbe
sub
xor
xlat
jbe
xchg
add
and
push
fs
call
sbb
add
fisub
sahf
push
and
push
xlat
sahf
and
jge
adc
jmp
fsub
xchg
dec
jmp
push
popf
mov
cmp
hlt
jb
and
mov
fstp
mov
adc
jecxz
and
jge
adc
jmp
fsub
xchg
dec
jmp
push
popf
mov
add
aaa
fmul
mov
inc
cld
mov
push
dec
lods
xchg
aam
fcom
jmp
leave
mov
and
mov
fstp
mov
adc
jmp
pop
sbb
ret
xchg
add
fisub
sahf
and
xchg
jbe
cli
lods
inc
xor
xlat
jbe
daa
sbb
jbe
fnstcw
inc
pop
adc
test
mov
mov
jo
cmp
jmp
shl
fdiv
mov
jo
cmp
xlat
sahf
and
sbb
adc
jmp
push
cmp
out
pushf
and
jbe
daa
sbb
jbe
cli
loop
and
test
ja
sahf
mov
sub
xchg
cmp
out
sub
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
daa
mov
sub
and
mov
push
mov
dec
jmp
(bad)
sahf
mov
jbe
in
call
or
mov
retf
pop
push
mov
es
rcr
xchg
cmc
and
jecxz
aaa
and
jns
es
mov
and
mov
push
gs
leave
push
jbe
and
ja
dec
xchg
es
jns
and
mov
mov
xchg
pop
fdiv
xchg
jbe
and
xchg
jbe
retf
pop
and
xchg
jbe
jne
jle
loope
mov
fisubr
sar
add
stos
jmp
neg
jle
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
test
and
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
jbe
add
sbb
xchg
.byte
