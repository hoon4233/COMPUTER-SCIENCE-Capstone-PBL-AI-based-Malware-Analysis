sub
into
xchg
push
sbb
mov
sbb
cli
push
xchg
jge
adc
cmp
sbb
cmp
xchg
pop
sbb
out
or
jge
or
sbb
cmp
nop
cmp
mov
cmp
xchg
dec
sbb
dec
stos
cmp
outs
mov
stos
xchg
jne
adc
mov
dec
stos
xor
jl
mov
sbb
mov
inc
cli
fist
dec
push
mov
push
sbb
pop
cmp
adc
loopne
sbb
rol
bound
cmc
inc
cli
jb
xchg
fmul
dec
dec
mov
adc
xchg
mov
sbb
cmp
sbb
mov
sbb
or
pop
rol
mov
mov
loope
jp
xchg
imul
out
mov
add
sbb
cli
fs
ins
add
mov
cmc
xchg
cmp
pop
sbb
sub
xchg
pop
cmp
mov
push
mov
mov
sub
mov
jnp
nop
and
pusha
rol
ins
add
adc
dec
ins
xor
xchg
arpl
(bad)
xor
jno
fwait
std
mov
cli
jo
out
dec
adc
mov
pop
adc
ficom
xchg
xor
addr16
(bad)
jno
fcom
dec
sahf
jae
push
mov
(bad)
jno
fdiv
sahf
test
sbb
in
lock
dec
adc
stc
sti
cmp
dec
sbb
mov
sbb
cmp
jo
cmp
fldcw
sbb
cmp
out
adc
out
sub
pop
sbb
les
cmp
or
inc
mov
fwait
std
mov
inc
data16
aad
ficomp
cmp
sbb
cmp
mov
push
test
clc
popa
sbb
cmp
sbb
cmp
out
and
adc
pop
cmp
jge
sbb
sbb
cmp
dec
xchg
pop
dec
rol
sbb
loopne
cmp
sbb
jno
mov
sbb
ds
sbb
test
arpl
mov
sub
(bad)
mov
out
sbb
pop
sbb
mov
push
std
xchg
sub
mov
in
rol
bound
cmp
jl
mov
sbb
dec
sbb
imul
xchg
clc
sbb
push
dec
cmps
sub
out
push
jno
fist
jae
push
lea
push
mov
cmp
pop
sbb
pushf
popa
sbb
pop
fisub
into
imul
jecxz
sti
sbb
jb
add
push
xchg
cmp
pushf
loopne
jo
dec
push
lock
cmp
sbb
push
sbb
cmp
jno
fwait
int3
sbb
(bad)
jno
lock
(bad)
sbb
mov
jno
sbb
sub
jns
add
mul
sbb
fiadd
pushf
lock
xchg
(bad)
mov
in
mov
push
mov
rcr
ins
pop
cld
dec
imul
adc
mov
mov
(bad)
sbb
sbb
cmp
sbb
in
out
and
xor
popa
cmp
push
cmp
sub
shl
ins
or
sti
add
or
sti
in
(bad)
neg
sbb
data16
adc
dec
mov
fcom
cwde
call
mov
sbb
adc
cmp
rcr
ins
pop
cld
fwait
aad
dec
dec
xchg
mov
ss
push
add
out
sbb
mov
(bad)
sti
adc
dec
inc
mov
xchg
inc
fpatan
(bad)
ins
add
sti
or
sbb
sti
or
dec
jb
pop
inc
mov
xchg
push
in
nop
pusha
sbb
xchg
ins
cmp
mov
nop
loopne
imul
dec
mov
call
sti
adc
xcrypt-ctr
cmps
call
sti
pop
dec
loopne
mov
jnp
call
mov
jne
push
xchg
pop
rol
sbb
pop
dec
loopne
mov
jnp
sub
ror
xchg
pop
lds
push
cmps
cmp
mov
enter
xchg
enter
jns
and
and
sti
or
jl
xchg
pop
sub
xchg
pop
lds
mov
into
jmp
xchg
jl
nop
pop
ror
jmp
mov
ja
fisttp
out
lds
call
mov
retf
in
mov
ss
cmp
fimul
imul
add
sbb
push
dec
xchg
dec
adc
(bad)
jo
sub
mov
pop
(bad)
sti
pop
mov
(bad)
jo
out
cli
lods
pop
cmp
call
mov
dec
outs
adc
or
sbb
jno
repz
out
repz
loope
leave
add
and
(bad)
jno
and
repnz
mov
pop
pushf
loopne
jo
xchg
mov
jns
loopne
jo
xchg
mov
pop
pushf
in
jo
xchg
loope
jmp
sbb
jno
xchg
mov
rol
lock
dec
xchg
fmul
dec
xchg
fs
lds
and
leave
cmp
mov
jge
pop
pop
loopne
retf
in
iret
gs
lock
neg
sbb
ret
jnp
push
dec
jecxz
clc
ja
xor
pop
leave
inc
mov
call
mov
fs
add
add
mov
in
jl
nop
pop
leave
jns
in
mov
cmc
xchg
jl
inc
inc
bound
dec
mov
dec
dec
push
dec
xchg
fs
lds
in
dec
sub
mov
in
iret
gs
lock
sbb
mov
adc
push
dec
jecxz
clc
ja
xor
pop
leave
inc
mov
call
mov
fs
shr
mov
jge
pop
pop
loopne
retf
in
cmp
lods
pop
cmp
add
data16
cli
fist
dec
mov
or
lds
es
jp
pop
in
dec
sub
mov
in
cmp
lods
pop
cmp
out
repz
xor
jmp
or
jmp
into
repnz
jle
(bad)
(bad)
je
in
leave
sbb
or
inc
bound
dec
mov
dec
dec
push
dec
xchg
dec
xchg
xchg
sar
ins
(bad)
int3
sbb
dec
xor
int3
sbb
enter
pop
pop
in
rcl
stc
jnp
dec
lock
out
add
dec
lock
out
dec
cmp
out
fiadd
pop
loopne
dec
inc
inc
bound
dec
mov
dec
dec
push
dec
xchg
and
mov
sbb
into
imul
xor
mov
xchg
jmp
sbb
out
pop
cmp
adc
in
lock
sbb
or
(bad)
xchg
jl
nop
(bad)
mov
sbb
inc
fimul
imul
fst
cs
(bad)
cwde
out
mov
mov
mov
xor
test
and
adc
mov
xchg
aas
jno
xchg
and
adc
retf
in
(bad)
data16
inc
inc
bound
dec
mov
call
sti
adc
mov
xor
mov
call
in
lock
dec
push
sahf
clc
pop
cmp
push
mov
sbb
mov
sub
xor
test
pop
pop
hlt
xor
dec
outs
out
stc
jnp
jae
push
mov
dec
mov
xchg
cli
mov
test
mov
icebp
adc
sti
sub
imul
xchg
push
(bad)
mov
or
cmp
not
mov
sub
xchg
pop
movs
dec
nop
pop
fld
fstp
adc
out
jno
sub
rol
lock
dec
xchg
fdiv
xor
lods
dec
mov
dec
outs
fldenv
xchg
loope
rcl
int3
sbb
(bad)
mov
ins
ds
sbb
cwde
imul
adc
or
sbb
mov
lods
jnp
cwde
fstp
mov
mov
and
test
or
adc
mov
sbb
out
out
mov
imul
sbb
in
jo
outs
pop
sbb
dec
lock
out
dec
adc
sbb
cmp
cmp
sbb
mov
sbb
mov
xor
and
outs
xchg
nop
pop
lds
popf
sub
mov
fwait
inc
jb
pop
mov
or
and
(bad)
int3
sbb
(bad)
mov
ins
adc
pop
pushf
rol
out
cli
jno
fs
int3
sbb
inc
cmp
dec
mov
sbb
das
lods
jnp
nop
pop
ror
sbb
cmp
imul
inc
xchg
loope
rcl
mov
xchg
jl
nop
pop
shr
xchg
pop
leave
ficom
mov
mov
jmp
add
sbb
dec
sbb
pop
in
push
out
sti
mov
shl
jno
fstp
(bad)
call
sbb
mov
or
mov
sbb
pop
pop
in
dec
ins
das
mov
xor
mov
xchg
popf
in
out
imul
dec
xchg
add
mov
mov
xchg
jl
adc
dec
ficomp
(bad)
jno
sbb
push
out
(bad)
cli
es
retf
sbb
or
sbb
dec
test
dec
mov
out
xor
loopne
retf
in
and
call
test
jns
sbb
into
ins
nop
popf
in
jno
out
dec
inc
inc
bound
dec
mov
call
inc
push
adc
psadbw
inc
mov
sub
pop
jmp
or
pop
adc
or
ret
dec
call
cmp
jmp
jbe
(bad)
not
fwait
rcr
xchg
jge
sbb
cli
sbb
xchg
jl
xchg
pop
cmp
pop
sbb
xchg
push
cmp
out
push
dec
sbb
fwait
int3
sbb
shl
out
out
xchg
ins
cmp
or
dec
mov
call
xchg
ror
in
mov
(bad)
xchg
jl
nop
(bad)
xchg
adc
dec
mov
jmp
mov
or
mov
and
jge
mov
fistp
pop
adc
or
out
jno
jge
mov
pop
(bad)
sti
adc
pop
pop
sbb
pop
je
cmp
cdq
(bad)
sbb
sbb
in
jb
in
jb
in
jo
mov
pop
push
mov
ja
mov
jb
in
dec
sar
pop
adc
into
cdq
and
mov
dec
jae
mov
in
dec
imul
(bad)
sti
loope
inc
loope
sbb
xchg
pop
int
jae
push
jle
pop
cmp
loopne
in
sbb
pop
loope
fiadd
pop
call
(bad)
jno
loopne
je
sbb
rol
lock
dec
xchg
fdiv
mov
cmp
sbb
fldenv
mov
into
ins
nop
popf
lea
out
dec
cwde
fstp
test
sbb
or
out
jno
jo
outs
pop
sbb
in
jne
cmp
pushf
in
(bad)
jo
xchg
mov
fdivp
push
xor
pushf
out
sbb
mov
sub
mov
jae
shl
je
cmp
out
mov
sbb
mov
out
cmc
jno
out
or
out
jno
lock
out
dec
adc
pop
cmp
sbb
xchg
mov
pop
ficom
(bad)
fidivr
dec
mov
out
jno
pop
in
dec
ins
mov
mov
mov
(bad)
jno
(bad)
dec
jo
outs
pop
sbb
jno
xchg
add
and
mov
in
stc
sbb
cmp
pushf
fadd
jo
dec
cwde
adc
and
fldenv
jl
adc
or
adc
mov
cdq
iret
sbb
mov
out
data16
(bad)
jno
fdiv
pop
ficomp
xor
out
jno
popf
cmc
jno
out
fidivr
xor
pop
ficom
(bad)
fidivr
dec
mov
out
inc
pop
pop
in
dec
push
popf
or
out
or
movs
les
out
sbb
stc
jnp
xchg
popf
les
out
mov
jno
fdiv
xor
fstp
pushf
mov
(bad)
jno
sbb
or
sbb
mov
scas
mov
into
dec
xchg
mov
fidiv
cdq
iret
sbb
ret
sbb
or
sbb
fidivr
mov
cmp
sbb
ss
sbb
mov
sbb
jno
fxch
sbb
cs
sbb
movs
out
out
or
out
cmp
ds
out
clc
jnp
xchg
movs
les
out
data16
(bad)
jno
fdiv
mov
dec
mov
(bad)
jno
sbb
mov
push
dec
stc
pop
cmp
dec
mov
int3
jno
fwait
std
and
mov
ins
push
in
jo
outs
pop
sbb
dec
lock
out
dec
adc
sbb
ficomp
cmp
jno
fxch
sbb
cs
sbb
sub
out
or
out
cmp
ds
out
clc
jnp
xchg
movs
les
out
xchg
in
(bad)
jno
fdiv
mov
dec
mov
(bad)
jno
sbb
mov
push
sub
dec
mov
int3
jno
fwait
std
and
mov
ins
push
in
jo
outs
pop
sbb
dec
lock
out
mov
jno
sbb
ficomp
cmp
out
sti
mov
mov
fist
jno
fxch
sbb
cs
sbb
cwde
in
out
or
out
cmp
adc
mov
(bad)
sbb
cmp
sbb
outs
pop
sbb
mov
in
(bad)
jno
fdiv
mov
dec
mov
(bad)
jno
sbb
mov
push
idiv
pop
cmp
dec
mov
int
out
std
and
mov
ins
jge
sbb
outs
pop
sbb
dec
lock
jp
out
dec
adc
sbb
sbb
stc
pop
cmp
movs
in
jo
dec
rcr
adc
jno
sbb
cli
adc
mov
(bad)
sbb
cmp
jmp
es
(bad)
mov
mov
jnp
sbb
(bad)
fdivp
mov
jno
inc
rcr
pop
sbb
das
dec
mov
(bad)
int3
sbb
cli
dec
pushf
in
jo
sbb
xchg
sbb
cmp
jmp
push
out
(bad)
ficom
out
add
nop
pop
lds
sbb
mov
mov
shl
jno
xchg
add
cmp
pop
xchg
cli
or
pushf
fnstsw
pop
out
(bad)
mov
sbb
jno
fwait
test
out
(bad)
(bad)
push
xchg
mov
xor
mov
mov
cdq
sbb
mov
(bad)
sbb
cmp
pushf
nop
(bad)
jo
dec
mov
and
mov
ficom
xchg
loope
cli
xchg
mov
pop
ficom
(bad)
fidiv
fmul
sbb
(bad)
ficom
sbb
mov
xchg
jl
adc
or
sbb
mov
imul
out
jmp
retf
in
loope
rcl
sbb
(bad)
ficom
out
add
nop
pop
lds
sbb
cmp
jmp
add
mov
(bad)
jno
xchg
add
and
in
sbb
into
ins
nop
popf
xchg
jno
out
dec
call
lea
sbb
dec
xchg
mov
ficom
xchg
jl
nop
ror
nop
fstp
or
cmp
sbb
mov
jno
out
jbe
out
out
mov
les
out
data16
call
jo
sbb
mov
sbb
in
lock
sbb
mov
mov
lods
aad
out
mov
in
(bad)
jno
jo
outs
pop
sbb
dec
lock
loop
sbb
cmps
rcl
jno
out
mov
out
or
popf
movs
jno
out
add
aad
nop
inc
jge
xchg
mov
out
(bad)
or
mov
jmp
add
out
mov
out
adc
dec
push
popf
push
mov
sbb
jno
cdq
cli
jo
sbb
add
push
push
clc
pop
cmp
out
mov
out
add
sbb
cmp
pop
in
dec
push
popf
push
mov
sbb
mov
imul
out
push
pop
pop
in
dec
push
popf
(bad)
(bad)
sbb
mov
jno
icebp
fmul
icebp
in
mov
inc
mov
sub
mov
jg
mov
mov
xchg
mov
pop
pushf
pusha
(bad)
jo
xchg
mov
ficom
mov
aaa
sbb
mov
(bad)
jno
hlt
sub
(bad)
mov
retf
movs
popf
jno
out
add
nop
pop
lds
push
sti
mov
inc
out
jno
fstp
or
mov
out
add
push
(bad)
clc
pop
cmp
out
mov
out
add
sbb
cmp
pop
in
dec
push
popf
das
(bad)
sbb
mov
jno
pop
mov
add
push
mov
lods
int
out
mov
popf
out
jno
xchg
add
cmp
cmps
rcl
sbb
(bad)
jno
pop
mov
or
out
ss
sbb
mov
imul
lock
jge
out
dec
adc
popa
jno
out
dec
mov
movs
fs
out
sbb
out
(bad)
sbb
cmp
sbb
out
add
push
sar
pop
cmp
pushf
in
jo
dec
shr
fisttp
add
out
jno
rol
into
cdq
and
mov
or
out
jno
repz
cmp
les
popf
fs
out
add
out
mov
jno
lock
out
sbb
add
push
(bad)
stc
pop
cmp
pushf
in
jo
dec
rol
cmp
popa
pop
cmp
out
cmp
sbb
(bad)
ficom
xchg
loope
cli
xchg
mov
pop
(bad)
mov
add
out
mov
sbb
out
ficom
xchg
mov
ficom
out
(bad)
out
mov
and
fwait
test
out
test
out
mov
or
out
jno
mov
into
ins
nop
popf
xchg
jno
out
dec
xchg
popf
shl
out
add
call
cli
adc
out
ficom
fwait
test
out
mov
mov
int
(bad)
jno
xchg
or
adc
jno
xchg
or
adc
jno
xchg
or
adc
dec
xchg
popf
fnstenv
out
add
lock
into
jno
inc
addr16
fld
jb
out
lods
jnp
jno
sub
sbb
sbb
cmp
jge
sbb
sbb
cmp
dec
xchg
pop
data16
mov
adc
je
xchg
ret
dec
in
cmp
sar
cmp
sbb
mov
js
out
mov
lods
jnp
sbb
gs
jl
out
(bad)
jno
xor
retf
stc
sbb
mov
xchg
jl
ficom
in
jns
cmp
sub
mov
(bad)
dec
pop
in
jno
out
rol
mov
jmp
sbb
pop
rcr
cmp
fisttp
outs
call
out
push
out
lods
jnp
jae
push
mov
sbb
sbb
in
lock
jmp
sbb
in
sbb
inc
fimul
imul
xchg
xchg
leave
(bad)
jno
ins
(bad)
int3
sbb
test
jle
call
and
pop
sbb
or
sbb
mov
mov
fistp
test
mov
sbb
dec
sbb
mov
mov
xchg
icebp
iret
xchg
sbb
sub
xchg
inc
mov
sbb
sbb
cmp
sbb
sbb
mov
sbb
jns
cmp
pop
sbb
dec
cdq
and
or
cmp
lock
cmp
xchg
into
out
sbb
sbb
cmp
test
(bad)
sbb
cmps
iret
sbb
aas
jno
and
jns
xchg
jl
nop
(bad)
mov
sbb
jno
and
(bad)
sbb
(bad)
mov
jnp
out
sbb
sub
push
sub
sbb
mov
sbb
mov
mov
fwait
sahf
mov
addr16
(bad)
jno
sbb
cmp
sbb
cmp
sbb
mov
mov
out
mov
xchg
adc
fyl2x
fmul
jnp
mov
sbb
cs
cmp
sbb
fidiv
out
mov
xchg
sbb
fyl2x
mov
call
and
pop
sbb
dec
sbb
movs
iret
sbb
cmp
out
iret
mov
xchg
sbb
fyl2x
mov
sbb
mov
mov
sbb
dec
sbb
mov
mov
icebp
mov
out
(bad)
mov
jnp
out
add
pop
sbb
dec
cdq
adc
jns
sbb
hlt
movs
iret
sbb
cmp
xchg
ss
jae
mov
(bad)
mov
jmp
add
outs
sbb
cmp
cmc
test
call
iret
sbb
test
sbb
test
mov
sbb
(bad)
sbb
cmps
iret
sbb
xchg
mov
sbb
mov
jnp
call
test
cmp
nop
fidivr
mov
icebp
mov
sbb
or
(bad)
cmp
xchg
scas
cwde
fidiv
sbb
mov
pop
xchg
cmp
mov
cmp
mov
fs
or
out
mov
mov
sbb
mov
add
sbb
cmp
and
sbb
mov
sbb
cs
cli
lods
pop
cmp
mov
cmp
repnz
mov
xchg
nop
call
mov
mov
xor
fyl2x
push
js
push
cmp
pop
sbb
mov
xchg
pop
pop
mov
pop
rcr
mov
xchg
leave
cmps
jmp
sbb
sbb
sbb
cmp
pop
jecxz
cmp
cwde
int3
sbb
ret
sub
pushf
mov
sbb
mov
mov
sbb
mov
mov
scas
jl
and
cmp
pop
cmp
pop
sbb
mov
ins
sub
fs
sti
dec
cwde
inc
je
ins
jne
sbb
test
int
gs
mov
add
js
cdq
xchg
leave
(bad)
pop
rcr
mov
pop
(bad)
mov
test
call
repz
dec
sbb
mov
mov
xchg
dec
sbb
rcl
or
test
push
sbb
sbb
mov
adc
or
xlat
aad
sbb
or
sbb
rcl
or
test
push
sbb
sbb
mov
and
or
cmp
lods
pop
cmp
shl
loope
sbb
fdivr
inc
sar
fist
dec
xchg
ins
out
ss
cmp
in
push
ins
(bad)
int3
sbb
xor
sbb
clc
inc
sbb
pop
fidiv
xor
sbb
cwde
inc
cmp
sbb
xor
sbb
push
or
test
sbb
push
fbstp
xor
sbb
dec
inc
cmp
sbb
xor
sbb
pop
inc
cmp
sbb
xor
sbb
sub
cmp
sbb
inc
fimul
imul
adc
inc
pop
rcr
pop
(bad)
cmp
lods
pop
cmp
popf
mov
xchg
fsubp
or
dec
icebp
add
mov
xchg
loope
rcl
add
retf
jmp
sbb
mov
sbb
jmp
sbb
mov
jnp
call
push
nop
fstp
retf
rcr
mov
fistp
sbb
mov
out
fiadd
pop
xor
pop
sbb
cli
lods
pop
cmp
test
mov
sbb
jns
xchg
jl
nop
(bad)
retf
lods
sbb
mov
fwait
pop
sbb
jmp
mov
mov
push
mov
push
cmp
pop
cld
imul
xchg
loope
rcl
in
xchg
jl
dec
jb
in
jb
in
out
push
test
sbb
dec
sub
shr
sbb
jno
ins
(bad)
int3
sbb
jno
mov
push
mov
(bad)
sti
std
lock
out
sbb
add
xchg
jl
nop
fcmovnb
sti
std
lock
rcr
sbb
mov
jnp
xchg
pop
rcr
out
mov
pop
cld
imul
xchg
jl
repnz
mov
mov
bound
dec
mov
call
mov
mov
in
jl
nop
pop
fnstcw
cld
mov
lds
xor
ret
or
int
sub
mov
cmc
xchg
jl
jae
push
mov
mov
loope
mov
icebp
dec
(bad)
sti
loope
cmp
pop
in
imul
out
or
pop
sbb
pcmpeqb
sub
sbb
lock
dec
xchg
(bad)
dec
cmps
ds
add
mov
xor
mov
out
dec
cmp
(bad)
sti
adc
jno
or
hlt
sbb
into
imul
xchg
fmul
dec
xchg
dec
xchg
ins
(bad)
int3
sbb
mov
sbb
mov
cmp
cmp
ins
xor
cmp
cmp
ins
add
cmp
cmp
ins
or
cmp
cmp
mov
pushf
xor
xchg
jge
sbb
sub
dec
pop
out
sub
pop
cmp
fist
mov
pop
jecxz
cmp
popf
mov
sbb
mov
call
mov
ins
inc
pop
jecxz
ror
and
dec
loopne
loopne
sbb
mov
and
dec
rcl
scas
jl
jb
add
sbb
inc
inc
cmp
jb
sub
xor
imul
inc
mov
xchg
jl
call
fimul
sbb
cmp
jbe
lock
retf
or
ror
xchg
sub
mov
cmp
cmp
dec
or
movs
jnp
sbb
pop
out
addr16
jno
sbb
mov
ficom
push
cmp
or
pop
sbb
into
nop
loopne
data16
or
loope
ror
and
cmps
cmp
loope
ror
ins
push
mov
sbb
add
cmp
repz
dec
push
xchg
cmp
mov
jge
jbe
cwde
add
pop
loope
ror
dec
mov
call
sti
pop
xchg
ror
push
add
sbb
cmp
push
and
dec
mov
dec
or
call
or
loope
jl
xchg
pop
cmp
sbb
or
(bad)
sbb
cmp
and
xchg
rol
and
(bad)
ins
push
mov
call
sti
daa
xchg
ror
sbb
loopne
sbb
mov
and
cli
pop
and
dec
mov
cmp
mov
cmp
dec
or
jecxz
ror
sbb
cmp
cwde
out
mov
sbb
or
in
jno
inc
bound
dec
mov
call
mov
jnp
xchg
ins
xor
sub
gs
cwde
add
leave
cwde
out
lea
sbb
cwde
out
lea
sbb
pop
xchg
jl
xor
cmp
shl
mov
sbb
cli
lods
pop
cmp
sti
sbb
into
sbb
loop
loope
loope
icebp
pushf
iret
jno
inc
(bad)
mov
jnp
push
scas
cmp
mov
ins
push
mov
sbb
mov
mov
adc
sub
jno
in
mov
in
data16
mov
push
nop
cmp
(bad)
xchg
sbb
pop
xor
pop
jecxz
jecxz
leave
xchg
jl
xchg
pop
daa
(bad)
xchg
dec
int
or
and
mov
or
call
cmps
leave
xchg
ret
pop
sbb
or
loope
cmp
nop
sbb
(bad)
mov
jnp
call
nop
sbb
jmp
retf
loope
ds
sbb
(bad)
sbb
cmp
dec
pop
(bad)
fisttp
(bad)
mov
sub
(bad)
movs
pop
cmp
in
jno
fdiv
dec
dec
xchg
fdiv
inc
cmp
popa
mov
dec
outs
fyl2x
mov
out
mov
mov
mov
cmp
fistp
cmp
jmp
jno
sbb
mov
cwde
test
out
mov
cmp
add
mov
ins
and
movs
sti
out
out
dec
popf
push
scas
mov
push
and
sbb
sti
sbb
sub
sbb
shl
add
sbb
mov
cmp
out
mov
mov
iret
sbb
(bad)
sbb
test
add
sbb
sti
sbb
jno
sub
fiadd
inc
cmp
out
mov
or
test
sbb
(bad)
(bad)
push
scas
mov
in
push
mov
int3
sbb
or
jno
popf
retf
out
sub
fwait
add
mov
pop
mov
sub
xchg
sub
mov
out
mov
jnp
cdq
movs
ficom
out
sbb
out
or
mov
cmp
mov
int
(bad)
jno
retf
clc
gs
cwde
nop
sar
pop
cmp
pushf
in
(bad)
jno
sub
cmp
sahf
sbb
push
mov
cmp
sbb
fisttp
out
leave
cwde
fstp
sahf
sbb
add
in
test
or
lock
sbb
(bad)
mov
jnp
call
addr16
sbb
mov
(bad)
mov
out
(bad)
mul
(bad)
jno
shl
out
ss
out
dec
adc
fmul
call
add
out
jnp
out
jecxz
repz
ins
sbb
ins
jb
sub
or
movs
loopne
jno
ins
xor
cwde
out
mov
sbb
cwde
out
lea
sbb
nop
sar
sbb
pop
pushf
cwde
out
out
ja
ficomp
sub
jmp
out
jb
adc
jno
inc
mov
jno
sbb
mov
out
jno
sbb
mov
hlt
(bad)
jno
pop
mov
jno
ins
(bad)
int3
sbb
mov
out
data16
mov
pop
cmp
jmp
add
pop
sbb
jno
mov
cmp
out
fisttp
(bad)
mov
push
lds
or
out
out
lods
jp
out
dec
sti
sbb
dec
clc
sbb
ret
in
repz
adc
(bad)
or
test
popa
out
cmp
out
dec
cmp
mov
jno
ins
(bad)
out
movs
jnp
icebp
mov
mov
xchg
mov
pop
fistp
sub
mov
out
dec
popa
sbb
pop
pushf
and
out
mov
add
out
sti
xchg
sbb
mov
(bad)
mov
xchg
popf
cdq
push
out
mov
(bad)
mov
sbb
mov
mov
(bad)
jno
popf
xchg
push
out
mov
int
(bad)
jno
popf
in
out
push
xchg
xchg
popf
adc
(bad)
out
out
pop
fstp
sbb
jno
popf
test
out
int
popf
std
push
out
mov
lods
mov
push
out
mov
jno
ins
cli
out
sbb
scas
jae
mov
lods
mov
fcom
out
fs
sbb
jno
mov
jno
repz
int3
sbb
(bad)
sbb
test
add
out
mov
(bad)
out
pop
adc
sbb
cmp
fisttp
pop
cmp
mov
(bad)
jno
jo
sahf
sbb
imul
cmp
out
xor
popf
pop
(bad)
sbb
mov
or
sbb
mov
out
cmp
and
dec
sbb
sbb
xchg
sbb
cmp
out
sub
mov
sbb
jno
fidivr
call
add
out
leave
(bad)
cdq
and
sti
xor
mov
pop
jmp
and
sti
or
sbb
mov
ins
xor
jmp
and
cli
adc
inc
out
dec
cmp
cmp
fisttp
out
push
pushf
mov
cmp
and
dec
cwde
xchg
sbb
(bad)
sbb
cmp
sub
or
mov
jns
pop
mov
in
test
jle
cmpxchg
(bad)
out
cld
lock
xchg
sub
push
scas
lods
sub
sti
sbb
jno
fidivr
mov
sbb
mov
mov
sbb
mov
sbb
and
lea
sbb
mov
mov
sbb
mov
sbb
and
mov
sbb
mov
jle
rcl
(bad)
or
fadd
cdq
xor
pushf
jmp
jno
dec
(bad)
cmp
mov
push
out
sar
loopne
(bad)
or
cli
mov
or
out
mov
in
test
pop
rcr
mov
stc
cmp
or
out
out
cmp
popa
out
mov
jno
sbb
mov
(bad)
mov
jnp
lock
cwde
mov
(bad)
push
scas
mov
in
push
mov
int3
sbb
or
jecxz
jno
inc
bound
dec
mov
call
rcl
fistp
sub
scas
cwde
jne
pushf
jge
cmp
out
add
mov
mov
jmp
add
aad
jl
out
jge
pop
pop
fdiv
push
xchg
sub
add
xchg
inc
pop
xchg
sub
or
cdq
push
jbe
and
mov
pop
mov
retf
loope
sti
(bad)
fist
(bad)
mov
push
mov
push
scas
ins
jo
pop
sub
ins
push
mov
test
gs
lahf
imul
retf
in
shr
sbb
cmp
pop
(bad)
fnsetpm(287
and
rcl
add
sbb
subps
mov
retf
out
cmp
add
sbb
cmp
jnp
(bad)
int
cmp
mov
push
pop
out
sub
loop
cli
adc
mov
push
pop
out
sub
(bad)
sbb
xchg
jl
nop
ficom
dec
nop
dec
rol
sbb
mov
cmp
pop
out
sub
out
jp
and
push
pop
out
push
pop
in
push
fs
sbb
repz
add
pop
(bad)
frstpm(287
and
enter
pop
out
adc
inc
jb
push
pcmpeqb
xchg
retf
sbb
cmp
and
dec
mov
scas
jl
inc
inc
bound
dec
mov
dec
dec
outs
add
or
ja
repnz
sub
sbb
outs
in
lock
sbb
into
cdq
and
mov
dec
repnz
mov
mov
pop
push
(bad)
sbb
aas
rcr
loope
rcl
dec
dec
xchg
fdiv
sbb
cmp
sbb
xor
loopne
imul
loopne
dec
xchg
ins
xor
add
rcr
pushf
sbb
jno
dec
rol
fisttp
mov
sub
mov
sub
data16
fld
dec
xchg
add
xor
sbb
dec
xchg
rcl
dec
sbb
rol
pop
cld
fwait
aad
dec
dec
outs
xor
out
jne
sbb
push
mov
cmp
sbb
out
sbb
push
out
xor
dec
cmp
out
and
pop
xchg
jl
call
pop
pop
in
mov
sub
rcr
jae
outs
data16
cmp
or
into
icebp
fsubr
sbb
pushf
lea
sbb
call
retf
adc
push
mov
loope
jl
out
int
out
(bad)
shr
sbb
fs
sbb
add
nop
loopne
jbe
fbld
inc
sar
fist
dec
xchg
loope
rol
jb
out
sbb
mov
push
mov
push
mov
sbb
jno
adc
hlt
dec
sbb
pop
fistp
cmp
sub
rcr
jae
push
mov
outs
cbw
dec
cmp
fcomp
add
pop
fidiv
add
fucom
ins
xor
mov
jb
add
in
jo
outs
pop
sbb
mov
out
loope
sbb
outs
dec
dec
cmp
sbb
aad
fld
fwait
aad
dec
dec
xchg
cmp
mov
push
in
jo
mov
sbb
jae
push
mov
cmp
icebp
clc
imul
pop
in
mov
call
gs
cmp
sbb
fdiv
cld
imul
ins
or
sti
adc
sbb
pop
loope
rol
dec
rcr
sbb
mov
rcr
ins
pop
cld
dec
push
dec
xchg
dec
xchg
pop
lds
xchg
js
je
mov
sbb
or
(bad)
ror
sbb
jle
fs
jp
out
xor
int3
sbb
inc
fstp
sbb
mov
jo
outs
pop
sbb
in
sbb
or
repnz
cmp
clc
jnp
icebp
dec
push
sbb
and
jno
adc
mov
sbb
mov
gs
jnp
icebp
xor
mov
fwait
std
xchg
sbb
pop
dec
in
rol
cli
fist
dec
mov
adc
lds
inc
subps
std
test
stc
pop
cmp
dec
cmp
or
(bad)
push
mov
clc
dec
cmp
and
dec
addr16
fxch
sbb
neg
sbb
pusha
add
sbb
mov
in
addr16
fld
fwait
aad
dec
dec
outs
xor
nop
sar
nop
fistp
pop
cli
cmp
call
mov
test
sbb
retf
test
sbb
fiadd
pop
les
(bad)
ins
push
pop
dec
pop
cli
and
scas
pop
cmp
pop
out
mov
sbb
fiadd
pop
shl
push
scas
jge
call
pop
aad
fs
sti
sbb
cdq
shr
sub
out
push
fs
sti
rcl
jns
xchg
pop
(bad)
cmp
cmp
scas
pop
cmp
call
repz
dec
mov
jne
(bad)
cdq
gs
mov
push
out
sti
mov
rcl
cmp
xchg
ins
xchg
scas
sub
sbb
cmp
mov
cmp
std
xchg
loope
rcl
inc
xor
sub
pop
fld
pop
push
mov
adc
mov
pop
xor
sub
xchg
jl
push
scas
jns
xchg
dec
xor
leave
sbb
pop
frstor
xchg
loope
rcl
dec
jns
test
mov
pop
cmp
mov
mov
push
pushf
fsubr
mov
sub
test
push
mov
test
push
mov
test
push
mov
test
mov
enter
mov
push
pushf
fsubr
xchg
mov
test
dec
sbb
shr
mov
test
addr16
or
jno
js
push
mov
cmp
mov
jns
mov
test
push
mov
test
push
mov
sub
mov
test
push
mov
test
or
test
push
mov
test
cmp
or
or
pcmpgtb
clc
pop
cmp
pop
fstp
jns
test
mov
pop
cmp
jae
test
push
mov
cmp
mov
test
into
sbb
test
push
mov
test
push
mov
test
push
mov
test
push
mov
fs
sub
test
jbe
mov
push
mov
cmp
call
fmul
enter
mov
push
xor
test
pop
mov
test
inc
mov
test
push
mov
test
leave
pop
fstp
sub
test
jbe
mov
push
mov
test
lahf
in
cli
dec
dec
xchg
fmul
dec
xchg
xchg
pop
xor
enter
retf
in
sti
(bad)
fist
pop
dec
pop
call
cmp
jmp
out
xlat
nop
fidiv
jne
ins
aas
dec
pop
loop
gs
push
sbb
mov
cmc
mov
xchg
scas
dec
ret
xor
pop
out
loope
dec
xchg
pop
aad
out
loope
dec
xchg
dec
ret
rcr
out
jge
pop
pop
lock
in
cmp
call
cmp
pop
(bad)
sahf
push
scas
je
xor
mov
push
scas
cmp
mov
ins
sub
rcr
into
push
scas
sub
rcl
mov
sbb
push
xchg
cmp
dec
lock
rcr
cmp
pop
rcr
ficom
ret
vphaddubw
sbb
in
xchg
jl
dec
xchg
loope
jmp
sbb
or
pop
cdq
dec
jb
and
mov
jl
push
scas
jl
push
and
sbb
fld
fwait
aad
dec
dec
outs
xor
cwde
fisttp
loopne
sbb
xor
sbb
dec
dec
xchg
clc
jns
sbb
dec
jecxz
clc
ja
xor
pop
leave
inc
mov
xchg
dec
(bad)
or
sbb
dec
mov
fcom
retf
cmp
pop
clc
imul
out
or
adc
or
sbb
mov
scas
inc
popa
fdivr
cmp
pop
sbb
call
out
rcl
inc
popa
fdivr
cmp
and
mov
sbb
outs
data16
mov
push
mov
movs
jnp
sbb
fdivp
mov
std
xchg
mov
xchg
jl
(bad)
dec
jno
cmp
in
sub
movs
pop
cmp
sbb
sbb
mov
movs
jnp
and
cld
sar
retf
loope
and
out
cmp
lds
jl
xchg
or
or
mov
sbb
movs
pop
cmp
icebp
je
mov
xchg
jl
icebp
jl
mov
xchg
inc
push
push
scas
mov
pop
mov
sub
movs
pop
cmp
repnz
push
mov
lock
sbb
mov
shl
ret
sbb
mov
rcl
jno
fidiv
cmp
(bad)
sahf
adc
mov
lds
push
movs
pop
cmp
jmp
pop
cmp
icebp
clc
jne
sbb
test
sbb
mov
mov
xchg
sub
movs
pop
cmp
sbb
sbb
mov
movs
jnp
and
cld
sar
retf
jmp
sbb
or
or
mov
sbb
movs
pop
cmp
nop
out
cmp
push
scas
ins
popa
enter
mov
test
sbb
cmp
adc
and
cmp
ins
xchg
or
push
pop
cmp
sbb
sbb
repz
dec
mov
scas
jl
dec
xchg
leave
lea
test
sbb
and
out
or
jae
push
mov
push
mov
cmp
icebp
adc
sbb
inc
cdq
sbb
push
mov
(bad)
out
frstor
push
cmp
add
mov
inc
sbb
or
repz
mov
sti
mov
int
cli
rol
lock
dec
xchg
fmul
cmc
add
mov
dec
outs
fldenv
mov
into
push
out
mov
cwde
sbb
xchg
mov
sbb
nop
call
shl
push
sbb
xor
push
pop
sahf
dec
xchg
clc
jns
fld
mov
loope
cmps
rcl
mov
push
mov
(bad)
jno
fidivr
repz
data16
mov
scas
inc
jno
retf
je
or
dec
out
repnz
je
fld
xchg
xor
mov
inc
xchg
sti
or
and
(bad)
jno
cwde
jl
sbb
dec
inc
fistp
cmp
push
cmp
sbb
dec
pushf
sbb
dec
pop
out
jno
cdq
iret
nop
inc
sbb
add
push
push
mov
(bad)
jnp
xchg
popf
ret
out
data16
cmp
jae
push
mov
push
mov
sbb
pushf
jecxz
jno
dec
rcr
cmp
pushf
in
les
out
xchg
dec
ror
sbb
(bad)
fidiv
and
pop
sbb
cmp
in
jno
sub
sbb
push
in
les
lock
enter
mov
jnp
dec
jo
push
pop
sbb
dec
lock
sbb
mov
loop
(bad)
jno
jo
push
pop
sbb
dec
jo
mov
cwde
rcr
sbb
cmp
cwde
push
cmp
icebp
in
jno
faddp
mov
jnp
jno
out
sbb
push
pop
sbb
dec
jo
mov
cwde
shr
jno
out
sbb
push
pop
sbb
sbb
mov
mov
inc
inc
mov
inc
addr16
fld
fwait
aad
dec
dec
outs
add
pusha
adc
fsubp
cmp
lods
pop
cmp
loope
fiadd
pop
in
mov
call
ficom
push
mov
pop
cmp
sbb
in
out
and
xor
push
cmp
out
mov
ja
pop
shl
outs
in
jb
jno
or
sti
in
push
(bad)
sbb
mov
mov
ins
lds
push
cmp
fimul
imul
movs
jnp
mov
mov
ins
sub
mov
imul
out
and
xor
sbb
mov
fld
dec
outs
xor
and
mov
nop
pop
lds
fidiv
in
xchg
jl
dec
out
sahf
out
xor
mov
sbb
or
fimul
imul
xor
loopne
jbe
fbstp
in
push
mov
cmp
jb
jno
adc
sti
adc
(bad)
(bad)
sbb
xor
sbb
dec
repnz
(bad)
sti
add
dec
call
dec
sahf
out
lds
push
cmp
out
lds
push
cmp
nop
loopne
jbe
ffreep
sti
in
adc
sbb
or
inc
lock
dec
xchg
fmul
xchg
ins
sub
pop
pop
add
pmaxsw
mov
fidivr
mov
fbstp
sbb
cmp
sbb
dec
and
xor
pop
cmp
sub
shl
dec
jb
in
out
sahf
out
lds
pop
cmp
out
lds
pop
cmp
out
lds
pop
cmp
repnz
bound
sbb
jns
xchg
jl
nop
fbld
rcr
ins
pop
cld
dec
imul
jl
mov
mov
sbb
cli
cmp
ds
imul
pop
rol
sub
pop
fidivr
add
loope
push
mov
jae
push
dec
sbb
cmp
sbb
in
jo
push
pop
sbb
aam
sbb
sub
cwde
out
sub
sbb
xor
sbb
dec
repnz
(bad)
mov
icebp
push
jg
sbb
mov
mov
lock
mov
xchg
icebp
cmps
rcl
cmp
int3
sbb
mov
dec
dec
outs
fst
adc
retf
in
jns
sub
jl
nop
ficom
dec
nop
dec
lds
(bad)
repz
and
xchg
shl
shr
or
aam
sbb
or
xor
mov
or
cmp
or
cwde
pop
lds
sbb
leave
cdq
and
mov
push
ins
cmp
xchg
nop
loopne
push
and
xchg
jl
fistp
cmp
pop
in
stos
sbb
mov
pop
repz
jmp
mov
dec
pop
in
call
ins
add
imul
sbb
add
xor
mov
in
loope
loope
cmp
rcr
ins
pop
cld
fwait
aad
dec
dec
outs
add
jmp
cdq
dec
jle
sub
mov
push
sbb
mov
loope
(bad)
pop
(bad)
fwait
inc
cwde
pop
cmp
out
repz
sub
adc
cmp
nop
cmp
jbe
std
mov
mov
jle
retf
out
cmp
pop
mov
out
(bad)
mov
xchg
shl
sbb
mov
fwait
(bad)
out
dec
xchg
shl
sbb
mov
out
fisttp
sbb
or
fs
outs
out
(bad)
jnp
dec
lock
enter
dec
or
pop
mov
out
jl
imul
aad
fld
mov
shl
pop
sbb
fisttp
xchg
pop
in
dec
call
sub
out
jno
fwait
pushf
(bad)
out
(bad)
mov
imul
out
or
nop
call
xor
pop
or
xor
mov
fwait
test
out
mov
data16
cmp
adc
cmp
or
rcr
pop
pushf
rol
out
and
loope
(bad)
jno
popf
in
jno
out
xor
out
jno
movs
loope
in
or
out
test
jb
dec
pop
cmp
out
mov
mov
ins
xor
sbb
mov
leave
cmps
jmp
adc
jno
fnstcw
mov
sbb
fist
xchg
(bad)
jmp
je
lock
inc
out
mov
push
pop
sbb
sti
adc
mov
sbb
mov
push
pop
sbb
cmp
out
jno
inc
jl
sbb
jl
sbb
mov
mov
jle
pop
cmp
in
jo
lock
retf
sbb
mov
mov
adc
cmp
sbb
cmp
cmp
ret
sbb
pop
out
loope
add
out
push
mov
pop
cmp
icebp
loopne
mov
fwait
std
sahf
icebp
sar
mov
mov
mov
jle
pop
cmp
in
jo
lock
retf
mov
push
pop
sbb
cmp
out
jno
cld
jge
sbb
jge
sbb
mov
mov
jle
pop
cmp
in
jo
lock
sbb
mov
retf
add
mov
data16
cmp
sbb
test
out
fnstenv
out
sbb
call
fisttp
(bad)
sti
cmp
sbb
jno
jo
push
pop
sbb
push
pop
cmp
neg
pusha
mov
lock
sbb
add
mov
out
clc
jnp
out
lds
out
int3
pop
sbb
or
(bad)
pop
cmp
in
jo
lock
retf
mov
int
sbb
pop
out
loope
je
gs
jmp
lods
lds
out
test
cmp
(bad)
pop
cmp
in
jo
lock
int
sbb
int
sbb
pop
out
loope
je
sbb
pop
cmp
sbb
test
out
fnstenv
out
sbb
adc
cmp
je
cmp
xchg
mov
pop
fcomip
push
int
sbb
pop
out
loope
out
(bad)
jnp
xchg
movs
out
in
outs
data16
cmp
in
imul
out
jno
jo
push
pop
sbb
dec
pop
cmp
sub
mov
or
repz
es
sbb
pop
out
loope
add
out
push
mov
pop
cmp
icebp
add
mov
fwait
std
sahf
nop
call
icebp
jno
out
dec
icebp
call
xor
loopne
ret
mov
jle
pop
cmp
in
jo
lock
sbb
int3
sbb
add
mov
out
(bad)
jnp
out
lds
out
fs
sbb
or
pop
sbb
aaa
adc
cmp
jecxz
inc
popf
jno
fxch
sbb
mov
out
data16
mov
sub
pop
fbstp
push
pop
sbb
sti
or
out
fidiv
out
sbb
lock
sbb
or
pop
sbb
aaa
adc
cmp
jecxz
inc
popf
jno
out
sbb
mov
out
fs
cmp
and
mov
or
repz
outs
pop
sbb
cmp
out
jno
inc
jnp
sbb
jnp
sbb
mov
mov
mov
cmp
jp
cmp
xchg
movs
lds
out
out
(bad)
jnp
dec
lock
iret
sbb
mov
scas
sbb
mov
or
out
rol
sbb
cmp
sbb
jno
sbb
mov
out
gs
mov
lea
mov
std
bound
(bad)
lea
(bad)
mov
xchg
shl
sbb
mov
jns
pop
loope
and
cmc
fdiv
sti
(bad)
lea
out
pop
call
mov
out
out
(bad)
jnp
xchg
movs
cmp
jo
cmp
xor
mov
(bad)
mov
mov
faddp
or
out
jno
movs
stc
jno
out
mov
sbb
or
out
jno
lods
int
out
(bad)
sti
add
(bad)
ficom
out
out
(bad)
jnp
dec
lock
sbb
mov
into
sbb
add
mov
out
(bad)
jnp
out
lds
out
nop
pop
sbb
or
pop
sbb
aaa
adc
cmp
jecxz
inc
popf
jno
out
sbb
mov
out
data16
cmp
jmp
lock
into
sbb
add
mov
out
clc
jnp
out
lds
out
inc
pop
sbb
or
fucom
les
sbb
mov
popf
int
out
mov
loope
(bad)
jno
popf
std
jno
out
or
out
jno
popf
aad
in
mov
out
(bad)
mov
(bad)
les
(bad)
cmc
sbb
cmp
loope
(bad)
jno
push
cmp
sbb
(bad)
mov
pushf
add
jle
call
and
mov
popf
shl
ss
xchg
popf
shl
mov
cmc
out
jno
ins
sub
mov
imul
fdiv
jae
fwait
icebp
jno
cwde
add
pop
fidivr
xor
out
jno
call
mov
sbb
(bad)
jno
pop
mov
(bad)
les
pushf
cmp
out
(bad)
fdivp
cmp
mov
xchg
mov
fdivp
test
std
mov
out
cmp
out
jno
ins
and
call
mov
fidiv
out
sbb
sub
sbb
or
sbb
aaa
adc
cmp
jecxz
inc
popf
jno
out
sbb
mov
out
mov
mov
sbb
pop
fcomip
bound
sbb
cmp
out
loope
je
gs
rol
jnp
out
lds
out
hlt
sbb
or
sbb
aaa
adc
cmp
jecxz
inc
popf
jno
fxch
sbb
mov
out
dec
daa
cmp
lods
call
cli
mov
sbb
mov
popf
int
out
mov
sbb
(bad)
jno
out
jbe
out
(bad)
xor
jno
fwait
std
adc
xor
popf
stos
jo
out
mov
pop
cmp
in
jo
lock
sbb
mov
sbb
pop
out
loope
je
gs
inc
(bad)
jnp
out
lds
out
ins
daa
sbb
or
daa
sbb
aaa
adc
cmp
jecxz
inc
popf
jno
out
sbb
mov
out
data16
cmp
jmp
fadd
jae
xchg
jmp
cmp
sbb
cmp
or
outs
pop
sbb
cmp
out
jno
xchg
pop
mov
fwait
std
xchg
out
sbb
mov
out
pushaw
cmp
sub
cmp
sbb
cmp
cmp
sbb
sbb
cmp
out
loope
add
out
push
mov
pop
cmp
icebp
cmp
mov
fwait
std
sahf
icebp
sbb
mov
mov
mov
mov
rol
pop
cmp
in
jo
lock
sbb
xchg
xor
cmp
and
cmp
call
push
pop
sbb
cmp
out
jno
in
add
sbb
add
sbb
mov
mov
jle
pop
cmp
in
jo
lock
adc
mov
sbb
add
mov
pushaw
and
cmp
dec
xchg
test
out
fnstenv
out
sbb
clc
and
cmp
(bad)
pop
cmp
in
jo
lock
dec
adc
jmp
and
cmp
call
outs
pop
sbb
cmp
out
jno
inc
add
sbb
out
sbb
mov
out
push
and
xor
and
cmp
call
outs
pop
sbb
cmp
out
jno
cmp
mov
fwait
std
xchg
out
sbb
mov
out
data16
xor
out
push
das
mov
lock
mov
sbb
pop
out
loope
je
gs
jmp
lods
lds
out
push
fst
mov
(bad)
out
jno
xchg
mov
fidiv
out
sbb
sub
or
or
sbb
mov
sbb
fxch
sbb
mov
out
mov
mov
(bad)
jnp
out
lds
out
sbb
sbb
or
and
sbb
mov
sbb
fxch
sbb
mov
out
data16
cmp
outs
arpl
mov
(bad)
mov
(bad)
les
(bad)
xchg
and
sbb
mov
cdq
(bad)
sahf
sbb
fst
out
out
lds
dec
lock
sbb
mov
sbb
pop
out
loope
je
gs
jmp
lods
lds
out
and
push
push
les
jno
in
jo
lock
sbb
mov
sbb
pop
out
loope
je
gs
jmp
lods
lds
out
pop
and
cmp
push
cmp
sbb
mov
mov
hlt
and
cmp
jp
cmp
xchg
movs
lds
out
out
(bad)
jnp
dec
lock
mov
sbb
push
pop
sbb
cmp
out
jno
nop
add
jae
push
mov
push
mov
push
mov
sbb
ins
adc
mov
sbb
pop
pushf
lock
jae
cdq
call
sbb
jno
in
jo
lock
mov
outs
fsubp
lods
lds
out
cmp
out
jno
js
mov
out
data16
(bad)
data16
cmp
out
shr
sbb
pop
jmp
dec
rcr
sbb
add
out
addr16
fld
cdq
aad
sbb
cmp
cmps
push
cmp
(bad)
xchg
mov
pop
(bad)
jl
sbb
add
jno
in
sbb
(bad)
fdivp
lods
add
loope
(bad)
in
jo
push
pop
sbb
dec
jo
mov
cwde
sar
out
or
out
mov
out
cmp
cmps
jb
out
lds
jno
in
sbb
mov
cwde
rcr
out
out
les
jno
in
sbb
push
pop
sbb
sbb
mov
jno
fcomp
psadbw
sbb
dec
dec
xchg
fmul
cmc
mov
mov
dec
outs
fldenv
xchg
sar
test
jno
sbb
(bad)
push
mov
or
mov
(bad)
jno
pop
xor
sbb
mov
xchg
in
jno
loopne
jbe
fisttp
push
xchg
pop
xor
fistp
jb
sbb
mov
adc
mov
mov
lock
mov
gs
jno
lods
cdq
jae
out
test
sbb
add
gs
jno
dec
xor
pop
xchg
lods
push
in
mov
sbb
pop
fimul
mov
sbb
pop
pushf
pusha
les
out
cs
(bad)
callw
mov
out
cmp
clc
jle
xchg
xchg
inc
jae
out
ficom
sbb
(bad)
jno
dec
xor
pop
xchg
lods
push
in
(bad)
pmaxsw
mov
jo
pop
pop
sbb
xor
cmp
pushf
mov
jno
cdq
into
bound
cmp
or
add
ror
sub
push
mov
sbb
sbb
cmp
pushf
lods
les
dec
push
and
pop
cmp
lods
les
jno
cmp
out
mov
sti
adc
shr
sub
cmp
sbb
rol
sbb
popf
lds
out
add
shr
sub
mov
jno
out
push
in
(bad)
jno
xchg
les
out
push
in
(bad)
jno
add
out
mov
in
(bad)
fcom
imul
fcomp
pop
pushf
test
jno
adc
sti
adc
shl
fyl2x
iret
(bad)
sbb
push
lds
add
shl
sbb
pop
loope
rol
xchg
mov
ficom
imul
jmp
mov
in
jb
add
rcr
fld
jbe
loopne
dec
ficomp
jge
sbb
dec
std
out
jno
sbb
mov
mov
mov
fwait
test
in
(bad)
mov
pop
dec
pushf
lock
jno
sbb
pmaxub
js
sbb
(bad)
fdivp
or
jno
inc
mov
mov
xchg
mov
fidiv
push
mov
push
mov
push
mov
imul
sbb
xor
pushf
loopne
sbb
(bad)
cmp
mov
shl
mov
jno
jo
push
pop
sbb
lds
add
shl
sbb
or
push
(bad)
jno
repz
pmaxsw
mov
xchg
mov
fidiv
in
sbb
sbb
adc
dec
xchg
jno
cmp
sbb
mov
jno
xchg
mov
mov
push
xchg
ins
ins
out
pusha
cmp
sbb
(bad)
mov
push
mov
sbb
data16
mov
cmp
out
(bad)
fimul
mov
jno
in
sbb
(bad)
fdivp
pop
test
fwait
std
and
mov
ins
sbb
mov
sbb
xchg
call
pmaxub
pop
mov
repz
mov
sbb
mov
imul
(bad)
daa
mov
out
fiadd
pushf
push
(bad)
fdiv
push
cmp
mov
cli
mov
mov
mov
mov
gs
mov
into
imul
inc
bound
sbb
fist
dec
outs
fst
push
cmp
nop
loopne
jbe
ffreep
sti
adc
idiv
jg
ins
jo
loopne
jbe
ffreep
sti
adc
sbb
jb
ins
sub
sub
mov
out
push
mov
ficomp
dec
in
cmp
cmp
pop
push
scas
ins
js
enter
in
mov
or
imul
sbb
mov
cwde
imul
sbb
or
gs
pop
pop
call
mov
add
jle
dec
shl
sbb
or
adc
imul
ins
xor
add
cmp
dec
lock
mov
xor
mov
out
sub
pop
push
cmp
scas
dec
lds
pop
or
fdivp
adc
mov
dec
cmp
retf
cmp
pop
push
scas
ins
js
pop
sub
sbb
mov
loope
push
mov
fcmovu
pop
sbb
jae
shl
cmp
fistp
cmp
out
shr
sbb
add
fdiv
sub
mov
dec
rcl
sub
cmp
inc
sar
fist
sbb
cbw
sub
mov
outs
add
pop
add
pop
loope
rol
mov
into
imul
popf
test
out
xchg
sbb
mov
movs
clc
(bad)
jno
xchg
mov
fidiv
in
sbb
cli
mov
adc
or
out
jl
sbb
push
lods
(bad)
jno
lock
sbb
mov
sti
push
out
inc
stc
out
jno
adc
mov
loope
fiadd
pushf
lods
fnstenv
xchg
(bad)
mov
ficomp
jns
sbb
mov
movs
clc
(bad)
jno
xchg
mov
fimul
push
mov
ins
sub
jbe
loopne
dec
dec
out
dec
stc
out
data16
cmp
fldcw
jno
rcr
jno
out
xor
push
mov
sub
into
repnz
mov
mov
dec
inc
inc
bound
dec
mov
mov
lock
mov
dec
xchg
xchg
cdq
jmp
jmp
dec
push
mov
sbb
inc
sub
mov
pop
mov
ja
fist
nop
ret
dec
lock
out
mov
push
pop
sbb
pop
sub
mov
(bad)
push
mov
xchg
leave
cmps
jmp
(bad)
jnp
xchg
popf
cmp
out
data16
mov
sub
mov
or
repz
sbb
dec
lock
mov
adc
cmp
sbb
pop
out
loope
je
adc
sub
mov
or
mov
out
fnstenv
in
sbb
(bad)
fyl2x
mov
std
sahf
icebp
cwde
or
sbb
mov
mov
jle
pop
cmp
pushf
sbb
jno
dec
rcl
sub
cmp
xor
mov
jno
out
sbb
(bad)
fdivp
pushf
or
icebp
pop
or
sbb
mov
mov
jle
pop
cmp
pushf
sbb
jno
dec
rcl
sub
cmp
sub
cmp
adc
cmp
jecxz
inc
cmps
icebp
adc
mov
mov
mov
xor
clc
(bad)
jno
jo
push
pop
sbb
dec
lock
mov
or
dec
sahf
jno
out
sbb
(bad)
fidiv
out
sbb
(bad)
fdivp
les
mov
fwait
std
call
int
out
mov
icebp
test
mov
mov
mov
mov
jle
pop
cmp
pushf
sbb
jno
dec
rol
sbb
or
(bad)
pop
cmp
pushf
sbb
jno
dec
shl
sbb
or
sub
cmp
adc
cmp
jecxz
inc
call
mov
fdivp
mov
mov
fwait
std
xchg
out
sbb
(bad)
fdivp
cwde
or
nop
call
leave
push
out
mov
icebp
sub
mov
mov
mov
mov
nop
sub
cmp
jp
cmp
xchg
movs
cmp
out
out
les
xchg
movs
cmp
out
data16
cmp
xor
jnp
xchg
popf
cmp
out
data16
cmp
clc
sub
mov
or
repz
sbb
dec
lock
mov
adc
push
pop
sbb
dec
lock
adc
jmp
sub
mov
or
repz
sbb
dec
lock
adc
push
pop
sbb
dec
lock
mov
adc
pop
mov
sbb
cmp
out
loope
je
gs
mov
imul
fdiv
pxor
dec
adc
out
les
xchg
popf
cmp
out
data16
cmp
add
cmp
sbb
cmp
or
sbb
dec
lock
adc
push
pop
sbb
dec
lock
mov
adc
fidivr
sbb
cmp
out
loope
je
gs
mov
imul
fdiv
ss
mov
(bad)
mov
cmc
mov
and
sbb
aaa
icebp
sbb
mov
cdq
(bad)
sahf
sbb
fst
outs
out
les
xchg
movs
cmp
out
data16
cmp
sub
mov
or
repz
sbb
dec
lock
dec
adc
push
pop
sbb
dec
lock
dec
adc
cmp
sub
mov
or
repz
sbb
dec
lock
adc
cs
sbb
cmp
out
loope
je
adc
sub
mov
or
mov
out
fnstenv
in
sbb
(bad)
fyl2x
in
mov
fwait
std
sahf
jno
in
sbb
(bad)
fdivp
adc
mov
fwait
std
xchg
push
mov
push
mov
push
mov
sbb
icebp
nop
adc
jb
out
pandn
mov
xchg
mov
fdivp
adc
mov
jb
add
imul
out
(bad)
cmp
mov
mov
out
jb
out
xor
mov
fdivr
pop
xchg
leave
cmps
jmp
inc
lock
dec
xchg
fmul
cmc
pushf
cmp
fldenv
xchg
sar
mov
pop
ficomp
(bad)
mov
out
mov
mov
mov
ins
xchg
lods
jae
out
jbe
push
jno
(bad)
les
sbb
fdivp
sub
mov
lock
out
dec
enter
jno
out
int3
sbb
dec
movs
sbb
mov
mov
or
xchg
popf
popf
jae
out
data16
cmp
sbb
(bad)
fidiv
in
sbb
push
pop
sbb
sbb
mov
jno
fcomp
and
sbb
out
sbb
mov
imul
out
shl
sbb
pop
fsubp
mov
in
(bad)
fst
imul
fdiv
call
sbb
out
les
xchg
popf
lds
out
data16
cmp
out
imul
out
rcr
aaa
sbb
out
std
(bad)
jno
popf
mov
jbe
loopne
dec
jae
push
mov
imul
fsub
mov
fistp
sbb
cmp
cld
(bad)
jno
sbb
mov
fwait
test
in
(bad)
mov
pop
dec
pushf
lock
jno
sbb
pmaxub
mov
xchg
mov
fdivp
add
jno
inc
mov
mov
xchg
mov
fidiv
push
mov
push
mov
push
mov
imul
sbb
xor
pushf
mov
cmp
fcom
mov
xchg
ror
mov
sub
sbb
lds
add
sar
sbb
or
data16
jno
repz
pmaxub
mov
xchg
mov
fidiv
in
sbb
adc
adc
dec
xchg
jno
cmp
sbb
mov
jno
xchg
mov
mov
push
xchg
pop
mov
out
call
adc
loope
(bad)
out
sbb
mov
imul
sbb
out
les
xchg
popf
test
dec
stos
(bad)
jno
fdiv
mov
pushf
dec
xchg
jecxz
jno
dec
sar
out
out
or
push
pushf
xchg
mov
sbb
out
lods
jae
out
or
lock
sbb
mov
mov
imul
lock
out
mov
out
lods
jae
out
les
sbb
out
les
icebp
add
mov
dec
push
test
pop
cmp
icebp
loopne
mov
fwait
std
call
in
sbb
(bad)
cmps
sbb
mov
test
(bad)
jno
repz
nop
fstp
jge
out
sbb
out
data16
rol
call
adc
out
or
out
lods
jae
out
xchg
shl
or
cld
jae
mov
cmps
sbb
dec
test
(bad)
jno
sbb
mov
imul
loopne
jbe
fist
out
popf
jae
out
mov
sbb
jno
mov
cmps
sbb
mov
test
(bad)
jno
push
mov
mov
bound
sbb
fist
dec
outs
fst
jge
out
cwde
ffreep
fcomp
sbb
dec
xor
mov
adc
les
sbb
add
sbb
imul
lock
cmps
sbb
mov
dec
dec
shr
ficom
mov
push
(bad)
cmp
mov
out
adc
test
inc
cmp
jae
outs
out
inc
jns
jae
push
mov
or
mov
xchg
jmp
out
shl
xor
cmp
loope
fiadd
pop
call
(bad)
lock
sbb
outs
data16
cmp
inc
inc
lock
dec
xchg
fdiv
sbb
cmp
sbb
xor
dec
test
fbstp
mov
out
xor
xor
mov
loopne
dec
adc
dec
mov
fcom
int
out
mov
xchg
mov
fimul
fisub
out
xor
jno
dec
ror
test
(bad)
or
out
cmp
sbb
cdq
into
nop
jg
cmp
sbb
and
sbb
pop
fcomip
xchg
rol
cli
fist
dec
xchg
pop
(bad)
daa
pmaxsw
dec
out
cmp
pop
mov
out
push
mov
pop
cmp
pop
in
imul
out
pop
xlat
sbb
mov
in
dec
push
mov
cmp
mov
xor
mov
scas
jl
call
int3
sbb
cmps
movs
sbb
mov
jp
jb
out
sbb
mov
sub
shl
cmp
out
mov
inc
sar
fist
dec
outs
xor
and
mov
out
fild
pop
in
dec
jae
push
mov
push
mov
push
(bad)
jae
push
mov
push
push
sbb
cmp
sbb
in
jb
data16
cmp
adc
cmp
xchg
jl
nop
ficom
dec
jb
jno
pushf
cwde
int3
sbb
mov
sbb
push
(bad)
dec
jb
jno
lock
iret
sbb
inc
cmps
sbb
push
(bad)
dec
jb
jno
cwde
cwde
int3
sbb
push
cmps
sbb
push
(bad)
dec
jb
jno
xor
iret
sbb
data16
sbb
push
(bad)
dec
jb
jno
add
into
sbb
jbe
sbb
mov
mov
outs
in
out
cmps
xchg
data16
cmp
sub
or
xchg
data16
cmp
sub
or
mov
xor
mov
outs
in
out
cli
mov
xor
mov
ficom
dec
jb
jno
sub
test
dec
jb
jno
call
fisubr
dec
jb
jno
mov
test
dec
jb
jno
sbb
sbb
cmp
call
data16
fld
fiadd
movs
lock
out
imul
rcl
pop
sbb
enter
sub
jno
mov
jno
lock
iret
sbb
add
out
mov
lods
sbb
sub
jno
mov
jno
cwde
cwde
int3
sbb
cs
pop
adc
mov
(bad)
mov
icebp
loopne
mov
mov
push
sahf
sahf
pop
cmp
in
or
xchg
data16
cmp
add
int3
pop
mov
mov
push
sahf
sahf
pop
cmp
in
or
mov
data16
cmp
xor
pop
mov
mov
push
sahf
sahf
pop
cmp
in
or
xchg
mov
mov
(bad)
mov
icebp
xchg
pop
mov
mov
push
sahf
sahf
pop
cmp
in
or
xchg
cbw
cmp
nop
fist
out
mov
in
aas
sbb
sub
jno
mov
jno
pushf
cwde
int3
sbb
outs
test
sbb
dec
xchg
fmul
cmps
in
inc
sbb
(bad)
push
cmp
cmp
in
ret
jnp
out
xor
in
jno
ficom
ret
fdiv
fwait
lds
fwait
std
sahf
mov
jb
fdivp
pusha
pop
mov
cdq
into
retf
cmp
pop
call
sbb
sbb
jno
sub
iret
sbb
fcom
in
imul
jae
push
mov
cwde
imul
jno
loop
sbb
mov
sbb
mov
sbb
sub
jae
(bad)
mov
jae
imul
xor
or
or
sbb
int3
sbb
push
pop
sbb
icebp
adc
mov
mov
mov
xor
mov
jae
(bad)
mov
jae
(bad)
mov
jno
cmp
xor
or
dec
jb
out
sbb
int3
sbb
push
pop
sbb
icebp
fcomp
sbb
push
mov
push
mov
push
mov
push
mov
push
mov
cmp
sbb
in
lock
sbb
in
out
mov
cmp
(bad)
mov
jae
(bad)
mov
jae
push
mov
jge
adc
sbb
cmp
jno
loop
sbb
push
pop
sbb
icebp
inc
sbb
sbb
mov
mov
(bad)
mov
jae
(bad)
mov
jae
push
lods
sbb
cmp
popa
jb
out
sbb
fidiv
loop
sbb
push
pop
sbb
icebp
add
mov
mov
push
mov
sub
push
mov
sub
push
sahf
jno
cmp
sbb
push
cmps
jno
cmp
pop
sbb
ret
in
lock
xchg
in
out
mov
sbb
or
mov
jo
(bad)
sbb
push
xor
sbb
in
jo
mov
dec
push
add
pop
cmp
ret
ret
jnp
jae
shl
xchg
jae
(bad)
mov
jae
(bad)
mov
jae
push
jmp
sub
fidiv
out
sbb
push
pop
sbb
icebp
ins
sbb
adc
mov
mov
jecxz
sbb
out
sbb
mov
or
ret
pop
cmp
sbb
(bad)
sbb
(bad)
mov
icebp
add
mov
jb
jno
sub
iret
sbb
jno
js
int3
sbb
(bad)
sbb
push
mov
sbb
out
sbb
int3
sbb
push
pop
sbb
icebp
adc
mov
mov
mov
mov
(bad)
mov
jae
(bad)
mov
jno
cmp
mov
cmp
sbb
mov
pop
cmp
pushf
ret
jae
rol
cmp
icebp
xor
jno
jb
jno
sub
iret
sbb
jno
pop
cdq
iret
sbb
in
jo
mov
sbb
sbb
cmp
sbb
cmp
jno
jecxz
sbb
push
pop
sbb
icebp
xchg
sbb
pop
sbb
retf
cmc
xchg
(bad)
in
out
mov
sbb
or
mov
jo
mov
sbb
sbb
cmp
or
sbb
mov
push
pop
sbb
ret
in
lock
sbb
call
out
mov
sbb
or
mov
jb
out
sbb
mov
cmp
sbb
int3
ret
pop
cmp
ret
ret
jnp
jae
rol
sub
(bad)
mov
jae
(bad)
mov
jae
push
jae
sbb
out
sbb
mov
push
mov
sbb
or
jnp
jno
loop
sbb
data16
cmp
mov
jb
jno
sub
iret
sbb
jno
pop
cdq
iret
sbb
in
jo
(bad)
sbb
push
sbb
cmp
sbb
cmp
jno
jecxz
sbb
push
pop
sbb
icebp
test
mov
mov
push
mov
sub
push
mov
sub
push
xchg
jno
cmp
sbb
push
call
in
pop
sbb
ret
pop
cmp
sbb
cmp
sbb
push
mov
sub
push
mov
sub
push
xchg
jno
cmp
sbb
push
call
test
pop
pop
cmp
sbb
cmp
sbb
mov
xor
mov
jae
(bad)
mov
jae
(bad)
mov
jae
push
cmps
jno
cmp
sbb
mov
int3
sbb
push
pop
sbb
sbb
cmp
cmp
mov
jb
jno
sub
iret
sbb
jno
js
int3
sbb
in
jo
mov
sbb
jno
cmp
dec
jo
push
pop
sbb
ret
pop
cmp
sbb
cmp
sbb
push
mov
sub
push
mov
sub
push
cdq
jno
cmp
sbb
push
nop
jno
cmp
dec
jo
push
pop
sbb
rcr
sbb
dec
scas
sbb
call
loopne
jno
loopne
jbe
(bad)
or
out
rol
cli
fist
dec
outs
xor
jb
xchg
nop
loopne
jbe
fist
ret
jno
adc
cmps
out
out
pop
fbstp
push
pop
sbb
add
fsubr
sub
nop
loopne
jbe
fist
out
xor
pop
sbb
mov
sbb
add
fdiv
sbb
mov
jb
jno
sub
iret
sbb
fcom
in
imul
jae
push
mov
cwde
imul
jno
loop
sbb
mov
sbb
pop
cmp
cmp
jae
(bad)
mov
jae
imul
xor
or
or
sbb
int3
sbb
push
pop
sbb
icebp
test
mov
mov
mov
mov
(bad)
mov
jae
(bad)
mov
jno
cmp
xor
or
dec
jb
out
sbb
int3
sbb
push
pop
sbb
icebp
inc
sbb
pop
sbb
jae
push
mov
push
mov
push
mov
push
mov
cmp
sbb
in
lock
dec
jae
outs
in
out
mov
pop
cmp
sub
sbb
mov
jae
push
jmp
cmp
dec
jo
push
pop
sbb
ret
pop
cmp
sbb
(bad)
xchg
sbb
call
add
mov
jo
push
pop
sbb
jno
cmp
push
sbb
out
ret
jae
push
int
sbb
jno
lock
iret
sbb
scas
xchg
sbb
mov
mov
jb
out
sbb
mov
sub
shl
push
sbb
gs
jo
(bad)
sbb
(bad)
mov
icebp
jl
mov
jb
jno
sub
iret
sbb
jno
js
int3
sbb
(bad)
sbb
push
mov
jno
cmp
dec
jo
push
pop
sbb
ret
pop
cmp
sbb
outs
xchg
sbb
call
sbb
pop
fidiv
jno
sub
iret
sbb
jno
js
int3
sbb
(bad)
sbb
push
mov
or
and
sbb
out
sbb
int3
sbb
push
pop
sbb
icebp
add
mov
mov
shl
in
out
in
out
mov
sbb
or
mov
jo
mov
sbb
jno
cmp
sbb
ffree
pop
cmp
ret
ret
jnp
jae
rcl
cmp
jae
(bad)
mov
jae
(bad)
mov
jae
push
jmp
sbb
mov
sbb
sbb
imul
jno
loop
sbb
mov
mov
mov
into
imul
sub
iret
sbb
jno
pop
cdq
iret
sbb
out
sbb
mov
cmp
sbb
cmp
jno
jecxz
sbb
push
pop
sbb
icebp
inc
daa
mov
mov
push
mov
sub
push
mov
sub
push
sahf
jae
push
aaa
sbb
cmp
mov
sbb
mov
aas
push
pop
sbb
ret
in
lock
mov
out
mov
sbb
or
mov
jo
(bad)
sbb
push
push
pop
jo
mov
dec
push
lock
ret
ret
jnp
jae
shl
cmp
jae
(bad)
mov
jae
(bad)
mov
jae
push
jae
sbb
out
sbb
mov
push
mov
sbb
dec
sar
ret
sbb
data16
cmp
sbb
jno
sub
iret
sbb
jno
js
int3
sbb
out
sbb
mov
push
call
test
pop
pop
cmp
sbb
cmp
sbb
mov
mov
(bad)
mov
jae
(bad)
mov
jae
push
cmps
jae
push
call
in
pop
sbb
ret
pop
cmp
sbb
cmp
sbb
push
mov
sub
push
mov
sub
push
xchg
jae
push
shl
push
mov
cwde
imul
jno
jecxz
sbb
mov
sbb
mov
cmp
jae
(bad)
mov
jae
(bad)
mov
jae
push
adc
pop
sbb
mov
push
mov
cwde
imul
jno
loopne
sbb
data16
cmp
sbb
mov
out
push
dec
sbb
jns
xchg
jl
nop
(bad)
push
in
out
rol
cli
fist
dec
outs
fldenv
xchg
sar
jl
nop
fist
jno
cmp
sbb
out
sbb
push
out
xor
add
mov
pop
mov
in
dec
rcl
sbb
pop
fimul
cmp
sbb
or
pop
in
cmp
jbe
push
add
add
add
jno
or
lods
pop
cmp
sbb
cmp
icebp
push
call
inc
vdivpd
jno
in
fadd
pop
cmp
dec
sar
ins
xor
push
jmp
(bad)
or
loope
stc
cli
cmp
in
xchg
jl
dec
out
sahf
jno
(bad)
int3
sbb
mov
cwde
shl
mov
add
dec
inc
inc
bound
dec
mov
cwde
hlt
xor
cmps
scas
pop
nop
jge
leave
(bad)
maskmovq
imul
fwait
ds
sbb
dec
lock
sbb
shl
cmp
push
sbb
mov
nop
fs
gs
(bad)
ins
or
test
sbb
jno
dec
sar
jmp
cwde
inc
jno
ins
sub
shr
jno
out
data16
cmp
ins
or
test
sbb
jno
dec
ror
out
sti
or
aas
pop
sbb
dec
lock
sbb
mov
cdq
gs
mov
mov
pushf
sbb
jno
dec
rol
sbb
push
fs
sti
or
aas
pop
sbb
dec
lock
out
dec
lahf
jno
mov
sbb
(bad)
fdivp
mov
inc
jno
ins
sub
call
jno
out
xchg
(bad)
mov
fidivr
lahf
jno
mov
sbb
(bad)
fdivp
je
mov
cwde
inc
jno
ins
sub
(bad)
test
cmp
out
dec
(bad)
mov
or
stos
pop
cmp
pushf
sbb
jno
dec
shl
fs
sti
or
cmp
sbb
dec
lock
cdq
sbb
mov
lahf
jno
mov
sbb
(bad)
fdivp
or
mov
xchg
leave
jns
xchg
mov
pop
fistp
sub
dec
stos
jnp
xchg
popf
cmp
out
data16
push
cmp
jno
loopne
sbb
push
pop
sbb
dec
jo
adc
shl
out
out
sar
cmps
mov
sbb
adc
rcl
in
(bad)
out
aas
xor
sbb
into
push
out
mov
lock
jno
inc
bound
sbb
fist
xchg
dec
xchg
xchg
shl
dec
ror
add
cmp
inc
push
cmp
dec
lock
out
dec
adc
stc
cli
adc
fyl2x
dec
and
inc
fidivr
pmaddwd
xor
cmps
push
add
daa
cdq
iret
sti
jne
cmp
idiv
add
pop
sbb
dec
lock
add
cmp
push
sbb
mov
jmp
jno
cwde
test
out
(bad)
ins
or
stos
pop
cmp
pushf
cmc
into
jno
dec
shl
sbb
push
movs
jmp
jno
sbb
fimul
arpl
out
fdivp
cld
sub
sbb
(bad)
lea
imul
dec
rol
cmp
mov
(bad)
mov
std
out
(bad)
jno
fidivr
jno
ins
sub
sbb
aam
out
imul
movs
retf
out
sti
or
cmp
hlt
out
(bad)
jno
lock
xor
loopne
jno
ins
sub
sub
popf
aam
out
imul
movs
retf
out
sti
or
cmp
hlt
out
(bad)
jno
lock
sbb
mov
sbb
mov
cdq
movs
retf
out
sti
or
cmp
hlt
out
(bad)
jno
lock
jmp
out
stos
jnp
xchg
popf
aam
out
imul
movs
retf
out
sti
or
cmp
hlt
out
(bad)
jno
lock
call
(bad)
jno
ins
sub
shr
aam
out
imul
call
fnstcw
out
dec
cdq
movs
retf
out
sti
or
cmp
hlt
out
(bad)
jno
lock
jmp
out
lods
jnp
xchg
popf
aam
out
imul
movs
retf
out
sti
or
cmp
mov
hlt
out
(bad)
jno
lock
sbb
push
(bad)
mov
cmc
into
jno
dec
rcr
jmp
(bad)
into
jno
xchg
jmp
imul
shl
mov
data16
out
push
movs
jmp
jno
sub
call
sbb
sbb
pop
jmp
ror
out
jmp
ret
out
mov
cli
jno
fwait
std
xchg
out
dec
push
popf
loop
sbb
ror
movs
in
jno
sbb
or
sbb
mov
out
sbb
(bad)
mov
popf
pop
(bad)
sbb
dec
out
(bad)
jno
mov
into
push
out
mov
xchg
popf
shl
imul
xchg
popf
lds
out
cbw
add
mov
loopne
jno
sbb
icebp
pop
and
add
pop
fsubr
ror
pop
clc
ja
xor
pop
leave
inc
mov
pop
and
sahf
push
cmp
test
mov
push
mov
sar
popf
lds
out
data16
cmp
nop
ficom
mov
sar
popf
lds
out
data16
cmp
push
jo
mov
sbb
dec
lock
inc
sbb
jns
xchg
mov
pop
fist
(bad)
fidiv
loopne
sbb
(bad)
fdivp
movs
mov
jo
push
pop
sbb
dec
lock
or
out
fdivp
or
mov
xchg
mov
or
pushf
in
jno
dec
push
je
pop
cmp
pushf
in
jno
dec
shl
push
sbb
or
xchg
popf
lds
out
mov
mov
push
jp
pop
cmp
pushf
in
jno
dec
shl
test
(bad)
or
push
popf
pop
(bad)
sbb
mov
in
(bad)
jno
fdivr
icebp
les
mov
inc
mov
loope
(bad)
jno
call
jmp
dec
call
sbb
out
out
mov
loope
sbb
(bad)
fdivp
sbb
mov
fwait
std
sahf
jno
mov
sbb
(bad)
fdivp
sub
mov
xchg
mov
fdivp
sub
mov
xchg
mov
gs
xchg
mov
push
movs
sbb
push
sti
or
(bad)
dec
popf
sbb
cmp
out
pop
out
out
or
out
dec
pop
nop
call
cmc
jns
out
dec
out
shl
mov
in
(bad)
jno
jo
push
pop
sbb
dec
lock
cwde
sbb
mov
jb
out
fdivp
fsubr
mov
xchg
mov
add
sar
sbb
add
out
inc
mov
dec
push
into
icebp
clc
sub
loope
(bad)
pxor
mov
fsubp
lods
int
out
sar
or
cmp
pushf
in
jno
dec
sar
or
cmp
movs
in
jno
dec
mov
in
loopne
jno
fs
dec
lock
sbb
mov
loope
(bad)
jno
jb
jno
in
shl
(bad)
pop
sbb
jae
rcl
or
cmp
icebp
int3
sub
in
(bad)
fimul
mov
out
data16
(bad)
jno
fdiv
sbb
(bad)
inc
or
mov
sbb
outs
add
data16
cmp
out
data16
sti
mov
dec
mov
mov
lock
mov
mov
sub
mov
jno
mov
sbb
out
sbb
mov
cmp
mov
xchg
mov
xchg
ins
sub
mov
jb
data16
rcl
and
cmp
xchg
dec
sbb
movs
iret
sbb
jns
xchg
mov
pop
fidiv
adc
shr
or
cmp
out
cmp
sbb
sbb
or
cmp
icebp
cmp
sbb
cmp
sbb
popf
mov
out
jno
adc
inc
or
cmp
sbb
das
pop
sbb
dec
lock
or
or
sbb
mov
sbb
pop
cmp
(bad)
int3
sbb
cmp
lods
pop
cmp
fidivr
sbb
call
jp
fist
loop
dec
loopne
adc
pusha
pop
ficomp
mov
mov
popf
mov
out
gs
lock
call
aam
out
jmp
out
ror
pop
clc
ja
xor
pop
leave
inc
mov
call
mov
cmc
(bad)
jno
popf
mov
out
add
stos
aam
out
xor
fstp
cmp
mov
jno
sbb
test
sbb
pop
fucomi
sti
(bad)
ins
push
dec
mov
(bad)
jno
fidivr
xchg
popf
call
mov
loope
sbb
(bad)
fdivp
adc
mov
cdq
retf
sbb
in
xchg
mov
ficom
imul
popf
cmps
(bad)
out
imul
popf
call
ffreep
jno
fsub
in
xchg
mov
fdivp
sbb
mov
jb
data16
cmp
sbb
push
xor
pop
cmp
mov
loope
sbb
adc
shr
sbb
add
or
iret
pop
cmp
cmp
cmp
lods
sar
mov
push
pop
sbb
mov
or
mov
(bad)
xchg
sub
adc
mov
cmp
mov
loope
sbb
push
pop
sbb
int3
or
cmp
movs
cli
aam
out
or
iret
pop
cmp
cmp
cmp
mov
mov
push
pop
sbb
xchg
data16
cmp
movs
cmps
aam
out
or
iret
pop
cmp
adc
cmp
xor
mov
jae
push
mov
push
mov
push
mov
sbb
sbb
mov
xchg
jl
jae
push
mov
imul
pop
xor
mov
(bad)
jno
dec
rcr
pop
sbb
add
icebp
jno
cwde
add
in
xchg
dec
ss
dec
mov
lods
test
cmp
les
mov
jb
add
in
jo
outs
pop
sbb
sti
lods
lock
pop
pop
cmp
push
sbb
add
add
sar
or
cmp
xchg
lods
(bad)
jno
fwait
icebp
jno
cwde
add
in
xchg
dec
ss
dec
mov
lods
test
cmp
pushf
mov
jb
add
in
jo
outs
pop
sbb
sti
lods
lock
sbb
lock
push
xchg
mov
add
out
cli
add
loop
sbb
cmps
iret
sbb
ret
sbb
icebp
sbb
push
mov
movs
mov
xchg
jl
jno
inc
mov
jb
data16
pop
jmp
mov
fistp
sbb
mov
rcr
sbb
pop
pop
sar
movs
sbb
mov
xchg
loope
rcl
mov
sbb
retf
rcr
cmp
dec
lock
sbb
sub
push
mov
push
mov
push
mov
push
mov
sar
out
ret
jnp
jno
loop
sbb
data16
cmp
sbb
ds
sbb
jae
ror
pop
sbb
in
lock
cmp
sbb
sbb
sbb
mov
push
pop
sbb
xchg
adc
cmp
sar
lock
sbb
mov
mov
(bad)
jno
repz
cdq
sbb
ror
cmp
sbb
sbb
popf
xchg
pusha
out
cmp
push
xor
mov
xchg
popf
and
mov
jno
dec
push
loop
pop
cmp
pusha
sar
dec
(bad)
int3
sbb
mov
cwde
rol
(bad)
out
or
ins
pop
mov
mov
fistp
lods
pop
cmp
lea
adc
(bad)
dec
jb
in
jo
(bad)
pop
sbb
jae
rol
icebp
nop
xor
es
(bad)
fidiv
push
mov
dec
into
sbb
in
lock
sbb
imul
sbb
sbb
cmp
sbb
or
xchg
inc
push
cmp
std
dec
shl
sbb
pminub
jl
dec
lock
jae
push
mov
aaa
mov
adc
sti
int3
inc
addr16
fisubr
mov
pmaddwd
cmp
cmps
add
jmp
mov
push
sbb
cmp
pop
fwait
ror
rol
cmp
push
pushf
dec
mov
sbb
add
add
cmp
sbb
cmp
adc
mov
sbb
sbb
sbb
mov
icebp
daa
fnsave
xchg
mov
pop
loope
rol
jo
push
pop
sbb
cmp
in
jno
cmp
jno
fwait
std
sahf
nop
popf
shl
out
or
in
jno
out
data16
(bad)
data16
or
icebp
jae
out
jno
pop
cdq
iret
sbb
into
sbb
xor
ja
or
in
jno
popf
loope
out
mov
pop
in
(bad)
movs
mov
les
and
sti
push
xchg
mov
movs
pushf
(bad)
les
fwait
ror
out
adc
aad
(bad)
jno
enter
sbb
jno
popf
in
out
imul
in
(bad)
fidiv
push
mov
sub
shl
sbb
pmaxsw
mov
fwait
add
lods
pop
cmp
sbb
cwde
jmp
jnp
cwde
out
or
jge
jnp
sbb
cmp
out
(bad)
jno
cwde
add
lods
pop
cmp
sbb
(bad)
mov
icebp
fbstp
inc
shl
push
sbb
pop
loope
rol
mov
add
adc
mov
in
lock
rcl
push
sbb
das
sbb
xor
adc
dec
xchg
or
mov
mov
into
imul
sub
jl
nop
popf
shl
mov
mov
sbb
dec
retf
dec
das
pop
sbb
and
dec
mov
pop
sbb
and
dec
stos
and
dec
xchg
and
dec
call
dec
and
sub
or
push
cmp
or
fiadd
loope
(bad)
jno
sbb
dec
sahf
and
dec
xchg
sbb
dec
xor
sahf
sbb
dec
sahf
icebp
mov
(bad)
jno
sbb
sti
or
cmps
sbb
and
in
mov
fwait
pushf
push
in
(bad)
mov
out
add
rol
adc
lock
cdq
dec
add
cmp
push
cmp
nop
fist
sbb
cmp
pushf
sbb
jno
dec
(bad)
mov
icebp
hlt
xor
out
(bad)
mov
mov
push
ffree
pop
cmp
sbb
outs
test
sbb
mov
icebp
sbb
mov
icebp
iret
mov
sbb
dec
xchg
popf
cmp
out
or
in
jno
popf
iret
jae
out
push
and
(bad)
int3
sbb
or
out
mov
xchg
mov
fsubp
sub
ror
adc
cmp
xchg
sbb
jno
fwait
icebp
jno
cwde
add
or
jae
push
sar
pop
cmp
test
(bad)
jno
dec
shl
out
or
out
cmp
cmp
in
jo
push
pop
sbb
icebp
shl
mov
out
or
adc
mov
jg
mov
mov
into
imul
popf
cmp
out
add
push
mov
pushf
in
les
dec
ror
or
sbb
cmp
pushf
sbb
jno
dec
(bad)
mov
icebp
hlt
xor
out
(bad)
mov
mov
push
add
cmp
sbb
outs
test
sbb
mov
icebp
sbb
mov
icebp
iret
mov
sbb
call
mov
jbe
ins
sbb
sbb
out
iret
jnp
jae
shr
add
into
sbb
test
sbb
dec
pushf
sbb
jno
sbb
mov
scas
mov
add
sbb
add
mov
cmp
jae
push
imul
lock
add
mov
mov
icebp
mov
or
out
jno
xchg
mov
mov
push
pop
loope
rol
xchg
mov
ficom
imul
xchg
popf
int3
jae
out
data16
cmp
out
cmp
out
imul
lock
out
jno
ins
sbb
sbb
out
iret
jnp
jae
shl
adc
cmp
cwde
cwde
int3
sbb
xchg
sbb
xchg
adc
sbb
(bad)
ficom
imul
xchg
popf
int3
jae
out
data16
cmp
out
cmp
out
imul
lock
xchg
sbb
jno
ins
sbb
sbb
out
iret
jnp
jae
ror
xor
iret
sbb
xchg
xchg
sbb
das
sbb
cmp
loope
rol
xchg
mov
ficom
imul
xchg
popf
int3
jae
out
data16
cmp
out
cmp
out
imul
lock
xchg
sbb
jno
ins
sbb
sbb
out
iret
jnp
jae
rcl
sbb
jno
xor
xchg
sbb
mov
sbb
add
icebp
jno
cwde
add
or
jae
push
mov
out
int3
sbb
data16
cmp
pop
sbb
pushf
adc
cmp
sbb
mov
popf
(bad)
jo
out
gs
(bad)
or
out
jno
pushf
cmp
out
(bad)
mov
fs
in
jb
out
iret
jnp
jae
shr
sub
cmps
iret
sbb
jmp
sbb
push
pushf
out
jno
sbb
jno
sbb
nop
loopne
jbe
fbstp
dec
xchg
mov
fidiv
loope
sbb
(bad)
fdivp
shl
sbb
cmp
out
(bad)
fsubp
sub
ror
push
sbb
push
movs
sbb
jno
sbb
sbb
jno
out
int3
sbb
data16
cmp
pop
sbb
aam
sbb
addr16
sbb
mov
popf
(bad)
jo
out
gs
(bad)
or
out
jno
pushf
cmp
out
(bad)
mov
fs
in
jb
out
into
jnp
jae
shl
push
sbb
jno
cmp
mov
sbb
sbb
cmp
pushf
out
jno
sbb
call
mov
cmp
sti
cld
mov
sar
sbb
jno
dec
mov
in
in
jno
jo
push
pop
sbb
dec
lock
sbb
rcr
sbb
imul
in
jno
fist
jae
push
mov
push
mov
cmp
pop
sbb
sbb
cmp
pushf
in
(bad)
jno
jb
in
jb
jno
in
(bad)
jno
lock
lods
jnp
sbb
add
mov
jno
cwde
add
pop
fidiv
add
push
sub
int
out
rcl
cmp
sbb
(bad)
fidiv
push
jle
pop
cmp
in
(bad)
jno
lock
in
in
jno
rol
into
cdq
and
mov
mov
imul
test
jae
out
jno
in
(bad)
jno
lock
mov
sbb
xchg
popf
leave
jae
out
in
jo
outs
pop
sbb
cmp
out
jno
pusha
cmp
sbb
mov
out
data16
mov
sub
shl
pop
sbb
in
jb
in
jb
in
jo
mov
pop
push
scas
mov
data16
popf
int
out
mov
out
push
jno
popf
fnsave
out
dec
jae
push
mov
(bad)
cmp
out
jno
lods
cmp
push
mov
out
push
and
xchg
cli
in
xchg
lods
jle
out
fmul
test
cmp
out
jno
in
cmp
add
push
(bad)
jno
out
int3
sbb
mov
out
data16
out
int
out
sar
sbb
cmp
je
int3
sbb
cmp
loope
(bad)
in
jb
out
lods
jnp
jno
loope
sbb
cmp
push
(bad)
sbb
mov
jno
fsub
in
out
xchg
sbb
and
pushf
clc
les
xchg
(bad)
gs
dec
call
(bad)
sti
adc
fimul
inc
sar
sahf
sbb
imul
mov
adc
mov
sbb
mov
xchg
pop
xor
mov
popf
call
repz
ss
sbb
mov
sub
dec
test
sub
rcl
sbb
out
fiadd
pop
loopne
dec
and
dec
test
sub
ror
cwde
cwde
int3
sbb
jno
xor
iret
sbb
push
mov
sbb
mov
ins
adc
mov
icebp
inc
cmp
jns
xchg
jl
nop
fild
mov
ins
adc
mov
icebp
pop
cmp
cmps
xchg
sti
adc
or
xchg
data16
cmp
pop
sbb
and
cmp
adc
or
test
data16
mov
sub
dec
xchg
cdq
and
cmp
movntq
mov
sbb
mov
adc
retf
jmp
and
test
sti
pop
xchg
and
mov
mov
cwde
cwde
int3
sbb
add
sbb
or
xchg
sti
pop
xchg
and
xchg
psadbw
mov
and
mov
sti
pop
xchg
and
mov
mov
xor
add
sbb
or
xchg
sti
pop
xchg
and
sbb
sub
cwde
int3
sbb
add
sbb
loop
or
dec
call
outs
(bad)
ins
cmp
pmaxub
and
rcr
sub
jmp
mov
out
sub
cmp
mov
cmp
jmp
mov
out
call
cmp
jmp
mov
out
mov
mov
cmp
jmp
mov
out
mov
mov
cmp
dec
dec
shl
sbb
cmp
ficomp
push
lods
nop
loopne
fdivp
dec
cmp
sbb
lds
ficomp
(bad)
pop
cwde
push
scas
ins
loop
xchg
pop
pop
xchg
call
leave
push
cmps
ds
ins
cmp
loope
dec
jge
sbb
dec
sbb
cmp
sbb
mov
add
out
inc
fiadd
bound
or
mov
sub
and
sub
fstp
cmp
adc
stc
aaa
out
(bad)
jno
loop
and
shl
mov
sub
cmp
dec
adc
cmp
jmp
mov
out
retf
cmp
mov
cmp
jmp
mov
out
ret
cmp
mov
cmp
jmp
mov
out
(bad)
pop
cmp
mov
cmp
jmp
mov
out
shr
pop
cmp
mov
cmp
jmp
mov
out
jmp
cmp
jmp
mov
out
loop
pop
cmp
mov
cmp
jmp
mov
out
cli
jmp
mov
out
imul
pop
cmp
mov
cmp
jmp
mov
out
push
jmp
mov
out
or
pop
cmp
mov
cmp
jmp
mov
out
add
pop
cmp
mov
cmp
jmp
mov
out
sbb
pop
cmp
mov
cmp
jmp
mov
out
adc
pop
cmp
mov
cmp
jmp
mov
out
sub
pop
cmp
mov
cmp
jmp
mov
out
and
pop
cmp
mov
cmp
jmp
mov
out
cmp
pop
cmp
mov
cmp
jmp
mov
out
xor
pop
cmp
mov
cmp
jmp
mov
out
dec
jmp
mov
out
inc
jmp
mov
out
inc
jmp
mov
out
pop
jmp
mov
out
pop
jmp
mov
out
push
jmp
mov
out
push
jmp
mov
out
outs
jmp
mov
out
push
pop
cmp
mov
cmp
jmp
mov
out
(bad)
jmp
mov
out
jbe
pop
cmp
mov
cmp
jmp
mov
out
mov
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
cmp
in
pop
cmp
mov
.byte
mov
