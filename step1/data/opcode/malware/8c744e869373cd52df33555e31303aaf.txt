sbb
add
jmp
pop
adc
jecxz
mov
push
test
pop
gs
dec
lock
and
jbe
iret
mov
push
pop
mov
ret
mov
pop
and
mov
adc
stos
mov
add
xchg
daa
mov
pop
mov
jl
retf
cwde
ret
ss
sahf
dec
ins
stos
daa
adc
push
mov
sub
push
pop
inc
adc
adc
jne
leave
cmp
xor
fisub
cmps
ins
lock
xor
mov
and
popa
jge
cmps
pop
add
(bad)
sub
fidivr
mov
lds
fnstsw
retf
dec
pushf
aad
nop
sti
sub
or
les
mov
cmp
fwait
push
das
adc
loop
ja
pop
inc
cld
mov
and
push
test
cmc
adc
inc
popf
sti
mov
mov
(bad)
jecxz
int
mov
sbb
in
cmp
mov
loopne
mov
push
sbb
mov
loop
cmps
stc
test
fsubr
xchg
xchg
dec
mul
das
ret
jae
push
xchg
lds
stos
dec
pusha
retf
shr
cmp
ins
mov
xchg
js
pusha
pop
push
push
add
movs
add
es
das
dec
jae
push
mov
mov
jne
ds
test
movaps
cdq
movs
mov
popa
add
inc
push
into
inc
mov
sub
outs
sub
scas
call
push
inc
je
sbb
lea
dec
fiadd
movs
mov
mov
icebp
dec
data16
dec
fcom
xchg
inc
ins
test
inc
push
xchg
xlat
fldenv
ret
add
fsubrp
jmp
aaa
sbb
or
inc
xor
aas
aad
mov
jo
aad
or
jno
pop
pusha
test
lds
retf
arpl
test
add
fdiv
aas
push
shl
(bad)
sti
(bad)
jmp
enter
adc
mov
mov
jg
pop
pusha
xchg
mov
pop
sub
sbb
clc
test
pop
sbb
jnp
stc
shr
dec
in
and
dec
mov
icebp
add
in
mov
mov
dec
push
scas
pop
call
scas
(bad)
mov
(bad)
imul
loopne
xchg
or
cli
add
cmp
xor
outs
xlat
test
jl
out
xor
jg
sub
mov
addr16
loop
ficomp
call
mov
add
mov
lods
and
outs
mov
test
add
add
add
inc
sub
fld
(bad)
xchg
xor
es
push
cmc
enter
enter
movs
scas
push
pop
stc
in
dec
lods
xchg
jp
jmp
arpl
popf
adc
cmp
mov
je
dec
mov
call
lea
mov
push
mov
imul
ins
fidiv
sahf
mov
jne
pop
(bad)
and
lahf
arpl
and
jg
(bad)
cli
(bad)
fstp
dec
adc
xor
jnp
inc
sub
mov
xor
fbstp
cmp
call
jecxz
arpl
xchg
cmps
jge
sub
lock
pop
and
xchg
xor
fdivr
cmp
pop
inc
fdivr
xor
cmp
icebp
les
cli
scas
shl
sbb
mov
dec
push
inc
cld
sub
loop
push
loope
sahf
dec
mov
pop
fbstp
fs
and
adc
mov
mov
pushf
pop
imul
pop
ret
adc
out
or
xchg
ja
shr
inc
push
nop
dec
mov
addr16
push
add
dec
bound
je
pop
(bad)
mov
add
mov
jns
xchg
inc
stos
nop
bound
inc
sbb
cmps
aad
outs
outs
retf
xchg
loopne
sbb
xor
xor
scas
mov
outs
push
stos
sub
in
sbb
dec
ds
pop
xchg
out
cs
test
push
push
or
rcl
popf
pushf
xor
jbe
div
dec
mov
outs
mov
sub
bound
xchg
je
mov
xor
and
arpl
lahf
imul
ds
outs
and
jmp
sbb
jmp
leave
adc
call
fcomi
xchg
push
jae
imul
imul
lea
or
push
fsubp
adc
out
ja
dec
inc
fcom
jo
jle
mov
je
dec
xchg
ret
mov
cmp
push
mov
jl
stos
gs
retf
aas
push
retf
lds
add
sahf
cmps
lahf
sbb
jmp
and
int3
ins
fsub
nop
xchg
fs
jmp
movs
mov
ins
sahf
jno
add
(bad)
add
outs
repz
call
mov
mov
js
mov
retf
or
push
das
mov
fcom
lahf
and
jecxz
out
lahf
ins
sub
and
push
call
mov
pop
int
movs
inc
mov
ror
pop
mov
add
pop
outs
call
int3
jne
push
lahf
push
retf
sub
int
mov
inc
mov
cmc
push
add
cwde
and
jmp
mov
int
push
sbb
cmp
inc
test
mov
and
rcr
mov
retf
add
out
cdq
mov
sub
mov
pop
sub
mov
jo
or
adc
xlat
dec
xchg
(bad)
xchg
imul
daa
or
clc
ret
pop
cmp
pop
pop
rcl
dec
inc
nop
loop
push
pop
arpl
leave
cwde
aad
fbld
jne
xchg
push
aad
shl
mov
fmul
in
mov
mov
sahf
jno
movs
mov
outs
stos
out
imul
neg
add
or
jecxz
fadd
inc
shr
xchg
fsubr
js
cmps
and
and
sbb
cmp
and
lock
outs
xor
and
shr
push
xor
xchg
pop
xchg
lea
cld
outs
fisttp
cmps
and
lock
adc
iret
stc
outs
add
xor
shl
fld
ret
adc
add
and
cmp
add
and
(bad)
mov
js
hlt
mov
push
clc
fbld
xchg
dec
pop
lahf
(bad)
mov
push
(bad)
aam
xor
icebp
leave
add
adc
cmp
mov
cmp
mov
push
cs
inc
fidiv
push
or
push
mov
xchg
les
adc
xchg
mov
ins
mov
pop
mov
or
xchg
mul
or
mov
pop
jg
movs
test
aam
lods
inc
mov
fdiv
and
test
lea
cmc
lock
adc
xor
add
mov
xor
(bad)
ds
int
sbb
(bad)
mov
sbb
mov
paddusb
lgdtd
push
push
mov
lds
movs
sub
sub
xor
imul
sub
jbe
or
sub
pop
pop
clc
mov
(bad)
movs
stc
sub
int
imul
cdq
sub
lods
sbb
popa
sub
imul
xor
ror
inc
xchg
int3
sahf
jle
hlt
push
dec
sub
leave
xchg
mov
mov
stos
jmp
cmp
inc
add
pop
mov
push
movs
add
and
popf
and
aam
in
sar
mov
ja
iret
cmps
push
fs
mov
jne
outs
cwde
pop
push
jg
mov
inc
sbb
(bad)
int3
xchg
sub
mov
or
aad
mov
push
(bad)
mov
pushf
cdq
daa
xchg
mov
mov
sar
mov
add
jp
xchg
dec
les
fcom
sub
or
xchg
push
sahf
jmp
mov
inc
mov
out
sub
cmp
push
dec
push
pop
rcr
pop
sbb
scas
neg
pop
push
outs
ja
adc
ror
inc
fnsave
int3
jg
push
sub
test
push
or
xor
adc
push
int3
mov
sti
add
mov
push
into
jmp
mov
cmp
sbb
daa
add
ins
xchg
ror
push
or
jo
inc
shl
xchg
lods
sub
add
jnp
adc
push
mov
ja
ins
push
les
add
and
inc
sbb
pop
mov
cwde
jl
xor
xor
rol
les
rcr
mov
pop
dec
mov
mov
jbe
pop
ins
sub
sub
lea
mov
sbb
in
vzeroall
and
scas
push
mov
mov
push
js
inc
jmp
popa
fcom
ficomp
adc
fdivr
inc
das
mov
cs
sub
mov
xor
sbb
mov
add
mov
and
xor
retf
sub
xchg
dec
mov
sub
iret
mov
pop
test
cli
sub
xchg
mov
iret
cpuid
sbb
sub
test
out
stc
sbb
cs
cmp
pop
mul
add
push
cmc
pusha
outs
pop
mov
xchg
push
inc
test
adc
jb
mov
sub
jle
test
pusha
sub
cmp
das
enter
cmps
mov
repz
int3
ja
xor
test
fs
mov
xchg
ins
sub
dec
ret
adc
adc
jmp
sbb
into
in
cmp
pop
(bad)
fwait
arpl
push
fisub
mov
nop
add
(bad)
int
add
inc
push
not
cmp
ins
int3
sti
aas
loope
lods
inc
inc
xchg
xchg
js
inc
xor
cmp
cwde
dec
sbb
cld
std
pop
or
jle
jmp
cmc
mul
cmps
in
lea
mov
sbb
cmps
push
push
addr16
xor
stos
out
xchg
loopne
pop
sub
add
jg
cmp
cwde
(bad)
(bad)
mov
inc
sbb
xor
jmp
push
jns
cmp
(bad)
cdq
adc
push
ja
pop
lods
sub
movs
inc
ds
jecxz
das
add
fwait
xlat
mov
or
mov
idiv
test
xchg
push
fcom
ret
ss
ss
inc
mov
dec
addr16
ret
jmp
jmp
dec
mov
scas
add
or
push
sbb
sub
push
shr
lods
das
call
or
mov
in
adc
dec
rol
cwde
adc
aad
jle
xchg
pushf
and
int
xor
fst
and
push
mov
mov
jne
pop
push
or
mov
jne
inc
loope
rol
lock
sub
sbb
sub
inc
pop
ins
stos
jbe
movs
xchg
fcmovu
cmp
in
jge
sar
scas
cld
jb
adc
idiv
jl
(bad)
arpl
jge
pushf
and
pushf
dec
inc
mov
outs
push
push
or
sbb
dec
cld
xchg
cmp
btr
mov
add
cmp
cli
mov
(bad)
lock
add
aaa
and
leave
mov
sbb
mov
jl
xchg
cli
inc
imul
cld
dec
mov
push
mov
ins
jge
xchg
xchg
lea
dec
push
dec
push
xor
daa
out
fistp
repz
sub
fidivr
cdq
sub
test
pop
outs
cmp
sbb
mov
jo
mov
adc
mov
out
ds
mov
push
mov
jl
imul
pop
xlat
sub
jo
rcr
xchg
cmp
adc
inc
mov
sbb
sub
stos
push
stos
lds
jmp
retf
xchg
xor
fucomi
scas
call
lods
jecxz
push
mov
es
movs
shl
rol
fnstenv
push
xchg
pop
or
mov
xchg
push
mov
aaa
mov
dec
loopne
inc
push
mov
aas
call
add
xor
add
nop
mov
xchg
jmp
mov
adc
rol
cwde
sub
pop
add
sbb
adc
sbb
stos
mov
(bad)
cmp
stos
pop
cdq
inc
test
inc
cmp
add
pop
icebp
mov
aam
arpl
and
sbb
ins
cmp
adc
(bad)
xchg
xor
mov
push
cli
lahf
call
jecxz
lock
pop
add
mov
mov
jecxz
out
jl
test
movs
sub
jge
or
bound
mov
sbb
loope
cs
bnd
lods
mov
(bad)
mov
gs
jecxz
retf
cmp
inc
fnstenv
push
jae
cmps
xor
sar
pop
je
cmp
retf
cmp
lock
aad
jae
cmp
jmp
cmps
mov
pushf
cmps
jbe
adc
cmp
push
inc
push
dec
outs
movs
xchg
das
arpl
mov
and
inc
mov
mov
mov
icebp
pop
jmp
lock
rcl
cmc
and
inc
mov
(bad)
hlt
movs
ror
or
mov
mov
or
push
jae
(bad)
and
or
xchg
lods
dec
and
test
call
fstp
push
xchg
dec
std
xchg
adc
fdiv
lods
leave
mov
fsubr
aam
das
ja
jg
mov
lods
xchg
in
popf
popf
xor
cdq
push
or
dec
sub
in
jl
sub
ins
xor
xchg
aam
mov
pusha
dec
fld
outs
(bad)
or
adc
dec
xchg
jmp
inc
mov
add
icebp
sbb
outs
push
fwait
sub
xchg
mov
cs
fisttp
inc
dec
push
adc
and
xchg
xchg
std
adc
xchg
mov
cbw
shl
dec
cmp
ds
lahf
or
jmp
(bad)
ss
push
push
sbb
aam
add
rol
aam
add
add
gs
lds
mov
add
sahf
rcl
(bad)
(bad)
sbb
xchg
pushf
mov
mov
adc
sti
xchg
and
es
icebp
mov
or
stos
push
or
data16
adc
dec
test
push
es
out
(bad)
jecxz
dec
(bad)
rol
mov
js
leave
dec
fsub
jo
cdq
test
out
mov
sub
dec
mov
cli
mov
sbb
inc
xor
cwde
aaa
cmp
gs
or
out
loop
outs
mov
retf
std
inc
cmp
jns
add
dec
and
mov
xchg
pop
loope
mov
ret
movs
mov
jecxz
out
or
scas
xchg
cmp
ret
and
dec
sub
in
pushf
pop
push
(bad)
cmp
mov
mov
ret
aad
sbb
dec
dec
les
adc
or
add
fucom
jle
fdivr
fwait
cmp
add
(bad)
push
jle
aad
ror
and
mov
mov
push
and
and
add
inc
sahf
push
pop
jne
xchg
fwait
test
and
ja
sbb
dec
sar
sub
or
xor
repnz
cmp
jne
aad
mov
fmul
mov
sbb
sbb
pop
push
inc
repz
or
pushf
jp
int
add
sub
stc
stc
in
xor
cmp
or
jns
dec
test
pop
movs
rcr
jne
sub
cmps
xor
pop
mov
or
cwde
call
test
add
adc
call
or
stos
or
add
jae
mov
sub
lock
and
pop
into
jae
xchg
or
stc
xor
jmp
aam
cmp
sbb
dec
stc
scas
sbb
pop
(bad)
call
mov
(bad)
cli
push
mov
adc
jae
mov
rcl
sub
repnz
repz
mov
test
mov
mov
mov
mov
xor
std
and
bnd
xchg
dec
fadd
xchg
sbb
out
jg
fdiv
xor
push
mov
test
cs
dec
fimul
and
mov
lods
sbb
enter
adc
or
sbb
test
push
push
xchg
add
sub
mov
sub
push
mov
pop
mov
mov
(bad)
cmc
inc
ficom
(bad)
or
or
repnz
push
mov
cmp
(bad)
js
out
mov
sbb
mov
xchg
fisttp
inc
pop
dec
inc
enter
outs
jne
push
retf
dec
or
hlt
adc
(bad)
or
pop
loope
cwde
sub
push
sbb
mov
aaa
inc
add
retf
cmp
repnz
mov
mov
push
sub
sub
jle
pop
xor
aaa
xor
or
aas
movs
ins
in
stos
cli
push
mov
imul
push
ds
popf
movs
fldcw
xor
jbe
inc
push
jb
icebp
daa
rcr
mov
push
ins
push
outs
xchg
xchg
pop
nop
inc
xor
icebp
inc
mov
fidiv
sub
aam
arpl
and
loope
imul
dec
leave
push
cld
cmp
adc
jmp
pop
inc
xchg
push
dec
cmp
fild
call
sahf
dec
cmp
xchg
mov
mov
test
dec
out
pop
jl
pop
push
out
cmp
xchg
in
mov
cmp
dec
pop
imul
inc
mov
scas
mov
push
add
dec
jecxz
sti
mov
out
(bad)
outs
sub
in
push
mov
in
lahf
mov
sbb
xchg
fisub
retf
adc
or
jns
lods
xor
imul
fndisi(8087
jnp
add
or
pop
or
fwait
je
inc
fbstp
js
adc
out
pushf
pop
fisubr
lahf
or
cdq
movs
test
sub
push
es
movs
sbb
sub
inc
or
cmp
aam
mov
push
sub
aaa
mov
retf
(bad)
div
jp
pop
pop
in
scas
xor
or
ret
adc
dec
push
or
bnd
leave
and
jne
jo
(bad)
mul
and
cmp
clc
adc
mov
adc
fs
adc
(bad)
jp
jle
adc
mov
lods
and
ins
stos
jmp
(bad)
gs
outs
fistp
mov
call
(bad)
out
mov
xchg
xor
cmps
xchg
ret
lock
outs
adc
cld
leave
mov
faddp
test
ins
jp
int
and
call
int3
pop
pop
sub
outs
mov
les
cmp
mov
mov
shl
fist
mov
arpl
out
inc
int
add
data16
inc
xchg
adc
mov
nop
les
and
shl
push
int3
stos
pushf
and
add
jae
xlat
cvttps2pi
scas
pop
loop
into
pop
js
add
enter
retf
mov
or
dec
mov
movs
pusha
jmp
adc
cmp
daa
mov
sbb
adc
push
adc
(bad)
pusha
in
mov
inc
jno
sub
mov
sub
jl
dec
jmp
or
daa
stos
and
aam
ret
pusha
mov
push
mov
out
cmp
mov
cmp
jg
and
cmp
clc
cmp
(bad)
push
dec
jl
adc
inc
push
jg
dec
and
and
movs
mov
push
add
push
repz
mov
popa
cwde
dec
idiv
std
fmul
out
movs
fisttp
jmp
mov
inc
nop
pop
pop
push
pop
mov
jo
sbb
test
mov
daa
lea
lods
inc
pop
cmp
push
inc
scas
rcl
test
into
test
out
test
mov
test
adc
out
popa
inc
int3
sub
retf
dec
fyl2xp1
pop
(bad)
sbb
dec
lock
and
pop
xchg
mov
pushf
xlat
popf
dec
lahf
jno
push
add
stos
jb
fmul
mov
int3
mov
data16
dec
lea
bts
xor
pushf
push
clc
shr
or
and
(bad)
jo
call
or
sti
and
pop
xchg
sbb
dec
jnp
cs
jbe
push
add
mov
and
and
scas
xchg
aas
fmul
mov
add
std
call
xor
add
dec
inc
not
xchg
push
(bad)
stos
sbb
sub
fdivr
enter
popf
int3
popa
and
int
sbb
jmp
xchg
xchg
xor
mov
imul
(bad)
sbb
jl
fiadd
xchg
mov
fiadd
jb
pop
out
push
inc
cld
stc
mov
ret
jae
jbe
jne
adc
dec
inc
retf
sahf
xchg
lods
femms
ror
scas
ja
and
movs
xlat
jmp
cdq
inc
(bad)
jg
mov
icebp
mov
ror
ja
adc
push
cmp
pop
bnd
add
inc
rcr
dec
into
pop
arpl
adc
mov
or
and
out
push
cdq
adc
sahf
inc
jmp
push
fist
or
imul
test
das
adc
mov
nop
jg
stc
cld
addr16
cmp
push
cmp
sub
xchg
inc
pop
in
mov
in
das
add
pop
fldcw
jmp
mov
fimul
xor
add
int
fwait
inc
sbb
lea
(bad)
jg
mov
pop
mov
pushf
cmp
jp
lock
rcr
jns
jmp
mov
pop
xchg
jbe
inc
jns
push
xor
mov
clc
pop
popf
ret
sbb
lods
movs
popf
rol
cs
and
mov
je
aas
imul
or
(bad)
xlat
and
in
adc
push
into
and
jae
js
or
ret
aas
jecxz
xchg
(bad)
dec
xor
retf
(bad)
sti
push
push
dec
and
mov
dec
std
xor
out
mov
inc
mov
dec
push
mov
movs
and
add
inc
or
int3
scas
mov
jb
out
bound
jns
mov
(bad)
shr
xchg
pop
mov
pop
call
jge
cli
fmul
mov
cmp
imul
inc
not
or
dec
ss
and
pop
pop
sar
mov
xor
add
pop
adc
ja
ins
lahf
adc
inc
jmp
inc
cs
xchg
mov
sbb
or
call
fbstp
mov
pop
add
stos
xor
and
sub
(bad)
and
jnp
adc
and
jge
jecxz
fs
cmp
pop
mov
push
push
add
rcl
adc
cmp
movs
jl
lahf
pop
xchg
or
mov
mov
scas
shl
sahf
daa
sub
xor
add
popa
dec
inc
fisttp
pop
in
neg
jge
pop
ficom
pop
push
mov
hlt
lahf
sar
fwait
std
fsubr
mov
mov
rol
cwde
jns
mov
sbb
bound
pop
pop
inc
cmp
push
ds
pop
aam
arpl
es
pop
cmc
sbb
imul
sbb
cwde
popf
loopne
int
jge
ins
adc
jl
xchg
inc
mov
call
jl
ds
adc
xor
cmp
push
add
xchg
jmp
push
movs
test
push
jae
ror
and
and
jae
xchg
xor
sub
cmp
fs
hlt
adc
adc
sub
dec
jg
cmp
out
mov
sar
xor
fnsave
sub
outs
mov
test
xor
cwde
fwait
cmp
je
xchg
dec
cwde
mov
daa
rcr
dec
cs
cld
lods
into
jp
dec
xchg
add
sbb
adc
cld
adc
jl
xchg
mov
es
mov
std
sbb
push
inc
pushf
pop
popa
xchg
sbb
sub
push
push
movs
loop
(bad)
nop
xchg
cld
or
sub
fwait
push
sar
mov
mov
mov
cmp
jmp
into
jl
mov
jmp
mov
adc
pushf
(bad)
jmp
cli
stos
aam
cmp
xchg
js
test
jp
push
adc
in
fcomp
xchg
sbb
dec
fild
arpl
addr16
movs
xor
jg
dec
mov
sti
dec
dec
lahf
mov
test
inc
push
aad
xchg
inc
aaa
mov
movs
jbe
clc
aas
repnz
add
adc
cmps
rcr
jge
mov
jmp
ss
xchg
jnp
inc
int
mov
es
push
jno
es
sub
jae
xor
sti
aad
popa
loop
mov
adc
push
sbb
dec
test
xlat
js
lea
into
inc
mov
add
push
dec
test
dec
test
or
jmp
dec
jecxz
test
or
rol
mov
cwde
shl
imul
dec
inc
imul
je
jne
in
out
xor
push
adc
xlat
mov
inc
mov
jp
test
int3
cmps
jns
lahf
in
jg
imul
in
ret
and
aam
xchg
pop
pop
ins
sar
stos
stos
movs
dec
movs
sub
mov
mov
inc
(bad)
aam
retf
dec
cmp
cmc
imul
pusha
aam
adc
jmp
outs
push
mov
fwait
sar
push
cld
and
push
rcr
cmps
cld
cmp
add
jmp
xchg
js
mov
xchg
adc
les
sti
inc
push
push
add
icebp
jnp
js
pop
retf
xchg
push
cmc
cmp
mov
in
call
pop
pop
sti
push
inc
and
clc
out
test
push
dec
loop
(bad)
in
push
stc
sbb
adc
enter
dec
or
sub
dec
pusha
add
pushf
das
outs
pop
mov
loopne
cmp
shl
mov
xor
mov
ins
les
(bad)
pop
es
and
and
arpl
pop
push
call
cld
mov
xchg
movq
push
cs
lods
mov
xchg
cmps
das
fdivr
xchg
add
push
inc
nop
loopne
sbb
pop
cmp
jecxz
mov
add
mov
int
jnp
add
mov
or
cld
movs
and
jo
pop
dec
imul
jae
or
in
adc
sub
sbb
jle
loop
mov
dec
dec
push
call
hlt
or
fs
and
hlt
push
aad
push
dec
out
mov
jg
xlat
mov
ss
imul
pop
adc
jmp
mov
scas
xchg
mov
ret
cmp
xchg
jle
pop
jns
call
push
dec
sbb
arpl
jno
xchg
xchg
cmp
fiadd
xor
or
inc
jo
sub
fst
inc
jno
mov
xor
inc
jmp
adc
xchg
push
adc
lods
push
push
sub
ins
xchg
(bad)
daa
retf
add
jge
in
ins
and
mov
arpl
add
mov
add
cmps
add
popa
mov
pop
vpsrlq
pop
jge
ret
call
popa
cmp
outs
mov
call
fst
retf
mov
mov
ss
pop
jl
jmp
mov
stos
cmp
add
into
add
jecxz
jge
sub
adc
ss
sbb
dec
sar
sub
inc
(bad)
sub
loope
adc
pop
fidivr
push
iret
hlt
jg
xor
fst
cld
fisub
cmp
and
mov
es
lea
mov
jge
jbe
inc
sbb
xchg
push
push
mov
fistp
sub
xchg
aaa
iret
jb
jmp
jnp
outs
push
inc
xor
cmp
movs
pop
sub
sti
mov
movs
xor
ja
je
jl
sub
stos
and
ret
sbb
adc
(bad)
push
push
pop
sbb
(bad)
fmul
cmps
jg
and
bound
mov
outs
addr16
int
icebp
or
jo
xchg
jge
ret
(bad)
inc
retfw
jb
into
add
xchg
das
fdiv
and
addr16
out
jecxz
repz
pop
cmp
pop
push
mov
lea
push
ja
add
dec
pop
or
mov
xor
push
xchg
pop
icebp
inc
out
daa
or
loope
(bad)
test
add
fucompp
in
ja
scas
les
rcl
sub
jns
pushf
daa
in
and
ss
xlat
mov
adc
jle
xor
shl
push
sub
mov
aad
sbb
retf
cdq
imul
enter
outs
mov
cwde
inc
frstor
inc
fsubr
push
shl
mov
rcl
loop
loop
add
imul
movs
js
pop
xchg
loopne
hlt
pop
xor
inc
outs
cmps
add
push
mov
aaa
(bad)
jmp
cwde
jbe
xchg
xor
inc
neg
jb
xor
arpl
les
sbb
and
shr
adc
mov
bnd
js
imul
dec
lods
bound
jle
sub
pop
(bad)
ss
and
xchg
dec
std
ja
adc
dec
pop
push
bound
leave
mov
repz
call
cwde
push
mov
cmp
jns
or
ja
mov
dec
pop
or
pop
sub
iret
pusha
into
movs
inc
das
nop
pushf
push
pusha
mov
(bad)
in
outs
fidiv
mov
ds
dec
or
sub
inc
xchg
rol
popf
dec
and
push
mov
lock
mov
ins
jnp
retf
leave
mov
aad
adc
ins
sbb
(bad)
bound
and
call
mov
fldcw
arpl
or
fwait
add
inc
ret
cmps
stos
or
mov
(bad)
(bad)
test
inc
mov
jae
and
data16
cdq
into
hlt
pop
and
int
js
cmp
in
jl
xor
wbinvd
dec
rol
cmps
out
scas
ret
in
push
rol
and
ss
xor
ret
movs
in
fld
fadd
hlt
sub
push
sbb
div
and
mov
enter
jo
pusha
stc
dec
sbb
(bad)
sbb
call
retf
push
aad
push
icebp
(bad)
mov
mov
adc
outs
and
rol
mov
jge
inc
in
add
jecxz
inc
aas
imul
inc
fwait
movs
mov
xchg
movs
gs
add
popa
imul
repz
xor
in
jg
fmul
(bad)
in
pushf
stos
fidivr
mov
mov
sbb
test
mov
cmps
mov
lods
fsin
sub
cmps
lock
push
xchg
(bad)
(bad)
jg
push
pop
pop
jl
adc
out
and
retf
mov
in
add
out
ret
arpl
retf
mov
cmp
adc
adc
xchg
clc
test
sbb
inc
inc
adc
sbb
sbb
fcmovbe
mov
pop
xor
pop
mov
pushf
retf
sbb
div
xor
popa
jae
jb
xchg
push
jg
cmps
ins
clc
and
jle
mov
add
mov
(bad)
pop
and
rcl
dec
pop
jnp
add
xchg
jge
jg
int
(bad)
mov
scas
sbb
jne
fcomp
fdiv
add
imul
rcr
add
pop
pop
movs
loopne
loope
cli
out
outs
cli
add
or
inc
pushf
mov
add
or
dec
mov
push
stos
rol
(bad)
neg
or
add
push
and
cdq
fstp
push
mov
inc
pop
dec
imul
rcr
push
sub
imul
repz
sub
add
test
mov
adc
arpl
gs
mov
fld
outs
inc
pop
in
xlat
jmp
inc
mov
mov
(bad)
mov
cmp
adc
scas
and
mov
imul
rcr
arpl
xor
cmp
mov
pop
idiv
cs
dec
(bad)
iret
int3
pop
push
or
mov
mov
xchg
xor
push
xlat
sub
mov
sub
into
or
mov
je
xor
scas
out
and
aas
test
dec
popa
movs
ss
mov
es
imul
cmp
sbb
jp
sbb
push
rcr
les
fcomp
mov
push
ins
pop
les
popa
cmps
into
pop
and
mov
dec
mov
xor
sbb
xchg
daa
xchg
in
cmp
inc
stos
mov
mov
es
pop
loop
xchg
push
loope
je
clc
push
jb
stos
cwde
dec
in
or
test
scas
inc
dec
or
cdq
dec
xor
jge
cmp
sbb
add
nop
xchg
out
cs
test
faddp
fmul
mov
dec
mov
push
jmp
pop
lea
out
dec
retf
jecxz
lods
cs
xchg
arpl
push
xor
jbe
icebp
retf
icebp
test
sbb
ror
mov
mov
push
test
mov
jle
mov
inc
add
xor
mov
pop
xchg
add
sub
stos
xlat
dec
test
sub
addr16
inc
sub
and
cld
xor
mov
cmc
aam
aas
xor
jmp
xchg
push
mov
xor
cmps
jmp
push
movs
fdiv
sbb
(bad)
pop
push
dec
lods
sub
pop
xlat
cmp
jle
push
push
push
jae
xchg
jbe
imul
(bad)
and
mov
gs
mov
repz
loop
lods
nop
push
andps
lods
ds
adc
hlt
imul
ss
mov
and
jle
test
push
int
out
jecxz
fisub
xor
or
xor
mov
mov
fs
xchg
push
mov
retf
xchg
jecxz
fwait
push
sahf
fwait
aaa
push
sub
dec
mov
push
mov
inc
sub
or
push
and
lea
inc
rcpps
cli
sbb
push
shld
xchg
popf
mov
mov
add
sbb
mov
cmp
cs
out
icebp
test
out
ret
adc
push
cmp
pop
out
(bad)
cmp
gs
pop
xor
iret
outs
aad
sbb
xlat
mov
add
mov
leave
xchg
mov
inc
cmp
icebp
pop
jmp
dec
push
leave
cmp
sub
add
mov
mov
ins
dec
aaa
popa
jl
jle
sbb
push
inc
or
jmp
inc
add
push
mov
pop
cld
mov
or
bound
in
jno
in
jne
mov
jb
in
(bad)
ret
add
icebp
rcl
(bad)
sub
push
dec
popf
(bad)
push
sti
push
inc
pop
out
sub
arpl
outs
lods
cmps
push
jge
retf
push
jmp
xchg
xchg
inc
mov
lds
jmp
adc
push
ss
aas
cmps
jmp
aas
test
rol
and
jns
sahf
jg
in
xor
test
jl
mov
and
xchg
sub
sar
jae
pop
fs
jbe
sub
push
jp
cmp
dec
loope
mov
mov
mov
ror
dec
(bad)
jb
fnstcw
(bad)
(bad)
add
or
inc
mov
hlt
fucomp
xchg
in
lds
sub
jnp
xor
es
leave
sti
cmp
add
out
add
and
jecxz
sti
lods
out
stc
xor
inc
aas
js
sbb
call
mov
ins
mov
pop
mov
inc
movs
sar
mov
sbb
cmc
fcomi
mov
sbb
ror
stos
pop
aaa
cmp
sub
pushf
xchg
sahf
lods
and
dec
shl
fimul
sub
es
push
xor
add
push
rcl
jge
pushf
fcom
outs
lahf
data16
daa
dec
pop
ins
xor
push
les
xchg
xchg
test
xchg
push
in
sbb
add
mov
xchg
lea
add
mov
or
pushf
push
push
dec
adc
cli
and
lea
cmc
push
rcl
pop
addr16
jae
cmc
jmp
pop
pop
add
repz
jmp
les
push
pop
inc
xchg
ins
fdivr
sbb
aas
sahf
sub
ins
fcomp
sub
jge
rol
dec
sbb
aam
mov
or
cmp
pop
dec
fdiv
inc
nop
(bad)
lock
enter
outs
jge
int3
rcl
shl
and
fprem1
out
adc
pop
pop
mov
pop
sub
mov
xchg
pop
cmp
xor
mov
sub
push
(bad)
xchg
sti
xor
push
adc
out
aam
add
std
push
xor
inc
inc
movs
dec
es
popf
pop
ins
(bad)
adc
ffree
pushf
sub
daa
jnp
cmps
fbstp
xchg
cwde
int3
sub
fdivp
ins
xor
test
fdiv
mov
scas
(bad)
mov
std
push
and
sti
xchg
cmp
cmp
inc
xchg
jmp
pusha
ja
in
pusha
mov
fidivr
fild
sub
jmp
cmps
xchg
add
(bad)
loope
cmp
repnz
sub
stc
cmp
int3
cmp
xor
scas
sbb
sbb
icebp
lea
jg
lds
or
xor
jecxz
pop
jecxz
cmp
cs
inc
jb
sub
aas
bound
xor
mul
and
dec
dec
push
adc
(bad)
ficom
ret
push
add
jnp
or
ret
xchg
sub
(bad)
aas
and
repnz
mov
sub
xor
sub
div
movs
idiv
pop
stc
nop
push
repz
retf
jp
and
scas
jbe
aas
mov
jno
lea
mov
outs
mov
xchg
mov
call
call
mov
adc
inc
or
mov
xor
jb
mov
cli
or
gs
or
mov
dec
adc
scas
mov
xchg
mov
mov
in
pop
pop
test
sbb
mov
dec
sub
shl
retf
push
leave
pop
cmp
je
popa
mov
loope
or
xchg
cdq
xchg
mov
mov
clc
dec
xchg
adc
rcl
(bad)
jg
cmp
js
xor
xlat
fmul
int
aad
cmc
mov
or
pop
int3
idiv
mov
mov
(bad)
xchg
and
shl
pop
adc
adc
(bad)
(bad)
dec
sar
aad
popf
jne
push
xor
inc
imul
or
xor
mov
push
jb
xchg
fst
out
mov
cwde
pop
cwde
or
retf
aaa
add
(bad)
cmc
inc
sahf
add
xor
cmp
repz
icebp
mov
mov
add
je
jb
loope
inc
and
add
repnz
sbb
mov
loope
arpl
out
in
ins
mov
mov
cmc
ins
das
jg
lods
rol
mov
xchg
out
pop
enter
mov
pop
adc
scas
xchg
jno
dec
and
enter
pop
or
jp
fwait
loopne
div
or
test
div
xchg
add
xlat
cs
or
daa
push
mov
into
cmc
loopne
cdq
pop
inc
nop
sub
sahf
jmp
sbb
xor
sbb
jmp
jl
xor
inc
rol
dec
xchg
xchg
cmp
jbe
out
cmps
and
in
mov
icebp
inc
(bad)
xor
(bad)
cmp
pushf
out
ja
stc
loop
sub
push
loope
rcr
sub
push
rol
scas
pop
and
test
mov
jnp
out
push
push
les
push
push
repz
out
adc
sub
loopne
mul
xor
pop
add
jmp
iret
or
jmp
mov
out
jl
outs
mov
lods
inc
call
repnz
xor
adc
xchg
repz
hlt
push
cmc
or
xor
nop
popa
cmc
sbb
mov
xor
in
sahf
cmp
adc
mov
rol
mov
mov
cmp
inc
mov
adc
movs
jb
sub
dec
stos
lahf
xchg
mov
addr16
cmp
call
xor
xchg
sbb
jmp
pushf
stos
outs
sahf
add
rol
jnp
sar
leave
arpl
jno
push
ror
ins
fsubr
pop
add
push
xor
(bad)
fisubr
sub
ret
loope
mov
mov
jnp
mov
pop
out
loope
dec
pop
cs
jbe
arpl
mov
sub
fwait
stc
push
dec
outs
aas
dec
jns
stos
std
test
dec
lods
or
dec
out
shr
movs
inc
adc
in
sbb
cmps
ins
sub
cld
or
jp
int3
push
fst
mov
dec
sbb
xor
pop
les
enter
and
(bad)
aam
or
or
jg
std
inc
(bad)
js
(bad)
cld
push
imul
adc
retf
fsub
cmp
repnz
jecxz
inc
pop
mov
mov
dec
pop
or
imul
ss
aad
std
xchg
int3
sti
mov
lds
adc
dec
inc
push
cmp
jp
sub
les
int
xchg
and
mov
clc
mov
inc
mov
mov
pop
xlat
daa
repnz
push
mov
mov
imul
ds
lea
dec
dec
jbe
ja
leave
xchg
cmps
adc
dec
mov
hlt
aad
push
sub
inc
push
or
sub
or
in
in
and
addr16
sbb
mov
jns
lahf
ins
iret
or
inc
retf
retf
jge
nop
out
mov
xor
fidivr
jmp
and
sahf
jae
fcom
bound
xlat
leave
mov
or
pop
pop
in
dec
or
mov
jl
inc
mov
jne
mov
jmp
test
pop
lods
outs
xchg
adc
cli
shr
xchg
lods
ret
aas
pushf
cli
mov
push
jmp
hlt
int
test
or
jno
hlt
aas
jne
xchg
inc
adc
fwait
jo
add
cwde
test
pop
repnz
xchg
xchg
cmps
push
inc
stos
push
sub
or
out
inc
js
into
dec
mov
cli
int3
out
cmp
aad
and
out
inc
pop
sub
gs
xlat
jl
pop
mov
retf
popa
or
cmp
mov
(bad)
fnstenv
js
xchg
cmp
jb
push
scas
xchg
mov
lahf
push
in
mov
mov
in
add
xlat
data16
lea
mov
sub
test
fisubr
cwde
mov
xchg
pusha
xlat
sub
add
cmp
push
and
inc
mov
sub
enter
in
outs
add
ret
les
(bad)
hlt
sub
xchg
push
dec
pop
nop
(bad)
jo
sub
push
loope
mov
sbb
xor
in
nop
es
xchg
mov
mov
icebp
rcl
inc
add
sar
jno
iret
aad
mov
je
xchg
ret
sub
pop
mov
sti
(bad)
push
and
adc
mov
dec
shl
xchg
bswap
sub
adc
popa
(bad)
jmp
mov
jmp
pop
pop
sbb
bound
push
inc
stos
mov
aas
sbb
add
ret
jp
ror
mov
mov
pop
fldenv
add
loop
nop
xchg
pop
test
mov
adc
out
int3
adc
mov
push
push
and
or
(bad)
outs
add
xor
pop
mov
int
pop
fst
or
in
aad
sub
pop
das
pop
mov
lea
xor
test
adc
inc
bound
dec
movs
int
and
out
xor
iret
vmread
hlt
dec
loopne
push
dec
mov
dec
cs
sub
ss
and
sbb
cwde
jg
jl
fmul
loopne
or
pop
xor
fst
jb
nop
pop
add
pop
add
cmps
movs
imul
pop
jge
jae
cmp
add
push
test
aaa
pop
sub
movs
inc
mov
jge
fdiv
xchg
lahf
dec
in
aam
sti
loope
repnz
in
sbb
ds
add
mov
popf
pop
push
pop
dec
mov
sub
sbb
rcr
cmp
outs
(bad)
outs
inc
inc
or
aam
lahf
movs
fdivr
xor
cld
imul
dec
xlat
inc
jb
sub
lock
cs
push
aaa
aad
(bad)
repz
push
enter
cwde
jle
lahf
dec
mov
pushf
push
pop
in
xchg
and
shl
sbb
push
mov
pop
pop
sbb
add
dec
stc
(bad)
scas
lock
sub
xchg
mov
sub
sbb
mov
mov
xchg
dec
loope
int3
ret
outs
push
push
fistp
push
ds
inc
inc
ja
sbb
ds
int3
or
out
cdq
push
arpl
mov
push
aam
xchg
cmp
jbe
pop
mov
inc
mov
xchg
lahf
xor
clc
fmul
bound
jecxz
ja
aad
lea
add
ds
imul
(bad)
lahf
jb
mov
mov
xchg
fcomp
xchg
inc
mov
ss
pop
inc
int
sub
inc
inc
repnz
movs
push
call
jmp
jo
stos
lahf
pop
sub
mov
loopne
adc
dec
aam
arpl
addr16
rol
xchg
fmul
adc
cmp
and
pop
add
ja
gs
in
xlat
test
cmc
jp
iret
pop
inc
xchg
inc
cmp
inc
(bad)
lahf
out
xor
mov
ins
mov
jo
jmp
ins
repnz
mov
xchg
push
jb
retf
scas
cwde
in
nop
dec
cmc
ret
popf
sbb
mov
inc
inc
inc
adc
lods
pop
cmp
popf
outs
repnz
add
mov
and
xchg
jecxz
in
push
sbb
inc
test
mov
in
(bad)
test
sar
(bad)
fidivr
jmp
or
outs
sbb
mov
ret
out
xchg
cmp
sar
dec
push
(bad)
cmp
jl
ret
(bad)
ror
mov
and
addr16
ror
xchg
ins
cmp
adc
jo
in
jb
xchg
cmp
push
(bad)
pop
cmc
jb
and
je
jge
xor
sbb
(bad)
lahf
stos
fs
ja
xchg
jmp
push
repz
js
pop
fisttp
mov
nop
inc
jg
in
mov
jp
stos
call
jle
mov
pop
int3
pop
adc
es
out
xchg
xchg
jecxz
push
inc
xchg
push
add
out
push
jbe
mov
(bad)
pop
xlat
jo
mov
arpl
popa
xchg
sahf
sub
fsub
mov
inc
push
cmp
fwait
scas
or
pop
aad
jbe
nop
(bad)
mov
call
int
pop
(bad)
(bad)
jne
dec
imul
mov
or
jo
inc
xchg
test
xor
xor
jge
jecxz
cmp
(bad)
sahf
out
bound
xchg
retf
lahf
out
adc
(bad)
loop
inc
or
push
xchg
lahf
jo
mov
mov
xchg
adc
pop
scas
pop
and
enter
push
mov
pop
xor
adc
loope
pop
test
popa
pop
stc
sub
test
test
push
gs
cmp
pushf
pop
scas
cmp
sbb
add
jle
add
cdq
rcl
push
fsubr
test
and
inc
or
or
shr
or
xlat
xchg
cmp
push
mov
adc
pop
fild
mov
mov
cli
inc
imul
and
add
retf
in
mov
int3
lahf
dec
xchg
sub
xlat
iret
cmps
int
cld
push
jno
push
cwde
add
stos
sub
jne
pop
movs
xor
fdivr
cdq
mov
outs
retf
sbb
xor
lods
sub
cmc
or
and
movs
stc
mov
xor
in
sbb
loop
jecxz
xchg
pop
loope
retf
push
xchg
and
pop
lds
into
mov
cmp
xlat
(bad)
stc
daa
call
inc
mov
fldenv
mov
out
inc
imul
xor
or
bound
lods
or
jge
in
jmp
sbb
inc
sub
scas
movs
push
fwait
sub
add
cmps
push
mov
mov
xchg
ins
inc
addr16
in
out
std
das
and
mov
cmp
cmp
aaa
arpl
jge
stos
(bad)
clc
lds
call
or
test
les
lods
jne
push
pop
mov
sub
or
test
jl
mov
xchg
cmp
xchg
inc
sbb
mov
test
ins
outs
sbb
rol
ret
sar
ja
and
jmp
add
jecxz
pop
xor
pop
fldenv
cmp
out
add
mov
lods
jle
addr16
pop
(bad)
mov
les
rol
sub
sahf
in
addr16
scas
mov
sbb
adc
test
mov
inc
push
fwait
and
push
movs
push
cmc
jp
pop
jne
or
call
bound
out
mov
jmp
leave
shl
sbb
push
addr16
pop
aaa
jnp
xlat
stos
imul
inc
mov
mov
(bad)
xor
sbb
inc
fst
int3
cmp
mov
dec
daa
ret
std
cmp
mov
lea
retf
fild
mov
jl
out
mov
clc
cmp
cmps
(bad)
scas
and
cdq
aaa
pop
sub
pop
mov
cli
in
push
dec
lock
imul
inc
dec
pushf
xchg
mov
dec
add
mov
inc
cwde
cmp
daa
dec
cmp
sti
stos
int3
adc
pop
jae
dec
aaa
xchg
ret
int3
push
sub
call
repnz
(bad)
lods
int3
or
rol
adc
movs
aaa
enter
mov
xchg
int3
aam
sar
inc
in
or
div
addr16
push
or
jle
out
sbb
or
and
mov
inc
inc
xchg
test
sub
sub
ja
aad
aad
fbstp
sub
pusha
pop
dec
push
cmps
xchg
arpl
xor
sub
icebp
mov
lds
sub
mov
fstp
mov
sti
aas
shr
call
jns
xor
or
sub
lds
aas
or
aas
lds
test
cmp
mov
pop
fidivr
mov
mul
arpl
mov
js
and
mov
jae
xor
(bad)
(bad)
mov
rcl
push
cmp
jl
sbb
out
loope
adc
lock
adc
mov
xchg
pop
push
or
call
sbb
sbb
cld
pushf
mov
call
pop
cmp
(bad)
shr
jmp
push
stos
aas
mov
sar
sbb
js
pop
aaa
xor
fcom
xor
xor
sti
lahf
mov
pop
(bad)
cwde
push
frstor
pushf
ficom
inc
push
xchg
xchg
(bad)
fs
cmp
lods
xor
test
lea
mov
jge
add
cdq
cmp
inc
or
dec
not
xor
rcl
mov
push
ja
cmps
dec
arpl
mov
mov
movs
jmp
test
add
dec
dec
nop
icebp
jne
push
xor
test
je
mov
and
ss
pop
out
jae
jae
call
cwde
inc
adc
sbb
leave
imul
jb
xchg
rol
lahf
sar
xor
(bad)
jmp
fst
(bad)
(bad)
stos
fistp
(bad)
adc
jmp
pop
xor
push
mov
ret
mov
aad
mov
aaa
add
movs
sahf
iret
(bad)
xchg
inc
lock
jecxz
pop
pop
ja
aad
sti
pushf
movs
movs
ds
mov
jmp
fistp
ja
or
xor
ja
test
mov
ins
cmp
pop
ror
rcr
pop
outs
cmp
loop
inc
add
xchg
dec
ret
clc
ins
push
pop
cmp
cmp
les
loopne
std
or
fiadd
push
scas
out
cdq
aad
mov
(bad)
out
cmp
pusha
jo
das
add
adc
sbb
or
test
xor
push
dec
push
mov
out
pop
jno
lea
adc
inc
imul
push
inc
or
das
mov
fist
iret
and
dec
hlt
pop
jge
fld
and
rdtsc
cmp
dec
(bad)
ins
int3
je
cwde
test
adc
mov
jp
inc
or
shr
push
mov
fdivr
push
mov
dec
sti
mov
ret
ss
adc
rcl
mov
and
mov
pop
imul
enter
fimul
fisubr
adc
adc
push
dec
or
cmps
push
loope
inc
mov
std
sub
jnp
add
(bad)
loope
fstp
mov
xor
cwde
mov
mov
(bad)
daa
sub
iret
xor
xchg
push
pop
jmp
add
daa
shl
cwde
mov
push
fistp
or
loopne
xor
(bad)
xor
mov
inc
lea
daa
mov
dec
adc
cmp
repnz
jb
sahf
bound
cmp
(bad)
jno
xor
mov
movntq
cmc
js
in
and
push
xchg
fsubr
in
sub
xor
ror
sbb
jp
sti
shl
mov
mov
aad
add
xor
push
and
push
addr16
push
popa
or
in
shl
jmp
xor
gs
call
mov
loope
add
jecxz
xchg
out
sbb
jnp
xchg
mov
gs
jbe
je
clc
jg
adc
stos
xor
xor
mov
jge
and
lahf
cs
pop
push
pop
push
sub
fstp
mov
leave
jo
cmp
adc
pop
adc
jle
and
xor
icebp
jg
loopne
je
mov
(bad)
and
mov
mov
mov
or
lods
inc
or
gs
mov
stos
mov
inc
rcl
and
xchg
movs
stc
fldcw
push
sbb
mov
(bad)
xchg
test
loopne
mov
push
loop
sub
and
out
icebp
(bad)
xchg
and
pop
xor
mov
icebp
stos
or
inc
fst
rcr
mov
cli
in
xchg
add
ret
test
cmp
and
loope
or
and
retf
scas
adc
in
fcmovnbe
inc
inc
and
call
das
pushf
mov
sbb
ds
cs
das
push
test
push
push
lds
dec
push
xchg
sbb
xchg
push
and
cld
outs
test
xor
ret
sub
mov
mov
fdiv
lock
cmp
inc
push
in
pusha
(bad)
sub
fild
imul
ja
sbb
in
out
cmp
sub
stos
pop
sbb
push
jbe
sub
push
dec
js
paddb
inc
sbb
mov
inc
mov
inc
jmp
in
sub
cld
xor
push
dec
sub
adc
je
adc
mov
adc
add
pop
inc
cwde
adc
and
adc
cmp
vpsllw
loopne
dec
cmp
in
mov
push
inc
lods
sbb
add
(bad)
or
jp
les
push
xchg
in
jbe
mov
stc
fldenv
popa
push
fwait
inc
and
and
mov
int3
add
repnz
gs
dec
lods
push
popa
or
mov
adc
(bad)
out
sub
pop
mov
jge
xor
pop
std
push
paddb
ds
bts
je
mov
or
add
xchg
and
xchg
lds
cmps
xchg
ins
mov
mov
inc
repz
push
js
jbe
sbb
daa
dec
inc
mov
inc
or
jns
mov
xor
jne
lods
icebp
and
int
pop
stc
add
arpl
inc
call
inc
aam
push
mov
shl
mov
leave
push
sub
push
cmp
imul
test
mov
icebp
test
ins
cmp
push
cdq
inc
dec
mov
aaa
mov
cdq
neg
imul
push
cmp
or
fwait
sbb
cmp
mov
ja
iret
push
retf
sbb
jo
stc
ficomp
ins
aaa
test
pop
(bad)
lock
cmp
jo
sbb
inc
aas
les
repnz
inc
mov
cmp
push
(bad)
enter
js
imul
ror
icebp
or
jl
retf
dec
lock
cmp
arpl
cmp
mov
pop
pop
inc
inc
push
popf
imul
popa
mov
push
xchg
push
jge
xchg
div
daa
scas
sub
aad
lods
jecxz
call
fs
sub
dec
cs
add
fwait
add
jne
test
cwde
lss
(bad)
jg
lea
dec
call
jl
out
push
sub
sbb
in
mov
clc
mov
mov
and
(bad)
cmp
or
xor
fild
loope
js
out
pop
test
outs
cli
cwde
rol
cs
mov
or
jp
test
mov
dec
cdq
loopne
cmp
push
xchg
inc
mov
popa
mov
es
nop
xor
jnp
movs
test
xchg
and
cmp
jb
push
pop
jmp
mov
jle
push
jo
mov
stos
lds
mov
add
jge
adc
inc
jge
les
rol
test
inc
adc
(bad)
mov
lods
and
aam
and
cmps
mov
add
jb
ror
or
fwait
jmp
push
or
enter
test
add
sub
cmps
cmp
retf
mov
shr
cmps
adc
push
ror
add
js
mov
sbb
mov
ror
pop
div
ret
aam
or
fld
mov
mov
dec
dec
push
popf
sbb
mov
mov
jecxz
xor
dec
enter
shl
dec
in
idiv
jb
inc
dec
aam
outs
in
add
in
shl
push
out
scas
stc
shl
jo
push
sub
shr
and
pop
push
dec
mov
in
out
shr
add
jl
sbb
mov
out
dec
xor
xor
pop
sbb
leave
mov
and
mov
fsub
outs
jle
adc
inc
mov
dec
inc
js
ins
sbb
dec
jge
xchg
xor
mov
inc
in
icebp
retf
add
cwde
xor
push
arpl
sbb
inc
mov
mov
into
or
xchg
push
sbb
inc
sbb
inc
sahf
adc
aaa
push
cmp
xlat
jmp
out
(bad)
lahf
(bad)
rcr
and
sti
pop
jne
mov
into
add
dec
cmp
fs
popfw
arpl
cs
or
addr16
xor
mov
adc
retf
movs
gs
dec
pop
sahf
in
movs
(bad)
and
mov
jbe
jg
call
test
jnp
xor
addr16
retf
add
(bad)
aam
jecxz
movs
mov
dec
and
outs
xchg
sub
cs
shr
hlt
mov
aam
cmps
lock
mov
pop
pop
xor
(bad)
jae
in
in
push
call
mov
dec
mov
jne
ret
xchg
push
jge
jbe
pcmpgtd
lahf
test
mov
adc
mov
outs
pop
addr16
inc
loope
stos
sbb
push
aam
adc
dec
xchg
lahf
inc
aas
std
add
test
(bad)
ss
fcomp
jle
ret
jae
add
(bad)
pop
push
sub
cmp
jl
imul
xchg
mov
or
adc
shl
shl
xchg
push
ds
push
fs
pop
into
(bad)
xchg
mov
cli
(bad)
movs
lods
popa
std
pop
mov
xchg
push
test
cmp
xchg
leave
cmps
movs
lods
fiadd
mov
mov
sub
and
call
test
or
sub
pop
push
sbb
inc
loopne
mov
sbb
aad
enter
pop
(bad)
stos
in
mov
(bad)
rol
(bad)
jl
in
ret
mov
cld
mov
pop
or
gs
ins
mov
sbb
sar
mov
stos
and
(bad)
popf
cmps
rol
icebp
mov
adc
lock
cmp
popa
mov
js
mov
aaa
push
xchg
adc
test
imul
cwde
mov
es
ins
outs
lock
add
push
xchg
pop
cmp
fcomp
add
and
cmc
jmp
(bad)
or
mov
sub
inc
jmp
jl
popa
outs
mov
loope
mov
dec
adc
(bad)
in
jae
les
data16
fbld
adc
clc
nop
out
jns
cli
retf
pop
pop
pop
push
mov
fld
imul
data16
out
dec
add
(bad)
stos
xor
popa
(bad)
cwde
mov
add
add
icebp
add
sub
cli
pop
cmp
mov
mov
jg
js
and
xadd
adc
push
inc
xor
sub
jge
inc
jecxz
fimul
and
mov
sti
cmp
nop
xchg
pop
cmp
dec
sbb
adc
add
xchg
mov
add
inc
fwait
je
pop
add
ins
sub
inc
idiv
sub
sbb
sbb
imul
test
shl
xor
call
cdq
sbb
pop
inc
xor
(bad)
out
xor
outs
lods
sahf
cmp
retf
cmp
out
(bad)
(bad)
mov
and
pushf
cmps
push
mov
rcl
repnz
jb
push
cli
rol
ins
enter
dec
mov
shl
sub
mov
cmp
jmp
push
pop
je
xchg
sahf
xchg
lock
cli
ret
and
jne
and
sub
xchg
push
push
and
mov
push
inc
mov
jae
cli
sub
test
and
mov
mov
out
mov
cmp
int3
loopne
mov
ins
ss
fimul
jle
jg
outs
add
jmp
out
retf
push
adc
js
ret
imul
cwde
rol
mov
hlt
dec
adc
mov
call
ret
ror
cmp
adc
mov
jno
cmp
jmp
adc
ret
int3
xchg
sbb
add
(bad)
cmp
ins
jne
cmps
jecxz
imul
xchg
inc
pop
clc
sub
push
mov
mov
inc
test
pop
dec
pop
imul
cli
ror
leave
cmp
mov
fld
jle
pop
mov
dec
cmp
fadd
add
mov
cmp
jmp
sbb
addr16
leave
es
xchg
push
mov
clc
aam
mov
scas
call
mov
adc
cmps
lahf
dec
mov
cmp
cmp
rcl
mov
jo
out
jle
jnp
jnp
bound
fucom
mov
jno
inc
call
pop
push
arpl
cmp
sbb
lods
pop
push
dec
jbe
pop
dec
push
or
mov
push
sahf
cli
sbb
push
out
jle
pop
sub
and
adc
repnz
clc
mov
mov
imul
mov
fist
mov
cld
xchg
test
push
mov
jle
fsub
mov
jo
out
and
xchg
je
stc
jns
inc
cdq
movs
xor
push
pop
adc
sub
add
cmp
add
outs
mov
push
rcr
push
retf
js
and
adc
inc
mov
push
xor
add
pop
pusha
data16
stos
dec
push
sbb
mov
cmp
jge
mov
adc
lock
in
cwde
nop
jmp
jne
loop
ficom
jg
xlat
mov
cmp
xchg
pop
push
lods
js
and
inc
cmps
gs
pop
(bad)
test
mov
add
jp
pusha
es
rol
inc
sub
in
stos
add
push
adc
inc
adc
mov
inc
push
sub
fcom
stos
test
adc
pushf
ins
fwait
xlat
adc
jg
std
ins
enter
inc
and
sbb
sti
out
pop
or
pop
inc
scas
int
loop
xchg
or
imul
aad
dec
fcmovu
xor
call
fsubp
xchg
sahf
ins
ret
xor
push
jl
cmp
loop
push
movs
mov
mov
sub
test
int
lods
jg
xor
mov
aam
movs
fld
(bad)
ja
lods
out
or
jns
stc
leave
push
and
cmp
and
ror
call
push
mov
test
xchg
sbb
cmp
(bad)
ror
scas
or
(bad)
push
popf
mov
inc
and
shr
inc
imul
scas
retf
cmp
and
mov
mov
out
std
dec
xor
pop
mov
xchg
fist
(bad)
mov
sub
test
sbb
mul
mov
enter
fld
fsubr
sub
ins
fnstenv
loopne
popf
sub
ror
pop
mov
dec
fnstenv
cmp
popa
rcr
mov
or
xor
and
adc
xor
xor
inc
mov
jp
mov
fs
shr
push
and
mov
es
shr
dec
adc
icebp
add
aaa
xchg
sub
lea
sub
(bad)
in
mov
sub
jl
add
loop
xchg
push
in
mov
push
jp
lds
xchg
popf
movlps
push
mov
test
push
(bad)
mov
adc
std
jnp
mov
cmp
retf
pop
mov
add
inc
mov
and
pop
dec
cld
les
pop
scas
leave
add
cld
sub
jae
pop
cmp
ins
sti
mov
mov
jp
or
jns
fld
pop
jp
add
jno
ror
sub
ss
mov
in
add
pusha
stos
outs
(bad)
cld
cmc
xchg
or
cmp
pop
imul
mov
cmp
in
dec
push
in
fst
sti
repz
cld
pushf
xchg
out
adc
imul
movs
dec
jle
xor
ret
stc
stos
dec
xor
leave
(bad)
and
xor
dec
push
arpl
js
push
out
mov
sahf
sub
push
out
aad
je
cdq
repz
retf
sbb
fwait
jbe
sub
ins
fistp
xchg
jno
and
dec
(bad)
cmp
mov
mov
jle
push
cld
in
mov
mov
jae
push
cmp
bound
xor
jnp
mov
fisubr
dec
test
xor
ins
mov
leave
std
loopne
xchg
xchg
sub
mov
pop
popf
(bad)
in
arpl
sub
in
(bad)
je
sbb
inc
dec
mov
rol
sub
(bad)
cld
dec
and
mov
(bad)
sbb
out
icebp
jnp
cmps
push
iret
add
mov
sti
cmp
into
cmps
dec
ret
mov
sahf
or
enter
ja
xchg
repnz
mov
or
inc
cmp
nop
aam
cmp
adc
push
pop
aaa
gs
dec
cmps
cs
daa
bnd
cmp
dec
fucomip
(bad)
and
sahf
es
cwde
sub
arpl
fcomp
movs
ss
or
lea
sub
cld
lods
or
sub
dec
jnp
dec
into
jle
imul
jae
mov
lea
jmp
icebp
daa
jmp
fmul
sbb
scas
sbb
cmp
push
in
add
loopne
push
push
fadd
enter
or
clc
mov
push
dec
lock
inc
fld
(bad)
in
call
lock
mov
(bad)
out
in
popa
aad
enter
xor
aas
xor
pop
mov
lods
call
jge
jns
das
daa
jno
sbb
out
add
dec
adc
fbld
jo
or
mov
std
cmc
pop
pop
lods
pop
pop
aaa
int
and
call
clc
sar
jle
repz
inc
or
add
call
sbb
or
cmps
inc
jmp
(bad)
pop
inc
inc
push
add
aam
setg
adc
jne
repz
jmp
adc
clc
std
aam
push
add
pop
fdivrp
movs
xor
ret
test
and
jp
push
mov
sbb
cdq
mov
out
push
jns
mov
inc
xchg
fsub
mov
popf
pop
int3
fiadd
cmp
push
idiv
rcl
rol
movntq
cmp
div
ret
adc
imul
fcomp
out
daa
sbb
add
inc
loope
ds
cli
inc
xor
(bad)
aam
loop
div
xchg
fcmove
jle
xor
pop
cmp
test
stos
ret
pop
out
movs
mov
das
mov
mov
jno
mov
pop
push
ja
add
imul
ins
hlt
(bad)
xor
jmp
(bad)
shl
rol
and
pop
add
push
push
cmps
or
inc
fcmovb
rol
mov
xor
je
std
rcl
out
xor
pop
cmps
xchg
push
fbstp
daa
ret
mov
lods
popa
sub
xor
push
shr
mov
adc
js
mov
out
daa
inc
add
cmp
pop
pop
ror
xchg
ja
mov
cwde
push
adc
adc
mov
jmp
xchg
pop
fwait
cmp
hlt
je
out
and
mov
add
mov
xchg
les
cmp
jae
pop
adc
inc
les
or
mov
es
frstor
sar
pop
dec
xchg
xor
xchg
dec
pop
lock
imul
retf
or
mov
mov
cmp
cmc
mov
sub
js
call
je
xor
and
int
cmc
jmp
ret
jg
in
sbb
sbb
xchg
imul
dec
add
fidiv
or
pop
arpl
and
mov
jae
mov
jge
lea
shl
fst
ret
(bad)
cdq
mov
sbb
dec
sub
dec
sub
repnz
and
sbb
or
pop
mov
test
jle
and
dec
inc
pop
push
mov
imul
jp
xor
push
not
in
jl
cld
mov
jp
cmp
setne
stc
jge
cld
aad
ror
add
jle
retf
jecxz
jmp
jl
and
jl
inc
inc
ja
pop
add
iret
es
inc
data16
jno
repz
add
test
push
call
cmp
pop
push
(bad)
mov
push
sbb
les
(bad)
inc
xor
and
xchg
clc
aad
aaa
pop
ret
fsubr
push
xor
sbb
sub
or
mov
ja
es
jbe
out
and
or
aaa
adc
xor
data16
(bad)
xlat
cmps
mov
mov
inc
jge
mov
push
inc
xor
xchg
push
lahf
and
jmp
fsincos
mov
jae
test
les
or
stc
aad
cmps
ja
scas
push
stc
cmp
cmp
xor
sbb
sbb
(bad)
inc
jg
std
mov
ret
mov
or
push
nop
xchg
mov
or
sub
dec
iret
imul
nop
mov
shl
and
ror
(bad)
xchg
mov
loopne
add
jecxz
(bad)
dec
adc
icebp
and
movs
bound
jno
mov
pop
add
scas
adc
vpcmpgtb
nop
lds
push
movs
inc
add
bound
push
mov
dec
push
sub
xor
push
shl
mov
pop
fwait
jmp
mov
mov
loopne
in
and
repz
fld
pop
dec
push
jae
icebp
cmp
pop
cmp
repnz
jmp
popa
adc
push
dec
mov
or
ret
aas
and
xchg
sbb
sti
or
pop
imul
lock
or
rol
retf
mov
ins
mov
pop
out
sar
daa
xchg
bnd
push
jl
or
or
stos
and
cmp
arpl
imul
adc
cmp
adc
(bad)
jo
movs
rcl
cmps
push
mov
in
ret
inc
test
xlat
dec
xchg
(bad)
int
dec
(bad)
iret
ret
shl
push
pop
fld
inc
in
jmp
stc
cmp
sub
xchg
fild
sub
in
sbb
in
cmps
popa
mov
mov
mov
jno
movs
xchg
xchg
aaa
arpl
lods
repz
cmps
push
aad
clc
inc
scas
dec
dec
into
mov
adc
sbb
mov
ret
mov
out
inc
popf
je
js
outs
in
pop
scas
or
sbb
lds
jnp
cmp
adc
cli
imul
ss
enter
sub
loop
cli
das
mov
push
inc
loop
mov
lods
hlt
cmps
cmp
xchg
popf
into
ror
add
or
xchg
and
bound
sub
jno
imul
popf
jno
push
pop
das
(bad)
mov
pop
add
retf
mov
jmp
adc
nop/reserved
jl
pusha
mul
ins
mov
cmps
mov
xchg
jo
jg
addr16
xor
mov
into
xchg
popf
cdq
xchg
inc
call
cmps
scas
adc
enter
pop
out
cmp
jno
in
mov
inc
sub
popa
cmps
cmp
adc
push
cli
gs
jne
test
xor
sbb
push
or
jmp
icebp
ja
loope
ins
mov
cdq
add
daa
or
pop
push
mov
(bad)
pop
mov
lods
sbb
cmp
sub
sahf
or
cwde
cwde
cmp
dec
jmp
push
cld
xor
inc
cmp
retf
sub
aaa
push
jb
shl
cmps
data16
pop
push
shl
or
dec
cmps
lods
xchg
cmps
div
das
mov
jbe
mov
movs
pop
mov
inc
mov
or
xor
popa
inc
mov
or
stc
adc
fsubrp
mov
adc
movs
xlat
dec
lea
cmps
loop
push
movs
add
sbb
mov
sar
outs
lea
bound
or
inc
or
shl
pop
xchg
lods
push
mov
data16
mov
popa
mov
or
repnz
mov
imul
adc
jmp
into
jbe
cmp
push
xlat
jecxz
sub
jp
test
movs
out
mov
out
repz
(bad)
adc
jmp
jns
cmc
(bad)
repnz
repz
ss
(bad)
fs
clc
ret
test
lods
gs
push
shr
mov
pop
fnstcw
cmp
sbb
movs
mov
dec
jge
add
push
test
push
and
je
sbb
inc
ja
fsub
aas
jmp
and
les
push
imul
popf
cmp
mov
and
add
mov
inc
pop
out
mov
jmp
aaa
mov
sub
dec
add
test
or
fwait
and
cmps
das
sbb
test
mov
cmc
outs
inc
ror
das
pop
in
rcl
or
and
aam
sub
mov
jmp
scas
add
(bad)
jne
out
jge
adc
pop
test
adc
jns
inc
stc
fbld
adc
or
and
push
shl
cdq
(bad)
daa
xchg
sbb
and
xor
and
jl
mov
clc
fsubr
xor
jo
repnz
lds
adc
jl
sub
sub
jl
inc
dec
adc
mov
rcr
dec
mov
adc
bound
push
call
dec
(bad)
lds
jno
sbb
xor
jg
sub
mov
ret
hlt
sbb
pop
cmp
sub
mov
test
mov
or
and
mov
stos
aaa
nop
fwait
pmuludq
xor
mov
inc
cmp
sub
jl
and
div
fcom
push
push
mov
std
retf
bound
out
inc
mov
retf
push
mov
xor
inc
add
mov
xor
dec
and
and
xor
inc
mov
sbb
cmps
cmps
pop
or
xchg
scas
push
(bad)
mov
fdiv
adc
push
jmp
inc
dec
fadd
push
push
mov
and
lock
add
aad
dec
jp
mov
sub
push
frstor
fdiv
add
xchg
in
in
pop
xor
or
jae
sub
sub
and
push
addr16
jecxz
gs
daa
push
int3
xchg
xlat
jmp
cdq
iret
lahf
mov
add
jg
mov
cdq
inc
add
pop
adc
mov
push
enter
jg
add
movs
call
ror
and
popa
mov
(bad)
xor
(bad)
jo
cmp
sub
mov
adc
int3
(bad)
mov
push
pop
jns
mov
stc
ds
cs
jl
sub
fld
pop
add
pop
rcl
test
dec
adc
into
pop
(bad)
fisttp
call
inc
icebp
dec
nop
out
adc
xor
ret
daa
push
mov
jmp
push
rcl
hlt
inc
jge
(bad)
sbb
or
enter
jo
lods
add
push
push
mov
push
cmc
lock
out
ror
mov
push
add
jo
ins
mov
(bad)
or
xchg
and
pop
into
mov
ret
dec
sahf
fiadd
push
inc
ins
add
fwait
ins
les
pop
(bad)
ror
ds
fsubp
cmp
enter
addr16
cmp
push
es
jge
lds
mov
mov
or
xchg
shl
pop
mov
push
sub
in
repnz
mov
pop
cmps
in
pop
add
cmp
xchg
leave
dec
push
mov
sbb
ins
mov
or
mov
push
adc
cld
bound
jle
ds
mov
mov
sub
inc
pop
pop
cmp
mov
push
xchg
dec
ds
xchg
jbe
les
or
cmp
je
out
cmp
stc
call
mov
mov
test
into
(bad)
sti
adc
test
addr16
or
cmc
sbb
movs
push
mov
gs
or
jg
test
push
sti
sar
xlat
adc
test
and
push
int
mov
adc
sub
push
mov
(bad)
xor
mov
sbb
and
inc
dec
call
and
jmp
lods
int
shl
cmps
clc
mov
push
dec
ins
fld
xor
aad
push
(bad)
in
pop
test
or
in
das
sbb
(bad)
adc
xlat
jb
lods
jmp
adc
popf
in
add
fcom
aaa
daa
js
or
cli
pop
movs
mov
ss
pop
ja
inc
scas
in
imul
fwait
ret
call
(bad)
shl
push
xor
fstp
(bad)
(bad)
sbb
mov
(bad)
pop
and
adc
inc
inc
cmp
inc
stos
dec
mov
in
loop
loop
pushf
outs
pop
mov
push
out
fdiv
jmp
cmp
test
fnstsw
push
sahf
in
jb
add
jmp
xchg
mov
test
pusha
int3
push
fsub
mov
aam
xor
dec
bswap
xchg
and
sbb
mov
sub
test
mov
pop
adc
xor
stc
or
dec
push
push
sbb
in
das
ret
cdq
push
lock
cmp
mov
or
inc
mov
inc
sbb
out
push
cld
out
mov
loope
sti
hlt
test
dec
enter
mov
and
icebp
retf
jno
push
or
stos
test
inc
(bad)
cld
es
sbb
push
jno
fstp
movs
inc
hlt
test
mov
into
push
lods
imul
in
shl
mov
sbb
in
mov
dec
rol
adc
pop
mov
aaa
or
fucomi
test
or
jb
push
mov
push
cwde
repz
adc
(bad)
mov
adc
repz
rol
loop
mov
dec
inc
xor
ds
mov
adc
(bad)
cwde
or
xchg
cmp
xor
mov
(bad)
push
sar
cmc
data16
add
cmp
cmp
sti
and
(bad)
leave
mov
adc
aas
repz
jns
push
mov
jge
and
mov
inc
push
push
push
(bad)
mov
xor
in
sub
repz
ds
mov
mov
xrelease
mov
cld
pusha
dec
dec
out
pop
xchg
sysret
in
mov
mov
dec
in
xor
xor
fcom
daa
xchg
rcr
adc
test
xor
bound
sub
add
add
je
mov
pop
in
mov
pand
xchg
xchg
pop
in
xchg
cmps
ret
neg
sahf
and
pop
icebp
adc
push
repnz
mov
imul
cmc
ins
or
jp
and
frstor
outs
and
pop
mov
add
mov
sbb
xchg
arpl
out
aas
and
mov
or
repnz
out
mov
mov
cdq
scas
aam
push
jl
mov
fdivr
cmc
mov
aam
push
int
push
aad
mov
fstp
or
test
(bad)
fisttp
or
push
mov
fdivr
cmp
sub
das
mov
sbb
vpunpckhbw
cmps
test
xlat
call
retf
call
repnz
jge
aad
sbb
repz
pop
dec
add
and
and
pop
pusha
(bad)
mov
iret
(bad)
ins
jmp
add
sub
push
ret
or
ror
stos
xchg
loop
cwde
mov
mov
outs
popa
aam
pop
dec
cwde
dec
jae
in
add
movs
mov
rcr
pop
scas
mov
dec
addr16
inc
push
pop
std
setl
loop
retf
arpl
cmc
and
add
sub
scas
jo
push
adc
call
arpl
dec
sbb
out
cmp
mov
mov
movs
pop
in
inc
mov
xchg
dec
adc
jbe
sub
outs
daa
scas
shr
repz
push
icebp
and
sbb
not
clc
fld
cmps
stos
pop
cmp
in
jno
pop
dec
xchg
or
push
out
xchg
icebp
push
cmp
pop
inc
jecxz
sti
and
or
in
xchg
pop
loop
add
mov
adc
mov
or
mov
jae
xchg
nop
mov
mov
cmps
sbb
stos
das
mov
jg
push
cmp
lds
cdq
int
cmp
add
(bad)
sub
add
mov
push
mov
dec
push
mov
jle
ret
cmps
xchg
out
retf
out
jp
cmp
adc
cmp
mov
mov
fdiv
out
div
stc
pop
call
xchg
retf
pop
sbb
sti
nop
add
mov
and
and
pushf
mov
movs
cmp
out
mov
in
out
mov
xchg
scas
in
pop
ja
call
cmp
xchg
sbb
packsswb
and
call
xchg
dec
inc
mov
pop
shl
push
ins
mov
jge
maskmovq
not
and
cmp
shl
sbb
xchg
sbb
ficom
and
and
into
inc
cdq
inc
push
pop
adc
repnz
xor
arpl
ja
js
fcmovnb
mov
sub
dec
xor
add
(bad)
sbb
scas
inc
idiv
dec
jmp
xor
retf
ret
xchg
mov
stos
xor
add
or
pushf
sub
or
mov
sbb
inc
jb
xchg
sbb
pop
movs
iret
add
sub
adc
(bad)
push
cmp
ds
and
xchg
cdq
push
inc
jb
loopne
out
repz
in
mov
cdq
(bad)
xchg
movs
jl
in
(bad)
cmp
cmp
loop
add
sub
scas
and
mov
call
sti
adc
fs
sub
cmps
cmp
movs
ja
cwde
and
sti
mov
jmp
and
in
sub
movs
(bad)
cs
and
xchg
xor
and
rcl
inc
cmp
loope
pop
add
sti
and
mov
cld
jmp
dec
ins
(bad)
lahf
fsubr
ja
in
lahf
mov
push
mov
mov
js
inc
fsubr
sub
in
lahf
adc
push
imul
mov
pop
add
scas
outs
outs
stos
mov
pop
pop
nop
push
(bad)
mov
scas
mov
mov
sbb
pop
loopne
ja
or
and
loop
or
push
out
in
and
pop
push
cmp
mov
jns
(bad)
div
jg
xor
or
dec
and
xchg
dec
sbb
jae
add
aaa
leave
sahf
xor
test
test
mov
sbb
adc
add
pop
fs
inc
jne
sub
fs
or
in
xchg
not
jnp
test
ret
icebp
and
inc
pop
in
test
scas
pusha
(bad)
outs
sub
push
dec
jnp
dec
test
xchg
mov
je
pop
mov
ret
out
sbb
inc
pop
jle
shl
aad
xor
push
push
mov
stos
popa
rcl
xor
lods
fsub
sbb
xor
je
sub
addr16
(bad)
je
(bad)
movs
mov
fadd
jmp
mov
push
dec
out
sub
adc
push
imul
jle
cld
cmp
fidivr
data16
popf
add
imul
push
push
cmp
enter
inc
cmp
test
mov
addr16
mul
dec
aas
pushf
in
pop
mov
jno
or
inc
sbb
in
cmp
stos
enter
fild
scas
push
sahf
pop
addr16
mov
cli
call
sub
adc
retf
jnp
xor
cmps
test
movs
pop
pop
dec
repz
ss
pop
mov
mov
je
out
fist
xchg
mov
push
inc
add
mov
nop
inc
addr16
stc
mov
fisub
and
int3
cmps
bound
push
and
mov
xor
sahf
sti
daa
imul
mov
mov
or
fdivrp
and
gs
or
adc
jae
mov
mov
mov
mov
pop
add
mov
pop
fwait
or
adc
jge
push
test
loop
inc
mov
xchg
jmp
lds
rol
xor
mov
mov
cs
call
mov
xchg
sub
int3
daa
jl
sbb
repnz
xchg
fadd
sti
xchg
not
cmp
xchg
(bad)
cmp
mov
ins
(bad)
xchg
fild
inc
inc
jg
jle
sbb
(bad)
or
mov
cmps
inc
dec
rol
jb
scas
repz
aas
in
test
ret
dec
jb
mov
inc
xor
mov
dec
mov
xor
jnp
xor
js
call
fwait
mov
test
mov
mov
shr
movups
out
push
movs
xchg
jp
and
imul
push
in
sahf
jmp
ss
sub
cmp
jl
sub
mov
loopne
inc
xchg
mov
pop
mov
(bad)
lahf
lods
add
mov
ffreep
or
mov
pop
lods
lods
or
push
retf
mov
sti
mov
fnsave
sbb
mov
and
aas
ss
es
xor
fsub
mov
cli
pusha
movs
or
mov
pushf
jle
add
mov
idiv
ret
das
les
push
jnp
push
or
jmp
xchg
pop
les
inc
xchg
xchg
div
pop
sahf
test
js
fdiv
mov
and
test
adc
sbb
sub
out
scas
nop
push
inc
outs
sbb
stos
popf
lahf
cmp
push
lods
push
cmp
mov
enter
outs
cmovle
retf
mov
clc
scas
les
jnp
arpl
dec
mov
popf
mov
aas
inc
inc
xor
mov
les
jl
or
lahf
add
neg
mov
out
or
in
xchg
adc
jmp
lea
sub
ficom
movs
sub
ror
ret
je
jne
into
cmp
je
test
lods
pop
xchg
es
mov
mov
pop
fwait
dec
arpl
dec
jl
das
fldenv
or
sbb
xchg
inc
xlat
ficomp
loop
pop
mov
adc
repz
xchg
popa
mov
mov
outs
mov
cmp
sub
mov
and
jmp
and
sbb
add
test
adc
daa
mov
dec
shl
dec
dec
(bad)
sbb
push
pop
xor
mov
test
rol
inc
mov
test
add
or
ss
push
ja
cmp
popf
pop
cmp
outs
cld
adc
and
out
stc
loop
stos
into
inc
mov
fcomp
mov
leave
cmp
aaa
nop
popf
lea
movs
call
mov
inc
fnstsw
xchg
mov
xor
out
and
jmp
cwde
imul
loope
pop
fwait
and
mov
jmp
ror
iret
stos
pop
pop
xor
scas
mov
(bad)
push
pusha
inc
cmp
gs
jp
jg
push
out
scas
out
loopne
aas
xchg
cmc
xlat
stos
xor
inc
in
add
inc
fwait
test
into
cmps
fdivr
mov
adc
cmp
retf
test
inc
mov
mov
fs
fist
lds
mov
shl
stc
xchg
sub
jmp
imul
shl
lds
sbb
xor
mov
xchg
dec
mov
cmp
pop
jo
pop
fimul
sub
jg
push
(bad)
(bad)
jae
mov
inc
sub
jl
cmp
xchg
xlat
cmp
dec
push
not
daa
dec
fbstp
in
or
adc
mov
dec
sub
in
cmp
inc
int3
xor
mov
xor
data16
pop
inc
jl
xchg
dec
adc
cmp
mov
push
sar
addr16
repnz
push
jge
stos
dec
mov
mov
xchg
and
stc
adc
ja
out
imul
add
sbb
ins
data16
test
outs
loopne
jnp
lock
into
sub
cwde
movs
lock
mov
mov
sub
and
movs
loope
in
inc
add
xchg
mov
pop
or
dec
sub
mov
cmp
fstp
push
adc
(bad)
mov
cmps
jno
sub
hlt
sahf
test
cmp
sub
lods
ins
rcr
popa
hlt
dec
nop
push
mov
dec
(bad)
stc
retf
call
hlt
fs
inc
mov
lock
sbb
leave
das
inc
mov
jae
dec
or
jge
les
jmp
sub
add
mov
inc
(bad)
sub
ret
out
or
and
pushf
ror
pop
or
jmp
cmp
cmp
std
adc
pop
inc
cs
push
pushf
loope
dec
ds
or
arpl
inc
or
cmps
jne
in
sbb
(bad)
fadd
or
jmp
jno
add
inc
cwde
enter
ror
cmp
dec
inc
add
adc
stos
pop
sbb
push
jns
push
sbb
nop
jge
cli
shl
mov
cmp
inc
pop
mov
xor
ds
nop
aas
mov
jge
mov
loope
imul
out
mov
sbb
push
mov
(bad)
dec
cwde
sub
cli
jbe
xchg
sahf
sbb
into
inc
or
mov
add
adc
js
loopne
cmp
aaa
adc
std
cli
add
lods
into
ds
fisttp
ror
add
int3
push
push
push
cli
sahf
mov
daa
mov
pop
mov
adc
jp
sti
call
sub
xchg
out
pop
lods
sub
imul
das
sahf
xchg
cdq
push
sub
jp
mov
sub
push
ds
movs
pop
mov
or
push
dec
sbb
test
fistp
shl
xchg
sub
(bad)
push
pop
pop
adc
retf
mov
mov
or
imul
or
retf
aad
scas
int
xchg
push
mov
jnp
stc
sub
adc
add
or
xchg
jb
adc
inc
in
xchg
push
mov
mov
pop
into
mov
xchg
int
and
xchg
fcmovnbe
pop
adc
mov
rcl
mov
xor
adc
es
pop
mov
sub
sub
in
dec
cmc
mov
dec
fs
xor
cwde
lea
jmp
aas
xor
out
mov
lods
stc
add
aad
pop
xchg
mov
mov
push
pop
sbb
shl
add
mov
pop
adc
std
jno
imul
test
xchg
pop
sbb
js
mov
jmp
dec
lods
popa
shr
and
ins
adc
loop
xchg
pop
sub
rcr
fs
neg
inc
cmp
pop
daa
inc
ins
sub
adc
sub
xchg
mov
out
dec
pop
in
push
xchg
sbb
ret
shl
sub
sub
in
icebp
and
mov
in
cld
inc
push
in
pop
loope
or
push
pop
aad
mov
mov
repz
jno
xchg
fs
mov
jp
add
cmp
(bad)
mov
sbb
push
faddp
mov
mov
fs
mov
leave
test
inc
sub
add
pop
or
add
pop
sbb
sub
inc
add
sbb
dec
mov
xchg
pop
mov
inc
jle
imul
jae
pushf
clc
jo
cdq
cmps
mov
sti
xor
aad
test
in
test
or
popf
mov
mov
cwde
(bad)
mov
push
fild
jo
or
dec
xor
adc
xchg
sbb
jbe
imul
xchg
xchg
shr
dec
mov
cmp
adc
jecxz
bound
jp
test
lods
mov
shl
je
out
mov
push
jne
loopne
gs
mov
adc
sub
xchg
mov
push
dec
iret
mov
adc
repz
jmp
push
mov
(bad)
enter
mov
mov
inc
je
(bad)
and
cld
imul
push
mov
gs
shl
adc
loopne
imul
leave
xchg
adc
and
mov
dec
leave
xor
push
pop
hlt
xchg
or
or
push
call
pop
xchg
mov
mov
adc
das
add
ror
add
cmp
jp
leave
daa
xchg
stc
cmp
dec
pusha
sbb
xchg
push
in
fidiv
ds
es
add
iret
fmul
imul
shl
test
pop
push
std
xchg
lods
or
jmp
test
mov
xchg
je
pop
jne
int
lods
nop
aaa
add
dec
(bad)
bound
fsub
adc
adc
sahf
in
(bad)
sub
cmp
iret
lods
sbb
adc
gs
rol
mov
cld
adc
mov
add
fadd
push
pushf
out
scas
bound
call
or
adc
cmp
clc
jl
adc
or
mov
cmp
mov
int
mov
sbb
cli
mov
mov
mov
pop
or
mov
or
mov
jbe
add
imul
imul
add
inc
and
ficom
add
es
dec
pop
mov
stos
add
std
mov
sub
sti
jno
pushf
sbb
cmp
pusha
es
inc
sar
inc
dec
movs
or
xor
pop
xor
shl
push
add
shl
in
loope
jmp
mov
icebp
inc
aad
adc
pop
outs
int
cmc
call
fcom
inc
stc
cmp
sbb
loope
pop
pop
movs
shl
seto
sbb
repz
mov
dec
mov
pop
(bad)
sbb
cs
push
or
cmps
adc
(bad)
dec
push
add
leave
mov
dec
lahf
push
pop
in
mov
pop
fnstsw
(bad)
sbb
add
push
jmp
inc
je
xchg
(bad)
nop
test
cwde
call
mov
sbb
repz
push
mov
into
jbe
ret
fmul
add
and
pop
mov
cs
add
out
cs
aam
cmp
test
and
aam
mov
out
out
push
mov
push
neg
inc
or
inc
call
inc
mov
push
and
mov
rcl
sti
out
push
dec
mov
nop
lds
pop
mov
adc
es
xchg
push
xor
jno
inc
mov
or
xor
sub
xor
les
fmul
jmp
in
xchg
cmps
hlt
ins
out
sbb
pop
addr16
lds
js
mov
and
outs
mov
xchg
popf
jmp
mov
mov
scas
hlt
(bad)
mov
or
addr16
ret
push
or
mov
push
sti
jmp
call
add
dec
jle
push
nop
jle
push
rcr
xchg
mov
mov
repnz
retf
inc
dec
sub
mov
fist
stos
cmp
jns
sbb
int3
mov
xor
movs
loope
(bad)
or
shl
xchg
jbe
imul
mov
jle
icebp
push
mov
push
mov
std
push
sahf
pop
cmp
cmc
mov
shr
repz
xor
sub
in
mov
xor
leave
jmp
outs
inc
and
ins
mov
rcr
scas
xchg
pop
xor
movs
mov
or
ret
lods
cmp
nop
mov
inc
rcl
mov
lahf
jno
(bad)
int
pop
movs
xchg
cmp
cmp
xor
xor
js
mov
sub
sbb
ret
adc
mov
(bad)
mov
leave
fild
ins
int3
pop
mov
push
jmp
mov
jl
xor
and
sahf
inc
and
test
add
and
xor
pop
push
pop
je
jle
push
xor
pop
cli
test
mov
popa
push
jl
test
repz
jmp
int
xchg
or
xor
pop
inc
jo
push
mov
movs
xor
ss
in
fs
pop
int3
out
enter
add
sbb
ins
daa
ret
sar
or
out
fdiv
mov
xchg
in
call
dec
popa
retf
in
stos
xchg
repz
inc
mov
or
test
inc
sbb
jg
cmp
enter
xor
enter
add
retf
dec
pop
xchg
test
rcl
ins
push
pop
jno
popf
mov
adc
call
loope
(bad)
imul
sub
push
data16
outs
push
dec
xchg
add
loope
mov
ss
fldcw
jmp
loope
ror
push
mov
out
jmp
lds
push
mov
push
push
es
xchg
mov
dec
jne
mov
jmp
mov
xor
test
int
imul
std
inc
xchg
xchg
jle
mov
mov
outs
mov
xlat
or
xor
ror
pushw
inc
jle
push
mov
cmp
imul
mov
push
or
push
aas
addr16
add
cmp
jae
fst
xor
lods
int3
fadd
setbe
lahf
int3
daa
cmp
and
leave
fdivr
les
xchg
(bad)
cli
mov
fwait
or
inc
or
mov
je
xor
das
inc
test
adc
call
mov
mov
std
(bad)
dec
mov
(bad)
mov
cwde
mov
add
mov
ins
lds
ret
jne
sub
cdq
pop
fs
add
push
loope
ret
cmp
lods
add
push
call
ins
jecxz
call
and
iret
adc
ins
pop
jnp
js
xchg
cmps
push
xchg
mov
imul
ja
mov
frndint
pop
ins
sbb
jnp
add
loope
mov
fs
rol
jno
dec
shr
data16
mov
ret
movd
xchg
cmp
loope
test
mov
leave
jecxz
mov
adc
div
dec
leave
sti
xor
repz
(bad)
push
push
sbb
jnp
sbb
nop
mov
mov
mov
iret
xchg
cmp
push
aam
pop
xchg
inc
stc
mov
aad
std
int
pop
pop
scas
mov
jge
adc
repnz
xor
dec
pop
test
xor
inc
leave
push
(bad)
ret
es
jmp
lahf
jmp
inc
sbb
mov
cmp
jecxz
out
add
or
fstp
pop
add
fdiv
mov
sub
mov
push
adc
pop
xchg
dec
mov
clc
dec
add
pop
or
xchg
dec
cmp
or
pop
push
test
sub
or
and
data16
and
pop
inc
push
sub
add
jb
int3
test
fwait
inc
imul
mov
mov
in
pushf
nop
pusha
adc
xor
pop
cmps
inc
outs
(bad)
nop
ficom
adc
jl
adc
xor
or
std
adc
mov
adc
adc
cmc
movs
retf
ret
inc
xchg
push
ficom
add
lea
push
data16
dec
xchg
push
cs
dec
cli
or
(bad)
xchg
adc
pop
lods
ret
ds
push
mov
in
mov
dec
or
jo
int
jge
int
adc
ror
mov
ss
(bad)
rol
mov
push
xor
aad
jnp
stos
cmp
loop
xchg
(bad)
popa
leave
dec
xor
out
add
push
adc
jle
mov
imul
inc
enter
in
or
out
push
dec
in
mov
dec
lods
loope
sbb
shl
dec
jne
shr
and
loope
lods
aaa
xlat
std
sahf
ins
dec
arpl
push
aaa
pop
sti
leave
popf
leave
inc
add
sbb
icebp
add
pop
mov
mov
repz
pushf
jns
pop
or
jbe
aaa
adc
dec
dec
arpl
pop
pop
in
addr16
addr16
jae
aad
sbb
(bad)
in
inc
jo
and
push
into
or
jecxz
add
xchg
mov
idiv
jns
xchg
clc
sub
dec
stos
xchg
stc
ss
into
adc
sbb
mov
mov
cmp
push
cmc
fcomip
sti
mov
(bad)
(bad)
push
sub
int
mov
inc
nop
mov
inc
cmc
dec
mov
movs
xor
out
dec
cmc
ds
push
jo
xchg
hlt
scas
std
and
addr16
cmp
ds
repnz
cmp
xchg
in
mov
push
cmp
sti
out
js
add
movups
mov
fs
pusha
into
mov
jmp
dec
std
or
nop
dec
aas
inc
(bad)
mov
add
into
jmp
loopne
ret
jmp
repz
sub
sub
retf
push
mov
cmovle
in
out
out
mov
ret
(bad)
imul
mov
mov
pop
daa
int3
or
movs
adc
loope
loopne
int
pusha
mov
add
add
and
xor
das
ror
jmp
dec
add
cs
push
ja
cmc
mov
dec
pop
arpl
fcom
inc
and
mov
jg
not
jno
mov
mov
jb
dec
popa
mov
push
mov
stos
push
pop
pop
(bad)
mov
xor
scas
fidiv
xchg
push
xor
jns
retf
add
lods
mov
pop
cmp
xchg
aas
mov
jo
aas
mov
dec
mov
ins
outs
pop
rol
and
enter
pop
inc
je
and
push
or
add
fucomi
ja
pop
pusha
hlt
push
mov
dec
mov
inc
jns
mov
jmp
sbb
pop
lods
stos
iret
and
xchg
jnp
jne
push
dec
and
add
rcl
adc
lds
mov
imul
repz
js
je
das
loop
rcr
imul
sub
mov
repz
add
mov
scas
pop
enter
shl
out
loope
pop
add
dec
pop
cmp
mov
outs
or
adc
sub
dec
(bad)
push
loopne
in
pop
jo
xlat
push
ffree
sub
sar
adc
sar
push
out
cli
js
cmp
stc
mov
mov
sub
xor
popf
or
dec
push
push
or
adc
xor
mov
xchg
jle
mov
adc
stos
mov
pusha
ins
xor
cmc
das
mov
or
ja
bound
mov
and
jmp
(bad)
or
clc
xor
jnp
push
(bad)
rcr
repz
fisub
sbb
and
mov
adc
add
cmp
pusha
push
popf
xchg
push
cmp
(bad)
jne
xor
jne
pop
and
(bad)
jmp
xor
xchg
add
stos
mov
cld
into
gs
inc
xor
jns
cmp
add
adc
or
mov
sbb
xchg
js
ret
and
das
mov
loop
cmps
pop
popa
or
inc
(bad)
enter
lds
imul
jmp
add
cmp
(bad)
mov
(bad)
inc
xlat
and
pop
aaa
push
add
clc
dec
gs
jp
mov
shl
dec
jb
ins
cmp
ja
mov
pop
std
xor
shr
sbb
ror
adc
shl
mov
sahf
adc
ins
test
xchg
adc
xor
sub
mov
(bad)
jno
push
rcl
icebp
inc
hlt
imul
xor
jl
dec
inc
jg
shl
fbld
iret
inc
or
(bad)
in
inc
test
addpd
jne
cwde
and
div
or
outs
cmpxchg
push
and
in
xchg
fcmovnu
jg
inc
pop
ins
call
sbb
inc
addr16
ins
mov
inc
xchg
adc
call
js
dec
sbb
into
xchg
cli
push
adc
arpl
pop
mov
jp
cmp
inc
sbb
jb
or
in
sub
sbb
push
loopne
mov
loope
adc
fisubr
jmp
ror
jo
call
dec
aaa
int3
xchg
sbb
loopne
xor
cwde
jae
push
in
not
and
outs
(bad)
js
sub
outs
mov
adc
or
add
xchg
cmp
aam
add
test
adc
les
mov
addr16
mov
mul
mov
(bad)
in
ret
and
jmp
mov
xchg
inc
test
(bad)
and
push
(bad)
ret
call
jb
ror
out
adc
adc
bound
inc
or
movs
icebp
cli
sbb
mov
xchg
add
cdq
leave
xchg
add
xor
jge
sbb
cwde
xor
mov
mov
push
data16
frstor
pop
das
jle
pop
iret
scas
add
push
xor
jae
sub
push
mov
dec
dec
test
loopne
xlat
loope
and
sub
push
sahf
mov
mov
icebp
cdq
cmc
inc
sbb
iret
loop
inc
push
jno
icebp
and
loopne
xchg
gs
add
pusha
push
xor
std
mov
scas
cmc
add
pop
daa
xchg
add
dec
fldenv
or
sbb
cli
inc
mov
rcr
and
retf
dec
jbe
pop
cmp
jb
addr16
mov
test
inc
stos
sbb
int3
dec
fdivr
test
pop
jnp
fcomp
xlat
push
and
rcl
sub
shl
jno
push
sbb
mov
mov
(bad)
pop
dec
and
enter
es
lods
pushf
cmp
xchg
ds
push
ret
xor
jge
(bad)
cld
fld
sbb
jp
mov
lock
or
xlat
dec
in
sub
loopne
mov
push
cdq
repnz
mov
outs
xchg
rcr
call
sbb
lods
and
in
push
rcr
cmp
add
pop
and
aam
lods
pop
pop
shl
cmps
packuswb
scas
ret
pop
mov
jne
sbb
or
adc
cmps
xchg
xlat
in
sub
cmps
sub
fmul
or
push
rol
ss
fmul
scas
cld
sub
pop
cmp
cmp
(bad)
xor
(bad)
mov
lock
mov
jmp
jmp
btc
cwde
inc
xor
pop
mov
in
push
push
es
mov
jbe
(bad)
in
les
mov
push
pop
jnp
js
daa
mov
repz
xchg
cli
mov
adc
dec
xchg
call
mov
out
ss
out
mov
fwait
das
lods
push
inc
mov
out
inc
rcl
xor
nop
push
xchg
sub
mov
pop
shl
es
ret
jmp
mov
dec
sbb
jge
out
loope
sbb
add
adc
imul
fimul
xor
ret
adc
xchg
pushf
stos
or
(bad)
stc
dec
lahf
dec
inc
push
sub
pop
test
mov
push
fwait
jno
enter
push
cmps
adc
mov
dec
sub
jl
je
inc
ret
pushf
sbb
mov
mov
mov
je
and
jb
ins
dec
sub
inc
ins
pop
add
jge
(bad)
sahf
in
cmp
add
(bad)
outs
xchg
fsub
mov
shl
push
outs
xchg
push
jmp
pop
inc
loopne
add
push
xrelease
inc
in
test
sub
mov
mov
pusha
sbb
(bad)
fldenv
popa
js
mov
inc
cmp
fimul
or
and
ror
jge
nop
push
push
(bad)
dec
inc
xchg
int
add
push
icebp
sub
or
and
mov
cmp
enter
arpl
mov
ins
push
inc
mov
xor
enter
sbb
mov
shr
clc
mov
int
and
inc
and
jmp
movs
and
shl
jae
or
and
inc
sar
or
fwait
push
scas
sbb
jmp
or
xor
jecxz
add
cmp
daa
push
mov
out
add
call
cmps
aas
outs
xor
sub
int3
mov
mov
and
add
leave
out
mov
mov
lahf
gs
mov
xchg
and
inc
dec
loope
sub
movs
fdiv
lods
sub
mov
aaa
nop
scas
adc
pop
(bad)
ss
fnsave
dec
mov
add
fild
fdivp
daa
lock
dec
(bad)
lods
push
cli
cdq
(bad)
test
xchg
mov
int3
xor
pusha
loope
pop
adc
sbb
mov
dec
xchg
inc
aas
test
adc
dec
jae
ss
jl
mov
jmp
pop
mov
inc
pop
stos
inc
or
test
mov
data16
call
popf
(bad)
bound
cmp
cmps
fsubr
pop
push
and
adc
out
xlat
add
ss
bound
xor
mov
mov
mov
sub
ds
sbb
and
cmps
clc
and
cmp
ins
adc
cmp
pushf
pop
xchg
xlat
xor
xor
call
movs
adc
cmp
cmp
fst
xchg
fistp
scas
push
pop
(bad)
push
fist
push
jge
mov
mul
sbb
mov
adc
dec
add
cwde
cli
pop
jle
enter
(bad)
jno
mov
sub
ror
pusha
imul
push
xor
neg
cmp
inc
inc
arpl
dec
imul
test
or
cdq
lods
sbb
mov
aam
imul
cmp
mov
and
sbb
dec
enter
mov
adc
mov
pop
mov
inc
sbb
dec
pop
lds
or
mov
retf
int
cmp
adc
outs
data16
retf
jae
sahf
lahf
adc
inc
jbe
bnd
jae
inc
mov
pop
fcomi
xchg
jb
mov
addr16
and
popa
jne
cmp
loope
test
stc
add
dec
stc
imul
add
loopne
cmp
cmps
adc
or
into
jle
loopne
and
xor
xlat
lods
cld
retf
lods
fdiv
jne
inc
or
ret
inc
fcomp
xchg
outs
xchg
add
scas
loopne
test
aad
xchg
outs
fwait
jns
inc
mov
add
scas
movs
out
aad
jge
xchg
pop
nop
dec
enter
dec
les
sub
xchg
rol
js
les
cdq
scas
xchg
sti
xchg
dec
cmp
xor
mov
cli
mov
cmps
adc
lea
and
dec
fistp
nop
inc
jle
(bad)
xor
xchg
loop
movs
and
mov
mov
adc
push
inc
sbb
in
mov
jge
ss
adc
in
fnstcw
dec
jg
add
fcom
(bad)
pop
mov
jmp
add
push
cmps
ror
fs
lds
call
mov
test
mov
hlt
or
fidiv
xchg
or
jg
push
dec
dec
ror
push
sbb
ret
jecxz
sbb
(bad)
push
sub
mov
jb
mov
push
jg
add
jmp
adc
movs
sub
mov
mov
xor
adc
dec
dec
pop
cmp
mov
xchg
icebp
popa
jo
out
(bad)
repnz
out
jns
add
in
sub
in
popf
jmp
xor
sub
pusha
jmp
fisubr
mov
int3
push
jne
rol
cmc
mov
int3
out
stc
pop
sbb
fisubr
shl
sub
ss
jge
xchg
jl
rol
push
or
ja
scas
inc
dec
xchg
test
add
jecxz
xor
xchg
cmp
dec
in
frstor
jle
clc
jge
inc
add
mul
jge
or
and
push
add
pop
std
aam
or
xchg
or
sub
mov
add
push
jmp
cli
dec
mov
imul
mov
add
and
les
inc
sub
mov
test
pop
rol
sub
lea
gs
repnz
imul
nop
push
pop
(bad)
jmp
fwait
je
and
or
mov
ret
or
stos
mov
inc
je
fmul
fild
sbb
jecxz
dec
push
mov
pop
push
(bad)
dec
jge
inc
adc
dec
jecxz
inc
mov
inc
fwait
xchg
push
test
cmp
test
leave
(bad)
lods
mov
dec
fisub
push
push
fsubr
mov
sbb
popf
or
inc
aam
push
xchg
loopne
cli
out
mov
scas
jmp
out
mov
sub
or
xchg
mov
orps
jae
popa
stos
fucomi
pop
push
cmp
test
aaa
xlat
outs
ret
mov
fst
js
dec
gs
sbb
cmc
ja
shr
or
sub
int
stos
js
sbb
pop
stos
sbb
jno
xchg
(bad)
popa
js
pusha
outs
and
xor
cmp
(bad)
and
jo
fiadd
in
sbb
xchg
je
xchg
mov
sti
cmps
pusha
pop
jae
push
inc
test
jp
dec
cmc
jnp
in
stos
test
pop
xchg
(bad)
movs
xor
inc
rol
ficom
xor
pusha
cmp
popf
xlat
int
mov
mov
aad
icebp
imul
sbb
mov
ins
fs
sar
arpl
add
mov
sub
or
cmp
lea
push
adc
std
mov
test
lea
mov
dec
mov
pop
mov
or
inc
aaa
mov
(bad)
xchg
pop
xchg
retf
cmp
in
cmp
xor
stc
jnp
add
add
mov
in
cmc
(bad)
movs
sbb
mov
pop
jge
and
scas
ret
loop
pop
scas
inc
call
test
jmp
into
pop
mov
mov
das
leave
xchg
(bad)
cmp
dec
pop
push
retf
mov
mov
ret
test
loopne
dec
je
xor
jp
ficom
or
mov
push
std
jno
movs
cmp
icebp
fs
push
lds
call
or
mov
mov
lods
aas
push
ja
dec
push
iret
imul
pop
movs
pop
pushf
pop
xor
xchg
cmp
sti
sbb
ins
push
push
sbb
stos
ins
out
int3
inc
fwait
aas
push
je
dec
popa
or
or
out
or
push
or
dec
mov
and
ja
sub
rcl
adc
les
loope
into
pop
dec
add
js
inc
adc
jne
push
in
call
in
jne
mov
xlat
adc
and
call
xchg
pop
loope
shr
push
loopne
inc
mov
cmp
xchg
lahf
cmps
inc
sbb
dec
pop
cdq
push
fild
add
or
dec
fcmove
inc
xor
cdq
jmp
popa
mov
stos
and
repnz
xor
sbb
xor
mov
sbb
ins
mov
test
adc
(bad)
jl
std
mov
mov
js
xchg
xchg
test
pop
cmp
leave
imul
stos
jnp
aaa
int3
cmps
cmp
push
push
sub
mov
out
push
pushf
xchg
dec
adc
nop
int3
inc
js
push
pop
sbb
jge
sbb
push
pop
jns
push
int
aam
sub
sub
pop
vmwrite
inc
inc
popa
push
push
adc
repnz
(bad)
into
mov
bound
mov
out
push
add
ss
or
xchg
push
pop
stos
xchg
xor
das
outs
sbb
mov
cmp
imul
in
and
pop
stos
call
pop
imul
pusha
pop
add
ret
imul
mov
jnp
shrd
cld
xchg
pop
add
xor
test
fadd
pusha
add
scas
(bad)
cmp
rcl
into
push
push
add
cmp
imul
mov
in
sub
gs
mul
mov
mov
ds
mov
jmp
xchg
xlat
mov
sbb
jmp
lods
cmp
shr
nop
or
movs
dec
adc
pop
xchg
adc
hlt
mov
or
adc
add
xchg
xlat
or
out
out
xchg
add
sar
lods
js
call
scas
movs
mov
dec
je
mov
data16
aaa
jb
fadd
data16
and
out
mov
ss
xchg
call
jge
lods
in
out
(bad)
mov
stc
mul
xchg
cld
sub
xlat
and
lods
or
jb
ror
mov
int
pop
xor
movs
fild
ror
mov
dec
xchg
inc
fdivrp
push
dec
push
xor
(bad)
pusha
sub
in
cmp
sbb
mov
push
in
fistp
in
shl
adc
cdq
retf
mov
retf
fs
fnstcw
dec
ins
xchg
icebp
je
pop
dec
sbb
xor
outs
push
scas
std
aad
cs
jbe
add
xor
dec
ror
dec
mov
push
popf
aad
inc
dec
push
and
xor
push
or
(bad)
js
adc
call
data16
pop
int
test
loope
icebp
push
test
les
mov
lea
sbb
dec
and
dec
xchg
jecxz
les
dec
and
test
lea
jl
push
mov
out
sub
call
push
sar
adc
xchg
out
cmp
out
call
enter
xor
test
jmp
pop
dec
test
pusha
es
xchg
mov
enter
mov
pop
ins
jle
call
int3
pushw
or
cmp
xchg
adc
pop
std
or
sub
xlat
aas
mov
popf
sbb
repnz
xchg
aam
adc
lods
xchg
xor
sbb
mov
aad
ficomp
jns
dec
stos
sbb
loopne
mov
mov
popa
fucomip
out
iret
cmp
pusha
js
loop
popf
int
and
daa
xchg
sub
or
mov
lock
mov
idiv
lea
mov
push
lods
lock
js
mov
fmul
mov
retf
jecxz
push
pop
inc
push
push
mov
sti
mov
neg
mov
pop
sbb
aad
jle
loope
push
add
jmp
pusha
mov
push
mov
dec
sbb
xor
mov
sub
adc
lea
ins
in
sub
(bad)
cmp
xchg
mov
inc
lea
(bad)
adc
jno
sar
mov
ret
xchg
mov
jg
bound
mov
dec
sahf
or
jbe
call
cld
or
fcomp
jmp
cmp
pop
push
mov
nop
pop
pop
outs
(bad)
cs
and
pop
push
or
and
pop
mov
xchg
xor
sub
lock
or
addr16
mov
(bad)
xor
cmp
(bad)
out
int3
clc
icebp
mov
add
sub
(bad)
icebp
jne
and
sti
je
ins
cmp
mov
dec
das
(bad)
pushf
xchg
sub
inc
sbb
or
stos
cs
cmc
clc
nop
in
arpl
call
sub
retf
ficomp
mov
ins
ror
push
in
in
jmp
(bad)
jmp
or
or
(bad)
fwait
movs
add
call
ds
push
adc
cmp
ret
(bad)
out
xchg
pusha
sahf
jo
cdq
repz
mov
mov
shl
mov
sbb
(bad)
jge
repnz
(bad)
aad
sahf
outs
(bad)
cmp
cmp
xchg
call
sbb
js
jge
cmc
jmp
or
retf
or
aad
test
fwait
cmc
imul
fimul
cmp
add
xlat
jo
adc
push
(bad)
jmp
pop
pop
sub
dec
vmovddup
int
adc
xchg
aas
xchg
jge
sbb
ret
mov
xor
int
arpl
int3
ret
nop
cmp
push
pop
inc
ficom
push
lods
in
push
test
jb
adc
pop
test
clc
loope
out
popf
scas
mov
inc
cdq
fnstcw
ss
repz
and
and
(bad)
fld
push
jg
mov
aam
cmp
arpl
cmp
fidiv
jo
mov
sub
sub
jb
inc
mov
into
xor
jnp
add
es
mov
sbb
loop
cdq
sbb
(bad)
xchg
sub
mov
fidivr
rcr
daa
(bad)
lods
xchg
clc
or
rol
mov
push
loop
jbe
push
push
rol
outs
jmp
ja
aad
aam
test
mov
xor
sub
mov
pop
cmp
cdq
mov
dec
push
pop
push
test
cmp
push
pusha
and
pop
pop
xchg
mov
adc
jmp
sub
fcmovu
add
nop
dec
inc
aad
int3
add
add
hlt
(bad)
xchg
cwde
adc
mov
xor
mov
adc
jmp
dec
push
push
clc
dec
mov
(bad)
and
mov
xchg
add
sub
sar
and
mov
sbb
mov
pop
inc
sub
inc
mov
pop
ror
inc
nop
inc
ja
mov
scas
add
sbb
clc
mov
adc
aaa
arpl
mov
mov
jp
xor
mov
pop
inc
ss
pop
pop
(bad)
call
aaa
mov
and
call
xlat
mov
(bad)
aas
push
inc
pop
gs
inc
std
movs
sahf
stc
mov
pop
inc
lahf
(bad)
dec
jb
sbb
(bad)
out
ret
inc
push
sub
scas
pop
ins
arpl
sahf
push
je
enter
and
mov
jne
and
cld
sub
add
cdq
addr16
mov
or
and
xchg
inc
jns
mov
aad
mov
dec
in
in
or
mov
adc
xor
and
stos
retfw
cmc
pop
ss
aam
scas
dec
shr
not
dec
jno
inc
fimul
int3
inc
(bad)
mov
cmp
fcmove
inc
ds
sub
mov
add
(bad)
ds
push
mov
push
and
out
mov
(bad)
(bad)
xchg
inc
fisttp
xor
call
test
push
or
aam
mov
in
cmp
add
repnz
ds
and
fbstp
ds
adc
(bad)
jno
fdiv
hlt
adc
fbld
or
push
ret
and
aam
jmp
repz
dec
cld
mov
iret
in
mov
(bad)
xor
aas
sbb
cmps
aad
mov
jle
add
sub
xchg
xchg
into
sbb
push
mov
jg
adc
rol
mov
fisttp
push
leave
dec
pusha
(bad)
sbb
imul
pop
jmp
push
dec
push
add
fidivr
loopne
mov
scas
xor
and
adc
sbb
aaa
xchg
dec
mov
sub
xor
mov
es
jbe
sbb
ss
jmp
and
or
lods
add
cmp
push
xchg
(bad)
aaa
leave
jecxz
adc
push
adc
sub
lea
addr16
mov
shl
outs
stc
test
cld
cmps
fwait
mov
dec
pop
test
dec
and
push
cld
int
sar
xor
jle
mov
out
movs
inc
add
retf
mov
jecxz
(bad)
xlat
aas
pop
xor
and
lods
adc
push
dec
push
inc
jns
mov
addr16
cmps
popf
xor
cli
cmp
imul
enter
enter
fsubr
sbb
mov
pop
and
jmp
addr16
iret
aas
lea
push
(bad)
sub
stos
sbb
inc
pop
jmp
inc
stc
scas
pop
and
pop
daa
and
inc
in
and
outs
mov
fs
cmp
push
xchg
lock
push
sub
mov
retf
inc
stos
bound
mov
rcr
loope
adc
ins
inc
sbb
adc
dec
xchg
pop
mov
pop
gs
sub
add
imul
and
mov
adc
or
push
push
daa
repnz
push
push
xlat
loopne
icebp
sbb
push
nop
inc
push
pop
xor
bound
xor
and
push
mov
sub
and
vxorps
pusha
(bad)
mov
push
cmc
cmp
jns
stc
jecxz
out
cmp
mov
add
jge
sub
loopne
or
subps
and
call
clc
bound
test
xchg
fld
cmp
mov
jmp
sub
pop
xchg
cmp
sahf
in
shl
dec
jmp
mov
dec
inc
movs
mov
hlt
sbb
ja
enter
add
outs
add
shl
dec
in
jae
jp
fst
in
jne
adc
or
xchg
pusha
pusha
mov
cmp
int
mov
push
data16
mov
ret
xchg
imul
xor
mov
ficomp
sub
cmp
mov
pop
mov
jb
jle
cmp
test
xchg
xchg
cmp
jle
cmp
iret
push
inc
cmovno
adc
pop
dec
rcl
sub
jmp
icebp
movs
add
add
pop
xchg
mov
out
dec
test
pop
or
js
jl
jne
cmp
nop
lea
dec
mov
sti
fs
xor
shr
adc
leave
and
adc
cmps
inc
push
test
inc
pop
add
push
mov
sub
fs
add
mov
out
mov
add
pop
or
dec
dec
mov
push
inc
inc
pop
lock
xchg
fist
add
cmp
mov
pop
add
mov
mov
jge
mov
pop
scas
and
mov
les
adc
stos
dec
sbb
daa
ds
mov
and
pusha
sbb
stc
xchg
mov
pushf
push
pop
mov
dec
xlat
outs
cmp
lds
add
or
cmp
cmp
ror
push
movs
in
mov
bound
xor
out
imul
inc
pop
test
xchg
sbb
daa
in
adc
jg
js
mov
jle
ins
out
fistp
outs
imul
and
bswap
xlat
in
inc
or
and
adc
call
and
mov
cmp
inc
sub
scas
in
or
dec
out
jmp
(bad)
cs
pop
ret
mov
loop
and
mov
mov
scas
mov
popa
(bad)
loopne
push
movs
outs
pop
imul
cli
sub
call
sti
int3
pop
xor
cld
mov
xor
adc
push
in
inc
addr16
iret
dec
xchg
mov
mov
dec
test
aam
sub
push
mov
jae
jmp
jns
add
push
retf
pop
(bad)
push
pop
adc
cmp
push
adc
sbb
call
pop
(bad)
sbb
adc
aad
test
push
pop
inc
int
ja
stos
cmp
neg
popa
pop
lea
gs
add
stos
cmp
lock
data16
(bad)
add
jnp
retf
push
jecxz
pop
or
mov
imul
jmp
dec
cmps
jl
cs
icebp
mov
adc
jo
mov
pusha
inc
cwde
das
mov
cli
xor
xchg
dec
sub
pushf
add
cmp
mov
cmp
data16
fnstsw
jl
mov
cld
sbb
and
loop
sbb
test
sub
mov
imul
inc
xchg
mov
mov
mov
push
int3
pop
jno
loopne
pop
sub
fsub
cmp
add
call
jmp
test
mov
arpl
push
btc
rol
add
sub
fdivr
mov
push
xor
pop
mov
ins
mov
(bad)
and
sahf
aad
add
stc
(bad)
mov
inc
xor
aam
iret
mov
push
mul
sub
pop
push
ins
fstp
shl
push
cmp
xlat
xor
xchg
ret
add
add
loope
inc
xor
jae
outs
pop
push
push
daa
and
mov
cmp
outs
scas
xor
inc
jo
fsubrp
nop
call
fwait
push
rol
xchg
dec
mov
lock
adc
fidivr
cdq
stos
int3
lods
mov
(bad)
je
aas
sar
pop
movs
xor
fdivp
xchg
(bad)
pop
rcr
aam
pop
push
movs
sahf
inc
inc
addr16
jl
test
test
into
xchg
jmp
jb
jmp
jecxz
ss
mov
jl
pop
(bad)
and
xchg
int
popf
xchg
push
fidivr
mov
pop
sbb
push
(bad)
in
add
les
jmp
or
bound
mov
inc
xor
scas
iret
mov
push
lods
je
mov
or
push
mov
sub
(bad)
jb
mov
imul
pop
sub
mov
xchg
jmp
pushf
xor
iret
push
icebp
inc
and
int3
rol
add
int3
mov
ds
mov
imul
mov
xchg
sbb
add
(bad)
cmp
xlat
and
into
cmp
jno
and
jmp
pop
outs
movs
nop
rcpps
adc
push
jmp
and
mov
xor
ffreep
mov
pop
mov
ret
adc
(bad)
aas
retf
sub
cmp
dec
imul
sbb
in
mov
add
jl
mov
lock
mov
and
push
xbegin
sbb
stos
fisubr
push
ss
pop
clc
jmp
hlt
(bad)
lods
jmp
pop
inc
pop
cmps
xor
(bad)
jmp
dec
sahf
fisubr
lahf
ret
das
pusha
pusha
sti
inc
retf
repz
jmp
sub
mov
out
jb
sub
xchg
cs
sub
mov
rcr
test
dec
nop
inc
lahf
jno
xchg
jmp
xor
out
jbe
nop
retf
pushf
out
sbb
or
test
icebp
and
scas
mov
mov
xor
clc
fcomp
(bad)
sahf
ja
aam
sub
arpl
jl
jnp
jb
fmul
lahf
inc
aam
mov
jmp
test
vmwrite
jae
rcl
sub
push
jmp
dec
scas
outs
rcl
or
push
mov
into
addr16
jae
xchg
sub
mov
jns
mov
mov
dec
aam
(bad)
js
inc
popa
xor
xor
sub
sahf
cmp
sar
call
dec
and
sub
and
aam
xchg
mov
xor
adc
test
pop
push
inc
loop
gs
je
xchg
cmp
lahf
jmp
cmp
jmp
ret
rcr
fwait
(bad)
call
push
in
lods
push
or
pop
movs
stc
mov
push
call
add
fwait
arpl
movs
rcr
sub
ror
jo
cmp
stos
arpl
and
dec
fnstcw
clc
loope
jp
mov
int3
retf
mov
xor
and
(bad)
rcr
adc
mov
dec
loopne
fist
(bad)
movs
mov
ja
fist
jbe
outs
mov
leave
or
mov
push
fisub
or
setb
and
inc
pushf
push
xor
outs
adc
adc
fwait
nop
std
pop
loope
aas
cmc
addr16
push
or
add
sbb
inc
cmp
aad
push
call
into
in
mov
loope
lahf
xlat
pop
pop
adc
add
sbb
ins
stc
inc
in
shl
aaa
mov
repnz
in
mov
xor
ja
call
mov
pop
cmps
nop
stc
fdivr
int3
cmp
addr16
pop
mov
movs
movs
cld
sbb
add
xchg
fild
cwde
rcr
aas
shr
icebp
loope
jbe
adc
(bad)
or
xchg
mov
sbb
(bad)
sbb
adc
inc
pop
std
jle
mov
movs
jnp
mov
pop
fs
dec
into
push
push
push
je
mul
mov
push
xchg
icebp
jb
mov
test
push
adc
xor
mov
call
inc
pusha
xor
dec
dec
(bad)
xchg
mov
hlt
das
test
sbb
jle
pusha
data16
clc
lods
sbb
sar
pusha
inc
es
jne
jns
nop
push
das
fistp
mov
repz
pop
adc
(bad)
xlat
sub
call
pop
mov
outs
jge
adc
push
mov
outs
jecxz
pop
nop
imul
stos
adc
xchg
dec
mov
in
scas
sub
sub
pop
cwde
pop
dec
leave
xor
add
mov
loop
push
or
adc
dec
add
out
and
mov
sbb
inc
push
sbb
jo
and
mov
add
popf
jae
gs
cmp
in
out
sub
dec
jno
sbb
inc
out
mov
adc
sbb
xchg
mov
pushf
ret
les
outs
icebp
inc
stos
adc
icebp
pop
addr16
sbb
test
cmp
push
push
hlt
inc
icebp
add
xchg
xor
mov
jns
jecxz
adc
test
imul
jne
shr
inc
les
pop
in
sub
les
mov
sub
pop
fidivr
cmps
mov
shr
jae
addr16
sbb
hlt
mov
bound
and
cmps
xchg
mov
push
dec
int3
push
cld
into
mov
clc
cmps
test
popa
inc
rcl
bound
in
push
gs
repnz
movs
cli
mov
jg
loopne
push
pop
mul
pop
jne
adc
adc
inc
ror
mov
dec
inc
xchg
jg
ficomp
cmp
out
fwait
js
add
retf
push
(bad)
dec
xor
add
in
xor
out
push
push
jns
mov
out
dec
cwde
mov
int3
sbb
out
sub
push
movs
jo
gs
adc
movs
clc
leave
add
cld
sub
retf
jae
sbb
and
xchg
hlt
sbb
shr
add
cmp
fdiv
stos
inc
inc
(bad)
clc
mov
les
out
push
inc
fsub
sub
push
cmps
mov
sbb
mov
cmps
sahf
movs
and
sti
inc
push
shr
scas
dec
sbb
sbb
xchg
inc
push
sbb
push
div
xchg
outs
arpl
in
pop
or
rol
scas
das
sub
lods
cs
sahf
xchg
adc
movs
pop
mov
xchg
les
retf
sub
leave
jno
ins
lods
fisttp
or
xchg
add
test
jno
mov
stc
xor
cmp
xchg
xchg
and
lds
leave
and
and
or
stc
mov
shl
fsub
repz
push
lock
(bad)
push
sti
in
fwait
mov
test
jmp
mov
or
aam
fadd
test
adc
ins
xchg
pop
or
jle
mov
jmp
lahf
or
xchg
mov
sbb
ror
js
popa
daa
pop
movs
pop
jle
xchg
fwait
adc
jecxz
scas
sahf
cmp
pop
aad
xchg
fwait
jno
adc
adc
gs
mov
jmp
rcl
dec
xchg
jp
mov
push
into
daa
fcmovbe
(bad)
push
in
daa
jg
int3
mov
fdiv
call
mov
sahf
jno
mov
mov
cmps
stos
jmp
push
mov
out
cmps
cmc
adc
das
sub
sub
lods
icebp
dec
and
pop
dec
loope
test
mov
sbb
jb
cmp
adc
add
push
adc
jns
xchg
aaa
or
mov
xchg
cs
loop
push
gs
or
aad
pop
lods
dec
out
mov
dec
pop
jecxz
(bad)
add
out
out
jmp
(bad)
(bad)
(bad)
mov
jl
fwait
xchg
jp
and
movs
xchg
inc
sahf
fdiv
test
xor
lock
lahf
std
mov
and
neg
xor
jae
das
(bad)
aam
lock
lods
pushf
add
into
retf
add
cdq
xchg
mov
loop
imul
pusha
dec
mov
lods
ss
rol
push
addr16
cmp
mov
add
sub
jno
mov
int
popf
sub
mov
push
push
not
jo
retf
sbb
pop
fst
dec
and
push
iret
add
shl
and
imul
dec
das
sub
mov
cmp
je
pop
mov
mov
pop
push
in
adc
addr16
or
or
in
jmp
sub
mov
leave
and
adc
cld
das
cmc
jecxz
in
out
sar
pop
sbb
into
pop
inc
xchg
pop
and
jae
fsub
jae
les
xor
mov
fwait
data16
sbb
rcl
cld
pusha
retf
cld
jno
pop
push
les
or
loop
cmp
xchg
imul
pop
xor
mov
not
lock
pop
ss
inc
daa
mov
push
shl
mov
outs
pop
int
mov
call
push
sbb
mov
dec
pop
rcr
adc
mov
sub
and
fcos
xchg
mov
test
or
adc
fcmovb
inc
adc
in
xchg
mov
push
and
sub
xchg
ror
jl
or
pop
arpl
iret
mov
xchg
sub
mov
jle
imul
add
cmp
xchg
xchg
mov
mov
setno
cmp
mov
mov
lahf
and
fstp
dec
scas
iret
rol
mov
sub
test
dec
shl
xchg
pop
push
cmp
ins
xor
pop
nop
in
sbb
cmp
shr
mov
sysret
inc
cmp
into
std
in
xchg
adc
ret
repnz
pop
icebp
mov
fsubr
nop
mov
stos
in
inc
leave
pop
mov
icebp
xchg
xor
sti
mov
sbb
cld
fsub
jo
fsub
outs
in
addr16
aaa
je
adc
push
popa
call
xchg
sub
add
cmp
dec
inc
retf
shl
push
loopne
mov
and
adc
jns
sti
xchg
imul
dec
sub
pop
inc
dec
(bad)
push
xchg
xor
jge
popa
mul
popa
mov
mov
push
sub
loopne
xchg
not
(bad)
lock
aam
push
xchg
daa
mov
cmc
out
sub
out
push
or
pop
dec
add
and
outs
ins
sub
mov
adc
ins
pusha
inc
adc
pop
daa
push
jp
cmp
retf
(bad)
push
add
enter
leave
and
xchg
xor
cmp
pop
pusha
xchg
repz
cmp
mov
xor
test
push
mov
inc
sbb
mov
in
mov
mov
in
out
int3
cmc
aad
add
pop
push
pop
ds
jnp
icebp
(bad)
out
(bad)
ja
sbb
sbb
mov
jns
gs
pusha
les
and
ficomp
(bad)
out
and
or
ret
les
jmp
add
mov
adc
xchg
jl
popf
or
fnstcw
sar
fsub
xchg
push
push
shl
imul
cmps
stos
push
repnz
push
mov
adc
mov
es
xchg
fstp
inc
mov
jg
xor
mov
mov
cwde
loope
dec
mov
pop
add
shl
fstp
repz
mov
retf
aad
lock
pop
ds
jmp
sbb
fwait
out
gs
and
and
shr
ja
pushf
fisttp
mov
fimul
inc
add
es
cmc
xchg
pop
int3
stc
adc
adc
sub
fneni(8087
cmp
clc
jb
or
mov
jmp
out
xchg
pop
pusha
pop
push
movs
pop
or
outs
push
cmps
or
ret
in
adc
pop
jnp
xchg
stos
and
repnz
lock
push
cmps
add
fnstcw
cli
adc
aaa
repnz
out
jmp
std
fimul
dec
stos
mov
or
sbb
(bad)
push
out
add
sbb
xchg
test
lds
cmp
push
stos
xchg
add
xchg
inc
mov
leave
sub
adc
(bad)
mov
dec
popf
retf
scas
push
mov
inc
xchg
pusha
xor
mov
and
(bad)
jl
jl
(bad)
popf
out
in
adc
cmp
xor
inc
push
dec
mov
mov
mov
adc
jo
test
dec
push
cdq
pop
idiv
cmp
xor
lds
mov
dec
loop
or
ja
test
xchg
xor
adc
out
mov
or
adc
dec
pop
mov
iret
int
(bad)
mov
stc
dec
mov
ror
jbe
pop
dec
add
lock
cmps
fdiv
mov
mov
aad
dec
pop
jmp
rcl
mov
pop
or
ss
retf
shl
push
push
pusha
jp
outs
jmp
in
shl
fmul
adc
sbb
dec
xchg
cmp
jg
sbb
jp
or
fsub
sub
out
fisub
and
xchg
jl
dec
pop
movs
xor
or
pop
push
xor
mov
(bad)
clc
pop
in
int
adc
mov
cs
dec
jle
cdq
pop
js
mov
cmp
movs
ror
cdq
push
retf
pop
in
ret
xor
cmp
(bad)
maskmovq
not
in
fs
les
sub
push
jo
test
popf
dec
ret
pop
sub
jle
fbld
scas
pushf
(bad)
mov
imul
(bad)
cmc
jg
or
fld
mov
js
sub
push
call
sbb
add
and
and
sub
fs
outs
out
fcomp
sar
inc
adc
lock
retf
adc
(bad)
loopne
(bad)
fcomp
mov
mov
jg
enter
or
fmul
fsub
dec
pop
jb
push
push
sbb
into
mov
xchg
add
cmp
ins
mov
mov
mov
cmp
fcomp
push
sbb
push
dec
sub
mov
ss
add
or
cdq
pop
not
imul
fist
or
sbb
pop
jle
xchg
mov
and
jecxz
sub
and
push
ja
add
and
fstp
xor
movs
or
mov
lock
sbb
fwait
stos
jle
call
sbb
int
xor
or
xlat
ja
popa
cmp
ins
and
xor
jmp
and
test
and
jl
push
add
aaa
pop
pop
xlat
xchg
add
xor
push
jecxz
out
les
sbb
inc
sti
lds
sbb
das
mov
and
push
in
je
outs
rol
inc
push
or
std
adc
cmp
mov
sub
std
repnz
ins
adc
push
aad
rcl
(bad)
cmp
jnp
mov
inc
fnstsw
add
loopne
(bad)
test
sub
pop
mov
dec
jmp
aas
dec
aas
ds
sbb
movs
mov
and
mov
outs
sahf
xor
loope
xchg
mov
sbb
jmp
cmps
fnstsw
idiv
mov
jo
cmp
test
mov
rcl
xor
dec
xor
nop
pop
and
jmp
mov
jo
(bad)
xchg
in
jne
imul
pushf
pop
scas
aad
jns
fcomp
retf
cmp
push
(bad)
fistp
mov
jne
and
or
and
test
out
pop
lahf
xor
mov
js
ret
jb
mov
loope
mov
mov
jp
fwait
mov
jo
repnz
inc
xor
mov
popa
outs
call
(bad)
in
stc
xor
mov
cmp
sar
icebp
add
inc
mov
mov
dec
lea
stc
sub
push
int
stos
out
aas
test
pushf
jnp
mov
scas
mov
xor
cmp
push
push
jae
dec
hlt
xchg
jge
lock
push
and
cdq
pushf
sub
push
xor
ret
jmp
nop
sahf
mov
lahf
outs
sub
popa
popf
das
jo
mov
call
cwde
mov
scas
adc
repz
lds
aas
cmp
hlt
jae
and
xor
jno
aas
mov
xchg
mov
in
mov
push
scas
jbe
jmp
pop
push
adc
xchg
jmp
mov
push
addr16
es
aam
cmps
std
cmp
cld
xchg
aad
lds
fs
pop
or
dec
pop
stos
aam
cmps
pop
aad
mov
sub
je
pop
dec
xchg
cmp
or
dec
fiadd
mov
cs
pusha
or
mov
sub
push
sub
cmc
ficomp
jle
ret
sbb
hlt
jmp
fnstcw
sub
lahf
outs
or
mov
ds
dec
sahf
out
jnp
or
cld
in
test
adc
mov
jo
sar
mov
or
jl
ins
call
cmp
ss
pop
push
out
dec
das
mov
fcom
loope
mov
dec
dec
jmp
fisub
push
xor
and
cmp
inc
xor
mov
icebp
into
in
lds
cdq
or
cmp
lea
xor
std
cmp
cmp
push
sar
inc
js
jecxz
movs
mov
gs
(bad)
xchg
movs
jbe
jle
(bad)
or
inc
test
rcl
push
stos
ret
(bad)
pop
in
dec
sbb
out
loopne
iret
or
mov
leave
cdq
mov
(bad)
aam
std
push
fisttp
aad
xor
adc
iret
out
pop
jno
xchg
pop
push
loope
mov
add
mov
mov
or
jmp
cld
fldenv
imul
ds
inc
sbb
ins
xchg
sub
int3
les
mov
xchg
iret
push
lods
cmc
mov
mov
shl
inc
mov
into
cli
lahf
dec
pop
cmp
shl
pop
rcr
bt
jne
int
dec
cwde
cli
adc
dec
neg
call
ins
push
add
in
mov
hlt
sbb
or
mov
push
mov
push
mov
(bad)
sbb
xchg
add
xor
je
out
jmp
xchg
dec
fwait
sub
loop
test
sub
in
mov
scas
dec
cmc
and
ffreep
mov
jmp
scas
xor
hlt
loope
icebp
sti
(bad)
int3
je
mov
mov
daa
outs
aad
xchg
sub
push
inc
scas
movs
pop
out
jmp
stos
cmp
xlat
or
sub
iret
sbb
inc
daa
xchg
mov
cmp
fldcw
mov
xor
push
sbb
(bad)
sbb
popf
fdiv
xchg
adc
jp
imul
adc
imul
pop
lock
pushf
mov
out
test
mov
adc
push
or
out
jmp
push
xor
dec
lods
call
pop
fdivr
fist
cwde
in
sbb
jo
jns
cmp
add
sub
dec
push
imul
sbb
lea
test
jae
inc
nop
hlt
jmp
movs
sbb
leave
add
outs
push
scas
mov
mov
or
(bad)
iret
into
dec
inc
inc
dec
iret
call
inc
inc
aaa
adc
repz
sbb
mov
push
push
les
nop
sub
push
dec
sahf
ins
inc
dec
cmp
mov
xor
xchg
jg
and
push
cmp
and
jae
les
faddp
fisub
and
mov
inc
xor
inc
pop
jl
push
jmp
mov
pop
sti
(bad)
dec
rcr
pop
scas
test
xchg
call
mov
movs
lea
cwde
jg
enter
push
nop
dec
push
push
push
jg
(bad)
int
inc
jbe
fwait
lock
cmp
repz
and
cmp
fwait
sbb
imul
sahf
mov
test
sub
icebp
lds
mov
(bad)
aam
cmp
xlat
push
xchg
nop
loope
jp
adc
rcr
jl
lock
push
sahf
sbb
mov
dec
cli
shr
mov
jle
ja
xchg
pop
retf
ins
mov
sub
mov
dec
outs
adc
cmp
xor
ret
mov
mov
sbb
inc
les
movs
mov
fistp
push
movs
enter
pop
jg
ds
dec
dec
sbb
or
sbb
fist
scas
clc
mov
je
xchg
push
shr
push
cmc
jns
fist
dec
inc
xor
mov
cdq
(bad)
pushf
jmp
sub
sub
fs
dec
rcl
(bad)
in
fiadd
inc
and
pop
je
xchg
mov
pushf
call
jecxz
loopne
scas
push
xchg
dec
(bad)
ds
cmc
adc
sub
test
aad
cmp
repnz
es
push
jne
rol
inc
outs
cmp
lea
cmps
xchg
call
nop
scas
push
xchg
scas
nop
rol
sti
xor
xchg
adc
cs
lock
test
aas
lds
cmc
cmp
add
test
neg
push
jns
ins
stos
xchg
add
ss
lods
retf
push
mov
pop
push
and
cs
mov
jle
pop
push
scas
push
sar
mov
jl
repnz
mov
retf
mov
retf
repnz
add
loop
xor
out
call
push
pop
(bad)
sbb
mov
cwde
and
add
imul
mov
(bad)
lock
push
lea
cmps
retf
out
mul
ficomp
jno
cmp
sub
xchg
pop
xchg
pop
aad
adc
rol
cmp
and
sub
mov
adc
add
jo
jmp
sbb
ins
or
fidivr
pop
pop
sub
sbb
movs
imul
cmc
cs
and
(bad)
push
xlat
lods
jo
retf
mov
push
jae
dec
fadd
ins
rol
xchg
or
scas
jb
jb
or
and
shl
sbb
cmp
mov
mov
sbb
push
out
push
push
ret
jb
dec
add
adc
xchg
mov
mov
ret
jmp
aad
inc
or
cmp
or
push
in
fist
lods
adc
cmps
or
inc
ror
retf
mov
stos
jl
shl
jns
sbb
xchg
push
jg
mov
jne
leave
mov
xor
std
lock
call
retf
pusha
add
mov
mov
cdq
lock
cwde
jno
lods
int
popf
push
cmp
jp
cmp
js
jnp
retf
gs
test
cs
pop
dec
xor
aad
jl
outs
aas
es
adc
push
fmul
into
enter
xchg
das
in
dec
mov
mov
outs
fidiv
icebp
add
inc
repnz
cmp
dec
lods
mov
jbe
imul
test
out
pop
hlt
dec
and
push
cs
ja
out
xor
retf
inc
(bad)
imul
sbb
mov
jl
xchg
iret
xor
push
iret
xchg
inc
jmp
pop
rcr
lods
xchg
xor
add
push
jno
xchg
ret
dec
fist
xor
add
lods
aad
fdiv
sbb
enter
inc
mov
cmps
jg
aas
sbb
call
(bad)
enter
sub
stos
scas
pop
add
jmp
fcomp
inc
outs
cmp
jnp
sbb
retf
cli
cmps
out
retf
mov
or
out
cs
xchg
jbe
dec
pop
mov
adc
rcl
xlat
jnp
pop
cld
inc
fmul
push
fadd
pop
in
dec
mov
int3
cwde
push
fcom
dec
sub
sbb
cli
daa
dec
in
pop
mov
vaddsd
mov
cmp
jmp
mov
jno
adc
pop
xor
shr
movs
ret
inc
jge
(bad)
xor
pop
xchg
pop
mov
pop
cs
in
fdivr
pop
push
xlat
dec
and
jb
popf
mov
push
or
mov
and
mov
aas
sub
jo
jns
scas
xchg
popf
add
adc
mov
mov
retf
sub
cmp
mov
lods
cmp
clc
clc
and
push
dec
out
add
jl
add
scas
js
push
dec
loope
adc
jnp
fisttp
pusha
push
mov
jge
sub
das
inc
mov
push
push
sbb
pop
fidiv
sbb
and
push
push
out
inc
cmps
or
loope
gs
or
sbb
fs
push
imul
scas
mov
fistp
in
cli
sbb
jecxz
cli
pusha
push
fwait
iret
aam
sbb
sbb
imul
mov
movaps
retf
mov
cs
iret
jae
ret
adc
retf
retf
cmc
arpl
sbb
mov
xlat
(bad)
popf
mov
je
inc
js
jae
int3
inc
xor
xchg
mov
clc
cwde
loope
push
xlat
iret
addr16
movs
add
pushf
mov
cli
push
sbb
mov
inc
daa
in
xor
mov
test
dec
loopne
nop
or
add
aaa
adc
mov
add
movs
out
lsl
inc
jle
data16
out
sub
call
popa
aad
push
stc
ret
adc
clc
or
and
outs
jg
je
scas
sahf
movs
or
shr
inc
dec
jae
sub
pop
xchg
xchg
xchg
push
ds
stos
cmc
scas
pop
sahf
out
jmp
test
xor
scas
push
fsubr
mov
out
lods
sub
shl
and
cld
call
xchg
scas
mov
mov
lods
xchg
cmc
fild
mov
fwait
jnp
repz
lea
dec
jecxz
cmp
xchg
mov
call
cmp
cmp
mov
je
mov
fs
loopne
fcom
or
jle
sub
lea
test
add
loope
cli
pop
jae
push
mov
imul
test
loop
cmp
nop
(bad)
ins
out
xor
xor
cmp
scas
jae
sbb
std
add
out
xchg
adc
mov
fmul
fimul
ins
call
fyl2xp1
stos
stc
mov
les
cmp
mov
aad
or
jecxz
ror
js
sub
mov
stos
mov
mov
rol
dec
iret
xchg
retf
fadd
mov
jmp
sbb
xchg
cmp
mov
call
xor
repnz
mov
add
add
vprotb
sbb
mov
pop
inc
jno
sub
jne
add
push
push
retf
ret
imul
pop
out
xor
movs
push
or
jns
std
ds
xor
das
cli
movs
or
fs
out
and
(bad)
xchg
stos
mov
mov
je
push
adc
sbb
mov
mov
jns
xor
bnd
arpl
cmps
sub
push
dec
jmp
push
sbb
dec
dec
sbb
loopne
(bad)
scas
das
cdq
into
push
cwde
bound
adc
inc
stc
push
xor
adc
imul
dec
test
pop
punpckhbw
mov
and
call
push
les
and
mov
imul
and
fistp
mov
xchg
cmp
test
sbb
iret
jo
scas
push
jp
mov
sub
mov
repz
lea
mov
push
cmp
cwde
jp
cmps
les
sub
test
retf
pop
loopne
mov
icebp
mov
and
lods
and
idiv
or
neg
xor
push
hlt
or
(bad)
mov
ins
jnp
xchg
sti
mov
repz
mov
mov
pop
bound
int3
(bad)
push
fbstp
or
jp
xchg
push
jns
dec
shl
out
inc
and
fcom
push
mov
mov
(bad)
jb
add
jne
adc
pop
push
push
push
addr16
or
mov
pop
fcom
mov
sar
jb
pushf
dec
jne
add
jl
xchg
cmp
stos
mov
daa
imul
or
clc
xor
sub
xchg
pop
stos
inc
shl
pop
ror
mov
fild
cmp
mov
ds
pop
in
xchg
int
(bad)
outs
push
(bad)
loop
aam
pushf
fisttp
fst
pop
mov
mov
sub
gs
test
in
jno
inc
mov
or
xchg
nop
imul
mov
mov
jl
sub
mov
adc
sar
mov
push
cmps
fstp
test
add
inc
stc
push
mov
test
shl
mov
fisttp
pop
add
retf
test
aad
sbb
push
ss
xchg
inc
push
js
mov
mov
test
dec
xchg
das
idiv
scas
dec
in
inc
loope
dec
pop
xor
cdq
ds
dec
retf
daa
add
or
jnp
inc
repnz
xchg
push
push
scas
dec
jnp
pop
xchg
lock
mov
sub
sti
movs
cmp
(bad)
jbe
dec
inc
mov
add
idiv
mov
stos
js
xchg
in
mov
fistp
add
stc
ins
xlat
inc
shr
cmps
push
push
xchg
sub
and
xchg
pop
xlat
fs
inc
js
xor
inc
xor
xlat
jmp
in
and
loope
dec
and
xchg
out
mov
dec
jns
jne
jmp
lea
or
and
pop
jns
scas
ds
in
daa
cmp
fldcw
and
lods
mov
fdivr
arpl
cs
xor
xchg
dec
(bad)
push
cmps
bnd
nop
lock
aaa
cmp
in
pop
pop
pop
push
xchg
pop
mov
popa
mov
adc
shl
jnp
inc
adc
and
mov
call
stos
loope
mov
pop
lahf
cmps
fcmovbe
int3
pop
in
jge
or
cmp
(bad)
sti
loop
or
or
sub
or
stos
ins
cmp
add
xor
je
jmp
mov
inc
test
add
les
es
je
and
dec
lock
push
fst
sub
xor
mov
(bad)
jno
loope
push
mov
std
jmp
jnp
xor
fwait
stc
xchg
bound
shl
jmp
out
scas
dec
shl
shr
(bad)
ins
sbb
dec
shl
sbb
mov
xor
mov
dec
add
push
test
test
add
dec
pop
ds
jmp
ficom
call
int
loopne
retf
push
stc
int
mov
test
adc
popa
mov
adc
push
push
dec
les
dec
push
adc
cld
xor
and
sub
inc
push
jmp
dec
adc
div
jmp
and
outs
dec
jo
fsub
jge
out
jae
pop
out
xor
loopne
sbb
cmp
inc
out
mov
push
loope
xchg
(bad)
fxch
(bad)
arpl
cmps
bound
das
inc
push
add
and
daa
sub
cmp
and
ins
jne
mov
jne
xchg
cmp
cmps
ret
xor
fadd
enter
pop
dec
fsub
and
sub
hlt
xchg
jle
arpl
adc
out
xor
pop
jecxz
push
jno
pusha
les
dec
rcl
xor
pop
(bad)
call
mov
mov
cmp
jne
and
loope
loop
jae
mov
adc
pushf
or
push
aam
cmc
mov
imul
cmc
inc
lahf
sbb
jb
retf
push
aas
cmp
xchg
sbb
stos
clc
pop
imul
daa
inc
scas
ins
and
fstp
sub
or
xchg
out
cld
mov
mov
bnd
out
stc
sbb
mov
in
mov
fld
clc
daa
mov
mov
pusha
pop
mov
jno
ret
push
test
push
add
push
cmp
mov
ja
add
dec
jmp
xchg
push
mov
inc
or
mov
mov
cmp
xor
inc
and
xchg
in
or
and
pop
xor
ror
rol
inc
mov
inc
sub
xlat
das
fiadd
adc
sbb
outs
or
or
jg
adc
jns
mov
nop
or
and
pushf
sti
adc
or
pop
div
pop
lahf
imul
xor
das
jo
shl
sub
mov
mov
cmp
mov
adc
dec
out
sar
push
xchg
xchg
pop
daa
cmp
cs
cmps
rcr
(bad)
xchg
cli
nop
jg
pop
ret
cmp
adc
xor
xchg
jecxz
dec
stc
retf
sahf
and
(bad)
(bad)
test
push
retf
pop
ror
(bad)
pop
xchg
js
and
mov
xor
int3
cld
jo
(bad)
pop
mov
pop
mov
aam
pop
pop
jne
movs
call
ja
pop
mov
inc
add
fld
add
sbb
std
(bad)
sti
and
xor
jb
jne
outs
mov
pop
push
add
push
inc
cmps
scas
or
ror
and
adc
xchg
out
shl
xchg
popa
loope
mov
movs
sub
das
(bad)
and
jb
test
out
test
sub
jbe
dec
sar
pusha
ss
push
ficom
rcr
xor
dec
inc
cwde
loop
nop
push
je
sar
xchg
sbb
sub
(bad)
sti
mov
push
sbb
mov
sbb
fwait
mov
dec
fcomi
sbb
shr
std
sbb
sub
(bad)
fcomp
not
adc
dec
cmp
jno
fisubr
and
sti
mov
push
fisttp
xor
pop
inc
pop
fs
push
test
aas
mov
jg
ins
sbb
push
in
nop
cld
inc
jmp
mov
push
ss
ret
mov
xor
clc
add
add
mov
aaa
ror
ins
jnp
mov
gs
mov
ins
adc
imul
pop
mov
inc
aad
or
test
movs
push
dec
xlat
shr
ds
sub
dec
pop
add
adc
out
fsub
leave
mov
add
adc
loope
xchg
lods
add
pop
push
loop
popa
mov
jmp
dec
push
mov
cmp
(bad)
and
stc
push
xchg
in
fdivr
jne
(bad)
or
aad
sub
jl
or
xchg
push
lds
push
jb
ror
inc
fs
mov
and
dec
popa
or
xchg
and
popf
push
inc
das
push
jmp
(bad)
jl
jbe
cmp
xchg
mov
or
pop
sbb
mov
push
adc
mov
sub
das
fdivp
push
nop
mov
ins
adc
pop
arpl
adc
jno
push
push
lahf
jmp
loopne
sub
sbb
sbb
and
jns
scas
in
mov
or
mov
mov
adc
adc
(bad)
xor
cmps
mov
in
adc
add
popa
adc
mov
fstp
cdq
jg
pop
fild
test
xor
jge
mov
pop
and
sub
inc
or
dec
add
lock
les
jbe
popa
fst
mov
cmp
jecxz
jo
jmp
loope
loop
mov
loope
nop
push
mov
fiadd
imul
ja
repz
or
push
test
inc
pop
xchg
lock
and
pop
mov
xchg
in
push
adc
unpckhps
jmp
(bad)
mov
imul
jecxz
xchg
or
cmps
adc
inc
and
in
int
push
adc
cmc
lea
test
sub
adc
pop
sub
mov
std
jle
fstp
das
add
mov
(bad)
hlt
sar
adc
push
xor
cmps
arpl
arpl
dec
aas
push
out
mov
and
inc
xchg
inc
stc
imul
sub
pop
or
pop
or
je
inc
fnstenv
and
jo
mov
inc
es
or
nop
(bad)
jno
call
push
add
es
sub
add
outs
mov
fisttp
call
(bad)
xor
and
imul
lock
pop
bndldx
xchg
(bad)
out
stos
outs
popf
adc
jns
in
(bad)
iret
lahf
or
out
cld
cmp
cs
mov
retf
mov
int
pop
rcr
je
lods
sbb
fst
inc
(bad)
scas
sbb
push
shl
xchg
adc
sbb
loop
clc
outs
aad
inc
and
sti
push
add
popa
pop
cmp
and
popf
sbb
and
retf
dec
mov
pop
lds
mov
mov
dec
pop
arpl
stc
imul
cmp
(bad)
push
and
add
pushf
popf
xchg
enter
mov
inc
sbb
popf
test
pushf
(bad)
in
push
retf
pop
outs
add
push
add
or
cmps
outs
scas
enter
or
retf
xchg
mov
daa
jp
in
imul
inc
jg
icebp
jns
and
call
aam
and
add
pop
dec
and
cmp
ja
dec
loope
inc
ror
imul
test
mov
jl
inc
stos
in
ror
mov
xor
imul
or
or
cwde
jle
and
sub
jl
xchg
mov
ror
les
sub
mov
call
mov
rcr
push
xor
pusha
or
push
int3
jl
cwde
xor
aaa
stos
xchg
pop
(bad)
pop
test
iret
(bad)
jmp
out
cmp
rcl
ret
sbb
or
jle
mov
mov
adc
push
les
pop
std
adc
fmul
stos
pushf
push
arpl
push
xor
mov
push
mov
addr16
and
test
mov
into
cdq
jp
(bad)
mov
pop
rcl
jne
cld
mov
lods
mov
jo
xchg
int
ds
push
dec
xchg
mov
or
movs
sbb
inc
test
and
mov
leave
jo
in
mov
popf
scas
and
dec
inc
xchg
les
jge
mov
push
cmps
(bad)
add
xor
int
js
xchg
enter
out
xchg
cli
inc
mov
mov
mov
add
test
test
lods
add
cmp
mov
sub
inc
pop
(bad)
pop
mov
cmps
js
cmp
dec
je
scas
sub
es
pop
adc
imul
jno
pop
or
sar
adc
mov
retf
xor
pop
hlt
xor
or
push
shl
in
cmp
in
(bad)
fstp
sar
jnp
fstp
ret
lock
(bad)
xor
popa
mov
ins
inc
push
adc
dec
cmp
add
dec
mov
mov
sbb
push
dec
xchg
fisttp
mov
stos
cmp
aaa
adc
jmp
je
push
and
imul
shl
add
xor
or
mov
or
mov
mov
xor
jno
push
mov
mov
shl
sub
inc
and
(bad)
xor
je
push
iret
or
dec
inc
imul
jo
cmp
or
ret
das
sub
icebp
add
xlat
out
xchg
cmp
adc
ret
fbstp
jae
cs
push
pop
(bad)
sbb
fnstenv
or
sub
out
push
test
push
loop
fnstsw
push
arpl
mov
push
lock
dec
pop
test
and
pop
(bad)
mov
mov
and
push
inc
and
int
imul
jge
in
push
mov
out
jbe
ds
stos
outs
iret
(bad)
pop
ror
add
(bad)
out
push
lods
adc
inc
test
inc
pop
sub
fstp
cld
outs
jns
fidiv
lods
pop
and
neg
and
jmp
adc
mov
dec
xlat
fs
cdq
add
mov
jl
xor
mov
mov
pushf
mov
fmul
fucom
cmp
mov
shl
inc
or
jmp
sub
jb
mov
aam
push
retf
jmp
popf
cmps
in
mov
jle
out
add
mov
xlat
mov
xor
out
push
lahf
adc
sbb
jnp
fldcw
mov
cwde
gs
dec
enter
in
sbb
xor
pop
sbb
out
pop
in
mov
inc
shl
ror
jo
inc
pop
sar
and
push
mov
jae
cmp
inc
xor
inc
loopne
cmps
stos
mov
mov
mov
retf
retf
dec
mov
mov
retf
push
dec
xor
fcom
push
iret
loope
push
and
inc
mov
adc
dec
fiadd
pop
inc
gs
add
pop
frndint
ret
jle
out
jp
jno
add
(bad)
jae
fcom
fidiv
lds
(bad)
push
cmp
cmp
or
fcom
xchg
adc
push
pop
daa
mov
pop
(bad)
mov
cld
jmp
js
mov
js
jne
cs
pop
dec
xchg
mov
pop
mov
mov
dec
mov
fld
jmp
jp
jle
pop
xchg
js
outs
out
sbb
lds
rol
sbb
cmps
call
stc
mov
imul
mov
ins
pop
jb
cld
push
div
adc
xchg
adc
retf
mov
test
scas
sbb
mov
sub
out
adc
pop
dec
adc
lods
add
out
jmp
dec
lahf
pop
push
add
outs
(bad)
rcr
out
sar
add
test
jbe
xlat
cmps
inc
cdq
fcmovb
fcmovnbe
ins
dec
sub
rol
cdq
js
fnstsw
push
shl
in
mov
lods
fbstp
mov
jnp
and
mov
xlat
inc
call
dec
fadd
clc
mov
mov
(bad)
stc
xchg
jne
es
out
(bad)
adc
cwde
pushf
ja
mov
and
imul
jmp
lods
ins
out
push
push
push
imul
push
adc
add
imul
or
sbb
shl
push
or
adc
sbb
xchg
ins
xchg
sub
dec
and
sub
xchg
xlat
(bad)
ja
inc
aas
pop
xchg
pop
jb
push
dec
jg
sbb
xor
and
push
(bad)
pusha
in
xchg
sub
mov
adc
mul
or
sub
lock
jns
lock
adc
(bad)
(bad)
mov
jae
int
mov
int
mov
arpl
mov
pop
fdiv
adc
sub
mov
jl
in
in
imul
jmp
sub
jmp
stc
mov
dec
fst
mov
nop
mov
aas
loopne
cwde
pop
aam
loop
enter
mov
hlt
inc
dec
outs
cli
loope
mov
push
mov
mov
(bad)
out
inc
sbb
cmp
jns
popf
cmp
repz
mov
mov
ja
movs
popa
test
cmp
in
mov
and
xchg
sbb
adc
push
and
daa
jbe
mov
test
mul
add
pop
inc
int
cmp
bound
pusha
add
mov
jl
push
mov
dec
add
or
dec
sub
cmp
dec
pop
lock
(bad)
iret
loop
ins
mov
loop
jmp
test
add
cmps
les
or
nop
or
jb
ret
adc
dec
sbb
inc
or
addr16
cmps
fmul
push
loop
cmp
cmp
sbb
xor
inc
std
mov
stc
mov
mov
pop
xchg
shr
sbb
inc
mov
out
or
cmp
retf
lahf
or
popf
add
and
jmp
push
(bad)
jle
lahf
and
fwait
mov
and
mov
adc
addr16
mov
mov
pusha
or
out
xor
in
sub
nop
or
out
xchg
jmp
outs
push
ret
mov
xlat
inc
cmp
aad
ss
mov
mov
xor
push
xor
das
sbb
in
rcl
scas
and
xchg
pop
leave
xchg
test
inc
clc
in
jecxz
addr16
pop
arpl
cmc
or
cmp
adc
sar
sti
push
into
je
inc
mov
das
dec
mov
mov
mov
ds
or
enter
xor
xor
daa
aam
out
test
sahf
inc
test
pop
cli
pop
hlt
sahf
add
in
inc
jae
lods
(bad)
int
push
daa
sti
jge
outs
and
jns
icebp
js
mov
jle
repz
push
xchg
adc
sbb
into
aam
or
mov
cdq
xchg
aam
loope
xor
(bad)
and
jo
sub
stos
jle
jns
pop
aaa
mov
mov
dec
jne
das
pop
mov
nop
addr16
stc
or
jp
sub
cli
and
or
sub
loope
and
lods
jo
dec
cmp
pop
mov
mov
ret
mov
fisubr
clc
sbb
nop
and
dec
in
or
adc
nop
popf
push
inc
call
xchg
cli
pop
jo
jno
mov
sbb
rcr
out
mov
pop
mov
lock
jl
inc
aam
call
lock
or
jl
push
(bad)
call
lahf
out
push
jle
sub
mov
and
xchg
loope
inc
ret
or
sub
xor
loop
(bad)
loopne
out
dec
xor
imul
rcr
inc
ja
pop
ror
and
xor
push
sti
jmp
dec
test
loopne
pushf
(bad)
fiadd
leave
add
sbb
sbb
dec
inc
lds
mov
js
ins
outs
dec
xchg
mov
jecxz
adc
in
jno
add
mov
in
xchg
sahf
(bad)
push
aas
popf
scas
shl
or
movs
loop
ds
mov
cli
sar
stc
jmp
push
out
cmps
out
pop
icebp
hlt
into
dec
scas
push
(bad)
fisub
sti
in
mov
lods
sbb
mov
lods
stc
hlt
push
jmp
xchg
scas
pop
or
adc
cmp
mov
push
adc
mov
dec
push
iret
loop
jnp
rcl
or
and
ror
push
data16
cmp
pushf
sbb
imul
dec
es
sub
mov
arpl
or
mov
test
pop
cmp
adc
mov
sbb
retf
jg
sbb
jne
pop
pop
std
mov
jno
shl
pushf
pop
xchg
or
mov
aas
xor
sub
xor
enter
fstp
jmp
xor
(bad)
out
jmp
cmp
fxam
xchg
sbb
icebp
pusha
dec
sbb
pop
out
push
pop
popa
ficomp
pop
pusha
xchg
outs
inc
adc
xchg
inc
fcmovbe
loop
adc
test
mov
xor
xchg
push
idiv
and
dec
mov
jle
xchg
sar
dec
stos
popa
push
repnz
stos
mov
shl
mov
imul
gs
das
nop
aaa
sub
mov
or
mov
cmp
inc
xor
mov
fcom
push
in
dec
aas
xchg
lds
gs
enter
cmp
inc
sub
mov
retf
xor
adc
push
cmps
les
cs
mov
xchg
and
out
sbb
pop
dec
adc
dec
pop
adc
dec
dec
jb
pop
ins
test
pop
(bad)
jecxz
in
xor
cmp
(bad)
cdq
mov
lea
mov
aam
and
stos
add
clc
mov
je
rcr
mov
lods
cmps
mul
ins
ds
inc
push
hlt
test
ret
push
or
fld
inc
pop
or
dec
jno
inc
pushf
aad
pop
gs
ret
jecxz
and
sbb
idiv
(bad)
cmp
xor
mov
ja
sub
loope
das
dec
jecxz
(bad)
and
ror
mov
lea
dec
loope
or
adc
mov
inc
(bad)
push
outs
xor
les
addr16
das
xchg
sub
sbb
or
inc
mov
fstsw
add
stos
inc
lods
mov
push
out
icebp
push
test
das
adc
push
xor
cdq
arpl
xor
pop
pop
(bad)
ds
push
(bad)
iret
shl
push
addr16
pushf
pusha
xchg
je
and
stc
pop
adc
rcl
mov
mov
pop
fisttp
push
fcmove
lahf
xor
xor
addr16
push
addr16
aam
loopne
fadd
inc
xchg
jp
ror
shl
jl
add
xchg
lahf
sub
popf
out
stos
sar
cmp
stc
dec
pusha
clc
xchg
lods
(bad)
popf
and
and
imul
adc
cdq
mov
mov
shl
jmp
inc
fwait
bound
call
add
jns
pop
dec
sub
dec
out
aam
sbb
rol
aas
add
leave
xchg
(bad)
mov
(bad)
jl
cld
xchg
leave
adc
fnsave
inc
retf
adc
dec
pop
cmc
mov
pop
jne
movs
dec
fisub
(bad)
mul
dec
push
sub
fmul
mov
out
inc
repz
daa
push
test
mov
pinsrw
sub
jno
jns
sub
adc
or
pop
cmp
(bad)
iret
ins
(bad)
fdivr
in
mov
xor
add
in
adc
and
xor
pop
daa
push
mov
sbb
sbb
sbb
rep
fild
jmp
leave
inc
push
mov
call
rol
adc
and
xchg
inc
fiadd
push
pop
jp
aaa
fiadd
call
rol
dec
sbb
jle
cld
retf
stos
push
pop
sbb
jae
shl
mov
bound
mov
adc
jp
enter
dec
sub
arpl
dec
push
sub
xor
fist
aad
imul
ret
mov
cmp
sub
push
jns
add
int
lods
dec
loopne
data16
mov
leave
mov
adc
sub
mov
lock
jmp
push
adc
pop
fwait
xor
add
fld
call
mov
xchg
adc
repnz
repz
cmp
sub
ins
fwait
out
je
jl
cli
rol
(bad)
pop
sahf
jne
inc
in
or
mov
add
das
fisubr
daa
shl
pop
pusha
push
popa
adc
cmp
inc
jp
jp
ret
fistp
into
inc
bnd
mul
pop
sub
(bad)
and
imul
jne
(bad)
xor
sub
and
movs
xor
fsubr
push
ja
xchg
mov
mov
jl
inc
xchg
(bad)
mov
push
cmps
or
jmp
lods
and
stc
out
add
mov
sub
stc
mov
mov
hlt
scas
pusha
ret
hlt
aas
(bad)
inc
dec
xor
in
push
les
loope
dec
popa
dec
and
int3
pop
mov
jo
test
or
mov
push
pop
xor
cld
jle
mov
cmp
pushf
jb
jecxz
inc
xor
xchg
mov
or
cmp
sbb
hlt
mov
xchg
lock
xchg
inc
aaa
xor
mov
xchg
(bad)
dec
mov
pop
fsubr
pop
mov
nop
and
lods
arpl
mov
call
pop
jmp
ss
pop
and
fsubrp
inc
mov
push
nop
xchg
mov
lods
cmp
dec
sbb
in
or
adc
stc
cli
je
xchg
inc
or
bnd
lahf
mov
fnstenv
pop
stc
inc
cmp
lock
fs
out
stc
xchg
imul
loopne
mov
jbe
dec
addr16
push
add
cmp
cmps
scas
xor
inc
out
xor
rol
iret
xor
jnp
dec
std
cmp
push
in
sbb
or
sahf
(bad)
(bad)
xchg
daa
jle
cmp
jo
ja
mov
sti
bound
iret
pop
inc
or
out
movs
jne
fwait
xchg
or
cmc
(bad)
clc
push
adc
mov
outs
xor
std
sbb
or
std
mov
inc
mov
and
cmp
mov
(bad)
and
dec
cmps
cmc
ret
and
sub
adc
out
lea
cmc
jbe
push
js
jns
je
popf
dec
nop
mov
loope
cmp
call
(bad)
out
fnstsw
xchg
out
test
push
xlat
jno
or
sti
popa
mov
imul
add
xchg
je
dec
cdq
dec
stc
and
fbld
idiv
cmc
fs
mov
popa
sub
mov
or
mov
mov
jo
mov
and
cld
adc
jg
stc
mov
xchg
inc
call
lods
stos
mov
fnstsw
inc
sbb
retf
push
int
(bad)
not
or
iret
mov
add
ins
lea
out
cmps
jns
mov
ss
fistp
mov
fld
xor
lahf
mov
add
out
inc
das
push
mov
ret
xchg
je
sub
scas
mov
sub
ss
inc
repnz
call
cmp
dec
mov
dec
jae
or
sbb
gs
or
pop
in
sbb
in
imul
ss
mov
test
clc
sub
mov
imul
leave
mov
push
pop
or
or
dec
loopne
mov
sub
xchg
mov
ficomp
loopne
shl
sub
push
push
popf
add
jl
mov
mov
or
(bad)
mov
dec
cs
lods
adc
enter
fdiv
mov
ret
repz
(bad)
cdq
xor
lock
ins
adc
xor
mov
je
mov
js
push
mov
sub
sbb
xchg
ds
mov
pusha
mov
out
imul
adc
xor
shl
aam
and
movs
sub
ins
pop
push
jmp
loope
rol
sub
and
cmp
mul
and
mov
and
pop
test
retf
ret
push
jb
fs
sti
push
pop
icebp
mov
sbb
cdq
test
ret
cdq
or
aad
jno
sub
or
sbb
fwait
sub
loop
pop
xchg
je
sub
lods
scas
jbe
mov
sbb
dec
pusha
test
push
bound
cmp
pop
push
adc
add
add
xchg
xor
repz
sbb
and
in
cli
push
out
jo
in
(bad)
loopne
lock
jnp
inc
push
xchg
retf
or
add
xor
or
retf
mov
add
mov
mov
mov
mov
mov
popf
ret
pop
pusha
xchg
daa
out
popf
sub
sbb
in
aaa
adc
popa
inc
and
and
mov
fmul
push
jbe
or
cmp
sub
cmps
xchg
push
push
ins
sub
dec
aam
mov
movs
sbb
sub
sub
push
sbb
sub
inc
pushf
jno
movs
jp
test
lea
or
sbb
add
js
(bad)
fcom
and
or
jno
add
rcr
and
mov
lods
xor
ret
adc
outs
ins
push
into
and
aad
adc
imul
ds
push
sbb
cmp
push
mov
enter
fild
xor
dec
cmp
and
mov
iret
mov
cli
into
and
hlt
push
xchg
push
rcl
inc
push
jmp
sub
popa
jmp
add
dec
test
jmp
mov
gs
xchg
ret
inc
ss
idiv
push
les
movs
or
mov
mov
lock
data16
sub
xchg
loop
stc
rcl
outs
mov
mov
sbb
sti
ror
ror
mov
xor
dec
lods
(bad)
add
xchg
and
jmp
lds
pop
(bad)
aam
enter
int3
mov
inc
das
ret
aam
test
push
xor
cmp
not
jg
sub
push
int3
dec
or
xor
adc
ss
mov
loop
xchg
test
mov
call
cmp
and
fcomp
add
ins
sahf
nop
and
call
or
sub
dec
daa
ret
fbstp
sbb
in
cld
fld
jecxz
cdq
inc
mov
ins
xor
inc
xchg
stos
or
ja
loope
inc
inc
addr16
xor
aas
push
cdq
out
jmp
test
test
xor
fwait
(bad)
sub
ins
repz
xchg
pop
jmp
cmps
jp
aad
sbb
in
push
arpl
push
push
ret
xchg
or
xchg
in
fidiv
sub
sub
dec
mov
sub
loopne
xor
push
cld
retf
lds
clc
js
in
sub
inc
inc
jecxz
push
and
fs
inc
(bad)
and
push
imul
adc
jle
xchg
inc
jp
dec
pop
daa
cs
jns
cli
lock
lds
sbb
and
bound
dec
xchg
cmp
out
mov
and
fcmovnb
jb
mov
sub
push
shl
xor
xchg
out
jno
fimul
inc
rcr
push
mov
push
aad
xchg
fnstenv
jp
clc
sub
inc
mov
jae
stos
mov
push
pop
or
xchg
scas
mov
sbb
ret
add
adc
pop
dec
inc
mov
sbb
jb
shl
ror
mov
call
mov
sub
mov
xchg
mov
mov
std
push
repz
xchg
xchg
icebp
dec
cmp
pusha
bound
sub
fucomp
cwde
or
(bad)
in
jmp
xchg
mov
shr
cdq
sbb
add
js
pusha
mov
xchg
iret
dec
call
dec
sbb
mov
or
movs
mov
xchg
inc
inc
idiv
push
xor
sub
cmp
adc
outs
test
test
aas
sub
add
cmps
push
mov
das
nop
push
push
cmp
jge
push
retf
inc
mov
mov
les
pop
clc
test
addr16
inc
lds
repnz
jb
scas
inc
nop
adc
push
fwait
add
dec
cli
mov
cmp
loop
call
bound
mov
scas
lods
call
ss
test
mov
idiv
aad
add
xor
jne
shl
scas
and
mov
pop
outs
(bad)
clc
iret
loope
les
mov
rcr
sbb
xchg
cdq
mov
adc
call
cdq
into
cmp
or
pop
add
js
xchg
sub
push
xor
push
and
xchg
jae
lahf
and
sub
mov
adc
out
dec
push
retf
push
lahf
add
push
mov
inc
sbb
in
jle
es
dec
js
push
sbb
addr16
pop
cmp
push
sbb
mov
loope
lock
cmp
ds
(bad)
pop
mov
addr16
push
pop
pushf
cld
cmp
rol
sub
jo
retf
fwait
push
and
inc
mov
inc
jnp
icebp
xchg
pop
add
mov
mov
mov
fldenv
mov
iret
lea
inc
mov
rcl
sbb
cld
into
xchg
hlt
scas
rcl
inc
aam
xor
out
aad
(bad)
xchg
cmp
mov
icebp
or
sbb
test
cmps
pop
mov
or
clc
and
ret
push
test
or
mov
push
pop
push
je
sub
std
sbb
adc
ja
xchg
or
popf
lahf
outs
jge
stos
into
or
push
pop
(bad)
popa
repnz
adc
(bad)
push
and
fwait
mov
in
and
enter
xchg
push
stc
(bad)
out
ins
jmp
(bad)
adc
mov
jp
or
fwait
ins
pop
es
xchg
sub
jbe
sti
call
fabs
adc
add
int3
xor
(bad)
stc
push
jnp
sub
push
cmps
fistp
inc
xchg
ss
push
xlat
clc
cmp
add
cdq
not
adc
jne
or
adc
mov
icebp
icebp
pusha
xor
sahf
push
fstp
adc
movs
ins
out
mov
test
fisttp
stos
cmp
add
and
dec
push
test
es
rcr
pop
mov
nop
ins
pop
ss
jae
mov
push
adc
jle
retf
ja
jne
mov
fs
arpl
adc
test
xchg
call
test
lahf
add
fucomp
xchg
jbe
mov
push
loopne
inc
jae
shr
cmp
icebp
add
sbb
dec
mov
repz
mov
dec
mov
out
add
xchg
xlat
int
add
sub
pop
mov
int3
sahf
cmps
xchg
dec
jno
and
dec
test
out
repnz
imul
cmps
sti
mov
jno
add
inc
sub
fld1
mov
or
dec
retf
rcl
dec
xor
push
lods
sti
pop
aad
mov
je
clc
inc
cs
push
push
jmp
stc
dec
push
dec
sub
sub
mov
mul
(bad)
cmp
mov
js
inc
xchg
cmps
push
in
and
push
rcr
jge
xchg
jle
jno
jno
dec
jmp
xchg
sub
popa
mov
sbb
mov
gs
push
int3
adc
test
cmovs
or
and
jmp
movs
xchg
imul
mov
std
push
cld
cmps
shl
add
sub
dec
dec
mov
popf
pop
sbb
xor
cmp
mov
ret
pop
pop
mov
mov
(bad)
sub
dec
push
jl
push
pop
pop
aad
mov
xchg
push
imul
jmp
cld
scas
ins
mov
sub
pop
push
jl
mov
pop
ret
(bad)
ficomp
or
cmp
xchg
add
imul
fs
jne
add
out
lahf
sub
cld
enter
lods
add
or
mov
and
jmp
lock
rcr
(bad)
push
push
(bad)
mov
fs
(bad)
cmp
out
retf
fs
imul
into
shl
pop
mov
pop
mov
into
popa
cmp
out
jne
xchg
(bad)
rcr
or
jmp
pop
pop
arpl
pushf
jns
repnz
sbb
scas
inc
jmp
xchg
(bad)
fbstp
loop
mov
xchg
loop
rcl
mov
and
mov
xchg
pop
dec
dec
mov
fwait
aad
movs
push
jl
fcom
push
popf
cdq
out
mov
inc
sbb
sub
movs
and
pop
inc
jne
leave
fcom
pop
addr16
dec
sub
mov
xchg
cmp
add
jnp
jns
inc
adc
or
in
sbb
xchg
loopne
adc
lea
dec
add
pop
jo
out
sbb
das
fwait
retf
push
inc
pusha
repnz
cs
pop
imul
data16
(bad)
(bad)
and
xor
fstp
fwait
in
add
in
out
mov
ja
mov
xchg
lods
test
add
add
dec
push
inc
cmps
(bad)
dec
rcl
sbb
pop
das
mov
dec
sbb
mov
xchg
cli
nop
lock
jle
int3
in
cmps
sub
clc
push
jno
jge
ss
or
add
les
xor
jb
mov
and
add
or
fcomp
xchg
mov
push
jmp
int
pop
lea
push
hlt
or
push
mov
push
push
jl
stos
or
xchg
in
(bad)
xor
mov
mov
cmp
xor
or
fldcw
mov
aas
cmp
jno
std
sub
test
dec
add
jge
test
dec
fiadd
fs
add
xchg
ins
in
sahf
add
(bad)
xchg
mov
cmp
xor
mov
sub
imul
repnz
lock
mov
sub
push
push
and
xlat
push
and
in
xchg
les
mov
xor
xchg
sub
pop
mov
mov
cmp
aam
call
icebp
call
in
(bad)
mov
push
in
xchg
add
iret
push
lods
mov
fld
(bad)
lods
or
mov
gs
add
ret
jno
stos
(bad)
jp
adc
jo
adc
dec
xor
mov
cmp
pop
adc
cmp
les
adc
fild
or
cmp
shl
mov
xor
call
leave
push
repnz
push
push
pop
or
mov
out
hlt
test
cld
dec
shr
(bad)
fstp
pop
imul
push
sub
sbb
and
mov
push
mov
data16
ss
pop
lock
loopne
dec
mov
adc
leave
add
int
(bad)
mov
or
dec
test
add
int
cli
movs
rcl
sub
mov
jno
repz
add
shl
cwde
mov
mov
mov
movs
sbb
clc
cmps
fcomp
cwde
and
bound
and
push
sahf
or
xchg
mov
pop
fistp
test
xchg
mov
and
lock
cmc
lods
adc
sbb
and
sti
shr
pop
retf
xor
xor
stos
pop
xchg
in
add
or
dec
fadd
lahf
mov
in
int
cmp
cmp
xchg
fs
mov
xchg
pop
ret
scas
xchg
cmp
sar
mov
jle
pop
dec
or
scas
(bad)
add
cmp
cli
out
pop
daa
mov
push
adc
push
add
sbb
movs
outs
pop
pop
sub
pop
cmp
pop
div
xchg
push
mov
sub
fsub
(bad)
aam
mov
cwde
mov
pop
movs
xchg
sbb
iret
sub
jo
pop
jmp
adc
movs
in
cmp
aad
push
jge
call
gs
jle
mov
push
aaa
nop
mov
adc
push
push
dec
mov
in
and
sub
js
outs
add
pop
mov
jbe
add
shl
jns
dec
pop
cwde
lahf
and
inc
and
or
cmp
fild
sub
fnstenv
mov
pop
push
fadd
sbb
(bad)
push
icebp
mov
add
dec
pop
pop
xchg
and
outs
xchg
les
test
inc
xchg
jge
cmp
mov
ja
pop
jmp
mov
pushf
add
(bad)
loopne
or
enter
ss
in
scas
xlat
mov
sahf
aam
stos
sbb
ret
cmps
pop
sub
jmp
leave
stos
push
in
ins
jl
or
(bad)
js
mov
push
jmp
dec
jbe
cmc
mov
test
stos
sub
stc
and
aad
dec
adc
outs
xor
ins
cli
xor
push
rcl
jbe
xor
pop
mov
mov
clc
in
jl
fdiv
mov
xchg
fnstcw
push
out
adc
pop
movsx
(bad)
pavgw
movs
fbstp
cmp
push
and
(bad)
rcl
add
aaa
xchg
push
push
jp
push
pop
pop
or
pop
push
sahf
and
sub
jne
mov
(bad)
(bad)
or
cs
rcl
ins
(bad)
pop
sbb
fcomi
data16
jg
mov
outs
jno
add
cli
xchg
sub
add
and
xor
push
adc
mov
imul
leave
jno
jnp
ds
pop
in
cwde
pop
xchg
push
cmp
je
lock
mov
xchg
mov
int
push
inc
loope
bound
pop
mov
add
sub
frstor
cdq
lods
push
jnp
xor
fsubr
xchg
cmp
test
into
cmps
xchg
test
add
leave
pop
dec
(bad)
cld
cdq
jae
loopne
shl
(bad)
push
aam
push
sti
loopne
sub
or
and
out
cmp
push
or
rcl
mov
popf
cmp
jne
add
and
(bad)
sub
jmp
xchg
mov
(bad)
fnsave
inc
or
jmp
retf
std
jp
lea
fcmovu
and
cmp
aad
push
adc
into
cmp
(bad)
in
mov
ror
loop
or
push
inc
push
stc
(bad)
in
xor
push
es
push
cmps
and
pop
out
dec
xchg
adc
scas
push
or
mov
xor
dec
cli
cli
cld
and
ins
(bad)
(bad)
cld
xor
or
mov
push
lds
jmp
pop
push
dec
mov
xchg
out
adc
sbb
sti
loopne
xchg
push
les
jg
ret
test
jno
ror
(bad)
dec
cmc
or
fdivr
push
lods
popa
not
push
cmp
adc
xor
mov
xchg
fs
jbe
mov
cmp
retf
inc
(bad)
pop
mov
xchg
movs
push
(bad)
and
out
sahf
sub
pop
dec
sbb
push
sbb
je
sbb
out
nop
ins
pusha
sbb
mov
movs
cmp
push
inc
fbstp
or
xchg
cmp
scas
sbb
test
or
and
test
sbb
scas
cmps
push
pop
dec
pop
mov
pop
adc
shl
scas
cdq
jmp
movs
adc
arpl
dec
mov
ficomp
gs
scas
dec
sub
pop
clc
mov
outs
fs
mov
loopne
mov
push
cmc
mov
(bad)
dec
test
add
mov
movs
mov
dec
sbb
repz
xchg
xor
mov
popf
std
(bad)
push
ins
(bad)
sub
and
mov
push
xchg
gs
sbb
mov
jge
fsqrt
push
mov
enter
in
shr
cmp
repz
xor
mov
mov
and
push
xor
jb
imul
and
test
adc
and
push
lahf
out
dec
mov
ror
inc
xchg
and
fsubr
add
pop
and
sbb
test
push
pop
push
scas
addr16
out
and
in
sbb
jmp
push
pop
stc
or
sbb
loop
push
pop
dec
sub
je
and
je
sub
out
mov
test
repnz
inc
dec
iret
inc
and
xchg
mul
xchg
das
mov
in
mov
ins
sbb
mov
or
mov
mov
enter
dec
pusha
dec
stos
dec
shl
out
fisttp
je
bnd
xchg
xchg
mov
retf
mov
and
out
jle
fwait
popa
ret
xor
pop
pop
pop
inc
cdq
out
mov
das
sahf
or
int3
cmp
xchg
fisubr
mov
in
and
sub
and
js
mov
and
ins
imul
jg
retf
je
call
int3
cmp
and
pop
lds
push
cwde
cmp
jl
and
adc
fs
and
push
bound
sahf
mov
lea
ja
(bad)
fcomp
jbe
rcl
mov
push
xchg
stos
mov
add
mov
pop
icebp
mov
leave
jnp
test
icebp
jae
cld
adc
xor
mov
dec
cmp
cdq
cs
repz
adc
jge
fidivr
cmp
fs
push
inc
mov
pop
push
into
pop
jp
mov
pop
jl
pop
add
(bad)
and
imul
jno
shl
mov
je
imul
mov
jo
(bad)
shl
mov
xchg
movs
mov
xor
mov
loop
xchg
es
mov
fsubr
xchg
jae
loop
lock
push
add
jns
inc
cld
xlat
mov
mov
mov
push
adc
inc
imul
mov
jg
dec
scas
mov
idiv
sahf
mov
cmps
dec
sar
aad
mov
add
xor
ins
clc
pop
outs
js
lock
sbb
and
imul
adc
pop
fld
lahf
mov
mov
shl
jno
inc
pop
and
pushf
fst
stos
mov
adc
jb
xor
or
and
mov
mov
sar
pminsw
pusha
cmp
sub
inc
mov
sbb
mov
movs
fnsavew
mov
fmulp
mov
cs
mov
add
repnz
lea
fdivr
pop
adc
mov
(bad)
push
jl
jg
pop
dec
icebp
in
outs
lods
xchg
jmp
rcr
retf
cmp
and
inc
bound
pop
enter
mov
jg
adc
scas
push
ret
pop
push
pop
into
pop
dec
not
xlat
inc
lock
mov
push
test
sar
imul
(bad)
dec
je
xchg
aas
and
in
ins
inc
sub
jo
leave
loopne
and
inc
pop
je
jl
mov
ret
xchg
mov
shl
pop
mov
cmp
inc
mov
fsubp
push
jmp
popa
xchg
cmps
jns
out
out
ins
jmp
jb
test
stos
inc
lock
adc
pop
cmp
aas
repz
(bad)
adc
sbb
in
retf
inc
push
adc
loopne
cld
mov
sbb
cs
out
rcr
xor
cdq
or
add
in
adc
xor
mov
mov
xchg
fs
fistp
mov
cld
leave
jecxz
adc
pop
push
sti
(bad)
in
mov
xlat
test
xlat
pushf
jb
push
loope
lods
fadd
or
test
js
sub
mov
fisttp
push
out
cmp
icebp
push
xor
sub
adc
mov
add
mov
inc
jb
ins
outs
mov
mov
mov
jl
add
mov
jmp
sub
and
xor
dec
xchg
xlat
inc
ret
xor
sbb
(bad)
adc
push
repnz
test
cmps
neg
mov
lahf
adc
shl
out
push
loope
adc
cmps
gs
shr
sbb
mov
or
aam
sbb
lahf
mov
sbb
cmp
nop
out
in
retf
dec
adc
dec
fidivr
pop
int3
fcmovu
aaa
dec
cmps
(bad)
daa
in
arpl
cmp
popf
inc
jmp
cdq
pop
mov
sub
out
push
loopne
adc
imul
cdq
dec
bound
(bad)
movs
outs
sbb
fwait
cmp
stos
xchg
dec
scas
push
jnp
cmp
pop
in
jp
cmp
jb
sub
das
or
xor
pop
in
(bad)
iret
xchg
sub
mov
sub
push
push
dec
(bad)
dec
push
adc
mov
pop
push
mov
xchg
stos
enter
mov
dec
pop
sub
mov
(bad)
stos
pusha
ret
jmp
pop
push
stos
jns
xchg
jmp
add
enter
sub
or
in
pusha
jge
xchg
out
pop
lock
xor
scas
push
or
dec
push
clc
aad
loope
mov
inc
stc
fimul
setp
aas
out
fbld
cdq
bound
jnp
out
imul
mov
pusha
sbb
sbb
mov
dec
push
add
mov
jle
pop
out
mov
adc
xor
dec
pop
push
cs
mov
xor
add
aas
xlat
(bad)
cld
ss
frstor
fldenv
mov
cdq
xor
fcomp
pop
mov
xchg
push
fiadd
mov
mov
pop
(bad)
lahf
ja
xor
out
loopne
pop
cmp
pop
out
cmp
iret
nop
cdq
outs
mov
(bad)
pop
dec
dec
addr16
push
js
sub
mov
dec
outs
ins
inc
addr16
int3
les
mov
dec
sbb
(bad)
or
test
lahf
push
push
adc
cmp
ds
dec
loope
push
cmp
pop
mov
cmp
cs
xor
mov
int
daa
inc
pusha
test
inc
cmps
fidiv
movs
sti
mov
xor
mov
mov
sbb
mov
pop
sti
test
jle
push
imul
or
add
sub
push
adc
dec
pop
pop
sbb
pop
out
das
lahf
outs
sub
scas
fstp
mov
mov
push
rol
fmul
repnz
repz
inc
jmp
and
and
xchg
ins
and
push
ffreep
hlt
les
mov
push
and
scas
dec
xchg
and
mov
mov
popa
inc
inc
iret
mov
jno
retf
stos
in
jo
mov
mov
int
sbb
icebp
cdq
pop
outs
(bad)
in
fisttp
arpl
(bad)
jmp
call
in
and
lea
push
and
ror
jmp
inc
xchg
out
movs
push
pop
ins
cs
aam
push
ins
mov
sub
in
movs
push
js
lods
sub
jg
xchg
add
mov
push
ret
test
mov
cmp
push
push
popa
cmp
scas
and
ret
jne
aam
in
cmp
xor
jmp
mov
sbb
lea
out
jge
adc
mov
lea
ret
sbb
pop
sysexit
fmul
lock
xor
aaa
ja
not
cwde
nop
xlat
je
call
xchg
mov
into
cmp
leave
jne
cs
dec
bound
jge
adc
ret
add
call
and
dec
fmul
iret
add
scas
jge
call
inc
cmp
cli
pop
and
ficom
mov
pop
mov
retf
jne
push
mov
cmp
out
sbb
(bad)
int3
mov
xchg
sbb
and
xchg
fcom
sahf
enter
dec
push
adc
aas
xchg
xchg
in
adc
cmps
sbb
mov
int3
in
xor
outs
movs
ja
pop
retf
out
push
je
mov
retf
jb
enter
and
dec
jmp
add
leave
add
cwde
push
xor
pop
mov
inc
out
push
call
and
jecxz
lock
adc
call
lea
and
mov
outs
popf
jb
js
enter
mov
mov
movs
jbe
jmp
loope
imul
fst
aam
div
(bad)
out
fwait
ss
sub
sub
mov
ficom
fdiv
clts
ins
dec
sbb
scas
cmps
clc
xchg
mov
(bad)
fnstcw
lds
and
in
jecxz
adc
jbe
icebp
popa
scas
cmps
iret
daa
jge
loopne
push
out
mov
mov
iret
inc
mov
push
xor
fimul
cmp
lds
lock
mov
rcr
mov
test
std
and
adc
(bad)
test
out
mov
pop
scas
imul
cld
test
ds
pop
rcr
ja
push
adc
xchg
adc
aas
call
and
mov
sbb
movs
sub
cmc
sub
sbb
mov
or
push
mov
daa
frstpm(287
mov
mov
pop
arpl
in
push
test
inc
mov
lods
inc
fild
fsubr
dec
mov
sti
xchg
movs
jmp
cs
fst
es
into
mov
xor
sbb
adc
movs
cmp
leave
xor
data16
sbb
popf
push
or
inc
scas
mov
lods
out
xchg
mov
jbe
jmp
(bad)
cdq
inc
iret
sub
mov
mov
imul
enter
addr16
nop
fbld
jo
push
xchg
mov
loop
or
xor
sar
clc
test
mov
mov
cli
sbb
ror
mov
out
or
xchg
inc
inc
popf
sbb
test
iret
jmp
gs
clc
push
sysexit
xchg
pop
daa
cmp
dec
fild
dec
lahf
test
stos
(bad)
lea
out
(bad)
sub
out
sub
dec
add
or
fistp
sbb
fsub
cmps
jb
sti
out
sub
aaa
jno
sar
jmp
sbb
jne
je
rcl
int
fsubp
mov
jle
(bad)
cli
pop
mov
lock
daa
imul
(bad)
adc
mov
aad
gs
popa
arpl
adc
adc
add
mov
xchg
jmp
add
jo
push
lods
lock
clc
xchg
mov
cmc
push
xor
imul
hlt
ins
mov
lods
imul
data16
js
shr
fdiv
cmp
loopne
inc
aaa
scas
cmp
je
lds
dec
inc
sti
je
jmp
(bad)
xchg
mov
push
push
cmc
adc
xchg
push
arpl
adc
dec
icebp
adc
ds
addr16
add
enter
loopne
push
(bad)
icebp
or
xchg
outs
int
es
sbb
and
add
and
jb
jae
adc
pop
dec
and
mov
aaa
(bad)
fadd
paddq
(bad)
mov
repz
sbb
call
repnz
je
(bad)
cmc
fisttp
adc
cmc
sub
cs
xchg
mov
pusha
or
sub
and
xchg
or
adc
xor
or
jne
rcr
(bad)
mov
stc
jne
xlat
xor
push
outs
or
push
scas
or
and
shl
lods
mov
push
push
call
repnz
jecxz
xor
fs
mov
imul
addr16
add
or
lahf
add
mov
sub
dec
and
xor
jp
cmp
adc
je
pusha
ficomp
xchg
sbb
dec
mov
mov
(bad)
or
cld
xor
xor
jg
ja
inc
hlt
enter
ds
dec
cmp
inc
clc
dec
push
lods
adc
fild
adc
pop
into
push
inc
mov
test
(bad)
lods
or
jnp
movs
cmp
dec
sahf
mov
mov
mov
leave
imul
enter
iret
mov
loop
fwait
sbb
cmc
push
jp
adc
and
into
movs
pop
inc
mov
xchg
pop
pop
test
ss
dec
inc
aam
dec
mov
sub
add
sbb
jecxz
int
add
xor
cmc
das
jns
or
inc
in
or
popf
inc
xchg
popa
sbb
aas
mov
out
or
mov
mov
jle
push
ins
fadd
call
aad
outs
nop
outs
(bad)
retw
icebp
nop
lea
test
lahf
movs
pop
sub
sub
cmp
jp
and
lods
mov
cmc
pop
adc
xor
xor
add
(bad)
or
sbb
sbb
jge
sbb
sar
fcmovbe
mov
stos
stc
pop
sahf
jmp
inc
jmp
jne
(bad)
hlt
mov
lods
xor
das
ror
dec
(bad)
and
popf
mov
jge
and
push
test
jle
hlt
lahf
add
lahf
xor
hlt
out
mov
jg
cmp
jo
dec
lahf
(bad)
mov
jle
mov
jns
pop
xor
les
imul
loopne
inc
sbb
or
dec
mov
adc
jecxz
nop
cmps
and
test
out
mov
sbb
in
ss
into
std
xchg
(bad)
popa
jp
push
jnp
dec
iret
neg
pop
test
mov
fsub
test
(bad)
int3
mov
in
lods
retf
fild
ror
mov
xchg
icebp
jg
cld
mov
int3
scas
mov
mov
mov
xor
adc
mov
dec
push
adc
mov
dec
sar
pop
mov
pop
and
mov
xchg
pop
sub
shl
std
pop
jp
pop
rcr
cmp
or
les
aaa
xor
sti
mov
push
mov
jecxz
mov
or
sahf
push
dec
sub
inc
cmp
pop
dec
pop
xor
int
iret
cmp
mov
shr
(bad)
jmp
(bad)
and
leave
xchg
add
lods
add
mov
add
pop
repz
aam
pop
jecxz
int3
inc
rcr
dec
jge
lods
cmp
and
jbe
xor
scas
pop
jmp
adc
mov
leave
inc
and
jae
je
lahf
inc
xchg
mov
ror
cmps
test
std
js
xor
pop
ror
jb
sub
jbe
retf
clc
xchg
add
stos
or
sub
or
xchg
in
lods
not
shl
sbb
or
retf
mov
adc
inc
les
jbe
xchg
aaa
and
push
(bad)
cmp
jecxz
add
push
cmc
sub
mov
mov
retf
mov
scas
pusha
sbb
adc
mov
out
inc
es
cmp
(bad)
jae
sub
push
out
lods
pop
xchg
int3
mov
test
adc
jne
cmp
mov
xor
xchg
loop
push
push
mov
imul
aam
sbb
push
mov
push
sbb
das
push
push
push
add
inc
cmp
shl
dec
mov
xchg
push
enter
mov
aas
call
pop
outs
pop
das
(bad)
repz
call
scas
mov
cmps
outs
aad
or
mov
adc
idiv
adc
or
adc
mov
cld
shl
dec
mov
sub
aaa
jno
adc
sub
add
nop
mov
std
dec
inc
xchg
sub
mov
push
test
ret
mov
das
push
shr
(bad)
push
imul
push
out
je
dec
inc
popf
inc
sbb
pop
out
(bad)
sbb
jbe
rcr
jl
pop
jecxz
out
mov
xor
add
dec
jae
mov
out
out
addr16
and
out
or
repz
shl
xchg
pop
jmp
pop
mov
aad
dec
dec
pop
jg
ror
xchg
xchg
pop
or
jmp
adc
pop
cmp
mov
inc
mov
cmc
jns
shr
dec
jmp
mov
mov
push
shr
pop
adc
je
lds
pcmpgtb
(bad)
xor
ins
push
mov
sar
sub
pop
sub
cdq
cmp
int3
popa
repnz
shl
xor
and
and
popf
mov
adc
aam
mov
xchg
(bad)
mov
arpl
in
out
jne
cs
cmp
jns
jb
mov
mov
dec
and
lea
out
scas
fcmovbe
cmp
idiv
fsub
aas
xchg
mov
mov
push
cmps
push
nop
mov
je
ror
and
outs
push
dec
dec
and
sbb
inc
std
mov
xor
jmp
test
xchg
mov
movs
test
shr
stos
push
aas
test
mov
out
jnp
outs
test
mov
xchg
jle
stc
mov
repnz
imul
inc
add
gs
add
aas
push
xchg
inc
and
movs
enter
mov
pop
cmp
and
jmp
mov
sub
lods
push
sub
sbb
adc
push
add
dec
loop
xor
add
lods
call
sub
pop
fmul
pop
jnp
jmp
mov
xchg
outs
xchg
fs
pusha
xchg
mov
and
xchg
cmp
dec
jo
or
fidiv
rcr
pop
out
je
jo
mov
mov
mov
js
dec
push
in
ret
xor
dec
sub
fs
shr
xor
mov
arpl
mov
in
mov
in
xor
sbb
xor
mov
mov
imul
add
ds
bnd
out
pop
stc
(bad)
imul
shr
sub
xlat
jmp
mov
in
xchg
pop
xchg
inc
stos
and
(bad)
and
mov
pusha
mov
jp
mov
outs
xchg
and
and
push
cli
and
stc
dec
movs
fucom
ret
mov
jl
arpl
push
cwde
fcos
js
repnz
or
or
sbb
push
(bad)
jns
sbb
xchg
or
sbb
xor
push
pop
inc
icebp
add
xor
lea
xor
push
jae
(bad)
popa
mov
aaa
cmp
enter
out
mov
loope
outs
lock
pop
leave
lods
xchg
jl
xchg
or
cld
retf
mov
scas
push
ins
jecxz
aaa
xor
push
or
jl
movs
je
or
jae
add
out
ret
inc
push
or
xor
jg
mov
jg
dec
xor
outs
xor
sub
aas
pop
sbb
mov
push
adc
adc
push
hlt
and
(bad)
in
fmul
inc
jmp
shl
sbb
push
pop
mov
and
inc
jecxz
dec
push
push
inc
cwde
jo
stc
fisttp
mov
adc
sar
pop
xchg
sar
sbb
xor
cmp
and
xchg
cmps
jl
and
xchg
xchg
push
stc
cmps
xlat
sbb
movs
bound
enter
(bad)
fadd
pop
test
cmp
jns
jns
popf
icebp
adc
aad
out
mov
inc
inc
xor
cmps
out
add
pop
int
xor
aad
in
das
dec
jno
mov
out
mov
add
sahf
sub
sub
and
ja
scas
or
push
mov
(bad)
mov
mov
pop
dec
push
adc
lds
jmp
cmp
cdq
sub
into
jl
(bad)
or
xchg
jno
(bad)
pop
xchg
push
(bad)
push
popf
loopne
ins
xor
test
adc
movs
bound
(bad)
in
xchg
clc
jle
push
ret
ds
clc
outs
das
adc
and
sub
jo
int3
sub
jmp
cmp
aaa
stc
repz
xor
mov
popa
sbb
pop
xchg
(bad)
ss
push
push
mov
test
jg
sbb
cmp
jae
adc
cmp
mov
cli
gs
jecxz
sahf
xor
scas
movs
push
loope
inc
enter
ja
push
lods
xor
cdq
push
and
and
jno
jb
stos
mov
enter
rcr
aam
in
xchg
fldcw
cdq
leave
pushf
jecxz
mov
mov
mov
adc
mov
mov
sub
ins
inc
ror
jge
out
pop
cmp
push
dec
lods
pushf
jns
sbb
test
ja
adc
mov
push
lods
xor
ret
jne
daa
push
xor
mov
xchg
cdq
pusha
icebp
inc
pop
jnp
ror
jg
popf
jae
dec
pop
jno
jae
cld
xor
inc
enter
enter
loopne
imul
jle
pop
test
repz
fs
jmp
sub
loopne
push
pop
sub
lods
pushf
ret
add
sub
lods
lds
call
in
lods
mov
lock
mov
retf
retf
inc
rol
xchg
push
into
(bad)
fsub
add
sti
lahf
adc
add
jg
cmp
je
jns
mov
jne
cmps
mov
clc
pusha
stos
cmp
mov
enter
adc
test
mov
mov
jmp
std
scas
mul
jmp
movs
mov
add
and
enter
or
and
ins
into
or
pop
jmp
xor
lahf
jle
adc
jp
xchg
out
xor
sub
idiv
addr16
iret
(bad)
and
pop
adc
loope
shl
mov
iret
pop
mov
sub
sbb
inc
cdq
push
cmp
push
imul
lahf
sub
add
inc
test
and
lock
daa
xor
mov
push
push
push
xor
aaa
retf
pusha
add
stos
repnz
aad
xchg
mov
ins
cs
inc
(bad)
and
cs
sub
lods
ins
fbstp
clc
add
cmps
popa
leave
mov
and
and
sbb
js
mov
jno
lock
mov
fisttp
xchg
(bad)
cmp
popf
iret
lods
(bad)
movs
daa
sbb
cmps
push
rcr
pop
fisub
enter
mov
mov
(bad)
cwde
shl
jecxz
sub
pop
xor
lock
jbe
aaa
stos
dec
or
push
dec
scas
mov
and
adc
shl
push
test
call
mov
mov
add
sub
iret
xchg
pop
sub
adc
dec
shl
dec
xchg
fidiv
inc
aaa
int
mov
mov
fisub
ret
mov
(bad)
pop
inc
sahf
mov
out
adc
inc
push
pop
popf
xor
jge
adc
in
xor
retf
(bad)
pop
adc
jmp
ds
dec
dec
loopne
(bad)
sub
repnz
push
(bad)
mov
(bad)
icebp
je
es
stos
cmps
je
je
dec
adc
pop
sub
adc
mov
or
xchg
xor
push
hlt
add
sti
cmp
push
jl
push
dec
or
xchg
lods
outs
inc
ds
add
in
mov
cmps
mov
add
mov
cmp
inc
jmp
in
iret
lea
leave
push
jo
scas
xor
and
cmp
inc
mov
jns
pop
stc
sub
fisttp
loope
pop
jmp
gs
cmp
imul
adc
add
outs
pop
push
loop
cmp
sub
jnp
or
jo
in
stos
adc
loop
mov
data16
xchg
lahf
in
jge
inc
outs
sbb
jp
in
mov
in
inc
outs
repnz
mov
ja
jmp
dec
ret
mov
sbb
jp
repz
out
and
jg
ss
loope
fs
movs
pop
push
dec
mov
sbb
jge
outs
addr16
jecxz
arpl
sbb
aaa
adc
pop
xor
std
sub
(bad)
xchg
push
dec
pop
add
shl
xor
pop
outs
cli
fisttp
mov
ret
sub
out
lea
cld
gs
mov
nop
ins
xor
mov
arpl
jno
adc
in
jbe
fbld
cmps
sub
push
int3
std
mov
sbb
inc
inc
xchg
cmp
add
addr16
pop
js
fsubr
mov
or
or
sub
push
jl
jns
mov
dec
scas
ds
call
sub
movs
xor
mov
dec
dec
sahf
(bad)
nop
sub
lock
stc
inc
shl
pop
fstp
or
cmp
mov
xor
push
(bad)
jb
inc
push
js
add
mov
jl
pop
fadd
fsubr
enter
xlat
fisub
pop
adc
cwde
mov
outs
mov
cmc
lea
mov
jp
jae
ss
out
in
inc
push
push
dec
movs
ja
dec
adc
ficom
dec
(bad)
push
stos
ret
int
lahf
mov
jmp
(bad)
dec
push
paddusw
and
fadd
call
sar
sahf
xchg
mov
cmps
imul
leave
jmp
je
in
rol
out
fadd
jge
mov
lods
dec
js
cmp
pop
retf
inc
xor
push
je
std
mov
cld
cmp
dec
inc
push
jecxz
jle
pop
lods
jmp
cmp
stos
cld
in
in
push
mov
push
popa
int3
pop
lods
ret
inc
pop
mov
loopne
mov
loopne
inc
(bad)
ins
push
popf
loope
out
push
aaa
push
adc
(bad)
cwde
mov
cmp
and
adc
scas
adc
sub
mov
cli
cmp
test
sahf
xchg
mov
jae
scas
push
pop
and
cmp
inc
ror
mov
pop
test
cmp
sbb
fwait
add
sub
jb
loop
xlat
arpl
push
or
pop
sub
inc
cdq
mov
idiv
pop
adc
push
(bad)
sti
jmp
outs
scas
popf
jae
(bad)
iret
push
ins
xor
xor
test
push
ficom
xor
xchg
fs
fsub
loopne
ins
neg
test
jecxz
add
xor
push
jb
loope
test
out
hlt
add
fild
stc
call
jne
inc
inc
sbb
sti
stos
fist
outs
xor
push
sub
sub
xchg
push
or
sub
cs
cwde
out
outs
mov
aaa
xchg
fsubr
mov
scas
cwde
dec
js
mov
jmp
dec
sub
dec
pop
jl
xor
push
inc
std
out
pop
jb
dec
lea
cmp
add
cli
xchg
ret
cmps
or
stos
test
push
cmpxchg
jmp
push
clc
cmps
fimul
cmp
inc
or
xchg
and
mov
nop
push
pushf
gs
jmp
inc
pop
in
je
sub
and
sub
jns
mov
out
xchg
(bad)
out
mov
or
or
gs
sbb
jno
push
scas
(bad)
fdivrp
push
add
(bad)
call
sub
scas
mov
hlt
(bad)
sbb
inc
xor
push
std
inc
and
inc
into
loopne
pop
cmp
jne
fstp
not
hlt
ret
pop
jmp
fiadd
lea
sub
mov
mov
inc
push
mov
gs
xchg
sbb
fild
xor
(bad)
scas
nop
sar
jecxz
xor
and
dec
outs
or
fistp
dec
mov
shl
pop
stos
add
and
lea
ror
stos
xor
push
dec
out
loop
jecxz
repz
fist
out
sub
adc
jb
scas
xor
xlat
aaa
clc
cmps
sub
pushf
test
mov
adc
sub
and
ror
xor
jp
mov
sub
sub
dec
cmps
sbb
in
not
and
fcom
xchg
scas
popf
loopne
repz
pusha
(bad)
lahf
pop
ftst
fidivr
data16
fcomi
int
sub
xor
scas
push
cmp
test
lahf
mov
or
(bad)
and
jb
stc
ins
test
jl
or
jle
movs
mov
dec
lds
fmul
popf
dec
test
les
and
sbb
adc
(bad)
mov
adc
sbb
xchg
and
into
(bad)
push
inc
jbe
lock
xchg
hlt
ret
imul
dec
call
mov
add
push
fcomp
outs
adc
test
and
(bad)
xor
or
icebp
int
inc
and
mov
inc
and
mov
pand
mov
ss
mov
or
mov
(bad)
cdq
cmp
std
icebp
ins
lods
cmps
ret
dec
mov
inc
(bad)
imul
mov
push
fmul
mov
xchg
out
lea
or
xor
in
sub
lods
sub
fs
push
iret
outs
add
pop
pusha
mov
movs
stos
push
or
push
scas
shr
dec
imul
or
addr16
push
mov
shl
jmp
cld
mov
sbb
ins
imul
(bad)
cli
test
scas
dec
jle
out
xchg
and
mov
scas
jmp
sub
dec
test
mov
mov
pop
sub
loop
cmp
and
shl
out
cmp
ja
int3
inc
pop
pop
jnp
idiv
jmp
pushf
scas
mov
pop
cmp
fdiv
mov
sbb
(bad)
cmp
inc
loope
sbb
int
cmp
mov
fisttp
inc
sbb
fadd
push
in
or
xor
mov
and
loop
cmp
sbb
xor
xor
xchg
scas
pop
dec
sbb
add
movs
dec
es
push
clc
sbb
mov
rol
sbb
adc
loope
sub
dec
push
mov
mov
imul
adc
mov
push
add
aaa
ins
and
jmp
data16
shl
adc
ss
xchg
add
pop
mov
push
or
xor
aas
stos
jle
ret
jmp
call
rcr
stc
adc
(bad)
cmc
fild
retf
dec
clc
daa
test
pop
mov
int3
shl
fst
mov
into
mov
and
jmp
lods
test
adc
ror
sbb
sbb
dec
ds
shl
push
ret
cwde
xchg
out
sahf
cmp
mov
ss
je
enter
cld
sub
sbb
sbb
add
call
out
ficom
cld
cli
ja
mov
cli
mov
adc
pop
fwait
pop
push
repz
test
retf
add
adc
and
xor
pop
adc
in
cmps
cmp
cmp
mov
fild
pusha
(bad)
(bad)
push
inc
pop
in
xor
out
fild
jne
loopne
sbb
inc
push
xor
test
mov
fnsave
add
mov
or
imul
fdivr
xchg
jae
dec
fsqrt
mov
add
sbb
inc
outs
enter
outs
int3
sahf
scas
or
adc
outs
fdiv
pop
cmp
test
scas
inc
fwait
and
shl
mov
jecxz
std
mov
rol
push
mov
test
lea
retf
cmp
rol
inc
mov
jecxz
daa
pop
dec
shl
xchg
std
add
jo
mov
inc
cmp
ins
mov
loopne
retf
pop
and
adc
push
call
mov
mov
adc
push
cli
lock
arpl
or
std
int3
sub
cmps
push
mov
imul
cmp
inc
cmps
jo
inc
(bad)
mov
mov
mov
push
jmp
sub
mov
pop
mov
mov
ret
push
xor
push
leave
lahf
and
and
test
xor
pop
clc
(bad)
sbb
xor
xchg
outs
es
xchg
sbb
xchg
call
add
cld
push
stc
arpl
add
or
gs
pop
pop
inc
test
sub
adc
xchg
fstp
fistp
inc
add
inc
push
mov
inc
push
call
pop
xchg
jb
push
cs
xchg
or
hlt
in
into
aas
mov
test
xchg
jb
cmp
das
or
push
sub
sbb
cmps
inc
neg
retf
test
jno
jge
call
pop
push
or
push
cwde
add
outs
test
aad
adc
enter
mov
imul
in
xor
repnz
(bad)
mov
ins
imul
rol
fimul
inc
push
movs
ret
cmp
adc
(bad)
out
aas
dec
sbb
(bad)
sbb
xor
push
bound
mov
call
(bad)
sub
inc
pushf
fwait
loopne
dec
inc
jne
daa
iret
jmp
pop
cmps
cmps
pop
jmp
mov
inc
adc
push
rcr
out
adc
ja
xor
js
or
dec
out
call
std
xchg
push
mov
cld
in
arpl
arpl
retf
mov
pop
popa
leave
fistp
or
cmps
stos
ss
lock
out
loope
call
push
add
arpl
lods
and
adc
popf
cmp
dec
arpl
mov
aaa
cmc
not
cli
stos
mov
jg
mov
xor
fcmovne
jmp
lods
ds
adc
mov
pop
aaa
test
jecxz
mov
pusha
hlt
push
adc
pop
or
xor
nop
jmp
stos
mov
or
jns
lods
xchg
dec
lods
neg
mov
addr16
retf
ins
dec
push
cmp
push
pop
mov
sbb
scas
std
pop
adc
stos
xchg
mov
xchg
adc
add
in
call
fild
(bad)
push
arpl
xlat
jmp
pop
push
mov
daa
jmp
or
mov
sub
cmp
fwait
or
in
add
add
or
test
jo
mov
call
ffreep
jnp
scas
push
repz
out
int3
mov
push
jmp
inc
push
out
ins
push
push
xor
mov
push
(bad)
pushf
arpl
ins
adc
add
loope
ja
ja
jne
jnp
addr16
dec
cwde
cli
pop
fidivr
ret
jae
inc
sub
popf
out
lods
jnp
sbb
push
out
xor
(bad)
mov
(bad)
sub
mov
loope
sar
jbe
js
xchg
outs
popa
scas
das
inc
outs
xor
mov
xchg
outs
leave
fwait
jns
add
dec
mov
shl
stos
pusha
les
shr
jae
sbb
mov
in
mov
aam
hlt
into
cmp
popf
mov
hlt
stos
xchg
sub
stc
and
call
retf
aas
xchg
cmps
inc
das
popf
rcl
les
cmc
mov
div
mov
cmps
push
aad
(bad)
imul
xor
add
lock
push
xchg
push
pop
inc
lods
outs
add
mov
xlat
or
push
out
loop
adc
das
push
cdq
sahf
add
add
and
dec
lods
out
push
mov
dec
sbb
ret
rcl
adc
adc
mov
les
mov
iret
mov
mov
mov
fs
mov
sahf
cmp
and
mov
je
xor
stos
mov
aad
arpl
popa
push
call
push
and
dec
rol
push
sahf
test
jp
xor
and
ficomp
loop
jmp
dec
sbb
mov
lea
xchg
add
cwde
dec
pop
push
sub
ins
sub
sub
cmp
mov
test
mov
outs
lds
or
sub
pop
pop
imul
jbe
into
cmp
mov
mov
sub
inc
mov
xchg
push
or
imul
or
sbb
shr
imul
xchg
xor
sbb
mov
pop
sub
test
add
fimul
push
aam
ins
adc
xchg
mov
rcl
js
jmp
jmp
icebp
fld
sbb
mov
pop
lods
test
pop
aam
add
stos
out
inc
arpl
in
clc
xchg
lahf
xor
je
sub
lods
int
pop
lods
rcr
or
(bad)
loop
adc
out
fwait
test
out
test
std
test
ror
out
aad
js
into
loopne
mov
imul
mov
sbb
enter
(bad)
retf
xlat
fld
sahf
mov
jmp
rol
int3
sbb
ins
fwait
inc
ds
mov
aas
pop
add
xchg
cmp
and
or
addr16
mov
sub
jmp
cdq
mov
push
mov
call
xor
inc
out
(bad)
or
push
push
xlat
ds
(bad)
sbb
mov
jle
dec
aad
shr
cmc
enter
inc
gs
dec
push
adc
data16
leave
aad
xchg
mov
std
cs
xor
mov
add
aam
loopne
sub
test
rcr
rcl
push
dec
stos
jno
add
lds
mov
jae
xor
sub
or
out
int3
ja
jnp
pop
xchg
aas
(bad)
pop
xor
fwait
aas
jnp
push
or
sub
jbe
inc
jp
push
mov
stos
adc
out
mov
pop
mov
and
xchg
sti
stos
mov
xor
in
loopne
movs
adc
add
(bad)
test
xor
retf
or
(bad)
jbe
dec
pusha
test
out
pop
cld
cmp
cmp
out
lods
stos
jmp
mov
add
in
cmp
sbb
retf
mov
jo
lea
mov
push
into
mov
push
in
test
imul
ins
ret
addr16
sbb
adc
add
dec
std
retf
xchg
push
adc
mov
cmp
xor
push
enter
mov
cmp
in
fadd
jge
inc
ss
mov
cwde
and
adc
std
mov
out
mov
fldenv
mov
mov
(bad)
dec
cli
or
in
push
adc
or
cmp
push
lods
(bad)
out
jg
mov
sub
mov
adc
das
and
and
out
sbb
mov
out
jnp
add
pop
test
pushf
dec
cwde
mov
fwait
adc
cmc
rcr
popf
outs
push
cmps
xor
mov
cmp
sbb
repnz
pop
ret
mov
jg
das
adc
iret
test
adc
push
repnz
aas
xchg
movs
mov
and
stos
pop
test
(bad)
add
mov
daa
adc
add
fimul
sbb
xchg
int
dec
cmp
inc
add
cmp
mov
adc
xchg
rcl
fwait
ja
jle
loope
retf
test
int3
and
inc
je
pop
push
inc
cld
or
movs
test
in
fcomp
enter
push
mov
dec
dec
and
mul
push
fwait
in
lock
aas
cld
mov
sub
sti
xchg
test
dec
mov
xor
xchg
movs
jne
in
fwait
sbb
dec
pop
inc
stc
or
or
jo
sbb
jne
jne
cmp
jbe
ficomp
sbb
aas
fbld
jl
dec
jecxz
mov
mov
imul
test
adc
mov
jb
test
lea
loopne
stos
lods
lahf
xor
out
cmp
call
adc
lea
popa
sti
or
sbb
shl
test
ds
das
mov
inc
mov
cs
push
mov
sbb
jno
imul
xchg
jnp
dec
pop
in
pxor
sbb
mov
mov
mov
and
cld
stc
cmp
pusha
jl
loopne
fnstcw
pop
out
sbb
sub
call
lods
sub
cmp
pmaddwd
cmps
jb
mov
aas
(bad)
adc
cmp
add
push
and
in
ja
cmp
sti
idiv
fidivr
push
cmp
scas
fldlg2
fisttp
mov
add
push
cmc
dec
jp
sbb
xchg
lea
out
arpl
mov
aam
jg
ins
pop
daa
adc
sbb
arpl
ins
adc
cmp
imul
pop
fistp
je
adc
mov
mov
sub
ror
xchg
pop
push
clc
sbb
mov
mov
or
ret
sub
mov
test
fsub
sub
mov
sahf
arpl
call
test
add
ret
stos
cmp
loope
in
jne
sbb
mov
dec
call
leave
sbb
mov
xor
cmp
add
sbb
ins
mov
aad
or
mov
arpl
push
jmp
adc
out
dec
sahf
sub
mov
mov
or
sbb
mov
jp
jnp
dec
jecxz
or
xchg
push
loope
retf
cli
inc
and
jb
pop
push
sbb
add
jmp
adc
mov
push
jnp
mov
stos
mov
fcmovu
into
loope
aad
cmp
sub
jmp
mov
(bad)
sbb
pop
sahf
jnp
adc
outs
jmp
out
adc
jns
xchg
shr
lods
and
jg
pop
lahf
pop
cmp
loopne
(bad)
mov
call
and
addr16
dec
xchg
enter
imul
mov
sbb
mov
movs
cmp
add
out
(bad)
dec
gs
cmc
(bad)
pop
out
sti
ret
sahf
data16
fst
fistp
mov
out
xor
mov
or
test
aas
aad
xor
sub
fmul
aas
xlat
pusha
adc
xor
sbb
jae
xor
int
rol
retf
aam
xchg
jae
push
pusha
inc
xor
push
shr
xchg
ins
cmp
sbb
in
jmp
mov
add
pop
daa
xor
repnz
pop
jmp
inc
inc
mov
push
xchg
loop
pushf
add
push
add
sahf
int
inc
movs
xchg
and
sub
in
ss
mov
mov
fwait
iret
dec
adc
or
jge
dec
add
mov
pop
cli
(bad)
fld
or
gs
pop
mov
xchg
(bad)
das
push
sub
pop
push
inc
dec
pop
xchg
std
stos
adc
add
test
jnp
pusha
push
ror
shl
jmp
push
ret
aaa
cmps
adc
push
sar
clc
mov
outs
hlt
dec
jns
rdpmc
sar
jb
stos
clc
shl
ss
push
in
data16
or
shl
or
xchg
pusha
movs
jmp
mov
cmp
xchg
add
inc
xchg
dec
inc
(bad)
xchg
sbb
shr
ins
mov
sbb
or
out
js
sbb
dec
pushf
xchg
cdq
mov
pop
adc
adc
cli
fwait
jnp
mov
in
ret
div
(bad)
retf
ret
inc
jmp
jp
inc
lods
jmp
inc
inc
test
popf
dec
mov
(bad)
fiadd
test
icebp
pop
xchg
jmp
jno
aam
pop
enter
ss
xor
dec
clc
test
xchg
out
sub
adc
rcl
in
push
or
xor
or
push
cmp
mov
dec
pushf
cld
cmp
scas
mov
push
inc
lea
std
ret
pop
mov
mov
add
jno
mov
test
stos
inc
mov
repz
ja
ins
xlat
push
or
xor
aaa
add
mov
push
lock
xchg
mov
pop
push
sar
pop
lods
xor
std
pop
inc
aad
add
fnstsw
cwde
adc
add
pushf
outs
test
push
sub
xchg
aas
mov
cmps
shl
mov
sub
inc
sahf
xor
imul
push
sbb
pop
dec
and
retf
jg
mov
stos
pop
mov
fisttp
fld
(bad)
aam
scas
push
fsub
mov
adc
jbe
bound
repnz
xor
lock
xor
ds
popf
add
push
imul
add
cld
pop
add
mov
inc
(bad)
add
push
xchg
sti
arpl
lea
or
mov
sbb
pop
sub
xor
das
test
push
push
or
call
stos
dec
or
aas
cmp
int3
jnp
xchg
inc
icebp
mov
jae
jecxz
repz
div
and
adc
outs
sbb
push
(bad)
sub
sbb
cdq
ror
mov
inc
test
std
cld
pop
cwde
pop
in
aam
cmc
push
or
jg
imul
neg
icebp
or
pop
pop
daa
cmps
lea
add
lea
out
sub
push
or
movs
pop
and
addr16
cmp
cmp
mov
xchg
aaa
mov
cmp
jmp
aas
pusha
and
mov
sub
add
mov
lods
inc
add
mov
inc
(bad)
outs
xor
xor
mov
xchg
xchg
jno
rcr
ins
jecxz
jmp
push
xchg
xchg
xchg
out
add
xchg
imul
std
stos
jne
jecxz
xor
add
movs
pop
dec
arpl
xchg
sbb
rol
adc
cmp
xor
xor
aaa
or
add
ror
and
xlat
xor
aad
fld
out
cmp
mov
inc
cs
jecxz
mov
cmp
mov
stos
ss
lds
aas
push
repnz
jns
(bad)
jp
inc
pop
(bad)
mov
xor
inc
mov
(bad)
lods
int
imul
and
clc
retf
or
add
adc
or
jb
adc
push
push
inc
ss
xor
ds
not
adc
addr16
dec
into
adc
into
js
adc
jge
add
and
mov
cmps
xor
mov
push
or
sti
shl
aam
cmp
or
lds
push
rcl
adc
mov
std
aas
ror
bswap
jmp
mov
xchg
(bad)
aam
sahf
add
xchg
xlat
cmp
(bad)
push
mov
scas
xor
xor
adc
xor
mov
ja
test
ret
adc
dec
xor
in
stc
std
fcmovu
lods
ins
fs
fstp
jp
mov
je
ins
adc
inc
(bad)
and
cmp
add
mov
dec
sub
add
in
jl
jp
pop
pop
dec
std
retf
mov
shl
jmp
dec
outs
inc
movs
fiadd
loopne
lock
sbb
int3
outs
fs
cld
sub
xlat
js
lds
mov
mov
push
fcomp
lods
mov
push
enter
sbb
rol
fmul
test
add
lods
xor
dec
fmul
aas
push
sbb
pop
and
into
js
sbb
adc
cmp
push
or
call
push
and
lods
loope
pop
lods
in
cwde
das
fwait
cmp
aad
jg
imul
repnz
scas
sbb
inc
mov
fwait
mov
cmp
loop
gs
in
jecxz
mov
pop
outs
popa
and
inc
xor
cmp
jns
ret
cmp
adc
mov
or
ins
mov
push
mov
arpl
stos
mov
(bad)
mov
sahf
stos
std
retf
xchg
inc
xchg
push
jno
xchg
lock
push
push
dec
adc
jmp
pop
(bad)
sub
mov
out
fs
lods
cmc
mov
jp
stos
icebp
movs
pusha
(bad)
scas
jbe
and
out
into
xor
or
lds
dec
add
in
xor
mov
push
or
mov
data16
mov
cmps
fwait
lods
out
popf
rcr
cmps
mov
arpl
jno
loop
pop
bndldx
jmp
mov
mov
fisttp
xor
enter
cmp
pop
dec
hlt
(bad)
sub
nop
push
xadd
ror
xchg
or
add
loopne
test
lahf
pushf
retf
cdq
ficom
push
stc
push
rcl
ds
out
mov
mov
push
jb
je
push
mov
push
jne
jle
or
mov
sub
pop
mov
cld
jnp
xor
scas
adc
sbb
(bad)
jo
or
stc
pop
aad
mov
loope
pop
push
cli
and
dec
jl
xchg
scas
xchg
ficomp
cmp
add
sub
or
ds
in
inc
not
int3
push
xlat
imul
pop
xor
shl
mov
not
or
(bad)
adc
loop
dec
mov
mov
adc
xchg
std
or
pop
outs
repnz
pop
in
inc
push
xchg
and
lock
lahf
(bad)
adc
xchg
clc
or
stos
mov
mov
sub
jecxz
inc
scas
push
mov
cmp
cmc
lea
out
cs
and
mov
outs
ror
out
fmul
sti
sbb
fild
inc
xor
push
jge
cmps
scas
jae
gs
mov
lahf
aad
inc
sub
sub
inc
sub
push
dec
adc
int
in
ins
push
popa
(bad)
jb
stos
inc
pop
cmp
out
mov
jmp
fmul
test
push
ins
(bad)
adc
jb
jle
push
retf
or
xchg
xchg
loop
outs
mov
imul
in
int
pop
push
stos
mov
lods
pop
neg
jb
sbb
jo
cmp
sub
mov
jae
mov
fisubr
into
ins
scas
add
aam
inc
adc
test
call
test
leave
mov
sbb
sbb
add
dec
cmp
cli
inc
rcl
ss
and
sar
loopne
daa
push
jl
out
stos
int
pop
loop
xchg
movs
mov
movs
es
pop
adc
out
mov
xor
and
push
add
lods
enter
xchg
pop
dec
jnp
stos
xchg
les
(bad)
lahf
aam
adc
push
cmp
in
jecxz
bound
ss
std
and
or
mov
rcl
repnz
or
aaa
pinsrw
cmp
lahf
outs
stc
ja
dec
push
movs
in
das
fisub
repnz
(bad)
cli
xchg
cli
cmps
add
sti
pop
retf
push
fimul
retf
test
inc
mov
icebp
movs
dec
outs
inc
in
and
pushf
popf
pop
mov
loop
addr16
jne
les
mov
jmp
xchg
popf
fnsave
xor
nop
in
stc
ds
nop
push
fild
mov
int3
cmp
jmp
rcr
jp
div
sbb
clc
mov
repnz
mov
in
pop
jae
mov
jecxz
pusha
mov
ja
int
icebp
rcl
clc
icebp
sbb
out
push
dec
sti
dec
inc
call
pop
enter
loopne
mov
lods
fdivr
stc
pusha
mov
in
cmp
dec
pop
mov
add
fsubr
repnz
ss
sti
repnz
int3
cmove
xor
add
mov
test
jbe
test
push
dec
mov
shl
popf
mov
ror
les
and
pop
arpl
dec
jecxz
mov
sahf
or
fld
sub
pushf
or
jno
shl
sub
lods
add
cwde
xchg
movs
add
imul
xchg
in
xchg
leave
add
pop
or
pop
cmp
cli
rcr
scas
out
(bad)
dec
test
test
stc
xchg
mov
and
dec
jb
sbb
or
inc
xor
or
xor
jp
sbb
jb
pop
pushf
loope
push
(bad)
pop
loope
and
icebp
aaa
xor
repz
pop
test
repnz
xchg
outs
sbb
lds
jmp
pop
add
fimul
cmp
push
outs
psubb
xchg
jb
sub
fnsave
dec
push
add
push
or
push
fld
call
ret
jp
dec
mov
sub
or
lods
popf
add
or
or
push
js
inc
mul
add
sub
dec
test
sbb
push
xor
pop
xor
les
test
xor
xchg
movs
jae
inc
mov
xchg
pop
lea
jge
jge
inc
imul
adc
lea
inc
pop
add
mov
retf
dec
xor
cmp
adc
out
je
das
cwde
pop
inc
nop
out
push
and
mov
sub
cld
push
jp
xchg
dec
push
cs
dec
inc
dec
inc
mov
mov
adc
add
jae
cmp
mov
inc
or
std
arpl
ret
call
jmp
mov
mov
cli
push
(bad)
call
jnp
pop
inc
xlat
pop
aad
and
xchg
inc
lods
push
lods
sbb
and
and
mov
call
mov
jbe
push
in
adc
dec
bound
mov
jo
ins
fadd
shl
dec
movs
mov
jmp
mov
shl
ja
js
mov
fisttp
mov
mov
mov
adc
inc
push
in
mov
rcr
mov
fs
imul
in
jnp
call
jl
ins
aaa
in
add
fsubr
mov
shl
cld
mov
js
outs
sbb
pop
das
sar
push
jae
push
jmp
bound
std
daa
loope
int3
sub
popa
(bad)
out
add
out
pop
push
daa
dec
out
fiadd
mov
mov
adc
cwde
div
sbb
aam
call
sbb
out
sub
loope
cmp
adc
(bad)
in
xchg
push
jo
xor
pop
sar
sbb
je
and
xlat
xchg
pop
cmps
(bad)
rcr
and
cld
xor
scas
inc
or
mov
test
stc
cli
loopne
cdq
loopne
out
mov
ret
sbb
adc
dec
out
pop
pop
mov
jge
sub
mov
sar
daa
jbe
out
aad
fnstenv
into
daa
outs
or
mov
adc
fmul
cmps
in
fiadd
mov
add
int3
fist
ret
std
jge
retf
push
ficom
jmp
ror
mov
data16
jns
pop
adc
mov
pop
xor
jae
shl
fcomp
das
and
retf
not
fsincos
sbb
jg
jbe
add
xchg
jb
enter
push
jmp
ja
dec
cmp
add
adc
ficom
out
cmp
mov
sbb
dec
adc
mov
shl
or
mov
hlt
cmps
mov
add
mov
das
xlat
sahf
pop
ret
iret
xchg
sahf
push
jmp
jnp
dec
pop
jmp
sbb
jns
adc
cmps
pop
cmp
mov
xor
sbb
cld
stos
in
xchg
fsubr
and
movs
idiv
cmp
dec
add
sub
call
out
jmp
(bad)
mov
mov
jno
pop
xor
cmp
or
jg
test
lds
push
jns
in
cmps
xor
xchg
mov
mov
mov
sub
mov
leave
addr16
jmp
mov
or
add
cwde
or
call
mov
scas
movs
dec
inc
sahf
mov
xor
cmp
mov
jne
fidivr
xchg
scas
cwde
cmps
bound
jmp
xor
rol
es
add
pop
push
push
dec
daa
cld
mov
bound
mov
adc
jle
hlt
or
adc
mov
(bad)
add
sub
mov
loopne
sbb
nop
xor
sbb
dec
jp
scas
or
mov
mov
mov
push
das
retw
mov
imul
xchg
sbb
in
adc
cmp
push
out
aad
jmp
pop
add
mov
pop
gs
xor
aad
mov
out
clc
(bad)
xor
ins
mov
xchg
loope
fst
ret
jmp
jb
dec
inc
adc
xor
int3
neg
inc
jbe
mov
push
clc
xchg
scas
cli
rcr
icebp
push
push
xchg
fwait
mov
arpl
sub
retf
test
inc
jo
push
mov
dec
xor
outs
dec
add
retf
xlat
imul
sbb
jmp
aaa
xor
pop
bound
(bad)
fsubr
mov
in
mov
out
fsub
mov
xchg
loope
adc
dec
stc
jl
das
out
call
clc
nop
das
aaa
jle
cmp
shl
(bad)
pop
add
sbb
mov
test
and
ds
lahf
and
mov
adc
nop
ret
push
xor
out
icebp
xchg
fsubr
pop
loope
jns
cld
push
pop
not
push
and
ror
retf
in
ror
pop
sbb
push
jbe
xor
hlt
in
cmp
inc
inc
leave
hlt
test
inc
call
sub
ficomp
mov
popa
adc
in
jnp
dec
imul
dec
pop
or
mov
(bad)
call
dec
inc
xor
jecxz
lds
dec
test
movs
mov
mov
jle
sbb
bound
or
xchg
xlat
mov
nop
push
scas
and
lods
sbb
loop
and
adc
idiv
inc
jmp
pop
mov
cmps
leave
fisttp
ror
stos
sbb
dec
test
jb
test
and
push
int
sbb
add
iret
adc
stos
dec
mov
(bad)
jo
cmps
pop
jg
cmps
repz
inc
mov
adc
fstp
cmps
in
mov
sbb
add
mov
adc
je
sbb
dec
ret
test
lock
push
loopne
les
xor
in
xchg
cli
sbb
in
mov
shr
pusha
dec
(bad)
in
xchg
loopne
loope
(bad)
sti
mov
pop
jecxz
or
mov
sti
cmp
in
sub
int
mov
add
pop
aas
and
loope
leave
pop
mov
cmovno
add
push
retf
push
jg
mov
scas
int
pop
jl
dec
fs
pushf
repz
aas
jbe
clc
out
push
cmp
call
enter
pushf
or
pop
jmp
add
dec
and
sahf
mov
aaa
enter
sub
into
dec
js
icebp
imul
fld
daa
push
es
(bad)
mov
int
in
out
cwde
and
pinsrw
(bad)
dec
dec
xor
sar
push
aas
or
fidiv
aam
arpl
stos
mov
ficomp
cdq
aaa
lods
mov
jmp
repnz
mov
pop
in
or
mov
jmp
retf
sar
inc
ret
xchg
push
out
inc
adc
ret
fidiv
lock
xor
inc
inc
and
xlat
jo
popf
outs
adc
rcr
mov
xor
push
icebp
and
sbb
test
jbe
(bad)
mov
xchg
and
xchg
arpl
add
sub
inc
in
mov
loope
jmp
mov
outs
jp
retf
mov
jno
cmc
push
fdivr
cmp
jnp
push
ins
nop
push
mov
dec
xor
repnz
mov
mov
ja
mov
xor
jbe
push
(bad)
pop
adc
imul
aam
data16
retf
jmp
xor
data16
mov
jmp
xor
cwde
mov
mov
ins
push
and
leave
in
(bad)
pop
mov
cmp
mov
sbb
shl
je
int3
ins
push
jecxz
adc
loop
xor
adc
dec
inc
cmps
mov
or
mov
cmps
mov
stos
sub
ins
cmp
pop
out
jbe
push
mov
add
or
neg
mov
leave
xor
push
je
ss
ret
sti
jmp
sub
lods
xor
aaa
inc
cmp
pop
xchg
test
in
(bad)
int3
jne
rcl
aaa
gs
lea
jmp
int
mov
gs
xchg
stc
sbb
xchg
pop
xchg
dec
cmp
cwde
and
push
xchg
inc
test
icebp
lods
sahf
test
aam
cmp
test
repnz
push
repz
adc
sub
inc
cmp
and
adc
sbb
pop
in
sbb
push
loopne
or
xor
pop
out
mov
cmps
mov
movs
and
add
xchg
pop
fst
inc
sbb
dec
sbb
xchg
add
pop
fucomi
cmp
lods
xchg
and
adc
mov
inc
add
adc
outs
pop
pop
fadd
xchg
push
sub
push
ror
gs
sbb
test
sbb
(bad)
mov
jno
hlt
mov
addr16
mov
imul
cs
inc
repz
adc
inc
cs
mov
or
in
add
cmp
fild
mov
sub
ins
xchg
test
pop
ror
test
dec
imul
sbb
push
mov
cdq
out
dec
call
into
loope
les
inc
cmp
xor
mov
push
push
dec
mov
outs
mov
xor
in
xor
cmps
bnd
push
aad
icebp
shl
xor
pop
rol
mov
mov
jno
test
inc
add
mov
pop
mov
hlt
push
lea
jg
push
xchg
ror
add
mov
out
call
int
mov
xchg
mov
xlat
aaa
sbb
int3
dec
icebp
ja
sub
enter
cmp
call
jle
add
in
xor
loop
mov
mov
dec
(bad)
xor
out
inc
hlt
div
adc
dec
dec
or
cwde
mov
wbinvd
int3
jae
sbb
sbb
fsub
jae
lock
cld
jmp
jbe
xor
aad
jle
jno
xchg
cmp
(bad)
call
and
xor
fadd
test
mov
jle
movs
sub
push
xor
fld
mov
(bad)
xchg
sub
lds
cmp
xchg
mov
movs
in
adc
sbb
sti
push
cmp
jle
ss
jb
fcom
jb
mov
in
mov
pop
call
push
(bad)
jno
inc
ins
std
fld
and
inc
mov
aad
xlat
aaa
test
and
loop
mov
hlt
aaa
js
adc
sub
(bad)
mov
(bad)
mov
mov
scas
dec
mov
imul
inc
sub
push
and
mov
sub
call
jb
pop
sbb
mov
sbb
rcr
out
or
hlt
mov
bound
or
cmc
inc
sti
movs
mov
bound
jno
mov
int
xchg
mov
cld
cs
movzx
jo
sub
push
add
and
ja
add
mov
push
add
mov
pop
pop
add
dec
mov
pop
rcr
add
mov
adc
ja
pop
xchg
cli
cli
sar
call
inc
imul
mov
or
jecxz
and
aaa
mul
or
fsubrp
lahf
imul
outs
sbb
inc
jb
shl
push
(bad)
movs
sub
loop
arpl
or
mov
xor
pusha
add
fdivr
mov
push
test
jnp
pop
jnp
cmp
adc
movs
mov
and
jecxz
mov
push
jmp
xchg
push
jb
and
fstp
cli
jp
push
leave
scas
and
jmp
not
mov
aad
test
aad
and
xor
rol
mov
jg
or
pop
arpl
mov
push
push
xchg
stos
popf
dec
adc
pop
push
in
jmp
fisttp
cmps
and
sub
push
jo
into
mov
cwde
fbstp
nop
mov
jmp
call
adc
dec
push
mov
add
jns
jb
inc
clc
or
jns
test
pop
add
xor
aad
add
aad
lahf
xchg
cmc
push
dec
fs
pop
or
add
sbb
xchg
mov
addr16
lds
push
cmc
aam
fadd
sbb
mov
(bad)
cmps
inc
add
aaa
mov
sbb
rcl
mov
or
dec
mov
or
je
outs
test
jns
xchg
xor
and
sub
jmp
imul
int3
push
out
jp
inc
cwde
ss
int
bound
mov
outs
clc
scas
test
aad
arpl
cdq
shr
xchg
call
pusha
stos
fmul
or
bt
inc
pop
fwait
push
inc
(bad)
cvtdq2ps
sub
(bad)
adc
xchg
test
aad
mov
push
mov
stc
in
mov
out
outs
pop
lods
xchg
add
test
xchg
es
leave
mov
cdq
mov
push
dec
pop
mov
xor
(bad)
xchg
fisub
push
xor
stos
lods
adc
sub
retf
jg
adc
mov
in
push
xchg
outs
push
jnp
inc
adc
movs
jo
cmp
addr16
xor
ror
(bad)
fidiv
adc
pop
sbb
add
pop
cmp
jp
xchg
(bad)
add
sub
xor
imul
push
xchg
jmp
push
xor
gs
xchg
call
sub
pop
ror
test
retf
popa
xchg
sbb
add
je
mov
adc
enter
daa
dec
movs
inc
ja
add
aad
ss
xor
pop
lods
test
jmp
repnz
hlt
mov
mov
outs
scas
mov
rcr
scas
mov
add
fdivr
pop
aas
aad
pushf
and
dec
and
sub
and
inc
mov
stos
adc
test
inc
mov
sti
xchg
push
xchg
shl
adc
ins
bnd
std
mov
cdq
mov
or
ficomp
cmp
push
or
push
in
mov
jns
add
mul
movs
xchg
and
daa
xor
inc
lea
shr
sub
push
jno
pop
cld
and
dec
sub
pop
cmp
lods
sub
push
jnp
call
pop
mov
lahf
push
mov
out
sbb
push
aam
mov
xchg
retf
movs
movs
inc
mov
and
inc
mov
scas
xchg
push
fnsave
and
mov
jne
(bad)
lock
nop
cmpxchg
fsubr
mov
pop
test
push
add
pushf
jl
jae
imul
xor
cmps
and
cmp
jno
dec
jle
push
xor
jnp
and
jp
inc
cdq
out
push
imul
pop
sub
mov
inc
int3
dec
jae
cmps
xchg
push
mov
push
repz
mov
loope
mov
int3
pop
mov
out
dec
sahf
(bad)
jne
movs
adc
mov
scas
pop
and
add
adc
xor
inc
loope
cmp
push
cld
xor
shl
or
push
loopne
ins
jbe
loopne
mov
fidivr
cmc
xchg
je
and
in
mov
add
in
add
inc
pop
sub
pop
dec
adc
fsubr
inc
push
adc
and
ret
test
and
sbb
pop
sbb
test
movs
and
mov
aaa
in
dec
ret
adc
enter
pushf
cmp
ror
cmp
mov
pop
add
test
xor
ins
and
cmp
adc
or
adc
retf
or
mov
adc
jne
shl
xor
xchg
movs
xor
test
xchg
jns
adc
ins
mov
jmp
mov
sbb
pop
xchg
popa
cmp
les
xor
add
(bad)
sub
loop
xor
popa
adc
in
push
mov
je
scas
jp
add
fwait
lods
inc
sub
(bad)
int3
data16
mov
push
imul
xchg
sbb
sub
int3
mov
es
push
add
sbb
cld
ret
mov
test
cdq
fnstsw
sbb
mov
hlt
push
push
nop
cld
sbb
jb
mov
retf
clc
lods
fucomip
aas
or
repnz
iret
aaa
loopne
call
inc
adc
jnp
sbb
pop
fcmovnu
repz
and
call
mov
pop
call
fmul
out
fwait
dec
loope
pop
jl
in
cdq
mov
out
cld
and
sub
mov
xchg
out
mov
and
mov
hlt
adc
push
xchg
iret
cmp
xchg
lods
cld
cli
mov
and
cwde
jle
cs
dec
sub
pop
xor
jg
xor
pop
outs
jbe
mov
jns
jl
ret
sub
jno
nop
mov
out
scas
dec
mov
out
xchg
xor
jg
inc
mov
or
fsubrp
cmp
mul
or
or
dec
pop
adc
mov
push
pop
cmp
mov
scas
out
lods
ins
xor
mov
retf
pop
aad
jnp
das
jne
sbb
setg
nop
mul
les
outs
mov
push
pop
pop
jl
imul
push
jno
or
out
push
jb
lea
cmps
lods
fnstsw
jae
xor
fst
ficom
inc
xchg
sbb
ins
mov
retf
mov
(bad)
clc
aaa
sub
popf
ss
mov
test
aam
add
addr16
in
out
test
xor
adc
icebp
out
test
or
shl
js
sbb
outs
out
or
daa
clc
lds
jmp
jne
imul
sahf
lock
call
cwde
(bad)
enter
mov
pop
popa
mov
mov
out
inc
hlt
movs
push
cmp
call
xlat
jecxz
inc
retf
xor
xchg
retf
ret
xor
sbb
scas
je
add
and
inc
loopne
cli
les
test
sub
xor
mov
jae
jno
sbb
sar
xor
mov
int3
and
xchg
inc
and
dec
mov
inc
nop
int3
push
push
pop
cdq
sbb
fs
jmp
mov
xchg
imul
arpl
add
scas
std
and
loop
sub
sbb
inc
popa
jmp
pushf
sbb
pop
adc
movs
xlat
nop
push
jne
pusha
jl
arpl
test
and
cmp
dec
cs
repnz
cmp
loope
xchg
loope
and
mov
mov
fwait
xlat
int
pop
mov
rcl
aaa
sbb
popa
xor
jmp
and
neg
jp
add
sbb
mov
cwde
adc
pop
lods
or
sub
mov
xlat
mov
dec
push
add
loopne
or
mov
mov
push
cs
inc
adc
rcr
sbb
mov
jle
adc
gs
cld
ds
push
ror
xchg
(bad)
jbe
movs
xchg
fst
loopne
pop
int3
sbb
cmc
lahf
mov
mov
das
cmp
es
add
ret
bound
pop
adc
sahf
sbb
les
cmp
rol
push
cmp
gs
add
lods
add
sbb
mov
jecxz
retf
cmps
je
call
inc
stos
cld
lock
out
or
mov
xchg
call
rol
or
dec
jmp
stos
jge
fsub
sbb
sub
inc
stos
lea
or
pop
cmp
imul
mov
test
nop
xor
jmp
adc
adc
frstor
push
xchg
repnz
and
idiv
jp
stc
js
xchg
xlat
sub
dec
loopne
dec
test
mov
xchg
out
retfw
push
or
lds
mov
inc
ret
rcr
jae
mov
push
jmp
loope
mov
stos
lods
mov
div
mov
call
pop
int
sub
mov
inc
loope
test
inc
outs
add
lock
test
sub
push
adc
shl
cmp
pop
imul
cs
or
or
(bad)
pop
ds
enter
jmp
jne
pushf
mov
fsubr
(bad)
or
mov
mov
mov
jge
xor
ror
push
sub
jo
jl
cmc
cwde
inc
std
push
sbb
xchg
aad
cmp
hlt
jmp
xlat
fwait
mov
pop
adc
test
or
lea
das
add
jle
jno
lds
out
cmp
jns
xor
lahf
push
je
ret
add
retf
mov
in
pop
pop
pop
or
push
xchg
cwde
bound
ds
es
pop
aam
aas
(bad)
setge
cli
pop
mov
push
loopne
jmp
rcl
stos
sbb
retf
add
jae
cmc
jno
xor
ins
xlat
mov
add
adc
sahf
adc
or
test
test
in
mov
mov
mov
ins
lods
popa
add
leave
fimul
push
or
mov
imul
mov
push
push
leave
enter
scas
icebp
pop
cmp
sti
jp
fadd
jecxz
xor
test
imul
imul
or
mov
enter
neg
push
test
xchg
jmp
lods
xchg
mov
aaa
call
and
xchg
inc
dec
fsub
sbb
repnz
shl
fs
mov
clc
mov
mov
add
sbb
ja
icebp
repz
push
inc
mov
pop
dec
push
pop
shl
sub
les
mov
cmp
mov
pop
cmps
inc
mov
dec
in
inc
push
or
leave
sar
imul
jae
mov
sahf
or
mov
(bad)
mov
add
xchg
(bad)
aas
xor
pop
fnstcw
xor
add
dec
(bad)
enter
jg
test
or
pop
ret
push
fisubr
or
inc
enter
shl
xor
je
sbb
or
out
sbb
adc
fwait
ss
(bad)
jb
(bad)
mov
std
jmp
push
mov
je
lods
mov
icebp
dec
xor
and
sub
shl
test
xor
push
sbb
dec
cmp
(bad)
add
int3
into
pop
mov
adc
icebp
test
popf
iret
(bad)
mov
push
cmp
jbe
push
xor
sub
jbe
sbb
(bad)
fst
sub
or
xor
in
jge
(bad)
repnz
popf
or
adc
out
fsubr
mov
adc
ins
and
dec
movs
cmp
add
fisubr
push
push
lods
xchg
mov
xor
enter
xchg
push
inc
dec
sar
xchg
(bad)
popf
cld
jp
jb
in
adc
cmc
push
retf
push
jmp
add
dec
imul
and
or
adc
loopne
icebp
push
sbb
ficom
jae
and
jge
sub
sbb
xor
fs
lods
jmp
pop
sti
sub
jnp
xor
and
xor
inc
mov
xlat
pop
pop
movs
ret
jmp
lds
fcomp
push
sbb
(bad)
cmc
jae
dec
and
mov
ins
(bad)
clc
ds
cs
ja
(bad)
xor
and
in
popf
int
pop
cld
inc
or
dec
sub
aaa
data16
cmp
fwait
or
or
cmc
jmp
sbb
scas
test
addr16
mov
xchg
mov
and
call
out
sbb
(bad)
popa
fisub
pop
sbb
sub
pusha
ja
push
xchg
xchg
aad
or
js
xchg
call
mov
add
xchg
test
xor
addr16
loope
loopne
bsf
mov
lea
nop
adc
pop
pop
push
popf
fsub
ins
mov
cs
cmps
scas
push
dec
lods
mov
xchg
jge
fisttp
mov
mov
xchg
adc
ins
leave
xchg
mov
mov
std
mov
cdq
sub
adc
int
pop
test
push
add
sbb
mov
repz
jmp
mov
rcl
mov
push
(bad)
jno
fcmovnb
dec
adc
mov
xlat
in
pop
movs
in
cmp
fld
xchg
cmps
add
and
push
push
pusha
jne
call
or
je
cmp
push
xor
icebp
push
test
push
data16
cmp
push
add
inc
xchg
pop
or
imul
inc
adc
mov
pop
xor
rol
mov
adc
and
xor
leave
leave
mov
fstp
cmp
ret
rcr
mov
sub
mov
mov
repnz
mov
pop
or
add
gs
addr16
mov
push
inc
pop
or
mov
lea
aas
stos
mov
mov
mov
arpl
out
push
jne
dec
mov
sub
jle
bound
and
pop
scas
pop
adc
gs
icebp
retf
pop
std
add
xor
cmp
ins
mov
icebp
cld
lock
inc
jae
add
out
xchg
cdq
sub
and
cmp
xchg
adc
lods
sti
leave
xchg
xchg
xchg
sub
xor
or
mov
loopne
xchg
fild
outs
test
and
arpl
(bad)
bound
cmp
fwait
mov
adc
loop
xlat
sbb
push
jnp
jnp
(bad)
sbb
and
push
daa
ins
jno
test
inc
fsincos
mov
dec
int
std
sub
mov
je
out
ror
ins
lock
retf
cmp
leave
adc
lds
in
xchg
pop
add
and
test
int3
xchg
fcmovb
pusha
pop
dec
sub
lods
gs
inc
rol
and
pop
out
call
dec
xchg
jg
mov
jne
mov
lea
xlat
(bad)
or
jnp
and
cmp
sub
inc
or
fist
add
pop
dec
push
mov
mov
mov
and
inc
(bad)
out
ret
popf
cli
xchg
push
or
pop
cmp
add
adc
mov
push
mov
jns
cmp
das
inc
(bad)
sbb
push
out
popa
in
pop
jno
push
xor
dec
mov
(bad)
sbb
jae
mov
fidivr
arpl
cmp
inc
or
adc
dec
fist
xchg
loop
lahf
xor
cmc
stos
mov
push
repnz
ss
sbb
sub
ffree
loopne
aam
pushf
iret
(bad)
pop
movs
push
push
add
repnz
ins
cmp
xor
mov
das
adc
aad
dec
test
and
adc
out
mov
movs
push
sar
mov
call
rol
and
les
out
sbb
call
das
jp
cdq
imul
mov
sbb
sub
mov
das
in
and
jno
adc
mov
mov
xor
nop
sub
bound
imul
cld
push
ins
dec
ins
scas
push
js
sub
ss
or
ss
add
mov
pushf
sbb
xchg
test
sub
mov
sbb
popa
out
mov
mov
inc
sub
add
push
xchg
dec
clc
jmp
arpl
jl
test
shl
xor
(bad)
call
shl
xor
pop
cmp
iret
inc
ret
cmp
and
(bad)
ror
adc
dec
jmp
imul
retf
and
(bad)
in
bound
stc
shl
sub
fldcw
in
push
outs
mov
scas
jno
mov
fldenv
mov
adc
bound
push
mov
shr
xchg
push
pop
arpl
and
mov
mov
sbb
jle
ret
out
mov
repz
sub
xlat
aas
push
mov
hlt
jmp
jns
in
jno
or
cdq
repnz
pop
es
dec
aaa
js
mov
mov
xor
ror
fnstcw
ins
sub
xor
sbb
lock
lods
xor
mov
mov
jmp
ss
jl
stos
(bad)
adc
cs
xlat
push
xor
xlat
xchg
adc
pop
out
fisttp
(bad)
mov
jmp
loope
sbb
idiv
js
mov
mov
mov
out
in
ret
fcom
mov
test
and
adc
dec
sub
push
jg
les
mov
loop
cmp
pop
call
sub
cmps
push
mov
push
jl
and
lock
and
and
mov
ret
leave
(bad)
pop
jg
mov
popa
dec
fstp
xor
or
pop
lods
mov
dec
add
cmps
out
aad
enter
dec
jns
pop
stos
cmp
jg
and
jmp
ins
fwait
mov
sub
jl
test
arpl
adc
mov
and
mov
mov
mov
and
arpl
mov
mov
sbb
in
popa
xchg
int
jge
out
js
jno
cli
mov
inc
(bad)
scas
test
pusha
idiv
enter
call
push
movs
jmp
cmp
aam
test
loope
fidiv
mov
sub
inc
(bad)
jmp
inc
pop
mov
imul
(bad)
retf
test
fwait
cmps
inc
push
cmp
rcl
das
sub
cwde
fnstcw
sbb
xor
imul
pop
mov
mov
cmp
jg
in
mul
dec
xor
cld
jb
aas
out
dec
retf
add
mov
fcomp
xchg
fimul
out
pop
out
push
(bad)
stc
push
rol
neg
mov
xchg
out
jnp
and
add
aam
shl
loope
mul
mov
cmp
daa
arpl
imul
call
xchg
data16
pop
call
xor
call
add
jge
inc
(bad)
sar
xchg
mov
ins
adc
cmp
rcr
ffreep
mov
cmp
adc
fisttp
(bad)
and
mov
add
stc
mov
mov
ins
and
pop
retf
pop
enter
imul
out
pusha
dec
mov
ret
mov
ins
dec
fs
test
test
xlat
mov
or
mov
pusha
push
lock
loope
mov
repz
out
inc
iret
mov
pop
inc
adc
or
sahf
test
test
xchg
ror
jg
dec
js
mov
out
imul
aaa
xchg
outs
inc
ja
pop
push
push
push
cmp
adc
pop
xlat
fnsave
adc
in
mov
cmps
inc
hlt
ins
stc
sub
inc
into
stos
or
not
les
inc
jmp
repnz
push
mov
jp
shl
fcom
mov
lea
mov
ret
sbb
cmp
cmps
and
push
clc
loop
push
popf
add
retf
leave
lahf
push
sub
push
mov
pop
inc
inc
test
cmps
adc
mov
(bad)
sbb
lock
lods
pop
adc
mov
dec
xor
dec
xor
hlt
mov
int3
or
dec
pop
sbb
jle
ret
fdiv
mov
arpl
dec
call
shr
add
cdq
and
popa
sahf
mov
jle
mov
xchg
mov
retf
adc
push
mov
fisttp
aad
adc
lahf
cmp
inc
sahf
fisttp
clc
mov
jmp
cmp
sbb
cmp
or
into
test
adc
xchg
fsubr
jmp
jns
(bad)
imul
jo
xchg
cmp
out
push
mov
shl
rcl
ror
jno
imul
sub
cmp
(bad)
inc
mov
xor
dec
imul
mov
rol
imul
mov
lahf
aas
inc
imul
fwait
and
jnp
or
or
stos
adc
in
call
mov
retf
ins
mov
mov
cmp
mov
mov
ins
fisttp
dec
sub
push
jge
xchg
lods
into
aam
imul
inc
push
pushf
rcl
xchg
xor
mov
or
rcr
imul
jno
mov
test
sub
push
test
pusha
(bad)
lock
mov
jno
fstp
sub
cmp
mov
adc
sbb
js
jns
push
shl
pop
cmp
outs
adc
add
aas
addr16
repnz
jae
shl
arpl
cmps
rol
stc
jns
mov
clc
add
cli
add
lods
arpl
push
lods
or
aas
jl
addr16
out
mov
cld
cmp
push
je
nop
dec
jp
pop
push
call
ret
xchg
pop
aad
shr
shr
(bad)
sar
dec
push
xchg
outs
stc
cmp
and
and
cwde
push
pusha
or
push
sbb
(bad)
pop
jnp
inc
in
fcmovb
mov
mov
mov
out
cwde
push
adc
loop
xchg
out
(bad)
mov
sbb
add
call
js
hlt
push
leave
mov
arpl
mov
popf
and
push
fsubr
or
icebp
nop
test
fst
es
(bad)
jmp
std
ins
mov
pop
jp
pop
into
mov
je
rol
movs
add
out
inc
adc
lock
retf
outs
lock
inc
popf
or
not
cmps
inc
pmaxub
shr
mov
inc
outs
loop
mov
into
test
jo
adc
or
mov
addr16
in
mov
mov
cdq
fld
adc
xchg
xchg
mov
dec
retf
int
data16
inc
push
mov
inc
dec
adc
mov
push
xor
push
cmp
adc
sahf
fs
add
clc
nop
movs
fcomp
mov
loope
mov
pcmpgtb
fbld
sahf
fld
add
test
stc
cmp
mov
mov
jbe
movs
test
inc
lea
dec
jmp
mov
and
mov
xchg
pop
and
push
(bad)
jns
mov
xor
hlt
jne
in
adc
jnp
lods
xchg
cld
adc
cmp
add
cmps
dec
inc
scas
stc
add
pop
xchg
add
into
xor
mov
xchg
push
inc
xor
pop
xor
mov
cmps
xchg
jb
dec
inc
mov
xor
push
pop
fimul
(bad)
xor
fbld
mov
xor
retf
pop
mov
sahf
in
dec
movs
shld
add
mov
mov
jle
ret
jmp
or
mov
inc
imul
pop
mov
push
jmp
jl
sub
or
stos
adc
xlat
sub
fwait
stos
xchg
cmp
mov
les
gs
sbb
loop
or
jl
shl
mov
test
add
aaa
mov
mov
(bad)
stos
outs
mov
jl
sbb
mov
aaa
stos
cmp
add
cmp
mov
out
sar
add
pop
outs
mov
fadd
in
clc
enter
test
xchg
dec
cmp
jmp
repz
icebp
add
pop
dec
icebp
push
std
int
or
addr16
fidivr
jl
push
into
jae
cmp
xchg
jno
clc
ins
xor
cdq
aaa
mov
nop
xor
sub
xlat
jb
pop
repnz
icebp
mov
cmp
imul
aad
in
leave
mov
cmc
cmp
mov
xchg
mov
xor
pop
inc
sbb
or
fisub
xchg
fcom
xchg
adc
jmp
jp
inc
or
mov
adc
div
mov
fst
mov
frstor
cmp
fcmovne
push
fdiv
in
pop
shl
fst
jg
dec
into
lahf
add
aaa
xor
icebp
cmps
aaa
inc
jmp
ret
inc
aad
and
imul
movs
lods
jmp
jp
fs
and
push
daa
movs
cld
sti
and
push
in
addr16
cmps
bound
dec
push
jae
enter
enter
jmp
mov
adc
and
cmp
jg
scas
shl
or
std
(bad)
xchg
je
retf
jecxz
lds
mov
fild
lods
sbb
xor
mov
in
sbb
cmp
adc
mov
xchg
cmp
test
sahf
pop
xchg
adc
mov
mov
fs
(bad)
stos
loope
mov
sbb
outs
pusha
mov
inc
fsub
pushf
add
das
call
test
std
xor
test
and
in
mov
sbb
aad
fild
sbb
mov
jno
arpl
or
xor
xchg
data16
(bad)
jns
push
enter
xchg
cs
ficomp
int
xchg
push
adc
out
cmp
or
shl
sub
mov
jl
in
push
jmp
pushf
mov
jno
or
push
inc
jmp
jp
ds
inc
clc
ja
vpaddsb
pop
repz
mov
leave
loop
cs
mov
dec
(bad)
push
loope
mov
mov
lods
lock
pushfw
sbb
loop
in
int
mov
mov
call
mov
sbb
arpl
jns
mov
inc
xor
jae
mov
mov
xchg
xchg
fild
leave
add
dec
mov
outs
and
mov
imul
inc
imul
sub
mov
jb
and
jbe
cmp
xchg
retf
xchg
add
(bad)
sub
popa
in
ss
jge
add
jo
retf
in
xor
gs
sub
imul
inc
or
sub
and
rcl
test
jp
pop
mov
dec
and
js
enter
lods
les
mov
in
push
push
inc
ret
into
ins
inc
add
rol
sbb
mov
dec
xchg
or
enter
enter
ret
mov
xlat
xchg
mov
sbb
ds
ins
cld
jle
mov
or
add
push
cmps
std
push
mov
mov
test
xor
and
(bad)
and
mov
sub
jle
mov
lock
adc
push
pop
and
je
inc
xchg
adc
xor
jae
xlat
test
pop
push
cmps
add
jno
lock
int
pop
xchg
push
into
and
in
inc
and
movs
pop
jb
dec
jo
xchg
lods
jmp
repz
jle
test
call
xchg
fidiv
scas
push
rol
push
inc
cmp
dec
mov
sets
or
cs
call
adc
ds
ret
sub
pop
mov
pop
fucomp
push
inc
es
pop
add
jecxz
sub
ja
inc
dec
paddsb
das
(bad)
(bad)
xor
jecxz
pop
pop
pop
test
popf
adc
sub
mov
mov
or
mov
xchg
ror
jmp
add
jl
adc
ins
mov
xchg
cmp
in
pop
push
and
imul
mov
ret
fwait
pop
mov
push
push
retf
daa
adc
outs
(bad)
in
inc
xchg
jno
xchg
sbb
dec
add
test
push
and
xor
fxch
dec
mov
fst
push
les
pop
ficom
sub
inc
cmps
mov
adc
pop
es
or
xchg
(bad)
push
leave
adc
and
jne
cmps
stc
jg
iret
xor
push
mov
cwde
jmp
add
push
push
push
dec
jp
fild
cmp
xchg
inc
jmp
add
test
(bad)
icebp
popf
add
shl
adc
cmp
xchg
sub
shr
dec
cmps
ins
call
xchg
dec
push
sub
pop
pop
xor
adc
stos
cmp
fdivr
push
cvtdq2ps
cmp
xchg
sbb
xor
(bad)
pop
jne
mov
fisttp
outs
and
inc
je
mov
adc
cmps
lods
xor
(bad)
or
or
(bad)
clc
std
in
sbb
sub
call
fsubrp
shl
mov
icebp
loop
fincstp
out
test
pop
shr
aad
in
outs
jmp
mov
sub
pop
loopne
(bad)
jge
(bad)
adc
mov
imul
xor
push
mov
push
rcr
test
adc
std
jg
test
pop
test
out
scas
enter
into
add
int
mov
sbb
mov
jl
cwde
pop
mov
cli
push
xor
jmp
test
xlat
pop
xor
sbb
mov
xchg
add
ja
int
rcr
out
les
pop
(bad)
mov
ds
cwde
mov
in
lods
sbb
mul
cmc
xor
cmps
outs
loop
xor
popa
mov
xchg
je
push
imul
data16
xlat
add
dec
cwde
lods
(bad)
jmp
test
stc
mov
rol
mov
add
(bad)
and
inc
mul
les
ja
in
adc
sahf
add
(bad)
dec
xor
div
mov
sbb
fidiv
adc
shl
fst
in
sub
mov
gs
arpl
xchg
ret
and
icebp
or
jnp
ss
nop
and
xchg
jle
mov
ror
dec
mov
mov
daa
jb
call
movs
lea
ds
imul
div
fdiv
lock
mov
mov
jb
push
mov
pop
dec
push
push
mov
shl
fild
movs
cmp
jae
mov
mov
in
cs
push
cdq
and
sbb
test
jecxz
push
(bad)
adc
or
add
or
stos
(bad)
adc
cld
mov
jnp
cmc
push
mov
sub
int
mov
mov
push
sub
push
nop
xchg
lea
cmp
cbw
call
out
clc
push
inc
aas
les
pop
stos
aas
ins
jb
fnsave
lods
or
call
ss
adc
jecxz
mov
fdivr
cmp
add
and
cmp
scas
mov
das
pushf
dec
cmps
pop
cmc
or
shl
cli
loopne
cmp
xor
mov
test
pop
ficomp
inc
aas
lock
ins
dec
lds
ud2
shl
jno
test
jo
rol
jg
and
data16
push
sar
and
jns
xor
iret
pusha
cdq
sub
jno
scas
mov
rcr
jnp
or
(bad)
(bad)
xchg
fisttp
add
mov
hlt
mov
xchg
add
aaa
scas
add
mov
fs
jae
arpl
cmp
pop
(bad)
out
xchg
cld
xor
out
pop
fmul
pop
add
xor
dec
scas
mov
and
retf
jp
push
adc
cs
jmp
cmp
jne
je
xor
push
rcl
push
ret
ins
cli
aad
mov
es
ins
jae
xor
adc
sbb
sar
les
pop
push
stos
xor
mov
jmp
push
shl
push
xchg
in
mov
add
and
hlt
jmp
jne
fisub
pop
xor
sbb
sbb
das
daa
add
rcl
xchg
movs
leave
in
pop
xchg
mov
clc
xchg
(bad)
es
push
push
mov
pushf
iret
mov
imul
dec
cmps
fld
push
sbb
jb
stos
and
jne
jns
popf
popa
aam
sbb
add
xlat
inc
jge
cmp
cmp
imul
std
pop
pop
popf
add
xchg
aas
or
push
push
ret
add
imul
jne
pop
inc
(bad)
aaa
fidivr
pop
mov
(bad)
mov
out
sbb
mov
es
pop
sbb
sbb
stos
or
pop
aad
xchg
lods
mov
(bad)
nop
retf
mov
dec
add
ds
idiv
mov
std
icebp
pop
xchg
outs
mov
mov
mov
sub
dec
call
jp
add
pop
retf
bswap
cmp
out
push
daa
pop
lock
xchg
addr16
adc
aam
addr16
stos
ficom
pusha
jmp
or
das
pop
xchg
lock
or
xor
pop
pop
mov
mov
jl
and
or
mov
in
jle
mov
lea
push
cmp
mul
sub
je
test
and
mov
call
mov
out
cmp
mov
add
gs
loop
lock
and
mov
retf
fcom
mov
mov
lock
add
stos
mov
outs
mov
push
enter
cmp
pop
stc
sbb
push
out
stc
and
sar
test
xchg
jmp
jne
fldenv
ret
aaa
ror
and
pushf
pusha
xchg
stc
sbb
(bad)
repz
inc
mov
dec
outs
inc
inc
ins
rcl
js
inc
(bad)
inc
movs
push
aad
push
sbb
mov
stc
mov
cmp
iret
mov
(bad)
push
cmps
dec
rcl
out
sub
cdq
dec
out
inc
add
add
pop
adc
pop
dec
or
fmul
repnz
lahf
cmp
(bad)
(bad)
icebp
pop
outs
int3
jo
ret
lds
jne
inc
loope
sub
in
dec
or
cmps
lods
and
adc
data16
jbe
jl
mov
xchg
popa
dec
sub
inc
inc
cmp
jae
ret
cmp
call
dec
mov
push
xchg
sbb
stc
sbb
ins
jg
or
jge
sub
or
repnz
mov
cmps
shl
in
adc
xor
out
(bad)
rol
repz
xor
pop
xor
retf
pushf
dec
mov
cmp
dec
lea
xchg
add
test
out
inc
(bad)
sbb
push
lods
fnstenv
in
xor
add
repz
cmp
rcr
inc
sbb
inc
movs
lahf
out
sbb
scas
gs
daa
aas
jmp
cmp
add
and
sbb
push
js
pop
sbb
(bad)
push
jmp
pop
rcl
dec
cmc
div
xchg
mov
jbe
and
xor
or
pop
mov
(bad)
enter
cmc
aam
push
inc
cld
add
dec
push
inc
fistp
scas
stos
mov
mov
bound
in
pushf
xor
xor
and
mov
mov
(bad)
fst
ss
das
xor
sbb
fwait
dec
popa
mov
repnz
xchg
call
mov
inc
cmp
(bad)
cld
adc
mov
cmp
or
mov
pop
loop
sub
push
mov
mov
ins
loop
adc
stos
hlt
jbe
dec
xor
test
xor
dec
push
movs
dec
add
add
adc
sub
fidivr
dec
pushf
cmc
xor
add
(bad)
jp
jecxz
stos
inc
inc
push
xor
ror
fisttp
cmp
or
mov
aam
retf
pop
jne
imul
test
sub
push
jmp
ja
push
jge
pop
cmp
sub
pop
cmp
test
push
sbb
dec
shl
shl
iret
cmp
pop
in
fist
cmp
push
loope
or
outs
out
push
shl
test
mov
mov
sbb
mov
mov
addr16
jge
lds
jge
dec
xor
mov
xchg
data16
pop
pusha
push
in
sar
imul
push
xor
adc
shl
out
or
(bad)
fbld
imul
xchg
mov
retf
pop
gs
jbe
and
xchg
scas
pop
inc
jns
je
cmc
inc
pop
movs
xor
outs
imul
fidivr
leave
mov
(bad)
test
jae
dec
ins
dec
fadd
or
(bad)
rol
ja
sar
or
in
or
and
retf
sub
inc
xchg
cmp
push
cmp
xchg
call
shl
mov
or
fwait
sub
fidiv
xchg
mov
cmc
fidiv
retf
fistp
mov
jno
mov
addr16
(bad)
lahf
pop
lods
xchg
jle
push
outs
mov
ret
xor
mov
sub
nop
repz
xchg
out
das
gs
leave
loope
dec
mov
add
push
scas
rcr
push
mov
mov
mov
in
mov
jmp
mov
push
cmc
jle
dec
loope
xchg
jecxz
call
or
mov
aaa
push
nop
xchg
std
cmp
xor
call
pusha
cdq
addr16
loop
push
mov
(bad)
pop
(bad)
fbld
repz
add
ss
not
push
leave
js
fbld
jmp
xchg
fldenv
mov
cmp
jnp
add
cmp
scas
aad
jge
jl
fadd
push
mov
into
into
js
fbld
push
mov
inc
mov
std
cmp
jmp
fld
in
in
xchg
or
sti
adc
retf
lahf
loop
ds
sbb
jae
mov
(bad)
movs
fcomp
sub
cmp
inc
sbb
or
inc
add
dec
push
ja
mov
arpl
shl
ss
xor
cmp
cld
in
fwait
sbb
xchg
cmps
xor
xor
sbb
fdiv
pop
inc
sub
push
neg
lock
jo
xchg
xor
add
jb
push
call
lea
dec
inc
dec
test
shr
add
add
xor
gs
fsub
mov
cmc
les
gs
xor
outs
sub
adc
sub
loope
stc
retf
(bad)
shr
and
lds
inc
cmc
test
call
and
push
arpl
cmp
outs
sbb
div
into
out
pushf
in
jmp
enter
fidivr
dec
arpl
in
movs
push
lahf
pop
sbb
xchg
push
retf
sub
dec
inc
in
xor
adc
add
dec
ins
lock
fsubr
enter
fs
mov
dec
cli
pop
jge
jb
inc
xchg
sbb
sub
push
and
mov
sbb
and
sahf
ins
dec
test
outs
imul
push
sbb
jns
int3
dec
daa
inc
stos
sbb
mov
in
rcr
pop
les
add
cmp
test
imul
movs
pop
inc
rol
in
jle
ds
xor
cmp
xchg
cmp
cmp
cmp
in
aad
or
xor
rol
out
jae
mov
dec
pop
cmp
mov
test
dec
or
leave
add
iret
shr
push
lock
and
out
push
ins
fmulp
hlt
ret
ins
or
pop
dec
adc
xor
loope
cmps
sar
cmp
mov
ret
retf
bound
pop
or
cmp
int3
mov
jle
sub
and
push
and
out
sbb
cmps
enter
pop
stos
aad
lea
hlt
sti
and
and
sub
ja
pop
aam
sbb
inc
push
jo
mov
pop
cmp
lds
dec
dec
lahf
into
pop
outs
push
adc
jnp
push
leave
pop
pop
xchg
pop
(bad)
adc
push
je
mov
xchg
rcl
xor
or
sub
arpl
js
xor
test
dec
pop
pop
outs
push
or
cmp
(bad)
aaa
sbb
jmp
rol
nop
cmps
and
mov
mov
dec
popf
iret
pop
mov
es
jb
repnz
pop
xchg
pop
add
push
mov
in
or
aad
repnz
lods
loope
push
xchg
xor
adc
sbb
jl
xchg
adc
in
(bad)
test
sbb
inc
arpl
pop
xlat
mov
movs
out
and
mov
fdivr
out
cmp
mov
adc
cwde
arpl
sahf
mov
ror
pop
sub
aam
mov
cwde
(bad)
inc
(bad)
test
outs
fcom
rcr
push
xchg
mov
test
add
adc
push
std
sbb
add
(bad)
mov
outs
cmp
cmc
cdq
push
(bad)
fist
dec
lock
loopne
push
xor
imul
sub
sbb
and
mov
or
mov
pop
in
in
ss
cmp
jne
pop
adc
pop
movs
repnz
dec
lds
jnp
aaa
shl
aam
and
mov
push
adc
inc
in
aas
aas
int3
call
sub
pop
or
xlat
lock
jp
ret
jge
pop
adc
out
xor
xchg
mov
in
mov
es
xchg
pop
pop
imul
aas
(bad)
adc
and
mov
ror
dec
retf
scas
adc
lods
into
repnz
cmps
mov
xor
mov
cmp
sub
or
or
mov
ins
jle
retf
inc
adc
subps
lods
hlt
test
pop
adc
add
sar
pop
shl
pop
push
dec
popa
and
dec
and
ins
cmp
mov
inc
jb
gs
add
mov
ss
push
ds
mov
call
adc
ja
xchg
pop
jg
mov
(bad)
pop
jg
sti
aas
xchg
mov
test
dec
sub
mov
mov
mov
shl
pushf
fdivr
(bad)
cmp
ds
pop
adc
lock
mov
xlat
mov
clc
call
sbb
inc
dec
mov
adc
add
push
fistp
push
std
xor
dec
jle
inc
add
xor
or
jbe
shl
adc
push
mov
mov
pop
dec
ins
inc
lods
in
fsub
cmps
ficom
in
or
push
ror
and
dec
jb
jb
jmp
mov
cwde
ficom
xchg
imul
mov
(bad)
push
mov
cmc
jb
push
cmps
int3
loopne
ins
out
inc
pop
in
dec
jo
ds
inc
aad
xor
fisubr
mov
movs
(bad)
call
sbb
das
fstp
data16
ss
sub
ror
fsubr
addr16
loop
popf
fs
out
mov
pop
or
rcr
add
push
cmp
ret
and
imul
(bad)
push
rcr
jl
fsub
mov
stc
outs
jae
adc
xchg
lods
xor
gs
leave
pop
sub
dec
hlt
repnz
fs
pop
int3
jmp
popa
sbb
outs
or
sub
cs
call
pop
xchg
sahf
xor
xor
or
jns
nop
ret
test
cmp
cmps
pop
cli
jl
cs
js
fwait
mov
rcr
sti
je
cmp
sbb
iret
or
(bad)
and
ror
loop
pop
push
inc
xor
sbb
addr16
rcr
ret
push
and
xchg
xor
adc
data16
sub
xchg
ins
xchg
es
pusha
sub
mov
mov
fiadd
xor
adc
test
xchg
mov
adc
ficom
and
push
retf
dec
out
iret
(bad)
jne
push
ret
stc
mov
(bad)
in
std
jo
outs
jne
sbb
call
mov
xor
cdq
fadd
out
das
jmp
pusha
out
push
jno
loope
aas
jno
mov
inc
js
in
mov
cmp
ds
xrelease
xchg
xlat
test
xchg
std
mov
xor
mov
fs
mov
(bad)
(bad)
add
fldenv
or
adc
xor
sub
jnp
xchg
js
mov
pop
mov
sbb
jp
ficomp
mov
es
pop
jle
or
ins
icebp
jnp
lahf
xchg
jle
and
push
jp
cs
les
sti
mov
gs
dec
ds
or
sub
dec
ja
inc
imul
xchg
add
add
adc
dec
out
shl
out
pushf
push
call
in
cmp
inc
inc
push
mov
je
nop
pop
add
pop
xchg
sti
setbe
loope
stos
out
jmp
cmp
ins
mov
mov
sbb
(bad)
inc
pop
dec
xor
push
inc
jns
outs
adc
fimul
jo
sub
cmc
adc
cmc
arpl
fist
inc
prefetchw
cli
mov
mov
mov
cmp
sti
std
movs
xchg
rdtsc
das
inc
and
xchg
mov
mov
ret
sbb
sbb
jne
scas
push
or
push
mov
mov
int3
xchg
xchg
dec
cli
adc
cld
and
fisttp
push
out
das
inc
data16
(bad)
sub
pop
push
jp
cs
jo
push
sub
xchg
add
mov
and
int3
mov
scas
js
outs
shr
int3
(bad)
mov
popf
mov
adc
imul
loop
adc
push
adc
test
add
push
scas
stos
stc
xchg
adc
dec
iret
or
mov
mov
test
xor
dec
je
push
outs
mov
add
pop
adc
aas
fnstenv
jecxz
pop
sbb
(bad)
push
mov
(bad)
dec
sbb
push
sub
call
test
fild
addr16
cs
mov
outs
int3
clc
mov
jmp
sbb
jle
mov
sbb
pop
jae
rol
and
xchg
popa
int3
imul
lods
mov
daa
sahf
pop
jno
mov
stos
add
aaa
cmc
sub
cmps
popf
cdq
data16
sar
jne
xchg
pop
pushf
fidivr
es
add
call
idiv
fcomp
push
enter
dec
and
aad
pop
bound
sbb
ret
add
call
bound
dec
sub
xchg
pop
pop
jb
ds
cmp
fsubr
sub
mov
lahf
mov
lahf
fst
cmc
in
daa
leave
retf
hlt
cmc
and
mov
adc
nop
add
add
stc
sbb
mov
add
fdivr
in
iret
xchg
xchg
mov
sbb
cdq
and
std
retf
push
popa
jno
jns
loopne
mov
cwde
xchg
sar
mov
lds
jnp
sbb
pop
push
movs
sar
sbb
lea
out
and
cld
and
lods
xchg
(bad)
jb
popf
cmp
add
jbe
ror
pop
dec
cmps
jb
pop
xor
fld
out
mov
nop
sub
add
mov
pop
mov
ret
xchg
and
dec
clc
adc
rcl
test
xchg
ret
aad
daa
inc
nop
out
jp
fdiv
in
lods
ins
ins
mov
in
(bad)
ins
or
lea
in
or
outs
test
jb
nop
ins
xchg
and
push
ficom
and
adc
push
inc
dec
mov
add
inc
mov
push
sbb
inc
cli
push
aam
jecxz
ret
lds
repnz
ror
dec
ficom
outs
in
outs
fcomp
xor
js
imul
in
(bad)
xlat
pop
dec
jno
mov
enter
inc
sbb
sbb
data16
popa
popa
mov
pop
mov
inc
hlt
enter
inc
(bad)
out
pop
adc
or
push
scas
fwait
pop
in
test
popa
popf
imul
push
in
push
inc
imul
and
test
data16
call
cmp
xchg
ja
xchg
loopne
dec
cmc
fldcw
push
dec
cld
stos
fcom
rcr
mov
xchg
add
or
jmp
iret
pop
fidiv
imul
popf
ds
adc
aaa
mov
mov
ret
loop
xor
cmc
int
add
sub
ins
mov
sub
mov
push
shl
cmp
aaa
dec
adc
inc
xchg
pusha
dec
in
pop
gs
outs
movs
gs
aam
xchg
ds
in
sub
pop
jecxz
stos
push
into
ficomp
push
aas
cdq
inc
dec
mov
(bad)
pop
imul
xchg
pop
pop
pop
inc
adc
mov
(bad)
data16
loopne
mov
lock
out
mov
mov
jns
pop
fimul
push
add
jno
jle
mov
cmp
jmp
fs
sub
jle
repnz
and
int
or
dec
retf
push
div
mov
jl
sbb
std
cmp
push
inc
ds
dec
jmp
imul
inc
cmp
fcom
mov
callw
sub
dec
aam
sti
in
cld
cmp
jns
pushf
push
cmp
jl
add
stc
gs
call
mov
push
xchg
ins
inc
xchg
sub
push
jmp
inc
cmc
or
pop
xor
ins
ins
fild
mov
xchg
push
je
lods
retf
(bad)
sti
xchg
xlat
and
imul
pop
jge
loop
cdq
ret
outs
sbb
mov
xor
or
in
mov
(bad)
and
in
mov
xchg
add
and
fs
cdq
inc
or
movs
or
push
dec
cs
pop
out
mov
inc
dec
add
jle
jg
in
xor
les
retf
rcl
adc
movs
enter
jmp
jge
mov
popf
xchg
inc
pop
das
daa
out
mov
cmp
cmps
add
xchg
inc
movs
sar
js
mov
daa
pop
popf
xchg
pop
loopne
jne
iret
and
jbe
mov
mov
push
cli
cmp
arpl
cmp
movs
cmp
xchg
add
out
cld
(bad)
and
pop
std
sbb
pushf
add
cmc
mov
scas
mov
(bad)
aad
enter
jo
push
adc
cmp
push
imul
pop
cmp
popa
fnstsw
mov
scas
xor
mov
and
and
sbb
ror
jo
and
push
div
push
outs
sbb
imul
call
sbb
fdivr
mov
dec
popf
mov
push
jae
fld
lea
jecxz
mov
aam
dec
(bad)
lods
aam
sbb
dec
xchg
outs
lods
retf
(bad)
pop
cmp
dec
inc
adc
and
adc
sub
int
dec
pop
jl
into
xor
sub
sub
call
ins
rol
(bad)
dec
sub
cmp
inc
retf
mov
jmp
cmc
xchg
and
pusha
cld
js
or
cmp
mov
xchg
popf
(bad)
loop
mov
or
xchg
add
(bad)
jmp
or
mov
and
in
mov
in
jmp
jge
or
add
ret
rcl
ins
xchg
push
test
mov
push
and
fistp
loop
clc
xor
or
xchg
aaa
das
into
push
cs
dec
adc
mov
pop
scas
adc
arpl
dec
or
popf
sbb
push
sbb
loop
sub
jns
out
shr
fistp
xlat
push
and
scas
outs
in
cmp
cmp
mov
mov
fcomp
and
add
stos
xor
mov
dec
and
out
loope
in
or
dec
cmp
push
pop
inc
xchg
vorps
in
jg
cmc
cmp
std
xchg
pop
jmp
mov
jae
xchg
pusha
jb
adc
fwait
jmp
pushf
mov
xchg
inc
test
cmps
xchg
aam
xchg
sub
ret
pop
or
loope
xor
fild
mov
enter
js
gs
daa
xor
lds
into
push
and
shr
push
adc
pop
xlat
pushf
add
push
mov
mov
mov
mov
pushf
jno
jns
retf
adc
add
ja
push
jo
or
test
pop
jl
imul
aad
sbb
dec
lods
aam
dec
fnstsw
scas
jns
scas
xchg
or
pushf
push
(bad)
call
data16
scas
jl
xor
push
and
cmp
cs
or
fnstcw
int3
repnz
mov
adc
xchg
add
fwait
mov
scas
repnz
in
xor
mov
xor
rol
jbe
and
popf
imul
js
stos
add
movs
xor
cmp
inc
cli
or
xor
inc
jo
inc
dec
jae
iret
(bad)
lock
pop
jnp
add
adc
xor
jns
inc
or
dec
xchg
mov
cmp
lock
fcom
cmp
inc
mov
add
sahf
sbb
cmc
or
(bad)
and
arpl
das
jb
xor
sub
inc
push
sbb
(bad)
mov
ficomp
sub
leave
aad
jne
xchg
push
repnz
test
call
pop
sbb
aam
dec
mov
or
call
stos
mov
(bad)
xor
jns
mul
add
jle
mov
in
addr16
mov
shl
cmp
mov
or
xor
push
mov
arpl
add
adc
jl
pop
jle
pop
sub
sbb
repz
pop
lock
mov
push
jecxz
inc
and
mov
adc
add
js
xor
lods
scas
dec
xchg
adc
push
sub
xchg
push
movzx
mov
out
jmp
push
loop
cmp
in
mov
inc
sub
xor
push
stos
xor
push
in
and
mov
mov
pop
xor
int3
mov
ror
mov
loopne
sahf
sbb
cmp
pop
xchg
sbb
mov
jmp
cmp
jne
xchg
jmp
(bad)
mov
xor
xor
dec
stc
xchg
rol
cdq
push
xchg
in
jecxz
jbe
and
imul
das
enter
aam
stc
ins
push
int3
jecxz
sbb
sbb
mov
imul
jle
aaa
aas
mov
mov
mov
pop
(bad)
cmp
mov
inc
or
adc
sti
jo
mov
fcomp
mov
test
sub
mov
call
in
into
xchg
mov
mov
cdq
mov
mov
sbb
mov
jb
cmp
xchg
mov
mov
dec
cmp
add
nop
int
loop
adc
and
and
repnz
jge
int3
cmp
mov
sahf
xchg
in
push
cwde
repnz
xor
sti
repz
sahf
fsub
lahf
mov
retf
jae
adc
add
mov
test
jnp
push
mov
add
xor
test
aad
movs
mov
outs
cmp
push
lods
jle
xor
adc
cmp
add
in
or
fist
in
lea
js
cmps
mov
mov
or
shl
cmp
aaa
into
adc
bswap
xchg
call
pop
dec
ins
adc
sbb
popf
sahf
lods
xor
out
ret
mov
mov
mov
bound
fadd
jae
or
pop
mov
cmp
test
jge
add
mov
pop
imul
aaa
xchg
xor
or
(bad)
mov
adc
jae
movs
dec
pop
adc
and
mov
(bad)
aas
jnp
sub
cmp
das
push
add
jno
sbb
mov
and
mov
push
test
xchg
cld
test
jg
and
out
loope
cs
sahf
jmp
mov
jle
dec
cmp
push
cmp
hlt
call
stos
repz
pusha
nop
jae
adc
jl
jno
mov
mov
xchg
leave
jnp
iret
mov
lods
retf
sub
out
sbb
mov
lock
sar
mov
inc
jmp
fwait
retf
mov
pop
sbb
xchg
push
sub
outs
pop
xor
pop
mov
or
xchg
call
repz
inc
lock
and
inc
das
jo
push
add
out
pop
out
sub
jae
inc
mov
call
daa
adc
cmps
(bad)
xchg
jbe
retf
ss
fucomip
jge
lods
aad
call
mov
lds
xor
fsubr
out
mov
aam
retf
clc
(bad)
fst
ret
mov
xchg
mov
fild
sbb
sbb
jp
mov
mov
aam
jle
outs
fs
mov
ret
(bad)
mov
mov
ins
(bad)
pop
(bad)
out
dec
xchg
ins
push
dec
push
pop
mov
clc
mov
mov
push
sub
or
xor
pushf
or
out
cld
(bad)
and
inc
xchg
adc
pop
inc
aam
test
gs
sti
dec
cmps
lods
xchg
dec
cmp
and
inc
dec
dec
dec
(bad)
in
inc
xlat
pusha
sbb
or
dec
lods
mov
out
xor
add
push
out
cmp
push
or
mov
les
mov
mov
rol
retf
or
add
test
sub
cmp
test
mov
push
and
xchg
(bad)
(bad)
mov
add
aad
dec
mov
xchg
xchg
ret
dec
xchg
nop
mov
fs
dec
js
mov
mov
push
out
lea
pop
xor
popa
mov
add
xor
test
jnp
dec
(bad)
mov
jp
sub
retf
je
cmps
popf
das
cmp
push
ret
enter
mov
je
bnd
movs
mov
shl
mov
into
mov
adc
retf
mov
adc
das
test
test
jp
test
(bad)
fwait
nop
mov
mov
out
sbb
jae
ret
loop
xchg
pop
dec
jbe
add
xor
out
repnz
jns
xchg
fsub
mov
cmp
std
jae
dec
or
push
inc
cmps
(bad)
std
adc
dec
hlt
xlat
lock
mov
int
push
pop
xchg
div
inc
ins
adc
stc
sbb
inc
int
loop
rcr
outs
xor
jnp
nop
ret
enter
cmp
repz
imul
aad
mov
mov
add
test
out
out
xchg
push
repnz
add
ror
xchg
jo
data16
push
in
add
fbstp
xor
mov
mov
xchg
dec
mov
jnp
shl
enter
(bad)
mov
cmp
sahf
sub
pop
mov
pop
std
cmp
arpl
xor
fwait
(bad)
mov
pop
push
xlat
mov
adc
dec
ss
jns
and
jno
or
fistp
out
sbb
sub
(bad)
(bad)
mov
loope
iret
cmc
out
xchg
inc
add
cmp
add
mov
out
pop
bnd
and
mov
(bad)
sub
sbb
dec
leave
inc
adc
in
(bad)
cdq
dec
xlat
lea
add
repnz
pop
std
dec
and
xchg
adc
pop
ret
sbb
(bad)
cli
jb
xchg
jl
jbe
pop
jmp
stos
cdq
mov
mov
test
nop
cmp
add
mov
mov
mov
hlt
(bad)
and
arpl
push
inc
in
sub
jo
rcr
xchg
cld
xor
push
push
cmp
dec
les
adc
je
(bad)
mov
mov
shr
mov
push
(bad)
neg
push
lods
jae
or
cs
ja
inc
ja
or
push
pop
adc
hlt
mov
cmp
xchg
add
sbb
(bad)
jnp
enter
scas
inc
mov
fs
jl
je
ins
mov
pop
pop
fwait
sub
outs
dec
inc
and
mov
out
adc
cwde
cmc
fimul
fistp
xchg
out
dec
xchg
jnp
rcl
adc
fwait
ret
dec
fs
fidiv
inc
mov
clc
mov
aaa
call
or
imul
shr
jmp
test
mov
dec
jne
pop
sbb
inc
cmp
rcr
sbb
movs
ja
dec
xlat
hlt
and
push
dec
jl
xchg
es
sbb
and
mov
jnp
mov
mov
xor
arpl
mov
mov
aas
ss
out
jmp
imul
pop
ins
xlat
dec
pusha
xchg
dec
ds
repnz
je
(bad)
mov
cmp
mov
jne
jmp
mov
rcl
push
xchg
fdivrp
arpl
pop
sub
in
push
sub
sbb
call
aam
xchg
std
pop
ja
sbb
sub
cmp
cmp
pop
loope
push
mov
mov
stos
inc
adc
push
lods
call
in
arpl
xchg
xchg
pushf
sub
dec
add
retf
(bad)
lock
in
pop
sbb
adc
push
loope
sbb
shr
retf
inc
add
pop
adc
and
pop
sub
mov
adc
jl
div
xchg
test
sahf
mov
js
adc
mov
xchg
inc
sub
push
mov
mov
push
sub
and
je
(bad)
ss
mov
sub
push
or
bound
jns
(bad)
out
test
and
mov
ja
loope
cs
cmp
xchg
call
lds
xchg
ret
sub
jp
jae
in
leave
pop
mov
and
mov
mov
jg
(bad)
int3
push
push
mov
out
(bad)
and
ret
mov
js
inc
xor
sub
dec
aad
ret
out
cwde
sub
sub
adc
std
enter
mov
add
mov
loope
test
int
mov
fstp
cmp
out
adc
mov
icebp
fcomp
or
arpl
dec
inc
fidivr
push
dec
cmps
jmp
push
mov
adc
xor
arpl
mov
fdivr
cmps
arpl
lahf
or
js
outs
lahf
cmp
imul
or
xchg
push
scas
sub
imul
push
xchg
adc
push
adc
dec
mov
stc
not
xor
aam
ffree
adc
fcmovb
add
xchg
dec
jne
aas
and
enter
sbb
xor
aas
add
enter
fdivr
cmc
mov
fdiv
fbstp
xor
mov
push
scas
or
(bad)
fimul
mov
movs
add
fistp
push
and
cmp
test
fnstsw
push
out
add
sub
jp
jge
dec
and
xchg
mov
sub
jnp
xchg
lahf
retf
sub
in
es
jns
add
fsubr
shl
push
push
ins
and
ins
es
aas
int
xchg
jb
push
cmp
fnsetpm(287
mov
sub
(bad)
mov
jmp
ror
push
xor
pop
aaa
in
aad
and
rcl
jg
cmp
mov
sub
and
mov
aad
and
retf
mov
(bad)
mov
xor
jae
xchg
jno
add
scas
dec
cmp
aam
movs
dec
mov
inc
(bad)
jmp
push
pop
inc
cmps
stos
test
or
or
lock
data16
dec
retf
and
add
or
adc
enter
mov
pop
push
fsubr
loop
mov
mov
outs
sahf
mov
mov
inc
push
in
cmp
mov
sbb
mov
mov
xor
out
ss
xor
or
jmp
lahf
mov
push
loop
xor
jl
jno
sbb
shl
jl
xor
fist
push
push
pop
int3
add
fs
mov
inc
in
stc
out
stc
call
ret
pop
dec
stc
and
push
fstp
bound
fist
clc
dec
and
pusha
dec
cdq
popa
movs
cwde
imul
ficom
loopne
dec
add
sub
push
pop
retf
repnz
add
mov
aam
inc
mov
ja
xor
inc
fimul
arpl
or
(bad)
cs
mov
out
outs
lods
daa
xlat
aaa
cmp
pop
ficom
xchg
test
clc
scas
sub
cmp
and
sti
pop
mov
sub
jg
repz
dec
lds
adc
pop
mov
jmp
lock
(bad)
mov
bound
xchg
push
stos
add
arpl
pop
icebp
xchg
adc
shr
push
sahf
cmp
dec
push
adc
shl
ss
iret
cmp
stc
in
ins
inc
push
add
or
sbb
cmp
fbstp
adc
std
xlat
ds
popf
sbb
loope
imul
repz
push
and
lds
inc
cwde
jmp
and
mov
pop
shl
and
mov
push
mov
push
adc
cmc
lods
mov
pop
pop
call
mov
pop
bnd
push
jbe
xchg
cmp
mov
dec
lods
dec
mov
jno
adc
repnz
fcmovnb
je
xchg
pop
stc
dec
mov
lock
cmp
mov
dec
int
mov
push
retf
xchg
retf
mov
cdq
imul
pop
pop
imul
cmps
aas
adc
jecxz
cs
pushf
mov
lea
xchg
into
xchg
pop
push
test
add
test
sbb
mov
mov
outs
lods
dec
dec
xchg
dec
cmp
lods
bound
push
or
or
sbb
rcl
ret
call
jmp
sub
call
fnsave
jle
cmp
cs
mov
pop
adc
(bad)
cmps
(bad)
int3
mov
dec
pop
fsubr
(bad)
push
push
xchg
mov
(bad)
jnp
cmp
call
repnz
xchg
push
push
mov
xchg
and
sbb
bound
push
out
push
lahf
add
leave
push
cmp
(bad)
cmp
arpl
mov
push
outs
mov
sub
and
mov
adc
jg
mov
add
adc
or
and
inc
and
(bad)
mov
mov
xchg
adc
add
ret
adc
mov
sub
pop
add
cld
ficomp
adc
mov
bound
lods
dec
test
cwde
jmp
arpl
loope
rol
pop
sub
pop
imul
and
cmc
add
cld
cmp
sub
pop
or
outs
iret
stos
mov
stos
dec
dec
ror
ins
aad
xor
sahf
mov
xchg
(bad)
fwait
inc
push
jne
fsub
popa
addr16
repz
iret
in
repnz
sbb
movs
jl
xor
fist
xor
pop
and
fsub
jmp
cmp
clc
aad
add
cwde
(bad)
lea
imul
pop
cmc
aaa
fisttp
inc
sub
ret
adc
jae
call
out
(bad)
ror
rcl
cmp
cmp
stc
fnsave
xor
xchg
scas
iret
inc
fild
(bad)
das
pop
adc
cs
and
push
mov
xor
or
or
cmp
in
(bad)
inc
pop
mov
(bad)
or
retf
(bad)
dec
leave
jb
rol
outs
fild
cmp
ds
cmps
out
loope
in
or
jmp
loop
(bad)
test
loopne
fistp
push
xor
sahf
pop
push
add
scas
jo
mov
ds
lods
and
lods
dec
(bad)
push
imul
(bad)
arpl
inc
test
scas
imul
mov
mov
mov
(bad)
pop
dec
(bad)
fucomp
mov
in
retf
movs
pop
lahf
pushf
xor
mov
dec
push
dec
add
xchg
mov
pop
repz
sub
ins
test
cld
xor
push
mov
and
mov
jge
push
mov
push
bound
mov
and
cli
push
leave
mov
scas
ja
mov
pop
jne
jge
cmps
imul
sub
sub
fdivr
jb
adc
rol
xchg
jbe
loop
nop
xor
shl
mov
fdiv
dec
sub
sub
es
imul
rcl
jno
jle
mov
(bad)
popa
mov
call
int
stos
ret
enterw
sbb
cmp
in
jmp
push
lods
out
push
push
cmps
mov
js
stos
retf
xchg
mov
iret
sub
inc
shl
add
add
iret
pop
stos
push
into
loope
stos
fistp
add
fs
sub
add
and
clc
sbb
mov
sub
mov
dec
fadd
jl
push
das
push
das
jne
jmp
xchg
ins
add
popf
add
adc
jl
fcom
cmp
aas
sahf
sar
lods
inc
push
jae
add
mov
push
mov
mov
mov
pop
jmp
nop
mov
mov
sub
out
sub
cmp
pushf
push
or
icebp
dec
and
fmul
fidivr
or
xor
cwde
(bad)
out
fisubr
mov
or
and
and
fisttp
mov
xchg
pop
lahf
mov
cmps
sub
dec
inc
into
or
(bad)
mov
xchg
xchg
inc
xchg
outs
add
mov
cwde
xlat
aad
mov
and
mov
std
test
pop
fstp
xchg
ins
popa
mov
inc
sbb
xor
outs
push
mov
les
fist
or
fwait
pop
pusha
push
icebp
mov
call
pop
jno
xor
or
adc
or
dec
loope
sbb
loope
aas
popf
adc
fisub
pop
iret
cmp
jecxz
test
imul
stos
dec
jp
sub
mov
ins
xchg
or
not
xchg
cmp
loop
out
cs
xor
mov
cmp
fisub
imul
xchg
pop
add
jns
out
push
pop
call
jne
pop
in
outs
lahf
in
lock
jmp
mov
aam
lahf
loope
lods
mov
cmp
sbb
in
loopne
inc
popa
and
xor
mov
int3
bound
mov
dec
mov
(bad)
imul
outs
iret
push
test
nop
bound
out
sbb
mov
mov
icebp
mov
call
pop
icebp
mov
sub
es
cmp
jmp
ret
jg
repz
xor
in
inc
mov
adc
bound
jge
push
sbb
movs
hlt
mov
mov
add
sub
dec
scas
pop
sti
cmp
loopne
fisttp
adc
jo
xchg
jne
dec
jae
bound
push
dec
sub
mov
push
clc
or
dec
push
pop
add
rcr
out
ins
and
enter
push
sub
xchg
mov
leave
arpl
cmp
xor
mov
lahf
out
cmps
into
add
(bad)
dec
adc
outs
push
sub
loopne
call
mov
dec
cmp
sbb
xor
jb
pop
push
(bad)
mov
mov
das
test
push
hlt
dec
jne
mov
or
stc
daa
ds
xor
cmp
sbb
out
inc
jmp
(bad)
mov
test
sub
lahf
fldcw
adc
sbb
test
fist
or
xor
outs
xchg
stos
rcl
mov
fidiv
cmp
xlat
xor
mov
ret
mov
fidivr
sbb
inc
pop
stos
lahf
outs
xor
andps
aam
xchg
loopne
dec
call
add
sbb
mov
or
sbb
movs
(bad)
push
pushf
sub
retf
cmps
push
retf
jne
adc
cmp
loopne
das
and
mov
popf
es
and
and
add
sbb
mov
out
cmp
inc
sbb
les
jnp
or
pop
cmps
aam
or
sub
xchg
shr
(bad)
push
ins
xchg
sti
in
xor
push
inc
adc
in
ror
mov
adc
out
out
rcr
gs
jmp
push
xchg
test
aam
int3
cs
aas
lods
pop
mov
rcl
or
cmps
ds
fadd
add
in
adc
jae
inc
push
call
mov
mov
lahf
fs
and
stc
mov
xchg
dec
and
loopne
dec
mov
sbb
les
retf
inc
and
mov
repnz
shl
add
adc
cmps
movs
test
retf
mov
test
shr
imul
out
inc
sub
mov
call
loope
push
fisub
pusha
aad
iret
add
fld
arpl
mov
pop
cmps
mov
dec
mov
sub
pop
mov
outs
out
stos
sub
scas
add
sub
or
(bad)
fdiv
inc
xor
stos
or
imul
shr
bound
push
inc
icebp
or
into
push
sbb
fild
sbb
mov
jle
mov
test
test
and
pop
xchg
xchg
sahf
jecxz
pop
pop
sub
scas
jne
out
es
fmul
sbb
ds
or
xor
sbb
movs
mov
sbb
mov
std
shl
inc
xor
push
rcr
imul
ret
sub
ret
das
cmp
adc
jge
pusha
(bad)
xor
jl
shl
push
mov
pop
jae
(bad)
pop
lods
dec
pop
xchg
lods
mov
aas
xor
dec
xor
ja
mov
sub
out
stos
jl
dec
lea
jmp
sbb
aam
xlat
out
outs
or
cmp
add
lods
aad
pop
mov
jae
xchg
xor
das
loope
and
dec
into
popf
jp
mov
outs
hlt
add
mov
mov
cmp
loopne
jp
in
inc
push
aaa
add
mov
sub
adc
fcom
push
add
jb
int3
ins
addr16
push
dec
test
out
in
push
mov
sbb
mov
in
sbb
ret
pop
lds
lods
xchg
cmp
jb
imul
in
cs
into
mov
and
outs
mov
push
arpl
push
add
inc
pop
jl
push
in
mov
fidiv
jae
aas
mov
jae
iret
(bad)
stc
dec
sar
das
std
adc
inc
sbb
and
call
mov
xchg
inc
shl
and
mov
pop
sahf
jns
inc
sub
mov
(bad)
scas
pushf
call
and
cmps
enter
add
dec
fs
cmp
movs
xchg
add
hlt
xor
popa
mov
dec
cs
sbb
leave
movs
or
lahf
push
(bad)
fild
push
enter
or
shl
adc
lahf
cmp
scas
jmp
retf
and
mov
xor
xchg
stc
mov
out
jbe
cmp
out
call
ror
sbb
mov
dec
cld
push
sbb
and
cld
or
and
in
and
scas
pop
call
xchg
dec
jge
mov
inc
push
(bad)
sbb
repz
mov
fbstp
xor
mov
sbb
or
jae
cmp
inc
dec
and
sbb
cmp
outs
cdq
jg
das
aaa
aaa
add
repz
push
in
mov
jl
xchg
lea
out
push
data16
dec
and
sub
sbb
push
mov
mov
in
dec
fcom
aaa
in
add
mov
mov
and
sub
fnstsw
dec
jg
inc
retf
push
mov
push
inc
daa
test
mov
add
inc
jo
icebp
mov
cld
adc
inc
dec
xor
ret
sbb
fsub
adc
cmc
cmp
cwde
sbb
xor
bound
jecxz
dec
loopne
cld
push
icebp
jmp
jo
loope
outs
pop
leave
xchg
rcr
mov
hlt
mov
out
test
(bad)
mov
pop
push
xchg
adc
icebp
push
xor
mov
sub
dec
push
int3
popa
(bad)
mov
int3
lea
sub
xchg
xchg
jl
mov
fidivr
out
out
xor
inc
test
xor
sub
stc
push
pop
shl
ds
sub
call
pop
in
adc
adc
fimul
(bad)
cdq
mov
(bad)
pop
mov
mov
xchg
push
pop
ret
push
popa
(bad)
aad
int
xchg
xor
jb
in
js
nop
pop
push
cli
xor
sti
jg
and
sbb
mov
retf
dec
ja
jg
shr
dec
cmp
in
stos
arpl
cmp
adc
out
mov
xor
shr
sub
sub
enter
mov
jno
cwde
lods
mov
push
jae
add
sar
ret
jae
loope
imul
and
movs
xchg
xor
adc
push
mov
xor
and
sbb
lea
xor
and
cmps
adc
loope
push
mov
add
int
pop
adc
push
imul
fucomp
sub
lds
imul
jecxz
lods
xlat
iret
add
cli
adc
cmps
mov
pop
es
fild
add
mov
push
les
scas
xchg
mov
scas
ficomp
inc
test
cld
jecxz
jmp
aad
orps
call
sahf
hlt
xor
sbb
sahf
fwait
cmp
inc
cmp
lods
xor
inc
cmps
jno
(bad)
push
pop
data16
adc
mov
ins
push
out
data16
mov
leave
loopne
xor
sbb
mov
ret
stos
or
sti
jge
mov
push
pusha
push
mov
test
stos
sti
clc
cmp
ja
pop
sbb
adc
adc
xchg
popf
jp
aam
mov
and
cmps
dec
shl
rcr
addr16
mov
jecxz
xchg
add
jmp
addr16
out
sbb
daa
movs
dec
add
xor
pop
rol
outs
stos
push
fnstenv
out
xchg
jle
loop
test
mov
jmp
test
jne
in
and
jecxz
or
sbb
pop
(bad)
sti
shl
fistp
sbb
and
xchg
pop
mov
fsubp
daa
rsqrtps
daa
dec
test
xchg
je
mov
stos
adc
push
shl
mov
xchg
enter
lds
jns
stc
xchg
repnz
sbb
or
add
mov
mov
cmp
xor
into
add
in
(bad)
retf
adc
pop
mov
std
div
mov
or
dec
cwde
(bad)
fwait
sub
dec
and
or
and
(bad)
loop
retf
jge
outs
mov
inc
fcom
sbb
add
loopne
cdq
cmp
xchg
cmp
in
mov
clc
mov
and
dec
or
sbb
mov
dec
cli
aas
jnp
mov
in
mov
int
sti
call
mov
inc
xlat
cwde
retf
push
push
and
inc
retf
out
out
pop
adc
add
jnp
xor
sub
jbe
scas
call
push
stos
jp
mov
xor
fsubr
sahf
jmp
lds
imul
dec
mov
mov
adc
sbb
and
movs
imul
js
cld
mov
and
in
mov
cmc
inc
sub
push
xchg
cmp
pusha
sbb
mov
mov
push
in
mov
ins
scas
dec
ror
mov
adc
sub
cmp
mov
scas
dec
xor
call
repnz
inc
call
lar
jnp
ficom
repz
push
movs
jmp
cmp
cmp
add
sub
lock
mov
mov
iret
add
and
int
inc
repnz
lock
inc
icebp
push
scas
mov
push
jo
js
xchg
out
fnstsw
xor
in
ficom
fmul
sbb
dec
jnp
add
(bad)
mov
push
mov
test
mov
mov
inc
dec
inc
popf
(bad)
shr
leave
clc
call
retf
gs
fsubr
lea
icebp
cmps
and
sbb
push
add
call
in
cli
xchg
ins
(bad)
push
fnsave
mov
outs
xor
jp
das
and
lahf
mov
stos
fcomp
mov
stos
addr16
xchg
cmp
mov
lahf
movs
pop
lods
aam
add
and
fdivr
imul
sbb
jno
loope
and
out
mov
jmp
sub
mov
not
jnp
(bad)
adc
mov
add
pop
(bad)
loop
call
cmp
mov
jmp
fbld
shr
inc
retf
scas
loopne
add
inc
setp
push
xor
ins
mov
fbstp
sub
pop
xor
fwait
mov
ret
pop
bound
sbb
not
push
icebp
xchg
and
cmp
push
(bad)
and
mov
adc
ins
add
imul
(bad)
cmp
mov
ret
aas
mov
loop
xchg
pop
lods
(bad)
cmp
jecxz
pop
popf
xchg
push
adc
data16
pop
cmp
fcom
ds
ss
test
std
shr
int
sub
push
cmc
xchg
jae
jae
xchg
pop
push
mov
fld
sbb
adc
ffree
pop
fstp
out
popa
push
idiv
mov
push
scas
cli
and
adc
ja
mov
movs
mov
das
sbb
dec
xchg
int3
xor
pop
aas
imul
sbb
into
mov
sub
arpl
fdivr
scas
sbb
cmp
or
cmp
mov
fsubr
fild
adc
pop
in
adc
xchg
push
loopne
mov
jae
sahf
mov
je
sub
aaa
outs
cld
xor
ret
xchg
popf
ret
aaa
pop
retf
pop
stos
push
cmp
bound
dec
test
and
addr16
and
shl
nop
jno
mov
mov
adc
loopne
cmps
sub
mov
idiv
pusha
push
sub
and
sub
shr
adc
pop
rol
pushw
std
cld
mov
jnp
fst
adc
inc
pop
cdq
inc
jge
or
push
adc
jge
jns
retf
dec
pop
ss
add
dec
cmc
not
test
aad
mov
(bad)
cmp
jl
or
scas
sub
ins
test
pop
outs
add
test
cwde
bound
ins
arpl
fstp
push
dec
xchg
aam
add
jmp
pop
pop
sahf
xchg
mov
lds
test
push
jne
adc
xlat
retf
aas
bound
retf
ret
xchg
leave
ss
shr
mov
call
retf
xor
aam
es
sub
dec
fcom
sub
dec
pusha
mov
jnp
mov
add
stc
addr16
sahf
mov
popf
pop
repz
jle
scas
lock
fsubrp
daa
mov
into
sti
cdq
jmp
out
sbb
jl
(bad)
cmc
and
sub
jge
in
xor
test
push
cdq
stos
fistp
shr
cmp
fs
inc
rol
and
rol
ins
in
push
cmp
(bad)
aas
xor
addr16
fucomp
xchg
(bad)
push
inc
cmps
daa
mov
ss
fucomip
or
jle
dec
dec
loop
int3
arpl
jg
push
popa
out
adc
xor
hlt
push
into
inc
add
(bad)
fcmove
stos
pop
inc
jle
(bad)
ficomp
cdq
or
leave
mov
dec
lea
dec
jnp
and
fdiv
mov
cs
or
ror
push
ins
xchg
fsubr
iret
jge
popa
shl
mov
and
mov
mov
ret
xchg
ja
(bad)
add
push
or
fwait
cmps
inc
retf
push
gs
leave
out
movs
push
(bad)
fsincos
sbb
cmps
pop
mov
jge
rcl
xchg
pop
out
jbe
sub
xchg
push
and
clc
mov
ins
iret
je
pop
or
pop
lahf
and
push
cmps
out
ins
cmp
sbb
mov
sbb
dec
xor
push
or
das
pop
int
inc
test
retf
sub
lds
sbb
adc
fdivr
and
jae
stos
(bad)
rol
enter
dec
adc
mov
mov
jb
hlt
jmp
arpl
push
call
mov
out
out
or
aad
xor
xor
scas
mov
sbb
mov
xchg
xchg
adc
stc
jns
jno
mov
nop
sti
xor
sbb
lods
push
and
adc
stc
ficomp
cmp
push
lods
jne
inc
push
std
or
je
sahf
dec
xchg
or
shl
outs
sub
test
test
or
sub
xor
push
mov
imul
lahf
push
(bad)
cs
retf
push
jmp
cmp
out
mov
pop
sbb
addr16
adc
adc
pusha
dec
and
loop
fstp
push
pop
lea
pop
sahf
adc
enter
dec
das
clc
fs
outs
loopne
add
int
rol
add
jb
imul
mov
les
mov
or
scas
lea
jle
jp
sub
fisttp
jge
mov
imul
rcr
cmp
bound
xor
mov
inc
pop
push
sbb
mov
fidiv
dec
inc
xchg
sahf
or
leave
dec
ins
pxor
sbb
mov
popf
sbb
test
xchg
sub
mov
push
or
nop
std
pop
lods
xor
xchg
out
cwde
mov
out
scas
pop
je
rcr
jo
ret
and
push
call
out
sbb
mov
inc
test
adc
jo
xchg
stc
enter
das
rcr
xchg
into
in
and
sub
sub
sbb
(bad)
mov
lods
sub
out
test
push
loopne
in
lods
cmp
sbb
sub
pop
dec
out
jg
xchg
add
adc
push
inc
enter
pop
or
sbb
in
add
xlat
and
adc
dec
xor
add
cdq
data16
cs
fcom
shl
popf
retf
jnp
adc
loopne
sub
pop
inc
repnz
or
and
push
ins
adc
bound
sbb
mov
mov
scas
jnp
jp
inc
pop
add
push
or
fnstcw
aad
retf
inc
sbb
add
stc
sbb
mov
mov
les
fldcw
push
pop
outs
leave
mov
dec
or
or
mov
xchg
das
imul
es
adc
call
(bad)
jmp
push
lods
push
sub
scas
jb
ror
out
inc
or
push
dec
inc
inc
aam
jle
cs
retf
fdiv
in
add
xchg
push
ror
pop
movs
xor
add
jns
xchg
ror
jae
(bad)
arpl
xor
pop
cli
mov
loopne
dec
das
inc
shl
cli
cdq
dec
or
mov
xor
loop
sbb
loop
sahf
xor
(bad)
call
adc
imul
rep
jo
adc
arpl
cli
mov
push
jge
(bad)
sahf
loopne
dec
xchg
mov
mov
addr16
jmp
pop
mov
push
inc
jbe
xchg
mov
test
dec
lock
or
and
ins
add
push
adc
iret
mov
addr16
ss
mov
test
xor
bound
das
jg
inc
dec
adc
rcl
jge
and
out
psubw
imul
dec
dec
mov
cmp
adc
jl
mov
jne
add
and
add
and
or
lock
jno
xchg
es
in
push
(bad)
daa
pushf
in
lods
sub
or
push
dec
cdq
cmp
mov
sub
mov
or
lods
add
xchg
xlat
out
dec
and
jo
out
jns
or
test
enter
cld
pop
int
pop
jo
jne
pop
out
fcmovnbe
mov
call
jbe
jbe
fidiv
sbb
and
and
mov
gs
and
test
outs
and
cmc
in
dec
sub
adc
les
daa
jle
mov
(bad)
fisttp
shr
mov
cmp
nop
fcmovnb
jno
pusha
mov
addr16
xchg
or
daa
sbb
call
push
cwde
jbe
addr16
dec
jns
add
and
mov
out
inc
(bad)
popa
jg
mov
jno
dec
ins
sbb
jns
fisub
je
bound
pusha
sar
jae
xchg
sub
jae
div
jbe
sub
dec
dec
push
cli
fsubr
popa
sub
sbb
ret
ss
jmp
inc
add
out
mov
xchg
dec
int3
jecxz
cmp
fwait
mov
mov
mov
popa
dec
mov
icebp
mov
add
(bad)
cdq
iret
fdiv
xchg
mov
pop
out
xchg
aad
mov
inc
mov
fwait
mov
lods
and
dec
fs
mov
mov
add
and
mov
cmp
cmp
pop
test
fistp
ins
push
sbb
movs
inc
rol
test
bound
cmp
leave
xchg
mov
jmp
and
cs
dec
or
es
mov
jmp
aas
aaa
fisttp
pop
adc
jmp
xchg
out
push
imul
stos
movs
lods
and
xchg
mov
loope
ret
mov
aam
cmp
bound
arpl
jl
sbb
repnz
data16
jns
xchg
shl
inc
and
dec
jb
pop
pushf
xor
and
cmp
push
xchg
mov
pushf
rcr
outs
dec
pop
test
add
std
xchg
mov
outs
mov
std
retf
add
das
xchg
push
cs
pop
adc
xor
repz
jmp
pop
cwde
pusha
call
aam
(bad)
xchg
lods
sahf
repnz
js
mov
xor
inc
idiv
or
cmp
mov
lock
xor
jp
xchg
push
iret
in
repnz
das
sbb
cli
lods
jb
out
rcr
std
cmp
(bad)
and
loope
adc
mov
sti
sub
cld
xlat
xor
add
jo
mov
gs
(bad)
fstp
bound
(bad)
loop
or
popa
push
setnp
sub
cmp
pop
aaa
mov
add
ret
jecxz
fdiv
inc
ret
scas
jae
fldcw
out
cdq
pusha
xchg
mov
ins
mov
or
add
pop
pop
cwde
sbb
lods
stc
cs
sub
ret
adc
gs
mov
add
xchg
jb
or
dec
mov
inc
fimul
and
dec
cmp
inc
adc
js
pushf
sbb
jnp
inc
cmp
dec
xchg
test
(bad)
call
pop
sub
test
ja
pop
lods
pop
imul
enter
xchg
out
leave
loope
mov
cmp
lahf
xchg
stos
pop
les
dec
add
xchg
pusha
popa
(bad)
loopne
push
fidivr
xchg
jbe
scas
aaa
fwait
xor
xor
sahf
and
ds
or
lock
cld
pop
test
sbb
cli
test
mov
call
shl
cmp
outs
loope
fisub
test
popf
mov
jmp
rcr
sbb
dec
ficomp
lods
icebp
adc
add
mov
repnz
test
iret
sub
pop
inc
xchg
or
sub
rcl
(bad)
stos
(bad)
je
and
mov
into
or
pop
inc
test
fdivr
lods
ret
fstp
mov
lds
adc
push
or
xor
aaa
push
pusha
call
repnz
xchg
pop
enter
push
or
adc
sbb
outs
dec
loop
jns
mov
inc
cmp
stos
fstp
in
les
test
data16
jo
adc
cmps
mov
loope
jae
and
fnstenv
fs
push
push
test
jg
jmp
fs
cdq
mov
(bad)
inc
jg
cmp
adc
xor
pop
xchg
jmp
mov
cmps
xchg
emms
rcl
mov
ss
jmp
xorps
in
push
mov
push
arpl
stos
mov
mov
push
jae
mov
dec
ret
sbb
sar
in
aad
(bad)
jmp
mov
leave
repz
repz
push
mov
(bad)
pop
jo
jp
cmp
loop
fdiv
fadd
pop
movs
mov
das
(bad)
stc
(bad)
loope
inc
xor
popf
je
lods
sub
je
and
imul
adc
and
sbb
pop
sti
shl
dec
out
inc
push
mov
loop
lods
shr
mov
add
lahf
and
mov
sahf
cld
jae
push
dec
aam
mov
js
js
test
pop
fwait
mov
jno
cmp
sbb
and
push
cmp
js
out
push
stc
mov
repnz
vrsqrtss
mul
test
ss
fstp
add
sub
mov
rcl
or
and
jle
sbb
mov
sbb
push
inc
inc
outs
das
xchg
xlat
leave
lock
scas
cmp
xor
xchg
mov
loop
or
test
mov
xor
sbb
int
ds
ror
mov
xchg
push
mov
(bad)
and
dec
inc
sub
sti
sti
retf
js
(bad)
mov
lahf
jnp
pop
jmp
arpl
add
or
test
push
mov
mov
enter
jno
sbb
dec
pop
cwde
sub
cmp
out
jno
(bad)
stos
mov
xchg
mov
mov
into
jmp
movs
ins
sub
retf
ret
out
lahf
(bad)
(bad)
push
mov
xchg
frstor
mov
inc
sub
outs
(bad)
movs
inc
push
mov
sbb
lods
mov
inc
mov
and
scas
inc
pop
push
xchg
nop
hlt
shr
bound
rcl
lods
adc
loop
ins
mov
fs
or
push
and
aam
scas
pop
retf
mov
stc
leave
inc
xchg
inc
inc
movs
xor
cli
xchg
ret
sbb
inc
pop
jno
int
mov
or
mov
popa
mov
cmp
outs
jl
pop
pop
popa
leave
(bad)
outs
jne
daa
push
loope
mov
(bad)
fdivr
xchg
ss
xchg
mov
mov
dec
arpl
or
iret
and
iret
mov
xchg
ja
shl
scas
or
mov
sbb
mov
cmp
(bad)
loopne
pop
pop
xchg
fcmovbe
cmp
stos
inc
sub
sti
inc
jne
shl
sbb
out
mov
mov
leave
dec
mov
mov
sbb
jb
cmps
outs
pop
ror
jecxz
call
loope
rcl
pop
xchg
in
pop
addr16
pop
cmps
enter
stc
dec
xchg
push
imul
push
xlat
enter
clc
lods
dec
push
push
jp
mov
ins
xor
cmp
out
inc
cmps
mov
inc
inc
adc
int3
pop
ficomp
(bad)
xchg
ss
mov
inc
pop
xchg
mov
clc
ja
div
imul
cmp
inc
icebp
popa
out
adc
test
int
dec
out
sbb
pop
xchg
mov
scas
sbb
or
add
or
shl
nop
inc
repnz
push
pop
mov
push
fdiv
cmp
mov
aam
dec
lods
repnz
dec
mov
xchg
aaa
sbb
faddp
sub
cmps
out
pop
inc
mov
clc
xchg
(bad)
xor
jl
add
(bad)
push
adc
mov
mov
je
aaa
pushf
ror
(bad)
inc
(bad)
cld
jecxz
adc
or
push
push
clc
es
fadd
fadd
jecxz
test
mov
mov
int3
lahf
call
sahf
push
aam
inc
icebp
sub
mov
mov
jmp
sub
xlat
push
cli
dec
jl
shl
dec
pop
dec
mov
push
in
nop
sub
jno
cmps
push
sbb
neg
cmp
or
aaa
stos
jne
inc
xor
xor
out
neg
fld
imul
add
cs
mov
sti
arpl
lods
mov
jno
mov
bound
sbb
stos
mov
xchg
adc
ficomp
es
add
nop
lahf
aam
stc
push
jne
call
imul
jns
(bad)
fsub
mov
jl
std
stc
popf
test
cmp
fwait
repz
mov
cmp
sbb
in
adc
lock
mov
fidiv
popf
iret
retf
stc
add
sub
out
gs
add
sbb
imul
xchg
movs
stc
dec
xchg
retf
imul
push
imul
ins
test
push
and
jns
inc
(bad)
cli
inc
test
popf
cmp
(bad)
les
les
test
arpl
arpl
imul
jne
xlat
jnp
aam
inc
rcr
sar
movs
and
inc
xchg
shl
jae
mov
sbb
push
mov
cmp
das
jmp
or
nop
cli
ret
sbb
loopne
push
dec
lea
lods
aaa
mov
popf
adc
jg
add
pop
adc
dec
add
mov
pop
add
data16
add
cmovb
push
rcl
mov
mov
fsub
movs
out
jecxz
int3
fcmovnbe
hlt
(bad)
dec
loopne
push
gs
into
pop
mov
mov
gs
fbld
dec
mov
ds
retf
aaa
popa
jno
ins
lods
in
das
xor
dec
ins
out
sub
xchg
add
(bad)
repnz
and
lods
sub
sbb
jmp
and
movzx
cmp
(bad)
pop
int3
cmp
fcomp
adc
xor
inc
repnz
shr
xchg
push
pop
cwde
and
adc
adc
sbb
ds
jno
ins
pop
sbb
(bad)
jmp
pusha
fs
cmp
cmps
jl
inc
push
sbb
adc
movs
pop
ficomp
sbb
xor
popa
xchg
sbb
sbb
push
sbb
push
(bad)
fcom
and
in
xlat
and
scas
dec
daa
inc
jecxz
(bad)
out
mov
mov
adc
sar
pusha
into
(bad)
fst
retf
pop
lea
jecxz
cmp
pop
cmc
jns
sub
and
mov
mov
and
mov
clc
scas
(bad)
cmps
leave
sbb
pushf
push
cwde
test
dec
xor
pop
dec
sbb
xor
aaa
mov
popf
sbb
inc
in
(bad)
stos
cmp
in
fwait
jne
clc
sbb
or
adc
(bad)
pop
mov
in
adc
push
test
loope
js
mov
out
cmp
and
pop
(bad)
cmp
imul
pop
mov
adc
cmp
call
push
adc
cmp
jns
mov
out
adc
pusha
rcr
or
xchg
xor
inc
mov
movs
test
mov
mov
pusha
fs
and
aam
sbb
rcr
or
and
cmps
out
in
out
call
repnz
shl
pop
cmp
(bad)
es
scas
xor
cwde
jne
jge
test
push
push
and
pop
enter
fld
ret
sti
test
loope
lods
pop
mov
mov
mov
jge
jb
cmp
mov
adc
mov
aas
cmps
or
pop
lea
mov
cmp
and
(bad)
sbb
fucomp
xor
cmp
xchg
xchg
and
pop
fs
inc
cmp
mov
sub
shl
mov
mov
scas
add
(bad)
(bad)
retf
in
mov
sub
fisub
das
and
push
push
pop
out
fcmovnb
ror
fistp
mov
add
pop
pushf
push
retf
ins
and
pop
inc
daa
rcr
xor
xor
jno
int3
sahf
pop
cmp
ret
mov
stos
in
fimul
xchg
cwde
jmp
jne
stos
ror
retf
std
fild
outs
repz
adc
xlat
mov
jns
xlat
add
test
imul
jb
mov
jo
cmp
test
inc
test
loope
test
movs
cmp
movs
add
and
pop
stos
sub
jae
enter
jecxz
jo
pop
pop
cmp
loope
add
(bad)
ret
push
mov
mov
push
xor
js
fsubrp
xchg
or
(bad)
mov
mov
les
push
(bad)
test
cmovo
or
add
shr
div
and
neg
imul
in
or
jmp
pusha
adc
jecxz
aad
scas
fdiv
jo
ja
inc
in
pop
jo
rcl
mov
les
jb
add
push
xchg
jmp
cmps
push
es
mov
lock
mov
jo
push
xchg
jle
iret
sbb
push
sti
test
fisttp
out
cmp
sub
jno
push
add
stos
push
jns
rol
sbb
push
sub
stos
or
out
jnp
cmp
in
sbb
cs
push
inc
push
aam
out
retf
push
jnp
mov
ins
dec
dec
movsx
out
jp
xor
repz
and
sbb
fcomp
dec
mov
mov
sar
fwait
xor
test
and
imul
inc
pushf
les
mov
jb
xor
fidiv
mov
mov
icebp
pop
push
rcr
inc
jge
shl
mov
pop
cmp
and
inc
fisubr
jg
in
popa
cdq
mov
add
pop
jle
dec
sub
mov
mov
aad
hlt
xchg
push
rcr
mov
imul
dec
loop
jle
rcl
push
jmp
inc
xchg
in
fstp
add
in
lods
cli
imul
cmc
jp
lds
pop
mov
mov
psubq
into
mov
shl
mov
or
mov
cli
push
not
inc
lods
sbb
adc
(bad)
(bad)
jno
jmp
mov
mov
cld
fmul
clc
clc
(bad)
movs
mov
ins
cmp
add
push
adc
cmp
test
test
retf
aas
in
or
lods
mov
neg
or
scas
sub
mov
sbb
dec
sub
sub
xor
imul
push
cmp
sbb
push
fist
das
mov
sbb
or
add
jmp
mov
pop
mov
adc
test
(bad)
mov
cld
sub
xor
sbb
cmp
and
dec
call
sbb
push
mov
sub
aam
retf
js
xor
sbb
or
and
fisttp
aaa
xchg
mov
in
xor
popa
jmp
mov
fimul
and
fidivr
iret
xchg
nop
xchg
cs
pop
inc
push
adc
jb
fadd
adc
test
xor
or
dec
cmp
mov
or
sub
test
fdivr
xor
test
cmp
and
and
retf
imul
jecxz
out
shr
cs
or
std
mov
scas
in
add
movs
mov
mov
in
push
pop
stos
int3
xor
jl
in
and
cmp
adc
popa
dec
mov
pop
call
cs
xchg
pop
and
popf
lods
cdq
xchg
sbb
out
daa
push
inc
mov
xchg
dec
mov
cmp
pusha
adc
gs
shl
ret
mov
and
fld
les
icebp
xchg
in
mov
adc
sti
imul
out
push
(bad)
xchg
into
cdq
mov
lock
inc
test
inc
icebp
cmp
mov
(bad)
icebp
(bad)
mov
sub
dec
jg
add
jl
pushf
jnp
cli
sbb
mov
and
shr
arpl
data16
add
mov
push
xchg
popa
adc
cmp
push
shl
dec
xor
mov
cmp
adc
div
mov
mov
or
sbb
(bad)
lea
rcl
mov
lock
jg
imul
fucomi
gs
retf
stos
sahf
mov
idiv
repnz
sbb
jae
adc
xchg
test
mov
inc
pop
maxps
dec
repnz
push
mov
mov
push
sub
or
adc
mov
push
dec
jbe
xchg
arpl
sbb
(bad)
or
adc
cwde
imul
push
jb
jbe
(bad)
sbb
push
push
xlat
and
pop
or
pop
popf
stos
pop
retf
xchg
(bad)
pop
xchg
mov
div
sbb
inc
dec
sbb
cmps
aam
int
jmp
sbb
sbb
add
movs
xor
mov
fsubr
test
xchg
adc
inc
push
sub
inc
cld
aaa
enter
xchg
jecxz
xchg
dec
(bad)
data16
retf
cmp
iret
add
mov
sbb
and
mov
push
cmp
stos
dec
in
jecxz
call
xor
sub
push
add
xor
cmp
cmp
loop
jbe
push
je
dec
jnp
fisttp
jl
movs
push
xor
sub
aaa
mov
out
ficom
mov
lsl
cdq
aad
loopne
stos
push
push
test
ficomp
cs
retf
push
mov
mov
mov
and
in
outs
addr16
jl
mov
sti
in
dec
jge
sti
dec
stos
push
loopne
xchg
je
mov
add
sahf
jmp
pop
ja
sbb
sub
xor
pop
cdq
add
movs
adc
sub
outs
das
repnz
call
int
leave
inc
je
loope
retf
out
fdivr
xchg
pusha
xchg
rol
sbb
dec
inc
mov
ror
(bad)
inc
into
in
(bad)
cld
push
jge
dec
or
inc
mov
data16
pop
xor
and
dec
pop
stc
push
test
fs
sbb
mov
jmp
stc
cmp
mov
cmps
enter
pop
jae
mov
push
xchg
into
xor
mov
rol
sub
outs
ffreep
inc
xchg
or
cmp
shl
mov
push
scas
rcl
or
aad
mov
pop
mov
inc
mov
mov
cmc
add
(bad)
pop
fxch
jp
repnz
das
sbb
(bad)
fst
add
mov
and
dec
cmp
out
pop
or
and
inc
nop
call
sub
or
mov
imul
ds
jmp
inc
rcl
push
sti
cmp
pop
das
(bad)
pop
out
push
cwde
lods
sub
mov
jnp
loope
cdq
mov
pop
sub
mov
repnz
jle
xchg
fsub
mov
push
pop
cdq
stos
jmp
dec
push
aaa
or
and
in
push
popf
push
sub
test
loopne
add
mov
mov
aaa
test
enter
mov
and
in
test
cmp
xor
push
ss
int3
aam
and
dec
mov
lahf
lods
lahf
lea
xor
int
scas
jl
repz
inc
mov
int
(bad)
mov
cmps
es
frstor
mov
jle
and
xchg
test
dec
sbb
pop
jge
daa
out
add
xor
in
aas
addr16
and
cdq
jp
or
push
jb
xor
jbe
sub
lds
lea
push
jo
call
mov
push
jp
pop
or
xor
push
jg
call
and
clc
(bad)
mov
sahf
sub
dec
xchg
aas
pop
vmovsldup
add
push
cmps
je
jnp
jle
or
lock
or
cmp
mov
es
retf
mov
jmp
push
lods
mov
sbb
test
rol
imul
js
ja
lock
retf
mov
neg
jecxz
int3
dec
mov
xor
or
shr
ret
push
mov
outs
mov
add
stos
pushf
inc
js
or
sub
pop
inc
sub
mov
outs
in
inc
test
(bad)
ret
ror
leave
jnp
mov
cmp
nop
and
mov
lahf
daa
mov
lds
adc
sub
and
shl
lods
pop
pop
sti
pop
mov
(bad)
lahf
sub
xchg
rcl
rcl
cmps
push
clc
dec
aaa
test
sbb
fld
cli
shl
out
int
rcl
in
rol
xchg
loopne
out
sahf
fld
add
movs
jmp
aaa
ins
cmp
lock
retf
fsub
pushf
and
mov
inc
cmp
mov
imul
xor
out
(bad)
sub
and
mov
sahf
and
sahf
ret
jmp
icebp
lods
pop
ret
mov
add
scas
or
pusha
test
fistp
push
in
mov
dec
loopne
and
mov
test
lahf
fs
in
xchg
jl
inc
mov
pop
push
mov
rol
lahf
dec
cmp
cmp
and
shl
or
in
js
jno
mov
loop
mov
cmp
mov
fs
faddp
pop
sbb
xchg
mov
xor
push
xchg
leave
std
add
lahf
lahf
pop
sub
outs
adc
xchg
jg
jbe
repnz
adc
adc
jbe
push
lods
lea
addr16
cwde
enter
push
(bad)
mov
jge
cdq
out
mov
mov
and
pusha
and
ss
jecxz
ret
push
rcl
adc
bound
cld
cmp
inc
imul
xor
hlt
inc
sub
popa
and
push
add
stos
int
jbe
push
xor
call
dec
(bad)
or
jp
sbb
xor
sbb
xor
ins
add
jb
aad
(bad)
fmul
pop
add
(bad)
push
(bad)
xor
mov
stos
not
aaa
outs
js
or
dec
bswap
inc
sbb
pop
sub
sub
lds
(bad)
dec
mov
rol
out
ret
out
jae
add
retf
ret
sub
ins
fisubr
pop
add
cli
sbb
scas
sub
push
xchg
(bad)
leave
bound
enter
push
mov
cmp
imul
out
outs
and
inc
dec
sahf
cdq
fld
clc
add
mov
mov
addr16
xchg
xchg
idiv
sub
inc
and
cmp
adc
imul
scas
aad
jae
pop
retf
jae
icebp
adc
sbb
outs
out
xor
or
rcl
mov
mov
ins
push
xchg
xchg
mov
lea
loop
pushf
neg
sub
stc
imul
or
mul
add
xchg
mov
arpl
cs
cmp
and
in
out
mov
dec
fnstenv
jnp
hlt
sbb
push
jl
add
mov
mov
cmp
(bad)
sub
aaa
(bad)
iret
sub
cmps
jmp
push
loope
push
dec
add
adc
jecxz
out
jge
sub
fld
jb
sbb
pop
fwait
(bad)
push
jae
or
mov
in
cmc
leave
or
jge
push
imul
jl
inc
pop
ins
lea
or
ins
imul
xchg
mov
push
test
mov
clc
jne
jns
call
rol
dec
arpl
inc
out
mov
jns
mov
sbb
add
ds
retf
xchg
pop
rcl
cmps
loopne
call
mov
mov
int3
mov
mov
jmp
out
mov
shr
mov
mov
push
cwde
xchg
loope
iret
cmp
xchg
stos
pop
ins
stos
les
sbb
mov
jg
in
repz
in
je
xlat
int3
(bad)
popa
inc
mov
stc
push
mov
idiv
sbb
push
pop
or
aad
xchg
in
xor
add
bound
or
and
shl
test
sbb
jo
stc
adc
mov
pop
cmp
add
and
mov
cmp
push
sub
xchg
int3
and
mov
mov
mov
jo
test
mov
add
call
adc
adc
xchg
sub
out
mov
mov
dec
cmp
adc
aad
test
mov
adc
scas
in
push
rcr
mov
mov
mov
pop
xor
outs
mov
dec
and
leave
add
jmp
clc
jmp
int3
mov
adc
es
xchg
(bad)
stc
mov
lds
push
clc
inc
fs
adc
adc
xchg
lds
xor
mov
jl
test
fwait
sahf
mov
fmul
jmp
loope
div
cld
cmps
mov
inc
out
sbb
jno
das
push
adc
(bad)
xor
jmp
in
pop
mov
mov
xchg
stc
xchg
fld
cmp
pop
sbb
test
mov
push
sahf
add
cmps
and
and
pusha
data16
inc
push
and
jb
mov
jns
mov
hlt
add
push
pop
mov
cli
xchg
adc
jg
jmp
cmp
sbb
push
xor
push
xchg
lidtd
nop
sbb
pushf
sbb
jmp
and
outs
push
popf
push
enter
xor
jmp
jno
cdq
and
stc
lock
scas
gs
dec
add
sbb
dec
aam
inc
sub
in
pop
adc
cdq
mov
xchg
jl
out
jae
sub
lea
or
outs
push
imul
shr
xchg
sar
or
dec
lahf
icebp
mov
stos
dec
dec
gs
jg
cmp
lea
add
push
dec
repz
stc
push
es
repz
cld
jno
aaa
or
push
adc
xchg
sub
jmp
cmp
fstp
fwait
in
xor
rcr
mov
mov
and
das
inc
or
push
js
inc
test
cli
jge
in
push
sbb
or
or
cmp
fst
dec
stos
jno
inc
lds
push
ret
sti
stc
adc
int3
aas
sbb
sbb
ins
popf
inc
ja
ret
call
retf
(bad)
fnstsw
xor
(bad)
xor
mov
pop
jno
fcom
inc
cwde
cs
inc
and
add
jns
aad
idiv
repz
inc
mov
aaa
in
push
cmp
mov
add
add
push
test
dec
and
fsub
pop
xor
fs
mov
xchg
adc
pop
pop
(bad)
and
mov
(bad)
inc
add
sub
add
sar
jbe
pop
cmp
xchg
sbb
retf
call
xchg
push
sti
in
jle
cmc
add
pop
pop
sbb
popf
pop
pop
ss
ins
jne
shl
cmp
dec
pop
push
fs
test
mov
inc
loopne
push
fdiv
lock
ds
dec
inc
call
dec
adc
retf
inc
push
nop
test
add
pop
test
xchg
lea
sbb
add
and
cmp
and
data16
push
xchg
mov
std
and
adc
stc
shr
mov
or
adc
sub
loope
mov
ins
xor
idiv
sahf
ret
cmc
rcr
push
pop
mov
in
idiv
int3
lahf
out
inc
sbb
and
dec
outs
push
add
aad
rcr
in
mov
dec
lock
out
dec
mov
mov
fadd
in
repnz
fidivr
ficom
je
int
xor
popa
pushf
repnz
ror
addr16
mov
pusha
mov
push
das
dec
mov
jl
mov
cmp
mov
in
imul
dec
xor
mov
xor
shl
mov
jmp
xchg
cmp
inc
adc
in
in
dec
fist
push
pop
xor
das
addr16
adc
out
xchg
(bad)
out
xchg
shl
cmp
popf
push
mov
or
inc
arpl
aam
push
xchg
sub
mov
sub
test
cmp
test
lahf
push
push
mov
fstp
jle
xor
into
mov
and
push
retf
pop
(bad)
in
(bad)
mov
adc
or
pop
inc
setb
test
sub
jl
dec
inc
ins
jb
js
dec
fist
or
push
out
cmps
jg
nop
ret
retf
jp
pop
push
aad
(bad)
imul
lds
into
mov
xor
fist
sbb
(bad)
into
cmp
xchg
dec
lods
(bad)
xchg
cs
test
xor
sbb
cmps
sbb
int
mov
shr
sbb
mov
test
(bad)
inc
mov
push
ss
mov
bound
test
jnp
mov
inc
jne
inc
mov
and
addr16
aad
enter
or
sbb
or
pushf
in
ret
cmps
mov
(bad)
jmp
cmps
xchg
out
mov
fdivr
sbb
and
mov
sub
stos
stos
or
push
cmp
xchg
imul
in
mov
mov
push
jbe
dec
(bad)
shr
jbe
cmp
xchg
fist
(bad)
in
fs
shr
push
xor
mov
sbb
bnd
loopne
scas
lock
mov
xor
xor
push
cld
or
(bad)
cmp
clc
push
and
jmp
mov
push
push
test
cmc
mov
(bad)
push
es
sbb
mov
cmp
xchg
sub
xor
lahf
cmp
mov
or
test
shr
sub
arpl
(bad)
das
dec
retf
hlt
xor
arpl
imul
xor
dec
mov
cmp
sub
mov
stc
mov
and
and
ins
dec
xchg
into
push
xlat
or
loopne
push
call
mov
push
mov
mov
sub
inc
adc
retf
xchg
sbb
jae
inc
add
pushf
shl
outs
pop
dec
pop
stos
xchg
inc
sub
pop
and
push
or
cmp
xchg
in
cs
sbb
lahf
fwait
out
cwde
pop
push
clc
les
in
sbb
fisttp
and
push
mov
push
iret
enter
jb
mov
cmp
or
ss
pop
(bad)
repz
cmp
outs
mov
das
push
movntps
or
in
(bad)
movs
std
fst
and
add
push
lahf
or
add
adc
mov
ins
addr16
xchg
or
cmp
daa
movs
mov
or
imul
pop
loope
or
in
aaa
push
jmp
mov
fs
bound
ins
jmp
push
cmp
push
pusha
jno
out
psubusb
fnstcw
push
imul
arpl
or
dec
adc
loope
cmps
cmps
sbb
sti
ficom
add
(bad)
sub
mov
loop
jmp
push
enter
dec
sub
mov
lea
mov
gs
(bad)
sbb
adc
pop
js
cmp
and
mov
leave
xor
inc
(bad)
aad
dec
cmp
pop
dec
mov
(bad)
inc
cwde
sub
mov
stos
fst
sbb
sbb
scas
lea
and
test
fs
cmps
mov
test
cmps
pop
imul
stos
pushf
dec
(bad)
inc
test
aas
inc
fnstenv
outs
jb
cdq
and
fld
fdivr
neg
xchg
push
mov
mov
pop
pop
imul
pop
mov
into
repnz
outs
mov
test
icebp
in
std
imul
jns
pusha
pop
and
nop
cwde
repz
sub
les
imul
add
sbb
push
xchg
sbb
gs
adc
xchg
xchg
enter
test
xor
and
fdivr
jbe
pop
ss
in
ss
(bad)
and
jge
xor
xchg
outs
(bad)
mov
push
lds
cmps
sbb
int3
aaa
mov
sub
out
aam
loopne
fisttp
xor
cmp
dec
or
dec
cdq
hlt
icebp
jne
push
mov
leave
sbb
in
sbb
push
fisubr
jge
movs
movs
or
cmc
mov
mov
adc
mov
push
test
iret
mov
sub
dec
push
fiadd
push
mov
bound
xchg
and
xchg
xor
test
test
cwde
aam
daa
std
ins
push
ja
fstp
and
aad
mov
sbb
in
mov
(bad)
or
push
mov
sbb
jg
clc
and
loopne
inc
sub
add
xlat
push
or
sar
cmp
(bad)
cmp
push
push
and
and
jmp
loopne
sub
sub
lea
dec
cld
fwait
call
inc
rcl
out
adc
jge
jae
jb
leave
enter
xchg
call
imul
fmul
lods
xor
test
std
aas
daa
mov
lea
xchg
mov
out
mov
nop
mov
(bad)
push
mov
clc
inc
push
xchg
dec
mov
mov
ret
sub
mov
and
dec
sbb
bound
test
add
pushf
sbb
mov
jne
push
pusha
xchg
scas
sbb
jno
jbe
sti
mov
xchg
movs
retf
sbb
in
iret
jo
or
mov
test
sbb
xchg
les
dec
sub
das
add
and
mov
inc
mov
dec
dec
and
adc
inc
cmps
cmp
cmp
das
call
mul
sahf
mov
mov
es
ror
lods
adc
out
in
movs
std
and
push
fstp
cmp
jne
popa
fidiv
xor
add
mov
cmp
inc
ss
xchg
adc
fwait
xchg
sub
mov
cld
aad
mov
push
int3
xor
xor
out
jg
sti
jmp
fcmovne
int
cdq
push
inc
sahf
pop
test
rol
pop
clc
hlt
(bad)
ds
sti
sbb
or
mov
inc
(bad)
cmps
leave
call
test
cmps
mov
pop
stos
jbe
loope
lods
mov
es
add
fmul
pop
in
in
retf
in
daa
adc
ja
ins
movs
or
cs
sbb
and
xchg
ss
ficomp
jns
push
imul
add
jmp
or
(bad)
hlt
adc
add
push
sub
aaa
pop
pop
bound
dec
(bad)
inc
push
fstp
add
cmp
fcomp
enter
fdivr
mov
(bad)
pop
jecxz
xchg
popf
stos
mov
sbb
outs
jecxz
sbb
lldt
sbb
sahf
jmp
pop
int
jns
mov
mov
adc
sbb
add
cmp
xlat
retf
fimul
in
pushf
cdq
pop
(bad)
lock
inc
push
mov
clc
test
pop
ret
mov
mov
inc
xchg
mov
ja
sbb
ja
mov
loope
(bad)
add
mov
rcl
ins
stc
mov
aas
dec
push
mov
inc
sbb
mov
push
imul
jmp
repz
cld
or
xchg
ds
arpl
jmp
ins
or
ret
xchg
aad
push
retf
mov
xchg
sti
jp
icebp
mov
sub
dec
mov
add
adc
dec
lds
cmp
daa
lds
mov
lods
push
(bad)
ss
hlt
mov
mov
mov
loopne
cmp
test
cs
sbb
je
jbe
mov
call
retf
push
pop
mov
call
inc
push
cmp
mov
shr
mov
xchg
das
out
and
clc
lea
push
inc
pop
enter
out
and
and
dec
ds
fidiv
test
xor
and
(bad)
rep
cdq
adc
jp
ficom
std
fisub
bound
xor
outs
mov
data16
cmp
inc
push
adc
mov
xor
mov
jno
or
sti
fimul
sbb
jns
test
mov
mov
fscale
fsub
or
retf
xor
rcl
dec
mov
lds
mov
ins
sahf
fld
sar
leave
mov
mov
aad
cmps
jge
fcmovnb
(bad)
mov
jmp
arpl
inc
push
(bad)
mov
lock
scas
sub
(bad)
xlat
bnd
xchg
or
(bad)
cmp
push
add
xchg
cmps
inc
int
sub
outs
in
call
cmps
mov
xor
outs
out
cld
push
xchg
inc
imul
stos
aaa
xchg
jb
cmp
pop
add
and
rcr
or
xor
leave
jmp
retf
add
add
push
dec
hlt
mov
test
xchg
push
icebp
out
das
clc
in
inc
movs
out
pushw
std
xchg
push
aas
mov
push
pop
(bad)
push
mov
inc
inc
enter
jae
push
mov
shl
xchg
loop
xchg
int3
mov
inc
jmp
mov
xor
(bad)
ss
test
icebp
loopne
pop
fild
(bad)
xor
je
stos
pop
push
add
inc
outs
pop
and
stc
xchg
push
mov
int3
and
inc
pop
jo
mov
shr
push
mov
scas
or
imul
sub
adc
push
jg
dec
mov
add
test
mov
outs
pop
jne
xor
ins
sbb
and
add
retf
cmp
push
push
pop
and
xchg
shl
pop
cmp
mov
(bad)
div
aaa
es
fisttp
cmc
sub
jmp
test
mov
fadd
ins
push
clc
add
lds
aaa
repnz
ja
fs
xor
sub
sub
nop
xor
jl
cdq
cmp
xchg
sbb
sar
jb
sbb
and
push
aam
outs
mov
daa
fwait
dec
movs
sbb
rcr
aaa
idiv
shl
or
sbb
cmp
mov
rcl
jne
jne
cmps
repz
test
adc
lahf
in
adc
inc
sbb
ins
mov
int3
add
hlt
int
adc
xchg
fs
rcr
out
in
jmp
and
cdq
xchg
adc
std
inc
xchg
(bad)
retf
push
jg
out
fisub
jl
pop
cli
xchg
add
(bad)
iret
out
xor
or
lds
xor
dec
ror
mov
cmp
retf
shl
retf
lods
movs
test
daa
clc
es
mov
scas
lahf
fwait
mov
jno
push
icebp
and
cs
fwait
retf
aad
sbb
cmc
push
jle
add
inc
in
mov
loop
sub
cwde
aam
lahf
icebp
test
in
mov
or
dec
bound
xchg
in
sbb
mov
jb
mov
and
inc
sbb
cmps
xor
int3
psrad
lods
ins
iret
push
ret
clc
jge
inc
push
jns
inc
ffreep
dec
add
je
ins
in
int
repz
push
cwde
jle
dec
lods
mov
jecxz
scas
dec
ss
xchg
(bad)
mov
dec
scas
lahf
fnstcw
pop
icebp
movs
adc
arpl
mov
xor
add
cmc
std
into
cmps
cmp
jp
aaa
mov
pop
shr
fimul
xchg
in
mov
mov
add
dec
clc
ss
test
jne
pop
sti
daa
xor
dec
cmp
in
add
stc
pop
mov
pop
aas
out
ins
jmp
jne
stos
loope
push
pop
cmc
mov
sub
adc
imul
or
outs
popf
ss
arpl
sub
lds
mov
mov
sub
fiadd
mov
outs
or
scas
in
repz
adc
fsubr
data16
jg
pop
ins
inc
mov
jmp
(bad)
aas
mov
out
add
xchg
sub
fs
stos
mov
mov
dec
retf
repz
bound
push
adc
pop
inc
xor
or
fmul
pop
jmp
dec
push
cmc
int
sahf
call
mov
inc
ins
fldcw
aas
or
adc
out
test
scas
mov
push
inc
cmp
test
pusha
pop
cmp
sbb
imul
(bad)
sar
push
fdivr
or
xor
dec
cmc
fld
cmp
xchg
mov
data16
call
test
fwait
cmp
xor
cmp
inc
xchg
or
outs
mov
push
leave
inc
push
xchg
or
idiv
jno
imul
mov
sub
push
leave
adc
outs
leave
ret
(bad)
jmp
sbb
scas
push
loopne
call
mov
scas
ds
push
adc
movs
out
and
inc
shl
ror
add
push
js
adc
dec
shl
mov
arpl
xchg
jecxz
popa
pop
xlat
loop
and
push
lods
stos
das
mov
ret
dec
(bad)
jb
lods
push
push
sub
or
mov
jecxz
sub
adc
push
cmp
in
iret
repnz
ret
scas
add
xor
adc
fnstenv
dec
test
push
dec
mov
sahf
lods
sub
jbe
loopne
into
lahf
add
inc
and
popa
stos
mov
ret
pop
outs
push
das
mov
inc
sbb
lods
push
into
mov
jg
jne
mov
push
adc
in
mov
ins
or
push
push
xchg
cmp
outs
bnd
pop
repz
or
xchg
arpl
push
dec
pop
in
shl
mov
sub
daa
mov
mov
push
sbb
xchg
in
retf
ins
mov
push
into
mov
lds
inc
dec
mov
dec
sub
in
xchg
add
repnz
sbb
stos
mov
pop
add
jns
add
add
jns
or
jmp
inc
inc
cld
movs
adc
push
cmps
out
ins
dec
ja
cmp
add
xlat
push
cwde
pop
or
leave
push
repz
inc
arpl
dec
movs
jnp
mov
mov
sub
aad
jo
jo
cmp
icebp
xor
pop
inc
retf
dec
push
jo
dec
cli
mov
int
push
fisttp
(bad)
sar
ret
jg
sbb
mov
cli
add
inc
mul
jmp
or
scas
popa
(bad)
pop
pop
fcom
jae
cmp
push
jg
movs
ss
bound
iret
xlat
cmp
out
cmps
and
xor
scas
mov
fs
fidivr
je
inc
or
cdq
ins
lahf
sbb
mov
add
ds
cmp
imul
mov
push
or
in
in
xchg
imul
enter
int3
stc
shr
cs
xor
mov
test
cmps
lds
push
jnp
xchg
xchg
sub
shr
(bad)
fucomp
pop
add
pop
idiv
mov
es
dec
inc
mov
(bad)
adc
mov
rcl
push
mov
loopne
in
push
sti
loop
fst
adc
test
jle
scas
cmp
test
or
les
rcr
or
cmp
bound
ds
call
and
sti
pop
or
lods
mov
push
lods
scas
or
push
push
push
in
jmp
std
outs
xor
fnstcw
push
aas
push
or
sub
lods
cmp
and
movs
(bad)
in
icebp
cs
cmp
xchg
fmul
(bad)
shl
jbe
imul
pop
cmp
dec
and
mov
cld
pop
and
mov
add
dec
dec
fmulp
lods
sub
(bad)
syscall
mov
into
sbb
push
mov
(bad)
clc
push
inc
lock
jp
enter
inc
pusha
gs
dec
pop
adc
mov
pop
pop
sar
stc
aaa
or
mov
dec
jae
xor
push
test
sbb
dec
jmp
retf
mov
mov
dec
(bad)
push
or
mov
dec
xor
stc
test
std
sar
and
cmps
idiv
fdiv
stc
push
push
xor
sahf
js
jg
addr16
int3
push
and
pop
(bad)
mov
push
jge
ror
pop
mov
xlat
push
mov
push
pushf
cmp
xchg
pop
adc
sub
packssdw
fstp
and
das
(bad)
std
xchg
or
les
mov
pop
sbb
jb
mov
sub
iret
mov
fldenv
clc
pop
loope
enter
dec
inc
xor
sbb
sub
dec
repz
jne
xor
mov
jmp
aas
fisttp
clc
inc
dec
and
adc
call
inc
jns
mov
(bad)
loopne
inc
and
add
aaa
inc
js
cmp
jl
mov
lea
sbb
dec
cmp
jae
push
out
scas
xchg
xchg
sub
mov
xor
dec
arpl
push
mov
or
test
loop
mov
iret
lods
ja
pop
pop
and
shl
hlt
jns
and
xchg
xchg
daa
cs
ins
jbe
cs
ds
add
pusha
test
push
bound
xor
or
mov
out
retf
sbb
dec
pop
xor
jp
push
pusha
or
cwde
add
ds
in
fnstcw
shr
inc
mov
lahf
lods
les
xor
ss
out
cdq
pop
dec
popa
push
arpl
mov
xchg
retf
pushf
or
out
push
mov
jmp
inc
cdq
push
fdiv
xchg
dec
into
not
retf
call
pop
dec
pushf
pushf
mov
dec
fwait
dec
ss
mov
in
jns
fmul
cmp
mov
div
and
xchg
sti
jbe
ss
ds
inc
mov
rcl
(bad)
std
fidiv
iret
std
mov
leave
lods
je
dec
dec
movntq
out
cmp
push
iret
mov
sbb
sub
xor
lea
jne
out
mov
dec
inc
or
push
ror
ja
cmc
les
retf
sti
sbb
adc
or
fistp
call
mov
icebp
xchg
test
xchg
cmp
adc
mov
retf
cmp
cwde
ret
test
cdq
push
jbe
repnz
jns
rcpps
pop
call
mov
add
fwait
sbb
mov
mov
push
mov
xor
rcl
pop
(bad)
sbb
xor
fidivr
mov
jnp
cwde
sub
out
push
inc
sahf
ror
xchg
imul
xchg
test
popf
sub
push
cs
sbb
fisubr
xor
les
push
lahf
pop
sub
arpl
xchg
addr16
retf
sub
jp
(bad)
in
popf
dec
in
into
xchg
mov
cli
push
aaa
cmp
sub
and
outs
xor
test
xor
mov
data16
icebp
aad
pop
pop
dec
jg
sbb
xor
dec
cmp
daa
clc
sbb
mov
cwde
mov
xor
cmp
jp
sbb
call
adc
pop
ret
bound
ja
sbb
sub
arpl
cmp
jns
xor
xor
loopne
xchg
mov
cmp
test
mov
mov
inc
int
inc
pop
dec
and
ins
sub
cmp
dec
call
mov
test
dec
test
lds
repnz
jo
mov
pop
mov
movs
xchg
mov
addr16
push
push
cmp
sbb
xor
(bad)
sbb
mov
repz
and
jbe
mov
in
in
mov
push
fidiv
inc
push
int3
outs
popf
(bad)
mov
inc
cmp
sar
push
lea
shr
mov
cmp
(bad)
xchg
inc
sbb
pop
fldenv
hlt
push
cmp
mov
out
aam
mov
mov
or
cmp
push
cmp
jmp
add
outs
rcr
mov
mov
mov
push
not
xchg
sbb
sbb
lds
jle
sar
cmp
mov
scas
mov
inc
daa
jecxz
sbb
fmul
or
jle
aad
jo
adc
scas
aad
int3
mov
popf
lock
push
sub
adc
add
cmc
xor
xor
push
pop
push
clc
fcom
fmul
mov
and
iret
jns
xchg
jp
hlt
push
shr
das
cmp
nop
cmp
test
push
(bad)
inc
stos
xor
jbe
pop
cmp
shr
loop
add
xchg
and
xor
jne
or
xchg
add
xchg
mov
jno
mov
adc
jae
into
sahf
jmp
xchg
aam
test
xchg
cld
cld
lds
add
and
pop
push
loopne
push
inc
add
sbb
push
fwait
add
je
add
push
das
sti
sbb
add
or
clc
mov
jle
cmps
dec
cld
in
sbb
pop
bnd
adc
sub
lea
push
cld
aam
cmp
pop
adc
adc
jne
pusha
bound
or
sub
xor
mov
xchg
push
xchg
fstp
gs
shl
imul
push
sub
jno
pop
xchg
and
mov
xor
xlat
(bad)
int3
dec
xor
and
fild
adc
out
lea
mov
mov
ds
or
push
div
jecxz
clc
xchg
jno
xchg
push
dec
or
(bad)
sbb
stos
rol
and
mov
rcr
or
mov
xor
or
fild
dec
repnz
mov
sbb
call
ds
mov
mov
adc
pop
inc
and
test
mov
scas
leave
jno
mov
pop
fidivr
xchg
cmp
sub
scas
rcl
and
xor
sbb
push
xchg
std
jno
(bad)
mov
fild
fs
loope
push
loope
scas
cli
push
les
les
dec
mov
dec
mov
ret
mov
es
or
xor
pop
and
sbb
fnsave
in
retf
sub
lods
xchg
icebp
pop
dec
scas
push
pop
xchg
or
add
push
test
shl
xor
sbb
ror
jmp
aaa
xchg
sbb
xchg
in
es
in
mov
test
repz
jge
fidiv
xor
loop
push
lods
jmp
xchg
xlat
add
fdivr
xor
jp
(bad)
add
pop
xor
dec
or
jl
add
daa
fcom
push
ss
xchg
aas
fdivr
ds
pop
(bad)
push
hlt
js
xor
sbb
lods
mov
mov
nop
rcl
lahf
loop
dec
test
jle
stc
mov
mov
xchg
sbb
icebp
nop
stos
bound
jp
jnp
neg
enter
push
in
fadd
push
psubusb
jmp
push
out
xor
cmp
jg
push
test
lahf
pop
jle
cmp
pop
shr
iret
pop
sahf
jg
mov
mov
dec
push
addr16
cs
push
xchg
(bad)
jns
dec
(bad)
sti
(bad)
lea
add
sub
ins
pop
sub
bound
int3
pop
cmp
fsubp
mov
je
hlt
sub
sub
out
xor
push
ins
push
ror
cmps
ret
jno
popa
sub
out
outs
cmp
rol
leave
xchg
outs
jns
fst
or
xchg
cmp
cmp
add
or
jmp
adc
jbe
dec
pop
and
adc
cmc
mov
mov
or
push
lods
repz
stc
and
std
hlt
jecxz
ror
xchg
outs
push
pop
jge
xchg
add
mov
inc
push
test
jb
cmp
jmp
xchg
lock
in
sub
cmp
mov
jmp
inc
fistp
inc
cmp
div
icebp
cwde
repnz
in
mov
pushf
jo
and
aaa
push
(bad)
push
mov
xor
lahf
das
pushf
push
sub
mov
pop
ror
xchg
cmp
dec
call
mov
mov
aam
push
mov
div
rcl
jns
inc
cmps
dec
inc
mov
push
or
lds
and
icebp
inc
and
push
popf
jmp
cmps
movs
outs
out
enter
xor
mov
pop
cwde
(bad)
das
cmp
outs
dec
jmp
clc
(bad)
icebp
fcomi
mov
cmp
leave
adc
push
fimul
lea
inc
ins
push
test
test
sbb
xchg
jmp
cdq
cmp
movs
aas
and
pop
std
out
loopne
jb
mov
arpl
imul
jmp
movs
jae
aaa
sbb
int
cwde
stos
sahf
and
pushf
pop
ins
jmp
adc
sahf
outs
xor
rcr
cli
and
jmp
or
dec
mov
in
pop
rcr
sub
xchg
xchg
mov
pop
fidivr
les
mov
pop
inc
push
out
(bad)
in
sub
pushf
sub
pushf
pop
jbe
sar
fs
cmp
dec
xlat
mov
inc
jp
ret
(bad)
aad
dec
and
push
out
mov
cmp
fld
jge
test
inc
test
loopne
daa
(bad)
scas
cli
aaa
mov
ja
mov
and
push
(bad)
fsubr
ins
lea
or
xchg
xchg
cmps
and
in
retf
in
sbb
cld
je
gs
and
cs
or
and
mov
popf
test
mov
mov
dec
pop
mov
into
add
stc
and
or
(bad)
jno
dec
pop
mov
pop
inc
jg
or
arpl
mov
cld
inc
je
js
mov
enter
inc
loop
mov
dec
cmp
sub
ds
and
xor
pop
dec
cld
test
ja
adc
cmp
pushf
shl
test
pop
lods
jnp
xor
mov
cmp
jns
inc
in
les
pop
inc
dec
iret
rsqrtps
push
sub
dec
xor
lods
stos
jmp
sub
sbb
popa
fst
jmp
adc
jns
icebp
xlat
gs
ficom
add
cmp
hlt
and
fimul
cmp
push
into
push
sub
jp
jmp
cmps
cmp
pop
test
into
inc
out
adc
movs
mov
cmp
out
lea
jmp
jns
pop
sub
jne
pop
cmps
mov
jb
sub
sub
inc
mov
jl
fcomp
jnp
lahf
push
fsubr
es
ror
ror
cwde
cmp
push
ret
stos
xchg
push
fdivr
dec
sub
jne
movs
jmp
cmp
cmp
pop
mov
fnstenv
add
inc
(bad)
dec
push
and
xchg
sar
leave
sub
sahf
fnstsw
dec
movs
imul
jb
mov
mov
ss
dec
into
and
xor
mov
(bad)
in
daa
dec
cmp
xchg
sahf
das
loopne
les
in
popf
sub
add
fisttp
xchg
xchg
mov
mov
pop
mov
pop
mov
mov
popa
mov
addr16
mov
pop
out
xchg
cmps
repz
xor
fadd
jp
jl
enter
ds
cmp
add
in
and
int
sbb
sbb
pop
les
sbb
add
xchg
sbb
outs
iret
mov
adc
or
jge
cwde
cmp
fstp
jmp
sub
in
mov
fs
dec
ror
(bad)
push
dec
test
mov
mov
loope
in
mov
jl
sbb
mov
lds
scas
outs
mov
dec
pop
(bad)
enter
push
mov
cmps
retf
scas
jg
push
xor
mov
xchg
adc
mov
arpl
push
sbb
inc
mov
or
ins
stos
or
imul
xor
lock
inc
sub
aad
cld
and
pop
leave
inc
pop
push
dec
add
ds
dec
dec
inc
xchg
(bad)
(bad)
ja
add
mov
icebp
mov
dec
es
mov
push
rol
pushf
call
ins
xor
adc
mov
shr
(bad)
push
fnstsw
(bad)
xor
inc
and
arpl
and
ins
pop
arpl
test
xchg
adc
mov
ins
aad
aad
std
mov
sar
pusha
pusha
and
mov
mov
jbe
add
sbb
xor
aam
push
es
sar
dec
mov
ret
mov
jg
xchg
stos
and
sub
scas
pop
xchg
lods
push
sti
mov
pop
mov
mov
cli
and
inc
dec
aas
sbb
mov
shl
lea
add
mov
add
inc
idiv
loope
rcr
cdq
mov
(bad)
stc
lahf
mov
mov
mov
rcr
rcr
(bad)
mov
inc
jae
inc
sbb
(bad)
aaa
push
mov
inc
test
xor
ss
in
cld
scas
and
xchg
pop
hlt
xchg
push
push
in
nop
mov
xor
outs
fcmovu
cmp
push
sub
xchg
mov
lock
call
movs
leave
sbb
add
mov
or
adc
sub
cmp
xor
xchg
enter
or
mov
rol
xchg
mov
or
in
inc
mov
in
and
int3
mov
mov
pusha
xchg
iret
jecxz
mov
out
and
call
cmps
inc
shl
loop
test
cs
(bad)
jg
es
inc
fwait
cli
inc
je
movs
mov
aad
sar
pop
mov
ss
icebp
inc
fisubr
outs
jno
scas
in
mov
dec
jmp
mov
aas
int
iret
cli
xlat
in
push
data16
xor
daa
mov
fwait
mov
add
lods
mov
das
dec
pop
adc
(bad)
pusha
iret
sar
add
pusha
xchg
or
pusha
jecxz
inc
lods
mov
jp
jge
pop
(bad)
mov
mov
pop
lahf
xor
pop
or
jp
cdq
and
pop
xor
lds
adc
xor
retf
sub
adc
fisub
cwde
ret
ds
sub
push
cld
adc
xchg
sub
jae
fsub
sbb
mov
or
jmp
xchg
movs
out
pop
push
aam
add
outs
pop
js
loop
xchg
mov
and
sub
dec
lea
in
cmc
dec
push
cmp
out
movs
push
(bad)
lea
imul
adc
(bad)
faddp
inc
jge
add
pop
xchg
pop
jmp
shl
call
add
adc
cmp
test
out
jle
jb
rcl
dec
in
jb
xchg
push
stc
mov
(bad)
nop
retf
je
add
out
push
dec
mov
aad
mov
sbb
push
shl
movs
dec
pop
dec
mov
mov
icebp
push
cmps
retf
jns
mov
std
jns
mov
jecxz
lods
jno
push
mov
out
stos
push
iret
and
inc
inc
dec
pop
ss
cs
aad
dec
adc
cmp
jae
std
fwait
xchg
sub
movs
push
sbb
cmps
push
lods
fisttp
out
ins
mov
xor
pop
aas
jp
(bad)
cmp
push
xchg
xor
mov
pop
jo
mov
fidivr
(bad)
sub
and
cs
mov
or
push
sbb
adc
mov
xchg
test
int3
not
cmp
aad
add
and
repz
retf
mov
imul
ss
sub
jb
xor
daa
xchg
pop
jo
inc
push
cmps
neg
rcr
inc
int3
mov
dec
jmp
fs
xchg
push
push
adc
lock
shl
(bad)
nop
dec
shl
sbb
cmp
call
lds
push
mov
ret
adc
nop
cdq
inc
sub
loope
fs
cli
sub
cmp
or
xor
ss
mov
mov
stos
push
inc
ss
ds
add
cdq
adc
fsubr
cmp
out
ret
push
imul
xchg
int
add
pop
ins
push
lods
mov
cmp
xchg
cmp
stos
mov
add
mov
inc
cmp
enter
pop
sbb
das
int
adc
mov
jb
pusha
sub
jmp
(bad)
or
stos
pop
lods
rol
call
xchg
sub
movs
xor
xchg
jo
retf
(bad)
mov
neg
inc
push
push
(bad)
cwde
out
test
mov
mov
jle
shl
repz
mov
scas
lods
push
add
pop
outs
scas
cs
and
(bad)
or
inc
push
push
scas
out
repz
mov
idiv
popf
mov
adc
in
aaa
pop
cld
xchg
cwde
cmc
jmp
jmp
imul
lock
pop
pop
mov
(bad)
mov
xchg
xchg
nop
repnz
ins
dec
mov
sbb
test
mov
jo
pop
pop
cmp
fs
jmp
or
fs
mov
cli
push
fild
pop
out
and
dec
stc
rcr
imul
pop
imul
inc
iret
pop
pop
xor
and
xor
inc
xchg
jne
bound
cwde
call
and
jb
pop
cmps
push
sub
hlt
mov
int3
xchg
mov
push
add
jbe
fsubp
js
out
fdivr
adc
test
mov
mov
(bad)
in
out
mov
xlat
pop
rcr
mov
lock
mov
inc
pop
jmp
add
sar
cmps
push
mov
ror
push
repnz
cmp
mov
mov
leave
ror
push
popa
pop
mov
lea
mov
cmp
mov
xchg
cmp
fidivr
mov
hlt
ror
ja
ins
add
push
ss
sbb
(bad)
stc
push
loope
shr
movs
pop
dec
jl
sbb
movs
dec
aad
mov
addr16
lds
sub
or
jmp
shl
mov
in
fsubr
pop
push
sbb
add
outs
jnp
push
push
push
and
nop
jge
mov
dec
jmp
pop
and
fld
and
mov
rol
mov
(bad)
addr16
sbb
dec
xchg
adc
imul
cmps
mov
movs
movs
mov
cwde
fs
rcr
in
mov
sbb
jle
xlat
sbb
mov
cmp
and
push
mov
sub
cmp
ins
cmp
mov
in
stos
pop
daa
xchg
or
pop
out
and
or
ins
pop
movs
mov
dec
inc
jecxz
pushf
push
(bad)
movs
xchg
pop
fld
cli
and
int
fcomi
test
and
arpl
(bad)
call
shr
add
call
inc
xlat
shr
std
ja
mov
adc
out
xchg
dec
dec
xor
(bad)
xchg
test
retf
dec
xchg
lock
push
adc
pop
adc
sbb
inc
xchg
xchg
imul
dec
mov
sbb
mov
sub
or
add
jmp
mov
push
pop
mov
and
push
arpl
data16
dec
cmp
in
cmps
push
inc
adc
lock
sub
sahf
loopne
push
std
adc
pop
or
push
jo
cmp
retf
cmp
mov
call
and
je
and
inc
shl
scas
leave
movs
or
xchg
cmc
add
mov
repz
mov
aam
push
icebp
add
jle
clc
sbb
xor
cmp
sub
shl
test
ja
daa
fcomp
cmp
sbb
jae
fisubr
xchg
mov
xchg
push
push
mov
xor
mov
mov
shl
mov
rcl
and
sub
idiv
or
ins
jne
pop
popa
jle
push
push
cmps
inc
daa
jno
ins
inc
cmp
ror
and
and
mov
shl
test
imul
push
inc
outs
cdq
mov
and
int3
outs
or
in
pusha
mov
or
lods
rol
lock
pop
pop
iret
dec
xor
enter
xchg
(bad)
int3
js
mov
imul
cmp
jmp
sub
jne
arpl
xor
jl
ins
test
je
(bad)
jnp
jp
add
movs
or
std
jnp
and
adc
push
pop
mov
in
or
pop
push
test
sahf
out
jp
sbb
or
inc
inc
je
gs
loope
push
rep
xchg
or
imul
inc
sti
out
push
adc
add
push
outs
inc
lock
dec
pushf
push
dec
cmp
push
fisttp
paddusw
lds
push
mov
out
jg
pop
push
push
dec
loopne
jl
jno
mov
push
lea
and
or
or
ds
mov
sti
out
xchg
pop
sbb
and
jns
or
cmp
or
push
fst
inc
fdiv
popf
dec
add
sbb
mov
ret
jle
movs
cwde
add
ret
imul
shl
jae
sbb
xchg
pop
xlat
adc
push
or
lahf
cmc
in
mov
lahf
sar
arpl
stos
sbb
daa
int
cmp
add
stos
inc
push
dec
mov
mov
imul
dec
int3
dec
mov
in
daa
rcr
pusha
mov
rol
daa
mov
push
lahf
cmps
jb
pop
les
xchg
cmp
mov
(bad)
mov
loopne
push
jnp
adc
add
(bad)
cmps
std
mov
xchg
cwde
outs
stos
ins
xchg
push
jmp
nop
mov
in
sbb
dec
aam
mov
add
mov
jns
(bad)
or
outs
xor
push
sbb
out
das
add
(bad)
xchg
shl
stos
jg
pop
iret
ror
pop
jmp
std
das
(bad)
imul
mov
test
sbb
aad
jmp
shl
fld
jmp
popa
sahf
push
sub
call
cmp
(bad)
call
ror
pusha
push
fdivr
popa
hlt
xor
mov
xor
add
sub
xchg
jmp
lock
sbb
pushf
mov
inc
sahf
mov
mov
outs
sub
mov
jns
or
or
fcomp
clc
test
outs
mov
nop
retf
addr16
call
mul
hlt
inc
inc
cmp
loop
mov
fadd
mov
adc
xchg
mov
addr16
mov
ins
into
loopne
in
ins
addr16
and
dec
ins
test
(bad)
shl
jne
into
jne
pop
lock
lahf
lds
imul
rcr
movs
pop
and
dec
sub
test
icebp
or
(bad)
pop
bnd
not
into
paddw
in
out
and
mov
xchg
push
cmps
xchg
xchg
dec
(bad)
stos
adc
addr16
sti
mov
xchg
add
cmps
push
add
push
shr
rol
or
or
dec
fisubr
dec
mov
(bad)
and
jo
scas
repnz
daa
adc
push
leave
jl
test
movs
int
push
sbb
mov
int
shl
jae
(bad)
pop
call
lods
dec
test
and
(bad)
data16
(bad)
movs
jnp
mov
pop
push
fbld
xor
mov
mov
inc
xor
idiv
cmp
fimul
mov
jmp
lds
jle
push
test
push
bound
call
or
sub
adc
scas
pop
or
fmul
cmc
(bad)
rcr
sbb
retf
les
fs
jo
(bad)
pop
rcl
jns
out
clc
or
ds
mov
mov
jbe
cmp
cmp
mov
mov
dec
(bad)
popf
lahf
mov
movs
outs
ss
sub
aaa
add
mov
out
adc
aad
dec
outs
or
xchg
out
pop
mov
fist
lock
daa
pop
lods
icebp
mov
rcr
hlt
loope
inc
call
xor
(bad)
int
fidiv
push
push
and
call
pop
mov
(bad)
aam
pop
mov
adc
push
xor
xchg
cmp
mov
pop
push
push
lods
mov
push
call
call
loope
add
addr16
inc
inc
bound
cmps
leave
sub
jnp
inc
adc
or
inc
xchg
xor
int3
xor
mov
test
xor
mov
jecxz
shl
sbb
sub
icebp
ins
pop
add
leave
or
inc
adc
clc
js
pop
jo
lods
sub
push
adc
mov
pop
push
arpl
cmp
fdiv
pop
inc
ds
pop
pop
add
fcomip
fild
fxch
xchg
dec
inc
jl
mov
(bad)
mov
jle
(bad)
cmp
ret
and
xor
clc
mov
ds
and
pop
ret
jle
cli
push
fwait
ds
xchg
lds
add
mov
jo
and
dec
call
mov
mov
mov
jno
out
sbb
xchg
pop
mov
(bad)
inc
jecxz
dec
stos
cmp
jle
or
and
push
pusha
mov
sbb
sub
cld
mov
pop
int3
in
xor
bound
jmp
xchg
jge
add
jno
mov
clc
lock
mov
push
shl
mov
xchg
rcl
movs
enter
adc
ret
push
cs
sbb
xor
or
or
test
xlat
imul
cdq
mov
mov
inc
dec
xchg
or
xchg
(bad)
and
lods
dec
ins
sub
outs
idiv
stc
stos
imul
test
icebp
sub
sbb
neg
sti
cmc
push
outs
xlat
or
jae
pusha
fwait
mov
or
mov
cs
repnz
adc
call
(bad)
xchg
gs
cwde
fwait
not
or
or
js
and
(bad)
in
cmp
out
add
out
popf
loop
ss
jno
(bad)
jne
xchg
lahf
jae
lea
arpl
daa
mov
add
adc
in
push
jl
pop
mov
rol
adc
mov
stos
and
or
inc
cmp
fadd
ror
dec
and
add
js
(bad)
pop
aas
cmp
push
pop
cdq
or
cmps
push
enter
retf
add
mov
sbb
loop
outs
stc
sahf
movs
shr
popa
cmp
inc
inc
repnz
les
mov
mov
xchg
or
add
inc
adc
mov
ins
push
sub
iret
fdivr
xor
mov
or
cmp
enter
push
xchg
pop
and
xlat
jnp
xor
div
js
movs
sbb
nop
inc
mov
pop
sbb
call
(bad)
jae
test
bound
mov
and
cmovbe
int3
mov
jmp
push
jmp
out
jnp
push
out
mov
gs
cmp
lock
mov
sar
shr
cmp
daa
push
popf
xchg
test
cmp
sahf
hlt
lods
lods
push
sub
add
sbb
inc
or
movs
scas
sub
(bad)
call
mov
or
push
and
pop
sub
mov
sbb
jecxz
pushf
out
dec
adc
(bad)
mov
push
(bad)
test
fcmove
arpl
or
sbb
mov
pop
cld
dec
push
jne
mov
daa
mov
cld
mov
and
lods
lock
pop
outs
mov
movs
cmp
in
push
scas
sbb
mov
stos
aam
inc
dec
(bad)
stc
mov
jmp
pop
loop
xchg
add
inc
pop
cmp
xor
call
cmp
dec
mov
mov
das
stc
loope
lods
mov
stos
jecxz
xchg
stos
mov
cmps
jl
jmp
dec
ja
cmp
test
xor
or
cli
lods
loop
or
test
inc
stc
xchg
inc
in
push
loopne
loopne
dec
xor
pop
xchg
mov
or
sub
lea
mov
in
vphaddbq
xlat
retf
pop
test
loope
sbb
push
push
xor
xchg
pop
push
enter
xchg
sbb
pusha
aaa
gs
push
bound
(bad)
fs
shr
mov
cmps
(bad)
pop
pushf
sub
and
scas
mov
fstp
neg
or
les
test
(bad)
pop
sub
dec
aas
adc
rol
pop
adc
cli
gs
in
or
xor
pop
mov
gs
pop
arpl
mov
adc
ja
sbb
and
jmp
adc
push
aad
lea
cmp
frstor
ins
xor
(bad)
movs
or
cmc
sbb
ror
mov
push
add
cdq
mov
cmp
test
push
sar
push
sub
cmc
stos
fstp
popf
cmp
pop
cwde
repnz
lods
or
sub
in
mov
scas
int
daa
ret
xlat
out
and
and
fidivr
mov
clc
xor
mov
push
es
push
xor
xchg
pop
pop
add
or
test
adc
sub
imul
call
mov
cmp
out
pop
jne
jmp
pop
ins
adc
jnp
lock
js
sub
int3
mov
cmp
dec
lea
shl
jmp
mov
or
rcr
dec
(bad)
data16
jb
test
and
mov
push
jbe
aas
arpl
icebp
call
fcmovbe
xor
sbb
ds
jmp
push
jl
add
arpl
push
sub
stos
push
adc
clc
mov
adc
cmp
xchg
pop
sbb
dec
dec
fimul
inc
pop
mov
or
clc
inc
jge
bound
pop
adc
sbb
(bad)
mov
outs
lahf
je
imul
mov
(bad)
ss
xchg
leave
push
lock
adc
iret
(bad)
push
add
shl
add
dec
lock
sub
jg
je
mov
(bad)
es
pusha
jl
into
jno
dec
inc
cmps
cmp
mov
daa
cmp
xchg
xchg
mov
mov
mov
shl
nop
mov
sub
in
cmp
jae
add
loopne
dec
mov
or
arpl
xor
pavgw
gs
sbb
(bad)
push
sub
in
sub
js
mov
push
sbb
sub
jb
fimul
and
xchg
test
aad
out
in
push
movs
jmp
aaa
(bad)
jae
fs
adc
popa
mov
popf
adc
(bad)
arpl
test
mov
pop
jns
xor
mov
and
and
push
pop
push
les
outs
or
inc
test
add
jp
imul
inc
aaa
out
add
mov
sbb
push
fld
call
xchg
jecxz
test
push
(bad)
mov
shl
test
cmps
pop
adc
hlt
cli
sbb
dec
rcr
pop
retf
out
inc
movhlps
sub
or
fwait
ds
cmp
mov
add
(bad)
cmp
push
hlt
xchg
sbb
jae
jnp
push
pop
xor
mov
or
mov
sbb
inc
sbb
fcom
ins
xor
sbb
push
xchg
pop
(bad)
movs
adc
xor
jge
adc
call
clc
test
js
stc
adc
movs
fldenv
mov
and
sbb
sbb
pop
mul
or
stc
ss
sti
test
fadd
pusha
sbb
sti
push
push
outs
xchg
icebp
fs
adc
ss
faddp
out
lock
int3
pmaxub
xchg
add
mov
mov
int3
iret
(bad)
scas
mov
loop
scas
in
in
adc
xchg
retf
into
ficomp
pop
mov
ret
sbb
mov
test
pop
mov
jg
pusha
pop
sahf
sar
aam
xchg
sub
cmc
pusha
xchg
push
fs
pop
cld
cmp
psllq
ja
neg
xlat
xchg
(bad)
cmp
cmp
sub
aam
aam
pop
inc
mov
xlat
inc
jp
mov
xor
inc
jge
int
call
(bad)
push
gs
inc
pushf
scas
cs
mov
cmp
pop
mov
int
push
test
fcmovu
add
daa
xor
or
clc
jmp
mov
jns
loop
nop
dec
outs
outs
adc
icebp
or
inc
dec
pop
pusha
ss
outs
add
cmps
dec
xor
movs
retf
mov
xor
mov
mov
test
push
dec
fsub
pop
mov
repz
imul
ror
push
clc
scas
test
loop
out
cld
push
je
idiv
jmp
mov
push
mov
add
loopne
mov
cmps
pushf
lods
mov
lods
adc
mov
fs
or
adc
sbb
jns
data16
cmp
repz
add
(bad)
mov
mul
ja
fld
inc
or
mov
cmc
call
adc
div
pop
and
gs
mov
xchg
jmp
pop
popf
sbb
or
pop
es
cmp
les
(bad)
and
psubb
dec
xchg
sbb
enter
mov
hlt
enter
jo
lods
pop
pop
add
cwde
add
xchg
xor
cld
push
inc
mov
xor
mov
push
inc
cwde
xor
sub
ror
fcomp
add
js
call
jge
push
rcl
call
repz
rcl
push
mov
mov
aad
repz
aad
gs
jecxz
(bad)
or
mov
shl
mov
jle
dec
pop
or
int3
mov
jnp
mov
mov
pop
xor
xor
xchg
inc
xor
js
mov
or
inc
jae
in
icebp
cmp
or
adc
push
sub
jo
(bad)
mov
gs
jp
jmp
jmp
add
out
(bad)
pop
pop
push
mov
push
push
sbb
xor
mov
ins
fild
mov
cwde
pop
xchg
dec
ins
fstp
sub
xor
retw
call
pusha
mov
xchg
mov
adc
mov
mov
mov
xchg
(bad)
out
jne
mov
lock
cmps
adc
lock
cwde
xor
out
mov
(bad)
cld
xchg
loopne
int3
pop
adc
stos
add
adc
add
jle
mov
js
add
mov
into
sti
mov
imul
xchg
cmp
mov
data16
and
mov
ins
fsub
and
push
push
xchg
frstor
jo
addr16
mov
add
inc
js
pop
push
(bad)
(bad)
adc
nop
(bad)
loop
dec
ja
cli
int3
cmp
mov
sti
sub
inc
xor
sar
jp
lds
les
push
inc
test
xor
fidiv
adc
push
jo
ja
sub
imul
push
dec
retf
mov
imul
or
xchg
sub
hlt
iret
jbe
sti
in
adc
dec
movs
inc
push
jecxz
fisubr
pop
sbb
test
out
ret
pop
shr
sub
loopne
add
cmp
retf
hlt
push
enter
or
inc
mov
mov
jbe
bound
add
fiadd
mov
or
test
jo
fsub
pushf
outs
addr16
jns
(bad)
sbb
mov
fwait
push
sbb
cmp
loope
xor
cmp
int
test
inc
inc
loop
ficomp
xor
pop
rcl
leave
inc
fadd
add
xor
aaa
test
xchg
push
clc
retf
aas
gs
in
xchg
fidivr
mov
mov
stos
sbb
inc
xor
in
aam
jno
in
cmp
jbe
inc
and
movs
popf
jns
cmp
stos
add
push
mov
ss
inc
clc
in
adc
sbb
push
pop
fsub
popa
xlat
sbb
jno
and
shr
mov
mov
ret
sub
imul
sub
das
sub
sub
lods
movs
mov
popf
push
mov
test
fsubp
ret
call
rol
dec
push
leave
rol
inc
mov
int
fistp
or
pop
cmp
or
mov
mov
push
inc
xor
lock
aaa
jo
out
mov
ss
shl
inc
xlat
out
movs
scas
mov
sub
jb
dec
pop
and
pop
xor
ins
mov
xor
or
(bad)
add
(bad)
or
sub
fdivrp
push
pop
sub
inc
jo
dec
outs
or
xchg
and
fild
pop
jb
add
dec
mov
rol
aad
inc
ds
add
jecxz
fsubr
mov
imul
pop
push
pop
aad
ss
sbb
les
je
jmp
add
in
ds
cdq
add
out
cmp
xor
call
jmp
mov
shr
popf
mov
push
jno
add
lds
jae
add
jns
sub
and
mov
and
lea
push
push
cli
push
jno
mov
and
iret
and
pop
js
je
push
xlat
loop
mov
gs
loopne
xchg
int
and
inc
xor
fwait
jl
in
add
fisttp
and
mov
or
in
cli
push
and
and
test
inc
mov
xor
movs
and
aad
aad
nop
xor
xor
not
lea
cs
(bad)
jmp
mov
pop
ins
jae
add
adc
pushf
scas
push
sbb
pop
inc
mov
pushf
ret
pop
iret
add
out
dec
jmp
(bad)
mov
(bad)
aam
adc
dec
ret
pushf
arpl
mov
xchg
jecxz
mov
xor
inc
inc
cmps
fcmovb
and
add
and
pop
cmps
xor
xchg
inc
fwait
data16
pop
sbb
pop
sbb
daa
inc
cli
fxch
es
add
in
fdiv
adc
push
pop
add
not
or
dec
cmps
retf
fisttp
test
sub
push
mov
jmp
inc
cs
nop
pop
push
cmp
repnz
mov
fisttp
mov
dec
popa
mov
inc
shl
das
sti
sbb
cmp
cmp
jne
fisubr
call
adc
mov
fiadd
xor
lock
and
jmp
jp
out
hlt
data16
push
aas
mov
and
sub
add
xlat
ret
mov
sbb
(bad)
not
in
aad
mov
mov
mov
inc
inc
dec
mov
je
mov
xor
sub
mov
adc
outs
jmp
add
mov
lods
sar
ja
test
int
repnz
cwde
sbb
mov
add
test
sub
dec
ins
sub
lock
jbe
int3
adc
ss
stc
sub
fbstp
xchg
mov
hlt
aas
ja
rcr
adc
nop
into
iret
int
jns
adc
pusha
scas
hlt
push
out
out
pusha
and
test
mov
pushf
jo
sbb
sahf
lahf
popa
adc
sbb
adc
lds
xor
in
push
sbb
movs
adc
outs
jmp
sbb
and
(bad)
mov
pop
aam
rcr
div
test
imul
ror
les
stos
cmp
push
je
xchg
inc
lods
sub
cmp
pop
popa
fmul
cld
(bad)
push
jmp
adc
sbb
xlat
ret
outs
push
mov
cmp
das
mov
sahf
cmp
lock
fldz
mov
aaa
ss
movs
sahf
fnstcw
mov
in
inc
mul
pop
in
sti
je
rol
clc
jno
jnp
and
adc
ror
cli
adc
test
jb
fnstenv
sbb
ins
mov
push
xchg
out
push
mov
enter
icebp
sbb
out
fcom
pop
inc
xchg
(bad)
imul
jl
repnz
pop
jmp
std
inc
push
xor
mov
out
mov
push
popf
push
jns
jo
mov
dec
xor
dec
call
or
movs
jp
icebp
arpl
in
test
xor
(bad)
xchg
mov
int
sbb
jno
and
es
(bad)
cld
(bad)
inc
(bad)
out
inc
mov
les
inc
inc
mov
lods
cmp
sub
mov
and
bsf
outs
les
mov
push
add
repnz
mov
ins
cmp
pop
push
daa
mov
cmp
int3
ss
or
sub
mov
mov
and
pop
xor
sub
fist
mov
sbb
jo
mov
aad
fistp
fnstcw
pop
mov
ret
pop
mov
cmp
mul
xor
js
lock
fsub
pop
repz
in
inc
xor
sub
stos
cmp
adc
mov
daa
mov
call
xchg
movs
adc
jns
test
cdq
loopne
dec
das
test
addr16
dec
nop
inc
add
movs
test
mov
cmp
imul
or
push
test
jl
imul
lock
cmp
clc
shr
mov
xchg
mov
clc
mov
dec
dec
repnz
inc
and
les
les
iret
in
inc
or
jmp
pop
sti
inc
fwait
mov
les
mov
imul
call
mov
pop
inc
or
repnz
push
scas
mov
sbb
call
jmp
jbe
adc
xchg
(bad)
sti
cdq
sub
dec
push
lds
cdq
cmp
jge
test
jno
arpl
mov
xor
mov
pcmpeqd
or
jge
enter
jbe
jge
popf
xor
mov
pop
imul
cmp
inc
cmp
cmp
pop
test
sub
add
cld
int
xchg
inc
fldln2
bound
daa
adc
fdivr
(bad)
movs
mov
outs
nop
js
in
inc
in
in
cmps
mov
dec
pop
data16
out
mov
xor
sahf
xor
retf
adc
int
sbb
into
xchg
in
popf
cmps
cmp
bound
or
add
imul
daa
std
jb
pop
mov
ret
lods
add
imul
jb
aaa
and
mov
fstp
push
mov
or
loope
and
push
div
jb
jmp
jl
push
xor
in
aas
xchg
leave
push
shl
and
stos
jno
and
stos
out
pushf
adc
sub
add
ins
scas
into
std
push
inc
mov
aaa
sbb
inc
mov
jne
add
push
pop
out
mov
retf
imul
inc
mov
push
jb
adc
test
mov
xor
sbb
add
loop
stos
cmc
(bad)
(bad)
pop
sub
popa
xchg
or
pop
lock
fld
sbb
mov
push
push
sbb
sub
inc
push
aam
fisttp
popf
sbb
mov
pop
lds
aad
inc
dec
inc
dec
rcl
cmp
inc
jne
inc
out
pop
sub
popf
sbb
aas
mov
sahf
outs
mov
jo
clc
mov
jecxz
enter
inc
add
popf
lods
jl
dec
mov
lods
jb
movs
inc
dec
cdq
inc
xor
fdiv
bound
inc
pushf
fs
adc
adc
movs
(bad)
outs
dec
mov
mov
cmp
loop
imul
sub
dec
mov
daa
cmp
mov
ror
push
stos
cmp
popf
cmps
and
push
or
mov
fs
mov
or
pop
out
idiv
xor
test
pop
(bad)
mov
push
mov
(bad)
xor
fdiv
push
call
into
and
jmp
fdivp
sub
lods
xchg
cmp
aas
jnp
out
(bad)
push
in
cli
mov
lds
or
daa
call
jmp
inc
jmp
out
dec
mov
inc
mov
push
xor
add
mov
test
xchg
jnp
ins
push
stc
jmp
jbe
mov
mov
adc
sbb
pop
mov
neg
sahf
imul
adc
pop
rcl
aad
cmc
push
xor
and
mov
push
pop
call
hlt
imul
or
test
(bad)
aaa
hlt
test
jle
jno
fcom
sub
sbb
icebp
add
push
mov
pop
out
and
retf
cmps
ins
mov
mov
cli
fist
nop
sahf
and
cmps
sub
lahf
mov
jecxz
dec
adc
(bad)
cmp
sub
jmp
jmp
(bad)
out
imul
add
jbe
lods
push
cmp
mov
xchg
cmc
sub
(bad)
cmc
push
ret
arpl
in
into
dec
add
std
movs
data16
adc
push
mov
xchg
std
stos
pushf
or
dec
ins
mov
adc
leave
aaa
pop
retf
dec
test
into
test
(bad)
jp
jbe
pushf
in
pop
inc
mov
pop
mov
(bad)
mov
mov
sbb
xchg
loop
xor
jge
lahf
and
out
rcl
mov
ins
inc
jns
xchg
ja
pop
lods
cli
sbb
sbb
fs
mov
loop
jp
inc
jge
and
and
cmp
scas
leave
mov
or
arpl
ss
stc
out
adc
stos
push
sti
push
and
jo
int3
adc
pop
push
(bad)
cmc
push
pop
mov
retf
rol
lods
inc
pushf
cmp
push
enter
mov
sbb
mov
add
xor
sub
cmp
and
shl
cmp
lock
push
xchg
dec
repnz
xlat
sbb
ror
in
(bad)
mov
cmps
xor
mov
adc
mov
push
push
jp
retf
rcl
inc
sbb
popf
cmp
sti
or
lea
dec
pavgw
push
imul
imul
pop
push
outs
lods
call
clc
or
jno
in
das
imul
mov
popf
xchg
aad
inc
mov
ss
sti
fistp
sbb
jne
shl
dec
sbb
add
js
je
nop
stos
inc
xchg
lahf
lea
inc
rcr
cmp
cmc
sbb
mov
gs
push
test
adc
repnz
fisttp
ins
cmc
mov
(bad)
mov
call
push
adc
inc
xor
jmp
imul
xor
(bad)
(bad)
xor
cs
jg
sub
mov
dec
xor
out
push
out
pop
xor
inc
sub
cmps
push
push
iret
(bad)
rcr
rcl
repz
leave
inc
or
adc
in
sbb
cmps
rol
enter
test
sahf
sbb
outs
jp
pushf
int
jp
js
clc
pushf
sub
xchg
sar
mov
inc
mov
cmp
adc
jb
inc
and
pop
or
pushf
sti
mov
ror
cmp
pop
inc
push
push
cs
push
aad
mov
sar
aad
jno
xchg
mov
jecxz
jb
mov
outs
(bad)
imul
pop
rcr
fld
retf
adc
daa
add
pop
inc
or
mov
add
adc
and
imul
add
push
movs
sbb
push
add
fs
stos
adc
ja
in
xchg
xchg
inc
cli
enter
jbe
retf
jbe
sbb
pushf
lds
repz
cmp
or
mov
pushf
xchg
cmp
or
xor
pop
mov
cmp
xor
xor
lock
or
das
mov
add
jbe
adc
aas
add
jmp
and
pop
xchg
lods
ss
mov
or
jle
pop
dec
push
ds
mov
in
fdivrp
pop
inc
test
dec
fistp
mov
xlat
mov
neg
pop
xchg
movs
ss
mov
stc
jb
or
cld
sti
aad
data16
hlt
or
icebp
mov
xor
fiadd
(bad)
push
ja
fcmovbe
inc
sar
mov
cmp
xchg
cmp
inc
xor
fucom
pop
out
fld
mul
stos
fmul
push
std
add
ins
sahf
push
pushaw
mov
xor
sub
cs
cmc
push
pop
push
lahf
lock
fld
shl
retf
fdiv
jb
cmp
retf
and
xchg
je
clc
mov
cli
inc
add
loopne
jbe
sti
(bad)
push
xchg
outs
nop
ror
add
popa
cmp
inc
lods
xchg
and
aam
mov
shr
(bad)
xchg
push
xor
inc
fsin
(bad)
into
movs
loope
adc
mov
fnsave
cmc
aam
inc
loope
cmps
pop
in
inc
dec
pop
in
dec
xchg
push
cmp
dec
bound
les
adc
(bad)
cmps
rcr
sbb
add
mov
je
sbb
inc
sbb
out
sbb
push
or
push
call
mov
cmc
sahf
ins
sbb
das
xchg
stc
enter
cmp
loop
outs
add
test
push
lock
add
out
iret
int
or
add
cmp
cli
adc
aad
or
push
inc
sar
lahf
jnp
std
and
shr
jmp
adc
sbb
jno
cld
aaa
cmp
into
aam
(bad)
outs
(bad)
sub
scas
aad
aaa
test
mov
mov
imul
loop
rcr
or
add
inc
xchg
ror
inc
or
dec
cli
bound
(bad)
fstp
(bad)
mov
and
cli
inc
stc
rcr
inc
nop
pop
mov
or
mov
pop
dec
jbe
xor
clc
inc
xor
fild
xchg
fisttp
sub
add
ret
jmp
sti
pop
jl
inc
movs
push
into
(bad)
in
cmc
repz
push
lea
aaa
call
mov
(bad)
mov
pop
adc
xchg
inc
xchg
cmp
aad
shl
ret
dec
mov
int3
enter
sub
sub
dec
cmp
xchg
loope
lds
push
lock
daa
pop
inc
sub
cs
and
(bad)
fisubr
lods
or
dec
push
jp
outs
cli
in
aad
je
xor
sbb
inc
push
lea
pop
aad
sub
loop
ror
push
stos
xor
in
leave
aad
xchg
adc
ror
xchg
mov
hlt
jo
sub
repz
push
fild
ins
xchg
fld
gs
nop
cs
or
and
int
or
ret
fnstcw
scas
popf
repnz
xchg
push
sbb
sbb
xor
icebp
sar
jle
arpl
mov
in
jg
leave
loop
add
jo
dec
dec
scas
inc
and
out
je
lock
out
fwait
outs
test
cmp
mov
test
retf
arpl
mov
fcom
aaa
pop
mov
shl
inc
pop
and
add
adc
push
push
xchg
push
aaa
pushf
jl
xchg
and
sahf
mov
call
ss
xor
repnz
push
lahf
mov
loopne
adc
std
xchg
pop
dec
pop
push
xchg
out
fimul
push
push
hlt
push
mov
ret
in
cmp
aas
repz
pop
dec
xlat
in
xor
ror
or
sar
fldcw
mov
mov
cli
ret
scas
dec
cwde
mov
dec
test
ins
jns
sub
push
ss
pop
mov
(bad)
gs
xor
xor
shl
sar
sbb
xchg
stos
xchg
repz
lock
and
div
lds
jns
pusha
mov
popa
pop
jne
into
retf
fdiv
gs
add
in
jl
xchg
loop
jg
dec
jbe
retf
retf
xchg
enter
push
xor
call
and
(bad)
in
add
cmp
fs
inc
leave
and
mov
call
adc
sub
pop
cmp
sbb
and
and
fisubr
fstp
sub
jle
fstp
dec
jp
sbb
loopne
ss
jnp
movs
pop
cmc
mov
(bad)
xor
sbb
hlt
mov
cmp
adc
sahf
mov
xchg
mov
test
mov
rol
clc
sahf
push
test
pop
dec
add
pop
mov
pop
or
sub
stc
(bad)
fnstenv
dec
jno
ret
xor
(bad)
(bad)
sub
sbb
add
add
je
movs
(bad)
mov
pop
nop
sub
pop
or
loope
push
stos
jmp
imul
mov
or
pusha
and
dec
in
fwait
and
sbb
jmp
cmp
jbe
dec
add
cmc
add
out
test
aad
(bad)
push
mov
rcr
mov
jnp
sub
and
pop
repz
mov
bts
xor
add
xor
cmc
pushf
pop
test
ins
shl
mov
mov
jmp
mul
pop
adc
daa
in
or
push
xchg
pop
jmp
lahf
sub
leave
daa
add
sti
ret
popf
mov
rol
add
ds
fsub
mov
dec
push
frndint
popa
mov
fwait
cld
jmp
out
fwait
imul
aad
jg
test
or
add
mov
fwait
mov
test
out
and
mov
mov
sub
loope
inc
(bad)
mov
out
dec
dec
inc
jecxz
rcr
pushf
cmp
pushf
aaa
xchg
outs
pop
dec
add
xchg
jbe
sbb
mov
lea
ret
mov
rol
sbb
sbb
outs
adc
test
sbb
fisttp
mov
cmc
iret
mov
into
jns
or
jmp
jl
mov
and
lds
add
xchg
push
inc
and
test
dec
loope
add
mov
ficom
out
nop
rcl
dec
(bad)
(bad)
jle
movs
mov
push
loopne
fs
imul
cmps
push
lock
into
inc
in
and
cmp
push
dec
ror
mov
scas
inc
into
sbb
sub
call
push
in
test
data16
in
mov
mov
mov
or
imul
fld
xor
aaa
(bad)
mov
iret
xchg
pusha
hlt
shr
push
xchg
pop
mov
das
retf
leave
push
mov
pop
sub
shr
(bad)
stos
es
mov
or
mov
in
loope
and
cmp
dec
cmc
mov
inc
ins
in
pop
xor
out
das
sahf
in
repz
pop
dec
sahf
cmc
mov
jmp
inc
inc
and
xchg
aaa
fadd
aaa
popa
sti
xchg
xchg
jae
pop
inc
sub
call
dec
call
mov
xchg
std
push
aam
mov
or
sahf
shl
outs
adc
sbb
inc
neg
popa
sub
cmc
not
xor
gs
sbb
shl
lds
adc
test
pop
cmp
call
xchg
mov
sbb
fidiv
div
inc
sub
aad
cwde
imul
iret
retf
adc
dec
scas
push
(bad)
jg
inc
push
lea
in
stos
and
rcl
or
es
mov
pop
lahf
xor
mov
aam
(bad)
fcomp
push
scas
xor
or
pusha
ret
add
jne
stos
pop
inc
movs
adc
popa
fist
sbb
push
xchg
ja
xchg
xor
out
xchg
and
idiv
cli
aaa
ficom
rcr
adc
lea
mov
(bad)
adc
sub
push
jno
xor
jb
inc
and
jmp
or
and
ins
fs
push
push
cld
jb
pop
mov
push
and
sbb
add
pop
jbe
pop
mov
fidiv
addr16
sbb
shl
jmp
rcl
(bad)
push
(bad)
push
inc
push
aas
mov
pop
sbb
(bad)
xor
sbb
xchg
and
mov
iret
add
cli
shl
push
sub
out
pop
lods
addr16
pop
fidiv
sub
jns
lea
push
test
cs
sub
add
dec
and
sbb
xchg
jmp
stc
add
es
pop
mov
pop
ror
adc
sub
iret
cmp
jb
jmp
mov
gs
test
in
mov
xchg
(bad)
mov
add
lock
scas
data16
mov
pop
xor
popf
cmps
cld
aaa
and
push
push
adc
add
(bad)
ss
mov
dec
loopne
mov
mov
jno
mov
cli
fcmovnb
push
dec
add
mov
pop
xchg
jmp
pop
inc
and
add
sbb
mov
lea
pop
pusha
hlt
ins
imul
out
out
mov
mov
ror
and
mov
jmp
push
daa
xchg
pop
retf
ins
mov
in
dec
mov
mov
cmp
pop
pop
outs
xor
mov
mov
jge
adc
aad
out
lock
xor
out
sub
movs
xchg
movs
int3
xchg
jns
push
stc
or
popf
inc
mov
xor
pop
fsubr
dec
xor
sbb
dec
inc
sub
cmp
xor
add
imul
jle
xor
popf
sti
xchg
repnz
mov
out
push
pop
push
sbb
push
rol
iret
inc
or
fsub
test
inc
fidiv
mov
imul
mov
mov
(bad)
retf
pusha
push
push
xor
mov
or
cmp
jmp
clc
ja
pop
test
test
scas
clc
dec
in
(bad)
test
jbe
jno
rcl
jg
sahf
repnz
mov
jmp
stos
sar
arpl
shl
or
push
push
push
int3
pop
cmp
sar
cdq
and
gs
push
mov
fcmove
mov
pop
adc
imul
pop
mov
jno
ins
aas
fdivr
cld
sar
in
int3
xor
sbb
push
out
mov
cdq
bound
inc
mov
push
fnsave
xor
and
dec
mov
es
xchg
dec
aam
mov
and
adc
push
stos
das
dec
push
cmps
mov
call
cmp
jae
nop
mov
jne
mov
xchg
cmp
add
ins
sub
call
jg
jmp
out
jmp
inc
bound
retf
daa
ss
push
stos
mov
sahf
outs
mov
out
fild
dec
popa
into
(bad)
xor
add
stc
mov
mov
loop
test
retf
js
lahf
pop
ja
inc
jo
out
sub
test
cmp
mov
or
fsub
loopne
add
adc
mov
cld
inc
popa
push
mov
jg
or
stc
jbe
mov
movs
and
sbb
sub
idiv
or
sbb
lods
jl
lock
push
fisttp
mov
mov
gs
xchg
jge
sbb
lock
sub
aas
(bad)
add
or
mov
sbb
shr
push
jae
push
aam
dec
add
movs
xchg
mul
pop
leave
enter
call
dec
fwait
xor
or
cmp
push
enter
gs
pop
mov
jb
inc
push
push
scas
inc
jl
add
sub
inc
sbb
scas
xlat
cmp
pop
mov
jno
cmp
pushf
mov
or
fisttp
sbb
add
adc
fisttp
sub
in
or
adc
adc
jb
sbb
popf
mov
sub
rcr
(bad)
cmps
out
fnstenv
push
xlat
push
int
xchg
lods
rol
mov
scas
test
jo
mov
icebp
and
mov
adc
cli
xchg
in
out
mov
xor
jle
cdq
push
imul
ret
mov
pop
hlt
adc
mov
mov
out
fsub
push
call
pop
sti
sbb
lahf
bswap
enter
dec
sbb
cs
out
je
gs
xor
cmps
add
scas
test
ret
pop
xchg
ror
ja
mov
mov
mov
adc
dec
in
jb
scas
push
(bad)
dec
sbb
fld
pop
mov
mov
jmp
mov
ret
cmps
jmp
out
fisubr
inc
(bad)
sbb
or
adc
or
repz
cli
mov
sub
pop
ja
retf
jge
cmp
cmps
shr
fcom
sbb
mov
lock
movs
xchg
cdq
fdivr
jl
addr16
and
(bad)
out
and
pusha
adc
mov
lahf
cdq
cmp
cs
mov
pop
add
adc
(bad)
fisubr
mov
inc
inc
scas
stos
inc
(bad)
mov
xor
jl
out
call
add
shr
pop
test
stos
sti
inc
xor
rcr
mov
iret
pop
pop
rcr
retf
ss
or
dec
and
shl
and
mov
fbstp
push
pop
sub
cmc
popf
in
pop
mov
dec
sub
add
enter
xchg
rol
sbb
dec
dec
xchg
cwde
sub
xchg
mov
iret
mov
or
test
jnp
adc
jg
mov
loopne
pushf
add
jmp
out
cmp
les
fs
push
xor
pop
or
or
std
arpl
dec
add
mov
popf
jp
cmp
imul
mov
fadd
jno
inc
pop
xchg
jp
lods
push
mov
shl
call
push
or
jno
inc
loope
cmp
sbb
jp
(bad)
cmp
cmps
int
js
pop
dec
(bad)
xor
movs
mov
jmp
ins
and
out
xchg
fidiv
cmps
mov
out
retf
dec
popf
mov
add
fs
outs
or
inc
or
pop
icebp
shr
dec
cmp
cmps
repnz
leave
or
push
les
mov
cli
xor
js
dec
push
mov
call
jl
pop
test
ss
stos
ins
jmp
add
dec
xchg
or
push
xor
stos
dec
and
stc
in
ror
mov
cld
add
push
jno
dec
inc
jno
mov
out
push
xor
xchg
movs
push
ret
push
rcl
clc
es
mov
cli
fild
cli
sub
mov
xchg
cmp
sub
xor
mov
push
cld
mov
add
lds
add
xor
inc
push
(bad)
push
gs
jmp
jae
push
push
ds
test
push
stos
clc
js
and
sub
mov
xchg
add
outs
(bad)
movs
(bad)
mov
push
pushf
pop
jbe
jbe
xchg
and
and
cmp
mov
pop
push
fcomp
or
sahf
ffreep
or
js
sbb
jno
aam
jl
mov
das
scas
sbb
pusha
popa
cmc
xchg
pop
cwde
mov
sti
out
call
add
mov
push
lods
push
jae
adc
add
outs
adc
add
out
cli
xchg
aas
sub
xchg
ins
push
jno
test
sbb
jno
xor
jmp
in
fst
push
jle
outs
pusha
ret
inc
mov
inc
push
sub
ja
jb
mov
and
daa
mov
adc
sbb
add
jg
cdq
sub
push
pop
dec
mov
mov
jns
(bad)
leave
xor
fucom
cmp
push
jmp
jbe
test
cmps
repz
icebp
push
cmp
sbb
cmp
jl
pop
jne
push
iret
dec
imul
jge
jnp
pop
(bad)
jns
push
inc
das
mov
add
fwait
sub
pop
pop
stos
push
mov
loopne
(bad)
arpl
fwait
int
push
nop
pushf
xchg
ins
ret
dec
lods
cdq
sub
fimul
daa
dec
in
pop
pop
jo
adc
mov
or
jo
or
jne
es
repz
enter
in
repz
addr16
sbb
adc
daa
jne
and
mov
stos
adc
(bad)
(bad)
ficom
adc
popa
outs
cmp
ss
add
add
loope
les
push
adc
sub
call
shl
mov
mov
push
loope
adc
sar
arpl
cmps
xor
jmp
mov
mov
in
add
xor
xor
adc
popa
adc
scas
movq
je
mov
pop
sti
(bad)
out
push
fistp
out
out
lea
add
rol
inc
aas
leave
cmc
adc
outs
jl
je
out
sbb
mov
bound
or
scas
in
xchg
push
dec
pop
inc
pop
js
fist
lock
stc
(bad)
adc
jnp
daa
mov
xchg
mov
repz
push
adc
mov
bound
cli
es
es
push
stc
iret
mov
sub
outs
adc
push
xchg
sub
add
adc
mov
push
mov
pop
push
out
in
dec
nop
(bad)
adc
xor
in
dec
push
dec
mov
mov
fdivp
std
jae
pop
lahf
add
call
cmps
jnp
dec
mov
je
stos
sbb
and
psubq
cmp
cmp
mov
cmp
aam
test
int
cmp
mov
(bad)
(bad)
jle
(bad)
(bad)
push
leave
ret
cmp
push
cmp
adc
(bad)
xor
inc
rcl
lds
stc
mov
and
shl
or
jl
jns
outs
pop
sub
jmp
stc
inc
push
push
and
inc
jg
or
add
popa
out
jb
cli
add
jl
or
mov
mov
jmp
lea
sub
cmc
mov
sub
(bad)
cmp
adc
clc
mov
outs
(bad)
jmp
push
adc
fisubr
sahf
ds
add
neg
icebp
repnz
fistp
cwde
pop
mov
ds
sub
scas
test
jnp
and
stos
jg
and
cmc
(bad)
mov
jne
leave
nop
adc
in
mov
and
add
pop
push
out
or
pushf
and
mov
fsub
shr
mov
inc
sub
arpl
bound
ins
imul
add
fwait
iret
adc
sbb
add
push
repz
aaa
and
inc
aad
sub
vmwrite
sub
mov
in
sbb
lods
mov
pop
xchg
sbb
imul
cmps
loope
xor
and
ret
jbe
fidiv
sbb
jle
bound
dec
lock
cwde
jbe
pop
fld
jo
push
sbb
iret
mov
jl
mov
mov
jno
sub
ja
out
xor
or
xor
mov
adc
lds
push
xor
stos
mov
sti
je
rol
mov
mov
stc
sti
icebp
xchg
xchg
dec
push
inc
xor
fldenv
jo
jl
(bad)
sti
sbb
xor
pop
lock
push
das
sti
rcl
call
ret
ret
movs
and
(bad)
mov
push
sbb
cmp
pop
and
lea
mov
cwde
aaa
rcr
cmc
and
push
inc
clc
cwde
xchg
inc
jle
sahf
jmp
int
push
out
mov
and
call
ds
pop
loope
(bad)
fisubr
adc
aaa
push
mov
cdq
(bad)
xlat
stos
mov
adc
(bad)
add
daa
mov
sub
loopne
hlt
xor
cmp
and
shr
sbb
cmps
xor
mov
xor
mov
xor
icebp
xchg
pop
push
dec
sbb
lock
pusha
les
fnstenv
mov
mov
enter
or
les
or
sub
mov
sar
icebp
(bad)
jo
mov
mov
ss
in
jbe
addr16
and
xlat
sub
out
jl
push
in
je
cs
ficomp
push
pop
pop
sub
xor
cmc
in
and
cmp
test
aad
sbb
mov
cmc
repz
call
jg
mov
pop
dec
jmp
or
or
(bad)
ins
sub
adc
(bad)
jg
jae
repnz
or
(bad)
pop
xchg
stc
cmovs
jne
pop
xor
and
or
mov
popf
cmc
mov
int
out
rcr
xchg
outs
sbb
cs
into
or
out
sub
pop
and
jne
aam
and
push
das
dec
or
mov
popa
cmc
test
add
fs
pop
or
mov
mov
push
jne
mov
test
(bad)
mov
in
nop
test
xchg
sbb
mov
push
jbe
jbe
and
jae
add
push
pop
test
ins
mov
lds
mov
rcl
adc
pop
aam
xchg
sahf
jecxz
int
mov
fs
push
mov
xchg
or
jae
add
cmps
push
leave
bound
mov
jno
xchg
mov
jnp
cli
outs
fisub
fwait
push
inc
stc
cld
inc
gs
push
sbb
or
addr16
dec
jne
dec
mov
cmps
and
into
dec
jns
sub
popa
rol
jo
and
push
je
rcr
sbb
cmp
push
movs
pop
in
push
fnstsw
retf
mov
aad
adc
cld
imul
jns
iret
sub
push
sbb
push
mov
daa
pop
ds
cmp
pop
outs
sbb
mov
loop
dec
add
inc
loop
lods
scas
fidivr
aas
push
add
loope
jo
jbe
leave
(bad)
fidiv
pop
jno
jnp
push
(bad)
(bad)
xor
aad
xor
dec
xor
add
test
mov
clc
mov
ds
push
pop
pushf
imul
popf
add
sbb
xchg
or
adc
push
jo
pop
movs
and
jecxz
or
out
mov
xor
mov
data16
push
mov
inc
retf
imul
jns
jno
cmp
call
sub
xchg
mov
and
pusha
xchg
lea
jne
das
nop
test
retf
cmp
and
cmp
or
cmp
test
into
ret
int
inc
push
fmul
aaa
jbe
add
jnp
imul
sub
jno
(bad)
test
ror
repnz
sbb
dec
into
inc
fsubr
pop
loopne
mov
mov
and
out
jp
jmp
mov
cli
rol
mov
push
or
in
jecxz
jns
push
ins
jg
sub
outs
call
pop
push
inc
inc
xchg
out
adc
imul
add
ds
push
leave
sar
mov
test
xor
scas
push
daa
es
mov
inc
in
rcr
or
mov
sahf
psubusw
mov
cli
fcom
fs
xor
xchg
cwde
jecxz
leave
fldenv
ret
sahf
jecxz
shl
sbb
sbb
ror
mov
push
jmp
sti
into
pop
mov
into
cmps
ror
xor
js
push
sbb
or
and
adc
push
ins
clc
into
ja
jle
sti
jmp
add
aas
adc
cdq
sbb
mov
les
lods
xchg
stos
mov
pop
outs
stc
arpl
mov
mov
cmp
pop
mov
jnp
ret
pusha
cmp
ror
lock
sbb
scas
sbb
lods
std
aam
stos
fldcw
scas
or
pushf
imul
fwait
adc
aam
push
mov
int3
mov
(bad)
sub
cmp
cmp
sub
and
cmp
push
cs
mov
call
jae
fwait
push
jp
mov
or
stos
shr
in
fdivr
lahf
xor
pop
mov
or
sbb
push
and
or
je
lds
pushf
inc
sahf
(bad)
movs
mov
je
mov
ret
scas
es
cmp
mov
push
mov
xlat
and
in
xchg
repz
dec
lahf
mov
adc
inc
(bad)
xor
lods
push
jle
mov
inc
fnstenv
rol
stos
(bad)
adc
add
jae
jns
sbb
push
pop
adc
das
jg
popa
pop
in
rcr
test
add
jmp
push
sub
popa
fisub
dec
enter
(bad)
jecxz
mov
xchg
test
out
cli
ret
sbb
fidivr
int3
dec
mov
mov
repnz
and
lods
out
push
mov
pop
in
ret
cmp
xor
jle
popa
stc
jmp
xor
xor
mov
xor
mov
out
jmp
pop
ds
cwde
outs
cmp
aaa
and
mov
push
jg
lds
add
mov
stc
or
mov
(bad)
stc
retf
shl
ds
add
and
pop
mov
cdq
mov
out
call
xor
je
retf
or
cld
or
inc
jns
es
popf
cs
(bad)
inc
lea
mov
jmp
jns
push
arpl
jge
add
call
jl
retf
pop
jp
hlt
xor
test
pop
test
mov
and
mov
leave
das
sub
push
jne
or
push
push
adc
int3
cmp
cmp
mov
push
(bad)
cli
and
call
xchg
mov
(bad)
push
sub
inc
cli
inc
and
lahf
gs
clc
pop
xor
pusha
jae
cmp
cmp
out
sbb
ja
fnstsw
(bad)
jp
jo
pop
das
push
scas
adc
mov
dec
mov
out
(bad)
mov
int
cmp
fild
xor
mov
xor
idiv
sbb
jb
add
dec
div
jp
(bad)
mov
mov
fild
jmp
mov
add
call
sbb
xchg
inc
cmp
pushf
frstor
jp
js
add
movs
int
and
mov
mov
(bad)
out
jmp
lock
xchg
pop
sbb
aad
ins
jmp
rol
mov
cmps
jl
jbe
fsub
loope
lods
ds
sbb
and
push
and
adc
mov
lea
xlat
push
outs
adc
dec
sub
add
xor
sbb
mov
pop
xchg
cmp
xor
je
push
movs
or
test
adc
push
sahf
ss
aas
adc
push
loope
add
sbb
addr16
jp
xchg
push
xlat
bound
pop
xchg
aad
fidivr
hlt
clc
sti
aaa
jo
loopne
jbe
sbb
cmps
in
mov
ss
(bad)
push
hlt
or
ins
xchg
sahf
out
sbb
dec
mov
mov
or
fwait
dec
mov
cmps
mov
xchg
imul
cmp
and
rcr
fwait
add
xchg
pop
sub
fcmovu
adc
mov
daa
sub
add
inc
call
(bad)
inc
push
mov
mov
hlt
cmp
xchg
pop
inc
adc
pop
aam
add
mov
inc
rcl
and
mov
jbe
jmp
icebp
movs
shl
xchg
rcr
jg
lods
mov
ret
push
or
dec
outs
sub
mov
sbb
loop
push
cwde
mov
(bad)
movs
or
dec
div
jmp
movs
cmp
cmps
jbe
xchg
xlat
cmp
loope
ror
repz
in
and
mov
popf
mov
lods
add
xor
adc
jecxz
cmps
popa
scas
adc
cmp
or
adc
call
cmp
and
or
mov
and
cmp
pushf
test
in
mov
je
pop
adc
mov
pop
repz
mov
in
ret
test
jecxz
out
gs
dec
cmp
mov
mov
dec
sub
std
xchg
xchg
retf
mov
leave
pop
ror
inc
inc
addr16
dec
xor
jmp
dec
pop
test
dec
cmps
push
cmp
or
lods
(bad)
and
jmp
push
push
loopne
pop
aam
jl
add
mov
push
xor
mov
int3
or
adc
push
xor
fnstsw
mov
push
ins
mov
test
cmp
lea
push
dec
jns
mov
inc
jle
xor
rcl
jmp
lods
sub
add
pop
add
dec
inc
and
xor
loope
and
add
pop
scas
dec
sbb
add
xlat
cdq
rep
cdq
mov
jge
and
fs
cmp
fdivrp
jmp
sbb
sbb
sbb
jno
pop
int3
pop
(bad)
xor
xor
mov
daa
xor
sbb
sti
mov
retf
mov
mov
(bad)
cs
adc
lods
xchg
inc
pop
les
scas
inc
out
aas
xor
sbb
push
inc
push
xchg
xchg
mov
pop
test
jnp
fmul
push
fstp
(bad)
neg
scas
sbb
cmp
fwait
mov
clc
lds
mov
cmp
out
int
outs
cld
sub
(bad)
div
and
mov
and
enter
loopne
inc
dec
mov
dec
cwde
outs
jne
cmp
mov
ret
jae
mov
cwde
cmp
fwait
cmc
dec
(bad)
pusha
sub
(bad)
adc
fild
int3
sub
push
movs
rcr
imul
or
sbb
mov
xchg
lods
rol
fldenv
aam
lock
fwait
sbb
or
dec
jp
and
test
mov
int3
xchg
sahf
dec
jmp
gs
sbb
fs
cmp
rcl
addr16
jb
cmp
loopne
adc
leave
gs
fsub
sti
dec
ins
idiv
mov
leave
ss
adc
cwde
arpl
push
scas
push
(bad)
jnp
shl
shl
xor
mov
ins
jp
fnstenv
ins
fcmove
mov
push
add
inc
mov
adc
out
sahf
mov
lds
pop
lock
inc
cmp
xor
adc
into
(bad)
cmp
(bad)
mov
mov
int
ss
popa
jne
dec
mov
xchg
mov
outs
push
pop
adc
lds
leave
push
cmps
xor
xchg
pop
loopne
add
cmp
call
dec
idiv
(bad)
fldenv
cmc
mov
jl
out
push
shr
rol
fwait
xlat
push
mov
mov
dec
jle
jnp
ds
sub
icebp
mov
daa
hlt
ror
xor
cmp
jo
retf
into
jg
xchg
mov
call
sbb
in
pop
jne
lds
xchg
xchg
imul
(bad)
push
test
cmp
cmps
pop
addr16
mov
jb
dec
mov
clc
dec
or
sub
adc
or
lods
mov
mov
jmp
mov
and
mov
cmp
adc
xchg
ficom
hlt
xchg
sub
mul
push
cdq
cdq
push
js
call
daa
mov
daa
push
call
sar
cmps
imul
jne
shl
inc
xchg
and
adc
pop
(bad)
push
jne
add
dec
std
adc
movs
pop
je
(bad)
xchg
or
rol
popa
std
aam
ins
push
ja
lods
mov
sahf
loope
ins
lea
int3
test
push
test
xchg
imul
sbb
lds
retf
add
sub
xor
pop
inc
xor
add
into
stos
popa
mov
xchg
sub
sbb
inc
dec
xchg
scas
xor
pop
sub
xchg
or
fwait
sbb
inc
hlt
ss
mov
lock
outs
xchg
retf
test
jp
jne
xchg
inc
out
mov
aaa
inc
sbb
sub
pop
scas
or
mov
xchg
repnz
inc
jmp
mov
fist
je
loop
pop
cmc
in
or
out
shl
in
fcomp
outs
(bad)
fild
je
sub
pushf
jbe
push
mov
lea
sub
int3
lea
lds
mov
call
aas
mov
lahf
inc
stos
adc
dec
adc
iret
out
xchg
repz
sbb
out
lea
fsubr
fadd
inc
scas
pop
push
adc
fisubr
xchg
in
mov
leave
mov
mov
icebp
mov
(bad)
mov
push
sbb
ins
ins
push
mov
pop
clc
icebp
inc
popa
sbb
out
adc
pop
(bad)
mov
dec
iret
(bad)
pop
out
dec
in
add
outs
xor
fstp
retf
ins
xchg
add
aad
cdq
push
aam
test
repnz
mul
pop
push
retf
adc
xchg
push
clc
ror
inc
das
push
retf
out
out
dec
mov
and
pop
adc
mov
xor
rcr
mov
cmp
sub
inc
mov
cmp
cmp
loop
scas
xchg
cmp
test
out
and
cmp
cmp
xchg
mov
pop
loope
repz
mov
iret
sub
sbb
cmps
jae
sbb
aad
sahf
mov
push
sti
ss
cmp
adc
xchg
mov
sub
cmp
push
push
pop
scas
call
(bad)
mov
out
jmp
or
sar
std
jo
mul
or
mov
add
test
gs
shl
lock
lods
or
push
pop
jl
push
lock
dec
retf
out
push
dec
mov
out
(bad)
jp
cmp
or
add
pop
nop
adc
mov
bound
push
(bad)
jge
and
out
sub
xchg
call
add
pop
and
out
push
dec
xor
cmp
jnp
adc
cmp
sahf
pop
or
jp
int3
xchg
imul
aas
(bad)
xor
aaa
mov
jecxz
ins
in
cmp
xor
cmps
xor
inc
lds
out
int
popf
sub
repnz
fdiv
inc
enter
out
mov
cdq
inc
push
sbb
in
mov
outs
mov
pop
jb
jp
mov
adc
jno
stos
mov
popf
cdq
es
pop
xchg
add
and
dec
push
mov
mov
jmp
mov
mov
(bad)
fs
jb
lock
ja
aad
fadd
lds
or
mov
sbb
cmp
mov
call
std
iret
add
jmp
cmps
add
in
pop
inc
pop
mov
jg
scas
in
or
mov
xchg
daa
daa
fwait
mov
xchg
xor
clc
aaa
in
(bad)
call
xor
pop
retf
push
cmp
sbb
mov
(bad)
jg
cwde
xor
jae
pop
aad
cmp
cmp
test
sub
add
scas
rep
loopne
cmp
ret
add
das
add
dec
push
push
inc
stos
add
xchg
or
(bad)
mov
adc
stos
pop
pop
push
xor
leave
mov
mov
bound
mov
sbb
mov
jecxz
or
sbb
pop
adc
std
fidivr
jmp
repz
(bad)
mov
fst
mov
in
pop
cmps
lock
push
mov
adc
(bad)
pusha
in
or
sbb
mov
mov
js
mov
shl
into
imul
jo
cmp
add
iret
movs
cmp
cld
adc
scas
mov
xchg
cmp
(bad)
mov
psllq
out
lods
xchg
and
leave
and
std
hlt
call
pop
rcl
cdq
xor
dec
mov
mov
mov
nop
sub
adc
call
adc
fimul
shl
enter
in
sub
movs
fidiv
scas
loop
xchg
or
sub
call
fadd
ds
fadd
inc
push
push
mov
sub
mov
cdq
in
sub
xchg
mov
aas
adc
sbb
aad
leave
lea
jo
addr16
sub
pop
push
mov
es
(bad)
mov
xchg
aas
std
pushf
mov
rol
mov
jno
movs
cs
cwde
leave
arpl
cs
hlt
stos
call
sub
xchg
ins
add
add
es
xor
retf
cmps
xor
inc
pop
xor
popa
xchg
sbb
es
mov
test
sbb
cmp
scas
int3
or
xchg
mov
out
jl
call
xchg
push
das
xor
sti
pop
daa
das
cmp
call
push
call
imul
std
mov
xchg
jl
loopne
sti
add
jno
sbb
pop
jnp
out
rol
jns
xor
xor
xor
stc
sub
cwde
xor
sub
clc
and
outs
xchg
mov
mov
(bad)
cld
out
fnsave
jns
push
fld
in
push
mov
xchg
std
gs
jbe
xchg
test
ds
jmp
mov
mov
arpl
add
sbb
test
mov
idiv
xor
cs
sbb
iret
data16
sub
dec
xchg
cmp
jo
mov
ret
call
and
mov
cdq
pushf
xor
pop
arpl
jp
and
in
jo
xchg
add
mov
push
adc
or
or
repz
and
push
jp
add
xlat
xor
lds
adc
push
inc
mul
lods
cmp
cli
mov
sbb
mov
dec
iret
test
bound
dec
sbb
sbb
sbb
xchg
out
pop
lock
add
stos
cmp
lods
idiv
xchg
sbb
setle
inc
push
adc
pop
rol
je
push
jmp
sub
(bad)
jl
ins
push
mov
xchg
mov
inc
aas
sub
sbb
mov
or
mov
add
pop
jno
mov
out
je
sbb
or
push
cmps
adc
mov
test
jl
push
add
push
pop
sub
mov
inc
sbb
add
mov
sbb
fidivr
lea
inc
sub
ins
sbb
adc
call
xchg
xchg
pop
mov
cmp
fs
push
cmps
dec
ss
jno
in
jb
push
pmulhuw
stos
xor
imul
cli
inc
xchg
cld
xchg
test
ins
mov
xor
movs
pop
js
dec
mov
int3
loopne
popa
adc
outs
mov
cld
mov
fst
call
add
inc
dec
ret
inc
in
mov
ins
sti
cmp
jle
jbe
jmp
gs
cli
mov
test
lock
or
(bad)
pop
movs
xchg
scas
cwde
or
fucomp
inc
fiadd
mov
xchg
jne
xor
test
aam
fbld
push
or
ret
retf
sbb
dec
dec
mov
cwde
push
mov
daa
xchg
inc
loopne
or
fmul
mov
cmp
mov
icebp
push
shl
dec
xor
push
add
sub
jae
lea
(bad)
xlat
sbb
loope
push
cmps
out
dec
mov
jbe
cmps
ins
repnz
(bad)
mov
outs
out
jnp
sbb
imul
cld
icebp
xchg
test
popf
fwait
into
test
arpl
icebp
aad
cmp
push
nop
popf
and
cmp
stc
das
mov
ror
mov
sbb
or
mov
lods
sbb
std
xlat
ins
ins
iret
dec
leave
(bad)
mov
xchg
popf
shl
rcr
mov
cmc
pop
cmp
retf
ins
push
rol
xor
mov
xor
test
xor
rcr
jl
push
cwde
inc
sahf
repnz
in
xchg
inc
cli
mov
pop
jno
bound
into
jmp
aam
test
fnstenv
lds
dec
imul
retf
frstor
mov
in
fsub
scas
ins
mov
mov
inc
push
mov
(bad)
fidiv
add
inc
arpl
sbb
push
loopne
retf
push
push
scas
inc
ss
ds
cmp
push
fs
or
fdivr
mov
dec
lods
call
out
add
xrstors
push
jne
pop
xor
xor
pop
test
push
mov
dec
jno
jmp
and
inc
fmul
out
into
es
idiv
nop
pop
inc
cdq
sub
imul
cmp
aaa
pop
aaa
inc
hlt
xchg
test
pop
mov
ret
mov
pop
xchg
and
or
xchg
in
fsubr
sub
and
shl
das
test
scas
push
cmps
lock
push
ret
arpl
stc
out
rcr
in
adc
and
mov
clc
call
ins
cmc
nop
cdq
push
lds
cmp
cmc
retf
mov
aaa
sbb
mov
jecxz
sub
repz
sub
ss
mov
xchg
push
repz
pop
lahf
iret
into
mov
cli
int3
mov
push
mov
mov
sbb
test
xchg
je
add
xlat
mov
cli
sub
inc
pop
fld
arpl
test
add
stos
pop
pop
inc
cs
ins
(bad)
inc
mov
push
aam
das
jg
xchg
test
mov
mov
popa
sbb
and
rcr
push
aad
pop
fstp
fistp
pop
jbe
test
enter
xchg
iret
push
jg
mov
ffree
inc
ret
pop
push
stos
pop
jp
lds
int
(bad)
fimul
nop
inc
stos
pop
arpl
addr16
pmulhw
adc
retf
test
sar
(bad)
out
cmp
push
scas
cmc
xlat
aam
cmp
jne
add
mov
adc
and
shl
jecxz
leave
jle
xchg
mov
push
adc
clc
dec
xor
lahf
stos
mov
shr
xchg
pop
xor
push
or
lds
arpl
lods
push
push
adc
(bad)
stos
mov
push
ret
cmp
repnz
fisttp
and
ret
(bad)
or
mov
sahf
adc
push
ret
adc
rol
or
pop
dec
jle
pop
sahf
adc
fst
cmp
cmp
retf
add
mov
mov
outs
movs
sbb
pop
xchg
add
cmc
sub
cld
aas
test
or
dec
cmps
pusha
pop
inc
aam
dec
mov
fist
xlat
pop
into
sbb
pop
lds
and
mov
stos
cmp
inc
jns
mov
dec
xor
cmc
iret
mov
mov
dec
pop
push
cwde
mov
dec
shl
jl
pop
jmp
adc
mov
xor
not
es
add
fdivr
lods
pop
sbb
jmp
mov
fisttp
and
add
jne
pop
ret
inc
sar
push
loopne
sbb
mov
inc
xor
mov
in
cmp
adc
push
stos
jl
nop
mov
sbb
fist
fcomp
out
shr
ds
cmp
xor
ror
pop
mov
icebp
add
pop
jmp
mov
mov
icebp
mov
jmp
jge
outs
dec
pop
cmc
pop
mov
jge
mov
mov
xor
adc
jmp
xor
sbb
inc
shr
xchg
les
shr
in
gs
(bad)
int
(bad)
std
sub
sub
inc
mov
xor
sub
push
lea
adc
mov
js
(bad)
ins
mov
jns
pop
cmp
xor
dec
mov
dec
mov
call
xchg
cmp
push
and
mov
das
mov
jnp
push
call
(bad)
cmp
pusha
pop
jno
loop
mov
sbb
fwait
inc
add
bound
(bad)
in
push
es
enter
push
rcr
fdivr
nop
sub
jmp
mov
movs
mov
cmp
fnstcw
ds
push
shr
mov
sti
dec
adc
add
jl
sub
cwde
sbb
add
rol
jecxz
imul
xor
cmp
(bad)
xor
rcr
fs
sbb
test
scas
lock
bound
dec
lds
and
test
jp
pop
pop
or
inc
push
jae
out
pop
mov
push
dec
mov
pop
xor
imul
rcr
pop
inc
adc
push
pavgb
(bad)
mov
sub
fmulp
or
pop
fsub
inc
stc
inc
cdq
jnp
ds
push
addr16
sbb
repz
mov
sar
mov
icebp
lods
stos
pop
(bad)
sbb
test
pop
or
dec
push
sub
stos
and
test
fadd
fdiv
mov
test
pop
push
inc
or
in
cmp
add
sahf
push
mov
xchg
jp
inc
ja
dec
std
pop
sbb
cmc
sahf
or
xor
sbb
aad
fmul
mov
sbb
fild
ret
sbb
sti
add
loop
and
std
inc
fisubr
sahf
out
adc
pop
sbb
push
lahf
arpl
je
loop
xor
mov
sub
ins
sub
scas
dec
cmp
push
int
jle
push
repnz
mov
mov
movs
int
xor
mov
pextrw
out
or
adc
lods
enter
xchg
mov
add
jns
repz
pop
push
fwait
xor
lds
mov
jg
aas
(bad)
jl
shl
jmp
(bad)
mov
rol
imul
sbb
cmp
dec
add
sahf
mov
cs
mov
or
pusha
cmps
inc
push
or
jmp
adc
xor
push
mov
call
inc
retf
add
cmp
mov
adc
and
inc
xchg
(bad)
push
(bad)
or
shl
cmp
sub
adc
mov
arpl
mov
jle
adc
stos
sbb
(bad)
les
lods
test
xor
or
pusha
xor
and
push
dec
sbb
fsubr
jge
iret
js
inc
mov
add
jno
sub
mov
inc
jmp
cmps
jo
in
shr
call
push
popa
hlt
jmp
leave
mov
neg
test
shl
call
xchg
mov
aam
sub
popf
test
loopne
out
fld
xchg
ret
out
inc
movs
fild
inc
in
sub
dec
enter
lds
jecxz
jne
inc
into
in
mov
push
ins
mov
pop
ror
inc
fisttp
or
mov
imul
cld
mov
addr16
stc
pusha
out
mov
aam
mov
cmp
push
rcl
push
mov
cs
pop
lahf
test
cmp
fs
push
jo
adc
enter
xchg
inc
cmp
sub
sub
jg
mov
dec
or
imul
maskmovq
test
out
push
mov
(bad)
jae
(bad)
mov
addr16
xor
loop
outs
jb
inc
mov
adc
cmp
(bad)
pop
mov
add
std
and
adc
fcom
mov
pop
push
xor
and
mov
(bad)
mov
mov
leave
mov
movs
sub
jmp
mov
in
sbb
shl
ret
rol
and
dec
test
xchg
aad
xor
xchg
div
call
push
mov
rcr
fwait
inc
out
test
xchg
sub
stos
cmc
cmp
push
imul
repz
pusha
push
and
lock
neg
es
xor
mov
or
jne
xchg
xchg
xor
push
(bad)
jecxz
bound
xchg
and
pop
loop
nop
aam
retf
xor
in
lahf
fnstcw
inc
loop
cld
jns
lahf
pop
xchg
rol
dec
sub
dec
adc
mov
(bad)
sbb
sub
or
bound
cli
jnp
sub
jno
in
jg
ficom
cmp
test
and
cwde
xlat
cmp
dec
fstp
push
imul
lahf
cmps
fwait
leave
es
in
pop
loope
fcmovu
pushf
test
std
enter
icebp
fwait
arpl
mov
sub
sbb
leave
leave
adc
or
into
(bad)
call
jp
mov
js
xchg
cmp
and
xlat
pushf
(bad)
cmp
outs
dec
push
xchg
fsubr
dec
shl
jnp
and
lock
stos
mov
sub
fnstsw
pop
xor
xchg
inc
lea
lock
aaa
scas
loop
mov
mov
inc
test
test
xor
ins
push
(bad)
retf
sahf
daa
loope
jmp
in
scas
xor
in
movs
or
hlt
and
dec
js
adc
jp
push
adc
adc
adc
add
push
mov
dec
or
div
mov
inc
in
or
sti
es
outs
sbb
mov
out
cmp
sti
inc
shl
ja
arpl
movs
popf
and
dec
stc
jne
and
sub
jnp
sub
sub
or
lock
or
adc
je
stos
adc
dec
fmul
push
jl
mov
lods
jge
cmc
daa
adc
rcl
add
iret
pop
pop
or
dec
mov
sbb
sub
inc
shr
push
dec
nop
xor
sar
lock
dec
(bad)
shr
ds
mov
mov
jb
ds
mov
pop
fwait
pushw
shl
jns
add
add
aas
push
fucomi
cmp
test
in
jns
mov
inc
dec
pop
and
loopne
mov
movs
push
std
mov
and
imul
inc
cld
pop
jle
ret
push
bnd
leave
pop
xchg
xchg
mov
pop
add
aam
sahf
push
push
pop
outs
(bad)
mov
bound
cli
stc
mov
in
mov
dec
movs
inc
sbb
mov
or
enter
xchg
mov
mov
mov
push
ins
(bad)
xor
popf
push
sahf
jae
push
pusha
sbb
ds
outs
pop
and
xchg
dec
ja
int
cli
cmp
jp
pop
(bad)
imul
pop
cmp
xchg
rol
lods
popa
mov
fisttp
test
ffree
lahf
sbb
test
fs
int3
mov
sub
xchg
outs
fwait
push
push
mov
push
and
mov
pop
scas
dec
pop
jmp
push
ficomp
xchg
mov
adc
jp
mov
or
cmp
mov
add
add
or
xor
xor
jge
ficom
stc
stos
mov
sbb
sub
and
sar
jne
add
shr
or
out
xchg
cmp
jl
xor
jecxz
mov
add
mov
scas
inc
or
push
add
jmp
ja
nop
pop
sahf
cmp
mov
xor
dec
js
add
enter
xor
rcr
inc
xchg
cmps
aas
push
push
or
lods
popf
mov
aas
jl
(bad)
in
mov
sub
jg
adc
iret
loope
pusha
inc
mov
mov
fadd
call
inc
loop
stos
rol
lea
sti
adc
push
ins
jge
mov
xchg
inc
pop
or
sub
mov
cmps
cli
inc
sub
pusha
ret
jg
push
xchg
popa
jl
enter
jo
stos
fdiv
cmp
mov
xchg
xor
and
movs
into
hlt
fadd
or
mov
es
fwait
inc
dec
and
mov
fmul
cmp
sbb
sbb
mov
mov
pop
mov
aam
ret
fidivr
repnz
cmps
pop
popf
jo
mov
push
push
les
outs
sar
out
pop
mov
ret
data16
jno
cli
or
cmp
xor
enter
dec
sbb
rcr
fs
add
loope
inc
jmp
xchg
mov
pop
les
in
sub
dec
stc
shl
lds
enter
or
stos
aad
iret
mov
xor
nop
mov
sub
xchg
mov
push
xor
cmp
stos
pusha
cmps
adc
dec
lods
cmp
retf
pop
adc
inc
cmp
or
sbb
xchg
mov
or
cli
and
adc
add
stos
pop
xor
xor
inc
shl
outs
mov
fdiv
adc
mov
jmp
sub
shl
mov
ins
fwait
clc
out
xor
pop
sbb
retf
sbb
jb
add
movs
out
hlt
xor
in
retf
jo
call
pop
pop
cmp
push
inc
jo
ror
pop
cdq
ins
jnp
int3
loope
pop
pop
call
fcom
and
icebp
mov
inc
scas
mov
call
and
mov
mov
sbb
xor
data16
call
xlat
dec
mov
inc
mov
cs
dec
stos
or
sbb
fwait
ja
movs
sbb
clc
and
int3
jl
jne
jbe
pop
adc
out
scas
inc
int3
xor
repz
hlt
or
or
xchg
ds
mov
arpl
push
rol
mov
jg
pop
sub
mov
add
mov
mov
(bad)
aaa
fdiv
(bad)
push
stos
cli
aad
pop
aad
std
cmp
imul
or
sahf
int3
aad
mov
test
(bad)
cmc
mov
xor
adc
aaa
dec
add
mov
pop
iret
adc
ret
xor
pop
sub
fcom
popf
mov
(bad)
cmp
nop
dec
inc
fbld
push
inc
scas
mov
xchg
test
push
sahf
push
fmul
test
cmps
xor
retf
fimul
lock
sbb
cmc
out
sub
sbb
push
sub
scas
jno
or
pop
imul
pop
mov
cmp
mov
bswap
fmul
stos
mov
loope
push
or
push
xchg
mov
(bad)
repz
out
cmp
lahf
hlt
jne
cmp
call
dec
xchg
pop
xchg
xchg
mov
mov
data16
js
imul
inc
lahf
ins
cmps
dec
mov
sub
pop
inc
out
es
movups
pop
sbb
scas
mov
cmps
imul
cmp
cmp
and
mov
daa
jg
loop
xor
jnp
dec
jecxz
icebp
jb
jle
push
ins
scas
jne
stos
imul
xchg
push
test
fisub
lock
lds
mov
(bad)
mov
mov
psrld
rcl
mov
out
xor
in
nop
enter
xor
cmp
bound
sub
jge
push
je
or
in
push
xor
add
mov
mov
lods
test
mov
pop
push
ret
cmp
fs
cmp
frstor
push
push
scas
pop
dec
adc
dec
data16
call
cdq
out
and
adc
and
mov
sbb
xchg
rcr
jmp
xchg
sbb
dec
mov
scas
sar
cmps
stos
mov
outs
ins
pop
mov
mov
inc
fadd
pop
mov
xchg
pop
jmp
mov
fwait
not
lahf
sbb
dec
sub
lds
and
pop
(bad)
jge
sar
jg
mov
in
sub
sbb
punpckhwd
mov
rcl
and
out
add
repnz
inc
push
in
inc
mov
loop
push
loope
hlt
dec
in
xchg
outs
dec
xchg
sub
mov
fwait
inc
adc
and
fld
arpl
xchg
sub
sbb
(bad)
repnz
adc
xchg
ret
and
jmp
jg
mov
xor
setle
ficom
int
in
xchg
push
retf
and
xchg
xor
ja
pusha
jno
cmp
iret
fcom
addr16
jp
push
outs
pop
push
cmps
clc
jmp
mov
jle
push
fwait
push
adc
dec
sub
adc
push
cmp
push
add
ins
push
outs
sub
add
sbb
jns
mov
sub
dec
aas
std
mov
aad
test
out
leave
inc
xchg
push
mov
mov
int
xchg
pop
aam
jl
inc
mov
das
loope
push
aaa
in
jbe
xlat
addr16
sub
mov
inc
sbb
jmp
sub
inc
or
mov
sbb
xchg
fidivr
movs
cdq
movs
jmp
cmp
out
sti
and
mov
mov
push
inc
movs
int
pop
xchg
fcmovne
movs
push
aas
jg
pusha
ret
jno
cmp
out
xor
inc
into
and
jmp
jp
lds
(bad)
dec
push
retf
ja
mov
fisttp
sub
dec
and
push
dec
fmul
cmp
add
xlat
pop
cmc
push
sub
or
or
loopne
fcmovnu
and
or
add
or
loop
jb
sbb
sbb
iret
in
xchg
fnstcw
pop
mov
test
repz
mov
mov
and
pop
ins
pushf
mov
fisub
in
xchg
fcom
xor
xchg
dec
xor
pop
xchg
dec
out
push
jne
nop
mov
xchg
add
out
test
jae
mov
add
cmp
ficomp
mov
mov
push
sub
cmp
jno
sbb
repz
popa
xlat
mov
cli
imul
fnstsw
xchg
ins
cmps
xor
cli
stos
test
jmp
dec
adc
cwde
repz
xor
ja
mov
sub
sbb
mov
jmp
jnp
cmp
fdivrp
inc
jecxz
inc
nop
mov
stos
adc
push
(bad)
or
and
iret
dec
sbb
sar
adc
xor
jp
jp
imul
icebp
or
sbb
je
leave
push
rcl
jp
sbb
out
xor
popf
lock
test
jmp
push
mov
push
test
popf
sub
mov
retf
inc
arpl
jo
ins
mov
push
pushf
or
imul
jle
lahf
test
mov
pushf
sbb
out
mov
xchg
push
pop
xor
pop
dec
jae
sbb
es
cmp
jle
lock
cmps
movs
jae
sbb
mov
ror
mov
add
xchg
fst
dec
adc
mov
arpl
pop
or
xchg
aad
ins
mov
sub
pop
jnp
dec
jle
out
and
push
cmp
imul
pop
fisttp
lods
fdivr
xor
adc
popa
fwait
pusha
inc
mov
call
outs
mov
jb
dec
je
jnp
xchg
stc
jecxz
mov
ins
sub
or
dec
push
(bad)
pushf
jbe
retf
or
jne
pop
xor
xor
sub
leave
lods
cmp
cmp
pushf
jle
xchg
rcr
fwait
sub
dec
cmps
(bad)
cmp
xor
rep
mov
retf
jge
and
cmp
mov
(bad)
stos
scas
push
push
iret
ftst
sahf
test
pop
adc
sbb
test
xor
out
popf
xor
cmp
loopne
or
out
pushf
xor
frstor
mov
iret
add
or
(bad)
es
adc
in
jecxz
mov
mov
jae
dec
out
test
int3
lock
loop
cmp
mov
inc
cmova
cmps
xor
hlt
xchg
cmp
dec
fsubr
dec
pop
inc
push
cld
fisub
mov
cwde
xchg
loope
push
sti
jno
mov
iret
jbe
mov
repz
inc
daa
cdq
(bad)
or
pop
lock
add
push
pop
lock
fisttp
test
enter
or
test
pop
xchg
mov
call
pop
popf
jmp
or
pop
stos
sar
inc
mov
push
jo
jg
imul
dec
dec
daa
mov
jge
test
out
in
and
(bad)
and
xor
pop
movs
call
and
sub
adc
movs
inc
inc
sbb
jg
gs
sub
add
jmp
cmp
dec
and
xlat
mov
dec
hlt
fisub
sub
add
jnp
bound
dec
repz
or
in
and
xchg
mov
dec
sub
add
sbb
sub
or
call
jg
jo
mov
test
out
xchg
mov
das
xchg
mov
in
addr16
neg
test
ret
fisub
pop
out
mov
push
and
scas
sbb
movs
mov
loope
pop
stc
ss
fisttp
ret
cdq
jnp
pop
rep
adc
push
rol
and
neg
dec
retf
inc
out
xchg
call
jno
mov
mov
out
push
adc
stos
jo
mov
mov
mov
outs
in
(bad)
call
cmp
scas
pushf
arpl
popa
rol
jmp
int
mov
lods
mov
pop
sub
mov
stc
xor
add
popf
loopne
cmps
out
bound
xchg
fwait
or
mov
inc
xor
shl
xor
xor
(bad)
cld
jnp
or
pop
jmp
mov
adc
push
inc
clc
mov
xor
xchg
jg
pop
fist
cmp
sub
pop
add
and
int
xchg
clc
sub
push
xor
ja
fs
inc
add
jg
std
sub
xor
cmp
ins
dec
popa
inc
inc
lahf
cdq
shl
idiv
sahf
push
cmp
mov
loop
test
daa
rol
movs
fisttp
fistp
sub
mov
je
xlat
cmps
xor
cmp
scas
xchg
push
stos
push
(bad)
not
pop
mov
nop
loopne
dec
sub
sbb
repnz
xor
adc
outs
push
pop
xor
mov
adc
ret
mov
mov
gs
adc
ins
mov
movs
cld
cmp
or
xlat
dec
sbb
dec
mov
neg
and
inc
xchg
ds
out
in
xchg
(bad)
adc
clc
pop
and
imul
cmp
xchg
out
(bad)
sahf
inc
push
lock
popf
add
and
stc
mov
pop
xchg
or
aas
dec
iret
aaa
xchg
inc
inc
leave
mov
mov
adc
add
call
xchg
iret
mov
cld
cwde
inc
pushf
pop
or
cmps
hlt
out
in
inc
push
out
scas
(bad)
inc
adc
mov
and
dec
movs
mov
pop
adc
cmp
mov
cmps
add
mov
adc
iret
or
(bad)
mov
adc
retf
sbb
dec
or
test
and
popa
leave
je
sti
push
jecxz
and
cmp
pusha
add
pop
mov
jecxz
out
jp
popf
data16
xor
pop
jae
lds
mov
loop
ins
push
int
pushf
adc
cli
(bad)
cli
sub
push
mov
jge
adc
movaps
xchg
(bad)
push
cli
mov
cmp
(bad)
mov
fstp
(bad)
sub
or
(bad)
mov
push
push
mov
cli
add
mov
cmps
dec
or
or
dec
jl
mov
xor
(bad)
mov
fldz
push
mov
xchg
mov
push
imul
in
pop
jns
sub
cli
fistp
push
jge
mov
or
arpl
xor
xchg
pusha
and
fwait
push
jbe
adc
push
shr
je
(bad)
mov
pop
mov
or
pushf
fnstenv
cmp
dec
(bad)
aas
adc
mul
test
dec
mov
loop
sahf
shl
jae
mov
in
xor
pop
add
mov
or
xchg
in
xchg
imul
arpl
mov
dec
or
ss
push
cdq
mov
add
sub
aam
call
sub
popa
fidiv
in
inc
mov
fsub
push
sub
cmp
hlt
into
lds
mov
xlat
sbb
int3
xor
movs
loope
and
jge
lea
xchg
xor
jge
push
sbb
sahf
nop
fs
ret
inc
jle
adc
dec
in
xor
jnp
cld
arpl
mov
jae
aaa
shl
shl
dec
sub
push
lods
mov
aad
push
xor
loopne
fnstcw
mov
mov
int
and
mov
dec
pusha
xor
ret
mov
mov
sbb
pop
push
addr16
jl
leave
mov
(bad)
xor
call
xor
cmp
mov
pop
push
cmp
push
aaa
mov
cmps
mov
(bad)
xor
das
ss
add
arpl
or
outs
dec
jle
inc
xor
mov
addr16
sar
aas
mov
sahf
cmc
pop
in
xchg
mov
pop
repnz
test
jg
adc
or
sahf
(bad)
call
shr
push
adc
in
sar
leave
ss
push
pop
js
lods
movs
pusha
loope
xor
mov
in
xlat
sahf
sub
pop
pop
shr
cmps
push
div
push
sub
in
jecxz
pop
sbb
cld
lods
dec
push
and
popf
mov
scas
xchg
dec
adc
(bad)
pop
pop
cmovs
test
mov
adc
mov
rcl
cs
sub
out
movs
sbb
mov
dec
pop
mov
fldlg2
pop
imul
push
jae
movs
sbb
icebp
aam
push
fild
imul
sbb
adc
cmp
cli
clc
arpl
out
mov
imul
jns
or
jle
je
stos
and
add
inc
jle
xor
mov
inc
lods
lds
pop
hlt
inc
sub
sub
sbb
adc
inc
pusha
jo
pushf
sbb
outs
xlat
jmp
dec
(bad)
cmps
mov
arpl
aas
(bad)
jecxz
mov
pop
inc
loope
xor
mov
mov
push
pop
movs
aad
inc
imul
aam
ret
popa
cmp
loope
mov
jo
ret
lock
dec
mul
div
scas
das
mov
mov
xor
lock
(bad)
dec
call
inc
into
pop
push
cdq
(bad)
sti
cmp
sbb
add
jmp
xor
mov
ficom
cmp
xchg
push
out
outs
mov
xor
xchg
pop
add
and
gs
lods
inc
and
clc
int3
sahf
dec
xlat
cmp
dec
imul
push
vpshufhw
lahf
ss
sub
mov
cmp
pop
clc
sbb
cmp
cmp
push
mov
or
add
shl
out
mov
pop
or
mov
movs
push
scas
inc
fisttp
sbb
pop
jne
push
out
ret
aas
sub
dec
lods
inc
gs
push
push
jle
sbb
cli
fimul
add
ret
adc
and
test
and
movs
out
push
xchg
add
push
adc
inc
mov
adc
pushf
sar
xor
xchg
pop
mov
jns
and
fnstsw
imul
mov
ja
lock
repnz
neg
cmp
push
xchg
(bad)
mov
add
fcmovnbe
fidiv
jge
xchg
daa
daa
sbb
outs
lea
jle
mov
ficom
add
out
hlt
mov
cld
daa
mov
stos
dec
in
jl
inc
sbb
int
out
retf
aas
jnp
xchg
lods
lods
adc
dec
mov
jmp
lods
lods
lods
cmp
jo
sbb
push
cmc
out
(bad)
pop
adc
push
cs
lahf
cmp
dec
jl
and
dec
xchg
inc
pop
lods
(bad)
mov
jne
cwde
iret
in
jo
mov
sub
cmp
mov
inc
adc
shr
ror
outs
aad
hlt
das
add
or
lahf
retf
repnz
xchg
adc
lds
(bad)
aad
mov
or
xor
push
rcr
(bad)
ss
xor
pop
int
dec
push
lods
call
gs
jb
mov
ins
xchg
movs
xchg
sti
mov
shl
imul
dec
dec
jmp
add
pop
push
mov
pop
dec
push
cmp
sub
jb
sbb
popf
retf
xor
jo
jp
enter
sub
ja
pop
fisub
sbb
sbb
out
aad
xchg
cmp
call
xor
inc
mov
retf
xchg
iret
outs
out
inc
adc
xchg
mov
mov
fstp
ss
adc
lods
jl
and
adc
popa
(bad)
pop
pop
arpl
and
sbb
ins
and
imul
mov
mov
or
lahf
sbb
rol
ret
xchg
fcomi
add
add
test
xor
push
jae
ins
add
fld
add
aas
push
int
or
jp
sbb
xor
mov
imul
jg
data16
lods
pop
inc
fcomip
mov
data16
dec
sbb
sub
loop
dec
dec
imul
mov
inc
push
(bad)
pop
dec
inc
jl
dec
xchg
xor
pop
mov
inc
fisttp
sub
pop
or
and
shl
push
fisubr
fild
mov
cmps
sub
out
jno
arpl
or
push
pusha
scas
mov
in
repnz
jne
lahf
scas
js
into
loopne
ins
loopne
hlt
adc
iret
clc
(bad)
std
nop
xor
outs
mov
cdq
mov
pop
cdq
xor
icebp
xchg
mov
xor
mov
(bad)
sub
and
mov
mov
inc
scas
inc
pop
push
mov
dec
or
retf
push
sub
shl
in
cdq
cmp
sub
cmp
jae
pop
push
xchg
(bad)
cmc
add
xchg
sti
push
inc
cld
dec
jmp
nop
mov
int3
push
ss
in
jno
ins
fwait
in
ret
dec
out
outs
sbb
test
push
cmc
imul
out
mov
adc
xchg
dec
xor
retf
in
adc
int
pop
(bad)
lahf
pop
scas
aaa
hlt
nop
jbe
jl
mov
pop
pop
cwde
jno
in
sub
cdq
mov
loop
test
dec
and
push
(bad)
xchg
and
(bad)
cs
xchg
jmp
add
aas
cli
sahf
int3
(bad)
push
loopne
mov
movs
test
push
stc
out
cld
fs
cli
mov
loop
mov
jp
jns
mov
pop
mov
sub
div
jb
aaa
mov
(bad)
mov
scas
or
into
jns
cld
cmps
mov
fadd
mov
je
push
imul
test
sahf
pop
push
aas
stos
daa
or
mov
dec
ins
mov
aas
mov
xor
and
or
xchg
adc
js
popf
jb
jecxz
int3
mov
sbb
inc
add
sti
fcmovne
xor
shl
lock
fsub
pop
pop
or
or
gs
inc
dec
cmc
cdq
and
mov
mov
popf
out
gs
pop
and
icebp
mov
cmp
pusha
mov
push
aad
gs
pusha
cmp
sbb
pop
loop
sbb
cmp
ret
arpl
out
xchg
mov
inc
mov
cmps
sub
push
mov
jecxz
inc
push
jae
fadd
das
rol
push
call
mov
fsub
mov
aas
repz
sti
in
(bad)
inc
sub
ret
scas
push
out
in
lods
lock
xchg
jmp
in
pop
or
sub
cdq
ss
pop
popa
lods
mov
stos
adc
mov
pop
push
mov
std
aam
or
(bad)
fnstsw
test
in
mov
imul
or
repz
shl
and
hlt
mov
dec
push
xchg
sub
cmp
push
(bad)
repnz
out
int3
mov
ret
mov
or
test
push
out
sbb
jno
cmp
enter
push
pop
out
setnp
fwait
jns
call
cmps
add
cmps
add
mov
mov
test
ins
and
xchg
inc
popa
adc
pop
xor
add
(bad)
aas
adc
jmp
(bad)
fmul
push
lahf
adc
loop
ds
dec
repnz
pop
mov
mul
daa
(bad)
and
int
data16
push
aam
scas
not
fimul
fstp
dec
pop
inc
in
daa
push
sahf
(bad)
jmp
cwde
aad
cli
jno
sub
sbb
pop
out
(bad)
mov
rol
sub
pop
adc
inc
mov
xor
mov
mov
xor
fisubr
jns
pusha
or
popa
mov
mov
outs
aas
mov
mov
test
or
jg
nop
out
sbb
daa
sbb
or
sar
mov
push
add
cmps
je
(bad)
cs
call
movs
pop
xor
aaa
jmp
out
std
push
mov
jg
or
adc
div
push
inc
jb
xchg
jo
int3
adc
dec
adc
xchg
jle
es
or
cs
jno
f2xm1
mov
dec
mov
adc
and
xchg
sahf
sbb
(bad)
lods
pop
hlt
push
or
aas
rcr
enter
mov
or
sahf
outs
pop
in
adc
sub
(bad)
push
and
cmp
daa
jmp
xchg
sub
jge
mov
mov
xchg
jmp
mov
and
dec
inc
pushf
mov
cs
adc
xor
cmc
aas
sahf
dec
icebp
jp
dec
jns
jb
xor
mov
dec
fsubr
jb
fdivr
mov
loope
mov
dec
pop
lods
scas
xlat
inc
into
loopne
mov
clc
test
imul
pop
and
out
pop
out
out
fwait
jge
popa
frstor
xor
xchg
or
iret
push
sub
ror
xor
lea
ss
out
push
xor
jne
rol
int
gs
fsub
pop
pop
dec
mov
out
stos
fldcw
loope
test
cmp
inc
loop
dec
jo
push
jb
stc
or
mov
mov
pop
adc
dec
mov
inc
pop
rol
sbb
pushw
sar
mov
outs
ror
xchg
punpcklwd
mov
or
cmp
mov
or
pop
imul
and
mov
cli
cmps
(bad)
mov
push
jmp
or
retf
pop
nop
imul
sub
jae
fwait
push
arpl
and
adc
or
repnz
sbb
mov
push
test
sub
stos
adc
out
mov
xchg
inc
out
sar
push
cli
mov
int
adc
retf
xchg
lds
and
movs
imul
cs
(bad)
cmc
fcomp
add
cld
xchg
cmp
imul
adc
xor
mov
and
xchg
data16
icebp
sub
jae
leave
mov
popa
int3
mov
(bad)
sbb
push
ins
aad
push
jno
jg
paddsb
cmps
retf
or
imul
xchg
cmp
(bad)
cmp
pop
fld
sub
pop
rcr
cwde
imul
cmc
hlt
pusha
enter
mov
jae
mov
jecxz
pop
push
inc
cmps
inc
aas
and
cli
adc
dec
sbb
add
jge
sti
leave
add
push
sbb
stos
mov
(bad)
mov
fwait
jne
sahf
lods
xchg
push
pop
ins
xchg
inc
ja
jge
and
pop
mov
fs
cmc
or
xchg
or
loopne
or
ret
aas
or
mov
mov
and
hlt
pop
jns
test
addr16
out
fnstsw
(bad)
movs
push
mov
rcr
jmp
adc
je
sub
cmp
jge
xchg
push
and
xchg
pop
xchg
and
out
sbb
jmp
out
add
jle
cwde
mov
jmp
ins
push
loop
xchg
int3
int
aad
xchg
jg
cmc
std
xchg
ret
push
fs
xor
jmp
out
movs
jmp
adc
(bad)
xlat
mov
jnp
gs
inc
jmp
pop
cmps
aam
push
aaa
push
pusha
pop
sar
addr16
pusha
mul
mov
adc
pop
ja
ins
stos
jmp
add
(bad)
push
inc
pusha
pushf
adc
mov
out
pop
or
mov
call
add
sub
adc
xor
cmp
jle
loop
fs
adc
jp
test
jae
sub
cmp
mov
cmps
fs
jne
xor
xor
cld
fld
mov
xchg
js
or
xchg
pop
(bad)
pop
das
ss
adc
call
add
outs
and
jmp
lea
fwait
addr16
sbb
retf
sub
inc
aam
stos
les
xor
push
mov
aam
cld
push
call
rcl
inc
sbb
sbb
rcr
push
repz
ror
push
and
ror
sub
mov
pop
push
pop
mov
mov
mov
das
push
cmp
mov
out
sbb
xor
shl
sti
mov
cmp
dec
(bad)
fmulp
sbb
jno
into
inc
retf
mov
cwde
jno
retf
pop
push
xchg
inc
(bad)
daa
(bad)
stc
out
loopne
xchg
sbb
clc
loope
jnp
mov
addr16
cmp
pop
dec
call
fld
pop
dec
enter
clc
dec
ret
xor
push
rcr
cmp
mov
inc
xchg
dec
adc
or
sub
pop
jle
jge
mov
in
scas
rol
cdq
jns
sbb
gs
adc
cmp
adc
hlt
pop
pop
sar
xor
cdq
cmp
imul
sbb
outs
out
mov
cwde
push
mov
push
mov
call
sbb
retf
dec
cmp
mov
cmp
mov
push
cld
nop
jbe
sub
hlt
xchg
pop
dec
lods
stos
dec
rcl
pop
sub
push
pop
daa
out
lods
xchg
in
lds
sbb
push
addr16
xchg
xor
jo
mov
fstp
push
jns
movs
(bad)
test
mov
mov
pop
dec
xor
adc
into
mov
sbb
jmp
push
in
pop
inc
sahf
clc
sbb
push
push
or
mov
loope
push
inc
ss
mov
inc
mov
lods
repnz
and
dec
cmps
aaa
sbb
cwde
cmp
sbb
rep
xchg
mov
(bad)
xor
push
jg
sahf
jge
mov
and
inc
or
push
dec
push
fsub
jg
lds
mov
mov
jo
outs
dec
sub
dec
aas
xchg
jl
push
sub
push
mov
dec
daa
stos
mov
sbb
popf
push
in
les
sub
xor
and
arpl
imul
aaa
cmp
rcl
or
and
jnp
or
mov
ror
sub
jg
(bad)
push
mov
sub
pop
xchg
adc
adc
jecxz
int3
in
cdq
jns
mov
mov
adc
or
(bad)
mov
das
jp
xchg
stc
(bad)
dec
lods
fdiv
push
and
fimul
jmp
ins
call
test
mov
jns
imul
addr16
fcom
cmc
push
rol
aaa
out
pop
into
adc
enter
cmps
xlat
arpl
mov
mov
jecxz
jns
gs
shl
and
outs
movs
mov
jle
idiv
popa
test
xchg
shr
stc
push
hlt
mov
rcr
pop
shr
and
call
test
es
sbb
nop
pop
xchg
clc
repnz
push
nop
ss
ja
mov
sti
fisttp
loopne
enter
pop
jne
pop
jecxz
test
cmp
fstp
call
add
imul
cmps
popa
inc
mov
(bad)
xor
sar
int
inc
mov
mov
ds
sub
repz
adc
push
test
nop
pop
fnstenv
pushf
pop
fsub
ret
mov
cmp
push
gs
pop
xchg
pop
mov
add
mov
jb
dec
mov
out
cwde
add
xor
push
cmp
lods
pop
sub
jp
sub
ins
mov
aam
je
sub
fiadd
mov
inc
mov
movs
arpl
dec
dec
ins
xchg
pusha
jo
lods
cli
stos
into
push
push
or
adc
add
mov
and
mov
retf
and
push
adc
in
rcr
jo
mov
cmps
stc
push
mov
push
mov
dec
adc
scas
test
xor
mov
cmp
xor
ins
pop
mov
cmp
sbb
in
repz
imul
dec
outs
push
pop
clc
xor
dec
sar
std
sub
lahf
cmps
hlt
shl
mov
pop
jns
call
imul
dec
idiv
jae
mov
inc
inc
jb
xchg
xlat
(bad)
aas
adc
fwait
inc
sub
xchg
jb
mov
movs
in
cld
cmp
dec
ins
in
(bad)
lds
movs
cmp
ror
fnsave
jne
into
test
add
jmp
jle
addr16
adc
pop
mov
retf
and
adc
or
xchg
dec
or
mov
(bad)
int3
mov
repz
sbb
and
push
and
inc
mov
sub
jne
ds
push
aad
movs
inc
les
fisubr
loop
iret
sbb
fsubr
pop
mov
push
mov
or
scas
dec
inc
sbb
scas
adc
(bad)
sbb
pop
xor
fdivr
shr
push
mov
or
fiadd
jb
das
sbb
push
retf
stos
add
cmps
out
clc
clc
out
jecxz
add
retf
popa
sbb
xor
pop
mov
ins
xor
push
cdq
lea
(bad)
into
or
mov
faddp
add
mov
adc
popf
out
or
sbb
movs
scas
fist
int
rcl
cmp
push
xchg
inc
pop
jg
xchg
pop
push
test
imul
add
dec
cwde
fs
cmc
rcl
imul
ja
mov
shr
xor
es
xor
fsub
add
push
xor
adc
mov
xchg
shl
push
pop
dec
sub
add
test
ja
jo
mov
pop
mov
pop
imul
xor
ins
(bad)
fnstsw
pop
gs
test
add
out
iret
xor
lahf
pop
retf
push
add
mov
jmp
pop
(bad)
ins
pop
sub
lods
sub
add
mov
call
add
shr
mov
and
push
push
aad
jmp
je
sbb
stos
sub
sbb
(bad)
xchg
out
loopne
pusha
sub
sbb
or
mov
mov
cs
cli
bnd
mov
fidivr
xchg
jl
je
inc
sbb
sub
test
movs
push
xchg
fmul
jp
ins
movs
shl
xlat
xchg
pop
rcl
ret
movs
and
push
popa
add
es
push
push
xlat
xchg
loope
adc
mov
adc
jnp
out
add
or
mov
mov
push
cmps
mov
and
xor
js
cmp
push
loopne
sbb
adc
dec
dec
setg
ins
inc
test
daa
call
or
mov
inc
xchg
cmps
sub
push
push
cmp
and
sbb
fidivr
jmp
in
inc
arpl
sub
sub
rol
jne
mov
cdq
mov
pop
dec
popa
fbstp
aaa
sti
pusha
fnstcw
cli
outs
push
mov
pusha
pushf
les
push
jae
cmp
push
cmp
xchg
fwait
or
mov
mov
popf
loopne
arpl
sahf
outs
movs
clc
inc
ins
out
mov
sub
leave
mov
mov
cmp
xchg
gs
sub
(bad)
rcl
loope
adc
pop
clc
fmul
nop
test
jo
pop
xchg
frstor
retf
cmp
or
popf
repnz
cdq
out
repnz
sub
xor
into
fild
int
xor
or
jle
fimul
lahf
sar
xchg
ja
popf
ja
loop
repz
jmp
ss
adc
jge
and
sbb
out
xchg
jg
dec
retf
xchg
jecxz
pusha
dec
in
std
xor
repnz
bound
push
test
fbld
add
jl
add
in
outs
jp
nop
cmp
inc
add
and
mov
xchg
dec
jns
jno
ficom
call
dec
enter
mov
cmp
sbb
cmp
(bad)
mov
cmp
inc
test
popa
shl
xchg
and
pop
push
adc
and
std
test
leave
dec
test
adc
jl
and
out
push
jae
movs
sbb
mov
mov
out
cmc
pop
sbb
mov
test
xchg
mov
pop
shl
mov
add
dec
popf
cmps
cmps
sbb
scas
adc
je
into
shl
fmul
mov
jp
test
fsub
es
clc
sbb
(bad)
pop
cdq
xchg
dec
hlt
add
xchg
jmp
pop
pop
nop
lahf
cmp
xchg
shr
jo
mov
jle
fdiv
xchg
dec
sbb
push
add
aas
dec
dec
scas
fdivr
fdiv
push
shl
lods
sub
fsub
inc
jae
test
inc
inc
ja
shl
lea
mov
push
cdq
dec
inc
mov
ja
ret
cmps
sbb
out
sub
nop
jne
je
xor
xchg
rol
cmp
push
mov
cmp
mov
daa
nop
ret
cwde
cmp
push
fist
pop
loop
push
fdiv
test
(bad)
mov
mov
call
push
xchg
call
adc
mov
retf
pop
lods
inc
retf
cmp
fs
aad
ret
rcr
pop
sub
inc
add
add
and
aam
add
add
xor
out
inc
into
pop
and
in
je
jge
mov
out
test
retf
daa
jns
jae
loopne
xchg
movs
movs
les
js
fwait
dec
pusha
mov
adc
xchg
xor
cmp
test
inc
mov
or
xchg
or
mov
push
sub
stc
mov
pop
sub
iret
fsubp
pushf
xor
icebp
lock
cmp
sbb
jp
xchg
pop
jl
sub
cmps
cs
xchg
dec
pusha
push
and
bound
icebp
pop
sbb
in
cmps
sub
popf
dec
cld
pop
out
inc
movs
aad
mov
shr
or
pushf
xor
push
pop
cwde
call
mov
jmp
(bad)
scas
pushf
(bad)
mov
sbb
sub
or
shl
inc
in
lods
(bad)
fist
(bad)
mov
(bad)
pop
retf
bound
sbb
test
and
pop
outs
fisub
mov
push
out
gs
movs
clc
mov
xchg
ins
dec
out
dec
(bad)
fld
add
cdq
mov
xchg
cmp
or
imul
les
xor
imul
or
push
data16
push
aad
js
nop
fimul
mov
mov
jecxz
adc
dec
mov
repz
jae
sub
inc
pop
mov
outs
xchg
pop
leave
ds
leave
cli
or
add
retf
int3
xchg
dec
fadd
jg
xchg
ja
and
iret
in
sub
loope
ins
imul
and
(bad)
mov
loop
cmp
ds
mov
jns
push
cs
jmp
cmps
mov
cli
mov
or
popf
repz
div
pop
add
xor
xor
stc
rol
test
lods
xchg
pushf
cmp
jle
jbe
sar
jecxz
sub
call
adc
pop
dec
xor
dec
pop
ins
scas
mov
xchg
out
push
nop
dec
(bad)
lea
jp
cdq
pop
imul
push
pop
mov
and
retf
mov
mov
ret
js
push
std
mov
cli
loop
adc
or
or
xor
ja
(bad)
fldenv
add
stos
push
mov
sub
popa
adc
push
dec
cdq
cmp
xor
and
data16
int
popa
leave
xor
pop
pop
in
jmp
and
sub
push
loopne
(bad)
aad
pop
pop
xor
mov
call
fiadd
retf
popa
mov
jmp
and
jmp
xlat
(bad)
loopne
xor
sbb
int3
mov
lods
xor
sahf
stos
jg
pop
js
pop
inc
jne
sub
std
stos
(bad)
in
jnp
loopne
(bad)
mul
jns
rcl
mov
or
mov
lea
jmp
jns
jp
adc
lods
pusha
mov
test
int3
fs
cmp
or
shl
pop
pop
mov
das
loop
mov
test
pop
lods
ret
mov
mov
loopne
xchg
ins
xchg
add
loop
jge
xor
inc
mov
or
out
retf
stc
dec
aas
jnp
test
ins
sbb
retf
jno
inc
and
pop
out
inc
call
and
push
add
popf
cli
and
jnp
inc
and
ins
std
ret
jmp
leave
pop
lea
mov
lahf
inc
aad
sub
sub
push
mov
fdiv
dec
int
sahf
fs
icebp
sub
iret
mov
dec
jo
leave
mov
call
mov
mov
adc
push
or
pop
mov
jnp
fnstsw
out
mov
inc
sub
mov
cmps
xor
jne
sbb
pushf
outs
jmp
sub
retf
and
xchg
pop
pop
loope
iret
cmps
scas
and
mov
push
outs
push
xlat
xor
mov
push
mov
mov
pavgb
and
inc
dec
ds
dec
js
stos
cli
repz
aaa
into
pop
loopne
rcr
push
jbe
cwde
mov
in
cmc
cs
pop
pusha
add
lahf
xchg
xor
push
xor
jmp
aam
adc
mov
mov
push
pop
xchg
enter
jno
mov
imul
enter
dec
int
adc
push
mov
addr16
jo
(bad)
jno
loop
jp
das
mov
bound
add
push
nop
stos
rcl
(bad)
dec
idiv
mov
out
je
or
mov
or
push
aad
aaa
addr16
cwde
rcr
scas
push
xor
ror
mov
(bad)
test
rol
inc
mov
inc
or
ror
retf
lods
mov
pop
leave
int
inc
ins
push
retf
loope
sub
call
dec
mov
inc
dec
xchg
out
dec
mov
repnz
dec
loope
or
cmp
ins
leave
adc
rcr
xor
js
sbb
add
repnz
into
dec
scas
jge
ror
ret
xor
sbb
movs
mov
xor
mov
mov
mov
dec
aas
dec
out
out
add
mov
ja
cwde
pop
mov
push
inc
pop
sbb
add
mov
ret
or
mov
repnz
gs
inc
ins
xlat
jg
sbb
fmul
xchg
push
icebp
xlat
das
lea
loopne
push
les
loopne
dec
or
imul
xchg
scas
add
add
rcr
dec
sti
inc
les
pop
dec
outs
cmp
adc
add
jno
or
mov
add
push
or
push
cld
not
mov
push
and
or
cmp
inc
sbb
xchg
jg
fdivr
mov
or
add
adc
dec
aad
xor
loope
gs
test
popa
movs
inc
inc
cmps
mov
push
movs
xchg
sti
test
(bad)
adc
aaa
sbb
cli
jp
in
movs
push
or
mov
add
test
ss
mov
jo
data16
stos
xchg
xchg
div
xor
push
aad
pusha
adc
mov
sbb
(bad)
mov
jl
xchg
push
(bad)
je
frstor
rcr
add
xlat
jl
fnstcw
int3
and
rol
mov
popf
mov
mov
mov
cmp
mov
arpl
test
mov
sbb
pop
cmp
repz
pop
int3
js
adc
or
jb
stc
add
cmp
movs
mov
xor
lea
xor
sbb
daa
loopne
dec
(bad)
int
jne
(bad)
iret
dec
cvtps2pd
test
cmp
cdq
ins
test
and
retf
mov
aad
dec
cwde
and
push
fcomip
enter
sbb
sub
jge
pop
fidiv
shl
mov
(bad)
jno
pop
jmp
sar
inc
xchg
or
cdq
pop
or
(bad)
mov
in
xchg
or
(bad)
fwait
cli
pusha
call
xchg
mov
call
mov
push
pop
or
jmp
adc
dec
adc
jb
pop
(bad)
out
pop
cmp
std
sub
and
mov
rcr
fadd
pop
jl
cmp
inc
add
into
mov
mov
pop
sbb
adc
mul
cs
jo
in
sub
mov
adc
xor
push
mov
je
fdiv
les
(bad)
enter
repnz
test
xchg
adc
fcom
fnstenv
pop
jo
out
and
out
sub
loop
dec
or
cld
xchg
fisub
pusha
cmp
scas
rcl
ror
data16
mov
cmps
jnp
lods
mov
movs
inc
inc
in
call
dec
rcr
repnz
push
neg
xor
lahf
ins
push
and
dec
mov
ins
hlt
data16
push
imul
ds
outs
cmp
sub
xor
(bad)
pop
and
and
inc
mov
jnp
jmp
int3
pop
push
jle
push
in
pop
mov
mov
adc
xchg
(bad)
push
(bad)
ins
repz
mov
popf
push
iret
mov
sbb
or
lock
(bad)
push
xchg
retf
cmp
sbb
pop
shl
aas
stos
loop
jbe
push
adc
outs
dec
imul
mov
nop
test
add
and
xchg
lock
add
imul
ins
push
mov
pop
add
hlt
pushf
mov
and
ss
dec
dec
xor
leave
xchg
dec
and
in
add
cmp
test
xlat
and
xlat
jg
bound
and
cmp
out
mul
loope
enter
or
loop
push
loope
outs
imul
adc
out
call
and
icebp
and
adc
in
push
jno
leave
fs
(bad)
sub
push
mov
add
pop
mov
dec
fs
fnstenv
add
and
push
loop
test
or
aad
les
in
int
aad
popa
sbb
fdiv
lods
clc
addr16
out
xchg
ror
arpl
rcr
stos
push
sbb
cmp
push
xchg
popa
stc
mov
loop
(bad)
aam
jno
(bad)
mov
dec
or
lods
call
jecxz
notrack
lods
sub
sub
mov
loope
pusha
repz
dec
inc
xchg
sbb
pusha
push
xchg
pop
adc
addr16
jge
mov
jns
into
dec
push
dec
sahf
mov
loopne
mov
or
ins
sub
mov
inc
dec
push
jo
mov
xor
and
ss
xchg
sbb
nop
call
shr
jg
add
mov
cmp
sahf
arpl
les
or
outs
cmp
loopne
jmp
daa
mov
mov
sbb
cld
mov
add
fiadd
inc
cmc
gs
ffree
push
pop
enter
xchg
lahf
sub
popf
test
mov
js
or
int3
cmp
(bad)
dec
enter
cdq
push
jg
call
mov
stos
jo
xor
cwde
test
lods
mov
clc
or
ss
imul
aaa
dec
cli
or
cmc
imul
je
and
sub
mov
mov
xor
mov
aam
jae
shr
lods
push
sahf
lock
nop
aam
fnstcw
mov
jmp
push
push
inc
mov
jl
jecxz
inc
add
movs
test
cmp
arpl
mov
and
inc
add
es
lds
out
sub
mov
push
jnp
inc
retf
jecxz
pushf
mov
mov
inc
dec
ja
sub
aam
and
je
pop
pop
dec
aam
jo
push
mov
loopne
pop
cmp
div
or
and
nop
es
cmp
add
ins
(bad)
inc
mov
not
mov
not
jmp
fs
fcom
fdivr
push
lock
sub
push
test
mov
dec
popa
pop
mov
mov
ds
xor
sbb
int
sub
int3
and
ja
mov
jno
xor
(bad)
jle
rol
inc
mov
mov
ror
enter
jp
es
es
test
add
push
or
mov
scas
add
loope
lds
mov
sub
mov
mov
add
popf
jle
fcmovu
mov
imul
jb
add
xlat
mov
mov
push
and
ss
xchg
cmp
xchg
lds
sub
int
push
aas
pop
push
(bad)
aad
push
mov
enter
dec
sub
mov
ins
mov
xchg
pop
pop
test
sub
xor
or
(bad)
lds
(bad)
out
and
mov
and
repnz
xor
popa
sbb
pop
bound
dec
pop
fisttp
outs
int
sub
fidivr
icebp
mov
icebp
adc
push
stos
mov
movs
mov
xor
loopne
repnz
mov
jo
xor
popf
dec
sbb
add
adc
adc
or
or
sub
mov
shr
sub
or
ret
retf
pop
test
stos
cli
cld
cmp
sub
iret
xor
xchg
mov
mov
in
(bad)
inc
repz
push
mov
pop
loope
pop
aad
in
mov
test
iret
movs
fcom
scas
add
add
shl
(bad)
in
int
fst
xchg
mov
aas
nop
fnstsw
mov
sbb
rol
test
mov
enter
cmp
ins
lock
jne
lods
fidiv
add
mov
xlat
es
mov
inc
test
xor
mov
popa
and
push
adc
push
cmp
sbb
fstp
and
fst
sti
cmp
sbb
lods
loop
or
add
jg
shl
xor
cmp
mov
pop
mov
xor
add
(bad)
or
bnd
and
xor
xchg
jmp
je
pop
sub
out
cmp
stos
jmp
cmc
hlt
add
dec
mov
add
test
xchg
or
out
sub
sub
cmp
mov
mov
mov
out
push
mov
add
mov
iret
mov
(bad)
mov
sti
call
inc
sbb
xchg
or
xor
mov
movs
hlt
and
mov
stos
cmp
ret
and
fsub
sub
jg
push
(bad)
sbb
mov
ret
(bad)
mov
retf
shl
mov
xor
adc
call
push
mov
jb
(bad)
loope
mov
ds
fidiv
gs
jmp
xchg
pushf
dec
jmp
leave
ror
ret
loope
sub
sub
(bad)
into
or
or
or
daa
js
call
pop
in
shl
cld
ins
pop
fimul
ss
pop
xchg
dec
jb
ja
(bad)
icebp
xchg
mov
stos
loope
iret
cli
lds
movs
mov
(bad)
push
js
les
and
jb
push
sub
out
pushf
adc
mov
sub
fidivr
aam
lods
and
or
hlt
ret
daa
push
in
mov
inc
dec
fild
aam
aad
ror
cmp
jno
pop
cld
repz
and
mov
fnsave
aas
mov
jno
pusha
mov
jmp
jns
mov
jno
mov
sub
or
push
sbb
std
xor
stc
xor
mov
out
xor
and
call
retf
test
dec
xchg
sub
jmp
call
pop
ror
cmc
pop
js
aas
test
test
inc
out
repz
push
cli
ret
sar
into
cmp
push
xor
mov
dec
sbb
ins
sbb
sti
sub
bound
push
xor
mov
stos
repz
test
jbe
mov
ds
add
or
in
add
stos
mov
aas
sbb
aad
jmp
es
mov
xor
cmp
mov
dec
cmps
lea
xor
jnp
stc
retf
or
push
es
and
ins
push
mov
aam
dec
and
sahf
out
inc
pushf
add
icebp
add
iret
xor
dec
inc
out
adc
lahf
sbb
add
enter
fcomp
jmp
fxch
xchg
jns
mov
movs
xchg
aam
cmp
dec
jl
add
nop
aaa
dec
out
nop
nop
or
xor
mov
test
das
in
arpl
jb
movs
je
or
inc
retf
mov
cmp
xchg
pop
aam
ss
sbb
pop
pop
jbe
fimul
mov
sub
sbb
rcl
jmp
jmp
shl
scas
pop
xchg
mov
aas
and
pop
xchg
adc
add
dec
sub
xor
lods
inc
or
jnp
xor
add
pop
adc
test
jmp
dec
xchg
js
aaa
dec
loope
mov
and
cld
aas
in
dec
call
mov
stc
or
lods
xchg
push
add
(bad)
or
pop
aas
add
fild
cmp
cmp
jno
ins
in
push
shl
in
std
cmp
sbb
out
and
movs
sbb
fldcw
dec
xor
pusha
jecxz
mov
dec
jg
test
or
sub
xor
jle
out
mov
jno
movs
int3
pop
inc
(bad)
mov
mov
in
jo
std
mov
mov
pop
cmp
cmp
push
or
xor
xchg
stc
(bad)
inc
push
mov
dec
jnp
mov
imul
hlt
fild
mov
test
call
ins
pop
jp
pop
lea
mov
(bad)
inc
mov
adc
dec
jns
bound
test
(bad)
dec
sti
push
mov
rep
push
(bad)
test
mov
pop
inc
mov
inc
push
add
jb
outs
jns
mov
or
mov
std
cmp
or
mov
retf
pop
cdq
loopne
jg
cmps
xchg
sub
mov
adc
push
in
dec
test
movs
cld
mov
push
loop
and
call
(bad)
pop
inc
jno
and
fdiv
test
xchg
and
hlt
inc
imul
je
and
test
jae
movs
test
cs
lock
jmp
fnsave
sbb
and
mov
(bad)
ds
(bad)
fistp
xchg
push
vhaddps
add
push
sbb
or
inc
push
data16
and
add
out
mov
add
bound
(bad)
pop
lock
retf
adc
es
div
es
test
loopne
leave
pop
lds
dec
jne
(bad)
push
fstp
movs
retf
xchg
xchg
addr16
sbb
push
mov
inc
xor
push
(bad)
mov
test
xchg
and
aaa
rcr
jno
loope
inc
scas
sub
sbb
push
cs
mov
pop
pop
pop
sub
mov
sub
mov
push
movs
add
inc
jae
out
xor
pop
stos
cdq
mov
pop
xchg
mov
call
add
ins
jecxz
push
cwde
scas
mov
lods
xchg
mov
loope
data16
or
xchg
dec
cmps
ds
cli
loop
pop
push
mov
adc
push
inc
and
xchg
inc
jae
ss
in
mov
xor
fistp
movs
sub
and
scas
jecxz
jbe
add
cmps
not
fnstsw
lds
sahf
ins
mov
cmp
sub
mov
jmp
in
mov
xor
mov
je
sbb
mov
jo
aad
call
les
pusha
xchg
lea
jmp
inc
lahf
mov
fistp
and
fsubr
sbb
(bad)
adc
movs
xlat
sar
fucom
sbb
shr
adc
fwait
test
dec
es
xor
and
imul
cli
sub
(bad)
cli
xchg
ja
outs
mov
lods
test
adc
xor
add
stos
dec
adc
(bad)
in
test
or
sbb
fst
mov
call
mov
(bad)
ds
cmp
pop
xchg
js
inc
inc
adc
out
or
cmps
pop
popa
dec
popf
mov
or
mov
or
stos
(bad)
and
sbb
and
sub
cld
mov
pop
es
imul
sub
adc
fcomp
sar
in
ds
mov
gs
dec
inc
push
add
xor
inc
test
push
push
pop
test
(bad)
jmp
sar
add
addr16
in
fbstp
test
call
mov
pusha
mov
mov
adc
push
mov
call
mov
test
inc
call
xor
int3
inc
mov
dec
add
and
mov
mov
inc
pop
xchg
cmp
fldenv
pop
adc
dec
pop
cwde
mov
mov
ret
pop
adc
popf
pop
sbb
fldenv
pop
jecxz
push
xlat
pop
pushf
inc
mov
jmp
test
loope
xchg
inc
and
repnz
fsubr
jnp
xor
out
sahf
shr
retf
ror
iret
xlat
lahf
imul
push
mov
out
mov
jmp
dec
idiv
jae
mov
xlat
mov
push
jae
lock
pusha
jns
loope
jecxz
jae
push
shr
mov
and
xchg
pushf
sub
int
sub
dec
sbb
xchg
fisubr
inc
test
xchg
imul
out
int
clc
test
mov
rol
push
sti
cdq
jns
iret
daa
jne
sbb
jmp
loopne
dec
pushf
cdq
addr16
div
mov
jle
retf
sub
or
leave
fsub
lock
(bad)
daa
dec
aad
adc
rcl
mov
push
les
call
stos
fdiv
es
and
and
or
test
scas
inc
in
push
pusha
add
cmp
sahf
pop
xor
dec
pop
neg
sub
pop
mov
inc
add
push
out
(bad)
test
and
nop
call
scas
push
das
jno
test
jo
jno
adc
int
sub
sbb
inc
mov
ret
pop
data16
jo
push
ja
or
mov
push
push
arpl
pop
clc
mov
inc
repz
pop
cmp
outs
and
mov
mov
push
xchg
mov
xor
lds
pop
pop
fcom
adc
push
jmp
and
pop
sbb
inc
out
sub
in
pop
(bad)
mov
adc
iret
jae
jp
scas
and
add
leave
dec
mov
inc
test
neg
loope
sub
jmp
bound
xor
or
(bad)
dec
sub
(bad)
push
jo
in
movs
mov
jns
mov
cs
add
sbb
sub
adc
sbb
adc
and
cmp
cmp
jl
data16
mov
sbb
xchg
rcl
icebp
pop
ins
mov
enter
(bad)
scas
xchg
sahf
mov
inc
mov
les
jge
imul
add
pop
dec
test
mov
sar
xchg
dec
neg
xchg
fdivr
dec
cli
mov
pop
cwde
mov
in
mov
mov
hlt
inc
clc
sbb
mov
arpl
retf
(bad)
test
push
out
call
cmp
inc
es
popf
mov
sub
lods
xor
retf
int3
xor
jo
mov
adc
xchg
nop
dec
fdiv
jns
mov
add
lods
add
aaa
leave
lods
fmulp
cmp
add
rcl
or
jno
adc
inc
and
repnz
iret
in
in
int
mov
xchg
mov
lock
adc
cmc
div
movs
xchg
retf
or
test
add
nop
loop
xchg
(bad)
fdivr
sbb
aas
fnstsw
stc
rcr
cmp
cld
add
mov
inc
repnz
out
int
jnp
stos
push
ds
addr16
push
loop
adc
jne
ret
lock
ror
stos
dec
mov
retf
das
(bad)
ins
cs
into
pusha
xor
xor
mov
xor
imul
mov
fld
add
out
clc
loopne
inc
xchg
jle
loopne
and
lods
jns
inc
in
lods
retf
xor
xlat
jg
retf
in
or
lahf
jne
not
mov
ret
scas
sbb
mov
stos
stos
add
ret
lods
cli
(bad)
ficom
and
fnstsw
xchg
xlat
mov
movs
mov
rcl
ins
or
fsub
cli
stc
and
ins
or
jmp
stos
neg
mov
loopne
hlt
jmp
addr16
xor
ret
jp
sub
sub
jb
sbb
adc
(bad)
and
(bad)
adc
(bad)
xor
pushf
inc
in
fst
cwde
jne
inc
repnz
push
js
lahf
push
adc
sbb
pop
pop
pop
jo
shr
ins
je
or
pop
jae
gs
call
out
and
cdq
xchg
addr16
sbb
addr16
xor
loop
push
jl
xor
mov
sub
sar
inc
gs
sbb
(bad)
mov
test
(bad)
es
add
mov
fidivr
scas
mov
cmp
je
enter
(bad)
xor
jp
arpl
push
sbb
mov
pushf
cmc
ss
and
pop
cmp
cld
cmp
push
dec
scas
xor
sahf
xor
movs
pop
ins
jnp
and
cmp
xor
xchg
pusha
sub
dec
and
daa
or
mov
xor
ds
inc
jno
pop
icebp
ds
fistp
lsl
rol
pop
jae
lea
dec
ror
xor
sbb
rol
xor
sub
adc
xchg
sub
push
lods
pusha
jo
out
(bad)
mov
add
(bad)
jge
into
adc
jo
xchg
or
adc
pop
enter
jecxz
popa
dec
call
je
adc
hlt
in
cmc
xchg
sbb
jne
jl
dec
or
sbb
das
repz
icebp
enter
pop
push
pop
mov
sbb
aas
inc
int3
stc
(bad)
fisub
aad
xchg
push
mov
adc
in
fs
mov
add
push
adc
push
sbb
mov
cmps
cli
sahf
pop
nop
loopne
out
sbb
adc
ss
sub
adc
jp
jp
cwde
mov
mov
push
push
mov
lds
mov
stc
ret
and
jp
or
addr16
adc
add
les
mov
shl
add
ins
rcr
push
inc
lea
out
loopne
mov
push
in
xchg
lahf
xchg
and
mov
neg
and
jle
lahf
xor
mov
stos
addr16
out
adc
mov
imul
(bad)
js
or
aad
add
neg
mov
and
or
ins
mov
fs
push
mov
stos
adc
bound
add
pop
inc
scas
int
fild
movs
aad
push
sbb
mov
jge
jae
aam
jecxz
push
(bad)
add
pusha
jo
push
dec
jb
pshufw
dec
sbb
es
jle
sbb
loopne
stc
aas
and
lea
xchg
sbb
add
jae
sti
icebp
and
in
out
std
mov
inc
pusha
mov
arpl
and
cmps
repnz
and
lods
push
or
ds
pop
ficomp
mov
imul
cmp
pop
arpl
mov
gs
(bad)
mov
int3
popa
call
movnti
add
iret
rcl
inc
ss
push
clc
jae
push
(bad)
test
dec
lea
fadd
jp
mov
push
test
inc
jg
aas
imul
adc
scas
enter
mov
sbb
cmc
xor
xchg
and
out
xlat
push
xchg
xchg
dec
test
push
rsqrtps
stos
jmp
lods
shl
adc
xor
xchg
pushw
movs
in
into
pop
in
mov
cwde
sbb
mov
and
push
xchg
cmps
(bad)
sub
sahf
push
adc
movs
retf
lds
sub
and
inc
inc
and
xor
or
je
or
ss
pop
and
pop
jle
popf
popf
adc
cmp
or
xchg
adc
fbstp
loop
jo
movs
ja
xor
test
(bad)
sub
movs
cdq
aaa
fwait
dec
xchg
and
lea
xchg
cli
fstp
dec
mov
adc
sbb
shr
(bad)
movups
push
xchg
fadd
mov
int3
xchg
push
mov
dec
or
inc
dec
movs
add
or
pop
aad
push
xchg
mov
jbe
and
pop
aaa
daa
xchg
scas
cmp
icebp
iret
nop
cdq
loopne
cmp
mov
gs
mov
xor
or
clc
sar
pop
or
std
pop
jle
jg
cmp
cmp
inc
jne
and
mov
add
sub
mov
imul
adc
inc
pop
or
jge
mov
and
adc
test
imul
sub
(bad)
add
sbb
jge
stc
xchg
inc
inc
call
sub
jo
lods
(bad)
xchg
push
and
ret
push
(bad)
retf
pop
aam
adc
in
mov
outs
loopne
adc
ret
ins
pop
out
enter
push
mov
mov
xchg
aad
(bad)
mov
aas
mov
mov
outs
into
iret
stc
mov
add
(bad)
mov
mov
bound
ds
data16
mov
pop
lods
scas
fistp
sar
ss
scas
aad
push
push
arpl
mov
inc
cdq
and
adc
pop
sub
inc
or
cmp
sbb
lock
xchg
xchg
sbb
retf
dec
jmp
push
fild
sub
mov
dec
mov
xchg
stos
pop
in
sub
ret
and
lods
pop
pmulhw
adc
inc
call
fsubr
lds
je
jo
sahf
ss
add
inc
retf
dec
aaa
push
dec
ds
xlat
lahf
adc
scas
push
mov
xor
xchg
push
sbb
fmul
in
sub
sbb
cmp
(bad)
test
pop
xchg
stos
cli
cld
inc
push
int
or
hlt
(bad)
xor
test
rcr
pop
mov
(bad)
loop
xchg
lds
or
rcr
adc
add
cmp
ins
sahf
bound
sub
lods
or
dec
out
cmp
ss
jbe
mov
movs
mov
push
rcr
stc
mov
aaa
test
jp
add
jno
cmp
inc
add
xchg
fistp
popf
xchg
rcl
stos
xchg
jb
sub
arpl
dec
mov
sbb
in
or
xor
push
fcmovnbe
mov
mov
dec
cmp
repnz
scas
dec
dec
xchg
add
adc
cwde
mov
ficom
cmp
mov
xor
mov
cdq
mov
xor
sub
icebp
push
retf
ror
inc
xchg
jmp
std
cmp
call
xchg
mov
out
out
je
sub
sub
fdivr
inc
push
fistp
jmp
xchg
call
loopne
push
mov
fmul
div
add
mov
repnz
mov
popf
fs
ss
(bad)
imul
mov
or
ret
iret
xchg
xchg
(bad)
div
inc
test
test
ins
adc
add
mov
out
shr
xlat
scas
jmp
and
jecxz
movs
inc
js
retf
(bad)
push
jnp
(bad)
ja
(bad)
in
call
bound
in
xor
sbb
jmp
data16
test
xchg
xor
mov
dec
pop
scas
inc
hlt
pop
dec
gs
cmps
je
jb
call
push
mov
loop
push
dec
cmp
ret
popa
les
add
lods
mov
lock
cmp
add
nop
mov
sbb
and
data16
pop
jae
loop
ds
stc
push
push
push
loop
pop
imul
mov
or
push
adc
clc
mov
psubsw
cwde
cmps
(bad)
or
leave
push
mov
dec
or
sbb
stc
adc
fst
mov
(bad)
cs
stos
aas
push
mov
popa
cwde
ds
push
pop
sbb
ret
and
xchg
dec
xor
xchg
test
in
bound
ins
inc
add
push
and
(bad)
or
jae
jl
enter
jae
int
xchg
adc
dec
mov
fsubrp
or
add
push
in
sub
gs
(bad)
push
cmc
or
push
retf
idiv
xlat
push
imul
cmp
fnstcw
dec
mov
es
mov
inc
dec
sbb
fdivrp
fisttp
jmp
or
jecxz
cmc
popa
sbb
mov
xchg
add
add
ds
gs
gs
loope
pop
mov
mov
icebp
call
or
fmul
cmc
jle
dec
lods
cli
shl
xor
jns
cs
pushf
mov
shl
out
pop
inc
and
leave
retf
adc
mov
mov
add
add
cmp
inc
data16
leave
xor
sbb
das
jb
std
test
mov
test
and
int3
leave
jnp
fisttp
mov
lahf
ss
stos
cmp
fs
out
ss
push
bound
push
into
mov
pop
mov
dec
iret
mov
pop
xor
sub
inc
(bad)
rcr
retf
push
jo
jge
cmc
push
and
iret
sar
push
lock
hlt
dec
pop
mov
cmp
inc
(bad)
aad
cmp
fiadd
imul
aas
shr
xchg
push
xor
es
fmul
adc
loope
xlat
and
das
mov
bnd
ins
jo
pop
pop
push
stc
dec
sub
or
test
dec
arpl
(bad)
mov
sbb
leave
and
shl
inc
in
sbb
cmp
repnz
push
mul
cmp
pushf
jge
mov
in
push
jmp
add
pop
mov
int
sub
add
adc
faddp
lock
lods
stos
shl
dec
sbb
neg
lea
ins
cmp
popa
sar
imul
call
fmul
mov
and
or
jno
pop
or
rcr
cmp
cli
xchg
jbe
and
mov
xor
pop
sub
sbb
xor
mov
ret
sbb
imul
fstp
fwait
sbb
push
dec
lahf
out
xor
dec
loopne
mov
mov
arpl
je
repnz
(bad)
lds
ret
ret
sti
retf
cmps
call
call
add
mov
rcl
and
and
aas
out
sub
je
cmp
loope
imul
add
out
and
sahf
and
ss
sub
fs
dec
repnz
lods
fsub
stos
push
jb
add
xchg
and
inc
push
pop
jae
fdiv
xchg
int3
sub
adc
(bad)
xor
xchg
movs
ret
cmp
pop
mov
mov
dec
retf
sbb
cwde
adc
(bad)
sub
cmp
mov
call
ret
xor
js
push
dec
shl
div
sbb
(bad)
not
jmp
push
mov
inc
fcmovnbe
xchg
arpl
pop
mov
jg
or
xchg
sub
ja
loopne
and
sbb
dec
add
add
sbb
das
sbb
sub
sbb
jo
jb
push
mov
aad
xchg
fild
icebp
retf
xor
push
or
mov
jbe
sbb
repz
mov
call
xchg
inc
ins
inc
cmp
hlt
int
push
test
ret
(bad)
icebp
sub
(bad)
pop
mov
cmps
in
jmp
jb
or
fdivrp
popa
or
cmp
pop
scas
mov
mov
dec
inc
xchg
in
fs
bound
or
push
push
mov
aad
loope
pusha
int
adc
mov
adc
loope
rol
popf
(bad)
and
in
pop
test
inc
(bad)
jp
mov
jnp
sub
enter
mov
jb
xchg
mov
sbb
arpl
adc
movs
xor
push
mov
(bad)
in
sub
fwait
cs
in
and
add
adc
push
mov
fistp
fsubr
mov
mov
cwde
xchg
aad
jb
or
mov
(bad)
push
pusha
pop
mov
shl
(bad)
int3
es
pop
fs
fwait
mov
popf
ret
pop
stos
mov
out
xchg
add
mov
out
mov
fstp
mov
jle
lods
sahf
push
add
push
aas
fs
int3
add
ins
cmp
or
push
xor
or
mov
retf
jmp
inc
pop
fidivr
sbb
es
(bad)
shr
test
dec
loop
icebp
shl
jo
call
clc
cli
(bad)
shl
jo
popa
inc
mov
imul
call
push
aad
aaa
mov
cmp
outs
pusha
pop
pop
jne
nop
loope
jnp
lock
xchg
sbb
cmp
cmp
inc
in
dec
into
into
pop
push
push
in
jmp
mov
push
arpl
into
mov
data16
hlt
xor
out
stc
in
jae
pushf
inc
fidiv
cmp
ret
jmp
or
iret
or
test
or
sub
adc
cmp
popa
stos
mov
shl
cmp
xchg
pop
hlt
fs
dec
loop
or
add
pop
dec
push
retf
fiadd
inc
stc
call
or
mov
mov
cs
repz
rcl
push
mov
add
fst
out
int3
in
sub
(bad)
xchg
popa
out
repz
in
rol
(bad)
mov
ror
sub
fucomp
dec
sub
xchg
xor
out
not
push
adc
push
test
div
jns
clc
icebp
mov
sti
(bad)
cmp
pop
ret
out
adc
push
shl
mov
pop
and
div
mov
mov
jno
repz
(bad)
(bad)
scas
add
outs
cli
loopne
sbb
adc
mov
pop
jmp
loop
pop
fucomip
lock
push
test
scas
sahf
adc
addr16
mov
xchg
mov
dec
fldcw
pusha
mov
aad
xchg
repnz
fwait
es
ja
pushf
lods
sbb
inc
das
movs
ja
rol
mov
pop
push
ret
cmps
iret
mov
fs
or
xchg
and
lea
jo
inc
mov
xor
out
mov
in
adc
inc
pop
inc
cmps
out
stos
fidivr
test
push
ret
jb
hlt
jno
xchg
xchg
cdq
dec
sbb
or
or
sbb
cmp
ss
in
xchg
mov
and
cmps
xchg
mov
arpl
inc
sub
sbb
add
mov
or
retf
jg
cmp
push
popa
cld
loope
adc
push
sti
loope
pop
adc
shr
shr
mov
adc
stos
scas
mov
mov
jmp
idiv
std
ror
pop
test
repz
dec
jnp
cmps
cmps
(bad)
cmp
dec
add
inc
push
fdivr
mov
push
aas
jmp
push
mov
shr
les
inc
inc
jp
dec
xchg
xor
mov
stc
cld
iret
dec
iret
sbb
xchg
ds
sub
not
js
std
mov
xor
fld
fsubr
cwde
add
inc
xchg
dec
leave
jae
pop
adc
gs
jg
out
movs
out
push
xor
aam
xchg
push
mov
jnp
jp
outs
push
or
(bad)
add
pop
jl
adc
js
and
lahf
jbe
and
fbld
or
lock
sti
mov
cmps
fidivr
fst
shl
xchg
imul
fidiv
fimul
(bad)
pop
cld
imul
loope
dec
mov
add
mov
and
daa
nop
push
leave
push
mov
jo
repnz
ret
sub
cwde
data16
mov
mov
into
or
in
mov
out
sub
mov
ds
push
lahf
jb
inc
push
pop
fs
pop
push
imul
(bad)
pop
jnp
sti
es
fincstp
sub
add
das
sub
dec
lahf
pop
inc
dec
rol
out
outs
mov
mov
mov
idiv
adc
(bad)
leave
pop
pop
push
adc
mov
mov
lods
mov
pop
pop
and
(bad)
dec
jns
cmps
add
aas
or
mov
pop
mov
jge
push
sbb
scas
xchg
or
xor
aad
ret
and
out
mov
mov
in
rcl
pop
arpl
out
sbb
cmps
frstor
test
cwde
xor
popa
adc
je
scas
wrmsr
ret
jp
in
hlt
sbb
and
ja
or
xchg
sbb
stos
mov
mov
fnstcw
sub
cmp
dec
mov
stos
js
scas
mov
imul
jp
push
mov
sbb
and
(bad)
ror
js
push
dec
pusha
xchg
das
or
or
adc
je
xchg
push
aaa
push
pushw
sub
call
imul
rol
sbb
cmc
outs
cmp
pushf
pushf
rol
add
sbb
push
pop
or
mov
xchg
dec
daa
and
cmp
(bad)
imul
push
std
dec
add
sub
cld
popf
sub
mov
fdiv
sbb
mov
dec
ins
xor
stos
pop
popa
repz
das
retf
inc
or
pushf
pop
jmp
adc
push
push
in
rol
ja
fimul
cmps
ror
hlt
les
daa
fucom
addr16
in
mov
popa
aad
mov
push
mov
mov
adc
jbe
addr16
add
ja
mov
ds
inc
push
scas
sub
in
pushf
pop
mov
push
call
mov
(bad)
retf
dec
in
cmp
pop
je
(bad)
call
jge
sbb
je
es
jg
mov
scas
xor
push
xchg
mov
pop
outs
outs
call
stos
(bad)
xchg
inc
xchg
cwde
test
aam
enter
ins
scas
and
(bad)
icebp
sbb
fwait
push
fcomip
fmul
push
xchg
sar
iret
mov
(bad)
mov
jae
pop
mov
test
jp
or
xor
push
pop
imul
push
cmps
push
scas
cmps
clc
sbb
rcr
(bad)
gs
mov
push
(bad)
(bad)
aam
ror
repz
jae
adc
movs
pop
mov
int3
call
sub
mov
mov
mov
fisub
cmc
iret
sti
cmp
pop
cmps
test
jb
fptan
(bad)
push
aas
jb
retf
cmps
ja
test
mov
shr
xor
jmp
adc
enter
cdq
cld
cmc
sti
ss
addr16
adc
jle
mov
pusha
inc
adc
rcl
jmp
rdmsr
arpl
pop
out
or
mov
sbb
adc
rol
into
lahf
ss
sub
mov
sub
cld
fimul
mov
fld
jnp
push
push
jo
mul
sub
pop
sbb
mov
scas
sbb
jle
fmul
movs
inc
jae
enter
sub
mov
js
inc
shl
sub
imul
lods
arpl
xor
fucomip
mov
mov
mov
dec
aad
inc
es
call
cdq
cmp
and
jp
inc
call
repnz
mov
mov
icebp
inc
int
xor
test
lods
sbb
cmp
outs
bound
ficomp
retf
sub
adc
mov
loopne
in
mov
movs
push
sar
jmp
call
mov
fdivr
adc
ror
pop
mov
call
jb
mov
cmc
xor
test
mov
scas
dec
out
test
out
mov
hlt
mov
mov
outs
jbe
xchg
mov
js
or
mov
push
sbb
or
ret
inc
add
hlt
hlt
lods
mov
sbb
outs
(bad)
and
ins
xor
add
cmp
sti
adc
jp
mov
and
fidivr
adc
rol
push
imul
rol
sbb
adc
jg
push
(bad)
or
jbe
or
sbb
sbb
out
(bad)
fdiv
ret
ds
pop
mov
jg
dec
inc
fcmovu
scas
dec
loop
sub
mov
aam
into
jl
adc
mov
inc
shr
dec
push
cmps
popf
inc
mov
mov
ins
inc
pop
retf
(bad)
sbb
or
inc
mov
push
add
in
cld
ins
in
jge
sub
push
cli
shl
and
adc
repz
cmps
jb
xchg
dec
jb
sub
fmul
mov
jbe
stc
scas
cmc
push
pop
stc
jbe
sbb
or
scas
cmp
or
leave
mov
loope
sar
aaa
mov
and
xor
pusha
inc
fisubr
mov
sbb
gs
movs
out
cwde
or
test
pop
mov
scas
pop
sar
inc
jmp
push
stos
ins
out
jmp
call
xchg
adc
inc
out
mov
mov
das
pop
test
push
xor
dec
ins
push
sbb
loope
pop
adc
cmps
retf
and
xor
div
adc
jle
pusha
(bad)
jmp
jg
cmp
sbb
mov
fcomp
fwait
aaa
sub
dec
pop
adc
xlat
retf
fidiv
inc
cs
(bad)
int
mov
mov
movs
jbe
mov
add
out
ds
movs
cdq
pop
cmc
retf
aas
aaa
adc
and
cmps
outs
sub
in
shl
bound
ds
cmp
sub
retf
cwde
push
int3
push
xchg
lahf
mov
bound
pop
lahf
popf
adc
sbb
in
and
mov
popf
sbb
pop
jl
cli
dec
outs
cmp
push
fsubr
fdiv
cmp
mov
loopne
aaa
sub
adc
mov
int3
in
or
ror
in
push
xlat
sbb
add
loope
cmc
or
pop
dec
mov
xchg
xchg
xchg
out
ss
and
fxch
xchg
cmp
push
shr
jg
mov
sub
aam
inc
mov
data16
call
push
inc
shl
in
nop
add
sar
(bad)
and
mov
(bad)
ins
push
je
ror
pop
test
sbb
jo
push
icebp
sbb
test
pop
lods
cmp
fild
stos
outs
arpl
mov
dec
enter
jno
or
adc
fld
nop
test
call
pop
pop
stc
jae
aas
jno
shl
pop
mov
out
lock
cmp
paddsw
jbe
fld
out
dec
es
inc
out
es
and
pop
lods
repz
mov
pop
int
mov
mov
mov
rcr
push
mov
dec
pop
push
(bad)
mov
iret
je
sahf
jns
stos
jb
mov
scas
sbb
cmp
gs
cli
xor
pop
imul
ss
jge
pop
xchg
push
(bad)
jnp
mov
mov
sbb
or
and
or
movs
ret
or
(bad)
push
add
mov
mov
push
lfs
inc
js
mov
stos
jg
sbb
mov
call
ins
lock
fwait
pop
and
test
jno
push
(bad)
repnz
outs
mov
or
mov
fsubr
push
das
(bad)
ja
xchg
push
stc
or
icebp
sbb
mov
add
pop
icebp
sub
scas
push
mov
xchg
sub
or
sub
dec
loopne
jp
out
ins
pop
sub
cmc
daa
jb
cmp
aas
fisub
ret
cmp
mov
popf
jmp
gs
inc
call
mov
mov
xor
inc
mov
rcr
popa
cmp
lods
xchg
xor
iret
call
stos
xchg
mov
daa
movs
xchg
out
pop
pop
nop
into
xor
adc
hlt
xor
add
pop
mov
sbb
cwde
sub
xor
adc
and
push
mov
lds
or
out
xor
adc
stos
or
xor
fwait
stc
daa
add
mov
fisttp
xchg
mov
enter
sar
and
ins
mov
sbb
inc
push
jb
dec
scas
imul
shl
add
jg
iret
dec
sbb
or
retf
(bad)
std
sbb
sub
fdivr
mov
mov
sub
push
push
pop
jb
hlt
ret
sub
test
push
pop
jecxz
xchg
fadd
mov
add
inc
jne
dec
push
xchg
ficom
sub
or
shl
shr
dec
outs
cs
inc
or
dec
dec
adc
aas
inc
lea
aad
inc
or
sub
fwait
push
scas
cmp
ja
or
add
inc
loop
jb
xchg
sbb
or
gs
push
shl
or
arpl
test
ja
inc
enter
loop
xchg
fisubr
or
inc
jne
jg
sbb
mov
xor
addr16
in
in
mov
add
fs
clc
jnp
xlat
out
sbb
aas
dec
ds
lea
jne
cli
xor
lods
mov
cmp
jns
and
push
ret
out
and
mov
outs
and
aam
push
jecxz
mov
push
lea
js
push
clc
or
iret
aad
pop
cwde
movs
sahf
inc
mov
and
push
mov
ss
cmp
xacquire
repz
mov
sbb
(bad)
hlt
in
adc
std
dec
daa
test
sbb
addr16
xor
ss
push
push
pop
(bad)
sub
pop
mov
out
(bad)
movs
sbb
xor
(bad)
push
add
out
pop
(bad)
pop
dec
ja
sub
mov
out
jnp
sbb
enter
push
ret
inc
cwde
mov
and
int
loopne
pop
lea
mov
xor
push
aam
jg
jmp
jmp
pop
cmp
ins
js
repnz
mov
call
xchg
jno
mov
outs
mov
pop
(bad)
xor
lods
js
sbb
icebp
xchg
sahf
jnp
adc
add
xchg
or
pop
mov
cli
retf
scas
cmps
arpl
daa
jne
ja
fdiv
push
mov
inc
lock
xor
mov
pop
pop
imul
ins
or
lahf
sar
push
in
gs
or
xchg
stos
inc
sbb
cli
aaa
add
retf
lods
dec
clc
scas
popf
out
idiv
bound
xchg
pop
xchg
adc
dec
(bad)
xlat
pop
fisub
shr
and
lock
mov
idiv
dec
(bad)
pusha
push
cwde
mov
scas
or
hlt
aam
fsubr
push
mov
enter
ja
cmps
pushf
jp
pop
push
int3
repnz
cmp
call
jno
(bad)
ds
jecxz
adc
cmps
punpckhdq
outs
push
sbb
lahf
loope
pop
std
dec
xchg
pushf
(bad)
fnstcw
mov
test
mov
pop
test
cmp
ja
mov
gs
lods
scas
xlat
imul
push
icebp
jbe
out
(bad)
or
jae
leave
pop
(bad)
data16
jmp
dec
sbb
xchg
xor
cmp
jns
out
dec
dec
mov
stc
outs
sub
nop
pusha
les
jnp
es
hlt
das
div
fwait
push
aad
int3
test
sahf
je
adc
or
or
mov
and
test
fdiv
mov
mov
loop
sar
xor
lahf
fmul
add
mov
mov
cwde
fiadd
adc
pop
dec
xchg
jecxz
sub
inc
jnp
push
adc
jmp
push
repz
in
xor
mov
mov
ror
jmp
xchg
stos
sar
pop
rcl
dec
push
jb
hlt
jg
jmp
retf
push
mov
lock
ss
mov
enter
not
test
retf
rol
xlat
jmp
and
pop
inc
dec
ja
hlt
dec
out
vmovddup
ret
and
adc
pop
dec
cmp
sub
sub
jmp
shr
add
cwde
jg
mov
shl
xchg
sub
std
mov
inc
or
(bad)
int3
jo
int
(bad)
sub
je
repz
mov
mov
out
adc
stos
(bad)
loop
sti
mov
inc
int
das
inc
mov
push
arpl
lods
cli
aad
int3
cld
sbb
xchg
ret
(bad)
leave
or
test
jnp
mov
sbb
sub
jnp
cld
add
aad
pop
xchg
movs
mov
jl
popa
or
sbb
es
jno
push
add
ret
jmp
in
jmp
dec
cdq
test
cmp
push
and
mov
(bad)
jecxz
imul
cld
mov
shr
int3
mov
data16
in
push
cdq
gs
test
popa
shl
stc
jns
cmp
inc
popf
mov
aam
bswap
rcr
movs
jbe
out
sti
(bad)
lock
mov
sbb
std
sbb
in
adc
rcr
and
fisub
fdivr
shl
ret
icebp
pop
fbstp
push
mov
div
lods
mov
adc
mov
jmp
shr
mov
aas
mov
cld
and
jb
mov
and
fldenv
cld
(bad)
mov
popa
data16
mov
fild
leave
xlat
sbb
rcl
add
mov
lea
jns
int3
xor
add
aaa
mov
rcr
and
push
out
into
mov
pop
mov
cmps
mov
sbb
cdq
mov
iret
mov
sbb
jmp
inc
jo
out
dec
jg
mov
sbb
iret
stos
cmp
mov
pop
rcl
stc
(bad)
ins
out
jge
or
imul
shr
pop
in
jecxz
jbe
pop
dec
adc
fsub
add
pop
(bad)
daa
gs
mov
xchg
inc
and
lds
fldenv
jp
enter
jl
xlat
sub
minps
mov
leave
adc
mov
iret
jg
inc
and
loop
ja
adc
pop
lea
push
test
sub
shl
sbb
shr
loope
mov
jp
mov
and
push
adc
cmps
xchg
aas
push
retf
or
push
movs
icebp
into
xor
push
mov
arpl
dec
push
adc
mov
push
and
icebp
adc
and
retf
pop
je
fld
popf
sahf
and
jg
repz
es
cmc
mov
push
add
fld
outs
mov
fwait
mov
or
xchg
mov
and
ret
mov
stmxcsr
popa
(bad)
iret
add
pop
mov
rol
add
bound
cmc
mov
ins
das
(bad)
(bad)
(bad)
fsubr
sub
mov
add
cmps
daa
mov
jnp
daa
add
or
cmps
ins
mov
scas
xor
pop
xor
shr
aam
idiv
sub
adc
jne
inc
les
ret
push
dec
ins
cli
scas
xlat
pop
test
mov
or
(bad)
arpl
sti
(bad)
in
sbb
add
das
lahf
push
lea
pop
lods
cmp
repz
add
lds
iret
(bad)
ror
push
repnz
add
shr
pusha
fs
pusha
pop
mov
enter
pop
adc
sub
xchg
jb
repnz
out
mov
or
jbe
pop
out
cmp
jge
ins
inc
cmp
bound
cmps
xlat
pop
in
or
pop
cmp
mov
mov
lea
ret
xchg
push
rcl
aam
ret
mov
xchg
loope
mov
pop
cmp
jae
or
sbb
dec
loopne
sub
aam
ins
fs
pop
mov
iret
dec
into
int3
enter
jbe
mov
push
mov
outs
push
inc
pop
push
pop
fld
cdq
jmp
add
sahf
jmp
and
imul
xchg
in
dec
mov
cmps
pushf
repz
mov
aaa
icebp
cli
scas
(bad)
retf
pop
jnp
or
cwde
mov
add
jne
xchg
ins
mov
dec
jno
xchg
mov
jb
(bad)
call
sar
adc
jb
add
push
sbb
adc
test
fidiv
xor
xchg
dec
daa
das
or
ins
inc
dec
imul
ins
ret
sar
xor
push
xor
add
es
cmp
or
xchg
pop
out
and
dec
mov
push
inc
cmps
adc
sbb
cmp
cmc
lds
inc
in
xchg
pop
mov
or
lahf
das
fist
fwait
iret
and
sub
xchg
dec
jne
sti
or
cdq
pusha
les
loop
jne
inc
sub
jns
cmp
js
jle
imul
xchg
mov
jbe
dec
test
test
sub
sar
inc
mov
loopne
icebp
iret
lea
inc
movs
imul
xchg
mov
ins
mov
std
lahf
xchg
and
aad
push
int3
or
mov
and
pusha
push
mov
pop
and
mov
into
cwde
jae
xchg
(bad)
jnp
mov
lods
sbb
cli
pushf
not
mov
(bad)
aad
pop
(bad)
jo
popa
mov
add
scas
mov
push
sar
xchg
sahf
test
repnz
mov
in
fldenv
sbb
sub
sub
loopne
out
inc
scas
fcmove
mov
scas
(bad)
adc
mov
sub
or
sub
test
mov
xchg
dec
ror
jp
cwde
rcl
jmp
neg
daa
mov
mov
cmp
or
and
cmps
jp
sub
les
cli
push
bound
jecxz
mov
out
inc
cs
push
adc
mov
mov
gs
sbb
push
imul
mov
shl
pusha
xchg
pmuludq
mov
push
push
jecxz
sub
ja
ins
sbb
lods
imul
test
and
xchg
stos
add
lds
rol
mov
add
cmps
jbe
not
push
push
fst
jl
sub
movs
xor
mov
jecxz
in
call
mov
movs
mov
dec
out
pushf
outs
aas
outs
daa
push
mov
cmp
mov
into
fld
mov
loop
lods
pop
js
mov
fdivr
jmp
imul
pop
cmp
ret
fisub
movs
pop
mov
fwait
in
imul
cmp
stos
and
jb
xchg
mov
push
inc
cld
shl
gs
pusha
retf
aaa
imul
or
scas
add
push
fisub
xchg
ficomp
mov
les
stos
popf
lods
xor
popf
cmps
sub
mov
xchg
mov
xchg
test
sbb
jecxz
jbe
ins
sub
xor
jmp
mov
in
jne
stos
add
sbb
push
mov
mov
inc
mov
mov
jno
add
jg
inc
or
or
push
inc
or
cmp
in
in
je
je
ficom
cld
ret
and
mov
lock
sbb
sub
jmp
sbb
sbb
jnp
sub
sti
push
xchg
mov
mov
in
jne
cmps
mov
sbb
cmp
mov
movs
cli
push
icebp
push
add
fucomip
fist
push
out
test
xor
pop
inc
pop
xchg
fcmovnbe
pop
add
mov
je
push
rcr
mov
xchg
sbb
int3
lods
cmps
fcomp
cmp
ins
test
and
pop
or
push
aas
jb
push
add
or
pop
repz
lahf
mov
xor
cmp
inc
pop
dec
mov
(bad)
cs
ret
pop
movs
xchg
mov
mov
clc
and
inc
lds
and
ds
push
shl
cmps
frstor
xor
scas
xchg
aam
sbb
ret
iret
ins
pusha
pop
(bad)
out
cs
sbb
jb
adc
pop
xchg
dec
jge
inc
cdq
fwait
int3
jne
ds
jge
jo
pop
xchg
cdq
jge
push
dec
les
test
add
sub
push
push
pop
into
pop
lea
ins
ds
je
je
mov
outs
xchg
test
aas
push
sub
jecxz
out
dec
les
cmp
add
jmp
sub
or
(bad)
xor
aad
(bad)
(bad)
or
sub
xchg
retf
sbb
setb
addr16
call
mov
lock
pop
in
sub
mov
pop
inc
add
adc
fcom
jbe
xchg
mov
in
and
inc
push
mov
mov
imul
popf
pop
or
rol
mov
sub
(bad)
aas
inc
sbb
ds
mov
push
and
jno
push
cmc
je
lods
xchg
inc
add
jns
xchg
xor
mov
call
mov
push
xchg
aad
stos
ins
pop
add
sti
ret
into
mov
mov
and
loope
imul
push
or
mov
add
inc
inc
cmps
test
jp
call
or
movs
add
dec
inc
push
cmp
xor
cmp
lds
or
ror
jl
and
adc
das
inc
retf
mov
sbb
push
scas
dec
(bad)
xchg
jge
dec
shl
push
push
popw
jne
adc
(bad)
fcomp
push
ror
jmp
jmp
dec
addr16
inc
sar
mov
dec
mov
pop
xchg
xchg
add
(bad)
bound
cmp
lock
lods
movs
hlt
jge
outs
rcr
xchg
cmps
cdq
and
daa
sbb
(bad)
mov
repz
out
pop
mov
mov
mov
jbe
cli
fild
jno
std
inc
cli
fwait
mov
or
or
sub
int3
mov
cwde
mov
pop
xchg
adc
in
push
cmp
retf
mov
add
in
aaa
dec
in
mov
pop
jp
add
or
stos
adc
addr16
stos
imul
call
mov
xchg
pop
push
cmp
adc
push
dec
adc
int
add
retf
dec
sahf
inc
cdq
xor
(bad)
mov
xchg
jl
cdq
xchg
(bad)
cmps
or
sbb
sub
es
mov
inc
popa
mov
movs
jmp
inc
cld
jp
(bad)
cmps
pop
pop
fnstsw
inc
cmps
adc
cmp
xchg
mov
popa
push
leave
fisubr
mov
and
pop
popf
mov
add
popa
jecxz
pop
inc
pop
push
cwde
adc
jg
lds
jbe
sahf
add
or
cs
adc
(bad)
cmps
retf
xor
adc
int
rcl
pusha
dec
push
mov
outs
rcl
mov
xchg
daa
retf
gs
push
es
repz
call
sub
push
ficom
test
aas
push
add
jge
pop
test
ficomp
(bad)
fsubr
js
out
jp
sbb
xor
or
mov
cmp
mov
mov
and
daa
leave
jmp
(bad)
pop
cli
mov
push
push
out
pop
(bad)
loope
inc
loop
xlat
pop
jmp
xor
jbe
daa
cdq
(bad)
aad
jp
push
mov
mov
xchg
imul
mov
out
mov
mov
bound
inc
add
cmp
pop
jae
dec
popf
(bad)
sbb
cwde
dec
hlt
jmp
pop
sbb
shl
or
mov
push
cld
jne
sub
adc
pop
jb
cmp
repz
mov
sbb
ffree
aam
inc
mov
xor
(bad)
cdq
out
dec
push
pop
sbb
sbb
and
inc
sti
lea
jmp
inc
ret
movs
add
mov
int3
mov
nop
gs
test
lds
and
cmps
(bad)
fst
and
or
cmps
inc
retf
(bad)
gs
rol
fdivp
mov
xchg
and
jl
pop
or
pop
jle
stos
jmp
or
loop
xchg
test
push
out
mov
shl
xor
adc
loop
dec
clc
sub
adc
fadd
fstp
push
mov
mov
add
arpl
mov
movs
test
ins
xor
sub
inc
aad
cwde
arpl
test
lds
sub
push
pop
jb
aad
sbb
push
(bad)
(bad)
jl
nop
popa
call
in
push
test
jecxz
movs
fist
cmp
neg
inc
jne
sub
sti
sahf
mov
popf
add
std
xlat
xchg
stos
mov
push
adc
xchg
adc
mov
imul
in
mov
or
cs
stos
shl
pop
stos
xlat
jno
out
xchg
rcl
jnp
imul
hlt
push
fadd
adc
adc
sbb
nop
push
push
popa
or
cmps
enter
mov
sar
add
in
push
clc
pop
stc
aad
inc
jge
sub
mov
cmp
test
(bad)
movs
xor
out
data16
in
cld
out
(bad)
jmp
sbb
push
sar
je
jge
stos
and
jecxz
add
ror
out
shr
stos
inc
stc
or
jl
sub
rcl
push
push
push
gs
mov
sub
cs
ds
push
and
mov
xchg
repz
cwde
rcl
lods
adc
xor
outs
scas
jb
push
sub
add
or
adc
adc
movs
sbb
xor
jmp
stos
pop
or
aaa
dec
test
(bad)
lahf
das
out
mov
mov
les
xor
(bad)
sbb
xor
add
add
inc
jecxz
fwait
stc
cmps
push
mov
shr
inc
test
mov
out
bound
mov
scas
jbe
aam
loopne
xchg
dec
das
mov
addr16
lock
out
fwait
and
mov
xchg
test
cmp
movs
in
xor
aam
cwde
sbb
sbb
test
leave
push
xchg
push
pusha
add
lock
push
pushf
xor
mov
fadd
xor
mov
mov
cmp
jmp
jmp
cmp
mov
retf
cmp
xchg
outs
mov
mov
xor
sbb
mov
add
pop
in
call
jae
pop
into
add
and
call
add
xlat
mov
xchg
mov
mov
retf
out
sar
push
in
fwait
je
and
div
cs
push
bound
pop
or
sbb
dec
sbb
adc
jbe
or
fdivr
push
xlat
xlat
dec
mov
push
icebp
jp
sub
cli
mov
xlat
call
or
dec
cmps
mov
inc
mul
icebp
xchg
pusha
hlt
mov
sbb
loope
push
outs
inc
add
sub
jmp
pop
jno
inc
or
or
jp
test
loopne
pushf
mov
lahf
in
fldcw
mov
sbb
ins
out
(bad)
jne
sbb
enter
aaa
pop
lahf
inc
xchg
mov
jle
xchg
ret
inc
bound
(bad)
rol
xchg
jbe
repnz
mov
sbb
sub
sub
inc
cmp
mov
clc
or
sbb
cmp
fwait
cmp
out
sub
mov
movs
les
(bad)
ja
push
in
push
scas
imul
xor
pop
adc
jnp
xchg
mov
inc
gs
sahf
push
mov
cmp
pop
add
fwait
shl
icebp
sbb
xchg
shr
mov
(bad)
fwait
mov
pop
add
xor
jns
rcl
or
sbb
fst
pop
arpl
pushf
push
add
pop
repnz
add
movs
xchg
les
lea
outs
mov
cs
mov
pop
add
icebp
jp
retf
jo
push
sub
mov
push
inc
enter
pop
xlat
mov
mov
jns
imul
push
cmp
xor
sbb
xor
rcr
mov
jle
sbb
stos
jmp
xchg
mov
pop
add
xor
mov
pop
in
cmps
inc
cmp
add
mov
arpl
icebp
in
sbb
nop
push
rol
sub
mul
mov
into
sub
mov
loopne
push
scas
imul
std
pop
jle
stc
scas
push
inc
hlt
push
test
int
xchg
and
addr16
jp
mov
aad
push
data16
mov
push
mov
clc
shl
push
aaa
mov
mov
retf
push
test
rcl
xchg
dec
jp
ret
xchg
sub
ds
outs
daa
push
adc
data16
inc
loope
jb
xchg
inc
lahf
sbb
jl
into
movs
loop
lahf
pop
inc
push
xor
call
sbb
outs
mov
mov
and
mov
out
into
pop
sbb
pop
test
cmp
cli
icebp
adc
mov
sbb
mov
jg
retf
adc
mov
mov
inc
jnp
arpl
inc
or
inc
movs
push
xchg
pop
jb
js
jnp
sub
pop
ins
out
dec
div
or
popa
mov
fs
mov
mov
or
pop
jp
jbe
test
jl
jge
(bad)
imul
mov
push
mov
inc
cmp
push
lahf
fdiv
int3
out
push
and
loop
retf
dec
add
dec
data16
ret
ret
(bad)
mov
sbb
push
cmp
imul
ret
(bad)
in
pop
retf
or
js
div
test
or
pop
pop
jb
sar
add
jo
xor
pop
push
mov
pop
add
aam
int3
dec
stos
bound
push
call
sub
xlat
ss
leave
cmp
outs
out
and
je
je
fcomp
fist
scas
test
mov
adc
in
in
or
cwde
jne
pusha
fdivr
pop
bound
xchg
dec
adc
fs
lods
jge
pop
mov
std
test
and
sbb
xor
inc
stc
dec
cs
shl
pop
cmp
or
adc
mov
mov
aaa
xchg
addr16
mov
iret
xchg
jmp
add
mov
pop
add
pop
xchg
add
and
es
pop
add
mov
lahf
mov
xchg
in
cmps
mov
or
mov
call
into
mov
fistp
jg
jp
inc
hlt
ret
dec
das
mov
and
stc
xor
cmp
mov
data16
and
ret
xchg
adc
jecxz
sar
and
cmp
adc
gs
test
ret
stos
les
jne
push
push
adc
stos
xor
xchg
or
pop
fisubr
movs
ss
mov
das
call
inc
aas
sahf
mov
test
jg
mov
test
lds
sbb
sbb
stc
scas
sahf
add
pop
mov
push
pop
aas
pop
xchg
stos
mov
shl
je
addr16
icebp
bound
sahf
out
pushf
mov
inc
xor
push
adc
xor
sbb
clc
push
push
cmp
test
fdiv
ja
lods
clc
inc
xchg
add
outs
and
fwait
xchg
xor
push
cmp
sahf
push
xor
mov
ins
add
mov
movs
mov
and
add
icebp
or
shl
mov
int3
push
xchg
fwait
(bad)
es
cdq
fsubrp
dec
pop
pop
in
sub
jmp
je
inc
mov
or
dec
jb
(bad)
pop
ror
push
xor
pop
leave
sar
xor
fucomi
jae
mov
sub
inc
mov
add
gs
in
mov
inc
push
adc
mov
push
sub
ret
cmp
cld
(bad)
mov
(bad)
cmp
push
mov
outs
mov
mov
sar
retf
jne
out
xchg
pop
mov
jbe
xchg
fcomp
in
repz
xchg
mov
xchg
clc
shl
dec
mov
scas
aad
pop
lea
retf
pop
out
mov
inc
xchg
and
mov
sub
out
dec
test
es
jns
cli
lock
sar
mov
in
retf
int3
jno
lds
sbb
mov
mov
retf
push
push
sub
or
dec
pop
xor
mov
aas
push
rcr
idiv
push
enter
sbb
mov
pop
out
cli
inc
jnp
stos
push
add
test
pop
xchg
rol
mov
lahf
lock
mov
cdq
ins
repz
jmp
popa
loope
cwde
shl
mov
pop
stc
jae
sub
int
movs
ss
jns
fadd
xor
pop
int3
lods
mov
mov
cmp
mov
mov
or
scas
xor
rcr
mov
inc
movs
daa
push
sbb
push
(bad)
outs
jmp
mov
pop
cs
loopne
dec
call
outs
jb
cmp
sbb
and
dec
mov
aad
jmp
std
cmc
mov
sbb
jae
out
mov
xor
outs
jb
(bad)
or
ror
push
sbb
pop
out
mov
mov
dec
sbb
popf
xchg
out
xor
add
pop
mov
pusha
push
mov
and
jle
push
mov
mov
and
ins
rol
scas
ror
shl
jge
fadd
pop
(bad)
mov
cld
loop
sub
mov
inc
sbb
sbb
cs
js
jp
cli
and
lea
xchg
cmp
daa
and
cmp
(bad)
pop
cwde
test
fdiv
jmp
aas
adc
cmps
test
or
and
dec
adc
mov
jmp
cs
or
icebp
xor
call
adc
jge
sbb
outs
mov
cwde
lds
push
je
daa
dec
(bad)
fsubr
fnstcw
sub
adc
jmp
inc
sub
push
test
fsubr
aas
popf
clc
popa
or
jnp
(bad)
jmp
pushf
dec
or
dec
sbb
add
mov
sbb
stc
(bad)
adc
loopne
(bad)
(bad)
pop
pop
jno
push
xchg
sbb
aaa
pop
sbb
daa
mov
cs
int
mov
cmp
loope
call
jl
and
ret
std
xchg
push
leave
daa
test
test
fstp
and
or
ins
and
call
iret
jne
cs
cwde
push
je
rcr
hlt
loop
loope
sub
call
cs
sub
loopne
and
test
fcomp
mul
inc
out
push
and
jae
mov
fcomp
jmp
pop
scas
jbe
sbb
fild
dec
ret
xchg
dec
test
jmp
mov
mov
les
jne
hlt
mov
out
sbb
js
cmps
xchg
movs
test
push
lods
stos
pusha
xchg
pushf
loopne
sub
cmp
lods
nop
jl
ror
adc
sub
(bad)
lahf
dec
xor
push
int3
inc
in
push
xchg
push
mov
cmp
xor
pmaxsw
ins
imul
or
adc
sbb
xchg
dec
nop
mov
or
arpl
mov
aam
das
cmp
pop
call
mov
dec
dec
pushf
cmp
mov
xor
xor
mov
retf
mov
mov
jmp
dec
mov
add
jl
fs
push
popa
dec
dec
sub
pop
cdq
cdq
ss
or
and
mov
push
pop
mov
rep
xchg
enter
popa
push
adc
sbb
test
jae
outs
dec
les
(bad)
ffree
pop
sub
cmp
stc
gs
ror
adc
jl
or
in
adc
imul
add
push
and
clc
bound
or
dec
add
cdq
pop
sub
out
stos
jle
lds
mov
std
outs
sub
jo
sub
xlat
push
xor
jmp
mov
mov
rcr
mov
pushf
cli
fcom
idiv
lods
or
pop
fucom
and
and
xor
jle
pop
nop
xor
ret
lods
test
repz
rcr
adc
das
jp
pop
mov
pop
and
jmp
cwde
pop
pop
(bad)
rcl
or
aam
sbb
jge
mov
aas
call
shl
pop
and
call
loopne
xchg
adc
sub
hlt
xchg
inc
dec
adc
pop
dec
adc
xor
leave
pop
or
dec
lds
dec
mov
ror
cli
aam
xchg
sbb
mov
sbb
push
rcl
dec
popa
lock
or
mov
mov
xchg
(bad)
mov
mov
nop
mov
ja
test
dec
sbb
aam
js
xchg
cmovnp
add
mul
jp
std
push
xchg
stos
lods
and
mov
pop
ret
leave
mov
into
out
jbe
cwde
loope
mov
mov
mov
pushf
jg
je
jg
les
sbb
out
sub
rol
mov
imul
lahf
jecxz
jmp
cli
mov
add
call
jbe
out
shl
sbb
mov
dec
int
xor
jne
mov
jne
xchg
inc
fistp
xchg
shl
repnz
xor
jmp
mov
jmp
int3
out
pop
jg
pop
pop
test
popf
fld
push
xchg
(bad)
and
in
jno
retf
xchg
inc
xor
daa
sub
jmp
test
icebp
sub
repz
outs
xor
xchg
out
inc
retf
sbb
or
cmp
leave
stos
mov
adc
fneni(8087
mov
or
cmc
push
cmp
mov
pop
out
jmp
jp
push
nop
cmp
mov
add
inc
shl
cmp
inc
fistp
fadd
sbb
stos
call
es
xchg
std
retf
dec
mov
out
and
or
movs
adc
jge
jo
push
mov
and
sub
(bad)
shl
(bad)
push
stos
movs
adc
mov
es
adc
dec
fs
(bad)
or
loope
cs
(bad)
xor
scas
das
adc
push
cmps
inc
mov
pop
ja
dec
xchg
push
ficom
mov
push
in
pop
cmp
or
in
pop
and
cmp
dec
pushf
xchg
and
pop
call
(bad)
push
mul
das
arpl
fst
add
loopne
test
adc
(bad)
xchg
std
or
adc
inc
dec
call
call
rcr
jmp
pop
inc
cmp
push
pop
icebp
test
xchg
cmp
addr16
xor
ret
push
inc
lods
xor
jg
xor
mov
cmp
pop
mov
sub
cmps
ret
cmps
pop
push
stos
jge
stos
arpl
jb
mov
out
jmp
fimul
into
and
js
test
sub
mov
lds
repnz
fmul
jnp
sub
or
(bad)
mov
std
mov
jecxz
loopne
push
mov
out
(bad)
call
cdq
xchg
frstor
pop
dec
dec
jge
inc
inc
sbb
push
enter
fdivrp
jmp
out
jns
mov
cwde
mov
or
bound
in
iret
pop
jmp
xor
dec
gs
and
(bad)
jg
jmp
gs
ds
pop
shl
repnz
sub
pop
cmp
add
xor
dec
or
jae
icebp
stc
out
addr16
scas
cmps
and
sub
ds
sub
fimul
mov
xor
pop
xchg
iret
push
sar
stos
inc
jle
cvttps2pi
push
(bad)
enter
mov
mov
xchg
out
ins
add
pusha
or
mov
pop
call
cmps
pop
aam
mov
in
and
mul
xchg
sbb
add
popa
jmp
std
movs
clc
jl
sbb
mov
dec
jp
lods
lods
pop
sahf
add
mov
lahf
dec
test
call
popf
sub
xor
dec
dec
mov
sub
aam
arpl
jmp
or
xchg
cmp
pop
and
jp
(bad)
call
rcl
cwde
je
mov
sti
add
test
in
fsub
jne
mov
push
icebp
xor
pop
and
mov
cmps
and
xchg
repnz
clc
mov
rcr
sbb
sub
pop
lods
sbb
or
and
(bad)
pop
fadd
mov
cdq
add
cld
(bad)
push
lahf
ror
push
sub
jle
inc
out
mov
mov
jp
nop
cmp
push
inc
adc
enter
mov
fild
pop
mov
fwait
adc
mov
lods
inc
data16
xor
cs
call
or
push
xor
jne
inc
and
xchg
retf
ins
dec
(bad)
and
jne
mov
out
add
int3
sub
adc
push
mov
in
sub
adc
fcomp
dec
xchg
into
xor
mov
stos
xor
or
push
(bad)
icebp
xor
cli
xchg
pop
nop
sub
out
(bad)
scas
or
push
ror
mov
sub
mov
jo
jg
test
push
pop
jmp
int3
lahf
add
in
mov
xlat
xor
xchg
fsubrp
xadd
retf
sbb
push
xchg
inc
repz
(bad)
sbb
stos
cs
xchg
pop
out
rol
adc
in
xchg
mov
mov
ins
and
push
in
xchg
mov
ret
outs
call
fdivr
call
out
repnz
repnz
mov
dec
mov
std
push
cli
dec
call
add
sahf
push
data16
mov
mov
test
or
dec
jbe
daa
enter
push
mov
dec
inc
outs
gs
mov
outs
ins
inc
and
xchg
imul
adc
aad
xor
mov
inc
(bad)
mov
icebp
rcl
inc
movs
les
mov
xor
sbb
inc
pop
mov
push
je
ror
test
cmp
push
xlat
or
test
daa
jecxz
dec
dec
pop
lea
pop
add
dec
push
push
inc
push
pop
daa
adc
mov
mov
int3
dec
enter
dec
fild
jmp
jmp
push
inc
jmp
push
xchg
enter
mov
cmps
imul
push
loop
test
aad
rcr
pop
es
fcom
jb
je
ja
test
stos
bound
jge
lock
pop
mov
movs
mov
hlt
inc
cmp
lahf
stos
retf
push
inc
call
cmp
gs
or
cmps
mov
stc
test
fwait
lahf
push
push
ja
aad
ror
xchg
fstp
fisttp
inc
jge
dec
inc
pop
push
vcvttps2dq
add
lock
repz
jmp
and
cmp
stc
push
rcl
cwde
and
mov
push
call
es
lock
pusha
dec
mov
addr16
daa
push
mov
jnp
pop
mov
neg
mov
out
cmp
push
mov
in
add
mov
push
repnz
mov
popa
mov
xchg
pusha
pop
fiadd
cmp
cs
int3
sub
stos
dec
test
mov
(bad)
mov
jbe
inc
sbb
push
pop
les
cmp
cmp
movs
stos
fcomp
dec
push
jae
inc
out
in
int
fbstp
cmp
rcr
add
xor
std
push
add
bound
test
xchg
jo
push
push
pop
hlt
popa
pushf
sub
jecxz
cmc
jne
out
and
mov
fcomp
xor
loop
imul
ja
popf
xor
shl
jecxz
pop
sar
or
sbb
or
movs
cmp
adc
mov
call
fadd
imul
stos
addr16
iret
sbb
push
adc
push
mov
cmps
mov
xchg
cmp
int3
mul
inc
das
jle
stos
mov
dec
(bad)
adc
and
push
movs
add
mov
(bad)
mov
or
pushf
mov
jle
sar
jmp
mov
sub
popa
cmp
sub
push
add
jns
push
inc
ins
pop
fiadd
xor
xor
ins
ret
pop
and
mov
(bad)
jns
fisttp
rcl
inc
mul
cwde
xor
in
sub
jbe
adc
mov
sub
add
dec
jo
popf
ds
xchg
cmps
xchg
pop
int
arpl
jecxz
out
mov
imul
xchg
jb
or
ret
add
mov
mov
ds
fidivr
ret
out
jmp
pusha
daa
and
jmp
and
leave
xchg
fisttp
lods
outs
dec
jo
mov
pop
xchg
and
push
push
scas
jae
adc
sbb
movs
popa
mov
sub
or
fs
adc
aam
jp
mov
inc
or
push
dec
mov
xchg
sub
in
mov
lock
arpl
mov
push
ja
sub
inc
ret
jmp
sar
pop
daa
cmp
push
pop
iret
xchg
es
bound
push
pop
sub
xchg
ror
push
fst
mov
mov
leave
adc
xor
dec
inc
jg
jmp
mov
and
test
xchg
xchg
jmp
jmp
dec
add
jmp
push
in
popf
cmp
sbb
mov
repz
lock
idiv
jp
inc
(bad)
repz
movs
lods
mov
addr16
add
jb
shr
xchg
sahf
mov
mov
push
sbb
add
mov
ins
or
repz
fstp
aad
test
adc
iret
fs
js
pop
addr16
mov
lea
and
inc
(bad)
mov
jae
add
xchg
(bad)
loope
scas
(bad)
sub
or
sub
stos
(bad)
sti
sub
and
jne
sbb
inc
push
adc
jg
ficom
repz
mov
rcl
ins
jmp
adc
out
xchg
pop
leave
xchg
jnp
lock
xchg
cmp
xchg
retf
push
stc
push
jae
mov
xchg
cmps
xchg
push
jne
jp
mov
push
out
cwde
mov
cs
les
stos
test
aaa
out
sbb
adc
fidivr
iret
fild
ins
push
shr
test
lahf
pusha
mov
ins
test
xchg
test
fist
push
hlt
xor
aam
cli
cmc
xor
mov
pop
pop
fstp
xchg
mov
int
push
cmp
movs
jle
cmps
cmp
and
into
or
sub
loopne
adc
out
xor
jae
or
dec
fwait
call
ins
mov
enter
pop
fldcw
xor
sbb
xor
push
add
add
mov
adc
pop
pop
movs
das
stc
cmp
lods
mov
loope
mov
into
mov
jb
retf
arpl
ds
and
mov
inc
sub
repnz
retf
sti
xlat
je
loopne
test
lds
push
mov
mov
push
gs
jmp
mov
jo
push
leave
mov
popa
push
xchg
ret
sar
int
ret
(bad)
sti
add
gs
lock
jge
dec
imul
mov
jg
popf
out
xchg
lods
jp
retf
xor
jne
mov
nop
cmp
hlt
mov
enter
loopne
add
cmps
xchg
ficomp
lock
pusha
lahf
cmc
jnp
dec
mov
inc
arpl
push
xchg
push
loope
xchg
fs
cmps
les
push
xchg
int
movd
dec
ds
dec
xchg
sar
call
(bad)
sbb
inc
lds
jno
mov
loopne
repz
push
outs
mov
and
xor
ror
sar
shl
call
or
shl
ftst
rol
lahf
data16
lahf
retf
daa
test
or
sbb
js
mov
pop
int
cmp
stc
push
adc
and
inc
jle
or
dec
dec
rcl
xor
lods
cdq
pop
outs
stc
mov
pop
dec
fadd
inc
mov
dec
adc
and
inc
pop
(bad)
lds
clc
adc
sub
imul
adc
jbe
das
or
or
adc
pop
daa
mov
ds
mov
ins
loopne
mov
out
jg
add
rcr
jp
dec
(bad)
sar
sar
idiv
adc
add
jle
in
hlt
adc
jne
(bad)
jecxz
into
scas
pop
or
xchg
or
add
sahf
dec
or
call
or
dec
dec
jb
dec
xchg
cmp
fisubr
xor
inc
add
dec
scas
hlt
scas
sub
jmp
mov
seta
movs
aad
fwait
retf
sub
repnz
das
push
pop
scas
xor
cs
pop
jo
or
xlat
pop
inc
xor
ja
or
inc
repz
xor
shl
cmp
cmc
xchg
icebp
test
arpl
outs
pop
xchg
cdq
dec
push
fstp
cld
and
cmps
fs
dec
mov
push
in
ds
jp
jne
sahf
aaa
into
pop
fcmovnb
(bad)
cmp
mov
xchg
adc
jae
retf
pop
aad
cs
xlat
in
loope
mov
outs
push
mov
mov
mov
fisubr
mov
pop
pop
mov
loop
je
jmp
sub
data16
push
xchg
fistp
xor
jmp
xchg
xor
jmp
outs
push
mov
fmul
push
scas
mov
inc
leave
scas
or
ss
jbe
leave
inc
(bad)
rcr
mov
push
xchg
loopne
or
cmp
mov
outs
fidiv
pop
pop
push
push
gs
shr
fwait
sbb
(bad)
lods
ds
out
cmp
scas
test
xchg
stos
lock
adc
cmp
xor
cwde
cmps
jno
gs
pop
jg
movs
sub
pop
(bad)
cli
inc
push
retf
mov
pop
retf
jb
(bad)
xchg
add
loope
sbb
push
enter
aaa
or
pop
ja
inc
and
pop
mov
dec
loope
out
xlat
pop
jo
push
fild
mov
xchg
mov
xchg
jo
sbb
inc
push
xchg
push
cmp
push
test
es
je
daa
hlt
fucom
and
push
mov
or
aam
xchg
out
mov
mov
cdq
and
and
into
push
cmp
xlat
(bad)
xor
or
xor
inc
adc
sti
mov
pop
and
mov
popw
mov
push
dec
fldl2t
push
pop
popa
cvttps2pi
or
clc
cmps
or
or
int
or
in
rcr
sbb
(bad)
neg
out
jmp
repnz
adc
and
in
mov
lods
in
xor
clc
pop
jge
loope
outs
jnp
ss
inc
aaa
popf
mov
and
adc
jb
fiadd
(bad)
mov
les
xchg
rcl
shr
pop
leave
jge
test
inc
pop
push
ret
mov
and
je
imul
cmp
xor
adc
out
inc
lods
loop
out
cmps
dec
pusha
push
mov
add
adc
push
adc
enter
addr16
adc
int3
sub
pop
adc
jmp
pop
push
movs
xchg
dec
cwde
sub
pop
loopne
fnsetpm(287
cmp
jg
cmp
cwde
sbb
xor
loopne
cmp
adc
ret
imul
cmp
(bad)
cwde
jae
cmp
add
in
cmp
add
das
js
stc
movs
pop
add
ror
rcr
or
ret
cli
call
mov
fidivr
dec
pop
mov
ret
sbb
sbb
lods
push
not
cmp
mov
jmp
and
pop
push
inc
ficom
adc
and
pop
sbb
jg
sub
jmp
push
mov
add
adc
movs
jae
in
pop
xor
rcl
bound
nop
push
je
add
or
lahf
sub
push
out
dec
(bad)
cwde
push
cmp
loopne
push
adc
cmc
xchg
mov
sbb
and
and
mov
sbb
lds
mov
mov
and
and
mov
(bad)
bound
inc
pop
dec
ror
and
div
mov
jns
and
xor
push
mov
popa
mov
mov
stos
in
jb
jg
jecxz
and
(bad)
cld
(bad)
call
or
mov
adc
frstor
push
mov
or
xchg
adc
inc
inc
xchg
les
je
cs
retf
pop
or
push
jp
xor
retf
sub
pop
sbb
sub
add
es
pop
(bad)
(bad)
in
sub
test
sbb
inc
shl
jle
loopne
pusha
and
or
mov
loopne
and
sti
xchg
iret
xchg
cmc
ds
fisttp
cmp
and
and
push
cmp
mov
mov
movs
add
jno
xor
mov
mov
xchg
mov
mov
mov
inc
adc
movs
(bad)
(bad)
mov
das
test
pop
pusha
mov
mov
inc
mov
loopne
rcl
xor
push
mul
pusha
push
fisttp
lock
retf
add
pop
dec
nop
push
mov
inc
clc
xchg
xchg
push
in
sar
and
inc
and
ds
scas
and
mov
sahf
imul
hlt
movs
ret
(bad)
jmp
xchg
xor
mov
iret
cmp
aad
and
pop
add
jge
gs
call
dec
add
adc
or
sub
cmps
xor
add
xchg
xchg
pushf
out
mov
cdq
scas
sbb
jns
test
dec
xchg
(bad)
sbb
movs
inc
add
addr16
int
mov
jmp
fidivr
or
ja
dec
aaa
dec
add
push
push
adc
outs
iret
arpl
(bad)
arpl
mov
loop
cmps
xor
arpl
or
pop
icebp
cdq
xchg
jno
sub
dec
aam
adc
adc
add
addr16
bound
in
cwde
movs
mov
movs
aad
(bad)
adc
stc
or
push
inc
adc
add
test
cmp
dec
ja
push
sbb
out
iret
sahf
loopne
and
cmp
push
xchg
movs
push
add
repnz
es
into
daa
mov
inc
data16
cmp
mov
pmaxsw
push
dec
push
inc
xchg
sub
pop
dec
pop
inc
mov
cmc
dec
xor
rcr
ins
scas
idiv
cmp
inc
mov
out
dec
int
mov
sub
mov
out
add
loope
rep
cmp
mov
xchg
cmp
hlt
cmps
icebp
ins
pop
xchg
dec
in
mov
mov
mov
mov
xchg
pop
mov
nop
scas
aaa
sbb
xchg
call
movs
xchg
inc
and
push
popa
lods
lods
jae
out
dec
into
mov
adc
out
pop
movs
cdq
pusha
out
dec
out
mov
adc
xor
sub
push
imul
retf
mov
jns
xchg
jnp
lods
push
imul
loop
cdq
call
lods
ja
test
mov
sub
dec
out
cdq
out
nop
mov
addr16
pop
fisub
adc
mov
stos
and
rol
fcomp
cdq
mov
jg
sub
xlat
push
cli
retf
sbb
mov
or
fcom
push
popf
jp
stc
fwait
or
sub
call
xor
aad
xchg
lds
push
mov
dec
neg
imul
adc
mov
add
aad
cmp
jns
pop
adc
imul
sbb
xchg
sub
test
push
mov
das
test
push
push
fwait
icebp
fistp
out
lods
(bad)
fldenv
mov
adc
mov
in
add
les
jmp
xchg
mov
out
mov
call
xchg
mov
mov
std
aas
push
in
jmp
das
das
mov
je
mov
mov
xlat
adc
mov
xor
inc
lahf
and
or
fmul
inc
inc
push
test
in
dec
inc
jb
fmul
je
jne
adc
ret
mov
cmc
or
cmp
pop
(bad)
fadd
mov
rcr
push
dec
lods
dec
shl
or
cmp
(bad)
dec
xchg
(bad)
sahf
sub
xchg
pop
retf
clc
nop
shl
sub
pop
in
xor
jbe
cld
or
add
jl
mov
inc
fidiv
inc
fmul
xor
inc
inc
jno
test
dec
xchg
jbe
cs
add
and
xchg
push
cmp
aad
out
sbb
test
cmp
nop
push
retf
pop
and
pop
inc
or
jecxz
std
out
cmp
xor
xchg
sub
adc
cmps
into
outs
rcl
sahf
movs
jecxz
fisttp
xchg
pushf
sahf
jno
sti
inc
(bad)
jl
cmp
stc
mov
pop
cdq
jle
(bad)
push
movs
ins
ret
sub
fstp
adc
int3
xor
mov
xor
and
lea
push
ror
cmp
arpl
test
ffreep
(bad)
fisubr
cmc
call
adc
sub
sar
push
popf
jo
jno
shr
icebp
pop
scas
int
dec
popa
sti
ret
add
cmp
sbb
imul
dec
mov
push
fld
cmp
aaa
ret
add
fidivr
mov
cmp
xchg
enter
jp
jnp
xor
pop
mov
inc
mov
std
xchg
lods
int3
fidiv
daa
repnz
mov
jmp
dec
mov
push
push
sahf
call
fdivr
int
mov
add
test
and
xchg
pop
xchg
pop
and
(bad)
arpl
ror
adc
pop
test
push
push
dec
jp
add
adc
pcmpgtd
std
stc
mov
mov
out
xlat
mov
cdq
sbb
popf
inc
lods
dec
rol
sahf
mov
cmps
xchg
stos
sbb
sbb
data16
dec
xchg
jb
ret
adc
xchg
aad
push
inc
sbb
bound
es
es
hlt
sub
fcom
shl
in
lock
mov
sbb
mov
scas
and
add
pop
mov
pop
test
mov
inc
movs
mov
adc
mov
retf
add
cmps
push
popf
mov
or
or
xchg
and
xor
xchg
or
popw
xchg
cmp
mov
cmp
dec
push
std
in
loop
jg
cmp
test
cwde
aas
sub
aaa
or
out
mov
hlt
xor
scas
dec
sub
ror
shl
xor
shl
ins
or
xor
cmp
or
mov
scas
(bad)
fsub
sub
aaa
or
movs
push
inc
imul
xchg
cmc
adc
inc
inc
sub
lahf
mov
dec
xchg
mov
mov
adc
mov
imul
les
mov
mov
inc
push
(bad)
(bad)
push
pop
into
dec
mov
test
lds
lock
dec
scas
bnd
jge
sub
mov
inc
pop
inc
adc
add
(bad)
retf
out
adc
scas
jp
iret
push
pop
mov
mov
call
cmc
mov
inc
call
rcr
rcl
fsub
sbb
jl
ins
(bad)
fistp
inc
fcmovu
jb
jb
mov
jge
jp
sub
xchg
stc
jmp
inc
and
xor
adc
test
cmc
and
ret
or
fidivr
sti
and
das
jp
cmp
pop
pop
iret
pop
dec
add
and
mov
pop
sahf
inc
retf
leave
add
sbb
cmps
sti
imul
out
call
push
sar
clc
cld
push
retf
popf
adc
popf
mov
mov
mov
push
enter
fisttp
pop
adc
dec
fidiv
in
(bad)
cmc
jne
mov
cmp
and
push
xchg
inc
lahf
jae
pop
call
data16
mov
mov
iret
jbe
mov
xchg
inc
das
ret
popa
xchg
enter
pop
sbb
out
mov
jg
stos
jmp
mov
enter
adc
(bad)
push
test
pop
push
in
sahf
sub
loope
out
js
aaa
dec
call
cwde
int
test
sub
xchg
mov
ds
dec
mov
sar
mov
add
rcl
cmp
scas
cmp
inc
xchg
(bad)
cmp
sub
(bad)
pop
xchg
jae
lods
jp
lock
sub
ja
add
mov
or
pop
xor
cmp
mov
adc
xlat
push
xor
cwde
clc
inc
fsubr
push
retf
rcr
and
outs
or
data16
sbb
js
loope
ficom
cmc
mov
bound
cld
add
sbb
lahf
cdq
push
adc
sar
jo
xchg
sub
int3
cmp
xchg
fs
out
clc
push
retf
jae
iret
cmp
dec
cmp
pop
jnp
push
ror
adc
scas
shr
out
(bad)
lods
xchg
mov
adc
xor
cmp
cdq
jns
out
stos
pop
cmp
sbb
sbb
test
leave
(bad)
aam
stc
inc
jecxz
mov
jle
jle
cmp
pop
push
mov
ss
dec
mov
fdivr
dec
movs
popf
pop
dec
jmp
loope
mov
adc
push
mov
adc
mov
fwait
out
cmp
repz
mov
push
jbe
test
fst
bound
fistp
leave
movs
out
stc
jns
mov
fcomp
jb
mov
in
mov
jecxz
icebp
pop
enter
sahf
(bad)
mov
int3
add
xor
xchg
lds
xor
sub
add
sub
and
inc
dec
(bad)
push
call
dec
mov
adc
test
inc
ret
pop
mov
push
aaa
dec
lea
push
dec
cmp
retf
sub
cmp
xlat
stc
fnstsw
imul
rcr
mov
aam
cmp
add
stos
aaa
movs
jne
imul
ss
jmp
in
xchg
pop
retf
mov
sub
(bad)
(bad)
push
inc
push
add
adc
add
sbb
movs
ror
sahf
or
push
movhps
cmp
jbe
pushf
pop
xchg
cmp
mov
or
repnz
jae
xor
inc
addr16
movs
aad
enter
or
or
pop
inc
xchg
ret
fucomi
mov
xchg
mov
push
xchg
jae
dec
xor
div
pop
dec
clc
inc
pop
cmp
cwde
and
stc
lock
js
cwde
aam
cmp
mov
or
inc
xchg
aaa
add
fidivr
pop
out
aad
mov
imul
jg
mov
out
fdiv
mov
push
movs
push
ror
clc
cmp
fistp
pop
call
popf
and
fmul
xchg
dec
jl
imul
jl
imul
ins
or
mov
movs
jnp
dec
mov
pop
inc
xor
or
daa
pop
ret
out
push
mov
or
xchg
inc
add
ror
das
adc
imul
aaa
sub
aas
pop
pop
sti
rcl
int
xchg
mov
sbb
rcl
lock
and
mov
inc
out
xchg
add
pop
lods
int
xchg
loop
stos
inc
pop
aas
pop
xor
hlt
jecxz
out
sub
loop
in
shl
cmp
(bad)
dec
sub
daa
dec
stos
sti
std
outs
ficom
loope
stos
and
pop
inc
push
shl
pop
scas
or
xor
adc
cwde
shl
bound
xchg
or
and
jb
jae
ret
push
imul
fld
xchg
jl
mov
enter
test
and
pop
mov
sti
in
push
xchg
push
in
sub
movs
mov
jmp
push
fisub
pop
aaa
xchg
cli
dec
test
mov
or
repz
sub
jmp
adc
xchg
push
push
sub
adc
or
sbb
sub
in
jno
adc
lea
rcl
lock
mov
in
cs
inc
jecxz
push
pop
(bad)
push
out
push
inc
mov
movs
outs
loopne
push
xor
int3
jns
mov
inc
sbb
push
xor
add
adc
cwde
sub
int
test
pop
mov
xchg
aad
aaa
jb
data16
sbb
add
fidiv
call
movs
jmp
es
ror
or
sub
popf
leave
inc
pop
or
jo
mov
loope
push
pusha
pop
aaa
cdq
or
ret
test
ret
pusha
lea
push
ds
rcl
inc
mov
dec
lea
ret
sub
lea
faddp
ins
outs
cwde
jge
cwde
ficom
cdq
icebp
mov
and
inc
add
xchg
mov
cld
push
imul
mov
out
mov
movs
adc
cmps
or
jecxz
adc
sbb
mov
xchg
sbb
sub
dec
scas
mov
inc
xchg
addr16
push
jecxz
and
jbe
jmp
aaa
cmp
mov
nop
bound
retf
mov
mov
pusha
cli
mov
shl
test
push
and
pop
and
shl
jbe
in
inc
mov
cmps
(bad)
fiadd
sar
call
mov
ja
xchg
mov
shr
mov
arpl
cmp
pop
jbe
mov
push
dec
cmp
fistp
cmc
loop
fisttp
xor
push
aaa
mov
xor
dec
dec
sub
pslld
in
mov
cmp
sbb
dec
aaa
add
idiv
lods
test
mov
cli
inc
push
push
lods
mov
jae
pop
bound
mov
hlt
test
in
inc
in
retf
nop
jnp
sbb
push
xchg
push
pop
mov
je
push
adc
mov
lock
repnz
mov
sar
in
mov
or
movs
(bad)
mov
inc
xchg
test
mov
enter
pop
stc
and
je
dec
inc
paddb
jmp
ret
call
xchg
push
pop
xor
mov
add
bound
sbb
cmp
cmp
jmp
dec
push
push
in
jmp
or
lock
push
test
add
mov
repnz
xor
(bad)
jbe
(bad)
jo
cdq
mov
lods
dec
xchg
xchg
sar
mov
or
repz
pop
addr16
ins
je
(bad)
lea
pop
xchg
sbb
dec
scas
cld
sbb
jmp
test
mov
inc
ds
or
or
je
adc
popf
addr16
cwde
adc
js
mov
add
ss
dec
idiv
xchg
inc
or
and
mov
rcr
pop
xor
sub
fistp
inc
ins
mov
mov
cli
loope
jnp
test
mov
lods
cmps
xchg
fs
mov
cmp
cs
fs
test
fisub
pop
inc
cmp
cmp
(bad)
sbb
mov
inc
dec
push
mov
data16
call
or
xchg
push
test
mov
jp
out
jns
lods
push
daa
or
pop
xchg
jo
bound
ffree
movs
call
mov
(bad)
in
and
in
or
int3
push
dec
cmp
loop
mov
mov
cs
stos
out
daa
and
retf
ss
mov
mov
aaa
adc
lods
mov
loopne
add
inc
icebp
mov
push
adc
xor
push
pop
mov
xchg
dec
cdq
xchg
pop
add
xor
and
mov
push
mov
pop
rcl
test
enter
mov
addr16
inc
push
hlt
adc
inc
fwait
mov
sahf
pop
js
xor
adc
dec
push
fisub
sub
in
mov
lea
or
jp
(bad)
sbb
jne
loopne
mov
xor
mov
push
adc
rcr
sub
ja
add
sbb
ret
cmp
data16
xor
scas
in
in
rol
push
scas
nop
shl
push
mov
enter
sub
inc
loop
movs
mov
rol
and
lods
sbb
loope
imul
daa
rcl
inc
je
fisubr
xor
stos
cmp
xor
lods
mov
jecxz
push
xchg
iret
adc
fiadd
imul
enter
add
jnp
ja
shr
js
mov
xor
xchg
es
ret
jb
jae
lds
jmp
sbb
ficom
push
sbb
shl
scas
pusha
or
jae
push
or
arpl
daa
mov
jp
rol
push
xchg
jo
xor
and
cmp
adc
pop
scas
cld
mov
push
push
inc
jnp
sub
enter
imul
xchg
lods
ror
mov
jno
jl
jl
and
retf
xor
and
int
mov
adc
push
jae
inc
(bad)
bound
xchg
aas
mov
out
xor
call
xchg
cmp
sbb
cmc
hlt
push
xchg
sub
out
push
or
mov
mov
lods
aaa
jl
mov
pop
push
and
dec
les
or
test
sub
xchg
outs
mov
dec
xchg
jns
sub
mov
out
unpckhps
mov
repz
cdq
ret
sti
(bad)
jb
cmp
dec
and
call
ins
mov
mov
fmulp
mov
jae
sbb
or
push
pop
dec
sbb
lock
lahf
adc
push
add
mov
pop
mov
gs
jle
es
int3
mov
push
shl
push
mov
stos
or
enter
loopne
call
int3
adc
mov
cmp
pusha
mov
cmp
sub
lahf
test
movs
iret
daa
and
stos
jne
mov
rol
or
cmp
fidivr
sub
fcom
sqrtps
or
test
(bad)
lds
in
jge
sbb
fistp
int
inc
es
mov
add
xchg
jbe
loopne
push
into
or
hlt
xchg
xchg
data16
inc
fist
inc
push
fidiv
aad
inc
push
sbb
loope
movs
jae
adc
stc
mov
repz
xchg
lahf
ins
mov
retf
sub
push
sbb
test
mov
and
xchg
int3
cwde
repz
fdivr
pop
ja
in
pushf
add
aaa
jb
jb
or
pushf
push
test
mov
out
pop
scas
int3
sbb
lahf
cdq
adc
in
jge
popa
stos
lods
or
cmp
scas
scas
cmp
pop
pop
mov
movs
mov
fs
shr
inc
lods
pop
clc
lock
and
loope
daa
jbe
in
out
ficom
call
and
mov
rol
or
out
cs
add
dec
add
inc
sahf
xchg
xchg
xchg
fcomp
cmp
test
mov
pop
out
fs
test
pop
shl
pop
inc
cmp
shl
(bad)
stos
mov
outs
fmul
fs
enter
shr
sbb
mov
mov
hlt
cwde
gs
mov
sub
xor
nop
lock
sbb
pop
inc
ds
jno
lods
xor
sbb
add
aad
and
push
stos
bound
cmp
jmp
mov
pop
sbb
dec
sti
ds
daa
adc
fs
mov
arpl
pop
sub
mov
sbb
mov
(bad)
add
popaw
push
pop
shl
(bad)
and
iret
mov
pop
and
stc
icebp
or
(bad)
and
xchg
jecxz
mov
cmc
jmp
mov
(bad)
loopne
push
push
jge
lods
cmp
and
mov
je
stos
adc
cmc
loopne
pushf
js
xlat
loop
jno
ss
test
and
add
cmp
sar
std
arpl
jmp
dec
mov
jl
outs
retf
ret
mov
mov
jae
xchg
mov
sbb
sub
in
sbb
push
call
xchg
scas
push
push
fisttp
nop
scas
ror
push
adc
mov
pop
push
jg
shl
aad
xchg
cmp
addr16
stc
inc
test
les
push
mov
jb
and
cs
lock
mov
fwait
call
add
aas
imul
or
push
jns
stc
inc
pop
test
push
imul
pop
rcl
fwait
int
mov
(bad)
aas
pop
stos
shl
ffree
dec
jno
sub
(bad)
or
and
xor
test
rcl
ret
cdq
test
popa
int
test
cmc
sti
ficomp
ins
scas
mov
nop
cmp
test
lea
dec
mov
pop
inc
xchg
stos
imul
sub
fstp
sbb
popa
fimul
in
mov
icebp
pop
lea
stc
mov
mov
jne
and
shl
addr16
mov
lds
jnp
cli
inc
xor
add
jnp
sbb
adc
(bad)
popf
int
lods
ret
cld
push
push
or
push
lods
pop
adc
add
imul
mov
fldenv
sub
xchg
dec
icebp
pop
mov
cs
adc
push
fstp
adc
pop
nop
xor
mov
xor
inc
test
inc
mov
in
ror
xor
sbb
out
xchg
and
retf
xchg
ret
xor
cmps
aad
dec
int
in
mov
jb
out
inc
xchg
pusha
lods
mov
stos
mov
cmp
jo
out
out
rcr
mov
push
lods
in
(bad)
sub
add
mov
sub
inc
jl
mov
call
bound
out
imul
data16
fstp
push
xor
dec
mov
test
xchg
mul
xchg
push
movs
fs
scas
xchg
out
call
and
retf
xlat
pop
inc
and
daa
fldenv
pusha
sbb
push
dec
cmp
jbe
hlt
js
cmp
test
mov
scas
add
addr16
in
scas
(bad)
lds
sar
xor
retf
mov
test
shl
test
lea
clc
jb
jae
in
bnd
add
in
ins
pusha
inc
movs
sub
rol
pop
push
es
cmps
pusha
vmovaps
jne
ins
mov
mov
cmc
dec
xor
pop
shr
inc
pop
or
cdq
lods
adc
cmps
jmp
neg
jns
daa
adc
dec
xor
fucom
xor
adc
mov
test
jmp
into
or
pop
pop
mov
add
sbb
in
pop
push
fild
retf
or
sub
sahf
je
pusha
or
xchg
dec
out
data16
loope
sahf
lods
stc
cmp
cld
aam
xchg
outs
sub
mov
and
and
mov
pusha
ficomp
pop
or
les
stos
adc
add
(bad)
aam
rcl
adc
dec
ja
xchg
push
inc
das
ss
and
adc
jp
xchg
(bad)
std
and
add
rcr
outs
jg
add
mov
cmp
pop
lods
neg
jae
test
jl
ins
dec
push
test
jns
or
inc
stos
and
das
xor
in
enter
mov
sub
loop
leave
xchg
mov
test
mov
push
cli
pop
jbe
dec
scas
dec
mov
cmp
das
push
cmp
daa
leave
outs
adc
jno
jge
iret
std
or
pop
mov
popf
sar
adc
sar
ja
in
out
jne
and
pop
aaa
push
mov
repz
xor
in
shr
mov
fldcw
add
les
sbb
enter
fild
push
cmc
retf
dec
jb
mov
sub
ror
ds
jmp
std
movs
test
inc
mov
cmp
(bad)
cmp
adc
mov
sbb
jmp
dec
inc
mov
out
dec
sub
movs
xor
test
sbb
push
and
mov
inc
fwait
test
std
out
arpl
inc
ins
movs
push
push
pushaw
pop
inc
clc
inc
call
or
shr
shl
lods
inc
pop
data16
inc
sub
lahf
jle
out
aad
cdq
test
iret
xchg
push
adc
mov
pop
(bad)
jo
mov
cwde
psllq
jl
inc
jg
addr16
test
inc
sahf
push
(bad)
and
movs
bound
cdq
and
push
and
out
pop
mov
(bad)
xchg
test
test
dec
push
mov
sbb
xchg
xchg
push
hlt
das
pop
cmp
sub
mov
add
shl
cmps
and
cli
xchg
aaa
in
clc
(bad)
sub
fadd
rol
jmp
mov
in
stos
(bad)
outs
out
cmps
cli
leave
mov
popf
dec
popa
cmp
push
movs
mov
sahf
pop
ret
or
pusha
or
push
aad
jg
jecxz
push
das
pop
push
std
pop
cmps
lock
inc
xchg
nop
sbb
cmp
rcr
sbb
pop
jmp
fidivr
daa
je
pop
cmp
and
jmp
daa
lods
xor
sub
cdq
rol
pop
xor
push
lock
test
xchg
mov
push
push
dec
sbb
mov
ret
movs
fdiv
pop
mov
pop
dec
aad
(bad)
xchg
call
sbb
aad
push
cs
or
cld
dec
push
adc
dec
ins
push
dec
jecxz
pop
es
icebp
sti
dec
xchg
out
je
sub
and
inc
int
mov
mov
test
xchg
ja
sahf
xlat
dec
push
retf
or
add
xchg
clc
inc
int
dec
jns
pop
rol
sar
jbe
mov
cmp
jae
mov
jno
not
fs
push
test
push
mov
inc
xor
data16
pop
mov
dec
movs
xchg
nop
loopne
mov
add
(bad)
loop
sub
jbe
mul
out
mov
popf
shl
clc
xor
dec
inc
fisttp
mov
jmp
pop
shr
add
mov
test
clc
inc
icebp
sbb
call
xor
sub
stos
popf
push
addr16
add
xchg
xchg
adc
pop
pop
and
inc
pop
fidiv
push
cmp
loope
inc
push
pop
pop
jge
ficomp
mov
mov
xchg
xor
jmp
xchg
ret
repz
sbb
adc
(bad)
push
pop
add
push
push
sbb
mov
sbb
xor
jmp
add
push
in
sahf
dec
or
sbb
int3
sar
out
adc
mov
jg
in
ret
fcom
mov
sbb
dec
dec
cmp
inc
dec
(bad)
in
add
sbb
mov
xchg
ret
mov
dec
ins
in
rcr
adc
jnp
test
push
aaa
je
pushf
loop
mov
sbb
jecxz
cli
dec
push
cmp
or
movs
nop
inc
int3
inc
sub
pop
daa
sbb
and
scas
int3
call
pop
inc
jge
rol
movs
or
aam
mov
ins
xchg
push
push
nop
or
mov
mov
out
mul
cs
sub
mov
jmp
mov
push
push
mov
call
mov
adc
mov
xor
jae
sahf
or
fucomi
sbb
jbe
xor
stc
mov
je
xchg
pop
xchg
jb
or
dec
aad
leave
pop
mov
aaa
pop
fwait
dec
jb
imul
sbb
adc
test
mov
aaa
scas
jg
scas
out
xchg
js
xor
push
xor
push
sbb
jl
js
cmps
ror
dec
dec
push
adc
je
adc
in
mov
and
xchg
repnz
sbb
inc
add
loope
pop
xchg
call
mov
add
jl
cwde
mov
inc
sbb
add
pusha
mov
fmulp
(bad)
rcl
mov
ret
sbb
jmp
int3
pop
pop
sar
out
les
or
and
pop
cmps
mov
mov
cdq
or
push
mov
ror
xlat
rcr
and
sub
lods
lods
inc
movs
sti
data16
mov
test
dec
jmp
sub
push
adc
mov
jb
pop
inc
(bad)
int
retf
pop
cmc
(bad)
out
in
out
out
stos
mov
inc
movs
inc
jmp
shl
aam
xchg
inc
or
hlt
(bad)
(bad)
jb
(bad)
std
xor
addr16
shl
bound
cmps
mov
in
xchg
push
test
mov
lahf
nop
sti
jl
mov
pop
push
ins
fsubr
inc
fdiv
dec
icebp
scas
inc
lahf
lea
les
test
cmp
mov
adc
or
xchg
xchg
sub
jnp
(bad)
sbb
pop
xchg
jnp
cld
jae
and
pop
push
xchg
inc
aas
sub
das
xchg
loopne
sti
cmc
add
rcr
cs
push
add
loopne
sti
clc
ficom
push
sub
stos
mov
push
scas
andps
sub
fs
push
stos
pop
ins
add
movs
leave
stos
ins
scas
inc
and
jo
fcom
and
jle
rol
addr16
sahf
push
fstp
sub
fcom
jbe
jno
sub
sub
js
fsub
add
jb
loope
and
ret
pop
push
das
mov
push
jbe
mov
data16
mov
test
out
mov
mov
lods
add
out
aad
sub
and
inc
jge
gs
sar
push
lods
loope
dec
in
mov
push
inc
jno
fsub
mov
sbb
push
pusha
mov
push
cmp
sbb
into
and
hlt
mov
or
pop
rol
add
test
jae
dec
jle
sbb
push
mov
mov
push
adc
cmps
loop
or
imul
ins
xchg
xor
push
int3
xchg
outs
(bad)
into
mov
inc
cdq
icebp
inc
and
xor
jecxz
cs
add
stos
push
lock
sar
jo
cli
icebp
mov
push
jle
mov
or
test
xlat
push
push
lock
push
inc
mul
jno
hlt
ror
mov
mov
shl
pop
sbb
cld
mov
pop
adc
hlt
aas
fdiv
sbb
cmp
sbb
and
ret
xchg
cld
xor
mov
movs
inc
mov
push
xor
das
jae
test
data16
or
ins
icebp
retfw
jecxz
aam
jl
jno
dec
push
shr
ret
lock
stc
cdq
pop
mov
loop
scas
loop
jl
lods
aaa
stos
and
add
retf
pop
and
dec
jo
xor
aam
nop
inc
push
cmps
add
fsubr
iret
pusha
rcl
sub
pop
cld
inc
push
sbb
fbld
sbb
pop
rol
pop
mov
sbb
jns
sbb
rcl
inc
xchg
add
cwde
xchg
mov
scas
cmp
dec
out
in
aaa
into
pop
popf
addr16
dec
mov
and
in
jmp
(bad)
jmp
push
xchg
jns
imul
std
cwde
pop
test
jg
inc
addr16
mov
xor
rcl
adc
or
mov
fwait
dec
push
shl
mov
cld
xchg
stos
add
adc
ins
jno
dec
push
jg
(bad)
mov
sar
fs
aas
push
call
aad
push
jecxz
xor
(bad)
aam
push
cs
push
sti
adc
jbe
outs
aad
out
xchg
mov
vpshufhw
cmp
mov
ucomiss
shl
mov
int3
jo
iret
mov
cld
fidiv
out
add
and
push
pop
pop
div
jns
es
mov
add
pop
add
xor
or
scas
xchg
jmp
js
jmp
mov
std
(bad)
dec
or
or
fmul
out
mov
inc
push
js
sbb
jge
xor
xchg
mov
jecxz
sbb
sbb
inc
ror
ins
ds
into
aas
loopne
add
repz
in
mov
xchg
fwait
jne
inc
mov
sbb
int
lock
std
xchg
retf
inc
and
lahf
cmp
cli
xor
xor
sbb
ins
sub
add
sbb
inc
jecxz
sahf
mov
loope
fwait
call
outs
(bad)
cmp
fild
sub
push
rcr
std
test
inc
leave
in
cmp
sbb
jnp
pushf
jmp
cmp
iret
or
lods
in
int3
repnz
out
popf
fbstp
or
adc
jno
ror
dec
dec
leave
ins
cmps
sahf
in
mov
inc
jecxz
mov
and
cli
and
loop
das
stc
and
jg
out
mov
sbb
push
cmp
out
sub
pusha
xchg
xchg
mov
outs
test
ret
jl
sbb
std
mov
jae
mov
pop
mov
imul
je
sbb
and
pop
xchg
dec
movs
sub
cmps
inc
in
imul
fistp
jmp
cwde
mov
imul
mov
inc
inc
push
out
inc
sub
fwait
jmp
inc
mov
dec
pop
cmc
ret
xchg
loopne
mov
cli
addr16
add
outs
sqrtps
add
mov
sahf
(bad)
ret
cmp
inc
mov
cwde
lods
adc
jae
xchg
or
cld
jmp
or
movs
add
jecxz
add
push
mov
call
xchg
mov
jg
mov
cmp
in
adc
dec
sbb
jge
inc
jmp
adc
jb
sti
xchg
xor
cld
pop
mov
int
push
test
pop
sub
adc
xor
sub
cld
pop
jp
pushf
cmc
xlat
or
imul
mov
shl
dec
cmp
and
ror
(bad)
and
and
pusha
inc
mov
loope
inc
pop
mov
xchg
repz
lea
jo
jp
cs
sub
rol
stos
mov
add
imul
xchg
mov
call
xchg
popa
xor
cmp
jo
adc
ret
les
ficom
and
sbb
cmp
scas
sbb
jl
jno
ins
dec
outs
pop
fild
add
mov
int3
shl
xor
push
fcomip
mov
ror
sub
or
popa
sub
mov
loopne
rol
outs
add
push
push
dec
sbb
es
push
inc
pop
xchg
(bad)
shl
or
add
xor
inc
xor
loop
cmp
outs
dec
in
dec
adc
int3
retf
pop
jbe
fisttp
jge
mov
and
and
fucomip
in
sbb
(bad)
or
(bad)
cmp
test
sar
sbb
or
xor
adc
test
(bad)
xchg
jmp
sbb
arpl
inc
cmps
dec
hlt
xchg
movs
repz
jmp
movs
push
fcomp
add
out
xchg
in
fld
aad
ds
cmp
xchg
(bad)
hlt
sahf
daa
scas
in
xchg
dec
xor
and
in
out
rcr
jns
mov
outs
aas
and
or
cld
test
movs
lds
push
jle
xor
test
and
fnstcw
sbb
dec
cwde
add
bound
jecxz
stos
scas
into
jecxz
pop
jmp
(bad)
daa
cmp
loop
loope
add
enter
adc
dec
mov
ret
mov
fcomp
ret
mov
fwait
ins
mov
xchg
sahf
movs
sub
div
push
in
or
push
inc
repz
xchg
mov
or
mov
cmp
sub
dec
xchg
imul
xlat
xchg
jbe
retf
cld
cli
stc
mul
sti
ins
ins
daa
push
xchg
mov
cwde
test
push
xchg
cmp
outs
sbb
adc
mov
fsubr
mov
mov
mov
and
fild
mov
push
loope
mov
loope
sub
neg
sub
push
push
or
xchg
dec
pop
in
and
aas
sbb
clc
pop
mov
enter
stos
jmp
mov
adc
cld
pop
inc
popf
xchg
cmps
scas
adc
mov
nop
xchg
stc
sbb
cmps
lods
mov
jo
outs
xchg
(bad)
jmp
jecxz
(bad)
iret
push
mov
or
js
sti
xadd
ja
add
stos
dec
sbb
dec
push
jnp
xchg
retf
shl
test
xchg
pop
fs
mov
ja
mov
xor
pop
mov
pop
cs
inc
mov
fcomi
jmp
sahf
sub
into
mov
push
jb
mov
addr16
xor
rcl
sub
jmp
shl
jl
aaa
mov
mov
or
jecxz
pop
cmp
xor
cmps
sti
inc
setge
add
cdq
add
int3
jl
add
push
aad
sub
mov
inc
pop
adc
xor
dec
add
xor
pusha
enter
pop
sbb
adc
(bad)
xchg
(bad)
jb
and
sti
retf
mov
pop
div
clc
fimul
add
push
and
lods
inc
xchg
mov
ds
push
push
dec
or
dec
or
adc
lods
ins
xchg
fistp
push
(bad)
dec
out
dec
mov
jmp
dec
inc
aam
loopne
in
mov
sub
and
popa
mov
sahf
xor
sbb
lds
repnz
sub
pop
ins
cmp
mov
in
and
fstp
xchg
adc
sbb
pop
pop
and
pusha
lods
adc
sub
(bad)
mov
fistp
test
out
loop
icebp
adc
int3
cmp
xchg
in
pop
out
jne
in
cmp
jno
inc
mov
test
mov
fdivr
inc
sub
popf
push
jmp
loop
pop
sub
or
xlat
inc
aad
jno
xor
popf
adc
call
cmps
pop
out
add
adc
and
mov
xchg
add
repz
ins
mov
aas
scas
ret
jno
inc
mov
jge
fs
repnz
mov
dec
inc
adc
cdq
mov
in
shl
push
jp
sbb
in
sbb
mov
add
cmp
mov
iret
xor
in
or
loop
adc
xor
add
xchg
dec
bound
add
add
pop
imul
jmp
push
ret
ret
and
jg
je
lods
xchg
pop
mov
out
cwde
push
inc
das
out
imul
mov
scas
add
repz
xchg
and
xchg
sbb
popa
(bad)
push
retf
push
test
retf
shl
retf
xor
das
mov
stos
rcl
xchg
and
imul
xor
das
adc
mov
pop
jb
sub
adc
movs
add
fnstcw
les
add
sub
cmc
dec
jne
aaa
cmp
pushf
out
imul
hlt
mov
ret
xchg
cmp
jp
mov
bound
sahf
or
mov
sahf
cmc
xchg
pop
inc
(bad)
mov
xchg
shr
sti
pop
leave
adc
pop
out
std
cmp
movs
mov
and
ins
jp
jmp
popa
mov
fidiv
add
sbb
shl
shl
jnp
jbe
cdq
jecxz
xor
imul
int3
xor
test
jns
push
pop
call
lods
cmc
or
aad
sub
(bad)
mov
es
sti
sbb
lock
pop
stos
xor
ins
in
call
mov
pop
pushf
inc
ins
jns
retf
in
fmul
sbb
or
fwait
push
xchg
mov
ins
jp
pushf
sub
call
mov
movs
ror
mov
sbb
pushf
rcr
aaa
fsub
mov
(bad)
shr
pop
not
xchg
scas
stos
es
mov
mov
push
xor
and
ins
nop
fist
and
bound
xor
idiv
and
mov
push
fucom
inc
mov
push
bound
in
pusha
sbb
dec
mov
(bad)
dec
cmp
in
jmp
cdq
or
cmps
test
ret
sahf
jmp
xchg
fxch
add
scas
pop
cmp
adc
loope
hlt
mov
fwait
xchg
inc
ret
mov
or
cmp
jp
retf
inc
dec
call
dec
add
xchg
ficomp
js
sbb
in
cmp
clc
jo
clc
fild
or
js
push
pop
aas
(bad)
xor
das
fst
(bad)
sbb
push
sub
mov
fiadd
aad
mov
mov
cli
stos
xlat
loope
mov
push
enter
cmp
mov
xchg
jno
mov
fld
sbb
jno
cmp
jp
xor
xchg
inc
lods
or
mov
(bad)
or
mov
scas
push
sbb
cmp
or
lea
inc
movs
je
mov
jmp
cld
and
xchg
xchg
arpl
jg
retf
push
int3
test
jp
push
je
add
lods
test
jmp
stc
scas
jg
xchg
dec
or
adc
inc
fmul
retf
es
pop
inc
cmps
push
fild
push
jge
sbb
idiv
iret
inc
mov
js
pop
adc
jecxz
nop
mov
sub
push
les
sub
xchg
cmp
ds
mov
ds
push
repz
pushf
dec
test
ret
aam
mov
and
fstp
scas
jecxz
xor
inc
popa
into
mov
(bad)
cwde
push
ds
loop
dec
or
and
adc
pop
mov
xchg
stos
dec
add
sbb
pushf
cmp
xor
loopne
and
sahf
or
add
cmp
push
adc
rol
popa
push
adc
imul
call
mov
repz
int3
add
popf
js
rcl
imul
out
push
daa
xchg
push
loope
pop
outs
cmps
out
add
sub
mov
jl
sub
int3
dec
pushf
rol
mov
xchg
not
sbb
jg
ret
jbe
mov
(bad)
dec
int
jmp
fadd
xchg
movs
sub
xor
inc
test
hlt
sub
pop
sub
sbb
int
add
push
sbb
pop
add
dec
mov
sub
lahf
xor
into
add
cdq
imul
imul
pop
mov
jnp
pop
dec
stos
xor
enter
inc
iret
pop
loop
cmp
lds
lea
(bad)
fstp
cwde
sub
pusha
popf
or
inc
shr
(bad)
call
arpl
icebp
mov
cmc
in
inc
mov
mov
lds
inc
stc
cmps
add
add
cmp
sub
jg
adc
xchg
sub
jne
call
fnsave
in
test
mov
add
lods
mov
mov
outs
fnstcw
mov
cmp
push
cmp
add
mov
scas
cmc
pop
sub
adc
icebp
mov
ds
repnz
cmps
add
fcmovne
pop
les
mov
pop
shr
scas
jmp
xchg
nop
mov
ret
pushf
shr
lock
jp
pop
inc
adc
test
ss
xchg
lea
xchg
sbb
stc
mov
mov
(bad)
or
dec
rcr
cmp
and
mov
test
adc
xor
xor
cmp
jb
fstp
rcr
and
into
sub
(bad)
push
sub
jge
mov
cli
ret
shl
inc
out
aad
call
ins
push
fiadd
dec
cmp
adc
icebp
outs
test
pop
aas
pop
dec
das
hlt
push
(bad)
outs
cld
xor
iret
test
hlt
pop
push
pop
into
xchg
sbb
push
aas
dec
dec
test
inc
jne
out
pop
ins
push
push
mov
mov
or
test
mov
int
in
sbb
xor
out
jp
cmp
movs
pop
popf
mov
dec
pop
test
push
out
mov
fild
add
add
mov
mov
mov
je
in
mov
movd
push
cmc
add
sbb
mov
les
xlat
cld
sbb
fistp
aas
(bad)
retf
or
rol
aad
mov
sbb
out
iret
movs
add
and
std
sub
push
xlat
test
mov
ficomp
cmp
scas
or
cmp
imul
and
neg
dec
sti
sbb
mov
jp
cmps
(bad)
push
fiadd
mov
adc
mov
daa
jp
lahf
jmp
add
xchg
cwde
jle
xchg
pop
fs
les
inc
pop
(bad)
movs
adc
cmp
sub
pop
mov
jnp
fisubr
minps
xor
cmp
mov
in
pop
xor
sahf
lods
xchg
outs
xchg
add
inc
fild
stc
ins
sbb
mov
jl
cmp
sub
pop
sub
adc
cmp
(bad)
pop
mov
cmp
xor
push
pop
inc
out
js
xor
aad
cwde
(bad)
cmp
ret
sbb
or
dec
aas
pop
mov
dec
es
jg
mov
and
imul
dec
test
repnz
pop
ins
mov
cmp
test
div
mov
popf
mov
mov
mov
mov
mov
(bad)
mov
(bad)
in
(bad)
push
push
fistp
and
in
cwde
imul
cmp
pop
mov
test
lds
aam
mov
xchg
loopne
mov
ret
cmps
stos
std
mov
imul
mov
inc
sbb
das
jo
(bad)
int
mov
dec
es
in
pop
retf
out
aad
call
or
(bad)
fcom
lock
sub
sub
mov
pop
inc
pop
mov
call
popf
leave
xchg
std
retf
cld
sbb
mov
frstor
jno
bound
lods
push
stos
jns
aaa
add
mov
lahf
sub
dec
(bad)
cmp
(bad)
push
push
or
jp
out
mul
dec
cmps
cwde
sub
push
add
ins
cmp
xchg
ror
fiadd
sbb
call
dec
mov
sbb
pop
jnp
xor
jle
stc
(bad)
mov
xor
adc
pop
ja
ins
rcr
and
cli
loopne
mov
or
call
cmp
in
nop
dec
add
cmps
sbb
or
fdivr
scas
gs
push
inc
push
sub
fs
jl
mov
inc
fisubr
(bad)
jg
ret
retf
fidiv
xchg
push
fisubr
call
lea
lods
cdq
mov
xchg
pop
ins
jno
jnp
sbb
cdq
int3
inc
mov
sbb
xchg
(bad)
in
pop
adc
mov
test
enter
adc
popf
jnp
and
enter
mov
nop
out
jmp
mov
jp
lock
sbb
loop
shl
pop
pop
sub
push
jne
sub
push
mov
fnstsw
pushf
pop
js
call
push
push
test
sub
pop
xchg
push
je
outs
icebp
cmp
dec
fwait
or
outs
pop
stc
mov
jnp
push
div
out
dec
mov
mov
fidivr
or
out
jl
shl
enter
jge
or
xchg
pop
xor
cmp
aam
add
hlt
test
imul
jg
addr16
xor
lds
test
out
rol
inc
xor
mov
sub
jmp
idiv
jnp
jns
and
add
cwde
movzx
dec
or
movs
dec
repz
dec
aam
adc
sub
test
retf
and
adc
out
gs
imul
xor
cmp
test
and
cmp
lds
jbe
mov
ins
aaa
jge
cs
xchg
or
out
mov
loopne
sbb
dec
or
cdq
mov
nop
test
fcomi
mov
test
loop
scas
imul
add
and
xchg
icebp
pop
sbb
sbb
push
inc
xor
xchg
rcr
push
cmc
cmp
or
pop
test
inc
add
popf
je
mov
rdtsc
call
inc
test
push
adc
xchg
gs
add
pop
jnp
call
out
or
jmp
bound
jge
fild
mov
jmp
jbe
je
inc
mov
pop
sbb
mov
add
xchg
shl
movs
sub
sbb
frstpm(287
mov
(bad)
xor
call
adc
inc
mov
push
mov
cmp
inc
js
enter
pop
inc
push
pop
sbb
pop
loopne
push
les
mov
jmp
ss
jg
jge
popf
sahf
call
imul
mov
mov
mov
push
ds
jmp
and
adc
mov
cs
or
push
test
jne
or
loop
imul
add
cmp
lahf
stc
and
mov
push
aad
jb
mov
cmp
movs
icebp
add
mov
mov
xor
stc
jnp
inc
aaa
retf
out
sbb
ds
mov
and
push
rcr
mov
jo
sub
mul
icebp
xor
xchg
sub
(bad)
push
and
dec
in
xor
fcom
int
fistp
sbb
addr16
pop
adc
push
sbb
imul
cmp
scas
loopne
mov
cmc
into
push
aaa
in
ror
inc
sbb
(bad)
les
retf
dec
push
call
add
out
mov
pop
sub
inc
or
push
sbb
push
dec
pop
sub
cmc
add
cmp
clc
pusha
or
in
popf
mov
pop
push
loop
fwait
add
sub
leave
inc
fistp
neg
cmp
gs
sub
pop
push
out
call
push
fst
les
mov
leave
cwde
hlt
cmp
pop
dec
jle
dec
rcr
inc
dec
cmp
sbb
out
movs
out
lods
leave
sbb
repz
aam
push
pop
and
ret
div
jge
xchg
and
dec
mov
bnd
or
pop
bound
mov
jl
add
pop
aaa
sub
pop
(bad)
and
adc
dec
and
push
sub
mov
addr16
jns
js
stos
xchg
jp
sbb
push
retf
cmp
and
std
aaa
and
in
push
retf
xchg
push
sub
bound
cmp
lock
mov
loop
inc
inc
ja
or
pop
mov
xchg
adc
lock
je
or
imul
pusha
adc
movs
mov
fadd
inc
inc
aam
add
xor
or
mov
ss
pop
pop
xchg
(bad)
ja
imul
mov
xchg
sahf
xchg
jo
fadd
rol
pop
dec
dec
sti
rcl
test
sub
xchg
jle
jge
xchg
ins
aaa
add
mov
push
inc
mov
and
dec
es
fstp
stos
add
inc
fs
cdq
xor
in
test
push
fs
fistp
sar
sbb
mov
push
lods
in
push
das
div
inc
sub
inc
(bad)
mov
rcr
xor
mov
push
inc
les
stos
dec
and
mov
lds
and
jo
sti
adc
xchg
cmps
xchg
leave
jmp
rol
repz
jle
fprem
test
ds
cmp
dec
imul
xchg
add
imul
xchg
sub
dec
fcom
shr
xor
push
ja
xchg
outs
mov
clc
pop
lea
mov
and
sbb
jnp
jge
imul
movs
inc
xor
push
ins
cmp
inc
daa
mov
test
mov
or
cmp
sub
lds
ins
leave
mov
jnp
dec
xchg
sub
stos
test
js
es
fiadd
mov
jbe
mov
sub
adc
xchg
xor
pop
pop
imul
push
cmp
sbb
fsubp
mov
dec
xor
scas
jno
jne
ss
pop
int3
mov
push
add
mov
jge
(bad)
in
xor
dec
in
out
mov
(bad)
jmp
pop
loop
or
repz
pushf
cld
jg
dec
test
imul
imul
jmp
es
adc
loope
out
ret
in
pop
sbb
jp
and
(bad)
(bad)
(bad)
cmps
iret
sbb
jp
or
push
push
mov
xchg
push
xlat
ds
out
sub
and
stc
lds
dec
add
rcr
mov
out
jmp
cmp
pusha
or
cmp
xor
pusha
stc
add
pop
add
stos
dec
or
shr
mov
sub
adc
les
jle
outs
rol
add
push
sub
xor
imul
jecxz
or
push
jae
fdivr
and
mov
lods
add
cld
xchg
mov
enter
inc
dec
add
inc
lds
add
sti
mov
les
adc
mov
and
in
ja
mov
scas
jmp
xchg
xor
test
enter
out
test
sbb
pop
icebp
xchg
or
adc
scas
fimul
cmc
loop
add
pop
cmp
and
addr16
xchg
rcr
cld
bound
sar
ss
pop
push
sub
xchg
popf
xchg
mov
movs
(bad)
loopne
cmp
stc
in
mov
cmc
stc
jns
cmp
mov
and
arpl
push
pop
and
jl
mov
mov
js
xor
mov
sbb
out
ret
pop
sahf
mov
hlt
cld
in
fild
fsub
and
scas
dec
jne
xor
mov
stc
mov
xchg
clc
iret
jbe
out
inc
fild
cmp
int3
pushf
dec
or
in
dec
pushf
and
mov
or
imul
adc
xor
jmp
jnp
mov
ins
shr
sub
mov
sbb
xchg
or
dec
add
neg
cmp
jmp
ror
fdiv
dec
xchg
es
out
cmp
movs
ror
jb
add
movs
gs
pop
fcomp
or
or
int3
in
arpl
jne
fs
ja
iret
push
rcr
sub
mov
cmps
dec
adc
shl
sub
ret
mov
fidivr
jp
dec
shl
icebp
ror
cmp
mov
outs
in
lahf
mov
test
imul
(bad)
pop
jmp
popf
fisub
or
adc
fist
out
jmp
sub
jp
cdq
jmp
jge
outs
bound
imul
cld
mov
les
arpl
cmps
rol
sbb
adc
int
fnstenv
jle
arpl
mov
adc
push
xchg
sbb
fdiv
xchg
test
xor
pop
xor
mov
fsub
pop
das
cmc
xor
sbb
out
stos
ins
mov
dec
mov
xor
mov
xchg
fiadd
(bad)
repnz
or
cmps
add
mov
inc
cmp
lods
sub
int
adc
fistp
and
inc
loop
inc
call
inc
mov
xlat
mov
or
(bad)
repz
and
sub
pop
mov
or
add
icebp
cmp
shr
aaa
mov
in
fdiv
(bad)
mov
retf
mov
push
jne
icebp
(bad)
(bad)
mov
mov
sub
loopne
(bad)
movs
int3
adc
push
fstp
shl
mov
jno
mov
test
gs
lea
ret
mov
and
and
jmp
cmps
ins
fstp
cli
xlat
ja
sbb
adc
fstp
cmp
and
rcl
jl
fucomip
pop
sub
jmp
dec
outs
push
ds
call
xchg
sbb
pop
loope
or
add
into
xchg
dec
inc
retf
adc
(bad)
adc
ficomp
mov
in
jmp
pop
jno
sbb
push
xchg
cmp
pop
lds
sub
mov
ds
xchg
leave
pop
sahf
push
adc
js
fldenv
cld
sbb
test
rol
and
sbb
xor
clc
xchg
jp
shl
call
hlt
(bad)
or
add
push
mov
inc
jge
lods
xor
js
xchg
cmps
sub
sub
mov
cdq
pop
in
pop
inc
adc
push
add
(bad)
xchg
test
cld
scas
add
xchg
ret
adc
dec
push
jo
pop
test
jmp
lods
test
mov
call
popf
mov
lods
and
jns
loop
inc
arpl
out
les
inc
mov
call
xchg
mov
addr16
rcl
sbb
sahf
or
jp
int
adc
dec
je
xor
add
jbe
inc
callw
(bad)
sub
dec
adc
jns
arpl
test
add
mov
jg
add
movs
push
jb
cwde
cdq
push
push
test
lea
in
pop
xchg
or
adc
push
push
dec
xchg
jb
add
test
retf
enter
push
push
push
ror
sub
pop
mov
sub
pushf
cdq
inc
sub
adc
mov
adc
outs
ins
ins
icebp
or
push
mov
mov
(bad)
mov
lahf
inc
arpl
sub
xlat
leave
xchg
cmp
cwde
std
nop
and
add
cmps
mov
jmp
repnz
jge
ror
add
jae
imul
xor
dec
jg
push
sbb
jae
jg
mov
and
pop
ja
pushf
repz
in
sub
xchg
mov
jmp
and
f2xm1
cli
jmp
scas
(bad)
fst
xlat
xchg
dec
add
push
mov
push
sbb
aam
pop
(bad)
mov
mov
jno
mov
(bad)
movs
push
lds
int3
jae
adc
(bad)
out
mov
sbb
imul
ja
jb
cmc
clc
div
jo
push
dec
sub
out
ins
test
retf
out
stc
mov
dec
mov
arpl
sahf
je
xlat
and
cmp
(bad)
add
jecxz
ins
mov
jg
out
mov
cdq
mov
movs
imul
cmc
imul
jge
mov
cld
icebp
shl
scas
add
mov
mov
les
sub
sub
sub
ins
jae
sbb
shl
ficomp
jb
fs
cld
cmp
dec
adc
push
mov
(bad)
dec
fld
repnz
cld
xchg
mov
cmp
mov
and
call
xchg
push
add
and
pop
fild
or
adc
cmp
cmp
pop
add
jno
mov
mov
stos
loope
int3
cs
push
lods
sbb
xchg
pop
in
adc
aas
jl
(bad)
out
ss
sub
xchg
test
push
sbb
aas
and
mov
cmp
jns
inc
mov
xchg
in
push
dec
and
cld
pop
mov
movs
or
dec
adc
sub
mov
je
jmp
pushf
leave
push
xor
pop
jp
daa
push
pop
mov
or
loop
sbb
ror
pop
push
dec
imul
arpl
push
adc
xchg
mov
pop
gs
cdq
inc
or
mov
ret
sbb
push
mov
pop
push
dec
pop
dec
shl
inc
add
aas
retf
in
dec
(bad)
dec
call
repnz
xchg
fadd
fst
dec
cli
stos
adc
mov
jo
sbb
jnp
cdq
inc
jge
in
xchg
mov
add
les
popa
mov
cwde
jle
xor
pop
not
and
cmp
mov
add
gs
dec
jno
mov
dec
out
cmp
xchg
mov
pushf
cmp
add
mul
add
push
icebp
xchg
xlat
bnd
scas
clc
push
int3
nop
sub
or
fcomp
pop
mov
adc
or
mov
dec
aad
and
push
inc
arpl
das
pop
and
jno
push
jno
mov
jg
dec
imul
cmp
aam
adc
dec
outs
pop
push
mov
jb
jmp
sbb
js
cld
sar
addr16
adc
lods
jp
dec
push
in
jbe
enter
ds
jae
test
lds
mov
les
mov
out
pop
ficom
stos
dec
cmpxchg
leave
xchg
sbb
cmp
and
sbb
test
push
iret
inc
je
pop
pop
mov
lds
add
out
and
dec
cmp
ret
shl
mov
push
in
cwde
dec
in
mov
movs
bound
cdq
cmp
xor
sbb
xchg
or
xor
(bad)
shl
sbb
data16
jecxz
scas
int3
mov
rcr
inc
repz
movs
mov
inc
dec
xchg
push
push
xor
or
retf
push
and
add
push
and
dec
mov
inc
popa
movs
movs
pushf
jmp
jmp
xchg
cmps
fld
icebp
aas
sbb
or
pop
jp
popf
sahf
imul
loopne
or
xchg
cld
and
inc
dec
leave
inc
sbb
int3
xchg
cs
pop
inc
cmps
xor
pop
sub
call
xchg
out
adc
aas
std
xchg
mov
xchg
loop
pop
out
loop
push
jecxz
imul
pop
push
mov
dec
cs
das
inc
mov
mov
cmps
inc
xchg
jmp
ja
addr16
jmp
cmp
mov
out
mov
test
inc
fst
iret
adc
daa
push
mov
jecxz
test
inc
fcom
or
and
dec
stc
jns
xchg
(bad)
or
add
out
cwde
(bad)
sbb
sub
mov
les
repnz
inc
fcomp
mov
cld
mov
fisttp
test
icebp
int3
aas
dec
push
cli
push
fwait
xlat
add
push
sub
lods
dec
shr
add
and
shr
and
iret
ins
xchg
in
scas
jno
(bad)
sub
push
out
cmp
rcr
pop
mov
mov
fs
data16
loop
cmp
sbb
imul
xor
or
movs
add
mov
inc
xchg
push
ss
(bad)
mov
repz
xchg
clc
int3
dec
cmp
test
pop
inc
jecxz
nop
lea
into
in
pop
cmp
jg
out
pop
push
and
jecxz
in
mov
xlat
ins
cmp
xchg
push
xor
arpl
xchg
cli
push
and
adc
stc
cmps
sbb
inc
add
jae
lds
arpl
mov
cmp
and
mov
pop
cld
lds
sar
imul
pop
dec
out
or
dec
jge
lahf
sbb
in
cli
inc
lds
stos
fcom
cmp
xor
aaa
popf
jne
fdivr
sub
or
mov
(bad)
and
mov
mov
cmc
int
inc
inc
jb
and
xchg
je
sbb
test
xor
cmps
movs
push
cmp
mov
cmps
neg
mov
or
mov
xor
in
xchg
lea
mov
jmp
fwait
add
sub
adc
and
adc
out
cdq
jp
inc
pop
repnz
aaa
out
repz
push
hlt
in
push
aas
adc
add
add
jmp
out
pushf
scas
int3
mov
sub
xor
xor
push
and
dec
enter
cmp
xor
xchg
and
je
pop
pop
mov
jo
retf
push
cld
pop
lds
cmc
add
fisttp
pop
jp
jnp
imul
rol
adc
sub
add
out
dec
aaa
dec
icebp
sub
jmp
dec
ret
test
call
inc
push
push
cmp
cmp
sub
or
pop
xor
and
mov
dec
push
jp
xchg
inc
movd
in
adc
fild
sub
pop
fcomp
int
or
jg
cld
push
jmp
push
xlat
dec
sti
fnstsw
sub
cld
mov
inc
dec
fsubr
pop
fisub
dec
shr
pop
push
add
lods
dec
cmp
adc
mov
mov
jp
mul
mov
inc
mov
adc
dec
adc
stos
push
add
gs
int
and
scas
dec
add
repnz
(bad)
push
stos
js
cmp
outs
xor
sub
sbb
dec
mov
sbb
call
dec
hlt
ds
ja
scas
stc
inc
or
test
stc
xor
cmp
in
scas
cmp
ror
jp
xlat
pop
repnz
mov
mov
push
cmp
into
outs
xchg
xor
das
out
mov
leave
(bad)
cmp
xchg
push
out
mov
inc
ins
mov
cmp
das
out
in
mov
vpaddw
mov
mov
xor
aad
add
or
movs
push
jmp
int
shl
nop
hlt
nop
and
mov
shr
mov
mov
(bad)
pop
jmp
ret
fisub
mov
pop
push
ret
mov
add
add
xchg
cli
pop
movs
stos
sub
in
(bad)
paddw
jle
fisubr
je
mov
adc
mov
imul
and
adc
ins
cmp
add
xor
jg
mov
add
pop
pop
rcl
cli
mov
in
sub
push
fwait
pushf
and
and
inc
sub
push
sbb
xchg
dec
mov
mov
cwde
or
mov
and
dec
pop
add
repz
sti
inc
jne
pop
push
in
mov
xlat
mov
es
int3
add
gs
(bad)
pusha
add
dec
ss
lock
clc
stc
out
push
aas
gs
fidivr
(bad)
and
mov
fwait
call
cs
adc
lods
cmp
es
mov
mov
adc
int3
js
call
adc
test
movs
pop
sti
mov
movs
mov
mov
mul
jecxz
mov
clc
cmp
or
repz
aam
idiv
enter
fwait
rcl
adc
int3
ins
leave
pushf
sbb
xor
jl
cmp
shld
and
jbe
enter
ja
or
ja
cmp
mov
cwde
add
dec
dec
sub
in
sub
xor
dec
in
ins
cmp
movs
sbb
mov
call
aad
push
call
dec
push
into
pop
mov
fwait
ins
retf
jbe
rcr
leave
shl
ret
pop
mov
pop
xlat
arpl
dec
mov
sar
test
mov
div
mov
lds
movs
or
pop
imul
mov
mov
or
mov
popf
sbb
loopne
mov
mov
xchg
sub
ret
call
mov
loopne
and
loop
xchg
rcl
retf
clc
lahf
push
push
add
adc
xchg
repz
aaa
div
pop
and
rcr
std
cmc
add
dec
call
fs
int
pop
mov
add
fnsave
shl
ins
mov
push
mov
xor
and
mov
cmp
pinsrw
inc
(bad)
clc
push
enter
repz
loopne
icebp
ja
xchg
jle
adc
into
addr16
loop
cmp
gs
outs
not
jne
cmp
bound
cdq
add
outs
pop
sbb
adc
inc
xor
or
dec
add
aad
adc
pop
sbb
push
adc
iret
hlt
add
lock
test
sub
dec
cwde
fistp
xchg
push
mov
cmp
mov
aaa
je
jge
sub
adc
push
sub
cmps
adc
jg
fcomp
sbb
pop
push
jg
cmp
sbb
cmp
call
xchg
fild
stos
mov
outs
adc
and
push
add
lock
and
fidivr
icebp
daa
pop
push
sbb
sub
mov
jle
outs
sbb
xor
(bad)
loopne
mov
lock
mov
shl
ret
enter
and
in
xor
rol
or
pop
mov
dec
jmp
aad
push
dec
fadd
jl
test
and
cmc
xor
inc
outs
mov
iret
outs
mov
sub
sub
dec
ror
and
test
pop
sub
ins
add
xor
test
and
int3
pop
repz
mov
call
mov
stc
push
mov
loop
cmp
push
mov
inc
jmp
mov
repz
pop
dec
jmp
stc
cli
je
shl
lods
std
sbb
addr16
pushf
adc
sbb
mov
pushf
pop
or
iret
neg
in
or
inc
popa
cwde
rol
jmp
xor
dec
pusha
repz
dec
pusha
mov
in
sahf
inc
push
out
mov
inc
fwait
adc
je
push
xchg
cs
in
inc
add
mov
sub
add
and
add
and
ss
inc
inc
cld
jo
call
mov
or
and
jbe
out
je
xor
retf
mov
jle
add
jne
cli
pop
sub
xchg
jno
hlt
rol
jecxz
mov
dec
lahf
clc
movlps
jo
repz
mov
mov
fiadd
jl
inc
xor
into
(bad)
mov
adc
mov
or
out
jle
mov
cs
movs
jp
mov
rcr
je
aad
adc
fcom
lods
retf
mov
pop
cwde
mov
jnp
push
mov
cwde
mov
ret
pop
mov
add
test
cmc
stos
in
inc
cmps
nop
mov
push
repnz
cmp
xor
in
jne
outs
pop
sbb
dec
push
xchg
xor
mov
dec
aaa
push
shr
repnz
jo
add
xor
push
pop
test
cmp
retf
mov
pop
test
jne
lock
mov
cmp
mov
fdivr
xor
(bad)
xchg
mov
push
pop
mov
scas
and
(bad)
out
xlat
xchg
jbe
dec
pushf
in
xlat
out
inc
xchg
or
sub
les
in
enter
dec
loopne
ins
adc
sbb
mov
fadd
ins
pushf
pop
clc
ds
bound
in
xchg
stc
inc
cwde
(bad)
jge
jo
fcom
sbb
outs
cwde
xchg
(bad)
daa
ja
shl
and
mov
pop
icebp
xchg
ins
aaa
aam
mov
jmp
dec
test
es
hlt
sub
jmp
mov
and
cmp
aam
clc
sbb
adc
out
pop
sbb
sub
xlat
xchg
lds
in
jmp
test
mov
sbb
jmp
cmc
pop
and
call
outs
push
movs
aaa
xor
gs
pop
xchg
test
(bad)
xor
sahf
aas
inc
fs
mov
xchg
mov
iret
aas
pusha
jae
pusha
mov
push
stos
loope
ins
dec
ror
(bad)
fld
mov
xor
xor
div
enter
div
add
fwait
pop
jmp
shr
lahf
outs
call
cmp
jb
cmc
retf
scas
add
mov
push
mov
mov
inc
les
pop
sahf
adc
add
mov
dec
or
jb
push
test
mov
test
mov
inc
xlat
xchg
jl
sbb
(bad)
pop
cmp
bsr
dec
cmp
mov
out
push
xor
shr
inc
push
in
dec
fist
js
mov
sbb
mov
dec
out
pop
add
cmp
mov
in
sbb
fadd
nop
and
or
push
pop
push
lods
ins
mov
fidiv
sbb
push
jge
lahf
xlat
sbb
cmp
xchg
leave
jge
fwait
lock
shr
add
test
nop
out
jae
jbe
mov
push
push
btr
mov
jge
hlt
rcl
mov
jnp
es
arpl
mov
ds
es
jecxz
xchg
pop
add
mov
xor
scas
out
cmp
xor
jge
fcmovnu
ja
popa
pop
xchg
ins
cmp
retf
or
arpl
xor
jo
mov
outs
sti
rcr
fst
cmp
aaa
je
add
adc
cmp
cdq
sahf
sub
ror
repnz
or
cwde
(bad)
and
jbe
push
add
call
fsubr
sahf
mov
addr16
or
jno
inc
in
out
out
xchg
retf
xchg
stos
cmp
sub
xchg
(bad)
or
aas
out
push
and
or
inc
adc
mov
imul
mov
clc
mov
sti
ja
mov
inc
push
das
sub
aad
fmul
sbb
jp
dec
push
fadd
aas
push
gs
pop
add
inc
arpl
sub
push
xlat
icebp
cmps
leave
or
sub
rol
xchg
sub
or
pop
sbb
shl
pop
jmp
mov
fidivr
dec
mov
iret
(bad)
repnz
sahf
jne
xchg
sub
mov
not
bound
cli
out
mov
out
mov
es
mov
in
mov
cli
test
push
pop
mov
ja
jns
fs
repz
and
adc
sub
or
pop
push
jns
iret
mov
fs
imul
adc
xor
fisub
(bad)
adc
push
jle
sar
xchg
mov
jb
stos
mul
aaa
bound
jbe
fist
aaa
and
xchg
sub
hlt
scas
jl
loopne
sbb
jle
sbb
scas
(bad)
xchg
mov
push
jle
sti
mov
gs
xor
sbb
nop
jmp
pop
jmp
rol
lfs
fdivrp
cmp
test
test
scas
outs
std
pusha
lods
xchg
repnz
ins
enter
loope
fmul
pop
retf
sbb
jne
cwde
sbb
adc
add
cld
xchg
adc
arpl
xchg
push
out
rcl
fcomp
add
pop
addr16
std
push
cmp
ins
stc
xlat
(bad)
(bad)
scas
movs
sbb
jb
call
ret
pop
out
sbb
or
(bad)
mov
dec
add
push
pop
ror
xchg
add
xchg
and
(bad)
adc
mov
sbb
scas
dec
mov
xor
ficomp
push
push
pop
pop
pop
push
mov
sub
out
cs
sub
pushf
pop
mov
xchg
stos
sbb
les
out
cmps
jae
push
push
mov
std
test
jle
mov
out
mov
push
shl
push
shl
dec
movs
mov
imul
pop
push
fild
test
xor
call
stos
inc
fsub
ror
push
out
mov
mov
mov
lods
pusha
or
outs
sub
jg
adc
dec
jp
jmp
lods
(bad)
push
inc
retf
cmps
lods
aam
mov
paddusb
imul
mov
sbb
add
fidiv
inc
xchg
cs
ss
stc
xchg
lahf
adc
jecxz
dec
call
add
and
mov
hlt
popa
aaa
iret
rcr
push
jns
sbb
push
sbb
jnp
int3
sysenter
imul
iret
repz
mov
leave
retf
adc
aam
shr
not
sbb
push
jg
dec
cwde
sub
adc
or
mov
outs
mov
or
test
out
mov
push
fsubr
out
pop
addr16
fistp
jecxz
dec
xchg
cmp
jns
(bad)
xor
mov
sub
hlt
pop
push
sub
mov
mov
pop
push
addr16
adc
pop
mov
cmp
jno
dec
dec
jmp
or
iret
adc
pop
xchg
adc
sbb
push
add
mov
adc
lods
cmp
call
xchg
not
fisttp
call
ret
sbb
pop
scas
addr16
pop
xchg
pop
fimul
(bad)
idiv
xor
sbb
cdq
mov
sti
(bad)
and
cmc
(bad)
imul
addr16
xlat
or
mov
adc
fsub
push
mov
int
out
ret
cmc
inc
add
mov
xchg
popa
popa
cvtdq2ps
les
add
les
xlat
sbb
shr
push
repz
push
or
mov
iret
cmps
fist
fimul
adc
xchg
pop
xchg
imul
pop
sbb
inc
mov
mov
fnsave
mov
movs
and
sahf
sbb
mov
cmps
fwait
sub
aad
mov
sub
push
pop
lds
pusha
push
fs
xchg
sbb
das
ret
ficomp
add
test
inc
dec
add
xchg
add
sub
imul
jmp
(bad)
jg
retf
mov
sbb
imul
jmp
imul
mov
in
pop
and
xchg
bnd
sbb
or
cmp
pop
push
adc
jbe
imul
inc
arpl
dec
fstp
les
mov
jge
jb
leave
cmps
pop
sbb
(bad)
and
rcl
test
pop
into
sbb
xchg
outs
(bad)
cmp
(bad)
ja
lea
cwde
xlat
push
xor
les
dec
xchg
dec
jae
xor
fiadd
(bad)
sbb
out
jp
pop
stos
mov
xor
adc
jns
fwait
scas
out
adc
inc
jmp
push
in
adc
jns
je
not
outs
in
pop
ins
clc
pop
mov
mov
mov
aas
popf
or
ret
or
mov
xchg
push
mov
pop
test
pop
lods
fild
pop
fild
pop
daa
sbb
gs
push
jecxz
sbb
xchg
dec
pop
ja
aaa
and
cmp
nop
and
mov
popf
das
movs
mov
or
fidiv
jecxz
dec
nop
pop
and
sub
mov
cmp
cld
in
jns
mov
imul
cmp
cmp
out
add
mov
mov
mov
xchg
call
pop
adc
or
pop
push
mov
and
xchg
dec
mov
sbb
test
or
cmp
test
data16
neg
(bad)
xchg
pushf
dec
mul
cmps
cmp
pop
mov
adc
bound
(bad)
out
inc
ins
aaa
pop
pushf
adc
out
(bad)
jo
(bad)
daa
mov
adc
adc
popa
sbb
mov
addr16
pop
movs
mov
scas
add
ficomp
nop
adc
mov
in
mov
sbb
paddsb
retf
aaa
and
fdivr
dec
stos
enter
sbb
cmps
fstp
mov
xchg
inc
loop
xchg
pusha
es
push
xlat
mov
imul
add
jl
xlat
mov
sbb
cdq
adc
push
add
mov
push
pop
mov
imul
js
xchg
or
add
scas
fmul
mov
test
xchg
int
cmp
(bad)
fsubr
pop
call
mov
enter
test
add
inc
xchg
xchg
push
les
fcom
or
jle
mov
xlat
in
out
jecxz
clc
test
bound
nop
in
clc
sub
cmp
sbb
mov
pusha
push
jnp
jb
jmp
and
bound
lock
sbb
push
mov
push
jno
and
add
mov
in
push
jp
fidivr
stc
jns
jnp
movs
mov
dec
push
rol
jns
inc
or
and
jmp
add
call
test
sbb
or
fldcw
cmps
test
mov
repnz
xor
add
xchg
push
jg
clc
or
mov
jno
adc
sub
add
cs
xor
aad
cmp
stos
repnz
mov
neg
xchg
push
jns
dec
cwde
repz
fcmovnbe
mov
das
cmp
(bad)
jns
mov
out
pop
mov
popf
jnp
out
pop
std
jo
mov
loopne
into
sbb
sub
ret
xchg
int3
mov
rcl
ret
sub
and
xchg
stos
or
and
inc
push
and
inc
and
mov
cld
push
arpl
(bad)
jmp
mov
xchg
fsubr
mov
xchg
je
dec
std
mov
cmovno
mov
pop
(bad)
jb
sti
sbb
xor
mov
(bad)
xlat
mov
aad
test
into
push
pop
popf
jle
sub
pop
xchg
cmc
je
sti
(bad)
out
jmp
leave
jle
test
xor
test
out
pmaddwd
cdq
xor
fnsave
cmp
lds
pop
sub
mov
bswap
sub
mov
pop
pop
(bad)
pop
xchg
lea
adc
adc
pop
push
pop
cmp
cmp
jno
mov
and
ret
pop
pop
mov
call
pop
aam
repnz
sub
and
arpl
dec
mov
mov
in
fisubr
inc
lds
imul
jne
lods
scas
in
test
sub
aas
or
addr16
adc
mov
push
ins
add
or
clc
enter
jmp
lods
(bad)
retf
outs
int
outs
out
in
mov
or
fucomip
retf
(bad)
popa
int3
mov
aaa
inc
out
and
nop
das
imul
ret
xor
pop
add
xor
aaa
test
lds
enter
inc
and
inc
push
ds
dec
pop
out
cld
popf
xchg
jge
mov
inc
dec
ds
cs
and
std
lods
iret
push
in
scas
sub
out
lods
sub
inc
mov
call
mov
mov
scas
and
mov
cmp
ss
mov
fisttp
mov
out
clc
jnp
pop
icebp
test
jb
push
dec
sbb
mov
inc
mov
into
ins
mov
js
loopne
mov
cmp
ss
dec
test
icebp
js
in
add
and
push
jae
jle
dec
jbe
leave
das
fwait
mov
cmp
dec
sahf
mov
xlat
outs
pushf
jp
mov
push
jl
mov
push
mov
fldenv
int3
add
sub
push
ja
xchg
shl
mov
out
xchg
mov
push
jnp
movs
and
mov
ins
xchg
imul
or
movs
inc
add
mov
and
jmp
arpl
out
inc
imul
sub
or
lahf
cmp
jecxz
sbb
imul
mov
dec
(bad)
mov
das
jnp
into
jns
(bad)
ja
adc
cmp
lahf
cmp
dec
movs
cmp
movs
add
lea
hlt
jl
cmp
out
mov
push
add
data16
test
xor
dec
test
and
not
ds
and
jmp
or
sbb
clc
or
cmps
adc
nop
bound
lds
sbb
imul
mov
test
out
(bad)
out
shl
ja
push
sbb
jle
popf
cmc
addr16
mov
sbb
dec
fdivr
jmp
mov
or
cmp
add
ret
inc
cmc
pushf
pop
jns
push
fidivr
daa
push
test
imul
stc
popa
or
ret
pop
xor
sbb
jnp
mov
in
int
dec
pop
push
shl
loopne
aas
(bad)
pop
xor
loope
in
push
data16
loopne
leave
frstor
jmp
loopne
sbb
inc
leave
ja
rcl
fist
cmp
cmp
mov
jb
cs
daa
xchg
in
inc
mov
in
addr16
mov
mov
test
fwait
fs
adc
xor
mov
movs
or
ret
sub
fimul
add
xchg
fidiv
pop
sbb
sbb
or
test
pushf
push
add
xchg
dec
adc
or
movs
mov
lds
retf
sbb
cwde
xor
mov
retf
outs
mov
loop
push
push
fdiv
ret
mov
mov
loope
pop
test
jbe
dec
int3
jo
xor
push
xor
popa
mov
xchg
cmc
pop
mov
in
sub
out
push
pop
shl
in
cmp
xlat
mov
int3
jecxz
sub
pop
xchg
imul
xor
cdq
movs
dec
xor
data16
push
pop
jge
xchg
stc
dec
xchg
mov
adc
and
xlat
pop
pop
in
test
sub
mov
mov
xchg
sahf
inc
or
jb
hlt
test
cmp
jecxz
inc
fisub
xchg
push
mov
xlat
and
dec
in
adc
mov
or
ror
shr
mov
and
das
lock
xor
xor
retf
sar
icebp
loopne
in
sbb
adc
xor
movs
and
inc
dec
xchg
adc
inc
push
cmp
aad
mov
and
leave
dec
retf
xchg
test
aad
arpl
xlat
jno
ins
arpl
hlt
hlt
sub
or
pop
popf
(bad)
pop
xchg
lock
test
or
xor
push
and
ins
pusha
(bad)
sbb
test
movs
xchg
sti
fistp
clc
xor
clc
or
std
addr16
rol
fadd
loope
shl
push
cmps
mov
loop
inc
xchg
pop
cmp
jns
sub
int
rol
fisubr
xchg
adc
xchg
add
outs
out
scas
pop
jp
push
cmps
test
jb
in
fmul
cmc
rcl
outs
loope
or
inc
nop
ror
add
dec
sti
test
nop
(bad)
xchg
mov
call
add
mov
fst
int3
and
fldcw
jne
or
push
in
or
mov
push
ret
mov
ror
mov
or
inc
mov
jmp
cmp
inc
mov
ds
rcr
(bad)
sbb
fdivr
sbb
inc
dec
rol
gs
pop
stos
cwde
add
pop
sbb
inc
icebp
shl
test
mov
scas
push
test
gs
dec
mov
les
sub
hlt
push
lods
test
sub
pusha
push
ret
mov
imul
retf
mov
jge
xchg
push
lods
icebp
mov
xor
mov
loopne
jns
popf
mov
push
pop
fdivr
cmp
mov
pop
jb
sub
in
cmps
(bad)
out
lds
jb
sbb
mov
dec
call
mov
or
call
add
shr
retf
test
fistp
mov
fstp
repz
xor
jp
ss
xchg
fsubr
inc
cli
or
addr16
mov
hlt
(bad)
call
cdq
or
jmp
mov
mov
lahf
movs
icebp
pushf
into
dec
shr
out
cmp
adc
pop
cwde
xor
jns
pop
dec
sbb
or
push
mov
adc
inc
or
(bad)
pop
mov
cmp
or
pop
aaa
pop
fsubr
sub
aad
push
dec
lock
test
loop
out
dec
(bad)
out
icebp
jb
icebp
cmc
test
scas
lods
push
and
dec
mov
out
out
xchg
adc
stos
mov
in
cmp
out
mov
(bad)
jp
adc
push
test
fistp
push
cs
nop
mov
cli
and
add
sub
not
test
out
mov
ret
mov
mov
dec
mov
mov
inc
repz
push
aad
inc
lock
and
mov
repz
(bad)
dec
add
pop
int3
cmp
fistp
mov
rol
and
ins
test
xchg
out
sbb
loope
pusha
ret
ins
jo
jae
dec
int
sub
pop
push
movs
dec
cld
mov
xor
sbb
cmp
cmp
sub
inc
push
and
out
adc
cmp
and
std
cmc
jmp
dec
jae
fld
loopne
cli
and
pop
and
and
outs
pop
or
sub
push
sti
mov
inc
push
and
inc
movs
cli
push
mov
fwait
out
and
mov
pop
imul
in
adc
ja
jecxz
rcl
jne
scas
test
pop
adc
adc
push
fisub
call
cmp
xchg
mov
(bad)
sub
xor
ins
jo
fwait
lods
push
mov
sbb
out
inc
hlt
idiv
push
and
jle
popf
loope
push
inc
mov
ret
aas
adc
mov
clc
mov
repz
cmps
add
jae
adc
cmps
call
inc
mov
cmps
js
pop
pop
adc
jmp
sub
shr
push
cmc
call
xchg
jae
xchg
pop
mov
stc
adc
bound
movs
sti
aaa
ins
add
cmp
pop
inc
cli
test
sub
jno
stos
inc
cwde
ins
cwde
cmc
dec
mov
sbb
sbb
jne
xchg
stc
xchg
aam
out
je
outs
cmp
pop
imul
sbb
xchg
stc
je
sub
adc
icebp
bound
pop
sub
cli
fdivr
fldenv
fisubr
cdq
ss
and
jge
mov
int
adc
sub
jge
aad
jge
push
sub
pop
scas
enter
mov
test
inc
jmp
mov
les
inc
sub
sbb
lock
and
adc
pop
push
mov
pop
mov
movs
(bad)
leave
in
adc
or
mov
fadd
ret
inc
sub
enter
cmp
inc
nop
test
ret
out
loop
sbb
dec
adc
jnp
mov
inc
fs
ucomiss
mov
mov
mov
dec
int
or
(bad)
pop
push
push
ret
mov
mov
rcl
retf
and
adc
adc
shl
pusha
jne
loope
mul
es
retf
xchg
push
mov
scas
or
adc
rcl
and
adc
sub
imul
pop
sub
adc
fimul
aam
leave
sub
pop
cmp
fcomip
mov
jle
retf
jmp
hlt
popf
mov
push
loopne
xchg
cmps
repnz
dec
fs
cmps
shr
adc
call
cld
sub
fld
push
nop
test
sub
arpl
mov
push
pop
or
(bad)
push
inc
adc
in
xchg
pop
xor
in
jmp
imul
mov
add
mov
pop
(bad)
dec
mov
mov
pop
mov
nop
shr
test
fcomp
cli
ss
aad
fs
mov
pop
sahf
call
dec
xchg
jae
leave
xchg
(bad)
fist
movs
xchg
jnp
push
xor
neg
and
mov
iret
iret
cmp
add
(bad)
loope
sbb
(bad)
out
out
add
mov
call
jmp
das
cmp
adc
(bad)
mov
add
adc
aas
movzx
les
sbb
pop
add
ss
movs
mov
stos
inc
icebp
mov
jp
lahf
in
adc
repz
ja
retf
cli
in
lods
aas
push
aam
stos
adc
xor
sub
(bad)
xor
sar
mov
mov
sti
push
sbb
jnp
sbb
fistp
sub
dec
outs
repz
mov
xor
call
pop
xchg
repz
pop
and
adc
pop
movs
mov
ja
movs
mov
cdq
mov
retf
arpl
mov
jno
nop
pop
mov
aad
xor
clc
(bad)
xchg
sbb
cwde
ja
popf
je
into
xchg
mov
pop
pop
movs
scas
sbb
fdiv
dec
dec
or
jns
jns
cmp
jmp
sbb
mov
fisttp
jb
push
adc
fs
xlat
inc
ficom
cld
jmp
sbb
loop
mov
push
add
inc
cld
mov
cmp
dec
sbb
jp
scas
pusha
sub
fdiv
xor
xor
mov
call
ins
shl
mov
test
clc
or
ds
push
and
pop
xor
test
arpl
scas
push
sti
(bad)
enter
xchg
lahf
push
movs
xor
rcr
ins
(bad)
xor
adc
test
mov
push
jmp
popf
shl
push
mov
imul
xor
pop
gs
adc
add
leave
mov
test
ins
sbb
jg
xchg
mov
lods
scas
fs
sbb
mov
xor
inc
pop
and
imul
lahf
cs
mov
and
mov
inc
dec
mov
repz
cmp
stos
mov
movs
xor
inc
xchg
or
imul
and
push
pop
mov
test
popa
mov
iret
xor
jl
dec
jge
lods
pushf
sti
mov
daa
mov
adc
xchg
movs
lods
mov
mov
adc
imul
mov
cmps
icebp
fwait
push
add
test
in
fistp
js
pop
xor
clc
sub
jae
pop
pop
mov
mov
xchg
int
aaa
push
inc
cli
adc
in
mov
in
jge
xchg
push
jae
dec
retf
adc
inc
in
faddp
test
push
or
hlt
stos
cwde
mov
mov
test
jg
inc
popf
mov
adc
pop
sub
enter
ins
(bad)
fsubr
hlt
sub
test
cdq
ds
loopne
inc
mov
test
and
mov
dec
adc
fs
fcmovbe
xchg
mov
push
add
ret
inc
jp
pop
iret
inc
mov
sbb
add
call
rcl
icebp
popf
and
inc
cmps
movs
pop
pushf
out
dec
adc
adc
xchg
gs
lea
and
jae
fimul
sbb
xchg
int
call
pop
xor
pop
retf
fnstcw
dec
sti
sbb
sbb
clc
pop
mov
aas
pop
stc
push
jecxz
mov
xchg
mov
inc
loopne
cmp
jb
mov
mov
loope
xchg
or
jg
dec
sar
pop
mov
xchg
lea
rcl
mov
lea
push
mov
retf
xor
enter
mov
mov
push
pop
jae
sub
scas
pop
push
sbb
mov
and
inc
sub
jp
xor
jge
push
sub
into
loopne
sbb
ret
adc
cli
icebp
xchg
mov
cmps
or
sti
aaa
push
outs
sbb
pop
sbb
fucomp
and
pop
fcomp
sbb
mov
lods
dec
retf
jne
loope
ret
aaa
gs
into
pop
jecxz
jl
dec
dec
in
mov
xchg
xchg
jmp
inc
add
lea
xchg
nop
xchg
sub
xchg
push
xor
icebp
mov
shl
mov
mov
shr
icebp
xchg
xchg
pop
push
jle
out
aaa
lods
outs
int3
push
cmp
mov
inc
inc
push
mov
ret
mov
adc
cmps
mov
inc
mov
pop
test
loopne
mov
je
outs
pusha
xchg
pop
js
mov
lea
clc
xor
push
stos
fbld
movs
cmps
aam
add
pop
push
jmp
lock
push
inc
lods
movs
xlat
sbb
fwait
mov
in
xchg
mov
imul
mov
int3
mov
rol
arpl
stc
xchg
stos
pop
mov
les
rcr
(bad)
mul
jecxz
dec
cs
mov
enter
out
push
and
std
mov
pop
lea
jnp
fsub
fwait
mov
loop
xchg
sbb
xchg
mov
gs
cmc
clc
scas
shl
repnz
jo
pop
xchg
add
out
fcom
dec
sub
dec
rcl
repz
inc
(bad)
shl
push
pop
and
fs
or
jne
pop
test
dec
lahf
jbe
out
cmps
iret
adc
fwait
mov
mov
or
(bad)
mov
sbb
cmps
stos
daa
ins
add
cmp
or
out
add
and
fsub
add
sub
xchg
xchg
xor
pop
(bad)
cdq
out
mov
push
mov
test
cmp
and
fistp
cwde
fisubr
mov
fld
and
or
cli
sbb
int
dec
aad
icebp
jnp
repz
(bad)
or
push
pop
pushf
aam
mov
iret
cld
scas
movs
push
out
pushf
or
add
movs
jmp
sahf
out
cmp
iret
pop
clc
outs
ror
inc
fisubr
xchg
xchg
pop
pop
movs
in
jae
jle
cmps
lahf
jp
stos
in
imul
mov
arpl
sub
lods
jb
pop
jmp
pop
cmp
inc
cld
ja
stc
mov
xchg
sub
mov
frstor
test
xchg
gs
mov
sbb
inc
fmul
scas
fcomp
imul
scas
arpl
sub
dec
xchg
mov
scas
fwait
and
pop
sub
outs
push
ret
ret
dec
aad
mov
pop
cwde
fwait
nop
inc
push
inc
(bad)
ins
dec
in
and
les
retf
or
leave
dec
adc
imul
and
ret
mov
lds
push
dec
ins
sub
outs
mov
fcmovu
adc
pop
fst
jmp
pop
mov
scas
sbb
mov
outs
(bad)
popf
cwde
jge
xor
ror
pop
mov
sbb
out
je
sbb
mov
out
out
xor
lds
mov
mov
js
mov
sahf
cld
jle
or
jmp
mov
je
xor
jns
outs
popa
test
mov
mov
mov
out
ins
jmp
fisub
not
jecxz
jae
imul
inc
cmc
inc
ds
dec
cld
jmp
cli
adc
xchg
mov
or
dec
pop
and
in
scas
xchg
test
(bad)
or
pop
or
out
test
dec
or
in
lods
mov
retf
jnp
mov
pop
xchg
adc
ja
popa
dec
jecxz
arpl
mov
sub
ss
xchg
sub
adc
aad
adc
mov
pusha
sub
pop
mov
retf
cmps
test
adc
pop
cld
shl
or
sbb
jmp
xchg
not
add
ss
cs
cmps
xor
push
cmp
test
jp
sbb
movs
(bad)
call
enter
jnp
pop
jge
scas
cwde
fwait
inc
fild
int
lods
lods
cmps
pop
and
int
inc
in
das
sti
xchg
stos
sub
in
aam
mov
aas
cld
mov
test
std
cld
bound
mov
sub
push
mov
or
shl
les
ret
pusha
xor
xor
sub
cmp
dec
add
ins
mov
inc
(bad)
xchg
sub
inc
iret
and
dec
outs
cmp
xlat
sub
push
stos
(bad)
test
les
lds
data16
fwait
(bad)
rol
fstp
loope
jo
dec
loopne
rcr
sti
mov
je
pusha
je
and
sbb
jmp
loope
pop
push
fisubr
jb
xchg
shl
ret
pop
daa
ret
pslld
push
in
call
sub
pop
mov
lds
in
pop
rcl
sbb
pop
mov
sub
inc
stos
jmp
pop
loope
xchg
xchg
shr
(bad)
cmps
pop
xchg
mov
imul
and
jmp
loope
add
fs
xor
dec
ins
push
mov
inc
sbb
sub
shr
mov
push
cmps
mov
nop
dec
mov
mov
dec
lds
push
mov
push
aaa
call
inc
push
push
mov
dec
retf
aad
jno
mov
adc
mov
mov
movs
pop
cwde
mov
sbb
gs
fadd
arpl
lea
in
or
hlt
pop
inc
and
ss
adc
add
mov
push
shl
mov
xchg
fs
sbb
add
repnz
cmp
stos
(bad)
frstor
sar
mov
sub
loope
sub
or
dec
ds
aas
lock
or
fst
add
arpl
fdiv
inc
int
(bad)
pop
in
xor
shl
inc
call
call
cmp
jle
shr
mov
mov
and
gs
xchg
push
movs
jge
mov
(bad)
shl
es
movs
push
dec
cmc
(bad)
ds
repz
cmp
cmp
or
dec
sub
mov
or
mov
shr
jno
loop
inc
mov
rol
xor
gs
lds
cmp
cmp
sahf
and
sub
aaa
lock
mov
pusha
test
jae
lahf
xchg
loope
mov
sub
test
(bad)
shl
je
cld
in
and
add
mov
iret
(bad)
pop
mov
in
mov
mov
xor
rcl
cmps
data16
push
push
das
inc
les
daa
sub
frstpm(287
xor
mov
std
inc
mov
xchg
push
push
call
clc
imul
inc
inc
push
rcl
lock
sub
loop
popf
test
in
xor
repz
mov
mov
movs
retf
bound
jle
jmp
fst
or
shl
inc
in
push
adc
adc
sti
sbb
in
xchg
mov
cmp
jne
add
jge
loope
ins
adc
jp
loopne
nop
pop
xchg
inc
stc
xor
ins
int
cmp
in
call
int3
int
push
or
sahf
mov
lock
jmp
and
fsubr
xchg
inc
mov
(bad)
popf
les
dec
data16
adc
das
pop
xchg
cmps
push
adc
popa
push
rcr
add
adc
mov
test
xor
ficomp
or
mov
stos
jmp
cmp
pop
dec
sbb
retf
lods
cs
mov
mov
adc
inc
movs
sub
jl
adc
loope
jnp
sub
test
lods
inc
imul
inc
xor
aam
pop
cmps
jbe
fistp
pop
cmps
inc
mov
retf
repnz
and
inc
sub
lods
pop
mov
cmp
cmc
test
jg
jno
scas
nop
sbb
xor
retf
cdq
fwait
rcr
lea
push
lods
dec
ins
test
add
leave
test
push
pop
or
jne
sub
mov
pop
pop
sbb
jle
pushf
sbb
outs
xor
push
hlt
and
and
add
ins
xor
dec
fcom
(bad)
retf
push
or
iret
push
(bad)
jl
jnp
mov
in
cwde
cwde
loope
shr
and
mov
ror
push
lock
adc
xlat
fiadd
nop
out
les
cmp
outs
dec
mov
pop
ret
stc
leave
sub
xlat
iret
out
cmp
jbe
adc
mov
test
cli
pop
mov
mov
adc
sub
out
loopne
std
cmp
jmp
movs
cmps
xor
arpl
out
inc
mov
cwde
nop
add
das
add
js
call
mov
pushf
jnp
cmps
jnp
mov
(bad)
push
push
and
xchg
cdq
inc
jg
xchg
addr16
and
test
not
outs
mov
scas
mov
scas
jno
lahf
xor
pusha
or
stos
shr
adc
test
aaa
sahf
mov
movs
add
js
push
pop
xchg
ins
hlt
inc
inc
pop
adc
mov
pop
jge
cdq
mov
dec
outs
movs
mov
mov
mov
sub
fcom
pop
pop
data16
or
int3
pop
out
xchg
xor
ins
popa
das
jae
dec
movs
push
ja
fcmovne
imul
pushf
xor
lods
sub
mov
hlt
pop
pop
shl
sub
bnd
xchg
mov
mov
adc
scas
outs
xchg
jg
es
sbb
out
dec
cwde
ret
mul
push
xor
mov
jmp
xor
cmp
sub
mov
mov
add
lahf
shl
fs
push
push
mov
mov
xchg
fwait
cmps
or
cs
(bad)
fidiv
pop
pusha
xchg
(bad)
pop
inc
rcl
jo
mov
xor
and
inc
fstp
movs
movs
pop
test
or
call
int3
pop
mov
ins
push
mov
xchg
mov
test
cmc
jae
div
ret
out
mov
cmp
lds
popf
jae
push
cmp
or
push
leave
mov
inc
mov
dec
or
push
and
sbb
sub
xor
push
mov
or
mov
sub
pushf
mov
mov
dec
test
jo
loop
pop
loope
mov
std
push
jmp
sub
dec
es
cmp
repnz
sbb
popa
mov
push
imul
mov
lahf
pop
and
outs
push
js
adc
mov
or
mov
std
ins
fsub
push
push
out
xchg
out
cli
push
out
pop
push
xor
push
outs
jp
cld
adc
movs
out
mov
mov
(bad)
loopne
daa
xor
add
out
push
inc
mov
je
cmp
scas
cmp
xchg
into
(bad)
sbb
std
mov
ins
mov
cwde
mov
lds
add
cmp
mov
fmul
mov
push
mov
jo
sar
push
mov
add
(bad)
jmp
hlt
addr16
stc
mov
inc
xor
xlat
xor
and
out
dec
mov
adc
rsqrtps
std
loopne
ror
jnp
mov
in
or
pushf
arpl
adc
lds
cmp
push
lock
cdq
adc
in
in
imul
gs
mov
sbb
stos
test
ficomp
dec
mov
add
and
cli
int3
xchg
cmp
std
cmp
neg
cmp
inc
adc
inc
dec
sub
mov
(bad)
jmp
sbb
clc
sub
xchg
leave
mov
leave
cdq
repz
cli
mov
lahf
mov
and
mov
push
leave
dec
dec
arpl
ja
cmp
jle
or
mov
cmp
in
mov
stos
pop
hlt
loope
xor
out
mov
clc
mov
xchg
clc
sbb
lds
sbb
xlat
out
and
ret
jo
pusha
adc
sbb
push
mov
cmps
jp
or
clc
mov
cmps
jne
ror
jl
(bad)
loope
rcl
mov
mov
push
mov
inc
ret
xor
pop
call
inc
scas
addr16
pop
cmp
lds
adc
mov
out
ret
int
imul
sub
cmp
dec
imul
movs
clc
mov
xor
in
sahf
and
add
mov
dec
mov
lds
pop
call
sub
pop
mov
std
aam
dec
jle
xor
inc
imul
mov
pop
or
out
pop
call
inc
xor
lahf
rcl
dec
cmc
out
pop
lea
jns
in
aaa
movs
cmp
inc
imul
inc
add
push
push
mov
sbb
fiadd
mov
mov
dec
ret
push
adc
mul
test
push
jb
inc
sub
jp
xchg
xchg
mov
popf
sbb
sbb
pop
es
and
pusha
mov
arpl
movs
cdq
ds
adc
test
xchg
xlat
sbb
outs
loopne
icebp
les
or
mov
scas
mov
ficom
push
(bad)
dec
pop
jo
ja
xchg
clc
in
movs
dec
fnsave
lods
adc
(bad)
test
(bad)
and
adc
sbb
test
push
jns
and
int
pop
jge
repnz
jg
ins
fild
add
hlt
or
adc
mov
mov
ror
das
push
loope
das
mov
fiadd
add
pop
push
sbb
ins
dec
rol
xlat
dec
ds
test
mov
shl
push
pusha
(bad)
imul
xchg
rol
or
daa
pop
xor
bound
scas
lds
pop
jmp
xor
aad
dec
popa
call
sub
jns
fadd
out
mov
jno
xor
sbb
not
scas
or
mov
fwait
movs
add
sti
into
add
mov
lahf
sbb
push
cmp
outs
imul
call
pop
sbb
pop
jbe
shl
div
sub
xchg
data16
cmp
sbb
mov
test
mov
sub
lea
xor
popa
ins
iret
sti
and
mov
xchg
aaa
fldcw
push
ret
outs
ret
dec
or
jecxz
(bad)
clc
xlat
xor
mov
not
fadd
jecxz
cmp
pop
mov
rcr
push
mov
jg
sub
retf
cdq
call
repz
push
stos
add
and
pop
inc
mov
mov
mov
mov
mov
xlat
lods
fcom
shr
add
or
test
data16
jmp
les
sahf
mov
rol
pushf
mov
push
sbb
push
push
call
lock
mov
jle
mov
xchg
mov
div
fwait
cdq
fldenv
fstp
dec
std
and
sub
xchg
mov
ja
dec
mov
cmp
fs
push
xchg
js
jno
in
dec
pop
pop
jmp
sahf
xchg
pop
dec
sahf
(bad)
and
(bad)
jb
add
sti
xchg
and
dec
mov
pop
mov
push
shr
inc
mov
xchg
mov
idiv
push
mov
mov
aam
cmps
pop
mov
cmp
(bad)
dec
adc
jae
and
movs
lahf
add
(bad)
repnz
or
inc
xchg
test
ss
rep
mov
cmps
(bad)
and
mov
pop
test
mov
cmp
loope
fiadd
pop
mov
push
outs
sub
and
mov
xor
sahf
sub
ret
or
lock
add
int
xchg
pop
into
mov
xlat
shl
imul
pop
jae
xor
jns
int
cmp
jg
or
or
mov
xor
sub
push
push
popf
pop
and
ret
cmps
sti
xor
into
dec
sub
lods
mov
xor
sub
in
push
push
neg
inc
xchg
mov
in
or
pop
push
test
outs
nop
xor
push
mov
mov
dec
ins
loope
mov
xor
push
lock
pop
jo
fadd
mov
push
dec
pop
sub
(bad)
push
sub
or
mov
fadd
push
idiv
lods
popa
mov
test
stos
cmp
or
cmp
jge
mov
loop
jns
jb
xchg
addr16
lods
sar
hlt
mov
(bad)
jmp
cmp
mov
pop
sbb
push
test
lods
int3
inc
sbb
stos
mov
sbb
or
xchg
sbb
out
sub
js
dec
push
and
xor
adc
les
inc
cli
loopne
sahf
add
ror
ror
cmp
js
out
jno
jne
out
fwait
jle
(bad)
and
push
fstp
pop
xlat
jae
mov
adc
outs
call
imul
jno
in
loope
lea
ss
lds
loop
xchg
mov
dec
repnz
jle
pop
stc
inc
icebp
popa
clc
fwait
and
and
sti
jno
add
push
ins
das
add
loope
out
in
xor
movs
sti
mov
push
and
jmp
mov
xchg
xor
cs
lods
stos
pop
test
imul
sub
sub
test
or
cli
jle
xor
test
sbb
push
inc
xor
dec
sahf
(bad)
mov
inc
jmp
inc
mov
inc
push
ret
mov
sbb
or
outs
cmps
rcr
push
mov
repz
cmp
sub
movs
xchg
leave
inc
je
fs
push
sub
daa
call
lahf
cli
mov
out
jg
jnp
das
mov
out
(bad)
std
psadbw
repnz
aaa
int3
jo
enter
push
out
xchg
inc
cdq
xor
or
inc
rol
stos
(bad)
fld
iret
xor
enter
(bad)
movs
sar
mov
sub
jne
fadd
ins
pop
mov
or
xor
aaa
mov
and
mov
push
ins
aam
inc
cmps
jmp
cmps
sub
or
adc
shl
out
cmps
repnz
sub
pop
inc
push
(bad)
mov
ret
mov
test
test
inc
mov
xor
xor
pop
sar
add
and
loop
cs
loope
mov
loopne
cmp
jns
xchg
shl
cmp
mov
enter
cmp
jg
clc
cmp
mov
sbb
rol
sbb
push
xor
aaa
xchg
cdq
es
push
mov
sub
sbb
dec
xchg
mov
push
into
movs
mov
lods
fdiv
inc
sub
xor
movs
add
cmp
xchg
imul
mov
repnz
out
mov
in
mov
out
(bad)
inc
mov
into
aaa
lahf
pop
out
jg
and
and
or
shl
inc
pop
lds
and
cmp
mov
in
push
outs
jle
jb
out
out
push
out
mov
add
jg
lods
mov
outs
jne
cdq
add
ret
sub
(bad)
das
cld
ins
lods
jno
std
sub
int
adc
out
idiv
push
inc
jmp
mov
cs
fmul
mov
pop
lea
push
and
sahf
and
push
inc
ins
push
sahf
in
fdiv
inc
rcr
xchg
in
jnp
push
cli
and
mov
and
inc
jmp
enter
sub
repz
sbb
out
sub
in
inc
out
in
clc
shl
sbb
bound
das
dec
sbb
mov
aas
add
addr16
adc
les
sub
fstp
and
test
mov
push
add
fisub
ret
rcr
sbb
xor
xor
in
ret
jle
mov
mov
jb
xchg
xchg
cmp
and
or
pop
dec
or
mov
fld
mov
mov
sub
dec
add
adc
jl
fist
xor
mov
push
add
cmps
adc
fidiv
test
or
in
cmp
psubusb
movs
out
mov
mov
nop
mov
bound
ds
sub
je
mov
mov
shl
pop
in
adc
std
rcr
push
inc
retf
inc
dec
xor
movs
aaa
mov
cmp
cmp
dec
push
xchg
mov
in
mov
xchg
jne
inc
icebp
or
(bad)
in
or
outs
push
sahf
pop
adc
push
cld
cmp
ficom
jb
mov
test
out
mov
pusha
out
popf
shl
xor
mov
or
xor
imul
pop
jb
jo
adc
fcom
sbb
mov
mov
xchg
add
pop
mov
inc
mov
push
jl
enter
mov
inc
fbstp
pop
cli
mov
scas
(bad)
xor
outs
loopne
aad
loop
int3
sub
jle
push
xchg
sbb
xor
xchg
popf
xchg
cli
push
movs
xor
inc
xor
push
mul
pushf
enter
sub
aaa
sbb
sbb
dec
sub
retf
retf
dec
jg
js
mov
div
out
bound
pop
arpl
xor
xor
movs
leave
mov
imul
test
aam
pusha
enter
sbb
stos
outs
shr
cmp
retf
jmp
mov
in
xchg
push
push
pop
dec
jp
das
push
call
repz
das
call
mov
sahf
inc
les
stc
or
adc
xor
movs
cmc
neg
xor
enter
mov
outs
(bad)
bound
dec
imul
fwait
mov
jns
neg
pop
lods
adc
xchg
adc
xor
mov
je
adc
inc
add
enter
loopne
xchg
aad
or
outs
(bad)
sbb
sbb
mov
movs
outs
pushf
add
mov
xor
pop
sti
les
add
scas
xchg
nop
gs
pop
ficom
imul
sbb
sahf
push
cmp
fwait
xchg
pop
in
and
mov
shl
imul
pushf
dec
push
mov
test
pop
adc
shl
outs
or
(bad)
xchg
add
movs
and
idiv
(bad)
loope
cmp
popf
push
cli
inc
(bad)
cwde
xchg
call
enter
push
test
(bad)
push
or
push
inc
push
mov
sahf
test
lods
leave
or
scas
push
ror
pop
popa
(bad)
dec
mov
pop
bound
outs
xor
ins
adc
outs
and
or
aas
test
cmp
das
push
sar
mov
imul
fidiv
retf
test
sbb
or
jg
pop
add
mov
sub
out
ficom
bound
out
push
addr16
adc
xchg
or
push
into
inc
int
sub
sbb
gs
in
ret
xor
sub
cld
mov
adc
cmps
enter
(bad)
(bad)
xchg
and
out
cmps
push
and
(bad)
mov
test
stc
add
test
jl
and
jb
retf
push
leave
out
or
pop
aam
xchg
imul
fidiv
mov
mov
mov
clc
dec
xchg
jl
inc
pop
lahf
jns
lock
mov
or
pop
mov
push
or
add
outs
pop
fnstsw
sar
jge
outs
add
popf
lods
xchg
and
test
dec
sar
pop
jmp
dec
jns
(bad)
idiv
adc
and
pop
inc
sti
and
mov
dec
xlat
fwait
cmp
mov
mov
jl
(bad)
dec
nop
mov
lods
dec
enter
repz
dec
sbb
rol
cmp
leave
jge
dec
fistp
add
sar
cmps
xor
(bad)
and
mov
xchg
js
test
mov
sub
jne
jbe
or
scas
fs
test
cmp
cmp
loop
or
sahf
aam
in
lods
ja
lock
or
xchg
cmp
icebp
not
push
add
push
adc
sti
fnstenv
lahf
and
pop
mov
xor
cmps
lds
test
fimul
(bad)
call
(bad)
jb
inc
es
iret
retf
leave
or
jns
xchg
int3
pop
retf
xor
mov
pop
add
sub
sbb
mov
mov
not
or
xchg
dec
aam
fsubr
dec
mov
(bad)
jb
je
sub
xchg
xor
bound
call
sbb
rol
pushf
sub
mov
sbb
jb
push
int
rcr
in
add
test
xor
movs
adc
ret
push
les
inc
cld
jne
adc
enter
mov
sbb
out
mov
mov
inc
call
(bad)
xlat
add
(bad)
fdiv
imul
loop
lea
pusha
in
retf
push
pusha
(bad)
jp
pop
mov
ret
cmps
dec
mov
into
(bad)
and
and
add
sahf
cmc
aas
cmp
dec
cs
cmp
inc
mov
repnz
xor
mov
test
aas
xchg
daa
lea
pop
push
xchg
xchg
stc
inc
xchg
jl
cmp
or
sub
mov
jmp
fadd
ret
stos
jns
sti
stc
daa
add
jns
adc
stc
(bad)
dec
jecxz
icebp
and
mov
and
push
sar
imul
mov
xlat
rcr
lea
pop
lock
mov
sti
sahf
shl
retf
xchg
repz
jo
push
loope
loopne
mov
add
dec
sub
add
pop
sub
fwait
pop
inc
lods
fidiv
pop
jnp
mov
cdq
imul
ret
fucom
inc
sub
out
add
jl
mov
sub
mov
repz
pusha
xchg
lahf
push
mov
mov
pop
pop
sub
add
ins
mov
sbb
out
shr
dec
pushf
pushf
push
pop
test
fisubr
pop
rcl
outs
cmp
nop
xor
ror
(bad)
xchg
push
dec
jns
pusha
add
out
jns
cmp
sbb
xor
jo
sbb
pop
movs
cmp
cmp
adc
pop
das
test
lods
neg
push
pop
sbb
push
adc
call
xchg
sub
cdq
xchg
movs
(bad)
push
fist
out
mov
jmp
dec
mov
push
pop
jmp
loopne
push
pop
int
mov
mov
pop
jns
retf
cmp
gs
adc
ficom
mov
mov
stos
ret
sub
jmp
loop
call
repz
cmp
xchg
fs
cmp
in
repz
out
pop
xchg
iret
ss
lods
ror
or
iret
jae
cmp
xchg
add
jno
bound
rcl
jmp
add
sahf
fs
jo
unpcklps
mov
call
arpl
pop
les
mov
fstp
int
popa
xchg
and
loope
xchg
in
pop
sub
arpl
rol
cli
cmp
fs
out
xchg
sbb
shl
cld
xchg
loope
loope
mov
(bad)
jp
lds
dec
jo
pop
sbb
fnstcw
pop
mov
scas
outs
mov
xor
push
out
into
icebp
rol
push
icebp
mov
mov
sbb
pushf
mov
xor
mov
mov
xor
rcl
push
xchg
test
inc
mov
add
inc
pop
mov
(bad)
sbb
nop
push
xlat
and
repz
xor
sahf
dec
shl
sbb
adc
hlt
sbb
mov
sbb
and
movs
push
pushf
pop
xchg
dec
sbb
mov
pop
push
cmp
mov
jmp
ficom
xor
dec
loope
js
fs
addr16
mov
inc
dec
xchg
stos
sub
arpl
lods
xchg
inc
sub
mov
call
inc
adc
icebp
inc
jge
mov
movs
jno
xor
loope
fcmovne
jae
cdq
mov
mov
repnz
pop
out
push
sbb
xchg
adc
xchg
pop
test
ins
iret
pop
pushf
push
lock
(bad)
idiv
xor
adc
daa
pushf
or
(bad)
mov
test
ror
and
call
mov
(bad)
aas
push
mov
and
std
jmp
mov
jg
call
push
retf
add
sbb
and
rcr
les
icebp
fmul
sbb
xor
scas
bound
repnz
es
dec
imul
sbb
gs
bound
and
push
test
nop
or
cmps
fs
inc
mov
(bad)
out
mov
jbe
push
pop
and
ja
aas
xor
cmovg
sub
push
add
dec
jno
jnp
and
xor
or
pop
jmp
mov
test
adc
xor
push
loop
cmp
cmp
xor
repz
push
cmc
push
add
fisubr
pushf
aaa
fdiv
in
repnz
cld
(bad)
jmp
in
in
outs
dec
pop
push
fistp
add
sub
mov
aas
and
pop
test
inc
mov
test
movs
add
(bad)
xlat
mov
sub
cld
pop
fist
ins
mov
ror
out
fst
cmc
or
mov
dec
out
jl
pop
adc
popa
sbb
pop
ret
jnp
mul
sbb
cmp
aad
es
popf
je
in
cmp
enter
xor
xchg
scas
or
(bad)
mov
pop
cdq
sub
sub
lock
test
sbb
sbb
adc
ins
mov
mov
pop
push
pushf
and
out
test
mov
add
jno
pop
sbb
pop
push
mov
jle
loopne
mov
mov
lea
pop
nop
mov
call
xor
lods
jg
jmp
je
rol
cmp
mov
push
leave
fsubrp
xor
mov
cli
jne
and
sar
pop
psubq
out
in
outs
dec
or
jl
push
and
gs
push
lods
xchg
sahf
xchg
mov
dec
jbe
jae
push
dec
xchg
mov
sbb
mov
je
imul
cmp
dec
sbb
ffreep
mov
std
and
movs
jmp
in
sub
test
sbb
sbb
inc
fidivr
imul
lahf
jle
pop
mov
not
mov
push
ror
dec
jae
push
pop
pop
adc
jg
push
add
xchg
std
dec
and
fnstcw
jl
clc
in
pop
js
pop
cmp
xor
and
shl
adc
jp
loop
mov
test
dec
loopne
outs
push
test
xor
inc
enter
dec
(bad)
int3
sub
jmp
sbb
js
std
jmp
ret
(bad)
out
sub
sbb
inc
repz
shl
popa
mov
inc
imul
dec
lock
or
pop
cdq
xor
sahf
popa
bnd
movs
mov
xchg
dec
into
(bad)
xor
pushw
fnsave
sub
in
cmp
add
cld
cs
ret
lahf
ins
sar
mov
mov
out
adc
sub
aaa
pop
ins
dec
ins
addr16
sub
shl
or
push
es
mov
and
pushf
sbb
push
jmp
cmps
mov
sub
hlt
cdq
out
lea
xchg
lods
xchg
je
push
add
test
loope
sbb
pusha
adc
xor
adc
inc
fst
imul
(bad)
arpl
mov
pop
retf
stos
xor
pusha
repz
fisttp
shl
adc
ss
sbb
cmp
(bad)
push
fsub
gs
push
rol
pusha
imul
sub
out
xchg
cmp
cwde
dec
ds
xor
stos
sub
jb
lods
shr
mov
enter
imul
stc
pushf
das
cdq
inc
push
out
popa
jmp
repnz
std
add
jge
test
hlt
out
sahf
out
nop
neg
loop
int3
jae
mov
repz
jnp
fidivr
fdiv
mov
push
leave
or
(bad)
mov
icebp
inc
(bad)
and
test
cmp
add
or
xlat
jg
ds
mov
in
(bad)
cmp
outs
pop
das
aad
jb
lea
inc
push
ret
and
and
sahf
mov
push
das
pop
sub
jmp
jmp
idiv
xchg
in
push
and
test
or
(bad)
pop
or
cmp
ins
pop
push
lock
dec
jl
push
mov
mov
in
mov
or
cmp
mov
or
sahf
xchg
push
push
outs
and
pop
(bad)
push
movs
not
fwait
cmp
mov
xchg
inc
mov
inc
cmp
inc
inc
xor
fcomp
jl
into
jo
pusha
movs
cmps
cmc
cmp
in
push
add
scas
xchg
xor
loop
mov
lds
sahf
and
das
push
push
movs
dec
ins
daa
sbb
clc
jne
jg
cmps
stos
gs
push
or
sti
psrld
push
sub
lods
dec
fcom
add
sub
fincstp
sbb
iret
or
call
sbb
ss
ror
inc
mov
clts
inc
pop
or
sub
ss
je
add
jbe
adc
inc
mov
push
scas
and
inc
mov
js
retf
(bad)
add
enter
jp
je
loopne
pop
(bad)
adc
push
push
mov
test
retf
cmp
addr16
shl
out
sub
test
pop
push
in
call
dec
and
pop
add
adc
ins
sub
add
wrmsr
jae
movs
(bad)
lock
out
ror
fistp
jg
and
and
mov
cmc
mov
mov
icebp
(bad)
std
fistp
(bad)
cmp
sbb
cwde
imul
mov
(bad)
es
or
and
leave
mov
mov
dec
dec
imul
xlat
xor
daa
and
fdivr
mov
lea
dec
ins
neg
pop
pop
ficomp
or
test
pop
jno
lods
mov
jmp
mov
inc
jmp
xchg
fisubr
mov
shl
jp
sub
retf
and
movs
scas
cmps
mov
es
or
fcmove
mov
shl
scas
frstor
idiv
out
fist
hlt
test
fbstp
inc
mov
xor
inc
or
dec
lds
mov
mov
aad
not
dec
lds
xchg
pop
mov
add
mov
push
jmp
mov
lods
pushf
xor
icebp
mov
or
fdivr
hlt
mov
stos
out
cmp
pop
jmp
shl
xlat
jmp
ror
mov
jbe
jle
pop
pop
scas
jae
cld
out
push
xor
lock
lock
loop
lea
(bad)
mov
hlt
rol
fsub
pop
push
add
add
jb
das
sbb
xchg
das
cld
lods
mov
call
cmp
xor
adc
cld
cs
fdivr
mov
add
jne
outs
inc
cli
mov
push
sbb
ins
lock
test
xchg
fild
mov
aam
and
mov
out
sbb
shr
ins
jns
and
xlat
sub
and
jle
xchg
hlt
and
or
push
ret
arpl
stos
mov
scas
aas
inc
ins
(bad)
or
lods
sbb
pop
outs
push
sbb
xchg
test
cmp
pop
gs
(bad)
xchg
jg
mov
and
arpl
jnp
mov
xchg
push
nop
xchg
jnp
add
inc
pop
mov
enter
adc
push
loopne
mov
and
scas
inc
arpl
outs
paddusw
test
into
mov
hlt
std
pop
dec
ret
cmp
dec
(bad)
hlt
mov
adc
mov
xchg
(bad)
out
lahf
call
ret
or
and
std
jg
ficomp
popa
mov
loopne
mov
lock
mov
gs
(bad)
mov
cmps
dec
dec
and
inc
or
outs
mov
daa
retf
and
mov
add
imul
fadd
inc
adc
inc
push
xchg
movs
int
addr16
out
adc
sub
in
not
mov
xor
cmp
xor
mov
int3
je
push
push
inc
push
repz
inc
in
add
ss
or
js
imul
dec
scas
(bad)
jmp
dec
xchg
fist
popf
mov
int
bound
xor
mov
fsubr
dec
add
loopne
inc
test
and
mov
fistp
stos
push
mov
mov
shl
mov
sbb
push
jmp
loope
jle
add
add
jp
rol
psubd
mov
outs
push
dec
push
cdq
pop
aam
ins
jae
enter
push
push
sub
add
xor
test
repz
pop
pop
push
push
daa
mov
jbe
jmp
sub
das
cmp
dec
and
jb
jmp
lods
scas
push
lea
sahf
retfw
sbb
fcomp
(bad)
xor
fsub
adc
mov
pop
lahf
mov
xor
fdiv
pop
push
and
loopne
and
push
inc
sahf
jge
jg
rol
fwait
pop
mov
mov
aad
mov
pop
pop
xchg
jmp
mov
and
call
jl
cmp
xor
adc
inc
push
add
pop
sbb
adc
test
pop
push
aaa
fdivp
pop
fistp
sbb
outs
movs
loope
fimul
mov
scas
das
cmp
jecxz
(bad)
and
jnp
enter
push
sar
xchg
shl
lods
push
adc
rol
(bad)
fimul
push
mov
arpl
xchg
hlt
stc
sti
pop
out
cmc
sbb
jmp
aaa
in
jnp
cld
test
xor
(bad)
xor
enter
cmp
mov
mov
xor
dec
lea
sbb
push
xchg
jp
ret
imul
dec
push
dec
aaa
xchg
mov
and
jmp
(bad)
push
lock
scas
dec
jecxz
add
or
dec
or
cwde
rol
xlat
aam
ss
xchg
ins
call
ret
fcomp
inc
(bad)
sub
mov
mov
es
push
sbb
sub
add
imul
dec
mov
push
(bad)
outs
or
inc
stos
adc
das
mov
sbb
jmp
ja
loop
push
mov
mov
push
neg
jmp
and
mov
push
xor
(bad)
out
rcr
mov
(bad)
int3
int
in
xor
arpl
jg
scas
hlt
hlt
repnz
mov
retf
mov
bound
and
pop
mov
add
mov
push
outs
fcom
xchg
sbb
inc
cmps
lea
jne
inc
inc
or
lea
or
rol
sub
int3
inc
scas
pop
mov
lds
sub
push
push
mov
repnz
mov
cmp
loope
pop
mov
rol
fcmovnu
es
pop
sbb
jl
jo
cmp
mov
xchg
(bad)
inc
jg
fwait
and
push
jno
mov
nop
xchg
cmp
xor
aaa
lock
ret
add
iret
sbb
(bad)
sub
out
jmp
(bad)
mov
sbb
cli
call
ror
outs
aam
mov
pushf
lds
hlt
icebp
into
ss
mov
mov
cdq
popf
or
jae
ror
cmp
lods
dec
dec
xchg
adc
push
icebp
cmp
jge
icebp
out
in
mov
mov
popf
ret
loope
mov
sub
(bad)
out
int3
popa
or
loopne
ret
dec
or
ins
inc
sti
pop
addr16
jbe
mov
add
push
inc
add
dec
es
jge
movs
ins
adc
aam
call
sub
mov
daa
(bad)
(bad)
jmp
imul
jno
cld
add
int3
dec
jecxz
test
icebp
ret
sub
and
pop
mov
leave
pop
add
push
sti
push
cmps
outs
add
cdq
(bad)
aas
pop
rol
ds
and
das
or
ret
dec
in
pushf
or
inc
add
inc
shr
mov
cmp
(bad)
call
and
enter
mov
sub
out
adc
call
xlat
jae
xchg
(bad)
shl
in
jb
pop
dec
push
(bad)
sti
js
jmp
repnz
push
jb
cld
mov
sahf
jmp
popf
sub
in
stos
dec
sbb
mov
mov
fstp
(bad)
pop
mov
movs
out
or
in
sar
xchg
mov
shl
std
and
addr16
adc
push
sbb
jecxz
xor
jg
leave
jno
push
mov
mov
lock
or
scas
test
scas
or
clc
jmp
pop
stc
adc
push
dec
dec
retf
sbb
lea
pop
or
sti
cmp
clc
loop
addr16
stos
cmp
mov
pop
inc
inc
push
jg
fnstcw
sbb
lahf
push
jl
sbb
push
ret
shl
sub
mov
pop
jns
pushf
into
fimul
sub
or
retf
and
leave
pop
or
or
shr
and
and
push
jns
xchg
sub
sahf
or
adc
in
add
and
fld
sbb
xor
test
aaa
ss
(bad)
aas
sbb
mov
mul
sbb
mov
je
mov
pop
cdq
xchg
enter
dec
dec
cdq
cmp
gs
fst
push
cmp
cmps
test
inc
mov
icebp
outs
jns
mov
repnz
dec
imul
pop
inc
int3
jge
repnz
lock
dec
retf
inc
jg
jl
jp
sub
inc
movs
cli
add
rcr
in
(bad)
rol
gs
outs
stos
pop
ret
gs
cmp
or
lods
push
cmp
(bad)
cdq
xor
sub
dec
pop
pop
out
imul
jg
retf
call
mov
daa
cld
push
outs
mov
addr16
scas
int
popf
call
mov
add
(bad)
xchg
pop
adc
inc
sub
retf
push
jecxz
push
test
test
mov
in
iret
ins
sbb
out
sbb
dec
aas
mov
mov
mov
ins
ja
dec
mov
pop
pop
mov
pop
popf
std
imul
jbe
(bad)
rol
int
xchg
pushf
jo
pop
pop
bound
stos
mov
mov
out
outs
outs
int
inc
in
push
rcl
ret
(bad)
repz
jnp
retf
movs
jns
adc
push
jmp
int
dec
bound
aam
ja
mov
inc
outs
cmp
xchg
rcr
lods
add
xlat
or
ins
pusha
jmp
dec
inc
popa
in
stos
sub
mov
popa
sub
mov
sub
out
les
cmps
scas
sbb
lock
and
loope
js
push
and
sbb
sub
lds
enter
xor
ss
jp
scas
push
cmps
jbe
les
push
inc
gs
adc
test
adc
js
xchg
imul
int
pop
in
add
add
sub
adc
and
mov
je
out
scas
sti
mov
lock
add
mov
mov
std
adc
xor
mov
cmp
mov
js
scas
fsub
call
dec
xor
int
stos
mov
push
dec
dec
sar
popa
push
cmp
sbb
in
mov
mov
out
out
cmp
push
add
sar
sbb
add
aad
and
test
sar
outs
clc
movs
dec
sub
xor
push
mov
xor
inc
inc
cs
mov
jbe
out
adc
arpl
stc
mov
xchg
retf
imul
push
call
push
popa
sub
aaa
inc
jns
dec
sub
sbb
mov
xchg
popf
mov
jp
or
gs
cmp
sbb
loop
bound
enter
dec
fimul
xor
shl
inc
mov
sbb
sub
mov
retf
les
movs
add
pop
lds
sub
int
stos
hlt
repnz
mov
imul
stc
xor
jo
push
lahf
iret
dec
pusha
jecxz
adc
push
(bad)
pop
jns
arpl
loopne
pop
xchg
sub
ror
pop
je
sub
dec
inc
cmps
sub
hlt
retf
push
mov
mov
push
pop
sbb
fs
mov
ins
popf
mov
out
arpl
cmc
sbb
or
mov
ret
sbb
lds
les
mov
pop
scas
xchg
stos
jl
movs
mov
dec
and
push
inc
test
cli
dec
lods
add
add
or
jge
(bad)
mov
ins
xchg
sbb
adc
jne
in
xor
mov
xchg
div
or
xchg
scas
loope
mov
int3
nop
dec
mov
lods
pop
mov
aas
jge
xchg
adc
mov
mov
push
popf
js
sbb
cmps
dec
out
or
pop
jo
popf
mov
inc
ja
jb
fwait
(bad)
jg
cdq
stos
rol
xlat
inc
push
cwde
cwde
je
adc
out
adc
xlat
cdq
cmp
fbstp
not
mov
xor
icebp
pop
jo
dec
popf
dec
mov
jmp
fild
jg
xlat
int
repz
fst
sbb
and
xchg
mov
and
int3
outs
mov
inc
es
aas
mov
mov
(bad)
loope
push
retf
arpl
stos
pop
sbb
jge
inc
pushf
jp
or
popf
mov
pop
push
sub
xchg
fbstp
jne
outs
push
add
jmp
pop
sbb
add
dec
cmc
outs
movs
and
xchg
fcomp
adc
push
add
repnz
push
mov
xchg
xchg
int
lahf
jb
neg
inc
jns
outs
repz
setg
xchg
(bad)
adc
mov
clc
sbb
icebp
retf
(bad)
daa
jmp
aad
ss
xchg
bound
mov
jecxz
push
sti
jne
sub
mov
ins
mov
sub
leave
inc
(bad)
stc
dec
pop
lahf
outs
xchg
inc
pop
ds
mov
aam
push
jp
in
push
adc
mov
cwde
jnp
push
sar
ja
pop
popf
in
or
in
js
push
sbb
int3
xlat
and
jbe
push
sub
sub
xor
dec
dec
dec
push
and
pop
xor
stos
lahf
push
xor
popf
sbb
jae
lock
sbb
mov
jg
addps
cmp
mov
xchg
mov
push
xchg
cmp
xchg
lahf
xchg
push
int
cmp
sub
pusha
mov
shl
test
adc
push
push
ss
popf
inc
jno
int3
pop
popf
mov
in
add
arpl
sbb
je
and
sub
sbb
jg
push
sub
outs
inc
jg
les
int
mov
fcomp
push
mov
into
retf
nop
xor
dec
xor
jle
cmp
mov
xchg
add
cli
sub
cmc
retf
mov
push
lods
push
aas
(bad)
xchg
dec
lods
mov
(bad)
je
push
and
mov
xor
les
lock
outs
ret
mov
cli
mov
or
ret
scas
mov
xor
popf
outs
jne
out
scas
out
test
cs
fcomp
popa
mov
mov
lods
mov
lods
fld
outs
rcl
mov
mov
pop
pop
xor
mov
adc
fwait
xchg
cmp
aad
into
mov
xchg
inc
lds
les
adc
shr
and
popf
pop
ds
call
dec
in
jbe
sbb
jnp
adc
add
mov
ja
add
dec
aaa
cld
jo
in
and
sub
sahf
add
into
pop
dec
and
dec
xchg
pop
sbb
jmp
clc
daa
out
retf
scas
movs
fwait
pop
stc
dec
jg
imul
dec
mov
pushf
or
icebp
popa
js
into
push
div
pop
lds
sbb
jne
aam
sbb
stos
sbb
xor
lods
mov
add
sub
cwde
int
sahf
into
dec
rol
xor
iret
pop
pusha
mov
push
js
mov
int3
mov
mov
push
add
push
mov
and
push
sub
push
mov
jl
fs
(bad)
call
cmps
repz
fcmovnbe
sbb
(bad)
dec
mov
mov
cmc
push
and
jmp
xlat
call
fwait
movs
hlt
out
add
mov
fcomp
sar
or
call
adc
mov
push
inc
push
int
jmp
(bad)
aas
cwde
add
cmc
push
aaa
inc
shr
and
adc
and
call
jecxz
xor
jp
jecxz
idiv
ins
fisubr
(bad)
cmp
jmp
jbe
inc
enter
in
nop
mov
adc
xchg
inc
or
push
es
mov
jg
in
mov
out
and
mov
je
lods
cdq
push
cdq
adc
stc
popf
jne
push
jb
pop
mov
fs
xor
add
add
(bad)
shr
leave
sbb
mov
and
int
and
mov
call
std
mov
mov
rol
xchg
mov
fbstp
add
popa
ins
pop
push
add
add
adc
in
in
call
sbb
pop
jg
adc
add
stos
sysexit
cli
jns
imul
and
fndisi(8087
mov
outs
and
test
jmp
mov
push
adc
dec
push
mov
dec
(bad)
sti
int3
ins
and
loopne
jne
test
pop
pop
mov
mov
cmp
call
or
sar
(bad)
jne
dec
add
xor
xor
nop
cmp
add
fist
mov
pop
stc
js
jae
(bad)
jnp
adc
int
xchg
mov
cs
dec
nop
jo
and
loopne
sahf
pop
dec
lea
mov
lods
jmp
or
jl
cmps
(bad)
mov
jp
and
xchg
pop
shr
or
ret
scas
fld
adc
fbstp
sub
pop
repnz
jnp
or
or
adc
sahf
pusha
lods
pop
push
adc
or
xor
push
or
loope
jg
(bad)
outs
fidiv
or
(bad)
adc
sbb
cli
inc
push
xor
jbe
mov
repz
aad
clc
outs
push
std
imul
lods
(bad)
out
mov
mov
pop
imul
clc
dec
jmp
mov
cli
pop
mov
inc
pop
mov
mov
or
aam
ins
fcmove
and
test
arpl
jbe
shl
outs
inc
fwait
bound
push
and
in
add
nop
(bad)
push
xlat
js
imul
pop
add
sti
jne
js
or
xor
or
and
push
lea
adc
xor
jno
xor
ins
aas
add
test
je
mov
mov
inc
and
and
sbb
sub
ins
sbb
xchg
out
sbb
ds
lea
mov
jge
arpl
pop
jg
out
mov
pusha
fadd
sahf
enter
out
pop
pop
adc
mov
xchg
pop
bound
idiv
cmc
pop
xchg
outs
aas
aam
mov
ret
adc
icebp
or
imul
mov
jmp
mov
pop
call
adc
jmp
mov
add
ins
call
aas
test
cmp
bound
call
imul
mul
leave
adc
add
cmp
pop
push
sahf
aas
bound
dec
sub
mov
add
into
ret
or
in
sub
ret
sbb
xor
lods
adc
scas
ds
push
shr
cmps
sbb
fild
mov
jle
es
retf
jmp
mov
mov
xchg
ds
cmp
fsub
stos
xlat
and
call
xor
push
mov
inc
arpl
inc
leave
and
daa
push
dec
inc
cld
rcl
xchg
fxch
push
sti
sub
sub
iret
test
loope
xchg
in
(bad)
es
stos
push
dec
mov
dec
sbb
hlt
fcomp
test
cmp
dec
xchg
cli
int3
call
mov
push
or
push
mov
lods
data16
fbld
cmps
xchg
sub
mov
mov
jmp
inc
sbb
pop
sbb
adc
ret
adc
sub
xor
push
pop
addr16
scas
xor
mov
ret
inc
sbb
test
stos
or
xor
fstp
stos
jo
sub
or
pop
dec
push
nop
cmp
and
and
gs
xor
jmp
mov
frstor
fwait
loop
mov
(bad)
fmul
fs
lds
xchg
unpckhps
fsubrp
cmc
ficomp
rcr
aam
shl
push
and
cmp
out
dec
add
(bad)
xor
nop
aam
dec
imul
sub
jae
jmp
sti
scas
jmp
cmp
push
nop
mov
nop
adc
cmp
out
mov
sbb
(bad)
adc
or
or
enter
arpl
xchg
pop
inc
sbb
outs
(bad)
enter
aaa
repnz
and
mov
cli
into
aad
and
mov
xlat
mov
inc
test
aaa
mov
and
add
and
out
mov
mul
adc
packssdw
pop
jge
xor
fsub
es
add
lahf
aas
jb
stos
push
mov
jl
adc
repnz
xchg
xchg
push
outs
out
jl
and
mov
aaa
jmp
xchg
xchg
popa
pushf
sub
repz
loope
cld
fdivr
sub
and
xchg
outs
fiadd
(bad)
mov
stos
stos
shl
add
pop
push
in
xor
xor
pusha
sub
pop
fwait
hlt
mov
xchg
sahf
cmp
je
faddp
mov
int
mov
fstp
pop
xor
add
jecxz
test
or
xchg
(bad)
lds
fcmovnu
bound
out
cli
mov
push
(bad)
ja
mov
rcl
jae
test
dec
dec
add
outs
xor
or
adc
cmp
fsubr
and
xor
repz
jmp
mov
retf
xor
imul
out
mov
push
push
mov
push
rol
cmc
test
push
ret
retf
scas
inc
sar
and
fisub
pushf
vpsrlw
dec
dec
rol
mov
dec
(bad)
jmp
rcl
dec
sbb
cld
test
dec
sbb
inc
push
mov
(bad)
ror
jmp
sar
xchg
xchg
ret
mov
adc
pop
adc
mov
dec
fwait
ret
mov
or
shl
add
jl
ja
rep
mov
mov
in
imul
adc
adc
jne
rol
mov
ret
fst
pop
lods
mov
movs
add
xor
scas
sub
lahf
std
out
pop
test
cmp
shl
dec
sahf
jge
mov
pusha
repnz
sub
push
add
mov
add
imul
movs
out
hlt
cmps
retf
add
loopne
mov
mov
dec
mov
cdq
(bad)
jnp
rol
xchg
inc
mov
dec
pop
arpl
ja
mov
push
inc
ins
mov
dec
ds
rcl
sub
clc
pusha
push
test
call
jmp
out
xchg
ret
cwde
jmp
jg
or
jns
xchg
call
jge
cmp
imul
or
cmp
push
sub
sahf
inc
stc
fnsave
not
movs
call
outs
mov
push
pop
ror
(bad)
ror
cli
scas
inc
pop
cmp
push
ret
xor
fsubr
mov
ins
inc
idiv
cmp
xor
(bad)
repz
stos
es
(bad)
fsubr
iret
push
pop
xor
popa
cmp
pop
and
(bad)
mov
retf
inc
dec
in
sti
stos
xor
mov
and
pop
lds
or
sub
add
xchg
sbb
pop
add
enter
sub
fwait
fwait
add
nop
sbb
xchg
sar
int3
aas
xchg
jno
jo
pop
and
imul
pusha
add
cdq
repnz
fs
jle
cmp
pop
int3
adc
xchg
mov
jmp
add
push
adc
lods
out
sbb
je
mov
lods
push
inc
add
rep
and
mov
ins
addr16
xchg
jns
inc
les
inc
in
dec
inc
je
xor
idiv
pop
addr16
pusha
fwait
adc
jg
int
mov
mov
jo
fisttp
int3
sub
xor
pop
xchg
lahf
mov
pop
mov
lock
ret
inc
data16
fmul
loop
inc
or
mov
call
and
dec
lahf
inc
lods
jle
ret
pusha
out
fadd
pop
arpl
jns
loopne
adc
cmp
daa
xchg
adc
imul
sub
add
scas
imul
jno
xor
cmps
rcl
je
pop
ret
jg
xchg
adc
fwait
or
data16
ret
dec
test
outs
pop
gs
push
inc
dec
retf
in
call
cmp
in
or
les
in
aaa
(bad)
addr16
cdq
imul
mov
inc
rcl
mov
test
xchg
stos
push
add
pop
into
add
push
gs
cmp
mov
scas
test
ins
(bad)
jns
mov
daa
arpl
cmps
inc
add
jae
inc
push
mov
sbb
es
push
sbb
movs
dec
xchg
pop
xor
popf
cmps
repz
pop
sahf
fimul
retf
fcmovnu
arpl
mov
(bad)
aas
sbb
adc
inc
xchg
mov
cmp
test
pop
fmul
inc
sbb
call
sahf
loope
leave
hlt
mov
cld
stc
mov
push
retf
cmp
inc
retf
test
test
jns
popa
fdivr
cmp
ins
clc
mov
cmps
cmp
jmp
xor
rcr
sbb
(bad)
pusha
sub
retf
pop
dec
sub
mov
or
pop
in
outs
jno
mov
jnp
cld
sub
push
aas
inc
mov
push
xchg
enter
xor
or
retf
and
mov
aam
xchg
dec
pop
cwde
movs
fcmovne
cmp
nop
cbw
and
ret
pop
pop
jg
dec
outs
inc
mov
adc
sub
nop
ins
movs
pop
xchg
mov
xchg
mov
int
adc
xor
nop
and
pop
pop
in
xchg
sub
add
jecxz
mov
xchg
or
xor
pop
mov
(bad)
mov
ret
sub
jae
xor
sub
repz
mov
fsubp
dec
mov
(bad)
mov
pop
push
in
jae
xchg
pushf
in
aad
bound
mov
xchg
mov
enter
mov
sbb
sub
ja
mov
lock
cmp
jbe
mov
movs
push
or
cmp
jmp
jmp
sti
inc
cmc
aas
pop
dec
dec
push
test
hlt
jns
jne
pushf
out
repz
sub
in
add
clc
sbb
cmc
nop
retf
sar
inc
push
test
(bad)
jae
mov
jae
pop
pop
jae
jge
dec
ins
pop
out
pop
aaa
or
xchg
popf
aaa
fst
cdq
(bad)
repz
ss
ret
lods
sbb
xor
push
fcom
pop
mov
jo
(bad)
sbb
adc
hlt
out
sbb
adc
inc
and
ret
popa
fwait
sub
mov
in
in
lds
aad
jecxz
jnp
sub
inc
jp
shr
xchg
fisubr
add
repz
adc
sti
ins
sbb
sbb
adc
sar
jb
fstp
push
mov
std
test
movs
xchg
mov
inc
cmp
inc
iret
xchg
mov
out
mov
mov
lea
mov
out
mov
inc
inc
mov
xor
imul
mov
jmp
gs
cmps
push
rcr
rcr
ds
(bad)
(bad)
mov
cmovns
or
jp
dec
sub
ss
stc
lods
inc
shl
jge
inc
push
cwde
ret
ror
pop
sub
mov
add
leave
outs
div
add
mov
jne
ins
adc
stc
sub
pop
rol
cwde
outs
and
lds
and
dec
add
inc
fwait
lock
cs
dec
adc
repz
ret
mov
sbb
xlat
or
mov
or
shl
cwde
movs
add
arpl
fisttp
(bad)
mov
dec
daa
daa
js
cmc
int3
popf
jnp
shl
iret
int
inc
ret
imul
es
push
(bad)
out
movs
add
cmp
fs
dec
xor
pusha
mov
stos
mov
imul
pop
xchg
call
inc
sbb
xor
and
or
imul
inc
test
ins
mov
jp
inc
xor
in
dec
rcl
shl
xor
cli
sbb
(bad)
fnstcw
(bad)
lock
mov
mov
fucomi
jecxz
es
popa
mov
popa
arpl
fs
cmps
out
and
xchg
pop
and
push
sbb
out
and
xchg
ds
in
sub
out
add
mov
add
sbb
xchg
or
push
pushf
ins
cwde
add
inc
fs
fmul
sbb
mov
cmp
push
sub
in
imul
lock
std
iret
data16
aas
(bad)
push
iret
mov
xchg
fild
mov
retf
movs
stos
(bad)
sbb
xor
test
sub
add
xchg
ins
pusha
popf
pop
je
xor
pop
sub
enter
push
xchg
sbb
mul
mov
imul
mov
ret
inc
sti
mov
mov
sub
and
pop
les
out
popf
daa
addr16
dec
mov
div
call
adc
mov
add
ins
sub
int
outs
add
add
addr16
and
pop
push
mov
pop
test
jg
rcr
xlat
bound
jnp
clc
cmps
into
dec
xchg
and
inc
stc
shr
shl
mov
or
sti
and
dec
dec
add
ins
das
out
pushf
fstp
cmc
sbb
fild
arpl
xchg
sub
and
fnstenv
test
int3
add
jecxz
mov
xchg
dec
sub
push
pop
imul
lea
ja
nop
clc
ss
cmp
in
mov
rol
pop
jle
enter
jae
adc
mov
out
mov
sbb
add
data16
add
sub
mov
mov
or
sub
push
es
jmp
push
dec
fwait
ror
dec
pop
sub
adc
cmp
xor
xor
mov
pusha
jae
int3
pop
outs
adc
pop
mov
int3
ror
rol
pop
dec
mov
dec
shl
or
movs
ror
push
dec
enter
fst
stos
or
xchg
fwait
push
xchg
dec
or
mov
mov
push
cmps
outs
and
leave
js
and
xchg
add
inc
cmp
cld
and
jo
inc
mov
jmp
push
mov
(bad)
shl
pop
test
inc
scas
pop
gs
sub
sbb
popa
add
sub
(bad)
cdq
mov
in
out
xchg
jge
(bad)
shl
(bad)
stos
pop
or
and
dec
fwait
mov
ds
mov
retf
mov
enter
inc
inc
mov
mov
loop
rcl
jns
inc
rol
aaa
inc
arpl
adc
nop
push
or
pop
mov
imul
push
push
or
xchg
imul
ss
imul
ins
xor
leave
mov
cmp
(bad)
pop
pop
lods
cmp
sub
xor
lds
or
inc
lock
mov
and
out
cmp
jge
gs
loope
test
or
xor
icebp
cmc
mov
pop
(bad)
rcl
jl
dec
jnp
xchg
mov
dec
rol
lock
out
mov
pop
push
out
retf
mov
jne
les
add
jg
mov
inc
data16
push
add
fs
and
xchg
push
repnz
or
imul
mov
push
js
sub
jbe
cmps
lds
aam
push
mov
push
mov
leave
push
std
cmp
xchg
mov
dec
lahf
and
in
add
imul
xchg
xlat
sub
and
add
js
and
or
mov
pop
sub
(bad)
mov
sub
jne
fidivr
stos
outs
sbb
jmp
pop
dec
pop
push
iret
(bad)
cld
adc
push
out
mov
lods
pop
xor
and
call
scas
jmp
cwde
sahf
(bad)
mov
and
movs
jbe
mov
scas
pushf
mov
inc
mov
mov
retf
lods
sbb
jnp
movs
mov
jae
sbb
jge
mov
aam
dec
enter
mov
xor
aas
jg
and
add
lds
cld
push
adc
push
gs
inc
leave
rcr
(bad)
leave
pop
jp
pusha
out
cmovg
adc
mov
loope
add
add
dec
jmp
jnp
cmp
and
push
retf
dec
lock
jo
or
inc
es
int3
retf
add
ins
xor
jae
jge
js
cmp
(bad)
clc
add
sub
icebp
sub
ror
jbe
fld
mov
push
and
mov
movs
mov
cmps
jno
jl
mov
xchg
into
aas
or
(bad)
test
pop
xchg
mov
inc
pop
xchg
jae
push
lods
repnz
pop
jbe
idiv
out
ror
lods
loopne
inc
xor
jmp
sub
cmc
stc
imul
test
test
out
cmps
pop
push
pusha
pusha
shl
inc
jecxz
jne
jbe
loope
cmps
mov
in
mov
gs
mov
cmps
fld
nop
popf
rcr
push
ins
adc
inc
pop
icebp
mov
jae
mov
sub
test
movs
retf
imul
add
push
adc
mov
scas
inc
cs
mov
ins
cmp
pusha
jg
and
aam
mov
push
mov
test
leave
xlat
stos
lods
call
xchg
inc
call
test
sbb
adc
xor
pop
jmp
test
test
int
add
(bad)
cmp
stos
cli
xor
lahf
hlt
les
dec
fdivrp
ret
test
loope
inc
add
push
clc
push
cmps
lds
fstp
mov
pop
or
pop
ret
or
mov
adc
sbb
push
adc
jge
shl
cmp
mov
inc
enter
sub
sub
shr
call
pop
cmp
sbb
test
and
ret
push
data16
nop
add
test
jmp
aad
add
jg
or
mov
loop
inc
add
jle
das
leave
je
call
inc
mov
lahf
pop
mov
xchg
cmp
retf
leave
inc
mov
hlt
jbe
dec
push
js
repz
adc
mov
test
lahf
jmp
or
xchg
es
or
repnz
xchg
xchg
cwde
xchg
or
outs
cmp
mov
mov
dec
cmp
mov
daa
cmp
and
loope
in
sbb
movs
push
cdq
lods
int
jae
xchg
leave
mov
mov
add
test
sbb
bswap
call
and
dec
fs
lahf
lds
outs
faddp
test
out
mov
pop
cs
push
dec
sub
imul
jle
pop
pop
loope
or
jmp
stos
mov
push
loope
shl
imul
mov
mov
mov
add
lock
(bad)
arpl
sub
xbegin
addr16
mov
adc
jg
pop
sbb
fsubr
jg
and
dec
idiv
or
fmul
loopne
mov
add
push
fcomp
movs
mov
jbe
mov
mov
aas
clc
fld
(bad)
adc
rcr
aaa
scas
int
cmp
mov
sahf
mov
cmps
mov
daa
faddp
retf
ins
ja
icebp
shr
bndldx
push
icebp
(bad)
retf
mov
pushf
push
fwait
pop
adc
push
add
lods
icebp
ins
xchg
ss
fsub
cmps
inc
pop
lahf
mov
sbb
cwde
and
jp
xchg
sbb
rcl
fldenv
cmp
out
imul
clc
shl
ja
add
lock
jae
push
dec
std
cmp
mov
sti
loope
bound
lods
in
stos
sbb
popa
lea
mov
je
(bad)
popf
out
and
mov
jne
xor
inc
sub
mov
(bad)
in
jns
xchg
test
retf
mov
mov
(bad)
sbb
lahf
fmul
sub
jg
inc
sub
loope
loop
js
inc
cmp
jmp
mov
mov
mov
mov
shl
leave
ret
or
mov
popf
cmp
cdq
inc
jge
jno
push
mov
dec
ja
cwde
arpl
lock
jae
or
dec
cmp
add
mov
jle
in
out
xchg
cmc
lods
mov
stos
js
dec
jp
xchg
outs
stc
inc
inc
lds
xchg
adc
jno
adc
cmp
xchg
test
movs
fisub
or
and
or
push
adc
ins
fistp
jb
scas
push
ret
xchg
dec
mov
scas
in
movs
push
mov
push
xchg
add
jmp
out
rcl
rcl
or
xchg
push
jmp
cwde
jno
xlat
js
inc
ja
scas
sbb
ss
(bad)
ret
rcr
ret
mov
dec
adc
movs
leave
mov
shl
out
mov
push
ret
mov
push
cmp
mov
ins
pop
and
push
inc
dec
and
mov
fisub
push
das
cmp
popf
cmp
test
cmp
xor
inc
add
clc
aad
or
mov
neg
pop
repz
cmp
or
shr
cmp
inc
aad
test
or
jb
fcmovnb
mov
adc
dec
add
or
add
adc
scas
push
jnp
gs
cli
ja
push
add
imul
(bad)
xor
xchg
pusha
arpl
fs
mov
xchg
fidivr
cs
sub
mov
push
mov
adc
mov
cdq
mov
and
add
jns
dec
inc
cmc
movs
dec
outs
cmc
in
out
pop
nop
lock
mov
and
mov
add
neg
dec
sar
jbe
inc
jnp
arpl
mov
mov
(bad)
out
push
mov
inc
aas
jg
stc
stc
push
xor
add
shl
mov
xchg
loop
sti
mul
cmp
mov
aaa
fdiv
fsubr
and
pop
sahf
test
ins
cld
sub
rol
ficomp
sbb
movs
(bad)
xor
out
aas
jno
push
mov
inc
push
dec
cmps
inc
out
fist
loope
icebp
dec
in
psubd
sbb
dec
cmp
inc
retf
xchg
pop
mov
sbb
stos
push
push
inc
push
xchg
and
jmp
scas
cmps
mov
push
jecxz
call
push
shl
dec
fidivr
add
sub
jne
add
(bad)
pop
push
xor
int3
scas
jecxz
mov
add
ja
inc
cmp
inc
jecxz
call
jae
xchg
add
mov
sub
mov
out
pop
mov
aad
mov
loopne
pop
inc
and
movs
dec
mov
retf
push
(bad)
(bad)
mov
rcr
mov
je
jmp
scas
pop
push
push
ja
mov
push
loop
ins
inc
ret
and
add
pop
mov
adc
jo
in
pop
mov
lods
mov
test
push
repz
xchg
ror
xor
repz
pop
cmp
pop
or
rcr
adc
stos
imul
(bad)
mov
jmp
and
xchg
push
ins
stc
push
(bad)
ret
pop
jp
or
addr16
retf
aam
fidiv
cmps
sbb
(bad)
and
mov
mov
pop
add
dec
xchg
mov
adc
ret
retf
pop
sbb
cmp
cwde
add
cmp
sbb
je
cmp
shl
je
and
sti
stos
out
jl
stos
jl
mov
sub
push
cdq
sbb
dec
jl
ror
or
and
(bad)
adc
jno
pop
inc
ret
add
mov
(bad)
outs
in
cld
and
or
fsqrt
cmc
dec
dec
cmp
mov
adc
fisttp
fbstp
jnp
cmp
aam
mov
add
mov
daa
push
xchg
inc
jnp
js
neg
or
add
popf
cdq
lock
xchg
test
cmc
pusha
cmps
sub
sub
inc
sbb
jp
scas
int
xchg
hlt
jmp
pop
sub
cdq
and
mov
loop
clc
push
shl
xchg
icebp
hlt
je
arpl
and
out
pop
mov
or
jmp
loopne
or
mov
mov
loope
stos
dec
call
add
inc
cmps
cli
adc
xchg
retf
(bad)
push
or
cmps
mov
push
inc
fstp
hlt
and
aam
push
jmp
mov
mov
loope
adc
xor
adc
push
lods
shr
xor
sti
inc
push
mov
cmc
popf
sub
stc
or
les
sbb
adc
jmp
jns
lds
and
cmp
cld
out
push
fdivr
inc
xchg
inc
fisttp
dec
or
scas
(bad)
icebp
jl
cmc
pushf
jl
outs
pop
mov
push
leave
push
xor
adc
jae
cmps
in
mov
or
fcom
rcl
pop
mov
jecxz
jns
mov
mov
inc
mov
imul
cmps
dec
mov
fs
outs
lahf
add
loop
cmp
repnz
enter
jle
dec
fs
cld
test
mov
dec
add
out
enter
jl
fs
pop
adc
mov
dec
push
jo
rol
cmps
add
jmp
(bad)
sub
push
pop
int
push
xlat
mov
stos
cmp
mov
add
enter
sub
ud1
cmp
push
mov
repz
jg
pop
mov
jge
inc
and
dec
pop
mov
jnp
sub
iret
ins
pop
les
mov
add
dec
arpl
out
aad
outs
rcl
pop
inc
in
stc
jno
imul
sub
or
fimul
fdiv
lahf
in
sub
or
(bad)
scas
inc
ins
jp
shl
(bad)
jle
push
jo
adc
inc
cmp
or
inc
mov
outs
mov
call
pop
ja
movs
call
xchg
imul
stos
jb
mov
mov
sbb
lods
mov
clc
cmp
out
dec
add
cmp
lahf
jbe
int3
ds
(bad)
imul
popa
lods
fwait
lods
cmp
or
cmp
xchg
sbb
cmp
das
std
movs
(bad)
jp
cmp
jmp
or
ret
stos
cmp
lods
adc
(bad)
mov
imul
es
mov
ins
mov
pop
hlt
retf
lock
mov
out
nop
cmc
add
pop
fild
fiadd
test
mov
test
rol
xor
push
cmp
jmp
adc
push
sbb
jl
leave
gs
pop
repnz
shl
mov
dec
jmp
cmc
das
xchg
dec
inc
mov
dec
pushf
adc
ret
sbb
cli
adc
adc
or
cmp
je
fmul
popa
xlat
mov
and
push
ins
cmp
mov
xor
cmps
and
enter
je
hlt
fisttp
mov
dec
mov
out
movs
les
lods
sub
scas
jnp
xchg
push
add
test
mov
in
add
add
pop
xchg
sub
xchg
sbb
int
out
out
fsubr
xor
xchg
outs
test
fwait
jmp
mov
int
inc
add
dec
(bad)
xchg
test
ffreep
inc
test
(bad)
test
loopne
test
imul
pop
add
test
push
fistp
xchg
(bad)
cmp
pop
inc
mov
fldcw
mov
mov
inc
mov
inc
inc
jmp
push
call
mov
nop
push
add
iret
inc
sub
(bad)
daa
push
cs
pop
inc
sbb
nop
xor
dec
cmp
popa
stos
test
mov
(bad)
mov
rol
mov
cmp
lods
aas
adc
popa
jge
pop
lea
test
sub
add
fdivr
sbb
and
xor
data16
dec
mov
or
pop
jp
clc
in
pop
adc
ja
inc
cmp
hlt
adc
xchg
lidtd
cwde
mov
(bad)
outs
inc
xor
test
mov
dec
mov
adc
and
(bad)
test
test
sub
daa
inc
adc
mov
frstor
rol
mov
sbb
or
ja
loope
loope
ss
or
repnz
movs
adc
retf
jnp
jns
push
or
out
leave
je
dec
add
int3
jae
add
sbb
sbb
and
inc
xor
ss
push
ins
xor
dec
add
or
jo
loop
sahf
cmp
scas
jp
sbb
mov
inc
sbb
dec
mov
sub
xchg
xchg
(bad)
sub
pop
sub
loope
lods
jo
mov
pusha
mov
xor
imul
push
lea
popf
stos
pop
or
test
je
loopne
inc
pop
and
dec
loopne
push
jl
jmp
adc
lods
push
cmps
cmp
adc
fdiv
fist
lods
push
(bad)
inc
add
ds
lahf
or
sahf
mov
push
jo
jno
sar
repz
xor
test
retf
(bad)
int
les
lods
sub
pop
outs
je
cmp
cwde
repnz
mov
sub
sar
fcmove
cmp
or
xchg
stc
iret
pop
imul
mov
cld
int
pop
push
or
dec
movs
pop
xchg
push
aaa
sbb
test
das
pop
cmc
lock
loopne
xor
adc
call
in
loop
mov
jnp
mov
(bad)
xor
stos
pop
stos
or
minps
mov
(bad)
imul
inc
fldcw
loop
mov
retf
mov
mov
outs
xchg
out
retf
pop
cmp
call
fwait
jns
add
outs
mov
mov
mov
mov
push
dec
test
cld
les
shl
int
(bad)
fsub
sub
jns
scas
arpl
ret
fld
pop
mov
push
push
call
stos
xchg
test
mov
or
xchg
(bad)
push
loopne
push
or
out
mov
jg
pop
clc
adc
push
jnp
test
rcl
test
(bad)
pop
mov
aas
je
sahf
xchg
sbb
fiadd
adc
int3
add
dec
inc
fcomp
hlt
xor
xchg
or
adc
out
push
dec
pop
sbb
lods
jmp
es
aaa
dec
cdq
repnz
sbb
daa
push
mov
mov
test
xlat
(bad)
shl
fs
aaa
xchg
xchg
and
and
rol
jns
bound
sub
or
inc
xchg
sbb
call
jne
loope
(bad)
test
and
push
mov
and
adc
lock
mov
add
test
jl
mov
adc
loope
dec
shr
daa
sbb
and
rol
or
mov
imul
dec
push
rcl
cmc
loop
adc
(bad)
jg
pop
pusha
sub
adc
inc
(bad)
sti
lahf
xchg
and
dec
mov
ror
outs
push
call
enter
in
cmc
(bad)
push
ins
cmc
std
push
test
sbb
pop
movs
adc
pop
dec
test
shl
cwde
nop
pop
push
inc
mov
add
dec
adc
mov
ds
es
mov
cmp
stos
hlt
lds
mov
xchg
add
aaa
jae
push
nop
inc
xchg
xor
or
call
pop
or
cwde
fcmove
xchg
xor
jns
pop
inc
sub
sbb
(bad)
enter
xchg
cld
aaa
int
fidivr
mov
popa
sbb
jmp
sub
xchg
int
neg
clc
js
out
jns
test
pop
into
ins
iret
xchg
pop
pop
mov
jo
pushf
imul
adc
inc
sub
add
out
xor
push
test
inc
inc
ds
shr
pop
out
inc
iret
addr16
jle
ds
xor
movs
or
aam
or
sbb
or
mov
bound
test
rcl
js
xor
sbb
in
add
sahf
pop
int3
adc
loopne
adc
fisubr
in
movs
adc
inc
aad
cmp
loopne
xor
sub
push
(bad)
lahf
mov
mov
aam
in
dec
mov
mov
adc
sub
adc
scas
inc
sub
sub
loopne
imul
and
xchg
add
inc
repz
in
inc
dec
add
ins
and
sub
aaa
push
sub
or
add
(bad)
dec
fsub
mov
repnz
sbb
movs
arpl
(bad)
pop
inc
mov
imul
xchg
and
push
pop
es
neg
inc
xor
pop
es
add
call
ja
in
sbb
sti
bound
(bad)
sbb
sahf
or
call
mov
ja
or
sbb
shld
and
(bad)
mov
add
cs
push
jmp
push
xchg
inc
inc
and
js
inc
mov
aad
cmps
iret
in
push
cmp
dec
xor
lahf
pop
pop
addr16
cwde
out
jnp
sbb
mov
dec
lods
cmp
jb
cmc
(bad)
adc
xchg
test
xchg
loop
and
mov
mov
out
jmp
sbb
test
push
cdq
pop
cld
mov
and
(bad)
cld
jo
cld
push
push
movs
fnstenv
mov
rcl
je
rol
or
cli
call
(bad)
xlat
mov
sub
(bad)
lods
stos
leave
ins
sti
daa
call
push
inc
and
sbb
and
out
mov
iret
and
mov
xchg
scas
ins
pop
xchg
sbb
xor
push
xchg
rep
mov
and
and
nop
sbb
inc
popf
mov
fadd
leave
sbb
xchg
out
jns
jno
(bad)
cmp
setl
push
inc
inc
or
test
cld
jmp
repnz
jp
push
xchg
sbb
mov
aaa
mov
es
fsubr
sub
cwde
shr
jns
jb
scas
jmp
shr
mov
hlt
push
mov
inc
arpl
mov
add
sbb
cmp
xchg
and
not
cli
rol
shr
sbb
ins
arpl
dec
jb
aaa
jae
outs
popa
rcl
ds
popa
jmp
(bad)
shl
jo
cmp
shl
(bad)
sbb
mov
xchg
aam
cli
xchg
mov
mov
inc
mov
or
sub
lock
push
imul
fwait
add
adc
cmps
test
sbb
iret
outs
fnstsw
sahf
sbb
(bad)
sbb
inc
inc
std
push
dec
push
adc
jge
pop
mov
popa
out
in
test
inc
adc
mov
sbb
mov
popa
jmp
mov
je
xor
test
push
enter
out
cmps
inc
jae
and
mov
popa
mov
add
ds
push
sahf
mov
adc
mov
jae
push
pushf
out
jno
std
js
pop
and
fyl2xp1
pop
in
dec
in
mov
dec
fwait
inc
dec
dec
inc
pmulhuw
data16
in
dec
jmp
dec
mov
mov
jmp
or
push
adc
cmp
(bad)
jmp
loope
lods
xor
je
int3
mov
jno
mov
call
dec
xchg
bound
dec
adc
push
ret
shl
dec
add
lds
push
cs
push
inc
mov
adc
loope
pop
mov
jb
inc
cmp
push
mov
call
jo
mov
xchg
inc
and
scas
hlt
test
fist
xchg
jg
adc
pop
dec
int3
inc
mov
ret
lea
ja
and
push
push
jmp
sbb
sbb
mov
push
xchg
stos
lods
adc
mov
(bad)
cmp
adc
mov
push
push
jb
mov
ins
pop
pop
ins
ja
shl
das
rol
pop
add
cli
sbb
aad
mov
test
xor
rcr
outs
jl
lds
scas
fisttp
dec
daa
rcl
mov
or
mov
movs
dec
arpl
sahf
popf
adc
stc
or
inc
inc
rcl
push
aam
sbb
jecxz
jae
loope
or
ss
and
cdq
mov
ret
sbb
sbb
dec
push
ret
std
push
lods
jle
addr16
stos
aad
out
repz
leave
sti
hlt
mov
shr
sub
mov
inc
mov
xlat
add
push
frstor
les
dec
leave
ja
add
jge
sbb
jge
pop
imul
sbb
mov
inc
nop
sbb
mov
and
hlt
lea
jb
xlat
mov
jns
xor
lods
adc
dec
xor
and
shl
es
and
in
lods
shl
cmc
push
retf
pushf
cmp
jbe
add
inc
cdq
push
push
jne
outs
cli
repz
mov
cwde
or
scas
js
push
fdivr
mov
push
pop
xor
stc
dec
dec
cmps
pop
(bad)
adc
addr16
dec
std
stc
aam
adc
push
adc
dec
mov
popa
or
ret
aas
call
jp
pop
(bad)
cmc
push
in
dec
sbb
mov
sub
ins
sbb
sub
dec
mov
xchg
ret
scas
fidiv
out
adc
sahf
xor
fild
push
lahf
and
mov
dec
jl
data16
aad
jle
add
test
and
jl
jae
nop
pusha
(bad)
imul
ins
fst
fimul
ss
mov
test
(bad)
push
inc
inc
(bad)
in
fwait
jmp
push
lods
adc
dec
fwait
add
sti
out
fs
dec
arpl
push
scas
mov
je
xchg
mov
(bad)
mov
inc
es
pop
cmc
fdivr
inc
and
imul
xchg
push
sub
in
rcr
pop
cs
add
mov
inc
mov
mov
add
pop
sbb
sbb
pusha
push
popf
jo
sub
or
icebp
push
pusha
jae
mov
retf
xor
repz
outs
loope
cmc
xchg
data16
std
and
js
jmp
xchg
test
cmp
scas
loop
mov
cmp
inc
popf
out
outs
shl
sbb
in
imul
sbb
out
jmp
stos
in
test
adc
imul
xor
aaa
jnp
and
add
adc
push
mov
jl
shl
pop
cwde
mov
cdq
mov
mov
dec
les
(bad)
pop
in
out
stos
push
sbb
dec
and
std
xchg
sti
xlat
mov
sub
cli
cld
and
xor
cmp
push
push
ins
clc
scas
lea
bound
add
pop
ror
add
push
add
in
and
loope
mov
inc
xor
sbb
xchg
dec
outs
adc
jnp
data16
in
out
pop
and
int3
and
movs
inc
shr
and
sbb
rcl
push
pushf
dec
std
sbb
push
dec
push
cld
mov
push
sbb
adc
fs
pop
ret
das
push
cwde
test
call
mov
sub
sub
and
fwait
aam
sbb
lahf
outs
mov
push
push
call
out
rcr
dec
xor
lds
call
ds
fwait
add
mov
(bad)
outs
out
or
cwde
aaa
pop
mov
scas
sbb
jmp
mov
je
mov
pusha
dec
xchg
fmul
inc
loop
xchg
stos
jae
aad
(bad)
in
sbb
cli
pop
fcomp
aad
sbb
movs
xor
popf
loop
imul
pusha
push
inc
in
int
mov
std
mov
mov
outs
ins
dec
and
call
push
sbb
lods
or
movs
int
ret
dec
adc
xor
sbb
fwait
clc
sbb
div
test
and
dec
fsubr
(bad)
jns
cmc
jno
cmp
pusha
push
rol
stos
jl
in
push
pop
xchg
adc
mov
retf
imul
and
bound
adc
retf
mov
pop
inc
fist
mov
pusha
popf
mov
xor
and
push
inc
retf
jecxz
aad
lods
push
jo
cmp
sti
in
(bad)
jmp
adc
call
and
and
mov
mov
xchg
je
sar
inc
mov
fcmovne
hlt
sbb
(bad)
in
jp
out
aad
loope
adc
sbb
or
push
(bad)
and
dec
xor
pop
lds
jb
stc
(bad)
sub
idiv
addr16
pop
adc
test
sub
lock
in
and
movs
cmps
mov
add
int
xchg
jbe
push
mov
sub
xor
cs
stc
push
add
mov
(bad)
push
inc
aaa
sbb
push
push
xchg
jmp
cmps
mov
nop
push
mov
gs
add
sbb
(bad)
jmp
mov
cld
push
(bad)
mov
lock
loopne
push
mov
dec
retf
and
and
jae
out
push
(bad)
sbb
fsubr
and
call
pop
adc
sbb
loope
jne
ins
imul
pop
push
or
adc
daa
pusha
cmp
lahf
push
sub
push
(bad)
pop
pop
or
(bad)
repz
dec
and
adc
cmc
enter
xchg
add
mov
cmp
mov
xor
sub
or
js
mov
adc
adc
call
stc
fsubr
cmp
mov
inc
add
(bad)
mov
loope
mov
inc
mov
loopne
mov
sbb
lds
stos
out
imul
xchg
das
nop
stc
mov
test
iret
xor
into
call
popa
aaa
push
and
mov
sub
hlt
dec
aam
bound
jle
std
and
push
push
mov
int3
mov
pop
nop
cmp
add
jge
push
cld
movs
adc
out
mov
inc
add
ins
retf
pop
cmp
add
mov
popf
jg
gs
in
aas
jno
loope
out
sub
xchg
sar
jnp
jge
add
lds
mov
jle
fsubr
xchg
or
xchg
push
data16
push
sti
xchg
add
mov
mov
gs
sti
fsub
jmp
mov
(bad)
in
ror
adc
leave
scas
adc
stc
ret
jo
and
lea
shl
push
sub
mov
sbb
sub
xlat
jno
inc
sbb
sahf
test
dec
cld
inc
fisttp
mov
les
jmp
jnp
cmp
pop
or
mov
das
add
jbe
and
sub
mov
aad
imul
mov
cld
dec
outs
scas
push
cmp
lock
xor
imul
sub
sbb
push
jg
popa
das
mov
rcl
sub
pop
sbb
rol
mov
stc
push
neg
pushw
(bad)
in
rol
mov
mov
sbb
push
cmp
pop
and
push
xchg
xor
jnp
int
ror
xor
inc
bnd
dec
icebp
jnp
inc
add
das
push
ret
pop
fadd
(bad)
push
sbb
shr
adc
addr16
mov
pop
adc
add
pop
fnstcw
fcomp
inc
gs
cmps
sahf
pop
sub
xor
cdq
inc
pop
push
add
adc
mov
scas
add
dec
pushf
pop
xor
scas
aam
inc
jmp
dec
ds
adc
(bad)
pop
lds
xor
fdiv
sahf
mov
or
sub
cmc
loop
mov
jge
jae
rcl
stos
les
mov
bound
stos
fstp
ss
pusha
sub
inc
pop
sub
lods
xor
(bad)
cmc
cwde
inc
rol
push
jmp
ror
icebp
pop
mov
clc
push
inc
mul
sub
out
(bad)
mov
inc
ret
in
and
in
mov
out
mov
add
xchg
test
cmp
xchg
and
dec
sbb
dec
int3
dec
ds
xchg
ret
xor
dec
dec
xlat
sub
dec
mov
jmp
jecxz
dec
jo
cmp
ja
imul
inc
sbb
pop
and
jne
call
xchg
shld
cmps
xor
fdiv
inc
sahf
cs
pop
push
xor
es
aas
and
lods
mov
mov
lock
cwde
test
ret
mov
pop
inc
add
leave
scas
mov
inc
ins
sub
inc
movs
and
sub
mov
(bad)
jecxz
inc
mov
pop
push
(bad)
in
cmps
movs
cwde
sbb
dec
jmp
pop
inc
dec
push
xchg
scas
dec
push
and
pusha
mov
ss
lods
cwde
stc
or
fwait
arpl
jl
sbb
xchg
ret
je
sbb
or
xor
jmp
cmps
jnp
mov
inc
jns
dec
pop
inc
mov
addr16
and
xor
inc
data16
or
stos
sar
repz
test
dec
or
outs
push
dec
leave
fcom
xchg
mov
sahf
cmp
jnp
sar
jbe
out
daa
pop
inc
or
rol
fiadd
or
mov
push
sub
dec
fdivr
ret
aas
and
es
ror
jne
dec
push
pop
push
mov
retfw
jne
xchg
dec
pop
bound
add
dec
popa
cmc
push
dec
cld
xchg
add
dec
in
xchg
xor
or
test
jmp
shr
js
jnp
and
pop
imul
mov
lea
or
mov
pop
jg
imul
popf
pop
pop
cwde
(bad)
adc
sub
jmp
popa
shl
clc
test
mov
ret
dec
mov
leave
jg
out
clc
and
mov
xor
push
pop
imul
inc
push
cmp
mov
mov
mov
xlat
fild
xchg
jbe
or
jae
sub
cmps
lahf
add
mov
pop
mov
sti
pusha
adc
(bad)
in
or
(bad)
les
cmp
jmp
adc
sub
sub
sub
cmp
lahf
sub
test
pop
adc
pop
jg
std
add
pop
dec
ss
movs
inc
mov
test
loopne
inc
push
push
repnz
loopne
inc
sub
pusha
outs
out
clc
cld
cdq
xchg
xor
nop
fisub
icebp
aam
or
out
xor
test
xchg
xchg
and
mov
pushf
xor
mov
pop
repz
jns
call
mov
fisubr
(bad)
cdq
inc
sub
ret
fstp
ss
cmp
stos
movs
fadd
push
jmp
xchg
aam
ja
call
sub
or
sbb
jbe
mov
imul
xchg
sbb
xchg
(bad)
jmp
xor
pop
xchg
jae
sbb
lock
lea
fld
adc
mov
fdivr
hlt
adc
push
push
and
pop
dec
imul
or
popa
test
mov
in
mov
in
out
jbe
mov
retf
mov
cdq
mov
int3
mov
xor
pusha
rol
repz
inc
lock
jbe
pop
xchg
or
fist
xchg
mov
aad
xchg
dec
push
imul
mov
and
es
jmp
fild
cmp
add
adc
les
enter
inc
xlat
(bad)
and
mov
shl
mov
pusha
lds
fstp
outs
mov
scas
inc
mov
inc
shr
cli
cwde
sub
inc
pop
fisubr
daa
fild
or
jmp
push
stc
adc
cmp
int
sub
ins
call
loop
pop
xor
cmps
loop
xchg
xchg
jae
adc
repz
(bad)
jmp
jmp
scas
rcl
push
adc
or
push
add
xor
mov
lahf
push
sbb
sbb
addr16
ins
xlat
mov
inc
or
jns
and
push
inc
mov
call
cdq
cmps
retf
jp
push
mov
(bad)
pushf
jle
pop
mov
push
jle
cmp
ins
fwait
cld
and
iret
jp
frstor
mov
aas
push
pushf
outs
leave
xor
into
mov
cmp
movs
mov
xchg
int
xor
dec
jb
clc
ss
jns
or
mov
outs
test
pop
mov
inc
inc
(bad)
fstp
in
in
dec
jle
das
scas
mov
xchg
sub
popa
sbb
mov
fnstenv
push
arpl
and
dec
jp
je
retf
ret
mov
add
(bad)
xchg
mov
pusha
jb
dec
aam
aas
fs
lahf
push
mov
cmp
jb
push
xor
ret
pop
sub
dec
pop
inc
mov
stc
repz
rcl
ret
les
ss
adc
rcl
sub
daa
pusha
inc
in
mov
jns
dec
jg
inc
(bad)
fwait
xchg
ds
stos
xchg
mov
(bad)
sbb
add
and
outs
inc
push
push
mov
movs
pop
sub
xor
pop
inc
xchg
enter
(bad)
std
xor
(bad)
mov
ins
(bad)
cdq
xlat
sbb
sub
and
test
stos
jmp
mov
mov
gs
fs
xchg
adc
xor
pop
sbb
sti
cmp
stc
lea
jp
sahf
in
push
dec
fnstcw
and
xor
xchg
fs
cdq
inc
cmp
mov
inc
mov
jl
and
ss
xor
inc
mov
and
jns
push
clc
mov
lds
movs
push
jp
sti
sbb
jae
in
cmp
cmp
jmp
jp
leave
jae
jge
sbb
xor
pop
addr16
sar
inc
ror
pop
arpl
lds
add
fwait
or
neg
sahf
cs
ins
inc
xchg
sqrtps
cmp
push
lea
cmp
ds
xor
fild
lock
hlt
jge
mov
jmp
xor
jge
cmp
jl
(bad)
shl
(bad)
(bad)
stc
std
cwde
jp
les
movs
in
clc
jnp
sbb
mov
jns
in
mov
push
mov
jge
or
ds
test
mov
(bad)
call
loopne
pop
pop
add
in
mov
dec
aad
mov
jl
jns
sbb
pop
and
aam
jnp
xchg
add
sbb
daa
mov
dec
mov
dec
outs
movs
call
out
call
push
inc
int3
pop
retf
je
inc
std
lods
dec
dec
mov
pop
(bad)
dec
or
shl
loope
mov
test
inc
push
xchg
mov
xor
cmp
push
mov
xchg
movs
sbb
cwde
rcr
test
jecxz
xchg
pop
out
pop
test
xchg
mov
retf
and
(bad)
fild
out
shr
jg
jp
mov
push
add
cmc
adc
pop
ja
fstsw
aad
xor
dec
sub
and
xchg
push
xchg
xchg
sub
gs
repnz
(bad)
int3
clc
scas
aaa
aas
div
push
add
fstp
push
push
rcr
xor
lock
int
aaa
sbb
les
add
xchg
inc
addr16
js
adc
retf
loopne
mov
cmps
frstor
dec
and
cwde
or
dec
test
lock
xor
push
jmp
cmp
push
aas
call
mov
add
data16
and
mov
adc
sbb
sub
xchg
cwde
cvtps2pi
add
mov
cwde
pop
aas
mov
adc
movs
mov
jno
add
mov
sbb
int3
dec
sahf
inc
(bad)
and
push
dec
sbb
mov
sbb
ror
cli
cmps
adc
xlat
jmp
or
mov
mov
inc
or
stos
push
and
retf
dec
mov
cli
lods
sub
(bad)
sub
test
sub
push
dec
mov
and
mov
add
sbb
mov
jmp
fisttp
test
fs
add
cdq
pop
and
mov
mov
int
arpl
inc
(bad)
jmp
inc
popa
ss
inc
shr
or
lahf
out
mov
inc
xor
adc
test
fist
cmp
retf
js
xor
test
jae
je
ss
(bad)
(bad)
in
add
arpl
cmp
aad
idiv
stc
cdq
dec
sbb
repz
shr
sbb
lahf
repz
js
(bad)
pop
(bad)
pop
lock
imul
and
out
add
es
int3
mov
movs
sbb
rol
aaa
(bad)
adc
cmps
add
mov
sub
jmp
xor
push
mov
dec
aas
mov
push
(bad)
js
or
mov
test
sub
adc
xchg
es
mov
adc
in
mov
or
mov
cdq
or
lock
cwde
ins
push
or
push
cmp
pop
nop
or
jecxz
addr16
cwde
sbb
cmp
cwde
lds
jo
sbb
ucomiss
and
vmwrite
in
movs
xor
inc
xchg
xchg
ja
or
ret
mov
out
jecxz
imul
inc
mov
adc
pusha
add
fisttp
(bad)
pop
add
icebp
xchg
jle
mov
call
and
loopne
pop
pop
jae
cmps
dec
xchg
shl
mov
scas
or
add
sar
mov
icebp
ins
add
dec
mov
dec
xchg
sar
add
cdq
scas
adc
adc
jb
xor
mov
les
mov
test
pop
push
sbb
stc
das
lods
loopne
repz
iret
nop
push
or
mov
gs
cmc
add
mov
imul
push
sub
push
jmp
call
mov
(bad)
call
or
mov
inc
popf
jg
and
cld
retf
jns
mov
jb
sub
movs
cmps
add
out
ss
and
shr
shr
mov
push
out
jecxz
pop
jg
xlat
sub
bound
or
shl
std
dec
mov
stos
pslld
inc
mov
push
cmps
xor
sub
push
mov
mov
mov
add
mov
(bad)
push
test
sbb
sub
adc
das
stc
or
mov
mov
xor
jecxz
xchg
mul
or
cwde
or
jmp
ins
push
cwde
push
cmp
popf
cmps
sar
lock
push
mov
and
ret
xchg
les
dec
call
retf
es
inc
cmc
xor
inc
(bad)
(bad)
mov
jo
jbe
mul
pushf
mov
fst
add
xor
push
repz
lods
imul
es
shl
fiadd
je
imul
jbe
retf
aam
pop
add
dec
stos
adc
fs
test
aam
pop
dec
add
cmp
iret
test
dec
outs
in
xor
imul
mov
xor
outs
shl
xchg
push
loope
int
aam
fst
jmp
mov
int3
mov
cmp
in
mov
mov
push
cmp
sub
push
lods
imul
mov
sbb
pop
pop
sti
movs
popf
jno
or
inc
add
jne
cmp
mov
xchg
imul
xchg
inc
or
xchg
inc
into
jne
pop
push
gs
or
leave
xchg
test
mov
sbb
inc
adc
add
movs
cmc
pop
add
arpl
inc
lods
js
push
sbb
into
jg
pop
inc
mov
mov
mov
jb
shr
jecxz
lock
and
or
mov
and
repnz
xchg
pop
cwde
out
movs
add
mov
cmp
outs
mov
xchg
and
test
call
inc
popa
push
loope
push
(bad)
mov
jo
inc
or
(bad)
mov
adc
mov
xchg
pop
push
ins
pop
(bad)
push
xchg
das
add
(bad)
and
push
movs
mov
mov
outs
test
out
loope
mov
out
fbstp
sbb
outs
adc
enter
sub
jg
add
mov
(bad)
cwde
mov
push
pop
pop
cs
cli
mov
mov
mov
repz
shl
push
leave
std
clc
xor
out
inc
sbb
popa
and
scas
icebp
retf
push
or
test
mov
mov
jae
int3
(bad)
sbb
ss
(bad)
xchg
nop
pop
add
jle
xchg
cmps
xchg
sub
adc
jns
das
pop
mov
loope
mov
push
sbb
sbb
out
mov
cs
inc
or
and
push
push
out
inc
sti
in
jp
les
or
jae
push
cmp
dec
jecxz
inc
cmp
dec
xor
aad
mov
js
add
mov
and
stos
cmps
mov
sbb
pop
pop
sbb
mov
mov
ficomp
sbb
popf
ja
arpl
pop
push
mov
cmp
out
pop
out
mov
aas
movs
test
int
fldcw
mov
or
daa
adc
cmps
jecxz
shl
adc
push
pop
dec
iret
popa
sub
mov
or
lea
aas
test
aad
xchg
cmps
push
or
add
sub
iret
xchg
xor
stc
dec
mov
aam
mov
mov
push
cmp
fst
cmc
fcomip
cmp
jno
addr16
cmp
ret
outs
sub
leave
stos
jle
ins
xchg
mov
cmps
and
in
movs
in
push
shr
sbb
mov
push
mov
mov
cmp
pop
es
adc
mov
(bad)
stos
pop
jecxz
push
jmp
add
dec
cmp
xor
mov
adc
sti
nop
sub
aas
sbb
rcl
rcr
push
ror
and
mov
sbb
sub
cmc
outs
out
mul
sub
adc
push
dec
pop
push
mov
sub
sti
xchg
jp
xchg
fist
sub
fimul
cdq
sbb
ins
or
push
inc
les
rol
les
imul
movs
popf
sub
ror
xlat
xchg
(bad)
frstor
or
mov
les
imul
push
xor
lock
jae
mov
lods
jo
shl
ret
push
push
rcr
stos
sbb
fsubr
and
xlat
add
push
inc
adc
mov
popa
mov
mov
test
shl
cdq
xchg
rcr
cmc
jne
push
pop
jge
fimul
cwde
xchg
cmc
lods
retf
jne
fild
lods
push
mov
scas
cmp
daa
sub
cwde
sub
mov
std
ins
xor
(bad)
repz
ror
lods
enter
aas
mov
int3
cmp
inc
jbe
sbb
cmc
push
stc
jns
sub
cmps
jmp
sbb
popf
add
test
mov
inc
cli
mov
mov
inc
push
ss
adc
adc
jb
(bad)
jmp
cwde
inc
fcmovnb
stos
pop
mov
jo
xor
cmp
push
add
pushf
ja
cmp
mov
add
mov
pop
cld
mov
and
and
mov
pop
pop
out
arpl
(bad)
mov
dec
mov
aaa
or
jmp
cmp
jge
ret
xchg
mov
scas
adc
repz
repz
lock
jae
dec
jnp
add
jno
pop
lea
cdq
aas
push
daa
enter
inc
rcl
mov
mov
outs
inc
push
mul
xor
push
jns
push
(bad)
in
rcl
hlt
repz
cli
sbb
test
inc
adc
cmp
push
xor
push
imul
pop
jo
mov
and
leave
ds
pop
dec
pop
fisttp
cli
pop
scas
sar
mov
in
(bad)
out
mov
jae
outs
pop
gs
add
test
loop
push
fs
jp
jle
fist
push
pop
xchg
push
stc
jle
(bad)
mov
daa
stos
xchg
jle
jb
pop
inc
sbb
rcr
fcom
add
(bad)
lock
adc
cmc
mov
sbb
mov
lahf
push
enter
cmps
mov
add
xchg
ss
not
fidivr
inc
fcomp
mov
pop
sbb
pop
adc
cmc
jns
jg
xchg
jecxz
push
push
retf
(bad)
xor
mov
xchg
in
aaa
and
mov
push
mov
shr
pop
pop
inc
push
lds
shl
stos
adc
adc
xchg
push
test
ss
sti
(bad)
jae
div
lahf
sub
or
sub
jp
push
(bad)
or
mov
pop
enter
rcr
mov
inc
mov
dec
sub
(bad)
pop
out
inc
gs
loope
jno
nop
in
mov
xchg
sar
fstp
stos
ss
and
jb
fcomp
test
sbb
and
stc
push
sub
sbb
(bad)
scas
stc
inc
cwde
pop
mov
fld
xor
call
sbb
fcmovu
pop
cld
cmps
(bad)
mov
xchg
jne
or
mov
mov
sub
nop
inc
jb
mov
jno
repnz
ror
(bad)
iret
popf
shl
jb
sub
pop
mov
or
test
jmp
inc
and
pushf
mov
sub
stos
daa
aam
dec
sar
mov
mov
push
pusha
arpl
dec
cli
in
(bad)
sub
xor
mov
sub
push
sub
pop
ror
push
pop
inc
sbb
xchg
sbb
add
jbe
mov
enter
cmp
imul
and
shr
sbb
jo
(bad)
adc
sar
inc
add
jns
popf
push
into
pop
dec
out
pop
(bad)
xor
xor
sbb
hlt
sub
sbb
cmps
pop
xor
dec
push
xchg
mov
cmp
lods
pusha
dec
popw
jo
stc
mov
jg
and
dec
inc
jge
gs
jb
sub
shl
out
jecxz
jo
idiv
das
xchg
sbb
inc
sub
(bad)
loop
das
or
mov
test
cs
and
ret
or
lds
mov
mov
(bad)
dec
pop
inc
mov
scas
dec
out
out
mov
pop
push
sub
xor
(bad)
cmp
mov
xor
pop
bound
(bad)
dec
dec
jp
sbb
sbb
push
cmp
jo
popf
xchg
or
in
in
cmp
stos
retf
add
pop
outs
xor
pusha
pop
in
inc
adc
sub
lea
test
(bad)
in
pop
cwde
pusha
xchg
sbb
jns
or
movs
inc
and
(bad)
arpl
daa
leave
cli
in
(bad)
mov
repnz
mov
jnp
stos
xchg
xor
or
fnstcw
cmp
jge
add
xor
add
mov
rcr
xlat
pop
imul
inc
pop
mov
jp
mov
mov
push
xchg
cs
add
inc
or
xor
pop
sub
fist
es
xchg
pop
pop
popa
adc
js
mov
inc
pop
es
mov
or
dec
inc
push
fcmove
imul
pushf
or
xlat
sub
dec
outs
push
jg
xor
sub
inc
sub
out
xor
imul
jb
pop
sti
push
inc
jl
loope
scas
addr16
inc
inc
xchg
lock
stos
and
push
or
jno
adc
add
sbb
outs
fs
retf
(bad)
xlat
popf
(bad)
pop
mov
mov
mov
mov
ret
fbld
out
mov
and
jmp
xor
(bad)
fiadd
(bad)
loop
pushf
mov
or
pop
jge
mov
jo
inc
add
sahf
jge
popf
(bad)
cwde
dec
fucomi
jns
in
cmc
jle
retf
xlat
pushf
rcl
mov
dec
hlt
in
ins
sbb
cmp
ret
pop
mov
hlt
scas
mov
pop
loopne
pusha
dec
xor
lock
rol
retf
pop
cld
data16
mov
add
jo
cmp
clc
cmp
pop
push
shl
ret
(bad)
(bad)
fbstp
adc
mov
out
cmp
jo
mov
cld
cmp
mov
jnp
lds
sbb
sar
push
xchg
loop
lds
shr
mov
lea
nop
bound
lock
cmp
push
mov
mov
aaa
xchg
inc
(bad)
(bad)
jmp
bound
push
dec
mov
dec
xor
nop
icebp
ror
dec
in
imul
imul
div
ins
xor
call
shr
cmp
push
jne
add
loope
and
adc
sbb
ins
push
out
mov
popf
mov
mov
jmp
test
mov
jae
pop
sbb
xchg
adc
(bad)
and
pusha
(bad)
neg
outs
jne
je
cmp
retf
cs
push
mov
sbb
inc
push
movs
mov
add
iret
and
cmc
gs
mov
nop
push
pop
adc
or
rol
scas
shl
pop
rcr
mov
fstp
add
cmp
xchg
lock
call
xor
cmp
push
clc
shl
es
and
(bad)
(bad)
fistp
add
and
gs
sbb
sbb
loope
es
pop
(bad)
mov
cmc
mov
mov
fwait
xchg
fcmovnb
call
push
mov
pushf
nop
mov
ja
das
(bad)
sar
rcl
retf
lods
or
lahf
nop
inc
dec
les
shl
ins
cmp
inc
(bad)
jmp
std
or
fild
mov
mov
inc
jbe
movs
cmp
jge
or
or
(bad)
push
inc
je
xor
movs
scas
mov
repz
mov
mov
sub
mov
xor
fsub
loop
jns
ficom
mov
and
scas
movs
test
sub
push
xor
data16
cwde
jl
(bad)
add
fsubr
lahf
cs
cmp
and
cmps
add
jmp
icebp
rcr
ins
mov
in
fidiv
mov
enter
adc
add
ins
xchg
xchg
test
enter
sbb
pop
call
push
mov
pusha
adc
out
repnz
mov
adc
pop
lods
inc
loope
outs
xchg
pusha
mov
arpl
icebp
dec
xor
xor
sti
shr
ds
retf
les
adc
xor
retf
jne
stos
movs
test
arpl
jno
lods
xor
pusha
sbb
shr
addr16
mov
popa
inc
shr
cs
jecxz
pusha
inc
outs
cmc
pop
or
pop
dec
shl
sbb
mul
in
out
xlat
pop
cli
pop
cmp
hlt
arpl
test
clc
mov
loopne
cmc
into
dec
push
jecxz
or
or
xor
or
cli
jb
mov
sub
dec
mov
and
push
mov
outs
pop
inc
jbe
xchg
push
mov
push
push
add
adc
push
and
cmp
lds
mov
popf
xchg
rcl
pop
xchg
aas
jg
lock
mov
imul
shl
dec
icebp
or
test
mov
stc
cs
add
xor
cmps
dec
int3
(bad)
fisub
add
pop
lahf
inc
bound
loopne
aas
iret
stos
(bad)
mov
push
mov
mov
(bad)
fadd
imul
fcmove
movs
out
inc
dec
arpl
lds
sar
jmp
push
cmp
scas
mov
cmp
or
cmp
fisttp
adc
pop
and
and
xchg
inc
js
sbb
add
adc
ins
pop
imul
xor
aam
aad
sar
lds
xor
(bad)
xor
mov
ffree
fimul
repz
dec
pop
mov
or
push
test
inc
push
(bad)
aas
pop
sbb
(bad)
and
clc
pop
call
fcmovnbe
(bad)
in
repz
push
mov
mov
add
in
dec
mov
xor
xlat
lea
loopne
(bad)
retf
xchg
push
imul
push
pop
ret
cmps
xor
mov
mov
inc
aad
jmp
sub
dec
and
sbb
loop
cmp
pop
sub
push
xchg
pusha
(bad)
shl
jl
in
sbb
stos
out
adc
sbb
adc
icebp
mul
xchg
mov
push
xchg
aad
jmp
bound
push
xchg
inc
mov
cmps
sbb
jmp
cmc
call
dec
mov
cmc
ja
arpl
test
lock
mov
das
mov
xchg
cmp
dec
clc
jge
stc
sbb
xor
push
das
mov
hlt
dec
test
mov
dec
mov
popf
and
test
cmps
cmps
sub
mov
pop
pop
nop
scas
fsubr
and
or
cmp
pop
test
cmc
jge
in
sub
jns
fwait
mov
rol
jmp
or
int3
add
mov
mov
clc
sti
sar
fs
mov
push
nop
push
jmp
ds
jg
outs
xchg
add
inc
dec
inc
pop
sub
pop
leave
iret
mov
(bad)
lea
cmp
(bad)
jnp
dec
ror
xor
mov
and
adc
mov
cwde
push
inc
dec
push
arpl
scas
and
mov
ret
and
mov
push
js
(bad)
pop
mov
or
xor
push
fdecstp
cwde
adc
fstp
test
repz
cmp
jl
push
cmp
mov
mov
clc
ficom
jae
pop
mov
(bad)
ror
and
fnstenv
sbb
arpl
jb
ret
mov
out
dec
retf
mov
adc
adc
stc
push
mov
adc
inc
push
stc
mov
sub
xchg
not
out
jle
push
xor
pop
loopne
std
arpl
sbb
or
pushfw
cmp
xor
xchg
(bad)
in
jbe
sub
jp
dec
mov
mov
adc
sub
lock
repnz
fld
movs
ds
sub
pop
in
pop
adc
mov
cmp
das
sbb
pop
jmp
cmps
sbb
(bad)
and
sub
pushf
das
movs
add
jb
imul
mov
and
inc
jmp
or
xlat
daa
mov
inc
shl
and
arpl
clc
clc
add
adc
cmc
pop
aaa
les
rcr
xchg
xor
test
pushf
nop
xor
cmp
add
dec
jge
arpl
dec
pop
xor
cdq
sahf
daa
stc
sbb
into
push
or
mov
jo
dec
pusha
push
inc
stos
mov
mov
(bad)
push
(bad)
mov
add
repnz
xor
ins
sub
push
adc
add
dec
xchg
inc
push
mov
mov
or
fst
je
adc
mov
xor
mov
inc
dec
stos
sbb
inc
dec
xchg
aaa
mov
in
dec
add
push
push
or
push
pop
je
dec
das
dec
(bad)
rol
lea
scas
ret
cmp
gs
fdivp
fisttp
sti
pop
pop
mov
cli
sti
ret
jae
push
jbe
mov
and
pop
lods
mov
pop
sub
cmp
or
dec
pop
pop
sub
xor
enter
jg
adc
stc
dec
movs
add
sub
aad
loope
cwde
pop
bound
in
loop
xor
or
xor
jnp
mov
adc
mov
pop
scas
imul
fdivr
hlt
jnp
outs
std
or
in
jnp
test
sbb
jne
shl
mov
pop
mov
cwde
xchg
adc
or
movs
or
sub
in
xchg
cmc
pop
mov
test
imul
into
enter
cmp
lods
iret
and
into
es
mov
ds
test
ja
pop
lods
ret
(bad)
retf
cli
mov
dec
(bad)
adc
loope
fcom
dec
jmp
pop
or
add
(bad)
fcmovbe
dec
and
(bad)
pop
lods
add
xor
loopne
nop
or
mov
les
test
popf
add
xchg
dec
sbb
sahf
mov
jg
outs
mov
xchg
mov
jge
mov
mov
cmps
(bad)
sti
inc
mov
loop
sahf
ins
adc
ds
ja
test
xlat
outs
mov
jg
dec
push
pop
repz
daa
std
leave
adc
inc
leave
and
mov
das
imul
movs
and
outs
stc
int
idiv
inc
imul
in
add
and
xor
cmp
mov
lds
xchg
sbb
and
(bad)
stos
sbb
dec
adc
inc
rcl
sub
add
lods
jno
sar
cli
(bad)
cmp
lods
adc
inc
dec
mov
fbstp
cwde
sub
xchg
call
stos
and
mov
lock
retf
dec
or
cld
pop
aam
in
fiadd
sub
jge
stos
inc
jno
mov
cdq
pop
dec
mov
mov
test
shr
push
pop
test
aam
pusha
add
and
pop
fmul
dec
cmp
dec
stos
dec
sbb
into
sub
dec
fbld
lods
adc
cmp
xor
in
fwait
mov
add
cmps
mov
int
(bad)
mov
mov
xchg
lods
dec
shl
jl
jg
dec
arpl
pop
pop
out
cmp
mov
ud1
mov
xchg
cmps
add
out
xlat
outs
jg
or
inc
(bad)
je
xor
pop
or
jge
mov
mov
mov
movs
iret
outs
lods
dec
or
push
sub
scas
stos
jecxz
fidiv
cmp
ss
xlat
dec
cmc
mov
mov
inc
jg
and
repz
inc
mov
and
icebp
scas
sahf
sti
daa
pop
ja
mov
add
loop
enter
or
sbb
mov
inc
mov
cmps
sbb
neg
dec
imul
xchg
aam
mov
inc
mov
fstp
xchg
pop
(bad)
dec
cmp
cmc
pop
inc
adc
mov
adc
stos
das
and
push
sub
lock
push
pusha
lea
pushf
test
xlat
pop
sbb
push
jne
fdivr
mov
push
jne
mov
popf
(bad)
adc
mov
pop
stos
in
repz
ss
dec
sti
shl
mov
cmp
inc
jle
es
dec
cld
div
in
add
jmp
cmps
or
fstp
cmp
mov
xchg
push
xchg
stos
mov
mov
dec
and
fs
jo
sbb
into
xor
mov
pop
inc
pop
or
js
pusha
lahf
aas
int
es
fdivr
es
push
mov
mov
inc
in
(bad)
fidivr
mov
in
push
jl
jge
pop
ins
in
ss
in
fldcw
stc
cmps
dec
or
movs
mov
and
pop
pop
sub
shr
aad
shl
inc
push
pop
sub
mov
(bad)
pop
int
dec
sub
push
jg
mov
scas
aaa
imul
cmps
in
inc
push
repz
sbb
xlat
jo
push
mov
das
mov
(bad)
mov
mov
adc
ss
dec
jecxz
mov
popf
sbb
add
sti
hlt
adc
mov
cmp
fisttp
popa
(bad)
std
enter
dec
outs
sub
adc
adc
mov
cld
push
pop
jl
rcr
js
mov
pop
movs
xchg
push
mov
push
adc
mov
pop
call
xor
xchg
mov
fwait
sahf
xlat
test
cwde
js
mov
adc
stos
fiadd
and
int
cmp
push
xchg
test
mov
ins
pushf
jle
fwait
push
ret
pop
mov
addr16
mov
cmp
inc
imul
xchg
adc
push
out
or
outs
mov
mov
mov
mov
xor
dec
mov
addr16
push
(bad)
fisttp
mov
lods
les
out
ficom
(bad)
fadd
(bad)
jg
mov
mov
push
pop
stos
into
xchg
xchg
lods
ins
outs
imul
loop
ins
fisttp
imul
fldcw
cld
mul
xchg
in
jns
lea
bound
adc
loope
(bad)
mov
mov
iret
jg
jne
outs
ins
test
loopne
scas
int3
and
dec
std
xchg
mov
test
sub
retf
dec
jb
jne
test
mov
jnp
mov
add
sub
add
pop
rcr
mov
push
fisttp
or
jmp
out
dec
(bad)
sbb
pop
pop
lods
inc
inc
fsubr
pop
lock
cmp
xchg
pusha
scas
std
nop
pop
and
push
jg
test
mov
int
adc
xor
push
stos
aam
and
shl
cmp
int
movs
adc
mov
push
loopne
mov
iret
fucomp
mov
mov
outs
inc
(bad)
adc
lds
test
iret
dec
xchg
iret
mov
js
sbb
inc
(bad)
adc
stos
pop
add
lock
jnp
mov
cs
inc
or
mov
lods
bound
gs
mov
imul
addr16
xchg
sub
in
fild
test
cmc
add
or
cwde
mov
lea
push
xchg
mov
pop
ror
fsub
xlat
dec
push
into
mov
push
out
(bad)
dec
popa
test
out
sbb
das
repnz
loop
sar
jecxz
enter
pusha
pop
lds
into
lods
or
xchg
and
jno
(bad)
jbe
xor
sub
jno
int
popa
bound
xchg
dec
out
jne
mov
mov
mov
retf
movs
sti
(bad)
pop
jmp
bt
sbb
lahf
sbb
test
sub
xchg
fst
retf
pop
icebp
and
push
fdiv
pop
(bad)
adc
or
das
test
(bad)
out
fnsave
sub
push
mov
ins
or
and
lahf
test
shr
out
out
mov
nop
and
shl
mov
xchg
inc
xchg
in
pop
xchg
ds
rcr
aad
mov
stc
dec
jnp
mov
aaa
in
jb
ficom
fdivr
iret
sbb
add
and
push
adc
clc
push
jbe
dec
pop
ins
bound
(bad)
mov
leave
je
std
inc
test
mov
pushf
aam
xor
mov
push
(bad)
fnsave
pop
adc
repz
dec
xchg
pop
sar
fwait
mov
dec
jno
adc
in
fdivr
cmp
or
jle
sub
lods
test
cld
lds
push
jmp
leave
inc
mov
rcr
mov
xchg
sbb
call
fsub
fidivr
int
sub
sbb
pushf
aam
mov
dec
(bad)
push
setl
fbld
inc
mov
mov
mov
aad
xor
fucomp
xchg
sbb
mov
ja
mov
aad
call
xchg
(bad)
das
dec
dec
adc
inc
sbb
ret
pushf
xor
out
cmp
dec
mov
neg
pop
xlat
stc
(bad)
mov
dec
test
mov
jns
sbb
data16
sbb
mov
mov
mov
mov
sub
lds
hlt
mov
mov
jmp
lahf
push
pop
jge
jecxz
in
rcl
pop
push
bound
and
jmp
mov
fiadd
dec
sbb
data16
xor
pop
ja
xchg
fbld
imul
cmps
loopne
pusha
fsubr
mov
aad
pop
pop
sub
(bad)
out
(bad)
aam
ds
xor
stc
push
jl
fisttp
jmp
jmp
sahf
cmp
dec
lahf
movs
mov
scas
mov
mul
fucom
pop
or
call
in
ss
or
xor
and
retf
retf
std
cmps
bound
imul
add
ret
ret
rcl
dec
mov
les
mov
add
push
arpl
fld
pop
xor
popf
xor
push
out
lods
inc
mov
pop
push
aaa
add
xchg
(bad)
iret
int3
xor
enter
call
adc
imul
add
add
jl
in
shr
cmp
add
pop
pop
adc
or
les
jp
das
(bad)
jbe
jge
iret
mov
rcl
jge
inc
jge
add
cwde
bound
mov
dec
and
js
xor
cmp
ds
jno
mov
cmps
in
mov
fs
pop
mov
adc
or
and
lock
inc
jmp
xchg
sbb
out
jae
push
jo
int3
jbe
(bad)
inc
ja
(bad)
in
ins
les
mov
leave
adc
push
sahf
xchg
in
pushf
jmp
imul
(bad)
add
xchg
xor
sub
sbb
push
(bad)
jge
mov
or
push
cld
xchg
sub
adc
popa
jmp
dec
das
adc
std
xor
sub
xchg
or
mov
fcompp
adc
mov
int3
(bad)
retf
dec
dec
cmc
add
(bad)
in
mov
arpl
mov
and
sbb
mov
or
test
in
push
pop
mov
mov
es
ficomp
mov
(bad)
in
lock
daa
jl
jnp
pop
inc
jnp
pop
and
pushf
outs
sbb
add
dec
test
ret
retf
fadd
or
rcr
movs
stc
inc
jge
call
je
lds
pop
mov
xchg
add
adc
retf
das
ins
cmp
jle
and
hlt
xchg
xchg
lahf
mov
xor
ror
(bad)
jbe
in
ss
mov
lahf
push
xchg
and
sbb
jns
inc
push
jl
outs
das
sbb
xor
sti
inc
je
jmp
call
push
mov
mov
cmp
mov
mov
mov
mov
in
stc
add
leave
cli
int3
cmps
push
mov
ret
jns
ds
mov
sbb
mov
sbb
or
imul
lods
fmul
aam
jecxz
jecxz
sbb
and
(bad)
or
or
out
leave
in
sahf
inc
xchg
repz
adc
pusha
mov
std
xchg
mov
clc
nop
jno
test
into
jmp
lock
cwde
gs
inc
pop
push
mov
fwait
add
popa
push
xor
jne
mov
je
popa
mov
aas
not
imul
inc
movs
xchg
mov
or
retf
jmp
(bad)
ja
sub
or
aaa
arpl
mov
jmp
popa
pushf
sub
jnp
lea
inc
jmp
jmp
jne
mov
adc
popf
and
and
xchg
xor
mov
jle
or
call
imul
xor
loope
cmp
jecxz
sbb
sub
aam
jb
adc
sbb
fcom
es
cmp
loope
iret
rol
cmps
sbb
rcr
sub
xchg
and
cmp
inc
cmp
popa
add
retf
jno
inc
jmp
rcl
push
cmps
pop
adc
or
loope
cmps
bnd
mov
pop
je
pop
xchg
mov
fs
in
xchg
rcr
push
and
xlat
cdq
sbb
cmps
mov
adc
and
scas
cli
(bad)
in
pop
dec
push
adc
nop
mov
(bad)
push
ins
aam
push
fbld
inc
xor
xor
movs
movs
pop
add
push
inc
push
and
sbb
aaa
int
xor
sub
fwait
retf
jmp
(bad)
fbstp
stos
inc
mov
bound
xchg
out
out
dec
pushf
test
inc
sbb
or
jbe
sub
cmps
add
out
adc
inc
fdivr
dec
sbb
and
loopne
sub
rol
xchg
and
test
inc
fst
and
pop
sbb
pop
xchg
cmps
rcr
arpl
repnz
adc
retf
adc
out
xor
cmp
or
cmp
xor
jnp
mov
jbe
sbb
jnp
icebp
out
push
scas
or
dec
sbb
jmp
adc
cmp
sbb
(bad)
mov
xchg
inc
jl
scas
mov
mov
push
push
clc
mov
nop
cmp
shl
add
add
(bad)
fcom
out
loopne
(bad)
loop
push
inc
nop
in
pop
xor
test
in
stos
fs
inc
inc
jle
pop
jg
push
mov
dec
and
sahf
sbb
pop
inc
cmp
sbb
push
xchg
lds
xor
add
(bad)
lahf
out
stos
pop
add
pop
or
cmp
sub
add
pop
or
pop
add
dec
out
xor
jns
adc
enter
cmp
out
movs
out
pop
push
jb
jae
pop
inc
xor
repnz
imul
and
pop
pop
in
daa
xchg
mov
mov
jne
xchg
sti
ret
mov
mov
sahf
cs
xor
pop
xchg
push
pusha
jl
pushf
jo
(bad)
mov
stos
retf
sbb
ins
test
scas
mov
mov
and
jmp
add
jmp
mov
cmc
and
stc
inc
mov
jg
dec
xor
xor
cwde
ins
ror
int3
inc
jmp
xor
stos
sbb
dec
xor
cmps
xchg
das
test
or
jg
and
test
jg
movs
adc
fadd
or
shl
xchg
push
aam
fisttp
or
inc
adc
sub
ret
cmps
(bad)
mov
push
and
fsubr
icebp
mov
mov
test
push
cmp
xor
jp
sbb
xor
fadd
rol
pusha
pop
push
cmp
inc
pushf
pop
add
jbe
or
jnp
(bad)
leavew
popf
xor
push
cmp
add
push
pop
fs
lods
iret
jb
(bad)
shl
push
scas
test
sub
mov
or
pop
cmp
int
push
(bad)
and
pop
adc
add
sub
cwde
jmp
add
mov
sbb
inc
in
jno
add
mov
dec
cdq
scas
push
xchg
(bad)
cmps
adc
lock
mov
add
int3
mov
pop
push
mov
pop
mov
gs
(bad)
jmp
adc
pushf
call
mov
jbe
fistp
popa
and
xchg
xchg
(bad)
push
int
push
push
sbb
idiv
fnstenv
std
cs
mov
adc
popf
or
and
fwait
pushf
jnp
dec
sti
not
cmc
clc
es
pop
mov
test
clc
jmp
stos
jl
ss
xchg
fadd
dec
aam
retf
add
sub
jb
or
mov
add
xchg
push
ins
pop
ja
add
push
sbb
adc
nop
test
js
loop
xchg
test
(bad)
jp
sbb
ret
ret
xor
out
sbb
adc
and
pop
mov
push
jle
xlat
xchg
arpl
adc
and
mov
nop
pop
pop
cdq
sub
mov
inc
adc
mov
inc
stos
stos
mov
adc
adc
xchg
sbb
bound
jmp
dec
mov
hlt
(bad)
aam
inc
sub
xor
inc
lds
mov
cwde
cld
pusha
jle
xchg
and
inc
mov
or
xor
ins
xor
push
dec
sbb
dec
mov
xor
dec
xor
inc
fidivr
jle
fild
xchg
xchg
mov
test
xor
cmp
jbe
mul
repz
dec
xor
aad
shl
dec
mov
inc
adc
lods
add
sbb
mov
mov
or
cmp
pop
in
in
inc
push
inc
dec
or
xchg
mov
test
pop
jmp
sbb
and
and
mov
stc
mov
in
push
or
dec
pop
test
push
retf
push
shl
push
cwde
fdivr
sbb
fisub
outs
out
movs
cmp
aam
std
mov
push
imul
retf
jle
js
into
xchg
test
dec
lods
cmp
dec
ret
hlt
shr
xchg
push
scas
or
popa
push
imul
or
in
hlt
jmp
es
aam
push
std
or
rol
dec
ins
es
and
mov
retf
xor
cmps
cmp
dec
pop
jmp
jne
or
int
pop
std
pop
cmc
out
dec
add
shl
pop
repz
xchg
xchg
ret
xchg
push
xor
shl
jns
loopne
mov
mov
mov
enter
cmp
jecxz
in
cld
stc
test
enter
push
or
(bad)
movs
mov
mov
stos
scas
ret
jbe
mov
dec
cmp
jo
scas
inc
dec
std
sbb
enter
rcl
ins
dec
sar
rcl
push
ja
js
out
dec
stc
(bad)
jae
lods
jo
in
cmp
cmp
sbb
jmp
sub
dec
es
stc
lock
(bad)
(bad)
gs
mov
rcl
rcr
pop
fbld
js
cmp
xor
imul
or
jecxz
cmp
cld
inc
aam
das
call
(bad)
out
and
and
pop
cmp
std
or
sbb
sahf
jae
dec
jg
in
mov
pop
jge
cmc
cwde
test
std
fwait
jg
fwait
jae
int3
ss
retf
xor
mov
scas
xchg
aad
cmp
dec
xor
xor
pushf
mov
jp
and
mov
ror
repz
dec
push
neg
fs
sub
pop
ss
or
outs
jle
push
lock
xchg
cli
(bad)
(bad)
lock
inc
push
fwait
rcr
sub
cld
fisttp
inc
addr16
inc
sub
dec
outs
push
lods
rol
xor
nop
pop
lea
jge
cmp
daa
jmp
mov
arpl
loopne
cmp
fwait
jle
push
jecxz
scas
cmp
mov
sub
cmp
xor
and
inc
pinsrw
pop
mov
add
pushf
pop
sub
xor
inc
jecxz
fidivr
push
(bad)
sbb
(bad)
sub
(bad)
(bad)
jmp
push
sbb
into
pop
or
scas
aam
inc
arpl
stc
or
retf
mov
jp
jp
push
fcmovnbe
sbb
jl
mov
lods
jb
sbb
in
inc
test
xchg
or
mov
stos
mov
or
jae
hlt
imul
mov
dec
call
xchg
cmp
jmp
pop
dec
shr
xchg
imul
mov
pop
mov
fadd
pop
mov
mov
idiv
aas
in
(bad)
iret
and
imul
in
push
xchg
xchg
mov
scas
std
das
cwde
scas
mov
and
push
sbb
jo
pop
btc
mov
jl
les
and
mov
cmp
add
adc
retf
pop
mov
lock
sub
jecxz
lods
outs
hlt
xor
into
imul
(bad)
out
and
xor
shl
in
pusha
test
sub
stos
mov
(bad)
data16
xchg
add
nop
loop
into
cmp
sbb
addr16
or
leave
dec
and
inc
mov
sbb
push
adc
mov
adc
fnstenv
scas
jge
mov
push
aaa
out
push
retf
out
jb
mov
ret
bound
into
cmp
inc
xchg
sbb
sti
xor
imul
dec
fsub
jne
test
mul
or
add
lds
loope
adc
adc
sbb
add
test
jns
aaa
repnz
inc
cld
inc
in
hlt
mov
pop
dec
inc
jmp
call
shl
jle
retf
add
hlt
pushf
mov
xchg
add
pop
xor
cmp
sar
adc
(bad)
sbb
nop
push
fwait
or
addr16
sub
out
aas
clc
ret
fisttp
mov
mov
pop
sbb
jno
sub
repz
mov
inc
dec
xchg
adc
(bad)
fsubrp
fidivr
xchg
icebp
xchg
sbb
add
mov
xchg
sbb
mov
xchg
cmps
push
dec
outs
sbb
inc
loopne
sub
test
ja
mov
mov
(bad)
sub
pop
dec
loop
ret
push
retf
or
push
add
jnp
jecxz
mov
mov
jno
mov
fmul
lea
jmp
inc
jp
(bad)
icebp
jl
test
std
mov
push
das
jmp
push
ins
call
repnz
mov
data16
push
push
shl
pop
imul
dec
xlat
jno
sub
xchg
mov
mov
dec
mov
jmp
(bad)
aaa
lock
test
sbb
jg
push
sub
jne
(bad)
add
int3
ret
sar
xor
test
test
or
pop
movs
add
xchg
push
and
pop
lods
cmps
push
test
mov
adc
jne
jmp
shl
ins
retf
sti
cdq
cmc
imul
jbe
popa
dec
in
sub
inc
js
cld
mov
jmp
sbb
mov
bound
(bad)
stos
sbb
scas
inc
adc
call
(bad)
in
loopne
shr
push
pop
div
cld
sbb
sbb
popa
out
push
lods
push
cmp
cdq
jno
inc
jg
inc
and
in
repnz
pop
pop
cmp
ss
pusha
(bad)
rcl
lods
add
clc
loopne
stc
dec
nop
aam
cmp
add
push
mov
arpl
add
sub
retf
outs
xchg
or
xlat
dec
fwait
(bad)
aad
popf
dec
mov
inc
add
or
ins
in
inc
test
ret
push
outs
cdq
mov
jmp
add
fist
mov
mov
adc
jmp
pop
push
mov
push
sbb
sbb
aas
(bad)
movs
push
cli
and
adc
or
fbld
xchg
fucomi
jmp
loopne
shl
sub
push
ss
mov
dec
adc
inc
lahf
out
es
sub
add
xchg
or
xchg
mov
xlat
mov
and
into
das
cld
aas
push
sbb
rcl
sbb
inc
int3
retf
mov
sub
imul
add
cmp
dec
(bad)
xlat
fisttp
lds
int3
sub
sub
dec
hlt
sbb
sub
out
adc
or
adc
sbb
cwde
not
les
mov
jg
mov
pop
ss
mov
push
and
push
pop
inc
jle
lea
mov
imul
jo
cld
push
pop
cmp
cmp
ret
(bad)
icebp
test
scas
daa
push
sahf
adc
lods
into
test
push
dec
push
adc
ja
add
pop
dec
jb
pop
xchg
retf
mov
add
std
cmp
out
mov
(bad)
nop
pop
xchg
outs
push
inc
push
xchg
frstor
fisub
(bad)
comiss
xchg
add
xchg
adc
jle
arpl
stos
div
mov
ror
adc
xchg
jl
fwait
xlat
iret
movs
or
jns
or
(bad)
nop
mov
and
(bad)
jnp
mov
mov
lods
sub
test
xor
mov
xor
aas
cmp
xchg
imul
add
add
xchg
aam
std
jmp
das
xchg
das
xchg
mov
mov
rcl
out
popf
xor
inc
xchg
adc
and
outs
mov
bound
add
cmp
adc
fsubr
jbe
(bad)
call
jno
dec
mov
adc
mov
sar
cmp
xchg
jmp
or
sub
loop
call
lods
gs
aam
fnstcw
mov
out
ror
pop
mov
pop
sub
loope
sahf
in
cmp
and
cmp
hlt
jb
scas
xchg
ss
dec
push
or
cmp
cmp
addr16
retf
jmp
(bad)
jmp
or
pop
(bad)
out
cmp
push
gs
push
enter
cs
sub
push
xor
out
push
dec
xlat
push
ror
inc
dec
sbb
mov
and
or
rcl
enter
rcl
mov
imul
push
movs
xor
xor
or
mov
jo
inc
add
dec
mov
push
xchg
leave
leave
loop
in
sti
inc
cld
jp
mov
scas
cmp
fmulp
xchg
or
add
mov
sti
pop
add
stc
push
popf
add
in
cs
in
dec
pop
out
xchg
push
sub
jl
mov
fdivr
popa
sub
mov
sub
add
imul
gs
adc
dec
imul
into
dec
outs
jmp
ficomp
or
jge
rcr
imul
pop
mov
into
retf
sar
test
movs
sub
jp
xchg
xor
cwde
jmp
out
sub
loopne
push
pop
mov
mul
mov
push
ins
das
dec
repnz
test
int
cmp
test
fidiv
lea
data16
mov
adc
cmp
div
popf
xchg
pop
pop
sub
ss
in
or
sahf
pop
addr16
pop
es
jae
scas
push
adc
jns
pop
push
enter
or
push
inc
rcr
lea
cmps
xlat
add
xchg
icebp
xchg
dec
shr
dec
inc
xchg
dec
cld
bnd
int3
fdiv
sbb
or
lahf
movs
mov
sub
push
dec
adc
pop
xor
je
sub
aad
xlat
or
push
idiv
not
cli
inc
rol
fld
fisttp
daa
xchg
in
(bad)
cld
push
push
mov
add
and
mov
pop
shl
sub
out
stos
retf
das
stos
dec
ja
aaa
pushf
out
pusha
imul
jb
add
icebp
and
mov
out
mov
loopne
lahf
(bad)
ja
daa
inc
and
cmps
cmc
gs
mov
push
dec
iret
pushf
sbb
sbb
lods
push
movs
inc
retf
clc
xor
push
mov
lea
ror
das
mov
or
inc
dec
jns
scas
sub
lea
adc
adc
and
pop
sub
xchg
lea
jp
into
mov
adc
push
fist
ss
push
mov
mov
xchg
jo
aad
mov
mov
daa
aas
push
cmps
or
add
sar
push
rcr
inc
and
(bad)
shl
fs
ret
fist
mov
and
xor
jb
imul
or
and
enter
cmc
ins
loope
mov
iret
mov
inc
adc
leave
mov
imul
out
pop
push
jmp
into
inc
xchg
loop
xchg
les
cs
loop
mov
mov
push
data16
je
repnz
pop
int
pop
lods
clc
xor
dec
scas
in
(bad)
iret
test
sub
mov
aad
pop
ffree
in
fiadd
dec
sub
movs
or
xor
clc
inc
ja
pop
xchg
mov
fidivr
mov
push
std
cmp
out
icebp
(bad)
js
jl
out
jne
dec
dec
daa
cmp
inc
jle
aaa
cdq
and
dec
repz
scas
enter
hlt
mov
xor
(bad)
jns
sub
jns
mov
test
dec
add
in
pop
or
or
imul
pop
pop
add
add
xchg
inc
or
mov
xor
pop
cmc
loopne
and
xor
and
in
mov
int3
sahf
dec
sbb
inc
xor
pop
retf
sub
push
iret
imul
je
cmp
call
in
out
pusha
(bad)
cmps
and
call
bound
shrd
mov
stc
addr16
test
xchg
pop
sbb
inc
push
out
mov
in
mov
push
mov
jno
sub
nop
ret
jo
push
and
jge
pop
push
push
xor
mov
push
sbb
jp
(bad)
xor
mov
aam
aam
int3
mov
jbe
pushf
bound
jg
ss
push
ficomp
xchg
call
les
add
bound
test
stc
cmp
mov
dec
jge
aad
in
gs
out
or
jne
adc
hlt
adc
popa
enter
rol
mov
jno
sub
pxor
aad
sub
mov
cmp
shl
or
(bad)
push
outs
adc
lds
adc
imul
sub
jnp
daa
jnp
sbb
mov
jmp
(bad)
xor
adc
mov
jp
mov
cmp
mov
es
jbe
sbb
sbb
xor
(bad)
xor
push
sbb
and
cmp
jl
hlt
outs
repz
dec
popf
xchg
sub
pop
rcl
jg
rcl
mov
int3
aas
jp
cmp
mov
pushf
lods
and
les
cmp
xchg
test
cmp
or
push
sbb
xor
je
aad
pop
mov
mov
mov
imul
mov
and
stc
inc
inc
mov
jge
icebp
movzx
pop
mov
mov
mov
ror
fistp
jmp
mov
mov
loope
lds
fmul
idiv
clc
ds
ds
mov
jge
and
in
scas
leave
push
enter
inc
outs
mov
(bad)
pop
and
and
das
data16
pop
(bad)
mov
daa
xor
pop
(bad)
sbb
add
inc
or
lods
test
adc
pop
push
mov
mov
dec
jae
xchg
xchg
xor
and
mov
(bad)
or
les
mov
je
shr
cmp
fisubr
aas
lahf
ss
(bad)
bound
sbb
retf
ret
cmp
(bad)
add
fs
fstp
pop
pop
(bad)
mov
loopne
mov
and
es
pop
mov
sbb
dec
mov
inc
retf
nop
xlat
and
aad
ja
inc
adc
jl
push
rcr
mov
dec
(bad)
sar
(bad)
sar
(bad)
call
mov
add
mov
ja
gs
jmp
imul
clc
cwde
ins
mov
push
lods
jl
xor
xchg
les
push
js
lea
xchg
mov
jb
imul
push
bound
mov
fnsave
das
les
or
fisubr
data16
pop
sub
mov
aaa
jb
pop
scas
inc
psllq
jo
mov
jl
int
psubw
les
jmp
rep
mov
mov
(bad)
pop
and
and
ffree
jb
shl
je
and
sbb
push
(bad)
sti
cmps
or
xor
dec
mov
(bad)
shl
popa
add
retf
rcl
aaa
shl
(bad)
push
jae
jns
jge
ror
call
jno
xchg
fwait
dec
cmp
inc
mov
sub
mov
mov
mov
fst
movs
test
mov
jg
mov
ss
les
ja
xor
or
scas
sub
ret
xor
xchg
(bad)
cmp
mov
inc
rcr
imul
or
dec
ret
scas
fcomp
push
pop
jmp
mov
sbb
shl
mov
int3
(bad)
(bad)
stc
sbb
cdq
ror
ficom
xlat
cmp
stc
outs
daa
push
sub
outs
cdq
pop
rol
call
or
sub
addr16
mov
iret
xor
mov
clc
mov
mov
in
ss
lods
adc
lods
add
jo
int
inc
retf
adc
shl
fstp
stos
jmp
mov
das
inc
and
push
mov
shl
adc
mov
pop
out
push
cmp
scas
xor
mov
cli
pop
xor
fs
lock
(bad)
loope
push
lods
pop
xchg
inc
add
mul
pop
scas
adc
xor
mov
out
lods
mov
add
(bad)
fbstp
jbe
mov
or
fld
mov
adc
mov
(bad)
fcmove
push
cs
inc
push
enter
pop
xchg
jmp
adc
dec
adc
jb
add
or
int3
pop
xchg
arpl
pop
cdq
inc
stos
mov
ins
cmps
addr16
pop
stos
out
pop
xchg
std
xor
ror
pop
push
arpl
(bad)
xchg
int3
(bad)
into
mov
cli
xor
fisub
inc
xchg
imul
pop
mov
adc
inc
inc
test
jno
push
mov
xor
mov
fucomp
add
les
dec
or
xchg
mov
add
mov
add
outs
add
jbe
mov
adc
fdiv
scas
out
or
adc
xchg
sbb
push
retf
shl
jl
clc
popf
outs
or
cmps
or
jns
add
mov
add
call
arpl
jbe
inc
(bad)
hlt
mov
pop
ins
push
(bad)
mov
push
jne
ds
jl
(bad)
cld
xor
ror
fs
or
idiv
inc
or
outs
jmp
and
scas
jnp
int3
add
add
aam
xor
jge
jecxz
push
pop
sub
pushf
pop
pop
add
xlat
rol
and
test
add
xchg
xchg
arpl
(bad)
cmps
pusha
cwde
dec
rcl
mov
fbld
mov
dec
push
push
or
retf
clc
ret
sbb
inc
bound
push
push
and
mov
xchg
push
out
fst
fild
rcr
js
aaa
ret
ror
mov
test
push
icebp
and
mov
add
xchg
out
cmp
or
push
(bad)
push
mov
call
bnd
fwait
daa
clc
sbb
cmp
add
int
imul
inc
imul
dec
sub
fnstsw
pop
and
loop
pop
loop
inc
push
or
fimul
xlat
cmp
cmps
xor
neg
sbb
in
mov
add
jns
inc
push
xchg
xchg
jbe
and
scas
jp
test
into
retf
lds
outs
mov
shl
jecxz
nop
popf
or
cmp
jmp
les
xchg
fcompp
pop
arpl
(bad)
stc
push
mov
vfrczsd
xlat
iret
pop
sti
jnp
xchg
retf
out
mov
or
sbb
inc
outs
mov
add
ret
aaa
push
inc
xchg
lahf
xchg
ret
loopne
push
imul
pop
sti
out
outs
push
clc
retf
loope
scas
sbb
loop
mov
jecxz
retf
xchg
test
pusha
mov
adc
out
call
xchg
mov
(bad)
or
aam
test
sbb
mov
push
pop
lea
(bad)
xchg
mov
arpl
imul
ds
jns
(bad)
and
push
xchg
mov
hlt
out
mov
and
xchg
and
jns
sub
pop
adc
gs
gs
fimul
jle
mov
inc
adc
xor
sbb
sbb
(bad)
std
idiv
ins
push
repnz
retf
sbb
jns
adc
(bad)
stos
cmps
mov
cmp
loopne
sbb
sub
sar
jecxz
int
push
xchg
iret
and
stos
lock
inc
(bad)
mov
and
or
stos
push
sub
jbe
cmps
add
ds
jae
or
add
jmp
sbb
sar
popa
ss
shl
call
mov
fwait
ins
fwait
clc
push
pop
push
fldenv
ret
lock
cwde
push
pop
retf
cmp
mov
les
out
lahf
jno
iret
stos
(bad)
(bad)
and
jae
std
ret
jl
xchg
pop
ror
rcl
jge
icebp
push
stos
sub
pop
daa
mov
jo
(bad)
xor
push
leave
rcl
ss
rcl
push
fwait
sub
add
add
ror
in
xor
lods
in
arpl
dec
stos
mov
sub
test
lea
out
add
arpl
mov
int3
movs
adc
jl
mov
push
pop
int
hlt
cld
jmp
and
xchg
aam
and
int3
and
xchg
pop
xchg
push
cwde
test
mov
adc
(bad)
(bad)
mov
push
dec
jmp
xchg
and
and
sub
push
cwde
aaa
sub
ret
pushf
inc
xlat
sub
ds
test
mov
or
enter
ins
shr
in
lock
(bad)
fisttp
xchg
es
or
int
gs
pop
fidivr
jne
data16
jnp
jp
mov
xchg
adc
cdq
xchg
and
inc
jmp
bound
repz
bound
mov
je
adc
fild
mov
bound
push
mov
xchg
pop
xchg
mov
jbe
or
loopne
mov
cmp
adc
and
xchg
dec
mov
jae
ja
push
fcom
loopne
data16
cmp
mov
jl
scas
mov
add
fwait
xchg
outs
shl
or
nop
sub
js
xchg
push
outs
iret
pop
(bad)
mov
adc
(bad)
dec
ret
xchg
add
fadd
movs
add
pop
retf
stos
mov
mov
mov
cmp
mov
imul
mov
lods
enter
add
pop
mov
xchg
pop
clc
pusha
pop
jle
dec
xchg
pop
mov
js
xchg
int
fisub
test
inc
out
lds
test
sbb
cmps
and
in
cmp
test
dec
out
imul
dec
icebp
fidivr
test
push
jmp
ret
in
cwde
lds
retf
mov
sahf
js
hlt
aas
nop
bnd
les
loop
pop
push
sbb
inc
int3
xchg
pushf
loopne
xor
jmp
push
dec
in
pop
jmp
call
jo
inc
syscall
inc
mov
inc
jg
lock
stos
aaa
cmp
xchg
fnstenv
fcom
les
lods
jno
aas
xor
inc
ret
ret
mov
mov
retf
loopne
fwait
or
test
mov
inc
xor
pop
out
mov
int3
cmp
pop
mov
sbb
enter
into
lods
pusha
push
lahf
rol
jno
daa
cmp
pushf
xchg
cdq
imul
cmp
cld
outs
push
sbb
gs
pop
sub
loop
jnp
mov
(bad)
fist
mov
ror
mov
inc
sti
(bad)
in
pop
jmp
mov
pop
in
jbe
idiv
scas
nop
pop
cmp
or
cmps
mov
test
stc
adc
popa
dec
xor
sbb
jmp
adc
xor
or
dec
inc
or
mov
adc
dec
and
or
xor
fistp
cmp
jg
fisub
and
jbe
in
into
sbb
popf
dec
add
(bad)
ja
jecxz
mov
jne
fnstcw
or
popa
push
icebp
mov
aam
jle
mov
push
xchg
cmp
push
and
push
and
cli
inc
imul
mov
in
mov
cmp
test
out
or
xchg
cli
ins
(bad)
out
(bad)
outs
movs
cmp
mov
dec
adc
jbe
dec
out
ret
hlt
adc
xchg
mov
sbb
or
int
push
and
mov
mov
dec
movs
ficomp
sbb
and
or
jg
loop
pop
fwait
mov
lahf
enter
shr
mov
xor
push
or
cmp
or
(bad)
pusha
dec
sti
pop
cmp
xchg
(bad)
xor
in
out
dec
retf
inc
jnp
xor
sbb
xor
aaa
in
loope
mov
loopne
jecxz
aaa
cmp
cmc
retf
jbe
jb
jo
enter
mov
push
shl
pop
pop
inc
sub
fsubr
fldcw
push
movs
and
cmp
sbb
xchg
out
lahf
into
stc
xchg
das
and
xor
(bad)
mov
std
xchg
ins
and
push
jb
cmp
sbb
push
ds
add
mov
mov
add
sub
stos
rcl
push
int3
pop
xchg
es
mov
jg
ret
fstp
push
out
add
in
sub
cld
movs
inc
and
cwde
add
in
out
sub
hlt
mov
push
add
or
ror
or
mov
and
dec
je
sbb
and
mov
mov
jge
adc
adc
pop
and
mov
in
in
sbb
pop
xor
sub
mov
data16
fist
clc
out
sub
aad
fist
mov
push
outs
jmp
iret
stos
addr16
cmps
into
xor
pop
retf
and
fdiv
or
dec
adc
xchg
dec
ins
and
gs
sbb
in
stos
mov
cmp
push
mov
push
test
and
ins
push
push
sti
sbb
call
shr
pop
push
fistp
add
push
in
fmul
pop
rol
das
scas
inc
fimul
pop
loopne
jl
fsub
leave
cmp
adc
jb
and
mov
test
xor
inc
movs
dec
lock
add
scas
add
ja
and
test
push
pop
push
lahf
aaa
inc
cli
imul
xor
arpl
outs
sahf
gs
imul
sub
adc
das
lods
leave
cmp
or
lods
test
push
test
sbb
or
sbb
cmc
jmp
mov
stos
out
sub
add
lods
dec
call
push
mov
or
jle
jnp
xlat
shr
les
cli
or
mov
sub
ret
shl
add
loop
out
xor
mov
retf
mov
call
inc
rol
scas
mov
into
sub
les
jl
add
shl
popf
std
mov
push
call
jle
arpl
dec
in
test
jb
and
and
xchg
lea
retf
inc
jl
popf
lods
and
mov
test
push
call
cli
sub
dec
sub
cmp
xchg
adc
push
jle
fistp
retf
cwde
cmp
repz
fcmovnbe
stos
retf
mov
add
add
dec
dec
inc
test
push
push
inc
retf
enter
xchg
scas
push
clc
jb
cmp
inc
outs
xchg
adc
sub
jmp
dec
sbb
stos
dec
jae
push
test
shr
mov
mov
mov
movs
mov
out
jmp
push
pop
adc
mov
cs
xchg
push
or
sahf
jae
sti
cmp
jbe
mov
push
mov
shl
pop
(bad)
fisttp
sbb
hlt
adc
clc
pop
mov
inc
lds
sbb
rcl
inc
mov
push
(bad)
jecxz
iret
jmp
pop
pop
cmp
pop
push
adc
dec
ins
jle
call
aas
sahf
or
scas
add
(bad)
sbb
or
cs
jnp
push
or
lods
xchg
push
frstor
mov
aam
mov
push
cli
sbb
mov
dec
out
fisttp
sub
jmp
xchg
adc
ins
in
aad
cmp
icebp
cmps
mov
outs
pop
inc
loope
idiv
pop
xor
xchg
inc
cmp
mov
shl
inc
mov
pop
nop
push
xlat
lods
hlt
sbb
xchg
mov
iret
sub
xor
xchg
cmp
call
adc
mov
and
inc
ret
mov
je
mov
ror
ins
test
je
xor
aad
dec
ins
sub
or
lods
jno
adc
inc
(bad)
fimul
pop
xor
sbb
retf
sbb
pop
iret
mov
cs
push
pop
retf
mov
or
leave
jns
pop
in
(bad)
lock
inc
dec
and
sar
or
aad
sbb
adc
inc
and
into
sar
lock
dec
dec
cmp
jle
adc
xor
movs
and
neg
push
or
mov
ins
mov
push
ss
and
inc
adc
and
enter
fnsave
movs
fucomip
shl
mov
mov
mov
dec
xchg
push
imul
inc
call
xor
push
lock
ret
sti
sub
cdq
inc
jae
enter
lock
sbb
dec
push
sti
dec
(bad)
fidivr
jmp
and
mov
hlt
or
xchg
adc
mov
mov
aam
fnstcw
xchg
jb
xchg
not
push
and
mov
data16
popf
cld
sub
jae
test
(bad)
mov
outs
jp
imul
gs
mov
cmp
inc
dec
push
pop
and
inc
or
rcl
and
add
cmp
mov
ds
mov
or
adc
ss
dec
dec
fidiv
pop
fdiv
out
or
mov
sub
hlt
ins
jg
jge
(bad)
push
jp
(bad)
and
lock
jl
cmp
jle
arpl
xchg
xchg
sbb
clc
mov
xor
mov
pop
cwde
cmp
enter
fwait
push
mov
call
stos
adc
xchg
in
and
pop
xchg
jne
popa
and
cdq
pop
or
shr
push
jg
jns
or
mov
xchg
adc
and
inc
cdq
hlt
add
sbb
add
mov
sysret
xor
stos
ja
dec
sub
out
fdivr
push
add
xor
push
sub
sub
pop
push
rcr
push
stos
int
aaa
mov
test
mov
mov
sbb
iret
push
dec
cmp
sbb
lds
cmp
call
(bad)
or
push
mov
neg
adc
sub
lods
and
(bad)
and
adc
dec
jle
mov
loop
pop
jae
pop
retf
fiadd
lea
jmp
xor
add
adc
in
push
xor
add
jge
ss
xchg
pop
je
mov
adc
jp
jo
inc
and
out
movs
mov
xor
paddw
jne
push
xchg
pop
in
xor
fidiv
cmp
sbb
cmc
in
xor
ret
fs
push
fwait
adc
push
jg
pop
add
mov
lods
popa
jae
sar
pop
imul
cmp
in
inc
(bad)
add
dec
adc
inc
clc
xor
(bad)
adc
mul
fs
xor
scas
or
lods
stc
mov
push
mov
add
aas
popa
mov
push
ret
loope
repnz
stos
adc
xor
pop
pop
inc
ja
es
xchg
sti
add
jns
not
xor
add
lods
xor
je
sub
push
adc
and
mov
out
push
pop
(bad)
pop
xor
cmps
jmp
and
ins
ret
xor
add
mov
pop
lea
mov
or
xchg
push
inc
xchg
jg
int3
popf
mov
and
jns
cmp
imul
inc
mov
repnz
jg
mov
jle
push
mov
(bad)
fdivr
fbld
cmp
mov
jecxz
loop
ret
ret
arpl
and
xor
jne
lods
mov
cmp
pop
lea
(bad)
pop
cmp
fdiv
push
inc
cmp
loopne
mov
aaa
loop
or
inc
js
retf
ins
ret
call
xchg
adc
push
arpl
data16
mov
neg
out
xchg
xchg
add
or
push
sub
xor
or
(bad)
(bad)
in
dec
mov
sar
in
stos
mov
mov
lds
or
les
mov
inc
(bad)
retf
rol
jmp
arpl
lods
pop
xchg
cmp
imul
push
fsub
dec
sbb
neg
jl
sub
adc
ins
sub
movs
cmp
inc
lds
pusha
add
cmp
(bad)
les
push
cmp
cmps
mov
in
adc
push
sub
mov
fadd
pop
inc
sub
dec
fdiv
sbb
xlat
push
sti
(bad)
push
loopne
sbb
les
mov
adc
daa
in
xchg
inc
xor
mov
adc
cdq
stos
dec
lods
shr
(bad)
mov
pop
add
mov
retf
jne
mov
push
repnz
jb
mov
ds
(bad)
mov
and
ins
cs
cmps
outs
mov
fst
and
icebp
fcmovnb
call
inc
mov
ror
cli
dec
stos
xchg
cs
outs
cli
sahf
call
xor
sbb
push
pushf
inc
out
int
fadd
xchg
mov
lahf
pop
inc
adc
push
call
pushf
push
jg
inc
idiv
inc
popf
mov
mov
mov
or
jne
inc
push
inc
imul
cmp
mov
movs
fucom
inc
fiadd
mov
and
cli
adc
push
cwde
mov
sbb
retf
push
jns
pop
xor
test
or
ret
push
jp
out
push
jge
xor
mov
adc
add
and
sub
pop
pop
inc
push
ror
rol
ret
jle
in
pop
ret
jmp
ror
and
add
dec
or
and
aas
xchg
push
popa
mov
and
xchg
cmps
push
push
or
enter
call
add
aaa
rol
dec
pop
cmps
sub
lods
fadd
retf
dec
mov
or
fs
adc
xor
repz
out
stos
pop
mov
jae
jmp
push
inc
imul
fwait
not
iret
xchg
out
(bad)
cdq
cmc
(bad)
adc
xchg
out
and
push
out
jae
out
iret
arpl
adc
daa
ds
sub
xchg
mov
mov
add
leave
push
cmps
fsub
aaa
scas
test
adc
adc
repz
add
sbb
inc
repnz
popa
inc
adc
popf
xchg
sub
ja
(bad)
dec
pop
and
test
adc
lock
and
dec
push
lahf
mov
scas
dec
fidiv
(bad)
jne
mov
call
mov
scas
pop
fnstcw
sbb
pusha
jp
(bad)
loopne
cwde
xor
(bad)
in
mov
xor
sub
push
push
mov
stos
jecxz
ja
stc
repnz
or
or
jp
inc
bound
aad
cmp
inc
test
movq
sbb
aas
add
jecxz
xchg
xor
cmp
pusha
enter
sbb
mov
enter
frstor
push
rcr
pop
pop
jp
jbe
test
push
daa
mov
xchg
mov
aad
(bad)
pusha
jnp
mov
mov
mov
dec
enter
mov
retf
(bad)
and
push
arpl
aam
test
cmp
ss
lods
retf
and
fiadd
adc
or
xchg
cdq
push
(bad)
sub
jmp
xor
push
nop
std
adc
icebp
popf
cs
cwde
enter
icebp
idiv
iret
pop
cdq
xchg
push
repz
sti
lds
daa
dec
mov
das
popa
inc
cmp
xor
sub
sbb
jmp
mov
sub
mov
mov
cmc
and
imul
dec
add
or
ins
ret
mov
iret
pop
pop
test
sub
icebp
inc
add
cmp
jbe
popf
pop
ins
(bad)
movs
sub
jmp
sar
cmp
stos
xor
pop
aad
loope
inc
pop
and
call
cmp
test
adc
stc
mov
or
sbb
dec
aaa
sbb
hlt
(bad)
push
mov
adc
scas
int3
xchg
(bad)
and
fwait
push
jge
cli
mov
jae
pusha
xor
adc
pop
pop
jle
sbb
ja
sub
cli
adc
dec
adc
cli
out
xor
(bad)
and
js
add
sub
xor
xchg
push
in
(bad)
pushf
jg
ins
mov
jle
pop
popw
add
jecxz
pop
jbe
cmps
loopne
imul
ret
lods
stos
jp
rcl
mov
leave
dec
fild
call
lahf
das
jae
xor
push
stos
mov
add
adc
jmp
push
pop
mov
and
or
fstp
cmp
out
push
jns
ins
or
enter
cmp
or
sbb
out
xchg
in
repnz
add
gs
or
in
mov
push
inc
mov
jmp
std
adc
fistp
inc
jmp
(bad)
out
lods
adc
inc
sbb
cli
mov
mov
push
xor
es
pusha
dec
add
mov
addr16
sub
data16
push
pushf
fs
cmp
das
(bad)
movs
cmps
repz
inc
jle
push
gs
pop
retf
xchg
adc
pop
stc
outs
movs
repz
sub
ins
cmp
mov
mov
sub
inc
xor
data16
mov
ret
jb
mov
int
jno
jns
sub
cmp
loopne
ror
add
cmp
or
jae
outs
add
and
mov
dec
(bad)
out
sub
aad
pop
rcl
test
mov
je
xor
inc
lods
mov
fucomp
aad
dec
cs
rcr
push
jb
aas
add
daa
fs
dec
add
push
pushf
test
push
jg
dec
outs
daa
jmp
adc
sahf
pop
mov
lock
in
mov
int
mov
lahf
pop
cdq
les
push
cmps
gs
repz
imul
and
adc
sti
adc
popa
jge
push
arpl
ja
retf
and
ficomp
or
or
jno
movs
adc
imul
(bad)
(bad)
pop
sub
dec
inc
or
pop
sub
ins
mov
jmp
pop
push
mov
mov
bound
shr
add
mov
daa
lock
jmp
test
in
fistp
lea
sub
dec
test
movs
out
icebp
and
and
(bad)
jns
lods
push
je
sti
movs
das
xor
lock
push
not
mov
loop
xchg
clc
aam
cmp
dec
xchg
inc
pop
(bad)
fisub
sahf
sbb
dec
in
lds
adc
mov
push
jmp
aad
test
sar
fwait
(bad)
cmp
fadd
inc
retf
push
lock
mov
push
pop
popa
stc
and
test
adc
test
test
add
and
sub
xchg
stc
mov
(bad)
push
callw
pop
and
push
mov
or
lock
jecxz
or
mov
dec
adc
xchg
dec
push
adc
aam
mov
jg
mov
std
fisubr
mov
out
lea
mov
mov
gs
test
mov
xor
movs
rol
push
jle
mov
push
mov
outs
(bad)
pop
repnz
js
or
push
push
add
out
cmp
add
rep
push
repz
xchg
mov
aaa
mov
daa
scas
pop
xchg
daa
fwait
shl
xor
iret
out
lods
lock
mov
pop
cmp
into
outs
es
int3
fwait
mov
shl
xlat
mov
ins
jns
lea
out
or
cmp
mov
add
mov
mov
int
add
jp
int3
cwde
xchg
inc
add
mov
ds
push
inc
pop
rol
iret
pop
std
mov
add
loopne
call
lahf
fwait
mov
lahf
or
rcl
inc
icebp
add
fbld
lea
cmps
popa
fxch
mov
inc
sbb
in
sub
outs
lock
inc
cli
pop
dec
jl
aam
sbb
nop
dec
xor
jmp
mov
lods
sbb
sub
mov
jmp
mov
mul
or
pop
repz
neg
neg
mov
mov
out
in
push
inc
std
xor
std
movs
dec
arpl
loope
pop
adc
lods
(bad)
rcr
out
push
mov
xchg
push
(bad)
int
jns
jnp
outs
out
mov
sub
mov
mov
cmp
adc
jae
std
out
add
mov
cs
test
cli
jle
jmp
push
repz
jb
push
push
mov
ins
mul
dec
das
clc
jecxz
mov
xor
out
jmp
jge
fcmovu
xor
cs
jecxz
dec
ins
jnp
add
scas
or
leave
mov
pusha
ja
rol
push
mov
inc
pop
adc
mov
je
mov
add
inc
mov
out
(bad)
xchg
push
ret
mov
adc
sbb
mov
xlat
imul
sub
inc
sub
add
in
cmp
adc
leave
addr16
sbb
sti
ss
jbe
jmp
pop
sbb
fadd
mov
dec
jbe
fist
push
int
in
rcr
retf
jnp
xchg
cmp
sar
xor
mov
xchg
aad
fcomp
rcr
pop
push
call
cs
addr16
pop
adc
arpl
std
cmp
test
icebp
or
sbb
stos
sub
sbb
outs
dec
fist
lahf
addr16
(bad)
rcr
cmp
sub
xchg
mov
xchg
pop
jl
mov
(bad)
and
shr
or
(bad)
xor
test
lds
iret
sbb
dec
jne
mov
aad
cmp
dec
or
push
mov
call
pop
or
sar
cvtps2pi
(bad)
pop
inc
nop
mov
ins
shl
sub
jle
pop
and
inc
outs
and
dec
sub
mov
and
pop
mov
pop
and
mov
je
push
mov
and
mov
cdq
rcl
adc
(bad)
xor
push
inc
dec
inc
ja
fidiv
xchg
add
and
cmps
sar
pop
fiadd
mov
jmp
jp
sahf
and
fidivr
dec
push
sbb
rcr
std
sub
bound
mov
sbb
movs
mov
psubusb
inc
xchg
fistp
mov
ret
add
jl
pop
addr16
rol
xchg
sbb
and
push
pop
aaa
in
das
not
(bad)
fs
dec
jnp
xrelease
xlat
dec
fstp
imul
pop
jns
aaa
es
mov
lock
(bad)
xlat
out
outs
aas
mov
out
fsubr
mov
jle
fwait
and
adc
sub
mov
sub
add
mov
repz
fisttp
mov
mov
dec
mov
aam
jae
mov
xchg
ins
test
push
cwde
popf
int3
repnz
mov
call
fstp
adc
int3
div
mov
mov
inc
inc
test
jg
stos
dec
jg
jo
sub
pusha
sbb
xor
xchg
pop
neg
xchg
xor
repz
xchg
(bad)
pop
pushf
mov
outs
sbb
in
xor
arpl
adc
or
fimul
and
in
mov
pop
aam
mov
fbld
rol
lods
movs
mov
addr16
mov
push
lods
cdq
inc
data16
(bad)
out
cld
dec
test
fisubr
pop
mov
inc
cs
(bad)
les
adc
and
aad
icebp
aaa
retf
shr
mov
or
mov
jmp
dec
rcr
ss
xchg
sbb
neg
push
loopne
fimul
lds
pop
cmps
jbe
xchg
pop
movs
mov
imul
retf
inc
mov
sub
sub
or
sub
xchg
je
xchg
es
pushf
dec
data16
adc
in
cli
cmps
add
cmps
fld
sub
lods
pop
mov
mov
ins
loop
xchg
mov
push
rcr
and
mov
imul
das
jb
cmps
jge
pop
lahf
fwait
out
push
mov
icebp
out
jle
push
pop
adc
outs
push
dec
jmp
jmp
jg
sub
call
push
sar
inc
leave
sbb
or
adc
push
das
jno
repz
fiadd
dec
cs
sbb
sub
jae
pop
and
(bad)
repz
sbb
retf
data16
not
jnp
adc
add
xor
push
cs
mov
or
dec
mov
mov
xchg
xchg
xchg
mov
add
jo
clc
add
addr16
cmps
sbb
dec
pusha
aad
loop
js
lahf
xchg
lods
push
jnp
push
fs
aam
mov
mov
cmp
xor
in
cmp
mov
pop
and
pop
outs
and
xchg
xchg
jno
cmp
dec
movs
mov
mov
mov
mov
push
xlat
(bad)
call
retf
imul
imul
fdiv
iret
cli
add
dec
add
aam
cwde
jp
call
addr16
pop
add
aam
addr16
inc
int3
rcl
mov
sub
in
dec
jns
sti
movs
cmp
mov
or
loope
adc
out
in
push
fisubr
or
idiv
adc
jge
mov
popf
jge
cdq
push
adc
inc
sub
adc
bound
push
or
aad
ror
sbb
cmp
leave
jno
or
out
or
nop
mov
xor
jle
out
mov
aas
(bad)
jp
sahf
mov
dec
movs
xchg
rcl
mov
xor
mov
lahf
dec
jmp
jl
or
(bad)
cmp
jnp
ret
inc
out
push
cmc
adc
add
jns
pop
push
pop
(bad)
rcr
mov
std
repz
loopne
popa
nop
and
mov
jecxz
addr16
add
push
int3
mov
and
loopne
dec
adc
jecxz
(bad)
cmp
push
mov
or
xchg
ja
add
aas
push
or
mov
mul
out
shl
repnz
dec
xor
ins
xor
pop
sub
or
(bad)
(bad)
adc
jb
xor
push
pop
in
imul
push
push
lods
inc
mov
nop
jmp
mov
es
loope
dec
inc
in
dec
call
call
mov
lds
and
daa
jg
imul
js
adc
or
jne
cs
or
xor
neg
inc
push
aas
mov
out
dec
dec
mov
inc
jns
cmps
mov
iret
je
sub
ror
fnstcw
sbb
and
jb
arpl
je
pop
lahf
retf
pop
in
sahf
out
ss
xchg
fnstenv
pcmpeqb
push
inc
enter
fwait
lods
into
sub
pop
jae
js
and
es
je
out
nop
adc
fadd
xlat
aas
cs
and
mov
scas
fimul
mov
xor
aas
mov
repz
div
mov
mov
dec
lds
mov
lods
push
cwde
jbe
es
imul
xor
or
popa
test
daa
fs
fcmovb
mov
add
sub
outs
aaa
push
adc
ds
jmp
test
adc
test
loopne
cmps
mov
jae
popa
dec
jg
pop
aad
add
adc
imul
call
inc
call
imul
adc
jae
out
lds
ins
inc
pop
mov
dec
pop
dec
jecxz
mov
outs
mov
add
mov
mov
mov
sub
shl
cmc
enter
pop
gs
sti
jg
adc
mov
mov
mov
fs
outs
push
mov
test
mul
fdivr
and
call
mov
or
mov
in
push
not
into
and
int
enter
jg
mov
sub
mov
(bad)
icebp
mov
xlat
jbe
jecxz
adc
push
dec
cmovb
(bad)
sbb
lock
into
clc
ror
dec
in
loopne
fst
and
mov
push
dec
pusha
out
sub
jge
mov
mov
inc
xchg
mov
push
jno
mov
xchg
inc
mov
cmc
gs
ret
and
xchg
jmp
adc
pop
xchg
aam
int3
cmp
cmc
scas
(bad)
pop
int
and
jmp
aam
sbb
xchg
mov
sub
(bad)
jo
rcr
hlt
lahf
dec
mov
mov
aas
push
repnz
cmp
das
test
(bad)
mov
push
inc
test
pop
sbb
sbb
push
out
das
(bad)
push
dec
push
(bad)
fmul
and
sbb
or
in
jae
xlat
sahf
pop
mov
pusha
jo
stc
outs
push
pusha
xor
test
mov
mov
scas
mov
outs
out
(bad)
mov
fld
and
mov
fnstenv
jns
pop
(bad)
je
cmps
out
sbb
inc
mov
fdivrp
push
sub
push
sub
dec
or
arpl
xchg
cdq
loopne
push
inc
mov
sub
xchg
sub
hlt
xchg
shl
ret
add
repz
inc
dec
jg
fld
pop
stos
push
sbb
jmp
jmp
sar
loop
push
dec
aaa
paddq
adc
into
mov
mov
add
mul
fiadd
add
or
push
int3
ret
xchg
iret
or
inc
not
jge
ja
sub
lods
iret
sbb
xchg
les
ret
mov
push
int
inc
fwait
dec
push
jne
test
ja
rcr
jg
adc
add
or
outs
push
xchg
add
int3
daa
or
xchg
rol
cli
sti
sub
cwde
rcl
mov
xor
pop
jne
pop
sahf
dec
data16
xor
add
or
inc
and
in
and
outs
mov
cld
push
fcmovnbe
ds
jmp
out
adc
cmps
cmp
stos
mov
pop
test
cmps
push
mov
cmp
xor
icebp
stos
mov
mov
and
sbb
sbb
mov
xchg
leave
or
dec
scas
ins
xor
jmp
inc
lods
repnz
and
sahf
add
icebp
pop
cdq
leave
xchg
(bad)
out
out
rcr
mov
fild
dec
adc
test
scas
sub
dec
mov
add
mov
in
cdq
stos
pop
add
ds
cld
out
mov
jmp
mov
sbb
call
jge
jno
xchg
jno
sahf
push
jp
jl
stos
xor
pop
fbstp
in
xlat
push
push
mov
gs
scas
rcl
fs
add
sub
mov
push
jecxz
sub
mov
mov
jmp
scas
jp
xor
sbb
lock
sbb
sbb
mov
into
push
lahf
jg
inc
loope
mov
fisubr
mov
jl
add
pusha
nop
jb
push
cs
in
enter
fbstp
call
sub
adc
jmp
cmp
sub
mov
neg
jl
pop
jl
loop
fist
aas
scas
cmp
push
in
enter
outs
adc
pop
inc
cmp
call
(bad)
loopne
jmp
mov
add
add
mov
push
ss
(bad)
(bad)
shr
call
jg
in
pop
outs
dec
out
shr
aaa
aam
imul
repz
data16
leave
scas
inc
aad
popf
xchg
mov
pop
leave
(bad)
stc
sub
sub
shl
scas
shl
mov
inc
clc
in
jbe
movs
lea
push
outs
pop
scas
inc
mov
pushf
mov
loope
pop
mov
icebp
icebp
jnp
jg
inc
jecxz
in
fmul
pop
pop
data16
adc
test
sub
or
mov
mov
adc
jp
pop
cmp
add
ret
sbb
inc
xlat
lds
add
(bad)
cmp
dec
jmp
mov
scas
jle
cmp
sbb
pop
cmp
div
(bad)
xor
not
sbb
dec
daa
out
mov
push
inc
dec
inc
or
sub
add
popf
xchg
cmc
xor
jp
sub
push
jns
pop
out
ror
mov
pop
mov
push
add
stos
jmp
icebp
adc
test
xchg
xor
mov
shl
adc
cmc
scas
test
jecxz
outs
jmp
pop
sar
mov
sar
inc
fcom
adc
jg
xchg
xchg
into
lods
xor
ss
fsubr
add
cdq
mov
mov
or
cmc
inc
jnp
ja
fwait
sbb
enter
in
push
dec
sub
mov
mov
stos
nop
mov
pop
repz
loopne
xor
mov
mov
in
int
push
cld
leave
retf
and
adc
xchg
dec
in
adc
scas
mov
fdiv
jno
mov
jl
retf
sub
shl
mov
std
aam
loope
out
mov
sbb
mov
sub
frstor
addr16
jp
jne
fstp
jl
lea
jmp
scas
ret
mov
and
and
or
pop
(bad)
bound
push
adc
jbe
mov
loopne
std
pop
push
test
jne
pop
pop
xchg
repnz
pop
aaa
and
nop
push
repz
and
jecxz
sub
and
cmc
into
int3
mov
scas
cmp
inc
cmps
hlt
push
rcr
loopne
popa
add
xchg
and
adc
or
adc
ror
repz
mov
call
clc
pop
std
stc
fild
pushf
movs
ds
std
push
add
neg
ret
retf
and
pop
int3
push
cli
aas
data16
loope
jbe
cmp
push
mov
leave
cmp
mov
cld
loop
test
fdiv
dec
cmps
push
mov
sti
sbb
or
pop
popa
shl
cwde
mov
mov
test
add
push
jge
dec
or
icebp
dec
inc
and
push
fbld
(bad)
mov
leave
out
out
add
cld
jle
scas
push
rcl
mov
int
mov
add
jae
out
adc
mov
leave
cmp
jno
xlat
fwait
mov
mov
popf
pop
ja
jmp
sbb
jecxz
dec
lods
jns
jecxz
mov
lds
push
sbb
(bad)
pop
and
push
inc
cwde
clc
cs
adc
mov
mov
pmulhuw
and
jns
mov
sbb
(bad)
mov
xor
addr16
pop
cmc
jns
call
mov
inc
mov
pushf
add
dec
mov
mov
aaa
cld
cmp
dec
rcr
stc
mov
add
pop
sbb
push
mov
inc
dec
push
test
add
test
ficom
retf
fsub
(bad)
push
fld
lea
inc
enter
inc
(bad)
ds
jmp
test
loop
mov
lea
lds
movs
test
aam
mov
dec
inc
mov
aad
lea
call
repz
fiadd
sub
lods
aam
jne
sub
sti
cdq
mov
scas
jno
(bad)
dec
cmps
ficom
dec
xlat
(bad)
xor
lahf
xchg
mov
jne
xchg
(bad)
mov
xchg
jmp
(bad)
fidivr
adc
stos
shl
retf
cld
mov
pop
hlt
cmc
xor
aas
pop
fsub
or
popf
es
in
movs
cli
fbld
fistp
stc
jge
cmp
out
mov
lods
mov
push
mov
movs
nop
mov
add
push
call
mov
jae
inc
(bad)
pop
test
fmul
sbb
cdq
call
jl
(bad)
movs
inc
mov
out
in
in
cmp
clc
mov
mov
(bad)
and
cmp
cmp
fisttp
retf
movs
push
dec
(bad)
pop
stc
xchg
sbb
aam
fidivr
push
sbb
scas
gs
cdq
ror
scas
movs
pop
ss
call
and
pop
cdq
inc
jp
or
xor
jo
cmp
add
jo
adc
mov
jecxz
int
bound
jecxz
add
ret
not
fwait
push
adc
pop
in
repz
pop
adc
imul
int3
inc
in
mov
ret
ins
out
push
mov
mov
add
(bad)
test
jmp
les
jb
mov
jnp
or
imul
dec
pusha
je
push
or
adc
(bad)
cmc
push
dec
test
push
sbb
inc
stos
shl
mov
push
mov
enter
sub
pushf
iret
lds
push
or
rol
pusha
into
rcl
test
test
xlat
pop
loop
xchg
adc
lds
hlt
imul
popa
les
sbb
aas
push
pop
jecxz
xchg
fldlg2
repz
daa
pop
push
aam
stos
in
loopne
fistp
fist
jle
(bad)
iret
test
xor
add
jp
sub
dec
stc
or
int
dec
stos
push
and
jg
retf
adc
jg
outs
xlat
adc
pop
push
cmp
lea
jne
xchg
sub
pop
lds
pop
sar
inc
addr16
xor
mov
sub
(bad)
ins
push
cmp
mov
mov
inc
adc
not
sub
popa
clc
imul
xchg
loop
xchg
popf
repz
push
aad
cs
sbb
or
dec
cwde
sub
(bad)
pushf
not
sbb
adc
test
nop
(bad)
mov
dec
or
xor
jmp
cmp
mov
mov
mov
inc
cmps
mov
mov
mov
(bad)
sub
and
mov
ins
mov
fmul
sbb
loopne
cmp
cmp
or
mov
lea
cmc
or
(bad)
pop
and
jg
cmp
lock
(bad)
das
inc
call
adc
push
dec
push
iret
scas
in
pop
cmp
sbb
sub
scas
or
sbb
mov
inc
dec
inc
xchg
fldenv
aas
xchg
jae
es
adc
xlat
xor
fidiv
fisubr
sbb
or
add
push
xchg
neg
mov
or
jmp
outs
jp
or
adc
call
aad
sbb
call
bt
pop
test
or
jge
sbb
lea
and
add
jne
sbb
fsub
retf
mov
sub
les
ret
inc
jmp
ss
cmp
or
test
(bad)
push
repnz
xchg
or
sysenter
sbb
cmp
jmp
retf
jle
mov
jp
cmp
pop
cdq
adc
or
dec
xchg
arpl
loope
jnp
stos
popa
cmp
push
mov
rcl
pop
sub
mov
vmread
and
outs
je
jne
xor
scas
stos
add
push
sahf
cli
retf
rcr
xor
out
mov
dec
(bad)
adc
add
mov
rcr
imul
adc
push
aam
and
arpl
dec
retf
sbb
ret
cmp
adc
dec
cld
nop
xor
cmp
or
test
cmps
rcl
js
cmps
mov
rol
push
fwait
jle
add
xchg
pop
push
cmp
mov
mov
jl
cmps
jg
xor
mov
das
fwait
out
mov
inc
movs
add
stc
jecxz
lods
xchg
dec
hlt
or
mov
test
push
out
pop
jbe
add
dec
pop
add
push
stos
xchg
cmp
jns
iret
mov
ss
pop
jns
add
jo
dec
adc
push
xchg
imul
fsubr
pop
cld
mov
pop
aas
sub
cmc
add
and
add
stos
in
sub
fdiv
adc
xchg
je
pushf
mov
out
push
push
push
cmps
xchg
mov
and
les
lea
sahf
sahf
stc
shr
gs
mov
jl
adc
inc
loope
cmps
push
sbb
pop
js
aaa
fld
out
sbb
inc
lahf
push
cmp
repz
push
mov
jmp
pusha
addr16
sbb
adc
pop
mov
test
ins
xor
test
or
jmp
aam
pop
shl
and
pop
jmp
in
lahf
cli
xchg
or
push
sar
adc
push
jb
mov
mov
fbld
fisttp
dec
pop
pop
in
sbb
test
sub
adc
xchg
sti
mov
xchg
ins
push
pop
xlat
test
das
xchg
cs
cmp
add
mov
outs
sbb
mov
inc
cmp
es
and
adc
nop
push
inc
fsubr
shr
imul
pop
xchg
test
cmp
cdq
scas
xchg
and
repz
popa
jl
push
fisub
cs
xor
xchg
xor
pop
dec
push
sub
enter
fadd
popf
xchg
jl
inc
jl
pop
mov
(bad)
stos
and
cmc
mov
mov
push
mov
jle
repz
cmp
mov
jbe
sbb
leave
dec
add
out
mov
xchg
aas
sub
mov
xor
out
and
and
call
xchg
shr
sub
ins
pop
add
push
lock
mov
push
mov
sbb
pop
fidivr
outs
fist
push
sub
xchg
mov
jae
cmps
mov
daa
aas
pop
js
mov
mov
xchg
fisttp
rcl
pop
shl
repnz
jo
push
ins
out
inc
mov
and
shl
shl
into
adc
xchg
in
inc
mov
out
fcomp
pop
fcom
jl
out
loop
imul
mov
ss
add
into
inc
push
outs
mov
ins
mov
dec
pop
es
jbe
sti
xchg
xchg
adc
pop
pop
mov
push
test
popf
xchg
(bad)
test
xor
cmp
sub
scas
inc
add
pop
je
dec
loopne
cmc
mov
sbb
inc
sahf
pop
imul
fdivr
ror
out
mov
xchg
mov
cdq
stos
sub
push
ret
xchg
retf
imul
pop
(bad)
inc
stos
push
ss
in
mov
adc
adc
or
adc
pop
xchg
sbb
mov
mov
dec
les
enter
xor
loopne
or
pop
cli
add
mov
lods
dec
xchg
mov
jp
cmp
xlat
cmps
xor
inc
clc
push
sub
mov
mov
push
out
repz
gs
popa
lods
fsub
add
inc
rcr
ficomp
(bad)
or
not
sub
jle
movs
std
fst
movs
jae
outs
int
(bad)
mov
js
sahf
sti
icebp
jnp
add
mov
jp
push
push
shl
rol
sar
push
sub
mov
fbstp
not
inc
pop
add
mul
retf
rcr
loope
sbb
fidivr
and
push
call
xchg
ds
mov
inc
jmp
inc
repz
test
mov
xchg
movs
rcl
or
fs
fcomp
aaa
loopne
jmp
sub
sbb
fadd
adc
jge
pop
pop
retf
rcl
into
les
or
pop
xor
loop
inc
movs
arpl
or
movs
pop
movs
test
stos
inc
or
xchg
jnp
movs
lea
jno
jb
arpl
pop
push
outs
adc
sub
fcomp
repnz
adc
inc
outs
pop
mov
out
or
call
push
pusha
mov
xor
pop
test
jg
push
mov
sar
sbb
sub
movs
test
cmp
ret
xchg
inc
sbb
sahf
stc
sbb
add
push
inc
push
jle
sbb
mov
mov
mov
(bad)
mov
mov
enter
xor
ds
xor
in
pop
xchg
call
inc
fcomp
cmp
enter
jmp
pusha
mov
push
mov
test
repz
push
or
xchg
mov
jne
pop
cwde
mov
fdivr
fadd
inc
jb
xor
dec
clc
clc
loopne
pop
dec
mov
int
xor
leave
and
push
out
push
test
sub
jle
xchg
jecxz
fs
pusha
stc
jl
daa
push
xor
mov
push
add
(bad)
stc
or
mov
xlat
xchg
or
ficomp
sti
add
fsubr
popf
popa
mov
stos
push
les
sub
mov
cwde
push
jno
idiv
cdq
retf
push
cmp
mov
inc
xchg
adc
xor
fild
jmp
iret
add
inc
mov
data16
ds
call
add
fcmovne
adc
push
(bad)
push
jmp
cwde
jl
mov
fsubrp
int3
aas
mov
add
retf
call
push
push
repnz
xor
movs
lods
sbb
jns
adc
rol
cdq
push
cli
push
stos
out
jge
xor
sbb
fiadd
pop
and
(bad)
pop
call
addr16
jp
sub
lahf
ss
in
sub
test
test
comiss
pop
adc
in
mov
fidiv
push
mov
or
sub
out
jp
(bad)
push
pop
mov
pop
dec
jmp
and
das
inc
xor
nop
inc
cmc
push
cmp
lock
jo
push
cli
in
movs
push
cmp
fmul
pop
jp
and
pop
popf
mov
push
call
mov
jle
out
(bad)
sbb
push
(bad)
sub
cdq
out
jle
inc
aaa
test
push
aad
movs
test
aad
pop
pusha
inc
jg
adc
fst
cmp
inc
mov
push
lds
sar
sub
dec
mov
jp
fst
dec
pop
ror
in
imul
movs
aas
popa
add
cmp
lods
cmps
jmp
inc
or
xor
pop
out
add
sbb
fs
bswap
loopne
(bad)
cmc
not
fstp
scas
adc
add
jo
out
push
xchg
dec
mov
mov
push
stc
mov
out
jae
jle
sbb
pop
nop
retf
(bad)
(bad)
mov
and
or
and
xor
int3
jnp
xchg
lea
in
imul
mov
ror
push
xor
jo
in
aad
xlat
adc
lods
je
cmp
xchg
mov
cmps
cmps
gs
clc
in
(bad)
call
xor
ja
mov
(bad)
xchg
js
jns
aas
ror
jecxz
sbb
cmp
push
and
inc
stos
and
sbb
stos
rcr
mov
push
mov
pop
imul
and
dec
scas
mov
scas
adc
cmc
neg
dec
or
or
mov
pop
std
vpxor
add
cli
call
inc
dec
clc
mov
or
mov
ds
enter
fstp
ins
add
xchg
test
dec
mov
mov
lods
xchg
mov
dec
inc
mov
outs
fidivr
outs
popa
data16
stc
icebp
adc
call
xchg
or
xchg
cs
ret
int
xor
ret
jp
mov
cld
imul
out
call
das
in
shr
in
xlat
inc
jge
test
pop
add
shl
or
mov
xlat
aad
movs
dec
push
dec
mov
mov
dec
sub
mov
in
or
mov
adc
push
int
cmp
or
sub
fmul
stc
add
loopne
or
jge
cmp
pop
div
test
jecxz
jge
mov
in
jbe
pop
mov
div
test
adc
ss
(bad)
inc
(bad)
xor
cs
das
mul
in
jb
in
and
mov
mov
cmp
fsubr
pop
adc
jae
mov
mov
popa
pop
cdq
cdq
popa
push
in
mov
pop
jnp
inc
nop
cmp
sbb
gs
hlt
sbb
div
rcl
push
jp
mov
sti
lods
shr
les
adc
retf
xchg
aaa
das
bound
jae
repnz
sub
fwait
inc
sub
cmp
or
mov
inc
add
loopne
ins
push
push
push
mov
int
(bad)
sahf
adc
xchg
pop
mov
retf
adc
mov
dec
push
lahf
lea
inc
in
add
out
and
inc
xchg
ins
push
aas
dec
sub
xchg
jne
cmps
cld
adc
mov
in
sub
aas
add
pushf
xor
lea
push
hlt
inc
push
mov
inc
push
pop
jl
xchg
xchg
cmp
or
out
loop
sub
jbe
std
das
mov
movs
and
mov
dec
loope
sbb
push
je
rol
push
inc
inc
cld
xchg
add
test
pop
jg
xchg
loope
inc
mul
mov
dec
ss
repnz
(bad)
sub
fiadd
jecxz
fidiv
sbb
jg
xor
loopne
inc
push
inc
mov
and
cmps
and
adc
std
mov
jmp
push
punpckldq
fidiv
fsubr
(bad)
aam
lock
daa
sub
push
ret
daa
daa
out
cmps
fcos
xor
mov
xchg
jmp
loopne
add
aad
mov
jle
ins
sub
shl
pop
loopne
out
jmp
lahf
jle
cmp
lahf
ins
sbb
inc
std
cmp
mov
mov
xchg
mov
icebp
out
add
call
and
popa
pop
loopne
push
xlat
mov
push
enter
fs
ret
inc
iret
pop
or
adc
push
sub
mov
cmp
call
cmp
in
push
aas
sbb
pop
in
mov
ja
repnz
adc
ret
sbb
fdivr
push
retf
lds
stc
das
pop
rcl
mov
mov
bound
iret
and
cli
add
mov
rol
repz
add
rcl
jecxz
pop
xchg
sbb
mov
cmp
into
ins
nop
mov
scas
repnz
add
cdq
ds
mov
mov
fdiv
std
jmp
ret
pop
adc
leave
cmp
sbb
pop
les
mov
mov
xchg
fisubr
out
jb
add
(bad)
fidiv
popa
xchg
xlat
sti
or
in
test
mov
inc
ror
jae
push
push
fild
xchg
jmp
inc
push
sub
pop
add
dec
mov
call
push
push
mov
arpl
loop
mov
add
sbb
scas
sahf
or
ins
inc
jno
jno
jb
test
jmp
call
(bad)
and
jae
out
push
add
stc
mov
bound
mov
retf
cmp
cmp
scas
pop
adc
test
pop
ja
mov
call
or
add
xchg
ror
outs
mov
popa
fcomp
mov
mov
inc
push
movs
pop
adc
mov
pop
retf
jp
lds
cmps
and
shr
and
cmp
xchg
ins
loop
sti
sub
sbb
rcl
sbb
add
push
movs
lahf
(bad)
inc
cmp
mov
or
xchg
mov
push
xor
stc
mov
int
inc
clc
xchg
movs
aas
shl
gs
xchg
inc
xchg
jmp
dec
pop
rcr
out
call
cli
jno
and
and
xor
in
cmps
or
mov
cmp
sub
loopne
adc
push
push
in
lea
push
sbb
sbb
movs
cmp
push
push
repnz
lods
das
out
cmp
(bad)
xchg
(bad)
ins
les
push
pusha
add
cmp
or
or
adc
and
mov
gs
leave
cwde
mov
mov
stc
sbb
imul
daa
xor
jmp
fnstsw
sub
mov
xchg
fs
cmp
fs
or
pop
mov
jnp
mov
sbb
pop
out
cmp
sub
aam
mov
bound
repz
xor
xchg
xchg
pop
aad
push
mov
lock
jae
xor
imul
jge
ss
adc
jb
and
push
push
cmps
int
loop
dec
dec
xor
adc
clc
or
sub
lds
call
push
ss
lock
gs
xlat
or
or
adc
jle
loop
mov
dec
in
pop
cs
inc
inc
aas
je
cmc
and
and
or
icebp
fdiv
shl
dec
mov
or
(bad)
ds
ins
xor
ret
cli
adc
mov
ds
sbb
aam
pop
xchg
out
(bad)
push
or
or
call
es
imul
add
out
das
enter
sbb
xchg
sahf
sub
add
inc
rol
pop
mov
cmp
xchg
hlt
je
xor
pop
cmps
push
gs
rol
int3
arpl
test
sub
and
and
jmp
stos
cwde
pop
pop
mov
dec
xor
es
sub
jne
xor
and
jg
or
ds
(bad)
xchg
xor
out
arpl
pop
add
fdiv
mov
stos
test
and
fild
(bad)
fsin
out
in
pop
pop
lock
aas
addr16
ficom
add
js
and
sbb
mov
imul
fist
dec
(bad)
xor
inc
sbb
(bad)
mov
fs
mov
mov
pop
xor
bound
cmp
(bad)
mov
xlat
shl
push
pop
cld
cmp
test
mov
das
or
test
jmp
aad
icebp
mov
hlt
pop
es
mov
rcl
xchg
jg
add
jnp
mov
jnp
fisttp
call
cli
jns
jo
in
adc
inc
hlt
mov
mov
aad
jmp
inc
inc
(bad)
adc
pushf
jp
and
jg
in
aaa
or
inc
(bad)
idiv
std
sbb
sbb
jp
adc
inc
movs
and
and
and
adc
repz
fwait
mov
out
pop
push
xchg
jle
scas
xchg
push
pop
int
imul
popf
test
mov
add
imul
ret
es
iret
test
pop
or
push
dec
or
xor
in
push
inc
in
les
or
and
xchg
call
or
xchg
mov
js
hlt
cdq
pushf
cmp
nop
cmps
ret
push
les
mov
xor
(bad)
sbb
icebp
mov
js
mov
fsub
xchg
jo
xchg
push
sbb
imul
icebp
jg
inc
adc
add
adc
mov
add
lods
jnp
xor
mov
cmc
sahf
mov
retf
sub
fisub
gs
or
mov
movs
sahf
push
aaa
push
imul
xor
in
sbb
mov
jg
dec
sbb
int3
ins
or
dec
mov
jnp
test
outs
mov
and
push
aaa
mov
lock
retf
imul
sbb
dec
adc
push
icebp
loop
fidivr
leave
imul
fs
icebp
in
arpl
clc
fs
xchg
fisub
add
call
fwait
les
bound
add
sar
sub
call
int3
pushf
mov
jecxz
mov
pop
xor
hlt
and
cmp
(bad)
jecxz
fisub
rol
push
or
sub
cmp
mov
out
or
arpl
dec
ror
sub
mov
pop
push
jg
xor
mov
jbe
aaa
fwait
push
jne
sbb
in
in
fdivr
sbb
mov
jne
lds
gs
outs
mov
and
ds
aas
daa
mov
xchg
pusha
pavgb
dec
dec
out
into
push
add
jg
data16
popf
repz
nop
or
jns
test
dec
movs
shl
add
jns
lock
inc
push
jle
shl
ret
xor
loopne
sar
inc
xchg
dec
addr16
inc
mov
mov
std
sbb
mov
cli
(bad)
fnstsw
jnp
xor
loop
leave
mov
shl
pusha
sti
(bad)
into
pop
fwait
div
mov
push
xor
out
test
jecxz
sub
in
repnz
or
cmp
cmp
push
outs
or
out
lods
sbb
pop
push
test
adc
jecxz
retf
sbb
jnp
clc
cmps
jg
arpl
and
mov
stos
or
in
mov
sahf
push
cwde
sub
dec
popa
int3
scas
sti
adc
loop
jmp
icebp
add
add
jo
pop
jle
(bad)
enter
in
ja
fistp
push
dec
mov
jle
repz
pusha
xor
fmul
adc
aad
in
pop
jle
call
ror
jo
cwde
pop
les
pop
outs
and
stc
cmps
sbb
pop
mov
adc
mov
or
sbb
int3
stc
lock
xor
ins
pop
je
jae
test
aam
adc
cld
fs
jmp
sub
inc
pop
shl
sbb
das
cmp
sub
shl
fld
das
cmps
xchg
mov
mov
mov
fwait
retf
xchg
iret
lea
ins
sahf
jns
out
pusha
scas
test
mov
dec
test
inc
popf
int3
jmp
push
push
sub
inc
or
xor
mov
mov
push
in
mov
pop
outs
mov
pop
sub
clc
lods
pop
mov
mov
sub
inc
mov
cld
mov
imul
xchg
or
arpl
test
adc
test
add
add
leave
push
sti
sbb
push
jmp
test
gs
xor
xchg
xlat
add
popa
sub
cmp
sbb
cmp
nop
mov
xchg
jo
xchg
lods
stos
frstpm(287
cs
imul
(bad)
pop
xchg
cld
jg
lock
xlat
jle
or
xor
mov
fst
aaa
into
mov
loopne
enter
adc
push
push
mov
xchg
fadd
arpl
jo
imul
in
cmp
rol
pop
cmc
xor
cmp
add
push
push
dec
sub
pop
clc
cmc
retf
xlat
pusha
inc
cdq
in
outs
cmp
pushf
xor
mov
stc
jb
lds
and
cmp
and
sbb
jno
ins
pop
nop
cmp
xchg
je
fs
sub
or
pop
pop
and
or
mov
leave
and
lds
and
arpl
pop
pop
into
add
adc
aad
int
xor
aad
div
lods
push
xor
lahf
jge
push
loope
mov
pop
mov
jp
or
scas
mov
xor
retf
js
or
push
ins
fld
cmps
(bad)
sub
and
sub
xor
add
(bad)
jecxz
outs
pushf
pop
cmp
mov
daa
imul
pop
mov
or
mov
jecxz
pusha
xchg
mov
test
dec
xor
test
cmp
dec
fbld
lods
adc
mov
(bad)
into
cli
bound
or
test
adc
cdq
out
dec
das
ins
inc
stos
hlt
stos
out
mov
xchg
sbb
mov
sub
aad
mov
call
adc
push
jg
jge
enter
jne
repz
into
ret
arpl
xchg
dec
mov
and
jns
pop
jp
mov
add
stos
xchg
mov
xor
sub
wrmsr
aam
sbb
pop
xor
mov
(bad)
mov
or
sti
mov
inc
imul
sti
shl
jmp
push
sbb
repnz
mov
xchg
sub
das
gs
movntq
mov
sbb
ja
test
rcl
hlt
fsub
int
lahf
inc
xor
test
pop
push
inc
sub
jl
ror
arpl
jbe
sub
ror
dec
adc
push
mov
mov
inc
ds
test
out
cdq
dec
sbb
aaa
cmovl
das
pop
mov
stc
(bad)
jmp
stos
ret
and
dec
mov
fmulp
movs
les
das
sub
push
dec
sub
inc
dec
aaa
xchg
xor
mov
call
test
push
push
push
add
add
jl
scas
mov
cmp
ins
sbb
xor
sbb
test
adc
xor
sbb
pop
pop
fadd
hlt
and
add
nop
pop
cmc
(bad)
movs
push
ins
iret
jns
mov
cmp
les
xor
xchg
xor
push
mov
arpl
xchg
aad
and
mov
mov
fisub
sbb
and
stos
loopne
and
mov
mov
outs
jbe
std
sbb
leave
retf
outs
or
push
or
push
cmp
mov
fdivr
std
dec
dec
fcomp
adc
cld
cld
outs
daa
push
inc
xchg
cmp
fsubr
add
or
pop
mov
cmp
aad
icebp
movs
je
in
stos
push
sbb
fstp
movs
aam
loop
dec
lahf
push
jecxz
sar
mov
and
stos
adc
push
(bad)
in
dec
call
dec
or
or
fldl2e
rol
dec
inc
repz
adc
into
add
mov
inc
ja
or
sbb
loopne
loop
call
jo
scas
fild
(bad)
stos
stos
mov
cli
dec
aad
push
addr16
mov
in
test
add
nop
addr16
and
cld
xor
cdq
jae
pop
add
bnd
push
jnp
xlat
and
inc
push
mov
xchg
stc
dec
mov
test
and
lea
std
sbb
push
dec
jle
push
mov
out
pop
dec
push
inc
cmps
test
out
and
je
add
mov
mov
mov
add
jns
and
test
lock
or
(bad)
data16
xchg
hlt
sub
or
inc
inc
cli
rol
(bad)
and
mov
repz
(bad)
lea
shl
add
mov
dec
xchg
lods
push
jmp
mov
in
cmp
push
cmps
and
add
mov
jp
popa
xor
lock
sub
dec
arpl
aad
xlat
sub
mov
ins
mov
jle
stos
es
dec
sti
lea
test
mov
loope
adc
dec
outs
push
xchg
xchg
jnp
sub
movs
das
xchg
into
enter
out
xchg
jmp
sbb
jmp
jl
(bad)
ficom
xlat
xchg
ja
inc
mov
into
lods
fucomp
mov
mov
jne
push
lods
or
add
mov
push
loopne
in
push
add
loopne
mov
push
adc
shr
jns
cs
inc
sbb
pop
push
add
outs
cmps
mov
and
ret
jne
and
mov
loope
daa
push
xchg
sbb
mov
jp
test
into
or
int
leave
dec
fsubr
inc
or
nop
loop
mov
lahf
sub
and
dec
mov
stos
leave
(bad)
dec
xlat
in
lods
pop
and
(bad)
cwde
mov
mov
add
lea
push
jbe
loope
xor
std
movs
repz
and
aaa
(bad)
into
in
lea
jp
es
fs
add
sar
mov
outs
(bad)
and
inc
daa
arpl
cmp
in
call
je
adc
push
je
lods
xchg
fnstcw
jle
jb
and
push
ret
ret
mov
mov
xor
adc
jle
and
ficomp
cmp
movs
or
adc
pushf
test
cmp
in
mov
ret
pop
test
dec
add
popa
lods
rcl
push
dec
cmp
test
jge
pop
cmp
ds
addr16
cs
fild
and
(bad)
ss
aad
cli
inc
fnsave
adc
or
add
icebp
inc
add
mov
les
int
(bad)
mulps
out
int3
call
sti
push
sbb
sahf
add
pop
jne
cld
mov
jle
push
and
add
std
rol
adc
es
xchg
add
in
mov
xchg
aam
cmps
(bad)
cmps
sub
clc
push
add
ja
(bad)
lds
xor
fdiv
js
dec
inc
or
outs
inc
inc
retf
add
popa
cmp
call
aas
xor
jg
pop
push
rol
cld
jae
lods
call
loopne
sub
ds
cdq
or
sar
mov
push
pop
dec
mov
add
sar
ret
xor
inc
ret
inc
(bad)
das
add
inc
xchg
cmp
mov
inc
icebp
adc
bound
xchg
dec
mov
pop
sub
cmc
stc
adc
pop
cli
push
and
dec
mov
stos
push
stos
(bad)
mov
and
or
xor
dec
int3
pop
repz
adc
shl
jne
fst
dec
jge
rcl
loope
sti
cwde
les
movs
into
mov
mov
jbe
clc
pop
ret
push
sbb
push
mov
ret
mov
push
out
dec
jle
stos
sbb
inc
mov
xor
dec
call
mov
cmp
fsubrp
pop
add
xor
push
inc
sbb
(bad)
xor
out
jecxz
cmp
adc
sub
das
mov
leave
cld
sub
leave
fwait
bound
out
fiadd
adc
jmp
inc
cmp
call
clc
fld
je
repz
pop
push
jne
and
pusha
mov
enter
lods
cmp
mov
push
mov
ret
sbb
add
frstor
aaa
(bad)
or
imul
scas
imul
fcomp
es
(bad)
mov
or
in
mov
inc
daa
fistp
arpl
pop
inc
xchg
out
pop
retf
pop
cmps
and
xchg
jg
fild
mov
loop
into
arpl
es
adc
add
out
js
jecxz
ds
in
sub
ficomp
scas
gs
mov
adc
pcmpeqd
adc
les
aad
mov
cmp
add
sub
mov
push
test
adc
out
sub
sbb
repz
xchg
dec
adc
sbb
dec
cmp
or
pop
lods
mov
push
sbb
and
sbb
jmp
push
scas
fsub
mov
inc
xor
push
inc
into
mov
sbb
shl
in
fld
fsub
loopne
jp
add
ret
aas
sub
mov
loope
sbb
das
dec
pop
dec
xlat
push
or
push
rcr
jp
mov
cmps
outs
adc
vmovss
adc
xlat
xlat
xchg
inc
add
hlt
ds
scas
xor
pop
xlat
push
scas
dec
gs
imul
add
mov
popa
xor
pop
sub
mov
fwait
pusha
cmp
pop
mov
retf
leave
cmp
in
jmp
aad
lea
xor
mov
fdivr
pop
mov
cmp
mov
(bad)
movs
push
xor
cdq
lods
push
and
xchg
dec
daa
(bad)
cmp
cmp
hlt
(bad)
cmp
or
xor
sub
cli
mov
xor
fbld
outs
mov
pop
sbb
cmp
je
pusha
pop
jle
or
or
push
push
push
cmp
out
loope
popa
cmp
pop
lods
mov
scas
retf
mov
pop
mov
fcomp
cmp
fst
fist
mov
pop
mov
nop
mov
xor
mov
dec
inc
pop
inc
mov
cmp
jmp
fnstcw
adc
pop
cmp
sbb
mov
and
(bad)
in
push
(bad)
stc
sbb
dec
mov
jmp
mov
jg
push
inc
xlat
mov
dec
xor
jbe
or
sbb
stos
sub
imul
cmp
ja
dec
mov
add
(bad)
adc
add
mov
jae
mov
in
mov
fwait
xchg
mov
jnp
pop
lds
cmp
(bad)
pop
mov
jmp
js
inc
cmc
and
inc
jmp
fwait
movs
int3
and
add
rcl
fist
xchg
adc
sbb
arpl
sub
cs
mov
(bad)
mov
inc
push
sbb
dec
popf
xchg
(bad)
fiadd
in
imul
dec
in
sti
pushf
arpl
shl
mov
iret
dec
cli
or
aad
ret
nop
stc
xchg
fwait
add
rcl
dec
jge
je
mov
jne
cmps
inc
mov
push
jne
out
das
movs
jecxz
repz
push
test
xor
ret
js
ja
mov
out
cmc
mov
jecxz
sub
div
cmp
jle
adc
pop
shl
repnz
or
and
movs
imul
sbb
test
into
adc
in
mov
mov
lds
leave
mov
std
dec
shl
sbb
or
out
mov
and
push
(bad)
dec
(bad)
and
fidiv
or
pop
mov
dec
push
xchg
outs
call
into
(bad)
pop
scas
out
cmps
(bad)
or
(bad)
imul
test
retf
jnp
stc
popf
pop
and
sbb
shl
push
push
add
in
dec
jns
jne
movs
cmp
int3
test
in
sahf
dec
or
in
pop
or
sub
push
loopne
cmp
jo
or
and
(bad)
sub
jnp
sbb
(bad)
xlat
repnz
inc
sbb
es
mov
xor
bound
add
xchg
inc
cmps
retf
shl
movs
bound
mov
imul
dec
fdiv
jnp
or
sub
sets
out
sub
aaa
cmp
xchg
pop
mov
sub
push
jg
vpsubsw
cmps
lods
rcl
out
cmp
mov
mov
push
and
push
mov
bound
dec
popf
in
enter
(bad)
ror
arpl
mov
sbb
mov
out
mov
je
ficom
fst
jo
test
fild
stos
pop
dec
jp
je
in
mov
jne
pop
jle
mov
xchg
(bad)
sub
jmp
arpl
mov
push
inc
movs
push
int
add
xchg
jg
mov
mov
adc
cmp
int3
stc
xor
scas
(bad)
jmp
ins
fisub
xor
sub
rcl
shl
pop
(bad)
push
push
mov
jl
enter
(bad)
pop
test
lea
sub
test
enter
out
mov
lods
jmp
xor
and
sbb
and
mov
inc
loop
mov
dec
popa
mov
push
mov
call
repnz
mov
ror
jmp
sbb
call
imul
pop
sub
and
mov
loopne
pop
pop
sbb
jle
int
outs
dec
xchg
mov
adc
(bad)
sub
xchg
push
pop
jnp
jecxz
sti
loop
jb
outs
xchg
inc
sub
(bad)
cwde
retf
push
mov
inc
fisub
cs
and
and
hlt
mov
dec
dec
es
mov
int
shr
cmps
or
fimul
mov
ret
fstp
sub
(bad)
and
je
jg
mov
add
adc
rcr
cmp
scas
mov
fwait
lahf
retf
cmp
scas
and
dec
repnz
add
cmp
sub
aas
cmp
mov
push
mov
lahf
adc
sbb
bound
test
retf
cmps
and
jb
mov
mov
push
lock
pop
sub
inc
xchg
cmp
sbb
loope
xchg
ss
stc
loope
mov
lea
je
push
mov
xor
dec
mov
mov
cmp
mov
xchg
ds
push
div
mov
sbb
loopne
shl
ret
inc
push
ins
(bad)
outs
lods
pop
mov
aas
cmp
jmp
loopne
and
inc
stos
mov
or
xchg
daa
or
inc
sub
mov
jmp
mov
test
es
cli
mov
pop
scas
in
call
adc
ja
sub
and
add
rep
std
scas
rcr
adc
(bad)
xchg
pop
hlt
imul
mov
loop
enter
xlat
inc
jmp
jno
(bad)
aas
cmp
pusha
outs
pop
pop
xor
mov
jle
pop
or
xor
cmp
xchg
dec
mov
jg
scas
fisubr
mov
push
or
ror
fisubr
test
cmp
aas
imul
xchg
pop
iret
lods
fisttp
movs
stos
jne
inc
jo
add
cmps
jge
aaa
mov
adc
mov
rcl
pop
aas
mov
push
lea
nop
icebp
jmp
(bad)
ins
pop
jg
icebp
icebp
enter
push
div
cmp
iret
cs
sahf
sbb
inc
inc
(bad)
ins
dec
and
(bad)
call
mov
jne
maskmovq
imul
stos
add
jecxz
dec
mov
test
popf
pop
fbstp
aaa
jb
jno
dec
add
or
out
xchg
das
xchg
fcom
loope
inc
(bad)
inc
or
sbb
popf
sbb
xchg
cmps
jmp
add
repnz
xor
(bad)
into
int
mov
pop
dec
and
ror
dec
pop
inc
lahf
aaa
and
sbb
adc
sti
sbb
shl
add
pop
ret
adc
ret
shl
jnp
jb
push
cmp
sub
push
pop
cmp
pop
adc
scas
sub
icebp
sbb
xor
mov
push
fst
mov
fcomp
ret
mov
mov
push
mov
xchg
add
mov
fstp
cmp
movs
pop
inc
das
or
rcr
cmp
xor
pop
dec
adc
dec
inc
sahf
mov
sar
imul
inc
sub
pop
mov
jge
addr16
imul
std
mov
scas
xor
push
or
les
test
cdq
(bad)
mov
in
sbb
xor
and
or
inc
pop
leave
dec
xchg
(bad)
dec
cld
push
inc
inc
pop
xor
in
ins
adc
push
mov
leave
fbstp
fidivr
push
mov
cld
(bad)
leave
add
sar
test
cmp
dec
push
imul
scas
mov
dec
push
jbe
mov
mov
ins
das
pop
xor
cmp
add
jne
pop
push
xchg
or
jecxz
sub
push
inc
lds
aaa
pop
loopne
adc
sbb
mov
fsub
xor
mov
mov
clc
jnp
scas
lock
inc
push
je
xchg
(bad)
aaa
push
out
or
arpl
mov
call
out
xchg
dec
clc
ret
aad
pop
test
jmp
cmp
aas
jns
push
(bad)
push
mov
call
popf
test
sbb
dec
pop
pop
test
pop
fiadd
jmp
sbb
pop
mov
inc
add
cdq
(bad)
adc
test
es
cmp
iret
pop
inc
dec
xchg
outs
mov
mov
ins
xor
mov
call
dec
popf
inc
jg
push
sbb
and
sbb
and
dec
mov
mov
hlt
or
jmp
inc
mov
loopne
pop
add
mov
mov
hlt
sub
cmp
inc
mov
outs
xchg
lods
push
lock
mov
mov
mov
ja
or
pushf
imul
push
rcl
or
cmc
inc
call
jecxz
xor
mov
cmp
fs
xor
mov
test
loopne
scas
xor
xor
bound
out
mov
xchg
repnz
cs
mov
pusha
cwde
sbb
and
stc
mov
mov
sbb
add
jmp
imul
jl
xchg
data16
push
inc
scas
push
std
dec
loop
jo
aam
shl
mov
fisub
jmp
mov
shr
push
out
lahf
repnz
inc
mov
cmp
jo
and
sbb
adc
push
mov
dec
lahf
and
lock
jmp
xchg
sub
int3
mov
ds
fisub
stos
xchg
push
dec
mov
jne
lds
push
xor
push
rol
mov
lds
push
(bad)
gs
nop
cmp
or
out
lock
cmp
test
mov
dec
and
retf
cmp
rcr
jno
push
sbb
adc
dec
rcr
sub
test
add
std
or
dec
repz
(bad)
jmp
ja
jl
or
aas
cmp
xor
or
pop
jb
out
or
adc
jmp
mov
(bad)
jg
jo
pop
in
inc
sbb
mov
fisub
cmps
lahf
pop
in
jecxz
mov
xor
test
sub
push
in
sbb
push
arpl
aaa
in
mov
xchg
test
inc
dec
call
sub
fs
das
or
repnz
stc
call
mov
ret
out
push
dec
cdq
push
(bad)
outs
mov
cmp
or
jecxz
inc
std
dec
or
sbb
repz
mov
cmp
in
iret
xchg
push
pop
dec
push
fcom
inc
mov
out
dec
xor
fidiv
mov
xchg
int3
or
mov
sub
push
xchg
in
out
sub
mov
in
inc
push
scas
daa
into
cmp
adc
cdq
sti
xchg
data16
cmp
movs
mov
mov
mov
add
dec
jno
mov
sub
mov
outs
xor
add
aam
shr
sar
and
out
cld
repnz
and
sub
or
(bad)
and
jmp
das
imul
mov
sub
je
and
xchg
jg
sbb
pop
shl
push
cmps
inc
add
stos
pushf
imul
mov
mov
push
mov
add
imul
push
sbb
sti
je
sub
xchg
xor
sub
std
pop
mov
push
fisttp
cmc
mov
lds
aaa
unpcklps
in
and
pop
cmp
jbe
xor
bound
lahf
hlt
mov
shr
test
or
push
add
mov
fbstp
pop
pop
(bad)
fld
fisubr
mov
scas
in
stc
sbb
jne
inc
call
mov
in
mov
push
in
jo
leave
push
xchg
xor
push
and
push
fisub
loopne
push
popa
sbb
sub
xchg
mov
push
push
es
adc
sbb
and
push
es
adc
pop
div
and
and
or
lods
ret
mov
push
sub
adc
mov
imul
into
sbb
(bad)
jo
stc
sub
into
popa
cmp
pop
lea
adc
push
inc
in
jno
out
sub
add
mov
adc
call
outs
call
jbe
enter
adc
xchg
cmps
jmp
rol
out
mov
jbe
mov
das
cmp
and
test
and
and
jne
and
addr16
pop
ds
loope
bound
mov
loop
xor
mov
push
and
hlt
fmul
add
stc
ss
xor
cmp
dec
ret
(bad)
mov
add
or
not
push
test
jecxz
inc
or
and
adc
sbb
ror
bound
dec
push
xchg
out
aaa
loop
cmp
loope
(bad)
mov
cli
call
or
cmp
mov
(bad)
enter
loop
mov
fld
mov
mov
add
cmp
loop
sub
pusha
mov
in
or
and
stc
sbb
fdiv
pop
sbb
adc
jnp
ja
sbb
adc
clc
mov
mov
jns
inc
in
jno
sbb
xlat
popa
(bad)
and
pop
mov
push
sub
ss
jbe
test
cmp
lods
lock
in
call
xchg
inc
mov
adc
add
aam
ins
add
xchg
mov
pop
gs
xchg
xchg
cwde
pop
inc
daa
inc
xor
mov
iret
or
sbb
xor
inc
outs
retf
xchg
pop
inc
setge
fcomip
stos
xchg
sbb
cmovge
or
add
xor
fisubr
(bad)
push
imul
xor
add
or
xchg
sbb
das
lahf
sbb
xchg
inc
mov
cdq
mov
xor
pop
retf
mov
push
pop
push
frstor
mov
repz
mov
inc
and
mov
or
push
mov
pop
mov
xchg
les
xor
cmp
aad
push
or
mov
(bad)
loope
push
loope
arpl
adc
movs
xchg
(bad)
xor
jle
cli
jne
fwait
jnp
cmps
jo
push
(bad)
fsub
addr16
xlat
cli
ja
icebp
call
js
addr16
int3
retf
mov
aad
je
push
outs
fwait
sahf
(bad)
mov
ins
cmp
push
fdiv
pop
js
or
add
mov
jns
cs
sbb
pop
and
stc
sti
push
jmp
xor
jns
lods
jne
mov
push
xlat
jmp
jl
mov
xor
sub
test
jb
inc
fcomp
call
mov
jo
inc
ret
jno
repz
stos
and
daa
test
pop
mov
cdq
xchg
leave
sbb
or
jb
fcomp
in
xchg
dec
xor
sub
jno
imul
js
mov
shl
xchg
leave
fist
je
aaa
ds
stos
or
test
mov
add
in
stos
push
std
icebp
adc
in
shr
sbb
mov
dec
jbe
fisttp
sub
in
mov
mov
stc
repnz
sti
jo
mov
mov
retf
mov
int
repnz
add
sbb
icebp
adc
out
fst
push
ins
mov
sub
push
cmp
mov
dec
addr16
retf
jge
mov
mov
outs
add
pushf
gs
pop
pop
cmp
fcomp
ret
xchg
je
add
or
jno
adc
add
sahf
adc
fs
inc
enter
dec
add
xor
sbb
ret
and
and
jmp
cwde
outs
int
mov
loop
jae
pop
sub
popf
mov
pop
add
js
sti
cdq
ret
(bad)
mov
in
mov
leave
xchg
or
fimul
add
sub
arpl
(bad)
pop
mov
cmps
sub
cwde
jge
push
jo
enter
or
mov
sub
adc
mov
fist
xlat
ror
outs
xchg
lock
jp
push
call
retf
ds
mov
mov
mov
xlat
je
retf
add
(bad)
xchg
int3
push
pop
adc
inc
sti
xchg
push
rcl
sub
imul
or
inc
(bad)
xor
std
jle
or
xor
call
scas
mov
dec
dec
ficomp
shl
les
movs
rcr
mov
add
jo
movzx
call
adc
(bad)
push
test
test
call
add
inc
cmp
jp
pop
add
jnp
push
xchg
test
call
mov
cmp
add
out
or
fsubr
cmp
mov
std
push
bound
test
add
pop
(bad)
push
xor
pusha
sub
mov
lds
lods
inc
ins
push
mov
and
int3
rol
jae
repz
push
push
test
fmul
mov
(bad)
inc
shl
enter
dec
xor
push
(bad)
aad
int3
test
xor
and
xchg
sub
shl
mov
or
sbb
inc
js
pop
push
sub
jmp
ror
mov
enter
pop
fimul
scas
fbstp
ficom
les
mov
ja
fisubr
xor
lahf
pusha
es
mov
xlat
mov
and
in
dec
in
jo
lock
adc
jae
in
xchg
(bad)
test
out
sub
cmp
add
sbb
sub
mov
sbb
cli
(bad)
mov
lahf
adc
xor
cdq
hlt
shr
fisubr
aam
enter
outs
outs
test
jmp
mov
shr
loop
add
jl
je
test
jae
imul
xor
fmulp
jge
sub
sbb
and
jmp
out
mov
inc
mul
and
test
or
test
cmps
aaa
fimul
lea
test
sti
es
jecxz
jne
and
cmc
icebp
or
jbe
ins
ret
jg
mov
push
inc
dec
pop
xor
dec
jnp
dec
jb
add
nop
inc
es
std
sub
cwde
xor
sub
or
xchg
mov
xchg
in
dec
jg
or
xor
and
xchg
ret
jae
adc
pop
dec
jecxz
jb
rol
pop
out
and
mov
or
mov
pop
jle
dec
mov
cmp
fisub
loopne
push
sbb
push
cmp
push
mov
pop
add
test
movs
mov
inc
popa
outs
ds
jp
ins
int3
(bad)
xor
xchg
xchg
stc
lahf
cld
mov
pop
dec
loopne
pop
jb
mov
not
dec
out
jbe
lahf
or
mov
sahf
cmps
sbb
push
(bad)
icebp
clc
lock
add
rol
or
aad
or
or
daa
or
and
js
push
js
pusha
lds
(bad)
xchg
popa
std
cwde
sub
mov
lock
dec
icebp
jb
repz
push
xchg
cld
or
add
mov
inc
jmp
mov
push
sub
or
and
sbb
add
mov
push
cmp
pop
cmp
mov
lahf
fistp
iret
or
xor
aaa
mov
(bad)
int
dec
or
popf
mov
ins
add
es
mov
out
loopne
loop
ss
sbb
add
lea
inc
mov
xlat
(bad)
hlt
inc
mov
jecxz
xchg
ret
call
outs
adc
(bad)
pop
out
lahf
loopne
rol
movs
adc
xor
scas
idiv
arpl
out
lock
fwait
loopne
pop
inc
adc
push
inc
sbb
cmp
sub
jo
xor
dec
sbb
aam
xor
dec
jae
lahf
cmp
loope
stos
or
loop
and
outs
mov
adc
mov
data16
mov
outs
dec
cmp
mov
add
in
xlat
cld
cmps
sub
mov
mov
push
aad
retf
push
ins
bnd
(bad)
push
add
ins
dec
jmp
inc
push
pop
or
adc
push
add
test
pop
mov
or
scas
mov
int
fadd
and
jns
lods
pop
sti
sbb
jecxz
mov
inc
scas
nop
lods
add
sub
popa
call
jl
jg
mov
pop
or
pop
stos
out
and
dec
out
inc
scas
or
adc
test
mov
mov
cmc
in
dec
or
sub
xor
ror
mov
ins
out
clc
jnp
jg
xor
fucom
shl
pushf
xor
out
adc
outs
push
jnp
mov
add
adc
ficomp
dec
add
dec
daa
mov
aas
leave
mov
pop
mov
push
jae
sahf
jmp
mov
mov
push
mov
xor
aas
dec
(bad)
and
or
fisub
iret
out
(bad)
rol
jo
push
dec
pop
aad
sti
rol
mov
dec
pop
cs
aad
imul
in
aas
and
xchg
cmp
and
push
rcl
ins
cmp
stc
cmp
scas
inc
mov
jae
cmp
xor
call
repz
in
adc
daa
lea
fs
(bad)
cmps
mov
je
imul
daa
jns
icebp
retf
cmc
push
or
enter
mul
mov
gs
(bad)
std
xor
into
xor
into
sbb
sahf
lods
lds
outs
xor
das
pop
addr16
lds
xor
push
std
sbb
sti
loopne
push
cld
and
lea
or
lea
cmp
add
pop
sbb
add
push
outs
frstor
jo
dec
inc
movs
call
mov
int
xchg
cwde
dec
or
in
sub
loop
(bad)
lock
cmp
int
pop
mov
cmps
rol
hlt
fld
scas
mov
push
ja
rcr
jno
push
imul
stos
jp
movs
adc
mov
clc
jae
loop
ficomp
nop
inc
push
shl
adc
in
mov
test
mov
lods
imul
or
xor
inc
std
scas
cmp
cmps
sub
enter
sbb
movs
in
xchg
mov
adc
push
in
mov
(bad)
pop
loope
in
adc
add
dec
xlat
loop
xor
sub
dec
(bad)
outs
imul
push
mov
or
(bad)
push
cmp
lahf
xor
xchg
inc
loopne
mov
call
and
addr16
inc
push
mov
xor
or
pushf
add
or
loope
pop
sbb
imul
pushf
mov
rol
xchg
aaa
jp
pop
mov
jae
mov
adc
pop
xor
push
jbe
daa
xchg
pop
xor
call
push
mov
mov
xchg
cmp
pop
lds
cmp
xor
loopne
mov
mov
xchg
jbe
pop
pop
dec
cli
test
pop
ins
daa
hlt
mov
dec
xchg
add
ins
call
cmp
push
mov
mov
and
fwait
(bad)
call
(bad)
(bad)
cmp
push
jl
in
xchg
repz
sub
push
xchg
sub
xchg
or
sub
out
adc
cli
dec
pusha
jb
xchg
cld
xchg
sbb
xor
jno
mov
cmps
dec
adc
cmc
hlt
fdivr
pop
adc
cmp
popa
adc
jmp
cwde
rol
sub
scas
jmp
lahf
es
sbb
lahf
xchg
add
add
mov
cmps
not
and
stos
inc
pushf
adc
mov
stos
add
call
cmc
ret
outs
push
arpl
inc
pop
xor
sbb
dec
inc
and
sbb
into
adc
inc
push
sub
adc
and
mov
mov
dec
(bad)
jmp
out
fnstcw
cwde
aad
pusha
loope
or
popf
add
push
nop
repnz
push
mov
jl
jl
push
dec
mov
adc
arpl
sbb
addr16
xor
mov
push
push
inc
iret
sar
mov
add
jae
ficomp
inc
lahf
pushf
aad
cdq
or
inc
inc
sub
rdpmc
mov
mov
xchg
aas
push
adc
add
push
mov
lea
xor
div
call
pop
and
jge
outs
outs
jl
mov
cld
or
stos
out
inc
jg
fnsave
push
jmp
dec
sub
out
shr
outs
mov
inc
xchg
call
movs
addr16
cmp
js
jo
mov
fdivr
loop
inc
cmp
jno
inc
ret
xor
(bad)
mov
pop
inc
bound
out
push
ds
sar
ret
iret
xor
rcl
xor
inc
mov
cwde
fld
sbb
mov
test
sbb
lods
iret
outs
in
adc
arpl
mov
rol
je
xchg
in
xor
mov
push
das
pop
or
sub
cmps
xor
(bad)
das
dec
test
aam
je
xor
inc
cmp
(bad)
xlat
int3
xchg
enter
pop
mov
jb
jnp
fstp
cmp
xlat
lock
dec
sub
in
in
sahf
add
enter
mov
addr16
push
repz
jmp
out
and
mov
loopne
scas
js
push
jne
dec
or
pop
mov
mov
mov
jbe
pop
out
pop
inc
inc
out
xor
xor
cli
push
fdiv
rcr
inc
aad
call
clc
mov
ss
out
jb
fwait
out
aam
bound
and
add
sbb
mov
cwde
inc
(bad)
test
xchg
lock
xchg
push
js
pop
pushf
fild
sbb
aaa
sbb
jno
xor
call
sub
es
xor
enter
inc
inc
xchg
(bad)
enter
pop
push
mov
cmp
mov
dec
ffree
lods
pop
sahf
les
mov
outs
mov
and
(bad)
mov
lahf
cmp
call
push
stc
and
popf
cmp
aas
xor
push
or
cmc
cmp
sar
mov
push
cwde
jae
jae
xchg
loope
dec
cwde
dec
jno
scas
add
and
jl
jbe
and
test
in
test
pop
cmp
mov
xor
gs
lds
mov
(bad)
aad
sbb
jg
js
xchg
cmp
pop
ss
jne
jnp
loope
adc
addr16
jb
arpl
cmp
retf
test
fldenv
aaa
out
mov
aad
push
or
std
lds
scas
daa
pop
and
leave
jl
les
xchg
or
sti
das
cmp
jp
(bad)
repz
mov
ds
fimul
(bad)
cld
cwde
xchg
test
push
lea
out
lea
or
shl
cli
retf
inc
pop
cmp
out
ret
or
or
fldenv
or
stos
mov
add
loop
fidivr
jecxz
mov
and
mov
out
cld
test
jns
dec
adc
pop
call
in
pusha
dec
sbb
je
fadd
in
xchg
retw
imul
cmp
lds
mov
fcomp
mov
rcl
xchg
(bad)
retf
mov
jl
inc
(bad)
push
stos
cmp
fstp
les
sbb
pop
lods
push
(bad)
test
mov
mov
mov
push
pop
mov
ret
xor
pop
jb
fsubrp
jns
push
retf
sub
mov
cmp
std
mov
jle
xor
or
pop
mov
retf
scas
ja
push
nop
push
jg
pop
and
ds
sub
dec
adc
lods
mov
neg
or
jg
in
fistp
cmc
jb
or
sub
mov
jne
cs
and
push
add
je
movs
mov
enter
xor
in
xor
jmp
lods
ss
mov
or
and
jno
adc
mov
test
push
loop
cmc
outs
inc
mov
dec
sbb
push
bound
sub
repnz
mov
jle
ins
int3
out
sub
(bad)
mov
in
(bad)
adc
es
pushf
call
mul
ret
xlat
es
and
mov
inc
lea
sub
mov
repnz
aad
mov
pop
pop
mov
xchg
add
cmc
icebp
add
jmp
fdiv
or
push
pop
ja
jecxz
sub
add
test
int3
jecxz
pushf
js
xor
or
push
xor
ins
sub
call
pop
pop
icebp
cmp
xor
push
and
outs
xchg
xchg
inc
inc
sbb
stos
loope
sbb
xchg
cmc
dec
inc
out
push
or
sbb
leave
ret
cmp
int3
jmp
jmp
mov
iret
ins
in
pop
call
cmps
mov
mov
sbb
sar
fmul
lds
inc
pop
inc
icebp
loope
int3
jecxz
pop
dec
es
dec
in
pop
sbb
stos
jge
loop
and
retf
mov
jae
cmp
mov
or
pushf
lods
push
mov
das
aaa
push
sbb
and
out
mov
js
cmp
icebp
repz
sub
nop
test
retf
jb
loopne
mul
mov
jne
bound
mov
imul
cmp
cli
adc
adc
enter
int
retf
sub
mov
mov
out
mov
mov
push
aas
je
ds
push
mov
sar
scas
daa
bound
popf
sub
lods
cmp
jns
cmp
pusha
pushf
xchg
nop
aam
mov
inc
dec
mov
mov
cmp
scas
cmps
cmps
fs
call
call
rcr
(bad)
loope
jge
(bad)
loopne
fst
adc
les
mov
jg
push
xor
mov
mov
outs
pop
loop
push
data16
xchg
popa
sub
mov
imul
and
cmp
mov
add
mul
mov
adc
xchg
ror
iret
jge
cs
push
sub
and
xchg
push
dec
ins
and
loope
pusha
fwait
jmp
clc
jmp
jmp
outs
popf
mov
shl
mov
cmp
fbld
int
inc
cmps
into
xor
xor
stos
xchg
repz
jb
push
jge
or
xor
stos
and
push
fimul
movs
cld
mov
mov
jmp
fs
xor
shr
cwde
jp
sub
mov
in
loopne
lods
add
pop
jmp
cmps
pop
sub
mov
jno
(bad)
pop
cli
call
push
pop
ret
sbb
std
jne
fsubr
leave
inc
(bad)
mov
or
in
jno
fdivr
fiadd
imul
jae
imul
pop
pop
push
mov
fnstenv
or
call
(bad)
ror
mov
mov
cmp
pop
push
ret
cld
lock
jg
data16
and
test
dec
mov
mov
mov
icebp
pop
(bad)
repz
mov
ret
in
adc
leave
pushf
sbb
xor
fsubr
or
cmp
pop
sub
or
sahf
shl
inc
lahf
(bad)
cdq
dec
push
push
out
aad
cdq
imul
push
adc
inc
jbe
sti
ja
cmp
add
sub
lods
mul
(bad)
aas
xchg
sbb
adc
or
mov
jge
int3
cmc
push
enter
jns
inc
les
cli
mov
jno
popf
push
sub
inc
or
fdivp
enter
pusha
aad
daa
adc
and
cld
inc
jo
jmp
ss
dec
sar
dec
dec
inc
cmps
imul
mov
dec
das
fs
inc
jp
push
or
loop
ins
mul
hlt
out
jns
pop
dec
imul
test
cli
rcr
lds
repz
(bad)
mov
jle
xchg
pop
icebp
cmps
sbb
mov
out
addr16
xchg
push
push
fldenv
fwait
(bad)
lods
jb
and
(bad)
xchg
xchg
jns
out
lods
aaa
sub
shl
adc
test
jno
mov
inc
jnp
mov
shl
rol
call
lea
push
xor
mov
int
push
jle
pop
xchg
sub
and
jns
ja
add
shl
retf
imul
jmp
es
add
mov
in
push
mov
cs
pusha
iret
ficomp
dec
sbb
cdq
xor
fwait
clc
retf
mov
js
add
pop
in
sahf
adc
shl
ficomp
mov
pop
data16
outs
inc
pop
lea
aam
sbb
xor
imul
add
in
adc
fisttp
xor
lock
or
and
ret
cs
or
add
adc
xor
and
not
mov
mov
dec
cdq
shl
push
sar
repnz
cmp
jnp
xor
js
inc
cmp
cmp
pop
mov
sbb
iret
xor
dec
cmp
mov
jb
fldcw
jbe
imul
add
xor
xor
imul
xor
mov
imul
loopne
and
jnp
sti
sub
dec
movs
sbb
cmp
jg
cdq
mov
add
dec
retf
jp
fdivr
in
lods
push
inc
daa
push
jp
mov
adc
(bad)
(bad)
out
test
retf
jb
inc
xchg
loope
or
mov
clc
jge
sahf
lahf
repz
enter
int3
shl
pop
inc
popa
ins
xchg
lea
or
pop
cmp
sbb
push
repz
mov
leave
jmp
cmps
add
addr16
push
icebp
pop
call
dec
mov
lds
(bad)
outs
gs
fnstcw
cmp
mov
into
loopne
enter
mov
lea
gs
rol
mov
pop
push
pop
clc
mov
jbe
lds
or
int
pop
icebp
sub
xor
loop
movs
lahf
and
mov
popf
dec
or
ins
or
or
mov
jnp
xchg
xor
push
les
div
aam
add
daa
xor
pop
das
inc
lock
fcom
cwde
stos
cli
jl
mov
popf
shl
movs
je
mov
dec
adc
push
adc
clc
jmp
into
xchg
cmp
push
repnz
aas
add
test
add
add
in
scas
(bad)
add
sbb
rdpmc
sub
ins
jmp
mov
aam
repz
dec
test
push
out
sbb
sahf
mov
sub
loope
cdq
or
xor
xchg
or
ja
(bad)
push
call
sub
or
xchg
test
test
or
ror
inc
fsubrp
gs
inc
(bad)
jge
push
xlat
dec
sbb
div
ret
call
adc
pop
jl
dec
sahf
push
mov
add
movs
imul
(bad)
and
enter
xchg
mov
add
mov
loop
stc
add
sub
inc
inc
shr
push
ins
xchg
xor
sub
js
pop
sbb
pushf
pop
and
or
inc
mov
in
jmp
stc
xchg
mov
cdq
aad
in
xchg
jne
mov
pop
scas
xchg
xchg
xor
test
and
repz
mov
ret
mov
aas
xchg
fsub
inc
clc
fidiv
pop
pop
xor
ins
xchg
sar
mov
not
sbb
lahf
dec
data16
ss
leave
call
mov
test
push
(bad)
push
and
ret
inc
aam
test
js
or
sbb
and
icebp
xor
pop
mov
push
inc
mov
mov
scas
fwait
inc
cdq
mov
or
pop
enter
inc
ja
rcl
loope
sbb
jmp
mov
dec
imul
mov
jle
mov
retf
jae
push
outs
js
dec
icebp
or
add
dec
xchg
sbb
sub
or
imul
or
imul
push
idiv
idiv
outs
add
sub
sbb
dec
jmp
idiv
dec
xor
jg
sbb
jb
jle
imul
test
mov
fldcw
mov
pop
mov
pusha
aaa
xchg
jbe
add
push
pop
out
data16
inc
or
imul
jmp
sub
in
mov
outs
sub
mov
pop
jno
sbb
cmc
outs
lods
(bad)
xchg
jmp
mov
mov
out
push
inc
dec
fstp
movs
loope
and
pusha
not
or
xchg
icebp
dec
dec
jns
mov
push
dec
xchg
add
ror
shr
xor
xor
adc
inc
jno
mov
xchg
xchg
inc
or
clc
jmp
or
aaa
aaa
push
xchg
push
leave
dec
int
jle
cmps
push
leave
jb
cmps
xchg
icebp
call
fmul
test
cmp
addr16
jae
xchg
sbb
lods
mov
lahf
fwait
pop
or
fucom
in
push
pop
scas
dec
sbb
fdivp
lahf
pop
(bad)
lods
cmps
rol
xchg
mov
mov
and
pusha
mov
hlt
sbb
jnp
dec
mov
mov
loope
adc
mov
retf
retf
retf
or
ds
push
repz
jecxz
mov
mov
sub
inc
mov
xchg
ja
cmp
cmc
jmp
out
retf
retf
(bad)
fstp
cs
clc
or
in
cli
jl
test
mov
popf
enter
or
jp
inc
push
addr16
lock
and
call
sbb
(bad)
cmc
lock
ins
mov
push
push
dec
pop
xchg
cmp
xchg
(bad)
nop
push
mov
xor
fidivr
ret
hlt
(bad)
das
sbb
fcompp
mov
call
pop
sbb
jmp
shr
xchg
jg
vcvtusi2sd
adc
inc
or
ret
jae
addr16
rol
out
sahf
adc
xchg
les
mov
enter
daa
inc
inc
mov
(bad)
push
push
mov
jno
push
mov
das
cdq
movs
repnz
pop
xchg
cld
cmp
pop
inc
push
ret
test
or
data16
out
fptan
mov
sti
pop
pop
das
adc
std
mov
pop
(bad)
popf
ja
(bad)
adc
xchg
jne
(bad)
mov
hlt
or
mov
jge
jl
xchg
imul
xlat
add
aaa
mov
int
inc
jns
mov
cdq
adc
cmp
mov
pop
data16
je
imul
add
(bad)
mov
push
push
jge
out
push
add
popf
mov
jbe
je
pcmpgtw
nop
pusha
cmps
push
je
call
repnz
fs
add
dec
mov
add
or
mov
xor
ja
movs
popa
repz
cmp
test
cwde
arpl
mov
jmp
std
out
jne
add
pop
or
data16
pop
jnp
push
or
(bad)
lods
and
fistp
cmp
pop
shl
mov
jmp
lods
iret
jb
cmps
adc
stc
dec
fisub
in
push
ret
out
jmp
pusha
(bad)
lock
sar
enter
ins
sub
mov
adc
dec
cmovno
inc
pop
add
or
(bad)
aaa
loop
sub
mov
movs
nop
gs
sbb
jno
je
mov
repnz
mov
jge
aas
fisttp
xlat
ja
sbb
iret
imul
pop
lahf
je
stos
or
adc
xchg
jecxz
fisubr
popf
retf
pushf
(bad)
loop
xchg
pop
ins
cmps
xchg
popa
push
mov
ud0
ret
fst
fild
xchg
test
and
push
repz
call
cld
loope
dec
ss
retf
lods
and
jg
mov
inc
pop
mov
outs
data16
das
push
sbb
xlat
sub
fwait
mov
xchg
jge
pop
push
test
mov
clc
push
loop
dec
outs
nop
mov
adc
xor
jmp
mov
or
sub
outs
(bad)
add
adc
movs
daa
xor
dec
pop
mov
inc
aaa
push
or
je
pushf
ins
inc
and
inc
and
jl
adc
mov
or
push
cmp
pop
dec
cs
or
hlt
fmul
and
not
or
pop
pop
xchg
push
mov
movs
fcomp
gs
jge
bound
fdiv
sub
cwde
xchg
jmp
in
scas
pop
mov
jmp
pop
aaa
add
test
loopne
lea
push
mov
ins
mov
test
outs
imul
cmps
pop
pop
jbe
stc
sbb
stos
cld
int3
xchg
fcomp
mov
xchg
cmp
add
jmp
sub
push
and
inc
imul
out
ins
(bad)
cli
jle
jae
bound
jbe
sbb
jl
imul
mov
push
ret
and
les
in
mov
in
push
imul
push
nop
jmp
movs
int3
cmps
scas
sub
lods
cs
out
xor
jb
pop
mov
xor
sbb
icebp
mov
push
js
out
test
fstp
xchg
rol
add
xor
sti
test
pop
push
stc
dec
in
push
ja
pop
mov
push
test
shl
fmul
lods
cwde
adc
push
cmc
mov
lock
mov
jno
push
outs
test
mov
push
arpl
pop
fistp
jno
or
stc
pushf
xchg
push
push
cmps
mov
imul
add
jg
xor
push
jne
dec
inc
inc
lods
pusha
ds
hlt
xchg
data16
fnsave
sbb
sbb
add
shr
pop
fadd
stos
push
jle
inc
test
int
and
es
sub
mov
sub
inc
pop
inc
add
jnp
or
mov
mov
sti
mov
rol
add
jae
mov
pop
or
out
dec
push
test
data16
dec
jae
cli
mov
pusha
lods
jl
lock
(bad)
push
push
aad
mul
loope
xor
(bad)
cli
dec
or
mov
jne
mov
inc
mov
(bad)
pop
ds
fucomp
cmc
xchg
aad
daa
mov
icebp
outs
cdq
or
les
test
sbb
popf
push
dec
jae
and
inc
icebp
mov
in
bound
out
jle
(bad)
push
fwait
jle
sub
mov
ss
gs
into
xor
shl
pop
mov
repz
pop
adc
(bad)
jb
jp
jo
inc
sbb
vpcomuq
sub
fidivr
sbb
sub
and
xchg
movs
stos
aam
in
adc
bnd
ret
sub
cmc
mov
pop
lea
push
lods
test
int
adc
add
jo
test
ja
out
add
pop
fisttp
retf
push
fimul
jle
cs
jp
in
xchg
hlt
jl
xor
aas
mov
int3
mov
call
inc
jnp
cdq
movs
adc
mov
shr
push
scas
mov
xlat
mov
out
fdivr
add
fwait
jle
pop
stos
(bad)
(bad)
outs
cmp
lock
push
clc
shl
mov
push
test
xor
jae
xchg
and
out
ja
and
inc
dec
cmp
pop
mov
es
push
shl
and
cdq
ds
retf
mov
test
jne
xor
in
push
fnstsw
mov
xchg
inc
cmps
jge
jns
(bad)
popa
mov
mov
data16
and
cmp
push
add
add
jl
outs
and
jne
adc
push
mul
xchg
data16
jae
(bad)
jecxz
int3
popf
mov
jge
loope
cli
cwde
xor
mov
repz
sub
add
mov
out
cs
or
popf
popf
imul
dec
adc
and
push
dec
or
lock
repnz
stos
mov
ret
sbb
pusha
mov
jp
pop
scas
or
xchg
cli
cmps
lds
stos
inc
xor
je
mov
imul
enter
jmp
add
mov
ds
(bad)
in
out
jle
nop
(bad)
test
mov
es
mov
pusha
adc
adc
daa
pop
imul
int
push
jl
xor
or
pop
xchg
pop
(bad)
out
mov
add
jbe
ret
mov
mov
pop
mov
sub
mov
gs
rcr
shr
or
mov
aam
cs
push
pusha
cmp
push
les
das
nop
into
mov
or
pusha
xor
scas
mov
hlt
call
mov
(bad)
or
push
int3
rcr
adc
mov
popf
(bad)
and
mov
mov
jge
mov
adc
leave
fisttp
dec
mov
adc
cmp
sbb
xor
jl
jmp
mov
in
(bad)
jp
fsubr
out
cwde
dec
push
fs
loopne
xchg
jo
shl
xchg
movs
xchg
mov
inc
ja
pop
(bad)
fwait
iret
or
pop
jno
cmp
in
stos
cld
in
fisub
xor
lahf
jno
test
sbb
xchg
xchg
jns
jmp
nop
mov
jl
push
mov
jg
scas
int
mov
mov
sbb
mov
xor
mov
mov
cdq
dec
jns
mov
repnz
xor
mov
sbb
sub
les
lods
shl
aaa
test
lea
inc
vpavgb
sbb
addr16
mov
sbb
stos
and
mov
mov
sub
mov
rcr
and
or
aaa
sub
sub
jp
xchg
xor
dec
push
rcr
shl
inc
cmp
xor
inc
clc
lea
jae
jne
cli
enter
nop
jecxz
xchg
imul
sbb
(bad)
jle
xchg
stc
and
scas
cwde
mov
inc
gs
jnp
jp
xlat
jmp
mov
mov
adc
je
test
std
in
mov
(bad)
std
repnz
lahf
mov
hlt
arpl
add
adc
pusha
sbb
mov
inc
dec
div
mov
pop
in
pop
int3
dec
sub
sbb
mov
mov
into
or
loop
jmp
push
or
xchg
sub
pop
dec
xchg
xchg
icebp
jmp
dec
pop
ficom
sub
mov
cmp
jecxz
adc
pop
fdiv
jns
adc
sub
fisub
cmp
rcl
clc
daa
cmp
es
aaa
aad
jge
sahf
mov
sub
(bad)
in
add
jge
nop
(bad)
pop
shr
test
mov
sub
or
rcr
in
push
retf
mov
in
icebp
cld
add
mov
sahf
cdq
push
outs
int3
jmp
gs
or
fdivr
cmp
xor
aaa
pop
inc
not
add
mov
cs
mov
pop
cmp
mov
cmps
mov
das
(bad)
pushf
por
push
out
sub
sti
push
cmps
stos
push
xor
mov
in
in
jnp
cld
stos
jmp
popf
mov
ret
cmps
or
mov
jnp
call
sub
dec
inc
ins
sbb
not
push
in
lods
pop
mov
in
sti
int3
stos
sub
idiv
mov
shl
mov
adc
cmp
jnp
jge
jno
inc
fucomi
pusha
sahf
or
repz
dec
adc
addr16
xchg
dec
xchg
xlat
add
(bad)
and
shl
fcom
jge
cmps
ror
push
push
scas
sbb
(bad)
xchg
push
inc
sbb
jmp
pop
shl
cmc
mov
cmps
shl
inc
int3
inc
mov
ret
pop
cmp
xchg
mul
ja
ss
dec
inc
test
push
(bad)
dec
jmp
dec
sbb
lods
xor
jle
sub
out
inc
sbb
push
shl
pop
xor
sbb
push
sub
sbb
loop
test
mov
imul
dec
fdivr
cmc
test
ins
test
cmps
mov
gs
out
bound
jmp
or
out
xor
(bad)
outs
adc
xor
dec
add
adc
lea
cmp
xor
(bad)
xchg
out
cdq
push
add
aam
add
int
mov
adc
adc
fwait
inc
add
adc
adc
test
iret
movs
js
(bad)
sbb
data16
push
gs
mov
jle
add
mov
div
mov
jg
or
pop
xor
push
jno
sub
ret
pop
retf
inc
xchg
pushf
adc
not
popa
xlat
sbb
jae
dec
and
lods
push
(bad)
jae
xor
fcomp
jno
inc
jb
xchg
jns
stc
cmp
jmp
push
dec
out
cld
dec
xchg
and
sbb
sub
dec
dec
je
addr16
push
cdq
xchg
mov
pop
out
ret
dec
jmp
inc
pop
mov
xor
aas
pushf
pop
test
xchg
cli
mov
addr16
loop
ror
retf
push
stos
dec
retf
into
popa
and
in
cmp
push
in
sahf
sbb
and
jmp
ins
loope
cwde
xlat
sub
ret
lods
jbe
(bad)
jecxz
push
cmps
mov
int
lods
pop
icebp
xchg
in
loop
adc
test
cwde
adc
push
pusha
add
inc
aam
fs
sbb
and
popa
push
dec
mov
dec
push
sub
loope
jnp
adc
(bad)
xchg
rol
xor
inc
out
pop
and
gs
push
dec
add
jbe
inc
mov
xchg
xchg
inc
dec
xor
ret
call
xchg
(bad)
adc
cmp
stos
call
xor
mov
scas
sbb
and
dec
mov
repz
jg
inc
sbb
cwde
iret
inc
stos
mov
pop
sbb
ins
repz
jo
int
ins
iret
push
push
aaa
fbld
mov
stc
aas
sub
sbb
out
push
mul
mov
repz
into
cs
jecxz
gs
sbb
cli
inc
push
test
inc
jg
xchg
and
pop
sar
push
or
bound
repnz
ret
and
loope
test
fbld
shl
rdmsr
aam
dec
and
stos
xor
sahf
test
pop
or
in
sbb
ds
imul
mov
aam
mov
popa
xchg
mov
loop
adc
js
pushf
push
daa
fnstsw
mov
shr
sub
int3
adc
pushf
push
arpl
pop
leave
scas
mov
lods
repnz
jecxz
adc
ret
mov
jbe
rol
aaa
cmp
(bad)
sbb
adc
jae
push
int3
out
push
xor
add
add
inc
push
(bad)
bound
or
dec
add
lods
leave
outs
retf
sbb
and
sbb
inc
scas
das
fstp
test
clc
add
loopne
das
sub
inc
mov
fisub
imul
add
xlat
pop
cmp
pop
jo
push
sahf
ss
idiv
idiv
rcr
imul
cmc
sti
cld
jmp
mov
push
pop
out
out
pop
mov
sbb
push
jno
dec
jp
dec
xchg
cdq
fldenv
lahf
cmp
cwde
aaa
add
in
add
jbe
mov
mov
sbb
stc
cmps
int3
test
cmp
mov
imul
sbb
jle
adc
bound
test
jmp
lods
add
mov
push
gs
mov
pop
pop
int3
in
out
shl
pop
jmp
add
add
push
and
add
mov
leave
adc
aam
enter
mov
sbb
out
jge
cmp
mov
aas
or
jmp
cli
sub
loop
sub
in
sbb
jbe
cwde
inc
int
inc
mov
in
lods
movs
dec
mov
or
mov
test
test
cs
idiv
pop
jl
out
jne
add
dec
xor
push
or
out
loope
in
(bad)
adc
pop
adc
popf
loopne
fcom
jmp
int
inc
out
call
adc
adc
xor
pop
fucomp
aaa
pop
mov
sahf
inc
prefetchw
or
iret
mov
mov
scas
leave
ss
adc
adc
mov
imul
lods
cmp
xchg
iret
fstp
cli
clc
leave
dec
mov
lahf
sbb
xchg
sub
jle
mov
stos
sti
cmp
inc
mov
sub
test
dec
scas
xor
jae
pop
jecxz
je
imul
pop
aas
xchg
call
data16
test
rcr
inc
add
jecxz
adc
jns
les
jmp
into
movs
dec
rcr
lods
xchg
scas
mov
xor
cmp
cmp
jp
retf
mov
xor
adc
(bad)
push
test
adc
dec
loopne
int3
call
jo
and
dec
(bad)
jbe
rdpmc
rol
adc
sub
cmp
mov
ds
(bad)
shl
push
inc
and
cli
retf
mov
(bad)
(bad)
mov
mov
out
imul
test
pop
cmp
js
cmp
mov
inc
jnp
and
inc
inc
add
jl
ins
das
test
cli
retf
sub
mov
lahf
(bad)
popa
or
in
push
inc
dec
into
ja
sbb
mov
push
xchg
ror
pusha
inc
pop
xlat
inc
dec
scas
push
mov
test
adc
jb
fistp
inc
mov
pop
iret
or
(bad)
xor
xor
jmp
jbe
jns
push
sti
and
data16
inc
dec
jle
xchg
sbb
stc
je
mov
mov
fwait
push
test
and
movs
stos
pop
jmp
(bad)
test
push
pusha
jp
jmp
xchg
mov
nop
mov
mov
jno
add
sbb
out
add
arpl
cmps
sub
pop
shl
mov
jns
(bad)
shr
or
test
sub
out
fisubr
ins
div
stc
repnz
shl
jp
mov
or
aas
imul
int
add
jecxz
pop
add
dec
ins
(bad)
out
and
enter
int3
and
cmp
mov
in
sar
(bad)
cmc
ja
pop
or
fisubr
jo
or
jle
add
sub
iret
(bad)
sbb
add
mov
jp
in
xchg
push
stos
push
jae
jb
push
mul
clc
mov
loop
sub
sub
ficomp
mov
inc
imul
enter
adc
mov
cmp
repnz
aas
and
or
xchg
das
adc
fs
lods
push
mov
std
test
sbb
dec
sbb
xchg
and
or
xor
rcr
xchg
outs
inc
xchg
scas
jl
push
stc
iret
inc
test
mov
jbe
jnp
jno
adc
jns
cmp
xor
mov
shr
and
jp
ret
sub
int
pushw
in
sbb
pushf
pop
and
shl
pop
mov
pop
test
or
sbb
ins
ins
iret
add
cmp
sub
stos
inc
mov
(bad)
push
add
(bad)
das
es
sbb
sbb
mov
and
cmp
(bad)
int
add
xchg
adc
int
add
push
sbb
fistp
xlat
pop
sub
and
(bad)
pop
pop
jbe
aam
gs
add
push
and
pop
es
out
arpl
icebp
or
push
out
pusha
dec
ins
push
and
not
dec
push
pop
push
out
cld
xor
cmps
mov
sbb
(bad)
in
mov
add
ret
pop
sbb
adc
dec
xchg
add
or
pop
rep
fcom
out
popf
arpl
mov
jno
in
add
inc
fwait
xor
les
scas
fadd
push
in
jl
sub
into
loope
cmp
ficomp
lods
jmp
push
sub
sbb
cdq
inc
iret
shl
pop
test
fwait
pop
push
or
mov
test
ror
push
inc
dec
push
pop
fsub
loope
and
das
xchg
cmp
fs
mov
mov
xchg
int3
cmp
add
cmps
aad
loope
outs
test
mov
push
ret
and
adc
fsub
fadd
xchg
jecxz
mov
pop
je
dec
cs
fsub
xchg
pusha
push
and
icebp
push
jmp
pop
cwde
stc
test
pop
push
mov
aas
jmp
jp
ja
fsubr
mov
cmp
cmp
aaa
jbe
inc
cld
sbb
sbb
pop
inc
or
sbb
repnz
rcl
mov
jnp
jg
jmp
fs
pop
aaa
cdq
mov
and
in
stc
and
das
int3
aas
mov
cs
bound
clc
in
dec
pop
pusha
(bad)
jae
adc
adc
arpl
cmp
jge
frstor
pusha
mov
adc
inc
pop
cmp
xchg
iret
cmp
dec
rol
mov
pop
stc
xchg
pop
and
out
xchg
movs
loop
or
mov
jmp
and
mov
sub
test
es
pop
pusha
bound
mov
lock
cli
jne
jno
jle
dec
mov
xor
(bad)
xor
push
aad
pop
push
cdq
js
jp
stos
out
jg
pop
daa
je
movs
cmp
pop
stc
sbb
sub
jbe
(bad)
sbb
dec
aad
inc
inc
cmp
cdq
inc
pusha
je
dec
int3
sbb
repz
outs
iret
sbb
mov
or
cmp
mov
(bad)
in
leave
movs
push
xchg
jne
jo
arpl
test
push
jg
inc
imul
mov
inc
or
bound
aaa
and
xchg
cmp
cmp
(bad)
in
add
ins
mov
inc
sub
add
aas
lahf
jmp
mov
je
test
retf
adc
cli
pop
push
lds
and
add
neg
out
mov
dec
fadd
mov
dec
aas
test
repnz
and
pop
add
cmp
and
or
adc
add
cdq
movs
call
cs
lock
adc
adc
mov
mov
xchg
das
rol
movs
mov
sahf
jge
and
std
mov
sub
retf
pusha
ins
mov
bound
push
jbe
cmps
cli
jmp
arpl
mov
rol
xchg
fidivr
xchg
pop
es
or
mov
sar
shl
add
or
xchg
xlat
in
inc
ins
clc
std
call
test
int3
gs
fcmovnu
add
enter
push
dec
cmp
sbb
adc
push
mov
and
popf
fistp
sahf
jge
cwde
test
test
and
inc
mov
cmp
sub
sub
cmp
cmp
xchg
lahf
add
imul
lds
inc
xor
sub
fwait
dec
mov
test
aad
push
pop
(bad)
int3
xor
sub
pusha
dec
lea
xchg
mov
in
mov
xchg
in
xor
(bad)
ds
and
ja
inc
or
dec
gs
pop
dec
stc
cli
icebp
mov
xchg
test
dec
ins
movs
and
push
cmp
imul
xor
push
in
inc
dec
fsubp
popa
(bad)
aas
int
lods
fnsave
into
retf
jnp
aas
(bad)
inc
fdiv
sub
mov
je
inc
test
das
or
retf
add
pop
push
cmps
mov
nop
or
das
mov
stos
lods
(bad)
fidivr
std
xor
fnstcw
and
dec
out
dec
inc
jae
xchg
jno
xchg
or
ds
or
dec
out
xchg
mov
enter
and
aaa
dec
xchg
add
mov
sti
inc
stc
movs
mov
xor
and
(bad)
ficomp
ss
jo
pop
(bad)
xlat
cmp
test
sub
inc
(bad)
xchg
inc
dec
arpl
mov
adc
xchg
dec
fidivr
hlt
ins
sub
xor
test
jns
push
mov
add
cmps
test
mov
rol
adc
adc
jne
sbb
iret
lods
sub
pop
ins
or
aaa
mov
out
lds
imul
js
fmul
movs
mov
pop
mov
jbe
jl
outs
cmp
call
mov
mov
push
jmp
outs
or
ss
iret
pusha
(bad)
mov
nop
es
dec
adc
fdivr
jb
(bad)
daa
and
xor
pop
inc
cmp
mov
and
and
call
mov
cmp
(bad)
js
jb
add
add
fdivr
in
adc
fisub
dec
mov
loopne
jmp
int
mov
dec
ret
xor
xchg
lea
ins
ret
add
shl
mov
sbb
pop
mov
mov
push
cmp
aam
push
in
add
xchg
pop
xchg
mov
test
ja
fild
sub
mov
clc
sbb
sti
enter
and
mov
push
out
sub
pop
lds
pop
jbe
push
lock
or
fsub
mov
aas
in
push
mov
add
(bad)
jbe
inc
repnz
into
jmp
out
mov
dec
push
xchg
push
xchg
ins
aas
xchg
xor
xchg
mov
inc
sub
ror
and
adc
retf
push
imul
and
pop
jmp
aas
and
retf
inc
xchg
inc
cli
pop
inc
xchg
aad
xchg
mov
cmp
cmp
mov
rol
pop
fwait
mov
mov
dec
and
jb
cmp
adc
int3
in
sar
cmp
xchg
lahf
std
frstor
adc
loopne
retf
add
in
imul
xchg
cld
jp
adc
es
xchg
nop
and
data16
inc
xchg
dec
fprem
jae
add
jmp
retf
xchg
xchg
mov
pop
call
in
mov
gs
imul
mov
icebp
(bad)
mov
(bad)
into
call
mov
pop
hlt
mov
dec
dec
mov
jo
jno
fwait
cmp
mov
call
xor
aas
fwait
push
ja
fs
fdiv
jge
or
or
push
rol
adc
ret
scas
pop
pop
mov
and
sahf
xchg
or
iret
aam
jmp
sahf
ds
aam
sub
and
call
sar
hlt
(bad)
mov
xchg
xchg
aad
mov
push
cmp
pop
sahf
dec
lahf
cmps
mov
jne
mov
ins
xchg
lods
jge
pop
loop
call
xchg
mov
nop
popa
jmp
retf
das
push
lahf
ins
pop
data16
sbb
jl
or
and
std
mov
cmp
aam
icebp
add
mov
adc
cmp
xor
push
dec
imul
mov
push
mov
(bad)
imul
(bad)
js
pop
inc
std
stos
mov
imul
fidiv
fstp
dec
mov
sti
call
cmc
fisttp
fnsave
mov
jl
ins
pusha
sub
ss
sub
sub
xchg
adc
movs
jl
adc
sub
aam
int
adc
inc
mov
inc
push
sbb
jle
push
lock
ins
or
dec
mov
sub
adc
mov
mov
pop
inc
jns
xchg
outs
pop
retf
hlt
lock
(bad)
mov
aam
outs
inc
aad
push
sbb
into
in
cli
xor
mov
outs
add
(bad)
xchg
sbb
jge
push
mov
icebp
pop
sbb
dec
push
push
mov
pop
bound
inc
pusha
in
icebp
jecxz
test
call
xchg
mov
inc
jno
pop
(bad)
rcr
push
addr16
push
pop
dec
js
stos
push
mov
shl
popf
sub
mov
pop
push
fwait
xchg
mov
mov
inc
ror
(bad)
xchg
sti
mov
mov
frstor
scas
mov
std
xor
jmp
dec
xchg
xlat
push
push
jnp
dec
inc
es
inc
or
mov
sub
jne
adc
mov
leave
popf
retf
xor
repnz
xor
jge
movs
mov
jg
popa
(bad)
jp
pop
aas
cdq
nop
jge
sub
and
mov
adc
or
xlat
xor
jb
mov
lds
pop
int3
pop
iret
mov
or
int3
sbb
sbb
jno
mov
not
dec
shl
jo
loopne
hlt
cs
mov
enter
pop
inc
fimul
jmp
es
pop
xor
and
lock
fisubr
imul
jg
mov
jecxz
jb
imul
mov
sub
sub
outs
ins
xchg
ds
fcom
(bad)
data16
(bad)
xchg
xchg
shl
nop
xchg
jle
in
jo
pop
ins
mov
push
cmp
(bad)
shr
xchg
cmp
push
inc
push
inc
cmps
nop
pop
(bad)
repnz
mov
sbb
out
and
mov
aad
push
sbb
loope
mov
pop
std
mov
pusha
pop
fsubr
mov
add
in
fidiv
loope
sbb
cmp
les
mov
adc
les
jmp
int3
cmp
mov
hlt
test
mov
dec
pushf
or
test
or
inc
jb
mov
(bad)
jmp
mov
rcl
push
push
dec
icebp
mov
mov
pop
shl
pop
ret
xchg
int
mov
sbb
cmps
aas
inc
sub
adc
test
cmp
das
(bad)
not
jle
retf
in
(bad)
arpl
ins
jno
sub
sub
cmp
test
leave
and
cmps
cli
mov
cmp
jbe
ds
ret
mov
fldenv
or
arpl
xchg
push
sbb
(bad)
out
(bad)
jecxz
ss
fild
xor
and
push
(bad)
movs
clc
es
pop
inc
adc
not
add
popf
pop
dec
pop
xchg
ds
imul
xchg
dec
inc
clc
pop
inc
sti
loopne
daa
das
ss
sbb
xchg
push
mov
jns
mov
adc
inc
pop
leave
sub
xchg
imul
mov
mov
popa
enter
loopne
test
push
mov
sbb
xchg
cmp
pop
outs
cmp
mov
lds
mov
fcmove
push
mov
test
jns
jle
rol
mov
arpl
jl
cmps
out
jmp
outs
add
std
lahf
xor
adc
rcl
xchg
cld
sub
cmp
mov
mov
or
cmp
pop
mov
or
jb
fwait
aad
pop
gs
(bad)
mov
xor
cmp
cmp
mov
gs
ins
xchg
mov
cmps
test
and
xor
add
add
cdq
movs
mov
daa
test
pop
mov
add
in
sbb
cmp
hlt
mov
cli
gs
div
jmp
pop
sub
cdq
mov
sbb
ss
scas
cmp
xchg
aaa
rcl
push
jl
push
outs
in
pop
pop
pop
popa
test
push
rcr
sbb
leave
lahf
xchg
jne
cmc
sub
xor
aad
out
fadd
test
rol
js
cmps
pop
pop
mov
call
add
jmp
pop
dec
mov
mov
fimul
xor
pop
cwde
push
popa
test
in
fisubr
pop
out
mov
pop
mov
xchg
mov
push
clc
(bad)
out
add
xchg
int
inc
les
sbb
mov
sbb
std
xchg
dec
repz
push
std
(bad)
out
stos
fisub
mov
sar
retf
sub
xchg
(bad)
loope
je
int3
fild
iret
adc
add
xor
dec
adc
(bad)
fcom
push
call
shl
jbe
push
lea
std
ret
jl
push
pop
push
add
mov
mov
jo
stos
dec
adc
dec
xchg
stos
inc
(bad)
stc
adc
cmp
in
shr
xor
mov
je
push
jmp
clc
xor
cmp
mov
jecxz
inc
jmp
mov
cmps
or
jns
dec
stos
lock
jnp
div
lock
xor
jbe
push
pop
mov
fcomp
mov
imul
jle
jmp
xlat
jae
inc
loop
les
mov
retf
inc
jb
ins
xchg
scas
dec
inc
fisub
sub
jne
icebp
stc
aad
enter
xchg
sbb
loopne
push
ins
mov
cmc
mov
adc
les
clc
and
pop
mov
outs
std
rcl
call
sbb
(bad)
ror
sbb
and
dec
cld
mov
jmp
mov
(bad)
jnp
jl
cmp
les
inc
sbb
cmps
dec
and
(bad)
and
jo
add
cmc
aad
out
mov
nop
rcl
bound
xor
xor
xchg
sub
mov
and
add
jbe
imul
pop
cmp
inc
test
out
(bad)
xchg
fst
std
and
cld
loop
js
lea
pusha
inc
fcomp
add
lock
sub
loopne
fs
pop
int3
adc
test
and
mov
adc
sbb
ret
rcl
shr
xor
daa
xor
cli
adc
cld
retf
jle
cmps
mov
daa
inc
mov
pop
add
rcl
mov
add
cld
pop
inc
sbb
dec
dec
loopne
jo
jp
pop
adc
dec
mov
jmp
jmp
adc
pushf
inc
mov
cld
inc
push
jge
push
out
(bad)
cmp
mov
movs
dec
cmp
arpl
test
push
xlat
xchg
dec
dec
mov
adc
iret
clc
call
(bad)
movs
fsub
out
fisub
adc
and
sahf
mov
outs
fwait
test
cld
dec
mov
dec
and
rep
push
mov
xchg
test
mov
pop
add
sbb
shr
cmp
push
xlat
fidivr
mov
leave
mov
in
imul
add
fmul
(bad)
scas
popf
(bad)
mov
in
das
jnp
es
jbe
add
cmovg
lahf
xor
xchg
pop
ret
movs
and
addr16
dec
es
push
xor
pop
(bad)
push
(bad)
jl
adc
xchg
sbb
jmp
xchg
sub
and
add
js
mov
dec
xchg
mov
or
pop
xchg
cmps
pop
nop
or
in
mov
imul
movs
adc
jnp
cmp
movs
mov
std
push
pop
out
js
adc
and
dec
adc
jae
das
mov
xchg
or
add
addr16
pusha
mov
or
leave
lods
jg
push
fbstp
enter
sbb
and
or
add
jnp
cwde
daa
pushf
jmp
pop
pop
inc
jne
mov
test
fidivr
add
adc
ss
lds
push
and
jge
lds
mov
or
jmp
enter
and
jnp
mov
push
mov
dec
int
lods
cmp
ret
out
loope
ja
adc
jmp
call
out
cmps
xchg
scas
out
bound
js
and
push
je
cmp
ds
imul
mov
test
jge
lea
scas
lds
mov
cld
fistp
loope
imul
fwait
js
add
dec
cs
daa
mov
inc
out
inc
jae
mov
adc
mov
sahf
call
or
jmp
(bad)
xor
or
push
arpl
shl
inc
cmps
push
xor
icebp
mov
mov
adc
and
cdq
imul
test
mov
in
pop
mov
mov
cmp
pop
push
add
ins
loop
dec
pop
stc
adc
push
sub
stc
(bad)
jg
sar
and
outs
jae
mov
mov
pushf
mov
dec
out
sub
inc
sub
sbb
stos
cmp
sub
cmp
sti
adc
pop
xchg
xor
add
or
xchg
or
cmp
js
loope
es
sbb
js
xor
pop
jle
cli
push
or
adc
gs
or
retf
or
imul
and
aaa
sti
jns
jg
fistp
fbld
jp
call
pop
(bad)
ja
pop
test
(bad)
jo
stos
mov
setns
push
inc
xor
popf
and
daa
pusha
dec
fldcw
imul
mov
nop
rol
js
iret
sub
inc
lds
clc
mov
ds
mov
cli
and
imul
aam
adc
pop
hlt
push
das
cdq
lea
jbe
fild
rcl
popf
ror
adc
mov
push
arpl
dec
stos
or
or
enter
mov
jno
ret
sub
fsubp
retf
adc
jecxz
fld
std
iret
mov
repz
js
adc
aaa
loop
dec
jno
pusha
je
dec
sbb
jl
scas
leave
add
movs
aas
push
cmps
cld
jns
js
daa
cmps
cmp
lahf
mov
jno
je
inc
cmc
mov
ret
jb
retf
(bad)
gs
or
xor
stc
jge
push
stos
sbb
add
inc
adc
adc
jo
fist
arpl
sub
xor
add
jp
cwde
lods
jae
call
mov
pushf
adc
ror
lahf
cmp
das
outs
ret
mov
pop
test
inc
imul
ror
(bad)
mov
retf
lods
int3
ss
push
or
or
xchg
fisubr
pop
outs
pop
jp
fldlg2
push
xsavec
sahf
neg
nop
retf
out
mov
jp
daa
jecxz
and
fst
mov
pop
mov
push
mov
sbb
add
mov
das
adc
scas
sbb
cmp
add
sbb
test
(bad)
xchg
mov
push
add
jno
jecxz
or
and
daa
ins
icebp
icebp
add
int
mov
and
test
fild
dec
mov
pop
fscale
jae
push
mov
pop
js
fs
mov
rcl
xor
cmp
fmul
test
lock
jbe
out
rol
mov
adc
mov
in
dec
jl
das
loopne
cmp
in
and
push
sar
xlat
adc
js
push
cmp
imul
push
xor
sahf
aaa
fst
popa
and
adc
mov
and
fwait
xchg
adc
xor
outs
cmps
int3
pop
inc
jae
inc
mov
mov
idiv
out
inc
or
outs
fwait
cs
(bad)
repz
repz
movs
mov
mov
scas
jg
gs
outs
inc
aaa
das
mov
mov
xlat
and
pop
outs
shl
or
dec
dec
sbb
sbb
loop
jg
or
daa
dec
pop
mov
push
and
inc
sub
pushf
out
jns
sub
xchg
mov
cmp
push
sbb
adc
lock
pop
xchg
out
sti
aas
cwde
test
data16
shl
mov
ins
loopne
mov
xor
pop
add
pushf
mov
scas
out
and
cmc
xor
lods
fcomp
jb
mov
out
jmp
push
cmps
or
inc
xor
or
jb
xchg
sub
pop
movs
xlat
cmps
ss
cld
enter
nop
sub
loope
ja
scas
outs
out
and
outs
addr16
mov
push
in
aam
movs
mov
xor
jg
ret
jns
push
(bad)
push
(bad)
dec
stc
out
(bad)
jbe
enter
inc
lock
add
sub
call
dec
cmp
aaa
out
sbb
jecxz
or
mov
shl
push
push
dec
ds
sub
adc
mov
lock
popf
or
sahf
fnstenv
push
loopne
stos
cli
fidivr
sub
outs
and
pop
xchg
std
mov
jno
xor
push
out
fild
out
retf
fs
add
dec
mov
inc
ror
nop
xchg
loope
mov
stc
out
mov
int
(bad)
mov
gs
imul
xchg
and
cmp
rcr
mov
ds
inc
push
adc
fisub
(bad)
sub
(bad)
jns
dec
daa
ret
inc
pop
jl
outs
gs
ss
mov
ret
mov
(bad)
xor
icebp
jbe
inc
pop
cld
aas
lods
sbb
daa
sbb
push
test
push
add
mov
or
mov
pop
(bad)
mov
jbe
mov
mov
stos
cmp
stos
popa
sub
mov
mov
and
les
or
pop
mov
das
call
jo
pop
mov
(bad)
nop
enter
add
(bad)
(bad)
std
cs
and
andnps
loop
fsub
mov
pop
mov
aas
jo
rcr
or
out
dec
jnp
mov
push
retf
popa
loop
pop
call
mov
cmp
(bad)
rol
mov
mov
adc
mov
sub
fsub
ret
rol
mov
imul
jnp
jg
test
jle
(bad)
cmc
in
jno
into
and
jecxz
push
dec
into
das
arpl
mov
lods
rcr
push
fcmovnbe
rol
sub
pop
inc
or
jmp
xchg
js
push
pop
xchg
repz
dec
sbb
lahf
fcom
jnp
mov
jmp
movs
(bad)
pop
jle
lods
rcr
movs
jne
cdq
mov
and
test
and
mov
sbb
mov
ret
xchg
cwde
dec
inc
mov
push
inc
fist
ds
in
pushf
jmp
xor
imul
fs
sub
dec
shl
cmp
cmp
dec
push
adc
pop
inc
repz
adc
iret
and
neg
inc
sub
cmp
add
mov
sub
(bad)
cmp
cmp
xlat
push
sub
mov
mov
jge
out
xchg
cmps
fld
xchg
mov
lods
sub
xchg
sbb
pop
movs
fcom
xchg
mov
lea
arpl
sub
inc
shr
jecxz
repnz
cpuid
jne
cmps
add
mov
inc
(bad)
sub
gs
sbb
add
mov
dec
mov
sub
dec
cld
cmp
jne
imul
repz
mov
cmp
push
pop
lea
adc
dec
jmp
jns
pop
cmps
or
add
xchg
xchg
mov
dec
push
aas
xchg
cmps
jbe
inc
lea
iret
aas
mov
and
sub
retf
(bad)
stos
xor
xchg
sbb
cld
sbb
add
not
sub
cmps
into
mov
arpl
js
xor
jbe
test
mov
ror
push
out
leave
imul
adc
test
loope
xor
aam
pop
mov
add
inc
mov
daa
in
enter
nop
fsubr
cmps
mov
(bad)
push
data16
add
add
out
and
mov
fs
arpl
add
dec
(bad)
loopne
pop
(bad)
iret
jmp
clc
outs
push
xor
data16
mov
inc
xchg
imul
addr16
jg
in
xor
repnz
call
and
add
jp
push
xchg
sub
mov
ins
jno
xchg
add
sbb
xchg
cmp
mov
or
out
mov
xchg
push
out
loopne
out
or
mov
mov
mov
push
mov
mov
inc
ret
pop
test
sub
push
(bad)
and
sbb
rcl
push
fcmovne
sub
add
inc
addr16
and
outs
outs
data16
test
jne
xor
in
inc
call
mov
sbb
movs
xchg
gs
imul
mov
and
and
jno
rol
aaa
movs
movs
popa
pop
mov
cmp
mov
inc
sub
inc
call
dec
loop
mov
jge
mov
cwde
ss
shl
in
ins
out
loop
(bad)
push
push
xchg
mov
push
mov
sub
jle
call
out
jae
jae
ret
cmp
push
jp
(bad)
leave
push
jge
dec
and
(bad)
push
pushf
xchg
js
mov
ror
leave
popa
shl
aad
cld
fucomip
lahf
(bad)
int3
sahf
arpl
fidiv
clc
xlat
sbb
out
into
out
clc
jo
sub
push
mov
xor
and
mov
jle
mov
rcr
mov
test
iret
mov
or
add
add
sbb
mov
mov
movs
leave
loope
aaa
stos
sub
inc
fld
mov
out
mov
and
pusha
cmp
stos
(bad)
pop
lods
mov
outs
push
movs
sub
ins
test
jbe
xor
ficomp
fwait
(bad)
fist
push
jnp
sbb
sub
je
push
loop
dec
loopne
in
inc
loop
scas
mov
pop
dec
jl
aam
add
(bad)
loop
stos
jle
gs
sbb
lods
mov
cdq
mov
dec
ds
mov
ret
adc
ret
push
loop
(bad)
sub
scas
cdq
inc
xchg
inc
les
or
mov
add
xchg
push
jo
push
pop
xchg
aaa
popa
xchg
mov
sub
neg
jmp
fild
loopne
dec
sub
mov
inc
lods
cmp
in
inc
xchg
or
cmc
lds
push
sub
pop
pop
fnstcw
cmp
jno
cli
(bad)
cmp
sbb
jae
push
test
icebp
or
or
call
mov
je
imul
jle
cmp
mov
mov
pop
jnp
out
test
xor
fld
push
xbegin
xor
dec
push
(bad)
xchg
jge
push
js
(bad)
jae
and
das
div
push
and
sti
cmc
or
mov
scas
fsubr
(bad)
icebp
addr16
push
sub
push
icebp
dec
and
repnz
add
push
inc
retf
std
and
fisub
lods
or
sub
rcl
out
shl
rol
jge
daa
cmps
pop
adc
fild
or
fidiv
fs
xlat
mov
test
nop
xchg
pxor
fistp
loop
or
mov
test
inc
mov
cmp
adc
(bad)
out
mov
add
cmps
into
int
push
sub
push
fistp
cli
fiadd
mov
add
cwde
ins
dec
mov
mov
pop
push
jbe
sub
xchg
int3
mov
enter
(bad)
adc
cs
xchg
push
pop
pop
in
pop
inc
popa
jae
pop
cmp
es
int
aas
lock
mov
inc
loope
sub
inc
or
push
inc
shr
pop
sar
aaa
pop
add
test
arpl
cmp
dec
leave
leave
loopne
add
xchg
data16
cs
sti
and
enter
dec
cmp
aaa
jle
ret
cwde
sar
xchg
std
int
(bad)
lds
add
loopne
in
mov
dec
iret
fisttp
mov
pusha
loop
push
clc
rcr
aaa
cmp
test
in
jbe
sub
je
shl
jae
fdiv
add
xor
dec
shl
(bad)
fnsave
add
mov
xlat
xchg
mov
xlat
outs
js
ret
xor
xor
jmp
inc
push
lods
jecxz
scas
stos
movs
les
ss
and
in
shl
xor
xor
fs
fnstcw
ret
sbb
dec
pushf
loop
in
inc
mov
fcomp
inc
dec
(bad)
lahf
push
(bad)
scas
leave
in
out
aad
mov
into
sub
data16
cmps
popa
icebp
icebp
les
sub
push
rol
sub
(bad)
neg
js
test
cmp
cmp
xchg
mov
retf
fmul
push
rol
sub
jge
or
xlat
sbb
popf
iret
das
dec
movhps
inc
xor
mov
mov
dec
nop
retf
push
cmp
in
sti
cmp
ret
(bad)
stos
lea
nop
adc
into
bound
xchg
movs
mov
xchg
mov
mov
stos
aam
dec
(bad)
sti
out
fsubr
add
pop
aas
jp
test
adc
leave
sbb
inc
inc
jo
dec
outs
mov
jp
(bad)
lds
leave
xchg
fcmove
dec
push
mov
pop
pand
jg
add
nop
mov
mov
mov
iret
pushf
add
jae
push
adc
adc
mov
mov
(bad)
call
pop
xchg
mov
or
adc
into
cmp
sub
jb
repnz
inc
cmp
lea
push
stc
(bad)
sub
loope
into
icebp
in
aad
call
jno
std
mov
fcomp
ja
sub
lods
jb
push
sahf
les
movs
pop
xchg
fistp
xchg
out
jo
inc
push
lahf
fld
jmp
lock
rep
nop
test
push
jbe
lea
cmp
lock
dec
shr
int3
in
push
mov
imul
sbb
dec
(bad)
mov
fnstcw
cmp
mov
adc
pop
push
dec
add
xchg
fwait
ins
mov
sbb
pusha
sbb
inc
xor
dec
(bad)
stc
sub
sub
xchg
jmp
or
jmp
inc
aaa
jb
(bad)
dec
adc
loop
daa
and
adc
shl
inc
shl
add
cmp
retf
das
push
mov
xor
cli
sahf
mov
mov
(bad)
fcom
xchg
mov
into
sbb
nop
cdq
mov
cmp
jb
(bad)
mov
add
xchg
dec
jg
cmp
(bad)
fist
mov
mov
fwait
xor
arpl
inc
cmp
out
push
mov
mov
add
mov
and
nop
xchg
call
stos
push
int3
mov
ins
push
(bad)
jb
sbb
ror
stc
push
sub
fsubr
pop
and
inc
xor
fist
loop
imul
sbb
push
out
mov
shl
test
imul
jb
movs
sbb
sub
jg
imul
ficomp
lods
mov
in
adc
cmp
push
xor
mov
push
adc
sub
cmc
pushf
scas
js
pop
int
ret
stos
jmp
jne
aad
fdivr
frstor
aas
int3
inc
movs
sahf
lds
nop
inc
bound
pop
mov
stos
sbb
mov
jne
dec
and
or
xchg
add
mov
dec
inc
mov
cmp
sti
(bad)
lahf
fadd
pop
and
cmps
cmc
ror
dec
sbb
sub
call
cs
dec
add
fs
aad
cmp
pop
daa
fistp
stos
sub
popa
xchg
test
mov
xchg
das
pushf
and
jge
pop
call
ja
xchg
out
push
(bad)
mov
cmps
push
cmp
lea
mov
mov
and
adc
dec
outs
fistp
retf
aam
mov
adc
or
ja
shl
movs
push
lahf
inc
jg
pop
push
push
outs
or
or
jmp
ficom
fsubr
std
mov
or
push
push
xchg
aam
add
mov
int
ss
imul
and
scas
xchg
mov
add
sub
(bad)
xchg
mov
xor
div
lods
stos
mov
add
mov
add
sti
push
stos
scas
mov
xchg
or
jecxz
pop
outs
mov
test
inc
adc
jp
mov
mov
icebp
inc
jnp
jnp
sub
lea
jb
jmp
mov
ins
sbb
sbb
sti
dec
jmp
dec
ja
inc
retf
add
xchg
cwde
ficomp
mov
test
sbb
mov
and
adc
repnz
lods
and
cld
jo
push
sahf
popf
pop
push
xchg
cli
xchg
mov
and
scas
cmc
mov
or
mov
jno
xor
xchg
push
mov
jae
mov
ja
aaa
add
int3
loop
addr16
sbb
lods
imul
inc
xchg
out
push
lds
mov
ds
dec
mov
mov
inc
sub
push
pop
faddp
adc
mov
xor
xor
mov
add
loope
fmul
push
xor
dec
pop
fwait
ret
scas
xchg
retf
xchg
inc
idiv
or
dec
(bad)
lock
scas
pusha
je
mov
inc
aaa
retf
xor
stos
shl
mov
fild
xchg
int
xor
(bad)
out
and
sbb
dec
not
pop
div
aad
pop
or
jl
cmp
mov
mov
les
adc
sbb
jg
les
push
xchg
js
adc
cmc
ja
outs
ds
icebp
rcr
inc
mov
cmc
push
dec
es
inc
add
into
mov
cmc
and
aam
pop
repz
sahf
loope
ins
adc
jge
in
mov
movs
cmps
stos
jbe
jne
push
rol
xchg
inc
cmc
stos
jno
cmp
clc
stc
std
scas
pop
mov
call
fnstcw
repz
or
xchg
into
fmul
lock
jnp
in
enter
mov
fidiv
in
xor
cs
jmp
scas
loope
push
jmp
mov
mov
test
lock
xchg
inc
enter
push
repnz
xchg
xor
out
inc
dec
inc
pop
xor
jge
test
gs
or
and
fwait
jns
mov
adc
xor
(bad)
(bad)
sti
mov
xchg
mov
mov
cmps
mul
jmp
xor
imul
push
xor
xchg
mov
xchg
test
out
jo
mov
outs
mov
lds
dec
sub
cmp
jl
cmp
es
dec
pop
js
dec
jl
or
rcr
test
fs
inc
xor
das
add
jo
pop
sub
mov
out
stos
cmp
xchg
sub
outs
add
push
adc
int
idiv
dec
outs
inc
stos
ja
ja
ror
xor
jmp
gs
jmp
cld
inc
int3
xchg
std
mov
sub
dec
or
or
mov
cld
lock
push
and
iret
cmps
mov
aaa
ror
stos
mov
fnstcw
repnz
rcl
lock
jb
lock
sar
js
in
int
add
adc
int3
adc
je
jmp
jo
mov
pushf
lods
shl
(bad)
jb
mul
das
test
pop
inc
les
push
dec
mov
dec
sar
dec
stos
mov
movs
adc
lock
inc
sbb
push
push
mov
retf
das
and
(bad)
hlt
rcr
add
std
inc
mov
xor
push
xchg
sub
jmp
js
fldcw
add
in
sbb
or
fucom
in
call
jg
and
mov
sbb
push
pop
fst
add
cs
test
mov
je
outs
pop
cmp
int3
push
fcomip
cmp
lahf
sbb
mov
(bad)
movs
sbb
inc
and
leave
dec
mov
jl
(bad)
cli
out
arpl
pop
(bad)
dec
les
cmp
mov
aaa
inc
xchg
test
push
pop
pusha
mov
scas
sbb
test
jecxz
arpl
mov
mov
cli
xor
and
and
jae
xor
cli
lds
add
xchg
call
sbb
xor
cmc
lods
inc
out
and
or
fucompp
and
jb
out
mov
and
js
cmps
ins
jbe
dec
mov
pop
sbb
lea
dec
jb
imul
arpl
jle
add
popa
mov
in
out
dec
ror
mov
xchg
in
add
push
mov
test
lds
mov
xor
xor
imul
mov
inc
and
loop
push
enter
dec
cmp
pop
nop
aas
pop
pop
ja
rcr
cmp
jp
jb
push
shl
xor
stos
mov
and
add
lods
aam
dec
nop
xchg
pop
fcom
jmp
sub
add
cmp
mov
pop
imul
loopne
bound
rcr
je
inc
(bad)
mov
repnz
dec
sahf
or
or
cmps
mov
inc
add
rcl
cmp
push
jne
imul
mov
mov
stc
js
sub
cmp
lea
test
fmul
or
push
cmp
jo
xor
and
sbb
dec
ja
repz
in
call
int
mov
and
xchg
inc
pushf
xchg
sysenter
in
ins
xchg
addr16
mov
cs
xlat
cmp
xlat
push
lods
std
jne
mov
dec
dec
js
and
fadd
cmc
mov
movs
lahf
dec
pop
sbb
inc
inc
cmp
in
adc
jno
out
scas
movs
pop
sub
ss
addr16
mov
push
jbe
cs
je
sub
fisubr
inc
es
sbb
movs
outs
add
(bad)
pop
xchg
sbb
cmp
repz
movs
loopne
sub
outs
push
outs
js
dec
shl
in
test
xchg
out
jnp
inc
call
test
fsubrp
pop
ja
(bad)
jb
and
push
pop
xchg
add
popa
mov
dec
ja
cmovb
test
lds
in
xchg
jne
push
std
jle
xor
xchg
sbb
xor
cmps
push
sbb
inc
arpl
jmp
pushf
dec
mov
add
repnz
icebp
jnp
sbb
xchg
jp
jbe
sbb
jl
and
jmp
xchg
xchg
sub
mov
js
sbb
pushf
fst
dec
sub
inc
aam
sbb
mov
mov
xchg
pop
push
and
ficom
cmp
jnp
mov
imul
test
jbe
imul
push
pop
lds
xchg
sub
xor
inc
xchg
test
mov
push
jmp
call
xchg
fld
mov
adc
mov
leave
les
dec
push
jmp
jmp
addr16
rol
js
jge
fs
in
aas
jbe
pop
add
jge
mov
cmc
mov
imul
pmulhuw
bnd
scas
ins
(bad)
jecxz
(bad)
bound
ja
shr
push
xchg
jne
push
or
push
jbe
outs
xlat
xor
xlat
and
fistp
test
jbe
scas
retf
rcr
add
popf
cmps
mov
ja
mov
inc
or
out
lahf
enter
jmp
cwde
jnp
arpl
and
mov
mov
fs
jbe
leave
fmul
div
(bad)
shl
or
and
inc
jecxz
aam
pop
(bad)
jmp
in
mov
dec
xchg
sub
mov
push
sahf
jb
adc
popa
fidivr
push
jl
jne
push
sar
outs
in
sub
adc
mov
ret
std
pop
inc
or
and
mov
cwde
mov
hlt
ja
pop
ror
jle
cmp
cmps
enter
cmps
inc
adc
mov
into
in
xchg
cmps
test
in
(bad)
dec
(bad)
leave
in
xchg
mov
retf
and
jns
cmps
loope
jne
fist
into
lds
push
pushf
sahf
xchg
dec
stc
adc
push
fst
mov
mov
int
xchg
and
mov
push
ficom
xchg
sub
les
push
icebp
int3
or
cmp
and
movs
sbb
inc
ins
ror
pop
dec
gs
jne
cs
mov
inc
dec
mov
out
mov
aad
int
jmp
or
leave
jo
stc
test
sbb
dec
jae
mov
outs
sbb
fimul
inc
and
or
cwde
(bad)
jno
mov
mov
dec
dec
xchg
jp
and
jmp
sub
pop
adc
push
mov
mov
pop
movs
adc
arpl
ins
sti
rol
int3
push
jmp
mov
(bad)
xchg
(bad)
mov
fwait
mov
push
adc
hlt
mov
mov
cs
fcmovb
fs
in
xchg
xchg
pop
out
and
stos
add
pop
mov
retf
jg
call
call
push
adc
mov
jbe
daa
ficomp
nop
mov
ds
and
adc
mov
int3
mov
outs
jle
sbb
lods
jo
sub
mov
mov
retf
add
scas
fsub
sub
in
push
test
stc
(bad)
aad
inc
das
shr
pop
shl
and
in
or
sbb
and
stos
loopne
add
cmc
jb
in
retf
push
add
sbb
call
xor
jp
scas
addr16
nop
arpl
retf
xor
xchg
sar
xchg
les
ret
cmp
adc
or
mov
mov
xchg
cmc
add
push
shr
jo
or
mov
std
cmps
test
hlt
ds
dec
shr
inc
xor
mov
xor
jge
jae
jns
push
jb
ror
sar
adc
dec
call
and
es
xchg
fstp
(bad)
dec
cmp
ror
mov
sbb
dec
adc
push
ret
jo
pop
ja
push
push
stc
aad
scas
or
push
icebp
fwait
mov
sub
lahf
mov
aaa
xchg
dec
push
pop
hlt
call
sar
clc
stos
sub
dec
xchg
mov
or
cmps
push
call
xlat
cli
outs
cli
fnstsw
xor
cmp
mov
loopne
mov
mov
jnp
fcomp
dec
outs
cmps
imul
in
repz
adc
das
mov
cmp
(bad)
sar
inc
nop
stc
out
xor
sub
test
ror
sbb
mov
mov
or
xchg
test
ja
(bad)
pop
fist
fimul
aaa
push
sahf
xchg
mov
jl
sub
sbb
pop
adc
push
pushf
sub
sbb
popf
icebp
lods
lahf
(bad)
cmp
inc
(bad)
jp
fisttp
push
or
fadd
shl
or
arpl
or
rcl
sar
pushf
retf
and
dec
sbb
sbb
sbb
add
sti
jmp
outs
xchg
mov
mov
pop
jne
das
aas
or
sub
(bad)
xlat
daa
sbb
das
daa
xor
int3
(bad)
push
jg
int
mov
es
cld
mov
jmp
xchg
es
data16
or
dec
add
pop
xchg
sub
push
loop
loope
cld
sbb
ds
loope
(bad)
cdq
or
cs
push
mov
xchg
lea
neg
lods
pop
cwde
mov
dec
repz
push
xor
lods
in
sub
ror
add
jmp
arpl
(bad)
pop
sbb
imul
mov
ss
les
xchg
cmp
data16
mov
call
push
push
movs
sti
and
leave
es
shl
gs
sub
jnp
lock
jns
movs
jae
inc
(bad)
pop
inc
lods
mov
jmp
or
inc
mov
inc
dec
sub
sbb
push
push
daa
aaa
or
and
rcr
icebp
adc
mov
sahf
jbe
ret
sahf
push
outs
dec
test
dec
cmp
sub
out
xchg
jns
call
xchg
sbb
loopne
push
loop
sbb
and
cmp
sub
add
xchg
push
in
xchg
pop
les
jno
sti
push
mov
retf
dec
mov
xor
aas
push
bound
js
fbstp
xchg
test
push
cwde
dec
mov
xchg
retf
mov
outs
jp
xor
sub
cmp
test
jp
mov
stc
pop
jle
mov
and
mov
or
pop
hlt
pushf
pop
sbb
call
sub
lods
inc
test
cmp
sub
inc
inc
sub
pusha
jp
rol
jae
cli
out
mov
or
sbb
push
or
pop
jnp
icebp
mov
or
sbb
jl
mov
pop
xor
bound
sub
and
push
inc
adc
inc
into
jno
stos
xchg
fdivr
cmp
pop
jl
sbb
es
retf
ds
dec
fisttp
inc
fld
cmp
inc
jns
jo
pusha
jo
repz
xor
ja
and
dec
pop
push
(bad)
nop
sbb
cmps
dec
mov
or
sub
ins
add
cmps
pop
add
fidiv
jbe
xchg
(bad)
fcomp
(bad)
in
outs
jecxz
test
inc
sub
add
xchg
popa
out
fcom
adc
or
fs
out
sbb
aad
pop
div
loope
fcmovnb
test
pop
push
lods
xchg
pop
loopne
push
les
stos
int3
ret
pop
sub
aaa
loope
lea
or
pop
push
push
test
jmp
dec
and
jmp
pop
xchg
dec
repnz
scas
pop
(bad)
jb
(bad)
or
call
cmps
test
dec
ret
scas
push
add
jns
mov
hlt
jns
xor
loope
mov
jp
add
xlat
cmp
stos
loope
nop
or
lods
std
sbb
mov
movs
repz
pop
outs
test
repz
jae
cmp
stc
dec
push
test
xor
mov
adc
push
push
sbb
jecxz
test
out
scas
mov
std
mov
inc
popf
iret
lea
or
mov
pop
stos
xor
inc
cwde
or
std
int3
pop
mov
push
cld
cwde
stos
lds
iret
dec
nop
test
xchg
pushf
nop
popa
or
cmp
pop
push
retf
pusha
in
jns
push
cdq
popa
mov
sbb
ds
cdq
lods
push
loope
enter
mov
ja
fidiv
ficomp
loop
cmp
adc
in
or
push
and
cmp
mov
xchg
mov
ds
cwde
les
adc
push
xlat
cmp
jno
fsubr
or
xchg
enter
jl
xor
sar
adc
sbb
div
jmp
push
mov
inc
pop
push
cs
fidivr
(bad)
lea
ja
enter
out
repnz
mov
mov
aas
fimul
stos
adc
shl
xchg
inc
scas
xchg
jo
mov
cli
xchg
ds
popf
pop
mov
jnp
push
cmp
repz
ret
dec
sbb
push
cmp
push
mov
xchg
ins
xor
cli
test
adc
sub
test
ins
and
xor
fld
xchg
loop
fld
pop
sbb
push
cmp
daa
aaa
xchg
cmc
out
jo
into
cld
sbb
jge
movs
arpl
push
test
pushf
jl
(bad)
add
lea
mov
and
ins
das
xchg
or
mov
outs
out
call
aam
cmp
(bad)
out
mov
mov
rcr
adc
jecxz
adc
shl
inc
out
jp
addr16
cmp
xchg
sub
ds
push
(bad)
jecxz
xchg
fisubr
out
xchg
add
dec
or
mov
sbb
test
aas
push
and
aad
je
movs
or
arpl
pop
outs
push
repz
rol
jnp
or
rcl
jmp
xor
xchg
dec
xchg
sahf
push
cld
fstp
sub
and
pushf
dec
push
mov
xchg
mov
icebp
add
aas
lods
mov
mov
jge
lods
mov
sub
rcl
jge
mov
inc
jge
test
add
sbb
pusha
rcl
jae
and
mov
rep
push
pop
call
repnz
xchg
out
xor
daa
adc
adc
and
xchg
dec
mov
fucom
cmp
adc
xchg
sbb
movs
cdq
out
(bad)
mov
pop
gs
and
cmp
mov
sbb
mov
mov
pushf
repnz
ins
or
shl
popa
sub
ins
cmp
jl
adc
xor
inc
xchg
sbb
sub
mov
adc
icebp
cmps
and
sbb
jne
inc
fsubrp
adc
xchg
xor
jge
or
inc
pop
adc
ror
mov
fst
addr16
arpl
stos
sbb
cmp
sub
mov
out
dec
jp
into
test
lahf
(bad)
into
clc
pop
fisub
retf
mov
push
fld
ret
adc
cmp
jne
inc
cwde
inc
ins
pusha
in
and
mov
shr
dec
lock
pop
nop
js
fs
mov
lods
(bad)
push
mov
jb
or
into
xchg
or
lahf
mov
mov
sbb
inc
mov
rcl
inc
ins
mov
jno
pusha
xchg
cli
mov
sub
sbb
cmp
and
sbb
ins
and
push
mov
fnstsw
dec
adc
or
ja
stos
pop
sub
or
fstp
movs
cdq
or
adc
jecxz
hlt
cmp
push
lds
dec
shr
in
sub
sbb
lahf
and
imul
(bad)
pop
xchg
shl
pop
jecxz
push
hlt
dec
xchg
addr16
inc
xchg
(bad)
aad
leave
and
jno
inc
sub
xor
sahf
push
loopne
das
sub
dec
push
in
sub
test
ret
das
popa
mov
or
jbe
push
and
xor
call
fisub
dec
imul
jb
push
ret
pop
ror
arpl
push
adc
fld
outs
mul
data16
mov
push
or
ret
push
movs
cld
icebp
cmps
inc
ficom
cmc
xor
xchg
icebp
stc
inc
pop
mov
ss
and
adc
aam
jae
ss
jmp
inc
pop
or
imul
push
test
repnz
ror
or
sub
adc
nop
adc
adc
into
sbb
cdq
jmp
and
dec
pop
mov
ficom
(bad)
mov
pop
mov
mov
mov
inc
and
inc
mov
push
push
shr
xchg
mov
dec
jbe
adc
cmp
(bad)
cmp
xor
out
shr
iret
stos
(bad)
shr
inc
push
sub
push
mov
add
pop
mov
mov
fld
popf
ror
or
rol
jo
fld
popf
outs
mov
pushf
cmps
and
or
jg
mov
fmul
mov
in
ret
out
sub
test
jge
jmp
iret
fnstenv
push
jne
and
cdq
sbb
mov
inc
mov
inc
fstp
retf
or
imul
xor
clc
sub
icebp
dec
outs
mov
cmp
mov
mov
call
retf
das
imul
into
pop
fdiv
pop
div
sub
mov
push
push
dec
ds
xchg
add
in
fistp
lock
sbb
arpl
dec
xor
cmps
popf
dec
sub
mov
push
pop
ss
jbe
(bad)
mov
inc
cmps
(bad)
xchg
mov
mov
and
push
aam
mov
mov
out
sbb
lods
rol
mov
sub
cmps
sbb
stos
mov
outs
jae
in
aam
sbb
pop
sub
mov
adc
sub
jbe
jne
push
adc
mov
rol
jb
adc
fimul
xrelease
fadd
sub
jb
cmps
adc
cmpxchg
push
test
nop
push
dec
shl
clc
test
das
sbb
add
push
shl
push
xchg
movs
sar
(bad)
dec
xchg
mov
or
sbb
retf
lds
fist
jns
xchg
addr16
test
hlt
or
cmps
mov
adc
push
cld
mov
mov
adc
rol
mov
xchg
ret
mov
xor
lds
fisttp
sub
inc
mov
pop
add
jae
out
jnp
inc
sub
mov
inc
js
aad
mov
rep
push
lock
movs
mov
ret
test
mov
jmp
and
fcom
dec
mov
sub
sbb
bnd
mov
int
pop
(bad)
sahf
sar
jae
jmp
scas
cdq
pop
adc
adc
icebp
cmp
mov
mov
mov
xlat
clc
int3
in
movs
mul
jae
push
dec
loope
inc
lds
sbb
mov
xchg
xor
dec
and
pop
xchg
lds
jecxz
iret
pop
jmp
jno
cdq
and
or
ficom
(bad)
adc
out
pop
inc
jnp
ins
hlt
neg
and
inc
inc
xchg
aam
cmp
inc
inc
sub
add
or
stos
cmp
xchg
xor
loopne
and
into
adc
inc
xchg
out
imul
jne
push
pop
dec
pop
dec
pop
adc
pop
gs
adc
aaa
push
dec
in
and
ret
ret
push
arpl
ds
jmp
dec
xchg
les
push
mov
pop
push
jg
out
mov
fcom
add
nop
inc
and
test
std
mov
out
add
inc
jecxz
ins
mov
jp
inc
jae
aad
bound
xchg
mov
ret
cmp
push
sar
arpl
clc
mov
xchg
sbb
sbb
fld
retf
pop
in
lods
and
mov
adc
pop
sar
mov
pop
(bad)
call
adc
cmp
mov
ret
mov
(bad)
repnz
jb
jle
pop
call
ror
scas
sub
imul
movs
jnp
push
inc
mov
pushf
neg
aas
sub
loopne
lods
cmp
imul
sbb
push
adc
cs
push
jg
jns
jo
xor
adc
fist
sub
imul
call
mov
add
neg
add
lahf
in
imul
loopne
pop
mov
dec
push
or
mov
xor
loope
push
fisub
mov
call
aam
add
lds
pusha
mov
jo
sub
int3
inc
repz
sti
call
ds
cdq
sub
repz
and
add
push
mov
daa
mov
je
cli
dec
push
push
mov
mov
test
add
add
stos
jecxz
inc
mov
jne
inc
fild
xchg
retf
and
test
lea
popf
lods
jmp
mov
jecxz
jge
ja
sbb
inc
cdq
call
pop
pusha
(bad)
push
(bad)
cmps
cmp
cmp
lahf
mov
pop
mov
lds
push
mov
ret
(bad)
fisub
pop
dec
ins
sbb
pop
lock
dec
add
inc
xchg
inc
pop
pop
dec
leave
push
push
and
mov
push
push
xchg
add
dec
cli
and
sbb
repnz
adc
(bad)
inc
outs
fisttp
(bad)
mov
mov
adc
inc
idiv
cmp
inc
add
jmp
(bad)
sbb
jo
rol
shl
lods
and
inc
mov
sar
xor
mov
js
jns
mov
push
xchg
or
cmp
je
aaa
lahf
ja
ins
jmp
sub
push
mov
imul
scas
jge
jecxz
jge
pop
lds
ss
xchg
or
fisub
jb
mov
xchg
or
pop
inc
cmp
add
add
adc
push
pop
push
lods
mov
or
out
loope
pop
mov
xor
sub
sub
hlt
shr
repnz
cmp
movs
pop
inc
jns
repnz
shr
or
aas
dec
pop
add
pop
pushf
xor
out
aaa
sub
movs
into
dec
dec
sub
push
inc
inc
mov
xor
mov
inc
add
dec
call
rcl
xor
popa
and
inc
jns
mov
sub
mov
fdivp
jge
xlat
dec
mov
jp
inc
and
popf
adc
sub
leave
cmp
ds
inc
(bad)
cmps
scas
xchg
mov
icebp
iret
(bad)
repz
dec
xor
and
lods
loope
jne
mov
push
and
xor
inc
cmp
es
mov
mov
sub
mov
xor
jmp
cld
movs
add
aaa
inc
ins
xchg
sbb
lea
adc
push
int
dec
lods
ret
es
pop
sbb
(bad)
xor
mov
retf
cmps
int
inc
test
xchg
jp
mov
push
(bad)
inc
das
fidivr
imul
push
inc
pushf
xor
inc
pop
mov
mov
fwait
(bad)
xor
out
and
and
imul
jmp
cdq
into
mov
add
sub
sar
jmp
adc
cmc
je
jno
mov
into
inc
bound
pop
scas
xor
push
dec
sub
or
cwde
and
ret
dec
mov
push
sbb
xlat
mov
nop
fcmovnu
cwde
sub
cdq
pop
push
ror
pop
xor
mov
jp
sti
jg
push
fimul
jle
ins
enter
jl
mov
nop
push
add
jbe
adc
out
and
dec
jecxz
nop
jl
out
inc
or
sub
dec
pop
jb
out
fiadd
pop
sub
ins
inc
cmp
outs
cmp
icebp
pop
cmp
and
push
jl
sbb
dec
dec
repz
cmp
fadd
dec
mov
jp
and
adc
mov
fidivr
jl
scas
imul
mov
out
pop
(bad)
dec
call
cmp
in
jge
js
push
pop
push
fldenv
daa
mov
sub
lahf
imul
repz
in
cmp
ret
fnstenv
push
lods
jg
loop
push
pop
push
ret
mov
fs
outs
stos
mov
(bad)
daa
cdq
sbb
mov
and
sub
sub
sbb
jmp
pop
scas
xlat
lds
cmp
inc
jmp
repnz
rcr
out
add
xchg
xor
jns
imul
mov
in
mov
mov
pop
cmp
stos
in
cli
and
add
jg
in
data16
call
jne
cmp
dec
add
push
(bad)
mov
int
scas
adc
imul
jns
ds
jo
dec
pop
test
call
cmp
lea
dec
cmp
aad
stos
scas
pop
mov
jge
sbb
adc
fld
outs
add
sub
dec
lods
dec
inc
xchg
je
or
mov
add
add
add
jne
push
fisubr
push
out
iret
mov
aas
outs
and
lods
cwde
or
xchg
and
xchg
add
ror
dec
jle
std
dec
fidivr
rcr
sbb
add
adc
inc
daa
push
hlt
shr
fimul
call
xchg
cli
loope
pop
imul
xor
bound
out
sti
das
adc
sti
out
mov
imul
(bad)
cld
cmp
push
or
loopne
cli
imul
hlt
pop
mov
inc
or
jo
shl
retf
shl
xor
pop
adc
icebp
mov
dec
pop
retf
les
push
xchg
hlt
add
mov
dec
aas
adc
aaa
dec
das
pop
sbb
pop
mov
jae
(bad)
mov
sbb
imul
out
push
cmp
xor
mov
jbe
inc
dec
aas
mov
mov
xor
frstor
ins
or
dec
fcos
stos
test
pop
cmp
jb
aaa
sub
and
inc
mov
retf
add
int3
pop
cmp
xchg
fs
jl
cmp
scas
bound
clc
les
push
sbb
fcom
call
xchg
inc
push
mov
data16
sub
add
xchg
icebp
loopne
dec
scas
add
adc
es
mov
in
jge
sbb
or
das
cmps
call
pop
xor
fdivr
std
int
pop
inc
pop
mov
push
popa
push
jge
dec
stos
retf
mov
push
and
fadd
ror
fdivr
test
in
repz
dec
adc
sti
lahf
cmp
push
aad
popf
cmp
dec
int3
fld
iret
icebp
retf
sbb
sub
adc
xchg
sbb
adc
fnsave
faddp
adc
sbb
xor
movs
dec
jno
add
dec
ficom
and
pop
imul
(bad)
pushf
bound
(bad)
loopne
mov
mov
xor
inc
les
lods
or
cmps
mov
pop
inc
mov
in
add
retf
or
idiv
repnz
pop
fwait
cmp
pop
sbb
ja
jecxz
cmp
lods
inc
jno
lds
adc
xchg
(bad)
call
cmp
inc
add
imul
stos
or
and
mov
sbb
pop
test
xchg
je
cmp
cdq
jecxz
push
addr16
out
and
inc
aam
fdivp
aad
cmp
fsubr
test
adc
psrlq
xor
adc
add
test
stos
jg
cmp
mov
push
call
cs
xchg
loop
pop
aad
sub
and
cmc
ins
add
jecxz
pop
(bad)
(bad)
and
shl
arpl
call
add
jge
mov
jecxz
mov
cmp
push
xchg
mov
retf
popf
popa
mov
xchg
and
lahf
mov
push
sbb
sbb
cmp
and
imul
add
push
push
xor
sub
cmps
das
push
dec
push
mov
sar
or
xchg
push
inc
mov
es
add
movs
loop
push
inc
movs
mov
ins
cmp
jb
imul
iret
mov
repnz
xor
push
imul
test
pushf
(bad)
icebp
xchg
std
test
fcomp
mov
test
mov
jg
or
mov
jnp
and
adc
mov
push
test
jo
sahf
in
pushf
pop
outs
js
xor
push
push
dec
push
in
je
pop
cmps
mov
xchg
xchg
repz
mov
scas
cld
ss
xchg
and
(bad)
enter
cmp
inc
out
inc
dec
aam
xlat
jns
or
sbb
lods
dec
lods
mov
rcr
sbb
cdq
repnz
or
mov
add
std
ror
daa
test
pop
test
mov
(bad)
in
shl
and
xor
push
push
or
sub
push
pop
rcr
test
fdiv
ficom
div
dec
or
lahf
sti
jb
dec
bound
popa
loopne
dec
xlat
jle
repnz
jo
cmp
gs
adc
cld
sbb
or
cdq
mov
inc
or
cmps
sub
aam
mov
xchg
dec
arpl
ror
jb
push
adc
dec
fistp
ret
jne
cdq
repz
jcxz
lods
xchg
lock
lock
nop
std
leave
push
push
push
ret
ror
lahf
stc
or
int
imul
xchg
inc
dec
addr16
cmp
jecxz
lea
xchg
jp
fidivr
mov
sub
imul
jmp
ret
jb
pop
jle
das
test
xor
cs
pop
dec
hlt
scas
jb
inc
mov
mov
(bad)
sub
dec
xor
mov
lods
(bad)
sahf
in
jno
cld
push
push
mov
test
(bad)
cli
adc
movs
pop
(bad)
ss
test
arpl
sbb
cld
lock
in
out
fwait
dec
cmp
mov
xchg
pop
xor
std
cwde
cs
jmp
in
clc
inc
and
imul
test
pop
add
cs
jmp
sbb
ja
retf
call
and
popa
inc
js
loope
shl
cdq
loopne
aaa
inc
cwde
iret
cmp
cmp
jmp
sbb
mov
scas
test
mov
std
out
sbb
pop
movs
mov
jp
sub
jle
cmps
hlt
loopne
outs
xchg
xor
add
(bad)
mov
dec
xor
pusha
mov
movq
adc
cmp
or
pop
shl
mov
outs
(bad)
in
sub
mov
mov
fsub
stos
repz
add
loopne
and
pop
out
push
test
cmps
into
data16
dec
sub
mov
adc
shl
loopne
test
sahf
adc
movs
fwait
mov
jo
pop
ret
in
dec
xchg
cmps
xchg
call
inc
addr16
(bad)
cmc
inc
xor
cmp
cmps
(bad)
fidiv
xchg
call
fxam
add
ror
out
or
out
fdivp
addr16
in
dec
pop
xchg
pop
xchg
fwait
adc
jmp
aaa
xchg
in
inc
xchg
imul
xchg
int3
in
shl
iret
xor
cmps
ins
loopne
or
je
(bad)
bound
lock
out
mov
imul
xchg
dec
cmp
outs
pop
data16
pop
mov
imul
sbb
jnp
mov
sahf
push
ja
cld
mov
data16
cs
cmp
pop
xchg
pop
adc
call
imul
add
rcr
and
fs
pusha
and
jmp
xor
add
sbb
jbe
and
push
fdiv
sub
jp
sar
sub
push
(bad)
arpl
imul
push
push
sub
mov
fst
lods
jmp
cli
ja
cld
dec
ss
cdq
gs
mov
repnz
sub
pop
inc
(bad)
adc
inc
arpl
in
cmps
jae
int3
rol
lahf
ret
xchg
or
(bad)
adc
inc
test
jnp
clc
sub
std
xchg
gs
inc
pand
mov
push
int3
rcr
out
test
jae
add
adc
add
push
mov
xchg
jmp
test
(bad)
ds
aas
neg
cmp
rol
push
xchg
inc
pop
shl
xor
jne
adc
scas
aad
bound
dec
cmc
ret
loopne
xchg
jno
icebp
ins
xor
rcl
jl
fist
xor
enter
nop
(bad)
fs
mov
and
xor
sbb
mov
js
mov
lods
mov
cmp
pop
xor
inc
(bad)
rol
movs
out
jbe
jb
aas
pavgw
adc
outs
mov
mov
icebp
mov
sbb
and
test
je
shl
loopne
or
icebp
out
xchg
mov
xchg
in
loop
pop
and
dec
jmp
fild
and
pop
mov
outs
bound
adc
bound
xor
mov
iret
shl
push
xchg
aas
movs
std
punpcklbw
dec
jns
movs
in
and
loop
adc
js
scas
add
movs
or
fdiv
and
(bad)
rcl
xchg
stos
out
push
lods
adc
xor
and
mov
adc
jbe
pop
cmp
sub
fisttp
fs
mov
mov
icebp
xlat
pandn
imul
pop
and
inc
leave
sbb
movs
out
aam
xchg
enter
shl
cmp
sub
mov
fidiv
dec
xchg
in
jmp
jp
cmps
jnp
sub
fistp
ror
icebp
and
sbb
das
xlat
push
push
mov
movs
jae
fld
xchg
ss
push
jae
and
push
loope
outs
push
frstor
adc
dec
cwde
adc
xor
stos
test
movs
std
dec
pop
mov
scas
push
imul
jg
lea
push
or
aam
fs
dec
test
and
fwait
jae
jb
jecxz
in
or
add
mov
cmps
in
icebp
das
test
sbb
cwde
or
jecxz
fnstsw
cmps
mov
push
jmp
ins
cli
push
mov
add
jecxz
inc
dec
jbe
cmps
jae
mov
fimul
xor
xchg
and
icebp
jb
and
nop
lods
scas
addr16
retf
xlat
nop
hlt
mov
arpl
scas
daa
xor
sub
sbb
js
js
cmp
jno
mov
test
not
inc
mov
retf
sub
bnd
into
pusha
sti
sub
sbb
cwde
(bad)
fist
cmp
test
mov
push
fist
or
cmp
test
dec
jmp
sub
stc
push
or
jg
add
fld
loop
mov
sub
adc
stos
ffree
jb
add
retf
jns
in
outs
or
out
cmp
enter
sub
sub
xchg
sbb
(bad)
icebp
add
in
pop
pop
rcr
sbb
cmp
adc
adc
imul
mov
jmp
shl
inc
lahf
pop
mov
inc
add
add
and
loopne
test
out
icebp
int
mov
sub
es
dec
xchg
and
cmp
nop
cmc
std
fdivr
repnz
fwait
cmps
bound
mov
add
push
xchg
ret
int
mov
inc
repz
or
xor
lods
xchg
imul
inc
loop
xchg
out
mov
aam
test
push
test
adc
fcomp
stos
jne
mul
je
add
sti
fxch
and
mov
xchg
adc
cld
popf
jl
into
xchg
cli
pop
jnp
cmp
sbb
lods
jbe
leave
cmc
xchg
adc
jb
and
lods
jmp
add
out
xor
mov
mov
lahf
hlt
repz
shl
ins
sub
bound
call
popa
fldcw
inc
ret
jmp
pop
popf
push
mov
aam
adc
imul
fsub
clc
repz
bswap
fadd
jnp
inc
push
es
inc
inc
inc
inc
xor
mov
loope
retf
dec
retf
mov
jnp
mov
mov
call
cmp
leave
adc
inc
jo
xchg
and
adc
fild
inc
sub
jg
addr16
addr16
mov
inc
movs
pop
sahf
hlt
adc
dec
mov
pop
pushf
xor
gs
or
stc
xor
icebp
mov
das
add
xchg
sbb
mov
mov
pop
xchg
xchg
xchg
or
into
xor
adc
sahf
lock
fiadd
into
mov
fbstp
lea
mov
fwait
jbe
(bad)
not
xchg
and
pop
imul
push
sub
inc
test
(bad)
aam
mov
mov
lds
shr
sbb
out
(bad)
sub
neg
adc
jo
add
mov
or
mov
fnsave
dec
mov
xlat
adc
push
cmp
int3
data16
push
lods
sbb
test
imul
test
cmp
xor
pop
mov
adc
mov
shl
pop
mov
inc
stc
push
cwde
out
jae
dec
cwde
mov
push
mov
mov
fld
out
pop
xor
cld
fidiv
cmp
push
pop
(bad)
jmp
dec
xor
add
xor
outs
xor
mov
add
cmp
movs
mov
loopne
inc
in
mov
stos
test
in
call
cld
and
xor
mov
jp
fdiv
mov
pop
mov
hlt
rcl
in
or
dec
leave
repnz
(bad)
cmp
rol
scas
cwde
mov
shl
retf
out
mov
sbb
jae
pop
fisubr
out
ins
(bad)
push
es
push
cmps
jg
mov
(bad)
push
neg
fist
mov
dec
fadd
xchg
add
pop
sub
pusha
mov
add
sbb
test
in
mov
into
inc
int3
movs
mov
daa
and
dec
add
push
pusha
dec
lea
lods
aas
mov
(bad)
outs
xchg
mov
adc
stc
dec
and
cmp
pop
ret
sbb
push
push
inc
mov
adc
jmp
enter
xchg
mov
or
pop
scas
mov
xchg
ficomp
icebp
sub
imul
outs
aad
inc
cmp
push
or
pop
(bad)
inc
scas
mov
jae
pop
and
mov
js
xchg
popa
adc
cmp
xor
push
pop
fild
cmp
stc
imul
jecxz
dec
stos
out
jl
sar
shr
loope
pop
das
xlat
out
mov
mov
adc
imul
jns
inc
mov
icebp
popa
scas
mov
ret
add
cli
call
mov
sahf
loopne
and
mov
fsub
push
inc
retf
rsm
xchg
pop
das
cli
xor
jp
ins
jne
cwde
sbb
pop
jno
ror
sbb
outs
mov
ror
or
sub
gs
inc
pop
(bad)
mov
bound
imul
sub
movs
add
inc
mov
dec
xchg
retf
ss
iret
mov
jb
jbe
jbe
pop
sbb
sbb
lods
sub
sub
push
add
imul
mov
xor
xchg
cmps
cld
or
cmp
out
jmp
mov
call
iret
push
cmp
test
idiv
cmp
popf
mov
cmp
add
in
popa
jmp
xor
jb
cmp
dec
mov
xor
push
lods
jne
jne
add
cmp
jle
and
rol
test
add
jge
popa
ffreep
push
add
push
dec
push
movs
int3
push
add
push
(bad)
lods
inc
mov
aas
cmp
dec
mov
movs
sahf
fild
loopne
cmp
movs
sar
arpl
dec
dec
push
xchg
hlt
repz
mov
xchg
inc
addr16
les
and
aaa
mov
mov
ja
pop
mov
mov
jmp
jne
pushf
inc
ficomp
xchg
push
sub
inc
movs
mov
and
cmp
or
loop
add
(bad)
popa
push
add
dec
(bad)
dec
xchg
pop
cmp
cdq
xchg
jmp
sub
in
xchg
repz
popa
pop
nop
jmp
jge
mov
push
cmc
cmp
cs
stc
mov
lea
add
mov
inc
and
add
sbb
mov
lds
inc
arpl
cmp
repz
pop
push
fs
xchg
call
fld
jmp
jo
das
pop
sahf
mov
jns
sub
ror
lods
ja
sub
inc
mul
scas
cmp
(bad)
cmp
sbb
iret
pop
cmps
in
aas
dec
inc
(bad)
pop
jmp
mov
out
mov
repnz
adc
cmp
push
and
mov
push
loope
inc
sub
ret
xchg
sar
push
xchg
or
inc
jne
xor
mov
das
stc
jg
jo
fst
xor
or
inc
inc
jmp
rcl
cmc
(bad)
ds
ins
cs
retf
mov
popa
daa
pusha
test
imul
cwde
add
add
shr
aaa
ret
in
sti
or
jge
fsubr
push
retf
mov
ss
sbb
cwde
stos
arpl
mov
fidiv
stos
leave
xor
add
(bad)
scas
adc
stos
stc
daa
jnp
rcr
sti
repnz
cmp
fcomp
ds
dec
outs
rcr
mov
jno
aad
add
inc
or
cmc
ror
mov
cli
jnp
mov
xchg
lds
push
scas
or
aam
push
mov
and
and
cs
ins
int3
or
stos
mov
stc
test
jb
fstp
loopne
push
test
pop
cs
push
adc
cmc
inc
aaa
sti
sbb
in
cli
jb
xchg
xor
ins
rcr
mov
retf
es
pop
ret
dec
sbb
pushf
not
push
imul
cld
test
push
scas
xor
scas
xchg
loope
icebp
loop
pop
fild
push
xor
sub
push
xor
loopne
mov
jae
sub
popa
sbb
mov
std
call
(bad)
mov
push
loope
mov
lea
xor
inc
add
pop
cmp
jl
sbb
frstor
mov
ror
mov
mov
and
mov
inc
jmp
mov
adc
fidivr
sbb
sbb
mov
jmp
xor
add
(bad)
jns
test
sub
inc
dec
ret
gs
aaa
jns
pushf
lods
cwde
or
cmps
mov
loope
cmps
lds
in
inc
jnp
jb
xchg
loope
jmp
add
fst
push
adc
push
cmp
rcl
shl
rcr
or
xchg
pop
inc
or
out
dec
stc
aam
clc
mov
ret
adc
dec
jbe
and
out
es
fbstp
mov
cmps
cmps
mov
inc
inc
movs
adc
jns
pop
fcomp
and
loopne
int3
ficomp
add
es
fistp
retf
cmps
mov
test
jecxz
pop
or
jnp
ins
sub
shl
xchg
sbb
rol
outs
and
push
push
jmp
sub
cld
jmp
neg
mov
enter
in
pop
into
out
push
sbb
xchg
inc
shr
rcr
aas
in
shr
xchg
in
ins
or
xchg
out
dec
xor
idiv
sub
or
imul
lods
daa
cmp
mov
cli
shl
and
mov
in
mov
adc
push
push
sub
int3
jae
push
scas
retf
xchg
(bad)
scas
add
lock
gs
push
push
ins
sbb
ss
inc
fisubr
les
ret
out
mov
mov
adc
push
adc
jge
adc
jbe
inc
sub
jb
lea
fnstsw
fidiv
jle
daa
inc
cmp
data16
jge
adc
test
and
lods
adc
mov
clc
lods
in
arpl
fadd
lahf
mov
xor
cld
sub
jno
mov
inc
fist
jmp
push
mov
repnz
xchg
aad
or
fild
lds
pop
push
mov
mov
xchg
jmp
popf
cdq
and
sbb
sbb
jecxz
in
lods
mov
lods
bound
pop
xchg
(bad)
loop
pop
addr16
push
stc
mov
jmp
iret
add
jl
sbb
dec
push
scas
(bad)
jno
pop
cmp
cmp
bound
retf
or
movs
inc
mov
inc
ins
push
shl
das
push
mov
arpl
add
dec
lods
xchg
sahf
ins
stc
arpl
mov
movs
fisub
mov
mov
cmp
aam
ret
lock
loop
popa
out
in
inc
push
xor
(bad)
jg
and
mov
ficom
and
and
pop
mov
fs
push
xor
(bad)
and
xor
mov
mov
fcom
jb
fldenv
dec
mov
(bad)
popa
xchg
adc
bound
js
jo
jbe
inc
(bad)
ficomp
xchg
cmc
and
lahf
sti
xchg
lahf
aas
fidivr
jmp
cmps
xchg
psrad
pop
pushf
mov
sti
push
mov
or
cmp
sbb
nop
shl
loope
repnz
push
hlt
ss
push
mov
or
pop
lds
adc
outs
out
daa
(bad)
jbe
and
adc
add
ret
(bad)
loopne
cs
cdq
pop
xchg
mov
pop
sub
push
mov
lods
jnp
and
push
jp
lods
movs
sbb
or
imul
cdq
idiv
mov
push
xchg
ins
dec
cld
test
or
adc
and
xor
mov
mov
sbb
mov
inc
mov
fild
push
mov
lds
stc
in
loop
inc
scas
add
sar
retf
adc
xor
iret
push
lds
inc
cld
sub
cmp
xchg
cmc
cmp
sbb
pop
scas
lods
cmc
jp
ficomp
in
xor
pop
inc
sbb
add
pop
mov
test
ins
or
jmp
test
cmp
mov
mov
mov
movs
daa
dec
cmc
mov
xor
pop
push
jmp
cmps
sti
and
pop
xor
bound
dec
cmp
adc
and
fdiv
imul
xor
or
adc
mov
inc
adc
test
es
call
inc
push
loop
lds
cmps
mov
cmp
xor
mov
mov
call
(bad)
adc
push
wbinvd
dec
arpl
jnp
cmp
aas
pop
lods
mov
and
inc
je
stc
cwde
inc
add
lods
mov
loope
sahf
push
popf
jmp
push
ins
(bad)
adc
xchg
jl
pusha
mov
sub
arpl
test
cmp
fidiv
inc
int3
xchg
scas
push
inc
sar
cdq
dec
dec
push
xor
fs
inc
imul
adc
test
in
pop
or
pop
dec
sub
jge
xchg
mov
cmp
mov
mov
mov
ins
mov
cld
lods
xor
xchg
retf
sbb
ret
and
lea
add
sub
dec
bound
fadd
jno
cmps
sub
fsub
inc
fwait
popf
jecxz
out
fcom
push
xchg
das
mov
stc
les
dec
jne
sbb
(bad)
push
pop
movs
jmp
mov
adc
call
scas
sub
sbb
stos
jle
mov
data16
imul
add
mov
loope
jnp
dec
or
fld
jae
lock
dec
inc
(bad)
(bad)
cmp
adc
and
sbb
jmp
add
std
push
xor
mov
mov
and
leave
push
pop
xor
cmps
jbe
jecxz
xlat
or
cmp
dec
fs
(bad)
frstor
cmp
push
out
add
xor
jbe
retf
push
bound
fsubr
popf
test
frstor
cmps
mov
pop
mov
sub
add
into
pusha
sbb
stos
pop
loop
push
scas
in
pop
jbe
lods
pop
out
or
mov
scas
push
push
jg
ins
icebp
fidiv
push
sbb
inc
leave
mov
cmp
gs
push
retf
arpl
xchg
popf
and
mov
jmp
push
cld
clc
mov
dec
sub
out
mov
add
push
jns
push
ret
js
sbb
leave
dec
call
sbb
ins
in
sbb
jmp
loopne
mov
lods
mov
stos
mov
pop
inc
rcl
xor
dec
and
cdq
push
add
mov
or
pop
dec
sbb
xor
cmp
cmp
loope
in
stos
scas
cmp
movs
out
and
mov
pop
push
movs
lock
cmps
dec
cmp
cld
out
pop
push
shl
fs
repnz
fmul
dec
movs
lea
packuswb
pop
pop
sbb
addr16
enter
jl
cmp
push
pop
lds
dec
imul
push
into
jl
popf
enter
std
jmp
dec
mov
addr16
les
xchg
lock
and
stc
mov
jecxz
loope
shr
mov
mov
fwait
xchg
shl
mov
ror
aam
ret
neg
ins
xor
std
mov
add
jge
js
dec
outs
push
adc
mov
push
inc
jle
stos
(bad)
fcmovne
scas
cmp
and
mov
pop
add
cld
mov
adc
or
das
jmp
dec
sahf
inc
bound
(bad)
(bad)
(bad)
stc
dec
arpl
fmulp
rol
ret
pusha
dec
mov
add
adc
pop
push
mov
dec
push
(bad)
xchg
mov
mov
push
ret
fmul
sbb
or
cmp
mov
jg
add
lea
xchg
sub
fimul
sti
mov
adc
jp
fbld
push
xor
shr
aas
mov
clc
inc
aam
mov
les
sbb
fistp
jno
adc
pop
add
mov
ret
sub
aam
int
jmp
mov
mov
fwait
leave
or
pushf
xchg
mov
inc
pop
ret
adc
cmp
ins
xor
pop
cs
ret
cmp
dec
xchg
and
out
das
sub
(bad)
repnz
fisttp
in
mov
sub
jmp
inc
(bad)
mov
mov
xchg
mov
shr
push
jmp
mov
movs
cwde
jmp
or
mov
jae
dec
add
bound
scas
dec
sub
mov
(bad)
out
in
outs
cld
pop
jbe
xor
pop
sbb
fwait
and
dec
pushf
sbb
pusha
sub
popf
xor
call
inc
mov
test
es
sub
cmp
cmp
lds
inc
fdiv
sub
pop
sub
dec
out
mov
sub
dec
movs
cs
cmp
jbe
sbb
jmp
sub
ret
pop
mov
fcmovu
pop
imul
or
xchg
push
shl
imul
(bad)
fist
xchg
fs
iret
push
jp
sbb
rol
dec
mov
call
jo
stos
repz
cmp
xor
sub
sar
std
and
dec
mov
adc
mov
inc
adc
lock
std
jg
test
dec
push
dec
mov
mov
adc
xchg
loope
cmps
js
jmp
push
nop
xchg
gs
icebp
add
sti
dec
sbb
test
(bad)
test
mov
jmp
fild
outs
data16
rcr
imul
pushf
test
sub
pop
sub
jecxz
shr
leave
add
ror
arpl
sub
pop
loope
mov
sub
not
sbb
mov
dec
ss
stos
adc
retf
or
jns
xlat
dec
dec
fbstp
pusha
mov
jns
dec
(bad)
push
icebp
enter
pop
xor
and
push
icebp
sbb
jle
out
mov
popa
jp
out
ficomp
int3
imul
mov
out
xor
mov
repnz
or
push
fimul
sub
inc
mov
inc
push
imul
or
mov
inc
test
lahf
jge
stos
retf
in
xchg
(bad)
and
mov
sub
inc
cmp
xor
dec
xchg
pusha
lock
push
sub
jo
fbstp
mov
push
cmp
xchg
adc
rcl
ins
cmp
fwait
enter
mov
and
sbb
pop
pop
pop
mov
sahf
mov
fiadd
or
movs
jns
in
jle
jmp
fdiv
push
iret
jmp
test
mov
les
push
test
adc
data16
mov
sbb
out
jge
mov
outs
mov
sbb
imul
xor
pop
push
mov
mov
lds
rcl
xchg
icebp
iret
adc
sub
xchg
push
into
div
add
shr
xor
rcl
ins
sub
stos
pop
imul
(bad)
out
fwait
mov
das
(bad)
sub
cs
xor
dec
mov
push
push
fisttp
mov
inc
lea
ror
xchg
mov
sti
hlt
ins
mov
in
ja
outs
sub
mov
inc
pop
js
scas
fsubrp
retf
jl
or
das
push
addr16
in
push
sub
and
loop
xor
test
add
jbe
test
cmps
inc
inc
scas
inc
inc
idiv
mov
mov
(bad)
out
mov
cmp
rol
xor
test
push
aaa
jae
mov
mov
xor
ins
aas
shr
in
retf
pop
cmp
test
sub
inc
add
sub
inc
mov
jmp
popa
aaa
mov
pop
mov
in
pop
aam
push
fisttp
aas
aaa
mov
push
bound
int
dec
adc
add
imul
jp
xor
dec
test
and
and
cmp
cmp
psadbw
xor
adc
mov
sub
inc
jge
xor
adc
jo
push
adc
sub
and
dec
push
cdq
iret
mov
pop
fld
aad
out
test
push
fcmove
das
mov
retf
inc
jbe
ss
out
out
cmp
jne
jo
sub
push
arpl
scas
adc
dec
sbb
hlt
mov
icebp
jecxz
(bad)
retf
cmc
and
ins
outs
adc
xchg
pop
pusha
enter
pop
shl
xchg
inc
int3
mov
jb
cld
cmp
in
test
ins
jge
lds
mov
call
xchg
icebp
mov
mov
add
sahf
es
out
cmp
and
and
add
mov
mov
into
stos
mov
fild
addr16
in
xchg
shl
jb
push
sub
(bad)
pop
xor
dec
add
or
pop
xchg
adc
(bad)
mov
cwde
retf
fstp
mov
not
jle
push
mov
inc
xor
lock
dec
jns
jb
push
jns
push
dec
jp
aam
in
(bad)
cld
sbb
ror
push
dec
dec
andps
push
ins
dec
and
and
push
ss
mov
ret
cmp
dec
mov
retf
pop
dec
lds
test
push
add
outs
sub
add
push
arpl
mov
dec
imul
in
sbb
xor
fidiv
aam
push
push
dec
pop
xchg
int
mov
rol
mov
cld
inc
dec
mov
dec
push
iret
or
sub
arpl
scas
cmp
ret
(bad)
mov
cmps
hlt
mov
xor
cmp
repnz
jns
add
into
mov
mov
lods
mov
sbb
cmp
lods
jb
ss
mov
repnz
jp
(bad)
cmps
push
adc
pop
pop
out
xor
btc
jmp
retf
push
sbb
je
sub
call
fistp
jo
and
shr
push
mov
xchg
fistp
adc
push
call
sbb
sub
sbb
rcl
xchg
and
cmp
push
jo
bound
inc
sbb
and
push
sub
test
pop
repnz
fcom
sti
adc
inc
rcr
mov
jne
int3
icebp
fwait
jecxz
xor
or
mov
xor
push
pop
xor
iret
rcr
cmp
ins
dec
xor
pusha
add
push
mov
cmps
ret
test
inc
mov
fcom
mov
cmc
sub
cdq
in
pop
push
neg
dec
adc
cmc
add
lea
dec
jge
cwde
js
inc
jbe
mov
cmc
cld
or
daa
pop
in
out
aam
push
sub
aam
lods
xchg
sub
outs
jle
and
push
lahf
cdq
aaa
xchg
inc
int
xchg
add
loope
add
mov
sub
cmps
repnz
stos
(bad)
fistp
outs
or
std
and
into
cmp
jnp
fild
test
inc
jbe
movs
cmp
retf
mov
fs
mov
das
in
call
ins
into
sub
ins
xchg
lea
mov
xchg
stc
jnp
lea
shr
push
jb
cmps
sub
fldcw
mov
mov
pop
test
fild
jl
push
mov
scas
fs
sub
sbb
fs
outs
cmp
dec
sub
ins
and
inc
stos
lods
xchg
mov
addr16
inc
clc
les
push
jmp
icebp
lds
ja
retf
stc
cdq
cmp
and
mov
clc
jmp
push
add
cdq
aad
gs
xchg
and
bound
sub
jl
cli
mov
or
mov
(bad)
and
stos
pop
gs
or
fdiv
jl
push
call
inc
mov
mov
xor
out
lea
dec
rol
ds
ja
ret
cmp
add
xor
sbb
pop
push
xchg
repz
dec
out
xchg
or
retf
loopne
and
std
adc
add
sbb
inc
pop
loop
inc
cmc
fst
fist
in
dec
mov
sub
push
xor
mov
sbb
fstp
je
cmp
sub
je
(bad)
dec
aas
xor
jge
in
mov
cdq
iret
aas
std
mov
fdiv
test
arpl
adc
pop
adc
mov
div
jmp
cmp
adc
and
rol
sbb
das
mov
xchg
fadd
mov
in
adc
in
jbe
and
inc
dec
hlt
pop
inc
lea
xor
in
js
or
jae
aas
ret
push
mov
xor
sub
nop
int
rcl
sbb
sub
cmp
dec
jle
retf
nop
push
mov
adc
pop
popa
add
ror
pushf
inc
(bad)
cwde
aad
pusha
push
cmp
push
mov
pop
or
jae
iret
add
ss
repnz
shl
jae
fnsave
mov
ds
xchg
xchg
cmp
cmp
dec
cmp
test
test
test
cdq
jl
addr16
sbb
jns
jmp
pop
scas
rcl
xor
inc
rol
mov
xor
mov
add
mov
jmp
les
sub
fmul
scas
pop
xor
adc
leave
les
loopne
sar
xchg
xchg
mov
cmp
or
cmp
adc
out
adc
out
sub
scas
call
sbb
xor
mov
sbb
into
out
jbe
push
or
inc
push
aas
push
outs
or
fcmovnbe
imul
lods
ret
jno
or
add
adc
xor
push
or
mov
imul
call
xlat
push
mov
fstp
dec
adc
jp
hlt
mov
rol
mov
test
add
mov
xchg
es
adc
xchg
js
fnstsw
inc
or
mov
(bad)
je
add
outs
into
and
inc
mov
mov
ror
push
lods
aaa
push
bound
dec
mov
push
xchg
dec
rol
adc
mov
xor
pop
mov
scas
push
sub
add
sub
jae
popa
inc
(bad)
cdq
or
rcr
mov
cmp
sbb
clc
ja
sbb
(bad)
imul
(bad)
sub
xchg
clc
add
mov
cmps
pop
jae
jp
mov
arpl
aam
cmp
pop
push
cdq
ins
pushf
retf
aam
and
push
aaa
mov
dec
sub
or
jbe
sub
push
cdq
adc
addr16
jnp
sub
adc
movs
int
adc
or
cmps
icebp
retf
sbb
int
dec
xchg
pusha
mov
xchg
inc
and
jmp
pushf
and
push
ins
xchg
dec
enter
ss
push
jecxz
push
xchg
rol
jno
int
fs
hlt
jmp
mov
lahf
scas
aaa
jmp
ffreep
jmp
cmp
(bad)
push
in
mov
ret
cli
xchg
test
inc
push
ror
adc
int3
dec
data16
ins
jo
add
test
hlt
rol
arpl
cmp
adc
ins
ds
stos
cmp
mov
or
mov
repnz
fst
leave
ss
push
push
add
pop
push
out
stos
imul
sub
inc
xchg
xor
enter
loopne
popa
mov
push
cmp
cmp
fcomp
sbb
xchg
xor
dec
sub
je
xchg
out
test
pop
inc
sub
bswap
cmp
jae
rcl
pop
xor
mov
pusha
sti
adc
in
daa
ins
jmp
and
popf
push
sti
loopne
or
mov
adc
fisub
rcr
mul
in
xchg
or
xchg
dec
pop
gs
sub
mov
or
ja
jbe
dec
push
or
xor
mov
je
fcom
lods
daa
outs
fisttp
sti
cwde
dec
mov
mov
clc
and
pop
dec
adc
mov
jnp
loope
xor
xchg
jg
inc
call
(bad)
xor
scas
mov
dec
pop
fcomp
adc
xor
popa
fcom
mov
hlt
(bad)
push
dec
cmc
out
(bad)
mov
scas
and
loope
mov
adc
loop
xor
ret
or
sti
imul
dec
in
neg
inc
xchg
icebp
inc
xor
add
dec
cwde
icebp
sub
outs
cmp
pop
out
or
sub
in
sub
and
adc
sahf
mov
xor
loope
jmp
test
lldt
addr16
xor
retf
jg
data16
pop
int3
sbb
jo
sbb
xlat
sub
mov
jmp
pop
sbb
jl
ror
add
and
hlt
lea
(bad)
bound
(bad)
jmp
mov
shl
test
add
pop
mov
in
jno
cld
sub
(bad)
dec
add
push
inc
mov
test
mov
xlat
test
mov
push
pop
xor
aad
jmp
cld
ret
or
pop
add
fadd
dec
xchg
scas
ret
and
cmp
mov
sub
push
mov
mov
mov
movs
sar
lahf
cs
cmp
push
mov
mov
sub
jae
(bad)
sti
sub
cmps
cmp
push
mov
mov
dec
outs
retf
inc
ret
add
out
aaa
neg
loop
or
test
or
dec
les
sub
xor
fs
gs
pop
mul
je
ror
aad
fst
outs
in
enter
sahf
jg
push
aad
dec
push
push
jbe
cdq
jns
ror
push
(bad)
clc
pop
and
mov
in
stos
dec
adc
int
cmps
jmp
dec
sbb
pop
mov
outs
daa
xor
jno
and
adc
and
shl
std
push
shl
stos
es
shr
add
inc
ds
call
dec
add
pop
jge
scas
adc
aad
xchg
push
or
xchg
pop
inc
push
adc
mov
xchg
mov
pusha
xchg
int
xchg
inc
jnp
dec
imul
xor
ret
cmp
push
adc
in
in
adc
xor
cmp
iret
mov
iret
std
mov
mov
mov
scas
push
stos
jnp
adc
xchg
out
callw
add
and
push
cmp
dec
pop
add
cmp
adc
scas
ins
xchg
dec
out
int3
scas
mov
in
icebp
inc
mov
jl
adc
loope
outs
ss
fsub
das
mov
lahf
jmp
jg
pop
stos
out
pop
cmp
stc
int
and
lahf
and
xor
lods
or
inc
pop
cmp
or
jmp
data16
jp
into
xchg
neg
nop
aas
cld
fbstp
xor
nop
jge
fld
sub
jne
addr16
mov
out
or
sbb
xor
push
ret
cmp
jge
pop
jo
ficom
cmp
jmp
adc
inc
lea
je
cld
push
loop
fadd
mov
mov
jae
dec
and
jo
lahf
rcr
mov
aaa
jno
xor
push
sub
arpl
cwde
inc
and
and
fsqrt
xchg
stos
push
iret
mov
sub
mov
ror
out
pop
jns
lahf
movs
pop
xchg
and
xlat
gs
cmps
cmps
jmp
stos
mov
outs
sub
dec
sub
mov
cld
movs
fadd
jnp
outs
mov
push
sar
xchg
mov
out
mov
jb
lds
adc
and
jmp
jl
cmp
push
div
popa
and
aam
inc
ds
jle
lock
fucom
jecxz
mov
int3
push
sahf
xchg
jecxz
std
out
(bad)
jmp
es
shr
push
mov
mov
push
dec
pop
pusha
fdivrp
xchg
xor
test
ins
icebp
arpl
bswap
dec
(bad)
adc
mov
push
cmp
jae
iret
add
push
std
repz
dec
mov
fisub
inc
arpl
mov
xor
fcomp
mov
sahf
or
cmps
cmps
and
cli
push
mov
jmp
xor
xchg
lea
rcr
dec
xchg
cmp
nop
push
enter
push
push
popa
hlt
(bad)
xchg
inc
in
sub
dec
inc
mov
dec
test
cld
int
add
mov
dec
lods
push
(bad)
push
(bad)
sahf
daa
add
fidiv
cmp
ret
(bad)
into
pop
xchg
sub
dec
xor
adc
cwde
aam
cmps
sbb
xor
adc
sub
add
or
add
xchg
mov
lds
out
jno
ins
mov
pushf
(bad)
lods
add
es
int
repz
ret
mov
cmps
add
push
cmp
and
or
and
aaa
sbb
push
xchg
or
inc
xor
mov
ja
mov
inc
cmps
inc
cmp
shl
out
test
repz
sub
adc
iret
fnstsw
out
cwde
xor
mov
adc
and
ret
int3
push
adc
ja
loop
fsubr
add
sub
adc
cmp
xor
adc
js
xor
jmp
cmc
jo
rcl
loope
outs
inc
jp
mov
in
mov
cmp
imul
call
adc
mov
pop
sbb
push
and
loop
adc
lds
mov
adc
mov
iret
enter
inc
mov
and
mov
xchg
(bad)
rol
pop
mov
pop
out
adc
pop
sub
nop
hlt
popf
xor
sub
xlat
mov
mov
test
add
lea
sub
and
cmp
cs
jae
mov
sti
push
and
xor
inc
std
lahf
xchg
je
or
jne
or
mov
dec
cmp
fst
mov
push
inc
stos
outs
sbb
jns
fs
retf
lock
rcl
or
movs
mov
mov
fwait
sbb
imul
stc
out
or
pop
out
push
add
sbb
fdivr
mov
out
retf
sbb
ffreep
adc
popa
mov
test
idiv
adc
xchg
jmp
pushf
out
mov
mov
stos
clc
dec
aas
imul
mov
dec
mov
ret
jo
xchg
lock
sub
cs
adc
adc
sar
sahf
xlat
sub
loopne
fsubrp
shr
jne
xchg
outs
inc
mov
aaa
sub
jp
mov
jle
cmps
mov
inc
out
jae
dec
pop
adc
js
pop
movs
sbb
popa
jmp
fisub
cli
cld
dec
pop
add
xor
fwait
ret
mov
cmps
(bad)
mov
dec
mov
std
je
jle
arpl
ins
test
cwde
cdq
test
pop
push
lods
mov
test
test
sbb
add
xchg
out
sub
or
mov
mov
ds
add
(bad)
aaa
mov
mov
out
out
stos
push
sahf
and
stc
or
or
fsubr
scas
and
add
in
push
jmp
int
pop
(bad)
scas
inc
shr
jge
xor
lods
push
cmp
loopne
dec
sar
adc
out
push
imul
retf
mov
das
ret
push
push
stos
popf
mov
lahf
dec
jae
inc
ins
scas
mov
(bad)
shl
popa
fs
xchg
or
fcom
and
xor
repnz
mov
mov
enter
pushf
test
sbb
shl
js
cmps
call
test
mov
(bad)
adc
dec
cmp
lahf
mov
xchg
fistp
cmp
sti
jl
pusha
out
icebp
mov
mov
jb
sbb
jg
cmp
or
fcomip
shr
xor
stc
xchg
xor
xor
loope
jmp
fdivr
pop
mov
test
mov
adc
mov
or
mov
dec
fwait
inc
inc
xchg
sahf
cwde
out
test
(bad)
out
pop
push
pop
jg
adc
stos
(bad)
ror
fisubr
test
xchg
outs
pop
cwde
add
push
imul
jno
xchg
jo
out
pop
daa
inc
dec
aas
mov
push
xchg
or
or
rol
fs
push
pushf
adc
paddq
out
jmp
call
xor
aaa
dec
or
repz
cs
fsubr
call
mov
adc
out
retf
xchg
dec
fs
repnz
ret
mov
mov
sub
push
fldenv
pop
cs
mov
inc
cmp
fist
add
ss
dec
push
icebp
mov
pop
mov
shr
push
push
gs
adc
mov
cld
in
int
popa
add
jb
pop
retf
scas
loope
inc
adc
pop
test
pop
cmc
call
fdivr
xor
or
ret
dec
adc
out
push
pushf
in
call
jo
xchg
push
or
mov
pop
into
stos
in
xor
pop
push
adc
jb
icebp
(bad)
aaa
mov
mov
mov
mov
or
pop
mov
enter
pop
dec
icebp
call
leave
in
xor
(bad)
adc
cmp
mov
(bad)
dec
scas
xchg
fcmovu
jnp
nop
xor
push
call
cld
inc
stc
addr16
imul
mov
lahf
shl
sbb
cmp
mov
popa
cmps
or
das
scas
add
out
mov
xchg
sub
mov
cmp
jno
sbb
cmc
pusha
inc
cmp
xchg
ss
jb
push
sti
outs
and
fnstenv
mov
into
pop
fwait
xchg
stc
inc
mov
xor
data16
jecxz
and
push
mov
push
xor
gs
add
icebp
xor
mov
sbb
push
int3
and
imul
push
sbb
and
push
inc
jge
in
out
xchg
std
aas
jno
pusha
mov
push
mov
arpl
int
jmp
mov
(bad)
sub
adc
inc
mov
fsub
adc
(bad)
iret
mov
mov
out
mul
ins
xor
push
push
mov
rcr
rol
popf
xor
push
mov
ret
mov
and
jg
ins
sub
sbb
scas
(bad)
ret
out
xor
push
dec
dec
das
cwde
pop
sbb
push
dec
or
mov
retf
fs
es
and
mov
aas
std
mov
jo
leave
and
dec
sbb
pushf
mov
cmp
shl
fdiv
mov
pop
jp
xchg
div
dec
xchg
mov
xor
fdivr
cmp
and
xchg
retf
adc
add
inc
cmp
nop
not
fbstp
lds
cdq
clc
jl
bound
mov
jne
sub
addr16
lds
out
test
(bad)
test
dec
mov
push
pop
repnz
mov
mov
jns
xor
fs
pop
shl
sub
sub
out
xor
into
mov
into
(bad)
mov
(bad)
cmps
mov
xchg
or
jbe
cwde
imul
xchg
jmp
sti
mov
outs
call
push
lock
ins
enter
mov
dec
lods
ret
pusha
loopne
mov
push
rcr
fnstenv
adc
mov
shl
popf
cwde
adc
imul
leave
stos
mov
dec
inc
xchg
pop
or
bound
and
sub
adc
mov
xchg
xor
pop
pop
sub
hlt
shr
adc
aas
add
ins
jge
xor
sbb
jg
cmp
sar
mov
out
ret
test
fwait
das
or
aam
fstp
sti
sti
xor
cs
jae
ret
jo
aaa
(bad)
loope
movs
mov
sbb
cmp
jl
mov
push
pop
retf
fimul
in
mov
jns
xor
test
aas
sbb
scas
neg
pop
pop
inc
js
call
sbb
pop
cmp
cmp
jo
cmp
dec
jo
int3
fiadd
movs
js
cmp
jae
push
int3
dec
loopne
dec
push
mov
xor
inc
mov
ins
adc
sub
shl
clc
cld
and
add
cmc
cmc
xor
or
mov
imul
fdivr
xlat
jmp
adc
mov
out
imul
pop
push
loopne
test
es
and
xchg
jo
hlt
mov
in
iret
xlat
sub
or
pusha
xchg
aas
jp
add
jle
sub
jp
lods
iret
xor
and
sbb
jmp
or
add
(bad)
retf
push
pop
hlt
out
dec
mov
push
fcomi
cmp
pop
add
inc
xor
cmp
pop
xor
stos
fisttp
das
adc
and
movs
fiadd
inc
into
xchg
pop
cmp
mov
std
xor
fcomp
mov
in
(bad)
mov
out
lods
cli
pop
icebp
sbb
sbb
fld
mov
mul
pop
jl
pop
pop
pop
(bad)
idiv
arpl
and
(bad)
cmc
push
lahf
jp
sub
test
add
dec
sahf
imul
mov
shl
f2xm1
cmove
mov
dec
ds
pop
dec
pop
inc
data16
std
inc
mov
(bad)
mov
cmps
loopne
sbb
scas
jmp
mov
jmp
mov
ror
pop
xor
test
cmp
fidiv
push
cmps
das
movs
and
jecxz
bound
mov
rol
mov
cmp
in
inc
mov
lahf
add
es
dec
fild
pop
cmp
icebp
(bad)
stc
jecxz
retf
in
pusha
fcompp
cs
jo
inc
scas
test
ss
sbb
stos
dec
mov
sub
setne
inc
xchg
mov
mov
dec
ja
jp
cdq
hlt
xchg
jle
int
or
inc
or
call
stc
and
xchg
(bad)
fist
mov
aas
stos
stc
inc
push
xor
xor
sbb
aaa
into
cmp
mov
xor
ss
outs
in
popf
push
ret
jmp
sub
cmps
jne
jl
xchg
mov
retf
sub
mov
jmp
lock
aam
xchg
ds
retf
(bad)
mov
gs
push
mov
out
sub
fs
or
pop
add
push
or
inc
cmp
test
sub
xor
pop
cwde
aam
lods
addr16
fstp
sub
jae
push
and
leave
and
jns
sub
dec
cmp
jo
out
test
adc
dec
push
push
push
lea
test
mov
test
and
adc
mov
inc
pop
loop
cmp
dec
dec
add
mov
push
(bad)
jl
cmp
icebp
push
sbb
push
popf
xchg
ins
jge
popa
rcr
movs
mov
inc
enter
out
pop
xor
aas
jae
sar
xor
loop
cmp
test
lods
iret
fild
push
sub
push
mov
popa
enter
dec
aam
mov
cwde
dec
ins
xor
ror
sar
out
hlt
jmp
(bad)
ss
pusha
push
call
mov
test
push
imul
sub
jcxz
mov
fdiv
mov
(bad)
lods
mov
adc
inc
push
jo
dec
push
lds
dec
ins
loopne
cmp
(bad)
out
lock
sbb
xlat
dec
ins
mul
inc
not
out
jae
or
ret
ret
mov
mov
test
fsub
adc
sbb
sub
mov
mov
fiadd
mov
sub
cld
jecxz
sahf
and
add
xor
mov
pop
mov
add
jle
sub
sub
cmp
lods
mov
mov
aaa
ins
out
jns
sbb
lods
imul
lds
call
repz
mov
sub
ins
fbld
in
xor
fxch
ins
pop
mov
sbb
ss
out
pop
jp
outs
cmp
mov
in
push
cmc
adc
mov
bound
xor
(bad)
aas
push
int
sahf
jl
cs
mov
(bad)
pop
in
aas
mov
ficom
into
popf
(bad)
pop
mov
scas
dec
fidivr
mov
xchg
popf
loopne
add
sub
movs
jecxz
hlt
inc
js
ins
push
inc
rcl
loopne
or
adc
fild
sub
inc
fcomp
lahf
adc
fnsave
xor
pop
int
and
addr16
pop
xlat
sti
xlat
and
cmps
out
cmps
jno
stc
xchg
mov
lea
add
(bad)
test
mov
mov
and
mov
(bad)
addr16
sub
cdq
sbb
xchg
push
loop
adc
mov
or
push
mov
mov
(bad)
sbb
lock
ins
daa
test
imul
xor
fmul
pop
data16
retf
inc
aaa
jmp
jno
(bad)
mov
push
dec
sub
sbb
adc
xlat
mov
mov
std
and
shl
out
sub
mov
xchg
hlt
jo
hlt
xor
js
pop
adc
cmp
push
in
lock
ret
dec
test
or
inc
outs
aas
jle
inc
jge
lock
(bad)
js
int
sti
std
mov
out
loop
cmp
push
adc
pop
les
outs
push
call
cmp
xchg
aad
ror
adc
xchg
push
jmp
cmp
pushf
pop
pop
test
out
cmp
inc
xor
mov
stos
popf
adc
call
test
jbe
dec
dec
or
fldenv
fldcw
nop
cmp
aas
dec
push
ud1
mov
shl
push
mov
inc
retf
adc
jmp
xchg
jl
jne
push
mov
rcl
jo
push
or
jle
sub
fidiv
ja
push
cmp
inc
imul
mov
popf
ins
(bad)
adc
stc
sub
movs
loope
adc
into
arpl
les
(bad)
sub
pop
pop
lds
sbb
shl
mov
(bad)
xchg
mov
clc
mov
fxam
mov
adc
xchg
cmp
jecxz
push
rcr
(bad)
cld
aad
popf
retf
add
in
push
ret
inc
into
fdiv
jecxz
pushf
and
mov
(bad)
es
push
pusha
add
leave
test
cmps
fldenv
(bad)
shl
ins
adc
(bad)
mov
jno
push
and
sub
push
push
add
jg
xchg
popf
inc
pushf
jns
cmp
sbb
xchg
jmp
out
sbb
mov
ja
jmp
inc
pop
pop
sbb
push
shr
fisub
test
push
inc
xor
mov
or
movs
jnp
stos
jo
int
fisubr
dec
mov
dec
push
fistp
or
mov
test
fscale
push
loop
cld
es
adc
ss
or
jne
xchg
sbb
dec
adc
scas
test
or
fst
add
fist
inc
cli
daa
mov
out
and
into
shl
shr
and
pop
lahf
out
mov
push
cmp
jle
sub
and
shl
add
fwait
retf
clc
data16
fsubr
inc
call
or
sbb
addr16
cwde
mov
mov
pop
lea
out
inc
adc
dec
mov
sub
lahf
lahf
pop
push
or
and
std
and
cmovno
stos
enter
mov
imul
sbb
push
daa
cmp
push
xor
retf
(bad)
push
push
or
adc
add
sbb
and
push
ret
jmp
call
out
inc
jne
mov
or
sti
out
pop
push
add
xor
mov
shl
sub
sahf
pop
jmp
xchg
cs
jno
test
addr16
iret
hlt
(bad)
loopne
dec
call
xor
out
test
int
and
or
inc
inc
jp
mov
bound
out
mov
rcl
clc
scas
cmp
ins
retf
push
dec
inc
mov
data16
inc
sub
push
rcl
adc
add
jnp
push
aam
call
pushf
xor
cmp
dec
sub
ja
and
mov
adc
dec
das
stos
jbe
inc
push
and
jae
sbb
std
jp
ret
gs
sahf
xchg
(bad)
mov
inc
int3
mov
cdq
ret
test
pop
movs
(bad)
repnz
test
fimul
or
xor
stos
cld
xchg
test
push
stos
sbb
mov
jmp
pop
pop
push
pop
test
sub
idiv
gs
mov
jle
sub
ins
mov
sbb
pop
call
push
fiadd
lahf
cmp
es
es
mov
sbb
inc
aad
bound
mov
xor
paddusw
or
jno
xor
mov
lea
cmps
(bad)
imul
jo
xchg
xor
inc
popf
sub
in
sub
dec
jb
ds
pushf
adc
(bad)
pop
or
pop
movs
mov
test
inc
xchg
mov
ins
adc
loop
ins
dec
mov
adc
mov
stc
sub
lock
pop
lods
jle
push
cmp
xor
cmc
cli
fldln2
outs
add
ds
int
movs
aas
inc
and
dec
add
int
mov
xchg
sbb
adc
jmp
pop
out
pop
cmps
lods
repnz
(bad)
retf
fadd
inc
fdivr
aad
inc
xchg
sub
jmp
retf
add
mov
pop
jo
add
cmps
test
stos
cwde
mov
sub
xchg
enter
jbe
add
or
or
mov
in
mov
jl
in
addr16
and
pusha
in
cld
mov
inc
add
test
jnp
ds
imul
inc
cli
jno
jmp
stc
add
loope
pop
sbb
cdq
stos
mov
xor
popa
(bad)
loop
xor
pop
sbb
jmp
mov
movs
fidivr
pop
add
inc
pop
xchg
jle
clc
in
test
push
adc
ins
test
cmc
std
test
sub
fwait
outs
inc
jns
jecxz
mov
xchg
push
ret
mov
fnstsw
jb
mov
pushf
cmp
add
rcl
mov
dec
arpl
mov
bound
sbb
fwait
add
jns
push
and
fwait
arpl
cmps
mov
fcomp
xchg
mov
sbb
dec
adc
mov
adc
sub
push
sub
adc
stos
aas
ret
movs
mov
push
adc
out
mov
leave
cmp
fwait
xchg
jecxz
push
cmp
pop
cmps
inc
and
mov
cmp
out
push
inc
inc
mov
lea
jnp
cmps
sub
imul
jbe
mov
jp
xchg
push
mov
mov
into
rcr
dec
cmp
in
shl
dec
mov
mov
add
into
or
lods
jecxz
and
mov
je
push
and
pop
sbb
inc
(bad)
xchg
pop
jns
dec
shl
stc
int3
loop
fistp
jo
call
adc
les
mov
cdq
jmp
jge
sbb
pop
mov
jmp
sub
popa
enter
mov
cmp
ror
dec
sbb
hlt
xlat
sti
cmp
in
in
add
enter
xchg
push
in
arpl
rcr
ds
js
imul
xchg
cmp
ret
call
popa
mov
mov
jmp
mov
cwde
mov
scas
ficomp
pop
inc
fxch
arpl
ins
in
inc
test
imul
mov
jge
xchg
in
cmp
push
add
pop
push
fdiv
fcom
(bad)
pushf
test
retf
add
mov
pop
jo
shl
lods
in
xor
adc
pop
xchg
sbb
lock
or
rcr
test
or
push
push
xchg
pop
xchg
movs
mul
pop
(bad)
mov
dec
add
jmp
mov
adc
jmp
loop
dec
adc
mov
fs
or
jbe
ret
dec
enter
mov
adc
adc
imul
retf
pop
dec
(bad)
dec
jecxz
aaa
aad
ja
jp
leave
jnp
cmp
in
or
mov
addr16
sbb
cmp
inc
mov
fld
fwait
mov
sti
shr
loopne
and
into
js
repz
mov
pop
fs
int
das
ss
pop
mov
das
add
add
(bad)
pop
sbb
sbb
fs
out
cmps
int3
and
aas
rcl
xor
or
movs
not
sub
push
push
cmp
imul
mov
test
mov
cmp
leave
in
frstor
cmp
dec
or
push
(bad)
ins
dec
xchg
sbb
cmp
fsub
loopne
push
dec
cmp
ins
cld
add
out
pop
xor
dec
pop
movs
repz
inc
xchg
xchg
les
mov
ja
pop
lods
lods
repnz
rol
lods
sti
(bad)
fdivr
mov
jecxz
test
xchg
arpl
jbe
cli
std
aam
or
daa
stc
fistp
mov
xchg
inc
in
pop
cmp
adc
mov
sub
sub
jne
cmps
adc
dec
jae
lea
ds
xchg
js
xchg
dec
sbb
shl
sub
in
dec
int
inc
jmp
ja
fisub
pop
ins
add
sbb
add
jae
mov
dec
ja
sbb
jl
mov
into
retf
clc
jecxz
pop
fs
jo
je
stos
call
mov
shr
ins
and
add
out
clc
jecxz
ja
scas
jmp
leave
jmp
fisub
dec
or
and
loopne
mov
or
mov
ficomp
and
cmp
dec
js
mov
cld
(bad)
push
dec
xchg
dec
clc
and
retf
lods
mov
mov
shr
cmp
push
jg
aad
xchg
neg
pop
out
fs
xchg
jle
cmps
out
div
loop
mov
xchg
sti
cld
mov
ins
and
xor
xor
cmps
or
(bad)
shl
jle
retf
imul
ins
leave
retf
call
push
dec
and
das
push
adc
push
dec
pop
adc
loope
jp
adc
shl
mov
push
inc
sar
das
fcom
cmp
scas
rol
cmp
and
xchg
push
ja
fisubr
loopne
fnstcw
mov
pop
mov
mov
enter
sahf
rol
dec
inc
dec
mov
icebp
stos
loopne
mov
sub
in
push
and
add
or
(bad)
ins
clc
in
inc
call
and
push
xchg
hlt
jle
add
or
in
mov
ret
adc
cmp
xchg
mov
and
(bad)
iret
(bad)
call
shl
sbb
sbb
fild
outs
popf
in
lea
xchg
cmp
mov
xor
lahf
rol
loopne
movs
(bad)
shl
pop
icebp
out
ins
mov
xchg
pop
jp
cld
(bad)
or
hlt
aaa
sub
inc
retf
xor
ret
inc
enter
(bad)
pushf
popa
inc
popa
in
jb
dec
xlat
adc
bnd
js
ror
dec
pushf
sbb
xor
out
repz
mov
lods
in
popa
arpl
fdivr
xchg
xchg
ret
push
leave
pop
push
aam
pop
cmc
inc
mov
sub
add
xor
fs
inc
dec
imul
sub
mov
push
adc
or
cdq
add
inc
cdq
cmp
sub
popa
xor
ds
push
add
sbb
jb
cwde
test
sub
ja
jle
pop
mov
adc
mov
cld
xor
ds
push
fbstp
gs
arpl
ja
sub
mov
sbb
test
cmp
aas
enter
aas
in
add
mov
loop
scas
mov
loopne
mov
pusha
or
fs
xchg
cmp
mov
xchg
add
jge
pop
ret
cmps
mov
fidiv
sbb
and
add
retf
xchg
xor
inc
int
jno
xor
imul
mov
test
je
cmc
mov
cld
mov
sub
fwait
jp
sbb
iret
and
add
push
mov
dec
test
jmp
fldcw
mov
shl
fwait
mov
jno
stos
mov
add
movs
das
push
dec
scas
repnz
loop
push
repnz
fs
mov
jb
js
cmp
ins
out
mov
jle
jb
into
pop
aas
adc
bound
retf
and
cmp
in
sub
test
xlat
and
jp
shl
pop
jge
movs
sub
jge
sbb
in
mov
aam
push
inc
(bad)
retf
(bad)
push
imul
inc
adc
out
mov
fisubr
sub
sub
das
cmp
or
jle
xchg
jle
pop
out
std
in
out
hlt
xor
push
sub
scas
scas
aam
rol
ins
pop
inc
push
mov
sub
(bad)
mov
adc
mov
loopne
xor
pop
add
xchg
not
jno
out
jmp
add
arpl
push
ja
rcr
sbb
nop
push
cmp
sub
nop
push
mov
mov
(bad)
mov
pushf
je
mov
movs
cmp
and
inc
mov
aad
and
pop
loopne
lods
dec
jno
push
mov
fist
ins
pop
mov
lds
or
scas
add
dec
pop
(bad)
adc
pop
cmp
loop
dec
retf
or
pusha
xchg
data16
pushf
add
clc
outs
leave
xchg
not
mov
pop
push
nop
daa
xor
xchg
fcmovnbe
outs
(bad)
fmul
cmp
je
repz
ja
sahf
dec
xchg
leave
(bad)
xlat
pop
pop
and
fcomp
popaw
in
jp
in
ror
lahf
or
inc
jge
or
call
lds
je
push
adc
jecxz
xor
pop
popa
leave
inc
mov
sbb
pop
jbe
cld
xor
nop
mov
shl
js
xchg
add
ins
test
sub
call
cmps
mov
adc
dec
ficomp
gs
add
jno
rol
out
movs
rcr
hlt
mov
sub
or
loope
lock
ins
cmc
mov
xor
and
add
inc
inc
retf
mov
ins
fwait
scas
mov
or
out
and
int3
or
dec
pop
jle
sar
push
test
retf
or
nop
lea
push
sub
pop
jns
pusha
cli
inc
in
mov
inc
dec
push
cli
and
rcr
inc
sbb
lahf
adc
push
inc
pop
sub
lods
cmps
retf
inc
jp
sbb
(bad)
cmps
jns
fwait
and
jmp
ret
fwait
popf
or
pop
cdq
push
adc
test
add
xchg
dec
mov
inc
stc
push
jp
rcr
push
dec
xor
push
and
jmp
pop
sub
retf
jl
sub
dec
mov
lds
push
in
cmp
jb
inc
aaa
addr16
lock
sub
aaa
test
test
jno
mov
mov
cld
pop
rcr
push
ficomp
inc
pop
inc
cmp
arpl
cmp
inc
(bad)
out
icebp
ret
mov
(bad)
rol
and
retf
aas
dec
fstp
(bad)
dec
and
pop
lea
mov
pop
or
ret
cmp
xchg
and
mov
fdiv
xor
xor
movs
xor
rcr
adc
jmp
lods
add
xchg
je
push
ins
xchg
cwde
xchg
push
sub
mov
stos
sub
dec
jmp
out
or
jmp
stos
mov
shr
adc
ret
sbb
mov
shl
jae
push
int3
lock
rcr
jns
mov
arpl
add
xchg
add
cmp
jo
and
rol
fucomip
ja
test
add
xor
in
mov
cmp
sbb
mov
push
out
push
add
(bad)
movs
push
rol
cmp
pushf
jp
pop
add
sub
std
aad
das
pop
retf
in
cmps
adc
loop
call
pusha
mov
sbb
mov
mov
outs
jle
test
and
inc
inc
jmp
hlt
or
leave
dec
aad
js
mov
ss
cmps
jp
iret
xchg
imul
dec
push
sub
adc
xor
stos
add
lds
push
and
sbb
movs
loop
push
ss
add
fsub
adc
(bad)
jb
jo
push
out
cmp
js
sub
mov
push
dec
jp
bound
sti
xor
mov
icebp
adc
cmp
test
mov
pusha
mov
sub
out
(bad)
test
xchg
imul
icebp
ret
mov
scas
add
adc
push
out
add
mov
fcom
xor
icebp
inc
cmp
push
cmp
fwait
mov
or
mov
or
and
pop
jmp
or
call
add
pop
mov
dec
mov
xor
fnstenv
out
call
aad
mov
push
push
cmc
mov
add
jae
retf
popf
leave
jb
loop
jae
jae
(bad)
xchg
adc
ins
call
lock
das
mov
enter
xor
ds
cmp
or
mov
mov
xchg
jge
and
addr16
pushf
sub
mov
cmps
cdq
xchg
add
push
iret
push
test
clc
mov
dec
aaa
aas
stos
push
inc
or
lahf
mov
mov
sbb
add
lds
test
add
sbb
es
jnp
mov
sar
popa
ss
aas
add
lods
cmp
je
mov
movs
lahf
dec
mov
adc
lods
or
inc
mov
push
push
inc
or
pusha
add
sbb
push
loope
mov
add
and
xlat
scas
repz
and
call
pop
stos
xchg
dec
mov
lods
gs
(bad)
icebp
jg
out
mov
out
xor
xor
dec
xchg
fxch
xlat
xchg
(bad)
popf
push
fist
mov
sbb
mov
and
pminsw
mov
dec
inc
icebp
mov
(bad)
aam
jae
mov
and
sub
xor
jmp
sub
xchg
lahf
(bad)
shl
pop
in
sar
retf
adc
mov
div
or
aaa
sti
dec
fsubr
xor
sbb
mov
aas
sbb
mov
sar
test
(bad)
pop
push
mov
sub
ja
jp
call
jb
out
pop
xor
stos
in
inc
rol
imul
jno
ins
push
jg
data16
add
xor
mov
or
loop
sbb
stos
icebp
fsubr
leave
in
xor
add
sbb
shr
push
jg
scas
cmp
in
aaa
loop
cdq
dec
div
cwd
push
mov
pushf
jecxz
xor
aas
push
jb
(bad)
adc
mov
enter
mov
push
add
mov
pop
sbb
inc
jb
sub
jl
mov
or
xor
adc
lea
dec
call
div
stc
mov
pop
sbb
test
push
cdq
adc
adc
add
xor
mov
fidivr
mov
xor
mov
pop
mov
in
or
dec
lods
jae
lds
mov
inc
xor
adc
bound
mov
fcmovne
pop
leave
add
in
jp
(bad)
cmps
xchg
leave
pop
push
loop
xchg
test
pusha
fnstcw
jmp
inc
sti
cmp
(bad)
and
pop
aaa
scas
xchg
jecxz
mov
cmp
push
pop
sbb
dec
mov
mov
jns
or
outs
inc
mov
sar
push
push
test
xor
pop
jl
or
aas
dec
fiadd
push
sahf
mov
dec
test
cld
js
xchg
fiadd
push
sbb
dec
jne
pop
sbb
jecxz
and
jg
xchg
jecxz
das
mov
xor
(bad)
cmps
rcl
sub
cli
fst
fwait
loope
mov
cdq
loopne
xchg
sbb
gs
or
add
loope
ucomiss
jns
leave
(bad)
out
mov
xlat
jns
push
rcr
pushw
and
dec
pop
mov
push
dec
pop
cmps
or
cmps
cli
ja
sbb
into
push
mov
sbb
aaa
cmps
jns
mov
mov
cdq
dec
test
and
dec
dec
retf
cld
neg
call
mov
sub
movs
arpl
dec
arpl
sub
cs
clc
push
stos
cmp
sbb
ins
xor
cmp
in
enter
mov
cmp
mov
jae
test
push
sbb
fwait
iret
test
into
cdq
mov
lock
inc
jecxz
dec
or
push
retf
mov
push
jle
xor
mov
cmps
pop
and
in
jo
mov
adc
bound
and
mov
or
sub
lahf
cmps
xor
fwait
inc
pushf
sahf
fimul
loop
neg
sbb
mov
or
jo
xor
es
jle
cli
inc
xor
xor
das
or
test
lods
stc
mov
mov
das
mov
xchg
sbb
retf
mov
inc
jnp
jae
cdq
adc
pop
out
push
mov
aas
add
mov
fwait
xor
jmp
add
mov
nop
js
jmp
sbb
sbb
jno
and
adc
pop
sahf
pop
aam
dec
loop
pop
pop
fnsave
pop
inc
dec
pop
in
imul
ja
push
pusha
and
pop
sub
(bad)
mov
sbb
rol
int3
xor
movs
bound
aas
add
ja
mov
add
mov
mov
mov
cli
mov
and
mov
or
jnp
(bad)
adc
mov
daa
mov
add
bound
inc
js
mov
and
sub
int3
adc
shl
mov
movs
gs
pop
ins
jne
jo
pop
mov
mov
call
pushaw
or
push
xchg
adc
sbb
pop
sbb
es
test
mov
stc
adc
je
and
cld
and
(bad)
mov
inc
out
sub
add
int3
and
in
test
push
jnp
pop
(bad)
retf
in
mov
repz
dec
cld
leave
lods
pop
(bad)
in
or
or
mov
pop
test
push
add
(bad)
jg
loop
fstp
xchg
sbb
stos
(bad)
mov
fwait
(bad)
(bad)
sub
and
es
ja
retf
jo
xchg
pop
dec
add
pop
retf
mov
inc
add
cmp
rol
jbe
jns
inc
pop
dec
test
rcl
sahf
cmp
fwait
and
(bad)
aad
cmp
ds
ja
repz
jnp
mov
pop
jle
xchg
inc
es
mov
xlat
jns
addr16
mov
cmp
cwde
jg
jbe
inc
xchg
out
into
in
ja
ins
pop
jo
loop
pop
retf
cdq
ins
cmps
inc
and
jno
out
imul
not
mov
dec
shl
pop
inc
ret
dec
out
lea
pop
int3
cmp
mov
mov
cdq
call
dec
popa
aas
xor
shl
cli
(bad)
sub
mov
jle
neg
xchg
sbb
mov
sub
mov
push
xchg
and
es
push
test
je
inc
inc
push
std
gs
popf
retf
xchg
clc
cwde
and
xor
lea
retf
pusha
mov
loope
sbb
push
call
add
clc
fnstcw
push
loop
mov
xchg
pop
retf
xor
pop
(bad)
fdivr
je
sar
arpl
push
addr16
and
cmc
es
test
adc
sbb
or
mov
dec
xor
ror
pop
xor
cmps
jnp
adc
push
loopne
test
cmp
test
xor
add
jge
mov
repz
nop
sbb
ret
mov
popa
imul
popa
(bad)
fcomp
cmp
aas
dec
inc
mov
(bad)
cmps
mov
popa
cmp
push
inc
adc
push
ins
push
and
add
outs
sub
mov
adc
ss
xchg
and
dec
pushf
out
jecxz
(bad)
sub
inc
inc
pop
dec
ror
sbb
mov
xchg
out
loop
stc
retf
adc
or
in
mov
sbb
pop
lods
mov
out
xchg
popa
add
dec
add
cmps
pop
mov
xor
jae
mov
sbb
or
adc
pop
inc
mov
cmc
fcompp
mov
into
sub
jge
popf
imul
ins
popa
mul
adc
daa
jg
dec
enter
mov
inc
dec
call
sti
pop
test
cmp
mov
push
ror
xor
push
imul
dec
cmps
jae
sub
leave
icebp
ror
nop
shr
or
rol
in
in
dec
inc
and
xchg
or
pop
xchg
pop
or
fidiv
stc
and
adc
mov
jp
xlat
mov
repnz
cli
mov
daa
rcl
shl
jge
lods
or
add
lahf
mov
xchg
adc
in
mov
xor
outs
or
push
cmp
jbe
sub
jb
xor
xor
call
mov
stos
cmp
lock
adc
jl
loop
loopne
xor
mov
push
mov
add
inc
mov
and
xor
add
aas
cmp
aaa
les
popa
cmps
inc
push
cli
mov
in
(bad)
jmp
mov
outs
pop
shr
mov
pop
fisttp
mul
jle
push
mov
jmp
retf
add
add
cld
out
fcom
cmp
out
cmp
sahf
fwait
xchg
ror
pushf
call
add
addr16
dec
enter
push
(bad)
mov
les
mov
adc
ficomp
test
adc
mov
inc
loope
sbb
(bad)
std
mov
je
xor
ins
sbb
mov
sub
(bad)
dec
clc
scas
or
sar
in
or
xchg
ins
jmp
inc
fwait
es
add
mov
je
popf
out
push
dec
cdq
jl
leave
out
in
mov
div
call
out
push
xlat
jns
ins
jmp
(bad)
jecxz
bound
pop
aam
cld
jo
cmps
add
hlt
out
or
stos
add
sbb
push
inc
mov
sbb
ds
lea
and
push
pusha
nop
adc
mov
adc
cld
or
ret
push
sbb
shr
std
popf
mov
dec
dec
xchg
inc
out
cmp
in
sub
add
adc
jbe
push
or
add
call
mov
or
jp
pop
pop
jno
fimul
(bad)
push
xor
xor
inc
dec
pusha
aad
push
fwait
sub
stos
in
jbe
inc
mov
add
int
sbb
adc
enter
and
jo
mov
push
fldcw
sub
xchg
mov
jbe
adc
retf
xchg
sbb
call
loope
fisttp
test
pusha
shl
mov
push
out
mov
lahf
int
cli
or
fldenv
adc
sahf
dec
loope
xchg
mov
call
xchg
or
pop
mov
mov
or
ins
ret
inc
xor
cwde
gs
stc
jmp
pop
call
push
add
repnz
mov
into
xchg
repnz
xor
in
cmp
adc
not
add
pop
cli
adc
fucomi
dec
and
retf
(bad)
repz
lods
enter
shl
mov
mov
sub
xchg
in
jge
pop
mov
pusha
ins
mov
mov
mov
sbb
rcr
fdivp
cmp
cli
dec
add
ret
mov
push
mov
mov
cmp
(bad)
sbb
bswap
(bad)
das
push
sub
imul
mov
cmp
jmp
push
jecxz
shr
xchg
enter
cmps
jg
and
ja
pop
dec
push
xor
lods
popf
and
sti
mov
push
jecxz
dec
sbb
inc
add
mov
leave
jbe
xchg
fucomip
addr16
test
lds
adc
dec
fisttp
lahf
neg
xor
(bad)
mov
dec
adc
int
arpl
popf
push
addr16
xchg
test
jno
push
scas
imul
cmp
lods
adc
cmps
push
lds
out
lods
test
out
daa
je
dec
jae
push
inc
cld
dec
and
imul
cmp
loop
mov
sbb
mov
cmps
mov
sub
jae
cmp
scas
mov
cmp
and
sub
cld
jl
jae
and
pushf
cwde
je
sbb
(bad)
jo
out
pop
jg
push
call
fcmovnu
mov
ret
lock
shl
jp
cmc
(bad)
adc
aad
loope
test
dec
test
lods
and
daa
adc
jno
aaa
mov
scas
lahf
push
neg
xor
mov
stc
pop
test
push
adc
mov
pop
mov
inc
aaa
ds
ja
daa
add
frstor
cwde
adc
sub
jae
pop
fst
stos
mov
outs
aaa
and
lock
xchg
lods
jbe
scas
jnp
push
dec
pop
add
fwait
dec
ror
cmp
or
daa
pushf
mov
ror
stc
out
sbb
cmp
loopne
sbb
cmp
push
cld
js
imul
jo
mov
or
push
inc
fld
retf
sbb
nop
mov
adc
jmp
mov
les
sbb
daa
push
sbb
fcom
sbb
dec
xor
ss
test
(bad)
out
les
pop
ret
in
mov
arpl
imul
xchg
scas
adc
cmp
mov
and
retf
xchg
test
jecxz
lock
(bad)
and
out
stos
mov
stc
icebp
mov
sbb
stc
and
xor
mov
push
or
stos
mov
(bad)
and
xchg
dec
retf
sub
push
xchg
push
fstp
in
xor
add
jmp
inc
adc
sub
mov
and
pop
outs
ret
test
test
or
data16
gs
pop
xchg
jmp
jg
leave
dec
mov
mov
or
mov
ins
(bad)
pusha
nop
repnz
or
retf
ss
mov
pop
pop
add
xchg
aas
mov
jns
sete
and
fimul
push
(bad)
jg
call
jne
(bad)
jle
adc
nop
dec
jae
add
int
or
mov
mov
imul
lods
lods
lahf
jle
loop
jno
mov
xchg
mov
mov
aas
cmp
cdq
mov
jnp
mov
lock
inc
xor
pop
push
pop
mov
xor
add
push
or
or
pop
mov
jne
mov
sbb
lea
add
mov
jg
pop
xchg
inc
pusha
or
cwde
mov
leave
ins
mov
jo
scas
pop
sub
out
push
mov
xchg
mov
and
lahf
test
push
dec
jp
mov
push
lods
push
fs
cmc
inc
inc
pop
push
inc
xor
fwait
cli
pop
gs
sub
loope
frstor
outs
dec
mov
mov
pop
mov
mov
popf
xchg
sbb
mov
(bad)
mov
xchg
add
(bad)
and
pop
pop
in
les
clc
push
jbe
sub
out
jmp
outs
jbe
pop
in
icebp
pop
rol
mov
mov
jle
jnp
jns
jmp
fsub
inc
in
scas
jmp
in
test
inc
test
jnp
cmp
je
xor
mov
imul
push
(bad)
xor
test
sbb
pop
adc
and
xlat
adc
sbb
push
or
jecxz
lods
mov
test
pop
and
push
arpl
icebp
mov
adc
adc
das
xchg
nop
jae
jne
std
mov
retf
xchg
cmp
lds
test
lods
retf
fwait
mov
and
outs
jp
push
pop
or
push
pop
movs
aas
xor
or
in
or
jmp
xor
sub
jmp
cld
sub
xabort
fist
dec
test
movs
add
outs
add
imul
mov
stos
test
stc
pop
mov
(bad)
daa
(bad)
jl
jbe
push
lahf
jmp
jg
hlt
xchg
imul
ror
dec
mov
inc
sub
dec
enter
push
xor
push
pop
sub
pop
daa
mov
add
inc
arpl
inc
push
mov
call
pop
mov
ds
mov
jmp
or
test
pop
(bad)
mov
or
pop
push
mov
loop
push
jg
push
pop
enter
cmp
or
jp
cmp
fidiv
mov
(bad)
jecxz
pusha
into
ficom
ret
mov
push
imul
cwde
outs
idiv
jp
push
jl
nop
push
jecxz
inc
xchg
and
pop
sub
fdivp
hlt
call
xchg
cmps
cdq
loopne
cmp
inc
inc
retf
xchg
jl
add
dec
lods
xor
test
push
jmp
mov
cmp
sub
jp
pushf
adc
pop
cmps
jae
xor
or
fwait
test
test
aaa
dec
lods
mov
inc
push
daa
mul
push
aad
xchg
or
int3
sbb
enter
fs
scas
test
mov
sbb
cs
add
jo
(bad)
in
mov
sti
dec
mov
xchg
scas
pop
daa
in
push
mov
mov
jl
es
lds
repnz
ss
mov
int
or
xchg
dec
pop
jo
sar
mov
push
lea
mov
cmp
jg
pop
push
xchg
cmp
jecxz
jae
mov
inc
and
dec
mov
ja
pop
fnstcw
(bad)
stos
stos
inc
cmp
xor
inc
xchg
stos
sbb
cmps
sbb
lahf
and
or
jecxz
pop
inc
leave
add
fcomp
fidivr
stos
xor
pop
scas
sub
into
cli
stos
popa
nop
pop
or
xlat
xchg
(bad)
mov
aam
lahf
inc
push
jo
jns
cmp
outs
mov
or
sbb
mov
jbe
sbb
ss
leave
or
in
xchg
push
lods
mov
retf
xchg
test
lahf
ja
mov
fist
fist
sub
xor
pop
cmps
loopne
add
jecxz
cli
mov
mov
clc
mov
jg
sub
jmp
imul
jnp
add
dec
fsub
lods
cmp
dec
xor
adc
adc
pop
nop
add
or
stc
mov
mov
scas
mov
in
jo
neg
ins
dec
popa
jl
les
mov
ja
xor
dec
pop
xor
out
or
or
aad
enter
sahf
push
ss
out
lock
fld
out
pop
retf
scas
hlt
mov
xor
inc
sub
jle
nop
and
out
dec
xor
out
push
xchg
pmulhw
jl
add
lea
xchg
push
mov
mov
repnz
(bad)
mov
and
cmps
sbb
mov
cdq
cmc
repz
mov
sub
pop
int
pop
retf
fcom
outs
mov
mov
push
and
xchg
sub
xchg
mov
popa
retf
and
sbb
xchg
sbb
ins
and
cwde
mov
test
adc
enter
mov
pop
fwait
push
es
push
xor
jo
mov
or
jecxz
adc
lods
push
and
mov
std
cdq
cmc
ficom
inc
add
cli
mov
jnp
push
sub
out
inc
sub
mov
jge
icebp
jg
nop
cmp
sbb
adc
xor
xor
jbe
inc
inc
fistp
daa
jmp
jbe
fadd
adc
aaa
push
adc
add
jle
test
pop
loopne
jo
cmp
cmp
retf
cmps
add
das
add
test
inc
sahf
lock
inc
xor
adc
shl
(bad)
ret
mov
pop
scas
(bad)
out
iret
out
sbb
push
arpl
(bad)
test
push
inc
xchg
sub
sub
adc
loope
test
ret
push
scas
bound
push
add
fsubr
sub
adc
pop
jbe
cmp
cmp
ja
sub
jle
movs
pop
adc
cmp
mov
jns
sbb
jp
push
and
push
fnstenv
loope
loop
push
sub
retf
ins
jns
es
xchg
popf
mov
push
rcl
mov
ja
lea
test
mov
jo
daa
mov
ss
in
or
pop
or
imul
xchg
pop
xor
xchg
loop
xor
push
xchg
mov
stc
nop
test
sbb
dec
rcl
in
jl
mov
rol
ins
lock
sub
dec
and
jge
pop
scas
jecxz
adc
scas
retw
add
jb
fidivr
aas
fiadd
sub
jle
mov
lods
jns
retf
out
lock
cmps
mov
cmp
pushf
mov
xor
pop
imul
mov
add
sub
jne
inc
in
scas
mov
pop
retf
std
inc
shr
sub
mov
pop
sbb
xor
add
or
xchg
push
jmp
jle
rol
js
add
mov
daa
loop
ss
aam
fwait
push
pop
aas
fwait
lods
cmp
pop
data16
lds
pushf
aad
pop
mov
jecxz
mov
mov
lea
mov
pop
scas
jg
cmp
jge
(bad)
cmp
cmc
out
jecxz
mov
push
daa
push
(bad)
fsub
add
push
and
jge
call
fadd
cli
pop
inc
mov
push
loop
jns
sub
pop
cmps
test
das
je
cwde
imul
daa
sahf
pop
jbe
stos
pop
add
adc
rol
jecxz
or
int
pushf
sub
xchg
(bad)
shl
out
mov
in
dec
retf
sub
stc
aaa
push
dec
ret
mov
xchg
shl
and
shl
inc
pop
outs
jge
out
mov
cwde
mov
push
bound
push
mov
or
xor
or
adc
rol
movs
stc
and
push
mov
push
(bad)
rol
movs
jge
inc
xor
sub
repz
dec
pop
cwde
push
jge
cwde
and
or
inc
add
rcr
mov
mov
sub
ja
sbb
stc
jmp
adc
imul
imul
sub
ja
pop
pop
imul
fisubr
jae
loop
sbb
cmc
cmp
fisub
jge
sub
xor
mul
xlat
sti
retf
addr16
popa
fsub
or
(bad)
popf
or
(bad)
mov
ret
push
gs
sbb
or
cmp
outs
dec
xchg
outs
mov
test
inc
mov
pop
inc
mov
push
inc
add
pushf
mov
ds
and
iret
sub
cmp
daa
leave
jp
cwde
or
xchg
jb
loope
and
xor
xchg
inc
fcom
push
adc
or
(bad)
js
sub
xor
loopne
sahf
sub
sar
xchg
mov
fs
or
add
loope
inc
add
neg
pop
ins
add
(bad)
aaa
(bad)
mov
add
inc
jns
mov
adc
cs
push
pop
mov
mov
(bad)
nop
cmp
repz
pop
adc
pop
jbe
mov
mov
add
(bad)
(bad)
mov
ret
aas
jl
fstp
lods
in
leave
adc
ins
add
inc
mov
and
sub
mov
gs
(bad)
mov
aas
pushw
ret
mov
add
imul
adc
sahf
mov
pop
pop
lods
bound
(bad)
mov
mov
movs
adc
mov
xlat
loope
popf
mov
test
sbb
hlt
pop
push
out
imul
movs
lahf
mov
jns
xor
lods
out
loope
cdq
dec
push
mov
inc
retf
fistp
jle
xchg
lods
sub
pop
mov
lods
adc
mov
and
dec
add
mov
bound
inc
xor
adc
adc
pop
mov
mov
inc
aaa
jmp
es
in
and
not
xor
sub
dec
jecxz
fwait
(bad)
daa
sbb
das
xchg
das
lea
and
int
mov
arpl
or
sti
xchg
lea
cmp
cwde
push
js
lock
addr16
sbb
movs
push
adc
mov
push
shl
aas
test
dec
jle
cld
adc
or
shr
jmp
icebp
lahf
inc
pop
xlat
inc
inc
xor
dec
jne
fdivr
xlat
lahf
mov
dec
aam
ins
in
je
jg
dec
mov
test
pop
imul
retf
inc
into
ret
xor
fldcw
pop
fld
bound
out
icebp
(bad)
mov
cmp
movs
sbb
loope
cmps
(bad)
bound
add
repnz
out
test
fdivr
cmp
aaa
or
mov
sbb
pop
test
ja
jmp
pop
aaa
jecxz
pop
xor
cs
mov
sbb
jle
(bad)
or
xchg
dec
sub
es
jnp
push
mov
cmps
(bad)
jb
jb
xchg
sub
mov
push
cs
inc
not
xor
jmp
daa
bswap
mov
push
(bad)
cmp
sub
adc
popf
cmp
fs
dec
jmp
xor
pop
pushf
popa
mov
jno
sub
test
and
mov
dec
lock
pop
pop
adc
xor
push
out
pop
xor
and
aad
mov
call
xchg
adc
mov
cwde
mov
sub
test
mov
call
or
mov
in
xchg
imul
ins
cmp
test
mov
cwde
mov
mov
jg
xchg
push
addr16
das
push
pusha
jnp
dec
mov
das
mov
loop
mov
push
cmp
neg
mov
mov
mov
push
xchg
ins
dec
adc
xchg
test
(bad)
pop
xchg
cli
sbb
lea
in
lea
or
lods
in
retf
push
mov
sub
mov
sbb
stc
mov
gs
jmp
loop
cmp
movs
movs
rcl
cmps
cmp
fild
ins
pop
mul
sub
dec
repnz
dec
or
dec
dec
cmp
scas
lea
sbb
cmp
fadd
jmp
xlat
dec
and
aam
xchg
inc
retf
jmp
adc
js
std
mov
pop
ficomp
mov
call
fcmovnbe
and
arpl
xor
jmp
jo
inc
call
lods
mov
and
xchg
std
rol
xchg
sub
xchg
pop
dec
hlt
sbb
mov
clc
rol
jge
adc
ja
mov
or
mov
sahf
sub
fwait
jae
jecxz
xchg
xlat
(bad)
xchg
xlat
retf
sub
test
aad
sbb
dec
sub
inc
int
call
mov
ds
jns
loopne
inc
sbb
inc
jle
inc
jmp
dec
sbb
dec
stos
je
aam
xor
push
inc
ret
sbb
out
xchg
push
mov
dec
push
mov
dec
jmp
or
add
cmp
lds
ror
out
ss
fcomp
aas
es
jo
repnz
out
lea
test
test
lods
sbb
fndisi(8087
jge
dec
lahf
ret
fs
lods
pop
mov
and
(bad)
scas
vpminub
fs
mov
sub
out
es
inc
xchg
and
xor
lods
dec
cmc
cmp
popa
jle
mov
push
sbb
mov
test
rcl
imul
ret
push
mov
and
fwait
pop
out
jno
(bad)
retf
rcr
dec
cli
(bad)
stos
and
xchg
or
sbb
loope
xchg
inc
dec
(bad)
test
dec
push
adc
in
or
mov
mov
sub
bound
arpl
pop
je
mov
dec
mov
in
push
xlat
ret
cmp
out
mov
rol
div
fnsave
stc
ds
pop
mov
xchg
jle
je
xlat
adc
in
loopne
sbb
aad
neg
sahf
int
push
cmp
push
lea
add
jp
test
out
cmps
sbb
jnp
push
test
jo
movs
mov
or
arpl
or
mul
push
popf
and
dec
iret
arpl
push
stc
nop
or
scas
sub
loopne
lahf
adc
push
jge
ror
jmp
dec
shr
shr
ret
les
jo
test
in
mov
mov
push
adc
add
jae
jge
or
fdiv
sbb
jne
adc
cmp
dec
inc
fwait
stos
std
fwait
sar
popf
and
out
mov
(bad)
xlat
adc
shl
sbb
push
push
fs
mov
lds
xchg
loopne
(bad)
clc
enter
popa
leave
cmp
push
inc
xchg
dec
imul
clc
jmp
popa
pop
adc
xor
xchg
mul
sbb
aaa
cmp
mov
cmp
movs
mov
icebp
jg
xlat
stos
or
cmp
mov
or
cmp
xor
cld
ja
ret
add
div
in
xor
push
xchg
dec
mov
xchg
enter
cwde
mov
enter
xchg
push
fisttp
add
int3
jmp
mov
push
mov
push
inc
rcl
adc
jp
inc
fld
out
mov
stos
mov
adc
xchg
add
(bad)
repnz
sbb
mov
jae
outs
pop
daa
cmp
pop
pop
in
call
sbb
push
and
cmp
mov
sbb
fadd
mov
sub
push
cmp
shr
mov
jl
pop
mov
mov
or
stc
stc
pop
test
mov
out
lds
push
mov
jne
icebp
mov
sahf
sbb
and
xchg
repnz
cmp
in
push
fsub
xchg
add
jo
jmp
adc
jecxz
and
sub
mov
cmp
retf
mov
inc
fidivr
outs
xor
pusha
cmp
loop
xlat
cmp
imul
cmp
pusha
inc
sub
rol
sti
inc
in
inc
sahf
sbb
sub
iret
(bad)
data16
fld
add
mov
movs
test
dec
jne
and
xor
xchg
cmp
es
jae
and
lods
or
arpl
dec
movs
jg
push
retf
leave
push
add
adc
pushf
mov
mov
push
outs
and
xchg
ds
pop
mov
jmp
not
cmps
sti
sbb
pop
int3
mov
js
adc
add
fadd
lods
cmp
mov
fwait
push
jns
cdq
enter
xor
fidiv
mov
repnz
cmps
inc
mov
fdiv
mov
pop
jae
push
imul
loopne
js
stc
and
dec
js
sub
out
push
jmp
in
pushf
ss
adc
sti
lods
or
sub
outs
mov
inc
jecxz
retf
daa
ret
and
xor
push
in
js
rol
dec
pusha
xor
xor
into
inc
pop
into
cmc
(bad)
int3
inc
out
imul
cmp
scas
and
sub
jo
int3
repnz
and
and
not
mov
or
fnstenv
xchg
imul
push
and
test
jne
inc
jnp
repz
dec
jmp
popa
mov
dec
dec
mov
daa
fld
xchg
xchg
enter
popf
jne
jmp
sahf
iret
rcr
mov
or
xchg
push
fwait
adc
enter
into
fstp
lods
pop
sub
xchg
mov
jno
inc
push
push
cmp
xchg
in
cmp
push
lods
mov
cmp
and
gs
call
and
sbb
push
int3
daa
sbb
std
pop
jae
aas
mov
cwde
aaa
mov
mov
push
xchg
mov
ret
(bad)
add
test
stc
and
and
sub
dec
test
ret
test
in
pop
mov
cmc
or
cmps
adc
cmp
inc
pop
jns
imul
jl
jbe
and
sub
je
lods
mov
mov
or
push
mov
jecxz
inc
stos
lods
mov
mov
jge
add
add
xchg
ds
test
fld
retf
jmp
pusha
fmul
add
pop
add
mov
sub
xor
outs
lds
mov
sbb
mov
std
(bad)
adc
xchg
jge
lahf
pop
push
aas
xor
fwait
sub
ja
test
lods
xchg
movs
in
cmp
movs
sbb
fidiv
xchg
cdq
or
imul
je
shl
lods
das
shr
push
frstor
cmp
pop
test
aaa
fild
aas
fistp
dec
sbb
cdq
adc
or
cmp
mov
push
add
mov
adc
les
or
cmp
push
inc
push
cld
ins
cs
jns
les
repz
sar
jl
fisttp
mov
push
mov
push
ja
int3
shl
icebp
(bad)
test
jge
test
fld
fstp
cwde
push
sbb
xor
into
mov
xor
push
jne
in
cmp
ja
sqrtps
lds
inc
jae
nop
jo
xor
cli
jp
pop
(bad)
les
lods
or
mov
jg
jne
sbb
mul
jno
dec
add
add
outs
cld
mov
enter
hlt
mov
mov
jle
xchg
je
cmps
aad
pop
adc
add
sub
jmp
jge
pop
mov
retf
push
push
add
fadd
pop
add
neg
add
outs
mov
sbb
dec
sar
dec
jmp
xchg
mov
lock
imul
repz
push
jp
je
dec
test
fidivr
fisttp
pop
xchg
rol
iret
div
xchg
int
call
(bad)
inc
aas
sub
sub
test
fdivr
push
jmp
pop
sub
pop
cmc
icebp
int3
ret
retf
mov
stc
sbb
shl
xchg
loop
sub
jle
push
scas
push
adc
xlat
adc
lea
sbb
pop
jp
mov
and
icebp
shl
inc
lods
outs
arpl
lds
pop
sub
sti
mov
push
pop
pop
sbb
push
push
xchg
mov
push
or
adc
cmps
pusha
xchg
mov
add
ins
loopne
int3
jnp
or
popa
pop
out
enter
mov
fisttp
dec
je
ret
(bad)
mov
push
cs
(bad)
pop
fidivr
bound
xor
out
cmp
or
imul
pop
add
xchg
not
and
xchg
fst
dec
pop
call
pusha
mov
mov
pop
enter
jmp
and
mov
or
(bad)
pusha
jecxz
pop
(bad)
sahf
lock
cmp
nop
pusha
dec
mov
ins
bound
movs
xchg
mov
push
out
dec
sub
mov
sub
mov
retf
cmp
xor
outs
enter
dec
out
sub
fnstsw
inc
pop
rol
sbb
fisubr
clc
inc
lock
rcr
inc
lods
jle
mov
push
push
sbb
and
lods
in
fsub
adc
mov
div
add
ss
lods
cli
dec
inc
or
fcmovb
xchg
gs
and
mov
xchg
inc
pop
cmp
cmp
in
inc
cmp
dec
inc
mov
push
pop
mov
rcl
movs
data16
nop
or
sub
jle
inc
or
sub
es
xor
mov
call
popf
aas
jge
movs
push
adc
gs
data16
dec
or
fs
and
dec
add
push
inc
and
pusha
loop
in
test
popf
or
pop
(bad)
inc
mov
(bad)
neg
in
xchg
xchg
mov
pop
or
inc
mov
sub
test
fcomp
add
out
sbb
or
inc
mov
fidiv
repz
mov
mov
mov
xor
in
cs
sub
rol
sub
mov
push
mov
out
and
fsub
adc
mov
push
shl
scas
sub
pushf
cmp
xchg
mov
inc
mov
sar
sbb
xor
neg
call
jbe
sub
(bad)
std
cld
ret
nop
jecxz
fild
fldcw
inc
dec
ja
stos
clc
adc
jb
xchg
xor
push
nop
or
imul
aaa
fwait
push
pop
icebp
loop
jg
in
pusha
mov
popf
jle
int
add
hlt
out
jmp
je
ret
xor
pop
hlt
ins
data16
pop
and
fadd
cmp
in
les
add
fisubr
adc
inc
xor
xor
stos
ins
mov
js
sti
fisubr
mov
lods
jle
out
sbb
dec
and
xchg
mov
push
call
mov
dec
iret
xchg
fist
mov
sbb
scas
repz
imul
mov
retf
arpl
jl
adc
ins
loopne
inc
push
dec
invd
or
gs
mov
in
xor
jo
popa
cmp
push
xchg
clc
and
cmc
cmp
pop
dec
pusha
add
inc
and
jae
jbe
int
inc
(bad)
pop
stc
in
aas
fwait
inc
xchg
mov
pop
sub
movs
dec
mov
(bad)
mov
dec
stc
in
sub
mov
xchg
stos
jecxz
out
inc
jmp
std
jp
sahf
cmps
sub
out
adc
in
jp
stos
or
nop
xor
mov
mov
mov
in
movs
mul
stos
push
push
ror
inc
jb
int3
push
xchg
dec
mov
jne
repz
(bad)
scas
pop
dec
lods
es
sbb
ds
loop
and
mov
xchg
aad
cmp
sbb
and
mov
jmp
jnp
xor
not
lock
dec
add
test
call
xor
fcom
sub
sar
dec
lock
imul
movs
sbb
inc
pushf
cmc
jp
sbb
push
lock
cmp
cmps
inc
nop
xchg
and
pop
stos
adc
sbb
(bad)
fcom
cli
pop
dec
add
into
fdiv
cmp
(bad)
xor
add
out
cmps
add
movs
jne
xor
xor
sub
loop
xlat
jle
fisttp
pushf
mov
popf
cmp
nop
jmp
test
cmp
lods
lea
sub
mov
dec
fadd
pusha
sub
pop
dec
fcomp
retf
(bad)
fcomp
(bad)
repz
add
ins
mov
rol
stos
mov
mov
lock
sub
jb
test
inc
adc
pop
xchg
cmps
shr
hlt
iret
push
mov
pop
mov
sbb
pop
jle
shr
jns
pop
mov
jp
ret
ror
js
mov
in
sahf
bound
sbb
lds
push
mov
shl
fwait
call
push
jnp
ret
cmp
out
sub
stc
clc
mov
test
mov
mov
hlt
xchg
test
fwait
pop
cld
nop
dec
cld
push
cli
add
ds
pop
test
jmp
push
mov
clc
add
lock
or
sub
dec
fs
cmc
repnz
stos
fcmovnu
jno
jnp
and
stos
mov
das
mov
inc
cmp
in
jbe
ror
jo
jo
mov
inc
jmp
jmp
dec
jp
mov
inc
inc
push
pop
(bad)
jle
test
adc
inc
ins
adc
push
popf
scas
pop
sub
and
enter
ins
bound
imul
adc
mov
jle
sbb
sub
jbe
xchg
sub
mov
jo
outs
bound
pushf
jle
into
out
cmps
sbb
(bad)
pop
enter
fs
retf
adc
jb
pop
mov
ficomp
aad
cmp
xor
jno
lods
push
cs
sub
(bad)
int3
mov
jge
adc
stos
push
addr16
pop
(bad)
sub
adc
cmp
inc
and
out
cmp
(bad)
sub
ficomp
mov
adc
popf
jmp
pop
jno
sub
ss
pop
daa
add
loop
int
shl
int3
add
test
cld
cdq
repz
xchg
inc
rcr
fs
mov
push
cli
fs
sar
ret
xchg
test
or
sti
add
jle
sub
movs
mov
add
int
out
scas
sub
fst
mov
xor
sbb
dec
repz
adc
gs
push
dec
popf
jl
int3
sub
sahf
enter
or
in
or
ficomp
fnstcw
int
cmp
xor
xchg
(bad)
cmp
adc
push
and
int3
adc
xchg
mov
test
out
and
ins
xor
mov
push
mov
cmp
rol
pop
inc
shl
out
pop
rol
push
lahf
jmp
mov
cmp
aaa
sub
cwde
hlt
pop
lahf
movs
lods
mov
rcr
jb
mov
rol
in
add
jmp
cmp
jp
push
push
hlt
cwde
iret
mov
dec
retf
sub
adc
cdq
shl
ja
(bad)
cwde
sar
in
ror
mov
sar
adc
adc
stc
add
je
call
in
mov
sar
jg
movs
adc
mov
stos
fcomp
mov
push
sub
cmp
xlat
cmp
fdiv
add
xor
xchg
mov
gs
mov
test
cmp
lahf
mov
ret
sahf
sub
or
sar
(bad)
pop
dec
push
dec
call
pusha
(bad)
enter
iret
pop
xchg
dec
mov
popa
jge
and
call
dec
ins
adc
pushf
retf
inc
add
shr
mov
ss
dec
xor
mov
call
sub
enter
pushf
push
pop
push
aas
xor
or
in
mov
les
and
sar
xor
pop
aam
test
sti
push
mov
cdq
cmps
into
icebp
or
pop
xchg
int3
sbb
shl
pop
stos
loop
xor
(bad)
fcomp
sbb
test
movs
inc
pushf
daa
loop
inc
cmp
push
pop
test
and
rcr
test
out
add
stos
dec
aam
push
jns
fcomi
mov
mov
ins
int3
mov
inc
sub
inc
fld
push
scas
repz
adc
jle
or
ins
in
retf
pop
jecxz
sbb
jo
shr
mov
pop
ja
jno
cli
mov
outs
pop
lea
test
mov
push
pop
xor
test
mov
and
jnp
mov
or
xchg
(bad)
fsub
ret
and
xor
hlt
cmp
bound
leave
lock
pop
push
sbb
aaa
sar
xor
sub
add
inc
aam
or
push
(bad)
fld
xor
pushf
dec
dec
or
fisubr
push
outs
adc
cmc
int3
dec
mov
test
add
lods
test
and
addr16
inc
dec
xor
push
nop
popw
push
mov
addr16
cmp
and
daa
inc
push
and
mov
and
pop
xchg
fstp
test
xchg
in
push
push
addr16
pop
and
popa
sahf
push
aam
ins
in
mov
sahf
aam
pop
add
into
jmp
adc
popf
or
xchg
mov
xor
cmp
push
cmp
pop
(bad)
clc
push
sub
cmp
(bad)
das
push
call
push
jno
jge
cmp
jae
inc
and
xor
fsubr
addr16
pop
lods
inc
xor
inc
jnp
popf
retf
sub
jno
push
cmp
xchg
push
mov
(bad)
shl
push
cmp
mov
aas
mov
(bad)
jg
xchg
jge
xchg
mov
retf
pop
push
leave
add
xor
popf
push
xor
or
add
pop
jmp
bound
push
call
and
xchg
(bad)
lods
(bad)
int3
popa
xchg
es
push
cmc
dec
(bad)
sub
fdivr
pop
dec
sbb
lea
in
pop
data16
push
mov
stc
inc
ret
lds
push
loop
or
lods
sahf
cmp
pop
mov
lds
mov
fdivrp
mov
jle
jae
enter
jge
icebp
sub
in
stos
shl
cmp
mov
push
cmps
xchg
fsubr
pop
mov
mov
jp
out
sti
and
neg
movs
enter
or
xchg
jne
out
retf
in
mov
cwde
fimul
rol
sahf
xchg
dec
xchg
jle
push
(bad)
cmp
sti
movs
ficomp
dec
mov
mov
out
ret
jl
dec
sub
adc
(bad)
je
jge
std
jb
jg
rcl
iret
mov
add
ret
cmp
pusha
dec
mov
xlat
jp
dec
popa
pop
retf
out
push
dec
push
pop
imul
enter
scas
or
push
jmp
push
outs
test
cs
pusha
test
movs
jae
retf
xor
inc
call
mov
add
jp
mov
cmp
and
dec
hlt
xchg
sbb
(bad)
jns
mov
mov
dec
mov
pop
sub
outs
push
mov
(bad)
out
adc
cmc
mov
mov
xchg
arpl
xor
mov
fwait
(bad)
mov
mov
outs
adc
je
mov
cs
stc
mov
rcr
mov
pop
shl
fucomi
xchg
gs
ficom
sub
xor
pop
inc
xchg
imul
adc
inc
(bad)
xor
xchg
jle
mov
cmps
or
adc
cmp
push
shl
jae
pusha
cmc
div
push
push
xchg
ja
and
out
inc
sti
cs
xchg
fst
call
arpl
stc
mov
mov
test
push
sub
retf
fcomp
nop
iret
push
fdiv
push
enter
xchg
jno
cdq
fnstenv
cli
fisub
aam
fwait
fwait
sub
(bad)
int3
mov
xor
je
leave
pop
ret
ja
sbb
push
test
stos
jmp
or
ds
pop
retf
call
mov
push
mov
add
xor
add
ins
in
mov
sub
call
or
or
out
lods
cmc
cmp
inc
pop
cld
mov
shl
(bad)
(bad)
enter
xchg
sub
into
add
sbb
sar
sub
and
outs
fwait
xchg
aam
outs
imul
fs
inc
jb
xchg
mov
and
cmp
mov
aad
iret
inc
mov
(bad)
push
xchg
sub
pop
mov
mov
xor
lds
xchg
cmp
stos
dec
outs
inc
inc
xor
int
cmp
xchg
inc
lods
dec
jne
xchg
mov
jmp
and
js
mov
in
dec
xchg
test
movs
cli
sahf
hlt
and
xor
rcr
and
jl
push
rcr
call
cmc
out
icebp
(bad)
jl
mov
icebp
jnp
and
push
in
or
jnp
aas
jns
mov
push
jecxz
push
gs
jns
lods
jbe
loope
xor
xchg
mov
inc
fmul
loopne
data16
inc
loopne
jmp
ror
mov
mov
pop
jecxz
(bad)
js
aad
gs
call
sbb
sub
jg
push
inc
out
pushf
cmp
and
push
sbb
add
adc
adc
addr16
mov
lahf
xor
inc
pop
sbb
imul
leave
ret
fild
test
rcl
jo
aad
cmp
add
dec
and
pop
push
aaa
and
add
outs
add
imul
and
push
cmp
bound
jne
nop
cmp
aad
xor
pop
sbb
aas
mov
add
test
pop
dec
mul
sub
je
inc
fs
mov
push
retf
es
cmp
jb
cmp
mov
cld
push
addr16
mov
int
aaa
sbb
xchg
aas
loop
xor
xchg
push
pop
and
push
rol
std
rcl
adc
cmps
pop
adc
mov
popa
aam
or
or
outs
or
adc
xlat
dec
jnp
call
push
out
inc
scas
or
xor
daa
push
pop
fisttp
cmp
mov
scas
cdq
ret
pop
popw
pop
out
xor
dec
xor
out
dec
mul
push
dec
mov
retf
mov
arpl
sub
pop
lds
repnz
xchg
push
mov
or
push
inc
add
jae
pop
mov
mov
sti
jmp
xor
loopne
pop
inc
retf
and
fidiv
xor
cmps
test
out
and
adc
stos
cmps
aad
in
adc
ja
in
dec
mov
stos
loopne
push
dec
cdq
and
pop
clc
or
imul
ret
lds
in
mov
jmp
mov
jmp
sub
inc
mov
retf
pop
mov
nop
and
inc
jge
push
loop
jecxz
inc
out
das
call
jno
add
imul
in
and
inc
(bad)
pop
jecxz
aaa
sbb
ins
sbb
idiv
ins
cmc
pop
mov
dec
sbb
dec
add
jo
xor
out
cmp
sub
xchg
les
push
out
int
mov
mov
xchg
mov
inc
dec
jnp
ss
mov
push
xchg
mov
mov
cmp
out
sbb
rcr
xchg
cmp
mov
or
repz
dec
lahf
xchg
lods
aad
pusha
pop
pop
es
sub
inc
jmp
aad
mov
movs
and
cmc
xchg
aam
dec
mov
ds
pop
and
mov
mov
fwait
rol
cmps
pop
ja
out
leave
jle
xchg
pop
iret
lods
pop
in
fiadd
cmp
mov
mov
pop
cmps
dec
sbb
cmp
cs
aaa
es
sub
pusha
cmp
jp
sbb
stos
jl
xor
aam
sbb
mov
xchg
and
ret
mov
fwait
add
inc
sahf
bound
sbb
jmp
mov
sub
sub
mov
out
imul
shr
sub
call
fs
push
cmps
adc
cld
gs
pop
jno
dec
push
aas
ins
cmovs
imul
leave
lods
call
sub
cmp
hlt
lods
xor
dec
test
mov
sbb
inc
xor
add
and
dec
xor
cmp
in
scas
dec
scas
arpl
mov
js
jp
shl
and
cmp
xchg
push
jno
in
cdq
fst
inc
scas
out
movs
cmp
mov
sub
cmp
mov
in
and
or
push
and
fnstsw
(bad)
out
(bad)
mov
shl
and
(bad)
pop
mov
and
add
popa
inc
adc
movs
hlt
lahf
jb
call
leave
cmc
rcl
test
repnz
fimul
mov
imul
inc
dec
popf
add
xor
inc
push
xor
in
cmc
adc
repz
or
add
sub
loop
xchg
aas
add
out
rol
push
sub
or
cmp
sub
loope
ds
dec
cmps
push
adc
test
cs
adc
sti
jge
inc
gs
push
and
xor
and
sbb
ds
ret
out
pop
inc
xchg
pop
mov
lock
cli
dec
aaa
test
push
movs
mov
jns
je
or
loopne
fsub
not
sbb
sbb
inc
mov
dec
test
sar
push
push
jecxz
xor
ficomp
sbb
cmp
pop
cmp
push
das
mov
(bad)
sub
(bad)
in
xchg
repnz
jp
cmps
add
and
fstp
push
mov
sbb
call
sub
jae
cmp
dec
jg
aas
stos
xchg
add
cmp
arpl
div
jg
or
retf
xor
sbb
inc
mov
and
cdq
mov
hlt
mov
int3
sti
mov
adc
pop
add
movs
retf
inc
xchg
push
mov
pop
scas
fidivr
inc
dec
jno
ins
aaa
sub
stc
mov
vpsrlvd
inc
mov
xor
add
add
or
push
add
int3
data16
imul
cmps
dec
mov
xchg
ja
push
inc
sbb
mov
jmp
dec
loopne
movs
fbld
in
xor
ss
test
jp
mov
pop
mov
sub
dec
dec
aam
mov
and
mov
push
xor
clc
xchg
mov
movs
sbb
inc
jnp
daa
mov
je
cmp
ret
ss
pusha
xchg
shl
mov
mov
xchg
or
mov
mov
adc
inc
data16
and
and
sub
inc
sbb
or
pushf
rcl
pop
add
mov
aad
sub
mov
cmps
je
sbb
and
outs
push
popf
add
icebp
ins
aam
cmp
(bad)
cdq
xor
call
out
hlt
ins
in
push
sub
es
(bad)
cmp
outs
call
add
scas
cmp
mov
imul
mov
data16
in
adc
idiv
ins
addr16
fldenv
mov
sbb
mov
fisub
in
retf
fld
test
sub
xor
ror
pop
jno
add
sub
push
inc
je
mov
idiv
jns
cmp
jge
cmps
fst
in
lds
sahf
ins
xor
mov
les
mov
xor
cdq
cli
inc
fsubr
push
retf
push
mov
repz
into
dec
test
dec
stos
push
ret
adc
fidivr
push
and
or
test
sub
lock
das
pop
xor
out
aaa
pusha
(bad)
in
sahf
(bad)
pop
jo
inc
xlat
loop
add
fs
daa
jae
and
jmp
jno
push
mov
aad
push
mov
test
outs
mov
jl
jns
mov
ja
cmps
sbb
mov
mov
in
pop
xor
les
(bad)
cmp
bound
xchg
fstp
dec
xor
pusha
mov
sub
mov
imul
inc
jae
mov
paddsw
xor
cwde
mov
add
xor
jecxz
mov
sbb
psubq
mov
mov
test
cmps
cmp
or
fwait
jmp
sbb
in
jmp
pop
cmp
or
and
pusha
dec
imul
dec
mov
retf
sub
add
movs
push
cdq
in
or
xor
fimul
pop
imul
sub
cmp
shr
std
in
jns
sar
and
adc
bound
sahf
inc
mov
xchg
adc
lds
push
jno
cmps
in
mov
leave
mov
push
and
jnp
jecxz
stos
adc
mov
icebp
jne
ficom
xchg
and
arpl
add
test
push
mov
push
sbb
push
push
and
lock
xlat
pop
test
(bad)
xchg
add
pop
ffree
paddq
bound
xchg
sahf
sub
sub
pop
outs
adc
push
popf
(bad)
mov
add
jp
pop
fs
rol
and
sbb
and
xchg
call
fst
cmc
jbe
call
ret
in
out
clc
in
dec
cmc
xor
es
je
nop
inc
shr
hlt
imul
sub
mov
fstp
pop
xchg
mov
jp
sbb
xor
mov
outs
movs
cmp
xchg
push
dec
das
mov
cmp
sar
outs
push
dec
in
das
add
(bad)
adc
sub
cwde
lds
or
dec
cmps
ins
and
iret
mov
pop
repz
push
sub
test
or
and
int
mov
js
test
ss
jbe
rol
sbb
jne
or
ins
(bad)
sbb
xchg
xor
jns
jl
pop
ret
cld
xor
cdq
ins
push
sub
pop
inc
out
jl
ja
aam
call
daa
mov
mov
pop
xchg
gs
add
and
adc
lea
iret
jmp
sti
and
sbb
push
sub
mov
mov
sbb
sub
adc
out
sub
mov
adc
loope
mov
imul
xor
imul
fmul
outs
cld
cdq
mov
mov
cmp
jecxz
in
xchg
pop
mov
clc
jae
popa
mov
ret
arpl
xchg
sbb
stos
push
add
(bad)
fimul
fild
xchg
inc
xchg
stc
mov
mov
jno
add
adc
popf
fnstsw
xchg
adc
cld
loopne
pop
pop
cmp
jmp
or
cmp
call
je
leave
icebp
push
dec
cdq
jle
and
pop
jg
shl
cwde
mov
push
aad
les
xchg
jno
dec
enter
cmp
fs
push
sub
pop
sub
push
das
push
pop
and
or
jns
sub
mov
adc
inc
movs
mov
cmc
rcl
lea
test
push
call
dec
add
jmp
repnz
aam
ja
lods
xlat
push
push
ins
add
(bad)
push
loope
push
loope
xor
fsub
(bad)
outs
xlat
test
push
int
and
mov
and
imul
fsubp
ins
fisubr
je
mov
repnz
cmp
add
and
adc
mov
sbb
sbb
jb
mov
call
sbb
sub
into
fcom
lods
outs
adc
js
ins
mov
sbb
mov
xchg
or
rcl
fdivr
dec
leave
ret
clc
addr16
stos
fild
aam
imul
push
pop
dec
pop
fsub
fdivr
mov
aad
(bad)
xchg
push
sub
pop
xor
dec
xchg
(bad)
cdq
imul
cmps
inc
pop
imul
push
(bad)
fiadd
and
dec
sub
ficomp
out
mov
(bad)
lahf
mov
mov
sub
popa
xchg
addr16
pushw
je
pop
aam
jae
pop
cmp
stos
fbld
shr
stos
inc
jae
sar
es
jae
adc
sub
ret
sahf
xchg
ja
and
dec
cmc
mov
push
(bad)
aam
js
cmp
add
xchg
aaa
std
jg
imul
dec
stc
mov
scas
mov
or
sbb
push
mov
cmp
inc
mov
std
mov
pushf
test
cmp
push
cmc
aam
ds
js
loopne
es
xor
addr16
jecxz
sbb
mov
hlt
scas
vprotq
and
mov
dec
jno
push
jb
cmp
ins
xchg
jp
pop
outs
xchg
mov
add
dec
aaa
(bad)
mov
xchg
outs
jo
ins
fldcw
dec
fdiv
push
pop
and
lds
sti
jnp
imul
mov
int
ja
daa
das
ja
sub
mov
(bad)
cmp
sbb
xlat
mov
push
and
in
arpl
es
pop
hlt
mov
out
mov
fadd
push
sub
lea
stos
shl
movs
dec
retf
enter
test
scas
je
mov
in
push
pop
mul
(bad)
test
mov
inc
shl
pop
fwait
cld
daa
(bad)
push
adc
mov
ja
xor
pop
sbb
and
dec
adc
rol
mov
ret
dec
dec
inc
(bad)
fstp
cli
sub
pusha
bound
aas
jno
jo
pushf
jnp
push
inc
jns
enter
and
movs
xlat
movs
ss
loope
cld
retf
inc
pop
test
(bad)
add
mov
sahf
imul
push
mov
sbb
and
mov
or
jne
test
lods
in
rol
popa
cli
adc
(bad)
(bad)
fisttp
enter
stos
aas
jmp
mov
fwait
arpl
mov
aaa
sahf
fst
loopne
jne
mov
mov
push
les
in
push
push
and
movsx
cmps
xchg
pop
jg
cmp
aas
fiadd
adc
pop
pushf
fild
mov
xchg
out
jecxz
jecxz
sub
adc
int3
imul
loope
pop
and
cdq
ins
xchg
popf
cmp
mov
adc
in
cmp
jae
inc
mov
inc
in
push
sbb
and
pop
inc
arpl
inc
(bad)
sbb
(bad)
cdq
popa
ficom
inc
push
leave
xor
pop
cmp
not
and
fwait
and
cli
clc
fs
and
fld
jecxz
jno
stc
punpckhdq
sub
in
lods
imul
push
xor
xchg
dec
mov
aaa
call
loope
jg
out
push
leave
mov
jb
pop
mov
mov
pushf
adc
jo
pushf
fidivr
push
sub
jbe
retf
xor
mov
pop
stos
pusha
mov
push
adc
cs
sub
rcl
pusha
push
je
test
movs
jg
cmp
push
jne
mov
sti
mov
out
cmps
push
and
push
scas
stos
push
sub
pusha
test
stos
xlat
imul
cdq
mov
ficomp
int
dec
mov
push
ins
mov
add
int3
dec
scas
(bad)
ror
add
pop
pop
dec
in
pop
pop
jp
pop
pop
test
cmp
sub
repz
pop
xchg
push
or
mov
xchg
pop
pushf
push
loop
mov
fadd
popf
jecxz
xchg
lds
(bad)
jne
xchg
xor
sbb
sbb
hlt
push
jl
mov
cwde
cwde
add
cdq
mov
xor
in
ja
into
cli
or
dec
(bad)
xor
aas
mov
nop
dec
or
faddp
outs
je
xchg
push
mov
sbb
mov
xchg
add
sbb
sub
jecxz
rcl
std
mov
ret
call
ja
push
out
hlt
dec
fnstsw
and
rcr
test
mov
adc
stos
bswap
lods
sub
or
inc
sbb
out
fcmovnbe
aad
dec
mov
pop
mov
mov
adc
add
push
retf
or
xor
pop
fwait
inc
sbb
add
xchg
or
and
imul
icebp
ret
push
sub
mov
ins
cld
jno
sub
pop
inc
dec
xor
push
mov
mov
adc
scas
and
inc
sub
and
stos
dec
movs
xchg
jl
inc
aad
pop
test
mov
jge
adc
push
shr
jp
or
xchg
bound
add
xor
xor
rol
sbb
push
pop
jecxz
outs
push
lods
mov
ins
pop
imul
enter
dec
xchg
jge
inc
adc
pop
inc
or
mov
xchg
call
aaa
mov
and
pop
push
mov
test
aad
mov
pop
jmp
ret
inc
cmp
shl
mov
icebp
psubusb
sub
in
mov
cmps
(bad)
popa
xor
xor
loope
addr16
sbb
movs
mov
inc
dec
aad
mov
add
sbb
cli
mov
ins
imul
mov
inc
or
dec
sbb
sbb
test
dec
jb
jmp
sub
(bad)
test
adc
dec
jno
idiv
rcr
sub
dec
shl
sbb
and
dec
or
and
add
out
jmp
push
ja
inc
pushf
movhps
mov
ss
mov
js
pop
pop
retf
pop
mov
and
mov
daa
xor
mov
(bad)
push
adc
(bad)
cmp
pop
in
nop
pusha
lea
loop
xchg
int
jl
cmp
cmp
xchg
enter
call
or
cmps
jns
mov
sbb
(bad)
xor
cmps
jae
and
aad
cmp
xor
add
dec
add
les
xchg
mov
or
dec
rcl
or
mov
popw
test
test
(bad)
out
or
xchg
repz
mov
add
fcomip
mov
mov
mov
ins
dec
adc
pop
dec
in
dec
retf
jo
jecxz
cld
and
fadd
dec
mov
or
and
mov
sbb
cmps
div
gs
ins
hlt
dec
mov
fistp
ja
inc
cmp
lods
mov
inc
std
and
dec
aad
call
popf
aaa
popf
dec
sti
pop
push
adc
cmp
or
mov
call
dec
or
in
fistp
(bad)
out
mov
call
push
pop
pop
into
cmp
adc
(bad)
lods
fdiv
mov
xchg
imul
fdivr
or
dec
lock
cmp
loop
jmp
mov
push
test
mov
mov
repz
push
test
inc
(bad)
xor
inc
in
gs
idiv
inc
sub
mov
cli
or
imul
cmp
or
stc
push
shl
std
xchg
ret
mov
ins
push
mov
test
push
jmp
sahf
inc
aad
jp
loope
push
scas
scas
div
mov
jnp
idiv
add
test
and
test
push
mov
icebp
inc
mov
dec
sub
out
jne
loop
mov
or
sub
stos
inc
push
cmps
pop
inc
cmp
pop
js
jno
dec
add
and
xor
mov
jo
and
inc
movs
iret
ja
stc
mov
dec
push
xchg
iret
pushf
xor
shl
es
or
sub
jmp
and
std
pop
stos
ins
sub
popa
xchg
mov
into
sub
adc
fwait
xor
jmp
fstp
add
mov
ja
xchg
dec
jne
sbb
or
xor
iret
sbb
push
popa
sub
mov
xchg
adc
push
push
pop
bound
cmp
leave
pop
bnd
mov
iret
jb
push
mov
lock
ficomp
xchg
push
in
adc
mov
ret
scas
dec
sahf
icebp
xchg
mov
dec
mov
int3
lock
retf
xchg
or
inc
xchg
pop
jno
cmp
(bad)
loopne
xor
pop
or
idiv
inc
push
cs
mov
es
repz
bound
outs
test
push
inc
and
cdq
leave
ret
mov
adc
outs
push
ins
popf
mov
dec
std
out
(bad)
dec
(bad)
xchg
das
add
push
pop
inc
dec
mov
jp
pop
sub
dec
imul
clc
mov
jmp
mov
xor
inc
mov
dec
mov
jp
out
nop
adc
(bad)
test
jmp
sbb
mov
lock
cmp
inc
fisttp
push
jne
jbe
lea
(bad)
xchg
or
mov
lock
and
xchg
mov
xchg
dec
fsubr
mov
xchg
mov
inc
mov
push
data16
or
jge
hlt
xchg
mov
(bad)
test
jg
and
sub
mov
outs
rcr
fwait
xchg
mov
mov
xor
xchg
cwde
leave
loopne
stos
fmul
lea
pop
movs
inc
jl
inc
pop
push
loop
aaa
inc
push
imul
add
dec
pop
and
mov
fdiv
push
stc
(bad)
in
add
pop
or
scas
aas
mov
jo
cmp
inc
ds
pop
shl
and
retf
call
lea
xor
scas
div
test
das
mov
in
mov
sbb
jge
mov
fimul
je
dec
mov
xchg
pop
sub
jmp
mov
bound
int3
loop
pop
pop
inc
xchg
mov
sbb
test
popfw
out
cmc
aam
(bad)
and
bound
mov
aad
add
push
mov
in
xchg
cmp
aaa
sub
mov
mov
ss
jns
sub
(bad)
dec
shl
loop
dec
add
sahf
cmp
adc
in
mov
cdq
retf
mov
mov
mov
inc
xor
fiadd
mov
xchg
test
mov
leave
outs
lahf
loop
imul
std
(bad)
or
add
pop
arpl
arpl
(bad)
sar
pop
and
and
lds
dec
mov
mov
test
out
stos
jmp
aad
loopne
or
cmp
and
lock
not
aad
mov
test
mov
push
xchg
int3
retf
stos
jmp
into
adc
ja
jne
aaa
sahf
scas
or
aam
push
pop
xor
add
add
sti
xor
mov
inc
mov
fst
daa
sub
in
pop
inc
inc
mov
in
adc
jp
xchg
sahf
dec
and
pop
mov
sbb
(bad)
dec
fild
pop
sub
jb
mov
fucomi
mov
add
loop
mov
nop
ins
pop
or
hlt
aaa
or
stos
pop
mov
mov
aad
fimul
dec
fnstcw
sbb
call
pop
loop
xchg
add
loopne
je
out
xchg
aam
adc
mov
sbb
imul
sti
push
fld
cmp
xchg
lods
add
jb
inc
stos
call
jns
retf
sub
cmp
push
ins
push
outs
imul
jmp
jg
jae
push
jmp
addr16
cli
push
ss
mov
and
dec
and
test
mov
mov
xchg
inc
dec
jo
pop
mov
mov
xchg
cmc
inc
gs
add
and
xor
mov
xlat
pop
mov
outs
hlt
mov
cmp
pop
xlat
outs
and
mov
imul
jae
clc
hlt
in
adc
mov
adc
add
inc
or
or
jg
adc
mov
pop
xchg
(bad)
repnz
movs
adc
push
pop
and
and
pushf
add
xchg
(bad)
dec
fdiv
ins
pop
jae
mov
test
scas
rcr
stos
ins
and
push
and
add
sub
div
pop
push
test
xchg
pop
loopne
rep
fiadd
iret
jbe
fdivr
pop
fcomp
out
(bad)
jno
in
(bad)
inc
gs
icebp
mov
pushf
data16
adc
add
cmp
lock
mov
pop
sub
call
dec
out
mov
movs
in
mov
sahf
(bad)
popf
sahf
push
out
add
dec
ds
mov
jp
sbb
imul
mov
xchg
ins
sub
ret
sub
or
adc
mov
in
inc
test
iret
xor
mov
pop
fs
dec
test
add
jnp
js
or
xchg
add
sbb
mov
(bad)
std
cmp
lea
icebp
cmp
jl
add
ja
inc
xchg
adc
and
pop
push
xor
adc
cdq
ins
push
shl
arpl
push
mov
cmp
sub
cmps
jo
mov
adc
test
pop
adc
jmp
push
lea
scas
mov
repz
adc
add
jp
mov
sub
cmps
scas
sahf
jbe
sub
ret
and
cmp
mov
and
int3
mov
inc
xchg
into
mov
mov
mov
sbb
xchg
call
xor
cmps
push
pop
push
dec
popa
xchg
out
or
mov
repz
mov
jle
mov
xchg
add
in
popa
or
ret
ja
dec
mov
adc
scas
sub
movs
adc
movs
sub
lea
in
das
aad
outs
stc
mov
lahf
out
outs
cmp
xor
imul
cmps
mov
sbb
(bad)
mov
fisub
or
ss
imul
inc
adc
stos
je
jecxz
cmp
or
pusha
or
xchg
and
hlt
jno
push
sbb
jo
and
popa
inc
jb
xor
xor
dec
jmp
push
push
and
dec
jnp
mov
in
call
test
outs
xor
or
ins
pop
push
addr16
add
mov
and
mov
pop
sub
xor
and
ds
xor
mov
stos
adc
inc
iret
pop
or
mov
fwait
movs
inc
lds
dec
les
cwde
jmp
lahf
xchg
push
in
mov
clc
sub
adc
jnp
js
xchg
cs
in
js
push
xor
out
sub
ja
ins
cwde
mov
jmp
cmc
jno
shr
xchg
sub
xor
push
xchg
pop
popa
xchg
jbe
(bad)
adc
push
pop
mov
xchg
inc
fst
add
xchg
jns
sbb
jb
ja
inc
fnstenv
xchg
dec
ins
mov
popa
xchg
test
mov
inc
push
popf
lock
mov
dec
pop
mov
dec
jmp
mov
pop
(bad)
cld
clc
dec
popf
pop
rol
jne
inc
and
ins
inc
mov
mov
push
or
mov
xor
in
aas
and
out
adc
cmp
mov
jl
pushf
push
sub
ds
or
popa
xchg
adc
adc
xchg
rcr
mov
mov
popf
cmps
ins
and
mov
push
call
and
retf
adc
bound
std
mov
and
jmp
push
in
pop
cmp
imul
cmp
jg
mov
inc
mov
dec
fwait
dec
xchg
adc
test
fidiv
jge
xabort
pop
cdq
dec
movs
sahf
push
fs
movs
nop
pop
mov
into
xor
mov
adc
or
icebp
cli
retf
sub
xchg
imul
and
xor
xchg
ret
aaa
lock
pushf
sub
fisub
mov
add
jbe
mov
or
cld
push
in
(bad)
mov
pop
or
xchg
outs
cmp
lea
mov
les
mov
mov
mov
in
lea
sbb
mov
cli
pop
xor
xchg
xor
call
mov
mov
inc
sub
mul
stc
clc
test
scas
and
mov
mov
and
dec
imul
arpl
xor
push
cmc
inc
test
ror
inc
jle
pop
in
pop
adc
ja
test
je
adc
fmul
dec
cmp
retf
les
xlat
enter
sbb
pop
fst
mov
mov
and
icebp
inc
or
jl
loop
imul
ins
loope
pop
movs
inc
in
fidivr
in
mov
mov
scas
inc
pop
cld
add
mov
jbe
leave
jle
mov
mov
jecxz
push
stos
clc
jnp
addr16
jmp
xchg
ja
js
fs
sbb
xchg
loop
dec
es
or
into
mov
int3
test
cmc
mov
and
add
pop
pop
(bad)
cli
and
scas
sub
jnp
lds
jp
mov
or
ins
dec
ror
ins
das
xchg
dec
adc
push
mov
inc
aaa
loope
mov
mov
cmps
or
jns
icebp
and
movs
clc
idiv
xor
jne
push
push
pop
es
xchg
dec
mov
aas
out
sbb
xchg
mov
xor
mov
cmp
cmp
mov
lahf
add
mov
pop
loop
stos
je
ret
add
aam
or
add
ins
out
xchg
mov
loop
xchg
add
ror
ret
out
mov
pop
add
dec
adc
push
mov
mov
jmp
jmp
popf
ja
push
fsub
push
ja
into
and
mov
cmp
jecxz
shr
aad
cmps
and
xchg
ins
fs
cwde
mov
push
rol
pop
ror
shr
lods
fwait
sbb
xchg
adc
loop
dec
pop
mul
sar
jne
mov
cmp
loope
xor
les
jae
fldenv
inc
iret
xchg
xor
aas
int
and
dec
ins
or
popf
imul
sti
push
push
fimul
and
dec
jl
xchg
in
popa
jge
adc
mov
jle
mov
adc
jne
add
sar
je
ja
sub
popa
nop
mov
xor
(bad)
out
cmp
cmc
ja
mov
pop
mov
xor
call
(bad)
add
icebp
ins
imul
and
xchg
loop
inc
rcr
mov
sub
mov
fldcw
or
outs
in
movs
xchg
pop
imul
stos
cld
bound
cmp
dec
jno
cdq
cmp
jmp
add
adc
pop
ins
cld
xor
adc
push
push
retf
fbld
out
jmp
or
add
or
and
mov
repz
mov
inc
mov
inc
test
push
stc
pop
sub
sub
rcr
xor
xchg
and
jmp
dec
(bad)
lods
cwde
daa
fimul
or
aam
test
xor
push
fidiv
outs
lds
sub
inc
jne
lods
inc
mov
pop
imul
cwde
sbb
sbb
cmp
sbb
xchg
sahf
xchg
mov
xchg
pop
stos
inc
inc
inc
inc
jae
nop
int
dec
dec
loopne
pop
push
mov
pop
add
dec
les
pop
(bad)
dec
leave
add
je
cld
in
jae
ret
scas
mov
sub
shr
add
mov
dec
inc
mov
and
dec
adc
mov
fsubr
div
imul
je
mov
dec
clc
aaa
push
inc
inc
into
gs
sbb
mov
mov
mov
scas
add
imul
jae
dec
test
hlt
or
cmps
rcl
add
and
f2xm1
inc
mov
mov
leave
mov
cld
add
les
pushf
mov
add
out
xchg
sbb
repz
mov
(bad)
sub
push
rcl
push
arpl
adc
and
test
aam
add
cmp
xor
xchg
cmc
imul
test
lods
mov
sbb
icebp
ja
mov
add
pop
ja
sub
mov
gs
mov
cmp
ins
pop
outs
pushf
add
mov
xchg
mov
mov
mov
xchg
sub
lds
xchg
(bad)
and
int3
dec
div
aam
aam
jne
jmp
div
das
rcl
fsub
push
xor
rcl
jmp
(bad)
xor
test
rol
cmc
mov
pop
push
mov
in
imul
test
leave
in
inc
in
mov
lock
xchg
sub
pop
out
xchg
repz
lods
dec
clc
(bad)
xchg
jbe
fbstp
mov
sbb
xor
dec
jl
or
daa
pop
mov
mov
outs
add
inc
scas
add
push
fcomi
pusha
inc
outs
xchg
cmp
imul
and
xor
jb
ins
jmp
pop
push
stos
pop
stos
and
popf
jmp
scas
push
mov
dec
pop
jnp
mov
pop
imul
sbb
and
movs
sbb
stc
or
out
pop
cmp
inc
ins
push
adc
mov
jl
mov
fist
in
xor
pop
jns
cli
push
retf
sub
mov
pop
xor
xchg
cwde
sub
adc
sub
aas
aas
push
inc
mov
pushf
add
sahf
push
mov
mov
add
push
test
dec
dec
push
in
mov
pop
stos
mov
mov
add
sar
dec
xor
cmc
mov
in
xor
sbb
fs
cmps
outs
pop
les
xor
(bad)
aas
lahf
inc
and
cmp
shr
pop
mov
hlt
scas
loop
in
daa
shl
dec
cmp
mov
pop
jge
add
push
adc
js
movs
xor
aaa
and
lock
loopne
leave
neg
test
mov
std
in
jmp
in
cmp
add
scas
test
jmp
aam
sub
jmp
icebp
cli
into
fcom
inc
(bad)
inc
sbb
call
sub
fwait
jmp
movs
mov
sbb
call
fcomp
sbb
out
lock
add
test
or
(bad)
loopne
scas
inc
and
into
xlat
inc
xor
ror
fwait
mov
popf
scas
fcomp
aam
aas
ss
jo
push
ins
js
mov
stc
cmp
sub
test
adc
ret
cmp
push
add
lds
inc
or
fwait
loopne
inc
add
sbb
adc
dec
daa
push
mov
dec
repz
out
add
sbb
sbb
lods
cmp
ins
sbb
dec
pop
push
pop
shl
sbb
mov
cmp
imul
cmc
(bad)
arpl
sub
pop
aad
cmc
sbb
(bad)
(bad)
(bad)
mov
mov
stos
cmc
xchg
mov
push
push
popa
cdq
pop
loope
loop
bound
scas
ins
lock
lods
adc
jg
scas
xor
cmp
xchg
mov
adc
sar
mov
pop
in
mov
imul
mov
dec
imul
xchg
shl
jno
mov
cli
push
jns
inc
pop
sahf
repz
es
mov
xchg
fdiv
pushf
push
addr16
sbb
je
sub
pop
enter
push
adc
sbb
pushf
ficom
pop
test
xor
pop
mov
adc
jl
ins
inc
cwde
stos
xchg
cmp
fsubr
es
mov
movs
out
aam
jg
clc
call
adc
sbb
cmps
pop
icebp
mov
dec
fimul
ret
push
xchg
int3
push
movs
xor
adc
pop
push
sti
iret
lods
fsubr
mov
ret
daa
inc
and
sbb
pusha
cdq
sbb
cmp
test
sbb
inc
dec
leave
or
push
xor
mov
test
mov
sub
movs
inc
pop
xchg
cmps
jo
cmc
out
pop
sub
jnp
mov
gs
arpl
jmp
ja
cmps
xchg
mov
inc
sbb
outs
leave
cld
jp
arpl
inc
adc
jmp
mov
mov
stos
aad
fstp
pushf
add
dec
add
pop
ins
enter
jb
fld
test
ins
mov
dec
out
mov
jae
mov
dec
mov
test
adc
cwde
xchg
ret
dec
mov
push
test
xor
push
mov
fwait
dec
shl
mov
stos
inc
cmps
mov
(bad)
push
inc
scas
xchg
mov
lahf
xchg
push
xor
push
inc
mov
sbb
mov
cmp
pop
int
ret
and
mov
dec
add
or
or
add
and
retf
add
adc
pop
in
hlt
stc
xor
lds
jmp
dec
adc
call
in
pop
xor
sbb
icebp
loop
lock
loope
out
jl
pop
push
mov
pusha
sub
idiv
jl
rcl
lea
inc
ja
test
lds
push
(bad)
mov
scas
dec
jb
pop
mov
pusha
xchg
xor
popf
dec
ss
iret
sbb
cmp
shl
sbb
mov
inc
push
dec
retf
dec
ret
dec
icebp
xchg
add
sub
(bad)
pop
cmp
cmp
sbb
rol
clc
mov
retf
imul
jecxz
or
xor
sbb
jecxz
(bad)
ss
push
xor
out
inc
in
dec
sub
shr
shl
(bad)
nop
or
jmp
push
out
ffreep
pop
retf
pushf
rcr
rcl
iret
lods
pop
mov
lods
push
push
and
push
pop
outs
fcmovu
ret
mov
sar
xor
ret
push
adc
jecxz
mov
dec
cmp
cmc
cmp
inc
ss
and
mov
gs
add
inc
jg
xchg
mov
mov
mov
push
div
push
dec
repz
cmp
into
outs
cmp
mov
xchg
in
adc
add
inc
sbb
int
stos
call
ins
test
iret
inc
stc
mov
pop
cmp
push
out
jge
mov
add
add
mov
outs
repz
pop
or
mov
pop
movs
test
mov
cld
out
pop
pushf
jge
fcmovbe
jg
ja
pop
gs
xchg
mov
mov
movs
mov
(bad)
sar
xlat
push
je
sub
cmp
ins
in
mov
mov
shl
sbb
shl
and
jns
das
cmp
push
test
movs
into
or
pop
add
hlt
cdq
jnp
or
in
mov
xor
xor
dec
push
in
sbb
mov
push
xor
cmc
pop
cmp
(bad)
xlat
in
(bad)
mov
je
mov
inc
retf
cmps
div
pop
and
movs
jae
je
popf
push
pop
xchg
repz
cmc
stos
adc
bound
call
bound
push
dec
test
inc
jne
ret
mov
sub
add
fild
mov
aas
js
clc
push
cmp
out
fcmovnb
dec
out
mov
loope
dec
push
cmp
test
(bad)
popa
ret
in
jmp
push
stc
pop
sbb
push
xchg
mov
sub
(bad)
cmp
dec
cmps
add
mov
add
test
pop
fdiv
cmc
inc
retf
frstor
lods
pushf
push
ret
retf
inc
popa
adc
ret
aam
and
and
mov
xor
sub
push
jb
pop
sti
out
fmul
mov
clc
jb
(bad)
pushf
retf
in
nop
jmp
add
in
push
sub
(bad)
push
mov
lods
daa
in
lods
ins
xchg
test
lahf
add
sub
add
mov
push
(bad)
sub
mov
in
xchg
imul
fild
jne
jne
fisubr
pop
mov
cmc
shr
gs
mov
and
fidiv
pop
cmc
lods
and
enter
jmp
scas
mov
push
ficom
out
aas
mov
dec
pop
mov
xchg
cmc
adc
cwde
xor
aaa
jno
loop
pop
test
xor
xor
(bad)
bound
out
mov
ins
lods
xor
mov
push
jno
mov
push
les
pop
std
jge
dec
xor
dec
hlt
and
gs
push
test
scas
sub
fwait
aas
pop
mov
out
loope
push
xor
jge
lock
mov
pop
cmps
test
stc
mov
bnd
(bad)
fidivr
aad
push
dec
stc
mov
test
aaa
outs
xor
hlt
cmps
xchg
mov
cdq
pop
fistp
sbb
xchg
mov
outs
mov
in
ss
fwait
paddq
ror
and
aas
sub
cwde
jbe
ficom
fiadd
or
cmp
add
sub
mov
ja
in
mov
shl
cld
or
pop
adc
(bad)
ins
in
inc
jbe
(bad)
lods
std
ror
mov
push
jecxz
jecxz
shr
or
inc
mov
test
xor
ret
idiv
add
cmp
sub
push
sar
shld
dec
and
fcom
pop
in
out
loope
sbb
aad
xor
pop
and
addr16
jg
mov
ret
data16
xlat
jae
leave
xor
rol
dec
in
ins
xor
jle
fldpi
lods
fistp
push
sbb
ins
imul
imul
movs
inc
in
and
fmul
nop
and
fstp
mov
in
xchg
ja
jae
pop
and
nop
xor
xchg
sar
ins
jae
addr16
popf
ja
aaa
pop
xor
sbb
push
lock
xchg
lahf
xchg
and
data16
lahf
xchg
ds
pop
push
xchg
jae
div
ins
jmp
or
xchg
not
xchg
jnp
popa
ret
cmp
cs
jle
jmp
dec
arpl
jle
sbb
das
xchg
sbb
out
or
xchg
mov
fst
das
rol
scas
pushf
test
sub
xchg
pop
or
outs
out
mov
das
ret
push
inc
stos
lahf
add
inc
xchg
pop
lahf
inc
lods
pop
cmp
call
adc
iret
cmc
xor
sbb
je
(bad)
aam
xchg
fcom
scas
jnp
pop
test
dec
(bad)
mov
(bad)
ja
mov
rol
iret
in
jmp
movs
call
jo
xchg
or
int
out
mov
pushf
fcomp
movs
push
(bad)
xor
or
outs
je
xor
sub
mov
stc
pop
pop
jne
repnz
loopne
xchg
pop
cmovp
(bad)
fdivr
adc
(bad)
cmc
jb
mov
dec
pop
dec
pop
cmc
leave
imul
and
xor
push
xor
outs
and
pop
cmp
mov
fsub
lods
pmaxsw
das
push
mov
stos
xor
ss
push
fldcw
mov
sub
xlat
sub
in
mov
cs
cmps
(bad)
fst
ds
cmp
in
stc
mov
ret
sbb
add
fsubr
shr
cwde
scas
fisttp
mov
and
hlt
add
mov
xor
jne
pop
cli
test
ret
bound
cmps
push
xchg
add
adc
gs
cmc
add
(bad)
test
add
pop
ret
xchg
sub
and
mov
xchg
jne
mov
xor
or
inc
pop
mov
(bad)
push
xor
pop
movs
inc
lock
stos
aaa
inc
rol
and
and
jmp
add
cld
pusha
stos
loopne
push
repz
imul
stc
mov
dec
dec
mov
mov
xchg
mov
push
push
adc
inc
mov
xchg
jle
jb
mov
dec
or
sar
hlt
add
adc
mov
sar
xchg
mov
icebp
sub
xchg
xchg
mov
sub
hlt
fmul
jle
push
mov
xchg
adc
in
mov
scas
sbb
ror
aad
pop
mov
fcomip
pusha
mov
xor
into
in
pop
test
not
aad
mov
and
daa
sub
inc
shl
xchg
hlt
jno
xor
pushf
(bad)
popf
mov
inc
test
add
push
hlt
adc
hlt
or
imul
jns
adc
adc
inc
cmp
fldcw
sbb
add
cli
std
retf
cmp
pusha
cmc
mov
xlat
inc
push
fcom
outs
neg
out
push
or
adc
mul
enter
loop
mul
or
fst
or
pop
xor
jno
stos
inc
pop
stos
cmp
jo
daa
xor
and
call
das
xchg
xlat
icebp
cmps
adc
inc
pop
mov
(bad)
aas
pop
jno
icebp
mov
inc
adc
retf
inc
ss
shl
(bad)
cmp
(bad)
fdiv
jnp
icebp
hlt
inc
pop
add
push
daa
pop
or
mov
or
ja
push
mov
xlat
iret
dec
lds
add
rcl
jg
icebp
sahf
retf
jne
hlt
mov
cmc
inc
mov
cmps
cdq
and
sub
dec
or
inc
and
aad
cdq
scas
and
nop
jbe
xchg
mov
leave
shr
xchg
test
sbb
je
dec
jl
inc
sbb
mov
pop
or
jle
jae
push
mov
dec
pop
pop
stos
adc
fldenv
ja
add
push
cld
in
push
mov
inc
add
jno
fcom
adc
test
add
dec
ja
sub
inc
dec
fdiv
or
jecxz
push
scas
ret
lahf
hlt
cmp
push
jmp
dec
push
or
ins
jp
adc
push
jnp
cmps
loope
enter
or
sbb
sub
aaa
aas
aam
ror
je
paddw
sbb
xchg
or
mov
mov
push
xchg
xor
inc
cmc
xlat
into
rcr
pushf
daa
sahf
inc
fisttp
mov
jmp
mov
sub
xor
stos
xor
scas
and
cld
outs
lds
ins
sub
mov
retf
enter
sub
and
ss
pop
pop
ja
retf
and
jecxz
ret
pop
fistp
aad
mov
dec
or
push
sbb
add
test
xlat
or
or
dec
ins
je
sar
cmps
ret
mov
push
cmp
jle
aaa
pop
cld
fnstenv
add
ficom
or
jmp
push
or
test
jl
sbb
fld
cmp
iret
popa
inc
xor
push
push
xor
loope
jecxz
out
movs
mov
sti
std
retf
sub
xchg
lds
ins
push
inc
out
sub
push
cmp
xlat
mov
(bad)
xchg
xchg
(bad)
jecxz
mov
sbb
pop
mov
repz
xchg
inc
stos
jns
adc
mov
sti
inc
int3
inc
jmp
popa
mov
add
sahf
addr16
dec
pmaxub
jne
mov
out
(bad)
xchg
test
out
sub
jno
dec
nop
or
xor
in
mov
push
rol
stos
(bad)
cmp
mul
mov
sub
adc
and
inc
(bad)
addr16
cwde
jae
sti
mov
lods
mov
out
aas
test
je
aaa
popa
sub
or
xchg
and
xchg
stos
xchg
outs
mov
outs
jp
addr16
(bad)
outs
imul
adc
lods
pop
xchg
and
popa
mov
gs
and
xchg
pop
sub
dec
neg
jmp
ins
push
pop
jae
cmps
out
test
fs
pop
add
out
add
mov
in
ins
ja
pusha
in
(bad)
call
aam
dec
dec
nop
inc
retf
and
mov
sti
retf
fcom
dec
ds
push
lods
jp
xchg
mov
ds
mov
(bad)
jg
mov
gs
aaa
pop
movs
adc
mov
mov
or
scas
pop
sub
ins
sub
inc
sbb
pop
cmc
or
xchg
je
xchg
cmps
inc
inc
add
mov
ins
lock
jmp
(bad)
xchg
das
dec
xchg
jl
mov
dec
sub
outs
push
shr
push
leave
(bad)
fsubr
mov
jecxz
lock
mov
push
dec
shr
ins
in
jmp
mov
inc
adc
loope
jge
shl
addr16
mov
into
dec
addr16
mov
mov
sub
scas
jb
retf
push
cmps
add
and
jmp
fimul
sbb
mov
(bad)
(bad)
ins
dec
mov
lock
pop
stos
sbb
add
retf
jmp
pop
les
sbb
xchg
fwait
int
mov
mov
and
bound
(bad)
dec
adc
mov
neg
cmp
push
jmp
sti
cmp
inc
aaa
cmps
push
jl
mov
pushf
push
push
and
inc
ret
(bad)
call
shl
adc
movs
(bad)
jge
xor
ja
addr16
add
and
or
xchg
jmp
das
sbb
fidiv
pop
xor
movs
loope
loop
jle
pop
xchg
lahf
jbe
jae
jp
je
inc
push
sub
sbb
jb
sbb
sti
mov
out
xor
or
aad
mov
rcl
std
std
pop
push
stos
adc
cmp
out
pop
add
shl
mov
ret
call
scas
dec
jmp
daa
push
and
mov
std
imul
cmp
ja
(bad)
les
add
imul
(bad)
sub
push
in
idiv
je
out
mov
in
xlat
dec
mov
push
cwde
idiv
mov
movs
and
fmul
fld
(bad)
clc
dec
inc
push
mov
leave
dec
jp
or
imul
xlat
adc
jmp
lods
xor
test
inc
repnz
ficomp
(bad)
cmp
sahf
dec
pop
push
pop
fsubr
aas
das
popa
add
jb
int3
loope
stos
fmulp
scas
ins
(bad)
pop
les
js
push
hlt
push
fidivr
aad
jbe
pop
out
neg
mov
movs
pop
dec
dec
and
jae
dec
dec
push
repz
inc
xor
int
push
adc
test
retf
dec
jmp
sbb
inc
dec
jno
outs
xor
sbb
enter
cmc
icebp
scas
xlat
lds
mov
jb
inc
popa
adc
test
lahf
mov
test
fisubr
jle
and
cmp
mov
jnp
xchg
test
cmp
xor
dec
mov
sbb
dec
dec
and
jmp
sub
pusha
sub
rol
jecxz
fdivr
std
mov
icebp
inc
mov
test
ror
dec
sbb
mov
int
stos
mov
cld
and
sahf
dec
enter
mov
(bad)
out
push
loop
push
jbe
sahf
sub
jg
mov
imul
ins
movs
push
les
jns
das
mov
cmps
push
mov
ss
jp
lds
and
icebp
xchg
sbb
and
xchg
inc
push
fild
mov
test
(bad)
in
dec
mov
sbb
cmps
js
push
add
or
jg
mov
xor
dec
jg
dec
cmc
nop
add
pushf
dec
cmc
test
into
fidivr
sub
and
sahf
lock
or
or
(bad)
jle
sbb
xchg
aam
cmp
ss
(bad)
sbb
sbb
adc
add
cmp
jge
sub
cmps
fwait
ins
mov
mov
xor
dec
sbb
call
xchg
dec
stos
imul
cmp
jmp
or
mov
cdq
and
pop
add
into
add
sub
je
inc
cmps
fcomi
ret
imul
xchg
fsub
cmp
pop
xchg
and
add
sub
nop
shr
sbb
xor
outs
call
mov
or
sbb
retf
(bad)
lea
cld
inc
test
mov
out
push
jns
aas
push
pushf
dec
cmp
ds
aad
cld
imul
add
sbb
out
mov
mov
call
cmp
mov
std
sbb
enter
push
xchg
cs
int3
and
jmp
(bad)
mov
(bad)
into
pop
jns
lods
lods
cdq
sub
lods
popf
nop
push
loope
icebp
test
mov
mul
leave
add
xchg
out
out
add
sbb
std
adc
dec
lea
adc
aad
mov
outs
pop
sahf
fmulp
mov
dec
dec
retf
fwait
repnz
xchg
or
shr
push
dec
ds
jmp
les
xlat
jb
imul
adc
aad
enter
xlat
push
ret
sar
rcl
add
mov
xchg
add
jb
xor
inc
inc
xor
into
dec
jo
xor
xchg
jmp
mov
data16
sbb
mov
cwde
cmp
sub
ins
aas
sbb
cli
mov
jnp
mov
pop
aaa
loop
addr16
xlat
mov
dec
inc
jbe
xchg
or
pop
clc
mov
inc
xchg
and
mov
das
lock
icebp
sbb
adc
rcl
movsx
movs
lahf
hlt
and
outs
pop
(bad)
dec
push
call
movs
fcmovne
xchg
mov
sub
std
pop
dec
hlt
and
dec
dec
nop
rcl
push
add
sbb
in
jnp
mov
sub
jp
xchg
(bad)
ja
mov
mov
cmp
sub
inc
call
xchg
(bad)
jmp
push
and
sbb
or
(bad)
jo
and
test
in
aas
cmp
movs
imul
mov
mov
pminub
dec
pop
mov
stc
call
mov
aam
imul
inc
clc
int
inc
div
dec
xor
rol
retf
test
or
xchg
mov
mov
cmps
ins
pusha
test
xchg
dec
xlat
imul
fcos
out
call
mov
mov
jl
pop
dec
mov
xchg
inc
jne
inc
add
lea
iret
push
cmp
lods
std
push
ds
and
sbb
mov
loop
xchg
mov
imul
(bad)
xchg
retf
inc
shl
mov
dec
(bad)
iret
push
loopne
jmp
inc
cmps
dec
cmp
sbb
mov
sti
inc
jns
push
add
add
sbb
and
bound
mov
inc
xchg
clc
and
sahf
test
sub
and
and
push
out
xchg
adc
test
lea
inc
sub
jecxz
dec
cmc
iret
stc
bound
(bad)
xchg
aam
cmp
add
popa
js
out
push
pop
retf
jns
scas
or
loop
(bad)
rcr
pop
fstp
loop
sbb
pop
and
popf
and
fimul
fisttp
mov
mov
test
out
jo
fnstcw
and
ja
gs
or
cmp
inc
sbb
sbb
rcl
jp
jmp
rol
mov
inc
in
mov
push
lock
dec
(bad)
mov
jmp
cdq
mov
or
xor
inc
repz
ins
sbb
fs
hlt
fstp
shl
mov
sub
fdiv
push
fs
jo
sbb
xchg
xor
push
mov
mov
out
test
cmp
aad
fcomp
xchg
mov
std
mov
xchg
inc
xchg
jne
sbb
pop
rcr
pop
xchg
stos
dec
or
and
and
push
punpcklwd
not
ret
and
mov
inc
sbb
sub
(bad)
pop
pop
xor
hlt
outs
jmp
loope
movs
push
out
inc
in
dec
in
jb
and
jae
(bad)
in
aas
mov
push
popa
inc
mov
pop
cs
cmp
cld
retf
cld
ins
push
rol
or
xor
scas
or
pop
into
sbb
xchg
les
movs
add
dec
sbb
adc
mov
sub
pop
imul
retf
push
data16
not
mov
and
inc
jb
xlat
push
mov
les
popf
adc
xor
sti
adc
movs
mov
mov
(bad)
adc
mov
sub
sti
cmps
ins
inc
repz
mov
hlt
or
adc
iret
fwait
fwait
adc
icebp
inc
cli
jmp
push
ror
pop
sahf
stos
mov
lock
sahf
and
ss
sar
cli
and
jecxz
dec
lods
loop
in
xchg
sbb
out
mov
add
das
or
xchg
xchg
push
out
or
push
mov
inc
inc
jnp
loop
mov
inc
(bad)
inc
mov
mov
sahf
or
popf
push
pop
out
data16
sbb
push
into
lods
cdq
add
mov
call
mul
sub
pop
retf
cdq
lods
jle
xchg
or
ja
ja
loop
add
push
jno
xor
int3
sbb
push
adc
mov
arpl
mov
shl
or
into
sar
pop
(bad)
xor
clc
xchg
(bad)
add
mov
das
leave
mov
cmp
inc
push
xchg
inc
jb
dec
xlat
ror
cmc
inc
xor
xor
loope
es
mov
jno
loopne
cmc
inc
adc
dec
ins
cmp
lahf
mov
add
(bad)
cmps
sub
dec
ret
push
pop
adc
mov
xchg
sub
adc
pop
lods
fadd
ins
mov
jo
or
scas
sti
mov
xchg
lea
or
je
xchg
inc
jmp
lods
movs
hlt
out
mov
nop
adc
jmp
outs
aaa
or
jns
stc
dec
(bad)
dec
xchg
inc
jbe
mov
sub
and
(bad)
jne
lods
pop
stos
push
fwait
push
out
std
fs
pop
xor
push
pop
xchg
mov
test
int3
imul
fs
scas
and
pop
mov
jecxz
rcl
int
lahf
pop
pop
(bad)
pop
add
add
rcl
jae
add
sti
enter
retf
xor
fisubr
add
jge
fisubr
mov
push
push
fisubr
dec
mov
cdq
cmp
sub
jmp
add
mov
mov
movs
xchg
rol
scas
aas
xchg
repz
(bad)
out
icebp
(bad)
adc
mov
add
mov
ins
push
cmp
movs
and
lahf
xchg
call
mov
in
mov
push
add
(bad)
in
popf
or
adc
adc
ret
ja
test
add
fnsave
ja
mov
jbe
mov
ss
mov
rcl
inc
mov
std
(bad)
push
sub
fsubr
push
popa
imul
mov
add
add
fwait
or
sar
sub
repz
xor
out
dec
les
imul
dec
rol
retf
out
pusha
pusha
lahf
adc
verr
push
je
aad
popa
mov
inc
mov
or
fsub
iret
or
push
push
pusha
and
push
mov
repnz
arpl
cmp
loopne
and
cmp
add
mov
scas
cmp
jns
outs
jmp
(bad)
jp
loop
jmp
pop
mov
jae
out
mov
push
repnz
cmc
pop
repnz
mov
pop
jae
sti
in
std
sbb
hlt
outs
push
aam
imul
add
xchg
xor
or
cwde
ret
jmp
test
mov
fst
lods
inc
stos
cmp
mov
dec
(bad)
mov
das
inc
call
in
inc
pop
pop
out
add
out
adc
mov
enter
fs
hlt
je
mov
xor
nop
cmp
dec
(bad)
mov
sub
arpl
adc
mov
adc
or
pop
push
xchg
inc
pop
xchg
cmp
xor
in
fldl2e
cli
fsub
sbb
sbb
stos
xchg
add
cmp
push
jnp
cmp
xchg
add
cli
adc
mov
dec
lahf
in
data16
adc
dec
pop
pop
cmp
mov
lds
or
pop
ficomp
(bad)
jle
and
sub
jg
cmc
fsubr
rcr
test
ja
mov
push
jmp
ficomp
pop
aas
mov
inc
jb
and
push
mov
scas
mov
sub
ss
mov
or
clc
loopne
dec
fwait
inc
or
pushf
out
js
fcmovu
pop
inc
in
neg
mov
ins
mov
int3
ins
stos
fmulp
mov
stc
xor
push
jnp
jb
es
or
fisubr
dec
fdivp
cmp
pop
aad
lods
in
retf
call
dec
ret
sub
xor
inc
cmp
dec
push
mov
and
xchg
cmc
fsub
loope
cmp
fcmove
xchg
and
stc
push
push
jo
fwait
or
ret
data16
fs
push
push
push
add
in
sbb
rol
mov
pop
xor
sti
pop
mov
fiadd
cmp
ins
mov
(bad)
shl
xor
in
in
test
cmps
cmc
mov
scas
nop
adc
and
mov
fwait
or
cdq
cmp
ja
cwde
test
test
mov
xchg
leave
shl
pushf
es
add
loope
adc
and
xchg
xchg
dec
ja
shl
xchg
or
(bad)
cld
mov
outs
cmp
inc
or
daa
jle
push
xor
mov
dec
ror
xor
push
pop
add
sbb
je
sar
sbb
pop
icebp
stos
enter
out
(bad)
mov
movs
adc
lahf
push
jmp
pop
ror
out
dec
jo
mov
vandps
push
ret
loopne
xchg
sub
push
iret
in
setp
dec
cmp
shr
test
mov
cmp
mov
gs
loopne
popa
pop
or
div
test
addr16
sbb
je
inc
adc
xchg
arpl
ret
mov
pop
fucomip
lods
out
out
in
pop
bound
neg
xchg
loop
fsubr
push
inc
retf
push
shr
xor
loop
imul
leave
in
mov
retf
ss
test
rcl
mov
push
xchg
xchg
fcmovne
hlt
fstp
retf
ss
in
pop
test
xchg
mov
dec
and
push
jno
sahf
dec
aas
dec
jmp
inc
ds
mov
jmp
jae
mov
cmp
jge
fisub
jle
push
mov
rcl
in
mov
and
or
dec
popf
jne
and
adc
outs
dec
icebp
stos
mov
mov
mov
push
jge
fistp
dec
pop
or
xchg
rcl
(bad)
mov
stos
pop
mov
clc
ret
fiadd
lods
adc
mov
popa
loopne
std
cmps
js
mov
sbb
add
aad
push
mov
jmp
cwde
pop
vpcmpgtw
jns
fistp
jecxz
arpl
in
pop
push
rol
cmps
mov
rcr
out
cld
ins
fst
pop
or
movs
push
sub
cmp
cmps
inc
or
push
ret
lock
imul
loopne
mov
push
jne
xor
push
mov
jp
ror
xchg
imul
scas
sbb
jp
mov
jmp
push
mov
mov
cmp
daa
jle
aam
retf
push
fs
inc
adc
xchg
test
xchg
stc
in
test
bound
out
daa
push
sub
loopne
pop
stos
retf
sub
mov
rcr
aam
lods
mov
cmp
daa
xor
in
loop
ins
retf
mov
shr
imul
mov
push
stc
iret
and
int3
es
or
fisttp
test
call
cld
xchg
(bad)
sbb
jmp
das
xor
xor
int
and
lods
call
xchg
cmp
scas
xor
and
loop
pusha
xor
xlat
adc
mov
inc
cmp
bound
mov
fld
ds
mov
inc
test
popf
push
(bad)
pop
test
mov
mul
(bad)
pop
mov
mov
sub
xchg
xor
fild
push
sub
cmp
inc
dec
or
jae
shl
cld
gs
sbb
or
mov
and
(bad)
fiadd
enter
push
add
mov
fidivr
std
sahf
sar
mov
sbb
(bad)
sahf
xlat
call
xor
out
cdq
js
aas
mov
push
inc
retf
xchg
push
push
aam
fwait
scas
test
xor
mul
imul
cs
pop
pop
loop
(bad)
aad
out
aaa
xchg
xchg
movs
ins
mov
jmp
(bad)
jg
(bad)
lea
or
or
fmul
lods
adc
popf
xchg
sub
push
inc
cmp
mov
pop
cmp
movs
cs
cli
push
jno
pop
out
or
cmp
push
xchg
clc
sub
(bad)
pop
pop
sar
mov
xchg
in
daa
sbb
loop
or
scas
add
cmc
mov
fstp
adc
ror
pop
int3
pusha
bound
fst
sub
mov
jnp
or
das
jae
push
and
adc
jge
in
out
push
jp
xchg
dec
in
dec
pop
push
fcomp
cmp
fild
jecxz
sub
dec
jo
push
cmc
pushf
shl
rcr
out
xor
jmp
sub
test
sub
retf
sbb
rcr
pushf
lea
mov
pushf
sub
shr
test
add
in
dec
stc
fcom
enter
retf
gs
xchg
xchg
xor
ins
or
mov
call
iret
imul
clc
sbb
inc
pop
cmps
in
or
mov
jae
inc
pop
inc
mov
jp
pop
les
arpl
adc
pop
jno
iret
inc
push
jns
xchg
stos
loope
ror
sub
push
imul
add
iret
jae
dec
or
(bad)
cmps
cmc
imul
int3
xchg
dec
add
add
push
pop
mov
xor
lahf
outs
mov
nop
(bad)
mov
les
dec
repnz
imul
lods
sub
je
sub
cmp
adc
loopne
mov
mov
mov
sbb
xor
cs
jae
mov
fcmovnb
stc
mov
dec
pusha
xchg
sub
add
stc
aaa
push
outs
ja
mov
push
pushf
loope
push
mov
pop
and
add
adc
lea
bnd
sub
fyl2x
or
sbb
xchg
mov
dec
xchg
pop
mov
out
ins
shl
clc
pop
adc
int3
sbb
scas
add
dec
xchg
add
or
mov
xor
ror
pop
in
jno
nop
scas
mov
jb
fnsave
lods
or
clc
mov
push
and
ss
ret
and
or
adc
adc
adc
popf
pop
pusha
test
cmp
ins
push
test
mov
dec
sbb
mov
mov
adc
fild
lods
daa
movs
and
in
mov
adc
mov
mov
dec
in
fisttp
mov
push
xor
dec
mov
jno
std
add
scas
(bad)
xor
imul
out
pusha
mov
lock
in
test
scas
sbb
xchg
add
rcl
into
das
jae
push
fisubr
fistp
push
inc
dec
jae
dec
mov
fadd
loopne
mul
mul
sub
fs
lods
cs
mov
pop
ds
jmp
and
repz
xor
adc
test
sub
ins
dec
push
xchg
nop
sub
shl
cmp
pop
mov
pop
xchg
imul
test
js
js
mov
add
xchg
xor
pop
fild
push
aaa
push
jp
mov
fwait
adc
push
cdq
lahf
add
fst
fist
clc
push
addr16
xor
jecxz
in
(bad)
icebp
sti
out
arpl
mov
aaa
adc
push
ret
ret
dec
dec
cld
dec
jmp
push
jb
jge
sbb
cdq
push
test
cmp
repz
push
jnp
imul
jmp
loop
aam
mov
retf
iret
adc
adc
adc
push
xchg
pop
push
fcmove
cmp
push
jl
test
mov
pop
repz
and
sbb
stos
xchg
ret
xchg
shr
dec
shl
repnz
fwait
repz
or
jb
pop
sbb
jecxz
(bad)
dec
out
pop
cmp
dec
addps
fidiv
outs
fimul
fdivr
mov
ins
mov
pop
pusha
mov
pop
addr16
ins
sbb
push
sti
pop
ja
sahf
adc
xor
add
cdq
test
mov
sub
movs
(bad)
sbb
movs
test
xchg
mov
xchg
sub
adc
push
and
sub
hlt
and
les
xor
mov
xchg
int3
(bad)
and
pause
imul
cmp
dec
stos
mov
test
mov
adc
imul
jb
push
movs
mov
cld
xchg
pop
mov
in
ja
dec
mov
movs
xchg
mov
cmp
fwait
sbb
and
lea
(bad)
sub
and
shr
adc
js
(bad)
out
scas
xchg
xchg
xchg
or
in
adc
stos
mov
sbb
scas
push
rcl
dec
punpckhdq
xor
jg
out
ret
pop
sahf
(bad)
neg
sti
(bad)
shl
xor
loopne
adc
clc
mov
(bad)
and
out
sub
(bad)
sub
jg
fs
push
ror
(bad)
sbb
ins
xor
pop
push
out
cmp
into
push
sti
push
repz
mov
adc
cmps
clc
and
sub
cmps
leave
xchg
mov
cmp
rcl
mov
test
pop
cli
pusha
jnp
adc
iret
push
hlt
je
xchg
fimul
dec
pop
(bad)
ror
inc
test
out
stos
fdiv
xchg
lock
mov
push
lds
aaa
add
pushf
ret
pop
popa
test
popa
jo
inc
ins
dec
movs
or
out
cli
in
mov
cli
mov
cmc
out
jp
and
outs
push
(bad)
adc
clc
clc
and
(bad)
or
pop
pop
jae
mov
aad
es
mov
fwait
mov
sub
inc
or
test
xchg
pushf
add
or
sub
inc
dec
ror
inc
pop
out
mov
in
push
jle
(bad)
sar
dec
addr16
sbb
rol
jbe
cdq
cmp
sbb
mov
push
xor
aaa
lods
ror
mov
mov
loope
add
push
ins
jo
push
fmul
xchg
repz
and
test
aam
fbstp
(bad)
shl
push
std
sub
xchg
and
cmp
and
(bad)
pop
dec
mov
xor
mov
mov
pop
enter
xchg
mov
jmp
(bad)
sbb
push
inc
cmc
mov
push
dec
fstp
add
mov
inc
leave
aas
(bad)
push
sub
lahf
mov
pushaw
iret
je
(bad)
cmps
inc
sbb
loope
mov
pop
loopne
and
xor
scas
xor
jmp
sub
cli
sbb
or
and
inc
popf
out
adc
adc
jb
or
mov
inc
jle
mov
scas
jecxz
les
movs
jbe
jl
aam
addr16
mov
or
out
mov
jmp
or
lea
sub
mov
jnp
imul
pop
mov
pusha
popf
xchg
(bad)
cwde
es
fcomp
or
test
iret
popa
push
sar
add
mov
imul
imul
rcl
jmp
test
pop
gs
mov
pop
xchg
add
push
cwde
popa
lock
gs
mov
test
ret
xchg
xchg
fistp
or
adc
(bad)
mov
clc
mov
adc
mov
mov
ret
cwde
inc
adc
dec
shl
mov
cmp
ja
add
lock
ins
cmps
pushf
ret
jbe
pop
fldcw
pop
das
adc
sbb
popa
dec
mov
push
aas
pop
xor
mov
lea
xchg
in
xor
pop
shr
jge
xor
sbb
repnz
dec
adc
adc
jne
dec
hlt
popf
outs
and
xchg
sahf
loopne
iret
gs
das
(bad)
fcmovnu
clc
sar
or
pop
cmp
xor
sbb
sbb
mov
xchg
inc
(bad)
mov
jb
scas
icebp
cmp
aaa
sbb
cmp
scas
mov
or
inc
adc
xlat
jnp
hlt
pop
jnp
or
xchg
cmc
xchg
mov
fidivr
call
push
xchg
xor
into
pop
and
ins
push
pop
jb
mov
es
add
push
cs
stos
enter
popa
test
shl
imul
movs
mov
mov
aas
neg
add
fistp
push
je
dec
pop
popf
call
cli
and
stc
jmp
adc
das
pop
stc
call
call
cmp
sbb
cmp
cmp
push
fild
sub
jmp
jge
jae
cld
xchg
sub
arpl
jne
sbb
jp
test
ins
lds
mov
leave
add
addr16
mov
ja
test
xor
mov
and
jle
cmp
add
sub
dec
ins
ss
push
adc
jns
rol
out
shr
pop
adc
out
or
loopne
mov
mov
popa
sub
mov
inc
dec
outs
into
in
ss
in
daa
push
adc
pusha
pop
add
cs
push
mov
mov
out
call
sbb
adc
mov
call
es
jmp
inc
inc
or
cwde
mov
push
in
iret
(bad)
call
in
adc
es
(bad)
sub
inc
shl
pusha
or
in
push
mov
push
mov
mov
in
mov
sbb
inc
mov
push
shl
clc
dec
jl
push
data16
fbld
xor
leave
inc
jno
mov
arpl
push
out
test
push
mov
nop
push
imul
sbb
sbb
je
(bad)
sar
aad
enter
pushf
or
scas
and
mov
and
rcl
(bad)
pop
movs
inc
jg
or
inc
in
xchg
dec
out
gs
fcom
adc
retf
call
cdq
adc
pop
ret
adc
jae
push
mov
xlat
mov
repz
pop
inc
lock
data16
jnp
sub
std
jmp
inc
xchg
inc
add
arpl
cld
dec
mov
and
(bad)
jo
scas
mov
mov
jns
out
repnz
adc
adc
pop
cwde
jge
loope
and
cmc
test
lahf
mov
mov
out
popa
scas
in
bound
fist
dec
sub
repnz
xchg
sbb
dec
ins
mov
cmp
jbe
xor
cli
or
lock
adc
fs
sbb
popf
call
mov
adc
xchg
data16
mov
lods
mov
cmps
add
cmp
mov
jnp
lods
outs
loope
pop
ins
jmp
ficomp
jmp
out
pop
gs
pop
sub
cmp
mov
arpl
aas
leave
add
xor
fcmovbe
lahf
push
imul
jl
fwait
jmp
inc
mov
hlt
test
cs
adc
pop
retf
or
push
pop
hlt
(bad)
mov
fwait
or
dec
sub
(bad)
mov
dec
jmp
aam
(bad)
movups
adc
(bad)
(bad)
aam
cmps
dec
pop
clc
mov
ins
stos
xchg
sti
push
dec
pushf
cmp
loopne
sbb
les
cmp
stos
enter
bound
cmp
sbb
push
mov
push
adc
adc
or
jb
movs
dec
fistp
imul
je
push
std
in
mov
retf
test
and
ss
xchg
iret
dec
imul
sub
push
jl
loop
sbb
push
sbb
pop
push
jbe
ins
test
xor
enter
mov
stc
sub
jg
add
sti
loop
add
sub
mov
inc
xor
mov
into
jae
cmp
lods
cmp
cmp
aad
dec
push
adc
scas
jae
push
mov
sub
ret
lahf
xor
in
shl
and
sbb
pop
inc
stc
lods
push
pop
mov
add
xchg
fidiv
out
mul
mov
popf
and
xlat
mov
dec
nop
pop
loope
or
xlat
sub
inc
sar
xchg
dec
adc
fnstcw
push
into
and
ret
loop
mov
dec
cs
push
dec
inc
xor
cmc
ror
in
cmp
jbe
enter
pop
jb
jae
fld
(bad)
fcom
or
(bad)
mov
fmulp
pop
shl
add
inc
mov
or
je
pop
mov
or
push
cmps
xchg
inc
stc
stc
or
mov
or
call
jmp
jo
cs
jg
fucomp
inc
aam
mov
aaa
xlat
movs
fisttp
adc
push
xor
sub
test
mov
dec
xor
dec
mov
sbb
cvtps2pd
jmp
add
out
pop
and
cdq
call
out
call
repz
and
mov
jp
out
and
jnp
(bad)
mov
stc
push
push
retf
ja
clc
xchg
xchg
nop
(bad)
scas
lea
push
cmp
scas
gs
ja
dec
sti
dec
loope
das
fistp
stos
and
es
xchg
mov
push
outs
ja
dec
ret
sub
or
mov
cmps
iret
popf
leave
shl
fwait
inc
or
ss
pop
pop
test
cmps
cld
jle
fisttp
test
outs
push
adc
dec
push
psubb
mov
mov
test
pop
retf
lock
xchg
jle
das
fwait
sti
aas
repz
fidiv
pop
adc
loopne
aad
ss
loopne
test
xchg
sbb
jecxz
sbb
sti
or
das
inc
data16
and
cs
mov
sub
(bad)
mov
popa
adc
shr
popf
jns
push
lahf
sar
in
mov
stos
sub
push
out
mov
xchg
sahf
stos
fyl2xp1
dec
call
add
hlt
and
sbb
add
aam
and
rol
or
pusha
push
cmp
pop
adc
shr
jnp
out
jmp
std
dec
jp
xchg
mov
das
stos
mov
sub
int3
sub
inc
inc
fldcw
xor
and
add
mov
popa
(bad)
out
enter
or
ins
loope
repnz
into
jg
test
add
jecxz
dec
icebp
mov
cmc
stc
xchg
cli
retf
jmp
test
cmp
mov
nop
dec
sub
mov
jl
test
and
fwait
mov
in
push
xchg
cmp
cmp
sbb
lea
and
mov
fs
les
rcr
loope
outs
xchg
outs
pop
daa
add
cmp
cmp
cmps
and
dec
push
jne
xchg
dec
sbb
cmp
out
inc
clc
sbb
call
sbb
sbb
mov
scas
icebp
clc
retf
arpl
xchg
add
test
ins
(bad)
xor
push
iret
pop
or
retf
das
and
fistp
ins
(bad)
in
sub
inc
dec
daa
fsubp
sub
in
or
add
lahf
pop
dec
aaa
(bad)
sub
and
retf
jecxz
jle
hlt
mov
es
retf
xchg
adc
jno
lds
pop
pushf
inc
xor
cmp
ins
rcr
cdq
push
cmp
inc
icebp
push
xchg
fldenv
int3
nop
sbb
jmp
mov
iret
cmc
lahf
push
out
jns
popf
inc
adc
push
dec
mov
xchg
call
xchg
stos
cli
pop
dec
ret
cli
icebp
js
int3
xor
ficomp
mov
xchg
xchg
in
push
push
test
mov
(bad)
fiadd
fcmovu
cmp
mov
xchg
pusha
outs
mov
dec
stos
in
scas
call
inc
inc
ret
pop
movs
xchg
in
sti
repnz
loope
fdiv
push
jb
pop
sub
das
int3
xchg
ds
jo
(bad)
pushf
bswap
push
or
es
adc
outs
dec
std
adc
lods
xchg
test
mov
and
and
(bad)
mov
or
lds
in
(bad)
nop
dec
fadd
ds
dec
xchg
clc
push
aaa
xor
push
sbb
cdq
rcr
inc
jns
add
adc
(bad)
push
pop
push
mov
and
and
icebp
xor
imul
and
in
and
shl
ror
add
fwait
repnz
imul
hlt
xchg
sbb
(bad)
bound
in
hlt
push
pop
cmp
lea
mov
xchg
retf
repnz
adc
xchg
test
sub
and
dec
inc
jno
lahf
inc
dec
aas
pop
or
push
sbb
int
xchg
loop
sti
cli
or
or
jns
dec
jge
sahf
leave
jg
(bad)
pop
xor
movhps
and
dec
lods
xchg
pop
inc
sub
adc
pusha
push
jl
xchg
mov
gs
fdiv
dec
add
mov
inc
jge
xchg
xchg
sbb
jge
pop
jae
daa
or
pop
jb
cs
dec
ins
(bad)
daa
jmp
fwait
jg
and
mov
mov
pushw
mov
in
and
xchg
dec
pop
xor
and
aad
mov
retf
jb
push
imul
inc
xchg
fstp
mov
cwde
dec
jl
hlt
loop
daa
in
enter
cmp
push
push
sub
pop
sub
xchg
loope
dec
pop
or
inc
in
xor
fld
ss
arpl
aam
cmp
sbb
scas
inc
sub
imul
pop
mov
jp
movs
mov
rcr
movs
inc
and
out
xor
jnp
xchg
fiadd
in
and
xor
(bad)
jl
pop
mov
fwait
sub
inc
fnstsw
test
dec
sbb
out
jo
dec
mov
sbb
xchg
enter
push
idiv
inc
fimul
sub
lea
lock
fwait
mov
scas
jmp
iret
xor
in
stos
mov
lea
jno
mov
jmp
aad
arpl
mov
mov
jge
jnp
ds
dec
or
test
sub
shr
retf
fs
cli
(bad)
scas
pop
test
mov
add
or
sub
lea
out
sub
cmp
jp
jae
inc
mov
int
cmp
clc
inc
cli
push
jns
mov
sub
pop
xlat
inc
aad
ret
cmps
iret
inc
int
fsubr
jg
jmp
mov
push
adc
leave
pusha
(bad)
test
sbb
test
cmps
pop
dec
or
mov
or
mov
sbb
cdq
cs
sub
shl
push
and
aad
stos
xchg
(bad)
and
adc
and
mov
arpl
inc
outs
aas
push
push
push
paddd
(bad)
int
push
fcom
repnz
pop
loop
pop
sahf
cdq
or
cmps
fmul
push
scas
mov
mov
fild
or
xchg
pop
fadd
in
mov
(bad)
sbb
pop
outs
mov
fsub
mov
cmp
sbb
stos
and
mov
push
pop
call
addr16
test
pop
xor
cmp
int3
and
add
and
bound
cmp
das
imul
pop
daa
adc
sbb
jb
cmp
test
jmp
fsubp
icebp
or
repz
repnz
cli
dec
xor
movs
xor
and
inc
jl
ret
sbb
or
adc
in
fist
aas
ins
and
jmp
data16
outs
xchg
cmp
jo
mov
test
or
loop
data16
inc
pop
daa
ret
pushf
leave
retf
xor
or
stos
addr16
xchg
cld
jae
xchg
(bad)
sub
xor
or
or
add
in
mov
or
loop
movs
(bad)
xchg
(bad)
dec
inc
add
lods
std
cmp
pop
jmp
fnstcw
jg
cmps
lahf
idiv
(bad)
jmp
outs
(bad)
push
movs
(bad)
call
fwait
push
sar
jns
mov
lock
push
inc
lods
push
nop
push
mov
sub
push
xchg
jmp
aas
mov
stos
jne
inc
push
xor
pusha
fld
pop
ret
xchg
std
xor
inc
jb
xor
(bad)
fwait
pop
imul
mov
imul
push
xchg
call
inc
mov
and
rol
aam
cmc
xchg
xor
push
fdivr
fnstsw
and
push
jmp
popa
jp
adc
jnp
inc
(bad)
pop
mov
movq
sub
lahf
push
aaa
inc
or
cmp
cli
jmp
dec
enter
ins
fwait
ss
xchg
clc
imul
ret
adc
pop
mov
cmc
add
sub
jecxz
bound
xor
lea
cmps
or
stos
gs
sbb
loop
xchg
jge
in
mov
push
or
inc
mov
dec
cs
sbb
out
cld
ins
jp
cld
stos
mov
jg
mov
push
pushf
cmp
pop
mov
dec
xchg
mov
int
call
out
push
dec
pusha
loop
dec
loopne
dec
dec
dec
pop
addr16
push
aad
xchg
jo
mov
out
outs
jle
in
les
xchg
les
pop
push
rcr
sbb
push
pop
sub
jl
out
lahf
fld
and
cmp
jnp
cmps
repnz
jecxz
inc
shr
sub
xchg
nop
mov
mov
cmp
xor
mov
inc
mov
lea
ins
ss
dec
jle
int
mov
cmp
inc
in
and
cmps
out
push
repnz
xchg
fisubr
mov
mov
cli
xor
movs
mov
mov
cli
jecxz
sub
repz
or
mov
dec
loope
rcl
inc
pop
fsubrp
ret
(bad)
out
xchg
jmp
retf
rol
pop
movs
into
lods
mov
fmul
imul
or
or
jmp
loop
repnz
inc
pop
imul
cmps
enter
lods
push
add
out
push
jle
pop
jno
push
cmps
or
movs
add
pop
mov
dec
inc
push
sbb
ret
jb
jecxz
cmp
push
and
jp
cmp
mov
movs
mov
mov
ror
inc
mov
mov
and
pop
pop
inc
stos
pop
outs
frstpm(287
push
and
xchg
inc
mov
rcr
adc
into
fucomp
sahf
dec
std
mov
fst
or
ret
adc
jmp
lods
frstor
fisttp
shr
mov
mov
mov
adc
mov
pop
icebp
jl
out
or
pop
pushf
(bad)
xlat
movs
cmc
outs
sbb
xor
pop
fstp
push
ins
dec
aad
jb
mov
imul
push
jbe
in
nop
dec
adc
fmul
add
rcl
leave
xor
movs
pop
jns
xchg
mov
in
jl
xchg
imul
loope
jg
addr16
repz
stos
mov
mov
mov
test
iret
ror
xchg
push
daa
pop
gs
pop
sahf
je
adc
jb
mov
fstp
ds
inc
mov
js
movs
jb
ss
pop
add
bound
leave
rcr
scas
es
xchg
rcr
push
dec
sbb
das
or
sub
int3
in
add
add
pop
push
mov
dec
outs
int
lods
jae
inc
mov
ins
mov
and
das
push
sbb
pop
sbb
out
mov
in
mov
cdq
(bad)
and
xchg
push
mov
cmp
repnz
jmp
add
mov
jb
adc
popf
mov
rcr
pop
cld
or
retf
ins
pop
adc
call
jo
int
push
sbb
out
cli
arpl
cli
mov
not
add
mov
jp
inc
add
cmc
jbe
push
fcmove
inc
in
jp
xor
push
push
out
mov
pop
mov
push
fisttp
das
xor
mov
cmp
pop
aad
cdq
dec
sub
test
lods
mov
aaa
lahf
lods
loope
fistp
shl
out
mov
fild
enter
mov
mov
jnp
loopne
lods
imul
(bad)
fidiv
jne
stc
test
push
inc
fwait
imul
add
mov
jb
mov
fist
push
cmp
aad
cmps
outs
movs
retf
inc
retf
call
or
jmp
pop
dec
mov
mov
inc
inc
adc
mov
test
mov
jecxz
add
fidiv
inc
inc
cmp
adc
jecxz
outs
inc
or
xor
fist
mov
pop
dec
jecxz
cwde
std
xlat
imul
dec
push
dec
pop
sbb
xchg
xor
fsub
out
aad
lods
sbb
aas
aas
xchg
pop
cmp
or
xor
mov
dec
lods
add
and
xchg
call
adc
aam
cmp
adc
push
and
lea
in
cmps
imul
movs
loop
out
outs
cld
arpl
mov
sahf
mov
cs
or
xor
sbb
pop
or
test
loope
xor
cmp
xchg
mov
mov
repnz
add
push
and
xchg
jb
sub
movs
(bad)
int
mov
cdq
call
int
stos
pushf
cmp
outs
jmp
jmp
enter
sbb
or
loope
sbb
or
stos
addr16
mov
dec
loope
add
mov
out
mov
dec
das
in
icebp
aam
jne
jno
out
xchg
into
jg
ja
jge
push
add
jl
and
out
repz
bound
int
sbb
cdq
and
addr16
xor
test
mov
mov
mov
xchg
fst
imul
mov
retf
dec
ss
lock
mov
cmp
cmps
repnz
ss
sbb
sbb
sub
and
sub
xchg
jne
sbb
add
fs
out
movs
add
retf
scas
out
or
inc
cmp
and
in
pop
and
ds
add
popa
dec
in
or
add
lds
shl
dec
jge
fcmove
mov
pop
sub
into
clc
jge
push
in
mov
sbb
cmp
fwait
mov
hlt
ins
ret
add
imul
(bad)
jmp
push
mov
mov
shl
jg
lods
call
push
fisttp
stos
retf
sbb
xchg
push
jbe
dec
std
out
or
sub
cdq
jmp
push
pop
mov
adc
add
mov
icebp
stos
shl
lds
xchg
out
std
push
cmp
retf
add
outs
bnd
push
lock
ss
pop
pop
sub
inc
xor
add
dec
call
cld
xchg
fistp
loope
pop
scas
clc
xchg
lds
cmps
jae
scas
pop
mov
test
jmp
lods
loop
leave
iret
es
inc
inc
xchg
jle
and
adc
pushf
lea
daa
sbb
mov
add
jns
mov
sub
sbb
loop
push
sub
sbb
rol
jns
sub
imul
add
mov
sub
ret
cmp
lods
leave
outs
dec
mov
jbe
mov
ror
mov
jb
and
neg
push
lods
sbb
add
inc
sub
fwait
mov
mov
ins
xor
stos
fbld
in
mov
cdq
dec
retf
pop
pop
sbb
add
mov
inc
mov
mov
lock
cmp
xchg
adc
aaa
or
sbb
fs
lea
push
out
lds
enter
jbe
adc
sub
adc
and
(bad)
cmp
rcl
jbe
inc
rep
inc
xchg
aad
fnstcw
out
xchg
or
movs
in
pop
in
outs
(bad)
and
add
inc
pop
lods
rcr
ins
cmps
xor
jg
lahf
xchg
into
xchg
popa
not
mov
cmps
pop
xlat
pop
dec
jb
fisubr
cdq
sbb
xchg
sar
inc
jbe
cld
push
std
shl
cmp
xlat
popf
dec
mov
jl
mul
scas
mov
out
mov
mov
mov
fadd
mov
jnp
xor
add
inc
(bad)
cdq
pop
out
xlat
shl
push
ja
stc
cwde
cmp
adc
repnz
fdiv
in
gs
hlt
add
xor
pop
jne
push
pop
mov
mov
jl
ret
push
aad
imul
add
scas
inc
outs
mov
xchg
neg
fcom
mov
ja
mov
pop
(bad)
mov
pushf
jae
push
and
add
dec
loop
ret
bswap
lea
mov
lock
int
sbb
or
xchg
and
push
mov
push
jnp
mov
int3
mov
cmp
and
cld
push
in
xchg
or
outs
fadd
adc
xor
lea
jp
add
push
mov
sub
fwait
jmp
mov
test
mov
cmp
stos
bound
mov
adc
add
shr
sbb
cdq
jno
mov
xor
jne
xchg
xchg
pop
inc
es
loop
ret
sub
in
test
dec
adc
xchg
xor
imul
xor
shr
rol
stos
inc
mov
xchg
sub
sbb
loop
pusha
rcl
jbe
aas
(bad)
sub
or
dec
mov
ja
and
sub
push
jae
popf
xchg
in
adc
and
std
mov
pop
int
iret
ret
sti
mov
mov
call
dec
call
mov
call
mov
push
aam
call
xchg
add
push
cmp
fld
jno
arpl
in
push
mov
ins
loope
sbb
clc
lea
mov
mov
aaa
mul
and
cwde
fs
in
neg
mov
iret
add
or
enter
sub
icebp
not
pop
jae
cld
fs
les
test
retf
push
xchg
sbb
sbb
mov
xchg
and
std
dec
jmp
ins
pop
pop
fisub
fucomi
push
xor
out
fcom
in
nop
mov
mov
mov
and
inc
int3
mov
and
jbe
mov
inc
call
push
in
fs
mov
add
aad
movs
fistp
test
lods
aam
dec
imul
int
mov
mov
xchg
cmp
and
inc
cmp
stos
sbb
mov
jns
fnstcw
imul
test
pop
sub
test
add
xlat
sbb
mov
xchg
jb
xor
ffree
sti
mov
(bad)
cdq
mov
mov
ret
xor
addr16
iret
jmp
jb
(bad)
pushf
jnp
or
sub
js
popa
jmp
es
jb
mov
repz
push
inc
dec
inc
fcomi
sbb
rcr
(bad)
mov
pop
in
adc
(bad)
pop
ror
dec
aam
div
gs
je
xchg
xchg
addr16
and
pop
pop
inc
sub
xchg
call
ret
in
outs
xor
(bad)
push
outs
ret
mov
ficomp
lods
cmps
mov
(bad)
dec
xchg
xor
xlat
ktestb
mov
and
or
fstp
jbe
or
sbb
pop
add
sbb
outs
aad
cmp
stos
dec
push
or
push
repnz
add
fs
dec
mov
mov
sub
mov
sbb
(bad)
out
int3
xchg
adc
lahf
lods
sbb
lea
movs
sar
push
out
mov
mov
mov
sub
lahf
test
in
shr
movs
repnz
les
aaa
iret
push
nop
js
jae
lods
call
sub
int3
iret
xchg
cld
pusha
mov
pop
loopne
rol
xchg
popf
or
je
inc
imul
jl
je
jl
cmp
fild
xchg
jno
loop
imul
or
or
jle
scas
xor
push
sbb
sahf
mov
xor
scas
je
push
movs
mov
pop
(bad)
cmp
cld
leave
sbb
cdq
dec
xor
xchg
mov
mov
jmp
add
push
mov
(bad)
call
js
sub
mov
jmp
daa
inc
pop
mov
cmp
clc
or
out
xlat
je
pop
sub
aad
mov
sti
and
fisubr
mov
icebp
cmp
into
repnz
sub
data16
call
in
sub
aaa
lds
jle
stos
and
scas
sub
mov
ins
aad
or
and
(bad)
iret
push
call
inc
iret
pop
aas
jb
and
jne
cmps
nop
adc
arpl
mov
(bad)
and
es
lock
and
sbb
loop
xchg
and
fadd
daa
jl
aaa
daa
cmp
mov
pop
addr16
test
sbb
dec
push
push
jl
xchg
jle
or
movs
not
inc
mov
test
jo
in
mov
popf
enter
cmp
add
push
and
sub
sbb
sub
stos
ins
adc
mov
inc
jne
and
aas
out
xchg
pushf
mov
inc
sahf
mov
xor
push
adc
mov
sub
mov
jno
sub
sub
mov
dec
(bad)
stos
cld
push
sub
sar
mov
jmp
fisttp
xor
gs
mov
jmp
mov
jmp
shr
lods
idiv
push
inc
xchg
test
jmp
inc
jne
jg
and
cmps
adc
int
mov
dec
xor
dec
or
jle
in
inc
in
sbb
mov
retf
in
sahf
add
(bad)
iret
xor
add
call
add
push
adc
gs
inc
inc
leave
sbb
enter
arpl
dec
loope
push
inc
mov
aas
inc
fstp
push
nop
jmp
mov
mov
dec
push
pop
pop
stos
sbb
mov
ds
add
(bad)
jmp
push
pop
cmp
lock
mov
jb
shr
call
dec
cwde
mov
sbb
push
les
mov
sub
jmp
mov
clc
cmp
jb
loop
cmp
inc
xor
fnstcw
inc
lock
push
test
int3
pop
mov
and
movs
dec
jnp
xchg
and
pop
mov
add
xor
xor
mov
jl
aad
loop
inc
mov
xchg
enter
sbb
mov
xor
xor
pop
and
in
xchg
into
ja
stos
mov
hlt
mov
pop
iret
aam
sub
adc
xchg
cmp
out
mov
stos
dec
fist
pop
or
xor
sub
pushf
(bad)
jmp
je
pop
aad
(bad)
leave
cdq
and
add
mov
pop
xchg
pop
fs
loop
xchg
inc
shl
popa
mov
mov
mov
xchg
push
pop
jns
pop
fsub
call
push
out
mov
std
ds
mov
jecxz
into
pop
inc
hlt
lds
lahf
jno
movs
popa
retf
jmp
jae
ins
loope
and
mov
outs
jnp
cdq
inc
add
ret
int3
and
jns
dec
clc
dec
es
in
and
out
adc
mov
sar
in
mov
push
mov
gs
mov
dec
test
fnstcw
scas
mov
ror
outs
enter
mov
call
or
in
dec
push
je
sub
xlat
mov
out
inc
jl
lods
dec
sub
cwde
xor
movs
xchg
or
daa
jp
shl
cmp
ins
repnz
pop
push
dec
lea
sbb
jl
jne
test
ins
call
mov
mov
mov
loop
popf
popf
ret
popa
daa
fild
ret
leave
sti
or
push
or
sar
cli
inc
pushf
clc
adc
in
xchg
mov
push
arpl
sub
lds
fxtract
mov
xchg
xor
call
ja
sbb
add
xchg
mov
mov
cmp
std
adc
lea
sub
daa
pusha
jnp
enter
mov
fdiv
push
push
pop
jp
add
adc
or
mov
adc
cmp
fyl2x
(bad)
loope
fldenv
xor
sub
add
ficomp
(bad)
cmp
(bad)
cli
cwde
scas
jmp
cmc
mov
push
and
jo
push
ins
xchg
stos
jmp
cmp
or
pop
mov
sbb
or
xchg
sti
(bad)
aam
mov
idiv
xor
mov
test
sar
sbb
jo
leave
leave
sbb
aam
loopne
inc
mov
arpl
xchg
mov
push
mov
xor
add
mov
mov
daa
inc
mov
rcl
pop
sbb
and
or
xchg
js
dec
mov
inc
mov
sar
fwait
jl
add
and
ins
dec
fcom
cmp
inc
popa
dec
lods
fnstsw
stos
mov
inc
mov
cmp
bound
dec
sbb
out
cmp
ds
mov
addr16
or
jbe
cs
ret
fstp
cmps
loope
dec
lods
ret
mov
mov
mov
jge
sbb
jmp
(bad)
aad
push
mov
mov
dec
mov
pop
jbe
xor
div
jae
dec
dec
xor
cmps
jp
cmp
movs
and
push
lock
mov
fstp
cdq
ror
mov
mov
aas
lods
movs
sub
inc
sub
dec
js
mov
cmc
xlat
repz
adc
retf
adc
nop
popa
xchg
push
mov
push
inc
call
adc
xlat
jb
sub
inc
and
jle
inc
fs
mov
fist
iret
xchg
test
xor
mov
mov
icebp
(bad)
sti
aaa
pop
test
adc
icebp
in
sar
jne
out
cmp
or
mov
mov
push
in
in
cmp
jno
imul
inc
mov
dec
aad
std
ins
push
cdq
aam
sbb
pop
or
cld
sti
mov
dec
cdq
lahf
mov
rcr
pop
xchg
out
pop
out
retf
lods
(bad)
pop
int3
into
sar
sbb
adc
or
fwait
popa
jle
mov
or
or
jg
xor
push
adc
rol
jle
jno
push
repnz
lds
icebp
hlt
push
jb
mov
mov
xchg
(bad)
mov
push
stc
dec
emms
icebp
inc
cmps
inc
cs
or
or
sbb
dec
mov
mov
loopne
popa
push
cmp
and
jae
pop
push
jae
sbb
add
cmp
jmp
pop
outs
aas
push
or
cwde
jecxz
sub
sbb
icebp
pop
out
call
test
gs
lods
sub
inc
and
int
mov
jne
addr16
xchg
fimul
fadd
cmp
movs
xchg
test
mov
or
clc
pusha
(bad)
mov
cmc
xor
mov
mov
stc
dec
(bad)
cmc
cmp
xchg
pop
stc
adc
ja
fnsave
push
jmp
rcr
ins
xor
ret
mov
repz
jno
jne
mov
sub
sbb
push
xor
(bad)
lea
lock
fprem1
cmp
inc
lahf
popf
sub
(bad)
fcomp
les
dec
cmp
push
or
and
sahf
xchg
mov
repz
fist
inc
mov
xchg
mov
push
shr
add
xchg
adc
(bad)
adc
mov
dec
leave
daa
jmp
push
adc
xor
out
push
pop
jo
ds
xlat
mov
or
jmp
shl
jmp
int3
popa
or
sahf
aas
iret
xor
scas
cmp
jno
push
inc
or
jo
dec
sbb
and
xchg
in
jge
je
and
das
aad
mov
data16
push
mov
aaa
out
(bad)
adc
(bad)
push
outs
and
(bad)
ja
dec
inc
pause
arpl
push
dec
cwde
pop
dec
data16
sbb
jo
ins
add
arpl
stc
test
bound
xchg
push
inc
ret
cmp
add
call
cmp
arpl
neg
int
scas
les
outs
pop
mov
jmp
aas
mov
adc
les
cwde
pop
push
or
xchg
inc
jmp
xor
mov
mov
lahf
fldenv
shl
jle
mov
in
(bad)
jecxz
pop
sti
pushf
and
movs
dec
or
rcl
or
mov
add
mov
mov
dec
cmp
sub
stos
jg
loopne
pushf
mov
jae
add
ss
ds
cli
out
and
out
pop
mov
stos
inc
mov
cmps
lods
jmp
sbb
repz
jle
push
shr
or
mov
callw
pop
jbe
ins
mov
push
jae
jnp
mov
inc
push
push
in
adc
mov
mov
popa
xlat
div
jmp
jb
cld
jns
xchg
movs
sahf
aas
cmps
(bad)
js
or
leave
and
inc
xlat
outs
or
icebp
cmp
ins
push
in
stos
pop
not
fdiv
mov
mov
adc
sub
cli
or
xor
nop
jo
dec
ins
mov
push
jae
fstp
fsub
mov
adc
mov
xchg
dec
lahf
sar
cmp
in
loope
xor
jne
aad
lods
xchg
lock
jmp
jmp
mov
push
xchg
pop
add
dec
out
push
adc
or
mov
mul
ret
(bad)
scas
inc
js
test
test
cld
xor
pop
dec
retf
fimul
mov
or
jl
dec
in
(bad)
ficom
adc
push
retf
pop
jns
pop
sub
adc
xchg
cs
cmp
adc
jmp
cmp
in
rcl
in
and
test
push
shl
cmp
push
out
data16
gs
xchg
push
cmp
pusha
push
cmc
icebp
in
sbb
arpl
fcomp
dec
imul
xor
mov
mov
neg
scas
jbe
icebp
fsubr
sub
push
repz
rcr
sub
mul
arpl
jecxz
dec
push
fwait
push
stc
adc
mov
leave
push
mov
add
ds
faddp
mov
push
call
mov
and
xlat
dec
out
int
jo
retf
fldcw
outs
rcl
jae
or
shl
mov
cmp
dec
out
or
ret
sub
jmp
fimul
fistp
inc
inc
ret
or
dec
mov
call
pushf
push
addps
sbb
cwde
cmp
jge
pop
mov
jbe
inc
or
push
jb
sub
test
mov
xchg
and
stos
(bad)
jbe
in
fild
mov
mov
movs
inc
sbb
and
dec
inc
mov
pop
jo
fadd
jno
and
pop
daa
mov
xor
scas
mov
repz
xor
add
pop
xor
(bad)
pop
jp
jno
mov
sbb
popa
pushf
jno
push
ja
jne
inc
mov
push
xor
mov
push
pushf
fbstp
es
bound
int
dec
daa
or
cmp
xor
rol
jo
lea
stos
add
sub
xor
pop
xchg
loop
inc
cmc
shl
out
xlat
inc
lahf
mov
leave
leave
std
add
adc
xor
xchg
sub
fimul
ss
pusha
mov
mov
adc
repz
mov
(bad)
inc
dec
std
cmp
adc
fnsave
out
add
add
repz
(bad)
and
mov
push
push
xor
xchg
xor
in
sbb
pop
mov
movs
mov
add
(bad)
mov
movs
int3
add
cmp
pop
adc
in
(bad)
out
sbb
les
test
pushf
dec
add
xchg
cmp
and
ins
enter
dec
stos
mov
inc
and
inc
and
ja
pusha
hlt
shl
dec
pop
xor
xor
push
and
inc
inc
sub
sub
cdq
jno
sbb
pop
push
stos
cmp
jle
jmp
mov
div
sub
mov
jno
int3
inc
xchg
scas
nop
dec
cmps
call
mov
scas
sub
or
std
push
neg
jb
loopne
ins
outs
add
mov
ret
jge
clc
js
out
dec
xor
mov
mov
jmp
neg
jg
jecxz
cli
sar
repz
idiv
outs
ret
out
leave
sbb
cmps
aad
xor
outs
jns
adc
call
popa
aam
sub
xchg
jns
rcr
jecxz
xchg
mov
mov
cmp
jge
jnp
scas
and
rol
add
fsub
leave
sub
test
mov
xchg
jl
cmp
test
and
mov
or
clc
or
loopne
ss
fnsave
sahf
xchg
jb
cmp
call
daa
std
sub
pop
vcmpps
jbe
xchg
cmp
and
shl
jmp
nop
cmp
ror
mov
nop
mov
(bad)
lahf
int3
pop
xor
sub
arpl
xor
arpl
call
mov
inc
lods
dec
fldenv
sahf
loopne
mov
lods
xor
jl
loop
adc
dec
adc
cmp
push
mov
dec
pusha
fdivr
popa
push
sbb
jecxz
pop
add
das
sub
test
cmp
dec
fsubr
ja
lods
aas
rcr
mov
adc
jp
test
lds
xor
call
rcr
test
push
mov
ds
les
sbb
jle
jmp
inc
repnz
lods
out
cmps
int
add
dec
jp
loope
push
push
push
je
ins
loope
adc
(bad)
mov
or
rcl
push
sahf
adc
fwait
out
cmps
int
inc
fcomp
cmp
hlt
pop
xor
(bad)
(bad)
cmp
mov
push
cmps
bound
cdq
adc
and
mov
jo
sbb
xor
aad
outs
scas
or
icebp
and
push
push
mov
test
rol
jg
mov
mov
pop
adc
pop
gs
dec
inc
add
cwde
adc
adc
jmp
cld
inc
daa
out
cdq
imul
mov
cli
(bad)
out
int3
mov
jp
mov
ror
clc
loop
lahf
mov
ret
mov
adc
push
adc
cmp
out
xchg
mov
aaa
push
sub
ja
dec
mov
adc
dec
shr
jae
clc
ret
adc
adc
test
inc
test
lods
daa
jl
(bad)
adc
mov
push
push
pop
mov
loope
lock
mov
add
sub
mov
inc
or
cmp
scas
cld
xchg
mov
aad
adc
mov
xchg
cmp
sahf
and
test
dec
les
stc
cmp
xchg
xchg
fwait
call
and
inc
ins
aad
je
sar
jae
fcomip
inc
or
mov
adc
and
das
mov
push
jbe
test
mov
pop
xchg
in
pop
and
mov
adc
cmp
jne
dec
add
imul
adc
in
sub
and
imul
adc
adc
outs
mov
daa
jg
ins
push
jae
jne
je
sub
and
adc
sahf
test
test
pop
(bad)
pop
mov
pop
mov
sub
adc
in
iret
jne
push
addr16
test
cmc
adc
retf
js
(bad)
ss
mov
aas
movs
scas
hlt
lods
jl
pop
push
stos
or
sbb
imul
add
dec
mov
sub
cwde
adc
daa
hlt
fs
iret
push
int3
loope
sub
mov
imul
jecxz
push
inc
mov
int3
(bad)
daa
je
mul
adc
adc
lods
push
or
movs
iret
sbb
fwait
jmp
inc
rol
push
popf
out
sub
xchg
jbe
fdiv
jo
push
adc
div
fbld
mov
lds
add
mov
out
icebp
es
lahf
mov
imul
stos
jnp
jne
movs
push
pop
in
outs
arpl
mov
scas
ja
cmp
dec
jp
mov
js
dec
jbe
push
sbb
and
call
sar
jecxz
xchg
jle
test
mov
(bad)
cmp
adc
and
ds
call
into
fcom
mov
(bad)
in
sbb
jg
sbb
mov
and
imul
je
push
mov
xchg
xchg
add
pop
loop
cwde
xor
cmps
add
jl
(bad)
rcr
pop
out
jo
mov
nop
mov
aas
js
mov
aas
in
xor
les
or
cmp
fdiv
or
inc
cmp
sub
cmp
sub
sti
std
dec
push
jbe
push
push
xor
je
out
or
sub
pop
leave
mov
test
push
cdq
cld
cmp
sbb
jns
pop
jns
sbb
jmp
cmp
ror
cmp
leave
dec
shr
jp
pusha
dec
pop
add
cmps
int
cmp
jmp
imul
inc
jns
xchg
cmps
add
sahf
nop
out
add
pop
sub
cmp
fstp
fnstenv
lods
(bad)
or
jae
popf
xchg
mov
fwait
ror
xchg
test
xor
or
fwait
adc
sub
inc
fidiv
movs
lea
jmp
ret
push
fs
inc
out
test
push
or
pop
cmps
mov
int3
mov
bound
pop
mov
stc
fwait
sahf
push
popf
jne
jbe
sahf
sbb
xlat
xor
jle
jp
xchg
mov
cdq
or
pushf
call
js
push
cli
out
push
jmp
mov
push
das
jmp
test
lods
jbe
jp
sar
mov
xor
imul
out
test
jns
pop
int3
inc
popf
rol
sahf
pop
rcl
xlat
cld
sbb
test
lahf
lahf
xor
aas
mov
mul
je
add
dec
add
fld
fcom
pop
mov
add
inc
dec
sbb
sahf
jmp
rcr
inc
add
inc
fidivr
cli
mov
push
sbb
movs
mov
retf
outs
pop
pop
xor
imul
or
popf
jmp
xor
sti
and
dec
out
cwde
stc
fcom
xchg
and
ffree
mov
retf
push
jle
sbb
hlt
ror
inc
loopne
test
enter
loopne
aas
adc
sub
jecxz
sub
(bad)
mov
lahf
lods
jle
dec
cmps
js
jmp
xchg
and
(bad)
rcr
push
fstp
mov
into
cmp
sti
and
pop
in
dec
push
push
cmp
add
mov
sbb
sub
lock
jmp
cmp
(bad)
out
dec
mov
sbb
xlat
loop
add
cmp
ds
mov
in
xchg
scas
jmp
int3
mov
cmc
js
inc
shr
lods
add
mov
jne
icebp
sub
mov
cmp
adc
dec
iret
adc
lea
mov
arpl
jl
and
xchg
dec
enter
mov
pop
pop
aaa
cmps
fsubr
fcomp
test
xchg
lods
inc
pop
ins
xchg
push
pop
cld
cmc
jle
xor
scas
push
test
(bad)
sti
lods
ja
test
mov
sahf
and
jnp
ins
mov
not
ficomp
and
popf
outs
jo
inc
mov
xor
or
sbb
pop
xlat
jmp
jl
or
cwde
jbe
push
into
rol
out
in
fisttp
sar
shl
ins
sti
sub
shr
cli
arpl
adc
or
add
push
bound
pushf
pop
jmp
cwde
lock
fisubr
sbb
ret
arpl
xchg
and
mov
ret
pop
adc
mov
cdq
sub
mov
fnstsw
das
dec
loopne
sbb
mov
fimul
jg
call
cmp
les
sbb
fwait
pop
sbb
cmp
sub
and
sub
adc
xchg
ja
dec
std
or
call
in
ja
test
je
mov
rep
dec
ss
(bad)
jnp
aaa
mov
add
jle
dec
movs
ret
inc
cmps
ror
mov
inc
lahf
in
enter
add
not
mov
fbld
push
js
aam
cmp
or
loopne
mov
mov
or
scas
mov
xlat
mov
test
cmps
dec
cli
mov
pop
pop
mov
cmp
mov
icebp
fnstsw
adc
scas
xchg
div
inc
das
inc
dec
sbb
inc
retf
mov
push
ficom
into
mov
daa
jmp
push
test
pop
mov
jnp
mov
mov
inc
iret
mov
pop
push
fdiv
add
jle
(bad)
int
cmp
cld
adc
jg
cwde
repnz
lds
(bad)
mov
sub
xchg
fs
xchg
daa
ins
(bad)
jb
cmp
repz
fwait
sahf
push
push
(bad)
lock
daa
test
mov
sar
aaa
icebp
loopne
lds
test
stos
(bad)
in
fwait
add
jns
jmp
das
inc
sbb
add
xor
mov
test
out
rcl
popa
mov
add
ja
mov
xchg
gs
mov
mov
mov
in
jecxz
xchg
inc
repnz
dec
jmp
ins
popf
stos
dec
sbb
iret
arpl
mov
jle
sub
mov
dec
jl
addr16
xchg
into
clc
inc
sbb
int3
and
xchg
or
rcl
sub
jns
loop
xchg
fst
mov
in
ja
lock
sti
mov
pop
movs
in
rcl
nop
retf
and
jmp
gs
gs
pop
mov
rcr
div
retf
or
inc
daa
cmp
jmp
mov
sti
inc
in
fcmovne
pop
clc
sub
faddp
sar
and
xor
mov
stc
adc
stc
div
fwait
adc
hlt
pushw
adc
ds
push
lods
mov
push
mov
cmp
cmp
dec
push
sahf
dec
rcr
repnz
mov
jmp
mov
adc
pop
xchg
lds
les
mov
dec
add
mov
pop
xor
push
mov
adc
icebp
repz
push
add
out
inc
add
fwait
sar
outs
mov
xchg
xor
mov
imul
jns
jo
repz
fsin
pusha
jg
jp
test
adc
add
mov
mov
jp
test
test
out
movs
xor
iret
enter
xchg
loope
push
xlat
xchg
test
ins
xchg
adc
jecxz
add
pop
fisttp
imul
jbe
loope
xchg
add
dec
lock
mov
outs
fild
sahf
or
sti
mov
mov
cmps
jae
(bad)
jl
lods
and
push
add
ja
mov
ds
ret
popa
loopne
dec
popf
ds
cwde
dec
push
xchg
out
and
jmp
mov
jae
out
ror
add
dec
cmp
and
les
mov
jbe
cmp
popf
aad
sub
xchg
neg
fiadd
cmc
stc
pop
adc
jg
ja
cmps
xor
pop
sbb
stc
lds
repz
nop
mov
push
lods
sub
jmp
mov
test
outs
cmc
fwait
in
dec
jle
pop
mul
push
(bad)
pop
sti
stos
rcl
jecxz
leave
cmp
clc
inc
leave
outs
popa
xchg
dec
sbb
xchg
or
iret
lds
dec
xor
xchg
mov
mov
pop
inc
mov
inc
movs
ret
das
jne
mov
sbb
int
xor
int3
sub
out
lods
xor
int3
xchg
es
or
inc
adc
sar
or
jae
retf
pop
inc
icebp
mov
adc
add
movs
sub
pop
btr
aam
out
fistp
or
rol
or
xchg
mov
call
cld
and
sbb
lds
jg
inc
sbb
popf
sub
pushf
dec
mov
lea
pop
mov
sbb
mov
xchg
jge
jl
int3
stos
mov
push
scas
cmps
ret
cdq
repnz
stc
xchg
mov
(bad)
cli
sahf
mov
arpl
das
call
mov
cwde
mov
ret
jnp
fisub
popf
aaa
out
jo
loope
sbb
or
es
sbb
sub
sahf
fwait
pop
bound
out
daa
dec
ret
push
ret
adc
or
mov
cwde
sbb
pop
and
mov
movs
lds
mov
sub
stos
inc
outs
cmp
call
add
push
imul
lahf
jge
fcomip
xor
out
add
add
mov
call
out
std
shr
dec
mov
dec
ds
out
mov
pop
jnp
je
(bad)
sti
dec
jg
stos
xor
adc
push
adc
inc
cs
in
xor
cmps
lds
cwde
push
je
jb
outs
pop
cs
push
sbb
push
(bad)
mov
or
int3
sahf
(bad)
adc
push
cli
pop
pop
int
inc
frstor
test
xor
mov
jmp
aaa
outs
mov
push
dec
mov
mov
repz
loope
int3
mov
daa
dec
and
jg
push
adc
in
(bad)
cdq
arpl
ds
or
pushf
push
scas
mov
iret
mov
mov
or
push
mov
(bad)
test
xchg
fld
fs
adc
adc
and
or
sbb
in
imul
add
ds
mov
pop
cmp
ss
outs
inc
adc
mov
xchg
icebp
rcr
mov
mov
sbb
outs
or
push
imul
mov
cmp
repz
clc
cmc
pop
fsub
inc
xchg
pop
not
xor
cmp
dec
push
mov
mov
inc
or
pushf
pop
fist
pop
fnsave
xchg
or
mov
cmp
js
mov
sub
cdq
es
call
adc
(bad)
sar
or
jmp
push
scas
stc
pusha
ja
sub
dec
xchg
les
leave
call
loopne
ret
or
call
(bad)
loope
scas
jmp
cmps
aaa
in
xchg
stos
xchg
call
nop
mov
and
fisubr
inc
movs
pop
sub
repz
xor
fild
sbb
fldenv
dec
adc
dec
sbb
jecxz
fs
cs
dec
xor
aad
shr
cmp
es
aam
test
add
sub
pop
xor
movs
dec
cmp
sbb
jnp
mov
(bad)
lock
jb
lods
js
cmp
repz
dec
mov
add
sub
push
push
and
(bad)
ins
ds
pop
cwde
fistp
and
mov
push
dec
into
test
adc
dec
sbb
test
fcmovnbe
mov
sbb
mov
mov
and
mov
cmp
jne
push
jae
adc
sbb
and
and
ret
pop
xchg
or
out
jnp
cs
imul
ds
inc
fbld
mov
stc
lahf
data16
lock
outs
loope
pop
repz
pop
mov
daa
pop
stc
test
cmp
or
mov
mov
bound
jo
icebp
mov
test
mov
push
xor
mov
sbb
push
inc
cmp
(bad)
int
ret
inc
sbb
out
mov
or
ins
das
push
lahf
mov
xchg
jle
cmp
fadd
cli
sbb
add
push
mov
or
imul
and
pop
inc
pop
mov
mov
fbld
adc
push
add
pop
push
push
out
mov
ret
adc
loop
aaa
movs
jbe
xchg
in
fadd
in
ins
out
les
jo
daa
inc
push
push
add
xor
mov
cmps
mov
xor
cmp
mov
bnd
or
jle
push
mov
addr16
xchg
in
sbb
popf
sbb
jmp
fnstcw
fdivr
outs
xor
std
mov
fwait
mov
(bad)
inc
mov
xchg
sbb
fisubr
or
fsubr
xor
xchg
iret
fisub
in
inc
sbb
add
loopne
movs
(bad)
jle
adc
lods
movs
xor
fistp
mov
jp
ret
mov
in
push
sti
in
push
bound
ins
call
ins
xchg
hlt
lahf
(bad)
into
jmp
daa
test
inc
aaa
add
(bad)
arpl
or
call
or
jmp
pop
fs
ss
bound
xor
mov
jbe
add
aad
push
(bad)
scas
push
ins
sbb
pop
call
iret
test
mov
ret
push
not
pusha
or
cmps
ret
icebp
retf
ror
jmp
cmps
sbb
or
pop
cmp
mov
sub
jnp
push
jp
out
int3
mov
dec
xor
dec
jno
sahf
adc
data16
mov
xchg
jae
scas
shl
and
ror
rol
dec
pushf
(bad)
popf
(bad)
mov
sub
loopne
push
cmp
jae
mov
fst
ret
lock
nop
in
adc
xchg
pop
int
enter
es
ds
push
cmp
add
cmps
mov
xor
test
pushf
cmps
aaa
jp
je
rcr
out
lock
and
xlat
pop
dec
cmp
xlat
xchg
cli
pushf
pop
out
push
scas
and
sub
cmp
cmp
data16
mov
xor
or
push
mov
jl
xchg
fmul
loop
inc
test
sub
mov
ret
jecxz
xchg
xor
sub
(bad)
(bad)
push
xchg
cmps
push
test
test
scas
cdq
mov
and
lock
popa
dec
mov
movs
(bad)
cmps
lahf
sbb
push
xchg
xchg
outs
adc
bound
push
xchg
out
and
fs
stc
and
dec
vxorps
les
(bad)
dec
ins
add
xor
popf
cmc
(bad)
cli
mov
adc
int
inc
add
xchg
out
and
pop
arpl
mov
adc
sbb
pusha
sub
fwait
and
inc
hlt
or
and
mov
jl
adc
inc
and
push
loopne
push
ror
sbb
mov
mov
bound
jmp
shl
mov
adc
inc
jbe
int
shl
push
fmulp
in
sti
aad
jge
mov
cmps
mov
(bad)
jmp
or
test
sar
add
cmp
inc
ins
imul
call
cmps
sub
lgs
push
mov
and
lahf
int3
(bad)
adc
jl
(bad)
and
icebp
loop
outs
mov
mov
fld
inc
adc
scas
call
ds
fist
(bad)
push
ss
adc
popf
movs
fbstp
add
push
cli
xor
ret
aad
cmp
add
ret
(bad)
andps
sbb
xchg
daa
push
push
sahf
ret
dec
aad
hlt
push
cs
cmp
not
loope
push
ds
jmp
mov
(bad)
xlat
pop
pop
mov
repnz
call
mov
fisub
aas
mov
cwde
(bad)
mov
fcom
repz
sbb
fyl2xp1
sbb
scas
fidiv
pop
or
shl
pop
xchg
(bad)
sbb
jmp
aam
call
or
rol
pop
stc
sbb
jmp
pop
adc
retf
mov
test
ds
xchg
sub
vaddpd
lahf
and
neg
pushf
mov
sbb
loopne
(bad)
jp
fisub
hlt
loop
and
mov
stos
jae
in
inc
push
test
mov
sti
repz
dec
push
mov
adc
or
pop
fidivr
inc
enter
ffreep
dec
inc
mov
test
xchg
mov
std
dec
dec
fst
xchg
add
cli
mov
cdq
fwait
add
int
shr
fcom
jge
scas
push
pusha
test
add
dec
adc
sub
and
rep
std
mov
jle
jno
mov
xchg
pop
icebp
sub
push
push
lock
inc
in
adc
pop
adc
and
mov
sbb
out
jb
mov
cmc
dec
rcr
idiv
test
arpl
ror
sub
hlt
sbb
pop
pop
mov
dec
imul
in
jmp
cdq
ret
loop
xchg
inc
mov
mov
or
sub
or
mov
adc
test
xchg
pusha
inc
pop
jge
test
mov
js
push
lods
inc
aad
or
loopne
(bad)
out
cld
or
cli
rol
cmp
outs
xchg
xchg
ja
sbb
sbb
das
mov
aam
mov
sub
add
enter
pcmpgtb
pop
mov
pop
jmp
push
jno
mov
int
mov
sahf
icebp
mov
fist
pop
or
(bad)
adc
ret
inc
jle
stc
in
popf
mov
xor
shl
outs
xchg
sub
mov
ins
pop
aaa
dec
call
gs
sub
mov
pop
loope
stc
fistp
mov
scas
or
jl
jp
fs
(bad)
fmul
mov
fcomp
ins
call
scas
enter
(bad)
repnz
jmp
enter
mov
mov
frstor
iret
shl
push
leave
jge
out
aas
fisub
and
xor
add
jo
shl
add
lods
lock
pop
cmp
mov
mov
add
popa
jecxz
leave
and
(bad)
out
sbb
out
aad
retf
fld
mov
mov
pop
shl
pop
lods
mov
ret
mov
mov
adc
sub
icebp
mov
pop
ins
mov
and
add
mov
push
(bad)
stos
push
cmp
clc
test
retf
sbb
jle
add
mov
sub
mov
mov
xchg
neg
lods
xor
out
ss
mov
sbb
jno
rcl
les
js
cmp
mov
call
sub
lods
jbe
test
lds
mov
addr16
stos
xor
lea
push
xor
sti
jecxz
in
xor
ja
(bad)
js
loopne
mov
sub
push
stos
ffree
test
(bad)
pushf
xor
outs
ret
xchg
scas
popf
test
inc
sbb
pop
in
fisttp
jb
jae
cmps
jno
lock
rol
push
icebp
xchg
dec
lods
mov
jle
loope
cmps
(bad)
clc
out
ins
push
xor
cmp
rcr
jbe
in
add
cmp
in
cmc
shl
jns
add
dec
sti
jle
xor
jmp
les
lock
add
test
pushf
in
and
mov
nop
imul
mov
dec
js
cmp
jne
ss
adc
stos
fs
test
sbb
fadd
ss
retf
dec
mov
pop
cwde
mov
dec
mov
cdq
cld
mov
mov
sbb
sar
dec
push
arpl
sub
mov
jmp
mov
sub
and
jp
xchg
data16
mov
dec
inc
ins
fld
fcmove
cmp
cmp
xor
jne
(bad)
pop
ds
mov
sub
dec
in
xor
cmc
fstp
out
mov
fdiv
fldl2t
std
repz
outs
pop
push
inc
cmp
jb
fistp
es
mov
or
and
movlhps
sbb
jl
(bad)
in
sub
ins
and
or
push
cmp
add
or
mov
aad
cdq
pop
movs
bound
mov
and
call
ficomp
inc
call
call
daa
or
adc
xchg
fstp
cdq
xor
mov
fbstp
inc
in
xchg
xchg
or
sub
jle
pop
dec
mov
xchg
xchg
xor
out
push
and
mov
dec
adc
pop
inc
lods
dec
push
xchg
cmp
sub
and
push
shl
std
xor
sbb
in
xor
mov
sbb
movs
mov
(bad)
scas
icebp
push
mov
ficom
xor
push
in
pop
test
fmul
jno
out
dec
mov
or
ds
aaa
push
aad
mov
bound
mov
test
and
jne
std
jo
rcr
push
neg
add
cmp
shl
and
outs
pop
and
(bad)
test
jg
jns
or
mov
(bad)
and
loopne
div
add
mov
pop
cmp
add
adc
cwde
xor
mov
jl
sub
cmp
lds
mov
sar
sub
or
fnstsw
imul
jae
cmps
imul
fild
xor
popa
test
push
nop
mov
test
xchg
jbe
sub
fbld
cmp
cdq
lods
or
cmps
mov
jb
sbb
sub
clc
inc
xchg
out
pop
mov
loope
and
out
and
fstp
or
mov
outs
push
div
xor
popa
and
jecxz
jbe
pushf
push
ret
fdiv
xor
les
mov
out
and
pushf
sub
jmp
jae
stc
jge
in
ffreep
adc
push
push
pop
mov
cmps
dec
pop
add
in
fsubr
pop
xchg
and
cli
int3
or
jne
xor
mov
aaa
lods
dec
fisttp
push
mov
das
inc
or
add
imul
xor
add
mov
dec
iret
mov
fisubr
and
xor
mov
fnstenv
jnp
clc
push
mov
jmp
lahf
cmp
int3
xor
lods
fst
sbb
adc
push
add
scas
test
mov
push
mov
mov
cdq
jg
push
out
adc
cmps
cmc
ficomp
and
shr
xchg
aad
sub
ins
dec
sub
jmp
imul
xchg
pop
push
retf
popa
mov
xor
aaa
push
xchg
cmc
xlat
jbe
mov
jge
or
push
stos
cdq
jb
(bad)
in
push
jo
mov
jne
and
imul
mov
fisubr
das
jbe
pusha
in
jns
and
sub
lds
xor
sub
shr
mov
pushf
fstp
pop
sbb
js
sub
mov
dec
ret
mov
xor
out
jb
jae
sub
pop
push
(bad)
jbe
mov
jg
dec
fcom
idiv
push
pop
inc
retf
xchg
sbb
inc
mov
rol
clc
xchg
test
fcos
(bad)
mov
inc
idiv
andnps
jle
pusha
(bad)
retf
push
jl
ds
add
mov
xor
and
jl
and
and
aaa
cmc
bnd
sub
mov
cmps
dec
out
xor
dec
js
lahf
pop
pop
hlt
mov
push
and
test
and
leave
push
mov
stc
fmul
push
jns
pop
jb
and
mov
jge
mov
nop
jge
mov
sub
ins
ss
xor
enter
jl
div
hlt
xchg
jno
sub
xchg
rcr
pusha
dec
dec
pop
and
dec
scas
lock
js
xchg
mov
inc
movs
and
sbb
fld
lods
ret
pop
add
cmp
dec
dec
pop
xchg
ror
(bad)
pop
std
in
dec
in
xchg
aam
loopne
lahf
xor
pop
ins
scas
xchg
push
add
jle
xchg
push
add
pop
daa
imul
xchg
out
add
xchg
(bad)
pushf
mov
pop
hlt
in
jg
fdivr
add
push
pop
inc
pop
or
ret
adc
mov
jecxz
aas
add
movs
and
mov
aas
mov
(bad)
xor
nop
addr16
mov
std
or
mov
push
ret
xor
push
cmp
fild
jg
push
sbb
mov
enter
mov
dec
cmp
mov
iret
popa
xchg
push
mov
xor
nop
pop
mov
pop
sbb
add
mov
mov
push
es
mov
cmps
mov
inc
inc
inc
aad
stos
xor
pop
stos
clc
lods
push
sub
sbb
or
js
xchg
mov
inc
icebp
xchg
jne
jmp
dec
imul
dec
and
ja
add
mov
sti
push
or
or
ror
push
jnp
popa
sti
jl
into
dec
jmp
xchg
push
neg
fdiv
or
mov
inc
xchg
lods
dec
arpl
fcmovne
es
push
mov
cmp
movs
sub
ss
pop
pop
aas
shr
sub
xchg
dec
jmp
fnstsw
push
pop
outs
cmp
cmps
and
imul
add
push
call
bound
push
cwde
ror
aas
in
cmc
stc
sbb
repz
xchg
ds
lahf
mov
cs
cmps
imul
mov
pop
and
mov
ins
shl
adc
mov
mov
mov
push
and
loope
dec
int3
pushf
test
push
xchg
gs
mov
inc
fstp
jecxz
sti
imul
enter
imul
(bad)
hlt
jno
popf
aad
stos
and
int3
movs
inc
dec
sub
fs
pop
cmp
ficom
popf
pop
cs
addr16
sbb
ins
pop
xchg
jo
sub
cli
out
fcmovnu
aam
out
mov
push
sub
lds
dec
mov
test
in
ds
jmp
ins
mov
aas
inc
mov
add
jecxz
dec
pop
push
push
mov
dec
xor
mov
enter
call
push
std
movs
jae
mov
(bad)
leave
xchg
push
sbb
push
pop
mov
xchg
adc
icebp
into
push
(bad)
and
jge
mov
(bad)
jl
mov
loope
out
loope
sar
xchg
ffreep
mov
cli
js
cli
xor
ds
or
pop
jge
dec
cmps
dec
call
mov
pushf
dec
ficom
cmp
mov
stc
push
xlat
out
aam
pop
pop
shl
jnp
adc
jbe
aas
ins
fnstcw
jo
lahf
fdivr
adc
and
bound
test
je
fwait
icebp
cld
cwde
push
push
call
cli
add
sbb
mov
mov
clc
fwait
and
fwait
push
mov
iret
mov
xchg
mov
ss
aaa
sub
push
mov
or
imul
and
leave
fiadd
outs
loop
mov
add
retf
div
std
popa
dec
xchg
or
pop
dec
xor
(bad)
mov
out
sub
push
gs
test
and
leave
mov
movs
clc
mov
adc
mov
jp
retf
inc
outs
jmp
lock
fiadd
test
popf
inc
mov
std
test
xor
push
xor
adc
xchg
jmp
(bad)
or
std
and
xchg
mov
jge
lahf
sub
sub
pop
jg
add
shl
adc
cdq
mov
push
cld
sbb
add
(bad)
inc
shr
cli
pop
outs
mov
xchg
les
sub
je
mov
push
into
stos
ret
test
pop
cmp
aad
pop
adc
sbb
push
ja
mov
fisttp
not
pop
sbb
mov
push
daa
cmp
ja
js
push
and
fist
add
and
mov
shl
inc
test
in
call
xchg
mov
pop
mov
xchg
(bad)
aam
outs
or
test
xor
adc
add
rol
sub
sbb
push
enter
mov
leave
pop
cmp
(bad)
pop
jl
loope
ror
fmul
repz
icebp
sub
aam
fwait
pop
inc
mov
cwde
jnp
push
ficom
sbb
imul
scas
lods
cld
jmp
pop
jb
xchg
stc
xchg
push
jns
cmps
fst
call
sub
push
mov
repz
cmps
mov
in
and
(bad)
test
ror
hlt
cmc
xor
mov
addr16
je
in
dec
pop
xchg
mov
xor
mov
add
lods
call
pop
add
xchg
dec
jo
in
ret
movs
imul
les
or
fcmovnbe
sbb
pop
jge
clc
fsqrt
mov
mov
mov
stc
(bad)
inc
adc
cmp
ins
(bad)
mov
and
test
in
pushf
popa
fidivr
xor
pop
jl
add
mov
lds
or
movs
adc
imul
push
add
add
arpl
outs
sub
or
adc
cmc
mov
sub
xchg
push
mov
mov
jnp
push
stos
aad
xor
inc
movs
xor
les
dec
fidivr
sbb
in
ret
add
and
jg
xchg
sbb
and
sbb
jg
jb
call
xchg
inc
loope
shl
(bad)
leave
and
and
xchg
or
sub
cs
pop
and
sbb
out
inc
jae
ret
push
dec
out
inc
adc
fnstenv
or
fcom
sbb
lods
dec
cld
mov
in
js
lock
cs
xchg
cmp
ret
ret
call
push
lods
scas
imul
ins
and
(bad)
and
sub
gs
jl
mov
loope
loope
or
mov
clc
xchg
adc
lahf
(bad)
jp
cwde
ficomp
hlt
mov
push
repnz
and
adc
arpl
xchg
dec
pop
jne
leave
cmp
xor
push
mov
sbb
dec
popf
enter
mov
mov
xchg
jne
and
fwait
sbb
dec
mov
in
mov
inc
sub
inc
fist
das
mov
js
adc
stos
jb
push
mov
push
mov
push
ficom
imul
jmp
test
rol
push
int
rcr
sub
outs
mov
outs
adc
hlt
cmp
je
sbb
es
cmp
pop
idiv
lahf
ja
jp
pop
sbb
shr
repnz
xor
test
sub
add
shl
mov
or
fbstp
aaa
xchg
iret
jno
sar
and
add
mov
xor
sbb
or
cmp
stos
and
xlat
pop
mov
xchg
mov
sbb
in
(bad)
fbstp
adc
stos
or
pushf
inc
call
cmp
add
out
lahf
in
dec
dec
shl
out
sub
or
pop
and
pushf
add
lock
out
(bad)
cli
pop
jne
mov
jle
(bad)
in
jle
pop
inc
ja
popf
(bad)
push
jnp
sub
je
mov
cmp
daa
cli
in
jecxz
es
sbb
or
bound
sahf
dec
dec
das
push
mov
pop
dec
jecxz
jb
xchg
(bad)
repz
cmp
cld
mov
movs
jb
jp
loope
push
xchg
repnz
pop
mov
cmp
or
fdivrp
inc
mov
popa
sub
xchg
cmp
mov
popa
(bad)
out
dec
test
int3
das
inc
mov
jb
ja
nop
pop
mov
mov
or
jae
retf
sbb
fs
xchg
outs
or
pop
dec
xor
xchg
sahf
stc
sbb
rcl
dec
fild
(bad)
mov
xchg
adc
adc
imul
fldl2t
cmp
push
repnz
retf
xor
sti
jb
inc
mov
mov
(bad)
xchg
push
std
sbb
cdq
popf
mov
loop
sbb
lods
call
jp
jns
out
fmul
dec
test
popf
adc
inc
cmp
imul
repz
push
daa
out
out
xor
sub
test
adc
pop
cmp
clc
push
add
stos
push
bound
fwait
aaa
push
jmp
and
sbb
xchg
mov
push
popf
lods
cdq
inc
mov
mov
push
sar
dec
jg
mov
push
sub
push
lock
mov
repz
xchg
and
enter
outs
push
mov
adc
cdq
jnp
mov
push
(bad)
jns
out
mov
adc
sti
add
(bad)
(bad)
xchg
add
js
lock
mov
mov
or
pop
in
inc
test
push
mov
sub
fild
cmp
jnp
xor
or
js
ret
jb
dec
cmp
shl
shl
jmp
test
dec
inc
les
cwde
add
and
pop
ins
aam
cmp
jae
pop
xchg
push
mov
jb
inc
inc
popf
shl
jnp
pop
div
sub
imul
mov
dec
neg
push
inc
cmp
push
push
div
loop
arpl
xchg
inc
out
mov
mov
scas
scas
into
mov
dec
in
loope
dec
mov
mov
mov
and
inc
xor
rcr
retf
dec
xor
mov
je
sbb
pusha
out
mov
cli
adc
in
outs
cmp
outs
cmovb
xchg
add
lds
repnz
stos
mov
xchg
js
push
lahf
inc
ja
cld
sub
mov
test
stos
ret
cmps
scas
enter
pop
add
cmps
adc
push
adc
jmp
jbe
iret
sbb
repz
(bad)
mov
adc
mov
sbb
hlt
cmp
lods
dec
movs
mov
arpl
and
pop
ins
cmp
cmp
popf
mov
inc
xchg
push
imul
mov
jb
cwde
lods
std
jne
pusha
lock
jecxz
pop
retf
retf
pusha
mov
dec
shl
mul
pop
lods
pop
xchg
es
jle
and
scas
sbb
iret
jecxz
push
push
arpl
adc
mov
mov
in
xor
xor
inc
mov
xchg
idiv
cmps
repz
retf
das
dec
pusha
mov
push
int
and
sti
in
dec
retf
clc
lock
out
sub
pop
scas
(bad)
test
jns
push
push
sub
cmp
mov
sbb
bound
dec
or
adc
and
mov
ds
jp
loope
fdivr
jmp
lods
outs
jae
push
and
mov
inc
xchg
cli
add
xor
outs
add
pushf
in
retf
ins
jbe
pushf
pop
add
pushf
sub
and
push
or
das
icebp
clc
jno
int
push
pop
push
add
jae
cmps
pop
(bad)
dec
adc
in
xchg
add
sbb
(bad)
xchg
sbb
outs
les
fs
out
int
mov
jecxz
sbb
mov
cdq
mov
cmp
jmp
add
bswap
sub
int
xor
out
dec
outs
jl
enter
pop
into
cmp
mov
push
xor
les
mov
hlt
dec
jp
push
dec
outs
and
lods
sbb
mov
lds
xor
add
jge
dec
dec
inc
mov
fprem1
inc
repnz
mov
popa
jae
cmp
push
int
and
push
cdq
jo
cmps
sub
data16
sub
mov
sahf
or
dec
push
sbb
in
jp
into
mov
adc
leave
cmps
(bad)
cmp
push
cs
push
mov
mov
mov
mov
fsub
add
jl
rol
shl
jbe
stos
push
jle
adc
pop
adc
stos
std
(bad)
cmps
addr16
call
adc
add
cwde
dec
inc
fidiv
iret
sbb
hlt
or
dec
mov
xchg
call
mov
adc
sbb
jo
push
dec
xor
push
fwait
add
push
pop
int
jg
add
fimul
lahf
mov
cmp
sub
fadd
loope
and
aad
int
lods
mov
ror
int3
or
xor
pop
and
fwait
dec
outs
mov
jg
cmp
aaa
dec
jnp
in
es
movs
mov
mov
out
jecxz
adc
out
lods
popf
cmp
inc
mov
xchg
mov
bound
mov
repz
xchg
dec
je
repnz
clc
(bad)
ins
and
call
pushf
test
int
or
inc
add
push
lds
out
xchg
or
push
movs
push
fisttp
stc
sbb
xlat
xchg
pop
int
dec
ss
pop
(bad)
mov
and
mov
ins
loop
repnz
sar
xlat
(bad)
xchg
int
inc
retf
pop
xchg
push
dec
into
adc
pop
lahf
std
adc
xlat
xchg
movs
xor
push
push
cmp
sbb
push
fiadd
or
cwde
shr
mul
arpl
fs
(bad)
push
mov
mov
push
rcr
jecxz
and
jle
push
push
mov
in
out
cli
xchg
pushf
je
xor
jb
inc
pop
gs
mov
stc
xor
adc
dec
mov
leave
clc
dec
or
xchg
mov
icebp
pop
push
pop
jns
xchg
out
push
gs
or
jmp
push
aam
out
pop
(bad)
inc
stos
cmp
int3
dec
xchg
ja
(bad)
mov
inc
loope
sbb
inc
(bad)
mov
jo
gs
push
test
jns
pusha
ret
inc
ds
pop
call
or
ja
push
push
fldenv
jecxz
adc
outs
inc
in
in
iret
push
and
jae
rol
cmp
jnp
adc
pop
lahf
mov
(bad)
pop
sub
and
test
ins
adc
and
lods
or
pop
das
push
in
popa
dec
xchg
out
pop
(bad)
in
rcl
ins
xor
xchg
push
cmp
or
nop
bound
mov
mov
lock
lea
jmp
pop
outs
xchg
(bad)
fldcw
sub
cmp
int3
stos
pop
je
mov
push
outs
(bad)
scas
jl
xor
cmp
sbb
mov
aas
sbb
into
cmp
push
mov
dec
mov
das
es
push
clc
lods
loope
or
jbe
mov
ins
sub
mov
adc
sub
out
xchg
jb
data16
mov
mov
ds
push
sub
lock
xor
sub
mov
or
mov
pop
fisttp
pop
in
mov
xor
icebp
into
int
fisttp
pop
gs
jecxz
fild
popf
xchg
push
nop
xor
mov
push
mov
cli
add
mov
retf
or
inc
aas
xchg
scas
call
push
sbb
(bad)
loop
sub
in
mov
in
aad
pop
inc
nop
in
je
sbb
cs
ss
mov
retf
push
sbb
pop
xor
jae
mov
push
leave
aas
pop
ds
dec
adc
ret
add
cld
cmc
cmps
(bad)
jmp
mov
jno
push
mov
ret
aas
xor
das
pop
or
mov
arpl
ss
test
ficomp
inc
gs
cmp
(bad)
jecxz
cmc
imul
add
sub
mov
jmp
jne
fidivr
add
pushf
mov
popa
pop
pusha
imul
rol
and
push
push
xchg
pushf
inc
stc
(bad)
mov
pop
push
les
cmc
xchg
inc
jae
pop
dec
adc
call
movs
in
jge
into
wbinvd
data16
cmp
push
(bad)
add
mov
fsub
les
dec
push
(bad)
sub
jo
sub
js
arpl
fistp
adc
lea
movs
dec
(bad)
dec
or
ret
push
add
mov
sbb
int3
push
(bad)
out
inc
xchg
xor
xor
push
jge
xor
pusha
gs
nop
mov
inc
int
mov
hlt
(bad)
mov
sbb
jp
movs
xchg
fucomi
and
cmp
test
cmp
jmp
leave
xchg
pop
inc
lds
enter
mov
maxps
popf
retf
mov
daa
add
and
jb
aas
sti
into
test
or
popf
in
cmp
adc
je
sar
or
sbb
cbw
out
nop
std
jmp
or
mov
call
mov
repnz
into
adc
adc
popa
mov
jmp
call
nop
sub
imul
push
inc
je
daa
adc
pushf
push
loope
das
fwait
(bad)
out
(bad)
fimul
cmps
mov
fwait
mov
bound
ror
or
mov
adc
shl
and
fisttp
repnz
test
repz
fwait
sahf
inc
fdiv
push
cld
clc
mov
jb
xchg
sub
push
ds
stos
cmps
dec
or
xchg
jb
mov
js
cli
sub
imul
sbb
jp
add
mov
push
push
and
xor
int3
adc
and
lods
icebp
sub
dec
popf
out
leave
cmps
mov
sub
xchg
or
enter
ror
es
add
mov
lock
mov
test
push
cwde
out
jo
stc
xor
rol
inc
loope
push
cdq
outs
pop
lea
(bad)
dec
jae
sub
int3
mov
jns
mov
movs
xchg
mov
retf
push
push
push
(bad)
xchg
js
pop
mov
gs
repnz
xor
add
push
jmp
sub
mov
es
jg
or
push
sub
retf
(bad)
aas
pusha
cmp
mov
pop
inc
fild
mov
je
cli
cwde
rcr
pop
rcl
dec
outs
or
scas
cli
pop
les
in
aaa
out
inc
inc
inc
jnp
and
mov
push
jne
call
pop
mov
mov
aaa
mov
mov
add
jge
mov
jl
push
retf
cmp
push
add
dec
and
cmp
repz
fistp
enter
movs
call
ss
sub
cmp
push
stos
int
mov
adc
xchg
add
sbb
pushf
jmp
loopne
adc
and
shr
imul
mov
sub
mov
pop
pop
retf
ss
gs
mov
or
mov
sbb
or
hlt
adc
retf
and
lea
fisttp
mov
scas
nop
jnp
mov
mov
aam
nop
mov
(bad)
iret
jl
sbb
pusha
iret
mov
in
xchg
push
js
dec
sbb
cld
or
retf
imul
jecxz
jmp
shl
ds
jnp
outs
or
mov
cs
cmp
pop
nop
sbb
jmp
mov
retf
stc
jae
lahf
inc
adc
mov
and
push
mov
jecxz
and
add
ja
retf
cmc
movs
test
mov
jmp
ret
std
xchg
(bad)
daa
rol
jb
scas
jle
sub
and
adc
sbb
test
cmp
and
clc
mov
push
imul
rcl
fwait
cmp
in
add
retf
add
aaa
xor
xor
rcr
retf
mov
mov
fs
mov
and
mov
lahf
cmp
gs
cmp
or
clc
cmp
ins
scas
sqrtps
test
sbb
add
je
pop
(bad)
retf
stc
mov
(bad)
test
stos
arpl
int
mov
das
retf
cmps
jns
sub
xchg
push
xchg
mov
repz
icebp
mov
xor
fnstcw
or
enter
mov
fisubr
pop
cmp
call
out
jne
test
aam
sub
nop
loope
rcl
add
into
mov
sbb
in
js
xor
fst
push
(bad)
mov
and
jne
push
dec
scas
lods
not
pop
xchg
jmp
mov
mov
pop
mov
inc
push
(bad)
pop
sub
sbb
(bad)
adc
jb
push
(bad)
(bad)
aas
lahf
adc
cmp
jno
mov
test
data16
inc
jmp
out
mov
mov
retf
add
mov
push
mov
int3
adc
es
mov
mov
(bad)
cmp
enter
pop
mov
ror
mov
push
arpl
add
ror
inc
(bad)
stos
fs
cs
lods
mov
sbb
imul
or
sbb
repnz
push
sbb
scas
add
into
inc
lods
adc
(bad)
in
or
popf
fs
mov
pop
cmps
sar
test
test
ja
leave
pop
fwait
and
or
mov
mov
adc
sub
push
leave
pop
push
mov
movs
bnd
das
xchg
mov
ret
jg
xor
daa
xor
cmp
xchg
sti
mov
push
mov
xchg
es
mov
(bad)
adc
inc
jp
or
sar
mov
push
fild
mov
je
dec
mov
mov
addr16
cmc
xchg
jp
shr
lea
pop
jne
and
clc
shr
js
mov
or
cmc
jb
ja
jb
adc
out
push
shl
sbb
stos
loopne
enter
test
and
cld
fistp
lahf
or
mov
popf
and
mov
sub
cmp
ss
dec
mov
lahf
xchg
fwait
push
sahf
pop
push
cmp
mov
aam
mov
lds
xlat
lahf
(bad)
xchg
and
retf
push
jnp
xor
out
aam
push
mov
clc
mov
clc
jae
div
out
jmp
sbb
jb
sti
inc
popa
ss
lds
test
mov
mov
mov
or
mov
(bad)
out
(bad)
pop
or
push
out
(bad)
sub
outs
mov
sub
push
xchg
mov
sub
daa
mov
add
push
iret
jmp
and
pushf
pop
rcr
and
lods
sbb
scas
test
fimul
retf
pop
pop
jmp
into
pop
mov
sti
or
adc
mov
dec
movs
sub
xor
pop
xchg
pop
(bad)
pop
fisub
clc
stos
or
xor
xchg
iret
adc
mov
jb
dec
pop
rol
outs
jmp
loope
loopne
icebp
scas
xor
xor
push
pop
fidiv
push
and
outs
sar
jne
in
pop
mov
jb
mov
and
shr
add
arpl
ror
enter
push
iret
xchg
out
int
(bad)
xchg
movs
movs
jne
gs
dec
mov
icebp
inc
aas
into
add
fs
les
icebp
jmp
jnp
ins
mov
cld
fcmovnbe
icebp
mov
push
adc
xlat
mov
adc
movs
sbb
(bad)
loopne
movs
dec
fmul
sbb
jge
mov
aaa
xor
cmp
call
xchg
lahf
sub
test
mov
std
pop
(bad)
leave
jo
retf
jbe
jb
or
or
mov
mov
xor
popf
dec
(bad)
popf
cmp
jg
ds
ins
cld
mov
xlat
cmp
retf
(bad)
push
outs
dec
cmp
popf
cdq
mov
ss
inc
jg
and
mov
mov
lahf
mov
jge
aas
jmp
mov
jbe
fwait
mov
sub
sub
sahf
jne
cwde
pop
or
cmps
mov
mov
jb
push
mov
into
mov
jns
mov
lods
dec
mov
shr
and
sbb
push
ss
xchg
sbb
mov
mov
adc
pushf
popa
les
xor
cs
adc
pop
call
loope
sub
call
cmp
ror
mov
and
cmps
stc
sub
xchg
call
lods
call
dec
push
test
or
sti
xor
pop
cdq
(bad)
cld
push
aas
dec
imul
dec
test
cmps
test
pusha
push
(bad)
repz
(bad)
jmp
pop
cmp
cdq
jo
push
jmp
inc
xchg
cmp
cwde
jb
pop
fistp
sbb
movs
(bad)
call
gs
dec
pop
pop
add
aas
jmp
xchg
mov
fsub
outs
mov
dec
out
das
je
enter
loopne
sub
loopne
lock
les
leave
push
(bad)
pop
imul
mov
ret
adc
add
ss
pop
outs
mov
jmp
popf
sbb
mov
psraw
and
xor
addr16
movs
aam
sbb
mov
push
into
mov
outs
and
stc
xor
push
mov
push
mov
xlat
retf
dec
scas
in
call
movs
cmps
dec
(bad)
sub
mov
(bad)
push
inc
jne
ins
xchg
pop
mov
mov
inc
adc
mov
repz
(bad)
std
std
clc
test
xchg
mov
sbb
scas
aaa
pop
and
ret
jmp
aas
test
jb
fdivp
imul
xor
jl
xor
jns
add
(bad)
and
icebp
arpl
fld
sbb
(bad)
jns
ror
and
call
in
cmp
ins
pop
jl
outs
or
xor
adc
data16
std
cld
hlt
cmp
pop
pop
aam
or
dec
jb
lds
xchg
dec
mov
add
jns
add
fwait
xchg
jge
mov
push
xchg
lock
adc
ss
jnp
and
icebp
push
mov
lods
pop
cmc
push
mov
sub
jae
enter
iret
pusha
jbe
cmps
inc
add
xchg
jle
in
test
movs
add
je
enter
aad
mov
scas
nop
mov
mov
and
call
jle
call
mov
(bad)
icebp
xor
mov
nop
jl
pop
jp
dec
neg
push
xor
outs
outs
mov
sbb
fcom
xor
ins
pop
and
div
and
in
pop
mov
pop
xchg
in
sbb
lahf
rcl
sbb
popa
mov
test
pop
retf
aam
inc
outs
sbb
jne
push
add
cdq
(bad)
std
scas
jmp
es
jb
jl
test
xchg
jno
pusha
movs
sbb
pop
call
dec
inc
outs
mov
data16
test
mov
xor
and
loopne
inc
fisubr
xchg
sbb
mov
es
cwde
ret
push
sub
scas
jb
mov
ret
jne
loop
jne
das
aad
mov
pop
adc
enter
sahf
addr16
xor
cmp
lea
fwait
push
inc
fwait
sbb
cmp
clc
mov
cmp
jle
iret
cld
addr16
or
and
daa
adc
loope
cmp
sbb
ror
adc
sub
pop
fidiv
mov
mov
in
push
scas
int
mov
jg
mov
cmp
aad
and
mov
mov
push
cmp
mov
push
cmps
mov
call
xchg
hlt
out
or
gs
imul
xlat
ins
call
and
xchg
mov
test
xchg
cmp
in
leave
lds
ins
daa
repnz
daa
cld
rol
(bad)
mov
push
aam
test
mov
sbb
mov
mov
mov
mov
dec
cmp
test
fcomp
mov
imul
outs
jle
cmp
in
enter
pop
ins
jle
loop
hlt
sub
mov
das
xchg
or
mov
or
cmp
mov
jno
inc
lods
jmp
xchg
shl
jb
aas
or
mov
call
mov
ds
add
add
(bad)
sar
mov
cmp
mov
xchg
outs
div
mov
push
or
fisttp
jge
mov
cmc
leave
sahf
mov
jnp
mov
jnp
sub
xor
inc
outs
and
and
add
je
adc
outs
cmp
mov
mov
mov
dec
je
inc
int
fwait
or
les
movs
fidivr
mov
sub
fdivr
mov
adc
push
pusha
xchg
ins
push
ins
push
inc
and
popf
test
clc
xor
inc
fmul
popa
popf
inc
std
mov
aad
fwait
cmc
jle
pop
inc
or
mov
shl
aad
mov
enter
sbb
int3
sbb
cdq
mov
shl
int3
aaa
mov
ret
pushf
mov
jg
aas
bnd
sub
adc
jle
clc
mov
push
mov
inc
add
lods
sub
ins
arpl
inc
rol
gs
daa
lock
jecxz
xor
and
test
cs
pop
cmp
pop
add
cld
(bad)
movs
cld
xor
sub
ret
mov
ss
and
xor
sub
je
jp
dec
test
movs
push
enter
xchg
sbb
push
mov
push
mov
mov
imul
idiv
ret
xchg
add
jae
jmp
ret
sub
mov
loop
fcom
push
outs
xor
sbb
inc
icebp
ficomp
daa
push
adc
or
xor
add
or
shr
push
inc
lea
xor
scas
ror
movs
call
pop
fs
mov
ret
je
or
repnz
jl
mov
cmp
cmp
sub
jmp
xchg
fidiv
popa
inc
add
jg
clc
cmp
neg
hlt
ds
push
out
cmp
mov
and
mov
sbb
sub
sub
pop
call
mov
iret
and
inc
mov
jae
sti
sub
jno
inc
repnz
jne
shl
(bad)
adc
int
enter
inc
test
call
test
and
or
mov
ins
push
out
xchg
fdivp
push
inc
arpl
repnz
dec
call
adc
test
es
ror
pop
pusha
cmovg
push
add
jg
movs
xchg
pop
pusha
fwait
outs
inc
pop
sar
mov
jle
shl
cmp
(bad)
pop
dec
dec
jecxz
mov
aaa
mov
push
sahf
test
pop
and
pusha
xor
sbb
retf
aad
mov
or
sub
sar
(bad)
mul
lahf
and
cli
and
xchg
nop
out
add
imul
dec
mov
scas
add
mov
(bad)
cmc
sbb
cmp
adc
(bad)
in
mov
ror
mov
xchg
xor
popa
sbb
ret
arpl
jo
xchg
clc
pop
adc
aam
test
dec
js
mov
mov
out
pop
mov
mov
add
cdq
or
mov
inc
jl
(bad)
fidivr
sbb
add
push
add
lods
cmp
test
mov
shl
add
cmp
ret
mov
add
fmul
lods
jmp
add
cmc
int3
es
je
jge
inc
add
lods
or
movs
xor
push
sub
push
push
jmp
out
jns
inc
inc
jnp
mul
adc
lods
icebp
jecxz
mov
aad
xchg
cmps
jbe
js
cdq
gs
fs
shl
pop
call
dec
icebp
rol
out
sti
push
push
push
ja
cmps
sbb
test
dec
fwait
das
jmp
sbb
std
inc
inc
xlat
loop
cmp
xchg
jno
inc
mov
sbb
shr
pusha
test
(bad)
mov
add
push
xchg
jg
pop
mov
int3
jmp
fucom
ret
(bad)
mov
mov
out
enter
dec
mov
iret
in
repz
jb
leave
xor
or
bnd
fwait
stos
in
imul
push
iret
cwde
jle
addr16
adc
add
(bad)
fimul
and
jg
out
push
pop
ins
popf
dec
adc
mov
(bad)
lods
sbb
pop
jo
dec
mov
rcl
cld
inc
add
aaa
retf
xor
fdivr
movs
stos
or
ja
cld
xchg
mov
dec
mov
jp
scas
ret
cld
dec
popf
sbb
inc
mov
sbb
dec
sbb
fst
add
adc
in
lds
lods
sbb
push
xchg
stc
sub
cmps
daa
fidivr
dec
(bad)
(bad)
inc
shr
cmp
sbb
pushf
push
das
inc
cld
cmc
lods
popa
and
xchg
and
imul
push
sti
and
sbb
push
iret
mov
xor
sbb
dec
sti
sahf
rol
cmp
dec
popa
jp
mov
xchg
jl
cmc
lahf
xor
mov
test
lock
adc
in
add
iret
mov
fcom
repz
and
push
scas
aad
pop
xor
mov
or
add
jbe
add
xchg
mov
push
ja
dec
clc
int
add
push
dec
jg
test
xchg
xor
es
aam
movs
sahf
dec
loopne
or
add
mov
fwait
outs
pop
imul
arpl
(bad)
and
loop
rcr
ds
push
jo
mov
inc
not
mov
(bad)
int3
shl
pop
in
push
cmp
mov
leave
rcr
or
arpl
fs
adc
hlt
into
mov
fwait
fs
sub
aad
pushf
sbb
xchg
jbe
push
mov
stc
repz
mov
mov
mov
cmp
dec
xchg
pop
cmp
xchg
push
(bad)
dec
dec
clc
jno
scas
in
push
pop
xchg
push
xor
and
push
and
mov
push
fwait
mov
(bad)
mov
mov
rcl
xor
out
dec
cwde
dec
mov
rcl
fild
mov
adc
cmp
fidiv
fisttp
inc
ficom
pop
xchg
dec
jns
(bad)
clc
mov
cmp
lock
test
mov
fwait
pop
loopne
and
scas
test
lea
sar
loopne
or
add
push
aam
iret
xchg
or
sub
add
push
add
aas
push
mov
cmp
push
xchg
jl
pop
enter
into
sub
or
nop
mov
adc
inc
cmps
ins
(bad)
shr
lods
cdq
jns
es
fnsave
nop
ins
imul
imul
pop
ss
add
cld
(bad)
jne
js
sbb
pop
test
loop
push
fldcw
retf
call
sbb
cs
cs
jmp
xor
jb
fisttp
xlat
out
pop
jns
adc
pop
mov
push
fimul
pop
lock
(bad)
mov
sti
pop
inc
(bad)
cwde
push
cld
and
popf
mov
lods
lods
xor
scas
test
lahf
cwde
scas
lahf
movs
imul
and
(bad)
lods
das
xlat
(bad)
lock
adc
cmp
call
lods
mov
std
in
sbb
test
imul
call
mov
adc
mov
aaa
xchg
scas
push
cld
jmp
xchg
movs
into
add
xchg
adc
sar
cmp
fwait
(bad)
fucomip
fsubrp
gs
data16
ins
mov
fisttp
inc
inc
int
jo
imul
mov
push
pop
cmp
mov
xor
mov
cmps
sbb
push
jmp
adc
daa
js
dec
repz
out
mov
hlt
xor
call
sti
ins
outs
popf
lods
(bad)
(bad)
mul
mov
xchg
int3
lods
mov
mov
mov
or
mov
dec
sub
popa
loopne
sbb
mov
div
inc
add
stos
dec
pop
inc
jl
cmp
sub
mov
mov
jmp
enter
push
enter
icebp
ins
pop
mov
or
and
add
(bad)
or
jmp
popa
fcomp
mov
enter
sub
loopne
dec
fcmovne
xchg
in
iret
and
lods
fsubr
mov
or
and
dec
(bad)
mov
or
in
or
add
idiv
inc
loop
cmp
fsubp
popa
add
pop
or
push
xor
push
mov
pop
sub
sbb
or
lahf
adc
rcr
arpl
loop
test
fistp
lea
or
out
and
cmps
inc
test
mov
dec
jmp
clc
dec
inc
cmp
neg
fsub
inc
pop
and
jp
neg
sub
test
cmp
and
stos
cwde
rol
fisttp
cmp
es
repnz
push
fwait
sub
jle
mov
cmp
push
jmp
fdiv
jnp
sub
add
and
retf
or
outs
add
call
xchg
xchg
dec
inc
lds
das
pop
mov
xchg
ret
aas
fbld
cwde
sahf
scas
(bad)
mov
pushf
test
fistp
sbb
leave
mov
xor
xchg
aam
pop
fwait
push
mov
shr
addr16
call
fstp
imul
lods
adc
add
push
out
mov
dec
ja
cdq
pop
dec
sbb
inc
lods
or
sub
sub
or
dec
jmp
jno
repnz
(bad)
ret
push
and
mov
mov
jle
or
ret
jp
and
hlt
xchg
es
ret
mov
popa
add
inc
push
lea
cmp
sub
test
int
mov
shl
mov
movs
xchg
jg
xchg
cmp
outs
xor
test
fs
mov
cmp
dec
xchg
push
dec
jns
scas
pop
mov
sbb
fbstp
lea
push
(bad)
repz
loopne
mov
sti
xlat
dec
out
mov
dec
imul
cmp
and
sub
popa
aas
push
and
mov
and
xchg
test
mov
sbb
jnp
sar
lahf
sub
mov
movs
xchg
push
xchg
mov
imul
arpl
adc
fs
stc
stc
clc
inc
xchg
dec
jmp
enter
jnp
sbb
mov
push
jle
mov
loopne
stc
inc
sub
xchg
adc
imul
ret
jecxz
repz
popf
pusha
jno
fwait
test
sar
and
retf
mov
scas
xchg
js
jp
es
add
mov
test
mov
sahf
push
pop
adc
and
add
out
std
mov
cdq
xor
out
mov
jae
pop
cli
ret
pop
mov
or
add
mov
mov
jbe
xchg
xor
fwait
jno
outs
xchg
sub
xor
stc
(bad)
iret
cs
ss
retf
sub
pop
jmp
ins
hlt
jb
fs
add
in
in
push
inc
cs
xor
or
jae
daa
iret
push
xchg
xlat
fwait
ins
je
ins
and
es
or
dec
and
push
pop
or
cmp
pushf
lods
mov
or
popa
gs
or
(bad)
cmp
mov
and
and
push
js
(bad)
das
aad
test
aas
jno
retf
aas
loopne
js
leave
add
call
pop
ficomp
test
cmp
outs
mov
icebp
mov
mov
in
mov
push
cmps
xchg
push
(bad)
sahf
test
jae
pop
xor
movs
dec
retf
out
sub
cmp
add
adc
mov
in
pop
push
ret
or
adc
loop
inc
push
(bad)
jmp
dec
not
mov
leave
fwait
inc
iret
je
aad
mul
jae
xchg
ja
rcr
push
pop
outs
inc
jne
outs
inc
cmp
or
outs
test
or
add
fwait
xchg
jecxz
test
add
and
daa
jge
mov
dec
or
stos
leave
lock
out
aaa
push
mov
xor
dec
sbb
retf
or
add
in
fidivr
push
pop
test
add
pop
xchg
cmp
push
cmp
loope
push
in
(bad)
pop
mov
adc
in
push
frstor
mov
mov
fcmovnbe
pushf
pop
pop
(bad)
dec
dec
retf
adc
loop
mov
mov
mov
ficomp
pop
nop
push
mov
ds
mov
cmp
dec
(bad)
xchg
test
aas
add
sub
jp
stc
add
push
sbb
jne
fs
push
sub
rcl
adc
xchg
shr
mov
(bad)
shl
pop
mov
mov
dec
pop
push
ret
mov
cmp
bound
ret
xchg
inc
cmps
sub
test
mov
mov
std
pop
pop
imul
mov
jae
xor
xchg
dec
rcr
ret
cdq
add
or
or
aad
in
push
push
bound
mov
fnstenv
sub
fisubr
mov
xor
out
jb
sub
imul
stos
out
pop
pop
nop
pushf
mov
fs
wrmsr
icebp
in
adc
dec
cmp
imul
pop
idiv
aaa
(bad)
add
sub
push
das
and
shl
inc
push
dec
xchg
in
cmp
call
(bad)
(bad)
aaa
shl
push
lahf
daa
mov
mov
jl
add
and
popa
test
or
mov
lahf
cdq
mov
xlat
inc
repnz
adc
xor
retf
std
jmp
aas
fisubr
aaa
mov
out
sub
sbb
and
cmp
add
retf
aas
and
popa
mov
inc
sbb
sbb
pop
aas
sub
outs
and
pop
fcom
(bad)
rol
iret
xchg
and
xchg
sub
mov
cmp
nop
js
adc
movs
adc
and
cdq
xchg
lods
out
sub
or
add
(bad)
sbb
pop
pop
mov
in
xchg
xor
sahf
sbb
mov
sbb
js
inc
xor
scas
lods
inc
add
jg
bound
sbb
inc
mov
inc
jg
jb
mov
bound
ja
outs
loopne
movs
jb
or
pop
inc
clc
inc
or
ja
(bad)
ds
jbe
xor
std
pop
scas
and
(bad)
iret
xor
fwait
jmp
add
mov
dec
mov
in
loope
and
in
popa
pop
add
daa
mov
mov
mov
out
cmc
xor
inc
xor
fidiv
jb
popa
lods
jns
call
in
cmps
or
pushf
adc
retf
popf
fs
jnp
dec
cmps
cdq
sub
mov
in
inc
xchg
mov
dec
je
(bad)
push
dec
pop
jnp
icebp
mov
(bad)
cmp
jbe
movs
les
push
lock
dec
ins
jmp
int
xchg
sti
movups
leave
mov
mov
(bad)
add
(bad)
fstp
push
dec
lods
xchg
sti
js
dec
les
cmp
jne
cmp
fwait
int
dec
mov
cmp
pop
mov
xchg
push
mov
movs
xor
call
imul
mov
lods
add
mov
add
jp
xchg
ret
fsubr
push
in
inc
add
inc
(bad)
ins
cmps
pop
or
dec
jne
out
add
lods
sub
sti
leave
push
lea
mov
loop
nop
pushf
xor
mov
inc
dec
int3
call
jl
dec
nop
(bad)
xor
cli
jae
mov
jbe
mov
repnz
push
ds
std
dec
sub
add
cmp
in
pop
inc
jne
adc
cwde
movs
or
mov
mov
bound
xor
aad
aaa
stos
xor
ins
sbb
test
lahf
mov
lds
call
or
sbb
and
imul
cld
clc
mov
or
sub
and
imul
or
sbb
(bad)
daa
je
dec
ret
inc
bound
mov
jecxz
mov
lahf
loopne
ja
nop
into
(bad)
fnsave
shl
mov
add
or
push
xor
mov
sub
call
push
xchg
add
stc
mov
cmps
sub
sahf
mov
mov
jae
pop
xor
mov
aaa
je
add
(bad)
(bad)
clc
loop
mov
mov
push
in
pslld
repz
push
les
sub
std
mov
or
push
mov
fidivr
adc
rol
xlat
push
fst
fisttp
(bad)
out
mov
xor
mov
(bad)
ds
push
jmp
jnp
jmp
ss
ret
mov
pop
enter
dec
push
ss
test
pop
sub
lods
js
out
lea
int3
xchg
ja
inc
repnz
adc
mov
sbb
test
sub
pop
adc
mov
push
cwde
addr16
fcom
and
jno
sar
push
and
js
xchg
add
out
les
pop
mov
ins
test
jno
jae
pop
mov
or
movs
mov
inc
xchg
dec
in
inc
lods
pop
sbb
idiv
loop
add
dec
sahf
add
sbb
addr16
sbb
(bad)
leave
pop
mov
js
shr
inc
sbb
pop
imul
mov
mov
jne
icebp
sahf
popa
jnp
js
or
or
push
dec
pop
pop
cwde
mov
sub
mov
fcmovnbe
fld
push
shl
inc
add
test
rcr
add
cmp
cwde
or
stc
aaa
push
fsubr
and
cmp
and
repnz
arpl
cld
mov
sbb
jp
cmp
addr16
cdq
cmps
push
imul
aaa
xor
cs
or
retf
jmp
out
cmp
adc
lahf
cmp
out
mov
int
cmp
pusha
jnp
cmc
lock
ins
mov
sub
ss
xchg
pop
sub
pop
sub
loop
dec
and
fs
rcl
dec
(bad)
cmp
push
mov
fidiv
not
loope
pop
push
ss
cmp
les
scas
retf
repz
ja
rep
mov
add
add
mov
xlat
aas
sar
nop
in
shl
fst
sub
xor
retf
dec
cmp
out
in
and
es
cld
es
je
or
xor
push
xor
fdivr
push
pop
popa
sbb
or
mov
es
xchg
adc
nop
inc
popa
jno
rcl
enter
das
xchg
mov
cwde
outs
pop
aam
push
push
mov
adc
(bad)
mov
ret
or
xor
sub
pop
push
outs
dec
cld
data16
(bad)
jmp
popa
push
jns
cmp
(bad)
out
rol
arpl
(bad)
sbb
xor
push
cwde
adc
sub
lahf
cmp
imul
int
cmpxchg
pop
fldcw
in
jmp
call
xor
xchg
dec
jl
sub
daa
dec
(bad)
jnp
xchg
fdivr
cwde
jae
xchg
lods
popa
(bad)
aas
jns
daa
dec
mov
bound
sub
mov
or
enter
rol
push
mov
mov
nop
retf
cs
fmul
(bad)
xor
mov
mov
cmp
into
fisub
vmulsd
adc
shl
mov
mov
xchg
xor
hlt
ror
jge
nop
mov
fld
sbb
ds
std
push
or
and
jge
test
adc
inc
mov
and
cs
(bad)
stos
ins
ss
pop
inc
hlt
test
loop
cmp
repz
int
push
xchg
jae
(bad)
aam
sbb
push
inc
pop
mov
sub
xor
stc
sbb
ins
mov
cmp
or
or
cmc
mov
std
hlt
or
xchg
clc
rep
xlat
clc
neg
cmp
pusha
cmp
cmps
fadd
and
in
hlt
loopne
cmps
jmp
jg
adc
push
(bad)
test
cmp
lock
call
scas
inc
dec
lods
adc
sti
fidiv
push
pop
inc
sbb
sub
jb
fwait
ins
(bad)
push
xchg
lods
jae
pop
mov
repnz
int
pop
inc
mov
je
sub
ret
loope
xor
fdiv
jmp
adc
scas
adc
or
add
jl
ds
xor
and
inc
cdq
xor
xchg
dec
sahf
add
fsubr
cmps
xchg
(bad)
jb
jne
daa
sbb
nop
jecxz
movs
repnz
repz
add
pop
dec
call
in
cdq
and
xchg
xchg
mul
pop
cmp
hlt
(bad)
sbb
mov
(bad)
and
dec
mov
mov
and
add
mov
in
cmp
into
cmp
cmp
lods
lods
adc
jbe
rcl
and
push
or
add
push
inc
pop
xchg
cmps
neg
call
retf
jo
jecxz
cmp
mov
pop
push
daa
push
sahf
mov
jmp
movs
jmp
ror
jge
or
call
or
xchg
add
hlt
mov
cmps
cmp
mov
mov
jne
sar
loop
shr
je
shr
aad
add
and
push
xchg
pop
mov
and
cmp
jb
fld
loop
(bad)
sub
inc
push
xor
daa
jge
pop
cli
imul
or
and
add
loopne
and
call
ror
mov
inc
pop
outs
mov
(bad)
sbb
mov
clc
pop
popa
dec
outs
push
cmp
and
cmp
(bad)
imul
outs
mov
test
dec
sub
adc
xor
sub
sbb
frstor
pop
jp
imul
sbb
add
jmp
adc
dec
xchg
push
(bad)
or
enter
fstp
retf
iret
cmps
je
push
push
out
mov
outs
jo
dec
mov
xor
loop
jmp
mov
fcmovne
leave
sar
sub
dec
ret
adc
ja
mov
ret
cmp
dec
mov
mov
jp
(bad)
xor
stc
sbb
leave
scas
mov
cmps
mov
mov
mov
xor
and
mov
xor
lods
lea
pop
cmps
iret
fiadd
jp
sbb
fwait
ret
icebp
add
mov
je
or
add
fnsave
inc
ret
fs
out
pop
push
or
mov
xchg
add
pop
sbb
retf
add
xor
sub
cmp
addr16
cmps
mov
jnp
pop
xchg
mov
inc
scas
jno
xor
mov
mul
xlat
jmp
or
shl
pop
(bad)
mov
in
lock
lock
inc
and
mov
fcomi
adc
inc
sahf
inc
jb
daa
jl
jle
mov
ins
jge
fisub
popf
xor
adc
pop
and
pop
nop
or
cmps
popf
imul
add
add
inc
or
dec
leave
sub
dec
fsub
loope
inc
fdivrp
xor
bound
add
nop
dec
stos
adc
fwait
adc
or
mov
cli
jle
fwait
in
jg
rol
cmp
fidiv
xor
iret
fistp
jo
ss
mov
ja
or
sbb
dec
push
scas
aas
sahf
xor
mov
pop
jbe
push
lea
pop
out
pop
ficomp
inc
mov
push
cmp
cmp
test
mov
or
jmp
call
stc
inc
cmp
xor
aad
loop
push
mov
lea
pop
movs
cli
out
jmp
(bad)
sahf
fld
test
pop
pop
out
mov
arpl
arpl
outs
shl
push
mov
mov
test
jp
sbb
rol
push
adc
rcl
out
inc
inc
addr16
je
mov
mov
mov
fnstenv
inc
mov
cmp
ins
xor
adc
sbb
jo
add
push
xchg
push
mov
cdq
push
sub
mov
imul
pop
inc
xchg
dec
sbb
adc
mov
push
out
das
jnp
fisubr
test
mov
jl
ficom
sahf
mov
cdq
mov
loop
and
mov
sbb
mov
hlt
xor
sbb
movs
lods
imul
cmp
ja
sub
fbstp
add
jmp
jno
sbb
fimul
std
aam
adc
push
cld
jnp
push
sbb
int
aas
or
les
stc
sub
movs
addr16
mov
pop
call
popf
mov
pop
jmp
loop
sbb
stos
aad
cmc
(bad)
xchg
push
out
mov
fisttp
neg
jnp
mov
(bad)
mov
xchg
dec
cmps
fldcw
mov
icebp
aaa
rol
pop
bound
xor
cwde
sbb
cmp
dec
mov
mov
or
pop
ror
test
sub
jge
jae
cs
js
push
sbb
aas
push
data16
mov
add
pop
mov
cdq
fild
dec
xchg
sbb
mov
xchg
sbb
sahf
jns
in
js
stos
rcl
push
movs
xor
sbb
dec
xor
lahf
imul
xchg
dec
push
xor
xor
je
call
jno
pushf
ins
adc
adc
sub
or
jl
xchg
jno
div
sub
dec
mov
jecxz
adc
fldcw
jecxz
inc
add
ret
repz
sub
ins
pop
pop
int
mov
dec
mov
sbb
fdiv
inc
ja
pop
call
xor
in
mov
rcr
jge
es
cmps
push
shr
das
sbb
push
cmps
sbb
pop
jbe
inc
mov
xor
pop
outs
jge
bound
xchg
aas
mov
adc
call
icebp
dec
ins
mov
gs
xor
cmp
test
fnsave
fist
out
cmp
dec
pop
adc
call
inc
fmul
sub
sub
fnsave
ss
xor
fistp
xlat
iret
mov
push
cwde
shr
sbb
into
pop
icebp
mov
mov
data16
ja
sbb
pop
test
jl
int3
pop
sub
das
cmp
pop
and
(bad)
xchg
adc
mov
dec
daa
xchg
mov
push
(bad)
push
cmp
cmps
and
and
ins
push
jg
push
add
ss
jmp
and
loope
leave
mov
xchg
(bad)
clc
adc
mov
(bad)
stc
call
aas
sbb
out
test
(bad)
int
sub
(bad)
mov
dec
in
cs
icebp
push
xchg
dec
push
jbe
cmp
xchg
mov
in
ret
mov
mov
inc
jg
aas
jecxz
jl
mov
sahf
lds
retf
js
mov
fisub
pop
and
arpl
ins
popa
scas
call
jge
nop
jl
mov
hlt
jb
sbb
jns
or
lods
adc
frstor
mov
and
sbb
(bad)
ins
mov
pop
fidiv
movs
lahf
stos
push
fucomp
sbb
cli
shl
mov
sub
fistp
fldcw
add
imul
and
push
pop
or
das
lds
outs
xchg
mov
add
jle
xchg
add
inc
into
push
aas
sti
push
les
sbb
mov
stos
add
mov
repz
ror
xchg
(bad)
stos
sub
pop
loope
push
lods
push
and
mov
cld
cmp
add
rol
xor
xor
xor
sbb
sub
push
lds
mov
xor
and
inc
jg
jmp
dec
(bad)
in
mov
lods
bound
xchg
bound
push
dec
jb
sub
push
cmc
scas
adc
js
cmc
sbb
mov
and
outs
adc
add
jnp
sub
daa
jmp
hlt
sar
cli
es
out
loopne
loopne
int3
mov
shl
fld
mov
add
jecxz
mov
xor
stos
inc
(bad)
stos
imul
(bad)
fsub
adc
push
xor
(bad)
sahf
loopne
fld
jns
pusha
cmp
pusha
sbb
imul
(bad)
test
cmp
out
push
jg
jae
das
je
cmp
fstp
cdq
mov
enter
in
pop
out
jnp
sti
in
outs
jo
adc
add
mov
pop
cmp
add
push
outs
mov
sub
jns
fistp
and
gs
pop
or
mov
push
cld
add
jne
stos
jno
xor
push
and
ds
push
aas
mov
not
or
push
or
jle
pusha
push
aam
retf
pop
jns
(bad)
fst
hlt
je
ret
js
(bad)
xchg
jo
call
pop
lods
mov
test
jnp
jge
push
(bad)
aad
adc
mov
loop
push
fldenv
mov
call
inc
mov
daa
mov
fcomip
outs
call
sbb
pusha
or
add
arpl
push
dec
mov
retf
cmp
movs
push
sahf
(bad)
jb
jl
ss
xor
jne
dec
stc
ins
cmp
outs
iret
mov
push
pusha
gs
sar
cs
lods
dec
and
xlat
test
rcl
pop
retf
test
mov
ss
push
sbb
les
jl
mov
rcl
xor
push
popf
adc
mov
sub
add
mov
pop
in
retf
or
shl
xchg
push
(bad)
xor
ret
mov
xchg
int
out
fild
mov
xchg
push
mov
mov
cmps
ds
adc
or
in
(bad)
mov
push
mov
xchg
jo
imul
into
add
lea
and
fdiv
or
cs
xor
(bad)
sti
push
(bad)
add
xchg
imul
movs
jns
jne
cwde
retf
fnstenv
enter
or
imul
out
mov
pop
je
call
mov
add
cmp
jmp
popf
movs
imul
cdq
stos
popf
push
jmp
stos
cmp
daa
adc
cmp
test
cmp
xor
cmp
out
xchg
out
les
js
adc
push
xchg
int3
push
sbb
cwde
stos
and
retf
scas
jne
cmc
push
dec
jmp
push
push
and
mov
out
test
popf
and
clc
push
fcomp
sub
stc
cwde
pop
adc
bound
rcr
repnz
sub
jo
jno
jne
mov
push
dec
in
pop
in
mov
js
jl
xor
add
loopne
pop
sub
xor
push
push
xor
or
xchg
cmps
arpl
popf
or
fild
jecxz
dec
dec
aad
xchg
test
movs
inc
out
jmp
int3
xchg
into
mov
mov
popf
cmps
retf
or
add
cmc
pop
movs
pop
ins
ror
adc
sub
push
jg
mov
nop
mov
xor
iret
jo
sbb
push
retf
sub
fdiv
mul
xor
push
mov
ds
data16
pusha
pop
lahf
(bad)
sbb
in
clc
sbb
xchg
xchg
xchg
jge
call
sub
jbe
movs
and
ds
sti
mov
jp
mov
fwait
mov
ret
push
or
ins
(bad)
in
ss
inc
aad
sbb
pop
add
fstp
aaa
push
and
jl
mov
mov
jae
or
push
aad
and
aaa
jmp
mov
or
mov
movs
mov
cmp
repnz
push
(bad)
movs
aam
rol
xchg
xchg
std
jb
jo
pop
in
test
add
movs
cmp
push
imul
(bad)
jnp
and
fist
pop
jno
loopne
in
loopne
mov
addr16
test
xchg
jl
lods
fisub
push
or
ret
retf
jno
movs
inc
mov
mov
push
add
cmp
imul
test
test
cs
inc
sahf
jb
pop
xor
stos
jno
imul
pop
bound
mov
cmp
rcr
ficomp
add
pop
js
sub
scas
aam
fsub
sar
pop
push
mov
inc
mov
mov
fsubr
xchg
das
std
lods
or
jl
or
loopne
sub
dec
pop
retf
mov
add
jmp
rol
jbe
hlt
test
cmp
(bad)
mov
mov
dec
cmp
sar
pop
jge
les
fcomp
nop
arpl
push
aam
outs
fucomi
dec
or
ret
out
and
push
mov
cmp
add
out
mov
leave
or
mov
call
dec
jne
clc
aad
hlt
add
mov
scas
cmp
je
jle
xor
add
add
inc
sbb
sub
call
pop
or
imul
pop
(bad)
fwait
dec
aaa
push
addr16
out
xor
sbb
jp
stos
iret
mov
jcxz
cwde
imul
add
xchg
or
ins
add
jmp
jnp
cld
loop
and
pop
inc
ins
xchg
or
push
bound
mov
cli
shr
ss
sub
data16
mov
pusha
or
lds
popf
mov
dec
mov
jo
pop
fadd
mov
jmp
ins
push
dec
pushf
mov
sbb
dec
add
cmp
outs
icebp
dec
(bad)
(bad)
stc
pusha
push
jmp
sub
icebp
push
jnp
inc
in
xor
dec
lds
sahf
cdq
icebp
pop
cmp
cmp
inc
lds
es
and
mov
pop
gs
in
cli
dec
xchg
pop
call
mov
es
jge
or
cli
movs
aaa
rol
mov
fiadd
jmp
ja
scas
repnz
xor
les
adc
imul
and
int
inc
mov
outs
addr16
add
adc
pop
enter
or
test
retf
inc
mov
clc
xor
or
clc
mov
sbb
fnsetpm(287
sbb
iret
mov
pusha
mov
push
mov
mov
xor
stos
ror
push
retf
sub
add
cmp
or
push
dec
and
sahf
add
mov
call
dec
call
pusha
jecxz
cmp
adc
pushf
jmp
repz
dec
clc
mov
cs
fisubr
adc
(bad)
fdiv
push
test
dec
mov
xlat
lea
imul
or
xchg
ins
jge
pop
push
add
ret
inc
ins
xor
fidiv
ja
(bad)
out
mov
movs
mov
add
scas
out
cmc
cmc
dec
jl
mov
mov
std
shr
ss
push
sub
in
test
in
lds
add
scas
out
sub
(bad)
adc
ja
push
jge
fmul
mov
dec
sub
pop
mov
or
rol
pop
add
add
repz
mov
test
bound
xor
(bad)
data16
(bad)
dec
inc
movs
mov
inc
rcr
loop
pop
cmp
dec
cmp
std
sub
loopne
sbb
cli
mov
or
inc
out
and
xor
cs
mov
xchg
pop
jbe
ret
test
add
fs
shl
jp
test
movs
(bad)
imul
xor
dec
or
shr
std
and
push
dec
addr16
imul
inc
add
aas
mov
lea
icebp
lahf
adc
xchg
sti
test
test
arpl
retf
sbb
sbb
in
repnz
and
scas
arpl
push
cmp
stos
or
and
and
mov
sbb
mov
and
push
pop
xor
mov
xchg
jb
and
sti
lea
push
hlt
jp
ds
or
imul
cmc
out
xchg
mov
and
in
pusha
dec
pop
imul
sub
and
hlt
mov
je
ret
or
test
pop
mov
lock
into
inc
or
sbb
cld
imul
neg
cs
loope
mov
cmp
push
popf
mov
sbb
shl
(bad)
mov
mov
push
(bad)
js
das
xchg
push
jne
in
nop
sahf
xchg
es
xor
rcl
in
add
pusha
jecxz
mov
fwait
test
pop
not
sbb
in
(bad)
fist
xchg
mov
adc
into
pop
jp
inc
cmp
pushf
mov
mov
lds
jle
dec
add
xchg
ret
ds
daa
or
mov
push
inc
scas
mov
dec
out
pop
mov
sub
sub
cld
inc
in
clc
mov
adc
xor
sub
jge
mov
ror
or
xchg
test
fsubr
stos
pop
shr
sahf
mov
test
inc
mov
mov
jns
jl
dec
enter
hlt
sbb
xor
jp
das
xor
jge
je
rcr
sub
xor
push
rcr
cmp
sbb
fwait
cmp
stos
repnz
push
bound
stos
cwde
daa
(bad)
cdq
jmp
or
or
and
mov
add
sub
loop
ins
(bad)
stos
dec
push
pop
loopne
test
xchg
push
lds
retf
adc
mov
test
ss
pop
mov
out
icebp
mov
mov
xchg
jmp
clc
stos
(bad)
call
mov
cmp
pop
fwait
adc
jns
jle
dec
lahf
(bad)
scas
in
push
cld
dec
cmc
pop
lds
imul
mov
sbb
das
test
jmp
ds
sti
jae
sahf
adc
dec
mov
test
arpl
mov
pop
xchg
stos
fcmovbe
imul
repnz
fsubr
clc
in
sub
sub
inc
loope
pop
sbb
repz
outs
ror
jp
mul
push
xchg
push
mov
in
in
cmps
(bad)
cs
repz
outs
idiv
fxtract
cmp
mov
icebp
xchg
jne
add
jae
fadd
mov
add
push
jmp
outs
push
sub
test
add
or
pop
out
fmul
scas
jb
ins
out
scas
(bad)
xlat
mov
dec
mov
inc
test
adc
mov
lds
jge
push
iret
mov
inc
stos
stos
jle
push
mov
pop
push
test
mov
rol
sbb
push
jmp
add
(bad)
cmp
dec
das
popa
lods
fs
cmp
jo
pop
pop
out
out
ficomp
jl
sbb
fsubrp
popa
push
shl
repnz
pushf
xchg
bound
fadd
inc
mov
out
mov
sub
xchg
cmp
mov
int
or
outs
xchg
inc
jmp
dec
mov
push
loop
out
lds
jmp
add
lods
stc
int3
fnsave
push
std
sub
pop
mov
jns
int
popf
movs
in
sub
ins
je
pushf
add
pop
sbb
xor
fstp
inc
loope
(bad)
shr
jmp
xlat
push
pop
out
test
or
push
cmps
in
cmp
call
lods
imul
(bad)
cmp
mov
sbb
mov
aas
(bad)
cli
in
xchg
repz
scas
push
push
xchg
stos
in
push
jl
je
scas
xor
cmp
add
inc
cmp
add
jb
in
push
adc
fdivr
sub
xchg
dec
xor
(bad)
ja
mov
test
jge
or
out
xor
xchg
jl
mov
dec
sbb
sbb
mov
out
push
pop
jp
pop
push
outs
hlt
das
mov
iret
push
jl
mov
mov
fdivr
ret
mov
jle
xor
add
sub
xor
xchg
cmps
rcl
stos
dec
cdq
ret
xchg
test
or
xchg
(bad)
gs
sub
push
fwait
fwait
adc
cmc
or
or
ftst
in
popa
mov
jae
icebp
ss
jp
mov
data16
mov
fisubr
push
xchg
ins
xor
cmp
pop
or
(bad)
in
bnd
sbb
sub
fadd
cld
scas
aam
gs
fmul
push
cmp
dec
imul
std
cmps
xor
out
pop
mov
les
inc
cmp
fs
les
lahf
(bad)
ins
mov
fimul
pop
or
jp
mov
push
call
aaa
lea
cmp
mov
es
fcomip
pop
jae
push
cmp
or
dec
call
out
dec
sub
enter
jae
jmp
pop
pop
mov
inc
daa
sub
in
xchg
dec
inc
jmp
jecxz
ins
fs
in
movs
jg
mov
sti
mov
fmul
aad
or
cmp
sahf
(bad)
cld
adc
stc
out
jecxz
mov
and
pop
add
jnp
inc
imul
ds
leave
mov
adc
jg
arpl
repnz
xchg
stc
push
jge
pop
adc
leave
sub
or
mov
imul
cmp
call
pop
neg
stc
mov
inc
ja
pop
mov
fistp
je
in
mov
cmp
push
xchg
push
jne
stc
retf
pop
mov
pop
pusha
xor
ret
xor
or
call
test
dec
pop
cmp
mov
push
mov
ins
call
or
call
call
inc
or
popa
xchg
(bad)
xchg
mov
data16
ins
fsubr
clc
or
mov
xor
jmp
dec
hlt
lods
fsubr
call
int3
cld
test
bound
or
cdq
scas
movd
arpl
imul
stos
and
loop
cli
(bad)
cmp
jne
adc
rcr
ds
cli
retf
js
mov
ret
xchg
pop
ror
mov
dec
add
fild
add
mov
push
and
push
dec
(bad)
in
dec
lock
gs
xlat
cmps
mov
add
or
sub
mov
cdq
in
call
or
cld
or
scas
add
sub
add
movs
mov
mov
mov
or
(bad)
and
sub
das
mov
mov
add
or
jle
popa
loope
jns
sub
cmp
mov
mov
jge
sbb
out
mov
inc
rcpps
xor
movs
mov
jmp
push
jp
cs
iret
mov
imul
mov
rcl
sbb
shr
int
fsubr
nop
das
or
pop
inc
cmp
inc
and
xchg
(bad)
icebp
std
jecxz
cld
retf
and
in
shl
mov
cmp
sbb
add
pop
cmp
cmp
fsub
in
xchg
int3
xchg
add
adc
adc
lds
dec
cmp
ds
xchg
rol
dec
push
mov
aam
sub
clc
push
inc
add
sti
mov
cmp
mov
int
and
div
lahf
les
cmp
mov
or
pop
push
sbb
jle
ret
xor
enter
stc
lods
cs
sar
push
xchg
test
and
mov
mov
push
in
push
cmp
je
fs
jp
add
push
pop
ins
mov
sbb
jbe
or
cmp
jl
adc
push
adc
cmps
inc
adc
or
or
sysexit
adc
jmp
add
jb
mov
cmp
inc
pop
pop
cdq
mov
mov
sub
add
in
xor
mov
mov
mov
sbb
adc
mov
fadd
xchg
je
jmp
int
jge
(bad)
mov
add
sbb
mov
aad
lock
repnz
mov
push
and
stos
or
mov
(bad)
xchg
xor
push
jp
pop
mov
movs
adc
(bad)
xchg
fimul
scas
mov
push
inc
jno
jmp
xor
je
fild
ins
(bad)
cmp
pop
mov
dec
jne
mov
cdq
mov
push
push
loop
cmp
bound
lods
mov
shl
imul
sbb
movs
sar
test
in
and
cs
cli
or
rol
add
ja
sub
jnp
xor
shl
add
aas
or
cmps
ja
nop
sub
cmp
xor
push
pop
push
cmp
lods
mov
jbe
in
test
adc
pop
imul
ror
push
mov
nop
imul
(bad)
call
ss
rcl
test
cmp
add
add
or
lahf
mov
test
xchg
aaa
xlat
pushf
jne
or
sub
in
mov
daa
mov
pop
add
inc
test
and
jle
mov
aas
adc
jl
add
addr16
lds
sar
or
add
adc
jbe
xchg
sahf
ins
scas
inc
jl
and
movs
sti
ds
std
in
inc
movs
xchg
jg
mov
xchg
popa
in
sar
mov
sbb
jae
sbb
std
push
dec
int
ins
sub
mov
sti
movs
(bad)
mov
dec
sub
mov
and
out
leave
shr
mov
data16
push
in
pop
shl
mul
mov
sbb
xchg
in
cmp
sub
xor
pop
mov
mov
cmp
xor
mov
fistp
sub
repz
stos
pop
xor
dec
add
and
jl
adc
stc
push
sbb
xchg
push
in
mov
mov
fwait
nop
in
in
sbb
lods
sub
sar
cmp
pop
sbb
repnz
xor
in
in
adc
push
mov
fild
jae
dec
retf
cdq
enter
inc
push
push
sbb
push
pop
mov
cmp
mov
call
rcr
and
out
and
adc
pop
add
cdq
stos
fnstenv
mov
popf
and
push
(bad)
ja
(bad)
jmp
pop
push
iretw
mov
push
mov
pop
bound
shl
movs
xor
mov
pop
ds
and
sbb
sub
inc
inc
push
test
mov
cmp
pop
into
call
int
push
pop
int3
es
fldenv
mov
push
lods
inc
sub
shl
jae
pop
les
jb
fnstenv
lahf
fldpi
ja
rcl
mov
push
(bad)
push
mov
int
imul
pop
loop
push
adc
xchg
jb
inc
loop
dec
lods
enter
fiadd
or
mov
(bad)
es
ja
neg
imul
cmps
and
fiadd
dec
pop
jns
jp
push
sub
frstor
cdq
clc
sbb
pushf
lods
mov
mov
test
jbe
popf
jmp
movs
lea
xchg
xlat
in
les
(bad)
addr16
rol
mov
ins
sar
(bad)
in
leave
sub
test
sbb
dec
cmp
xor
scas
test
out
scas
(bad)
hlt
arpl
mov
xor
ret
jge
rcl
cwde
cld
pop
outs
leave
sub
pushf
jnp
test
aam
repz
mov
cmp
fwait
adc
lock
std
push
jecxz
xchg
cmps
push
and
cld
jns
cmp
out
stos
jmp
cmp
inc
shl
xor
jnp
inc
and
movs
add
mov
leave
je
rcr
bound
iret
mov
mov
dec
cmps
inc
js
mov
pop
in
jecxz
adc
xlat
gs
rol
aad
sti
stos
xchg
(bad)
clc
xor
or
adc
stc
fst
mov
ins
push
ins
or
xor
ja
sbb
add
pop
adc
mov
or
cld
test
push
cmp
(bad)
xor
adc
adc
adc
and
out
jnp
test
loope
xchg
push
xchg
pop
ds
push
sbb
stos
push
xor
and
imul
(bad)
rcl
mov
sbb
sub
jmp
shl
sub
popf
fisub
inc
sub
sbb
fwait
rep
(bad)
add
sub
push
dec
(bad)
xchg
call
fs
jge
outs
hlt
push
sub
mov
xor
cmp
or
(bad)
mov
mov
adc
lock
xchg
mov
push
xchg
lods
call
fadd
out
mov
mov
mov
sbb
bound
shr
adc
paddb
adc
jno
movs
out
in
mov
sbb
inc
adc
jge
or
jne
mov
mov
aad
xor
cmps
into
mov
adc
mov
iret
or
mov
out
inc
sbb
mov
(bad)
loop
inc
mov
jg
jnp
xchg
cld
and
adc
jl
out
fisub
outs
xchg
jmp
mov
xchg
mov
mov
dec
adc
leave
xchg
shr
xlat
fdivr
cmp
ins
or
pop
xchg
jle
test
pop
inc
push
cs
pop
lahf
sub
adc
xor
mov
xor
mov
inc
jb
push
pop
retf
push
jmp
sbb
push
das
aad
mov
daa
mov
add
arpl
or
lods
xchg
imul
cli
or
das
fidivr
dec
jecxz
fmulp
xor
xchg
xchg
fxch
popa
scas
sbb
dec
test
mov
push
lds
add
dec
xchg
jnp
xor
mov
popf
xchg
and
add
lods
push
jnp
inc
loopne
fcom
pop
jmp
adc
test
shl
mov
ror
mov
dec
xor
jae
cmp
sbb
or
pop
js
dec
sub
ss
or
(bad)
loopne
inc
push
lea
sub
outs
mov
mov
xor
sbb
or
mov
arpl
xlat
mov
add
jmp
sbb
dec
xchg
fnstcw
dec
jnp
and
call
mov
addr16
sbb
shl
(bad)
sbb
fmul
out
sub
mov
or
jne
mov
mov
jle
je
mov
pop
aaa
add
xor
fcmovnbe
mov
imul
cmp
xor
push
test
sub
fldenv
mov
or
jle
push
inc
mov
pop
cmp
imul
add
inc
lahf
mov
inc
cld
push
shld
repz
shl
mov
stos
adc
lahf
pop
fs
loope
pop
mov
loop
sbb
jb
dec
pop
in
xchg
cmps
stos
add
aam
jmp
ret
xor
mov
mov
sub
jg
or
push
mov
cmp
cmps
lods
push
mov
inc
mov
add
jl
(bad)
sub
daa
sub
mov
shr
loop
mov
shl
xchg
mov
adc
ds
inc
leave
aam
fnsave
cmps
dec
iret
leave
loopne
js
test
adc
int
sbb
xor
jl
loopne
sbb
bound
adc
push
adc
aad
jbe
or
dec
retf
idiv
into
sahf
adc
add
(bad)
jle
pop
outs
mov
aas
fwait
mov
sti
push
or
in
fsubr
or
sub
mov
or
push
add
icebp
(bad)
and
mov
outs
scas
in
xchg
inc
ret
push
call
jg
cmp
(bad)
cdq
inc
pop
movs
jl
cld
sub
repz
sbb
jmp
sbb
int3
mov
je
stc
fcmovbe
sahf
cmp
mov
sub
inc
cmp
es
out
adc
xor
lods
fwait
shl
int3
scas
jmp
lods
mov
xchg
stos
add
push
push
cdq
xor
dec
adc
shr
xor
ret
push
test
les
mov
pop
mov
mov
jge
jae
cmps
cld
mov
push
cmp
pushf
inc
mov
mov
fisub
fcomp
sbb
mov
retf
adc
ret
mov
and
mov
push
dec
iret
adc
(bad)
faddp
jl
or
mov
sahf
xor
inc
mov
mov
leave
push
popa
mov
jbe
and
adc
sub
mov
sub
sbb
mov
fdiv
out
dec
push
pop
xchg
inc
(bad)
mov
daa
arpl
(bad)
mov
cmp
push
cmp
xchg
and
jnp
out
push
push
jl
or
imul
mov
arpl
das
add
mov
push
(bad)
or
xor
sub
lods
les
pop
retf
inc
(bad)
retf
mov
mov
pop
mov
mov
stos
jns
and
data16
jne
loope
sub
sub
cmp
fldenv
imul
cmp
outs
cdq
push
add
dec
fisttp
inc
mov
imul
test
outs
cmp
mov
sub
dec
sti
cmp
mov
mov
cdq
lahf
adc
dec
imul
sbb
mov
ss
in
xor
cli
aaa
dec
std
call
aad
mov
stc
inc
jl
loopne
xlat
xchg
sbb
and
xor
std
test
imul
ins
rcr
cli
jge
jno
out
clc
scas
fs
loopne
popf
adc
bound
out
fadd
sahf
mov
pop
push
bound
scas
mov
xor
neg
and
scas
test
js
push
ss
in
jge
cs
imul
add
stos
or
lds
ins
mov
loope
add
(bad)
mov
mov
xchg
add
jae
xor
stos
push
dec
adc
adc
in
fist
jmp
mov
xor
push
repnz
aaa
xchg
in
jae
jl
movs
mov
addr16
inc
movs
movs
shr
pop
retf
mov
test
mov
or
push
aad
cs
push
add
in
sti
xchg
push
ja
jns
cld
retf
movs
rcl
ret
jmp
cld
iret
scas
sub
mov
push
aas
adc
mov
rcl
cli
push
push
psraw
dec
dec
mov
(bad)
nop
adc
jne
mov
mov
jnp
stos
(bad)
sahf
inc
mov
add
aas
lods
and
push
stc
xor
push
jmp
push
xor
push
xor
xor
inc
int3
cmp
jns
pusha
in
cmps
xlat
pushf
mov
xor
es
mov
outs
pop
outs
mov
lods
(bad)
xchg
cmps
dec
jle
fadd
jg
pop
shl
fadd
mov
xor
aad
xchg
movs
xchg
xor
xchg
mov
neg
repnz
push
add
imul
add
add
outs
sub
lods
inc
jle
pop
shr
repnz
adc
adc
(bad)
add
out
mov
add
pushf
push
push
push
mov
aaa
stos
pop
imul
in
jle
rcr
mov
loopne
out
or
xchg
lock
(bad)
fcmovnb
mov
ret
(bad)
mov
push
cld
sub
sub
jp
sahf
test
pop
add
pop
ret
sbb
push
les
sbb
cmc
adc
dec
mov
mov
mov
stos
fcom
imul
sti
(bad)
test
aad
dec
and
iret
lock
adc
mov
mov
pushf
stos
sbb
sti
or
adc
je
(bad)
in
cmp
mov
mov
mov
jecxz
sub
cmp
xlat
enter
adc
stos
(bad)
mov
movs
cmp
push
int
leave
mov
rol
sbb
mov
pushf
nop
ins
loop
push
or
jb
cld
pop
lods
movs
add
inc
fstp
push
fs
mov
dec
push
int
xchg
adc
and
fbld
inc
and
sub
xchg
dec
mov
inc
fs
out
mov
pop
ins
dec
test
inc
cli
cwde
and
cmps
adc
rcl
xchg
call
jne
adc
jmp
test
xor
or
imul
cli
jnp
cmps
cmp
push
jnp
cmps
cdq
sar
pop
push
push
ficom
xchg
(bad)
popa
frstor
inc
xchg
or
loopne
clc
pushf
int
xor
icebp
sub
push
(bad)
jmp
mov
mov
arpl
xor
retf
sbb
popf
rcl
dec
mov
jge
pop
sub
mov
mov
pop
ins
rcr
in
xchg
adc
xor
cmps
repz
mov
xor
cdq
dec
push
mov
jo
into
sbb
or
imul
mov
cdq
jno
(bad)
stc
sub
jge
loop
retf
push
scas
pop
mov
push
scas
and
shl
ja
bound
sub
inc
hlt
popf
pop
(bad)
push
mov
or
dec
and
jae
test
sbb
out
mov
ja
in
sub
jl
fs
push
cli
mov
sub
nop
dec
stos
mov
enter
xor
mov
shl
cdq
push
sbb
aaa
add
mov
mov
xchg
xor
and
(bad)
mov
aad
and
(bad)
rcr
lock
in
popa
sub
xor
adc
in
mov
mov
retf
aaa
cmp
dec
mov
inc
leave
cmp
jb
xor
xchg
push
icebp
jle
rcr
or
add
adc
repz
mov
cli
mov
and
div
jns
jae
adc
pusha
repz
inc
enter
(bad)
sar
movs
and
jl
ins
ja
in
aaa
and
(bad)
ret
repz
rcl
or
iret
pop
(bad)
cmp
xchg
int3
cdq
ja
mov
imul
das
enterw
enter
dec
mov
pusha
bound
fisttp
push
pushf
cmp
shl
pop
mov
jbe
xor
and
mov
cmc
out
lds
jmp
dec
push
and
xchg
ret
adc
jne
call
xchg
addr16
ror
xor
shr
xor
cmc
(bad)
(bad)
mov
ins
pop
sub
cs
popa
inc
hlt
into
cmp
leave
test
popa
mov
xchg
(bad)
pop
and
mov
inc
cdq
aaa
iret
xchg
rcr
lea
mov
(bad)
pop
sbb
scas
adc
fcom
pop
arpl
push
mov
mov
or
aam
test
(bad)
xchg
push
add
cli
dec
dec
and
adc
stos
leave
data16
push
addr16
inc
les
jo
loopne
loopne
popf
retf
sbb
adc
adc
fisttp
and
pop
cmp
sti
ins
push
in
aam
and
push
mov
sahf
shl
popa
je
fild
mov
cmp
mov
fld
pop
ins
shl
test
addr16
and
mov
shr
add
add
lods
int3
and
add
or
rcr
pop
(bad)
cdq
rcl
and
inc
pop
xchg
lods
inc
cli
outs
daa
retf
adc
outs
das
movs
in
in
mov
pop
sub
test
into
int3
inc
(bad)
mov
mov
cmc
das
xchg
add
and
inc
jle
mov
jo
out
sbb
xchg
add
ins
jno
inc
jmp
shl
scas
lods
jp
fcmovnu
mov
jl
stos
lds
retf
pop
lahf
dec
not
(bad)
xor
jecxz
jmp
les
lahf
pop
sbb
cmp
adc
pushw
mov
cmp
adc
xchg
xor
stos
mov
nop
xor
push
sti
bound
pop
outs
cdq
lea
inc
jae
aas
stos
nop
sub
jo
in
out
daa
ret
pushf
ja
test
pop
lods
outs
adc
retf
pop
retf
jle
inc
mov
cwde
mov
outs
arpl
rol
mov
int3
mov
imul
lods
mov
mov
aad
cmp
bound
(bad)
pop
adc
xor
add
mov
test
inc
dec
aad
cmp
sbb
ficom
mov
into
xchg
les
dec
ja
xchg
bound
adc
jnp
fwait
dec
pop
leave
retf
xchg
in
push
hlt
daa
or
fstp
push
mov
enter
je
cmp
jecxz
xchg
retf
test
mov
cmps
inc
mov
jbe
enter
mul
push
stc
mov
cmps
sahf
sub
lds
out
adc
mov
call
je
inc
inc
lods
and
pop
sbb
(bad)
mov
adc
ret
mov
adc
out
outs
dec
xor
das
nop
sbb
movs
daa
sbb
(bad)
gs
cmps
mov
mov
shl
ret
dec
dec
adc
ror
imul
jmp
pop
in
outs
mov
shl
jbe
aaa
cmp
cmp
addr16
js
or
xor
push
cmp
popf
icebp
dec
aad
jg
adc
imul
in
xor
in
or
inc
mov
sbb
ds
dec
and
mov
sub
test
sbb
mov
cs
hlt
or
repz
daa
sub
js
popa
loope
pop
lods
and
lds
clc
jnp
out
mov
xor
aas
dec
pop
or
repnz
inc
pop
test
or
shr
lea
lea
gs
xchg
stos
repnz
adc
pop
adc
xor
stos
fucom
aam
cmps
cmps
jnp
add
js
retf
mov
sub
imul
in
xchg
mov
gs
add
jmp
push
xchg
mov
sub
xchg
jl
cs
mov
mov
push
mov
push
nop
mov
jmp
test
nop
ins
cmp
ins
add
sahf
mov
adc
xor
daa
jp
bound
fmul
pop
fdivrp
(bad)
repz
or
add
xchg
cld
mov
add
xor
jge
(bad)
jg
cmp
out
xchg
inc
lods
mov
std
dec
loop
ins
push
sub
sbb
jg
push
int3
lods
neg
leave
lods
iret
jmp
mov
push
cmp
imul
sbb
cmp
mov
dec
xor
jmp
in
rol
rol
cmp
test
div
pop
sar
fwait
in
mov
inc
cli
ficomp
aaa
es
push
cwde
fist
push
mov
(bad)
movs
adc
sub
mov
adc
stos
inc
inc
add
xor
lods
jnp
(bad)
cmp
aaa
push
sbb
sahf
jae
sbb
inc
test
xchg
jnp
mov
fild
pop
mov
sub
mov
dec
add
sub
or
sahf
adc
mov
dec
and
add
imul
rcr
inc
shl
sbb
icebp
enter
jb
mov
ficom
mov
xchg
xchg
call
jmp
inc
jg
lahf
(bad)
sbb
xchg
scas
repnz
dec
adc
clc
and
mov
add
fadd
dec
mov
in
cmp
xchg
daa
jae
dec
xchg
out
mov
inc
mov
imul
sub
mov
cmp
sahf
test
test
mov
and
cs
(bad)
sbb
add
out
test
mov
dec
xor
mov
jl
repz
mov
adc
jb
movs
mov
in
adc
lods
dec
add
pop
leave
xlat
mov
push
xchg
mov
outs
dec
push
mov
in
pop
pop
psubsb
es
fcom
inc
pop
jno
jb
int3
xlat
adc
sub
jmp
outs
mov
ret
sbb
xchg
mov
mov
add
js
in
les
pop
xchg
xor
rcr
int3
adc
sbb
rol
ss
xor
cld
adc
sub
jmp
push
fbstp
dec
push
inc
push
pop
jmp
push
inc
mov
sar
shr
fs
push
scas
stos
lock
ret
push
mov
rol
mov
lods
dec
sbb
in
std
mov
push
jl
xchg
inc
jbe
cs
jge
push
jg
out
int
ja
push
sub
inc
bnd
test
sbb
jp
ret
fbld
push
gs
repz
retf
outs
sbb
clc
cmp
add
or
aas
adc
test
and
mov
addr16
movs
shl
into
jbe
xor
ret
in
dec
std
cmp
pop
push
movntq
inc
xchg
mov
sub
jno
dec
ret
push
mov
jnp
jnp
cmp
jle
(bad)
mov
out
data16
pop
add
mov
aad
and
out
test
xchg
arpl
lock
mov
call
pop
int
in
sub
popa
lahf
cmp
pusha
nop
mov
inc
cmps
lods
inc
dec
and
in
movs
jo
stos
fcmovnu
int
sub
test
mov
aam
mov
les
jl
rcr
bound
(bad)
loopne
inc
jmp
inc
jmp
add
sbb
dec
rol
(bad)
and
mov
mov
mov
imul
aad
xor
jp
push
xchg
inc
sti
pop
inc
test
pop
cmp
lds
dec
jecxz
cmp
call
stos
fistp
cmps
dec
mov
xor
ret
out
out
xchg
call
jmp
fpatan
sub
jnp
xor
mov
sbb
(bad)
test
mov
mov
jno
rcr
(bad)
loope
icebp
jmp
xchg
mov
in
and
out
ss
push
xchg
cmp
push
xlat
cmps
pop
ins
xlat
push
dec
sbb
mul
imul
jle
addr16
add
jbe
adc
aaa
fdiv
lea
inc
dec
(bad)
out
les
add
dec
inc
cmp
aad
repnz
adc
lods
test
lods
dec
pushf
clc
mov
pop
clc
xchg
xchg
call
xor
in
pop
fdiv
jp
sub
data16
sbb
nop
(bad)
loopne
mov
sbb
mov
retf
xchg
push
rcl
ins
fs
mov
lds
pop
jae
mov
fisttp
push
xor
xchg
mov
dec
fs
mov
dec
xchg
sub
xor
push
mov
movs
scas
xchg
in
mov
jecxz
pop
fincstp
mov
jnp
jl
mov
jle
jge
lock
into
push
xchg
mov
data16
addr16
sti
test
ds
fwait
dec
cmps
fs
sbb
shl
xor
pop
or
in
mov
cdq
lds
(bad)
xor
retf
stos
or
or
cmp
adc
cmp
test
in
adc
mov
mov
outs
aam
dec
or
dec
fild
popf
xchg
dec
sahf
sbb
ja
stc
sub
mov
xchg
mov
aas
dec
retf
out
ins
pushf
enter
jmp
xchg
test
sbb
cwde
inc
mov
adc
jl
xchg
les
adc
and
sbb
movs
adc
std
add
cmps
pusha
dec
mov
test
xchg
in
addr16
add
pop
nop
movs
pop
pusha
pop
pop
test
and
inc
or
js
push
mov
fcmovne
mov
xchg
int3
leave
or
xchg
dec
cmp
out
pop
popf
add
popf
out
inc
push
sub
mov
xor
out
pop
stc
(bad)
adc
hlt
or
pop
fnsave
cli
shl
adc
mov
inc
jb
iret
gs
pop
xchg
fsub
gs
or
adc
mov
movs
mov
adc
popf
lods
aaa
lods
repnz
jmp
or
je
dec
adc
cmps
mov
pop
ins
addr16
daa
mov
shl
prefetch
aas
and
dec
stc
inc
cmps
in
sbb
dec
in
ins
and
ins
adc
inc
mov
into
cdq
push
out
dec
mov
pop
push
cwde
jg
pop
mov
add
sbb
nop
jne
mov
add
sub
fcom
imul
pop
arpl
ret
add
mov
test
inc
clc
shl
idiv
sar
ret
lods
push
sbb
sti
sub
arpl
jno
arpl
aas
inc
jle
pusha
mov
push
fmul
retf
mov
fdivr
lods
add
and
mov
cmp
jg
in
or
mov
xchg
or
jmp
dec
mov
add
dec
pop
push
xlat
jns
xor
in
sbb
jb
bound
mov
js
mov
xchg
ja
inc
sub
push
movs
rcr
mov
pop
mov
sub
cld
(bad)
out
fimul
fcomp
out
and
xlat
out
add
sbb
push
dec
sub
daa
sbb
or
fist
adc
dec
or
jg
add
or
dec
mov
or
test
imul
sbb
jecxz
mov
mov
aaa
lock
dec
fcmovne
adc
xchg
mov
icebp
xchg
sub
pop
test
pushf
fcomp
xlat
adc
cmps
enter
push
xchg
xchg
mov
call
fnstcw
add
jnp
loope
nop
mov
xchg
mov
imul
call
dec
dec
xchg
adc
sahf
loop
and
adc
call
fdivr
js
mov
out
and
in
jecxz
cmps
jg
sub
addr16
lea
fist
mov
sub
stos
fld
jle
fstp
xor
push
mov
or
ins
ret
test
adc
and
sti
cs
jns
cmc
xor
test
fs
(bad)
fsub
add
xchg
jmp
mov
imul
fiadd
repz
push
push
je
pop
or
inc
daa
shl
loopne
(bad)
leave
dec
dec
enter
and
cmp
fistp
xchg
addr16
fcmovu
or
popf
cwde
fidiv
stos
jno
ins
jge
out
jge
inc
add
mov
jg
test
push
mov
aad
loope
fs
cli
cli
jmp
pop
mul
dec
fidivr
loop
mov
dec
cmps
pop
inc
xchg
popf
sti
icebp
pop
iret
scas
gs
(bad)
and
cdq
mov
mov
fistp
jle
pop
jmp
test
test
ficomp
into
inc
call
adc
jp
add
lds
in
mov
or
test
xchg
mov
loope
mov
fild
add
js
mov
bnd
shl
sbb
sbb
xchg
and
adc
cmp
xchg
inc
xchg
jle
mov
sahf
adc
jle
cmps
sub
inc
jae
mov
or
pop
bound
push
test
sub
or
daa
loopne
loop
fwait
retf
stos
adc
clc
pop
jo
sbb
xchg
out
adc
mov
inc
dec
and
fs
and
mov
popf
shr
mov
or
push
xchg
xchg
push
cmps
lds
or
cmp
mov
loope
leave
pusha
enter
aaa
mov
in
inc
push
stc
xchg
js
aas
or
or
mov
mov
and
into
xor
in
add
mov
add
fcmovnb
sub
mov
cmps
je
aam
ret
adc
adc
shl
test
adc
push
fdiv
sub
sbb
sbb
mov
jecxz
mov
jbe
cmp
jb
lahf
xchg
mov
(bad)
mov
inc
dec
xor
jmp
ss
pusha
mov
scas
add
push
mov
xchg
lds
push
iret
or
cmp
mov
jge
mov
es
call
mov
std
stos
int3
mov
inc
aaa
out
dec
out
mov
sbb
mov
cmp
sub
ficomp
call
movs
pop
(bad)
out
mov
cmps
sub
push
clc
rcl
fcomp
rcl
ss
or
test
into
inc
and
jmp
mov
retf
xor
mov
mov
adc
dec
ror
int
push
push
mov
add
and
outs
ja
cs
xchg
jnp
mov
adc
jp
mov
push
sub
(bad)
and
add
rcl
cld
pusha
out
jge
scas
add
test
cmp
sbb
fsub
fistp
or
push
ror
inc
cmp
ret
imul
shl
mov
jne
mov
sbb
and
cmp
inc
ins
or
dec
fild
cmp
pusha
mov
leave
xchg
call
ficomp
sub
aad
repnz
xor
lock
les
xchg
sub
xchg
out
mov
retf
inc
popa
inc
or
push
std
out
ins
ins
jae
pop
sbb
icebp
lods
jmp
out
(bad)
cmc
inc
push
sub
adc
repnz
das
sub
inc
push
and
cli
sbb
repz
mov
imul
xor
sbb
add
mov
sbb
std
cdq
inc
lea
push
aam
pop
test
pushf
mov
add
push
nop
stos
jg
into
xchg
out
push
daa
cld
cmp
stc
rcpps
cmp
(bad)
pop
loop
sahf
sub
in
jmp
mov
mov
mov
mov
push
cmps
inc
aas
sahf
mov
dec
cmps
jp
cmp
scas
dec
push
xor
sub
mov
push
xchg
mov
fnsave
adc
ins
or
les
add
shl
leave
mov
jmp
jo
sub
and
mov
loopne
or
cmps
test
repz
or
dec
ficom
in
in
xchg
xor
push
adc
or
push
repnz
enter
and
xor
inc
mov
jecxz
in
xchg
push
xor
mov
cwde
dec
imul
aad
out
retf
movs
popf
dec
(bad)
jns
cwde
or
(bad)
pop
js
dec
mov
xor
hlt
jecxz
add
mov
xchg
cld
mov
fs
or
jno
sub
jne
push
xchg
xlat
loope
scas
stos
pusha
sahf
repz
stc
mov
in
xchg
mov
jmp
add
shl
jecxz
inc
cmp
push
and
xchg
sub
mov
mov
test
mov
xor
sti
cmp
dec
popa
jmp
pop
dec
cmp
jb
das
cld
fidiv
xchg
mov
je
xchg
loopne
rol
and
stc
push
mov
out
fmul
mov
(bad)
jo
aaa
cmp
call
push
jp
fist
icebp
push
retf
frstor
popf
enter
mov
xor
sub
test
jno
push
rol
mov
pop
mov
pop
jns
and
xor
fs
add
inc
mov
(bad)
fcomp
leave
push
lahf
sbb
nop
popa
push
lea
pop
aas
cmp
in
stc
ins
in
jmp
movs
out
cmp
das
adc
push
loopne
loop
mov
lea
sub
(bad)
mov
mov
(bad)
repz
mov
js
and
aaa
lahf
inc
int3
shl
arpl
add
adc
(bad)
push
test
mov
cmp
add
inc
jnp
scas
mov
into
lahf
loopne
ror
test
enter
ds
jle
and
lea
pusha
sub
push
or
popa
dec
lahf
add
sub
push
and
std
das
xor
aaa
inc
sub
and
xchg
mov
push
cmps
mov
sub
test
cld
mov
arpl
mov
cmc
call
dec
ret
xor
(bad)
(bad)
rcl
icebp
and
xchg
out
loop
and
add
pop
cld
xor
mov
ficom
push
adc
push
push
daa
(bad)
(bad)
sbb
(bad)
mov
stos
out
or
in
jecxz
call
xchg
mov
mov
stc
pusha
jmp
mov
cmp
leave
ins
push
push
sbb
daa
sub
out
mov
ss
cmc
js
sub
cmp
xor
in
sub
push
jno
xor
push
pusha
push
dec
xchg
adc
pop
aas
out
rcl
mov
sbb
jbe
pop
out
pop
ficom
push
mov
imul
or
scas
mov
(bad)
das
fistp
and
pop
lods
outs
xchg
ret
dec
push
mov
enter
popa
nop
xor
jb
pop
test
aas
push
dec
mov
repz
js
outs
inc
call
mov
test
call
pop
and
popa
dec
jne
fsubr
add
adc
rol
pop
jl
cld
sub
fld
push
stc
outs
ret
push
adc
cwde
mov
add
lods
pop
inc
lods
and
and
adc
cdq
pop
gs
outs
pusha
fist
addr16
inc
scas
data16
mov
inc
repz
adc
mov
add
cmp
jnp
arpl
xor
or
jg
mov
cwde
sbb
popf
jp
pop
push
and
(bad)
in
jbe
mov
sahf
mov
scas
xchg
std
lahf
test
aas
icebp
leave
sbb
cs
nop
fwait
sbb
cwde
addr16
rol
pop
out
inc
pop
mov
movs
mov
popa
mov
mov
fisub
nop
add
xchg
jle
xchg
jp
fsub
mov
push
dec
inc
inc
movs
iret
jne
mov
ins
ins
adc
sub
mov
mov
das
mov
jns
push
or
icebp
enter
pop
iret
lds
inc
bound
aas
scas
cmp
icebp
ds
mov
fs
clc
repnz
outs
stos
test
cld
call
int
(bad)
mov
nop
(bad)
mov
fistp
dec
jg
push
adc
dec
and
jae
jbe
mov
adc
pop
xchg
xchg
dec
out
enter
shl
out
xchg
add
jbe
xor
xor
arpl
push
call
mov
xor
fdivr
push
loope
imul
out
lahf
jp
adc
cmp
dec
cmc
cmps
jb
jmp
lods
push
nop
jo
mov
jb
sahf
mov
and
jnp
repz
jb
leave
sbb
retf
cmp
retf
(bad)
dec
pop
add
loopne
loop
out
aaa
or
mov
rcl
aas
dec
rcr
push
jns
ret
cmp
mov
cmp
fldcw
pop
and
test
push
xchg
dec
add
xor
(bad)
cli
fdiv
push
mul
add
retf
comiss
data16
and
imul
out
adc
sub
das
ret
ds
popa
fwait
aaa
cli
sbb
pop
xchg
cdq
imul
test
js
inc
sbb
mov
mov
xchg
mov
xchg
ins
ja
imul
cmp
cwde
outs
(bad)
jl
inc
scas
xchg
dec
fldenv
cmp
push
mov
outs
sti
repz
add
xchg
add
sub
out
sub
ror
shl
daa
jo
nop
cli
push
xchg
loop
(bad)
retf
or
inc
mov
outs
mov
and
call
ret
ja
jge
ds
mul
(bad)
dec
in
sbb
push
loopne
xchg
cmps
stc
pop
mov
push
imul
xor
dec
adc
push
jmp
dec
jae
mov
sub
sbb
mov
xchg
mov
call
push
xchg
jmp
xor
jl
mov
xchg
out
xchg
cmp
jge
mov
je
mov
add
jg
mov
add
adc
or
push
maskmovq
idiv
clc
mov
and
cdq
jb
(bad)
das
setnp
add
outs
call
or
or
sub
movs
stc
in
bound
xchg
daa
sbb
inc
rcr
xchg
aam
or
sub
push
scas
outs
aam
mov
inc
cs
mov
pusha
and
enter
push
ret
fidiv
adc
fstp
jmp
adc
nop
push
(bad)
out
mov
call
mov
and
lahf
push
cmp
dec
leave
cwde
cmc
cmp
nop
add
scas
cwde
or
xor
sub
or
xor
sbb
sti
pop
xor
dec
mov
in
mov
sbb
mov
std
(bad)
adc
imul
inc
sar
add
cmp
sub
push
mov
out
mov
xor
jae
xor
daa
add
inc
icebp
mov
(bad)
idiv
outs
add
pop
push
or
push
out
ret
ret
push
mov
jns
pop
in
sub
pop
dec
loopne
mov
fcmovne
iret
dec
out
xchg
push
mov
pop
dec
push
aas
xchg
and
repnz
sbb
and
dec
cmp
imul
shl
xor
pop
(bad)
shr
mov
(bad)
ins
sbb
mov
movs
xor
ss
adc
xor
clc
mov
mov
(bad)
in
cmp
iret
dec
(bad)
arpl
sub
pop
inc
cs
iret
retf
push
mov
or
add
push
cmp
test
adc
jo
sub
pop
xor
push
sbb
mov
pop
jmp
scas
mov
outs
shr
fnsave
sbb
enter
scas
adc
xchg
inc
mov
mov
jne
add
fwait
cmc
inc
retf
into
rcr
movs
mov
loop
lods
jns
scas
mov
dec
xor
or
xor
je
dec
push
push
jl
pop
mov
sahf
pop
or
jns
out
adc
add
es
xchg
cwde
adc
pushf
sti
jg
sub
and
not
mov
xchg
mov
rcr
inc
pop
out
dec
fcmovnbe
inc
sub
xor
cmp
pop
scas
pop
test
das
add
pop
push
scas
xor
push
or
addr16
ret
and
jbe
hlt
and
and
xor
dec
test
and
call
imul
push
xchg
retf
dec
sub
test
int3
adc
mov
sub
clts
jns
mov
nop
adc
mul
mov
sub
aad
adc
stos
ins
leave
jg
gs
or
out
fwait
and
lods
inc
ret
loop
mov
or
hlt
js
test
in
adc
mov
and
inc
in
mov
enter
mov
sbb
push
imul
cmp
(bad)
fadd
fwait
pop
cmps
out
fisub
mov
pcmpgtw
xchg
fdivr
sub
mov
out
scas
(bad)
out
cmps
retf
mov
(bad)
sbb
dec
jg
fild
add
int
xchg
inc
test
mov
adc
hlt
fwait
shl
imul
fistp
std
mov
mov
fist
push
loope
mov
hlt
(bad)
movntq
out
or
xchg
inc
std
jge
std
mov
cmp
jp
push
add
stos
mov
stos
in
push
jb
pop
mov
enter
fsubp
xor
pop
scas
mov
dec
repnz
sub
jnp
jbe
fcom
jne
cs
mov
fs
inc
sbb
call
bound
rcr
clc
sbb
jecxz
lea
call
xchg
sub
dec
xchg
adc
mov
ret
mov
sub
push
sbb
loop
popf
out
mov
aad
fst
lea
cmp
pop
ds
and
cmp
aad
jbe
mov
jg
daa
pop
pop
jb
scas
and
shr
jne
pop
or
pop
nop
ret
mov
or
jne
add
or
pop
adc
dec
out
mov
cld
hlt
xchg
mov
ror
repnz
leave
(bad)
mul
call
and
sbb
pop
pusha
test
xchg
cmp
icebp
push
popa
stos
sbb
fs
rcl
and
out
in
xchg
bound
fimul
sbb
ja
inc
icebp
aam
xchg
jno
dec
xchg
sub
in
in
mov
cmp
int3
jns
fdivr
dec
adc
pop
cmp
sbb
sbb
jne
fdiv
mov
enter
sahf
cmc
ins
jmp
pop
(bad)
int3
inc
shr
adc
add
mov
pop
jle
movs
add
leave
sub
dec
(bad)
push
mov
and
mov
or
test
(bad)
inc
mov
call
out
idiv
ss
loope
push
mov
(bad)
fs
ss
xor
mov
sub
jo
fist
adc
test
fs
add
adc
pop
pop
mov
sbb
shr
loope
shl
retf
icebp
cs
fcmove
mov
rcl
xchg
mov
fbstp
aam
mov
cmp
test
movs
ret
xor
es
mov
adc
stos
pushf
xor
pop
sbb
ret
add
js
popa
lahf
popf
(bad)
mov
ss
push
std
mov
outs
mov
ret
push
rcr
push
mov
inc
(bad)
fsubr
stos
inc
std
jns
add
lea
shr
mov
mov
fcmovnbe
add
pop
xchg
push
jno
dec
jo
mov
mov
xchg
aas
xchg
das
and
add
bound
stc
fucomp
xchg
jbe
aad
repnz
(bad)
cli
das
test
sub
pop
loop
mov
fmul
mov
sahf
int
jno
imul
loop
fmul
loopne
ja
xor
dec
jmp
jge
and
lock
jns
daa
sub
jne
pushf
mov
repnz
xor
aad
cmc
stos
and
xchg
pop
shr
mov
out
mov
jmp
xchg
imul
add
gs
lods
push
push
test
(bad)
xor
pop
mov
popa
repz
dec
mov
fisubr
or
jnp
xchg
int3
leave
mov
xor
shl
and
and
mov
in
js
cmp
cmps
enter
daa
dec
jae
ins
enter
out
loopne
cmp
cmps
in
dec
mov
add
(bad)
adc
ins
or
inc
inc
das
ficomp
pop
popf
into
xor
sub
mov
jge
mov
mov
retf
or
jnp
in
jnp
std
scas
pop
das
jle
pushf
dec
ret
and
and
cmp
mov
adc
push
shl
push
jle
les
cmp
cwde
lods
pop
jle
movs
sub
pushf
dec
repz
ret
out
xor
add
or
clc
rcr
rcl
adc
sbb
rol
lods
or
fs
rcl
and
(bad)
jmp
mov
sbb
lods
cmps
(bad)
paddusb
icebp
jnp
mov
(bad)
aaa
test
cli
aas
mov
cmp
dec
imul
fsub
int
xor
stos
jmp
pop
lea
je
cmova
jae
mov
data16
(bad)
fsubp
add
mov
movs
aas
and
fsubp
xchg
jo
dec
mov
(bad)
(bad)
pop
aaa
retf
add
or
push
imul
sub
outs
enter
gs
push
push
adc
xor
outs
pushf
push
sbb
loope
cmp
jl
cmps
xor
mov
jg
mov
mov
sub
mov
inc
or
push
mov
add
mov
int
pop
cmp
dec
rcr
or
jno
jb
push
lds
(bad)
push
mov
pop
sub
ss
(bad)
mov
cmps
into
out
test
loope
xchg
xchg
outs
push
aas
add
sbb
add
icebp
xchg
cld
test
mov
imul
cmp
mul
pop
cmp
aaa
sub
sub
and
test
xchg
add
inc
jbe
daa
sbb
ins
add
xor
fs
and
mov
adc
sbb
out
cdq
add
and
adc
cwde
inc
sahf
retf
and
cmps
popf
stos
and
jno
(bad)
jmp
mov
imul
cmp
or
and
daa
or
int
pop
push
jb
sub
cmps
movs
movs
xchg
jns
or
cli
jns
and
xor
add
repz
or
pop
scas
dec
cmp
or
cdq
and
fwait
int
jno
fcom
push
mov
fxch
data16
shl
nop
jbe
sar
pop
xor
and
push
stos
fcmove
push
mov
scas
jp
dec
(bad)
(bad)
jno
inc
popf
jp
pop
mov
call
pop
aad
fs
xchg
repnz
enter
repz
sbb
lea
bound
fldenv
popa
add
(bad)
mov
out
jbe
ja
jnp
mov
or
js
jns
fadd
mov
int3
sbb
pop
mov
retf
and
in
sbb
aad
sbb
jmp
scas
popa
xor
or
outs
in
scas
ret
shr
div
aas
sti
xor
and
dec
xchg
retf
sub
ja
jl
imul
inc
in
call
push
cmp
ds
adc
ins
mov
xchg
mov
fdiv
inc
loope
pop
mov
in
add
jb
jno
popa
or
xlat
inc
in
dec
int3
add
lahf
adc
cmc
sar
stc
lds
lods
sbb
aas
shl
call
int3
arpl
or
lods
mov
scas
repnz
push
xchg
aaa
jno
in
push
pop
and
adc
test
cld
push
jmp
ret
fs
test
pop
test
inc
and
adc
mov
and
inc
jno
stos
pop
test
jmp
mov
push
mov
cmps
cmp
mov
aad
pop
stc
scas
fcmove
pop
repz
mov
mov
enter
mov
fs
mov
jle
inc
mov
sub
mov
int
movs
stc
stc
pop
jmp
out
repz
out
popa
inc
(bad)
push
sub
dec
xchg
lods
xor
ret
mov
inc
retf
push
cmps
cmp
or
imul
xchg
test
fcmovbe
or
cmc
adc
cmps
stos
lds
mov
dec
popa
add
imul
lahf
adc
mov
xor
mov
cmp
or
xor
cmp
jb
lods
jmp
aad
(bad)
mov
inc
mov
jp
je
imul
cld
pop
push
shl
mov
push
or
ss
mov
repnz
ja
jmp
mov
mov
sub
jle
les
mov
push
mov
sbb
cdq
sub
leave
or
stc
pop
call
xchg
add
lds
or
adc
jmp
ds
lahf
loopne
add
xor
dec
imul
add
pop
mov
scas
jbe
ins
test
xor
or
mov
(bad)
dec
inc
pop
mov
jp
push
cli
jne
sbb
test
pusha
clc
cli
adc
dec
dec
adc
stc
call
jo
test
sub
vcvtpd2dq
(bad)
inc
shr
outs
gs
fcomp
fmul
mov
push
sbb
sar
dec
cmp
lods
mov
jmp
adc
rcl
adc
xchg
popf
nop
cmp
or
push
test
inc
sahf
test
repnz
dec
outs
xchg
dec
push
jg
add
les
test
add
xchg
cmp
sti
push
mov
retf
jp
xor
jmp
in
pop
stos
push
out
jb
xchg
pcmpgtw
dec
sar
in
(bad)
fmul
sub
and
loop
cmp
ss
push
loopne
lea
xchg
xchg
ds
imul
mov
jge
pusha
pop
mov
or
push
mov
adc
in
outs
cmp
es
push
mov
std
adc
(bad)
les
xchg
stos
call
fwait
or
nop
mov
cmps
js
sub
les
test
dec
jecxz
xabort
push
cli
arpl
mov
xlat
fwait
mov
and
jmp
push
jnp
push
and
in
sbb
(bad)
push
and
inc
sbb
js
cmc
scas
sbb
rol
mov
and
scas
xchg
das
mov
cmps
dec
inc
mov
enter
fist
leave
lahf
mov
enter
inc
inc
mov
sub
inc
xor
adc
mov
call
jle
dec
je
mov
fisttp
dec
test
and
popf
push
mov
sub
repz
lahf
xchg
aaa
adc
pop
pop
mov
stos
hlt
push
sbb
fsubrp
or
adc
pushf
fsub
push
inc
enter
or
mov
add
mov
lods
pop
leave
sbb
mov
loope
xchg
sub
stos
mov
cmp
fstp
cli
sub
int3
stc
imul
lds
and
xlat
ja
mov
ror
repnz
popa
mov
mov
outs
loopne
adc
(bad)
mul
(bad)
arpl
retf
test
in
or
hlt
stc
pop
cmc
sbb
addr16
addr16
jmp
stos
mov
lea
clc
std
arpl
aam
push
icebp
call
push
in
ds
add
xchg
imul
mov
mov
mov
leave
pushf
pop
imul
mov
adc
mov
cmp
jmp
outs
je
(bad)
into
out
dec
lahf
test
loop
fs
and
sbb
js
jmp
hlt
icebp
sub
mov
popa
push
add
ret
dec
push
ja
mov
mov
adc
xchg
sub
xchg
pop
jno
mov
ret
std
(bad)
or
lds
sbb
fucomi
repz
mov
sub
mov
in
mov
daa
lahf
sar
aas
clc
jae
fidivr
out
mov
mov
dec
sar
inc
sbb
(bad)
adc
pop
into
inc
test
repnz
(bad)
fcom
nop
push
cwde
xor
arpl
mov
or
repz
ret
jmp
adc
enter
sbb
sbb
and
pop
mov
pop
adc
push
je
ds
in
mul
inc
aas
test
jnp
popf
jmp
jnp
and
inc
aam
push
inc
mov
rol
xlat
imul
stos
loope
mov
mov
shr
movs
mov
lahf
push
cli
and
fdivp
xchg
mov
jb
xchg
icebp
mov
enter
outs
jbe
inc
bound
cmp
jp
lods
fs
mov
mov
lock
sbb
adc
into
pop
lds
daa
call
add
aaa
das
sti
mov
jb
dec
or
push
sbb
xchg
mov
or
mul
mov
adc
xchg
push
or
loope
jbe
lods
sub
call
nop
sbb
ja
add
fscale
xor
sbb
xchg
mov
mov
add
xchg
adc
cmp
inc
ret
adc
cld
add
xchg
dec
mov
sbb
ret
cs
adc
cmp
jno
mov
sub
add
cmc
idiv
jl
or
push
jae
mov
mov
shl
cmp
lea
enter
js
mov
shr
add
pop
imul
inc
aas
and
loope
sbb
addr16
inc
jae
daa
(bad)
rcr
adc
test
mov
cmp
(bad)
aam
cld
pop
in
enter
sar
sahf
cs
stos
hlt
lock
mov
jae
mov
xchg
xor
adc
and
mov
push
pop
not
push
cmc
mov
(bad)
sbb
xchg
xor
int3
cmps
loop
cwde
push
ds
mov
or
(bad)
fidiv
lods
shl
movs
xor
fucomi
and
xor
imul
jp
aaa
inc
popf
lock
mov
cmps
cmp
or
or
call
ror
test
aas
inc
push
data16
pop
sbb
xor
cli
push
cmps
mov
std
int3
lods
imul
adc
ror
fnstsw
or
lea
enter
(bad)
sub
mov
xor
rcl
sbb
pop
retf
rcr
push
sbb
lds
in
repz
or
fdiv
movs
pop
mov
repnz
adc
jle
add
add
test
iret
pop
jle
enter
je
jmp
or
repnz
sbb
xchg
jno
or
cs
sbb
xor
iret
pushf
or
xor
xor
(bad)
and
mov
ret
int3
adc
test
sub
outs
add
std
mov
xor
fdiv
adc
adc
retf
jmp
arpl
mov
scas
push
push
pop
inc
mov
add
shr
jecxz
push
inc
mov
(bad)
dec
and
pop
push
cmp
(bad)
pop
push
aad
movs
xchg
cdq
push
jecxz
out
cmp
popf
jg
jle
popa
stos
lahf
ret
outs
out
hlt
or
fwait
push
inc
repnz
gs
pop
mov
cmp
xchg
and
ficomp
out
xor
xchg
push
mov
lods
mov
dec
repz
mov
jg
cmp
xlat
mov
call
dec
sub
inc
mov
stc
inc
imul
(bad)
mov
dec
mov
fldcw
scas
cmp
mov
into
jg
rol
jb
fbld
push
xchg
call
aam
mov
sahf
sbb
mov
into
div
cwde
test
lahf
xchg
pop
(bad)
jp
aam
jmp
and
aaa
jecxz
sub
loope
jmp
(bad)
cmp
sahf
adc
outs
xchg
mov
mov
stos
(bad)
int3
nop
test
adc
pop
in
movs
dec
pop
inc
(bad)
mov
les
inc
jl
pop
adc
cmps
adc
push
icebp
daa
cld
fistp
and
pop
jne
std
sbb
mov
mov
sub
mov
ja
jecxz
stc
add
mov
mov
push
test
jle
sub
mov
sbb
in
fcom
and
xor
sti
retf
jnp
(bad)
fcom
dec
sbb
cmp
sub
adc
cmp
les
lea
movs
rcl
hlt
int
dec
stc
dec
dec
or
adc
rcr
sahf
and
popf
lds
data16
repz
xchg
mov
loop
addr16
add
xchg
daa
pop
pushf
fs
das
paddq
adc
mov
ficom
arpl
bound
aas
pop
imul
jb
js
fisttp
popf
sub
repnz
leave
add
push
pop
in
sti
or
mov
ins
jl
dec
mov
stc
out
mov
mov
(bad)
dec
rcr
lods
mov
mov
test
xor
fst
sub
pop
mov
out
inc
movs
loopne
fdiv
lock
call
loope
cmp
jge
xor
cmp
cmp
imul
jle
inc
shl
mov
inc
cmp
mov
sbb
sbb
mov
jmp
push
pop
lds
aaa
enter
popa
mov
jg
dec
xor
repnz
jle
jg
(bad)
out
sub
sub
out
jae
push
in
and
ror
sbb
jp
(bad)
mov
xor
cli
inc
cmp
dec
movs
pushf
ret
gs
rcr
mov
mov
(bad)
jae
(bad)
push
mov
mov
popf
push
jnp
mov
lods
xchg
push
rcr
sub
std
repz
jge
xor
adc
ja
shl
cmp
shl
push
in
xchg
addr16
idiv
xchg
xchg
sar
(bad)
pop
imul
test
cld
xor
mov
mov
dec
test
mov
clc
xor
jns
adc
push
mov
(bad)
mov
call
(bad)
push
cmc
mov
xchg
push
cli
jmp
mov
cdq
mov
enter
ja
call
shl
aad
xor
aaa
xor
into
call
mov
jp
repnz
jp
cwde
dec
xchg
or
adc
ss
sbb
push
xor
in
dec
inc
and
mov
data16
bswap
and
xchg
push
lahf
pop
ret
lea
out
add
jp
pop
fisubr
mov
mov
adc
push
xor
lock
push
push
xchg
pop
pop
xchg
dec
call
pop
call
and
adc
sbb
mov
xchg
jo
stos
or
mov
sub
mov
push
ds
je
sbb
push
jmp
int
ins
loop
mov
push
xor
cmp
mov
repz
pop
fisttp
push
sbb
(bad)
mov
mov
inc
ins
ins
mov
shr
in
jecxz
pop
sbb
mov
aaa
ins
cmp
imul
dec
mov
(bad)
add
fwait
sbb
fdivp
(bad)
fucom
xchg
pop
xchg
mov
add
ret
push
or
or
pop
mov
pop
(bad)
cwde
sub
leave
push
or
outs
pop
outs
bound
dec
mov
xchg
das
scas
xchg
dec
adc
dec
adc
mov
hlt
cmovl
scas
loop
sbb
push
fcomp
jns
inc
cld
in
ret
les
(bad)
call
push
sub
aad
ret
sub
cmc
inc
push
or
add
mov
sbb
scas
out
mov
push
jns
(bad)
stc
scas
movs
lods
test
stos
cmps
rcr
jae
ds
jo
dec
ss
xor
aas
sub
mov
fst
mov
lods
jnp
inc
std
ror
mov
lock
test
mov
and
in
push
mov
js
xchg
neg
fild
in
loopne
dec
push
pop
pop
fwait
push
mov
inc
add
clc
iret
fidivr
stc
xchg
jmp
sbb
addr16
inc
or
test
xor
cmp
aaa
sub
push
test
add
enterw
mov
cmp
test
mov
and
pop
push
pop
imul
mov
mul
mov
fsubr
loopne
addr16
pop
ss
sub
push
rcl
in
call
hlt
out
xor
sbb
mov
push
cs
in
push
frstor
nop
ror
pop
pop
dec
cdq
test
cmp
jmp
mov
mov
or
cmps
or
push
movs
out
and
mov
xchg
adc
adc
imul
sbb
into
out
out
dec
mov
inc
cli
jecxz
scas
inc
pop
adc
pop
pop
sbb
sbb
mov
sub
adc
(bad)
cwde
adc
test
jnp
mov
sub
mov
pop
xor
dec
push
and
xchg
fidivr
mov
test
lock
jns
inc
fisubr
scas
or
cmps
push
fiadd
mov
cmp
xchg
mul
(bad)
daa
fcom
dec
mov
xchg
add
ret
cld
dec
xchg
fnsave
jbe
dec
pop
or
adc
adc
and
inc
xchg
movs
dec
mov
movs
jae
shl
addr16
mov
sub
inc
movs
aaa
fstp
sahf
cld
pop
sti
mov
xor
mov
fimul
sub
repz
inc
inc
enter
inc
jmp
dec
mov
fdivr
movs
cmp
stos
jb
fucom
fdivr
mov
and
pop
arpl
xchg
cmps
daa
or
jbe
mov
std
fwait
outs
dec
frstor
(bad)
leave
pushf
fdiv
push
dec
lahf
mov
(bad)
jns
out
or
jl
pushf
xor
inc
xor
in
jno
mov
ins
jp
popa
add
mov
test
mov
xor
adc
push
sub
addr16
push
lock
dec
idiv
fdivp
es
retf
shl
aas
cmp
xchg
pop
dec
ins
das
jb
inc
sub
pop
cmp
popf
xchg
jbe
pusha
and
(bad)
out
pop
nop
mov
inc
sub
adc
loopne
lds
pushf
mov
mov
push
push
lods
cmp
das
fnstcw
inc
out
call
cmp
mov
es
push
or
in
push
mov
jle
sub
mov
cld
(bad)
fild
sti
jp
xchg
or
iret
adc
xchg
mov
test
xchg
adc
jns
jmp
xchg
inc
dec
jnp
add
das
cmps
add
aas
(bad)
cmp
sub
jo
or
mov
sahf
and
push
mov
adc
mov
mov
pop
sbb
(bad)
and
mov
dec
sbb
sbb
cld
push
sub
mov
xor
xchg
adc
mov
pop
or
mov
inc
loop
aas
cmc
xchg
dec
imul
push
sub
mov
lock
data16
mov
fmul
data16
div
jecxz
int3
inc
imul
xor
sbb
inc
xor
stos
xor
shl
sub
jae
push
or
jmp
iret
sbb
sub
mov
mov
add
jb
xchg
pop
mov
sbb
mov
add
icebp
push
bound
in
repnz
mov
pop
popf
dec
push
inc
xor
ins
iret
stc
sbb
fs
gs
jo
and
ja
dec
pop
mov
inc
call
inc
(bad)
xchg
push
int3
mov
dec
ins
adc
xor
sbb
stos
scas
and
lds
movs
pop
out
(bad)
jmp
int3
pop
(bad)
cmc
xchg
js
(bad)
jge
call
ja
(bad)
mov
mov
ins
rol
jg
aaa
std
mov
cmps
movs
ins
push
ret
add
cmp
xchg
xor
scas
repz
lea
or
jno
push
xchg
dec
push
leave
into
xchg
lock
mov
(bad)
in
cmp
mov
xor
or
inc
pop
ror
loopne
fcom
jns
mov
xor
mov
push
xchg
int3
cmp
mov
rcl
and
pop
in
int3
popf
in
xchg
sbb
out
add
mov
and
popa
jns
outs
xchg
js
or
ror
clc
push
dec
sbb
jle
inc
xchg
mov
(bad)
repnz
mov
push
xor
sar
inc
add
mov
in
push
push
in
frstor
jg
jmp
push
pop
ss
sub
jnp
pop
jge
xchg
mov
pop
aad
sub
scas
jo
cmp
out
add
mov
loopne
pshufw
push
mov
(bad)
in
push
sahf
pop
mov
ds
sub
jno
dec
cmps
fxch
push
div
adc
mov
subps
add
and
test
fsub
mov
dec
ja
cmp
test
xor
call
mov
(bad)
xor
dec
cmps
jle
data16
fdivp
xor
test
cs
bound
fcmovbe
(bad)
and
lock
retf
dec
shl
sub
movs
rol
jo
jnp
cld
(bad)
stos
fbstp
clc
repnz
scas
jl
rcl
xchg
cld
dec
(bad)
push
mov
mov
push
std
mov
pusha
push
push
xor
mov
inc
dec
test
stos
daa
fild
dec
jns
mov
jg
and
push
retf
sbb
ds
sahf
xchg
adc
pop
cmps
ins
cmp
test
and
sub
leave
mov
cmp
fld
lahf
cmc
scas
xchg
cmps
push
mov
cld
push
cld
lods
out
cli
(bad)
pop
add
push
push
and
push
mov
jg
and
hlt
cmc
xor
sahf
push
ficom
ins
push
push
enter
inc
cmp
inc
data16
dec
sub
lds
xchg
daa
cmc
pop
(bad)
sar
add
in
icebp
mov
dec
inc
adc
add
mov
scas
xlat
add
(bad)
into
shl
loop
ret
mov
lock
popf
pop
test
call
or
cwde
fisubr
jecxz
idiv
repz
xor
sbb
stc
or
cdq
xor
sti
add
fbstp
shr
fwait
jge
inc
fiadd
outs
pop
data16
icebp
jg
call
inc
jne
inc
pushf
inc
jmp
jmp
hlt
adc
mov
cmovae
je
aam
sahf
test
push
pusha
and
dec
outs
jo
std
je
daa
out
nop
or
sub
sbb
popf
xor
pushf
push
fisub
cbw
cmp
dec
mov
pop
in
cdq
imul
loope
cmp
aam
jg
and
xchg
leave
cmps
jae
add
pop
inc
or
jg
pop
icebp
push
adc
or
inc
sub
test
cmc
bound
xchg
xchg
lea
add
cmps
mov
out
aam
cmp
mov
sub
enter
sahf
jl
and
fs
mov
cwde
test
pop
lods
jb
jbe
ret
cli
mov
lahf
lock
in
clc
jge
aas
sbb
sub
adc
cmp
(bad)
and
add
inc
inc
retf
out
jb
or
add
repnz
int
daa
inc
lahf
inc
mov
imul
arpl
bound
addr16
sti
inc
aam
idiv
pop
in
test
jecxz
jle
aas
xor
repz
pop
es
aad
stos
int3
stc
add
pop
inc
push
mov
cmp
mov
lods
(bad)
rcr
shl
scas
and
clc
jecxz
mov
(bad)
in
or
mov
shr
xlat
imul
cld
cmp
daa
inc
push
retf
out
out
fsub
lahf
jae
sbb
repz
hlt
mov
shl
aas
jno
xor
inc
push
mov
loope
jmp
fnsave
sbb
fwait
mov
jge
scas
push
pop
fdiv
(bad)
push
mov
in
jne
(bad)
mov
sbb
inc
xchg
repnz
xchg
cwde
sbb
(bad)
and
sbb
fwait
pop
leave
cmp
dec
or
pop
mov
popf
(bad)
mov
add
movs
pop
inc
pop
cs
xor
aaa
std
add
inc
rcl
aam
fsubr
mul
jns
iret
loop
call
jno
xor
mov
and
pop
pop
mov
jecxz
das
inc
push
pop
cmp
sbb
mov
scas
inc
or
dec
std
pop
mov
adc
inc
or
dec
push
ret
sbb
fadd
adc
and
js
loopne
and
dec
cmp
jno
push
jne
in
ficom
mov
lods
outs
pop
cwde
or
jg
xlat
mov
jno
ret
(bad)
xlat
(bad)
sbb
jb
gs
dec
and
int
pop
ja
pop
pop
test
in
mov
je
pop
mov
repnz
or
push
sub
movs
or
mov
push
pop
mov
out
adc
push
scas
adc
js
and
jnp
xlat
dec
sbb
iret
sub
addr16
push
mov
or
fadd
inc
cmp
nop
retf
push
or
adc
lea
jmp
stos
sub
dec
push
jle
or
cmp
popa
cmp
fcomp
imul
dec
ja
push
inc
or
sub
das
inc
inc
test
push
les
push
jo
std
jmp
test
sti
pushf
mov
mov
and
mov
mov
push
(bad)
jmp
pop
cmp
jecxz
mov
and
scas
sub
imul
push
iret
cmp
push
jg
jnp
pusha
sub
in
sbb
mov
mov
xor
and
and
dec
call
jb
ja
cmp
push
lds
nop
push
out
sbb
mov
cmp
or
add
lds
mov
pusha
ins
inc
(bad)
ja
mov
movs
mov
push
xchg
jns
rcr
jmp
push
fcmovnb
push
mov
push
je
lock
mov
into
xchg
mov
aam
lea
call
mov
cmp
mov
mov
push
mov
sbb
jge
cmp
push
je
or
(bad)
push
xchg
sti
not
dec
jmp
fiadd
pop
aam
repnz
outs
inc
mov
mov
push
cmp
repz
mov
xor
mov
sub
mov
leave
push
das
dec
data16
loopne
pop
jl
mov
aas
mov
je
dec
or
xchg
in
retf
(bad)
mov
add
wbinvd
retf
push
outs
lods
add
stc
jmp
fsubr
xchg
or
push
gs
mov
mov
das
add
xchg
pop
cs
iret
mov
cmp
jb
and
addr16
outs
pop
fstp
lds
leave
rcr
fsubr
fbstp
fadd
sbb
dec
pop
cdq
jns
push
jl
pop
jo
xchg
push
jno
adc
mov
fistp
fld
pop
out
cli
fs
ficom
mov
cmp
xchg
push
pop
gs
sti
repz
xor
cwde
shr
test
cmp
popa
sar
lods
sar
(bad)
js
or
adc
sub
cmp
repz
and
xchg
sub
sub
nop
inc
(bad)
pop
jle
stc
stos
stc
pop
pop
std
pop
xchg
lods
adc
pop
pop
int3
(bad)
bound
cmps
xchg
stc
sbb
sbb
mov
je
push
sub
push
fidiv
mov
sbb
sub
scas
sahf
and
loop
jno
int
sti
pop
pop
mov
(bad)
lar
fucom
inc
stos
mov
push
jae
mov
inc
jb
pop
jmp
add
ins
int
cdq
inc
mov
push
xor
xchg
mov
add
dec
outs
ror
or
sahf
and
cmc
in
mov
fsubr
daa
mov
cld
les
loop
jp
add
mov
add
add
push
aas
inc
mov
call
xor
and
inc
fnsave
outs
bound
nop
pop
pop
test
add
cmp
sti
aad
pop
setg
fbstp
test
loopne
(bad)
icebp
pop
pop
push
and
xchg
xor
shl
loop
mov
ror
pop
in
and
or
inc
mov
or
hlt
push
not
adc
cmp
leave
cmp
sahf
inc
jae
sub
sub
mov
cmp
or
cdq
dec
push
cmps
pusha
and
mov
test
addr16
or
sub
mov
arpl
pop
mov
call
movs
or
xchg
frstor
fiadd
pop
idiv
sub
push
mov
inc
push
mov
jp
or
pop
in
jno
inc
add
cmps
pop
pop
clc
(bad)
cmp
push
cld
lods
cmp
adc
mov
xlat
dec
xchg
pop
dec
sub
inc
xor
pop
pop
pushf
fsub
mov
mov
sub
push
jns
sub
sbb
push
push
inc
ret
outs
cli
mov
ins
ds
inc
rol
cmps
mov
jmp
xor
xchg
push
sbb
sbb
popf
mov
cli
call
dec
adc
in
or
sar
fwait
pop
sbb
xor
iret
jbe
mov
jge
push
aad
test
aam
test
xchg
inc
jmp
jg
jns
test
ret
cmp
sub
aas
call
xchg
xchg
mov
jle
call
jne
aas
xchg
pop
fsubr
ja
out
mov
jmp
outs
xchg
or
jnp
push
retf
jmp
and
cld
jmp
sub
mov
push
sbb
ficom
lock
fwait
jge
push
pop
jns
imul
out
fcmovbe
mov
aam
or
or
pop
aam
mov
sub
in
jno
dec
data16
loope
jnp
dec
add
inc
mov
adc
repnz
jae
call
jb
or
pop
call
loop
jg
xchg
or
mov
xor
scas
(bad)
push
inc
cli
stos
xchg
xchg
(bad)
out
or
(bad)
aad
inc
clc
dec
push
jl
pop
aaa
daa
adc
pop
cdq
(bad)
ss
fstp
inc
cmc
jle
jnp
dec
mov
jmp
out
pop
ror
pop
call
sbb
clc
ss
clc
imul
xor
pushf
popa
cwde
or
xor
xchg
push
or
pop
test
jp
and
sub
je
fild
ret
addr16
sub
outs
(bad)
mov
dec
hlt
push
mov
lahf
std
sti
push
test
(bad)
mov
xchg
push
dec
pop
xor
fwait
daa
fiadd
add
fdivr
mov
in
popa
sub
aas
mov
xchg
imul
lods
jb
loop
mov
jne
dec
retf
test
xchg
xor
scas
ins
push
or
or
loop
jp
dec
pop
into
leave
adc
jl
sub
(bad)
fwait
xchg
mov
(bad)
adc
scas
xor
arpl
fs
pop
xchg
loop
lods
inc
test
stos
sbb
mov
iret
mov
mov
pop
mov
mov
scas
xchg
inc
data16
pop
dec
pop
cmp
adc
sbb
push
sbb
add
mov
(bad)
cmp
in
fld
adc
xchg
sbb
sbb
imul
(bad)
jne
or
hlt
imul
sub
std
lea
xchg
push
dec
movs
cwde
push
loop
cmc
pop
lds
inc
not
test
cld
xchg
push
sbb
sub
jge
push
or
mov
shl
inc
add
sahf
hlt
test
pop
inc
dec
jb
out
inc
cld
jb
mov
pop
sub
jno
mov
inc
jp
in
mov
test
dec
sbb
sub
pop
inc
or
out
ja
stos
lods
inc
pop
push
mov
jp
pop
data16
or
pusha
and
sub
mov
(bad)
sub
sti
lds
dec
movs
jecxz
mov
out
in
rcl
out
shl
sub
fisttp
pop
mov
push
xchg
test
or
adc
or
fadd
movs
cmp
sti
mov
jbe
mov
xlat
mov
fs
aam
jae
pop
fild
cmp
mov
sbb
jge
jecxz
rcl
sahf
retf
scas
sub
(bad)
sbb
push
sbb
adc
mov
adc
ins
xor
(bad)
hlt
pop
jns
in
pop
sbb
mov
push
or
jg
(bad)
fwait
pop
cmp
(bad)
out
add
out
jecxz
push
mov
push
inc
mov
xlat
add
mov
(bad)
test
mov
fdivr
test
sub
pop
pop
out
and
outs
cmps
inc
psllw
rol
das
add
jb
mov
arpl
cmp
cli
and
dec
jns
sti
xlat
sbb
ss
mov
push
std
out
or
cld
(bad)
ficomp
lock
dec
mov
dec
ret
xor
sti
adc
mov
out
lds
push
jg
or
or
fadd
ss
add
inc
imul
add
jg
xchg
imul
repz
jne
in
add
in
mov
ins
push
cmp
pop
jl
sbb
jns
xor
div
jl
xchg
jae
push
cmp
sub
xlat
push
jmp
imul
push
inc
icebp
aaa
aam
mov
cwde
jge
in
mov
jns
mov
data16
sub
xchg
les
inc
add
sti
dec
pop
cmp
sub
daa
call
in
dec
xchg
into
fwait
jecxz
mov
retf
cmp
and
mov
xchg
int
and
arpl
sub
xor
repz
fmul
mov
push
push
int
iret
cmp
jle
adc
fcomp
cmp
pop
xchg
xor
xchg
push
das
outs
in
das
in
imul
les
frstor
in
xchg
add
jle
mov
sub
pop
(bad)
jge
jb
xor
outs
push
aad
popf
inc
mov
inc
es
push
mov
repnz
pop
xchg
or
sar
xchg
mov
jl
data16
xchg
pop
shl
xchg
(bad)
push
ds
xor
or
ror
dec
sbb
cmp
icebp
fimul
push
(bad)
sbb
out
ficomp
arpl
jb
jmp
add
xor
mov
push
pop
test
lock
cs
int3
dec
repnz
jecxz
sub
mov
mov
adc
out
pop
jge
pop
sbb
sar
lds
dec
aas
or
je
cs
mov
(bad)
push
sub
rcr
push
inc
xor
stos
mov
ins
xchg
cmc
cmp
in
or
pop
repnz
push
dec
mov
ds
ins
mov
imul
call
and
pop
es
int3
dec
mov
repz
adc
push
gs
sub
cs
xchg
ret
shld
and
adc
push
(bad)
in
jecxz
cmp
loope
es
sub
pop
and
into
test
fsubr
pop
jno
cs
adc
xchg
movs
adc
ror
inc
xchg
dec
push
add
mov
add
in
mov
scas
ja
pop
enter
inc
jge
into
pop
cmc
fidivr
test
and
jo
sti
ret
xor
sub
jne
(bad)
jno
pushf
out
mov
add
mov
xchg
aas
dec
out
and
inc
pop
and
idiv
frstor
xor
mov
xchg
mov
outs
int
mov
mov
mov
div
fidiv
jecxz
scas
hlt
sbb
dec
cmp
sub
sar
lods
(bad)
test
xchg
out
jg
sub
mov
add
mov
hlt
dec
push
jns
or
js
jg
icebp
ja
sbb
shr
ret
mov
mov
mov
fcom
cmp
cmp
mov
mov
aad
hlt
lods
pop
lods
and
push
jns
pusha
push
cmps
xor
push
fucom
adc
dec
fadd
jae
outs
enter
int3
mov
jmp
and
fcomi
sbb
adc
loopne
mov
xor
ins
test
mov
cmp
jmp
dec
mov
ds
ja
sahf
jmp
xor
inc
jae
stc
or
lahf
(bad)
mov
aad
ins
(bad)
xor
add
lods
xor
sbb
enter
jne
inc
mov
(bad)
and
push
add
adc
stos
sub
loopne
sar
adc
fs
xchg
mov
pop
dec
iret
mov
arpl
push
in
mov
into
xor
adc
lahf
rcr
push
sbb
sti
xor
dec
movnti
sbb
push
dec
out
jae
mov
mov
inc
pop
sbb
inc
mov
fs
mov
hlt
scas
xchg
pop
push
mov
fwait
loop
es
mov
mov
cmp
pop
sbb
or
adc
adc
cli
push
sahf
or
mov
lods
jle
call
les
shr
pop
jo
mov
in
lods
mov
inc
xchg
out
cmps
das
int3
lods
add
dec
and
fild
mov
xchg
mov
mov
xor
retf
mov
lea
adc
mov
lods
lahf
pop
dec
push
mov
or
jb
mov
push
js
inc
ret
clc
jp
test
xlat
pop
clc
fcom
jecxz
jg
movs
enter
mov
mov
fisttp
pop
std
jae
adc
pop
push
mov
mov
pop
ja
jmp
and
sub
iret
push
and
jno
imul
adc
xchg
test
and
inc
cmp
mov
mov
mov
or
cmps
sti
addr16
inc
push
push
gs
bound
sbb
fadd
outs
outs
jmp
out
push
lods
dec
stos
icebp
je
enter
jo
mov
in
scas
xchg
mov
(bad)
sub
mov
inc
pop
inc
mov
aas
add
movs
(bad)
scas
lods
cmovnp
ret
cmps
icebp
adc
loop
ss
out
popa
aad
and
jne
int3
cwde
pop
cmova
out
xchg
jo
into
mov
xor
jno
adc
add
push
cdq
mov
js
lods
and
gs
sub
jno
movs
in
stos
out
dec
pop
xchg
pop
ja
call
cwde
dec
xlat
pop
cli
ds
xor
push
mov
mov
cli
lods
mov
shl
fimul
fdivp
retf
dec
pop
xchg
pop
out
adc
dec
adc
ret
fprem1
adc
pop
push
ins
loop
sbb
movs
xor
mov
push
cmps
loop
imul
mov
cmp
sub
mov
loopne
push
outs
ds
and
mov
fbld
fcmovne
scas
inc
add
nop
jae
push
dec
xchg
iret
jmp
fcmovnb
fwait
cmp
ror
jl
mov
dec
ins
bound
push
sbb
aas
lds
jecxz
std
pop
mov
es
or
ins
mov
mov
in
xchg
or
push
inc
std
mov
mov
daa
or
in
lea
sub
fcomi
lds
cmp
fistp
mov
lds
movs
shl
adc
adc
gs
cmps
ret
repz
test
adc
add
and
fldcw
or
xor
mov
or
sbb
adc
sub
xchg
mov
out
mov
and
pop
std
xlat
retf
hlt
icebp
sbb
xchg
cmp
out
cmp
js
pop
enter
push
imul
outs
xor
and
mov
jo
add
cmovle
cmp
lods
data16
or
rcl
das
jp
enter
scas
arpl
mov
add
dec
iret
lock
out
ja
add
push
and
pusha
lds
std
loop
jnp
sub
jg
and
sbb
pop
mov
sub
jo
(bad)
pop
cmp
inc
sbb
sbb
rcl
or
hlt
test
sub
mov
shl
out
and
movs
leave
mov
out
push
add
mov
jmp
int
stos
data16
fisttp
pop
cwde
mov
mov
icebp
adc
call
cli
fwait
sub
or
repnz
aaa
adc
pushf
gs
add
dec
leave
xchg
sti
xchg
ret
aad
sub
imul
dec
sti
sub
out
add
cmp
xlat
cld
mov
dec
mov
hlt
shl
push
cwde
cwde
setl
iret
lahf
call
mov
sub
xor
add
sub
dec
jo
jno
icebp
adc
je
in
dec
jmp
or
pop
sub
cmp
outs
jle
mov
mov
xchg
sbb
jo
xchg
push
mov
and
pushf
pop
ds
adc
fwait
retf
pop
ins
mov
nop
mov
div
push
stc
cmp
stos
ja
in
fisubr
and
add
mov
xchg
lds
jl
sti
int3
jns
into
sbb
mov
mov
pusha
add
test
lahf
(bad)
push
mov
mov
aad
in
rcr
mov
std
cmps
fdivr
xchg
daa
into
dec
lods
inc
sub
clc
shl
stc
lds
dec
std
xchg
stos
call
dec
and
xchg
push
inc
in
or
js
sub
call
inc
arpl
scas
fstp
in
cmp
xor
test
mov
gs
arpl
leave
adc
je
int3
sub
std
shr
sub
sbb
xchg
mov
loop
aas
in
mov
lods
and
bound
bound
test
xchg
ss
popa
xor
test
test
xor
lahf
aam
xchg
shl
jno
pop
stc
pop
mov
popf
sbb
retf
movs
sbb
pushf
in
mov
int
pushf
xchg
inc
jle
(bad)
iret
inc
sub
sub
das
jmp
shl
(bad)
movs
rcr
nop
pop
jns
clc
dec
pop
repnz
xor
(bad)
cmp
mov
out
xchg
out
(bad)
pushw
xchg
jno
retf
sub
and
mov
sbb
inc
test
mov
cdq
cmp
bound
loop
cs
push
sbb
loop
mov
in
cwde
pop
dec
icebp
push
(bad)
pushf
(bad)
push
lahf
popf
stos
inc
xchg
add
sbb
jp
sub
aaa
jbe
mov
sub
jmp
push
mov
dec
and
fisttp
test
rcr
or
pop
stos
cmp
loope
aaa
pop
sub
push
push
or
in
xor
gs
jge
inc
arpl
aad
je
mov
jbe
cmp
(bad)
and
imul
xchg
mov
inc
shr
stos
mov
pop
mov
cmp
aaa
call
xor
adc
repz
out
pop
test
adc
fwait
mov
(bad)
outs
imul
mov
leave
idiv
sub
and
inc
gs
mov
jns
pushf
out
inc
stos
cmc
call
sbb
ret
and
gs
jmp
xchg
sub
ins
mov
mov
aas
xor
add
push
mov
sbb
fdivr
clc
pop
and
jp
mov
ror
xchg
imul
jno
adc
and
jae
sbb
mov
push
xchg
(bad)
lea
lods
sbb
mov
out
imul
(bad)
fild
add
pop
mov
in
jns
inc
jbe
jbe
cmps
mov
aas
(bad)
inc
sbb
xchg
test
push
imul
adc
mov
push
fs
push
scas
bound
xchg
push
mov
xor
fwait
jo
retf
fs
xchg
push
jmp
mov
mov
loop
sub
lods
pop
jp
cmp
les
jmp
loop
push
popf
cmp
(bad)
push
jne
cmps
xor
(bad)
push
push
sub
jo
(bad)
leave
jmp
and
inc
xor
jno
pop
(bad)
sbb
mov
cmps
xor
ror
arpl
mov
test
loopne
add
inc
retf
and
mov
xchg
cmp
adc
dec
test
mov
push
and
popf
sbb
mov
mov
sub
out
dec
lods
ins
push
retf
in
push
and
ret
iret
jmp
xchg
sbb
mov
jmp
add
sti
popf
mov
add
xor
and
xor
sbb
cmp
push
out
lea
daa
push
mov
neg
dec
iret
aam
pop
mov
adc
jmp
xchg
call
push
push
addr16
cmp
xchg
les
jne
pop
(bad)
shl
test
jle
inc
jae
imul
test
and
sar
mov
xchg
or
jle
push
mov
(bad)
stc
jne
jnp
movs
jecxz
loop
cmp
pop
push
bound
add
xor
lock
mov
test
aaa
mov
ja
sbb
xor
cmc
lahf
xor
push
jecxz
mov
popf
cmp
sbb
mov
jbe
dec
xchg
inc
mov
sti
pop
mov
inc
sub
and
movs
arpl
sbb
imul
cmps
cmp
test
rol
enter
or
xor
xchg
jge
sub
mov
mul
dec
aas
outs
test
jecxz
cmp
jle
pop
out
scas
pop
repnz
(bad)
in
mov
daa
lods
outs
dec
or
js
and
jno
mov
pushf
adc
mov
adc
or
rcr
xchg
jns
cmps
ds
mov
add
das
scas
sub
push
(bad)
push
test
push
(bad)
cwde
daa
and
fidiv
jl
mov
in
aam
popa
jb
iret
les
jge
push
mov
call
inc
push
cmps
pusha
push
mov
sub
mov
aaa
cmp
push
mov
nop
inc
inc
cld
mov
(bad)
jb
std
ds
dec
xor
cmp
nop
mov
sub
dec
sub
jb
sub
ret
(bad)
in
push
xchg
sti
cmps
ins
pop
pop
cmp
in
mov
iret
not
mov
dec
push
fnop
jbe
jno
jecxz
imul
jg
div
push
push
adc
xor
movs
jmp
jae
mov
inc
sub
clc
mov
loop
cwde
sub
leave
cmps
inc
sbb
arpl
pop
retf
jl
dec
ret
pop
xchg
mov
mov
aam
int
mov
xlat
push
jmp
or
jne
(bad)
mov
(bad)
mov
out
fiadd
jnp
das
cmc
jg
mov
or
push
sub
retf
jp
jg
shl
cwde
adc
(bad)
jp
movs
psrlw
sbb
xchg
mov
jp
retf
cs
xor
mov
mov
mov
push
pop
pop
xor
mov
lock
call
fsincos
fstp
scas
sbb
inc
sub
xor
push
imul
ficomp
(bad)
mov
xlat
mov
and
or
push
inc
and
xchg
dec
retf
add
outs
adc
clc
mov
mov
std
adc
(bad)
jb
xor
mov
adc
popa
rol
jne
mov
push
push
(bad)
lahf
in
jnp
enter
or
stos
push
je
test
fist
test
outs
add
cmp
je
dec
test
in
sbb
push
xlat
dec
test
daa
push
dec
(bad)
add
div
stc
sti
clc
mov
mov
adc
pusha
or
(bad)
jns
mov
pushf
(bad)
shl
mov
sbb
sub
jo
and
cmc
push
cmp
stc
int
cwde
xor
ret
outs
cmp
fptan
ins
fcomi
or
inc
ja
ror
mov
dec
mov
int
ins
pop
movs
jmp
mov
dec
mov
dec
ins
cwde
cmp
dec
add
(bad)
mov
jl
retf
adc
shl
xchg
(bad)
int3
sahf
jno
jg
sbb
mov
mov
icebp
data16
inc
adc
ds
mov
int
scas
mov
push
cmp
clc
jb
int3
ret
cmp
sar
cmc
hlt
mov
xor
push
mov
int3
rol
pop
cmp
scas
test
scas
cmp
cmps
mov
mov
dec
int
xor
and
(bad)
scas
jle
push
jo
or
scas
jo
pop
out
in
adc
aam
push
sbb
lahf
sbb
xchg
mov
nop
and
outs
jne
sbb
stos
pop
sub
cmp
xor
cmp
mov
shl
push
jbe
mov
hlt
cmp
push
pop
push
stos
push
and
jl
fisub
dec
pop
imul
add
es
aam
cmps
push
daa
fcmovu
sbb
mov
sbb
and
inc
daa
adc
xchg
out
push
push
add
ins
jmp
imul
aad
pop
shr
xchg
pop
btr
xchg
pop
and
mov
popa
and
jecxz
imul
push
or
adc
xor
or
push
mov
retf
cmp
(bad)
push
pushf
push
ins
add
fdivp
adc
les
sub
push
arpl
mov
xchg
jbe
js
add
push
std
xchg
and
pop
test
popa
xchg
xchg
leave
dec
push
mov
ja
cmp
(bad)
jne
iret
pop
(bad)
jl
shl
sub
(bad)
xor
pop
and
inc
lock
xchg
jno
lahf
retf
pop
enter
push
into
(bad)
jne
add
xor
dec
test
mov
aam
adc
sahf
(bad)
fld
into
and
sbb
mov
arpl
and
mov
cli
ds
out
xchg
mov
arpl
es
push
xor
inc
pop
or
in
fidivr
mov
pop
outs
out
(bad)
mov
lods
inc
mov
push
pop
cld
rcl
pop
cld
rcl
and
int
dec
sub
inc
push
popa
cmps
movs
out
pop
sub
test
mov
das
and
and
das
stos
in
cli
popa
dec
jns
outs
cwde
in
in
jg
jmp
cli
clc
mov
jmp
inc
iret
inc
mov
mov
cmc
jmp
pushf
pop
mov
adc
or
jo
retf
cmp
clc
pop
mov
push
into
loope
inc
sub
repnz
jnp
push
jnp
mov
fsubr
cmp
cli
push
or
xchg
icebp
pop
test
push
mov
mov
dec
inc
popf
ja
mov
rcr
retf
inc
es
ss
xchg
jne
push
stc
push
mov
loop
rol
pop
sub
dec
stos
dec
xor
ja
mov
ja
sub
cmc
repz
adc
aam
xor
or
jno
clc
or
stos
aam
retf
add
and
mov
or
addr16
mov
call
fldcw
scas
or
jno
lods
inc
dec
mov
sbb
inc
mov
jo
dec
lock
std
out
mov
or
dec
dec
xor
mov
cmps
ja
push
xor
out
(bad)
jnp
push
lods
sahf
jbe
bound
sub
adc
cdq
das
sub
(bad)
rcl
push
dec
push
int3
jp
push
pop
and
fldl2t
sbb
lods
std
dec
mov
mov
jmp
xchg
mov
inc
mov
mov
in
jne
dec
lea
push
xor
adc
mov
cld
ror
pop
ret
push
sub
xchg
ins
or
les
adc
in
xchg
das
dec
test
nop
pop
xor
push
out
cmp
sar
(bad)
sbb
scas
jno
shl
lods
ret
(bad)
sub
aam
mov
pop
fs
fcom
std
call
aas
shl
mov
xchg
inc
in
mul
fs
cmp
add
or
adc
icebp
adc
ds
daa
jno
jg
hlt
or
pusha
scas
shl
arpl
jno
enter
out
iret
in
mov
aad
inc
iret
push
push
xlat
push
inc
rcr
inc
dec
mov
or
movs
nop
data16
mov
enter
ret
lods
inc
mov
dec
xor
pop
push
out
mov
out
cdq
mov
or
add
loope
in
xlat
movzx
adc
hlt
into
mov
mov
mov
pop
jmp
dec
jg
pop
mov
xchg
push
stos
jns
cmps
xchg
mov
and
sbb
sbb
outs
jns
stos
cwde
into
cmp
loope
sbb
in
pop
(bad)
gs
call
jle
xchg
movs
stos
mov
or
retf
jbe
lea
not
(bad)
not
jo
mov
in
sahf
loop
xchg
sub
call
ds
add
mov
push
xchg
inc
cli
fisub
fmul
repz
xor
icebp
xchg
xor
hlt
push
sbb
push
scas
aaa
jae
scas
or
cld
(bad)
outs
dec
cmp
aaa
aad
jo
sub
scas
(bad)
int3
and
nop
fwait
mov
daa
pop
mov
mov
aam
adc
jo
stos
bound
adc
popf
add
dec
ret
mov
jo
xchg
mov
xchg
call
push
in
mov
xchg
inc
fld
mov
cmp
xchg
add
retf
sbb
shr
push
dec
adc
or
inc
or
nop
out
push
jmp
and
and
sub
cwde
pushf
xor
pop
int3
jl
outs
in
test
and
mov
pop
mov
dec
out
(bad)
dec
outs
not
push
jne
inc
fidiv
imul
popa
inc
xchg
es
stc
xor
pusha
repnz
xor
jg
in
hlt
pop
xchg
hlt
fbld
rcl
fdiv
repnz
scas
enter
outs
shl
jo
jae
je
xchg
sbb
adc
and
int
pop
les
shr
inc
pop
imul
lahf
dec
pop
mov
es
add
push
mov
retf
mov
xchg
les
call
and
sbb
and
jo
into
iret
and
bound
loop
fst
xor
pop
push
jle
sti
mov
jl
shr
dec
cmc
ja
jno
push
push
xchg
sti
xlat
test
push
inc
addr16
cli
pop
mov
mov
int
sti
aam
stc
int
int3
sti
jp
xchg
movs
pushf
lds
ja
push
shr
fisubr
jo
cmc
(bad)
push
inc
sub
or
mov
add
(bad)
cmps
jg
fdiv
into
out
out
push
adc
out
sub
outs
loop
xor
(bad)
mov
fdivr
pop
(bad)
fistp
add
pusha
jno
or
jp
fdiv
xchg
call
push
inc
(bad)
retf
std
ret
rcr
push
int3
sti
pop
sbb
out
sbb
jle
call
fdiv
mov
bound
test
or
fwait
mov
sub
aad
out
loope
push
es
push
jne
inc
inc
(bad)
out
movs
jecxz
fdivr
aas
ret
cmp
mov
(bad)
adc
push
test
dec
outs
sub
push
pop
cmp
push
cmp
ins
inc
inc
bound
sub
and
cli
xchg
inc
hlt
mov
inc
mov
pop
adc
shr
add
ds
sub
pop
xchg
lea
push
adc
xchg
jmp
ss
xor
push
cld
and
dec
out
hlt
rcr
xchg
daa
fldcw
mov
ins
or
add
dec
shr
xchg
inc
cmp
lods
cmp
mov
and
or
mov
imul
jp
lods
mov
mov
dec
gs
das
je
cmp
dec
pop
pop
dec
mov
icebp
mov
pop
stc
out
inc
jle
mov
inc
mov
push
daa
cli
repz
arpl
push
arpl
and
(bad)
out
imul
xor
cmp
fisubr
pop
ja
imul
push
mov
call
out
mov
cmp
mov
lea
cmp
add
and
in
cli
jecxz
(bad)
and
or
imul
fdiv
or
push
cmp
outs
nop
xlat
or
fild
push
adc
adc
arpl
mov
xor
pop
aas
pushf
mov
in
out
(bad)
into
clc
push
pop
icebp
push
clc
rol
les
fisub
fidivr
push
mov
xor
repnz
push
dec
xchg
(bad)
pusha
movs
(bad)
push
mov
lods
je
mov
mov
fwait
mov
addr16
repnz
cmp
cld
imul
in
cld
mov
ds
sbb
mov
adc
aas
pop
push
or
stos
jae
jnp
shl
mov
sbb
push
jo
jge
mov
mov
sub
das
add
(bad)
adc
popa
arpl
pop
xchg
hlt
push
les
mov
loopne
cli
inc
loopne
inc
rcl
out
pop
xchg
mov
and
call
push
sbb
enter
dec
das
movs
pop
sbb
dec
out
daa
fisttp
sub
loop
add
xor
cmps
test
dec
mov
popa
lock
rcl
ret
nop
add
in
push
cmp
lahf
es
int
inc
mov
push
sub
call
push
push
inc
mov
mov
mov
inc
cld
jb
popf
fs
jg
mov
jmp
mov
dec
fsubr
inc
sub
cld
jge
lods
xchg
mov
fstp
iret
xchg
stos
sbb
fmul
jmp
mov
add
lahf
xchg
pop
xor
cmp
mov
jge
or
sbb
outs
cwde
mov
xlat
sbb
movs
lods
retf
out
pushf
pop
inc
call
lahf
xchg
iret
xchg
out
mov
popf
sar
test
push
xchg
je
push
jo
stos
lahf
arpl
je
dec
push
and
mov
mov
mov
popa
out
out
movs
int3
fdivr
lock
sbb
shr
cmp
sbb
mov
jge
mov
out
jle
rcl
scas
mov
ret
(bad)
pop
out
mov
cmp
xor
mov
fbld
xor
mov
fcomp
xor
inc
jno
sti
mov
and
inc
mov
imul
sub
outs
mov
out
sti
add
sub
test
adc
out
pusha
neg
and
data16
or
test
sti
popa
adc
fcomp
in
dec
lock
xchg
outs
std
sub
(bad)
(bad)
sbb
(bad)
out
stos
cdq
test
or
add
inc
sbb
mov
popa
adc
nop
retf
in
sbb
xchg
cwde
enter
pop
xor
and
test
xchg
xor
dec
push
aas
xlat
dec
cli
pop
dec
mov
inc
popa
cmps
pop
and
leave
jg
cmps
pop
fldenv
in
and
xchg
mov
mov
and
out
enter
xor
mov
xchg
scas
ret
adc
push
cmp
retf
lods
or
xchg
imul
push
scas
push
(bad)
xor
sub
sbb
fisttp
cmp
mov
cli
mov
fs
retf
pop
fstp
(bad)
sbb
rcr
jmp
cmp
mov
in
jo
hlt
or
adc
ss
cmp
(bad)
jecxz
jns
ss
inc
cli
(bad)
nop
cmp
sub
movs
or
push
(bad)
mov
jno
(bad)
(bad)
stos
ffreep
dec
push
mov
addr16
retf
sar
pop
idiv
ror
or
ds
pusha
cmp
add
xchg
mov
(bad)
sub
push
mov
adc
dec
push
pop
sbb
mov
jecxz
cld
ret
out
call
cld
ins
out
sub
mov
not
or
mov
push
std
int3
fs
(bad)
mov
pusha
movs
bound
setge
imul
jno
pop
subps
nop
or
das
cmp
mov
enter
pop
jle
sbb
sub
mulps
push
popf
into
adc
inc
cli
mul
pushf
je
mov
or
and
mov
jp
mov
sub
pop
or
and
jge
add
mov
mov
xor
pop
inc
and
sar
mov
and
lods
xchg
cdq
or
scas
add
imul
sbb
push
push
call
dec
shl
fcmovb
and
pop
add
jo
push
push
das
adc
push
stc
jmp
push
or
inc
(bad)
in
push
ins
imul
sub
js
xor
dec
mov
fstp
inc
jmp
sbb
mov
mov
or
push
or
xchg
xchg
test
rcr
gs
jo
in
and
mul
xor
fwait
add
adc
out
bound
sub
cmps
adc
add
jne
sub
add
cdq
sbb
push
loop
mov
xchg
in
mov
sbb
fstp
jge
out
aas
sub
mov
jmp
jmp
nop
retf
ins
clc
lods
std
push
xchg
push
adc
out
mov
clc
xor
sahf
pop
mov
inc
nop
xchg
push
in
scas
movs
sub
scas
(bad)
vmovapd
jp
and
cmc
out
std
retf
jle
idiv
pop
cmps
sub
mov
enter
dec
sbb
int
jl
(bad)
jecxz
fisubr
or
inc
cli
fcom
xchg
mov
movs
mov
mov
lods
loopne
inc
inc
add
mov
and
xchg
cmp
pop
repz
xchg
add
popf
jae
pop
mul
and
sub
in
pop
retf
mov
test
sahf
sar
sti
pop
mov
dec
inc
sub
pop
retf
xchg
test
ret
adc
jo
adc
xchg
xchg
ds
mov
mov
xor
cmc
jle
jle
xor
movs
dec
inc
inc
or
push
int3
lock
ret
push
ja
add
stc
mov
jmp
loop
ins
or
mov
sub
xchg
cmps
mov
call
fisub
rcl
rcr
push
cli
pusha
dec
mov
ja
in
mov
add
xchg
push
cmps
cmp
neg
mov
sbb
call
out
je
les
shl
pusha
dec
push
das
ror
sbb
push
xchg
push
add
adc
mov
jno
jbe
mov
sub
sub
jl
addr16
pop
inc
push
adc
out
jmp
int
push
cwde
test
cmp
inc
out
(bad)
icebp
cmp
pop
bound
add
mov
mov
stos
add
lds
fstp
outs
rol
adc
pushf
or
fld
xchg
loope
adc
retf
mov
dec
dec
scas
push
jmp
sbb
out
cmp
sub
sub
mov
popf
add
dec
gs
das
mov
pushf
clc
mov
(bad)
xor
jle
inc
int
jl
mov
jno
fist
dec
imul
pushf
mov
call
leave
aam
add
add
ja
ja
retf
cmp
(bad)
cmp
lahf
dec
ss
out
inc
aaa
mov
pop
retf
aaa
push
fmulp
movs
mov
lock
or
fcmovnb
iret
mov
or
dec
test
dec
rdseed
or
adc
add
jmp
cld
arpl
and
xchg
mov
add
and
fild
jo
movs
fnstenv
fst
shl
cli
fldz
mov
xor
lahf
pop
test
pop
mov
stc
sub
pop
lods
add
movs
dec
aad
sub
je
push
stos
test
pop
mov
mov
cwde
cmp
js
mov
js
mov
jp
sbb
xchg
data16
shr
xchg
repz
jl
in
pop
push
mov
xchg
shr
sbb
add
mov
push
addr16
(bad)
neg
rcl
add
jns
fcmovb
or
shr
inc
iret
jmp
xor
icebp
dec
inc
pop
push
neg
sub
sahf
retf
mov
jo
jp
pushf
popa
jecxz
cwde
push
xchg
inc
ss
popa
out
fcomp
int
push
fadd
add
aaa
xchg
and
test
and
movs
mov
cmps
(bad)
stc
lods
jg
cwde
ror
sub
cmp
add
sbb
pop
aam
addr16
imul
pushf
sub
cdq
sbb
mov
mov
loop
and
and
and
cdq
shr
out
es
leave
call
fisttp
jecxz
inc
pop
test
mov
mov
jno
xchg
adc
repz
inc
jbe
mov
xchg
push
sbb
dec
push
scas
sbb
cmp
jbe
pop
cmp
imul
das
pop
dec
adc
push
shl
pusha
mov
lods
pop
cs
fstp
adc
imul
sar
inc
pusha
mov
push
sar
stos
jge
push
sub
ror
lahf
mov
adc
jg
dec
lods
xor
fstp
inc
pop
xchg
lea
mov
sbb
mov
aam
ins
push
mov
mov
xchg
pop
sbb
or
test
add
mov
and
jecxz
sub
aas
jb
sbb
mov
es
xchg
lahf
stos
dec
(bad)
fadd
push
mov
hlt
aas
(bad)
jns
pop
dec
icebp
mov
inc
data16
push
faddp
int3
cmps
sub
ins
dec
lea
xchg
sub
in
mov
hlt
pop
sub
jmp
lahf
mov
inc
add
mov
mov
xor
or
mov
(bad)
int3
(bad)
icebp
loopne
stc
mov
dec
xchg
sub
mov
lods
in
push
mov
test
add
dec
ret
xor
data16
sub
cwde
mov
hlt
add
test
mov
xchg
repz
neg
loop
ds
in
jmp
xor
cld
lahf
lea
stc
mov
sbb
mov
add
in
call
cmp
dec
adc
popf
inc
bound
xchg
push
mov
cli
jae
or
iret
div
loope
shld
(bad)
and
(bad)
out
xlat
nop
(bad)
aaa
xchg
sub
call
cmp
jo
shl
int
aaa
aam
adc
test
outs
mov
mov
push
into
jle
in
ds
fucomip
ror
xchg
push
xor
mov
scas
lock
mov
fs
neg
jmp
cmc
push
push
add
aas
shr
add
pop
stc
dec
add
cmp
xchg
out
cdq
jle
ja
sub
jmp
ins
pop
jge
out
scas
rol
mul
sbb
push
fisttp
mov
sar
mov
std
sbb
ret
fst
jb
push
inc
test
lds
mov
jp
and
push
cli
inc
cmps
outs
xchg
push
adc
jp
mov
das
sbb
shl
or
mov
loop
sub
push
int3
and
call
add
ret
movs
sub
xchg
xchg
push
xlat
mov
les
mul
out
(bad)
lds
mov
mov
dec
mov
ret
retf
in
xor
loop
jmp
dec
daa
mov
(bad)
in
sbb
fidiv
mov
and
mov
adc
push
aad
add
mov
and
inc
arpl
mov
mov
add
sub
jge
aas
adc
xor
stos
imul
or
(bad)
aad
outs
xchg
dec
leave
sub
mov
dec
dec
dec
push
(bad)
or
iret
aad
push
push
sub
xchg
and
popf
jno
jnp
cmp
iret
add
sub
sub
sahf
mov
mov
mov
gs
mov
repnz
nop
movs
push
rol
(bad)
in
popf
sbb
cli
bound
not
jae
push
xor
(bad)
mov
fwait
pop
cmps
movs
je
gs
out
idiv
cmc
retf
int
xchg
mov
xchg
add
ss
jecxz
call
xchg
je
xchg
and
ds
punpckhbw
idiv
(bad)
fsubr
shr
enter
stc
imul
or
jns
jb
fild
cwde
jmp
pop
mov
stc
sbb
lods
(bad)
out
pop
leave
mov
popa
xchg
repz
jo
sub
xchg
mov
mov
dec
xor
adc
dec
stos
push
cwde
in
dec
and
jnp
js
xor
adc
mov
push
lock
push
jae
xchg
daa
jb
fwait
or
retf
xor
adc
adc
push
stos
push
mov
clc
and
(bad)
scas
movs
(bad)
in
xchg
sbb
pop
push
arpl
mov
call
psubb
xchg
jge
out
dec
ins
arpl
sub
std
dec
xor
neg
loope
mov
sub
adc
cmc
mov
loope
adc
mov
out
add
int
outs
inc
mov
mov
sub
addr16
mov
pop
pop
daa
push
test
xlat
out
test
lahf
out
sbb
or
xor
es
fld
jge
and
mov
jl
ss
shr
popa
imul
and
repz
adc
or
mov
jns
mov
and
outs
call
loopne
jne
add
adc
mov
scas
outs
mov
pop
out
inc
mov
loope
sub
out
or
xchg
sar
jmp
jns
sbb
std
or
add
ret
inc
imul
and
rcl
jg
mov
add
cld
sub
pop
pop
pop
cmp
xor
adc
aas
jle
add
inc
jg
not
or
push
push
dec
cmps
icebp
loope
(bad)
ficom
fld
aad
jne
test
(bad)
push
cdq
enter
mov
sub
cdq
mov
mov
rol
js
outs
jecxz
mov
xor
inc
dec
mov
rcr
(bad)
ror
aad
jle
dec
mov
xchg
add
loope
outs
and
or
dec
sub
sti
repnz
stc
xor
aaa
dec
xor
xchg
cmp
push
movs
and
mov
xor
xchg
sbb
rol
push
outs
xchg
cmp
int
and
jp
sub
mov
repz
and
xchg
pop
repnz
mov
dec
pop
and
pop
sub
and
dec
and
(bad)
ins
xor
ja
mov
cmps
mov
imul
add
pop
mov
and
push
dec
scas
iret
pushf
xchg
test
in
cdq
add
sbb
sti
mov
out
lea
mov
xchg
cmp
data16
pop
jecxz
je
(bad)
pop
adc
cmp
sbb
xor
sbb
shl
jecxz
pop
push
hlt
stos
mov
ror
sub
or
pop
mov
es
and
pop
inc
cmps
inc
push
out
sub
fs
(bad)
jp
popa
aam
mov
(bad)
xchg
jle
push
sub
cmp
inc
jbe
sbb
fcomp
leave
xchg
mov
mov
inc
jo
arpl
pop
mov
cmp
mov
rcr
xor
or
adc
jb
cmps
jle
fbld
mov
add
mov
retf
sbb
ins
hlt
in
adc
sub
dec
dec
fcmovnbe
imul
push
scas
push
(bad)
jae
sub
aad
test
push
mov
cli
loop
inc
push
stc
mov
mov
stos
jnp
jnp
sbb
pop
jle
leave
push
sbb
mov
test
sbb
popf
cdq
aas
xchg
dec
clc
out
xchg
stc
or
out
frstor
out
fwait
leave
adc
out
repz
pop
adc
je
idiv
int3
dec
arpl
push
mov
gs
jl
fcomp
shr
bound
in
clc
xor
and
jmp
mov
sub
xchg
add
or
out
aas
test
imul
push
aad
jne
dec
inc
dec
cmps
or
mov
mov
lahf
into
jle
lds
mov
in
xchg
test
mov
icebp
mov
or
fdivr
or
js
call
adc
nop
jecxz
addr16
push
dec
mov
ret
add
iret
add
mov
xor
daa
adc
xchg
movs
dec
mov
imul
out
mov
aam
push
jp
jge
repz
inc
lods
dec
(bad)
mov
movs
sahf
pusha
jmp
jo
add
shl
xor
in
cdq
out
dec
and
cmps
xchg
cmp
popa
fnstenv
inc
(bad)
lds
je
ins
sar
jns
add
adc
retf
mov
push
pop
popa
fwait
push
jmp
das
add
in
out
xor
or
mov
mov
and
ja
mov
stos
adc
div
jb
loope
fs
je
adc
xor
dec
or
repz
pop
ja
pop
inc
and
cwde
pop
dec
inc
or
fcomp
and
mov
mov
dec
hlt
retf
xor
or
enter
inc
rol
cmps
dec
cmp
or
movs
cmp
cmp
lds
xor
xor
scas
(bad)
jns
jb
mov
push
call
push
push
pop
sbb
rcr
jmp
mov
sbb
(bad)
mov
xchg
ins
jae
test
popa
sub
mov
jecxz
ror
test
xchg
mov
cwde
sbb
loop
xor
adc
push
out
jne
jno
add
les
or
sar
xor
repz
repnz
jae
push
fisub
loopne
pusha
imul
cli
cwde
pop
ss
push
adc
pop
sub
mov
pop
stc
scas
mov
jecxz
pop
out
pop
and
dec
jmp
push
js
jbe
outs
test
pop
(bad)
push
xor
push
jo
fmul
in
dec
repnz
xchg
cmp
xchg
sub
jns
cmp
iret
test
sbb
push
rol
rcr
int
jecxz
inc
pop
cwde
call
cli
pop
ret
cli
lea
mov
out
xchg
adc
dec
ds
in
push
and
mov
mov
cmps
mov
and
ja
out
mov
fcomp
aam
retf
enter
cdq
sub
ss
nop
mov
aaa
jp
dec
or
cdq
test
int3
inc
clc
cmps
xor
cmps
mov
mov
push
packuswb
mov
pop
sub
xchg
(bad)
jnp
push
fwait
pop
jle
sahf
pushf
scas
xor
aad
inc
dec
jo
ss
mov
call
fdivr
add
clc
sahf
cmps
adc
mov
jno
pop
mov
sub
cmps
addr16
(bad)
xor
cs
in
jae
shl
int3
and
push
add
ss
scas
ficom
ja
lock
ja
jmp
cmp
inc
and
inc
rol
movs
ret
push
in
dec
pop
loope
(bad)
cmps
mov
sbb
mov
in
jo
inc
stos
xlat
xchg
(bad)
mov
mov
add
xchg
div
pop
mov
std
mov
mov
xor
mov
or
ficom
les
sub
pop
js
and
fadd
cli
out
push
out
cs
bound
aas
jae
in
rcr
lds
inc
inc
adc
scas
jmp
xor
loopne
outs
ja
push
sar
push
jb
lods
jbe
sub
(bad)
out
push
mov
ror
in
inc
loope
stos
pop
pushf
ret
sbb
stc
call
aas
inc
daa
push
popf
xor
cmp
xor
in
retf
in
pop
leave
aas
xchg
sub
pop
out
lods
icebp
and
aaa
xor
xchg
fnstcw
xchg
mov
cdq
dec
outs
nop
inc
(bad)
pop
cmc
sub
pop
sub
sub
les
dec
outs
test
xchg
clc
xor
sar
ins
sar
sbb
cmc
sbb
test
lods
cli
cdq
rcl
sbb
jbe
inc
lods
sub
retf
xor
jmp
fistp
push
jge
sub
mov
add
or
sbb
push
stos
aas
fchs
dec
outs
push
mov
or
test
fwait
and
cmp
fisttp
push
(bad)
xchg
jecxz
mov
cs
xchg
in
mov
pop
or
mul
loope
cmp
lds
pop
inc
add
inc
or
xchg
js
cmps
rcr
and
pusha
sub
movhps
lds
nop
cmp
ror
lods
test
inc
sbb
out
sbb
add
adc
pusha
pop
inc
(bad)
movs
pop
cdq
push
xor
mov
and
movs
pop
inc
add
mov
sub
push
std
ret
or
call
into
cdq
(bad)
mov
imul
jns
outs
out
arpl
inc
pop
movs
and
add
jp
dec
cmp
mov
ret
add
repz
adc
outs
test
in
xor
cmp
int3
out
int3
repz
mov
pop
mov
test
xor
sub
dec
fistp
hlt
cmp
and
xchg
stos
adc
mov
mov
retf
test
into
inc
add
ds
(bad)
stos
sub
mov
retf
inc
dec
jno
outs
pop
popa
shr
jmp
mul
xor
hlt
out
je
xchg
outs
xor
xor
cmp
inc
push
cwde
xchg
repz
movs
aad
pop
fisub
sbb
rcr
icebp
xchg
mov
lea
dec
push
dec
sbb
cmp
and
outs
int
push
xor
addr16
inc
lock
mov
(bad)
pop
lods
push
pop
out
jbe
popf
test
jg
xor
xchg
into
xchg
dec
sbb
mov
fwait
add
xchg
divps
arpl
pop
in
cmp
outs
daa
mov
out
and
cmp
cmps
lahf
cmps
movs
cdq
sar
test
push
cdq
adc
test
inc
mov
mov
out
sbb
fild
(bad)
es
push
and
addr16
pop
mov
mov
movs
popf
xchg
pop
test
lock
jae
xor
push
jns
mov
or
out
sbb
mov
sbb
mov
mov
fsub
cs
retf
into
out
shr
add
sti
repz
mov
inc
push
call
movs
pop
mov
in
mov
dec
(bad)
ret
or
inc
call
push
and
inc
add
pop
mov
jo
mov
push
test
pusha
and
push
sti
imul
pop
aad
out
or
jae
in
and
or
mov
aad
aam
fld
or
inc
test
iret
xchg
lods
inc
inc
iret
pop
mov
inc
(bad)
jg
rol
aas
mov
mov
sbb
test
sub
repz
adc
cmp
test
imul
inc
xchg
hlt
mov
rol
or
dec
gs
nop
sbb
icebp
add
scas
std
mov
xchg
div
jg
or
jp
sbb
fwait
shl
mov
push
sub
out
(bad)
ss
cmps
or
mov
int3
push
not
add
and
and
addr16
fadd
cmps
in
sbb
xchg
fstp
and
add
les
jb
add
out
ds
and
add
(bad)
mov
jnp
xor
jecxz
mov
xchg
in
test
pusha
push
cmp
imul
xor
add
enter
xchg
out
cmp
inc
sub
retf
push
ret
jae
add
popa
int3
xor
push
inc
stc
fisttp
or
js
sahf
cmc
jns
or
cmp
cld
mov
ds
gs
xlat
mov
(bad)
push
or
cmps
out
outs
inc
xlat
dec
mov
ficomp
into
mov
mov
rcr
ror
adc
iret
dec
in
leave
or
adc
retf
psubq
xor
bound
out
pcmpeqb
inc
(bad)
iret
sub
mov
rcl
scas
aam
mov
pop
mov
mov
ins
cwde
xor
je
mov
out
add
test
mov
and
fld
daa
xor
jle
jbe
out
aam
retf
fst
imul
test
xor
push
pushf
leave
(bad)
lahf
pop
rol
cmps
mov
aam
pop
ret
or
loop
sub
sti
ins
rcr
jmp
aas
inc
stc
adc
xor
(bad)
dec
xor
stos
in
sub
icebp
fsubr
sbb
push
sub
repz
aaa
cld
dec
rcl
test
aam
push
inc
mov
stos
mul
(bad)
pop
outs
mov
dec
mov
or
mov
sbb
inc
loopne
add
movs
pop
cmps
shl
push
or
ficom
add
ss
mov
cmps
mov
add
ins
in
out
xor
cmp
xchg
sub
loop
int3
and
cmp
data16
fisttp
xchg
in
jns
push
je
xor
and
out
cwde
and
scas
jae
pushf
cmc
jl
sbb
popa
inc
sahf
ins
sbb
fs
mov
fisub
push
mov
cmps
and
xor
leave
sbb
push
arpl
mov
adc
xchg
push
fnstenv
nop
inc
add
inc
lahf
push
xor
jg
adc
test
mov
cdq
sahf
mov
pop
ret
mov
dec
lds
add
mov
(bad)
jle
or
push
fwait
(bad)
enter
lea
daa
aas
in
cmp
inc
out
call
lahf
cmp
inc
sbb
daa
or
mov
fnstcw
div
rcr
shr
jl
jbe
adc
push
jge
adc
loop
fs
mov
pop
in
arpl
or
(bad)
xor
xor
cmp
std
ins
and
mov
js
mov
jb
or
jp
retf
cmps
adc
mov
scas
repnz
rcl
repz
mov
popa
push
and
clc
inc
repnz
fnstcw
xchg
add
or
lods
mov
dec
jge
xor
call
aaa
ret
sbb
fs
ins
cmp
push
pusha
fistp
shl
and
jbe
int3
icebp
xor
xchg
aad
xchg
scas
push
jne
mov
fwait
ss
inc
(bad)
rcl
cmp
clc
retf
push
mov
out
cmp
scas
loop
in
gs
imul
sahf
add
add
(bad)
int
mov
(bad)
jl
xor
and
jne
mov
cmp
jbe
rcr
or
inc
mov
sub
shl
imul
loop
lock
imul
pusha
div
pop
sti
mov
out
pop
call
or
sub
test
loopne
int3
ins
pusha
pop
sub
and
cld
js
stos
out
jbe
cmp
retf
mov
cmp
imul
mov
jg
mov
sbb
push
adc
mov
dec
mov
xor
xchg
pop
add
jae
push
jle
pushf
dec
(bad)
call
fdivr
repnz
sbb
shr
shr
xor
int3
push
cmp
xlat
pop
fs
cmp
shr
cmp
mov
and
(bad)
gs
xor
cmp
xor
cdq
adc
cli
adc
leave
cmp
stc
push
aad
aaa
loop
mov
cmp
add
or
pop
daa
inc
adc
jmp
inc
pop
xchg
daa
mov
test
icebp
pop
jo
daa
in
mov
pusha
push
imul
mov
data16
sub
sub
or
push
addr16
mov
test
xchg
inc
mov
nop
fadd
aaa
fist
dec
mov
jns
stos
gs
popa
push
es
add
and
add
cmp
ins
push
pop
sbb
mov
out
into
jae
mov
sub
fcmovnu
popa
or
inc
lods
add
and
jmp
loop
mov
icebp
add
jmp
dec
xchg
scas
stos
lock
mov
adc
pop
xchg
scas
jns
popa
pop
aam
ret
mov
or
pop
in
inc
cdq
enter
xchg
and
ret
push
in
hlt
movs
outs
imul
and
push
fs
popa
inc
xchg
mov
pop
in
(bad)
clc
adc
outs
mov
pop
call
pop
pop
out
push
and
push
aaa
jg
mov
xor
fcmove
ficomp
jge
popa
add
loopne
or
sub
mov
cs
sti
daa
dec
repnz
mov
out
aaa
stos
icebp
xor
xor
cwde
pop
inc
jle
xchg
shl
jle
scas
cmps
pop
lahf
sbb
std
popa
and
out
popf
es
aaa
and
sub
pop
cs
xchg
addr16
call
in
inc
xor
cli
sti
retf
add
adc
test
clc
fisttp
rcl
lea
neg
dec
js
test
xchg
js
and
(bad)
test
cs
mov
push
and
icebp
test
(bad)
enter
lods
push
(bad)
pop
jle
adc
mov
ins
in
daa
bound
sub
mov
pop
adc
(bad)
dec
arpl
clc
jge
jmp
jns
adc
scas
sub
cmp
push
mov
sub
inc
and
mov
mov
mov
stc
hlt
fwait
(bad)
clc
sbb
retf
call
lock
fist
ins
inc
mov
test
jge
push
jnp
ret
(bad)
imul
xchg
fwait
mov
xchg
pop
mov
or
xchg
mov
jecxz
pop
add
test
lods
push
jnp
dec
adc
fs
mov
sub
nop
imul
or
or
jl
je
pop
in
cmp
(bad)
out
out
mov
and
aas
test
in
push
push
movs
movs
xchg
add
ins
mov
cs
mov
dec
add
jle
aam
adc
and
mov
in
shl
push
lods
push
push
fcomp
inc
sti
out
dec
jge
lods
std
or
or
or
push
mov
add
xchg
mov
outs
sbb
bound
mov
ror
icebp
sbb
jg
xchg
cmp
into
inc
cld
dec
adc
pop
push
sub
dec
inc
hlt
nop
pop
lahf
or
or
in
arpl
adc
lds
adc
add
mov
mov
mov
popa
xor
add
sbb
jbe
in
add
jl
pop
imul
fiadd
sub
rcr
leave
xor
pop
retf
cs
push
stc
je
push
xchg
les
xchg
ins
sub
loope
test
imul
push
outs
fsubr
in
and
jae
and
mov
cmc
das
jge
js
into
jge
inc
xor
cmp
fdivr
test
daa
mov
mov
jl
cdq
pusha
xor
jae
inc
mov
popf
imul
mov
or
lods
std
dec
into
ficom
sahf
mov
scas
repnz
xor
adc
jl
inc
out
xchg
or
scas
shl
cld
iret
outs
xchg
inc
sahf
jp
push
into
sti
inc
scas
pop
jmp
pop
cmp
int
movs
retf
mov
out
fwait
test
mov
sti
xor
pop
inc
adc
retf
bound
push
jo
push
into
ins
and
xlat
popf
test
daa
cdq
mov
jo
jbe
inc
push
pop
ret
xor
rol
mov
xchg
pop
mov
in
mov
cs
shl
loop
fistp
fld
or
hlt
sbb
pop
add
xor
sub
and
pop
mov
ja
fst
adc
and
xchg
mov
fist
not
mov
dec
outs
inc
cmp
ret
into
fwait
lock
int3
sbb
jae
mov
cdq
hlt
gs
repz
cmc
push
pop
push
add
push
cwde
inc
or
in
mov
dec
cmc
data16
inc
mov
in
mov
mov
xchg
push
into
cmp
mov
jb
and
test
sbb
cmp
cmp
mov
outs
icebp
cdq
not
cmc
into
mov
bound
outs
jmp
loop
loop
in
cmp
add
inc
inc
cwde
mov
pop
sbb
das
mov
sbb
rcl
inc
lds
dec
dec
xchg
pop
xor
jo
das
jecxz
xchg
outs
push
mov
pusha
add
scas
jg
and
lds
cdq
neg
xchg
mov
adc
pop
xchg
std
xchg
and
mov
adc
mov
xchg
adc
loop
jmp
and
dec
and
cli
leave
sbb
sti
xor
rcr
mov
mov
sub
xor
pop
nop
jg
ret
popa
push
cld
cdq
or
loope
sub
les
je
or
stc
xor
ret
stc
add
ret
out
mov
test
jae
xchg
push
(bad)
aad
icebp
or
xor
mov
xchg
add
sub
ret
fdiv
imul
enter
and
and
jl
pushf
inc
and
fdiv
dec
pushf
mov
mov
or
xor
jle
test
retf
jbe
jmp
mov
xor
xor
ins
fwait
push
lock
push
xlat
dec
es
mov
adc
inc
dec
and
adc
inc
fadd
repz
test
fisub
outs
cmc
mov
in
scas
mov
jecxz
repz
fisttp
sub
cmp
ds
lea
inc
xchg
inc
cli
add
pop
gs
icebp
mul
push
shr
or
dec
pushf
lods
hlt
fadd
ins
pusha
inc
in
(bad)
sub
mov
add
sbb
or
sbb
inc
push
mov
dec
fs
movs
cmc
add
add
ror
jmp
jno
push
jo
loopne
imul
stos
lods
sub
mov
sub
test
adc
jmp
cmc
inc
mov
push
leave
mov
sub
sub
adc
xor
cdq
jno
cmp
cmp
mov
xor
add
mov
test
sahf
(bad)
in
sbb
push
rcr
jmp
clc
fsubr
(bad)
adc
shr
popa
pop
mov
mov
retf
pop
scas
xor
inc
pop
cs
cli
sbb
ds
xchg
enter
int3
iret
mov
stos
adc
out
ins
repnz
leave
dec
push
retf
fadd
lods
ja
repz
(bad)
je
clc
jns
inc
es
pop
jns
dec
lock
outs
icebp
pop
les
ret
lods
shr
leave
hlt
xchg
ds
push
mov
and
popf
ins
outs
and
jno
not
in
xchg
mov
push
gs
rcl
dec
mov
jmp
aam
xchg
xor
mov
retf
jns
add
sti
adc
sub
xor
ins
mov
stos
fmul
jle
cs
and
jg
popf
dec
adc
cld
stc
ds
cmp
inc
test
mov
pop
inc
xchg
push
sar
or
adc
loope
xchg
sar
lds
xor
(bad)
xchg
mov
addr16
push
dec
cmp
or
mov
test
call
fbstp
std
xor
ins
lock
clc
jp
adc
push
mov
pop
jge
xor
in
xchg
fnstenv
inc
sub
push
fdivrp
out
jbe
add
jbe
fwait
mov
inc
dec
xchg
add
ret
mov
adc
mov
ss
mov
je
arpl
sbb
nop
push
mov
cs
test
stos
and
mov
push
fwait
clc
cmc
loop
loop
push
div
fcmovu
or
sbb
test
fs
leave
adc
inc
jno
dec
stos
push
push
inc
pop
mov
cmp
ds
inc
dec
cld
sub
add
mov
inc
mov
jmp
in
mov
adc
pop
inc
cwde
and
test
cwde
cli
outs
cmp
js
das
leave
retf
call
cmp
enter
push
jge
shr
(bad)
dec
mov
fdiv
inc
enter
add
mov
mov
cmc
call
pop
sub
cmp
cmp
mov
loopne
push
mov
cmp
out
cdq
push
dec
jno
push
call
loop
pop
inc
cmp
mov
sbb
(bad)
push
push
and
and
add
mov
movs
cmps
not
icebp
cmps
sbb
and
pop
in
push
hlt
in
push
gs
mov
retf
jmp
shl
push
popf
push
(bad)
cli
sub
mov
inc
mul
sti
ficomp
jecxz
es
popa
pop
and
outs
cdq
lahf
std
mov
or
jl
(bad)
call
xor
xor
enter
std
push
mov
int3
out
je
inc
pop
sti
fist
in
sub
cmp
pop
outs
call
icebp
pop
xchg
mov
sbb
mov
xchg
xchg
xlat
jno
pop
push
out
int3
dec
xchg
fldenv
cdq
fld
in
nop
dec
dec
(bad)
and
imul
fst
out
(bad)
jmp
mov
push
sbb
and
add
ja
out
add
mov
and
inc
outs
mov
pusha
cs
add
add
and
jge
add
int
mov
mov
jmp
pop
mov
out
gs
iret
and
mov
mov
xchg
mov
jg
add
dec
add
push
jmp
mov
mov
pop
mov
xlat
in
sub
sbb
fmul
ins
mov
jne
(bad)
push
cmp
sub
ins
pop
addr16
call
mov
ss
mov
popf
adc
leave
inc
(bad)
dec
mov
mov
call
mov
mov
out
das
aas
out
fs
mov
leave
add
or
mov
cdq
mov
shr
push
std
adc
fmul
adc
ins
inc
mov
lods
jmp
mov
mov
lock
(bad)
mov
jae
mov
std
lahf
mov
stc
loopne
sbb
inc
or
in
pop
xor
jbe
mov
leave
leave
pop
ds
cmp
jge
out
call
hlt
push
fcomp
cmp
cmp
mov
mov
test
push
mov
iret
sbb
mov
jne
jnp
cs
js
ds
cmc
inc
ja
clc
popa
bound
pop
xor
pop
movs
sub
inc
jmp
jmp
sbb
cdq
shr
jl
call
mov
sbb
int
das
jge
push
out
ret
paddusb
aaa
push
in
clc
mov
int3
pop
sbb
fcmovnu
rcl
clc
loopne
xlat
cmp
in
scas
cmp
clc
sahf
mov
fistp
pop
sub
into
frstor
jge
pop
fdivp
sub
mov
(bad)
test
pop
mov
rcr
ja
loop
pop
xchg
push
std
dec
lock
(bad)
and
cmp
xchg
mov
fwait
inc
fsub
pop
xchg
fmul
xor
outs
sub
bound
repz
sahf
xor
test
pop
out
out
mov
cmp
into
out
call
outs
mov
dec
fs
in
cdq
or
(bad)
pop
repz
imul
add
mov
int3
loope
lods
in
and
fisttp
add
push
and
jne
inc
fst
cwde
sub
data16
jle
mov
ss
or
fwait
add
xor
mov
(bad)
fstp
stos
sahf
push
fidivr
mov
xor
std
sub
mov
aad
ins
fld
dec
fld
or
sbb
adc
and
push
mov
mov
sub
adc
loope
outs
cmc
or
jg
pop
mov
push
(bad)
outs
bound
gs
sub
lods
pop
jmp
mov
rcl
dec
out
adc
cld
ds
addr16
sub
dec
pusha
imul
in
sub
(bad)
fcom
(bad)
jbe
shl
cmp
lods
in
pushf
push
xor
push
cdq
cli
jbe
popf
mov
popa
push
adc
je
xchg
mov
adc
std
push
cmc
and
push
mov
cmp
in
fbld
test
push
pop
cmp
push
mov
shl
mov
imul
movs
scas
dec
push
jg
push
into
mov
cmp
fcomp
push
pop
div
or
movs
in
mov
inc
lea
jns
mov
movs
clc
int3
pop
aas
push
scas
add
in
and
jmp
sti
stos
addr16
cmp
jns
sbb
mov
mov
sahf
sar
push
adc
mov
sub
mov
(bad)
jb
xchg
(bad)
int
mov
mov
xchg
xor
cmps
rcr
dec
(bad)
(bad)
fisttp
icebp
(bad)
arpl
add
test
inc
xchg
les
jg
adc
push
lahf
sub
push
xor
jg
or
inc
into
pop
ins
xor
inc
outs
dec
xor
push
and
cld
sub
add
daa
ss
repnz
push
jo
push
inc
(bad)
mov
sbb
xlat
xchg
cmp
dec
fmul
hlt
pop
push
popa
test
dec
mov
xor
xor
push
loop
mov
out
test
and
sbb
enter
add
and
adc
cmp
mov
inc
cmps
dec
or
push
pop
push
adc
cmp
push
mov
and
stos
cmp
aad
mov
out
rol
mov
popf
mov
jl
xlat
push
sbb
aad
sub
inc
in
dec
int
stos
push
cmc
dec
push
add
imul
rep
js
out
sahf
mov
xor
xor
aaa
adc
imul
mov
iret
call
sbb
rcl
pop
adc
sbb
push
dec
xor
mov
test
inc
mov
adc
jecxz
sbb
cmps
jp
jecxz
daa
pushf
push
sub
mov
adc
fnstcw
dec
pop
retf
cwde
in
imul
sbb
and
mov
and
dec
xor
mov
ss
aaa
push
outs
mov
push
add
xor
ins
cmp
mov
retf
das
mov
xchg
sar
sahf
lods
inc
fdiv
xor
push
inc
xchg
rcr
stos
mov
and
repnz
lea
pop
jle
mov
cmps
ds
sbb
dec
retf
push
(bad)
mov
je
loope
rcr
movs
mov
inc
add
adc
pop
xchg
icebp
xchg
xor
push
popf
test
fmul
mov
mov
pop
jmp
add
call
cli
xchg
int3
push
or
rcr
ret
loope
sahf
inc
fidivr
out
lahf
das
ins
iret
movs
push
xlat
pop
push
aas
stc
ins
lods
and
push
int
ss
aad
xchg
ret
imul
lods
mov
push
fist
xor
pusha
mov
mov
dec
pop
jne
lods
pop
ret
sbb
sbb
xor
xor
sti
(bad)
aaa
lods
jae
sbb
jno
std
pop
aad
dec
das
adc
stos
ins
(bad)
int
push
jnp
push
pop
(bad)
outs
cmc
movs
int
cmc
dec
cwde
or
pop
cmps
add
mov
(bad)
lods
cmps
(bad)
mov
adc
sti
add
dec
fs
cli
xchg
sub
mov
or
lods
fst
retf
lods
sbb
in
add
jae
(bad)
cmp
pop
inc
pop
lods
xlat
stc
and
out
mov
les
pop
mov
gs
xchg
sbb
dec
das
sbb
stos
mov
dec
fldcw
shl
mov
jge
add
inc
cld
repnz
arpl
push
scas
in
xchg
dec
ret
addr16
(bad)
cmp
mov
clc
jno
inc
mov
sub
push
push
mov
clc
mov
mov
outs
(bad)
imul
(bad)
retf
pop
in
dec
nop
pushf
arpl
sbb
add
not
inc
or
and
jecxz
pop
jbe
or
outs
std
movs
(bad)
jmp
xor
pop
aaa
fwait
movs
mov
clc
ret
pushf
fdivr
adc
pop
adc
rcr
dec
mov
sub
in
nop
aas
ins
lods
adc
lods
movs
loopne
nop
out
scas
fiadd
push
inc
(bad)
cwde
call
aad
ss
dec
xor
xor
mov
les
xchg
add
dec
movs
ins
(bad)
xchg
push
aas
mov
fisttp
cwde
pop
les
pop
pushf
nop
pop
mov
push
sbb
loopne
movs
xor
and
mov
pop
adc
xchg
pop
push
mov
(bad)
pop
adc
out
inc
sbb
push
xchg
jmp
inc
mov
jecxz
fs
push
adc
cli
bndldx
call
shl
adc
push
push
cs
or
jae
rcr
popf
mov
out
fwait
push
cmps
(bad)
in
cmp
cmps
ss
ss
call
loopne
add
inc
mov
lock
rol
ss
sbb
mov
mov
fcmovne
loope
inc
sub
std
push
cld
xlat
xor
push
sub
(bad)
cli
or
or
push
dec
jmp
or
sahf
dec
lahf
and
push
sbb
push
push
adc
mov
gs
xchg
test
or
cmp
xor
mov
leave
pop
jle
xor
pop
in
inc
movs
pop
xchg
fdivr
push
mov
or
mov
daa
xchg
push
dec
xchg
push
pop
mov
popf
das
pushf
popa
aas
and
aas
lods
out
add
fiadd
es
mov
aad
int3
pop
bound
pop
sahf
jae
cmps
stos
loope
mov
sub
lods
sahf
inc
leave
bnd
adc
(bad)
in
lea
adc
repnz
retf
mov
jge
xlat
adc
xor
jp
movs
mov
dec
mov
movs
xor
sbb
in
jge
pop
jns
cmps
(bad)
das
add
and
sbb
cmp
cmps
inc
cmc
add
jne
fidivr
mov
push
inc
and
ins
rcr
and
jbe
imul
jo
or
les
adc
test
in
das
cmp
lock
mov
mov
lahf
jno
imul
or
cmp
jb
xor
stos
cmovle
dec
jnp
cdq
sbb
movs
imul
mov
or
push
cli
push
push
push
jp
xchg
rol
idiv
cmp
inc
loopne
add
add
or
mov
daa
dec
sbb
push
aad
shr
pusha
in
in
xor
sub
inc
stc
cmps
jno
add
add
mov
enter
dec
mov
xchg
std
push
gs
test
sbb
add
lea
and
inc
inc
sbb
rol
xchg
or
cs
pop
push
int3
or
rol
movs
aaa
push
test
or
cmc
and
push
cmps
dec
add
mov
and
ret
push
dec
stc
mov
shl
jno
hlt
add
test
gs
sbb
ins
fild
test
mov
pop
loope
push
scas
pushf
imul
cmp
aas
push
in
shl
jle
add
and
sbb
inc
lea
and
movs
mov
or
mov
inc
mov
pop
aaa
(bad)
(bad)
or
ja
test
stos
repz
sub
fdivr
pop
dec
aas
scas
sbb
and
movs
les
mov
cwde
inc
(bad)
(bad)
je
dec
(bad)
scas
icebp
adc
xchg
jno
xor
mov
imul
imul
mov
cmps
sbb
jle
dec
sub
jp
mov
lods
mov
push
cmps
sbb
daa
mov
cmp
fadd
pop
out
sbb
adc
pop
jnp
push
jb
hlt
inc
in
nop
xchg
sub
mov
dec
xchg
fucomp
icebp
inc
mov
cs
pop
cmps
test
cmp
mov
movs
iret
mov
les
sub
mov
xchg
xor
stos
shl
shr
mov
jb
or
es
retf
sbb
dec
mov
movs
or
out
add
mov
test
aas
aas
sub
hlt
pop
inc
jl
test
dec
aaa
jns
push
mov
mov
mul
not
mov
bound
movs
cmp
adc
push
inc
fcmovbe
adc
cmp
mov
dec
mov
bswap
aad
sbb
(bad)
push
fwait
scas
xor
out
loopne
mov
sbb
lods
add
movs
pop
adc
inc
(bad)
dec
mov
mov
add
add
movs
sub
add
les
pop
adc
jne
rol
movs
mov
call
test
out
test
add
dec
xchg
mov
adc
jl
mov
aaa
out
les
dec
sub
iret
shr
into
sub
jne
adc
dec
adc
fsubr
faddp
and
(bad)
fucomip
or
lea
mov
xchg
jne
xchg
push
xor
stos
xchg
mov
int
retf
pop
xor
imul
xor
xchg
lock
mov
inc
sub
jne
outs
in
mov
inc
arpl
add
add
adc
scas
jle
je
jae
lds
sub
adc
div
inc
pop
iret
popa
sbb
jmp
mul
js
jae
sbb
jbe
sbb
in
mov
js
popf
stos
aad
xchg
(bad)
pop
nop
add
lock
jns
mov
push
mov
push
sub
jns
aaa
dec
lods
adc
(bad)
aad
jb
jle
repnz
mov
stos
sbb
jb
pop
fadd
lahf
xchg
and
mov
gs
call
sbb
lock
or
sbb
sbb
sbb
pop
(bad)
sub
jecxz
inc
mov
sbb
rcl
ins
pusha
push
bound
sbb
shl
xor
cld
push
mov
push
lods
imul
in
mov
aad
jb
je
inc
(bad)
sub
xlat
mov
mov
inc
mov
icebp
js
push
mov
int
jnp
out
adc
int
mov
icebp
cld
push
add
and
stos
test
or
(bad)
pop
jmp
rcr
gs
mov
xchg
fcomp
inc
xchg
mov
add
mov
or
or
mov
lods
push
out
fs
push
fidiv
out
ss
sub
xchg
loop
pusha
sbb
mov
popa
push
xchg
jp
add
arpl
call
mov
xlat
or
adc
push
retf
sbb
sbb
add
push
mov
out
jb
rcl
push
or
jl
jno
pop
loope
int3
loope
push
stos
in
mov
mov
imul
ret
mov
dec
jmp
outs
loope
and
or
jno
push
fcom
pop
push
add
or
sbb
dec
mov
loop
xchg
(bad)
push
or
mov
call
(bad)
xchg
jo
mov
xor
adc
std
sub
jg
outs
fimul
push
fwait
rcr
cmp
(bad)
mov
jle
(bad)
in
jne
fisub
inc
(bad)
lock
and
scas
mov
stos
inc
pushf
stos
jne
xor
xchg
push
lds
and
sub
xor
xchg
mov
mov
sar
dec
lea
cwde
and
push
push
xchg
push
jg
pop
pop
lea
jl
jp
push
xlat
dec
sub
add
mov
arpl
push
fistp
xchg
push
mov
xor
pop
pop
icebp
(bad)
test
push
xchg
mov
mov
test
imul
in
call
shr
pushf
jo
mov
inc
call
das
(bad)
(bad)
iret
rcl
mov
sub
adc
lods
out
mov
or
xor
jmp
mov
inc
imul
ins
(bad)
aad
enter
inc
sbb
daa
retf
add
jne
into
inc
pop
dec
sbb
aad
lods
ins
dec
cmc
xchg
stos
(bad)
ins
xchg
push
outs
pusha
xchg
cld
nop
in
mov
mov
pop
scas
stc
test
and
inc
pushf
add
retf
sahf
test
fdivr
cmp
je
sub
fiadd
data16
inc
dec
xor
loopne
mov
cmp
(bad)
push
ins
jmp
sbb
outs
mov
push
fiadd
mov
xchg
add
cmp
addr16
and
sbb
stos
rcr
fs
push
shr
fisttp
ja
fimul
dec
xor
adc
jnp
sub
and
push
push
dec
xchg
jge
jle
pusha
movs
stos
retf
mov
adc
lock
jns
lahf
int
cdq
adc
loop
popf
add
sub
rcr
dec
cmps
mov
retf
mov
xor
ja
pushf
lds
retf
ja
or
fbld
xor
enterw
xor
adc
jp
inc
xor
push
xchg
mov
in
dec
ja
popa
das
jo
dec
push
in
ss
pop
mov
loop
imul
inc
mov
mov
fimul
outs
(bad)
xor
shl
loope
loopne
jmp
(bad)
xor
push
and
mov
dec
jmp
pop
shl
div
cmp
pop
and
dec
add
fidiv
adc
js
or
push
cld
aad
xchg
pop
cdq
bound
mov
inc
mov
fmul
xor
repz
jecxz
ret
in
xlat
mov
jecxz
inc
push
sbb
add
cmps
adc
mov
mov
fdivp
das
inc
push
inc
loop
cwde
cmps
dec
retf
fld
test
push
loopne
hlt
pop
shr
add
je
pop
pop
in
adc
repz
mov
mov
inc
leave
leave
or
fsubr
retf
leave
nop
lahf
cmps
jno
inc
bound
xchg
sub
pop
cmps
sbb
add
lods
mov
cmp
mov
not
lahf
or
adc
mov
shr
es
add
or
add
pop
xor
or
dec
jmp
and
retf
pop
hlt
cmps
pushf
imul
add
std
(bad)
mov
ss
cmc
dec
jo
iretw
pushf
cmps
mov
das
lods
retf
test
lea
or
adc
cld
dec
stos
in
out
test
inc
popf
aas
xchg
frstor
pop
cmp
ds
fs
pop
pop
dec
push
and
xor
stos
jo
inc
xor
push
push
mov
xchg
rcl
xor
das
pusha
add
rcl
int
ins
sub
int3
mov
inc
xchg
xchg
test
inc
out
cmps
push
leave
xchg
mov
mov
retf
arpl
fs
leave
fs
xchg
add
mov
push
imul
adc
jl
shr
cmp
xchg
fcom
arpl
outs
in
sbb
push
pop
sbb
jbe
xchg
cmp
(bad)
scas
les
fdivr
(bad)
or
push
cmps
dec
retf
xchg
sub
adc
add
mov
das
shr
in
ficom
sub
or
and
sbb
dec
cmp
aam
inc
repz
div
(bad)
call
xor
nop
xor
ins
js
push
mov
fiadd
or
jne
fs
enter
mov
or
jnp
scas
sbb
lods
mov
fwait
mov
add
adc
jne
lea
lahf
sbb
dec
fisubr
add
or
and
and
mov
push
add
xchg
scas
pop
loopne
mov
shl
xor
sub
sti
dec
sub
std
add
inc
and
mov
push
mov
adc
dec
push
xor
mov
cmp
dec
pop
rcl
adc
push
xchg
scas
sbb
lods
push
push
mov
mov
jmp
jnp
jg
jmp
jp
daa
push
mov
lock
inc
adc
cld
jnp
stos
call
or
repnz
mov
push
inc
pop
(bad)
or
add
out
sub
outs
adc
inc
pop
fisub
mov
pop
xchg
or
pop
push
pop
call
cmps
iret
test
in
into
push
mov
push
push
jmp
sub
rcl
pop
jmp
inc
adc
mov
jp
movs
sbb
sbb
xchg
xchg
dec
outs
add
push
push
lods
xchg
js
fisubr
push
inc
cmp
sub
int3
jp
and
mov
dec
xchg
pop
imul
out
das
mov
push
pop
cmp
and
and
xor
xchg
xchg
pop
cs
test
sub
shl
xor
(bad)
jno
jmp
int3
push
rcl
(bad)
push
add
xor
inc
or
mov
sub
jae
mov
lock
mov
push
fsubr
xchg
cmp
imul
nop
sti
fidivr
movs
sub
jae
imul
test
jle
fisttp
pop
sub
fist
test
cmp
(bad)
jge
push
sbb
cs
mov
shl
jno
stc
jle
loope
test
stc
test
mov
repnz
ja
(bad)
push
cmc
inc
and
mov
inc
pushf
pop
adc
ret
dec
neg
mov
add
jno
adc
ret
or
or
bound
ss
push
inc
or
xlat
div
cmps
rol
add
ds
cmp
imul
push
stc
xor
in
mov
lahf
fild
cli
mov
jmp
adc
popf
inc
sbb
jne
or
cs
out
adc
mov
mov
jg
or
or
push
(bad)
les
xor
inc
mov
dec
(bad)
loopne
cmps
jns
call
ins
jecxz
lods
or
pop
stos
lea
ss
js
xchg
out
adc
push
ins
sub
inc
test
mov
imul
push
leave
lods
bound
dec
pop
fmul
xchg
fs
cmp
mov
or
add
pop
jmp
scas
ret
leave
jne
aas
add
inc
xchg
in
aam
cmp
sbb
xor
xchg
pusha
cmp
stos
stos
and
mov
pop
mov
mov
mov
dec
or
push
mov
xor
jmp
pop
ins
retf
outs
xor
ss
in
dec
cmp
mov
mov
push
pop
xor
out
iret
std
dec
rcl
frstpm(287
ss
pop
lea
imul
add
push
ret
imul
xor
jo
(bad)
adc
mov
loopne
cld
gs
pop
popf
mov
jnp
repz
call
inc
cs
imul
add
je
add
neg
jb
mov
jns
scas
cmp
loopne
sbb
xor
mov
int
sbb
(bad)
adc
sub
push
xor
or
imul
lock
je
js
push
add
mov
cmps
xchg
mov
adc
scas
lahf
lahf
movs
ror
arpl
cmp
popa
outs
lods
cmps
add
in
mov
mov
movs
aam
mov
loop
cmp
or
add
pop
pop
mov
mov
fld
das
call
hlt
mov
push
nop
leave
jle
dec
imul
jle
cmp
ds
(bad)
into
movs
sbb
stc
xchg
popf
loopne
jge
sahf
mov
outs
pop
inc
xchg
iret
xchg
shr
mov
sub
stos
or
lods
sbb
dec
fwait
loop
cwde
retf
and
std
retf
fs
or
stos
push
mov
(bad)
xchg
scas
mov
rol
mov
or
popa
adc
push
xchg
retf
nop
pop
push
bound
test
jmp
jb
cs
and
in
mov
retf
dec
push
arpl
sub
jl
xchg
lea
cmp
arpl
sahf
mov
test
scas
retf
fwait
cmp
push
xchg
mov
dec
fidivr
out
lahf
loope
jle
es
imul
mov
xor
out
jmp
sar
xchg
add
stc
add
mov
(bad)
les
call
pop
and
push
jae
bound
sub
pop
mul
daa
rol
jae
mov
cmp
iret
lahf
les
add
jo
sbb
push
xchg
movs
aas
inc
mov
dec
daa
sar
cmp
sub
xchg
addr16
repnz
mov
fwait
xchg
sahf
sub
mov
pop
jnp
jg
ja
test
fidiv
sahf
pop
sar
daa
xchg
cmps
jecxz
sahf
fwait
mov
jge
jmp
jmp
stos
pushf
sub
or
pop
jnp
pop
retf
mov
ror
data16
int
pop
push
iret
call
test
mov
pop
cld
fmul
jmp
popf
push
or
std
or
pop
lock
jecxz
test
adc
inc
loope
mov
push
inc
or
les
mov
sub
mov
es
push
cmp
mov
push
das
pusha
pop
dec
xchg
xchg
imul
pop
mov
push
ret
push
xor
rcl
pop
scas
clc
adc
leave
call
dec
mov
sbb
xor
mov
mov
arpl
dec
fadd
je
mov
sub
dec
lds
stc
mov
sub
push
js
call
in
ins
pop
int3
lods
stc
jb
sbb
repnz
aas
inc
popa
mov
inc
pop
(bad)
xor
inc
and
adc
jl
ja
xchg
push
add
mov
not
push
xchg
lea
in
xor
jae
hlt
inc
push
xor
inc
adc
test
fcomp
out
aas
ins
inc
aam
xor
mul
vpcmpgtw
push
mov
mov
add
inc
fxch
in
push
out
xlat
mov
and
or
xor
das
inc
ins
push
clts
cld
into
dec
mov
mov
cmps
cmp
adc
movs
(bad)
add
fiadd
icebp
dec
or
jle
mov
sub
loop
dec
sub
dec
mov
enter
mov
mov
mov
pop
adc
pop
(bad)
out
test
(bad)
retf
(bad)
(bad)
popf
retf
rol
ror
out
cmp
push
pop
push
mov
pusha
outs
stc
fwait
popa
popf
sbb
ret
mov
rcl
pop
jmp
pop
imul
out
inc
mov
jecxz
(bad)
sti
sub
cmps
bound
adc
pop
xchg
pcmpeqd
hlt
into
cwde
mov
ds
or
js
in
out
sub
push
push
xchg
xor
cmps
adc
or
fld
ja
call
add
(bad)
sbb
scas
je
shl
cmps
ja
sbb
xchg
mov
fdivrp
dec
out
adc
jbe
and
ins
sahf
test
xor
add
out
stos
jb
or
adc
jecxz
je
dec
pop
into
xchg
ret
pushf
adc
fisubr
lods
scas
cmp
pop
pop
mov
fst
(bad)
push
pusha
out
outs
jns
ret
in
int
stos
stos
enter
cmp
sbb
add
xor
and
repnz
jmp
inc
nop
in
jo
mov
inc
xchg
ds
loop
retf
mov
mov
inc
xchg
pop
jmp
adc
sahf
sbb
push
mov
add
push
inc
movs
push
push
dec
push
jl
out
call
call
fwait
movs
push
ret
mov
and
sub
xchg
(bad)
sbb
lock
imul
inc
push
push
cmc
pop
jmp
add
repz
or
fidiv
hlt
aad
mov
dec
retf
fisubr
stc
push
dec
xor
repnz
call
cmp
das
enter
jo
stos
fisub
(bad)
aam
and
daa
ret
sub
and
dec
lock
dec
data16
pop
ficomp
sub
lahf
mov
sbb
and
scas
loop
adc
test
ret
xchg
ins
mov
cmp
dec
add
pop
js
int3
dec
sbb
xchg
lods
add
mov
mov
cmc
cmp
jno
sbb
jns
stc
sbb
pop
rcr
jmp
sbb
or
in
clc
pop
inc
mov
pop
fidiv
fimul
icebp
cld
xor
dec
mov
xchg
dec
rcl
push
dec
pop
jmp
jo
in
(bad)
xchg
add
(bad)
jmp
retf
cmp
into
add
aam
adc
cmp
ret
cmps
das
jmp
pop
sbb
inc
jmp
mov
sbb
das
div
sbb
out
or
adc
mov
jb
ins
lock
imul
shr
sar
repnz
das
dec
pushf
pop
mov
mov
xor
jmp
ja
out
jno
outs
(bad)
push
add
and
(bad)
outs
xor
sbb
mov
push
in
pop
sub
mov
and
lahf
push
int3
xor
scas
cmp
jg
data16
inc
xor
inc
sub
or
aad
dec
inc
lods
xchg
mov
fs
ins
call
in
jae
push
mov
sbb
(bad)
sub
inc
js
push
xchg
push
jmp
aas
lea
mov
push
mov
neg
mov
push
mov
in
imul
xchg
(bad)
loop
sbb
xchg
mov
mov
mov
sub
xor
sti
add
sti
aaa
retf
jp
dec
inc
pop
out
xlat
(bad)
xor
inc
stc
outs
and
dec
mov
addr16
jle
cmp
ss
jge
ds
inc
hlt
ficomp
call
cmp
push
sbb
iret
icebp
xchg
mov
push
psubb
mov
gs
stos
or
pop
or
pop
iret
mov
ficomp
mov
xchg
outs
sub
or
sub
fs
in
nop
movs
std
inc
div
in
(bad)
(bad)
xlat
arpl
loop
jmp
xchg
cmp
aam
cmp
jg
mov
addr16
movs
shl
inc
fist
xor
cmps
out
pop
test
cmps
push
push
xor
jnp
inc
push
fist
ficomp
or
nop
fsubp
clc
data16
stos
sub
mov
std
adc
jmp
out
mov
mov
sbb
dec
std
pop
test
jg
into
ja
ror
xor
enter
xchg
mov
fwait
enter
jno
stos
jp
fsub
out
cmp
sbb
mov
arpl
adc
add
(bad)
mov
mov
out
lods
(bad)
push
imul
jbe
mov
mov
mov
in
dec
lds
inc
int3
jo
outs
inc
cmp
int
dec
aam
mov
inc
in
cmp
mov
mov
test
pop
xchg
pop
movs
jle
push
mov
aad
out
sbb
dec
and
mov
sub
in
mul
cmp
mov
cmps
pop
pop
jl
adc
jmp
sub
inc
iret
(bad)
stc
or
mov
es
popf
or
aas
sub
stc
in
sbb
(bad)
mov
sbb
mov
adc
hlt
les
inc
jmp
sbb
(bad)
ja
call
iret
les
(bad)
dec
inc
mov
fmul
cdq
or
xchg
pop
mov
ss
dec
cld
pop
mov
outs
ret
std
push
mov
loopne
xchg
sar
pusha
pop
sbb
sahf
std
push
cmp
je
ss
add
pop
jns
js
fs
retf
xchg
repz
inc
not
xchg
scas
dec
scas
std
ficom
xor
dec
arpl
inc
call
mov
lods
cdq
fsub
add
xor
in
aaa
jb
xchg
adc
mov
daa
aad
xchg
jae
lahf
test
ret
scas
xchg
jbe
int
std
aas
adc
cld
sub
xchg
jle
icebp
cmp
mov
ret
mov
stc
aaa
test
inc
(bad)
lods
imul
pop
jo
imul
ins
dec
inc
daa
scas
(bad)
je
jbe
add
ins
outs
mov
jne
xlat
inc
int3
lds
xchg
mov
xor
push
push
ret
mov
vmovaps
lods
jne
cmp
xchg
pop
sbb
movs
cli
sbb
mov
into
xchg
inc
outs
mov
cmp
cmp
pusha
scas
cld
or
mov
jne
jnp
push
enter
cmc
enter
adc
sbb
xchg
dec
retf
pushf
cmp
mov
call
or
mov
lods
loopne
jnp
pop
xchg
fistp
xchg
imul
pop
adc
mov
inc
mov
test
ds
add
xchg
lea
test
cmps
xchg
out
stc
sub
pop
fs
outs
xchg
repnz
xor
mov
sub
stos
(bad)
sahf
pop
sub
xchg
or
shl
mov
or
add
sar
adc
dec
popf
add
jns
dec
jmp
fist
inc
cmp
in
outs
ror
js
out
mov
addr16
or
sbb
shl
jmp
jg
mov
adc
sbb
xor
mov
ror
loop
ret
add
cld
adc
fist
pop
call
fistp
ss
or
adc
push
sbb
mov
test
(bad)
lahf
push
aam
(bad)
sub
add
addr16
fcomip
jne
inc
mov
dec
push
loope
mov
xchg
gs
imul
push
cmps
adc
cs
and
ret
in
cmp
test
sti
push
sub
jmp
mov
mov
dec
cmp
ins
xchg
mov
retf
cmps
call
rcr
js
mov
int
daa
push
fsubrp
movs
fcomp
jnp
aaa
sbb
jl
clc
mov
mov
test
cmp
inc
mov
mov
mov
mov
je
fst
push
jbe
imul
add
jno
out
outs
hlt
in
daa
in
sbb
rcr
cli
aas
das
repnz
xor
arpl
mov
ret
mov
mov
and
test
mov
mov
mov
inc
in
xor
sbb
imul
cmp
cs
mov
or
pop
jns
(bad)
(bad)
stos
mov
fmul
in
inc
cmp
dec
scas
sbb
inc
jae
aam
shl
jo
enter
add
mov
sbb
cld
(bad)
jge
jbe
or
xor
ja
mov
int3
sbb
xchg
sahf
xor
xchg
sub
mov
pop
add
adc
arpl
xchg
push
sbb
inc
into
fucom
pop
out
imul
into
dec
idiv
nop
dec
mov
dec
jb
(bad)
es
dec
dec
test
or
jge
popf
in
je
stos
stos
adc
dec
out
mov
push
scas
scas
leave
add
shr
out
fdiv
daa
loope
jmp
imul
out
jne
mov
mov
in
lahf
xor
pop
or
mov
or
pop
repnz
sti
mov
jl
jl
add
cs
les
imul
mov
or
mov
xchg
jne
add
add
int3
sbb
xor
xor
aam
sub
push
movs
xchg
jp
dec
mov
leave
xchg
fdivrp
or
mov
call
rcr
push
fsub
mov
aam
mov
xchg
adc
xor
pop
pop
outs
add
mov
call
mov
shl
cmp
mov
leave
enter
out
mov
pop
cmps
and
clc
outs
push
cmp
adc
nop
sub
imul
imul
xchg
(bad)
cmp
ins
xchg
inc
add
adc
out
cdq
sbb
push
xchg
mov
retf
imul
jb
add
mov
in
daa
shr
jae
in
es
test
addr16
loopne
and
cmp
aam
mov
fldcw
xchg
cmp
dec
test
into
movs
lock
jno
jbe
ret
(bad)
jae
mov
and
fisttp
adc
stos
in
shl
push
loope
fwait
int3
sti
imul
rcr
loop
or
(bad)
dec
push
add
xchg
xor
xchg
ins
cmp
xchg
cmps
xor
scas
add
aaa
jle
repz
pop
xchg
dec
jmp
loope
(bad)
jnp
push
dec
push
and
call
push
dec
inc
lahf
xchg
mov
loopne
into
xchg
cs
inc
mov
aam
ret
data16
adc
(bad)
mov
cmp
mov
sub
cmps
repz
cmp
push
add
push
sub
lods
mov
ror
(bad)
and
pop
xor
aad
pushf
mov
pop
rol
and
icebp
call
jmp
sub
mov
movs
rcr
test
retf
add
fisubr
fcomp
jno
(bad)
iret
(bad)
stc
loopne
das
lahf
or
repz
shl
stc
in
int3
jae
es
cmp
ficom
(bad)
adc
xchg
ds
ins
and
mov
xor
jae
sbb
push
dec
jecxz
(bad)
pushf
add
aaa
ret
xchg
xor
movs
lock
lods
add
cmp
xchg
dec
or
cwde
clc
sbb
retf
nop
out
test
jmp
jmp
leave
jmp
jp
jecxz
pusha
fs
inc
call
dec
sub
jecxz
fcmove
mov
sti
loop
sub
call
mov
(bad)
sub
cmps
inc
adc
xchg
mov
push
push
jge
and
test
and
rep
test
aam
mov
push
add
push
or
lahf
stos
dec
fidivr
xchg
pop
jo
into
push
or
lods
adc
div
inc
mov
push
mov
inc
pop
push
jecxz
xlat
outs
aaa
ror
push
leave
gs
aad
xchg
fdiv
jbe
xor
fisttp
dec
loope
xor
ins
dec
mov
stos
inc
mov
push
and
iret
test
inc
adc
mov
mov
cmp
push
fcom
mov
cmps
mov
xchg
cmp
sbb
dec
xchg
lahf
mov
inc
xchg
and
sub
repnz
xchg
jecxz
lea
and
and
lods
loope
add
retf
fbld
pop
mov
fistp
pop
retf
add
sub
fwait
loop
js
outs
cmp
sbb
fstp
fbld
pop
iret
hlt
ja
imul
mov
jnp
(bad)
adc
or
add
push
mov
stos
rol
xchg
retf
jle
not
pop
pusha
xchg
or
addr16
popf
or
(bad)
rcl
data16
add
mov
test
adc
test
xchg
sub
pushf
xor
pop
jns
rcl
adc
pop
inc
in
mov
and
push
push
out
push
mov
bound
or
movs
dec
mov
add
dec
aas
iret
mov
(bad)
(bad)
adc
adc
dec
nop
jp
cmc
jmp
pop
mov
std
lock
out
add
int3
jo
push
jne
inc
retf
dec
xchg
fisub
ror
out
stos
inc
push
and
push
in
or
xchg
adc
div
test
movs
hlt
clc
bound
mov
nop
ja
xor
ins
popf
jbe
fs
pop
mov
or
pop
cld
das
repnz
xchg
push
jle
inc
ins
fwait
sub
cmp
mov
mov
pop
imul
pushf
sbb
test
scas
aas
cs
test
mov
cmp
aas
xor
rol
dec
mov
stos
jns
mov
aam
das
sahf
in
cmc
push
mov
push
adc
pop
(bad)
jmp
xchg
push
test
push
xlat
inc
js
xchg
mov
loopne
push
xchg
dec
pop
mov
mov
enter
iret
(bad)
mov
sbb
inc
les
mov
fs
mov
jno
jge
mov
jge
outs
gs
imul
clc
popf
pushf
clc
(bad)
mov
mov
enter
cld
xchg
xchg
ja
adc
sub
mov
(bad)
jge
jle
and
ret
sbb
xchg
mov
pop
inc
push
ret
xor
int3
mov
cli
mov
mov
jl
sahf
xor
cmp
jb
lods
cmps
add
mov
lahf
jmp
aad
js
dec
mov
push
loope
outs
mov
push
lods
ds
in
mov
call
cwde
xchg
pop
inc
jns
mov
fsub
outs
neg
adc
xor
mov
xor
or
pop
cmps
push
mov
inc
cld
arpl
add
or
push
sbb
in
int3
(bad)
lock
sahf
add
or
loopne
jle
jae
or
mov
je
and
jae
jg
mov
dec
stos
sub
jns
arpl
adc
icebp
adc
ret
je
or
loope
mov
sbb
aad
xchg
xchg
in
loop
aas
enter
lods
neg
test
aam
cmp
xchg
and
aas
jl
cmp
push
out
and
mov
inc
sub
xor
cs
addr16
pop
out
sub
mov
(bad)
dec
pop
pop
out
inc
mov
mov
aam
sbb
xchg
in
mov
inc
sub
mov
jp
pop
cvttps2pi
jns
sbb
jno
xchg
sub
lds
shl
mov
addr16
sbb
leave
or
outs
add
cdq
daa
popa
sbb
mov
mov
icebp
inc
sub
or
and
test
mov
(bad)
push
jp
clc
adc
adc
je
inc
jg
adc
xor
(bad)
fild
rcr
jmp
push
xor
gs
push
jb
mov
pop
(bad)
add
gs
mov
pop
and
movs
sub
cld
ja
call
add
jo
or
add
mov
adc
cli
lds
jecxz
pop
mov
xchg
(bad)
adc
sti
dec
repz
mov
and
cmp
test
or
dec
mov
xor
das
xor
sbb
mov
fs
mov
mov
inc
es
int3
cli
fs
cld
jl
sbb
daa
cmps
mov
les
les
add
inc
xchg
or
test
aas
and
dec
jbe
inc
das
ss
and
ja
or
jl
mov
adc
mov
dec
xchg
retf
rcl
lock
das
loope
movs
mov
add
mov
cmps
sar
jp
ret
pop
mov
pop
cmp
xor
je
hlt
xor
mov
nop
pop
mov
int3
je
movs
pop
test
fbld
call
out
cmpxchg
ja
push
mov
mov
aam
or
jnp
sbb
or
mov
and
sub
add
pop
test
mov
and
xchg
xchg
pop
cmp
mov
mov
int3
and
hlt
loope
or
bnd
ins
retf
mov
addr16
lods
mov
mov
sti
(bad)
repz
lahf
fwait
mov
jge
jecxz
push
fisubr
push
fisub
push
test
add
cmc
je
cmp
mov
cmp
fld
(bad)
iret
retf
sbb
mov
pop
idiv
aam
stos
mov
cs
cld
aas
cmp
aaa
cmps
adc
push
addr16
mul
aas
movs
(bad)
push
jae
(bad)
or
ss
or
xchg
jl
push
add
nop
arpl
sub
adc
retf
cmc
sbb
xchg
movs
out
inc
nop
push
mov
xor
mov
jns
sub
pop
mov
xor
pop
adc
inc
outs
mov
jg
fldenv
daa
pop
jbe
mov
fisub
hlt
ror
and
or
xlat
xchg
aad
mov
add
cmp
movs
cs
outs
sub
xchg
(bad)
js
jp
adc
dec
xchg
cmp
or
inc
icebp
or
xchg
fst
outs
mov
test
and
add
rol
fs
fcmovnbe
imul
sbb
adc
dec
mov
sub
shr
push
dec
out
(bad)
add
inc
test
mov
pop
test
mov
adc
inc
add
pop
cmp
pop
jmp
sub
aas
xor
lock
xor
scas
and
mov
(bad)
cmp
xor
xchg
vrcpss
outs
imul
mov
dec
stos
lahf
fimul
mov
or
scas
add
mov
loop
inc
jb
mov
movs
mov
sbb
test
mov
add
jecxz
lods
jp
pop
or
sub
mov
es
call
ss
imul
mov
dec
xor
jge
inc
daa
stos
icebp
jns
sub
fst
rcl
ror
retf
mov
sub
pop
fild
inc
shr
jnp
push
mov
jo
cmp
ins
inc
sbb
lahf
or
ret
(bad)
jle
dec
ins
mov
sub
xchg
jg
adc
movs
inc
add
mov
mov
mov
mov
jge
loop
add
mov
and
sub
stos
ja
cdq
daa
pop
sbb
xchg
call
push
clc
xor
fstp
jecxz
les
stc
or
retf
inc
add
mov
cmps
cmp
fild
dec
jnp
jp
test
dec
cs
shr
leave
sbb
pushf
xor
cmp
cmp
in
mov
xor
std
addr16
push
xchg
mov
loop
xor
xchg
mov
push
inc
rol
shl
retf
pop
les
or
fsubrp
arpl
or
fcomi
mov
pop
dec
adc
cmp
test
fstp
mov
dec
movs
ret
cs
add
xchg
jmp
test
ds
dec
jg
sbb
jno
aad
out
and
cmps
hlt
adc
sub
icebp
mov
xor
cmp
lods
out
mov
hlt
fiadd
mov
sbb
xchg
lds
inc
jbe
ins
jmp
aas
lods
mov
add
into
mov
adc
in
mov
cmp
(bad)
mov
arpl
out
inc
add
int3
mov
cmps
cmp
or
or
or
adc
addr16
rol
sbb
loopne
sub
ins
pop
pop
bound
mov
sub
add
pop
push
(bad)
push
sbb
sar
mov
cdq
add
icebp
jg
mov
repnz
adc
cs
leave
(bad)
ja
inc
aas
add
pushf
ficomp
gs
or
adc
div
das
sub
data16
aad
mov
pop
mov
loop
cwde
jae
movs
mov
cmpxchg
cmp
es
push
jns
jle
sbb
sbb
adc
dec
dec
pop
add
mov
pop
mov
imul
pushw
jns
lahf
push
test
mov
stos
mul
cli
jle
jge
pusha
pop
jnp
enter
sub
pop
or
and
rcr
call
out
call
mov
movs
sahf
je
sub
call
pusha
pop
mov
in
int
sub
retf
mov
pop
rol
int3
sub
push
inc
mov
fdiv
call
ret
sub
sti
dec
push
and
pop
inc
imul
pushf
data16
or
adc
outs
mov
mov
(bad)
lock
fs
xor
ret
add
into
call
adc
dec
stos
mov
stos
or
sub
std
mov
imul
mov
jmp
cli
clc
jne
cli
lahf
dec
xor
jno
push
scas
xchg
push
(bad)
lods
sbb
mov
ins
in
cli
jp
fwait
xchg
mov
dec
aam
aad
mov
imul
mov
jg
ins
les
sbb
mov
pop
test
aam
dec
mov
pushf
movs
dec
dec
push
xor
pop
xor
pop
mov
(bad)
pushf
sub
adc
lea
movs
(bad)
adc
fucomi
or
mov
sar
fisttp
das
pop
and
pop
cmp
in
cmp
jl
mov
mov
icebp
in
cmps
ret
cwde
int
retf
shl
push
mov
push
jne
je
fisubr
or
sub
ins
jp
mov
mov
test
ins
pop
xchg
fidiv
cmps
mov
or
dec
lods
fistp
idiv
hlt
lds
dec
nop
jecxz
cmp
cmp
push
adc
imul
fnsave
pusha
dec
mov
xchg
pop
sbb
jmp
ret
gs
into
mov
and
add
mov
and
(bad)
mov
push
sub
cwde
mov
pop
ins
mov
inc
lahf
loop
xchg
jns
ds
inc
add
popa
sub
sub
jecxz
pop
in
mov
mov
(bad)
in
aas
sbb
fst
es
jmp
ret
enter
das
mov
(bad)
sub
ror
mov
jp
mov
sub
int3
out
fs
jnp
fisttp
sbb
lds
jge
aad
(bad)
mov
sbb
sbb
aaa
cs
aad
sub
sbb
add
dec
call
lock
fs
aad
inc
xor
lods
mov
mov
jmp
cmp
push
addr16
call
inc
or
int
out
add
xor
cmp
mov
popf
fld
and
dec
cmp
out
inc
outs
fld
sbb
push
ret
nop
pop
lds
fwait
jge
or
test
stos
(bad)
sar
repz
mov
jae
(bad)
clc
mov
pop
cs
adc
outs
jl
pop
icebp
mov
mov
dec
out
mov
dec
rcl
jmp
in
cmp
sub
in
mov
xor
xor
pop
sbb
jecxz
idiv
mov
sub
cld
(bad)
pusha
dec
mov
adc
mov
sub
clc
jne
jo
and
outs
daa
dec
push
cmp
call
add
bswap
and
loop
add
or
sub
lods
pop
xchg
(bad)
out
inc
sbb
int
cmp
sbb
imul
mov
loop
adc
mov
mov
lahf
sbb
mov
lods
ins
push
and
cld
mov
xchg
xchg
leave
lahf
push
popa
sub
retf
call
call
dec
mov
loop
pop
in
push
out
scas
sub
repnz
mov
xchg
mov
movs
mov
in
jmp
xchg
iret
xlat
jmp
adc
clc
out
and
adc
sub
hlt
push
in
mov
cmp
cwde
test
lods
pushf
pushf
jmp
fwait
enter
not
int
sbb
rcr
adc
push
imul
test
adc
cmp
cmp
(bad)
fild
aaa
in
push
imul
xlat
jmp
push
sbb
lods
dec
adc
(bad)
xcrypt-ofb
cmps
lods
fld
leave
cmp
mov
add
mov
sub
xchg
xor
cmp
jnp
cld
or
sub
(bad)
cmp
fld
cmp
adc
add
jne
push
shl
xchg
aas
dec
dec
ror
sub
bnd
pop
xor
aam
cs
xor
js
loop
and
pop
and
mov
cmc
jge
loop
and
nop
xor
dec
mov
les
pop
js
(bad)
mov
jg
or
mov
enter
dec
inc
sti
adc
inc
and
mov
lock
mov
sub
dec
imul
dec
imul
shr
sub
cli
pop
imul
or
cwde
push
addps
pop
cmp
retf
mov
adc
into
nop
push
sub
add
sar
arpl
xchg
in
sbb
call
and
sub
jmp
in
fild
dec
pusha
cmp
jmp
loopne
inc
mov
popa
int
scas
inc
mov
fisttp
cmp
ss
xor
push
or
je
je
dec
add
push
out
mov
add
xchg
pop
xor
cmps
int
test
sbb
nop
ja
sbb
cdq
dec
call
imul
imul
xchg
cmp
imul
mul
sub
cmp
pop
pusha
mov
pushf
jmp
rcr
mov
ret
or
dec
fst
mov
xchg
cmp
adc
fldcw
fistp
mov
push
xchg
push
test
dec
push
aaa
sbb
add
adc
(bad)
fs
dec
rcl
outs
repz
cmp
jle
pop
sub
(bad)
aad
addr16
pop
jl
aad
retf
add
shl
xor
enter
push
jmp
jmp
pushf
inc
inc
ret
cmp
ins
jbe
xchg
xchg
aaa
sbb
lea
mov
or
and
dec
sti
push
ds
and
les
xor
cmp
push
mov
inc
dec
adc
push
in
sub
mov
(bad)
loop
dec
sbb
cmp
or
loope
sbb
cwde
cmp
mov
mov
cmp
sbb
jne
mov
mov
jnp
icebp
nop
ror
mov
fstp
adc
stc
aaa
xor
push
ror
xor
loope
xchg
in
dec
jb
fnstcw
out
cmc
sti
mov
lds
cmp
pop
inc
mov
push
jae
mov
movs
stos
ret
jne
jmp
mov
jl
fldenv
mov
aas
adc
mov
mov
cmps
xchg
pop
add
push
or
mov
js
push
in
cmp
mov
lds
shl
jle
std
jo
pop
(bad)
out
aas
and
leave
sub
into
mov
cld
cmc
pop
call
pop
jno
xor
test
leave
inc
or
dec
add
int3
lahf
xor
push
or
push
adc
pop
mov
dec
lods
jecxz
cmp
loop
mov
ds
mov
imul
sahf
cld
mov
gs
ja
outs
ret
cmps
push
add
sbb
test
push
in
sbb
and
pusha
js
je
mov
pop
push
adc
loop
xlat
dec
fidiv
push
retf
fimul
cmc
iret
sbb
popa
add
fs
nop
and
ja
int3
sub
mov
fld
dec
and
xchg
or
or
xor
jbe
inc
inc
jp
retf
popa
inc
imul
daa
jbe
xor
stos
cdq
popf
lock
fnstcw
inc
pop
push
hlt
sub
fsub
push
adc
mov
repz
dec
aam
cmps
cmc
fwait
mov
in
mov
mov
jecxz
cdq
mov
sbb
add
cmp
popa
xor
add
add
ss
scas
mov
outs
sub
(bad)
push
mov
scas
jg
aaa
mul
jmp
dec
sti
cmps
aaa
nop
rcr
fst
mov
mov
dec
call
pushf
mov
imul
pop
xlat
rcl
add
div
push
(bad)
mov
cmp
and
fbstp
imul
cmp
add
int
lds
jbe
sub
push
test
scas
aaa
mov
mov
inc
mov
adc
dec
retf
mov
in
inc
fdivrp
stos
and
and
imul
mov
(bad)
cmp
out
mov
xor
xlat
jns
or
sub
add
(bad)
loopne
lods
jle
push
mov
mov
cwde
jb
xchg
push
xchg
dec
mov
jb
add
cmp
jmp
mov
repz
mov
fild
lock
or
xchg
jmp
sbb
dec
lds
stc
mov
pop
imul
mov
enter
or
mov
jo
mov
sub
dec
mov
xchg
push
nop
push
aaa
add
xchg
mov
add
out
jns
mov
aad
lds
add
mov
ins
add
cmp
dec
adc
nop
jmp
lock
pop
xchg
dec
adc
sar
inc
or
adc
(bad)
mov
ror
(bad)
push
aam
mov
or
retf
dec
jp
xlat
in
aas
out
xor
mov
int3
out
pop
out
mul
mov
fwait
add
std
sub
and
das
push
ficom
mov
push
pop
clc
cli
cli
add
repnz
fnstsw
rol
add
in
ret
fisub
test
push
loopne
inc
sar
xor
sub
ins
icebp
dec
cld
in
inc
or
xchg
mov
pop
jmp
int
in
aad
mov
gs
mov
xor
in
inc
jp
sahf
ret
or
sub
jnp
fld
sti
jb
mov
popf
add
mov
and
sbb
sahf
jle
mov
clc
xchg
stc
pop
xchg
(bad)
sbb
inc
xchg
pop
(bad)
mov
pop
jecxz
jl
xor
sti
cmp
fistp
sub
cmp
sub
add
ins
xchg
popf
cdq
add
leave
ins
mov
jne
sbb
mov
jg
dec
repnz
aas
out
jno
pop
mov
cmp
loope
lock
(bad)
(bad)
je
aad
dec
dec
(bad)
stos
pop
xchg
push
aad
cmp
mov
cmp
movs
fs
push
push
inc
(bad)
js
imul
inc
inc
add
and
xchg
ret
ds
inc
repz
test
add
jb
jmp
popf
adc
clc
out
dec
jl
add
clc
xor
ficom
pop
cs
sbb
push
mov
and
xlat
arpl
cld
mov
sbb
jmp
loop
add
dec
push
ret
mov
or
sub
sbb
cwde
mov
(bad)
jl
inc
repnz
xor
xor
xor
jmp
es
jp
ja
repz
sti
jb
or
add
sbb
aam
cs
fimul
mov
sub
cmp
jg
xchg
(bad)
inc
jae
mov
icebp
jle
fcomp
fwait
outs
xchg
mov
adc
mov
xor
mov
sub
call
or
(bad)
stos
cmps
sbb
popa
jno
push
cmp
mov
hlt
xchg
mov
bound
or
and
pop
int
add
jecxz
cmp
mov
stos
dec
test
inc
or
enter
mov
dec
xchg
ds
jb
in
ret
add
shl
sub
push
into
imul
fild
adc
add
push
pop
sub
sbb
mov
xchg
test
clc
xchg
int3
imul
sub
mov
shl
dec
fld
inc
mov
cmps
das
loope
and
push
out
ins
out
mov
out
outs
out
inc
mov
(bad)
loope
retf
ins
mov
leave
and
outs
in
pop
aaa
in
and
ret
and
xlat
shl
iret
aas
fwait
inc
daa
test
cmp
push
stos
xor
inc
xchg
scas
jnp
(bad)
jp
sti
mov
cmp
add
mov
ja
push
repnz
sti
mov
out
fidiv
ds
jecxz
mov
outs
sbb
in
inc
sbb
rcl
inc
rol
jne
adc
and
fisttp
(bad)
or
fdivp
pop
arpl
inc
lea
mov
call
and
mov
sahf
test
pusha
fmulp
add
adc
pop
out
xchg
add
scas
adc
push
push
sub
ss
jle
adc
pop
inc
dec
adc
inc
or
aad
and
fs
cmp
fsubr
ins
inc
ret
xchg
pushw
aaa
and
mov
jg
push
jno
jp
pop
fist
ins
mov
rcl
int
mov
sbb
aaa
adc
jge
adc
arpl
dec
inc
sub
cwde
(bad)
in
mov
stos
ficomp
int
jp
int3
sub
pop
test
in
sti
pop
aas
mov
push
aam
(bad)
sti
lods
out
mov
and
bound
aas
push
mov
push
retf
fucom
push
fyl2xp1
pop
popa
into
mov
movs
push
js
add
sub
rol
sub
inc
sbb
shl
pop
lods
xor
ins
into
sbb
fidiv
adc
xor
lock
xor
into
mov
popa
xor
pop
pop
out
sahf
sbb
sahf
inc
iret
rol
ret
mov
lock
fild
movd
mov
sub
xchg
dec
mov
jns
cmps
fisttp
in
sbb
cwde
push
mov
pop
xchg
shl
pop
scas
ret
mov
dec
xor
add
test
popf
ds
mov
enter
push
xchg
into
xor
movs
aas
lods
and
mov
adc
ret
in
repnz
mov
in
add
jp
sbb
inc
push
outs
jmp
add
into
pop
rcr
dec
xlat
(bad)
xor
pop
add
aas
outs
jge
or
out
aas
int3
cld
sbb
mov
adc
popa
xchg
test
lods
retf
pushf
loopne
jmp
fadd
popf
sub
icebp
mov
movs
pop
lods
xchg
add
scas
adc
dec
mov
mov
mov
ret
mov
aam
fstp
pop
in
push
xor
adc
addr16
mov
xchg
scas
mov
mov
xchg
pop
addr16
jge
popf
xchg
clc
(bad)
jmp
mov
test
fld
into
ret
mov
std
retf
fs
and
push
mov
pop
js
fidivr
and
xor
jne
mov
into
(bad)
int3
ror
nop
cmp
lock
popf
out
(bad)
push
arpl
fsub
or
fnstenv
ins
fiadd
xor
lea
lds
jmp
mov
or
loope
and
fistp
lods
fmul
das
test
clc
pop
dec
retf
mov
mov
push
pop
dec
ret
sbb
loopne
in
mov
push
and
cdq
sbb
aad
test
dec
es
cmp
js
dec
jmp
retf
ret
pop
sar
jo
or
(bad)
retf
dec
jmp
in
jle
jne
sbb
push
dec
das
jg
iret
adc
jo
ret
(bad)
and
pushf
js
jae
in
push
inc
in
iret
xor
mov
mov
pop
sbb
lods
icebp
jns
add
test
jl
mov
shl
jns
ficom
xor
mov
pop
scas
dec
stc
add
adc
push
jle
adc
and
outs
icebp
sbb
repnz
mov
push
cmp
test
mov
int
xor
fild
sti
and
lods
sub
fstp
mov
in
(bad)
std
shr
clc
in
loop
daa
test
mov
adc
xchg
(bad)
mov
int3
(bad)
loopne
mov
sub
stc
mov
inc
lock
das
xor
sub
lods
mov
aaa
and
(bad)
xchg
enter
leave
pop
test
cli
nop
pop
mov
push
adc
jo
push
sti
rcr
mov
push
adc
and
or
dec
sbb
loopne
pop
adc
(bad)
add
sub
and
xor
sbb
mov
jo
pushf
xchg
shl
loope
mov
pop
shl
std
cmp
fidivr
fisubr
mov
dec
js
(bad)
out
jle
push
push
clc
movs
jge
inc
push
sbb
int3
inc
dec
mov
sar
dec
hlt
ret
jmp
xor
fnstsw
jp
mov
xor
push
repz
hlt
inc
call
sub
jge
fwait
xchg
je
aaa
cmp
shl
aas
xor
inc
jmp
retf
(bad)
daa
lods
sub
lods
mov
ds
mov
in
mov
and
mov
sbb
fsubp
mov
xor
push
popa
daa
ret
adc
aaa
shl
inc
sbb
adc
ja
neg
dec
scas
adc
dec
mov
jecxz
into
mov
mov
ficomp
dec
add
retf
pushf
adc
sub
rol
or
xchg
inc
rol
and
fwait
rcl
cs
clc
pop
fbld
or
jno
or
lods
adc
mov
push
mov
daa
int
mov
jge
xchg
jae
stos
push
mov
into
add
mov
jl
test
push
or
imul
add
jl
hlt
icebp
pop
(bad)
repz
cli
(bad)
icebp
push
mov
sbb
pop
cmps
jae
jl
mov
hlt
mov
ins
mov
bnd
int3
pop
and
(bad)
or
mov
inc
adc
adc
mov
mov
bound
dec
and
dec
bound
bnd
nop
loope
nop
ror
and
popa
push
jmp
aaa
jno
cmp
xor
or
cmp
int3
xor
(bad)
xlat
or
data16
imul
push
emms
enter
jmp
pop
dec
sub
sbb
mov
pop
shl
sahf
out
xchg
int
imul
lock
mov
mov
aad
fstp
lds
nop
jmp
lea
cmpxchg
retf
pop
movs
mov
and
add
lods
lds
dec
xlat
adc
(bad)
jbe
jns
dec
ret
mov
inc
jnp
lods
data16
jle
imul
(bad)
in
jo
cmps
idiv
dec
clc
inc
jo
push
mov
pop
fisubr
pop
into
retf
sub
ret
arpl
inc
fsub
jecxz
and
outs
movs
push
mov
pop
and
sbb
or
das
fwait
out
les
jns
cdq
lahf
push
xchg
adc
sbb
adc
pop
fninit
call
lods
pop
mov
loop
pop
fdiv
or
add
enter
fwait
mov
popa
adc
mov
xchg
mov
add
add
fsubr
sbb
scas
fild
lea
xchg
aas
enter
in
mov
cmps
xor
and
repz
imul
in
mov
pop
pop
ret
add
and
cmps
or
xchg
lahf
lods
add
lock
sbb
sbb
fcmovne
and
pop
lods
frstor
neg
mov
pop
fnstenv
aas
inc
cli
pop
dec
cmps
aad
data16
mov
cdq
enter
jo
cld
sub
stc
cwde
mov
mov
dec
sbb
clc
popf
jmp
repz
sub
push
push
call
stc
pop
mov
sub
les
cmp
xchg
push
adc
adc
mov
adc
cmp
pusha
cmp
jae
movs
mov
shl
int
loopne
inc
arpl
fs
pusha
sbb
addr16
mov
mov
es
imul
cwde
stos
inc
and
outs
out
int
js
sbb
repnz
arpl
push
push
repnz
jae
shl
(bad)
es
rcl
loopne
dec
and
das
fcomp
jp
push
lods
scas
cmp
pop
jae
push
fist
in
jg
mov
xor
in
rcl
jbe
daa
mov
enter
test
mov
mov
into
fcom
add
mov
lods
pop
mov
add
lahf
adc
sub
sbb
cs
cmp
scas
adc
xchg
inc
daa
enter
fsub
imul
cmps
cld
adc
jg
inc
ret
mov
data16
inc
jo
or
sbb
add
xchg
push
xchg
popf
(bad)
out
in
sbb
mov
jmp
cs
(bad)
js
pop
addr16
scas
add
sar
jns
xor
add
shr
stc
mov
cmps
mov
cld
push
jo
mov
inc
pusha
pop
lds
and
push
sahf
jne
mov
mov
cmp
cmp
mov
ret
sbb
fdivr
iret
sub
cmp
pop
ds
xchg
pop
mov
cmp
rcl
iret
ret
push
push
cmp
nop
adc
popf
sub
xchg
fdiv
push
out
dec
repnz
and
pop
jg
lods
das
fs
inc
and
mov
aaa
jg
cmp
pop
out
add
call
aam
mov
push
sub
test
stc
data16
add
mov
mul
add
add
dec
sub
nop
(bad)
(bad)
sub
rcr
adc
pusha
mov
inc
pop
push
jle
sub
out
xchg
jno
pop
pop
push
and
jg
call
push
je
enter
outs
dec
out
cdq
enter
fwait
mov
and
repz
scas
fucomi
(bad)
inc
fmul
(bad)
xchg
sbb
out
mov
sbb
pop
jbe
sar
xchg
or
rcl
adc
xchg
test
cdq
xchg
inc
push
pop
mov
inc
jbe
repz
adc
mov
jmp
inc
ret
fimul
bound
inc
mov
rcr
retf
or
js
xchg
lahf
sub
mov
neg
jno
ins
test
call
cmp
rcl
add
push
xor
scas
xchg
outs
arpl
jne
or
pop
mov
in
(bad)
cmps
xchg
mov
cmp
xchg
or
adc
ret
mov
call
(bad)
mov
in
push
xchg
or
sbb
push
mov
int3
xchg
mov
jl
sub
in
int3
push
push
xor
mov
sub
imul
inc
repz
idiv
cmps
mov
into
retf
xchg
fwait
cmps
hlt
js
and
dec
sbb
adc
and
push
ins
imul
pop
ror
cld
idiv
pop
ror
dec
mov
mov
retf
pusha
or
add
add
ja
scas
pop
js
mov
jnp
pop
rol
inc
pushf
dec
(bad)
inc
(bad)
mov
mov
jne
mov
mov
std
sahf
cli
pop
jle
cmps
loopne
movs
mov
fsubr
addr16
(bad)
xchg
loop
fst
ss
jo
test
ret
jns
repz
retf
bnd
cmps
jg
xor
mov
xchg
out
and
(bad)
sti
pop
das
or
jl
push
xor
or
(bad)
jle
mov
or
iret
xchg
push
push
ds
mov
sahf
pushf
dec
adc
jmp
and
push
push
sar
add
or
lahf
mov
jo
add
(bad)
jo
jl
push
inc
pushf
sahf
push
or
pushf
sar
popf
lahf
lods
iret
psllw
test
(bad)
cdq
cs
addr16
ret
loopne
xchg
mov
int
repz
data16
push
mov
aaa
out
xor
sub
lods
pop
or
adc
or
(bad)
das
jl
movs
sbb
aad
jl
jae
ror
loop
inc
retf
retf
xor
pop
test
or
pop
push
push
add
stc
mov
sub
sub
out
iret
push
sbb
push
mov
sbb
sbb
neg
stc
and
(bad)
cdq
push
adc
movs
mov
int
add
les
xchg
fdivr
popf
mov
cmp
cmp
fisttp
push
mov
and
adc
xchg
cmps
push
lahf
rcl
push
xchg
pop
mov
sbb
popf
in
call
cs
aas
(bad)
mul
in
cmp
ror
cmp
ja
and
push
add
and
jmp
bound
cmp
dec
jae
shl
xor
shl
bound
retf
inc
xchg
mul
add
push
stos
or
fadd
fild
sub
mov
sbb
mov
sbb
lea
push
in
getsec
mov
ins
lods
and
lods
pop
jmp
xor
dec
xor
sub
in
bound
jb
popf
mov
cmp
(bad)
jge
add
lds
add
fstp
cwde
movs
loopne
int3
mov
cmp
dec
add
test
push
dec
jae
sbb
cdq
add
jb
fs
push
adc
jo
out
sub
adc
loop
push
mov
cmp
mov
outs
inc
xchg
out
fidivr
call
inc
imul
pop
cmc
shl
inc
inc
xor
mov
(bad)
fiadd
jae
(bad)
xchg
dec
das
xor
push
xor
dec
jge
cmp
jb
cmp
pop
jns
dec
dec
add
xor
(bad)
retf
mov
lahf
icebp
xchg
fisttp
ja
mov
pop
mov
cmps
pop
sete
push
into
push
jmp
or
xchg
cmp
(bad)
cli
mov
mul
sbb
push
popw
fs
out
sbb
push
push
test
frstor
cmp
lods
sahf
cmp
daa
push
push
xchg
test
pop
repnz
mov
fnsave
lods
dec
adc
adc
dec
jnp
inc
add
into
or
add
jmp
jo
stos
xor
popa
fs
mov
repz
jge
pop
lock
into
mov
xor
and
sub
dec
cmp
frstor
xor
loopne
in
adc
mov
cdq
imul
push
mov
iret
sbb
mov
inc
pop
into
inc
rcr
scas
popf
push
pop
cli
sub
sbb
mov
mov
imul
jle
aaa
mov
fadd
or
pop
sub
jmp
outs
loope
test
mov
add
sub
shl
in
pop
icebp
or
add
idiv
push
jns
inc
sti
push
mov
pop
test
add
sub
rol
jbe
adc
xor
int3
retf
fwait
es
mov
push
xchg
aas
(bad)
mov
mov
(bad)
dec
push
sbb
es
jae
push
jns
xchg
sub
push
cwde
test
or
mov
mov
mov
adc
mov
int
push
jge
fmul
pop
jno
xor
and
mov
cmp
fnstsw
gs
cwde
lds
mov
rcr
pop
fsubr
mov
inc
in
movs
sub
add
mov
ss
inc
jecxz
mov
retf
int
jmp
or
dec
add
addr16
leave
cmp
xchg
(bad)
scas
mov
jecxz
push
mov
xor
mov
adc
cmp
sbb
jbe
movs
dec
add
jne
pop
inc
mov
push
mov
adc
mov
call
es
daa
fist
arpl
push
scas
dec
in
std
or
cld
xchg
in
cmp
cmp
inc
imul
adc
jo
aaa
or
pusha
adc
das
cli
or
jp
aaa
clc
lock
inc
je
push
das
sti
and
loope
jmp
or
mov
daa
xlat
ds
jmp
ret
pop
(bad)
jae
lea
pop
imul
je
aaa
jns
and
jbe
stos
out
jge
and
xchg
xor
mov
and
lods
leave
rol
std
push
dec
cmps
sbb
stos
inc
test
sub
pusha
fidiv
adc
sbb
push
mov
or
mov
aam
and
rol
dec
lods
(bad)
les
cmp
add
jle
loope
jmp
and
add
(bad)
dec
iret
cmps
into
dec
rcl
inc
sub
int
inc
mov
mov
lds
addr16
fisub
sub
dec
mov
add
test
imul
loope
movs
mov
int
jnp
cmp
jb
push
push
cmps
sub
in
inc
add
jb
mov
and
dec
add
sbb
fidivr
shr
mov
add
cmps
adc
ins
sahf
sahf
fidivr
repnz
pushf
out
aas
mov
jne
(bad)
push
push
and
sub
rcl
fwait
dec
fsubr
jg
mov
push
in
(bad)
mov
sar
cwde
cmc
push
data16
jmp
inc
and
sub
stos
cwde
pop
jecxz
loope
(bad)
jno
pop
loope
js
xlat
cmc
mov
jbe
icebp
mul
popf
push
mov
ss
adc
pushf
stos
xchg
out
pop
cmps
dec
sbb
je
push
mov
adc
push
sbb
pop
pop
dec
hlt
and
mov
test
push
scas
mov
mov
push
(bad)
cld
les
out
adc
test
dec
inc
mov
mov
and
(bad)
jge
jmp
or
pushf
clc
cld
and
(bad)
or
clc
jns
mov
int3
mov
shr
xchg
mov
div
mov
idiv
push
sub
xor
test
clc
out
mov
aad
cmp
jno
icebp
cs
jg
xor
call
out
in
(bad)
rcr
xchg
fnstsw
cdq
daa
out
shl
inc
movs
add
jb
in
cmps
int3
inc
retf
sub
lods
inc
fisubr
je
or
xchg
xor
jo
mov
jge
pushf
xchg
dec
into
mov
lea
and
(bad)
mov
(bad)
(bad)
call
jbe
mov
or
push
outs
imul
xlat
mov
ja
pop
xchg
cmp
jmp
mov
xchg
sub
add
aam
hlt
cdq
push
mov
xlat
mov
pop
daa
dec
pop
add
data16
xor
dec
nop
push
xor
cld
std
jnp
loopne
sub
or
test
xor
dec
and
xchg
rcr
dec
mov
push
mov
sub
cs
dec
outs
sub
cdq
std
xchg
or
retf
inc
js
and
and
pusha
xchg
push
addr16
adc
pop
xor
inc
repnz
pop
leave
add
cmp
jmp
ja
das
xchg
dec
in
lock
pop
dec
imul
cdq
add
int
into
or
mov
outs
push
mov
fs
je
sbb
leave
icebp
adc
mov
push
cmp
cmp
addr16
and
(bad)
daa
dec
(bad)
jle
pop
mov
test
mov
repnz
sub
aam
pop
outs
pop
leave
sbb
mov
push
sbb
and
test
jge
call
ins
pop
cmc
shr
dec
sahf
(bad)
shl
inc
or
mov
icebp
ja
aas
sbb
jbe
cmps
retf
lahf
int
mov
into
xor
aas
lds
sbb
mov
and
jmp
fsubr
lods
cmp
movs
pop
ficomp
push
aas
sbb
xor
(bad)
xchg
pop
pop
shl
and
ficomp
mov
push
in
jb
out
test
jae
jns
adc
mov
mov
int
movs
and
fadd
push
mov
ret
sbb
sub
add
gs
inc
cli
mov
retf
lahf
sbb
ret
jnp
xor
and
lods
xor
mov
mov
data16
(bad)
aam
(bad)
(bad)
mov
xchg
in
mov
in
test
out
lock
mov
push
sbb
or
stc
xchg
js
sub
dec
fldenv
loopne
pop
fldcw
jmp
jbe
mov
and
(bad)
add
lock
xchg
shl
push
push
cwde
push
sbb
mov
idiv
mov
dec
fnsave
adc
xor
clc
fld
lods
out
pop
cmps
jecxz
(bad)
dec
xchg
cmp
pop
in
cmc
xchg
mov
xchg
pop
push
adc
inc
cmp
push
hlt
pop
or
mov
rol
push
push
ins
jb
dec
inc
loope
ins
repz
icebp
inc
pop
(bad)
fcomp
cdq
sbb
push
int
sub
sar
mov
out
push
jmp
(bad)
cmp
outs
lds
adc
or
add
in
and
jae
adc
cmp
inc
dec
int3
sahf
ja
test
test
cmp
mul
jb
inc
jne
fwait
popf
push
ret
jb
adc
outs
dec
es
rol
push
sbb
cs
inc
xor
movs
out
loop
push
push
in
(bad)
cld
scas
lds
mov
ds
pop
cmc
movs
mov
mov
bound
popf
cmp
(bad)
sti
and
cmc
lds
dec
in
mov
add
xor
out
ins
mov
(bad)
stos
inc
int
in
xor
xor
mov
pop
ret
mov
ret
popw
test
js
and
test
or
pop
push
dec
add
adc
and
lea
dec
rcr
push
hlt
in
add
cli
push
mov
dec
retf
push
test
les
mov
sbb
cmp
dec
icebp
mov
ds
ss
inc
inc
fstp
jp
adc
mov
xlat
mov
in
lock
xlat
pop
jo
aaa
cmp
dec
iret
scas
mov
cmp
(bad)
cmp
xlat
lods
push
fstp
sbb
les
sahf
mov
inc
test
xor
enter
cli
outs
test
ret
cdq
mov
out
mov
mov
mov
in
pop
jno
pop
icebp
test
pusha
call
pop
loopne
cmp
cdq
mov
sbb
in
mov
inc
sub
les
mov
adc
mov
rol
mov
shl
sahf
sbb
xchg
sbb
clc
pop
lods
sbb
iret
and
push
mov
and
arpl
add
pop
into
out
(bad)
mov
jle
and
and
lods
push
jge
mov
cmp
stos
paddusb
js
ret
xchg
call
mov
jl
pop
mov
dec
push
xor
nop
fidiv
popa
and
sti
jp
jl
jb
dec
fs
adc
mov
(bad)
out
pushf
jg
mov
mov
and
or
jns
leave
xor
mov
fisub
xor
add
fdivr
inc
inc
repz
enterw
nop
pop
(bad)
aaa
cdq
fwait
or
out
pop
jl
jb
jns
xchg
pop
mov
adc
push
sub
popf
cmps
and
cmps
and
cmps
out
xor
loop
jle
cld
test
cld
push
xchg
mov
jne
push
xchg
cdq
add
inc
xchg
cmp
std
xor
sbb
test
adc
imul
mov
dec
mov
and
or
inc
sbb
nop
idiv
add
mov
mov
pop
std
mov
dec
repz
js
dec
add
sbb
pop
iret
jmp
xor
cmc
sbb
mov
push
sbb
jle
mov
stc
and
cli
and
adc
in
dec
pop
lds
sub
pop
adc
mov
dec
(bad)
cmp
test
mov
jg
xchg
xchg
enter
push
addr16
push
in
jb
stos
mov
xchg
xor
popa
aaa
lock
rol
in
dec
pop
rcl
jmp
fnstsw
fadd
mov
cmps
cmp
xchg
push
jmp
mov
in
push
imul
mov
or
sbb
dec
sub
push
lea
mov
test
popa
pop
pusha
cdq
cdq
xchg
dec
rol
xor
push
or
(bad)
retf
call
lods
and
shr
mov
sub
call
pop
imul
xchg
xchg
repnz
stos
cmps
push
pusha
cs
mov
sar
mov
pop
sbb
js
push
adc
test
or
les
(bad)
clc
lods
push
sbb
xrelease
popa
sbb
pop
push
inc
sbb
push
mov
pop
jns
pop
lahf
sub
in
test
mov
cmps
cmp
out
mov
and
not
fsub
sub
hlt
jge
inc
cmp
in
scas
and
dec
sub
adc
push
retf
xchg
mov
pushf
lds
ins
scas
sub
jmp
(bad)
aad
push
fidivr
es
jmp
xor
aas
push
cdq
arpl
cmp
cld
xlat
cwde
inc
mov
xor
(bad)
jl
xor
mov
leave
addr16
int
pop
cli
cwde
pop
mov
fadd
xchg
cs
mov
test
mov
cwde
ficomp
shl
or
xchg
sbb
cmps
in
rcr
push
or
repnz
dec
adc
pop
icebp
pop
mov
sbb
push
xor
daa
dec
pop
retf
adc
or
ror
lea
retf
pop
pop
popf
test
sar
sub
sbb
imul
xor
pop
fiadd
mov
jg
fs
lahf
les
inc
inc
pop
(bad)
cmp
xor
ret
rcr
inc
jg
lahf
push
cmp
adc
xor
cmc
scas
jg
and
sti
push
jae
add
popa
imul
push
(bad)
clc
xor
mov
xor
in
cmp
inc
aam
xchg
shr
mov
retf
retf
(bad)
imul
inc
xchg
cwde
jne
push
mov
stc
pop
cmp
push
pop
pop
jnp
sbb
cli
dec
mov
sbb
shl
jecxz
into
mov
push
pop
popf
aas
mov
lods
mov
fucomi
adc
imul
mov
add
lods
fldenv
xor
loopne
cmps
gs
aas
unpckhps
loopne
adc
xchg
or
inc
imul
push
inc
inc
and
inc
jae
mov
nop
arpl
jmp
sahf
or
outs
sub
sub
or
xchg
jmp
add
xchg
mov
sub
shl
lahf
retf
sub
out
cmps
outs
daa
lods
ror
imul
aam
or
sub
xchg
fst
repnz
or
rol
fadd
jnp
inc
rcl
popa
sub
sbb
pusha
adc
loope
clts
loope
or
outs
or
dec
and
adc
mov
retf
cmp
adc
sbb
jecxz
pop
and
lods
xchg
rcr
aaa
mov
ja
mov
cwde
mov
or
mov
or
call
push
loop
xchg
cs
mov
and
rol
jno
cmp
pop
jle
sbb
fimul
adc
xor
mov
xlat
xchg
push
sub
call
imul
xor
lahf
sub
and
push
fdivr
out
cmp
jg
shl
jecxz
push
or
push
jno
pop
mov
pop
not
(bad)
cmps
fcom
jmp
(bad)
aam
jp
int3
and
push
scas
push
das
cmp
jbe
and
mov
push
inc
dec
jmp
cld
or
sbb
inc
retf
jae
neg
mov
(bad)
fiadd
iret
xor
mov
stos
data16
pop
jmp
test
mov
pop
mov
aas
mov
pop
mov
inc
push
xor
pusha
aad
cli
jb
aaa
mov
lea
lods
xor
jge
sbb
and
sbb
outs
fcmovb
jmp
xor
xlat
or
adc
(bad)
mov
ss
or
jle
dec
inc
fst
(bad)
dec
ss
push
add
jge
sar
sahf
fisubr
mov
scas
shl
movs
mov
das
fidivr
jae
push
pop
out
push
push
sub
icebp
js
push
dec
xor
aam
je
vpextrw
lds
imul
ss
rcl
jmp
nop
jl
mov
inc
adc
mov
daa
inc
out
shl
ds
mov
(bad)
fistp
pop
lock
jo
cli
pop
jae
ret
stc
lahf
imul
outs
test
mov
repz
adc
inc
ret
adc
pop
mov
cmc
and
jge
xor
jecxz
aam
cmp
mov
pusha
stos
pop
out
mov
jno
cmp
mov
jne
(bad)
jmp
cld
sub
mov
stos
movs
and
xor
sbb
mov
lock
cld
neg
pusha
mov
mov
mov
dec
movs
fsubr
call
je
imul
arpl
jo
not
les
fs
retf
xchg
cmp
cmp
xchg
xchg
or
and
(bad)
xchg
cmp
cmp
lods
shl
mov
pop
pop
add
dec
imul
loopne
fs
and
push
sub
jne
jb
or
jp
lods
mov
xor
clc
test
fild
pop
sahf
pop
icebp
test
xchg
or
jg
mov
stc
dec
sub
addr16
es
mov
loopne
ds
inc
xor
xlat
lock
pop
xor
pop
aaa
mov
sub
das
xor
stos
jmp
pop
fimul
lods
lea
jb
pop
dec
out
dec
(bad)
test
loope
adc
test
and
xchg
mov
loope
xor
stos
pop
adc
xchg
cmp
mov
xchg
repnz
scas
inc
sar
retf
jl
xchg
mov
lods
inc
je
add
adc
sub
aam
fs
lock
pushf
aaa
lods
int3
adc
adc
push
sbb
inc
pop
popf
push
pusha
xchg
fld
aas
xor
not
mov
push
add
nop
fwait
cmp
adc
push
inc
dec
add
imul
fnstsw
adc
call
aad
sub
push
(bad)
xor
mov
out
mov
jp
mov
and
das
add
ret
dec
aam
inc
fist
not
daa
sub
test
nop
dec
xor
jbe
pop
int3
adc
mov
paddsb
daa
loopne
jl
ror
dec
cmp
sub
jecxz
mov
jne
xchg
adc
add
movs
dec
shr
push
imul
cmps
inc
pxor
lods
or
dec
mov
push
xor
in
xchg
outs
(bad)
in
mov
inc
sti
imul
call
leave
sub
or
ins
out
pop
fnstsw
add
pop
xor
mov
loopne
fidiv
mov
icebp
mov
mov
xchg
das
cmc
xchg
imul
mov
xchg
xor
xor
fnstenv
stos
rol
add
xchg
popf
xlat
dec
pop
(bad)
push
ret
sbb
sbb
call
vpmacsdqh
mov
or
push
ror
pop
cld
inc
rcr
xor
or
pop
mov
out
inc
stos
(bad)
jno
arpl
cmp
push
jne
jmp
adc
cmp
dec
jne
xchg
push
cmps
ret
jle
(bad)
(bad)
fld
push
inc
and
fstp
sbb
out
sub
das
mov
sub
adc
mov
pop
inc
pop
shl
pushf
mov
adc
in
mov
sti
dec
pop
inc
mov
test
mov
pushf
adc
or
(bad)
fisub
in
push
jg
xor
fldcw
pop
mov
inc
repnz
dec
xchg
and
sub
aaa
mov
aam
test
(bad)
jecxz
pushf
jp
in
(bad)
xchg
outs
cmp
sbb
aaa
or
popf
mov
add
pop
call
iret
adc
dec
stos
movs
jl
stc
ins
ret
pop
xor
xchg
sbb
daa
xor
mov
sbb
push
lods
sub
daa
sbb
data16
es
int
cld
sbb
imul
data16
cs
leave
sbb
jg
call
xchg
imul
rol
mov
pusha
test
(bad)
inc
sub
stos
icebp
adc
loopne
jmp
dec
std
xchg
mov
stos
daa
(bad)
push
jecxz
fsub
clc
popf
dec
pop
pop
or
pushfw
mov
icebp
mov
or
xchg
push
push
pop
or
loop
push
inc
aas
lock
test
mov
hlt
sub
bnd
in
xchg
mov
sbb
jno
pop
popa
xchg
sub
or
sbb
xchg
sbb
test
mov
mov
adc
lods
ds
leave
mov
pop
sbb
fldlg2
and
mov
xchg
jle
enter
mov
cmps
xor
mov
pop
and
xchg
cmp
mov
das
dec
sub
push
jmp
(bad)
or
sahf
sbb
sub
int
cmp
sbb
jne
mov
dec
adc
retf
vpmadcsswd
and
add
(bad)
xchg
fild
repz
pop
mov
ret
xor
int
pop
inc
daa
or
ficom
jl
gs
jo
ins
adc
ins
dec
(bad)
mov
jbe
es
jno
fwait
ror
scas
stc
rcl
pop
lock
bound
xor
push
iret
fild
addr16
sub
les
pusha
xchg
sbb
cmp
pop
scas
ss
jae
addr16
adc
repnz
xchg
hlt
inc
add
adc
mov
sub
out
sbb
jecxz
fcmovnb
imul
cmp
fidiv
sub
(bad)
fldcw
cld
imul
add
and
and
jo
je
jo
sbb
cwde
mov
cdq
cmp
xchg
std
push
pop
scas
out
popf
mov
inc
scas
