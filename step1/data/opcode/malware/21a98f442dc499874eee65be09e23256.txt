rol
add
add
add
add
add
add
sbb
push
add
adc
or
adc
add
cs
add
push
sub
add
push
sub
add
pop
add
or
adc
add
enter
add
add
and
add
dec
add
cmp
or
add
or
add
add
dec
add
cmp
add
add
outs
or
add
pop
adc
sub
add
cmp
dec
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
cmps
(bad)
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
push
or
add
push
add
cmp
cmp
outs
or
add
and
ret
add
push
outs
or
add
cmp
add
add
push
add
add
push
add
cmp
adc
add
and
add
add
ret
add
push
jae
add
or
or
sub
or
sub
push
add
or
sbb
add
je
add
add
add
jae
add
or
jae
add
or
and
add
add
sbb
add
jae
add
or
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
push
add
or
fld
add
add
fiadd
add
(bad)
sbb
add
add
add
add
ins
ins
add
sbb
add
sbb
add
and
add
add
add
jle
add
add
adc
add
or
add
add
push
or
or
add
push
sub
add
(bad)
sbb
sub
add
add
add
add
add
pop
pop
add
sbb
add
sbb
add
and
add
add
add
jle
add
add
adc
add
or
add
add
push
or
or
add
push
sub
add
(bad)
sbb
sub
add
add
add
add
add
pop
pop
add
sbb
add
sbb
add
and
add
add
add
add
adc
add
or
add
add
push
or
or
add
push
sub
add
(bad)
sbb
sub
add
add
add
add
add
pop
pop
add
sbb
add
sbb
add
and
add
push
add
adc
add
add
adc
cmp
add
add
or
or
add
push
sub
add
(bad)
sbb
sub
add
add
add
add
add
pop
pop
add
sbb
add
or
sub
or
sub
sbb
add
add
add
adc
add
pop
add
or
push
add
or
cmp
add
add
or
sldt
add
mov
add
add
add
ret
push
(bad)
sbb
sub
add
adc
add
add
add
sbb
nop
add
sbb
add
and
add
or
add
add
sbb
add
or
add
add
push
or
push
add
add
mov
sub
sbb
sub
add
add
add
add
adc
add
sbb
add
sbb
add
and
add
or
add
rol
add
add
sbb
add
or
add
add
push
or
or
add
push
add
add
push
(bad)
sbb
sub
add
adc
add
add
add
pop
add
sbb
add
sbb
add
push
add
add
add
adc
sub
add
or
cmp
add
add
or
or
add
push
add
add
push
(bad)
sbb
sub
add
adc
add
add
add
adc
or
add
sbb
add
add
add
add
adc
mov
adc
add
sub
add
sub
cmp
add
cmp
add
add
or
add
add
push
or
adc
add
push
mov
mov
add
push
(bad)
sbb
sub
add
adc
add
add
add
sub
adc
add
sbb
add
add
add
add
add
adc
push
add
push
mov
add
add
sbb
ret
push
(bad)
sbb
add
add
add
add
add
adc
add
sbb
add
push
add
sbb
add
sub
pop
sub
or
sub
sbb
add
cmp
add
or
sbb
pop
add
sbb
or
add
sub
add
sub
jle
add
or
cmp
add
add
or
push
add
add
mov
add
sbb
sub
sbb
sub
add
add
add
add
sub
add
sbb
add
push
add
sbb
add
sub
xor
retf
add
add
adc
add
add
dec
add
cmp
or
add
or
add
add
dec
add
cmp
add
add
outs
or
add
pop
adc
sub
add
push
cmp
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
cmp
add
push
outs
or
add
and
ret
add
push
outs
or
add
cmp
add
add
push
add
add
sbb
add
cmp
mov
or
add
cmp
adc
add
and
add
add
ret
add
push
jae
add
or
add
or
sub
or
sub
push
add
sbb
add
sub
xor
add
add
adc
pushf
add
push
cmp
sub
add
jae
add
push
or
sub
sbb
add
pop
lea
add
or
push
push
mov
or
loopne
add
fld
add
add
add
adc
add
add
add
and
sbb
add
or
sub
or
sub
push
add
and
add
sub
add
sbb
add
sub
xor
mov
add
add
adc
add
add
dec
add
cmp
add
sub
add
or
push
outs
or
add
pop
adc
sub
add
cmp
add
inc
add
add
outs
or
add
and
ret
add
push
outs
or
add
cmp
add
and
add
add
push
add
cmp
add
pop
cmp
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
(bad)
jl
(bad)
dec
add
add
(bad)
(bad)
call
add
add
add
add
dec
add
cmp
(bad)
(bad)
call
or
add
add
dec
add
cmp
adc
add
and
add
add
ret
add
push
jae
add
or
add
or
sub
or
sub
push
add
pop
add
or
push
add
or
sbb
add
js
add
add
add
jae
add
or
jae
add
or
and
add
add
push
add
cmp
add
add
add
or
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
push
add
or
fld
add
add
fiadd
add
(bad)
sbb
add
add
add
add
jo
add
sbb
add
sbb
add
sbb
add
sldt
adc
add
add
and
add
or
or
add
push
sub
add
(bad)
sbb
sub
add
adc
add
add
add
adc
or
add
sbb
add
sbb
add
adc
add
jle
add
add
and
add
or
or
add
push
sub
add
(bad)
sbb
sub
add
adc
add
add
add
adc
or
add
sbb
add
sbb
add
add
or
add
and
add
or
or
add
push
sub
add
(bad)
sbb
sub
add
adc
add
add
add
adc
or
add
sbb
add
sbb
add
adc
add
jle
add
add
and
fisttp
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
adc
or
add
or
sub
or
sub
sbb
add
add
add
adc
add
pop
add
or
push
add
or
fisttp
add
add
mov
add
add
add
ret
push
(bad)
sbb
sub
add
add
add
add
adc
add
sbb
add
sbb
add
sbb
add
or
add
add
sbb
add
or
push
add
add
mov
sub
sbb
sub
adc
add
add
add
add
sbb
add
sbb
add
sbb
add
or
add
ror
add
add
sbb
add
or
or
add
push
add
add
push
(bad)
sbb
sub
add
add
add
add
adc
add
sbb
add
sbb
add
pop
add
add
add
adc
sub
add
or
fisttp
add
add
add
add
push
(bad)
sbb
sub
add
add
add
add
or
add
sbb
add
sbb
add
xor
add
or
add
add
or
add
sub
add
sub
fstp
add
add
or
adc
add
push
mov
mov
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
add
xor
add
add
add
add
adc
push
add
push
mov
add
add
sbb
ret
push
(bad)
sbb
add
add
add
add
add
adc
add
sbb
add
push
add
sbb
add
sub
xor
retf
add
add
adc
add
add
dec
add
cmp
add
push
or
add
add
pop
cmp
add
es
outs
or
add
and
ret
add
push
outs
or
add
cmp
push
add
add
push
add
cmp
or
add
or
add
add
push
cmp
add
es
outs
or
add
pop
adc
sub
dec
add
add
cmp
add
cmp
add
add
push
add
dec
add
add
add
(bad)
call
(bad)
(bad)
push
(bad)
call
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
(bad)
add
add
ret
add
push
jae
add
or
add
or
sub
or
sub
sbb
push
add
add
add
adc
jnp
add
or
add
or
pop
mov
add
sbb
adc
add
sub
add
sub
add
add
or
outs
sub
add
pop
or
add
mov
add
sbb
mov
add
sbb
mov
add
sbb
sub
sbb
sub
adc
add
add
add
xor
sbb
add
or
add
pop
add
add
add
add
sub
add
add
add
or
add
or
or
add
add
jb
add
(bad)
sbb
add
adc
add
add
add
push
add
sbb
add
or
sub
or
sub
or
add
sbb
add
add
add
add
sub
add
add
add
push
fisttp
add
add
sub
add
(bad)
sbb
add
add
add
add
push
add
adc
or
add
or
add
cmp
add
add
cmp
add
add
jnp
add
add
or
add
add
add
add
sub
add
fisttp
add
add
add
sub
add
(bad)
push
add
add
add
add
push
(bad)
sbb
add
add
sbb
add
add
add
and
or
add
add
add
add
add
sbb
add
sbb
pop
add
add
add
add
adc
outs
sub
adc
and
add
inc
and
add
sub
add
or
outs
das
add
or
add
add
dec
add
cmp
add
add
adc
and
add
and
xor
add
or
add
or
dec
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
pop
outs
xor
add
and
add
dec
add
cmp
sti
add
add
ret
add
push
outs
xor
add
add
sti
add
add
ret
add
push
outs
xor
add
and
push
add
cmp
push
outs
xor
and
add
push
mov
add
pop
mov
add
or
mov
sub
sbb
add
add
adc
add
add
add
rol
and
add
or
sub
or
sub
sbb
add
add
add
adc
add
movs
add
push
add
test
push
rol
sbb
add
sub
add
or
or
sldt
add
mov
add
ret
push
(bad)
sbb
sub
adc
add
add
add
daa
add
sbb
add
sbb
pop
add
add
adc
add
add
in
add
add
test
push
or
rol
sbb
add
sub
add
or
pop
movs
add
fst
add
add
mov
add
add
or
add
mov
add
(bad)
sbb
sub
add
adc
add
add
add
sub
push
sbb
add
push
add
sbb
add
sub
add
sbb
add
sub
xor
ret
add
add
aaa
add
or
outs
cmp
add
and
add
add
push
add
cmp
add
add
mov
add
add
cmp
add
and
add
add
push
add
add
mov
add
add
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
add
and
add
sub
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
jnp
add
add
or
add
add
add
add
or
jnp
add
add
and
dec
add
push
cmp
mov
or
sub
add
fisttp
add
add
sub
add
(bad)
sbb
add
adc
add
add
add
add
add
xor
add
add
add
add
add
add
add
or
add
sbb
add
sub
add
push
fisttp
add
add
sub
add
(bad)
sbb
add
add
add
add
sbb
add
sbb
add
or
sub
or
sub
sbb
add
add
add
add
adc
sub
add
sub
fstp
add
add
mov
add
add
jno
add
add
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
adc
sub
add
or
sbb
add
push
mov
jno
add
add
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
adc
sub
fstp
add
add
mov
jno
add
add
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
adc
sub
add
sub
fstp
add
add
mov
add
add
jno
add
add
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
adc
sub
add
sub
fstp
add
add
mov
add
add
jno
add
add
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
adc
sub
add
sub
fstp
add
add
mov
add
add
add
add
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
add
or
add
or
sbb
add
push
mov
add
add
jno
add
add
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
sub
add
sub
fstp
add
add
mov
add
add
jno
add
add
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
adc
sub
add
sub
fstp
add
add
mov
add
add
jno
add
add
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
pop
add
add
pop
add
adc
add
sbb
add
sub
add
or
add
or
jnp
add
add
pop
or
cmp
add
pop
rol
sbb
add
sub
pop
add
or
sub
add
or
movs
add
add
and
mov
mov
add
add
or
jno
add
add
mov
add
(bad)
sbb
add
add
add
add
add
add
dec
dec
add
or
sub
or
sub
adc
add
into
add
add
add
adc
add
add
sub
inc
add
add
add
add
outs
or
add
and
ret
add
push
outs
or
add
cmp
push
add
add
cmp
add
add
pop
cmp
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
inc
add
and
add
dec
add
cmp
(bad)
(bad)
call
or
add
add
dec
add
cmp
or
add
or
outs
or
add
pop
adc
sub
add
cmp
add
add
add
push
add
cmp
adc
add
and
add
add
ret
add
push
jae
add
or
add
or
sub
or
sub
push
add
sbb
add
sub
xor
ins
add
add
add
adc
aas
add
or
add
or
add
or
add
or
push
jb
add
jo
inc
add
or
pop
add
add
or
sub
add
push
jb
add
jo
inc
add
or
pop
add
add
or
adc
add
fld
add
add
fld
add
add
or
adc
or
push
add
add
pop
mov
add
add
add
push
(bad)
sbb
sub
sbb
add
add
add
add
or
add
add
add
pop
pop
add
sbb
add
push
add
sbb
add
sub
xor
add
add
add
add
add
add
or
fld
add
add
fiadd
add
(bad)
sbb
add
adc
add
add
add
sldt
sbb
add
or
sub
or
sub
sbb
add
add
add
adc
add
or
push
add
add
add
inc
add
or
and
add
add
push
add
cmp
add
add
jb
add
jo
inc
add
or
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
jnp
add
dec
add
add
add
mov
add
add
cmp
(bad)
(bad)
inc
cmp
jnp
add
add
sub
add
cmp
jb
add
jo
inc
add
or
push
add
add
add
dec
add
or
and
add
add
push
add
cmp
add
add
add
dec
add
or
or
add
add
add
add
add
pop
add
jo
inc
add
or
and
cmp
(bad)
jmp
push
jb
add
jo
inc
add
or
push
add
add
add
dec
add
or
or
add
add
add
add
add
pop
add
inc
add
or
and
add
add
push
add
cmp
(bad)
(bad)
inc
outs
sbb
add
or
sbb
add
push
add
add
add
mov
add
add
ret
push
(bad)
sbb
sub
inc
sbb
add
add
add
add
add
add
add
add
sbb
or
rol
add
and
add
add
and
add
add
push
add
add
add
push
outs
dec
add
or
add
add
jnp
add
add
pop
add
jo
inc
add
or
stos
add
add
jle
add
or
add
add
pop
add
add
push
add
add
add
add
or
add
add
jle
add
or
add
add
jle
add
or
add
add
pop
lea
add
add
push
pop
sub
or
add
or
add
push
add
add
cmp
add
pop
jb
add
jo
dec
add
or
xor
add
add
pop
movq
add
jge
add
add
jnp
add
add
pop
add
inc
add
or
pop
add
add
jle
add
or
add
add
pop
add
add
pop
jge
add
add
add
pop
adc
or
add
dec
add
add
add
push
outs
dec
add
or
add
or
add
add
aad
(bad)
inc
jb
add
jo
dec
add
or
jnp
(bad)
jmp
add
add
cmp
add
adc
jae
add
or
add
or
add
add
dec
add
add
push
outs
dec
add
or
pop
jb
add
jo
dec
add
or
mov
(bad)
(bad)
cmp
add
add
dec
add
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
push
add
add
push
add
(bad)
call
add
mov
cmp
(bad)
fstp
add
add
pop
or
adc
add
jno
add
add
sub
sbb
inc
sbb
add
add
add
add
add
add
or
sub
or
sub
push
add
push
add
or
push
add
sbb
add
sub
xor
add
add
add
add
push
add
or
push
mov
add
jae
add
or
add
or
push
add
add
fld
add
add
pop
add
add
fiadd
add
(bad)
sbb
add
add
add
add
add
sbb
push
sbb
add
add
add
es
sbb
add
sbb
pop
add
add
add
add
adc
add
add
add
add
add
add
or
push
add
or
add
jo
push
add
or
and
add
add
push
add
cmp
add
add
add
add
inc
add
add
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
jle
add
add
push
add
or
fld
add
add
sub
add
fadd
outs
pop
add
or
push
or
xor
add
jle
add
add
call
cmp
add
sub
pop
add
add
add
add
add
(bad)
add
add
pop
pop
or
jle
add
add
imul
adc
fst
add
add
pop
mov
add
sub
sbb
sub
sbb
add
add
add
add
loope
add
sbb
add
sbb
push
add
add
and
add
jae
add
or
add
or
sbb
cmp
add
add
pop
call
or
add
or
add
or
or
add
inc
pop
add
add
or
add
pop
pop
or
push
mov
into
(bad)
(bad)
call
or
add
pop
or
add
adc
push
pop
mov
or
movs
add
push
(bad)
sbb
add
add
sbb
add
add
add
add
or
add
add
add
pop
pop
add
push
add
sbb
add
sub
xor
add
add
add
add
add
pusha
add
add
lea
add
add
fld
add
add
fiadd
add
(bad)
sbb
add
add
add
add
add
push
push
add
sbb
add
or
sub
or
sub
xchg
and
add
sub
add
push
and
add
add
ret
add
push
sub
add
pop
add
or
add
add
xor
add
add
add
push
add
add
ret
add
push
jae
add
or
push
outs
pop
add
or
add
and
add
sub
add
push
sub
add
sbb
add
sub
pop
sub
or
sub
push
add
sbb
add
sub
sub
add
sub
add
push
sub
pusha
add
or
add
push
and
add
ret
add
push
sub
pusha
add
or
add
push
add
sbb
add
sub
pop
sub
or
sub
sbb
or
inc
add
add
add
adc
jle
add
add
adc
jle
add
add
sbb
add
jle
add
add
adc
outs
popa
add
or
push
cmp
add
add
adc
fst
or
or
add
add
and
or
add
pop
cmp
add
or
pop
cmp
add
jle
add
or
pop
fucom
add
add
pop
inc
pop
cmp
add
add
pop
aas
pop
push
bound
add
add
and
pop
or
xor
add
or
pop
pop
pop
sbb
add
add
and
pop
adc
jle
add
add
and
push
bound
add
add
and
pop
or
bound
add
jle
add
add
pop
outs
arpl
add
sub
or
add
bound
add
adc
adc
imul
add
or
add
add
sbb
add
jle
add
add
adc
or
push
add
add
fld
add
add
add
add
add
adc
push
fld
add
add
push
adc
frstor
add
add
pop
mov
mov
mov
add
add
add
mov
add
(bad)
sbb
pop
sub
inc
dec
add
add
add
jmp
add
adc
add
std
add
add
add
add
add
add
add
mov
add
pop
add
add
add
or
add
or
add
push
add
add
add
add
add
add
add
sbb
push
add
add
add
add
adc
add
jo
add
add
jb
add
data16
add
and
add
sub
add
sub
add
add
add
outs
add
jo
inc
add
or
adc
add
pop
sub
add
add
or
jle
add
add
push
push
add
or
add
or
jb
add
jo
imul
outs
push
add
sub
add
or
add
add
dec
add
cmp
add
add
sub
add
push
and
add
or
add
push
add
cmp
add
add
or
or
add
or
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
jmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
dec
lea
add
add
add
push
add
cmp
ins
add
or
or
cmp
add
add
outs
sub
add
(bad)
adc
add
push
pop
or
sub
sbb
add
inc
xor
add
add
add
add
pushf
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
sbb
add
sub
pop
sub
or
sub
push
add
push
add
or
push
add
push
add
or
push
add
push
add
or
sbb
add
add
add
adc
sub
add
add
add
push
jge
add
add
add
add
pop
cmp
add
add
add
add
push
jge
add
add
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
sbb
add
add
add
add
cmp
(bad)
(bad)
inc
mov
add
add
add
sub
or
add
add
sub
sbb
add
add
adc
add
add
add
add
sbb
add
sbb
add
mov
add
adc
sbb
add
add
outs
add
or
and
add
add
push
add
cmp
sbb
add
add
outs
add
or
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
call
push
lea
ror
add
add
outs
add
or
and
add
dec
add
cmp
push
lea
ror
add
add
outs
add
or
fld
add
add
fiadd
add
(bad)
sbb
add
add
add
add
add
mov
add
sbb
add
or
sub
or
sub
sbb
add
push
add
add
add
adc
jnp
add
add
fisttp
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
adc
jnp
add
add
jnp
add
add
add
add
add
arpl
fisttp
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
push
add
add
add
adc
jnp
add
add
jnp
add
add
add
fisttp
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
push
add
sbb
add
sub
pop
sub
or
sub
pop
add
add
add
add
add
add
sub
add
sub
pop
sub
or
sub
sbb
add
add
add
adc
and
add
lea
add
add
and
add
add
fild
add
cmp
mov
pop
and
call
pop
add
add
cmps
add
add
or
add
push
pop
and
pushf
pop
and
in
(bad)
(bad)
(bad)
cmp
add
add
pop
and
or
add
in
(bad)
(bad)
(bad)
cmp
add
add
pop
and
pushf
pop
and
add
add
in
(bad)
(bad)
(bad)
cmp
add
add
pop
and
pushf
pop
and
add
add
in
(bad)
(bad)
jmp
add
add
dec
add
cmp
add
add
or
push
add
add
push
add
cmp
add
add
jae
add
push
add
xor
add
or
or
inc
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
dec
add
add
(bad)
(bad)
jmp
(bad)
(bad)
push
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
pop
and
pushf
and
push
add
cmp
jae
add
push
add
add
add
pop
mov
add
push
(bad)
sbb
inc
sbb
add
add
add
add
add
add
or
add
sbb
add
add
add
add
sbb
add
add
sub
add
push
fisttp
add
add
add
add
push
(bad)
sbb
add
add
add
push
add
add
sbb
add
or
sub
or
sub
push
add
sbb
add
sub
xor
xchg
add
add
add
adc
lea
ror
add
add
outs
add
or
and
add
add
push
add
cmp
add
sbb
and
add
outs
add
or
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
ret
(bad)
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
pop
adc
and
add
outs
add
or
fld
add
add
fiadd
add
(bad)
sbb
add
add
adc
add
add
add
add
add
pop
sub
or
sub
sbb
add
lea
add
add
add
and
add
add
push
add
cmp
add
add
sbb
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
and
add
dec
add
cmp
(bad)
(bad)
inc
pop
adc
add
add
add
add
dec
add
cmp
jae
add
push
jge
add
add
add
add
add
in
add
push
jge
add
add
or
add
add
jb
add
(bad)
sbb
add
add
adc
add
add
and
add
xor
add
add
add
add
adc
jnp
add
add
fisttp
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
jb
add
sub
add
add
add
add
push
inc
push
add
add
add
add
dec
add
cmp
add
add
jnp
add
add
icebp
add
push
or
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
fisttp
add
add
or
or
add
add
jb
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
sbb
add
sub
add
add
add
add
cmps
add
push
or
or
add
add
jb
add
(bad)
sbb
sub
add
add
add
add
adc
add
sbb
add
or
sub
or
sub
sbb
add
add
add
adc
adc
and
add
outs
add
or
and
add
dec
add
cmp
add
pop
push
lea
add
add
push
or
mov
movs
add
add
push
pop
or
loope
add
popf
and
add
add
push
add
cmp
add
add
push
lea
add
and
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
call
adc
and
add
outs
add
or
and
add
add
and
add
add
and
cmp
add
add
add
add
pop
xor
pop
push
bound
loope
add
popf
jle
add
add
and
pushf
push
and
xlat
(bad)
(bad)
(bad)
cmp
add
jle
add
add
and
add
add
pop
sbb
add
popf
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
add
and
or
dec
add
cmp
(bad)
(bad)
inc
pop
pop
or
or
add
cmp
(bad)
(bad)
(bad)
jle
add
add
sbb
sub
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
and
add
add
(bad)
(bad)
(bad)
(bad)
cmp
add
add
add
add
and
(bad)
(bad)
inc
pop
pop
or
loope
add
popf
jle
add
add
and
pushf
push
and
add
add
sar
(bad)
(bad)
cmp
add
add
add
add
pop
test
pop
push
bound
loope
add
popf
jle
add
add
and
pushf
push
and
add
add
xlat
(bad)
(bad)
jmp
add
add
cmp
(bad)
inc
pop
push
aas
cmp
(bad)
(bad)
fisttp
mov
jb
add
(bad)
sbb
add
add
add
add
add
add
add
or
add
add
xor
add
add
add
add
adc
sub
add
add
jge
add
add
add
add
dec
add
cmp
add
add
and
inc
add
lea
add
jge
add
add
add
and
add
add
pop
adc
sbb
push
jge
add
add
sar
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
add
and
add
add
add
add
pop
(bad)
jmp
add
add
push
pop
pop
(bad)
jmp
add
add
add
dec
add
cmp
and
inc
add
lea
add
add
add
add
or
add
add
sub
sbb
add
add
add
add
push
add
rol
or
add
or
sub
or
sub
sbb
pop
add
add
adc
sub
add
add
jge
add
add
add
add
dec
add
cmp
add
add
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
push
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
push
add
lods
add
add
add
dec
add
add
add
add
add
add
sub
add
push
cmp
add
add
add
stos
add
add
sbb
add
add
add
add
mov
add
add
mov
add
(bad)
sbb
add
add
add
add
push
add
add
add
pop
sub
or
sub
sbb
add
add
add
adc
sub
add
add
jge
add
add
add
add
dec
add
cmp
add
add
add
add
add
add
add
add
out
add
push
cmp
add
add
jae
add
push
jge
add
add
and
add
add
jge
add
add
add
add
dec
add
cmp
add
add
and
add
lea
add
jge
add
add
mov
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
call
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
inc
add
and
add
jge
add
add
sldt
add
mov
add
ret
push
(bad)
sbb
add
adc
add
add
add
add
add
pop
sub
or
sub
sbb
add
push
add
add
add
adc
jnp
add
add
fisttp
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
sbb
add
sub
add
add
add
add
inc
or
or
add
add
jb
add
(bad)
sbb
sub
add
add
add
add
add
(bad)
str
sbb
add
pop
add
add
add
lea
add
add
add
add
sub
add
sub
pop
sub
or
sub
push
add
outs
add
or
add
push
sub
add
sub
add
pop
sub
or
sub
push
add
push
add
or
push
add
push
add
or
push
add
push
add
or
push
add
push
add
or
push
add
sbb
add
sub
xor
mov
add
adc
add
push
add
cmp
add
add
add
add
and
add
pop
cmp
add
add
add
pop
sub
add
or
pop
inc
pop
add
add
push
add
add
push
add
cmp
add
add
add
jb
add
je
add
add
retf
(bad)
(bad)
jmp
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
or
add
add
dec
add
cmp
add
xor
mov
add
adc
add
add
sub
add
push
cmp
add
es
or
add
add
dec
add
cmp
add
add
add
add
and
add
add
pop
add
add
add
jae
add
je
add
add
cmp
add
and
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
add
add
add
push
add
cmp
(bad)
(bad)
inc
jl
add
add
pop
sub
add
or
pop
inc
jl
(bad)
jmp
push
add
add
push
add
cmp
add
add
sbb
add
sub
pop
sub
or
sub
adc
add
sahf
add
add
add
adc
add
add
dec
add
cmp
add
add
sbb
add
add
jge
add
add
add
add
dec
add
cmp
add
add
add
add
aad
add
push
add
add
cmp
add
add
add
jge
add
add
add
add
dec
add
cmp
add
add
push
add
xlat
add
add
(bad)
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
push
(bad)
(bad)
call
add
add
add
aad
(bad)
jmp
add
adc
pop
add
add
adc
add
add
sub
add
push
cmp
add
add
add
add
add
push
add
add
push
add
push
cmp
add
add
sub
or
add
rol
add
add
add
jnp
add
add
rol
add
sbb
jae
add
push
outs
push
add
push
and
add
and
add
sub
add
push
sub
add
cmp
pop
add
add
push
or
cmp
add
add
jnp
add
add
sub
bound
add
and
add
sub
add
push
outs
je
add
or
mov
jnp
add
add
imul
or
pop
push
mov
jne
add
add
add
add
pop
push
mov
jnp
add
add
imul
add
add
add
pop
add
push
or
add
add
dec
or
cmp
add
or
push
or
add
jae
add
push
adc
adc
adc
pop
adc
add
add
push
add
jnp
add
add
fadd
add
or
add
sub
cmp
add
add
add
add
fadd
add
add
add
fld
add
push
add
add
add
fiadd
add
pop
cmp
add
add
dec
or
dec
add
add
add
(bad)
(bad)
jmp
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
add
add
add
add
sub
(bad)
(bad)
(bad)
jmp
add
jge
add
add
or
add
dec
or
cmp
add
add
pop
sub
or
sub
cmp
sub
add
add
jge
add
add
add
xor
add
add
adc
add
push
add
cmp
add
add
pop
jge
add
add
push
add
add
or
add
cmp
add
add
sub
jnp
add
add
jle
add
or
sub
push
cmp
(bad)
(bad)
jmp
add
push
add
dec
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
dec
add
add
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
add
cld
add
push
add
jge
add
add
add
add
dec
add
cmp
and
ret
add
push
outs
dec
add
or
jbe
(bad)
jmp
add
add
cmp
add
pop
sub
or
sub
adc
add
jg
add
add
add
and
add
add
push
add
cmp
add
add
add
dec
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
sub
add
and
add
add
cmp
(bad)
(bad)
jmp
add
add
add
fld
add
add
cmp
sub
push
add
add
add
push
add
add
add
push
add
add
add
cmp
adc
or
add
sbb
add
add
pop
sub
or
sub
adc
add
add
add
adc
add
and
add
cmp
add
add
add
lea
add
add
add
add
push
add
add
cmp
add
add
add
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
add
add
cmp
and
add
push
sub
add
cmp
add
add
and
ret
add
push
sub
add
cmp
add
add
add
lea
add
add
add
outs
add
or
add
add
add
cmp
and
add
outs
add
or
add
add
or
add
dec
add
cmp
add
add
sub
add
push
add
jge
add
add
jne
add
and
push
add
dec
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
aas
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
jmp
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
add
add
sub
add
push
cmp
add
add
add
lods
add
add
ret
add
push
outs
jge
add
and
add
and
add
add
cmp
(bad)
jmp
sub
xor
ds
add
das
add
adc
or
add
dec
adc
cmp
add
add
inc
add
add
pop
add
add
push
adc
cmp
ret
add
ret
add
push
cmp
add
add
retf
add
add
ret
add
push
or
jnp
add
add
or
mov
jnp
add
add
jae
add
push
adc
add
inc
add
add
jle
add
cmp
add
add
add
iret
add
add
jnp
add
add
clc
add
add
ret
add
push
or
add
or
or
or
add
or
add
or
pop
add
add
or
pop
add
push
push
cmp
add
add
add
add
dec
push
add
xchg
add
add
outs
add
or
pop
add
push
or
add
or
sub
add
add
dec
push
add
bound
add
add
add
add
loop
add
sub
add
push
and
add
add
ret
add
push
outs
add
test
add
cmp
add
add
jnp
add
add
jmp
add
sub
add
push
and
add
add
ret
add
push
outs
add
test
add
cmp
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
push
push
add
or
add
add
add
add
push
(bad)
(bad)
push
(bad)
call
(bad)
call
add
push
add
add
(bad)
jmp
add
and
add
add
push
push
add
leave
(bad)
(bad)
inc
jnp
add
add
aam
add
sub
add
push
and
add
add
ret
add
push
outs
add
xchg
add
or
(bad)
dec
outs
xchg
add
cmp
(bad)
(bad)
jmp
add
add
dec
push
add
test
(bad)
inc
push
sub
pop
add
add
and
add
cmp
(bad)
jmp
add
add
add
add
add
sub
add
push
and
add
add
ret
add
push
outs
add
add
add
or
pop
add
add
or
add
or
sub
jnp
add
add
mov
add
adc
adc
add
adc
adc
or
add
add
mov
or
add
dec
adc
cmp
add
add
or
and
add
sub
add
push
outs
inc
add
or
adc
adc
and
add
add
ret
add
push
sub
inc
add
or
adc
pop
sub
add
or
adc
outs
sbb
add
adc
or
add
add
or
add
and
add
add
and
add
cmp
and
add
add
ret
add
push
adc
add
mov
add
adc
mov
add
cmp
add
add
jne
add
add
or
add
or
add
add
aaa
add
add
add
mov
add
adc
add
cmp
movs
cmp
add
adc
jae
add
or
or
pop
pop
and
inc
(bad)
(bad)
call
or
daa
outs
mov
add
adc
or
outs
mov
add
adc
and
add
add
ret
add
push
outs
inc
add
or
cmp
(bad)
jmp
or
add
dec
adc
dec
add
add
add
add
add
(bad)
(bad)
push
(bad)
(bad)
jmp
add
add
add
add
add
test
(bad)
call
(bad)
(bad)
jmp
add
xor
add
and
add
add
push
adc
cmp
outs
sbb
add
outs
inc
add
or
push
adc
cmp
sub
add
push
adc
and
add
add
cmp
adc
outs
dec
add
or
ds
add
add
or
or
or
add
dec
adc
cmp
(bad)
call
add
add
add
add
cmp
(bad)
call
or
sub
add
or
adc
outs
sbb
add
adc
cmp
add
add
outs
sbb
add
adc
cmp
add
adc
lea
add
cmp
add
add
add
mov
add
add
mov
add
outs
mov
add
cmp
add
add
add
mov
add
adc
add
jae
add
push
adc
add
push
adc
cmp
(bad)
(bad)
inc
pop
add
cmp
add
add
add
aam
(bad)
jmp
or
add
dec
adc
cmp
(bad)
(bad)
call
or
outs
sbb
add
outs
inc
add
or
adc
and
add
add
ret
add
push
outs
inc
add
or
adc
adc
outs
inc
add
or
and
and
add
cmp
add
pop
add
add
jle
add
cmp
add
add
push
(bad)
cmp
add
add
adc
pop
add
push
push
cmp
add
and
add
cmp
add
add
add
xchg
add
sub
add
push
add
sub
add
and
add
add
and
add
cmp
add
add
out
add
push
cmp
add
add
pop
add
add
cmp
add
add
add
add
add
aam
add
sub
add
push
and
add
add
ret
add
push
outs
add
cmp
add
add
sub
add
push
cmp
add
sub
add
nop
add
or
or
add
or
add
or
push
or
add
add
sbb
add
and
add
add
ret
add
push
or
cmp
add
sub
add
push
sub
add
adc
adc
cmp
add
and
add
sub
add
push
or
inc
add
add
ret
add
push
sub
add
adc
add
add
add
inc
add
add
ret
add
push
adc
sub
add
push
outs
add
add
add
adc
(bad)
(bad)
cmp
(bad)
(bad)
jmp
push
add
add
push
(bad)
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
(bad)
push
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
dec
add
add
add
add
dec
(bad)
cmp
(bad)
(bad)
inc
push
sub
sldt
add
or
add
or
or
sub
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
push
add
sldt
add
add
add
xor
adc
add
xor
add
and
and
add
cmp
add
cmp
add
adc
push
add
add
push
add
cmp
add
add
add
add
and
add
add
push
add
cmp
add
cmp
add
add
jnp
add
add
outs
xchg
add
or
add
add
sub
pop
add
add
or
pushf
add
add
pop
pop
or
add
add
add
xchg
add
or
enter
cmp
add
push
add
dec
add
add
add
(bad)
dec
add
add
add
push
add
add
(bad)
dec
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
xchg
add
or
add
add
add
outs
xchg
add
or
jnp
add
add
dec
add
add
ret
add
push
adc
sub
add
add
add
push
add
cmp
adc
jmp
add
add
cmp
(bad)
jmp
add
add
xor
stos
add
add
add
adc
add
add
dec
add
cmp
adc
add
xor
add
and
add
add
push
add
dec
add
add
add
add
retf
dec
add
add
(bad)
(bad)
dec
add
add
add
and
add
cmp
(bad)
(bad)
inc
jnp
add
add
push
add
add
ret
add
push
adc
sub
add
jnp
add
add
pop
add
add
ret
add
push
add
add
or
add
and
add
cmp
xchg
(bad)
(bad)
inc
add
lahf
add
push
or
add
add
pop
cmp
(bad)
jmp
sub
add
xor
clc
add
add
add
adc
add
push
add
cmp
cmp
add
add
outs
xchg
add
or
data16
add
ret
add
push
outs
xchg
add
or
enter
and
add
add
push
add
cmp
add
outs
xchg
add
or
add
or
add
add
ret
add
push
sub
outs
or
add
jae
add
push
jge
add
add
push
add
add
and
add
cmp
add
sub
add
push
or
add
add
dec
add
cmp
add
add
add
outs
call
inc
pop
pop
pop
or
add
add
or
add
add
outs
xchg
add
or
cmp
add
add
push
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
call
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
push
sub
xor
add
add
adc
cmp
add
add
add
push
add
push
or
or
add
cmp
add
adc
add
ret
add
push
sub
fiadd
add
adc
pop
outs
mov
add
adc
add
or
adc
pop
outs
mov
add
cmp
or
add
dec
or
dec
add
add
add
add
push
add
add
add
mov
add
lods
add
add
add
add
add
add
add
add
add
add
push
add
add
push
or
cmp
loop
add
add
add
or
add
outs
pushf
add
or
sbb
add
add
add
add
outs
popf
add
or
add
add
cmp
xchg
add
add
add
or
add
outs
xchg
add
or
add
or
add
or
add
add
or
ds
add
and
add
add
cmp
(bad)
jmp
add
add
or
push
adc
outs
dec
add
or
ds
add
adc
push
outs
inc
add
or
adc
outs
mov
add
and
add
add
and
add
cmp
(bad)
(bad)
jmp
add
add
or
outs
add
add
outs
add
or
add
add
add
cmp
(bad)
(bad)
call
add
sub
add
cmp
(bad)
(bad)
inc
jnp
add
add
test
add
sub
add
push
adc
jnp
add
add
add
sub
add
or
push
ds
add
add
jnp
add
add
mov
add
sub
add
push
adc
sub
add
add
add
mov
and
add
add
ret
add
push
outs
mov
pop
adc
push
ds
add
adc
outs
dec
add
or
pop
adc
adc
outs
dec
add
or
mov
iret
add
add
ret
add
push
and
add
add
ret
add
push
outs
mov
or
add
or
add
or
adc
outs
pop
add
outs
inc
add
or
add
add
add
movs
add
or
add
add
dec
or
cmp
(bad)
(bad)
inc
jnp
add
add
add
sbb
add
outs
movs
add
or
jnp
add
add
or
add
or
or
add
dec
or
cmp
std
(bad)
inc
jnp
add
add
fld
add
sub
add
push
adc
sub
add
add
add
fld
add
add
inc
sbb
add
add
add
add
add
add
add
add
add
add
sbb
push
add
add
xor
add
and
add
add
push
cmp
cmp
add
add
add
add
add
add
or
add
add
push
add
add
cmp
add
add
add
add
fdivrp
(bad)
jmp
add
add
sub
add
push
cmp
add
add
add
jnp
add
add
jae
add
or
add
or
add
add
add
add
add
add
dec
cmp
dec
add
add
add
(bad)
(bad)
dec
add
xchg
(bad)
(bad)
jmp
or
add
or
add
add
add
pop
cmp
(bad)
(bad)
jmp
add
add
add
test
jnp
add
add
out
add
sub
add
push
jae
add
push
adc
add
add
add
pop
add
add
ret
add
push
and
add
sub
add
push
outs
jge
add
outs
add
in
add
sbb
add
sub
add
push
sub
sbb
sbb
and
ret
add
push
sub
add
in
add
sub
add
sub
add
push
sub
add
push
outs
add
loopne
add
lods
add
or
lods
add
or
add
add
jnp
add
add
xor
add
sub
add
push
add
add
add
sbb
sbb
mov
ret
add
push
sub
add
in
add
cmp
add
sub
add
push
sub
sbb
add
add
ret
add
push
sub
add
call
scas
add
or
or
add
add
add
add
mov
add
add
add
add
jb
add
sub
add
push
jle
add
or
add
push
outs
mov
add
add
add
add
mov
add
push
or
add
add
add
add
mov
add
add
add
add
jb
add
sub
add
push
push
outs
cmps
add
or
jnp
add
add
dec
add
add
ret
add
push
jae
add
push
adc
sub
add
push
or
sub
pop
push
adc
cmp
adc
call
add
jnp
add
add
mov
add
sub
add
push
jae
add
push
adc
add
add
add
pop
add
add
ret
add
push
pop
outs
or
add
outs
add
in
add
pop
add
add
ret
add
push
pop
outs
mov
add
outs
add
inc
pop
add
add
jnp
add
add
add
add
ret
add
push
and
add
add
ret
add
push
outs
add
add
add
fld
add
add
sldt
add
and
pop
add
add
and
add
or
adc
pop
pop
adc
adc
adc
mov
push
(bad)
(bad)
(bad)
fisttp
add
add
push
cmp
add
add
push
outs
sub
add
fadd
jnp
add
add
jo
add
sub
add
push
jae
add
push
adc
add
add
add
dec
add
add
jnp
add
add
mov
add
push
ds
jnp
add
add
mov
add
outs
mov
add
adc
cmp
add
add
and
mov
add
add
add
mov
add
sub
add
push
jae
add
push
adc
jnp
add
add
pop
add
add
ret
add
push
or
add
or
add
add
push
cmp
add
add
add
add
add
outs
mov
pop
add
add
add
cmp
add
and
add
add
push
aaa
add
or
add
add
add
add
add
add
add
add
add
add
add
dec
aaa
add
aad
(bad)
inc
jnp
add
add
add
add
sub
add
push
and
add
add
ret
add
push
outs
add
add
add
push
aaa
add
test
(bad)
(bad)
cmp
add
add
jnp
add
add
inc
add
add
ret
add
push
and
add
sub
add
push
or
inc
add
add
ret
add
push
sub
add
add
add
and
pop
add
add
and
sub
add
fcom
and
mov
in
(bad)
(bad)
(bad)
fisttp
add
add
and
push
pop
add
sbb
add
or
fisttp
add
add
and
pop
add
add
and
add
or
add
add
add
rol
add
jnp
add
add
mov
ds
add
add
add
add
sahf
add
add
ret
add
push
jae
add
push
adc
add
mov
mov
cmp
add
adc
sub
add
jnp
add
add
mov
add
sub
add
push
jae
add
push
adc
add
add
add
les
add
sub
add
push
adc
add
add
add
cmp
add
add
add
add
add
rol
or
add
add
push
cmp
cmp
add
add
add
add
leave
add
add
ret
add
push
adc
add
add
in
add
(bad)
add
add
ret
add
push
adc
add
sub
sub
add
or
add
or
cmp
add
and
add
add
push
cmp
dec
add
add
add
(bad)
call
add
add
add
add
add
and
add
dec
cmp
cmp
(bad)
(bad)
call
add
add
dec
add
or
ds
add
add
jnp
add
add
fild
add
sub
add
push
adc
add
add
add
add
push
cmp
cmp
sbb
add
add
add
add
call
ret
add
push
adc
add
add
add
add
daa
cmp
add
add
daa
outs
sub
add
fcom
es
add
or
movs
(bad)
(bad)
(bad)
fisttp
add
add
es
push
sbb
add
outs
sub
add
(bad)
sldt
add
and
add
and
or
add
add
add
icebp
add
add
ret
add
push
jae
add
push
adc
add
add
add
or
add
ret
add
push
sub
add
or
add
or
add
or
jnp
add
add
sbb
add
ret
add
push
sub
add
or
add
or
add
or
add
or
jnp
add
add
sub
add
ret
add
push
sub
add
or
add
or
sbb
add
outs
ret
add
or
jnp
add
add
cmp
add
ret
add
push
sub
add
outs
ret
add
or
jnp
add
add
dec
add
add
ret
add
push
sub
add
cmp
add
add
push
add
add
ret
add
push
cmp
add
add
fld
add
sub
add
push
outs
ret
add
or
jnp
add
add
pop
add
add
ret
add
push
sub
push
cmp
add
add
push
add
add
ret
add
push
cmp
add
add
fld
add
sub
add
push
outs
ret
add
or
jnp
add
add
popa
add
add
ret
add
push
sub
add
cmp
add
add
push
add
add
ret
add
push
cmp
add
add
fld
add
sub
add
push
outs
ret
add
or
push
add
add
fld
add
add
sldt
add
sub
pop
add
add
sub
add
or
jae
add
or
push
add
add
add
pop
cmp
add
add
push
adc
outs
enter
adc
outs
leave
add
or
pop
adc
cmp
(bad)
(bad)
call
push
outs
retf
or
jnp
add
add
jb
add
sub
add
push
jae
add
push
adc
adc
outs
retf
add
or
sub
mov
sub
int3
add
or
or
adc
sub
or
add
or
add
sub
add
push
outs
into
add
or
add
add
or
add
or
add
sub
add
push
outs
iret
add
or
add
adc
adc
outs
rol
add
adc
push
adc
adc
outs
rol
add
adc
and
add
adc
rol
add
adc
or
mov
add
adc
adc
adc
pop
fs
add
add
or
or
fs
inc
dec
add
add
jnp
add
add
pushf
add
add
ret
add
push
jae
add
push
adc
add
mov
add
sub
add
push
adc
sub
add
add
add
sub
add
sub
or
(bad)
or
fs
add
adc
adc
pop
fs
cmp
fisttp
or
add
ret
add
push
outs
rol
add
adc
aam
add
movs
add
push
adc
add
ret
add
push
outs
rol
add
adc
aam
add
movs
add
movups
add
ret
add
push
outs
rol
add
adc
aam
add
movs
add
adc
or
add
ret
add
push
outs
rol
add
adc
aam
add
je
add
sbb
adc
or
push
adc
adc
sub
add
push
cmp
add
add
jnp
add
add
push
add
add
push
jae
add
push
adc
add
add
add
retf
add
ret
add
push
adc
sub
add
in
add
in
add
sub
add
push
adc
sub
add
adc
jns
add
adc
adc
push
ds
add
add
add
add
mov
add
sub
add
push
adc
sub
add
adc
add
jnp
add
add
xlat
add
add
ret
add
push
adc
sub
add
adc
push
adc
cmp
add
add
das
adc
call
jae
add
push
adc
adc
add
fld
add
add
fld
add
add
xor
pop
adc
adc
adc
mov
into
(bad)
(bad)
(bad)
fisttp
add
add
cmp
add
add
outs
sub
add
(bad)
push
add
add
fld
add
add
sub
aad
add
cmp
std
(bad)
(bad)
fstp
add
add
sub
and
add
adc
adc
cmp
add
add
xor
add
or
fld
add
add
fld
add
add
sub
(bad)
add
or
cmp
(bad)
(bad)
fisttp
add
add
sub
push
sbb
add
outs
sub
add
(bad)
sldt
add
sub
pop
add
add
sub
add
or
add
sbb
add
add
add
add
pop
add
add
push
jae
add
push
adc
add
add
add
sub
add
sub
add
push
add
add
add
movs
add
or
xor
xor
add
or
add
or
adc
add
jnp
add
add
adc
or
add
or
push
frstor
add
add
pop
pop
and
pop
outs
fadd
add
pop
and
pop
add
or
push
fld
add
add
jnp
add
add
fld
add
sub
add
push
adc
outs
ret
add
or
adc
adc
add
movs
add
or
xchg
(bad)
(bad)
(bad)
fisttp
add
add
xor
pop
add
add
xor
add
or
add
add
add
xor
ret
add
push
jae
add
push
adc
jnp
add
add
sub
add
sub
add
push
add
add
add
scas
add
or
xor
add
or
add
or
adc
cmp
add
add
jnp
add
add
pop
add
add
ret
add
push
jae
add
push
adc
add
add
add
sbb
add
or
sbb
add
add
cmp
add
adc
jnp
add
add
dec
add
or
ds
add
and
add
dec
cmp
cmp
add
add
jnp
add
add
dec
add
add
ret
add
push
adc
jnp
add
add
add
(bad)
(bad)
jmp
add
add
dec
cmp
dec
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
dec
add
add
add
add
dec
cmp
cmp
(bad)
(bad)
inc
jnp
add
add
inc
add
add
push
adc
jnp
add
add
add
add
add
cmp
add
add
outs
sub
add
fcom
sbb
pop
adc
adc
add
add
add
scas
add
or
adc
(bad)
(bad)
fisttp
add
add
xor
pop
add
add
xor
sub
add
(bad)
sldt
add
sbb
pop
add
add
sbb
add
or
add
add
add
fiadd
add
add
add
add
fild
add
and
and
add
cmp
add
add
add
fadd
add
add
jnp
add
add
fld
add
jge
add
add
pop
add
add
push
repz
inc
jnp
add
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
jo
add
sldt
add
add
add
add
add
add
add
add
add
push
add
sldt
add
add
add
add
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
sldt
add
add
xor
add
xchg
pop
add
push
add
add
add
add
add
bound
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
adc
add
push
or
add
add
add
add
add
add
cmps
or
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
data16
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
iret
add
add
or
add
add
add
add
add
add
add
pop
add
jmp
add
in
add
sldt
add
add
sbb
add
pop
or
add
add
add
add
add
add
adc
add
mov
or
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
sbb
add
add
add
add
add
add
add
add
push
jae
add
push
adc
push
or
sub
add
add
add
add
outs
xchg
add
or
pop
jnp
add
add
pop
jnp
add
add
add
add
add
push
add
add
push
jae
add
push
adc
add
add
add
dec
add
add
ret
add
push
adc
sub
add
add
adc
add
ret
add
push
pop
lea
add
add
adc
adc
pop
sub
adc
outs
dec
add
or
adc
adc
cmp
adc
adc
adc
adc
and
add
sub
add
push
sub
sbb
add
or
add
or
push
outs
dec
add
or
or
add
push
adc
add
adc
pop
adc
adc
adc
(bad)
dec
pop
outs
fiadd
add
adc
push
add
add
adc
adc
add
adc
adc
outs
mov
add
outs
pop
add
adc
adc
and
add
sub
add
push
sub
push
add
add
or
xchg
add
push
sub
or
add
push
adc
add
push
pop
pop
adc
adc
adc
(bad)
(bad)
call
add
add
outs
sbb
add
adc
add
add
cmp
xlat
add
add
jne
add
add
scas
add
add
aaa
add
add
ret
add
push
adc
cmp
add
sub
add
push
sub
add
add
push
sbb
cmp
add
adc
outs
mov
add
sub
add
cmp
add
add
add
xchg
add
or
add
or
movs
(bad)
(bad)
jmp
add
add
cmp
or
mov
ret
add
push
sub
add
or
add
jle
(bad)
jmp
add
add
dec
sbb
dec
add
add
add
(bad)
(bad)
call
dec
(bad)
(bad)
dec
add
add
add
add
dec
sbb
cmp
(bad)
(bad)
(bad)
cmp
inc
add
add
ret
add
push
adc
inc
add
add
ret
add
push
sub
add
push
add
add
fld
add
add
add
sbb
add
add
add
add
inc
add
add
ret
add
push
adc
cli
add
push
outs
add
xchg
add
cmp
add
add
outs
add
or
pop
add
push
or
add
or
pop
add
add
jnp
add
add
loop
add
sub
add
push
and
add
add
ret
add
push
outs
add
test
add
cmp
add
add
jnp
add
add
jmp
add
sub
add
push
and
add
add
ret
add
push
outs
add
test
add
cmp
add
or
add
adc
add
add
add
clc
add
add
ret
add
push
adc
outs
loopne
add
adc
adc
sub
add
add
or
or
adc
cmp
add
add
or
or
add
adc
pop
sub
mov
add
adc
adc
adc
outs
loope
add
outs
loop
add
adc
pop
pop
adc
adc
adc
outs
loopne
add
aas
leave
(bad)
(bad)
inc
jnp
add
add
(bad)
add
add
ret
add
push
adc
outs
sbb
add
outs
add
outs
loopne
add
pop
inc
stos
add
add
or
add
or
or
adc
add
or
add
add
or
adc
push
add
add
or
pop
adc
or
or
jae
add
push
adc
adc
add
fld
add
add
fld
add
add
or
adc
(bad)
(bad)
(bad)
cmp
add
or
pop
add
push
pop
jnp
add
add
cmp
add
adc
add
jne
add
add
push
add
add
jnp
add
add
test
add
sub
add
push
jae
add
push
adc
push
adc
or
add
outs
rol
add
adc
cmp
sbb
add
or
mov
add
add
push
sbb
cmp
add
adc
pop
pop
adc
and
push
sbb
cmp
add
adc
pop
adc
sub
add
add
dec
sbb
cmp
add
add
add
add
mov
ret
add
push
jle
add
or
add
or
pop
add
add
adc
push
jae
add
push
adc
adc
add
cmp
add
add
dec
sbb
dec
add
add
add
(bad)
(bad)
js
(bad)
(bad)
js
(bad)
dec
add
and
add
add
push
sbb
cmp
(bad)
(bad)
call
sbb
add
or
inc
(bad)
(bad)
(bad)
fstp
add
add
sbb
add
add
sbb
sbb
pop
add
add
sbb
add
or
fisttp
add
add
sbb
pop
add
add
sbb
add
or
fld
add
add
fld
add
add
pop
sub
add
push
fisttp
add
add
adc
pop
add
add
adc
add
or
push
pop
pop
or
add
add
add
xchg
add
or
ret
cli
(bad)
(bad)
fisttp
add
add
adc
pop
add
add
adc
add
or
sub
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
mov
add
sbb
add
int3
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
pusha
add
add
add
add
sbb
add
jp
add
xor
push
add
add
cmp
push
adc
add
add
dec
or
cmp
add
add
inc
add
add
add
add
in
add
cmp
add
and
add
add
push
or
cmp
add
add
add
add
pop
or
pop
outs
fiadd
add
adc
push
adc
cmp
add
and
add
add
push
or
dec
add
add
add
(bad)
(bad)
dec
add
jo
add
xor
add
jo
add
call
add
pop
cmp
(bad)
(bad)
jmp
fnsave
outs
jle
add
cmp
outs
out
add
cmp
add
add
cmp
inc
add
add
push
adc
call
or
add
or
add
or
xchg
add
push
sub
add
cmp
or
add
push
or
cmp
(bad)
(bad)
cmp
add
add
pop
pop
pop
adc
adc
adc
mov
mov
(bad)
dec
cmp
add
add
push
add
add
push
or
cmp
(bad)
(bad)
frstor
add
add
add
add
add
aam
add
push
jae
add
push
pop
sub
add
push
fld
add
add
fld
add
add
add
and
add
sub
add
push
cmp
add
add
in
add
adc
aas
mov
(bad)
inc
jnp
add
add
jnp
add
add
out
add
add
add
add
add
push
adc
add
add
add
add
add
sub
jnp
add
add
ret
add
ret
add
push
jae
add
push
adc
add
ret
add
ret
add
push
sub
jnp
add
add
dec
add
add
ret
add
push
add
add
add
xchg
add
or
or
or
add
or
add
or
sldt
add
or
pop
add
add
or
add
or
add
add
add
outs
xchg
add
or
pop
add
add
push
or
cmp
jnp
add
add
outs
call
and
add
add
push
or
cmp
add
add
adc
jmp
push
add
add
push
or
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
dec
add
and
cmp
(bad)
(bad)
jmp
sub
add
add
add
add
sub
add
sbb
add
inc
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
adc
pop
sub
sub
add
push
or
mov
adc
add
or
add
push
or
cmp
add
add
or
add
or
pop
outs
jmp
add
adc
add
add
dec
or
cmp
add
add
outs
jmp
add
add
sar
(bad)
jmp
add
add
dec
or
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
add
add
add
dec
or
cmp
(bad)
(bad)
call
add
in
add
or
fld
add
add
pop
and
add
add
push
pop
outs
fadd
add
or
in
add
or
cld
add
push
push
adc
fst
add
and
add
sub
add
push
and
add
add
push
and
add
add
push
jae
add
push
adc
sub
add
push
adc
frstor
add
add
push
adc
fst
add
add
push
add
push
jae
add
push
sub
adc
fld
add
add
pop
sub
inc
add
add
add
push
add
add
add
add
add
add
add
add
add
pop
add
add
add
adc
add
mov
add
add
add
add
add
add
add
add
add
add
add
or
add
pop
add
add
add
adc
add
lahf
add
add
add
adc
add
add
cmp
add
add
add
add
and
push
add
cmp
add
add
pop
inc
push
push
add
add
push
add
cmp
add
add
add
jb
add
je
add
add
jl
add
add
pop
sub
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
call
add
add
add
and
add
push
cmp
(bad)
(bad)
jmp
push
or
add
add
dec
add
cmp
add
xor
mov
add
adc
add
push
add
cmp
or
add
jae
add
je
add
add
add
add
cmp
add
add
jl
add
add
pop
sub
cmp
add
and
push
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
add
add
add
and
add
add
push
add
cmp
pop
inc
jp
(bad)
jmp
push
add
add
push
add
cmp
add
xor
lahf
add
add
add
adc
add
add
dec
add
cmp
add
push
or
add
jb
add
je
add
add
add
add
dec
add
cmp
add
add
pop
inc
fdivr
(bad)
jmp
push
add
add
push
add
cmp
add
add
add
pop
sub
add
sub
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
jmp
add
add
add
aad
(bad)
inc
jnp
add
add
and
add
pop
cmp
(bad)
(bad)
jmp
sub
adc
add
cmps
add
add
add
adc
add
push
add
cmp
add
add
add
add
and
add
dec
add
cmp
add
push
or
add
add
sub
add
push
cmp
add
es
pop
inc
out
(bad)
jmp
push
add
add
push
add
cmp
add
add
add
jae
add
je
add
add
jl
add
add
pop
sub
add
sub
cmp
(bad)
(bad)
jmp
add
push
add
dec
add
add
add
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
pop
sub
or
sub
sbb
add
add
add
adc
add
add
pop
cmp
add
add
add
add
or
add
add
jle
add
or
add
add
xor
add
and
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
push
jge
add
add
add
push
add
(bad)
inc
jle
add
or
add
add
add
add
sub
add
cmp
movs
(bad)
(bad)
inc
jae
add
or
add
sub
add
or
add
add
push
outs
lock
or
icebp
add
add
jnp
add
add
xor
add
or
sbb
sbb
icebp
add
or
pop
push
add
add
add
ins
add
or
or
add
or
or
cmp
add
add
outs
sub
add
fadd
sub
add
push
or
add
adc
fld
add
add
or
repnz
or
add
add
adc
add
adc
adc
fadd
add
jge
add
add
add
add
sub
add
sub
add
add
add
fild
or
add
in
add
add
or
add
add
pop
adc
adc
add
add
pop
sub
or
sub
add
jge
add
add
add
repz
add
or
sub
or
sub
add
add
add
dec
add
or
inc
sub
dec
add
or
add
or
add
or
add
push
sub
add
add
add
add
add
jae
add
push
jge
add
add
add
or
sub
or
sub
outs
add
add
push
add
add
push
add
add
outs
mov
add
add
add
push
sub
xor
add
add
adc
add
add
pop
cmp
add
add
sbb
add
and
add
add
xor
add
cmp
add
add
xor
add
add
add
add
add
sbb
add
add
jge
add
add
fdivr
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
push
(bad)
(bad)
call
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
add
add
add
or
sub
or
sub
push
add
add
add
cmp
sub
add
or
add
add
add
add
pop
sub
or
sub
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
and
add
add
add
add
add
jnp
add
add
or
add
add
add
add
outs
add
push
sub
xor
add
add
adc
add
push
add
cmp
add
add
pop
jge
add
add
add
add
push
cmp
add
add
add
repz
or
cmp
add
and
push
add
dec
add
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
add
add
add
sti
add
add
push
add
add
push
add
cmp
pop
jge
add
add
add
add
dec
add
cmp
add
pop
sub
or
sub
push
add
push
add
or
push
add
push
add
or
push
add
sbb
add
sub
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
and
add
add
add
add
add
add
add
add
and
add
add
add
add
add
xor
add
add
adc
add
add
dec
add
cmp
add
add
add
or
add
add
add
add
dec
add
cmp
add
add
pop
jge
add
add
sub
add
or
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
add
add
add
push
add
cmp
add
sub
add
add
sub
add
add
or
push
add
push
add
jge
add
add
add
or
sub
or
sub
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
add
jle
add
or
pop
add
push
sub
add
add
add
dec
add
or
pop
add
push
sub
adc
add
mov
add
add
adc
add
add
pop
cmp
add
add
add
or
add
add
add
push
add
cmp
add
jle
add
or
add
add
add
add
sub
add
cmp
add
cmp
add
add
repz
or
add
add
add
add
push
add
add
dec
add
or
inc
cmp
add
add
jge
add
add
add
pop
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
dec
add
add
(bad)
dec
add
add
(bad)
call
add
add
add
add
cmp
(bad)
(bad)
inc
add
add
push
add
add
push
add
cmp
add
pop
sub
or
sub
push
add
sbb
add
sub
xor
add
add
add
and
add
jnp
add
add
pop
pop
pop
pop
fs
add
add
and
add
clc
pop
jge
add
add
or
add
add
jb
add
(bad)
sbb
add
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
adc
jnp
add
add
bound
jnp
add
add
jnp
add
add
pop
xchg
popa
and
jg
add
and
add
add
push
add
cmp
add
add
jnp
add
add
jnp
add
add
(bad)
jg
add
jnp
add
add
xchg
and
scas
add
add
add
add
add
popf
cmp
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
pop
jge
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
and
inc
add
fst
add
push
mov
add
pop
mov
sub
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
add
xor
add
add
add
adc
add
add
dec
add
cmp
jnp
add
add
and
add
cmp
add
add
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
mov
(bad)
(bad)
jmp
add
add
add
add
pop
cmp
(bad)
(bad)
jmp
push
add
add
jae
add
push
outs
push
add
push
and
cmp
sub
xor
add
add
add
add
add
add
or
add
or
and
add
add
push
add
cmp
add
outs
sahf
add
or
add
or
pop
adc
add
adc
add
pop
add
add
or
add
cmp
or
add
push
add
cmp
add
add
dec
add
add
or
pop
add
add
push
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
or
mov
test
push
add
add
cmp
push
or
add
pop
pop
or
add
add
dec
add
cmp
or
add
pop
or
add
mov
add
(bad)
sbb
sub
add
add
add
add
fcomp
add
sbb
add
sbb
add
add
add
adc
jnp
add
add
call
add
dec
add
cmp
add
add
pop
pop
or
add
add
dec
add
cmp
add
add
add
lea
add
add
add
add
jnp
add
add
les
add
and
add
add
mov
jnp
add
add
call
add
add
call
add
add
jnp
add
add
test
add
add
pop
sbb
mov
add
add
add
add
jnp
add
add
test
pop
sbb
mov
add
add
add
add
sbb
sub
add
add
sub
add
cmp
add
add
push
or
ins
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
cmps
add
add
cwde
add
add
xchg
xchg
sbb
mov
add
cmp
(bad)
(bad)
jmp
add
push
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
les
add
fst
add
push
mov
add
ret
push
(bad)
sbb
add
inc
sbb
add
add
add
add
sbb
add
sbb
add
sbb
add
add
add
and
add
add
add
add
or
or
add
add
jb
add
(bad)
sbb
sub
adc
add
add
add
adc
or
add
sbb
pop
add
add
add
and
add
sub
add
push
sub
inc
push
add
sub
add
push
sub
sldt
sub
push
and
push
add
sub
add
push
sub
add
add
ret
add
push
sub
adc
add
adc
and
add
sub
add
push
sub
mov
ret
add
push
sub
adc
add
adc
and
push
add
sub
add
push
sub
cli
push
add
sub
add
push
sub
adc
add
adc
add
ret
add
push
adc
dec
pop
add
sub
add
push
or
and
add
sub
add
push
sub
pop
pop
add
sub
add
push
sub
adc
add
adc
and
ret
add
push
or
add
ret
add
push
or
rol
add
ret
add
push
or
rol
add
sub
add
push
sub
repnz
add
sub
add
push
sub
adc
add
adc
adc
lar
add
add
outs
test
add
cmp
add
add
add
or
pop
push
outs
mov
add
es
inc
adc
pop
adc
cmp
add
add
or
add
adc
or
add
cmp
add
add
add
or
or
add
pop
inc
add
add
add
add
add
add
add
lds
add
push
adc
adc
add
add
or
add
add
add
nop
add
push
cmp
or
push
adc
adc
jl
add
add
cmp
add
add
add
add
add
add
or
add
add
add
outs
nop
add
push
adc
lar
add
add
add
inc
add
add
or
add
push
cmp
add
add
add
nop
add
add
test
or
add
add
add
or
add
add
add
outs
nop
add
push
cmp
add
add
or
add
add
add
add
inc
add
add
or
add
push
and
add
add
push
adc
cmp
add
add
nop
add
add
test
or
sub
add
and
add
add
push
adc
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
call
or
add
add
add
add
inc
add
add
or
add
push
fisttp
add
or
mov
add
add
test
or
or
add
add
add
add
inc
add
add
or
add
push
adc
lar
add
add
add
inc
add
add
or
add
push
es
add
or
add
add
push
adc
and
test
or
or
add
add
add
push
outs
add
push
adc
add
adc
add
sub
add
push
jae
add
or
add
add
add
or
add
add
add
outs
nop
add
push
cmp
add
add
add
add
add
or
add
add
add
outs
nop
add
push
es
add
or
or
sar
(bad)
call
mov
add
add
cmp
add
and
add
add
push
adc
add
lar
add
add
sub
add
or
add
or
xor
add
and
add
add
push
adc
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
push
add
add
add
add
dec
adc
(bad)
call
mov
add
add
cmp
add
sub
add
or
add
or
add
add
dec
adc
(bad)
call
mov
add
add
cmp
add
fst
add
add
or
adc
clc
add
or
add
add
(bad)
add
add
push
lea
add
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
pop
or
or
adc
mov
add
add
adc
mov
adc
adc
pop
or
add
add
adc
mov
add
add
adc
mov
adc
mov
adc
mov
add
add
adc
mov
add
add
add
sbb
add
mov
add
adc
pop
adc
add
mov
add
push
(bad)
sbb
inc
dec
add
add
add
xor
add
jle
add
scas
add
add
add
add
add
add
jne
add
call
add
add
add
add
es
add
add
add
add
add
add
sbb
pop
add
add
add
add
adc
lea
add
add
add
add
and
add
or
pop
jge
add
add
add
add
add
and
xchg
pushf
and
add
add
cmp
add
add
(bad)
jg
add
add
add
add
dec
add
cmp
add
add
and
add
(bad)
jg
add
add
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
jmp
add
and
add
add
(bad)
(bad)
inc
push
cmp
frstor
add
add
mov
add
mov
mov
mov
add
(bad)
sbb
add
add
add
add
mov
add
add
xor
add
add
adc
add
add
cmp
add
add
add
add
outs
std
add
or
add
add
pop
cmp
add
add
add
or
add
push
add
cmp
add
add
and
or
add
ret
add
push
sub
adc
add
pop
jge
add
add
retf
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
sbb
(bad)
mov
add
add
adc
clc
add
or
adc
pusha
add
add
push
and
ret
add
push
sub
add
push
sub
add
or
inc
or
add
ret
add
push
sub
add
push
and
add
sub
add
push
sub
add
or
or
adc
and
ret
add
push
sub
add
push
sub
add
or
or
add
ret
add
push
sub
add
push
sub
add
adc
sbb
pop
jae
add
or
or
adc
and
ret
add
push
sub
add
push
sub
add
or
or
add
ret
add
push
sub
add
push
and
or
add
ret
add
push
sub
add
push
and
or
add
ret
add
push
sub
add
push
sub
add
or
adc
adc
and
or
add
ret
add
push
sub
add
push
sub
add
sub
add
or
sbb
add
or
push
adc
push
mov
add
add
cmp
add
es
or
pop
push
mov
add
add
cmp
add
es
or
pop
sbb
pop
add
add
adc
adc
and
add
sub
add
push
mov
and
ret
add
push
sub
add
push
sub
add
or
inc
or
add
ret
add
push
sub
add
push
mov
xor
add
sub
add
push
sub
add
push
mov
inc
or
add
ret
add
push
mov
sbb
add
sub
add
push
sub
add
push
mov
add
or
or
or
pop
adc
outs
add
dec
or
add
ret
add
push
outs
push
add
or
or
pop
adc
outs
add
outs
pop
add
or
or
outs
add
outs
or
add
pop
push
adc
adc
outs
add
outs
or
add
pop
movlps
adc
outs
add
outs
or
add
pop
adc
pop
adc
outs
add
outs
or
add
pop
adc
pop
adc
outs
or
add
es
adc
pop
adc
outs
or
pop
adc
pop
and
add
sub
add
push
or
adc
pop
and
add
sub
add
push
adc
push
mov
add
add
cmp
add
es
push
adc
and
add
sub
add
push
adc
pop
pop
adc
and
add
ret
add
push
adc
sbb
pop
and
add
sub
add
push
sub
add
push
cmp
add
add
sbb
pop
and
add
sub
add
or
icebp
add
add
sbb
pop
pop
sbb
pop
and
ret
add
push
adc
sbb
and
add
sub
add
push
sub
add
or
pop
add
or
adc
push
adc
adc
pusha
add
add
push
sub
add
or
pop
add
or
adc
pop
adc
and
ret
add
push
adc
pop
and
pop
adc
add
sub
add
push
pop
lea
add
adc
adc
push
adc
adc
mov
add
sub
add
push
pop
lea
add
adc
adc
push
sbb
adc
adc
push
adc
sub
add
or
inc
or
add
ret
add
push
mov
xor
add
sub
add
push
sub
add
push
mov
inc
or
add
ret
add
push
mov
sbb
add
sub
add
push
sub
add
push
mov
add
or
adc
sgdtd
or
pop
add
or
sub
add
or
and
pop
adc
adc
mov
ret
add
push
pop
lea
add
adc
adc
push
adc
adc
mov
add
sub
add
push
pop
lea
add
adc
adc
push
adc
and
or
add
ret
add
push
sub
add
push
and
add
sub
add
push
and
or
add
ret
add
push
sub
add
push
sub
add
or
adc
sgdtd
or
pop
add
or
sub
add
or
and
pop
adc
add
sub
add
push
pop
lea
add
adc
adc
push
sbb
adc
adc
sub
add
or
and
pop
adc
add
sub
add
push
push
lea
add
adc
adc
sub
add
or
pop
and
pop
adc
adc
jecxz
add
sub
add
push
push
lea
add
adc
adc
sub
add
or
pop
adc
sbb
adc
adc
push
and
ret
add
push
sub
add
or
inc
or
add
ret
add
push
mov
xor
add
sub
add
push
sub
add
push
mov
inc
or
add
ret
add
push
mov
sbb
add
sub
add
push
sub
add
push
mov
add
or
adc
add
cmp
add
pop
daa
adc
push
sub
add
or
adc
adc
and
ret
add
push
sub
add
or
inc
or
add
ret
add
push
mov
xor
add
sub
add
push
sub
add
push
mov
inc
or
add
ret
add
push
mov
sbb
add
sub
add
push
sub
add
push
mov
in
or
add
ret
add
push
mov
add
or
adc
add
pop
sub
pop
or
lea
add
add
adc
adc
and
or
add
ret
add
push
mov
push
mov
xor
add
sub
add
push
sub
add
push
mov
inc
or
add
ret
add
push
mov
sbb
add
sub
add
push
sub
add
push
mov
dec
add
sub
add
push
mov
sbb
add
sub
add
push
sub
add
push
mov
adc
adc
add
add
outs
push
add
or
sub
pop
or
add
adc
adc
and
or
add
ret
add
push
sub
add
push
mov
push
mov
xor
add
sub
add
push
sub
add
push
mov
inc
or
add
ret
add
push
mov
sbb
add
sub
add
push
sub
add
push
mov
pusha
or
add
ret
add
push
sub
add
push
mov
adc
adc
add
add
outs
push
add
or
sub
pop
or
popf
or
add
ret
add
push
sub
pusha
add
or
add
or
sub
pop
adc
outs
pop
add
or
sub
outs
cld
add
or
adc
or
add
or
and
add
adc
cmp
add
adc
pop
pop
push
adc
inc
xor
add
add
add
gs
(bad)
jmp
(bad)
jmp
clc
(bad)
jmp
clc
(bad)
jmp
stc
(bad)
dec
(bad)
call
(bad)
jmp
(bad)
push
(bad)
(bad)
clc
stc
(bad)
call
cli
(bad)
jmp
cli
(bad)
push
(bad)
inc
(bad)
call
(bad)
jmp
(bad)
push
(bad)
(bad)
jg
(bad)
dec
cli
(bad)
jmp
cli
(bad)
dec
cli
(bad)
jmp
cli
(bad)
push
cli
(bad)
(bad)
stc
cli
(bad)
(bad)
std
cli
(bad)
dec
sti
(bad)
inc
(bad)
call
(bad)
(bad)
(bad)
sti
(bad)
(bad)
jl
(bad)
jmp
cld
(bad)
(bad)
jmp
call
(bad)
(bad)
(bad)
jmp
(bad)
jmp
(bad)
(bad)
jmp
call
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
fnstsw
pop
adc
adc
add
add
add
(bad)
(bad)
frstor
sbb
add
adc
add
adc
adc
push
inc
pop
(bad)
adc
add
sub
add
or
ret
(bad)
(bad)
jmp
xor
or
or
push
cmp
clc
add
or
mov
sbb
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
mov
adc
mov
adc
mov
adc
adc
pop
or
sbb
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
pop
adc
add
add
adc
mov
adc
pop
pop
adc
mov
adc
sub
add
push
(bad)
sbb
add
inc
xor
add
add
add
add
add
pop
add
sldt
add
add
add
add
add
pop
add
stc
pop
add
mov
add
add
add
add
or
out
add
sub
add
sbb
add
add
add
adc
sbb
add
or
push
sub
add
push
sub
add
push
or
and
ret
add
push
sub
add
or
mov
ret
add
push
push
and
add
sub
add
push
sub
sbb
add
add
add
add
adc
add
add
add
add
jle
add
or
add
or
sbb
add
fst
add
add
or
add
push
sub
add
add
sub
add
sbb
add
add
add
add
pusha
add
add
add
add
add
sbb
add
sbb
or
and
add
add
add
add
add
add
add
push
or
cmp
add
adc
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
sub
add
push
jge
add
add
jnp
add
add
cmp
add
add
adc
ffree
add
add
and
add
add
add
pop
jge
add
add
sbb
mov
add
and
add
add
cmp
add
add
add
jge
add
add
inc
add
add
jnp
add
add
and
add
adc
add
add
add
adc
jge
add
add
push
pushf
add
add
add
jnp
add
add
or
add
pop
adc
fst
add
add
add
add
sub
add
push
and
cmp
push
cmp
add
add
adc
and
add
add
cmp
frstor
add
add
pop
adc
pop
add
add
sldt
add
push
or
cmp
add
add
jge
add
add
add
sub
add
push
jge
add
add
jnp
add
add
cmp
add
add
adc
fucom
add
add
and
add
pop
jge
add
add
sbb
mov
add
and
add
add
aaa
add
add
push
jge
add
add
pop
pop
adc
nop
add
add
sbb
add
add
xchg
add
jnp
add
add
or
or
rol
push
or
add
add
adc
fisttp
or
mov
add
or
add
add
jnp
add
add
pop
or
add
push
or
cmp
add
add
jnp
add
add
cmp
add
add
adc
and
add
add
adc
add
cmp
fld
add
add
sub
jnp
add
add
xchg
add
add
jnp
add
add
push
rcr
add
pop
jge
add
add
jnp
add
add
jnp
add
add
push
add
add
add
add
add
fld
add
jge
add
add
adc
mov
add
push
jge
add
add
or
add
pop
cmp
add
add
add
add
jnp
add
add
add
add
add
cmp
add
add
add
jge
add
add
fwait
(bad)
(bad)
inc
sbb
rol
push
or
push
cmp
(bad)
(bad)
call
adc
cmp
(bad)
jmp
add
push
or
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
cmp
(bad)
inc
(bad)
(bad)
dec
add
in
add
cmp
(bad)
jmp
add
cmps
std
(bad)
jmp
add
push
(bad)
inc
add
add
add
add
dec
or
cmp
add
add
add
jnp
add
add
jge
add
add
add
add
add
xor
add
jge
add
add
sbb
add
add
or
add
sub
outs
(bad)
(bad)
(bad)
cmp
(bad)
inc
add
sub
add
push
jge
add
add
add
add
sub
dec
(bad)
(bad)
jmp
cmp
add
add
jnp
add
add
and
add
adc
pop
pop
jge
add
add
pop
add
add
add
or
cmp
and
add
add
push
or
cmp
(bad)
(bad)
(bad)
fstp
and
add
pop
jge
add
add
sbb
mov
add
add
adc
jge
add
add
push
jge
add
add
pop
add
add
push
or
cmp
(bad)
(bad)
call
adc
and
add
add
adc
add
cmp
(bad)
(bad)
jmp
fisttp
add
add
jge
add
add
push
cld
(bad)
inc
mov
mov
mov
mov
add
add
add
add
push
mov
add
add
pop
mov
add
out
add
(bad)
sbb
or
add
inc
sbb
add
add
add
add
add
add
add
add
jge
add
add
add
add
xor
add
add
inc
add
adc
and
add
pop
and
add
add
add
dec
add
cmp
and
add
ds
add
add
add
or
jnp
add
add
pop
and
jg
add
and
add
add
push
pop
cmp
and
add
add
data16
add
and
push
cmp
and
add
add
push
add
cmp
add
add
add
add
cmp
add
add
add
sar
(bad)
inc
jnp
add
add
add
add
add
jnp
add
add
sub
add
add
add
pop
jge
add
add
cmp
add
and
add
dec
add
dec
add
add
add
add
xchg
(bad)
(bad)
dec
add
jns
(bad)
inc
(bad)
(bad)
jns
(bad)
inc
add
and
add
add
cmp
(bad)
(bad)
jmp
fnsave
add
add
add
add
and
add
or
add
add
add
add
add
and
pushf
and
push
add
cmp
cmp
add
add
add
push
add
(bad)
add
push
mov
mov
mov
mov
add
mov
mov
add
(bad)
sbb
add
add
add
xor
add
xor
add
sub
add
sbb
add
adc
add
add
add
add
lea
add
or
push
add
add
sub
or
push
add
add
add
add
add
add
add
add
jnp
add
add
sbb
jnp
add
add
jnp
add
add
pop
xchg
popa
jge
add
add
or
add
add
jb
add
(bad)
sbb
add
adc
add
add
add
sub
or
add
sbb
push
add
add
or
add
add
add
add
cli
inc
add
pop
add
add
add
add
dec
add
cmp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
push
sub
add
add
add
pop
jge
add
add
and
add
pop
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
push
add
add
add
add
add
push
add
cmp
jnp
add
add
jnp
add
add
and
add
add
add
add
aas
lahf
add
add
push
add
add
cmp
add
add
xchg
add
push
cmp
add
add
add
add
add
add
add
add
or
add
add
add
jnp
add
add
ds
(bad)
jmp
add
add
push
cmp
add
add
add
add
add
jnp
add
add
or
sbb
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
jmp
(bad)
call
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
sub
add
fisttp
add
add
mov
sub
sbb
add
add
dec
add
add
add
add
add
add
sbb
push
add
add
adc
add
cmps
add
add
add
add
(bad)
add
add
pop
push
add
add
add
sub
add
cmp
add
es
add
pop
jle
add
add
or
add
add
or
or
pop
adc
sub
add
push
and
add
push
cmp
adc
add
add
or
rol
add
or
int3
add
add
add
add
dec
or
dec
add
add
add
(bad)
push
add
add
add
add
(bad)
(bad)
jmp
add
call
add
add
add
add
add
add
add
add
and
add
add
push
or
cmp
or
or
test
jnp
add
add
jbe
add
sbb
pop
adc
cmp
add
add
add
cmps
add
add
cwde
add
add
xchg
xchg
push
ds
add
pop
pop
pop
or
pop
pop
or
push
cmp
pop
push
push
sbb
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
or
jnp
add
add
push
adc
and
add
or
add
cmps
add
add
add
jle
add
add
add
pop
pop
or
adc
add
push
add
add
aam
(bad)
call
adc
add
adc
add
cmp
(bad)
(bad)
jmp
jle
add
add
or
add
add
or
or
pop
adc
sub
add
push
add
push
add
push
fstp
add
add
add
push
add
push
add
add
cmp
add
add
pop
sbb
mov
add
add
add
add
push
and
add
add
push
or
cmp
jnp
add
add
or
or
push
or
cmp
(bad)
(bad)
cmp
(bad)
dec
add
add
cmps
add
add
add
add
add
and
add
add
adc
inc
(bad)
(bad)
(bad)
cmp
(bad)
inc
push
aas
mov
sbb
sbb
mov
add
and
add
add
and
add
and
add
add
cmp
(bad)
jmp
add
add
push
add
push
add
add
cmp
add
add
pop
sbb
mov
add
and
add
add
push
or
cmp
std
(bad)
inc
add
jbe
add
add
add
jbe
add
add
add
or
add
or
or
or
test
jnp
add
add
or
add
add
dec
or
cmp
jnp
add
add
pop
and
add
add
push
or
cmp
push
add
add
sub
add
fst
or
(bad)
(bad)
jmp
push
add
add
ins
std
(bad)
inc
push
fnstsw
add
pop
or
adc
adc
push
push
mov
adc
pop
pop
mov
adc
sbb
mov
adc
sbb
mov
adc
sbb
add
add
adc
sbb
add
add
mov
mov
mov
adc
pop
or
mov
adc
pop
or
add
add
add
mov
add
push
(bad)
sbb
add
inc
sbb
add
add
add
add
add
add
sbb
add
sbb
push
add
add
add
adc
jnp
add
add
imul
add
push
pop
add
push
add
add
adc
cmp
add
add
adc
pop
or
add
add
or
adc
xchg
xchg
adc
pop
adc
pop
pop
xchg
xchg
ds
add
add
adc
pop
adc
pop
adc
pop
adc
xchg
sahf
and
add
add
cmp
adc
or
das
add
add
push
add
add
adc
pop
adc
xchg
sahf
and
add
add
push
pop
add
in
add
add
rol
add
adc
or
adc
adc
sbb
or
sahf
adc
adc
add
push
xchg
push
bound
or
add
pop
cmp
adc
and
das
add
add
or
add
dec
pop
add
xchg
add
add
adc
adc
adc
pop
pop
pop
adc
adc
or
aaa
(bad)
(bad)
call
or
adc
add
pop
adc
pop
adc
xchg
sahf
and
add
add
data16
add
push
push
and
add
and
add
add
push
pop
add
dec
add
add
in
(bad)
inc
adc
pop
adc
xchg
sahf
adc
adc
and
add
add
push
pop
add
sub
or
adc
(bad)
inc
push
xchg
adc
pop
or
pop
and
push
adc
cmp
add
add
dec
pop
add
or
add
add
add
add
add
(bad)
jmp
add
add
add
or
add
mov
add
add
(bad)
(bad)
cli
(bad)
(bad)
call
(bad)
push
add
add
add
add
add
add
(bad)
call
(bad)
(bad)
call
(bad)
inc
add
add
add
add
pop
add
add
cmp
push
or
imul
cmps
add
add
add
adc
add
cmp
call
add
add
or
add
dec
pop
add
addr16
(bad)
inc
lea
push
or
add
add
dec
pop
add
push
(bad)
(bad)
inc
jnp
add
add
adc
pop
pop
sbb
adc
xchg
xchg
adc
inc
adc
adc
adc
adc
add
aas
(bad)
(bad)
(bad)
(bad)
cmp
sbb
push
add
add
cmp
pop
pop
and
or
or
(bad)
(bad)
inc
or
pop
add
add
add
and
add
jge
add
add
adc
sbb
pop
sbb
add
or
or
pop
lea
or
or
or
adc
add
push
pop
add
mov
(bad)
dec
and
push
and
add
add
cmps
(bad)
(bad)
call
adc
adc
adc
pop
pop
pop
adc
and
add
dec
pop
add
mov
(bad)
call
or
adc
pop
pop
sbb
adc
xchg
xchg
adc
cmp
pop
adc
adc
sahf
or
cmp
and
add
add
adc
add
cmp
(bad)
jmp
adc
pop
adc
pop
pop
sbb
adc
xchg
xchg
adc
cmp
pop
adc
adc
sahf
pop
push
xchg
adc
or
pop
pop
adc
adc
or
adc
pop
adc
sahf
adc
sbb
adc
pop
adc
adc
adc
xchg
and
add
add
or
adc
and
add
add
and
add
adc
adc
adc
xchg
adc
adc
pop
adc
adc
sahf
push
adc
pop
adc
cmp
cld
(bad)
call
adc
pop
or
add
add
or
adc
xchg
xchg
adc
pop
adc
pop
pop
xchg
xchg
ds
add
add
adc
pop
adc
pop
adc
pop
adc
xchg
sahf
and
add
add
push
pop
add
sahf
std
(bad)
call
adc
push
(bad)
(bad)
jmp
or
push
pop
add
test
(bad)
inc
adc
sub
add
push
fld
add
pop
pop
lea
add
adc
adc
push
push
mov
adc
pop
pop
mov
mov
adc
sbb
mov
adc
sbb
add
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
mov
adc
add
adc
pop
or
add
add
adc
mov
adc
pop
movups
mov
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
add
adc
pop
adc
add
add
add
add
push
(bad)
sbb
add
add
add
lock
add
add
add
add
sbb
add
sbb
add
add
add
add
add
add
jnp
add
add
popf
and
add
add
push
add
cmp
add
add
add
add
cmps
add
add
(bad)
add
add
pop
push
add
add
add
pop
cmp
add
add
add
and
add
or
pop
jge
add
add
add
pushf
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
sub
add
push
or
adc
add
push
mov
add
ret
push
(bad)
sbb
sub
adc
add
add
add
add
add
xor
(bad)
add
add
add
and
push
add
cmp
add
add
add
add
pop
outs
cmps
add
or
push
add
add
push
add
cmp
add
add
add
add
outs
pushf
add
or
or
jnp
add
add
outs
popf
add
or
add
add
add
scas
add
or
and
add
add
push
add
cmp
add
add
jnp
add
add
add
add
add
mov
add
cmp
add
push
add
dec
add
add
add
(bad)
(bad)
mov
(bad)
(bad)
jmp
(bad)
inc
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
dec
add
add
add
repnz
add
jge
add
or
add
add
dec
add
cmp
sub
add
xor
add
add
add
add
adc
call
add
add
cmp
add
add
sbb
mov
add
and
add
add
push
add
cmp
add
call
add
and
add
add
adc
add
add
push
add
jnp
add
add
iret
add
push
push
add
add
call
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
inc
jnp
add
add
fld
add
and
adc
mov
mov
(bad)
inc
or
add
fstp
add
add
add
add
add
mov
add
add
mov
add
(bad)
sbb
add
add
adc
add
add
add
les
sbb
add
add
jnp
add
add
add
add
push
sub
jnp
add
add
sbb
add
sub
add
xor
add
add
inc
add
adc
jnp
add
add
aas
ja
add
and
add
push
cmp
add
add
add
add
fs
add
add
cmp
add
and
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
add
add
dec
add
cmp
add
add
add
jnp
add
add
ds
add
jnp
add
add
jnp
add
add
adc
add
add
add
jnp
add
add
add
sub
add
add
jge
add
add
push
jge
add
add
pop
add
add
jnp
add
add
jnp
add
add
add
sub
add
add
add
pop
jge
add
add
push
add
add
inc
(bad)
(bad)
inc
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
and
push
add
cmp
(bad)
(bad)
inc
add
push
mov
add
add
mov
mov
add
(bad)
sbb
sub
add
inc
sbb
add
add
sub
add
sbb
add
sbb
add
sbb
or
jmp
add
adc
add
push
or
and
add
sub
add
push
sub
fmul
add
sub
add
push
sub
adc
add
and
add
sub
add
push
sub
std
or
add
ret
add
push
sub
push
add
sub
or
and
add
sub
add
push
sub
cmp
add
sub
add
push
sub
pop
add
sub
adc
and
add
sub
add
push
sub
ja
add
sub
add
push
sub
sbb
add
adc
and
pop
add
sub
add
push
sub
mov
add
sub
add
push
sub
sbb
add
adc
and
pop
add
sub
add
push
sub
icebp
or
add
ret
add
push
sub
sbb
add
adc
and
push
add
sub
add
push
sub
cs
add
ret
add
push
sub
sbb
add
adc
and
pop
add
sub
add
push
sub
repnz
add
sub
add
push
sub
adc
add
adc
pop
add
add
pop
call
add
add
add
jno
add
add
add
add
jno
add
add
add
call
or
adc
dec
or
add
ret
add
push
adc
sub
add
or
or
paddd
push
jl
add
add
adc
adc
rcr
add
add
sbb
add
sub
add
or
and
add
jge
add
add
dec
add
push
adc
adc
push
jge
add
add
add
add
sub
add
cmp
add
adc
push
jl
add
add
sbb
add
adc
add
add
and
adc
adc
mov
add
push
cmp
add
add
add
or
sbb
sbb
adc
and
add
add
push
daa
add
cld
add
add
and
ficom
(bad)
lea
add
add
and
add
push
adc
mov
or
add
push
daa
add
rol
add
adc
adc
jge
add
add
push
pop
sub
adc
add
add
adc
sahf
adc
push
jl
add
add
sbb
add
push
outs
je
add
outs
push
push
push
add
add
add
or
cmp
adc
add
jae
add
or
add
or
add
or
mov
add
add
cmp
add
es
mov
add
add
cmp
add
(bad)
and
add
add
push
cmp
add
adc
sub
add
or
sbb
adc
cmp
add
(bad)
sub
add
or
and
add
(bad)
sub
add
or
and
add
(bad)
sub
add
or
pop
cmp
add
add
add
add
dec
daa
add
or
add
add
add
add
add
add
or
add
adc
add
out
(bad)
push
(bad)
(bad)
in
add
add
add
mov
add
add
add
push
(bad)
(bad)
mov
add
add
add
add
push
add
add
adc
lods
(bad)
(bad)
jmp
adc
adc
pop
fidivr
fs
(bad)
call
adc
add
add
sub
add
adc
adc
jl
add
add
sbb
add
pop
push
(bad)
adc
adc
ins
add
push
cmp
add
add
add
or
add
(bad)
sub
add
or
adc
adc
mov
(bad)
jmp
add
add
dec
daa
add
inc
(bad)
(bad)
call
add
(bad)
sub
add
or
sbb
mov
add
lea
push
adc
push
and
add
add
or
add
sbb
add
push
outs
jo
add
cmp
add
add
add
or
push
pop
sub
add
dec
daa
add
out
(bad)
(bad)
dec
sub
add
or
adc
add
adc
and
add
add
ret
add
push
or
mov
or
add
or
or
add
or
add
or
sbb
add
or
clts
jl
add
add
add
push
cmp
add
add
add
or
add
add
or
sbb
pop
add
add
cmp
jae
add
or
sbb
adc
add
or
jl
add
add
sbb
add
adc
push
push
cmp
add
add
add
or
add
(bad)
sub
add
or
push
adc
adc
(bad)
sub
add
or
add
add
adc
adc
adc
jl
add
add
sbb
add
sbb
push
and
xor
add
inc
outs
jl
add
jge
add
add
cmp
add
add
adc
add
add
inc
out
add
pop
adc
adc
adc
jl
add
add
sbb
add
adc
and
xor
add
inc
outs
jl
add
jge
add
add
push
add
add
push
daa
add
retf
call
and
cmp
or
add
sub
mov
(bad)
(bad)
cmp
or
add
sbb
add
and
add
push
adc
add
add
or
adc
add
jae
add
or
add
or
and
and
outs
cmp
add
and
add
add
imul
push
add
or
sbb
clc
add
add
adc
add
push
daa
add
dec
std
(bad)
call
adc
or
add
sbb
add
pop
push
(bad)
adc
push
movs
(bad)
(bad)
jmp
or
push
daa
add
sbb
(bad)
call
adc
add
add
inc
push
add
add
add
or
adc
jl
add
add
sbb
add
adc
add
add
add
add
add
or
ins
add
push
cmp
(bad)
jmp
or
add
dec
daa
add
into
cld
(bad)
call
and
daa
add
or
adc
add
sub
add
or
adc
sub
add
or
sldt
add
fs
add
or
adc
fnsave
add
adc
adc
(bad)
add
pop
lea
add
adc
mov
mov
add
add
mov
mov
add
add
add
adc
adc
adc
add
add
mov
or
adc
mov
adc
mov
adc
mov
adc
add
adc
mov
adc
mov
adc
mov
add
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
add
adc
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
mov
adc
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
add
adc
adc
adc
push
(bad)
sbb
sub
add
inc
xor
add
add
add
add
dec
push
add
adc
add
sbb
add
jns
add
jns
add
ins
add
add
add
sbb
push
add
add
dec
add
adc
jnp
add
add
xor
add
or
add
add
dec
add
cmp
add
add
jnp
add
add
jnp
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jae
add
push
or
or
add
push
add
add
push
(bad)
sbb
sub
add
add
add
add
je
add
sbb
add
adc
add
add
add
add
lea
add
or
push
add
push
sub
add
push
sub
sbb
push
add
add
add
add
add
add
or
pop
jge
add
add
add
add
dec
add
cmp
add
jae
add
or
jnp
add
add
and
add
or
pop
jge
add
add
add
pushf
and
add
pop
cmp
add
add
push
and
add
inc
iret
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
and
add
(bad)
jg
add
add
add
add
mov
mov
add
movs
add
push
(bad)
sbb
add
add
add
add
movs
movs
add
sbb
add
and
add
add
add
add
add
xor
add
add
add
or
or
push
add
push
sbb
add
push
sbb
add
push
mov
mov
mov
mov
add
sub
add
xor
add
add
adc
or
cmp
add
add
add
add
xchg
and
add
add
and
add
add
adc
mov
add
cmp
add
adc
add
add
cmp
jnp
add
add
xchg
or
and
jecxz
add
add
sub
jnp
add
add
sub
add
push
and
add
add
push
push
add
add
add
and
sbb
add
add
push
push
add
dec
add
add
add
and
add
adc
cmp
add
add
add
pop
adc
pop
pop
bound
pop
pop
adc
mov
add
add
sub
add
add
add
push
cmp
(bad)
jmp
push
add
add
push
push
add
or
add
add
add
(bad)
(bad)
dec
add
add
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
call
add
and
add
dec
push
add
leave
(bad)
(bad)
call
add
sub
add
add
add
add
pop
adc
pop
pop
bound
pop
pop
adc
mov
add
cmp
add
add
add
add
sub
add
push
push
pop
pop
or
add
add
add
mov
pop
add
add
push
push
add
jp
(bad)
inc
jnp
add
add
add
add
sub
add
push
(bad)
add
add
mov
mov
mov
mov
add
add
add
add
sub
sbb
inc
sbb
add
add
jno
add
add
add
add
adc
add
add
add
add
add
outs
sub
add
or
adc
sub
add
or
add
xor
add
adc
clc
add
or
adc
sbb
or
pop
or
add
ret
add
push
or
adc
and
ret
add
push
sub
add
push
sub
add
or
or
add
ret
add
push
sub
add
push
sub
add
or
adc
pop
and
add
sub
add
push
sub
add
push
push
sub
add
or
inc
sub
add
sbb
or
pusha
add
add
push
and
ret
add
push
sub
add
push
sub
add
or
inc
or
add
ret
add
push
sub
add
push
and
add
sub
add
push
sub
add
or
push
sbb
or
add
add
or
adc
and
ret
add
push
or
pusha
add
add
push
and
ret
add
push
sub
add
push
sub
add
or
mov
ret
add
push
sub
pop
pop
or
or
lds
add
ret
add
push
sub
add
push
adc
and
ret
add
push
sub
add
push
sub
add
or
add
or
or
dec
or
add
or
pop
or
or
add
push
cmp
add
pop
or
or
add
or
pop
push
adc
adc
inc
or
add
ret
add
push
adc
add
ret
add
push
sub
add
or
xor
add
es
movlps
and
add
sub
add
or
pop
adc
or
dec
or
add
or
fnsave
or
add
add
adc
pop
pop
push
adc
inc
adc
add
add
add
or
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
jmp
jmp
(bad)
(bad)
inc
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
inc
call
(bad)
(bad)
jp
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
(bad)
fnstsw
or
or
or
add
add
add
add
add
add
add
add
add
or
inc
pop
adc
push
inc
pop
(bad)
adc
add
sub
add
or
ret
(bad)
(bad)
jmp
xor
or
or
or
add
clc
add
or
popa
add
add
or
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
pop
or
or
adc
pop
or
or
adc
sub
add
push
(bad)
sbb
add
add
add
add
add
add
add
adc
add
sub
add
sldt
add
add
add
add
push
add
add
add
sbb
add
sbb
add
add
add
sub
add
or
out
or
add
ret
add
push
add
sub
add
sub
add
push
sub
imul
add
add
dec
add
cmp
add
push
cmp
add
add
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
sar
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
push
jae
add
or
add
add
adc
fisttp
add
add
adc
fld
add
add
sub
adc
add
add
add
add
or
add
adc
add
add
add
add
add
push
push
add
push
sbb
add
push
sbb
add
push
mov
mov
add
sub
sbb
pop
add
add
add
add
add
add
add
add
add
pop
pop
bound
rol
add
add
add
sub
add
cmp
add
add
add
pop
jge
add
add
add
add
dec
add
cmp
add
add
add
add
adc
cmps
add
add
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
add
add
add
and
add
or
pop
jge
add
add
add
add
add
rcr
and
add
add
push
add
dec
add
add
add
(bad)
inc
add
push
(bad)
(bad)
jmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
and
add
adc
add
add
add
cmp
add
add
adc
ret
add
and
add
push
mov
mov
add
mov
mov
add
(bad)
sbb
add
add
add
add
add
std
std
add
sbb
add
adc
add
add
add
add
lea
add
or
push
add
push
sbb
add
push
sbb
add
push
mov
mov
mov
add
sub
xor
add
add
dec
add
adc
add
or
add
or
add
outs
xor
or
add
push
add
outs
add
or
fisttp
cmp
add
add
outs
sub
add
fadd
or
adc
add
push
pop
add
add
mov
add
(bad)
sbb
sub
add
sbb
add
add
add
daa
add
add
add
cmp
add
sbb
add
add
jle
add
or
cld
add
push
sub
add
add
add
add
sbb
pop
add
or
add
add
and
add
add
push
jnp
add
add
sub
sbb
add
sub
add
cmp
add
add
add
add
outs
aaa
add
or
jnp
add
add
imul
add
outs
cmp
add
add
add
add
jnp
add
add
cmp
add
add
add
add
cmp
add
pop
sbb
and
add
add
add
or
add
or
jnp
add
add
outs
cmp
jnp
add
add
fimul
add
push
outs
add
or
jnp
add
add
inc
add
push
jae
add
or
add
or
jnp
add
add
or
add
or
jnp
add
add
outs
aaa
add
or
sbb
add
cmp
pop
add
add
(bad)
or
add
push
and
or
add
push
sub
add
or
add
or
jnp
add
add
or
add
or
jnp
add
add
outs
aaa
add
or
jnp
add
add
dec
pop
sbb
add
or
add
or
jnp
add
add
nop
add
add
jnp
add
add
cmp
add
pop
and
add
add
add
or
add
or
jnp
add
add
outs
cmp
sbb
add
dec
add
cmp
add
add
jnp
add
add
jnp
add
add
cmp
add
add
add
add
cmp
add
pop
sbb
and
add
add
add
or
add
or
jnp
add
add
outs
cmp
jnp
add
add
fisttp
add
sub
add
push
outs
add
or
jnp
add
add
inc
xchg
add
jae
add
or
add
or
jnp
add
add
or
add
or
jnp
add
add
outs
aaa
add
or
jnp
add
add
jnp
add
add
inc
add
or
add
or
jnp
add
add
jnp
add
add
inc
add
or
add
or
jnp
add
add
outs
cmp
jnp
add
add
loopne
add
sub
add
push
outs
add
or
jnp
add
add
outs
inc
add
or
jnp
add
add
inc
lea
add
jae
add
or
add
or
or
add
dec
add
cmp
add
add
jnp
add
add
outs
cmp
or
add
dec
add
cmp
add
add
jnp
add
add
inc
pop
sbb
add
or
add
or
jnp
add
add
jnp
add
add
cmp
add
add
add
add
cmp
add
pop
sbb
and
add
add
add
or
add
or
jnp
add
add
push
outs
cmp
jnp
add
add
repz
add
push
outs
add
or
adc
add
dec
add
cmp
jnp
add
add
push
pop
sbb
add
or
add
or
jnp
add
add
nop
add
add
jnp
add
add
cmp
add
pop
and
add
add
add
or
add
or
jnp
add
add
outs
cmp
adc
add
dec
add
cmp
add
add
jnp
add
add
inc
test
add
jae
add
or
add
or
jnp
add
add
or
add
or
mov
add
add
push
add
dec
add
add
add
add
cmc
(bad)
(bad)
jmp
add
push
add
add
add
add
add
add
(bad)
mov
add
(bad)
call
cld
(bad)
(bad)
(bad)
(bad)
jmp
add
(bad)
inc
add
add
cwde
add
add
add
add
add
(bad)
(bad)
mov
add
add
add
add
(bad)
(bad)
inc
add
add
push
add
and
jne
(bad)
inc
and
or
add
jae
add
or
inc
add
or
jnp
add
add
outs
inc
add
or
jnp
add
add
outs
inc
add
or
push
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
outs
aaa
add
or
add
add
dec
add
cmp
(bad)
inc
jnp
add
add
into
push
add
sub
add
push
outs
add
or
sbb
add
dec
add
cmp
(bad)
(bad)
inc
sub
add
sbb
or
push
add
add
add
or
add
add
add
or
add
add
add
or
add
or
pop
sub
add
add
sub
add
add
sub
add
add
sub
or
pop
sub
add
add
cli
push
add
sub
add
push
outs
add
or
outs
dec
add
or
add
or
adc
add
add
dec
add
sub
add
push
outs
add
or
pop
sub
add
fld
add
add
fld
add
add
jnp
add
add
outs
xor
jnp
add
add
outs
xor
push
sub
jnp
add
add
push
add
or
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
inc
add
push
jae
add
or
add
or
jnp
add
add
push
and
cmp
add
outs
cmp
add
add
add
add
outs
inc
add
or
jnp
add
add
sbb
dec
and
add
pop
adc
add
or
jnp
add
add
sbb
pusha
and
add
pop
adc
add
or
jnp
add
add
sbb
js
jo
add
pop
adc
add
or
jnp
add
add
sbb
nop
add
add
jo
add
pop
adc
add
or
jnp
add
add
outs
inc
add
or
jnp
add
add
adc
mov
js
and
add
or
jnp
add
add
inc
add
or
lea
add
add
push
push
add
add
add
push
pop
add
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
add
push
outs
dec
add
or
jnp
add
add
popf
add
add
lock
add
add
or
add
or
jnp
add
add
outs
cmp
add
add
dec
add
cmp
cld
(bad)
inc
jnp
add
add
imul
add
outs
cmp
add
and
add
add
cmp
cld
(bad)
jmp
add
add
add
jmp
ret
add
push
outs
add
or
jnp
add
add
outs
inc
add
or
push
add
add
adc
xchg
cld
(bad)
jmp
add
sub
jnp
add
add
outs
xor
add
add
add
add
outs
xor
add
add
add
add
outs
inc
add
or
jnp
add
add
outs
aaa
add
or
jnp
add
add
push
pop
bound
add
or
add
or
jnp
add
add
loop
add
pop
adc
add
or
add
or
jnp
add
add
or
or
add
add
sub
sbb
(bad)
(bad)
cmp
(bad)
inc
jnp
add
add
jnp
add
add
inc
add
or
add
or
jnp
add
add
jnp
add
add
inc
add
or
add
or
push
add
add
push
add
cmp
sti
(bad)
inc
jnp
add
add
push
add
or
sbb
push
add
cmp
jnp
add
add
sub
add
add
sub
cmps
sti
(bad)
jmp
add
add
add
leave
or
add
push
outs
add
or
jnp
add
add
inc
test
add
jae
add
or
add
or
jnp
add
add
or
add
or
or
add
pop
cmp
(bad)
jmp
add
add
add
inc
add
or
or
or
push
add
add
add
pop
pop
add
add
add
pop
sbb
jnp
add
add
pop
sbb
jnp
add
add
pop
sbb
jnp
add
add
pop
sbb
jnp
add
add
pop
sbb
jnp
add
add
pop
sbb
add
pop
push
add
add
add
pop
pop
or
jnp
add
add
pop
outs
dec
add
or
jnp
add
add
popf
add
add
lock
add
add
or
add
or
jnp
add
add
outs
cmp
jnp
add
add
outs
inc
add
or
sbb
or
or
add
or
and
call
xor
add
sub
add
or
push
sub
add
and
add
add
push
add
cmp
(bad)
inc
jnp
add
add
outs
push
add
or
jnp
add
add
outs
aaa
add
or
adc
add
dec
add
cmp
(bad)
inc
jnp
add
add
outs
aaa
add
or
add
add
push
cmp
(bad)
jmp
add
add
add
jge
add
pop
adc
add
or
add
or
or
add
dec
add
cmp
(bad)
inc
jnp
add
add
or
add
or
adc
add
sub
add
(bad)
(bad)
cmp
stc
(bad)
inc
jnp
add
add
outs
inc
add
or
jnp
add
add
inc
pop
add
jae
add
or
add
or
jnp
add
add
push
outs
inc
add
or
pop
add
add
cmp
stc
(bad)
jmp
add
add
add
outs
push
add
or
jnp
add
add
adc
mov
add
jae
add
or
add
or
jnp
add
add
jge
add
pop
aaa
jae
add
or
add
or
jnp
add
add
cld
or
add
push
and
or
add
push
sub
add
or
add
or
jnp
add
add
or
or
jnp
add
add
adc
inc
jae
add
or
add
or
jnp
add
add
jge
add
pop
or
or
add
or
jnp
add
add
or
add
or
or
adc
add
cmp
stc
(bad)
jmp
add
add
add
xor
ret
add
push
outs
add
or
jnp
add
add
inc
xchg
add
jae
add
or
add
or
jnp
add
add
push
outs
inc
add
or
jnp
add
add
outs
push
add
or
jnp
add
add
jb
add
sub
add
push
and
add
pop
sbb
jae
add
or
add
or
jnp
add
add
adc
jl
cmp
add
outs
cmp
add
and
add
add
mov
(bad)
jmp
add
add
add
test
add
add
xor
add
add
add
add
push
or
mov
and
add
add
push
or
cmp
add
add
or
and
add
add
push
or
cmp
add
add
or
push
adc
sub
and
add
cmp
add
and
add
add
push
or
dec
add
add
add
add
add
(bad)
(bad)
jmp
add
adc
add
add
add
add
add
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
add
add
add
adc
add
add
pop
pop
adc
add
jnp
add
add
adc
cmp
add
push
add
add
add
lock
push
gs
cmp
add
add
jnp
add
add
pop
or
mov
add
and
jo
(bad)
inc
pop
adc
add
add
jne
add
add
add
add
sbb
push
jnp
add
add
mov
pop
push
jge
add
add
or
add
dec
or
cmp
(bad)
(bad)
inc
cmp
jnp
add
add
push
cmp
xchg
add
add
push
add
add
add
pop
push
inc
push
inc
adc
add
add
add
pop
push
inc
push
inc
adc
and
add
add
lock
(bad)
inc
or
jnp
add
add
push
pop
sub
push
or
add
add
push
jge
add
add
add
add
dec
or
cmp
add
or
add
add
cmp
and
add
pop
cmp
mov
(bad)
dec
pop
pop
adc
add
mov
mov
mov
mov
add
add
add
mov
add
(bad)
sbb
add
add
mov
add
mov
add
sub
add
sbb
add
and
add
add
add
add
add
xor
fwait
add
add
add
adc
add
add
dec
add
cmp
add
add
cmp
add
add
dec
add
cmp
add
add
xor
add
push
add
or
inc
pop
add
push
jae
add
or
add
or
cmp
add
and
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
inc
pop
add
push
jae
add
or
pop
add
or
add
push
add
cmp
add
xor
add
add
and
add
dec
add
cmp
add
add
add
add
adc
pop
sub
or
ds
add
add
push
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
and
add
push
add
add
add
adc
sar
(bad)
jmp
push
or
add
add
sub
add
cmp
sub
add
or
adc
adc
pop
sub
push
cmp
add
add
push
add
add
cmp
push
or
add
add
dec
add
cmp
jae
add
or
pop
add
or
adc
adc
add
test
add
push
add
adc
add
add
dec
add
cmp
add
push
cmp
add
cmp
add
and
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
and
add
add
adc
mov
push
add
outs
aaa
add
push
and
adc
cmps
(bad)
(bad)
(bad)
cmp
add
add
xor
xor
add
add
add
add
and
add
add
outs
pop
add
or
add
arpl
inc
add
pop
shr
add
or
push
add
add
add
add
push
(bad)
sbb
add
add
add
add
add
and
add
sbb
add
sbb
pop
add
add
inc
add
adc
jnp
add
add
add
mov
add
and
add
sub
add
and
push
add
cmp
add
add
and
add
add
mov
add
and
add
add
mov
add
and
add
add
mov
add
or
xchg
add
add
jnp
add
add
xchg
and
inc
add
and
add
add
push
add
cmp
pop
pop
or
push
add
add
cmp
push
or
mov
add
add
add
add
xchg
and
inc
add
add
add
add
or
add
add
add
cmp
add
add
and
add
pop
push
add
dec
add
cmp
add
add
jnp
add
add
pop
and
add
cmp
add
add
cmp
add
add
and
add
pop
push
or
and
add
aas
pop
(bad)
(bad)
(bad)
cmp
add
push
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
call
(bad)
(bad)
out
(bad)
(bad)
call
add
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
or
add
(bad)
(bad)
(bad)
frstor
add
add
mov
mov
mov
mov
sub
sbb
add
add
add
pop
add
add
add
add
add
add
sbb
or
cmp
add
push
add
adc
mov
add
add
and
add
add
adc
add
cmp
pop
or
push
add
add
adc
add
add
jnp
add
add
mov
jo
adc
pusha
add
or
outs
je
add
or
add
push
adc
add
adc
adc
or
xchg
popa
mov
or
outs
dec
add
or
fiadd
add
add
add
add
cmp
add
push
or
add
pop
(bad)
or
adc
ds
cmp
add
and
add
add
push
or
dec
add
add
add
push
add
add
dec
(bad)
dec
add
add
add
push
or
cmp
(bad)
(bad)
inc
je
add
add
mov
lea
add
add
popa
add
or
add
or
add
add
cmp
add
add
push
adc
frstor
add
add
pop
or
mov
add
add
add
add
push
mov
add
test
add
(bad)
sbb
pop
sub
add
inc
sbb
add
add
add
add
add
add
add
add
sbb
or
push
add
add
adc
jnp
add
add
add
and
add
add
xor
add
or
pop
or
add
add
add
pop
add
add
or
add
jnp
add
add
xchg
adc
mov
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
sar
(bad)
call
or
fwait
(bad)
(bad)
inc
or
sahf
pop
add
add
add
xchg
pop
invd
pop
pop
pop
pop
bound
and
add
add
push
add
(bad)
inc
adc
pop
pop
jno
add
add
pop
adc
add
pop
pop
pop
bound
add
pop
pop
or
add
ja
(bad)
call
or
add
add
add
imul
add
add
add
dec
add
(bad)
call
add
ds
(bad)
(bad)
inc
jnp
add
add
push
adc
pop
xchg
sub
add
push
popf
and
add
add
push
add
(bad)
dec
add
add
add
add
(bad)
(bad)
frstor
add
add
pop
mov
mov
mov
add
add
sub
sbb
add
inc
sbb
add
add
add
add
add
add
add
add
sbb
pop
add
add
adc
sub
push
add
inc
add
add
add
add
dec
add
cmp
add
add
add
add
icebp
add
push
cmp
add
push
cmp
(bad)
(bad)
jmp
add
add
dec
add
cmp
add
add
add
add
jnp
add
add
add
add
add
push
or
add
sub
add
push
or
mov
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
or
and
add
push
mov
add
add
mov
add
add
add
add
add
add
mov
add
(bad)
sbb
sub
add
adc
add
add
add
add
cmp
add
cli
add
add
mov
add
sub
sbb
add
add
add
push
or
push
add
add
sbb
and
add
add
push
add
cmp
add
add
pop
arpl
add
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
sbb
(bad)
(bad)
jmp
add
add
dec
add
cmp
(bad)
(bad)
inc
add
fst
add
push
mov
add
ret
push
(bad)
sbb
sub
add
add
add
add
jne
add
add
add
xor
add
add
adc
add
add
cmp
add
add
push
jge
add
add
jle
add
or
add
add
outs
inc
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
and
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
outs
std
add
or
add
push
add
cmp
adc
adc
add
add
add
dec
add
cmp
pop
adc
bound
add
and
add
add
push
add
cmp
add
add
xor
add
add
adc
jnp
add
add
xchg
pop
inc
or
pop
add
add
push
pop
add
and
add
adc
or
add
adc
add
add
pop
pop
or
or
add
cmp
add
add
outs
dec
add
or
jmp
add
add
dec
pop
add
in
add
add
cmp
add
add
add
push
pop
add
fadd
add
push
cmp
add
add
add
or
cmp
push
cmp
add
add
sub
add
cmp
(bad)
add
add
or
outs
dec
add
or
pop
or
add
add
cmp
add
add
cmp
add
add
or
add
or
adc
add
jnp
add
add
add
add
add
add
add
add
imul
adc
xor
add
adc
add
imul
and
add
dec
pop
add
xor
add
or
cmp
(bad)
(bad)
jmp
or
add
dec
pop
add
pop
add
add
push
outs
arpl
add
pop
and
data16
(bad)
call
(bad)
(bad)
jmp
pop
add
add
push
pop
add
or
add
add
add
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
add
dec
pop
add
sar
inc
adc
fisttp
add
add
adc
add
add
push
sub
inc
sbb
add
add
add
add
add
add
adc
add
add
add
and
add
add
push
add
cmp
add
push
cmp
add
dec
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
and
add
dec
add
cmp
jle
add
or
add
or
add
push
add
cmp
add
add
xor
add
add
add
add
add
ds
add
and
add
dec
add
cmp
add
add
jnp
add
add
ds
add
add
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
rcr
and
add
dec
add
dec
add
add
add
add
movs
(bad)
(bad)
dec
add
movs
(bad)
(bad)
jmp
add
add
add
and
add
add
cmp
(bad)
(bad)
jmp
add
jge
add
add
add
push
add
cmp
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
and
add
add
push
add
cmp
push
jge
add
add
adc
add
push
mov
mov
sub
add
push
(bad)
sbb
add
add
adc
add
add
add
rol
adc
add
add
sub
add
or
push
add
add
sub
or
jnp
add
add
sub
add
push
sub
sbb
add
pop
add
add
add
adc
outs
add
or
outs
add
or
bound
fisttp
add
add
sub
add
(bad)
sbb
sub
add
add
add
add
adc
add
add
xor
add
add
add
lea
add
or
push
add
push
sbb
add
push
sub
add
push
sub
xor
add
add
add
add
adc
jnp
add
add
jnp
add
add
add
fisttp
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
or
mov
add
pop
add
adc
add
push
add
or
add
add
dec
add
cmp
add
add
add
dec
add
add
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
jmp
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
add
add
or
add
add
cmp
(bad)
(bad)
dec
add
add
add
push
add
add
add
push
outs
sbb
and
add
or
add
add
ret
add
push
pop
outs
fadd
add
sub
add
outs
sbb
add
add
sub
adc
add
add
add
add
add
xor
add
add
add
add
and
add
cmp
add
add
add
or
add
push
add
cmp
jnp
add
add
outs
std
add
or
add
add
push
cmp
add
add
add
jge
add
add
enter
and
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
push
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
xor
add
add
dec
add
adc
and
add
add
push
push
add
push
add
add
stos
add
add
jnp
add
add
adc
and
add
pop
push
add
or
add
cmp
add
add
jnp
add
add
adc
and
add
pop
push
add
add
add
dec
push
add
std
add
add
adc
add
jnp
add
add
add
add
add
pop
push
add
push
add
add
push
push
add
int3
add
add
add
add
mov
add
or
or
jle
add
sbb
sbb
and
add
add
scas
add
add
add
add
add
add
cmp
add
or
cmp
add
add
jnp
add
add
(bad)
add
add
push
add
add
rol
add
or
and
add
add
add
add
adc
and
add
pop
push
add
lods
add
add
pop
or
and
add
add
inc
add
add
or
add
pop
adc
adc
add
adc
pop
adc
pop
pop
and
(bad)
(bad)
call
add
jnp
add
add
jae
(bad)
(bad)
cmp
(bad)
jmp
or
add
dec
push
add
or
add
add
add
(bad)
(bad)
(bad)
jg
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
add
add
add
add
dec
push
add
sar
(bad)
cmp
add
add
or
jnp
add
add
add
adc
add
push
push
add
mov
add
jnp
add
add
fdivr
(bad)
(bad)
(bad)
add
add
mov
mov
mov
mov
add
add
add
add
add
mov
add
(bad)
sbb
inc
sbb
add
add
add
add
add
add
add
add
sbb
add
sub
add
pop
add
adc
push
add
or
add
or
fst
add
add
pop
lea
add
add
pop
push
sub
add
push
mov
add
add
sub
add
add
add
add
add
adc
add
or
add
sbb
add
add
add
sub
add
or
adc
add
add
or
adc
and
ret
add
push
adc
sbb
pop
and
ret
add
push
adc
sbb
pop
adc
adc
push
sub
add
or
cmp
push
adc
and
ret
add
push
sub
add
push
sub
add
or
inc
or
add
ret
add
push
sub
add
push
sub
add
adc
and
ret
add
push
sub
add
push
sub
add
or
or
add
ret
add
push
sub
add
push
sub
add
adc
or
pop
push
adc
pop
or
pop
push
mov
add
add
cmp
add
es
or
pop
push
mov
add
add
cmp
add
es
or
pop
add
add
adc
adc
adc
and
or
add
ret
add
push
sub
add
push
mov
inc
or
add
ret
add
push
mov
sbb
add
sub
add
push
sub
add
push
mov
pusha
add
add
push
mov
add
or
and
add
sub
add
push
sub
add
and
add
sub
add
push
sub
add
push
sub
add
cmp
add
add
push
adc
pop
adc
pop
movlps
push
mov
add
add
cmp
add
es
adc
pop
push
mov
add
add
cmp
add
es
adc
pop
and
sldt
sub
add
push
sub
add
push
sub
add
push
cmp
add
add
adc
pop
and
test
or
adc
sldt
sub
add
push
sub
add
or
add
or
adc
push
adc
push
mov
add
add
cmp
add
es
pop
adc
and
add
sub
add
push
sub
add
push
and
or
add
ret
add
push
sub
add
adc
or
and
ret
add
push
or
cdq
add
push
adc
pop
sbb
pop
push
mov
add
add
cmp
add
es
sbb
pop
adc
cmp
add
add
sbb
adc
push
mov
add
add
cmp
add
es
pop
adc
push
adc
add
ret
add
push
sub
add
push
sub
add
cmp
add
add
pop
and
pop
pop
and
pop
and
add
sub
add
push
adc
pop
and
or
add
ret
add
push
sub
add
push
sub
add
or
retf
sldt
sub
add
push
sub
add
push
and
adc
add
ret
add
push
sub
add
push
sub
adc
adc
and
ret
add
push
sub
add
or
or
daa
adc
pop
pop
sub
add
or
pop
sub
pop
push
or
sub
pop
jle
add
or
pop
sub
pop
push
mov
add
add
cmp
add
es
sub
pop
adc
and
add
sub
add
push
adc
or
or
sub
pop
adc
and
adc
add
ret
add
push
outs
ins
add
or
add
adc
pop
sub
adc
add
ret
add
push
sub
add
push
adc
sub
adc
adc
adc
cmp
add
add
xor
pop
pop
mov
add
add
cmp
add
es
xor
pop
adc
add
or
add
or
xor
pop
adc
adc
pop
sub
add
pop
xor
pop
sbb
adc
adc
jle
add
or
adc
mov
add
add
mov
add
add
add
add
mov
add
push
es
xor
pop
push
mov
add
add
cmp
add
es
xor
daa
add
sub
add
or
adc
push
mov
add
add
cmp
add
sub
add
fld
add
adc
cmp
add
adc
pop
pop
push
adc
inc
cmp
add
add
add
adc
(bad)
call
sti
(bad)
jmp
(bad)
push
sti
(bad)
inc
(bad)
call
(bad)
call
(bad)
call
(bad)
inc
sti
(bad)
(bad)
mov
sti
(bad)
(bad)
fdivr
(bad)
jmp
(bad)
jmp
(bad)
(bad)
js
(bad)
dec
cld
(bad)
jmp
cld
(bad)
push
cld
(bad)
(bad)
(bad)
(bad)
inc
std
(bad)
inc
std
(bad)
call
std
(bad)
(bad)
cmp
(bad)
(bad)
cmp
std
(bad)
call
(bad)
push
(bad)
push
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
dec
std
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
std
(bad)
(bad)
stc
std
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
ds
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
(bad)
(bad)
fnstsw
pop
adc
adc
add
add
add
(bad)
(bad)
(bad)
frstor
sbb
add
adc
add
adc
adc
push
inc
pop
(bad)
adc
add
sub
add
or
ret
(bad)
(bad)
jmp
xor
or
or
push
cmp
clc
add
or
int3
add
add
sbb
adc
adc
push
push
mov
mov
mov
add
add
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
mov
adc
mov
adc
mov
adc
adc
pop
or
sbb
push
adc
mov
add
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
pop
adc
add
add
adc
mov
adc
pop
pop
adc
mov
adc
pop
sbb
mov
add
push
(bad)
sbb
inc
xor
add
add
add
add
add
add
add
sldt
add
add
add
add
add
dec
add
add
int3
add
add
add
or
add
sbb
add
add
and
add
or
jge
add
add
or
add
add
jb
add
(bad)
sbb
add
add
adc
add
add
add
add
sbb
add
adc
add
add
add
add
or
push
add
push
sbb
add
push
sbb
add
push
mov
add
sub
add
xor
add
add
add
add
add
add
add
add
sub
add
or
outs
rol
add
sub
add
or
add
add
add
sub
mov
push
pop
inc
sub
add
push
add
jnp
add
add
add
pop
sub
add
push
pop
or
adc
add
add
jnp
add
add
jnp
add
add
sub
add
push
or
add
add
add
pop
and
jg
add
add
add
add
adc
arpl
add
add
add
pop
jge
add
add
push
add
add
cmp
add
and
add
add
add
add
or
ds
add
dec
add
cmp
add
add
add
add
add
jnp
add
add
sub
add
push
or
push
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
jmp
(bad)
(bad)
dec
add
add
add
push
add
cmp
(bad)
(bad)
inc
or
sbb
add
push
mov
mov
add
add
mov
add
(bad)
sbb
sub
inc
sbb
add
add
add
add
add
add
add
add
cmp
jnp
add
add
sub
add
push
sub
sbb
or
repnz
add
add
sub
add
or
adc
sbb
or
and
ret
add
push
sub
add
push
sub
add
or
inc
or
add
ret
add
push
sub
add
push
sub
add
or
adc
and
ret
add
push
sub
add
push
sub
add
or
mov
ret
add
push
sub
add
or
adc
and
ret
add
push
sub
add
push
sub
add
or
or
add
ret
add
push
sub
add
push
sub
add
or
adc
pop
and
or
add
ret
add
push
sub
add
push
and
ret
add
push
sub
add
or
or
les
add
sub
add
push
sub
add
push
cmp
add
add
pop
add
add
add
mov
xor
add
sub
add
push
sub
add
push
mov
inc
or
add
ret
add
push
mov
sbb
add
sub
add
push
sub
add
push
mov
leave
adc
add
ret
add
push
mov
add
or
add
or
add
adc
adc
outs
outs
add
or
or
or
add
rcl
add
sub
add
push
sub
add
push
outs
push
add
or
or
or
add
adc
push
add
or
or
or
add
repz
add
ret
add
push
outs
push
add
or
or
or
add
adc
push
add
or
or
and
adc
add
ret
add
push
sub
add
push
outs
push
add
or
push
adc
adc
adc
push
add
or
movlps
adc
call
add
sub
add
push
outs
push
add
or
adc
or
add
adc
push
add
or
adc
or
add
mov
ret
add
push
outs
push
add
or
adc
or
add
adc
push
add
or
adc
or
les
add
sub
add
push
and
or
add
ret
add
push
sub
add
push
and
or
add
ret
add
push
sub
add
push
sub
pop
adc
or
add
adc
push
add
or
adc
and
ret
add
push
sub
add
push
outs
push
add
or
push
adc
adc
adc
push
add
or
pop
adc
adc
aad
add
sub
add
push
outs
push
add
or
sbb
or
add
jo
add
pop
sbb
or
lea
add
add
add
mov
xor
add
sub
add
push
sub
add
push
mov
inc
or
add
ret
add
push
mov
sbb
add
sub
add
push
sub
add
push
mov
leave
adc
add
ret
add
push
mov
add
or
push
adc
or
fst
add
add
pop
cmp
add
adc
pop
pop
push
adc
inc
sbb
add
add
add
xchg
cld
(bad)
call
cld
(bad)
(bad)
in
cld
(bad)
call
std
(bad)
(bad)
aas
std
(bad)
call
(bad)
push
std
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
cmp
(bad)
call
jmp
(bad)
jns
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
(bad)
js
(bad)
(bad)
fnstsw
or
pop
adc
inc
add
add
add
add
ins
(bad)
(bad)
(bad)
frstor
sbb
add
adc
add
push
push
inc
pop
adc
push
inc
pop
(bad)
adc
add
sub
add
or
ret
(bad)
(bad)
jmp
xor
or
or
pop
cmp
clc
add
or
and
add
push
pop
or
adc
add
add
add
pop
mov
or
test
add
(bad)
sbb
add
inc
xor
add
add
add
add
add
add
sldt
add
add
add
add
int
add
int
add
and
add
sbb
add
adc
add
add
add
and
add
add
push
add
cmp
add
add
sub
add
or
sldt
add
add
add
dec
add
cmp
add
add
adc
add
and
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
jmp
add
add
add
add
cmp
(bad)
(bad)
inc
jecxz
add
push
outs
jb
add
and
ret
jmp
add
add
xor
add
add
add
lea
add
or
push
add
push
sbb
add
push
sbb
add
add
push
sub
add
sbb
add
add
add
adc
outs
jae
add
rcr
add
sub
add
or
add
add
add
add
dec
add
cmp
add
add
outs
fadd
add
and
adc
add
ret
add
push
sub
add
cmp
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
outs
leave
add
or
add
adc
add
xlat
add
push
and
add
dec
add
cmp
pop
add
push
add
pop
outs
pop
add
push
fld
add
add
fld
add
add
add
add
adc
add
add
add
add
add
xor
add
add
add
inc
add
inc
adc
add
and
add
dec
add
cmp
add
add
xchg
add
add
add
add
or
inc
add
add
sbb
add
arpl
add
cmp
add
and
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
push
cmp
(bad)
(bad)
jmp
add
push
add
cmp
add
add
and
add
add
mov
(bad)
inc
add
fst
add
push
mov
add
ret
push
(bad)
sbb
sub
add
add
add
add
popf
popf
add
add
add
xor
add
add
add
and
add
pop
pop
pop
fs
add
add
and
add
pop
jge
add
add
push
add
add
add
add
push
(bad)
sbb
add
adc
add
add
add
add
sbb
add
sbb
push
add
add
add
add
jae
add
or
outs
pop
add
or
add
add
dec
add
cmp
add
add
out
add
sub
add
push
or
push
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
jmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
dec
outs
je
add
cmp
outs
cld
add
or
add
add
dec
add
cmp
hlt
adc
add
ret
add
push
and
add
sub
add
push
sub
add
or
pop
add
or
add
ret
add
push
and
add
sub
add
push
sub
add
or
pop
add
or
add
outs
(bad)
(bad)
jmp
out
add
sub
add
push
or
or
add
push
pop
or
sub
sbb
add
add
adc
add
add
add
fld
or
add
sbb
add
add
add
and
ret
add
push
adc
and
add
add
push
adc
add
and
adc
add
ret
add
push
adc
and
add
add
cmp
and
add
sub
add
push
adc
adc
add
ret
add
push
adc
and
add
add
pop
and
add
add
push
adc
add
sub
add
adc
outs
je
add
adc
or
or
add
or
adc
sub
or
adc
adc
adc
or
or
or
pop
push
pop
outs
ja
add
adc
jae
add
or
adc
data16
add
add
add
dec
adc
add
add
add
(bad)
(bad)
call
(bad)
call
(bad)
call
add
push
add
add
add
add
add
add
pop
add
add
push
adc
(bad)
inc
outs
ins
add
or
bound
add
adc
push
or
add
or
push
and
add
add
cmp
adc
pop
outs
js
add
adc
adc
adc
or
add
push
adc
(bad)
inc
jae
add
or
or
or
push
jae
add
or
push
mov
lea
add
add
sysret
adc
push
adc
mov
or
or
add
or
add
push
adc
(bad)
call
push
adc
pop
adc
or
add
adc
adc
push
push
mov
mov
mov
adc
sbb
mov
add
adc
sbb
add
adc
mov
pop
mov
adc
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
pop
or
add
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
add
push
(bad)
sbb
adc
add
add
add
jg
add
jg
add
lahf
add
add
add
sbb
add
imul
add
add
jge
add
add
add
add
dec
add
cmp
push
jge
add
add
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
add
add
sub
sbb
add
add
adc
add
add
add
add
sbb
add
push
add
add
add
sbb
pop
add
add
or
add
add
jl
add
jnp
add
add
test
add
and
push
add
cmp
add
jae
add
or
pop
pop
cmp
jnp
add
add
add
xchg
and
add
add
jnp
add
add
pop
pop
bound
jle
add
jl
add
and
push
add
dec
add
add
add
(bad)
(bad)
dec
add
cmp
add
dec
add
add
add
add
add
and
add
cmp
(bad)
(bad)
push
add
or
add
push
add
add
cmp
push
add
(bad)
(bad)
jmp
add
add
dec
add
cmp
add
add
add
push
add
add
push
add
cmp
and
add
pop
jge
add
add
add
add
add
add
pop
cmp
(bad)
jmp
add
jge
add
add
sbb
add
push
mov
add
add
add
mov
add
(bad)
sbb
inc
sbb
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
std
add
add
add
push
or
jnp
add
add
sbb
add
and
add
dec
add
cmp
add
push
add
add
add
add
or
push
add
add
add
data16
push
jge
add
add
add
add
cmp
add
add
jnp
add
add
dec
add
or
dec
add
add
cmp
add
and
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
call
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
jno
add
sub
add
push
jae
add
or
jnp
add
add
call
add
sub
add
cmp
add
add
add
push
add
cmp
jle
add
add
cmp
add
or
and
ret
add
push
pop
outs
fadd
add
sub
add
outs
sbb
xor
add
add
add
cmps
add
add
ret
add
push
outs
dec
add
or
sldt
add
ins
add
add
ret
add
push
cmp
add
add
jnp
add
add
sbb
add
add
add
add
or
fsub
add
sbb
add
sbb
add
add
add
and
and
and
add
add
cmp
add
add
add
pop
adc
sbb
add
add
add
pop
pop
and
mov
add
add
pop
and
pop
add
add
jnp
add
add
pop
pop
and
mov
add
add
pop
and
clc
add
add
jnp
add
add
pop
pop
and
mov
add
add
pop
and
fld
add
and
add
add
push
or
add
add
jge
add
add
adc
add
add
adc
and
add
add
adc
mov
add
cmp
mov
add
pop
pop
and
mov
add
add
pop
and
test
add
add
add
add
pop
pop
and
mov
add
add
pop
and
add
add
jnp
add
add
pop
pop
and
mov
add
add
pop
and
inc
add
add
jnp
add
add
pop
pop
and
mov
add
add
pop
and
daa
add
add
jnp
add
add
pop
pop
and
mov
add
add
pop
and
or
add
or
or
retf
dec
adc
add
add
push
or
add
add
add
add
add
add
pop
pop
pop
adc
add
add
add
add
or
push
add
add
push
or
add
add
add
add
add
push
push
aas
add
add
push
sbb
pop
add
add
add
pop
add
add
add
add
sub
outs
add
add
add
add
add
add
add
add
adc
pop
xchg
adc
inc
mov
jnp
add
add
adc
pop
pop
pop
xchg
adc
inc
movs
add
add
jnp
add
add
xchg
add
add
add
xchg
inc
pop
add
add
add
add
pop
pop
xchg
add
add
add
pop
pop
xchg
inc
jbe
add
cmp
std
(bad)
jmp
or
add
dec
or
add
add
add
(bad)
(bad)
inc
(bad)
call
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
add
add
les
add
outs
add
add
add
add
pop
add
add
cmp
jnp
add
add
add
or
jnp
add
add
add
jnp
add
add
or
and
jg
add
and
inc
add
adc
adc
or
add
push
pop
pop
and
(bad)
inc
adc
add
add
add
and
add
jge
add
add
or
add
dec
or
(bad)
inc
jnp
add
add
jnp
add
add
adc
add
sub
add
or
push
add
add
add
cli
jle
add
sub
add
or
pop
and
add
add
push
or
(bad)
call
push
pop
cmp
(bad)
(bad)
jmp
or
add
dec
or
(bad)
inc
jnp
add
add
add
add
add
and
add
add
cmp
(bad)
(bad)
jmp
add
add
add
inc
inc
adc
pop
or
add
or
or
push
mov
adc
pop
pop
mov
adc
sbb
mov
mov
adc
sbb
add
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
mov
add
adc
sub
add
push
(bad)
sbb
or
add
inc
sbb
add
add
bound
add
xchg
add
add
add
sbb
add
add
add
adc
outs
jae
add
rcr
add
sub
add
or
add
add
add
add
sub
add
cmp
add
add
or
ficom
add
sub
add
push
sub
add
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
and
add
add
(bad)
(bad)
inc
outs
leave
add
or
add
adc
add
xlat
add
push
and
add
dec
add
cmp
pop
add
push
add
push
outs
pop
add
push
fld
add
add
fld
add
add
outs
fadd
add
jle
add
or
add
or
add
adc
add
add
add
add
add
xor
icebp
add
add
add
add
add
add
mov
add
sub
add
push
jae
add
push
adc
outs
jae
add
or
push
sub
add
push
and
adc
add
ret
add
push
or
outs
fadd
add
or
push
add
add
fld
add
add
jnp
add
add
(bad)
adc
add
ret
add
push
pop
outs
add
add
add
or
jnp
add
add
rcl
add
sub
add
push
or
add
or
pop
and
add
or
outs
dec
add
or
and
adc
add
ret
add
push
outs
add
or
add
add
push
or
add
or
jnp
add
add
cmc
adc
add
ret
add
push
or
add
or
add
jae
add
push
sub
add
fld
add
add
fld
add
add
sldt
add
add
pop
add
add
add
sub
add
fsubr
add
add
sub
add
add
add
add
or
add
add
pop
add
add
add
add
add
loope
sldt
add
sbb
add
add
add
sub
add
or
adc
sbb
or
and
ret
add
push
sub
add
push
sub
add
or
or
add
ret
add
push
sub
add
push
sub
add
or
adc
and
ret
add
push
sub
add
push
sub
add
or
inc
or
add
ret
add
push
sub
add
push
sub
add
or
and
adc
add
ret
add
push
sub
add
pop
sub
or
and
add
sub
add
push
or
or
and
add
sub
add
push
sub
add
push
push
sub
add
or
inc
je
add
sbb
adc
add
ret
add
push
adc
push
adc
and
adc
add
ret
add
push
sub
add
push
cmp
add
pop
or
or
and
or
add
ret
add
push
sub
add
push
and
ret
add
push
sub
test
add
adc
pop
or
or
pop
pop
outs
xchg
add
pop
or
or
pop
pop
outs
or
add
pop
or
or
pop
sub
pop
movlps
sbb
add
and
ret
add
push
or
adc
or
push
and
add
sub
add
push
sub
add
adc
or
add
add
or
adc
or
and
or
add
ret
add
push
sub
add
push
sub
add
adc
or
mov
add
adc
cmp
add
adc
pop
pop
push
adc
inc
adc
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
inc
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
(bad)
in
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
inc
(bad)
call
(bad)
jmp
(bad)
push
call
add
add
or
or
or
add
add
add
add
and
sbb
add
adc
add
or
inc
pop
adc
push
inc
pop
(bad)
adc
add
sub
add
or
ret
(bad)
(bad)
jmp
xor
or
or
or
add
clc
add
or
data16
add
or
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
add
push
mov
pop
mov
or
adc
pop
or
or
adc
pop
or
or
adc
sub
add
push
(bad)
sbb
add
add
add
add
add
add
add
std
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
or
and
add
push
add
adc
jnp
add
add
cmp
add
add
add
add
dec
add
cmp
add
add
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
jmp
add
add
cmp
(bad)
(bad)
(bad)
(bad)
add
add
and
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
bound
jnp
add
add
pop
pop
bound
jle
add
and
add
adc
jg
add
add
adc
pusha
(bad)
(bad)
(bad)
cmp
(bad)
inc
jnp
add
add
jnp
add
add
jbe
(bad)
jmp
add
add
pop
cmp
(bad)
(bad)
jmp
add
add
add
pop
add
pop
pop
bound
pop
push
imul
add
pop
mov
add
movs
add
push
(bad)
sbb
sub
add
or
add
or
add
sbb
add
sbb
add
adc
add
add
add
add
lea
add
or
push
add
push
sbb
add
push
sub
sbb
pop
add
add
inc
add
adc
add
add
and
add
and
add
and
add
jge
add
add
sbb
add
push
mov
mov
mov
sub
sbb
add
add
add
add
add
daa
daa
add
sbb
add
sbb
or
or
add
adc
and
add
add
push
push
add
jne
add
sbb
cmp
add
add
sbb
or
add
add
adc
push
push
or
add
pop
adc
add
add
adc
pop
adc
add
add
cmp
add
add
pop
pop
and
add
add
or
add
sub
add
cmp
add
cmp
add
pop
or
jnp
add
add
add
adc
(bad)
(bad)
jmp
mov
add
or
or
add
dec
push
add
repnz
add
jnp
add
add
call
sbb
mov
add
and
push
push
add
rol
add
add
adc
int3
add
push
add
add
add
call
sbb
mov
add
cmp
add
add
pop
or
add
adc
int3
add
push
and
add
add
push
push
add
xchg
add
add
iret
add
add
pop
adc
int3
add
push
add
add
add
call
pop
sbb
push
and
add
add
push
push
add
popa
add
add
lahf
add
add
cmp
push
add
add
push
push
add
dec
add
add
add
jnp
add
add
sldt
add
add
add
add
add
cmp
(bad)
(bad)
dec
pop
cmp
(bad)
(bad)
(bad)
cmp
add
add
or
int3
add
push
or
cmp
cmp
add
add
dec
push
add
or
add
add
add
(bad)
call
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
(bad)
sti
(bad)
(bad)
(bad)
fsin
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
dec
push
add
mov
add
jnp
add
add
xchg
(bad)
(bad)
(bad)
(bad)
add
add
mov
mov
mov
mov
add
add
add
add
add
mov
add
(bad)
sbb
add
add
add
fld
add
fld
add
das
add
add
add
sbb
add
add
add
adc
pop
add
call
fisttp
add
add
sub
add
(bad)
sbb
sub
add
add
add
add
add
(bad)
str
sbb
add
sbb
add
add
adc
sub
add
add
or
add
add
dec
add
add
or
or
add
lar
push
or
cmp
add
and
add
add
push
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
inc
add
and
add
add
push
add
(bad)
inc
push
cmp
add
and
push
add
(bad)
inc
outs
mov
add
or
add
adc
add
add
sub
mov
popf
(bad)
(bad)
inc
pop
sub
add
fisttp
cmp
add
add
outs
sub
add
(bad)
push
add
add
fld
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
or
rol
push
and
add
add
add
add
dec
pop
add
icebp
add
add
sbb
push
and
add
add
adc
add
cmp
add
add
pop
sbb
push
and
add
add
rol
add
add
add
add
push
pop
or
xchg
or
pop
pop
maxps
mov
add
and
add
add
push
pop
add
cmps
add
add
add
add
add
add
outs
iret
add
push
adc
rol
push
or
jnp
add
add
xchg
or
push
aas
add
add
pop
pop
maxps
add
add
pop
pop
maxps
mov
add
and
pop
add
add
sbb
push
and
add
add
push
pop
add
inc
add
add
add
add
add
add
push
adc
adc
rol
push
or
jnp
add
add
push
pop
or
xchg
or
pop
maxps
add
jbe
(bad)
inc
pop
pop
maxps
mov
add
cmp
(bad)
(bad)
jmp
add
add
dec
pop
add
or
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
push
(bad)
(bad)
fdivrp
(bad)
inc
(bad)
(bad)
push
(bad)
(bad)
call
add
and
add
add
leave
(bad)
(bad)
inc
jnp
add
add
xchg
and
add
add
pop
pop
maxps
mov
add
pop
sbb
push
frstor
add
pop
sbb
or
pop
maxps
add
push
and
(bad)
(bad)
jmp
pop
add
add
push
pop
add
jp
(bad)
(bad)
fnsave
add
add
add
add
mov
mov
mov
mov
add
add
add
add
add
mov
add
(bad)
sbb
push
sub
add
mov
add
add
add
add
add
sbb
push
add
add
and
add
sub
add
push
sub
push
mov
add
push
push
mov
cmp
add
pop
call
dec
add
add
pop
call
and
add
add
add
add
add
inc
pusha
inc
inc
sub
add
push
pop
call
sbb
sub
add
or
outs
fadd
add
sub
sub
add
or
add
add
pop
pop
(bad)
or
or
popf
(bad)
(bad)
(bad)
fst
pop
mov
or
movs
add
push
(bad)
sbb
add
add
add
popa
add
add
add
mov
add
sbb
pop
add
add
add
add
add
jnp
add
add
imul
add
add
add
dec
(bad)
cmp
add
push
or
or
add
jnp
add
add
push
sahf
or
pop
or
add
push
(bad)
cmp
add
add
jnp
add
add
or
and
add
pop
add
dec
(bad)
cmp
add
add
add
add
add
mov
(bad)
inc
lea
add
add
pop
pop
push
sahf
push
pop
pop
adc
add
sbb
add
adc
add
pop
add
add
push
(bad)
cmp
jnp
add
add
jnp
add
add
pop
pop
jno
add
add
pop
add
add
jnp
add
add
pop
pop
jno
add
add
pop
add
add
add
add
or
add
add
sub
aas
add
add
add
or
pop
xchg
adc
add
jnp
add
add
adc
adc
rcr
or
or
cmp
adc
pop
pop
adc
and
push
add
add
mov
pop
or
pop
pop
sbb
and
add
add
cmp
add
add
cmp
jnp
add
add
or
pop
xchg
adc
cmp
add
or
xchg
pop
adc
or
add
cmp
add
add
add
add
push
adc
add
add
add
or
add
add
add
add
push
or
pop
or
add
sbb
add
add
adc
adc
and
or
add
adc
add
jnp
add
add
pop
pop
pop
pop
jno
add
add
pop
add
add
sbb
add
adc
add
push
(bad)
cmp
add
add
cmp
scas
add
add
jnp
add
add
pop
adc
add
add
add
or
pop
and
in
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
add
dec
(bad)
dec
add
add
add
std
(bad)
jmp
(bad)
(bad)
(bad)
mov
(bad)
(bad)
jmp
add
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
jmp
std
(bad)
dec
add
test
(bad)
inc
or
add
pop
cmp
add
add
add
or
pop
and
add
add
add
pop
add
add
add
pop
adc
pop
pop
pop
pop
bound
or
sldt
add
or
jnp
add
add
pop
aas
imul
dec
push
cmp
and
add
add
cmp
(bad)
jmp
adc
adc
(bad)
jmp
or
add
dec
(bad)
cmp
(bad)
call
or
push
(bad)
(bad)
(bad)
fnsave
lea
add
adc
adc
push
push
mov
adc
pop
pop
mov
adc
sbb
mov
adc
sbb
mov
adc
sbb
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
add
adc
pop
or
add
add
add
add
add
push
(bad)
sbb
add
inc
sbb
add
add
add
add
sbb
or
pop
add
add
add
add
add
add
push
add
add
add
add
or
add
dec
push
add
sahf
add
add
jnp
add
add
pop
and
jle
add
add
sub
add
add
adc
add
cmp
add
add
add
add
pop
add
add
add
or
or
adc
adc
adc
jne
add
add
add
pop
jge
add
add
add
inc
adc
add
jnp
add
add
push
add
add
add
add
cmp
adc
add
dec
push
add
sbb
add
add
add
add
pop
push
pop
adc
icebp
add
add
or
add
dec
push
add
or
add
add
add
add
add
add
xchg
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
push
add
popf
(bad)
(bad)
inc
and
add
pop
jge
add
add
and
add
pop
jge
add
add
push
jge
add
add
sbb
add
add
arpl
add
add
add
add
xor
pop
add
add
cmp
jmp
add
add
add
jl
add
and
cmp
(bad)
jmp
or
sti
add
add
or
add
push
cmp
(bad)
(bad)
jmp
add
jge
add
add
and
add
pop
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
or
add
cmp
push
add
add
push
push
add
in
(bad)
(bad)
inc
jnp
add
add
or
jnp
add
add
jnp
add
add
pop
xchg
and
add
add
or
or
or
js
add
and
add
add
push
push
add
mov
(bad)
inc
cmp
(bad)
call
adc
add
jnp
add
add
cli
add
add
or
add
cmp
jnp
add
add
sub
add
add
add
add
or
jnp
add
add
jnp
add
add
pop
xchg
and
add
add
or
or
or
js
add
add
jge
add
add
jnp
add
add
push
add
add
add
pop
add
add
add
or
jnp
add
add
jnp
add
add
adc
adc
adc
add
jne
add
and
add
add
push
push
add
adc
jnp
add
add
jnp
add
add
or
add
add
add
or
pop
or
add
and
add
add
adc
out
(bad)
(bad)
cmp
std
(bad)
inc
jnp
add
add
inc
cmp
add
add
adc
jnp
add
add
push
and
add
add
push
push
add
mov
(bad)
inc
add
add
add
mov
add
adc
add
jnp
add
add
cli
inc
add
push
add
add
sub
jnp
add
add
add
add
add
and
add
add
jns
(bad)
inc
jnp
add
add
cmp
add
add
add
inc
push
add
add
jnp
add
add
jnp
add
add
and
adc
add
pop
add
add
sbb
add
add
sbb
retf
inc
jnp
add
add
cmp
add
add
add
or
add
add
pop
cmp
pop
adc
or
loop
add
es
sbb
add
add
pop
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
aas
pop
add
add
sub
add
es
pop
pop
and
(bad)
(bad)
jmp
or
add
sub
(bad)
cld
(bad)
jmp
add
add
add
aas
je
(bad)
inc
sub
add
or
add
add
dec
push
add
sahf
cld
(bad)
call
adc
add
mov
mov
mov
mov
add
add
add
add
mov
add
add
add
add
sub
sbb
add
add
add
add
add
add
add
add
add
or
add
add
add
add
jnp
add
add
call
add
add
xchg
and
inc
add
jnp
add
add
xchg
sub
push
add
add
add
add
push
(bad)
sbb
add
add
add
add
add
sub
add
sbb
add
sbb
or
add
add
imul
ja
add
push
and
add
add
push
push
add
inc
add
fucom
add
add
jnp
add
add
jnp
add
add
mov
add
add
add
pop
jge
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jno
add
push
add
add
add
or
sbb
add
and
add
add
add
add
or
add
dec
push
add
call
jo
add
add
add
dec
push
add
test
add
pop
and
add
add
add
add
push
cmp
add
add
adc
add
adc
jp
add
adc
jns
add
sbb
add
add
adc
add
jle
add
add
and
add
add
jge
add
add
jle
add
add
and
add
add
jge
add
add
add
add
dec
push
add
sbb
add
add
add
add
mov
outs
(bad)
(bad)
jmp
or
add
dec
push
add
or
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
push
add
add
(bad)
(bad)
call
add
add
add
add
(bad)
(bad)
dec
add
add
add
and
add
add
push
push
add
mov
(bad)
inc
jnp
add
add
jnp
add
add
rol
push
or
push
cmp
add
add
adc
add
xchg
(bad)
(bad)
(bad)
fnsave
add
add
add
add
jnp
add
add
mov
add
add
add
pop
jge
add
add
pop
or
add
add
jnp
add
add
jnp
add
add
enter
or
push
cmp
add
add
adc
add
jle
add
add
xchg
jge
add
add
jle
add
add
xchg
jge
add
add
jnp
add
add
ds
(bad)
(bad)
inc
pop
or
add
add
jnp
add
add
jnp
add
add
rol
push
or
(bad)
(bad)
jmp
or
add
cmp
(bad)
(bad)
call
adc
add
push
push
add
loopne
(bad)
(bad)
cmp
(bad)
(bad)
inc
jnp
add
add
sub
add
add
sub
(bad)
(bad)
(bad)
(bad)
cmp
add
(bad)
inc
jnp
add
add
add
add
pop
inc
add
add
and
add
jnp
(bad)
push
(bad)
(bad)
jmp
(bad)
jmp
add
add
pop
cmp
push
pop
pop
and
add
cmp
add
add
adc
add
jnp
add
add
jnp
add
add
enter
and
(bad)
call
jns
(bad)
jmp
or
add
push
cmp
(bad)
jmp
pop
adc
add
mov
mov
mov
mov
add
add
sub
sbb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
add
add
sbb
call
fisttp
add
add
add
ret
push
(bad)
sbb
sub
add
add
add
add
(bad)
str
sbb
add
sbb
push
add
add
or
add
add
add
add
and
add
or
pop
jge
add
add
add
pushf
add
add
add
and
add
or
pop
jge
add
add
add
arpl
pushf
fstp
add
add
mov
mov
add
movs
add
push
(bad)
sbb
add
add
add
add
add
cmp
add
sbb
add
bound
add
add
or
add
add
jnp
add
add
daa
add
or
add
add
xor
add
add
add
jecxz
add
fld
add
add
fld
add
add
pop
add
add
fiadd
add
(bad)
sbb
add
add
sbb
add
add
add
or
push
sbb
add
add
add
adc
add
add
xor
add
add
add
add
sub
add
or
fst
add
add
and
adc
add
ret
add
push
or
add
add
push
sub
add
adc
add
add
add
or
adc
add
adc
push
add
add
add
add
and
add
add
push
add
add
add
mov
add
or
add
push
adc
add
sub
or
add
in
add
push
cmp
add
and
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
push
add
(bad)
inc
or
add
or
push
add
add
push
add
(bad)
jmp
adc
add
add
add
or
add
add
dec
add
(bad)
call
add
push
add
adc
add
jae
add
or
add
push
add
dec
add
(bad)
call
add
add
add
add
add
add
sub
and
add
add
add
add
add
xor
and
add
add
add
xchg
add
push
add
pop
adc
xchg
add
push
fisttp
add
add
add
add
push
(bad)
sbb
add
add
adc
add
add
add
push
add
sbb
add
sbb
add
add
adc
or
add
and
or
add
ret
add
push
add
jo
add
sub
add
push
sub
imul
add
add
dec
add
cmp
add
push
cmp
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
inc
jae
add
or
add
add
adc
fisttp
add
add
adc
fld
add
add
sub
add
adc
add
add
add
or
add
sbb
add
add
add
and
add
add
push
(bad)
cmp
add
add
dec
add
add
add
add
dec
(bad)
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
push
add
add
add
add
dec
(bad)
cmp
(bad)
(bad)
call
add
dec
(bad)
cmp
(bad)
(bad)
inc
jae
add
or
add
push
(bad)
cmp
add
add
add
add
add
push
cmp
add
adc
pop
pop
adc
and
adc
xor
add
cmp
or
or
outs
dec
add
or
ds
(bad)
dec
pop
pop
or
enter
and
add
add
push
or
dec
add
add
add
add
add
add
add
(bad)
(bad)
push
add
and
add
add
push
or
cmp
(bad)
(bad)
inc
outs
add
cmp
add
adc
adc
push
pop
or
pop
or
add
or
add
add
or
adc
and
add
dec
or
cmp
or
or
(bad)
(bad)
fisttp
add
add
adc
add
or
add
or
ds
add
and
add
add
inc
add
add
push
outs
pop
add
or
add
or
(bad)
(bad)
inc
pop
pop
pop
or
add
add
dec
or
add
or
outs
jmp
jmp
add
adc
cmp
(bad)
(bad)
jmp
add
add
dec
or
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
dec
or
(bad)
call
push
outs
in
add
or
fld
add
add
fld
add
add
add
or
add
push
adc
and
add
dec
push
add
sub
add
jae
add
or
or
outs
int
add
and
ret
add
push
adc
outs
xchg
add
or
pop
add
add
add
add
dec
push
add
or
add
add
add
add
mov
(bad)
push
add
mov
(bad)
dec
add
add
add
and
add
add
push
push
add
sar
(bad)
inc
outs
int
add
and
ret
add
push
outs
into
add
or
adc
add
and
add
add
cmp
cmp
add
add
outs
int
add
and
ret
add
push
outs
iret
add
or
add
adc
and
push
push
add
jl
(bad)
call
or
pop
outs
xchg
add
or
fld
add
add
fld
add
add
add
sub
add
add
inc
add
or
add
add
dec
add
add
add
add
add
mov
add
or
add
sbb
add
add
mov
add
fld
add
add
fld
add
add
pop
add
add
fiadd
add
(bad)
sbb
add
add
sbb
add
add
add
or
push
sbb
add
add
add
adc
add
add
xor
add
add
pop
or
sub
add
cmp
add
and
add
add
adc
add
cmp
add
add
pop
sbb
fdivrp
(bad)
jmp
add
add
dec
add
cmp
add
add
or
pop
add
add
pop
(bad)
or
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
add
dec
add
cmp
(bad)
(bad)
call
or
adc
add
push
mov
add
add
mov
sub
add
push
(bad)
sbb
sub
add
add
add
add
jge
add
add
add
xor
add
add
add
add
adc
mov
add
add
cmp
add
es
mov
add
add
cmp
add
add
sti
add
or
and
add
add
push
add
cmp
add
add
mov
add
add
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
int
(bad)
call
add
and
add
add
adc
fdivr
(bad)
(bad)
cmp
(bad)
(bad)
call
mov
add
add
cmp
add
fnsave
add
add
test
add
or
add
or
mov
add
add
cmp
add
es
mov
add
add
cmp
add
es
add
or
add
add
and
pop
add
sub
add
or
cli
add
or
ss
(bad)
inc
mov
jb
add
(bad)
sbb
add
add
add
add
add
sbb
add
add
add
retf
or
or
add
add
add
add
add
stos
add
add
add
add
add
or
add
add
sub
add
push
(bad)
sbb
add
add
add
add
add
adc
add
sbb
add
sbb
add
cmp
add
outs
add
adc
add
or
mov
xchg
add
or
pop
cmp
add
add
or
sbb
add
outs
cwde
add
or
fisttp
cmp
add
add
outs
sub
add
fadd
sub
sub
adc
add
add
add
sub
or
or
push
add
add
add
add
add
jnp
add
add
sub
add
add
add
pop
jge
add
add
adc
add
mov
mov
movs
add
push
(bad)
sbb
add
add
adc
add
add
add
daa
add
add
lea
add
sub
add
push
sub
add
xor
add
add
add
sbb
sub
add
push
or
or
add
add
add
ret
push
(bad)
sbb
sub
add
add
add
add
(bad)
str
sbb
add
adc
add
add
add
adc
add
add
sub
jle
add
cmp
add
sub
add
xlat
add
push
sub
add
add
push
outs
pop
add
push
and
add
add
push
add
cmp
add
add
fdivr
(bad)
jmp
add
add
sub
add
cmp
add
es
add
add
fld
add
sub
add
push
sub
add
cmp
pop
add
push
add
add
outs
pop
add
push
cmp
xchg
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
call
add
add
add
add
cmp
(bad)
(bad)
inc
jne
add
add
push
(bad)
(bad)
jmp
add
push
add
cmp
add
sbb
add
add
add
jle
add
add
pop
maxps
cdq
add
add
sbb
maxps
cdq
add
add
push
arpl
maxps
cdq
add
add
pop
or
xchg
pusha
push
add
add
jb
add
(bad)
sbb
sub
adc
add
add
add
add
add
xor
add
add
jno
add
add
sahf
add
add
jnp
add
add
push
add
push
cmp
add
add
push
and
mov
add
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
cwde
add
add
add
add
add
fadd
add
and
aad
(bad)
inc
lahf
add
add
and
add
or
pop
jge
add
add
add
pop
rcr
mov
add
or
fwait
add
add
cmps
add
add
(bad)
add
add
pop
push
add
and
add
add
add
add
add
add
sub
jbe
(bad)
jmp
add
jnp
add
add
and
sbb
jge
add
add
add
pop
sub
and
add
add
push
add
cmp
(bad)
inc
pushf
add
add
cmps
add
add
(bad)
add
add
pop
push
add
sbb
push
add
add
add
sbb
pop
pop
jge
add
add
push
add
add
cmp
(bad)
jmp
add
or
add
or
add
mov
mov
mov
add
mov
lods
add
push
(bad)
sbb
sub
add
inc
sbb
add
add
inc
add
add
add
add
add
or
add
add
add
add
add
push
add
or
push
in
add
jae
add
or
add
or
push
add
add
fld
add
add
pop
add
add
fiadd
add
(bad)
sbb
add
add
add
add
add
sbb
push
or
add
add
add
es
sbb
add
sbb
push
add
add
adc
aas
add
or
add
or
add
or
add
add
outs
rol
add
je
add
add
pop
outs
inc
add
or
add
or
outs
dec
add
or
or
add
pop
outs
pushf
add
or
fnsave
add
add
outs
aad
add
cmp
(bad)
(bad)
(bad)
fst
add
add
jne
add
add
or
add
or
add
add
add
or
jle
add
or
add
or
add
mov
add
add
or
sub
sbb
sub
add
sbb
add
add
add
add
jl
add
sbb
add
sbb
add
add
add
adc
add
add
or
stos
add
push
adc
push
sub
sub
add
pop
outs
je
add
sub
add
or
enter
pop
lea
add
add
adc
adc
pop
sub
adc
outs
dec
add
or
or
add
adc
adc
cmp
add
add
adc
call
cmp
adc
pop
pop
call
add
pop
sbb
pop
adc
or
sar
(bad)
call
add
dec
add
or
pop
add
add
add
add
add
dec
add
or
dec
add
add
bound
add
adc
jnp
add
add
je
add
sub
add
or
adc
cmp
add
add
adc
call
cmp
adc
pop
pop
call
add
or
pop
adc
adc
or
sar
(bad)
call
add
dec
add
or
and
add
adc
outs
arpl
add
pop
pop
inc
dec
add
add
add
pop
outs
add
or
or
add
adc
pop
pop
outs
mov
or
or
jp
add
or
inc
inc
adc
outs
add
or
inc
inc
adc
adc
or
pop
outs
dec
add
or
add
pop
add
add
adc
push
add
or
add
add
add
popf
add
or
adc
add
jle
add
add
add
sahf
add
or
adc
mov
or
add
adc
imul
adc
cmp
add
adc
outs
push
add
imul
xor
add
adc
push
adc
ins
add
or
adc
add
or
push
adc
push
cmp
add
add
or
or
push
fst
add
add
pop
adc
fisttp
add
add
pop
adc
fld
add
add
push
cmp
add
add
add
jo
mov
add
in
add
or
mov
add
add
adc
xchg
add
cmp
movaps
add
or
and
push
pop
add
add
add
adc
or
imul
adc
add
or
adc
sub
add
push
and
add
add
adc
add
cmp
adc
adc
jnp
add
add
fld
add
mov
adc
adc
adc
add
cmp
add
adc
sub
adc
mov
add
add
dec
pop
add
or
add
add
add
add
add
(bad)
push
dec
add
add
jmp
add
add
add
add
cmp
(bad)
(bad)
call
unpcklps
sub
add
push
and
add
add
push
pop
add
mov
adc
mov
push
fld
add
add
fld
add
add
add
add
add
push
outs
movs
add
or
push
adc
fst
or
add
adc
push
add
or
adc
push
fst
add
add
adc
push
ffree
add
add
pop
lea
add
adc
mov
add
mov
mov
mov
mov
add
adc
add
add
mov
push
mov
add
add
pop
mov
adc
add
adc
mov
adc
mov
adc
mov
adc
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
adc
adc
push
(bad)
sbb
push
sub
add
add
add
rol
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
fld
add
add
add
and
add
add
push
add
cmp
add
add
add
add
or
cmp
and
add
sub
add
push
cmp
add
add
jle
add
sub
add
push
sub
adc
add
push
add
add
add
add
dec
add
dec
add
add
add
add
add
push
add
add
add
add
add
add
add
and
cmp
(bad)
(bad)
jmp
add
add
add
outs
std
add
or
add
add
cmp
pop
jge
add
add
pop
jge
add
add
outs
dec
add
or
or
add
add
sub
add
add
add
or
push
add
add
mov
(bad)
inc
add
add
add
add
add
pop
cmp
(bad)
jmp
sub
add
adc
add
add
add
add
or
or
push
add
push
sbb
add
push
sbb
add
push
mov
mov
mov
mov
or
add
sub
xor
add
push
add
je
add
jae
add
push
or
mov
loopne
add
or
stos
add
or
add
movs
add
or
mov
pop
jg
pop
sbb
add
cmps
add
or
adc
sub
adc
adc
sub
or
adc
sub
bound
add
stos
add
or
fs
outs
or
add
and
add
outs
add
or
add
adc
push
adc
add
cmp
add
push
add
pop
adc
xchg
popa
and
add
add
xchg
adc
push
fs
adc
adc
pop
pop
and
(bad)
(bad)
(bad)
call
push
adc
push
dec
add
sub
add
push
push
pop
adc
xchg
add
push
push
push
sub
push
sub
imul
push
adc
push
sub
add
push
push
outs
stos
add
or
or
push
sub
add
push
add
aad
add
sub
add
jb
add
jo
je
add
adc
push
adc
mov
xchg
add
push
push
push
sub
adc
push
adc
mov
mov
add
push
cmp
add
add
add
add
lea
add
add
or
adc
sub
or
or
ds
add
add
adc
push
adc
mov
outs
jecxz
add
cmp
(bad)
(bad)
inc
sub
add
add
add
add
lea
add
add
or
nop
add
push
adc
adc
push
ds
add
add
adc
mov
outs
loop
add
cmp
(bad)
(bad)
inc
outs
loope
add
adc
and
add
push
sub
add
push
push
pop
adc
xchg
add
push
push
pop
adc
xchg
add
push
push
push
sub
push
sub
imul
push
adc
push
sub
add
push
adc
imul
push
add
aad
add
push
adc
mov
xchg
add
push
push
push
sub
push
sub
push
sub
push
sub
push
sub
add
push
push
push
sub
add
push
push
adc
push
adc
mov
mov
push
dec
add
add
push
push
push
sub
push
sub
pop
sub
pop
sub
adc
mov
push
sub
add
push
pop
push
adc
mov
push
addps
sub
add
push
push
push
sub
adc
push
outs
lods
add
or
adc
imul
push
cmp
add
add
inc
add
add
jnp
jge
push
sub
add
push
add
aad
add
push
adc
cmp
add
add
(bad)
call
add
pop
sub
add
or
adc
add
push
adc
mov
and
add
push
outs
stos
add
or
adc
push
sub
add
push
adc
mov
sub
add
push
jae
add
push
adc
adc
adc
sub
add
push
cmp
add
add
add
add
lea
add
add
adc
adc
adc
nop
add
push
adc
pop
add
add
adc
adc
or
adc
add
push
cmp
(bad)
(bad)
call
adc
lods
add
push
cmp
add
add
add
add
lea
add
add
push
adc
adc
sub
pop
adc
push
ds
add
add
adc
push
adc
outs
mov
adc
add
push
cmp
(bad)
(bad)
inc
outs
stos
add
or
sbb
adc
outs
lods
add
or
adc
add
push
imul
push
push
adc
outs
lods
add
or
adc
adc
adc
add
(bad)
(bad)
(bad)
cmp
sbb
add
add
jnp
jge
push
sub
add
push
adc
pop
add
push
adc
add
push
sub
sbb
sbb
sbb
adc
mov
scas
add
or
sbb
adc
push
adc
mov
mov
add
add
sbb
pop
add
add
sbb
add
or
add
inc
push
add
add
jnp
jge
push
sub
add
push
adc
pop
add
push
adc
add
sub
adc
sbb
imul
push
push
adc
push
adc
mov
mov
sldt
add
sbb
add
sbb
or
push
outs
fadd
add
push
outs
ins
add
or
outs
fld
add
adc
fstp
add
add
pop
jb
add
jo
pop
outs
fadd
add
sub
add
sub
add
sbb
and
and
push
add
add
and
add
and
and
push
mov
mov
mov
add
mov
mov
add
mov
add
adc
sbb
add
add
push
mov
add
add
pop
mov
adc
push
adc
mov
adc
pop
or
or
adc
pop
or
or
adc
mov
adc
add
adc
pop
or
and
push
adc
mov
adc
pop
movups
mov
add
mov
adc
mov
adc
pop
adc
adc
adc
mov
add
mov
adc
mov
adc
adc
pop
adc
add
add
adc
mov
adc
mov
adc
pop
sbb
sbb
adc
pop
sbb
sbb
adc
mov
adc
mov
adc
adc
pop
sbb
and
push
adc
mov
adc
mov
adc
mov
add
and
add
adc
pop
and
mov
add
add
push
(bad)
sbb
and
add
inc
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
and
add
jl
add
sldt
add
add
sbb
add
sbb
add
mov
add
add
add
sbb
push
add
add
dec
add
adc
jnp
add
add
xor
add
or
add
add
pop
cmp
add
add
add
add
add
push
push
add
add
add
jbe
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jae
add
push
or
or
add
push
add
add
push
(bad)
sbb
sub
adc
add
add
add
add
sbb
add
sbb
pop
add
add
jne
add
pop
adc
or
or
add
dec
adc
cmp
add
add
add
add
adc
push
sbb
punpcklbw
and
add
add
push
adc
cmp
add
adc
pop
adc
pop
or
pop
pop
bound
or
or
add
or
add
push
adc
cmp
add
adc
pop
or
and
add
dec
adc
cmp
xchg
add
add
adc
xchg
adc
adc
cmp
adc
xchg
adc
or
add
pop
cmp
add
add
adc
pop
adc
pop
pop
pop
bound
adc
adc
add
add
aas
addr16
(bad)
(bad)
cmp
add
add
add
add
adc
inc
add
pop
xchg
adc
pop
adc
pop
maxps
pop
pop
bound
adc
adc
arpl
adc
jnp
add
add
adc
adc
or
adc
sbb
punpcklbw
adc
pop
adc
pop
pop
pop
bound
adc
adc
adc
aam
(bad)
inc
adc
adc
pop
adc
mulps
pop
pop
bound
adc
pop
pop
adc
and
add
add
outs
add
add
or
or
add
add
adc
and
add
add
adc
add
cmp
add
adc
pop
pop
adc
push
pop
pop
pop
pop
arpl
add
adc
adc
pop
(bad)
leave
add
add
adc
add
add
add
add
add
adc
pop
movlps
cmp
add
cmp
add
or
add
add
dec
adc
cmp
add
add
add
adc
xchg
pop
adc
or
pop
pop
bound
add
add
cmp
add
or
or
or
add
jnp
add
add
or
push
adc
sbb
or
popf
and
add
add
push
adc
cmp
add
loope
add
adc
and
add
add
push
adc
cmp
or
and
add
pop
add
add
add
push
adc
add
add
adc
cs
(bad)
inc
adc
adc
adc
adc
xchg
pop
adc
push
pop
pop
pop
pop
bound
add
push
pop
or
pop
(bad)
(bad)
inc
adc
xchg
and
adc
adc
cmp
add
or
or
add
sub
add
cmp
add
add
adc
(bad)
(bad)
call
or
pop
adc
cmp
or
add
dec
adc
dec
add
add
add
(bad)
(bad)
jmp
inc
(bad)
(bad)
call
(bad)
call
std
(bad)
jmp
(bad)
jmp
dec
add
add
(bad)
(bad)
inc
(bad)
jmp
(bad)
push
add
and
add
dec
adc
cmp
adc
or
or
pop
(bad)
(bad)
inc
or
adc
(bad)
jmp
or
cmp
push
add
(bad)
(bad)
fucomp
add
add
adc
add
adc
adc
push
mov
mov
mov
adc
sbb
mov
adc
sbb
add
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
add
adc
pop
or
add
add
adc
mov
adc
pop
movups
mov
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
mov
add
add
push
(bad)
sbb
inc
sbb
add
add
add
add
add
add
add
add
sbb
or
lea
add
inc
add
adc
or
loope
add
add
add
add
add
pushf
and
add
add
push
add
cmp
add
add
add
pop
adc
add
add
add
jnp
add
add
add
sub
add
and
add
add
push
add
cmp
add
add
and
add
fs
add
add
and
add
pop
jge
add
add
pop
pop
adc
and
add
add
push
add
cmp
and
add
pop
jge
add
add
jnp
add
add
jnp
add
add
pop
pop
cmp
add
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
jle
add
push
jge
add
add
pop
add
add
push
add
cmp
add
push
pop
pop
or
add
add
cmp
add
add
add
add
ds
add
add
(bad)
inc
add
or
add
jnp
add
add
jnp
add
add
or
or
(bad)
jmp
push
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
push
add
cmp
(bad)
(bad)
inc
add
add
add
mov
mov
mov
add
add
mov
mov
add
(bad)
sbb
sub
add
inc
sbb
add
add
add
add
add
add
or
add
sbb
add
add
add
add
add
add
sub
or
add
add
sub
sbb
add
adc
add
add
add
adc
or
add
sbb
add
add
add
add
sbb
add
or
sub
add
push
or
or
add
es
fld
add
add
and
ret
add
push
sub
add
push
or
sub
sub
add
and
add
sub
add
push
outs
je
add
adc
adc
adc
imul
or
or
add
or
add
or
adc
add
push
adc
add
push
adc
add
add
add
add
add
add
or
add
add
add
outs
outs
add
pusha
add
add
add
add
add
sbb
add
cmp
jnp
add
add
add
add
or
add
xor
add
add
add
add
sub
sub
add
or
push
pop
cmp
add
pop
push
sub
add
cmp
add
add
pop
frstor
jae
add
push
or
lea
add
add
add
adc
add
push
dec
add
clc
add
add
sub
adc
add
adc
or
mov
pop
adc
push
dec
add
sbb
add
adc
add
add
push
cmp
add
add
pop
push
cmp
add
add
add
jo
mov
add
jp
sub
add
or
or
add
or
or
add
or
or
add
adc
or
mov
or
sub
or
or
ds
or
adc
or
or
adc
outs
ins
add
or
adc
push
ds
or
adc
adc
adc
outs
ins
add
or
or
add
or
outs
stos
add
or
lea
add
add
or
adc
add
or
adc
push
adc
adc
lea
add
add
or
add
es
or
add
add
sbb
movups
nop
bound
add
add
jnp
jge
inc
cmp
add
adc
pop
inc
add
add
sub
add
adc
adc
lea
add
add
inc
add
add
sub
add
adc
or
or
add
adc
adc
lea
add
add
adc
adc
add
or
adc
push
adc
adc
adc
adc
add
add
adc
adc
pop
adc
adc
adc
aas
mov
(bad)
call
prefetchnta
add
add
lea
add
add
add
outs
add
or
push
push
lea
add
add
add
outs
add
or
pop
adc
adc
pop
sub
sbb
sbb
sbb
mov
pop
outs
scas
add
or
sbb
sbb
repnz
push
or
add
sbb
pop
add
add
sbb
add
or
adc
sbb
add
add
adc
and
add
outs
add
or
sbb
adc
and
add
outs
add
or
sbb
adc
adc
sub
adc
sbb
mov
pop
outs
scas
add
or
sbb
add
push
or
add
sbb
pop
add
add
sbb
sub
add
fdiv
add
jo
mov
add
jp
outs
ins
add
or
or
pop
fstp
add
add
pop
lea
add
adc
adc
push
push
mov
mov
mov
mov
add
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
adc
adc
pop
or
push
pop
push
adc
mov
adc
mov
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
push
pop
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
pop
sbb
push
pop
push
add
add
push
(bad)
sbb
pop
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
sbb
add
sbb
add
adc
push
add
add
add
add
and
add
add
push
add
cmp
add
add
pop
sub
add
add
sub
or
push
sub
add
add
sub
add
and
add
add
push
add
cmp
add
add
jnp
add
add
inc
xchg
add
push
jae
add
or
add
or
jnp
add
add
or
add
or
jnp
add
add
outs
aaa
add
or
jnp
add
add
fs
sbb
add
or
add
or
jnp
add
add
jnp
add
add
cmp
add
add
add
add
cmp
add
pop
sbb
and
add
or
add
or
jnp
add
add
outs
cmp
jnp
add
add
(bad)
adc
add
ret
add
push
outs
add
or
or
add
dec
add
cmp
add
add
sub
add
add
sub
or
add
cmp
add
add
sub
push
add
add
adc
sub
add
cmp
add
add
jnp
add
add
int
add
sub
add
push
outs
add
or
adc
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
jmp
add
jb
(bad)
jmp
(bad)
(bad)
jp
add
push
add
add
(bad)
(bad)
inc
add
add
or
add
dec
add
cmp
jnp
add
add
outs
aaa
add
or
jnp
add
add
fs
sbb
add
or
add
or
jnp
add
add
cwde
add
add
jnp
add
add
cmp
add
pop
and
add
or
add
or
add
add
pop
cmp
jmp
add
add
add
outs
cmp
add
add
sub
push
(bad)
(bad)
(bad)
cmp
(bad)
inc
jnp
add
add
inc
xchg
add
push
jae
add
or
add
or
jnp
add
add
outs
inc
add
or
jnp
add
add
and
js
and
add
or
jnp
add
add
outs
xor
add
add
add
add
or
or
jnp
add
add
adc
dec
jae
add
or
add
or
jnp
add
add
jle
add
pop
or
or
add
or
sbb
or
or
add
or
and
loopne
add
jae
add
or
xor
add
add
sub
add
add
inc
add
or
lea
add
add
push
push
add
add
add
push
pop
add
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
outs
dec
add
or
or
add
sub
push
(bad)
(bad)
(bad)
cmp
(bad)
inc
jnp
add
add
or
add
or
pop
add
add
push
add
cmp
(bad)
(bad)
jmp
add
add
xor
add
add
and
adc
add
ret
add
push
or
pop
add
add
adc
add
add
cmp
add
add
pop
jae
add
or
or
or
push
jae
add
or
adc
pop
mov
lea
add
add
or
adc
or
adc
mov
or
push
adc
outs
ins
add
or
push
add
add
adc
add
cmp
adc
outs
ins
add
or
bound
add
adc
push
adc
outs
arpl
add
adc
and
add
add
push
adc
add
and
add
sub
add
push
adc
sbb
mov
adc
add
ret
add
push
or
add
add
adc
sub
add
pop
outs
je
add
adc
sub
add
or
add
or
push
and
add
add
push
adc
add
add
add
or
pop
or
push
adc
jae
add
or
add
add
or
pop
outs
ja
add
adc
or
or
or
outs
js
add
cmp
add
and
add
add
push
adc
add
add
add
add
add
(bad)
(bad)
(bad)
fdivr
(bad)
dec
jmp
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
and
add
add
push
adc
(bad)
jmp
xor
add
sub
add
push
or
add
push
adc
(bad)
call
or
or
add
or
and
add
add
push
adc
(bad)
(bad)
cmp
add
add
or
adc
lahf
add
add
adc
or
add
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
mov
adc
mov
adc
mov
adc
pop
or
or
adc
pop
or
adc
push
adc
mov
adc
pop
movups
mov
adc
pop
adc
adc
adc
mov
adc
mov
add
add
push
(bad)
sbb
adc
inc
sbb
add
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
fisttp
add
add
sub
add
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
test
add
jp
add
add
and
add
jle
add
or
and
add
dec
or
add
adc
and
add
add
ret
add
push
sub
fnsave
add
add
add
add
pop
add
add
movs
xor
add
adc
adc
and
add
add
ret
add
push
sub
fisttp
add
add
add
add
inc
add
add
add
add
sub
add
cmp
add
(bad)
add
add
jne
add
add
push
add
add
movs
inc
add
add
add
sub
add
sub
add
push
sub
add
add
add
add
add
sbb
add
add
or
add
cmp
add
add
fstp
add
add
jne
add
add
pop
add
add
movs
add
add
add
add
sub
add
sub
add
push
sub
fnsave
jne
add
add
enter
add
adc
add
add
ret
add
push
sub
and
add
add
push
or
add
fnstsw
add
add
add
add
inc
(bad)
(bad)
inc
movs
add
adc
and
add
add
ret
add
push
sub
and
add
add
xchg
add
add
add
sub
add
sub
add
push
sub
and
add
add
push
or
add
add
adc
adc
and
add
add
ret
add
push
sub
and
add
add
adc
dec
add
add
fld
add
add
jne
add
add
mov
add
add
dec
or
add
fucom
add
add
jne
add
add
(bad)
(bad)
(bad)
inc
movs
xor
add
adc
cmp
(bad)
(bad)
jmp
add
add
dec
or
add
add
add
add
add
(bad)
jmp
(bad)
inc
(bad)
(bad)
(bad)
cld
std
(bad)
(bad)
cld
std
(bad)
inc
(bad)
(bad)
(bad)
cmp
(bad)
inc
add
add
push
add
add
push
or
(bad)
inc
movs
sub
add
adc
adc
sub
or
or
sub
add
sub
add
push
sub
push
add
add
jne
add
add
add
add
movs
push
add
add
or
or
mov
or
or
sub
add
sub
add
push
sub
and
add
add
push
or
(bad)
(bad)
fst
add
add
push
add
add
fld
add
add
add
or
push
sub
add
call
add
add
add
add
sbb
push
add
add
add
add
and
add
dec
push
add
inc
add
add
and
add
add
ret
add
push
outs
dec
add
or
je
add
and
add
add
push
push
add
and
add
adc
and
add
add
adc
add
cmp
adc
cmp
(bad)
(bad)
jmp
add
add
dec
push
add
or
add
add
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
dec
(bad)
(bad)
push
add
add
add
add
dec
push
add
int
(bad)
jmp
add
add
sub
add
push
adc
add
sub
adc
and
push
push
add
stos
(bad)
(bad)
push
add
or
jae
add
or
pop
add
add
or
outs
mov
outs
mov
xor
adc
outs
mov
adc
pop
and
and
add
push
outs
rol
or
adc
and
adc
and
add
jae
add
or
adc
outs
rol
or
add
add
or
adc
sub
add
or
add
or
adc
imul
xor
pop
adc
adc
and
add
add
ret
add
add
adc
adc
push
outs
mov
adc
push
pop
adc
and
add
push
outs
mov
adc
pop
push
pop
adc
and
add
pop
adc
push
outs
rol
or
or
add
cmp
or
or
ret
or
add
or
adc
push
adc
mov
mov
add
add
sub
push
add
add
dec
add
add
adc
push
adc
mov
mov
push
add
add
push
or
add
pop
adc
push
outs
rol
or
or
push
outs
rol
or
outs
rol
or
or
sbb
add
or
(bad)
(bad)
(bad)
jmp
add
add
dec
or
add
add
add
(bad)
jmp
(bad)
call
(bad)
call
(bad)
jmp
add
and
add
dec
or
(bad)
dec
adc
push
adc
mov
mov
sbb
add
and
add
sub
add
push
adc
add
adc
fld
add
add
push
outs
ret
add
or
jae
add
or
mov
mov
outs
les
add
or
add
or
or
push
add
add
or
das
push
add
sub
add
push
adc
outs
fadd
add
sub
add
adc
add
adc
push
cmp
add
add
outs
lds
add
pop
cmp
add
add
outs
mov
or
cmp
add
add
outs
ins
add
or
cmp
add
add
outs
ins
add
or
adc
add
add
add
add
add
xor
add
pop
add
add
add
sbb
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
jge
add
add
add
add
add
inc
push
add
sub
add
push
outs
dec
add
or
and
add
add
push
push
add
sub
add
push
outs
or
add
cmp
add
add
push
add
sub
add
push
sub
sub
add
jge
add
add
add
add
add
add
dec
add
or
add
push
sub
sbb
add
add
adc
add
add
cmp
add
add
sub
sbb
lea
add
cmp
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
or
add
retf
add
add
add
add
cmp
(bad)
(bad)
inc
cmp
pop
jle
add
add
cld
add
push
and
add
dec
add
(bad)
inc
mov
push
or
adc
add
jle
add
add
cld
add
push
push
adc
push
and
ret
add
push
sub
add
push
or
push
add
add
push
add
(bad)
inc
jnp
add
add
or
add
or
jnp
add
add
cmp
add
pop
or
jae
add
push
or
add
push
jae
add
push
or
mov
pop
add
add
push
add
(bad)
jmp
mov
add
sub
add
push
jae
add
push
or
add
adc
add
cmp
(bad)
(bad)
jmp
or
add
add
adc
add
adc
add
add
add
sbb
add
sbb
add
sbb
add
push
add
and
add
sub
add
push
or
or
add
push
sub
add
(bad)
sbb
add
add
adc
add
add
add
adc
or
add
sbb
or
repz
add
add
sub
add
or
adc
adc
and
ret
add
push
sub
add
push
sub
add
or
or
add
ret
add
push
sub
add
push
sub
add
or
adc
and
add
sub
add
push
and
ret
add
push
sub
add
push
sub
add
or
inc
or
add
ret
add
push
sub
add
push
and
add
sub
add
push
sub
add
or
adc
sub
add
or
sbb
push
push
or
or
xor
add
sub
add
push
sub
add
push
and
add
sub
add
push
and
or
add
ret
add
push
sub
add
push
sub
add
or
sub
add
cmp
adc
pop
or
or
or
add
fucomp
add
add
cmp
add
pop
or
push
pop
or
in
add
sub
add
push
sub
add
sub
or
push
adc
sub
add
or
and
push
add
sub
add
push
sub
add
sub
add
or
movs
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
jmp
jmp
(bad)
jmp
(bad)
inc
(bad)
(bad)
jmp
add
add
push
adc
add
add
add
add
and
sbb
add
adc
add
add
inc
pop
adc
(bad)
adc
add
sub
add
or
ret
(bad)
(bad)
jmp
xor
or
or
add
add
clc
add
or
and
pop
or
mov
add
add
add
add
add
add
push
mov
mov
add
(bad)
sbb
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
int
add
int
add
and
add
add
xor
add
add
push
or
or
add
add
pop
cmp
add
es
add
add
add
imul
and
add
sub
xor
add
es
(bad)
(bad)
inc
add
add
add
xchg
add
add
add
xchg
pop
pop
or
pop
pop
or
sar
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
call
add
and
add
add
adc
fdivr
(bad)
(bad)
cmp
(bad)
(bad)
inc
or
adc
add
push
mov
mov
sub
add
push
(bad)
sbb
sub
add
add
add
add
xchg
xchg
add
add
add
xor
add
add
add
add
push
or
jo
add
or
push
add
add
add
add
cmp
add
ja
add
add
or
add
or
add
cmp
add
es
ja
add
cmc
add
push
push
ds
add
add
jo
add
or
(bad)
(bad)
jmp
push
add
add
push
add
cmp
add
fstp
sub
add
cmp
add
add
dec
add
cmp
add
add
pop
adc
push
pop
pop
or
add
inc
or
(bad)
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
push
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
or
and
add
push
mov
mov
add
mov
mov
lods
add
push
(bad)
sbb
sub
add
add
add
add
(bad)
add
sbb
add
sbb
add
enter
jle
add
jle
add
or
mov
xchg
add
or
and
add
add
push
add
cmp
add
push
outs
enter
and
push
add
cmp
add
jle
add
or
mov
xchg
add
or
push
cmp
add
add
fnsave
add
push
and
add
add
ret
add
push
adc
cwde
add
or
add
or
mov
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
cmp
add
add
dec
add
cmp
or
or
add
es
fld
add
add
sub
adc
add
add
add
add
add
xor
add
add
add
add
add
add
and
add
add
add
add
mov
add
add
add
add
jns
add
push
add
add
push
pop
add
or
add
push
adc
and
add
add
push
pop
add
sti
add
add
add
add
add
jg
add
jge
add
add
sbb
add
sub
add
push
adc
fstp
add
add
adc
and
push
pop
add
lds
add
ffree
add
add
jnp
add
add
sub
pop
pop
cmp
add
add
pop
jge
add
add
pop
arpl
add
add
add
add
add
(bad)
(bad)
(bad)
fild
add
cmp
add
add
jnp
add
add
bound
add
and
add
add
ja
add
push
adc
fnsave
add
add
add
add
adc
mov
add
add
jge
add
add
jnp
add
add
jnp
add
add
jnp
add
add
scas
add
push
or
and
add
pop
jge
add
add
jnp
add
add
sldt
add
sbb
add
add
adc
fstp
jnp
add
add
rol
add
push
inc
adc
fisttp
add
add
jnp
add
add
jnp
add
add
outs
add
push
cmp
add
add
adc
fucomp
add
add
add
add
add
jmp
jns
add
add
push
pop
add
lds
add
add
add
add
jp
add
sbb
add
adc
add
add
add
push
jge
add
add
sbb
jo
add
adc
fstp
add
add
add
adc
rol
push
and
add
add
or
add
dec
pop
add
jo
add
push
push
cmp
(bad)
(bad)
call
adc
and
add
add
pusha
add
add
add
add
push
adc
fst
add
add
add
add
adc
mov
add
add
jge
add
add
jnp
add
add
adc
rol
push
or
push
cmp
(bad)
(bad)
jmp
or
add
dec
pop
add
adc
sbb
add
add
(bad)
(bad)
jmp
add
add
dec
pop
add
or
add
add
add
add
add
(bad)
(bad)
(bad)
cli
std
(bad)
inc
std
(bad)
(bad)
cli
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
cli
std
(bad)
dec
push
add
add
(bad)
dec
add
add
sub
add
cmp
mov
add
add
add
add
sub
add
push
or
add
add
dec
pop
add
(bad)
(bad)
(bad)
dec
sbb
or
add
add
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
call
(bad)
(bad)
js
(bad)
(bad)
js
(bad)
(bad)
js
(bad)
(bad)
js
(bad)
jmp
add
add
add
add
jnp
add
add
mov
pop
or
jo
add
or
add
dec
pop
add
xor
add
add
adc
(bad)
add
add
mov
mov
mov
mov
add
add
add
add
sub
sbb
push
sub
add
adc
add
adc
add
add
add
add
sbb
add
adc
add
adc
or
add
or
or
add
es
fld
add
add
sub
add
add
add
add
add
or
add
or
add
xor
jnp
add
add
popa
add
push
sub
add
sbb
add
and
add
add
add
push
or
push
add
add
and
push
add
sub
add
push
sub
add
push
or
add
add
push
sub
add
add
add
add
or
add
sbb
add
sbb
or
cmp
add
inc
add
adc
jnp
add
add
and
add
add
push
add
cmp
jnp
add
add
or
jnp
add
add
add
push
add
add
jnp
add
add
jnp
add
add
add
(bad)
jg
add
add
and
add
dec
add
cmp
add
add
add
add
add
add
add
or
pop
adc
push
adc
add
add
add
add
add
sub
add
and
push
add
cmp
add
add
add
pop
jge
add
add
jnp
add
add
cmp
add
add
push
add
add
push
add
cmp
add
add
push
pop
or
push
ds
(bad)
(bad)
(bad)
cmp
add
add
push
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
call
add
add
add
add
push
cmp
(bad)
(bad)
jmp
jae
add
or
or
add
mov
mov
mov
add
add
add
mov
add
(bad)
sbb
sub
add
sgdtd
add
add
add
add
add
add
or
add
sbb
add
add
add
add
jge
add
add
push
jge
add
add
or
add
add
jb
add
(bad)
sbb
add
add
add
add
adc
add
sbb
add
sbb
add
and
add
sub
add
add
add
add
add
add
add
inc
or
or
add
add
jb
add
(bad)
sbb
sub
adc
add
add
add
push
add
sbb
add
sbb
add
and
add
add
add
add
mov
sub
adc
or
or
add
add
jb
add
(bad)
sbb
sub
adc
add
add
add
push
add
sbb
add
sbb
pop
add
add
add
adc
add
or
add
or
add
outs
xor
or
add
push
add
outs
add
or
fisttp
cmp
add
add
outs
sub
add
fadd
or
adc
add
push
pop
add
add
add
add
sub
sbb
sub
add
sbb
add
add
add
daa
add
add
add
cmp
add
sbb
add
sbb
add
sbb
add
push
add
and
add
sub
add
push
or
or
add
push
sub
add
(bad)
sbb
add
add
adc
add
add
add
adc
or
add
sbb
add
add
add
adc
rol
add
or
sub
add
add
push
ins
and
cdq
icebp
aas
pop
sub
add
or
fisttp
fld
add
add
add
add
push
sub
sub
add
sbb
add
add
add
das
add
sbb
add
add
add
(bad)
verw
sbb
add
sbb
add
add
sub
and
add
add
aaa
add
add
or
pop
add
add
push
add
add
or
add
add
dec
add
cmp
add
add
mov
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
or
sldt
add
pop
mov
add
add
sub
add
push
(bad)
sbb
sub
adc
add
add
add
add
sbb
add
adc
add
add
add
adc
add
adc
add
cmp
sub
add
add
add
outs
pop
add
push
cmp
add
add
sub
add
add
push
outs
pop
add
push
and
add
add
push
add
cmp
add
add
add
add
(bad)
(bad)
jmp
add
add
dec
add
cmp
add
add
cmp
(bad)
(bad)
jmp
add
add
pop
cmp
add
es
add
add
fld
add
sub
add
push
sub
add
cmp
xchg
(bad)
jmp
add
push
add
dec
add
add
add
(bad)
call
(bad)
call
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
xor
add
add
adc
add
and
add
jge
add
add
push
add
add
mov
sub
sbb
add
add
add
add
adc
add
add
xor
add
add
add
add
adc
add
add
ds
add
and
add
add
push
add
cmp
add
and
add
adc
add
add
add
add
jbe
add
and
cmp
add
jae
add
or
and
add
ds
(bad)
(bad)
jmp
add
add
dec
add
cmp
add
add
add
add
adc
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
sub
aam
(bad)
jmp
add
and
jg
add
add
add
add
add
add
movs
add
push
(bad)
sbb
add
adc
add
add
add
add
add
pop
sub
or
sub
sbb
pop
add
add
add
add
add
sbb
add
cmp
add
add
and
add
sub
add
push
add
add
add
add
add
sbb
add
outs
retf
add
or
add
add
pop
cmp
add
add
push
or
rol
add
stos
pop
add
sub
add
push
pop
mov
and
add
or
jnp
add
add
call
add
add
sub
add
push
cmp
add
adc
or
add
sub
add
or
add
or
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
(bad)
(bad)
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
cmp
or
jnp
add
add
call
xlat
pop
add
sub
add
push
add
add
add
call
pop
add
add
sbb
add
outs
retf
add
or
push
add
add
fld
add
add
pop
pop
or
push
aas
cmp
(bad)
jmp
pop
add
add
push
add
cmp
add
add
and
add
sub
add
push
add
add
add
add
add
sbb
add
outs
retf
add
or
jnp
add
add
push
add
add
inc
add
add
add
add
dec
add
dec
add
add
add
add
mov
(bad)
inc
add
push
add
add
(bad)
(bad)
(bad)
mov
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
imul
push
or
and
add
sub
add
push
push
mov
add
sbb
add
outs
retf
add
or
push
add
add
xchg
(bad)
(bad)
inc
and
push
add
sub
add
push
add
add
add
add
add
sbb
add
outs
retf
add
or
add
push
add
cmp
(bad)
jmp
add
add
add
pop
add
add
add
xor
add
add
inc
add
adc
add
add
sub
add
push
cmp
push
or
add
push
add
cmp
add
add
and
push
add
sub
add
push
outs
int3
add
or
add
add
add
and
add
sub
add
push
outs
int3
add
or
add
add
push
add
add
push
add
cmp
add
add
and
add
sub
add
push
outs
int3
add
or
add
add
and
add
sub
add
push
outs
int3
add
or
add
lea
add
jge
add
add
jle
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
pop
(bad)
(bad)
dec
dec
call
add
add
add
add
add
add
add
add
push
cmp
(bad)
(bad)
jmp
add
sbb
add
and
add
add
cmp
cmp
add
add
add
add
add
stos
pop
add
sub
add
push
pop
mov
and
add
rol
add
add
sbb
add
outs
int
add
mov
add
add
add
add
and
pop
add
sub
add
push
mov
add
pop
pop
or
push
aas
stos
(bad)
(bad)
jmp
pop
add
add
push
add
cmp
(bad)
jmp
add
adc
add
add
add
sbb
sbb
add
adc
add
popf
add
add
add
adc
add
add
sub
add
push
cmp
add
add
sbb
add
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
xor
add
add
add
and
cmp
(bad)
(bad)
jmp
add
and
add
add
push
add
cmp
sub
add
and
add
dec
add
cmp
add
add
add
push
add
adc
add
add
add
cmp
add
add
pop
sub
or
sub
push
add
sbb
add
sub
add
sbb
add
sub
add
sub
add
or
sub
add
push
sub
cmp
add
iret
add
or
sub
add
push
sub
cmp
add
rol
add
add
mov
adc
add
jp
add
add
add
and
add
add
push
add
cmp
add
add
sub
add
or
add
add
dec
add
cmp
sbb
push
add
or
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
jmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
push
sub
add
or
add
cmp
(bad)
(bad)
jmp
sub
add
pop
sub
or
sub
push
add
dec
add
or
cmp
add
add
or
outs
inc
add
sub
add
pop
add
add
add
add
add
add
add
add
mov
add
add
add
sub
add
or
jnp
add
add
rol
add
add
cmp
add
and
add
add
add
sub
add
or
sub
add
or
jnp
add
add
rol
add
pop
outs
push
add
or
add
iret
add
or
add
add
xor
test
add
add
add
and
add
add
cmp
add
add
add
cmp
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
inc
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
aad
add
add
add
or
add
or
add
push
add
cmp
add
add
add
add
add
pop
cmp
sub
add
adc
or
jle
add
add
add
and
add
add
push
add
cmp
add
add
jnp
add
add
jnp
add
add
dec
add
or
cmp
add
dec
add
or
and
sub
add
and
sbb
add
ret
add
push
add
add
add
aad
add
sub
add
push
sub
add
or
add
or
add
add
add
dec
add
or
add
or
pop
add
add
push
add
cmp
add
add
add
add
mov
add
add
add
or
jnp
add
add
push
and
add
add
add
sub
add
or
add
add
sbb
add
sub
add
or
add
or
push
pop
adc
adc
add
or
outs
fadd
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
inc
(bad)
(bad)
jmp
push
add
add
mov
add
(bad)
add
or
add
xor
add
cmp
add
fld
add
cmp
add
add
sbb
add
sub
add
push
sub
adc
add
pop
jge
add
add
jnp
add
add
mov
add
add
sub
add
push
cmp
(bad)
jmp
sub
add
xor
and
add
adc
add
add
pop
cmp
add
add
or
add
add
add
add
dec
add
cmp
add
jae
add
or
add
add
push
add
add
push
add
cmp
add
add
sub
add
or
pop
add
add
push
add
cmp
add
add
pop
jge
add
add
jle
add
or
add
add
and
add
add
and
add
add
inc
add
add
add
add
dec
add
dec
add
add
add
(bad)
push
(bad)
call
(bad)
dec
(bad)
dec
add
add
add
add
add
push
add
cmp
(bad)
(bad)
inc
sub
add
or
jnp
add
add
cli
add
add
add
or
jnp
add
add
inc
das
add
push
jae
add
or
add
or
jnp
add
add
outs
push
add
or
sub
add
add
add
add
fild
add
add
adc
add
pop
sub
add
or
add
add
dec
add
cmp
(bad)
jmp
add
add
sub
add
add
sbb
add
sub
add
push
add
pusha
add
or
add
or
add
adc
add
lods
add
add
add
adc
add
push
add
cmp
add
add
xor
add
and
add
add
push
add
cmp
add
add
add
add
xor
add
add
add
add
loop
add
and
add
add
xor
add
cmp
add
sub
add
or
push
add
add
xor
add
cmp
add
add
add
add
add
jecxz
add
cmp
(bad)
(bad)
jmp
add
push
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
pop
add
jnp
add
add
inc
jge
add
add
outs
inc
add
sub
or
sub
or
sub
push
add
add
add
adc
add
out
add
add
add
inc
add
push
cmp
cwde
add
add
jnp
add
add
cmp
add
add
add
add
dec
add
cmp
add
add
jge
add
add
jnp
add
add
push
pop
pop
inc
add
add
add
add
add
inc
add
add
and
sbb
add
ret
add
push
sub
sbb
add
add
dec
add
cmp
add
cmp
add
add
sbb
add
sub
add
push
sub
sbb
inc
add
add
adc
sbb
cmp
add
and
push
add
dec
add
add
add
(bad)
jmp
(bad)
jmp
(bad)
(bad)
dec
add
inc
(bad)
(bad)
jmp
add
add
add
add
pop
cmp
(bad)
(bad)
jmp
add
add
or
push
add
add
push
add
cmp
add
xor
jnp
add
add
dec
add
or
add
add
add
add
add
outs
add
or
add
push
add
add
add
cmp
add
add
add
outs
inc
add
sub
adc
add
lock
add
add
adc
push
add
add
aas
add
push
cmp
add
add
add
add
add
in
add
add
add
add
add
imul
sbb
add
loop
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
cmp
add
add
add
cmp
adc
sbb
add
jnp
add
add
and
add
add
add
add
loop
add
add
and
add
add
push
add
cmp
add
loope
add
and
add
add
push
add
cmp
(bad)
inc
jnp
add
add
inc
(bad)
(bad)
jmp
add
add
dec
add
cmp
(bad)
jmp
add
or
add
add
add
add
jnp
add
add
add
push
inc
add
add
add
sub
add
or
add
jo
add
add
add
sub
add
or
sub
add
or
add
mov
jnp
add
add
sub
add
or
sub
add
or
add
nop
inc
add
add
add
sub
add
or
push
add
or
add
iret
add
or
add
add
xor
xchg
add
add
add
and
add
add
push
add
cmp
add
add
add
add
add
add
add
pop
cmp
add
add
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
aad
add
add
add
or
add
or
add
push
add
cmp
add
xor
add
add
add
push
add
add
sti
add
add
jnp
add
add
and
outs
xlat
add
or
jnp
add
add
add
in
add
and
add
add
add
add
sub
add
or
add
out
add
and
add
add
add
add
sub
add
or
add
add
pop
add
add
sub
add
or
add
add
and
add
sub
add
or
add
or
push
pop
adc
adc
add
or
outs
fadd
add
and
add
add
inc
add
push
cmp
add
cmp
add
add
add
or
jnp
add
add
push
push
pop
and
and
add
or
outs
fadd
add
sub
jnp
add
add
jno
add
add
add
or
jnp
add
add
outs
out
add
and
add
add
push
or
cmp
add
add
add
(bad)
add
or
add
add
dec
or
cmp
add
add
outs
xlat
add
or
call
add
jmp
adc
sub
add
or
pop
add
jmp
adc
sub
add
or
sub
add
or
add
or
pop
outs
jmp
add
and
push
or
cmp
outs
xlat
add
or
in
add
or
add
jmp
add
add
das
add
or
pop
add
jmp
add
add
or
sub
add
or
push
adc
sub
add
or
pop
outs
jmp
add
adc
add
jmp
pop
adc
sub
add
or
add
inc
inc
add
add
add
sub
add
or
add
xor
jnp
add
add
sub
add
or
add
add
jnp
add
add
sub
add
or
add
add
jnp
add
add
sub
add
or
xchg
add
or
jnp
add
add
retf
(bad)
(bad)
(bad)
cmp
push
add
add
push
or
dec
add
add
add
(bad)
call
(bad)
(bad)
jmp
std
(bad)
push
(bad)
jmp
std
(bad)
jmp
(bad)
(bad)
(bad)
mov
add
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
sub
or
add
sub
add
add
add
add
add
add
outs
mov
add
pop
jae
add
or
add
or
add
in
add
or
push
add
add
fld
add
add
add
add
add
add
add
and
add
or
add
sbb
add
cmp
add
add
add
and
add
add
fadd
add
add
or
add
jge
add
add
add
add
sub
add
cmp
add
add
mov
and
add
add
and
add
add
sub
add
or
jnp
add
add
outs
push
add
or
jnp
add
add
outs
mov
add
pop
jae
add
or
add
or
push
add
add
fld
add
add
sub
add
add
add
add
fild
add
add
out
add
or
add
or
push
sub
add
or
pop
outs
inc
add
or
pop
cmp
bound
add
and
aaa
add
add
jae
add
or
add
add
push
add
add
push
add
cmp
add
add
and
sub
add
sub
add
or
xor
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
jmp
(bad)
dec
add
add
(bad)
(bad)
jmp
add
add
dec
add
cmp
(bad)
(bad)
inc
jle
add
or
add
or
pop
add
add
inc
add
push
cmp
scas
(bad)
(bad)
jmp
add
add
adc
add
add
sub
push
or
add
dec
add
cmp
jnp
add
add
outs
add
or
or
sub
or
sub
(bad)
add
add
loopne
add
add
add
sub
add
or
add
add
jnp
add
add
sub
add
or
add
or
cmp
add
add
sub
add
or
add
adc
add
xchg
add
add
add
and
add
dec
add
cmp
add
add
add
aad
add
add
add
or
add
or
add
inc
add
push
cmp
add
add
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
retf
dec
(bad)
(bad)
jmp
add
add
add
add
add
add
push
cmp
(bad)
(bad)
jmp
add
jge
add
add
add
add
pop
cmp
(bad)
(bad)
jmp
sub
adc
add
mov
add
add
add
and
add
dec
add
cmp
add
add
jnp
add
add
jecxz
add
cmp
add
and
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
cmp
add
push
add
add
add
and
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
or
add
add
add
add
jecxz
add
add
sub
add
or
push
add
add
push
add
cmp
cmp
(bad)
(bad)
jmp
add
add
dec
add
cmp
jnp
add
add
mov
(bad)
jmp
add
add
dec
add
cmp
(bad)
jmp
add
xor
add
add
add
add
and
sbb
add
ret
add
push
sub
add
or
fld
add
add
fld
add
add
add
add
add
add
adc
add
add
xor
add
add
and
inc
add
push
cmp
add
cmp
add
add
jnp
add
add
pop
or
add
or
add
or
jnp
add
add
ds
sbb
add
or
add
or
jnp
add
add
or
add
sub
add
push
outs
add
or
jnp
add
add
sbb
add
sub
add
push
sub
icebp
add
or
jnp
add
add
dec
push
jae
add
or
add
or
or
add
dec
add
cmp
inc
add
or
lea
add
add
push
push
add
add
add
push
pop
add
add
add
push
outs
dec
add
or
jnp
add
add
and
add
sub
add
push
outs
repnz
or
jnp
add
add
jnp
add
add
and
add
sub
add
push
outs
repnz
or
jnp
add
add
jnp
add
add
and
add
sub
add
push
outs
repnz
or
pop
sub
or
add
dec
add
cmp
add
add
jnp
add
add
and
and
add
or
add
or
jnp
add
add
outs
repz
or
in
add
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
inc
add
add
add
add
dec
add
cmp
jae
add
or
add
add
jae
add
or
add
add
and
add
add
add
add
sub
add
cmp
add
add
add
inc
inc
add
push
jae
add
or
add
or
add
push
inc
add
push
jae
add
or
inc
add
or
sub
add
or
add
or
push
sub
add
or
pop
jo
and
add
or
cmp
add
and
add
add
push
add
cmp
(bad)
inc
jae
add
or
add
add
add
add
pop
cmp
(bad)
(bad)
jmp
add
add
add
inc
inc
add
push
jae
add
or
add
or
add
add
sub
add
cmp
(bad)
(bad)
jmp
add
add
cmp
sub
add
sub
add
or
sub
jnp
add
add
outs
push
add
or
or
add
dec
add
cmp
(bad)
(bad)
jmp
add
pop
sub
or
sub
adc
add
mov
add
add
add
and
add
dec
add
cmp
add
add
sub
add
or
add
add
dec
add
cmp
sub
add
or
sub
add
dec
add
push
cmp
add
add
add
fld
add
cmp
aam
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
(bad)
add
add
jp
add
add
add
sub
add
or
add
sub
jnp
add
add
sub
add
or
add
or
cmp
add
add
sub
add
or
add
adc
add
mov
add
add
add
and
add
add
push
add
cmp
add
add
jge
add
add
add
add
dec
add
cmp
add
add
add
aad
add
add
add
or
add
or
add
push
add
cmp
add
das
add
add
sar
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
add
xor
add
add
adc
add
add
sub
add
cmp
add
add
add
add
sbb
add
and
push
add
push
cmp
add
add
add
add
add
loop
add
add
add
add
jecxz
add
cmp
add
add
add
dec
add
dec
add
add
add
add
add
add
pushf
(bad)
(bad)
call
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
cmp
add
add
add
add
dec
add
cmp
add
loope
add
and
add
add
dec
add
push
cmp
sub
add
xor
add
add
adc
add
add
dec
add
cmp
add
add
add
(bad)
add
or
add
add
sub
add
cmp
add
add
add
add
add
push
cmp
add
and
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
push
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
sbb
add
add
add
or
add
cmp
jnp
add
add
sub
add
or
and
add
add
add
sub
add
or
add
or
jnp
add
add
sub
add
or
add
or
add
or
outs
xlat
add
or
jnp
add
add
jnp
add
add
pop
imul
add
add
sub
add
or
add
add
das
add
add
sub
add
or
add
and
jnp
add
add
sub
add
or
add
inc
inc
add
add
add
sub
add
or
add
or
push
pop
sub
or
outs
sti
add
or
push
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
out
(bad)
inc
outs
xlat
add
or
jnp
add
add
push
and
add
add
add
add
sub
add
or
add
sub
jnp
add
add
sub
add
or
add
or
push
and
add
add
sub
add
or
outs
fadd
add
and
dec
add
push
cmp
sub
add
adc
add
mov
add
add
add
and
add
add
push
add
cmp
add
add
jnp
add
add
mov
add
inc
add
add
xor
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
push
jge
add
add
outs
inc
add
and
ret
inc
and
add
or
sub
add
add
add
dec
add
cmp
adc
add
sub
add
add
add
and
push
add
push
cmp
add
add
sub
add
or
and
sub
add
sub
add
or
pop
add
add
dec
add
add
and
add
sub
add
push
sub
sub
add
jae
add
or
add
add
and
add
add
and
add
add
jne
add
and
push
add
dec
add
add
add
add
add
(bad)
(bad)
push
(bad)
jmp
add
add
push
add
add
push
add
cmp
(bad)
(bad)
inc
and
add
sub
add
push
sub
sub
add
add
add
cmp
pop
arpl
add
add
add
add
dec
add
cmp
fadd
add
add
add
add
push
outs
fld
add
add
add
add
inc
dec
add
push
jae
add
or
add
or
and
add
add
sub
add
or
cmp
add
and
add
add
push
add
cmp
(bad)
jmp
or
sub
or
sub
adc
add
mov
add
adc
add
add
dec
add
cmp
add
push
or
add
add
cmp
add
push
pop
inc
in
(bad)
(bad)
jmp
push
add
add
arpl
add
cmp
add
add
add
add
and
add
add
push
add
cmp
add
add
add
jb
add
je
add
add
jl
add
add
pop
sub
add
sub
cmp
add
add
push
add
dec
add
add
add
(bad)
(bad)
jp
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
dec
add
add
add
push
add
cmp
(bad)
(bad)
jmp
add
xor
test
add
adc
add
cmp
add
add
add
pop
sub
add
sub
push
pop
inc
or
add
and
add
add
cmp
add
es
or
add
add
dec
add
cmp
add
add
jnp
add
add
and
add
sub
push
cmp
add
cmp
add
add
add
jae
add
je
add
add
mov
add
push
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
sub
add
adc
add
movs
add
add
add
and
add
add
push
add
cmp
add
add
add
pop
sub
add
or
push
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
and
push
add
cmp
pop
inc
push
add
add
push
add
add
push
add
cmp
or
add
jb
add
je
add
add
add
add
dec
add
cmp
add
add
xor
movs
add
add
add
and
add
add
push
add
cmp
add
add
add
jae
add
je
add
add
popa
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
call
add
and
add
cmp
(bad)
(bad)
inc
or
add
add
push
cmp
(bad)
(bad)
(bad)
cmp
jnp
add
add
and
add
add
cmp
add
add
pop
sub
add
or
pop
inc
ret
jmp
push
add
add
push
add
cmp
add
add
xor
add
add
xchg
add
and
add
add
cmp
add
add
push
outs
out
add
sar
add
sub
add
or
add
add
pop
sub
add
or
add
xor
add
add
add
dec
add
cmp
add
add
add
add
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
iret
(bad)
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
ffree
add
add
push
add
add
fld
add
add
pop
pop
or
pop
mov
inc
add
add
pop
add
add
push
add
add
outs
out
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
cmp
add
add
or
add
outs
std
add
or
push
or
add
add
dec
add
cmp
mov
(bad)
inc
or
(bad)
(bad)
(bad)
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
(bad)
out
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
and
push
add
cmp
(bad)
(bad)
(bad)
jle
add
add
or
add
and
add
add
cmp
jle
add
add
add
add
add
and
xchg
push
or
add
sbb
add
add
outs
inc
add
or
add
add
dec
add
cmp
jae
add
or
outs
pop
add
and
add
sub
add
push
sub
add
cmp
add
add
add
add
dec
add
cmp
and
ret
add
push
outs
rol
add
push
outs
aam
add
je
add
add
push
jne
add
add
cwde
add
add
add
add
fld
add
sub
add
push
sub
add
cmp
add
add
jne
add
add
pop
add
push
cmp
add
and
cmp
pop
outs
mov
je
add
sub
add
push
sub
add
cmp
test
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
call
add
and
add
sub
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
fst
add
add
pop
push
sub
add
fld
add
add
fld
add
add
inc
sbb
add
add
add
add
add
add
add
add
sbb
add
add
add
adc
inc
add
jne
add
add
sldt
add
add
add
cmp
add
(bad)
outs
inc
add
jne
add
add
xchg
add
add
add
add
sub
add
cmp
add
es
add
add
fld
add
sub
add
push
sub
add
cmp
(bad)
(bad)
inc
add
inc
add
jne
add
add
pop
add
push
cmp
cmps
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
inc
add
je
add
add
add
add
push
inc
push
sub
add
fld
add
add
fld
add
add
add
add
add
add
add
mov
add
sbb
add
or
add
xor
add
add
adc
add
add
cmp
add
push
sub
jnp
add
add
lea
add
sub
add
or
push
add
add
push
add
cmp
add
add
add
push
or
add
add
pop
cmp
add
add
add
outs
push
add
push
and
add
sub
push
cmp
add
add
sbb
jnp
add
add
test
mov
add
add
dec
add
dec
add
add
add
(bad)
call
(bad)
inc
(bad)
(bad)
push
dec
add
add
add
push
add
cmp
(bad)
(bad)
call
sub
add
xor
inc
add
mov
add
and
add
add
push
or
cmp
add
push
outs
pop
add
and
add
sub
add
push
sub
add
cmp
add
add
outs
mov
je
add
sub
add
push
sub
add
cmp
and
ret
add
push
outs
rol
add
add
add
or
add
adc
pop
or
cmp
add
add
add
add
dec
or
cmp
add
add
jne
add
add
add
add
sub
outs
pop
add
push
add
jnp
add
add
adc
add
or
add
push
pusha
add
push
jae
add
push
outs
inc
add
or
inc
pop
add
push
jae
add
or
add
push
or
inc
pop
add
push
jae
add
push
outs
sbb
add
or
jae
add
push
or
push
cmp
add
add
pop
jge
add
add
cmp
add
add
push
jge
add
add
push
jge
add
add
push
add
add
add
add
add
push
add
add
push
jge
add
add
pop
jge
add
add
or
add
push
or
add
add
inc
or
sbb
add
fst
add
adc
adc
xor
add
outs
push
add
push
fld
add
add
cmp
push
add
add
push
add
add
push
or
dec
add
add
add
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
call
add
add
add
add
add
and
add
add
sar
(bad)
inc
outs
jae
add
or
add
add
dec
or
cmp
add
or
push
and
add
add
jp
add
adc
add
ret
add
push
outs
xchg
add
or
sbb
add
sub
add
push
outs
add
add
outs
add
add
adc
outs
add
add
adc
and
add
dec
or
cmp
add
add
push
and
ret
add
push
outs
or
add
cmp
add
adc
and
sbb
add
ret
add
push
outs
dec
add
or
pop
add
add
xchg
(bad)
(bad)
jmp
add
add
dec
or
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
call
pop
outs
mov
add
and
sbb
add
ret
add
push
push
lea
add
add
add
or
pop
adc
add
add
fld
add
add
fld
add
add
or
pop
adc
adc
adc
mov
and
add
and
add
add
push
or
cmp
push
add
or
add
or
or
adc
cmp
(bad)
(bad)
call
or
or
add
add
push
or
cmp
push
inc
inc
loopne
push
add
or
add
add
fstp
add
add
and
inc
loopne
pop
add
or
push
add
add
fld
add
add
add
add
sub
add
inc
add
add
add
pusha
add
add
add
adc
add
add
add
push
or
add
add
jecxz
pslld
push
or
add
add
into
add
add
or
add
and
add
push
add
push
sub
add
adc
add
jnp
add
push
add
adc
add
add
pop
cmp
add
add
add
add
and
add
dec
add
cmp
add
add
add
push
add
or
add
push
add
cmp
add
push
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
xor
jge
add
cmp
add
and
add
add
push
add
cmp
add
add
jnp
add
add
and
add
dec
add
cmp
add
push
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
jmp
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
push
add
push
and
push
add
cmp
add
add
add
sbb
add
sub
add
ret
add
push
sub
add
or
and
add
add
ret
add
push
xor
add
add
add
pop
sub
or
sub
adc
add
cdq
add
add
add
adc
add
add
dec
add
cmp
add
add
xor
add
or
add
and
cmp
add
add
jle
add
add
add
add
add
cmp
add
sub
add
push
sub
add
sub
add
or
(bad)
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
and
add
add
push
aam
(bad)
jmp
add
or
add
and
add
add
push
add
cmp
add
add
xor
add
add
inc
add
adc
and
add
sub
add
push
pop
lea
add
or
push
add
add
push
call
adc
add
test
add
mov
add
and
add
add
cmp
add
add
pop
cmp
add
pop
outs
or
outs
push
add
or
add
sbb
add
push
jne
add
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
retf
dec
add
retf
jmp
add
add
add
add
push
cmp
(bad)
(bad)
jmp
add
sub
add
or
and
add
add
push
sar
jmp
push
sub
pop
sub
or
sub
adc
add
xchg
add
add
add
adc
add
add
sub
add
cmp
add
cmp
add
add
and
add
or
add
push
add
cmp
add
add
sub
add
or
add
add
dec
add
cmp
add
add
and
add
sub
add
push
sub
add
sub
add
or
mov
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
mov
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
add
xor
add
add
add
add
add
sbb
add
ret
add
push
sbb
or
push
add
push
sbb
add
push
sbb
add
add
or
call
add
adc
add
mov
add
mov
add
and
add
add
push
add
cmp
outs
or
outs
push
add
or
add
push
add
cmp
add
add
jne
add
add
pop
cmp
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
(bad)
(bad)
(bad)
dec
add
stos
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
add
add
push
cmp
(bad)
(bad)
jmp
add
sub
add
or
and
add
dec
add
cmp
sub
pop
sub
or
sub
cmp
sub
add
add
jge
add
add
add
cwde
sbb
add
ret
add
push
xor
add
add
add
pop
sub
or
sub
sbb
add
call
add
adc
add
add
dec
add
cmp
add
add
add
add
adc
cmp
add
add
add
dec
add
dec
add
add
add
add
retf
dec
(bad)
(bad)
dec
add
add
add
add
add
pop
cmp
(bad)
(bad)
jmp
jle
add
add
mov
add
and
add
add
jns
add
cmp
(bad)
(bad)
jmp
jg
add
add
add
add
sbb
add
sub
add
or
add
add
add
add
dec
add
cmp
add
add
add
add
in
add
push
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
call
cmp
add
fld
add
add
add
add
add
add
add
push
jb
add
or
add
sbb
add
sub
add
mov
add
adc
(bad)
adc
adc
sub
add
add
add
or
add
fisttp
add
add
push
or
add
add
pop
sub
add
adc
add
add
add
and
or
add
sbb
add
sbb
add
adc
pop
sub
add
push
push
inc
push
inc
or
or
add
es
or
add
add
push
sub
add
add
add
add
add
adc
add
or
add
cmp
jae
add
jnp
add
add
inc
sub
sub
add
jnp
add
add
push
add
sbb
add
sub
pop
sub
or
sub
adc
add
sahf
add
add
add
adc
add
add
dec
add
cmp
add
add
add
in
add
jge
add
add
add
push
add
cmp
add
add
(bad)
sub
add
or
add
add
(bad)
sub
add
or
add
add
(bad)
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
call
(bad)
dec
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
(bad)
sub
add
or
add
add
add
add
sub
push
cmp
sub
add
pop
sub
or
sub
adc
add
add
add
and
add
add
dec
add
add
sub
add
and
add
add
push
add
cmp
add
add
jnp
add
add
outs
adc
add
and
add
add
add
add
jge
add
add
fdivr
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
add
sub
aam
(bad)
jmp
sub
add
xor
jnp
add
add
adc
add
sub
add
or
sub
or
sub
adc
add
(bad)
add
add
add
add
sub
imul
adc
add
or
add
add
dec
add
cmp
add
add
add
add
outs
adc
mov
add
push
add
or
push
add
add
push
add
cmp
add
add
and
sbb
add
ret
add
push
outs
pop
add
or
outs
sbb
add
pop
inc
outs
add
add
mov
add
add
dec
add
dec
add
add
add
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
add
push
add
cmp
(bad)
(bad)
inc
and
push
add
sub
add
push
outs
sbb
add
push
and
sbb
add
ret
add
push
outs
sbb
add
and
add
add
push
add
cmp
add
sbb
add
sahf
add
add
add
adc
jnp
add
add
outs
inc
add
or
add
add
dec
add
cmp
jnp
add
add
ins
add
add
add
add
pop
cmp
add
add
add
add
add
outs
inc
add
or
jnp
add
add
outs
inc
add
or
int3
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
add
push
mov
add
jae
add
or
sub
add
push
fld
add
add
fld
add
add
add
add
add
add
add
xchg
xchg
add
or
add
push
add
push
add
or
or
add
sub
add
add
add
add
add
add
or
add
add
add
add
sbb
add
fld
add
add
fld
add
add
sub
add
or
add
add
add
add
sbb
add
or
add
push
add
push
add
or
pop
add
add
add
jnp
add
add
sbb
add
jge
add
add
sbb
push
add
add
add
add
add
inc
mov
add
jae
add
push
sbb
or
push
add
push
sub
fld
add
add
fld
add
add
add
adc
add
add
add
sub
push
jae
add
sbb
push
add
add
add
add
add
inc
mov
add
jae
add
or
lea
add
or
push
add
push
sub
fld
add
add
fld
add
add
add
adc
add
add
add
sub
push
jae
add
adc
add
xchg
add
add
add
adc
add
add
dec
add
cmp
add
add
jnp
add
add
push
add
add
sub
and
add
add
add
add
pop
add
or
dec
add
add
cmp
add
and
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
sbb
add
add
sub
add
or
add
push
add
cmp
add
xor
add
add
add
or
add
sub
popf
add
add
push
outs
and
add
and
add
add
push
add
cmp
jnp
add
add
imul
push
sub
push
add
add
sub
add
add
add
add
outs
inc
add
or
jnp
add
add
jnp
add
add
out
add
push
pop
outs
inc
add
or
outs
and
add
sub
jnp
add
add
ins
add
push
add
add
add
imul
push
and
add
add
xchg
add
push
cmp
add
add
sub
push
add
add
mov
add
cmp
or
add
dec
add
dec
add
add
add
add
add
dec
add
lods
(bad)
(bad)
jmp
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
dec
add
cmp
jnp
add
add
outs
inc
add
or
add
add
add
outs
inc
add
or
jnp
add
add
ins
add
push
add
add
add
ins
add
push
and
add
add
cmp
add
add
add
jnp
add
add
out
add
push
pop
outs
inc
add
or
outs
and
add
sub
jnp
add
add
ins
add
push
and
add
add
push
add
cmp
(bad)
inc
jnp
add
add
add
add
or
add
cmp
(bad)
inc
jnp
add
add
outs
push
add
or
jnp
add
add
and
add
add
add
add
outs
push
add
or
or
add
dec
add
cmp
(bad)
(bad)
jmp
add
add
add
imul
push
and
xchg
add
push
cmp
(bad)
(bad)
jmp
sub
add
or
add
or
or
add
add
add
add
push
add
add
jnp
add
add
add
add
pop
pop
pop
inc
add
add
add
add
mov
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
jmp
add
push
add
add
cdq
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
out
add
push
pop
outs
inc
add
or
pop
add
add
push
add
cmp
(bad)
jmp
add
add
add
push
add
or
adc
add
retf
add
add
add
adc
add
add
dec
add
cmp
add
add
add
add
outs
inc
add
or
jnp
add
add
sahf
add
push
and
add
sub
push
add
add
add
add
add
mov
add
add
push
mov
add
jae
add
or
sub
add
push
and
add
add
push
add
cmp
add
add
add
add
sahf
add
push
add
add
add
sahf
add
push
cmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
dec
add
add
(bad)
jmp
(bad)
jmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
pop
jge
add
add
add
cmp
sub
add
add
add
jnp
add
sub
add
add
pop
add
add
jnp
add
add
push
inc
add
push
jae
add
or
sub
add
push
sub
xor
add
add
adc
or
add
push
cmp
add
add
add
inc
add
sbb
add
add
add
add
outs
inc
add
or
add
add
add
aam
add
pop
or
add
aam
add
ds
add
add
push
sub
add
add
cld
add
add
int3
add
add
add
push
mov
add
jae
add
or
add
push
add
add
add
outs
inc
add
or
jnp
add
add
cmp
add
add
add
add
and
add
cmp
add
add
add
add
dec
add
cmp
jae
add
or
add
add
jae
add
push
jge
add
add
add
add
dec
add
cmp
add
add
jnp
add
add
jnp
add
add
fadd
add
outs
add
or
add
add
add
aam
add
add
and
add
pop
pop
or
push
add
add
push
add
cmp
add
add
and
sbb
add
ret
add
push
jae
add
push
jge
add
add
and
add
ret
add
push
jae
add
push
jge
add
add
or
add
sub
mov
add
add
or
add
add
and
sbb
add
ret
add
push
and
push
add
sub
add
push
sub
add
or
add
push
jge
add
add
or
add
cmp
add
add
sbb
add
sub
add
push
and
push
add
sub
add
push
and
or
add
push
sub
add
or
add
push
jge
add
add
jae
add
push
jge
add
add
jae
add
or
add
add
sub
add
or
sub
sub
add
or
cmp
or
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
std
(bad)
jmp
add
stos
(bad)
(bad)
jmp
add
jp
add
push
(bad)
(bad)
call
(bad)
(bad)
dec
add
or
add
dec
add
cmp
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
push
jge
add
add
jae
add
or
add
add
jae
add
or
add
add
add
add
dec
add
cmp
(bad)
inc
add
pop
add
add
add
add
cmp
(bad)
inc
jae
add
or
add
add
add
push
add
cmp
(bad)
(bad)
inc
and
add
sub
add
push
jae
add
push
jge
add
add
and
ret
add
push
jae
add
push
jge
add
add
jae
add
or
add
add
jae
add
or
add
add
or
cmp
(bad)
(bad)
jmp
add
inc
mov
add
jae
add
push
outs
push
add
push
and
add
add
push
add
cmp
outs
add
add
outs
inc
add
or
std
add
add
leave
(bad)
(bad)
inc
jnp
add
add
outs
push
add
or
jnp
add
add
daa
add
or
lods
(bad)
(bad)
inc
jnp
add
add
and
add
and
add
add
push
add
cmp
(bad)
jmp
add
add
pop
sub
or
sub
push
add
sbb
add
sub
jnp
add
add
jge
add
add
sub
add
or
dec
add
add
add
jge
add
add
sub
add
or
adc
add
inc
add
add
add
add
pop
cmp
add
add
or
add
add
and
add
sub
add
push
and
push
add
sub
add
push
sub
add
or
add
push
jge
add
add
jae
add
push
jge
add
add
sub
add
or
sub
add
push
and
cmp
add
add
add
or
add
add
add
add
dec
add
cmp
sub
add
push
sub
add
or
add
add
dec
add
cmp
add
push
and
sbb
add
ret
add
push
and
push
add
sub
add
push
sub
add
or
add
or
and
add
add
push
add
cmp
add
add
jnp
add
add
adc
add
push
and
ret
add
push
outs
inc
add
or
push
add
add
add
fadd
add
outs
inc
add
or
add
add
add
outs
sbb
add
outs
add
or
jnp
add
add
sub
add
pop
cmp
or
add
sub
add
or
add
das
add
or
and
add
add
sub
add
or
add
or
jae
add
or
xor
add
and
add
add
push
add
cmp
add
and
push
add
sub
add
push
outs
add
or
outs
dec
add
or
add
or
adc
add
add
loop
add
sub
add
push
outs
add
or
add
add
add
jnp
add
add
jl
add
add
add
add
outs
inc
add
or
imul
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
jmp
add
and
add
add
push
add
cmp
jae
add
push
jge
add
add
or
add
sub
cmps
(bad)
(bad)
(bad)
cmp
jnp
add
add
dec
add
or
ds
add
add
jnp
add
add
jnp
add
add
add
or
sar
(bad)
push
add
or
and
add
add
push
add
cmp
(bad)
jmp
add
or
sub
or
sub
sbb
add
and
add
nop
add
adc
jae
add
push
or
outs
sub
add
fisttp
cmp
add
add
outs
sub
add
fsubr
add
add
adc
add
add
add
add
sbb
add
and
add
xchg
add
adc
add
add
push
or
outs
sub
add
fisttp
cmp
add
add
outs
sub
add
fsubr
add
add
add
add
or
or
add
mov
add
sbb
add
and
push
add
sub
add
push
and
push
add
sub
add
push
sub
add
or
pop
adc
sub
add
sub
sbb
pop
add
add
adc
add
push
sub
or
add
shr
add
sub
add
or
add
add
sub
add
push
and
add
add
adc
sub
fld
add
add
fld
add
add
sbb
add
sub
add
push
and
push
add
sub
add
push
sub
add
or
push
push
jae
add
push
jae
add
push
or
pop
outs
dec
add
or
outs
sub
add
(bad)
add
add
outs
sbb
add
and
push
add
sub
add
push
and
push
add
sub
add
push
sub
add
or
pop
adc
sub
add
fld
add
add
or
add
sub
sub
add
add
add
cmp
push
rol
add
add
adc
addr16
cs
add
add
add
adc
add
push
add
popa
add
push
sub
pop
sub
or
sub
push
add
push
add
or
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
and
add
add
pushf
aas
add
and
jb
outs
addr16
add
add
cmps
add
pop
add
add
push
push
add
add
adc
add
and
dec
inc
add
add
add
and
add
inc
ins
outs
bound
add
add
add
add
add
push
push
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sbb
add
add
dec
add
add
add
add
add
or
push
add
cmp
push
add
or
push
add
cmp
push
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
mov
or
int3
add
add
add
sbb
push
add
or
push
add
or
push
add
or
push
add
or
push
add
add
add
add
push
add
sbb
push
add
add
add
add
stos
add
add
add
add
call
add
add
add
add
add
add
add
pop
fild
push
add
dec
or
add
or
sbb
or
or
add
add
add
add
or
add
add
pop
or
add
add
add
or
push
add
or
push
add
add
add
push
or
sahf
or
or
push
add
fimul
out
push
add
(bad)
add
add
(bad)
add
add
add
add
adc
push
add
or
push
add
or
push
add
add
add
adc
add
add
adc
add
add
stos
add
add
adc
adc
adc
clts
add
or
push
add
add
adc
push
add
or
push
add
or
push
add
adc
add
add
pop
or
push
add
pop
push
push
add
sbb
push
add
push
sbb
add
add
add
add
add
sbb
push
add
sbb
sbb
push
add
sbb
push
add
sbb
add
add
sbb
add
add
sbb
add
add
adc
push
add
ret
nop
bound
push
sbb
add
sbb
push
add
sbb
add
add
sbb
add
add
adc
push
add
sbb
add
sbb
pop
sbb
ficomp
jecxz
add
add
add
add
add
add
repnz
add
and
push
add
sbb
push
add
cdq
and
and
and
push
sbb
push
add
and
add
add
add
and
and
add
and
add
add
add
add
and
or
add
and
add
add
xchg
sbb
and
and
into
and
icebp
and
and
add
push
add
add
push
add
sbb
push
add
add
add
sbb
push
add
add
add
push
add
sbb
push
add
add
sub
add
add
sub
sub
sub
push
add
add
sub
sub
and
add
add
sub
add
add
add
mov
push
add
add
sub
es
add
sub
es
add
sub
es
add
sub
push
add
sub
push
add
push
sbb
add
test
push
add
sub
sub
add
add
add
add
sub
or
add
sub
ss
outs
sub
mov
imul
push
cs
push
add
add
add
or
push
add
add
or
push
add
das
or
push
add
das
or
push
add
das
add
push
add
das
add
push
add
add
push
add
xor
es
add
xor
push
add
fdiv
mov
push
add
mov
sbb
shl
xchg
push
add
xor
add
add
dec
or
add
push
xor
or
add
xor
or
add
xchg
sbb
imul
push
add
add
xor
add
add
xor
add
add
add
xor
fidiv
or
or
push
add
stos
add
add
stos
add
add
ss
push
add
aaa
or
push
add
add
add
or
push
add
add
cmp
add
add
cmp
add
add
cmp
add
add
sbb
push
add
add
cmp
push
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
add
add
cmp
cmp
add
cmp
sbb
xor
dec
cmp
jge
mov
push
add
add
(bad)
cmp
fnstsw
lock
or
daa
add
add
ds
add
add
or
push
add
add
add
or
push
add
add
add
add
ds
or
add
ds
or
add
ds
or
add
aas
dec
or
add
aas
mov
push
aas
test
push
add
cmp
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
jae
jbe
xor
add
add
add
add
cmp
add
push
add
add
add
add
xor
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
or
inc
add
add
add
add
inc
add
add
add
add
add
add
adc
xor
adc
dec
add
add
add
add
inc
add
add
or
add
pop
add
add
sbb
dec
add
add
add
add
dec
add
add
or
add
ins
add
add
daa
add
add
add
jo
add
inc
add
add
add
add
je
add
inc
add
add
add
add
dec
add
add
or
add
jl
add
dec
add
add
or
add
add
add
cmp
add
add
inc
add
or
add
mov
add
dec
add
add
add
add
inc
add
or
add
nop
add
add
inc
add
or
add
xchg
add
add
dec
add
or
add
cwde
add
add
dec
add
or
add
pushf
add
add
pop
add
add
add
mov
add
pop
add
add
add
pop
add
add
add
test
add
inc
add
popa
add
add
add
pop
add
add
add
mov
add
inc
add
imul
mov
add
inc
add
ins
add
add
add
add
jno
add
add
mov
add
jne
add
add
rol
add
pop
add
add
add
les
add
inc
add
jge
add
add
enter
inc
add
add
int3
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
add
popf
add
add
add
add
add
pop
add
add
add
add
add
movs
add
add
add
add
add
add
movs
add
add
add
pop
add
add
add
add
pusha
add
add
add
add
add
scas
add
add
add
add
add
add
mov
add
adc
sbb
sbb
xor
bound
mov
add
adc
and
sbb
xor
bound
mov
add
sbb
xor
bound
mov
add
add
inc
add
ret
add
add
add
xor
xor
gs
add
add
add
xor
dec
add
enter
adc
cmp
xor
dec
add
leave
add
add
add
inc
add
imul
add
add
xor
imul
add
add
add
add
add
add
add
add
iret
add
add
add
add
add
add
add
add
add
add
add
xor
xchg
fadd
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
xor
scas
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
rol
stc
add
add
add
rol
stc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmps
add
rol
stc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
repnz
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
stc
add
add
add
adc
std
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
popa
add
add
add
add
add
add
adc
adc
add
add
add
add
add
add
cmps
add
add
add
add
add
add
cmps
add
adc
sbb
add
adc
sub
cmps
add
add
add
add
add
add
dec
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
adc
ins
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
adc
js
and
add
add
add
adc
fiadd
add
add
add
add
adc
jmp
cmps
add
add
add
add
adc
dec
add
add
or
add
add
cmp
jnp
or
add
add
inc
add
or
adc
test
add
add
adc
sti
add
add
add
jle
add
add
inc
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pop
add
add
add
jno
xchg
add
add
add
add
jno
xchg
add
add
add
add
ja
cdq
add
add
add
add
ja
mov
add
fiadd
fld
in
jne
adc
cld
push
inc
add
add
add
fiadd
fld
in
add
add
pop
fld
add
aas
or
add
add
je
push
add
add
add
js
push
add
add
push
xlat
or
push
sbb
lea
push
and
lea
push
and
lea
push
sub
lea
push
sub
lea
push
xor
lea
push
xor
lea
push
cmp
lea
push
cmp
lea
push
add
or
or
or
add
add
add
or
add
add
add
or
add
add
adc
or
add
add
or
or
or
or
or
add
add
or
push
add
js
push
adc
mov
js
push
sub
into
add
sub
into
add
xor
add
xor
into
add
cmp
add
cmp
into
add
inc
or
add
inc
or
add
dec
or
add
push
xlat
or
add
dec
or
add
or
or
add
add
mov
or
add
push
add
rol
add
rol
add
add
add
mov
or
add
add
add
adc
sbb
rol
add
add
add
adc
mov
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
or
add
mov
or
add
rol
add
add
push
in
push
push
add
add
add
add
add
add
add
add
push
push
xlat
or
push
sub
fadd
push
xor
fadd
xor
ss
add
add
adc
add
add
adc
add
add
push
out
xor
inc
adc
pop
xor
inc
adc
push
add
adc
add
add
pop
or
add
adc
xor
or
pop
or
add
adc
add
adc
js
add
sbb
js
add
sbb
js
add
and
js
add
and
js
add
sub
out
pop
add
sub
bound
add
push
add
add
xor
ins
or
add
jno
add
cmp
jno
add
xchg
adc
add
add
add
add
add
add
add
adc
add
add
adc
add
add
or
add
add
jno
xor
jns
pop
or
add
pop
or
add
add
add
add
js
add
lea
add
add
add
add
add
add
add
add
add
adc
add
add
adc
or
add
adc
or
add
adc
or
add
add
adc
fst
or
add
add
adc
adc
or
add
adc
xor
add
adc
cmp
add
xchg
or
add
mov
xchg
or
add
mov
xchg
or
add
add
add
add
add
add
add
add
adc
jmp
add
adc
icebp
adc
cmc
adc
stc
adc
std
adc
add
js
add
add
add
add
push
mov
js
add
adc
js
add
adc
add
adc
or
add
push
retf
add
mov
js
add
dec
push
js
add
push
push
rol
add
js
adc
les
movs
or
add
push
movs
or
add
push
loopne
adc
rcl
loopne
adc
aam
in
adc
fcom
jmp
or
add
push
out
or
add
push
out
or
add
push
hlt
or
add
push
hlt
or
add
push
stc
or
add
push
stc
or
add
push
loopne
push
add
adc
add
add
push
dec
add
adc
add
add
add
add
add
add
add
add
inc
or
add
les
and
push
sbb
add
add
les
and
out
sbb
sbb
sbb
sbb
sbb
mov
sbb
or
add
into
or
add
sbb
or
add
fisttp
and
cmp
(bad)
or
add
jmp
sbb
add
add
or
add
repnz
add
sbb
leave
sbb
int
les
add
add
les
add
les
push
add
add
add
or
inc
or
dec
or
out
pop
add
inc
sbb
pop
ja
add
mov
sahf
or
add
add
cwde
pop
out
pop
add
pushf
pop
out
pop
add
inc
and
and
add
add
dec
and
pop
add
dec
and
pop
add
(bad)
and
out
pop
and
fisub
les
and
loop
les
push
push
xlat
or
push
sbb
or
mov
and
mov
xor
add
lods
sbb
add
js
add
add
xor
sbb
add
xor
sbb
add
xor
pop
and
fdiv
hlt
sbb
add
xor
pop
add
in
les
add
call
add
xor
sbb
add
xor
sbb
add
xor
sbb
add
xor
sbb
add
xor
sbb
add
xor
add
cld
xor
sbb
add
xor
sbb
push
xlat
or
push
xor
int
xor
push
xor
enter
add
mov
add
xor
sbb
add
xor
sbb
add
xor
sbb
add
js
and
pop
xor
pusha
xor
fdiv
hlt
sbb
add
xor
sbb
add
xor
sbb
add
add
add
add
push
dec
add
dec
sbb
or
add
add
aaa
les
add
div
les
add
sti
aaa
les
add
pop
and
daa
cmp
pop
adc
sub
mov
cmp
push
add
add
add
add
cmp
push
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
adc
cmp
add
add
and
push
add
cmp
and
push
add
cmp
cmp
cmp
and
push
add
rol
add
cmp
cmp
cmp
cmp
add
add
cmp
add
add
rol
add
cmp
and
and
or
mov
cmp
sbb
add
add
add
sbb
add
add
add
add
add
sbb
mov
add
and
sbb
add
(bad)
cmp
sbb
neg
add
cmp
cmp
sbb
or
or
or
neg
add
cmp
sbb
add
cmp
sbb
add
cmp
sbb
nop
add
cmp
neg
add
cmp
pop
add
std
add
add
idiv
adc
add
je
neg
add
neg
add
sbb
sti
sbb
and
add
add
sbb
inc
add
add
add
add
sbb
retf
add
add
add
add
sbb
inc
add
add
and
add
add
add
add
add
add
xchg
add
add
inc
and
add
add
sbb
retf
add
add
add
or
adc
inc
add
fsub
add
or
adc
repnz
sbb
add
or
adc
clc
add
pop
and
add
add
or
add
cwde
and
add
add
or
add
fsub
add
add
xchg
add
push
pop
add
add
and
add
add
add
add
and
add
add
aas
push
out
add
sub
add
or
inc
add
cmc
add
add
add
or
add
push
inc
add
test
add
or
inc
add
add
and
add
add
add
add
add
or
add
rol
xor
add
mov
add
add
sbb
retf
add
xchg
and
add
add
add
cwde
and
add
add
add
pushf
and
add
add
or
add
hlt
and
add
add
sbb
retf
add
cld
and
add
add
sbb
inc
add
aam
add
add
xchg
add
pop
pop
add
fsub
xchg
add
pop
pop
add
fsub
push
sbb
retf
add
in
add
or
push
add
add
add
cmp
add
add
xchg
add
pop
pop
add
inc
add
add
xchg
add
add
inc
add
or
push
sbb
retf
add
dec
add
or
push
sbb
retf
add
push
add
or
adc
inc
add
sub
add
add
xchg
add
pop
add
sub
add
add
xchg
add
pop
add
xor
add
or
push
sbb
retf
add
cmp
add
or
push
sbb
retf
add
inc
daa
add
or
adc
inc
add
aam
add
or
adc
repnz
or
add
or
adc
clc
add
inc
sub
add
add
or
add
jl
add
or
adc
inc
mov
add
add
xchg
add
pop
add
mov
add
add
mov
add
aas
push
out
add
cld
sub
add
add
push
cmc
add
add
add
add
add
add
movs
push
push
add
add
add
add
add
sub
add
add
add
push
xor
push
add
add
or
push
sbb
retf
add
add
add
add
sbb
inc
add
add
add
add
xchg
add
add
sub
add
add
add
add
add
or
add
cmc
add
mov
add
or
push
sbb
retf
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
sbb
retf
add
add
sub
add
add
or
add
add
add
or
add
jge
retf
add
add
add
add
add
xchg
add
or
or
mov
adc
dec
or
sub
adc
stos
or
add
add
add
sbb
push
add
add
add
add
inc
add
or
push
add
add
add
add
and
push
add
add
add
inc
or
adc
cmp
add
or
push
sbb
retf
add
add
add
add
sbb
retf
add
add
add
add
or
retf
add
add
add
or
push
or
add
add
add
add
add
add
add
xchg
add
or
adc
je
add
or
push
or
(bad)
add
add
add
or
out
adc
cld
das
add
or
push
or
clc
add
add
add
or
push
or
or
xor
add
add
or
and
add
xor
add
add
or
aaa
add
add
add
or
push
or
dec
add
add
add
or
push
or
popa
add
add
push
or
jbe
adc
fdiv
add
or
add
outs
or
xor
add
add
add
add
add
add
xchg
add
add
add
add
add
sbb
push
add
add
add
add
add
int
daa
add
add
add
inc
add
or
add
add
add
inc
add
aas
add
add
add
push
sbb
push
add
add
add
add
add
int
dec
add
add
add
inc
add
or
add
add
add
inc
add
pop
add
add
add
push
sbb
push
add
add
add
add
add
int
bound
add
add
inc
add
or
aas
add
add
add
add
inc
or
add
add
add
sbb
push
add
add
add
add
int
cdq
add
add
add
inc
add
or
add
add
add
inc
or
add
add
add
sbb
push
add
add
add
add
inc
add
or
add
add
add
inc
add
or
add
add
add
inc
add
fiadd
add
add
push
sbb
push
add
add
add
add
inc
add
or
add
add
add
inc
add
or
jae
add
add
add
inc
add
repnz
add
add
push
sbb
push
add
add
add
add
inc
add
or
add
add
add
inc
add
or
add
add
add
inc
add
add
jge
add
add
add
push
sbb
push
add
add
add
add
inc
add
or
push
add
add
inc
add
or
push
test
add
add
add
inc
add
sbb
xchg
add
add
add
push
sbb
push
add
add
add
int
and
mov
add
add
add
inc
add
or
push
xchg
add
add
add
add
inc
or
push
xchg
add
add
add
add
sbb
push
add
add
add
int
cmp
cdq
add
add
add
add
and
inc
push
popf
add
add
add
add
inc
or
lahf
add
add
add
add
sbb
push
add
add
add
int
push
push
mov
add
add
and
push
add
add
add
inc
or
cmps
add
add
add
add
sbb
push
add
add
add
int
gs
stos
add
add
add
add
and
jae
scas
add
add
add
add
inc
or
mov
add
add
add
push
sbb
push
add
add
add
int
pop
add
add
inc
add
or
mov
add
add
add
inc
add
outs
add
add
add
sbb
push
add
add
add
int
test
mov
add
add
and
push
add
add
add
inc
or
add
add
add
sbb
push
add
add
add
add
add
int
cdq
push
mov
add
add
add
and
push
add
add
add
inc
or
add
add
add
sbb
push
add
add
add
add
add
int
scas
push
rol
add
add
add
inc
add
or
add
add
add
inc
add
rol
add
add
add
add
sbb
push
add
add
add
add
add
int
retf
push
loope
add
add
add
inc
add
or
add
add
add
inc
add
(bad)
push
in
je
add
or
adc
inc
add
push
xor
add
add
add
add
add
add
add
add
add
add
add
sbb
push
add
add
add
add
add
int
fild
call
add
add
and
in
jmp
add
inc
or
add
add
add
or
xchg
pop
add
add
add
add
or
xchg
or
mulps
jmp
hlt
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
add
xchg
add
add
add
xor
add
add
pop
jmp
movs
xor
xchg
pop
add
add
add
xchg
add
adc
in
add
add
add
add
xchg
pop
add
add
add
xchg
pop
add
add
add
xchg
add
add
in
add
add
or
xchg
add
add
in
add
cmp
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
add
add
xchg
add
pop
add
add
cmp
add
add
pop
in
add
cmp
add
add
pop
in
add
add
add
pop
in
add
add
or
sbb
in
add
add
add
xchg
add
add
add
add
add
add
add
or
xchg
pop
add
add
add
add
pop
in
add
add
pop
in
add
add
add
add
add
add
add
xchg
add
adc
in
add
cmp
add
add
pop
in
add
add
or
xchg
sbb
inc
add
add
cmp
xchg
pop
add
add
add
cmp
xchg
add
adc
out
add
cmp
xchg
add
adc
out
add
cmp
xchg
pop
add
add
add
cmp
xchg
pop
add
add
add
cmp
xchg
pop
add
add
add
cmp
xchg
pop
add
out
add
add
add
add
add
add
add
add
add
add
add
xchg
cmps
adc
add
add
add
add
add
aas
add
or
xchg
scas
adc
inc
add
or
xchg
pop
add
add
add
add
add
xchg
add
add
add
add
add
add
add
or
xchg
pop
add
add
add
add
add
xchg
add
adc
add
add
add
add
add
add
add
or
xchg
sbb
inc
add
add
inc
add
or
xchg
pop
add
out
add
add
add
xchg
add
pop
add
add
inc
add
add
xchg
add
pop
add
add
add
or
xchg
pop
add
add
add
add
or
xchg
sbb
inc
add
add
inc
add
add
xchg
add
add
inc
add
add
xchg
add
adc
add
add
inc
add
or
xchg
pop
add
add
add
add
or
add
xchg
jmp
add
add
add
or
add
add
add
add
add
add
add
add
xchg
sbb
inc
add
add
inc
add
or
xchg
pop
add
or
add
add
add
add
xchg
add
pop
add
add
inc
add
or
xchg
pop
add
or
add
xchg
add
add
add
add
add
xchg
pop
add
or
add
xchg
add
add
add
add
add
xchg
pop
push
cmc
add
add
dec
add
or
xchg
pop
push
xchg
test
dec
add
or
xchg
pop
add
add
add
dec
add
add
xchg
add
pop
add
add
add
add
xchg
add
pop
add
add
dec
add
or
xchg
pop
add
add
add
dec
add
or
xchg
pop
add
test
dec
add
add
xchg
add
xor
add
add
add
add
add
or
xchg
pop
add
add
add
add
or
xchg
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
xchg
inc
pop
or
clc
add
xchg
pop
add
add
add
dec
add
add
xchg
add
pop
add
add
dec
add
add
xchg
add
add
add
dec
add
or
xchg
pop
add
stc
add
add
or
xchg
loopne
jecxz
std
add
add
add
xchg
add
pop
pop
add
add
add
add
xchg
add
add
add
add
or
add
add
add
add
add
add
add
xchg
add
sbb
add
and
add
add
add
add
add
or
xchg
pop
add
dec
add
or
xchg
mov
push
add
add
add
add
add
dec
add
or
xchg
xchg
sbb
add
enter
or
xchg
sbb
inc
add
add
dec
add
add
xchg
add
add
dec
add
add
xchg
add
add
dec
add
or
xchg
pop
add
or
add
add
add
or
add
push
add
or
add
sbb
or
or
add
or
add
or
les
add
add
or
add
pop
add
or
add
sbb
pop
add
or
add
sbb
or
inc
ins
add
or
add
or
ins
jae
add
add
or
sub
add
add
or
add
add
or
add
add
or
xchg
jno
fmul
add
jns
add
add
or
add
jns
add
add
or
add
add
add
xchg
add
pop
add
add
add
add
add
add
add
add
add
jnp
add
add
add
add
jnp
add
add
add
add
jnp
add
add
or
add
jnp
add
add
add
clc
jnp
add
add
add
cld
jnp
add
add
or
or
add
or
xchg
or
add
add
or
sbb
adc
cmp
add
add
xchg
add
add
add
add
xchg
add
inc
jl
add
add
or
add
or
xchg
pop
add
add
jl
add
add
or
clc
jl
add
add
add
cld
jl
add
add
add
add
add
add
or
add
jge
add
add
or
add
jge
add
add
add
add
add
add
add
add
add
add
add
add
popa
or
add
add
mov
or
and
add
add
add
mov
or
push
and
add
add
or
add
jge
add
add
or
add
jge
add
add
or
add
jge
add
add
or
add
add
or
xchg
lods
pop
xchg
add
add
or
xchg
mov
xchg
add
add
or
xchg
mov
pop
add
add
add
add
add
add
add
add
or
add
add
xchg
add
pop
pop
add
add
jle
add
add
add
add
add
or
xchg
pop
add
add
add
add
or
xchg
pop
add
add
add
add
or
xchg
pop
add
add
add
add
or
xchg
push
and
jle
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
or
xchg
pop
and
jle
add
add
add
add
add
add
or
add
or
xchg
pop
add
add
or
xchg
pop
add
jg
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
cmps
or
add
add
mov
or
add
add
add
add
or
push
cmp
inc
jg
add
add
or
add
or
xchg
jmp
jg
add
add
add
add
add
or
xchg
repnz
cmp
pusha
jg
add
add
or
add
or
sbb
add
or
add
or
sbb
add
or
add
add
xchg
add
and
inc
add
add
add
xchg
add
add
add
add
or
add
or
nop
add
in
or
add
or
nop
add
hlt
or
add
or
nop
add
add
inc
add
add
or
nop
add
adc
add
or
nop
add
add
add
add
and
mov
add
push
dec
add
test
add
add
add
and
dec
add
mov
add
add
push
dec
add
mov
add
add
push
push
add
adc
mov
inc
add
xchg
xchg
add
or
nop
add
and
push
push
add
nop
add
and
(bad)
add
add
add
(bad)
add
add
sqrtps
movs
cdq
add
or
nop
add
and
sqrtps
xor
nop
add
mov
fwait
add
or
nop
add
lods
andnps
mov
add
andnps
and
add
or
nop
add
mov
push
add
mov
nop
add
fmul
pop
add
add
add
and
push
pop
add
add
or
nop
add
add
cmps
add
or
nop
add
add
cmps
add
or
nop
add
add
test
add
add
adc
in
add
or
nop
add
add
add
or
adc
scas
and
adc
add
add
add
and
and
test
nop
add
and
and
nop
add
and
inc
mov
add
add
adc
and
add
and
add
add
add
and
and
sub
add
or
nop
add
sbb
jne
je
add
or
nop
add
sub
jg
cmp
add
or
nop
add
cmp
jg
pusha
mov
add
add
add
add
add
or
nop
add
and
cld
mov
nop
add
and
cmp
nop
add
and
je
add
or
nop
add
and
mov
add
or
nop
add
and
sub
add
or
nop
add
loop
call
add
adc
add
add
adc
add
add
adc
add
sub
setl
push
leave
add
or
nop
add
jg
sahf
add
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
cpuid
add
add
add
sub
push
mov
add
add
add
add
nop
add
fmul
test
cmp
add
or
nop
add
sub
rol
add
add
adc
add
add
adc
or
nop
add
mov
lods
add
nop
add
mov
aam
add
add
fxsave
int3
aam
add
add
adc
add
add
adc
add
add
adc
add
sub
adc
add
add
adc
add
add
adc
add
nop
add
add
add
add
adc
add
xlat
add
or
nop
add
sub
adc
add
fiadd
add
add
adc
add
add
or
adc
out
sub
mov
add
add
adc
add
loopne
add
add
adc
add
add
or
nop
add
adc
add
add
adc
add
add
add
add
add
out
add
add
adc
add
add
add
adc
add
add
adc
add
add
or
nop
add
add
jmp
nop
add
add
add
add
add
adc
mov
sub
rol
fsubr
add
or
nop
add
sub
aam
pusha
in
add
or
nop
add
sub
aad
push
add
adc
add
or
nop
add
sub
fadd
or
add
or
nop
add
adc
add
or
nop
add
adc
add
or
nop
add
add
add
add
sub
adc
add
or
adc
aam
inc
add
add
stc
add
or
nop
add
sub
push
loop
fs
add
or
nop
add
pop
push
jecxz
mov
add
or
nop
add
sub
or
add
or
nop
add
ss
add
add
add
sub
push
call
add
add
push
jmp
pop
std
add
or
nop
add
cmp
in
add
add
or
nop
add
pop
push
in
add
add
add
add
inc
add
add
add
add
add
push
in
add
nop
add
mov
add
or
nop
add
add
or
add
add
push
icebp
add
nop
add
sub
push
icebp
add
add
add
push
hlt
add
add
push
cmc
add
or
nop
add
sub
add
add
add
or
nop
add
sub
pop
test
push
add
or
nop
add
sub
push
test
sgdtd
or
nop
add
dec
sgdtd
or
nop
add
sub
nop
sgdtd
or
nop
add
xor
add
or
nop
add
sub
sub
add
or
nop
add
inc
add
add
add
or
adc
dec
sub
and
add
add
add
cdq
push
add
and
nop
add
jg
add
pop
adc
nop
add
mov
add
mov
add
or
nop
add
add
push
add
or
nop
add
add
push
add
or
nop
add
add
add
or
nop
add
add
pop
add
or
nop
add
add
add
pop
lar
add
or
nop
add
sub
mov
add
or
adc
jecxz
xlat
pop
adc
inc
sbb
add
add
pop
adc
les
add
or
nop
add
and
sbb
lods
pop
add
or
nop
add
add
pop
add
or
nop
add
dec
sbb
add
add
adc
sbb
add
or
nop
add
das
lods
sbb
dec
sub
add
add
sbb
add
das
fcomp
sub
add
add
add
and
add
sub
nop
add
jmp
add
add
sbb
add
add
add
and
xor
sub
add
add
sbb
add
add
or
nop
add
das
push
xor
sub
add
or
nop
add
add
adc
mov
sub
xor
xchg
aaa
add
or
nop
add
add
add
add
das
test
xor
add
add
getsec
add
add
sbb
add
cmp
nop
add
fstp
cmp
add
add
or
nop
add
add
add
or
nop
add
add
add
add
sbb
push
add
or
nop
add
add
add
add
add
aas
add
or
adc
xchg
xor
inc
add
add
add
xor
inc
add
inc
add
or
nop
add
xor
inc
add
or
nop
add
xor
inc
add
inc
add
or
nop
add
xor
inc
add
or
nop
add
xor
push
inc
add
add
add
xor
sbb
dec
add
or
nop
add
xor
inc
add
add
or
nop
add
xor
inc
add
add
or
nop
add
xor
adc
mov
add
or
nop
add
xor
inc
add
dec
add
or
nop
add
xor
adc
dec
dec
add
or
nop
add
xor
dec
add
nop
add
xor
adc
ror
or
nop
add
push
dec
add
or
adc
and
inc
add
jo
add
or
nop
add
add
dec
add
or
adc
xor
cmp
dec
add
add
push
push
add
add
add
sbb
xchg
dec
add
or
nop
add
xor
dec
add
add
xchg
add
pop
add
dec
add
add
xchg
add
add
dec
add
or
mov
xor
push
add
or
sbb
add
push
add
or
sbb
add
sbb
mov
add
add
xchg
add
xor
pop
add
add
add
push
add
or
xchg
pop
add
add
add
add
add
add
add
add
add
add
jecxz
pop
add
add
add
add
add
or
sbb
add
add
add
mov
or
push
bound
les
add
add
add
int3
push
add
or
les
popa
xor
sbb
fcom
add
add
add
in
fs
push
add
or
les
xor
sbb
cld
push
add
or
xchg
pop
add
add
test
add
add
add
mov
add
add
add
mov
add
add
or
xor
data16
(bad)
or
xor
add
movs
push
add
or
les
jae
in
add
push
add
or
les
clc
xor
push
add
add
add
xor
sbb
sub
add
or
xchg
pop
add
add
pusha
push
add
or
xchg
pop
add
add
adc
or
les
arpl
pop
add
pop
add
or
add
ins
add
add
add
xchg
add
add
add
add
add
pop
pop
add
or
xchg
fdiv
xor
pop
add
or
xchg
fdiv
cmp
outs
add
add
add
or
xor
jo
ins
pop
add
or
(bad)
or
xor
add
jl
add
or
xchg
loopne
dec
sbb
test
add
add
sbb
xchg
pop
add
or
les
arpl
pop
add
nop
pop
add
or
les
jae
in
jae
add
add
or
les
clc
xor
je
cwde
pop
add
or
les
push
xor
sbb
loopne
add
or
les
popa
xor
sbb
sub
add
add
add
sbb
or
xchg
pop
add
add
xchg
pop
add
add
xchg
add
pop
add
cwde
pop
add
add
xchg
add
add
les
jae
in
jns
aam
add
or
les
clc
xor
jp
push
add
add
pop
add
popa
add
or
add
jge
pusha
popa
add
or
xchg
pop
add
add
call
add
add
in
arpl
add
add
add
lock
add
add
add
sbb
test
or
les
jae
in
add
add
or
les
clc
xor
add
or
les
arpl
pop
add
add
add
add
xor
sbb
or
add
test
dec
push
xchg
pop
add
add
add
add
add
add
add
add
add
add
or
add
push
add
add
or
add
push
add
add
or
add
add
or
add
add
add
mov
add
add
add
les
mov
add
add
add
les
lea
pop
ins
add
or
xchg
or
xor
mov
add
sbb
add
outs
add
or
add
ss
outs
add
or
les
dec
ss
or
add
add
sbb
add
add
and
xchg
add
jae
add
add
or
add
or
add
cwde
add
add
call
add
pushf
add
jne
add
add
add
add
xchg
add
add
add
add
add
or
xchg
pop
add
add
or
xchg
add
add
jbe
add
add
add
xchg
sbb
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
xchg
sbb
add
add
add
xchg
add
aaa
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
pop
cmps
add
add
or
xchg
pop
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
or
out
arpl
retf
add
add
add
add
add
add
add
add
add
pop
add
add
add
bts
sbb
add
add
shrd
and
add
add
imul
fs
add
add
cmpxchg
ins
jge
add
add
btr
test
add
add
or
add
or
add
mov
sbb
add
or
les
fwait
cmp
sbb
add
or
add
mov
add
add
bsf
adc
add
cmp
mov
add
add
add
add
add
add
cmp
rol
add
or
xchg
pop
add
ret
test
add
add
add
add
xchg
add
pop
add
add
add
add
add
add
pinsrw
test
add
add
shufps
test
add
add
sbb
add
mov
add
add
add
add
add
add
xchg
add
sbb
les
leave
xor
pop
mov
add
add
add
xor
cwde
mov
add
add
add
xor
enter
or
xchg
add
cmp
int3
add
xchg
pop
add
add
add
xchg
add
cmp
add
add
add
add
add
push
sbb
jecxz
int3
add
add
add
add
add
mov
add
add
mov
add
add
inc
push
add
add
mov
add
add
mov
add
add
data16
add
add
add
add
push
or
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
or
add
aad
add
add
add
add
or
add
add
or
add
add
add
add
or
add
add
or
add
aad
add
add
mov
add
add
ror
add
add
or
add
add
or
add
add
or
add
enter
add
add
add
or
add
add
or
add
add
or
add
add
add
or
add
add
or
add
add
or
add
enter
add
add
add
add
or
add
add
or
add
add
add
or
sub
cmp
add
push
add
add
pop
add
add
or
gs
jbe
add
or
or
or
add
adc
add
add
jbe
add
add
or
or
add
add
or
add
add
add
or
sub
cmp
add
push
add
add
pop
add
add
or
gs
jbe
add
or
or
or
add
add
or
add
add
add
add
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
dec
add
pop
add
or
add
add
or
sub
add
add
add
add
add
or
mov
add
add
ror
add
add
or
(bad)
dec
add
add
adc
add
add
sub
add
or
(bad)
mov
add
add
ror
add
add
or
(bad)
dec
add
add
adc
add
add
sub
add
or
(bad)
mov
add
add
ror
add
add
add
add
or
add
adc
add
add
sub
add
add
add
add
or
add
add
or
call
add
or
test
push
add
or
add
add
or
add
add
add
or
call
add
or
test
add
mov
add
add
ror
add
add
or
add
add
add
dec
add
add
adc
add
add
add
add
add
sub
add
or
add
add
add
mov
add
add
ror
add
add
push
add
add
dec
add
add
adc
add
add
sub
add
push
add
add
mov
add
add
ror
add
add
add
push
add
add
dec
add
add
adc
add
add
sbb
add
add
add
push
add
add
mov
add
add
ror
add
add
or
add
add
or
add
add
or
add
add
add
or
add
add
add
or
add
add
push
add
add
cmp
add
add
inc
push
add
add
dec
add
add
add
add
add
push
add
add
cmp
add
add
inc
push
add
add
mov
add
add
ror
add
add
add
add
pop
push
add
add
jo
add
add
dec
add
add
add
add
add
add
add
pop
push
add
add
jo
add
add
mov
add
add
ror
add
add
add
add
pop
push
add
add
jo
add
add
test
add
add
add
add
or
add
add
or
add
add
sub
add
add
add
pop
push
add
add
jo
add
add
test
add
add
add
add
add
or
add
add
dec
add
add
adc
add
add
sub
add
mov
add
add
ror
add
add
or
add
add
or
add
add
add
add
sldt
add
dec
adc
add
add
add
add
inc
adc
add
add
add
add
mov
add
stos
adc
mov
add
add
push
adc
test
add
add
add
add
add
add
pop
add
add
in
add
add
mov
add
add
add
add
data16
add
add
add
add
pop
sbb
add
add
add
add
jno
add
add
fild
add
add
lea
add
add
fild
add
add
lods
or
add
add
add
add
sbb
add
add
add
add
add
add
sbb
pushw
add
add
out
sldt
add
movs
push
add
add
pushw
add
add
out
sldt
add
in
add
add
out
add
add
in
add
add
icebp
push
add
add
out
add
add
cs
add
add
gs
add
add
ins
pop
add
add
jae
add
add
jp
add
add
jae
add
add
jp
add
add
jl
add
add
gs
add
add
test
add
add
sbb
add
add
xor
add
add
sbb
add
add
add
add
pusha
and
add
add
add
add
jle
add
add
jb
add
add
gs
add
add
ins
pop
add
add
jae
add
add
jp
add
add
jae
add
add
jp
add
add
jl
add
add
gs
add
add
test
add
add
mul
add
add
mul
add
add
sti
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
and
add
add
and
add
add
add
add
and
add
add
and
add
add
and
add
add
add
add
bound
add
add
data16
add
add
add
add
bound
add
add
data16
add
add
pop
and
add
add
add
add
jno
add
add
jne
add
add
jns
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
and
add
add
add
add
add
add
add
jno
add
add
jne
add
add
jns
add
add
stos
and
add
add
add
add
test
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
pop
and
add
add
and
pop
and
pop
and
daa
and
sub
das
and
xor
aaa
and
mov
add
add
pop
and
add
add
and
dec
and
push
and
push
and
pop
and
pop
and
arpl
addr16
jae
add
add
sub
test
mov
aad
add
add
mov
add
add
pop
and
add
add
and
dec
and
push
and
push
and
pop
and
pop
and
loope
add
add
in
add
add
mov
add
add
pop
and
add
add
and
dec
and
push
and
push
and
pop
and
pop
and
arpl
aad
add
add
pop
add
add
in
add
add
(bad)
and
add
add
add
add
add
add
add
and
je
add
add
call
add
add
add
and
add
add
and
add
add
and
add
add
add
add
sub
add
add
add
add
add
xor
add
add
lods
or
add
add
sbb
cmp
add
add
push
sub
add
add
sbb
test
add
add
mov
add
add
pop
and
add
add
and
dec
and
push
and
leave
sbb
mov
add
add
add
add
sub
add
add
add
pop
and
add
add
and
dec
and
push
and
push
and
pop
and
sub
add
add
bound
add
add
lods
or
add
add
add
add
sbb
mov
add
add
pop
and
add
add
and
dec
and
push
and
push
and
mov
add
add
(bad)
add
bound
add
add
fwait
sub
add
add
add
add
add
add
adc
add
add
bound
add
add
lods
sub
add
add
add
add
mov
add
add
(bad)
add
mov
add
add
stos
sub
add
add
add
add
add
add
add
pop
and
add
add
and
dec
and
mov
add
add
add
add
xor
add
add
add
add
lahf
adc
add
add
add
add
mov
add
add
sub
add
add
xor
add
add
mov
add
add
and
pop
add
add
int3
sub
add
add
add
add
jae
add
add
sub
test
mov
pop
and
sbb
add
and
adc
add
add
(bad)
add
mov
add
add
push
sub
pop
sub
pop
sub
sub
add
push
add
add
scas
sub
inc
adc
add
add
add
add
mov
add
add
lahf
adc
add
add
and
pop
add
add
mov
add
add
(bad)
add
ret
sub
data16
add
add
add
add
out
add
add
cmp
add
add
call
add
and
add
add
pop
and
add
add
and
dec
and
push
and
push
and
pop
and
pop
and
arpl
addr16
mov
add
add
lahf
adc
add
add
add
and
pop
add
add
push
das
add
add
stos
and
add
add
add
add
test
daa
and
sbb
add
add
inc
push
add
add
lahf
adc
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
lods
or
add
add
add
add
add
add
add
add
add
leave
sbb
loop
add
add
sbb
add
add
and
add
add
and
add
add
add
add
add
add
add
add
add
inc
adc
add
add
add
add
(bad)
xor
add
add
add
add
add
bound
add
add
aad
add
add
pop
add
add
in
add
add
jae
add
add
sub
test
mov
lods
or
add
add
cmp
add
add
inc
adc
add
add
add
add
shl
add
add
(bad)
shl
add
add
(bad)
sti
xor
add
add
add
add
or
add
add
adc
add
add
add
ins
pop
add
add
pop
xor
add
add
add
add
jl
add
add
gs
add
add
test
add
add
call
add
sub
add
add
sub
add
add
add
sub
add
add
xor
add
add
xor
add
add
sub
add
add
add
add
add
cmp
add
add
call
add
add
add
add
add
add
call
add
xor
add
add
xor
add
add
sub
add
add
sub
add
add
add
sub
add
add
xor
add
add
xor
add
add
add
add
cmp
add
add
call
add
sub
add
add
sub
add
add
xor
add
add
xor
add
add
add
add
call
add
add
add
call
add
add
add
add
add
sub
add
add
sub
add
add
sub
add
add
add
add
call
add
add
add
call
add
mov
add
add
dec
and
add
add
add
add
cmp
add
add
fild
add
add
cmp
add
add
popf
add
add
cmp
add
add
add
add
aaa
add
add
cmp
add
add
test
add
add
adc
add
add
shl
add
add
aaa
add
add
data16
add
add
add
aaa
add
add
adc
add
add
mov
add
add
inc
cmp
add
add
add
add
push
cmp
add
add
sub
add
add
add
add
call
add
add
add
call
add
add
add
call
add
add
add
call
add
add
add
call
add
add
add
call
add
add
add
call
add
sub
add
add
add
add
call
add
add
add
call
add
add
add
call
add
add
add
call
add
cmp
add
add
cmp
add
add
add
add
call
add
add
add
call
add
call
add
sub
add
add
sub
leave
add
add
retf
add
add
fadd
xor
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
dec
add
add
add
add
push
add
add
add
jecxz
jno
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
cmc
add
cmc
add
cmc
add
cmc
add
inc
push
out
jmp
add
ins
push
cmc
add
add
add
add
push
sub
popa
add
retf
add
cld
push
inc
add
add
add
add
add
add
add
add
add
add
cmc
add
cmc
add
cmc
add
leave
pop
fld
ins
add
add
or
add
add
add
pop
add
add
imul
imul
call
add
cmp
ror
add
add
sub
jns
fmul
das
add
add
or
add
add
adc
jecxz
mov
add
jl
inc
add
jnp
xchg
jns
lea
pop
add
add
jb
fwait
add
add
mov
or
or
or
paddb
mov
pop
test
add
add
add
add
pop
je
pop
add
add
add
pop
mov
(bad)
sysenter
pop
mov
pop
cmp
in
cmc
add
add
add
adc
add
add
add
adc
add
jecxz
cmp
adc
cdq
add
retf
add
add
fs
rol
pop
add
leave
add
add
add
add
add
adc
push
add
add
retf
add
add
adc
adc
adc
adc
mov
adc
add
add
(bad)
pop
jl
push
adc
or
add
adc
adc
jo
sbb
sbb
adc
or
add
add
add
retf
add
add
add
add
cmovge
sbb
movs
adc
and
int
push
or
add
adc
add
add
jl
mov
add
or
sub
add
add
das
or
add
pop
outs
or
add
add
add
retf
add
xchg
add
retf
add
movs
add
retf
add
cmp
ja
push
add
xchg
sbb
sbb
add
add
add
add
sbb
add
add
sbb
sbb
sbb
sbb
add
add
sbb
sbb
add
add
add
movd
icebp
add
sbb
add
sbb
adc
adc
icebp
add
xchg
lods
add
or
add
mov
lods
add
cmc
add
icebp
add
mov
leave
add
sbb
scas
pop
or
xchg
sbb
push
imul
cmc
add
add
invd
pop
mov
rcr
or
leave
add
sbb
or
add
add
sbb
cmp
lock
or
add
add
sbb
or
test
call
adc
add
add
add
or
retf
add
or
or
movups
setno
pop
add
add
cmc
add
xchg
add
add
cmc
add
leave
add
add
cmc
add
mov
scas
sbb
sbb
sbb
or
add
leave
or
movs
add
cmc
add
les
scas
sbb
sbb
sbb
or
add
sbb
sbb
or
jmp
sbb
or
add
sbb
or
add
sbb
or
add
retf
add
add
add
sbb
or
add
retf
add
add
add
add
sbb
add
out
jmp
or
add
cmc
add
add
add
add
xor
add
add
sbb
sbb
sbb
sbb
add
popa
add
add
add
add
add
add
sbb
or
add
sbb
add
add
sbb
or
add
jb
pmaddwd
xor
sbb
sbb
or
std
sbb
or
add
sbb
pop
add
or
add
inc
sbb
dec
sbb
int
aad
or
pop
add
add
add
sbb
in
dec
or
add
and
xor
retf
add
or
add
retf
add
loopne
cdq
push
inc
add
and
and
loope
pop
add
add
and
mov
push
mov
add
je
pop
add
add
movs
and
or
add
loope
mov
add
mov
jmp
and
adc
push
mov
push
add
add
add
add
add
add
mov
or
push
popa
add
add
add
and
jns
mov
xlat
and
setno
test
aas
mov
xchg
inc
psrlw
jmp
and
add
add
cmps
sbb
add
or
nop
and
pop
sbb
cmp
add
add
adc
jno
inc
or
cdq
add
retf
add
pop
add
add
sbb
adc
add
add
and
or
add
pop
add
adc
mov
retf
add
adc
adc
adc
add
and
mulps
(bad)
and
add
add
add
add
add
test
add
add
xchg
adc
add
retf
add
add
fcom
jmp
adc
add
or
mov
add
add
add
add
add
add
adc
add
add
pop
add
mov
or
add
es
adc
adc
adc
add
xchg
es
add
adc
adc
add
daa
adc
aas
daa
cmp
daa
pop
add
jne
pop
add
test
pop
add
xchg
daa
inc
adc
add
ret
add
add
adc
in
das
add
sti
daa
pop
add
add
adc
add
sub
or
add
push
adc
adc
pop
add
leave
add
add
add
jns
mov
add
fadd
popa
add
sub
and
lock
adc
or
adc
imul
add
add
add
iret
adc
add
jmp
add
(bad)
sub
adc
add
sub
inc
add
sub
rol
or
adc
sbb
mov
add
add
sub
or
jecxz
pop
add
pop
add
add
jno
fst
add
add
sbb
add
or
add
sub
cdq
add
add
cdq
add
pop
dec
adc
dec
adc
fcom
mov
or
adc
push
or
add
add
add
sub
mov
sub
cmp
sahf
sub
adc
fimul
imul
add
add
mov
push
and
or
push
mov
push
mov
push
mov
push
mov
or
add
sub
push
leave
add
sub
pop
rol
sub
pop
rol
sub
pop
icebp
add
add
popa
add
add
add
add
add
add
sub
xchg
sub
mov
add
leave
add
sub
jmp
sbb
or
add
add
sbb
or
sbb
or
add
add
add
and
sbb
add
sub
leave
add
mov
je
and
add
add
add
add
add
add
add
cs
or
add
cs
sbb
add
cs
sbb
add
movs
sbb
leave
add
dec
add
pop
add
add
or
or
add
add
add
inc
add
add
pop
add
das
dec
or
sbb
pop
add
add
adc
jecxz
jmp
add
add
add
xor
or
add
jmp
pop
add
sbb
dec
xor
sbb
add
xlat
sbb
add
add
add
and
cdq
xor
add
jno
pop
add
add
add
add
add
retf
add
in
mov
sbb
sbb
add
add
add
add
add
sbb
mov
sbb
push
rol
xor
sbb
or
pop
add
add
add
add
gs
add
jb
test
call
xor
sbb
add
add
add
imul
call
add
xor
add
add
xor
mov
sbb
adc
add
add
sbb
add
mov
sbb
add
lea
leave
add
mov
sbb
add
loope
loop
mov
xor
sbb
add
loope
pop
add
add
add
mov
sbb
sbb
or
add
add
xor
sbb
add
push
sbb
add
xor
div
and
push
cmp
xchg
jns
aam
inc
add
add
push
adc
jo
jno
stc
add
ja
icebp
add
adc
rol
mov
cdq
push
rol
aam
cdq
push
sbb
movs
cmp
and
icebp
fadd
and
std
ss
rol
add
add
add
mov
push
dec
aaa
test
aaa
pop
add
add
xchg
sbb
add
cmp
add
add
es
add
dec
cmp
add
popa
cmp
add
pop
add
add
and
push
add
rcl
retf
add
xor
jecxz
imul
popa
push
push
cmp
add
pop
cmp
add
jns
retf
add
add
cmp
or
sbb
das
sbb
xchg
mov
or
iret
cmp
mov
add
pop
add
add
add
pop
add
add
add
add
add
or
lahf
cmp
mov
add
and
add
and
jbe
icebp
add
cmp
add
add
mov
add
push
pop
add
add
push
pop
add
add
push
pop
add
add
push
pop
add
push
pop
add
add
push
pop
add
add
push
pop
add
add
push
pop
add
add
pop
pop
add
add
pop
pop
add
add
pop
pop
add
add
pop
pop
add
add
pop
pop
add
add
pop
pop
add
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
imul
jno
pop
add
add
pop
add
add
add
add
add
xchg
add
add
add
add
mov
add
add
add
add
mov
add
add
add
mov
add
rol
add
add
add
add
add
add
add
add
or
stos
add
add
add
loope
or
nop
add
add
add
add
xchg
add
add
add
add
add
stc
add
add
add
nop
add
add
add
add
adc
xor
sub
add
add
repz
add
add
add
add
add
add
add
add
add
fwait
adc
sbb
lods
sbb
pushf
sbb
jmp
adc
pushf
sbb
neg
xchg
add
add
add
sbb
xchg
add
add
pushf
sbb
xchg
add
add
pushf
sbb
or
leave
add
add
pushf
sbb
fld
jmp
sbb
xchg
add
add
add
add
add
add
add
add
pushf
sbb
lods
sbb
pushf
sbb
lods
sbb
pushf
sbb
xchg
add
add
add
lods
sbb
xchg
add
add
add
pushf
sbb
pushf
sbb
or
add
adc
add
add
pushf
sbb
pushf
sbb
fld
and
jae
pushf
sbb
xchg
add
add
adc
adc
adc
adc
adc
xchg
add
add
add
add
add
add
adc
adc
xchg
add
add
add
add
adc
adc
xchg
add
add
inc
add
pusha
add
test
push
rol
add
loopne
jae
pushf
sbb
xchg
add
push
adc
add
push
jae
pushf
sbb
xchg
add
push
jae
pushf
sbb
xchg
add
adc
add
add
sbb
xchg
add
pop
mov
xchg
add
pop
sbb
pushf
sbb
ins
pop
and
jae
pushf
sbb
xchg
add
pop
jmp
je
and
mov
xchg
add
adc
ins
pop
dec
pop
sbb
pushf
sbb
xchg
add
push
rol
adc
adc
adc
adc
push
and
mov
xchg
add
mov
xchg
add
add
repz
adc
push
mov
push
ret
or
adc
push
or
push
or
arpl
add
or
arpl
and
or
arpl
arpl
or
arpl
or
adc
ret
mov
jp
jecxz
and
sub
ret
adc
adc
adc
arpl
or
arpl
rol
xchg
add
dec
sub
fistp
pusha
dec
sub
lea
add
xor
shl
inc
add
add
add
and
lea
das
push
pop
xor
xchg
add
push
xchg
add
push
mov
das
push
mov
xor
mov
das
push
mov
add
push
rol
xor
rol
das
push
aad
das
push
cmp
das
push
inc
add
push
inc
add
push
dec
add
push
dec
add
push
pop
add
adc
das
push
pop
add
push
pop
add
push
popa
add
push
add
dec
push
nop
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
add
push
add
add
add
pop
add
add
add
pop
add
add
add
add
jl
add
xchg
add
je
add
mov
inc
add
mov
add
add
add
add
add
add
add
add
add
add
add
dec
add
fild
in
add
add
add
add
add
add
add
add
add
push
and
pop
xchg
pop
enter
xor
or
or
add
inc
or
or
or
or
or
or
or
or
sbb
push
push
(bad)
sets
cmps
movsx
fisttp
or
sbb
inc
adc
adc
adc
bound
mov
int3
adc
adc
inc
adc
jne
xchg
adc
push
adc
adc
adc
adc
adc
adc
cwde
adc
ss
inc
push
gs
jo
xchg
push
test
rcl
not
pop
pop
xor
ds
js
nop
pop
ret
pop
fcom
in
pop
push
sbb
sbb
pop
sbb
sbb
sbb
sbb
sbb
push
sbb
nop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
jo
test
add
add
add
add
js
mov
sbb
mov
cmp
add
mov
cmp
add
js
mov
add
add
add
add
add
add
add
add
inc
add
add
sbb
dec
add
add
and
add
add
daa
add
sub
imul
add
das
add
xor
js
cmp
jns
cmp
jge
cmp
add
int3
add
add
add
push
xlat
add
add
add
xor
loope
add
inc
pop
add
add
add
add
add
push
iret
add
add
add
xor
aam
add
inc
pop
add
add
add
int3
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
jecxz
add
and
add
add
add
add
add
adc
pop
add
pop
adc
pop
add
sbb
into
pop
add
fist
mov
add
jmp
add
adc
adc
push
adc
clc
adc
push
mov
add
xchg
push
xchg
or
add
add
sbb
sbb
push
xchg
or
add
adc
add
pop
pop
xchg
or
add
add
add
out
pop
xchg
or
add
pop
xchg
or
add
add
and
and
add
mov
call
or
add
and
and
and
or
xchg
or
add
call
or
add
xor
xor
sbb
add
xor
xor
mov
add
retf
sbb
add
pop
pop
add
jge
pop
pop
add
mov
pop
pop
add
xchg
cmp
pop
adc
inc
add
or
inc
add
add
or
add
adc
sbb
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
adc
push
add
add
add
add
add
add
or
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
dec
add
add
add
sbb
add
add
add
and
add
push
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
icebp
add
add
or
inc
add
add
add
add
add
sub
dec
add
add
add
add
das
add
add
xor
push
add
add
add
add
cmp
push
add
add
push
add
add
add
add
add
inc
add
add
aas
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
daa
add
add
sub
jno
add
xor
jae
add
xor
jae
add
xor
jne
add
xor
add
add
add
aaa
add
add
pop
add
add
jae
jnp
add
je
jge
add
jne
jg
add
jbe
add
add
add
sub
add
add
add
add
add
add
add
add
xor
add
ja
inc
add
add
inc
add
add
inc
add
add
dec
add
add
push
add
add
push
add
add
push
add
add
push
add
add
pop
add
add
push
add
jge
jns
jo
ret
add
jb
lahf
add
je
stos
add
jbe
lods
add
js
fild
jnp
add
jnp
test
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
and
sub
sub
das
inc
das
mov
add
xchg
add
add
add
add
pop
add
or
(bad)
pop
or
or
or
or
or
or
or
or
or
adc
add
iret
add
add
add
add
add
add
add
and
and
dec
sub
add
xor
mov
add
mov
add
add
jg
mov
add
add
add
add
das
add
add
das
push
add
loope
mov
add
add
add
add
xor
add
add
add
xor
add
mov
or
adc
and
xor
xor
movs
or
leave
add
movs
or
retf
movs
or
retf
add
cmps
or
int3
add
or
int
and
ins
cmps
or
iret
add
add
cmps
or
push
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
mov
or
add
add
jg
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
cmp
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
push
add
push
add
add
add
add
add
add
add
bound
pusha
add
pusha
add
add
add
add
add
add
add
add
add
and
mov
add
adc
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
pop
add
add
lods
add
add
add
lods
add
lods
add
lods
add
or
add
or
add
or
test
jnp
test
or
test
lea
test
xchg
push
test
xchg
adc
popf
adc
test
adc
add
add
outs
ins
gs
outs
add
jae
gs
add
arpl
ins
imul
imul
popa
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
je
jb
push
outs
imul
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
je
xor
inc
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
gs
cs
gs
arpl
outs
add
jb
outs
add
jne
jb
ins
push
gs
jne
arpl
dec
popa
outs
addr16
addr16
je
jb
bound
add
jae
gs
cs
gs
jne
arpl
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jne
addr16
bound
je
jb
bound
add
jae
gs
cs
imul
imul
jne
imul
jae
addr16
add
gs
inc
dec
inc
inc
outs
popa
jno
ss
gs
cmp
dec
bound
arpl
bound
and
inc
jo
ins
imul
inc
popa
jae
add
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
arpl
jae
data16
push
imul
jae
arpl
and
outs
ins
jo
je
jb
dec
imul
je
push
imul
jae
arpl
inc
gs
arpl
add
ins
add
ja
and
and
and
and
and
and
and
and
and
inc
outs
jb
add
jae
gs
cs
imul
inc
outs
jb
jae
and
and
add
ins
je
arpl
je
gs
gs
je
add
push
arpl
and
add
add
push
jne
add
ins
bound
push
popa
ins
jne
push
jns
add
ja
add
dec
bound
and
add
pop
bound
and
bound
and
arpl
and
and
add
arpl
and
add
jo
add
jae
add
jbe
add
ja
add
js
add
jns
add
jp
add
inc
arpl
and
add
inc
arpl
and
and
add
inc
arpl
and
add
dec
arpl
and
add
dec
arpl
and
add
dec
arpl
and
add
dec
arpl
and
add
pop
arpl
and
add
cmp
and
add
data16
add
je
imul
push
add
add
ins
add
outs
add
outs
add
je
add
ja
add
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
push
add
ins
add
js
add
data16
dec
add
xor
and
add
inc
data16
dec
add
imul
and
add
ins
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
push
add
push
add
push
add
pop
add
bound
and
add
ins
push
add
popa
imul
and
add
push
push
add
outs
imul
je
jb
jae
and
add
inc
imul
and
and
add
dec
imul
and
add
and
push
ins
popa
jb
push
je
arpl
jb
ins
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
add
bound
and
add
push
add
imul
popa
bound
add
inc
push
inc
outs
outs
je
outs
ins
add
dec
push
and
add
push
push
and
add
aaa
push
push
jo
outs
popa
fs
gs
jb
dec
outs
imul
arpl
push
outs
popa
jo
je
jo
ins
imul
je
arpl
add
jae
gs
cs
bound
push
gs
imul
outs
je
arpl
jae
push
jns
je
ins
cs
bound
push
gs
imul
jo
jb
imul
imul
add
push
imul
aaa
imul
imul
ins
ins
add
outs
ins
add
pop
ins
add
pop
ins
add
je
add
ja
add
jns
add
ja
jb
fs
jns
je
jb
bound
add
popa
jb
inc
jae
gs
bound
inc
je
jb
bound
gs
arpl
outs
jb
inc
jae
gs
bound
inc
gs
js
arpl
imul
ins
bound
addr16
dec
outs
arpl
imul
pop
inc
jne
ins
dec
popa
ins
add
fs
imul
jb
je
inc
js
gs
imul
je
ins
cs
arpl
imul
dec
push
inc
dec
je
push
addr16
imul
outs
dec
inc
inc
pop
jns
push
dec
ja
ins
outs
add
add
data16
add
gs
and
inc
js
gs
imul
and
and
and
and
push
dec
aaa
jo
cmp
jb
imul
fs
gs
add
push
jo
ins
je
xor
jbe
imul
inc
jo
ins
imul
add
bound
jb
imul
add
outs
add
jne
ins
jae
push
jne
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
jo
inc
gs
popa
jae
inc
outs
fs
jno
push
jns
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
jb
push
outs
push
je
imul
and
and
arpl
popa
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
and
dec
je
pop
xor
push
dec
xor
fs
pop
xor
add
push
push
pop
cmp
inc
outs
push
inc
imul
js
inc
gs
outs
jae
popa
outs
arpl
outs
xor
jae
jno
xor
imul
inc
imul
inc
arpl
outs
dec
inc
add
xor
dec
jns
arpl
push
jns
push
jae
jp
addr16
popa
dec
push
jb
push
imul
add
cmp
jns
dec
jb
jo
outs
bound
inc
pop
dec
add
jns
jb
inc
ins
inc
dec
outs
inc
jo
xor
add
inc
push
inc
fs
xor
push
push
ins
ss
ins
add
xor
push
dec
jbe
aaa
ja
dec
dec
xor
dec
ja
dec
je
push
xor
push
push
dec
jns
arpl
add
xor
fs
jne
push
jbe
inc
xor
add
dec
add
outs
je
js
push
popa
ins
jne
pusha
xor
dec
imul
je
push
imul
jae
arpl
dec
jns
gs
imul
je
jb
popa
ins
add
je
push
popa
ins
jne
add
je
push
popa
ins
jne
add
imul
inc
push
xor
xor
push
push
ss
js
dec
push
dec
jae
dec
dec
imul
je
inc
push
dec
inc
outs
outs
je
imul
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
dec
add
dec
add
jo
jae
add
imul
ins
add
push
add
jp
inc
add
jae
gs
cs
jb
ja
outs
add
jp
add
jae
outs
fs
popa
jns
jne
add
outs
ins
add
outs
je
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
jae
je
inc
ins
imul
add
je
inc
jne
outs
push
arpl
gs
outs
fs
je
push
arpl
gs
outs
fs
je
dec
popa
ins
add
je
push
gs
add
jae
ins
gs
popa
jns
jne
add
cmp
inc
fs
push
outs
jae
fs
push
push
jae
add
data16
push
js
push
xor
xor
dec
inc
dec
add
push
add
push
add
push
add
jb
push
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
je
gs
gs
je
inc
outs
jb
jne
arpl
outs
push
outs
imul
gs
gs
je
add
je
je
add
push
add
inc
add
pop
add
addr16
bound
arpl
popa
jb
gs
gs
outs
add
imul
add
jae
outs
arpl
jae
ins
je
dec
imul
je
inc
jae
outs
arpl
ins
ins
bound
imul
gs
gs
je
inc
popa
ins
ins
bound
imul
gs
gs
je
inc
jae
outs
arpl
popa
je
add
fs
outs
jbe
imul
gs
gs
je
inc
jae
outs
arpl
jae
ins
je
dec
outs
jbe
imul
push
arpl
and
add
push
arpl
and
and
add
outs
je
xor
push
push
add
jae
gs
cs
push
imul
pop
inc
jne
jb
outs
je
push
add
je
dec
jae
popa
arpl
jb
jne
add
outs
jbe
jb
imul
add
push
arpl
dec
cmp
gs
ja
dec
xor
xor
push
outs
add
xor
dec
js
jne
imul
popa
push
add
ins
jne
pop
pop
add
cmp
and
add
popa
bound
and
add
arpl
and
and
add
bound
and
add
imul
and
add
ins
bound
and
add
outs
bound
and
add
jno
add
jb
add
je
add
jae
add
je
add
jne
add
jbe
add
js
add
jns
add
jp
add
inc
bound
and
add
inc
bound
and
and
add
inc
bound
and
add
dec
bound
and
add
dec
bound
and
add
jp
dec
data16
ins
outs
arpl
ins
outs
bound
add
jo
add
jb
outs
push
je
jne
je
jb
add
gs
inc
ins
outs
bound
add
inc
dec
je
ins
imul
ins
inc
inc
xor
dec
xor
outs
jno
pop
popa
xor
xor
xor
inc
jb
popa
je
push
push
add
gs
je
push
jb
arpl
jae
outs
outs
add
imul
add
imul
jae
dec
outs
popa
fs
ins
ins
add
ins
outs
popa
fs
ins
ins
add
jne
push
je
imul
dec
outs
outs
add
dec
bound
and
add
dec
bound
and
add
push
bound
and
add
push
bound
and
and
add
push
bound
and
add
pop
bound
and
bound
and
bound
and
bound
and
add
bound
and
bound
and
bound
and
bound
and
add
arpl
and
add
push
arpl
push
dec
outs
je
add
push
add
ins
arpl
and
add
outs
arpl
and
add
jno
add
jb
add
je
add
jne
add
fs
jae
add
imul
gs
jb
je
arpl
jo
ins
dec
ins
fs
jb
je
arpl
push
jb
arpl
jae
fs
fs
jae
add
imul
ins
imul
dec
popa
ins
add
ins
ins
popa
outs
fs
imul
arpl
jae
je
jb
bound
gs
je
jb
popa
fs
je
jb
bound
gs
imul
dec
popa
outs
fs
gs
arpl
popa
je
outs
outs
inc
ins
popa
addr16
outs
jbe
jb
outs
ins
outs
je
arpl
jb
outs
je
imul
jns
jae
popa
jb
jne
dec
outs
outs
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
add
outs
arpl
jae
bound
gs
fs
jae
add
data16
bound
data16
imul
gs
gs
add
je
jae
jb
je
outs
add
gs
add
outs
je
js
add
outs
fs
add
fs
jae
add
addr16
add
add
outs
je
arpl
jne
jo
outs
fs
outs
jne
je
fs
jb
arpl
jae
add
bound
inc
jbe
outs
je
fs
imul
outs
fs
fs
push
dec
add
outs
outs
je
outs
jne
push
je
je
jae
dec
popa
outs
fs
add
arpl
imul
ins
popa
je
outs
outs
add
arpl
imul
imul
dec
outs
addr16
add
dec
outs
addr16
dec
gs
push
push
popa
jb
ins
gs
jb
push
pop
jo
push
inc
xor
push
fs
jbe
popa
push
dec
addr16
ja
xor
pop
pop
fs
add
xor
inc
imul
jb
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
and
outs
arpl
jae
inc
gs
jne
jb
outs
je
jb
arpl
jae
addr16
dec
popa
imul
add
outs
arpl
jae
outs
fs
add
je
dec
outs
fs
gs
popa
ins
add
outs
ja
jb
outs
jo
inc
jno
popa
ins
imul
jae
addr16
inc
push
inc
aaa
ss
popa
dec
dec
dec
add
js
aaa
push
addr16
inc
dec
xor
push
outs
pop
bound
dec
add
push
bound
jo
imul
add
cmp
push
gs
imul
add
bound
arpl
fs
jb
outs
addr16
jne
ins
fs
push
jns
je
ins
cs
gs
add
jo
outs
add
pop
dec
outs
gs
popa
ins
imul
dec
outs
addr16
add
jae
ins
bound
jne
ins
dec
popa
ins
add
popa
jb
push
jne
jae
jb
outs
add
jo
jns
push
jo
imul
jae
imul
add
outs
jo
dec
xor
push
xor
xor
cmp
add
xor
inc
inc
addr16
ja
cmp
inc
add
jo
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
push
gs
jne
arpl
gs
ins
jbe
add
jae
ins
jbe
inc
jbe
outs
je
jb
jae
dec
outs
outs
imul
gs
dec
outs
popa
add
je
popa
outs
imul
jae
jne
arpl
popa
ins
gs
inc
js
je
addr16
dec
popa
ins
add
popa
arpl
jb
ins
add
popa
arpl
jb
arpl
inc
gs
jb
ins
gs
inc
gs
gs
outs
add
je
outs
fs
popa
jae
add
ins
bound
dec
outs
outs
add
je
dec
outs
fs
add
fs
add
je
inc
jae
gs
bound
ja
addr16
dec
xor
aaa
jno
pop
push
ins
push
inc
add
jno
imul
push
dec
dec
inc
jb
js
add
push
add
outs
arpl
add
imul
je
dec
popa
push
jb
and
arpl
inc
push
push
inc
outs
jo
inc
dec
inc
xor
inc
imul
inc
js
push
jns
jns
pop
push
ins
ja
bound
add
jo
popa
ins
add
push
jb
gs
imul
dec
popa
ins
gs
imul
jae
outs
outs
add
jo
add
jno
add
xor
xor
imul
dec
imul
push
outs
outs
addr16
inc
cmp
dec
xor
push
push
add
bound
jns
jo
ins
imul
add
ja
jne
imul
jo
ins
imul
add
jne
add
jbe
add
js
add
jns
add
jp
add
inc
add
inc
add
inc
add
inc
add
inc
gs
popa
ins
jne
add
arpl
imul
pop
push
push
inc
cmp
inc
gs
je
imul
jbe
jb
add
outs
ins
inc
popa
jae
ss
je
imul
gs
add
add
jb
popa
ins
add
outs
je
xor
inc
gs
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
je
xor
push
gs
add
outs
jae
add
jbe
jb
addr16
cmp
dec
jbe
ins
pop
inc
arpl
push
push
dec
arpl
dec
inc
jne
cmp
dec
dec
inc
pop
push
add
dec
add
xor
add
xor
add
aaa
add
cmp
cmp
popa
add
bound
and
add
fs
gs
add
push
add
je
jae
dec
outs
imul
inc
jb
popa
jns
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
dec
imul
xor
arpl
jb
push
add
outs
push
xor
push
xor
dec
dec
add
ins
add
outs
add
outs
add
push
add
jo
add
jb
add
jae
add
je
add
js
ins
push
addr16
push
aaa
xor
dec
dec
push
inc
add
jno
xor
dec
aaa
dec
ss
imul
inc
jbe
imul
je
add
popa
imul
je
jae
dec
jae
gs
je
and
add
inc
add
js
pop
push
ins
ja
jno
dec
push
js
jo
inc
add
cmp
addr16
jns
pop
dec
xor
xor
xor
dec
outs
je
add
dec
add
dec
add
fs
outs
addr16
jae
ss
data16
bound
aaa
dec
ins
push
inc
push
add
popa
jo
dec
imul
push
jb
jne
add
push
add
push
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
push
add
pop
add
pop
add
pop
add
xor
inc
jns
jne
bound
addr16
je
inc
jae
xor
add
xor
xor
push
dec
push
data16
inc
dec
aaa
inc
add
cmp
and
add
popa
data16
bound
and
add
data16
jb
dec
imul
inc
jae
outs
xor
inc
push
add
push
push
outs
addr16
push
jne
jae
arpl
push
inc
dec
add
popa
ins
dec
jne
add
inc
imul
add
outs
data16
outs
data16
jo
add
jno
add
jb
add
jae
add
je
add
jne
add
jbe
add
ja
add
outs
imul
dec
jno
xor
dec
fs
inc
jae
inc
dec
add
bound
outs
dec
fs
bound
inc
push
push
xor
jo
and
add
jbe
add
dec
data16
dec
data16
dec
data16
dec
data16
dec
data16
dec
data16
gs
gs
jae
ins
imul
add
js
outs
addr16
add
outs
dec
ja
addr16
xor
push
pop
push
gs
dec
data16
jbe
fs
xor
push
xor
outs
inc
jno
jb
and
data16
xor
and
data16
xor
add
xor
data16
aaa
data16
cmp
and
data16
popa
add
bound
and
add
add
add
jbe
ins
js
jp
inc
addr16
imul
imul
inc
jno
push
push
dec
jb
imul
push
js
push
jbe
bound
and
add
push
add
imul
ins
add
ins
add
jo
add
jae
add
fs
inc
inc
jb
push
jns
dec
dec
inc
aaa
pop
pop
jno
add
push
popa
inc
dec
jb
dec
jbe
popa
push
js
pop
jno
dec
add
je
outs
jne
je
dec
jae
ins
jne
push
push
jb
inc
js
fs
ja
gs
jne
ins
outs
ins
js
pop
jb
ss
jno
push
dec
add
ja
add
js
add
jns
add
jp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
xor
dec
push
bound
outs
js
add
jae
gs
cs
gs
and
add
add
jne
add
je
jb
outs
arpl
add
ins
jo
jb
inc
js
push
add
ins
bound
add
aaa
add
ins
outs
jbe
add
xor
jb
dec
dec
jb
ja
jae
aaa
xor
push
data16
dec
pop
jb
dec
inc
xor
dec
push
push
push
jo
jbe
push
outs
imul
jb
inc
gs
imul
arpl
and
and
add
pushw
addr16
outs
jb
push
outs
fs
outs
arpl
jo
gs
popa
je
add
jb
imul
je
imul
outs
outs
inc
ins
popa
imul
addr16
and
add
imul
jns
gs
push
cmp
dec
xor
dec
inc
xor
addr16
ins
inc
add
push
xor
jb
gs
inc
inc
push
ins
add
imul
ins
push
dec
inc
ja
fs
imul
xor
pop
cmp
aaa
jae
js
jbe
push
jb
js
inc
push
outs
add
outs
push
add
jo
add
jno
add
popa
imul
jae
popa
jo
inc
jb
outs
fs
jns
popa
ins
add
imul
fs
jns
jne
bound
add
jb
add
jae
add
je
add
push
inc
dec
jb
jno
push
ss
imul
dec
push
ins
xor
dec
imul
ss
jns
xor
inc
jne
ins
fs
jb
outs
fs
jns
jne
bound
add
jo
jb
outs
fs
jns
popa
ins
add
popa
imul
jae
and
add
inc
push
add
inc
push
add
inc
push
add
ins
push
jb
je
jb
push
jns
je
ins
cs
ins
ins
add
inc
push
je
xor
and
add
dec
push
add
dec
push
add
dec
push
add
dec
push
outs
je
popa
outs
fs
gs
jne
gs
add
jb
outs
je
js
gs
imul
js
add
jo
gs
and
add
gs
fs
outs
outs
add
push
push
pop
dec
jae
je
je
arpl
inc
gs
jb
popa
jns
popa
outs
imul
jb
je
inc
je
jb
bound
gs
je
imul
inc
ins
gs
outs
je
jns
add
je
dec
jae
jns
data16
je
dec
jae
outs
imul
gs
dec
jae
jb
popa
jns
addr16
inc
imul
add
je
dec
popa
jae
ins
gs
outs
je
jns
add
je
jns
add
je
dec
jae
jb
ins
imul
outs
je
je
add
je
dec
jae
popa
ins
jne
push
jns
add
je
dec
jae
outs
jne
add
push
push
pop
dec
je
ins
add
data16
outs
arpl
jno
popa
ins
jae
addr16
inc
outs
jne
je
and
and
add
push
push
pop
dec
popa
outs
imul
fs
add
je
dec
outs
fs
gs
gs
imul
gs
dec
gs
fs
je
push
outs
imul
and
add
outs
je
imul
inc
gs
popa
ins
add
jae
ins
bound
popa
ins
add
je
dec
popa
ins
gs
popa
arpl
dec
popa
jae
dec
outs
fs
data16
jo
popa
arpl
and
add
outs
ins
ins
arpl
outs
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
inc
popa
je
push
imul
ins
gs
je
jb
dec
gs
outs
ins
ins
arpl
outs
add
outs
jne
gs
je
jb
push
push
inc
cmp
arpl
imul
push
gs
push
jb
je
jb
push
jb
je
push
je
jb
inc
outs
arpl
outs
je
addr16
dec
outs
ja
dec
gs
jne
add
gs
jb
addr16
inc
outs
fs
popa
jae
add
je
dec
gs
add
je
outs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
dec
outs
jbe
dec
gs
add
jbe
jb
outs
ins
outs
je
addr16
push
gs
imul
je
inc
ins
gs
outs
je
je
imul
pop
dec
push
push
gs
imul
jb
je
outs
addr16
jns
je
ins
add
je
push
ins
popa
je
outs
jb
add
popa
je
outs
jb
dec
inc
add
je
dec
outs
outs
gs
js
gs
imul
gs
add
je
inc
popa
je
add
imul
jb
add
outs
je
imul
jne
gs
bound
inc
gs
imul
je
popa
ins
jne
add
je
dec
gs
popa
add
imul
arpl
outs
je
inc
ins
jne
push
jb
popa
jns
and
push
inc
jne
je
ins
inc
je
jb
bound
gs
inc
outs
jb
popa
je
addr16
push
popa
outs
imul
gs
outs
addr16
add
xor
and
push
pop
dec
jae
imul
gs
dec
jae
outs
imul
gs
inc
popa
jae
push
jns
add
je
imul
imul
ins
popa
addr16
and
je
inc
jb
ins
gs
outs
jne
je
inc
gs
jb
ins
add
je
dec
dec
data16
je
push
push
inc
bound
je
js
gs
imul
add
aaa
push
add
cmp
inc
outs
jns
pop
jb
jno
inc
push
fs
gs
ins
push
add
push
push
je
jb
xor
jne
cmp
arpl
add
je
ins
inc
js
gs
imul
jne
addr16
popa
jne
arpl
add
xor
add
push
add
bound
imul
add
ins
gs
outs
outs
add
ins
gs
je
gs
ins
add
je
add
je
imul
inc
imul
add
ins
gs
outs
fs
ins
gs
arpl
jae
add
ins
gs
push
push
outs
inc
popa
jae
ss
je
imul
fs
gs
push
jae
xor
cmp
dec
ins
xor
dec
push
push
ss
jne
xor
jno
pop
je
dec
xor
pop
cmp
and
add
imul
ins
bound
inc
add
push
inc
push
dec
jb
bound
inc
aaa
aaa
push
outs
push
push
push
add
je
xor
jb
dec
xor
cmp
xor
xor
and
add
imul
imul
popa
jb
popa
bound
inc
jbe
outs
dec
dec
add
cmp
xor
bound
jb
fs
add
inc
ins
jo
jns
and
add
push
add
imul
add
jb
je
gs
ins
add
ins
imul
push
jae
dec
jae
pop
dec
arpl
imul
dec
jbe
jb
inc
jne
dec
inc
ins
ins
inc
push
pop
pop
add
jb
je
gs
ins
add
ins
imul
ins
inc
js
gs
imul
arpl
dec
inc
pop
push
jns
push
push
bound
add
inc
imul
inc
ja
outs
jo
push
dec
je
outs
bound
arpl
gs
outs
add
outs
fs
add
ins
ins
bound
imul
gs
ins
je
and
add
jno
add
jb
add
jae
add
je
add
jne
add
jbe
add
ja
add
js
add
jns
add
jp
add
inc
imul
jo
imul
ss
jb
inc
dec
cmp
addr16
je
inc
data16
gs
jns
jb
dec
inc
xor
js
push
add
outs
inc
bound
add
outs
push
outs
fs
gs
jb
add
outs
ja
outs
outs
je
outs
jne
inc
push
outs
js
inc
popa
outs
inc
outs
outs
je
outs
jne
add
push
outs
inc
outs
outs
je
outs
jne
add
popa
je
jb
dec
popa
ins
add
inc
imul
and
add
dec
imul
and
add
dec
imul
jae
arpl
imul
je
outs
outs
add
outs
inc
outs
outs
je
outs
jne
add
arpl
imul
add
ins
js
push
jb
xor
dec
ja
xor
jb
add
dec
jo
addr16
jo
xor
push
jb
jne
push
arpl
imul
add
jo
jb
inc
js
gs
imul
add
dec
imul
and
add
push
imul
and
add
push
imul
add
jb
jb
gs
popa
add
jo
jb
dec
add
cmp
xor
xor
xor
jne
add
xor
push
ins
jb
jns
dec
arpl
dec
push
arpl
push
je
jo
inc
popa
imul
outs
jb
gs
popa
add
jo
jb
dec
inc
add
push
imul
and
add
xor
jp
add
inc
ins
add
inc
ins
add
inc
ins
add
inc
ins
add
dec
add
dec
add
je
jne
ins
imul
inc
ins
add
jp
add
inc
ins
add
jb
outs
addr16
popa
ins
gs
imul
gs
gs
imul
outs
outs
inc
js
ins
jae
outs
jb
imul
ins
ins
add
inc
ins
add
dec
ins
add
pop
add
pop
add
xor
push
ins
gs
push
jb
push
arpl
je
add
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
je
jb
push
arpl
jb
jb
inc
ins
gs
jb
jb
push
arpl
jb
jb
inc
inc
add
ins
ins
arpl
gs
jb
arpl
jae
jns
add
ins
ins
add
dec
ins
add
inc
add
imul
inc
add
dec
ins
add
gs
jae
je
inc
outs
popa
bound
add
data16
jae
add
dec
ins
add
jb
popa
ins
push
jb
je
jb
dec
outs
je
jb
arpl
outs
add
jbe
jb
outs
add
arpl
jns
inc
jb
popa
je
inc
imul
jns
inc
imul
jns
outs
outs
add
je
inc
js
arpl
popa
bound
popa
je
add
je
push
je
jb
dec
outs
outs
add
outs
arpl
jae
je
jb
dec
outs
outs
add
je
inc
imul
jae
je
push
gs
popa
outs
fs
jb
dec
jne
jo
je
jae
je
push
gs
popa
outs
fs
jb
dec
outs
jo
je
jae
je
push
jae
push
push
js
arpl
add
je
inc
jb
popa
je
dec
outs
push
imul
gs
push
gs
popa
outs
fs
jb
inc
jb
outs
jb
push
je
jb
add
je
push
je
outs
fs
jb
dec
outs
jo
je
inc
jb
popa
je
dec
bound
arpl
gs
popa
je
inc
imul
dec
popa
je
inc
gs
dec
popa
je
push
gs
dec
popa
je
inc
popa
ins
ins
add
imul
outs
jbe
jb
imul
je
dec
gs
imul
je
add
imul
je
inc
jb
popa
je
push
jb
push
arpl
jb
jb
and
and
add
je
gs
jo
imul
and
add
dec
ins
add
push
ins
add
jbe
ins
imul
imul
jo
imul
add
pop
imul
and
add
push
ins
add
inc
data16
inc
data16
inc
data16
inc
data16
push
ins
add
je
add
js
dec
imul
and
add
inc
data16
pop
ins
add
pop
ins
add
pop
ins
add
xor
and
add
xor
and
add
dec
outs
je
xor
inc
jne
data16
inc
ins
outs
arpl
outs
jo
add
gs
fs
je
jb
add
je
outs
outs
jbe
jb
gs
push
outs
dec
outs
je
add
dec
jne
ins
dec
jb
ins
jo
jns
pop
gs
add
xor
and
ins
add
xor
add
xor
and
add
ss
add
xor
and
ins
add
inc
imul
inc
imul
inc
imul
inc
imul
inc
imul
jb
ja
gs
add
gs
xor
and
ins
add
xor
and
imul
and
add
xor
imul
and
ins
add
popa
outs
add
dec
imul
jb
jo
imul
je
and
add
push
imul
gs
jae
jb
push
je
imul
ins
imul
pop
dec
imul
outs
add
gs
je
jb
add
ins
jo
jb
push
je
imul
add
je
popa
jo
and
add
outs
add
outs
add
jno
add
jb
add
data16
add
outs
add
jb
jo
outs
push
jb
outs
jae
outs
jb
add
jae
gs
cs
arpl
imul
je
addr16
jo
jns
and
add
ins
ins
gs
imul
imul
outs
fs
gs
dec
popa
outs
popa
gs
gs
je
inc
outs
arpl
jo
outs
jb
inc
jb
popa
je
inc
arpl
jo
outs
jb
and
add
imul
outs
outs
inc
popa
jae
add
je
inc
ins
popa
je
je
ins
add
popa
je
je
ins
add
je
push
imul
pop
dec
gs
addr16
push
imul
outs
je
jae
je
dec
outs
arpl
imul
pop
push
popa
bound
fs
popa
fs
inc
ins
imul
pop
inc
outs
arpl
jb
inc
outs
arpl
jb
je
ins
gs
addr16
push
imul
pop
push
imul
jae
je
inc
outs
arpl
inc
outs
arpl
je
ins
add
je
inc
outs
outs
je
outs
ins
jae
inc
outs
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
fs
popa
outs
add
je
inc
outs
jb
inc
outs
jb
gs
je
ins
add
jb
inc
outs
jb
gs
je
ins
add
je
push
push
push
popa
jae
bound
add
je
dec
imul
inc
outs
js
jae
je
dec
popa
js
ins
imul
jae
je
push
je
jb
push
outs
jae
je
outs
outs
add
jb
push
je
jb
push
outs
jae
je
outs
outs
add
je
push
gs
add
je
push
outs
jo
outs
jae
add
imul
outs
outs
je
push
gs
outs
jne
fs
jae
je
inc
jne
outs
push
arpl
gs
popa
jae
push
imul
pop
inc
outs
outs
je
outs
ins
inc
outs
js
inc
push
outs
js
popa
fs
inc
push
fs
push
add
outs
je
je
ins
add
popa
jo
imul
add
je
inc
outs
outs
je
and
add
imul
gs
gs
inc
imul
gs
xor
add
ins
outs
add
ins
outs
add
push
gs
js
gs
imul
je
popa
outs
fs
gs
popa
fs
push
outs
push
gs
js
gs
imul
gs
fs
js
gs
imul
je
popa
outs
fs
gs
popa
fs
push
push
inc
js
gs
imul
add
outs
outs
add
outs
ins
dec
popa
outs
fs
add
outs
outs
add
aaa
arpl
and
add
imul
and
add
jb
add
inc
add
inc
add
je
inc
gs
jne
je
push
je
ins
jae
inc
outs
jo
inc
jb
popa
jns
and
add
je
add
addr16
push
outs
add
jbe
add
jns
add
ja
add
je
dec
imul
outs
add
pop
push
pop
inc
push
and
add
jp
add
inc
outs
add
gs
add
inc
outs
add
popa
fs
jns
add
inc
outs
add
push
add
fs
imul
add
inc
outs
add
inc
outs
add
inc
outs
add
ins
imul
ins
imul
jns
add
imul
je
jo
bound
imul
je
arpl
add
je
push
jb
js
add
inc
outs
add
pop
push
and
add
dec
outs
add
je
jae
gs
bound
jae
and
add
jae
jne
arpl
popa
outs
popa
addr16
inc
outs
fs
jo
add
outs
arpl
outs
popa
je
dec
bound
arpl
outs
outs
imul
outs
ins
jo
jb
dec
bound
arpl
jne
ins
add
je
bound
arpl
dec
outs
add
dec
outs
add
dec
outs
add
dec
outs
add
dec
outs
add
je
inc
jne
outs
inc
ins
jne
push
je
jb
je
jb
push
push
inc
jo
push
imul
add
push
outs
add
push
outs
add
push
outs
add
popa
push
and
add
push
outs
add
jno
add
push
outs
add
je
dec
popa
jae
js
je
add
push
outs
add
inc
add
jns
je
push
je
gs
ins
add
arpl
cmp
cmp
imul
jae
addr16
inc
push
inc
dec
dec
add
je
dec
outs
fs
jo
gs
outs
fs
jns
je
push
je
gs
ins
dec
outs
fs
push
outs
add
pop
outs
add
pop
outs
add
ja
add
addr16
outs
je
jne
dec
push
popa
outs
addr16
js
gs
imul
add
jo
imul
inc
js
gs
imul
add
data16
xor
pop
ins
ins
push
jne
ins
imul
ins
add
popa
jo
js
gs
imul
jbe
jb
popa
jne
je
outs
fs
xor
and
push
pop
push
je
arpl
jb
arpl
dec
outs
fs
data16
xor
and
add
js
add
jns
add
jp
add
inc
imul
js
jb
arpl
outs
outs
inc
js
jae
gs
ins
xor
add
xor
add
ins
gs
je
jb
bound
gs
jae
je
push
imul
jns
add
outs
arpl
jae
imul
jns
add
je
je
jb
bound
gs
and
outs
add
aaa
outs
add
cmp
and
outs
add
xor
and
arpl
and
add
jbe
inc
imul
outs
add
bound
inc
jb
popa
je
inc
jb
jo
imul
pop
inc
outs
outs
je
and
add
outs
add
je
jb
arpl
jae
jae
jns
popa
ins
add
je
push
outs
jb
imul
xor
dec
gs
popa
addr16
outs
js
push
push
imul
jae
ins
je
and
add
push
data16
outs
add
outs
add
dec
data16
push
outs
add
push
add
outs
add
imul
ins
outs
add
ins
outs
add
outs
outs
add
outs
outs
je
push
gs
gs
jae
dec
arpl
inc
gs
arpl
push
arpl
ins
add
outs
outs
add
jo
add
jno
add
jb
add
cmp
dec
imul
jae
pusha
xor
jae
je
dec
je
ins
add
fs
popa
jae
add
imul
imul
pusha
xor
and
add
je
add
jne
add
xor
and
add
dec
data16
push
data16
ja
add
jb
add
jae
add
imul
jns
dec
imul
je
push
imul
imul
outs
arpl
dec
popa
arpl
outs
add
outs
push
jne
dec
gs
and
add
outs
add
jns
add
jp
add
inc
outs
add
inc
outs
add
js
add
inc
outs
add
inc
outs
add
fs
inc
jae
gs
bound
gs
ins
jbe
add
inc
outs
add
xor
addr16
dec
outs
fs
gs
push
jb
arpl
jae
outs
fs
gs
outs
ins
ins
arpl
outs
add
popa
fs
outs
ins
jns
outs
ins
ins
arpl
outs
inc
popa
jae
add
je
inc
popa
jae
inc
fs
jae
add
inc
outs
add
arpl
inc
gs
gs
jo
popa
je
add
outs
push
jb
je
add
fs
imul
dec
outs
popa
fs
js
gs
imul
dec
ins
popa
addr16
outs
jb
popa
je
js
gs
imul
add
cmp
addr16
pop
gs
jb
addr16
dec
outs
outs
je
add
je
inc
popa
jns
addr16
dec
outs
jne
add
je
dec
imul
gs
push
arpl
add
je
push
outs
jae
je
outs
outs
add
imul
gs
imul
push
outs
jae
je
outs
outs
add
outs
jae
outs
jb
inc
imul
arpl
and
add
dec
outs
add
dec
add
dec
outs
add
dec
outs
add
inc
imul
gs
arpl
push
arpl
imul
ins
add
dec
outs
add
je
gs
imul
gs
gs
xor
cs
ins
ins
add
dec
outs
add
dec
outs
add
dec
outs
add
push
outs
add
push
outs
add
je
popa
ins
ins
imul
ins
bound
inc
outs
jb
popa
je
js
gs
imul
add
push
outs
add
push
outs
add
push
outs
add
xor
and
push
jb
arpl
fs
jae
add
jb
gs
xor
cs
ins
add
push
outs
add
outs
je
xor
push
inc
jns
add
outs
je
xor
push
outs
push
dec
outs
je
xor
and
add
push
add
inc
inc
jb
jo
outs
push
gs
imul
imul
ins
ins
gs
imul
imul
ins
pop
ins
ins
push
je
imul
gs
je
dec
gs
inc
outs
gs
je
dec
push
add
je
dec
gs
addr16
dec
push
add
arpl
jo
add
jns
add
jne
push
ins
inc
ins
outs
arpl
inc
jb
jo
outs
addr16
jo
imul
je
outs
outs
add
pop
outs
add
pop
outs
add
pop
outs
add
xor
and
add
xor
and
outs
add
jbe
add
xor
and
add
je
jns
je
ins
dec
gs
imul
jb
xor
fs
ins
add
xor
add
xor
outs
add
aaa
outs
add
cmp
and
add
je
jns
je
ins
dec
outs
outs
add
cmp
and
add
bound
and
add
fs
and
add
data16
and
add
inc
jb
jo
outs
push
gs
imul
imul
add
imul
ins
add
push
add
imul
ins
jo
and
add
popa
push
jbe
jb
bound
outs
xor
pushw
inc
add
inc
cmp
pop
xor
pushw
jb
outs
jbe
dec
gs
outs
fs
inc
add
push
arpl
dec
dec
dec
data16
je
inc
js
gs
imul
imul
push
dec
bound
arpl
je
add
jb
popa
ins
imul
dec
outs
outs
add
jae
gs
cs
jne
je
ins
gs
gs
popa
ins
imul
add
outs
add
jb
popa
ins
imul
gs
add
fs
popa
ins
jne
add
je
outs
je
xor
ins
gs
outs
fs
inc
add
push
arpl
imul
add
arpl
je
outs
outs
push
je
arpl
gs
push
cmp
pop
cmp
push
dec
inc
aaa
fs
inc
add
inc
xor
pop
jb
jae
ins
aaa
ins
je
dec
push
cmp
dec
push
gs
popa
ins
imul
jae
and
add
inc
outs
outs
je
push
add
push
push
gs
jp
add
imul
js
inc
push
add
je
push
jae
dec
outs
gs
outs
outs
imul
fs
arpl
inc
ja
push
dec
add
jae
jns
ss
push
push
jne
inc
push
xor
and
and
add
popa
add
outs
push
and
add
jo
add
jno
add
jb
add
jae
add
je
add
jne
add
jbe
add
ja
add
js
add
popa
ins
gs
outs
jb
add
jns
add
imul
je
jb
jae
dec
outs
push
popa
imul
pop
inc
jb
jo
imul
ja
ins
popa
add
ins
jo
outs
outs
je
addr16
inc
gs
outs
dec
outs
fs
je
push
popa
bound
outs
jo
jae
je
dec
outs
je
jb
popa
ins
add
fs
push
imul
push
je
ins
add
outs
je
outs
ins
push
je
ins
gs
je
js
add
jp
add
push
push
xor
pop
cmp
je
dec
ins
ss
dec
push
push
jae
jns
je
xor
pop
inc
fs
addr16
add
je
and
add
inc
push
and
and
add
inc
push
and
add
dec
push
and
add
je
push
imul
je
inc
outs
je
outs
ins
add
ja
arpl
add
jae
gs
push
outs
jae
addr16
inc
outs
outs
je
outs
ins
inc
popa
jb
add
outs
add
je
inc
ins
imul
add
ja
imul
pop
inc
outs
outs
je
outs
ins
dec
imul
push
jae
gs
inc
outs
ins
outs
jb
add
je
push
imul
outs
ins
outs
jb
jae
je
inc
popa
arpl
outs
ins
outs
jb
inc
imul
xor
je
inc
push
inc
ins
xor
add
inc
bound
inc
imul
bound
push
inc
xor
arpl
push
je
je
add
dec
push
and
add
push
push
push
imul
outs
js
and
add
ins
push
imul
jae
je
dec
ins
popa
add
je
outs
outs
ins
push
imul
push
imul
add
arpl
gs
outs
js
imul
add
jb
outs
jb
add
je
dec
popa
outs
add
jb
outs
jb
jae
je
inc
jne
jae
jb
inc
xor
ins
jbe
jae
push
jno
push
inc
data16
add
xor
popa
pop
dec
inc
fs
jne
js
dec
pop
xor
add
push
push
and
add
push
push
and
add
push
imul
push
add
je
push
imul
push
gs
ins
imul
push
dec
pop
jne
jbe
xor
outs
push
pop
dec
xor
popa
aaa
imul
push
inc
push
xor
jno
dec
push
add
xor
and
push
and
push
and
add
xor
push
and
push
inc
gs
jns
gs
and
push
push
push
inc
js
gs
imul
je
jb
jae
addr16
inc
js
gs
imul
add
push
gs
js
gs
imul
je
jb
jae
addr16
inc
js
gs
imul
arpl
gs
dec
jae
gs
imul
add
bound
and
add
imul
gs
jb
jo
jb
jns
push
jb
jo
jb
jns
outs
outs
add
je
gs
gs
outs
add
je
outs
fs
outs
outs
add
je
inc
js
je
outs
fs
imul
imul
imul
push
inc
outs
outs
ins
gs
outs
add
outs
inc
pop
push
pop
xor
cmp
outs
jo
ins
add
cmp
pop
push
inc
inc
dec
dec
data16
dec
popa
outs
fs
gs
push
bound
imul
je
arpl
add
je
push
imul
jae
je
push
jb
add
je
gs
gs
push
dec
add
outs
jae
dec
inc
add
je
bound
jno
gs
add
bound
jno
gs
add
imul
dec
je
jo
bound
jno
gs
add
je
push
gs
imul
je
push
gs
imul
je
jae
je
inc
js
arpl
xor
outs
je
outs
jne
add
addr16
arpl
inc
inc
arpl
imul
add
xor
dec
inc
pop
inc
xor
inc
push
pop
dec
push
outs
arpl
jae
jb
gs
jb
add
ins
outs
popa
fs
gs
jb
xor
fs
je
add
popa
imul
dec
pop
jno
dec
ins
push
cmp
dec
dec
dec
push
add
jae
push
push
pop
jbe
bound
fs
cmp
add
imul
and
add
jno
dec
push
pop
aaa
xor
push
jno
push
xor
inc
add
push
push
dec
jo
popa
pop
imul
add
jne
add
jbe
add
dec
imul
dec
imul
dec
imul
dec
imul
dec
imul
ss
push
jbe
pop
push
jbe
inc
push
arpl
dec
js
dec
add
pop
pop
dec
fs
push
xor
dec
je
inc
cmp
push
add
jb
imul
add
pop
ss
dec
jae
gs
gs
xor
dec
jae
outs
jb
jae
popa
je
outs
outs
add
jb
imul
add
push
imul
push
imul
push
imul
push
imul
arpl
ins
add
je
push
outs
jo
imul
jb
pop
push
ja
je
push
arpl
push
gs
add
ss
inc
xor
push
xor
inc
xor
jne
and
add
pop
imul
pop
imul
pop
imul
xor
and
imul
xor
and
imul
xor
add
xor
imul
cmp
and
imul
popa
ins
add
bound
arpl
fs
add
gs
add
data16
add
ins
add
push
ins
push
jb
je
jb
outs
popa
ins
add
imul
inc
ins
gs
outs
je
push
jb
je
inc
outs
fs
ins
gs
outs
je
popa
imul
pop
dec
addr16
push
data16
ins
xor
imul
ins
jae
ss
dec
push
addr16
bound
xor
imul
ins
add
outs
ins
add
jo
add
jno
add
jb
add
je
outs
outs
add
jae
add
je
add
outs
gs
add
jne
add
jbe
add
ja
add
js
add
jns
add
jp
add
inc
ins
add
inc
ins
add
inc
ins
add
inc
ins
add
inc
ins
add
inc
ins
add
inc
ins
add
dec
ins
add
dec
ins
add
dec
ins
add
dec
ins
add
jbe
inc
imul
add
ins
gs
imul
gs
inc
imul
jae
je
inc
imul
ins
ins
outs
outs
inc
imul
push
popa
ins
outs
add
je
push
imul
pop
inc
gs
jne
je
js
add
dec
ins
add
dec
ins
add
dec
ins
add
outs
jb
add
dec
ins
add
push
ins
add
je
inc
push
add
push
ins
add
push
ins
add
push
ins
add
outs
arpl
inc
jbe
outs
je
jb
jae
dec
outs
inc
ins
outs
jae
outs
add
je
dec
jae
ins
imul
add
arpl
add
je
inc
jo
jb
ins
outs
je
je
je
add
popa
jb
ins
outs
je
je
je
add
push
ins
add
push
ins
add
push
ins
add
push
gs
js
gs
imul
ins
gs
jb
jo
jb
inc
js
gs
imul
je
jb
jae
addr16
inc
outs
outs
je
imul
je
inc
popa
outs
inc
outs
arpl
add
addr16
dec
pop
outs
aaa
inc
inc
dec
outs
dec
aaa
push
dec
dec
add
jb
imul
cmp
arpl
ss
and
add
outs
ins
add
jne
add
jbe
add
arpl
imul
je
outs
outs
inc
jbe
outs
je
jb
jae
jae
je
dec
arpl
add
je
push
push
pop
dec
push
push
pop
bound
jno
inc
jb
add
push
push
cmp
inc
xor
inc
add
jae
popa
addr16
outs
js
jne
je
outs
jae
dec
gs
popa
addr16
outs
js
arpl
add
js
add
jbe
imul
ins
bound
add
outs
fs
dec
imul
gs
outs
fs
js
gs
imul
dec
dec
push
pop
ins
outs
ins
push
push
push
outs
dec
jne
add
push
cmp
pop
dec
js
push
imul
je
xor
and
and
jb
jae
jne
arpl
add
xor
bound
cmp
xor
sub
sub
xor
xor
xor
jnp
cmp
xor
xor
bound
sub
sub
cmp
popa
xor
add
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
bound
addr16
imul
jb
bound
add
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
inc
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
ins
push
imul
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
gs
fs
je
je
arpl
je
imul
push
inc
push
push
inc
je
jb
bound
add
imul
outs
gs
je
fs
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jne
addr16
je
jo
push
push
imul
ins
popa
addr16
je
jb
bound
add
jne
addr16
imul
je
jb
bound
add
je
imul
popa
addr16
je
jb
bound
add
je
imul
jb
gs
add
jae
ins
gs
inc
je
jb
bound
add
arpl
imul
arpl
inc
je
jb
bound
add
imul
je
outs
jb
inc
je
jb
bound
add
outs
ja
popa
bound
je
jb
bound
add
imul
jb
popa
ins
imul
push
imul
je
inc
je
jb
bound
add
imul
jb
popa
ins
imul
push
imul
je
add
bound
jb
imul
imul
imul
outs
popa
jo
outs
arpl
outs
je
gs
outs
fs
je
jb
bound
add
ins
inc
ins
gs
outs
je
je
jb
bound
add
jae
gs
cs
ins
ins
cs
gs
popa
ins
imul
add
adc
xor
ja
jo
add
js
add
sbb
jae
jo
outs
add
je
pop
add
jo
add
js
add
adc
inc
add
ins
add
add
add
add
add
add
jae
imul
cmp
add
jne
je
jb
popa
add
and
and
push
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
ins
add
pop
push
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
ins
add
add
add
add
jb
jae
imul
cmp
jnp
xor
cmp
add
add
xor
add
add
aaa
add
add
add
sub
add
add
sub
add
add
add
add
xor
aaa
add
add
add
add
and
push
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
add
add
add
add
aaa
add
add
add
add
add
pop
xor
cmp
cmp
add
add
add
add
add
cmp
xor
add
add
add
sub
add
add
sub
add
add
add
add
cmp
popa
add
add
xor
add
jge
add
add
xor
add
add
push
add
xor
add
xor
pop
add
arpl
je
dec
add
add
pop
add
xor
push
add
push
dec
add
add
dec
add
add
pop
add
inc
add
add
inc
add
xor
dec
add
xor
jae
dec
add
dec
add
add
dec
add
xor
arpl
ins
add
cmp
bound
ins
add
xor
add
dec
add
bound
inc
add
add
dec
add
imul
ins
add
push
add
add
xor
add
add
pop
add
xor
cmp
dec
add
add
xor
dec
add
dec
add
add
inc
add
xor
add
xor
dec
add
push
add
add
push
add
add
jp
pop
add
add
add
cmp
bound
xor
cmp
xor
add
data16
add
add
add
sub
add
add
arpl
xor
aaa
add
bound
xor
add
xor
xor
jge
sub
add
dec
add
add
add
push
add
xor
add
xor
pop
add
arpl
je
dec
add
add
pop
add
xor
push
add
push
dec
add
add
dec
add
add
pop
add
inc
add
add
inc
add
xor
dec
add
xor
cmp
add
pop
add
add
add
cmp
bound
xor
cmp
xor
add
data16
add
add
add
sub
add
add
arpl
xor
aaa
add
bound
xor
add
xor
xor
jge
add
jnp
xor
jge
jnp
xor
jge
pop
add
or
add
add
or
popa
add
add
add
push
add
add
add
add
add
add
add
add
sub
outs
add
add
add
add
add
jb
and
push
add
add
popa
add
add
add
sbb
imul
add
ja
outs
add
add
add
add
jb
add
cmp
push
scas
dec
xchg
arpl
cdq
add
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
inc
shld
cmps
pop
mov
xor
jns
repnz
fstp
loop
sub
jmp
xchg
cs
add
sbb
xor
and
and
inc
popf
adc
ror
xchg
retf
enter
or
in
aad
test
rcr
mov
sbb
mov
out
jb
outs
int
mov
jge
and
jp
push
sbb
mov
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
and
add
add
or
add
add
add
add
or
add
add
push
or
add
dec
add
or
add
aaa
xor
xor
xor
add
add
and
ja
jb
and
and
popa
jb
inc
jae
gs
bound
ss
xor
xor
xor
add
add
add
add
add
add
sub
jg
aad
cmp
add
add
pop
add
add
add
add
add
add
add
add
push
add
add
pop
push
adc
adc
push
adc
or
push
adc
ins
pop
push
adc
sbb
pop
add
push
adc
adc
adc
or
adc
ins
push
adc
sbb
add
adc
pop
add
adc
adc
add
add
add
or
pop
add
or
or
add
adc
pop
add
ins
adc
add
adc
push
pop
add
sbb
sbb
add
adc
add
or
or
adc
or
adc
add
add
sbb
pop
add
add
add
add
add
add
add
or
add
jns
pop
add
jns
jns
add
adc
jge
pop
add
push
pop
adc
add
add
add
pop
add
add
add
push
add
add
add
add
xor
add
adc
add
add
add
push
adc
push
pop
add
add
add
adc
add
adc
add
add
add
add
add
pop
add
sub
sbb
push
adc
xor
push
adc
xor
push
adc
ins
pop
push
adc
cmp
adc
xor
adc
xor
adc
ins
push
adc
cmp
add
adc
pop
add
xor
xor
add
adc
push
pop
add
xor
xor
add
cmp
pop
add
cmp
cmp
or
adc
or
adc
add
add
cmp
push
adc
adc
or
add
add
add
add
add
adc
add
adc
adc
add
add
adc
add
sysret
add
adc
xchg
or
or
and
add
adc
or
and
add
adc
and
add
push
or
add
sub
add
sbb
add
add
sbb
and
adc
mov
push
and
add
xor
add
adc
push
or
push
adc
pop
add
pusha
or
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
sbb
push
or
push
push
add
sbb
add
adc
push
add
and
adc
pop
add
js
js
or
adc
and
adc
add
je
je
or
adc
add
adc
adc
adc
adc
adc
add
add
or
add
add
adc
adc
adc
add
nop
add
mov
pop
add
or
add
or
mov
pop
add
or
adc
adc
adc
add
cwde
add
add
pop
add
or
add
jns
add
sbb
or
add
sbb
push
add
sbb
adc
add
add
add
add
js
sub
adc
add
adc
add
test
nop
add
mov
mov
cwde
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
push
adc
jl
push
sbb
or
adc
push
pop
push
and
adc
adc
adc
add
adc
adc
add
or
adc
mov
adc
or
or
xor
sbb
or
adc
pop
and
xor
or
push
adc
adc
pusha
adc
add
adc
adc
pusha
adc
add
push
sbb
add
sbb
adc
adc
pusha
adc
pop
adc
or
adc
adc
add
adc
adc
adc
add
or
or
adc
adc
pop
adc
add
xor
adc
adc
add
or
or
add
xor
mov
push
and
add
sbb
or
xor
sbb
adc
xor
adc
or
or
and
adc
or
adc
add
or
or
add
xor
mov
or
add
adc
adc
or
adc
or
add
xor
add
add
or
mov
adc
adc
add
adc
push
and
add
adc
or
add
or
adc
add
or
or
mov
or
sbb
and
add
or
adc
add
xor
sbb
sbb
or
add
xor
add
add
sbb
and
adc
sbb
and
add
xor
int
push
adc
pop
add
add
add
rol
aad
add
add
push
or
push
adc
or
add
adc
push
add
pop
add
sbb
or
and
adc
add
adc
push
and
adc
push
push
push
sbb
or
add
or
and
sbb
push
adc
push
sbb
adc
add
sub
add
adc
adc
push
or
add
add
sbb
add
adc
add
add
sbb
adc
and
sbb
and
adc
adc
adc
add
push
push
add
push
sbb
sbb
add
or
fld
or
push
add
add
add
push
add
adc
add
or
adc
or
add
add
add
or
pop
or
or
or
pop
adc
or
or
add
adc
adc
add
or
and
push
sbb
add
sbb
add
push
pop
and
add
add
add
pop
add
adc
sbb
add
push
push
and
adc
add
add
add
or
and
or
push
sbb
sub
sub
push
adc
xor
sbb
add
sbb
and
add
pop
add
add
add
add
add
add
sbb
sbb
push
add
push
adc
add
add
or
sub
or
adc
add
or
or
add
adc
push
and
add
adc
sbb
add
adc
and
push
adc
cmp
add
cmp
add
push
add
push
add
add
add
mov
sub
test
add
add
push
adc
add
add
adc
or
or
adc
sbb
add
adc
or
add
or
sbb
add
adc
add
push
push
add
add
add
adc
push
adc
add
push
adc
push
sbb
push
adc
push
adc
xor
xor
xor
add
or
push
adc
adc
push
add
adc
cmp
adc
and
xor
push
or
adc
adc
or
push
sbb
adc
push
adc
xor
adc
sbb
sbb
jns
jns
push
or
sbb
adc
or
adc
or
push
add
add
push
push
and
adc
add
adc
sbb
or
add
or
sbb
add
adc
pop
add
or
sub
and
adc
add
jns
pop
or
sbb
push
or
add
and
adc
adc
add
inc
add
add
push
add
or
push
add
add
cmp
adc
push
push
adc
xor
jno
jno
or
or
or
or
push
adc
adc
adc
adc
sbb
adc
adc
adc
adc
adc
push
adc
or
adc
adc
adc
adc
adc
adc
or
adc
adc
or
or
add
adc
add
dec
or
add
adc
add
sub
adc
adc
pop
adc
push
sbb
and
adc
adc
adc
pop
adc
push
sbb
add
push
push
push
push
or
push
adc
adc
add
fld
ins
add
fld
jno
adc
adc
and
adc
and
adc
adc
pop
adc
adc
and
adc
sbb
add
pop
add
add
and
adc
sbb
pop
sbb
sbb
jns
add
adc
adc
or
or
sbb
adc
adc
add
or
adc
adc
and
sbb
add
adc
push
add
add
or
and
adc
add
sbb
or
adc
add
dec
sbb
sbb
adc
or
or
add
cmp
adc
adc
adc
or
jno
and
adc
add
push
sbb
push
and
add
sub
test
sub
and
add
cmp
cmp
cmp
adc
adc
or
adc
xchg
adc
add
add
cwde
add
pushf
add
pushf
add
adc
push
sbb
and
add
pop
and
add
jns
add
add
jno
and
add
and
movs
adc
adc
add
adc
add
imul
add
imul
push
add
add
imul
adc
adc
rcl
mov
add
adc
adc
add
add
adc
add
adc
sub
adc
sbb
push
add
add
sub
adc
push
or
or
add
adc
push
push
push
pop
add
cmp
or
add
or
or
add
add
cmp
pop
add
add
add
add
add
or
sub
or
pusha
sub
push
push
push
push
push
push
adc
adc
rol
and
or
jno
jno
ins
adc
sbb
or
les
enter
adc
adc
adc
adc
add
add
jno
add
adc
add
adc
push
add
add
and
push
push
adc
push
push
adc
sbb
push
sbb
push
sbb
push
or
or
push
push
push
push
push
push
add
adc
add
sbb
adc
adc
sbb
push
adc
pop
sbb
adc
sbb
adc
add
add
add
jns
sbb
adc
add
sbb
adc
sbb
adc
add
add
add
push
add
add
sbb
add
add
push
add
or
add
add
adc
add
adc
push
adc
and
add
push
or
add
adc
or
or
or
or
or
add
add
sub
pop
pop
add
or
add
add
jno
add
add
add
add
sbb
add
pop
or
or
sbb
sbb
add
add
add
add
or
or
or
or
or
or
or
or
or
or
add
or
pop
add
add
adc
or
or
add
or
adc
or
add
cmp
lods
or
add
adc
or
or
sbb
pop
sub
push
add
add
and
adc
sub
xor
sub
or
or
or
sbb
or
sbb
mov
add
movs
add
test
or
adc
adc
adc
adc
adc
add
sbb
add
or
push
and
add
sbb
sbb
add
sbb
add
add
xor
pop
add
or
add
add
jno
sbb
add
add
sub
adc
or
add
adc
or
push
add
add
jno
sbb
sbb
sbb
sbb
push
add
add
cmp
or
or
or
add
push
adc
or
xchg
or
add
adc
or
add
adc
or
push
sbb
push
push
push
push
or
or
or
push
add
add
or
add
adc
add
sub
adc
or
and
add
adc
adc
sbb
sbb
sbb
or
add
adc
add
add
jno
sbb
sbb
sbb
sbb
add
adc
sbb
adc
adc
adc
add
adc
pop
add
adc
and
pop
add
adc
adc
adc
push
and
add
add
and
add
add
or
and
adc
adc
add
or
adc
and
add
add
adc
add
sbb
and
or
or
or
add
and
and
adc
or
cmp
or
or
or
or
add
add
add
xor
add
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
add
push
outs
ins
popa
outs
popa
addr16
outs
fs
and
add
sub
add
add
sub
xor
pop
add
or
or
add
adc
add
adc
push
pop
add
sub
or
add
add
add
pop
or
add
sbb
add
sbb
sbb
or
or
or
or
add
add
add
add
or
add
push
push
adc
or
cmp
push
adc
add
or
add
or
add
add
or
pop
add
cmp
add
or
sub
or
or
adc
or
add
sbb
sbb
add
add
add
sbb
push
adc
adc
push
and
add
and
or
add
adc
or
add
nop
or
add
gs
gs
sub
pop
sbb
add
sbb
push
push
push
add
push
sbb
sbb
or
sbb
sbb
sbb
add
add
add
and
add
adc
and
sbb
push
add
add
push
add
add
add
cmp
adc
sbb
sbb
sbb
add
or
sub
add
add
adc
or
push
push
push
adc
or
or
add
push
adc
add
add
push
adc
adc
push
add
jno
sbb
sbb
pop
add
add
jno
sbb
add
add
sub
push
push
adc
pop
push
sbb
or
xor
add
push
push
adc
add
cmp
pop
and
add
sbb
add
add
adc
add
adc
adc
add
adc
add
sbb
and
sub
add
adc
pop
add
cmp
add
add
add
sbb
or
or
or
add
adc
jno
sbb
push
adc
add
adc
add
adc
push
or
adc
add
add
add
or
or
adc
or
push
push
push
push
adc
ror
or
add
add
and
add
sub
add
adc
add
push
adc
or
sub
add
jno
sbb
push
add
add
push
or
add
sbb
pop
add
add
sbb
and
in
or
loope
and
adc
or
xor
pop
or
or
or
or
or
pop
add
adc
or
add
sbb
push
add
adc
add
adc
pop
adc
or
or
or
or
or
sbb
invd
or
or
add
cmp
cmp
or
pop
add
add
add
adc
or
or
or
or
add
sbb
add
add
or
or
sbb
pop
add
or
add
or
and
or
push
adc
sbb
add
add
add
add
sbb
add
add
add
and
push
add
adc
add
adc
and
adc
or
adc
adc
adc
sbb
add
or
push
adc
sbb
and
add
or
add
adc
adc
push
pop
add
or
or
add
add
sbb
sbb
sbb
pop
add
add
test
and
adc
add
sbb
add
sbb
or
sbb
jno
add
push
or
pop
add
or
add
or
adc
or
or
or
add
push
or
add
adc
sbb
lea
pop
sbb
xor
push
sbb
or
or
adc
adc
push
adc
add
push
adc
sbb
or
add
adc
add
sbb
add
adc
add
adc
or
adc
sbb
sbb
sbb
sbb
sbb
add
add
pop
and
or
or
or
sbb
sbb
sbb
cmp
or
sbb
sbb
xor
sbb
add
or
sbb
or
add
or
add
add
xor
adc
or
or
or
or
or
or
or
or
or
add
adc
or
sbb
add
push
adc
or
add
adc
add
add
adc
sbb
sbb
add
sbb
adc
adc
push
or
or
or
add
or
or
adc
add
icebp
sbb
add
add
push
add
add
sub
add
pop
push
adc
adc
sbb
adc
adc
or
adc
sbb
or
push
adc
push
push
or
push
or
pop
add
or
add
add
pop
add
sbb
and
movlps
adc
or
sbb
add
sbb
add
add
add
add
adc
add
sub
add
add
or
add
add
add
or
or
add
or
add
add
or
pop
add
add
or
or
or
or
or
add
add
adc
adc
add
sbb
add
xor
add
or
sub
add
adc
adc
add
adc
adc
or
and
or
add
or
adc
push
add
add
sub
or
sub
add
add
add
pop
add
or
and
add
sbb
jns
and
sbb
adc
and
or
and
adc
mov
add
push
add
adc
push
adc
sub
push
and
add
adc
and
adc
adc
add
pop
pop
and
add
sbb
add
adc
sub
call
sub
adc
adc
add
or
and
add
or
pop
or
cmp
xchg
adc
adc
adc
or
and
add
xor
cmp
add
and
and
or
or
or
add
adc
add
jmp
adc
adc
adc
sub
push
adc
add
pop
push
push
and
add
xor
add
adc
add
cmp
and
add
cmp
pop
add
or
cmp
or
adc
xor
adc
add
and
add
xor
jns
adc
or
push
add
sbb
jns
add
jns
and
add
add
pop
add
jno
jns
pop
and
add
add
imul
mov
add
jno
add
pop
or
jns
adc
adc
gs
sbb
adc
or
push
and
adc
add
or
sbb
adc
jns
or
adc
sbb
or
add
adc
add
adc
and
adc
push
push
sbb
add
adc
adc
adc
add
or
add
xor
sbb
adc
sub
sbb
and
fadd
adc
xor
loopne
push
adc
sub
sub
xor
add
sub
add
cmp
pop
add
and
and
adc
add
xor
push
adc
adc
xchg
adc
add
adc
adc
adc
adc
add
inc
or
add
adc
or
adc
sbb
sbb
add
add
add
add
push
and
add
adc
add
dec
jns
gs
jo
popa
je
pop
cmp
xor
xor
xor
add
add
or
cs
outs
ins
jo
je
jb
add
add
push
dec
jns
inc
jo
ins
imul
add
or
add
dec
jns
push
jae
jb
add
add
push
dec
jns
push
bound
jb
imul
add
xor
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
and
push
push
push
push
xor
add
cmp
outs
gs
je
and
je
outs
fs
push
push
add
jns
adc
outs
gs
je
and
je
outs
fs
add
add
add
and
add
sbb
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
jbe
add
jae
and
outs
ja
outs
outs
je
outs
jne
inc
push
outs
js
imul
sub
popa
jae
je
imul
outs
ja
popa
ins
jae
and
ins
jae
and
outs
and
and
imul
jae
arpl
jae
outs
and
je
je
and
outs
ja
je
and
arpl
outs
js
add
or
add
add
add
or
add
outs
fs
add
add
and
add
xor
push
push
add
popa
ins
adc
imul
arpl
outs
popa
jo
push
or
ins
gs
popa
arpl
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
ins
outs
popa
fs
gs
jb
dec
outs
imul
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
ins
outs
popa
fs
gs
jb
dec
outs
imul
gs
gs
push
dec
add
pusha
add
add
push
push
add
popa
ins
gs
gs
jb
imul
imul
push
push
or
ins
gs
popa
arpl
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
jo
jb
imul
inc
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
jo
jb
imul
outs
popa
fs
gs
jb
xor
add
add
add
inc
popa
je
push
jns
gs
popa
jae
ss
imul
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
int3
sbb
add
jge
fs
cmp
mov
(bad)
sti
xchg
cwde
lea
push
retf
fwait
inc
outs
xor
cs
pusha
out
ins
sahf
pushf
pop
out
stc
and
pop
ins
pop
fwait
pushw
mov
sbb
fldcw
popa
add
push
outs
xchg
xor
cmp
ss
adc
jae
mov
push
xchg
mov
repz
mov
jle
imul
ss
or
add
sti
dec
out
xchg
pop
cmp
sub
pushf
xchg
repz
and
push
dec
les
clc
jb
push
adc
mov
repz
dec
inc
loop
scas
mov
aaa
mov
pusha
retf
sbb
jle
imul
mov
sbb
iret
mov
mov
fs
aaa
mov
cmp
cli
mov
stos
inc
xor
push
and
cmp
les
imul
mov
cmp
push
cld
pop
js
mov
pop
test
jbe
mov
imul
stc
cli
shr
or
jle
pop
xchg
loope
adc
pop
sbb
xor
rcl
ret
retf
fcom
cmps
into
pop
pop
daa
out
mov
aam
test
mov
sbb
je
daa
stos
pusha
and
dec
dec
sbb
push
jae
mov
popa
pop
fcomp
jbe
push
outs
iret
inc
movs
fidiv
xor
inc
addr16
xor
das
mov
ins
fsubr
fwait
mov
div
lea
jmp
lea
movs
inc
hlt
leave
test
dec
pop
pushf
xchg
and
cmps
scas
mov
in
push
cmp
adc
inc
inc
inc
aam
sti
pop
push
fbld
push
inc
rol
call
sbb
mov
cmps
sub
jl
sub
mov
push
sub
fisub
jp
cli
sbb
sbb
or
js
pop
dec
jnp
mov
ja
inc
lahf
retf
jg
add
je
ins
or
sti
jnp
sahf
pop
add
int
mov
dec
pop
push
sbb
or
push
mov
xchg
pop
cmp
mov
repz
or
ds
push
js
add
sub
cmps
jle
xor
test
pop
pop
cli
add
gs
shl
or
jns
mov
xor
stos
or
scas
aas
es
push
das
neg
test
lea
shl
and
mov
out
xor
mov
test
cmp
mov
dec
jecxz
jge
outs
pusha
aad
sub
push
and
or
ficomp
stos
daa
and
gs
test
rol
lahf
add
ss
sub
mov
jecxz
lea
mov
add
pop
mov
jns
sbb
in
scas
retf
sub
pop
dec
push
lds
je
or
jg
inc
pop
shl
cmp
sbb
por
dec
ret
std
push
or
mov
lods
es
push
int
jb
mov
mov
fs
dec
stc
js
gs
pop
pop
shr
mov
rol
scas
scas
add
push
daa
jnp
imul
cs
push
out
lahf
fs
scas
mov
xchg
jge
dec
or
imul
push
(bad)
and
mov
xchg
push
clc
into
inc
mov
dec
arpl
xchg
pushf
lds
or
in
push
cld
inc
adc
jmp
push
ror
adc
xchg
adc
sub
pop
jns
ret
inc
sbb
and
fstp
mov
dec
cli
popa
xchg
int
push
sub
jl
push
mov
loope
sub
xor
adc
in
cmp
mov
repz
fstp
push
(bad)
mov
imul
jne
jae
scas
sbb
enter
movs
adc
cs
movs
mul
pop
outs
movs
int3
ins
dec
aaa
dec
inc
xchg
iret
sub
fistp
sbb
and
lea
scas
aam
mov
lock
mov
enter
stc
push
pop
ja
mov
imul
sub
jno
shr
xlat
daa
aas
mov
mov
ins
icebp
daa
bound
mov
mov
daa
fld
loop
adc
cmp
je
js
xchg
dec
test
cwde
(bad)
mov
fld
sbb
popa
shl
and
xor
jns
add
fbstp
aaa
test
ja
enter
dec
scas
xchg
nop
push
inc
lods
sbb
stc
jmpw
int
and
call
sub
pop
stos
and
cmp
or
sti
xor
fwait
stc
or
sar
clc
mov
lods
test
fucomi
and
pusha
jns
clc
sub
xor
movs
mov
test
pop
mov
mov
fcomp
fadd
test
outs
sti
xchg
xor
test
gs
xchg
xchg
enter
jmp
ror
(bad)
dec
lods
not
arpl
or
push
xchg
mov
xor
xchg
daa
sbb
out
push
mov
mov
push
jae
pop
sub
sub
mov
adc
lods
mov
sbb
pop
cmp
add
mov
imul
mov
fnstenv
popa
mov
loop
mov
pop
int
adc
aaa
push
aas
inc
and
inc
lea
cld
push
pusha
retf
arpl
test
idiv
xchg
js
sub
sbb
sbb
cmps
pop
out
sbb
jmp
xchg
in
cld
rcl
and
and
mov
(bad)
aam
mov
xchg
mov
push
push
and
sahf
in
iret
sbb
test
and
xor
push
(bad)
push
lahf
xchg
stos
cwde
and
and
jle
ror
fwait
xchg
xchg
sub
cmp
xor
xchg
cpuid
inc
pushf
mov
fisttp
jno
imul
jl
push
sub
std
daa
test
fstp
loop
repz
jmp
xor
ror
shl
cmp
jl
xchg
test
jcxz
addr16
add
push
jmp
into
retf
inc
mov
cs
pop
clc
mov
aas
fisttp
aas
mov
fstp
cmc
call
test
fsubp
loope
out
adc
es
cdq
jl
add
repnz
add
push
and
jnp
xchg
or
xor
xchg
aam
(bad)
dec
ss
sub
imul
popf
pop
pop
ds
or
aas
pop
lods
dec
shl
cmps
rcr
mov
xchg
aas
pop
cmps
sar
cmp
push
mov
jl
popf
jge
cmps
xor
dec
mov
ror
repz
sub
icebp
dec
enter
aaa
pop
xlat
call
inc
adc
adc
test
cmp
and
in
(bad)
mov
cmp
call
push
adc
call
aad
js
stc
jno
in
mov
pop
mov
jne
retfw
repnz
ret
fstp
rcl
sbb
addr16
push
(bad)
sub
mov
mov
imul
dec
mov
mov
outs
shr
pop
jmp
imul
retf
out
add
mov
dec
pop
popf
and
lahf
jmp
push
(bad)
pop
or
cdq
sbb
in
mov
out
repz
clc
outs
ffree
push
call
xchg
add
mov
int3
enter
inc
outs
add
dec
adc
jg
test
mov
pop
repz
push
sbb
mov
fs
pop
out
xchg
sbb
or
jle
pop
sbb
push
sub
retf
sbb
(bad)
popa
ins
and
push
jmp
test
cmps
bound
xrelease
and
ret
mov
dec
push
mov
imul
add
mov
sub
in
jge
call
ins
xor
and
imul
hlt
jge
or
in
dec
and
js
das
cmp
lods
shl
imul
repnz
dec
test
shl
leave
sar
mov
test
icebp
adc
and
add
iret
ret
sbb
adc
in
(bad)
mov
(bad)
cwde
sub
mov
fidiv
pop
pop
xor
xchg
cmp
mov
ret
jb
cmps
test
lea
iret
repz
repz
xor
add
xor
push
cmp
add
push
dec
(bad)
loop
gs
jp
mov
mov
sub
into
sahf
fcomip
out
int3
sub
xchg
sahf
cwde
enter
in
daa
and
pop
and
mov
adc
dec
popa
sub
jno
gs
in
adc
cmp
out
inc
mov
adc
adc
push
loopne
xchg
in
sahf
ret
adc
pusha
mov
scas
pop
and
cmp
adc
and
add
addr16
add
mov
cmp
xor
shl
inc
inc
sub
or
push
arpl
xor
cld
test
jl
aas
lahf
stos
push
imul
mov
add
fsub
les
inc
and
dec
int3
sbb
jmp
mov
iret
ja
mov
(bad)
adc
out
test
push
je
inc
jmp
scas
aad
out
hlt
clc
push
and
out
aas
mov
shr
test
mov
mov
cmp
mov
mov
nop
sahf
cwde
std
fidiv
lahf
sub
dec
or
inc
adc
push
mov
mov
stc
cdq
adc
mov
ss
ret
push
pusha
mov
setb
jl
sub
dec
pop
mov
or
jo
mov
pop
push
in
mov
and
hlt
dec
pusha
mov
(bad)
sbb
add
out
aas
mov
pop
fsub
sub
aaa
cmp
mov
neg
mov
jge
clc
or
outs
jecxz
icebp
mov
ins
push
(bad)
rcr
dec
xor
xor
dec
adc
imul
sub
mov
dec
shl
mov
jb
ins
shr
mov
aas
hlt
ror
pop
lds
fcom
outs
push
fild
scas
mov
and
pop
fisubr
mov
jns
cmps
pop
dec
add
mov
dec
pop
or
jg
push
push
hlt
push
pop
xor
lock
add
out
imul
ins
sbb
int3
in
dec
addr16
xchg
js
scas
lahf
push
shr
test
sbb
call
into
xor
inc
cli
out
pop
dec
inc
int
cmp
inc
push
leave
sub
push
repz
movs
cmps
inc
shl
cmp
arpl
xor
push
ja
rol
aad
or
xor
aas
mov
nop
not
xchg
repnz
pop
or
cmp
test
and
mov
int
stc
push
inc
sbb
xchg
out
lock
ins
mov
loop
dec
outs
or
test
std
nop
mov
xchg
sbb
jae
fs
mov
add
scas
mov
out
pushf
mov
jecxz
aaa
out
jno
dec
and
xchg
hlt
sbb
outs
inc
rol
add
and
cmp
mov
sub
xchg
adc
sahf
xchg
ret
sar
cmc
push
jnp
jmp
jmp
xchg
mov
aaa
in
(bad)
and
dec
mov
fldenv
and
pop
in
mov
push
or
test
movs
xchg
shl
(bad)
scas
pop
ror
mov
add
xchg
jecxz
loope
test
mov
(bad)
mov
push
ret
aad
adc
mov
pop
(bad)
loopne
cwde
pop
add
or
sbb
and
popa
push
sub
aam
jmp
retf
fistp
retf
ja
jnp
ja
test
dec
mov
sbb
push
out
in
les
or
sub
add
cmps
push
ds
pop
test
sbb
mov
mov
jmp
popf
in
pop
repz
ret
arpl
jae
xor
(bad)
mov
repnz
mov
js
pop
pop
imul
sub
fld
scas
loope
jle
and
mov
inc
jns
dec
sbb
aas
cmp
sbb
loop
cwde
xchg
mov
push
aaa
sbb
push
js
das
and
add
jp
(bad)
mov
out
cmp
popa
stos
fdiv
inc
xor
cmps
jns
dec
nop
jae
sub
test
in
loope
xchg
mov
inc
call
dec
inc
pop
dec
cdq
sub
or
enter
sbb
or
cwde
jb
ret
adc
mov
ins
pop
and
mov
jns
repz
mov
mov
mov
sbb
sub
scas
into
and
in
shl
pusha
fstp
adc
fiadd
cmp
mov
in
adc
das
loope
cli
loop
inc
and
sbb
jecxz
sub
ins
jbe
sbb
adc
rcl
jnp
dec
(bad)
sbb
fs
imul
das
mov
cmps
add
sbb
adc
xor
sub
jnp
aaa
xchg
jnp
pop
mov
dec
xor
aam
and
mov
loop
mov
ins
xchg
jbe
test
sbb
mov
retf
fwait
shl
repz
fmul
nop
jo
mov
push
push
test
push
push
sbb
jb
xchg
push
sbb
pop
sub
movs
jl
mov
(bad)
push
add
push
cmps
fisub
add
add
push
xlat
fild
retf
gs
dec
xchg
int3
in
ret
push
div
xchg
mov
xchg
pusha
jp
jb
xchg
xchg
mov
xor
xor
das
int3
(bad)
das
xchg
mov
mov
or
out
push
int3
out
or
dec
iret
or
fs
xlat
cli
loopne
mov
icebp
add
adc
jbe
cmp
pop
inc
(bad)
enter
inc
pushf
push
(bad)
movs
xchg
sbb
stc
mov
mov
cmps
xchg
push
xor
cmp
scas
mov
scas
xchg
adc
aam
jb
push
jmp
lods
lea
xor
mul
mov
mov
or
stos
push
xchg
in
popa
in
sbb
mov
cmps
std
fmul
and
pop
jp
pop
loop
add
pop
aam
dec
and
cmp
addr16
inc
bound
cmps
mov
popa
js
mov
mov
retf
mov
js
push
adc
mov
outs
push
rcl
clc
jmp
stos
mov
mov
mov
lock
add
mov
shl
cmp
call
push
sbb
js
xchg
outs
shl
and
les
mov
test
inc
dec
pop
into
icebp
add
or
shl
cmp
cmps
adc
icebp
test
cs
call
jae
mov
sahf
dec
mov
(bad)
jo
pop
pop
sbb
or
cmp
das
ret
std
pop
push
mov
imul
jne
pop
rcl
imul
xor
mov
push
ss
pusha
mov
push
xor
loop
das
fsub
jmp
xchg
ins
cli
or
repnz
mov
push
dec
push
push
jecxz
js
out
push
xchg
pop
retf
add
hlt
xor
push
std
inc
js
sbb
add
add
add
jbe
push
rcl
jmp
cld
add
aas
pushf
dec
enter
ja
out
sub
push
adc
mov
js
add
cmps
sub
call
inc
(bad)
xlat
pop
jb
or
jmp
aam
into
push
add
push
fld
jge
bound
int3
sbb
pop
mov
jbe
cmp
inc
cld
imul
mov
cmp
mov
push
outs
cmp
neg
mov
mov
mov
les
and
or
push
mov
jle
xchg
xchg
xchg
aaa
(bad)
lods
and
imul
repz
sbb
nop
cmp
fsub
lods
pusha
mov
add
or
xchg
mov
dec
adc
mov
imul
popf
(bad)
cmc
xlat
sar
sub
pop
and
push
fbstp
pop
(bad)
out
imul
cdq
lods
dec
ss
add
loop
cmp
sti
xor
jnp
cmp
ret
rol
rol
inc
jns
imul
mov
xor
inc
mov
push
sbb
jnp
and
leave
ja
mov
in
push
mov
and
jecxz
push
scas
repz
mov
sahf
xchg
dec
mov
int3
in
cmc
push
and
mov
cmp
push
ret
jmp
sbb
ret
mov
xor
pop
or
xor
rcl
and
push
dec
sahf
lods
(bad)
dec
aad
cmps
and
pop
test
jmp
mov
gs
sbb
rol
out
inc
cmp
push
mov
retf
mov
mov
lods
mov
outs
mov
mov
aad
repz
push
pop
mov
sahf
lods
jmp
ret
iret
fistp
xor
ss
sub
icebp
shl
adc
cli
loopne
loope
aas
icebp
mov
add
mov
sub
mov
ss
test
cmps
shl
sbb
inc
js
xor
test
jbe
pop
xchg
sbb
xchg
ss
mov
jne
test
cwde
std
sbb
pop
push
outs
(bad)
pop
push
stc
test
or
movs
idiv
sub
mov
push
push
adc
js
sbb
rcr
or
sub
mov
lds
push
adc
outs
movs
(bad)
dec
pop
mov
jne
int3
es
push
pop
and
ret
or
xchg
lock
into
(bad)
sub
dec
and
hlt
dec
ret
add
jns
clc
jne
adc
fs
sub
ja
push
out
or
mov
add
jb
addr16
(bad)
mov
inc
test
inc
jge
out
xor
add
int3
cmp
inc
xchg
jecxz
shl
mov
fcmovnbe
loop
mov
psubb
xor
jge
sbb
popf
xor
xchg
cmps
mov
stos
cwde
adc
add
cmps
cld
outs
mov
mov
addr16
ins
mov
mov
push
push
out
pop
(bad)
add
stc
inc
icebp
jae
mov
ret
sbb
(bad)
xor
cld
ds
mov
xchg
addr16
(bad)
jno
in
pop
imul
ds
into
shl
jecxz
cmp
scas
stc
mov
sbb
bnd
xchg
add
dec
mov
test
stos
aam
jl
out
(bad)
outs
mov
pusha
add
les
mov
shr
out
inc
loope
and
mov
gs
neg
push
pop
adc
loop
jbe
(bad)
mov
and
or
inc
pop
cmps
sar
xchg
iret
xchg
js
lods
hlt
cmps
and
jmp
dec
pop
mov
add
inc
aam
int3
xor
mov
rol
dec
mov
mov
adc
xor
mov
retf
aaa
mov
or
jle
rcr
dec
dec
xchg
loope
mov
adc
dec
iret
and
scas
imul
sbb
call
addr16
nop
mov
xchg
sub
cmc
loopne
into
inc
mov
sub
mov
cmp
fadd
lahf
pop
adc
cmp
mov
add
outs
xor
push
add
(bad)
aam
mov
leave
cmp
out
mov
into
xor
setne
push
test
out
mov
js
push
rcl
jns
push
sbb
add
pop
fcmovbe
cmp
and
or
call
jge
mov
sub
stos
xchg
fsub
out
in
div
inc
mov
in
and
mov
xor
jne
pop
jecxz
push
dec
out
sbb
mov
scas
pop
adc
xchg
xor
les
mov
ins
mov
repnz
xor
and
add
mov
shr
mov
popa
jnp
cmps
stc
loop
mov
and
add
mov
arpl
pop
push
dec
or
xor
pop
fnstcw
add
xchg
inc
les
xchg
cdq
fwait
ds
adc
sub
mov
daa
in
cmp
xor
popa
aas
and
jae
push
addr16
scas
js
(bad)
shl
inc
imul
vmread
movs
(bad)
lock
adc
mov
stc
push
push
inc
xchg
(bad)
jmp
sbb
mul
fild
pushf
dec
sbb
cmp
dec
repnz
call
rcr
adc
cmps
and
mov
nop
adc
xor
dec
fcom
rcr
dec
jae
xchg
push
push
jmp
mov
sbb
mov
inc
pop
adc
or
cmp
in
fsubr
adc
popf
xor
push
fs
mov
stos
lods
mov
cmp
rcl
(bad)
ins
adc
inc
mov
inc
fwait
(bad)
call
loop
scas
fwait
jle
leave
inc
jle
push
movs
into
push
mov
mov
cld
int
push
push
jp
call
mov
lea
dec
repz
gs
mov
scas
jae
rcr
sahf
mov
jnp
out
xacquire
mov
xchg
jne
inc
pop
mov
and
jl
pushf
jbe
pop
rcr
test
sub
xchg
xor
ins
in
stos
call
bndstx
xor
inc
test
push
pop
mov
nop
int
and
sar
pushf
mov
aas
(bad)
pop
mov
mov
js
popa
out
jns
sar
adc
mov
jmp
out
aam
call
es
and
push
inc
push
or
sbb
pop
sbb
dec
mov
dec
ret
mov
test
push
push
push
rcr
into
in
mov
repnz
mov
outs
retf
xchg
mov
mul
cmp
cwde
arpl
mov
sbb
add
cs
jge
rcr
sub
fwait
or
gs
add
pop
inc
and
pop
fist
jle
(bad)
jnp
push
(bad)
dec
push
jmp
pop
jmp
adc
xchg
repz
xchg
lock
adc
pop
push
ins
stos
mov
push
adc
inc
(bad)
leave
push
mov
fdivr
ret
fcmovnb
test
ins
out
xchg
mov
dec
out
retf
icebp
fucom
push
xchg
mov
nop
dec
cmp
add
pop
sub
inc
es
imul
xchg
pop
getsec
add
out
mov
dec
jge
pushf
dec
cmc
into
lahf
mov
push
xchg
inc
pop
mov
stos
push
mov
cmp
jmp
daa
mov
ins
dec
int
mov
sbb
mov
push
adc
mov
xor
inc
cmc
mov
repnz
add
call
pop
cdq
arpl
xchg
jl
sbb
mov
mov
dec
mov
ror
xchg
rcr
or
addr16
sub
stc
cli
frstor
sbb
xchg
call
sub
adc
in
add
dec
jecxz
push
adc
xor
mov
ins
inc
xor
and
std
push
repnz
push
adc
fcmove
scas
mov
jae
outs
push
adc
jg
dec
inc
mov
inc
repnz
lods
xchg
push
dec
pop
add
sub
xchg
popa
jmp
call
in
push
ficomp
sbb
in
adc
inc
mov
es
aaa
out
scas
sub
jg
sub
adc
mov
loope
xor
jl
hlt
fiadd
adc
xor
in
mov
add
or
sahf
inc
adc
cdq
(bad)
adc
mov
cmp
cwde
pop
dec
xchg
xor
jmp
aaa
or
test
dec
xchg
out
mov
mov
into
add
cmp
popf
fcom
test
cmp
cmp
js
cmp
lds
push
mov
dec
mov
cmc
mov
pop
cmps
cwde
cdq
iret
fidivr
jmp
jnp
ret
mov
mov
adc
leave
fs
(bad)
push
jecxz
mov
fisubr
in
mov
mov
lods
add
mov
in
sub
sub
mov
and
xor
lods
cmp
cmps
fcom
adc
lods
outs
fld
fimul
jne
push
ds
ja
xchg
stc
(bad)
mov
or
imul
push
aad
xor
push
scas
mov
repz
jmp
cmp
mov
lods
or
xor
imul
dec
lahf
out
js
icebp
mov
frstor
retf
jmp
mov
cmp
retf
xchg
leave
in
nop
fwait
and
mov
xchg
fs
or
inc
(bad)
aam
outs
sbb
mov
test
repnz
gs
cmps
jg
cmc
cli
mov
movs
dec
mov
dec
sbb
dec
or
mov
jae
jp
ret
pop
retf
mov
js
cmp
jmp
jl
dec
scas
int3
(bad)
xor
adc
mov
das
or
(bad)
sub
lods
or
pop
push
repz
adc
sti
inc
xchg
push
loope
or
loope
inc
pop
data16
popf
shl
ins
mov
cmp
sub
jmp
pop
call
inc
lods
fnstsw
jo
and
cmp
popf
cdq
lds
mov
cmp
mov
pop
mov
js
aas
into
push
or
rcl
mov
adc
hlt
xor
push
loope
and
add
pop
mov
mov
dec
int3
shr
mov
and
inc
ror
inc
jl
inc
cdq
mov
mov
or
jmp
inc
jmp
out
pushf
int3
xor
add
jl
loop
jmp
fistp
mov
jecxz
enter
or
sbb
ins
ins
xchg
xchg
mov
push
sahf
dec
add
dec
lods
jle
enter
xchg
lods
pushf
daa
and
test
repnz
xor
call
popf
adc
not
or
int3
inc
aam
inc
inc
das
iret
dec
ja
(bad)
pop
in
and
call
jmp
push
je
inc
and
cmp
inc
fucom
je
ss
dec
inc
jb
cmp
mov
adc
mov
push
movs
int
jb
cmp
retf
sub
sbb
call
outs
push
ins
jmp
jne
or
sbb
push
mov
and
push
(bad)
jmp
arpl
inc
iret
inc
push
scas
push
xor
sub
pop
xchg
lods
jp
jg
imul
rcl
mov
mov
ins
in
or
adc
sti
movs
xor
ret
pop
jl
loop
ins
sysexit
lock
xor
std
push
or
stos
add
repnz
pushf
repnz
stos
mov
imul
xchg
mov
adc
fistp
push
out
inc
test
pusha
jo
repz
fsubr
push
mov
mov
mov
sbb
sub
loope
(bad)
repz
xchg
xor
dec
ins
int
enter
int3
lea
pusha
mov
stc
mov
ror
jmp
inc
mov
daa
push
pop
xchg
or
mov
stc
imul
ins
neg
jg
clc
adc
adc
stos
push
sbb
mov
pop
pushf
imul
jg
aad
xor
jge
xchg
inc
neg
mov
push
sub
mov
and
cli
cdq
pop
fimul
cmp
or
cmps
repnz
(bad)
popf
cmp
push
ins
mov
pop
or
sar
sub
sbb
mov
xor
ror
push
xchg
enter
jno
sub
xor
mov
retf
cld
xor
popf
xchg
mov
push
shl
leave
mov
sbb
jle
fsubr
sbb
mov
ds
push
mov
pop
jl
test
stc
arpl
mov
or
mov
cmp
push
jmp
mov
inc
retf
lahf
xchg
pop
scas
xchg
mov
mov
test
outs
cmp
push
retf
loop
cmp
out
pop
gs
adc
xchg
call
inc
ret
sub
hlt
fdiv
mov
xchg
pop
ror
out
cdq
mov
cwde
test
sbb
mov
in
mov
popa
daa
icebp
rol
cmp
call
(bad)
adc
test
rol
pop
test
jne
dec
mov
dec
add
daa
neg
loopne
adc
jae
jg
mov
in
jecxz
imul
mov
sar
bound
and
loopne
call
dec
in
das
mov
adc
sahf
adc
gs
fstp
add
mov
ja
int3
call
mov
jecxz
in
mov
sub
stos
es
rol
mov
loopne
inc
call
in
ret
and
icebp
imul
xor
es
mov
pop
add
sub
int3
test
mov
(bad)
cli
add
or
push
retf
fwait
not
mov
std
test
movs
aas
adc
outs
ret
test
loope
pop
pushfw
dec
into
sub
dec
repz
inc
stos
push
dec
or
(bad)
jle
lahf
ds
mov
push
add
mov
lock
pop
movs
addr16
ins
imul
cs
shl
test
sub
mov
jbe
outs
mov
cwde
in
movs
dec
ret
lods
cmp
mov
jo
adc
jmp
jg
pop
xchg
ror
pop
pop
(bad)
xor
retf
inc
mov
push
xchg
das
push
retf
pop
adc
cmp
or
pop
cli
or
cmps
out
mov
add
add
scas
enter
mov
jns
sbb
test
clc
inc
add
xchg
lahf
mov
adc
push
cwde
mov
mov
nop
xor
imul
test
nop
add
xchg
dec
out
pop
ret
test
xchg
loop
test
mov
leave
(bad)
pop
mov
pop
imul
mov
(bad)
into
aad
sti
and
lahf
test
xchg
sub
cmp
jae
lock
cmps
test
jae
jne
outs
and
clc
div
mov
push
pop
nop
fwait
mov
cwde
fcomp
jp
or
push
out
mov
out
push
push
sbb
cmps
cmp
push
gs
leave
cmp
jbe
cmp
adc
fisubr
cld
mov
jg
scas
inc
mov
pop
repnz
mov
in
dec
or
aam
int
pop
mov
ins
lds
push
jmp
xor
jbe
das
pop
mov
pop
daa
xchg
in
out
mov
mov
out
lods
lahf
loopne
mov
add
fistp
test
push
cld
ror
xchg
loop
sub
outs
pop
lahf
mov
sub
iret
or
jae
call
(bad)
add
fistp
in
push
jp
sub
and
icebp
fiadd
sbb
xor
push
ss
aad
in
mov
jmp
loop
jg
retf
fild
popf
rcr
mov
mov
dec
sbb
ret
jnp
std
outs
dec
push
mov
out
retf
and
(bad)
mov
das
clc
mov
inc
(bad)
xlat
fmul
jns
lds
leave
push
fs
pop
xchg
ret
sub
sbb
sbb
push
push
jne
enter
jmp
in
add
inc
pop
jp
in
dec
scas
std
mul
sbb
in
mov
cdq
cmp
and
(bad)
les
(bad)
shl
cmc
sub
add
mov
push
cmps
mov
not
mov
and
and
xor
les
aaa
popa
push
mov
cwde
imul
int3
mov
sub
dec
pop
add
lahf
in
push
mov
jmp
sub
add
and
dec
push
test
adc
stos
call
add
ds
fs
retf
sbb
(bad)
pop
sbb
jecxz
arpl
aas
push
rcr
into
ins
xor
cli
in
or
fs
mov
cmp
lahf
not
call
fisub
fild
out
add
daa
inc
fsubr
jl
call
sahf
cmp
push
pop
enter
xor
mov
xchg
sub
pop
and
ins
mov
sub
pop
pop
pop
jne
int3
and
mov
inc
aad
sbb
outs
jecxz
mov
cld
or
sbb
sub
in
sbb
rcr
(bad)
loop
push
(bad)
sti
test
loop
pop
out
popa
mov
jns
push
xchg
jle
test
test
addr16
clc
jo
stc
adc
out
jae
jbe
add
inc
mov
mov
sahf
fist
or
xchg
retf
adc
cmps
jmp
cmp
mov
test
(bad)
fist
data16
or
or
mov
add
xchg
adc
cmc
mov
sahf
sub
dec
push
ja
jl
push
pop
and
leave
xchg
imul
push
outs
pop
adc
scas
xor
sbb
dec
dec
lea
lods
iret
movs
mov
xor
mov
jbe
addr16
mov
inc
adc
mov
adc
loop
cmp
aad
push
inc
in
test
(bad)
or
dec
ins
in
adc
sar
push
xlat
jg
in
outs
scas
test
aad
pop
jge
into
(bad)
fcomp
push
push
mov
adc
add
(bad)
or
ds
imul
retf
stos
mov
cli
movs
pop
dec
das
scas
jge
addr16
lahf
inc
aam
mov
mov
or
aad
in
aaa
icebp
test
jle
mov
pop
add
ret
jno
jne
mov
sbb
inc
jns
jle
cmps
mov
lods
jne
out
adc
outs
mov
das
loope
ds
xchg
dec
mov
push
xor
push
aaa
leave
push
retf
pop
push
pop
inc
push
scas
(bad)
push
rcl
cs
push
aam
das
fstp
sbb
jo
or
movs
cmp
xchg
xor
add
xor
inc
pop
out
mov
mov
inc
sub
inc
dec
test
cmp
idiv
sub
jbe
lea
jbe
jle
sbb
dec
icebp
leave
mov
push
call
pop
add
loop
mov
push
shr
push
adc
cmp
jns
int
jl
(bad)
cmps
sub
hlt
dec
add
jae
cmp
xchg
xor
sub
das
sub
cmps
jmp
movs
push
lea
and
inc
addr16
add
push
mov
cli
movs
ins
sub
dec
in
in
inc
fimul
add
popa
jl
xlat
cmps
mov
push
inc
in
dec
repnz
cs
fadd
and
adc
push
jle
sbb
dec
aaa
xor
out
ror
inc
test
jb
lock
fnstsw
ds
jo
in
fwait
icebp
call
sbb
mov
jo
dec
ret
mov
xor
xor
dec
adc
jno
loopne
and
icebp
dec
scas
xchg
std
mov
dec
push
lahf
sub
(bad)
stos
sub
jg
or
or
addr16
or
lods
xor
dec
addr16
jmp
mov
mov
in
cmp
enter
sub
ret
add
aad
shr
mov
xchg
cdq
sub
and
mov
mov
movs
leave
mov
pop
fisub
add
cld
inc
mov
aas
and
dec
xchg
js
adc
push
repnz
sar
cmp
call
ror
jl
push
adc
scas
or
mov
aam
xor
je
xchg
add
out
enter
pop
ins
and
out
jnp
add
loop
xor
pop
and
inc
adc
push
jmp
test
movs
out
lds
ja
mov
sbb
hlt
mov
into
aas
mov
popa
jnp
pusha
sbb
movs
bound
test
xor
jmp
or
push
test
dec
aad
das
cmp
add
mov
enter
add
mov
dec
(bad)
data16
scas
and
fistp
mov
mov
gs
push
pop
bound
push
out
pop
enter
jns
inc
sub
outs
or
push
(bad)
(bad)
cmp
rcr
jo
xor
fisubr
ret
(bad)
loop
push
sub
xchg
mov
and
ror
cmp
or
(bad)
addr16
jns
mov
cmp
mov
xchg
int3
pop
lods
fwait
mov
int
pop
xchg
cmp
adc
pop
jmp
sub
pop
mov
shl
push
push
test
outs
mov
(bad)
or
mov
mov
out
popf
sub
push
out
cwde
sahf
shl
test
sub
mov
in
dec
sbb
daa
push
movs
push
daa
pop
in
and
or
lds
dec
test
rcl
(bad)
jmp
ja
jno
enter
out
push
out
jb
push
in
pushf
mov
loopne
and
mov
(bad)
jp
call
jmp
out
loope
sbb
mov
fnstsw
xchg
xlat
fs
es
fs
das
sahf
mov
ret
aaa
(bad)
ficomp
dec
mov
daa
sbb
jmp
ror
push
in
cs
(bad)
mov
jg
scas
rcr
sbb
into
mov
cmp
sbb
and
add
dec
ins
(bad)
cld
sbb
cmp
xchg
in
pop
mov
add
push
pop
fwait
mov
mov
xor
aad
enter
(bad)
ror
jl
fild
out
rcr
pop
cli
push
in
pop
aas
ss
ins
and
inc
sub
stc
les
int3
dec
mov
or
inc
rol
inc
(bad)
pop
sub
jmp
sbb
jbe
in
ror
popa
loop
pop
(bad)
movsx
mov
pop
retf
enter
push
adc
inc
imul
jl
lock
call
sub
sar
dec
aaa
inc
cmp
retf
scas
xchg
in
je
ja
inc
fld
stc
mov
mov
outs
and
or
adc
cli
mov
pop
cmp
outs
add
cmp
dec
and
sti
lahf
icebp
adc
jb
jg
outs
(bad)
jmp
ficomp
push
repnz
push
je
push
or
out
mov
push
xor
imul
ror
movs
inc
sbb
cmp
ss
es
and
and
mov
mov
mov
repz
mov
aad
mov
cmc
xor
dec
not
inc
stos
iret
out
xor
mov
cwde
ret
mov
test
jno
lods
jecxz
gs
dec
xor
mov
add
mov
xor
nop
idiv
sbb
inc
aas
call
in
adc
lods
mov
add
jmp
mov
repz
sub
pop
shr
mov
sbb
push
cmp
xor
jle
cmp
xchg
(bad)
cwde
(bad)
shl
xchg
pop
ds
pop
add
xor
xor
jmp
test
ins
dec
lods
lds
std
retf
scas
jo
xchg
(bad)
and
jg
mov
gs
xchg
loop
nop
loopne
add
push
mov
push
push
pop
xor
cmp
pop
(bad)
mov
lock
(bad)
and
iret
inc
push
sbb
test
pop
jbe
out
mov
jmp
mov
pop
mov
xor
mov
scas
mov
sbb
les
lock
sti
stos
pop
sbb
clc
add
repz
jmp
xor
les
adc
sub
addr16
mov
data16
mov
pusha
cmc
and
mov
stos
sub
les
lds
and
cmp
mov
stos
stos
dec
(bad)
push
or
out
movs
push
loop
cld
bound
pop
fld
outs
jb
data16
call
rcr
fnstcw
sar
pop
ret
push
mov
sub
loopne
rcl
sub
push
inc
aad
mov
add
stos
cmp
es
iret
push
repnz
adc
cmp
das
jno
sbb
inc
inc
dec
adc
sub
jge
dec
dec
or
pop
shl
dec
rol
fcom
xchg
mov
ror
stos
sbb
stos
cmp
cmp
pop
lahf
jle
ds
outs
retf
push
(bad)
mov
mov
sti
sti
out
ss
adc
std
sub
repnz
repnz
xchg
inc
mov
loopne
cld
das
dec
jecxz
fistp
jno
sbb
call
mov
xor
cmp
mov
into
push
into
sbb
fucomp
stos
outs
jae
call
scas
mov
xor
outs
loope
xor
jl
sub
add
inc
movs
jecxz
xchg
test
inc
xchg
bound
mov
mov
mov
adc
stc
xchg
dec
pop
or
mov
loop
adc
pop
xor
shl
(bad)
in
mov
push
inc
hlt
push
pop
sar
push
loope
adc
sbb
add
or
inc
sbb
cmc
jns
adc
or
fdiv
pop
iret
push
int3
inc
jl
and
ret
daa
aaa
lods
adc
pop
mov
mov
push
or
pop
and
jno
shr
and
dec
mov
xor
jno
mov
push
mov
js
mov
retf
xor
cmp
cmps
pop
add
sbb
jbe
mov
or
iret
xchg
call
test
dec
add
jns
int
jne
mov
mov
xor
mov
imul
inc
inc
cmp
mov
push
sub
cld
mov
mov
jne
mov
lahf
sub
dec
add
ja
dec
ins
mov
xor
and
test
add
mov
mov
inc
outs
or
dec
dec
adc
adc
rcl
fild
ror
test
mov
adc
push
pop
sti
jae
xlat
cmp
int3
jns
fild
push
mov
les
pop
popf
lahf
repz
mov
pop
xchg
es
je
inc
pop
cmp
inc
into
adc
mov
pushf
daa
fs
jge
mov
or
test
mov
mov
cmp
cmp
dec
inc
mov
repnz
iret
rol
(bad)
repnz
mov
cs
daa
cs
adc
jmp
cli
cld
mov
jg
retf
out
or
inc
(bad)
shl
inc
sub
jne
mov
lock
movs
scas
xchg
sub
je
xlat
and
retf
cwde
push
lock
dec
test
sbb
jmp
stos
clc
inc
mov
out
fmul
shl
dec
cmp
and
stos
stos
mov
mov
enter
push
ret
and
or
das
(bad)
mov
and
lds
push
xor
loopne
shl
sub
xchg
rcl
repz
add
into
cmps
pop
ret
and
jl
(bad)
jmp
dec
aas
cld
cmp
add
cmp
jae
push
add
popf
push
add
jb
(bad)
into
popf
popf
out
add
movs
in
fcomip
xor
fcmovnu
data16
cs
pop
and
jmp
movs
sar
call
shl
mov
loopne
xor
cdq
inc
cmps
or
mov
cwde
cmp
sub
repz
iret
(bad)
lds
push
adc
cmp
movs
ds
mov
fisubr
xor
jg
(bad)
out
adc
xchg
pop
adc
in
cmps
dec
xchg
clc
jne
mov
daa
xchg
scas
jne
mov
xor
scas
pop
int
fcmovbe
fbld
push
jae
sub
scas
pop
pop
lods
pop
daa
sub
mov
in
imul
xchg
push
inc
(bad)
xchg
xor
cmps
dec
dec
jnp
pushf
retf
pushf
push
pusha
or
xchg
jne
daa
into
jae
int
jns
outs
or
or
xor
mov
(bad)
jl
retf
pop
sti
arpl
pop
clc
imul
js
je
pop
in
outs
mov
lea
xor
(bad)
int
push
stos
adc
adc
jle
in
mov
ror
pop
mov
das
(bad)
adc
(bad)
fidiv
mov
pop
jle
cmp
adc
(bad)
jmp
je
lds
or
cmp
dec
cld
sahf
and
mov
(bad)
icebp
into
jmp
ins
xchg
mov
sub
sub
ror
movs
outs
repz
(bad)
adc
(bad)
jmp
js
jmp
adc
js
outs
inc
div
std
loop
(bad)
xor
out
rol
dec
test
xor
adc
aam
movs
mov
enter
fcmovb
mov
retf
test
pop
loope
loope
jno
push
ret
dec
popf
mov
dec
in
sub
lods
inc
mov
inc
(bad)
loop
stos
shr
repz
pop
ja
sbb
and
es
or
inc
out
daa
cmp
jbe
movs
call
fdiv
scas
add
call
sbb
mov
push
ja
fs
leave
int3
mov
mov
mov
cld
movs
fldcw
xor
push
and
loopne
data16
sub
into
adc
xchg
dec
rol
sub
xor
sub
addr16
mov
(bad)
test
ja
adc
xor
(bad)
aam
fdivr
xor
je
scas
stos
xlat
cmps
scas
mov
cld
inc
call
inc
xchg
and
add
loope
push
retf
jmp
popa
jb
fldenv
ja
dec
test
ffreep
mov
pop
stos
fadd
repz
dec
xchg
cmp
mov
scas
cdq
xor
cmp
ins
stos
repz
outs
push
sbb
call
ins
jmp
or
adc
push
xor
xchg
call
cdq
add
out
mov
ss
js
shl
xor
dec
cld
mov
mov
cmp
(bad)
das
jle
dec
pushf
sbb
and
mov
(bad)
sub
mov
inc
cmp
ins
adc
xchg
xchg
mov
sbb
mov
adc
in
das
pusha
ds
movs
ins
add
leave
movs
ror
mov
jg
sub
mov
shl
lods
sub
sbb
loopne
jmp
inc
out
ret
or
lods
pop
mov
mov
cmps
mov
dec
stc
adc
dec
xor
cmps
daa
ins
jbe
mov
push
xor
hlt
add
aad
sbb
xchg
pop
aaa
sub
fmul
call
add
rcl
xor
lods
jo
test
lods
mov
(bad)
cwde
sub
adc
loope
repz
sbb
dec
xor
or
test
or
ins
xchg
std
out
pop
jb
test
ficomp
stc
cmps
fnstsw
adc
lock
test
nop
push
enter
jns
(bad)
loopne
repnz
test
in
jo
pop
retf
push
dec
cmp
sub
stc
xchg
sbb
adc
ss
ins
test
aam
(bad)
cmp
je
add
leave
push
test
xchg
sahf
daa
add
mov
out
lahf
fcom
xor
outs
lock
inc
fcmovu
dec
jg
adc
lods
sti
jecxz
imul
movsx
jae
mov
daa
inc
pop
mov
pop
aas
shl
mov
xor
adc
sbb
cmp
aaa
mov
push
cmp
in
dec
aas
pop
or
aaa
push
ja
lods
mov
retf
and
xor
xchg
jp
push
or
pop
(bad)
adc
mov
out
cdq
fdiv
mov
jne
mov
cs
loope
or
std
or
repz
ss
aaa
fcomp
popf
jmp
lahf
in
add
push
ja
sahf
pop
jmp
mov
mov
addr16
mov
ret
sub
jmp
(bad)
jp
mov
pop
pop
sahf
jp
jnp
adc
or
mov
sbb
and
popa
add
(bad)
fist
push
sub
movs
add
bnd
xchg
mov
std
xchg
leave
push
int3
mov
or
into
sub
out
ins
and
pop
jp
je
fcmovne
mov
cs
outs
cld
pushf
xchg
fs
retf
xchg
pop
jae
out
inc
mov
pop
xor
not
jmp
shr
jo
imul
out
fdiv
jno
rcl
adc
les
cmp
cmps
repnz
or
or
movs
aas
mov
sub
dec
call
test
pop
xor
push
sbb
cwde
in
daa
out
jl
mov
inc
(bad)
das
stos
push
or
std
add
or
mov
les
addr16
repz
fld
clc
mov
test
or
mov
(bad)
test
add
call
(bad)
aas
fwait
loope
cli
add
or
fidivr
xchg
adc
pop
add
lods
sub
test
mov
ret
(bad)
dec
lea
in
xchg
mov
enter
pop
jb
push
inc
mov
dec
lahf
inc
popa
mov
in
mov
sbb
jl
add
outs
adc
pop
inc
out
sub
jmp
inc
xchg
in
jb
mov
ret
icebp
popa
in
aam
aaa
jmp
int
fwait
push
dec
xchg
jecxz
call
fnstsw
movs
(bad)
repnz
loop
push
inc
jg
lods
cmp
dec
xchg
mov
fadd
fld
sahf
jle
jns
cmp
ret
sub
sbb
xchg
fstp
aad
pop
fwait
(bad)
sbb
gs
mov
xor
mov
test
sub
icebp
cmc
call
jmp
push
mov
lods
pop
mov
push
fcom
arpl
cmp
pop
movs
mov
pop
cmp
dec
and
push
add
rcl
cmps
sub
sbb
js
icebp
lods
loope
add
retf
xchg
lea
xor
cdq
mov
mov
arpl
jmp
test
cmp
mov
sahf
outs
movs
(bad)
retf
popa
(bad)
push
inc
js
lods
mov
mov
push
movs
cli
mov
cmc
mov
ret
sti
int
fisttp
mov
pop
lods
fadd
sub
add
jl
inc
nop
pop
xor
outs
mov
jae
push
repz
sub
lds
push
ficomp
pop
sahf
(bad)
(bad)
xor
jae
add
movs
pop
cmc
mov
hlt
mul
arpl
cmps
shr
xor
push
dec
hlt
xor
or
imul
xchg
inc
pop
fidiv
add
sbb
dec
out
das
repz
mov
cmps
je
cld
lock
mov
mov
(bad)
idiv
fcom
cld
mov
shr
add
xchg
mov
pop
and
retf
ss
or
fild
sub
cmp
pop
mov
lock
cmp
ret
js
movs
sahf
call
xchg
pop
push
rcl
dec
rcl
lods
(bad)
mov
stos
retf
mov
repz
sub
jns
cmps
xchg
inc
rcl
push
popf
dec
cmp
test
mov
dec
je
out
pop
sub
dec
scas
xor
imul
test
test
add
push
jmp
test
add
and
mov
jno
adc
mov
lock
jb
cmp
fild
jns
pop
mov
(bad)
and
cli
fistp
xchg
add
pop
add
lea
sbb
jg
inc
loop
sbb
lods
jecxz
pop
pop
pop
out
imul
(bad)
xchg
dec
inc
aad
jle
es
ja
jl
out
outs
mov
inc
push
and
sbb
dec
or
inc
mov
jno
xor
and
xchg
outs
pop
test
jg
retfw
test
xchg
adc
or
jbe
repz
xor
push
popf
sub
rcr
or
lods
push
pop
sti
inc
pop
push
outs
into
push
push
test
fldenv
dec
mov
xchg
lahf
pusha
bound
mov
xor
sahf
fdiv
xchg
jge
push
in
rcl
lds
scas
sbb
iret
mov
ror
or
gs
mov
mov
xchg
cdq
cdq
fs
jbe
mov
jne
xor
mov
jno
dec
push
cwde
pop
mov
jecxz
and
call
mov
mov
outs
ss
push
icebp
mov
sbb
inc
stos
sub
pop
mov
or
(bad)
add
sub
and
in
rcr
add
loop
je
cmp
icebp
fsub
dec
adc
inc
jb
xor
sub
out
mov
mov
mov
adc
pop
mov
call
scas
inc
jmp
and
xchg
int
lods
imul
mov
xchg
(bad)
xor
mov
fs
cdq
out
dec
and
sahf
sub
mov
xchg
in
jecxz
or
dec
retf
rcr
push
add
adc
or
imul
jne
and
test
jb
mov
mov
jbe
into
add
dec
add
mov
dec
mov
imul
lods
mov
push
pop
ret
mov
ds
pop
das
pop
out
ins
mov
mul
fmul
inc
jl
jbe
and
movs
xchg
fadd
cmp
push
rcr
pop
cmp
daa
fsubr
jne
in
sub
push
aad
mov
lods
ror
mov
lds
inc
cdq
stos
(bad)
mov
data16
mov
push
adc
and
sub
pop
mov
ins
jae
mov
repnz
lods
test
fisttp
pop
jmp
test
pop
sub
xor
xor
xor
mov
ret
hlt
cs
fs
mov
fldcw
jb
pushf
in
mov
xor
add
pop
lods
xchg
in
add
adc
or
inc
(bad)
pop
es
sub
dec
imul
loope
lea
clc
sub
or
mov
sub
push
add
fisubr
retf
daa
pop
stos
out
out
pop
repz
dec
(bad)
push
push
push
cli
push
or
(bad)
push
push
sahf
inc
aam
stos
inc
mov
push
and
push
scas
cmp
mov
and
push
test
jnp
adc
popf
cmp
outs
and
aas
stc
fwait
not
push
pop
xor
rcl
mov
sar
shl
mov
xchg
jg
sub
mov
cmp
mov
sub
and
add
fist
dec
mov
sub
jg
push
aad
cld
and
out
or
mov
ror
cmp
add
movzx
int3
leave
fbstp
sar
(bad)
mov
sti
daa
pop
mov
in
adc
fwait
pop
jbe
scas
mov
fdivr
push
div
bound
js
cmp
dec
or
retf
ins
out
sub
(bad)
jl
rdtsc
add
xor
clts
xlat
wrmsr
fs
ret
icebp
or
dec
test
shr
dec
cmp
sub
mov
ret
mov
or
sbb
and
and
into
mov
cmc
adc
fst
jmp
inc
rol
xor
dec
sbb
int
mov
(bad)
jbe
adc
add
push
add
rcl
fcmovne
push
xchg
jge
mov
sahf
ja
(bad)
imul
xchg
dec
aas
dec
add
mov
or
adc
das
ins
mov
push
mov
mov
push
(bad)
pusha
in
mov
dec
mov
jno
jmp
je
sbb
jnp
mov
call
js
scas
lock
not
stos
or
inc
xor
dec
push
inc
mov
mov
ror
scas
mov
dec
retf
adc
jle
mov
jmp
stc
loop
pop
inc
movs
inc
cmps
in
cwde
cdq
mov
adc
mov
mov
(bad)
fnstsw
jno
cmp
call
adc
enter
inc
sub
add
cli
rol
ret
adc
xchg
mov
add
or
bound
ror
cmp
mov
je
je
jb
push
out
xchg
mov
xor
fld
in
bound
sar
bound
or
jno
push
sbb
sbb
jp
cld
dec
push
mov
mov
outs
enter
lahf
pop
add
sub
lea
sbb
scas
mov
push
pop
fwait
out
pop
adc
int
pop
xchg
pop
popf
adc
add
xchg
inc
rcl
sbb
pop
aam
cmp
(bad)
pop
dec
mov
int
fs
push
inc
stc
or
mov
fisub
xchg
nop
xchg
pop
into
dec
mov
jecxz
aam
or
and
in
imul
and
jle
loopne
jmp
ficom
mov
icebp
adc
int
(bad)
loop
adc
call
dec
enter
mov
inc
lahf
sub
xchg
jmp
jmp
mov
and
inc
js
adc
es
gs
in
sbb
mov
cs
inc
retf
xchg
int3
leave
push
dec
bound
dec
mov
dec
adc
ja
or
jmp
cdq
jnp
(bad)
jmp
adc
sbb
iret
cmp
mov
mov
pop
dec
movs
push
mov
sbb
sbb
imul
fst
jp
mov
outs
pop
pop
enter
mov
push
fmul
jg
leave
pushf
test
and
ficomp
fcom
push
aam
xchg
gs
ds
pop
outs
pop
test
pop
js
aam
mov
mov
lock
cli
(bad)
out
bound
mov
test
fistp
pusha
mov
and
sar
mov
rol
jmp
call
xchg
or
or
jmp
aad
jmp
jns
mov
push
pop
cdq
jge
out
add
loope
outs
test
jecxz
and
sub
push
sbb
mov
aam
mov
out
sbb
out
(bad)
jne
mov
ror
pop
pushf
sti
pushf
sbb
dec
inc
jl
dec
test
or
dec
pop
addr16
push
stos
push
xor
mov
out
sbb
mov
jle
clc
mov
pop
out
(bad)
xchg
test
xchg
pop
movs
outs
out
pop
call
fsubp
cmc
std
hlt
es
(bad)
imul
test
or
pop
retf
fs
xor
and
lock
imul
ret
or
push
push
addr16
xchg
push
je
sub
aas
cwde
jno
cld
test
mov
add
cmp
loop
jecxz
popf
or
sti
fst
adc
add
jmp
aam
not
fcomp
sub
scas
rcl
dec
cmc
arpl
cmp
adc
pop
out
sbb
push
clc
outs
push
mov
jp
pop
adc
dec
xchg
cmc
cmp
lock
xchg
outs
mov
xchg
int
adc
movs
dec
les
mov
popa
push
mov
inc
xor
fld
(bad)
xor
sub
bound
xchg
sbb
fcomp
push
gs
mov
ja
and
je
push
sbb
scas
mov
push
sar
mov
mov
rcl
xchg
repz
test
jo
test
lds
loope
leave
jle
call
js
cmp
mov
sahf
mov
and
jle
dec
inc
ret
pop
mov
inc
pop
(bad)
cld
sub
js
pop
pop
in
test
xor
in
mov
les
fs
ror
jge
shl
psrad
pusha
movs
inc
sbb
movs
shr
push
mov
push
(bad)
rol
fadd
sbb
outs
fisub
or
pop
aas
call
add
clc
ins
ja
cli
ja
jne
jb
(bad)
outs
ss
cmp
push
mov
sbb
stos
or
rol
loop
jle
ins
fimul
adc
dec
aam
mov
out
test
jge
fsub
mov
mov
push
mov
pop
pop
adc
loop
int
inc
jle
stos
and
mov
loope
sbb
push
cmc
neg
sub
fidivr
adc
xchg
jle
cmc
mul
push
or
jnp
repz
xchg
(bad)
dec
mov
mov
inc
and
adc
test
inc
outs
mov
retf
add
inc
inc
ret
adc
aad
sbb
jae
ja
mov
outs
sub
push
mov
sub
dec
and
or
jns
mov
pop
ins
int
jo
sti
jbe
sbb
push
mov
fnstcw
inc
add
xchg
out
pop
inc
test
dec
push
movs
fimul
push
and
mov
xchg
arpl
cmp
pop
push
ret
mov
add
inc
rcr
mov
(bad)
outs
fist
dec
mov
retf
sub
movs
sbb
nop
xchg
push
pop
lea
jae
inc
inc
mov
sub
fcomip
xor
jp
pushf
mov
jmp
cs
pop
loopne
cmps
imul
xor
je
arpl
adc
or
lahf
std
xchg
in
xchg
aaa
pop
(bad)
and
ret
or
fbld
push
and
outs
cmp
sub
xchg
pop
and
lods
push
repnz
and
sub
test
pop
call
mov
or
(bad)
adc
inc
mov
test
mov
scas
jp
(bad)
sbb
pop
pushfw
push
aad
pop
(bad)
(bad)
cld
xchg
jns
adc
mov
sahf
int3
aas
jae
mov
leave
sub
mov
fs
outs
pop
les
cld
dec
mov
sbb
movs
dec
mov
push
call
and
adc
mov
adc
jmp
fld
adc
out
lods
push
imul
sub
ret
test
cmp
bound
xchg
dec
les
outs
pop
retf
repz
gs
bound
mov
fst
int
dec
jae
(bad)
je
push
std
mov
je
ss
inc
in
mov
mov
mov
cmp
cmps
inc
xchg
aas
cld
enter
xchg
adc
ror
or
fld
stos
push
jae
cdq
dec
dec
jo
mov
pop
push
inc
xor
aad
add
dec
xchg
adc
(bad)
jecxz
adc
ja
cli
or
pop
movs
ror
stos
shl
jmp
ja
das
enter
jle
mov
xchg
call
lods
mov
pop
jg
gs
push
mov
pop
jp
dec
aad
add
add
cmp
int3
xchg
sbb
sbb
les
test
fcomip
ins
or
scas
stos
gs
xchg
push
in
in
(bad)
scas
popf
push
pusha
xchg
in
repnz
mov
aaa
push
push
sti
adc
(bad)
(bad)
out
mov
mov
pushf
or
push
std
leave
cmps
test
das
cwde
push
cmp
jb
fs
pop
push
ret
inc
adc
icebp
and
ins
xchg
les
ror
mov
imul
add
jl
mov
jb
add
pushf
cld
cmp
cmp
inc
or
fcomp
push
jg
jl
ror
add
out
mov
in
add
xor
xchg
loopne
(bad)
mov
cmp
loopne
inc
mov
jno
inc
call
mov
cld
(bad)
js
cmp
imul
ror
adc
cmp
cld
xchg
(bad)
ret
out
mov
retf
repz
jmp
sub
lds
imul
outs
jae
mov
cmps
pop
jp
movs
push
shr
clc
sti
sbb
mov
or
jp
dec
aad
movs
and
mov
fs
cwde
add
cmp
xor
jmp
je
pop
jp
ins
jns
xor
in
daa
data16
lahf
mov
add
xor
bound
scas
adc
in
jmp
(bad)
cmp
addr16
(bad)
outs
out
jl
cld
inc
scas
cmp
imul
out
dec
cdq
cmc
jg
repnz
cmps
xor
ds
push
aam
out
cs
jecxz
jp
mov
add
sbb
adc
loop
or
pop
mov
mov
lods
scas
xchg
inc
inc
mul
xchg
push
aam
xchg
inc
dec
inc
xchg
pusha
(bad)
ret
pusha
push
fs
add
fdiv
cmp
or
sub
out
repnz
ja
xchg
sub
jns
sbb
or
sti
cmp
arpl
xchg
imul
and
imul
(bad)
push
jge
cdq
je
xchg
leave
int3
sub
pop
icebp
sub
inc
mov
(bad)
repnz
adc
test
mov
inc
fisub
das
out
ins
xchg
dec
cmp
fnstsw
(bad)
ds
add
push
repnz
or
leave
sub
daa
test
xor
mov
test
mov
xchg
inc
jae
push
bnd
fimul
inc
test
sub
pop
cmp
shr
(bad)
dec
xor
stc
sar
gs
adc
ret
test
(bad)
cmp
pop
mov
inc
or
mov
arpl
sahf
pop
cld
inc
jne
scas
jb
out
sub
mov
jle
sub
data16
or
ficom
sub
sbb
test
or
cmps
fwait
mov
jns
sbb
adc
cwde
mov
cmp
push
aad
pop
(bad)
iret
mov
add
jg
popf
setns
fldenv
imul
mov
pop
div
push
ror
test
(bad)
out
adc
push
ds
xchg
in
pop
lods
xchg
adc
jmp
jmp
loop
(bad)
outs
push
xchg
stos
loope
xchg
outs
test
cdq
push
pop
(bad)
pop
and
cwde
push
sub
neg
out
inc
jp
mov
jle
faddp
mov
push
ss
xchg
sub
or
popf
inc
push
push
jle
or
or
fs
mov
fisttp
fwait
bound
sti
les
xchg
xchg
jg
pop
lahf
dec
sub
addr16
cmp
sub
in
mov
cdq
sbb
out
push
inc
in
in
mov
mov
arpl
ret
jno
outs
xchg
adc
cli
jmp
enter
xor
add
in
push
retf
lods
add
push
pop
scas
in
aaa
(bad)
cmc
push
mov
mov
shl
push
sub
test
enter
and
add
sbb
and
xchg
mov
sbb
cmps
mov
icebp
mov
dec
gs
or
leave
and
ins
dec
arpl
leave
push
inc
mov
inc
clc
data16
pusha
cld
and
sbb
mov
dec
enter
(bad)
xchg
pop
push
mov
push
mov
std
cwde
lods
pop
lock
bound
pushf
test
in
sub
loope
jno
or
pop
adc
imul
int3
daa
cdq
push
jmp
ret
pop
imul
pusha
push
push
cmp
enter
(bad)
fisub
outs
aad
ss
ja
mov
or
mov
into
xchg
popa
ja
dec
or
int
idiv
loop
push
inc
mov
dec
gs
mov
push
jbe
js
int
push
movs
push
imul
add
inc
mov
jg
std
lds
mov
mov
cmp
mov
mov
and
js
je
mov
retf
xchg
ret
mul
hlt
fisubr
mov
or
cmp
pop
adc
inc
sub
fbld
test
jecxz
xchg
sub
xor
push
pop
adc
mov
fidiv
sub
adc
dec
cli
push
push
xchg
aad
std
mov
pushf
adc
or
xchg
call
mov
mov
addr16
xor
je
lock
rcl
push
pop
mov
mov
sbb
cld
cmc
arpl
dec
int
pop
and
push
sbb
mov
stc
repnz
mov
in
xor
xchg
mov
dec
sbb
aas
cmp
mov
sub
(bad)
sub
mov
sbb
aaa
mov
ss
int3
in
sbb
loop
mov
bound
repnz
inc
push
fadd
rol
in
lea
std
imul
test
push
jns
dec
and
lea
in
icebp
dec
mov
sti
push
push
sbb
and
inc
int
xchg
rcl
bound
mov
push
sbb
enter
pop
add
xor
xchg
cmps
scas
gs
jae
xchg
dec
sub
gs
frstor
or
test
loopne
(bad)
in
push
pop
push
pcmpgtd
mov
or
or
dec
add
into
and
stc
push
daa
and
mov
jo
shr
in
adc
fist
inc
icebp
mov
shl
(bad)
push
pop
push
and
mov
and
mov
dec
jg
scas
or
mov
fs
pop
or
adc
sahf
outs
out
mov
xor
add
push
inc
xchg
mov
outs
loopne
xchg
jl
cli
cmp
mov
out
cli
(bad)
fcomp
stc
cmc
jo
fs
in
hlt
jae
addr16
inc
jp
cmp
mov
push
xchg
ja
push
push
mov
xchg
cmp
sti
ja
ret
pop
repz
jge
and
sbb
loope
ret
dec
(bad)
fnstsw
sub
mov
push
jb
icebp
ins
sub
jae
add
mov
mov
lods
jb
ds
ja
(bad)
test
adc
out
mov
dec
mov
cmp
imul
jg
pop
sbb
inc
mov
pop
movs
cs
pop
xor
out
or
shr
sbb
movs
jbe
imul
mov
sub
or
or
xor
inc
add
(bad)
xchg
cmps
arpl
test
leave
lds
xor
cmps
outs
adc
inc
frstor
xchg
or
fcmovnb
(bad)
mov
pop
or
test
movs
(bad)
push
jae
iret
fstp
scas
sar
add
addr16
adc
xor
idiv
adc
mov
xchg
stos
add
jp
iret
inc
aas
mov
xor
mov
lahf
std
das
pop
pop
xchg
cmp
mov
call
add
ret
sub
jnp
std
sub
push
mov
shl
aaa
dec
adc
adc
sahf
xor
cmp
cmps
ja
pop
and
push
xor
imul
imul
ins
loopne
cs
xchg
int3
in
sahf
and
or
outs
into
mov
lds
enter
arpl
or
inc
aam
pusha
jmp
jecxz
fs
mov
les
sbb
push
cmc
and
outs
pop
sbb
lahf
ds
pop
es
outs
test
sbb
(bad)
popf
mov
jmp
push
xchg
mov
cdq
mov
jnp
xor
mov
sbb
or
imul
into
push
push
(bad)
repnz
or
xchg
add
test
dec
jne
scas
fs
fimul
mov
jmp
ret
ret
rcr
adc
mov
repz
imul
cmp
push
ret
out
nop
cmps
test
cmp
movs
fst
push
clc
int3
fild
les
hlt
sbb
nop
std
jns
xchg
sub
fsubr
push
mov
xadd
sbb
push
lds
inc
fstp
leave
xor
or
into
(bad)
mov
fdivr
push
jne
std
pop
add
sub
sbb
call
retf
xor
dec
fcom
js
jmp
cmps
pop
mov
into
movs
push
stc
and
pop
add
stos
xchg
dec
sub
add
mov
neg
popf
push
lods
mov
adc
cwde
xchg
js
js
rcr
repz
dec
out
stc
xchg
icebp
jl
mov
fcomp
(bad)
popf
cmp
hlt
fdivp
dec
ins
mov
popa
sahf
(bad)
rcl
sahf
mov
mov
scas
icebp
arpl
nop
xchg
(bad)
(bad)
cmp
pop
fimul
movs
cmp
cmp
xor
inc
out
jo
iret
push
jl
and
(bad)
fxch
cmps
mov
and
push
mov
in
xor
leave
jmp
aas
dec
add
jle
rol
push
rcr
push
retf
bound
dec
jmp
retf
test
sub
loope
pop
cs
add
xlat
bnd
jmp
dec
(bad)
in
xchg
push
or
iret
xchg
push
lods
test
xchg
pop
xor
push
sub
into
mov
fld
pop
adc
pop
pushf
cmps
data16
dec
fisub
cld
sbb
cmp
imul
shr
repz
lods
cmp
fisubr
ror
push
fild
pushf
adc
or
ror
or
xchg
in
mov
jae
retf
push
(bad)
fmul
mov
push
sbb
stos
push
mov
mov
mov
pop
dec
jge
inc
ins
or
clc
ins
pusha
int
jnp
mov
scas
int
adc
jno
add
mov
std
fisttp
pop
mov
jbe
stos
cmp
add
inc
xchg
call
stc
jno
loopne
sbb
push
sub
push
jmp
fnstenv
push
sbb
nop
cmp
test
inc
aas
idiv
mov
loope
leave
test
or
(bad)
jae
scas
loop
and
add
imul
push
push
xor
hlt
popf
into
mov
push
loope
dec
sbb
movs
aaa
ret
jecxz
dec
retf
es
cwde
movhps
mov
add
arpl
fdivp
xor
movs
clc
mov
(bad)
std
sbb
mov
push
pushf
ret
inc
xor
sub
stos
jbe
in
rol
mov
outs
js
pop
ins
xor
in
cmp
xor
ds
and
and
jnp
sub
data16
out
cmp
cmps
mov
push
mov
push
jae
pop
push
xor
mov
rcl
data16
je
movs
fnstcw
addr16
xchg
(bad)
in
scas
test
cmp
pop
xchg
out
ret
cli
out
mov
jecxz
pop
fstp
xchg
xchg
sbb
xor
mov
fwait
movs
out
add
xor
push
sbb
stos
jnp
and
mov
icebp
sub
pushf
mov
ins
call
scas
xor
call
xchg
mov
in
cmp
xchg
retf
pop
pop
scas
nop
popa
sbb
jmp
xchg
inc
les
sbb
push
xchg
jb
push
call
ins
xor
dec
jns
outs
mov
sbb
xor
add
lds
adc
(bad)
(bad)
outs
sub
nop
ins
pop
xchg
jp
push
pop
xor
inc
and
push
sub
inc
dec
icebp
fucom
ja
cmc
sub
retf
and
add
popa
xlat
pop
cli
aad
lahf
dec
imul
call
aas
xchg
dec
xchg
pop
inc
lods
(bad)
mov
inc
pop
jbe
mov
inc
loop
hlt
into
int3
push
js
call
and
into
sbb
adc
and
jmp
cld
outs
cmp
push
sbb
cmp
sbb
push
mov
cmps
in
adc
adc
daa
and
or
push
sbb
repnz
adc
movs
test
pop
popa
pop
lods
jmp
popa
inc
or
mov
push
sub
(bad)
cmp
jo
das
xor
rol
ds
int3
sub
aad
fbstp
test
das
fidiv
cwde
push
jo
cmp
and
and
xor
add
fcmovu
aad
data16
xchg
push
xchg
aad
scas
mov
or
repz
pop
pop
mov
leave
jbe
adc
xchg
mov
inc
les
jb
lods
pop
add
inc
lods
fstp
ins
sub
inc
or
sub
dec
(bad)
or
jnp
fldcw
adc
in
das
fsubr
imul
push
cmp
push
mov
lds
rcr
bnd
aaa
jl
mov
xchg
mov
cdq
mov
subps
xor
test
loop
push
imul
xor
scas
mov
mov
iret
push
pop
aad
dec
rdmsr
mov
(bad)
mov
adc
add
cmp
add
into
mov
shr
aaa
dec
inc
fdiv
cli
dec
mov
jl
or
mov
lods
add
nop
sub
push
ja
jecxz
push
or
xchg
mov
je
dec
inc
sbb
ss
paddd
icebp
ins
jge
test
xchg
add
dec
aaa
mov
repz
cmp
lds
jecxz
iret
mov
push
push
mov
arpl
popf
and
inc
in
les
enter
sbb
pushf
and
ret
cs
(bad)
std
or
fcomp
jb
nop
xor
adc
popa
add
call
push
add
and
push
pop
sti
cwde
and
pop
pushf
sub
push
dec
mov
movs
int
jmp
jl
and
mov
sbb
and
ret
jmp
sub
data16
das
inc
mov
push
pop
not
fwait
sub
cmp
movs
push
dec
pop
mov
rcr
xor
inc
push
and
mov
mov
pop
inc
pop
jle
xchg
sub
in
adc
jmp
in
mov
ins
fisubr
aam
aam
pusha
jmp
lds
fld
sbb
adc
jp
imul
lea
adc
fld
das
cs
icebp
push
jecxz
inc
rcl
dec
sbb
(bad)
loopne
sbb
cli
mov
fcos
xchg
mov
js
lods
push
gs
ret
add
mov
xlat
dec
xor
das
loope
xor
xchg
pop
adc
test
pop
cdq
outs
popf
repnz
and
cmc
dec
in
stc
sbb
(bad)
shr
xchg
sbb
js
cmc
js
jl
sbb
add
xor
pop
mov
cld
imul
xor
outs
not
push
mov
cmps
mov
dec
call
push
push
or
repz
jp
test
repnz
mov
scas
aad
lock
add
pop
sbb
sbb
hlt
loope
jno
imul
lock
jnp
(bad)
repz
lods
fs
test
add
lods
cmp
fs
push
(bad)
clc
sub
outs
mov
sub
cli
es
cdq
adc
sar
xor
mov
xor
outs
out
lock
ins
jmp
mov
in
cmp
push
push
or
(bad)
adc
sti
and
jo
mov
mov
sub
cwde
or
hlt
pushf
xor
sti
aas
or
sbb
popf
(bad)
stc
imul
jmp
out
dec
mov
mov
adc
mov
pop
add
add
jg
cmps
pop
jnp
pop
add
jmp
sbb
popf
scas
das
fs
clc
nop
mov
mov
pop
cmc
(bad)
and
loop
xor
xlat
es
jno
retf
int
xor
repz
js
gs
jae
ins
mov
mov
xor
inc
dec
push
retf
cmc
or
and
ds
fisub
lods
aad
inc
xchg
pop
adc
ins
push
fisttp
call
(bad)
scas
and
pop
fiadd
loope
adc
mov
mov
or
icebp
out
push
sbb
jne
cli
je
aaa
push
vmovhpd
shl
ret
lahf
mov
outs
dec
out
xchg
repnz
jb
lods
and
ret
pop
imul
pop
push
jnp
or
xchg
js
add
inc
cdq
xor
mov
xchg
(bad)
loop
fcomp
icebp
pushf
ret
inc
loope
pop
leave
and
inc
sbb
ror
mov
mov
jae
pop
mov
ja
shl
xchg
pop
sbb
add
shr
pop
aas
sub
lea
mov
mov
(bad)
ficomp
iret
inc
and
cmc
xor
ret
and
xchg
cs
push
mov
loop
int
out
mov
jmp
stos
jl
xor
leave
or
cmp
sbb
push
sbb
ins
(bad)
sbb
cs
push
(bad)
ins
addr16
ret
cdq
fidivr
dec
mov
jns
das
shl
push
stc
inc
xchg
ss
and
jbe
xchg
jl
ror
test
cwde
mov
push
ret
inc
push
es
std
(bad)
mov
(bad)
pop
jmp
test
xchg
jg
mov
inc
js
loop
cmp
and
xlat
hlt
ret
lea
aam
mov
jecxz
scas
push
mov
fwait
popf
es
push
(bad)
mov
add
cmp
iret
pop
xchg
iret
cmp
xchg
lods
int
lods
adc
popf
jmp
mov
leave
jmp
push
add
adc
xchg
test
lahf
cmp
add
push
inc
jl
cmp
push
scas
push
adc
je
sub
call
mov
icebp
add
cmps
ds
mov
retf
test
stos
pop
pop
xchg
mov
aad
dec
outs
loop
cwde
arpl
mov
sub
dec
inc
pop
test
enter
pushf
cmps
sbb
mov
xchg
cwde
sub
adc
push
pop
dec
dec
outs
cli
cld
icebp
mov
jge
rcl
and
sbb
mov
aam
pop
dec
push
mov
ficom
inc
in
movs
xchg
inc
cmc
iret
sbb
leave
inc
xlat
mov
stos
shl
xchg
and
test
retf
shl
mov
(bad)
mov
rcr
sub
adc
mov
das
xlat
pop
into
and
inc
pop
pop
dec
dec
leave
stc
adc
jbe
lea
enter
cli
xchg
adc
test
or
(bad)
shl
xor
aam
dec
aam
and
mov
iret
cmps
ins
sub
sub
push
cmp
(bad)
into
sub
and
cmp
adc
out
jp
cmp
arpl
pop
mov
out
dec
shl
add
adc
test
mov
mov
inc
stos
pop
inc
repnz
jg
dec
add
push
mov
loopne
outs
jl
hlt
(bad)
in
aam
aad
sub
test
sub
cmp
outs
aam
jb
mov
mov
in
jmp
xlat
inc
test
cwde
rol
jmp
or
add
fild
fcmovnbe
loop
dec
mov
sub
mov
jae
inc
mov
stos
mov
inc
retf
inc
fdiv
mov
mov
lock
aad
call
retf
inc
xor
jmp
jmp
mov
std
pusha
jns
fisttp
dec
aaa
mov
test
lods
rcr
fisttp
inc
(bad)
rol
push
cmp
and
pop
sub
mov
mov
lea
stc
sub
jecxz
push
sub
fsubr
mov
add
cmp
sbb
test
dec
test
add
lds
nop
repnz
out
mov
mov
xor
or
outs
sbb
(bad)
ds
sbb
mov
sub
push
jnp
neg
stc
scas
jae
xchg
cmps
mov
call
cmp
or
sahf
xchg
mov
jno
add
vfmaddsubpd
(bad)
loop
loop
add
dec
mov
sub
push
sub
push
fadd
mov
(bad)
hlt
popf
icebp
xlat
cmps
js
test
es
pop
pop
xchg
or
rep
push
mov
and
loopne
out
jae
fucomp
(bad)
sbb
outs
aas
adc
(bad)
sti
outs
inc
repz
jo
push
or
cld
push
pop
add
add
rcl
adc
jmp
jb
mov
mov
movs
xchg
sub
push
cld
(bad)
aas
adc
jb
pminub
iret
pop
(bad)
int
loopne
and
out
sbb
in
sbb
or
cmp
cwde
jecxz
sahf
movs
push
orps
(bad)
pusha
jbe
cwde
lods
out
dec
sub
sub
pushf
dec
aad
inc
cmps
imul
and
sar
jno
movs
int
ins
dec
int3
shl
aas
push
dec
pop
retf
(bad)
pop
add
xor
sahf
xor
mov
aam
leave
aad
mov
dec
jp
dec
mov
xchg
iret
pop
mov
lea
sar
fwait
(bad)
mov
xor
sahf
and
loope
in
or
dec
jo
nop
xor
pop
hlt
mov
adc
adc
xchg
pop
pop
ja
pushf
lods
aas
mov
in
mov
test
add
fdiv
iret
and
pop
mov
mov
add
add
sar
pop
rol
arpl
lock
ss
and
shl
jmp
mul
add
test
sub
imul
lock
imul
cmp
push
cmc
or
in
ror
out
adc
in
push
icebp
ja
daa
mov
mov
lods
into
push
(bad)
cmps
inc
or
add
stc
leave
call
cwde
jl
cmp
sub
adc
xchg
in
push
out
hlt
xor
retf
loope
xchg
xchg
adc
cmps
push
push
int3
ficomp
lea
sbb
mov
ret
inc
jecxz
mov
cmp
lods
inc
sbb
or
inc
mov
mov
pushf
mov
loop
adc
jl
js
jo
xor
jecxz
mov
sti
xlat
pop
test
aaa
fldenv
rol
sbb
cmp
cmp
mov
lods
shl
push
mov
xchg
fs
int
loop
adc
bound
mov
adc
cld
hlt
std
adc
jmp
addr16
ins
cmps
xor
xchg
into
mov
xchg
outs
add
in
nop
mov
adc
in
cli
mov
sbb
leave
scas
aad
mov
aas
out
xor
mov
cmc
aad
rol
adc
call
in
jle
scas
mov
sub
jne
dec
ficomp
not
mov
inc
jmp
pop
add
ins
loope
ja
es
rcr
fadd
xchg
adc
test
test
mov
sbb
or
ds
jbe
pop
(bad)
jnp
jmp
push
repz
out
(bad)
(bad)
repnz
mov
sub
mov
dec
add
mov
jp
jb
jmp
jne
test
jno
das
imul
push
xchg
jns
and
repnz
aaa
out
arpl
xlat
adc
pop
push
jnp
pop
(bad)
fisttp
in
(bad)
jb
loopne
sbb
add
mov
jno
in
adc
lock
xchg
stos
xchg
mov
mov
add
xchg
pop
in
arpl
mov
push
fild
mov
into
add
cmp
das
sub
cmp
xchg
addr16
mov
lods
arpl
dec
fisub
call
in
icebp
fnstsw
or
(bad)
out
(bad)
and
cmp
imul
mov
iret
ja
aam
sub
cmp
mov
push
mov
adc
int
sti
(bad)
mov
sub
fild
popf
loopne
call
cmp
mov
cmps
adc
ror
adc
inc
pop
rcl
add
arpl
cmp
scas
jne
xchg
retf
jmp
pop
pop
fcomp
ror
jp
lds
pop
retf
je
pop
sbb
in
cmps
jecxz
iret
dec
adc
rcl
push
jo
fmul
cmp
xchg
mov
add
clc
add
jle
add
loop
jb
xchg
xchg
mov
jnp
pop
repnz
outs
inc
sub
push
jecxz
movs
in
inc
jecxz
out
cmp
push
scas
mov
clc
pusha
loop
aas
mov
and
dec
shl
cmps
xchg
cmp
dec
xlat
xchg
add
mov
adc
shr
cmovp
inc
sbb
cmps
out
push
in
aaa
mov
sbb
mov
clc
mov
loopne
lock
fdivr
lock
imul
mov
dec
fdiv
push
cwde
mov
in
pop
sub
and
(bad)
jmp
aam
test
repz
cmps
push
xchg
cmp
enter
xor
adc
dec
and
fst
outs
cmps
and
and
in
test
mov
test
shr
dec
cmps
push
mov
imul
mov
jmp
sbb
scas
mov
cmp
inc
dec
cmp
jo
aaa
gs
jp
jne
aad
movs
lock
loopne
dec
jns
adc
mov
pop
inc
test
push
test
div
pop
sub
or
fs
sub
xchg
xlat
xor
into
ins
call
or
add
adc
jmp
ret
push
(bad)
push
cmp
xor
into
push
mov
push
repnz
lds
outs
(bad)
inc
ins
ds
dec
mov
adc
or
daa
rol
dec
xchg
cmp
fbld
clc
mov
pop
dec
into
inc
push
jae
outs
stc
xor
or
mov
scas
or
mov
out
pop
push
call
cmc
add
out
sub
shl
fbstp
or
adc
mov
data16
test
sub
sub
in
aas
mov
rcl
jo
sbb
pusha
addr16
cmps
jns
call
aas
loop
mov
in
add
jb
loopne
sub
xor
pop
mov
dec
loope
test
out
gs
push
inc
inc
popa
adc
xor
cmps
rcl
ds
shl
sti
add
outs
jno
cdq
sub
iret
add
mov
gs
mov
(bad)
iret
sti
lahf
push
inc
jno
pop
out
out
out
(bad)
fidivr
mov
dec
push
dec
in
pop
lds
jmp
fidivr
sub
pop
aam
lock
arpl
or
jle
mov
addr16
shr
lock
scas
jo
loop
add
add
jbe
jb
add
inc
or
retf
push
pushf
outs
test
mov
push
sbb
test
pushf
jnp
aaa
push
jnp
fstp
push
sbb
lock
(bad)
dec
repnz
ins
call
jb
and
jns
fdivr
mov
jmp
jge
loopne
mov
cli
pop
cmp
add
add
xor
ret
sbb
mov
pop
iret
jo
jge
mov
mov
clc
leave
adc
pop
push
push
cmp
aam
sbb
out
movs
mov
fisttp
test
lods
(bad)
pop
sbb
jge
and
push
inc
jg
jne
mov
out
fnsave
ja
int3
sub
aas
in
(bad)
and
(bad)
in
xchg
outs
dec
or
icebp
xor
inc
cmp
and
or
push
cli
xlat
push
arpl
mov
jbe
cmp
mov
iret
pop
push
stos
iret
out
dec
dec
mov
jmp
xchg
dec
arpl
push
psubusw
aaa
or
cmp
cmp
enter
cmp
jae
lahf
pop
dec
int
cwde
test
mov
inc
pop
push
pop
mov
mov
xchg
jmp
or
lods
ds
stc
sub
cs
fsub
pop
xchg
fs
je
lods
jbe
xor
call
add
fimul
fs
xor
xchg
inc
jne
ret
mov
jae
adc
frndint
sub
adc
(bad)
and
iret
lods
aam
push
in
lock
cld
mov
dec
fild
mov
lods
(bad)
clc
jge
push
xor
xlat
or
adc
push
fidivr
mov
(bad)
jno
push
(bad)
mov
mov
pop
sbb
out
pop
sbb
lock
cmp
or
stos
mov
xor
jp
movs
bound
add
sbb
(bad)
iret
shl
lea
loopne
mov
lahf
shl
pop
lods
dec
sbb
push
loopne
ret
add
sub
pop
xchg
sbb
in
sbb
dec
push
shl
imul
mov
and
and
xor
sbb
jle
shl
pop
adc
jmp
stos
xchg
arpl
sub
add
hlt
neg
xchg
iret
xchg
fldcw
and
icebp
and
sub
sbb
in
xor
loopne
outs
or
xor
out
xor
lahf
jg
cmc
dec
cmp
pop
or
stc
(bad)
int
loopne
pop
adc
fucom
movs
xchg
(bad)
add
jo
pop
mov
fisubr
loopne
(bad)
fdiv
dec
popa
inc
ret
fsub
ins
inc
das
push
ss
pop
push
and
push
cmp
(bad)
aad
dec
arpl
fild
(bad)
(bad)
jp
lods
sbb
rcr
lods
mov
and
into
lock
neg
loopne
std
and
test
lahf
scas
push
pop
pop
sbb
cmp
mov
scas
loope
add
call
sbb
and
loop
jmp
test
mul
mov
sahf
dec
lea
and
or
cmc
jp
and
adc
test
cs
dec
adc
clc
int
add
jae
icebp
in
add
test
popa
aas
sbb
lods
imul
pop
mov
sbb
pop
mov
vmovhps
popa
cmp
add
mov
iret
jae
jecxz
rcl
das
adc
repnz
scas
rcl
inc
jnp
push
mov
popf
or
jecxz
pop
idiv
test
aaa
paddusb
mov
jmp
xchg
xchg
cmp
sub
mov
mov
adc
out
fs
or
ins
pop
int
cmps
mov
jge
jae
sbb
inc
rcr
and
cmp
cwde
jbe
mov
pop
fwait
das
lea
out
loopne
push
xor
jns
(bad)
sub
int3
sbb
test
add
iret
je
enter
test
add
push
xchg
fldcw
push
(bad)
pop
(bad)
loopne
mov
dec
mov
scas
ficom
jg
lods
cmp
lods
test
add
call
stos
add
addr16
xchg
pusha
inc
push
sbb
or
xchg
jecxz
stos
iret
pop
jecxz
add
hlt
jnp
imul
jno
rcl
mov
stc
sub
adc
mov
or
sub
cmps
rol
sub
sub
ins
mov
xchg
adc
sbb
jmp
outs
mov
add
hlt
and
jne
mov
shl
fnstcw
into
and
std
push
inc
fwait
jb
popa
sbb
mov
adc
loope
adc
adc
fld
jecxz
or
out
pop
repz
mov
out
push
cmps
xor
lahf
push
pop
push
or
sar
xchg
jmp
mov
pop
lds
ja
stc
add
popf
retf
xchg
xchg
clc
(bad)
pop
sbb
and
mov
pop
xor
bound
mov
mov
test
test
loopne
push
or
xor
mov
mov
rol
and
mov
sub
adc
and
cmp
dec
ret
aaa
(bad)
in
cmps
mov
and
rcl
dec
jge
out
arpl
(bad)
inc
push
call
xlat
xor
mov
lahf
xor
repnz
jge
mov
inc
adc
adc
aad
aad
and
popf
push
jb
rcl
jmp
inc
add
pusha
cmp
out
mov
sahf
dec
ja
mov
jg
imul
dec
mov
sbb
mov
pop
pusha
fs
xchg
in
jns
or
mov
pop
aas
jg
das
sbb
jnp
mov
jl
mov
push
repnz
inc
imul
jge
imul
cmp
xor
enter
sbb
mov
imul
jnp
cdq
mov
cmp
sar
aas
xchg
xchg
xchg
push
dec
cld
ds
popf
cs
or
daa
add
lahf
je
out
ins
sub
mov
clc
adc
mov
retf
test
xlat
in
or
jbe
or
fild
mov
xchg
mov
in
cmp
xchg
shl
ret
ror
mov
xor
popf
ficom
and
mov
push
cdq
lods
rcl
fstp
popf
cmp
mov
idiv
and
mov
mov
repz
jle
movs
push
mov
mov
stos
mov
sub
lods
mov
push
es
cdq
jmp
sub
xchg
push
in
repz
jno
test
aas
pushf
xchg
pop
mov
inc
mov
xchg
fidiv
cld
mov
push
xchg
enter
ret
retf
jne
rcl
xchg
sbb
mov
les
sbb
inc
xor
push
mul
adc
(bad)
imul
xor
mov
mov
xor
aas
push
push
add
data16
ins
fstp
lods
mov
and
aad
arpl
and
sbb
jge
jae
and
cmps
fidiv
out
adc
inc
ds
ins
mov
sbb
and
adc
cmps
outs
stos
jb
clc
and
(bad)
sbb
int
push
dec
repnz
xchg
mov
stos
and
repnz
ds
lods
inc
dec
jns
out
test
mov
nop
sbb
jbe
and
sub
mov
int3
enter
das
xchg
add
rcl
rol
push
cs
xchg
sbb
mov
(bad)
aad
mov
shr
stc
mov
mov
clc
jno
fild
dec
jg
mov
imul
adc
adc
adc
call
sub
mov
mov
inc
push
xchg
test
inc
push
push
rcl
int3
adc
mov
sub
mov
mov
jl
lds
push
out
call
mov
out
mov
pushf
lods
call
mov
addr16
fisttp
and
loope
test
xchg
fs
cld
jb
cmp
mov
sub
ins
lods
subps
and
push
push
add
les
arpl
into
pusha
pop
out
scas
xchg
mov
xchg
mov
stos
getsec
shr
lock
xchg
scas
ret
push
jbe
adc
push
cmp
(bad)
addr16
push
call
out
cmp
xchg
inc
dec
pop
repnz
gs
dec
push
into
dec
mov
bound
xor
pop
popa
adc
and
xchg
aam
int3
and
popa
and
mov
cmp
cmp
jnp
push
jb
pop
dec
push
mov
loopne
palignr
jbe
cmps
mov
(bad)
dec
or
popa
pop
(bad)
imul
mov
jnp
das
fnsave
jmp
push
js
test
dec
fstp
loopne
sub
dec
ins
pop
cmp
cmp
dec
ja
xor
xor
aaa
mov
sbb
sub
bsr
retf
mov
fidiv
aad
sbb
ffree
clc
add
cdq
xor
int
jae
or
sbb
xchg
leave
cmps
(bad)
xor
xor
xchg
mov
jmp
mov
mov
adc
ins
cli
outs
jmp
cmp
dec
ret
mov
cmp
cld
lahf
xchg
daa
adc
lahf
imul
ja
or
shr
fdivr
fwait
(bad)
retf
and
ins
pop
in
sub
fimul
jnp
daa
sub
mov
cmc
out
pop
movlps
addr16
gs
or
out
sub
in
or
pop
pop
in
sbb
jecxz
dec
call
aam
dec
mov
mov
fsubr
mov
jae
in
jo
dec
mov
je
dec
loop
mov
fwait
or
lods
cmp
adc
or
mov
jae
cs
fiadd
stos
cmps
dec
push
jae
out
pusha
outs
xchg
dec
cmp
or
shl
or
fwait
mov
ret
clc
and
in
ficom
lahf
cmp
mov
std
ret
add
mov
rcl
mov
inc
call
sub
jg
lods
leave
cli
pop
cmp
ret
(bad)
ds
and
sbb
sar
ret
hlt
daa
xchg
jo
sti
adc
dec
in
(bad)
scas
cmp
and
jmp
pushf
div
fs
jo
pop
stos
and
out
push
das
pop
cmp
and
rol
jae
fs
dec
push
addr16
mov
pop
div
xchg
lods
mov
int
or
sbb
in
or
inc
imul
(bad)
sbb
test
dec
sbb
imul
fs
push
enter
icebp
dec
xor
outs
jns
mov
aas
and
in
movs
in
ins
pop
ret
mov
jecxz
add
inc
xor
mov
adc
fmul
pop
pop
retf
shr
cmp
imul
or
es
pop
sbb
shr
pop
jae
jo
stos
jmp
pop
push
cmps
stos
jmp
or
out
mov
mov
adc
sti
int3
aad
push
imul
sub
adc
hlt
jl
adc
gs
pusha
(bad)
daa
sub
push
xchg
jae
mov
cmps
or
into
das
test
iret
xlat
xchg
inc
out
jb
mov
aam
dec
mov
adc
(bad)
cld
outs
pop
test
push
jo
pop
xchg
mov
dec
aam
mov
xor
and
xchg
cld
inc
mov
mov
(bad)
jmp
and
mov
rcl
xor
loopne
jb
into
stc
cs
(bad)
cmp
into
jae
icebp
cmc
pop
mov
xor
(bad)
jle
xlat
dec
mov
mov
push
out
cmp
retf
adc
shl
lds
jno
jnp
ja
ds
add
popf
adc
pop
test
stos
pop
jbe
jae
clc
inc
mov
aam
jg
ror
inc
ja
jmp
adc
or
ins
fst
push
test
rcr
mov
fs
add
or
xor
push
dec
dec
repz
sbb
add
call
jnp
sbb
add
in
xor
jbe
pop
mov
icebp
jo
loope
adc
pop
mov
xor
mov
xor
cmp
jmp
loop
mov
gs
sbb
dec
(bad)
and
movs
nop
lods
and
imul
and
inc
out
mov
xor
inc
fld
lods
stos
aaa
rcl
out
and
popa
jno
fwait
mov
cld
pushw
jb
data16
popf
test
fiadd
arpl
stc
in
and
jne
mov
inc
dec
daa
(bad)
aam
dec
(bad)
sahf
mov
sub
movs
arpl
fcomp
push
mov
jae
pop
jge
inc
and
shr
mov
pop
inc
push
int
hlt
test
xchg
dec
mov
or
jb
inc
(bad)
jno
jp
jb
cmp
jl
mov
jns
in
mov
test
and
push
fmulp
movs
test
mov
fwait
adc
arpl
movs
mov
bnd
nop
mov
ret
or
jae
(bad)
out
xor
and
mov
and
popf
and
sub
pop
xchg
shr
mov
sbb
xlat
stos
and
lock
sbb
cmps
push
shl
stc
push
outs
rcr
xor
dec
add
arpl
inc
sub
pop
sar
lods
push
fsubr
push
adc
cld
imul
and
gs
sub
mov
pop
xor
adc
iret
xlat
jns
xor
sub
outs
cld
xor
xor
int
ds
(bad)
xor
inc
and
lods
aad
mov
std
mov
cmp
pusha
and
cmps
adc
sub
pushw
jg
inc
add
sbb
pop
pop
cmc
into
add
into
mov
ds
rcr
mov
sub
cmp
cmc
lahf
xor
icebp
cmp
ret
inc
shr
ror
add
add
mov
std
iret
push
(bad)
jge
adc
popf
bound
dec
repz
sbb
and
xchg
mov
xchg
stos
rcr
pushf
mov
aam
in
lahf
int
jmp
imul
pop
scas
nop
xchg
cmp
push
adc
inc
ret
add
push
jmp
ins
mov
xchg
fnsave
jb
jl
loope
je
push
cli
mov
loop
mov
xchg
leave
sub
inc
xchg
in
in
xor
(bad)
adc
xchg
xchg
pop
jecxz
cmc
or
mov
fwait
add
sahf
(bad)
ret
shr
mov
test
aaa
std
push
ins
in
sub
jmp
out
sbb
push
jecxz
and
leave
imul
enter
cmp
cli
sti
dec
pop
jo
daa
add
push
pop
movs
retf
sbb
lahf
repz
xlat
popf
inc
int
add
pop
push
pop
lea
(bad)
mov
arpl
and
sbb
jmp
or
adc
sahf
loope
cmp
ss
sbb
or
mov
rcr
daa
sbb
fistp
ret
ud1
cmps
sub
clc
jp
test
std
sbb
movs
push
inc
push
jnp
test
test
cmps
cs
cmp
dec
or
js
cmp
rcl
hlt
add
sbb
movs
(bad)
dec
push
cmp
test
retf
test
call
gs
pop
cmp
sub
fbld
cwde
jge
xchg
lods
mov
fcmovb
in
iret
inc
aad
and
shl
push
push
mov
cmc
stc
(bad)
clc
pushf
dec
mov
out
xchg
mov
lods
imul
in
mov
out
mov
popa
fs
dec
fiadd
add
add
mov
les
pop
shr
push
aam
push
cmps
cmp
(bad)
inc
sub
fisttp
ret
in
xor
sub
inc
ror
mov
(bad)
fs
aaa
aas
sbb
(bad)
dec
or
xchg
loope
xchg
nop
cmps
dec
pop
in
pusha
mov
cmp
pop
xor
(bad)
sub
push
jmp
mov
fiadd
inc
or
mov
or
cmp
adc
shl
sub
lea
or
in
std
dec
pop
jo
cli
mov
or
mov
(bad)
or
mov
sbb
and
cld
lea
lds
xchg
cmp
gs
sbb
sahf
out
jns
inc
icebp
icebp
xchg
in
and
inc
dec
and
cdq
(bad)
xor
stos
lods
cmps
mov
mov
jge
mov
call
lods
pop
cmp
popf
inc
mov
jecxz
jnp
lods
scas
push
push
movs
jl
add
retf
adc
loope
aad
js
mov
repz
pop
xlat
pusha
test
mov
sbb
mov
mov
clc
addr16
inc
pop
sbb
mov
mov
push
jnp
imul
jle
push
adc
inc
push
push
sbb
xchg
sar
mov
ins
out
jmp
popa
imul
pop
cmp
jmp
fsub
and
aas
in
clc
pavgb
out
lds
push
xrelease
or
test
xchg
sbb
sub
aad
inc
ins
xor
fs
inc
or
jmp
test
cmps
ins
mov
or
pushf
and
xchg
call
call
out
mov
fs
xchg
xor
pusha
xchg
loop
pop
add
cmp
cdq
call
stos
mov
push
ins
or
push
mov
jle
pop
jne
xchg
xor
cmp
xor
adc
mov
sti
imul
push
int3
or
lea
xor
(bad)
xchg
ror
(bad)
jge
mov
enter
jecxz
ror
int
call
jg
sub
sub
xlat
out
or
aam
pusha
arpl
shl
loopne
ror
dec
imul
push
gs
lahf
push
push
ins
mov
icebp
mov
or
or
or
xor
loopne
or
in
imul
call
mov
fyl2xp1
rcr
jne
dec
popf
int
jp
xchg
out
add
loopne
cmp
push
dec
repnz
dec
rcr
inc
cmp
and
sbb
or
ret
fistp
js
mov
add
mov
xor
cmp
test
adc
lock
pop
xor
imul
retf
xchg
pop
ret
inc
(bad)
jae
jns
in
pushf
les
call
stc
pop
loope
gs
pop
inc
lea
xchg
pause
inc
xor
pop
test
scas
lods
enter
movs
dec
xchg
mov
jecxz
cmc
adc
outs
sub
jmp
mov
and
into
sbb
test
xchg
cwde
dec
push
add
retf
cmp
jge
scas
or
pop
add
inc
add
sub
sbb
or
jns
les
mov
mov
out
sbb
ins
fidivr
outs
pop
icebp
mov
mov
fild
mov
mov
cmps
ret
jmp
inc
add
ror
sub
lods
loope
mov
rol
sbb
cli
call
dec
retw
lods
cmp
(bad)
enter
dec
aas
retfw
xor
push
jns
xlat
jge
lock
adc
pop
dec
adc
jecxz
push
jbe
push
sbb
jl
sbb
push
inc
je
cmc
dec
adc
pushf
retf
mov
mov
ins
or
aaa
int3
sar
mov
xor
fcomp
inc
inc
mov
fs
pop
popf
aaa
scas
pop
movs
(bad)
movs
fadd
jae
mov
lods
bound
aas
nop
movs
pop
mov
idiv
ret
inc
xor
ret
stos
dec
inc
outs
xor
xchg
jmp
mov
ret
pushf
imul
lock
sti
mov
jnp
sub
movs
enter
sahf
loope
xchg
pop
ds
repz
pushf
fcmove
addr16
xor
xchg
mul
stc
enter
xchg
sbb
es
fcmovnu
xchg
loop
outs
fild
add
cdq
mov
inc
and
les
xchg
add
mov
inc
lock
jg
imul
and
mov
test
push
push
sub
icebp
arpl
inc
sbb
jmp
test
and
shl
icebp
repz
push
dec
je
pop
pusha
or
sub
popa
mov
out
xchg
pop
sub
call
dec
cdq
mov
dec
mov
sbb
cmp
fldpi
pushf
sub
lea
inc
dec
dec
xchg
mov
inc
jo
mov
jo
mov
mov
aaa
mov
or
jle
data16
or
int3
imul
(bad)
sbb
and
fadd
push
mov
aad
out
push
xchg
pushf
int3
or
jecxz
push
pop
ror
ss
shr
xchg
jae
xchg
mov
adc
int
dec
push
mov
pop
ret
push
cmps
xor
test
test
adc
inc
outs
sahf
add
and
and
je
je
jbe
or
into
mov
(bad)
inc
jecxz
nop
mov
jmp
xor
jge
push
or
sub
sbb
shl
stc
cld
pusha
call
and
mov
(bad)
push
and
ins
mov
lods
es
fistp
repz
stos
in
mov
push
push
stos
test
cs
cdq
ins
jmp
mov
sbb
inc
aam
push
stc
sub
div
mov
jb
stos
cdq
xor
cdq
adc
ret
mul
dec
xor
sub
sbb
ret
push
xor
mov
add
xchg
or
add
inc
loope
pop
cmp
mov
call
xchg
imul
lea
adc
scas
(bad)
mov
mov
pop
xor
(bad)
(bad)
loopne
lahf
(bad)
mov
repz
push
fwait
mov
jb
jecxz
stos
push
pushf
bound
loope
dec
popa
imul
lahf
xchg
dec
pop
cmp
movs
jb
add
sub
push
adc
dec
iret
xchg
(bad)
cs
jmp
call
mov
adc
mov
push
inc
jo
inc
add
sti
and
and
mov
jmp
mov
inc
xor
jns
jge
jno
cmp
push
test
or
push
sub
mov
xor
call
fwait
inc
mov
push
retf
mov
retf
lds
add
mov
dec
stos
and
cmp
lds
ins
lahf
mov
or
mov
jmp
loope
cmp
(bad)
daa
pop
popf
sub
and
pop
mov
sbb
retf
test
jnp
jno
dec
dec
ret
push
mov
adc
(bad)
or
sahf
shl
mov
dec
in
test
or
loope
sbb
or
mov
inc
loop
jmp
mov
mov
jp
call
retf
xor
pop
mov
add
rcl
hlt
mov
ss
fucomp
repz
std
fdivr
mov
xchg
fwait
xor
(bad)
shrd
xchg
iret
cli
jns
cld
jne
mov
sbb
dec
sar
mov
rcr
aam
and
pop
mov
pop
mov
xor
pop
scas
add
sub
call
jae
cmps
lea
xor
inc
arpl
jle
faddp
fs
inc
call
in
inc
aam
xlat
(bad)
jo
fstp
call
mov
pop
mov
or
mov
dec
(bad)
push
lds
call
ja
mov
pop
aas
cld
xor
xchg
outs
sbb
fmul
jmp
jge
mov
and
pop
mov
neg
sti
ds
or
ss
jnp
sbb
jg
mov
(bad)
or
les
aam
sbb
push
imul
mov
enter
and
or
mov
iret
mov
ffreep
xor
add
(bad)
sub
idiv
loop
pop
jnp
mov
gs
pop
pop
stc
push
(bad)
xchg
mov
dec
(bad)
pushf
adc
fs
add
sbb
xor
mov
or
cmp
jp
cmp
cli
mov
shl
cmp
push
jns
sbb
ins
pop
cli
mov
push
sub
push
aam
jmp
test
dec
ins
rcr
std
call
mov
pop
gs
mov
bound
mov
inc
ret
sub
outs
lea
aam
(bad)
and
push
in
jle
or
adc
test
mov
jecxz
rcr
hlt
cld
inc
mov
pusha
mov
out
imul
shl
stos
in
push
adc
daa
jae
xor
or
dec
pop
jp
add
std
add
adc
lds
stos
push
lahf
xchg
pop
cli
add
push
and
fistp
(bad)
popf
xchg
adc
outs
xor
jns
mov
mov
mov
cmp
mov
adc
popa
imul
or
int3
adc
data16
or
jecxz
mov
out
mov
xchg
movs
hlt
dec
lds
jl
jno
ret
mov
les
aas
adc
les
out
stos
sub
sub
cdq
add
add
xor
cmp
jns
lahf
push
jecxz
in
in
mov
leave
jbe
inc
loope
jge
scas
and
xchg
and
xchg
(bad)
mov
jl
dec
aad
scas
adc
mov
ror
push
or
aas
cmp
adc
xchg
or
mov
xchg
jge
out
push
jmp
imul
loope
dec
inc
imul
retf
or
out
out
sub
out
cmp
xor
push
call
cmp
xchg
(bad)
cmps
sahf
mov
cdq
rol
inc
iret
lahf
dec
and
or
mov
je
call
ss
xor
cmp
pop
adc
es
sbb
mov
loop
and
cdq
es
popf
add
dec
cmp
gs
adc
pop
and
lock
test
push
xchg
jns
dec
out
(bad)
cli
cwde
dec
call
mov
adc
mov
jg
imul
add
dec
lds
mov
out
loope
dec
sub
pusha
pop
jnp
sti
adc
rcl
xor
cs
sahf
sub
adc
pusha
cmp
(bad)
movs
inc
jns
adc
jmp
fistp
dec
ds
and
js
push
mov
add
jns
and
and
push
ret
jo
out
mov
mov
push
fdiv
das
pop
pop
push
mov
fs
mov
xchg
and
mov
fnstenv
ficom
adc
fcomi
xlat
lods
lea
movs
cdq
mov
das
into
rol
outs
jmp
les
inc
and
fs
movs
pop
xor
mov
mov
sbb
jbe
inc
mov
addr16
loopne
adc
sbb
push
js
inc
iret
lods
pop
nop
retf
in
or
pop
js
fwait
cmp
clc
dec
xor
cld
jnp
sub
loop
push
xor
fmul
push
inc
adc
sub
cli
inc
mov
out
pop
cli
in
lods
pop
push
bound
(bad)
cmps
mov
or
xchg
sbb
pop
mov
pop
inc
and
data16
mov
outs
fwait
jmp
stos
mov
ins
call
aad
(bad)
sar
les
into
enter
xchg
xor
mov
call
stos
lds
pusha
pop
enter
icebp
mov
mov
jno
leave
push
outs
xor
mov
pop
ins
pop
mov
and
dec
retf
jne
rol
cmp
stc
cdq
call
call
(bad)
jp
mov
(bad)
mov
(bad)
out
sbb
cli
jle
ja
dec
jns
clc
or
fadd
in
lock
pushaw
dec
add
cmp
jl
xchg
pop
cld
out
or
lods
repz
idiv
inc
or
push
mov
loop
ins
add
nop
popf
shl
jns
add
mov
jge
mov
mov
cmps
jmp
aaa
mov
loop
in
inc
call
mov
call
sbb
nop
mov
cmps
les
dec
pushf
jnp
mov
jmp
cmp
int3
or
cwde
inc
sar
pop
lods
or
dec
push
ficom
icebp
adc
(bad)
mov
cmp
inc
hlt
mov
ds
aad
ret
retf
sub
jbe
in
and
retf
hlt
fwait
out
push
push
and
fst
fcomp
push
hlt
dec
lahf
ret
or
adc
sub
in
dec
test
pop
or
and
adc
xchg
mov
loop
cmc
out
js
fadd
push
ret
loope
int
or
js
(bad)
sbb
in
push
pop
mov
mov
fdiv
mov
xor
xor
inc
retf
mov
idiv
(bad)
aam
idiv
(bad)
pop
pop
(bad)
sub
jnp
mov
aas
xchg
cmps
xlat
retf
push
ret
adc
in
pop
cwde
lds
or
mov
jns
outs
inc
mov
fcomp
ror
mov
test
hlt
retf
inc
jg
jle
mov
mov
add
xor
pop
stc
mov
mov
bound
adc
push
pop
pop
shl
jbe
ret
xor
add
cmp
dec
jnp
mov
mov
int3
aaa
fistp
jmp
aas
sahf
push
jge
pop
mov
mov
add
cmc
inc
or
jnp
fisttp
gs
cmp
jmp
push
ret
pop
addr16
mov
dec
mov
lods
shl
daa
div
inc
mov
ss
icebp
popa
sub
loopne
call
adc
jle
push
loop
ret
mov
push
dec
ss
out
add
pop
sub
inc
jecxz
pusha
sbb
cli
aam
retf
or
fisttp
mov
sbb
jmp
sti
mov
and
mov
aaa
mov
movs
mov
je
or
adc
repnz
pusha
inc
pop
inc
std
cmc
scas
push
sbb
ror
imul
imul
xchg
ins
xchg
add
in
or
mov
mov
mov
repnz
push
add
push
fnsave
out
(bad)
out
test
out
movs
push
loopne
nop
and
not
(bad)
imul
xor
adc
cmp
mov
jbe
(bad)
jmp
cli
sbb
cmp
ret
xchg
cmp
call
xchg
jbe
mov
or
cld
enter
pop
cmp
inc
xchg
xor
push
out
call
sub
jno
mov
fs
cwde
push
rol
adc
(bad)
aad
xchg
sbb
ret
rol
sub
sbb
dec
ds
or
inc
push
cmc
popa
(bad)
scas
loope
jl
enter
inc
and
inc
inc
dec
scas
std
cmp
push
fcmovnb
gs
repz
sub
nop
xor
sub
pop
fidivr
sub
(bad)
leavew
mov
jbe
mov
pop
xchg
out
(bad)
jae
je
cmps
mov
mov
dec
mov
add
sahf
aas
cmc
jne
leave
xor
push
das
adc
pop
stc
or
mov
sar
mov
and
or
test
adc
inc
les
sub
in
retf
jo
mov
xor
in
xchg
outs
pop
mov
cmp
mov
out
fbld
dec
loope
fild
mov
out
xchg
push
xchg
mov
iret
pushf
out
jb
cmps
push
sar
movs
and
mov
cwde
lock
jmp
mov
xor
jle
mov
sub
aad
xchg
sbb
or
std
fwait
adc
sbb
push
mov
leave
repz
xor
pusha
mov
pusha
or
cmp
adc
xchg
sti
out
movs
bound
sub
mov
push
dec
aad
pop
ds
fmulp
jp
fxtract
in
loopne
sub
fcom
pop
inc
dec
push
xchg
xor
mov
add
leave
push
or
pop
mov
pop
jnp
or
mov
push
push
xchg
lock
stc
int
xchg
xor
sbb
sar
add
cmp
push
jnp
repnz
leave
or
retf
xchg
scas
stos
inc
sbb
scas
xlat
repnz
mov
popa
cmc
outs
dec
jae
lahf
xchg
stos
dec
xchg
bound
outs
mov
lock
aam
add
ds
pop
rol
adc
std
inc
mov
std
push
and
mov
dec
xor
add
sbb
cli
push
imul
pop
daa
call
(bad)
rol
mov
push
mov
test
inc
pop
aam
cwde
ins
dec
shl
or
fwait
mov
in
retf
mov
adc
add
inc
shr
push
ss
fisubr
push
or
ficomp
inc
loopne
mov
xchg
lds
sbb
lahf
shr
in
and
test
pop
shl
pop
mul
cmp
call
stc
mov
adc
and
xor
fadd
data16
lods
jp
mov
test
fst
fistp
scas
mov
out
shr
push
mov
lds
fdivr
jmp
mov
inc
xchg
adc
adc
xchg
aam
pop
enter
mov
mov
and
pop
out
cdq
sub
in
mov
call
dec
adc
adc
imul
stos
aas
(bad)
cmps
sbb
jo
add
xchg
bound
out
sub
xchg
fild
xor
pop
dec
(bad)
lahf
add
mov
fistp
cwde
jbe
hlt
imul
cmc
aad
dec
mov
mov
sti
ins
pop
xor
cmp
xor
(bad)
cmc
mov
cdq
jge
ins
add
mov
cmp
fs
mov
bound
das
sub
out
lea
out
push
cmp
mov
dec
mov
xlat
ss
dec
push
aad
popa
in
(bad)
cmp
jle
and
ror
xchg
adc
in
add
pop
mov
push
mov
push
iret
aas
jge
dec
adc
pushf
push
cmp
sahf
add
and
dec
inc
cmp
mov
addr16
aad
imul
cmp
sub
push
pushf
fld
out
loopne
test
dec
mov
cli
jle
icebp
(bad)
(bad)
rcl
mov
in
sbb
ds
loop
xchg
inc
pop
lods
sbb
xor
je
js
cmp
add
add
out
dec
jns
out
lods
xchg
jne
outs
or
cmps
xor
inc
shl
push
jne
jecxz
(bad)
mov
popf
ins
pop
add
(bad)
in
adc
cmp
int
lahf
cmp
pop
jle
xor
adc
outs
xlat
jmp
lods
lea
jbe
push
and
mov
cmc
pop
shl
aam
push
ror
and
jge
mov
les
scas
cmp
bound
inc
stc
fisttp
mov
hlt
fwait
sub
xlat
xchg
shl
cmp
lahf
mov
jle
movs
cmp
rcr
scas
jno
adc
nop
fs
(bad)
mov
or
lods
idiv
add
xchg
movs
sbb
mov
lock
sub
or
pop
inc
pop
jle
pop
inc
out
dec
mov
rcr
iret
and
nop
sub
lods
push
jp
adc
scas
test
xchg
stos
add
mov
(bad)
stos
mov
iret
adc
xchg
lods
in
shl
sbb
xor
jne
sahf
jl
adc
push
mov
and
enter
pop
jg
mov
out
add
stos
pop
(bad)
cli
outs
pop
ret
push
(bad)
std
rol
jg
rol
pop
sar
test
pop
or
stos
jmp
jbe
cmps
loop
stc
data16
pop
sbb
clc
push
rcr
loop
pcmpeqw
sub
fs
add
inc
aam
pusha
mov
scas
adc
mov
shr
sbb
icebp
sub
and
iret
movs
bound
xchg
imul
push
mov
mov
inc
and
xlat
xor
fs
add
sahf
icebp
outs
shr
add
call
push
sbb
add
pop
out
hlt
mov
es
inc
xor
cmp
cmp
pop
(bad)
dec
jl
cmps
mov
pop
aaa
sahf
jg
shl
xor
mov
mov
jnp
inc
test
add
and
call
int
cmp
cmp
(bad)
cmp
add
jbe
xor
cmp
in
push
mov
cmp
mov
cmps
jns
(bad)
jge
call
retf
dec
and
mov
jbe
sub
stos
pop
sub
gs
nop
push
sbb
add
inc
nop
and
jecxz
test
icebp
jp
(bad)
adc
popa
fiadd
or
mov
pop
arpl
jmp
dec
bound
mov
jnp
repz
out
dec
push
imul
cmc
sub
dec
sbb
test
cmp
xor
imul
dec
sub
pop
mov
xor
ret
(bad)
sub
les
les
scas
aas
loope
cmp
test
call
rcl
in
pop
add
push
inc
(bad)
push
fcom
inc
icebp
out
push
pop
pop
frstor
(bad)
test
das
sbb
dec
dec
xor
add
mov
xchg
int3
in
loope
sbb
jecxz
push
xchg
neg
adc
xor
mov
adc
xchg
xchg
clc
lahf
and
out
loopne
and
les
xchg
mov
test
es
mov
(bad)
icebp
je
jnp
popa
stos
(bad)
dec
bound
cmp
mov
sub
mov
into
mov
sub
adc
and
inc
pop
mov
stc
loopne
sub
outs
(bad)
(bad)
lods
ficomp
call
mov
loop
xchg
popf
push
loop
fidivr
xlat
push
repnz
jl
jae
xchg
cmp
enter
lea
mov
push
stos
pusha
cmps
inc
mov
repnz
jne
sub
or
mov
pop
enter
or
aad
rol
cmp
push
dec
sbb
sub
pop
jmp
add
(bad)
in
mov
mov
mov
out
sub
shl
ins
dec
imul
retf
push
ss
out
cmp
lods
sbb
enter
push
imul
cld
into
fisttp
and
outs
pop
movs
and
scas
loopne
ins
push
pop
dec
hlt
sub
mov
adc
shl
addr16
pop
fild
out
xor
cdq
shl
add
sub
add
sbb
sub
mov
hlt
sbb
inc
jae
scas
inc
lahf
call
or
sub
mov
shl
xchg
rcr
jns
jnp
mov
xor
or
push
gs
retf
fs
jmp
sub
xchg
call
mov
add
in
rcr
ins
add
aad
sub
dec
fisub
(bad)
and
mov
cmp
mov
jo
mov
pop
(bad)
fldl2t
lds
inc
push
add
mov
adc
(bad)
cld
aad
mov
mov
mov
cmp
pop
arpl
fwait
cmp
xchg
fsubr
and
mov
iret
mov
inc
dec
push
xor
sahf
scas
pop
lock
or
mov
inc
f2xm1
int
and
fisttp
mov
mov
mov
loopne
sub
xchg
stos
fcom
int3
mov
lods
imul
xchg
(bad)
mov
mov
sub
push
sbb
test
cmc
repnz
ds
adc
imul
add
iret
jp
sbb
cld
push
or
jae
popa
lods
scas
stos
add
dec
push
push
out
fdiv
mov
pop
pop
xor
sub
fstp
mov
aaa
movs
and
xchg
push
push
pop
lds
mov
jns
cmp
std
cmp
cmps
shl
test
jae
in
push
push
xor
fmul
push
int3
ds
mov
test
jne
es
adc
sbb
sub
fs
hlt
sbb
xchg
in
add
sub
kmovd
and
fldcw
xchg
(bad)
adc
cmps
inc
retf
test
cmp
cmc
fnsave
jmp
movs
aad
xchg
retf
xor
clc
add
mov
fcomi
cmps
dec
das
push
das
aaa
xor
imul
pop
xchg
loope
std
out
add
sbb
push
arpl
or
mov
or
ret
xchg
outs
sub
pusha
fbstp
mov
das
and
push
stos
sub
push
pop
cmps
adc
push
mov
cmps
xchg
push
movs
jp
mov
xor
pop
mov
leave
xchg
cld
push
test
inc
jl
pop
loope
test
pop
mov
mov
call
scas
dec
retf
mov
jns
mov
adc
movs
xchg
dec
mov
ja
lahf
inc
jb
cmp
aam
(bad)
xor
(bad)
stc
nop
pop
fisttp
fidiv
mov
jp
shl
mov
jp
and
stos
stos
es
scas
xor
sbb
mov
mov
sti
daa
cld
mov
shl
ins
xchg
cmc
ins
les
mov
mov
into
pop
or
xchg
bound
pop
fcom
data16
scas
(bad)
hlt
pop
addr16
mov
cmp
test
pop
enter
in
movs
sbb
inc
and
mov
mov
sub
add
mov
cmp
in
pop
iret
loopne
jp
or
cli
out
add
mov
popf
stc
div
test
outs
lock
fst
jg
test
adc
mov
daa
(bad)
scas
mov
stos
stc
adc
imul
(bad)
mov
(bad)
adc
mov
inc
mov
adc
jns
xlat
sar
mov
push
mov
iret
add
xchg
std
gs
mov
mov
ror
xor
and
pop
jmp
arpl
add
push
mov
icebp
xor
aam
mov
ret
lods
or
fmul
popf
cld
push
imul
mov
and
dec
aam
mov
pop
push
sahf
leave
std
push
sub
loop
enter
push
push
fiadd
jb
fs
hlt
cmp
fisubr
inc
jp
mov
stos
(bad)
aad
not
aaa
ss
sbb
mov
adc
xchg
adc
movs
in
fs
ret
iret
dec
int
sbb
inc
ret
push
mov
inc
mov
and
xor
push
movs
sub
mov
jns
sub
sub
rcl
hlt
xlat
cdq
inc
push
mov
cmp
pop
cmp
sbb
(bad)
loope
mov
inc
xchg
xor
or
xchg
mov
xchg
dec
adc
mov
inc
jmp
mov
movs
mov
bound
xor
stc
and
lock
mov
add
jmp
push
or
(bad)
movs
cdq
xor
dec
sbb
mov
xchg
adc
jmp
inc
icebp
cmp
fcomp
xchg
rol
daa
loope
test
leave
cmp
xor
jg
push
popa
xchg
stos
in
stos
cmp
adc
adc
test
shl
aam
sahf
scas
lahf
lods
es
xchg
repnz
cmps
fistp
jb
lds
out
push
xchg
fadd
movs
or
pop
cmp
sbb
cwde
and
cmp
mov
adc
fcomp
push
add
adc
(bad)
(bad)
mov
or
retf
jns
push
ds
aam
lock
xor
inc
push
or
nop
jg
xchg
mov
(bad)
sti
cmp
scas
sub
lods
jmp
aaa
sbb
inc
dec
pop
jmp
cwde
xchg
in
test
dec
cmp
dec
arpl
loop
cmp
sub
lods
cld
xchg
inc
add
outs
mov
mov
lods
mov
ins
add
sub
push
pop
and
xor
sub
ja
xor
jg
sub
pop
cmp
aaa
loop
test
jnp
cmp
out
test
cwde
jbe
mov
data16
mov
push
std
cvtps2pi
dec
add
das
shl
inc
repnz
iret
repz
cmp
jle
fsub
out
push
fucom
retf
inc
push
or
cmp
xor
repz
idiv
push
push
pop
push
sbb
sbb
xor
jbe
outs
ins
mov
jge
xchg
jno
retf
stc
loop
sar
inc
pusha
push
cmp
cmp
jbe
xcrypt-ctr
cmps
sbb
cmps
gs
xchg
call
fild
loopne
call
out
scas
mov
add
adc
jo
jecxz
imul
xchg
jns
cmps
es
push
int
repnz
push
into
xchg
or
cmps
ffree
adc
cdq
sub
push
sbb
cdq
aam
or
int
cdq
fnstsw
aad
in
dec
and
sbb
enter
inc
mov
sbb
hlt
test
sub
add
dec
push
pop
fsubr
fisub
stc
in
pushf
sbb
aam
jno
cmp
lods
cmp
mov
xchg
push
lds
scas
sbb
mov
or
int3
mov
loopne
cwde
jecxz
jge
push
cmp
stos
add
cs
jle
adc
xchg
push
cmp
popf
sub
or
jmp
push
out
sti
jns
test
loopne
or
cmc
push
es
hlt
nop
or
aaa
jmp
fwait
lods
mov
and
outs
pop
xchg
dec
cmps
or
shl
push
mov
and
cmps
push
sbb
and
loope
cld
jge
pop
stos
push
daa
mov
movs
pop
bound
cmc
pushf
and
inc
mov
mov
mov
push
jo
push
jg
ss
xor
ins
stc
shr
xlat
jle
mov
cmp
scas
cmp
mov
arpl
push
stos
shr
dec
fwait
sahf
add
xchg
sti
push
rol
jne
int
mov
popa
xchg
jg
jo
test
mov
cmc
ret
and
les
xor
and
adc
mov
scas
das
cmp
sub
inc
stos
adc
dec
and
outs
mov
scas
sub
dec
ds
or
mov
dec
cmp
in
adc
(bad)
(bad)
sub
push
aad
in
mov
push
daa
adc
push
cmp
lods
sub
xchg
dec
mov
xchg
pop
leave
ds
adc
ss
sbb
adc
add
imul
hlt
jl
xor
icebp
pop
test
hlt
cdq
sbb
ds
mov
cmp
adc
adc
addr16
imul
lds
test
loopne
shl
jno
outs
fdivr
jmp
mov
jecxz
ror
cmp
cwde
xchg
retf
jecxz
ins
(bad)
xor
push
ret
mov
(bad)
jl
add
cwde
scas
imul
push
jo
fwait
sbb
cmp
into
xchg
fisttp
scas
dec
call
mov
adc
xchg
imul
loope
repnz
mov
cwde
mov
adc
xchg
mov
mov
mov
push
mov
popf
push
js
pop
mov
jmp
jne
jno
mov
(bad)
adc
sahf
jmp
push
clc
pop
push
pop
mov
into
scas
mov
adc
int3
popa
gs
stos
push
mov
push
and
cli
ins
push
jecxz
adc
movs
add
aad
fdivr
lods
(bad)
aad
lds
dec
cmp
mov
in
lahf
xor
cmp
sbb
push
aad
popf
jmp
cmp
or
or
cwde
xchg
adc
inc
repnz
sub
call
in
add
xchg
add
in
sub
shl
les
mov
inc
fnstenv
aas
enter
shr
dec
sti
loope
sbb
add
aas
fiadd
imul
jae
add
mov
xchg
push
mov
xchg
shl
xor
out
loope
ror
jg
push
gs
push
ja
shl
loope
ss
dec
sub
sbb
cli
aad
sahf
pop
sub
out
jl
sub
ror
data16
lods
bound
xor
sub
mov
(bad)
push
mov
popf
mov
adc
push
cmp
or
popa
(bad)
out
jle
cmp
pop
cmp
mov
in
pop
adc
(bad)
lock
leave
xchg
retf
lahf
stos
(bad)
push
and
iret
mov
cmp
fsubr
loope
ror
xchg
movs
sbb
leave
repnz
mov
test
mov
adc
or
adc
pop
mov
es
add
add
mov
and
in
retf
dec
hlt
mov
out
gs
popf
sub
or
pop
mov
dec
sbb
jge
loope
div
mov
and
movs
inc
lahf
dec
jmp
dec
fsubrp
loopne
mov
(bad)
and
cdq
addr16
aam
pop
pushf
cli
jle
push
mov
aas
mov
outs
sar
pop
sti
in
push
dec
sbb
adc
mov
int3
mov
jb
nop
loop
cmp
sub
pop
int
cmp
lahf
xor
test
ret
jl
sbb
or
cli
cmp
dec
xlat
mov
ins
push
mov
inc
or
push
pop
jge
xchg
adc
xchg
dec
bound
sbb
sub
push
mov
jge
add
mov
les
lea
fldenv
push
movs
fisub
sub
jno
dec
sub
xchg
and
ret
cmp
cli
pop
sbb
xor
or
bound
(bad)
xchg
mov
mov
cdq
loopne
or
sub
mov
adc
test
out
aas
not
lock
je
cmps
xchg
push
int
je
nop
mov
sbb
adc
cmps
(bad)
mov
ficom
sahf
xchg
stc
retf
into
inc
cmps
out
mov
shl
push
pop
sbb
fbstp
sti
sub
fldcw
adc
mov
push
imul
ret
cmp
shl
add
mov
add
adc
and
shl
test
dec
or
ret
loope
mov
imul
(bad)
mov
xlat
mov
xchg
cmp
ret
adc
add
mov
pop
stc
in
imul
shr
scas
cmp
lea
pop
pop
dec
(bad)
or
and
jecxz
scas
outs
push
fiadd
cld
aaa
sub
rcr
push
mov
call
aam
pop
cmps
ss
jne
push
sbb
cmps
sub
dec
inc
cwde
lea
inc
inc
lds
push
aad
lods
inc
add
sub
inc
leave
mov
mov
mov
xor
mov
outs
jmp
fabs
test
inc
inc
cli
adc
jg
fcomp
icebp
nop
test
mov
xchg
pop
loope
arpl
enter
loope
in
pop
pusha
sub
sub
jmp
pop
fwait
mov
jl
cmp
pop
push
in
std
or
aaa
mov
jo
pop
push
(bad)
div
fnsave
aad
push
daa
mov
cmps
push
inc
cli
jmp
je
mov
cmp
popa
movs
loope
bound
inc
mov
dec
fild
mov
and
and
mov
mov
movs
imul
imul
sbb
jo
jmp
pop
fchs
cmps
push
ds
sub
adc
sub
cmp
fisttp
fs
xchg
mov
pop
(bad)
lock
adc
ja
mov
popf
ret
mov
pop
push
in
mov
xchg
pop
cmc
ins
and
in
(bad)
mov
sub
ins
fld
fadd
or
sbb
xchg
movs
mov
fnstenv
sbb
pop
ins
and
or
outs
jae
inc
push
jl
shr
cli
or
xor
cld
lods
push
sbb
icebp
call
inc
xchg
imul
jno
inc
fsubrp
or
clc
inc
adc
and
dec
sub
dec
sub
xor
push
(bad)
(bad)
fnsave
cmp
mov
pop
adc
jb
enter
push
adc
les
jae
(bad)
cld
cmp
pusha
outs
gs
sub
dec
and
push
aas
aad
cmc
or
aam
sahf
retf
ret
into
ret
shr
mov
cmp
mov
cmp
cmp
les
imul
mov
daa
sahf
sub
cmp
mov
aas
sbb
outs
fcom
mov
sbb
jnp
mov
pop
mov
das
mov
dec
leave
mov
bound
retf
loope
clc
loope
(bad)
lods
push
fcmovb
pop
xor
or
out
cs
leave
cld
icebp
xchg
div
mov
das
int3
xor
(bad)
cmp
icebp
sbb
sti
mov
push
int3
and
adc
xor
in
fidiv
scas
pop
mov
into
pop
fs
lods
push
xchg
stos
xor
xor
iret
sbb
mov
mov
cmp
mov
inc
(bad)
into
mov
or
arpl
dec
pusha
cmp
sbb
retf
std
jg
mov
mov
stos
nop
(bad)
xor
inc
aam
sbb
push
fnsave
imul
xor
ins
inc
jnp
push
int
retf
inc
jp
arpl
fadd
add
ret
mov
and
mov
(bad)
mov
and
jmp
pop
(bad)
pop
adc
cli
sub
mov
jl
rol
xor
stos
gs
das
push
call
popa
(bad)
mov
adc
mov
(bad)
or
jge
push
out
inc
sbb
sbb
js
les
ret
inc
xor
cmp
mov
cmp
adc
xor
fucom
inc
imul
jecxz
int
sub
inc
push
xchg
or
pusha
clc
jecxz
mov
ds
pop
fisttp
aas
jle
jne
icebp
cld
xchg
add
outs
mov
jecxz
cmps
in
push
jecxz
pushf
(bad)
mov
test
pop
int
mov
and
loop
out
xchg
fdiv
(bad)
(bad)
push
sti
out
jle
sub
xor
test
mov
(bad)
pop
inc
leave
xchg
(bad)
push
lods
movs
shl
sub
jno
test
jg
outs
enter
lahf
add
adc
test
sub
add
pop
arpl
jle
or
cmps
pop
psllw
dec
mov
popa
or
fs
add
(bad)
sub
jle
scas
pop
xchg
mov
adc
inc
loop
push
jge
inc
mov
adc
in
lods
clc
cmp
jl
lods
(bad)
hlt
movs
adc
(bad)
and
and
lock
cmp
fnstcw
cld
pop
sar
mov
out
jmp
or
loop
test
and
mov
inc
xchg
cdq
icebp
out
pusha
sub
jno
stos
xchg
mov
mov
daa
sub
shl
pushf
sbb
(bad)
pop
loope
icebp
or
dec
fld
inc
or
fcom
sahf
bound
mov
outs
mov
adc
mov
add
sbb
rol
jmp
and
xor
in
cmp
in
or
jle
cli
push
or
xlat
ds
pop
mov
out
out
xor
xchg
imul
enter
jg
in
sub
cdq
jae
lods
push
mov
mov
rcl
fwait
dec
repz
pop
jp
stos
cmps
je
shl
xchg
push
mov
pop
shl
ss
add
ficom
push
in
xchg
das
shl
es
aad
inc
jae
adc
add
loopne
adc
cs
push
test
out
sbb
in
aas
ins
loopne
mov
(bad)
xlat
cld
adc
jmp
fadd
je
aad
sbb
stos
mov
shr
xchg
bound
ret
add
retf
dec
sbb
fimul
test
jno
or
les
push
cmp
mov
cmp
std
xchg
in
nop
lds
loope
out
inc
loope
cmc
in
outs
aaa
das
fwait
sub
pop
jno
test
dec
shl
neg
int
push
push
cmp
dec
dec
rol
mov
jge
cld
dec
mov
push
or
loopne
sbb
test
sbb
(bad)
repnz
jae
dec
ds
jmp
pusha
add
leave
repnz
xchg
jle
out
inc
jg
jne
inc
sahf
leave
add
xchg
push
sahf
sbb
xor
xor
pusha
int
and
call
xor
hlt
inc
jo
mov
add
enter
push
sub
jmp
fbld
xlat
xchg
dec
test
lock
xor
add
out
sub
adc
in
in
push
mov
je
fdiv
jbe
imul
pop
lahf
scas
adc
js
mov
int
loop
or
ret
cmp
sbb
pop
dec
pop
adc
sbb
repnz
rol
xchg
jnp
xchg
pushf
pop
(bad)
fsubr
cmp
nop
mov
ret
dec
sub
fadd
leave
inc
dec
stc
sub
es
cld
cmp
jmp
mov
fbstp
jmp
sbb
outs
xchg
and
xchg
je
xchg
hlt
ins
or
xchg
lock
js
or
rcl
mov
enter
adc
or
mov
fisttp
jns
pop
inc
inc
push
inc
cld
mov
ffreep
mov
inc
test
arpl
jmp
stc
shl
sbb
mov
cdq
jo
xchg
popf
mov
cwde
int
sbb
mov
mov
lods
jo
lea
les
add
cmps
gs
fcomp
repz
loop
pop
popf
inc
jmp
inc
movs
inc
imul
cwde
(bad)
sbb
aam
stos
shl
cdq
loopne
into
lods
pop
sti
std
xor
pop
out
cmps
or
fbld
loope
ret
push
xchg
(bad)
ins
popa
fdiv
into
cmp
aas
repz
arpl
test
mov
das
fdivr
lods
mov
and
xchg
sub
mov
push
mov
cmps
je
sbb
pusha
or
sub
sub
ds
sar
dec
lock
daa
xchg
ret
xlat
dec
clc
dec
jo
jmp
sub
cdq
(bad)
(bad)
call
rol
gs
push
in
leave
mov
stos
lods
mov
jb
leave
sbb
pop
cmp
mov
loop
pop
cmp
ret
movs
lock
or
add
out
hlt
(bad)
(bad)
(bad)
jns
adc
cmp
mov
arpl
shr
push
and
or
cwde
mov
fcmovne
sar
jle
add
xlat
and
push
inc
xlat
loope
loopne
ret
sahf
pop
mov
test
leave
gs
and
in
mov
xor
cmps
cmp
jl
dec
xchg
adc
dec
adc
pop
in
cli
aad
jnp
outs
cmp
neg
xchg
mov
iret
sub
mov
push
xlat
mov
mov
jmp
cwde
ret
xchg
xor
and
leave
enter
mov
xor
jns
pop
push
lods
(bad)
std
sub
sub
or
or
lods
jb
mov
and
lock
clc
out
stc
int
call
js
sub
jl
xor
and
adc
push
repz
xchg
or
aad
jb
xchg
jbe
popa
cwde
jmp
mov
xchg
dec
adc
rcr
push
ins
push
pop
mov
lea
ror
xor
test
and
or
leave
ret
jae
adc
pop
mov
outs
sbb
push
add
cmp
mov
cmp
pop
jo
out
jge
mov
or
xor
enter
inc
fcomp
ja
clc
xchg
lahf
and
xor
or
fwait
push
dec
inc
mov
dec
pop
enter
stos
mov
or
jecxz
mov
sub
mov
(bad)
idiv
(bad)
mov
leave
(bad)
aas
xor
mov
das
sbb
xor
stos
inc
movs
dec
push
jo
fstp
(bad)
out
fidiv
inc
add
cmp
fild
rcl
aad
jge
rol
fsubr
dec
mov
sti
sub
mov
lahf
adc
adc
shl
call
enter
rol
in
or
pop
sub
and
(bad)
call
pop
jae
in
push
jmp
xor
cmp
xchg
iret
ja
call
push
xchg
xor
popa
inc
mov
jmp
cmp
jmp
pop
dec
sbb
fisttp
xor
rcl
imul
mov
icebp
mov
adc
repz
ins
mov
mov
inc
gs
mov
(bad)
and
or
sub
or
push
lds
pop
dec
inc
cdq
jae
sub
pusha
mov
sar
neg
das
mov
sub
inc
dec
cdq
ror
adc
cs
cmp
xor
push
sbb
das
sub
xchg
jp
jmp
std
cmp
mov
(bad)
dec
push
bound
popa
clc
cmp
cmp
fidivr
movs
(bad)
aam
mov
jae
cmps
adc
cmps
(bad)
pop
jmp
mov
fisttp
jno
xchg
push
adc
add
jge
(bad)
stos
into
and
inc
sub
jecxz
pop
fxch
pop
xchg
fisubr
sbb
test
dec
xor
push
mov
in
pop
jle
jae
mov
enter
or
fild
push
test
neg
ins
sbb
jecxz
jbe
test
xor
push
inc
bound
dec
inc
movs
adc
hlt
adc
sub
test
sbb
push
adc
clc
rcr
cmc
cmp
mov
addr16
or
aas
dec
std
cmp
lahf
icebp
xchg
or
xchg
retf
stos
sbb
pop
and
retf
adc
mov
into
jae
and
jno
mov
(bad)
mov
sar
mov
pop
inc
je
mov
mov
(bad)
cwde
std
idiv
lea
cwde
inc
cld
cmp
push
iret
dec
cdq
mov
gs
or
push
jbe
fst
jns
push
ficomp
aad
test
in
ja
push
inc
mov
aaa
add
imul
stos
ins
push
push
scas
imul
sub
mov
fistp
out
sub
xchg
xor
jne
arpl
mov
fbstp
in
pusha
dec
div
and
inc
xor
cdq
dec
cmp
dec
or
xor
mov
push
lods
bound
popa
cdq
mov
push
inc
sub
pop
pop
(bad)
or
sar
mov
xor
push
add
shl
fwait
xor
scas
sahf
enter
adc
adc
in
ror
pop
mov
or
shl
add
pusha
jne
cmp
xor
es
and
mov
aaa
push
lea
neg
xchg
sub
push
add
xchg
or
fcom
xchg
xchg
xor
add
nop
jecxz
shl
xchg
adc
and
in
repz
and
inc
add
jnp
pushf
stos
cmp
daa
out
js
lods
mov
jmp
stos
popa
add
cmp
cmp
loop
cmps
mov
fcomp
shl
rcr
in
cld
jmp
outs
lahf
mov
mov
inc
rol
movs
fidivr
sbb
adc
aas
or
adc
mov
stc
int3
mov
push
daa
push
jae
outs
and
retf
cmp
dec
sbb
aaa
sub
outs
call
push
inc
cmovp
scas
ror
into
xlat
inc
fwait
mov
and
xchg
dec
mov
in
std
nop
pop
fnstenv
imul
int3
mov
push
xor
push
jp
movs
enter
cmp
pop
pop
retf
sub
cld
repnz
dec
popf
inc
shr
push
dec
jmp
push
les
loopne
inc
push
inc
mov
xor
fstp
imul
jnp
mov
pop
jmp
add
pusha
jae
jne
ins
cmp
aad
sbb
adc
aaa
loop
inc
pop
sar
mov
lods
add
mov
inc
push
add
xchg
mov
mov
sub
popf
xor
mov
jbe
aam
ja
or
inc
scas
sub
dec
jp
in
out
cwde
push
shr
mov
sub
pushf
mov
clc
ja
dec
add
in
adc
out
inc
lds
cmp
mov
pop
loopne
stos
push
or
daa
inc
arpl
es
clc
aam
scas
imul
mov
sahf
or
ficom
xor
inc
mov
dec
ret
pusha
aas
packsswb
div
xchg
stos
dec
pop
cmp
add
xor
add
neg
gs
sub
js
sub
jg
xchg
adc
outs
jae
or
cdq
ins
jmp
push
xchg
xchg
xor
(bad)
int3
addr16
outs
pop
cmc
cmp
out
sbb
in
or
rol
lods
bound
ret
jp
call
add
movs
outs
icebp
ds
sub
adc
pop
inc
jno
jb
push
xchg
into
xor
xchg
pop
dec
fnstcw
jp
sar
mov
outs
(bad)
pop
lods
out
sub
pop
push
in
ds
pop
ins
mov
mov
pop
xchg
test
sub
stos
pop
xor
mov
xor
cmp
jle
inc
pop
js
or
aaa
pop
add
call
xchg
rcr
sbb
jmp
pop
in
call
rol
mov
add
sbb
mov
pop
dec
adc
into
mov
movs
cmp
mov
idiv
jno
sbb
push
or
aas
movs
adc
fadd
mov
inc
mov
popf
dec
movs
dec
les
loope
mov
rcl
cmps
pop
pop
sbb
adc
pop
mov
or
jns
xchg
fld
sub
ret
or
sub
xchg
push
test
sub
in
jg
movs
jp
push
jmp
dec
dec
mov
or
popf
sbb
cmc
stos
movs
adc
sub
dec
push
jbe
movs
xchg
cmps
leave
or
or
or
and
ret
dec
mov
sub
xor
add
dec
sub
retf
aas
scas
fs
jns
jne
leave
scas
dec
and
xor
lds
adc
ficomp
not
dec
js
mov
std
jecxz
or
xchg
out
(bad)
jmp
js
push
xchg
dec
jb
add
repz
mov
jns
test
(bad)
ffreep
es
dec
adc
fdiv
fimul
lds
imul
pop
out
lods
mov
cs
jnp
cmp
jp
and
inc
or
sbb
mov
cdq
sub
jge
push
add
pop
mov
(bad)
bound
cwde
aas
loope
clc
fisttp
ds
sub
fcomp
andps
pushf
test
pop
int3
cmps
sbb
adc
mov
hlt
pop
dec
clc
movs
rcr
imul
addr16
and
fsubr
sbb
sbb
xor
adc
popf
or
inc
jnp
mov
test
ss
cdq
ror
jp
jb
xchg
cmp
movs
aaa
jb
icebp
pushf
mov
shl
pop
nop
(bad)
jge
xchg
sub
and
call
inc
imul
jnp
inc
xchg
aad
xchg
ins
stos
test
sbb
adc
dec
jo
xor
sub
in
and
cmp
sahf
inc
cmps
push
ins
or
icebp
ret
jmp
enter
xchg
fld
ss
push
adc
nop
shr
sbb
add
mov
into
jmp
jecxz
mov
movs
xor
pusha
enter
push
jmp
jns
call
(bad)
pop
sbb
or
cmovbe
pop
jne
loopne
jo
rol
mov
fwait
rcl
push
pop
or
adc
push
(bad)
lahf
jae
push
ja
(bad)
add
pushf
stos
lods
mov
test
pop
jno
xor
scas
pop
popf
jae
aas
jp
pusha
out
xor
fdivr
sbb
add
addr16
mov
cmc
ja
(bad)
rcr
imul
dec
fnsave
arpl
out
mov
sub
sbb
lods
(bad)
fiadd
jge
pop
mov
dec
or
push
mov
pop
inc
outs
sub
mov
jp
ret
sub
xor
jnp
fs
sub
stos
xchg
sti
or
test
pop
pop
aaa
jle
in
adc
repz
stos
cmp
mov
fstp
xor
in
scas
iret
pop
addr16
(bad)
es
in
inc
dec
dec
jno
push
push
cmp
push
inc
rcl
fs
cld
push
add
sbb
cmp
jecxz
out
xchg
fdivr
sahf
add
xchg
mov
in
das
(bad)
mov
repz
stc
adc
xchg
and
sti
cmp
push
sbb
(bad)
pop
dec
mov
in
loope
es
mov
inc
push
(bad)
mov
push
mov
or
out
jns
push
xchg
push
pusha
cmp
aad
data16
dec
dec
pop
add
adc
and
ds
xor
dec
out
jnp
stos
xor
sub
ja
adc
or
imul
call
movs
or
sbb
fsubr
adc
sbb
in
mov
pop
(bad)
adc
retf
pop
hlt
fbld
jl
fptan
xor
and
push
(bad)
stc
xchg
jle
push
repnz
ret
cmp
repz
pop
shr
sub
aaa
out
add
leave
call
xchg
cmp
int3
mov
xchg
mov
aaa
add
pop
dec
push
fimul
and
aad
scas
jl
inc
mov
dec
push
jmp
outs
loop
sahf
push
pushf
pop
aaa
mov
mov
xchg
jp
rcl
sub
test
push
cmc
jbe
pop
jge
outs
out
in
ficom
push
out
es
popf
and
inc
cli
rcl
popf
xchg
nop
inc
popa
pop
push
or
adc
sbb
bound
jb
push
mov
call
stc
inc
std
dec
inc
xor
sub
clc
inc
xchg
pop
out
call
ror
cmps
mov
sub
(bad)
xor
addr16
sub
xchg
jmp
and
pop
jecxz
xchg
push
outs
mov
out
aaa
add
cmps
inc
dec
mov
sub
fmul
(bad)
mov
cmp
dec
jp
in
sub
add
add
iret
jmp
dec
retf
push
sbb
dec
arpl
ins
aad
cmp
(bad)
jle
jmp
jmp
lock
dec
loopne
or
xchg
xchg
stos
ficomp
jns
aam
jg
add
add
sbb
pop
pusha
jecxz
sub
jmp
aad
jmp
out
mov
in
xchg
ja
ins
imul
mov
mov
pop
imul
sub
xor
mov
outs
int3
push
push
sub
cwde
dec
xchg
mov
push
outs
pop
sub
push
aas
xor
mov
jge
mov
bound
in
adc
movs
push
cmp
or
jmp
push
xchg
or
popa
push
call
scas
sbb
adc
shr
mov
and
cmp
(bad)
pop
aas
out
call
sbb
xchg
dec
push
sub
push
inc
loope
test
loopne
gs
or
dec
inc
push
stc
movs
xor
lahf
jne
test
mov
mov
retf
bnd
lahf
movs
inc
cwde
jns
inc
dec
mov
outs
imul
cli
pushf
xor
add
cmp
adc
xchg
mov
jne
dec
jno
arpl
mov
pop
and
cmp
pop
aad
and
push
pusha
test
lods
pop
std
sti
adc
lea
push
xchg
dec
xlat
retf
rcr
or
push
les
retf
repnz
xchg
popw
cmp
retf
and
lds
(bad)
pop
mov
add
cmc
(bad)
and
or
in
jmp
mulps
push
xchg
add
je
pusha
in
addr16
push
hlt
out
or
adc
fwait
les
jle
cld
aaa
mov
mov
fsubr
pop
popa
enter
daa
jb
push
push
push
dec
pop
xchg
add
adc
das
xchg
sub
or
lods
pop
mov
gs
pop
mov
pop
cmp
xor
pop
hlt
mov
pop
xchg
xor
jno
mov
push
mov
retf
sbb
push
inc
adc
sub
xchg
add
and
ins
mov
fisttp
push
cmp
sahf
adc
int3
inc
xor
fnsave
pand
ds
out
cmps
pop
int3
fidivr
add
xor
in
adc
push
arpl
in
xor
sti
cdq
mov
mov
lds
retf
mov
int
push
xor
fild
xor
aaa
in
mov
or
repnz
sub
movs
push
es
cmp
out
dec
mov
ret
xchg
mov
fnstcw
pop
in
es
jp
fdivr
push
loop
int3
adc
and
pop
mov
ret
add
pop
mov
out
cdq
sub
cmp
arpl
adc
pop
mov
mov
xor
bound
ficom
into
sahf
jecxz
ins
lds
pop
jae
test
std
(bad)
jne
fsubr
cmp
push
and
xchg
in
inc
or
adc
sub
push
ja
cmps
addr16
loopne
inc
leave
or
cmp
mov
ins
(bad)
mul
mov
mov
pop
jg
jb
jbe
fistp
mov
das
ret
lahf
ret
nop
sub
shl
lds
(bad)
(bad)
mov
bound
gs
mov
jmp
loope
fwait
mov
je
inc
jge
lea
into
in
sbb
mov
rcr
and
cmc
adc
jne
(bad)
lods
pop
and
sbb
mov
out
mov
sbb
movs
test
sub
sub
jae
mov
dec
sar
mov
pop
scas
shl
movs
lea
call
xor
inc
adc
out
outs
clc
pop
sub
sbb
shl
and
ins
add
out
sahf
arpl
mov
mov
ret
adc
fwait
and
enter
scas
or
sub
mov
pop
inc
leave
bound
mov
inc
mov
pop
cwde
int3
xchg
(bad)
jge
jmp
(bad)
fsub
sti
sbb
loopne
pop
leave
adc
dec
jmp
push
fidiv
mov
popa
and
cmp
enter
int
jo
int3
imul
nop
shl
retf
rcr
in
les
fnstcw
jns
dec
(bad)
mov
mov
jno
inc
jmp
test
dec
push
sub
jno
int
jo
sub
(bad)
shr
add
jnp
jge
dec
test
nop
out
xchg
out
not
xor
movs
xor
enter
mov
bound
mov
pop
mov
mov
ins
or
cwde
push
(bad)
aaa
jae
jbe
xchg
test
int
adc
in
mov
mov
sub
test
or
and
pop
add
repnz
retf
retf
pop
lods
push
lds
cli
sub
hlt
pop
mov
ss
mov
rol
in
pop
dec
jg
ins
pop
mov
aas
outs
sub
cmc
addr16
and
push
or
or
push
mov
ret
js
es
(bad)
out
(bad)
arpl
out
lahf
stc
push
dec
sub
test
call
xor
daa
lods
inc
sub
or
shl
xor
fsubr
lods
cmps
jae
xor
(bad)
jecxz
add
pushf
stos
lods
add
sbb
sbb
repnz
out
push
add
sub
push
(bad)
pushf
sbb
jmp
dec
lods
sub
lahf
add
push
and
les
push
ret
mov
imul
jo
cmps
ret
pop
call
mov
enter
add
shl
sub
xor
sbb
push
movs
(bad)
repz
pop
push
dec
jno
aam
ret
or
arpl
repz
into
retf
pushf
mov
mov
xor
cs
jp
mov
mov
ins
mov
push
add
call
and
(bad)
sbb
push
or
push
dec
push
adc
jge
test
xor
in
mov
js
aad
sub
dec
out
or
out
mov
clc
xchg
jle
pushf
push
arpl
movs
ror
pop
jmp
lahf
and
mov
hlt
fbld
lahf
push
sub
pop
sbb
pushf
loope
std
inc
dec
cwde
xchg
jmp
mov
xor
mov
loopne
cmc
pop
(bad)
fmul
sahf
mov
sbb
pop
dec
(bad)
not
lods
pop
mov
scas
xchg
adc
mov
sbb
sbb
test
push
jge
sbb
pop
cmp
push
scas
adc
test
ret
ss
mov
pop
add
lea
push
mov
in
push
pusha
xchg
or
loope
loopne
scas
jge
xchg
inc
aas
(bad)
cmp
lods
loop
pop
pop
mov
lahf
jne
js
scas
icebp
sub
pop
js
pushf
mov
ja
sbb
pusha
ret
hlt
adc
gs
push
sbb
inc
pop
dec
jne
sti
das
mov
retf
xor
outs
inc
inc
pop
jmp
ds
enter
push
pop
shl
std
and
repnz
(bad)
xor
mov
leave
jmp
mov
fstp
sub
ins
xchg
push
push
popf
inc
sbb
or
in
clc
jle
or
sub
adc
pop
xchg
test
jl
or
mov
xchg
pop
inc
out
mov
cmp
aas
in
dec
outs
pop
push
hlt
das
inc
inc
cmp
or
cmp
mov
fisub
inc
mov
inc
adc
push
enter
mov
jmp
bound
mov
push
ins
fwait
pop
sub
cmp
dec
in
cld
dec
mov
loope
hlt
lock
loope
loopne
cmp
add
ins
or
mov
data16
ret
adc
jecxz
inc
cmps
out
add
mov
jp
mov
out
stc
out
sub
sbb
and
adc
push
mov
bnd
add
sbb
cmp
loopne
dec
xchg
ja
sub
bound
mov
inc
lds
retf
mov
cdq
adc
mov
jb
ins
jg
scas
leave
dec
fidiv
jp
pop
pop
ret
adc
push
cdq
cmps
dec
jg
mov
adc
and
adc
pop
jmp
sbb
in
pop
mov
sbb
fst
sti
lahf
inc
rol
xchg
add
cmp
add
call
xchg
mov
or
xor
inc
adc
inc
or
and
mov
fistp
fst
xchg
add
jmp
xor
sub
int
hlt
mov
sti
in
inc
div
int
pop
adc
in
inc
test
call
loop
ds
mov
je
popf
stos
lahf
mov
cmp
jg
adc
pusha
aas
mov
sbb
(bad)
push
mov
pop
call
repz
mov
mov
and
jne
jno
push
idiv
js
cwde
lock
push
xchg
and
mov
test
mov
(bad)
pusha
push
mov
jo
outs
sbb
int3
ins
cli
test
outs
adc
dec
mov
imul
push
out
jge
cmps
cmps
ss
mov
adc
outs
aaa
mov
ss
adc
fwait
push
adc
imul
add
mov
jecxz
aam
or
retf
dec
aas
fistp
pop
pop
ror
adc
jp
inc
xor
int
mov
(bad)
dec
pop
dec
xchg
jmp
sub
ja
ror
xor
sub
cmps
scas
out
sbb
pop
xchg
inc
mov
test
xor
and
lods
jp
xchg
pop
inc
cmp
add
mov
retf
fild
jmp
(bad)
mov
jbe
xchg
aad
pop
mov
jb
or
outs
movs
lods
cld
fisttp
fmul
dec
cmovns
das
ror
aad
or
mov
jno
push
div
cmp
stc
xor
fst
adc
xor
inc
xor
inc
lods
jge
rcr
std
xlat
lahf
lds
mov
ins
xor
loop
aam
gs
div
sahf
pop
lock
jecxz
lds
dec
lock
mov
mov
mov
aas
cdq
cmp
inc
sahf
push
adc
jne
mov
(bad)
jge
sar
pop
add
push
cmp
xor
dec
sub
xchg
lods
push
or
popf
stos
test
ja
adc
inc
aaa
pop
jge
push
jge
setle
pop
lea
pop
xor
enter
push
cwde
ins
sub
xchg
mov
gs
jge
shl
dec
dec
push
(bad)
xor
stc
sbb
cmp
fucom
leave
mov
icebp
retf
sub
and
repz
movs
dec
inc
jmp
aaa
xor
push
cs
(bad)
es
es
pop
jmp
sub
std
mov
aam
test
cmp
and
addr16
cmp
lods
dec
stc
jg
dec
sahf
out
sbb
cmps
mov
push
jecxz
sbb
cld
(bad)
aad
data16
mov
sbb
fidivr
fdivr
sti
sar
jmp
cmp
es
ins
jne
adc
jae
xor
(bad)
nop
mov
adc
outs
rcr
mov
imul
js
pop
retf
mov
ret
rcr
or
xor
sbb
fmul
sbb
or
sbb
retf
dec
add
mov
or
xlat
arpl
retf
jmp
fadd
std
and
nop
and
pop
fiadd
pop
test
(bad)
ins
inc
repnz
sbb
push
jmp
mov
fs
fimul
cmp
cmp
sahf
sbb
dec
and
mov
dec
repnz
mov
xor
pop
pop
mov
test
popf
pop
lahf
jo
int
pop
call
add
push
sbb
pop
cwde
je
je
mov
test
xor
mov
mov
or
(bad)
dec
stc
dec
daa
shl
or
inc
dec
sbb
and
inc
scas
cs
pop
movs
jmp
scas
dec
dec
loop
or
push
adc
jmp
jge
dec
out
push
push
jne
sbb
jb
adc
je
pop
and
xchg
nop
inc
bound
mov
enter
imul
jbe
icebp
push
ss
mov
call
test
in
sub
mov
jno
pop
call
ins
and
xlat
loop
fisttp
mov
xchg
dec
dec
dec
into
inc
mov
mov
cmp
add
jle
stc
call
cmp
dec
lock
rcr
retf
lds
clc
xchg
sti
xor
bndstx
xchg
sbb
mov
sbb
xchg
outs
pop
or
sbb
icebp
popa
mov
xlat
push
jmp
xor
ror
ret
or
inc
xchg
add
and
pop
adc
mov
(bad)
movs
sub
ins
sub
(bad)
out
out
cmp
es
jns
push
inc
test
iret
dec
jnp
shl
mov
clc
push
(bad)
pop
dec
mov
hlt
(bad)
test
(bad)
out
inc
push
ja
inc
(bad)
(bad)
sbb
adc
sbb
out
mov
enter
mov
jg
idiv
sahf
xor
popf
dec
loope
aaa
jbe
imul
dec
xchg
lods
sbb
mov
mov
push
adc
sub
jnp
in
bound
mov
adc
mov
and
cmps
out
sti
mov
xor
fild
mov
imul
or
add
mov
call
mov
jle
sti
popf
mov
or
pop
fcmove
mov
push
pop
fsubr
pop
cmc
into
sbb
aam
cld
(bad)
mov
fcmovb
repz
mov
jae
(bad)
cmps
loop
xchg
sub
xchg
dec
xchg
sub
retf
ret
(bad)
arpl
addr16
ret
push
dec
xchg
out
xchg
pop
rcr
nop
add
fcom
ss
jne
fcom
call
jo
sub
in
cmp
clc
stos
add
mov
jne
xchg
repz
and
stos
pop
cmp
pop
je
adc
enter
stos
fwait
add
mov
jp
adc
fistp
nop
pop
(bad)
push
faddp
ins
add
out
cmc
push
arpl
pop
jl
or
idiv
pop
inc
and
mov
mov
movs
mov
loopne
lods
dec
pop
mov
lahf
xchg
push
sbb
les
sub
leave
inc
ss
adc
xor
imul
hlt
ins
jg
dec
xor
out
adc
dec
outs
out
sbb
jb
dec
cmp
xchg
pop
retf
and
jb
push
shl
jg
xor
cdq
dec
call
jne
aad
and
jne
push
sbb
jns
mov
add
jle
jecxz
aaa
fisub
pusha
int3
sub
xchg
xor
push
cmps
rol
ins
fidiv
or
cs
in
mov
pushf
popf
dec
fstp
das
mov
sub
and
cld
fxch
fcmovnb
mov
xchg
adc
dec
gs
sub
adc
pop
inc
in
sbb
iret
mov
add
arpl
xchg
mov
push
leave
bound
gs
out
js
bound
xor
sub
and
jnp
nop
stos
cmp
sbb
push
cmp
(bad)
pop
test
and
repz
pop
xchg
loop
lea
mov
mov
mov
adc
mov
xchg
fbld
mov
cmc
add
psubsw
pop
push
test
(bad)
sub
xor
and
xor
iret
gs
daa
lock
push
(bad)
(bad)
(bad)
jmp
data16
or
cdq
lock
repnz
pop
or
sti
jg
mov
xchg
(bad)
pop
fwait
xor
sub
fldenv
mov
cmp
pop
xchg
inc
cmc
mov
cmp
push
mov
or
das
xor
ins
add
test
jmp
add
push
jmp
fmulp
stos
mov
loopne
movs
push
dec
mov
or
cmps
les
dec
test
(bad)
mov
inc
call
mov
cld
inc
cmp
daa
add
cwde
fstp
mov
outs
or
and
pushf
adc
es
jns
add
add
push
ins
push
(bad)
cli
sub
adc
sub
not
test
xchg
add
push
xor
and
push
inc
add
pop
ficom
sbb
leave
ss
mov
dec
push
addr16
sub
pop
outs
mov
xor
ja
sub
jecxz
out
mov
xchg
lock
push
icebp
jp
imul
mov
bound
xor
cmp
lea
test
mov
inc
div
pushf
movs
push
xor
movs
adc
mov
inc
mov
mov
in
jmp
adc
jmp
fsub
(bad)
pop
mov
mov
mov
test
xchg
or
xchg
das
cmp
pusha
pushf
dec
movs
dec
and
(bad)
aad
jae
jmp
or
sbb
popa
push
fbld
push
lds
mov
std
jp
inc
mov
jb
rcr
or
(bad)
arpl
arpl
jecxz
xchg
retf
and
cmp
test
sar
pop
pop
pop
inc
pushf
enter
jle
cdq
and
dec
sub
test
out
pop
hlt
xor
arpl
xor
fnstsw
xor
mov
ins
or
cwde
repz
stos
lock
in
mov
xchg
clc
fcmovu
jae
aaa
dec
ret
sbb
mov
mov
cmp
bound
retf
test
popf
cdq
dec
adc
add
enter
rcr
adc
cmp
jmp
push
inc
mov
test
dec
adc
xor
ins
mov
add
xor
jg
mov
in
jmp
scas
arpl
mov
out
call
and
mov
adc
(bad)
push
outs
adc
stc
add
(bad)
xchg
aaa
and
sub
push
(bad)
cld
fs
pushf
pop
or
(bad)
dec
sti
and
push
retf
push
pop
out
mov
in
fs
and
(bad)
sbb
psrlw
sbb
lahf
stc
jl
pop
or
js
xor
ds
std
add
iret
pop
loope
lea
inc
pop
sahf
stos
mov
cwde
test
push
jo
lods
pop
mov
push
adc
ds
add
outs
ins
sub
call
repnz
mov
fld
sbb
jge
inc
jae
xchg
shl
pusha
jmp
lods
les
add
xlat
pop
mov
jle
ror
and
clc
cmp
pop
xor
xchg
xchg
loopne
push
and
mov
cmp
push
push
sahf
out
and
push
cdq
(bad)
dec
sub
pop
(bad)
cli
jl
outs
and
sbb
or
outs
icebp
jbe
jo
xchg
pop
in
(bad)
loop
(bad)
pop
xor
cmps
aas
sbb
jne
mov
sub
cmp
mov
mov
cmp
mov
cmp
or
popf
mov
push
and
popf
nop
cmp
fcom
cmps
repnz
jmp
push
jmp
lock
add
mov
pop
xchg
adc
mov
sbb
test
mov
add
pop
inc
cld
or
inc
sub
test
pop
lods
inc
cdq
xor
inc
sar
das
jp
ins
pop
pop
xor
hlt
cdq
loop
into
fdiv
xchg
inc
pop
sub
test
fsub
xor
dec
cmp
mov
bound
enter
lock
ret
or
stos
cwde
scas
adc
mov
popa
jnp
push
lock
stos
(bad)
pop
stos
jl
mov
fmul
rcl
dec
aas
rcr
xlat
imul
stos
mov
das
movs
fild
mov
aam
test
mov
or
sbb
cld
xchg
idiv
add
fstp
add
adc
sbb
mov
xchg
or
xchg
in
fcmovne
sub
dec
jp
hlt
jnp
mov
ja
sub
inc
(bad)
inc
sbb
call
retf
aad
ss
aam
mov
sub
test
cmpxchg
pushf
dec
inc
mov
and
sbb
sbb
jmp
stos
lea
stc
ja
mov
inc
imul
pop
adc
out
jne
dec
movs
cwde
sub
je
out
jmp
dec
pop
jmp
push
or
out
or
les
in
popf
aad
push
loop
sar
push
jp
jo
jne
fiadd
pop
rcl
fwait
(bad)
(bad)
xchg
clc
cmp
sbb
xchg
xchg
jle
pop
mov
mov
test
fld
arpl
fdivr
cmp
lds
sbb
sbb
pop
fst
mov
push
stc
fdivr
arpl
iret
pop
push
xor
(bad)
out
jae
or
inc
mov
adc
jbe
pop
outs
imul
adc
in
jp
iret
mov
or
pop
jb
mov
pushf
std
sub
fs
popf
adc
jmp
xor
or
mov
scas
gs
loopne
dec
out
(bad)
repnz
push
fsub
push
dec
pop
xor
not
fsub
fs
icebp
les
or
or
sub
les
jnp
mov
jmp
cmc
xchg
jmp
in
fbld
iret
je
inc
dec
fs
and
out
addr16
scas
movs
dec
mov
(bad)
xchg
cmps
fisub
es
push
pop
ja
ret
dec
repnz
pop
jae
jnp
fimul
iret
rcl
dec
mov
(bad)
push
das
and
or
popa
repnz
dec
xor
xchg
fs
(bad)
bound
test
mov
jecxz
sbb
push
ret
js
cmp
out
mov
pop
cmp
lea
pop
xchg
imul
gs
dec
out
push
js
mov
or
gs
pop
shl
and
ins
movs
aaa
sub
adc
stos
sti
and
dec
mov
inc
sub
adc
outs
push
in
mov
repnz
aad
adc
mov
(bad)
jbe
in
mov
jno
jge
cmc
and
and
test
pop
sub
out
pusha
test
fwait
jmp
scas
push
sub
xchg
sub
dec
in
jnp
pop
push
jecxz
movs
jne
inc
push
sbb
lods
jmp
hlt
jnp
push
push
pop
loope
je
sbb
jnp
or
cmp
les
xchg
inc
stos
mov
nop
xchg
in
hlt
xchg
jge
inc
out
mov
dec
out
pop
cmp
leave
pop
rcr
fwait
jae
mov
in
pop
cdq
fsubr
or
aaa
and
inc
sahf
scas
sbb
int
imul
mov
bound
add
inc
and
pop
movs
jnp
lods
les
ja
out
enter
and
and
jbe
int3
xchg
ins
loop
pop
fsubr
mov
dec
mov
sbb
loopne
outs
dec
cdq
push
(bad)
test
in
inc
jmp
adc
mov
fld
sbb
aam
xchg
lds
movs
jmp
inc
adc
pop
sbb
mov
or
add
xor
ja
or
dec
xor
or
(bad)
mov
loop
and
add
xlat
push
or
mov
fneni(8087
cmp
jge
fcomp
and
dec
pop
cmp
or
andnps
clc
sbb
aam
cmp
inc
add
out
cmp
and
mov
jnp
setbe
popa
xchg
out
idiv
fstp
das
sahf
retf
out
and
or
(bad)
mov
jb
mov
cmp
add
cli
inc
cmp
mov
ds
shl
clc
sbb
push
icebp
enter
or
mov
add
out
movs
rcl
data16
in
jno
lahf
push
push
sar
xchg
and
adc
add
jmp
sbb
and
cdq
jl
sub
es
jb
and
setne
daa
daa
inc
cmp
sbb
stos
jae
add
shr
hlt
dec
cld
adc
fisttp
dec
or
or
inc
inc
aad
pop
pop
out
cmp
jle
aad
(bad)
(bad)
pop
xchg
scas
retf
add
cmps
push
mov
add
and
push
je
in
xchg
mov
mov
dec
pop
repz
pop
push
mov
fmul
mov
sub
loope
and
cs
mov
mov
xchg
push
rol
sbb
into
mov
push
in
jecxz
ins
lock
jbe
outs
fisttp
sbb
movs
jmp
mov
push
or
jmp
dec
inc
xchg
inc
jno
jmp
pop
je
out
mov
mov
(bad)
mov
mov
or
loope
ins
mov
xor
cmc
stos
mov
push
and
jmp
push
xor
cmp
ror
push
and
cmps
xchg
and
push
adc
sub
popa
lahf
fistp
or
xchg
cwde
das
and
mov
bnd
mov
mov
mov
sbb
retf
fwait
mov
cmc
xor
mov
xor
fsub
jb
mov
outs
inc
dec
cli
push
sbb
std
fnsave
cmp
jns
out
lea
or
jno
sbb
ret
call
add
cld
dec
dec
xor
pushf
fwait
sbb
call
mov
leave
stos
out
fwait
movs
and
stos
ds
stos
mov
stc
lods
fwait
pop
sbb
sub
adc
jmp
push
inc
push
and
cmp
adc
out
cdq
cmps
fcmovnb
add
enter
loop
mov
gs
xchg
cmps
popa
add
jg
and
imul
repz
dec
enter
pop
dec
inc
mov
or
repz
fdivrp
mov
cmp
mov
xor
sbb
retf
call
test
xlat
sbb
jae
out
jl
inc
les
aad
inc
cmp
les
ja
xor
shl
sbb
mov
add
mov
mov
xor
ss
inc
sbb
push
in
fbstp
cmp
jbe
sub
sbb
icebp
stc
adc
inc
mov
and
neg
sub
xchg
sbb
pop
bound
sub
rol
jns
xchg
(bad)
or
icebp
test
mov
push
out
test
jbe
aam
frstor
int
cmp
(bad)
dec
jnp
das
js
or
add
fisubr
push
into
xchg
mov
or
fstp
loop
jle
jp
xchg
clc
loop
fisttp
jo
adc
xchg
mov
bound
push
sahf
jmp
int
jae
xor
ja
cld
lea
ins
push
inc
or
dec
daa
inc
dec
mov
ins
jmp
cmp
and
mov
ins
mov
xchg
out
inc
(bad)
js
adc
add
jae
push
ja
cli
retf
dec
add
mov
xor
in
dec
(bad)
lahf
add
in
retf
lea
out
in
loope
jae
popf
scas
imul
push
test
test
xchg
test
je
xlat
stos
call
push
or
pop
pop
mov
shl
fs
adc
arpl
jne
add
fmulp
int
jge
imul
push
sub
adc
pop
inc
pop
sub
xchg
call
mov
ror
cmp
(bad)
fisub
xor
cmp
test
sbb
test
out
out
stos
inc
jp
stos
bound
shl
rol
sub
mov
shl
cld
and
dec
fld
pop
movs
or
js
push
lods
bound
arpl
pop
xchg
clts
add
xchg
push
inc
popf
xor
or
xor
push
leave
push
je
add
int
xchg
pop
sbb
xor
cmps
push
mov
lds
inc
ds
mov
or
push
adc
movs
cs
and
mov
test
test
push
inc
and
xor
push
nop
es
sub
lds
or
dec
lds
mov
cmp
jle
sbb
cmp
movs
repz
dec
dec
ja
xchg
aad
(bad)
sbb
jmp
mov
int3
fsub
in
add
jo
(bad)
call
xchg
stos
neg
ss
or
adc
mov
addr16
scas
xor
sub
stc
hlt
or
fs
or
fcom
add
inc
or
push
stos
pusha
adc
sub
bound
xor
pop
push
pop
popa
not
add
dec
adc
and
in
hlt
in
lahf
shl
call
mov
dec
movs
inc
ja
pop
lea
inc
enter
or
imul
ins
out
out
std
push
std
mov
inc
add
pop
inc
fwait
rcr
adc
jmp
mov
test
imul
mov
add
retf
retf
mov
fstp
push
mov
xchg
sub
imul
movs
sahf
dec
cdq
sub
retf
stos
dec
loop
loop
sbb
or
xor
or
ins
mov
(bad)
xor
in
test
adc
sahf
sbb
dec
inc
daa
(bad)
fstp
popa
xor
data16
ins
outs
mov
mov
or
xchg
js
lahf
into
dec
pop
push
icebp
mov
add
ins
push
ficom
xchg
mov
or
aam
inc
sbb
inc
pop
cs
jb
sub
cmp
dec
mov
sbb
sub
outs
sub
scas
jp
dec
mov
ins
popa
xchg
lock
icebp
mov
fnsave
sbb
stos
popf
mov
push
retf
push
repnz
dec
adc
or
stos
xchg
cmp
cmp
lea
aam
addr16
loopne
(bad)
mov
repnz
pop
int3
push
push
outs
cwde
(bad)
cmp
fdiv
outs
fmul
movs
stos
in
in
mov
sbb
shr
xchg
inc
dec
neg
mov
add
test
out
push
xor
or
jle
stos
movhps
mov
mov
jno
mov
repz
in
adc
cmc
inc
cmp
mov
mov
and
jg
aad
mov
sub
jbe
or
push
pop
retf
and
in
out
ins
and
xor
xlat
addr16
fadd
mov
add
inc
(bad)
rcl
xchg
aaa
push
iret
or
xchg
fdiv
mov
cmp
ins
pop
add
mov
mov
add
xor
push
dec
mov
push
mov
xor
cmps
dec
sbb
sbb
iret
pop
pop
sub
or
pushf
mov
pop
xchg
cli
mov
xor
(bad)
js
loopne
or
add
sub
jecxz
add
jne
out
mov
mov
imul
imul
out
stos
cmp
sub
jle
ret
add
mov
imul
clc
lods
pop
sbb
je
dec
lock
fs
call
push
mov
lods
dec
mov
push
or
call
jnp
in
jno
pop
jge
jne
xchg
loop
jp
stos
fnstenv
js
rol
mov
dec
and
jbe
jmp
daa
je
clc
and
dec
sar
out
mov
fmul
and
fld
mov
and
vmovq
push
and
in
inc
push
(bad)
lock
mov
xchg
and
popa
movs
pop
cmps
fbld
cmp
retf
mov
test
rcr
xor
xor
scas
sbb
sbb
rcr
mov
lea
and
sbb
outs
inc
in
(bad)
mov
mov
outs
shl
pop
add
jmp
xchg
repnz
test
jg
cmp
mov
dec
sub
ftst
ins
and
cmp
mov
or
cmp
sar
les
das
dec
adc
fwait
retf
sbb
or
push
jecxz
cmp
and
lods
shl
sub
pop
ret
movs
sbb
or
mov
hlt
cmp
jno
ins
push
lds
loop
add
jae
jno
imul
sti
push
lds
cld
das
pop
mov
cwde
xchg
add
jecxz
dec
xchg
adc
imul
ret
sub
adc
fiadd
sbb
stos
push
mov
inc
out
ja
mov
mov
cmp
es
call
ja
fwait
repnz
sub
or
js
daa
inc
je
jo
add
mov
lea
push
pop
sar
mov
add
xchg
mov
(bad)
mov
xor
jb
(bad)
push
sub
add
cli
mov
mov
fwait
ins
jnp
in
pop
repz
pop
inc
std
push
cmp
jnp
push
or
das
scas
pop
not
nop
sub
fsub
sar
in
xchg
inc
fidiv
sbb
sahf
scas
nop
jg
cs
into
mov
aaa
(bad)
jge
scas
ret
xchg
adc
sub
xchg
sub
clc
daa
dec
mov
mov
sbb
lock
fistp
jle
and
add
sub
inc
mov
repnz
(bad)
pusha
xchg
mov
or
lds
pusha
(bad)
or
leave
mov
lea
test
out
jg
pop
bound
xchg
call
sbb
test
cmc
js
pop
ins
les
jnp
ins
imul
cmps
in
push
stos
mov
jne
push
lods
imul
dec
arpl
or
mov
jmp
int3
sbb
mov
jno
arpl
push
mov
js
or
int3
test
push
out
dec
call
es
mov
lahf
(bad)
adc
push
int
and
mov
sub
lods
imul
sub
(bad)
adc
std
dec
ret
add
pop
jno
push
mov
(bad)
out
or
and
add
jp
xor
fimul
loop
loope
inc
ffreep
test
push
je
xchg
mov
push
mov
cmp
inc
repnz
or
scas
sub
out
and
ss
stos
test
scas
daa
cwde
adc
add
mov
sub
arpl
pushf
aas
pop
call
jmp
push
js
inc
or
pop
scas
in
mov
sbb
ja
(bad)
fld
int3
ins
fild
sub
jle
mov
pop
movs
xchg
les
add
out
pop
adc
mov
(bad)
pop
cs
mov
sbb
scas
sahf
(bad)
or
xchg
fwait
dec
lock
movs
dec
jl
iret
jmp
cmp
out
xchg
or
mov
pop
add
xchg
or
pop
fcmovnu
mov
loope
and
sbb
mov
push
mov
aaa
cmps
xchg
cli
retf
pop
and
push
mov
(bad)
jmp
mov
jle
fild
and
(bad)
lahf
or
jmp
mov
out
fbld
jmp
sar
test
mov
sbb
jp
test
retf
pop
loopne
push
and
mov
xlat
pop
stos
data16
ins
shl
mov
push
sub
mov
or
cmp
xor
mov
push
loope
stos
cmp
dec
mov
push
ja
leave
cmp
les
mov
lods
mov
retf
popa
jmp
mov
mov
add
ins
cli
xchg
test
lock
xor
cdq
out
repz
retf
adc
push
in
inc
sbb
dec
in
mov
retf
iret
in
mov
push
adc
aas
jecxz
pop
or
fdivp
jmp
push
pop
xor
dec
ja
rol
repnz
xor
iret
sti
push
adc
call
and
jl
pop
push
cwde
int
pop
out
mov
pop
xor
repz
ds
dec
push
mov
sbb
pop
sub
push
jo
je
ins
pop
out
jne
xor
jmp
lock
sub
enter
cmps
fbld
mov
pop
xchg
loop
aas
push
in
ins
ins
mov
retf
xchg
sbb
jae
sub
stos
sub
push
xchg
test
sub
movs
or
ret
add
xchg
xor
test
mov
mov
(bad)
aaa
xchg
sbb
ret
jns
outs
imul
adc
ins
clc
repnz
scas
in
push
ins
pop
rcl
mov
push
aam
add
stos
cdq
ins
std
fdiv
mov
es
stos
mov
pop
jns
mov
test
xchg
jmp
out
add
arpl
xor
mov
iret
mov
(bad)
mov
mov
je
addr16
jmp
ds
or
push
rcr
test
push
dec
lods
or
sub
jno
xchg
jno
icebp
cmp
fst
inc
mov
nop
pop
jmp
je
repz
aam
pop
enter
lock
or
cmps
dec
push
push
mov
xor
dec
pop
scas
add
mov
cmp
cmps
(bad)
(bad)
jns
add
adc
mov
jno
imul
cdq
faddp
cmp
sub
mov
push
fdiv
mov
mov
das
sub
mov
retf
mov
jbe
mov
add
call
mov
xchg
mov
retf
and
dec
sub
aas
mov
(bad)
xlat
aas
loopne
or
jl
stos
sbb
loopne
jmp
push
(bad)
repnz
xchg
mov
iret
sub
fsub
ja
mov
mov
dec
cmp
das
xchg
out
push
popf
nop
rcl
shl
in
loopne
adc
sub
jmp
in
call
outs
repnz
and
or
ja
mov
cmp
jge
imul
js
cdq
mov
mov
push
sub
movs
sub
(bad)
loopne
jnp
jmp
ror
xor
xor
inc
sub
repnz
fwait
cmp
cmps
ins
cmp
in
xchg
mov
ds
dec
sti
dec
inc
or
pusha
or
mov
jno
pop
fsubr
in
fstp
cld
mov
cld
xchg
push
mov
out
mov
add
lds
push
cmp
pop
mul
xchg
(bad)
sub
ret
cwde
jle
xchg
test
ins
jecxz
xor
inc
aaa
fidiv
lahf
ret
daa
icebp
gs
popa
arpl
adc
scas
xor
ficom
and
mov
test
aas
(bad)
retf
add
dec
sbb
imul
(bad)
sub
push
popa
pop
inc
cld
ret
mov
xchg
into
loopne
enter
(bad)
cmp
xchg
mov
jbe
jp
outs
mov
pop
sub
jne
mov
sbb
push
sub
stos
and
or
retf
aaa
push
(bad)
or
test
inc
sbb
sbb
push
and
mov
mov
inc
aad
mov
fsubr
dec
pop
xchg
adc
ret
xchg
mov
ret
cdq
dec
mov
mov
ror
cmp
test
push
in
cmp
cmp
(bad)
es
add
and
in
popa
xchg
lahf
popf
(bad)
loopne
push
movs
js
add
popa
pop
cmp
adc
pop
retf
sub
jl
mov
or
jl
push
idiv
dec
inc
imul
push
scas
sbb
dec
lea
sbb
int3
(bad)
adc
fimul
inc
mov
fistp
pusha
in
xor
sub
int
cmps
loope
and
sbb
cli
xor
inc
cmp
retf
dec
data16
mov
ins
mov
pop
xchg
xlat
jmp
mov
sti
add
inc
dec
sti
and
mov
fldcw
aad
adc
lods
mov
jns
and
cmps
add
xchg
pop
mov
(bad)
les
add
adc
mov
fsub
movs
push
ds
jmp
mov
xchg
sbb
rol
lods
push
rol
gs
ss
mov
sahf
stos
test
sub
mov
(bad)
or
cdq
mov
(bad)
jmp
lods
ret
jo
aaa
jecxz
cwde
xor
adc
cs
add
sbb
pop
mov
jmp
imul
sub
lods
ss
mov
fidiv
(bad)
xor
test
push
mov
push
shl
xor
sub
or
ins
inc
scas
test
or
jp
lock
bound
push
and
dec
push
and
jmp
std
sub
pop
mov
in
sbb
mov
mov
sahf
xchg
jnp
mov
lea
lock
call
fdiv
je
cmp
aad
inc
mov
xchg
sti
call
mov
lahf
jp
stc
nop
pop
adc
add
test
inc
xchg
push
scas
ja
push
daa
push
mov
popa
lods
push
or
test
(bad)
in
adc
nop
cmp
aaa
lahf
dec
pop
and
xor
int
mov
cs
sbb
lea
call
test
sub
mov
dec
test
rol
adc
hlt
aaa
(bad)
xor
pop
scas
in
sbb
rcr
rcl
push
jmp
shr
mov
fistp
jo
(bad)
les
adc
dec
xor
clc
ja
sub
add
rol
push
xchg
pop
cmp
test
mov
ins
push
mov
repz
sub
out
sub
fwait
mov
mov
int
lods
mov
es
fwait
addr16
ins
(bad)
js
xchg
lahf
cmc
sti
nop
test
inc
or
inc
mov
sar
aad
pop
test
test
inc
mov
xchg
test
inc
and
(bad)
push
push
cmp
xor
fnstenv
adc
push
lds
mov
mov
mov
push
test
inc
pusha
push
pop
jp
rcr
aam
test
add
lods
dec
call
mov
cmp
dec
add
push
mov
pop
push
jbe
inc
dec
les
sub
nop
xchg
mov
xor
push
xchg
cli
aaa
push
push
push
jnp
mov
jecxz
adc
cmp
mov
mov
call
mul
scas
lea
and
mov
adc
ror
ret
test
fcom
sbb
mov
aaa
ins
mov
aad
add
mov
div
jl
mov
aaa
inc
ror
mov
repnz
xor
jns
aas
cs
add
xlat
sbb
ficomp
adc
imul
cmp
pop
mov
aad
push
test
pop
and
dec
movs
lds
call
and
ins
test
fidivr
sar
or
jl
fs
or
(bad)
jae
jb
ret
mov
fs
clc
aam
cmp
rol
mov
ins
and
push
popa
into
(bad)
fadd
sub
retf
adc
in
mov
scas
inc
xchg
xchg
sbb
jns
mov
loopne
das
outs
add
mov
sbb
aam
test
setb
pop
xchg
xchg
movs
xor
inc
or
add
loope
into
cdq
fld
mov
push
xchg
jmp
scas
ret
and
pop
sub
xor
xchg
dec
loop
adc
pop
xor
bound
retf
(bad)
and
and
mov
jmp
pop
push
lods
arpl
mov
mov
jge
cdq
(bad)
(bad)
mov
loopne
mov
or
movs
out
(bad)
adc
(bad)
jae
inc
dec
inc
(bad)
neg
outs
stos
pop
cmc
dec
dec
adc
dec
mov
add
mov
aas
in
inc
add
pmulhuw
mov
sub
or
push
addr16
add
xchg
pop
or
cld
call
shl
(bad)
ja
pop
adc
pushf
sbb
stos
nop
cmp
(bad)
rcr
xlat
inc
into
inc
scas
repz
fild
push
cdq
sar
xchg
dec
mov
sub
mov
adc
mov
inc
ja
jbe
ins
and
jne
hlt
and
movs
push
retf
bound
xchg
adc
ss
xchg
sub
inc
jne
mov
mov
sub
das
xchg
ss
lds
sahf
aaa
scas
ret
loope
add
xchg
pop
sub
mov
push
mov
or
or
push
xor
test
loop
loop
js
movs
das
bound
mov
xor
dec
xor
int3
push
nop
mov
or
xchg
adc
adc
cmp
outs
xchg
outs
into
int3
mov
xchg
and
jge
les
movs
call
cmc
pop
mov
adc
pop
mov
jle
jmp
cs
or
adc
mov
cmps
cld
vmovapd
mov
clc
in
loopne
dec
xor
mov
mov
dec
mov
pop
jmp
mov
pop
sahf
push
rol
xchg
and
jnp
jmp
jg
mov
xor
lods
sbb
add
in
jmp
add
mov
or
out
in
repnz
xchg
adc
mov
mov
xor
xchg
push
add
and
aaa
jp
xchg
mov
test
(bad)
dec
cmp
sub
lds
push
jnp
mov
rcl
inc
mov
shr
add
inc
mov
jne
rcl
sbb
add
adc
sbb
adc
sub
push
loop
mov
cmps
(bad)
cmp
fst
or
jle
jecxz
pop
rcl
pop
inc
mov
mov
stc
add
call
jns
pop
and
out
dec
and
sbb
out
mov
dec
push
inc
and
(bad)
push
inc
adc
push
jmp
sub
pop
and
cdq
ret
xor
sbb
jecxz
jp
adc
jge
arpl
mov
lea
jns
push
fcomp
xchg
in
cmps
dec
imul
or
and
int3
xchg
enter
or
les
add
pushf
jae
jne
and
dec
ds
mov
test
scas
pop
xchg
or
jle
add
dec
sbb
push
cmp
push
rcl
leave
xchg
dec
fwait
aad
mov
loope
shld
pop
and
cmp
adc
xor
out
xchg
and
xor
out
xchg
jp
ss
(bad)
in
pop
aam
cmp
das
sub
pop
cmp
xchg
pop
pop
jns
repz
sub
mov
retf
pushf
fdivp
call
pop
add
and
mov
inc
pusha
jns
lea
pop
(bad)
or
aaa
test
aaa
xchg
mov
ins
ss
frstor
lds
(bad)
stc
add
jl
(bad)
dec
jbe
mov
test
adc
(bad)
fnstcw
sub
jnp
mov
jno
fsub
rcl
das
test
and
xchg
out
add
push
stos
jbe
fst
jecxz
nop
out
sbb
mov
pushf
in
mov
mov
idiv
cmp
pop
enter
cli
dec
les
ja
loope
pop
gs
in
mov
add
xchg
push
or
mov
call
jb
xchg
mov
in
hlt
and
aas
fidiv
mov
fdivp
addr16
xchg
(bad)
out
jmp
or
inc
push
repnz
push
mov
jns
mov
mov
addr16
fdivrp
mov
jne
ds
imul
test
sbb
add
scas
jg
or
mov
(bad)
(bad)
repz
test
jmp
icebp
and
in
mov
push
jnp
cmp
sbb
daa
outs
mov
fucomp
push
xor
xchg
mov
add
xchg
movs
push
pop
push
push
icebp
sbb
aam
fcomp
and
test
mov
aad
mov
sbb
outs
loop
push
aad
(bad)
cmps
cmp
adc
js
arpl
cmp
xchg
data16
mov
push
fwait
mov
and
cs
pop
in
fs
aam
sub
pop
ror
mov
pop
pop
adc
cmps
fadd
push
jge
mov
enter
shr
lods
clc
adc
xor
fstp
fucom
add
add
add
fsubr
xor
repnz
push
pop
or
pop
imul
es
fist
scas
cmps
(bad)
ret
add
or
(bad)
idiv
fiadd
sub
scas
sbb
addr16
jmp
add
aad
aad
jg
adc
or
add
adc
add
cmp
ret
or
loopne
scas
mov
daa
retf
rcl
push
xchg
outs
push
xchg
and
add
jb
sbb
mov
and
sub
or
(bad)
in
movs
mov
xor
test
out
jge
or
outs
aam
xchg
mov
stos
push
or
mov
lods
je
mov
(bad)
retf
test
xchg
xchg
pop
jo
jmp
pushf
ins
jp
mov
and
mov
cmps
fwait
dec
shl
sbb
fwait
sub
cmps
(bad)
jle
mov
dec
(bad)
adc
mov
dec
and
test
loopne
push
repz
push
shl
xlat
jg
in
cli
jns
popa
cwde
cmp
xchg
rol
or
xchg
push
add
push
mov
(bad)
sub
xor
rol
adc
mov
cdq
shl
add
cs
call
(bad)
lea
pop
xchg
out
bound
mov
pop
ret
movs
mov
sub
fidivr
movs
in
in
mov
jle
cmp
mov
pop
pop
rcl
pop
(bad)
cmc
loopne
adc
cmp
js
dec
outs
xor
sub
push
imul
data16
cld
mov
in
cmps
cmp
(bad)
mov
mov
sub
xor
push
xchg
retf
pop
push
mov
or
pop
xor
cmp
jbe
xor
push
pusha
adc
pop
call
enter
ds
es
inc
jo
push
(bad)
xchg
pop
retf
scas
dec
push
retf
movs
adc
push
rol
lds
ins
sar
movs
mov
(bad)
mov
sbb
ds
xor
scas
jbe
mov
loopne
sti
mov
pop
es
mov
(bad)
adc
jo
push
shr
mov
xchg
xchg
lahf
sbb
or
add
jns
test
ss
jb
xchg
xchg
retf
xor
add
xor
test
add
lods
sub
dec
xchg
lods
imul
push
xchg
inc
push
adc
mov
jnp
je
lds
imul
fcomp
repz
push
jmp
mov
aad
pop
inc
inc
and
mov
test
sub
cmp
dec
cmp
mov
inc
dec
inc
shl
xor
mov
pop
(bad)
(bad)
jge
int
dec
shl
test
or
dec
pop
frstor
call
outs
fsub
outs
neg
in
stos
call
(bad)
mov
imul
retf
lea
cs
jmp
push
push
mov
jle
sbb
fucom
pop
inc
mov
popa
sbb
mov
mov
xchg
in
popf
les
sbb
sbb
jecxz
jb
inc
call
es
pusha
scas
call
cld
loope
lahf
xlat
ret
sub
xchg
je
cwde
mov
jne
mov
jecxz
sar
cmps
add
hlt
sbb
lock
shr
(bad)
jne
push
dec
sbb
xchg
mov
push
ret
mov
mov
xchg
add
(bad)
ins
mov
xor
or
fmulp
aas
and
inc
ins
dec
and
dec
cmp
or
mov
jle
add
push
cmp
out
mov
call
arpl
cmc
fcom
push
mov
mov
imul
scas
cmp
adc
ja
pop
(bad)
cmc
ret
cmp
hlt
cmp
lock
rcr
adc
test
pop
add
mov
cmp
cmp
stos
or
std
lock
cmp
outs
(bad)
ret
cmps
cwde
add
fs
pop
gs
mov
popf
mov
pop
mov
pop
dec
dec
adc
mov
pop
cmps
add
cmp
hlt
into
fcom
neg
push
movs
dec
and
pop
add
mov
mov
dec
ss
imul
mov
sub
std
ret
ins
push
stc
jo
(bad)
xchg
adc
sbb
inc
and
mov
mov
call
ja
xchg
hlt
dec
add
mov
or
mov
daa
(bad)
xor
inc
call
stc
or
sti
pushf
cmp
pop
mov
paddq
imul
test
dec
xor
int3
repz
jge
jns
jo
inc
jmp
sbb
sbb
stc
dec
outs
inc
cmps
jbe
scas
push
push
out
in
add
cmp
mov
outs
pop
and
pop
mov
or
xchg
xor
cmps
scas
jecxz
repnz
xor
cmp
jmp
jb
dec
xchg
cmp
jmp
or
test
mov
std
(bad)
cld
fist
dec
movs
mov
(bad)
push
jns
push
inc
das
push
cwde
sti
test
push
cld
in
pop
loopne
outs
icebp
jnp
inc
(bad)
pop
or
sub
jne
mov
inc
ror
mov
fdivr
push
js
(bad)
pusha
imul
rcl
rol
ror
sub
mov
cmps
jecxz
adc
ret
hlt
or
lock
sbb
add
out
mov
out
(bad)
xchg
xor
cwde
xchg
or
out
or
fadd
ret
mov
fincstp
jmp
xchg
push
or
cmp
lea
aam
(bad)
cmp
cdq
test
je
cdq
mov
cli
ret
push
mov
js
out
stos
(bad)
or
jp
xor
dec
imul
pop
mov
jo
xchg
mov
push
and
fbstp
mov
fnstenv
push
sbb
mov
pop
push
out
jp
or
pop
pop
mov
mov
movs
and
(bad)
xchg
add
add
popf
imul
mov
and
jb
jo
adc
das
(bad)
jne
leave
pusha
cmp
fadd
dec
and
and
jns
aam
(bad)
sbb
popf
and
jmp
xchg
mov
sub
xchg
or
push
dec
or
push
mov
bound
pop
outs
les
cs
imul
sbb
call
sbb
cmp
sbb
ja
jle
fsubr
nop
mov
mov
fistp
stos
test
pop
imul
out
and
push
mov
xor
or
outs
psrlq
mov
cmp
and
shr
pop
je
jnp
lods
(bad)
or
dec
mov
sub
ins
gs
dec
inc
in
mov
das
retf
pop
mov
div
jmp
dec
lds
lds
jge
sar
int
jne
sbb
push
test
cmps
out
cmp
cmp
mov
and
add
out
arpl
cli
cmp
cli
lahf
sti
(bad)
cmp
push
adc
ins
aam
dec
imul
pusha
xor
ss
cmc
(bad)
scas
cdq
push
mov
test
sahf
fwait
jne
xchg
and
pop
mov
adc
fcomp
das
jecxz
or
mov
cmc
mov
test
fcom
jb
xchg
mov
mov
aaa
ret
sub
xchg
cmps
inc
test
jg
add
or
mov
mov
mov
hlt
cmp
imul
jle
cmc
movs
out
outs
and
push
aad
cmp
std
add
xchg
adc
pop
popf
jnp
adc
jmp
popa
mov
sub
mov
lock
mov
add
fs
cmc
mov
in
fmul
mov
mov
mov
push
in
dec
fcomip
int3
arpl
dec
mov
fsubr
xchg
jae
dec
xor
aas
push
add
ja
out
xchg
xchg
jmp
scas
push
sbb
hlt
mov
out
mov
arpl
pop
repz
sub
(bad)
movs
sub
into
mov
imul
std
inc
inc
stc
inc
pop
xchg
push
xchg
adc
jb
xchg
movs
and
lds
inc
outs
retf
xchg
div
ror
je
cmc
push
xor
xchg
jb
jno
stos
test
push
jbe
outs
push
xor
je
push
sub
or
(bad)
outs
jne
or
xchg
outs
inc
pop
adc
push
cmc
cwde
icebp
xor
jbe
adc
(bad)
jbe
fbld
cdq
pop
aas
ins
dec
dec
sub
cs
sub
(bad)
lahf
test
test
frstor
jno
push
xchg
rcr
sub
jle
add
dec
or
ins
pusha
and
lahf
ret
cmp
or
cmps
pop
mov
in
sub
test
cld
sbb
sbb
push
mov
mov
ret
or
xor
(bad)
mov
mov
adc
inc
std
fdivrp
mov
retf
cmp
or
push
push
mov
dec
mov
or
popf
ins
iret
repz
mov
and
loopne
xchg
or
mov
into
pop
fiadd
mov
dec
fistp
(bad)
pop
lock
mov
shl
out
add
call
jne
jnp
jecxz
inc
or
jecxz
inc
sbb
bswap
cmp
js
mov
call
mov
cmp
sub
dec
data16
mov
inc
pushf
loope
fs
sub
stos
or
into
fidivr
pextrw
adc
retf
inc
jecxz
mov
aad
jg
iret
push
push
popf
and
mov
push
mov
lea
xor
gs
outs
push
icebp
sub
pop
mov
aam
inc
mov
jg
mov
mov
mov
(bad)
sub
hlt
cmp
push
mov
cmps
cmps
test
mov
out
xlat
dec
push
inc
jo
inc
sbb
push
dec
jmp
std
cdq
sar
jle
repnz
scas
sub
mov
mov
ins
(bad)
ret
push
movs
dec
js
test
mov
lods
or
sbb
push
push
cmps
rcr
jo
push
push
repz
jmp
jns
mov
aaa
pop
or
push
mov
mov
rcr
cmps
add
sub
(bad)
mov
in
movs
push
std
pusha
mov
sbb
mov
sub
and
xor
sub
push
push
lods
push
fisub
outs
mov
sahf
push
repnz
das
rol
push
sbb
or
in
and
stos
test
cmc
sub
xor
pushf
cmc
xor
or
hlt
xchg
adc
adc
scas
mov
fadd
sbb
addr16
inc
push
sub
stc
retf
add
mov
int3
std
stos
aaa
add
adc
imul
in
jbe
pop
retf
(bad)
inc
iret
daa
stos
adc
sbb
jb
(bad)
ror
out
pushf
xor
pop
xor
push
push
ret
and
loope
(bad)
sub
jno
dec
cmp
xlat
ja
cli
jno
xor
sbb
add
je
mov
push
pop
adc
pop
mov
ja
cmp
push
jmp
or
inc
jg
dec
add
sub
test
add
xchg
sub
xchg
sub
adc
cld
mov
fisttp
inc
mov
and
es
orps
push
mov
dec
mov
fdiv
xchg
inc
lods
mov
scas
loopne
inc
jne
adc
arpl
add
sub
in
mov
lock
in
mov
and
sbb
fs
arpl
(bad)
in
data16
stos
int
xchg
jne
nop
push
call
imul
mov
xchg
sub
out
sub
aaa
sub
outs
push
pop
jb
push
popf
mov
(bad)
mov
dec
imul
(bad)
add
aaa
(bad)
fbstp
data16
ins
aas
pop
mov
sahf
sbb
push
fwait
xchg
repz
mov
das
nop
leave
jnp
cmp
repz
jl
mov
xor
inc
mov
dec
cld
sbb
ss
xchg
js
movs
jbe
jge
inc
ret
loopne
cld
or
fisttp
add
jecxz
pop
push
nop
xor
enter
mov
mov
lods
ret
outs
int3
shl
es
out
pop
aas
cmp
cld
push
jmp
gs
xor
test
or
shl
inc
inc
push
mov
pop
mov
jne
std
xor
fcomp
inc
xchg
mov
xchg
mov
jmp
sahf
mov
jmp
jns
pop
adc
lds
cld
ds
push
or
daa
repnz
jl
jg
fsub
ds
xchg
inc
mov
ins
cwde
push
add
pushf
retf
mov
adc
loope
mov
ins
retf
mov
shl
aam
in
xchg
push
pop
lahf
mov
add
mov
jnp
add
inc
sub
movs
pusha
pop
push
clc
mov
sar
sub
data16
sub
mov
pop
fidiv
ins
sub
mov
ss
mov
std
cmp
jo
dec
dec
leave
retf
neg
adc
aad
ins
inc
xor
dec
mov
jmp
bound
out
or
iret
adc
leave
leave
int
inc
inc
test
shl
mov
pop
call
sahf
or
arpl
mov
stc
cmp
dec
add
imul
int
pop
pop
or
jmp
(bad)
leave
ss
int3
dec
mov
mov
in
movs
lock
add
xchg
xchg
jns
ficom
mov
cld
mov
or
mov
or
ja
inc
cmp
adc
push
fldl2t
ret
push
clc
stc
and
dec
or
imul
ins
xor
jo
mov
push
shl
xchg
mov
enter
js
iret
jmp
bound
into
in
inc
adc
(bad)
sbb
xchg
mov
and
cmc
mov
mov
pop
mov
out
out
das
test
aas
lock
pusha
aam
mov
retf
outs
adc
das
lods
mov
daa
jle
pushf
or
cwde
ja
mov
adc
retf
iret
mov
popf
mov
leave
addr16
jae
jo
mul
gs
test
scas
inc
mov
rol
popf
leave
ret
sbb
push
loop
and
int
mov
sar
jl
and
pusha
iret
ins
mov
(bad)
cmps
in
push
in
and
cld
push
es
xchg
dec
jge
(bad)
xor
in
dec
sub
push
adc
ins
add
adc
jb
adc
mov
mov
and
rol
mov
and
or
shl
(bad)
jmp
pop
sbb
push
fild
enter
movs
sar
fidiv
sar
(bad)
push
in
ja
dec
aaa
sbb
sub
test
jns
add
dec
jnp
jle
cmp
mov
ins
int
sbb
lock
hlt
or
out
cmp
gs
repnz
push
iret
in
popa
or
mov
dec
les
(bad)
push
dec
stos
dec
int
adc
inc
jecxz
sbb
sub
shr
ins
outs
push
popf
mov
dec
ftst
pop
dec
mov
cdq
fwait
repnz
cwde
or
or
cld
call
stos
sub
jno
add
xor
push
sub
cmps
stc
loope
ins
sub
xlat
(bad)
(bad)
fs
scas
jne
mov
jns
cmp
jae
xchg
push
xchg
fwait
xchg
dec
in
mov
dec
sub
mov
add
lods
inc
out
and
jge
and
test
adc
sbb
ins
das
das
popf
repz
push
mov
jae
pop
add
shl
data16
inc
mov
nop
cld
aas
sbb
sub
ret
test
sbb
(bad)
out
push
es
out
cmp
pextrw
or
mov
sahf
jge
ror
jns
(bad)
jp
xchg
mov
imul
cmp
leave
adc
aam
or
mov
add
add
das
daa
out
mov
addr16
stos
mov
jl
nop
cmp
push
mov
scas
pop
sub
inc
in
(bad)
jb
sbb
xor
test
jb
cs
xchg
and
jle
out
retf
bound
pop
xor
inc
and
cld
or
fnstcw
xchg
ins
mov
pop
xor
clc
call
pop
push
xor
xchg
mov
jo
push
clc
add
cmp
adc
or
pop
mov
sub
pop
sbb
jle
dec
xchg
shr
das
cmps
cmps
or
cmp
aad
add
arpl
and
loope
fist
jge
ret
xor
retf
in
xchg
ror
jl
push
jl
sbb
sti
sahf
pop
cmp
inc
add
cmps
cmp
add
xchg
dec
mov
mov
imul
inc
fidivr
sar
jnp
add
mov
mov
aaa
cmp
fdiv
in
lods
pop
cmp
sub
mov
iret
pushf
push
dec
das
leave
fs
sub
cmc
outs
mov
or
adc
(bad)
jecxz
mov
test
dec
les
pop
or
dec
or
xchg
sub
jae
ror
loop
add
dec
pushf
out
mov
adc
nop
add
out
sti
sbb
inc
xchg
xchg
cdq
mov
mov
inc
mov
fmulp
jle
cli
into
popf
(bad)
std
jmp
stc
rcl
push
or
in
pop
add
add
imul
movs
outs
daa
call
dec
mov
jge
xor
sbb
xchg
imul
test
test
out
inc
mov
(bad)
outs
mov
sar
daa
ja
iret
call
(bad)
mov
mov
in
out
clc
jmp
push
lods
repz
(bad)
mov
ret
fist
sbb
adc
lods
mov
or
(bad)
es
retf
(bad)
pusha
outs
push
repnz
enter
dec
sbb
js
dec
xchg
nop
stc
xor
cmp
push
pop
pop
sbb
dec
sbb
jp
push
push
adc
mov
pop
add
movs
loop
es
pop
or
sahf
outs
movs
xchg
adc
jne
or
hlt
add
fxtract
inc
(bad)
das
lock
popf
adc
cmp
test
sbb
cmps
pop
dec
inc
mov
xor
inc
(bad)
fiadd
vpshab
aaa
(bad)
(bad)
fiadd
int
ja
pop
cld
or
jecxz
and
div
test
mov
jne
movs
push
int3
(bad)
lods
or
cwde
dec
dec
sub
xor
push
push
mov
sub
xchg
fwait
sbb
pushf
jl
loopne
dec
aas
push
shr
fucom
adc
push
push
scas
rcl
rcr
adc
mov
jno
bound
cmc
pusha
jmp
movs
je
sete
sbb
or
ror
sbb
retf
stos
cmp
adc
cmp
je
(bad)
mov
pop
test
inc
push
or
push
sub
pop
pop
into
cli
loope
pmullw
call
ins
jae
inc
cmps
cmps
fist
fsubr
push
mov
xchg
sbb
outs
jle
xor
pushf
inc
jns
aaa
adc
dec
cmp
gs
psubsb
mov
out
mov
bound
rcr
repnz
adc
popa
push
cmp
cmp
xor
cmc
(bad)
push
ret
pop
push
xchg
mov
jle
stos
les
int
xchg
fwait
inc
shr
jecxz
mov
sbb
sbb
arpl
xlat
retf
retf
jo
push
mov
inc
pop
jmp
shr
inc
scas
movs
mov
mov
pop
ja
sbb
sahf
test
inc
test
fs
sahf
call
cdq
or
hlt
sub
mov
lds
shr
mov
imul
imul
inc
add
jg
shl
out
inc
enter
sub
push
push
adc
cwde
add
stos
jmp
xchg
xor
cld
adc
out
xchg
mov
mov
jl
out
pop
cmp
add
pop
mov
mov
jb
jne
cmps
sbb
fcomp
inc
mov
test
ins
idiv
and
lahf
retf
call
int3
outs
(bad)
ret
movs
adc
xor
fnstcw
imul
out
push
push
ja
leave
ret
movlhps
div
shl
push
sbb
dec
hlt
mov
xchg
retf
adc
test
adc
push
popa
cmp
repz
cmp
mov
loopne
xor
pop
sbb
cmp
sub
push
call
test
or
jne
int3
mul
pop
out
rcr
push
lea
pushf
out
icebp
cs
cdq
add
mov
inc
mov
test
ret
mov
retf
(bad)
das
adc
mov
es
dec
dec
iret
shl
pop
cmps
push
sbb
add
je
mov
dec
dec
inc
inc
aaa
jmp
dec
xor
sar
fistp
mov
loopne
pop
and
and
xchg
(bad)
and
push
add
mov
or
cwde
retf
xor
imul
and
in
jp
enter
cmc
lds
cmp
(bad)
in
cs
in
popf
cmp
xchg
inc
test
mov
adc
hlt
jnp
test
enter
stos
fcom
xchg
and
(bad)
rol
fdecstp
xor
out
fadd
loope
(bad)
mov
cmp
enter
pop
mov
push
sbb
mov
push
and
jmp
mov
adc
pop
js
or
mov
das
and
ficom
sbb
and
int3
dec
adc
lods
jg
mov
call
shl
mov
push
xchg
scas
add
push
pop
sub
enter
sbb
popa
icebp
mov
sbb
mov
aaa
and
sub
stc
sub
sbb
(bad)
js
fisubr
ins
and
stos
fwait
ret
inc
and
sbb
cmps
cli
pop
mov
sbb
push
mov
hlt
js
inc
cmps
or
mov
call
sub
mov
mov
aaa
sbb
xchg
pop
dec
push
mov
lds
repz
mov
sti
dec
xchg
sbb
pop
push
xlat
lea
dec
aas
push
clc
and
mov
out
mov
cs
add
dec
in
sub
and
sub
cmp
mov
mov
je
scas
stos
daa
out
and
jle
add
rcl
test
in
push
(bad)
in
or
push
push
pop
inc
in
cmc
mov
scas
(bad)
leave
push
adc
not
sub
adc
sub
xor
add
iret
addr16
cmp
lds
repz
repnz
(bad)
aam
popf
enter
cdq
je
jle
adc
push
out
icebp
add
repnz
stos
and
cmp
dec
ins
sub
dec
test
mov
out
ss
cli
popa
add
mov
cmp
in
pop
loopne
and
cs
gs
pop
push
mov
push
mov
popf
jg
sar
push
or
mov
lock
int
sub
data16
push
rol
mov
and
dec
frstpm(287
pusha
push
mov
jb
jp
pop
jns
cmp
into
imul
xchg
cwde
sbb
loop
lahf
ret
inc
xchg
mov
inc
shl
dec
fild
cmp
movlps
(bad)
retf
loop
push
int3
js
dec
in
jmp
jl
retf
lods
dec
jbe
mov
xor
push
sbb
sbb
push
jle
out
xchg
in
pop
add
mov
push
int
jb
mov
fdiv
push
out
sub
leave
pop
dec
jmp
sub
mov
fisttp
adc
enter
addr16
retf
jbe
mov
shl
ins
stos
ins
test
ftst
pusha
xor
add
mov
mov
dec
or
mov
pop
enter
ds
jp
jp
rcl
dec
jmp
retf
or
sbb
cmp
mov
lods
mov
adc
pop
in
sub
mov
cmp
jnp
dec
jno
or
mov
push
pop
(bad)
lds
or
push
mov
or
and
arpl
or
out
ja
sub
dec
fcmove
xlat
dec
push
push
pop
mov
jnp
cmp
push
loop
scas
cmp
loopne
mov
mov
sbb
mov
retf
jmp
leave
loope
outs
arpl
stos
or
cs
mov
shr
mov
fs
sub
cld
lods
es
mov
and
aaa
test
aas
dec
adc
jbe
std
adc
lahf
ret
ins
cmp
sub
test
lods
int3
jl
sbb
jmp
ror
add
cmp
add
mov
fist
jnp
xlat
adc
jmp
cmp
std
neg
xlat
call
dec
jbe
mov
sub
jecxz
sub
fidiv
pop
shl
in
sbb
or
rcl
push
repz
sbb
and
and
pop
jae
inc
adc
ret
mov
imul
sub
mov
cmp
lods
mov
push
sub
mov
sbb
pusha
call
adc
loope
fwait
sbb
mov
out
ror
jo
mov
les
mov
out
xchg
gs
mov
rol
and
dec
out
adc
inc
cmps
mov
or
js
mov
mov
call
movs
xor
jge
mov
pop
sub
aas
jmp
cmc
ror
inc
fnsave
out
loope
ja
sti
scas
mov
sti
and
das
xchg
aad
cmp
mov
adc
pop
inc
adc
sahf
bound
frstor
mov
or
iret
loopne
lods
mov
mov
movs
sub
pop
and
xlat
inc
add
inc
call
leave
sbb
arpl
daa
inc
xchg
sbb
fcom
fst
or
push
cmp
in
(bad)
loopne
mov
scas
rol
xor
jns
sub
aam
cs
sti
jns
shl
mov
push
inc
add
in
or
jns
pop
adc
std
dec
and
int
mov
mov
push
and
test
sbb
repnz
mov
and
fcmovbe
and
imul
rol
dec
mov
pop
imul
cld
mov
jnp
aad
xor
loopne
jecxz
adc
sti
lods
jle
mov
mov
and
mov
ins
lahf
imul
mov
adc
push
into
sti
loop
cmp
fsubr
in
sbb
push
cdq
sub
int3
adc
or
lods
pushf
outs
sbb
xchg
std
mov
cmps
in
jo
(bad)
fild
outs
sbb
jno
ins
xchg
cmp
sbb
pushf
lods
adc
mov
push
jne
jno
jecxz
int3
jl
rcr
jl
jmp
outs
in
dec
outs
repnz
and
push
mov
xor
int3
(bad)
xor
scas
sbb
xchg
dec
push
sti
test
sub
in
sub
jl
loope
mov
neg
push
pop
adc
or
aam
outs
les
cli
ror
clc
mov
and
cmp
int
aas
cmp
cmp
cwde
mov
bound
xchg
fist
sbb
xchg
cmps
pusha
(bad)
dec
loop
ins
or
stos
xor
and
hlt
pop
jo
pop
pop
mov
pop
popf
jnp
mov
jne
pushf
mov
jp
out
mov
adc
mov
lods
sti
cmp
loope
sub
bound
scas
xor
je
mov
lds
fcmovu
popf
psllq
mov
movs
xchg
mov
fucom
popf
fidivr
jo
adc
or
pop
(bad)
pop
xchg
loope
pop
repnz
push
int3
or
(bad)
push
test
sub
push
dec
fs
out
jg
jecxz
jmp
aam
push
jb
xchg
add
call
je
xchg
jecxz
mov
pop
test
shl
(bad)
in
ror
inc
pop
push
(bad)
in
mov
pop
sbb
neg
bnd
je
inc
ficomp
sbb
adc
or
in
std
or
cmp
ja
xor
dec
scas
lds
xchg
inc
xor
ret
mov
pusha
push
retf
xchg
jae
adc
pop
xchg
test
call
sub
iret
mov
sub
inc
mul
xor
aad
jbe
adc
sub
(bad)
and
mov
jbe
cmp
cmp
sbb
in
ja
mov
jbe
cmp
push
shl
dec
pop
mov
jl
fwait
and
and
ret
call
xchg
dec
mul
xchg
adc
push
sub
aas
std
sti
xchg
fucomi
scas
sub
aas
sahf
push
add
test
rcl
jmp
pop
int
pusha
in
lods
inc
fld
push
adc
neg
aam
into
adc
in
in
int
mov
pop
lods
pop
cmps
and
mov
mov
mov
push
inc
or
adc
sub
jb
push
ret
or
test
stos
mov
je
pop
jns
(bad)
imul
test
mov
fistp
mov
sbb
xor
mov
imul
aaa
jne
in
jle
orps
mov
outs
xor
rol
mov
rdmsr
pop
fbstp
bound
js
repz
inc
out
jecxz
std
outs
cld
out
test
lock
add
js
push
loope
jecxz
jge
push
pop
rol
push
dec
cmp
call
push
fnsave
jno
or
bound
mov
pop
dec
mov
inc
scas
add
cmp
pop
sbb
pop
sbb
pop
fistp
ss
ja
inc
outs
xor
add
pop
mov
pusha
inc
(bad)
js
outs
ret
ret
jb
jns
cwde
je
in
adc
stos
jge
sub
fcomp
aaa
push
mov
rcl
inc
pop
mov
(bad)
ja
push
cmp
lds
aaa
lds
jae
xchg
stos
mov
ds
rcr
mov
and
adc
imul
imul
sbb
gs
xchg
popa
and
ret
ss
sar
mov
dec
cmp
dec
repnz
push
(bad)
daa
push
cmp
int
sbb
push
fcomp
fstp
test
mov
outs
sahf
icebp
xor
add
mov
add
push
in
(bad)
je
fcom
xchg
ja
lds
mov
push
cmps
mov
and
dec
cmp
xor
xor
and
or
outs
or
inc
jbe
scas
std
lds
sahf
jl
mov
jmp
and
mov
add
cmp
(bad)
imul
(bad)
shr
cmps
push
shr
xchg
sbb
inc
push
jmp
loop
mov
sub
movs
push
or
push
jae
sub
mov
and
inc
add
mov
push
adc
jg
dec
(bad)
out
mov
or
ins
and
mov
test
xchg
cmp
aaa
shl
cld
xchg
fadd
and
vcmppd
mov
rcr
test
ins
loope
sahf
xor
sar
fnstsw
dec
cmp
or
int
push
iret
mov
mov
mov
dec
dec
std
pop
sub
ins
sar
fdivr
loope
out
je
sub
(bad)
pop
dec
int
jmp
and
arpl
mov
and
sub
sbb
les
sar
mov
rol
shl
mov
dec
adc
sub
ins
dec
push
xor
push
adc
pop
push
push
retf
jmp
sti
mul
ds
(bad)
push
imul
mov
bnd
lgs
mov
jo
sar
fisttp
inc
push
pop
enter
in
pop
cmp
xchg
(bad)
into
inc
mov
out
jne
test
adc
jg
mov
(bad)
js
fstp
fisttp
push
loop
xor
lahf
adc
pop
sti
in
retf
leave
outs
arpl
cld
arpl
in
xor
or
xor
push
jle
cmc
xor
mov
pop
repnz
xor
dec
sbb
imul
inc
stos
add
xchg
or
gs
jecxz
sub
cmps
inc
dec
aas
or
dec
mov
mov
cmp
movs
dec
cmp
sub
call
aam
fnstcw
mov
jno
and
cmp
sub
mov
les
add
and
cmc
or
inc
xchg
xor
retf
mov
out
mov
push
stc
pop
aas
in
mov
mov
(bad)
or
les
sbb
mov
aas
lds
and
add
lock
aas
or
adc
popf
neg
ins
sbb
nop
pop
pop
push
cmovs
cmp
hlt
sbb
jns
xor
push
cmc
ds
sbb
jg
(bad)
sar
push
(bad)
pop
test
or
retf
dec
in
or
xor
xor
js
js
mov
mov
retf
adc
and
xor
jae
push
mov
pop
icebp
fld
inc
mov
jae
in
in
hlt
aam
dec
loopne
sub
cmp
and
fidiv
(bad)
push
mov
imul
push
jl
xor
shl
cli
int3
sub
cmp
daa
sbb
mov
mov
and
gs
jmp
push
je
or
add
stos
inc
jmp
and
pop
and
xor
ins
fld
ss
add
pop
jae
(bad)
xor
fistp
lds
xchg
adc
test
mov
test
xchg
das
retf
adc
test
cmp
jne
je
retf
cmp
rcl
das
(bad)
mov
add
and
(bad)
fcomp
test
push
sbb
not
js
mov
mov
ja
fistp
sar
cld
ds
fldenv
aad
fcomp
les
fwait
lahf
cmp
inc
sub
int3
pop
ins
xlat
imul
xchg
and
adc
xchg
nop
dec
or
fsubr
mov
dec
push
out
adc
(bad)
(bad)
fmul
push
neg
clc
and
(bad)
mov
mov
hlt
rcr
lods
cdq
das
bound
pop
rcr
clc
pminsw
lea
pushf
enter
mov
jb
push
fild
push
loop
sub
jns
outs
scas
repnz
sub
inc
inc
cmp
pop
(bad)
test
scas
ins
jo
cwde
mov
xor
and
cmc
clc
data16
mov
push
push
jb
mov
popa
int
shl
xor
sbb
repz
mov
mov
jp
sbb
(bad)
scas
int3
jecxz
cmp
jl
dec
and
or
dec
(bad)
push
inc
jmp
push
xor
js
add
shl
imul
mov
(bad)
frndint
pop
sub
and
or
push
movs
push
xchg
mov
xor
adc
push
fistp
(bad)
push
pop
(bad)
jmp
push
retf
mov
(bad)
xchg
xchg
jg
xchg
dec
(bad)
jns
rcr
xlat
test
xor
inc
mov
sbb
ds
retf
mov
jg
retf
lds
xchg
mov
(bad)
sbb
sti
add
loope
cmp
stos
jmp
fidiv
xor
je
popa
mov
sub
xor
push
sub
xchg
sub
lock
push
and
or
mov
xchg
mov
xchg
push
popf
rcr
pushf
clc
xor
jl
enter
or
outs
pushf
mov
dec
out
dec
mov
push
fwait
adc
lods
sahf
mov
lods
dec
jmp
sahf
cmp
xor
and
add
and
fdiv
lds
dec
fs
sahf
popa
ror
out
pop
jmp
or
dec
call
icebp
loopne
addr16
mov
inc
pop
and
mov
aam
fs
out
or
mov
call
test
(bad)
movs
fidiv
inc
jecxz
arpl
stos
xlat
fld
mov
sahf
jb
mov
adc
dec
iret
(bad)
popf
inc
std
jb
dec
call
pop
sbb
mov
adc
push
mov
fistp
xor
loop
push
jae
sbb
lods
add
inc
scas
dec
push
bound
dec
push
mov
shr
lods
clc
mov
xor
cmp
fbld
test
mov
pop
and
(bad)
clc
xor
clc
in
leave
pop
sbb
mov
adc
pop
repz
(bad)
pushf
js
lds
add
pushf
mov
inc
dec
push
inc
retf
push
sbb
cli
pop
pop
repnz
or
leave
xlat
add
jmp
pop
mov
jle
leave
xchg
bound
push
aad
push
mov
data16
mov
das
dec
bound
lahf
adc
jle
aaa
mov
shr
leave
shl
pop
out
cwde
push
jno
arpl
icebp
sub
mov
pop
in
lea
pop
sub
inc
adc
add
lock
lea
jle
sar
push
mov
and
adc
jns
mov
adc
shl
enter
push
mov
adc
repz
(bad)
cmps
mov
jge
mov
rol
mov
sub
xchg
push
xchg
mov
mov
push
sbb
js
popa
ds
outs
pop
sbb
inc
inc
jb
popa
retf
mov
fidivr
call
mov
(bad)
push
adc
mov
repnz
xor
mov
xchg
jno
push
sub
out
pop
cwde
ror
xchg
retf
pushf
or
stos
hlt
retf
sbb
mov
and
mov
xchg
mov
call
add
js
out
sbb
jae
int3
dec
(bad)
popf
(bad)
rcl
loopne
outs
hlt
int3
stos
jle
cs
inc
mov
test
enter
inc
(bad)
outs
out
out
add
sti
add
mov
rcl
jbe
mov
(bad)
jmp
cmp
mov
push
stc
jbe
pop
or
ss
mov
test
outs
fisttp
hlt
push
cdq
mov
gs
add
dec
aam
outs
fild
pop
je
in
in
fisttp
and
add
mov
mov
clc
data16
shl
mov
rcl
dec
lds
pushf
xchg
push
jle
mov
ss
xor
sub
mov
xor
adc
jg
mov
test
inc
jo
xor
mov
adc
or
xlat
popa
and
inc
out
jl
mov
adc
out
inc
nop
lahf
sti
cld
jmp
jl
popa
into
and
pushf
jecxz
pop
loope
lods
frstor
sub
xor
xchg
outs
jl
jle
cmps
fcomp
pusha
in
movs
adc
pop
pop
xchg
xor
dec
cmc
stc
ja
adc
mov
in
mov
pop
cdq
das
add
ffreep
aas
daa
loope
in
mov
das
mov
cwde
pop
push
cmp
scas
inc
mov
scas
sti
add
inc
icebp
cmp
jae
mov
ss
dec
in
movs
scas
sbb
adc
daa
test
xlat
outs
or
mov
jne
or
in
jge
mov
and
pop
sbb
push
int3
ins
sub
adc
out
outs
out
lods
jmp
stc
add
xchg
loop
xor
js
lods
fs
or
xchg
dec
mov
mov
fwait
ret
add
mov
std
jmp
sti
and
inc
jo
mov
ds
nop
inc
or
adc
jo
aaa
xor
push
loop
mov
cmp
xchg
pop
pop
cwde
scas
movs
idiv
inc
xor
adc
std
idiv
fnsave
in
xor
add
push
fcom
stos
std
xor
jle
xor
ror
movs
jp
jno
fiadd
inc
mov
adc
icebp
sar
sub
aam
pop
sbb
cli
ret
push
xchg
dec
rcr
aad
mov
ja
repz
in
pop
cmp
push
retf
pusha
sbb
in
pop
and
and
imul
mov
or
les
rcl
push
popa
ror
dec
call
sahf
push
add
fiadd
test
popa
pop
dec
popf
or
sub
mov
mov
adc
sti
lods
inc
mov
push
pop
dec
inc
sub
loope
(bad)
lods
cmc
jns
xchg
les
retf
push
test
mov
cmp
mov
xchg
daa
sar
das
sub
sbb
xor
arpl
mov
and
inc
push
dec
dec
or
push
xchg
dec
xchg
xor
sub
xchg
inc
mov
push
add
inc
shl
(bad)
mov
std
or
cmp
icebp
dec
xchg
clc
fsub
dec
adc
dec
fsubr
ror
dec
xor
out
sbb
ins
das
(bad)
fcmovnb
ins
nop
in
iret
adc
loopne
and
aaa
es
inc
adc
lahf
jo
jecxz
das
adc
mov
pop
mov
outs
and
out
pusha
ds
push
nop
mov
mov
pop
mov
lds
inc
js
mov
xor
inc
sub
daa
loope
dec
jecxz
aaa
mov
push
cmp
es
(bad)
iret
sub
stc
mov
jg
sbb
into
mov
add
jmp
mov
in
xchg
or
fisubr
xor
xchg
push
lahf
out
mov
rcr
mov
push
mov
sbb
mov
bound
mov
leave
cli
mov
add
xor
dec
pop
bound
add
outs
inc
fdiv
ins
sti
pop
add
push
adc
lds
aad
fwait
imul
in
xchg
repz
test
cs
mov
std
inc
lea
out
sahf
mov
push
push
adc
or
inc
dec
pusha
imul
push
pop
mov
fld
or
call
dec
pop
xor
sub
adc
sbb
movs
ja
pop
daa
stc
jle
jo
push
iret
pop
sbb
mov
cmp
nop
mov
mov
test
mov
fcmovnu
xor
and
pop
and
and
dec
icebp
enter
inc
xchg
ss
cmps
dec
loope
and
bound
jno
jge
jae
xor
jge
cld
ret
es
cmp
push
mov
mov
mov
sub
mov
mov
in
lds
adc
jmp
aaa
aad
add
pop
ja
mov
xchg
xor
adc
xor
xchg
fistp
test
pop
sbb
cmp
xchg
cmp
and
lods
gs
loop
out
test
jmp
jns
or
rol
(bad)
jle
adc
fisub
sub
shr
push
xor
mov
retf
inc
shl
mov
push
inc
sbb
lahf
add
dec
xchg
mov
inc
inc
add
inc
adc
push
jae
xchg
sbb
cmps
test
dec
cmp
std
ror
or
xchg
mov
(bad)
outs
loopne
fidiv
repz
mov
movs
xor
les
push
mov
add
pop
test
mov
adc
loop
out
and
arpl
sti
mov
gs
sub
in
sar
aaa
and
mov
fild
xchg
or
cmp
push
push
pushf
jmp
and
(bad)
cmp
xor
fcomp
and
std
mov
addr16
(bad)
out
cmp
jle
xchg
mov
fld
or
das
and
mov
jg
inc
lock
add
fcom
pop
jmp
lods
sub
in
out
push
mov
enter
mov
fwait
sub
mov
sub
lods
nop
push
jns
in
jmp
cmp
arpl
repnz
in
lods
cmp
pop
popa
fild
pop
gs
sbb
int
loopne
push
scas
mov
lods
call
pop
mov
loope
push
sbb
mov
add
fwait
sbb
mov
(bad)
pushf
in
adc
push
inc
lea
movs
push
jnp
push
mov
les
rcr
ins
bound
adc
jno
shr
sub
or
cld
scas
mov
rcr
cmc
and
pop
jbe
outs
jmp
sbb
or
push
lods
xchg
(bad)
outs
adc
dec
fmul
mov
pop
add
loopne
jge
iret
and
and
jl
mov
lds
(bad)
fldenv
or
cs
add
dec
and
ss
cmps
fnsave
dec
rcl
je
mov
cmp
ret
outs
pop
jge
dec
mov
xchg
leave
jmp
add
inc
adc
retf
stos
cmp
div
mov
mov
jle
test
adc
dec
loope
pop
test
outs
into
jmp
scas
aas
jmp
mov
push
iret
push
sbb
nop
das
jg
dec
sahf
addr16
push
jmp
xchg
pop
add
dec
cs
data16
iret
jg
(bad)
sub
pop
xchg
push
popf
addr16
adc
pop
inc
(bad)
fprem
and
into
out
sub
jge
cmp
rol
inc
out
ret
mov
pusha
out
inc
ror
xchg
cmc
add
dec
fdivr
stos
dec
cmp
jge
xchg
mov
fwait
xor
sbb
in
(bad)
push
out
push
fs
add
mov
(bad)
lods
ins
sub
(bad)
mov
(bad)
not
test
jge
test
pop
push
repnz
nop
and
and
ins
mov
xchg
and
pop
add
and
dec
mov
clc
dec
pushf
and
inc
mov
sub
in
enter
sbb
push
enter
push
lds
inc
mov
stc
loop
fs
call
pop
aaa
jbe
and
push
in
or
jbe
sbb
cmp
pop
adc
mov
push
sahf
cdq
jbe
mov
retf
mov
adc
sub
pop
mov
movnti
int3
xchg
clc
sti
loopne
mov
push
std
push
punpckhdq
xor
mov
sbb
add
(bad)
retf
aaa
cld
in
or
push
xchg
mov
fs
xor
iret
pop
aaa
cmps
ins
jb
cmp
or
outs
pop
ins
sbb
aam
push
push
jl
xchg
inc
add
movs
fwait
out
int
icebp
stc
(bad)
pop
(bad)
adc
jmp
cld
fs
mov
mov
mov
sbb
stos
pop
cmp
or
push
jle
outs
cmp
push
sahf
jmp
push
dec
retf
adc
shr
dec
scas
stos
stos
jmp
packuswb
repz
movs
stc
mov
mov
xor
(bad)
idiv
add
rcr
push
shl
mov
inc
add
xcrypt-cbc
and
push
(bad)
iret
test
sub
sub
aaa
aas
lods
add
fcom
shl
jb
(bad)
mov
sbb
fmul
loopne
mov
inc
mov
cmp
mov
dec
adc
dec
cwde
pop
or
sbb
stos
out
cmp
shl
xchg
ret
mov
push
add
sub
jge
pop
jno
sbb
lods
mov
jne
clc
lahf
fmul
inc
jp
aas
shr
ret
sbb
lock
pop
jno
aam
pop
xor
aad
sub
test
inc
call
jmp
lea
xor
lahf
cmp
xor
inc
sub
fsub
test
cwde
pop
xchg
popa
ss
into
xchg
pusha
mov
push
xchg
push
hlt
adc
push
add
adc
pop
mov
cmp
mov
xacquire
push
jne
movs
xchg
adc
mov
(bad)
rol
int
sahf
sbb
adc
mov
add
cli
or
fdivr
mov
adc
pop
out
push
fnstcw
imul
ins
adc
sahf
sub
jno
pop
push
or
int3
into
xchg
idiv
cmp
lods
jae
add
cdq
pop
and
test
cmp
or
dec
jle
push
ja
js
cmp
scas
ret
(bad)
into
data16
mov
(bad)
jmp
aaa
cs
inc
adc
push
push
fcmovbe
mov
jmp
les
sbb
jmp
jmp
in
mov
push
adc
xor
stc
sar
inc
jnp
into
sahf
xchg
mov
xchg
aas
sbb
ja
xchg
jae
cld
aas
cmp
es
sbb
add
jp
adc
xor
(bad)
sahf
adc
les
xchg
fsub
sbb
test
adc
mov
jg
test
scas
inc
xchg
aad
ja
mov
add
mov
retf
cld
cmp
retf
out
sar
mov
ret
scas
outs
adc
mov
adc
clc
inc
mov
xchg
adc
mov
xchg
ins
daa
xor
jecxz
mov
js
fild
xchg
loope
jmp
mov
fidivr
inc
fisub
jge
es
fist
push
fsubr
lock
in
ret
push
dec
(bad)
scas
adc
mov
fs
cmp
dec
repz
inc
or
ds
sub
enter
or
in
lea
out
and
test
dec
sbb
push
lds
push
rcl
in
mov
cmp
stos
mov
cmp
push
inc
pop
sbb
outs
imul
out
push
push
inc
jne
push
ins
(bad)
jnp
push
out
sbb
pop
xchg
movs
fimul
(bad)
arpl
int3
or
pop
xchg
jl
jle
ss
movs
jo
enter
mov
push
push
test
xor
in
rcr
push
mov
and
push
pop
jns
clc
pop
and
and
repnz
sbb
pushf
div
sub
inc
inc
or
cmp
sbb
add
jo
js
jb
jmp
nop
push
movs
in
ror
push
fdiv
adc
loopne
shl
mov
in
test
sti
test
mov
loop
cmp
adc
mov
adc
jbe
jns
rol
repnz
inc
int3
sub
xchg
(bad)
push
loopne
lea
movs
add
arpl
pop
shr
aaa
ins
test
and
lods
pop
retf
cs
je
jmp
inc
push
adc
mov
cwde
mov
push
int
or
imul
pop
mov
dec
mov
mov
iret
shl
ja
dec
sub
inc
mov
xchg
enter
daa
cs
aad
push
test
sbb
pop
daa
imul
mov
aad
pop
inc
pop
jp
not
call
cmps
stos
fstp
mov
add
test
pop
or
xchg
ins
sbb
mov
mov
mov
xor
(bad)
and
sub
jns
dec
jecxz
imul
dec
ds
sbb
mov
xor
ret
imul
addr16
pop
inc
pop
hlt
aad
in
mov
and
cmp
dec
and
push
add
or
mov
rol
mov
xlat
add
add
xor
sbb
ret
gs
jl
pusha
std
loopne
mov
adc
test
pushf
(bad)
sbb
add
push
out
and
adc
in
push
xor
fwait
ret
jns
push
fsub
and
xor
xchg
xchg
jge
repz
leave
jae
dec
inc
xor
push
add
loop
out
ret
inc
aas
cmc
inc
cmp
ret
mov
mov
jmp
popa
push
sub
nop
(bad)
pushw
mov
inc
clc
jp
data16
lods
shl
jl
pop
dec
movs
lods
loop
ror
mov
mov
dec
retf
inc
ins
fld
push
jmp
mov
push
mov
pop
movs
popf
mov
mov
and
jmp
cmp
outs
inc
outs
dec
add
lods
fwait
sbb
aaa
add
adc
(bad)
cmp
push
cs
pop
push
mov
and
int
xchg
dec
mov
jb
pop
es
add
jo
xor
sbb
mov
jbe
xor
sbb
lds
push
icebp
add
lds
push
mov
scas
adc
bound
in
dec
imul
pop
jnp
aad
cmp
arpl
pushf
xchg
pop
or
push
jmp
stos
out
out
add
mov
xchg
aad
mov
push
out
loope
xor
mov
dec
lock
pop
dec
rol
lods
imul
inc
mov
inc
mov
fldenv
adc
adc
aad
in
jnp
cmp
data16
cmps
or
sbb
(bad)
cld
leave
add
push
int
mov
sti
xchg
cmp
out
adc
sub
adc
inc
mov
fld
ins
test
cs
fmul
jp
jge
mov
ds
sub
or
jg
mov
pop
gs
xor
adc
xor
pusha
jae
adc
push
loope
ss
std
xor
loope
dec
sub
movs
clc
rcr
cli
or
call
es
jbe
pop
sbb
movs
shl
int
mov
or
mov
fdiv
jmp
fist
jmp
xlat
dec
xor
lahf
lea
loopne
js
out
jmp
mov
jl
pop
lea
push
mov
gs
stc
mov
adc
mov
setbe
jo
jge
jbe
sar
lea
sub
mov
leave
(bad)
and
inc
xchg
xor
add
(bad)
mov
fwait
in
inc
or
sbb
psrlq
mov
mov
sub
mov
push
push
cmp
dec
mov
fdivr
mov
pop
mov
leave
push
push
jmp
sahf
stos
lahf
jmp
dec
lods
in
fwait
push
inc
pusha
or
retf
and
loop
jns
jne
test
fimul
imul
lds
loop
push
mov
pop
ret
jge
pop
gs
jecxz
mov
mov
mov
outs
aas
mov
idiv
test
lods
popf
pop
add
jmp
std
cmps
dec
rol
and
sub
(bad)
cmp
dec
rcr
xchg
pusha
mov
(bad)
ja
cmp
and
adc
and
push
mov
adc
mov
add
int3
dec
aaa
jecxz
xchg
add
shl
sbb
in
js
mov
in
movs
add
ret
pop
mov
lods
jp
or
arpl
pop
xor
inc
sti
test
rcl
mov
(bad)
hlt
call
xor
data16
cmc
pop
out
mov
push
je
inc
cmc
movs
mov
mov
imul
xchg
shl
mov
mov
jmp
fisub
fsubr
fld
retf
sbb
bound
xchg
jl
xlat
pusha
enter
into
loope
cdq
mov
idiv
jno
lea
sbb
sar
in
mov
repnz
mov
sbb
(bad)
test
jge
xor
das
mov
sub
pop
lds
das
fnsave
sbb
jecxz
int3
sub
out
dec
add
jle
jnp
and
fs
setnp
push
cs
scas
ds
fidiv
jmp
mov
cld
mov
or
ror
inc
sub
inc
sbb
cmp
jp
mov
in
mov
adc
cmps
jg
loope
in
mov
pop
pop
(bad)
or
and
mov
loop
pop
add
fs
(bad)
test
xor
cmp
push
mov
inc
or
mov
inc
sub
clc
je
retf
ficom
ror
jno
sub
(bad)
dec
cli
icebp
xchg
lds
popa
and
iret
pop
xchg
(bad)
int3
test
pop
arpl
pusha
lods
fild
add
pop
int3
sbb
leave
inc
les
mov
mov
loop
cmp
cmp
dec
test
aas
mov
push
and
out
sub
sub
loope
mov
dec
ins
pusha
loop
shr
test
dec
pop
add
mov
push
inc
adc
pop
inc
jnp
inc
repz
and
jg
sqrtps
in
dec
ret
inc
ja
push
add
inc
mov
rol
gs
jge
ja
fadd
call
dec
add
pop
stos
cmp
dec
movs
or
xchg
loopne
and
mov
hlt
retf
scas
dec
pop
(bad)
cmp
iret
fist
call
xor
out
dec
inc
jge
in
mov
mov
push
aas
out
inc
mov
sbb
lods
sti
fwait
adc
cld
mov
out
adc
outs
mov
dec
ins
pushf
rcr
mov
xor
scas
(bad)
xlat
adc
ja
inc
nop
es
xchg
out
pop
cdq
(bad)
js
sbb
sub
mov
ficom
data16
adc
pop
dec
push
inc
ficomp
in
xor
in
and
gs
stos
fst
icebp
push
sub
test
popa
nop
cmp
enter
adc
add
sub
mov
in
pusha
into
addr16
mov
rcl
mov
xchg
cmps
jg
push
push
hlt
dec
and
cmps
int
xor
dec
inc
movs
inc
sub
xchg
push
cdq
(bad)
cld
or
sub
jecxz
bound
sbb
xor
fidiv
stos
push
mov
xchg
cs
repnz
movs
pop
and
arpl
aam
jmp
call
and
add
pop
mov
jno
pop
fisubr
and
mov
icebp
sbb
pop
sbb
call
mov
fwait
push
dec
mov
in
(bad)
sahf
cld
fdivr
and
sub
mov
ins
in
dec
inc
xchg
xchg
retf
addr16
out
mov
add
or
inc
test
js
out
inc
mov
pusha
ret
mov
push
sbb
pop
jg
retf
jmp
sahf
in
int
(bad)
push
mov
inc
outs
inc
xor
ret
mov
mov
push
cmp
adc
aam
jp
lock
adc
scas
pop
sbb
pop
jge
nop
stos
(bad)
sbb
mov
sbb
cmp
aam
pop
call
push
je
je
push
and
test
xor
ss
dec
fsubr
adc
jge
xor
inc
bound
push
inc
sub
and
out
call
popa
inc
pop
push
shr
fnsave
lods
jnp
push
mov
push
cmp
xlat
aam
adc
in
dec
cmp
add
shl
mov
jecxz
mov
repz
stc
cmc
cmps
push
cmp
popa
fstp
lods
add
mov
pop
mov
sar
or
cmps
fild
out
adc
retf
push
push
mov
(bad)
outs
cs
imul
sar
dec
stos
(bad)
shr
adc
lock
or
sub
call
lods
retf
out
ds
add
adc
dec
out
dec
das
out
sub
test
(bad)
cwde
scas
jb
push
test
cli
jo
popf
mov
push
sbb
pop
xchg
mov
or
mov
cwde
ficom
jo
mov
fwait
(bad)
adc
xlat
in
sti
mov
jns
cmp
aaa
in
push
add
or
inc
xchg
aaa
cmp
xor
sbb
not
stos
inc
inc
stos
adc
mov
jge
and
jmp
or
mov
mov
aam
inc
ror
push
pop
daa
in
imul
fs
sbb
nop
mov
dec
hlt
out
mov
bnd
mov
xor
dec
or
add
lods
jecxz
xor
mov
and
loope
jno
std
jae
(bad)
lock
ja
mov
push
test
(bad)
xor
mov
mov
push
mov
icebp
xor
aas
(bad)
(bad)
and
and
pop
rol
mov
loope
loope
mov
pop
push
fidivr
in
xchg
in
push
idiv
cdq
xchg
rcr
jo
xchg
je
pop
sub
popf
repz
cmps
mov
pop
inc
das
xchg
stos
fimul
scas
pop
(bad)
jbe
inc
adc
pop
xor
imul
sbb
xchg
or
push
inc
and
imul
imul
pop
adc
mov
xor
push
loope
ds
cdq
cmp
dec
adc
adc
int3
xor
test
pusha
call
imul
push
dec
mov
xchg
xor
mov
retf
or
das
call
sub
push
aad
mov
rcr
add
sbb
int3
(bad)
mov
mov
popa
stc
cmc
add
cmp
jno
or
out
push
fwait
js
adc
fsubr
mov
inc
std
sti
ss
nop
cli
psrlw
(bad)
out
paddw
scas
add
add
mov
imul
fbstp
ins
xchg
jne
adc
shr
sbb
dec
stc
ret
stos
xor
aas
arpl
jg
call
sub
cmp
and
xchg
sbb
addr16
cmp
jnp
in
pop
add
lods
or
or
repz
retf
out
out
sub
mov
dec
bound
jmp
shl
cmp
or
and
mov
(bad)
mov
pop
add
push
dec
cpuid
popf
pop
stc
push
popa
push
mov
adc
mov
add
fnstenv
xor
loope
add
add
fdivr
not
sbb
jle
xchg
daa
or
mov
jae
dec
adc
(bad)
push
push
cmp
pusha
push
add
(bad)
push
bswap
data16
mov
test
stc
out
fimul
sub
jge
inc
cmp
or
sbb
xor
inc
jae
and
inc
call
rcr
sub
in
sub
sbb
xchg
cmp
outs
mov
sar
cdq
lods
sub
test
jae
les
mov
xchg
(bad)
mov
rcr
lahf
xor
add
cmps
mov
popa
jecxz
dec
popf
stos
daa
mov
add
or
lds
add
imul
push
(bad)
sub
gs
punpckldq
dec
aam
mov
imul
fldenv
fist
sar
pop
or
pop
jbe
cs
cmps
lds
sbb
jbe
push
pusha
xchg
pop
pop
cmp
int
xchg
xchg
dec
mov
push
in
hlt
mov
pop
add
ja
pop
mov
dec
xor
sbb
aaa
out
repnz
call
test
out
xchg
adc
or
paddsb
pause
xor
xchg
adc
cmc
pop
aam
add
inc
popf
in
and
(bad)
adc
jo
aam
push
adc
scas
cmp
rcl
mov
mov
das
dec
mov
mov
mov
(bad)
push
jo
in
jno
daa
sbb
cmp
sbb
dec
sbb
scas
push
add
dec
into
or
mov
mov
push
aaa
jns
(bad)
sbb
in
popa
call
int3
cmps
sbb
mov
stos
aad
test
mov
shr
pop
mov
dec
fst
and
into
fsub
sti
icebp
xor
rol
jae
jbe
daa
xlat
outs
and
add
mov
out
sbb
pop
ret
xchg
sbb
fs
push
add
or
mov
sub
add
out
and
xchg
inc
clc
aad
mov
std
outs
into
sbb
fnsave
adc
xor
(bad)
test
in
aad
cmp
jo
sbb
jnp
ss
sahf
mov
rcr
xor
pusha
icebp
cdq
sbb
lds
push
adc
in
mov
jns
inc
aas
aam
cmp
or
cmp
dec
test
fld
inc
mov
cmc
sbb
push
mov
sets
in
lea
and
call
cld
(bad)
pop
pop
xchg
nop
addr16
(bad)
out
pushf
mov
mov
ins
shl
(bad)
iret
and
ret
adc
mov
test
(bad)
dec
in
pop
fild
add
movs
pop
sar
inc
inc
fidivr
inc
fcomip
mov
lods
(bad)
cmp
out
push
mov
inc
pop
pop
push
fcmovu
sub
std
inc
push
add
jmp
loop
fisubr
gs
shl
cs
pop
add
pop
or
mov
retf
xor
pop
adc
shl
xchg
xchg
xor
mov
add
shl
jns
push
push
(bad)
xor
sbb
test
inc
loope
add
int
stc
jg
mov
pop
ds
aad
xor
dec
adc
mov
or
pusha
mov
inc
sub
outs
mov
dec
push
xchg
xor
adc
push
not
pop
arpl
std
push
dec
mov
int
outs
push
inc
and
ins
lods
sbb
ins
inc
ss
or
mov
mov
add
(bad)
sub
inc
and
add
scas
inc
push
xchg
sti
in
push
sub
xor
push
xor
shl
inc
sub
push
(bad)
mov
pop
push
pop
xchg
enter
(bad)
add
mov
dec
dec
outs
(bad)
out
inc
add
out
int
pop
push
jo
sub
lea
lods
sbb
imul
mov
mov
cli
loop
ins
xlat
aaa
pusha
lods
test
inc
js
lods
imul
inc
aam
xlat
mov
sub
add
jg
sbb
aas
imul
xchg
gs
mov
sbb
push
push
das
xchg
fsub
gs
ja
pop
lahf
xchg
stos
loope
retf
es
pop
pushf
xor
dec
push
mov
jge
jecxz
push
(bad)
leave
add
mov
bound
ror
loopne
sbb
(bad)
sbb
adc
cli
mov
add
in
nop
inc
inc
mov
dec
jmp
sbb
ret
and
xor
push
xchg
mov
inc
fisub
repz
jmp
cs
clc
jo
inc
xchg
push
pop
int3
xor
adc
out
cmp
cmp
lods
js
or
mov
gs
sbb
adc
mov
sub
(bad)
mov
pushf
cmps
adc
shl
or
aad
xor
inc
and
inc
shl
lea
out
stos
mov
sbb
or
test
xchg
jle
fistp
outs
clc
cmp
sub
mov
push
stos
cmp
sub
dec
bound
(bad)
jmp
cmp
pushf
inc
push
pop
jno
js
retf
daa
cmp
or
lods
sti
add
mov
jae
jge
imul
fs
into
jle
sahf
and
sbb
mov
enter
in
cmps
jne
dec
adc
in
jb
inc
dec
test
jmp
jle
xchg
sbb
jb
inc
mov
and
in
rcr
shr
gs
mov
pushf
or
scas
mov
adc
cmp
pop
retf
(bad)
call
lods
js
retf
loop
sbb
jmp
mov
scas
xor
sub
pop
mov
cmp
mov
scas
hlt
mov
or
or
mov
add
lds
add
aas
push
call
push
leave
gs
scas
(bad)
into
inc
push
xor
sti
lds
mov
xlat
shl
jbe
or
sbb
loope
int3
fnsave
and
fsubr
inc
mov
ret
sub
fisub
sub
adc
cmps
clc
fwait
hlt
cmp
lds
fwait
mov
int
leave
cmp
sbb
scas
sahf
sti
retf
push
das
and
scas
and
mov
mov
mov
outs
sbb
rol
(bad)
cmp
fisub
cs
jo
test
jp
loope
push
rcl
add
aas
dec
ss
push
mov
and
xchg
adc
xor
sti
inc
ret
mov
and
or
mov
sbb
xchg
adc
out
stos
push
cmp
neg
stc
jmp
je
jae
sub
in
fwait
xor
adc
xor
mov
retf
add
mov
repnz
fst
jae
mov
arpl
mov
inc
cmc
fcomp
mov
adc
and
push
fwait
fs
clc
mov
push
jg
(bad)
push
pop
mov
mov
je
push
cmps
in
sub
(bad)
pop
aas
dec
stos
jl
push
mov
call
jnp
stos
cdq
pop
push
sub
ret
adc
in
out
stos
fnsave
pop
sti
jno
jmp
jae
jp
jmp
stc
cmps
pop
inc
dec
cwde
pop
pop
pop
cmp
xor
xor
xor
ins
mov
pop
or
dec
fucom
retf
in
xor
(bad)
mov
jo
mov
mov
imul
(bad)
(bad)
sub
xor
dec
icebp
mov
mov
mov
scas
(bad)
outs
fnstcw
push
mov
imul
pop
inc
shl
out
dec
add
and
pop
movlps
push
(bad)
fs
push
cmp
xchg
call
sbb
push
(bad)
mov
mov
out
jbe
adc
into
jg
lea
cmps
xchg
rol
(bad)
dec
addr16
push
test
jl
dec
loopne
(bad)
push
cmp
jnp
xor
xchg
xlat
xchg
mov
neg
das
arpl
int3
or
dec
popa
(bad)
pushf
(bad)
in
(bad)
mov
push
jl
bound
es
ret
mov
aad
test
cmp
inc
or
cmp
push
aas
adc
jmp
and
mov
enter
(bad)
and
aaa
hlt
mov
test
mov
xor
sbb
push
push
jns
(bad)
mov
mov
or
shl
xor
ss
rcr
adc
add
clc
mov
fs
aad
repz
add
push
sub
ficom
xor
outs
mov
mov
cmovnp
imul
jae
push
xchg
and
and
jmp
jbe
mov
mov
push
retf
les
aas
sbb
add
daa
jne
cmp
rcl
mov
int3
ins
sub
sub
dec
aam
aaa
ins
mov
xchg
shr
adc
and
cmp
imul
pop
xchg
call
mov
std
xor
pop
mov
or
stos
sbb
movs
mov
sub
xchg
and
mov
nop
push
test
push
dec
xor
push
jmp
push
cmp
inc
sbb
inc
ss
sub
test
lods
jp
call
arpl
adc
sub
fst
lds
push
mov
or
sub
inc
dec
ins
fiadd
or
add
stos
add
(bad)
or
iret
push
inc
sub
mov
ror
popf
add
pop
xor
call
aad
cmc
add
dec
in
mov
xchg
push
dec
jo
(bad)
cmp
popa
push
jmp
jae
xor
push
xchg
pushf
mov
arpl
mov
jbe
fwait
add
adc
popa
aad
int3
cmc
movs
loope
jno
std
dec
in
pushf
sti
int
pop
sbb
ret
out
pop
push
jae
xchg
xchg
icebp
mov
cwde
repnz
loope
jecxz
xchg
stos
xchg
gs
and
xchg
imul
out
xor
or
loopne
xchg
add
and
push
add
ins
std
add
pushf
fcmovb
cmp
adc
test
fdivr
dec
test
push
jae
xchg
xchg
sub
mov
mov
es
movq
mov
mov
inc
cmp
ret
pop
or
cli
cmp
(bad)
sti
inc
add
cmp
retf
xchg
cmps
mov
repz
lods
xor
out
mov
pop
xor
xchg
retf
icebp
add
fnsave
lock
in
push
jne
pushf
pop
in
out
not
aam
mov
mov
bound
add
retf
rcr
and
dec
mov
jb
push
mov
std
sbb
jp
cmp
inc
sub
xor
mov
shl
(bad)
int
dec
(bad)
add
push
int
loop
xchg
mov
bound
ror
(bad)
adc
movs
addr16
fucom
xor
pop
cmp
jmp
retf
retf
pop
add
dec
fdiv
lods
out
sub
sti
pop
ret
aas
dec
adc
mov
jno
stos
fstp
mov
ins
pop
jno
sub
icebp
add
(bad)
imul
add
sub
add
leave
jb
mov
out
add
(bad)
(bad)
cmp
jae
fwait
aas
jl
out
scas
movs
cmp
ret
ss
push
call
inc
(bad)
repnz
ss
add
addr16
pop
call
jl
push
push
jbe
push
cwde
adc
cdq
aas
sbb
in
xchg
push
mov
push
rcl
adc
dec
mov
out
frstor
fimul
data16
scas
push
push
mov
std
fsub
push
xchg
jmp
push
mov
sahf
push
pop
adc
inc
aaa
xor
pop
mov
push
ret
shl
adc
push
pop
xchg
outs
sub
out
lds
mov
push
aad
adc
test
shr
lock
retf
cmp
sub
outs
call
mov
mov
scas
and
mov
aad
and
repnz
mov
jle
rcr
mov
mov
movs
add
cmp
cmps
lea
test
nop
xor
call
add
bound
cmp
iret
enter
aas
jge
sub
jecxz
push
push
outs
xchg
pop
fs
and
pop
fidiv
add
ja
mov
psubsw
xlat
mov
or
cmc
std
mov
and
push
jb
and
mov
and
push
mov
pop
bnd
leave
xchg
into
cmc
xchg
cmp
pop
je
mov
shr
jo
(bad)
mov
(bad)
cmp
mov
inc
xchg
ret
xor
or
dec
inc
or
(bad)
clc
cmp
out
and
out
add
cmp
mov
jno
mov
adc
shr
retf
or
gs
xchg
sbb
push
xor
fisttp
mov
cmps
xlat
or
pop
mov
cdq
mov
popf
cmp
adc
pop
add
std
test
mov
and
inc
popa
jnp
cli
mov
mov
fwait
xor
lods
sahf
aaa
mov
ret
into
cmp
sahf
sbb
jne
xchg
mov
inc
fadd
add
and
into
outs
jg
mov
retf
aam
imul
push
loopne
lods
jg
inc
mov
and
pop
pop
sub
je
clc
popf
jp
xchg
ficomp
out
movs
ficom
out
adc
mov
gs
pop
lds
out
mov
(bad)
sbb
add
test
pop
sub
ss
mov
sar
pop
pop
js
mov
mov
inc
xchg
ror
push
xor
inc
jno
fnstcw
sub
xchg
inc
mov
test
cmp
iret
jmp
pop
xor
and
je
(bad)
retf
push
dec
xor
or
pop
mov
push
lods
jb
jl
xor
sub
loope
jecxz
sbb
cs
jns
inc
xor
mov
fwait
inc
sbb
adc
dec
jge
mov
sbb
jne
pop
sahf
inc
and
movs
pushf
push
in
inc
mov
les
enter
test
scas
in
adc
dec
xor
add
ins
lahf
(bad)
cld
lahf
mov
dec
lock
out
xchg
push
xchg
xor
push
jge
sahf
adc
sbb
jbe
(bad)
cwde
sbb
adc
pop
mov
(bad)
and
xchg
call
cmp
das
dec
and
sti
cmp
pop
push
mov
fld
jne
jo
mov
pusha
dec
cmp
fld
xor
cmp
pushf
mov
xor
xchg
push
stc
es
pushf
sbb
dec
sub
pop
or
pushf
mov
ret
add
jo
add
pop
arpl
rol
inc
jnp
cld
sbb
outs
sub
and
icebp
sahf
push
sub
jge
fcmovnu
mov
shl
add
sbb
in
sbb
pop
xor
fstp
mov
jne
icebp
ja
rcl
cli
adc
(bad)
sti
outs
clc
or
cdq
cmp
fadd
aam
dec
data16
stos
call
cmp
es
push
shl
ds
sbb
imul
pop
(bad)
enter
fcomp
sbb
fst
retf
fcmovne
jle
cmc
test
mov
stc
bound
cs
xor
out
jmp
pusha
call
pop
fsub
sub
out
gs
stos
in
popf
mov
fidivr
sar
je
leave
ins
push
sbb
inc
in
test
outs
retf
cmps
ret
add
pop
pop
(bad)
xlat
sub
mov
dec
imul
fwait
popf
pop
stos
dec
xchg
and
inc
cmp
mov
repnz
and
test
or
arpl
jne
add
and
repz
inc
xor
lea
push
dec
jbe
xchg
mov
out
sub
mov
(bad)
popf
mov
cwde
movs
loopne
ds
jno
xchg
sbb
test
fsubr
xchg
mov
sub
or
xchg
fild
loop
mov
jnp
fnsave
out
mov
addr16
cmps
shr
add
and
jno
test
call
dec
jno
sub
mov
pop
and
mov
cmp
cmc
push
ins
cs
stos
rcr
rol
push
adc
pop
mov
dec
add
test
ret
(bad)
fisubr
add
test
mov
dec
stos
ret
icebp
cmps
push
je
lods
std
cmps
and
(bad)
int3
xor
enter
mov
lahf
or
mov
rcl
add
sub
outs
adc
(bad)
push
ror
out
leave
mov
or
mov
cli
fistp
(bad)
sbb
sbb
es
scas
and
imul
aam
lahf
or
sbb
xchg
mov
cmp
mov
mov
mov
and
out
jecxz
(bad)
leave
popa
test
or
and
jne
arpl
mov
or
stc
mov
add
fwait
(bad)
push
xchg
dec
xor
shl
cmp
xchg
aaa
xor
(bad)
xor
mov
pop
les
fdivr
push
mov
sbb
cmc
mov
xchg
out
movs
cmp
scas
(bad)
fcom
jnp
shr
mul
jp
push
mov
je
test
sub
mov
xchg
sbb
mov
add
in
das
or
pop
xor
out
je
paddw
sbb
mov
wrmsr
and
enter
in
push
and
fisub
popf
jmp
call
add
popf
(bad)
dec
sub
cmp
sbb
push
sbb
aaa
scas
cmp
ja
adc
cmp
sbb
stos
call
aad
fcomi
mov
std
cmc
gs
jb
out
pop
mov
xchg
pop
(bad)
xor
outs
cmp
scas
ds
(bad)
push
jbe
adc
mov
js
retf
scas
in
add
lods
xor
add
mov
inc
mul
cmc
icebp
je
ins
push
adc
adc
and
xlat
movs
inc
cmp
pop
add
jnp
sti
pushf
jp
enter
cmp
jne
loop
pop
mov
stos
mov
rcl
xchg
inc
and
cdq
cmp
repnz
jne
push
push
outs
mov
retf
cmp
jo
cmps
stos
leave
or
xor
retf
xor
jp
out
mov
jo
sub
add
xchg
imul
imul
movs
jp
out
jl
xchg
fld
inc
jmp
push
movs
ss
fsub
mov
cli
or
add
cld
(bad)
fadd
jo
icebp
pop
stos
pop
(bad)
cwde
lds
out
jecxz
lock
and
std
fs
mov
(bad)
xor
pop
retf
bound
adc
repnz
xchg
int3
pop
lods
or
ret
fimul
fmul
adc
pop
jae
popa
mov
hlt
or
icebp
out
push
inc
cmps
and
sahf
aam
inc
cdq
cmp
push
push
adc
sahf
cs
lahf
mul
sbb
jecxz
add
add
outs
and
js
adc
sbb
shl
jno
lods
enter
sbb
sahf
push
mov
popf
sbb
pop
pop
out
sbb
and
and
sub
loopne
push
xchg
inc
sub
mov
fiadd
ja
mov
cdq
xor
jb
test
repz
jno
or
mov
push
add
cmp
out
sbb
nop
into
jmp
gs
push
shl
ins
test
fnsave
push
mov
pusha
(bad)
std
push
inc
fnstcw
adc
data16
popa
std
ds
xchg
sub
stc
sub
inc
repnz
lds
out
addr16
inc
xor
and
jno
xchg
(bad)
popf
and
enter
mov
mov
sbb
xchg
mov
mov
mov
sbb
ins
pop
xchg
dec
je
ins
pop
(bad)
stc
push
popf
and
or
add
or
retf
mov
mov
lock
imul
ret
in
into
inc
sar
popa
pop
outs
ret
push
into
lods
jmp
call
jmp
cmp
xchg
sbb
or
cwde
and
popa
mov
out
jmp
bsr
or
scas
or
sbb
push
pop
jns
jge
xlat
shr
jp
ins
mov
and
out
(bad)
mov
pop
adc
mov
ds
xchg
and
(bad)
fld
pop
(bad)
addr16
pop
test
fild
jp
add
pminub
repnz
mov
sub
jecxz
mov
in
mov
push
daa
sahf
fmulp
sar
ds
xlat
xchg
shl
inc
aam
loop
mov
and
add
pop
jg
push
shr
and
and
cli
movs
dec
icebp
fnstcw
or
cmp
xchg
cmp
adc
pop
jno
mov
sub
ret
cmps
nop
and
rol
jns
sub
scas
push
add
jge
pusha
push
(bad)
loopne
imul
rcl
ret
xchg
adc
xor
pop
out
fisubr
outs
and
cli
js
or
sbb
sbb
ret
dec
dec
data16
test
jmp
adc
cmp
and
add
xor
js
loop
cmc
lock
xor
into
pop
xor
push
sbb
cli
cdq
jl
mov
sbb
rcl
jbe
pop
or
icebp
pop
adc
(bad)
iret
adc
aaa
sub
test
push
xchg
jge
int3
add
(bad)
jb
dec
xchg
add
dec
fsubrp
pop
pop
mov
xchg
xor
ds
sub
or
fidivr
mov
and
inc
sub
ret
inc
mov
sbb
pop
ins
pusha
fistp
jmp
push
lahf
(bad)
jle
jge
vmptrld
pop
or
ins
mov
imul
data16
arpl
mov
pop
int3
inc
push
fs
cmp
and
sbb
lea
loop
leave
push
jae
sbb
adc
xor
adc
xchg
push
and
ror
cld
push
lods
jge
adc
cld
mov
(bad)
(bad)
dec
sbb
jne
aas
fbld
addr16
mov
sbb
pop
stos
aam
js
push
int3
xor
in
shl
punpckhdq
inc
inc
shl
in
ja
jp
addr16
jecxz
sbb
and
out
inc
jecxz
test
xchg
inc
pop
mov
cmps
(bad)
out
repz
xchg
push
addr16
and
cmp
rol
loop
mov
xchg
mov
mov
cmp
xchg
ins
add
ja
pop
sub
xchg
adc
jno
push
push
mov
ins
gs
add
out
je
push
rcl
ja
xor
mov
xor
imul
dec
push
mov
sbb
pop
iret
sahf
adc
dec
mov
push
jg
dec
pop
xor
mov
xor
leave
rcl
or
or
mov
mov
lods
mov
mov
jg
xor
push
div
and
fadd
dec
lods
xor
inc
sub
pop
(bad)
out
aad
lods
xchg
push
and
and
cmp
mov
test
(bad)
(bad)
xchg
mov
adc
jg
jmp
mov
lock
jmp
shl
and
dec
outs
push
push
int
push
and
adc
rcr
shr
(bad)
mov
std
rcr
cmc
mov
fs
je
test
jmp
fdiv
push
popf
fadd
mov
mov
jmp
(bad)
sub
mov
jae
dec
lods
and
sbb
in
test
lods
hlt
add
dec
sbb
sub
xchg
add
bound
lock
mov
gs
js
dec
or
int3
or
and
rcr
push
das
fisttp
push
xor
repz
push
sub
add
ror
mov
fs
push
leave
mov
mov
rol
mov
xor
pop
add
inc
mov
mov
scas
std
nop
les
sub
aam
pop
mov
in
retf
inc
fstp
rcl
gs
stc
test
leave
or
cmp
mov
xchg
std
and
or
test
sbb
sub
rcl
cmp
xchg
fsubr
in
jns
push
fndisi(8087
cmp
sbb
test
mov
push
or
or
ds
inc
and
cmp
lea
ins
pop
(bad)
icebp
mov
sbb
loopne
add
aam
inc
jb
test
or
xor
jmp
pop
in
sti
test
loop
(bad)
rcl
mov
jmp
jbe
mov
(bad)
inc
ins
shr
mov
xor
xor
cli
shr
int
inc
xor
mov
icebp
pop
push
rcr
xor
repz
mov
and
pop
scas
inc
lods
call
mov
adc
jle
jnp
nop
(bad)
enter
or
fnstsw
or
mov
popa
jmp
je
sbb
(bad)
fimul
fimul
add
sub
jg
cmp
push
adc
xor
adc
retf
mul
fild
(bad)
cli
not
fsub
mov
cmps
inc
(bad)
jmp
jl
xor
scas
pusha
(bad)
mov
ins
cmp
mov
jns
addr16
jbe
ds
rcl
arpl
xor
mov
mov
cmp
jb
xlat
outs
adc
lea
bound
pushf
nop
dec
mov
jle
sub
jge
xor
movs
les
call
inc
fwait
xor
adc
(bad)
scas
pop
pop
(bad)
(bad)
stos
or
push
pop
imul
rcr
outs
xor
mov
pop
(bad)
mov
cli
mov
add
adc
in
test
inc
jno
mov
lock
leave
pop
iret
add
hlt
int3
js
jbe
and
push
adc
inc
jge
in
adc
adc
das
cmp
jae
loop
fdiv
push
loope
push
fisttp
mov
ret
scas
(bad)
inc
lea
hlt
aam
test
loope
imul
add
adc
mov
mov
stos
mov
push
mov
outs
cld
adc
pusha
jb
mov
js
rol
retf
out
push
sbb
dec
jae
push
shr
push
mov
sbb
jecxz
dec
das
leave
cmp
lds
inc
test
sub
out
scas
inc
mov
cwde
xchg
fdivr
dec
(bad)
sub
pushf
dec
inc
jns
and
icebp
dec
pop
fyl2xp1
pop
sub
xor
lock
(bad)
sahf
sub
pop
movs
or
loope
sbb
call
push
(bad)
cld
push
or
addr16
mov
xchg
int
fld1
sti
push
mov
jmp
pop
pop
scas
gs
call
add
push
loop
inc
data16
mov
stc
jo
jo
imul
cmp
std
fidivr
ja
repnz
inc
inc
mov
imul
mov
js
test
test
add
inc
or
add
mov
sub
mov
sahf
or
jo
sbb
cmc
dec
or
cmps
cwde
es
loope
pushf
lahf
gs
cdq
add
dec
std
mov
mov
push
lock
aad
mov
ret
sbb
sub
mov
mov
movs
hlt
cld
mov
pop
pop
push
pushf
fcom
lods
and
shl
cmps
mov
imul
cmp
outs
mov
imul
jo
into
out
or
retf
sub
fimul
aas
lods
mov
out
sti
push
fiadd
cs
rcl
sub
fmul
out
fcomi
mov
movs
out
bound
sub
fst
dec
(bad)
sbb
retf
repnz
pushf
xlat
jg
cmc
(bad)
loop
jnp
imul
cmp
cmp
or
pop
fmul
pop
es
sub
or
push
icebp
push
push
ret
xor
or
cmps
xlat
test
pop
adc
dec
xor
repnz
inc
cdq
scas
sbb
or
(bad)
add
bound
stos
rcr
in
jmp
push
retf
add
mov
jmp
popf
sbb
xor
(bad)
pop
mov
mov
or
pop
adc
(bad)
in
rol
punpcklwd
add
test
adc
js
xchg
ds
jns
call
mov
in
adc
mov
adc
daa
lods
pop
sti
pop
inc
test
fld
and
inc
inc
mov
inc
lock
in
int
push
jle
add
out
por
adc
lock
(bad)
xlat
(bad)
hlt
xchg
jno
ds
into
gs
mov
sub
into
fsubrp
inc
pusha
cdq
pop
pop
or
inc
pop
pop
push
in
adc
inc
arpl
dec
or
sbb
(bad)
mov
xor
scas
fs
push
fadd
daa
mov
jnp
mov
xchg
shl
inc
xchg
mov
mov
imul
adc
add
cmp
sar
in
jecxz
xchg
test
psubusw
push
mov
sbb
mov
out
or
xor
jge
data16
inc
jo
int
jne
sti
fsubr
icebp
inc
in
stc
(bad)
jg
out
cli
hlt
fsubr
aad
test
cwde
lea
xor
inc
mov
and
sti
sub
inc
jnp
aas
enter
cmp
sbb
cs
sar
scas
ret
sti
ret
fidivr
cwde
out
gs
arpl
shl
mov
shl
int
cmc
div
into
and
inc
lea
mov
ja
pop
xor
dec
addr16
dec
jmp
sub
gs
add
push
cld
mov
pushf
mov
push
scas
or
and
mov
aaa
jge
gs
adc
sbb
loopne
pusha
or
dec
adc
das
inc
and
call
sbb
cs
dec
mov
jge
aam
fcom
ds
repnz
js
stos
add
xchg
mov
call
sub
push
add
sbb
jmp
ret
daa
(bad)
cmps
loop
sub
mov
add
loopne
loope
pop
xor
sbb
nop
out
stc
outs
jmp
clc
outs
(bad)
cld
and
das
adc
xchg
mov
adc
dec
pop
mov
xor
xor
lods
stos
pop
retf
test
popa
or
iret
and
test
sub
push
mov
ins
mov
xchg
mov
cmp
dec
(bad)
shr
dec
movs
sub
push
loop
clc
jle
or
cmps
dec
sub
lods
(bad)
popa
push
scas
ror
not
out
push
inc
call
fsub
fnsave
mov
loopne
rcl
addr16
aas
pushf
into
test
ds
mov
popf
outs
sti
or
(bad)
mov
mov
ret
ja
mov
or
dec
mov
jb
push
pop
outs
xor
loope
or
jecxz
cmp
inc
ins
add
xlat
std
clc
test
cmp
mov
xor
aas
ja
rcl
xor
mov
test
mov
cli
sbb
es
push
imul
arpl
sub
or
mov
(bad)
idiv
adc
scas
xchg
jns
or
mov
leave
mov
inc
adc
mov
or
sub
sbb
iret
xor
push
jp
rcr
fistp
xchg
pop
aas
dec
jno
out
mov
add
stc
mov
imul
(bad)
in
loope
mov
mov
fstp
cwde
lahf
cmps
mov
mov
loop
dec
add
fistp
xor
jnp
jmp
adc
jno
add
push
rep
jg
enter
push
call
hlt
mov
idiv
les
lds
sar
pop
mov
sbb
mov
int3
inc
ss
and
or
jbe
push
test
jo
out
jb
aam
jne
pop
add
xchg
and
jae
push
sbb
fstp
mov
repnz
mov
mov
mov
or
and
stc
in
mov
mov
push
jmp
ss
mov
rcl
mov
daa
push
mov
out
push
rcl
add
mov
es
pop
jmp
jmp
les
add
pop
sub
mov
fdiv
popf
stos
mov
out
rol
pop
(bad)
jg
jb
or
add
and
and
cli
push
cmp
retf
aam
movs
xchg
loopne
push
fcmovb
adc
jo
inc
hlt
and
stc
push
mov
cs
push
sti
pop
sub
jl
div
and
repz
aaa
xchg
add
push
dec
dec
jmp
mov
std
xor
ret
cmp
jg
fnstsw
xor
sub
add
push
xchg
mov
div
and
sub
jle
and
sub
jecxz
jp
and
push
dec
jmp
sub
sbb
pop
jle
xor
(bad)
out
cwde
xor
into
fmul
dec
inc
std
cmp
lds
push
outs
int3
popa
pusha
(bad)
mov
dec
mov
xor
cmp
and
ret
call
(bad)
je
movs
mov
pop
jb
gs
sbb
repz
outs
call
pop
push
(bad)
push
js
icebp
popf
sahf
cdq
cmp
sti
stos
sub
pop
sbb
enter
dec
daa
inc
out
fidiv
and
dec
cwde
test
ins
arpl
imul
js
fistp
adc
push
stc
pop
aam
imul
jle
fcomp
mov
adc
es
xchg
cmc
adc
pop
out
xchg
mov
add
xchg
pusha
cmc
sahf
xor
pop
lahf
inc
mov
call
fsubr
lock
xor
out
dec
push
add
dec
push
and
imul
mov
sbb
adc
test
mov
imul
(bad)
call
imul
xchg
js
bswap
xor
push
jmp
fcomip
add
xchg
mov
mov
ins
mov
push
cwde
arpl
aaa
test
jge
sbb
adc
xlat
mov
mov
xchg
jb
or
pusha
sbb
sub
rcl
mov
cmp
mov
les
mov
mov
shr
nop
adc
mov
jnp
pop
call
ins
add
es
xchg
test
mov
ja
ret
ficomp
call
pop
lods
shl
sbb
sbb
sbb
mov
add
sbb
mov
pop
loopne
push
fistp
jl
pop
xor
and
jl
in
add
mov
cld
dec
jg
push
push
dec
mov
cwde
or
inc
arpl
sub
imul
gs
addr16
aaa
fwait
les
cmp
xor
xor
xchg
cld
pop
mov
mov
loopne
push
imul
push
std
out
mov
push
data16
iret
sahf
cmc
mov
lds
xor
pusha
in
mov
int
jb
add
xchg
add
call
jp
jno
xchg
xor
fst
mov
xor
mov
add
loopne
mov
sub
pop
jmp
jns
cmc
pop
mov
mov
mov
out
cmp
in
fnstenv
or
out
loope
ds
fist
(bad)
jbe
push
push
jg
dec
pop
(bad)
fmul
and
mul
push
push
jmp
iret
outs
sar
add
aas
sar
(bad)
mov
mov
mov
std
rol
add
shl
aas
xchg
jl
sbb
repnz
sub
movs
and
addr16
inc
aad
mov
lea
pop
mov
arpl
mov
icebp
cli
jns
add
xor
mov
aaa
in
cmp
inc
and
enter
mov
cmp
fucomi
(bad)
push
cmp
imul
inc
test
cdq
(bad)
(bad)
sbb
leave
pushf
dec
stos
rcr
stos
fwait
lahf
lods
or
pushf
je
(bad)
jne
jmp
sub
and
and
xchg
out
fdiv
movs
(bad)
ds
jne
jbe
xchg
icebp
dec
jo
xchg
in
test
(bad)
adc
(bad)
lds
cdq
push
adc
and
nop
cmp
jnp
sbb
mov
jnp
pop
mov
outs
popa
mov
dec
sbb
jg
fdiv
jle
push
loop
popa
dec
pusha
xor
fs
fcomp
ins
jl
mov
(bad)
cld
and
inc
ins
or
rcr
push
and
cmp
add
ret
cmp
cmp
addr16
mov
xchg
push
ss
(bad)
cmp
push
sbb
loopne
jmp
cmp
clc
mov
ret
adc
adc
ss
loopne
icebp
push
ins
arpl
pop
sub
sbb
sar
pop
add
ja
adc
add
xchg
cmps
call
icebp
(bad)
and
xor
fild
int
shr
xchg
mov
in
pop
test
iret
out
clc
lahf
in
sbb
cmp
fcomp
loop
inc
je
pushf
sar
dec
push
push
cmps
mov
cmp
aam
jmp
stos
sbb
mov
mov
push
das
hlt
es
out
and
mov
or
test
pcmpgtd
mov
(bad)
lock
and
sbb
mov
lea
or
xor
call
mov
pop
nop
mov
add
lock
inc
out
jmp
aad
lods
or
and
jecxz
pop
pop
or
js
cmp
repz
mov
lea
xchg
lahf
xchg
add
pusha
or
out
call
push
aad
mov
xchg
pop
iret
(bad)
aas
shl
call
mov
adc
loop
fdiv
js
ss
xor
xor
push
jno
adc
(bad)
sub
call
mov
iret
imul
int
cmp
hlt
push
sti
mov
jbe
mov
aas
push
inc
adc
inc
rcl
shl
aad
loop
xchg
icebp
jbe
repz
(bad)
or
push
loopne
ror
mov
push
lods
sbb
push
ficom
data16
std
cld
dec
xchg
imul
pop
aas
xor
xchg
sbb
adc
(bad)
pop
dec
ds
push
cmp
test
mov
dec
mov
xchg
jecxz
les
mov
in
mov
(bad)
mov
lahf
or
gs
fild
dec
icebp
out
jmp
fcmovb
or
movs
fs
call
pop
sbb
mov
sar
xlat
jmp
add
inc
not
es
addr16
aaa
lods
fdiv
jmp
push
mov
inc
test
jne
and
sahf
cs
shl
std
adc
test
xchg
in
(bad)
sub
call
dec
xchg
test
push
and
test
lods
fadd
push
jns
push
out
adc
out
cli
leave
lock
scas
sub
push
lahf
xchg
push
add
sub
xor
lea
(bad)
xor
jp
retf
jge
sub
mov
push
add
add
iret
les
sbb
bound
(bad)
or
mov
mov
mov
mov
mov
shr
xor
cmp
lock
into
mov
mov
xchg
jle
cmp
jecxz
daa
je
pop
cmp
push
cmps
xchg
cli
mov
das
mov
cmp
fisttp
scas
pop
ret
loop
mov
fst
mov
mov
in
pop
xchg
jge
cmp
jb
jg
jae
std
inc
or
rcl
jnp
pop
pop
mov
in
jge
or
cli
mov
lea
adc
adc
push
dec
mov
xchg
sbb
pusha
mov
xor
mov
hlt
ins
and
sbb
fwait
jg
push
dec
sbb
(bad)
xchg
and
enter
inc
ins
jb
jne
ror
xor
jmp
xor
mov
nop
mov
je
and
inc
repnz
push
xchg
ror
push
lock
mov
ins
cmp
jnp
int3
arpl
std
xor
xchg
push
div
je
fisubr
fsubr
add
aad
jo
inc
sti
imul
sbb
mov
cmc
sbb
hlt
popa
outs
out
jb
cmp
jg
test
adc
xchg
aas
mov
daa
rcl
add
push
pop
call
push
mov
push
or
sub
dec
fmul
and
mov
xchg
jge
add
push
push
and
mov
repz
push
jo
rcl
mov
daa
into
aaa
mov
pop
sar
fs
inc
dec
mov
dec
cmps
ret
repz
push
mov
or
sbb
test
imul
in
imul
mov
cdq
pop
sti
cmp
mov
mov
pop
repnz
fisttp
lahf
add
mov
xchg
(bad)
xchg
por
inc
xor
push
ins
fcom
sub
dec
jecxz
jmp
stos
add
and
jle
push
pop
inc
bound
bound
gs
retf
adc
lahf
xchg
xchg
jl
cmps
in
jns
jns
cwde
inc
pop
mov
inc
retf
xlat
js
and
jnp
das
cmp
das
scas
or
adc
push
sahf
inc
test
lahf
jmp
enter
dec
and
xchg
mov
stos
adc
arpl
stos
cmp
imul
dec
call
sbb
out
dec
retf
pop
leave
dec
inc
inc
and
or
repz
in
mov
imul
bound
cmp
dec
jl
(bad)
sub
out
fs
ins
mov
dec
ret
sub
ja
mov
in
xor
push
mov
(bad)
cmps
sbb
test
mov
dec
and
jns
jne
sub
in
push
inc
and
push
xchg
pop
inc
(bad)
push
call
pushf
adc
jmp
shl
ret
xchg
mov
ja
jno
mov
pop
dec
xchg
mov
dec
addr16
fstp
pop
stos
sub
adc
inc
jae
daa
gs
or
mov
xchg
fnstenv
inc
add
ret
mov
mov
add
out
jne
jo
jp
aas
sub
dec
xor
jp
add
sub
repz
pop
(bad)
ret
xchg
inc
mov
out
mov
mov
pop
mov
mov
inc
add
add
cmp
sub
dec
adc
push
cmp
in
or
sbb
mov
ret
and
add
adc
(bad)
jae
pop
sbb
int3
pushf
repnz
mov
and
jecxz
mov
sbb
test
pop
(bad)
fcomp
inc
test
jp
adc
inc
stos
int
shr
test
test
cmps
and
inc
mov
and
mov
or
(bad)
test
push
stc
stc
jne
xchg
leave
adc
or
dec
sbb
inc
fnsave
push
fdivr
xchg
not
xor
xchg
jl
ret
jle
jecxz
loope
or
cli
adc
jo
pop
movsx
push
xchg
add
xor
and
dec
mov
pop
stc
cmc
and
movs
arpl
cmp
int
(bad)
lds
in
out
add
dec
ins
push
cmc
outs
jle
push
and
xchg
(bad)
bound
jbe
xor
hlt
stos
add
mov
and
jae
loope
jae
lock
push
xchg
push
sbb
out
test
and
pop
imul
inc
xor
sub
push
jbe
push
dec
pop
inc
sar
sub
cmps
cmp
add
mov
add
dec
test
lods
pop
aad
scas
sub
test
lods
sahf
jmp
out
out
cs
dec
sti
leave
jns
mov
les
sbb
mov
sub
sar
ins
dec
test
jne
xor
sbb
mov
cld
repz
pop
dec
nop
lahf
enter
lahf
cmp
out
mov
nop
or
mov
mov
add
lahf
or
sbb
and
push
pop
push
xor
cs
xchg
sub
adc
loop
jl
movs
pop
xor
into
jae
cmp
enter
adc
jp
mov
xlat
in
daa
int
cdq
ret
dec
ins
int
mov
jge
or
push
mov
shl
sub
and
lods
test
lea
std
push
shl
add
jnp
mov
(bad)
hlt
daa
(bad)
inc
aam
push
cmc
retf
es
sub
(bad)
sub
mov
inc
cld
stc
mov
inc
aaa
ret
loope
mov
pushf
ins
adc
arpl
push
out
add
out
push
pop
mov
cwde
pop
push
sti
push
add
cmp
adc
dec
ret
aaa
pop
cdq
pop
and
xchg
sub
pop
sbb
and
mov
out
jne
loopne
in
cld
mov
scas
gs
jl
jmp
push
dec
test
stc
into
jp
sub
xchg
es
repz
sub
lods
sbb
and
int
dec
shl
(bad)
into
(bad)
inc
inc
out
mov
mov
and
imul
or
xchg
loope
not
test
test
and
call
popf
jp
outs
push
mov
mov
rcr
mov
arpl
mov
push
dec
adc
sbb
pop
mov
push
sbb
mov
sbb
pop
(bad)
ins
ja
int3
call
mov
cmps
into
push
(bad)
jb
cmp
mov
mov
xor
ja
addr16
mov
aas
test
xchg
into
push
ja
repz
outs
lea
mov
aad
mov
inc
lods
jns
cmp
not
jmp
ins
push
arpl
lods
shl
mov
cmp
cmp
mov
mov
lahf
mov
scas
lahf
daa
stos
or
push
dec
xor
inc
imul
xchg
cmp
hlt
or
xchg
xchg
xor
cmp
mov
ret
inc
cmps
sub
mov
fst
jo
nop
dec
mov
push
adc
dec
adc
mov
imul
dec
sar
xchg
adc
jns
repnz
in
hlt
daa
dec
ret
std
adc
lea
test
pop
mov
mov
stos
test
iret
test
mov
sbb
mov
mov
test
push
enter
dec
mov
push
outs
jns
shr
int
mov
jo
jg
frstor
(bad)
fbld
gs
hlt
cmp
pop
jp
loope
loop
xor
sub
mov
fnstcw
mov
inc
retf
test
pop
mov
pop
push
popf
in
pop
sub
dec
nop
test
lock
pop
jmp
mov
scas
adc
push
xor
mov
ror
jmp
mov
pop
jb
sbb
and
iret
inc
pop
fist
retf
lods
dec
faddp
ja
sbb
lea
sub
dec
mov
outs
push
xchg
pop
mov
xor
fld
mov
(bad)
fisttp
cwde
inc
rcr
cmp
or
jmp
jecxz
cmc
mov
ss
cwde
jecxz
xchg
add
xchg
arpl
popf
mov
ret
scas
icebp
(bad)
outs
jae
adc
outs
dec
outs
icebp
mov
scas
arpl
movs
mov
xor
fistp
sbb
(bad)
hlt
dec
pop
inc
ss
inc
in
pop
bound
(bad)
stos
outs
aaa
jecxz
stos
lahf
sub
in
or
jo
cmps
shr
shl
fsub
cmc
mov
call
enter
mov
fcomi
imul
imul
leave
push
lock
mov
add
lods
xlat
or
adc
cli
xor
ret
and
retf
cmp
jg
jmp
cmp
enter
pop
sub
out
mov
xor
xchg
test
add
jnp
add
dec
add
aam
dec
ja
xchg
das
sahf
loop
fld
mov
cwde
adc
std
bound
loope
shr
lods
iret
jbe
mov
sbb
mov
push
add
in
mov
cmp
pop
cmp
or
ja
adc
(bad)
lock
cmp
jbe
lea
and
xchg
jno
stos
jmp
ficomp
and
jo
lods
xchg
push
loopne
das
add
out
mov
xchg
add
ds
jo
into
sub
outs
mov
lods
into
xor
add
into
fidiv
sub
cmp
fiadd
xchg
cmp
gs
daa
xor
cmps
arpl
jo
and
fdivr
test
pushf
test
dec
ins
test
or
xor
(bad)
sbb
sbb
ja
jle
cmp
cmp
push
cmp
ss
imul
mov
pop
pop
and
mov
pop
push
xor
bswap
gs
push
jns
stc
js
addr16
std
js
int
(bad)
jecxz
(bad)
(bad)
fdivr
or
sbb
jbe
fnsave
and
int3
xlat
pop
fst
xor
les
and
stos
sbb
les
ins
jp
fsub
test
mov
sar
scas
pop
pop
and
jno
test
jg
lods
shl
sub
out
test
mov
mov
jl
stos
xor
f2xm1
stc
test
or
sbb
stos
cmp
aas
addr16
cdq
dec
ins
in
popf
ds
addr16
rcr
mov
(bad)
lods
out
inc
(bad)
sbb
inc
popa
sub
push
loopne
xchg
dec
mov
in
cmp
sub
mov
cmps
cmp
adc
test
or
in
(bad)
ins
xchg
jmp
test
push
int3
mov
retf
int3
fisubr
cmp
xor
shr
outs
adc
scas
fnsave
lahf
icebp
fisub
call
test
sub
(bad)
out
push
in
cmps
(bad)
das
or
add
pop
ror
scas
xor
adc
mov
ror
and
stos
push
mov
fstp
loope
adc
xor
je
sti
xchg
jge
out
mov
inc
mov
jle
sub
cmp
push
aas
ds
ds
movs
push
rol
shl
clc
loopne
aam
in
push
dec
or
shr
and
loope
sbb
inc
and
xor
out
pop
adc
fwait
jmp
fisub
(bad)
cli
pop
ins
idiv
lea
jnp
lds
or
in
int
int
pop
xor
test
cmp
lea
retf
xlat
cmovae
test
das
adc
mov
lods
or
aaa
ret
cmp
inc
iret
pop
mov
sbb
pop
cmp
out
xchg
cmps
aam
sbb
jecxz
jne
rcl
fidiv
retf
hlt
inc
scas
les
or
sub
and
shl
jne
aaa
enter
cmp
ss
(bad)
sbb
sub
stc
pop
dec
and
icebp
(bad)
not
(bad)
lock
aam
pop
mov
in
or
movs
jno
adc
push
movs
mov
mov
rol
adc
hlt
sub
(bad)
imul
mov
xchg
mov
fild
out
push
imul
and
xchg
jae
arpl
popa
nop
adc
add
mov
xchg
sar
xor
xchg
scas
lea
stos
dec
movs
mov
or
outs
(bad)
das
daa
ja
scas
sbb
test
cwde
aam
(bad)
pop
shr
cld
call
adc
xor
out
(bad)
enter
fisttp
(bad)
cmps
jg
pusha
cwde
inc
shr
xlat
cs
pop
mov
jnp
sahf
data16
fisub
iret
in
mov
pop
(bad)
out
(bad)
mov
loopne
(bad)
sti
cmps
imul
cmp
xor
aas
mov
fisub
int3
mov
mov
or
jg
add
nop
sbb
xchg
cmp
xchg
cs
jg
push
sub
mov
ins
jge
adc
adc
mov
mov
and
or
or
and
jle
xlat
push
cmp
call
push
imul
ins
pop
loop
jno
imul
mov
call
mov
out
sub
cmp
add
add
cld
cmp
jl
or
cmp
sub
pop
pop
lods
pop
add
push
mov
inc
(bad)
mov
shr
das
lahf
in
dec
nop
xor
add
cmc
cwde
and
and
push
inc
sub
aaa
push
mov
(bad)
pop
cmp
cli
mov
push
(bad)
mov
rcr
test
sub
or
sub
inc
addr16
and
push
add
xor
xor
cmp
movs
fild
les
iret
int3
test
inc
and
iret
ins
ins
in
call
cmps
jne
movs
jmp
ja
or
adc
ret
jne
pop
jbe
xchg
dec
add
stos
inc
ds
inc
cmp
js
add
adc
ds
fimul
test
imul
pop
xchg
mov
xchg
pop
sar
push
fst
jno
lds
aam
and
pop
mov
inc
mov
std
rcr
xchg
cld
pop
xor
jle
stos
inc
mov
sbb
lahf
xchg
push
test
jb
cli
movs
add
push
sub
xchg
pop
cmp
pop
clc
out
sub
test
jne
mov
mov
mov
lea
retf
mov
push
out
jnp
(bad)
(bad)
into
pop
shl
stos
xlat
iret
or
dec
pop
jmp
fldenv
dec
xor
stc
dec
cmp
add
jecxz
cmp
xor
movs
aad
fiadd
iret
mov
test
into
imul
(bad)
mov
add
push
pop
cmp
aam
(bad)
nop
ficomp
dec
xor
xor
and
sub
aad
and
xor
rol
repz
ret
int
cwde
imul
xchg
cli
pop
(bad)
fcom
dec
sub
out
loope
loope
cwde
loope
or
jle
popa
pop
jecxz
loope
and
rol
es
push
push
loope
pushf
(bad)
sub
mov
xor
int3
pop
xchg
and
mov
pop
cmps
mov
xchg
icebp
and
daa
int
stc
add
jge
mov
jl
inc
popf
cmc
fidiv
cmp
pop
jo
or
loopne
cmp
into
cmps
retf
call
inc
jp
aas
jg
and
(bad)
mov
mov
nop
sbb
mov
retf
lea
push
mov
and
(bad)
adc
mov
in
int3
mov
and
out
fild
mov
jns
or
pop
dec
lds
jle
repz
cmp
mov
push
add
clc
sbb
xor
fdivr
add
xor
clc
(bad)
out
mov
pcmpeqd
xchg
jno
cmp
aam
push
ins
or
or
jecxz
sbb
or
pop
ror
inc
mov
mov
sub
or
or
jns
ret
shl
mov
inc
pop
icebp
cwde
jg
(bad)
cmp
lds
cmp
iret
dec
and
mov
cmp
mov
xor
fcmovb
test
es
test
data16
mov
adc
xor
ja
and
dec
(bad)
push
outs
xchg
clc
loopne
out
std
popa
nop
xchg
dec
add
ret
mov
pop
fbld
cmp
push
sub
mov
fcomp
data16
dec
jno
div
sub
cmps
cmp
pop
cmp
(bad)
mov
jecxz
stos
push
sbb
xchg
adc
test
mov
retf
scas
in
push
mov
(bad)
pop
mov
mov
cmc
(bad)
xlat
out
pop
popa
xor
adc
cmp
sbb
inc
fwait
cmp
dec
cmp
stos
xchg
xchg
jecxz
dec
in
lock
or
(bad)
xlat
call
jo
rcl
inc
popf
outs
es
leave
call
jmp
(bad)
int
mov
inc
mov
push
xor
or
jl
add
pop
xor
or
popf
in
add
add
dec
mov
(bad)
imul
xchg
lahf
lds
sbb
jo
mov
js
jge
pop
sbb
out
sbb
sub
mov
retf
pushf
mov
mov
mov
cwde
fmul
cli
ins
cmps
aas
pop
xchg
pushf
sbb
inc
rcr
push
add
jbe
es
adc
sar
jno
xchg
movs
enter
xchg
mov
bnd
jp
mov
mov
push
jl
ror
sub
hlt
loopne
call
add
and
ret
aad
aaa
mov
lds
arpl
stos
icebp
push
mov
cmp
(bad)
repz
icebp
or
pop
fwait
dec
or
fs
inc
into
mov
jo
imul
fbld
sar
ja
mov
jo
rcr
mov
popa
mov
js
push
add
mov
add
aas
leave
stos
ret
into
call
lods
lahf
jne
ss
add
mov
or
cmp
and
jmp
xchg
aam
clc
clc
dec
fs
stc
test
fs
xchg
stc
test
add
xor
dec
call
pop
in
test
mov
hlt
mov
and
stc
push
imul
or
call
xchg
mov
sub
pause
or
ret
adc
rol
imul
cmp
mov
out
sahf
mov
pop
gs
cwde
out
add
je
or
in
loop
dec
mov
xor
adc
mov
inc
nop
mov
inc
int3
mov
dec
aaa
scas
jne
out
frstor
sbb
stc
int3
lock
div
aad
inc
test
push
mov
add
fst
mov
ret
and
pop
add
push
jne
call
push
dec
mov
jle
aad
ror
addr16
sub
aaa
xchg
xchg
ds
push
sub
div
rcl
add
pop
mov
mov
jmp
int
cmp
mov
add
imul
mov
call
pop
out
in
movs
push
fwait
cmp
pop
mov
ins
ds
clc
and
shl
jmp
outs
inc
idiv
mov
lods
or
inc
mov
cmp
jge
cdq
fs
cmc
sar
jp
push
pop
xchg
shl
ins
cmp
jge
mov
dec
imul
pop
jno
mov
and
sub
lods
rcl
cmp
pop
inc
push
lock
ins
adc
test
mov
dec
enter
sbb
dec
(bad)
mov
outs
cmc
mov
mov
adc
mov
xchg
mov
sti
in
fld
stos
das
sbb
imul
rcr
pop
lock
setg
(bad)
adc
sbb
jnp
je
and
ins
in
pop
cmp
sbb
push
xchg
std
imul
or
add
adc
das
in
xchg
outs
jnp
xchg
(bad)
jl
ficomp
scas
nop
jecxz
inc
rol
sbb
or
sbb
fmulp
add
dec
(bad)
xchg
sub
sub
xchg
jbe
repz
mov
test
pop
jo
mov
lea
add
mov
sbb
xchg
cmp
aam
mov
sbb
or
pop
adc
xchg
adc
xchg
out
add
mov
mov
cmp
mov
xchg
arpl
ret
jne
repz
pop
in
in
sub
xchg
test
daa
addr16
jb
pusha
or
mov
sub
adc
jo
test
cdq
mov
push
mov
sub
adc
int3
jmp
fwait
es
xchg
lock
out
(bad)
es
and
sub
loopne
pop
push
add
jbe
std
cmps
jge
mov
frstor
adc
pop
loopne
int
push
inc
int
cs
out
mov
(bad)
adc
dec
mov
xor
cmp
add
sub
mov
dec
cmp
jne
test
push
cld
jb
cmps
add
aas
mov
cmp
dec
cmps
or
repnz
cmp
stos
mov
lods
mov
add
add
idiv
xlat
sbb
and
jb
xlat
mov
sub
call
shr
test
mov
mov
inc
xor
inc
push
mov
mov
les
fisttp
xchg
out
jae
retf
and
mov
mov
loop
mov
inc
jmp
lds
fdiv
mov
sbb
std
sti
mov
jmp
aaa
push
xchg
or
movs
js
gs
fimul
jp
and
enter
jp
cmps
loop
xor
pop
push
mov
xor
and
ins
push
push
cmp
push
scas
pop
mul
(bad)
and
add
add
icebp
cwde
in
sti
ret
sar
(bad)
jns
adc
push
xchg
cs
mov
xlat
ins
stos
test
in
or
test
int3
cmps
adc
mov
(bad)
pop
retfw
ror
pop
call
pop
push
push
adc
out
(bad)
jge
and
les
hlt
add
repz
and
imul
xor
sahf
dec
add
movs
int3
popa
idiv
stos
sbb
cdq
cmp
xor
mov
outs
pop
push
(bad)
xor
mov
shl
jnp
or
mov
dec
mov
ds
pop
mov
pop
inc
daa
daa
xchg
and
adc
mov
inc
movs
sbb
push
lods
xchg
add
in
repz
add
out
sbb
push
inc
xchg
lods
jae
mov
int
test
adc
ins
fs
and
(bad)
jmp
pusha
inc
push
dec
add
or
cmp
sbb
ins
pop
dec
call
fmul
and
pop
xor
and
data16
ss
cmc
(bad)
rcl
cmp
out
sub
sbb
lods
mov
pop
sbb
std
mov
or
cwde
push
mov
jnp
sub
inc
loope
xchg
and
pop
rol
(bad)
pop
fistp
inc
popf
push
sub
ss
test
mov
mov
cmps
jecxz
cwde
xchg
sbb
xor
(bad)
fst
and
add
xchg
mov
sub
nop
xor
(bad)
mov
rcl
sbb
jnp
enter
pop
shr
rcl
mov
(bad)
push
rcl
add
mov
fsub
std
ss
movs
mov
sbb
mov
push
lods
jmp
mov
shr
cmp
xor
pop
or
pop
push
stos
jecxz
lods
mov
je
ss
test
ror
push
cli
call
lea
test
push
js
pop
gs
cmp
mov
lods
or
sub
xor
or
dec
les
loope
dec
xchg
rcr
pop
jp
lds
xor
enter
jb
add
(bad)
sbb
scas
xor
push
sub
jle
cld
ret
or
push
mov
xchg
push
sub
push
shr
aas
cmps
ret
arpl
sub
aad
shl
pop
push
cs
inc
ffreep
cld
int
mov
push
(bad)
ds
push
dec
cld
mov
mov
dec
std
mov
and
int3
cwde
call
push
jg
cmp
iret
xchg
and
sub
jle
les
popa
aaa
pusha
add
xchg
stos
sbb
cmp
test
repz
test
xchg
add
mov
stos
aas
pop
mov
enter
lea
cmp
fiadd
ror
adc
mov
lock
addr16
cli
(bad)
(bad)
jnp
clc
xor
lahf
push
mov
pop
loope
and
ret
mov
xchg
cs
ss
es
xor
outs
mov
sub
adc
push
jle
sti
sbb
xchg
sbb
push
mov
(bad)
iret
gs
and
popa
jg
mov
dec
jmp
std
les
shr
jmp
cwde
xlat
adc
cli
xor
loop
loopne
cmp
(bad)
stos
push
pushf
xor
ffree
xlat
pop
div
sub
fwait
cwde
push
jo
add
add
loopne
js
jge
sahf
dec
(bad)
pop
jp
nop
mov
xchg
adc
pop
lock
lds
mov
out
jno
xor
xor
inc
xchg
xlat
xchg
rcl
xchg
inc
or
(bad)
xor
cmc
(bad)
push
mov
scas
push
xchg
dec
or
dec
aaa
xchg
xchg
xor
cmp
push
mov
imul
repnz
sti
add
dec
outs
or
push
jo
sbb
iret
pop
data16
xchg
push
inc
and
addr16
daa
or
(bad)
mov
pop
xor
clc
jp
icebp
sbb
mov
adc
iret
(bad)
fdiv
sbb
xor
fsubr
movs
cmp
lds
sbb
stos
push
add
cmp
mov
das
call
outs
fdiv
ret
sub
data16
push
jae
mov
fstp
inc
fs
xchg
sbb
push
cmp
push
cld
popf
xchg
jg
or
jo
(bad)
mov
clc
push
cmps
xor
mov
pop
mov
outs
xor
aas
ss
lea
daa
mov
mov
bound
xchg
push
push
dec
dec
test
(bad)
aaa
add
les
xchg
pop
jno
xchg
add
lea
add
xor
mov
xchg
lahf
xor
cmps
or
retf
ret
or
jge
sbb
pop
retf
mov
jo
leave
inc
xchg
loope
push
jge
rcl
gs
aam
cmp
sbb
xchg
mov
mov
mov
imul
int
pop
pop
cmp
mov
pop
mov
stos
fwait
lods
inc
mov
nop
jmp
(bad)
adc
test
js
push
sbb
rcl
iret
jns
ins
sbb
out
fsubr
lods
push
xor
sub
add
imul
dec
sar
jbe
das
test
push
scas
mov
pop
inc
jg
jnp
jmp
xor
xchg
jmp
push
mov
or
fst
pusha
or
pop
push
fidivr
xor
mov
mov
add
add
mov
ret
not
jl
pop
retf
aas
push
or
xor
mov
rcl
adc
and
arpl
xchg
or
mov
mov
and
imul
mov
stc
mov
sahf
xor
(bad)
and
outs
(bad)
xor
in
jbe
add
ins
sar
(bad)
dec
xlat
and
add
(bad)
mov
cmps
fsubr
mov
push
test
dec
loope
repz
shr
and
mov
mov
popa
jo
dec
adc
hlt
test
adc
bound
rcl
jne
stos
add
and
sbb
gs
cmp
xchg
xchg
lds
cmp
adc
xchg
jb
aad
or
mov
xchg
scas
cmp
pop
data16
inc
popf
fild
ret
xor
xor
aad
jno
jg
jmp
or
ss
add
gs
mov
xor
xor
push
push
rcr
lock
and
sub
xchg
inc
scas
mov
in
imul
jge
aad
mov
pop
out
aaa
test
(bad)
cmp
imul
xor
loopne
cmps
loope
jp
cmps
xor
in
(bad)
out
pushfw
test
xlat
movs
add
stc
mov
push
adc
nop
cmps
test
pop
push
pop
movs
ins
adc
add
xor
test
sbb
adc
jecxz
out
clc
mov
mov
mov
sub
sub
sbb
and
cmp
cmp
inc
shl
dec
push
dec
adc
bound
and
push
xchg
test
push
in
xchg
adc
adc
mov
mov
push
fcmovu
xchg
or
sbb
int
fs
mov
jmp
lock
mov
fcmovnb
les
push
sub
push
loop
jge
fiadd
fs
stos
mov
lock
iret
sahf
dec
pop
shr
sahf
mov
or
mov
loop
jmp
(bad)
fcmovb
push
cdq
leave
mov
frstor
xchg
iret
retf
jmp
xor
lods
mov
adc
pop
dec
inc
mov
ror
in
or
mov
imul
mov
mov
aad
ror
pop
ins
inc
and
test
scas
inc
dec
lock
or
cli
leave
cmp
adc
out
aad
and
jmp
xchg
scas
inc
inc
mov
jne
mov
pop
xchg
in
mov
lea
mov
jmp
cwde
cmp
out
es
xchg
mov
in
dec
push
js
retf
test
(bad)
and
mov
inc
imul
in
jmp
aad
mov
mov
ss
mov
xchg
add
div
or
jecxz
pop
test
cmp
clc
mov
jno
push
jns
out
cmp
rol
retf
lods
mov
ins
xchg
repz
dec
cwde
leave
in
pop
or
or
cmp
jbe
jmp
jae
das
push
fst
and
mov
sub
scas
(bad)
sbb
sub
push
outs
sahf
push
test
sbb
pop
xor
push
dec
retf
push
lds
or
imul
movs
fnstcw
mov
ins
add
mov
cmp
frstpm(287
cmp
add
ss
sbb
rol
cmp
mov
popa
or
nop
imul
arpl
jne
std
mov
or
jnp
inc
cmp
out
xchg
or
rcr
into
mov
stos
mov
cli
or
enter
ja
mov
pop
(bad)
push
fs
mov
pushf
ror
sti
mov
mov
sbb
add
cmps
xor
ret
adc
pop
aad
mov
iret
mov
imul
sbb
xchg
add
cmp
push
repz
dec
les
loop
push
sahf
test
push
fsubr
jecxz
sbb
jno
and
mov
xchg
mov
sbb
sub
ss
(bad)
imul
sub
ja
aam
lods
jne
cmp
imul
arpl
inc
call
jmp
inc
mov
loope
xchg
hlt
ficom
add
adc
and
adc
pop
jp
mov
add
adc
mov
sahf
rcr
jne
xchg
pop
js
(bad)
in
test
mov
sub
sti
push
pop
outs
add
adc
jp
out
cmp
xor
jge
lahf
sbb
mov
mov
jmp
jb
sub
pop
mov
xchg
jp
xor
repnz
in
mov
sbb
loopne
adc
int3
scas
mul
shr
jnp
mov
push
sahf
mov
(bad)
mov
mov
fidivr
dec
push
jo
mov
mov
or
(bad)
xchg
shl
dec
dec
cmp
push
cmp
out
and
mov
sbb
jp
push
push
ins
mov
ss
loop
mov
and
retf
sub
sub
cwde
(bad)
push
out
mov
jecxz
dec
and
add
shr
jo
jg
retf
and
xchg
and
adc
dec
inc
mov
dec
neg
shl
fcomi
mov
mov
xchg
movs
dec
mov
cmp
push
cmp
fxch
pop
cmp
aad
dec
sbb
(bad)
jo
push
fdivrp
fwait
cmp
add
xor
pop
push
or
jmp
dec
out
or
or
pop
and
out
mov
cmps
inc
das
js
lods
ret
mov
xor
xchg
imul
push
sub
lea
fbstp
push
adc
outs
sub
stos
dec
out
cmp
lea
popa
pushf
adc
add
ja
dec
mov
call
nop
movs
pop
ja
in
inc
jge
jb
lock
(bad)
js
jmp
test
jno
inc
mov
mov
mov
sbb
test
mov
mov
sub
clc
dec
add
fsub
fsub
test
mov
retf
cmp
aas
iret
pop
mov
add
loop
cmps
fstp
xchg
and
in
add
xor
or
jecxz
xchg
mov
cwde
and
pusha
pop
out
and
push
loopne
cmps
mov
pop
mov
(bad)
ds
dec
into
pop
scas
mov
inc
int
pushf
inc
into
nop
jmp
pshufw
ss
cmp
add
inc
sub
lock
xlat
mov
push
cwde
mov
mov
sbb
imul
in
xor
inc
mov
cdq
mov
mov
push
fadd
pop
ror
pop
fwait
or
fs
in
data16
mov
call
mov
scas
inc
jle
mov
jg
inc
js
mov
je
rcl
pop
mov
and
out
or
mov
call
jb
adc
fsub
test
and
dec
fidivr
jne
stos
(bad)
inc
pop
addr16
sbb
and
mov
add
repz
pop
aad
or
xor
test
repnz
(bad)
push
mov
imul
push
lea
dec
addr16
lods
add
sbb
int
xor
jnp
xchg
add
cmp
inc
hlt
or
sub
pop
movs
test
es
in
adc
test
adc
int
jmp
ret
adc
dec
outs
cmp
sub
inc
shl
pop
daa
push
ret
xor
add
rcr
leave
ins
cdq
(bad)
out
sti
xchg
mov
popa
mov
mul
inc
cmp
jno
clc
movhps
cdq
out
shl
test
ficom
mov
out
test
add
int3
jmp
mov
fcmovu
dec
xlat
push
push
mov
sbb
sar
daa
std
lock
les
mov
popa
sub
movs
pop
scas
lock
push
adc
add
xor
pop
inc
fsubr
addr16
repnz
mov
rol
mov
lods
xor
mov
leave
call
and
shl
test
mov
sti
mov
addr16
gs
mul
popa
and
scas
fstp
das
cmp
in
or
or
jb
or
out
cmps
add
repnz
mov
add
sub
and
int
pop
movs
je
jnp
in
mov
mov
mov
ja
sub
aam
push
inc
mov
pushf
stos
inc
dec
sahf
xlat
pop
push
add
sar
pop
pop
or
out
test
test
(bad)
mul
mov
xchg
push
adc
xor
das
mov
retf
(bad)
pop
xchg
sub
pop
int
test
sub
dec
fnstcw
push
sbb
js
cdq
leave
repz
sbb
mov
sbb
xchg
or
xchg
fcmovnu
inc
adc
aas
inc
mov
and
(bad)
call
jne
call
sub
test
xchg
jl
(bad)
pop
sub
fs
loop
cmp
ror
out
loope
out
push
sub
push
xor
sub
cmp
push
enter
xor
pop
cmp
pop
scas
shr
inc
mov
mov
add
fld
movs
mov
mov
adc
icebp
fwait
enter
imul
icebp
rcr
mov
push
sahf
xor
adc
leave
xor
jns
inc
pop
pop
sti
jg
xchg
(bad)
lahf
or
sub
mov
mov
hlt
adc
mov
fstp
pop
dec
scas
out
aad
lods
sahf
hlt
out
test
and
pop
and
jb
out
out
int3
add
xor
push
push
cs
ss
pop
sbb
loopne
div
in
popf
push
add
cld
cmps
movs
jmp
xor
jnp
popa
enter
mov
sub
aas
icebp
movs
mov
fcomp
in
scas
push
mov
int
cmps
xchg
sub
cmp
jnp
sbb
mov
sub
jge
loop
leave
push
mov
leave
repz
loopne
test
ror
rol
test
test
sbb
loop
jns
jae
ins
enter
dec
mov
outs
xchg
mov
dec
hlt
push
scas
loope
or
push
out
out
js
inc
lods
inc
das
push
cmps
mov
pop
cs
(bad)
and
les
sub
inc
dec
inc
pop
pop
or
xor
xchg
cld
retf
mov
es
push
push
jmp
jecxz
pop
xchg
push
pop
outs
xor
lea
inc
lods
cmc
sub
pop
mov
cmp
inc
adc
jp
popa
push
mov
fidiv
lahf
or
pusha
movs
inc
jecxz
sub
lea
mov
dec
cmc
sub
test
inc
cmp
ror
cld
shr
adc
add
dec
push
mov
les
sub
push
ret
fucomi
jo
inc
add
and
(bad)
mov
push
pop
jbe
mov
pusha
add
add
dec
pop
cmp
xchg
pop
mov
in
sub
hlt
js
sbb
stos
mov
imul
xor
in
fbstp
in
jmp
mov
push
mov
cld
mov
sub
and
sbb
sbb
ds
out
mul
jle
add
ror
popa
(bad)
cwde
jmp
mov
or
and
in
pop
es
mov
mov
jbe
lahf
test
jae
mov
jno
(bad)
aas
aaa
add
mov
cmps
inc
cmps
out
shl
stc
xor
cld
dec
xchg
imul
jne
int
mov
shr
repnz
arpl
cmp
daa
mov
push
mov
mov
jbe
nop
pop
fsub
mov
mov
mov
mov
(bad)
xor
les
add
and
popf
xor
mov
pop
push
(bad)
ins
jl
mov
jg
xor
inc
jp
xchg
clc
sbb
push
pop
add
jmp
add
dec
mov
and
sub
fnstsw
shl
js
js
dec
(bad)
rcl
js
shl
repz
ja
mov
and
fdivp
dec
mov
fsub
mov
dec
outs
jg
cwde
mov
jnp
jecxz
cli
aas
pushf
cmps
(bad)
(bad)
fist
retf
mov
cmp
mov
(bad)
push
dec
jecxz
int3
mov
jb
mov
push
sub
mov
mov
call
test
lds
fucomi
pop
pop
pop
and
ret
repnz
enter
test
in
enter
jb
outs
and
in
shl
mov
popa
(bad)
addr16
in
icebp
lock
loop
stos
fisubr
jg
dec
pop
cmp
mov
pop
mov
lock
out
cli
cmp
and
repz
gs
push
push
ja
dec
data16
cli
xchg
mov
xchg
xchg
and
icebp
(bad)
sub
xlat
shr
repnz
stos
nop
fwait
sbb
sub
add
(bad)
sahf
ficom
ffree
sar
cwde
pusha
jmp
cld
lock
jmp
loop
mov
iret
(bad)
jo
lods
ret
and
inc
and
mov
xor
or
in
cmps
ret
sahf
sbb
test
mov
push
dec
mov
repz
sub
mov
adc
les
mov
fs
dec
stc
xchg
mov
loop
lods
cmps
and
popf
xchg
pop
push
hlt
retf
add
mov
cwde
xchg
pop
ins
ret
into
jmp
sahf
movntps
adc
xchg
mov
sbb
push
imul
outs
xchg
mov
ss
arpl
mov
popa
jns
fucomp
and
(bad)
out
icebp
inc
xchg
inc
ss
pop
cdq
jecxz
fsub
test
cmps
push
lock
jmp
push
adc
mov
adc
iret
push
lods
add
cmp
in
jne
arpl
add
fnstsw
sahf
sahf
jb
pop
cmp
das
cmp
fs
es
xchg
mov
rcl
adc
cdq
adc
jb
cdq
mov
pop
xor
jg
jno
xor
mov
cdq
aaa
mov
repz
int3
and
lods
pop
mov
lahf
jle
hlt
cmp
pop
aaa
jle
jmp
fidiv
pusha
loopne
pop
sbb
imul
adc
mov
pop
(bad)
icebp
scas
adc
pop
aas
adc
xor
fist
fcmovb
cmp
fnstenv
xchg
push
test
xchg
pop
xchg
and
sub
xor
mov
leave
sbb
into
pushf
jle
loop
test
repnz
loop
dec
mov
jg
hlt
dec
sbb
arpl
mov
dec
jo
fwait
idiv
and
mov
mov
mov
ds
out
pop
or
stc
jg
inc
xchg
frstor
call
inc
call
sbb
stc
push
hlt
lods
mov
out
sbb
cmp
push
sahf
outs
xchg
pop
lahf
or
jnp
jg
inc
sbb
ret
inc
outs
loope
sbb
cmp
jmp
pop
mov
push
inc
xchg
test
int
push
je
jo
and
jp
sbb
mov
out
imul
mov
adc
imul
dec
std
jmp
jmp
adc
js
or
rcr
loop
add
push
dec
adc
lods
push
cdq
cs
fcomp
sbb
mov
mov
jne
rol
and
add
add
add
pop
add
dec
sub
hlt
or
xor
xchg
mov
mov
mov
rcr
js
popf
pop
(bad)
bound
cmp
ja
sbb
sbb
xchg
rol
sub
retf
push
cmp
or
sti
leave
gs
loop
mov
mov
test
and
or
xchg
loopne
fwait
jp
ss
pop
imul
jbe
push
ret
in
fs
sbb
sbb
pop
dec
ret
mov
dec
aaa
push
add
shr
fwait
cs
push
jmp
adc
fucomi
pop
jb
fisttp
pop
xchg
popa
int
add
bound
das
sub
inc
mov
aas
add
loopne
mov
mov
out
out
(bad)
push
stos
mov
test
jmp
pop
stos
in
rcr
cld
xchg
inc
stos
aaa
mul
mov
or
int3
mov
movs
out
ss
xchg
enter
and
inc
and
inc
clc
leave
pusha
clc
cmp
mov
add
xchg
push
mov
push
add
push
and
mov
int3
jnp
mov
and
ret
jge
in
inc
stos
jae
mov
movs
and
xchg
out
push
fimul
(bad)
cmp
pop
adc
cld
inc
sub
mov
out
aaa
mov
icebp
lods
push
inc
push
sub
jge
or
retf
jnp
mov
in
pop
push
push
jae
jo
cmp
or
ins
add
cdq
mov
jmp
leave
mov
or
inc
jmp
repz
rcl
sahf
and
mov
(bad)
push
iret
(bad)
jg
test
fsubr
lods
jl
jmp
outs
bound
sbb
jle
xor
pop
imul
inc
xchg
test
dec
inc
xor
leave
push
sbb
movs
pop
ja
xchg
mov
cmp
pop
xor
mov
cwde
mov
mov
je
push
xchg
movs
call
hlt
mov
and
mov
push
int3
add
stos
stc
push
lea
xchg
xchg
xchg
sub
retf
pop
cmp
rol
sub
dec
jl
pop
es
pop
push
pop
mov
js
dec
push
(bad)
leave
out
jae
cwde
pop
(bad)
cli
mov
aas
popf
add
enter
add
xchg
sahf
aam
pop
call
push
jg
scas
and
mov
aad
jns
jl
pop
push
inc
cmp
(bad)
mov
and
fs
hlt
xor
call
test
mov
dec
cld
add
mov
mov
sbb
mov
push
shl
aas
pusha
dec
pop
cmc
push
test
icebp
mov
cmp
sar
mov
imul
aad
fiadd
idiv
and
xlat
mov
add
rcr
ds
jae
mov
xor
sbb
and
les
idiv
jl
stos
int
dec
mov
rol
adc
ret
daa
pop
es
push
dec
or
add
xchg
cmp
lods
sti
loope
xor
inc
sbb
mov
jo
cmps
add
sbb
aaa
call
gs
jnp
mov
push
pop
je
sbb
rol
ret
mov
inc
fnstenv
jmp
adc
cli
(bad)
jno
(bad)
cmp
or
loopne
push
and
add
xchg
movs
add
inc
loop
adc
sub
cmc
arpl
adc
js
jecxz
and
sub
xor
or
in
(bad)
cmp
sbb
lock
xlat
rcl
inc
fwait
push
push
shl
lea
ins
fstp
lods
and
cs
inc
xchg
loopne
arpl
push
xor
sahf
in
ds
gs
lds
push
xchg
cmps
pop
push
sar
pop
retf
aam
sbb
adc
adc
xchg
mov
jns
inc
std
mov
cwde
fld
push
fs
cdq
sub
xlat
or
or
push
out
pop
adc
inc
jle
and
add
cld
push
add
popa
nop
retf
sub
movs
ror
xchg
stos
push
xor
dec
pop
nop
and
in
lahf
jge
in
inc
push
rcl
(bad)
fimul
stc
cmp
in
fild
test
scas
jbe
add
rcl
push
adc
mov
jo
mov
cmp
popa
(bad)
loopne
xor
imul
mov
fld
cdq
push
sub
rcr
nop
xor
and
xchg
imul
and
fs
xor
aaa
xor
icebp
sbb
or
jnp
mov
adc
adc
inc
add
add
jmp
clc
and
cs
mov
sub
jmp
cli
xor
movs
mov
xchg
push
mov
stos
push
sahf
inc
inc
pop
std
pusha
aaa
ror
push
or
mov
push
or
lahf
xchg
mov
fistp
or
fild
int3
outs
mov
inc
dec
fcmovbe
pop
fldcw
sub
jnp
(bad)
xor
inc
or
sub
xchg
rcl
icebp
or
in
shl
int
pop
sbb
(bad)
aas
xchg
pop
ret
into
retf
in
jge
or
retf
mov
cmp
jg
or
pop
dec
push
xor
and
fisttp
and
inc
pop
inc
out
push
inc
ffree
sub
inc
gs
cmp
or
mov
push
add
repz
xor
ins
fmul
hlt
push
popf
adc
hlt
stos
jl
cmps
out
jb
addr16
sub
cmp
pop
xchg
inc
lods
xor
and
std
pop
fdiv
popf
or
outs
dec
jno
sar
inc
fcom
mov
loope
jle
inc
xchg
retf
add
xchg
or
inc
in
dec
es
(bad)
push
push
outs
cwde
ret
imul
dec
inc
or
mov
or
(bad)
out
shl
cmp
aas
inc
out
and
sbb
add
add
cmp
mov
add
xchg
jo
lock
call
sbb
test
jmp
bound
xor
xor
mov
add
ds
in
in
sub
into
clc
push
mov
dec
out
xlat
sub
push
repz
mov
(bad)
pop
lods
push
(bad)
js
jmp
inc
inc
cmp
dec
mov
and
mov
loope
inc
enter
cmp
mov
and
xchg
test
ins
gs
sbb
xor
inc
mov
jp
scas
out
adc
jl
js
xchg
push
cdq
repnz
jecxz
cli
test
mov
mov
retf
cmp
fcmovbe
mov
jmp
test
xor
push
push
retf
fcom
mov
mov
mov
arpl
inc
dec
mov
cmp
xchg
or
ficom
and
jo
arpl
sbb
sub
imul
mov
(bad)
jmp
je
cmp
mov
add
and
or
xor
pop
dec
enter
fstp
push
mov
cmp
popf
fadd
add
cmc
call
rcr
xor
leave
das
cmp
and
adc
sbb
jns
pop
div
int
push
dec
sub
jb
ss
sbb
out
fs
pop
mov
dec
mov
adc
rcr
push
push
jbe
in
mov
mov
leave
les
pushf
mov
je
repz
add
out
fucomip
std
mov
mov
adc
aam
pop
adc
dec
aam
jmp
jmp
test
cmp
ret
mov
aad
loope
sti
mov
in
aas
(bad)
rcr
popf
aas
(bad)
into
jecxz
(bad)
jp
aam
rcl
pop
shl
stc
cld
cmps
aam
rdmsr
jbe
dec
mov
mov
jmp
push
hlt
gs
cmps
imul
test
mov
aas
loope
sbb
jecxz
hlt
test
aaa
push
mov
stos
pop
pop
fistp
stc
ficom
push
lock
jecxz
xchg
fdivr
ret
stos
sub
cmps
cmp
push
repz
jb
movs
addr16
mov
jno
outs
push
adc
push
imul
lahf
clc
jecxz
lods
xchg
and
in
jp
xor
out
cmp
stos
push
add
inc
sbb
mov
mov
ins
f2xm1
cmp
out
and
aas
sahf
cld
xor
jecxz
jo
jns
sbb
mov
lea
or
mov
ret
popf
retf
jl
mov
out
repz
push
and
mov
push
dec
out
shrd
push
inc
xor
mov
shld
or
cwde
push
cmc
leave
adc
nop
in
scas
test
pop
add
mov
xor
mov
push
add
call
pop
inc
pop
dec
call
mov
jne
add
adc
mov
jbe
aaa
scas
fidivr
rcr
clc
xor
mov
adc
xor
and
cdq
or
shl
mov
mov
cmc
xor
fwait
or
xor
inc
ret
adc
or
std
pop
aas
sub
stc
or
or
cmps
cli
in
mov
ins
sub
add
sbb
fwait
mov
push
lahf
cmp
xchg
call
inc
into
test
(bad)
iret
and
adc
imul
loop
repnz
hlt
and
mov
dec
mov
xor
jne
mov
call
push
pop
cmp
sbb
out
shl
sbb
push
jb
mov
js
aam
stos
xlat
xor
lods
or
cmps
jmp
xchg
outs
aam
mov
cmp
cmps
(bad)
pushf
dec
push
mov
es
ds
xchg
pop
repnz
sbb
or
jae
icebp
mov
mov
(bad)
into
pop
in
cmps
or
dec
sar
ins
mov
push
mov
push
pop
dec
ror
int
adc
jle
sub
xor
and
jp
mov
and
xchg
mov
adc
fnsave
inc
add
or
hlt
test
loopne
add
mov
popf
pop
mov
retf
lds
fsub
cmp
cmp
ret
and
dec
rol
push
push
sbb
jmp
aam
into
(bad)
mov
mov
adc
sbb
cdq
repz
cmp
mov
ret
push
xchg
inc
xor
mov
pop
jle
xor
enter
mov
pop
push
cmp
inc
xchg
retf
mov
call
lahf
int3
fisub
pop
mov
push
mov
js
push
pop
or
lea
mov
xchg
pop
push
(bad)
cmc
fs
out
movs
ret
sbb
out
jo
or
stos
icebp
sub
in
mov
and
or
rcr
enter
mov
or
out
stc
sti
jge
sbb
pop
cmp
cdq
mov
stos
push
mov
arpl
popf
ret
xchg
adc
mov
jmp
cld
inc
cmp
jmp
dec
pop
into
jbe
fstp
stos
test
sbb
sbb
fsub
cmp
xor
xchg
call
scas
jmp
lock
ja
xchg
cmp
scas
sub
loop
dec
cmp
fwait
xor
dec
mov
fadd
(bad)
adc
fdiv
xchg
jecxz
xor
ja
xchg
nop
inc
inc
arpl
mov
mov
aaa
sub
mov
imul
loop
dec
ret
inc
(bad)
dec
mov
jg
scas
je
xchg
out
popf
scas
test
(bad)
xchg
mov
stc
enter
and
adc
dec
lock
inc
sbb
jo
mov
ret
stc
cli
fld
je
icebp
xchg
and
sub
or
sbb
loop
add
mov
outs
push
(bad)
sbb
adc
mov
movs
mov
pop
rep
imul
push
std
out
icebp
push
inc
xor
mov
xlat
(bad)
div
adc
icebp
mov
jno
cwde
jge
movs
add
aad
pop
jge
pop
cmp
pop
or
sbb
and
shl
in
jae
out
inc
mov
test
add
(bad)
cmp
jnp
dec
mov
out
mov
sbb
les
fistp
add
jno
lods
sbb
cmp
(bad)
cld
mov
mov
fadd
mov
stos
inc
out
or
imul
stc
sbb
(bad)
lock
mov
mov
pop
(bad)
icebp
push
sub
inc
push
mov
jns
mov
xlat
pop
mov
or
pop
cdq
in
rcr
add
sbb
inc
pop
fcomp
lds
es
pop
ret
(bad)
iret
pop
inc
pop
(bad)
fnclex
or
pusha
fs
mov
adc
les
fwait
cmovs
xchg
enter
push
cmp
ds
fld
clc
push
adc
in
(bad)
inc
xor
or
mov
dec
add
sbb
push
int3
fidiv
cs
xor
push
adc
sub
fdiv
xchg
push
jmp
mov
sar
sti
xchg
icebp
mov
out
xchg
leave
push
fldcw
mov
inc
jecxz
sbb
or
fimul
mov
aaa
outs
lahf
push
jge
dec
or
mov
push
push
mov
out
push
pop
test
nop
mov
mov
push
ins
xor
add
dec
mov
aaa
adc
sti
inc
cmp
xchg
retf
pop
pop
mov
js
aam
aaa
add
fldenv
fwait
pop
pop
pop
loope
mov
mov
or
xor
jmp
(bad)
outs
and
loop
pop
fst
add
aas
mov
stc
xchg
mov
pop
test
push
mov
sahf
jnp
sbb
add
ja
xor
ja
mov
ins
mov
rcl
jg
add
ds
call
imul
push
fsub
ror
jge
cmp
jle
push
jb
cs
loop
fcom
cli
(bad)
je
arpl
stos
mov
(bad)
add
pop
test
leave
xor
sar
and
sbb
jmp
cmp
sub
shl
push
dec
jno
pop
cmp
jb
outs
sbb
xchg
xor
les
xor
xchg
and
in
push
xor
cmps
sub
pop
adc
cmp
jp
mov
or
mov
jmp
sbb
cmps
js
test
daa
xchg
inc
push
int3
call
xchg
jae
aaa
push
aas
push
sbb
inc
sub
sbb
inc
adc
push
out
je
lods
inc
ins
or
iret
mov
pop
leave
dec
or
(bad)
jp
jecxz
mov
ficom
test
and
imul
loope
jbe
push
jo
dec
cli
add
jne
xor
lock
cwde
mov
scas
mov
mov
and
jmp
sti
xor
cdq
pop
inc
sub
pushf
or
je
mov
mov
mov
es
cmp
in
push
in
int
ins
nop
pop
push
jne
fnstcw
imul
mov
int3
push
mov
xchg
mov
cmp
mov
stc
sar
or
outs
jb
jb
stos
adc
adc
inc
inc
or
xacquire
cwde
cmp
adc
pop
adc
add
mov
int
pusha
cmc
ret
inc
sbb
and
imul
ret
jp
jp
adc
shl
xchg
push
sbb
iret
outs
icebp
jp
pop
jge
imul
cdq
adc
jo
add
mov
push
(bad)
jle
cmp
cld
mov
inc
add
je
cdq
out
mov
or
pop
mov
mov
out
add
push
call
jae
cmp
and
test
test
xor
push
imul
test
(bad)
call
adc
fs
out
mov
and
daa
mov
lods
cmp
lea
les
xor
inc
jns
xor
(bad)
xor
mov
sbb
push
pop
test
cwde
cmps
out
push
xchg
jno
mov
mov
cmp
lods
shr
pop
cli
icebp
lods
mov
repnz
adc
aaa
jmp
jle
in
icebp
mov
sbb
dec
xor
es
and
call
sub
lea
daa
(bad)
fimul
ins
cmp
xor
push
push
fistp
or
int
cld
stos
mov
call
dec
add
retf
sahf
repnz
mov
dec
imul
lods
imul
xchg
mov
sbb
sub
lahf
(bad)
cmp
push
std
(bad)
test
cmp
sbb
or
adc
xchg
inc
mov
jbe
mov
sub
or
push
ficomp
adc
pop
movs
push
or
mov
cdq
clc
mov
xchg
mov
shr
outs
sub
std
lods
pop
add
or
data16
adc
loop
xchg
inc
sub
mov
pusha
add
mov
cmps
sub
sub
test
xchg
pop
cld
inc
mov
sbb
in
(bad)
out
or
push
mov
sahf
cmp
xchg
xchg
mov
es
dec
push
es
dec
nop
pop
lahf
push
push
retf
sub
leave
dec
out
ins
sbb
mov
lock
popa
push
fstp
hlt
repnz
mov
pop
mov
fstp
or
fistp
mov
xchg
lods
cmp
pushf
mov
nop
fldenv
in
movs
xchg
(bad)
push
ds
div
pop
outs
or
aaa
ins
shl
movs
sar
and
movs
xor
sub
bnd
mov
xchg
sahf
add
fld
out
jae
int3
cmp
and
clc
pop
push
dec
fbld
or
push
(bad)
sbb
jne
jp
lahf
cmp
les
cdq
mov
dec
in
shl
push
pop
cmp
mov
rol
mov
out
push
xchg
xchg
call
pop
fdiv
inc
cmps
cmp
(bad)
popf
addr16
mov
or
mov
mov
ss
pop
cld
xlat
outs
sub
jl
cmc
sbb
or
mov
ins
pushf
nop
pop
test
ficomp
xchg
xor
cdq
ret
jmp
push
dec
fnstenv
mov
pop
icebp
add
pop
sbb
aas
xchg
push
cmps
fimul
js
inc
cmc
adc
pop
mov
jb
sub
mov
and
scas
cmc
cs
daa
lahf
xchg
leave
jbe
or
push
test
sub
in
mov
push
int
pop
vmovapd
mov
mov
arpl
mov
pop
xor
pop
test
popa
push
and
add
sbb
inc
stos
pop
shl
push
dec
aaa
ret
push
pop
pop
es
push
inc
sub
xchg
jb
pop
pop
jmp
mov
mov
jbe
add
push
pop
enter
jb
outs
paddb
cmp
fmul
ins
fadd
jg
jne
adc
clc
sahf
adc
int
retf
ret
pushf
push
ds
outs
movs
fmul
ret
push
push
jns
xor
push
arpl
aad
ins
dec
scas
xor
jge
mov
inc
movs
into
pop
rcr
adc
pusha
xchg
mov
(bad)
lea
add
mov
mov
loopne
push
sub
inc
fmul
test
iret
lahf
xchg
push
(bad)
out
movs
sti
leave
mov
test
movs
push
dec
out
mov
imul
xor
mov
aad
and
je
test
movs
and
jnp
sbb
int3
movs
jl
dec
aaa
arpl
cmp
mov
je
inc
jne
rcr
arpl
push
lock
int3
jge
mov
aam
out
(bad)
sahf
retf
adc
inc
(bad)
xor
xor
dec
ret
popa
or
scas
sub
in
scas
dec
dec
(bad)
push
ret
jp
sbb
repnz
xlat
dec
in
lods
stos
xchg
cmc
js
or
ins
add
call
jp
lahf
add
xchg
in
dec
push
jl
or
test
in
mov
aaa
jno
mov
stos
ret
xchg
stos
les
(bad)
gs
push
int3
loopne
(bad)
adc
jae
aam
or
int
imul
(bad)
imul
icebp
loop
aaa
call
jns
movs
xor
aas
xchg
jbe
nop
into
and
xor
dec
clc
lock
stos
sub
(bad)
and
jmp
repnz
daa
inc
jp
xor
adc
sar
fist
clc
push
or
les
outs
dec
call
aad
inc
mov
sbb
add
xchg
inc
cld
cmp
cmp
jo
cmp
dec
mov
and
or
sahf
dec
xchg
dec
sbb
out
jg
pop
pop
fcmovnbe
inc
add
call
pop
jg
jnp
stos
xchg
mov
mov
xchg
loope
fwait
jo
cwde
push
mov
mov
mov
test
xchg
cs
pop
outs
add
outs
aam
xor
fisttp
jns
cmc
dec
cmp
sbb
(bad)
push
fdivr
dec
pop
and
pop
mov
adc
neg
mov
bound
sbb
call
cmps
scas
mov
stc
push
icebp
mov
inc
mov
dec
shl
fcomp
fcomp
hlt
inc
xor
in
cmp
fld
mov
jbe
sub
pop
mov
xchg
push
xor
fld
test
stos
cmp
push
pop
push
fnstsw
bound
enter
icebp
ret
sbb
xchg
sub
retf
xor
and
jae
mov
inc
lods
cmp
and
mov
ror
in
stc
ins
inc
push
and
scas
jae
dec
push
pop
push
jns
inc
jne
pushf
xchg
inc
mov
shl
retf
out
xchg
(bad)
pop
cld
mov
and
mov
fsubr
sub
stc
xchg
fisub
and
shl
sbb
fild
mov
fwait
ss
xchg
pop
jg
ds
inc
sub
lods
jb
cmp
inc
jnp
dec
data16
inc
cmp
or
ins
dec
adc
std
xchg
sub
jmp
int3
hlt
xchg
cmp
mov
(bad)
mov
add
rol
sbb
xor
stc
sti
cmp
push
cmp
aam
or
xor
sbb
xchg
push
loop
pop
or
push
adc
shl
(bad)
stos
cmps
sub
mov
(bad)
in
xchg
mov
sub
adc
inc
aam
ds
sbb
test
pop
add
jo
jg
cmps
push
clc
es
adc
ret
sbb
pusha
mov
add
jns
xchg
jo
ss
and
fmul
pop
dec
int3
and
ss
push
imul
cmps
add
mov
add
add
mov
jmp
std
test
(bad)
stos
ja
pop
sbb
adc
repnz
mov
jo
ja
xchg
mov
adc
xchg
dec
leave
aaa
popf
xchg
cmp
inc
aaa
cmps
jl
xor
in
adc
pusha
sbb
jbe
mov
pop
pushf
push
inc
fistp
add
push
mov
fnstsw
call
push
jmp
push
fnstsw
call
adc
mov
xchg
inc
sub
and
dec
jg
(bad)
mov
jle
out
or
inc
repz
(bad)
std
std
adc
pop
cmp
movs
out
fidivr
mov
scas
sar
leave
(bad)
mov
test
pop
test
mov
adc
mov
and
lea
mov
pop
cmp
adc
mov
aaa
xor
dec
dec
fidiv
fcom
push
repz
cmps
dec
call
outs
sbb
jecxz
fbld
mov
pop
jp
xchg
mov
sub
stos
aaa
arpl
cmp
in
mov
int3
shl
es
cli
imul
push
in
push
xchg
mov
(bad)
iret
lahf
mov
rcl
sbb
imul
adc
mov
test
pop
push
push
mov
pop
adc
mov
dec
adc
sbb
(bad)
or
into
ror
xchg
push
sbb
icebp
xor
cmp
adc
adc
push
out
sub
fild
dec
pop
push
dec
adc
xor
push
fst
push
push
xchg
aaa
lock
inc
mov
adc
inc
cmc
cs
xchg
or
(bad)
cdq
(bad)
mov
leave
mov
out
xchg
not
or
hlt
push
jle
xor
clc
dec
mov
inc
jb
sub
shl
mov
arpl
js
mov
xor
pop
movzx
outs
ret
push
push
mov
cmps
mov
jmp
cdq
mov
fisub
cmp
push
(bad)
dec
cmp
adc
in
sub
sub
rcl
or
imul
mov
mov
(bad)
mov
call
xor
enter
push
test
sbb
add
fisttp
and
mov
jno
test
push
ficomp
jge
in
mov
sbb
mov
ror
xchg
xchg
inc
loope
or
pop
popf
sub
xor
lock
aam
xchg
cmp
enter
dec
mov
and
mov
add
pop
faddp
xchg
sub
rcl
in
(bad)
cdq
push
mov
mov
ret
mov
dec
xchg
lods
jg
push
clc
int3
sub
js
dec
cmp
dec
push
call
fnsave
div
jbe
call
mov
dec
cmps
sub
popa
int
movs
ds
jle
shl
xchg
int3
lock
sub
imul
bnd
popf
xchg
idiv
hlt
inc
add
ret
out
retf
or
loope
aaa
adc
push
test
ret
std
pop
retf
stos
inc
loope
pop
push
int
ins
jp
or
retf
hlt
adc
mov
pop
jecxz
loope
jmp
jmp
out
scas
xchg
fninit
lahf
mov
cmp
pop
inc
xor
add
xor
add
sub
mov
mov
retf
or
sbb
(bad)
add
add
add
ins
xlat
mov
out
bound
dec
inc
hlt
cmps
test
sub
lods
cmc
(bad)
xor
push
jmp
or
ds
cmp
dec
xchg
std
mov
cdq
lock
in
data16
call
adc
cwde
or
inc
jecxz
test
fxtract
sub
adc
mov
mov
retf
sbb
sar
(bad)
mov
cmp
mov
fmul
jmp
pop
fwait
mov
inc
stos
ret
and
repz
inc
fbld
push
aaa
test
retf
adc
sbb
stc
inc
fcom
push
aad
cmp
mov
jne
mov
sbb
cmp
push
stos
aaa
stos
pop
cmp
int
fld
and
cmp
jge
push
or
nop
js
test
pop
retf
aaa
push
pop
and
mov
test
adc
sbb
cmp
movs
(bad)
jmp
jl
or
and
dec
push
pop
jmp
hlt
inc
sahf
sbb
dec
pop
sbb
mov
mov
fsubr
aam
jle
jecxz
neg
stos
loopne
cld
pop
mov
add
mov
dec
add
jbe
adc
bound
xchg
pop
int
pop
dec
js
adc
int3
aaa
sbb
add
jmp
rcr
mov
pop
iret
jmp
daa
jae
pop
fs
cwde
mov
or
iret
xchg
repnz
jns
repz
(bad)
(bad)
mov
fild
push
mov
jg
movs
pop
mov
std
leave
inc
cwde
aad
(bad)
pushf
cmp
cmp
dec
cmp
lds
fst
sub
push
data16
or
pusha
jbe
cld
into
mov
dec
dec
sbb
sub
xor
hlt
movs
popf
pop
xchg
cmps
fidiv
loope
es
push
cli
sub
cmp
cmp
or
repz
leave
jmp
jne
add
pusha
sar
ins
xchg
sub
mov
cdq
rol
mov
div
jb
inc
and
in
mov
outs
bound
sub
mov
push
loop
and
repnz
lds
lahf
jle
push
push
lock
xchg
repnz
scas
in
sub
data16
mov
push
loopne
call
ds
or
xchg
scas
fist
mov
loop
xor
je
out
dec
hlt
and
or
in
push
push
outs
mov
jo
mov
ror
mov
imul
into
cmp
js
push
scas
and
and
ret
test
stc
test
push
movd
jnp
ficomp
ror
std
dec
push
or
cli
xor
jbe
jp
(bad)
in
inc
and
push
pop
xchg
rol
add
or
jmp
dec
pop
stc
movs
adc
enter
push
xor
leave
pop
cmp
movs
cld
mov
aas
mov
or
jg
std
inc
dec
mov
(bad)
pop
inc
cmps
rcr
inc
push
loop
addr16
xchg
or
or
xchg
dec
(bad)
shl
cwde
sub
pop
lea
push
inc
xchg
test
(bad)
in
mov
mov
xchg
or
jle
inc
mov
out
cmp
push
adc
mov
cmp
mov
jmp
mov
std
mov
jecxz
es
add
dec
or
jmp
aas
mov
iret
xchg
xchg
mov
fsubrp
inc
sub
xchg
fstp
cwde
js
mov
aaa
rcr
into
mov
mov
mov
addr16
pop
or
push
adc
push
ret
ror
ret
inc
daa
lock
fist
jb
jle
mov
das
(bad)
sbb
push
push
or
dec
stc
(bad)
inc
mov
adc
outs
sub
call
(bad)
std
sub
lods
cmc
mov
inc
mov
sbb
mov
sub
pop
imul
outs
xlat
add
jle
mov
scas
ret
add
sbb
add
add
jb
call
out
adc
jmp
cli
sub
push
enter
sbb
sbb
(bad)
aam
or
mov
mov
loope
repz
inc
out
cmp
sub
jge
scas
fbstp
int3
iret
je
mov
fmul
mul
stos
inc
nop
ficomp
xor
data16
pop
out
pop
(bad)
cmp
ret
(bad)
icebp
push
mov
jo
push
rcr
lods
fld
aad
xor
jmp
adc
(bad)
fs
pop
mov
xchg
loope
mov
jne
jmp
pop
fadd
int3
xor
leave
jno
lds
mov
repnz
xor
and
dec
call
aas
fs
fdiv
pusha
xor
out
push
add
sti
call
cli
or
lods
popa
les
out
jge
(bad)
sub
cmp
(bad)
jno
xchg
das
inc
cmp
js
into
adc
mov
and
dec
mov
dec
bswap
mov
mov
retf
pop
pop
test
xor
(bad)
pop
add
sbb
and
hlt
xchg
mov
fisttp
adc
xor
inc
cmp
mov
std
mov
lahf
std
xchg
(bad)
cdq
push
in
sbb
bound
test
out
adc
xchg
test
fild
jge
ja
int
xor
jp
dec
add
xchg
frstor
inc
inc
cmp
push
es
call
or
icebp
and
dec
jae
push
hlt
push
push
das
cmp
and
popf
mov
mov
test
xchg
pushf
fdiv
push
inc
cmps
fneni(8087
sbb
sbb
jns
inc
inc
(bad)
pusha
repnz
(bad)
retf
pop
sbb
or
xchg
js
sub
clc
addr16
jge
dec
shr
(bad)
imul
hlt
mov
jo
daa
call
jmp
mov
cdq
sub
pxor
xor
hlt
rcr
movs
add
lea
pop
inc
dec
mov
xchg
inc
add
mov
ins
pusha
sub
sbb
cmps
call
aam
inc
in
outs
sub
imul
rcr
push
ret
mov
fsubr
or
jge
mov
inc
dec
mov
popf
sbb
fild
pushf
jmp
rcr
add
and
mov
add
inc
jae
xor
sub
or
enter
dec
data16
(bad)
test
push
leave
mov
jmp
or
dec
mov
xor
pop
add
sub
push
mov
fsub
outs
retf
js
and
test
push
xor
xor
add
arpl
in
test
js
shl
adc
clc
lea
das
cmps
repnz
leave
inc
mov
push
hlt
add
mov
loopne
cmps
mov
mov
adc
call
mov
or
xchg
pop
mov
adc
test
pop
fist
(bad)
push
sbb
mov
sti
pop
scas
mov
jle
jnp
pushf
adc
sbb
mov
lds
mov
leave
scas
jbe
or
lds
iret
inc
fdiv
and
sbb
sub
rcl
(bad)
cmc
pop
and
mov
out
add
sti
xor
mov
add
push
cmp
xchg
imul
fbstp
and
inc
or
sbb
mov
sub
(bad)
(bad)
call
ret
mov
je
xor
xchg
popf
clc
or
cld
xor
push
mov
xor
arpl
pusha
xor
call
mov
adc
cmps
aad
lods
pop
push
dec
(bad)
dec
fiadd
clc
rol
jae
and
enter
add
mov
aad
out
hlt
fnstcw
popa
inc
pop
inc
aam
xchg
aaa
cmp
xor
sbb
mov
in
adc
hlt
inc
lods
jae
loop
ror
add
xchg
mov
mov
pop
push
add
dec
xchg
lds
add
ror
lods
dec
mov
push
adc
outs
xor
sub
out
(bad)
mov
xor
(bad)
rcl
jecxz
add
mov
mov
inc
sbb
jae
stos
loop
push
xor
push
mov
sar
cmp
cmp
dec
and
cmps
cmp
hlt
pop
xchg
push
loope
add
loopne
dec
xchg
cdq
aam
or
sub
pop
and
nop
mov
out
icebp
jno
loop
enter
xchg
retf
repz
xchg
cs
xchg
sbb
xchg
movs
neg
xchg
add
sbb
rcl
xor
adc
mov
ds
mov
dec
jle
lahf
push
add
cmp
fistp
fild
mov
inc
cmp
add
fistp
xor
shr
int3
mov
cmc
aas
fist
dec
jp
scas
cmc
xor
sbb
pop
fadd
(bad)
addr16
or
pop
xor
or
js
clc
cdq
test
daa
xchg
adc
jne
mov
in
xor
iret
mov
mov
inc
shr
mov
pop
xor
mov
mov
hlt
or
push
mov
sahf
in
sbb
pop
test
call
(bad)
cmps
imul
sub
fdiv
push
inc
lods
xchg
movs
retf
pop
ret
rcl
dec
lods
and
add
push
push
add
repz
mov
jo
jnp
push
fwait
xchg
dec
test
int3
mov
cmp
mov
xor
ret
sbb
push
into
lods
adc
add
fucom
(bad)
jbe
fcomp
ins
xor
push
inc
jmp
mov
inc
aam
pop
test
add
js
imul
add
inc
imul
push
pop
jno
addr16
imul
cmp
test
dec
xor
pop
pop
xlat
sub
adc
xchg
fsubr
inc
scas
pop
fstp
push
push
stos
jge
add
pop
rcl
mov
js
sub
hlt
gs
cmps
cs
hlt
stc
inc
dec
adc
scas
sub
stos
bound
into
pop
sbb
adc
bound
push
bound
or
adc
xor
loop
cmp
imul
call
lods
shl
cmp
stos
inc
inc
icebp
xor
inc
(bad)
out
sub
push
ins
inc
ret
cdq
loopne
pop
dec
scas
(bad)
dec
and
loop
int3
push
mov
(bad)
jne
xor
or
jmp
push
out
or
cmp
std
and
fmul
adc
mov
or
push
and
push
xchg
arpl
sti
cmc
outs
test
sbb
into
sub
sbb
pop
stos
xchg
leave
rcr
jl
(bad)
data16
jne
cmp
outs
arpl
add
ja
cdq
stos
and
outs
addr16
xlat
fcmovu
icebp
in
push
dec
in
push
repz
add
das
or
cmp
cli
les
mov
std
and
or
xchg
mov
jg
in
loop
push
(bad)
lods
inc
push
push
mov
(bad)
cmp
dec
aam
inc
bound
sahf
mov
ret
mov
adc
loopne
pop
dec
xlat
enter
fdivr
cmp
cld
call
aad
ret
mov
ss
mov
stos
outs
jne
pop
inc
push
(bad)
pop
fbstp
bound
mov
(bad)
(bad)
inc
nop
pop
fs
daa
add
cdq
mov
cmp
push
lea
ret
std
dec
aad
mov
stc
cmp
pop
xor
cmc
sbb
pop
pop
jnp
jmp
inc
xor
pop
shl
clc
loopne
ror
movs
ror
arpl
pop
inc
loopne
rcr
mov
cmps
(bad)
imul
ja
dec
jnp
inc
cmp
out
ins
iret
push
pop
ret
xor
mov
enter
sbb
cmps
adc
add
adc
shl
out
fistp
popf
out
pop
adc
lods
loope
(bad)
fild
mov
mov
paddusb
xchg
ret
pop
pop
pushf
cmp
in
jb
aaa
xchg
add
mov
xor
pop
pop
mov
(bad)
clc
or
daa
jp
int3
pop
mov
inc
inc
mov
stos
jns
sbb
push
rcr
fwait
aam
pop
add
push
movs
enter
sub
xor
int3
or
mov
adc
fild
jp
inc
outs
in
sub
sbb
xlat
dec
pop
sbb
jno
mov
pop
sub
cmc
popf
aaa
inc
ja
push
mov
pop
ffree
mov
ret
mov
je
sub
mov
aad
retf
idiv
sahf
sbb
mov
mov
vmovupd
jl
sub
stos
mov
push
ins
lods
ss
jmp
mov
adc
xchg
xchg
and
sub
cli
xchg
ins
ss
mov
dec
out
inc
pop
test
or
and
test
jecxz
jg
pop
jg
inc
addr16
ja
mul
js
xor
not
mov
imul
push
inc
inc
scas
and
icebp
push
aam
xchg
lds
dec
ds
retf
sbb
inc
pop
push
jmp
daa
stc
xchg
mov
clc
gs
dec
mov
pusha
pop
mov
inc
dec
aad
jg
lods
or
fist
push
popf
popa
mov
cmp
mov
xor
mov
retf
(bad)
pop
ret
fdiv
shl
retf
xor
scas
jo
mov
xor
sub
sbb
cmps
stos
adc
or
inc
jl
ror
sub
cmps
rol
cmps
xchg
jg
sub
(bad)
pop
push
or
pop
fnstcw
retf
into
add
lock
int
lods
faddp
lods
hlt
add
xor
test
mov
pop
sbb
lods
cmps
mov
cmp
xor
jne
push
shl
icebp
sub
cli
sbb
dec
adc
push
mov
dec
inc
sub
cmc
inc
mov
loop
jp
push
lahf
xchg
adc
jns
mov
dec
in
xor
push
sub
loop
int
jecxz
push
test
xchg
(bad)
sub
push
(bad)
and
ret
dec
sub
add
mov
pop
pop
in
lods
dec
inc
js
sub
int3
xchg
outs
test
cmp
cdq
xlat
add
xchg
cmp
fmul
sbb
inc
mov
sahf
xchg
test
(bad)
jge
add
int
movs
and
dec
scas
jp
xor
inc
jbe
or
inc
add
jo
sti
scas
mov
inc
hlt
jge
pop
push
out
and
mov
or
int3
mov
push
pop
lods
int
pop
shr
sub
inc
retf
scas
sbb
js
jae
dec
push
stos
xor
imul
daa
daa
js
xchg
dec
dec
mov
mov
adc
nop
fadd
clc
int
add
repz
lock
sub
(bad)
mov
cmp
mov
or
(bad)
fisttp
sub
rcr
call
ss
inc
and
retf
mov
cmp
es
xchg
dec
xor
test
sub
xor
mov
xor
and
mov
push
stos
cmp
mov
rcr
xchg
xor
push
mov
pop
(bad)
sbb
int3
daa
cmp
cmp
and
aas
lods
mov
xchg
push
mov
jns
sub
push
cmc
pop
mov
(bad)
(bad)
cmc
mov
ret
cdq
sub
mov
test
mov
mov
lock
ins
shr
mov
mov
pop
fisttp
retf
stos
push
inc
xchg
in
or
int
pop
pop
ret
dec
mov
sub
adc
in
fsub
dec
aad
(bad)
jl
call
jge
fsubr
ror
dec
pushf
sub
cld
mov
es
pushf
outs
dec
mov
fwait
loope
jns
pop
mov
sti
pcmpeqd
add
(bad)
pop
push
jg
out
mov
jns
push
cmp
cmps
sub
push
pop
push
cmc
push
(bad)
test
repz
mul
push
je
ss
and
rol
sahf
lock
neg
test
mov
mov
xchg
dec
jae
les
fnstcw
es
sbb
repz
ret
mov
pop
inc
push
sti
dec
xor
xor
sub
mov
mov
or
ret
push
outs
jg
cmps
call
fsubr
mov
cdq
adc
sbb
fidiv
mov
call
stos
es
(bad)
xchg
cwde
out
pop
pop
jge
and
scas
xchg
xchg
adc
jnp
mov
push
inc
out
cmp
and
xor
or
popf
aaa
or
rol
gs
mov
call
test
in
mov
ja
mov
xor
or
push
mov
dec
mov
nop
xchg
aam
sbb
cmp
fdivr
fmul
(bad)
or
and
shr
pop
nop
jecxz
adc
push
sub
mov
fistp
int3
dec
mov
jb
(bad)
in
push
jbe
stos
ucomiss
and
jmp
rol
repnz
dec
out
sub
or
xchg
int
dec
mov
or
cmc
mov
xchg
std
cmp
xchg
in
push
pop
rep
(bad)
ss
push
or
pusha
sub
fisttp
scas
cmc
icebp
rcl
mov
mov
cmp
dec
xchg
call
scas
jle
mov
ror
fs
enter
movs
hlt
out
pop
mov
push
aam
inc
out
mov
fiadd
bnd
out
leave
add
inc
cmp
cmp
cmc
loop
xchg
jl
xchg
jne
ret
jb
js
push
cmc
xchg
not
pop
push
and
mov
pop
push
jns
xor
sub
mul
cwde
sub
xor
add
cmp
xchg
push
hlt
add
sub
add
push
test
add
addr16
mov
stos
out
rol
mov
add
lahf
xor
sbb
inc
push
push
jp
push
jge
mov
pop
dec
data16
mov
fisub
pop
jg
cmps
mov
fs
stos
push
add
(bad)
adc
mov
gs
cmp
pop
aas
popf
xchg
and
jno
ins
pop
jae
cmp
enter
xchg
adc
enter
loop
mov
stos
aam
into
dec
pop
or
in
imul
push
mov
and
sahf
movs
inc
mov
mov
ins
sbb
mov
adc
test
(bad)
pop
add
jb
mov
lds
jmp
jno
test
inc
mov
xor
mov
add
pop
pop
and
mov
push
jg
and
adc
test
int
mov
aas
inc
dec
xor
jb
push
sti
stc
fdiv
xor
test
mov
mov
xor
addr16
lods
movs
popf
fisub
leave
pop
add
dec
xchg
sub
fisubr
adc
push
add
xchg
cmp
hlt
data16
cs
add
(bad)
retw
xor
xchg
add
jno
out
out
ret
mov
icebp
xchg
and
mov
jle
inc
jg
jmp
lods
sub
inc
aad
into
mov
mov
mov
xchg
and
(bad)
jle
pop
and
ror
arpl
jecxz
cmp
mov
jae
addr16
enter
in
push
xor
add
xchg
add
dec
mov
shl
push
push
adc
sbb
inc
inc
inc
xchg
inc
call
ss
xchg
cld
mov
adc
jae
xor
stos
pop
out
imul
movs
pop
push
sub
dec
pop
cmp
and
cmp
add
dec
fadd
sbb
aad
sar
push
cli
mov
aaa
sub
pop
jl
adc
add
or
jbe
xor
leave
cmp
adc
call
cmp
jae
cmp
add
cld
leave
ins
or
mov
jbe
in
push
rol
mov
xor
gs
sbb
mov
and
mov
jns
mov
fcomp
add
sub
psubsw
mov
ror
cli
cmp
jg
sbb
arpl
in
push
adc
ins
js
out
jnp
cmc
sahf
lds
ja
xchg
push
(bad)
xor
inc
arpl
mov
xchg
rcl
mov
rol
lea
std
mov
(bad)
push
and
outs
pusha
jg
push
in
push
outs
lea
mov
ins
aad
jae
adc
and
scas
(bad)
retf
movs
dec
pop
inc
mov
pop
in
adc
xchg
mov
call
lea
pop
lock
ja
jg
inc
fst
nop
sub
lea
loope
cmp
call
inc
iret
jb
mov
jo
ds
pop
test
pop
jb
add
lea
xor
aad
push
cmp
cmps
mov
ret
push
fld
aad
(bad)
jns
ins
dec
xchg
addr16
add
mov
pusha
shl
jge
mov
sub
arpl
nop
dec
push
adc
inc
aad
popa
fs
jo
popa
and
push
cmp
sbb
push
or
and
repz
mov
or
es
fwait
retf
xchg
pop
mov
sub
sbb
sbb
mov
mov
aad
or
pusha
xchg
cs
add
outs
mov
fs
into
push
mov
idiv
mov
jbe
push
out
inc
dec
and
stos
mov
mov
outs
lock
add
jbe
loopne
jmp
arpl
imul
out
or
aad
lds
aad
push
mov
test
mov
add
mov
cmp
stos
sbb
imul
or
jecxz
jle
cmc
xchg
stc
es
aam
or
ds
std
mov
mov
in
xchg
mov
push
div
pop
sub
inc
in
ds
cmp
xchg
enter
test
imul
(bad)
test
fidiv
mov
push
sub
aam
mov
jno
les
mov
add
(bad)
scas
test
outs
cli
sbb
retf
cmp
lock
repnz
push
push
pop
mov
lea
stc
test
(bad)
add
ja
jle
cdq
mov
sbb
xchg
test
push
lods
retf
mov
in
enter
call
or
and
test
sub
xor
ficomp
inc
cmp
dec
in
std
(bad)
popf
out
push
dec
pop
jb
ror
nop
aam
not
add
xchg
scas
repnz
arpl
(bad)
in
stc
dec
movs
loopne
add
cmp
adc
cs
mov
pop
xchg
add
mov
cmp
cli
push
movs
out
popa
arpl
test
pop
movs
ret
lock
ins
cmp
shl
and
cld
add
pop
mov
jmp
xor
int3
sub
mov
fild
sub
scas
stos
cmp
iret
les
xor
pop
inc
daa
jne
fild
out
scas
and
xchg
pop
jbe
rcl
push
cmp
cmps
out
pop
mov
or
xor
fldenv
push
inc
retf
test
xchg
push
xchg
jae
mov
sbb
jmp
or
idiv
enter
rcl
push
stc
iret
in
hlt
mov
(bad)
cmp
out
mov
mov
rcl
adc
sub
mov
mov
mov
or
ja
mov
cmp
add
mov
add
loope
and
scas
mov
inc
adc
push
xchg
push
push
xchg
mov
mov
xor
shl
inc
and
push
pop
jae
inc
mov
inc
dec
sti
push
sub
and
jne
rcr
pop
pop
jbe
jge
loopne
sar
xchg
call
loop
and
mov
cmp
(bad)
jae
push
cmp
jle
jmp
mov
xchg
mov
dec
cmp
and
mov
imul
push
push
fisttp
xor
xor
fdiv
push
jp
repnz
cwde
pop
loop
(bad)
and
mov
dec
aaa
jne
aas
mov
pop
outs
adc
mov
daa
mov
inc
cdq
dec
inc
dec
mov
pop
into
fidiv
jle
aad
push
inc
sahf
sub
ja
es
add
loop
pushf
dec
and
call
jb
mov
mov
sbb
pop
stc
jle
add
jbe
movs
lods
gs
jae
out
loope
mov
imul
and
iret
jmp
pusha
pop
xchg
sub
jmp
cmps
in
es
(bad)
fiadd
dec
mov
pusha
xor
jno
rcr
fist
cdq
sahf
mov
sbb
int3
(bad)
sahf
mov
adc
into
cmp
push
jp
jmp
and
cmp
movs
jg
ja
outs
clc
push
mov
mov
xchg
aam
pop
pop
nop
jb
lds
sbb
xchg
popf
arpl
dec
jne
or
jns
inc
mov
xchg
pop
mov
(bad)
into
(bad)
dec
loop
idiv
mov
daa
sbb
outs
in
pop
pop
add
inc
es
lods
cwde
fcom
daa
sar
cmps
jecxz
iret
fidiv
ficomp
mov
sbb
fdivr
ss
fisub
arpl
dec
xchg
clc
sub
(bad)
retf
mov
push
push
inc
jne
retf
fldenv
mov
cmp
mov
push
fstp
or
or
mov
mov
and
fcomip
mov
dec
(bad)
aaa
mov
mov
mov
adc
fsubr
or
rcl
mov
scas
jb
mov
dec
dec
inc
ror
add
cdq
imul
data16
push
sub
xchg
lods
jo
xor
sbb
stc
sub
shl
and
sbb
fdiv
mov
jne
xchg
inc
retf
xor
test
test
mov
push
mov
inc
and
push
mov
cmp
jmp
xchg
pop
jns
fisttp
xchg
aam
and
push
xor
loop
imul
cmps
pop
repnz
add
add
data16
enter
dec
shl
(bad)
push
ficom
or
ds
vmovhpd
test
jae
xor
sub
movs
xor
sub
add
push
js
test
mov
test
mov
pop
sbb
fwait
sbb
fcomp
xor
enter
stos
lods
aas
sahf
jg
pusha
mov
rcr
mov
jno
sub
inc
movs
lahf
mov
add
enter
scas
int
mov
je
mov
cs
(bad)
aam
jg
jg
mov
sbb
push
add
ficomp
arpl
add
mov
loopne
jecxz
bound
jmp
jae
std
lods
push
jg
push
cmp
imul
ss
dec
dec
in
js
out
lods
dec
es
hlt
fistp
sub
cmp
ins
and
fild
test
adc
cmp
mov
xor
cmp
ja
in
shl
cmp
adc
outs
data16
popa
xchg
ja
in
and
sub
or
sbb
push
sub
inc
xor
push
xor
cmc
gs
mov
repnz
inc
cdq
iret
jg
pop
sbb
jnp
arpl
add
sub
fadd
dec
add
cli
fild
and
lods
scas
(bad)
dec
push
clc
inc
cli
xchg
dec
cmps
rcl
fwait
and
cld
(bad)
sti
in
jo
and
jl
icebp
adc
dec
xor
mov
sub
sub
xor
adc
jp
out
fdiv
mov
ins
pop
aad
push
out
xlat
mov
loope
inc
or
mov
adc
or
cmp
dec
add
push
mov
and
repz
call
out
sbb
dec
int3
xchg
loope
retf
and
pop
in
sub
cmps
mov
scas
imul
xor
icebp
push
mov
jmp
out
sbb
pop
(bad)
imul
stos
(bad)
out
push
pop
inc
shl
sub
push
add
push
(bad)
mov
mov
xor
mov
push
sbb
es
adc
mov
and
add
rol
sub
jne
imul
out
mov
repz
jge
mov
add
mov
clc
cld
inc
sar
mov
sub
and
adc
rcr
xchg
mov
jb
or
push
aaa
inc
add
ins
xchg
js
les
xor
pop
pop
lds
stos
rcr
mov
or
outs
(bad)
int3
(bad)
retf
sti
push
dec
or
pop
mov
inc
test
sbb
outs
xchg
sar
clc
jbe
shr
lods
xchg
dec
or
jns
cmc
or
cmps
(bad)
std
pop
sub
xor
xchg
push
stc
pop
sbb
cwde
inc
sbb
stos
aaa
dec
add
shl
in
or
dec
loope
cmp
mov
push
sbb
dec
scas
jle
dec
or
inc
inc
aas
mov
xchg
dec
mov
(bad)
push
mov
cmp
pop
adc
sar
inc
xchg
out
cdq
(bad)
jb
add
xchg
dec
xchg
jecxz
inc
repz
mov
shl
outs
dec
add
mov
daa
dec
jl
clc
mov
clc
out
jbe
xor
lahf
lods
sbb
arpl
dec
cld
fsub
mov
cmp
cs
pusha
pop
sbb
aam
idiv
sbb
cdq
in
sub
jbe
mov
xchg
xchg
adc
lea
loopne
adc
dec
mov
leave
mov
pop
sbb
push
pop
mov
scas
mov
or
dec
mov
lahf
imul
cmp
push
mov
mov
(bad)
(bad)
adc
lods
mov
popf
mov
not
(bad)
push
mov
sbb
add
cmpxchg
cmp
jmp
data16
in
imul
lock
cmp
push
mov
inc
jnp
stos
es
or
cmp
out
and
and
mov
cmp
mov
mov
jbe
push
cmps
ins
adc
lds
mov
shl
inc
retf
les
nop
jle
sub
push
lds
add
loope
(bad)
dec
sahf
cmc
(bad)
sti
ins
cdq
imul
xor
aas
mov
cmc
cli
sub
push
gs
popa
(bad)
sbb
inc
cwde
dec
adc
jmp
mov
mov
jmp
cs
cmovbe
bound
sbb
in
adc
fdivr
xor
pop
and
pop
imul
(bad)
adc
out
inc
push
ja
std
outs
push
nop
xchg
adc
frstor
popf
dec
xchg
and
dec
sti
push
mov
cmps
mov
les
pop
inc
cmp
bsr
mov
outs
mov
bound
sbb
inc
xor
imul
push
cld
fidivr
adc
out
sbb
jne
sub
loope
out
xor
retf
mov
test
adc
not
sbb
dec
(bad)
dec
fiadd
inc
lds
pushf
pop
loopne
push
dec
imul
lea
aam
cmp
lods
push
xchg
pop
xor
addr16
loope
dec
mov
call
push
scas
or
mov
loopne
in
dec
mov
(bad)
test
lahf
out
jae
push
push
jmp
push
pop
leave
test
sahf
call
xor
stos
out
jmp
sbb
aaa
sub
push
pushf
ja
ret
xor
movs
mov
lds
push
cmp
sbb
adc
js
aas
test
faddp
mov
cwde
call
(bad)
mov
pop
aaa
ds
ror
sbb
js
fisttp
jmp
movs
mov
outs
xchg
sbb
pop
push
inc
aas
xor
in
outs
push
loopne
lock
push
jbe
in
lahf
jnp
mov
ss
in
iret
add
(bad)
cld
inc
pop
nop
pop
into
xchg
xor
adc
jnp
call
(bad)
es
cmps
push
inc
xchg
jle
loopne
xor
sbb
mov
pop
and
fiadd
les
into
xchg
fisttp
popa
or
cmp
sbb
out
test
dec
rcl
iret
mov
push
add
rol
cmc
add
int
nop
or
stc
mov
fwait
rcr
inc
xor
pop
in
das
ret
xor
(bad)
rcl
hlt
dec
test
std
jge
adc
outs
cmp
and
jg
icebp
xor
xchg
jbe
dec
mov
cwde
(bad)
loop
fdiv
xor
add
ins
test
push
js
or
jns
mov
stos
retf
fucomip
in
je
dec
fild
xchg
fild
mov
ins
jb
cmp
xor
or
out
mov
jnp
mov
sub
cdq
or
adc
fiadd
mov
pushf
xor
add
(bad)
retf
movs
xchg
or
or
cmc
enter
mov
jp
ja
mov
and
pop
mov
add
loope
mov
mov
mov
mov
fisubr
sbb
pusha
sbb
fdivr
out
pushf
pop
mov
sub
cmps
imul
pop
sbb
nop
cmp
sbb
dec
xor
push
jmp
pushf
mov
pop
rol
aaa
push
test
ret
sbb
jmp
or
std
iret
sbb
sbb
mov
hlt
pop
adc
dec
test
push
push
out
rol
inc
or
es
pop
ins
mov
outs
(bad)
jmp
lock
pop
js
cmps
dec
mov
mov
xor
mov
or
cmp
xchg
dec
pop
or
jo
xor
jne
call
add
sahf
push
inc
adc
jb
lahf
daa
xchg
mov
inc
std
xchg
xchg
loopne
push
add
xor
xchg
retf
xchg
pop
repz
lods
adc
sub
adc
push
dec
jnp
add
or
pushf
repnz
loop
les
(bad)
cs
retf
es
xchg
inc
and
pop
(bad)
dec
(bad)
ss
mov
mov
das
fwait
repz
xor
and
xchg
jb
xor
pop
adc
push
mov
dec
in
push
les
push
cmp
jle
lds
inc
(bad)
cdq
mov
pcmpgtb
jb
jl
imul
mov
sbb
cmc
dec
clc
dec
les
jp
leave
icebp
dec
or
lahf
sbb
fidiv
cld
lds
dec
adc
mov
lock
gs
jle
adc
mov
or
xor
xchg
pop
jns
int3
sub
push
dec
outs
sar
cmp
int
xlat
cmp
xchg
xchg
scas
jnp
sbb
adc
lea
outs
scas
xchg
fcmovnb
add
ficomp
cmp
and
xchg
xor
push
imul
adc
add
sub
xor
dec
adc
repnz
(bad)
(bad)
fs
dec
or
push
sahf
mov
dec
dec
fmul
in
cmp
mov
xor
or
jo
xor
lods
mov
inc
dec
jp
into
mov
imul
lahf
(bad)
push
loope
add
mov
jmp
xor
les
inc
push
xor
pop
cmp
(bad)
scas
sbb
mov
in
cmp
or
mov
sbb
in
hlt
retf
pop
sub
dec
pop
jbe
jb
push
call
dec
jmp
sub
rol
sub
inc
and
popw
fsub
inc
repz
push
and
inc
pop
fnstcw
push
nop
out
dec
add
retf
xchg
mov
fwait
mov
lods
ins
sub
je
retf
sub
inc
cli
loope
mov
jno
int3
fisub
jne
push
outs
fcmove
iret
lock
cmp
(bad)
retf
aad
adc
jo
mov
loopne
mov
pushf
jp
das
and
shr
mov
cmc
sub
jge
sub
or
in
(bad)
pop
call
push
xor
mov
movs
je
mov
jp
mov
jmp
xor
jne
cmc
dec
and
adc
jmp
push
add
push
jbe
jmp
outs
pop
into
mov
mov
call
call
das
dec
(bad)
or
sub
ins
stos
xor
arpl
je
jnp
adc
stc
lods
and
je
(bad)
movs
xor
rcl
dec
xchg
pushf
mov
ret
sbb
popa
xor
dec
pop
in
jne
xor
cmc
out
mov
mov
fisub
mov
test
ss
jae
sub
sahf
rcr
retf
inc
or
sahf
xor
add
std
inc
push
pop
adc
push
bnd
mov
pop
idiv
xor
mov
idiv
mov
mov
das
and
dec
push
popf
into
retf
jb
aad
loopne
adc
pop
das
and
fstp
xor
int
pop
rcl
push
aad
sbb
call
add
call
and
pop
and
inc
jno
sti
retf
inc
adc
int
add
jae
aad
ror
int
imul
jmp
xchg
mov
cmp
mov
popa
mov
sub
daa
aam
out
pushf
int3
or
aas
popf
popf
cli
add
shr
pop
dec
jmp
jle
and
cdq
mov
cmps
stos
add
dec
inc
data16
daa
xchg
inc
not
je
pop
push
jnp
dec
or
(bad)
sub
inc
ror
xchg
pop
xchg
jge
and
inc
jle
mov
and
fsub
arpl
xlat
shr
daa
gs
and
sub
jl
inc
and
mov
cmp
fsub
xchg
mov
xor
jle
ror
dec
sti
into
sub
rcl
loopne
lahf
mov
je
push
sub
int
mov
enter
mov
dec
lods
icebp
xchg
mov
mov
in
cmp
cmp
sti
stos
mov
jo
lods
sti
es
add
add
jge
dec
mov
xor
sub
mov
xchg
push
and
mov
jae
sbb
cmps
es
inc
pop
ss
xor
mov
sub
pop
xchg
push
cmp
fstp
and
add
lods
jg
nop
xchg
ja
dec
dec
fcmovnu
jns
sbb
or
arpl
mov
mov
imul
rol
dec
lods
pop
loop
sti
sbb
cmps
aam
je
mov
ror
dec
loope
out
jbe
sbb
push
dec
push
jp
test
outs
pop
mov
outs
cmps
jl
dec
repnz
inc
or
and
stos
test
jmp
sti
stc
add
test
out
push
mov
push
push
in
sahf
sbb
sbb
inc
and
xchg
inc
repnz
(bad)
scas
pop
out
dec
call
pop
mov
xchg
in
aad
shl
ja
shr
in
pop
mov
xchg
(bad)
push
cmc
retf
adc
mov
(bad)
int3
dec
lds
adc
inc
or
fidiv
jecxz
inc
xlat
dec
fidiv
inc
in
push
stos
(bad)
sbb
clc
jbe
pop
imul
fs
xchg
jle
cld
fst
test
dec
mov
imul
sbb
sub
int
add
(bad)
ins
mov
js
ds
test
mov
mov
push
(bad)
xchg
xchg
into
jbe
push
arpl
rcr
push
and
std
and
arpl
mov
sbb
cmp
xor
mov
int3
inc
mov
jbe
mov
xchg
cmps
sbb
sub
jmp
add
push
xchg
dec
inc
repnz
leave
dec
adc
das
push
movs
and
popf
and
mov
daa
retf
mov
data16
fsubp
jbe
das
sub
jl
sar
in
shl
cmps
adc
mov
pusha
xor
lahf
cmp
inc
adc
xor
pushf
cmps
in
out
sbb
push
jne
jns
fs
inc
(bad)
lods
pop
pop
dec
add
push
popa
js
sbb
pop
mov
add
mov
push
sub
mov
dec
and
mov
and
jecxz
shl
inc
fs
lods
sbb
xchg
and
jne
scas
mov
dec
push
loop
mov
popf
cmps
rol
out
pop
mov
cli
adc
xor
dec
out
repnz
jnp
inc
xor
pop
dec
sub
into
fcmovb
(bad)
cwde
lods
dec
inc
std
imul
stc
imul
dec
jnp
mul
mov
in
adc
sub
or
imul
sbb
aas
xlat
mov
rcl
xor
cmp
pop
mov
repz
sub
or
stos
adc
scas
or
neg
mov
dec
jns
push
or
popf
xchg
dec
xchg
out
add
aad
cmp
mov
test
xchg
lods
std
mov
dec
mov
dec
push
imul
imul
sbb
xor
mov
and
out
pop
cli
add
mov
sti
mov
leave
fs
jp
sub
push
push
xor
das
jne
jmp
xor
jle
pusha
push
scas
clc
pop
sbb
in
add
inc
inc
xchg
imul
pop
sub
add
rcl
inc
cmps
stc
sub
les
jge
out
pop
dec
inc
int3
inc
and
movs
adc
sbb
clc
nop
xor
pop
(bad)
(bad)
mov
add
stc
push
sahf
cs
mov
pushf
ja
das
adc
lea
hlt
xchg
sbb
mov
pop
dec
popf
ins
and
adc
mov
shl
sbb
repnz
leave
cmovs
xor
mov
sub
mov
inc
ds
sub
inc
cmp
mov
mov
sbb
in
inc
push
mov
and
push
mov
ret
lods
loope
js
or
xlat
jns
jnp
(bad)
in
call
out
int
pop
mov
inc
add
sub
and
div
gs
mov
psrlq
xchg
popf
push
out
cmp
sbb
shr
lahf
mov
lahf
push
inc
outs
aaa
int
sti
imul
popa
aas
sub
aaa
lock
pusha
fcom
pop
xchg
fld
or
sub
cs
mov
hlt
mov
out
jno
mov
retf
bound
cmp
gs
retf
inc
xchg
or
lahf
in
push
ins
inc
les
cs
fdivr
leave
pop
fwait
mov
out
mov
xchg
jnp
out
nop
(bad)
fld
clc
add
sub
inc
sub
fwait
(bad)
mov
sbb
jg
sub
jnp
(bad)
mov
test
(bad)
mov
hlt
lods
push
xchg
lods
mov
imul
scas
mov
sub
sub
cmp
(bad)
(bad)
test
inc
das
leave
adc
test
ins
or
cwde
pop
sbb
popf
fist
ret
gs
mov
cmp
popf
sub
xchg
push
imul
mov
inc
pop
mov
jne
push
ret
imul
mov
push
aas
cld
sar
and
push
pop
in
aad
shl
pop
cmps
mov
inc
int3
xchg
hlt
mov
pop
jb
or
dec
pop
int
mov
in
in
mov
fsubr
inc
jno
pop
dec
sbb
jg
xchg
add
xor
call
add
cmp
scas
cmp
or
inc
aas
movs
mov
push
jo
jmp
jbe
sub
hlt
test
ins
daa
cmp
adc
(bad)
lahf
sti
jge
add
fist
inc
ret
sahf
in
adc
cwde
mov
push
add
lahf
retf
push
cs
or
push
outs
add
out
ds
test
ret
lock
xor
xchg
ror
stos
nop
add
cmp
(bad)
inc
in
sub
fnstcw
adc
xchg
pop
jns
mov
mov
js
add
jbe
push
movs
mov
fmul
int
push
in
daa
sbb
adc
fnstsw
xchg
lock
inc
aam
sub
daa
fisubr
pop
xor
and
push
and
fdiv
ret
enter
cmp
and
test
or
xchg
mov
fwait
mov
stc
dec
jne
(bad)
dec
pusha
mov
push
pop
adc
xchg
or
xchg
cmp
inc
fwait
loop
test
movs
stc
data16
ss
dec
and
lahf
test
dec
aas
jb
in
test
test
mov
ins
and
cmps
(bad)
push
mov
push
cmp
jmp
xor
mov
fbld
mov
mov
dec
call
(bad)
xlat
add
mov
sahf
add
add
ret
jle
mul
(bad)
fisubr
ds
in
push
xchg
inc
ret
arpl
mov
sub
jae
mov
xor
retf
cld
mov
rol
push
mov
sbb
ja
das
mov
imul
das
retf
add
xor
add
pushf
(bad)
loopne
or
dec
fisttp
rcr
push
cld
push
in
iret
inc
push
xor
jmp
pusha
ds
bound
div
cmc
mov
jmp
stc
mov
inc
add
dec
sub
fstp
mov
push
lds
xchg
out
and
aaa
neg
jns
mov
fcmovnu
mov
dec
jae
xor
test
push
pushf
test
daa
and
faddp
imul
cmp
add
clc
je
pop
clc
rol
sub
rcl
adc
ret
mov
ror
mov
xchg
icebp
mov
adc
xlat
in
inc
cmp
sub
cmp
jmp
mov
mov
cmp
or
jb
pop
shl
fs
retf
xchg
pop
xchg
lods
adc
cmp
mov
in
int3
xchg
jmp
fild
add
mov
or
movs
(bad)
mov
jmp
addr16
fidiv
lods
sahf
movs
mov
idiv
inc
sub
jne
push
adc
add
shl
shr
xchg
ret
cmp
inc
push
sub
jae
mov
pop
fstp
lds
iret
and
mov
cmc
lea
mov
xor
cmp
std
or
pop
pop
(bad)
stos
add
sbb
jmp
push
lods
xchg
add
mov
mov
push
push
(bad)
fcom
add
shr
ja
ss
ds
movs
jp
ja
jecxz
test
mul
sub
xor
fwait
xor
cmp
call
vmovhps
and
cmps
and
sub
outs
pop
jns
mov
adc
cmp
repz
dec
sub
arpl
mov
mov
xchg
lods
jmp
xchg
xchg
and
sbb
xlat
push
jecxz
(bad)
mov
mov
test
xchg
out
mov
pop
mov
or
jmp
sbb
sar
pop
mov
sbb
mov
out
rcr
sub
mov
stos
dec
push
jnp
or
sub
pop
jae
pushf
sbb
jg
stos
call
dec
in
popa
inc
ins
push
ror
scas
aaa
call
in
jg
xor
(bad)
add
cmps
loopne
call
mov
lea
aaa
js
jecxz
sbb
xor
xchg
fild
(bad)
push
repz
sub
jl
cmp
push
xchg
pop
addr16
retf
inc
adc
jmp
mov
fcomip
cmps
push
push
mov
xchg
dec
inc
pusha
hlt
add
pop
sub
xchg
out
push
fdivr
and
sub
pusha
ins
mov
xor
lods
xor
inc
cmp
mov
aaa
fcom
repz
rol
fadd
dec
add
adc
loope
fadd
mov
ins
imul
or
mov
adc
pop
mov
into
stos
inc
outs
fdiv
inc
inc
jno
inc
cdq
sub
(bad)
shl
scas
lods
jp
jle
lahf
xor
dec
push
dec
retf
daa
mov
xchg
mov
cmp
push
scas
push
mov
int3
jmp
xchg
mov
fs
aas
mov
jns
inc
loop
pop
push
mov
fld
ffreep
sub
xchg
push
cmps
je
arpl
sub
out
(bad)
pop
iret
push
mov
ins
adc
jle
adc
push
add
lahf
cwde
pop
push
or
fiadd
imul
fdivr
leave
std
xor
or
pop
cmp
cmp
int
sub
cmps
inc
popf
pushf
dec
in
loope
aas
imul
inc
sbb
dec
outs
pop
fs
leave
pusha
in
xchg
cmp
adc
cmp
int3
enter
mov
add
data16
adc
popf
pop
mov
jns
ja
imul
stos
daa
push
int3
inc
mov
test
xchg
jge
pop
push
jae
push
or
sbb
sub
into
das
adc
outs
pusha
jmp
aad
mov
std
adc
adc
bound
rol
push
jle
jmp
rol
lds
aam
movs
inc
push
jae
sub
dec
push
dec
(bad)
lods
outs
jmp
lock
inc
xor
push
cld
shr
xchg
inc
sbb
sub
lds
mov
sub
jae
or
inc
push
mov
pop
loope
adc
mov
hlt
inc
cld
sbb
jae
pop
bswap
movlps
(bad)
adc
rcl
fiadd
inc
mov
fadd
fucomip
jp
inc
and
xchg
fidivr
in
adc
pop
mov
movs
(bad)
pushf
add
ins
xchg
jge
sub
loope
dec
xchg
jl
and
cmp
(bad)
in
shl
loop
shr
lods
ja
mov
test
dec
mov
pop
outs
lods
hlt
movs
push
sahf
rol
lea
and
sbb
mov
js
sub
int3
cmp
sbb
imul
mov
test
xor
into
fwait
(bad)
shl
lods
xchg
popa
or
out
inc
and
adc
(bad)
hlt
das
lods
push
jp
push
retf
iret
fwait
retf
sbb
aad
dec
jmp
hlt
sub
jo
sbb
adc
call
fbstp
repz
inc
adc
stos
push
cmp
push
jne
push
shr
add
je
mov
push
stos
jbe
mov
int
xchg
adc
jl
jmp
shl
mov
jbe
(bad)
retf
inc
inc
lods
adc
push
adc
mov
iret
mov
sbb
std
movs
jae
jle
xor
rcl
mov
or
and
repz
icebp
call
movs
rcr
cwde
dec
sub
xchg
adc
outs
test
cmp
inc
inc
mov
icebp
or
jmp
add
shr
movs
inc
push
fnstsw
dec
imul
stc
pushf
mov
or
repnz
xor
call
inc
xchg
and
push
cmp
ds
add
jg
out
int3
or
cmc
outs
and
div
repnz
sbb
pop
adc
leave
inc
adc
dec
xchg
loop
ds
and
push
adc
or
in
sub
jle
dec
push
fisubr
movs
add
stc
sub
pop
sbb
int3
xor
jl
sbb
cld
xor
mov
cs
jl
lea
adc
jg
ret
pop
cmp
mov
call
je
pop
adc
xchg
sub
(bad)
jmp
jnp
mov
or
add
or
cmc
push
and
jae
jl
sti
adc
test
and
je
outs
adc
lock
sbb
lods
cld
test
mov
push
sub
xchg
mov
jecxz
pop
push
(bad)
retf
mov
push
retf
dec
adc
cld
jmp
push
leave
rol
xor
mov
hlt
fld
and
sub
mov
loopne
jp
fmul
mov
or
xchg
or
xchg
lea
mov
sub
sbb
aas
shr
fs
dec
push
jmp
imul
or
adc
inc
int
mov
stos
jb
outs
push
push
inc
and
or
repz
xchg
jle
mov
int
out
pusha
in
adc
push
dec
js
add
jns
and
sub
imul
inc
pop
or
test
mov
inc
mov
clc
mov
shr
lss
test
lahf
push
hlt
repz
retf
xchg
movs
aas
in
push
xchg
jmp
out
pop
test
mov
cli
test
rol
pop
inc
push
gs
xor
xchg
repz
mov
push
lods
inc
rol
inc
sbb
and
pop
call
in
imul
jmp
sti
push
daa
pop
bound
cmp
or
aad
adc
and
sbb
psubd
sbb
mov
and
push
dec
jo
mov
jbe
add
cmc
jecxz
adc
push
push
inc
nop
pop
mov
mov
mov
xor
jg
jl
cmp
cli
push
push
out
xchg
imul
sbb
ficomp
mov
iret
xchg
xor
fwait
out
add
fiadd
jmp
jb
jne
fsub
sub
stos
mov
dec
das
mov
nop
inc
dec
mov
das
or
mov
scas
sub
icebp
js
xor
bound
inc
and
sbb
and
pop
iret
or
jns
popa
mov
mov
sti
ds
scas
adc
push
cmp
sbb
lock
sub
inc
or
pop
xor
in
mov
inc
sbb
rcl
aam
jecxz
xchg
out
xlat
mov
rcr
xchg
outs
mov
or
xlat
xchg
add
scas
inc
shl
into
imul
jmp
pop
pop
mov
or
jb
sbb
(bad)
into
inc
stc
stc
cmp
cdq
or
jp
test
div
mov
iret
dec
outs
test
jmp
cmp
mov
daa
stos
hlt
fbld
push
das
lock
shl
out
fs
loop
sbb
sbb
inc
xor
sbb
je
out
dec
retf
aaa
cmps
fisubr
mov
cmp
(bad)
popa
pop
jecxz
or
jno
ja
aam
out
outs
call
add
shl
mov
add
lds
mov
jns
mov
mov
out
stos
cli
les
sub
dec
mov
pop
and
aam
or
jge
sub
mov
(bad)
lock
lea
aam
cmp
inc
dec
or
pop
mov
icebp
jne
enter
pop
sar
inc
mov
fbstp
aas
sbb
mov
add
push
xchg
add
mov
cmps
fild
inc
jno
and
mov
adc
clc
mov
call
test
imul
lea
and
pop
rol
in
inc
xor
push
cmp
pop
pop
dec
push
pop
(bad)
int3
(bad)
push
push
int
loope
sub
test
sahf
retf
pushf
movs
cs
pop
sahf
cwde
mov
and
pop
xchg
adc
push
sub
push
xor
add
(bad)
mov
sbb
adc
and
jns
or
push
xchg
mov
mov
sbb
stos
cwde
lea
cdq
in
push
mov
test
out
loopne
cmp
sbb
aas
jl
adc
jg
mov
add
sbb
pop
jne
fst
inc
shl
mov
pop
pop
xchg
fwait
int3
test
popa
out
nop
mov
and
lods
(bad)
clc
in
xchg
dec
call
cli
mov
not
jg
xchg
dec
loope
in
hlt
aad
neg
and
out
stos
jno
fnstcw
adc
test
jnp
mov
xor
xchg
fnstsw
in
xchg
jne
adc
jl
fimul
out
aaa
inc
cmp
outs
mov
push
outs
mov
push
dec
fimul
mov
stc
pop
(bad)
out
daa
(bad)
cmp
dec
icebp
mov
outs
mov
xor
shl
pop
jbe
cmp
mov
mov
js
push
shl
push
cli
dec
(bad)
adc
ds
adc
mov
xchg
aaa
add
jg
lds
addr16
jbe
fiadd
xchg
sti
or
frstor
or
add
in
mov
and
and
cmp
ds
inc
xchg
movs
push
movs
int
fld
jns
ja
push
dec
ret
aam
(bad)
mov
and
lahf
mov
mov
push
icebp
sbb
jb
nop
fcmovnbe
mov
cmp
rcr
mul
std
pusha
std
adc
lock
repnz
mov
(bad)
loopne
add
jp
pop
push
jecxz
repnz
xchg
pop
add
movs
dec
aam
pop
ins
lods
cmps
call
imul
add
push
mov
dec
or
mov
add
shl
cdq
cli
and
mov
loope
std
inc
fisub
jns
arpl
cmps
pop
dec
sub
movs
aam
aad
cmp
retf
(bad)
lods
rcr
sbb
(bad)
int
js
pop
ficomp
lods
mov
bound
cmc
cmp
or
fsub
pop
mov
push
sub
xchg
enter
daa
call
and
es
addr16
rcl
jno
ret
push
dec
mov
or
fld
cmp
imul
inc
fsubr
mov
mov
lds
clc
cmp
stc
daa
fnstcw
push
lahf
and
or
gs
outs
sti
inc
retf
inc
xchg
(bad)
imul
in
repz
int
adc
mov
es
retf
mov
test
sub
sub
inc
into
and
cwde
js
in
xchg
out
and
mov
jp
add
jg
sub
das
xchg
loop
sub
bound
cmps
xchg
pop
dec
xor
inc
loop
xchg
mov
adc
xchg
jno
icebp
sbb
nop
shr
mov
push
data16
jmp
and
sar
mov
sbb
cmp
sub
jmp
push
push
mov
loop
xchg
sbb
inc
int3
outs
lds
popa
or
out
push
mov
dec
test
or
push
jae
xor
jle
add
add
imul
fadd
sub
fcomp
push
out
bound
aam
shr
sar
mov
sub
sub
xlat
or
ins
dec
mov
inc
nop
lock
sar
push
mov
sbb
lods
jne
inc
lds
push
out
stc
inc
js
pop
int3
pop
or
pop
adc
xor
fcomp
and
bound
adc
icebp
dec
not
xor
cmc
fs
or
mov
add
inc
cld
out
xor
bound
xchg
jnp
add
pop
pop
fld
push
mov
std
shr
fld
iret
enterw
fld
jno
or
xchg
aad
jmp
sub
inc
adc
cmc
cmp
(bad)
sti
xchg
and
dec
jno
daa
push
add
xchg
mov
sar
sub
dec
lods
dec
cmps
daa
mov
inc
je
daa
jecxz
ins
rcr
sbb
fwait
dec
or
jne
jbe
into
jno
mov
add
test
mov
sbb
nop
or
retf
xlat
inc
inc
cmps
mov
push
call
shr
pop
repz
inc
sub
fistp
in
xchg
je
and
sub
inc
(bad)
mov
out
loopne
in
jne
fcmovne
inc
enter
mov
je
mov
xchg
ret
repnz
fsubr
loop
and
inc
xor
inc
jne
sub
xor
push
mov
pusha
retf
sub
mov
jae
jbe
lods
xor
add
rcr
(bad)
cmp
dec
sub
fdiv
mov
shl
dec
adc
shl
ss
imul
jno
cmp
or
jecxz
mov
rol
xor
xchg
dec
jbe
jno
xor
push
outs
enter
iret
mov
dec
(bad)
dec
into
jns
sub
sahf
jne
cwde
and
xor
shr
lahf
int3
pop
push
mov
sub
ret
cmp
cmps
jae
pop
and
mov
jmp
test
ror
jns
(bad)
daa
fstp
inc
test
mov
out
repz
push
hlt
shl
sub
jbe
and
push
mov
movs
cmp
xlat
inc
and
test
aad
pop
ja
sbb
cdq
xlat
repnz
sub
xchg
adc
pop
adc
mov
popf
cwde
or
push
int3
mov
mov
das
jg
mov
jo
repz
adc
mov
ffree
nop
and
cmp
les
push
int3
jge
push
out
daa
fld
int3
call
pushf
gs
lock
inc
out
pop
and
ins
je
add
test
cmp
jnp
pop
sti
sbb
push
fild
pop
hlt
pop
out
push
arpl
sub
lea
mov
mov
into
mov
dec
retf
daa
or
adc
jne
xchg
push
pop
push
mov
shl
dec
sbb
bound
sub
pushf
mov
sbb
mov
xchg
ficomp
push
jl
fsubr
and
shr
stc
adc
sahf
sub
cmp
or
push
xchg
ds
test
xchg
stos
or
cmp
xchg
mov
mov
xchg
out
vpslld
lds
xchg
xchg
sbb
mov
ins
(bad)
push
jo
xor
xor
xor
js
mov
xlat
daa
push
loop
movs
pop
mov
call
and
retf
(bad)
dec
rcr
mov
(bad)
mov
in
mov
int3
pop
stos
mov
out
daa
mov
sbb
std
dec
push
mov
aad
stos
sbb
or
jge
jmp
sub
inc
cmp
movs
fidivr
scas
pop
(bad)
int3
jbe
frstor
retf
in
mov
shl
and
fisub
cmp
push
daa
je
fcomp
jmp
lods
scas
or
shl
jno
fisttp
mov
jl
and
test
movs
rol
mov
in
or
fdiv
rcr
(bad)
int
xchg
arpl
xchg
repnz
ins
jle
or
add
not
hlt
jbe
ins
es
sbb
jl
push
repz
outs
inc
shl
sti
pop
fwait
add
rcr
(bad)
mov
cs
rcr
mov
outs
xor
cmp
or
pop
sbb
mov
cmp
xor
mov
loope
sbb
xor
icebp
dec
cli
hlt
add
sbb
fnstsw
or
xchg
movs
lds
mov
xchg
xchg
xor
dec
sbb
call
sbb
mov
ds
or
adc
cli
push
lahf
pushf
shrd
(bad)
out
jbe
test
sub
adc
mov
ror
fwait
dec
out
addr16
xor
adc
mov
push
mov
and
shr
mov
popf
cmp
mov
jns
mov
sar
mov
pusha
jl
test
add
mov
add
loope
mov
scas
popf
jmp
xor
xchg
bound
jmp
call
addr16
and
push
bound
lahf
xchg
ins
mov
xor
and
mov
inc
inc
rcr
mov
and
push
dec
enter
iret
push
mov
mov
jne
dec
sub
ja
mov
push
mov
jmp
scas
or
arpl
gs
xchg
sub
mov
or
test
cmps
dec
lods
loope
xchg
popa
call
dec
ja
xor
ds
addr16
fwait
ret
scas
cmps
daa
pop
xchg
imul
sub
mov
stos
(bad)
in
sub
or
ins
jl
pop
push
test
cs
fisubr
in
pop
lds
hlt
and
xor
retf
sub
mov
mov
sub
rcr
rcr
sbb
dec
rcr
cld
jp
push
cli
add
lods
jecxz
repz
and
xor
ficomp
xor
xor
pop
lea
call
pop
(bad)
leave
sahf
xchg
inc
cmp
test
inc
lods
and
sbb
fcmovnu
sub
cmp
xchg
push
nop
mov
and
pop
xor
imul
sbb
or
scas
jecxz
ret
jno
sub
movs
into
out
imul
repnz
jns
add
aaa
or
call
sub
out
test
sbb
mov
mov
xchg
mov
add
mov
xchg
dec
es
inc
dec
repz
and
pavgw
dec
movs
loopne
ins
jmp
scas
lahf
sbb
imul
or
mov
pop
test
xchg
popa
sbb
add
(bad)
xor
call
cmp
adc
dec
mov
out
aas
sbb
sbb
xchg
imul
cli
nop
and
jne
push
jbe
xor
lods
cmp
sbb
add
sub
aad
cmp
cdq
cmp
mov
jbe
dec
xchg
sub
fdivr
into
add
pop
idiv
and
mov
adc
mov
mov
ja
inc
xchg
jecxz
mov
data16
xchg
stos
push
mov
sti
dec
adc
cmp
js
sub
ins
das
mov
sub
sar
and
(bad)
arpl
push
jp
call
inc
dec
pop
dec
mov
setp
pop
outs
pop
sbb
mov
xor
pop
test
in
loop
inc
aaa
call
call
pop
pop
cmps
(bad)
icebp
xor
jecxz
pop
adc
mov
mov
and
sub
and
jg
dec
shl
mov
mov
and
mov
cmp
aam
push
jo
js
test
call
dec
rcr
push
setae
pop
dec
pop
rep
rcl
mov
sbb
pop
in
mov
or
mov
(bad)
push
push
rcr
leave
inc
lods
in
dec
add
cdq
pushf
das
mov
mov
mov
in
and
ins
(bad)
div
das
shl
cmps
(bad)
ins
dec
call
ror
cmps
stos
mov
sbb
adc
add
jne
ins
push
inc
mov
lods
dec
outs
push
lods
lods
mov
(bad)
and
retf
fbstp
mov
sub
loop
push
pushf
popa
pop
ja
mov
add
je
hlt
xor
jbe
test
push
pop
repnz
dec
iret
jo
push
dec
icebp
movs
(bad)
movs
dec
clc
add
call
or
int3
mov
bound
outs
push
pusha
xchg
std
sub
ins
bound
or
pop
fsub
fidivr
sub
jb
loope
dec
les
rcl
leave
stos
adc
xchg
adc
in
scas
sbb
sti
push
jecxz
mov
cwde
xchg
ja
rol
popf
add
pop
ja
cmps
adc
xor
ins
outs
inc
push
mov
call
addr16
sub
mov
cmp
idiv
cdq
cmps
(bad)
dec
ficom
xchg
jb
es
repz
push
int
jno
or
retf
push
sub
mov
cwde
push
cmps
xchg
and
mov
push
(bad)
mov
lea
or
dec
icebp
mov
into
xor
mov
enter
cmps
push
pop
mov
pop
aad
in
lods
inc
test
dec
fcmovnu
sbb
sbb
pop
sub
adc
dec
xor
ins
aam
mov
inc
dec
dec
dec
xor
xor
aaa
in
clc
mov
xor
hlt
adc
or
fnstenv
movs
adc
jecxz
lds
jle
xor
add
xchg
dec
fwait
jae
int
das
and
pop
jp
jge
sub
and
ret
popa
cdq
mov
pop
ins
adc
mov
adc
pop
jae
adc
add
inc
cmp
jl
gs
lds
lea
cmp
imul
popf
out
cmp
and
push
add
in
push
xor
aam
int3
add
or
push
ss
(bad)
mov
and
retf
enter
xor
scas
mov
sbb
stc
dec
adc
sbb
(bad)
fsub
jae
(bad)
call
dec
test
push
push
jnp
outs
mov
int3
je
mov
push
push
cwde
jg
sbb
call
cs
mov
mov
sub
out
xor
jp
mov
loop
popf
retf
lods
into
jns
nop
outs
scas
adc
push
(bad)
shr
fild
(bad)
and
movs
or
(bad)
mov
cmp
cmps
ins
out
xor
nop
or
(bad)
xor
cmp
dec
(bad)
mov
lar
int
repz
pop
or
add
jecxz
xchg
mov
ficom
aas
sub
lahf
sub
fisubr
lds
retf
sti
dec
sbb
sbb
cmp
es
and
sbb
out
ins
(bad)
or
sub
inc
cmp
outs
scas
hlt
std
xor
bound
adc
mov
mov
push
stos
cmp
xchg
inc
loop
das
dec
jg
sti
mov
push
lds
mov
jne
fs
cmp
inc
jb
sub
movs
hlt
pusha
in
xlat
xlat
xchg
cmp
mov
frstor
mov
movs
xor
enter
ret
adc
dec
cmp
loopne
xor
sub
cmps
xchg
push
repz
scas
and
and
cmp
pop
pop
pushf
xor
loop
leave
test
mov
push
push
ficom
xchg
sbb
lods
lea
popf
in
neg
aas
add
push
cmc
dec
mov
xchg
or
into
fdiv
mov
jle
xor
and
lods
aas
sti
lahf
mov
(bad)
stc
fisttp
(bad)
xor
movs
and
dec
sti
adc
retf
(bad)
aam
add
icebp
jnp
adc
(bad)
sub
or
test
pop
lea
and
stos
retf
jmp
inc
mov
call
push
mov
or
ds
cwde
mov
adc
pop
sub
pop
or
sub
cmps
push
adc
sub
push
loope
dec
(bad)
nop
push
popa
imul
or
std
lahf
fsubr
pop
adc
or
pop
add
and
fsubrp
popf
xlat
mov
inc
xchg
sbb
or
mov
fldenv
inc
mov
leave
sbb
popa
mov
fwait
pop
fwait
dec
in
jg
mov
sbb
xor
pop
hlt
xchg
lods
lahf
retf
lea
test
lahf
sbb
and
mov
pop
inc
pushf
mov
into
pop
lods
movs
mov
sub
mov
call
mov
dec
int3
and
enter
or
sar
call
ss
out
sbb
xor
iretw
cmp
inc
mov
pop
in
fmul
(bad)
cmp
push
mov
inc
(bad)
nop
push
hlt
jg
imul
jne
xchg
test
xor
pop
add
faddp
inc
xchg
jo
ret
mov
repnz
push
imul
add
pop
gs
xchg
rcl
or
or
jns
push
pop
loopne
mov
push
xchg
push
cmp
aam
inc
cdq
inc
inc
out
icebp
add
mov
mov
inc
or
addr16
push
pop
mov
out
cmp
cmps
xor
inc
inc
pop
adc
lahf
mov
loopne
jo
cmp
ficomp
sub
imul
(bad)
jmp
jle
sbb
scas
shr
mov
or
(bad)
cmps
mov
(bad)
retf
cmp
daa
inc
inc
mov
in
aas
mov
arpl
stc
retf
mov
push
mov
retf
and
push
ins
std
mov
enter
sub
xchg
sti
dec
and
fs
pmaxub
add
loop
cli
js
mov
and
int
sahf
pusha
outs
push
popf
fwait
inc
ss
out
xor
lahf
in
and
jnp
rcr
scas
(bad)
stc
in
loopne
cmp
or
mov
adc
xlat
hlt
sbb
repz
xor
retf
push
js
xchg
fsubr
push
pushf
lods
jl
or
leave
cdq
inc
data16
test
movs
add
xchg
jl
sbb
adc
mov
mov
aad
icebp
retf
jle
xor
push
stc
inc
adc
stos
into
sar
mov
sub
lock
cmp
push
in
fnstenv
aaa
or
dec
push
xchg
jnp
lds
in
(bad)
das
sar
arpl
cld
push
mov
pop
imul
rol
mov
shl
dec
and
xlat
out
mov
mov
(bad)
out
js
pusha
cli
and
cmc
cmovo
data16
pop
mov
xchg
sub
popf
(bad)
push
das
push
mov
les
xor
pusha
loope
adc
inc
or
mov
xchg
inc
mov
aas
cmp
or
(bad)
jle
std
inc
daa
(bad)
mov
dec
dec
push
dec
push
popf
mov
hlt
xor
cmp
push
mov
mov
inc
and
push
aam
popa
test
mov
arpl
in
and
fnstcw
mov
dec
jb
add
mov
xor
jno
push
(bad)
arpl
int
(bad)
retf
cmps
lds
push
int3
add
push
pop
jmp
pop
mul
fs
dec
aas
mov
jge
adc
fist
(bad)
sar
mov
add
cld
jecxz
sbb
cmc
dec
add
sub
movs
mov
mov
cmps
push
gs
xor
push
loope
nop
adc
mov
fmul
retf
lds
stos
adc
xchg
dec
scas
outs
push
jge
adc
ins
lods
aaa
test
nop
test
test
sub
in
test
rcr
dec
(bad)
xchg
(bad)
inc
retf
add
inc
std
call
mov
fld
pop
fstp
mov
into
lds
inc
js
push
mov
push
and
popf
stos
jle
sbb
mov
mov
sub
dec
mov
mov
mov
loop
call
in
add
scas
mov
push
hlt
mov
stos
push
xor
(bad)
dec
pop
(bad)
dec
dec
stos
mov
dec
sbb
mov
outs
gs
cli
pop
aad
mov
mov
les
or
mov
add
inc
push
vunpckhps
imul
and
fidivr
sbb
mov
clc
ficomp
sub
pop
repnz
inc
and
repnz
push
mov
mov
jge
jne
das
add
cdq
mov
mov
lahf
lahf
ror
inc
repnz
mov
mov
stc
xor
call
out
fstp
xchg
or
inc
ins
mov
xchg
jle
ins
ins
ret
ror
inc
ja
rcr
add
jp
fstp
repnz
adc
mov
mov
out
cmps
dec
xchg
sbb
jmp
adc
mov
js
push
stos
nop
ss
add
stc
rcl
dec
jmp
mov
repnz
xchg
mov
ds
cmp
push
dec
lds
cld
mov
cmovb
jmp
pop
pop
dec
adc
(bad)
int
mov
aam
out
out
pop
lock
inc
add
sub
dec
sar
dec
sbb
fld
mov
mov
out
ja
pop
rcr
cwde
mov
movs
lods
and
std
int3
es
(bad)
mov
mov
mov
jg
pusha
js
sti
stos
(bad)
(bad)
or
ins
push
sbb
in
add
fcmove
aam
stos
outs
and
mov
xchg
pop
mov
cmp
adc
xor
mov
xlat
add
xchg
ret
jbe
add
jmp
pop
jecxz
call
retf
dec
not
ss
mov
jns
mov
iret
das
movs
add
xchg
mov
(bad)
lds
xor
aad
xor
jmp
ret
leave
xor
sub
mov
jle
ret
jmp
inc
mov
test
and
xchg
fild
mov
loopne
push
scas
pop
adc
mov
jno
iret
xchg
push
and
jl
cmp
jbe
ja
unpckhps
push
or
adc
pop
call
add
ins
jb
push
cmps
stc
xchg
lds
std
cmps
(bad)
repz
mov
cwde
or
mov
dec
mov
loop
push
inc
stos
inc
les
sbb
lds
mov
pop
(bad)
mov
ja
jb
std
pop
in
mov
arpl
cmp
mov
or
push
lock
loopne
push
daa
xor
adc
lods
aas
ror
out
test
call
inc
sub
inc
imul
mov
sbb
dec
test
xchg
mov
jmp
lea
ret
dec
shr
hlt
(bad)
and
es
repz
ror
retf
movs
leave
sar
into
dec
sub
shr
call
mov
inc
jl
dec
lods
repz
test
xchg
or
pop
lods
and
or
aad
mov
out
cmc
xchg
pop
add
(bad)
xchg
outs
jno
inc
aaa
pushf
sub
jae
popa
or
pop
clc
cmp
inc
ins
xor
xor
outs
mov
out
xchg
mov
icebp
pusha
inc
jle
mov
std
cmp
jl
into
add
es
adc
mov
push
jne
jnp
popa
lahf
cmp
bound
hlt
(bad)
in
test
sub
mov
adc
and
xor
ins
dec
setae
retf
jg
xor
sub
or
sub
pop
xchg
cli
call
test
add
popf
mov
adc
add
or
outs
das
sbb
and
imul
jge
pusha
sahf
push
ret
cmps
cwde
jmp
lahf
sahf
popa
jp
mov
ins
and
int
popf
push
xchg
fmul
cmp
fadd
sbb
enter
jo
mov
imul
inc
test
xchg
dec
mov
nop
push
push
pop
and
rcl
inc
pop
xchg
xchg
fdiv
cmps
pop
push
or
movs
add
sub
cld
mov
adc
scas
scas
test
xor
fcomp
in
int3
xchg
push
ins
rcl
stos
jno
idiv
rcl
adc
xor
fwait
adc
pop
scas
push
idiv
or
lods
scas
push
call
repz
push
imul
lods
pop
dec
add
xlat
cmps
scas
xchg
mov
(bad)
mov
and
imul
jmp
sti
dec
inc
inc
and
pop
imul
jb
ja
push
fisttp
cs
jbe
mov
ja
shl
and
push
cli
mov
out
shr
xchg
outs
jg
nop
inc
scas
gs
(bad)
test
sahf
mov
retf
dec
(bad)
cli
dec
xchg
in
mov
dec
pop
fs
or
mov
push
adc
inc
jae
pop
adc
or
push
outs
outs
pop
mov
and
jl
jge
loop
test
sub
js
out
mov
jae
add
enter
nop
aam
jnp
add
fild
out
mov
fnstcw
xor
jno
push
ficom
push
clc
dec
das
pop
lds
pop
sbb
adc
cmp
addr16
rol
dec
xchg
ins
jg
pop
inc
jge
adc
sbb
jne
mov
cmp
ja
shr
mov
mov
inc
push
rcr
ret
cmp
jb
and
rcl
icebp
and
nop
lods
shld
pop
imul
fs
iret
retf
pop
cmp
mov
adc
sub
pushf
pop
and
call
neg
mov
pop
loope
shl
mov
push
pop
mov
outs
sub
xchg
jecxz
mov
in
inc
push
xor
push
pusha
fstp
ret
fdiv
xchg
adc
repnz
je
cmp
jne
xchg
rcl
add
pop
lahf
push
cmps
sub
sub
push
dec
mov
(bad)
sub
cdq
arpl
mov
mov
ds
sub
imul
cmp
xor
xor
mov
xchg
stos
not
add
out
outs
int3
cs
popa
out
(bad)
rcl
mov
mov
inc
jl
call
and
jbe
lods
cmp
xchg
mov
dec
cli
add
xchg
mov
push
in
outs
ds
cli
movs
loop
rcr
popa
push
repnz
test
imul
adc
daa
jge
xchg
xor
loop
adc
sbb
sbb
iret
scas
test
or
pop
sub
addr16
js
pop
out
imul
mov
or
es
cmp
outs
mov
outs
adc
dec
movs
out
push
jg
xor
dec
inc
mov
and
call
pop
mov
test
cmps
in
leave
mov
mov
xor
call
ss
pop
mov
jle
jne
sahf
xchg
jmp
sahf
push
mov
aaa
jmp
inc
popf
jne
arpl
cmp
out
dec
jo
and
in
and
dec
fisttp
add
rol
imul
jae
sbb
inc
inc
push
add
and
dec
push
adc
jns
inc
or
push
into
xlat
cwde
cmp
rcl
enter
or
add
aaa
ja
scas
gs
icebp
sub
xor
pop
jbe
inc
cmps
pop
or
or
mov
or
add
mov
xor
repnz
pop
addr16
addr16
mov
push
sub
push
mov
mov
fsubr
in
test
movs
clc
add
push
or
pushf
int
adc
push
jnp
lock
adc
sub
xabort
mov
dec
add
dec
shr
and
repnz
pusha
or
stc
(bad)
not
idiv
mov
sub
out
enter
pop
cld
out
test
sbb
ja
add
mov
enter
xchg
jmp
and
mov
ss
add
(bad)
cmp
mov
jnp
test
or
outs
push
out
out
push
loop
jbe
cmp
pop
ins
(bad)
enter
push
xor
and
inc
pop
mov
rcl
fidiv
add
xchg
test
dec
(bad)
dec
jl
retf
jae
sub
jl
add
fistp
jb
xchg
cmp
(bad)
xchg
shr
retf
iret
fwait
xchg
ins
ret
push
xchg
stos
mov
push
jae
std
mov
or
or
or
enter
pop
pop
jmp
inc
out
push
sub
sbb
repz
out
jb
hlt
leave
jae
push
icebp
sub
mov
cmp
bound
dec
sub
scas
jecxz
dec
mov
jecxz
int3
add
sbb
loop
hlt
test
cmp
js
cmps
xor
into
test
dec
sbb
push
or
inc
sbb
ret
dec
leave
inc
pop
div
movs
out
movaps
jne
popf
aad
jns
(bad)
jmp
outs
mov
pop
jp
dec
fimul
inc
adc
cmp
inc
mov
mov
retf
call
or
inc
pop
std
out
clc
test
push
pusha
adc
mov
jge
pop
cmp
adc
pop
and
dec
sar
xchg
(bad)
jle
xchg
mov
inc
mov
push
fld
pop
sbb
sub
xor
and
arpl
sub
ins
(bad)
ins
pop
xchg
sti
out
cmp
bnd
dec
cmp
sub
inc
mov
adc
aam
aam
fstp
aas
add
daa
jmp
xchg
jns
push
cmps
mov
mov
pop
mov
xchg
bound
(bad)
mov
adc
les
xchg
mov
jecxz
shl
sub
retf
lea
push
mov
jle
xchg
nop
sub
jae
or
mov
and
mov
mov
xlat
les
mov
fs
push
popf
xor
into
xor
stc
jle
add
xchg
add
loope
shl
jmp
enter
or
mov
jmp
mov
cmp
inc
mov
mov
sub
mov
or
je
mov
mov
mov
dec
mov
inc
jmp
(bad)
shl
imul
nop
sub
mov
and
push
push
xchg
cwde
fwait
lds
outs
(bad)
(bad)
jbe
in
add
add
into
mov
push
mov
stos
bound
mov
cli
jmp
cdq
add
mov
mov
pusha
jge
jl
fidivr
jmp
cmp
mov
sar
aam
cs
jb
sbb
xchg
inc
out
cmp
sbb
sub
es
dec
mov
adc
clc
mov
push
mov
dec
cmp
cmp
jnp
rcl
pop
dec
dec
(bad)
pushf
push
int3
pop
cs
cs
push
jnp
pop
pop
xor
jne
and
mov
xor
ror
adc
adc
int3
cwde
push
std
cwde
push
call
lods
mov
xchg
xchg
cs
jecxz
test
es
sub
mov
(bad)
scas
(bad)
pop
cmp
sbb
fld
sar
push
jnp
fidiv
add
retf
push
call
sbb
push
push
mov
jmp
(bad)
loope
cmp
popf
push
and
sahf
not
adc
jne
outs
cld
cmp
in
xchg
je
(bad)
icebp
mov
mov
and
mov
call
mov
or
fwait
pusha
lods
xchg
push
lock
fadd
retf
xor
mov
dec
adc
jns
xor
mov
xchg
test
mov
add
ror
call
cmp
sub
lea
mov
mov
add
movs
mov
add
mov
sti
jl
rcl
xlat
xor
or
not
jg
xchg
cwde
pop
shl
in
xor
pop
jl
fld
std
repnz
pop
sub
push
stc
out
cmc
mov
mov
pop
xchg
dec
jns
or
push
add
cmp
mov
or
add
ss
daa
xor
sbb
out
pop
inc
lds
fsubrp
retf
push
rcr
xchg
out
jle
push
shr
dec
cmp
push
es
sbb
outs
fdivr
cs
xchg
adc
add
clc
mov
or
pusha
and
sub
(bad)
rol
jg
cdq
stos
frstorw
in
or
cmps
cwde
pushf
mov
mov
sbb
out
mov
outs
inc
mov
fsubr
inc
add
lods
xor
mov
shl
xchg
scas
and
and
and
and
sbb
in
mov
(bad)
in
add
test
cmp
test
jb
inc
mov
push
adc
fnstcw
popf
rcr
test
pop
sti
jecxz
sbb
pop
xchg
or
mov
sbb
xchg
fidivr
retf
cmp
or
push
jbe
mov
jns
push
push
push
sub
push
inc
rcl
ins
setle
es
in
cmp
xchg
pop
pop
shr
loopne
shr
dec
cld
ss
jmp
push
out
mov
adc
jne
mov
push
adc
(bad)
xchg
mov
jae
mov
or
dec
or
loope
pop
jns
lds
loope
inc
inc
mov
outs
and
nop
pop
dec
pusha
ret
push
cli
and
inc
and
sbb
mov
pop
inc
int
xlat
std
cdq
xor
mov
cmps
fadd
pshufw
(bad)
aad
jns
retf
ja
or
pop
lea
clc
and
cld
xchg
mov
retf
cmc
nop
cmovo
and
out
cli
stc
repz
or
jmp
mov
mov
add
xchg
cmp
jnp
in
rol
pop
les
mov
inc
cmp
test
cs
fisttp
jb
mov
retf
add
sub
(bad)
stos
lea
das
int
dec
pop
iret
adc
mov
push
inc
jmp
and
call
loop
test
xchg
in
andnps
add
jmp
xor
push
xor
aaa
jmp
xchg
sti
ins
or
fistp
or
adc
jbe
test
mov
push
lods
scas
mov
int3
push
sbb
cmp
fdivr
and
xor
dec
gs
pop
test
je
sub
xor
push
mov
and
gs
imul
sti
cvtdq2ps
xor
jmp
sbb
sbb
jmp
inc
js
scas
aad
inc
out
iret
inc
and
dec
std
sbb
aad
jl
int3
xchg
stos
aad
mov
and
mov
xor
xor
out
sbb
mov
mov
xchg
lds
imul
and
cmp
cli
ret
cld
cmp
cmp
and
pop
(bad)
sub
cmp
cmp
jnp
dec
ja
int
jle
push
lock
aaa
xchg
inc
jmp
jne
jecxz
pop
outs
fst
shr
cli
xchg
or
cld
dec
jns
movs
or
mov
stos
aad
aam
retf
mov
es
and
inc
sub
sub
scas
xchg
je
movlps
dec
fsubr
xor
sub
fwait
inc
daa
lods
imul
jmp
ja
mov
arpl
ins
lods
or
cmps
mov
cmps
ja
xor
push
test
mov
imul
fmul
ds
add
xchg
pop
dec
mov
push
mov
mov
fmul
retf
js
aaa
jo
scas
cmp
mov
les
dec
dec
arpl
lds
sub
addr16
cmp
ret
cdq
fucomi
ret
out
push
aad
adc
pop
fstp
mov
push
push
or
sar
xor
cmp
and
xchg
xor
pop
loopne
cmp
sub
sub
cmp
push
add
clc
retf
dec
imul
add
pop
xor
fild
enter
sub
sub
test
dec
rol
imul
in
mov
xchg
cmp
sub
jp
mov
mov
add
repz
xchg
sub
and
ds
and
mul
push
loopne
cld
cli
xchg
nop
sub
loopne
mov
dec
adc
movs
dec
push
dec
dec
jae
cmp
aas
push
mov
cmp
pop
out
cdq
adc
ret
ret
cmc
call
push
mov
mov
ins
jecxz
(bad)
cdq
or
push
cmp
scas
sar
repnz
add
push
cwde
js
inc
jmp
loopne
cmp
addr16
adc
fldcw
push
sbb
unpcklps
(bad)
jbe
add
add
pop
or
scas
cld
adc
pop
mov
mov
lock
jns
loope
es
ret
je
jecxz
sub
jmp
aad
push
in
inc
scas
sub
cmps
cli
pop
jbe
pop
adc
inc
rol
pop
cs
dec
mov
cli
cmp
sar
and
sub
je
cmp
xchg
jns
jmp
ins
adc
scas
mov
lock
mov
jp
push
lods
mov
int3
mov
sub
lahf
clc
adc
scas
mov
dec
pop
jb
xor
icebp
push
rcr
pop
pop
hlt
loope
aaa
ja
or
mov
cdq
sub
pop
add
ins
stc
scas
lock
and
aas
gs
imul
pop
mov
inc
das
test
out
in
lahf
outs
in
and
mov
push
and
in
imul
stos
xchg
dec
jb
add
sbb
add
mov
je
sub
adc
clc
lahf
mov
std
inc
scas
and
sbb
inc
(bad)
in
icebp
hlt
pop
or
jmp
in
iret
dec
inc
sti
hlt
scas
cmc
mov
in
icebp
scas
jb
out
pop
mov
mov
mov
pushf
ins
mov
ret
dec
movs
nop
out
push
sbb
or
in
or
jmp
(bad)
adc
pop
aaa
aas
mov
mov
xor
mov
jmp
mov
xchg
out
js
fisttp
mov
cmps
mov
jne
jmp
adc
push
outs
ins
sub
or
addr16
mov
and
pop
(bad)
sbb
dec
test
ffreep
fistp
out
jnp
loop
ret
imul
mov
rol
int
pop
ss
sbb
add
xchg
aad
dec
es
(bad)
mov
inc
iret
rol
mov
jmp
ror
pop
xchg
jmp
mul
mov
jp
fdivr
xor
xchg
inc
mov
or
sub
add
sub
outs
push
inc
mov
add
xchg
xlat
cdq
push
hlt
mov
or
loopne
sub
cmp
adc
mov
or
mov
popf
xchg
jno
in
pusha
push
mov
sub
pusha
dec
xor
int
mov
outs
or
lahf
push
pusha
(bad)
or
and
rcr
xor
pop
sar
iret
imul
cwde
cmp
push
sub
loopne
adc
out
add
push
sbb
cli
leave
jo
or
cmp
push
push
fsub
adc
popa
adc
jmp
pop
push
mov
add
(bad)
int3
sar
jmp
sub
cmp
mov
test
repz
jecxz
(bad)
test
cwde
mov
push
pop
or
cmp
sub
pop
in
pop
ins
jo
mov
int
jne
dec
loope
mov
cs
adc
mov
pop
cmc
xchg
(bad)
mov
lea
aad
inc
in
cmps
dec
push
test
jnp
or
dec
dec
mov
ins
mov
sub
jbe
mov
xchg
sub
add
iret
jmp
adc
in
mov
inc
jo
jp
add
xlat
clc
mov
std
sub
(bad)
aam
aad
pop
mov
xchg
arpl
fisubr
mov
push
and
adc
imul
call
inc
ja
jae
loope
cmp
daa
pop
call
sub
sbb
pop
inc
inc
iret
rcr
aas
sub
or
(bad)
scas
leave
sbb
mov
lahf
sub
mov
jle
loop
mov
hlt
imul
gs
dec
and
and
and
repz
cmps
push
add
and
cmp
cdq
mov
xchg
outs
mov
xchg
mov
mov
int3
bswap
mov
call
jecxz
fist
adc
outs
enter
or
aad
push
icebp
sti
int3
dec
mov
jmp
dec
jge
nop
into
popf
sub
stos
into
pop
in
and
int
push
pop
cmp
dec
out
dec
mov
xor
ins
jp
push
icebp
loop
push
jle
out
adc
arpl
ret
loop
and
xor
rcr
push
imul
sbb
(bad)
repz
cli
lahf
inc
dec
push
xchg
push
mov
in
ins
pop
jmp
pop
movs
ja
imul
push
ins
xchg
sti
imul
inc
je
pop
and
xchg
jnp
and
stc
adc
lods
xchg
stos
popf
pop
inc
test
xchg
jne
cdq
lds
test
mov
cwde
aaa
lahf
test
push
rol
fdiv
das
iret
unpckhps
fcomp
xchg
fadd
imul
sub
bound
lds
inc
dec
je
add
sbb
dec
int3
jg
pusha
mov
or
dec
call
add
jno
jno
or
cmp
mov
and
xor
mov
(bad)
(bad)
push
or
dec
dec
out
aam
test
xor
and
cmp
sbb
retf
jp
or
lock
inc
sbb
cmps
das
jae
repnz
(bad)
(bad)
repnz
pushf
cmp
pop
cwde
out
leave
pop
xchg
fdiv
mov
stos
inc
(bad)
pop
and
(bad)
jo
sub
inc
xchg
loopne
dec
js
test
xor
fwait
cli
jmp
retf
adc
push
cmp
jne
pop
push
loopne
dec
add
fisub
lds
rcl
add
and
cmp
mov
cmps
int
xchg
(bad)
dec
push
xor
int3
mov
add
scas
push
(bad)
push
daa
lods
push
scas
imul
lea
cli
ins
jae
je
xchg
aaa
das
xchg
xchg
mov
jns
xchg
sub
movs
add
in
sbb
in
fdiv
lahf
repnz
inc
jecxz
lock
or
rol
les
imul
stos
xchg
outs
sbb
es
and
xchg
icebp
pop
push
leave
adc
cdq
dec
mov
sbb
jge
pushf
aas
pusha
(bad)
pusha
icebp
in
iret
ret
mov
jb
stos
xorps
(bad)
pop
les
pop
cmp
retf
mov
mov
push
mov
add
stc
and
push
xchg
and
cmovno
dec
neg
jne
das
mov
nop
icebp
mov
sbb
xchg
push
jecxz
xchg
add
push
in
shr
hlt
retf
add
call
adc
mov
lds
push
mov
ror
inc
dec
and
(bad)
jge
push
or
stc
pop
mov
sub
(bad)
mov
(bad)
sbb
pop
loope
int
xor
aam
cs
(bad)
faddp
pop
or
mov
inc
aaa
fstp
dec
push
pop
fsubr
je
fldcw
inc
fst
rol
fiadd
shl
stos
push
std
mov
rol
sbb
pop
xor
jecxz
pop
xor
in
into
jno
sti
ret
cdq
mov
adc
ja
pop
add
push
fisubr
inc
scas
dec
(bad)
jo
and
mov
jno
outs
sbb
xor
xchg
gs
xlat
es
lds
jle
inc
loope
ds
leavew
or
popf
lods
jns
dec
cdq
add
jnp
pop
mov
imul
fcmovb
movs
mov
cmp
int3
fild
test
inc
mov
jmp
test
jns
cmp
cs
stc
inc
addr16
fs
lock
mov
push
jns
pop
mov
cs
mov
and
jge
in
cdq
cmc
lods
cs
sub
cmc
xchg
jecxz
dec
leave
cmp
stos
mov
mov
sbb
pop
xchg
xchg
inc
data16
sbb
sbb
dec
cmp
fldcw
test
dec
mov
xchg
into
cmps
add
fisub
mov
adc
sbb
aad
lds
hlt
(bad)
sar
push
(bad)
push
jno
into
sti
xchg
enter
cmps
pushf
stc
and
dec
cmps
xor
xchg
(bad)
sub
xlat
cmp
cmp
das
lods
mov
out
mov
stos
jbe
and
fwait
aad
test
arpl
ins
das
jmp
cmc
cmc
add
popf
pcmpgtb
dec
xchg
cmps
ja
and
add
cmp
add
sub
int
adc
int3
leave
js
out
sub
fist
daa
sub
cwde
test
or
int
push
or
in
outs
cmp
xchg
adc
int3
sbb
js
cmp
std
mov
push
sub
or
pop
or
mov
inc
rcr
sbb
daa
sub
sub
(bad)
mov
retf
out
fs
adc
adc
mov
ins
sar
mov
scas
es
call
pusha
fnstcw
or
lea
xchg
test
pop
cmp
sub
lods
lods
aas
std
loope
mov
xchg
cdq
jmp
push
lea
and
pop
not
vcmpss
sbb
gs
mov
and
xor
add
pop
xlat
enter
in
(bad)
into
daa
imul
mov
out
cmps
inc
addr16
fs
nop
push
sbb
rol
out
int
cmp
std
test
sub
call
cmp
fdivr
add
cs
lods
addr16
(bad)
pop
test
sub
dec
pop
jno
scas
jo
in
sbb
add
aas
lahf
jecxz
in
js
mov
and
inc
push
sub
ret
cmps
and
sub
jle
jecxz
ret
nop
retf
and
or
retf
pushf
push
jl
jge
cdq
xchg
outs
inc
sahf
and
add
out
mov
push
out
mov
neg
dec
loopne
cmc
ins
adc
daa
dec
bound
(bad)
xchg
frstor
sbb
mov
je
push
pop
clc
xor
adc
fist
add
jmp
clc
(bad)
push
jmp
push
xlat
cld
adc
or
pusha
xchg
dec
fdivr
sbb
popa
ins
(bad)
sub
jg
lea
adc
rcl
mov
or
add
fldcw
js
inc
mov
(bad)
mov
lods
push
je
aaa
(bad)
pop
loop
mov
jns
imul
ins
dec
xor
ss
adc
add
mov
xor
loopne
cmps
pop
ins
setp
mov
test
xor
out
ins
xchg
or
shr
xchg
bswap
mov
adc
(bad)
js
call
or
lea
shr
out
stc
push
adc
xchg
retf
popf
push
add
ret
loope
mov
add
mov
stos
inc
push
retf
retf
add
push
aas
sub
cmps
jg
push
dec
push
sub
test
lods
stos
outs
sub
pusha
retf
rcr
mov
js
pop
lods
and
xchg
into
movs
dec
test
inc
and
sahf
sub
popa
test
xchg
mov
or
cmp
or
mov
(bad)
mov
push
(bad)
ins
mov
movs
xor
scas
iret
xor
lods
jge
xchg
mov
cwde
sbb
push
aaa
mov
jns
and
inc
mov
loopne
(bad)
adc
sub
ficomp
mov
arpl
sbb
movs
stos
add
sbb
iret
cmp
adc
xor
fwait
not
push
repz
imul
sbb
pop
inc
clc
add
dec
repnz
jmp
mov
sti
fidiv
push
push
repz
or
into
jl
rcr
stc
or
jmp
hlt
xchg
cmc
fwait
into
bound
or
mov
sti
dec
enter
jp
fwait
imul
iret
imul
xchg
rcl
jp
(bad)
ficom
sub
stos
ds
sub
in
es
ds
dec
mov
jae
int3
jp
push
lahf
jbe
add
cmc
pusha
movs
jae
out
inc
push
or
xchg
popa
popf
mov
in
daa
dec
add
in
loopne
test
enter
sahf
mov
aaa
pop
fcomp
pop
les
push
outs
fwait
mov
fsub
call
add
push
push
mov
inc
leave
push
cld
pop
movs
popf
cdq
pop
ret
in
xor
mov
loopne
jbe
xor
pop
imul
enter
(bad)
movs
f2xm1
and
aas
adc
in
mov
adc
int3
jmp
dec
dec
bound
les
adc
jecxz
mov
pop
and
jns
mov
jp
out
cs
or
loop
fdiv
bound
(bad)
int
es
mov
xchg
mov
pop
cmp
pop
or
add
repz
jmp
dec
inc
jns
pop
fwait
(bad)
das
xor
xor
cmp
movzx
retf
mov
mov
jns
adc
pop
sahf
pusha
or
ja
xor
jmp
fisub
pop
dec
lods
movs
mov
mov
adc
push
push
pop
in
lds
add
hlt
test
clc
div
dec
and
mov
(bad)
xor
bound
pop
mov
cdq
xor
jae
mov
sti
push
sti
cmp
add
fistp
pusha
xchg
adc
retf
(bad)
popf
mov
lds
xchg
shl
mov
ins
repz
stos
push
fadd
hlt
jb
fld
mov
mov
cmp
adc
cdq
test
sbb
and
inc
dec
xchg
scas
sbb
push
pop
or
mov
(bad)
into
xor
pushf
in
mov
ins
fwait
ror
cmp
push
add
xchg
(bad)
mov
xor
pop
stc
xchg
jnp
cmps
(bad)
pop
cmps
dec
addr16
iret
push
mov
fstp
cli
xchg
xor
(bad)
mov
push
cmp
add
jle
movs
add
xchg
xchg
push
sub
push
xchg
adc
mov
add
mov
xor
or
cmp
mov
call
int
and
repnz
jae
xchg
int3
pusha
pop
loop
mov
movs
cmp
mov
inc
test
cli
mov
mov
mov
inc
push
pop
or
hlt
sbb
idiv
dec
xor
(bad)
out
mov
call
mov
div
cmp
mov
loopne
or
cmp
bound
sub
xchg
xorps
xor
shl
(bad)
ret
mov
mov
xchg
xchg
sub
jp
dec
shl
stos
mov
sbb
mov
xchg
ds
push
pop
lods
pop
dec
add
stc
adc
leave
push
push
or
sbb
in
and
and
pop
mov
xchg
inc
sub
push
push
mov
adc
lock
sar
xchg
xlat
mov
or
push
push
psllw
mov
xor
lods
test
jp
into
and
sbb
pop
popa
pop
jg
inc
jmp
js
and
out
sub
and
cmp
ret
mov
pop
xchg
inc
jl
arpl
push
nop
pop
out
outs
and
outs
int3
sar
es
adc
xor
inc
add
add
inc
xchg
pop
cld
dec
mul
pop
sub
push
(bad)
fcmovbe
xchg
add
dec
add
add
push
xchg
adc
jb
xchg
sbb
sbb
bound
jo
ss
xor
aas
or
dec
inc
jo
inc
test
mov
lock
int
mov
movs
jnp
jle
mov
and
repnz
fld
mov
or
mov
xchg
in
pop
cmps
ins
sub
push
cmps
icebp
xchg
repz
mov
cmp
mov
lock
(bad)
ds
rcl
fs
jne
outs
mov
imul
je
mov
mov
mov
dec
mov
lea
inc
add
push
dec
es
arpl
or
lods
dec
push
cmps
cmp
add
mov
sub
mov
fs
add
std
out
sbb
pop
into
loope
dec
mov
inc
inc
shl
mov
dec
dec
ins
shl
ror
jle
add
ja
mov
push
cmp
data16
mov
or
ret
inc
cmp
jnp
rol
inc
sbb
mov
push
cmc
jo
js
mov
pop
push
outs
sbb
hlt
push
inc
sub
test
sti
dec
cmp
mov
sbb
fbstp
cs
jmp
icebp
in
pop
les
sub
int3
mov
(bad)
daa
pop
ins
sbb
cmp
cmp
sub
movs
push
inc
outs
out
cmc
xchg
sbb
push
fisubr
test
push
fs
mov
push
and
and
sbb
pop
add
out
shl
mov
push
pushf
xchg
jbe
lds
pushf
loope
and
inc
pop
pop
icebp
ss
jbe
test
icebp
adc
and
or
out
jb
loop
xchg
sbb
add
xor
sahf
dec
inc
cmps
cmp
or
sub
test
jno
mov
repz
xchg
xchg
xor
test
mul
push
mov
test
mov
mov
xor
inc
outs
xor
clc
pop
mov
mov
xor
jge
js
ins
mov
add
xor
outs
cdq
push
(bad)
lahf
jno
lods
mov
cmp
in
xchg
mov
sbb
dec
in
jnp
(bad)
xlat
(bad)
ds
in
sar
sbb
stc
xor
pop
imul
jo
ror
int
sub
rcl
daa
ret
add
out
out
daa
xchg
rcr
adc
and
(bad)
xor
int
movs
jl
dec
or
sub
test
jo
add
rol
mov
nop
xor
iret
out
or
mov
mov
mov
mov
xor
test
sub
xchg
jmp
pop
dec
mov
dec
inc
and
pop
push
lahf
dec
fild
dec
lods
icebp
es
dec
cmp
push
outs
mov
pop
push
mov
sub
cwde
sub
hlt
(bad)
jb
cdq
test
repnz
pop
jmp
out
mov
dec
sahf
stos
(bad)
cli
test
aam
cmc
pushf
jge
inc
cld
pop
out
mov
jle
enter
ffree
pop
rol
neg
xor
in
or
push
inc
sar
stos
inc
fist
push
mov
int3
add
inc
jmp
arpl
lock
lahf
cmp
les
push
mov
aam
ror
cs
sub
stc
int3
jns
push
rcr
js
add
mov
cs
scas
dec
pushf
jnp
cmp
pop
or
add
inc
cmp
mov
daa
mov
pop
outs
ss
mov
fisttp
cwde
mov
mov
push
fwait
imul
and
lods
add
ins
xchg
cs
out
adc
inc
mov
pop
add
out
jo
sub
cmp
js
mov
cmp
or
mov
and
mov
popa
xor
inc
push
mov
jecxz
xchg
stc
outs
ror
pop
and
and
xchg
and
lods
jp
jge
xchg
dec
jbe
outs
fcmovne
mov
adc
mov
add
(bad)
mov
ret
call
jle
xchg
(bad)
call
or
retf
popf
push
std
test
ret
fmul
scas
or
jb
imul
or
js
push
or
or
xchg
xchg
scas
xchg
iret
lea
repnz
les
dec
clc
and
mov
loop
shl
adc
and
les
inc
aam
scas
adc
(bad)
sbb
and
mov
and
sbb
retf
push
fcom
icebp
mov
pop
xchg
movs
loope
pusha
adc
mov
inc
pushf
jbe
mul
and
(bad)
icebp
jbe
pop
loopne
imul
bound
adc
cmp
pusha
fst
pop
add
sub
(bad)
iret
ror
int
mov
dec
aaa
jp
sub
jae
pop
inc
retf
mov
cmp
repz
xor
cmp
xchg
and
or
xchg
popa
jp
push
call
(bad)
adc
sub
lds
rcl
out
rcr
jmp
pusha
and
adc
ror
lock
pop
stos
hlt
adc
hlt
sbb
inc
pop
and
retf
push
sbb
push
cli
and
loop
pop
mov
rcl
loope
dec
fadd
popf
test
mov
inc
int3
jns
inc
pop
mov
loopne
xor
cmp
in
pop
add
fcmovnbe
scas
adc
lods
scas
xor
(bad)
clc
shl
add
mov
(bad)
pop
adc
out
pop
ror
leave
ins
in
inc
cli
outs
mov
sbb
jns
sub
dec
das
cmp
int
push
add
fistp
in
mov
mov
stos
lods
jns
fs
inc
jg
out
inc
or
sub
sub
dec
push
movs
dec
adc
cmp
call
xor
jmp
imul
mov
nop
jnp
iret
inc
(bad)
jp
imul
cmp
jae
xor
or
push
inc
cld
fisub
retf
inc
inc
cmp
retf
dec
outs
xchg
jl
jmp
ss
push
mov
xlat
push
xchg
push
loope
fidiv
jne
fbld
jge
push
popa
js
dec
xchg
push
(bad)
daa
outs
mov
cmp
pop
(bad)
xor
push
lea
xchg
out
repnz
or
adc
rcl
mov
push
jns
out
dec
ror
int
xlat
xchg
jns
cld
add
rcl
fisubr
arpl
mov
int
call
mov
loope
jnp
cs
cmc
xchg
dec
ja
dec
dec
mov
pop
push
jg
jb
repnz
cdq
dec
ror
cmp
xchg
sub
mov
sub
repnz
idiv
adc
call
shl
mov
push
jnp
adc
iret
pushf
cmp
add
xor
pop
cmp
cwde
ins
ret
cmp
xchg
std
es
cmps
retf
xor
lahf
dec
jnp
popa
imul
jmp
sub
mov
in
lods
popa
dec
js
adc
aaa
mov
mov
out
jno
lds
xchg
inc
dec
pop
js
or
sahf
call
and
out
and
ja
or
stos
push
movs
inc
mov
repz
dec
mov
data16
nop
pop
jns
add
mov
inc
imul
mov
pop
dec
fwait
mov
push
fsubr
pop
add
fwait
xchg
imul
ins
cmp
test
popa
ror
(bad)
mul
adc
and
aaa
adc
je
repz
int3
fstp
mov
sbb
mov
je
cld
add
mov
adc
push
ds
xor
out
test
addr16
ja
jno
scas
mov
imul
mov
test
push
cmp
xchg
cwde
mov
cmp
repz
retf
xor
adc
mov
xchg
sub
aam
in
ficom
cmps
loop
aaa
(bad)
cmp
jg
mov
dec
lods
push
adc
out
mov
jns
xchg
repnz
imul
pop
dec
mov
in
xor
jo
cwde
and
cwde
(bad)
(bad)
adc
xchg
and
and
daa
xchg
cwde
mov
jmp
loope
push
data16
ret
out
(bad)
movs
out
add
lds
cmc
vpsubq
(bad)
jmp
push
mov
push
pop
jo
in
xor
xor
mov
mov
retf
test
sub
jle
in
(bad)
xor
or
lahf
jl
enter
sbb
mov
cmps
pop
arpl
ss
add
and
icebp
in
cmp
mov
in
and
cmp
mov
jg
cmps
inc
sbb
jae
dec
sahf
and
mov
push
shl
xchg
aaa
push
mov
xor
test
mov
pop
and
(bad)
xchg
(bad)
shr
pop
outs
inc
call
dec
aad
push
dec
push
jno
dec
psrlq
retf
jmp
call
lods
fcmovnb
clc
in
and
ja
dec
adc
test
pandn
jne
inc
mov
in
(bad)
std
(bad)
(bad)
call
(bad)
imul
xor
aam
jg
inc
(bad)
shl
pop
out
add
adc
icebp
pop
test
adc
hlt
push
jecxz
in
std
jae
sub
ror
and
cmp
add
(bad)
cmp
movs
mov
in
mov
rcl
mov
pop
nop
test
pcmpgtb
loopne
xchg
push
jecxz
lock
fsubr
mov
mov
cwde
and
and
mov
push
cmp
loope
xor
adc
(bad)
gs
push
xchg
jo
jge
test
push
cmp
xchg
int3
xchg
test
push
in
and
xchg
bound
adc
pushf
jmp
repz
xchg
cs
cmc
dec
add
xchg
inc
(bad)
popa
sbb
mov
dec
cmps
or
mov
xchg
retf
sub
mov
dec
loope
mul
mov
movs
ja
retf
cmp
and
loope
cwde
aaa
add
fidiv
add
dec
adc
rol
mov
jge
dec
mov
dec
leave
pop
push
add
xchg
out
fwait
adc
addr16
jbe
adc
leave
or
mov
(bad)
std
mov
jo
jno
inc
out
cld
shr
inc
pop
(bad)
mov
hlt
pop
dec
gs
dec
mov
jecxz
ds
mov
inc
lds
cmps
mov
scas
cmp
je
sbb
sahf
repnz
scas
adc
dec
sar
pop
and
push
xchg
cmps
xor
inc
push
fsubr
jnp
dec
mov
ret
jl
adc
adc
xchg
dec
push
mov
xchg
movs
pusha
cmp
cdq
add
stos
fimul
outs
dec
mov
enter
inc
pop
lea
into
(bad)
sbb
int
cld
shl
enter
loop
mov
push
fwait
nop
(bad)
mov
ficom
aas
mov
add
push
loope
push
jle
fsub
outs
xchg
xor
xchg
inc
lea
xlat
movs
push
push
popa
jg
inc
fwait
ss
xchg
rol
pop
js
sub
jge
push
nop
and
adc
test
movs
ret
dec
jp
mov
add
ss
mov
jp
mov
test
das
fdivrp
push
and
or
outs
dec
jne
push
mov
paddusb
imul
loope
jno
aas
addr16
pop
mov
lds
sub
xchg
adc
add
(bad)
stos
inc
mov
popa
lahf
jo
ror
aam
and
mov
mov
fist
xchg
mov
pop
bound
xchg
inc
movs
jp
xchg
push
pop
bound
arpl
shl
adc
icebp
mov
imul
xlat
rol
xor
mov
popa
sbb
enter
cld
push
pop
ins
jno
xchg
fsubr
sbb
or
cmps
das
adc
or
scas
test
and
jne
rol
push
arpl
mov
mov
repz
loopne
dec
(bad)
fbstp
ss
lea
(bad)
xor
pop
inc
int3
rol
outs
pushf
and
inc
cmp
cmovs
imul
dec
iret
pusha
aas
mov
push
xor
mov
sbb
mov
arpl
mov
adc
out
pop
js
ror
add
mov
jmp
and
sub
rcl
push
cmps
sti
mov
add
loopne
or
jae
call
push
pop
pop
fdiv
and
daa
stc
adc
retf
cli
sub
fwait
xor
xchg
retf
and
in
xchg
scas
ss
add
int
es
sub
sub
and
sbb
cmp
retf
(bad)
and
dec
shr
or
cdq
mov
pop
jg
xor
ret
mov
fisttp
leave
gs
ja
pushf
ss
cmp
cmp
adc
gs
dec
mov
leave
xchg
adc
mov
inc
dec
pop
adc
daa
inc
pop
jmp
or
out
fstp
mov
pusha
mov
dec
sub
push
pushf
push
xor
addr16
mov
add
ret
lds
mov
inc
xchg
fld
jbe
cmp
push
in
jb
xor
(bad)
xlat
sar
ja
icebp
pop
mov
pop
or
shl
ss
cmp
in
vpaddq
mov
(bad)
jbe
stos
int
lea
or
pusha
mov
stos
leave
sub
pop
sub
mov
(bad)
mov
mov
movs
sub
js
push
rol
out
out
jmp
cmps
mov
adc
sbb
ins
test
xor
cdq
test
mov
outs
sub
movs
out
in
dec
xchg
pop
adc
ins
mov
cmp
fwait
pushf
jl
dec
stos
ins
push
shr
scas
daa
idiv
jb
out
pop
mov
fadd
shr
mov
sub
arpl
repnz
sahf
(bad)
sti
sbb
shr
imul
sub
mov
add
xlat
lea
or
or
mov
test
outs
xor
lds
mov
popa
packuswb
imul
push
adc
push
lods
lock
mov
not
mov
sbb
mov
push
test
cmp
xor
adc
(bad)
jmp
ror
or
sahf
or
test
cmp
loop
iret
stos
ja
and
cs
xchg
mov
fcom
inc
test
adc
sub
add
adc
xchg
xlat
push
cwde
and
test
adc
in
ret
inc
dec
push
mov
fsub
fimul
je
cmp
jmp
xchg
fbstp
mov
das
adc
lds
add
inc
ins
cli
ds
pop
mov
lahf
(bad)
jb
loope
dec
fsubr
sub
lock
jo
dec
into
adc
sub
nop
pop
adc
jg
fs
pusha
and
int
or
dec
and
mov
call
jnp
or
rcr
jmp
xchg
inc
cmp
xor
inc
xchg
cmp
pop
std
push
shr
jne
mov
in
retf
jecxz
cmp
hlt
inc
jno
sub
cmpxchg
xchg
mov
sub
push
sub
or
cmc
pop
popa
pop
dec
std
stos
fld
push
adc
jnp
xchg
xchg
(bad)
pop
dec
ficom
and
add
pop
cmp
jno
ja
mov
mov
or
adc
jns
adc
int
out
mov
add
push
dec
dec
rol
rcr
inc
jp
(bad)
xlat
call
push
dec
pop
ret
(bad)
jae
jo
pop
inc
push
cmp
mov
outs
adc
cdq
cmp
pmuludq
mov
add
sbb
pop
dec
push
jmp
cmp
xor
in
and
movs
add
repnz
mov
ret
loopne
push
ins
dec
dec
pop
push
ins
push
shl
ret
out
jp
mov
test
(bad)
cmp
mov
sbb
test
das
aas
add
sbb
in
push
dec
sbb
xchg
repz
cmp
repz
mov
test
repnz
xchg
xchg
inc
dec
pushf
out
ret
pop
mov
int3
cmp
push
xor
or
jnp
xor
mov
stc
pop
test
shl
mov
mov
xlat
sub
mov
xorps
jnp
daa
mov
add
mov
fnstenv
xor
push
test
push
out
push
lods
into
cdq
out
int3
xor
repz
std
jl
adc
cmp
(bad)
adc
aaa
aas
(bad)
scas
loop
mov
cdq
mov
adc
int
sub
xchg
mov
scas
dec
shr
pcmpgtd
inc
adc
sub
int
mov
mov
shr
xchg
push
sbb
jge
mov
iret
mov
xchg
ins
out
jns
dec
lea
retf
and
and
test
pop
jno
leave
add
call
out
jmp
xor
mov
fcmovne
call
xor
xchg
dec
(bad)
and
aas
mov
push
cdq
cdq
jge
out
pop
jl
adc
mov
lea
scas
cs
or
rcl
into
push
adc
in
loopne
push
lods
movs
pop
call
out
and
mov
test
stc
jae
mov
inc
push
fst
dec
jne
mov
popa
outs
fs
out
fs
jge
jmp
mul
push
leave
mov
push
or
lods
inc
test
cs
repz
sahf
fs
arpl
cmp
test
mov
mov
push
dec
push
stos
jnp
mov
xchg
mov
js
push
jno
fmulp
mov
shr
add
mov
jae
cmp
iret
hlt
push
aad
cmp
ds
js
inc
enter
push
inc
mov
mov
mov
pop
shl
aam
repnz
sar
sbb
sbb
jno
lods
sbb
sub
das
add
push
movs
inc
adc
push
(bad)
lock
or
out
adc
sbb
mov
pop
pusha
(bad)
fcmove
xlat
push
in
mov
imul
push
cwde
push
pop
cmp
repnz
or
stos
push
movs
fstp
mov
xchg
retf
dec
lds
cmovp
mov
jns
retf
std
and
dec
es
push
and
out
dec
adc
mov
mov
and
jno
(bad)
xchg
dec
mov
fcom
bound
shl
addr16
xor
popa
cdq
xchg
sub
aas
add
aam
inc
aad
enter
(bad)
cld
jb
mov
pop
xchg
sahf
push
into
jg
out
adc
cmp
mov
push
sbb
mov
or
(bad)
aas
aas
dec
hlt
sub
jae
addr16
or
outs
(bad)
or
fidivr
popf
jl
or
add
movs
and
imul
mov
mov
les
adc
adc
xor
and
cdq
cmps
cs
push
das
je
rcl
in
inc
adc
push
sbb
mov
xor
(bad)
pop
push
and
xchg
adc
adc
out
cmp
xlat
xchg
cmps
imul
rol
xchg
lahf
pop
xchg
nop
sub
arpl
jge
dec
and
add
stos
push
xchg
dec
call
fistp
in
inc
jmp
std
pop
cwde
clc
mov
aam
add
jno
lea
add
loopne
adc
adc
push
lahf
mov
mov
push
imul
ja
xchg
adc
sbb
scas
or
stos
call
ficomp
pop
in
int
mov
mov
fidivr
mov
std
adc
xchg
mov
dec
pop
(bad)
outs
mov
pop
jnp
pop
and
fst
pop
inc
sub
adc
push
popf
movs
test
(bad)
icebp
xor
dec
out
dec
popa
stos
je
addr16
out
or
sub
es
sbb
ins
fdiv
movs
(bad)
scas
into
mov
mov
push
jne
adc
adc
mov
(bad)
push
jecxz
popa
mov
xchg
add
ja
sbb
dec
call
xchg
jge
test
add
cmps
into
mov
dec
inc
push
mov
push
inc
sub
cmp
shr
ficom
int3
inc
test
push
push
or
push
sub
retf
clc
push
cmp
iret
loope
ds
push
fild
mov
dec
pop
and
inc
arpl
and
xchg
jbe
(bad)
sbb
mov
icebp
sbb
mov
or
mov
adc
ins
sub
mov
cmp
aam
stos
daa
xor
ror
push
jp
mov
mov
cmp
dec
xor
mov
test
xor
ret
jle
and
pop
dec
jl
add
into
shr
les
xchg
sub
call
xor
sbb
inc
iret
xchg
and
xchg
fs
add
mov
sbb
cmp
and
shr
push
test
sub
test
xor
hlt
mov
mov
xchg
cmp
mov
in
jmp
pop
and
add
jmp
xchg
in
mov
sbb
xchg
dec
lods
xor
or
lahf
add
sbb
ss
mov
add
test
mov
pop
xlat
sbb
sub
lds
mov
imul
xchg
or
dec
xchg
fidivr
sub
xchg
xchg
out
xor
xor
(bad)
mov
jb
adc
and
sti
mov
ja
sbb
nop
fnsave
adc
add
(bad)
mov
ja
ret
xlat
sbb
mov
imul
dec
cmp
sub
adc
jnp
or
xor
xor
push
(bad)
dec
pop
cmp
sub
push
mov
mov
pushw
ds
loopne
scas
sbb
pop
jecxz
pop
sahf
aam
xchg
(bad)
daa
in
xor
scas
scas
jge
scas
cwde
ret
popa
mov
pop
imul
adc
sbb
cdq
or
xor
push
mov
ja
push
fcomp
dec
shl
mov
xlat
and
mov
push
sub
movs
add
gs
jge
cmp
fcom
or
gs
adc
jo
push
call
sbb
mov
int
outs
mov
arpl
sti
sahf
scas
mov
movs
(bad)
out
fistp
sar
add
xchg
or
outs
fld
sub
sub
jp
loope
test
je
ins
dec
gs
mov
scas
into
aaa
xchg
jbe
pop
sub
or
clc
mov
sbb
inc
jns
sbb
push
sub
out
mov
sbb
jmp
push
xor
loope
dec
pop
inc
fcmovne
scas
mov
xor
push
lods
inc
xor
out
or
stos
pop
dec
call
fisubr
(bad)
push
imul
jbe
ss
push
sbb
in
inc
lods
add
iret
mov
xchg
push
test
mov
inc
mov
lea
cld
pop
xchg
and
sar
test
inc
retf
(bad)
fxtract
mov
fistp
pop
push
fwait
rol
dec
mov
and
dec
jecxz
and
and
push
cmp
xlat
in
std
adc
xor
xor
mov
icebp
jp
cmp
and
(bad)
adc
(bad)
fcomp
mov
(bad)
or
xchg
push
fsub
sub
mul
loop
stos
retf
out
inc
jmp
xchg
pop
fs
adc
pop
and
sub
mov
les
gs
lods
aad
sti
push
pop
mov
xchg
and
xor
jns
scas
aad
sbb
ret
rol
mov
push
(bad)
push
cmp
push
(bad)
out
mov
cmp
jg
fadd
adc
sbb
cmp
mov
mov
aad
out
pop
data16
ror
pop
adc
jbe
jno
jns
pop
loop
mul
push
push
push
cmps
out
jbe
daa
rol
dec
dec
mov
mul
jg
mov
sub
cmc
es
fistp
pop
movs
int
rcr
mov
ja
adc
cmc
mov
jae
add
leave
je
pop
hlt
cmps
add
ins
ror
inc
imul
mov
jge
push
dec
aad
(bad)
outs
aam
sub
(bad)
enter
mov
add
fcom
xchg
fcom
(bad)
iret
mov
fnstsw
(bad)
cs
sub
sub
adc
sub
pop
push
loopne
scas
pop
pusha
push
test
(bad)
dec
jne
fstp
sbb
in
movs
ds
xchg
loop
mov
rol
pop
push
jmp
sbb
imul
clc
xchg
xor
movs
sub
or
jg
inc
mov
aad
mov
pop
fcom
mov
out
dec
or
iret
xor
icebp
ret
rdmsr
in
sbb
in
jecxz
add
push
add
inc
mov
push
inc
(bad)
mov
mov
mov
in
or
data16
sub
jo
inc
rol
mov
and
sbb
xchg
les
pop
inc
xchg
mov
shl
mov
push
rep
mov
dec
les
out
push
sub
hlt
xchg
and
jg
ret
mov
scas
add
dec
mov
loope
pop
aad
pop
add
cli
dec
jmp
imul
stc
data16
(bad)
push
xor
cmp
add
push
das
cdq
or
movs
js
mov
dec
movs
pusha
mov
es
imul
hlt
inc
lock
fiadd
retf
xor
jnp
mov
xor
sbb
mov
and
add
jb
ja
cmps
mov
outs
clc
mov
sar
push
daa
sub
dec
mov
push
cwde
jnp
adc
popa
imul
push
mov
arpl
xchg
push
inc
outs
adc
fidiv
jge
pop
xchg
pushf
stos
icebp
dec
jecxz
stos
xor
and
cld
int3
sbb
icebp
xchg
xchg
sbb
add
enter
mov
jbe
dec
ins
xchg
dec
daa
fdiv
fwait
push
sti
pop
xchg
pop
jbe
(bad)
movs
cmps
int3
stos
scas
loopne
jle
push
ror
add
push
fstp
add
cmp
mov
cdq
inc
test
add
xor
xor
xchg
jbe
fsubr
dec
mov
loope
cmc
clc
aam
aaa
fs
pop
pop
push
xchg
push
cwde
xchg
sub
outs
rol
daa
mov
and
mov
ret
jge
add
loop
retf
aam
pop
pop
pop
dec
popa
retf
mov
dec
rol
push
nop
mov
rcr
push
test
cwde
loopne
gs
loop
sbb
fs
cmps
and
stos
out
stos
mov
and
stc
cmp
getsec
jle
sub
jmp
jecxz
add
das
pop
dec
sub
ret
cmp
pusha
ins
aas
and
test
lea
out
mov
pop
and
mov
xor
sbb
pop
xchg
adc
out
ss
mov
mov
add
test
cs
add
fdivp
sbb
hlt
mov
not
clc
xchg
dec
icebp
out
mov
jno
inc
retf
aam
and
push
adc
push
ja
in
xchg
shl
fs
dec
jp
mov
jbe
(bad)
loopne
jb
or
inc
rol
fist
rcl
push
js
jnp
mov
cld
mov
stc
movs
addr16
mov
jae
cmp
nop
ins
mov
ja
mov
xor
push
stc
mov
cmp
es
jl
ss
xlat
mov
xrelease
adc
sbb
mov
jg
jo
add
jb
xchg
sub
lds
(bad)
icebp
loopne
fiadd
add
aas
mov
xor
add
dec
xlat
pop
jno
jmp
(bad)
into
xchg
imul
lods
and
xor
lahf
push
and
inc
out
xchg
cld
cwde
pop
jg
rcl
loopne
cmp
ss
pop
push
sbb
push
(bad)
data16
xor
sbb
sar
sub
mov
jbe
cwde
test
jle
outs
xchg
sub
arpl
retf
dec
inc
mov
ds
and
call
sti
pop
dec
fsubr
jge
jg
sub
pop
in
xor
or
mov
(bad)
jmp
into
shl
ja
mov
mov
cmp
sub
sub
or
push
xchg
lahf
mov
xchg
in
loope
mov
jg
xor
sub
cmps
add
bound
jl
ss
mov
shl
mov
push
jle
cmps
idiv
nop
cmps
mov
stos
loope
sub
cli
hlt
jbe
popf
rcl
jmp
dec
sub
lea
and
gs
hlt
sub
pop
stc
in
pop
in
push
sbb
sub
dec
daa
addr16
fimul
(bad)
call
ds
lea
and
push
sahf
mov
rcr
je
or
adc
xor
push
test
sub
xor
mov
fisub
or
out
aam
jg
rol
pop
movs
ins
mov
scas
fsubr
inc
and
cmps
cmps
lea
retf
xchg
mov
mov
mov
ja
shl
popf
jl
test
xchg
inc
or
outs
mov
in
cwde
xor
dec
and
lds
mov
xchg
or
dec
outs
test
jno
gs
out
push
test
repnz
stos
xor
cmps
adc
int
push
jns
int
repz
xor
aas
test
push
and
pop
popa
or
adc
dec
pop
pop
loopne
and
ins
adc
data16
addr16
push
(bad)
out
inc
les
mov
sbb
jno
mov
in
popa
aam
pop
inc
cmc
sbb
and
sahf
mov
adc
popa
mov
cdq
cdq
enter
out
mov
or
retf
lahf
xor
inc
pop
scas
pop
push
add
popa
in
mov
or
dec
or
adc
and
pop
out
(bad)
jge
and
push
mov
in
jle
dec
adc
mov
mov
loop
inc
xor
cmp
and
or
loop
add
jge
imul
rcl
mov
js
mov
sub
xor
nop
inc
mov
push
(bad)
fidivr
dec
int
add
sub
pop
daa
clc
cmps
jo
rcl
inc
mov
push
push
jo
mov
dec
pop
xchg
out
sti
and
pushf
(bad)
xor
movs
pushf
xchg
jecxz
mov
sub
out
cmps
jle
inc
dec
mov
dec
sbb
mov
in
jge
add
stos
push
(bad)
dec
push
or
jl
cmp
stc
pop
mov
adc
pop
push
adc
add
add
lock
daa
xor
fild
in
in
pop
cmp
mov
pop
and
sub
popf
xchg
pushf
mov
jns
mov
inc
das
jle
ror
adc
push
data16
push
xchg
fxam
sti
outs
cmp
xchg
or
sti
cmps
lock
vshufps
scas
icebp
mov
jmp
jae
mov
mov
inc
or
xor
xor
mov
xchg
repz
pop
int
fadd
push
fnsave
and
or
pop
sub
loopne
add
and
scas
push
jl
arpl
rol
and
inc
cwde
adc
xor
pushf
nop
(bad)
clc
inc
xchg
fidiv
stos
stc
ficom
arpl
call
adc
adc
jne
les
mov
adc
jno
bound
add
shr
test
call
shr
xchg
retf
mov
ret
(bad)
std
mov
pop
or
jg
fld
nop
adc
mov
fs
mov
inc
imul
shr
or
ror
shl
pop
neg
cmps
in
scas
cmp
push
adc
popa
jne
jne
test
shr
leave
dec
push
mov
xchg
or
and
mov
cli
fisub
sti
outs
add
jno
xchg
sbb
into
mov
mov
lea
test
jecxz
movs
imul
ja
lea
fcom
xor
xchg
inc
fmul
je
dec
pop
sbb
sub
repnz
mov
pop
in
stos
outs
loop
inc
lahf
cmp
sti
fs
nop
xchg
push
mov
mov
je
div
add
cmc
ror
dec
gs
adc
outs
shr
movs
sbb
rcl
mov
add
or
cdq
sar
or
cwde
mov
pop
jge
adc
fimul
repz
movs
add
adc
jne
inc
fbld
cmps
mov
pop
cld
mov
dec
leave
sbb
shr
push
test
fistp
xchg
and
xor
or
sub
cdq
(bad)
scas
xchg
lea
push
sbb
fwait
xor
leave
xor
pop
push
xor
push
jmp
and
dec
mov
mov
movs
mov
test
loop
mov
jmp
ret
mov
push
fs
jno
xor
mov
cwde
pop
test
fs
or
mov
mov
ins
loopne
mov
sbb
push
dec
(bad)
ja
xchg
(bad)
mov
add
pop
adc
add
dec
(bad)
in
ins
mov
push
inc
or
inc
sbb
jbe
fadd
push
(bad)
pop
or
(bad)
in
(bad)
mov
adc
inc
mov
mov
jae
lea
out
pop
fwait
sbb
inc
das
rcr
xchg
adc
xchg
daa
adc
std
mov
sub
cmp
add
mov
(bad)
std
mov
mov
push
test
and
test
add
test
or
mov
pop
add
push
push
sub
push
mov
inc
mov
pop
mov
cs
test
lahf
xchg
jb
mov
rol
lods
or
jmp
xor
aaa
add
mov
mov
test
aaa
lea
mul
inc
repz
add
mov
or
clc
das
cmp
enter
pop
shl
outs
retf
add
jne
add
cmp
stos
push
sbb
cmp
ss
pop
pop
call
pop
shl
xor
sbb
lock
sub
stc
ret
dec
sub
pop
iret
inc
popa
dec
test
pusha
jo
mov
fldz
sar
cdq
xor
movs
jmp
outs
mov
mov
ins
mov
aaa
(bad)
sbb
sahf
in
xchg
aaa
dec
stos
push
or
mov
pop
bound
mov
jecxz
add
dec
fsubr
ins
icebp
loope
movs
dec
popf
pusha
cmp
lods
xchg
imul
andps
dec
stc
add
out
inc
and
ja
add
les
into
lock
mov
pop
shl
cs
fistp
adc
enter
fisubr
push
loope
push
inc
xchg
mov
cli
es
adc
adc
fldenv
mov
clc
xor
sbb
xlat
inc
adc
dec
or
jle
sti
jmp
sub
jle
jnp
ins
dec
xlat
movs
push
mov
ja
fsubr
lahf
fist
mov
xchg
les
out
dec
addr16
ins
sar
xor
out
sub
jmp
(bad)
jmp
ss
sub
xor
das
jle
clc
push
out
iret
ret
adc
ja
pop
add
sti
mov
enter
mov
mov
mov
lods
xchg
lock
jp
pop
ds
xor
imul
mov
inc
cdq
jae
adc
outs
ret
stos
aam
push
jmp
xchg
cmp
in
cmp
mov
dec
nop
ror
aam
or
xor
push
pop
sbb
inc
xchg
std
mov
test
cdq
(bad)
test
ss
mov
adc
push
jb
jecxz
movs
sub
std
push
cmp
sub
dec
dec
cmp
dec
jne
stos
inc
mov
dec
test
pop
test
mov
or
sar
je
addr16
fs
fwait
stos
mov
mov
sub
xchg
sbb
les
in
outs
(bad)
and
popa
arpl
jae
pop
xor
imul
xchg
shl
repnz
mov
dec
jp
jo
movs
lods
test
loop
dec
lds
and
retf
scas
test
mov
cwde
sbb
imul
inc
jecxz
mov
cmp
lock
mov
scas
jecxz
popa
addr16
outs
mov
ss
adc
aam
cmp
dec
int3
add
pop
and
outs
dec
sub
push
dec
call
ss
push
call
mov
pop
mov
xchg
(bad)
sahf
(bad)
adc
xor
jno
and
mov
ret
rol
dec
inc
mov
(bad)
imul
push
pop
cmp
mov
and
add
sub
std
dec
xchg
mov
jg
stos
inc
retf
xchg
xor
mov
and
repz
add
inc
(bad)
inc
outs
in
xchg
push
jmp
mov
loop
mov
(bad)
adc
mov
outs
mov
push
dec
push
adc
les
ret
cmps
dec
loopne
(bad)
(bad)
lahf
cmp
ds
and
stc
and
fst
pusha
dec
dec
shl
and
mov
test
dec
popa
(bad)
sub
fisubr
and
ss
outs
out
aas
push
gs
push
int3
fbstp
xor
push
mov
pop
(bad)
ss
dec
and
and
pop
lock
cmp
aad
mov
xchg
lahf
out
sti
nop
mov
sti
jns
repnz
sub
mov
pop
inc
cli
dec
xchg
and
sub
adc
mov
cmp
sub
sub
adc
loope
lds
ret
aam
gs
push
add
mov
mov
ret
sahf
mov
mov
sahf
mov
int3
add
sbb
test
pop
and
retfw
ja
and
sbb
mov
jmp
aaa
inc
(bad)
lea
and
(bad)
cld
push
or
(bad)
pop
adc
iret
fdivr
mov
mov
iret
xchg
add
faddp
popf
leave
in
adc
into
test
fist
mov
jbe
cmp
cli
adc
and
daa
dec
int
mov
(bad)
shr
jne
(bad)
adc
dec
add
outs
xlat
(bad)
daa
mov
shl
or
adc
jno
dec
lahf
aad
jge
jge
(bad)
lods
dec
ss
and
(bad)
rol
scas
adc
mov
sar
jns
add
sar
pushf
jmp
adc
mov
or
aam
pusha
dec
or
add
fs
lods
out
and
aas
mov
jecxz
test
cmp
inc
sub
int3
push
cdq
clc
dec
nop
add
ja
sbb
jo
das
pushf
mov
sbb
pop
out
add
adc
fstp
test
js
mov
dec
movs
inc
cli
xchg
sub
sti
call
enter
fdiv
dec
jb
pushf
sahf
repz
xor
inc
outs
rcr
jl
xor
test
sub
sbb
in
in
dec
daa
pop
in
lods
test
lods
fnstenv
cmp
sti
repnz
dec
icebp
cmp
add
test
test
cmps
pop
inc
shr
jae
data16
pop
es
scas
arpl
loopne
pop
(bad)
mov
iret
aad
pop
jnp
xor
jae
setne
stc
dec
sbb
push
daa
adc
daa
dec
out
cli
and
and
inc
adc
out
ja
pushf
shr
imul
arpl
cmps
adc
into
addr16
outs
xchg
mov
shrd
and
dec
hlt
cmp
pop
ror
push
adc
cmps
stc
mov
cli
xor
mov
inc
lahf
adc
cmp
nop
push
dec
cmp
dec
int3
jb
inc
hlt
mov
outs
jle
dec
push
xor
and
aas
inc
(bad)
movs
fisttp
xchg
mov
cmc
loop
mov
xor
ins
sbb
popf
data16
push
dec
pop
push
adc
hlt
cdq
mov
jbe
pop
ret
bnd
pop
mov
(bad)
call
and
mov
dec
arpl
in
retf
add
jne
fwait
jb
popf
scas
enter
cdq
das
inc
jl
mov
into
push
mov
pop
shl
add
mov
xchg
scas
leave
adc
dec
fcomi
js
xchg
mov
out
fstp
pushf
xchg
push
gs
push
cmc
sbb
jbe
sub
adc
and
pop
mov
or
rcr
cmp
sbb
shr
fbld
je
sti
data16
adc
hlt
test
es
dec
mov
popf
push
fldcw
mov
aad
or
cli
jmp
xchg
add
mov
dec
pop
cmp
in
pop
(bad)
dec
jbe
pop
mov
cmps
test
ror
xchg
int3
inc
dec
pop
cmps
lock
mov
lock
pop
scas
or
dec
test
or
shl
cmps
or
gs
out
aaa
inc
xchg
loop
scas
pop
jl
mov
in
(bad)
popf
ins
out
hlt
stc
repz
das
call
(bad)
and
rol
pop
adc
sti
jno
jge
pop
or
(bad)
dec
or
gs
push
test
lock
(bad)
jo
pop
jl
das
xor
sbb
mov
cmp
rcl
jmp
outs
dec
stos
jo
mov
sbb
jmp
jg
and
hlt
add
add
xchg
cmp
cmp
es
dec
jnp
push
(bad)
(bad)
or
xchg
mov
rcl
cdq
jae
jmp
pop
add
popa
in
inc
cmp
call
(bad)
mov
push
rol
mov
push
mov
xchg
addr16
xchg
xchg
ja
das
jmp
xor
pop
add
xlat
loopne
pop
pop
mov
cmps
ins
mov
int
xchg
and
les
arpl
jns
push
out
dec
pushf
sbb
mov
or
retf
cmp
cmp
call
fild
xchg
add
add
(bad)
popa
jns
(bad)
mov
pop
push
clc
push
std
shl
jnp
pop
std
shl
movs
or
test
adc
mov
popf
push
loope
sbb
test
xchg
stos
mov
sbb
jo
push
push
xlat
shr
pop
add
mov
out
ja
xor
add
adc
cmc
in
retf
or
or
(bad)
lea
arpl
fs
in
xchg
push
mov
jmp
mov
xchg
inc
fs
imul
lea
adc
outs
shr
fiadd
lahf
fbld
mov
or
bound
ins
ja
fild
jae
ins
jle
lods
test
movs
call
jecxz
pop
mov
retf
dec
out
dec
pop
cdq
mov
mov
jecxz
ins
or
sub
(bad)
mov
call
ds
pop
xor
xchg
neg
in
inc
mov
mov
imul
dec
or
mov
out
mov
loopne
sub
test
fld
sub
in
pop
enter
fucomip
xor
xor
out
and
stc
das
sub
pop
aaa
clc
daa
jmp
lea
in
xchg
mov
inc
add
aam
mov
pop
or
lahf
mov
and
jae
xor
inc
pusha
add
int
cmp
add
mov
rcl
push
aam
xor
repz
mov
mov
outs
dec
idiv
push
movs
into
pop
xchg
xor
lock
leave
xchg
sbb
test
sbb
mov
xchg
scas
add
sbb
cdq
pusha
xor
sbb
dec
mov
push
mov
adc
shr
ins
cmp
mov
xchg
popf
pop
div
pop
and
iret
adc
int
popf
ins
mov
mov
imul
mov
mov
push
xchg
or
or
add
int3
xchg
fld
or
and
loopne
cmp
mov
jnp
inc
push
dec
or
mov
mov
call
push
add
mov
cmps
sbb
xchg
retf
fwait
push
fwait
push
dec
mov
cmp
repz
loope
push
mov
cwde
(bad)
sar
xor
xchg
inc
dec
aad
fist
or
loop
mov
retf
mov
cmps
aad
lahf
xchg
xor
fdivr
mov
add
int
rcl
fwait
out
mov
pusha
in
jge
xchg
addr16
push
sbb
out
jecxz
in
jle
sahf
adc
and
jmp
mov
xlat
mov
lahf
rcr
xchg
in
jb
add
shr
scas
dec
inc
les
cdq
jo
mov
(bad)
retf
push
aaa
lea
jp
xchg
sub
out
ffreep
addr16
cmps
mov
push
cmp
mov
ja
lock
push
sbb
data16
xchg
sub
enter
or
mov
sub
xchg
sbb
test
test
push
into
test
call
pusha
addr16
imul
stc
fsubr
enter
dec
jle
jnp
xor
(bad)
push
or
xor
in
(bad)
lods
jg
cmp
mov
jo
add
xor
test
mov
aad
out
dec
int
into
leave
lods
push
retf
loopne
out
mov
jge
lock
mov
cmp
aam
sbb
lea
int3
push
sbb
out
or
and
and
es
cmp
and
(bad)
fist
pop
xchg
sub
js
cmp
pushf
pop
dec
mov
jne
dec
dec
icebp
sbb
lahf
pop
adc
jno
(bad)
inc
push
in
mov
das
and
xchg
xchg
inc
mov
xchg
in
shr
pushf
das
pusha
test
call
lods
dec
jnp
rcr
and
dec
inc
mov
sahf
jp
cwde
in
jnp
and
ds
call
jmp
movs
or
jno
imul
pop
cmp
js
jmp
mov
lds
add
push
je
cmp
inc
es
aad
adc
pop
fwait
push
inc
shl
int3
push
mov
cdq
jp
out
sti
jns
fldcw
sub
sbb
dec
add
jae
push
xlat
sub
cmps
call
addr16
mov
rcl
scas
sub
sbb
sbb
mov
and
and
les
jp
mov
out
add
jmp
sbb
stos
in
dec
call
push
and
std
jmp
xor
mov
cmc
out
bswap
nop
push
dec
cmp
push
adc
in
daa
xchg
adc
aad
in
lods
dec
ret
imul
dec
mov
rcr
idiv
fcomi
and
mov
xor
xchg
inc
dec
mov
jecxz
(bad)
or
shl
pop
cmp
repnz
movs
fs
outs
(bad)
sti
sub
dec
rcl
adc
mov
test
popf
mov
jnp
sbb
mov
or
push
out
jae
xchg
mov
movs
mov
jp
jbe
iret
jg
je
clc
pop
gs
sbb
shl
call
in
bnd
lods
mov
imul
dec
outs
xchg
mov
call
push
scas
adc
push
xchg
ins
lahf
fimul
pusha
cmc
hlt
(bad)
jp
rcr
sbb
cmc
add
psubw
outs
xor
sbb
sub
xor
pop
and
or
cli
loop
push
xchg
lock
push
lock
lods
icebp
push
das
mov
xchg
loop
cld
push
inc
jmp
es
jmp
dec
daa
mov
je
daa
leave
jp
popa
lods
push
mov
das
cmp
ins
jle
push
xchg
dec
sub
dec
cmp
imul
(bad)
adc
mov
adc
pop
rol
ss
shr
push
inc
xor
std
and
cmp
jae
mov
jne
jmp
dec
dec
sar
xor
sbb
mov
daa
mov
cmp
lods
cmp
adc
push
imul
lods
test
jo
dec
xchg
sub
leave
mov
ds
scas
sbb
fwait
dec
out
clc
stc
xor
push
cmp
push
mov
test
ds
shl
std
lds
popa
jecxz
mov
outs
inc
dec
dec
adc
add
xor
and
pop
stos
sahf
or
retf
sar
sbb
jecxz
mov
je
lahf
std
sbb
jmp
pop
lahf
jo
push
aas
loop
xchg
or
mov
xchg
in
jle
pop
repnz
mov
std
push
cmp
stos
dec
ror
sub
loopne
scas
mov
sahf
aas
aad
gs
sbb
lock
cmp
dec
adc
imul
icebp
xor
pop
je
xchg
test
and
sbb
mov
ja
push
mov
stc
pop
mov
cmp
jmp
fsubr
lods
xchg
dec
cmp
mov
fdiv
hlt
outs
ret
cmp
fs
rcr
mov
mov
and
cmps
xchg
xchg
jg
lea
lahf
sbb
and
(bad)
jmp
xor
repnz
loopne
pop
mov
loop
clc
adc
cmc
cmp
inc
mov
or
cwde
repnz
mov
jo
fbld
or
jns
or
lods
daa
push
mov
inc
mov
xchg
adc
repz
and
push
into
divps
adc
mov
and
lea
jmp
pushf
fs
ins
or
rcr
fld
or
shl
xor
dec
cmp
inc
inc
and
xlat
das
pop
xlat
ins
pop
fistp
fcomp
test
cmp
and
mov
cmp
jp
jmp
or
sbb
fs
les
jns
aad
arpl
sub
pushf
ja
push
and
push
dec
xchg
(bad)
cmp
adc
mov
dec
aad
in
sbb
mov
stos
cmp
mov
aaa
push
sbb
mov
cdq
arpl
inc
retf
ret
iret
lea
push
jle
or
pop
frstor
sti
cmp
sbb
call
sub
jno
jae
bound
lock
(bad)
fneni(8087
and
je
(bad)
xchg
jne
push
in
sub
xchg
sbb
ret
out
rcl
loopne
sbb
dec
mov
adc
cmp
mov
push
sets
and
ja
pop
aas
out
loope
(bad)
cdq
xor
or
icebp
aas
jb
dec
shr
aas
and
mov
dec
stos
outs
pcmpgtb
jmp
jae
stos
cmp
mov
lahf
inc
push
mov
cmp
fxch
push
sub
sbb
in
cli
sbb
or
pop
xor
shl
jbe
push
repnz
push
or
adc
and
or
xor
movs
dec
sub
pop
or
shl
pushf
or
push
sbb
arpl
das
repnz
xor
push
in
imul
jge
cmovno
test
in
aam
cli
cmp
fdivr
lahf
test
cmps
xor
lahf
sbb
mov
jne
jo
push
aad
mov
addr16
ret
icebp
les
popf
iret
adc
jo
push
and
dec
div
(bad)
jb
(bad)
push
in
(bad)
jmp
jmp
fcmovne
test
aaa
les
or
scas
ret
mov
cli
in
push
call
sub
lds
mov
mov
out
lods
jo
lahf
jecxz
or
jmp
mul
int
and
xor
add
sti
dec
inc
(bad)
mov
xchg
enter
out
pop
cmp
lahf
xchg
aas
icebp
test
test
cli
ins
add
daa
or
or
jo
and
inc
std
cmps
call
jmp
mov
retf
jmp
add
push
push
jp
ret
push
stos
push
jge
ds
mov
cwde
dec
push
jmp
call
cld
rcr
fwait
dec
pop
cmp
add
cwde
ins
jmp
sbb
cmp
jle
cld
pop
mov
stc
stos
(bad)
idiv
cmps
or
int
mov
push
fdivr
js
lds
cmp
add
aas
retf
mov
std
push
sbb
(bad)
pop
inc
push
inc
push
fiadd
mov
sub
cmp
cld
nop
cmp
scas
dec
jmp
cmp
push
lods
stos
daa
or
ret
pop
rcr
sub
ins
dec
cmps
add
inc
cmc
and
ja
or
mov
aas
ins
cmc
mov
mov
xor
inc
dec
js
jns
jmp
aas
ins
or
ds
scas
popa
imul
add
adc
push
das
daa
push
and
sbb
xchg
mov
clc
mov
loope
ret
cmp
or
cld
inc
and
mov
retf
inc
xchg
cmp
cwde
test
cmp
stos
adc
jno
loop
adc
mov
ins
add
push
inc
xor
stos
inc
sbb
inc
outs
mov
add
xor
xor
pop
cmps
inc
cmp
popf
mov
adc
pop
jg
std
pop
shl
retf
xchg
jle
jecxz
mov
test
push
cmp
lods
jb
push
jne
fadd
aas
cdq
push
ins
neg
sbb
in
call
stc
inc
mul
lea
sub
mov
add
lds
dec
sti
fiadd
push
dec
scas
lock
sbb
or
fstp
lods
jae
lea
jo
push
popf
test
xchg
fwait
sbb
daa
jo
mov
push
add
cmp
mov
or
cmp
or
adc
cmp
cwde
or
mov
lahf
cmp
cmp
fwait
cmp
in
imul
push
jbe
jmp
pop
sbb
movs
adc
je
loopne
or
out
dec
or
fnstsw
jp
stc
adc
or
pop
retf
fidiv
imul
sub
popf
sahf
ror
mov
mov
adc
lods
out
rol
inc
out
sbb
sahf
cmp
leave
int
jbe
inc
popa
scas
or
dec
repz
lock
dec
cdq
lock
mov
int3
ret
adc
add
sub
or
popf
es
add
data16
sub
xchg
fmul
dec
stos
or
gs
push
push
sub
pop
imul
push
xchg
(bad)
push
call
inc
add
push
sub
xor
pop
mov
mov
ss
xor
pushf
pop
xchg
jl
cmp
mov
ret
pusha
(bad)
pop
stos
xchg
mov
pushf
dec
test
xor
sbb
ret
xchg
test
aas
pop
xlat
inc
out
adc
in
mov
xor
or
inc
mov
jge
(bad)
adc
stos
ja
xchg
call
pop
sub
test
or
cmp
push
int3
leave
mov
cwde
adc
push
adc
ret
push
pop
and
sub
mov
cmps
lea
jl
sub
shl
imul
lock
dec
xor
test
mov
mov
cs
sbb
xlat
fsubr
push
je
add
int
and
jmp
fidivr
icebp
int
mov
pop
test
pop
push
clc
fdiv
push
frstor
sub
test
movs
fisubr
xchg
aas
and
call
mov
sbb
call
icebp
xchg
and
xor
push
sti
shl
nop
jbe
bound
call
and
xchg
mov
int3
cmp
ret
jns
and
jg
and
clc
pusha
(bad)
xchg
xchg
(bad)
fcomp
mov
mov
adc
xor
shl
popa
dec
stos
mov
sbb
(bad)
mov
daa
mov
pop
dec
imul
pop
loope
clc
adc
cwde
repz
xchg
inc
aad
and
fnsave
inc
dec
and
push
and
jns
push
daa
das
push
push
push
mov
xchg
mov
int
jb
dec
sbb
jnp
(bad)
dec
mov
cmp
loope
xor
adc
xor
xchg
test
push
add
pop
(bad)
in
sbb
jge
ret
and
push
push
outs
and
pop
adc
sub
xchg
(bad)
mov
xchg
stos
cmp
movs
fmul
push
in
div
mov
icebp
clc
(bad)
cld
sti
pop
mov
mov
loop
xchg
rcl
test
and
push
lods
mov
jmp
xchg
sbb
pop
push
mov
aam
push
mov
fidivr
pop
mov
rcl
xor
std
outs
xor
cmps
xor
mov
sub
aam
(bad)
dec
bound
in
cld
adc
push
cmps
sbb
dec
and
pop
push
fisubr
sub
call
inc
mov
or
cdq
iret
add
fiadd
outs
int3
inc
jp
push
cmp
xlat
(bad)
fs
jmp
dec
cmps
pop
jge
add
sub
adc
dec
stc
cmp
das
iret
je
cs
mov
push
jmp
sbb
fst
sbb
iret
push
fadd
jae
xor
pusha
loope
and
sahf
pop
push
adc
fmul
jg
out
adc
xor
push
sub
lods
inc
fwait
mov
mov
jge
push
jge
jle
ins
adc
inc
xchg
sub
shr
xor
aam
in
push
and
inc
fsub
dec
test
ret
(bad)
nop
not
lock
push
call
clc
les
xchg
xor
xor
imul
adc
ret
jae
test
mov
and
dec
in
add
adc
call
mov
mov
push
mov
call
outs
lahf
jnp
xor
jns
scas
inc
xor
push
lock
sbb
data16
sub
mov
cmc
mov
aam
fcomp
and
adc
jl
loopne
ret
fcom
enter
or
jge
sub
mov
icebp
mov
shl
data16
mov
push
or
mov
push
stos
pop
jmp
xchg
addr16
pop
push
add
xchg
jl
pop
js
jl
add
popf
pop
(bad)
sub
popa
gs
data16
loopne
int3
mov
fcom
stos
pop
xchg
cs
(bad)
and
adc
fsubp
jno
clc
sub
in
ret
shl
lods
dec
pop
pop
inc
jmp
imul
add
out
xchg
mov
loopne
mov
test
in
outs
sub
jmp
mov
or
add
test
xchg
add
or
mov
pop
test
int
(bad)
sbb
pop
dec
cdq
sbb
sahf
or
in
ss
call
push
ss
or
cmp
push
jp
inc
pop
int
cmc
ret
push
arpl
mov
dec
dec
(bad)
in
inc
gs
dec
cmp
ret
popa
mov
cli
xor
mov
call
dec
cmc
loop
jns
paddq
sbb
mul
or
sbb
or
cmp
aas
mov
scas
sub
rcl
push
xchg
mov
mov
scas
inc
popa
test
movs
mov
fimul
repz
imul
ret
mov
daa
xor
xor
fucomp
xchg
imul
in
push
push
std
xchg
(bad)
call
inc
fist
jae
(bad)
daa
push
sub
xchg
inc
dec
lahf
popa
sbb
imul
cmps
pop
(bad)
daa
fldcw
stc
cmp
or
ror
jge
pop
push
lds
mov
imul
test
pop
in
fistp
cmp
jecxz
push
mov
dec
test
iret
call
stc
add
and
ss
mov
or
jno
cmc
jmp
or
shl
xor
jns
call
test
mov
mov
xchg
adc
push
outs
mov
mov
inc
dec
lock
mov
cli
jle
pop
movs
enter
or
repnz
popa
mov
(bad)
sub
aas
mov
iret
mov
loop
and
fwait
ins
add
push
in
mov
add
cmp
loopne
jo
push
popa
and
pop
out
add
ins
ja
cmp
inc
pop
mov
int
lods
sub
icebp
xchg
xor
xor
retf
pop
mov
mov
arpl
mov
mov
sub
out
jle
adc
mov
in
pop
in
ror
fadd
xchg
mov
jnp
push
aaa
push
and
mov
push
mov
jns
jmp
jb
push
iret
in
lock
movs
mov
jb
push
inc
fiadd
mov
push
mov
pop
popf
pop
or
pop
nop
push
jne
jne
retf
fsub
inc
nop
call
fwait
adc
test
retf
out
movs
outs
lods
rcr
pop
xchg
or
inc
push
xor
scas
inc
cmp
dec
in
pushf
inc
jo
fisttp
(bad)
push
xchg
sub
jb
sub
bnd
mov
adc
aaa
js
imul
xor
nop
jns
das
fild
jg
or
out
lea
jl
call
hlt
test
sub
cli
shl
add
div
adc
jns
or
xor
call
pop
fdiv
imul
into
vdivpd
cmps
cmps
pop
adc
jl
cmp
daa
scas
push
push
and
lock
cwde
aaa
dec
jp
mov
jle
push
jl
fbstp
mov
mov
pop
cmp
or
mov
or
aaa
add
adc
dec
(bad)
pusha
ret
sub
repz
ret
adc
or
cmp
sahf
adc
int
dec
push
ror
pusha
xor
push
popa
dec
xchg
cmp
and
mov
mov
jp
mov
rol
stc
sbb
shufps
lock
lods
push
sti
push
js
into
stos
mov
sbb
cmp
das
shr
into
loop
xor
(bad)
ins
or
dec
mov
hlt
jl
mov
jae
repz
out
jl
dec
xor
retf
push
cmp
ja
mov
mov
int3
lds
jp
stos
cmp
cmps
or
mov
add
aam
jmp
cdq
iret
sub
adc
pop
fstp
mov
sbb
pop
jmp
push
in
jmp
ffree
stc
dec
int3
pop
mov
(bad)
mov
jne
je
daa
call
dec
fcmovne
out
ins
sub
xchg
inc
inc
inc
lds
add
add
ss
loop
xchg
inc
shl
not
loopne
shl
adc
dec
xor
(bad)
test
movs
jmp
out
(bad)
lahf
lahf
inc
xchg
pop
sahf
bound
mov
dec
inc
push
pop
jecxz
repz
out
ins
push
pop
(bad)
popa
std
imul
cmps
add
nop
aam
fisubr
push
es
and
lea
ss
retf
xchg
and
jp
xchg
movs
(bad)
movs
in
mov
retf
cli
in
in
sub
hlt
aad
jl
iret
js
jmp
xchg
mov
mov
lea
sbb
imul
pop
push
ret
mov
jge
cli
enter
fidiv
mov
pop
mov
icebp
jns
lea
mov
pop
mov
lea
lahf
and
call
jle
or
sbb
stos
add
adc
fdiv
pop
inc
pop
pop
pop
push
scas
stc
push
lahf
adc
sub
cmp
cmp
test
push
dec
add
and
icebp
sbb
mov
pop
cdq
inc
mov
add
in
leave
jmp
cmps
jbe
(bad)
rcr
int3
sub
push
data16
sub
mov
sbb
fdiv
pop
jb
xchg
push
movs
cmp
mov
mov
icebp
rcr
mov
int3
push
jg
dec
sar
daa
push
dec
pushf
push
jle
mov
adc
sub
jp
ss
mov
add
in
repz
sbb
dec
mov
push
out
ret
jle
into
div
mov
cmp
push
push
loopne
jmp
mov
mov
jbe
stos
popa
sub
fist
jns
mov
inc
xchg
movs
mov
(bad)
int3
jns
outs
shl
jmp
pop
arpl
pop
mov
fwait
mov
or
dec
movs
push
dec
dec
aam
bnd
mov
out
push
push
(bad)
pop
icebp
fisttp
je
loopne
in
stos
pop
test
dec
inc
push
cwde
push
test
sbb
push
xor
aas
sub
push
out
or
mov
push
sub
mov
inc
xchg
push
jb
in
in
imul
lea
(bad)
inc
test
cmps
xchg
add
inc
retf
mov
push
scas
in
xor
add
mov
xlat
and
mov
cmp
and
loope
in
sbb
pop
cmp
xchg
mov
shl
pop
in
xchg
sub
adc
xchg
inc
jno
jmp
mov
sbb
out
cdq
inc
mov
xor
jbe
dec
inc
aad
jp
push
int3
pop
(bad)
push
adc
sub
jo
out
dec
pushf
sti
lods
int
cmp
inc
dec
dec
jg
imul
adc
dec
imul
xchg
leave
xchg
push
xchg
jnp
loop
sbb
call
jecxz
sub
xchg
and
push
sub
mov
popa
sbb
or
pop
push
xchg
inc
inc
jmp
jmp
jns
in
cdq
push
das
(bad)
add
jmp
add
mov
test
in
and
jne
in
pop
out
mov
or
mov
or
(bad)
je
pop
int3
iret
push
into
push
dec
or
ficomp
xchg
sub
and
xor
xchg
in
adc
or
xor
ret
(bad)
pushf
mov
mov
fs
push
leave
sub
ins
pop
adc
jl
xchg
xor
shr
lahf
mov
out
(bad)
int
and
add
stos
xchg
sbb
add
ret
clc
cld
lods
js
aaa
(bad)
jmp
xchg
rol
mov
call
fwait
jno
xchg
xchg
jge
or
dec
leave
ja
jbe
add
lods
mov
retf
imul
adc
fsubp
stc
ret
cwde
xor
or
inc
sub
les
xchg
arpl
fidivr
xor
xor
out
xchg
scas
mov
mov
inc
xorps
enter
call
add
sub
loop
fistp
sub
cld
daa
ss
in
scas
cmp
cmps
scas
adc
sub
out
xor
inc
mov
pushf
add
adc
inc
adc
je
outs
fimul
mov
out
cli
sub
mov
or
mov
xchg
popa
ss
inc
or
sbb
mov
movs
adc
and
cmp
sbb
arpl
cmp
push
das
es
sub
fisttp
adc
pop
cmc
add
test
cwde
daa
imul
dec
dec
adc
mov
mov
dec
adc
or
test
stos
shl
xor
add
or
data16
add
mov
push
lods
scas
xchg
and
aam
dec
push
and
sbb
mov
xor
or
mov
mov
shr
and
jg
out
sbb
inc
jge
imul
push
dec
fsub
mov
sbb
push
mov
inc
jle
inc
in
fild
sbb
lahf
or
outs
dec
stos
out
adc
ss
call
xchg
mov
loop
mov
push
lahf
pop
aam
cld
dec
mov
outs
repz
leave
mov
(bad)
stos
in
stos
popa
imul
stos
sti
jne
sbb
sub
sti
bound
cwde
lods
jp
mov
push
jp
jae
(bad)
repnz
add
or
mov
adc
into
pop
fwait
rol
stos
sbb
fldcw
cmp
push
jo
cmp
cld
dec
sub
out
dec
bound
add
popa
jg
inc
push
test
xchg
sub
xchg
test
push
dec
sub
sub
sbb
sbb
inc
int
test
std
sub
sub
pop
daa
das
(bad)
pop
(bad)
fsub
xor
arpl
pop
lock
ins
lods
jle
js
sub
pop
or
es
loop
pop
mov
or
push
mov
push
mov
sub
outs
pop
out
inc
jae
je
test
jmp
push
dec
mov
bound
mov
jb
dec
test
fdivr
je
cmps
ins
mov
pop
xchg
rcr
push
std
mov
dec
mov
stos
push
jg
cmc
test
and
mov
in
mov
pop
lds
and
movs
mov
ins
sbb
adc
push
and
or
cmp
mov
leave
ret
sar
fwait
push
jle
movs
dec
rcr
push
xor
mov
stos
arpl
push
loope
fdiv
outs
pop
pusha
jbe
inc
push
mov
jg
and
(bad)
sub
mov
xchg
xchg
adc
add
leave
mov
ret
lods
imul
push
daa
idiv
leave
stc
mov
mov
int
jecxz
getsec
and
inc
sub
xchg
dec
mov
fnsave
ins
or
or
mov
sbb
retf
outs
out
in
jl
cmp
fcmove
lods
jnp
or
dec
sub
mov
or
xor
cmc
fadd
cmc
in
sahf
scas
bnd
call
lods
mov
adc
loopne
in
jg
or
fdivr
pop
in
and
fist
test
inc
std
inc
jb
icebp
mov
cmp
jg
inc
in
mov
pop
test
inc
movs
rol
jp
(bad)
xchg
cmp
push
call
pusha
jb
mov
xor
cmp
repz
fisubr
xor
das
add
jg
jae
scas
lock
xor
mov
pusha
pop
push
dec
push
push
push
xchg
pop
enter
jns
icebp
mov
rol
sub
out
cdq
mov
int
pushf
stos
call
test
int3
in
std
out
addr16
jne
pushf
sbb
jge
jge
sti
jno
gs
cdq
rol
rcl
test
pushf
push
js
test
aas
inc
mov
jl
sub
mov
sub
lds
mov
mov
inc
nop
cmps
and
mul
mov
stc
dec
in
cmp
shl
push
jmp
dec
push
jns
xchg
mov
mov
mov
aas
xchg
cmp
inc
mov
pop
rcr
inc
outs
or
aad
lea
push
cld
call
pop
jg
sbb
movs
and
lahf
push
sub
scas
movs
in
and
stc
repz
mov
in
jl
pop
loope
(bad)
sub
push
cdq
(bad)
pop
pop
(bad)
push
mov
dec
fild
mov
stos
imul
sub
pop
dec
mov
mov
xor
or
jae
mul
gs
lock
pop
mov
pop
jo
in
scas
inc
pop
mov
fiadd
ja
les
lock
shl
push
nop
fnstcw
mov
sbb
xchg
shl
aad
es
shl
mov
and
mov
lods
jmp
fidiv
clc
sub
add
sbb
aad
(bad)
call
mov
inc
pop
mov
jae
cld
cmps
repnz
sub
or
iret
imul
mov
cli
add
sbb
jp
pop
pop
je
jp
jb
sti
pop
fadd
mov
fmulp
inc
fisttp
popf
mov
jecxz
out
sub
lea
jmp
push
sti
or
xchg
push
mov
mov
cs
adc
out
dec
shl
loopne
leave
lods
inc
mov
xchg
ja
adc
outs
or
inc
test
sbb
(bad)
cmp
ret
call
lock
push
jge
sub
out
push
add
or
hlt
sub
cmp
popa
sub
xor
mov
add
push
test
xchg
sbb
mov
sbb
dec
imul
rol
or
mov
out
xor
dec
ror
in
xchg
(bad)
cmp
gs
jl
adc
jmp
mov
fnstsw
xchg
pop
mov
add
(bad)
test
jo
mov
sahf
inc
pop
or
lds
jmp
dec
and
inc
push
into
shl
hlt
out
jg
jecxz
mov
(bad)
cmp
xchg
into
add
push
mov
or
mov
cdq
add
or
js
push
xor
sub
in
mov
je
(bad)
adc
sar
xchg
xchg
mov
mov
(bad)
aam
aaa
pop
lods
mov
mov
pop
aaa
sar
mov
fnstcw
pop
jbe
das
test
sbb
or
inc
std
jo
fdivr
mov
sub
icebp
je
push
addr16
mov
push
fdivr
mov
ja
dec
push
cmp
dec
inc
cmp
xor
xchg
sub
dec
lahf
test
cmp
sbb
dec
shl
nop
jecxz
mov
fst
sbb
js
ja
scas
fstp
mov
mov
in
jnp
arpl
jo
jmp
pop
pop
ss
cmp
shl
cmp
cmp
fmul
test
clc
retf
xor
rcl
inc
or
outs
sub
cmc
idiv
mov
dec
in
call
jae
shr
imul
mov
call
mov
(bad)
mov
sbb
mov
stc
xchg
xchg
ss
xchg
cmc
xor
jo
rcr
sti
mov
jno
pop
xor
aad
push
jg
adc
mov
rcl
fisub
mov
add
adc
fimul
jns
inc
dec
bound
cmp
lea
int
not
pop
test
(bad)
in
sbb
sub
ret
repnz
xor
arpl
add
dec
outs
aas
sbb
or
push
mov
cmp
js
jmp
pop
out
ss
mov
enter
mov
fwait
adc
arpl
dec
push
popw
mov
test
cmp
fs
jecxz
call
dec
xor
test
xchg
clc
pop
adc
(bad)
out
pop
and
or
xor
or
inc
inc
pop
shr
dec
pop
xchg
dec
dec
adc
xor
mov
jns
xchg
dec
retf
xchg
cmps
cmps
into
aam
sbb
dec
(bad)
jmp
sahf
sub
mov
and
mov
push
mov
fstp
push
in
enter
data16
jg
dec
scas
and
jg
push
sub
stc
push
xor
pop
int3
jbe
push
leave
loope
stos
or
fnsave
repz
jg
mov
mov
xchg
push
inc
pop
adc
test
out
xchg
movs
jns
retf
add
inc
cmp
inc
adc
jge
arpl
lds
pop
push
jecxz
sub
xor
hlt
(bad)
cli
adc
sbb
outs
dec
inc
std
mov
xchg
adc
jmp
adc
lods
mov
into
jns
fild
dec
jo
sar
dec
out
ror
aam
mov
jae
push
add
mov
(bad)
ficom
sbb
or
sbb
lods
(bad)
mov
lds
cmc
cli
sahf
pop
inc
out
sbb
leave
sbb
cmp
sub
sub
lahf
xchg
add
jns
fimul
lock
mov
mov
cmp
and
stos
seto
inc
dec
pop
adc
pop
stos
lds
push
enter
adc
nop
sbb
int3
fstp
mov
loop
pop
adc
sahf
fadd
pop
sti
movs
aam
xor
cmp
ror
sbb
sbb
jne
ss
sub
sub
int
and
mov
cmp
fadd
pusha
lahf
jne
pop
stos
mov
aam
cmp
and
in
cs
sub
nop
jp
popf
inc
mov
xchg
fcomi
xor
fild
pop
(bad)
mov
(bad)
retf
nop
mov
add
add
(bad)
test
fs
push
sub
scas
mov
mov
push
or
xchg
stc
(bad)
xchg
jo
sar
mov
push
pop
bound
ss
test
push
outs
and
je
adc
jns
outs
mov
mov
mov
cmps
push
mov
ret
pop
inc
repz
iret
push
push
push
shr
cmp
xor
mov
and
fldcw
rcr
push
jecxz
sar
clc
sbb
mov
mov
mov
dec
fisubr
push
and
push
or
and
cwde
int
inc
xchg
ror
gs
mov
xor
ss
repnz
bound
popa
retf
test
push
stos
jno
add
fwait
xchg
ins
nop
sbb
mov
adc
movs
mov
pop
aad
xchg
xchg
imul
int
push
imul
test
movs
mov
mov
arpl
push
retf
addr16
or
test
scas
(bad)
cmc
mov
out
cld
xchg
inc
ret
(bad)
retf
pop
dec
sbb
(bad)
in
or
inc
mov
fcomp
dec
sbb
mov
add
mov
(bad)
sar
cld
and
inc
sub
shl
or
sbb
jmp
mov
sbb
jne
cld
cmp
cmp
or
dec
dec
and
call
inc
cld
mov
jo
jmp
mov
icebp
enter
idiv
adc
scas
fdiv
push
push
and
in
fdiv
jno
push
mov
pop
jecxz
int3
add
sar
fadd
sar
shl
pop
stos
std
xor
call
dec
test
sar
aas
cmp
and
inc
mov
iret
add
pop
out
mov
jo
jmp
dec
cmp
cmc
or
sbb
repnz
inc
dec
movs
sahf
pop
add
call
call
inc
xor
icebp
loope
push
in
pop
sbb
xchg
pop
in
and
fcmovb
inc
cld
sub
bound
sub
jo
sub
mov
cmp
and
sbb
xchg
(bad)
adc
lods
mov
and
sbb
cld
jcxz
xchg
sub
js
xchg
iret
dec
ret
ret
stc
(bad)
fsubr
test
push
cld
xor
not
dec
(bad)
test
lods
mov
stos
add
(bad)
(bad)
pop
pop
push
add
inc
pop
or
aad
in
ja
out
(bad)
jbe
repnz
aam
xchg
sbb
(bad)
shr
pop
jge
retf
leave
scas
clc
inc
retf
fild
jg
sahf
push
fld
enter
mov
mov
cmps
push
lods
data16
(bad)
imul
int
out
pop
pop
popa
test
and
or
xchg
add
out
int
sub
(bad)
in
imul
jns
pop
xor
leave
out
rcl
mov
xchg
push
leave
xor
lods
dec
arpl
add
jbe
fsub
xchg
imul
mov
lds
push
mov
repz
sub
jp
inc
loopne
int3
in
push
retf
dec
(bad)
mov
xor
mov
repz
or
cmp
fwait
lds
mov
sub
and
xlat
dec
mov
xchg
jmp
pop
mov
sub
pop
(bad)
ja
aas
pushf
push
jecxz
idiv
cmp
push
(bad)
sbb
cmp
xchg
rol
mov
cmp
hlt
cs
mov
push
cmc
push
cmp
jbe
dec
mov
repz
lods
aaa
les
xor
adc
add
int3
addr16
inc
lock
dec
xchg
lock
stos
mov
fidivr
cmp
ud1
dec
out
retf
push
ret
push
inc
lahf
push
dec
or
and
mov
ds
dec
jg
sbb
nop
int
es
lea
mov
ins
imul
mov
(bad)
xchg
cmp
call
lea
push
fnstsw
(bad)
cmc
enter
out
stos
arpl
add
pop
inc
lahf
mov
cmps
out
scas
pop
data16
mov
or
repz
and
cli
inc
les
pop
ss
pop
dec
sub
push
cmp
fldenv
setnp
fldenv
icebp
test
and
test
hlt
add
cdq
inc
retf
stc
pop
add
and
xor
scas
int
jne
xor
addr16
fisubr
mov
sub
sahf
mov
adc
jmp
out
adc
jl
adc
call
addr16
cmp
sub
push
xor
test
daa
ss
push
in
cmp
cmp
inc
push
ins
fiadd
dec
das
fcomp
mov
push
dec
std
jae
cmp
(bad)
mov
fistp
xor
push
movs
lea
aad
push
and
dec
mov
jno
pop
xchg
xor
ins
aad
xchg
inc
cmps
cs
loop
cmp
push
mov
pop
in
imul
out
call
sbb
or
and
push
push
test
xchg
loope
cmp
fnstcw
jmp
outs
gs
and
cmp
pop
pop
inc
push
dec
or
cmp
int3
push
mov
mov
fmul
sbb
lock
int
test
xor
imul
xor
popf
or
jb
or
sbb
inc
inc
dec
test
das
stos
jg
push
cmp
push
sbb
push
mov
in
cdq
push
push
in
push
inc
adc
adc
cmp
jb
pop
sbb
mov
out
mov
call
sub
and
mov
pop
das
push
stos
out
movs
jbe
and
mov
in
sub
int3
sar
enter
dec
nop
fcmove
or
pop
xor
into
sub
jle
adc
cmp
mov
into
fmul
in
rcr
jl
pushf
adc
in
pop
aam
sti
mov
dec
fcomp
jae
je
mov
cdq
fndisi(8087
jno
(bad)
scas
(bad)
xor
xor
inc
mov
adc
xchg
inc
repnz
sbb
mov
jmp
test
mov
mov
mov
push
sbb
adc
sub
fsub
and
xor
aaa
stos
cmp
mov
xchg
out
inc
out
stos
mov
xor
loop
es
and
pop
cwde
lea
jmp
pop
ds
add
mov
sub
add
ficomp
test
rcr
lock
push
and
popf
dec
xchg
sub
cdq
arpl
cmps
mov
jo
mov
add
(bad)
mov
aad
mov
cmp
retf
mov
xor
jmp
inc
stc
lods
inc
repz
add
push
call
adc
(bad)
cmp
dec
sub
jg
add
mov
in
or
call
pop
into
stc
icebp
xchg
outs
xor
or
loopne
push
sub
adc
popf
out
push
hlt
xor
je
sub
adc
jmp
imul
pop
bnd
outs
pop
mov
movs
jns
setle
pushf
mov
sbb
mov
repnz
mov
lock
pop
loope
mov
jb
mov
shr
jl
cmp
and
aaa
ja
add
es
add
in
test
cmp
xor
jmp
inc
mov
ficom
sti
in
xchg
movs
fstp
aaa
inc
mov
jo
movs
(bad)
adc
dec
mov
int
mov
push
ss
ret
mul
inc
mov
int
jmp
cmp
ror
pop
xchg
and
inc
jge
jno
or
mov
rcr
pop
push
imul
or
cmp
repz
sar
call
arpl
xor
jo
xor
out
sbb
fimul
nop
rol
std
int
jne
adc
sbb
int3
repnz
mov
loop
stos
lock
stc
mov
adc
xor
mov
push
mov
scas
imul
dec
mov
lods
mov
cmp
movs
and
outs
xor
mov
addr16
jbe
xor
xchg
push
mov
sbb
call
popa
int3
dec
repz
sub
test
aas
(bad)
mov
jge
cmp
leave
(bad)
cmps
mov
inc
mov
imul
out
ds
in
push
out
pop
test
mov
sub
stos
fs
adc
and
and
fcom
mov
sub
mov
imul
sbb
loope
lock
add
mov
sbb
inc
pop
jle
mov
cmc
fstp
and
or
je
xlat
adc
paddusw
mov
addr16
shl
repz
loop
aas
(bad)
std
push
mov
fimul
(bad)
loop
jp
stos
mov
dec
bound
(bad)
inc
test
xchg
add
and
pop
cmps
jnp
test
and
sti
movs
cmps
sbb
inc
pop
nop
pushf
jmp
dec
std
dec
push
mov
adc
cdq
and
pop
pop
mov
xor
out
pusha
sbb
pop
mov
popf
ror
push
mov
dec
ins
sahf
hlt
or
pop
jbe
fstp
cmp
jmp
out
jne
cdq
loop
jo
cld
loop
fnstenv
ds
dec
clc
lods
jge
pop
mov
sbb
and
int
jns
mov
fild
cmp
jle
loopne
daa
jno
into
outs
cmp
int3
(bad)
mov
add
dec
in
movs
cmp
dec
adc
cmps
jb
es
pop
fisubr
imul
test
js
push
or
mov
inc
adc
imul
in
in
in
xchg
ins
sbb
cld
mov
pop
push
cmp
mov
push
dec
ss
aad
fisubr
cmps
mov
or
lock
mov
fisub
iret
push
and
cmps
iret
add
pusha
idiv
repnz
mov
push
out
or
mov
pop
push
sahf
ins
clc
jg
aam
push
jnp
sbb
test
sub
push
jmp
test
les
retf
sti
inc
mov
sub
mov
adc
xchg
ret
in
sbb
add
dec
movs
adc
mov
imul
popf
call
and
push
add
mov
ins
dec
mov
iret
cmp
nop
int3
dec
sub
sbb
lea
and
push
jecxz
and
push
push
retf
int
shr
stos
and
sti
cmps
sbb
repnz
mov
lahf
mov
and
js
mov
mov
int
lock
inc
ficomp
jne
mov
rcl
movs
dec
fild
pushf
jp
jg
cmp
inc
cmp
or
push
mov
pop
loopne
or
lods
jnp
mov
(bad)
sbb
fs
in
mov
jmp
dec
jl
test
ss
pop
ins
inc
je
lods
clc
outs
adc
xchg
fsub
int
in
mov
ret
mov
jge
sub
adc
lock
cmp
aaa
mov
cmc
les
push
mov
and
cdq
mov
test
popf
cli
retf
in
outs
jmp
repnz
in
cmp
arpl
popf
in
into
jg
xchg
ret
(bad)
mov
add
pop
lahf
jl
rcr
mov
pop
out
dec
test
add
mov
push
les
test
aad
lods
iret
and
and
sub
or
ret
lods
xor
push
mov
out
pop
ret
or
or
dec
adc
js
push
test
mov
mov
loopne
xchg
jnp
js
sub
or
or
scas
lock
std
push
dec
dec
(bad)
fld
push
adc
into
setnp
shr
jbe
scas
add
repz
mov
push
hlt
push
push
out
(bad)
shl
jle
add
sub
push
cmp
inc
lahf
inc
jge
cs
or
aad
pusha
sbb
jp
push
leave
pop
xor
push
call
inc
fisttp
loopne
mov
js
shl
add
fwait
js
sbb
mov
mov
push
in
cmp
pop
mov
scas
int
cmp
jne
adc
push
sub
iret
int
ficom
call
xor
cmp
mov
push
test
movs
sbb
ficomp
bound
cdq
xor
dec
push
call
xchg
ins
dec
jae
sub
out
xchg
pop
sbb
ret
scas
out
pop
call
(bad)
mov
mov
cmp
pop
pop
aas
lock
retf
xchg
icebp
test
push
aaa
xlat
lea
movs
outs
retf
sahf
mov
dec
inc
call
add
or
jecxz
inc
adc
imul
xlat
xor
scas
jbe
sbb
or
pop
dec
cmc
into
cmp
test
inc
addr16
test
scas
push
xchg
inc
ins
popf
push
arpl
loope
mov
sub
mov
mov
xor
dec
xor
js
cmp
dec
loope
test
or
jnp
lds
out
ret
mov
and
pop
mov
clc
in
outs
push
ss
mov
(bad)
in
cmps
and
movs
pop
fiadd
out
jl
lods
inc
pop
sub
push
cmps
jbe
adc
(bad)
int3
lock
sub
data16
dec
mov
and
sbb
inc
imul
mov
fstp
or
cli
pandn
push
xchg
sar
pop
out
adc
or
imul
sub
sub
test
xchg
scas
pop
loop
push
xor
mov
(bad)
sti
fstp
and
inc
jp
push
cmp
mov
add
dec
jbe
or
sub
clc
sub
cs
jecxz
call
aaa
aam
fwait
unpcklps
dec
lahf
sbb
pop
enter
stos
nop
add
fist
loop
ins
or
ins
adc
pop
test
xlat
push
mov
movs
xor
cmp
pop
sbb
loopne
jl
adc
mov
nop
mov
fstp
std
fdivr
daa
inc
xor
add
in
(bad)
lods
xchg
test
jmp
in
out
call
in
or
sahf
cld
(bad)
pop
ficomp
sti
pop
mov
push
mov
push
out
sub
movs
cld
xchg
loopne
sub
mov
sub
push
lahf
jg
inc
lds
fld
xchg
cmp
popf
sar
fwait
cmp
scas
call
pop
push
in
out
jmp
push
enter
fs
neg
enter
sub
test
stc
or
or
int3
and
jns
call
inc
and
jecxz
and
loope
inc
push
and
jae
cmp
mov
popa
arpl
jmp
inc
dec
shl
je
xchg
jae
aad
jb
xchg
sbb
mov
(bad)
jecxz
not
sub
and
mov
jge
pop
mov
xor
dec
shl
dec
aas
and
in
pop
sbb
cmp
les
adc
cs
mov
in
aad
cmc
and
stc
jae
mov
ror
rcr
pop
lss
inc
and
push
hlt
cmp
jge
inc
inc
push
scas
adc
jne
js
adc
or
and
cli
jmp
xchg
pop
inc
adc
fnstenv
mov
aas
pop
cmp
mov
mov
ja
push
ficomp
sbb
sbb
bound
test
test
scas
mov
in
aaa
push
shr
arpl
sahf
pop
cmc
es
and
div
jo
je
sbb
mov
dec
icebp
mov
inc
clc
sub
inc
test
add
inc
retf
pop
pop
mov
or
out
adc
std
mov
rol
xchg
fcomp
(bad)
mov
mov
gs
loope
stos
icebp
loope
in
jmp
lds
sub
xchg
scas
std
pop
fadd
leave
dec
add
cmc
cmps
pop
mov
mov
loopne
dec
jge
popf
add
fldenv
retf
and
aas
mov
mov
repz
pop
in
ss
cmp
repnz
in
jbe
push
xchg
lea
jo
fild
xchg
fist
add
or
icebp
and
jecxz
fucom
imul
cmp
fild
aam
inc
pop
cmp
dec
in
dec
fimul
ret
inc
xchg
ss
call
stos
sbb
add
jb
scas
out
pop
ja
adc
pop
xchg
pop
jae
adc
cwde
outs
pop
shr
pop
call
push
lods
add
or
mov
pop
sbb
jbe
push
cmps
lahf
daa
sbb
jnp
repz
shl
push
pop
inc
stos
scas
std
mov
cmp
cmps
retf
mov
ficom
rol
int
jno
fwait
xor
sbb
dec
ins
out
es
mov
mov
mov
sbb
dec
mov
pop
mov
dec
daa
test
sub
or
loope
mov
mov
mov
xchg
add
sub
test
fsubr
in
loopne
add
ja
rcr
or
out
retf
xor
sbb
fbstp
std
icebp
pop
adc
jecxz
xchg
cmp
shl
movs
aad
add
ficom
pushf
cmp
dec
inc
shl
push
push
js
push
cmp
and
cmps
xor
pop
enter
std
jno
repz
xchg
pop
cmp
ins
xchg
aas
xchg
sahf
push
fnstenv
sbb
inc
push
mov
out
xlat
fwait
jns
loope
mov
mov
adc
inc
iret
push
and
stc
lods
imul
fdivr
sahf
mov
div
xor
jmp
pop
sbb
or
call
fcomp
mov
sbb
hlt
cmp
stos
cmp
outs
dec
hlt
js
cmps
mov
aam
or
xchg
xchg
in
or
js
dec
sub
shl
push
je
out
cmp
sbb
fchs
inc
jo
adc
jmp
retf
xor
shr
push
xchg
les
cmp
enter
mov
push
fmul
das
fmul
pop
mov
nop
xchg
sar
dec
xor
cmps
ror
cmc
mov
mov
outs
aam
bound
cmp
in
cmp
jl
aaa
sbb
mov
shr
loopne
test
ficomp
adc
sbb
pop
fidivr
call
add
inc
std
mov
loop
cmp
adc
es
add
daa
jg
push
push
pop
ret
push
aad
push
mov
mov
mov
push
jae
cli
or
fiadd
pop
je
jns
pushf
mov
cs
mov
adc
clc
pshufw
xchg
fs
bnd
movs
mov
pop
xor
imul
inc
outs
push
adc
jne
pop
cmps
(bad)
dec
push
mov
ds
add
mov
into
mov
mov
push
jae
loope
out
and
loop
gs
or
push
or
cmp
push
and
sbb
cld
call
jae
pushf
sub
add
xor
dec
lds
jns
ja
mov
aam
cmp
mov
push
mov
pop
mov
lods
pop
stc
and
add
xor
mov
add
inc
mov
(bad)
dec
inc
cmc
mov
pop
dec
loope
sub
jnp
ficom
(bad)
jp
fld
push
sub
out
int3
test
dec
(bad)
sbb
jmp
pop
jmp
fld
inc
dec
sub
out
daa
mov
in
and
sub
cmp
mov
pop
(bad)
adc
xchg
jbe
xor
pop
xchg
mov
or
or
les
jp
gs
pusha
adc
daa
jb
mov
cmp
mov
cmp
repnz
sbb
test
push
mov
cmp
(bad)
(bad)
adc
int3
scas
xchg
cdq
in
popf
adc
xor
(bad)
imul
inc
pop
sbb
sub
xlat
sub
inc
push
pop
neg
lahf
xor
cld
inc
int3
mov
push
fucompp
inc
xor
add
cli
adc
int
out
rcr
pop
loopne
jp
fsub
sar
into
mov
in
test
ret
in
ucomiss
add
mov
push
mov
inc
cmc
mov
ror
cmps
dec
cmp
push
pop
imul
cmps
sbb
adc
adc
mov
jmp
scas
and
repnz
or
fidiv
mov
ins
or
jae
call
jecxz
dec
nop
je
fisttp
adc
or
leave
pop
sti
int3
je
xchg
dec
mov
int3
popa
enter
dec
iret
and
fs
jnp
jbe
lock
je
jbe
scas
dec
jecxz
xor
and
fild
mov
jmp
xchg
call
pshufw
xchg
add
or
mov
es
les
mov
inc
xchg
mov
(bad)
(bad)
fbld
sub
mov
jne
adc
pop
(bad)
in
aam
inc
sahf
sbb
xchg
xchg
movs
jecxz
std
(bad)
hlt
vmulpd
jbe
push
inc
mov
ffree
push
imul
stos
dec
stos
test
ins
xlat
ss
adc
(bad)
mov
pop
mov
and
daa
ret
test
mov
je
jle
and
pop
ins
inc
jo
cmps
ins
pop
ins
lock
gs
jecxz
or
add
jbe
mov
call
push
out
je
pop
mov
pop
jne
push
or
rol
xor
loop
mov
and
sar
xchg
mov
mov
dec
pop
cmp
ja
out
mov
push
mov
push
(bad)
pop
not
hlt
xchg
push
cmp
fidivr
lods
fcomp
ss
(bad)
fcom
ds
xor
cmp
xchg
inc
sub
adc
(bad)
sbb
add
out
ins
in
int3
cs
mov
push
mov
xor
ss
dec
push
repnz
lea
leave
cld
loopne
shl
adc
cld
adc
push
sbb
inc
icebp
adc
pop
and
aaa
push
xchg
jbe
ja
cs
mov
xor
push
(bad)
fcmovnb
aam
and
cwde
inc
cdq
adc
adc
pop
out
in
scas
sub
into
aas
sub
xchg
cmp
jo
xchg
adc
(bad)
and
in
shr
out
xchg
loop
mov
sub
inc
pusha
add
pmaddwd
dec
jle
stos
xor
ja
cmc
jmp
xor
push
xchg
push
ja
lahf
aas
fsub
xchg
mul
(bad)
int
xlat
xchg
pop
inc
out
repz
sbb
(bad)
test
stos
sub
int3
or
xor
std
out
push
sub
mov
dec
dec
ja
repz
push
mov
loop
daa
into
rcr
pop
ja
push
mov
iret
push
jno
inc
jge
jp
enter
push
movs
push
cmp
mov
call
out
mov
xchg
out
ds
inc
popf
outs
std
inc
fiadd
cmp
and
add
jmp
mov
js
add
mov
imul
mov
push
call
dec
jl
ds
int3
call
jne
cmp
jecxz
adc
aas
jns
inc
fwait
cdq
xchg
pushf
shl
pop
hlt
mov
das
cmp
rol
shl
and
xchg
(bad)
cmps
into
jmp
repnz
loop
pop
test
sbb
bound
adc
mov
inc
xor
pop
fldpi
mov
sub
(bad)
cli
scas
jle
clc
mov
add
pusha
in
scas
daa
pop
rol
adc
inc
sbb
ins
imul
into
ret
adc
sahf
or
jg
jle
aaa
inc
mov
rcr
test
ret
xchg
ret
pop
xchg
sbb
mov
adc
lock
jp
ror
adc
aaa
cmp
out
daa
les
mov
jnp
sbb
jmp
daa
jle
dec
in
add
in
sbb
mov
(bad)
xchg
push
jno
adc
aam
ins
(bad)
fdivrp
xchg
sti
es
and
push
stc
dec
or
mov
(bad)
sti
xchg
push
jg
aad
mov
gs
dec
ret
pop
sub
sbb
push
stc
mov
xchg
and
int
aas
mov
movs
mov
adc
push
outs
mov
ins
and
mov
out
inc
push
popa
pop
les
adc
xlat
pop
adc
stos
ja
push
xor
iret
fild
(bad)
xchg
iret
sahf
retf
mov
sub
frstor
enter
pop
mov
loope
xchg
jo
repz
in
pop
xor
sti
inc
mov
xchg
ror
mov
cmp
ins
dec
stos
mov
add
outs
sbb
mov
sbb
or
int
sbb
aaa
call
adc
mov
cmps
and
sbb
neg
pop
hlt
jmp
mov
push
sbb
loop
dec
movs
sub
and
ror
lds
cld
xchg
out
movs
inc
jp
dec
and
xchg
pop
shl
mov
xchg
xlat
cmp
fdiv
lahf
xchg
loop
outs
lahf
mov
clc
inc
arpl
(bad)
arpl
data16
test
pop
pop
mov
cdq
dec
(bad)
outs
repnz
jecxz
imul
pusha
popa
rcl
pop
in
add
sbb
and
dec
lock
pop
inc
lahf
int3
dec
stos
cli
sbb
dec
add
or
and
inc
xchg
xor
dec
mov
lds
inc
dec
push
mov
inc
mov
push
sub
mov
xchg
mov
and
scas
lea
repnz
icebp
lods
scas
or
push
loop
mov
xor
mov
mov
dec
sti
pop
xor
popf
mov
cmps
imul
xor
ret
ret
movs
sti
outs
or
aaa
adc
cmps
xor
jmp
aas
adc
xchg
fistp
cwde
cmps
xlat
sub
pop
out
mov
jo
out
sar
out
stos
daa
in
(bad)
loopne
jl
(bad)
jmp
mov
or
scas
call
popf
pop
xor
je
adc
fimul
and
jle
push
sbb
pusha
cld
dec
idiv
mov
mov
inc
popf
pop
add
fdivr
bound
jge
out
test
or
and
jne
retf
sar
cmp
adc
ror
pop
mov
xor
shl
daa
inc
push
xchg
sub
sti
and
lds
cmc
sub
mov
mov
mov
sub
ret
mov
cmp
dec
jecxz
jmp
frstor
jbe
shl
jg
xor
pop
loope
xchg
retf
fdivr
(bad)
mov
out
mov
sti
in
(bad)
stos
in
mov
mov
xor
mov
(bad)
jmp
cmp
pop
sub
test
adc
lea
loopne
pop
jle
fdivr
ss
mov
(bad)
dec
sub
mov
stos
mov
ds
nop
adc
and
xchg
and
xor
xor
mov
pop
inc
jge
fwait
shr
pop
outs
jge
les
mov
aam
xchg
push
add
lea
jne
lods
add
sbb
rol
add
add
lahf
add
int
mov
mov
or
xor
ja
sbb
push
ja
mov
rcr
je
mov
jae
xor
ins
out
sub
mov
dec
push
pop
je
mov
jle
repnz
cmp
dec
test
sbb
cmp
push
mov
and
jge
popa
push
ins
rcr
je
dec
lods
arpl
xor
sub
lods
sbb
sahf
inc
jne
push
mov
jl
mov
call
cmp
rcr
sahf
xor
mov
fidivr
mov
shr
imul
pop
sub
inc
cdq
jne
in
dec
inc
and
dec
jne
dec
cwde
cld
outs
(bad)
jle
or
icebp
cdq
cs
stos
sub
popf
mov
aas
(bad)
fdivr
test
pop
outs
repnz
retf
sti
push
mov
enter
aaa
ja
xor
mov
pop
or
dec
adc
movs
repz
add
dec
fadd
xchg
repz
jns
test
jo
lea
aas
sub
pop
inc
xor
sti
pusha
test
ins
xor
das
mov
call
aad
popa
sbb
mov
mov
stos
mov
in
pop
loop
leave
sbb
daa
cmp
mov
ror
inc
leave
or
push
mov
call
popa
push
sub
mov
(bad)
mov
and
sub
sar
mov
pop
in
xor
dec
mov
and
adc
sub
mov
mov
push
sub
dec
mov
pop
cwde
mov
cmp
pop
inc
repz
adc
sbb
stc
xor
in
mov
lods
sbb
cmp
cmps
ret
loope
jle
pop
push
repnz
jns
mov
adc
mov
stc
sub
shr
jb
loope
xor
sub
gs
punpcklwd
xor
imul
jno
xor
in
fst
popa
in
push
outs
push
adc
(bad)
jbe
div
clc
adc
loop
pop
jle
aad
fscale
mov
call
sbb
leave
test
pop
or
int3
mov
out
sti
iret
add
retf
push
mov
test
push
adc
jo
repz
dec
icebp
dec
xchg
sub
push
ret
jl
and
ds
into
cmp
add
dec
jnp
inc
sub
xor
jnp
mov
cmp
test
js
mov
mov
sbb
icebp
cmp
jae
or
outs
lods
sbb
pop
in
mov
mov
ds
push
or
lods
or
es
call
in
imul
shl
sub
mov
stos
mov
lods
push
(bad)
lea
in
cmp
dec
addr16
jnp
fisubr
pop
pop
push
js
shr
call
data16
xor
mov
and
lds
push
jle
lods
xchg
cmp
jns
dec
pop
jnp
add
shl
ss
pop
add
dec
mov
inc
aad
cmp
jp
xchg
or
aaa
push
mov
inc
lds
and
loopne
mov
adc
push
sti
push
push
jmp
mov
xor
retf
fucomi
jnp
cli
add
add
xchg
shl
cld
icebp
aas
and
sbb
sub
in
or
stc
sbb
ret
xor
inc
add
dec
adc
mov
into
sbb
inc
push
imul
test
xchg
cmc
push
cld
xor
xor
sbb
pushf
dec
ins
cmp
shl
mov
ins
int3
dec
in
clc
rol
and
mov
sbb
sub
jmp
and
daa
add
xor
rcr
mov
push
cld
mov
das
xor
(bad)
cmps
hlt
test
jns
in
ins
sbb
pop
int3
xchg
lock
mov
mov
sbb
aad
lock
adc
jmp
inc
out
je
mov
mov
test
mov
mov
clc
mov
xchg
loop
cs
test
clc
pop
outs
outs
xor
xor
inc
(bad)
rcl
cld
cmps
jmp
je
mov
imul
mov
pusha
add
rep
pop
cmp
adc
lock
in
popf
pop
sbb
mov
inc
or
shr
(bad)
cdq
stc
inc
xchg
sbb
inc
ja
mov
call
cmps
call
xchg
and
adc
repz
fcomp
lods
pop
jno
pop
mov
mov
ins
in
out
jnp
pop
xchg
in
or
mov
test
jbe
xchg
add
inc
stos
jecxz
xchg
dec
and
ss
ja
add
sbb
dec
jb
sbb
clc
mov
mov
mov
dec
sbb
mov
arpl
clc
int
int
sub
cmp
nop
out
test
adc
cmp
popa
cmp
not
adc
sub
lds
out
adc
lods
sub
mov
mov
xor
cmp
push
mov
xchg
popa
xor
(bad)
scas
test
nop
sub
stc
mov
enter
jg
ds
mov
push
jbe
jb
jbe
test
mov
daa
and
fcmovbe
cdq
mov
add
repz
js
loope
(bad)
jmp
es
sub
mov
fs
push
push
test
xchg
mov
fsubr
cmovp
fadd
or
call
les
add
loope
mov
in
push
push
and
and
je
scas
cmp
retf
pop
adc
dec
stos
inc
mov
mov
fadd
jne
and
add
pmulhw
mov
retf
lahf
jp
add
mov
fisttp
arpl
xchg
addr16
(bad)
sti
ret
sub
push
fbld
leave
frstor
test
jecxz
ja
or
popf
or
cmps
in
and
cld
and
jp
mov
(bad)
adc
mov
push
cmps
aad
nop
out
mov
aad
and
cmp
mov
inc
daa
lea
pop
aam
cmp
(bad)
lods
dec
rcl
ss
outs
scas
xor
sub
mov
and
aaa
rol
out
data16
cmps
adc
icebp
aas
sub
push
rol
xchg
sbb
cmps
jae
repz
pop
mov
cmps
leave
sbb
popf
call
jnp
fwait
sub
shr
fnstsw
cmc
enter
movs
sub
or
sub
mov
pop
sub
inc
cmps
test
mov
ss
and
xlat
in
sbb
ins
or
test
push
pop
mov
jmp
jno
outs
out
nop
cmp
div
jmp
dec
pop
aaa
in
adc
mov
mov
cdq
out
mov
clc
lds
fwait
mov
outs
mov
call
jbe
out
iret
ds
mov
aaa
cdq
mov
add
(bad)
xchg
add
or
ret
push
lock
repnz
xchg
test
call
pop
inc
arpl
adc
cdq
int
js
mov
cld
loopne
mov
mov
jbe
inc
or
aad
scas
sbb
dec
not
fsub
dec
call
mov
loope
nop
inc
loope
sbb
dec
xchg
jge
pop
int3
fwait
jmp
sar
cmp
mov
mov
sbb
cmp
add
xor
retf
mov
jmp
stc
xlat
xor
dec
jl
mov
pusha
cmc
out
pop
xor
fisub
scas
clc
dec
imul
(bad)
push
or
aad
pop
push
shl
jecxz
mov
loop
loopne
or
dec
dec
clc
cmp
mov
cmp
les
jo
mov
dec
ficomp
bswap
xchg
je
mov
outs
fstp
call
scas
scas
dec
sub
out
xor
lods
mov
adc
test
hlt
arpl
loopne
inc
out
cmp
dec
retf
xor
or
adc
mov
dec
loope
ret
cmp
clts
jle
imul
sub
cmp
pop
mov
(bad)
cmp
or
or
inc
mov
jg
dec
cmc
shr
mov
(bad)
mov
aam
pop
sbb
arpl
mov
xor
(bad)
popf
scas
xlat
hlt
pop
mov
dec
out
pop
stc
inc
(bad)
push
push
stos
lahf
cdq
xor
lea
push
xor
jle
xor
sub
pushf
outs
add
mov
repnz
sbb
xchg
out
test
(bad)
xchg
mov
stos
data16
push
(bad)
inc
push
jl
jnp
lods
dec
fwait
aas
inc
pop
cmp
loop
mov
arpl
leave
dec
cld
mov
mov
dec
sub
retf
pop
jne
es
ret
ret
cmc
cwde
and
mov
jbe
sub
jo
lods
ret
sub
xchg
mov
sub
pop
push
ret
xchg
xor
adc
dec
dec
add
dec
(bad)
aas
lods
and
js
xor
pop
adc
call
dec
dec
push
int
mov
out
shrd
jg
outs
sub
jp
xchg
mov
mov
jno
and
jge
ins
sub
hlt
mov
std
enter
and
test
loopne
push
xchg
or
sbb
and
inc
mov
and
cmp
ret
sub
pop
xlat
pop
dec
gs
mov
ins
jecxz
clc
imul
sbb
call
test
iret
jge
imul
cs
in
xchg
push
neg
test
in
mov
mov
sbb
idiv
js
mov
loop
adc
in
aam
popf
je
(bad)
aaa
and
push
scas
ret
mov
inc
imul
fwait
xchg
sbb
mov
movs
mov
pop
ret
mov
int
push
push
in
es
fdiv
ins
mov
sbb
xchg
adc
shr
cmps
and
mov
fucomip
push
dec
inc
pop
sub
mov
xor
or
sbb
ror
imul
cmps
or
fisub
and
fld
mov
xor
imul
pop
and
push
addr16
scas
shl
call
das
test
ret
dec
cmp
in
xchg
xor
cs
arpl
mov
push
push
ss
data16
add
jo
fist
jb
push
xor
nop
add
adc
(bad)
and
ins
inc
fisub
pop
pop
and
aaa
and
mov
dec
into
test
jne
push
or
jnp
ds
sub
es
pop
xchg
aam
je
pop
xor
leave
and
and
cmp
out
(bad)
scas
cmp
mov
les
int3
inc
mov
push
mov
adc
out
mov
icebp
mov
xchg
jmp
or
rcr
jmp
mov
jg
or
es
stos
fdivr
xchg
jne
mov
add
dec
test
jbe
pop
int3
and
frstor
cmp
push
sar
call
sub
jg
pop
retf
cdq
jns
sbb
sub
dec
std
retf
adc
pop
pop
jmp
(bad)
push
and
aas
or
outs
pop
fist
cmp
inc
jle
cmp
addr16
stos
push
pop
rcl
mov
mov
xlat
inc
dec
daa
fisub
push
repz
gs
jo
int3
mov
arpl
mov
xchg
mov
push
mov
add
cmp
pop
rol
xor
push
mov
jmp
cdq
call
lds
std
jge
adc
sub
aad
cmps
and
and
adc
push
mov
xchg
xchg
add
xor
jo
or
fadd
jbe
in
inc
xor
addr16
or
ss
test
dec
rol
add
or
imul
xchg
dec
adc
into
call
call
jns
jne
imul
ja
in
gs
outs
bound
and
sti
inc
push
cwde
das
test
and
pop
xor
and
int3
push
or
gs
mul
stos
push
mov
push
pushf
mov
jmp
pushf
pop
sbb
scas
sub
sbb
pop
pop
les
dec
adc
mov
jle
and
dec
and
pop
ret
fisttp
(bad)
cli
dec
(bad)
and
pop
(bad)
adc
pusha
call
inc
jmp
xchg
cmc
rcl
mov
in
mov
mov
aas
mov
mov
les
jmp
or
pop
pop
scas
sub
and
jecxz
push
scas
sub
jmp
arpl
push
dec
movhps
test
dec
sub
lahf
imul
dec
mov
sar
popf
cmp
clc
mov
jns
add
push
mov
sub
stos
add
and
in
mov
pop
outs
stos
arpl
dec
mov
iret
inc
push
push
ret
push
call
cdq
mov
jl
cmp
mov
(bad)
xor
dec
in
test
add
fild
pop
mov
(bad)
int3
mov
retf
sbb
sbb
jge
in
das
sbb
xlat
add
cmp
bound
repz
xchg
push
mov
cmp
inc
sbb
xor
push
or
pushf
adc
ds
fldenv
fnstcw
imul
(bad)
adc
push
dec
inc
jnp
out
mov
test
imul
lds
cmp
in
leave
div
pop
ficomp
std
into
faddp
mov
or
lahf
dec
(bad)
outs
shl
ja
and
out
push
repz
jb
add
lahf
mul
mov
push
push
repz
out
cmp
sub
jmp
xchg
inc
inc
mov
jecxz
stc
sahf
mov
or
enter
cmp
xchg
sub
repnz
mov
inc
xchg
daa
dec
add
mov
push
mov
xchg
imul
pop
hlt
jbe
inc
cli
ins
scas
jge
fsubr
ror
mov
cld
inc
out
mov
sbb
pop
sbb
mov
fld
xchg
iret
fild
mov
dec
ins
xlat
jmp
ins
call
out
xchg
adc
shr
cmp
mov
data16
jl
test
retf
movs
jmp
test
xor
jp
ds
xor
push
enter
mov
cld
mov
in
ret
jb
dec
push
es
and
mov
jae
xchg
jmp
xor
cmp
or
cmp
lods
popa
mov
add
add
div
idiv
ret
add
cdq
inc
inc
sbb
mov
clc
adc
repnz
rcl
aad
xor
icebp
add
and
clc
ret
jne
pop
outs
xor
test
push
(bad)
add
xchg
sub
inc
and
xchg
pop
iret
in
repz
fs
(bad)
cmp
dec
inc
pop
sub
jg
add
outs
test
push
push
fsubr
cmp
(bad)
mov
retf
es
mov
cmp
(bad)
mov
daa
mov
push
cdq
jle
fnstenv
add
sbb
add
add
ficomp
jl
jno
mov
dec
mov
lods
mov
add
push
ror
dec
dec
inc
(bad)
fmul
fdivr
fst
stc
out
loop
pop
out
retf
mov
or
ret
mov
pop
adc
xor
sub
xor
or
js
or
pop
pop
(bad)
ja
dec
mov
inc
sub
push
sar
jmp
push
iret
(bad)
retf
and
aaa
daa
push
push
push
dec
std
mov
addr16
jno
or
jmp
or
out
jbe
imul
sub
test
(bad)
xchg
(bad)
or
shl
xchg
cmps
pushf
(bad)
(bad)
pop
icebp
and
dec
arpl
data16
fdivr
mov
sbb
xor
int
lods
ret
loopne
fnstcw
pop
mov
push
mov
ror
xchg
push
pop
jmp
ins
add
sbb
jp
and
sbb
add
adc
(bad)
outs
mov
loope
push
repnz
xchg
dec
pushf
cmp
lahf
ret
xchg
js
mov
or
inc
lock
sti
and
xlat
les
aaa
imul
scas
adc
push
ret
jmp
xchg
push
faddp
fsub
cmc
xlat
sbb
out
pusha
adc
jmp
pop
outs
jb
push
mov
addr16
mov
mov
mov
adc
addr16
push
xchg
add
scas
adc
frstor
sbb
ins
ret
cmp
lahf
inc
ins
push
not
jmp
(bad)
and
sbb
push
jle
jg
and
mov
aad
pop
mov
sub
aaa
pop
dec
xlat
or
addr16
sbb
xchg
inc
cmps
inc
or
sub
or
enter
(bad)
sar
pop
fst
sahf
push
adc
inc
mul
sar
neg
lods
mov
xchg
prefetch
into
shl
or
neg
pushf
xlat
jmp
or
jb
add
jmp
pusha
sbb
stos
push
adc
mov
and
into
cld
or
sysexit
dec
and
add
xor
lods
cmp
sti
sub
add
pop
or
fild
lds
(bad)
cli
out
test
test
rol
fmul
pop
rcl
fisttp
cmp
fcmovb
pop
xchg
add
fld
jmp
out
(bad)
dec
sbb
je
js
adc
lods
pop
cs
outs
in
xlat
mov
addr16
push
xor
enter
clc
test
movs
ds
mov
les
jmp
jnp
push
neg
xchg
fldcw
clc
fisub
cmp
lods
retf
sub
repz
and
test
adc
sbb
lds
add
sbb
cmps
fsub
pop
(bad)
into
(bad)
xchg
xchg
dec
push
sbb
mov
jecxz
fisubr
int
mov
arpl
mov
push
mov
test
mov
aad
shl
fild
or
data16
stc
sub
call
test
add
stc
shl
clc
sub
xchg
push
pop
ret
jns
movs
repz
mov
jae
jno
xchg
mul
xor
or
mov
jp
mov
xor
lea
or
pushf
ja
retf
xchg
mov
inc
fucomp
xchg
or
pop
stos
retf
retf
fst
jg
adc
cmp
sbb
int
mov
stc
mov
xchg
pop
stc
pop
pop
dec
xor
cli
out
mov
loop
or
daa
sbb
(bad)
sub
fild
push
loopne
sbb
sub
in
mov
stos
fwait
sti
je
sbb
out
mov
ja
pusha
shl
cmp
sbb
sbb
pusha
sub
add
sub
fdivr
rol
in
xlat
(bad)
ss
je
pusha
retf
mov
add
pop
icebp
inc
sub
ja
jle
mov
clc
rol
aad
inc
jg
dec
sbb
movs
xchg
mov
push
or
(bad)
bound
out
cs
fst
push
(bad)
mov
nop
dec
sbb
push
pop
popa
adc
mov
inc
jle
dec
pop
or
fwait
ins
(bad)
ins
fnstenv
loop
mov
jns
push
mov
lods
imul
sbb
jns
and
push
in
pushf
jns
mov
in
out
not
mov
cwde
mov
aad
call
daa
mov
pop
push
xor
xlat
pop
xchg
jns
in
outs
adc
mov
xor
jnp
dec
aam
les
jg
mov
xchg
sbb
das
xchg
sub
shl
dec
adc
sbb
stos
jle
adc
dec
nop
and
add
mov
test
dec
repz
in
mov
(bad)
cmps
dec
movs
jae
lds
dec
sub
int
push
pop
add
push
mov
outs
pop
mov
adc
cmps
enter
sub
shl
loopne
neg
jb
fisubr
mov
pop
adc
mov
data16
sub
outs
loope
popf
xchg
push
add
pcmpgtd
and
jg
repnz
pop
(bad)
sar
xor
outs
(bad)
pop
rcr
sti
xchg
out
xlat
add
hlt
dec
inc
cli
repz
dec
fwait
sbb
dec
pop
xchg
add
or
sub
addr16
aad
sbb
scas
loopne
or
sbb
stc
mov
les
adc
and
(bad)
cmp
sub
adc
loop
and
mov
(bad)
push
popf
cmp
es
data16
scas
gs
mov
push
(bad)
repnz
lods
and
lock
retf
and
fild
lahf
mov
jecxz
xor
xchg
dec
adc
enter
adc
xchg
inc
adc
adc
jge
scas
sub
fwait
xchg
mov
inc
xchg
(bad)
jg
(bad)
sbb
mov
jmp
pop
inc
add
cmp
push
push
sub
or
in
mov
push
mov
clc
mov
mov
jg
jae
rcl
jmp
inc
or
xor
xchg
pushf
cli
jno
and
imul
scas
add
xchg
ins
sar
inc
iret
sbb
jb
xchg
aad
sbb
cmp
dec
sbb
fwait
cs
xor
adc
scas
push
iret
and
js
in
mov
clc
mul
jno
xchg
and
jne
stos
pop
push
(bad)
xchg
sahf
xlat
lds
outs
mov
repz
int3
gs
jns
pop
fisub
loop
jecxz
push
mov
(bad)
cld
xchg
jb
bound
cmps
mov
data16
xchg
cli
(bad)
jno
adc
aad
loope
retf
adc
scas
mov
fnstsw
gs
pop
lds
xchg
inc
push
push
ja
sbb
mov
retf
lods
mov
xchg
iret
aam
call
sub
sahf
stos
adc
pop
test
shl
add
cmp
mov
adc
(bad)
movs
test
inc
lea
and
sar
inc
fldenv
popf
cmp
cmp
fsub
jle
pop
popa
fsubr
or
pop
add
or
or
inc
xchg
nop
sub
cld
sub
cmp
aas
rcl
mov
xchg
clc
scas
inc
cs
mov
sub
and
push
mov
xor
hlt
shr
hlt
pusha
(bad)
out
push
cmp
das
out
(bad)
lea
add
lock
nop
cmp
(bad)
in
adc
mov
das
leave
fptan
inc
mov
pop
ins
cmp
dec
cmp
jecxz
ret
je
xchg
repz
cmp
ds
shr
sbb
xchg
dec
fistp
cmp
inc
loop
test
jmp
das
popf
sub
out
popa
cmp
add
push
pop
jmp
retf
cmp
and
dec
inc
push
xchg
movs
es
rol
movs
outs
enter
aad
icebp
mov
xor
loopne
adc
add
cli
outs
sbb
cdq
jmp
movs
push
xchg
xchg
jb
aaa
sahf
outs
mov
cmp
pop
(bad)
sbb
dec
pop
out
in
(bad)
out
arpl
push
mov
out
rcl
mov
cmp
xor
push
and
jo
mov
mov
xchg
lds
cli
ss
inc
jmp
pop
aam
(bad)
fld
jno
call
adc
pop
sbb
cmp
cdq
lahf
data16
xor
xchg
mov
xor
or
sub
mov
mov
movs
out
stos
fiadd
shl
xchg
push
mov
arpl
mov
mov
mov
pop
daa
sub
jb
mov
mov
dec
movs
jno
inc
mov
mov
test
shl
push
sbb
popa
sbb
mov
nop
sub
das
and
xchg
and
or
and
dec
xor
mov
adc
mov
mov
retf
rcr
sahf
pop
lods
push
dec
ja
idiv
adc
inc
mov
inc
adc
cmp
xchg
loop
push
out
scas
mov
bound
jge
out
sub
pop
gs
mov
pusha
lods
mov
les
cli
test
cmc
jg
mov
xchg
ret
pusha
das
call
mov
mov
xchg
cmps
sbb
ins
jle
or
xlat
(bad)
mov
stos
pop
xchg
add
not
xchg
out
xchg
xchg
or
adc
mov
xchg
bound
scas
retf
push
pop
mov
xchg
bound
adc
lahf
pusha
mov
adc
enter
iret
pop
retf
fisttp
rol
mov
mov
movs
bound
or
lahf
popf
stos
pop
adc
xchg
cmp
and
cmp
out
jo
das
call
outs
push
add
ins
xchg
or
jle
sbb
pop
in
das
inc
mov
cmps
repnz
pop
jle
dec
outs
inc
ja
clc
retf
xor
inc
psllq
mov
jge
or
lahf
jbe
xchg
sbb
pop
in
add
cs
xor
fneni(8087
out
jle
push
fdivr
rcl
lods
xor
cwde
inc
(bad)
pop
lock
nop
jo
cmps
cmp
push
pop
popf
ins
or
mov
adc
movs
push
adc
add
mov
xor
pusha
sub
sub
xlat
retf
repnz
ins
sub
fidivr
shr
std
adc
pop
adc
ds
idiv
fldcw
lds
xchg
fadd
retf
pop
(bad)
jle
mov
or
lods
sbb
jmp
retf
daa
add
pop
retf
movs
mov
or
dec
inc
jb
hlt
add
das
xor
xchg
or
inc
xchg
jl
ret
mov
mov
add
mov
lahf
std
addr16
dec
jo
push
inc
and
in
sub
jge
cmp
inc
shl
mov
jnp
cdq
sub
xchg
or
icebp
stos
shl
push
ins
pop
fisubr
xor
mov
add
mov
out
xor
or
mov
cmps
push
fst
inc
adc
sar
xchg
pop
stos
sti
jle
mov
je
xor
cmp
xchg
les
ret
adc
jb
mov
repz
ins
int3
ss
xor
dec
inc
sub
addr16
repnz
xor
scas
jl
inc
push
push
pop
xchg
mov
les
pusha
mov
xchg
scas
ins
mov
push
dec
jle
add
mov
pop
push
dec
les
(bad)
and
test
cmc
jle
hlt
pop
sahf
adc
lahf
xchg
in
aam
cmp
jae
fmulp
sub
cmp
dec
mov
shr
sbb
pop
push
mov
and
imul
adc
add
into
cmp
std
(bad)
mov
addr16
jbe
inc
int
test
sub
(bad)
popf
rcr
adc
jge
xchg
fs
sub
repnz
test
xor
pop
xor
stos
pop
lahf
push
push
addr16
dec
nop
jns
xchg
sub
dec
popf
inc
mov
add
ja
pop
xchg
xchg
jg
mov
mov
dec
outs
cmc
div
push
fdivr
dec
cli
(bad)
pop
cmp
test
nop
sbb
sbb
inc
stos
pop
je
loopne
cmp
dec
pushf
push
push
les
jg
and
outs
dec
lods
xchg
ins
ffreep
mov
icebp
inc
hlt
sub
out
and
pop
shr
jno
xor
nop
mov
inc
sbb
jns
dec
and
push
xchg
mov
int3
shl
or
push
sub
xor
clc
add
movs
sub
jbe
lods
data16
(bad)
sbb
pushf
and
cmp
mov
les
xor
adc
sbb
(bad)
jmp
je
stos
xchg
push
std
movs
pop
add
not
shr
scas
gs
sub
scas
inc
mov
xchg
and
push
dec
push
fistp
sub
and
out
pop
cmp
pop
add
inc
(bad)
in
ds
out
sub
call
loop
ret
(bad)
cmps
pop
mov
lds
test
inc
mov
lds
daa
mov
jle
sub
push
cwde
in
cld
adc
dec
sbb
test
or
mov
ror
and
ret
mov
enter
in
sub
pop
mov
stos
cwde
inc
fld
mov
mov
push
xor
jmp
repnz
push
mov
into
call
dec
jl
stos
inc
aas
mov
aad
cmp
pop
retf
cmp
outs
inc
jno
cmc
jb
jle
rcl
outs
not
sti
pop
js
sar
pop
std
push
inc
and
sahf
pushf
movs
sub
test
xchg
adc
ficom
call
fsubr
mov
adc
mov
test
cdq
push
jne
jne
test
mov
aad
sbb
push
inc
sub
jle
xchg
sub
push
call
mov
mov
scas
out
pop
test
jns
pop
jb
aas
cmp
lds
add
lods
loope
lods
jg
icebp
js
fist
fidivr
inc
jp
call
jecxz
pop
lahf
xor
mov
push
mov
cmp
imul
call
into
fadd
xor
add
div
icebp
aad
mov
aad
cmp
mov
rol
sub
fwait
scas
rcl
inc
outs
dec
leave
cli
or
mov
dec
xchg
and
jmp
sub
adc
(bad)
repz
pop
out
cdq
stos
cdq
pop
das
lahf
xor
cmps
adc
stos
xchg
repnz
ins
add
mov
pop
test
cmp
mov
xchg
push
mov
jo
xchg
stos
jo
adc
out
rcr
lods
adc
test
cmp
or
loopne
dec
sub
or
mov
jae
iret
adc
int
outs
imul
rcl
lahf
inc
adc
and
inc
pop
mov
outs
fdivp
leave
push
repz
inc
pop
push
stos
mov
push
into
jmp
and
fwait
mov
inc
sub
jns
(bad)
pop
dec
stc
cmps
pop
push
call
ret
and
mov
and
test
adc
jl
pop
mov
stc
nop
jno
push
pop
mov
mov
and
sub
test
adc
pop
out
sbb
out
pop
push
mov
adc
mov
int3
cmps
add
sbb
sub
pop
ss
or
ror
cs
fild
or
xor
dec
iret
add
mov
mov
and
mov
xor
sub
enter
pop
add
mov
ror
into
ror
dec
pop
pop
sbb
ret
ret
xchg
adc
je
dec
pop
mov
mov
adc
lea
xor
stos
and
mov
push
mov
sub
sahf
addr16
je
mov
sar
scas
movs
dec
sbb
bound
(bad)
jmp
jns
js
and
out
cld
cmps
and
add
jns
popf
pop
nop
sub
xchg
shr
(bad)
mov
repnz
ret
scas
push
enter
jmp
xchg
and
mov
xchg
xchg
movs
jg
dec
xchg
jae
pop
in
xor
and
inc
push
inc
(bad)
jae
xchg
sbb
xchg
adc
(bad)
cdq
cmps
jne
sar
mov
(bad)
pop
movs
cmc
(bad)
dec
mov
out
pop
mov
mov
fcomp
pop
bound
jge
ja
cmp
lods
dec
ret
dec
jo
push
sub
jno
aas
in
fnstcw
cld
pop
lock
not
pop
pop
into
das
or
or
jnp
lea
push
dec
retf
xchg
and
int3
push
xor
test
mov
mov
nop
and
cwde
cwde
cmp
jo
sub
daa
lahf
mov
bnd
stos
add
dec
xor
mov
leave
jbe
shl
or
mov
movs
xor
sub
push
push
pavgw
inc
in
pop
addr16
dec
jnp
enter
fxch
xchg
and
pop
xacquire
inc
into
sbb
or
bound
aas
mov
add
stc
add
adc
xchg
cmp
fdiv
mov
in
push
popa
xchg
mov
lock
fld
push
cli
xchg
movs
pop
jmp
fsubrp
sub
pop
dec
cmc
pusha
xchg
movs
call
sub
add
mov
ficomp
pop
push
sub
fsubp
dec
test
aas
or
xchg
cmps
sbb
sub
in
mov
dec
lods
cmp
mov
inc
dec
jbe
lock
in
repnz
and
xchg
fdiv
jg
inc
mov
dec
add
mov
das
xchg
sbb
jmp
and
dec
loop
lock
test
jae
adc
inc
mov
jno
gs
aas
mov
in
xor
lods
daa
or
xor
sub
dec
ds
movs
dec
test
ja
xor
mov
fistp
or
sub
inc
pop
xchg
out
dec
(bad)
pop
aaa
add
js
mov
jns
es
add
sub
mov
ss
mov
dec
jg
jmp
sub
jb
outs
ss
dec
inc
rcr
in
xchg
xchg
out
mov
jmp
dec
adc
out
xchg
dec
stos
pop
jle
int3
push
push
pop
mov
add
mov
cmp
rdmsr
and
ret
dec
outs
or
mov
mov
mov
push
mov
jecxz
jns
cmc
rcl
mov
jae
push
addr16
adc
cmp
add
das
mov
in
mov
add
cdq
int3
repnz
fs
aam
fstp
dec
xchg
hlt
inc
jle
mov
mov
jp
loopne
xor
xchg
inc
sub
adc
fidiv
dec
mov
retf
mov
fldenv
jb
inc
jg
stos
jb
ret
dec
ret
scas
pop
dec
repnz
iret
in
neg
(bad)
fwait
inc
stos
xchg
mov
imul
sub
lock
cdq
nop
out
cli
xor
mov
xchg
jns
jmp
sti
cmp
cmps
test
mov
cmp
xor
push
mov
jg
into
mov
stos
sbb
mov
movs
cmp
push
adc
(bad)
(bad)
pop
mov
push
(bad)
movs
retf
call
jle
pusha
mov
std
mov
cld
test
dec
psubd
aaa
adc
jecxz
jmp
iret
dec
jg
jbe
sbb
jg
jle
enter
xlat
xor
cmps
sub
push
shl
call
ds
enter
mov
pop
inc
and
sbb
cmp
push
push
sbb
push
or
pop
cs
shl
xchg
fcom
mov
stc
loopne
xchg
dec
push
arpl
test
jl
bound
popa
fucomip
imul
inc
fnstsw
jg
fadd
push
mov
xchg
fsubr
mov
outs
xchg
rcl
xor
das
mov
mov
mov
mov
push
mov
fwait
out
mov
mov
xchg
test
jae
cs
mov
ja
icebp
mov
lock
pop
cmp
into
sbb
fnstsw
fstsw
lods
ja
mov
mov
mov
cld
jnp
push
ins
or
lock
pop
aam
jnp
shr
xchg
mov
pop
cli
imul
int3
(bad)
or
ja
xor
icebp
mov
mov
jg
gs
fcom
push
pop
aam
sahf
cmp
mov
push
or
dec
sahf
movs
stos
and
xchg
xchg
pop
sub
and
movs
shl
jmp
mov
neg
mov
jno
inc
mov
hlt
test
add
retf
fnstcw
or
out
cmc
clc
sbb
retf
jp
dec
gs
inc
inc
adc
fisub
les
mov
stos
sub
dec
adc
repnz
cli
pop
add
sbb
pop
adc
adc
psadbw
leave
scas
out
mov
ror
jp
(bad)
cmp
cli
test
jb
inc
jo
lea
mov
rol
dec
movs
cmps
ss
push
movs
fdiv
cld
cmp
push
fstp
or
adc
push
inc
xor
push
gs
jb
or
mov
push
or
and
and
imul
or
pop
nop
pop
bound
hlt
dec
mov
sbb
cmp
mov
inc
mov
movs
retf
adc
call
pusha
add
fidivr
pop
fwait
movs
fstp
ror
std
pop
dec
dec
inc
jp
ret
clc
aas
dec
add
add
dec
shld
jnp
push
mov
stc
xor
cwde
jmp
pop
hlt
xor
sub
rol
or
outs
movs
cmp
int3
cmps
mov
or
mov
sub
sbb
ror
mov
enter
mov
mov
cmps
xor
cmp
scas
movs
cmp
inc
pop
iret
push
(bad)
hlt
fild
or
pop
out
dec
xchg
jno
ins
jo
xor
adc
loop
inc
enter
stos
jbe
xchg
movs
jecxz
sub
mov
add
(bad)
cld
iret
xchg
and
sub
adc
scas
adc
dec
lds
mov
in
sbb
(bad)
std
mov
scas
mov
loopne
xor
sbb
adc
and
add
pop
outs
sbb
pop
inc
cmp
jmp
repz
arpl
js
(bad)
mov
mov
inc
xchg
shl
adc
xor
imul
pusha
movs
and
and
pop
inc
push
neg
xchg
cdq
inc
lahf
jo
adc
xchg
imul
mov
mov
test
add
aam
mov
lods
inc
pop
retf
je
jns
cld
mov
mov
cwde
scas
xchg
inc
call
mov
inc
or
sbb
in
fimul
ret
loopne
sahf
add
pop
inc
(bad)
loope
xchg
data16
sub
inc
retf
stos
jnp
cdq
sub
sub
jo
and
push
neg
fld
out
mov
mov
ror
std
sbb
test
hlt
sbb
sti
pop
shr
inc
jmp
jle
pusha
(bad)
(bad)
and
adc
ret
or
das
adc
xor
cmc
pusha
adc
jle
test
adc
add
aas
xchg
aam
mov
(bad)
js
xlat
js
out
lds
add
inc
shr
test
dec
fdivp
int3
or
mov
xor
mov
jge
sbb
aad
das
loope
push
sbb
mov
out
pusha
call
pusha
fimul
dec
mov
js
mov
xor
outs
in
mov
jp
jg
lods
mov
daa
mov
xrelease
or
std
pop
jecxz
int
inc
les
and
push
mov
jo
(bad)
fld
sub
dec
shr
mov
(bad)
mov
jno
retf
je
add
stos
mov
or
stos
fisubr
pop
test
in
into
or
cmp
sub
push
or
int
stc
adc
push
push
mov
mov
jge
jecxz
jmp
xchg
dec
(bad)
or
stc
and
mov
fistp
into
push
xor
mov
mov
mov
xchg
and
push
sub
sbb
xor
mov
lock
leave
shl
jge
sbb
dec
cmp
and
or
mov
ror
jmp
sbb
xor
mov
and
or
push
sub
mov
std
dec
xchg
mov
sub
jmp
lea
mov
pop
and
ret
in
ss
or
pusha
pop
mov
popf
inc
or
movs
stos
cmp
popf
cmp
push
not
ds
pop
fdivr
mov
jns
xchg
add
pop
in
adc
inc
mov
dec
jbe
mov
aas
ins
es
cmps
add
pop
xor
or
jmp
stos
push
mov
dec
and
jg
mov
inc
jmp
stos
jo
loopne
stos
mov
cmp
add
add
jns
push
ja
push
mov
addr16
arpl
xor
loopne
inc
daa
ds
or
jp
iret
dec
sub
pusha
test
inc
sub
cmp
xor
cmp
(bad)
and
mov
(bad)
test
add
adc
in
mov
into
std
xchg
or
jo
cs
push
into
pusha
rcl
or
iret
outs
cld
out
jl
rcr
imul
and
scas
inc
(bad)
cld
mov
jns
and
jae
(bad)
sbb
outs
xchg
in
cmp
pop
push
mov
leave
add
call
adc
xchg
rcr
fs
pop
iret
leave
mov
pop
mov
jb
scas
jle
inc
lea
dec
hlt
push
retf
sti
icebp
sti
add
test
push
sbb
xlat
cld
dec
call
pop
(bad)
sub
clc
inc
and
push
inc
adc
cdq
pop
mov
inc
xor
mov
jbe
cmp
loopne
adc
cmp
and
sub
call
clc
cli
jl
(bad)
fild
jg
arpl
jnp
cmp
ja
sbb
push
(bad)
clc
mov
xchg
cmp
lods
mov
xor
das
lds
inc
pusha
jbe
loopne
fucomip
sub
sub
pop
inc
hlt
cmp
xor
ffree
add
(bad)
call
dec
cmp
iret
loope
mov
xchg
xor
xchg
xor
jl
sub
xchg
cmp
enter
add
ret
lods
ss
mov
jmp
out
xor
loope
mov
dec
xchg
int3
int3
mov
mov
loope
push
int
out
retf
jno
inc
mov
pop
loop
fwait
sbb
jmp
push
mov
jns
inc
sti
push
xor
cld
scas
jae
daa
es
mov
or
js
pop
pop
fwait
call
out
and
cmp
imul
cmp
or
bound
dec
stos
sub
inc
sbb
push
call
mov
adc
stos
mov
add
fnstenv
scas
cmp
mov
sbb
iret
xchg
lea
mov
lods
test
add
sti
sub
jb
addr16
inc
xchg
jns
add
mov
daa
cmp
jno
mov
icebp
gs
push
pop
addr16
lahf
cli
lock
xlat
sub
adc
div
or
in
xchg
cmp
stc
ins
xchg
cmp
push
rcr
aaa
lea
mov
retf
loop
adc
pop
dec
test
mov
add
das
sahf
(bad)
jbe
pop
retf
sub
sub
mov
aad
enter
addr16
mov
dec
fs
pop
push
dec
mov
xchg
xchg
retf
and
mov
aas
call
jmp
jo
mov
mov
jo
inc
mov
jmp
dec
pop
cdq
popf
sbb
lods
jl
jecxz
call
or
xchg
cmc
xor
imul
cmp
gs
enter
xor
jle
cli
sub
xchg
jge
jae
lahf
rol
cmp
lds
mov
mov
push
aad
loope
adc
jmp
jnp
fs
cmps
fwait
push
mov
data16
mov
sbb
movs
or
dec
retf
mov
add
lea
retf
xlat
jp
sbb
ds
xchg
pop
mov
or
test
aad
add
test
jmp
(bad)
cli
ds
jmp
jb
movs
es
std
lea
int3
(bad)
out
and
cmp
push
sbb
ret
or
inc
jno
mov
or
movs
into
push
hlt
dec
loop
push
ins
jbe
push
nop
loope
or
js
into
jns
inc
pop
fcmovbe
adc
hlt
ror
sti
jno
ret
cmp
add
popf
daa
loopne
lds
in
stos
xchg
jl
mov
dec
xor
pop
push
and
(bad)
scas
dec
xchg
cmp
pop
dec
out
xchg
jbe
xrelease
mov
mov
fwait
and
jb
push
scas
push
jno
jp
jge
enter
test
mov
stos
mov
loopne
pop
jmp
into
mov
ins
pop
mov
lods
xchg
adc
dec
ret
ins
jb
jo
and
pop
pop
jp
xor
adc
fsub
shl
mov
jns
pop
sbb
push
add
mov
mov
in
cmp
stos
scas
mov
repnz
inc
clc
fucom
ins
dec
ins
pop
pop
es
int3
cdq
js
xor
xchg
and
out
push
sub
push
jb
mov
ror
and
jbe
out
dec
sar
call
das
fwait
pop
jle
push
mov
loop
pop
jo
int
pop
shl
adc
xor
sar
js
xchg
jg
arpl
mov
and
dec
add
call
ds
adc
dec
push
ror
call
dec
aaa
cwde
(bad)
das
rep
adc
sub
scas
xchg
fdivr
or
push
(bad)
leave
adc
sub
push
call
and
jle
enter
daa
mov
cmps
sub
ror
inc
adc
in
scas
jb
xchg
enter
mov
jmp
cmp
(bad)
add
pop
data16
inc
xor
and
adc
in
ss
mov
outs
push
popa
xchg
jbe
xchg
daa
retf
push
mov
add
out
mov
lods
cmp
sti
mov
icebp
adc
push
retf
imul
add
out
xchg
cmps
out
fs
sti
not
add
es
ins
sbb
repnz
push
pushf
inc
sub
inc
cmp
cmp
sahf
sbb
bound
sub
push
popa
aam
and
fstp
inc
in
cmc
pop
(bad)
outs
cmps
mov
lahf
xchg
mov
sub
leave
push
and
sbb
cdq
sub
mov
sbb
adc
fsubr
mov
jmp
dec
adc
xchg
dec
lods
push
cmp
jnp
inc
mov
shl
cld
sahf
test
(bad)
mov
pop
xor
xchg
mov
shl
adc
cli
rcl
scas
cmp
mov
jmp
xchg
jo
sbb
xor
daa
add
loop
loopne
add
out
mov
dec
stos
lds
mov
shl
mov
jmp
inc
jne
inc
xchg
lahf
(bad)
xchg
jnp
popa
cmp
pop
push
pop
sub
jo
pusha
inc
mov
arpl
pop
shl
sbb
mov
in
imul
cmp
sbb
outs
leave
add
mov
retf
test
out
rcr
inc
mov
jo
retf
sbb
int
pushf
(bad)
retf
pavgb
pop
rcr
add
pop
pushf
adc
inc
data16
dec
retf
mov
xchg
jle
push
mov
mov
mov
add
pop
jge
pop
es
vmread
leave
mov
lea
adc
cmp
std
aaa
retf
lea
loop
sub
inc
and
add
repz
(bad)
les
cmp
sub
inc
dec
and
dec
cwde
out
ret
mov
fisttp
fs
sti
sbb
cwde
retf
dec
popa
push
pusha
(bad)
xchg
mov
sbb
add
jno
pop
xchg
mov
inc
or
xchg
and
ror
ins
inc
addr16
call
arpl
repz
or
fdiv
mov
enter
inc
xor
jg
xchg
mov
ins
movs
ins
inc
mov
mov
fs
mov
xchg
movs
xchg
cli
(bad)
mov
mov
jmp
adc
mov
mov
lods
lock
pop
sbb
adc
lds
mov
mov
int3
or
mov
fs
mov
jge
in
jle
jnp
or
rol
out
push
fisttp
loopne
ss
dec
loope
xchg
test
mov
pop
pop
and
scas
jno
cmps
sbb
movs
lds
add
add
push
xor
xchg
(bad)
xchg
jp
in
bound
mov
xchg
cmc
mov
add
es
mov
xchg
repnz
sti
les
add
jbe
shl
imul
aam
addr16
leave
lock
je
sbb
sbb
fwait
adc
(bad)
mov
or
in
or
push
jmp
jp
mov
jo
push
vaddsubps
mov
cmp
je
dec
xor
or
pushf
rcr
add
jecxz
mov
push
out
pop
ret
bound
int3
and
and
cmp
or
push
jmp
out
cmps
scas
imul
test
jno
mov
loope
sub
mov
mov
ins
push
outs
push
dec
pop
sahf
cmc
(bad)
xchg
and
mov
sub
xor
movs
inc
inc
or
jmp
aaa
sbb
mov
pop
fcom
sbb
mov
xchg
push
push
inc
outs
pop
inc
xchg
and
xchg
pop
or
fdiv
outs
jae
mov
dec
loopne
push
dec
xchg
imul
gs
les
cs
jmp
test
cdq
and
add
cmc
inc
loope
fld
sub
jb
mov
pop
rcr
loopne
dec
fst
adc
sbb
imul
push
mov
push
dec
jp
mov
push
bnd
adc
push
loop
int
push
cmp
dec
leave
inc
mov
rcr
pop
cld
mov
pop
mov
and
arpl
or
out
neg
and
outs
push
push
add
add
out
daa
xor
out
and
ret
in
xor
(bad)
(bad)
lea
gs
push
iret
iret
shl
dec
push
enter
jb
stos
rol
loop
sub
mov
push
dec
push
sbb
jae
gs
(bad)
sub
or
xor
push
je
aad
mov
test
mov
xchg
into
(bad)
xchg
cmps
xor
jge
or
cli
cmp
stc
mov
cmps
add
outs
sbb
xchg
mov
xor
and
call
int
push
js
sbb
shl
ror
fadd
sbb
push
jp
dec
cmp
sahf
dec
ins
adc
mov
jnp
sar
inc
adc
adc
inc
addr16
adc
adc
xchg
mov
jl
test
xchg
aad
jne
add
aas
pop
les
ds
shl
loop
daa
mov
cbw
mov
dec
xchg
adc
sub
enter
shl
inc
cmp
pop
cmp
cmps
mov
mov
aas
jge
je
imul
ret
call
stos
sbb
sub
rcl
push
jmp
cmp
in
(bad)
sub
daa
cmp
lock
jns
lods
pop
mov
dec
loopne
sub
pushf
add
pop
sahf
xchg
fcom
dec
jno
(bad)
jmp
aaa
movs
pushf
xor
jg
mov
xor
sbb
push
mov
sbb
push
inc
push
call
rcl
mov
mov
arpl
sbb
es
xchg
push
adc
push
inc
adc
add
inc
mov
xchg
jg
cwde
je
sbb
std
add
add
repnz
dec
mov
push
repz
jmp
mov
xchg
idiv
xchg
jae
xchg
(bad)
or
nop
xor
or
in
ins
retf
out
cmc
into
push
adc
dec
xchg
sbb
jno
push
jecxz
xchg
les
cld
stc
and
arpl
leave
hlt
ror
xchg
and
add
jae
lods
mov
inc
fld
inc
jg
leave
pop
out
daa
ja
cmc
mov
cmps
jno
stos
jmp
xchg
pop
cwde
repnz
icebp
jecxz
rol
dec
fwait
sti
pop
clc
fadd
stos
xor
ins
aaa
shl
pop
sbb
mov
and
sbb
outs
jne
mov
add
xchg
rcr
popf
cmp
je
dec
add
js
push
push
xor
jmp
xchg
repnz
mov
jbe
xchg
mov
xor
(bad)
cmp
(bad)
mov
jae
add
inc
movs
aas
add
mov
(bad)
dec
fsub
pop
inc
push
jmp
push
popf
sti
or
xchg
pusha
pushf
inc
xor
pop
xor
pop
scas
sahf
inc
inc
call
das
xchg
jb
bnd
gs
loop
sub
xchg
xchg
arpl
movs
outs
mov
loop
fsub
inc
mov
mov
repz
(bad)
ja
mov
sbb
aas
fmulp
mov
sbb
xchg
cli
test
les
push
imul
aaa
in
in
jge
mov
add
jb
mov
lea
int3
jg
dec
hlt
in
int3
mov
xchg
cmp
and
mov
aam
enter
mov
or
fsub
or
test
es
sub
xchg
ss
xor
and
ins
loope
push
ror
inc
dec
pop
mov
mov
sbb
lahf
icebp
fld
retf
pushf
ins
cmps
clc
cmp
imul
loopne
and
sub
das
sub
stos
bound
inc
int
scas
imul
or
pop
or
je
push
inc
stc
xbegin
stos
fstp
(bad)
sub
ss
mov
pop
xchg
js
push
adc
push
mov
aaa
and
aam
dec
ja
adc
xor
add
pop
jae
dec
in
pusha
xor
push
push
das
frstor
and
sub
push
mov
stc
jbe
inc
adc
imul
or
sbb
bound
mov
and
push
pop
and
ins
adc
jecxz
fisub
jge
(bad)
loope
dec
mov
sti
cwde
loopne
mov
jbe
scas
ret
into
jae
aaa
inc
xor
jnp
retf
fsubr
sub
addr16
add
pop
aas
adc
(bad)
sub
sbb
add
jmp
lods
push
(bad)
test
push
aas
idiv
popa
add
mov
add
mul
add
cmps
(bad)
(bad)
dec
xchg
(bad)
ret
arpl
mov
push
or
in
scas
dec
pop
xor
mov
and
fcomp
out
in
push
lahf
ss
dec
test
test
addr16
adc
fmul
fdiv
(bad)
xor
adc
mov
stos
and
mov
mov
and
rcl
data16
mov
inc
xor
mov
xlat
outs
or
cwde
jbe
(bad)
cmp
mov
dec
inc
and
aad
and
js
outs
hlt
dec
rcr
out
adc
imul
mov
and
mov
repnz
mov
sbb
dec
(bad)
ins
(bad)
xchg
or
call
hlt
test
sub
aas
add
pop
add
out
arpl
popa
push
push
inc
test
in
dec
retf
imul
mov
and
sar
ss
jecxz
outs
test
mov
fst
jo
pop
dec
add
xchg
and
fistp
test
jge
add
cmp
mov
dec
add
call
dec
out
stos
mov
test
and
jnp
rcr
imul
jmp
sbb
mov
mov
nop
imul
cs
dec
addr16
cmps
jmp
push
cmp
call
xchg
cmp
lock
ss
cs
xchg
scas
jmp
(bad)
mov
hlt
mov
cmp
fmul
jecxz
sbb
xor
and
mov
mov
int
adc
xor
ins
and
lds
sbb
push
fisttp
push
mov
pop
cld
sbb
xchg
dec
sbb
ins
pushf
aam
inc
(bad)
cmp
int
out
xchg
aam
out
daa
add
mov
pushf
and
ins
mov
sub
mov
pop
test
mov
loope
inc
push
sbb
cld
jle
pusha
les
(bad)
std
push
and
retf
(bad)
daa
mov
ins
movs
(bad)
imul
fwait
add
pop
mov
cld
outs
lock
mov
push
push
call
push
sbb
xlat
fstp
jp
jl
and
or
push
jns
adc
pop
xlat
or
aam
jnp
sub
fild
mov
push
in
jle
fist
sub
push
push
loopne
pop
ds
test
dec
popf
shl
pop
add
ret
aam
jmp
adc
mov
xor
fidivr
cmp
dec
mov
mov
add
xor
push
clc
mov
lds
pusha
dec
nop
push
cmp
cmps
call
das
xor
mov
in
add
nop
jle
adc
data16
mov
push
dec
test
inc
xor
fst
gs
push
cmps
dec
adc
inc
sti
(bad)
and
mov
or
lock
mov
pop
jmp
push
pop
aas
mov
lds
(bad)
js
ret
mov
retf
mov
fld
push
xor
fiadd
jbe
outs
pop
or
cmp
sub
sahf
mov
loop
xchg
ja
stc
test
cmp
repz
scas
rol
sbb
inc
mov
adc
inc
or
adc
mov
call
mov
lea
mov
sahf
mov
fdivr
lea
imul
ss
cmp
call
push
imul
(bad)
retf
call
and
aas
dec
adc
icebp
dec
push
fdivr
(bad)
sbb
ret
lods
aas
xchg
aad
test
push
add
and
call
adc
inc
sbb
and
mov
out
push
stos
jp
or
jb
rol
push
in
or
shl
pop
add
push
or
test
dec
imul
aad
pop
daa
mov
inc
repnz
mov
xchg
jge
pop
jp
cwde
lea
sub
and
xor
dec
retf
aam
mov
inc
mov
test
sbb
sti
lods
jne
or
cld
sbb
xchg
push
inc
jbe
xchg
pop
int
dec
mov
test
sbb
dec
push
dec
and
sar
into
add
cmp
jbe
lods
repz
mov
or
sahf
xchg
out
cs
push
or
imul
icebp
dec
not
loope
cmp
movs
pop
daa
nop
lahf
mov
adc
(bad)
and
pop
ret
mov
push
push
repnz
dec
jns
call
mov
in
int
or
sbb
or
lds
pop
icebp
aad
or
and
ret
stos
add
push
in
movs
xor
xor
lahf
and
in
sbb
pushf
xchg
lods
out
push
repnz
xor
fs
jns
pusha
arpl
aaa
inc
jns
push
outs
mov
push
enter
jae
jge
jg
sahf
movs
mov
ins
into
push
sti
popa
add
outs
scas
call
sub
push
jmp
inc
xlat
aad
test
adc
loop
push
arpl
pop
xchg
cmps
cmps
xchg
cwde
sub
jae
pop
lahf
stc
call
lahf
sbb
mov
dec
jbe
xor
dec
xchg
test
mov
xchg
inc
xor
cmp
ret
or
cmovp
jno
push
(bad)
xlat
sbb
sti
daa
push
mov
xor
and
shl
out
lahf
or
cmps
enter
dec
fucomp
mov
add
dec
aaa
mov
outs
ficomp
loopne
jno
inc
cdq
cdq
ss
jbe
out
outs
mov
ins
call
dec
xor
inc
sbb
xor
dec
xchg
leave
jne
cmps
jp
call
mov
test
sub
push
pop
div
out
fldenv
jb
out
(bad)
sub
fisttp
jae
mov
outs
push
inc
add
(bad)
loopne
cmps
popa
ins
es
out
add
rol
lods
cmps
neg
xor
fs
sahf
call
push
jno
out
mov
or
dec
pusha
jl
pop
(bad)
mov
ss
jg
shl
nop
repnz
push
rcl
(bad)
in
mov
iret
cmp
pop
data16
aad
dec
stos
pop
mov
lock
jno
sub
xor
pop
jns
xchg
fist
leave
test
mov
inc
adc
scas
sahf
loope
rol
aad
xor
add
test
popf
out
inc
xchg
hlt
std
jns
jae
pop
sub
(bad)
dec
scas
xchg
lods
adc
stos
(bad)
pop
dec
cmps
sahf
push
jno
xchg
pop
test
(bad)
mov
add
jl
xchg
ror
fndisi(8087
jb
(bad)
in
or
das
pop
mov
shr
sbb
mov
cmp
dec
mov
cmp
retf
sub
retw
call
push
and
nop
enter
or
std
pop
xor
jmp
inc
leave
sub
lds
jae
jp
(bad)
mov
pop
fsub
stos
jno
in
mov
jne
add
fwait
jmp
or
aam
push
adc
sub
loop
mov
add
cmp
pop
mov
mov
and
dec
fld
jmp
pop
xor
stc
(bad)
ret
lea
ins
pop
sub
jo
test
add
fcmove
scas
test
mov
popa
(bad)
pop
and
dec
sbb
sub
ins
imul
jp
cmp
dec
mov
test
cmp
imul
inc
and
fcmovnu
jmp
in
hlt
pop
lods
imul
or
adc
pop
mov
in
add
dec
and
aam
je
loop
test
nop
pop
mov
inc
ds
vpinsrw
ins
out
fdiv
or
out
test
add
xchg
arpl
mov
jmp
lods
std
lock
push
test
adc
hlt
dec
add
retf
cmp
pusha
aam
add
outs
cmp
push
push
add
xchg
ror
test
sbb
mov
or
sbb
call
out
mov
mov
and
leave
sar
xchg
not
mov
push
ins
adc
(bad)
lods
pop
loope
cmps
jmp
imul
into
in
sbb
add
and
jo
jecxz
test
xchg
inc
movs
pop
mov
push
stos
xor
adc
test
scas
iret
test
lea
push
out
mov
sbb
into
in
sahf
mov
scas
cmps
cld
mov
or
cmp
call
cld
xor
retf
jmp
jge
xlat
sti
std
mov
lods
push
jle
adc
adc
pusha
dec
cmp
adc
xchg
shr
retf
inc
lea
outs
mov
mov
jno
and
stc
jbe
fiadd
adc
aam
les
xchg
jmp
inc
std
retf
popf
pop
and
rcr
stos
outs
mul
jle
mov
lea
inc
aas
repz
pop
xchg
mov
scas
or
and
test
cmc
das
and
adc
les
out
mov
popf
pop
pop
shl
jae
dec
rep
cmps
inc
retf
adc
sbb
mov
push
and
push
mov
cmp
and
scas
jge
dec
cmp
iret
fdivr
adc
inc
adc
lock
test
stos
sub
sbb
stc
jecxz
inc
mov
sbb
xor
push
popa
cli
xchg
movs
leave
sub
pop
mov
mov
push
jne
add
sahf
push
aad
xchg
sub
xor
dec
outs
das
and
pop
sbb
xor
outs
stc
add
fidivr
push
mov
or
ss
jle
icebp
add
mov
imul
or
mov
mov
pop
jb
test
icebp
ja
test
jmp
retf
xchg
mov
arpl
into
mov
aad
inc
loope
call
and
daa
fcom
mov
dec
adc
loopne
lock
rcl
push
fwait
imul
xor
sbb
jl
or
mov
scas
jne
mov
and
sbb
dec
push
scas
sub
cmp
mov
adc
push
cmps
stos
ficomp
lods
arpl
sbb
jg
push
and
xchg
sub
sahf
xchg
add
clc
rcr
pop
not
mov
mov
jns
mov
lods
dec
mov
nop
in
cmps
adc
loopne
fidiv
sbb
xor
jae
imul
test
jnp
es
pop
mov
movs
xchg
out
inc
arpl
or
lahf
inc
daa
mov
sti
pushf
or
jno
sbb
xor
sub
or
dec
jmp
cmp
into
mov
es
jb
or
out
and
fcomip
sar
push
fwait
inc
in
retf
out
inc
jl
cwde
adc
jge
dec
mov
mov
push
pop
jae
xor
dec
gs
pop
ds
sbb
cmp
or
sub
icebp
(bad)
jb
jo
gs
aas
inc
rcr
or
add
push
test
mov
repnz
lods
adc
sahf
fild
ss
sub
sbb
lods
scas
jp
lea
test
loop
add
sbb
mov
iret
cs
adc
ins
je
mov
ss
xchg
jae
jle
clc
sub
popf
les
inc
pop
(bad)
mov
sti
loop
or
or
loopne
dec
jno
nop
xor
cmp
cmp
lock
pushf
pop
std
mov
cmc
data16
aad
ja
imul
xchg
sub
test
iret
jmp
in
xlat
ret
std
addr16
stc
in
mov
mov
call
mov
test
pop
inc
sub
pop
pop
jno
scas
jb
lds
dec
xor
adc
jmp
clc
xchg
mov
ret
mov
fisttp
pop
mov
sbb
test
ds
sbb
add
push
in
out
pop
into
dec
jno
out
cmp
sahf
gs
pcmpeqb
xlat
pop
jb
dec
mov
dec
mov
inc
call
pop
retf
mov
mov
or
mov
lea
packuswb
daa
out
not
pop
adc
sbb
add
(bad)
sbb
mov
xchg
xor
outs
jnp
ins
mov
mov
mov
ret
and
jle
jge
jo
mov
aam
test
xchg
xchg
xchg
mov
mov
aad
add
sbb
ret
adc
stos
loope
pop
cld
stc
mov
and
int
xchg
and
lea
stos
arpl
fidivr
je
(bad)
sbb
mov
jp
cli
loopne
(bad)
sbb
cmp
jae
xlat
lods
loope
loop
sbb
cmc
movs
fnstcw
or
pop
lea
push
xchg
push
dec
and
and
xor
adc
or
outs
sub
mov
sbb
sub
jb
cmc
ror
mul
fisub
mov
dec
lods
push
or
nop
cli
mov
fnsave
or
or
push
fcomp
pop
sbb
in
pop
mov
imul
sbb
sub
not
inc
pop
call
mov
ins
pop
inc
mov
fs
shr
inc
sbb
inc
lods
dec
push
cmps
ss
les
push
popa
dec
int3
repnz
(bad)
push
leave
mov
mov
out
test
nop
mov
scas
daa
daa
sbb
xor
cmp
cli
push
pusha
shr
cmc
jb
fbld
sbb
jmp
loope
dec
mov
ret
jecxz
sub
jecxz
xor
loope
pop
sar
xchg
mov
(bad)
aad
aaa
stc
ins
cmps
lock
outs
dec
fsub
jmp
cwde
movs
xor
mov
jp
pop
xchg
push
xchg
ret
dec
idiv
ja
xchg
ficomp
test
imul
sti
inc
push
xchg
rol
pop
push
imul
push
push
adc
sub
mov
sub
lahf
adc
rcr
pushf
in
push
(bad)
pushf
dec
or
mov
or
stc
push
call
aad
pop
xchg
sub
out
mov
and
and
fcmovu
inc
dec
jo
pop
and
test
fcomp
pop
add
jmp
lock
das
cmps
shr
xor
mov
mov
ror
(bad)
adc
inc
and
mov
and
ja
aas
xchg
shl
add
test
cmp
pop
adc
setnp
fs
(bad)
lahf
sbb
pop
(bad)
or
mov
test
retf
lock
jge
aad
addr16
sbb
into
mov
xchg
jmp
push
or
adc
pop
arpl
fcomp
or
es
fstp
mov
ret
loop
aaa
sahf
and
xor
ins
push
or
cmp
jbe
and
movs
mov
dec
and
xchg
sti
test
das
in
std
scas
fbld
dec
push
or
jae
test
jl
(bad)
push
adc
sbb
je
sti
fdivr
push
xor
aad
ficomp
or
or
cli
fwait
jno
jns
(bad)
ret
(bad)
jmp
dec
test
in
cmc
je
lods
push
xchg
out
xchg
adc
push
in
sub
mov
addr16
sbb
dec
pop
lea
sub
lock
dec
and
mov
mov
adc
inc
jbe
mov
ficomp
test
adc
xchg
aas
popf
mov
dec
or
adc
mov
sbb
test
or
in
shr
jb
pop
gs
mov
pop
inc
fdivr
dec
sbb
repnz
movs
ror
out
and
or
leave
mov
or
xchg
repnz
jne
mov
movs
adc
push
pop
ins
mov
jmp
loope
fstp
inc
movs
cmps
ins
mov
add
cmp
aad
stos
add
stc
sub
jmp
adc
js
dec
dec
rcl
sar
in
dec
loopne
adc
pop
jo
mov
ss
ja
ins
mov
push
and
push
xchg
scas
scas
aaa
xor
mov
xor
fwait
sbb
jmp
ret
xor
xchg
cmp
les
sub
(bad)
shl
xchg
pop
lods
pop
mov
adc
jb
jl
mov
(bad)
aad
call
mov
mov
outs
int3
repz
cmp
cmp
cmp
xchg
pop
enter
inc
dec
inc
stc
pop
loop
div
or
cmp
mov
outs
pop
mov
clc
mov
test
mov
out
ret
(bad)
sbb
pushf
(bad)
mov
xchg
push
mov
mov
shl
dec
xor
sbb
imul
sbb
loope
shl
pop
adc
dec
xchg
imul
fidiv
dec
fsubrp
aaa
and
mov
cmps
mov
fimul
inc
xor
fsub
stos
retf
xor
pop
mov
icebp
pushf
gs
or
dec
stos
mov
or
shl
cs
test
jne
sub
and
or
pop
test
outs
test
xchg
sbb
jo
push
jmp
cmc
xchg
mov
or
pop
repz
into
jne
ins
ficom
outs
iret
or
sbb
adc
fistp
jmp
cmp
xor
add
jl
loope
mov
or
fcomp
mov
mov
enter
fld
aaa
loope
adc
add
fistp
data16
mov
jmp
mov
mov
pop
shl
dec
mul
pop
repnz
enter
icebp
lock
test
xor
cmps
pop
scas
lods
jmp
leave
or
jp
data16
adc
and
ins
xchg
cmps
and
dec
(bad)
mov
mov
xor
arpl
mov
fsub
ret
repnz
popf
data16
mov
int
mov
mov
movs
cmp
dec
inc
or
test
mov
inc
or
sub
test
retf
mov
jecxz
fld
(bad)
dec
jae
dec
imul
pop
loop
js
xchg
xor
fcomp
fcom
aaa
dec
mov
mov
lea
adc
sub
and
push
jno
hlt
jnp
fnstcw
(bad)
sub
xchg
jnp
sub
inc
in
ss
rol
rol
sub
fistp
out
cmp
push
dec
or
sar
dec
loopne
adc
inc
in
push
in
sbb
bound
sub
pop
test
lock
loope
pop
loope
pop
and
sbb
daa
jae
mov
pop
stos
add
int
loope
test
mov
cmps
dec
shl
mov
xor
nop
fwait
mov
mov
and
call
pop
xchg
pop
push
push
pop
iret
je
popf
sti
inc
or
sub
(bad)
scas
and
add
call
push
das
inc
push
pop
shl
dec
add
xchg
jbe
add
out
das
sbb
add
or
jns
or
sbb
mov
xor
fwait
adc
push
and
das
jmp
psubb
hlt
add
dec
mov
mov
cmp
cmps
push
jne
sub
cmps
adc
test
(bad)
std
pop
out
inc
jmp
inc
sub
jo
and
(bad)
js
mov
shl
mov
mov
adc
test
pushf
jbe
pop
add
test
mov
or
out
hlt
rol
push
lahf
leave
sub
inc
xchg
call
jno
and
lahf
fcom
aas
idiv
xchg
push
dec
popf
xor
sbb
test
ret
xor
imul
mov
fucom
ins
dec
push
mov
add
fcomp
jnp
aad
mov
mov
cmps
jb
xchg
in
push
les
icebp
call
ret
mov
(bad)
and
sbb
mov
xchg
push
popf
ins
adc
les
add
pushf
sbb
cdq
mov
in
int
int
loop
and
jo
and
and
cmp
add
xchg
popa
sbb
pop
mov
mov
je
in
(bad)
mov
pop
scas
leave
clc
jbe
xor
aad
cmp
cmp
ret
cs
mov
jmp
stc
push
push
cmps
imul
fs
js
adc
ins
ins
xchg
mov
fidiv
adc
push
mov
pop
jp
mov
push
ret
pop
loope
jb
xor
inc
mov
push
xchg
cmp
dec
push
cmp
in
in
arpl
repnz
or
popf
mov
outs
outs
fwait
movs
dec
fucomp
dec
outs
and
or
lds
inc
or
jp
(bad)
cmp
inc
ror
inc
int
pop
out
fist
pop
(bad)
js
or
xchg
not
ja
mov
and
jnp
loopne
push
mov
or
cdq
jl
mov
into
aas
push
xor
mov
jne
pop
push
pop
mov
test
js
repnz
out
pop
push
cmc
add
dec
jmp
pop
mov
(bad)
int3
xchg
sbb
sbb
rcl
mov
repnz
mov
cwde
out
xor
cld
xchg
stos
add
cwde
(bad)
mov
fdiv
adc
in
add
stc
pop
pop
inc
mov
and
jp
lahf
mov
xchg
je
aaa
scas
movs
movs
or
stos
dec
add
jno
sbb
sub
add
out
stos
sbb
jl
mov
stos
cmp
or
mov
in
mov
lea
aam
sub
pop
cs
push
ret
int
stos
(bad)
les
popf
rcr
shl
stos
mov
or
repnz
mov
int3
jbe
nop
pop
(bad)
fstp
xchg
mov
in
enter
add
pop
hlt
sbb
inc
add
sbb
dec
pop
aas
(bad)
fadd
push
mov
mov
push
or
cmp
(bad)
sbb
les
adc
or
cmp
retf
leave
ret
mov
int
int3
mov
cmp
(bad)
push
mov
shr
or
cmp
call
pop
rcr
cwde
fimul
push
hlt
xchg
jnp
js
jl
mov
cmps
or
fadd
inc
aas
fcmovb
mov
pop
mov
cld
cmps
adc
call
scas
push
adc
pop
fisubr
ja
jecxz
xchg
loop
das
nop
scas
or
in
int3
inc
or
test
cs
mov
mov
movs
sbb
cld
and
mov
mov
cmp
mov
das
gs
jo
rol
loope
jge
loopne
add
imul
push
icebp
hlt
addr16
(bad)
cld
xchg
cld
adc
push
jb
bound
mov
bound
xchg
jns
lods
(bad)
std
push
mov
add
ja
adc
sub
push
ret
mov
in
pop
add
test
mov
sub
daa
push
pop
xor
out
sbb
cld
jmp
inc
daa
mov
out
inc
and
and
pushf
nop
cmp
sub
xchg
sub
stc
aaa
repnz
inc
callw
cmp
inc
mov
pop
gs
lea
dec
aam
ror
inc
inc
movs
cmps
ret
pop
push
sbb
fisttp
les
dec
adc
movs
or
mov
ds
or
mov
aaa
cmp
add
out
mov
call
pop
aad
cmp
or
or
or
out
fs
cmps
nop
adc
push
add
pop
mov
pop
fld
push
(bad)
call
repz
xor
xchg
mov
jmp
sub
or
int3
inc
imul
popa
sbb
repz
and
outs
or
cmp
out
mov
push
les
imul
jecxz
push
in
retf
pop
cmp
repz
adc
movs
xlat
int
not
rol
(bad)
leave
cmps
inc
jb
mov
mov
sbb
dec
xchg
mov
loopne
jl
cmps
rcl
int3
push
not
(bad)
sub
sbb
in
aad
inc
cmp
or
imul
xchg
or
push
pop
add
int
fbstp
or
and
inc
pop
imul
dec
or
mov
adc
cdq
cmp
jne
and
out
iret
inc
in
mov
sbb
xchg
inc
in
add
cmp
movs
push
xchg
or
(bad)
in
jnp
or
jge
fwait
aaa
mov
xchg
loopne
out
dec
(bad)
mov
or
iret
out
sub
xor
pop
jg
cmp
xchg
sbb
ffreep
push
add
push
icebp
fwait
push
retf
shl
out
rcl
adc
fldenv
cmp
cmp
add
push
mov
and
xchg
push
into
cs
arpl
(bad)
repz
nop
repnz
mov
jecxz
inc
dec
aad
or
lods
shl
add
jnp
adc
(bad)
jp
add
push
push
bound
jl
fs
pop
(bad)
lods
push
inc
fisub
(bad)
xor
jg
or
ds
push
or
hlt
xchg
and
sub
xor
inc
adc
or
push
or
(bad)
enter
adc
lods
out
dec
and
jmp
fisub
data16
jp
cs
fwait
retf
jmp
sub
idiv
push
in
xchg
mov
sar
lods
in
or
xchg
jnp
mov
push
sub
addr16
sbb
cdq
(bad)
out
aad
jns
loopne
and
xchg
movs
xlat
and
aaa
int
aas
pop
sub
cmp
in
retf
pop
bound
push
xor
inc
(bad)
sbb
cmc
cwde
in
stos
mov
add
dec
dec
mov
test
mov
js
add
scas
test
test
jmp
and
out
shr
adc
inc
dec
or
test
mov
xor
cdq
xchg
mov
das
cs
cmps
add
fiadd
in
inc
sbb
cmps
lods
or
push
jecxz
call
mov
hlt
adc
ror
shl
mov
xor
dec
xchg
sbb
mov
cmps
mov
pop
mov
push
mov
(bad)
dec
cmp
enter
imul
sar
inc
push
out
add
fs
mov
test
pop
pop
adc
stos
test
pop
mov
sub
mov
leave
mov
cmp
scas
add
mov
push
dec
out
dec
retf
aaa
dec
jne
cli
mov
stos
xchg
xor
lods
or
test
pop
sub
jmp
sbb
jns
sbb
movs
adc
mov
fdivr
ret
imul
retf
sub
shr
ds
dec
jmp
xchg
xor
sbb
ja
ja
scas
fdivr
sbb
rol
mov
and
les
sbb
push
xchg
xchg
sub
int3
xchg
cmps
test
in
in
out
mov
mov
sti
adc
adc
adc
addr16
imul
xlat
ds
push
repnz
jmp
arpl
shr
lods
cmp
(bad)
jmp
or
and
movs
dec
adc
fild
mov
push
lahf
sub
call
aas
lock
cmp
pop
push
pop
xchg
lds
pusha
and
push
push
(bad)
imul
mov
sar
sbb
fstp
ret
retf
popa
int
arpl
xor
cmp
or
xchg
sub
sti
les
dec
push
mov
dec
xchg
adc
nop
repz
mov
inc
sub
pusha
add
xchg
add
aas
jnp
retf
fsubrp
lods
test
dec
int3
mov
inc
loop
jb
iret
loope
out
mov
lods
stc
push
cmp
cdq
fcmovnu
fwait
xor
data16
dec
mov
int
ret
mov
mov
sbb
jmp
int
jp
mov
stos
adc
jns
test
add
fs
mov
jle
add
sub
ror
popa
jnp
push
lahf
std
retf
or
sbb
imul
xchg
fstp
inc
std
mov
cmp
call
inc
jmp
push
jno
push
jae
mov
jge
out
xlat
(bad)
cmp
lods
inc
test
adc
push
cmp
ins
movs
shl
mov
ret
js
jo
pop
in
leave
or
push
enter
mov
iret
jo
inc
and
push
(bad)
sysexit
cdq
xchg
bound
xor
std
cmp
dec
pusha
jmp
ss
pop
fldenv
out
call
pop
test
mov
push
mov
push
cld
pop
sbb
pop
mov
out
mov
or
mov
cmp
aas
dec
or
mov
aas
sub
rcl
lds
fs
es
icebp
cdq
arpl
mov
ds
add
add
out
mov
clc
loopne
inc
leave
rol
test
and
and
aam
outs
in
out
mov
scas
push
out
jle
push
outs
mov
pop
cmp
neg
ja
stc
loope
sub
sahf
add
fdiv
test
lahf
stc
(bad)
fdivr
cmp
add
add
push
mov
icebp
mov
(bad)
loope
pop
imul
ret
out
inc
movs
inc
out
mov
adc
call
pop
xor
jns
frstor
cmp
inc
loopne
shl
cwd
outs
sub
cmp
jae
rcr
sub
call
(bad)
mov
push
or
xor
aam
out
inc
in
dec
mov
loope
lods
xchg
cmp
sbb
push
jae
xchg
mov
xor
mov
sub
xor
sbb
movs
cmp
or
push
daa
adc
sbb
(bad)
adc
shr
imul
sub
out
mov
inc
sbb
push
shl
ins
mov
or
shl
jl
add
add
or
fwait
(bad)
jne
fwait
ins
jp
mov
retf
std
lea
outs
aaa
jb
xchg
ss
sbb
pop
fiadd
gs
into
mov
and
stc
loopne
sub
mov
clc
idiv
inc
mov
add
push
out
out
enter
dec
add
nop
ins
popa
cs
cld
ficom
ins
ret
jle
loopne
sbb
aas
jmp
mov
mov
mov
jp
push
mov
jmp
cli
xchg
jb
cmp
es
add
popa
push
movs
inc
fsubr
sub
cmc
std
push
(bad)
sub
mov
shr
nop
sub
(bad)
pop
lds
adc
stos
cmps
idiv
ss
pop
jae
push
and
jne
movs
call
inc
sub
adc
stc
xor
cwde
sahf
xchg
jmp
lods
mov
push
aas
adc
pop
lods
sbb
mov
icebp
jp
adc
cli
pop
and
cmp
mov
pop
out
dec
sbb
scas
inc
(bad)
xor
inc
jge
xor
aad
mov
dec
xor
pop
call
inc
cs
aaa
jbe
outs
pop
mov
jnp
out
in
out
retf
stos
xor
dec
stos
jno
int3
not
sub
pop
mov
xor
bound
fstp
or
pusha
rcl
call
fmulp
ficom
nop
mov
mov
add
pop
jge
sub
inc
ret
fdivp
xchg
adc
(bad)
cmp
loopne
sub
hlt
or
lds
pop
jno
in
data16
cmps
out
ret
adc
shl
mov
adc
fs
mov
icebp
ja
add
into
test
or
fcmovnu
jnp
add
xchg
mov
jl
mov
outs
mov
jo
mov
shr
cmp
lahf
sbb
data16
stc
fidivr
cmp
shr
inc
retf
add
push
sbb
fild
jae
mov
das
xor
rol
in
jmp
shl
sub
outs
pop
arpl
rcr
sub
sbb
sahf
cmp
nop
push
add
xor
repnz
jne
push
pop
and
icebp
hlt
inc
test
pop
stos
enter
mov
and
enter
ins
cmp
push
ins
aad
inc
lahf
ins
in
cmc
pusha
pop
sahf
cmp
test
aad
add
lock
call
push
cli
int3
aad
fstp
loop
xor
(bad)
mov
mov
std
sub
fmul
pop
jmp
mov
pop
stc
add
jns
int
cmp
inc
xchg
push
fidivr
mov
sbb
loope
ds
add
adc
adc
sar
das
test
test
xchg
xor
(bad)
out
mov
push
push
test
mov
icebp
retf
sbb
lds
adc
or
fs
in
ja
pop
aam
xchg
inc
add
imul
push
mov
enter
js
cdq
popf
data16
in
sbb
or
pop
mov
iret
add
popf
jnp
sti
int3
dec
cmps
stos
mov
aad
sub
sahf
mov
ins
ret
das
mov
mov
mov
ss
into
push
push
out
add
dec
dec
aam
je
enter
(bad)
push
(bad)
aam
daa
popf
sbb
lods
(bad)
shl
pop
loopne
les
jb
dec
clc
jbe
pop
loopne
and
fadd
add
dec
xchg
jl
inc
or
xor
sub
sbb
sub
cmps
lods
ror
mov
xlat
pop
repz
ins
pushf
hlt
xor
das
pop
clc
iret
push
mov
pop
call
movs
sub
xchg
dec
in
frstor
imul
lods
xchg
pop
pop
jmp
xor
mov
mov
mov
cmp
mov
aad
and
jp
adc
inc
ins
sbb
mov
push
and
or
(bad)
adc
hlt
fsubr
adc
mov
or
in
mov
gs
cmc
cmp
sbb
cmp
xor
jmp
sbb
or
mov
les
ss
stc
imul
inc
call
add
cmps
hlt
lods
fnsave
jmp
mov
sbb
jne
xchg
stos
mov
mov
inc
pop
or
aam
and
pop
mov
int
retf
(bad)
dec
lods
movs
jmp
jmp
jmp
push
scas
sub
dec
cmp
cmp
js
bound
fiadd
repz
cmp
jns
xchg
or
js
pop
inc
movs
ins
mov
or
xor
jp
dec
pop
sbb
sti
cmps
pop
in
call
dec
out
push
sbb
and
jecxz
push
in
mov
ret
(bad)
mov
sub
push
dec
add
inc
std
(bad)
adc
std
inc
xchg
mov
or
mov
sahf
add
ins
cmp
xchg
test
daa
inc
inc
pop
pusha
push
imul
and
popf
fcmovb
out
imul
sub
retf
popf
shl
xchg
xor
adc
dec
pop
adc
sub
mov
stc
les
jmp
mov
adc
or
xor
inc
sti
mov
out
cmps
ror
movhlps
sbb
mov
fs
das
add
fsub
scas
xchg
inc
retf
dec
and
fdivr
adc
test
fs
jo
mov
(bad)
loopne
jle
mov
in
lahf
pop
mov
call
fnsave
hlt
mov
jae
mov
mov
sbb
call
in
or
mov
daa
mov
stos
std
xchg
or
sbb
mov
jae
push
xchg
sub
cwde
mov
cli
adc
iret
test
std
jmp
jb
mov
push
push
clc
sbb
pop
das
mov
mov
sub
movs
rcl
dec
xchg
mov
loop
xor
xor
shl
cmp
mov
dec
int
sub
mov
xchg
pop
adc
retf
dec
rol
inc
fnsave
sub
jo
mov
mov
adc
mov
cmp
dec
stos
out
out
xchg
(bad)
(bad)
jne
repnz
cmp
sbb
or
js
fisubr
mov
xor
rcl
repz
push
shl
movs
add
stos
mov
cmp
in
mov
leave
cs
retf
addr16
or
push
mov
dec
dec
cmp
loop
or
mov
jno
adc
push
cmp
outs
xchg
ins
mov
enter
lods
out
or
test
pop
scas
ret
and
mov
lods
imul
sbb
loopne
call
out
and
aad
pop
scas
imul
leave
sbb
shl
push
push
movs
das
jge
jmp
sbb
mov
push
ss
fdiv
inc
mov
movs
in
add
jp
sti
inc
shl
lods
nop
in
bound
mov
(bad)
and
test
mov
jle
add
sbb
push
sub
mov
jmp
mov
pop
test
mov
(bad)
bound
and
xor
mov
dec
das
dec
xor
int3
iret
test
fbstp
lds
adc
push
in
popa
or
pop
retf
inc
mov
pushf
push
shl
jmp
pop
jbe
scas
xchg
test
push
sub
pop
inc
es
ins
inc
xor
dec
push
outs
pop
mov
mov
sbb
loop
in
movs
add
or
bound
mov
(bad)
loopne
cmp
call
adc
or
icebp
dec
retf
push
xchg
xchg
xor
mov
add
inc
mov
jg
pop
and
cwde
js
mov
ja
ret
fnsave
xchg
jno
adc
pushf
(bad)
mov
sub
rep
inc
push
stc
cwde
mov
cmp
lahf
xor
je
add
lds
adc
scas
loope
or
cld
xchg
mov
sub
push
js
and
cmp
or
stc
ret
fcmovnb
xchg
mov
int
cmp
pushf
pop
adc
addr16
stos
add
and
or
xchg
je
stos
mov
lahf
and
fld
loope
arpl
mov
xchg
pop
in
outs
inc
repz
rep
pop
or
imul
cs
lods
fisttp
aas
pop
ins
mov
(bad)
xlat
data16
sub
pop
hlt
ret
in
sbb
ds
sbb
shr
scas
jmp
lea
sub
das
push
xchg
sub
shl
mov
loope
mov
hlt
fcmovne
test
push
xchg
inc
mov
mov
or
adc
mov
dec
pop
aaa
push
fstp
sub
add
ror
fwait
xor
push
into
pop
icebp
popa
sbb
pop
pushf
(bad)
or
dec
dec
inc
retf
mov
dec
aam
sahf
mov
lods
outs
jbe
jmp
jo
xor
mov
inc
or
jbe
mov
pop
sti
pop
cmc
mov
jno
or
test
das
push
cmp
pop
sub
xchg
fs
adc
push
jl
ins
sbb
bound
sub
add
xor
inc
mov
and
(bad)
adc
adc
inc
sub
or
mul
les
test
add
aad
fstp
test
mov
(bad)
outs
icebp
test
sbb
rcr
inc
and
ss
pop
lods
arpl
stc
jle
jb
in
lods
xchg
movs
jae
ds
das
or
xor
pop
or
cld
add
nop
ret
sahf
add
not
je
dec
jno
cmp
dec
jnp
adc
inc
not
mov
sub
dec
xchg
lock
mov
lea
sbb
push
mov
sbb
xor
xor
inc
imul
sub
fwait
mov
sub
(bad)
ss
sub
ret
xchg
or
loope
dec
push
les
push
mov
repnz
shl
sub
mov
jns
popa
retf
fbld
cmp
inc
xor
and
mov
fwait
pop
jne
push
xchg
in
xor
je
dec
aad
bound
bound
jg
(bad)
cld
fstp
pusha
scas
imul
mov
pop
inc
test
push
out
pusha
mov
dec
push
(bad)
in
in
xchg
jmp
setnp
pop
cmp
mov
outs
lock
movs
cmps
inc
sbb
scas
dec
enter
inc
lock
jno
inc
imul
das
mov
lahf
cmp
add
add
push
mov
sahf
mov
rcl
and
lea
repnz
ror
mov
rcr
fst
xor
(bad)
cmp
push
mov
jp
add
ss
loop
jmp
mov
stos
push
retf
pop
pop
jb
(bad)
xor
cs
icebp
in
cmp
inc
mov
or
mov
test
pop
aad
inc
data16
pop
and
mov
or
daa
cmp
fs
out
push
lea
mov
inc
push
aad
nop
adc
push
cdq
mov
(bad)
popf
imul
jbe
ucomiss
int3
sub
leave
push
cs
fcos
lods
cmc
inc
je
stos
(bad)
mov
icebp
push
push
dec
xchg
dec
popa
or
mov
cmps
cdq
add
stos
and
imul
mov
pop
sub
sbb
aad
stos
mov
jmp
clc
pop
nop
inc
shr
arpl
xor
das
push
sbb
data16
dec
xchg
and
retf
shl
push
adc
pop
inc
sar
loop
and
in
xor
nop
(bad)
xchg
sub
push
cmp
cmp
mov
scas
in
add
pop
mov
arpl
in
mov
loopne
rol
jae
or
mov
pop
lods
repnz
daa
loope
and
je
push
ins
mov
add
jbe
jecxz
pop
out
mov
movs
mov
cmp
cld
clc
push
cs
enter
mov
aaa
aas
clc
mov
inc
jg
xchg
jmp
xchg
das
add
xor
sbb
ret
push
fucomi
dec
std
pause
jg
in
imul
ret
xor
mov
xchg
pop
sbb
scas
and
mov
jo
adc
jp
jle
jns
movs
dec
inc
outs
addr16
cmp
sub
push
jl
inc
push
push
dec
(bad)
pop
xor
push
pop
cmps
test
xchg
sub
fisubr
mov
or
adc
sbb
and
mov
jae
cmps
(bad)
xor
cld
mov
and
ror
ins
sbb
dec
xor
vcvtps2ph
mov
add
push
pop
fiadd
push
aad
mov
sub
test
xor
jle
sar
ret
xchg
(bad)
push
es
mov
in
imul
or
(bad)
jns
addr16
jbe
sub
sub
lods
jae
or
dec
seta
jg
ds
test
xchg
fs
stc
(bad)
movs
and
aad
shl
cmp
mov
shl
cli
mov
add
movs
icebp
sub
mov
(bad)
jmp
stc
jo
adc
pusha
push
(bad)
adc
cli
test
pop
jmp
scas
adc
dec
ds
cmp
ja
cmp
or
sahf
stos
push
jne
hlt
lock
and
push
mov
out
pushf
mov
outs
lfs
sub
(bad)
cmc
pop
les
fwait
pop
addr16
cmp
xor
imul
lods
sub
or
jl
int
dec
cmp
shl
or
(bad)
mov
aam
arpl
retf
das
jmp
lea
cs
ficom
push
loopne
jbe
daa
push
sbb
pop
push
fisubr
mov
ds
adc
in
imul
dec
into
loop
mov
jg
cmp
sub
cwde
sti
mov
cmp
inc
push
int3
mov
ror
xor
xchg
dec
mov
lds
into
pop
repnz
push
mov
cs
jo
stos
fdiv
mov
push
imul
pop
jb
mov
(bad)
outs
es
mov
mov
xchg
scas
or
aas
cmp
push
and
dec
call
outs
cmps
fcom
call
clc
(bad)
loope
addr16
repz
or
(bad)
jmp
sub
lods
mov
pusha
mov
stos
std
hlt
fs
div
cli
push
mov
push
jmp
inc
inc
enter
fisttp
xor
jns
call
fucomp
out
mov
mov
and
repnz
mov
jp
or
pop
or
xchg
cmp
jns
lock
dec
xor
stos
pop
jle
pop
push
jl
les
pop
mov
mov
gs
add
xor
inc
nop
mov
mov
sub
inc
std
jp
pop
out
jecxz
jg
std
sub
push
mov
cmp
inc
popf
mov
std
cmp
lea
call
mov
(bad)
and
cmp
mov
sbb
pop
mov
jne
cmc
or
mov
add
jmp
ja
sub
mov
repnz
pop
les
xchg
xchg
sub
push
or
lock
popf
push
and
int3
mov
jmp
xchg
pop
mov
pop
ins
jecxz
repnz
test
retf
xor
movs
mov
push
xchg
jecxz
(bad)
fsubp
xor
mul
repz
stc
jle
sar
jp
dec
pop
push
mov
(bad)
cdq
xor
mov
out
cmp
mov
dec
pop
sbb
dec
shr
sbb
pop
push
push
add
retf
cmc
xchg
hlt
jno
mov
mov
retf
mov
gs
and
test
dec
adc
sbb
fadd
imul
daa
das
fnstenv
int
cmp
sti
sbb
jge
shl
addr16
xlat
lahf
adc
xor
cli
xchg
mov
push
mov
cmp
push
dec
and
gs
sub
and
ds
dec
hlt
mov
add
loopne
(bad)
push
jne
fcmovb
stos
cmp
test
sub
xchg
and
stc
pop
sub
jg
sub
gs
cli
mov
movs
sbb
stos
cwde
ins
rol
fimul
or
xor
jns
lea
fwait
stos
fs
push
push
ins
fcomip
aad
adc
rcl
jne
xchg
mov
loop
pop
sar
sbb
push
inc
lock
repnz
jmp
add
sub
add
inc
sub
iret
not
mov
sbb
bound
in
dec
xor
fistp
std
int3
les
sbb
and
inc
add
rcr
xchg
fdivp
inc
gs
cmps
dec
outs
cdq
sbb
xor
cmps
loop
mul
gs
add
mov
js
call
mov
enter
ja
xchg
jbe
daa
test
enter
cdq
dec
inc
or
sbb
mov
femms
xor
push
cld
adc
popa
icebp
add
jmp
fwait
js
dec
stos
ret
jae
cmp
add
dec
loopne
adc
push
(bad)
adc
push
push
loop
jg
xabort
(bad)
mov
lea
xchg
les
xor
lea
retf
inc
jne
(bad)
arpl
in
cwde
adc
mov
mov
loopne
pop
mov
add
fwait
add
add
mov
imul
jbe
iret
retf
data16
xlat
cld
arpl
call
push
aad
mov
enter
push
pop
pop
inc
fsubr
sub
test
fwait
mov
xchg
stc
data16
fwait
jmp
mov
add
xlat
popf
mov
pop
add
into
and
add
jns
clc
adc
add
gs
gs
sub
int
pop
aaa
shr
idiv
lock
add
and
dec
pop
push
inc
shl
call
fild
retf
lods
fdiv
pop
cmp
sub
pusha
mov
in
arpl
inc
jmp
mov
(bad)
sbb
mov
push
aam
fnstcw
and
leave
mov
mov
test
fist
out
mov
(bad)
pop
xor
hlt
sbb
push
inc
mov
and
sub
adc
fist
mov
ds
ja
xchg
sbb
push
sub
popf
jmp
repnz
pusha
dec
mov
jo
pop
sub
mov
xor
mov
int3
clc
xor
ret
push
(bad)
mov
jnp
outs
mov
adc
cmp
push
fimul
adc
add
mov
fsubrp
hlt
jne
popa
fwait
hlt
mov
leave
scas
xchg
sbb
arpl
aaa
arpl
ja
xchg
das
inc
push
leave
mov
xchg
in
dec
dec
stos
jnp
cli
arpl
add
jl
pop
pop
data16
pop
test
inc
push
pushf
sub
jne
imul
ret
xchg
outs
shr
pop
fsubr
push
sbb
retf
cli
pop
adc
adc
shl
fimul
out
mov
mov
mov
xlat
mov
pop
sbb
in
stc
test
addr16
js
call
jp
dec
sbb
loopne
ror
out
mov
fst
mov
mov
pop
mov
jns
add
jg
fld
shr
shr
push
fadd
jo
add
mov
push
add
cmp
or
jne
and
push
aam
ins
idiv
out
jge
push
mov
cwde
bound
aaa
(bad)
std
dec
lock
popf
not
push
(bad)
jns
sbb
cmpxchg
iret
xchg
sbb
pop
mov
push
mov
in
inc
mov
aaa
mov
stos
sar
mov
push
mov
fild
shl
jno
mov
xchg
dec
(bad)
ror
adc
add
stos
cmp
fstp
and
push
rcr
jle
and
add
in
inc
push
jne
jg
or
push
out
lods
pushf
mov
mov
and
push
out
stos
adc
mov
xor
imul
gs
sub
aas
mov
call
bound
cdq
or
mov
cmp
paddsb
push
fild
das
cmp
mov
mov
out
stc
jg
pop
outs
push
pop
popa
repz
sub
mov
shr
and
xor
sbb
retf
andps
sub
sbb
xchg
into
scas
dec
call
xor
int
sub
xchg
adc
mov
inc
fwait
mov
adc
(bad)
into
idiv
ret
clc
punpcklwd
mov
dec
mov
push
fmul
or
jmp
lock
hlt
out
lea
arpl
lock
pusha
jns
mov
stos
and
push
fsub
xor
jnp
sbb
push
fld
cmp
int
popa
sbb
dec
daa
shr
pop
add
outs
jmp
pop
sbb
push
push
or
xchg
fcmovbe
fisttp
sbb
or
mov
cld
fidiv
es
rcl
mov
sub
es
out
push
pop
inc
call
cmps
xchg
mov
in
retf
sub
movs
pop
add
cld
mov
pop
or
retf
xor
pop
mov
and
(bad)
ins
push
dec
mov
xchg
push
inc
clc
popf
sub
add
shl
mov
nop
cmp
iret
cmp
shl
int3
inc
int
sub
mov
cmp
push
pop
das
ja
xor
out
repnz
std
jno
xlat
fwait
sub
xchg
in
ret
or
rcr
inc
out
lock
stos
push
icebp
or
out
push
mov
and
mov
sub
cmovle
push
sub
sti
mov
cld
ret
mov
fwait
test
popa
daa
stos
(bad)
iret
movs
into
out
into
or
mov
xor
adc
ins
and
in
mov
ret
inc
mov
pop
sub
fwait
loopne
and
inc
(bad)
ins
cmp
stos
imul
push
xor
std
or
loop
pop
xor
test
adc
lods
scas
ror
lahf
lea
jl
mov
pop
test
mov
add
stos
(bad)
cmp
inc
movs
out
or
or
dec
rcl
adc
rol
push
sub
push
leave
shl
pop
sub
add
dec
sbb
inc
dec
ins
and
in
cmp
aam
movs
mov
cmp
mov
test
push
or
fdiv
dec
(bad)
xchg
dec
dec
neg
cmp
frstor
mov
test
gs
jns
cmp
lods
jbe
push
shl
daa
rol
stos
popa
test
mov
movs
lds
pop
mov
mov
sbb
sbb
push
repz
(bad)
fcmovnbe
pop
dec
xchg
ret
fld
push
adc
and
mov
jae
(bad)
push
cmp
adc
jno
test
or
xchg
mov
sub
popa
into
lea
dec
sbb
dec
ffreep
sbb
sub
pushf
and
or
pop
daa
push
(bad)
or
adc
loopne
xor
(bad)
jbe
mov
add
cdq
movs
xor
sar
int
cmp
dec
nop
sbb
inc
fs
pop
ret
inc
pop
fcom
dec
popf
and
retf
xor
dec
in
cmc
cs
out
fcomp
adc
jbe
bound
push
add
scas
(bad)
push
clc
sub
fcomp
push
jmp
dec
sub
adc
mov
fisttp
push
out
push
push
test
cld
lods
mov
aaa
cmps
sbb
mov
fcom
fisub
cwde
mov
bound
lock
out
ins
lock
push
cdq
call
fwait
rol
and
das
push
ficom
div
mov
out
leave
xchg
stos
test
or
jb
scas
dec
mov
jnp
push
pop
pusha
out
jmp
sahf
(bad)
aad
and
dec
inc
cmp
ss
mov
mov
sbb
mov
repnz
pop
add
test
xor
stos
mov
imul
test
cmp
mov
in
cld
fwait
jns
xor
outs
inc
hlt
jnp
mov
clc
loope
out
and
add
xor
jmp
mov
aas
sub
sbb
xchg
scas
pop
mov
fiadd
inc
push
jge
inc
ret
in
dec
setg
dec
aas
dec
jg
xor
mov
call
pusha
repnz
mov
jne
mov
sub
and
ror
inc
mov
(bad)
jae
cwde
fidivr
fdiv
push
std
cld
sbb
call
test
fcom
(bad)
add
mov
scas
imul
dec
fcom
lods
pop
(bad)
sub
les
lods
xlat
push
aad
cmc
or
mov
(bad)
pop
dec
test
jae
or
je
cli
dec
cld
sub
cmp
cli
adc
xchg
pop
sub
sbb
stc
stc
fadd
sbb
cmp
mov
sub
std
xchg
push
sti
ret
xchg
outs
jne
in
nop
jg
out
ins
pop
pop
ret
xchg
fcom
aaa
mov
data16
popa
ja
fld
mov
mov
cmc
sbb
cmps
add
inc
sbb
mov
mov
cld
fist
das
jbe
loopne
fcomp
and
int3
and
aaa
in
xchg
mov
cmp
add
mov
outs
(bad)
pushf
repnz
lahf
sbb
ins
fs
clc
test
loopne
push
mov
add
outs
xchg
dec
xlat
sub
outs
mov
icebp
hlt
stc
bound
retf
imul
mov
mov
ds
retf
mov
pushf
cs
pop
jne
cmp
mov
jp
ins
push
imul
jbe
loopne
or
mov
sub
jne
arpl
dec
or
inc
and
cmp
or
out
push
mov
sbb
xor
xchg
(bad)
fcom
and
(bad)
push
push
leave
loope
arpl
or
lods
lds
fldcw
test
clc
retf
jg
lods
shl
into
loopne
xchg
nop
push
jle
and
jno
dec
fsubr
sar
rol
test
and
mov
ja
rol
xchg
rcl
add
(bad)
mov
push
jge
into
test
in
js
and
add
daa
imul
into
fadd
rol
push
adc
stc
data16
jo
(bad)
in
cmp
movs
add
push
mov
(bad)
out
adc
dec
cmp
jg
push
jl
xchg
push
push
shl
mov
push
mov
scas
xchg
aas
fcom
lock
xchg
fnstenv
iret
or
sbb
inc
(bad)
sub
or
sub
sbb
mov
scas
dec
(bad)
jnp
cs
push
cmp
retf
xor
cmps
fsubrp
push
mov
sbb
sbb
aam
push
xor
push
hlt
in
aaa
or
fdivrp
jmp
out
xchg
and
or
fwait
popf
xor
jmp
push
call
push
and
in
test
ss
jne
out
adc
inc
or
dec
js
es
adc
into
int
aam
jecxz
repz
call
mov
add
jle
in
push
retf
ja
add
cmp
pop
xor
js
mov
rcr
mov
dec
add
mov
in
in
mov
mov
sbb
mov
loop
mov
imul
sbb
int
pop
retf
pop
mov
test
jp
imul
pop
pop
sub
sbb
neg
mov
aam
cmp
and
retf
cli
and
xor
(bad)
(bad)
cmp
(bad)
sub
push
and
cmp
mov
idiv
adc
inc
(bad)
mov
sbb
mov
sub
inc
push
xor
lods
xor
cld
xor
inc
xchg
xchg
and
jae
push
mov
sbb
mov
jne
cmp
nop
sbb
push
and
out
cdq
pop
ficomp
ret
call
mov
mov
push
mov
cli
xor
cli
lods
jge
jnp
cmp
stos
jmp
idiv
mov
mov
cmp
and
push
or
clc
dec
xor
int3
hlt
call
adc
adc
scas
addr16
adc
push
adc
dec
pop
mov
cmps
loopne
jecxz
and
xlat
cmp
adc
xor
ret
sub
dec
pusha
sbb
out
or
jbe
mov
cmps
cmp
aam
rol
hlt
int
test
cmp
les
jmp
in
mov
mov
data16
mov
movs
mov
xchg
test
stc
jns
adc
mov
call
mov
mov
fcmovnbe
push
icebp
xchg
fisubr
popa
xchg
xchg
rol
imul
jl
dec
mov
std
pop
mov
dec
jne
(bad)
adc
(bad)
ins
in
lahf
mov
ss
mov
outs
sub
mov
adc
cmp
sbb
mov
cli
xor
inc
fadd
fdiv
jl
or
xor
ja
dec
mov
or
push
xor
test
idiv
ins
sub
loope
dec
xchg
push
dec
(bad)
sbb
in
and
bound
push
inc
cmps
xchg
mov
pop
ret
iret
in
in
cmp
mov
dec
push
xchg
pop
loopne
jecxz
jmp
xchg
cmp
std
push
test
cmp
int3
sbb
push
push
pop
(bad)
pop
fdiv
mov
or
jne
lea
mov
jp
fwait
xor
fadd
movs
shl
shl
jg
mov
jmp
jp
sar
test
add
std
add
(bad)
jl
mov
test
cmp
jmp
sbb
or
sar
es
pop
xchg
iret
jbe
xlat
inc
push
or
pop
fcmove
retf
call
adc
mov
push
mov
into
int3
sti
sub
aam
jnp
inc
in
iret
cmp
lds
cmp
inc
aam
int
add
adc
push
pusha
adc
or
adc
retf
mov
gs
mov
retf
sub
xor
cwde
cmp
mov
sbb
jg
add
xchg
sub
cld
sti
jo
dec
pop
hlt
lods
adc
mov
xor
pusha
jmp
scas
mov
mov
mov
(bad)
jae
push
scas
push
fistp
sar
int3
arpl
ficom
push
and
out
dec
or
inc
inc
rcl
pop
xchg
sbb
(bad)
pop
mov
ret
sub
mov
dec
sub
fcmovb
pushf
or
inc
cmp
out
js
ins
dec
inc
retf
adc
mov
aam
(bad)
xchg
push
xchg
fstp
addr16
cs
xchg
push
into
push
sub
out
inc
ins
ins
pop
test
loope
push
xor
jnp
test
or
clc
jmp
pushf
popf
push
push
xchg
jo
das
pop
pop
call
icebp
test
sub
(bad)
pop
scas
jnp
test
loopne
pop
dec
cld
adc
fdiv
stos
std
popa
in
in
jmp
sbb
scas
int3
rol
sbb
jge
pop
arpl
fdivr
add
sbb
jo
(bad)
ins
js
adc
adc
sar
push
mov
inc
es
jb
inc
stc
cmc
les
inc
scas
div
imul
leave
mov
out
dec
imul
pop
push
or
pop
pop
sbb
adc
enter
sahf
(bad)
std
jmp
js
shl
mov
xor
retf
lock
(bad)
push
out
lock
jle
clc
mov
call
sub
inc
repz
xor
push
shl
(bad)
es
adc
mov
mov
inc
pop
inc
pop
inc
dec
dec
xchg
ret
jae
and
fidivr
jmp
or
in
xor
scas
jge
jmp
cs
shl
jns
lods
fnstenv
push
pop
fmul
push
sbb
xchg
retf
inc
repnz
ror
cli
call
and
call
nop
push
mov
retf
lds
add
pop
and
sbb
or
jmp
xor
popf
(bad)
and
div
out
addr16
movs
aas
es
out
cmp
or
fucomip
hlt
jp
cmp
int3
cmp
add
enter
pop
mov
or
sahf
neg
sub
push
lea
daa
jne
sar
or
popa
je
stc
add
enter
mov
repz
push
repnz
and
pop
ret
pop
inc
xchg
adc
xchg
(bad)
popf
aas
pop
outs
mov
sahf
mov
inc
(bad)
out
scas
mov
cld
je
(bad)
fisttp
cmc
dec
mov
sbb
call
dec
mov
fsub
aad
xor
sbb
lahf
std
dec
fs
push
retf
inc
iret
mov
inc
scas
jecxz
mov
int
jl
cmp
cmp
xchg
ja
adc
fnstsw
adc
adc
movs
push
and
scas
repnz
lods
dec
push
mov
lods
in
outs
sub
js
jo
pop
aam
jno
in
imul
xchg
mov
push
sub
and
arpl
call
outs
xor
test
out
rcr
adc
pop
push
add
pop
fadd
mov
adc
jmp
es
mov
test
rcl
ret
cmp
sub
fmul
sub
inc
pop
mov
push
mov
inc
and
mov
ss
daa
mov
fs
sbb
mov
sar
fimul
call
pop
push
pop
push
jns
sbb
mov
jp
xlat
jge
push
jns
add
mov
jno
loope
and
mov
xchg
nop
fs
out
lahf
jl
fs
inc
ret
jns
ins
sub
int
int
aaa
jle
(bad)
jmp
and
pushf
ret
(bad)
sub
out
call
fiadd
scas
mov
in
dec
call
ror
adc
test
movs
pop
push
aam
or
jb
retf
cmp
fdivp
or
test
mov
loop
int3
push
mov
hlt
sbb
call
ja
and
inc
cmp
gs
inc
sbb
in
lods
mov
jae
adc
mov
(bad)
das
xor
pop
es
movs
ins
sbb
adc
mov
jl
(bad)
sbb
ins
movs
pop
(bad)
xor
frstor
je
pop
pop
adc
pop
jb
(bad)
cmps
sar
or
test
pop
ins
cmps
pop
stc
push
xor
rcl
xchg
fstp
mov
pop
arpl
sahf
scas
ds
outs
dec
(bad)
js
lock
lea
and
inc
pop
pop
mov
cmp
mov
clc
add
arpl
mul
pop
xor
bound
sbb
retf
rcl
inc
mov
sub
fidivr
xor
and
mov
movs
dec
dec
pop
mov
retf
js
cli
cmp
adc
(bad)
movs
mov
test
mov
push
push
xor
add
lahf
fistp
(bad)
int3
add
mov
int3
rcr
jp
jmpw
loop
lds
movs
arpl
add
hlt
lahf
mov
shl
mov
dec
icebp
cli
(bad)
or
dec
(bad)
call
dec
mov
(bad)
ret
shl
je
stc
dec
sub
out
imul
jnp
mov
gs
call
test
sub
lods
push
adc
shl
nop
pop
sbb
pushf
cmp
enter
pushf
xchg
js
sar
div
add
cmp
enter
lahf
pop
test
jnp
jp
sbb
(bad)
mov
jp
cmp
pop
imul
xor
je
aas
sahf
cmps
mov
clc
cmp
inc
dec
aas
inc
es
cli
shr
(bad)
loopne
cmp
pop
sub
jne
xchg
xchg
in
sub
movs
push
xchg
out
xchg
out
fbld
(bad)
inc
adc
mov
adc
dec
pop
mov
cmc
nop
test
pop
retf
popa
jl
sar
mov
aam
or
test
(bad)
loope
rol
(bad)
cmp
(bad)
dec
repnz
les
popf
repz
push
int
push
cmp
pop
mov
sahf
mov
repz
test
adc
lea
push
adc
mov
inc
test
cs
inc
mov
sub
push
and
(bad)
sbb
outs
mov
pop
mov
imul
clc
cmp
ret
xchg
movs
fs
rcr
sti
fs
jecxz
adc
ds
shr
call
outs
bound
in
push
mov
cli
dec
(bad)
pop
sub
add
lea
sub
ds
jp
mov
movs
scas
fmul
xor
mov
adc
ins
std
loope
pop
sub
pushf
sub
int
(bad)
xchg
dec
and
fild
push
xor
adc
inc
pop
inc
imul
ss
push
dec
xchg
cdq
ret
aad
cwde
sahf
(bad)
mov
xor
fisubr
repz
add
xor
push
cwde
in
rcl
mov
call
scas
pop
xor
inc
push
inc
or
push
aam
and
sub
push
bound
int3
add
xor
imul
mov
enter
std
adc
push
push
cmc
(bad)
ss
fstp
jae
gs
shl
xor
gs
ja
loop
loop
push
mov
dec
in
mov
(bad)
adc
inc
dec
xchg
mov
and
repz
retf
retf
add
sbb
movs
out
and
xchg
out
out
lds
(bad)
stos
sti
(bad)
pop
or
xchg
mov
mov
jmp
mov
jle
les
jecxz
ror
aas
inc
dec
xlat
or
lods
add
sub
sbb
jge
or
ja
adc
jecxz
daa
gs
mov
or
int
fdiv
dec
(bad)
fnstcw
int
adc
push
cdq
jmp
add
mov
pop
sub
sbb
in
mov
xor
cmc
adc
adc
addr16
test
push
sub
or
dec
ins
sbb
pop
bound
xchg
pusha
and
(bad)
div
mov
shr
mov
clc
mov
mov
js
dec
mov
mov
mov
popa
xchg
pop
fwait
in
mov
sbb
fstp
ds
stos
aad
mov
lea
hlt
loope
xor
mov
push
and
aaa
jbe
jecxz
in
shr
sub
pop
cmp
pop
mov
mov
pop
(bad)
lock
fmul
sub
js
inc
xor
mov
mov
cmps
jmp
scas
fwait
push
shl
pop
imul
fcom
cmps
sahf
mov
ficomp
push
or
adc
lods
mov
xor
imul
push
ins
sahf
add
mov
rol
pop
mov
call
daa
dec
sub
and
push
cmc
repz
in
push
in
cmp
xchg
fs
cdq
outs
loope
xchg
adc
inc
pop
mov
mov
mov
into
xchg
dec
dec
jl
popa
sub
data16
fiadd
push
adc
cdq
pop
nop
cmp
cmp
popa
push
pop
xchg
outs
fldenv
push
mov
in
jecxz
xlat
shl
rol
pop
sub
ja
popw
cld
dec
push
lock
hlt
inc
aas
or
and
push
loope
xor
mov
and
pop
xchg
push
inc
shl
bound
jno
mov
mul
push
rcr
mov
or
sub
out
adc
enter
iret
fcmovnb
fstp
sbb
sub
xchg
movs
sbb
jb
lock
cs
movs
dec
xor
pusha
add
jge
inc
arpl
or
scas
mov
push
(bad)
sar
(bad)
mov
ins
ds
lock
add
ds
cwde
js
mov
add
push
xor
stos
push
jbe
stc
repz
or
xchg
call
and
xchg
push
adc
push
and
popf
mov
inc
jmp
icebp
inc
inc
and
pop
mov
cmc
push
mov
in
xor
push
data16
dec
xchg
xchg
ins
push
push
mov
jle
add
test
push
(bad)
arpl
out
xor
or
cli
(bad)
loopne
add
pop
push
fidiv
stos
mov
test
shl
fisttp
scas
mov
out
ds
pop
sbb
outs
xchg
inc
outs
hlt
daa
dec
in
sub
jbe
adc
xlat
jnp
add
inc
sub
call
pop
adc
mov
fbstp
imul
inc
out
or
js
movs
lock
cdq
test
rol
or
ror
and
ret
and
idiv
add
adc
fisttp
aaa
pop
sub
cmps
jno
mov
imul
inc
dec
scas
dec
je
and
inc
(bad)
xor
sub
clc
xchg
mov
or
fldenv
push
mov
sub
mov
cmp
add
sbb
and
ret
iret
enter
sbb
mov
stc
imul
fs
dec
jb
fwait
xchg
fsub
pop
mov
push
js
jl
mov
mov
jp
pop
cli
add
test
inc
repnz
mov
call
dec
into
mov
rcr
xchg
ror
jnp
cmc
ficom
xchg
push
lahf
push
jl
push
mov
in
xchg
cmp
sub
pushf
inc
fmul
mov
lock
std
push
pop
xor
pop
sub
std
cmc
add
inc
fsub
or
adc
push
das
pop
pop
aas
(bad)
aas
fnstsw
out
add
out
mov
mov
lea
imul
addr16
scas
mov
fwait
xchg
imul
out
dec
mov
test
sbb
out
jp
(bad)
mov
jae
xchg
cmp
or
out
cs
xchg
aad
repz
and
jle
(bad)
out
repnz
add
sub
lods
sbb
mov
jns
mov
aad
xchg
pop
cli
xchg
movs
fldenv
dec
push
imul
mov
adc
jg
fmul
repnz
repz
pushf
fadd
dec
mov
fisttp
shl
mov
das
mov
jbe
loope
aas
call
arpl
aaa
mov
cmp
or
in
pop
sub
jmp
cmp
arpl
shl
mov
nop
aad
addr16
scas
pop
dec
mov
push
js
sub
test
xchg
jne
in
pop
inc
out
mov
cmps
aas
mov
popa
popa
mov
lock
fisub
inc
imul
mov
xor
jecxz
or
jne
hlt
mov
xchg
scas
pop
sahf
test
repnz
cmp
or
(bad)
test
in
and
test
jo
push
adc
push
bound
call
push
(bad)
and
push
enter
mov
retf
retf
fadd
pop
addr16
xor
mov
sbb
xchg
movs
mov
pop
xor
ins
or
aas
pop
inc
ret
mov
push
pop
lock
loopne
push
cmc
push
ins
push
popf
ins
jb
or
push
fdivr
or
dec
ja
cmp
xchg
push
cwde
fwait
push
mov
push
ds
inc
cmp
add
(bad)
sbb
pop
cdq
jmp
out
mov
mov
fldcw
xchg
jno
jo
or
mov
pop
lods
ret
clc
inc
pop
ins
bound
(bad)
jmp
inc
or
cmp
or
and
cdq
lea
movs
mov
push
push
outs
xchg
pushf
push
add
xor
test
(bad)
dec
push
nop
xchg
pushf
mov
sahf
icebp
xor
in
fdiv
and
shr
in
scas
retf
xor
in
push
and
xchg
mov
mov
mov
jo
out
ins
push
aad
(bad)
mov
sub
pop
test
sub
add
sub
add
cmp
cmp
dec
ds
mov
add
inc
loop
inc
lods
in
mov
adc
je
mov
xchg
retf
aad
out
push
in
cmp
cmp
jge
lds
inc
jmp
sub
das
stc
push
add
add
inc
sub
pop
int3
dec
mov
sub
aam
sbb
(bad)
cmc
add
pop
das
sub
pop
jmp
test
inc
leave
leave
jbe
push
imul
out
dec
pop
mov
jecxz
(bad)
retf
or
push
in
adc
lea
xor
xchg
mov
adc
std
mov
push
sbb
enter
imul
retf
test
push
cmp
jno
std
mov
cmps
pop
push
out
dec
bound
daa
xchg
ja
push
arpl
or
pop
mov
mov
je
fwait
mov
popa
fdivp
or
cld
or
adc
scas
add
iret
inc
fidiv
dec
call
adc
hlt
jne
pop
rol
je
sbb
fild
lods
lods
popa
mov
push
movs
xlat
and
jno
mov
adc
sub
jno
mov
xlat
push
sub
es
into
in
imul
cmp
(bad)
sahf
fcom
mov
adc
xchg
les
jg
pop
dec
sbb
cli
out
push
dec
add
popf
adc
pop
in
movs
pushf
pop
mov
xor
imul
aaa
inc
lds
jmp
xchg
add
rol
pop
fisttp
sbb
mov
mov
gs
or
mov
add
repnz
scas
xor
rol
rcl
icebp
in
and
pushf
arpl
sub
push
aad
loop
add
dec
mov
pop
xchg
or
not
and
jmp
and
aas
xlat
stos
test
imul
and
shr
cmp
(bad)
cmps
add
mov
dec
or
fninit
mov
sbb
sub
mov
push
pop
dec
sbb
sahf
jmp
sub
cmc
cmp
pop
mov
sub
pop
fist
sti
inc
mov
out
call
(bad)
dec
stc
pop
cli
mov
out
and
cmp
ret
outs
neg
pop
scas
pop
mov
cmp
ds
pop
stc
adc
aas
mov
out
popf
push
adc
lahf
xchg
fsub
leave
sbb
loop
out
sub
sbb
out
push
retf
or
ret
inc
xor
mov
clc
pushf
mov
loope
dec
test
sti
mov
int
cs
shl
jge
js
add
inc
mov
xchg
(bad)
sub
cmp
dec
or
xchg
in
clc
adc
fnsave
je
popf
jg
cmp
xlat
mov
jl
out
sbb
stos
mov
ja
ins
mov
sub
and
pop
into
jp
ins
sar
push
(bad)
cmp
xchg
(bad)
mov
dec
xor
cdq
xor
(bad)
cmp
in
push
mov
fwait
jne
xchg
push
outs
adc
ret
cmps
and
into
paddsw
xchg
pop
int
adc
aaa
das
stos
mov
xchg
jle
push
fwait
repz
sbb
(bad)
sbb
cmc
fidiv
in
pusha
mov
add
push
and
shr
ret
pop
cmp
ins
xor
es
das
adc
ds
shl
pop
rcl
(bad)
pop
sbb
jp
jo
arpl
sub
dec
shl
ficom
cmp
cmp
dec
sbb
out
pop
call
and
ds
mov
dec
cs
jp
dec
push
movs
add
xchg
call
adc
cmp
sub
fisttp
push
and
mov
aas
mov
xacquire
add
dec
lahf
sbb
cmp
cmp
les
fsub
mov
push
and
fcom
sbb
fcmovnb
les
movs
jle
cmp
icebp
loopne
push
retf
stos
(bad)
jmp
sbb
mov
test
push
or
jp
cmc
xchg
pop
cmp
xchg
loopne
xchg
outs
idiv
lea
or
fdivp
mov
inc
jg
dec
jp
scas
mov
jb
sbb
repz
sbb
or
pop
dec
sbb
int
sub
fdivr
aas
icebp
call
inc
mov
arpl
jmp
test
jb
scas
sar
aad
imul
jnp
fcom
sbb
aaa
rcl
inc
dec
mov
dec
cli
inc
aam
rcl
push
aas
sub
test
jbe
call
mov
std
cli
jg
cdq
scas
mov
mov
cmps
push
aad
adc
repz
out
lods
or
addr16
lods
nop
mov
icebp
dec
loop
shr
shl
pop
pop
retf
lods
and
cmp
inc
xor
jmp
retf
mov
cmp
and
(bad)
sbb
iret
test
cld
mov
out
mov
test
mov
xor
mov
adc
fadd
in
jge
jbe
movs
popa
push
lock
inc
dec
mov
out
in
pop
fidiv
add
push
gs
dec
mov
inc
mov
(bad)
push
(bad)
sub
cmps
pop
pop
or
daa
mov
xchg
stc
mov
inc
(bad)
xlat
adc
bound
push
shr
pop
(bad)
or
cmc
or
sbb
les
cmp
mov
(bad)
adc
sbb
jle
mov
icebp
popf
pop
jmp
jnp
add
jmp
and
(bad)
ror
and
xor
add
push
ret
cs
xor
aaa
push
sar
push
bound
and
xchg
test
mov
cs
aam
xchg
inc
and
call
adc
xchg
jae
mov
retf
out
(bad)
imul
mov
clc
inc
mov
push
xor
mov
inc
push
jae
cmp
mov
jp
mov
add
dec
push
test
push
and
pop
ins
jle
aas
xor
not
ja
mov
adc
jge
adc
outs
push
pushf
out
rcr
lahf
sbb
mov
out
cmp
adc
sbb
into
retf
sub
test
(bad)
sub
mov
enter
(bad)
aaa
std
sub
es
pop
idiv
cmp
fisttp
xor
cli
retf
cmp
jae
(bad)
or
or
fcomp
scas
cmp
lea
mov
jns
ds
sahf
inc
sbb
mov
stc
sub
lahf
outs
mov
cs
cmp
fsubr
pop
xlat
or
push
mov
sub
in
sbb
mov
cmp
xchg
ins
xchg
sar
out
add
in
xchg
mov
mov
das
sbb
inc
loopne
push
ret
jno
(bad)
mov
pop
(bad)
xor
clc
add
pop
adc
rcr
fcmovnu
lds
clc
mov
cmp
fsubp
cli
nop
fmul
mov
sbb
int3
and
adc
mov
sti
imul
cli
mov
cwde
mov
ins
imul
lds
sub
fadd
(bad)
repz
mov
jle
cli
cwde
inc
aam
(bad)
add
push
dec
lds
pop
and
sbb
call
xchg
out
stos
adc
repnz
fisttp
test
(bad)
or
sahf
nop
bound
movs
push
mov
test
popf
pop
(bad)
sbb
pop
aam
mov
inc
out
fist
jp
jmp
test
dec
sbb
or
sti
jns
jno
fistp
add
and
mov
pop
jb
add
fidivr
dec
xor
retf
retf
pop
xchg
mov
inc
in
or
mov
xor
mov
les
mov
retf
sub
das
ror
lods
push
aam
and
fild
test
popa
test
cwde
dec
aam
xchg
shl
xlat
mov
xor
fs
inc
fmul
push
xchg
pusha
rol
jmp
imul
mov
adc
xor
das
sbb
push
fnstsw
fs
jno
sbb
loop
leave
push
cli
jecxz
into
movs
jne
mov
jecxz
ret
aad
xor
cmp
retf
cmp
clc
loopne
jmp
jmp
bound
mov
add
xchg
fistp
ffreep
fistp
in
aad
cmp
mov
jl
test
nop
hlt
addr16
lahf
mov
pop
jl
pop
repz
movs
cs
mov
inc
adc
sub
popa
xor
mov
jne
js
add
loop
arpl
pop
jp
cld
stc
cmp
repz
sub
popa
add
cdq
fwait
cwde
ins
fwait
cmp
fsubr
xchg
pop
push
jmp
mov
in
cmps
mov
ss
or
outs
inc
mov
retf
repz
data16
add
cli
js
fxch
pop
inc
sub
popf
call
mov
sti
int
addr16
cmp
test
or
jne
or
addr16
js
mov
xchg
mov
iret
dec
adc
(bad)
mov
cmp
shl
jmp
cmp
je
jno
mov
sar
in
inc
dec
ret
push
sub
aas
cld
fisub
inc
lds
xchg
sub
jnp
clc
pop
fst
gs
jae
loopne
and
jg
mov
xchg
rol
test
sbb
(bad)
mov
or
in
cmp
cmp
aaa
iret
fidivr
retf
pop
mov
inc
push
call
mov
jnp
pusha
adc
jo
inc
jle
gs
or
inc
leave
ficom
leave
jmp
push
jne
cs
aas
push
adc
push
xlat
pop
jae
shl
out
sub
mov
rcr
jge
xchg
sub
cmp
das
div
retf
or
cmps
icebp
push
add
add
imul
sub
int
add
in
jb
pop
aam
push
dec
jmp
call
cmp
test
jb
pop
pusha
cs
bound
mov
ror
add
mov
scas
scas
into
ret
ja
je
and
add
mov
push
add
call
sub
(bad)
retf
jecxz
std
adc
jmp
rol
rcr
stos
dec
jp
shl
mov
xchg
push
addr16
inc
jg
or
cmc
nop
sub
pushf
outs
ss
mov
cmc
xchg
push
or
icebp
sbb
jge
sub
add
add
pop
jge
sub
outs
and
dec
pushf
in
jae
addr16
ins
arpl
daa
fnstsw
and
cmp
arpl
push
call
inc
cmps
push
xchg
(bad)
mov
add
div
sbb
call
das
dec
fidivr
aas
fcmovnb
fisttp
dec
mov
out
outs
(bad)
and
fadd
aaa
in
mov
aaa
(bad)
xchg
in
cmp
or
inc
jl
jl
fwait
inc
int
adc
inc
clc
gs
xchg
enter
loop
jecxz
fistp
dec
push
aas
retf
xchg
mov
fmul
push
xor
fsub
das
xchg
xchg
aad
je
std
les
or
ja
cwde
push
inc
cmc
leave
mov
sub
loop
cmps
and
cmp
pushf
ret
inc
push
cmp
inc
cli
scas
mov
push
imul
sub
sub
cs
imul
stos
lock
jne
pop
dec
or
inc
les
outs
retf
arpl
int3
mov
jg
xor
sti
(bad)
je
stos
test
push
popa
stos
arpl
adc
pop
aas
add
xchg
cwde
xor
cld
jno
and
hlt
xchg
stc
and
xlat
std
push
xchg
pop
jge
mov
xchg
pop
pushf
fstp
pop
movs
and
push
test
pop
mov
aaa
aam
inc
xchg
cmc
stc
cmc
mov
sub
cld
dec
leave
push
pop
ds
fwait
cmp
cmps
out
imul
xor
iret
mov
dec
out
out
jno
push
jb
push
pop
std
inc
ins
lds
jecxz
xchg
jle
mul
mov
adc
push
repnz
push
test
ror
les
and
repnz
loope
add
frstor
data16
shl
and
rcl
add
dec
and
mov
(bad)
ret
loopne
imul
xor
loopne
sbb
push
bound
lods
fcomp
in
aam
in
movs
mov
mov
xchg
pop
xchg
icebp
push
mov
sbb
int3
pop
stos
retf
mov
enter
rol
pop
mov
cmps
dec
cld
outs
hlt
mov
ret
(bad)
cmp
push
pop
(bad)
mov
shr
and
nop
in
jbe
je
aaa
cs
es
test
xchg
jmp
adc
sub
jb
pop
stos
sub
pop
fs
xor
(bad)
mov
push
lods
mov
ins
xchg
adc
dec
outs
mov
pushf
ins
push
jo
xor
jecxz
cmp
imul
pop
pop
pop
shl
pop
pop
test
lods
repnz
mov
add
pop
mov
mov
aaa
lea
call
das
in
dec
sar
cs
sub
icebp
bound
sysenter
push
inc
sbb
inc
dec
or
mov
(bad)
and
push
mov
aam
fst
pop
xor
ds
js
and
aaa
lea
dec
pop
fs
pop
mov
cmp
pop
jp
xor
and
cli
movs
lods
vshufpd
mov
and
cmps
mov
daa
pop
bound
mov
sub
fwait
xor
mov
push
jo
aam
xchg
stc
stc
mov
ret
mov
in
add
loop
xchg
sbb
sbb
jmp
cdq
or
xor
cmps
(bad)
xor
inc
cmps
test
inc
arpl
lahf
cmp
int3
rol
rcr
loope
add
jecxz
cwde
add
sub
sub
mov
jge
jmp
xchg
mov
ror
sub
ja
sub
mov
repnz
sub
pop
push
jno
call
js
lahf
pop
or
push
sti
in
xchg
imul
push
adc
ret
gs
xor
or
cli
lods
xchg
cmp
jp
movs
push
and
sbb
addr16
sub
xchg
aaa
xlat
js
or
add
sar
stc
push
cs
push
into
jp
mov
inc
mov
dec
push
or
xchg
mov
or
sbb
int3
movs
jns
(bad)
int
sbb
mov
(bad)
std
pop
dec
in
jnp
int
or
mov
mov
pop
movs
cwde
jne
xor
push
pop
jge
pop
cs
add
lahf
add
scas
push
push
es
dec
sub
ins
or
icebp
sbb
iret
dec
add
nop
or
mov
or
dec
jl
les
shl
push
cli
outs
push
or
mov
and
je
sbb
movs
lods
push
sbb
fs
jmp
pop
pop
pop
mov
mov
popf
sub
cmp
cmc
push
sub
pusha
push
jg
faddp
inc
pop
mov
xchg
and
push
sbb
ins
repz
xor
retf
mov
fisubr
or
or
int
dec
add
mov
out
mov
cld
sbb
mov
mov
data16
inc
call
mov
int
pop
xlat
shl
add
ret
push
xor
popf
frstor
adc
fmul
xchg
loop
mov
mov
(bad)
daa
push
sub
pop
popf
xchg
loope
xor
das
xchg
div
and
aaa
mov
jmp
jmp
movs
xchg
pop
add
(bad)
push
jmp
xchg
mov
or
mov
jbe
cmc
xor
jmp
xchg
sub
daa
or
mov
push
adc
fmul
(bad)
mov
cmp
cmp
int
ins
pop
pop
sub
xchg
int
sub
into
push
std
sub
and
push
mov
jmp
mov
rol
cmp
add
xor
lea
aas
cmp
lods
mov
and
adc
and
or
das
sub
out
push
ret
inc
adc
iret
xchg
xchg
stos
mov
out
aaa
jb
push
cwde
xor
and
push
add
cmp
lods
outs
add
and
ja
adc
out
aaa
test
dec
mov
dec
loop
dec
mov
or
push
call
out
pop
std
and
data16
retf
cmp
fstp
jae
addr16
sbb
add
fnsave
push
stc
fwait
stc
test
dec
push
jmp
imul
gs
fstp
sar
sub
or
inc
jae
enter
repz
lea
lahf
pop
imul
jne
jns
out
in
inc
gs
jg
xchg
mov
(bad)
cwde
add
xor
test
inc
aam
leave
daa
xchg
and
out
test
pop
int
cmp
sub
xchg
cs
and
test
imul
mov
mov
push
(bad)
jnp
outs
cmps
scas
cli
and
fld
jg
pop
sub
not
retf
jno
jecxz
mov
add
out
outs
shl
test
mov
pop
gs
or
mov
popa
mov
mov
outs
mov
pop
mov
dec
(bad)
in
jmp
sbb
inc
cdq
pop
scas
mov
xlat
mov
imul
adc
xor
int
pusha
aas
push
adc
or
es
dec
nop
scas
fstp
cwde
inc
mov
and
hlt
out
and
in
bound
in
call
outs
shl
ret
add
adc
xor
xchg
push
adc
and
int
mov
movs
jno
mov
cli
push
aam
retf
jle
mov
test
gs
mov
jle
shl
add
inc
leave
mov
xor
nop
loope
push
movs
pop
dec
jmp
test
call
loope
mov
xchg
pop
or
xchg
sti
imul
pop
fst
sub
jns
(bad)
(bad)
nop
xchg
in
push
pop
inc
jb
pop
pop
and
mov
out
cmp
sub
bswap
test
rol
xor
pushf
adc
mov
mov
cld
jl
mov
fistp
fldcw
pop
lods
sti
call
cmp
(bad)
sub
push
fdivr
(bad)
adc
jbe
in
cdq
in
in
scas
aam
aad
ss
test
cmp
push
xchg
jae
mov
dec
mov
mov
cmp
jbe
inc
repz
cdq
movs
xor
repnz
pop
and
shl
add
shl
or
stc
lock
mov
jl
jl
xchg
sbb
jp
fucomip
sahf
lahf
mov
(bad)
mov
and
mov
jmp
aas
push
dec
hlt
xor
int3
jnp
pusha
sub
ss
mov
or
out
jo
sub
rol
cmps
jmp
loop
(bad)
pop
jmp
rcl
aad
jmp
push
ja
sub
xchg
fbstp
test
jae
test
cdq
in
and
pop
pop
pop
xchg
mov
xchg
push
inc
sub
(bad)
xchg
inc
pop
inc
call
add
adc
adc
push
or
in
test
mov
(bad)
or
xchg
imul
xchg
dec
push
icebp
xor
lods
mov
mov
adc
pushf
out
pushf
test
sahf
push
inc
in
sub
pop
into
inc
add
scas
test
jns
and
inc
cmps
lahf
bound
push
jmp
into
adc
out
dec
pcmpeqb
sahf
adc
or
addr16
lea
jnp
lods
mov
lea
fisub
scas
das
mov
jmp
or
xor
and
cmps
mov
std
sbb
jmp
lock
push
push
jae
popf
dec
jo
xor
jno
mov
sub
inc
call
lods
jmp
cwde
or
or
pusha
out
xchg
adc
ror
movs
data16
popa
pusha
sub
into
call
cmp
cmps
add
jmp
sbb
mov
pop
jle
inc
mov
adc
movs
mov
daa
jae
fcmovb
and
mov
mov
out
mov
mov
xchg
addr16
(bad)
rcr
daa
jge
or
sub
stc
(bad)
shl
adc
jg
in
test
jg
loopne
fsubr
mul
and
jl
sbb
xor
int
jmp
xchg
hlt
std
jne
xlat
hlt
mov
xor
mov
(bad)
dec
stos
js
iret
stos
outs
add
fs
ret
mov
pop
jae
ins
pop
(bad)
sub
xor
dec
lods
or
int
push
faddp
inc
fbld
inc
(bad)
add
dec
dec
or
and
and
fs
inc
xchg
dec
cmp
push
or
pop
ins
pushf
(bad)
(bad)
inc
in
dec
xchg
push
(bad)
push
dec
ins
(bad)
test
xchg
int3
out
mov
cwde
sbb
ror
and
sbb
sbb
inc
jmp
xor
jb
pusha
bound
pusha
ficom
or
out
xchg
adc
mov
ins
ins
dec
sub
shl
push
mov
hlt
sbb
fstp
test
cmp
xlat
inc
stos
fwait
clc
ficomp
mov
or
cmp
cmp
adc
push
mov
xchg
jmp
clc
jmp
scas
pop
movs
aas
sbb
mov
push
sbb
arpl
push
and
mov
cli
adc
ss
lea
mov
and
in
mov
loop
xchg
cdq
jmp
xchg
mov
aaa
mov
stc
popa
idiv
loope
imul
add
sbb
out
fisttp
adc
and
dec
mov
jbe
pop
dec
adc
leave
ret
pop
mov
pop
shl
jmp
ret
dec
sub
fcomp
mov
pop
lock
add
jb
inc
mov
in
(bad)
cmps
jmp
in
into
ret
xchg
in
mov
clc
or
repz
and
push
shrd
call
push
sub
xchg
js
ins
test
pusha
iret
test
or
loope
cmp
out
push
and
push
push
(bad)
lock
fwait
neg
cdq
sbb
retf
mov
mov
inc
xchg
push
mov
inc
pop
sbb
cld
and
inc
jno
ret
mov
fs
push
es
mov
pop
add
test
mov
retf
dec
add
jl
lds
xor
pop
jle
jae
jp
iret
mov
xchg
jle
or
mov
sbb
loop
cmps
jae
shr
adc
enter
fs
retf
movs
cwde
inc
loope
sahf
cmp
xor
xchg
outs
fild
pop
jmp
cwde
pop
push
arpl
das
sub
sahf
retf
outs
pop
dec
shr
pop
fld
fcomi
push
mov
mov
mov
mov
jmp
mov
jno
fidivr
sub
jecxz
mov
adc
test
shr
or
mov
add
in
scas
(bad)
rol
popa
out
movs
popa
lods
mov
lds
fs
daa
fwait
mov
aad
dec
and
aaa
imul
jne
sub
inc
or
mov
and
in
push
add
xchg
dec
int3
lea
popfw
push
sub
popa
adc
stos
retf
lods
jle
js
sub
xchg
dec
sub
ja
push
push
call
jo
pop
jl
adc
sahf
test
fidivr
cmps
inc
adc
int3
je
sub
mov
sar
and
movs
popa
out
sub
fucom
mov
lods
rcl
ss
xchg
out
push
fist
fiadd
retf
jne
jp
fwait
in
shr
xchg
inc
fisub
test
retf
mov
icebp
(bad)
pop
sti
ret
or
mov
les
push
fmul
sub
jbe
and
or
jb
xchg
(bad)
mov
fist
aas
int3
ret
cli
nop
arpl
mov
je
push
or
repnz
mov
jl
push
and
out
iret
jno
mov
int3
push
das
cmp
retf
pusha
and
cmp
jbe
(bad)
leave
mov
dec
shl
imul
sub
lea
jg
jle
sub
repz
leave
push
xchg
dec
add
or
aad
les
sub
(bad)
or
or
dec
jmp
int
or
nop
pop
cld
jns
bound
inc
and
mov
fnsave
aad
adc
pop
stos
mov
cli
sbb
(bad)
add
test
mov
jnp
xchg
repnz
in
push
je
push
inc
pop
bound
inc
mov
lock
inc
aam
sub
test
adc
and
clc
sub
les
or
push
ficom
add
fsubr
enter
add
sahf
adc
cmp
and
mov
cmp
vcvtsd2ss
mov
in
jae
mov
add
inc
pushf
mov
xor
mov
es
outs
xor
es
sahf
pop
clc
xor
dec
lods
fstp
pop
lea
ror
mov
xor
repz
pop
mov
dec
or
pop
shl
ret
sbb
lods
cmp
rcl
add
lahf
lea
cwde
push
fisttp
or
push
pop
push
sbb
int
pop
xchg
icebp
in
mov
mov
sub
and
push
mov
jb
adc
stos
mov
movs
stc
loop
arpl
xchg
je
(bad)
icebp
dec
jmp
cmps
std
pop
add
push
dec
jb
out
push
and
inc
jae
jae
adc
fild
scas
mov
daa
adc
cs
xlat
shl
inc
inc
(bad)
add
add
mov
jbe
mov
(bad)
hlt
ret
(bad)
mov
ds
call
pop
icebp
xchg
aam
jg
jbe
cmp
jp
les
push
mov
cld
push
movs
arpl
sub
lea
cmp
dec
mov
push
ins
in
inc
retf
(bad)
add
push
mov
add
pop
adc
mov
into
stos
mov
cmc
inc
adc
mov
cmp
mov
or
cdq
aaa
pop
imul
pop
sbb
xchg
scas
aam
ret
pop
or
icebp
sub
push
xchg
mov
mov
pop
popf
and
jl
div
ja
pop
sbb
lods
jne
cmp
lods
dec
mul
pushf
mov
inc
int3
mov
mov
test
icebp
and
add
mov
out
and
lods
je
out
(bad)
jg
test
loopne
mov
inc
jne
jb
jmp
push
mov
pop
stos
lods
movs
push
sahf
js
jmp
out
leave
movs
aaa
aas
and
mov
cld
retf
aam
out
inc
dec
fidivr
dec
pop
jle
cmp
in
cwde
pop
ret
adc
add
aam
xor
adc
ja
or
jg
cli
mov
pop
enter
imul
jecxz
in
clc
loopne
sti
xor
mov
and
leave
mov
int3
jno
and
test
fcom
dec
aas
mov
ins
mov
sub
push
fwait
xchg
push
pop
(bad)
mov
or
pop
ins
xor
cwde
ret
pop
pop
repnz
xchg
cmc
sub
es
jns
test
xchg
inc
mov
ss
xchg
lea
and
rcl
dec
dec
in
mov
(bad)
retf
je
idiv
nop
xor
loop
movs
into
xchg
xor
pop
out
sbb
test
std
sub
lds
outs
test
shl
add
mov
jmp
shl
mov
xchg
add
dec
push
in
add
jmp
stc
push
push
call
sub
dec
(bad)
mov
addr16
aas
jp
mov
xor
sub
xor
and
xor
fist
jbe
inc
xchg
jp
xchg
test
sbb
xchg
mov
or
sbb
add
out
sub
div
xchg
(bad)
(bad)
mov
ins
stc
jge
xchg
js
push
fadd
pop
not
in
xor
mov
gs
addr16
in
loope
jge
lahf
inc
aam
outs
jmp
xor
sbb
mov
pop
mov
sub
mov
cwde
pop
(bad)
retf
cli
jp
jg
ficomp
cwde
fidiv
gs
cmp
lds
pop
sub
inc
cmp
movs
in
mov
sar
int3
jb
sbb
adc
mov
push
xchg
or
out
inc
mov
aaa
repnz
adc
or
mov
jge
jle
imul
pushf
shr
(bad)
sub
int
adc
cdq
popf
sahf
or
and
cmp
icebp
mov
xlat
push
or
neg
xchg
das
std
and
and
cmp
call
mov
lods
arpl
(bad)
xor
push
mov
movs
push
arpl
cmp
mov
mov
in
stc
(bad)
(bad)
leave
jecxz
fdiv
inc
push
daa
or
stc
sub
sbb
sbb
sub
icebp
jg
jge
test
jnp
mov
(bad)
popa
aad
popf
mov
ret
fsubr
sbb
jmp
or
call
dec
and
push
inc
mov
fisub
rcr
test
xchg
ja
cmps
int
push
adc
lods
or
(bad)
jge
push
pop
sub
pusha
es
mov
and
call
icebp
cmp
(bad)
jp
loop
clc
lods
xchg
clc
pop
sub
outs
xor
aas
mov
mov
mov
ja
sbb
xchg
(bad)
xchg
inc
cmp
pop
inc
ret
int
mov
cmp
sub
movs
or
mov
sbb
(bad)
and
sbb
inc
and
retf
std
cmps
jb
repz
jmp
in
inc
jb
das
jmp
cli
test
shr
pop
mov
push
ja
int
pop
mov
push
jp
sub
inc
inc
es
push
ins
jmp
cmp
sbb
xchg
sbb
sub
(bad)
and
dec
popf
xchg
shr
jno
mov
test
in
and
xor
sub
jne
je
les
add
sahf
push
cmp
ds
retf
ror
aaa
pushf
cdq
lods
dec
xchg
push
dec
out
push
popa
jecxz
shl
fsubr
cmp
ret
and
lods
jne
in
ret
and
dec
pop
push
xor
sub
std
movs
adc
stc
mov
movs
out
pop
icebp
jl
mov
add
repz
(bad)
les
dec
inc
lods
jl
fsub
popa
test
loope
cmps
scas
push
stos
cs
neg
mov
mov
enter
in
lods
dec
(bad)
out
test
inc
add
imul
pushf
scas
and
cmc
fcos
jle
fwait
sub
mov
fldcw
xchg
pop
jmp
lahf
dec
out
inc
sbb
push
jp
sub
dec
lods
jns
rcl
cmps
shl
xchg
popf
or
add
mov
inc
xchg
scas
dec
mov
push
sbb
push
arpl
(bad)
mov
and
xchg
imul
btc
add
repz
dec
lea
add
clc
add
ja
push
fidiv
ret
sub
stos
ins
inc
dec
mov
(bad)
gs
aam
bnd
ins
dec
call
or
(bad)
out
bound
loopne
jmp
push
add
out
inc
and
mov
inc
jmp
sub
sbb
sbb
dec
mov
cmps
loope
push
adc
mov
scas
mov
mov
xchg
mov
inc
daa
mov
sub
je
jl
cmps
(bad)
sbb
movs
cmp
pop
lods
xchg
aam
inc
mov
mov
rcr
lds
sub
pop
pushf
jnp
push
mov
loop
mov
test
(bad)
push
xchg
enter
(bad)
xchg
fisub
repnz
mul
out
adc
xchg
sbb
cdq
les
add
adc
mov
pop
inc
xor
jae
out
rcr
push
aas
cmp
jo
pop
fcomp
and
add
test
pop
fcomp
sub
sar
sbb
add
out
rol
mov
in
sub
adc
xor
hlt
push
mov
lods
sbb
or
(bad)
jnp
dec
jmp
cmp
arpl
fldcw
cmp
test
xchg
xor
xor
jne
imul
jp
add
in
mov
dec
mov
xchg
mov
mov
test
sub
arpl
adc
jge
dec
sbb
dec
int3
inc
cld
movs
inc
and
call
bound
jae
jb
cmp
jg
mov
loope
scas
add
ret
cmp
std
les
push
xor
inc
mov
xchg
popa
fld
retf
sub
xchg
(bad)
mov
adc
mov
jo
gs
inc
xchg
pop
mov
mov
add
jge
(bad)
xor
adc
pop
nop
sub
imul
outs
mov
lods
sbb
mov
xchg
pop
hlt
push
xchg
call
shl
xor
nop
cmp
jns
inc
sbb
mov
add
or
out
das
adc
mov
in
imul
xor
setno
je
call
push
jp
push
lods
rcl
jb
loopne
push
into
addr16
or
out
mov
int3
(bad)
jle
pop
mov
imul
(bad)
dec
gs
push
ss
mov
dec
pop
jmp
inc
pop
mov
jns
lods
movs
out
lods
neg
add
fcmove
mov
fld
je
(bad)
fidivr
sub
mov
cld
fist
(bad)
enter
sar
mov
dec
movs
mov
ss
mov
ror
test
adc
dec
in
jmp
ret
pop
clc
dec
dec
fmul
iret
loop
test
aas
les
xchg
adc
cli
mov
test
cmps
fcomp
inc
inc
push
xchg
enter
xchg
pop
test
inc
sbb
mov
jmp
xor
cmp
lods
call
cdq
xchg
fucomi
(bad)
jmp
mov
jns
dec
sub
fbld
test
jns
js
daa
dec
int
mov
mov
lea
stos
jo
loopne
mov
pop
mov
pop
ins
sar
out
stos
int3
lods
inc
cmps
and
mov
pop
push
sub
sahf
mov
test
push
push
mov
stos
div
dec
mov
aas
in
and
sbb
push
shr
retf
stc
ss
or
into
dec
add
xor
imul
(bad)
es
pop
dec
pop
pop
test
outs
and
push
pop
mov
mov
call
fist
jmp
shl
adc
mov
nop
dec
sub
xchg
mov
div
sbb
sub
nop
xchg
and
test
stos
je
mov
lods
or
adc
mov
inc
sbb
or
xor
(bad)
mov
ret
pop
and
mov
dec
dec
lahf
les
sbb
push
outs
or
xor
xchg
aad
popa
out
push
(bad)
retf
fiadd
and
or
jb
out
fldenv
arpl
dec
daa
mov
aas
loopne
jecxz
not
push
jl
mov
mov
dec
cmp
add
vrcpss
dec
mov
ror
push
ds
clc
sbb
xlat
mov
ins
into
push
mov
popw
mov
sub
sbb
stc
xchg
add
pop
scas
pop
jge
retf
push
add
call
mov
and
push
les
hlt
mov
dec
ud2
loope
cld
xlat
rol
mov
jne
dec
imul
out
loopne
sub
fmul
mov
hlt
push
mov
xor
or
sbb
mov
push
push
cs
pop
cmp
rol
ret
mov
cmp
xor
mov
outs
push
leave
inc
jge
(bad)
pop
mov
mov
std
sub
jg
(bad)
xor
aaa
inc
gs
test
dec
bound
(bad)
mov
scas
jle
in
mov
je
shl
mov
adc
adc
jbe
mov
(bad)
into
push
hlt
aas
les
ja
mov
push
xchg
test
and
(bad)
cmps
inc
inc
jp
(bad)
out
aas
and
icebp
hlt
loope
aam
mov
sbb
jle
and
xor
sub
bound
cmp
lahf
ins
xor
retf
repnz
repz
xor
pop
jg
pop
iret
mov
cmps
xor
fdiv
xor
aas
cmp
mov
gs
dec
lahf
mov
out
xor
inc
outs
pop
cmp
es
mov
ds
push
xlat
(bad)
cmps
xlat
inc
aaa
pop
out
jl
pushf
pop
and
gs
(bad)
ficom
enter
mov
mov
jg
retf
adc
or
in
call
(bad)
mov
stos
xor
push
in
add
rcr
rcl
mov
inc
dec
leave
pop
or
mov
pop
xchg
and
jae
push
push
ds
sub
aam
in
push
gs
test
outs
sbb
call
jo
neg
into
cmp
adc
clc
retf
xchg
(bad)
rol
jmp
sahf
sbb
adc
xor
leave
push
out
xor
(bad)
stos
sbb
push
out
jnp
lods
adc
(bad)
test
je
mov
das
or
mov
idiv
pop
jmp
dec
or
loop
pop
sbb
lods
fisub
and
aad
das
fistp
mov
xchg
jecxz
stos
xchg
pop
mov
ja
push
es
push
xchg
add
outs
mov
int3
cmp
dec
rcr
xchg
bound
int3
push
rcr
mov
push
shl
xchg
rol
cdq
imul
mov
mov
pop
imul
cwde
scas
mov
fsubr
xor
and
sub
or
dec
mov
inc
outs
(bad)
loopne
mov
mov
xchg
lods
mov
aas
(bad)
dec
push
addr16
mov
loopne
cs
push
lods
cld
jmp
ret
js
or
jo
add
mov
outs
je
in
aam
dec
xchg
sub
hlt
(bad)
adc
jmp
(bad)
cmp
xchg
cmp
jg
test
xor
and
fcomp
mov
add
scas
sbb
mov
fwait
pusha
sub
xchg
xchg
xchg
retf
pop
adc
pusha
and
fs
aas
in
popf
scas
in
or
sbb
lds
pop
clc
mov
pop
push
dec
(bad)
xor
adc
div
fdivr
dec
mov
adc
rcl
push
rcr
mov
pop
scas
es
sub
gs
xor
mov
retf
dec
rol
ror
jmp
mov
iret
add
xchg
loopne
sbb
dec
jae
jmp
mov
lock
sbb
hlt
retf
inc
inc
pop
push
and
mov
pop
xchg
push
pusha
xchg
repnz
jl
adc
leave
stos
pop
adc
mov
bound
cmp
push
jmp
outs
jbe
mov
imul
jne
in
or
push
lahf
in
cli
mov
retf
add
test
sub
xor
cmps
inc
mov
mov
cmps
(bad)
enter
call
retf
hlt
xchg
xchg
mov
or
and
sahf
nop
or
add
inc
mov
xchg
pop
call
fadd
addr16
arpl
sub
clc
mov
aam
emms
loopne
dec
mov
test
jo
lods
push
xchg
cmp
cli
mov
cld
test
fidiv
loope
retf
xchg
sub
sahf
pop
jnp
(bad)
movs
ret
jecxz
inc
cmp
sbb
sbb
mov
sti
sub
cmp
dec
ss
cmp
xor
in
cmps
sar
pop
shl
and
jbe
push
jge
or
mov
mov
push
push
sub
xor
mov
push
or
jns
enter
inc
cdq
(bad)
or
mov
iret
arpl
test
fcmovne
les
push
ror
rcr
addr16
xor
jmp
ja
idiv
aaa
jg
lahf
shr
clc
mov
inc
add
stos
ror
mov
push
push
nop
test
adc
push
sbb
and
(bad)
fcomi
push
push
jo
mov
das
or
(bad)
xchg
cmp
sub
cmp
adc
push
mov
jne
js
cmps
retf
aas
sub
mov
jno
fdivr
shl
sbb
gs
enter
call
pcmpgtd
mov
xor
es
aam
in
test
div
inc
dec
mov
in
das
sub
jecxz
jno
sbb
pop
mov
inc
shr
pop
and
jnp
rcr
xchg
or
(bad)
imul
push
push
jnp
out
xor
das
rol
add
mov
pop
xor
inc
jl
jnp
mov
push
leave
xchg
and
pop
stos
shl
leave
retf
dec
movs
push
adc
add
fld
inc
sub
add
ss
mov
pop
pusha
pop
lods
xchg
cli
cmc
dec
fs
hlt
out
or
dec
or
cmp
fs
movs
repnz
stos
jg
xor
and
mov
xchg
test
sbb
enter
cli
dec
mov
in
xchg
dec
mov
ds
lods
add
and
jno
repz
pop
pusha
xor
xor
retf
aad
les
mov
lods
test
jg
xor
mov
mov
mov
add
nop
nop
inc
push
xchg
imul
push
repnz
mov
xchg
mov
and
mov
pushf
gs
(bad)
ja
fwait
adc
lds
and
lods
jmp
xchg
adc
or
jl
popf
pop
fisub
inc
xchg
lds
test
mov
pop
pop
adc
fidivr
icebp
in
ret
cmps
jns
inc
jo
js
enter
cmp
rcr
xor
(bad)
push
cmp
or
imul
add
push
cmp
jmp
sbb
repz
mov
(bad)
adc
push
mov
cmp
cmp
cld
arpl
inc
stos
retf
inc
ds
cwde
pusha
ins
int3
mov
push
and
fsub
mov
jg
mov
add
push
addr16
mov
out
mov
mov
and
test
xor
ret
cmp
mov
bound
gs
inc
fistp
jg
add
mov
shl
sub
mov
imul
sbb
dec
rol
stos
fcos
xchg
je
mov
test
test
adc
fsubrp
lods
fadd
js
sbb
mov
retf
pushf
add
mov
mov
loop
arpl
mov
lea
test
sub
retf
or
(bad)
and
push
adc
call
fmul
mov
push
arpl
mov
jecxz
sahf
jno
inc
scas
scas
and
push
xchg
sub
gs
outs
inc
mov
je
stos
cmps
sbb
add
mov
sub
mov
and
xchg
(bad)
mov
outs
stos
ins
sub
xchg
cmp
fistp
fstp
pop
(bad)
nop
imul
push
xchg
jb
stc
mov
sub
xchg
push
add
pushf
inc
stos
(bad)
clc
fcom
pop
add
repnz
cmc
fst
pop
xlat
xchg
mov
push
jmp
ret
push
inc
scas
inc
stos
(bad)
xchg
dec
mov
xor
sub
push
std
sbb
dec
pop
or
jg
push
adc
and
pop
add
ret
mov
imul
mov
mov
sbb
or
add
pop
add
mov
retf
cld
mov
fisub
aam
inc
les
cmc
ins
adc
les
popa
jecxz
mov
push
adc
stos
ins
xchg
out
mov
or
xchg
bound
popf
ret
xchg
adc
aaa
sbb
mov
push
outs
pop
push
int
cmp
das
js
cwde
test
and
inc
push
outs
pop
xchg
loop
(bad)
ds
outs
aam
mov
mov
div
shl
imul
aad
std
pop
mov
mov
xchg
nop
repnz
cli
test
in
sbb
stc
mov
test
ds
arpl
push
pop
pop
jae
lods
pusha
nop
test
imul
push
xor
push
test
cmp
and
test
test
pop
mov
cmp
or
jb
add
sti
dec
jecxz
ror
xlat
inc
inc
pop
push
mov
mov
cmp
add
pop
jbe
cdq
dec
addr16
xchg
repz
inc
pop
ins
cmp
jle
aad
mov
dec
cs
add
and
push
add
jnp
and
xchg
push
int3
ins
dec
fdiv
push
rol
jo
jo
loop
aas
movs
rcr
stc
mov
or
les
add
inc
shl
jp
push
and
and
in
in
mov
mov
(bad)
cwde
int
call
or
lods
inc
pop
sahf
pop
and
retf
xor
cmp
mov
(bad)
cmc
stos
push
cmp
cmp
call
shl
iret
stos
lock
enter
xor
push
je
out
dec
jb
xchg
ds
jno
mov
adc
mov
add
cmp
dec
push
jae
shr
movs
jno
call
inc
push
cmp
ds
mov
xchg
sub
or
mov
int
sub
outs
in
adc
mov
push
fstp
loope
sahf
mov
mov
xlat
ds
inc
mov
jmp
inc
add
jbe
jge
jnp
jmp
pop
mov
jne
sub
cmp
loop
inc
lock
inc
sub
jmp
lods
pusha
adc
cwde
mov
xor
cs
sahf
ret
lods
mov
mov
cmp
outs
jp
out
push
push
xchg
mov
push
xchg
in
push
xor
loope
jbe
(bad)
ficomp
js
movs
repz
cdq
or
out
pop
jle
scas
out
and
pop
mov
lods
jo
in
inc
push
ss
xor
popa
popf
xor
and
and
cmp
jnp
and
rcr
int3
sub
(bad)
leave
or
pop
les
cli
jnp
add
lea
rcl
gs
add
outs
jle
cdq
pop
jmp
jecxz
mov
fld
mov
test
pusha
cmp
loopne
ins
sub
std
or
js
fcom
dec
adc
ds
mov
test
lods
push
je
in
js
add
test
div
gs
test
pop
icebp
jge
pop
sub
cmp
stc
mul
xor
mov
inc
popa
push
adc
sahf
rcr
std
enter
mov
(bad)
jmp
pushw
test
(bad)
jecxz
mov
mov
bound
fistp
xor
or
call
ret
sar
dec
inc
cmp
mov
and
and
cmps
inc
(bad)
mov
jbe
add
fadd
inc
into
in
pushf
push
pop
cli
sti
jg
xor
fwait
push
mov
iret
dec
in
cmp
or
jmp
loope
sbb
test
ins
push
mov
movs
inc
in
loop
xchg
(bad)
int3
out
and
xchg
mov
cs
leave
jl
add
dec
jl
mov
es
ss
inc
sub
fwait
xchg
rol
rcl
imul
jmp
sbb
mov
adc
push
jae
fwait
push
add
lock
pop
scas
test
pushf
clc
and
ja
leave
pushf
add
std
in
add
push
xor
xor
addr16
add
add
jl
imul
dec
clc
dec
aad
dec
sbb
sbb
pop
pop
in
repnz
fld
sbb
inc
retf
pop
sbb
lock
mov
adc
pop
cmp
add
(bad)
cmp
dec
mov
aaa
in
inc
loop
cdq
push
jne
(bad)
jl
aas
dec
dec
aad
push
ret
mov
ret
dec
ds
mov
mov
mov
mov
push
repnz
test
sub
sub
mov
popa
mov
(bad)
sub
push
jl
sub
or
jbe
pusha
push
aam
arpl
fldenv
mov
jecxz
icebp
inc
loope
pop
lock
jns
push
inc
mov
sbb
push
out
push
and
dec
enter
xchg
prefetch
or
sbb
mov
fs
bound
into
punpcklbw
add
cli
adc
movs
mov
adc
xchg
sti
aas
jmp
cmc
pop
aad
es
add
inc
cmp
jge
mov
dec
ds
rol
adc
jae
and
shl
xchg
xchg
push
lods
xlat
jp
inc
and
pop
out
cs
cli
scas
test
movs
ror
add
mov
and
clc
scas
push
push
inc
cmp
pop
push
aaa
fadd
and
or
mov
cmp
arpl
xchg
mov
pop
rol
mov
mov
adc
push
inc
fisubr
jg
dec
push
pop
and
push
pop
cmp
cwde
repz
movs
mov
fsubrp
cli
cmp
dec
les
inc
jmp
shl
mov
fld
mov
enter
ret
cdq
xor
pop
outs
je
mov
push
rcr
shl
xchg
add
test
pop
or
dec
cwde
and
fcomp
mov
std
sbb
shl
cwde
jno
stos
push
sbb
and
cli
mov
out
sub
cwde
inc
out
or
adc
test
std
test
or
adc
aaa
sub
dec
add
shl
adc
lods
push
test
cwde
lds
nop
lds
pop
stc
dec
push
loope
mov
sub
out
das
scas
iret
mov
test
jg
fidivr
and
dec
mov
mov
inc
es
fs
or
loopne
jbe
sbb
sub
out
adc
das
jnp
and
and
aad
xchg
sub
push
xchg
cs
ins
add
repnz
lar
scas
inc
cwde
cmp
jb
add
es
dec
mov
aaa
aam
and
repz
imul
push
call
and
inc
mov
push
je
mov
(bad)
ins
fbld
call
std
mov
xlat
loop
stc
leave
mov
(bad)
mov
mov
mov
cmp
retf
lds
pusha
pop
jbe
in
jp
push
jo
jo
cli
repz
mov
mov
outs
les
push
mov
mov
loop
nop
or
std
ret
jp
shl
pop
arpl
jge
mov
test
cmps
jns
movs
mov
cwde
dec
das
mov
or
inc
sbb
xchg
aam
sbb
mov
nop
add
mov
xlat
fist
or
xor
sar
je
call
leave
pusha
sar
push
xchg
stos
xor
rcr
mov
pop
arpl
mov
adc
push
jg
and
xor
inc
fnstsw
cmp
add
dec
rep
das
pop
into
pop
repz
cmp
mov
dec
jmp
xchg
cmp
jge
push
out
out
and
push
sahf
push
pop
and
jo
js
adc
out
data16
ds
jo
xchg
or
jle
cwde
fstp
jae
push
jmp
adc
in
int
shl
call
lahf
sbb
stos
pop
inc
cdq
imul
add
aas
xchg
add
scas
in
cmps
sbb
outs
sbb
and
xchg
pop
ficomp
jle
xlat
test
mov
pushf
pop
(bad)
aad
jns
fs
inc
or
push
mov
sbb
mov
jmp
add
xor
xchg
mov
dec
inc
dec
cmp
sub
push
aam
or
test
mov
mov
or
in
popf
mov
pop
mov
out
mov
mov
and
push
lahf
or
cli
into
cdq
push
cmp
pop
mov
repnz
out
aaa
jl
sub
jmp
fild
pop
cli
outs
sahf
xchg
mov
mov
xchg
lods
rol
inc
xchg
sbb
cwde
into
sub
xchg
adc
sbb
and
aaa
and
ss
bswap
in
sub
loop
call
mov
xchg
mov
in
pop
cli
imul
xchg
sar
cmp
dec
(bad)
int
xchg
sub
pop
sbb
add
cmp
test
push
add
xchg
jne
stos
pop
call
mov
push
xchg
dec
mov
ins
mov
test
shl
mov
mul
xlat
cmp
lods
movs
je
out
lds
movs
inc
jg
mov
fild
retf
test
pop
fwait
mov
ret
and
inc
sahf
movs
jb
adc
clc
and
xor
ret
shl
inc
sar
mov
inc
add
pop
mov
js
adc
mov
jne
(bad)
mov
mov
ds
sti
xchg
fbstp
das
mov
sbb
retf
ja
inc
cli
xchg
pop
mov
push
and
or
ret
ret
in
fmulp
and
jg
imul
xchg
xor
shl
fbld
xchg
jbe
cmp
add
ja
or
bound
in
dec
xor
cmps
int
frstor
addr16
add
xor
mov
jecxz
jno
test
jne
std
(bad)
enter
or
inc
es
sbb
sbb
ss
inc
jns
stc
xor
out
inc
loopne
leave
mov
mov
pop
mov
cmps
or
mov
push
mov
js
rcr
or
cmp
aam
inc
mov
int3
lods
(bad)
in
test
popa
bound
jmp
(bad)
jg
cmc
scas
xchg
cmp
mov
in
mov
cmp
mov
jo
in
imul
dec
lods
(bad)
xorps
jg
jns
movs
dec
sbb
xchg
int
xchg
mov
mov
aaa
jg
imul
pop
dec
dec
std
into
mov
mov
xor
icebp
dec
in
mov
or
jp
mov
mov
rcr
lods
add
lahf
test
pop
mov
pop
jge
jp
mov
jmp
xor
int
adc
and
in
or
sbb
add
adc
lods
or
cmp
cli
push
aas
pop
(bad)
in
add
imul
pop
les
scas
fs
and
sbb
cli
mov
cwde
cmp
arpl
cld
mov
push
ds
cwde
pop
push
and
leave
mov
std
mov
mov
jno
push
cwde
call
lahf
cmp
call
xchg
fsubr
(bad)
adc
cmp
cld
mov
lods
push
and
lea
sbb
xor
push
into
loopne
or
iret
std
cmp
inc
sbb
pop
cld
xchg
iret
dec
push
arpl
sub
mov
xlat
fcmovnb
js
add
pop
cmps
stos
mov
fdiv
ret
cli
dec
test
outs
add
aad
loope
dec
mov
sub
mov
lods
sbb
cmp
add
dec
or
sbb
leave
stos
ret
xchg
cmp
in
cwde
pop
popf
inc
add
xchg
or
movs
mov
clc
xlat
mov
stos
mov
int3
mov
cli
mov
and
or
or
pushf
leave
xchg
xor
cli
jge
jne
fild
fld
mov
mov
imul
sbb
push
jae
(bad)
and
dec
pop
test
jge
rcl
loopne
test
rcl
test
cmp
xor
jmp
xlat
or
out
imul
call
aad
or
add
or
cmp
sti
cmp
push
iret
inc
popf
stc
int3
int
adc
adc
sbb
add
xchg
test
clc
push
repz
and
test
inc
(bad)
rcl
add
dec
ret
aad
sbb
pop
mov
xchg
push
inc
hlt
mov
enter
leave
cmps
cmp
cmp
test
(bad)
hlt
dec
outs
pop
or
mov
out
pop
add
xchg
pandn
add
psubw
and
mov
jne
sbb
les
out
ins
sbb
leave
scas
ss
lahf
jge
int
or
pop
or
sub
hlt
inc
mov
dec
jb
or
jbe
popa
push
add
sbb
out
data16
inc
push
push
repnz
cld
fdiv
fisubr
loop
dec
leave
fcom
cmp
jle
xchg
dec
xchg
sbb
mov
(bad)
inc
in
dec
fwait
fs
test
mov
jmp
adc
xor
mov
ss
clc
xor
mov
push
sbb
push
xchg
push
in
and
cmps
sbb
jp
pusha
pop
jne
iret
out
mov
cmps
adc
jmp
and
not
lea
(bad)
dec
lahf
jle
jb
aam
dec
xchg
jmp
mov
sub
cli
jb
cmp
cmc
xchg
add
push
stc
push
inc
ror
xor
ins
push
lock
les
dec
add
rcr
mov
fnstcw
scas
xchg
sub
test
inc
or
xchg
or
imul
pop
mov
jge
addr16
cmp
and
nop
inc
loope
cmp
and
and
pop
popf
inc
sti
mov
(bad)
or
mov
and
lock
and
sub
mov
fiadd
(bad)
mov
inc
dec
push
fisubr
aad
lds
cld
cmps
dec
leave
cwde
jl
jo
mov
es
xor
or
out
bound
and
inc
xchg
jg
and
sub
sbb
arpl
or
aas
into
fild
or
add
sbb
in
adc
inc
push
mov
int3
sti
add
loopne
shl
rol
jmp
mov
fnstsw
sbb
pop
cmc
mov
jnp
enter
(bad)
adc
mov
mov
sbb
(bad)
adc
pop
and
shl
and
xchg
in
aad
test
in
in
mov
jo
xor
jmp
mov
xor
fsub
(bad)
(bad)
sbb
mov
add
enter
cld
je
leave
push
js
(bad)
pop
pop
int3
mov
jmp
es
cli
loop
push
test
pop
idiv
xor
test
loop
add
sbb
in
cmps
lods
inc
scas
outs
fbstp
cmp
lods
dec
pop
ficom
cmp
fsub
inc
cli
dec
jmp
pop
retf
in
ja
fs
dec
sbb
xchg
push
popf
ret
mov
cmps
iret
sub
adc
movs
and
movs
(bad)
ficomp
movntps
movs
repnz
mov
xor
cmp
xor
cmc
je
sti
jne
pushf
loope
jle
mov
jno
dec
retf
call
or
popa
push
jle
stos
sbb
jecxz
add
in
mov
or
into
jp
shl
inc
push
inc
fcmovnbe
ins
lea
ins
(bad)
inc
xor
cmp
or
mov
(bad)
and
push
cmps
dec
cmp
lods
lahf
push
ins
add
imul
cmp
dec
sti
jne
es
and
call
adc
and
sbb
push
dec
ret
jae
lods
push
pop
gs
arpl
test
shl
popf
daa
fs
call
sbb
and
xlat
stos
push
add
add
sbb
sub
push
movs
sahf
lea
inc
push
mov
push
movs
jmp
ficom
fisub
sub
in
and
add
add
jnp
inc
popa
mov
mov
dec
sub
mov
jmp
mov
push
ins
jg
loopne
fwait
push
mov
(bad)
out
and
mov
jne
es
ins
test
inc
mov
push
inc
cld
call
and
lahf
je
jmp
sti
iret
in
scas
push
lock
or
outs
add
pop
mov
dec
sub
push
xchg
xlat
ins
xchg
dec
(bad)
jns
cmps
outs
fmul
test
push
add
fucomp
movs
imul
cmp
int
in
adc
push
fwait
mov
pop
loopne
call
adc
xchg
adc
repz
ds
push
stos
lahf
pop
and
rol
shl
les
xchg
shl
xchg
jmp
movs
mov
dec
mov
mov
push
mov
adc
push
jne
sub
js
cdq
mov
push
push
sbb
out
inc
(bad)
outs
leave
cdq
jecxz
rep
xchg
out
xor
xchg
rol
xor
shr
xchg
mov
adc
add
ins
in
xor
mov
daa
popa
stc
push
adc
mov
rcr
inc
pop
mov
fwait
inc
sbb
mov
retf
sbb
stos
into
or
push
nop
xchg
cwde
imul
scas
rcr
retf
pop
jne
inc
push
bound
pop
pop
(bad)
sbb
or
sub
cmps
mov
adc
psllq
mov
call
into
test
fimul
pop
enter
mov
cld
popf
sbb
cmps
mov
(bad)
movs
mov
push
add
aam
pusha
call
pop
leave
push
mov
jmp
js
sub
jno
(bad)
adc
sar
sbb
jns
iret
movs
test
push
ins
test
push
push
(bad)
and
popa
lods
mov
mov
pop
mov
or
add
adc
dec
dec
jg
pop
sar
add
xchg
mov
xor
mov
xor
mov
test
hlt
xlat
cmp
test
sub
pusha
xchg
dec
stc
pop
data16
mov
pop
sti
jb
icebp
push
adc
pop
into
in
xchg
(bad)
aam
add
cmp
lock
dec
sbb
mov
imul
fst
sti
test
pop
mov
stos
stos
sub
xor
sub
fcomi
test
out
inc
fistp
inc
push
in
dec
test
xor
(bad)
dec
push
cmp
sbb
mov
xchg
adc
sub
loope
stc
call
cmp
and
cmp
mov
mov
cwde
adc
loop
into
aam
cli
stos
push
movs
outs
adc
(bad)
or
or
xchg
push
or
or
in
ins
lea
imul
add
pop
leave
es
fwait
ins
add
rcr
in
jns
add
call
or
fimul
inc
cli
jp
std
dec
cmc
nop
push
xchg
inc
mov
mov
mov
call
xor
rcl
hlt
jg
sahf
std
or
xor
movs
jne
dec
fmulp
push
aad
sbb
xor
dec
pop
ins
mov
pop
cmp
cmc
in
push
mov
dec
pushf
es
cld
push
mov
test
and
out
nop
jle
mov
retf
ins
or
xor
jne
and
aad
xchg
psllw
mov
sbb
cmps
sub
fisub
ret
sub
cmc
cmps
jecxz
inc
stos
in
xchg
mov
in
loope
inc
lea
push
imul
inc
loope
les
or
pop
mov
ret
(bad)
mov
cld
shl
add
retf
push
jb
sub
and
mov
rcl
jns
ficom
je
lock
movs
cmp
xor
inc
js
pushf
pop
cmps
ret
loop
test
adc
fs
mov
xchg
jl
ss
retf
mov
pop
movs
fisub
not
fisttp
sub
sub
jbe
std
push
sti
loope
cld
xchg
sahf
and
ror
leave
push
bound
int3
xchg
stos
lahf
ret
mov
mov
push
cs
mov
mov
ret
dec
jae
repnz
cmps
sti
mov
sti
xlat
ins
mov
ss
addr16
pop
rol
push
adc
data16
fwait
ror
stc
jo
in
outs
pop
bound
jns
int3
ret
inc
clc
les
sbb
or
pop
mov
jne
xchg
call
mov
push
loop
xor
into
inc
sub
jl
mov
or
inc
push
out
xchg
test
test
dec
fs
xchg
cmp
movs
fbld
sti
lock
fwait
dec
jbe
and
sub
call
adc
fidivr
cs
jle
jno
mov
(bad)
dec
adc
ins
ror
jp
pop
in
(bad)
not
mov
sub
ret
rcl
ins
out
gs
lahf
sub
add
or
or
add
ins
imul
mov
sub
jae
or
popa
mov
pop
fldcw
xor
dec
lods
dec
pop
cmp
fld
out
inc
inc
or
mov
pop
cmp
or
repz
aad
neg
jge
test
ja
jge
std
test
xchg
dec
mov
inc
and
ror
aad
imul
cmp
xchg
outs
aaa
xor
mov
jo
push
pop
popf
push
nop
jns
les
push
mov
jmp
cmps
enter
mov
ins
(bad)
xlat
cmovge
adc
in
pop
sbb
adc
ja
add
loopne
retf
popf
push
ficom
sub
retf
sbb
(bad)
push
in
cmc
jmp
inc
pop
sbb
or
enter
pushf
mov
fld
mov
inc
push
(bad)
mov
jmp
add
dec
mov
inc
popf
neg
add
fs
sbb
lahf
jnp
inc
cmp
push
pop
inc
test
in
daa
xchg
add
push
test
push
dec
add
stc
and
dec
jbe
mov
sub
inc
femms
into
sbb
sbb
retf
popf
lock
out
pop
(bad)
inc
cs
xlat
(bad)
cmp
loopne
aas
jno
mov
cmp
int3
movs
adc
fdivrp
sti
xchg
cld
pop
es
jle
aad
push
retf
lods
mov
and
push
call
jle
call
movs
sti
js
mov
jecxz
rcr
jg
ds
adc
inc
dec
shr
aas
jo
mov
movs
call
mov
xchg
jns
xlat
call
je
retf
ja
mov
xchg
mov
mov
rcr
mov
fwait
xchg
or
out
les
jbe
mov
outs
sbb
inc
(bad)
test
ret
(bad)
sbb
imul
push
in
sti
mov
icebp
call
and
in
hlt
and
inc
jp
xlat
mov
das
xor
scas
mov
std
inc
fldenv
mov
ins
or
jle
xchg
push
mov
not
aam
push
or
jle
popa
outs
jne
push
adc
inc
or
stos
jnp
popf
ss
mov
pushf
mov
dec
ficom
das
lods
jno
daa
pop
pop
and
jl
jno
out
add
cmp
stos
inc
mov
ror
not
jecxz
cmp
lods
sub
push
mov
rcl
sub
ret
mul
imul
dec
aad
stos
loopne
dec
push
fld
fidivr
push
xchg
pop
mov
push
jnp
and
stc
scas
ret
add
pop
cmps
ins
popf
cld
inc
dec
xor
mov
mov
jmp
jmp
sbb
jmp
dec
arpl
inc
test
pushf
test
and
fs
push
add
(bad)
jmp
ins
repnz
int3
out
cli
or
test
outs
std
fdiv
sub
sbb
xchg
and
imul
sbb
int3
mov
sub
mov
xchg
pop
dec
movs
pop
cmps
xchg
jmp
cmp
fdiv
pushf
das
rcl
fs
push
xor
inc
lock
jne
pop
outs
pop
not
outs
fs
mov
js
jnp
dec
inc
inc
dec
adc
and
mov
jbe
sub
scas
stos
jmp
xchg
mov
mov
cmp
rcl
fidivr
popa
mov
xor
jo
cdq
loopne
lods
adc
outs
pushf
mov
jecxz
push
je
mov
jb
inc
xor
aaa
ret
dec
or
loopne
int3
shr
jge
mov
rol
xchg
xor
pop
call
stos
xchg
in
pop
mov
outs
js
pop
ficom
data16
shr
fs
xor
pop
push
xchg
xor
cmp
ins
sbb
sbb
dec
inc
cdq
inc
inc
cli
mov
outs
sbb
or
add
(bad)
sbb
mov
lock
or
mov
sbb
sbb
sbb
fdiv
leave
dec
mov
mov
inc
js
(bad)
sti
test
add
popa
loopne
dec
in
dec
push
inc
mov
and
retf
sub
ja
and
cmp
pop
and
scas
sbb
adc
inc
jge
loope
bound
pop
jo
sbb
sbb
call
cmp
rcr
cmp
mov
mov
pusha
out
stos
jnp
sbb
icebp
(bad)
lock
cmp
mov
scas
cdq
add
add
cdq
pmaddwd
cmc
scas
retf
xor
loopne
imul
push
sbb
adc
icebp
adc
aas
add
pop
pop
and
xor
push
pop
mov
ret
fwait
xchg
and
in
cmp
jmp
das
aaa
sbb
(bad)
dec
inc
out
outs
or
into
inc
xor
shl
cs
(bad)
xlat
adc
cmps
test
test
mov
mov
sti
xchg
(bad)
aaa
jmp
cmp
fdiv
dec
adc
idiv
mov
popa
icebp
aaa
movs
xchg
inc
and
push
fwait
les
fs
jle
lods
and
and
sub
dec
js
gs
pop
adc
xor
inc
cmp
out
xchg
and
es
add
adc
daa
ror
in
jp
xor
int
dec
leave
jle
or
mov
mov
cmps
cmp
inc
mov
(bad)
(bad)
je
dec
push
sub
push
jnp
mov
inc
xchg
rcr
jp
out
push
jb
into
xchg
fsubr
aad
sti
mov
scas
call
into
cld
ds
push
inc
inc
data16
lea
xchg
es
sub
dec
inc
movs
push
(bad)
dec
int3
and
mov
hlt
sub
loopne
rcr
mov
xchg
and
sub
inc
call
pushf
jmp
jns
imul
sbb
jecxz
jmp
xchg
push
adc
out
xlat
xlat
sub
ret
jecxz
popa
add
adc
add
ins
nop
fisubr
outs
js
enter
adc
fstp
pop
mov
ret
sahf
and
adc
jl
pop
mov
(bad)
push
dec
enter
and
xchg
int3
(bad)
int
pop
rcr
sub
push
test
jae
adc
sub
mov
mov
and
cwde
(bad)
xor
cmp
ret
and
pop
dec
daa
vshufps
pop
jae
popw
cmp
or
iret
pop
sub
xchg
(bad)
push
fcomp
jle
push
jne
aad
inc
stc
cmp
outs
mov
cmp
daa
mov
xchg
sbb
ss
repz
mov
jle
js
push
pop
or
ret
aad
sub
test
mov
shl
add
mov
lods
in
push
hlt
jmp
das
adc
pop
fld
aaa
xor
cmc
or
mov
pop
push
leave
js
and
aam
or
mov
jl
movs
stos
push
adc
les
shl
je
test
daa
or
loop
call
fmul
sbb
pop
into
or
test
xchg
les
cli
(bad)
icebp
or
jle
inc
mov
stc
jmp
mov
inc
jmp
repnz
and
cmp
ins
mov
add
xchg
add
sub
in
push
popf
push
(bad)
std
add
outs
(bad)
fst
jge
push
frstor
out
inc
mov
(bad)
call
mov
cmp
out
dec
push
enter
dec
mov
test
jecxz
xor
les
mov
pop
adc
mov
ret
xchg
jecxz
inc
cmps
mov
sub
mov
xchg
mov
outs
inc
shl
test
cli
(bad)
add
xor
jecxz
ins
mov
adc
(bad)
in
cmp
pop
int
loop
icebp
jp
leave
cmp
sahf
pop
sti
mov
cmp
pusha
add
popa
mov
ret
repz
(bad)
imul
out
xlat
test
add
pop
push
into
mov
aas
jns
push
push
stos
fcmovne
or
sbb
xchg
push
hlt
xchg
jge
retf
test
push
and
adc
dec
fs
jne
iret
mov
xor
xchg
lds
or
push
mov
and
jmp
movs
sub
mov
mov
lods
xor
xchg
cmp
(bad)
push
jmp
pop
outs
enter
jmp
(bad)
lahf
cdq
out
call
ficomp
ins
int
xchg
jo
xor
push
push
(bad)
ror
sbb
lock
movs
ret
xor
push
xchg
adc
pop
stos
mov
sub
cmps
xor
sub
and
dec
inc
out
std
inc
cwde
call
inc
or
sbb
out
xchg
jmp
rep
add
xor
inc
jno
or
cwde
(bad)
out
fistp
daa
xchg
mov
aas
mov
clc
xchg
xor
add
mov
jne
pop
mov
fistp
scas
xor
mov
adc
fild
pop
js
sub
std
fdivr
jns
retf
jmp
test
inc
mov
pop
sbb
neg
aam
sbb
(bad)
repz
push
add
nop
push
xchg
aam
cmovne
push
inc
mov
add
movs
por
mov
and
js
ins
cmp
add
movs
adc
pop
ds
mov
nop
stos
fdiv
lahf
push
ret
rol
cld
mov
lahf
add
jmp
mov
mov
sbb
or
in
sbb
test
or
icebp
pop
lock
scas
adc
imul
test
mov
das
xchg
sbb
mov
fisub
aas
sar
jno
mov
fucom
push
int
mov
das
aam
data16
stc
test
dec
jge
pop
sbb
pop
sub
xor
inc
sahf
movs
and
push
mov
les
jno
xor
daa
xchg
mov
sub
fcomp
cmp
ret
jo
xor
cmp
clc
fisttp
push
adc
cld
cmp
aaa
call
ins
out
lea
int3
xchg
in
repz
add
push
movs
(bad)
xlat
(bad)
in
js
lods
mov
in
daa
push
push
sub
(bad)
cmp
into
cmps
sbb
cmp
and
pop
mov
xchg
xchg
pushf
sub
ret
loopne
call
popf
or
mov
mov
or
mov
(bad)
mov
ss
lods
cmc
sbb
mov
dec
out
gs
xchg
jmp
sbb
jmp
mov
pop
data16
dec
lods
movs
lods
cmp
mov
fcomip
test
or
jp
arpl
nop
dec
mov
push
mov
retf
jmp
jo
lods
cli
retf
movs
lahf
jo
jno
xor
or
xchg
xchg
in
mov
jmp
fiadd
jecxz
push
mov
xchg
and
mov
pop
(bad)
or
in
adc
dec
scas
jno
loope
xchg
out
jo
lods
push
or
xchg
mov
mov
pop
cmp
int3
repnz
mov
add
xchg
dec
int3
mov
xchg
jbe
xchg
js
jno
cmps
out
int
aad
ins
add
out
adc
lds
std
loope
cs
push
(bad)
push
adc
sahf
push
push
mov
pop
add
ds
push
jp
iret
mov
lock
pop
fs
jae
jmp
inc
mov
pop
cmp
(bad)
fist
push
mov
add
cmp
xchg
push
pop
fadd
inc
icebp
cwde
lods
test
sub
loope
xor
mov
out
adc
call
push
push
jns
sub
ret
pop
inc
jno
adc
pop
pop
inc
fld
lock
push
mov
push
push
std
xchg
sbb
jns
icebp
or
push
(bad)
(bad)
jbe
mov
xlat
adc
inc
or
xchg
das
xchg
in
fdiv
fwait
jp
xchg
das
or
pop
add
pop
jb
xchg
mov
sbb
push
arpl
loop
lea
dec
jo
adc
dec
aas
ret
mov
outs
xchg
mov
addr16
push
push
stos
cmp
adc
out
(bad)
not
sbb
inc
imul
add
fstp
sub
and
dec
lock
pop
fwait
mov
daa
sub
mov
mov
push
stc
mov
call
xchg
(bad)
lods
and
push
dec
and
cli
pop
dec
add
push
or
pop
or
inc
icebp
test
jg
cmps
clc
sub
jl
cld
fld
sbb
and
mov
sub
mov
mov
push
mov
jg
mov
sbb
add
js
loopne
(bad)
sbb
mov
scas
sbb
(bad)
and
loope
xor
dec
out
inc
psrlw
cmp
fcomi
out
shr
ja
jns
inc
cdq
adc
mul
add
xor
outs
fwait
call
cwde
sbb
xchg
xchg
loopne
leave
push
adc
mov
call
lea
push
push
(bad)
clc
xor
inc
outs
cdq
in
mov
frstor
sub
ds
shl
test
aaa
cmc
dec
add
inc
pop
push
iret
rol
jnp
and
xchg
ja
adc
retf
jle
push
dec
inc
push
and
ret
(bad)
inc
fdivr
idiv
fsubr
sub
xor
rcl
daa
mov
(bad)
retf
scas
popa
mov
test
packsswb
xchg
dec
sbb
test
iret
js
sub
xor
xchg
addr16
mov
lea
cld
ins
and
popa
push
adc
aam
loopne
scas
(bad)
mov
push
(bad)
sbb
or
jns
mov
das
cwde
lods
mov
outs
mov
popf
mov
(bad)
aaa
or
jo
fs
pop
sti
lahf
std
and
adc
shl
pop
into
cmp
push
sbb
adc
sar
pop
mov
popa
dec
push
(bad)
in
movs
jmp
jp
push
mov
imul
lds
es
pusha
aaa
jno
aad
fnstcw
mov
imul
mov
pop
xchg
xchg
or
test
cmp
in
mov
out
fld
arpl
mov
adc
call
mov
shl
arpl
(bad)
sub
popa
pop
or
mov
jmp
push
xchg
push
inc
xor
nop
lods
lock
sbb
rcr
dec
btr
inc
sar
into
movs
in
(bad)
cld
cld
nop
call
icebp
in
pop
sbb
jecxz
stos
hlt
(bad)
dec
ds
xlat
scas
cwde
dec
call
call
xchg
adc
mov
pushf
cmp
mov
int3
cmp
adc
xor
sbb
mov
dec
add
mov
out
xchg
or
push
dec
data16
es
sahf
adc
out
shl
lea
add
hlt
out
pop
ror
mov
xchg
sbb
push
fs
pop
stc
sub
loop
xor
call
(bad)
popf
(bad)
cdq
dec
loop
dec
pop
div
push
cmps
pop
rep
jmp
mov
cmp
mov
mov
repz
push
mov
aad
jecxz
gs
aas
ins
pop
dec
sub
movs
dec
mov
popa
test
pop
adc
mov
add
add
pop
xchg
pop
jo
jno
jne
stos
xchg
and
out
xchg
shl
inc
fstp
pushf
mov
xchg
sub
inc
xor
out
fdivr
dec
sbb
pop
call
jno
adc
retf
aam
inc
neg
jle
cli
sbb
mov
imul
xchg
addr16
pop
xlat
sub
cmp
jp
repnz
ficom
jbe
icebp
cmp
mov
(bad)
jle
out
das
movs
mov
call
sahf
push
into
std
inc
inc
mov
test
leave
adc
dec
add
inc
aaa
sub
or
(bad)
xor
pop
lea
cld
pop
or
xchg
in
outs
or
add
mov
push
adc
popf
mov
ins
mov
daa
sbb
stos
mov
mov
jg
cmps
and
hlt
push
mov
push
fild
je
cmc
jge
sub
cs
add
or
inc
test
in
(bad)
pop
xchg
lods
sub
pop
xchg
repz
jae
ds
sahf
push
xchg
outs
fwait
imul
out
xor
and
enter
fadd
dec
scas
lock
pop
lds
mov
add
jne
push
imul
in
mov
(bad)
ror
dec
dec
je
scas
add
clc
push
and
xor
or
lds
push
pop
mov
idiv
cmp
data16
cli
cmp
loop
sub
mov
xchg
mov
sub
outs
mov
outs
jmp
fbld
imul
(bad)
(bad)
in
stc
push
fisub
inc
mov
(bad)
jne
(bad)
xchg
jmp
retf
addr16
and
daa
cmc
mov
cmp
lea
pushf
mov
clc
pop
sub
push
idiv
inc
cmps
mov
arpl
and
frstor
dec
cld
mov
aam
adc
adc
adc
iret
repz
and
jg
jmp
dec
ret
test
xchg
dec
arpl
jae
push
(bad)
jae
sar
repnz
xchg
add
popa
dec
jle
in
enter
push
xchg
sub
mov
hlt
jl
inc
mov
addr16
scas
add
sbb
lahf
js
das
jle
(bad)
clc
push
mov
and
fnstenv
sub
inc
pop
dec
cmp
dec
test
mov
into
bound
sbb
pop
push
rol
test
cmps
dec
mov
shl
xchg
es
xchg
or
enter
xchg
sub
test
mov
ins
jle
push
mov
lods
or
cmp
cwde
push
out
outs
leave
add
cmp
jmp
cmps
test
add
jmp
mov
mov
jle
aad
enter
(bad)
mov
test
clc
push
mov
stos
ss
sar
add
push
xor
push
addr16
in
push
push
test
jl
lock
(bad)
movs
imul
cmc
mov
xchg
add
mov
gs
xchg
cmp
sbb
inc
js
adc
mov
mov
ret
stc
mul
push
cs
mov
or
add
sub
ins
mov
cmp
inc
pushf
pop
jmp
mov
(bad)
pusha
fistp
stos
(bad)
and
out
adc
ins
jl
dec
fild
adc
mul
jno
inc
inc
cli
sub
add
in
out
enter
cmp
sub
mov
xchg
sub
mov
bound
pop
adc
mov
lods
inc
fs
ret
retf
xor
add
loopne
and
rcr
add
or
aas
adc
sbb
or
mov
push
xor
shl
xor
in
sbb
or
xlat
sbb
and
sub
in
or
or
rcr
cs
test
(bad)
(bad)
jbe
pop
rcl
loope
and
ds
jmp
dec
fisttp
retf
push
je
test
rcl
shl
out
adc
je
jecxz
or
ds
das
popf
pop
(bad)
lds
jae
ror
outs
mov
xor
es
stos
inc
mov
mov
pop
or
call
sub
mov
in
push
out
and
sub
mov
adc
or
fsub
mov
gs
push
jg
inc
and
icebp
arpl
mov
sahf
cmp
pop
cmps
xchg
inc
inc
push
mov
mov
std
bound
pop
lods
mov
loope
mov
bound
fisubr
or
mov
pop
mov
xor
pop
mov
adc
mov
jg
mov
ret
cdq
stos
mov
loopne
into
mov
jg
shl
mov
dec
jmp
inc
jns
mov
push
mov
jg
js
mov
jg
movs
dec
jmp
mov
add
cmp
popf
push
sub
pop
out
mov
sub
jecxz
inc
std
call
(bad)
jmp
mov
pop
mov
sub
sbb
xchg
into
inc
pop
test
jmp
xchg
shl
imul
push
xor
and
addr16
out
mov
leave
mov
adc
aaa
ror
add
ret
jo
push
dec
daa
push
push
movs
int
jg
mov
mov
fisttp
inc
enter
in
int
cdq
push
add
in
test
jmp
and
xchg
out
adc
pop
stc
and
inc
push
lds
cmp
(bad)
xor
pop
hlt
ficomp
scas
std
push
shufps
xor
(bad)
test
mov
dec
outs
jmp
inc
cmps
jg
pop
into
dec
jns
(bad)
ret
jp
mov
stc
mov
test
call
jg
xor
add
lds
jp
mov
das
movs
ja
out
mov
repz
add
xchg
in
lea
xor
inc
or
jo
inc
mov
cmps
cmpxchg
jbe
and
lods
dec
xchg
or
dec
mov
lock
push
out
add
add
push
add
add
mov
and
ficom
fld
pop
jg
jbe
movs
sub
cmp
clc
pop
pop
out
popf
out
jo
rcl
push
sub
sbb
shr
inc
pusha
xor
inc
pop
popaw
(bad)
(bad)
xchg
imul
dec
mov
mov
pushf
in
xor
pop
pop
(bad)
in
jp
add
imul
pop
dec
and
lahf
dec
in
adc
icebp
or
mov
add
js
idiv
retf
enter
pop
pop
xor
dec
dec
lea
test
stc
and
jno
mov
mov
dec
out
nop
add
sti
cmp
ret
jbe
fidiv
rol
jnp
or
sub
or
adc
shl
mov
(bad)
mov
enter
inc
or
aas
je
or
test
push
xlat
mov
push
mov
stos
mov
pushf
cli
dec
inc
dec
out
popa
lahf
in
jle
fsub
pop
mov
js
mul
xchg
push
cmps
fnstcw
(bad)
xor
dec
mov
add
lock
jmp
mov
xchg
sbb
std
dec
fdiv
push
pop
pop
outs
ret
push
out
mov
loope
loop
mov
push
adc
imul
data16
fmul
clc
dec
aam
cmc
cmps
les
mov
xchg
cmp
fadd
xor
shr
cwde
and
mov
stc
les
cld
sbb
cmp
dec
adc
xor
sti
adc
jae
cmp
pop
xchg
xchg
loope
retf
pop
cmp
fldenv
xchg
jae
(bad)
fst
xor
data16
xchg
data16
inc
pusha
fisubr
movs
mov
push
ins
ror
xor
inc
sub
add
mov
test
adc
lods
cmps
ret
dec
test
dec
test
movs
adc
hlt
sbb
push
push
jmp
retf
sbb
push
fs
lea
mov
fisub
mov
jecxz
mov
call
fdiv
xchg
ja
shr
inc
cmp
out
data16
stos
add
pop
add
xor
les
xchg
pop
pusha
inc
loopne
rcr
adc
or
push
aaa
inc
sbb
shr
and
pop
ins
popf
ds
aas
dec
aas
icebp
add
outs
into
into
xchg
rol
jno
cmp
push
sbb
jbe
out
jns
or
fs
jae
cmp
fwait
sub
iret
in
mov
dec
push
and
lods
mov
fcom
in
movs
lods
add
xchg
inc
stc
xchg
shl
fadd
icebp
jo
js
pop
pop
mov
pop
ins
leave
push
stos
jb
fmul
imul
xor
repz
jmp
mov
inc
pop
adc
push
mov
push
adc
mov
nop
inc
sbb
addr16
shl
sahf
inc
push
and
pop
push
sbb
mov
push
sub
add
mov
sub
dec
mov
in
imul
jmp
jg
or
les
aam
and
pop
repz
out
retf
inc
lea
aam
mov
xchg
lahf
add
mov
js
and
and
adc
fucomip
push
adc
ins
jmp
iret
out
data16
jp
add
inc
jne
gs
sub
ret
xchg
push
mov
out
xchg
fwait
mov
ds
pop
cmc
imul
jmp
mov
adc
addr16
pop
clc
dec
jg
jp
sbb
mov
inc
jmp
dec
add
xchg
cmp
mov
leave
inc
sbb
(bad)
out
leave
push
movs
mov
loope
pop
xor
add
cmp
retf
add
sbb
xor
inc
inc
inc
adc
mov
fst
(bad)
jno
mov
mov
aad
or
adc
(bad)
dec
out
and
or
mov
xchg
mov
enter
pusha
pop
mov
and
jmp
mov
fdivr
cmps
rcr
outs
sbb
aad
jg
dec
add
push
add
mov
adc
test
mov
inc
out
mov
jae
mov
xchg
inc
push
push
out
loope
mov
iret
xchg
cmps
push
sbb
sub
addr16
into
xchg
cmp
pop
add
dec
sahf
sbb
popf
arpl
push
fcomip
loopne
mov
stos
movs
fsubr
cld
sub
fisub
dec
repz
pop
in
sub
push
fst
mov
mov
push
inc
into
cmp
pop
mov
add
dec
pop
clc
sbb
add
cmp
fisub
mov
jl
jmp
fs
lea
shl
pushf
xchg
cdq
and
cld
and
call
outs
and
dec
add
loop
xor
clc
jl
inc
mov
push
aam
nop
lods
mov
mov
push
xchg
retf
dec
inc
jns
inc
add
movs
jg
jbe
rcr
retf
dec
dec
dec
jmp
fadd
or
jae
jbe
or
mov
clc
inc
loop
(bad)
jnp
sar
push
(bad)
(bad)
adc
lock
inc
inc
adc
add
add
mov
mov
fwait
push
test
mov
pop
(bad)
sub
mov
or
cmc
leave
shl
std
enter
dec
or
pop
add
xchg
mov
xchg
xor
and
xchg
and
or
sbb
test
mov
and
int
aaa
jle
punpcklbw
mov
dec
(bad)
sub
jmp
loope
adc
sub
iret
dec
pushf
mov
adc
or
add
aaa
jbe
sbb
loope
cmp
sub
loopne
retf
cmp
pop
imul
das
add
xor
inc
mov
shl
cmp
mov
mov
sbb
mov
jb
cmps
inc
cmp
sub
int
aad
sbb
push
jo
inc
call
pushf
xor
and
dec
fldcw
mov
test
gs
push
pop
ss
or
out
popa
or
xor
jae
retf
mov
sub
ret
and
xchg
jns
adc
into
fnstenv
aas
inc
shl
jge
das
fnstsw
sar
ss
adc
add
xor
sub
dec
xchg
pop
dec
das
add
mov
mov
ja
mov
stc
mov
scas
shl
arpl
push
call
out
and
ds
xor
mov
(bad)
and
push
leave
mov
add
mov
bound
dec
fdiv
lfs
sbb
mov
fadd
xchg
pop
lods
pushf
mov
push
(bad)
ds
and
add
movs
jo
js
pop
test
and
clc
pushf
jmp
gs
jecxz
cmp
(bad)
scas
xchg
mov
xchg
xchg
add
ins
data16
add
(bad)
test
jo
ins
jecxz
mov
cmp
adc
cdq
sbb
sub
and
sbb
jnp
xor
jne
pop
shr
xchg
pop
adc
cmc
xor
out
je
xchg
pop
mov
shl
sbb
jae
jge
(bad)
mov
xchg
xchg
inc
sbb
jb
int3
gs
cmc
out
lock
add
in
jb
add
mov
and
pop
cmp
aas
pop
retf
adc
hlt
mov
push
sub
pop
cmp
jno
lea
outs
inc
faddp
je
mov
jle
add
jns
sti
js
inc
sub
ror
movs
test
mov
stos
mov
sbb
(bad)
test
ficomp
push
add
dec
adc
push
lea
push
dec
cmp
lods
les
lahf
sub
add
je
xchg
pop
leave
cmc
ror
or
pop
leave
inc
jecxz
and
pop
bound
retf
dec
jne
cdq
dec
jns
xchg
cs
inc
nop
pop
cmps
out
in
sahf
pop
cmp
js
push
in
push
mov
enter
fadd
push
adc
xor
std
pusha
inc
pop
cmp
in
cmp
mov
or
iret
sbb
int3
or
and
arpl
push
data16
push
jbe
xchg
xchg
mov
pop
mov
test
mov
mov
test
movs
in
xchg
icebp
xchg
(bad)
repz
xlat
push
aas
pop
in
call
xor
jne
mov
imul
popa
inc
pop
out
mov
shl
cmp
sub
add
retf
adc
vmread
inc
out
pop
cwde
clc
xor
mov
and
call
daa
mov
fadd
push
jg
xchg
or
popa
dec
dec
mov
in
add
call
jge
ins
jmp
sbb
ins
nop
dec
pushf
test
dec
xor
sub
mov
movs
xchg
push
xor
mov
lods
mov
or
mov
xchg
in
test
mov
jno
into
data16
pop
xor
call
fsubr
adc
lods
lahf
sub
jbe
lock
jmp
daa
test
mov
int
fcomp
iret
es
pop
sub
add
pop
add
add
push
call
jo
out
xchg
and
scas
and
aaa
and
scas
loop
or
repnz
retf
loope
jnp
pop
loop
jns
lock
fist
push
jle
push
sbb
push
arpl
xchg
pushf
call
(bad)
movs
js
mov
or
adc
dec
fcmovb
pop
retf
ins
retf
imul
imul
push
adc
xchg
pushf
aas
xor
jp
adc
inc
mov
xchg
outs
sub
mov
jmp
lahf
ret
sbb
jl
and
ret
aam
iret
bound
nop
pop
push
xchg
mov
aas
dec
ins
imul
jge
or
stos
mov
retf
and
adc
rcr
dec
ret
or
xchg
lds
sub
jge
jbe
aad
xchg
inc
pop
out
leave
xchg
and
sar
and
mov
and
ds
xchg
add
adc
hlt
sbb
ins
push
adc
loopne
imul
or
pop
inc
sbb
mov
dec
inc
adc
inc
ret
pop
jnp
mov
sbb
hlt
pop
mov
retf
ins
xchg
adc
lds
test
fidiv
addr16
test
or
xchg
adc
jbe
inc
xchg
pop
fyl2x
clc
out
or
add
imul
int
push
sbb
mov
mov
jb
jle
jbe
mov
nop
loopne
call
sar
shl
int
pop
rol
mov
sbb
sahf
test
bnd
dec
imul
push
imul
in
inc
outs
push
in
push
xchg
mov
inc
fs
mov
jo
stos
nop
sti
(bad)
in
int3
push
seto
retf
mov
push
mov
sub
stos
loopne
dec
and
outs
jo
pop
add
daa
ins
and
xor
ficom
lds
mov
and
out
mov
sbb
cmp
xchg
inc
and
dec
jg
ja
pop
pop
jmp
inc
lea
xchg
mov
pop
and
sub
pusha
shl
mov
jle
int
and
xor
xchg
and
xor
retf
aaa
loope
mul
adc
mov
add
dec
or
xor
fsubr
xchg
jp
dec
outs
cli
xchg
cwde
mov
test
pop
mov
mov
shl
xor
test
mov
add
mov
fisttp
aad
mov
and
les
shr
pop
(bad)
jecxz
cdq
mov
mov
cmp
or
pusha
push
push
clc
fidiv
addr16
pop
div
out
loop
fs
neg
xor
inc
or
adc
mov
adc
mov
sub
scas
jge
stos
cmp
fdiv
shl
outs
xor
lds
scas
repz
stos
inc
dec
sbb
jo
inc
aad
mov
in
lahf
mov
(bad)
and
(bad)
push
(bad)
data16
lds
jle
xchg
xchg
inc
or
sbb
out
jg
mov
imul
mov
into
mov
xor
push
jns
cmp
xor
mov
loopne
repz
add
dec
push
inc
mov
inc
js
and
cmps
in
mov
rol
mov
ds
popa
scas
sub
mov
push
dec
xlat
(bad)
sub
push
aad
or
jns
(bad)
int
inc
or
dec
lock
fstp
inc
rcr
retf
into
fsubrp
push
mov
inc
push
dec
dec
mov
mov
xor
cmp
movs
rcr
shl
enter
mov
shr
push
test
sbb
pop
dec
imul
aad
sub
xchg
or
cmp
mov
inc
add
sub
mov
leave
movntq
cmp
xchg
scas
sub
shl
jmp
aam
xchg
fdivr
fist
adc
mov
cmc
add
test
xchg
cs
ss
sub
loop
mov
pushf
call
cwde
jo
jno
pop
(bad)
fdivr
das
in
and
nop
repnz
cmp
pop
sbb
gs
mov
lods
shr
jne
lods
dec
pop
adc
repnz
pushf
mov
loop
xor
sub
imul
jb
inc
jbe
mov
aas
add
pop
fisub
inc
xor
add
mov
imul
sbb
into
in
(bad)
inc
mov
push
add
iret
jbe
jl
and
fmul
mov
jo
xor
dec
dec
shl
sti
outs
dec
mov
dec
repnz
jbe
fdiv
int
(bad)
loopne
jo
adc
rol
sbb
(bad)
pop
out
mov
xlat
jbe
lods
(bad)
repz
push
jae
push
fidiv
fdivrp
push
aam
sti
jo
inc
and
sub
push
jae
std
inc
test
stc
lahf
mov
sti
xor
outs
and
xor
pushf
xlat
pop
inc
adc
pusha
cmps
cdq
jecxz
cmps
pop
bound
test
adc
js
and
(bad)
fsin
sar
adc
popa
(bad)
fldenv
in
sbb
aaa
daa
outs
clc
inc
and
mov
jno
mov
(bad)
pop
into
pop
mov
add
mov
fsubr
mov
enter
jg
(bad)
stc
lock
outs
xchg
pop
ror
push
fwait
mov
jb
cwde
ins
sbb
xor
loop
(bad)
cmp
xchg
cmps
cmp
aaa
dec
jmp
fist
loope
outs
add
mov
iret
data16
repnz
mov
sar
adc
and
xor
cdq
pop
loope
ins
lods
(bad)
gs
es
cmp
dec
dec
test
add
sbb
ja
jne
fldenv
xchg
data16
jmp
ja
stc
dec
jl
sub
add
xor
mov
hlt
movs
ss
xor
sub
movs
call
and
push
pop
and
mul
std
jl
push
dec
xchg
sahf
int3
cld
jno
test
shl
shl
dec
inc
xchg
xchg
sti
rcl
dec
xlat
jmp
daa
inc
mov
into
aad
fs
jl
dec
adc
sbb
retf
(bad)
in
add
pop
pusha
inc
inc
jl
sbb
dec
fild
pusha
not
retf
mov
push
sahf
push
jo
jae
push
test
stos
xchg
repnz
gs
jnp
fwait
cmp
pop
paddsw
adc
sub
xor
imul
push
mov
and
ficomp
xchg
mov
rol
add
mov
cmp
test
ss
adc
outs
mov
lds
call
or
std
xchg
mov
dec
call
mov
xchg
sub
xor
sbb
add
cmp
jmp
xchg
xchg
push
xor
or
lea
and
repnz
push
mov
jle
xchg
push
jecxz
fnsave
cmp
mov
inc
pop
dec
adc
mov
xor
popf
ret
loopne
retf
jge
std
cmp
inc
icebp
sahf
dec
fistp
xchg
mov
xchg
jp
pop
pop
ins
call
dec
ficom
fs
and
ja
cs
mov
outs
out
jno
sar
sub
imul
xor
rol
jmp
scas
sar
pop
cmp
mov
dec
out
out
cmp
xchg
popf
gs
in
into
shl
xchg
(bad)
fcmovnu
mov
jl
push
jle
mov
mov
jmp
popf
mov
xchg
sub
retf
lahf
dec
aam
pop
mov
(bad)
fnstenv
and
rcr
and
mov
inc
(bad)
and
fldenv
add
cmp
imul
into
in
xchg
jns
les
add
pmaxub
xchg
or
cmps
das
(bad)
sub
shl
mov
push
call
pop
retf
mov
mov
and
add
cmp
add
cdq
xchg
jle
xor
push
push
rol
mov
call
pop
les
je
push
xchg
xchg
out
retf
ins
mov
mov
test
shl
sub
fidiv
mov
cs
sbb
xchg
xor
(bad)
call
dec
call
mov
or
mov
add
push
rcr
jb
retf
fcmovnb
lahf
cld
add
or
xlat
into
cmp
out
and
loopne
jns
xchg
push
jp
inc
mov
add
pop
dec
clc
push
sub
fs
mov
imul
mov
daa
push
bound
xlat
push
(bad)
or
in
mov
js
fucomp
inc
test
jle
repnz
push
cmp
inc
pusha
mov
cmp
fld
cld
jo
cli
sbb
loop
sub
cmc
inc
mov
fldenv
sub
pusha
push
mov
inc
pop
call
xor
(bad)
loop
pop
pop
push
sbb
and
dec
jge
inc
ficom
mov
bound
sub
test
rcr
ret
xchg
je
shl
js
sbb
call
mov
out
imul
fist
pop
and
push
adc
cmps
xor
test
inc
pushf
(bad)
sar
ja
shld
cmp
(bad)
inc
add
sub
jmp
jmp
adc
pop
inc
scas
leave
nop
push
int3
daa
ja
xchg
test
dec
dec
push
stc
mov
addr16
push
xor
mov
test
fisubr
and
out
ror
and
stos
loop
aam
sub
pop
gs
daa
int
sbb
out
xchg
fdivr
jns
mov
int
dec
pusha
(bad)
xlat
and
(bad)
out
add
cli
scas
outs
loop
sub
or
add
je
cmp
addr16
mov
jle
mov
cmp
mov
mov
fidivr
les
mov
outs
je
pop
or
mov
icebp
fwait
add
movs
xchg
(bad)
jns
mov
mov
into
in
inc
jp
rcl
mov
in
rol
cld
idiv
pop
mov
sar
dec
lahf
jne
dec
mov
xor
jb
or
dec
or
xor
pop
pop
jb
xchg
xor
ins
mov
mov
popa
mov
jae
mov
jmp
mov
movs
imul
and
add
test
movs
mov
and
pop
(bad)
imul
xlat
add
cs
mov
cli
daa
mov
jae
stos
in
jnp
retf
test
ficomp
adc
dec
test
lods
xchg
mov
out
test
jl
out
iret
mov
jg
lods
test
cmp
ins
mov
inc
add
sar
rol
loopne
add
sbb
loope
pop
into
in
cmp
push
stos
dec
shl
push
adc
lds
retf
xchg
jecxz
jo
mov
push
outs
or
cli
dec
fstp
fld
inc
mov
push
out
sub
icebp
xor
sbb
pop
inc
xor
dec
sub
dec
pop
iret
xchg
mov
daa
dec
and
adc
cwde
push
push
mov
enter
mov
ins
cs
mov
inc
in
mov
movs
mov
test
add
adc
push
adc
mov
(bad)
shl
(bad)
repz
out
add
or
xlat
fld
int3
jl
aad
or
sub
xchg
pop
mov
stos
lods
pop
sbb
test
pushf
mov
(bad)
test
mov
inc
and
mov
(bad)
enter
push
imul
mov
and
sbb
or
sub
jne
add
push
retf
rcr
int
mov
sar
mov
pusha
(bad)
data16
push
pop
xor
jmp
jp
cmp
sar
xchg
mov
mov
mov
imul
mov
je
push
data16
xor
repz
sub
aas
pop
sahf
(bad)
sti
mov
or
mov
cwde
jns
mov
imul
into
ins
push
(bad)
daa
je
sbb
into
and
es
jae
push
cli
outs
sbb
jno
push
jbe
jl
scas
js
in
lea
out
jns
loopne
iret
fist
ja
test
sti
in
stos
xor
pop
retf
stc
or
std
cmps
leave
jo
jle
mov
xor
bound
push
mov
add
xchg
idiv
pop
daa
test
sahf
add
pushf
mov
and
sub
xor
mov
mov
sub
pop
xor
adc
or
inc
lods
xchg
lods
aaa
cmps
scas
sbb
enter
sbb
das
outs
sbb
dec
stos
sahf
dec
adc
out
nop
scas
test
sbb
inc
xchg
mov
adc
cmps
pop
in
popa
int
addr16
mov
aaa
std
cmp
sub
mov
xchg
out
nop
popa
cmps
cs
stc
adc
dec
xor
push
pop
lods
xor
xlat
int3
mov
rcr
stos
mov
mul
idiv
jmp
and
xchg
inc
(bad)
jp
cmc
xor
daa
inc
leave
add
or
dec
cmc
fidiv
icebp
and
retf
dec
sub
stc
pusha
pop
jecxz
imul
int
xor
xor
dec
popf
rcr
or
xchg
jne
in
enter
push
fcom
dec
inc
scas
dec
mov
arpl
add
sub
scas
not
inc
lds
outs
mov
cmp
mov
gs
xor
call
xor
(bad)
mov
test
add
fwait
test
inc
es
sbb
add
push
repz
into
rol
sbb
inc
mov
jne
inc
and
mov
ds
fbld
cmp
add
sbb
js
ret
aad
mov
int
sti
ret
fstp
sub
and
ja
jge
sub
test
mov
adc
(bad)
and
and
mov
sbb
lods
jge
or
jecxz
inc
fnsave
mov
adc
push
adc
push
movs
dec
lock
push
pop
inc
xchg
xchg
mov
sub
pop
add
pop
xchg
test
push
and
pop
out
xchg
repnz
(bad)
cli
repnz
push
add
cli
adc
pop
ins
fs
gs
jecxz
lods
aas
jnp
dec
ins
leave
mov
fwait
jmp
(bad)
fnstcw
mov
pop
(bad)
sbb
in
and
lock
dec
cmps
jmp
(bad)
lock
jg
push
add
xlat
scas
fcmove
(bad)
imul
and
out
push
and
and
sbb
out
jo
or
sahf
sbb
enter
pop
mov
dec
cmp
fwait
jmp
imul
mov
ficomp
sub
xor
and
pop
imul
pop
(bad)
es
push
mov
mov
cmps
out
or
ins
rcr
into
jne
sub
fiadd
mov
xor
outs
(bad)
cmc
mov
enter
data16
push
jle
int3
adc
adc
sbb
leave
retf
jl
inc
aad
std
sub
jne
adc
sub
push
or
icebp
(bad)
aad
inc
add
loop
and
cwde
shl
(bad)
add
xchg
or
fimul
arpl
fimul
pop
push
js
clc
mul
pop
xchg
ds
movs
mov
cmps
dec
lods
shl
imul
mov
jg
fwait
pop
dec
mov
std
mov
jmp
cmp
out
movs
nop
jecxz
mov
in
push
pop
push
and
clc
adc
cmp
int3
fs
push
add
pop
loope
je
sub
js
push
sbb
into
fst
call
popa
setg
loopne
jno
icebp
xor
jp
xor
cli
imul
lods
cmp
sub
bound
bound
push
push
shl
in
stc
xor
stc
stos
ins
jmp
xchg
popf
ret
adc
mov
and
mov
inc
mov
(bad)
xchg
cwde
push
push
pop
xchg
lods
iret
cmps
mov
mov
loopne
aam
mov
inc
jecxz
movs
into
(bad)
xchg
(bad)
or
dec
bound
jmp
mov
nop
test
jo
mov
xchg
pop
mov
popf
or
add
sub
repz
cmp
pop
out
je
fdivr
sti
arpl
out
mov
add
push
cmp
js
bound
out
or
scas
ins
ror
mov
jo
cld
pop
sbb
scas
cmp
adc
adc
cmps
hlt
jno
fs
ja
lahf
test
jecxz
imul
inc
pop
ss
mov
push
sbb
push
enter
adc
sbb
dec
sahf
in
pop
dec
dec
cmps
ret
or
fwait
push
mov
inc
(bad)
mov
lds
pop
xor
call
push
xchg
lods
pushf
xchg
fisubr
(bad)
push
cmp
pop
or
push
cmp
sub
push
call
and
mov
xchg
cmp
(bad)
xchg
and
je
dec
into
popf
lea
shl
lods
int
pop
sub
fwait
and
gs
in
js
lock
and
mov
gs
pop
cmp
pop
jnp
in
xbegin
ds
(bad)
idiv
fmul
(bad)
jmp
jae
ret
inc
rcr
add
xchg
and
lds
ja
loope
aad
xchg
lds
or
in
or
repnz
je
xchg
or
cmp
imul
cdq
inc
ret
cmp
ins
ret
out
mov
xor
int
sar
mov
push
adc
inc
call
or
sbb
call
ins
mov
out
mov
std
xor
mov
fbstp
pusha
int
ret
scas
mov
clc
in
or
div
jecxz
mov
jae
cwde
jbe
stc
retf
outs
sbb
mov
pop
dec
jecxz
mov
lods
mov
xchg
dec
mov
push
das
mov
jmp
mov
add
aas
aaa
(bad)
sbb
test
sahf
dec
fwait
push
hlt
out
movs
xchg
jg
imul
mul
jge
clc
arpl
push
xchg
aaa
mov
cmp
sti
outs
inc
sbb
adc
jecxz
stos
fst
clc
dec
jnp
es
icebp
out
(bad)
dec
test
scas
repnz
jno
inc
cmp
xchg
repz
jbe
pusha
push
ja
loope
or
aaa
xchg
fisttp
xchg
js
sbb
or
into
jae
mov
lea
(bad)
fsub
push
jmp
popf
pop
out
inc
clc
fwait
adc
mov
mul
jl
xchg
ins
jmp
inc
icebp
pop
in
push
call
mov
out
sub
adc
fdiv
and
neg
(bad)
pop
jmp
inc
std
retf
repz
mov
adc
sbb
imul
pop
movs
stos
xchg
cli
ds
jns
mov
adc
inc
jne
inc
pop
cmp
mov
lods
sbb
or
pop
xor
pop
ficom
ins
xor
jmp
sub
ja
dec
ins
inc
ins
fdiv
adc
jle
or
outs
popa
xor
daa
cmps
pop
or
adc
int3
add
test
xor
push
push
into
jo
mov
mov
inc
fcom
mov
push
mov
rcr
cmc
mov
lds
mov
push
inc
test
loop
dec
inc
adc
inc
ins
popa
sub
xchg
pop
cmp
push
push
jns
or
inc
add
xor
fistp
and
call
jo
pusha
sub
je
mov
cmps
jg
cmp
jl
jmp
imul
xor
xchg
scas
or
cmps
ss
push
dec
cld
nop
cmp
dec
es
jecxz
sub
js
int3
stos
pop
jp
sub
gs
and
pop
test
adc
or
mov
inc
loope
fwait
clc
push
push
test
mov
xchg
iret
pop
in
push
cmp
adc
and
pop
xor
imul
jecxz
rcr
jnp
loopne
xchg
arpl
sub
mov
xor
dec
sbb
cmp
and
adc
push
pusha
stc
mov
pushf
popf
jmp
cmp
xchg
push
pop
add
xchg
enter
mov
scas
push
cmc
ret
pop
adc
out
fild
imul
push
xchg
(bad)
inc
mov
jl
ds
div
xlat
xor
rcr
nop
in
mov
dec
ret
pop
and
call
push
(bad)
xor
jl
pop
icebp
movs
add
dec
and
sbb
cwde
(bad)
jae
inc
popf
retf
inc
sub
aaa
add
lock
jg
lds
pop
inc
aad
scas
scas
xchg
outs
shr
ret
test
jbe
push
fnsave
std
in
lods
sahf
fisubr
mov
inc
loope
sub
sbb
imul
mov
movs
pop
sti
mov
les
aas
jge
cdq
fcomp
icebp
jae
adc
inc
pop
dec
test
mov
push
ins
mov
jbe
pop
in
call
push
cmc
cli
sbb
push
push
cmp
mov
and
mov
mov
cwde
cmp
xchg
mov
jbe
aam
mov
(bad)
(bad)
shr
loope
repnz
sub
add
push
add
out
add
add
scas
(bad)
jns
cmp
xchg
add
jecxz
aas
add
nop
mov
lds
ror
gs
fnclex
cmc
mov
jle
inc
sub
and
ret
or
fcmovnu
or
ins
jo
cdq
and
repz
dec
mov
jl
outs
lahf
(bad)
cmc
mov
aaa
fldcw
imul
mov
fld
mov
and
pop
or
or
in
xchg
out
push
pop
ins
retf
pop
pushf
and
inc
arpl
and
xor
mov
test
inc
test
mov
pop
mov
outs
rol
mov
pop
in
(bad)
lock
dec
mov
sbb
inc
imul
test
add
or
js
imul
fwait
pop
inc
jno
lahf
mov
lods
sbb
pop
inc
jp
xlat
sbb
xchg
shl
into
stos
dec
popa
dec
jmp
inc
rcl
ds
adc
mov
inc
and
call
ror
push
dec
fadd
fcomp
push
xor
sbb
jle
data16
in
xchg
scas
cld
daa
shl
mov
jmp
comiss
test
es
outs
retf
sbb
mov
pop
bound
fwait
ss
add
cmps
inc
mov
retf
(bad)
pop
pop
xor
inc
sub
retf
mov
ds
cmp
xor
call
es
clc
sbb
pop
(bad)
jb
cs
mov
push
sub
cmp
dec
push
cdq
xchg
pop
popa
aam
std
in
xchg
mov
gs
jl
outs
xor
add
loop
cdq
pop
xchg
stos
mov
xor
clc
imul
hlt
cli
lods
cmc
mov
(bad)
dec
xor
call
mov
popa
nop
fdivr
fnstsw
popa
mov
sahf
mov
dec
add
mov
xor
ja
mov
push
mov
mov
xor
imul
into
out
jnp
hlt
jg
frstor
cli
sbb
mov
in
ins
inc
cmps
inc
ins
dec
inc
(bad)
ficom
cmc
aaa
push
inc
(bad)
in
loop
adc
pop
add
shl
xchg
fdiv
fadd
fadd
sub
test
adc
jl
push
mov
out
add
sub
push
test
js
pop
call
jg
enter
popa
sub
mov
xchg
lea
push
xchg
(bad)
outs
mov
xchg
loopne
mov
xor
fild
mov
arpl
es
inc
xor
loopne
(bad)
xchg
cdq
es
ja
outs
pop
or
mov
xchg
in
stos
or
leave
test
int
hlt
shr
adc
adc
fs
add
int3
inc
jb
aas
sub
data16
push
sahf
sbb
mov
dec
and
cmps
lds
daa
push
xor
mul
dec
xchg
inc
out
xchg
xor
sub
mov
inc
mov
pop
push
pop
aas
gs
gs
cmp
cmps
test
jecxz
xor
and
push
loop
xlat
inc
mov
cmps
pop
inc
popf
dec
dec
aaa
shl
push
jp
sbb
ret
push
shr
sub
shr
xchg
push
pop
rol
add
pushf
adc
daa
sar
sbb
(bad)
retf
inc
das
gs
push
mov
(bad)
ins
mov
push
push
jl
or
stos
scas
fmul
cmp
xor
inc
ror
fist
mov
or
gs
mov
stos
jge
cld
inc
cdq
sub
jmp
test
mov
out
cmps
ret
and
bound
mov
or
es
cmp
fsub
repnz
iret
mov
cmps
mov
lahf
pushf
mov
xor
les
aam
jmp
mov
aas
xor
repz
dec
cmp
popa
or
add
and
sub
rcl
push
xorps
cld
test
hlt
xchg
dec
iret
or
fwait
push
mov
jmp
inc
mov
sub
imul
or
les
rcr
arpl
test
jle
ss
dec
fcomp
cmc
adc
and
xabort
rol
cmp
lods
dec
imul
imul
jge
stc
aas
js
lods
imul
dec
fst
xor
scas
and
ins
add
push
ficomp
aas
outs
gs
ficom
mov
loopne
inc
sbb
sub
xor
stc
mov
aas
cs
ins
repnz
sbb
inc
cld
cmc
push
pushf
add
fldcw
sbb
popf
push
pop
dec
les
xchg
js
jmp
inc
sbb
std
xor
jp
call
fcmove
add
call
and
fild
pop
out
mov
mov
xlat
cwde
out
movs
out
cmp
popf
dec
ds
imul
lahf
pusha
gs
mov
fsub
mov
adc
cmp
sti
ds
not
neg
cmc
adc
and
jle
add
or
mov
mov
lds
call
call
or
jecxz
sti
xlat
test
push
ds
and
rcl
sub
jge
adc
mov
sub
xchg
push
jnp
pushf
mov
mov
mov
bound
pop
mov
in
in
xchg
jbe
xchg
mov
push
std
inc
fiadd
inc
rcr
dec
sub
aaa
inc
das
popa
fs
pop
cmp
mov
nop
or
aam
cmp
fadd
xchg
adc
mov
mov
or
jle
pop
(bad)
add
or
xchg
(bad)
cli
aaa
cmp
jns
push
outs
stc
xchg
sub
out
out
or
ficomp
pop
sbb
nop
inc
call
jne
pop
push
adc
mov
push
sub
fadd
mov
(bad)
es
xor
in
jo
or
pusha
popa
fwait
xchg
cmp
xlat
jbe
repz
jle
lds
(bad)
xchg
and
mov
test
inc
imul
fsubr
dec
push
add
add
les
imul
sub
adc
push
clc
js
mov
pop
pop
gs
or
push
cmp
dec
sub
lea
outs
pop
jo
add
iret
fild
cmp
pusha
ds
(bad)
retf
xchg
daa
aaa
push
push
outs
nop
push
loope
in
fwait
in
out
dec
inc
in
inc
lea
add
cmp
xchg
cmp
outs
addr16
idiv
icebp
jno
xor
mov
mov
jnp
in
out
mov
jmp
xor
ds
or
sbb
dec
mov
ds
add
push
xor
mov
sub
nop
mov
ss
add
sub
mov
fs
out
adc
mov
xor
test
neg
xchg
hlt
fwait
mov
or
movs
dec
test
push
xor
mov
push
loop
mov
xor
push
or
in
int3
and
out
jb
outs
inc
dec
xor
mov
mov
pop
xchg
mov
leave
or
(bad)
loopne
stos
sbb
cmp
(bad)
and
test
cld
xchg
xor
mov
or
icebp
adc
push
sbb
arpl
mov
mov
inc
pop
xchg
or
clc
inc
les
and
in
out
js
sub
xor
mov
push
and
lahf
push
in
jle
call
jge
imul
fistp
movs
test
pop
jmp
dec
sub
mov
adc
adc
test
adc
or
ja
add
push
dec
or
cwde
xor
jg
mov
cwde
cmp
or
retf
sbb
retf
out
sub
push
mov
pop
in
ror
mov
inc
sub
push
stos
mov
pop
mov
push
add
xor
or
and
dec
rcl
sbb
xor
jae
in
xor
jge
mov
in
addr16
loop
mov
mov
dec
add
scas
pop
int3
mov
push
(bad)
cmc
mov
sbb
jle
cwde
adc
xor
sub
sub
mov
ret
push
and
pop
movs
leave
inc
(bad)
xlat
cmps
popf
or
jae
add
xchg
sbb
aam
ss
or
add
(bad)
or
mov
lods
mov
inc
(bad)
mov
jae
jne
jae
dec
int3
push
jns
adc
or
jno
mov
adc
mov
dec
jmp
popf
inc
cmps
jae
cwde
in
xor
jge
xor
(bad)
std
push
jg
fsubr
push
repnz
scas
and
or
inc
mov
fsub
aad
test
push
lock
mov
dec
inc
dec
jns
idiv
sbb
in
aas
or
xchg
dec
aas
or
fnsave
test
or
(bad)
rcr
cld
test
cmc
clc
adc
lahf
dec
dec
pop
push
and
mov
adc
fstp
mov
stos
outs
cmps
les
mov
inc
dec
xchg
in
cmp
mov
cmp
pop
mov
fcmovnbe
fistp
sbb
mov
push
push
xor
dec
and
mov
jnp
xor
and
sti
jmp
mov
xchg
and
ficom
jbe
xlat
loope
ins
xchg
aam
xor
pusha
cmp
mov
inc
or
xchg
xor
dec
dec
jmp
scas
inc
mov
xchg
ins
sub
hlt
gs
cmps
add
fdiv
ss
mov
sbb
mov
arpl
int
add
xchg
cmp
fidiv
fcmovnb
sub
popa
xor
scas
pop
cwde
xchg
retf
loopne
adc
mov
iret
scas
dec
and
and
(bad)
sub
fcmovnbe
cmc
xchg
push
lock
xchg
das
xor
outs
aad
inc
repz
mov
xor
test
cmp
xchg
xchg
out
(bad)
in
adc
adc
and
jno
je
call
xchg
inc
mov
jae
js
sub
pop
mov
adc
sbb
xchg
inc
jle
stc
adc
mov
lea
add
in
fadd
add
retf
movups
mov
add
add
call
xchg
mov
push
or
gs
jle
sbb
push
adc
lds
loope
aaa
into
hlt
add
jns
aaa
xor
sti
mov
xchg
mov
call
outs
neg
add
mov
jne
or
inc
adc
mov
das
out
test
sbb
pop
cwde
int3
test
lods
inc
jb
cwde
sbb
add
mov
fild
ficom
xchg
call
sub
in
outs
sub
xchg
mov
pop
add
jmp
popf
dec
loopne
sti
das
arpl
test
sbb
loopne
stos
jae
xor
fstp
lahf
outs
inc
cmps
int3
dec
mov
(bad)
push
jp
scas
pop
sub
aas
xor
push
jb
sbb
pop
cld
addr16
pop
mov
scas
jnp
(bad)
mov
retf
dec
or
(bad)
popa
je
int3
(bad)
inc
mov
sub
push
into
push
neg
out
mov
xchg
xchg
inc
ins
pop
bound
sub
cdq
mov
xchg
call
mov
test
sub
jg
arpl
(bad)
mov
data16
aas
pop
jne
add
sar
cmp
je
or
gs
lds
push
shl
jo
loop
jae
add
sub
cmp
cli
or
outs
xchg
retf
push
lds
enter
cmp
pop
aam
aad
ja
jg
dec
fs
push
cmc
mov
retf
sbb
xor
ja
iret
pop
in
push
(bad)
jno
mov
movs
push
mov
stos
ds
mov
imul
jo
inc
iret
cmps
fcmovb
aaa
jae
or
loope
add
mov
cmp
mov
xlat
mul
mov
cmp
ja
dec
and
push
push
push
mov
jo
push
push
(bad)
(bad)
jge
sbb
lods
add
stc
jmp
mov
nop
out
mov
xchg
out
cmps
jmp
jl
jb
sub
ins
and
sub
and
imul
fwait
int3
sub
pop
cmps
sub
aam
adc
popf
out
dec
sbb
ds
dec
ret
fistp
dec
and
movs
pop
mov
(bad)
pop
pop
add
(bad)
jl
(bad)
int
(bad)
nop
scas
mov
rcl
in
retf
jge
and
xor
dec
or
movs
scas
push
mov
in
mov
fwait
inc
cmp
mov
retf
cmps
das
popa
inc
loop
mov
adc
push
(bad)
adc
mov
out
pop
jp
xchg
xchg
ret
ret
ficom
sbb
cmps
aas
imul
xor
xchg
clc
out
mov
das
xchg
dec
dec
add
xor
mov
sti
inc
cmps
or
cmp
pusha
nop
popf
imul
dec
jl
sub
cmps
lods
daa
iret
in
push
dec
imul
js
xor
lods
lock
sub
outs
les
pushf
mov
mov
and
ja
mov
dec
xor
pushf
inc
std
fisubr
push
sub
add
push
push
pop
mov
mov
aas
jno
(bad)
fistp
fsub
jno
sub
mov
movs
push
add
mov
addr16
or
sbb
fldcw
pop
sar
pop
inc
sub
rol
and
mov
fld
jno
and
sbb
loop
pop
mov
mov
div
loop
jmp
imul
jno
sub
sbb
pushf
jecxz
push
or
sar
sbb
pop
and
sub
fsubr
xchg
push
mov
jae
mov
inc
retf
sbb
shl
stos
adc
mov
mov
mov
push
rcl
jp
sahf
adc
or
into
rcr
add
call
and
xchg
mov
(bad)
pop
jg
ret
xchg
mov
rcl
adc
(bad)
mov
retf
out
int
push
jno
stos
mov
adc
retf
ror
ret
pop
(bad)
mov
mov
das
jnp
mov
iret
xor
aaa
stc
adc
push
imul
xor
scas
sub
sub
push
scas
aaa
add
repz
popa
out
daa
pop
xor
jne
idiv
or
fwait
hlt
push
lahf
jo
push
push
lods
bnd
add
bound
mov
inc
pop
xchg
sbb
loop
mov
aam
out
jmp
test
das
stos
bound
ror
and
mov
pop
and
cwde
test
cmp
retf
js
cmp
inc
pop
test
pushf
jl
loope
mov
add
xor
adc
cmp
(bad)
(bad)
std
test
mov
fidiv
div
data16
in
mov
or
icebp
adc
dec
clc
and
dec
loopne
sti
push
adc
mov
pop
repnz
or
cmps
pop
int
sub
pop
movs
das
pop
std
loopne
xor
mov
xchg
jbe
or
cdq
call
pop
inc
push
jp
or
fnstcw
adc
(bad)
cmps
fistp
mov
mov
inc
inc
sub
imul
jl
sub
xchg
jmp
and
hlt
sub
sub
xor
out
int3
mov
bound
inc
loop
sahf
fs
ret
(bad)
cmp
clc
jmp
cmp
cmps
and
lods
xor
(bad)
call
sub
adc
fistp
mov
add
and
and
or
sub
and
in
jnp
xor
(bad)
enter
out
pop
std
iret
sbb
in
xchg
hlt
adc
repnz
movs
sub
popa
loopne
and
inc
pop
adc
pop
adc
sbb
pop
mov
stc
sub
mov
(bad)
jmp
fiadd
out
sub
mov
outs
sub
and
repz
retf
arpl
xchg
inc
arpl
jg
ds
push
inc
push
xor
cmp
ja
push
xor
xchg
ret
inc
xchg
jl
rol
lahf
dec
xor
inc
or
cld
movs
add
inc
imul
and
push
mov
xor
pop
sbb
mov
data16
inc
retf
mov
lahf
push
ins
push
xor
jbe
push
scas
pop
ror
test
mov
das
mov
mov
dec
jns
nop
mov
icebp
ins
push
dec
xchg
push
cdq
inc
aad
mov
ins
inc
popf
add
data16
arpl
(bad)
pop
inc
(bad)
stc
ja
aas
arpl
mov
lock
sub
div
xchg
dec
sbb
test
out
jno
push
jg
and
inc
or
jg
pop
adc
loop
mov
js
outs
loope
ss
pusha
mov
jo
popf
fwait
dec
cmp
fwait
iret
fbld
call
loopne
or
sbb
push
and
call
lock
xor
sbb
jmp
icebp
scas
retf
icebp
jge
(bad)
std
dec
or
pop
and
fdivr
and
lahf
int
ficomp
pop
repz
mov
in
dec
cmc
adc
sbb
pushf
nop
pop
xor
ret
leave
xor
jbe
and
cli
mov
jo
add
jb
adc
jmp
(bad)
jbe
rol
push
or
xchg
test
shl
iret
and
inc
or
jno
cpuid
dec
mov
test
dec
repz
xor
inc
frstor
loop
rol
test
mov
lahf
mov
call
sahf
les
sub
inc
adc
mov
(bad)
jae
outs
pushf
(bad)
repz
cmp
jp
pop
or
xchg
xchg
adc
das
out
int3
loopne
or
ret
cmp
inc
sbb
mov
pop
pop
je
ror
pop
aad
jmp
mov
int3
or
xor
mov
js
cli
inc
hlt
retf
sub
lahf
in
(bad)
pusha
pop
adc
fdivr
mov
xchg
nop
fisttp
call
setae
lds
mov
cmp
int3
pop
fst
sub
sbb
retf
test
pop
call
ja
cmp
xchg
add
std
add
inc
or
mov
cmps
bound
mov
(bad)
inc
enter
es
sbb
sahf
es
lods
cs
cs
loopne
mov
call
lahf
mov
repz
mov
mov
sbb
xchg
addr16
stos
(bad)
push
push
cld
xchg
ror
push
jecxz
dec
xchg
repnz
mov
pop
xchg
add
fimul
adc
pusha
mov
and
jno
sub
movs
sub
mov
push
cli
aad
xor
es
dec
ror
pop
popa
fld
(bad)
mov
rcr
cmp
cmc
scas
jns
test
mov
lahf
sub
push
fild
int
mov
push
sub
jle
jno
mov
pop
retf
and
mov
xchg
pop
jno
mov
clc
cmps
sub
mov
sub
mov
and
inc
mov
or
(bad)
push
outs
mov
inc
lods
sub
cdq
js
call
adc
rol
outs
xor
(bad)
jno
loop
sub
mov
loop
call
mov
xchg
stc
pop
rcl
cmp
in
imul
cmp
clc
inc
xor
js
push
(bad)
imul
stos
ins
fwait
lods
out
dec
movs
sub
push
and
test
mov
daa
inc
mov
sahf
add
test
lock
xchg
out
jg
xor
fstp
mov
mov
jmp
xor
mov
(bad)
pop
shl
or
xchg
or
push
pop
jns
xchg
loop
add
xchg
nop
inc
pop
xor
inc
fdivrp
data16
pop
imul
arpl
sbb
loopne
sbb
add
(bad)
mov
std
ins
or
sbb
retf
movs
xor
xor
push
dec
jmp
mov
pop
jne
mov
or
jae
xchg
push
mov
sub
xchg
mov
mov
scas
out
dec
dec
mov
data16
loope
je
cmc
fild
or
adc
mov
jg
mov
popf
cli
jmp
push
fadd
sti
jl
or
das
ret
cs
push
mov
add
shl
outs
inc
dec
pop
or
sub
iret
outs
add
out
iret
std
push
inc
add
cdq
jb
adc
daa
and
pop
jl
in
push
out
xchg
and
dec
outs
add
leave
mov
dec
je
sahf
addr16
sbb
sahf
cwde
adc
xor
and
push
mov
xchg
dec
push
fcom
sti
mov
in
test
xchg
push
aaa
pop
(bad)
inc
sbb
sbb
mov
xchg
or
mov
jle
sub
jne
dec
imul
(bad)
mov
add
ds
dec
add
(bad)
fild
inc
fnstenv
xchg
jb
fmulp
(bad)
push
pop
loope
arpl
add
repz
ret
xchg
cli
mov
inc
iret
in
iret
cs
sub
ss
and
add
lock
fistp
into
dec
sar
adc
ins
movs
sbb
mov
or
pop
test
icebp
pop
pop
in
aad
bnd
and
pop
icebp
dec
pusha
in
inc
and
setnp
mov
fmul
es
xor
les
jnp
pushf
push
repnz
ins
fst
jmp
ret
pushf
int
dec
jp
stc
sub
test
pop
pusha
xchg
ja
mov
shr
xchg
repnz
pop
test
fcomp
and
(bad)
cs
aaa
xchg
out
sbb
cmp
or
xchg
push
mov
mov
xor
mov
stos
sub
and
push
stos
pop
xchg
cwde
out
fwait
lods
pop
ret
jnp
push
and
(bad)
jmp
push
dec
shr
dec
dec
pop
sub
cmps
lods
adc
cld
cli
or
cmp
pop
cmp
sub
pop
rcl
icebp
push
fnstcw
dec
test
lea
mov
xor
mov
dec
dec
adc
sti
pusha
mov
mov
xchg
inc
loope
cmp
xor
mov
cmp
mov
mov
jb
outs
cmp
dec
cmp
push
icebp
push
or
or
ds
sbb
adc
leave
inc
push
mov
push
lahf
jge
inc
popa
ret
ficomp
fimul
adc
loop
xchg
adc
in
ds
ins
mov
push
ror
fwait
mov
cdq
mul
js
jecxz
pop
adc
cmp
div
push
xchg
aaa
shr
cmp
(bad)
retf
or
jle
pop
mov
xchg
push
pop
shr
or
jl
jge
and
dec
mov
pop
icebp
mov
jb
cmps
mov
add
xlat
mov
mov
gs
lods
aad
inc
out
jnp
sub
adc
sar
ffreep
mov
push
push
outs
movs
scas
mov
mov
sahf
mov
pop
and
stos
jle
inc
cmp
pushf
ret
cld
pop
aad
dec
std
adc
push
arpl
or
stos
or
cmps
dec
inc
push
adc
fsub
in
mov
aaa
push
xchg
test
aad
cvttps2pi
or
push
or
jne
lock
mov
pop
jne
mov
sahf
ss
retf
push
into
enter
enter
sbb
and
push
jl
mov
call
nop
dec
call
loope
sub
and
push
popf
hlt
mov
mov
inc
movs
scas
lods
xchg
addr16
pop
xor
jg
xchg
loope
icebp
out
or
sbb
enter
cli
ins
and
cmp
and
dec
fiadd
jae
xor
sar
sbb
adc
cdq
cld
or
lods
or
mov
dec
push
rol
pop
mov
jg
push
les
jne
xchg
lods
(bad)
jmp
sbb
dec
test
inc
(bad)
(bad)
stos
mov
sbb
fs
lods
cvtdq2ps
or
es
jae
rcl
pop
int
jb
mov
ds
int3
or
dec
adc
popf
push
aaa
adc
lock
arpl
fs
xor
mov
loop
fmul
inc
add
xchg
(bad)
dec
mov
sbb
mov
loopne
cmp
pop
jmp
movs
cmp
imul
stos
ins
fld
and
jmp
and
xchg
mov
jg
lods
dec
xor
jno
mov
out
outs
lock
imul
inc
imul
aas
jo
test
dec
rcr
mov
and
rcr
idiv
push
dec
in
mov
push
std
icebp
ret
out
(bad)
loop
fimul
dec
daa
sub
(bad)
fmul
add
lea
hlt
mov
into
cwde
test
lock
mov
stc
adc
dec
lock
clc
mov
mov
lds
aaa
inc
fnstsw
inc
push
fmul
cs
int
pop
cmp
mov
xchg
sub
inc
lea
sbb
out
in
hlt
clc
fnstsw
xor
and
out
not
cmps
pushf
push
lahf
jb
dec
mov
push
push
push
fnstsw
add
movs
data16
and
jne
lahf
not
popa
mov
jge
out
fcos
xor
mov
xor
adc
sub
jmp
cli
push
mov
in
push
sub
xor
pop
jb
mov
retf
loop
mov
cld
sub
shr
sub
ret
lods
sahf
ja
cs
lahf
hlt
test
mov
dec
cmc
popf
pop
ret
mov
leave
mov
cvtpd2dq
enter
xchg
aad
(bad)
pop
add
shl
dec
ds
div
popa
pop
jo
pop
leave
xor
jmp
test
mov
ja
mov
je
jp
fs
mov
push
add
cld
cwde
dec
sub
push
stc
addr16
int
movs
(bad)
sbb
sbb
inc
lds
mov
jge
jg
stos
leave
cmp
cmp
cmp
es
pop
pcmpeqw
ret
icebp
sub
mov
mov
dec
enter
sbb
jo
dec
cmp
jmp
pop
add
mov
iret
pop
out
cmp
inc
add
fadd
(bad)
int
test
cmp
adc
xlat
mov
outs
jp
adc
or
add
or
push
sti
sti
cs
pop
lods
xor
pop
test
pop
or
les
pop
pop
sti
mov
push
sbb
aaa
xchg
hlt
mov
push
mov
inc
aaa
(bad)
jle
inc
in
mov
ins
jbe
cwde
cwde
jge
mov
nop
fadd
xchg
pop
ja
fs
popa
mov
cmp
and
mov
fnsave
or
xor
xor
push
sbb
push
in
mov
xchg
(bad)
cmp
lea
shl
inc
xor
popa
sti
jb
mul
stc
push
retf
mov
or
mov
(bad)
(bad)
xchg
adc
pop
cld
sub
mov
mov
xchg
jecxz
jl
xchg
xor
mov
ret
int3
push
movq
pop
cmp
xor
jae
aad
xor
shl
mov
push
dec
cmp
ror
add
sub
fmul
inc
add
pushf
pop
adc
adc
inc
jno
push
shl
jae
pop
es
pop
inc
mov
pop
jp
lock
fst
sub
mov
aam
cmps
rol
dec
sbb
cmp
int
lds
jb
clc
out
shr
ds
mov
and
(bad)
mov
adc
jge
mov
push
fxch
xchg
pop
mov
daa
mov
or
fist
cdq
and
lock
and
jns
scas
pop
sar
cmp
jbe
xchg
mov
cmp
repz
mov
dec
test
lahf
sub
(bad)
leave
ds
hlt
sub
in
pusha
push
ja
nop
imul
and
xchg
pop
mov
xchg
dec
call
daa
lahf
daa
cmps
ret
data16
adc
lds
pop
fst
mov
push
pushf
cld
lods
xchg
fcomp
fst
or
inc
sbb
dec
xchg
out
push
fs
jne
mov
dec
ds
in
(bad)
jne
fcom
es
into
push
les
sbb
adc
das
stc
mov
and
ins
push
hlt
cdq
xchg
les
pop
out
jns
ror
lahf
iret
repnz
cmc
scas
add
test
mov
(bad)
int3
clc
js
and
mov
(bad)
jb
push
fs
and
xor
icebp
das
rol
out
fucomi
ret
test
repnz
in
lahf
or
add
mov
outs
sahf
cmp
and
cwde
shl
sub
sub
fist
mov
fisubr
movs
mov
sar
inc
xor
es
test
and
pop
add
push
push
rol
jnp
mov
xchg
ja
rol
and
sub
pop
push
mov
jl
mov
push
and
pop
dec
inc
imul
fistp
mov
sub
jg
lds
pop
faddp
ror
pop
ins
ja
adc
cmp
(bad)
lods
fs
ins
jmp
inc
jo
add
(bad)
and
into
cmc
(bad)
mov
cmp
aad
cmp
fbld
jl
rcl
clc
cld
jne
aas
push
mov
outs
fstp
loopne
cmp
or
fsub
xchg
xchg
mov
add
cdq
or
arpl
inc
adc
cmp
dec
xchg
mov
enter
(bad)
adc
mov
mov
sub
out
or
ffree
ins
sti
aam
push
fwait
xchg
xor
mov
mov
adc
cmps
sahf
inc
shl
push
lea
push
and
daa
nop
stos
fdiv
mov
leave
rcl
sar
ins
push
inc
sbb
mov
pushf
mov
pushf
mov
or
jle
mov
xor
fnstenv
outs
cmp
jge
inc
xchg
call
retf
mov
in
mov
icebp
jge
sub
(bad)
dec
inc
add
fldz
bound
cmp
or
icebp
cs
sub
adc
ror
pop
sbb
fidiv
or
push
sbb
leave
jge
mov
mov
popf
mov
mov
enter
pop
call
in
test
add
jmp
aad
call
inc
sbb
jno
inc
call
arpl
ja
cmp
pop
sub
mov
loopne
bound
add
ror
out
push
lods
dec
sbb
xchg
cmp
or
imul
dec
cmps
xchg
push
movs
out
inc
mov
lds
xchg
imul
je
add
mov
test
iret
outs
pop
push
popf
sbb
popa
adc
mov
nop
loope
xchg
xor
sub
in
das
sbb
ins
pushf
cmc
or
shl
lods
push
or
stc
in
fild
shl
loopne
push
call
call
and
popf
(bad)
sub
sbb
test
and
and
push
int
cmp
test
das
mov
(bad)
xor
and
push
jmp
adc
push
out
or
jl
sbb
xchg
and
cdq
test
mov
test
data16
fcom
popfw
rcr
fs
push
loopne
(bad)
shr
cwde
xchg
sub
cmp
mov
clc
pop
loope
dec
icebp
cmp
xor
add
xlat
in
ja
daa
in
cmc
adc
inc
and
or
out
add
ja
gs
dec
dec
mov
out
push
cs
add
add
mov
mov
jno
pop
in
sahf
cmc
sbb
pop
mov
ins
retf
inc
mov
pop
fwait
sbb
out
pop
fwait
mov
mov
stos
fnstsw
mov
mov
sub
and
adc
xor
adc
dec
pop
or
mov
inc
push
push
mov
mov
shr
mov
inc
inc
imul
outs
frstor
aad
ror
push
setnp
xchg
adc
mov
test
cmp
push
mov
pop
jnp
outs
xor
sub
mov
clc
loop
mov
in
in
ficom
push
sub
fwait
rep
xchg
adc
js
in
adc
enter
in
adc
push
dec
(bad)
push
sbb
and
cwde
in
sub
sbb
mov
ds
pop
hlt
jbe
dec
ror
jecxz
into
add
adc
dec
mov
push
leave
mov
add
dec
push
fwait
and
and
cld
cmp
adc
in
push
xchg
call
pusha
mov
sti
jmp
cwde
(bad)
sbb
pusha
call
pop
and
or
shl
(bad)
das
nop
les
sbb
and
xor
int3
les
dec
in
inc
icebp
fsub
daa
xor
fist
mov
pushf
add
popa
lds
cdq
aam
(bad)
mov
sbb
ins
int
enter
pop
pop
iret
dec
sub
clc
repz
cmps
imul
pop
xchg
jns
scas
shl
mov
or
mov
pop
(bad)
in
sbb
xchg
leave
scas
pop
push
mov
and
movs
cmp
inc
dec
mov
loop
dec
adc
lods
into
fcomp
(bad)
int
xchg
adc
outs
or
and
shr
add
mov
sbb
add
sahf
je
ja
jo
pop
push
loopne
mov
loopne
add
pop
das
ret
jno
addr16
add
mov
inc
xchg
cmp
call
push
adc
cmp
push
aaa
aam
rcl
inc
call
mov
test
lds
ror
add
pop
and
stos
and
sbb
and
aas
aad
loop
retf
(bad)
retf
(bad)
mov
mov
repz
loop
sbb
in
iret
push
inc
call
pop
jl
cmp
xor
test
cmp
cmp
fwait
icebp
enter
mov
ret
xlat
cmps
mov
and
imul
ins
cmc
popf
out
stos
xchg
xor
call
or
loopne
and
out
cdq
sub
sbb
not
jno
stos
imul
nop
inc
xchg
loop
mov
ds
push
push
loop
adc
inc
xlat
cmp
push
push
mov
call
mov
xor
push
enter
das
ja
jb
push
cmps
aaa
std
add
test
adc
into
mov
mov
mov
in
mov
jmp
rcl
sub
push
pushf
inc
repnz
xlat
std
movs
or
out
ret
dec
out
push
fs
and
outs
popa
dec
inc
or
sbb
je
xor
pop
rcl
xor
xlat
dec
ja
jl
cmp
add
(bad)
jae
neg
sbb
sub
jns
icebp
xchg
jb
jbe
(bad)
pop
jnp
sahf
xchg
inc
push
push
mov
rcl
adc
pop
pop
in
pop
mov
movs
cdq
inc
adc
fs
pushf
ret
repnz
ins
and
dec
int3
inc
dec
data16
aas
mov
jl
jno
push
mov
cwde
sbb
inc
aam
hlt
xlat
stos
mov
xlat
cs
mov
inc
cs
in
cmp
and
adc
jbe
mov
mov
and
pushf
pusha
psrlw
test
jmp
inc
popa
cmp
add
iret
push
test
and
mov
push
test
pushf
push
xor
sub
mov
add
ret
sar
cld
repz
xlat
in
dec
inc
jecxz
inc
cmps
rcl
sbb
add
loop
loopne
lods
jmp
mov
and
mov
dec
xchg
and
(bad)
mov
mov
xchg
inc
stc
mov
inc
retf
push
dec
out
and
mov
xor
shr
pop
cli
in
jg
stc
sbb
mov
out
loopne
mov
in
sub
imul
test
xor
(bad)
sub
fbld
outs
and
lods
sub
push
jg
mov
scas
sbb
xchg
js
mov
add
repz
cmc
pop
int3
pop
cmps
out
sbb
inc
cmp
ret
push
(bad)
dec
add
jne
(bad)
test
sub
add
cmp
add
xchg
popa
sbb
mov
jecxz
cmp
mov
sub
push
into
out
movs
xchg
popf
out
arpl
in
jge
ds
cmc
inc
cmp
ins
in
xlat
out
xlat
mov
ret
call
pop
ret
test
sub
adc
popf
fstp
xor
and
cmp
pop
xor
jno
mov
(bad)
cmc
(bad)
(bad)
mov
cld
sar
mov
pop
cmps
dec
out
xchg
call
cwde
aad
mov
add
or
add
mov
dec
imul
cmc
leave
sub
pop
mov
mov
lock
loope
stos
xchg
repz
or
mov
dec
jge
call
mov
jp
(bad)
mov
adc
mov
pop
or
ror
jge
mov
jno
push
pop
imul
xor
push
mov
inc
mov
mul
dec
push
pop
pushf
fistp
retf
xchg
iret
dec
out
push
and
xchg
popa
dec
mov
sub
xchg
mov
xchg
jnp
int
cdq
jnp
inc
(bad)
pushf
mov
ds
lea
jmp
test
push
push
icebp
dec
pop
pop
sub
xor
(bad)
dec
mov
fisubr
xor
out
inc
hlt
mov
outs
and
pop
push
mov
pop
mov
fs
test
out
mov
call
(bad)
fcmovnb
(bad)
cld
(bad)
cli
call
cdq
ss
adc
popa
sub
mov
test
enter
and
cmp
xchg
mov
jge
in
ss
cld
sub
mov
repz
pop
popf
mov
out
arpl
outs
popa
push
stos
shl
pop
jg
sub
js
fbstp
rcr
arpl
or
dec
xor
ins
lds
fwait
push
add
add
push
movs
jae
or
repnz
js
mov
scas
(bad)
loopne
cmp
jns
lods
pop
add
(bad)
in
les
pop
fldenv
(bad)
jmp
pop
mov
cli
scas
mov
in
push
xchg
daa
aad
mov
adc
dec
fisubr
pop
and
mov
push
or
out
push
inc
out
scas
cmp
dec
jecxz
scas
jecxz
loope
mov
lea
loop
clc
pusha
lds
xor
(bad)
pop
fmul
inc
mov
mov
ret
outs
fwait
cdq
mov
stos
jb
fnop
in
adc
enter
sub
sub
push
clc
add
jge
xchg
and
cmp
xlat
mov
pusha
(bad)
sub
add
std
mov
xchg
ins
sub
lods
mov
das
push
sbb
movs
inc
mov
test
jo
daa
inc
aad
push
jb
mov
mov
inc
jg
mov
jns
loop
or
mov
es
sbb
lods
jl
int
repnz
push
fst
inc
ins
leave
in
mov
xchg
data16
outs
add
adc
les
pusha
xchg
jno
push
sbb
cmps
xor
sub
pop
adc
jmp
ds
stos
push
test
retf
sbb
cmp
retf
xor
dec
call
in
loopne
in
add
retf
xor
lods
mov
js
or
xlat
xchg
push
sahf
mov
mov
fisubr
inc
jg
xor
rol
fdiv
or
fsin
push
mov
popa
or
xor
movs
aad
(bad)
pop
shl
cmp
xchg
das
push
in
mov
or
repnz
sbb
mov
mov
sub
mov
cmp
or
jae
ins
mov
jg
xchg
sbb
gs
inc
std
xor
in
movs
popa
adc
lahf
mov
cmp
pavgb
daa
xlat
loope
cmp
fild
mov
add
xchg
mov
cmc
into
iret
imul
dec
pop
jmp
stos
xchg
aad
push
mov
push
stos
jns
(bad)
sub
loop
jns
pop
and
cmps
sti
rcl
out
stos
cdq
leave
inc
ss
jecxz
mov
inc
jbe
lahf
pop
jno
daa
jno
mov
aaa
mov
inc
cmp
mov
push
es
test
sub
sti
inc
fs
(bad)
aad
and
jl
or
mov
inc
sbb
adc
das
js
mov
test
sbb
sar
sbb
test
popa
inc
or
stos
add
add
mov
movs
stc
pop
jmp
pop
retf
retf
mul
test
or
cmp
mov
cmp
cmp
mov
lods
mov
dec
push
dec
data16
pop
and
out
jmp
pop
sub
outs
push
aaa
push
retf
dec
push
xchg
lods
dec
cmp
sbb
push
ja
pop
shl
cld
in
cld
mov
mov
(bad)
ret
popf
test
lea
cdq
inc
mov
ss
lea
out
sub
movs
sbb
loope
fcom
xchg
in
lock
loopne
mov
push
push
movs
mov
sbb
xchg
fimul
lahf
call
jbe
mov
ss
lods
std
leave
cmp
xchg
inc
pop
jne
jge
scas
jbe
sbb
jbe
sub
lods
loop
mulps
mov
cli
(bad)
xor
and
movs
ret
pop
or
(bad)
jbe
cld
adc
sub
fnstcw
inc
or
cmp
push
sub
jmp
sub
aaa
jg
lock
movs
std
jo
adc
cmp
arpl
ss
aam
pop
lods
test
pop
(bad)
lock
call
push
call
cmp
lock
lods
xchg
nop
jge
jmp
mov
loop
fadd
imul
stos
xchg
xchg
xchg
mov
sub
bound
xor
(bad)
jns
mov
ss
out
xchg
cmp
in
jl
sbb
popf
and
stos
call
std
jnp
shl
add
add
fistp
lahf
inc
mov
js
inc
leave
jmp
and
jle
cmp
jle
inc
mov
(bad)
sti
bound
cmp
rol
cld
dec
or
sbb
ss
cmp
pop
sub
add
push
push
pop
out
jmp
mov
adc
(bad)
cld
imul
and
pop
iret
cli
scas
sbb
sub
sub
cmps
loopne
or
aad
xor
repnz
dec
pop
xchg
call
mov
sub
out
stos
sbb
imul
(bad)
ficom
or
push
sub
mov
mov
dec
jg
inc
pop
pushf
sub
jmp
push
mov
pop
sbb
pop
cmp
mov
mov
gs
jl
dec
in
pop
bound
push
push
jmp
cld
mov
inc
fwait
scas
bsr
pop
sbb
jecxz
in
add
sbb
fisttp
mov
sbb
clc
jmp
push
and
and
mul
in
xor
fcom
add
(bad)
mov
sub
inc
leave
repnz
fisub
inc
sbb
call
into
fcomp
xchg
fisubr
(bad)
hlt
mov
mov
sbb
aam
inc
movs
stos
push
jo
mov
sahf
pop
fld
adc
pop
call
sub
mov
cs
cmp
(bad)
test
adc
cs
jmp
push
enter
ja
push
cmp
imul
fs
cli
push
jg
addr16
fstp
mov
dec
mov
pushf
jns
cmps
gs
ins
es
push
mov
mov
mov
push
es
hlt
push
aam
jp
test
add
lods
lods
jae
call
inc
sub
shl
add
lods
fstp
out
mov
add
sbb
into
push
push
push
xchg
push
sbb
das
inc
ds
pusha
sbb
mov
xor
fisub
mov
sbb
ror
fstp
ret
inc
scas
aaa
ins
in
inc
jecxz
cmp
adc
or
jp
xlat
les
pop
cmps
(bad)
pop
mov
cmp
nop
popf
ret
out
lock
lea
xor
sub
cmp
mov
xchg
les
ds
fldenv
fild
and
(bad)
mov
mov
enter
in
aas
ret
(bad)
sub
fstp
inc
cmp
push
into
fwait
or
cmp
not
or
aam
mov
ins
dec
movs
xchg
mov
cmp
(bad)
(bad)
push
sub
cmp
sar
loop
pop
fld
xor
xchg
add
mov
mov
jae
mov
inc
inc
lods
pop
adc
inc
push
and
(bad)
inc
repnz
cmp
icebp
inc
xor
pop
mov
pop
fisubr
and
push
xchg
mov
xor
loope
jbe
adc
pop
jns
push
and
sub
lds
ds
xor
jbe
in
ret
sbb
xor
jle
dec
jecxz
test
cmp
test
sbb
outs
mov
sar
pushf
arpl
jae
rol
inc
mov
dec
mov
sbb
mov
push
and
push
mov
xchg
shl
cs
dec
push
fnstsw
icebp
fistp
imul
xor
dec
pop
sbb
cmp
out
stos
test
fadd
jmp
adc
ins
test
pop
aam
mov
pusha
sbb
mov
inc
lods
push
inc
push
cmovs
jle
dec
shl
sub
push
sbb
cmp
jbe
pop
arpl
xchg
scas
xchg
repz
je
imul
push
push
fdivr
add
out
jmp
and
movs
je
es
icebp
fcom
std
test
sbb
out
div
push
fimul
xchg
nop
pop
sub
cmp
inc
scas
add
mov
mov
outs
xchg
lock
sbb
sub
call
mov
je
test
fidivr
dec
cmp
dec
mov
cmp
fs
add
pop
loope
ja
nop
mov
fidiv
push
xor
bound
jp
pop
mov
pop
dec
mov
add
mov
adc
daa
and
sar
js
dec
jae
cld
xchg
hlt
fs
in
lods
sbb
cmp
cli
pop
ss
jmp
sub
and
pop
fld
cmp
fisttp
mov
or
(bad)
je
aas
mov
cwde
stc
iret
sbb
int
and
ins
repz
inc
sub
fidivr
jns
cmp
add
xchg
jno
mov
mov
cmc
fisub
test
add
mov
jmp
outs
xchg
or
ret
sbb
and
jg
sbb
cmp
stos
ret
in
mov
dec
jmp
outs
inc
sti
in
sbb
inc
fs
sar
(bad)
cmp
hlt
pop
jmp
enter
jae
outs
xlat
push
cmp
fidivr
rol
into
mov
xchg
std
push
jbe
cmp
sti
and
push
jns
outs
mov
(bad)
das
std
mov
xchg
push
mov
sahf
(bad)
nop
xchg
mov
push
ret
nop
sahf
mov
cmp
add
int3
mov
punpckhbw
mov
das
mov
lods
jmp
ret
xor
sub
inc
and
in
(bad)
enter
int
retf
popa
cmp
popa
aaa
mov
outs
sahf
fiadd
dec
mov
and
sbb
std
leave
jae
push
adc
bound
and
cmps
xchg
cmp
jle
cli
test
push
fistp
icebp
mov
shl
mov
and
mov
ret
pusha
mov
call
xor
dec
xchg
mov
stos
jns
push
std
in
cwde
dec
jmp
arpl
sbb
xchg
lahf
cmp
outs
les
mov
(bad)
clc
jbe
stos
adc
or
xlat
sbb
jns
dec
xchg
mov
or
xchg
fnstsw
ficom
mov
or
dec
movs
and
mov
mov
fstp
loop
adc
push
sbb
ret
add
out
pop
das
cld
and
pop
(bad)
loope
mov
imul
int3
ds
ss
xor
xor
jp
sbb
clc
test
sbb
ret
jp
jno
sub
mov
pop
cli
outs
fwait
pop
inc
ja
test
jo
popa
xor
scas
push
jmp
inc
add
in
pop
scas
jbe
shl
sahf
je
push
sub
or
or
cmps
jmp
sub
pop
push
aaa
sar
mov
sub
and
xor
call
arpl
push
fidivr
sub
into
add
mov
add
jmp
inc
popa
mov
xchg
loopne
shl
mov
dec
mov
push
cmps
push
mov
daa
in
jle
push
bound
xchg
es
cli
mov
loope
adc
add
loope
popa
(bad)
repz
jo
loop
and
xchg
aaa
sbb
test
jg
inc
mov
jmp
(bad)
xchg
dec
mov
add
ret
xor
jle
inc
sbb
icebp
ret
adc
ja
je
test
enter
test
add
inc
adc
pop
sub
or
mov
stos
cmps
sub
es
sbb
sahf
loopne
fidiv
jcxz
push
push
jmp
lea
ins
ror
fisttp
popa
ins
aad
fst
mov
sbb
call
mov
mov
push
fmul
pop
lds
push
push
push
lahf
mov
cmp
jo
test
leave
je
jle
mov
push
xor
clc
sbb
jge
les
popf
aad
pop
int3
sbb
add
cli
cli
jp
sub
in
pop
ror
aaa
aas
adc
ret
loopne
add
jle
sub
or
or
in
mov
jg
inc
xchg
adc
imul
jg
sub
mov
lock
mov
neg
cmc
push
or
mov
push
(bad)
xchg
fbstp
ja
imul
xchg
out
cmp
out
sbb
dec
aad
pop
loope
xchg
cmp
seto
mov
std
ror
and
sbb
clc
inc
ret
leave
js
dec
outs
cdq
jns
fist
push
add
movs
and
pop
sbb
aaa
adc
int3
imul
mov
call
xchg
pop
loopne
push
ror
lock
jle
dec
cmps
cld
jnp
jbe
xchg
inc
in
out
fmulp
jb
jl
pushf
mov
outs
cmps
or
cmp
stos
popa
leave
push
inc
mov
fld
test
jl
push
xchg
call
add
dec
jne
scas
sar
mov
pusha
jae
add
jecxz
xchg
int
xchg
add
fcom
xchg
je
dec
xor
popa
ds
xchg
jge
pop
ror
arpl
stc
sahf
jl
fnsave
inc
push
jns
and
leave
test
movs
stc
jbe
paddb
cmp
out
dec
push
and
or
xchg
mov
out
scas
out
aaa
dec
cmps
lock
pop
sbb
imul
out
les
jb
mov
test
scas
cs
cmp
xchg
test
dec
adc
push
mov
jnp
scas
test
xchg
jecxz
push
xchg
xor
loop
mov
sub
(bad)
in
aas
cmp
mov
mov
loope
mov
(bad)
stc
stos
cmp
xor
push
shl
push
hlt
addr16
out
xor
(bad)
push
push
test
je
cmp
mov
and
cdq
loop
xchg
inc
xchg
fimul
imul
dec
xchg
push
movs
nop
test
aas
fisttp
in
ins
adc
adc
and
xchg
fist
pop
popf
xchg
mov
xchg
inc
adc
cmps
inc
sub
jmp
pop
jmp
mov
jo
push
loope
mov
ja
lock
aas
imul
pop
cmps
ins
jnp
adc
imul
xchg
(bad)
xor
xchg
jmp
push
xchg
aad
sbb
jns
(bad)
call
std
add
sti
mov
fcmovnb
movs
cwde
pop
ret
repz
enter
mov
(bad)
jmp
sbb
mov
sub
lds
jnp
sbb
mov
xchg
int3
sub
and
call
push
int
xchg
pop
mov
lea
mov
fisttp
cmp
mov
loope
ja
scas
jne
out
mov
rol
ret
and
out
into
hlt
fst
inc
jne
pop
pop
push
mov
pop
mov
push
cmp
retf
shr
pop
test
es
mov
add
mov
std
jo
nop
dec
sub
push
sbb
sbb
adc
mov
test
scas
shl
dec
aas
sub
xor
fnsavew
outs
cmp
sti
fsubr
rcr
sub
inc
fist
retf
sti
cmp
(bad)
sbb
ds
lea
dec
aad
mov
mov
mov
mov
call
outs
test
adc
push
jnp
dec
mov
repz
retf
mov
aad
icebp
jbe
into
cs
dec
pop
jp
pop
xchg
pop
cmp
daa
test
adc
sbb
cdq
sub
inc
sbb
outs
adc
adc
xor
pop
jmp
pusha
hlt
push
sahf
outs
outs
dec
test
stos
gs
data16
or
push
xor
data16
mov
les
adc
arpl
movs
pusha
push
mov
cmc
adc
and
in
mov
scas
dec
or
jae
cdq
push
fcom
dec
xor
pop
push
addr16
stc
jmp
shl
adc
xchg
les
cli
push
inc
jne
push
stos
push
sahf
daa
dec
ins
out
ja
mov
mov
data16
sub
jecxz
test
ins
jb
push
push
nop
es
adc
add
cmp
stos
adc
dec
es
cmps
les
xchg
add
icebp
sbb
jbe
imul
leave
fld
sbb
inc
test
and
pop
dec
sub
out
imul
pushf
sub
out
xchg
cmc
or
mov
addr16
fiadd
jmp
mov
adc
dec
stos
mov
mov
lahf
aam
(bad)
jmp
mov
in
and
in
neg
jo
test
lods
iret
loopne
lods
(bad)
sbb
in
movs
aaa
outs
mov
rcr
popf
adc
xor
icebp
jbe
jle
test
repz
lock
aaa
nop
out
sahf
push
out
sub
cmp
xor
repnz
mov
(bad)
pop
movs
pop
xchg
add
jle
sub
adc
jmp
jge
pop
shl
scas
out
lds
nop
test
inc
push
call
sub
iret
or
js
or
jb
fst
adc
adc
or
test
mov
jmp
out
adc
cmp
adc
aaa
add
push
test
sar
icebp
add
pop
ret
mov
hlt
stos
test
sub
adc
popf
cmc
jp
(bad)
loope
outs
movs
sbb
outs
xchg
rcr
leave
in
pop
cmp
mov
push
cmps
inc
shl
cmp
pusha
ss
pop
dec
xchg
push
pusha
cs
ss
in
jne
push
lea
(bad)
adc
not
push
jbe
mov
mov
lock
not
mov
pop
push
xor
sub
mov
sti
daa
lahf
add
lock
mov
(bad)
in
test
cmp
adc
cmc
mov
out
call
scas
mov
pop
adc
setle
or
xchg
arpl
call
mov
and
cmp
arpl
cmp
int3
add
fbstp
pop
jns
jae
call
iret
out
daa
jl
and
int3
shl
mov
mov
stos
test
(bad)
fisub
mov
cmp
jl
les
or
pop
fadd
pop
push
leave
in
mov
sahf
adc
xchg
in
test
add
sbb
xchg
jmp
scas
sub
or
xchg
call
add
xchg
dec
inc
sti
es
jbe
fisttp
sub
gs
xchg
pop
adc
cmps
pop
sbb
add
or
dec
pop
mov
jmp
and
or
jmp
or
frstor
test
loopne
sub
xchg
sbb
adc
push
add
sub
mov
cwde
pop
in
xchg
test
push
lock
daa
mov
sbb
xchg
mov
dec
xor
mov
pop
cmc
imul
out
push
jge
inc
cmps
pop
mov
dec
jg
mov
in
sub
mov
scas
(bad)
pop
inc
mov
inc
inc
imul
mov
inc
push
pop
jle
in
pusha
pop
dec
cli
cdq
push
(bad)
aad
cmp
xor
add
cmp
(bad)
and
out
jg
inc
mov
pusha
mov
cmps
pop
in
call
in
ret
lods
cmp
mov
dec
xlat
fdivr
xchg
fbld
push
push
inc
loopne
fneni(8087
mov
(bad)
pop
test
test
cdq
cmps
loope
lods
out
adc
push
nop
mov
test
inc
mov
pop
dec
xchg
sbb
fidivr
into
adc
inc
movs
int3
push
pop
sub
fild
cld
inc
mov
add
out
mov
push
pop
jle
adc
inc
jl
inc
jp
shr
ret
or
in
mov
sbb
pop
add
sti
jl
inc
cwde
bound
shl
arpl
ds
mov
or
in
adc
add
cmp
(bad)
cmp
fidiv
in
outs
ins
pop
(bad)
xor
sbb
push
scas
and
nop
cmp
pop
aaa
test
xlat
sbb
cwde
and
cli
mov
aas
push
shr
dec
(bad)
jge
dec
or
jg
sbb
push
mov
push
or
repz
loop
int3
adc
loopne
cmp
inc
pusha
stos
cli
shl
imul
sub
daa
int3
retf
and
dec
mov
sar
loope
stc
pop
and
(bad)
(bad)
pop
adc
das
mov
mov
sti
test
dec
sub
mov
retf
ds
inc
xor
(bad)
jmp
push
fidiv
fsubr
into
cmp
in
mov
jmp
or
mov
dec
out
or
mov
pop
mov
icebp
imul
mov
mov
setns
hlt
sti
mov
sbb
jecxz
sbb
(bad)
clc
or
jmp
test
cmp
xchg
mov
das
sbb
fst
gs
call
test
fs
xchg
and
inc
push
xchg
ror
dec
fcom
and
pop
dec
adc
pop
call
sbb
in
out
out
icebp
int3
jge
bound
sbb
pop
loop
dec
sbb
add
jno
inc
std
dec
sub
pop
xor
jae
jne
dec
push
mov
xor
repz
div
js
mov
mov
pusha
or
mov
pop
jecxz
out
out
test
xor
lock
adc
sbb
sbb
lods
fdivr
cmc
adc
jo
or
mov
add
dec
mov
fist
cmps
data16
mov
jb
out
loope
leave
mov
or
push
push
rcl
cmp
push
popa
ret
out
dec
(bad)
rol
mov
jmp
adc
int
pop
sbb
cld
pop
enter
stc
nop
clc
mov
sar
(bad)
mov
cs
push
ror
out
jno
dec
sti
inc
js
mov
ja
inc
cmps
(bad)
mov
lahf
pop
pop
ficom
and
dec
out
jnp
(bad)
adc
add
ins
leave
xor
jle
jl
aas
pop
mov
aaa
arpl
jmp
mov
push
pop
in
cmp
jmp
xlat
adc
mov
add
hlt
loopne
and
movs
mov
jb
or
adc
into
mov
ret
mov
sbb
in
mov
inc
retf
and
inc
adc
outs
mov
retf
inc
shr
push
inc
inc
pop
xchg
jp
push
(bad)
xor
test
in
cmps
and
cmp
xchg
ret
repz
push
sti
and
dec
je
(bad)
pop
xchg
sar
mov
mov
cmp
mov
fisubr
push
lods
adc
sub
ss
xchg
fcomp
jmp
mov
cmp
pop
cld
mov
adc
js
sahf
retf
and
mov
jb
pop
sti
inc
addr16
ss
pop
dec
shl
cmps
sbb
inc
or
int3
sbb
jbe
mov
pop
call
push
dec
xor
adc
loopne
nop
sbb
stos
fwait
cmp
sub
cmps
sub
pop
inc
xchg
hlt
push
movs
push
mov
popf
mov
dec
aad
es
mov
jnp
ret
iret
mov
into
(bad)
fsub
fsubrp
aaa
nop
cld
cmp
or
or
mov
mov
inc
mov
cmc
mul
sbb
push
mov
bnd
push
mov
icebp
popa
cmps
adc
inc
leave
cdq
shr
pop
call
retf
scas
push
out
push
mov
outs
sbb
sahf
pop
gs
mov
mov
dec
cld
fxtract
mov
xchg
or
push
push
mov
jnp
inc
add
jg
jo
adc
rcr
and
dec
idiv
inc
sahf
sar
(bad)
fcom
ficomp
cmp
das
mov
mov
mov
mov
rcl
test
push
shl
inc
push
(bad)
dec
sbb
imul
std
add
out
sti
imul
ja
retf
mul
push
mov
jno
mov
inc
popa
sbb
mov
ds
hlt
jbe
xlat
pop
fistp
ds
leave
aad
cmps
jnp
out
das
and
jg
pop
scas
dec
push
sub
dec
sti
xchg
or
retf
xchg
pop
inc
and
lds
jl
je
xchg
sbb
outs
push
mov
jmp
adc
push
add
mov
adc
sub
mov
adc
vdivps
push
mov
pop
mov
adc
push
mov
or
xchg
nop
dec
inc
mov
(bad)
jno
pop
iret
pushf
movs
psrlq
push
retf
sub
and
mov
aam
mov
adc
jmp
xor
adc
in
ja
movs
pop
fstp
dec
repnz
ret
and
jno
je
icebp
push
inc
imul
mov
fst
ror
pop
(bad)
or
cmp
mov
jnp
rol
scas
dec
imul
scas
dec
test
outs
and
retf
(bad)
jo
sbb
push
scas
out
sub
inc
jbe
xchg
repz
dec
movs
xchg
or
bound
add
shl
xchg
shr
xchg
add
adc
xor
fwait
in
fwait
cld
xor
(bad)
mov
and
aad
cmp
fimul
pop
loope
mov
pop
mov
sub
imul
in
push
call
sar
xchg
mov
xor
mov
scas
push
outs
cmc
les
dec
add
in
xchg
jle
lods
test
repz
dec
mov
loopne
retf
fldpi
(bad)
jbe
cs
imul
jmp
stos
pop
in
mul
cmp
sub
neg
mov
dec
xchg
lock
out
xchg
lea
xchg
push
jb
out
dec
fist
lods
push
inc
mov
inc
adc
leave
xor
scas
cmp
xchg
lock
or
inc
fldenv
(bad)
pop
and
pop
fistp
dec
jge
inc
cmp
cmc
push
aas
sub
sbb
sub
xor
dec
out
mov
push
ja
pop
mov
dec
pop
pusha
xchg
xor
add
pop
cwde
fild
and
cmp
out
ret
mov
inc
xor
push
sbb
jb
mov
jge
daa
mov
adc
mov
push
and
adc
mov
jmp
push
jmp
add
pop
retf
or
test
adc
lds
js
loop
les
(bad)
pop
mov
(bad)
dec
test
mov
pop
adc
xor
sar
jge
push
fisttp
imul
inc
mov
std
cli
cmp
out
mov
xor
popa
jno
fimul
xchg
dec
ins
bts
test
ds
(bad)
mov
mov
aaa
and
pop
jmp
aas
sbb
out
(bad)
pop
and
sub
xchg
aam
enter
mov
mov
mov
push
into
aaa
clc
loop
mov
sub
cli
stos
push
lds
inc
sub
cld
outs
ja
imul
pop
leave
add
sbb
mov
cmp
div
add
cmp
dec
jno
inc
mov
inc
xor
int
pusha
popa
xor
xchg
cs
add
and
or
pop
data16
jge
xchg
outs
std
retf
cli
xchg
sbb
mov
loop
sti
test
aaa
retf
sub
fild
push
cmp
add
pop
xchg
mov
jo
cli
sbb
mov
jmp
inc
or
sub
in
popf
xlat
(bad)
jge
push
dec
aad
and
mov
push
mov
shl
loopne
lahf
push
push
cmp
(bad)
pushf
mov
mov
test
pop
xor
xor
lods
jne
adc
dec
sbb
into
sbb
push
out
inc
cmp
sbb
mov
push
popf
repz
fdivr
xor
mov
push
or
push
xchg
(bad)
mov
jns
cdq
(bad)
mov
cmps
xor
mov
mul
jnp
and
pop
push
cli
adc
mov
(bad)
cmp
xor
in
jmp
sbb
adc
pop
pop
xchg
xchg
ins
(bad)
pop
sbb
iret
mov
int3
lods
mov
pop
int3
ret
mov
jmp
pop
out
int
mov
adc
test
and
jmp
mov
xor
fwait
dec
push
or
out
js
imul
fsubr
test
std
movs
sub
repnz
and
fwait
adc
or
jmp
cmp
push
je
mov
push
cmps
mov
aas
leave
fld
mov
jmp
outs
inc
push
inc
jmp
out
popf
and
xchg
stos
pop
bound
sub
adc
mov
jno
out
and
aam
cmps
pop
addr16
add
adc
xor
in
aam
scas
loope
aad
xchg
ss
jl
push
cs
in
lods
leave
jl
pusha
(bad)
aas
jle
sub
mov
loopne
jmp
jbe
div
test
xchg
hlt
pop
inc
sub
lock
int3
push
jle
and
clc
push
jae
mov
jmp
movs
frstor
es
inc
fwait
adc
out
lea
pop
pop
loope
inc
mulps
push
scas
fnsave
and
in
dec
jbe
cmp
mov
repnz
mov
loope
outs
fisttp
test
push
and
pop
retf
push
add
mov
test
push
mov
jp
jns
repnz
fisttp
xor
cmc
mov
pop
scas
int
adc
xor
int
lock
and
dec
mov
adc
jmp
fbld
sbb
aad
mov
leave
push
mov
xlat
or
push
daa
push
mov
outs
into
out
(bad)
lea
adc
pop
stos
cs
cmc
fcomi
enter
mov
or
xchg
movs
and
cmp
sbb
fnstcw
push
lahf
pop
leave
retf
les
shr
mov
int3
movs
dec
dec
mov
mov
cdq
mov
lods
add
pushf
pop
rol
into
sysexit
xchg
adc
popf
stos
or
pop
jge
not
pop
in
sub
mov
loopne
(bad)
push
jnp
outs
jge
aas
add
cmps
xor
ds
outs
and
push
xor
out
cmp
ins
dec
jo
mov
sbb
xor
jb
shr
das
sbb
pop
and
adc
xacquire
cmp
xchg
mov
(bad)
int3
in
xchg
cld
xor
cmps
ds
lods
ror
iret
(bad)
ja
xor
mov
push
mov
xchg
push
stc
stos
into
inc
(bad)
cmp
je
movs
xor
es
jp
addr16
or
pop
pop
enter
or
mov
dec
loop
not
inc
mov
fs
adc
aas
add
dec
pop
je
dec
dec
stos
push
mov
push
js
jmp
push
mov
pop
idiv
cs
imul
ret
(bad)
push
pop
push
rcl
in
fmul
mov
pop
jecxz
or
xchg
jo
pop
data16
push
dec
push
mov
pop
jnp
addr16
or
pop
mul
pop
(bad)
test
sar
or
mov
out
repnz
xchg
mov
xor
int3
ror
dec
loop
idiv
pop
sbb
lock
pop
in
outs
stos
push
mov
dec
pop
repnz
or
jb
retf
pop
cmp
retf
inc
dec
inc
std
mov
mov
in
cmp
adc
push
pusha
scas
mov
mov
lods
jae
pop
mov
into
in
pop
ret
adc
in
and
sbb
xor
mov
jmp
fistp
pop
shl
push
pop
mov
sbb
jmp
(bad)
repz
retf
adc
popa
dec
mov
xchg
mov
dec
pop
xchg
and
mov
int3
sbb
adc
add
cld
push
mov
cmps
jnp
xchg
and
es
outs
or
imul
push
jns
aas
leave
repz
aaa
mov
and
sbb
push
mov
outs
aad
lea
xor
or
inc
stos
loop
mov
ins
or
arpl
stos
mov
in
sub
fsubr
sbb
inc
mov
or
push
into
shl
mov
sub
cmps
dec
xchg
std
pop
jne
mov
sbb
and
dec
enter
pop
xor
adc
rcl
cmps
clc
add
push
pop
cmps
cld
sub
push
sahf
sub
dec
test
inc
xchg
pop
xor
jne
inc
or
psubq
cdq
enter
add
add
je
jnp
int3
jg
popf
pop
loope
and
pop
enter
test
xor
mov
sub
shl
sbb
jp
ret
mov
mov
push
or
out
push
cmc
cmps
imul
jmp
test
cmps
mov
sub
xor
mov
icebp
push
(bad)
or
dec
retf
movs
lods
add
daa
arpl
or
jge
jne
lahf
and
stos
retf
pop
and
and
arpl
and
cli
aaa
lea
push
fidivr
int3
std
fisttp
and
adc
ret
loope
stos
enter
xchg
retf
xchg
inc
inc
push
cmc
gs
sub
mov
sbb
adc
cmp
push
lods
(bad)
mov
(bad)
cmp
push
mov
in
inc
fcmovnb
or
ins
xor
mov
or
inc
arpl
or
inc
push
arpl
jmp
es
or
pop
and
ins
xchg
pop
push
addr16
fwait
pop
je
aam
inc
xor
stos
cmp
iret
sub
repz
xor
ror
in
div
rcr
sbb
dec
in
bound
pop
stc
stc
cmp
add
shl
ds
inc
and
(bad)
ins
ficom
add
push
push
cmp
or
icebp
push
jp
mov
and
test
loop
jecxz
mov
dec
retf
inc
push
add
movs
fisttp
dec
js
sbb
ds
(bad)
aam
out
popa
jae
mov
stos
not
retf
sub
cmp
xchg
je
out
adc
ret
push
inc
in
cmc
lds
test
xor
inc
sbb
imul
stos
outs
push
mov
sbb
sar
mov
test
xchg
sub
js
enter
cmps
popa
mov
aaa
add
sbb
cwde
out
dec
ss
jnp
inc
dec
push
out
inc
jo
les
inc
ret
xor
out
mov
cmps
inc
lahf
xchg
aad
xor
test
pusha
adc
call
inc
pop
mov
dec
addr16
xchg
mov
sbb
mov
or
mov
mov
inc
xor
in
jge
fist
call
or
fild
cmps
outs
mov
lods
sbb
jno
scas
lods
and
les
jne
call
push
lea
shl
inc
outs
cdq
mov
pop
push
xchg
cmp
cmp
ja
adc
mulps
in
xor
outs
nop
mov
inc
jge
jmp
xchg
dec
outs
adc
mov
xchg
xchg
mov
mov
das
xchg
mov
adc
loop
in
fs
xor
jg
cmc
inc
cmp
mov
inc
mov
push
push
in
sub
xor
adc
dec
mov
or
mov
jo
movs
jmp
das
cmp
loopne
and
popf
mov
aad
fnsave
push
add
mov
xor
mov
dec
cmp
mov
ins
scas
pop
jle
pop
scas
imul
xchg
pop
fnstcw
sbb
adc
dec
mov
cmps
leave
ret
pop
ret
popa
mov
shr
pusha
ror
cmps
popa
out
adc
pop
sub
ror
add
jnp
mov
cmp
mov
cmp
cmp
out
inc
stos
ret
test
(bad)
mov
les
xchg
mov
js
jae
xchg
xchg
add
test
xlat
dec
xchg
mov
mov
cdq
(bad)
pop
(bad)
lock
jo
loopne
push
test
(bad)
push
les
cmps
push
sti
push
rcpps
sbb
mov
pop
cmps
cmp
jno
test
cmp
mov
xchg
cmp
mov
scas
or
inc
pop
scas
test
retf
xor
pop
mov
and
fisubr
test
xchg
repnz
es
scas
mov
int
outs
and
rcr
sub
rcl
bswap
iret
dec
fadd
push
std
call
mov
mov
lea
add
or
mov
inc
dec
inc
sbb
mov
pusha
mov
ss
and
xchg
jl
movs
repz
sub
ins
cmp
enter
xor
scas
push
or
nop
dec
pop
pop
push
jge
dec
imul
ins
jns
arpl
ror
mov
pop
sbb
aam
mov
push
setne
mov
lock
jle
enter
clc
fs
sbb
mov
mov
das
or
xor
loopne
xor
pushf
xchg
dec
push
push
imul
push
jne
aas
xor
into
clc
scas
or
adc
cld
sbb
adc
or
lods
ds
mov
and
sub
fmul
sub
les
fidivr
pushf
sahf
and
dec
daa
and
xor
inc
repnz
daa
jb
inc
shl
(bad)
fidiv
pop
mov
cmp
(bad)
cld
xor
or
test
mov
(bad)
sti
in
out
inc
clc
cmp
out
test
mov
cmp
stos
adc
std
jb
adc
sbb
mov
jmp
inc
popa
icebp
mov
sub
gs
fstp
sbb
push
ror
ficom
cmc
pusha
add
loop
arpl
and
dec
mov
mov
stos
scas
arpl
imul
lods
cmp
repz
shl
pop
addr16
stos
aaa
jno
aad
(bad)
adc
push
sti
lea
sbb
jbe
rcl
adc
out
cmc
sbb
addr16
jg
xchg
jno
leave
aad
push
pop
mov
jmp
jnp
push
inc
ins
push
push
pop
loope
adc
push
movs
or
add
leave
daa
sar
stos
xchg
cld
scas
stos
sub
adc
rcl
dec
js
sti
and
bound
sub
in
loope
sub
push
inc
ja
cwde
jge
jmp
test
push
ins
int
aas
push
movs
jg
lahf
dec
sahf
das
pop
loopne
or
xrelease
stos
inc
xchg
or
dec
dec
sbb
or
js
and
fadd
add
das
cmp
(bad)
sar
and
es
jmp
ret
cmc
je
out
out
push
jle
std
add
fisttp
cmp
outs
mov
pop
rcl
sub
adc
stos
mov
push
pop
out
std
js
inc
push
mov
test
stos
leave
push
xor
stos
ret
pop
dec
xor
push
push
outs
xor
push
adc
mov
push
mov
add
push
arpl
xor
mul
cmp
inc
sbb
inc
dec
sub
jle
leave
cmp
cmp
xor
pop
daa
mov
jae
rcr
mov
enter
stos
sub
xor
ss
dec
into
dec
pop
jp
ficomp
(bad)
outs
sub
(bad)
shl
jge
idiv
aam
jmp
retf
mov
mov
or
ds
retf
mov
mov
nop
mov
rcr
int
pop
out
outs
sub
mov
ins
pop
movs
mov
sbb
fisttp
nop
lds
adc
jle
or
pop
loopne
and
outs
dec
adc
dec
pop
mov
push
xchg
imul
call
add
(bad)
cwde
mov
int
jnp
xlat
adc
xlat
inc
add
xchg
xor
push
dec
retf
dec
push
pop
mov
mov
sar
jnp
in
mov
push
push
inc
out
mov
pushf
xchg
(bad)
out
xchg
inc
add
pop
jnp
das
push
les
inc
xchg
sub
or
shl
cli
dec
xor
xor
in
mov
clc
cmc
test
test
inc
xor
sbb
xchg
mov
mov
inc
jmp
inc
dec
ficomp
pop
test
dec
inc
or
xchg
lds
lds
pop
mov
sub
mov
mov
cmp
jne
aas
push
inc
inc
stc
mov
inc
mov
mov
push
mov
ss
mov
xor
push
(bad)
sub
fdiv
mov
cmp
dec
mov
gs
mov
scas
or
mov
fisub
cwde
push
test
xchg
dec
dec
std
jmp
adc
shl
sbb
call
lahf
(bad)
in
adc
stos
dec
stos
inc
in
dec
dec
aas
fst
fidiv
sub
ds
inc
test
jo
add
(bad)
jbe
sbb
dec
in
xchg
inc
retf
loop
inc
pop
iret
mov
lds
mov
fwait
retf
retf
mov
popa
xchg
repz
adc
mov
and
scas
dec
mov
sbb
jb
lahf
addr16
out
leave
and
xor
or
dec
cmps
or
mov
sbb
sub
icebp
fidivr
rol
dec
les
pop
bound
mov
sub
bound
push
retf
jae
mov
outs
mov
xchg
in
fiadd
icebp
out
clc
nop
xchg
ss
mov
stos
mov
push
out
movs
pcmpeqd
(bad)
test
pop
aas
jns
(bad)
dec
mov
jns
and
cld
pop
fld
and
sbb
sub
ffreep
jmp
mov
call
and
loopne
js
jg
dec
retf
(bad)
(bad)
jmp
xor
xchg
xchg
cmp
nop
and
inc
das
pop
cmp
xor
mov
sub
cmp
jno
out
test
mov
push
add
push
ja
dec
sub
add
inc
add
sbb
lods
rcl
ficom
xor
sub
sub
push
mov
sete
mov
dec
inc
scas
ret
mov
call
loop
xor
call
mov
sbb
test
dec
xor
dec
adc
(bad)
xor
adc
je
dec
dec
mov
jge
mov
cmp
fild
xor
jmp
call
clc
es
movs
movs
inc
pop
sub
loope
push
rol
rcl
out
push
scas
imul
jmp
pusha
cmp
test
and
add
loope
push
mov
inc
pop
push
dec
ret
stos
scas
fisttp
fcmove
mov
dec
(bad)
and
fwait
shl
mov
inc
test
dec
(bad)
mov
test
retw
dec
dec
fisttp
sahf
sar
repz
sbb
(bad)
stos
jp
js
push
aad
mov
call
dec
cmp
xchg
outs
xor
mov
int3
int
sbb
sub
and
mov
out
das
jle
or
stos
imul
xor
xor
jne
ret
inc
test
jmp
cld
adc
adc
mov
jp
mov
inc
fistp
movs
pop
xchg
call
jo
mov
sti
mov
les
mov
pop
and
dec
jge
xchg
int
jbe
or
dec
dec
lock
clc
rol
std
mov
sbb
hlt
cmp
call
sbb
popf
dec
jo
push
ins
pusha
mov
add
mov
cmp
in
push
jne
mov
pop
fsubr
mov
xor
inc
push
sub
add
xchg
sub
xor
popa
scas
mov
push
mov
cmp
in
jecxz
jae
rcl
jbe
push
ins
push
mov
jmp
pop
aaa
call
mov
sbb
and
mov
data16
sub
mov
jmp
pop
call
xor
test
dec
sbb
fs
jnp
retf
push
pop
xchg
mov
(bad)
retf
loope
arpl
jp
sub
lock
jae
dec
dec
sub
adc
xor
jmp
aad
rol
xor
pop
lea
xor
mov
or
push
cmps
mov
or
ins
cld
xor
aaa
repz
inc
lods
repz
push
test
push
dec
adc
mov
test
mov
cmp
ja
(bad)
push
popf
dec
jno
push
cmp
xchg
test
ror
or
ret
adc
or
mov
into
in
jbe
loope
mov
sbb
call
imul
add
cmps
sbb
loope
sub
dec
push
and
push
pop
xchg
xor
(bad)
pop
cmc
xor
and
popf
retf
test
or
cmp
add
adc
ja
cmps
dec
mov
mov
repnz
in
xor
or
loope
dec
pop
inc
stos
cdq
loope
pop
outs
ja
mov
cmc
ja
das
mov
push
adc
jbe
jnp
add
pop
aas
xchg
or
mov
stos
or
repnz
sbb
jmp
in
fwait
inc
pop
in
mov
mov
fbstp
hlt
pop
imul
lahf
into
loop
ret
or
imul
sub
jne
js
or
fistp
pop
sbb
pop
outs
lock
push
mov
test
fist
pop
push
jg
inc
adc
lock
in
(bad)
jmp
(bad)
sub
dec
mov
inc
xchg
xchg
iret
out
xor
push
sbb
cdq
aam
or
outs
sub
xor
jno
push
pop
jp
cs
push
ss
mov
ret
rol
adc
sub
call
add
int
and
jmp
es
mov
pop
mov
fcom
sbb
in
in
pop
pusha
xchg
mov
push
mov
jp
cdq
pop
stos
dec
shl
daa
jmp
icebp
pusha
test
dec
push
inc
mov
in
sub
cmps
sahf
mov
out
(bad)
es
icebp
mov
test
out
xchg
mov
mov
and
xor
loopne
push
test
pop
jp
mov
cmp
and
je
xchg
sbb
or
fidiv
adc
pop
pushf
clc
(bad)
and
shl
stos
shl
popf
rcl
test
std
xchg
mov
push
sbb
popa
je
and
repnz
sub
inc
mov
loopne
dec
pop
ins
(bad)
sub
pop
loop
jmp
jnp
push
(bad)
lea
dec
movs
pop
out
and
mov
pop
rcl
jmp
(bad)
sbb
mov
push
xchg
in
xchg
push
stos
push
jnp
ins
test
push
test
mov
mov
pop
mov
inc
mov
pop
(bad)
(bad)
mov
mov
mov
adc
scas
stos
and
or
jnp
ins
mov
cmp
pusha
(bad)
pop
push
or
dec
mov
sub
mov
ins
mov
fsub
ins
je
sub
push
jecxz
(bad)
inc
leave
pop
sbb
pop
movs
ins
xor
pop
cmp
mov
stos
mov
jne
sub
mov
sbb
dec
imul
cdq
pop
enter
xor
getsec
push
shr
loop
stc
stos
jae
or
std
mov
adc
jp
xor
movs
in
pop
fstp
inc
int
mov
jl
lahf
(bad)
fwait
test
push
xor
aas
clc
pop
sbb
fwait
xchg
push
stos
fnsave
in
and
jns
inc
jmp
cld
jb
dec
out
or
xchg
sbb
mov
aaa
int3
cmp
pop
adc
cwde
js
dec
rcl
stc
mov
adc
xchg
push
jae
ja
dec
retf
xchg
in
jmp
imul
sahf
sub
fcom
popf
push
sti
push
aaa
dec
pop
in
dec
scas
nop
and
mov
xchg
push
test
fistp
sbb
mov
(bad)
outs
icebp
ror
shl
jnp
jge
mov
push
sub
mov
add
or
jl
gs
add
dec
or
dec
push
ss
mov
mov
stc
pushf
cmp
not
popa
pop
push
sbb
ret
clc
mov
data16
in
std
cmc
sbb
enter
mov
movs
mov
jno
cli
aam
enter
xchg
rol
ins
mov
cwde
(bad)
cmps
or
sub
aas
or
pop
sbb
jae
cmp
gs
jne
pop
or
or
xor
jmp
jp
xor
idiv
push
in
inc
mov
inc
rol
mov
xlat
(bad)
mov
xchg
mov
repnz
push
fst
xchg
in
aam
(bad)
shr
ins
dec
lock
mov
or
aam
jae
xchg
sti
lods
dec
mov
pop
popf
xor
(bad)
sbb
dec
jmp
mov
xlat
mov
cmp
test
test
jg
pop
cdq
sti
inc
shl
cs
dec
adc
pusha
xchg
xchg
retf
add
mov
or
adc
in
clc
or
js
jmp
xchg
dec
dec
ja
(bad)
scas
inc
bound
adc
jge
aam
push
push
out
(bad)
cli
sbb
cmp
dec
jg
ficomp
push
jno
push
xchg
jbe
sub
push
rcl
inc
outs
sub
frstor
and
in
xor
fs
loope
sbb
push
mov
into
inc
gs
sub
mov
push
out
out
add
lock
scas
fisubr
pop
aas
cmc
clc
mov
inc
cs
xor
inc
out
push
or
add
or
daa
enter
jmp
jo
pop
int
lds
add
fisttp
mov
call
in
jno
pop
mov
outs
out
iret
dec
and
cmp
ins
lods
(bad)
in
lahf
adc
mov
sbb
adc
mov
in
ds
das
jb
(bad)
stc
mov
sbb
adc
lea
add
jnp
and
mov
(bad)
lods
add
arpl
das
mov
lods
icebp
dec
call
mov
adc
mov
lock
xor
mov
mov
out
sbb
shl
pop
into
(bad)
mov
bound
pop
push
push
fldenv
int
fld
xor
jae
ret
xchg
shr
dec
push
sar
or
hlt
pop
mov
pop
mov
cmp
imul
mov
jb
in
into
sub
out
aad
sub
scas
pop
pop
lea
or
sub
xchg
jb
fstp
addr16
xor
cmps
jle
push
add
inc
in
(bad)
jo
ror
les
mov
mov
jecxz
lods
movs
popf
inc
cmp
sbb
aas
clc
fdivr
add
pop
in
das
dec
mov
push
nop
mov
gs
outs
bound
dec
sbb
mov
loopne
icebp
sbb
movs
add
loop
inc
fistp
movs
cs
and
mov
or
movs
and
ja
jmp
mov
mov
aam
mov
or
xor
cmp
sbb
sub
fnstcw
and
int3
cmc
pop
into
adc
ficomp
lea
cmp
outs
test
int3
add
sahf
or
push
test
retf
adc
mov
push
push
inc
arpl
xor
fadd
inc
retf
xor
mov
xor
sub
out
jb
jle
and
or
mov
xchg
and
push
jp
ins
jg
(bad)
adc
fidiv
push
pop
iret
inc
retf
inc
adc
pop
sub
std
push
jmp
das
adc
or
(bad)
jp
cli
mov
add
mov
mov
dec
test
push
pusha
sbb
lock
xchg
jmp
ja
sar
inc
or
cmp
loop
loope
push
enter
cmp
icebp
mov
ficomp
ins
xor
(bad)
pop
icebp
mov
xor
jmp
mov
sets
jae
xor
dec
retf
dec
add
jmp
mov
push
ss
clc
adc
pushf
xor
push
enter
das
scas
ds
scas
enter
rol
outs
sbb
movs
sbb
jle
pop
jns
movs
sbb
ja
add
xor
cli
int
or
fild
aam
(bad)
popa
xchg
int3
ins
lahf
stos
lods
jmp
lahf
mov
cmp
repnz
mov
adc
test
sub
mov
adc
push
into
mov
nop
pop
inc
xchg
mov
mov
int
xor
add
mov
jle
aaa
inc
fadd
call
adc
les
and
jmp
jmp
daa
sbb
xchg
sahf
inc
xchg
clc
loop
mov
push
mov
gs
icebp
(bad)
aaa
mov
dec
adc
inc
test
es
leave
sub
jg
add
icebp
pop
std
or
pop
test
sbb
sub
jae
rcr
and
jbe
cmp
adc
test
inc
inc
mov
cmp
in
(bad)
stc
cmp
push
sar
mov
scas
ret
stos
gs
aas
cdq
(bad)
out
(bad)
jns
xchg
(bad)
out
pop
(bad)
div
stos
(bad)
xor
retf
pushf
sub
loopne
inc
ins
jecxz
movs
jmp
pop
cmp
sub
in
pop
sbb
jle
jg
inc
and
xor
cmc
(bad)
mov
inc
pop
add
ds
movs
test
mov
xor
pop
sub
mov
xor
sbb
ja
add
clc
fs
mov
hlt
mov
daa
leave
pop
push
outs
cmp
sbb
mov
aas
in
lea
sti
adc
pushf
jno
mov
rol
daa
inc
adc
mov
loop
dec
add
pushf
mov
stos
arpl
movs
fnstenv
out
out
and
mov
iret
mov
into
sub
cs
xor
mov
cmps
ds
sbb
mov
cli
mov
xchg
pop
xchg
inc
pushf
jno
inc
pop
nop
mov
and
ret
dec
mov
out
mov
push
fidivr
aad
dec
pop
push
xchg
add
adc
adc
not
add
cdq
dec
lds
into
test
loopne
ficomp
jl
rcl
ret
(bad)
and
xchg
imul
sub
inc
push
sbb
cld
xchg
sub
jmp
pop
arpl
neg
mov
push
jae
adc
sbb
loope
jmp
fldenv
iret
pop
aas
inc
add
cmp
call
out
jbe
pop
cli
xchg
dec
ffree
adc
ins
or
xchg
enter
stos
into
hlt
shl
jge
dec
jo
nop
cmp
cmps
cs
into
sbb
leave
push
stos
cmps
retf
xlat
jmp
std
sbb
mov
mov
pop
xor
loopne
orps
in
stos
push
xor
inc
push
fstp
push
dec
movs
(bad)
xor
mov
xor
(bad)
mov
and
fsub
mov
and
or
pop
cli
push
je
popf
idiv
jge
adc
in
cmps
cmc
mov
loopne
call
or
aas
xor
xchg
xchg
fild
inc
sub
data16
ss
pop
test
(bad)
aas
or
pop
out
cmp
pop
in
mul
mov
cdq
imul
retf
bound
xchg
jge
mov
jns
add
mov
fld
stc
sbb
jb
mov
popf
xor
or
out
push
jnp
jae
jg
leave
mov
nop
dec
in
cmp
mov
mov
js
rcl
inc
scas
adc
repz
movs
test
pop
in
xchg
(bad)
lock
ds
and
cmp
pop
or
cmp
(bad)
mov
shl
cmps
jb
sahf
pop
retf
js
pop
test
retf
jb
add
dec
mov
outs
push
push
cmc
add
leave
es
ins
movs
xchg
and
or
pop
mov
mov
pop
(bad)
and
popa
adc
loope
retf
push
out
inc
jg
pop
imul
sbb
scas
scas
add
pop
cdq
rol
pop
jns
neg
jbe
inc
fild
and
loopne
xchg
and
adc
mov
mov
ret
daa
push
pop
loop
ins
jecxz
mov
and
out
jge
mov
xchg
and
jmp
dec
loope
arpl
neg
fs
movs
(bad)
mov
mov
fsub
sahf
inc
fld
xchg
dec
sar
or
lock
shr
(bad)
repz
and
dec
retf
add
sbb
cmp
cwde
xchg
imul
push
mov
test
popa
or
(bad)
mov
xchg
push
retf
push
mov
mov
and
das
(bad)
loopne
loop
add
cmps
mov
jno
cwde
dec
cs
test
dec
ficom
pop
aas
aaa
stos
push
inc
xchg
push
lods
jg
cmp
xor
es
imul
push
dec
mov
cwde
out
popa
and
shl
jne
nop
xchg
ja
cmp
test
dec
rcl
add
mov
cmc
add
mov
scas
xchg
pushf
inc
mov
lods
scas
mov
test
out
or
pop
mov
out
jno
jp
out
add
push
ret
sti
pop
aam
push
pop
ds
xlat
(bad)
test
sub
int
mov
repnz
inc
jo
ds
and
xor
movs
gs
daa
jg
mov
or
ss
inc
lock
push
jmp
mov
cmc
inc
push
fs
aaa
stos
icebp
push
push
outs
sti
jnp
pusha
fild
ror
add
or
add
inc
push
mov
repz
jp
imul
mov
inc
sti
add
in
repnz
push
mov
cli
adc
sub
add
xor
stos
std
jmp
sub
sub
xor
xchg
xchg
mov
or
(bad)
sti
mov
ret
jbe
sar
std
cmp
aam
inc
sbb
daa
jmp
pop
pop
leave
into
jmp
cmc
xor
pop
ja
add
jp
push
cmp
iret
and
jmp
push
cmps
mov
stos
std
fs
sbb
jle
aam
outs
sub
daa
mov
mov
into
sub
shl
jl
icebp
(bad)
dec
pop
scas
repnz
popf
push
call
xlat
cmp
scas
retf
jmp
adc
xor
addr16
dec
loop
adc
jae
or
jmp
xchg
inc
jbe
pop
cmps
movntq
out
int3
pop
sub
mov
jns
inc
in
stc
(bad)
cli
(bad)
xor
inc
jmp
enter
and
enter
cmp
and
adc
xor
ss
ds
mov
sub
dec
out
lods
shl
add
xlat
adc
in
ss
ds
sub
mov
test
(bad)
cwde
adc
jg
dec
inc
xor
leave
ins
push
lds
bound
psubusw
sbb
jge
push
dec
clc
retf
pusha
sub
add
movs
adc
aas
and
inc
pop
pusha
sahf
jecxz
sub
pop
and
xor
jb
mov
out
xchg
in
cmp
(bad)
mov
jmp
jle
sbb
xor
cwde
repz
sbb
cmps
dec
push
push
push
call
or
xchg
inc
mov
xchg
jne
cmp
cmp
sub
pop
popw
sub
rcr
mov
jbe
mov
push
shl
xor
outs
jl
sub
out
sar
test
jns
das
mov
iret
in
call
sub
enter
cmp
ins
fsubp
jne
neg
dec
xor
jno
sbb
adc
xchg
inc
nop
sub
gs
mov
xchg
cmps
pop
jne
inc
pop
pop
mov
sub
mov
fcomp
ins
pop
bound
outs
pop
mov
popf
inc
adc
pop
sbb
push
retf
in
jmp
fmulp
arpl
in
sbb
shr
jae
icebp
push
pop
out
out
inc
mov
mov
inc
or
shr
scas
sbb
lds
jecxz
(bad)
adc
sbb
test
inc
rol
jb
xchg
test
shl
(bad)
cmp
retf
xor
xchg
lds
dec
xchg
in
dec
adc
sahf
xchg
xor
xchg
cdq
cli
outs
dec
(bad)
dec
sbb
jnp
pop
sub
scas
scas
imul
fdiv
pop
cmp
mov
xor
mov
jg
pop
mov
imul
cmp
adc
sbb
loope
ret
xchg
lahf
(bad)
mov
int3
mov
sub
pop
xchg
shr
adc
imul
push
jb
int
adc
cs
xchg
clc
mov
sbb
pop
cs
jno
adc
jecxz
mov
ds
popa
jno
push
or
enter
fild
nop
xchg
outs
ins
ret
dec
sbb
sti
mov
add
push
into
int3
in
jb
ror
adc
enter
mov
adc
pop
push
or
stos
sub
popa
imul
cmps
ficomp
test
dec
push
(bad)
mov
js
arpl
in
test
daa
pop
xor
inc
mov
addr16
into
jl
ror
sub
repz
rcl
daa
sub
(bad)
mov
lock
dec
and
push
hlt
ja
xor
lods
sub
ds
sub
enter
cmp
hlt
dec
sbb
pop
cmc
ffreep
push
dec
int3
push
in
retfw
or
lahf
mov
mov
cdq
mov
jb
call
repz
jle
arpl
add
mov
xor
(bad)
jp
clc
mov
retf
adc
dec
dec
fistp
add
cld
xchg
and
arpl
loopne
xchg
in
mov
dec
icebp
loop
std
dec
int
call
xor
sub
cmc
inc
cmp
mov
or
pop
sub
inc
and
pop
dec
idiv
es
dec
pushf
mov
cdq
outs
mov
mov
mov
stc
jns
scas
mov
sar
scas
ins
jmp
in
push
jmp
aad
cmp
fisubr
sbb
shl
dec
mov
mov
add
push
dec
jp
(bad)
sar
ins
arpl
adc
daa
popa
and
icebp
stos
mov
fcmovbe
sbb
sub
mov
mov
out
repnz
(bad)
pop
stos
dec
imul
test
add
sbb
adc
inc
push
cli
mov
cmp
pop
ffree
xchg
push
ss
jo
sub
rol
das
mov
rol
sub
sti
dec
xchg
add
(bad)
adc
jecxz
mov
inc
imul
jbe
push
mov
xlat
mov
mov
pop
pop
jp
lock
sbb
sub
inc
mov
popf
or
dec
dec
pop
js
out
pop
jb
sbb
cwde
inc
mov
fcmovnbe
(bad)
aad
dec
cs
jmp
jge
adc
das
mov
lea
lock
sub
fwait
pop
test
fisub
jno
dec
sub
jmp
cmp
aas
jle
and
aam
fimul
test
(bad)
jns
xchg
idiv
adc
xchg
sub
aad
push
dec
xchg
mov
mov
adc
pop
shr
jno
dec
pusha
outs
mov
push
dec
push
call
outs
and
js
push
xchg
inc
cs
mov
test
cmc
jae
mov
cmp
jle
lods
lods
iret
(bad)
pop
lock
inc
and
fnstenv
loop
push
sub
shr
or
hlt
xchg
push
or
and
and
repnz
mov
icebp
mov
call
int
popa
jp
xor
dec
mov
push
inc
cld
mov
std
popf
mov
mov
adc
dec
movs
mov
jmp
xor
sahf
add
mov
sti
lahf
(bad)
inc
stos
test
outs
mov
push
xor
cmp
mov
ret
and
iret
or
imul
jp
fwait
stos
loope
inc
or
stc
mov
fdivr
push
jbe
lods
fisub
adc
adc
imul
mov
xchg
cli
lahf
call
je
repz
scas
out
enter
mov
repz
clc
ret
sub
mov
cmps
sub
lods
lahf
loopne
loope
mov
mov
push
repnz
push
aad
add
sub
cmps
outs
(bad)
cmps
mov
(bad)
daa
sbb
call
xchg
jns
pop
movs
push
scas
je
lods
xchg
rol
inc
push
dec
push
int
inc
dec
sbb
pop
mov
inc
cmps
inc
fild
push
xchg
jmp
mov
ret
dec
cmp
inc
push
and
adc
out
(bad)
push
mov
mov
aad
cmp
jo
xchg
xchg
movs
or
jns
int
leave
and
and
mov
test
pop
jb
xchg
scas
xchg
push
ss
add
fs
mov
sub
(bad)
push
mov
dec
popf
je
mov
fsub
clc
loopne
dec
xchg
mov
and
pop
cmc
aad
sub
mul
loope
dec
push
ss
pavgb
add
mov
mov
lahf
stos
test
mov
pop
loop
loopne
jnp
aad
mov
pushf
(bad)
ficom
in
lahf
xor
inc
fidivr
inc
imul
adc
pop
adc
js
int3
(bad)
xor
and
pusha
and
loop
int3
data16
push
inc
movs
dec
cmp
je
les
sub
dec
(bad)
in
dec
pusha
jmp
(bad)
lock
out
sub
fwait
cli
stc
pushf
jmp
addr16
pop
jg
leave
lea
dec
or
push
jp
nop
loope
and
and
pop
sub
mov
and
lahf
dec
inc
adc
sbb
cdq
or
lock
mov
xor
adc
retf
sbb
xchg
mov
adc
sub
push
out
fimul
iret
stos
adc
lahf
imul
xor
int3
mov
push
mov
xchg
dec
push
jae
int3
in
js
push
retf
cli
movs
jmp
leave
sub
idiv
dec
inc
pop
mov
and
jmp
clc
jnp
pop
or
xor
imul
cmp
push
pusha
and
pop
out
lods
(bad)
std
shr
int
mov
sub
jne
ja
adc
add
pop
push
mov
and
xchg
inc
sti
dec
push
xor
call
in
(bad)
adc
in
mov
stos
xchg
outs
xchg
sbb
xor
mov
(bad)
leave
sar
mov
pop
xchg
mov
aad
shr
mul
pop
cmp
sbb
test
mov
fwait
jnp
ffree
cmp
xchg
(bad)
fsub
cmp
and
pop
cmp
arpl
pop
movs
dec
xor
iret
outs
push
inc
inc
movs
xor
cmp
mov
stos
cli
aaa
into
out
pushf
sti
xor
push
movs
mov
add
in
mov
out
into
jmp
xor
push
push
jae
mov
mov
aaa
cwde
clc
les
add
fcom
or
fs
xor
out
je
cmps
(bad)
movs
push
and
ins
sub
fld
xlat
pop
in
movs
adc
out
cmp
fstp
cmp
lods
jns
mov
jg
test
movs
je
dec
pop
xchg
inc
xchg
loopne
mov
push
sub
and
loop
inc
and
clc
or
jno
icebp
inc
mov
cmps
cmp
mov
push
and
loope
push
scas
jne
cmp
test
dec
rcl
dec
int
les
sti
mov
rcl
mov
xchg
and
add
cmps
sub
cli
jae
cmps
mov
jb
test
jecxz
cmc
inc
or
xor
pop
push
inc
xchg
mov
push
in
pop
(bad)
mov
xor
xchg
xrstor
pop
mov
xlat
xchg
push
inc
and
in
mov
push
jno
popf
or
loop
or
push
pop
fdiv
ds
pop
inc
xlat
mov
xchg
sub
jo
rcr
and
sbb
idiv
push
sub
cwde
sub
shl
inc
loopne
dec
push
xor
mov
mov
or
sbb
ss
cmp
(bad)
out
xor
mov
jno
enter
and
inc
ror
mov
jno
cmps
inc
adc
push
sbb
push
ja
xchg
adc
push
in
js
push
and
jp
add
leave
push
aam
xchg
and
mov
adc
int3
ror
dec
outs
scas
fst
int3
dec
mov
dec
in
dec
fnsave
xchg
loop
cmovae
jb
push
movs
add
ins
test
ja
or
in
sub
or
enter
pop
aad
movs
or
in
xor
popf
mov
cmp
jnp
and
das
mov
xchg
mov
scas
std
call
mov
cdq
push
pop
xchg
xor
inc
fwait
jle
push
jbe
retf
popf
mov
mov
inc
int3
xchg
sahf
test
fs
(bad)
dec
stos
mov
or
fcomp
pop
add
or
in
daa
aaa
scas
mov
cmp
mov
leave
retf
mov
mov
adc
std
icebp
inc
outs
out
cmp
cld
cmps
or
jnp
es
sbb
xchg
xchg
sbb
ss
lds
adc
and
lahf
pop
mov
in
add
and
dec
lock
cmc
mov
std
pop
xor
mov
pop
sub
loopne
test
adc
mov
(bad)
xor
or
adc
xor
loop
pop
in
cmp
jae
hlt
sahf
pop
daa
mov
jg
repz
xor
cmps
inc
enter
mov
jnp
jp
popa
mov
and
dec
inc
test
fwait
and
mov
das
movs
ja
ds
(bad)
stc
add
mov
icebp
cdq
mov
mov
outs
div
ror
retf
xchg
mov
ins
dec
mov
int3
aas
aaa
inc
pop
test
sar
push
call
push
outs
fstp
mov
add
(bad)
es
fld
ret
cmp
adc
ret
fcmovne
jne
cwde
cli
sub
sbb
or
je
xor
into
inc
jnp
pop
pop
sbb
sbb
xchg
loop
movs
test
repz
push
adc
cld
mov
les
or
fstp
xor
cdq
ficomp
dec
cmps
aas
add
fistp
xor
out
nop
outs
icebp
fs
sub
jo
leave
mov
cmp
fwait
mov
or
es
sub
push
ja
test
mov
movs
xlat
mov
adc
js
in
xchg
cmp
mov
fdivr
or
mov
sub
ficomp
pop
mov
jp
sahf
out
add
dec
jmp
sbb
pop
lods
fistp
push
jmp
jmp
dec
rol
shl
imul
mov
xchg
dec
cmp
mov
mov
mov
push
shl
pop
pushf
call
mov
in
mov
sub
or
adc
ins
and
shl
rol
movs
xor
int
jecxz
inc
out
and
push
push
call
aad
xor
shr
jl
loopne
test
clc
push
jns
adc
ss
std
cmp
mov
mov
push
imul
out
imul
ret
and
dec
xchg
xor
xlat
jmp
jae
add
ds
mov
mov
out
out
cmp
jno
jp
jb
cld
imul
sub
iret
ins
mov
fs
lods
push
sub
cmps
data16
pop
inc
xchg
cmc
inc
adc
inc
mov
clc
mov
mov
jle
cmp
xor
adc
sahf
int3
test
jbe
mov
shr
xor
dec
and
or
xchg
lock
bound
cmp
push
sbb
in
jbe
pop
mov
mov
jge
(bad)
cdq
sub
aad
xchg
sub
jb
in
dec
pusha
jns
into
mov
jae
mov
(bad)
jmp
fmul
retf
add
xchg
test
rcr
inc
jmp
cwde
dec
mov
mov
push
data16
retf
push
mov
stc
mov
xchg
in
push
dec
cmp
int
pop
pop
sub
pop
jnp
(bad)
in
test
push
ficomp
inc
sbb
popf
lods
pop
add
ror
hlt
sbb
ja
add
push
inc
gs
xchg
scas
or
retf
ins
movs
jns
addr16
pop
shr
mov
(bad)
sub
fs
scas
jg
sbb
sub
in
dec
sbb
cdq
mov
(bad)
sub
inc
sub
out
adc
xchg
fs
adc
add
xchg
mov
mov
repz
cld
fsubr
js
fpatan
lea
stc
jbe
xrelease
adc
add
cwde
mov
imul
pusha
push
out
fbld
ror
dec
sub
les
imul
not
or
fld
fbld
xor
in
add
mov
or
ret
icebp
fidiv
push
sti
cli
xchg
pushf
mov
xchg
test
pop
jl
mov
clc
stos
out
fidivr
fidiv
jne
(bad)
call
mov
mov
stos
cmc
test
and
xor
push
adc
clc
outs
push
cld
ror
inc
ins
dec
arpl
(bad)
iret
fwait
push
or
push
iret
mov
pop
fiadd
pop
cmp
test
jo
clc
pusha
sbb
neg
jb
xchg
xchg
and
lea
jne
mov
sub
call
aad
mov
xchg
xchg
mov
lods
inc
pop
xchg
mov
gs
jecxz
outs
pop
dec
xlat
enter
mov
stc
movs
mov
in
ins
or
inc
lea
inc
sbb
cwde
push
outs
and
adc
mov
cld
cs
je
cld
and
mov
sub
lea
xchg
test
add
scas
(bad)
push
push
retf
xor
pop
loope
mov
js
rol
call
xor
jmp
pop
jb
rol
sbb
push
jbe
sub
int3
outs
gs
jmp
jecxz
fisttp
jge
sbb
pop
dec
inc
ins
push
call
or
mov
lock
fisubr
mov
arpl
push
or
mov
retf
xchg
push
(bad)
fisttp
push
jmp
jns
inc
push
das
test
add
cmc
cmp
adc
cmp
clc
xor
dec
adc
in
mov
test
sbb
mov
mov
pop
test
(bad)
repz
test
div
mov
mov
(bad)
bound
inc
outs
mov
(bad)
out
dec
scas
dec
mov
jg
inc
call
sbb
adc
inc
sahf
mov
inc
test
dec
pop
into
adc
pop
(bad)
repz
rol
xchg
or
cmp
fidivr
pop
in
or
add
xchg
or
or
je
or
retf
rol
shr
cmc
rcr
dec
and
cmp
jg
addr16
inc
js
jmp
xchg
in
cmp
push
loope
or
sub
cmp
mul
pop
inc
in
push
dec
push
cmps
retf
(bad)
jns
std
sub
stos
neg
pop
xor
push
out
jmp
mov
sbb
pop
adc
mov
mov
pop
xchg
mov
fidiv
cmp
mov
mov
(bad)
cdq
cmp
js
ds
(bad)
movs
test
cs
cwde
not
ss
pop
pop
pop
mov
add
push
in
dec
xor
ja
outs
popf
and
dec
loopne
xor
mov
sub
adc
sub
or
outs
bsr
push
mov
inc
jno
cli
lock
shrd
loopne
xchg
mov
or
out
clc
jl
es
cwde
fdivr
xor
cs
in
add
adc
inc
cmp
mov
inc
cmc
push
xchg
mov
inc
les
gs
push
jp
(bad)
sub
xor
(bad)
xchg
fs
inc
out
test
pop
lods
mov
stc
aam
adc
mov
jno
mov
ja
inc
les
jnp
fsubr
cmp
jmp
cmp
cmp
ja
enter
dec
lods
or
(bad)
(bad)
or
push
inc
or
push
jl
fnstcw
mov
cmp
and
and
pop
pop
sub
pushf
or
push
gs
push
push
test
jp
repnz
mov
sahf
push
cmps
in
sti
and
shl
push
pop
sbb
xor
(bad)
cmc
pop
push
push
mov
cmp
rcr
lods
push
pop
inc
(bad)
sub
test
mov
mov
retf
xchg
jl
jno
das
pop
loope
daa
and
mov
out
fs
ret
in
xchg
(bad)
std
popf
addr16
lahf
pushf
in
aam
out
ins
setge
mov
out
mov
cmp
xchg
xchg
aaa
mov
inc
xor
xchg
sub
mov
sbb
xchg
mov
mov
nop
imul
jno
push
test
test
daa
js
cmp
imul
mov
mov
stc
mov
push
sti
(bad)
mov
push
leave
sub
mov
fist
mov
mov
iret
push
fstp
mov
icebp
dec
ss
movs
fwait
mov
cwde
shl
pop
lock
frstor
loope
imul
iret
pop
ror
pop
pushf
pop
sub
imul
or
jp
gs
xor
push
cs
int3
out
cmp
int3
clc
sub
imul
and
mov
xor
int
dec
(bad)
mov
and
mov
outs
rep
clc
adc
add
mov
js
mov
mov
movs
push
pop
xor
mov
mov
jb
pop
movs
pop
faddp
pop
scas
aaa
ja
rcr
and
pop
inc
xchg
aam
pop
ja
pop
sbb
xor
(bad)
mov
pusha
addr16
iret
ret
sub
mov
call
ds
and
in
pop
int
xchg
(bad)
mov
xor
xor
and
rcl
movs
scas
test
lea
stc
arpl
xchg
xor
adc
inc
inc
xor
sub
push
xor
xor
mov
imul
das
sub
pop
scas
jnp
pop
push
in
scas
add
xchg
pop
mov
daa
mov
fs
shl
adc
push
cmp
shl
add
ficom
xchg
aad
mov
pop
sub
push
xchg
call
aad
push
ja
cli
in
lea
adc
sub
adc
ja
je
and
sub
dec
mov
pop
repnz
fcomp
ret
mov
call
and
sbb
push
sub
mov
xchg
aam
add
sbb
fldenv
mov
imul
scas
pop
xchg
jno
test
dec
mov
hlt
xor
nop
ss
adc
in
mov
dec
and
pop
call
xchg
outs
xchg
and
out
jge
scas
or
loop
gs
arpl
jp
cld
movs
(bad)
mov
fsubr
push
lahf
pop
mov
xor
arpl
adc
leave
add
add
lods
sbb
cmps
mov
sbb
xor
jno
dec
mov
jge
push
pop
scas
mov
loope
xor
dec
fwait
adc
pusha
ficomp
out
pop
cmp
std
xor
xchg
sbb
pop
push
pop
jl
xor
je
cmp
sub
iret
jg
sbb
dec
mov
or
adc
jno
pop
stc
dec
in
lahf
cmc
fs
adc
frstor
mov
aad
mov
xchg
lea
xor
or
or
sbb
(bad)
cmp
xlat
or
mov
fisub
daa
xchg
outs
call
dec
xchg
jbe
or
or
ins
out
fwait
cld
stos
xor
pop
jne
frstor
out
and
in
sbb
cs
pop
dec
push
adc
sbb
xor
cmovns
or
nop
inc
xchg
mov
sub
loopne
xchg
jbe
enter
fst
inc
lahf
mov
das
cmp
push
out
mov
fwait
shr
jns
adc
mov
sbb
push
and
pushf
cli
pushf
imul
add
fdivr
sbb
mov
xor
mov
bound
dec
cmps
loope
jae
je
fs
adc
loope
mov
ss
loope
mov
push
add
jle
(bad)
push
scas
stos
(bad)
mov
lods
cli
jae
pusha
pop
jle
repnz
popf
fstp
fs
jb
outs
pop
int
adc
fist
and
xor
addr16
mov
sbb
sub
ins
add
aam
mov
call
push
sub
cmp
fmul
ja
iret
lahf
call
mov
sbb
sub
aas
sub
ins
mov
pop
xor
ss
retf
scas
pushf
shr
and
das
push
cmp
pop
sbb
sbb
(bad)
push
iret
test
cmp
pusha
xor
aam
data16
retf
mov
cmp
add
cwde
pop
jg
imul
lods
cmp
scas
test
(bad)
(bad)
adc
jns
jg
dec
sub
jmp
sahf
scas
adc
int
sbb
adc
(bad)
adc
adc
push
inc
mov
aam
in
xor
(bad)
dec
mov
enter
and
out
xchg
enter
or
iret
stc
and
mov
mov
mov
fdivr
lods
mov
aaa
mov
push
xchg
in
shr
(bad)
or
sahf
cdq
mov
lds
mov
xor
sub
xor
pop
lods
dec
or
call
(bad)
out
scas
repnz
cmp
repz
(bad)
push
jae
bnd
adc
fwait
mov
in
cli
aam
fisttp
cmps
adc
sar
cmp
cmc
out
jo
cmps
loopne
xor
shr
add
leave
mov
mov
test
dec
or
mov
mov
mov
add
jb
or
or
or
std
sbb
push
cmp
push
std
outs
mov
sbb
sbb
imul
dec
dec
fsub
pop
dec
xchg
pusha
addr16
add
jp
mov
or
ret
dec
je
std
ret
and
imul
inc
lods
jl
mov
call
test
daa
cmp
adc
cwde
sub
popf
pop
push
(bad)
out
mov
sbb
retw
jmp
shl
sysret
in
imul
xor
dec
retf
push
cmp
(bad)
and
mov
mov
pop
dec
add
sbb
pop
jo
sbb
adc
aas
push
out
mov
mov
ins
xor
cmp
adc
add
push
sti
cmp
xor
sub
xchg
fs
addr16
cmp
pop
dec
ficomp
out
push
(bad)
(bad)
(bad)
je
adc
push
sub
xchg
and
loop
ficom
mov
in
and
or
jnp
jbe
xchg
cmp
in
push
mulps
out
outs
out
or
jb
and
leave
div
xchg
gs
es
sbb
cmp
ret
mov
fist
add
push
clc
or
xchg
mov
jae
mov
mov
xor
mov
pop
jp
sub
xor
xchg
push
xor
push
fwait
cmp
mov
retf
xor
sar
mov
mov
sbb
aad
sbb
cmps
sub
jmp
mov
mov
daa
cmovl
or
(bad)
fidiv
ins
call
xor
aaa
mov
pop
xor
mov
sub
cwde
push
dec
cs
xlat
aad
adc
pushf
mov
jbe
cmps
cld
stc
jl
push
in
or
shl
pop
inc
fwait
cli
nop
in
loope
shl
pop
xor
mov
aam
jb
inc
mov
int3
aam
push
int
leave
lea
jmp
mov
cld
xchg
test
outs
idiv
aas
jne
data16
fdivr
sbb
out
sbb
xchg
jne
mov
fwait
stos
dec
lods
sub
es
loop
dec
sub
sar
pop
pushf
and
or
out
outs
adc
and
in
mov
inc
ror
inc
jae
cmps
push
popf
dec
les
jl
cmc
add
popa
movs
retf
mov
mov
imul
inc
int3
aaa
call
add
fnstsw
test
mov
cmp
outs
or
fsubr
pop
ja
adc
adc
jl
ins
mov
xchg
sbb
sbb
test
xchg
movs
pop
add
cmp
mov
aaa
into
push
xchg
rcr
and
iret
add
adc
cmp
pop
shl
mov
sbb
xchg
dec
stos
inc
jbe
cmp
cmp
push
jbe
inc
ret
int3
adc
sti
mov
lahf
jns
mul
xor
bound
in
xchg
pusha
xchg
sub
outs
shl
hlt
pop
cwde
cdq
inc
or
(bad)
sub
dec
mov
pusha
cdq
(bad)
test
push
out
mov
fidivr
add
ret
(bad)
sti
sub
test
imul
mov
es
mov
and
sub
and
mov
in
xor
arpl
mov
imul
push
inc
pop
shl
jge
pop
add
mov
mov
inc
fstp
test
movs
ds
lds
pop
cmp
je
out
fist
div
scas
inc
outs
jo
cmps
cmp
mov
sbb
fdivr
dec
push
shr
aas
out
push
xchg
xor
add
in
push
lahf
fdiv
icebp
sbb
mov
or
dec
pop
cmp
pop
mov
dec
out
fwait
inc
jge
push
mov
inc
jg
xor
xchg
mov
sbb
fisttp
ret
inc
push
fldenv
pop
mov
push
push
arpl
mov
loop
sub
js
lahf
dec
pop
mov
sub
sbb
sbb
push
es
ret
fld
fnstenv
cli
retf
cmp
rcl
inc
fld
popf
mov
mov
cmp
ja
sbb
pop
add
scas
(bad)
fiadd
pop
push
xlat
int3
sub
enter
shl
xor
add
push
dec
inc
dec
into
adc
adc
lock
or
cmovl
mov
dec
fdiv
arpl
sti
loope
(bad)
(bad)
cmc
cmps
fdivr
cmp
mov
ss
sbb
mov
inc
mov
pop
mov
push
push
and
lock
or
jmp
adc
ds
inc
xchg
icebp
imul
test
enter
loop
js
dec
mov
mov
jge
cs
fisubr
mov
in
inc
sub
(bad)
aad
add
out
jecxz
out
sbb
or
dec
pop
mov
enter
mov
(bad)
in
mov
pop
cdq
add
stc
xor
or
test
jle
dec
leave
test
inc
adc
in
je
cli
mov
cmp
sub
xor
jmp
loop
push
inc
push
push
fs
push
and
lock
lahf
inc
imul
lea
mov
push
nop
and
cmp
outs
and
cld
(bad)
arpl
or
inc
add
sbb
sbb
push
jae
test
int3
test
cmp
mov
ins
jl
mov
jno
fcom
xchg
mov
test
rcl
lds
xor
mov
dec
push
fidivr
add
pop
ret
jge
mov
jmp
repnz
jg
pop
jmp
or
sub
mov
xor
jno
ja
or
out
das
mov
imul
sub
jl
(bad)
xchg
std
scas
movs
fimul
xor
test
mov
rcl
dec
retf
shl
add
outs
(bad)
and
sbb
pop
enter
dec
mov
mov
sar
push
push
rol
dec
xchg
and
sar
pop
cs
test
leave
iret
xchg
stos
call
inc
out
jnp
(bad)
and
push
aaa
addr16
ror
mov
add
xor
clc
stos
jb
inc
pop
push
retf
push
addr16
inc
cmps
fcmovu
mov
mov
aaa
aaa
add
daa
xor
pop
xchg
jmp
or
push
inc
scas
inc
test
pop
je
add
xor
xor
fcomp
mov
inc
call
pushf
jmp
bswap
repnz
rcr
loope
sbb
mov
icebp
sbb
adc
jmp
fwait
cld
inc
mov
popf
fcomp
push
xor
arpl
pop
aas
adc
ins
pop
outs
add
jmp
pop
in
lods
or
sub
ds
bound
lahf
and
and
test
mov
inc
loop
mov
pop
mov
repz
xchg
lods
sub
or
lahf
mov
pushf
and
mov
sub
inc
scas
cmps
(bad)
loopne
jl
je
stos
mov
mov
inc
add
xlat
inc
and
out
loop
and
mov
popa
dec
aas
addr16
(bad)
push
ds
or
add
aam
pop
add
sub
mov
lods
fs
or
cmc
aam
div
sub
out
pusha
js
pusha
pop
cmp
push
push
xor
lock
imul
add
pushf
sub
mov
shr
jo
retf
xchg
mov
enter
lahf
jne
or
call
or
dec
dec
adc
jb
lock
add
in
jecxz
pushf
jnp
shl
mov
or
neg
(bad)
adc
pop
nop
ror
cmps
(bad)
push
std
lea
cmc
jnp
inc
and
jmp
sahf
mov
push
cmp
movs
sub
or
cmp
movs
pusha
or
retf
stos
push
fcomi
jl
test
pop
(bad)
sbb
sbb
call
repz
outs
out
push
loope
gs
dec
icebp
and
inc
xchg
int3
inc
lods
movs
pop
xchg
jge
out
sub
ins
bound
(bad)
pop
push
pop
or
pop
jl
mov
add
xchg
mov
adc
cmp
push
jno
je
adc
and
pop
ds
out
xor
shl
outs
loope
aad
dec
inc
pushf
jmp
xchg
cs
or
mov
xor
sub
pop
fsubr
enter
dec
call
push
nop
xchg
mov
xor
mov
mov
push
cld
in
mov
push
jg
add
jae
ret
adc
lds
xor
js
out
out
and
call
fstp
sbb
add
jle
in
xor
popf
hlt
inc
outs
jno
repz
ret
out
and
fbstp
pop
loop
pop
jmp
pop
fsubp
stc
or
push
pop
cmp
test
mov
xchg
mov
scas
cmps
daa
push
mov
arpl
mov
sbb
jae
(bad)
iret
ret
push
fst
mov
add
jecxz
dec
jp
jbe
or
aad
das
popa
add
popa
fwait
and
ret
xchg
or
ins
cmc
adc
jmp
(bad)
in
mov
mov
test
sbb
mov
pop
or
mov
cmps
jne
sbb
push
jno
ret
rcl
jmp
or
push
iret
push
rcr
mov
adc
mov
pop
sbb
enter
jmp
ret
and
into
add
lahf
jmp
sub
addr16
pop
fistp
pop
or
ret
push
mov
xor
sub
aad
adc
adc
add
mov
data16
sub
push
(bad)
jle
mov
and
hlt
xor
pop
cmc
ds
mov
pusha
in
cs
xchg
inc
nop
dec
in
test
add
mov
adc
repnz
sub
in
push
and
xlat
clc
cmp
mov
lock
(bad)
out
icebp
sbb
mov
mov
and
je
iret
push
sub
test
push
push
call
add
sbb
retf
lods
ja
aam
movs
xchg
and
inc
push
xor
ja
xor
pop
inc
pop
data16
push
popf
jg
retf
call
adc
popf
dec
out
retf
dec
sbb
mul
push
jmp
xor
aaa
loope
pusha
rol
fist
data16
hlt
xchg
imul
ja
pop
loopne
fstp
push
push
jge
dec
mov
sbb
adc
xchg
mov
sbb
adc
pusha
xchg
pop
out
add
xor
mov
mov
and
test
ins
fs
or
not
xchg
into
cmp
inc
mov
lahf
sahf
mov
inc
(bad)
mov
cmp
mov
xchg
jbe
push
call
mov
stos
hlt
loopne
in
pop
cmp
add
mov
jle
ret
mov
stos
in
mov
or
jmp
aam
xchg
push
xor
push
xor
add
cwde
out
lea
fdivr
fld
dec
aad
(bad)
and
pop
xchg
in
jecxz
movs
ret
fnstsw
pusha
xor
jnp
sbb
retf
adc
mov
cmp
test
cwde
mov
mov
ins
call
ins
fwait
xor
sar
xchg
push
sbb
lods
fst
mov
pop
nop
mov
dec
daa
and
inc
cmp
pop
mov
pop
fs
xor
or
test
xchg
jae
mov
cmp
shl
cdq
push
push
fcom
sbb
sbb
xchg
adc
fwait
cmp
and
and
add
sbb
lahf
mov
gs
mov
(bad)
mov
cmp
in
data16
jns
or
std
inc
or
gs
sub
and
fcmovbe
ds
or
add
icebp
mov
jp
loop
adc
mov
pop
cld
fyl2x
sbb
cmp
ror
ss
xor
xlat
add
sar
and
push
mov
pop
test
fild
cs
inc
das
gs
shl
les
mov
gs
jns
in
and
push
movs
daa
xor
add
stc
fnsave
mov
iret
cmp
pop
and
imul
sub
shl
mov
and
loop
je
in
xchg
ret
cdq
inc
adc
test
cdq
push
(bad)
out
jecxz
div
ret
cmp
or
cwde
lock
mov
jecxz
cmp
jnp
push
cdq
rcl
mov
xlat
fs
ret
in
cs
retf
pop
jno
and
aaa
in
scas
pop
or
out
shl
inc
jge
push
cld
or
adc
sub
add
(bad)
lock
push
add
or
xor
mov
xlat
xor
or
inc
not
mov
scas
mov
add
xor
push
adc
lods
mov
xchg
loop
enter
movs
pop
mov
mov
jno
retf
int
fisttp
loop
ror
jl
and
mov
(bad)
lock
in
mov
nop
lock
mov
fdiv
out
mov
mov
push
sub
xor
into
lods
push
ret
or
push
push
fsubp
adc
push
imul
xchg
adc
fstp
jo
sbb
addr16
sar
fwait
add
int
ins
xchg
loope
push
lock
push
daa
dec
add
xchg
stc
jg
push
imul
jo
icebp
stos
mov
adc
pop
sub
or
push
jp
outs
stos
fwait
outs
mov
adc
das
int3
shl
jle
mov
pop
xor
addr16
out
out
imul
inc
push
and
nop
cmp
jns
xchg
fidiv
jbe
xor
lods
loopne
jno
xchg
fsubr
(bad)
dec
(bad)
jle
clc
mov
scas
jecxz
mov
ds
fadd
adc
xchg
jl
push
pusha
aaa
xchg
fild
fwait
jb
(bad)
mov
(bad)
push
mov
(bad)
xor
leave
(bad)
outs
xchg
inc
pop
pop
jnp
mov
pop
adc
mov
outs
mov
xlat
int3
inc
cli
mov
lock
mov
cmp
and
sub
test
inc
adc
push
jb
mov
test
sbb
and
jae
or
dec
sbb
js
loop
and
adc
cmps
mov
sahf
jle
inc
(bad)
sbb
mov
inc
xor
into
inc
rol
inc
jl
push
call
cmp
ja
jo
cmp
out
pop
fbld
mov
xchg
ins
adc
(bad)
jl
in
js
rcr
icebp
push
sbb
jo
cmp
ss
sub
mov
inc
fistp
jno
ds
inc
loopne
out
adc
loop
icebp
jnp
rol
in
pop
pop
add
das
xchg
xor
xor
mov
in
aam
fwait
mov
jns
push
jl
sub
adc
xor
out
pop
rcl
mov
add
cmp
dec
push
cdq
repnz
cli
or
pop
dec
add
cli
jge
cs
adc
xlat
jne
les
fsubr
pop
xchg
adc
adc
mov
loopne
aas
or
jp
stos
jle
xchg
xchg
fdivr
push
push
outs
out
retf
arpl
outs
scas
mov
shr
cmp
sbb
pop
into
and
mov
out
adc
popf
lock
outs
or
or
pop
add
adc
and
sysenter
stc
call
in
mov
mov
fidivr
dec
push
std
repnz
rol
pop
aas
outs
test
pop
stc
ins
mov
outs
cs
push
pop
in
pop
or
iret
ret
(bad)
fild
sub
out
fwait
loopne
xchg
sti
imul
lahf
adc
sub
(bad)
adc
mov
adc
jmp
mov
aas
daa
mov
(bad)
mov
or
xchg
mov
je
gs
inc
mov
xor
mov
addr16
(bad)
sbb
add
inc
out
movs
mov
jecxz
cmp
pop
dec
idiv
out
hlt
pop
es
and
cmps
add
sbb
stos
dec
mov
jp
ret
in
sbb
push
or
fadd
rcl
jg
sar
fcmovu
xchg
sbb
cli
pop
pop
sbb
mov
not
mov
jmp
or
cmp
jo
or
add
sbb
cmp
adc
addr16
xor
jnp
(bad)
call
inc
popa
pop
xchg
jno
xchg
lea
jae
(bad)
or
popf
inc
sbb
in
stc
dec
pop
imul
pop
daa
stos
ss
xor
xchg
imul
push
retf
aam
mov
xlat
add
mov
mov
icebp
inc
lock
adc
cli
jae
mov
or
mov
mov
adc
lods
mov
sbb
mov
jge
in
mov
sbb
mov
sub
jns
add
xchg
push
and
daa
sub
sub
add
or
cdq
dec
mov
lds
into
bound
add
mov
push
xlat
std
not
pop
add
mov
ror
(bad)
shl
mov
inc
mov
repnz
inc
sbb
(bad)
push
push
punpckhbw
mov
mov
cld
and
in
pop
pop
imul
stos
adc
(bad)
pop
jmp
push
mov
adc
pop
inc
xor
sbb
adc
inc
and
cmp
pop
imul
test
mov
sub
xchg
bnd
in
outs
in
mov
adc
fisttp
mov
imul
jb
in
int3
push
sbb
(bad)
fs
js
jns
leave
inc
mov
retf
jmp
repnz
sti
cmps
test
inc
add
add
cmp
jmp
mov
repz
rol
cmp
mov
popf
mov
fcmovnbe
push
xlat
fbld
and
js
sysret
jl
(bad)
mov
leave
adc
hlt
and
or
push
push
fs
ss
sar
ins
pushf
push
fidivr
dec
inc
xchg
dec
aaa
loope
rol
sbb
mov
jb
fist
inc
pop
sbb
pushf
enter
or
sub
or
fstp
hlt
inc
mov
movs
cmp
add
mov
push
xor
test
es
sub
loopne
xchg
push
or
push
(bad)
jnp
cmp
or
adc
sub
das
sub
fadd
hlt
or
jae
xchg
dec
dec
movs
mov
sbb
push
cs
push
dec
jecxz
jmp
pop
inc
push
scas
inc
mov
fnstcw
adc
cmps
icebp
fwait
mov
jae
mov
mov
add
jbe
stos
xchg
ins
mov
sub
adc
jge
scas
dec
shl
es
jp
into
mov
cld
add
or
mov
iret
scas
arpl
stos
xor
icebp
xor
jnp
or
push
inc
jns
sbb
ret
and
fwait
leave
pop
or
sahf
in
xor
pop
out
sar
mov
pop
xor
(bad)
test
sbb
mov
jmp
outs
test
or
punpcklbw
test
inc
mul
fcomi
add
xchg
xor
cs
lea
push
cmc
jge
pop
nop
repz
ret
xchg
mov
or
sbb
fwait
dec
fld
mov
std
in
mov
dec
cs
in
mov
scas
fdivr
mov
sar
enter
test
popa
add
ja
mov
fcomp
jne
xchg
sub
(bad)
add
jecxz
adc
jp
mov
mov
jecxz
stc
retf
sub
mov
push
adc
ret
mov
out
iret
jb
add
iret
(bad)
into
and
add
mov
mov
daa
mov
adc
sar
imul
out
add
into
mov
mov
xor
ss
add
leave
(bad)
lods
sub
or
jge
mov
pop
adc
les
and
mov
inc
hlt
sbb
sbb
out
aaa
mov
mov
not
and
aad
mov
inc
add
scas
jno
push
or
clc
fimul
fs
jne
and
cmc
cmp
adc
test
or
and
push
add
test
imul
loopne
xchg
fistp
push
retf
lock
mov
push
loope
sub
push
mov
dec
push
xchg
push
(bad)
loop
sbb
cmp
jl
sar
sub
dec
ret
and
jle
test
mov
(bad)
mov
jmp
jle
sbb
jg
add
jae
mov
call
pop
(bad)
push
inc
cli
mov
xchg
add
out
add
push
cwde
jbe
jno
test
dec
popa
jne
push
push
popa
or
out
lods
jecxz
das
ins
dec
xchg
mov
scas
(bad)
sbb
jae
mov
cmp
jp
ins
out
(bad)
sbb
enter
std
scas
jmp
fild
into
xor
and
mov
push
dec
popa
aas
inc
jmp
loopne
cmp
ja
mov
fstp
(bad)
mov
stc
mov
out
into
cmp
jle
and
add
or
pop
scas
cli
jecxz
test
sub
popf
stos
mov
aad
shl
dec
and
repz
popa
mov
and
lds
sub
jnp
pusha
pop
popf
in
cmp
jae
jmp
xchg
or
pop
lods
pushf
jae
fimul
rcl
lds
jp
sbb
idiv
out
(bad)
test
adc
std
fstp
(bad)
movs
(bad)
push
mov
xor
inc
xor
push
pop
stc
pop
pop
adc
cmc
jp
mov
xchg
mov
push
cmp
pop
jnp
xlat
or
fimul
outs
jb
xchg
cmp
int3
add
sub
(bad)
inc
leave
loope
ja
gs
(bad)
push
stos
ja
int3
adc
fst
std
pop
into
jg
ja
mov
enter
jecxz
cmps
retf
cmp
lock
push
jnp
cmp
loop
les
xor
inc
adc
push
adc
xchg
rcl
sub
mov
scas
mov
adc
adc
leave
out
and
fstp
cs
pop
lods
xchg
add
loopne
xchg
push
xor
adc
sub
daa
mov
mov
ror
in
xchg
addr16
cmc
jmp
cmp
xchg
fisub
push
fwait
(bad)
ins
popa
and
sahf
jge
lahf
dec
mov
xchg
fnsave
mov
sub
and
dec
dec
vpsrld
popa
mov
popa
dec
popf
adc
sahf
sub
cmp
loopne
inc
xchg
popa
xlat
inc
bound
sbb
cmp
clc
shl
push
enter
sbb
loop
clc
test
jecxz
pop
test
push
and
adc
cmp
cmp
icebp
xchg
pop
pushf
gs
call
mov
mov
inc
leave
inc
mov
add
stos
sbb
in
add
std
fsub
mov
sbb
jnp
shl
lods
or
daa
jl
mov
cmc
call
push
xchg
xor
push
cdq
jmp
add
mul
add
retf
bound
cmp
mov
(bad)
mov
mov
aam
sub
ficomp
into
neg
xchg
xor
in
xchg
push
lea
jns
adc
and
sub
stos
and
movs
sbb
loopne
mov
daa
sar
test
dec
outs
sbb
mov
mov
repnz
cmp
ds
(bad)
cmc
or
sar
ins
loop
repnz
ins
mov
push
retf
jp
arpl
sar
mov
push
pop
aaa
dec
addr16
add
in
out
sub
add
push
mov
leave
mov
push
das
fdiv
sub
xor
sqrtps
or
fisubr
add
xchg
jl
xor
mov
xchg
scas
pop
jnp
push
push
gs
popa
cmc
movups
or
inc
lods
push
jp
scas
pushf
cdq
and
push
pop
adc
sbb
xor
icebp
sbb
lds
sahf
fstp
or
clc
mov
pause
sahf
dec
fdivr
inc
shl
shr
(bad)
lods
loope
mov
sbb
sbb
dec
mov
cmc
pop
es
jg
pop
mov
sbb
js
dec
stos
rcr
leave
retf
pop
(bad)
lods
adc
push
popa
jno
dec
xor
movs
inc
(bad)
mov
test
mov
jo
repz
jo
adc
call
(bad)
ss
xchg
fadd
jmp
dec
lods
sbb
out
fbld
dec
xlat
in
xchg
pcmpgtw
gs
int3
out
daa
stos
pop
xchg
out
push
add
adc
out
sbb
dec
add
scas
es
jp
push
and
or
cld
pusha
pop
jp
idiv
or
jmp
push
div
and
(bad)
jo
jno
xor
sub
cwde
push
movs
data16
rol
cmp
sar
int3
mov
jge
mov
into
(bad)
sbb
bound
sub
retf
push
push
cmps
mov
ror
mov
test
mov
stos
icebp
mov
outs
adc
dec
push
jae
outs
(bad)
pop
call
sub
add
pusha
lds
xlat
and
jno
cmps
mov
cmp
and
fcom
or
jg
and
jno
or
mov
lods
dec
pusha
popf
push
hlt
or
pxor
push
lods
ds
sub
or
movs
test
retf
inc
xchg
push
jmp
sbb
test
test
gs
fild
movs
aaa
xchg
mov
push
mov
or
cmp
mov
shl
mov
sti
in
cmps
inc
mov
push
xchg
into
ins
or
mov
aad
aaa
dec
mov
xor
adc
(bad)
loopne
cdq
push
das
in
pop
push
sbb
push
popf
sbb
mov
test
xor
out
sub
mov
out
lds
ss
ror
cmc
aas
(bad)
xadd
inc
mov
xor
push
xchg
enter
test
(bad)
stos
sbb
or
out
movs
fisub
or
or
sbb
sub
xchg
add
es
dec
push
aad
dec
jmp
mov
jg
xor
fninit
mov
fist
sub
je
lds
aam
scas
mov
aad
ds
jo
cld
xchg
ins
mov
aad
inc
add
aam
les
pop
test
jg
sub
jnp
jbe
adc
push
mov
shl
mov
add
enterw
jmp
stc
ss
xor
je
movs
cli
lds
shl
xchg
or
cmps
sub
sbb
fucomp
(bad)
into
cmc
in
push
sti
adc
aaa
call
add
pushf
stc
sti
sar
xor
add
cmp
xchg
(bad)
retf
xchg
into
sub
sub
clc
inc
sti
jmp
dec
add
jae
mov
push
jmp
fwait
and
mov
dec
dec
xchg
repz
imul
lock
push
and
jp
mov
mov
jne
pop
mov
ins
repnz
ins
cmp
fucomip
xor
(bad)
inc
mov
retf
push
enter
lahf
pop
hlt
shr
loopne
sbb
fxch
adc
inc
pop
push
bound
aam
sar
pushf
or
cld
fisubr
xchg
nop
and
pop
ds
pop
pop
or
cld
sub
jg
(bad)
pop
cmp
xor
bound
int3
sbb
movs
mov
or
int3
mov
(bad)
das
test
int3
fist
and
xchg
xor
push
add
nop
cmp
dec
jmp
pop
inc
mov
mov
cli
push
cmps
pop
sub
xlat
cmp
xchg
mov
loop
int
stc
xor
mov
(bad)
retf
(bad)
push
pop
mov
rcl
repz
push
loopne
je
push
cs
iret
aad
or
sahf
aad
jns
shl
les
cmp
inc
jo
imul
rcr
mov
xchg
cli
xor
cs
inc
iret
mov
call
add
loop
or
or
sbb
ja
xchg
sbb
jo
mov
outs
xchg
test
ins
aaa
sbb
mov
inc
and
mov
fnstsw
shl
mov
pop
jns
xchg
xor
and
and
jp
pop
nop
mov
sbb
inc
cmp
sub
dec
ds
jne
push
cmp
adc
jle
dec
gs
(bad)
jecxz
sbb
mov
dec
out
add
sub
pop
mov
cmp
leave
(bad)
push
dec
pop
outs
inc
scas
mov
inc
cmp
mov
nop
sub
popa
inc
jne
adc
stos
sbb
retf
jmp
inc
xor
cmp
sbb
cmp
adc
jmp
dec
push
push
xchg
mov
ins
push
int3
jl
cdq
or
call
inc
jb
cmps
push
fadd
sub
sti
leave
push
shl
repnz
nop
pop
mov
mov
or
in
test
loop
mov
imul
dec
inc
out
jb
push
scas
out
outs
in
dec
fs
les
or
sub
jbe
bound
popf
das
(bad)
jo
fstp
xchg
fidiv
xchg
mov
in
repz
aam
sub
lods
sbb
dec
pop
push
js
xchg
inc
sub
cs
and
pop
inc
dec
ss
add
scas
rol
xchg
and
jb
pop
cs
xchg
push
jle
sbb
in
in
fld
scas
int3
or
mov
jmp
xor
and
and
push
rol
loope
je
mov
call
push
ds
or
test
inc
lock
(bad)
out
mov
jnp
inc
stos
jnp
mov
dec
retf
cmp
gs
bound
and
inc
shl
retf
loop
add
shl
out
sub
adc
imul
xor
fstp
mov
test
xor
call
shr
psubd
fsub
std
popf
sub
cmp
nop
adc
retf
mov
fist
push
aas
fst
sbb
mov
clc
jno
push
(bad)
movs
pop
inc
dec
std
(bad)
rol
cdq
and
call
pcmpeqd
or
and
mov
loopne
in
outs
mov
pusha
leave
pop
add
inc
mov
test
xchg
out
jne
sub
fbld
mov
imul
ror
iret
retf
add
xchg
xor
adc
jns
out
lods
pop
jo
jmp
sub
in
sub
xchg
jb
lock
add
sub
pop
jae
sbb
or
jo
mov
xor
push
mov
push
mov
mov
dec
xchg
push
das
dec
mov
mov
jmp
adc
mov
pop
vcvtdq2pd
mov
ret
add
push
outs
cdq
movs
xchg
fimul
cmp
popf
pop
add
not
mov
mov
out
pop
or
push
rcl
icebp
push
inc
xchg
leave
pop
les
fs
jb
cmp
mov
sbb
(bad)
gs
jne
inc
data16
sbb
mov
movs
loopne
sbb
in
add
lea
or
adc
or
mov
aas
push
mov
popa
jb
daa
cmps
push
pop
stos
cs
mov
add
xor
add
cmp
mov
mov
jbe
fbstp
sbb
(bad)
scas
(bad)
push
mov
add
les
sub
push
loop
pop
xchg
push
rcr
xor
(bad)
mov
scas
into
mov
mov
mov
adc
push
push
in
cmp
retf
dec
adc
jmp
mov
stos
loope
and
das
jnp
leave
push
pop
mov
dec
fld
cld
dec
xor
ins
mov
inc
pop
scas
dec
mov
cs
outs
inc
xchg
ins
dec
add
push
pop
cmp
(bad)
fistp
inc
xor
shl
mov
aad
mov
pushf
fdivp
push
xchg
adc
sub
cs
pusha
retf
inc
xlat
push
dec
imul
imul
cmc
(bad)
bound
cli
inc
mov
ja
fwait
test
(bad)
repnz
inc
add
jge
cmc
cli
nop
imul
inc
in
retf
gs
mov
jmp
rcr
inc
or
daa
and
pop
inc
jb
call
leave
bnd
or
(bad)
mov
and
shl
pop
mov
jne
aam
push
les
daa
fstp
std
(bad)
fld
leave
out
lahf
in
clc
idiv
mov
jae
in
arpl
jp
or
xor
fidiv
pop
test
adc
sbb
sub
sub
push
mulps
xchg
scas
pop
jle
mov
clc
pop
and
and
push
pop
out
pushf
imul
out
inc
fiadd
int3
mov
xor
and
retf
retf
cmps
mov
fsubp
retf
jae
push
ds
pushf
sbb
js
mov
adc
loop
jg
mov
sub
push
test
adc
mov
cmp
out
enter
mov
(bad)
cwde
xchg
fisub
mov
inc
pushf
adc
nop
or
pusha
das
int
xchg
out
mov
(bad)
jo
int
mov
xchg
movs
dec
mov
sbb
sahf
shl
aaa
sbb
gs
enter
or
cmp
inc
into
pop
int3
scas
mov
dec
or
cmp
cmp
push
(bad)
(bad)
cmc
ja
mov
call
dec
and
fsub
push
call
dec
sbb
sbb
(bad)
call
sbb
aas
jmp
xor
scas
push
or
mov
in
xchg
push
sub
push
sbb
push
inc
pop
daa
in
mov
loop
gs
add
xor
pop
int3
xchg
(bad)
fsqrt
shr
xor
cwde
sbb
aas
dec
(bad)
js
(bad)
xor
xchg
shl
lods
xchg
sub
enter
les
xor
sub
in
push
dec
cmp
cdq
stos
lods
xchg
cwde
loop
and
mov
sbb
push
dec
mov
xor
mov
out
arpl
push
pop
inc
sub
retf
xchg
out
call
xchg
inc
ror
pop
cmps
xchg
in
jp
das
mov
push
push
ins
dec
std
jb
pop
std
fwait
dec
in
test
mov
xor
rcr
sar
in
lods
pop
mov
popa
or
and
jo
fsubp
adc
repz
retf
(bad)
push
add
outs
push
mov
fisttp
dec
inc
mov
outs
sar
jmp
mov
out
not
mov
test
mov
xor
adc
push
dec
inc
and
lahf
in
sub
cmp
jecxz
adc
and
dec
mov
ins
shl
push
mov
cmp
mov
push
xor
lods
jp
es
sbb
(bad)
sbb
add
cmps
and
mul
mov
jae
jno
jae
into
jge
in
into
shl
pop
push
sar
mov
jnp
and
popf
shr
inc
xchg
cmp
aaa
mov
xlat
test
shl
cwde
ins
stc
inc
test
and
int3
sub
push
add
mov
xor
neg
in
jae
aam
ror
retf
jbe
adc
inc
xchg
mov
ja
cwde
sahf
movs
stos
or
mov
aas
pop
popf
imul
xor
mov
aas
xor
and
icebp
cs
dec
popa
dec
mov
(bad)
mov
int3
fs
sahf
int
mov
mov
mov
mov
ja
pop
dec
aad
lods
or
fsubp
push
mov
retf
push
out
les
ja
hlt
sub
popa
sbb
icebp
mov
and
cmp
pusha
fist
push
cmp
ss
mov
out
in
push
inc
out
nop
push
cmp
cmps
or
and
test
in
add
mov
popf
or
mov
stos
(bad)
xlat
or
(bad)
sub
fld
mov
test
mov
and
shr
sti
jge
and
jnp
mov
aad
ret
jg
mul
cmp
call
xchg
int3
(bad)
and
mov
jbe
mov
stos
es
push
cmp
mov
mov
(bad)
xor
add
mov
push
adc
xchg
push
fdivr
sub
shr
jmp
jmp
sub
(bad)
push
(bad)
xchg
mov
aas
(bad)
push
inc
mov
outs
das
jmp
aad
adc
xchg
cmc
jbe
inc
mov
jbe
(bad)
dec
push
jecxz
mov
cmc
sbb
stos
dec
push
icebp
gs
sbb
mov
dec
(bad)
call
inc
xchg
ss
cs
push
or
js
ss
(bad)
inc
sar
retf
in
data16
xchg
stc
adc
inc
or
xor
xchg
mov
aaa
popf
xor
push
les
add
cmp
inc
mov
js
icebp
out
inc
inc
cmp
(bad)
mov
add
add
add
sub
(bad)
les
shl
rol
in
or
mov
pop
mov
test
push
cmp
or
in
sbb
stc
fs
xchg
sbb
int
mov
xchg
inc
or
pop
into
inc
jmp
push
fsub
fcom
sahf
mov
adc
lahf
sahf
mov
mov
adc
or
mov
arpl
pop
xor
lds
mov
pop
pop
or
sbb
jns
fiadd
cmp
scas
sahf
mov
inc
test
lahf
dec
ficom
lea
sbb
ds
jns
mov
std
mov
sahf
std
sbb
mov
dec
aas
xor
adc
out
(bad)
fnsave
scas
mov
(bad)
push
dec
mov
into
fisub
push
in
add
and
add
(bad)
push
inc
cmp
xor
push
mov
sub
lods
or
sub
cdq
pmulhuw
push
inc
pop
add
sbb
pop
ret
jle
dec
jecxz
jg
in
push
pushf
mov
or
retf
sub
repnz
loopne
push
and
jnp
xor
mul
leave
jnp
clc
pushf
mov
out
mov
xor
nop
scas
clc
les
cmp
dec
xchg
(bad)
(bad)
cmps
ficom
sbb
add
ret
push
jne
adc
cdq
jmp
pop
or
mov
dec
popa
nop
ret
or
adc
xor
and
jg
mov
adc
add
cmc
rcl
push
add
fnstsw
mov
xchg
xor
lock
push
fmul
xor
or
jge
add
sub
shl
test
popa
loop
push
stos
lahf
gs
out
sub
rcl
mov
in
mov
jle
gs
in
dec
lods
jae
cmps
mov
add
(bad)
jns
adc
cmp
gs
mov
pop
push
mov
in
imul
fisttp
mov
(bad)
mov
and
add
cmc
cli
jmp
xchg
jl
ror
inc
enter
sbb
jo
xor
mov
in
push
out
sub
and
pusha
inc
inc
cmc
cmp
sbb
test
inc
in
loope
or
out
jae
add
cwde
out
scas
xor
inc
imul
or
push
leave
add
pushf
xchg
lds
cmp
and
mov
in
ss
add
(bad)
not
cmp
push
test
pusha
ins
mov
sbb
xchg
je
mov
add
int
mov
mov
rcr
adc
mov
mov
cdq
lods
xor
cld
mov
(bad)
repz
jbe
xor
jmp
rol
xor
mov
mov
loopne
repnz
fld
aam
jmp
ja
push
mov
cmps
out
retf
movs
and
push
popa
add
mov
push
ins
fwait
pusha
repnz
jae
cmps
add
test
xor
push
sbb
xchg
stos
fimul
ficom
xor
xchg
dec
or
jbe
jle
cmc
(bad)
movs
cs
sbb
sbb
adc
sahf
add
inc
xchg
es
dec
ja
(bad)
cdq
jns
(bad)
or
(bad)
movs
loopne
adc
lea
mov
xchg
fs
fnstsw
js
test
scas
push
inc
cdq
(bad)
mov
fild
and
dec
dec
call
pop
jp
mov
sub
div
sbb
imul
push
xor
push
daa
push
sti
mov
jle
cdq
addr16
(bad)
call
mov
add
cmp
push
or
cs
or
cli
mov
aam
fistp
pop
mov
jmp
jecxz
jg
clc
jl
push
add
lahf
push
call
jge
pop
sbb
jge
out
rcr
or
rol
mov
sti
cmp
fadd
outs
(bad)
(bad)
push
or
int
lds
fs
fisubr
fwait
imul
(bad)
stc
cmp
sbb
dec
inc
js
sub
add
in
retf
cvtpi2ps
add
daa
mov
jne
xchg
fcom
cmovno
aad
xor
mov
scas
dec
mov
(bad)
and
call
pop
push
test
ret
pop
xor
stc
arpl
add
clc
rol
pusha
xchg
mov
xchg
ret
in
jo
jae
scas
test
dec
push
(bad)
inc
inc
outs
adc
repz
loope
push
(bad)
scas
lahf
adc
(bad)
(bad)
icebp
repz
rcl
mov
mov
cs
and
cmc
or
xchg
imul
ficomp
mov
arpl
jg
jecxz
outs
iret
ffreep
push
sbb
stos
xchg
fstp
mov
test
fild
sub
mov
mov
stos
sub
fisubr
mov
int
mov
es
outs
pushf
mov
ret
push
cmp
or
ja
fidivr
xor
movs
imul
fdivr
ror
retf
add
dec
jno
jl
pop
shr
cmps
cmp
int
or
out
pop
adc
mov
xchg
int3
into
lahf
ret
es
pop
add
enter
in
std
pushf
daa
fs
fcomp
call
adc
add
imul
mov
jno
xor
ror
leave
rol
push
bound
mov
fist
sub
mov
popf
mov
cli
mov
pop
stc
cmp
mov
add
test
adc
loopne
ins
fild
jbe
sub
les
(bad)
cmp
cmps
sub
jbe
jns
std
(bad)
in
iret
loop
dec
fimul
push
aad
out
push
in
dec
push
loop
jo
inc
cli
fstp
loop
mov
cmp
repz
and
push
mov
rol
cmps
out
call
xor
pop
pop
inc
jb
sbb
push
pop
adc
add
pusha
je
xor
dec
and
cmp
mov
sbb
pushf
mov
pop
mov
xor
lods
pop
and
fnsave
mov
xor
mov
enter
lahf
and
jo
push
inc
(bad)
(bad)
jp
cmp
jmp
push
sub
fs
js
mov
ret
and
dec
idiv
push
mov
mov
stos
out
cdq
retf
js
dec
loop
out
cmp
add
test
sbb
int
(bad)
sti
or
clc
movs
aas
repnz
cmp
or
es
or
test
scas
mov
shl
fcmovnbe
xchg
repnz
les
jnp
ds
call
in
inc
xor
sbb
repz
lods
aaa
cli
mov
xchg
mov
pop
pop
sub
test
xor
mov
mov
or
imul
adc
stos
add
test
sti
outs
add
pop
retf
pop
popa
mov
sbb
mov
hlt
not
pop
adc
mov
gs
push
sub
cdq
adc
lahf
sti
das
inc
or
mov
or
xchg
add
sbb
cli
mov
idiv
xor
in
(bad)
movs
leave
xchg
movs
inc
rcr
jae
inc
jle
push
add
add
sub
jecxz
xor
adc
cs
jbe
push
retf
mov
stos
xor
mov
int3
jmp
popa
push
add
inc
inc
outs
mov
push
hlt
jnp
stos
lock
(bad)
push
sub
push
or
or
sub
mov
rcr
inc
sub
repz
test
or
call
xchg
adc
cmp
icebp
jecxz
pop
inc
push
into
mov
jae
cmp
(bad)
xor
(bad)
cld
jmp
sbb
out
and
into
add
xor
bound
pushf
push
std
fiadd
add
or
xchg
jge
dec
mov
sbb
inc
xchg
jp
sbb
push
xchg
shl
outs
repnz
(bad)
cld
jmp
mov
scas
loop
dec
mov
sub
jb
adc
mov
xor
sbb
push
push
mov
mov
xchg
(bad)
enter
pop
ins
lock
sar
mov
cmp
test
inc
adc
pop
mov
std
jg
and
lods
xchg
pop
jl
sub
retf
(bad)
dec
mov
fmul
sahf
movs
fwait
inc
mov
clc
test
test
ret
test
mov
cmp
xor
sti
repnz
jmp
repnz
cmps
(bad)
push
xchg
dec
(bad)
xor
test
cmc
int
adc
push
mov
xchg
mov
mov
adc
in
or
and
add
xor
and
loopne
dec
mov
sbb
fidiv
sbb
adc
pop
inc
add
cmps
jne
mov
movs
add
push
lahf
cmp
arpl
or
sbb
xchg
in
inc
sahf
push
cwde
adc
shr
fucomi
retf
stc
and
mov
stc
inc
mov
enter
dec
test
(bad)
adc
jmp
into
sub
fldenv
aam
in
rcl
mov
out
mov
cmp
dec
mov
iret
(bad)
stc
and
pop
je
cld
loope
call
mov
cmc
scas
cld
push
push
shl
xor
adc
iret
sub
js
add
jp
mov
push
dec
push
dec
dec
add
sbb
pop
mov
pop
jge
pop
add
or
mov
cdq
push
xchg
aad
int
inc
and
mov
jmp
fidiv
add
mov
dec
int3
lods
dec
or
stos
xor
mov
repnz
and
daa
push
shl
lds
out
rcl
fwait
sub
jge
mov
leave
sub
mov
jge
addr16
ret
and
xlat
pusha
xchg
push
sub
inc
add
dec
jbe
push
(bad)
pop
fsub
xchg
daa
and
call
sub
add
fdivr
sub
inc
xchg
jns
sar
adc
push
pushf
lods
add
pop
cs
or
jo
ins
shr
test
sub
mov
jbe
sbb
lahf
retf
mov
das
mov
popa
xchg
out
push
bound
fstp
inc
sbb
inc
push
add
add
popf
hlt
popa
push
lahf
clc
sahf
fs
push
push
jge
add
scas
or
adc
ret
fwait
aad
mov
aad
mov
mov
cmp
pop
sub
out
jg
cdq
inc
pop
mov
ss
les
lods
clc
pop
(bad)
cmp
jge
mov
mov
fld
shl
xchg
sbb
mov
(bad)
dec
xchg
mov
push
shl
cmp
ins
cwde
in
cmp
cmp
adc
jno
(bad)
sbb
lea
jns
or
cmp
adc
into
add
aam
repz
pushf
jno
fidiv
pop
xchg
enter
dec
sbb
mov
fnstcw
clc
mov
jg
mov
mov
jl
ins
dec
jle
xchg
repz
adc
test
outs
pop
xor
add
adc
dec
packuswb
xor
sub
daa
aam
xchg
call
xor
jg
cdq
push
fidivr
je
(bad)
aam
push
movs
outs
and
ficomp
push
or
clc
pop
mov
jno
dec
retf
jae
out
jne
jp
retf
movs
repnz
outs
les
or
add
fnstsw
and
adc
and
dec
popa
xchg
test
fcom
rcr
cmp
les
(bad)
int3
mov
scas
jno
retf
mov
daa
sbb
dec
and
mov
std
loop
push
lahf
clc
outs
pop
fidiv
(bad)
push
add
pop
aaa
out
add
add
aam
xchg
fld
cmps
scas
iret
jg
(bad)
jnp
pop
fwait
xor
jae
inc
jnp
pop
es
cwde
mov
cmps
or
fnstcw
sub
imul
loope
cmp
jbe
ror
and
and
les
adc
in
jmp
je
adc
push
cmp
or
shl
sbb
add
daa
retf
ror
test
dec
jl
mov
jne
jl
push
sahf
or
inc
ss
mov
mov
es
or
pop
(bad)
mov
int3
and
call
rcl
xor
dec
repz
jo
lahf
cmp
cs
mov
jl
jb
lea
ss
and
sahf
lea
cmp
jge
add
leave
xor
sbb
mov
in
ret
xlat
fcmovne
(bad)
jle
data16
cld
shufps
fs
clc
arpl
loope
push
out
loopne
xor
ror
xor
repnz
add
test
jns
jbe
and
int
adc
jne
mov
ins
pop
bound
add
fmul
pop
int3
out
retf
dec
and
fs
in
mov
mov
mov
mov
mov
push
cmp
cmps
push
ja
sub
mov
inc
cld
cmps
into
imul
add
std
push
addr16
push
adc
rcr
aaa
cmp
sar
mov
mov
push
mov
mov
push
and
pusha
jp
pop
in
sar
test
mov
outs
push
dec
stc
in
ret
sub
mov
dec
test
xor
shl
stos
out
cmp
ret
dec
fcom
das
lahf
add
and
jecxz
add
mov
xor
jbe
fcomp
leave
cmp
dec
dec
pushf
xchg
inc
xlat
sub
adc
outs
push
sub
fs
pop
ror
sbb
pop
add
push
ficomp
pop
sub
pop
add
stos
je
xor
push
pop
sub
lods
pushf
cmc
dec
push
fist
ds
dec
pop
aad
lods
mov
jb
stos
into
pop
xchg
daa
mov
fld
std
push
and
mov
inc
sahf
loopne
jae
(bad)
pusha
pop
sbb
jns
add
cmps
int
stc
xor
xchg
ss
jmp
mov
out
aam
(bad)
ficom
mov
xchg
lds
xor
stos
addr16
les
test
cmp
scas
jle
mov
push
inc
mov
imul
xchg
fisttp
rcl
test
dec
sbb
push
test
jo
pop
ror
rcr
call
lods
or
fdivr
fwait
jp
retf
shl
sti
ror
mov
xchg
adc
mov
push
dec
add
or
inc
xor
sbb
sar
inc
inc
or
jb
repnz
pop
inc
mov
push
pop
cdq
sub
scas
loopne
xor
es
mov
mov
in
xor
inc
pop
fdivr
cs
test
in
ret
jbe
pop
inc
pop
sub
adc
inc
mov
mov
test
stos
push
pop
clc
jg
dec
fist
fdivr
inc
test
add
pop
aas
dec
or
sub
push
test
sbb
add
sahf
neg
pop
pop
dec
lock
(bad)
cmps
add
mov
inc
xchg
mov
xchg
ret
mov
mov
sti
cli
push
enter
jg
sbb
sbb
sbb
rol
dec
cmp
jmp
and
call
jne
test
stc
xchg
(bad)
sbb
out
inc
or
push
mov
(bad)
into
and
test
adc
aam
inc
cmp
xchg
in
add
dec
shr
inc
or
xor
popf
das
add
das
retf
aad
fidiv
adc
fnstcw
mov
pop
imul
pusha
xor
and
push
aad
leave
mov
arpl
add
push
out
sbb
cmps
sbb
xor
mov
fstp
xor
aaa
outs
ds
repnz
popf
pop
arpl
adc
and
push
shr
mov
xor
int
push
enter
dec
(bad)
je
out
cli
inc
jbe
mov
push
in
cmc
rcr
aas
dec
pop
mov
push
shl
movs
movs
cwde
lea
push
pusha
shr
stos
pop
and
pop
dec
mov
pusha
pop
and
lahf
jl
xabort
xchg
sub
test
inc
aas
push
add
rcr
jnp
pop
inc
adc
je
neg
in
lahf
out
push
xchg
xchg
les
(bad)
aam
inc
clc
cmps
out
stos
test
mov
rol
push
mov
inc
push
shr
inc
xlat
call
xchg
mov
cmp
call
pop
sar
inc
mov
adc
pop
dec
std
push
call
xchg
inc
jnp
cmp
stos
push
dec
add
sti
xchg
fcomp
fmul
in
pop
clc
icebp
add
lock
and
cmp
sub
cmps
xor
js
ins
xor
xor
sti
test
xor
data16
loopne
mov
xchg
cdq
dec
xor
mov
cdq
jecxz
not
pop
mov
push
(bad)
jl
movs
jge
cmps
jae
(bad)
clc
push
ins
inc
adc
movs
pushf
push
lahf
int3
or
cli
ss
scas
(bad)
js
add
or
shl
cmp
js
mov
ins
add
mov
gs
repnz
clc
aaa
imul
push
test
ror
jae
jmp
aas
cwde
sbb
jnp
popf
pop
adc
xor
mov
or
repnz
lds
pop
or
mov
sbb
out
fistp
call
jo
mov
add
ja
hlt
out
add
(bad)
cmp
lods
fimul
sahf
shr
push
inc
sar
sub
call
and
outs
pop
or
cld
out
add
xchg
inc
jae
dec
xchg
jl
inc
pop
jmp
leave
sbb
xchg
sbb
dec
push
and
(bad)
call
ja
xor
mov
pop
loopne
nop
push
inc
sbb
shr
retf
test
mov
cwde
xcrypt-ecb
cmps
mov
adc
adc
sbb
xchg
js
stos
add
fiadd
sub
and
add
fs
xchg
or
out
mov
jns
outs
xor
lea
test
pop
mov
adc
mov
outs
and
inc
sti
pop
lods
xor
in
sbb
xor
sahf
hlt
retf
jb
retf
mov
xchg
or
(bad)
dec
mov
into
sub
mov
jae
xchg
pop
(bad)
addr16
push
adc
pop
cwde
test
pop
mov
cmps
and
push
mov
enter
ja
cmps
es
push
outs
jno
imul
fbld
cmc
loopne
mov
call
inc
push
cmp
cmps
mov
pop
mov
and
icebp
jo
mov
push
fst
inc
fcmovne
movs
jle
fcomp
add
loope
pop
mov
pop
jle
enter
mov
scas
fcom
or
loope
in
cmp
and
sbb
cmp
test
xor
push
push
loop
lea
stos
xchg
jne
jmp
lahf
loopne
and
outs
add
movs
mov
cli
add
xor
add
(bad)
mov
dec
mov
nop
in
sbb
clc
scas
cmc
adc
jno
dec
pop
lods
stc
mov
jp
arpl
in
or
retf
iret
adc
or
cld
neg
call
push
je
rcr
dec
hlt
push
in
or
sub
fsubrp
lahf
mov
pop
mov
xor
cdq
ins
(bad)
adc
mov
cmp
loopne
mov
dec
(bad)
(bad)
sbb
mov
cmps
sbb
push
mov
mov
mov
jp
pusha
mov
mov
push
dec
mov
or
jb
mov
inc
jmp
jne
rol
or
jno
call
and
cwde
addr16
stos
fwait
aam
push
xchg
pop
add
mov
dec
jmp
cdq
push
jecxz
sub
das
rcl
jne
hlt
xchg
daa
les
dec
sbb
sub
sbb
fst
push
xor
popf
jo
fsub
imul
pop
lods
pop
(bad)
xchg
and
lea
xchg
dec
cmps
les
test
in
je
mov
add
dec
mov
retf
xor
mov
je
cmp
inc
xchg
test
mov
test
lahf
push
pop
in
sub
push
fidivr
cmc
imul
js
pop
sbb
mov
xchg
or
and
icebp
mov
into
popa
and
scas
lods
or
fld
dec
jo
dec
int
lea
repz
fisttp
nop
pop
dec
fisub
jecxz
je
sbb
adc
bound
out
mov
hlt
out
das
shl
inc
mov
sahf
mov
movs
not
(bad)
add
sar
and
jmp
outs
jl
sub
or
mov
push
push
inc
data16
push
lock
xor
pushf
sbb
and
mov
and
neg
mov
push
sbb
(bad)
pop
shl
cmp
loope
call
pop
jg
adc
sub
xor
xor
pushf
mov
xchg
and
push
aam
in
xor
sub
push
push
(bad)
fdivrp
push
mov
retf
ret
jl
cli
cmps
jno
in
call
xor
sub
dec
dec
inc
idiv
pop
fwait
test
mov
or
adc
add
adc
sub
sbb
cmp
push
fmul
lods
dec
jg
push
add
pop
ficomp
jo
rol
add
sahf
pop
sti
cs
cld
fs
leave
dec
cmp
xchg
sbb
xor
aaa
scas
adc
xchg
sahf
adc
mov
pushf
push
test
mov
out
in
dec
or
fcmovne
dec
dec
sti
jmp
jnp
test
clc
data16
xor
mov
add
mov
sub
and
mov
int
in
fs
out
pop
fwait
test
adc
push
jg
add
inc
xchg
or
cmps
or
sbb
mov
mov
sub
sub
xor
cld
sahf
jle
mov
jnp
jbe
je
les
sbb
push
scas
xchg
arpl
ret
imul
inc
ins
loopne
int
test
jmp
dec
addr16
inc
(bad)
and
cs
mov
shr
dec
in
jp
fs
fild
ss
lea
(bad)
push
adc
stos
jg
xlat
sub
inc
js
and
daa
scas
jp
dec
ja
mov
push
mov
dec
dec
pop
sahf
ud1
xor
xor
bnd
or
pop
dec
or
push
outs
jmp
cmc
jbe
xor
inc
pop
xchg
jo
jmp
dec
popa
test
aam
rol
bound
cmp
mov
sub
pop
sbb
push
jb
pop
jmp
call
sbb
and
jo
shr
cmps
add
sub
mov
mov
xchg
inc
test
inc
mov
cld
imul
add
and
mov
mov
jae
bound
pusha
rol
jbe
inc
adc
sbb
imul
xor
pop
or
add
xor
cli
adc
pop
shr
test
fs
mov
and
nop
int
sahf
fwait
pop
dec
push
test
nop
inc
xchg
(bad)
cdq
sbb
adc
retf
xchg
sbb
mov
in
pop
pushf
push
(bad)
push
sub
sbb
ins
push
xor
popf
jecxz
popa
in
repnz
mov
mov
popf
fwait
push
lea
fstp
push
sub
(bad)
hlt
scas
pusha
dec
popf
mov
ret
cmps
push
int3
icebp
ret
loop
push
outs
lods
sub
xor
ss
test
pop
sbb
ror
clc
aaa
cmp
mul
dec
enter
mov
xor
cmp
jnp
mov
push
retf
repnz
xchg
xchg
adc
xchg
imul
dec
mov
mov
and
jge
daa
mov
push
inc
loopne
movs
mov
push
cmp
(bad)
(bad)
shl
jp
rcl
push
pop
dec
jo
cmc
es
(bad)
pop
jge
daa
add
loopne
mov
mov
xchg
push
add
push
je
lods
add
mov
inc
jg
sbb
dec
fs
imul
dec
ja
cmp
adc
(bad)
mov
ins
add
sub
inc
(bad)
popa
adc
sar
push
neg
jmp
stc
outs
or
out
mov
push
ja
mov
xor
fcomp
loopne
sub
sub
repnz
aas
movs
sbb
daa
sbb
dec
aas
repz
pop
fwait
jo
sbb
sub
cmps
(bad)
arpl
cmp
fidiv
xor
adc
ds
or
scas
rcl
or
jae
or
retf
je
jp
loopne
int
loop
and
ins
test
cmovnp
xor
gs
(bad)
push
jo
daa
cmp
mov
int3
jno
enter
test
in
sbb
jo
jmp
add
test
sahf
adc
and
and
pop
mov
dec
xchg
xchg
fdiv
punpckhbw
push
pop
xchg
cmp
xchg
mov
js
sub
les
out
sbb
xchg
(bad)
jbe
inc
jne
mov
jmp
sub
jl
cdq
clc
inc
(bad)
push
mov
nop
icebp
out
inc
or
scas
pusha
pop
mov
js
(bad)
mov
loop
sbb
aaa
pop
scas
sbb
push
mov
xor
inc
sbb
nop
clc
es
push
mov
pop
jne
adc
mov
es
std
adc
(bad)
sbb
and
pop
add
lods
cmp
movs
ficom
mul
test
mov
cmp
(bad)
imul
add
mov
jg
jo
xor
sbb
out
(bad)
repnz
faddp
mov
mov
mov
mov
(bad)
jmp
loope
daa
cmps
aaa
or
ror
jno
sub
mov
dec
sti
jns
cmp
sub
sub
retf
xor
jbe
mov
loope
mov
xor
or
xor
xchg
mov
inc
inc
sti
stc
push
call
adc
xor
loopne
pop
adc
retf
pop
movs
push
cmc
js
cmp
std
xchg
out
jbe
push
xchg
aad
sub
jg
inc
pop
loopne
or
stos
dec
ffree
mov
sub
je
sbb
pop
stos
jle
clc
sub
mov
jns
jbe
push
aas
jmp
cmp
mov
shl
stos
int
jmp
cwde
add
pop
outs
mov
in
or
lea
shl
cld
lahf
callw
mov
ret
push
add
mov
jns
fdiv
mov
ds
jmp
dec
lock
ss
mov
push
loopne
pop
dec
xor
add
sti
popf
in
mul
mov
mul
mov
dec
je
mov
add
call
lods
sahf
imul
js
xchg
fs
pop
lods
sbb
pop
mov
add
adc
test
pop
or
push
xor
or
pop
pop
jno
mov
popa
jnp
into
mov
dec
jecxz
pop
in
lods
(bad)
ror
pop
fsub
inc
in
jg
cmp
mov
lea
xor
std
aaa
loopne
push
fldenv
lods
sub
test
adc
cdq
aad
pushf
sub
into
adc
mov
pusha
cmp
jl
adc
sbb
fstp
shl
jmp
cmp
(bad)
and
fdiv
mov
mov
inc
jge
dec
in
jmp
jle
adc
aad
add
and
cmps
test
jae
jmp
idiv
cmp
jnp
sti
push
adc
sbb
(bad)
jmp
aad
dec
ins
bound
cmp
mov
sub
das
(bad)
cmp
hlt
pop
and
sub
push
adc
out
mov
jbe
lahf
arpl
cmp
sub
jmp
adc
enter
test
ins
jb
or
mov
mov
mov
push
xchg
mov
aas
and
or
or
mov
sub
stc
cmps
sub
mov
leave
add
xor
aam
pushf
enter
dec
iret
adc
pop
pop
mov
inc
clc
sbb
jg
mov
or
test
loope
xor
sbb
shr
clc
push
pop
xor
xchg
out
not
mov
pop
cdq
shr
adc
enter
mov
loope
call
aas
push
mov
pop
xchg
inc
dec
loope
idiv
in
pop
jmp
test
jno
scas
mov
jmp
and
and
add
test
sbb
mov
jl
fbstp
test
jb
sahf
pop
push
(bad)
and
data16
pop
sbb
mov
jb
nop
or
in
popa
dec
and
jbe
mov
sub
jp
gs
xchg
cmp
mov
sbb
ja
retf
je
mov
and
inc
outs
adc
or
adc
mov
inc
movs
mov
mov
lods
hlt
sahf
add
cs
inc
jge
xor
pop
push
inc
mov
out
xchg
cld
cmp
frstor
ret
rol
xchg
add
shl
lea
cs
sbb
lds
pop
pop
cmps
cli
pop
push
in
aam
out
stos
test
xchg
mov
nop
inc
and
fsubr
dec
popf
jno
sahf
fstp
sub
add
sahf
inc
xchg
pop
test
jb
call
scas
jg
push
in
fcmove
jg
iret
push
(bad)
push
sub
fwait
pop
shr
inc
pop
dec
mov
push
jnp
outs
fs
add
mov
push
mov
fwait
xchg
ins
jecxz
push
out
adc
xor
in
xchg
jg
inc
loopne
fidivr
je
xchg
xor
push
cmp
iret
test
mov
fsubr
std
sub
dec
push
aas
push
aas
lods
pop
add
out
and
pop
sub
ret
dec
iret
sub
push
pushf
rcl
mov
sub
fsubr
aas
fs
repnz
sub
sbb
or
add
into
in
ffree
std
das
cli
ss
ror
jae
into
pop
shl
in
adc
jge
push
push
xchg
imul
cwde
lea
jne
popa
mov
fmulp
fimul
repz
add
test
aam
int
fsub
mov
jecxz
jb
ds
jne
jno
adc
pop
add
push
sub
xchg
xchg
leave
inc
fs
dec
cs
imul
popa
fcmove
adc
mov
fimul
xchg
cs
sub
clc
sub
mov
push
xchg
pop
outs
pop
cli
sub
outs
bound
mov
call
out
lds
mov
cmc
xor
cmp
lock
mov
mov
xor
cs
cmovo
xor
xor
call
ror
cdq
clc
dec
sub
dec
ja
fwait
cmc
ins
ins
inc
mov
enter
inc
fsub
call
cmps
pop
imul
(bad)
mov
mov
or
cmp
push
mov
aad
imul
jecxz
jo
sbb
sub
leave
aam
cmps
add
int
mov
ret
adc
loopne
in
cmp
adc
int3
test
shr
scas
(bad)
ja
loop
jg
les
inc
inc
push
sbb
push
call
retf
xor
jmp
push
in
loop
sbb
inc
ss
mov
sub
addr16
sub
fisttp
xor
sbb
cmps
ja
cmp
pop
lock
mov
jecxz
ret
addr16
or
push
ret
in
dec
cmp
xor
js
cmc
sub
adc
pop
cmp
ins
cmp
pushw
xor
jae
std
push
in
cmps
fnstcw
inc
and
xchg
mov
movs
sub
movs
into
nop
stos
daa
add
stc
das
aam
js
(bad)
mov
repz
or
enter
add
enter
jg
dec
push
push
inc
je
pusha
ret
in
jl
inc
xor
test
fstp
cmp
cmc
mov
mov
cmp
mov
cmc
xchg
out
std
out
cmp
inc
push
mov
xlat
fisubr
jmp
mov
popa
cmc
xor
sbb
scas
push
and
add
das
push
repz
pop
jns
repnz
scas
cld
or
movs
test
sbb
sub
sbb
imul
or
jbe
mov
sti
mov
xlat
sbb
jae
pop
and
mov
mov
inc
jmp
push
sub
in
sub
icebp
rcl
daa
mul
outs
shl
scas
push
mov
ds
pop
das
fwait
mov
add
shl
pop
xchg
ins
out
retf
dec
cmp
and
(bad)
and
mov
cmc
xor
cmp
push
xchg
mov
pop
ret
shl
pop
pop
retf
and
xchg
outs
dec
jo
jg
cmc
ret
mov
rcr
lahf
popf
sub
daa
into
lea
mov
adc
fiadd
inc
scas
mov
das
div
push
nop
xor
dec
push
push
push
test
cmp
mov
cld
inc
jne
fcmovb
ds
bound
loopne
dec
ret
fwait
or
retf
cmp
pushf
dec
imul
fld
jecxz
and
call
test
mov
call
mov
call
add
xchg
test
xor
ficomp
mov
ins
mov
(bad)
cli
rol
aad
rcr
xchg
dec
and
and
xor
xor
arpl
das
mov
xchg
inc
xor
ja
int
test
mov
fdiv
sbb
inc
mov
inc
aad
adc
and
sub
xor
or
popf
iret
mov
mov
mov
ins
std
inc
call
out
xchg
data16
cmp
dec
fs
movs
mov
mov
call
rcr
push
dec
movs
lock
xchg
and
loopne
loop
pop
sub
sub
xchg
and
sbb
fisub
jne
hlt
addr16
repz
mov
fdivr
xor
in
cmp
mov
daa
(bad)
lods
icebp
daa
movs
sbb
fist
mov
ret
(bad)
aam
les
pop
les
add
xchg
sub
daa
out
adc
mov
pop
ss
outs
mov
shr
xchg
(bad)
out
pop
test
add
stos
outs
cmc
leave
xor
ret
retf
stc
call
dec
pop
mov
xor
(bad)
xor
push
mov
inc
fild
pop
pop
cwde
scas
add
pop
adc
or
add
xchg
lods
xor
arpl
cmp
sub
fstp
fs
jecxz
int3
cmc
inc
mov
or
inc
sbb
cmp
or
adc
jge
and
das
and
js
or
mov
jb
jbe
inc
fwait
lea
and
push
jle
xor
in
fadd
jns
jle
jbe
sub
pop
into
inc
in
pushf
adc
aas
test
stos
ret
out
and
cmp
cmp
mov
popa
arpl
inc
inc
jne
xchg
jns
mov
div
mov
xor
or
(bad)
ss
push
cdq
retf
push
(bad)
cmp
fiadd
sar
outs
mov
lahf
(bad)
loopne
sub
mov
ins
fisttp
pop
mov
or
sbb
jp
hlt
jmp
mov
or
cdq
adc
add
dec
sbb
(bad)
stos
inc
push
imul
adc
mov
pop
sbb
ds
mov
or
jmp
jbe
adc
pushf
or
jb
mov
(bad)
cs
sbb
pop
inc
mov
cs
das
fld
retf
int
mov
push
cmp
and
pop
push
cmps
xchg
or
ret
nop
shr
mov
jp
adc
cdq
addr16
cmp
out
jne
push
pop
ret
stos
mov
mov
mov
lahf
clc
(bad)
mov
ror
rcl
fs
cwde
mov
popa
sub
lahf
call
arpl
jmp
xchg
and
loop
shr
cli
das
sbb
cmp
push
inc
test
imul
addr16
fcom
push
iret
and
push
cli
cdq
push
stc
jae
inc
fdiv
mov
scas
fcom
sub
dec
jb
xor
sahf
icebp
and
out
jb
in
arpl
mov
cmp
enter
rcr
test
retf
addr16
ret
or
dec
jmp
repnz
jmp
jle
popa
push
mov
add
add
movs
retf
cmc
mov
sar
lock
std
add
fucom
imul
rol
movs
or
sbb
bound
imul
jns
cmp
cs
mov
sahf
adc
cmp
aas
sbb
or
mov
jb
push
iret
loope
out
push
nop
adc
fild
or
jnp
pop
mov
push
inc
sbb
sub
cmp
xchg
lods
sbb
sbb
shl
sbb
test
mov
add
bound
inc
push
pop
or
xor
pop
in
and
pop
sub
adc
jge
add
pop
add
sub
data16
mov
inc
add
jno
pop
mov
popf
cld
aas
loop
dec
es
push
aaa
xor
mov
or
cmps
fmulp
loope
xchg
sbb
cmp
outs
ror
xchg
inc
sbb
cmp
lock
or
ins
pop
jp
cmp
daa
leave
sar
retf
jmp
adc
push
pop
jmp
fiadd
fild
movs
or
into
and
ja
sbb
iret
aam
popf
sub
or
mov
jns
jmp
fdivr
pop
xchg
pop
test
lock
mov
std
and
jecxz
jmp
sub
dec
push
pop
mov
mov
out
fwait
mov
inc
nop
and
mov
inc
xchg
pushf
xor
(bad)
in
push
ins
hlt
lea
gs
jno
jmp
xor
pop
rcr
mov
or
jp
popa
sbb
cmc
dec
jmp
mov
adc
mov
push
inc
js
cld
sbb
mov
inc
mov
imul
mov
jmp
ss
enter
pop
mov
mov
sbb
pop
sub
mov
gs
aad
add
push
inc
adc
test
or
pop
repz
imul
lods
neg
dec
int3
jno
ins
cmps
movs
mov
in
mov
fs
cwde
mov
dec
cmp
mov
cmp
jno
inc
dec
popa
cdq
dec
xor
pushf
sub
inc
(bad)
stc
jmp
dec
pushf
lds
ficom
sub
xor
push
xor
js
add
lods
ss
mov
lods
sbb
aam
xor
imul
aam
mov
dec
test
inc
inc
clc
sbb
icebp
stos
and
aas
jl
shr
mov
sub
cmc
pop
adc
cmp
out
mov
cmp
mov
cdq
add
into
stos
ret
int3
(bad)
mov
jmp
cld
mov
sub
iret
xchg
adc
rcr
pop
jge
lahf
fnsave
(bad)
add
dec
pop
mov
lds
xor
(bad)
add
dec
push
mov
shr
loopne
imul
sar
fdivr
mov
dec
mov
out
iret
push
outs
outs
pop
adc
inc
fadd
jl
cmps
cmp
xchg
shr
(bad)
jne
es
inc
mov
nop
xor
sbb
adc
pop
loope
aam
sbb
push
sub
sub
jb
pop
adc
dec
mov
arpl
cmc
movs
add
test
or
fst
cmps
iret
push
xor
fsub
(bad)
std
sub
pusha
inc
cmp
addr16
aam
cmps
retf
jnp
jno
bound
in
pop
out
iret
movs
or
jge
imul
sbb
imul
cmp
bnd
fadd
iret
and
mov
adc
sbb
mov
rcl
es
popf
sbb
imul
or
ja
gs
and
push
jmp
loope
or
sbb
cwde
das
sbb
jg
(bad)
cmc
aad
sti
jbe
les
pop
outs
and
or
jno
mov
outs
fsub
cwde
fwait
not
div
and
retf
sahf
shl
mov
pop
retf
loope
lds
mov
sbb
scas
fsub
ins
cmp
mov
sbb
lods
add
and
fnsave
repnz
sbb
push
sub
mov
mov
int
push
sub
xor
inc
int3
shl
icebp
push
(bad)
jmp
rcr
push
mov
imul
cmps
xchg
lds
push
push
out
out
aad
mov
jae
cs
jp
add
ins
adc
mov
es
shl
loopne
fld
shl
sbb
lds
int
xor
dec
xchg
mov
sar
cmp
cs
push
int3
inc
ds
or
aas
bound
imul
jle
ja
xor
enter
bound
push
repz
adc
mov
cmp
ss
cmp
fcomp
jno
iret
inc
xor
loope
into
sar
cmps
enter
sub
cwde
cmps
jo
movs
mov
lds
pop
(bad)
arpl
int
mov
ja
inc
mov
or
lock
sahf
pusha
imul
adc
int
inc
pop
mov
push
addr16
xchg
js
xchg
cmp
rcr
or
xlat
push
repz
and
fimul
inc
sbb
ret
movs
mov
int3
mov
int
call
retf
cmp
cmp
sbb
or
jnp
push
push
inc
lahf
sub
gs
inc
imul
mov
adc
lods
cmp
push
shr
cmp
sub
xor
xchg
xchg
(bad)
mov
cs
xor
mov
mov
enter
(bad)
sti
mov
inc
inc
push
scas
sbb
mov
sub
push
jmp
cmp
jno
inc
out
addr16
jmp
jbe
iret
mov
cmp
imul
call
inc
cwde
lds
sbb
mov
push
call
cs
mov
out
jbe
cmc
mov
das
mov
repnz
inc
add
xor
xchg
fstp
mov
or
bnd
ds
fnsave
aas
sub
outs
repz
sub
fsubr
and
js
mov
sbb
test
pop
ror
into
xlat
fidivr
mov
out
aaa
xchg
mov
sub
push
adc
dec
inc
gs
adc
in
pop
cli
add
inc
test
lods
inc
out
popa
stc
pop
test
jnp
ret
xlat
xchg
je
loop
rol
add
add
jb
pop
fst
retf
pop
icebp
repnz
mov
in
dec
popf
sbb
push
pop
xor
dec
inc
jmp
mov
jae
scas
mov
dec
lock
jno
pop
push
fcmovu
inc
mov
jno
sub
call
(bad)
fiadd
fwait
mov
fnstsw
pop
test
je
rol
je
adc
repnz
retf
and
lds
fmul
add
outs
ret
push
mov
inc
xchg
mov
adc
cli
cwde
jle
gs
and
loop
in
push
out
mov
adc
sbb
(bad)
(bad)
add
sbb
repnz
and
movs
popa
and
mov
std
outs
clc
and
popa
sub
jns
test
sbb
outs
jb
inc
dec
inc
xchg
out
sbb
xor
jo
lods
scas
loopne
test
(bad)
jmp
aam
mov
push
jno
add
mov
(bad)
cmp
pop
hlt
sub
or
jl
leave
arpl
mov
adc
fcom
xor
nop
aad
cdq
or
mov
icebp
mov
jb
push
cmc
cmps
mov
dec
mov
xor
addr16
or
scas
in
mov
dec
mov
xlat
pushf
push
sub
mov
pop
(bad)
sti
pop
push
ja
sbb
call
(bad)
out
fcmove
into
or
push
(bad)
ficomp
loope
pop
fadd
xchg
mov
pop
es
je
push
xor
dec
push
(bad)
icebp
push
push
iret
mov
stos
popf
mov
pop
loopne
sar
jp
inc
fwait
jno
pusha
add
movs
ds
xchg
inc
inc
in
add
xchg
push
fst
and
dec
call
imul
fst
sti
mov
icebp
fnstcw
popa
sti
repnz
jmp
xor
test
push
sti
jae
mov
adc
test
test
mov
or
push
mov
rol
adc
shrd
inc
shl
sub
mov
dec
mov
sahf
or
pop
cmp
retf
xchg
xor
jge
mov
leave
repz
or
mov
xchg
loope
cmps
outs
ret
push
(bad)
repnz
out
test
jle
add
das
fdiv
dec
bound
mov
stc
ss
fstp
sbb
cmp
inc
inc
and
int
int3
mov
sahf
fcmove
pop
aam
rcr
dec
shl
push
xchg
mov
pop
movs
jge
push
imul
fs
addr16
pop
icebp
fild
adc
mov
cwde
jmp
cmc
cmp
push
pop
mov
dec
inc
xchg
das
push
vmaxsd
nop
cmp
sbb
in
mov
xor
pop
movs
jnp
pop
adc
retf
mov
clc
mov
pop
data16
fcom
nop
mov
enter
cmc
inc
in
rcr
sbb
adc
dec
push
jmp
sti
jg
jo
jne
mov
(bad)
xchg
lock
jg
call
sbb
mov
aaa
pop
pushf
mov
in
mov
mov
xchg
xchg
call
push
sub
jge
fisttp
fst
loop
jmp
and
call
shl
aaa
jl
out
gs
(bad)
mov
popa
out
jl
nop
stos
fsubr
xchg
ficom
test
mov
adc
lods
les
or
pop
pop
scas
xchg
ret
xor
je
cwde
popf
or
adc
jns
sub
test
sub
jmp
sbb
jno
pop
rcl
sub
aaa
leave
adc
jne
push
sbb
aad
or
out
ret
stc
(bad)
xchg
push
xor
in
mov
loopne
inc
push
cmp
(bad)
retf
adc
(bad)
adc
rcr
shl
add
xchg
push
adc
cmp
jbe
mov
sti
adc
andnps
in
mov
jg
jge
loope
or
fs
xor
sbb
inc
mov
sti
jp
lods
out
sbb
push
add
lea
imul
inc
dec
add
add
inc
sub
cmp
sbb
pop
push
fistp
and
leave
ss
inc
mov
test
(bad)
fisttp
mov
mov
inc
xchg
icebp
pop
stc
imul
cmps
lods
pusha
xchg
test
add
dec
pop
push
push
xor
lock
popf
jge
sbb
sub
mov
(bad)
jne
mov
mov
popf
sub
pop
sahf
or
test
pusha
jmp
aad
das
xor
shl
aas
push
sbb
jns
pop
ja
inc
xor
(bad)
sub
push
push
mov
push
mov
test
mov
lods
and
mov
(bad)
outs
inc
(bad)
in
pop
or
out
jmp
in
adc
mov
ins
jae
retf
into
pop
sti
add
adc
mov
sbb
add
mov
lea
xor
mov
out
mov
jp
adc
jmp
cmp
xchg
sbb
lock
mov
fild
(bad)
jmp
(bad)
out
shl
fld
mov
xchg
add
jno
cdq
sub
cld
cmps
mov
dec
push
test
mov
ficomp
cli
cdq
shl
mov
mov
(bad)
jno
mov
(bad)
adc
adc
push
adc
adc
mov
jge
mov
xor
xor
add
aad
xchg
lea
fwait
mov
inc
push
in
or
enter
bnd
mov
xor
inc
cmp
cmp
iret
add
mov
loop
les
pop
sahf
test
hlt
inc
movs
adc
not
loopne
js
cmps
xchg
cmp
leave
sub
cli
fnstsw
movs
mov
push
inc
xlat
bound
mov
add
stos
push
ins
outs
imul
cmc
iret
fwait
push
fidiv
sahf
test
cmp
out
add
fmul
dec
pop
shl
in
iret
xchg
mov
pop
jecxz
pushf
cli
and
add
push
sub
mov
cmp
(bad)
sub
dec
or
retf
add
cmps
add
or
int
pop
rcl
popf
mov
xchg
push
les
jecxz
mov
pop
mov
out
fwait
inc
mov
inc
jb
jp
inc
retf
or
stos
add
and
xlat
(bad)
cmp
js
fs
cmp
(bad)
loop
xchg
dec
inc
js
sar
dec
inc
sahf
xchg
push
int
cmp
sub
bound
xchg
add
lods
hlt
mov
loop
xor
imul
lods
aas
lea
call
(bad)
mov
cwde
fsubr
test
or
pop
test
out
sbb
ss
push
dec
sub
mov
xchg
nop
cmovnp
dec
(bad)
fimul
mov
adc
inc
imul
cmp
or
cdq
adc
inc
mov
add
addr16
fidivr
les
test
fwait
(bad)
ror
or
cmps
pop
dec
pop
data16
(bad)
ss
sti
jl
retf
xchg
test
mov
push
adc
dec
in
sub
scas
add
test
sar
xchg
cmp
push
xchg
and
sub
ins
clc
or
jl
inc
xchg
push
cmp
fcom
xchg
ds
push
push
fstp
jae
push
and
push
test
mov
and
jnp
dec
ja
pushf
xchg
lods
cdq
jecxz
push
lock
jno
nop
pop
mov
in
mov
leave
cmp
int3
and
jb
fwait
rcl
adc
mov
jno
lock
hlt
fisubr
xchg
out
cmp
and
cmp
movs
gs
stos
ss
jmp
imul
and
or
inc
push
fidiv
cmc
mov
retf
xchg
out
mov
icebp
iret
cmps
retf
scas
lea
cwde
aam
push
add
sbb
gs
test
icebp
je
aad
push
xchg
int3
sub
jmp
mov
inc
pusha
mov
(bad)
jg
adc
les
std
cld
stc
push
stc
outs
sub
inc
inc
repz
sbb
and
lahf
cmp
inc
push
mov
jmp
arpl
lock
int
add
test
stos
xchg
inc
(bad)
loop
sub
mov
shr
and
or
or
loopne
fcmove
das
js
jmp
gs
xlat
loop
(bad)
fcomp
mov
pop
mov
dec
lock
outs
xchg
xor
push
cmp
inc
mov
arpl
pop
shr
mov
pop
or
out
push
fsubp
movs
leave
popa
lds
dec
add
pusha
dec
dec
mov
jmp
dec
or
ja
leave
push
add
iret
scas
fdiv
push
sub
add
cmp
imul
cmp
jg
pop
daa
shl
sub
vmread
xor
mul
cs
cld
(bad)
cmp
stos
jb
ss
inc
dec
dec
or
mul
mov
push
xchg
fcom
xchg
add
jbe
hlt
repnz
xchg
cmps
sub
fdiv
jge
jmp
push
sub
(bad)
dec
std
sub
sub
movs
jecxz
test
lea
inc
or
xchg
retf
sbb
fcomp
sbb
dec
std
push
idiv
mov
repnz
pop
or
into
aad
pop
or
jge
jns
daa
call
cmps
mov
mov
pop
mov
mov
test
(bad)
mov
ficom
jno
fild
mov
jecxz
clc
push
jmp
(bad)
imul
add
pop
and
dec
cwde
mov
enter
lock
jne
jo
data16
ins
xor
ja
jmp
clc
fcom
xchg
sub
sub
mov
and
rcl
pop
push
xchg
shl
fimul
mov
pop
dec
push
jmp
out
mov
sub
lahf
mov
inc
xor
mov
ja
(bad)
test
pusha
cmp
cmps
das
mov
adc
adc
cwde
xchg
push
pop
aad
mov
inc
cmps
or
lods
jnp
mov
or
sub
push
mov
in
mov
push
ficomp
popf
shl
push
jp
sub
push
jbe
popf
inc
es
push
inc
sbb
repz
sbb
cdq
mov
jae
mov
mov
xor
dec
cmps
in
shr
shl
(bad)
scas
sub
je
scas
jg
jl
loopne
mov
js
outs
cmp
bound
pop
push
add
xchg
mov
jns
jle
fisttp
popf
mov
inc
imul
movs
cmp
fs
mov
dec
(bad)
pushf
(bad)
leave
add
test
aaa
cmp
jo
stos
adc
hlt
or
fsubr
pop
push
xchg
dec
sti
ret
xchg
sbb
ja
fadd
and
cld
pushf
js
adc
in
hlt
stos
dec
push
jno
or
aad
or
rcl
div
dec
ins
bound
or
lock
and
test
cmp
pop
fsub
(bad)
push
mov
es
retf
push
sub
shl
sbb
fsub
retf
mov
pop
pop
push
and
into
rcl
lock
cwde
inc
dec
imul
mov
push
cmp
clc
and
stc
inc
addr16
aam
jl
sti
jbe
or
scas
add
cmps
mov
xchg
in
sbb
loope
int
(bad)
push
aam
jno
inc
jg
mov
cmps
out
iret
sbb
repz
or
sbb
sub
mov
push
(bad)
cmp
cmp
adc
push
in
sub
lods
add
popf
mov
cli
ss
aad
add
gs
jne
push
lods
rcr
inc
push
in
add
mov
sti
push
cmp
dec
pushf
sahf
fadd
rol
push
movs
test
cmp
lods
jmp
jno
push
int
out
adc
jae
mov
dec
aaa
bound
or
and
daa
add
pop
loop
pusha
pop
cmp
je
popf
sbb
ja
sub
shl
push
inc
fimul
jb
retf
bound
lods
xor
ja
aam
jmp
or
mov
aas
(bad)
ja
les
cli
mov
fnsave
retf
clc
shl
fmul
ret
xchg
ss
or
das
cs
test
out
push
sub
dec
punpckhwd
fwait
sbb
jbe
nop
cmp
aaa
xchg
rol
add
mov
add
mov
or
mov
jl
adc
push
pop
jb
movs
iret
hlt
and
mov
jns
(bad)
sbb
xchg
and
fisttp
and
or
es
jno
enter
mov
(bad)
jg
inc
sbb
out
test
int
jno
push
or
jge
adc
fisttp
js
xchg
mov
loop
imul
out
mov
call
mov
xchg
and
mov
mov
nop
pop
lods
shr
arpl
out
jle
test
sub
retf
sbb
and
sbb
fst
cld
jmp
push
or
and
sub
inc
mov
dec
sbb
xor
loope
neg
mov
jp
daa
test
ss
mov
and
mov
or
cmp
stc
dec
lea
in
or
ret
pop
adc
xor
or
in
shl
xchg
and
cmp
mov
test
loope
inc
xor
push
sbb
xchg
mov
(bad)
mov
push
push
mov
shl
push
in
or
mov
js
movs
fs
mov
jb
cmp
dec
add
sbb
outs
mov
js
daa
(bad)
(bad)
loope
cmps
dec
mov
pop
push
ss
xor
or
mov
and
xchg
cwde
int
cwde
cld
(bad)
pop
inc
mov
or
or
call
mov
pop
dec
nop
cmp
fsubr
jl
and
mov
or
add
jg
mov
repz
aaa
repz
add
das
fs
std
add
repnz
mov
mov
jne
aas
aad
add
gs
js
jo
mov
cmc
pusha
dec
ret
(bad)
jmp
bound
loop
jmp
cmc
fisub
fld
popf
sub
cmp
ret
add
xchg
add
or
cld
and
jecxz
retf
jns
push
shl
ret
add
clc
sub
pop
pop
mov
sbb
sbb
and
sub
inc
stos
mov
stos
adc
(bad)
cld
sahf
ret
data16
cmp
or
pop
xor
in
repnz
scas
xor
sub
lea
mov
jo
mov
mov
(bad)
dec
movs
es
xor
ffree
loop
mov
mov
sub
test
mov
jge
lods
aam
inc
sbb
sbb
sub
cmp
int
sbb
adc
and
sbb
in
test
es
dec
mov
mov
mov
push
mov
mov
push
outs
stos
push
loope
fiadd
es
out
xchg
fnsave
sbb
sub
loopne
inc
or
and
and
cmp
pushf
mov
xchg
pmulhuw
adc
add
ds
mov
add
ret
xlat
mov
push
jge
cmps
out
jle
ja
sbb
push
clc
(bad)
loope
add
push
hlt
and
not
mov
js
cmp
xlat
mov
mov
or
mov
out
cwde
adc
sar
mov
les
mov
cmp
push
test
movs
scas
rol
adc
fwait
xor
clc
add
ror
jecxz
push
popfw
sub
mov
das
cmps
dec
lea
mov
jp
inc
ret
adc
dec
xchg
cmp
pop
gs
ror
lahf
mov
fidiv
stos
cmp
cli
test
ja
pusha
int3
jo
cmps
xchg
sahf
fwait
adc
les
and
ficomp
repnz
les
inc
dec
outs
cmp
xchg
out
(bad)
mov
(bad)
sub
jmp
dec
and
push
in
icebp
std
ins
sbb
mov
ret
jae
das
xor
add
mov
scas
(bad)
in
add
sahf
fcomp
stc
mov
ja
push
push
adc
jp
(bad)
jge
adc
in
test
push
or
ret
push
or
pop
dec
lds
popa
fwait
loop
mov
sar
cdq
mov
pop
adc
jns
jmp
icebp
jg
stos
pop
inc
(bad)
mov
jae
in
xor
xor
lods
xchg
xor
mov
mov
add
pop
jne
fwait
(bad)
neg
scas
(bad)
pop
(bad)
mov
mov
push
and
mov
mov
jmp
(bad)
lahf
cmp
idiv
mov
test
mov
mov
(bad)
and
adc
or
daa
pop
into
retf
xchg
sbb
sbb
mov
add
out
add
in
icebp
add
popf
neg
mov
fst
jae
cmp
mov
test
mov
push
adc
in
mov
stos
inc
lahf
jp
pop
out
test
ficomp
sub
(bad)
mov
out
add
ins
loop
sbb
bound
mov
out
mov
sub
pop
mov
adc
arpl
std
push
adc
xchg
inc
test
dec
push
imul
mov
shl
sbb
adc
(bad)
or
ret
fs
stc
dec
adc
ret
mov
dec
jbe
stos
ins
mov
cwde
add
cmp
sti
and
cmp
lea
pop
(bad)
sub
push
es
cmp
fidivr
dec
lods
mov
mov
xor
rol
sub
sub
jecxz
adc
(bad)
in
mov
imul
sub
loop
lock
cwde
leave
inc
add
ins
movs
jmp
dec
inc
pusha
int3
inc
cwde
repz
aas
fwait
inc
shl
inc
lods
sbb
push
faddp
into
mov
fs
(bad)
sbb
scas
not
and
loopne
and
xchg
pop
mov
movs
sub
push
scas
lods
push
nop
or
cmps
iret
outs
and
cmps
add
aas
fadd
out
jp
cmc
(bad)
mov
mov
sub
add
repnz
pop
loop
cwde
xor
jo
sub
cmp
ror
loope
inc
adc
rol
adc
gs
mov
fidiv
js
loope
cmps
cmp
pop
adc
cs
xchg
ins
sti
push
movs
inc
or
cmp
mov
lea
jecxz
dec
push
xchg
sbb
and
fstp
push
sbb
int
cmp
aas
jle
or
adc
dec
mov
jmp
jns
add
cmp
sbb
dec
xchg
mov
cmc
or
cwde
inc
xchg
clc
sbb
inc
cmp
cmp
jle
bound
dec
mov
adc
fiadd
xor
jbe
mov
(bad)
pop
cmp
stos
pop
iret
add
mov
jg
mov
xchg
shl
lock
inc
ror
jg
add
xor
(bad)
pop
cwde
aad
xchg
mov
out
inc
pop
into
xlat
mov
mov
rcl
xchg
mov
call
push
(bad)
mov
cmp
xchg
in
mov
test
sbb
inc
fcomip
push
mov
push
iret
fsubr
fbstp
fst
inc
rcr
xchg
ror
popa
add
cmp
aaa
loopne
xlat
cmc
xor
(bad)
clc
in
push
aam
inc
adc
mov
ins
and
in
aad
cdq
jmp
sub
adc
movs
push
mov
jl
int3
rol
out
clc
(bad)
lock
mov
gs
loop
mov
mov
in
xchg
jnp
sub
jmp
dec
sahf
xor
int3
mov
push
out
sub
fisttp
mov
adc
inc
adc
js
out
jge
shl
outs
jmp
hlt
hlt
or
jecxz
out
retf
sub
dec
sub
repz
mov
dec
xlat
or
sar
mov
addr16
jmp
adc
push
arpl
inc
cld
xchg
ins
mov
adc
ror
stos
loopne
cmp
daa
int
(bad)
in
cld
xor
js
xor
fcmove
cmp
pop
mov
sbb
sub
or
push
xor
xor
outs
fs
test
scas
push
cmps
addr16
sbb
cmps
icebp
ret
(bad)
jge
and
sar
pop
daa
mov
ror
pushf
mov
mov
movs
ficom
inc
jle
mov
icebp
xchg
jge
lods
dec
sti
fisttp
ds
imul
ror
das
xchg
sub
fdivr
ficom
or
sub
sub
push
mov
ins
add
lahf
bound
loop
cdq
or
or
sbb
xchg
in
outs
ret
push
sbb
push
mov
(bad)
sbb
dec
xchg
and
xchg
(bad)
jge
mov
push
jle
in
jmp
or
cmp
or
mov
jmp
sbb
icebp
mov
cmp
xor
aam
movs
cli
(bad)
dec
ficom
mov
stc
gs
(bad)
push
inc
test
dec
dec
mov
fnstsw
cwde
pop
cmp
retf
hlt
(bad)
imul
test
fwait
fs
cs
mov
pop
aam
std
xlat
cmps
addr16
push
add
std
stc
mov
pop
imul
adc
pop
or
scas
mov
push
lods
pop
mov
movs
xchg
iret
cwde
pop
mov
icebp
or
shl
and
inc
test
add
(bad)
xchg
aam
pmaxub
or
shl
aas
cs
icebp
(bad)
rcr
push
(bad)
xor
push
movs
cdq
xchg
cmp
pop
xchg
sub
mov
loopne
lea
arpl
in
cdq
mov
shr
mov
add
dec
outs
sub
push
inc
jg
nop
int3
adc
add
cmp
sti
out
int
fisub
addr16
adc
sbb
paddsb
mov
mov
lds
adc
mov
stos
sub
loope
icebp
cmc
outs
pop
push
sub
mov
into
inc
xchg
mov
into
stc
xchg
call
mov
and
loope
cmp
js
and
mov
adc
sbb
sbb
inc
fadd
mov
ins
repz
imul
call
inc
retf
pop
icebp
mov
into
pushf
loopne
sub
mov
jnp
jp
mov
or
mov
out
frstor
lods
push
arpl
pop
mov
sub
mov
or
adc
je
popa
int3
push
jbe
loop
es
rcl
call
sub
outs
mov
pop
ins
sbb
mov
inc
push
adc
xlat
jb
cld
push
dec
cmp
mov
aam
mov
mov
mov
dec
add
dec
cli
js
mov
sbb
call
pop
dec
xlat
imul
push
jns
(bad)
into
lods
push
jg
stc
pop
pop
or
sub
fwait
mov
pushf
mov
dec
cmp
sbb
mov
(bad)
daa
clc
and
push
adc
mov
inc
mov
idiv
jnp
in
mov
scas
mov
inc
sahf
ins
not
cmp
mov
or
xor
retf
shr
mov
into
cmp
push
mov
dec
or
sub
mov
mov
imul
inc
arpl
lock
aas
mov
inc
sub
push
and
jmp
stos
enter
data16
add
mov
push
addr16
fdivr
aad
xchg
jmp
cdq
ficomp
push
and
mov
jmp
push
cmp
mov
mov
inc
cmp
out
mov
push
in
sahf
test
or
and
cmps
es
sbb
stos
out
ja
pop
aas
add
iret
or
mov
test
popa
or
fldcw
cmc
mov
pop
cmp
jg
pop
fsubr
repz
aas
sbb
sti
jne
pop
inc
pop
mov
int
pop
sub
cmps
fwait
jg
outs
pop
mov
pushf
jle
mov
(bad)
adc
out
dec
les
jo
xor
dec
pushf
nop
or
shl
loopne
jge
test
add
mov
sub
pop
dec
(bad)
mov
test
fcomip
out
dec
aam
dec
(bad)
add
gs
adc
aam
mov
inc
out
add
or
pop
fiadd
(bad)
xlat
ins
mov
jnp
xchg
test
or
hlt
jg
dec
pusha
(bad)
jbe
jo
cli
clc
imul
bound
dec
ss
mov
mov
pushf
xchg
mov
cmp
mov
jecxz
cmc
mov
movs
add
dec
sbb
in
pop
jns
sub
sbb
xor
les
sbb
fsubr
push
shl
adc
cmps
push
jns
pop
push
imul
fs
das
pushf
imul
xor
jl
add
packssdw
mov
fist
or
outs
sub
faddp
nop
in
cwde
icebp
fwait
ins
loop
and
adc
pushf
mov
leave
cmp
add
stos
scas
aas
lock
inc
pop
in
push
call
pxor
xor
jbe
adc
sub
mul
out
xchg
inc
out
or
icebp
inc
adc
jp
push
push
mov
push
imul
add
mov
adc
out
popf
in
test
ret
mov
jno
push
jg
retf
and
xor
(bad)
fidiv
jae
stos
jo
inc
mov
or
and
sub
jmp
and
xchg
fsub
rcl
pop
in
xor
fisttp
stos
jp
jp
or
jno
lods
adc
dec
in
nop
(bad)
mov
pop
sub
mov
sti
out
cmp
imul
leave
pop
icebp
mov
test
and
mov
pop
daa
fcmovnbe
clc
jno
addr16
inc
nop
out
inc
nop
lock
or
out
xchg
(bad)
cld
bound
fsubp
pusha
(bad)
lods
movs
push
xor
xchg
mov
push
jne
sub
xchg
xchg
adc
es
ret
(bad)
ret
and
push
and
xchg
sbb
add
or
pop
or
inc
into
cmp
mov
xchg
push
ins
dec
push
jb
dec
xor
cmp
das
test
mov
fwait
ret
mov
and
daa
inc
xor
pop
add
inc
mov
mov
and
jmp
outs
mov
fsubr
jns
mov
inc
nop
adc
ret
sub
sub
idiv
adc
je
into
xlat
lds
jmp
add
repnz
enter
ror
push
cld
xor
sbb
push
mov
dec
movs
push
jnp
stc
lods
add
outs
pop
loope
jo
data16
adc
dec
test
outs
inc
sbb
outs
fisttp
mov
cmp
enter
xor
pop
mov
dec
ja
es
cs
push
pop
mov
repnz
pop
jecxz
jo
loopne
das
aaa
sub
jbe
jmp
push
push
xchg
mov
xchg
int3
sub
sbb
inc
adc
jne
aam
ret
lar
aam
mov
call
sub
xchg
push
dec
push
in
mov
adc
mov
xlat
out
and
push
sub
xchg
stos
repz
jb
mov
mov
xchg
adc
jmp
mov
mov
push
aaa
sub
js
jge
sub
mov
ss
adc
ret
inc
pop
mov
adc
stos
xchg
stc
shr
sbb
mov
clc
sub
add
adc
dec
and
imul
in
(bad)
or
and
xchg
pushf
adc
sub
loopne
dec
mov
xchg
or
sbb
push
stos
xor
dec
stos
jmp
xchg
loop
retf
addr16
stc
data16
ficom
fdiv
leave
sub
sbb
das
cli
mov
out
pop
ins
sub
call
push
xchg
mov
lods
sbb
adc
movs
xchg
sbb
inc
and
xchg
xor
pop
push
and
je
loop
mov
or
imul
pop
sysexit
sahf
(bad)
ja
fwait
jb
mov
icebp
shl
jmp
xor
test
mov
cmp
test
rol
dec
sbb
push
iret
icebp
mov
mov
xlat
adc
dec
and
jle
jge
mov
fistp
add
loopne
sub
icebp
ds
inc
sbb
das
push
cmp
dec
stos
pop
xchg
fs
dec
lock
into
mov
xchg
cs
and
jecxz
or
dec
xor
ds
test
cdq
and
ja
bound
or
jge
loopne
dec
out
fbstp
pop
repz
or
addr16
int3
(bad)
in
jge
xchg
push
nop
adc
xchg
push
dec
or
(bad)
sub
adc
call
cmps
inc
push
xchg
cmp
int
mov
mov
(bad)
rol
(bad)
mov
cmp
mov
jo
cwde
inc
push
imul
or
jnp
dec
jg
pop
push
and
xchg
add
out
mov
inc
adc
retf
or
in
mov
mov
pop
jmp
mov
ins
icebp
pusha
sub
push
stos
int3
loope
mov
scas
mov
sahf
stos
outs
xor
out
adc
xor
dec
cmps
outs
sub
cmp
jp
scas
out
adc
ficom
pop
and
mov
and
popf
js
ss
pop
loopne
ret
push
or
push
stos
and
pop
sti
lods
pop
mov
loop
ins
addr16
inc
push
cdq
les
xchg
sub
push
push
jecxz
aas
jg
xchg
cmps
and
inc
pop
cmp
stos
lock
and
mov
imul
ja
icebp
xchg
mov
stc
mov
push
cmp
pop
int3
out
mov
imul
mov
push
popf
jmp
(bad)
ss
dec
nop
pop
dec
in
mov
push
sbb
test
outs
fisub
adc
icebp
sub
cmc
mov
(bad)
or
mov
push
sti
dec
mov
adc
ins
out
or
hlt
ss
cdq
mov
pop
mov
push
push
dec
ins
aad
xchg
mov
jg
jge
add
cmc
add
xor
mov
hlt
popa
jnp
mov
cdq
pop
ret
sahf
or
(bad)
imul
xchg
test
and
test
push
xchg
mul
shl
hlt
sbb
ret
outs
xor
out
adc
mov
shl
dec
adc
stos
out
(bad)
call
aad
push
jecxz
jns
pusha
nop
adc
mov
lods
jge
imul
int
mov
xor
inc
rol
xor
xchg
sbb
adc
mov
cmps
gs
xor
enter
sqrtps
jl
push
call
sbb
pop
out
adc
ficom
or
fistp
jg
daa
add
retf
fdivp
mov
jg
xor
xchg
mov
xor
(bad)
fnstcw
mov
jle
xchg
inc
jg
mov
(bad)
outs
cmc
call
mov
cs
push
pop
jmp
adc
mov
hlt
shl
sbb
jne
adc
test
in
xchg
hlt
cmc
mov
push
out
ret
lea
imul
mov
shl
scas
(bad)
jl
fld
test
scas
push
push
or
cli
inc
cmp
sub
and
cmp
add
jg
sbb
outs
add
adc
lea
add
cmps
(bad)
ins
cli
repz
inc
adc
jg
(bad)
mov
std
mov
add
js
int3
cmp
lods
in
inc
push
sbb
xchg
rsm
jnp
dec
inc
or
int
or
push
inc
mov
cmp
movs
or
cmc
xor
push
stos
int
jmp
mov
call
bound
and
(bad)
xor
dec
add
or
movs
cmp
mov
and
cmp
repz
mov
shr
into
sahf
inc
push
adc
in
push
xor
mov
lahf
lds
stos
inc
mov
call
mov
mov
mov
dec
adc
sbb
cwde
add
push
cmp
dec
push
xchg
test
aas
mov
stc
jb
ret
jo
mov
scas
shl
daa
mov
(bad)
lahf
xor
inc
lds
stos
(bad)
cmp
push
das
cmp
pop
hlt
adc
mov
push
test
test
hlt
int3
sbb
push
mov
push
xor
xor
mov
(bad)
add
aam
dec
mov
js
inc
push
push
stos
ins
fcom
adc
dec
and
sbb
outs
les
je
adc
pop
(bad)
sar
movs
out
(bad)
pop
not
les
sub
jns
push
inc
lods
and
mov
inc
and
push
mov
adc
dec
mov
mov
das
sbb
adc
mov
clc
repnz
jnp
mov
or
or
dec
dec
outs
movs
(bad)
or
mov
mov
repz
jmp
cmp
stc
pop
repz
ds
test
ffree
in
mov
bound
push
call
inc
pop
xor
inc
daa
imul
and
in
out
jl
cmp
mov
dec
pop
shl
das
sahf
jnp
mov
test
scas
(bad)
fisttp
test
fdivr
jno
inc
lea
pop
adc
int
test
shl
test
(bad)
stc
sbb
sti
cmc
sbb
pop
imul
bound
outs
pop
jo
xor
pop
dec
push
stos
es
shl
test
mov
inc
stos
ret
mov
out
ins
xchg
or
enter
jnp
mov
aaa
mov
mov
sbb
push
dec
pop
out
inc
xor
cmp
mov
aaa
pop
jbe
imul
cwde
lods
and
or
cdq
imul
aaa
push
int
push
xor
jle
out
jb
iret
ficomp
push
inc
lahf
mov
jb
jb
aaa
xchg
jmp
pop
fisub
and
lods
(bad)
(bad)
call
out
ds
sub
lea
fidiv
sub
jno
aas
cmp
int3
cli
std
jbe
adc
jge
sar
and
(bad)
xchg
xor
(bad)
sub
pop
jp
add
or
cli
xor
aam
pop
pop
inc
jmp
(bad)
sahf
dec
pushf
retf
mov
hlt
or
fidiv
push
sub
sub
div
in
or
mov
into
jo
lea
xor
popf
(bad)
popa
in
shl
cmp
push
xor
xchg
je
sahf
adc
push
scas
and
or
xchg
stos
pop
call
fcomi
adc
add
mov
jo
ja
popf
sub
test
shl
sub
push
add
xchg
or
xchg
pop
ret
ret
pop
mov
(bad)
mov
adc
fimul
mov
sbb
pop
adc
stos
repz
or
jecxz
mov
and
mov
jbe
xchg
fsub
mov
rcl
(bad)
sbb
fucomip
icebp
scas
test
mov
mov
mov
gs
inc
ss
cdq
ins
pop
mov
shl
inc
sbb
jns
movs
sub
mov
pop
(bad)
pop
mov
rcr
stos
push
add
dec
xchg
mul
mov
lods
add
dec
pop
xchg
cwde
and
cmp
mov
and
fcmovnu
dec
add
pop
sbb
xor
and
jbe
loopne
enter
push
inc
jno
jb
xor
xchg
cmp
jmp
popf
getsec
lahf
int3
call
clc
cld
sub
cdq
inc
daa
mov
and
push
mov
mov
pop
and
mov
mov
cmp
pop
ja
cwde
out
and
ret
sbb
ficomp
mov
adc
push
scas
push
sub
loope
pop
jecxz
stc
dec
in
jb
cld
test
in
outs
stos
in
mov
adc
cmp
ror
mov
sub
xchg
jle
push
mov
(bad)
into
fiadd
jp
ins
dec
and
cmc
add
cwde
aas
sti
mov
iret
out
inc
dec
enter
sub
dec
lea
mov
cli
and
or
push
push
enter
enter
add
call
or
hlt
pushf
aam
out
sahf
jle
aas
dec
int
or
jae
mov
clc
fcmovbe
outs
call
call
jno
jb
int3
push
pop
sub
xchg
outs
and
or
sub
jmp
stos
jbe
inc
aam
cli
cdq
jno
inc
xor
jmp
cmp
scas
into
or
push
jbe
ret
(bad)
pop
nop
cld
aam
aas
push
push
jno
mov
and
adc
sub
fsub
cmps
mov
push
sbb
out
repz
mov
repnz
or
mov
shl
out
push
mov
cli
jnp
mov
std
mov
les
jbe
dec
in
dec
sub
or
dec
sub
and
cmp
jl
shl
cmp
xor
imul
data16
faddp
sub
or
mov
dec
dec
call
jle
into
test
lods
mov
retf
and
mov
int3
in
popa
mov
mov
ins
aaa
mov
pop
or
jo
imul
test
xor
or
faddp
inc
cmps
test
stc
jecxz
cmp
fstp
fist
je
out
ins
sbb
int
dec
stos
pop
repz
fldz
add
in
in
push
in
repnz
sbb
mov
jecxz
out
pop
loope
jne
cmc
or
dec
push
jle
inc
jo
cmps
stos
out
(bad)
(bad)
jge
mov
add
enter
jns
jo
aaa
pusha
sub
push
xor
pop
push
pop
fstp
xlat
jmp
and
jmp
mov
fdiv
dec
(bad)
test
pushf
sbb
xchg
xchg
mov
mov
cmp
aam
push
jmp
pop
dec
jo
movs
jge
fidiv
dec
repz
sbb
jmp
cli
push
xchg
jb
ins
ds
in
pop
dec
std
xchg
daa
(bad)
cmps
xchg
xchg
outs
lods
and
dec
add
jno
adc
or
jmp
push
int
int3
jge
xor
ins
fidivr
mov
lahf
inc
dec
sub
retf
enter
xor
add
sub
sub
fst
mov
add
sub
into
test
adc
mov
push
pop
push
mov
pop
cmp
scas
leave
mov
js
enter
and
ret
dec
cmps
ins
repz
rcr
in
(bad)
fdivp
movs
mov
cmp
movs
add
rcr
cwde
ja
and
mov
stos
(bad)
sbb
sub
adc
inc
(bad)
sub
iret
and
pop
mov
fnstcw
mov
push
repz
add
in
into
sti
js
or
push
xor
mov
stos
xchg
into
into
gs
xor
(bad)
inc
jbe
out
cdq
push
femms
ror
sub
mov
pop
dec
clc
push
movs
mov
or
jbe
scas
mov
jmp
retf
inc
push
mov
sub
or
movs
xlat
jmp
cdq
in
mov
jno
into
dec
sbb
es
pop
mov
sub
dec
inc
xlat
xor
mov
push
pushf
pop
bound
(bad)
(bad)
or
jo
push
movzx
leave
rol
data16
ror
ds
cwde
imul
fnsave
jo
add
jb
cld
xchg
or
jp
mov
mov
jmp
inc
pop
aaa
mov
adc
cmc
mov
call
lods
pop
jp
xor
mov
adc
scas
adc
push
cld
cmp
daa
fadd
retf
(bad)
in
adc
adc
mov
loope
sub
or
xchg
cmp
int
out
hlt
xchg
or
es
push
cmps
mov
movs
dec
push
div
dec
stos
mov
sub
lods
xchg
mov
das
ja
mov
push
test
push
push
inc
pop
or
xor
xchg
sub
cmp
push
dec
xor
add
push
stos
cmp
mov
std
pop
and
add
jo
hlt
xchg
inc
mov
mov
dec
std
jecxz
cmps
cmp
jmp
dec
mov
sahf
(bad)
or
in
or
mov
mov
push
aam
push
movs
adc
out
mov
bound
pop
clc
pop
(bad)
(bad)
hlt
data16
fwait
mov
xor
cmp
push
jecxz
js
mov
mov
inc
test
les
fstp
xchg
(bad)
sbb
rcl
scas
xor
aaa
int
neg
fadd
call
xchg
fwait
call
pop
pop
mov
jge
jno
fcomp
addr16
pop
lahf
xchg
fsubp
and
ror
pusha
gs
outs
sti
sub
shr
icebp
push
lds
adc
neg
sbb
mov
sahf
mov
pop
xor
inc
aam
jno
cmps
xchg
aad
rcl
into
jg
and
das
and
ror
mov
test
push
gs
xchg
xchg
jmp
cdq
inc
scas
and
loopne
ficom
popf
xor
test
nop
jbe
adc
in
pop
cmp
push
shl
cmp
xor
enter
popa
in
xchg
ds
inc
daa
popa
dec
cmp
rcl
shl
add
pushf
ja
or
jnp
adc
add
(bad)
ret
stc
lock
pop
sub
sub
sub
jecxz
fisttp
ret
js
imul
je
in
pushf
shr
scas
or
scas
cmp
nop
dec
ja
test
and
or
sar
or
sti
pop
or
sahf
or
je
add
scas
xchg
arpl
js
adc
cli
pop
dec
stc
call
mov
jne
int3
cwde
and
adc
sahf
cdq
cli
mov
(bad)
xchg
div
out
sbb
cmp
add
jmp
dec
mov
sbb
cmp
xchg
mov
clc
fcmove
mov
sar
push
aas
or
fs
mov
aam
sahf
shl
cmc
jns
movs
mov
and
outs
shl
sub
ins
pop
lods
fidivr
sub
push
sub
inc
mov
and
mov
push
ds
push
mov
out
mov
outs
movs
mov
rol
pop
push
push
repnz
pop
dec
inc
ins
push
mov
inc
xor
aas
dec
out
inc
mov
jp
fdiv
(bad)
fdivp
les
into
push
push
xor
ficom
rol
pusha
ins
(bad)
jae
ss
lods
sub
fisttp
pop
ja
and
mov
mov
mov
pop
pop
or
dec
jmp
je
xchg
scas
and
jmp
ficomp
or
cli
test
pop
cmc
inc
scas
cmp
ja
cdq
sti
lds
(bad)
repz
push
lahf
and
jb
mov
inc
cmps
call
out
in
daa
cdq
mov
cmp
or
cmpxchg
push
test
and
cwde
cmp
inc
jae
jmp
adc
daa
sbb
sub
add
loop
mov
loopne
dec
inc
in
mov
mov
xor
aas
pusha
pop
out
xchg
gs
div
daa
push
cli
fdivr
loop
adc
jp
mov
jo
adc
retf
movlps
mov
jmp
push
hlt
xchg
xor
ret
mov
call
dec
mov
push
jg
push
ins
and
inc
mov
push
(bad)
xor
jmp
sti
and
xor
int
das
(bad)
sub
aas
loop
les
imul
(bad)
movs
rol
std
out
mov
lods
js
push
mul
or
sbb
in
sub
mov
cmp
adc
loop
in
xchg
mov
jle
xchg
leave
cmp
mov
(bad)
cmp
or
push
add
in
dec
mov
in
stos
mov
fistp
and
out
pop
call
push
add
cmp
add
mov
test
adc
sbb
loope
cmp
cdq
cwde
push
xlat
dec
into
pop
mov
jge
inc
in
lods
inc
inc
icebp
jnp
lock
div
fucomp
out
fsubrp
xchg
shl
cmp
fistp
push
enter
jp
ins
imul
(bad)
pop
adc
mov
jbe
xor
sbb
lahf
popa
cld
sete
jmp
outs
(bad)
sahf
sub
xchg
cmp
aas
loope
ds
stos
sar
ss
fsub
pushf
xchg
scas
(bad)
addr16
cmc
mov
jecxz
stos
out
ds
pop
adc
(bad)
fmul
inc
scas
lock
out
nop
scas
test
test
mov
inc
xor
xchg
push
sbb
and
sbb
pop
cmps
in
jbe
cmp
(bad)
test
lds
xchg
mov
pop
fdiv
xor
inc
mov
inc
mov
xchg
inc
fst
xlat
ja
fild
and
sbb
cmps
and
mov
outs
rcl
mov
pop
fcmovne
nop
push
cmp
jp
push
push
call
(bad)
lods
mov
adc
jo
test
imul
cmp
lahf
xchg
inc
jge
inc
push
aad
rcl
mov
cwde
mov
add
test
ja
mov
call
fiadd
ficom
add
hlt
nop
lock
mov
mov
pop
movs
aam
fnstcw
sti
jg
stos
and
shr
xchg
icebp
(bad)
xchg
ror
daa
fldenv
and
stos
ss
and
das
inc
imul
pop
mov
ins
push
push
mov
pop
lods
mov
cmp
xchg
mov
mov
mov
and
adc
shl
or
add
add
pop
xchg
mov
jo
lods
out
fdivr
call
packuswb
mov
push
push
mov
mov
push
cdq
loope
jb
mov
dec
lahf
add
adc
and
gs
cdq
ds
xor
jle
call
call
fcmove
int3
xchg
cld
sub
fst
pop
es
rcl
aas
mov
mov
push
jo
push
hlt
std
out
cld
mov
arpl
mov
add
cmc
add
loope
popf
cmps
mov
pop
adc
shr
ret
jp
inc
pop
dec
add
in
sti
mov
shr
jnp
arpl
and
mov
ftst
mov
pop
ins
ret
inc
imul
push
cmp
mov
ins
sub
pop
mov
js
add
cmp
stc
cmp
and
or
mov
fs
arpl
retf
mov
lock
add
retf
mov
adc
dec
and
loopne
outs
inc
and
xchg
call
add
xor
xchg
lods
and
imul
ins
popf
xor
jmp
imul
or
lods
mov
ret
dec
xchg
(bad)
dec
std
mov
push
pop
or
mov
or
xor
(bad)
popa
adc
shl
fs
add
fdiv
mov
inc
xchg
jp
xor
ss
xchg
cmc
or
adc
out
or
bound
dec
mov
xlat
jae
sbb
cwde
test
xchg
xchg
sar
dec
stc
loop
loopne
mov
nop
jmp
ret
shl
cdq
ins
in
cmps
cmovne
mov
shl
mov
gs
or
je
push
mov
lea
gs
pop
mov
test
jge
pop
push
mov
sbb
repz
push
in
inc
xor
scas
rcl
inc
push
push
push
lea
sar
push
mov
mov
int3
ret
call
cmp
clc
sbb
push
cmp
xor
retf
adc
mov
(bad)
push
push
retf
sub
(bad)
retf
ja
inc
pop
or
mul
mov
mov
mov
jmp
test
shr
jecxz
sbb
aam
rol
sub
fiadd
je
cmp
cwde
pop
adc
sub
mov
popa
repnz
fidivr
cwde
cmp
loopne
and
pop
jne
(bad)
cmp
ret
jno
les
(bad)
dec
ins
push
jp
imul
push
push
adc
or
add
pop
mov
or
in
repnz
pushf
pop
mov
cli
jno
pop
sub
out
daa
jb
jo
ins
adc
adc
ss
out
pop
adc
lea
fs
jge
xor
sbb
adc
shl
stos
hlt
stos
xchg
xchg
aad
fwait
jne
mov
clc
xor
xor
mov
shr
or
repz
fist
jns
sub
jmp
das
sub
add
stc
pop
mov
lock
xchg
cdq
pop
mov
and
lock
enter
bound
fnstenv
shl
and
movs
pop
inc
bound
imul
sub
pop
icebp
jb
jecxz
imul
dec
pop
add
jae
ret
repnz
addr16
or
and
repnz
push
push
dec
fcmove
add
out
mov
aam
les
movs
mov
mov
into
icebp
fbstp
cs
jmp
xchg
jne
enter
gs
cs
xor
push
mov
sub
sub
jb
sbb
stos
loope
fisubr
jae
jo
mov
mov
sti
repz
gs
nop
or
je
or
mov
shl
add
mov
jbe
jnp
xchg
mov
scas
sbb
pop
mov
in
fistp
dec
or
push
rol
xchg
pusha
cli
push
cmp
cmp
xchg
mov
in
xor
jb
mov
popa
dec
sbb
jle
inc
dec
cs
cmc
sub
pop
clc
sub
cmp
scas
dec
pop
mov
popf
loop
cli
fsub
pushf
int
adc
jnp
dec
dec
or
ins
jle
cdq
mov
fucomi
popf
cmp
cmp
push
fs
mov
enter
retf
sub
adc
inc
and
mov
and
adc
aam
outs
dec
in
mov
jnp
es
xor
xchg
(bad)
fdivr
xchg
mov
mov
or
jecxz
jp
sbb
jbe
jne
sti
pop
les
pop
stc
pop
inc
inc
cmp
cs
xchg
retf
cmc
call
gs
jmp
test
mov
out
cli
xchg
xchg
mov
dec
dec
add
push
pop
retf
movs
repnz
mov
or
addr16
bnd
fbstp
push
push
adc
sbb
sbb
pop
int3
nop
jg
mov
sti
fs
cmp
mov
xchg
or
ror
lods
and
arpl
stc
adc
or
xchg
jmp
xor
bound
test
xchg
out
jb
in
adc
xchg
pop
adc
clc
mov
add
outs
sbb
or
mov
xor
fisttp
push
retf
in
mov
enter
retf
mov
outs
out
push
add
sbb
fisub
ss
cli
adc
inc
or
push
jecxz
fldln2
arpl
mov
jns
push
enter
in
cmps
jge
test
(bad)
mov
sbb
lods
inc
mov
movs
and
push
test
mov
rol
xchg
call
sti
pop
cmp
leave
mov
ja
loopne
adc
mov
cli
ds
mov
and
pop
or
jbe
inc
mov
dec
or
in
mov
rol
pushf
bound
lea
mov
jbe
in
call
mov
fsubr
and
push
or
lock
cmp
mov
pop
mov
repz
ror
out
pop
(bad)
ror
inc
rcr
dec
fbld
pushf
inc
mov
aam
je
sbb
(bad)
adc
and
jne
jbe
mov
cmp
xchg
ret
lea
add
xchg
les
dec
push
dec
add
mov
fstp
adc
pushf
(bad)
and
rcl
in
(bad)
pop
and
jmp
cli
ss
inc
cmps
loope
push
int3
mov
aad
pusha
ret
xlat
sub
cli
int
mov
stos
sub
(bad)
jnp
and
movs
sub
push
mov
int3
cmp
js
stos
and
mov
and
es
out
and
vpmulhw
jne
jl
ins
mov
mul
and
gs
xor
push
cmps
mov
dec
test
jle
cmovs
sbb
repz
imul
push
aas
hlt
jge
sub
fisub
cli
cdq
sub
(bad)
fsub
adc
in
jnp
arpl
pop
shl
fisubr
in
dec
cmp
test
(bad)
jge
mov
rcr
icebp
mov
xchg
out
mov
mov
adc
out
gs
and
or
fwait
mov
(bad)
dec
dec
mov
in
in
mov
xchg
jne
lea
out
(bad)
aaa
and
arpl
loop
retf
cmp
pop
xor
add
fisttp
sbb
xchg
lahf
scas
pop
jl
push
fdiv
sub
inc
inc
fisubr
daa
cmp
call
sub
mov
push
stos
pop
mov
mov
add
gs
mov
sub
fidiv
adc
jb
shl
repz
movs
push
mov
outs
sbb
mov
cmps
dec
inc
inc
xor
push
jge
sbb
ss
cmc
sti
jp
adc
sbb
bound
or
dec
xchg
and
js
(bad)
xchg
lock
das
call
rcl
call
dec
stc
cdq
scas
hlt
mov
movs
call
fistp
loope
loopne
push
shl
leave
and
pop
add
dec
xor
es
ror
dec
inc
cmp
or
jae
fdivrp
jb
xor
mov
mov
xchg
jmp
mov
mov
arpl
adc
dec
xchg
pop
fistp
push
jnp
not
jno
jbe
imul
aad
jbe
sub
pusha
hlt
sbb
ds
push
dec
iret
pop
test
pop
mov
pop
dec
imul
push
pusha
mov
sbb
daa
fninit
out
popa
(bad)
test
test
mov
hlt
adc
jmp
retf
ins
je
xchg
outs
stos
loop
das
or
ins
push
cmp
sub
loope
les
out
inc
dec
mov
scas
mov
lods
sbb
cmps
jmp
aaa
sub
mov
xchg
mov
mul
mov
or
cli
sub
out
jmp
fild
call
test
mov
push
xchg
lock
aaa
xor
and
add
xor
popf
jo
aam
push
xor
and
mov
ret
xchg
sbb
mov
cmc
jno
and
addr16
xlat
fldcw
out
lock
inc
xchg
jns
(bad)
das
and
mov
ins
test
imul
xchg
add
mov
test
mov
mov
xchg
bound
mov
add
pop
aaa
push
retf
sahf
mov
mov
stos
mov
retf
and
and
lock
adc
daa
push
jns
jg
mov
or
movs
and
ss
mov
lock
jnp
loopne
loop
pop
fldpi
cwde
jbe
push
push
lea
pusha
test
adc
cmc
inc
jae
push
mov
cmps
mov
mov
xchg
ret
cs
jmp
mov
mov
jnp
(bad)
sub
add
(bad)
mov
lahf
xlat
loop
loope
lods
cmp
cmp
mov
imul
and
aas
and
not
sbb
sbb
int3
push
mov
add
jp
or
and
cmp
sub
call
cmp
(bad)
fs
push
ja
sbb
loopne
mov
push
aam
loopne
in
sub
sbb
or
adc
sub
push
adc
(bad)
cmp
ret
out
jne
pushf
sar
jmp
xor
jb
jo
test
in
outs
repz
les
xchg
cmps
pop
in
fcomp
adc
mov
dec
mov
mov
inc
sbb
xlat
addr16
push
xor
dec
inc
stos
in
fs
ins
jne
sub
cmp
cmps
ds
(bad)
cld
(bad)
xor
xchg
sub
push
pop
rcl
push
add
jne
fadd
or
(bad)
imul
scas
inc
mov
scas
push
push
adc
adc
push
and
imul
fwait
adc
pop
mov
add
test
fisub
lods
sti
or
adc
mov
push
inc
cmp
je
test
test
test
xor
xchg
or
mov
std
push
jo
mov
leave
aad
test
and
aaa
(bad)
push
add
push
sub
pop
and
push
inc
inc
sub
push
imul
movs
add
mov
sar
push
add
(bad)
in
aad
fst
iret
jle
cs
cmp
call
test
outs
leave
jge
ds
call
mov
xchg
add
or
sbb
or
sbb
jle
xchg
jmp
lods
pop
sbb
fidiv
dec
das
in
dec
mov
dec
mov
inc
pop
cld
mov
dec
int
sbb
cmc
das
fmul
jl
sub
cmc
ds
xor
daa
or
fsubr
shl
xor
push
clc
jo
push
xor
cwde
movs
jp
sub
aas
dec
in
iret
test
in
and
mov
push
add
dec
dec
dec
jnp
push
stos
push
cmc
fdiv
push
mov
dec
sub
push
into
idiv
push
ja
dec
pop
add
push
loopne
jo
rcr
sub
fisttp
es
lods
mov
inc
lods
shl
jno
or
mov
jno
jbe
(bad)
push
push
push
cmp
push
add
push
mov
mov
imul
repz
test
sbb
adc
aas
sub
gs
lods
pushf
fadd
imul
fs
jecxz
add
mov
jle
sti
shr
sub
mov
cpuid
fmul
add
jns
xchg
jo
enter
jg
jo
adc
push
xchg
pushf
test
ins
jo
push
int
in
repz
add
repz
popf
and
cli
sar
test
fldcw
lahf
js
sub
xchg
dec
cmps
add
(bad)
adc
xchg
dec
push
jmp
sbb
push
call
scas
lds
inc
add
inc
mov
push
adc
push
gs
lahf
adc
sbb
icebp
sar
jmp
dec
aaa
data16
pop
scas
and
in
and
jecxz
dec
dec
sahf
mov
jg
mov
mov
sub
in
scas
fcmovne
in
mov
push
pop
loopne
mov
cwde
inc
in
adc
pop
cmp
jle
scas
mov
add
daa
adc
mov
or
in
and
jmp
loop
xor
sbb
test
fninit
out
sub
cld
inc
or
arpl
adc
inc
lahf
sahf
sub
xor
fisttp
cmp
gs
or
les
or
jbe
xor
sub
cmp
sbb
mov
je
shl
iret
jecxz
mov
jmp
inc
out
call
bound
pop
jae
adc
sub
jl
cmp
inc
cmp
pop
les
(bad)
pusha
int3
out
jp
and
jmp
loope
sub
pop
jg
jl
sbb
fsub
sar
adc
int3
lahf
stos
stos
ins
xchg
lods
pop
pushf
lea
adc
jne
jmp
das
test
jae
cmp
xchg
lds
xchg
push
mov
push
imul
adc
loop
in
out
adc
sub
aaa
or
and
xor
xor
mov
repz
ss
sub
cmp
cmp
out
pop
(bad)
dec
aaa
or
test
cmp
nop
outs
jl
js
add
mov
call
popf
aam
stc
jg
out
mov
mov
call
mov
repz
push
pop
idiv
rol
push
enter
pusha
fadd
lds
or
imul
fisub
clc
and
movs
cmp
je
lea
cmps
leave
neg
sub
or
xchg
cmp
mov
test
cmp
lahf
pop
pop
mov
mov
out
pop
stos
outs
jp
ret
and
retf
push
jmp
dec
test
cmp
xchg
enter
clc
or
ins
mov
jmp
shl
xor
ss
sub
sub
adc
shl
pop
xchg
in
into
aaa
loope
xchg
mov
jecxz
clc
sbb
sub
loop
dec
mov
mov
mov
mov
jne
or
jno
push
cwde
scas
xlat
mov
xor
cdq
imul
dec
cli
and
mov
int3
add
pop
mov
icebp
pusha
lods
(bad)
pop
or
push
cmps
stos
sbb
jp
mov
sti
scas
daa
pop
cdq
mov
or
jl
inc
in
adc
mov
arpl
push
sti
loope
(bad)
mov
add
sti
test
outs
xlat
inc
push
and
stos
out
test
lock
mov
rcr
cmps
stos
pop
cmp
popf
pop
mov
pop
add
aas
xchg
lahf
mov
push
in
inc
xlat
push
pop
das
aas
mov
pop
shl
sub
mov
out
out
ror
cs
rcr
mov
(bad)
lods
test
cmc
push
and
aas
(bad)
xlat
gs
jno
mov
inc
setbe
scas
push
xlat
test
aaa
movs
scas
inc
push
pop
(bad)
call
mov
cdq
aas
pushf
xchg
inc
clc
ins
push
imul
push
sub
iret
mov
xor
pushf
mov
imul
inc
outs
js
jmp
sub
ds
int3
xchg
stos
loopne
gs
sahf
mov
cwde
or
sar
outs
test
xor
iret
rcr
xor
inc
(bad)
fnstsw
push
push
mov
xor
call
xchg
(bad)
(bad)
mov
test
aad
imul
ror
sbb
leave
call
gs
sbb
loope
ins
jnp
add
(bad)
mov
aad
cmp
cld
ja
(bad)
int
cmc
sub
ja
dec
xchg
pop
bound
ss
adc
cmp
xchg
cmp
jp
xor
mov
pop
aam
push
pusha
dec
mov
add
idiv
sbb
push
jb
xchg
iret
aas
inc
mov
into
sub
mov
xor
retf
loopne
inc
cmp
push
repnz
xor
lock
dec
into
fs
or
lea
dec
adc
in
idiv
mov
mov
xchg
hlt
mov
push
and
jo
or
dec
test
push
test
xchg
push
or
jno
idiv
sub
mov
mov
mov
(bad)
lods
enter
adc
aaa
(bad)
sti
sar
mov
daa
jae
(bad)
int
cdq
pop
inc
push
outs
fcom
mov
jns
in
pop
or
ss
jne
mov
add
and
into
lahf
test
or
cmp
dec
pop
push
or
mov
les
cmp
enter
cld
ss
(bad)
cmp
push
add
inc
pushf
jbe
add
push
cli
movs
dec
shl
jge
ficom
and
lods
cld
fimul
dec
mov
lds
dec
ss
je
in
dec
daa
rcl
movs
or
or
pushf
not
sub
cmps
lods
mov
popa
adc
pushw
loop
jge
jmp
dec
jl
add
xor
icebp
hlt
out
clc
fadd
je
mov
sub
mov
call
popa
pop
iret
sbb
add
adc
push
hlt
push
jecxz
sar
mov
adc
xchg
xor
jae
mov
sbb
(bad)
stc
mov
ds
stc
imul
jnp
lahf
pushf
or
jns
mov
push
mov
addr16
ret
(bad)
out
mov
clc
in
test
xor
aam
mov
push
nop
loopne
pop
mov
aam
mul
daa
sub
xchg
js
add
repnz
ds
movs
jnp
and
ror
shr
js
shr
mov
mov
ret
pop
mov
int
mov
ficomp
mov
pop
xchg
into
sub
push
sub
inc
push
sbb
pop
nop
outs
shr
cmc
fidiv
aad
sub
push
mov
(bad)
iret
rcl
jp
xchg
mov
cmc
pushf
mov
ror
xchg
icebp
xchg
sar
nop
mov
and
aam
inc
xor
dec
fisubr
es
into
adc
dec
adc
dec
jne
icebp
(bad)
mov
jno
sbb
or
push
cwde
leave
lods
fisttp
mov
sub
adc
lds
mov
lea
push
adc
fwait
inc
push
movs
mov
dec
out
(bad)
jnp
idiv
loopne
xor
sar
mov
mov
push
adc
aam
add
push
sbb
jmp
into
jl
repz
sar
outs
fsub
retf
gs
ja
cmp
ss
pop
cmp
movs
xor
out
sub
add
les
and
push
xchg
push
jl
mov
sar
out
mul
fwait
or
adc
movs
bound
pop
cmps
ja
jbe
pop
push
mov
xlat
mov
push
mov
adc
pop
pop
jnp
(bad)
ins
int
(bad)
stc
cmp
add
fs
cmp
into
push
stos
out
or
fld
sub
sbb
aas
inc
enter
fsubr
cmps
and
push
mov
xchg
inc
or
add
sahf
dec
(bad)
pushf
xchg
nop
adc
gs
xor
sbb
push
(bad)
imul
es
test
outs
fwait
rcr
or
imul
(bad)
jl
cli
xchg
or
jg
jo
pop
dec
xchg
pop
push
daa
leave
(bad)
repz
popa
icebp
cmp
ja
xor
(bad)
test
sar
out
aad
in
xor
cld
rcl
(bad)
bound
mov
xchg
mov
jmp
(bad)
and
and
or
fdiv
pop
aam
inc
pop
shr
sbb
ret
cwde
mov
pop
clc
xchg
and
ins
lock
in
push
scas
shl
jb
add
or
mov
pop
mov
mov
mov
stos
xchg
push
loop
inc
into
and
mov
xchg
mul
iret
fs
pop
test
stos
das
dec
sub
and
in
mov
mov
xchg
or
jmp
jge
pusha
gs
sbb
mov
xor
add
mov
push
mov
cmp
push
(bad)
pop
es
jnp
cmp
or
leave
jg
pushf
inc
call
out
jns
push
push
adc
loope
es
cld
adc
mov
test
xchg
mov
jno
mov
leave
ror
cs
test
pushf
aam
push
cmp
sub
jbe
push
stos
add
push
push
push
cmp
dec
pushf
in
adc
push
out
fimul
mov
inc
push
add
fs
or
scas
test
xchg
inc
dec
xor
fidivr
daa
pusha
scas
jbe
fldenv
retf
xchg
mov
pop
pop
push
bound
mov
sub
adc
(bad)
in
icebp
in
pop
cmp
or
idiv
pop
(bad)
xchg
outs
xchg
sbb
lea
cmps
popa
(bad)
push
ret
cld
popa
jp
push
gs
test
inc
sbb
cmc
jns
jle
scas
jne
popa
xor
lea
retf
jecxz
fdiv
int3
fld
xchg
cmc
dec
div
pop
or
push
dec
adc
arpl
or
push
aas
ret
icebp
popf
add
in
shl
call
inc
mov
addr16
call
cld
dec
mov
mov
test
int
mov
pop
out
aad
add
jnp
and
push
mov
mov
fwait
xchg
pop
inc
add
scas
repz
fsub
dec
pop
mov
mov
in
mov
and
pop
pop
pusha
retf
loopne
mov
mov
aam
sbb
test
add
adc
xchg
out
loopne
and
out
push
sahf
add
(bad)
out
push
icebp
mov
ficom
xlat
ins
(bad)
retf
jl
pop
fisub
ins
ins
jae
mov
jne
(bad)
mov
sub
adc
xor
adc
ds
cs
dec
loop
scas
push
mov
adc
outs
pop
jmp
enter
mov
xchg
(bad)
mov
push
push
bound
(bad)
xlat
mov
sub
mov
repnz
pop
leave
jns
push
in
xor
out
ficom
add
mov
mov
adc
and
jns
ins
xor
jbe
mov
and
push
idiv
cmps
xor
fmul
xchg
int
retf
push
adc
or
jmp
mov
aaa
test
and
call
jae
dec
sbb
loop
aam
pop
pusha
ja
lahf
lds
stc
jnp
out
mov
or
push
and
out
xchg
rcl
sbb
std
ret
push
out
and
xchg
addr16
or
xchg
outs
pop
mov
in
cmp
jne
stos
jl
cmp
mov
cdq
or
add
out
mov
pop
scas
inc
mov
add
jmp
in
mov
push
inc
pop
pop
mov
enter
cmc
cld
mov
sbb
push
imul
lahf
add
xchg
sbb
mov
dec
ja
sub
(bad)
jne
lods
cmp
je
adc
in
daa
sbb
mov
push
fwait
inc
jbe
dec
loope
les
ss
lock
popf
add
test
jnp
cmp
add
test
jo
and
mov
and
imul
shl
scas
mov
cmp
daa
(bad)
adc
jns
in
nop
mov
inc
retf
mov
faddp
shl
pop
and
sbb
mov
mov
nop
aam
xchg
retf
out
jmp
cs
or
mov
or
mov
inc
mov
not
std
mov
(bad)
movs
cmp
and
aad
sti
adc
jo
jle
sub
sbb
das
jbe
icebp
stos
sahf
test
outs
push
push
call
jb
sub
push
pop
mov
jo
dec
sub
fisubr
test
fwait
sahf
dec
(bad)
not
jle
xchg
scas
xor
out
sbb
xor
out
imul
adc
retf
pop
pop
movs
cmp
lahf
scas
mov
sti
into
das
pop
enter
mov
and
adc
ds
imul
jbe
pop
xor
mov
retf
mov
retf
add
cmp
cmp
or
cmp
xor
pop
add
fisttp
into
js
ins
je
cmp
std
(bad)
mov
add
(bad)
repnz
cmp
sbb
ficomp
div
fwait
xor
jbe
ret
sbb
add
stc
mov
and
imul
hlt
lds
xchg
test
and
adc
xor
imul
test
mov
addr16
icebp
mov
cs
cdq
mov
mov
pop
push
pop
push
shl
sahf
ficom
imul
xchg
fisub
jae
pop
setb
push
fs
imul
pop
addr16
in
cmp
(bad)
xor
push
and
sti
aad
xchg
push
xchg
das
or
inc
mov
cmps
repz
addr16
je
mov
loop
sub
inc
mov
mov
mov
rol
lahf
arpl
scas
je
cmp
retf
adc
jle
mov
and
ss
push
stc
rcl
fidivr
imul
xchg
add
add
jns
push
mov
adc
imul
aas
popa
outs
bound
out
pop
rol
cmp
dec
pusha
daa
fisttp
call
sub
call
lods
jg
lea
es
aas
lea
sub
or
sub
rcl
je
cmp
repz
ins
xlat
adc
imul
shl
cmp
int
aam
mov
imul
pop
mov
int3
mov
(bad)
outs
retf
mov
and
push
pop
lock
cdq
and
loope
sub
mov
mov
(bad)
add
scas
push
ja
cwde
mov
xchg
out
inc
lahf
adc
push
jl
sub
loop
lods
stos
mov
pop
or
daa
jno
out
sbb
push
ja
ins
inc
xor
jge
mov
outs
push
push
les
jl
js
pop
or
fcmove
dec
ret
cld
sbb
xor
es
cmp
inc
enter
outs
cs
sub
push
or
in
mov
cmp
fbld
call
xor
mov
fidivr
push
in
push
inc
pop
mov
jecxz
inc
pusha
sub
loop
fld
outs
rcl
call
test
movs
out
or
add
call
(bad)
xchg
scas
shl
rcl
rcr
add
popa
jbe
loope
mov
stos
fucomp
mov
sbb
and
aaa
jge
push
dec
cdq
xchg
xor
add
mov
gs
int
ins
jmp
push
push
pop
xchg
jno
ds
adc
and
inc
shr
cwde
sub
pop
dec
xchg
and
add
(bad)
xchg
jl
mov
sbb
pop
inc
xchg
(bad)
mov
loop
sub
pop
imul
rcl
mov
push
outs
mov
ss
pop
fwait
repnz
adc
cld
sub
xchg
out
inc
adc
cmp
das
xor
shr
(bad)
jg
in
or
int3
out
push
jno
xchg
mov
dec
mov
cmp
pop
sub
pop
imul
ret
cmp
cmps
xchg
inc
fisttp
xchg
jns
ins
jns
outs
sbb
mov
lock
sub
popf
cld
lahf
xor
jns
sub
js
mov
aaa
pop
leave
outs
retf
push
add
(bad)
pop
add
(bad)
jmp
or
add
dec
or
sbb
stc
jnp
mov
jmp
xacquire
fucomi
pop
ins
pop
and
inc
cld
std
js
xor
add
shr
fcom
mov
aam
aad
xchg
mov
jg
push
in
mov
pusha
jo
mov
mov
pop
and
push
pop
pop
mov
sbb
imul
cmp
mov
cmp
ss
int
bound
arpl
cmp
mov
test
mov
pop
out
dec
je
lahf
out
loope
and
cmp
jl
xchg
jl
ror
cmp
cmp
cmp
daa
in
and
xlat
or
add
inc
or
(bad)
pusha
push
ret
pop
sbb
fsubr
and
push
(bad)
cmp
outs
repnz
dec
xchg
xchg
enter
popf
(bad)
outs
mov
push
in
adc
scas
push
(bad)
fcom
inc
xchg
adc
jmp
mov
jne
jg
jge
(bad)
cmp
jae
mov
movs
arpl
in
xchg
test
aaa
push
enter
inc
rcl
cmp
mov
mov
adc
daa
jae
(bad)
pop
not
jno
ret
pop
stc
lods
mov
test
sub
leave
jmp
mov
mov
or
mov
and
lods
cld
gs
movs
arpl
lods
mov
ss
xchg
or
hlt
in
jnp
ins
dec
sbb
and
clc
(bad)
jb
or
cmp
and
mov
es
add
cmp
pop
pushf
sub
inc
jecxz
rcr
or
in
jge
loopne
adc
rcl
test
outs
cmp
addr16
scas
mov
jae
mov
ret
test
adc
cmc
jo
test
scas
cld
mov
push
mov
push
pop
sub
cmp
jecxz
popa
jecxz
inc
mov
clc
rol
add
inc
mov
mov
xchg
xor
sub
jno
and
mov
mov
out
cwde
iret
out
fisttp
lds
jg
adc
(bad)
loop
mov
add
(bad)
xchg
fwait
pushf
cmp
lea
out
cmp
jbe
scas
dec
cmovg
fisub
movs
stos
aad
inc
xchg
icebp
aaa
movs
jp
xor
cmp
icebp
(bad)
jecxz
aaa
popf
stos
pop
pop
jl
in
inc
es
xchg
mov
and
retf
cmp
pop
enter
je
or
pop
clc
adc
imul
dec
(bad)
popf
into
rcr
sbb
mov
cmps
push
bswap
sub
adc
push
call
fmul
mov
fwait
loopne
or
xchg
push
addr16
or
test
mov
imul
pop
adc
in
cmps
test
jg
dec
pop
push
test
xor
inc
mov
sbb
sub
loopne
ss
retf
or
adc
mov
sub
pop
sbb
push
clc
cmp
mov
ja
mov
in
cmovno
(bad)
and
push
leave
mov
pop
pusha
xchg
and
mov
cmp
in
adc
dec
dec
push
movs
loop
test
imul
(bad)
xor
loopne
or
movs
test
outs
xor
mov
sub
xchg
dec
xchg
fwait
cmp
inc
inc
push
xchg
in
test
ins
push
sbb
je
sar
sub
idiv
movs
pop
loope
cli
push
sub
fimul
add
in
xor
nop
and
jg
mov
fcomip
pop
cmc
test
mov
xchg
in
(bad)
or
add
jbe
addr16
aam
push
jmp
nop
add
xchg
inc
sub
jns
pop
cwde
mov
mov
movs
out
pop
les
out
int3
fbstp
nop
idiv
mov
cmc
dec
mov
cmp
cmp
imul
in
xchg
push
js
mov
or
mov
aas
mov
jl
mov
mov
dec
retf
(bad)
add
dec
pop
dec
push
xchg
jbe
xor
dec
mov
add
pop
ret
int
or
dec
arpl
push
std
das
dec
cs
cli
add
jmp
push
cmp
jo
fs
or
jns
sub
sub
std
sbb
sbb
loope
or
push
add
mov
push
xchg
ss
fsub
push
push
ds
cmp
cld
fcom
out
sub
shl
nop
xor
pop
sbb
inc
pop
(bad)
jne
hlt
mov
scas
xlat
outs
pop
adc
daa
cmp
lods
popa
repz
mov
fwait
les
push
lea
sbb
cli
aaa
iret
loopne
push
sub
int
fdiv
sub
je
mov
in
sbb
lock
rcl
lock
ss
in
cld
stc
mov
lods
dec
or
and
leave
popf
fisttp
int3
stos
loopne
add
push
or
xor
inc
push
cmps
fld
lds
pop
mov
fcomp
sbb
aaa
test
int
and
cs
fcom
dec
mov
mov
std
jbe
xchg
push
int
lds
test
pop
fistp
out
sub
sbb
into
outs
inc
lods
pushf
rcl
fdivr
and
test
aad
dec
adc
or
je
les
jns
leave
fidiv
adc
jb
popa
ja
gs
aam
lds
ror
sub
call
pop
or
movs
sbb
inc
dec
jmp
jg
sbb
pop
pop
dec
imul
rcr
or
scas
mov
(bad)
nop
test
cs
and
inc
dec
push
out
clc
and
mov
jmp
fdivr
outs
mov
sbb
mul
push
and
call
jp
fst
repz
dec
mov
or
lods
or
push
inc
push
or
adc
test
out
rcr
pop
sub
(bad)
and
dec
dec
mov
pushf
mov
scas
or
mov
icebp
rcl
push
loope
retf
dec
ja
push
adc
jnp
mov
jae
aas
inc
jae
js
repnz
jge
int3
and
fidiv
push
add
fmul
shl
fisttp
fsub
gs
xchg
push
pop
push
xor
jmp
es
iret
cdq
loope
or
mov
fwait
sbb
ins
mov
loopne
mov
fmul
aam
neg
inc
dec
push
jg
mov
mov
ins
mov
repz
mov
xchg
aad
sar
and
scas
push
scas
inc
shl
push
jns
xchg
stos
icebp
hlt
xor
clc
sub
push
imul
add
ffreep
or
fistp
fmul
fsubr
lods
cwde
cdq
fistp
inc
adc
mov
shl
sar
jmp
pop
(bad)
setb
xor
test
xchg
fdivr
lahf
mov
aaa
rol
lods
add
sar
and
xlat
pop
pushf
push
or
cdq
mov
xor
repz
pop
scas
push
mov
adc
sbb
xor
repnz
(bad)
hlt
jl
pop
fisubr
push
pop
loop
push
stos
sub
mov
jecxz
jecxz
cmc
push
shl
ins
jbe
mov
mov
rcr
cmp
mov
xchg
dec
push
sti
mov
jle
dec
mov
sbb
or
push
lock
push
mov
and
repz
cli
idiv
sti
daa
dec
sbb
push
mov
arpl
dec
mov
add
pop
jbe
xor
fstp
adc
dec
xchg
movs
les
cdq
retf
or
sbb
jp
jo
popa
xor
ror
add
sti
cmp
sbb
out
outs
sub
xlat
fimul
jno
outs
inc
fimul
mov
dec
into
mov
shl
cmp
cmp
es
pop
pop
adc
or
push
das
cld
(bad)
cmc
in
mov
aas
push
adc
aam
sahf
inc
or
add
clc
test
mov
sbb
jmp
imul
pop
xchg
outs
mov
loopne
sub
mov
and
sbb
push
mov
xlat
jbe
outs
pop
mov
mov
jns
dec
lods
hlt
mov
pop
pop
xchg
idiv
pop
cs
call
lds
cmp
repz
mov
push
loopne
xor
or
xchg
test
or
ja
mov
sub
xchg
fadd
xchg
jo
dec
add
adc
push
mov
call
cmp
jns
fdiv
movs
dec
stos
pop
dec
ins
push
lock
inc
xor
xchg
push
jne
jns
and
sar
inc
fadd
xor
or
pop
jo
das
aad
enter
mov
int3
fimul
mov
mov
push
mov
fcomp
cwde
movs
shl
jns
loope
mov
ins
push
xchg
int
dec
or
add
pusha
ret
test
aas
daa
fcmovb
call
jge
sub
(bad)
out
add
mov
out
push
mov
xchg
imul
mov
ds
popa
cmp
pop
sbb
sbb
jne
mov
(bad)
int
and
or
repz
inc
jp
out
(bad)
add
scas
jo
call
mov
repnz
test
rcr
out
xchg
mov
xchg
inc
add
or
pop
sub
leave
dec
mov
push
push
jo
inc
cmc
push
int3
ja
pop
cmp
inc
pop
mov
add
jecxz
and
(bad)
retf
adc
idiv
call
xchg
and
mov
adc
hlt
add
sbb
or
add
mov
adc
pop
pop
pop
clc
mov
mov
cmp
cwde
adc
jmp
fist
fidivr
mov
jno
cld
fmul
dec
mov
jne
push
push
mov
ret
or
jmp
pop
iret
xchg
add
cmp
les
into
gs
mov
adc
cmp
inc
push
pop
jg
dec
cmc
cmp
jmp
sbb
xchg
in
loope
ds
sub
pop
inc
jmp
add
jecxz
lahf
mov
sahf
stos
call
adc
ror
(bad)
scas
lods
mul
sbb
xchg
mov
sbb
gs
and
and
pop
mov
leave
dec
mov
sub
xchg
repnz
push
sub
mov
neg
add
inc
xor
adc
out
cli
pop
xor
cmp
divps
mov
cmps
and
push
xlat
dec
mov
and
jmp
imul
and
jo
call
in
dec
inc
mov
ds
mov
fdiv
push
xor
add
lods
lea
inc
adc
push
adc
outs
sub
dec
in
aad
fcmovb
mov
nop
mov
pop
js
xor
dec
xchg
daa
lods
lahf
mov
pop
pop
jb
sub
into
mov
lock
mov
mov
dec
inc
mov
popa
mov
mov
jmp
leave
aas
test
adc
pop
mov
repz
adc
repnz
cmp
es
popf
cld
daa
(bad)
mov
xor
rcr
xor
cmp
fbstp
aad
bnd
add
aas
adc
gs
lahf
sub
mov
inc
test
scas
into
push
jae
stos
ret
xchg
std
jb
js
adc
(bad)
xor
ret
xchg
xchg
cli
stc
test
clc
adc
fstp
or
xchg
lea
xchg
mov
inc
cs
stc
push
mov
cmp
dec
pop
lods
mov
jns
xor
stos
mov
ficomp
lea
dec
and
sbb
std
daa
ja
popf
mov
xchg
dec
outs
push
push
jge
jno
add
imul
sub
retf
dec
imul
adc
mov
and
scas
cmp
xor
out
(bad)
or
inc
loope
xor
neg
pop
inc
jecxz
add
sahf
mov
rcl
pop
sub
jge
and
sub
or
retf
sbb
sub
adc
or
add
dec
sub
sub
ficom
mov
and
pop
retf
movs
inc
retf
movs
lea
imul
xchg
dec
and
mov
retf
jo
mov
adc
inc
and
fwait
aam
repnz
mov
inc
fsub
cmp
xchg
push
mov
scas
xchg
inc
dec
shr
inc
cmps
out
movs
scas
xchg
in
sub
retf
lahf
push
xlat
cmc
retf
xor
xlat
xor
ja
shl
sbb
cli
cmp
sub
mov
dec
dec
mov
push
sti
jne
repz
loope
cmp
fdivr
cmp
fadd
sbb
push
pop
(bad)
cs
and
pop
adc
mov
push
into
mov
add
movs
jbe
imul
imul
add
aas
xchg
xchg
pop
inc
mov
lea
sub
out
mov
mul
gs
lea
mov
nop
jp
pop
push
mov
mov
xor
aas
punpcklbw
in
mov
inc
fs
dec
sub
int3
jp
(bad)
mov
xor
push
rcr
arpl
mov
mov
or
mov
lahf
adc
cmc
xor
ret
push
cdq
pop
icebp
mov
jbe
fist
loope
or
mov
in
in
and
test
daa
into
shl
loop
jnp
out
loope
mov
jp
out
adc
out
iret
jl
cmp
test
mov
int3
js
bswap
cmp
cld
popf
test
or
mov
loop
mov
cwde
jnp
sub
mov
mov
and
fdiv
cmp
sbb
addr16
adc
xchg
mov
adc
sub
mov
cmp
in
popf
mov
mov
stos
cmps
retf
push
ss
out
jmp
scas
push
cmp
scas
aad
xor
mov
rcl
xchg
xlat
lock
mov
(bad)
cwde
pop
dec
shl
fistp
dec
pop
mov
dec
xchg
mov
int
mov
mov
stos
xchg
iret
jp
test
(bad)
in
sbb
add
pop
sets
mov
xchg
movs
ja
hlt
out
stos
push
stos
mov
outs
movs
mov
test
in
sahf
adc
rol
add
pop
movs
inc
jmp
ins
in
mov
push
jo
sbb
sub
jne
jo
(bad)
out
push
inc
push
(bad)
aam
leave
mov
sub
pop
in
add
push
lea
mov
je
ins
out
mov
sub
retf
pop
pop
(bad)
std
jbe
mov
sub
aad
fstp
mov
xchg
out
(bad)
jge
jle
stc
xor
int
dec
cmp
and
jmp
and
mov
in
ja
or
pop
jp
sbb
cdq
mov
sti
popf
push
push
les
jnp
repnz
mov
popf
ins
mov
popw
dec
cmp
sub
test
rol
jbe
into
cmp
jno
icebp
mov
gs
mov
in
shl
adc
mov
test
in
sub
and
jmp
rcl
and
xchg
repnz
fisubr
dec
mov
sbb
jno
mov
jmp
call
push
cmp
aaa
pop
sub
mov
shl
inc
gs
mov
cmp
jbe
mov
push
push
add
sbb
cdq
xor
dec
clc
push
pop
out
movs
xor
or
pop
into
sub
ss
stos
pop
scas
add
addr16
ins
jmp
mov
mov
inc
adc
push
jb
xor
out
and
das
and
aas
repz
pop
dec
cmps
shl
enter
iret
loopne
mov
or
mov
sbb
or
mov
sub
mov
icebp
icebp
cmc
in
std
or
and
xchg
jl
inc
sub
sti
and
mov
mov
js
xchg
cwde
mov
in
pop
movlhps
aas
cmp
jge
sbb
xor
mov
ds
xchg
ds
ins
(bad)
mov
scas
add
into
push
sub
mov
nop
pop
pop
jbe
mov
push
and
adc
mov
xor
aaa
mov
or
call
in
and
test
movs
xchg
mov
cwde
fbstp
popf
mov
test
and
imul
outs
retf
push
push
mov
nop
sub
mov
es
mov
(bad)
xor
popf
cdq
arpl
pop
test
cmp
lods
and
out
mov
adc
lds
mov
hlt
cmp
dec
push
pop
in
sub
sbb
es
push
mov
das
jle
jmp
add
rcl
in
out
icebp
movs
clc
cmp
inc
and
sti
ror
xchg
into
rcr
ret
push
sbb
jle
fisub
push
test
jg
int3
mov
scas
or
pop
dec
jecxz
hlt
inc
in
in
cmp
(bad)
mov
retf
inc
mov
xchg
clc
aad
sbb
cs
adc
stos
add
clc
or
pop
mov
out
std
out
(bad)
xor
ins
sar
loopne
cmp
das
push
mov
mov
ret
ret
das
rol
mov
in
pop
and
mov
xchg
add
int3
(bad)
cmp
jae
(bad)
mov
mov
out
in
mov
jmp
jmp
lock
mov
and
push
mov
(bad)
pop
loopne
jbe
pop
sti
aas
add
aaa
je
repnz
pop
inc
mov
cmp
call
sti
aad
(bad)
fst
push
repnz
mov
iret
imul
push
(bad)
cmps
push
push
sahf
adc
mov
xor
mov
xchg
sbb
fisub
mov
and
mov
sub
(bad)
ficomp
fist
lods
ds
xor
mov
movs
lods
pop
ss
jbe
mov
(bad)
push
cmp
add
sub
and
cli
xor
adc
adc
and
cmp
jne
cmc
cmp
dec
cmps
cmps
xor
push
popa
outs
xchg
iret
stos
dec
adc
sbb
xor
retf
push
jge
out
mov
fcomp
mov
movs
das
mov
xchg
xchg
push
leave
ror
dec
(bad)
and
call
sti
cli
neg
(bad)
dec
fwait
loop
jge
cmp
mov
pop
mov
mov
mov
outs
cmp
adc
pushf
shrd
(bad)
pop
fdiv
not
xchg
sub
xor
outs
or
sub
popf
loopne
out
ds
push
ins
or
shl
mov
imul
dec
adc
std
push
out
pop
in
bound
inc
mov
fbstp
jmp
add
push
mov
cmp
sbb
mov
sbb
sub
loope
pushf
add
lods
cmps
fsub
adc
pop
jmp
pop
arpl
sub
dec
xlat
pop
scas
cmp
shl
adc
xor
dec
daa
mov
xlat
bound
xchg
out
aam
lods
and
dec
ret
jge
jb
jno
dec
push
sub
loop
add
jo
outs
jbe
adc
cdq
lahf
cwde
pop
stc
and
pop
pop
out
(bad)
xchg
fist
mov
and
mov
bound
scas
imul
js
push
jecxz
mov
enter
les
ret
mov
fwait
into
cwde
adc
test
and
imul
aam
cmps
mov
je
pop
pop
sbb
hlt
adc
scas
loop
sub
test
lods
out
inc
in
in
jp
mov
retf
test
cs
mov
sbb
and
dec
sar
test
mov
div
or
jmp
jle
cmp
or
xor
and
leave
adc
scas
adc
loop
daa
imul
dec
pushw
das
add
test
inc
loopne
outs
int3
icebp
push
shl
xchg
lds
cmp
call
in
fisubr
call
jo
xor
shr
out
addr16
shl
not
xchg
mov
add
cmp
or
(bad)
cdq
cmc
ror
dec
push
scas
push
dec
stos
int3
add
and
movs
scas
dec
ss
push
popf
mov
mov
fst
fnop
out
adc
jmp
push
cli
push
mov
out
mov
outs
inc
adc
mov
loopne
xchg
pusha
adc
cmp
movs
and
scas
jb
dec
sub
xor
dec
test
les
or
adc
pop
and
lock
xchg
inc
je
sti
in
pop
and
cmp
inc
dec
pushf
xchg
add
pmaddwd
sub
push
rcr
call
add
das
and
jmp
jecxz
push
ss
fistp
xchg
mov
es
xlat
jae
add
add
push
jmp
cmps
(bad)
repz
dec
out
fwait
rcl
sar
inc
pop
push
mov
push
popa
jp
cmp
mov
push
sub
fstp
cmp
fmul
daa
in
sbb
(bad)
cmp
jbe
add
sub
aas
mov
and
ret
addr16
popa
ret
(bad)
sub
and
sbb
add
cs
jne
mov
mov
(bad)
sbb
pop
pop
pop
or
mov
mov
rcr
push
cmc
daa
or
jns
push
add
push
adc
arpl
jo
in
sub
xchg
loope
out
scas
repz
ret
sub
aaa
push
push
adc
int3
pop
mov
pop
jmp
fstp
movs
out
cmp
xchg
ins
sub
sar
jo
ret
loopne
lahf
(bad)
jecxz
aam
outs
cwde
jb
xchg
push
ins
xchg
or
fcomp
xor
lds
fst
loopne
fcom
inc
xor
cmp
jp
neg
dec
in
xor
cdq
test
add
sub
mov
movs
stc
movs
push
adc
shl
clc
fistp
rol
ins
pop
es
xor
icebp
mov
mov
mov
and
mov
and
pop
sbb
inc
or
call
jns
ins
inc
mov
or
push
inc
pop
mov
xchg
cmc
out
sub
sti
movs
or
(bad)
pop
xor
lds
push
aas
cs
int
mov
mov
(bad)
in
push
mov
bound
outs
dec
cmc
cmc
mov
leave
stc
ss
mov
push
mov
pop
or
ja
jnp
xor
add
imul
inc
lods
cmps
and
jecxz
mov
cli
aas
inc
xchg
push
fcomp
inc
inc
pop
jge
cmps
fdiv
sub
es
rcl
dec
mov
push
js
sub
test
pop
sub
mov
aaa
ins
and
pop
in
je
sbb
gs
cld
dec
out
xchg
xchg
sub
popa
push
popa
mov
loopne
mov
cmovae
aaa
jge
mov
push
push
sub
mov
sub
pop
ret
hlt
iret
(bad)
in
xchg
pop
call
inc
test
ret
push
lods
mov
add
mov
retf
in
les
push
enter
repz
ins
popf
mov
pop
inc
fdivr
and
nop
(bad)
adc
xor
mov
adc
mov
(bad)
xchg
in
int
test
mov
jb
je
loopne
dec
clc
das
jns
les
xor
pop
mov
mov
int
sub
jb
ja
mov
imul
push
xlat
add
mov
pop
aas
je
fdivr
push
lock
jp
ins
test
push
inc
dec
mov
test
lahf
add
lea
inc
cmps
and
jmp
jp
pop
scas
popa
into
or
arpl
aam
ret
sbb
lods
arpl
ja
and
ss
xrelease
mov
xor
leave
mov
inc
inc
sbb
jns
mov
rol
ret
mov
sar
test
(bad)
sub
out
mov
mov
lods
mov
cld
jecxz
cmps
les
adc
dec
jmp
jle
jp
out
leave
and
mov
sahf
mov
sbb
rcr
fsub
aaa
xchg
movs
xchg
or
into
xchg
dec
fs
jmp
aad
out
(bad)
xlat
test
sub
ja
dec
sub
fisttp
mov
add
push
and
xchg
and
ret
retf
inc
subps
mov
es
addr16
mov
stc
cmps
jmp
pop
mov
pop
repnz
ins
bnd
or
add
cmc
stos
pop
cld
adc
cmp
ins
sub
into
dec
or
sub
aas
inc
jmp
cmps
jno
cmps
adc
cmp
aaa
push
cmps
fld
sub
pop
(bad)
mov
pop
mov
sar
inc
shl
bound
and
imul
push
mov
pushf
sub
mov
(bad)
lods
mov
aaa
stos
out
pop
dec
mov
jns
mov
jb
fild
mov
dec
aad
jne
sahf
mov
push
ss
add
aas
test
lock
(bad)
and
jecxz
shl
or
push
sahf
xchg
mov
fistp
rcl
inc
pop
mov
sahf
ret
mov
fnstsw
bound
mov
dec
xor
fs
mov
xor
push
test
ret
mov
retf
add
pop
add
enter
xor
mov
movs
mov
mov
cli
test
sti
pushf
aas
pop
call
mov
retf
push
clc
xor
adc
mov
(bad)
aas
(bad)
sti
add
mov
ins
xor
sub
jmp
bnd
add
jmp
hlt
jbe
mov
ss
inc
xchg
js
pop
movs
scas
popf
mov
adc
dec
inc
test
pop
xchg
sbb
leave
jmp
jae
retf
fdivp
add
adc
xor
pop
adc
rcr
repz
cmp
xchg
jo
xchg
nop
aam
(bad)
loopne
nop
imul
out
pop
xchg
inc
out
cmps
lods
clc
pop
pop
mov
fdiv
retf
mov
sub
(bad)
repz
xchg
std
shr
test
pop
hlt
rol
mov
xchg
xchg
jmp
jecxz
int
lds
pop
mov
ret
mov
(bad)
push
sbb
lock
ss
add
sub
adc
fcomp
mov
mov
in
or
and
push
xchg
fdivr
ja
loop
adc
lds
sub
cmp
(bad)
idiv
outs
xchg
add
jbe
iret
shl
cdq
jecxz
(bad)
fld
and
cli
mov
xchg
jmp
cmp
pop
xchg
mov
sbb
aad
mov
and
pop
cmps
mov
cmps
shl
lahf
adc
push
adc
bound
inc
loop
stos
dec
es
out
das
adc
(bad)
(bad)
icebp
mov
movs
pushf
pop
loop
daa
(bad)
aam
cmp
(bad)
out
retf
push
adc
lsl
and
pop
xchg
mov
scas
hlt
in
gs
mov
mov
mov
sub
(bad)
int
fsubp
xor
cmp
mov
pop
cld
nop
mov
xor
pusha
xlat
repnz
psllq
js
fsub
and
xchg
fcmovb
and
addr16
popa
ins
and
hlt
mov
ret
std
inc
mov
lods
loop
std
sub
jecxz
mov
jne
out
js
and
sub
push
fld
fmul
sbb
and
sub
test
cmp
fild
pop
call
popa
xchg
loop
jmp
cmp
sbb
push
xlat
jae
ret
jl
jo
cmp
sbb
mov
(bad)
push
mov
mov
push
push
test
add
inc
mov
imul
and
inc
pop
ss
ret
mov
jns
lds
cmps
mov
aad
adc
inc
call
movs
mov
adc
jp
aad
cwde
adc
fadd
adc
jp
pushf
sub
aas
xlat
inc
(bad)
add
aad
bound
sbb
inc
xor
les
fstp
into
stos
ret
dec
adc
xor
add
les
imul
push
and
inc
dec
cmp
popf
aaa
into
sub
ret
pop
loope
push
mov
inc
sbb
(bad)
mov
or
les
push
push
xor
loop
adc
aad
imul
jne
jmp
pop
mov
mov
xor
xor
jp
mov
lea
jge
sub
push
jl
or
clc
scas
mov
or
or
out
call
adc
aad
je
pop
mov
push
mov
shr
mov
xor
jmp
fild
mov
cs
out
in
ret
loopne
cmps
fidivr
pop
xchg
int
adc
sub
inc
test
sbb
loop
fild
lea
dec
test
mov
loop
pushf
xchg
or
lock
adc
sbb
retf
rcr
cmp
mov
xlat
mov
sub
cmp
test
inc
das
or
xchg
ror
push
cmp
test
call
adc
scas
in
or
clc
clc
cdq
mov
loopne
cmp
and
stc
mov
pop
jecxz
xchg
ret
leave
out
xor
inc
shr
mov
mov
scas
sub
push
pop
add
test
inc
cmp
daa
sub
das
sbb
pop
xchg
outs
jmp
pop
mov
add
adc
lahf
mov
sbb
push
inc
movs
xor
push
leave
repz
push
sbb
pop
int3
fwait
jbe
inc
fistp
pop
xor
cwde
mov
and
retf
xchg
or
and
mov
or
movs
mov
cmc
jnp
inc
fsub
test
daa
scas
mov
lea
add
in
push
mov
in
adc
pop
imul
cmp
scas
dec
jno
enter
mov
cmc
jb
mov
outs
stos
call
iret
imul
push
mov
mov
mov
mov
sub
mov
shl
mov
leave
jnp
enter
cmp
xlat
xchg
push
mov
fwait
aas
xor
jle
shl
add
pop
xor
pop
mov
loop
cmps
out
js
mov
bnd
dec
push
push
daa
or
mov
mov
in
stos
pop
(bad)
fdivr
or
fist
xor
fnstsw
push
je
les
add
arpl
fcomip
pop
cmp
lods
or
pushf
movs
xchg
dec
das
sub
pop
fs
xchg
pop
xor
in
push
inc
pop
push
fwait
sar
adc
mov
mov
inc
or
je
push
aas
pop
sub
mov
sbb
xchg
sbb
fcmovnu
in
stos
xchg
(bad)
stc
mov
test
mov
inc
cmp
or
stos
lds
mov
inc
add
xlat
mov
xchg
ds
cmp
(bad)
movs
add
inc
shl
movs
data16
cli
int3
pop
pop
scas
call
xor
jae
xlat
add
xchg
xchg
cs
dec
inc
pop
xchg
in
call
fmul
movs
aam
adc
push
and
mov
mov
(bad)
fsub
cmp
ret
mov
dec
sbb
xchg
sbb
fcom
inc
popf
inc
cld
mov
xor
cmp
js
xor
outs
popf
add
mov
(bad)
ins
shr
sub
pop
push
mov
fisubr
daa
ffreep
icebp
js
mov
pop
xor
inc
mov
ret
or
adc
adc
jae
xchg
(bad)
adc
test
push
or
xchg
xchg
fiadd
xchg
out
pop
popf
scas
push
mov
sub
pop
and
imul
mov
pop
jmp
add
inc
clc
jp
lea
cmp
sub
jg
cmp
xor
(bad)
cmp
(bad)
mov
add
jmp
shl
fldenv
sbb
int
out
out
xchg
js
mov
add
and
fsub
pop
dec
jne
and
(bad)
cmp
test
pop
sub
scas
aas
pop
cmp
pop
dec
adc
gs
inc
add
fcomp
hlt
adc
mov
shl
mov
push
dec
daa
into
outs
fwait
add
cmp
mov
sbb
jmp
(bad)
std
je
sbb
lds
sub
rcr
and
mov
fisub
push
es
int3
xchg
jae
adc
add
out
pcmpeqb
pop
dec
push
and
xor
sub
popf
movs
pushf
mov
sbb
imul
add
pop
data16
cs
mov
or
pop
cs
rcr
mov
nop
call
loop
ror
aas
jp
fld
add
jno
pop
lock
and
fst
popf
cdq
mov
aam
xor
into
call
clc
xchg
in
add
sbb
aaa
add
jns
int3
mov
xor
or
fst
inc
jnp
adc
gs
or
and
mov
pop
outs
outs
jae
cmps
sbb
jbe
add
sbb
repz
test
clc
xor
pop
div
out
pop
mov
and
push
and
xchg
stc
mov
test
into
clc
adc
retf
outs
cmp
inc
push
cmp
dec
je
jno
cmc
je
pop
in
add
cmp
push
inc
call
adc
xchg
inc
lahf
out
push
sub
xchg
xor
iret
or
cmc
in
fld
sahf
add
call
inc
dec
mov
sbb
inc
mov
add
mov
or
inc
cmp
aad
fsubp
addr16
scas
loopne
inc
sar
push
lods
stos
jno
lods
or
sub
inc
mov
adc
stos
ret
cmp
mov
pop
ja
cmp
lods
cs
daa
lds
push
sub
div
inc
movs
test
out
push
je
jmp
mov
test
push
jp
ja
jae
cmp
xchg
lods
jle
in
rcr
pop
xor
sbb
pop
push
add
lods
cmp
sbb
fsubr
and
xchg
jecxz
xchg
jnp
cmp
sbb
cmp
icebp
mov
psllw
mov
scas
adc
neg
out
and
cmp
xchg
xor
or
dec
fninit
xor
sub
retf
out
loopne
leave
repnz
push
mov
and
sti
in
pop
sub
mov
push
add
add
mov
(bad)
jmp
lahf
lods
sbb
dec
ds
sbb
leave
(bad)
mul
jbe
sbb
inc
gs
ja
sbb
das
pop
out
movs
sbb
aas
jne
lock
(bad)
into
aam
mov
(bad)
jb
or
fisttp
pop
xor
pop
or
jmp
push
out
call
out
fucom
aam
sti
inc
inc
mov
mov
inc
sar
mov
cmp
sub
pushf
push
jg
mov
sbb
(bad)
adc
mov
leave
dec
mov
xor
in
xchg
add
in
push
inc
push
out
mov
call
sbb
(bad)
add
cs
std
cld
dec
xchg
ins
adc
test
icebp
inc
retf
xchg
xlat
movs
out
xor
mov
stos
(bad)
sub
xchg
jecxz
push
jl
pop
test
pop
cmps
dec
pop
retf
or
mov
retf
in
mov
fwait
ins
pop
xor
adc
pop
push
inc
push
jl
sbb
mul
out
cmps
stos
inc
ins
not
xchg
jno
mov
cmps
lods
(bad)
xchg
lahf
popa
xor
bound
sub
cmp
push
scas
xor
or
cld
mov
inc
mov
lods
scas
cdq
dec
inc
test
in
xchg
loope
mov
mov
nop
pop
stc
clc
xor
xchg
and
mov
mov
sub
ret
fcomp
add
pusha
fidiv
fisub
xor
mov
loopne
ret
mov
pop
or
mov
jb
sbb
cmp
lods
mov
das
push
push
add
xchg
push
xor
and
(bad)
call
test
loop
mov
fimul
ret
mov
push
sti
jp
jo
sar
inc
lock
sub
inc
aas
sbb
mov
in
rcr
add
ret
fadd
inc
fidivr
and
sub
inc
push
xlat
aad
stc
jmp
loop
retf
es
jge
retf
sub
xchg
pop
(bad)
iret
enter
lods
or
mov
mov
cmovnp
add
test
aas
fsub
cmp
ss
push
or
jp
out
cmp
cmc
push
shr
xor
mov
stos
std
add
in
sub
sbb
int
aam
popf
jbe
mov
into
rcl
mov
lods
xchg
sbb
icebp
cwde
lods
dec
mov
cmp
ds
xlat
into
jecxz
aas
dec
mov
mov
icebp
pop
ins
pop
sbb
repz
or
adc
or
add
int
or
mov
push
ds
arpl
dec
dec
add
mov
mov
into
movs
loop
mov
xor
pop
fcmovb
scas
adc
inc
pushf
xor
aas
(bad)
push
and
(bad)
sbb
jmp
scas
pop
sbb
mov
shr
cs
iret
movs
repnz
and
mov
mov
dec
jns
fadd
push
dec
sbb
cmps
jge
inc
xor
cwde
jns
jne
mov
or
mov
ja
retf
enter
and
and
call
test
push
xor
call
fistp
cld
out
lods
xchg
adc
test
(bad)
fiadd
jae
rcl
jo
icebp
std
add
sbb
pop
adc
mov
pop
push
push
and
call
sub
mov
call
inc
popf
xchg
sub
imul
jbe
sar
shl
outs
jnp
push
cmp
xchg
sar
shl
xchg
out
adc
inc
pop
mov
ja
js
outs
and
mov
mov
cmp
mov
cld
sti
fimul
int
mov
adc
sti
in
in
mov
dec
jecxz
mov
lock
call
jnp
jne
call
mov
add
hlt
sbb
scas
sahf
fs
dec
movs
pop
scas
pusha
add
fwait
inc
sub
daa
jo
jno
repz
arpl
add
sub
cmp
sbb
(bad)
mov
push
ficom
sahf
jne
pop
enter
aad
xchg
push
call
cmp
jns
inc
sahf
adc
and
mov
std
lods
dec
or
cmps
push
fdivr
cli
mov
and
stc
xchg
xor
xor
jne
popf
cmp
fisubr
sub
dec
(bad)
mov
dec
cmps
jae
arpl
out
mov
inc
aas
and
cmps
pop
lock
mov
mov
mov
inc
push
(bad)
lock
outs
pop
movs
movs
xor
lods
movs
mov
loope
div
push
mov
pop
mov
inc
ficomp
stc
movs
mov
call
and
jo
mov
sbb
(bad)
dec
cmps
and
nop
out
pushf
xor
xlat
fs
sub
les
(bad)
iret
sti
outs
sub
rol
int3
mov
xchg
out
push
pop
cmp
or
mov
icebp
gs
mov
adc
rcr
nop
jb
pop
leave
pop
xor
pop
xor
mov
inc
push
jno
cmp
mov
push
stos
sbb
addr16
push
mov
icebp
xor
or
ds
in
in
pusha
leave
enter
sub
iret
sub
adc
scas
movs
jno
leave
dec
retf
mov
adc
mov
shr
jle
and
sub
retf
retf
and
jle
or
lock
jecxz
push
push
fcmove
add
sub
inc
push
inc
xchg
je
out
in
clc
sub
jecxz
mov
jno
das
cli
pop
cmp
xchg
fild
jle
test
popf
std
cdq
nop
mov
pusha
sti
(bad)
push
pop
mov
sub
dec
call
out
inc
mov
fstp
popa
cmp
xchg
or
or
movs
test
div
imul
add
test
outs
push
out
scas
ret
mov
dec
dec
call
popf
in
mov
js
ss
ss
adc
jbe
popa
xchg
dec
jl
retf
mov
fstp
xor
fldcw
cmp
pop
arpl
test
pusha
and
in
adc
es
and
rol
mov
xchg
leave
and
pand
xor
jbe
mov
push
cmp
daa
fisttp
inc
mov
inc
data16
ins
std
scas
cmp
xchg
or
cmp
jbe
call
push
out
iret
(bad)
ds
push
sahf
mov
je
and
xor
adc
mov
push
inc
out
push
les
mov
cwde
addr16
(bad)
pop
xchg
or
and
xchg
xchg
jle
pop
pop
mov
outs
rol
push
mov
nop
stc
or
fs
sub
nop
cdq
inc
test
mov
xor
mov
popf
jnp
shl
test
aaa
and
xor
mov
je
xor
not
or
int
dec
inc
mov
or
fcomp
mov
or
int3
ins
push
rcl
inc
dec
xchg
popf
add
fptan
jmp
jnp
xchg
pop
stos
mov
push
sbb
pop
cwde
movs
jo
fcom
das
dec
frstor
sub
jmp
cli
sbb
rol
jns
retf
imul
or
mov
adc
repz
nop
cmp
dec
mov
jmp
rol
sbb
pop
dec
push
lock
pushf
dec
xchg
adc
mov
and
aam
jno
sbb
mov
jg
push
cmp
inc
and
das
mov
loope
in
adc
test
add
push
leave
(bad)
ins
leave
cs
scas
jg
xor
stos
mov
xchg
jl
xor
dec
rcl
sub
cmp
mov
sbb
cmp
inc
inc
dec
adc
cmp
mov
xor
mov
out
imul
enter
in
iret
pop
fdivr
mov
in
clc
push
mov
fisub
inc
pop
mov
out
mov
pop
lods
sar
sbb
xchg
ret
push
sahf
icebp
cmp
(bad)
xchg
jg
outs
cld
push
pop
retf
inc
mov
popa
xchg
rcr
inc
mov
add
lods
adc
ret
test
inc
pop
outs
pusha
push
pop
jb
cli
jnp
daa
pop
repnz
push
jo
loopne
gs
xchg
sbb
add
push
and
aad
lea
jg
pop
sbb
icebp
fistp
ret
shl
sub
imul
fs
sbb
push
push
jle
loope
xchg
(bad)
js
cmp
aad
sbb
xchg
mov
or
dec
call
mov
mov
lea
(bad)
and
cmps
repnz
nop
adc
sub
loop
loop
jne
call
addr16
icebp
push
es
pop
cmp
fs
push
pop
cmp
sbb
imul
fnstcw
nop
jnp
and
fistp
lea
loop
push
dec
ror
cmps
dec
rcl
push
add
xor
cmp
mov
jl
fldcw
or
aaa
addr16
cld
sub
stos
int3
(bad)
jo
stos
mov
jbe
call
pop
stos
out
pop
sbb
jne
nop
mov
nop
test
imul
aam
sub
sbb
cmp
lods
outs
out
dec
xchg
cdq
dec
or
stos
pushf
cmp
sbb
arpl
jge
mov
fisub
(bad)
push
daa
les
pop
ja
sbb
dec
outs
cwde
pop
rol
pop
cmp
jne
mov
push
cdq
popf
push
ins
psubsw
icebp
leave
int3
aaa
rcr
adc
cwde
jne
sbb
aas
cmc
cmp
sbb
(bad)
in
jbe
adc
hlt
sbb
or
sbb
cmp
(bad)
hlt
xor
scas
inc
nop
add
xchg
imul
mov
dec
xchg
and
dec
lea
jge
aam
mov
and
sbb
xor
enter
enter
in
pop
imul
lods
mov
loopne
xchg
mov
xor
popa
in
pop
rcr
xchg
test
icebp
stos
pop
mov
jne
lahf
int3
jno
pusha
mov
mov
imul
enter
xchg
dec
jg
into
(bad)
cmps
out
in
out
movs
adc
(bad)
in
into
dec
adc
adc
xchg
jae
push
movs
(bad)
mov
fmulp
push
hlt
imul
fadd
loope
xor
jge
mov
cmp
rcr
loop
inc
sbb
add
dec
and
sub
cdq
xchg
cmp
mov
out
(bad)
jmp
sub
fsub
dec
bound
test
push
js
test
nop
adc
and
outs
adc
jmp
mov
inc
in
mov
jmp
ret
ds
loope
xor
aas
push
sahf
and
fld
out
or
jle
call
pop
xchg
sahf
repnz
std
jmp
ret
xchg
shl
mov
fsub
shl
dec
cmps
sub
popa
test
clc
out
sub
leave
push
ss
adc
out
mov
pop
cli
or
cld
movs
xchg
push
stc
idiv
cmp
mov
mov
js
leave
sub
jecxz
ror
push
mov
push
ret
add
mov
sub
pop
cmp
mov
fs
test
retf
pop
pcmpeqb
cmp
adc
adc
cs
push
jmp
enterw
into
scas
repz
or
sahf
mov
pushf
sub
mov
jno
push
leave
jmp
mov
(bad)
movs
mov
and
sub
jecxz
dec
mov
mov
and
xchg
mov
xor
xor
nop
xor
mov
pop
in
popf
jne
inc
pop
or
js
sbb
outs
lds
mov
cwde
mov
gs
or
imul
mov
pop
inc
push
test
and
call
inc
mov
lahf
or
sub
es
movs
dec
ds
xchg
pop
and
cs
push
ss
mov
sahf
sub
cwde
(bad)
popa
xchg
outs
adc
mov
sbb
jno
cmp
mov
out
mov
xor
mov
xchg
(bad)
jmp
lds
out
dec
cmp
(bad)
sub
leave
ins
out
adc
shl
test
call
sub
in
stos
xor
lahf
jns
cs
mov
inc
inc
xor
fcom
dec
push
retf
inc
jg
push
fsub
sbb
fcom
and
call
lds
data16
xchg
jo
call
xor
sub
mov
arpl
sub
icebp
push
sub
sbb
xchg
popa
jnp
mov
lock
pop
mov
mov
xchg
sub
cwde
push
dec
xor
cmp
cdq
dec
sbb
jle
xchg
cli
jmp
xor
or
(bad)
test
jle
pop
js
mov
out
dec
cmp
push
push
xchg
lea
das
push
push
sbb
mov
and
mov
xor
out
not
adc
sbb
or
fimul
enter
movs
lahf
mov
add
sti
hlt
test
pusha
shl
push
sti
repz
push
inc
xchg
xchg
clc
mov
xor
sar
scas
std
cdq
xlat
das
pop
adc
pop
jbe
test
push
data16
xor
dec
ins
call
jns
icebp
sub
data16
inc
or
sbb
movs
mov
push
das
xchg
mov
xchg
test
(bad)
cs
cli
repz
and
aaa
sub
or
mov
xor
loope
dec
push
mov
xor
push
(bad)
aas
sbb
stc
xor
retf
and
scas
leave
pop
out
mov
das
les
lahf
or
add
pop
pushf
mov
jo
int
rol
loopne
fwait
inc
in
(bad)
xchg
pop
retf
ret
push
daa
jo
xchg
mov
mov
dec
ret
ss
out
xor
(bad)
leave
in
mov
jno
inc
mov
jb
sub
les
and
in
movs
imul
pop
inc
outs
into
scas
and
adc
mov
sub
mov
iret
aad
js
and
pop
jnp
fisubr
jmp
mov
inc
jecxz
and
fwait
inc
inc
jne
les
fiadd
adc
pop
rol
int3
test
or
sub
mov
jge
sbb
jno
movs
out
add
jge
mov
cmp
das
xchg
xchg
clc
aam
or
aas
out
test
and
es
and
sete
jae
add
loope
cmp
xchg
xchg
xchg
pop
sbb
mov
test
ja
popf
push
push
das
cmc
dec
dec
loope
mov
fsubr
mov
add
aad
fs
ins
cmc
sbb
lods
lahf
mov
popa
cmp
xchg
and
push
jbe
xor
in
pop
add
inc
stos
mov
mov
repz
popf
addr16
inc
daa
psllq
in
mov
mov
test
dec
mov
add
shl
das
jno
leave
dec
push
xor
push
stos
or
outs
push
cmc
movs
mov
fnstcw
add
fst
arpl
push
js
int3
sbb
sub
mov
pop
test
pop
mov
mul
sub
in
xchg
ins
mov
pushf
test
adc
enter
int3
jno
mov
imul
loop
add
pop
mov
lods
outs
inc
add
ret
aam
dec
pop
jae
mov
sub
sbb
fldenv
ret
cmp
in
push
xlat
retf
bound
pop
and
rcl
jecxz
add
stos
outs
and
mov
js
adc
or
push
mov
ds
sub
mov
lods
inc
cmp
xchg
dec
xchg
mov
dec
(bad)
adc
lock
fdivrp
xchg
dec
dec
sbb
sub
mov
add
mov
mov
or
mov
push
loopne
push
in
mov
sub
jae
sbb
sub
xchg
or
adc
mov
cmp
out
outs
and
xchg
push
test
retf
es
mov
sbb
enter
push
cmp
(bad)
aaa
repnz
or
fild
adc
inc
push
or
sbb
dec
sbb
js
mov
(bad)
gs
cmp
into
or
jge
mov
jne
xor
repz
sbb
or
cmp
shr
pop
retf
sahf
mov
outs
imul
mov
xor
sub
mov
mov
repz
mov
popf
or
push
push
and
std
ja
imul
(bad)
(bad)
iret
sbb
fcmove
mov
push
lock
mov
or
cs
push
jno
xlat
aaa
fwait
sti
(bad)
retf
bound
ret
add
push
fnsave
or
daa
dec
retf
push
mov
test
js
int
inc
imul
and
stc
inc
mov
(bad)
retf
popa
push
mov
addr16
pop
cmp
fst
pop
xchg
xor
hlt
jecxz
xchg
jns
mov
rol
mov
je
mov
push
lods
adc
int
adc
jle
sub
pop
shl
jl
adc
sub
pop
cmp
outs
movs
cld
repz
and
bound
push
movhps
sahf
mov
sbb
out
xchg
cs
icebp
in
mov
sti
adc
loope
je
xchg
std
(bad)
mov
push
ins
push
inc
mov
pop
add
jnp
hlt
push
rcr
(bad)
test
pop
fidiv
aam
inc
mov
out
push
out
fistp
loop
sub
mov
(bad)
lea
mov
add
adc
out
outs
adc
and
sub
push
pop
push
icebp
cmp
(bad)
mov
pop
xchg
jns
sub
jp
es
sar
sar
sub
call
jnp
lods
cmp
mov
sar
dec
cmp
dec
jb
mov
outs
(bad)
(bad)
push
movs
fisttp
das
cmps
adc
or
add
and
xor
cmp
cli
popf
mov
xchg
fxch
xchg
out
out
ins
pop
dec
pop
(bad)
outs
xor
xor
mov
dec
push
ins
lea
mov
adc
add
imul
test
inc
jb
lds
add
ja
xor
and
addr16
rcl
enter
rcl
cmp
retf
in
jo
movs
std
adc
push
outs
inc
and
jb
in
push
mov
dec
or
adc
jnp
out
out
dec
sbb
movs
gs
mov
mov
mov
fprem1
pop
shl
lea
and
ins
icebp
out
cmps
ds
ret
and
leave
cmp
mov
xchg
scas
pushf
mov
movs
daa
cmp
and
xchg
lods
jge
jle
mov
sub
enter
(bad)
mov
stc
movs
adc
aad
jecxz
enter
mov
xchg
mov
movs
adc
sbb
pop
aas
adc
push
xchg
mov
inc
jmp
sbb
aaa
push
outs
out
sbb
or
js
add
mov
pop
clc
outs
lds
xchg
sahf
xor
dec
mov
dec
inc
enter
(bad)
xchg
clc
sub
pop
cmc
sbb
jle
dec
inc
jle
and
(bad)
push
es
retf
jge
xor
jno
cs
cmps
pop
repz
sbb
sbb
(bad)
pop
jmp
fmul
popf
mov
xor
cld
inc
icebp
jne
in
xchg
rcl
xchg
int
outs
jns
pop
jae
adc
jle
pop
push
mov
inc
inc
pop
adc
xor
fist
xlat
cdq
add
leave
sub
mov
iret
out
test
shl
cmp
push
jg
je
and
scas
scas
pop
std
inc
xor
jae
test
in
cmps
pop
sbb
int3
sbb
push
mov
and
jbe
cmp
jmp
ds
in
int
gs
jb
xchg
mov
lods
icebp
cmp
add
jg
push
pop
lds
aam
stc
push
out
inc
movs
lods
xchg
icebp
jge
pop
fwait
xchg
xor
es
sti
mov
or
out
xchg
clc
xchg
addr16
pop
stos
dec
sbb
cmp
add
lea
es
push
jle
xor
mov
inc
adc
push
cmp
pusha
cmp
push
inc
pop
mov
and
pmullw
adc
sar
or
push
data16
cld
sub
mov
sbb
cld
dec
jnp
bound
add
inc
push
push
lock
repz
xchg
popa
mov
push
xchg
mov
jae
out
push
adc
sub
adc
bound
div
sub
or
sbb
mov
into
push
cmp
jge
push
mov
xor
dec
loope
xor
sbb
shr
sub
pop
lods
and
cld
test
out
mov
mov
xchg
pop
std
dec
adc
push
mov
movs
mov
cli
cli
mov
icebp
test
ret
fcomi
sbb
jmp
jp
cmps
sbb
(bad)
je
fisubr
dec
adc
je
or
out
pusha
adc
xor
test
adc
fidiv
jae
ret
icebp
add
out
cmp
(bad)
push
xchg
movs
adc
cmps
xor
movs
xchg
add
ror
pop
push
inc
int
sar
mov
fs
add
stos
mov
push
jmp
sahf
xchg
mov
test
imul
neg
stos
in
in
jl
add
dec
cli
in
sete
popa
ins
pusha
(bad)
add
lahf
add
inc
lahf
sub
xor
call
test
add
(bad)
leave
push
mov
add
jae
xchg
jb
lods
xchg
iret
ins
retf
adc
inc
pusha
fwait
aas
fld
xor
rol
mov
sbb
out
cdq
jp
dec
pusha
dec
ret
mov
cmp
adc
mov
sbb
dec
das
xor
repz
jnp
jl
mov
rcr
xchg
xor
push
addr16
in
mov
push
mov
arpl
and
jg
pop
mov
sbb
mov
mov
nop
sbb
test
dec
mov
dec
fsave
stos
jp
ins
in
push
test
dec
jae
pop
leave
test
cmps
pop
movs
lahf
inc
mov
in
(bad)
(bad)
dec
dec
in
and
xor
cs
xchg
scas
popf
cmp
push
aad
mov
jg
jo
push
fadd
dec
jns
adc
(bad)
mov
jle
add
clc
std
test
push
(bad)
movs
cdq
jmp
push
push
cmp
adc
sahf
sub
pop
adc
sar
cmc
mov
std
mov
push
pop
seta
xchg
cmc
in
cld
push
push
dec
rol
push
sub
(bad)
sub
push
jbe
mov
repz
add
std
movs
cmp
dec
shrd
xor
mov
das
inc
call
outs
add
xchg
sti
aaa
jae
dec
bound
or
arpl
jl
test
pop
adc
jg
loope
sbb
iret
into
ret
xchg
popf
jmp
mov
lods
stc
jle
xchg
fmul
test
sbb
popf
cmp
xor
aaa
sbb
cmp
in
cwde
mov
sti
xchg
add
shl
mov
shr
int3
xor
retf
add
xor
push
mov
dec
lds
in
aad
(bad)
xchg
in
inc
retf
sbb
(bad)
sub
dec
sbb
push
es
sub
pop
std
scas
cmp
jp
dec
aas
jle
push
sti
leave
and
sbb
or
inc
pop
(bad)
xchg
sub
inc
cli
stos
adc
ret
clc
and
dec
sbb
mov
cdq
mov
sub
test
or
shl
ja
enter
cwde
adc
loope
loope
sbb
out
push
inc
es
push
rol
call
arpl
push
push
not
shl
mov
ss
push
and
ja
data16
adc
or
fstp
add
cmp
rcr
jle
mov
xchg
add
mov
aas
addr16
push
cmps
push
enter
mov
(bad)
adc
hlt
jmp
fs
mov
push
cvtpi2ps
ja
loop
inc
pushw
mov
sti
pop
(bad)
(bad)
push
add
int3
rol
sbb
int
test
sub
adc
sub
enter
lods
dec
mov
push
(bad)
daa
sub
pop
lods
xor
xchg
rcr
xchg
push
xchg
cmp
popf
mov
mov
xor
ds
es
mov
adc
xor
leave
mov
(bad)
hlt
add
pop
and
mov
je
stos
cmp
dec
in
(bad)
frstor
aas
add
add
mov
ja
movs
ss
adc
fld
imul
pop
mov
and
dec
fild
shr
fst
dec
cmp
movs
or
xor
or
xchg
and
fadd
test
sub
adc
or
jle
add
fimul
shl
fiadd
xor
push
test
or
movs
lods
(bad)
jmp
xor
pop
rol
dec
xchg
daa
inc
test
rol
and
cwde
in
shr
jge
in
push
enter
sti
bt
sbb
out
sti
sub
pop
xor
sbb
mov
lods
in
hlt
rol
mov
div
outs
lock
stos
xchg
mov
dec
mov
arpl
jo
sbb
jecxz
adc
xchg
fidiv
std
cmps
ins
mov
inc
pop
xor
test
sub
dec
push
ja
pop
stos
call
sbb
enter
cmp
xor
mov
inc
add
mov
mov
pop
push
in
ret
jecxz
push
mov
loop
dec
or
data16
mov
jl
inc
jbe
adc
lahf
xchg
lods
pop
lds
mov
adc
dec
loope
loop
or
hlt
sub
fnstcw
lea
cmp
jmp
jp
push
mov
dec
jge
test
sbb
out
jns
mov
jno
fbld
adc
es
(bad)
loop
ret
and
jmp
sti
jge
sbb
mov
mov
lods
dec
pop
popa
dec
xchg
(bad)
dec
call
ja
ins
aad
lock
add
nop
dec
xchg
xchg
pop
imul
cld
scas
ins
aaa
sub
cmp
scas
js
stc
pop
aad
adc
ret
and
cs
stos
imul
xchg
or
int3
mov
add
aas
jne
inc
jo
into
arpl
imul
add
inc
inc
mov
int3
hlt
jbe
int
mov
ror
test
pop
adc
add
fidiv
cli
int3
mov
stc
mov
cmp
ficom
and
mov
cld
pop
push
int3
int
dec
loopne
arpl
pop
in
das
dec
ja
jp
jne
out
mov
jnp
hlt
std
sub
repnz
mov
ret
mov
adc
imul
ss
pusha
adc
in
pusha
cli
push
es
lods
je
adc
imul
adc
scas
xor
sbb
inc
int
push
out
jo
adc
mov
ret
test
imul
ins
jno
xchg
call
jg
add
cld
(bad)
sub
pushf
jae
jge
or
data16
jmp
xchg
in
xchg
shr
sbb
push
pusha
mov
push
sbb
div
das
or
pop
cmp
mov
in
(bad)
ror
dec
jbe
movs
xor
sub
aaa
(bad)
shr
xchg
or
jb
fimul
push
cld
and
sbb
add
repnz
in
ins
cli
je
int3
pop
push
push
sub
mov
and
rol
out
dec
inc
test
icebp
push
test
ret
mov
inc
fistp
xchg
iret
sbb
dec
iret
scas
(bad)
shl
jns
dec
shl
lock
pop
push
mov
pusha
inc
mov
out
sbb
xchg
scas
ss
sub
xchg
add
fdivrp
push
cmp
push
mov
fistp
sahf
xrelease
sub
xlat
repnz
movs
iret
mov
out
inc
stos
inc
inc
push
xlat
mov
leave
mov
sbb
iret
mov
mov
repnz
movs
pop
xchg
inc
and
sub
dec
arpl
fcomp
jmp
cmp
dec
into
xchg
pusha
std
jmp
sti
lahf
fimul
and
xchg
push
stos
fisttp
lods
jg
pop
xchg
(bad)
fldcw
sub
ins
dec
push
or
cld
neg
enter
bound
cmps
fdiv
sub
call
xor
jp
pop
dec
pop
mov
add
leave
(bad)
xor
fisttp
aad
dec
and
les
or
rol
cmps
cs
jnp
mov
mov
out
or
pmulhuw
adc
popf
sub
(bad)
mov
loopne
push
push
popf
jmp
xor
fstp
inc
call
out
mov
(bad)
in
and
call
push
xchg
(bad)
fcmovu
pop
mov
nop
sbb
xchg
mov
add
xor
sbb
enter
or
push
out
ror
idiv
lods
not
pop
adc
std
xchg
call
das
test
cmp
mov
mov
mov
cmp
jge
hlt
xor
lods
(bad)
fwait
cmp
mov
dec
daa
addr16
sbb
ret
jmp
loopne
push
fdiv
inc
pop
xor
mov
push
push
push
inc
ret
jp
mov
mov
sub
mov
jnp
jno
dec
shl
enter
retf
js
movs
xchg
int
lock
out
shl
(bad)
push
sti
fisttp
jnp
cmp
out
fst
test
inc
push
xchg
scas
(bad)
call
fidiv
enter
cwde
loope
stos
sub
adc
loop
mul
arpl
jno
ficom
scas
ds
sub
test
cld
push
mov
jnp
in
pop
pop
inc
in
aas
or
push
mov
ja
inc
int
ficomp
in
shr
xor
jg
mov
sahf
imul
inc
add
test
pop
adc
push
mov
push
sub
inc
(bad)
sub
test
jnp
ficom
xchg
sbb
or
test
lock
popf
or
stos
and
cmc
push
mov
lds
jmp
xchg
cmc
cdq
sbb
call
adc
sub
int
in
shl
outs
and
pop
mov
mov
ins
or
xor
sbb
jmp
es
mov
mov
repnz
mov
pop
ror
(bad)
cmp
lds
pop
pop
test
(bad)
jg
mov
movs
rcr
daa
jns
jmp
fs
inc
ins
mov
lods
movs
or
call
mov
pop
jne
mov
ss
inc
pushf
or
outs
push
mov
add
ss
in
mov
mov
scas
mov
pop
fcmove
or
and
leave
pop
jb
push
xor
cwde
dec
int
pushf
lods
int3
xor
dec
jae
push
push
sar
in
pop
shl
mov
sbb
jmp
retf
dec
mov
push
push
(bad)
cwde
leave
push
sti
sub
std
in
jle
inc
xor
dec
mov
push
inc
and
cdq
icebp
aas
call
add
mov
ins
fisttp
dec
shl
pushf
shld
aam
push
dec
adc
cmp
push
mov
cmp
fidivr
dec
(bad)
pop
jmp
xor
adc
or
bound
jnp
out
jecxz
imul
ficomp
sbb
adc
push
jmp
inc
sbb
push
cmp
ins
pop
inc
imul
mov
jns
pop
xchg
xor
ins
pushf
in
adc
push
enter
into
lock
mov
rol
pop
push
(bad)
call
jp
and
imul
ins
mov
mov
xor
shl
or
mov
std
cmp
nop
icebp
(bad)
mov
push
inc
addr16
pop
fcmovnbe
dec
or
mov
sbb
ror
mov
pop
mov
fadd
fnstcw
popf
das
jno
sbb
xlat
xchg
cmc
idiv
push
and
fisttp
mov
fdivr
inc
test
inc
adc
sub
push
ror
push
inc
inc
xchg
scas
sar
sar
repz
bound
sbb
push
fisub
xor
mov
ret
arpl
and
pop
pop
lds
dec
inc
mov
and
mov
xchg
inc
mov
adc
enter
xchg
jecxz
dec
daa
test
mov
loope
adc
test
cdq
sub
mov
pop
inc
xor
clc
in
or
sub
mov
cmps
imul
inc
mov
sti
push
sbb
xor
fdivr
das
inc
mov
(bad)
mov
mov
mov
scas
out
pop
scas
ffree
jecxz
pop
scas
inc
into
sbb
stos
jb
cdq
repz
push
add
cmc
mov
jae
sub
mov
jg
clc
test
aas
xchg
jbe
adc
sets
movzx
ds
in
arpl
and
jmp
mov
mov
lods
lods
and
sahf
ja
outs
add
nop
arpl
das
or
jns
in
shr
mov
adc
mov
pop
fistp
movs
jnp
cmp
and
pusha
fwait
retf
dec
push
sahf
loop
pop
dec
(bad)
icebp
and
push
jle
repnz
inc
out
daa
(bad)
scas
jbe
leave
shl
pop
sar
pop
outs
push
add
dec
sti
cli
mov
xor
mov
or
mov
inc
jle
pop
lock
nop
jb
xchg
bound
mov
jbe
jae
imul
adc
int
das
rcl
mov
add
mov
adc
out
add
mov
xor
sub
inc
xchg
fwait
icebp
cwde
xor
sar
sti
jne
out
jle
mov
stos
ja
stc
push
pop
int3
ins
pop
enter
lahf
dec
std
into
in
mov
mov
and
lods
idiv
fucompp
int3
mov
data16
shr
xchg
cwde
cmp
jl
pushf
lods
stc
inc
pop
jge
lods
rol
popf
dec
jne
push
test
pop
mov
and
inc
cwde
mov
(bad)
clc
aaa
sahf
xchg
mov
jmp
sbb
aas
push
dec
xor
cmps
jo
jle
jp
movs
inc
mov
fcom
cld
in
outs
mov
cmps
out
dec
aad
sub
in
dec
mov
rol
or
mov
sbb
repnz
sbb
pop
mov
mul
or
fistp
cs
pop
ins
or
repz
or
rol
in
call
mov
dec
ds
add
ins
fldenv
out
pop
sbb
xchg
mov
cmp
xchg
jbe
pop
mov
out
cld
test
ficom
mov
retf
adc
enter
cmps
fstp
js
push
popf
(bad)
sub
xor
pop
xchg
loopne
scas
bound
mov
add
adc
pop
imul
icebp
pusha
out
xchg
add
popf
(bad)
lock
inc
into
xchg
xor
dec
popf
mov
sbb
push
sbb
popa
cdq
int
pop
xor
in
and
cmp
inc
dec
push
clc
cmp
ret
or
je
stos
ins
(bad)
repz
sub
shr
inc
movs
pop
xor
sub
sbb
jle
lea
clc
inc
ss
inc
sbb
jp
inc
cmps
jg
retf
and
sub
and
cwde
and
je
dec
and
fild
in
addr16
fcomip
add
data16
jmp
shl
bound
test
xchg
call
pop
mul
mov
or
in
push
or
lock
add
xchg
out
cmps
in
jp
push
std
sub
fdiv
jnp
mov
test
xchg
mov
fwait
sar
pop
repz
jge
out
and
adc
or
xor
push
mov
inc
mov
mov
ja
cmp
mov
xchg
sbb
mov
dec
push
test
stos
cmp
or
mov
js
inc
push
lock
cwde
movs
cmp
aam
xor
inc
sub
arpl
scas
out
sbb
push
aad
fsubr
cld
(bad)
aas
pop
mov
xor
push
xor
jo
push
push
jae
gs
mov
lods
push
xchg
mov
sbb
(bad)
cmps
punpckhdq
ror
adc
aaa
data16
xor
cmp
mov
cmp
jge
xlat
pop
cmc
pop
hlt
xor
and
fistp
mov
xchg
or
sbb
cli
inc
add
sub
cmp
sub
ss
lds
mov
std
addr16
dec
div
dec
fnstsw
scas
or
sub
lods
xlat
lds
push
rcl
ret
fisubr
mov
push
scas
sbb
cld
test
dec
test
cmps
shl
ja
pop
in
scas
stos
(bad)
xchg
retf
outs
xor
pop
push
out
push
fdivr
das
adc
mov
pusha
(bad)
adc
ret
sub
pop
push
mov
push
mov
dec
push
enter
shl
mov
cmps
push
div
xor
movs
in
pop
xor
movs
icebp
and
inc
jmp
dec
or
popa
cmp
xchg
enter
(bad)
loopne
and
cmp
in
loope
mov
push
fsub
sbb
loop
retf
shl
or
mov
and
or
rcl
xchg
lds
xor
mov
mov
jnp
imul
shl
bound
xlat
das
mov
jne
cmp
call
aam
and
in
jp
jmp
es
xor
pop
add
xor
add
dec
outs
scas
mov
gs
dec
xor
inc
mov
mov
das
xor
dec
xchg
jmp
mov
div
pop
ret
sbb
scas
pop
out
(bad)
sbb
push
(bad)
test
pop
std
addr16
xor
lahf
push
hlt
retf
sub
js
xor
mov
rcr
mov
sub
in
mov
dec
xchg
aaa
sbb
cmp
test
test
mov
test
and
xchg
js
mov
out
mov
xchg
pop
imul
ss
ds
lock
xor
dec
pop
mov
stc
and
jae
pushaw
shl
push
nop
push
fcompp
repnz
(bad)
out
rol
rol
sub
mov
cli
jle
pop
jbe
cmp
ja
or
sub
leave
sbb
inc
push
jbe
cwde
mov
xlat
jb
or
xchg
push
fwait
add
loopne
and
and
in
inc
adc
push
push
push
jne
adc
aam
clc
call
adc
inc
mov
pusha
jbe
cld
sti
ins
jl
clc
lock
xchg
inc
push
movs
lahf
pusha
not
push
cmp
inc
cs
push
sub
js
xor
imul
sar
fidiv
mov
iret
pop
dec
add
adc
sub
imul
sbb
jg
fcomp
int
icebp
lods
mov
dec
xchg
mov
or
or
pop
jno
retf
mov
jmp
in
mov
dec
sbb
popf
enter
cmps
sahf
adc
ror
jl
sbb
push
sbb
sar
push
test
popf
xchg
cmp
das
pushf
nop
sub
and
sub
sahf
and
push
sar
xchg
outs
adc
cmps
fidivr
icebp
push
(bad)
pop
xor
jmp
pop
xchg
lahf
push
sub
ret
cmp
xchg
ins
repnz
hlt
or
aad
xor
cmp
cmp
jge
ins
dec
or
fiadd
in
cs
pop
inc
mov
lea
cmp
test
pop
jmp
mov
sub
je
adc
mov
shl
pop
cwde
out
leave
gs
jbe
mov
mov
cmp
cmp
movs
mov
push
add
call
mov
or
mov
loope
inc
loopne
push
ret
xchg
stos
mov
icebp
or
cmp
inc
sbb
inc
addr16
jb
(bad)
jp
pop
fcom
outs
mov
aad
sbb
in
xchg
rcr
push
int3
cmps
movs
jns
shr
ret
test
mov
lods
or
jge
pop
addr16
stos
mov
retf
popf
aam
fnstcw
inc
daa
mov
add
mov
out
sahf
call
xor
sub
(bad)
imul
mov
adc
dec
lahf
test
xchg
out
in
enter
mov
enter
cmp
mov
jae
inc
repz
loop
gs
stos
jmp
outs
movs
cdq
mov
ins
popa
das
popa
sbb
jp
mov
inc
shr
xchg
inc
gs
adc
cmp
push
test
pop
dec
cwde
inc
cli
aaa
in
cli
iret
jle
(bad)
popa
sub
push
pop
mov
addr16
in
inc
push
adc
stc
pusha
mov
stos
mov
adc
adc
and
mov
outs
je
push
es
cmp
jnp
fisttp
ins
push
pop
push
push
jnp
cli
test
lods
dec
adc
hlt
and
jecxz
jne
adc
std
jg
xchg
dec
test
adc
mov
adc
inc
jbe
pop
(bad)
into
adc
(bad)
pushf
cmp
jne
stos
xchg
ins
repz
sub
iret
pop
inc
stc
inc
lods
pop
push
jg
sbb
js
ret
adc
xor
out
mov
cmp
int
repnz
dec
xchg
cmp
scas
xor
fldenv
(bad)
cmps
cmp
shl
inc
pop
sti
movs
push
inc
test
lock
inc
jbe
out
addr16
mov
(bad)
int
dec
jnp
add
mov
mov
xor
add
jno
jg
add
add
scas
and
mov
pop
or
mov
adc
add
std
pop
in
sub
sub
jno
jnp
pop
test
shl
pusha
call
mov
ins
test
xchg
cli
xor
inc
cmps
in
jecxz
out
xchg
or
adc
dec
out
mov
and
mov
pop
jmp
les
dec
jle
mov
push
in
into
retf
bound
xor
add
cwde
int3
nop
frstor
lea
sbb
or
and
cmp
jle
and
loopne
push
loop
cmp
sbb
std
pop
test
pop
pop
mov
imul
movs
call
lea
push
push
cwde
sbb
cs
xchg
into
mov
gs
lock
cmp
mov
fwait
(bad)
fs
or
push
rcr
jbe
sbb
dec
and
shl
out
js
cmp
xor
jg
cmp
daa
push
pop
movs
test
aas
nop
push
shr
mov
div
mov
jp
cmp
std
xlat
pop
lahf
inc
or
repz
cmp
outs
mov
xchg
(bad)
loopne
sbb
sub
push
xor
icebp
inc
cmp
mov
mov
xchg
repnz
outs
in
jge
loopne
push
jge
xor
jae
repnz
jecxz
ja
test
mov
or
inc
clc
(bad)
mov
not
pop
dec
pop
retf
jns
mov
or
ficom
push
dec
fidiv
mov
cmp
push
sar
dec
push
ss
jle
cmp
dec
popf
add
scas
push
jnp
ins
dec
stc
dec
mov
jmp
add
pop
mov
stos
lock
push
jns
adc
cli
and
jmp
sti
ins
int
add
cmc
retf
bound
jae
(bad)
rcr
aad
mov
mov
loope
fild
adc
test
call
mov
je
pop
fnsave
xchg
(bad)
push
adc
sub
or
push
in
dec
fwait
mov
sbb
sub
shl
out
mov
enter
push
sbb
sub
mov
mov
xchg
push
lahf
fimul
jb
lahf
push
inc
shl
in
pop
mov
xadd
jmp
arpl
pop
dec
push
in
loop
inc
gs
mov
hlt
test
je
push
jg
stos
fwait
dec
jmp
dec
mov
pop
imul
(bad)
es
jp
inc
cmp
scas
repnz
xor
test
sub
out
xchg
stc
addr16
add
mov
cmp
or
popa
popa
sti
rcr
jb
cmp
xor
pop
cs
sbb
sub
pushf
retf
adc
mov
lahf
push
test
daa
stc
es
fnsave
add
push
out
mov
(bad)
pop
stc
ficomp
sbb
arpl
or
sub
ret
mov
pop
adc
in
pop
sub
pshufw
(bad)
cld
xor
cmp
aas
inc
pop
push
sub
mov
lods
bound
stos
push
add
mov
and
out
or
fldcw
push
sbb
xor
cmps
shr
test
into
and
pop
out
icebp
push
bound
loope
inc
int3
int
mov
jp
jne
(bad)
xchg
pop
pop
dec
cmps
imul
imul
push
sbb
mov
sbb
test
mov
pop
dec
mov
pop
jmp
push
add
cmps
int3
shl
enter
pop
xchg
(bad)
jb
add
xchg
sub
push
cmp
fistp
cmp
fxch
sub
push
loopne
dec
ret
sti
pop
sub
lods
adc
mov
push
jbe
cmp
enter
(bad)
push
(bad)
mov
push
hlt
xor
dec
dec
mov
aaa
push
fisttp
lahf
dec
push
or
jmp
push
adc
xchg
adc
xor
inc
in
push
or
inc
pushf
pop
xchg
add
mov
xor
and
lock
lods
imul
xchg
les
(bad)
imul
sbb
sub
rcl
mov
push
das
ret
into
jo
movs
inc
jae
mov
lods
ins
(bad)
lahf
(bad)
stc
mov
xor
cld
xor
loope
mov
mov
call
repnz
cmp
jbe
sbb
add
outs
cmp
mov
icebp
push
retf
les
jb
loopne
cmp
add
fsubrp
iret
mov
and
aas
shr
call
mov
xor
or
in
mov
jnp
cli
scas
dec
in
addr16
jle
and
mov
shl
xchg
test
xchg
test
js
mov
std
popf
jnp
scas
test
cs
inc
push
cmp
fucom
cwde
push
jl
fwait
call
xor
sub
mov
stos
pop
sbb
inc
adc
lds
rcl
fiadd
push
enter
data16
arpl
fcmovnbe
ret
hlt
sub
inc
jns
inc
test
xchg
aaa
cmp
jns
stc
inc
xchg
ja
mov
arpl
adc
sbb
repz
and
es
jo
movs
imul
je
cmps
call
jmp
std
push
lods
pop
es
xor
in
pushf
jnp
jmp
outs
into
data16
sub
ficom
cmp
sti
inc
leave
call
jmp
js
mov
scas
or
mov
imul
fsubr
xlat
sbb
inc
movs
inc
popa
inc
adc
push
pop
outs
cmps
inc
mov
lods
ins
in
mov
cmps
(bad)
lock
ficom
retf
arpl
addr16
addr16
arpl
sti
out
sar
jecxz
in
data16
icebp
(bad)
jl
mov
xchg
and
jge
pop
mov
jno
ret
aas
sahf
push
add
ror
cmp
clc
out
push
add
dec
pop
sub
push
shl
aad
adc
jmp
clc
in
cmps
mov
sub
imul
pop
add
pop
add
add
jge
fistp
arpl
sbb
clc
inc
xor
call
inc
jge
xor
jmp
dec
xlat
fcom
mov
inc
cld
shl
add
mov
push
push
ds
in
fadd
jb
loopne
cmp
jl
mov
xchg
int
cwde
neg
or
stos
sbb
mov
repnz
(bad)
push
std
out
adc
dec
mov
pop
xchg
(bad)
mov
cli
mov
lea
scas
test
cmp
cmp
sbb
push
mov
and
out
pop
popa
cmp
inc
inc
rol
icebp
mov
sbb
mov
in
test
shl
cmp
pop
push
pop
sar
mov
and
inc
mov
cmp
stos
push
xor
loope
xor
add
adc
jns
je
sub
es
xor
and
jb
jae
cmp
sbb
loop
sbb
ret
xor
pop
nop
sbb
cwde
stos
mov
sbb
outs
mov
imul
cmp
dec
dec
fidiv
sub
sub
clc
pop
dec
adc
or
inc
into
pop
xor
xchg
rcl
call
and
xchg
call
jo
lahf
push
adc
xor
mov
push
push
xor
out
dec
sbb
pushf
jnp
aaa
adc
mov
add
outs
push
sub
shl
jne
xchg
mov
in
call
mov
mov
push
mov
icebp
dec
xchg
jb
cmp
movs
sub
pshufw
jp
jl
pop
mov
bound
cdq
ins
dec
sbb
pop
mov
jbe
cs
dec
inc
pop
cmp
jmp
movs
adc
sub
popf
mov
xchg
shl
cs
add
cwde
fs
push
push
dec
adc
imul
push
out
loop
xchg
push
add
hlt
rsm
sbb
push
addr16
xchg
jp
pop
or
mov
(bad)
push
pop
and
(bad)
hlt
fpatan
sahf
inc
lds
jl
cdq
xchg
xchg
jg
fldenv
cmp
xchg
jne
imul
int3
push
push
clc
inc
test
xchg
in
and
jmp
mov
xlat
(bad)
xor
and
jl
das
mov
scas
mov
add
ss
xchg
jbe
test
or
std
jno
out
mov
icebp
mov
inc
inc
xor
cmps
jg
pop
mov
xor
jg
aam
ret
jmp
mov
sbb
es
add
jp
and
popf
lods
mov
inc
jns
mov
popa
cmp
push
adc
(bad)
jmp
xchg
and
icebp
stc
adc
inc
sub
jmp
cmc
shl
(bad)
cmp
cmps
inc
jnp
fwait
shl
or
retf
jnp
mov
adc
shr
ds
xchg
push
in
loop
retf
add
aad
mov
fwait
(bad)
xor
push
dec
xchg
iret
mov
push
add
cmps
rcr
lock
das
mov
mov
cmp
sub
fcmovnu
pop
or
loop
fnstsw
rol
push
fsubp
ins
push
jge
xor
xchg
add
je
xchg
cmp
add
push
inc
sub
xchg
daa
pop
std
stos
jne
fnstcw
xor
adc
add
out
cdq
push
jbe
repz
sbb
(bad)
arpl
mov
movs
sbb
push
xor
mov
enter
shl
mov
in
pusha
xchg
mov
add
sbb
fsub
les
push
dec
jnp
or
js
(bad)
or
xchg
mov
sbb
jmp
retf
mov
cmp
in
into
pop
iret
push
ja
sub
cld
adc
push
mov
add
dec
jno
pop
xor
sub
push
pop
enter
mov
cmps
out
pop
call
jb
aas
vdivsd
mov
inc
pusha
xor
adc
xor
pop
or
or
jns
les
jns
sbb
sub
rcl
pop
call
and
rcr
aas
(bad)
adc
xchg
xor
mov
mov
ins
and
addr16
or
dec
inc
icebp
cmp
addr16
ret
call
sbb
push
xchg
pop
retf
retf
dec
dec
inc
pop
mov
mov
adc
imul
jae
lahf
cmps
mov
push
push
mov
sub
xchg
sti
and
shr
aaa
adc
je
mov
cmp
xchg
leave
sbb
imul
pop
(bad)
call
or
push
pop
call
push
xchg
icebp
mov
test
jno
adc
iret
jmp
xchg
and
mov
ss
(bad)
nop
cmps
test
sti
jae
inc
xor
test
mov
sub
cdq
ds
sbb
ror
fwait
stc
les
aam
dec
pop
pop
xor
pushf
loope
sub
pop
push
inc
outs
inc
adc
pop
rol
jae
pop
out
inc
loop
mov
scas
push
push
xchg
cmp
stos
popa
push
ror
jge
dec
xchg
add
mov
adc
adc
aas
xchg
and
xchg
cli
pop
inc
mov
imul
data16
ret
inc
mov
test
lock
mov
(bad)
imul
xor
mov
push
jne
fmul
and
repz
cmps
xchg
div
fstp
sub
inc
out
dec
xchg
in
xchg
mov
bound
(bad)
in
cmp
sbb
jo
mov
push
sti
aam
mov
rcr
call
push
cmp
sti
jle
sahf
test
shl
addr16
add
daa
mov
inc
dec
mov
arpl
aad
sbb
xor
cdq
repnz
loope
out
bswap
cmp
jnp
or
mov
jg
pushfw
mov
mov
xor
addr16
in
sub
js
dec
mov
in
xor
push
adc
sar
fsubr
dec
fsubr
add
fs
(bad)
stc
pop
jnp
std
shl
add
cmp
in
push
sub
mov
and
add
(bad)
out
push
pop
ret
out
cmp
cmp
aaa
icebp
dec
xchg
xchg
cs
and
(bad)
mov
(bad)
fisttp
mov
ja
imul
inc
sub
xor
test
or
pop
mov
and
into
cs
mov
das
sub
iret
jno
sbb
mov
sub
mov
inc
dec
pop
clc
js
mov
int3
push
xchg
scas
test
mov
movs
mov
push
xchg
or
je
add
dec
daa
mov
xor
mov
icebp
out
sahf
cwde
xchg
xor
pop
sub
les
push
push
aad
rcr
mov
(bad)
cwde
or
repz
pushf
ja
lea
jg
es
mov
call
cmp
ins
lods
rol
mov
sbb
movs
sub
jnp
or
cld
pop
jp
mov
mov
cmp
daa
lahf
xchg
dec
push
push
dec
aaa
loopne
icebp
pop
sbb
rcl
cdq
jmp
in
inc
mov
add
pop
xor
das
scas
outs
xchg
mov
sub
dec
lea
cmp
mov
pop
in
inc
xchg
rol
pop
ret
or
mov
pop
push
fst
push
int
dec
xchg
push
nop
int3
inc
lds
sbb
sbb
retf
pop
int3
retf
pop
cmp
mov
arpl
retf
out
add
pop
push
push
aam
lds
xchg
adc
scas
cmc
and
and
jge
dec
mov
mov
dec
mov
adc
imul
aas
leave
and
addr16
mov
aad
repnz
cwde
repz
repz
gs
mov
and
mov
pushf
jmp
mov
pop
sar
xlat
dec
js
mov
xacquire
jmp
jno
in
into
popa
add
in
movs
int3
(bad)
push
mov
in
mov
aaa
inc
setbe
cdq
xchg
call
cmp
dec
pop
or
(bad)
push
mov
xchg
rcl
dec
xchg
add
and
pop
into
jmp
mov
xchg
push
shl
mov
(bad)
jp
cmps
sbb
jmp
adc
sbb
push
xchg
jle
sbb
aaa
cli
jp
iret
pop
out
pop
movs
sahf
xor
or
aas
dec
pop
cmp
or
sahf
pop
sbb
in
iret
xchg
add
mov
xchg
or
mov
jecxz
pop
inc
xchg
jbe
addr16
push
push
add
or
(bad)
mov
fisub
push
pop
arpl
fs
hlt
clc
ror
sub
mov
lock
test
leave
cdq
js
or
loope
lods
fwait
pop
or
xchg
or
adc
stos
and
and
les
hlt
(bad)
gs
or
fstp
xchg
xchg
and
sub
rol
cdq
adc
stos
movs
push
push
arpl
mov
xchg
test
xchg
cmp
pop
push
xor
xor
retf
stc
push
nop
gs
aam
mov
dec
jmp
jge
cld
aaa
rcl
xor
mov
push
xchg
mov
lock
mov
adc
sbb
jne
xchg
xchg
and
pusha
shr
mov
jno
in
jl
(bad)
mov
jne
fs
hlt
mov
mov
sti
pusha
stos
xchg
jmp
and
add
jmp
add
imul
pop
popf
push
xlat
outs
jmp
xor
jno
sbb
lsl
add
pusha
jne
div
dec
std
mov
mov
jp
mov
ins
cmp
mov
add
inc
push
dec
and
cmp
std
mov
or
icebp
ds
inc
xchg
ror
mov
repz
loop
(bad)
push
dec
adc
inc
jmp
aas
aaa
das
lods
pop
aad
mov
push
adc
push
cmp
and
repnz
enter
ret
retf
mov
and
out
jbe
outs
lds
push
pushf
sub
movs
inc
pop
ins
lds
adc
inc
dec
pop
movs
loop
sbb
call
test
add
xor
into
jo
retf
popa
push
sub
adc
fwait
cmps
fmul
xchg
sub
inc
enter
and
ins
lea
or
ja
les
ins
aam
(bad)
aas
inc
push
jo
inc
fld
jnp
(bad)
imul
enter
mov
sbb
mov
shl
stc
mov
sub
aad
popa
jp
add
mov
test
test
idiv
dec
xchg
inc
push
fisttp
add
repnz
xor
jp
jg
cmc
fild
pop
ins
pop
inc
mov
mov
sub
xchg
ins
addr16
jle
mov
fiadd
xor
rcr
pop
push
ins
pop
push
(bad)
leave
xchg
mov
pop
xor
in
push
movs
aad
xor
(bad)
bound
push
in
jg
xchg
pop
cmp
out
pop
ret
imul
test
ins
push
shr
sbb
mov
push
mov
sub
mov
pop
pop
sbb
push
fistp
call
arpl
lea
adc
xor
jne
or
lock
sbb
mov
retf
push
push
cld
or
cmp
enter
fcomp
test
or
aaa
retf
test
retf
(bad)
rol
mov
outs
loope
stos
sbb
mov
rcr
push
mov
push
xchg
or
(bad)
jns
add
mov
loop
lds
sub
inc
pop
add
jmp
mov
dec
popa
and
shl
retf
inc
push
push
fisubr
cmp
cmp
je
and
mov
in
xchg
sub
pop
jo
movq
inc
mov
xor
nop
pop
pop
sub
xlat
repnz
or
lea
mov
int
adc
sbb
xchg
and
pop
in
je
mov
add
pushf
lahf
and
inc
add
push
stos
ror
iret
arpl
ins
or
jb
test
or
popf
mov
test
int
sbb
cli
es
mov
std
sub
int3
fldcw
add
inc
fidivr
cmp
push
popa
mov
push
inc
test
icebp
push
push
jp
jno
cmps
jns
mov
bound
push
popa
push
icebp
xor
or
shr
sub
(bad)
in
adc
add
add
retf
pop
in
adc
mov
pop
jl
adc
or
xchg
dec
popa
imul
fs
(bad)
aas
cmps
enter
nop
cmps
xchg
xchg
shl
adc
mov
stc
and
push
mov
subps
outs
fsub
icebp
sub
cmp
fcos
mov
and
add
mov
ds
xchg
sbb
push
paddsb
js
dec
add
int
mov
cmp
fxch
repz
pop
jnp
or
aam
push
es
std
pop
adc
movs
mov
jns
xchg
xor
(bad)
sbb
aam
jecxz
and
fstp
jp
push
and
jb
xor
and
shr
bound
(bad)
xor
push
add
add
ds
sub
xchg
test
or
jecxz
je
ffreep
das
push
xlat
and
mov
int3
icebp
mov
pop
and
dec
push
adc
out
jecxz
dec
sub
sub
lock
push
std
xor
add
mov
inc
aam
xor
and
mov
jnp
inc
outs
js
sbb
push
inc
fdivr
mov
cmp
dec
(bad)
outs
hlt
loope
adc
sbb
xor
sub
cmc
std
mov
into
ins
shl
xlat
addr16
push
xor
cld
cmps
jg
mov
fimul
ss
leave
xchg
xchg
dec
(bad)
fsubr
rcl
out
call
inc
or
nop
scas
fist
popf
or
xchg
push
jns
rcr
cmp
(bad)
mov
or
imul
(bad)
mov
rol
cmp
push
ins
rol
cmp
push
mov
push
aaa
mov
push
cmps
jecxz
push
inc
pop
icebp
ss
lods
ins
sub
mov
inc
movs
inc
push
jg
(bad)
and
daa
movs
aas
sbb
outs
jl
retf
cmc
ins
fld
push
xor
(bad)
mov
ins
jbe
in
mov
xor
inc
push
and
mov
pop
(bad)
adc
loopne
xlat
cdq
jae
or
out
jo
test
das
inc
nop
xchg
push
pop
aaa
sub
out
pop
movs
add
imul
jmp
jge
or
scas
jbe
scas
enter
cmp
or
outs
cmp
call
push
rol
and
dec
pusha
mov
or
jmp
push
imul
test
mov
into
out
int3
cld
mov
sbb
xchg
push
test
ret
cdq
fwait
pop
scas
enter
jmp
mov
xor
lods
cwde
sar
mov
cmps
mov
rcl
inc
mov
mov
sbb
loope
pop
test
cmp
int3
sar
scas
fistp
xor
cmp
rol
aad
sbb
ss
movs
scas
or
xchg
or
xor
adc
sar
cmps
idiv
adc
leave
out
or
lea
xor
xchg
add
pushf
mov
cmp
repnz
jae
xchg
idiv
imul
iret
cdq
ret
jno
jl
iret
cld
push
jns
fprem
nop
dec
js
les
pop
inc
out
clc
inc
cmp
or
xor
sbb
and
fistp
and
xlat
ds
test
shr
in
mov
icebp
pop
inc
adc
iret
into
fidiv
sbb
cs
jmp
adc
or
imul
inc
xchg
jg
jg
mov
cli
push
pop
lds
jbe
add
push
ror
sbb
dec
iret
mov
call
mov
test
lods
sub
pop
xor
dec
xchg
neg
pop
jp
and
jae
ss
xor
jbe
push
mov
add
shr
mov
jnp
(bad)
adc
push
loop
push
in
lahf
movs
or
mov
(bad)
out
jnp
mov
mov
leave
adc
mov
inc
mov
and
je
pop
rol
fsub
repnz
xor
lea
adc
pop
cmp
test
sub
loope
jbe
push
enter
sub
repnz
dec
int3
jle
mov
or
into
or
ror
sbb
push
mov
sbb
aas
jae
mov
(bad)
das
inc
mov
cmp
jge
lea
js
cwde
mov
fisubr
int3
sahf
out
add
fs
mov
out
mov
int3
mov
movs
idiv
dec
push
out
je
loopne
adc
mov
and
scas
pop
pop
fcmove
mov
xor
sbb
call
or
jno
push
adc
leave
(bad)
xor
adc
icebp
int3
jb
jecxz
aad
jl
jo
adc
ret
(bad)
fistp
add
push
pushf
xchg
mov
dec
mov
add
push
push
repnz
adc
pcmpeqd
mov
mov
js
popa
xchg
dec
cld
add
movd
jae
stos
jae
lahf
cmps
pusha
fs
fldenv
dec
pusha
jecxz
into
repz
pop
rcl
or
sub
test
fcomp
rol
or
(bad)
retf
aaa
push
mov
xor
jl
data16
sub
inc
mov
sbb
call
je
pop
fadd
shr
stc
dec
gs
sub
dec
test
fcmovnb
and
loope
lods
cmps
ins
jnp
ins
call
xchg
lock
repnz
cmp
mov
jno
jne
lahf
pop
bound
div
test
scas
call
push
mov
(bad)
cmp
and
jo
in
iret
stos
xor
mov
arpl
push
test
xchg
sahf
loopne
jnp
dec
lock
xor
pop
aad
jg
sub
es
ret
int
call
jecxz
loopne
les
xchg
mov
cmp
jns
pop
bswap
xchg
call
hlt
fldenv
or
pop
(bad)
xchg
into
fcmovnbe
iret
sub
fdiv
out
pop
mov
cmps
mov
sbb
es
push
mov
clc
arpl
int
pop
shl
(bad)
dec
test
dec
add
xchg
jp
xor
fisubr
xor
jae
retf
cmp
aad
(bad)
inc
int3
lods
push
jmp
jno
push
ds
jae
pushf
jae
(bad)
pop
in
xchg
inc
inc
pop
fwait
sub
js
push
add
push
cmps
movs
jns
sub
push
or
fs
(bad)
pop
fs
pop
outs
aam
call
dec
pusha
pop
loop
cmp
jae
rcr
fbstp
xchg
xor
push
je
(bad)
pop
or
and
fisttp
mov
lea
xchg
lods
les
pop
gs
jl
sbb
pop
fld
sub
lock
cmps
clc
cmp
popf
mov
pop
imul
mov
push
loopne
sbb
sub
ja
pusha
mov
add
cmp
sbb
into
retf
ret
dec
icebp
test
jno
into
mov
push
push
ret
or
xlat
push
enter
inc
(bad)
mov
imul
jnp
pop
in
adc
sar
and
ds
retf
mov
cdq
test
sub
in
jmp
sbb
mov
fwait
mov
xor
daa
mov
(bad)
scas
shl
adc
push
add
adc
cwde
push
jle
xor
pop
inc
push
popa
add
sub
sbb
int
pmuludq
ret
jmp
stos
int
aad
mov
fs
or
jg
or
cmp
adc
mov
xor
mov
adc
pop
je
sub
(bad)
or
push
jge
mov
add
mov
mov
sub
pop
jbe
mov
push
inc
ins
stos
cld
in
add
or
shl
dec
shl
stos
js
and
xor
jo
jmp
(bad)
fdivr
jno
sbb
cmp
xlat
xor
adc
xchg
cmps
fsubr
mov
jecxz
call
retf
out
pop
add
es
hlt
pop
xchg
xor
mov
popf
ja
int
cmp
jns
fdiv
mov
push
sbb
inc
call
clc
pushf
gs
mov
inc
add
and
jbe
into
(bad)
jmp
and
dec
mov
dec
jmp
mov
jno
and
sbb
call
daa
imul
mov
arpl
or
jmp
ins
inc
dec
fld
push
mov
and
lahf
pop
xor
xchg
hlt
ja
xor
cld
lods
or
shl
xchg
push
sub
sub
aaa
push
imul
nop
ss
add
rep
cmps
sti
scas
cwde
cli
ret
jg
cmc
push
aas
push
sbb
or
push
cmp
rcr
fs
mov
mov
mov
xor
and
add
clc
jb
fs
dec
(bad)
lods
not
std
mov
xchg
retf
stos
ja
cmp
xor
push
or
pusha
retf
pop
cmp
and
xlat
jae
leave
cmps
jb
popa
call
add
stos
lds
xchg
and
ror
push
inc
jg
dec
sbb
test
mov
jbe
cmps
mov
jbe
add
fisub
push
lds
rcr
in
add
cmp
mov
inc
add
add
cmp
push
mov
or
lds
cmp
cmp
adc
adc
push
outs
cld
mov
mov
cmp
cmps
popf
aas
mov
adc
scas
retf
xchg
sbb
inc
jnp
retf
lds
imul
lsl
xchg
inc
xchg
outs
or
mov
jbe
int
repnz
adc
fsubr
(bad)
xor
loope
leave
loop
mov
stos
cmp
xor
test
cmps
sbb
mov
in
or
test
xor
stos
add
adc
(bad)
jmp
cmps
shr
add
das
push
jecxz
lds
jecxz
jne
jno
dec
pop
adc
loope
or
icebp
stc
out
movs
xor
push
xchg
movs
leave
and
ss
pop
nop
sbb
push
jp
es
mov
rcr
push
ja
les
leave
outs
outs
hlt
stos
push
push
sub
pop
mov
mov
adc
inc
ret
rol
sbb
ret
push
push
jbe
adc
sbb
dec
imul
(bad)
movs
lahf
pop
ror
mov
adc
pop
fldcw
cmps
pop
sti
push
fsubr
xchg
fnstcw
sbb
imul
daa
add
fist
test
sahf
mov
call
jge
fild
shl
sub
jb
sahf
adc
pop
repnz
jne
fwait
daa
push
pusha
in
adc
xor
cmp
mov
mov
push
or
xor
jnp
cmp
mov
and
jbe
mov
jo
inc
pusha
nop
cli
xchg
mov
call
loope
jp
out
(bad)
pushf
sbb
retf
test
gs
fld
(bad)
movs
cmps
fcmovbe
shr
inc
pop
adc
(bad)
std
mov
or
stos
repz
hlt
add
cmp
mov
fiadd
or
mov
test
cmp
cmp
outs
cs
mov
dec
outs
dec
retf
adc
mov
in
pop
mov
movs
into
lods
out
adc
aas
jnp
hlt
int
mov
lock
jecxz
mov
aaa
xchg
xor
mov
outs
lock
adc
ins
dec
test
adc
shl
pop
jne
pop
and
sub
inc
aas
pop
leave
add
xor
xchg
xchg
popf
sar
mov
jp
aas
loope
xlat
shl
mov
je
pop
push
test
int3
daa
mov
call
and
imul
fld
(bad)
mov
sbb
cmps
or
cmp
mov
fisub
sub
ret
loop
pop
aaa
or
repnz
fincstp
retf
mov
jb
or
push
add
fucomip
and
cmp
xchg
inc
inc
xchg
add
(bad)
mov
sbb
inc
push
mov
xor
xor
xchg
jmp
cmp
cmp
push
ror
ds
dec
and
and
out
xchg
sbb
je
call
out
xor
mov
inc
les
push
pop
(bad)
repnz
mov
lods
test
cmp
and
shl
jbe
add
js
cmps
sar
std
loop
xchg
ret
mov
mov
dec
movs
cmps
mov
sbb
ret
clc
test
enter
mov
mov
sbb
and
lock
inc
lods
ja
ror
mov
jns
(bad)
sbb
pop
addr16
sahf
jg
dec
mov
inc
sbb
inc
aam
data16
nop
sti
stos
add
dec
xor
sbb
sbb
into
int
fnstsw
push
xchg
sahf
repz
mov
std
in
cmp
stc
pop
inc
shl
sub
fcmovne
add
add
popa
or
pop
ret
xchg
or
iret
cmp
cmp
dec
xlat
fld
lds
adc
data16
pop
fwait
pop
inc
test
mov
xor
jns
rcl
or
and
ficom
xchg
out
ja
rcr
jnp
inc
int3
jnp
das
ror
das
mov
or
lea
(bad)
outs
ficomp
sbb
dec
sub
jmp
sti
mov
or
ja
mov
inc
fimul
cmc
je
sbb
(bad)
jns
loopne
sub
push
(bad)
jae
pop
mov
shl
or
icebp
mov
ret
fisttp
into
popf
xor
add
mov
mov
jmp
cmp
sbb
xchg
xchg
sbb
xchg
lods
jp
ss
call
outs
and
jl
sbb
mov
dec
and
sti
or
retf
adc
jl
scas
jmp
sbb
mov
cli
ja
adc
inc
enter
stos
and
imul
in
push
in
inc
or
hlt
in
jle
push
inc
cmps
out
(bad)
pop
cmps
push
mov
rcl
fistp
adc
int3
fcomp
ret
inc
cmp
sbb
fdiv
jl
inc
pushw
cmc
lea
inc
pop
push
sti
sar
xor
mov
mov
cdq
data16
js
pushf
xchg
mov
sbb
data16
add
call
aaa
call
xlat
adc
or
retf
(bad)
cli
pop
sub
das
pop
cmp
daa
sub
movs
sub
je
(bad)
pushf
xchg
ds
mov
div
aaa
out
lahf
stos
js
ds
jmp
or
sub
lahf
mov
aad
je
pushf
icebp
test
test
inc
movs
pop
mov
mov
pop
pop
ds
or
cmp
jae
(bad)
fs
jg
lea
dec
inc
jns
jns
sbb
shl
xchg
mov
mov
cmp
xor
std
shr
in
fidiv
loopne
sub
(bad)
aaa
mov
xor
fisttp
or
mov
add
mov
mov
dec
mov
out
pushf
scas
es
pop
sahf
das
mov
push
xor
push
adc
mov
xchg
inc
inc
dec
sbb
mov
jns
xchg
push
jno
and
and
loope
jge
xor
jno
popa
inc
push
pop
adc
stos
aas
into
shl
in
stc
hlt
pop
pop
or
stc
scas
cmp
sub
and
js
or
test
lods
imul
stc
fild
cld
sbb
sub
in
retf
outs
jb
sub
dec
lods
xchg
mov
mov
fcom
cli
xor
inc
mov
add
outs
jge
and
xor
inc
xor
cwde
cdq
sbb
sbb
xchg
mov
pop
mov
imul
ins
bound
mov
dec
outs
int
repnz
mov
jle
mov
mov
mov
clc
mov
xchg
jbe
mov
sub
outs
ja
stc
dec
lahf
sti
dec
out
rcl
jae
fsubp
les
dec
arpl
push
and
icebp
mov
setge
int
xchg
sbb
imul
jge
hlt
cs
fisub
out
aad
shl
sub
ror
pushf
loop
push
inc
aaa
cmp
push
jne
or
inc
pop
sbb
dec
idiv
jmp
inc
mov
jmp
mov
pop
test
shl
add
(bad)
mov
adc
jo
and
mov
mov
scas
mov
mov
jp
addr16
mov
sti
ds
jle
dec
jle
ins
and
fdivp
jo
(bad)
cli
cmps
shl
mov
xchg
mov
pop
and
lock
xchg
addr16
sbb
push
jmp
les
enter
add
add
lods
add
push
xchg
jae
ins
out
aam
or
outs
mov
adc
mov
popf
sub
mov
repnz
mov
push
sub
add
hlt
mov
dec
daa
sub
imul
into
push
dec
dec
xor
out
repz
(bad)
jbe
pop
loope
push
int
pop
mov
mov
aam
cmp
call
fdivr
clc
mov
das
fstp
nop
lods
nop
ss
xchg
mov
sub
bound
xor
mov
(bad)
sbb
or
sbb
(bad)
mov
stc
push
jge
or
es
adc
jecxz
cwde
adc
xlat
mov
dec
aam
dec
jae
jns
sbb
cs
test
dec
dec
or
mov
jo
dec
imul
fadd
jg
or
jmp
pop
xchg
hlt
test
retf
adc
(bad)
sbb
mov
and
mov
dec
sbb
fisub
sub
imul
in
jp
dec
jg
out
aam
xlat
xor
loopne
adc
mov
out
rcr
test
mov
and
fnstenv
test
xchg
sub
adc
push
xor
aas
jmp
std
inc
mov
push
into
cmp
call
div
mov
in
arpl
and
pop
pop
mov
inc
(bad)
cmp
ins
add
scas
lods
sub
sbb
pushf
pop
jb
inc
je
call
pop
xchg
add
mov
adc
shl
(bad)
sub
push
inc
or
cld
scas
inc
int
test
push
xchg
test
sbb
push
popa
test
xchg
inc
xchg
cld
xchg
pushf
adc
pusha
dec
sbb
out
dec
scas
pusha
inc
mov
shl
xchg
(bad)
xchg
repz
jbe
int3
cmps
fsubr
mov
jle
test
fist
scas
and
mov
xchg
dec
shl
mov
cmc
pop
inc
test
sub
repnz
push
out
cmp
or
xchg
fild
(bad)
loop
sub
gs
loopne
sub
cli
jmp
pop
inc
hlt
xlat
dec
fnstcw
sbb
cmps
jp
push
mov
sti
inc
rol
shl
into
pop
in
push
push
mov
adc
inc
inc
aam
and
retf
add
dec
call
mov
xchg
mov
jns
(bad)
xchg
(bad)
push
lds
rcr
fmulp
shl
(bad)
pop
int
dec
cmp
jle
imul
or
ret
(bad)
xor
xchg
ficomp
xor
hlt
add
hlt
xchg
adc
xor
hlt
pusha
clc
pusha
cmc
and
mov
xchg
and
jae
sahf
sbb
jg
lds
xlat
pusha
xor
and
add
mov
bound
leave
jle
das
faddp
into
jg
mov
push
(bad)
loopne
sbb
fbld
pop
cmp
pusha
jae
or
push
mov
or
fsubr
jne
movs
cmc
test
retf
adc
cwde
inc
mov
cli
repz
and
ds
adc
test
xor
add
stc
pop
daa
imul
mov
mov
fstp
adc
ins
pop
or
pop
aas
retf
(bad)
das
mov
stos
iret
mov
test
std
and
xchg
dec
call
sub
inc
or
mov
imul
aam
jge
jmp
lock
imul
sub
call
shr
out
sub
pop
ret
xchg
dec
cli
hlt
mov
mov
jge
jae
push
cmp
or
cwde
lods
adc
retf
xchg
or
add
push
sub
adc
push
loopne
out
mov
scas
pushw
ins
es
repnz
rol
xchg
dec
mov
mov
(bad)
pushf
mov
adc
xchg
fidiv
lds
dec
cmps
cs
rcl
pop
inc
cmp
out
(bad)
loop
jno
(bad)
nop
nop
lahf
sar
gs
push
pop
push
add
mov
stc
es
add
lahf
lock
pop
cmp
mov
mov
frstor
xchg
loopne
leave
add
stos
ret
sbb
xor
imul
shl
lea
xor
imul
(bad)
jle
sub
inc
add
stos
jno
mov
jne
popa
jl
mov
pop
(bad)
jl
cmp
adc
jecxz
xlat
add
xor
je
fldenv
cmp
cs
dec
lahf
mov
retf
or
cmp
inc
fsub
jmp
add
shl
jg
call
ja
bound
cs
mov
(bad)
ins
dec
neg
sub
cld
icebp
or
inc
out
sbb
lods
mov
test
stc
aaa
or
add
sub
mov
pop
mov
inc
pop
loop
addr16
scas
clc
jmp
cli
addr16
push
mov
inc
add
jmp
inc
pop
dec
cmove
adc
fucompp
popa
aas
mov
dec
and
xor
mov
retf
sbb
mov
call
push
jns
mov
cmp
jbe
sub
es
int
ja
inc
push
aas
xchg
mov
adc
jmp
mov
les
mov
inc
int3
imul
adc
or
sbb
lahf
sub
or
pop
mov
fiadd
(bad)
retf
iret
shl
int
lods
push
jmp
pop
inc
stc
pop
ret
repnz
jmp
push
and
repz
cs
loop
repz
and
repnz
pop
(bad)
stos
adc
call
stos
data16
popf
inc
scas
lods
add
add
mov
jp
icebp
push
and
and
es
sbb
fcomp
and
push
faddp
mov
cmps
ficomp
xchg
jae
outs
in
outs
or
sbb
xchg
jl
pusha
icebp
mov
movs
lods
loopne
aas
adc
mov
inc
repz
(bad)
lahf
mov
push
sti
inc
push
sahf
pop
outs
mov
retf
scas
out
(bad)
aad
lea
(bad)
push
xlat
mov
sub
out
jl
jns
ret
call
mov
jae
call
ret
push
jp
push
jne
jns
add
inc
movs
sub
cmp
xchg
mov
aad
lods
push
je
in
xchg
addr16
in
sbb
push
imul
aam
mov
pop
fwait
retf
sar
pop
rcr
xor
call
mov
inc
xor
bswap
mov
push
jbe
push
mov
sbb
pop
retf
lds
inc
add
data16
fiadd
cmc
movs
mov
and
(bad)
jl
(bad)
out
lds
nop
(bad)
ror
nop
nop
inc
adc
xor
jno
pop
add
inc
ins
aas
jecxz
lods
neg
idiv
dec
ret
adc
movs
cwde
sub
into
jg
adc
jp
(bad)
outs
mov
xor
pop
mov
outs
lahf
sub
fsub
xchg
sub
xor
call
push
pop
jnp
out
(bad)
push
aaa
movs
cmp
clc
jnp
mov
cdq
div
std
inc
jg
or
mov
into
call
rol
cmc
or
idiv
jmp
mov
imul
xchg
dec
in
loopne
mov
fstp
adc
adc
mov
jmp
ret
popa
sub
sbb
push
dec
loop
lea
movs
inc
pop
and
jp
xor
sub
(bad)
mov
jmp
mov
xchg
fcmovnbe
jl
dec
mov
sub
pop
add
push
xchg
dec
cwde
pop
add
xor
out
cmp
add
aas
adc
out
cs
cmp
ret
out
fdiv
fild
inc
xor
int
mov
pushf
mov
cmc
sub
mov
mov
sub
loop
lds
mov
sub
xor
and
into
dec
lods
pop
mov
mov
xchg
dec
sbb
in
cmp
ja
ret
dec
and
out
mov
inc
(bad)
mov
lods
and
sub
aad
ins
dec
or
mov
mov
or
mov
mov
pop
jmp
xchg
rcr
arpl
jle
lahf
or
ss
fs
jmp
cmp
out
je
sub
dec
fild
in
adc
movs
pop
jp
mov
mov
inc
add
xchg
sti
leave
daa
cmp
adc
dec
jl
mov
and
fdivr
xor
and
je
jmp
mov
in
cld
sahf
call
jg
xchg
out
ror
ins
jnp
sub
movs
push
lds
mov
shl
xor
in
lahf
dec
mov
mov
adc
adc
mov
add
add
cli
out
out
(bad)
jno
pop
push
push
movs
or
ins
mov
outs
mov
lahf
(bad)
xor
xchg
repz
hlt
pop
test
mov
in
repnz
adc
inc
add
loop
cmps
push
or
fsubp
aas
push
and
pop
arpl
mov
inc
mov
sbb
outs
popf
shl
pop
mov
dec
jmp
cmp
sar
jb
inc
cmp
and
adc
bound
jno
aad
adc
pop
das
mov
imul
mov
(bad)
shl
popa
or
or
push
push
bound
sub
jbe
cmp
cmp
jmp
mov
fiadd
xchg
mov
or
(bad)
xchg
iret
add
fidiv
mov
mov
add
lea
cmp
aad
cmps
mov
in
icebp
jmp
ins
popf
outs
xor
inc
cmp
fcom
scas
mov
inc
push
push
gs
adc
sub
mov
mov
(bad)
sti
xchg
sbb
adc
add
jge
mov
mov
xor
fsubr
xor
push
sub
and
jnp
push
ucomiss
and
stc
arpl
lods
inc
mov
cmp
pushf
sbb
pop
push
test
loop
out
loope
retf
push
mov
pop
inc
(bad)
scas
ffree
pushf
in
jnp
cmps
jl
shl
sti
mov
sahf
adc
mov
adc
jns
adc
dec
pop
xchg
and
bound
xchg
mov
sbb
or
or
(bad)
adc
pop
pop
jmp
jno
cmc
pop
add
dec
cmps
and
lods
and
dec
xchg
scas
sbb
sbb
frstor
xor
gs
stc
aaa
imul
xor
mov
push
cld
pop
bound
push
int3
aam
mov
cmp
test
lods
aas
and
inc
mov
mov
loopne
push
push
rcl
or
xchg
and
fldcw
movs
adc
sbb
mov
or
mov
mov
fcmovnb
sbb
xchg
ins
pop
retf
push
je
jbe
xor
push
push
push
pushf
mov
add
mov
mov
rcl
push
ret
cmp
ja
jp
inc
pop
out
mov
enter
ja
jl
out
ins
adc
mov
shr
mov
add
in
adc
rcl
aas
xlat
jbe
scas
push
jno
movs
or
or
xor
das
retf
sar
seto
xchg
es
(bad)
adc
push
jl
sahf
jae
push
xor
clc
adc
or
into
cmp
movs
scas
fidivr
pop
or
xor
int3
push
adc
mov
retf
popa
int
push
and
dec
mov
enter
mov
mov
repnz
push
scas
fs
mov
xchg
imul
mov
push
xor
xor
or
daa
xor
inc
push
push
(bad)
stos
and
mov
adc
outs
ins
and
outs
popf
int3
enter
cmp
rcr
lea
cmp
mov
daa
mov
add
jmp
in
mov
gs
add
dec
xor
dec
inc
icebp
enter
push
js
jl
aaa
cmp
dec
icebp
pusha
push
sar
shl
add
sar
in
cmp
movs
sub
jnp
jmp
rcl
jmp
mov
mov
cdq
repz
bound
dec
lock
mov
(bad)
outs
mov
stc
iret
clc
xor
(bad)
ffree
or
mov
repz
nop
add
jne
outs
pop
retf
ss
xor
js
scas
jae
lea
mov
pop
shr
stos
into
push
mov
cld
call
push
jge
ret
jge
push
aaa
jge
cmp
(bad)
push
dec
out
xor
mov
inc
out
pop
mov
mov
sbb
sbb
scas
xchg
xor
jge
loop
and
es
arpl
mov
out
stos
in
nop
mov
adc
outs
out
data16
out
cmp
(bad)
xchg
mov
or
or
xchg
push
xor
mov
and
std
add
cs
xor
or
fndisi(8087
xor
btc
inc
(bad)
jmp
add
neg
sbb
ja
mov
mov
cmc
std
mov
hlt
xchg
mov
sti
lods
cmp
push
dec
cmp
retf
cdq
psadbw
sub
sub
fsub
xor
mov
push
add
lock
(bad)
test
jle
fimul
dec
push
jmp
leave
pop
dec
xchg
or
call
popf
dec
ror
outs
mov
cmc
cs
int
(bad)
in
mov
xor
mov
mov
inc
inc
(bad)
mov
or
imul
xor
mov
lahf
es
adc
push
nop
or
push
add
jg
(bad)
in
add
push
push
adc
mov
ins
pusha
push
movs
mov
inc
jmp
xchg
fdiv
outs
mov
push
nop
inc
xchg
push
aad
adc
mov
loope
ja
movs
cmp
xchg
and
mov
sub
stc
adc
inc
inc
xor
pop
fsubr
pusha
or
repnz
xchg
pusha
pusha
outs
fcmovnu
sbb
outs
mov
pop
out
push
pop
inc
jmp
push
lods
repz
lock
dec
push
retf
ret
pslld
stos
pop
jge
cs
cli
pusha
retf
jg
cmovs
xor
jmp
mov
test
(bad)
xchg
dec
stc
outs
xchg
cmp
sbb
enter
inc
mov
push
mov
push
push
stc
pop
fdiv
jecxz
popf
ss
fiadd
dec
(bad)
push
add
ins
out
cmp
mov
loopne
xor
shl
sub
(bad)
xchg
leave
and
adc
and
fs
mov
je
xchg
and
pop
movs
adc
mov
sti
pop
shr
aam
pop
jle
lock
mov
popf
out
and
cmps
xchg
aad
xchg
call
jle
int3
(bad)
mov
xlat
aas
(bad)
stos
jae
cmp
or
inc
ja
retf
adc
loope
jns
into
test
pop
mov
adc
loop
xchg
sub
jg
imul
sub
sbb
inc
jl
jle
popa
lea
in
pop
sub
stc
xchg
or
loop
stos
inc
sbb
sahf
sub
int3
into
mov
xchg
imul
mov
sbb
dec
sar
(bad)
sti
push
jo
mov
(bad)
mov
sahf
push
ja
mov
std
(bad)
pop
les
add
repz
loope
pop
addr16
fbstp
sbb
retf
out
or
in
sti
in
push
popf
push
xchg
mov
sub
mov
mov
mov
mov
jmp
sbb
mov
mov
int3
pop
xchg
sub
jae
jmp
inc
fnstcw
adc
or
fistp
jnp
cmps
cmp
jle
push
fwait
sar
xor
and
lds
jo
fadd
or
and
popf
out
mov
ins
call
bound
xchg
imul
call
movs
mov
mov
xor
lea
push
clc
mov
pop
loop
call
jp
sub
aas
mov
mov
add
and
xor
jmp
sar
hlt
adc
and
inc
pop
dec
sub
jno
or
inc
in
ins
pop
enter
adc
jbe
out
sti
adc
cwde
mov
popf
mov
stos
imul
call
pushf
jo
sub
xchg
inc
sbb
push
push
jge
sbb
add
lock
leave
test
adc
stos
sbb
pop
or
in
fisttp
mov
and
mov
push
ss
xor
cli
cmc
sbb
ficomp
pop
ficom
ss
mov
mov
ficomp
fisttp
lahf
(bad)
and
aaa
movs
xor
fdiv
jp
scas
mov
adc
imul
mov
aaa
and
addps
sbb
adc
(bad)
imul
jg
enter
arpl
push
push
je
mov
push
lods
je
mov
pop
mov
add
and
ror
sti
loope
out
sbb
icebp
xchg
mov
add
sbb
lahf
rcl
fnstsw
outs
mov
push
cmps
add
test
lods
out
inc
add
mov
dec
pop
mov
mov
int
aam
(bad)
repnz
dec
stos
lock
pop
sti
in
mov
jo
push
mov
sbb
add
mov
xchg
popa
aas
xor
jg
aam
imul
dec
lea
mov
bound
in
push
test
test
sub
cmp
pushf
imul
aas
push
leavew
mul
mov
(bad)
ficomp
call
cmp
sub
ror
push
pop
xor
xchg
les
retf
mov
into
aam
dec
sbb
dec
popf
add
loopne
ret
fild
jbe
fwait
xchg
cs
inc
js
push
pushf
xchg
mov
data16
jnp
sbb
pop
jecxz
push
imul
xor
lds
adc
jmp
xor
ja
mov
mov
sub
nop
call
test
xchg
and
out
jns
push
jp
pop
test
pop
out
movs
xchg
pop
stos
push
gs
dec
mov
xchg
adc
ficomp
push
sbb
mov
dec
int
repnz
mov
neg
cmp
cmps
xor
enter
adc
adc
fimul
cld
xchg
sub
pop
pop
sbb
jecxz
jmp
mov
jo
xchg
cli
mov
lea
jb
(bad)
rcr
jmp
mov
pop
jns
push
mov
xor
add
fst
adc
push
cs
movs
add
mov
cmp
fimul
sub
out
cdq
jmp
pop
xor
inc
ret
out
inc
push
fnstcw
dec
movs
xchg
push
adc
(bad)
xchg
dec
xchg
push
test
xchg
mov
adc
mov
xor
scas
add
out
dec
cmps
in
cmp
push
test
repz
xchg
push
lods
repz
(bad)
mov
mov
jbe
mov
xchg
xor
into
sub
loop
jb
inc
and
push
push
add
cmp
push
out
mov
sub
mov
xchg
test
dec
out
sub
or
popa
fadd
or
xchg
ret
es
punpckhdq
mov
add
sbb
int
mov
aas
jge
xor
xchg
jecxz
xchg
push
int3
aaa
cmc
rol
cmp
scas
adc
daa
mov
movs
push
and
out
cmp
mov
test
int
fisttp
jg
cs
imul
scas
fs
or
dec
xchg
jne
fcom
inc
xor
inc
sbb
std
pop
push
scas
mov
mov
push
call
mov
mov
cld
shl
inc
mov
repnz
lods
imul
sti
mov
in
dec
popa
and
and
mov
movs
ror
sub
iret
(bad)
lock
or
out
out
mov
mov
jb
clc
push
mov
in
pusha
ins
in
push
(bad)
or
retf
in
(bad)
ds
pop
or
cmp
add
sub
and
not
sti
adc
mov
mov
push
in
sbb
inc
enter
and
js
sar
popf
lds
stos
int
lock
xor
sbb
loopne
xchg
jg
xor
push
js
mov
dec
popa
sub
pop
cwde
xor
dec
popf
loop
mov
shl
mov
dec
scas
mov
sub
pop
xor
pop
outs
xchg
and
jno
mov
jecxz
jns
or
test
push
xor
xchg
int3
ja
call
mov
push
mov
aaa
out
into
or
add
sub
les
(bad)
fisub
or
jg
jecxz
and
lds
inc
mov
add
add
cmp
xor
jmp
pop
retf
push
xchg
aad
mov
inc
pop
xchg
and
mov
addr16
loope
pop
xchg
cmp
addr16
leave
popf
mov
sbb
xlat
inc
dec
xlat
es
ret
pop
inc
dec
ror
popa
sti
or
lods
scas
lahf
xor
ins
hlt
cmc
xor
pushf
fnsave
arpl
call
pop
dec
dec
pop
addr16
aam
gs
xlat
xor
outs
mov
push
fisttp
dec
or
inc
rcr
inc
(bad)
fisub
add
inc
pop
xor
js
loop
aam
dec
loopne
retf
sub
sbb
xor
lods
mov
jg
pop
mov
jmp
test
push
push
stos
dec
xor
xor
mov
repnz
idiv
pop
imul
cmps
mov
stc
sub
sub
xor
mov
test
pop
mov
cmp
push
das
mov
pop
pusha
add
xchg
mov
mov
outs
lods
in
sbb
inc
repz
mov
push
out
cld
lds
xor
fistp
dec
and
rcl
hlt
pop
popf
pop
sar
arpl
inc
jmp
in
(bad)
out
sub
pop
jmp
aam
ins
fidivr
push
sub
push
push
cmps
inc
stc
rol
xor
pop
push
shl
mov
mov
jp
sub
xor
in
pop
or
(bad)
pushf
cmp
loope
mov
ret
nop
ret
or
es
aas
pop
and
cmps
and
xor
and
cmp
pop
in
int3
sub
jmp
mov
add
sub
icebp
adc
add
xchg
data16
out
test
sahf
jnp
dec
cmp
pop
popf
fcom
mov
sbb
test
pop
mov
xchg
dec
mov
neg
add
add
scas
lea
aam
lea
xchg
jg
xor
xchg
pop
mov
bound
pop
je
in
dec
push
clc
outs
sub
lods
add
lds
sbb
inc
arpl
fisubr
push
dec
sbb
iret
inc
into
retf
inc
out
cmp
sbb
ret
in
outs
adc
or
leave
jae
(bad)
jbe
xor
push
dec
mov
and
(bad)
fisttp
fcomp
inc
retf
scas
neg
adc
add
lock
js
or
cmps
imul
mov
push
dec
xchg
push
dec
jo
mov
out
jp
mov
pop
xor
or
jmp
dec
loopne
mov
inc
mov
(bad)
fisub
sbb
dec
in
jmp
aaa
es
mov
fs
adc
mov
mov
jns
das
mov
in
cdq
push
jecxz
adc
xchg
nop
mov
pop
scas
push
cmp
shl
scas
std
aad
aad
cmp
jno
movs
adc
fidivr
add
mov
inc
push
xor
outs
dec
(bad)
cli
pop
xor
daa
fnstenv
inc
adc
xor
test
push
sbb
push
sub
adc
add
xor
mov
pop
fidivr
sub
cli
push
cs
mov
dec
pusha
lods
lahf
cmp
mov
mov
fst
pop
adc
mov
leave
lods
icebp
ror
add
ret
cmc
push
xchg
and
ins
mov
xor
fs
call
gs
bound
sbb
sbb
push
test
test
in
stos
push
fisttp
lea
and
sub
sbb
ficomp
icebp
outs
inc
xlat
mov
aaa
out
outs
sbb
test
je
outs
dec
shl
in
aas
in
sub
mov
dec
test
into
popf
fisttp
es
in
adc
cwde
addr16
es
jge
pop
in
and
iret
sub
mov
fsub
ds
sub
lods
jns
push
daa
cmp
xor
inc
cmp
es
call
xchg
test
jmp
mov
adc
stc
mov
or
cwde
pop
push
cdq
sub
jns
(bad)
in
out
or
retf
add
imul
pop
data16
or
jge
dec
clc
sub
cmps
push
adc
cmp
mov
jp
mov
and
sbb
add
or
or
mov
xor
push
add
mov
cdq
jmp
dec
lahf
push
out
arpl
shl
repz
mov
mov
loopne
sub
enter
fisubr
cld
push
loope
test
shl
jle
xchg
dec
push
or
shl
mov
push
mov
xor
sbb
das
push
stos
fwait
shl
loopne
cwde
call
or
push
outs
adc
push
pop
fimul
xlat
add
clc
movs
push
add
je
xchg
cs
(bad)
loopne
sub
pop
xchg
push
stos
arpl
mov
cmp
xchg
add
cmp
push
mov
adc
aas
stc
call
push
jge
out
cmps
jno
stc
(bad)
mov
in
bound
clc
rcl
xchg
icebp
inc
and
std
dec
cmp
inc
add
push
jno
mov
ds
jge
lods
(bad)
push
mov
jle
sub
sub
add
clc
or
fnstcw
arpl
fwait
jg
ficomp
sti
imul
and
xor
cli
jns
sbb
int3
aaa
imul
outs
and
add
adc
movs
hlt
daa
xchg
adc
ret
popf
repnz
mov
mov
mov
inc
mov
stos
jae
in
(bad)
ja
dec
stc
rcr
or
fistp
adc
sub
(bad)
shl
lods
adc
test
cdq
enter
aam
stc
ficom
les
daa
movs
jae
pop
gs
fist
jmp
mov
cmps
or
jle
ja
cmps
mov
adc
out
jbe
push
xchg
popa
(bad)
sbb
cmp
push
inc
into
mov
rcr
push
xchg
sbb
hlt
xor
(bad)
les
in
ins
cmp
ins
and
dec
jae
mov
out
dec
aas
mov
mov
sbb
xchg
loopne
es
cmp
loopne
mov
out
mov
add
cmps
dec
mov
mov
pop
call
push
out
outs
mov
mov
inc
ins
xor
xor
cmps
sbb
adc
cmps
push
into
pop
cmp
and
jmp
inc
sbb
gs
xchg
repz
das
push
or
int3
aam
sub
cmps
sub
push
sbb
fsub
xor
loopne
inc
aam
add
xor
mov
lock
xor
das
sub
and
mov
nop
(bad)
mov
xchg
loopne
jle
dec
dec
inc
cwde
mov
push
jns
xor
xchg
sub
xor
push
cmp
jmp
dec
sub
es
xor
stc
movntps
jbe
xor
push
(bad)
outs
sbb
inc
js
mov
and
cmps
adc
pop
jb
aas
mov
mov
not
mov
cmp
test
xor
and
out
stos
cmp
pop
iret
cmp
jnp
es
ror
mov
mul
add
mov
sbb
or
retf
outs
jecxz
ret
inc
and
ret
aas
mov
pop
pop
mov
(bad)
dec
push
daa
lods
pop
jecxz
xor
cmp
cmp
mov
mov
xchg
call
aad
jae
outs
iret
inc
mov
pop
sub
cli
dec
jne
dec
xchg
loope
push
mov
inc
aas
sbb
dec
mov
arpl
or
sub
out
push
or
(bad)
sbb
ins
test
pop
xchg
cs
or
js
mov
add
mov
xchg
push
das
icebp
iret
cmps
xor
jns
inc
jnp
out
dec
jnp
mov
fwait
mov
cdq
jmp
dec
dec
inc
and
jmp
mov
sar
(bad)
push
mov
call
scas
(bad)
jnp
rol
jnp
xchg
rol
mov
adc
mov
xchg
je
xlat
mov
cmp
jbe
sub
and
add
in
push
inc
test
(bad)
pcmpeqw
imul
inc
mov
jnp
pop
mov
popa
add
sub
sub
outs
das
mov
pop
push
xchg
je
xor
pop
xchg
cmps
pushf
push
mov
mov
inc
(bad)
mov
sbb
xchg
gs
sbb
stc
push
pextrw
mov
retf
test
xchg
mov
in
inc
and
xchg
or
dec
cmp
ss
das
xchg
mov
jb
gs
das
(bad)
push
push
jmp
icebp
dec
aas
cmps
outs
sub
and
dec
and
and
ficom
sub
pop
ds
adc
loope
repz
jmp
cwde
iret
bound
jns
lods
inc
dec
push
and
imul
mov
mov
lods
xchg
lods
mov
iret
dec
call
sbb
popf
cs
rol
repz
push
enter
mov
jg
arpl
pop
add
mov
cmp
fild
push
popf
push
mov
inc
test
out
outs
pop
mov
loop
inc
sti
call
aas
fmul
or
outs
shl
mov
dec
jo
xor
aam
(bad)
mov
sub
jae
(bad)
mov
mov
sub
out
pop
imul
jmp
xchg
xor
pop
fld
sbb
jns
cmps
or
push
ficom
and
sub
push
pushf
xlat
rcr
into
ret
mov
cmps
push
cmps
repz
in
loopne
push
mov
(bad)
and
pop
sub
and
ds
mov
xlat
aam
push
lock
cmp
popf
daa
cli
cs
push
out
(bad)
jecxz
push
push
push
cmps
mov
aam
jl
fwait
pop
mov
hlt
lock
xor
cli
fsubp
leave
xlat
add
jne
inc
sahf
cdq
push
cmps
fsubr
arpl
(bad)
push
sub
mov
clc
int
push
popf
out
mov
adc
lods
xor
rcr
dec
in
push
fcmove
gs
xor
inc
pop
aas
pushf
bound
mov
jmp
or
arpl
xor
cli
leave
xor
xchg
hlt
clts
popf
scas
cs
into
mov
xchg
push
push
jns
dec
jl
div
adc
sti
sub
dec
outs
das
stc
daa
div
int
sub
hlt
inc
pop
jge
adc
mov
fucomi
and
jge
push
pop
mov
mov
fcom
inc
retf
inc
adc
mov
push
mov
frstor
and
movs
xchg
nop
xchg
push
pop
cmp
sbb
nop
fmul
xchg
inc
sbb
fwait
mov
mov
pop
out
inc
je
adc
xchg
shl
sbb
imul
shr
mov
btc
out
sub
std
loop
jno
jg
inc
adc
rol
ja
(bad)
cs
or
jns
xlat
dec
push
cwde
std
xchg
cmps
adc
inc
add
clc
xor
mov
dec
lea
imul
je
stos
popa
lock
mov
sbb
and
jmp
cwde
adc
jno
push
and
mov
jmp
and
xacquire
mov
je
pop
movq
ja
inc
fistp
mov
mov
inc
cmp
lock
pop
and
adc
into
and
sbb
call
jmp
fisttp
fistp
dec
imul
pop
iret
push
dec
or
mov
xchg
cdq
gs
push
shr
popf
int3
mov
add
iret
cli
adc
adc
xor
and
fcom
sub
mov
outs
movs
dec
fwait
adc
call
outs
fcmovu
aaa
or
icebp
mov
shl
stc
out
xor
push
outs
lock
pop
xlat
dec
mov
jnp
dec
fnop
jne
xchg
inc
fild
dec
cmc
sbb
add
popf
(bad)
rcl
test
outs
and
mov
ss
leave
in
mov
test
outs
in
js
adc
bound
and
sbb
iret
rol
(bad)
mov
pop
xchg
mov
int3
in
aas
xchg
iret
push
imul
cmp
cmp
loopne
push
test
cmps
(bad)
cmp
(bad)
arpl
les
icebp
popa
je
mov
enter
pop
push
inc
(bad)
xchg
test
pop
aaa
mov
jmp
and
and
(bad)
outs
cmp
xor
enter
mov
xchg
(bad)
mov
ds
test
xlat
stc
mov
mov
cmp
ja
ffreep
and
push
mov
dec
add
mov
aas
jecxz
retf
repnz
mov
leave
fld
mov
or
mov
stc
popa
(bad)
mov
pop
sbb
fs
mov
dec
jnp
inc
add
inc
jp
cdq
shl
add
push
ret
lods
outs
adc
popa
xchg
sahf
les
jb
cmps
(bad)
sti
mov
add
adc
out
and
add
and
cmp
mov
or
add
xor
jl
dec
push
pmovmskb
add
lds
stos
sbb
jno
lahf
xchg
fimul
inc
mov
sub
imul
and
lds
jecxz
scas
pop
(bad)
xchg
adc
mov
sub
xchg
dec
jno
lds
dec
lods
ror
push
adc
fldcw
sub
sbb
jmp
adc
sub
out
cmp
out
fidivr
test
sbb
mov
adc
nop
adc
imul
dec
pop
(bad)
xor
push
add
jmp
fisttp
mov
cmc
and
out
push
xchg
(bad)
pop
adc
aam
jbe
jnp
aas
push
xlat
push
or
pop
pushf
movs
cmc
xchg
xchg
push
xor
push
fstp
scas
xchg
or
movs
dec
(bad)
lds
cs
pushf
add
loop
cmp
stc
mov
pusha
mov
mov
ss
xchg
out
retf
movs
ret
lods
dec
sub
jl
(bad)
cmp
cmps
mov
mov
fbld
mov
std
cs
jl
ins
xor
cdq
xchg
std
inc
sub
jnp
mov
push
push
xchg
add
enter
pop
outs
xlat
dec
lods
dec
mov
pop
push
pop
dec
push
std
outs
(bad)
mov
js
mov
movs
xchg
das
xchg
cmc
pusha
mov
les
cmp
mov
mov
in
enter
push
jg
dec
mov
adc
clc
dec
jae
in
sub
mov
inc
pop
cmp
push
inc
call
das
in
add
dec
pop
dec
fcom
mov
sti
sbb
call
lahf
or
inc
test
xchg
int
and
mov
pushf
pusha
(bad)
add
inc
xor
jo
loop
sub
mov
mov
jmp
or
je
gs
jg
rol
cmps
mov
adc
mov
pop
adc
jg
pop
je
(bad)
push
mov
mov
add
nop
xchg
mov
(bad)
cmp
dec
ins
sbb
outs
xor
jns
jge
cld
sub
cld
adc
outs
in
dec
pop
cwde
sar
das
mov
fiadd
(bad)
lods
sub
inc
jmp
push
fcmovb
xchg
and
ds
inc
iret
dec
push
sbb
adc
jmp
cmp
xor
dec
inc
ret
loope
pop
div
mov
push
xor
push
sbb
push
imul
cld
dec
sub
fistp
mov
jecxz
sbb
jno
ret
or
dec
sbb
iret
sbb
mov
dec
loope
and
aam
dec
push
jge
sub
mov
nop
fs
outs
cld
(bad)
jmp
sbb
ficom
out
add
cmp
jo
into
jge
dec
dec
into
pop
cs
or
pop
sub
ret
cmps
cdq
in
mov
xchg
xchg
mov
cmp
mov
add
sub
push
out
adc
loopne
push
cmps
dec
mov
fmul
loopne
push
dec
arpl
sbb
jne
lea
jl
pop
jge
icebp
or
sub
clc
jbe
sub
dec
sub
pop
mov
fwait
es
mov
fcomp
push
pop
sti
or
call
dec
jno
cmp
cmpps
pop
out
mov
ror
lods
sbb
pop
lea
cli
les
push
cmp
daa
es
stos
loopne
mov
or
inc
out
jb
out
jae
dec
sbb
rol
cli
aas
push
pop
fs
imul
cdq
inc
add
xchg
inc
and
out
mov
cdq
mov
mov
popf
jno
sub
out
lods
xor
xor
push
jle
lock
jp
xchg
xchg
xchg
fdivr
arpl
push
stos
aaa
sub
sbb
pop
cmps
fisttp
and
pop
inc
retf
and
pop
add
int
add
popf
pop
sub
ss
fsub
nop
outs
adc
jns
shr
lods
sub
scas
loopne
pusha
icebp
test
sar
in
out
aaa
je
sbb
add
inc
nop
jbe
(bad)
lock
fnstsw
imul
mov
inc
xlat
add
sbb
add
clc
clc
cld
jae
inc
imul
fwait
and
(bad)
ror
jnp
ins
add
test
cli
jnp
push
ins
xchg
imul
mov
fs
add
sbb
add
fldenv
iret
ins
jne
arpl
movs
repnz
cmps
xchg
test
fmul
in
fsub
jnp
dec
pop
cli
aas
and
sub
sbb
jl
or
out
ss
repz
inc
dec
loopne
dec
imul
gs
mov
mov
int
aaa
mov
aaa
mov
mov
clc
shl
pop
fst
add
or
stc
add
jae
add
cmp
push
out
adc
push
pushf
dec
mov
xchg
jo
mov
retf
clc
in
sbb
fist
adc
push
and
cmp
add
mov
int3
jb
ins
xchg
cmps
and
xor
aad
jmp
pop
(bad)
push
jae
cmps
push
retf
mov
adc
sbb
mov
nop
or
shr
pushf
cmp
aam
dec
sub
lods
jmp
push
mov
call
jmp
fisub
shl
std
icebp
or
(bad)
push
sub
cmp
sub
push
mov
jmp
xchg
push
fisttp
push
data16
test
sub
xchg
cmps
mov
lahf
xchg
fs
popa
bound
imul
xchg
sar
aam
pop
ja
mov
(bad)
cmps
inc
stos
sbb
inc
in
jl
hlt
adc
fnstenv
sbb
mov
cmc
mov
fild
push
sub
push
nop
dec
ffree
sbb
mov
and
test
push
dec
cmps
loop
daa
and
jno
mov
lahf
adc
cmps
push
push
jmp
pop
mov
xor
test
sahf
gs
lock
jmp
out
movzx
jns
out
mov
sbb
push
popa
add
(bad)
mov
sbb
loope
push
pcmpgtd
mov
xchg
or
in
cmc
mov
lea
sub
adc
lahf
in
in
std
aas
jge
and
pop
sub
out
push
js
daa
sbb
xor
push
xor
out
fimul
sahf
fsubr
(bad)
pop
xchg
fild
popa
mov
pop
inc
pop
pop
mov
test
cli
xchg
das
xor
pop
jmp
sbb
aam
mov
fwait
cmp
aas
and
xchg
cli
vpandn
mov
sub
gs
in
push
daa
retf
std
pop
fild
mov
movs
adc
(bad)
out
mov
(bad)
xor
cmc
rcl
mov
mov
scas
pop
mov
inc
sar
sub
mov
push
sub
or
pop
jle
jns
mov
mov
setae
aad
test
mov
fcom
imul
int3
jl
mov
jp
and
dec
lea
imul
pop
pop
xchg
arpl
cmp
mov
jmp
lods
je
scas
call
(bad)
fld
cmps
jg
push
cmp
pop
push
fisub
inc
adc
push
cmp
add
repz
adc
mov
imul
sbb
je
stos
jae
xchg
and
das
xor
push
add
jo
sahf
sub
cli
jne
in
ja
pop
ss
cld
aas
sbb
jmp
and
addr16
sub
outs
dec
(bad)
fisubr
xchg
dec
jo
cwde
cmc
retf
push
les
mov
cmp
pop
test
int3
retf
add
jno
cmp
dec
fisttp
ror
xor
inc
adc
rcr
jle
inc
test
mov
dec
push
pop
xchg
fild
out
mov
movs
jmp
push
inc
call
fild
in
gs
and
ins
aaa
cmps
rcl
and
clc
mov
xchg
daa
jge
hlt
and
add
push
in
mov
lock
jbe
mov
js
mov
popf
pop
sbb
or
mov
retf
jge
inc
push
mov
xchg
xlat
mov
scas
arpl
into
cmp
and
je
push
dec
ret
mov
mov
jl
popa
jo
cli
dec
test
imul
data16
sbb
loop
ins
out
test
fwait
jno
arpl
push
xchg
pop
mov
mov
sub
(bad)
test
test
test
repz
dec
inc
jne
push
mov
fsub
xchg
add
fsubr
sbb
mov
push
mov
jns
and
movs
push
pop
in
mov
iret
sub
push
push
sbb
sub
pop
push
fisub
jbe
jmp
push
cmp
mov
pop
sub
xchg
lahf
cld
das
mov
and
sbb
ror
adc
xchg
mov
sbb
ds
dec
out
push
shr
imul
inc
push
mov
lahf
int3
daa
fistp
jmp
push
retf
(bad)
cmp
in
movs
in
and
cwde
lock
or
push
adc
jg
push
or
ins
shr
loope
adc
and
adc
mov
fidiv
push
cli
lahf
les
mov
add
push
or
sbb
cmc
cmp
sub
int3
int
pop
push
xchg
mov
add
(bad)
loop
imul
(bad)
inc
pop
dec
in
dec
cmps
sbb
cld
aaa
cmp
inc
frstor
bound
aas
sub
mov
ins
cmp
cmc
enter
jmp
and
imul
icebp
in
xchg
pop
sbb
int3
(bad)
sub
outs
mov
out
stc
push
movs
ds
cld
bound
nop
adc
cmp
cmp
stc
mov
sub
jl
ss
in
dec
xchg
mov
push
outs
iret
xchg
test
ret
das
pusha
push
pushf
mov
xchg
mov
or
adc
adc
pop
pop
jp
mov
fcomi
stos
call
sbb
adc
fadd
cli
ds
out
stos
mov
fimul
mov
scas
mov
jl
pop
jle
lods
mov
js
std
ds
mov
pop
xchg
sub
in
shr
adc
cmp
jp
(bad)
push
das
pop
in
sub
aas
int
outs
jb
pop
les
push
inc
mov
leave
sub
in
sub
add
pop
shr
movs
sub
movs
pop
enter
add
push
mov
cmp
mov
lock
(bad)
not
dec
mov
xlat
mov
mov
inc
neg
imul
fs
sub
add
sbb
fs
outs
pushf
movs
push
fs
xchg
jno
paddq
icebp
jmp
and
adc
adc
rcl
sbb
mov
push
repz
xchg
fucom
inc
fcmovnbe
pop
jle
mov
ror
lds
mov
shl
mov
lahf
dec
push
inc
loope
sub
sbb
lahf
lock
mov
lea
mov
inc
jmp
pusha
and
sti
lock
add
test
and
ins
mov
mov
mov
and
inc
(bad)
pop
rol
test
inc
jmp
cli
sbb
lods
adc
pop
push
lods
sub
nop
adc
pop
scas
fwait
ds
aad
out
adc
adc
inc
cmps
xchg
(bad)
jno
fidivr
adc
lods
test
daa
inc
add
cdq
or
call
fiadd
lea
jecxz
inc
out
ins
shl
mov
sbb
sbb
mov
retf
inc
fcom
fidiv
movs
cmps
add
mov
push
test
xchg
mov
mov
arpl
hlt
pop
cmc
cmp
or
(bad)
call
movs
inc
es
adc
in
mov
pop
out
jmp
jae
mov
(bad)
stos
jns
and
xchg
jae
jmp
(bad)
out
lods
das
test
hlt
scas
ficom
loop
neg
out
ss
inc
lds
ret
inc
pop
sti
cdq
inc
mov
int3
lods
test
call
mov
jg
ins
into
inc
mov
aam
xor
ret
adc
inc
dec
mov
jge
xchg
sbb
mov
fcomp
mov
or
jne
div
pop
and
int
adc
sbb
jge
mov
or
xor
inc
retf
ja
mov
jecxz
inc
fisttp
test
(bad)
not
jecxz
bound
jmp
call
and
and
dec
idiv
mov
fcom
pop
lock
cwde
lea
rol
test
retf
xor
push
int
test
or
jmp
mov
loopne
cmc
test
lea
xor
mov
jmp
jl
push
jmp
in
enter
add
(bad)
jmp
out
add
jbe
sbb
call
push
cmp
sub
inc
loopne
push
dec
arpl
sub
int
scas
repz
sub
js
(bad)
jns
test
cmp
popf
add
jl
xchg
pop
mov
ret
ja
pop
push
adc
jg
dec
xchg
inc
aad
nop
mov
add
dec
je
mov
fcomp
mov
or
(bad)
push
add
inc
iret
jno
lods
cmp
lea
out
(bad)
dec
std
mov
mov
mov
test
pop
inc
and
je
or
cwde
mov
dec
push
cs
retf
mov
out
pop
xchg
and
add
dec
xchg
stos
out
clc
es
(bad)
and
and
stos
add
push
inc
ret
lahf
bnd
iret
shr
dec
test
jmp
jge
aas
mov
aaa
call
inc
xchg
push
(bad)
cmp
inc
push
mov
xor
idiv
inc
fbstp
and
pop
mov
or
aad
outs
or
jns
mov
into
add
mov
(bad)
sub
fisub
jbe
stc
or
out
lahf
test
ror
int3
mov
arpl
pop
fs
bound
push
push
push
call
clc
jns
packuswb
push
hlt
mov
mov
sbb
xor
(bad)
sub
inc
push
inc
inc
test
fst
jecxz
mov
loopne
sbb
nop
sub
cmc
mov
nop
and
xchg
outs
jmp
xchg
and
and
inc
lods
and
inc
in
inc
push
ds
cmp
pop
push
inc
fist
xchg
pusha
jb
cli
lmsw
out
cmps
pushf
in
dec
push
push
pop
jp
clc
xchg
pop
loopne
ins
movs
pop
dec
sar
mov
daa
sbb
test
clc
push
add
ss
out
or
pop
daa
cdq
cmps
mov
imul
sub
jle
dec
movs
ins
aaa
add
nop
push
test
pushw
pop
outs
rep
inc
inc
mov
sub
(bad)
lea
jne
out
or
push
lods
bound
mov
pop
in
add
jbe
and
mov
dec
xor
cmp
push
push
mov
fdivr
in
xor
retf
imul
and
punpckldq
retf
mov
pop
fcmove
mov
movups
or
adc
scas
mov
inc
addr16
sbb
ret
push
mov
stos
xor
ficomp
pop
sub
enter
mov
push
cmp
jle
xor
(bad)
mov
hlt
xor
inc
(bad)
sbb
stc
mov
dec
xor
sar
or
xchg
xor
mov
mov
hlt
mov
xchg
ins
inc
in
ficomp
push
mov
ret
jecxz
mov
dec
inc
or
scas
out
xchg
(bad)
jl
jg
and
std
or
repz
pop
ins
mov
mov
adc
mov
and
rcl
adc
push
retf
and
inc
jae
icebp
mov
shl
jno
nop
scas
xchg
loop
jns
aaa
popf
dec
aam
add
aam
mov
mov
bnd
push
inc
jp
xchg
xchg
add
addr16
cmp
or
sbb
jmp
test
pusha
cmps
rcl
dec
mov
sbb
cmps
daa
outs
inc
add
cmp
xchg
xchg
xor
jne
adc
jl
and
das
cld
(bad)
mov
icebp
cmp
jns
push
je
jmp
mov
push
in
stos
sbb
scas
xor
into
das
(bad)
aam
jae
push
sbb
xor
jo
in
xchg
das
test
std
cld
mov
test
pop
sbb
and
pop
sar
pop
push
lods
cs
mov
xor
out
popa
outs
jmp
inc
pop
sbb
sub
mov
pop
je
clc
add
or
push
loopne
rcr
mov
retf
dec
inc
out
out
or
adc
adc
mov
sub
movs
cmp
or
or
cld
push
aas
mov
lahf
les
loope
mov
sbb
push
inc
sub
rol
sub
sub
std
sbb
pop
or
sar
or
cmp
stc
imul
pop
rcr
xlat
xor
and
or
jg
jb
mov
jns
inc
inc
aad
and
outs
jb
push
popa
inc
retf
movs
mov
test
push
and
fstp
popa
adc
push
mov
bound
idiv
in
daa
mov
iret
pop
pop
ret
out
adc
and
in
cdq
mov
jge
sub
in
sbb
pusha
sub
and
sub
shr
mov
xor
mov
lods
in
fsubp
sbb
and
hlt
ins
ja
sub
out
in
pushf
fs
lods
test
pop
cmp
pop
mov
std
stos
jmp
push
mov
test
mov
pop
inc
scas
stc
(bad)
jnp
leave
lock
mov
aaa
add
ret
xor
and
imul
pop
push
xor
loope
std
and
cdq
sbb
movs
hlt
cmp
inc
adc
jns
add
mov
push
les
rcl
fcom
movs
mov
repnz
push
nop
or
mov
cmp
loop
repnz
mov
sahf
int3
sti
ret
sar
cmp
dec
ret
icebp
aas
xchg
(bad)
lods
jl
xchg
sub
out
pop
mov
loop
xor
cmp
jmp
call
lods
fwait
jmp
loope
lds
int3
ja
stc
sub
dec
aas
outs
push
mov
jno
and
popf
lock
mov
sbb
pop
jmp
lea
push
daa
sbb
test
popa
jmp
je
or
mov
pop
mov
neg
shl
test
mov
call
test
aaa
iret
cmp
jle
pop
fmulp
inc
shl
std
pop
sar
test
mov
or
call
aas
xchg
stos
(bad)
xchg
cmp
shl
adc
scas
cmps
mov
sbb
or
fdiv
jae
xchg
mov
dec
jmp
out
(bad)
addr16
icebp
sbb
das
push
in
jnp
pop
dec
push
mov
inc
pop
sub
push
aaa
movs
sbb
xchg
test
inc
fs
shr
add
loop
sbb
stc
jge
jle
loop
sub
pop
pop
nop
ret
hlt
mov
pop
call
sar
dec
sub
call
ds
cmp
hlt
loopne
in
sub
push
data16
pop
jb
in
movs
mov
in
or
inc
mov
xchg
clc
test
call
adc
jl
mov
adc
adc
mov
scas
xor
cmp
cmps
sbb
sbb
jecxz
xor
xchg
push
adc
adc
pop
ret
outs
dec
fwait
jmp
outs
xor
xor
jecxz
and
push
int3
out
pop
jnp
jmp
mov
sbb
stos
jbe
inc
dec
imul
push
rol
dec
retf
and
pushf
xchg
jle
das
adc
pop
aas
sbb
xchg
jbe
jle
xchg
dec
add
push
fsubr
push
push
scas
out
add
test
sub
cmps
repnz
in
pop
pop
xor
loope
adc
sub
mov
jmp
pop
std
mul
jne
mov
shr
mov
rcr
or
rol
push
rcr
push
js
and
mov
mov
add
mov
imul
in
and
test
(bad)
sbb
lds
xor
mov
inc
inc
push
fdiv
push
clc
(bad)
pusha
call
adc
lock
test
and
mov
call
mov
push
sbb
sub
add
ror
push
je
int
adc
mov
mov
iret
sub
out
fwait
outs
xor
push
push
xchg
aaa
movs
inc
fdivr
dec
adc
adc
xchg
mov
xor
dec
movs
mov
jo
mov
fcom
jmp
shl
and
and
arpl
int
xor
pusha
jmp
sub
mov
jb
mov
ins
outs
xchg
fnstenv
mov
mov
in
dec
pop
imul
lods
mov
(bad)
sbb
jae
fidiv
in
fisubr
cdq
repz
mov
test
pop
pusha
aad
jae
test
cmp
aad
popa
xchg
es
clc
arpl
mov
xor
push
pop
fstsw
cs
adc
mov
pushf
or
leave
arpl
push
push
push
mov
inc
or
mov
push
jg
es
cli
jg
inc
mov
mov
cmp
xlat
gs
and
shl
mov
push
sti
xchg
out
loope
dec
loopne
clc
pop
xor
out
inc
add
jecxz
jne
gs
outs
jmp
jle
(bad)
mov
pop
and
cli
sub
std
lods
cmps
ja
les
xor
out
ret
hlt
int
es
retf
rcr
fwait
sbb
mov
add
out
jno
enter
adc
hlt
pop
js
js
in
pop
cmp
add
cmps
js
mov
out
test
sub
sbb
pusha
ror
xchg
push
ja
fild
int
xchg
push
inc
pushw
mov
in
xchg
outs
je
test
lds
and
add
unpckhps
sbb
scas
pop
mov
scas
sbb
icebp
add
jecxz
out
cmp
mov
inc
imul
jnp
imul
dec
int
and
pop
mov
push
push
sub
inc
add
iret
fld
rcl
je
gs
sbb
loopne
cmp
jle
test
cmps
adc
fsubr
popf
jmp
xchg
fmul
enter
adc
xchg
ss
out
lea
jno
add
inc
test
or
and
repz
ret
cmps
sahf
pop
mov
adc
jno
xor
mov
mov
(bad)
pop
add
cli
dec
(bad)
sub
pop
mov
inc
loopne
and
inc
mov
mov
fmul
jne
imul
push
movs
fwait
xchg
scas
js
ror
clc
or
lods
inc
inc
mov
stos
cmps
jmp
loope
add
push
mov
repz
mov
gs
rcr
mov
sub
cmps
popa
fidivr
cmp
push
add
stos
(bad)
aad
rcr
aam
or
(bad)
(bad)
stc
in
adc
xchg
jle
jmp
inc
(bad)
pusha
pop
fsubr
push
ror
movs
popa
inc
in
push
inc
test
repz
push
dec
add
lahf
popa
(bad)
xor
aad
pop
sbb
test
into
mov
dec
test
sbb
std
xor
jecxz
bound
jb
aam
jno
mov
aam
enter
retf
iret
xor
div
adc
popa
shl
push
pop
jo
push
cmp
(bad)
loop
into
adc
sbb
mov
pusha
push
xlat
mov
xor
popa
imul
pop
dec
dec
sub
daa
push
mov
retf
cmp
adc
inc
sub
xor
int
dec
xchg
jmp
fs
pop
inc
add
ret
inc
inc
jle
xchg
bound
je
jns
xchg
rcl
dec
stos
(bad)
xlat
xor
push
xchg
cmp
out
ss
cs
push
test
mov
inc
adc
lods
pop
in
inc
les
cmp
setp
cmp
shr
pop
push
pop
and
xchg
(bad)
jl
lahf
cs
test
sbb
mov
xchg
sub
int3
rol
fiadd
sbb
(bad)
aas
push
loope
loopne
lods
stc
dec
pushf
aaa
xchg
xchg
mov
xchg
mov
movs
gs
mov
dec
dec
repnz
in
mov
xor
or
div
sub
sub
fidiv
pop
jo
mov
mov
pop
sar
and
sub
jo
fxch
mov
(bad)
repnz
bound
frstor
xor
fs
xor
pusha
clc
push
inc
fs
pinsrw
pop
sbb
rcl
mov
shr
std
cdq
pop
sub
in
imul
inc
fbstp
adc
and
dec
inc
pop
les
popf
fdiv
shl
into
retf
(bad)
(bad)
test
jl
xlat
ret
push
movs
mov
pop
xchg
cmp
xchg
jmp
xchg
loop
mov
cmps
fidivr
sbb
mov
aaa
xor
aaa
pushf
lods
inc
mov
int3
test
adc
fcom
push
ds
rcr
movs
xchg
(bad)
inc
jle
stc
test
aaa
jmp
mov
sbb
inc
rcr
and
aaa
loope
aam
adc
mov
inc
xchg
push
aam
push
adc
add
icebp
inc
test
push
add
jb
bound
popa
mov
cmp
and
rcl
ss
cmp
test
xchg
sbb
call
or
inc
fistp
mov
clc
test
pop
pop
cmp
mov
repnz
stos
push
add
mov
mov
(bad)
or
push
inc
mov
les
jge
vpaddusb
dec
mov
adc
(bad)
fdivr
sahf
jae
xor
push
pop
mov
pop
sbb
cs
mov
fdiv
(bad)
sbb
dec
ret
retf
fist
sub
test
sbb
mov
and
or
adc
iret
out
xor
in
cmp
pop
xor
setge
fwait
and
lods
adc
stos
pop
and
aas
test
out
scas
or
loopne
stos
jecxz
push
cdq
retf
mov
mov
mov
lahf
repnz
popf
addr16
pushf
gs
cwde
sbb
push
sub
and
test
mov
pop
call
jo
int
cmp
in
cld
xor
push
or
enter
stos
fsubr
jmp
fcomp
and
sar
test
and
jl
xchg
mov
mov
ins
icebp
bound
cmp
mov
sbb
fmul
fmul
adc
lds
sub
add
lahf
(bad)
dec
jbe
js
test
xchg
lods
inc
enter
mov
cmp
jecxz
mov
xchg
enter
dec
aad
dec
pop
mov
adc
sub
jns
add
aad
mov
stos
retf
sar
fldcw
ja
inc
loop
push
aaa
pop
sti
xchg
push
movs
test
icebp
bound
push
popa
lea
adc
inc
leave
mov
scas
add
push
add
pop
std
popf
jecxz
lods
and
mov
jmp
fmul
nop
popf
push
push
xor
jmp
cmp
stos
inc
das
outs
adc
dec
inc
pusha
(bad)
xor
fidivr
ss
je
imul
mov
popf
mov
xchg
int
push
adc
push
adc
stos
scas
push
loopne
lock
add
xchg
and
mov
jge
jmp
add
cmps
jl
mov
xchg
jecxz
mov
pop
mov
ins
les
mov
or
mov
inc
mov
and
sbb
aas
pop
out
sub
inc
inc
bound
loope
repz
mov
mov
add
lahf
scas
pop
jmp
aas
push
sbb
xor
stc
mov
pop
jmp
and
shl
es
outs
test
inc
stos
or
mov
cmp
mov
lods
inc
xchg
jl
inc
push
test
xor
mov
fisubr
jg
fcom
xor
call
xor
in
mov
pop
cmps
dec
jae
pop
fs
mov
outs
mov
mov
cmps
leave
(bad)
jo
sub
mov
xor
arpl
not
gs
retf
xchg
sbb
dec
call
cmc
dec
mov
out
retf
and
fmulp
imul
(bad)
mov
popa
and
or
jo
pop
mov
in
enter
test
push
ret
(bad)
imul
mov
in
scas
outs
push
cmps
ja
dec
mov
sub
in
xchg
dec
pop
cmp
fwait
pop
sbb
popa
stc
xor
lahf
addr16
inc
push
int
sbb
and
cmp
add
cmp
mov
icebp
out
jb
and
mov
imul
jb
in
cwde
outs
xor
fisttp
test
dec
xlat
fild
call
push
ficom
loop
add
lds
push
dec
and
adc
test
pop
pcmpgtb
into
retf
cmp
pop
or
sub
cdq
test
cmp
repnz
xor
push
loopne
sbb
cs
int
out
scas
je
cmc
mov
(bad)
test
jg
push
aad
ret
xchg
sub
(bad)
movs
loop
lahf
push
sbb
popf
mov
jne
dec
push
ret
and
adc
sti
or
pushf
jle
jae
call
(bad)
sti
mov
sub
dec
cwde
pop
sbb
and
nop
outs
icebp
pop
and
dec
adc
adc
out
pop
push
inc
ret
ret
and
dec
rol
jmp
xchg
leave
mov
sub
sahf
sahf
add
in
push
stos
ror
dec
sti
or
cmps
jae
test
dec
daa
push
cmp
shl
pushf
jne
ins
mov
in
jmp
fcom
jo
mov
movs
loop
stos
add
cmp
pop
jmp
pushf
and
sub
lock
mov
inc
ja
out
pop
retf
push
adc
and
imul
fld
inc
lock
xchg
sbb
inc
retf
pop
push
dec
xchg
vpsllw
xor
adc
xor
fwait
movlps
push
je
xchg
leave
and
ins
int3
push
xchg
adc
sbb
sub
loopne
lahf
sti
dec
fwait
(bad)
cmp
test
sub
arpl
mov
aam
out
nop
aad
es
xchg
or
outs
(bad)
sti
jecxz
sbb
inc
xlat
cmp
mov
add
retf
xor
ds
stos
out
fsub
sub
mov
xor
mov
sahf
add
lods
lahf
or
ret
and
mov
sub
and
scas
jno
arpl
je
imul
jno
push
rcr
add
mov
sub
mov
mov
lds
push
ins
cwde
sbb
xchg
aaa
pop
cld
into
push
push
inc
xchg
call
and
jle
pop
mov
jns
fwait
shr
pop
mov
in
rcr
out
xchg
push
jecxz
lock
ss
fadd
jne
repz
mov
push
jae
or
jo
mov
fnstcw
adc
jg
cmp
pop
cmp
mov
inc
bound
inc
ret
ret
scas
ror
xor
mov
fistp
jmp
ins
repnz
pop
xchg
jbe
adc
cli
cmp
test
(bad)
shl
div
cli
lods
cs
xchg
data16
and
xor
inc
inc
cmp
les
sbb
mov
xor
clc
in
enter
cmps
push
push
cdq
or
outs
inc
jno
adc
aam
jmp
jo
cdq
push
popa
xor
xchg
adc
xchg
mov
ins
dec
jne
hlt
out
movs
aam
jb
mov
cld
jmp
xor
fst
cmp
pop
pop
ret
ds
cmp
jae
push
sub
xchg
push
outs
push
inc
cs
push
mov
cmp
mov
retf
out
idiv
sbb
adc
sbb
mov
mov
cwde
cmp
cld
aas
adc
cmps
enter
adc
sti
pop
mov
push
xchg
mov
call
cmp
mov
lock
inc
pop
aam
and
pop
popa
fcmovnbe
sub
ss
ja
mov
jp
jle
dec
imul
push
loop
pop
mov
sub
stos
out
sub
push
mov
dec
pop
sbb
push
dec
outs
fiadd
fs
or
mov
cmp
add
pop
popa
loop
push
adc
(bad)
shl
xor
mov
fistp
leave
push
jp
push
ret
mov
sbb
inc
imul
or
cli
ss
ins
gs
rcr
cmp
push
mov
add
jl
lock
xor
ror
mov
mul
pop
in
loope
and
inc
nop
mov
popa
xchg
out
(bad)
jge
hlt
inc
pop
jge
pop
mov
jg
inc
sub
inc
int
and
(bad)
jnp
out
dec
in
pop
or
cmp
or
shr
push
dec
xor
inc
push
or
out
jae
push
dec
push
jge
or
(bad)
pusha
dec
cmp
cmp
pop
adc
sar
psubq
dec
ss
jge
das
lahf
hlt
ja
outs
xor
outs
xchg
sti
shr
cwde
cld
repnz
popa
add
scas
push
inc
out
mov
scas
dec
aam
mov
inc
sub
xor
mov
jae
sub
(bad)
fcmovbe
and
xchg
(bad)
dec
mov
repz
jb
mov
or
js
stos
call
outs
sub
jae
sbb
test
pop
pushf
scas
cmp
int
or
mov
into
push
sub
push
mov
dec
add
outs
cmp
sbb
(bad)
xchg
inc
(bad)
daa
xor
xchg
dec
sbb
stc
jo
xchg
pop
inc
push
inc
inc
sbb
retf
push
cmp
cmp
lock
inc
inc
fs
fidiv
dec
sbb
mov
add
mov
xchg
push
jl
xchg
fcomi
shr
xor
fmul
ins
sbb
and
mov
mov
(bad)
shr
push
and
shl
push
fiadd
pop
arpl
xchg
jo
lods
mov
(bad)
data16
lock
dec
adc
pop
sar
cmp
or
xchg
test
das
fiadd
mov
(bad)
enter
daa
jnp
pop
ret
in
gs
cmp
or
inc
imul
mov
imul
adc
ficom
sub
cmps
or
mov
retf
add
sar
xchg
push
repz
adc
fdivr
imul
inc
imul
(bad)
jecxz
ins
popf
sbb
xor
pop
mov
mov
pop
ja
cmp
xor
adc
inc
sub
pop
xchg
scas
imul
inc
aam
push
aaa
mov
mov
xlat
mov
loope
or
cs
(bad)
mov
push
sub
dec
leave
sti
fadd
test
aas
pop
mov
mov
sub
add
sbb
shr
pop
dec
mov
mov
(bad)
cmp
clc
pop
aaa
mov
sar
popf
(bad)
mov
push
pusha
cmp
mov
cmp
and
xchg
leave
mov
sahf
stc
into
lea
push
add
xchg
sahf
dec
in
inc
pop
retf
jnp
xchg
dec
(bad)
(bad)
cmp
rcl
mov
nop
loop
jns
fadd
push
lds
call
mov
mov
cld
(bad)
mov
out
dec
ins
push
int
jb
cmp
pop
xchg
pop
fld
and
into
adc
push
cwde
jmp
test
ror
mov
pop
jg
fcmovne
cs
sbb
les
daa
clc
ss
cmp
mov
mov
cld
cs
inc
cld
xor
arpl
(bad)
std
sbb
add
sbb
mov
repnz
jae
ins
aam
add
ret
lahf
xor
outs
outs
jns
scas
xchg
fsub
dec
mov
jae
xor
int
xor
cmp
lahf
(bad)
in
mov
sub
jmp
dec
and
sbb
sbb
sub
inc
adc
or
add
out
pop
lods
cmc
xchg
pushf
retf
xchg
pop
mov
dec
fwait
test
sbb
dec
lahf
(bad)
fcom
hlt
iret
int3
push
adc
ret
mov
repz
fmul
xor
mov
test
ret
test
ds
out
cmps
pop
xchg
xchg
mov
(bad)
sbb
sub
shl
gs
add
add
call
call
dec
cmp
sar
pop
enter
add
and
lods
loop
ins
inc
out
shl
retf
retf
ja
xchg
je
scas
push
aam
push
and
xchg
or
push
nop
dec
js
test
push
(bad)
adc
push
sub
repnz
mov
pop
shl
enter
lods
push
inc
jmp
sbb
ret
lahf
ins
jmp
lahf
xlat
adc
mov
xchg
leave
mov
hlt
fdivr
outs
inc
and
xor
(bad)
out
sbb
popa
xchg
(bad)
cmp
xchg
mov
inc
out
or
add
out
dec
inc
xchg
mov
inc
push
bound
(bad)
(bad)
mov
fstp
out
sub
outs
iret
sub
xor
jns
dec
and
or
(bad)
cmp
loopne
sbb
jl
mov
dec
or
pop
loope
cmp
int
out
adc
mov
retf
int3
int3
jb
xchg
fstp
je
ds
les
(bad)
jle
pop
pop
push
(bad)
cdq
mov
add
add
(bad)
or
inc
sbb
(bad)
addr16
dec
imul
adc
retf
jo
enter
mov
adc
pusha
cli
push
dec
repnz
and
(bad)
ds
outs
rcr
(bad)
out
mov
clc
addr16
cmp
fcmovne
push
add
mov
out
imul
inc
dec
push
add
xlat
inc
(bad)
pop
push
jb
imul
shl
test
jle
sbb
dec
das
(bad)
adc
inc
outs
add
hlt
cmp
cmp
mov
pushf
push
test
push
dec
ins
arpl
aas
or
daa
inc
sbb
cwde
aad
dec
mov
neg
jnp
dec
adc
out
mul
scas
cs
adc
or
xor
inc
jae
mov
hlt
xlat
int
mov
enter
mov
daa
ret
push
(bad)
xchg
xchg
cmp
dec
jb
ss
fwait
xchg
scas
sub
ins
pusha
bound
dec
inc
and
pop
pop
add
dec
mov
sub
movs
jp
mov
push
leave
(bad)
dec
mov
sub
or
stos
rcr
imul
cmp
call
mov
push
xor
sub
pusha
jp
xchg
mov
arpl
pop
aad
aam
adc
cs
adc
push
jbe
ret
loop
mov
out
jge
sub
mov
retf
xor
mov
retf
cwde
and
pop
mov
gs
jo
jb
push
dec
mov
mov
mov
jle
pop
bound
add
(bad)
cmp
in
out
out
jae
pop
and
mov
rcr
xchg
xchg
mov
cmp
pop
add
fst
cmp
inc
lods
daa
and
pop
int3
sub
inc
and
push
mov
pop
and
mov
(bad)
stos
adc
jmp
inc
(bad)
outs
or
dec
vmwrite
pop
arpl
push
scas
inc
imul
ja
icebp
and
jp
pop
push
add
mov
sub
aam
push
mov
sub
push
cli
movs
mov
movs
cmps
or
cwde
add
push
(bad)
pop
enter
sub
mov
add
enter
aas
scas
hlt
push
mov
push
pop
fucom
cmps
ins
mov
aam
ja
xor
shl
xchg
push
repz
ds
adc
push
in
adc
arpl
cmc
cwde
test
xchg
mov
outs
xor
mov
test
sbb
mov
push
fbstp
in
mov
push
push
fcmovnb
push
mov
push
inc
push
adc
sti
daa
js
jns
push
mov
sbb
aad
scas
or
fwait
test
mov
cli
mov
mov
xor
inc
push
or
shr
push
std
nop
mov
cdq
pushf
xchg
ja
imul
dec
les
call
jbe
leave
dec
inc
or
mov
fnstenv
pusha
dec
push
enter
inc
add
nop
cwde
adc
int
outs
sub
add
loopne
jo
xor
sar
pop
or
aaa
fs
adc
loopne
retf
movs
sti
fwait
mov
leave
dec
stos
dec
call
mov
jl
xor
add
aaa
sbb
cmps
xchg
push
daa
jbe
ins
mov
addr16
xor
outs
jmp
add
and
scas
push
adc
push
mov
(bad)
aad
push
mov
add
adc
call
fsubr
rol
es
sbb
mov
jae
stc
xchg
inc
loope
scas
outs
shr
inc
sbb
push
sbb
or
dec
mov
or
mov
push
rcr
fmul
pop
clc
mov
popf
addr16
xchg
loope
jnp
add
in
cmps
sbb
rol
pop
jnp
xor
xor
fwait
jmp
sub
movs
pop
imul
(bad)
call
cmp
test
sbb
stos
push
lock
mov
push
sbb
fimul
retf
or
dec
xor
(bad)
mov
mov
dec
mov
and
mov
xor
fcmovbe
dec
jb
jmp
xor
jp
inc
jge
mov
or
hlt
out
(bad)
ret
mov
sbb
arpl
xchg
call
cmc
adc
or
ss
sbb
js
sar
stc
mov
pop
inc
lock
clc
inc
dec
fbld
cmc
and
hlt
dec
sub
adc
sub
pop
push
in
stos
out
rol
cli
pop
dec
sbb
pop
and
js
popf
cdq
jg
sub
pusha
cs
hlt
pcmpgtb
mov
ins
outs
sub
sbb
lahf
(bad)
sbb
mov
cs
cli
or
fwait
pop
pop
mov
aad
and
retf
adc
in
xchg
fwait
bound
or
inc
mov
cdq
into
and
cdq
es
xchg
into
mov
dec
ins
movs
int
(bad)
std
jmp
out
push
pop
mov
test
xor
leave
(bad)
sub
adc
sbb
pop
xor
hlt
std
rcr
inc
outs
cld
cs
cmp
mov
jmp
movs
lods
add
mov
cmps
hlt
loopne
stos
mov
pushf
jae
retf
(bad)
sti
inc
xlat
add
shl
xchg
inc
mov
pop
mov
inc
cli
lea
gs
pop
push
popf
retf
push
sub
dec
cs
sbb
les
outs
sub
shl
stc
addr16
inc
mov
sub
sub
ins
ins
iret
xchg
scas
and
nop
sbb
mov
adc
fistp
add
add
push
cmp
mov
jg
pop
jp
cdq
jmp
mov
cs
inc
repnz
mov
jmp
(bad)
ficomp
sbb
push
fucom
mov
sub
adc
mov
je
ins
pop
stos
or
sub
sub
ins
or
sbb
out
xchg
pop
enter
ds
xchg
or
fiadd
lea
inc
icebp
outs
xor
push
rcl
push
ret
scas
rol
push
cli
lahf
nop
mov
lods
adc
shl
mov
shl
pop
ds
adc
(bad)
cmps
or
(bad)
(bad)
xchg
or
rol
ins
mov
stc
cld
and
icebp
mov
jge
and
ficom
jmp
outs
les
das
cli
movs
add
xchg
xchg
retf
pop
aas
xchg
pop
adc
adc
mov
mov
inc
push
add
je
add
in
retf
(bad)
xor
daa
mov
and
jno
mov
jg
dec
lds
ret
in
retf
jp
lahf
imul
fldenv
outs
aas
pop
pusha
pop
cdq
movs
ret
or
inc
je
ins
push
mov
jb
outs
mov
or
pop
sub
or
cdq
cdq
mov
xchg
add
sub
cmp
cmp
dec
imul
inc
pop
add
leave
aad
inc
mov
and
adc
(bad)
adc
cld
std
and
push
fisub
push
dec
inc
sub
cmps
test
cmp
movs
cmp
sub
mov
cmp
mov
iret
mov
or
bound
jp
jbe
shr
adc
ret
or
movs
add
push
xor
pusha
cmp
mov
jns
ret
rcl
enter
adc
pop
test
adc
repnz
or
push
jmp
int3
xchg
or
sbb
shl
mov
mov
cmps
pop
push
fs
mov
mov
jge
aas
addr16
mov
mov
xor
aam
loopne
js
call
pop
pop
mov
sub
jns
jge
add
cdq
ja
cmp
inc
icebp
call
adc
inc
mov
xor
mov
mov
mov
or
mov
into
int3
sbb
inc
mov
fwait
daa
inc
or
sub
fcom
fbld
push
push
adc
xchg
dec
out
mov
xlat
outs
stos
stos
sub
addr16
test
or
mov
mov
push
mov
out
jo
add
sbb
dec
sub
mov
push
stos
xchg
or
add
push
dec
inc
inc
(bad)
fcomip
xor
(bad)
dec
int3
mov
inc
lock
pop
push
in
pop
je
and
jmp
pop
mov
enter
mov
fs
sahf
(bad)
and
shl
in
je
bound
call
xor
adc
sub
cmp
fwait
push
pop
and
jnp
and
rcl
das
fsub
mov
mov
mov
jnp
mov
pop
aaa
rol
mov
arpl
test
mov
std
push
out
mov
stc
(bad)
mov
leave
jmp
push
and
std
arpl
add
ds
dec
push
icebp
cmp
mov
retf
aaa
mov
sub
nop
xchg
dec
sub
dec
fwait
mov
test
popf
add
ins
ins
inc
fbstp
sub
mov
add
sbb
pusha
das
cmovb
ficom
cmps
adc
(bad)
adc
cmps
jp
nop
xor
aaa
xor
loopne
jmp
push
sbb
out
pushf
mov
loope
sbb
sahf
xor
mov
sub
loop
pop
sti
push
fwait
pushf
jg
aad
mov
retf
outs
push
cmps
pop
push
add
add
(bad)
inc
pop
or
pushf
xor
in
pop
add
arpl
int
add
add
cmp
sub
ror
lock
inc
ret
scas
pop
sar
adc
push
call
mov
pop
stos
xor
clc
xchg
adc
sub
ror
dec
add
xor
xchg
out
pop
xchg
cmp
test
pusha
in
loope
cmps
nop
ds
mov
ds
ficom
cmp
clc
les
loop
cli
outs
mov
and
mov
jge
(bad)
pmulhuw
xchg
sub
sbb
movs
mov
or
fsubr
in
jne
mov
mov
pushf
push
sbb
sbb
adc
jl
test
mov
inc
adc
and
or
loope
fisttp
push
xchg
or
push
fstp
(bad)
xchg
repnz
mov
push
fsubr
sbb
pusha
outs
or
in
test
popa
mov
push
cmp
fwait
inc
int3
pop
pop
and
(bad)
or
daa
adc
adc
fidiv
lods
dec
push
push
xchg
pop
xor
psubw
popf
imul
dec
sub
xchg
lahf
push
stos
and
shl
jbe
es
shr
add
in
je
outs
pop
cmp
push
call
mov
mov
into
mov
sbb
nop
fidivr
nop
or
out
jbe
aad
out
sbb
mov
cwde
neg
xchg
xor
and
mov
add
cmps
jnp
cmps
or
ins
mov
ret
loope
push
stos
clc
push
jb
xchg
mov
arpl
(bad)
stos
jnp
mov
daa
push
clc
test
cs
fcmovnb
mov
adc
fsubr
ror
and
sub
nop
sahf
mov
test
nop
mov
adc
movlhps
retf
pop
aad
sti
arpl
(bad)
adc
popa
push
jmp
inc
imul
and
and
dec
pop
movs
xor
retf
ret
and
adc
inc
push
adc
test
push
mov
cmp
bt
test
cmp
cmp
rol
cmp
or
pop
call
pop
and
and
imul
mov
xchg
cmp
jmp
xchg
test
and
xchg
bound
cwde
lods
dec
into
mov
pusha
fisub
pop
xchg
cmc
xchg
mov
mov
xor
icebp
push
jne
fcom
lods
outs
test
or
mov
cdq
popf
popf
cs
shl
jnp
inc
mov
pop
(bad)
mov
or
sbb
adc
mov
mov
je
mov
(bad)
into
cdq
pop
mov
jmp
test
mov
call
push
pop
dec
cdq
fidiv
cmp
mov
cmps
nop
and
aad
pmullw
cmc
movs
mov
fwait
(bad)
cli
in
and
(bad)
movs
jbe
(bad)
js
inc
ins
mov
cmp
out
stos
shr
rol
add
cmp
icebp
into
cwde
cld
adc
sahf
cmp
ret
xor
jl
retf
ss
enter
pop
inc
aad
pop
jnp
fidiv
mov
fild
pop
add
popa
cmp
xor
pop
mov
sbb
loopne
gs
neg
lock
repnz
jg
ss
cdq
movs
xchg
and
mul
rol
cmc
cmps
push
cmp
sub
dec
ins
(bad)
mov
int
dec
int
das
je
movs
add
push
sub
fstp
ret
mov
sub
dec
jge
loop
call
jp
sub
pusha
lock
sub
jmp
cmp
mov
cwde
xchg
sbb
xchg
jmp
and
inc
mov
jns
jecxz
jbe
int
push
mov
jmp
int3
retf
rcl
inc
in
loope
ss
cmp
popf
jg
data16
jp
xor
int
mov
loop
sbb
sub
xchg
xchg
and
test
sbb
leave
aaa
xchg
jb
cmps
jmp
cmp
nop
cmps
xor
test
out
xlat
imul
xlat
fdivr
ficomp
(bad)
dec
and
ds
outs
pop
call
inc
or
xor
cmp
sahf
ja
iret
cmp
repz
push
cmps
xor
out
jge
popf
mov
nop
push
or
xor
nop
stos
(bad)
cdq
in
or
dec
mov
inc
stc
mov
add
imul
sbb
int3
test
mov
and
ins
push
(bad)
in
inc
xchg
lds
scas
bound
xor
or
pop
xchg
popa
mov
xchg
mov
shr
jbe
outs
jl
jl
jmp
mov
call
call
in
fsubr
sub
je
lds
test
es
icebp
pushf
mov
outs
arpl
(bad)
ja
pop
movs
inc
inc
ins
pop
fisubr
inc
mov
loopne
jmp
ss
jmp
shl
je
cmps
enter
das
sbb
cwde
add
shr
movs
nop
int3
sbb
add
stos
mov
push
retf
imul
push
sbb
test
cmps
shl
adc
mov
loopne
inc
test
inc
ins
rol
clc
shl
mov
inc
mov
sub
mov
add
mov
into
and
cwde
pushf
pusha
inc
pop
pop
sub
lods
push
sub
xchg
inc
mov
out
sbb
xchg
mov
idiv
jge
sub
mov
pop
icebp
bswap
push
in
jbe
add
ficomp
ret
fist
movs
and
sbb
mov
pop
xlat
xor
or
xor
das
lahf
adc
jle
fnstsw
loop
or
cmp
pop
cli
cdq
dec
mov
xor
push
cdq
lock
push
adc
pop
dec
lea
hlt
test
push
enter
dec
jmp
ds
ds
shr
scas
push
in
pop
shl
bound
or
sub
pop
stc
xor
pop
add
mov
ret
icebp
xlat
in
mov
adc
fwait
into
dec
adc
cmps
aam
out
or
enter
icebp
adc
push
int
inc
(bad)
sub
xlat
js
adc
rcr
fidiv
ins
(bad)
cli
cwde
in
lahf
xchg
or
adc
fndisi(8087
mov
(bad)
inc
push
(bad)
cmp
mov
xchg
stos
mov
addr16
cmps
mul
pop
xor
xchg
mov
(bad)
int3
xor
push
pushf
cmp
fidiv
add
or
mov
fmul
arpl
rol
push
int
cmp
(bad)
jecxz
adc
icebp
scas
pop
adc
pop
xor
test
out
stc
fcom
aad
outs
pop
mov
jb
adc
sar
jecxz
mov
push
sbb
inc
in
repz
jbe
mov
imul
mov
push
adc
push
add
(bad)
push
add
dec
mov
xlat
imul
xchg
test
push
add
shl
imul
jnp
mov
and
stos
lea
scas
adc
inc
cwde
mov
xor
pop
sbb
iret
jmp
div
cld
push
dec
inc
xchg
movs
ret
jmp
(bad)
stos
int
cld
loop
dec
mov
adc
dec
retf
frstor
shr
dec
call
lods
cwde
inc
fisubr
stos
pop
push
add
inc
sahf
mov
pop
add
jmp
jg
imul
mov
add
push
clc
cmps
in
pop
add
test
or
mov
imul
adc
test
pop
movs
fistp
jg
cmp
test
out
mov
adc
xor
dec
xchg
cmp
sub
push
xor
sub
out
or
into
fnstcw
bnd
out
dec
scas
dec
std
in
and
xor
loop
repnz
lods
cmp
xchg
lods
(bad)
jae
xor
dec
(bad)
loop
adc
xchg
pop
xchg
mov
js
jge
mov
(bad)
sub
dec
jp
sub
dec
pop
mov
fcom
into
rcr
ror
loopne
mov
mul
mov
pop
in
xchg
and
cmp
and
mov
movs
push
test
add
jne
adc
js
adc
sbb
pop
aam
jnp
outs
loop
and
xor
sbb
fld
mov
jecxz
xlat
es
xchg
clc
push
aad
lods
jbe
inc
or
dec
mov
mov
jmp
or
retf
pushf
jae
or
xor
mov
dec
sub
ins
mov
outs
or
cmp
add
mov
movs
mov
inc
and
test
mov
adc
int3
enter
jne
mov
mov
int3
cld
add
sar
sub
out
adc
call
mov
mov
jno
push
cdq
gs
mov
lods
dec
sti
push
leave
mov
mov
test
xor
xlat
cs
je
adc
jno
ins
xchg
and
jbe
ins
fidiv
pop
stos
and
mov
js
pop
push
adc
(bad)
push
pop
clc
repz
xchg
xor
loope
mov
xchg
(bad)
add
retf
cmps
sub
cmp
xchg
test
fwait
sub
push
cli
or
inc
adc
ins
jns
add
lahf
xchg
pop
outs
and
cmp
push
inc
jns
xor
je
mov
mov
nop
xchg
scas
inc
repz
(bad)
aad
adc
int
(bad)
cmp
xlat
xor
sub
imul
mov
cmp
cmps
pop
out
pusha
pop
mov
inc
jecxz
adc
je
sbb
sub
fisub
sub
mov
bound
and
jge
inc
add
add
aaa
cs
mov
inc
div
mov
or
adc
mov
fwait
lahf
xchg
(bad)
jb
cmp
cmp
ret
cmc
in
mov
std
push
push
sbb
fwait
xor
inc
mov
lods
nop
mov
mov
cmps
jmp
mov
push
cdq
fisttp
xor
xchg
stc
push
jbe
mov
outs
mov
cmp
std
stc
adc
xor
jns
xchg
mov
sbb
mov
mov
push
add
cmps
pop
enter
dec
stc
pop
jp
test
cmps
daa
and
test
cmp
sbb
repz
pop
mov
pop
fistp
pop
dec
dec
cmp
xchg
lods
out
push
and
cmps
pop
test
sbb
lods
mov
call
pop
jnp
popf
jl
pop
jbe
aam
or
lea
add
jecxz
das
push
mov
push
iret
cmp
push
(bad)
int
gs
and
xlat
int
and
lock
dec
add
push
sub
adc
pop
scas
sahf
jmp
(bad)
pop
pop
push
jno
dec
movs
stos
jle
int
mov
cmp
aam
xchg
sbb
sbb
mov
std
rol
out
loopne
xchg
outs
xchg
inc
arpl
sar
and
adc
sar
(bad)
hlt
addr16
sti
out
lahf
push
cmps
fcom
sahf
dec
pop
mov
cmps
imul
rcl
jne
popf
call
inc
pusha
jmp
mov
xor
pop
retf
mov
mov
arpl
xchg
or
ret
ds
retf
scas
shl
add
outs
sbb
je
fmulp
gs
out
adc
int3
aad
dec
(bad)
adc
(bad)
pop
sbb
sbb
(bad)
or
pop
call
jp
and
cs
add
cmps
loopne
repz
mov
icebp
and
je
shl
(bad)
cli
cmp
fnstenv
cmp
and
cmp
in
push
push
gs
call
sub
push
cmp
mov
xor
dec
add
push
add
dec
es
xchg
int3
je
inc
ret
xor
add
ja
cld
inc
pop
cwde
sahf
stos
jns
push
ficomp
mov
dec
pop
push
cld
pop
mov
(bad)
pop
cli
loopne
cs
and
mov
mov
js
lock
mov
sub
add
in
mov
cmp
or
fdivr
(bad)
and
sahf
cmp
fsub
add
jno
das
mov
scas
or
mov
lods
movs
inc
daa
xor
data16
cli
or
and
push
movs
or
int3
add
cwde
in
retf
in
les
ss
mov
pop
cld
add
add
pushw
test
outs
inc
es
sbb
aam
and
mov
sbb
mov
adc
mov
mov
jmp
xchg
mov
xchg
cmps
fisttp
lock
ins
fwait
cdq
(bad)
jg
ins
je
lods
and
int
jnp
jge
cmp
mov
inc
loop
scas
add
imul
lock
loope
stc
pop
std
dec
cmp
outs
mov
dec
popf
mov
sti
popf
std
jg
into
lea
and
stc
out
adc
pop
adc
jmp
shl
iret
loope
dec
mov
rcpps
cmp
add
push
fwait
lods
jmp
rol
lods
jbe
xchg
sbb
fwait
arpl
test
pop
es
fidivr
sub
sub
(bad)
inc
outs
sub
pop
dec
push
dec
imul
hlt
scas
fdivr
sbb
cmp
mov
jge
(bad)
mul
or
stos
jle
pop
fsubrp
call
add
xor
inc
pop
loop
(bad)
adc
mov
xor
xchg
sub
test
pop
xchg
add
mov
scas
loop
arpl
push
push
fisttp
jmp
xchg
mov
mov
push
call
in
xchg
add
and
cmp
in
jae
push
cmp
and
push
mov
adc
pop
xchg
adc
cli
ficom
cmps
xor
jge
cdq
cmp
sbb
rcl
mov
mov
cdq
sbb
jmp
popa
ds
mov
(bad)
movs
pop
jp
pop
cmps
jbe
dec
arpl
add
adc
dec
and
jg
(bad)
in
add
xchg
shl
aad
inc
and
and
jecxz
aad
xchg
(bad)
sbb
faddp
test
xlat
inc
cmc
xlat
adc
pop
push
push
jmp
jmp
jns
fdivr
dec
xor
outs
test
jmp
gs
jmp
sbb
ret
sbb
sbb
lods
dec
mov
(bad)
stc
leave
pop
mov
mov
mov
dec
rol
inc
cmp
mov
sub
adc
jmp
jae
ja
(bad)
push
jp
sub
jbe
fs
mov
mov
mov
rol
retf
add
scas
dec
jae
jmp
lods
shl
cmp
jne
lahf
adc
cmps
dec
repnz
int
shr
sub
in
data16
and
cmp
test
add
ret
mov
pop
inc
aas
ja
daa
aam
push
xchg
dec
push
sbb
popf
xlat
inc
jo
popf
add
cld
or
and
sbb
sub
fimul
or
out
jge
jg
mov
sub
jns
inc
enter
adc
aam
pop
xchg
cmp
scas
inc
pop
jmp
fyl2x
dec
test
jmp
iret
xchg
arpl
push
(bad)
fistp
xchg
mov
clc
nop
ins
daa
adc
jno
xchg
xor
cmp
rol
in
and
xor
fsubr
sbb
jecxz
xlat
xchg
adc
retf
mov
adc
pop
inc
add
dec
mov
or
inc
push
ror
sti
aas
mov
in
add
aam
cmp
push
pop
dec
imul
fnstcw
mov
test
push
mov
push
imul
in
shr
pop
into
mov
shr
mov
je
rcl
pusha
and
jbe
sbb
cmc
jb
addr16
pop
outs
aaa
push
xor
pop
xchg
das
xor
icebp
mov
sti
sar
and
add
jecxz
ror
int3
inc
or
ds
dec
sar
add
iret
mov
ins
or
into
add
loop
sub
ins
nop
adc
mov
fld
sub
cli
mov
sbb
enter
jnp
out
std
mov
shl
das
add
or
or
add
cmp
push
push
lods
clc
jo
push
(bad)
adc
stos
sub
mov
jecxz
pop
lds
adc
dec
cmp
stc
adc
aas
(bad)
out
(bad)
inc
rcl
add
data16
fisttp
mov
inc
stos
int
aas
dec
xor
pop
cmc
add
mov
push
cmp
test
cli
(bad)
mov
xor
loope
or
jg
xor
push
fist
inc
xor
mov
xchg
jns
into
xchg
lahf
xchg
jo
dec
or
dec
aaa
retf
cmp
int
cmp
push
mov
mov
out
pop
icebp
xor
xchg
clc
stos
mov
ja
sbb
sti
out
jp
loope
pop
pop
loope
adc
jmp
pop
or
mov
inc
cmc
xor
inc
xchg
retf
sub
dec
xor
inc
repnz
push
ret
inc
dec
movs
push
cmps
mov
fcomp
xor
jbe
fisubr
push
adc
pushf
xchg
nop
jmp
fmul
hlt
retf
sub
inc
repz
dec
push
lahf
(bad)
sbb
jnp
xchg
not
fnstenv
mov
pop
in
cdq
mov
gs
push
or
pop
loopne
in
mov
enter
sti
mov
push
push
icebp
aaa
jl
inc
cmp
dec
aad
test
add
push
pop
jg
cmp
jmp
sahf
dec
xor
mov
bound
loopne
out
arpl
call
cmp
cmps
js
or
cs
mov
mov
test
icebp
repz
mov
sbb
cmp
push
bound
sbb
and
adc
jg
dec
cmp
fistp
ins
push
cmp
jge
sbb
cmp
test
inc
sub
jmp
arpl
jne
mov
jb
push
xchg
gs
pop
mov
cmp
rcr
inc
and
and
xor
rol
clc
sbb
js
nop
cmps
jnp
not
test
in
inc
mov
int
bound
xor
inc
enter
mov
cmps
popf
add
int
lds
push
loop
(bad)
or
(bad)
fild
push
shl
add
(bad)
lods
jle
sub
std
pop
jmp
rcl
(bad)
ins
inc
inc
ins
jl
jns
sub
test
inc
idiv
jb
mov
out
adc
jecxz
fnstcw
cmp
adc
add
and
dec
aaa
add
dec
xor
xchg
mov
(bad)
pop
shl
dec
movs
fisub
xor
and
stc
mov
cmp
imul
test
fiadd
push
mov
ds
aad
icebp
ins
sub
lea
movs
(bad)
sbb
jmp
mov
push
not
shl
lahf
outs
in
xchg
push
push
int
cmp
adc
mov
add
mov
test
cmc
mov
int
stc
jns
cwde
scas
fist
dec
jecxz
push
cmc
adc
mov
dec
out
lahf
aas
mov
gs
xor
dec
sbb
bound
xor
mov
xor
fs
sub
cld
cdq
mov
mov
xchg
push
sub
call
inc
mov
imul
pop
and
xchg
mov
jg
mov
xchg
test
or
int3
test
xor
fcmovne
rol
mov
push
cdq
mov
stos
leave
push
imul
xor
dec
inc
bound
push
test
scas
sbb
or
nop
test
jne
pop
jle
out
pop
mov
fldcw
xlat
add
pop
pop
mov
ret
rcr
xor
sbb
test
stc
add
inc
shl
loop
jg
call
test
mov
cmc
in
pop
adc
mov
fistp
fwait
jg
adc
cdq
mov
out
mov
ret
das
stc
mov
data16
movs
int3
aas
cld
mov
popa
les
cmp
lods
(bad)
lods
cmps
mov
leave
test
jl
xchg
lahf
mov
jns
push
xchg
(bad)
in
inc
adc
pop
(bad)
aad
cmp
cld
test
xchg
mov
sti
in
frstor
inc
push
stos
add
and
popa
add
and
outs
nop
jg
xchg
sub
into
mov
jecxz
cmp
stc
mov
sti
or
add
mov
jmp
lahf
and
les
loopne
mov
out
ja
push
or
repz
test
and
inc
fcmovbe
jmp
inc
ds
sti
push
dec
aad
fidiv
jl
mov
imul
mov
arpl
pop
cmps
pop
fucomip
pusha
int3
xor
je
adc
xchg
aaa
mov
inc
push
bsf
mov
mov
sbb
test
dec
mov
or
add
xchg
(bad)
mov
push
mov
and
dec
mov
sub
pop
mov
and
dec
xor
les
cmps
imul
cmp
xor
test
mov
or
out
and
sbb
dec
les
int3
lock
and
mov
fist
push
popf
sbb
daa
pop
rcl
gs
lea
sbb
fisttp
fstp
push
sbb
push
bt
sub
cmp
mov
ins
mov
pushf
mov
mov
adc
or
mov
xor
lock
jmp
cdq
sub
repz
std
jbe
inc
xlat
cwde
shr
mov
mov
hlt
jl
adc
push
and
in
sub
rcl
add
loop
jmp
leave
mov
xor
or
and
xchg
jge
movs
and
int3
or
icebp
dec
mov
js
or
out
scas
mov
xor
inc
int3
call
repnz
cwde
jo
xchg
stos
mov
or
jmp
mov
mov
idiv
test
mov
cdq
or
mov
sbb
ins
xor
sub
gs
mov
aaa
bnd
push
fisub
jae
cmps
ret
cmps
mov
push
fsub
sti
sub
xor
dec
or
mov
cwde
cmc
cmps
inc
jecxz
lods
sub
ret
push
mov
jle
pop
fsub
jno
add
(bad)
mov
sahf
mov
fld
push
test
jnp
movntps
pop
data16
adc
sbb
lods
jle
sub
sub
pop
popf
icebp
mov
push
push
lods
push
popa
push
or
push
nop
repnz
out
loope
popf
and
pop
jecxz
(bad)
clc
mov
dec
mov
xor
push
add
stos
pop
push
xchg
jge
sub
arpl
lock
call
shl
icebp
mov
out
jno
sub
fwait
sub
jae
inc
sbb
pop
adc
sti
xchg
lods
loop
sar
mov
sub
aaa
(bad)
retf
inc
hlt
add
cli
pop
js
mov
shl
xlat
add
stos
les
mov
cs
dec
scas
pushf
pop
mov
dec
add
adc
add
ret
arpl
aad
stos
ror
and
loope
jbe
xor
test
enter
sbb
shl
or
jno
addr16
cwde
adc
adc
loopne
mov
and
pop
stos
loopne
jge
xchg
mov
retf
into
mov
call
mov
out
pushf
int
jns
mov
stc
adc
pop
sbb
imul
pop
push
pop
add
fst
push
jg
movs
mov
xor
dec
shr
pop
and
push
lock
cwde
xchg
inc
sub
call
cwde
shr
clc
push
enter
outs
loop
pop
push
mov
cmp
pop
adc
fmul
cli
data16
xchg
push
jecxz
movs
pop
scas
sbb
(bad)
retf
jge
inc
test
sub
xchg
test
aad
(bad)
(bad)
out
mov
inc
cmp
jg
popf
bound
dec
mov
retf
(bad)
arpl
out
dec
sbb
cmp
cmp
sbb
sbb
cs
(bad)
fadd
neg
arpl
outs
lahf
sbb
sbb
bnd
xchg
sub
mov
shl
sbb
pop
in
shr
ds
(bad)
enter
lea
movs
in
into
cmp
or
jp
fcmovu
iret
in
sub
out
stos
shl
(bad)
mov
mov
or
and
arpl
dec
in
xchg
lahf
inc
test
push
push
mov
ja
ret
push
daa
add
dec
cmp
sub
and
add
aas
je
xor
int
test
shl
push
xlat
sub
mov
dec
cmp
lods
sub
xlat
adc
movs
push
xchg
push
out
retf
adc
jae
push
adc
mov
clc
in
dec
xlat
add
call
loopne
into
push
mov
fwait
mov
mov
mov
dec
dec
in
and
aaa
cmp
in
js
sub
inc
pop
pop
into
into
imul
enter
xor
int3
xchg
(bad)
call
test
shr
rcl
and
jnp
mov
adc
add
das
outs
add
ffree
xor
xor
mov
popf
ds
add
stos
mov
add
cmc
inc
sbb
push
sub
push
sbb
retf
cmps
dec
xchg
pop
cli
sbb
(bad)
and
xchg
aad
mov
push
sub
push
out
les
ins
or
repz
out
loopne
sub
outs
test
sub
push
neg
mov
loope
add
sub
pop
icebp
ds
imul
jmp
call
movs
jmp
push
fwait
imul
cli
fdivr
jmp
push
arpl
cmp
fstp
int3
dec
add
js
outs
popa
xor
je
sub
cmp
daa
push
and
mov
cmp
pop
retf
popa
xor
mov
xchg
outs
jo
repz
fstp
pop
std
and
pop
fiadd
ja
xlat
cdq
jnp
dec
loopne
xor
pushf
in
repnz
aaa
test
in
(bad)
fisub
cmp
aaa
jnp
sbb
or
fcomp
sbb
setg
dec
xor
push
jl
es
imul
sub
dec
loopne
push
jecxz
pop
pop
cmp
xchg
fmul
stos
add
dec
jge
out
xor
cmc
dec
xor
ror
mov
add
add
shl
cld
mov
call
ret
pop
mov
lods
stos
adc
inc
xchg
aaa
xchg
cmp
ret
adc
sub
cmp
imul
xchg
jnp
ds
neg
cmps
lahf
test
sbb
mov
jno
cmp
mov
loop
in
(bad)
jge
xor
cmp
scas
jmp
call
push
push
pop
sahf
and
push
or
jp
add
mov
fisubr
jns
nop
out
nop
mov
dec
neg
cmp
and
outs
push
jnp
in
or
push
das
xor
push
pop
(bad)
cli
ds
sub
sbb
daa
mov
repz
fstp
pop
adc
cmp
test
and
ficom
je
adc
cmp
nop
sub
inc
cmp
pop
xchg
dec
push
adc
pusha
pop
xchg
and
es
xchg
push
cmc
sbb
sub
sbb
xchg
mov
xor
xchg
adc
and
xchg
out
mov
or
dec
xchg
aad
inc
out
cs
mov
sbb
push
cmp
inc
fidivr
mov
loopne
dec
inc
out
lahf
fisttp
sub
(bad)
movs
add
xchg
int3
daa
mov
mov
aas
(bad)
adc
aaa
cld
jmp
adc
cmp
mov
movs
xor
xor
repnz
sbb
aad
pop
add
shl
arpl
ins
pop
dec
outs
repnz
mov
rcr
inc
sub
movs
pop
mov
rol
iret
in
or
lods
mov
pop
sahf
pushf
inc
ins
pushf
xchg
cmp
jmp
cmp
ins
icebp
mov
ins
shl
rol
popa
imul
outs
ds
dec
sub
adc
lods
xchg
(bad)
subps
and
test
add
jmp
and
mov
aad
and
push
call
mov
movs
ins
cld
mov
je
bound
sub
sbb
push
test
add
cld
and
xchg
sbb
jns
jp
mov
lea
mov
bound
jns
inc
or
nop
test
and
cmp
stos
mov
movs
frstor
pop
shl
in
fadd
mov
(bad)
out
scas
push
cmp
jb
test
test
in
xor
mov
ins
imul
mov
leave
sub
das
shl
dec
frstor
inc
push
xchg
retf
pusha
je
pop
out
xor
add
repnz
sbb
dec
adc
shl
xor
and
(bad)
shl
int
pop
sar
mov
shl
(bad)
mov
sbb
jg
push
sbb
or
push
pop
lahf
pushf
ss
xchg
outs
jmp
sbb
or
fst
jmp
jo
loop
push
pusha
jmp
xchg
xor
mov
dec
mov
mov
clc
rol
jbe
xchg
loope
jp
mov
fs
sub
xchg
push
push
mov
test
and
sub
bound
or
cmp
add
les
add
nop
movs
or
adc
sub
int
push
lock
es
bound
dec
mov
into
mov
push
sbb
sbb
(bad)
sbb
fisubr
cmp
sub
xchg
mov
ins
jo
mov
xchg
test
inc
stos
and
jmp
aaa
je
pushf
xchg
rol
les
fs
cmps
pusha
jge
xor
pop
ds
fistp
mov
xchg
popa
mov
movs
xchg
les
add
in
xchg
fsubr
scas
xor
leave
jg
xor
das
adc
and
aad
sar
scas
mov
imul
and
mov
dec
test
jmp
sbb
cmp
sub
inc
out
sub
or
inc
out
jno
hlt
xchg
aas
cmps
lahf
mov
(bad)
loope
push
cmps
ficom
adc
jne
mov
cmp
xchg
sbb
je
and
js
and
or
push
aad
adc
gs
ror
in
jns
lods
xchg
cmps
push
(bad)
std
add
cmp
mov
scas
mov
in
mov
xor
outs
pushf
cmp
enter
pop
fs
sub
mov
mov
mov
mov
push
(bad)
int
and
out
xchg
mov
test
ret
xchg
cmp
lods
add
or
cmp
(bad)
jmp
cmp
ret
nop
mov
das
addr16
rcl
mov
fdiv
inc
or
xchg
cmp
test
mov
in
xlat
lods
hlt
mov
mov
cld
push
not
out
cmp
sbb
sbb
lods
push
test
inc
inc
jg
xchg
call
(bad)
outs
cld
sahf
push
cwde
scas
ror
fsub
mov
xchg
mov
xchg
push
lds
in
ror
adc
inc
inc
mov
push
rol
in
cmp
adc
imul
retf
std
in
sahf
mov
cli
sub
sbb
fadd
rcl
mov
in
mov
xchg
mov
adc
add
push
das
lods
jge
sahf
xchg
add
or
xchg
bound
(bad)
cmp
sub
sar
fldcw
push
add
and
push
add
ror
cwde
lds
mov
pop
jmp
cmp
xor
add
cmp
and
cmp
in
popf
push
xor
mov
sub
mov
pop
pop
mov
mov
movs
sub
dec
outs
enter
dec
or
adc
xor
adc
test
pop
or
fxam
cli
iret
and
mov
outs
cmp
mov
jmp
outs
jl
stos
jbe
sbb
loope
loop
std
cmp
mov
jae
xor
push
cmp
test
movs
ret
mov
ror
lahf
je
stc
xchg
cld
jno
mov
scas
fstp
dec
xor
jmp
imul
inc
mov
and
mov
(bad)
ficomp
push
sub
inc
cmps
push
out
adc
cmp
es
fabs
sub
cs
push
pop
sbb
jae
xor
out
push
retf
enter
mov
ds
in
hlt
pop
add
je
dec
and
out
dec
sbb
fistp
sbb
stos
xchg
sbb
mov
xor
cdq
and
das
in
dec
xchg
sbb
leave
(bad)
call
push
xchg
aam
stos
stc
adc
pop
sub
add
mov
inc
adc
adc
ds
pop
cli
in
enter
das
jnp
frstor
pop
and
outs
stos
pop
bound
bound
retf
cdq
sbb
imul
clc
adc
adc
out
add
fsubr
daa
mov
ror
hlt
pop
aam
pop
or
and
stc
jno
push
add
sub
dec
push
mov
jecxz
hlt
in
push
push
pop
mov
pop
mov
inc
push
rol
jecxz
cs
mov
jmp
pop
fcomp
pop
dec
retf
inc
outs
inc
loope
pop
and
jb
xor
dec
jecxz
outs
push
adc
ror
pop
mov
and
fmul
ins
in
jne
xor
adc
repnz
ret
and
jmp
cmps
adc
rcr
ins
imul
adc
(bad)
xchg
ss
sbb
or
xchg
or
clc
inc
sub
add
hlt
fs
ror
jle
xchg
push
sbb
daa
sub
fs
or
xor
pop
mov
ficom
stos
int3
addr16
push
ds
or
sbb
stos
mov
sbb
loop
push
scas
fwait
(bad)
daa
push
cld
ja
pop
cmc
jbe
dec
popa
adc
ffree
and
push
cmp
(bad)
pop
mov
loop
push
jp
sub
adc
jbe
and
adc
cmp
jns
xchg
mov
aam
inc
pop
xor
addr16
cmp
mov
arpl
dec
and
mov
retf
idiv
outs
mov
mov
mov
iret
xor
mov
jb
enter
dec
scas
xor
div
fcmove
rcl
fs
jp
mov
xchg
sub
sti
push
inc
adc
mov
mov
xchg
xor
inc
enter
xchg
jmp
clc
pop
bound
pop
sbb
xchg
adc
shr
mov
dec
in
icebp
xchg
int3
sbb
cmp
test
pop
mov
pop
test
dec
inc
(bad)
jmp
sub
scas
aam
jns
sbb
enter
(bad)
ret
loop
mov
push
gs
fistp
adc
xchg
int
pushf
mov
jnp
sbb
dec
adc
mov
inc
jns
inc
sub
xchg
hlt
mov
movs
dec
or
outs
mov
cwde
iret
int3
xchg
sbb
mov
cwde
push
add
call
push
scas
inc
cs
in
pop
jmp
mov
cmp
cmp
int
inc
push
push
jae
mov
dec
pop
es
lods
xchg
mov
push
icebp
test
jecxz
pop
add
add
(bad)
mov
or
in
fwait
nop
mov
jecxz
or
cwde
fst
cdq
imul
push
aas
mov
call
shl
inc
pop
shl
or
test
push
pop
push
cmc
xor
lahf
jae
push
je
std
(bad)
cmp
push
rcr
dec
aas
xor
rol
iret
out
(bad)
lods
push
mov
mov
leave
add
jmp
int3
xchg
ud2
cdq
std
ins
adc
inc
outs
retf
ds
loop
(bad)
fstp
mov
cs
mov
inc
cmps
mov
push
dec
sub
je
or
icebp
ret
jle
ret
aas
mov
xor
ror
mov
sbb
sub
hlt
sub
(bad)
sahf
mov
or
les
dec
push
cmp
jmp
mov
(bad)
lahf
adc
fild
push
inc
pop
popa
aaa
sub
stos
iret
cmps
cmp
mov
fwait
mov
lods
inc
movs
pop
daa
dec
push
out
in
pop
pop
pop
je
mov
movs
test
fmul
sbb
mov
push
adc
pop
jbe
cmp
push
shl
scas
cmp
lods
sbb
xchg
xchg
mov
sbb
stos
sub
jp
xchg
sub
mov
mov
add
scas
mov
cmp
mov
mov
into
les
push
xor
push
jne
aas
and
jg
out
inc
in
mov
js
sbb
pop
sbb
pop
mov
jns
mov
aad
movs
xor
test
movs
add
xchg
fst
out
stc
push
or
mov
add
aam
ret
hlt
mov
mov
mov
sub
inc
std
loop
fiadd
sub
(bad)
sbb
xor
test
inc
stos
popf
sahf
ret
xchg
imul
cdq
in
fcmovnb
scas
sbb
and
cmp
call
add
xor
clc
iret
ret
add
jl
jne
lods
scas
jns
adc
nop
movs
mov
aas
into
xchg
cmps
mov
push
fwait
jmp
or
pop
aaa
push
pop
(bad)
mov
inc
add
daa
add
repnz
mov
xor
and
movs
sbb
xchg
xchg
sub
out
repnz
and
mov
or
daa
test
xor
mov
inc
cmp
fcom
out
sbb
dec
inc
adc
(bad)
mov
inc
jae
xchg
aaa
sbb
pop
fs
xchg
iret
mov
pop
div
shr
(bad)
add
lock
mov
push
mov
mov
mov
out
add
push
jne
scas
sub
and
jg
inc
and
push
fldcw
mov
dec
dec
adc
or
or
jns
movs
and
repz
pusha
loope
xchg
jno
(bad)
imul
jg
outs
xor
out
cmp
xor
push
stc
retf
pop
das
or
adc
and
sub
push
test
icebp
arpl
pop
shl
fild
enter
jmp
(bad)
div
lds
movs
fs
adc
add
cmp
retf
dec
ja
ret
jae
xchg
sbb
fwait
push
push
pop
jmp
cmp
fldcw
stc
and
dec
xchg
movs
cmp
lods
jne
je
in
fnstsw
cmp
sar
cmp
cmp
scas
and
jecxz
mov
push
adc
mov
xchg
push
jno
adc
gs
push
mov
pop
ins
sbb
dec
inc
cmp
dec
in
div
loop
hlt
clc
pop
and
outs
lock
jns
push
mov
sbb
inc
mov
xchg
sub
push
scas
sub
fld
stos
mov
daa
je
leave
cmps
jle
sub
repz
loop
dec
std
outs
fstp
js
rol
lods
loopne
mov
sub
iret
jae
sbb
ins
mov
into
(bad)
sub
inc
xchg
sbb
addr16
sbb
retf
cmp
and
mov
ins
jl
ret
scas
adc
adc
sub
lahf
adc
add
mov
js
jmp
and
jmp
call
(bad)
cwde
test
fs
retf
aaa
stos
xor
sbb
mov
jmp
bound
loopne
or
sub
dec
pop
dec
gs
pop
shl
retf
xchg
out
adc
fld
lods
sbb
data16
jle
cli
repz
pushw
pop
add
sub
adc
nop
inc
add
stos
jae
pushf
outs
scas
div
cli
sub
mov
xchg
loop
adc
mov
and
fstp
sub
arpl
add
cli
(bad)
(bad)
cmps
(bad)
mov
test
enter
mov
rol
pop
xchg
cmps
xchg
cwde
sti
cmp
adc
mov
fcom
pop
sub
mov
dec
push
push
add
in
inc
push
(bad)
jge
hlt
sub
pop
ret
jnp
xchg
adc
data16
daa
or
and
inc
fwait
aad
lds
cmp
xlat
jmp
out
(bad)
cdq
mov
mov
shr
jae
mov
push
xchg
push
repnz
cmp
mov
clc
call
pop
cld
jecxz
pop
mov
cmp
shr
sar
and
cmp
std
repnz
xor
and
ins
in
sub
mov
adc
sbb
pop
cmc
stos
jbe
pushf
pushf
sbb
stos
xchg
retf
add
mov
cwde
adc
push
sbb
jl
push
imul
gs
lea
push
leave
shl
xchg
ins
dec
mov
call
(bad)
and
or
pusha
add
or
div
mov
cmps
xor
fmul
inc
sub
or
push
xor
dec
(bad)
stc
lds
dec
sbb
mov
jmp
mov
mov
and
push
es
mov
lds
xor
mov
or
push
repz
fnsave
pop
jb
test
adc
sub
pop
pop
mov
inc
pop
mov
xchg
lahf
dec
popa
cdq
enter
push
es
dec
mov
stos
dec
mov
add
in
mov
mov
jns
mov
inc
unpckhps
and
add
inc
sbb
xor
cli
cmps
jecxz
and
and
jb
jmp
cmp
mov
sahf
sti
loope
ror
retf
sub
mov
cmp
adc
pop
dec
ret
inc
jg
dec
xchg
int
adc
dec
fiadd
jle
xor
cmp
xchg
les
sbb
sub
mov
mov
test
jae
aas
movs
fsubr
inc
call
mov
xchg
bnd
retf
fistp
sub
and
pop
xchg
cmc
in
lock
loope
les
sub
pop
mov
and
aas
adc
lock
pop
les
pop
cdq
lock
iret
adc
ss
rol
xchg
lea
dec
aad
pushf
ror
mov
adc
mov
out
jp
(bad)
call
mov
and
lea
xchg
nop
fs
fs
dec
mov
outs
xor
(bad)
ds
dec
mov
dec
xchg
mov
adc
(bad)
aam
repnz
jmp
xlat
cmp
jmp
stos
adc
push
or
std
pop
fisub
mov
stos
mov
cdq
mov
or
inc
dec
xchg
or
movs
dec
hlt
sti
pop
popf
std
xor
sub
aam
xchg
ja
push
hlt
push
test
pop
out
xlat
dec
push
mov
sbb
fisubr
sbb
out
dec
and
xor
jb
enter
mov
xchg
std
xor
cdq
jmp
and
sub
add
ss
imul
(bad)
mov
inc
ds
and
push
jo
mov
adc
jge
push
jno
pop
sbb
std
pop
mov
fs
push
push
mov
fisubr
jge
aas
add
cmp
and
xor
cmp
in
loop
dec
add
or
adc
ins
sub
pushf
enter
(bad)
xchg
jae
xchg
gs
or
fimul
sbb
dec
xchg
adc
fisttp
cmps
xor
movs
jne
cmps
sub
ror
stc
jmp
pop
sbb
icebp
(bad)
out
xchg
call
inc
inc
add
inc
mov
jecxz
movs
je
inc
push
and
mov
mov
int
jo
mov
aam
lds
jecxz
xor
push
sub
adc
jge
push
int
adc
clc
shr
sbb
or
ss
bound
dec
sbb
push
mov
push
push
addr16
push
(bad)
cdq
stos
fidiv
pop
loop
or
fsub
arpl
cmc
ss
outs
inc
mov
addr16
sub
(bad)
cmps
cmps
mov
ds
cli
out
xchg
pop
jno
dec
pop
adc
jecxz
push
jnp
jle
in
pop
popa
xchg
test
inc
movs
jecxz
(bad)
mov
fdiv
test
dec
loopne
lds
out
int3
push
pop
inc
sub
loopne
push
ins
pop
enter
test
arpl
mov
push
sub
push
(bad)
dec
cmp
dec
in
aam
pop
sbb
std
aad
sbb
dec
pop
pusha
cmp
mov
adc
sub
sub
pop
mov
pusha
lock
sub
jg
pop
adc
cmp
or
movs
dec
test
jno
cmp
and
sub
add
maskmovq
jo
stos
pop
sbb
cmps
jle
push
sub
push
and
div
mov
out
sbb
mov
pop
ss
push
into
xor
mov
pop
sbb
retf
daa
(bad)
fdivp
adc
call
mov
and
jmp
imul
mov
sbb
std
mov
cmps
ins
and
mov
ret
xor
xor
push
imul
stos
push
or
call
mov
or
not
mov
fmul
jbe
sub
int3
and
xchg
xor
pop
push
sub
jns
ficomp
pop
addr16
pop
jp
mov
mov
jp
pop
push
dec
mov
cmp
inc
sub
mov
inc
ficom
hlt
pusha
std
pushf
loop
sub
add
shl
cmp
xor
jae
cmp
dec
cmp
push
movs
add
and
dec
push
jno
std
out
popa
or
dec
cmp
mov
pop
ret
dec
cmps
out
and
jno
fisubr
dec
repz
mov
aad
ja
or
sub
mov
shl
mov
into
mov
jl
les
fst
jae
xor
(bad)
ficom
imul
push
add
push
lahf
movs
std
pop
push
mov
sub
cmp
add
mov
inc
in
fs
sub
sbb
sub
cwde
cmp
mov
and
fwait
inc
(bad)
cmp
pop
sub
cmp
mov
ret
mov
scas
clc
add
(bad)
xchg
cmp
dec
push
outs
sub
pop
sub
mov
lock
out
lods
(bad)
mov
fs
(bad)
adc
jmp
shl
outs
xchg
movs
or
adc
bts
cmp
cwde
mov
pushf
xor
add
cmps
xchg
cmp
pushfw
ss
mov
mov
ins
inc
jo
xlat
cmp
jle
mov
xchg
or
icebp
inc
retf
int3
sbb
xchg
neg
fisttp
xchg
jmp
mov
pop
mov
fcomp
cmp
pop
sub
lock
sti
les
lods
cdq
rol
adc
int3
gs
sbb
pushf
xchg
sbb
mov
clc
pop
and
js
fisubr
mov
outs
add
lock
jns
cmp
mov
out
inc
mov
je
push
cmps
sbb
fild
ins
mov
mov
mov
and
test
inc
ja
push
hlt
cmp
push
xor
mov
lods
sbb
lahf
add
not
and
mov
fcomp
dec
and
daa
jne
pushf
call
cmp
xor
push
add
sub
mov
mov
shl
mov
mov
pop
(bad)
stos
mov
adc
mov
inc
mov
stos
shl
dec
jmp
stc
inc
xlat
mov
xchg
jecxz
sub
pop
int3
sub
pusha
dec
push
icebp
push
jp
pop
inc
je
add
cli
cmp
cmp
ins
dec
push
jnp
(bad)
jle
pop
jle
inc
xor
cwde
pop
sub
pop
jge
je
pop
xor
or
xchg
imul
ret
cdq
cwde
cld
inc
xor
test
and
xchg
push
sti
inc
add
inc
arpl
push
int3
xchg
fdiv
(bad)
dec
movs
ret
out
jne
or
shl
popa
adc
arpl
aad
xchg
dec
shl
fldenv
cld
fistp
and
and
fdivr
jae
or
push
lea
push
test
cmp
adc
adc
adc
ins
mov
imul
lods
in
fdivr
jle
rcr
xchg
icebp
inc
cmps
xchg
sbb
add
imul
cmps
sbb
xlat
push
push
(bad)
cmp
cmp
iret
dec
mov
xchg
cmc
(bad)
mov
and
adc
sbb
push
pop
mov
clc
imul
movs
lods
jnp
mov
inc
mov
repnz
push
and
xchg
pcmpeqw
leave
push
push
scas
and
dec
cmp
inc
adc
mov
xlat
rol
jnp
retf
xor
push
lahf
mov
cmp
hlt
push
lea
inc
mov
shr
out
sub
jns
and
push
inc
dec
ja
pop
xor
bswap
popa
xchg
add
cmp
int
pusha
(bad)
mov
stos
pop
xor
stos
ins
loop
xor
ffree
sbb
add
xchg
stc
push
test
sub
sub
out
fiadd
inc
aas
dec
push
sbb
aas
(bad)
cwde
popa
jge
jnp
loopne
jno
xor
pop
into
and
enter
inc
mov
cmp
mov
repz
dec
call
or
mov
retf
out
jg
inc
push
fld
(bad)
fwait
cmp
mov
sbb
sahf
xchg
addr16
(bad)
adc
icebp
mov
jne
rol
std
and
pop
lock
inc
lock
mov
out
xor
push
xor
sub
jmp
das
pop
mov
add
fs
das
int3
mov
and
sbb
adc
dec
mov
xchg
bound
int
push
mov
dec
mov
sti
mov
push
mov
cmps
dec
fistp
cmp
push
xchg
mov
dec
hlt
push
mov
jg
cli
ja
lods
jg
and
cmps
fidiv
les
repz
jae
xchg
push
aaa
sbb
mov
mov
outs
pushf
mov
mov
inc
clc
xor
inc
out
jl
xchg
mov
xor
movs
push
int3
and
jp
outs
ins
and
xchg
mov
pop
imul
mov
or
pop
int3
xor
mov
push
mov
mov
jno
lods
xor
sub
pop
sbb
(bad)
mov
mov
xchg
jne
fcom
adc
repnz
mov
mov
mov
inc
xor
in
(bad)
cmp
lsl
fiadd
mov
pop
lods
scas
add
jg
inc
out
add
cli
ja
bound
mov
jne
shr
mov
cmp
xchg
dec
xchg
shl
daa
repz
dec
inc
sti
add
xchg
add
xchg
dec
mov
fstp
icebp
and
test
sub
pop
frstor
cmps
fcomp
std
jle
hlt
bound
(bad)
xor
mov
adc
out
mov
mov
pop
mov
out
sbb
shl
lods
pop
mov
aaa
cmp
jb
jns
sub
test
adc
ret
and
lahf
inc
and
mov
in
xor
fistp
dec
mov
popf
jg
push
fs
add
repz
(bad)
leave
mov
or
mov
add
ret
cs
in
and
xchg
fsubr
pop
rcr
mov
out
mov
xlat
mov
adc
and
jb
retf
push
xchg
and
loope
dec
xchg
(bad)
scas
mov
mov
popf
inc
bound
inc
idiv
pop
aad
inc
retf
sbb
shr
in
cmp
sbb
sub
xchg
aad
(bad)
loope
xor
cmp
js
jg
xchg
jp
cmps
xor
push
or
fiadd
mov
jmp
daa
hlt
push
sub
adc
clc
popf
xor
adc
adc
lea
mov
sbb
xchg
mov
mov
dec
sti
leave
fwait
test
xor
aad
push
call
shl
(bad)
adc
fidivr
sbb
xor
mov
add
xchg
daa
adc
popf
repz
repz
repz
test
mov
ret
and
test
lods
jb
mov
jge
mov
mov
das
mov
clc
cmp
fisub
std
xchg
mov
cdq
push
inc
xchg
bound
call
cmp
inc
sub
adc
or
arpl
ret
mov
and
adc
loopne
call
inc
in
pop
ins
out
rcl
mov
sti
cdq
mov
iret
pop
cmp
cld
mov
xor
push
dec
jbe
inc
ja
mov
cdq
pop
mov
add
rcr
push
outs
cs
xor
fdivrp
mov
xor
mov
lds
ret
pop
call
mov
sar
ja
xchg
xchg
std
mov
ja
stc
jnp
imul
in
bound
cs
aaa
imul
popf
and
aad
aaa
(bad)
ins
xchg
xlat
arpl
movs
sub
jae
jmp
fmul
fidiv
push
mul
xchg
hlt
ja
enter
inc
push
or
sub
stos
or
sbb
sub
icebp
mov
fyl2x
repz
cmp
xchg
mov
push
ret
cmp
mov
jmp
mov
mov
pop
adc
loopne
(bad)
or
pushf
bound
adc
rcl
(bad)
aad
(bad)
pop
jp
sbb
in
add
aad
mov
ja
in
(bad)
repnz
pop
js
and
sub
xchg
pushf
jg
push
inc
push
add
adc
cld
mov
arpl
pop
push
adc
(bad)
mov
xchg
or
mov
push
jle
leave
repz
jmp
mov
mov
shl
cmp
and
fst
dec
sbb
jae
pop
mov
cmp
pop
mov
outs
xor
jbe
aaa
sahf
(bad)
ins
rcr
jae
lods
rcr
ror
in
mov
es
int
jbe
cli
jb
fxch
xor
push
mov
adc
xchg
xchg
cmps
mov
mov
jmp
sbb
xor
sub
aaa
ds
jmp
test
fcom
pop
jl
cld
push
outs
leave
pop
loope
lods
mov
ret
mov
xchg
lods
in
dec
dec
or
and
gs
ins
xchg
ss
cmp
sbb
jnp
pop
add
addr16
and
add
in
mov
movs
sub
ss
xor
stos
mov
dec
mov
fisub
jb
mov
xchg
xchg
mov
push
shl
push
mov
iret
add
mov
or
pop
push
xlat
add
mov
cmp
scas
push
(bad)
xchg
fimul
sbb
mov
fs
inc
inc
cwde
add
mov
lahf
mov
ror
jno
sbb
mov
add
jge
inc
inc
mov
inc
mov
retf
cmp
mov
neg
das
mov
add
push
mov
stos
(bad)
scas
jp
loope
enter
mov
enter
pushf
jne
sub
fstp
lods
sub
sbb
pushf
lahf
or
std
mov
push
jno
push
outs
neg
add
loop
mov
mov
xchg
mov
movs
sub
add
cmps
loop
shr
into
ror
cli
jb
adc
ret
int
out
retf
adc
mov
je
dec
ins
or
sbb
fild
push
fidiv
mov
jmp
outs
mov
das
jne
xchg
mov
mov
mov
dec
stos
cmp
push
inc
fcomi
or
ss
sar
stos
popa
call
cld
cmp
fmul
aaa
cmp
stos
fimul
xor
outs
in
jg
dec
mov
inc
sub
pop
inc
stos
mov
xor
ss
cmp
push
add
icebp
jmp
pmaddwd
or
xor
cmp
push
int
mov
into
ja
pop
cli
pop
mov
push
sub
mov
sahf
test
loop
aas
jg
inc
pop
nop
add
and
adc
pop
fs
ja
test
mov
int3
dec
push
je
(bad)
sbb
dec
es
cmp
mov
loope
mov
jl
(bad)
mov
xchg
outs
test
xchg
jle
popa
jmp
cmp
into
mov
inc
adc
pop
out
fwait
mov
dec
jno
retf
(bad)
out
xor
cmps
in
mov
and
jl
cli
mov
mov
inc
fadd
lock
xchg
push
jnp
xchg
and
add
(bad)
int3
data16
repnz
push
cli
test
jg
mov
pop
lock
adc
mov
push
mov
lea
in
lea
iret
fsubr
popf
and
cmp
dec
out
jae
jne
movs
enter
pop
iret
adc
jb
fwait
mov
nop
xchg
shl
pop
addr16
ds
pusha
iret
and
cdq
ret
scas
fld
cli
mov
push
sar
xchg
neg
movs
or
outs
retf
cmp
dec
fiadd
inc
popf
or
outs
scas
and
outs
ds
movs
pop
jge
xchg
stos
push
jp
push
mov
shl
out
push
jl
(bad)
lods
clc
push
jp
leave
lds
inc
leave
stos
imul
cmc
pop
add
mov
daa
xor
fistp
es
pop
pop
cmp
or
(bad)
cmps
and
mov
jmp
lods
push
fs
adc
popa
rol
iret
outs
mov
xor
retf
test
xchg
sub
mov
lea
sub
rcl
dec
aad
adc
dec
mov
xlat
jge
mov
fadd
pop
imul
ss
movs
cmp
push
mov
jle
xor
ins
fsubrp
test
and
push
xchg
not
and
cmc
dec
mov
fistp
and
ret
pop
sbb
dec
(bad)
shl
inc
add
inc
mov
inc
pop
add
cmc
push
jmp
mul
cmc
retf
cmp
int
mov
fstp
(bad)
cld
jmp
mov
mov
cwde
sbb
mov
imul
jo
cmp
cmp
test
or
dec
es
inc
cli
outs
or
mov
xor
xchg
loop
cmps
cmp
rcr
test
pop
push
inc
idiv
repnz
dec
xlat
and
je
mov
mov
xchg
cmps
fild
xlat
loopne
jb
jne
in
call
cmp
(bad)
movs
cmp
dec
add
jne
xchg
popf
stos
movs
out
int3
push
retf
pop
call
or
mov
add
rcl
inc
push
std
mov
inc
add
xchg
mov
sbb
iret
in
add
inc
aad
(bad)
sbb
not
fcomp
mov
(bad)
leave
sub
jle
daa
push
dec
out
sub
in
mov
daa
arpl
sub
jg
jnp
cli
dec
mov
cmp
inc
in
adc
add
dec
scas
push
fnsave
out
mov
in
lods
arpl
hlt
push
adc
clc
jae
imul
(bad)
jl
and
push
imul
adc
pushf
dec
scas
pushf
inc
and
xchg
leave
icebp
(bad)
pop
inc
inc
inc
pop
int3
enter
mov
xchg
daa
rol
dec
popa
in
fcmove
dec
mov
push
dec
add
call
rcr
mov
pop
cmps
jns
stos
pop
lahf
mov
es
fadd
inc
mov
rep
dec
mov
call
pop
das
jl
ror
push
das
retf
mov
jmp
je
xor
push
cmp
(bad)
jmp
push
mov
clc
fnstenv
repnz
jbe
stos
hlt
out
push
pop
xor
push
fnstcw
adc
or
jno
add
pop
loope
pushf
in
push
cmps
push
jno
pop
or
(bad)
or
ficomp
std
sub
leave
mov
idiv
sbb
sar
fcom
inc
(bad)
test
in
cwde
popa
in
stc
test
ja
fisttp
dec
xchg
and
mov
cmps
jmp
aas
pop
fs
push
push
xor
xor
gs
push
imul
js
pop
ins
ins
add
jecxz
or
popa
sbb
retf
stos
out
inc
pop
jo
sbb
stc
sub
ja
mov
out
dec
push
cmp
sbb
js
daa
in
inc
fwait
cdq
fsubr
xchg
test
inc
lds
xchg
cmp
dec
aaa
mov
xor
xchg
adc
mov
movs
shl
pop
clc
pop
and
mov
inc
xor
and
fldcw
cld
icebp
rol
dec
and
lock
pop
xlat
sti
sbb
(bad)
mov
and
or
(bad)
call
not
out
adc
xchg
vcomiss
aaa
or
and
or
and
sbb
adc
retf
adc
test
jle
jl
bound
pop
adc
sbb
xchg
into
mov
cmps
mov
sub
out
in
cwde
pand
nop
test
add
push
jle
and
mov
push
outs
mov
push
mov
outs
cmps
inc
mov
jmp
and
outs
lods
rcl
leave
ins
lea
aas
stos
retf
shr
or
inc
add
test
jbe
sbb
rol
iret
dec
sbb
sbb
repz
out
mov
push
popa
fucom
sub
pushf
jo
inc
xor
mov
retf
dec
cmps
push
xchg
ds
sti
and
mov
cmp
or
mov
fistp
xchg
jge
aad
push
mov
mov
xor
shl
scas
cmps
fcmovnb
icebp
sbb
pop
cwde
scas
addr16
arpl
push
inc
jb
test
dec
push
and
push
mov
dec
ret
rcr
jmp
nop
add
jle
inc
dec
xchg
xlat
jl
aam
push
pop
lods
jno
mov
(bad)
fistp
xlat
and
adc
fwait
test
push
ins
loope
sub
ficomp
xor
icebp
jle
(bad)
fadd
int
inc
les
test
stos
add
push
jbe
outs
add
cmp
cmps
popf
adc
cmps
xchg
cli
bound
pop
push
jecxz
xor
cmp
(bad)
mov
inc
push
ja
mov
adc
sub
enter
cwde
xlat
mov
or
hlt
and
scas
xchg
shr
daa
mov
add
fnsave
loop
adc
daa
or
mov
outs
or
add
push
cli
jp
mov
dec
test
cmp
sub
enter
cmc
push
mov
ds
push
mov
or
or
inc
cdq
jmp
xor
dec
into
or
push
in
push
lods
add
cmp
enter
hlt
adc
lds
rcr
and
icebp
jecxz
loop
ins
dec
mov
push
sti
push
les
pusha
sbb
(bad)
scas
add
ss
test
jo
fwait
inc
pop
loop
jbe
mov
adc
inc
inc
push
add
scas
mov
sub
sub
js
mov
jne
out
mov
aam
daa
mov
js
icebp
xor
and
inc
in
lea
pop
movs
test
nop
pop
dec
sub
mov
retf
mov
adc
xlat
mov
outs
shl
ins
xchg
mov
imul
fstp
push
jns
inc
mov
pop
jp
xchg
icebp
int
mov
dec
js
jo
mov
sub
adc
and
xor
and
ret
pop
or
xchg
les
aad
popa
(bad)
imul
and
and
sub
sbb
and
add
out
dec
lods
cld
iret
neg
dec
clc
pop
jo
(bad)
in
mov
mov
int3
xor
gs
xor
inc
(bad)
shr
ja
je
cmp
push
fnstsw
dec
stos
mov
cdq
cmp
cmps
cmp
mov
arpl
shl
imul
inc
jg
cs
repz
(bad)
in
jmp
pop
xchg
loope
repnz
jecxz
pop
bound
jp
sub
into
jo
daa
or
jbe
scas
xchg
mov
outs
or
sbb
push
add
ror
mov
(bad)
xchg
jnp
cmp
loop
dec
clc
scas
repz
pop
push
push
inc
cwde
or
movs
(bad)
pop
fxch
mov
xor
inc
inc
add
loope
(bad)
push
jbe
or
bound
inc
ficomp
push
rcr
inc
(bad)
std
push
ret
leave
das
sbb
fistp
ret
cmc
test
or
arpl
jp
lods
arpl
mov
sub
add
(bad)
sub
sub
cmps
cmc
mov
sub
out
push
jle
popa
push
ins
push
sahf
jmp
mov
adc
push
ret
loop
jo
jp
inc
je
jp
ret
push
ja
xchg
mov
aaa
(bad)
sbb
xor
add
(bad)
mov
call
cmp
outs
ds
sub
pop
stos
mov
imul
mov
mov
adc
push
adc
sub
xor
jo
push
adc
push
sbb
enter
sbb
imul
leave
mov
cdq
sbb
inc
rcl
clc
sar
push
js
repz
mov
aas
loope
mov
out
mov
adc
mov
out
rcr
into
fmul
out
xchg
push
jg
jno
gs
idiv
les
jae
cmp
retf
inc
mov
pop
pop
shr
xor
call
and
sbb
xor
outs
aas
adc
icebp
test
fdiv
pop
inc
shl
mov
or
and
and
pushf
adc
adc
add
mov
call
mov
cs
add
in
fnstsw
or
rcl
call
sub
jnp
scas
dec
mov
cmps
mov
mov
add
sub
sahf
push
xlat
push
mov
xor
mov
xchg
rol
fnstenv
retf
les
mov
inc
aad
inc
hlt
mov
jbe
aad
aam
cld
adc
ins
fiadd
cdq
mov
push
jl
adc
lods
imul
and
or
pusha
ins
scas
iret
pop
mov
(bad)
mov
mov
cmp
xchg
jo
outs
in
fisub
jg
cmps
push
adc
inc
mov
les
enter
sbb
retf
ins
and
jl
mov
pop
(bad)
jo
in
aad
or
mov
jb
inc
cmc
dec
xchg
sub
xor
dec
sbb
imul
inc
xchg
adc
popf
out
arpl
(bad)
adc
mov
stos
into
imul
mov
inc
pop
sbb
adc
cmp
xor
or
jmp
jecxz
lock
stc
inc
cmp
dec
sbb
sahf
dec
pop
cmps
cmc
xor
sub
jno
mov
inc
jne
dec
and
test
sub
je
aas
movs
jb
pop
xor
imul
dec
out
aaa
(bad)
daa
inc
ja
sbb
mov
add
sub
and
mov
inc
sti
and
sub
ret
jge
xchg
adc
cdq
xchg
or
sub
cmp
aam
shl
dec
jmp
jg
and
inc
clc
fwait
(bad)
std
cmps
imul
push
mov
jp
hlt
mov
add
and
and
push
mov
push
mov
sbb
push
mov
jno
adc
sub
cwde
out
and
jno
ret
aad
jmp
add
repz
sbb
in
inc
pop
div
push
shr
shl
ja
add
je
int3
sbb
adc
aas
push
add
inc
in
cwde
or
jbe
(bad)
fdiv
pop
loop
jle
int
std
mov
xchg
bound
jle
jmp
jg
sbb
inc
xchg
aam
mov
loope
pop
xor
das
in
mov
pop
and
scas
jge
stc
(bad)
or
call
mov
ret
int
push
mov
frstpm(287
ins
cmp
dec
out
mov
mov
mov
pop
xlat
pop
mov
xchg
and
popf
and
jmp
stos
mov
retf
mov
hlt
push
mov
adc
scas
ins
pop
maskmovq
jo
adc
mov
and
stos
inc
addr16
pop
stc
inc
jl
outs
loop
mov
in
and
add
push
mul
mov
push
add
adc
jecxz
cmp
or
and
mov
call
mov
or
xor
popf
cmp
inc
lods
popa
jns
or
cmps
xchg
test
enter
mov
dec
mov
pop
xchg
push
mov
push
pop
jecxz
jo
or
add
stos
fs
fdivp
jecxz
and
or
cmp
and
frstor
lock
data16
dec
in
jb
fmul
push
jg
or
jno
out
jbe
call
fiadd
mov
adc
les
mov
and
mov
lahf
call
cwde
jmp
add
cmp
add
iret
(bad)
ja
std
pop
dec
inc
icebp
or
jae
push
sub
dec
mov
(bad)
les
test
push
mov
dec
adc
cmp
sti
popf
sbb
sub
xchg
shl
sbb
je
jg
pop
inc
mov
ins
pop
pop
movs
jns
cmp
sbb
sbb
sbb
in
fimul
rcr
or
pusha
mov
mov
out
pop
cmps
cmp
add
xchg
mov
push
out
test
dec
(bad)
(bad)
push
cmp
pop
mov
(bad)
or
jae
cld
dec
leave
adc
ja
jmp
pop
call
inc
pop
mov
or
cld
imul
cmp
xchg
inc
bound
aaa
push
xor
int
outs
mov
jecxz
pop
(bad)
imul
mov
mov
pop
push
pop
pmaxub
pop
jle
icebp
cmp
jbe
sub
scas
pop
cld
inc
push
add
cdq
mul
sub
(bad)
and
sub
push
push
aam
jmp
xchg
xor
mov
xchg
fiadd
imul
pop
inc
add
lods
mov
adc
push
jns
mov
fld
jmp
or
pop
daa
out
retf
loop
loope
lock
sbb
add
dec
or
aas
cmp
jp
push
or
mov
inc
mov
bound
sbb
or
mov
dec
and
lods
jb
cli
ror
jno
arpl
ss
mov
jno
push
pop
pop
ins
sub
jae
ins
and
inc
add
lea
mov
push
fld
fdiv
dec
cli
mov
adc
rcr
das
push
dec
cwde
jb
mov
dec
rol
ret
clc
sub
jbe
push
mov
jmp
fwait
sub
in
dec
pop
or
mov
ds
imul
jno
test
cmp
fsubr
push
push
or
adc
bound
sti
add
hlt
hlt
cmps
jmp
shl
icebp
nop
arpl
cmp
mov
cmp
and
dec
neg
fdivr
add
cmp
fstp
mov
cld
add
or
jmp
mov
ficomp
add
ss
ret
sti
test
and
hlt
mov
and
out
xchg
adc
dec
xchg
mov
xchg
pop
cmp
int
push
xor
lea
in
lea
addr16
in
ja
ror
xor
xchg
xor
push
int3
int
data16
ds
adc
jno
je
fisubr
pushf
and
sub
jne
jmp
xchg
sbb
or
ins
ret
mov
jns
xlat
xlat
inc
adc
jl
jbe
sbb
jmp
xchg
push
and
jge
movs
cli
les
cwde
or
add
js
mov
ins
mul
jmp
xchg
movs
and
pop
addr16
push
test
pop
mov
cmp
jno
inc
jg
int3
inc
retf
cmp
out
push
dec
clc
pop
cmp
cmp
loope
or
icebp
push
test
cli
jmp
pop
ins
jecxz
not
mov
add
arpl
cmp
jmp
adc
daa
ja
inc
(bad)
mov
or
push
sahf
aaa
pop
cdq
cmp
je
sbb
inc
mov
shl
inc
aam
outs
sbb
xchg
xchg
mov
sar
sbb
ficomp
xor
push
rol
sub
dec
sbb
inc
jns
jnp
scas
cwde
imul
sti
xor
cmc
enter
in
frstor
sub
loope
mov
dec
es
add
adc
cmp
push
retf
stc
pop
jg
xchg
push
push
int3
popa
pusha
iret
sub
jo
outs
push
(bad)
mov
data16
xor
inc
mov
sbb
fabs
and
adc
push
jne
push
or
les
mov
dec
dec
xchg
lea
push
sub
sbb
mov
pushf
jmp
adc
gs
mov
lock
add
dec
(bad)
hlt
sub
ins
jno
out
in
mov
or
pop
(bad)
pusha
cmp
(bad)
inc
push
gs
and
sub
xchg
xor
sti
pop
jp
movs
fnsave
jle
ret
fmul
jno
and
jp
sbb
cwde
scas
push
mov
rcl
ror
imul
inc
ins
mov
or
jmp
stos
lock
xchg
xchg
scas
retf
mov
dec
pushf
out
push
cmp
mov
add
jmp
daa
(bad)
div
mov
test
retf
jl
xor
dec
fwait
cmp
mov
jmp
call
call
sub
inc
test
daa
in
pop
es
fwait
(bad)
(bad)
dec
imul
sbb
xchg
test
adc
and
or
add
cmp
mov
and
jnp
xor
cmp
daa
fwait
imul
cld
popa
xor
sub
mov
cld
inc
call
sub
leave
xchg
and
cmp
icebp
cmc
cmp
sub
or
inc
push
xchg
and
mov
xor
jbe
stc
sub
inc
mov
mov
cmc
cwde
and
sbb
rol
fld
and
cmc
xor
ss
xchg
adc
add
loopne
(bad)
jmp
movsx
jp
pop
ror
jmp
pop
inc
push
push
pop
stc
iret
pop
popa
retf
xor
jns
jle
jp
adc
cmp
jecxz
mov
cli
ficom
xchg
lock
imul
mov
int
movs
mov
ja
pop
arpl
add
cld
mov
cmc
xchg
push
jo
mov
(bad)
imul
adc
sub
pushf
stos
(bad)
fisub
outs
loope
scas
js
(bad)
mov
xor
push
xlat
in
xor
inc
fdivr
dec
repz
push
jg
daa
movs
jne
sub
jmp
jb
mov
mov
das
cwde
mul
jmp
or
and
out
sbb
sub
mov
mov
popf
jns
xchg
cmp
mov
inc
movs
retf
mov
fnstcw
inc
retf
(bad)
rol
jl
add
ret
xor
or
adc
inc
cli
cmps
(bad)
pop
outs
xor
add
aad
add
sub
dec
imul
aad
sbb
mov
aam
cmp
jb
or
std
out
inc
aas
sub
add
jl
shl
cmc
sub
cmp
dec
push
mov
pop
(bad)
cmc
movs
pop
inc
fucompp
sti
shl
and
stc
push
pop
pop
inc
jge
xor
call
fcom
lods
adc
inc
pusha
jo
mov
jnp
add
mov
jbe
jl
cdq
nop
les
adc
xor
mov
pop
enter
sub
jmp
fnstcw
out
or
or
jge
mov
pop
pushf
or
stc
movs
mov
sub
cmp
retf
sub
mov
aam
stc
sub
add
adc
ret
stos
fcmovne
jno
bound
cmc
push
fcmovb
jo
sahf
ret
inc
xchg
xchg
dec
xchg
add
push
xchg
or
mov
xchg
and
mov
sbb
push
aaa
idiv
mov
add
cmp
shl
out
mov
add
(bad)
push
and
shl
xchg
mov
mov
xchg
(bad)
push
or
aad
lahf
cmps
add
cmp
mov
(bad)
enter
cs
fnstcw
out
add
movaps
mul
xchg
xchg
cmp
pop
and
enter
lock
push
fcmove
or
push
aaa
add
cmp
in
add
push
jle
jnp
sbb
retf
inc
dec
seto
pop
rol
adc
inc
inc
pop
inc
in
mov
adc
or
xchg
mov
inc
and
loopne
inc
mov
xchg
jg
mov
inc
int
imul
lods
and
mov
dec
ja
cwde
push
dec
jle
sbb
cdq
mov
inc
and
fsin
das
pop
(bad)
xchg
punpckhdq
cs
test
cld
pop
fxch
inc
dec
dec
ja
sub
cli
pushf
mov
dec
dec
fwait
pushf
jmp
adc
mov
cmp
jl
push
cmp
mov
sbb
sti
cmp
sahf
sub
mov
mov
jno
add
jb
dec
inc
xchg
adc
lea
pushf
xchg
mov
pop
inc
mov
sar
(bad)
fcomip
cmp
int
sbb
xor
in
add
popa
xor
jge
dec
mov
test
mov
cdq
or
in
dec
aad
adc
push
mov
inc
push
fild
std
or
or
mov
cmp
xchg
pop
mov
fsub
stos
(bad)
cld
pop
neg
into
mov
leave
sbb
push
mov
jle
ins
fmul
retf
xchg
and
jnp
jecxz
iret
shl
fcomp
xor
call
pusha
pushf
popa
retf
movsx
jnp
retf
rcl
sbb
dec
dec
jmp
mov
adc
je
adc
jmp
adc
jmp
xchg
mov
add
xchg
pop
in
loopne
test
pop
xor
pop
in
in
into
sets
adc
aad
mov
(bad)
add
popa
fs
xor
les
(bad)
pushf
leave
xor
dec
xor
pop
and
nop
sbb
add
pop
pop
jno
dec
push
inc
test
push
jl
push
ss
sbb
inc
test
js
scas
aas
loopne
xchg
cld
cmp
cmp
cmps
rcl
ret
(bad)
xchg
jo
mov
and
or
jmp
popf
call
jl
xor
cdq
stos
idiv
adc
and
and
pusha
dec
sbb
push
mov
xor
jae
icebp
jmp
aas
ret
out
or
lea
ja
pop
mov
fdiv
aaa
push
adc
arpl
mov
sar
fimul
mov
ja
sub
popf
adc
jl
movs
sbb
(bad)
push
mov
jmp
jp
adc
cmps
push
or
adc
stc
push
and
cmp
pop
out
(bad)
test
xor
jae
imul
add
clc
cmc
outs
and
sbb
add
aad
sahf
(bad)
lock
sbb
dec
xchg
hlt
mov
movlhps
test
mov
stos
test
xchg
mov
sahf
fwait
lds
loope
ins
loopne
fwait
push
bound
fdivr
gs
cmp
(bad)
xchg
bnd
cmp
enter
aas
mov
icebp
xchg
mov
push
movs
(bad)
sbb
das
(bad)
out
addr16
xchg
xlat
or
inc
adc
fst
sub
or
xchg
shl
lods
push
cmp
std
xchg
inc
adc
push
push
cdq
cmp
add
pop
bound
ror
and
jne
mov
pushf
jg
gs
aad
jne
add
lock
daa
aaa
jo
or
scas
sahf
xchg
jg
cmc
xchg
stos
xor
js
sti
adc
leave
dec
or
and
nop
cmp
cwde
dec
xor
jg
stc
mov
mov
lea
scas
jne
cmp
xchg
dec
clc
out
jmp
sbb
aas
ret
push
adc
inc
(bad)
mov
pop
imul
mov
mov
neg
dec
inc
sub
push
jmp
nop
add
fcmovnu
sbb
fild
ins
test
xchg
(bad)
cmp
leave
jl
js
and
push
mov
leave
adc
cmps
dec
cmp
in
mov
fild
bnd
jmp
mov
(bad)
pop
loopne
int
xor
test
shr
pop
ret
inc
push
inc
cmp
ret
mov
cmp
lea
fild
add
aas
in
into
and
arpl
ds
ret
or
push
mov
cli
mov
xchg
jp
out
(bad)
dec
(bad)
(bad)
xor
adc
leave
gs
add
xchg
ror
mov
movs
push
mov
add
mov
sbb
jo
scas
cmp
icebp
cmps
cmps
xor
jmp
cwde
cld
out
sub
clc
adc
aas
inc
out
dec
cmp
inc
dec
mov
sbb
jnp
xlat
jle
daa
cmpxchg
mov
ja
cdq
add
cdq
icebp
inc
test
pop
and
enter
jno
push
push
aad
mul
cwde
adc
adc
out
or
lods
ret
push
adc
xchg
mov
xor
push
rcr
icebp
pop
out
mov
pop
daa
push
movs
das
mov
retf
sub
adc
push
loop
popf
loop
push
mov
(bad)
sbb
mov
mov
scas
fdiv
push
pop
fistp
mov
and
adc
and
ja
or
jecxz
cmps
adc
sub
ins
sar
lea
nop
mov
cmp
fisttp
mov
(bad)
in
or
jge
pop
adc
xor
pusha
mov
and
fstp
cmp
popf
inc
shl
mov
(bad)
test
xchg
movs
lods
cmp
fwait
loop
sbb
sub
or
dec
stos
xchg
cmps
pop
pop
mov
add
xchg
adc
loop
(bad)
fnstenv
dec
gs
mov
icebp
add
push
lds
sbb
sbb
int
push
or
push
pushf
jns
inc
pop
gs
clc
fadd
sahf
jmp
ins
and
xchg
fist
aad
outs
retf
push
mov
cld
xchg
add
aam
sub
movs
sar
in
movs
inc
loope
pop
cmps
or
or
mov
(bad)
(bad)
aam
aam
leave
add
xor
cld
sub
cmp
pop
jl
and
(bad)
cmc
lock
inc
movs
inc
fidiv
pop
or
inc
pop
(bad)
in
js
stos
out
pop
int
push
retf
or
jge
iret
add
cmp
push
sub
sbb
cld
in
sub
stc
aas
in
jae
sti
mov
dec
sbb
xchg
mov
push
mov
cmc
sar
dec
and
mov
rol
add
(bad)
ins
outs
repnz
pop
pop
loopne
fst
test
pop
out
pop
pop
aaa
mov
scas
push
mov
fild
inc
(bad)
cmp
push
test
retf
or
and
setne
push
cwde
cmp
in
popf
movs
dec
mov
push
sub
jbe
pushf
add
jl
xor
push
lahf
rcr
movs
jno
jle
dec
cmc
push
(bad)
int3
(bad)
rcl
adc
jge
(bad)
sub
and
and
inc
out
stc
into
ret
mov
jp
ins
test
into
cmp
in
inc
adc
shl
sub
lahf
(bad)
xchg
cld
inc
xor
in
test
mov
pop
jae
adc
adc
xchg
mov
(bad)
cmp
mov
or
mov
sar
cs
and
xchg
hlt
xor
int3
stos
sub
jns
adc
mov
sbb
iret
jo
popf
adc
shl
inc
daa
(bad)
enter
pop
adc
stos
xor
mov
test
imul
push
js
mov
iret
cmp
ds
lods
dec
mov
xchg
sub
sbb
(bad)
frstor
std
lahf
jle
hlt
cli
push
xor
jne
sti
mov
icebp
mov
repz
mov
int3
test
lods
sub
mov
push
cli
cli
cs
lahf
lods
xchg
xor
mov
arpl
vhaddpd
ret
add
pop
inc
jl
inc
into
int
sub
inc
push
aaa
lea
push
loope
retf
and
cwde
sbb
ja
shr
inc
pop
mov
fstp
fcom
clc
es
ret
xchg
(bad)
mov
mov
add
daa
mov
adc
pop
cld
in
cmp
mov
add
inc
sar
cld
dec
or
js
fwait
in
xchg
popa
sub
push
mov
stc
push
int
mov
adc
call
sbb
clc
sub
mov
std
xor
cmp
pop
mov
fiadd
cmp
add
sub
(bad)
push
imul
outs
mov
push
stos
xor
jl
cmp
sub
jmp
out
mov
and
in
mov
retf
or
imul
int3
add
loopne
daa
fst
mov
cmps
movs
inc
mov
jmp
mov
outs
test
xchg
dec
add
pminub
cdq
or
jnp
push
(bad)
out
xchg
jo
shl
mov
push
mov
and
repz
xchg
stos
in
pop
mov
jns
in
retf
sub
and
push
nop
gs
mov
mov
jmp
mov
(bad)
mov
and
retf
mov
daa
sbb
mov
repnz
push
jle
(bad)
cdq
pop
outs
sub
mov
inc
out
in
adc
ins
dec
mov
jge
in
jle
repz
sbb
data16
iret
xor
xor
xor
adc
daa
xchg
imul
pop
mov
sbb
mov
or
mov
push
movs
xchg
imul
loop
imul
dec
push
xor
sub
imul
mov
fadd
mov
fidivr
mov
call
jbe
sub
imul
(bad)
xchg
push
das
mov
fs
push
xchg
adc
push
inc
test
adc
out
mov
aad
popa
xor
or
mov
push
add
xlat
(bad)
aam
and
imul
adc
(bad)
sbb
out
(bad)
aaa
add
das
mov
sbb
mov
push
jmp
add
fisttp
xchg
loope
mov
ja
(bad)
in
and
repz
stc
addr16
sub
pop
iret
jae
js
test
mov
fisttp
xchg
sub
shl
cwde
cmp
ret
std
aaa
mov
pop
cmp
xchg
cmps
rol
cmp
nop
inc
ret
push
lahf
mov
sahf
jle
cdq
repnz
mov
enter
push
jmp
push
fld
pop
inc
out
(bad)
shl
mov
clc
in
rol
sbb
movs
test
test
sbb
mov
lea
jne
cld
adc
retf
cli
sub
push
imul
jecxz
dec
cbw
xor
jl
mov
loopne
fisubr
fmul
pop
cmp
dec
jb
nop
ds
ret
and
jb
outs
add
xchg
and
lods
cld
lock
cli
fst
or
shl
sbb
push
mov
inc
mov
test
mov
add
inc
stc
sbb
sub
call
xchg
or
outs
call
test
test
ficomp
sub
xchg
mov
jl
mov
jmp
inc
dec
loopne
es
xlat
stos
sbb
out
inc
repz
pop
jno
or
xor
cmp
sub
pop
mov
cmp
xchg
ret
dec
mov
pop
pushf
mov
das
jne
lods
movs
dec
jle
test
lock
and
outs
mov
jo
mov
mov
ds
cmps
or
hlt
fistp
pop
xchg
jge
sti
repz
mov
and
clc
jnp
rcr
into
mov
les
and
sub
cld
mov
cdq
xor
xchg
jno
cmp
(bad)
adc
retf
shr
or
mov
pop
repnz
jg
popa
or
cmp
sahf
pop
add
xchg
sbb
mov
mov
xchg
push
mov
lea
mov
jne
stos
in
out
je
cmp
push
jbe
xchg
in
add
sub
jbe
push
dec
inc
aas
mov
mov
dec
ret
loopne
mov
push
outs
add
out
and
add
xchg
ja
repnz
fstp
aam
call
xchg
cmp
out
cmc
push
cmp
jae
js
push
imul
mov
dec
popf
ss
push
xchg
cmp
adc
mov
and
jge
data16
ins
cmp
xor
int3
fadd
fistp
jno
pop
ins
inc
icebp
gs
hlt
mov
les
mov
pop
dec
sub
xchg
cli
cmps
pop
inc
mov
repz
sub
inc
mov
popa
int
dec
xchg
movs
mov
sbb
dec
ds
test
cmp
sub
pop
lods
test
or
xchg
pop
fwait
scas
or
push
dec
retf
pop
mov
jo
lock
or
out
mov
shr
cmp
push
sbb
aad
cmp
leave
enter
push
pop
hlt
ss
imul
jne
imul
test
test
jle
dec
test
rcr
cmp
mov
or
movs
retf
push
rcl
imul
pop
adc
push
mov
cmc
icebp
test
(bad)
out
cwde
stc
pop
out
xchg
lea
add
jnp
add
jnp
push
pop
aaa
push
fild
xor
dec
and
pop
push
mov
mov
pop
(bad)
mov
jne
lahf
bound
xor
fcomp
fsubp
(bad)
fistp
xchg
(bad)
in
(bad)
not
cmp
dec
fstp
pop
inc
leave
xchg
dec
mov
push
std
mov
not
and
pop
add
leave
movs
cmps
lock
mov
fdivr
jle
sbb
jecxz
or
out
ins
rcl
adc
lock
pop
pop
inc
gs
call
jno
loop
ins
adc
mov
xchg
xchg
jb
arpl
cmp
in
mov
or
jno
mov
das
jg
jl
stc
sub
mov
push
xchg
shr
std
mov
jmp
(bad)
xchg
pop
push
les
xor
mov
push
shr
xchg
jg
sbb
mov
cld
into
adc
xor
cli
shl
add
lods
stc
(bad)
mov
mov
ret
ret
pop
shr
(bad)
mov
push
cmp
adc
adc
add
pop
cmp
sbb
mov
dec
mov
sbb
pop
sahf
sbb
sub
ds
popa
rcl
popf
dec
sub
test
adc
cmp
out
ja
push
or
mov
jnp
xlat
push
lds
int
jb
imul
fs
sbb
ja
mov
adc
outs
pop
repz
inc
addr16
xor
daa
and
daa
add
clc
jecxz
sub
xchg
aas
push
outs
les
mov
lock
xchg
leave
sbb
mov
xor
jnp
fs
push
cmc
jmp
(bad)
xor
add
lea
aad
call
dec
out
add
mov
inc
xor
xchg
rcr
std
test
inc
jge
js
xor
in
mov
inc
pushf
ror
js
sbb
inc
cs
ins
adc
(bad)
(bad)
out
mov
inc
enter
pop
leave
xor
or
aaa
adc
pop
aam
cmp
pop
xor
mov
dec
js
arpl
cwde
sub
(bad)
xchg
mov
push
mov
xchg
mov
int
cs
std
je
pop
and
add
in
repnz
sub
jno
into
pop
cmp
xchg
fcom
mov
or
loop
adc
mov
out
xchg
je
pusha
ins
push
fcom
sub
test
pop
movs
jle
imul
mov
push
cmp
mov
and
out
fcmovnu
or
icebp
mov
add
add
fcmovnu
push
aaa
push
test
loopne
pop
js
mov
add
and
pop
ins
dec
adc
icebp
mov
out
push
and
jp
mov
gs
movs
in
inc
sar
div
rcl
fcmovbe
push
mov
xor
mov
int3
xchg
add
dec
add
aad
add
imul
test
and
int
ret
test
add
js
push
cld
xchg
pusha
inc
mov
xlat
ins
cmps
mov
or
push
in
dec
aaa
rcr
es
cmp
outs
in
lods
in
xor
lahf
xor
gs
das
mov
test
push
push
xchg
pop
jne
aaa
fistp
ja
iret
jmp
pop
sbb
cli
push
push
pop
pop
shl
sub
fst
xchg
test
or
imul
mov
out
xchg
js
imul
es
jbe
stos
mov
ror
pop
addr16
popa
pop
adc
xor
mov
test
mov
jg
adc
test
popa
pop
push
loop
bound
fld
mov
dec
ret
inc
jmp
jns
pop
jp
imul
push
in
aaa
or
loop
popf
leave
xchg
xlat
ror
(bad)
inc
pop
into
repnz
faddp
pop
pushf
cmc
fdiv
cmp
scas
fld
push
mov
and
cmps
dec
dec
retf
pop
lds
pop
jns
ret
push
mov
jb
jl
aam
ins
retf
xor
dec
aad
scas
mov
jp
lods
mov
popa
sub
mov
ss
push
xchg
inc
fwait
push
int
ficom
dec
arpl
xlat
dec
loopne
mov
fwait
aaa
adc
fcmovu
ins
das
lods
imul
dec
out
or
mov
stos
dec
stc
or
dec
mov
pop
inc
mov
gs
adc
ins
sub
(bad)
ss
outs
sub
outs
xchg
sti
inc
jmp
mov
stc
addr16
cmps
cli
fs
ins
mov
sub
ret
xchg
push
imul
hlt
(bad)
out
add
dec
in
push
dec
and
outs
or
adc
jno
xchg
gs
push
push
push
sbb
push
cmp
dec
sub
call
jl
adc
jo
jp
mov
mov
stos
ja
ss
sbb
inc
inc
xchg
dec
mov
xchg
lods
aam
ja
mov
das
dec
sbb
or
es
popf
repz
fisubr
loope
movs
out
xchg
outs
or
psraw
in
ficom
sub
fistp
mov
adc
adc
adc
cmps
dec
and
jle
repnz
mov
loop
scas
std
xor
pop
nop
dec
jecxz
push
sub
sar
and
mov
adc
xchg
xchg
mov
pop
push
retf
push
sti
inc
ret
mov
ins
(bad)
scas
push
and
cld
(bad)
xchg
adc
mov
retf
or
xlat
cmc
add
mov
jo
cmp
mov
out
mov
xchg
mov
leave
retf
xchg
add
(bad)
jo
xchg
(bad)
push
sbb
and
retf
pop
or
out
mov
add
out
inc
mov
das
out
imul
jp
call
or
and
sub
fs
pop
in
cmps
xchg
inc
mov
push
mov
in
pop
test
mov
pop
cmc
push
mov
jae
loope
pop
cmps
jmp
inc
outs
or
(bad)
xlat
and
mov
lods
cli
sbb
and
ret
xor
dec
sub
sahf
iret
pop
push
pop
or
xchg
cmps
lods
pop
loope
or
mov
push
into
movs
sbb
or
pop
leave
jmp
sbb
nop
imul
push
or
or
out
xor
mov
int
and
das
in
sub
inc
loope
inc
stos
xchg
int
out
vpshufhw
jmp
fld
stos
jno
outs
add
xor
call
sub
and
lock
and
xor
out
fidivr
cs
mov
gs
mov
mov
hlt
out
jne
mov
pop
push
jbe
out
nop
xchg
mov
hlt
scas
jg
jle
adc
shr
popf
jg
cld
bound
loopne
mov
iret
retf
stos
stc
sub
push
push
sub
movs
or
pop
push
and
out
icebp
pop
inc
push
or
cmp
mov
hlt
or
sti
cs
in
lock
jbe
or
ja
cmps
shl
or
fwait
push
popf
aad
stos
(bad)
mov
fisttp
call
sbb
shr
or
mov
ja
or
pop
jecxz
mov
loope
jp
inc
push
sbb
dec
sbb
mov
ja
mov
push
or
pop
out
mov
pop
push
push
es
rcl
out
aas
movs
jb
lahf
loop
movs
ror
daa
sbb
dec
addr16
xchg
fidiv
mov
pop
sbb
dec
xor
jge
or
popf
push
dec
xor
retf
movs
push
mov
jo
lea
or
push
mov
aaa
arpl
shl
in
and
clc
(bad)
orps
(bad)
sub
pop
xchg
gs
mov
cwde
cmps
test
loopne
imul
jmp
cmp
retf
cmp
lahf
or
pop
push
xor
push
ror
mov
arpl
inc
fs
mov
fwait
mov
popf
in
iret
bound
mov
call
loopne
scas
dec
xor
xor
enter
clc
ror
or
add
jl
push
iret
cmp
pop
sahf
ret
jle
push
cmp
outs
and
fidiv
fidiv
jmp
jne
xchg
dec
pop
mov
movs
dec
jmp
sar
cmp
mov
mov
mov
ret
cmp
(bad)
mov
mov
xor
out
das
out
jne
push
jp
add
and
fstp
leave
or
mov
sbb
enter
aam
(bad)
jae
or
pop
lahf
test
mov
or
push
stos
jp
aas
xor
xchg
pop
loopne
fcom
pop
push
adc
cmp
jecxz
clc
loopne
scas
push
retf
cld
mov
cmp
xor
cmp
xchg
jmp
xor
nop
test
nop
test
(bad)
aad
lahf
push
int
inc
into
sub
xor
in
retf
cmc
add
imul
push
(bad)
mov
xor
mov
mov
leave
(bad)
sbb
sbb
push
js
pop
inc
mov
mov
in
gs
pop
jns
loopne
cmp
int3
xor
cmp
clflush
jnp
pop
lods
sub
pop
xchg
or
inc
mul
mov
inc
push
push
mov
xor
popa
daa
xchg
out
repnz
adc
aaa
xor
in
cmps
or
mov
in
and
test
inc
sub
pop
ja
xchg
ja
ins
xchg
imul
and
test
mov
test
cs
dec
stos
ret
loopne
pop
pop
mov
xor
push
jns
xchg
lods
cwde
fisttp
sahf
mov
mov
leave
lods
jg
shl
mov
push
movs
js
add
push
mov
jno
shr
or
mov
jno
cmp
mov
aas
retf
pop
cmps
lock
imul
mov
pop
repz
pusha
sbb
hlt
lahf
sbb
mov
(bad)
(bad)
cmp
xchg
call
ins
outs
add
sar
jl
mov
mov
pop
push
in
movs
into
sub
pop
mov
stos
sub
ins
pop
xchg
aaa
in
repnz
scas
ins
jmp
xchg
cmp
dec
js
cmp
xor
xchg
lahf
popf
and
loope
lods
or
test
and
ror
cmc
and
call
mov
dec
popf
lods
mov
mov
lock
(bad)
fmul
loope
jo
icebp
out
jo
dec
jmp
test
push
retf
xchg
xchg
mov
or
pop
jnp
fstp
retf
popa
mov
mov
ror
pop
xchg
mov
xchg
mov
popf
sbb
mov
fist
sbb
cmp
adc
xor
sub
sub
cmp
clc
lahf
addr16
mov
xor
js
ins
inc
stos
iret
mov
(bad)
inc
pop
or
mov
stos
push
adc
push
mov
mov
mov
pushf
sub
lock
push
lahf
inc
mov
movs
lahf
outs
push
jae
push
lea
sti
mov
jmp
in
aad
ret
jb
pop
dec
push
add
repnz
sub
add
(bad)
mov
inc
dec
ja
xchg
out
lahf
and
dec
imul
js
inc
inc
(bad)
xlat
inc
pop
mov
sahf
fs
stos
mov
jl
shr
jmp
dec
sub
cmp
xchg
xor
das
(bad)
or
lods
xchg
jge
out
movs
mov
int
add
(bad)
add
(bad)
jl
or
shl
mov
es
add
xchg
sbb
fcomp
nop
rcl
jo
mov
fwait
dec
mov
pop
int
loope
sub
sub
int
adc
mov
adc
cmps
inc
jmp
dec
pop
mov
scas
arpl
fwait
inc
sbb
or
rcl
mov
rol
clc
push
call
or
div
ds
pushf
xor
xchg
lahf
fst
sqrtps
xor
pop
aam
xchg
(bad)
pop
pop
(bad)
div
test
jle
xchg
mov
mov
jg
pop
into
mov
mov
mov
push
sub
cld
pop
mov
sbb
pop
repz
mov
fdivrp
aas
jo
in
je
ins
clc
mov
xor
dec
xor
jmp
mov
add
push
mov
xlat
iret
xchg
jmp
imul
scas
shl
add
sbb
test
or
add
xor
fisub
pop
mov
scas
in
xor
inc
push
popa
jno
clc
mov
inc
mul
cli
les
push
inc
jge
bnd
loope
mov
shl
dec
stos
hlt
into
inc
aas
stos
stos
or
mov
outs
fdivr
or
pop
sbb
das
dec
cmp
je
and
and
fistp
push
or
lods
cld
xor
fcom
push
push
push
sub
retfw
stos
and
add
aad
push
sbb
gs
leave
jge
jns
in
sbb
in
ins
imul
mov
nop
lahf
dec
mov
sub
xor
mov
call
add
out
out
test
rol
bnd
aas
std
imul
push
(bad)
(bad)
in
pop
and
or
cmp
gs
or
fiadd
ret
es
loope
dec
xchg
xchg
aam
add
jae
cld
in
cwde
(bad)
mov
hlt
push
int3
add
jecxz
xor
mov
data16
inc
mov
ret
push
mov
mov
xor
xor
test
cmp
sbb
mov
(bad)
inc
in
lds
bound
stos
mov
push
stc
in
adc
inc
retf
ret
popa
dec
popf
adc
call
mov
(bad)
and
and
or
aam
hlt
sahf
and
outs
xchg
hlt
cld
ds
push
aas
push
add
mov
push
inc
cli
mov
mov
fidiv
les
sub
fld
hlt
cmp
sbb
push
out
or
or
xlat
movs
or
xchg
repnz
lds
cdq
movs
inc
and
push
jo
popa
dec
call
inc
std
push
adc
ss
add
push
out
dec
leave
inc
dec
mov
mov
mov
xchg
dec
push
scas
adc
cmc
pushf
jge
xchg
loope
jp
in
lahf
add
inc
push
cmp
daa
push
xchg
add
jle
gs
test
out
mov
inc
pushf
sub
iret
sbb
jmp
cmp
sub
imul
pusha
(bad)
mov
adc
mov
fdiv
sbb
jecxz
sbb
or
test
movs
adc
les
xor
and
adc
pop
aas
dec
aam
(bad)
adc
repnz
cmps
test
mov
ret
jp
push
leave
sbb
aam
dec
fiadd
mov
loop
in
sub
inc
jb
dec
inc
pop
mov
inc
and
mov
push
dec
lock
shr
enter
sbb
push
cs
lds
dec
xchg
fdivr
das
(bad)
sub
bound
pop
sbb
enter
pop
and
cmp
sbb
mov
mov
and
sbb
dec
stos
out
into
cld
repz
mov
stos
push
inc
pop
mov
dec
imul
xor
cmp
dec
iret
ss
out
push
cmp
pxor
mov
xchg
mov
sbb
int3
ror
lods
ins
cmc
test
call
xor
mov
sub
out
pop
adc
or
xchg
loop
movs
(bad)
inc
loop
hlt
push
rol
xchg
arpl
movs
dec
mov
xchg
(bad)
jle
and
mov
xor
leave
sahf
cmps
mov
pop
mov
test
stos
or
mov
hlt
pusha
xchg
popf
xchg
dec
push
test
std
ja
das
sbb
fidiv
popf
ret
mov
cli
sbb
push
movs
dec
ret
adc
dec
ror
outs
test
loope
cld
and
and
lock
push
out
inc
add
dec
mov
mov
mov
jl
add
fwait
jbe
movs
cmp
outs
loop
sahf
cli
adc
push
xchg
outs
in
add
xchg
jg
and
cmp
loop
aad
jns
loopne
hlt
lods
dec
dec
lea
cmps
mov
fwait
in
jne
cmp
out
xchg
xor
mov
stc
add
fwait
push
pop
mov
inc
pushf
test
icebp
add
inc
clc
shl
stc
cmp
jge
cwde
leave
leave
xchg
out
mov
clc
aam
add
shl
std
mov
dec
push
out
jmp
call
in
or
(bad)
mov
inc
add
xchg
mov
lock
test
jg
mov
lock
ret
pop
shr
xor
xor
imul
mov
mov
iret
sub
cdq
stc
fld
mov
std
or
(bad)
inc
lahf
leave
cmps
test
into
push
out
clc
xlat
mov
mov
push
lods
pop
and
(bad)
in
dec
(bad)
add
mov
test
jl
data16
repz
add
fwait
push
adc
or
pop
pop
adc
jbe
mov
cld
sbb
data16
outs
call
mov
dec
aam
mov
test
pop
fstp
pushf
mov
sub
cld
loopne
ror
pop
nop
mov
stc
ror
xchg
sbb
sub
or
test
and
jno
xchg
movs
adc
sar
test
cmp
adc
adc
push
ins
fistp
jle
jmp
stos
fnstsw
nop
or
mov
test
push
lea
lods
cdq
jle
retf
dec
dec
adc
push
xchg
iret
pop
(bad)
iret
xchg
xlat
jle
jecxz
test
lds
sbb
push
lds
inc
outs
outs
mov
adc
xor
push
in
out
les
repz
pop
test
add
mov
jnp
ins
sub
pop
pop
fs
test
xchg
pop
into
push
and
jmp
jecxz
xor
popa
ss
cld
push
mov
mov
add
jo
gs
mov
cdq
aaa
xchg
push
or
and
push
std
andps
mov
enter
in
scas
pop
outs
mov
sbb
sahf
pusha
push
mov
adc
popf
push
mov
pop
sbb
adc
stc
rcr
lds
sbb
xchg
dec
pop
repz
push
call
mov
pop
adc
movs
mov
jle
adc
jno
mov
jae
out
pop
in
mov
sbb
adc
adc
je
sub
and
imul
jg
lock
imul
lock
push
pop
lock
push
test
xor
inc
ret
gs
ror
pop
cmp
lock
outs
aaa
pop
std
ret
adc
and
push
rcl
xchg
push
das
and
pop
enter
fstp
sub
(bad)
xor
lods
aaa
fadd
or
and
in
push
lods
xor
test
jg
test
ins
or
popf
icebp
imul
repz
inc
mov
pop
push
xor
add
aaa
push
out
cmps
or
xchg
fdiv
loop
pop
sahf
dec
inc
xlat
pop
push
sbb
mov
cmps
or
push
retf
and
cmp
sub
xchg
xchg
sbb
les
and
movs
ret
jecxz
dec
xlat
and
and
inc
sbb
(bad)
int
add
pushf
xchg
jns
stos
dec
jnp
push
fisttp
dec
rol
cli
pop
adc
pop
xor
jge
or
adc
pop
lahf
in
fcomip
jge
cmp
xor
dec
popa
out
or
std
xor
mov
les
pop
jo
mov
xor
loope
inc
inc
add
jge
loopne
test
pusha
push
add
xor
movs
push
xor
imul
imul
fisttp
push
sbb
push
ja
push
pop
xchg
mov
pop
add
ins
add
xor
or
aam
jbe
jno
lods
(bad)
cli
repz
mov
movs
aaa
push
xchg
jmp
daa
call
ins
inc
adc
pop
enter
inc
(bad)
push
test
or
xlat
ins
ror
in
out
cli
aam
cmp
fldcw
pop
fstp
icebp
repnz
ret
sbb
mov
add
jp
icebp
sbb
mov
gs
test
mov
div
mov
jge
jmp
outs
ds
sbb
cmp
enter
out
adc
sti
sti
movs
enter
sub
xchg
cli
stos
stc
xchg
retfw
adc
inc
and
movs
push
jmp
push
sbb
aas
cmp
mov
aad
cmp
dec
jg
loopne
sbb
lea
mov
push
sti
pop
dec
mov
xor
sbb
call
mov
mov
push
rol
mov
nop
jecxz
ror
jg
pushf
pop
mov
leave
arpl
fsub
stos
ret
add
pop
xchg
pushf
neg
outs
mov
cmc
jg
add
sub
inc
and
push
jmp
fs
rcr
in
icebp
lahf
sub
cli
add
das
mov
mov
ret
cmps
fcmovu
mov
sbb
adc
cmp
xor
mov
xor
and
and
dec
cdq
(bad)
ins
repz
push
mov
dec
aad
pop
iret
int
out
xchg
mov
fdivr
pop
shl
push
rol
imul
push
jbe
xor
and
or
cmp
adc
cld
call
jnp
neg
xor
xchg
jne
cs
pop
scas
sub
jns
adc
je
cmovl
in
push
pushf
or
fidivr
and
dec
(bad)
adc
dec
in
sbb
sbb
add
out
sbb
inc
add
inc
or
test
div
scas
inc
lods
fwait
loop
pop
mov
pop
mov
sub
add
divps
jnp
and
test
fisub
cli
test
clc
mov
mov
loope
clc
xor
outs
loop
pop
into
cdq
cmp
(bad)
mov
call
adc
push
movs
and
(bad)
jno
pop
shr
pop
cmp
xchg
inc
mov
jnp
mov
test
jne
call
pop
mov
push
test
push
sub
and
jl
push
add
adc
fcom
ficom
pop
mov
mov
mov
jne
mov
and
test
rol
push
dec
call
push
pop
push
sub
pop
inc
test
imul
sub
jmp
pushf
setl
and
mov
jns
xchg
cmp
ret
jns
bound
inc
or
sub
mov
test
outs
enter
ja
in
mov
mov
xchg
inc
pusha
ret
(bad)
mov
cmc
jne
les
push
mov
xchg
movs
mov
icebp
dec
pusha
jg
inc
movs
ss
scas
inc
(bad)
inc
scas
movs
popa
fsubrp
add
not
int3
cld
push
shl
or
pop
push
push
repnz
pop
jmp
imul
pusha
call
add
adc
gs
jmp
test
xor
js
add
shr
mov
aaa
pop
shl
fsub
mov
imul
mov
adc
add
sub
adc
stos
xlat
dec
push
dec
jmp
inc
cmp
mov
mov
add
mov
sti
ja
or
push
nop
lahf
dec
ins
pop
ja
in
cmp
adc
lods
mov
and
stc
inc
ja
adc
xchg
and
push
jne
sub
test
xchg
push
jmp
cwde
in
lahf
pop
lahf
inc
or
adc
push
das
sub
mov
add
fidivr
cs
push
call
mov
push
in
cmp
pop
(bad)
fcom
lds
iret
push
mov
fisttp
xor
clc
push
fwait
jge
cmp
ss
ja
pop
mov
and
jge
outs
sti
xchg
shl
arpl
es
and
cmp
cmps
sub
jns
loop
loope
push
and
and
stc
jmp
aas
mov
(bad)
lock
fld
ins
add
mov
ret
xchg
xchg
mov
je
dec
cmp
mov
sub
push
xchg
or
adc
xchg
not
data16
mov
mov
mov
add
nop
inc
and
add
xor
test
aam
mov
adc
jno
jle
add
call
mov
cmp
in
mov
xor
push
addr16
lock
mov
xor
xchg
dec
jno
mov
ret
jne
mov
test
shl
inc
push
or
jo
ret
inc
call
xchg
out
xchg
sbb
pop
push
adc
fsubr
inc
xor
xor
in
ja
jecxz
inc
dec
sbb
es
mov
add
or
xchg
imul
fwait
xor
jl
mov
sub
ds
mov
dec
shl
sbb
fwait
icebp
add
xchg
add
loop
push
daa
xor
pop
scas
jae
sbb
out
add
scas
es
add
imul
push
scas
rcr
add
sub
push
xchg
arpl
sub
mov
into
xor
pop
test
and
fisub
dec
in
sbb
pop
mov
dec
popf
ins
cmc
adc
push
mov
imul
test
jle
or
movs
or
or
test
pop
mov
(bad)
pop
cmp
jno
nop
(bad)
jo
ds
inc
adc
inc
ret
dec
jne
cmps
mov
repz
xlat
sbb
push
cmp
bound
mov
and
test
pop
jmp
outs
mov
call
jns
imul
pop
cmps
les
hlt
sub
call
xchg
push
lock
test
sbb
dec
mov
sbb
xor
fcom
repnz
mov
(bad)
cmp
mov
stos
(bad)
(bad)
mov
aam
jmp
add
mov
sbb
push
pop
xchg
or
sbb
sbb
xchg
ror
ror
inc
xchg
mov
and
jge
call
mov
dec
ret
jbe
xchg
cmp
push
and
and
sub
mov
fdivr
popf
inc
retf
mov
inc
pop
loop
xchg
pop
xor
add
data16
rcl
inc
int3
les
inc
movs
shl
xor
outs
in
adc
xor
and
jbe
mov
aam
inc
cmc
add
pop
stos
into
(bad)
outs
jns
ss
in
inc
callw
jl
xlat
mov
push
sbb
pop
jne
je
jns
pop
ss
mov
popf
ja
inc
jge
gs
cmp
mov
or
jo
adc
jg
repnz
xor
lods
lock
and
inc
and
cld
(bad)
pop
dec
cmp
or
jbe
xchg
add
in
es
mov
rcl
dec
xlat
add
and
push
inc
mov
inc
lods
leave
inc
cdq
jle
mov
fnstcw
stos
add
mov
xchg
jg
icebp
xlat
jmp
clc
pusha
push
mov
test
pop
push
(bad)
outs
xchg
xor
pop
stc
std
jl
jmp
cli
push
xor
dec
aaa
ss
jle
and
(bad)
(bad)
pop
sar
int
retf
pop
mov
jns
xchg
sar
icebp
jae
mov
dec
adc
mov
sbb
adc
jge
and
push
fdiv
sbb
je
aaa
mov
fwait
int
xchg
pop
and
call
out
cmp
and
dec
jp
mov
mov
in
mov
movs
jnp
cmps
xchg
or
and
enter
pop
or
in
xchg
sbb
push
aam
mov
sahf
(bad)
adc
jns
fist
dec
add
mov
rcl
mov
add
xor
mov
xchg
jb
sbb
jae
mov
mov
inc
ffreep
cld
(bad)
imul
cmp
and
dec
jb
inc
sub
pop
push
mov
pop
push
dec
mov
jmp
imul
rcr
pop
jmp
push
jb
and
push
in
ret
push
out
mov
stos
sbb
aam
xor
out
js
stos
or
sbb
push
xor
or
shr
sub
mov
fdivr
imul
in
xacquire
pop
jns
cld
imul
push
and
int
or
dec
pop
cmp
inc
pop
aad
push
add
inc
cmp
mov
jbe
xchg
pushf
retf
mov
(bad)
jecxz
mov
jg
jns
mov
mov
call
xor
cmps
mov
ret
and
das
push
mov
sub
call
xchg
ror
fst
cmps
es
pop
ins
cld
mov
sub
jp
ror
sub
mov
xor
movs
sbb
test
pop
inc
or
jp
add
xchg
in
cmps
hlt
test
sbb
xchg
sbb
(bad)
jp
stos
fimul
xor
outs
shl
sub
add
xchg
fnstcw
pop
popa
stos
jle
adc
push
int3
(bad)
jb
xchg
jno
sub
pop
test
add
push
imul
mov
cmp
sub
adc
jmp
add
xor
bound
pop
push
popf
mov
(bad)
(bad)
mov
and
or
retf
mov
xchg
cmp
and
icebp
imul
cmp
popa
cmp
fwait
jno
mov
sub
rcr
ret
imul
test
mov
mov
jns
add
cmps
scas
movs
inc
mov
das
in
out
adc
out
add
in
cwde
out
daa
inc
(bad)
sbb
adc
push
iret
movs
mov
aad
test
gs
mov
test
fadd
adc
inc
adc
vminss
daa
mov
sub
sub
cld
xor
mov
sub
sub
cwde
cld
cmp
and
movs
das
(bad)
out
pop
nop
cmp
adc
mov
fst
leave
xchg
sub
data16
adc
mov
(bad)
mov
adc
dec
adc
out
rcl
(bad)
outs
retf
pop
pop
out
movs
pop
mov
push
push
popa
dec
js
jns
or
daa
repnz
sbb
push
jo
xchg
adc
xlat
out
dec
mov
jl
mov
rol
sub
cmc
mov
dec
mov
add
mov
jecxz
sbb
fmul
jge
mov
sbb
or
mov
jmp
shl
sbb
adc
push
push
mov
xor
cmc
lods
loop
bts
inc
loop
stos
xor
push
scas
lahf
mov
xchg
popa
cmc
jecxz
dec
mov
out
xor
inc
stos
mov
dec
rep
mov
push
adc
pusha
inc
cli
lds
(bad)
cmps
inc
je
loop
loope
inc
push
cmp
add
int
mov
push
mov
adc
jecxz
jp
icebp
enter
int
and
aad
mov
pop
mov
lock
adc
sub
inc
rcr
std
push
retf
push
int3
bound
js
inc
inc
bound
sub
idiv
inc
aam
sub
add
(bad)
mov
(bad)
(bad)
hlt
cmp
mov
pop
movs
cwde
not
ficom
rcr
imul
push
sbb
arpl
adc
jno
in
bound
stc
pop
loop
push
gs
int3
je
add
sahf
data16
push
cmp
into
cmp
sahf
cmps
daa
mov
mov
ins
mov
cmps
sbb
out
out
les
mov
sub
sub
es
xchg
mov
movs
shl
imul
popf
jns
shr
retf
jbe
push
icebp
pop
aam
push
jbe
jo
cmps
iret
dec
(bad)
mov
sbb
shr
(bad)
dec
in
pop
daa
dec
loopne
jbe
xchg
jo
gs
stos
xor
fstp
sbb
adc
sub
retf
lods
data16
or
adc
mov
mov
cmp
les
xchg
mov
pop
(bad)
ret
dec
cmp
push
mov
xchg
cs
fnstcw
scas
js
jnp
gs
stos
mov
lock
out
stos
les
jmp
je
push
mov
inc
pop
fcom
ficom
fsub
outs
adc
sub
xor
mov
jle
lock
sahf
mov
jnp
adc
push
add
(bad)
sahf
(bad)
fs
cmp
push
inc
jp
inc
cmp
xchg
push
in
nop
adc
retf
(bad)
in
sti
mov
jg
push
arpl
xchg
push
ret
imul
out
icebp
or
xor
fcmovnbe
cmp
movs
ret
enter
or
aam
jo
sub
xchg
(bad)
cwde
or
add
dec
dec
xor
les
into
xchg
push
inc
push
sub
ror
mov
cmps
fimul
xchg
adc
cmp
imul
jb
mov
sub
imul
jge
mov
call
loop
outs
or
adc
cmp
push
mul
nop
xor
cmp
pop
adc
and
mov
dec
mov
sub
dec
and
test
shl
mov
pop
movs
adc
xchg
mov
iret
mov
mov
int
ficomp
adc
add
cld
inc
xchg
push
adc
fdivr
mov
sub
in
je
adc
sub
add
mov
lea
xor
and
pop
pop
icebp
retf
out
loopne
fst
fcomip
jg
sub
int
retf
movs
int3
jp
lods
inc
enter
push
jb
mov
xchg
sub
in
stos
stos
push
cmps
(bad)
sub
jno
loop
retf
pop
pop
adc
enter
add
push
scas
ret
cmc
push
inc
pop
mov
inc
fs
shl
call
xor
jbe
imul
xchg
pop
xor
jo
add
outs
ds
sub
xor
loop
mov
xor
inc
inc
fwait
pushf
and
sbb
test
lock
xchg
mov
or
jnp
ins
dec
ficomp
fs
sar
mov
js
inc
in
push
xchg
inc
add
dec
pop
xchg
xchg
cmc
inc
iret
cmp
mov
repnz
outs
clc
and
adc
aas
add
inc
scas
pop
sub
sub
jno
inc
sar
and
fimul
jbe
std
pop
sbb
mov
xchg
retf
or
inc
jmp
adc
shl
cwde
pop
jmp
pop
test
leave
setge
xlat
mov
stos
or
into
xor
fcmovnb
xor
sub
and
lea
test
or
inc
pop
sbb
imul
cmp
stos
jns
(bad)
pop
mov
lods
push
loop
xor
pop
nop
lds
jl
mov
movnti
adc
sub
adc
shr
arpl
ins
dec
mov
sbb
cmc
imul
es
push
mov
xchg
in
aad
dec
push
fidiv
popa
push
lods
es
xchg
fcom
bnd
inc
jp
push
dec
jb
repnz
mov
leave
cli
sbb
push
mov
fwait
mov
mov
fwait
and
xor
in
sub
xor
out
jl
in
and
test
push
mov
aas
sub
cld
mov
pop
mov
mov
jp
ins
in
idiv
dec
repnz
lahf
lods
xchg
jecxz
add
repz
hlt
mov
aam
data16
retf
jbe
mov
popa
xor
loopne
inc
stos
test
cmp
std
popa
leave
or
test
clc
xchg
xor
jnp
ja
jmp
ja
les
jbe
xchg
aas
cmc
pop
push
inc
aaa
xlat
sahf
or
arpl
jl
pop
dec
cmp
mov
iret
and
or
lea
rol
fwait
push
mov
leave
xchg
cmp
cmp
pop
imul
jl
(bad)
mov
mov
fistp
movs
push
(bad)
mov
xor
stos
xchg
cwde
mov
cld
mov
pop
dec
jb
(bad)
xchg
xchg
dec
push
mov
sbb
lds
xlat
mov
adc
xchg
retf
mov
jnp
call
dec
and
jle
cld
push
or
or
daa
push
ret
scas
ret
cmp
cli
loopne
add
and
int3
cmps
data16
nop
push
adc
push
mov
xlat
cli
js
mov
loop
add
aas
push
inc
or
loop
fs
out
jmp
adc
movs
mov
jo
inc
add
mov
xchg
push
mov
xchg
mov
retf
mov
movs
lods
pop
fwait
mov
out
loopne
fistp
pushf
push
ins
sar
jmp
bound
push
sub
and
cs
cmp
jns
lea
aad
data16
xor
cmp
push
cmp
cmp
sar
pop
inc
pop
xchg
push
or
neg
inc
dec
xor
adc
and
mov
adc
arpl
das
and
mov
pop
xor
out
out
pop
xor
xor
popf
sbb
test
xchg
shr
cmp
and
inc
adc
add
and
mov
xchg
sbb
adc
in
inc
push
add
adc
mov
mov
repz
xor
push
pop
outs
fsub
(bad)
pop
cmps
(bad)
clc
mov
push
push
call
rcr
jno
xor
das
test
add
pop
xchg
das
ja
mov
sbb
mov
jle
mov
mov
push
and
xchg
stos
sar
ss
pop
mov
pop
int3
xchg
(bad)
in
xlat
inc
fisttp
pop
ins
jp
xor
or
cmp
jbe
scas
sub
lahf
(bad)
mov
xchg
lds
mov
mov
cli
pop
inc
stos
clc
int
jae
push
ins
lock
dec
adc
imul
cs
popa
pop
xchg
pop
ss
mov
adc
mov
add
ror
mov
xchg
icebp
push
je
arpl
adc
inc
or
ds
pop
out
jl
push
cmp
or
xchg
push
sar
test
clc
or
jge
and
jbe
cmp
ins
imul
mov
jae
xchg
mov
adc
ss
mov
setl
mov
sbb
cmc
test
pop
clc
inc
inc
cmp
pop
jbe
mov
leave
inc
out
ret
sahf
test
or
jne
imul
fwait
shr
addr16
pop
rcr
adc
jo
dec
inc
(bad)
hlt
mov
call
popa
and
inc
imul
call
and
cmp
ins
mov
sar
sub
leave
xchg
das
ret
xchg
or
es
test
ret
ja
(bad)
rcr
shl
aam
and
mov
adc
mov
xchg
pop
push
clc
jb
mov
inc
add
mov
les
xchg
cmp
repnz
adc
mov
mov
or
aas
dec
sbb
mov
out
sbb
mov
inc
ret
add
rcr
or
in
popf
xor
outs
movs
sar
and
test
rcl
inc
rol
xor
cmp
cmp
data16
int3
jbe
fnstcw
xchg
hlt
jle
aad
cli
test
fisttp
lds
jno
cmps
jae
(bad)
int3
mov
dec
aad
xor
fdiv
dec
pushf
xor
movs
fiadd
dec
in
aas
mov
push
popf
mov
mov
es
jmp
and
pop
cmp
inc
push
in
retf
push
push
imul
hlt
mov
lahf
pop
sbb
xchg
(bad)
pop
imul
loope
push
or
dec
pop
sbb
cmp
test
jne
jle
int
xor
loop
loopne
shl
push
test
test
pop
out
push
mov
or
mov
jmp
and
inc
dec
ret
rcr
inc
add
ror
dec
mov
sub
adc
hlt
aaa
mov
repnz
add
pop
push
fdiv
jae
enter
sub
stos
cdq
mov
mov
lds
inc
test
push
xor
sar
repz
mov
out
mov
xchg
xchg
mov
(bad)
and
inc
(bad)
scas
or
adc
(bad)
adc
aas
dec
sbb
cmp
lods
inc
in
das
push
scas
fdivr
add
(bad)
jmp
bound
call
mov
aas
enter
inc
jecxz
or
ss
add
sti
xor
pop
fcmovne
mov
dec
aam
cmps
xor
scas
mov
xor
out
jecxz
aam
in
dec
fnstcw
aad
jno
jo
sub
(bad)
dec
ja
cmp
jmp
push
mov
cmp
ret
out
std
lock
xor
add
je
mov
in
into
or
out
xchg
adc
dec
push
add
add
inc
jmp
rol
mov
in
lds
xchg
enter
sbb
xchg
mov
or
or
test
and
cmp
xchg
jns
jp
lods
retf
inc
sahf
stc
cmps
push
push
push
cmp
lea
mov
fidivr
(bad)
hlt
stos
cmc
dec
enter
sub
mov
xchg
push
cli
ffree
jmp
push
ja
pop
or
xlat
dec
cmp
stc
in
aas
sti
(bad)
dec
arpl
lods
inc
add
(bad)
fistp
in
xor
sub
inc
std
mov
add
jne
rcr
push
stc
push
ins
mov
and
add
push
daa
fwait
pushf
cmp
xchg
loopne
lea
(bad)
clc
cmp
cs
push
adc
ss
pop
arpl
lea
aaa
xchg
mov
dec
outs
movs
hlt
jecxz
push
popa
and
pop
push
push
mov
mov
xor
test
jp
pop
jbe
add
dec
cli
xor
mov
dec
adc
fidiv
retf
push
movs
call
mov
xlat
in
scas
int
dec
popf
es
fwait
sub
cdq
in
retf
daa
cmc
ret
mov
arpl
fst
push
(bad)
mov
int
(bad)
lahf
add
retf
in
mov
addr16
leave
sub
and
scas
test
movs
mov
jb
jmp
mov
jae
or
jg
inc
mov
and
cmp
jo
into
rcl
jmp
imul
jns
fs
scas
leave
mov
out
ror
sbb
and
jp
leave
mov
std
mov
pushf
scas
push
out
dec
leave
xchg
xchg
mov
les
push
mov
push
inc
inc
xor
pop
outs
cmps
pop
enter
mov
push
div
jp
or
test
dec
sbb
push
jg
out
aaa
and
add
xor
adc
pop
(bad)
mov
in
iret
test
pop
mov
ficomp
loope
sti
ds
iret
mov
mov
sub
div
loope
rcl
pop
cmp
movs
jno
hlt
hlt
dec
pusha
stc
fwait
in
sbb
enter
sbb
test
sub
addr16
sub
adc
(bad)
aam
cmp
mov
inc
sub
inc
fcomp
dec
inc
xchg
mov
mov
xchg
sbb
cmps
jl
jmp
mov
in
xchg
sub
fs
test
repz
add
pop
or
out
or
movs
mov
sub
pushf
mov
cli
jbe
fucom
(bad)
sbb
mov
jp
inc
adc
add
inc
int
ret
stc
jae
pop
in
cmp
sar
xor
out
inc
cmp
or
push
mov
movs
push
stos
adc
dec
cmp
inc
repnz
mov
mov
repz
out
xchg
stc
(bad)
xlat
jnp
sbb
imul
adc
adc
sahf
movs
clc
push
add
test
mov
daa
repz
mov
cmc
mov
adc
out
sbb
ins
mov
movs
std
push
test
xchg
cmp
jae
ret
and
add
sub
cwde
add
movs
cmp
jbe
popa
mov
jns
push
dec
xchg
cmp
cmp
mov
nop
test
jl
lds
lds
lods
mov
cmp
ja
(bad)
adc
xor
in
mov
inc
sti
lahf
mov
push
jg
shl
jl
mov
jo
jmp
(bad)
jne
div
xchg
(bad)
xor
ss
push
push
ret
jecxz
push
fimul
enter
push
pop
fiadd
mov
icebp
addr16
sbb
mov
jmp
or
cmp
pop
cmp
imul
cmps
in
xlat
int
sub
dec
scas
loop
mov
jno
enter
cdq
push
pusha
out
lahf
in
dec
or
(bad)
dec
cmp
push
mov
loop
jne
xchg
inc
addr16
inc
test
inc
sbb
add
inc
lahf
and
push
cmps
lock
outs
mul
add
push
pop
shl
and
aad
push
in
adc
inc
jns
mov
popf
jno
and
sbb
jne
rol
retf
or
xor
mov
sahf
ins
lods
sbb
dec
xchg
mov
mov
xor
rol
cs
scas
cmp
xor
add
jae
hlt
xchg
push
into
shl
push
sbb
adc
push
or
mov
scas
xor
push
dec
jmp
pop
popa
test
sbb
mov
stos
stc
mov
movs
es
dec
stos
fnsave
jle
sub
pop
jnp
xor
inc
or
dec
dec
jb
pushf
or
das
fstp
xchg
test
push
test
inc
stos
outs
imul
and
xor
sti
pop
div
call
iret
cwde
sar
retf
jae
xlat
popa
fmul
adc
dec
sub
add
aas
push
aaa
fldcw
add
mov
and
fmul
jmp
icebp
sbb
adc
cmp
scas
mov
dec
mov
mov
dec
ror
dec
or
push
push
ret
xlat
neg
mov
ss
fsub
xchg
dec
aam
out
arpl
push
mov
inc
movs
rcl
or
fs
mov
sub
push
aaa
test
addr16
xor
jo
push
pop
lods
lahf
pop
inc
(bad)
test
and
shl
sub
and
jae
inc
pop
add
mov
retf
mov
mov
sub
ins
iret
cmc
stc
sub
dec
or
inc
les
jnp
xor
out
fld
xor
test
mov
in
push
mov
les
repz
addr16
das
xor
test
dec
jne
(bad)
add
jbe
add
call
push
fild
jo
or
sar
aaa
mov
lock
cmp
data16
xchg
cmp
(bad)
cmps
test
jecxz
aas
aad
test
mov
out
cmps
push
push
xchg
push
gs
push
sbb
ffree
xor
sbb
std
gs
ins
sub
daa
pop
pop
xchg
xchg
xchg
jge
sub
xorps
push
xchg
jge
sub
ins
pop
ins
xor
shl
sub
popa
xchg
movs
mov
pop
push
sti
cld
jae
sbb
add
lock
mov
mov
aas
leave
cmp
das
fcom
mov
add
pop
ficom
sub
mul
mov
movs
add
xchg
xchg
add
je
xor
in
fimul
lods
pop
test
jmp
xchg
xchg
loop
xor
(bad)
das
test
loope
cmp
(bad)
imul
lahf
sub
push
sub
sub
mov
rol
xor
sub
mov
lahf
icebp
push
repz
les
or
mov
xchg
push
fisub
or
jge
cwde
ja
sti
mov
mul
pusha
or
push
jns
cmps
sub
leave
sub
xor
ss
fsubr
mov
stc
adc
retf
jp
cmp
sub
pop
cmps
fimul
dec
stos
rcr
cmc
(bad)
mov
test
lea
push
sub
leave
xchg
cdq
fidivr
lods
jl
call
imul
int3
pop
outs
sub
sub
dec
mov
mov
inc
es
mov
ja
fstp
mov
push
xchg
xchg
std
pop
xchg
jle
and
inc
or
mov
rol
or
iret
ret
scas
jmp
test
pop
cmps
sbb
fwait
gs
and
cmp
movs
or
xchg
and
ja
out
pop
mov
inc
mov
cmp
and
movs
jae
mov
fsubr
jne
sbb
mov
inc
push
fistp
popa
mov
adc
sbb
jp
cmp
sub
fistp
in
sub
mov
(bad)
xchg
aam
(bad)
enter
out
sbb
add
pop
int
aaa
ret
nop
xchg
xor
ja
jecxz
mov
sbb
mov
sbb
std
test
push
(bad)
mov
dec
arpl
rol
test
(bad)
call
iret
xchg
jno
mov
xchg
jb
mov
sbb
or
mov
pop
pusha
dec
lods
xlat
leave
or
mov
sub
lods
sbb
xchg
ret
pop
movs
add
push
inc
sbb
and
test
(bad)
jo
mov
adc
or
cmps
ja
das
cmp
pop
lock
push
in
aad
pop
push
xchg
inc
jnp
xor
out
hlt
data16
jno
inc
cli
xchg
cmp
dec
stos
or
fisttp
js
fist
mov
or
adc
adc
sub
es
mov
cld
jmp
retf
sbb
test
sbb
ret
shr
fucom
call
mov
scas
fsubr
mov
popf
lahf
push
lds
aaa
pushf
sti
pop
push
push
stos
jnp
jmp
xor
mov
jmp
stos
xor
cwde
loope
int
aas
aam
mov
cmp
in
jmp
mov
fdivrp
in
arpl
repnz
jecxz
push
in
aad
out
cdq
mov
pop
scas
pop
push
fnsave
jp
mov
inc
mov
xchg
fimul
mov
out
mov
dec
(bad)
je
or
lea
shr
jle
adc
ret
mov
mov
stos
xchg
shr
dec
cs
not
push
jmp
jae
push
push
fcmovu
inc
scas
push
adc
lods
retf
aaa
fucomip
jl
lods
es
icebp
(bad)
jp
or
bound
xchg
in
stos
mov
mov
lods
xor
mov
pop
push
pop
cmp
push
leave
je
enter
jmp
imul
rcr
(bad)
pop
dec
pushf
mov
push
sbb
sbb
sbb
dec
or
out
dec
pop
mov
mov
adc
das
dec
mov
stos
bound
lea
scas
mov
add
pop
push
imul
sbb
jecxz
cwde
rcr
mov
inc
lock
xchg
push
sub
jo
(bad)
repnz
repnz
xchg
pushf
push
out
cld
push
xchg
hlt
bound
inc
sub
pushf
(bad)
mov
test
sbb
jge
fwait
sahf
js
adc
inc
add
pusha
(bad)
mov
mov
mov
dec
sub
dec
sub
pop
inc
pusha
xchg
scas
std
pop
pop
nop
jge
dec
dec
jo
mov
call
test
cmp
xchg
xor
and
out
mov
or
xchg
test
inc
sbb
(bad)
xchg
and
aad
test
pop
xor
pop
dec
and
out
out
jb
jne
and
add
ret
dec
rcr
test
int
sub
jmp
cmps
pop
outs
push
je
adc
js
out
sub
retf
mov
pop
cld
aaa
push
lods
ret
stos
xchg
add
outs
lock
push
push
rol
or
arpl
outs
in
sub
fs
jbe
xor
lea
sub
cmps
mov
iret
stos
xchg
dec
xor
call
inc
xlat
adc
sti
jae
mov
pop
pop
dec
or
cdq
js
dec
(bad)
out
arpl
jnp
jge
adc
fcmovne
inc
sti
and
dec
cwde
mov
(bad)
and
rol
popa
mov
dec
jnp
xchg
popf
push
cli
or
cmp
pushf
add
cmp
ret
hlt
mov
dec
outs
jns
add
xchg
sbb
add
push
jmp
lods
jb
scas
push
sub
test
bound
int
fnstenv
sahf
add
retf
arpl
addr16
inc
iret
adc
pop
pop
out
inc
in
inc
pop
mov
sbb
enter
stc
lock
popa
pop
add
aad
repnz
aaa
int3
repnz
xor
push
mov
ja
mov
arpl
mov
mov
iret
or
mov
out
into
pusha
mov
inc
nop
pushf
loop
test
push
shr
pop
lods
gs
loopne
mov
scas
retf
ror
into
scas
jns
xchg
or
jbe
icebp
retf
xor
push
xor
rcr
sbb
sbb
fs
dec
pop
add
push
gs
or
push
nop
test
sub
inc
cmp
pop
xchg
push
retf
dec
test
push
or
daa
ins
push
mov
or
jne
inc
or
jae
xlat
icebp
std
in
test
sahf
cmp
sbb
(bad)
dec
mov
push
daa
sbb
inc
jg
ret
push
xchg
test
arpl
mov
fwait
dec
jae
idiv
dec
sub
test
mov
xor
in
out
hlt
sbb
adc
cmp
and
stc
xor
inc
mov
adc
xor
imul
inc
and
jae
hlt
add
sar
jmp
pop
or
pop
dec
xchg
cdq
mov
stos
dec
inc
cmc
sbb
clc
fcomp
data16
xor
ss
fiadd
inc
push
mov
add
xchg
dec
lahf
dec
jg
fmul
inc
scas
or
loopne
loop
jmp
xchg
adc
and
push
fisub
push
push
clc
push
lea
add
cs
jo
or
pop
mov
mov
jae
xor
pop
jbe
pop
mov
cmp
and
fisubr
push
jnp
ret
dec
and
lea
xor
call
dec
retf
(bad)
(bad)
lahf
(bad)
pop
mov
stos
out
shl
push
sub
add
lods
in
adc
lds
and
mov
fcomp
cli
fxch
ins
(bad)
xor
loopne
imul
jl
call
inc
mov
sbb
mov
scas
imul
out
jo
fcmove
adc
push
das
xchg
stc
std
out
jo
mul
ins
popa
mov
add
dec
int
jno
pop
fbld
or
je
nop
fst
fs
jge
adc
ja
push
push
mov
and
enter
add
lock
add
outs
sbb
push
cli
mov
xchg
pop
and
jb
lods
ja
push
shl
mov
int3
xor
cmp
and
gs
pop
out
movs
jmp
loop
icebp
pop
addr16
and
push
stos
inc
out
and
jne
data16
sbb
into
dec
out
add
push
pop
inc
cmc
les
clc
and
mov
frstor
add
sti
test
or
lahf
cmp
push
inc
repnz
xor
lods
dec
enter
jecxz
pop
pop
leave
or
or
sub
(bad)
mov
pop
mov
xchg
popa
jge
cmc
jg
(bad)
(bad)
pop
loop
fst
and
push
and
push
sbb
(bad)
xchg
xchg
adc
mov
mov
scas
dec
imul
imul
sub
push
jmp
ja
mov
pop
popa
jo
fnstsw
pop
push
shl
inc
movs
ins
push
sbb
test
sahf
ds
sub
mov
dec
shr
in
jge
pusha
jge
int3
mov
fst
into
or
pop
pop
in
repz
cmp
cmc
(bad)
jmp
push
mul
dec
jns
inc
addr16
icebp
jle
popf
push
cli
push
sub
es
je
mov
inc
aad
hlt
cmp
(bad)
dec
(bad)
jns
pop
xchg
popf
pop
lea
xchg
jo
ins
dec
or
sub
mov
sbb
cmp
aaa
in
jbe
xchg
mov
out
xchg
pusha
bound
pcmpeqd
popa
fimul
(bad)
jnp
cmp
or
inc
lds
cmps
add
mov
in
arpl
jno
mov
mov
mov
cli
pop
mov
sbb
adc
push
cmps
pop
sbb
or
dec
jb
pop
scas
fstp
ins
xchg
jnp
sbb
mov
mov
mov
imul
lods
shr
sar
lds
dec
xchg
jp
jecxz
sti
js
xchg
imul
sbb
add
jecxz
mov
jo
mov
stos
movs
cld
cs
add
pusha
mov
(bad)
xor
pop
mov
xchg
(bad)
dec
div
(bad)
xchg
pop
pop
pop
popf
bound
dec
xchg
mov
xchg
pop
mov
mov
jmp
add
xchg
push
sbb
xor
retf
dec
sub
lea
and
js
dec
les
xlat
addr16
fiadd
mov
xchg
add
push
add
vdivpd
cmp
sub
js
rol
xchg
pop
push
xchg
pop
adc
cmps
into
xchg
adc
jg
nop
push
popa
retf
cmp
les
push
sbb
in
cmp
imul
or
addr16
mov
ins
xchg
mov
mov
cwde
sbb
loope
(bad)
inc
xchg
popf
push
and
mov
fld
mov
mov
pop
bound
fidivr
lods
sub
lea
mov
movs
dec
cmp
cmc
mov
repz
jnp
or
lock
mov
xor
mov
sti
push
dec
sbb
ds
adc
sahf
fwait
ds
repnz
fisub
mov
mov
jmp
retf
or
int3
fiadd
pop
push
pop
movs
inc
imul
xchg
pusha
paddw
(bad)
xchg
inc
xor
enter
dec
xchg
fidivr
outs
sub
test
xor
call
retf
pop
lahf
adc
push
shr
pushf
pop
mov
fidiv
ret
push
sahf
jmp
cld
std
sub
mov
inc
loope
(bad)
jmp
(bad)
mov
aad
js
jo
xor
(bad)
jg
sbb
hlt
cmp
sub
fistp
aas
ins
inc
pop
sub
popa
outs
and
push
call
fistp
add
lods
cwde
call
(bad)
aaa
jmp
ins
dec
adc
dec
mov
nop
aad
xor
into
int3
inc
leave
lods
inc
hlt
std
clc
jbe
xor
stos
add
cmp
lds
cmps
xor
(bad)
dec
mov
pop
in
scas
retf
pop
enter
push
adc
sub
mov
loope
sti
mov
inc
xor
pop
rcr
xchg
enter
aaa
jl
loope
mov
data16
faddp
jb
cmp
ret
xchg
mov
sbb
outs
mov
mov
mov
pop
mov
rcr
push
sahf
les
jno
inc
xor
scas
cmp
or
sbb
pushf
sar
jle
cwde
push
xor
mov
neg
xchg
xchg
sub
repnz
mov
clc
or
mov
and
and
cmp
movs
(bad)
call
std
stc
xchg
add
jb
std
jae
push
sub
mov
loop
pcmpgtd
cmp
push
and
jmp
inc
jg
add
test
aaa
sbb
xchg
int
cmps
enter
fsub
sbb
int
mov
adc
xchg
aaa
mov
adc
sub
aam
and
xchg
inc
(bad)
scas
jmp
in
sub
aam
enter
push
sti
aas
cmp
scas
add
aad
in
pop
rol
lahf
adc
jnp
xchg
arpl
lock
rcl
in
data16
test
out
sbb
xor
add
scas
sbb
test
and
ins
ds
push
fld
hlt
fs
or
ins
test
fst
adc
les
mov
inc
idiv
mov
hlt
and
sbb
mov
das
in
test
es
out
jmp
lock
push
shr
repnz
mov
cli
lock
push
add
jb
call
loope
dec
popf
test
mov
cwde
int3
adc
push
int3
not
mov
inc
push
out
adc
movs
cmp
jg
popa
ss
jecxz
dec
adc
or
sbb
jg
mov
and
xchg
jmp
lahf
in
mov
imul
stos
cmps
xchg
rcl
std
jle
test
and
frstor
pop
mov
aad
add
das
fcomi
mov
stos
or
imul
xor
dec
neg
dec
cs
jnp
ret
bnd
jmp
dec
in
dec
mov
cdq
les
fsubr
(bad)
sub
popf
mov
lock
push
call
mov
fnstcw
push
cmp
test
ja
mov
out
sub
call
aaa
sub
data16
rol
aad
popf
mov
and
cli
jae
test
or
push
xchg
push
cmp
into
fst
inc
xchg
int3
mov
pop
ret
in
leave
inc
lds
xchg
ret
xchg
dec
adc
aam
push
add
adc
or
and
loopne
sahf
ins
cmp
repnz
arpl
cmp
adc
(bad)
jns
adc
mov
xor
shl
xor
push
push
pop
xchg
pop
and
jno
mov
(bad)
xchg
into
cmps
and
sub
ja
in
loope
mov
xchg
call
icebp
fucom
push
or
rcr
fidiv
xor
mov
inc
ins
cld
xor
jmp
lds
out
push
push
mov
push
pop
hlt
mov
scas
jo
xchg
xchg
test
add
out
xor
in
mov
(bad)
and
cmp
repz
mov
repnz
lds
js
jne
cmps
xchg
inc
sbb
nop
mov
inc
cmp
shr
jl
dec
push
pop
aam
push
lock
mov
dec
jmp
jno
shl
ret
popf
(bad)
stc
pop
cmp
inc
ds
add
daa
js
mov
retf
ins
retf
jne
mov
ds
pop
repz
stc
(bad)
int3
adc
retf
dec
jne
jns
dec
pop
pop
cmp
mov
mov
inc
popa
or
or
mov
and
in
dec
sub
push
adc
push
cmp
(bad)
cmp
and
pop
push
sub
jg
into
das
ja
sahf
and
sub
pushf
jmp
add
adc
enter
jb
inc
js
mov
mov
dec
sub
lahf
xor
jg
mov
mov
adc
rol
pop
fs
sub
mov
add
out
(bad)
cmps
jge
in
jg
cld
dec
xor
xchg
jo
dec
in
call
retf
inc
mov
xor
es
jb
xchg
inc
cli
jp
rcr
push
mov
pop
int
stos
jae
repz
push
rcl
rol
adc
xor
mov
mov
test
imul
push
shl
daa
adc
pop
lock
mov
scas
inc
inc
push
sbb
fistp
mov
xlat
inc
sar
inc
sbb
push
or
in
loope
pusha
arpl
loope
cmp
ds
ins
sbb
sar
jo
mov
(bad)
xchg
jmp
inc
dec
mov
outs
pop
dec
movs
fdiv
dec
dec
jne
imul
mov
arpl
and
jg
pusha
adc
cmps
lea
jp
add
push
rcr
cmps
iret
xchg
adc
in
xchg
mov
xchg
idiv
fisubr
jno
aas
jns
xor
popf
pop
push
mov
add
cli
popa
jbe
es
div
or
fprem1
sahf
mov
inc
iret
cdq
ror
stos
xchg
in
cli
push
stos
push
shl
call
shr
ret
xchg
or
mov
imul
jb
popf
xor
adc
stos
clc
or
test
push
aam
and
add
lds
icebp
test
dec
adc
(bad)
adc
cmc
(bad)
cmp
sub
cmp
or
or
inc
pop
xor
hlt
ja
and
jmp
mov
inc
sub
push
cmp
xor
cmp
icebp
inc
xor
(bad)
and
cmc
arpl
mov
ja
mov
les
in
mov
(bad)
add
loope
cmc
(bad)
push
jp
sbb
sub
mov
retf
ret
imul
jbe
sub
jns
into
imul
pop
add
xor
inc
retf
adc
adc
adc
mov
pop
stc
sbb
fwait
adc
mov
daa
fisttp
mov
pop
loope
mov
sub
out
les
les
cld
xchg
stos
push
test
fisttp
pop
push
ss
xchg
mov
inc
ins
lea
(bad)
daa
cli
push
movs
dec
movs
mov
loopne
test
add
pusha
out
xor
sbb
add
inc
sahf
lahf
retf
cmps
mov
lods
(bad)
inc
xor
add
dec
retf
lock
leave
and
fnstenv
pop
stc
mov
mov
popa
push
cmp
xor
jmp
add
xor
cmp
push
mov
vcvttpd2dq
fsubr
ja
ret
mov
jle
and
or
push
sbb
add
xor
pop
lds
pop
mov
push
xchg
cmps
adc
push
inc
cwde
jmp
(bad)
fst
sti
sbb
jb
stos
(bad)
psubsb
scas
pop
mov
rcr
and
retf
mov
stos
gs
scas
rcl
mov
stos
push
mov
or
fmul
rol
test
mov
mov
in
int3
xor
cmp
data16
fnstsw
int3
add
mov
pop
jp
lods
xchg
xor
add
pop
push
push
in
outs
call
dec
inc
add
or
stos
jmp
lds
xchg
(bad)
mov
push
mov
loopne
std
push
cmc
xchg
push
ror
add
lea
mov
mov
cld
and
xor
xchg
in
sti
cs
mov
cmp
add
inc
dec
push
xchg
ret
sahf
sub
imul
int
bound
pop
add
cmp
mov
fisub
jmp
test
cdq
cld
push
adc
push
mov
pop
cmp
cwde
adc
xor
test
into
sub
cli
mov
call
xor
push
fadd
pop
pop
sbb
fiadd
popf
and
mov
pushf
in
adc
ds
les
fcomp
int3
push
mov
jmp
aam
sbb
das
inc
ins
mov
and
cmc
add
pop
push
call
inc
and
test
inc
gs
out
inc
jmp
in
ins
fnstcw
dec
fimul
lock
mov
mov
adc
js
jno
je
xor
sti
bound
jo
mov
pop
push
jo
push
shr
lock
lods
xor
dec
loope
push
lods
neg
movs
cmp
fistp
jmp
lds
inc
cmps
or
(bad)
fdiv
jle
and
add
inc
and
adc
push
repnz
mov
xchg
xchg
in
sbb
test
lods
mov
mov
mov
dec
movs
lock
mov
mov
xchg
inc
mov
mov
mov
(bad)
fucomi
push
mov
lds
jnp
and
cmp
push
repnz
cs
les
in
dec
or
dec
fadd
loop
pop
into
mov
push
cli
mov
sar
(bad)
fldcw
inc
adc
jle
call
loope
add
aad
add
xor
inc
jecxz
loope
out
mov
pop
(bad)
iret
jo
inc
sti
mov
push
scas
vmovupd
mov
xor
push
push
mov
xor
push
(bad)
jo
out
adc
xchg
inc
int3
in
lea
jb
test
fwait
or
lods
stos
jno
mov
sbb
in
pop
not
or
dec
fiadd
fnstenv
(bad)
jno
outs
(bad)
jmp
js
mov
mov
arpl
stos
addr16
pop
dec
test
shl
rol
test
test
aad
mov
pop
loopne
xchg
pop
(bad)
pop
sub
add
cli
xchg
out
mov
cli
gs
push
mov
in
xor
pop
push
pop
xor
xor
cmp
adc
xchg
cs
retf
and
call
mov
repz
sub
push
mov
sub
pop
jmp
xor
clc
xchg
mov
xchg
xchg
add
test
dec
xchg
add
popf
inc
dec
cmp
mov
out
jnp
and
pop
std
and
stos
mov
jmp
out
lahf
arpl
pop
leave
mov
or
cmp
adc
xor
pusha
jnp
adc
jns
xchg
arpl
hlt
mov
sbb
mov
and
sub
pop
into
or
popa
mov
js
(bad)
stc
xchg
adc
sar
sbb
sbb
cwde
sar
das
int3
test
test
hlt
sbb
data16
fisttp
ret
int3
adc
mov
inc
sub
add
das
dec
sub
in
push
inc
push
mov
lock
cwde
sbb
fisub
lods
fst
ins
cmp
ss
lea
dec
jge
and
pop
add
adc
xor
into
inc
and
push
xor
mov
aas
push
ret
mov
pop
lods
or
and
loope
fidiv
test
xchg
cmc
mov
xor
and
dec
sar
ins
pop
stc
add
outs
sti
(bad)
adc
sub
xor
lods
push
xchg
add
shl
mov
pop
xchg
xchg
mov
fistp
fist
in
cs
je
(bad)
aad
outs
pop
jle
jle
inc
xchg
lea
xor
mov
leave
shr
cmp
je
lods
ficom
mov
add
jmp
lahf
retf
cmp
mov
ror
cmp
iret
mov
rcr
xor
and
add
add
(bad)
stos
pop
pop
adc
jns
iret
adc
fadd
xor
sbb
or
shr
mov
into
or
fld
ror
sub
not
mov
cmp
retf
cmp
sbb
cdq
jno
add
mov
loopne
cmp
lods
dec
add
popa
int3
or
push
pop
fwait
push
mov
pop
push
shl
mov
cld
cli
mov
mov
out
fistp
and
xchg
addr16
adc
cmp
mov
pop
fidivr
xchg
jae
das
fwait
aad
popf
pop
std
mov
dec
stos
push
sub
ss
sbb
mov
pushf
mov
and
cld
nop
xor
mov
js
or
xchg
ror
pop
jmp
or
mov
cli
pop
cmova
hlt
ret
xchg
sahf
jge
inc
dec
aas
jbe
or
test
lds
dec
lahf
or
xor
inc
in
pusha
mov
daa
adc
pushf
das
mov
push
idiv
je
mov
scas
das
(bad)
mov
test
js
iret
pushf
or
pop
and
imul
mov
push
aaa
jnp
pop
ret
jl
std
fsub
mov
int
js
movs
jmp
fistp
adc
xor
pop
push
push
addr16
add
jne
and
shr
les
call
jmp
scas
imul
loope
aam
js
and
jno
call
leave
outs
ror
fsubrp
cmp
jp
push
fbld
clc
pop
inc
ja
outs
or
push
dec
push
sbb
arpl
jmp
pop
out
jbe
fist
push
enter
fmul
lahf
aam
mov
out
cmp
out
mov
bound
jge
js
push
es
test
shr
jp
pop
fnclex
fbstp
and
xchg
push
into
clc
add
xchg
xor
inc
push
cmps
rep
(bad)
(bad)
sub
jecxz
out
xlat
enter
int3
dec
or
cmc
in
adc
cs
sbb
push
sub
sbb
pop
xchg
gs
std
std
loop
jbe
xchg
push
mov
dec
out
mov
leave
sub
dec
pop
and
leave
or
mov
call
mov
mov
pop
mov
add
pop
jno
call
and
jmp
lods
xchg
sbb
clc
lea
rcr
jns
call
jle
lock
pop
mov
jb
call
scas
popf
sbb
mov
out
cmc
jns
imul
pop
add
mov
cdq
ds
or
stc
cmp
pop
cwde
int3
sbb
dec
mov
adc
js
lods
or
daa
mov
add
iret
ss
xor
movs
push
jbe
aas
jnp
sub
mul
jbe
mov
pop
or
mov
popf
inc
cld
add
push
jae
sub
aas
ds
inc
ror
cwde
jle
cmp
pop
inc
hlt
sti
push
mov
jo
mov
inc
add
and
retf
xor
popf
sub
hlt
gs
sub
dec
(bad)
sbb
jo
daa
ja
arpl
mov
jmp
sub
pop
cmps
mov
push
test
clc
shr
lahf
add
push
pop
pop
mov
ins
sub
lds
mov
repnz
dec
inc
dec
jl
push
pop
adc
js
fbld
sti
push
mov
std
stos
fdivp
mov
into
cmp
xchg
retf
xchg
loopne
push
imul
cli
dec
or
mov
movs
stc
stos
(bad)
fild
in
jns
jae
adc
test
inc
out
inc
gs
sahf
fistp
pop
cld
jge
and
sbb
mov
enter
call
ret
sub
pusha
mov
ror
call
fsub
jle
ins
adc
push
inc
std
push
cmc
loopne
xchg
leave
pop
mov
cwde
sbb
icebp
std
or
cmp
data16
adc
aaa
cmp
test
rcl
jg
mov
xchg
pop
add
stos
push
hlt
cmp
inc
stc
lea
std
dec
fisubr
dec
adc
and
mov
dec
jmp
sub
addr16
js
add
or
jo
das
mov
cmc
cmp
add
repnz
das
das
push
jo
dec
sbb
add
sahf
sub
(bad)
mov
lds
pop
test
mov
outs
call
popa
mov
out
cmp
push
in
retf
movs
ret
out
sub
cmp
pop
sti
ins
dec
add
in
sub
add
test
test
dec
mov
stos
scas
jb
dec
dec
cwde
push
jno
dec
push
pop
mov
sub
mov
repnz
lods
sub
aaa
add
pop
gs
cmp
data16
and
dec
nop
mov
jno
or
or
push
rcr
xlat
fstp
loope
xor
lock
fldenv
mov
stc
pushf
daa
or
retf
fild
ins
xlat
mov
xor
outs
sbb
mov
mov
fisubr
arpl
jns
pop
and
mov
pop
or
sbb
cmp
cmp
scas
add
or
cmp
jo
imul
cmps
lea
stos
pop
cdq
addr16
shl
ins
pop
adc
bound
add
sbb
and
xchg
xchg
in
mov
movs
xor
dec
aaa
mov
sbb
cdq
out
popa
mov
lods
retf
ret
cwde
shld
cmps
data16
pop
mov
inc
hlt
sti
shld
in
pop
lock
les
call
stos
lahf
inc
adc
add
test
and
aas
mov
retf
(bad)
mov
cmp
push
retf
adc
push
retf
adc
dec
dec
add
mov
pop
aad
test
pop
out
or
les
cmp
pop
jle
ins
repnz
aas
fmul
std
xchg
aas
stc
aad
push
nop
adc
pop
shl
push
bound
inc
cdq
mov
jl
adc
ds
push
gs
fcom
loope
popa
fwait
ins
jno
xchg
stos
hlt
or
clc
in
mov
dec
daa
cli
pop
(bad)
(bad)
push
dec
xchg
sbb
and
das
stc
mov
push
leave
int
cwde
imul
in
mov
pop
jae
cmp
ins
mov
pop
jns
dec
jnp
or
ficom
push
pop
int
add
push
subps
add
inc
cmp
mov
inc
lahf
dec
rcl
cmp
int
imul
mov
sar
mov
in
mov
inc
jecxz
dec
jmp
push
dec
repz
imul
cmc
mov
and
jmp
jge
dec
xor
cdq
daa
adc
sub
imul
add
fs
push
out
sbb
push
out
cmp
ja
int
out
loopne
loopne
mov
int3
call
movs
es
enter
icebp
jle
ins
xchg
fistp
push
lods
lods
sti
enter
fst
mov
xor
repnz
jo
cmp
pop
sub
(bad)
push
adc
xchg
inc
cmp
stos
es
ret
stos
sub
loopne
pextrw
xchg
xlat
inc
cwde
push
nop
ret
outs
push
mov
outs
sub
out
adc
enter
sub
jl
add
or
sbb
or
dec
or
jmp
fdivp
jp
mov
mov
call
enter
pop
mov
movs
mov
aaa
or
loopne
mov
and
mov
sub
imul
(bad)
pop
pop
sub
inc
popf
les
and
outs
and
jmp
fs
cmp
movs
cmp
je
in
jle
add
xor
aas
jecxz
outs
std
dec
or
pushf
add
dec
mov
nop
je
inc
gs
xor
sar
xchg
mov
fild
pushf
xlat
cmp
pop
(bad)
xchg
inc
xchg
stc
outs
pop
aas
xor
inc
dec
pop
push
retfw
std
xchg
rcl
jnp
aaa
xchg
imul
or
adc
and
addr16
nop
(bad)
sbb
out
inc
fadd
pop
sar
(bad)
ins
mov
or
or
xor
or
loope
popf
mov
lds
pop
jle
imul
or
mov
mov
fcmovu
in
popf
imul
sub
stos
dec
mov
inc
mov
push
push
jno
xor
jno
xchg
mov
movs
jno
mov
pop
gs
sub
jno
sbb
data16
pop
mov
test
jbe
jp
(bad)
jp
call
jne
dec
sbb
pop
fadd
je
cmps
pop
gs
and
daa
retf
xchg
jae
pushf
cmp
das
mov
cmps
sub
adc
inc
cmp
jle
lea
(bad)
shr
add
lock
dec
xlat
xchg
dec
loopne
xchg
jns
cli
cmp
cld
call
jmp
push
data16
mov
push
add
adc
fnsave
lds
mov
test
ret
add
push
cmps
mov
nop
test
xchg
xor
xor
sbb
xor
rol
ins
(bad)
cmp
daa
and
jno
adc
inc
dec
addr16
push
inc
jbe
or
pushf
push
cmps
aas
adc
ins
lock
mov
lea
jnp
in
inc
aad
sub
outs
push
call
test
icebp
push
mov
out
shr
xor
sbb
sub
aam
cmps
xchg
js
adc
mov
in
xlat
adc
pop
push
sub
adc
xor
inc
mov
push
sbb
xchg
inc
cmp
leave
xchg
lahf
dec
clc
aaa
pop
lahf
in
cmp
pop
mov
in
jo
xchg
aad
scas
xor
jo
adc
and
mov
out
mov
gs
xchg
sbb
push
test
xor
mov
loop
push
mov
xor
push
adc
lods
jmp
push
(bad)
icebp
pop
shr
mov
test
repnz
fstp
inc
rol
aad
jecxz
out
mov
das
retf
push
pop
jae
in
fdiv
mov
cmp
shr
int3
mov
stos
jp
sub
jecxz
std
xor
pusha
outs
cmp
xchg
(bad)
cmp
pusha
or
xor
xor
sar
cmps
or
out
jae
cdq
and
mov
mov
jmp
fwait
or
cmp
jae
push
push
and
mov
cwde
(bad)
fistp
mov
ds
es
inc
adc
mov
xchg
fs
(bad)
sub
aaa
xchg
jmp
stos
arpl
cdq
mov
pushf
xor
(bad)
sub
pop
test
xchg
mov
jne
jns
jno
ds
(bad)
hlt
xchg
push
aad
xor
xchg
popf
adc
pop
hlt
es
push
mov
pushf
cmc
adc
sbb
adc
aas
(bad)
jno
addr16
jmp
cmp
dec
xor
jbe
lds
fcomp
lahf
push
pop
ss
mov
adc
cmp
jmp
ficom
repz
je
xor
add
jns
lods
data16
adc
and
xchg
cmc
inc
cld
adc
dec
pop
adc
sub
(bad)
or
push
outs
bound
adc
jae
add
push
je
add
inc
and
mov
ins
jnp
sahf
adc
add
mov
clc
outs
dec
add
push
cmp
or
ja
fneni(8087
and
data16
mov
test
sbb
pop
cdq
arpl
jge
cs
mov
sbb
ficomp
push
adc
loopne
sbb
cwde
sub
add
gs
jo
cli
icebp
mov
mov
add
and
sub
inc
pop
mov
(bad)
fistp
and
stc
imul
inc
mov
pop
call
pop
pop
lock
cmp
jns
ds
mov
call
cmp
xor
addr16
imul
pusha
sbb
and
jbe
aad
es
scas
out
or
pop
int
cs
jbe
aad
or
ja
lea
adc
jb
(bad)
xor
adc
sub
pushf
pop
pop
or
(bad)
jp
pop
repnz
scas
and
pop
inc
sub
(bad)
jmp
push
nop
js
ret
xlat
dec
nop
mov
mov
xchg
pop
mov
mov
daa
xor
push
out
dec
push
push
adc
jmp
ss
mov
ret
cmc
cdq
jo
call
sahf
push
mov
int
mov
push
push
frstor
cld
call
cwde
jb
enter
std
mov
mov
mov
lods
sbb
rol
xor
xor
adc
xchg
repnz
cmps
and
lods
(bad)
fwait
sbb
or
or
aam
xchg
aas
jbe
mov
cmps
shr
test
shr
call
cmps
dec
xchg
(bad)
loope
leave
dec
pop
pop
xchg
mov
fs
pop
retf
fimul
jno
mov
pusha
sbb
sub
push
jae
adc
sahf
out
inc
and
cmp
and
push
xor
aam
(bad)
mov
push
push
pop
movs
cmp
mov
jnp
es
xlat
mov
scas
cmp
test
dec
lahf
ficom
movs
jo
add
jle
outs
push
pop
sbb
je
jb
cmp
repz
xchg
clc
dec
mov
add
push
cmp
xor
clc
inc
mov
jnp
cmp
ror
mov
call
mov
stc
inc
out
nop
pop
call
pop
sbb
add
add
jmp
push
jbe
inc
jo
cmp
fcomip
icebp
pop
pop
out
movs
dec
cmp
fisub
in
add
dec
mov
lods
clc
out
pop
mov
cli
rcr
aaa
sbb
movs
sti
ds
mov
push
js
(bad)
mov
fnsave
add
in
fs
dec
imul
push
mov
cmp
js
ss
scas
in
push
lock
(bad)
mov
data16
sbb
xor
push
jmp
in
pop
in
cmc
sub
jnp
and
jo
aad
push
pop
es
cmp
xchg
fiadd
jb
sbb
sub
inc
cmp
inc
sub
push
aam
cmp
xchg
fs
xchg
cmp
add
pop
cmp
and
aad
dec
cs
jbe
les
call
ret
jle
lea
jle
push
fcom
gs
outs
fs
sub
cdq
out
or
int3
or
mov
push
test
pop
sbb
xchg
movs
sub
(bad)
cmc
les
stos
pop
test
adc
sbb
sbb
pop
xor
test
pop
push
push
sahf
out
mov
popa
sub
in
and
das
mov
rcl
in
stos
xchg
mov
fisubr
xchg
in
sub
cmp
mov
in
sub
ss
rcl
fs
or
jmp
mov
or
sub
mov
sti
ficomp
mov
sbb
(bad)
push
xor
mov
cwde
cmp
jle
sbb
into
out
cmc
out
and
pop
outs
push
popa
and
aam
jb
div
sti
clc
sub
shl
(bad)
aad
mov
daa
out
std
scas
test
lea
sbb
clc
inc
jle
sub
loop
loopne
xor
mov
xor
push
push
push
adc
mov
or
out
retf
cdq
cmp
rol
clc
cmp
icebp
sbb
inc
movs
sbb
outs
push
mov
and
mov
fdivp
lods
sub
pop
outs
jno
xchg
fadd
cwde
push
outs
enter
rcr
jns
dec
fdivr
and
or
ja
ret
das
shl
je
or
or
test
ret
push
sbb
sti
pop
stos
sbb
dec
push
loopne
or
out
jmp
pop
fwait
ins
and
xchg
mov
outs
call
or
jl
push
sbb
xor
push
arpl
sti
pop
aaa
gs
or
pusha
sub
or
daa
or
stos
sub
outs
scas
rcr
dec
lods
push
mov
jp
mov
ss
pop
fisubr
(bad)
(bad)
mov
cwde
call
sar
jae
push
or
test
sub
dec
aas
or
jnp
cwde
xchg
fst
xor
adc
call
adc
dec
xor
mov
mov
rol
fld
push
push
icebp
mov
out
shl
mov
ficomp
mov
std
sbb
dec
xor
pushf
leave
stos
and
stos
cmps
outs
sbb
push
(bad)
pop
pop
or
es
jne
jge
into
jne
mov
outs
adc
addr16
push
sub
jno
inc
outs
jns
or
scas
push
jns
jbe
pop
mov
mov
dec
adc
or
add
call
jl
nop
cmp
in
hlt
adc
dec
aas
inc
lods
movs
mov
dec
sub
push
inc
xchg
cmc
ins
nop
xor
xchg
or
xchg
push
enter
jle
iret
push
adc
les
or
jo
mov
xlat
or
adc
push
test
leave
push
cmc
lea
in
fwait
div
add
pop
stos
pop
loope
cmps
(bad)
mov
mov
sub
movups
mov
rep
lea
dec
jge
add
lock
cli
push
test
mov
cmps
sub
jo
repz
sub
jno
stos
jo
fwait
xchg
cmp
mov
sub
mov
mov
mov
dec
data16
sbb
stos
xchg
add
mov
movs
or
inc
add
mov
mov
mov
push
inc
push
sbb
pop
cmp
repnz
mov
stos
int
dec
pop
jp
xchg
leave
std
sub
jne
push
rcr
test
jb
repz
cld
or
push
call
xor
sahf
fldenv
(bad)
mov
outs
shl
idiv
push
lock
mov
test
adc
mov
and
jno
paddd
(bad)
push
lock
aam
mov
cli
jbe
mov
pop
fs
jmp
sub
out
fcomi
and
inc
mov
cmp
stos
shr
movs
mov
adc
stos
cmp
(bad)
paddsw
push
jl
mov
add
jg
pop
push
push
cwde
mov
xchg
xchg
jp
and
inc
dec
ficomp
or
jbe
call
and
ja
shl
cmp
push
jge
jp
rcl
jle
(bad)
mov
cmps
mov
add
pop
inc
mov
pop
clc
fadd
fld
lods
sub
cmp
cmps
daa
ds
push
movs
fisub
dec
mov
loope
xor
mov
dec
in
in
jge
push
inc
pop
sub
int3
dec
ja
and
sub
dec
push
das
adc
mov
pushf
addr16
adc
cmp
fisub
(bad)
(bad)
stc
push
mov
mov
jl
jmp
call
sub
int3
cmps
repz
mov
repnz
mov
mov
jg
mov
jmp
sub
fs
(bad)
cmp
mov
shl
cli
(bad)
test
scas
xor
repnz
xchg
or
mov
scas
cmps
arpl
call
fsub
iret
aad
fcmovbe
lods
jb
cmps
fisubr
mov
push
imul
test
popf
mov
mov
test
out
lahf
(bad)
dec
lods
xor
cmc
sub
pusha
jp
and
inc
jmp
cmp
push
push
outs
mov
inc
pop
inc
mov
push
add
xchg
test
lock
sbb
pop
and
sbb
cmp
(bad)
ret
dec
or
pop
push
retf
cmps
ret
fldcw
push
push
inc
loopne
jl
dec
push
out
sbb
mov
sbb
clc
leave
adc
aaa
mov
adc
push
test
add
popf
mov
xor
jne
and
xor
add
dec
jmp
rep
mov
test
jg
cmp
pop
test
mov
std
idiv
add
pushf
and
dec
cmp
mov
mov
mov
adc
repz
inc
dec
mov
ret
aam
das
dec
js
ins
into
adc
fcmovnb
mov
add
stc
repnz
adc
mov
sub
sti
pushf
and
test
adc
mov
in
push
mov
adc
ror
addr16
inc
or
fiadd
dec
jnp
sub
inc
sub
mov
push
out
xor
nop
outs
fwait
(bad)
movs
sbb
or
js
push
test
mov
sub
into
push
fsubr
xchg
push
xor
aad
scas
push
cmp
outs
stc
sub
les
aam
and
scas
and
adc
cld
dec
scas
or
cmp
jmp
call
das
fs
or
fild
stc
jo
es
es
pop
retf
or
(bad)
cmp
pop
cdq
xor
cmp
fs
fisubr
jl
dec
jmp
jb
jno
xor
adc
sbb
inc
out
dec
sti
push
jno
mov
dec
aaa
stc
pop
shl
and
add
int
pop
jg
jno
dec
dec
or
add
inc
mov
ja
xchg
cmp
inc
cdq
mov
cmp
dec
aaa
cmps
fnstenv
or
movs
scas
dec
pushf
ret
adc
sar
sbb
jb
or
aad
add
xlat
lods
and
jp
mov
push
push
cmp
cmps
push
mov
int
jbe
sub
or
and
aas
retf
mov
jl
jbe
rcr
mov
icebp
sahf
addr16
xchg
adc
into
pop
and
cmp
out
jge
inc
adc
stos
loopne
pop
push
test
outs
pop
dec
stc
xlat
dec
sub
movs
and
outs
jp
popa
scas
or
outs
test
pop
pop
ss
loopne
adc
sahf
jmp
adc
dec
test
mov
mov
inc
(bad)
into
xchg
pop
ret
cmp
scas
xor
es
sub
call
add
xchg
loop
and
pop
stos
xor
fsubr
daa
adc
xlat
adc
test
mov
jae
push
add
ss
jmp
push
pop
jmp
pop
rcl
add
cwde
or
leave
and
in
loope
jmp
movs
jge
out
out
ret
jno
icebp
in
inc
in
pop
lahf
push
shl
mov
mov
xchg
out
and
add
or
xchg
pop
rcr
jnp
cmp
pop
into
jmp
and
jmp
cmp
mov
mov
mov
out
push
jno
adc
cmp
cmp
fs
cmp
jg
xchg
pop
ret
mov
and
ja
push
pop
sar
inc
lds
popa
push
fdivr
cmps
cmc
adc
inc
repz
lahf
pusha
add
push
ja
fistp
push
sbb
adc
cmc
or
outs
xor
pushf
fist
xor
mov
je
ins
pop
mov
mov
into
stc
dec
inc
mov
aam
fist
jg
add
jne
dec
(bad)
fdiv
cmps
das
stc
in
pop
inc
push
mov
push
ret
pop
movq
(bad)
fwait
pop
sbb
cmp
fnstsw
test
(bad)
inc
jns
adc
or
inc
mov
xor
adc
pop
frstor
and
ins
(bad)
ret
repnz
jmp
cmp
push
test
(bad)
mov
dec
scas
xor
push
outs
push
test
adc
mov
stc
loope
sar
inc
sbb
xchg
or
lock
dec
lods
aad
or
div
das
xor
jecxz
sbb
call
icebp
mov
jae
mov
add
push
shl
xchg
pop
jg
push
popf
nop
or
inc
and
fistp
add
fs
sbb
xor
xchg
(bad)
cmc
jb
push
div
(bad)
retf
xchg
dec
std
loopne
mov
jae
retf
inc
aas
jge
adc
aas
add
xchg
inc
cdq
adc
std
and
fidiv
cmp
inc
sbb
mov
(bad)
pop
fcmovnu
cmps
cmps
or
aas
push
xchg
sbb
in
shl
lds
ret
add
pushf
icebp
enter
out
lods
sub
stos
cmp
je
mov
cmps
outs
and
test
enter
aaa
jmp
cmp
add
xchg
es
push
(bad)
sub
fdiv
mov
xchg
dec
add
add
dec
cs
cmps
scas
fwait
ins
adc
icebp
frstor
jmp
jb
jp
xchg
xchg
shr
mov
sbb
ja
pop
pop
inc
adc
imul
lds
cmp
icebp
mov
pop
dec
cmp
mov
inc
push
cli
in
mov
sub
sub
int3
add
xchg
dec
bound
xchg
pop
aam
gs
aam
test
mov
push
in
jns
aas
mov
(bad)
pop
xchg
add
or
fidiv
out
scas
or
je
fs
fimul
in
imul
imul
push
push
in
stos
jg
bound
or
icebp
jg
out
faddp
inc
loop
fsubr
cli
pop
pusha
and
jmp
inc
jecxz
jns
cmp
out
in
xchg
fisubr
xchg
loope
in
clc
cmc
add
and
mov
fwait
pop
cmc
jnp
sub
(bad)
pop
cmps
push
dec
xlat
push
and
les
loop
or
repz
pop
push
(bad)
jmp
pop
hlt
mov
daa
xchg
ins
xor
dec
or
mov
cwde
icebp
sbb
pop
add
and
stc
repz
mov
ja
jecxz
and
call
xchg
pop
mov
cdq
push
int
xor
xchg
scas
dec
mov
or
call
dec
dec
(bad)
cmp
mov
fwait
lahf
jns
and
test
shl
mov
loop
push
es
aaa
dec
adc
(bad)
pop
add
out
outs
sbb
mov
xor
mov
adc
mov
and
inc
xor
ins
cmp
cmc
arpl
shl
mov
dec
jmp
jnp
and
repz
jo
pop
outs
push
sub
popa
cmp
into
sar
inc
(bad)
ss
xchg
pop
scas
adc
inc
sub
and
mov
inc
jb
neg
outs
aam
ficomp
jne
pop
sti
or
xor
scas
aam
addr16
sub
popa
rcl
dec
pop
pop
ins
mov
rcr
jmp
ja
xor
jns
ret
mov
lds
ins
push
pop
pushf
push
call
in
mov
aas
loopne
lods
shl
and
adc
pop
jge
pop
and
mov
arpl
in
cmps
adc
xor
fbstp
lahf
cld
sbb
xor
pop
pop
sbb
cmp
mov
inc
fstp
icebp
mov
cmc
sbb
aad
push
inc
ins
xchg
push
jno
and
shl
push
sub
out
shl
into
sbb
xchg
xor
or
int3
mov
jle
cmc
xchg
stc
lea
mov
mov
(bad)
pop
ja
aam
js
fs
add
mov
xor
cmp
mov
(bad)
and
add
jno
mov
sbb
cli
push
inc
and
cli
popf
mov
seto
dec
sbb
dec
sub
mov
addr16
mov
outs
ss
fldcw
retf
add
jno
dec
dec
rol
in
sub
xchg
(bad)
test
int
lea
sub
mov
adc
adc
imul
or
pop
inc
mov
inc
jle
mov
lock
les
sub
in
(bad)
scas
cmp
std
pop
mov
fs
mov
(bad)
xchg
jns
sub
xor
dec
gs
bnd
ror
jl
shl
pop
in
or
sub
mov
push
loopne
out
mov
dec
and
sti
mov
or
jae
inc
mov
test
push
(bad)
cli
sar
cmp
lock
mov
daa
out
lods
xchg
out
(bad)
mov
ret
xor
mov
mov
nop
push
icebp
pop
mov
xor
shl
ret
jl
fisubr
js
push
add
mov
sub
call
out
sub
jp
xor
inc
jg
xchg
sar
ror
pop
(bad)
sub
pusha
rol
je
popf
push
jmp
cdq
in
(bad)
pop
es
add
out
dec
mov
pop
xchg
pop
in
outs
dec
jmp
xor
sahf
mov
mov
pop
rcr
and
xlat
les
aad
sbb
aad
jecxz
retf
(bad)
enter
xor
or
les
xchg
jp
xor
mov
jmp
into
sbb
sbb
stos
sub
fdivr
cmp
test
jmp
lock
cli
repnz
lods
(bad)
into
rcl
pop
test
loope
sbb
sub
mov
dec
mov
sbb
sub
xlat
rol
xchg
fidivr
in
sub
jno
push
mov
xor
xor
scas
out
sbb
pop
cmps
dec
xchg
div
loope
xchg
push
mov
fdiv
sbb
imul
loope
ss
cwde
xchg
pop
aas
xchg
adc
lea
cdq
or
dec
out
daa
jge
das
inc
push
adc
js
lods
fistp
add
dec
sbb
shl
sbb
xor
cli
icebp
daa
mov
lds
jnp
pop
dec
cmp
retf
mov
xchg
sbb
sub
jp
sbb
inc
bound
cmc
pop
xchg
rcl
lock
jecxz
cld
mov
xor
xor
inc
test
sbb
jmp
and
jle
jb
fsubr
pop
mov
xlat
mov
inc
adc
loope
clc
xor
sbb
inc
js
shl
dec
outs
(bad)
cdq
push
into
push
xlat
nop
mov
in
xor
sbb
jmp
dec
pop
or
add
or
pop
test
popa
repnz
push
sub
push
dec
push
mov
mov
dec
js
sbb
mov
dec
adc
cld
in
xor
xor
jecxz
inc
enter
test
or
pushf
gs
xchg
inc
dec
lods
hlt
ss
loop
or
xchg
push
in
adc
les
mov
js
inc
retf
out
add
(bad)
sub
xchg
mov
(bad)
pop
test
and
push
push
cmps
cmp
sub
scas
inc
xchg
sbb
mov
mov
cmp
test
aam
adc
mov
jno
pop
(bad)
cmp
in
(bad)
mov
out
mov
sbb
mov
lds
sbb
shl
jp
adc
xor
loop
push
jmp
xor
iret
dec
test
cmp
xlat
(bad)
fisubr
or
shr
ret
daa
push
pop
lods
test
push
sbb
fadd
inc
mov
push
jp
adc
rcl
xchg
fisub
push
adc
outs
and
lods
jmp
and
retf
xchg
in
push
jl
fldcw
mov
jmp
jmp
pop
sti
out
pushf
icebp
add
(bad)
xchg
retf
std
(bad)
dec
loopne
or
jo
sahf
lods
loope
sti
stos
add
fsubr
leave
int3
inc
sahf
push
not
adc
pop
cmps
(bad)
dec
or
xor
lods
jge
add
and
cmc
xor
jp
fdivr
call
in
sbb
pop
loope
mov
gs
neg
ror
fucomi
out
and
add
lea
pop
dec
sub
mov
cmps
mov
test
mov
hlt
add
stc
xor
repz
es
sbb
loopne
mov
ret
sub
push
jp
call
nop
in
repnz
jae
scas
push
or
or
or
sub
xor
pusha
pop
mov
out
xchg
icebp
test
call
xchg
inc
loopne
inc
pop
retf
adc
adc
and
retf
push
mov
push
cmps
cmps
int
(bad)
hlt
sbb
cdq
sub
outs
sbb
jg
mov
popf
pop
and
retf
dec
jle
mov
push
xchg
scas
fisub
fist
mov
ins
xchg
jp
xchg
ss
lods
jno
cld
iret
adc
jnp
mov
push
mov
xchg
test
fstp
pop
neg
and
cmp
jle
out
lea
cmps
and
mov
ja
mov
mov
cmovno
fisubr
loope
push
adc
ja
(bad)
(bad)
sti
call
ret
test
dec
jne
je
(bad)
mul
je
in
sub
adc
xchg
rcr
dec
dec
loop
rol
jae
pop
jmp
inc
pop
in
ja
pop
adc
ja
lahf
aas
cwde
jbe
sbb
xchg
icebp
bnd
inc
hlt
mov
and
jbe
mov
push
ss
enter
push
call
sbb
dec
cmps
test
mov
xchg
xchg
dec
or
lods
sub
imul
pop
mov
push
mov
push
jne
push
lock
cmp
and
sbb
loop
jmp
mov
xchg
les
sub
jno
xor
dec
pop
jno
sbb
je
inc
push
xor
stc
jbe
pop
(bad)
pop
pop
jne
out
mov
sbb
scas
cdq
inc
lahf
in
adc
out
pusha
call
(bad)
neg
in
test
mov
xchg
cmp
mov
push
and
loope
clc
mov
ja
sub
js
fstp
mov
inc
repz
add
ror
mov
push
arpl
jnp
pop
cmps
xchg
jg
mov
repnz
pop
std
pop
cwde
int
cmps
adc
pusha
cmp
adc
out
dec
dec
jge
cdq
scas
add
adc
jmp
pop
xor
jno
and
ins
in
data16
add
sar
je
idiv
pusha
cmp
dec
mov
popa
movs
adc
push
mov
shl
xchg
in
xor
(bad)
fisttp
test
je
inc
scas
out
add
(bad)
mov
(bad)
or
mov
out
and
cmp
test
cmp
sub
xor
sbb
mov
cld
add
mov
push
adc
test
xchg
add
outs
les
out
call
push
jno
xlat
xor
mov
mov
in
pop
in
mov
push
das
cmc
stc
daa
out
test
test
jo
push
pop
jmp
jbe
jae
pop
sahf
dec
hlt
sti
inc
jl
mov
sbb
jo
sbb
out
or
sbb
add
fwait
iret
cs
mov
sub
pop
xchg
out
pop
test
xchg
lods
aam
inc
in
fs
sbb
push
das
add
mov
repz
push
jb
loopne
adc
loopne
xlat
pop
jmp
imul
enter
jmp
adc
stos
add
xor
pop
movs
push
imul
dec
call
mov
out
cmps
cmp
movs
int
ss
and
lods
jns
clc
sub
rcr
sbb
lods
or
pop
sub
push
aam
das
nop
dec
retf
into
test
fninit
cmp
retf
xor
iret
(bad)
push
adc
sub
mov
inc
mov
call
out
add
push
and
xchg
ret
das
jae
mov
pop
push
lds
call
ret
dec
sbb
push
cmp
leave
repz
mov
fstp
dec
movs
test
dec
mov
mov
or
pop
test
std
dec
sbb
xchg
imul
adc
inc
adc
sub
mov
xor
sub
imul
mov
fcmovnbe
xchg
test
and
and
xchg
inc
pop
mov
or
sar
dec
sahf
pop
inc
and
jns
sahf
mov
and
ffreep
sub
cmps
seto
xchg
fstp
mov
mov
out
sbb
test
daa
ds
cli
xchg
popa
pushf
mov
mov
out
inc
daa
jl
movs
push
dec
push
xlat
push
mov
inc
push
xchg
dec
fiadd
out
push
sub
fxtract
or
mov
daa
xchg
scas
lea
js
dec
jnp
push
push
fiadd
imul
into
add
inc
xchg
imul
adc
fs
cdq
jne
xchg
dec
or
xchg
mov
inc
push
int3
jb
inc
outs
inc
(bad)
mov
cmps
mov
leave
movs
pop
retf
pop
pop
or
ret
sbb
sub
sub
ficom
and
xchg
and
adc
mov
mov
in
das
mov
jp
adc
cmp
ss
jg
xor
add
test
sbb
repz
sbb
aam
adc
gs
mov
add
outs
pushf
mov
cmp
mov
daa
nop
into
jp
pop
jecxz
fild
push
dec
or
fucomi
dec
cwde
inc
fs
mov
jbe
mov
ficomp
loopne
addr16
mov
sub
imul
popf
xor
push
shr
fwait
mov
test
sub
lock
bound
lds
sbb
mov
loopne
jne
adc
retf
bnd
rcl
iret
imul
mov
mov
xor
fiadd
(bad)
mov
shr
aaa
push
push
sbb
inc
loope
out
std
call
mov
mov
or
call
mov
aas
add
mov
ret
push
stc
out
cmp
jne
sub
fucom
or
adc
push
cld
test
mov
jl
mov
jns
(bad)
fidivr
xchg
cmc
mov
mov
repz
std
in
lock
pop
int3
mov
push
sbb
inc
adc
stc
xlat
mov
push
out
lods
mov
adc
es
(bad)
das
jne
or
call
shl
mov
bound
inc
sbb
adc
jno
repz
inc
mov
add
jnp
dec
imul
pop
dec
stos
add
push
pop
sbb
inc
xor
shr
push
fs
rcpps
das
js
pop
dec
push
outs
pop
mov
jg
ds
(bad)
dec
inc
daa
(bad)
or
jo
shl
adc
rcr
in
xchg
jp
pusha
fidiv
dec
lods
and
les
arpl
cmps
sbb
movs
jno
xor
sbb
stos
movs
jecxz
xlat
ja
dec
sar
test
out
repnz
cmp
in
repnz
imul
out
lea
push
pop
jmp
sbb
fwait
push
mov
lea
push
aam
mov
sub
xor
imul
movs
or
pop
das
add
outs
jo
or
in
leave
cmp
jmp
fdiv
inc
outs
jg
aam
sbb
adc
repnz
aam
mov
mov
cmps
push
jns
mov
jmp
sub
jle
mov
fbld
stos
inc
pop
pop
fisub
cdq
xchg
cld
jnp
or
pop
iret
push
inc
cmps
dec
xor
scas
pusha
inc
add
icebp
sub
imul
repnz
adc
pop
popa
pop
daa
mov
cld
ror
int3
xchg
mov
pop
int
inc
push
scas
rol
imul
or
pop
stos
jmp
nop
mov
hlt
sub
pop
dec
xchg
out
aas
xlat
imul
cmp
cmp
cmp
jg
rol
add
pop
or
in
cld
cdq
stos
test
dec
in
mov
pop
xchg
push
push
mov
cmp
lds
mov
iret
push
mov
pop
sbb
cmp
imul
outs
and
and
fs
mov
dec
icebp
and
scas
leave
loop
rcr
mov
mov
sbb
mov
daa
dec
(bad)
js
clc
rol
mov
sub
jb
mov
push
cmp
(bad)
lock
and
in
sbb
inc
adc
pop
lock
(bad)
mov
jge
jle
inc
cwde
out
xor
stos
or
fwait
pop
shr
shr
and
push
adc
sub
xchg
and
sti
inc
jecxz
adc
es
add
js
push
cmp
ror
ss
cld
lock
mov
xchg
lea
cmps
mov
fisttp
cld
popf
sub
lods
ret
mov
xor
or
inc
movs
aad
mov
lds
movs
push
mov
mov
pop
dec
jg
add
push
sar
mov
imul
dec
mov
or
retf
nop
cdq
and
xchg
fsub
repz
xchg
sar
(bad)
int3
addr16
adc
jb
hlt
(bad)
mov
jge
pop
loop
rcr
scas
fcom
mov
and
xchg
jg
neg
sub
cld
cmp
imul
pop
out
cli
and
sar
ror
and
gs
mov
cmp
aaa
adc
jge
pop
mov
adc
push
jno
mov
push
adc
adc
mov
invlpg
pop
fld
push
push
aaa
dec
fwait
imul
jnp
cmovbe
pop
(bad)
mov
cli
and
les
ret
jno
mov
dec
jne
push
cld
aad
xchg
cmps
sub
clc
(bad)
pusha
clc
mov
xchg
clc
cld
pop
inc
cmp
jnp
scas
imul
(bad)
(bad)
xchg
rol
pop
pusha
cdq
cmps
jae
leave
cs
clc
xor
mov
stos
sbb
mov
add
inc
pop
mov
pop
imul
inc
mov
inc
addr16
inc
add
sub
and
sub
inc
push
cmp
test
adc
mov
and
stos
mov
adc
sbb
stos
jae
push
and
inc
movs
sub
jecxz
out
repnz
fadd
mov
(bad)
adc
repz
jmp
not
in
mov
hlt
jne
sub
loop
dec
sub
pop
fsubr
js
jae
test
sbb
fdivr
adc
fild
std
pop
sbb
adc
dec
xchg
mov
or
pop
fst
fcomp
push
mov
sbb
xor
push
or
popf
movs
imul
cmc
std
ror
mov
pop
addr16
nop
int
ja
add
jecxz
and
or
or
mov
add
out
jno
call
fild
sub
mov
jmp
je
jmp
cs
jl
aaa
adc
shl
in
stos
jbe
out
(bad)
sahf
lds
mov
or
mov
js
leave
ss
leave
xchg
xchg
cmp
sbb
jbe
je
mov
(bad)
mov
out
gs
in
xchg
(bad)
mov
test
ins
stos
mov
jns
push
inc
neg
fist
push
aas
rcl
das
fmul
aam
or
into
jp
adc
jp
cs
(bad)
cli
jle
dec
repnz
pop
cmp
and
ret
(bad)
retf
(bad)
into
and
and
js
rol
icebp
and
jl
fist
stos
xor
es
popf
fisubr
cmp
jnp
add
cmps
(bad)
lea
xor
or
and
xchg
push
inc
inc
jns
mov
out
arpl
push
xor
and
fmul
stc
scas
push
sub
retf
ror
bound
mov
sub
xchg
mov
xlat
push
push
ins
jns
xchg
push
adc
mov
sar
in
mov
loopne
xor
sub
lods
mov
pop
das
movs
int3
sub
ss
push
lock
sbb
shl
push
mov
mov
pop
sbb
into
scas
imul
mov
jo
pop
adc
icebp
mov
lock
les
xchg
out
dec
stc
dec
stos
add
dec
sub
inc
ins
jae
inc
mov
jbe
xor
cs
mov
sti
push
gs
out
lahf
add
loopne
ss
(bad)
mov
iret
mov
in
pop
loope
dec
cmp
call
mov
xchg
xchg
jecxz
mov
cld
jo
cmp
pushf
push
lea
adc
jo
jle
fcmovu
scas
dec
popa
ror
mov
mov
fwait
pushf
cld
jb
inc
test
sbb
adc
mov
mov
add
icebp
pop
pop
xchg
mul
gs
add
pop
or
jmp
rcl
or
idiv
ret
push
in
or
xchg
cmps
ss
outs
dec
sti
cld
push
adc
aaa
test
jl
icebp
stc
out
inc
mov
and
inc
sbb
xchg
enter
daa
dec
lea
call
cmp
inc
out
xor
mov
loop
mov
inc
xchg
je
xchg
pop
and
pop
jecxz
in
and
cmps
lods
push
hlt
into
retf
xchg
push
in
pop
push
pop
sub
outs
cmp
clc
cmps
(bad)
jecxz
repz
in
sbb
iret
fwait
sbb
mov
jae
xlat
jne
nop
mov
fild
cmp
cwde
mov
pop
aaa
pop
lahf
pop
retf
sbb
sbb
jnp
adc
jns
sub
nop
fisub
xlat
mov
pop
(bad)
mov
retf
xchg
cli
scas
std
fld
loope
lods
inc
popa
retf
(bad)
pop
push
push
mov
scas
push
adc
or
rcl
mov
push
cli
and
cld
lahf
jle
xchg
call
mov
pop
mov
ss
mov
imul
test
fistp
jo
adc
mov
xchg
xor
test
mov
fldcw
inc
in
adc
xchg
in
fistp
mov
mov
icebp
test
mov
push
xchg
pop
sbb
mul
jmp
leave
sbb
hlt
sti
xor
mov
push
repz
jne
sbb
out
mov
xor
jno
retf
sbb
push
push
pushf
and
(bad)
imul
mov
scas
jae
add
push
stos
aas
xchg
nop
cwde
gs
sub
ror
sub
enter
fst
in
(bad)
(bad)
loopne
loop
jmp
push
jmp
fs
mov
imul
mov
scas
pop
inc
ins
mov
pop
jns
mov
je
dec
ins
in
adc
add
cmp
les
sbb
dec
push
or
xchg
xchg
inc
pop
adc
icebp
hlt
and
sbb
mov
(bad)
in
dec
jmp
repz
sub
scas
mov
into
xchg
pop
fcmovbe
iret
cli
xchg
lock
ds
loope
mov
xchg
mov
lods
pusha
push
or
cs
or
add
sub
xchg
fistp
mov
dec
xor
outs
call
add
cmp
sub
xchg
inc
fcmovne
add
repz
(bad)
pop
cdq
sub
in
or
pop
not
add
mov
sti
leave
jmp
shr
jbe
sub
add
mov
or
loop
in
js
aaa
fild
mov
and
lock
div
aas
mov
sti
dec
dec
xchg
aas
(bad)
jo
jle
adc
enter
or
mov
adc
jae
jg
adc
or
xor
inc
sahf
enter
add
mov
movs
ret
test
xchg
push
inc
jmp
push
fs
(bad)
cdq
adc
xchg
push
push
imul
aam
sar
ins
and
and
dec
int
jae
out
and
mov
fs
mov
dec
xchg
das
cli
mov
les
rol
addr16
sub
push
hlt
push
fild
ror
mov
adc
and
pop
xchg
mul
pop
jbe
push
or
dec
cmps
inc
add
push
cmc
repnz
push
pusha
cdq
push
mov
pop
jecxz
daa
fbstp
cmps
cmp
arpl
and
inc
shr
mov
(bad)
repnz
loop
std
out
sub
je
mov
aad
xor
jne
stos
dec
loopne
xchg
xor
arpl
jo
and
adc
push
lea
loop
movs
dec
pop
lods
es
repz
jno
dec
retf
retf
mov
xchg
les
outs
adc
xchg
jae
push
jge
cld
cmps
loop
out
in
cdq
test
pop
xchg
or
mov
adc
idiv
(bad)
aas
jl
cmps
mov
or
movs
or
fmul
sahf
push
fld
movs
sub
arpl
lea
lock
and
aam
or
push
mov
and
ds
mov
xor
pop
cmp
fcomp
cmp
je
retf
jne
fwait
xchg
inc
icebp
fld
inc
push
sub
mov
mov
sahf
add
mov
pop
jg
mul
or
in
(bad)
ss
lock
pushf
xchg
jno
mov
adc
xchg
call
cmps
fstp
add
lahf
add
push
xchg
fist
push
mov
or
rol
adc
scas
mov
out
int
xchg
stos
bound
dec
call
mov
rol
out
test
idiv
cmp
adc
mov
and
xchg
fild
(bad)
rcr
sti
or
outs
mov
ins
pushf
fist
sbb
fdivr
es
sub
jle
outs
mov
pop
jmp
cmps
call
loopne
rol
daa
rcl
pop
sbb
push
fcomp
xchg
jecxz
ret
stos
(bad)
lods
mov
jg
inc
cli
lahf
arpl
mov
lods
xlat
adc
push
pop
mov
addr16
inc
in
mov
cdq
fldcw
or
push
aam
sbb
mov
jp
test
add
inc
fxch
push
sub
test
and
add
fwait
loopne
out
loope
cmp
pop
xor
pop
and
hlt
mov
pop
mov
dec
nop
test
je
fidiv
das
loop
push
ret
in
mov
repnz
sub
mov
mov
xor
loope
mov
push
fist
cmps
das
(bad)
shl
sub
cli
and
cdq
stos
or
loope
out
daa
lea
sub
sub
ret
cmp
push
out
xor
mov
xor
pusha
jnp
ins
sbb
scas
ins
movs
scas
pushf
add
pmullw
fcmove
cwde
push
jbe
or
push
rcr
and
sbb
and
in
cs
jnp
dec
adc
push
xor
scas
or
test
push
aaa
pop
cwde
leave
dec
push
jecxz
call
int3
(bad)
adc
mov
sbb
mov
pop
ja
ror
test
add
ss
fisttp
cmp
mov
mov
sub
repz
xchg
lahf
fs
add
mov
in
call
mov
les
sar
mov
aad
aas
cmp
loop
fst
or
jecxz
cmps
lods
adc
loop
jg
popf
test
out
xchg
aam
mov
cmc
mov
les
pop
push
or
ins
xchg
out
movs
and
ficom
fisubr
xor
stc
push
mov
popa
div
and
xchg
adc
xchg
sbb
arpl
cmp
mov
movs
test
stc
mov
push
(bad)
pop
leave
and
scas
fwait
pop
(bad)
(bad)
and
dec
pop
xlat
mov
nop
nop
adc
or
jmp
loop
cmp
stos
fadd
inc
push
push
loopne
push
adc
jne
xchg
cmp
in
test
sub
int3
xor
push
add
fwait
mov
push
xchg
and
and
inc
in
adc
in
add
sbb
jmp
cmp
mov
pop
outs
out
scas
aad
cmp
and
xor
lods
cmp
aam
fisubr
sub
or
adc
push
or
pop
adc
adc
setge
jp
(bad)
stos
dec
xchg
imul
test
lds
cmp
in
mov
out
jno
inc
push
repz
pop
fwait
jmp
xor
jns
aas
das
dec
fisttp
pop
shl
test
mov
push
mov
test
mov
jmp
mov
jge
into
push
aad
fld
call
fistp
pop
adc
cmp
xchg
cmc
clc
fild
sar
push
(bad)
mul
in
das
push
push
jmp
adc
(bad)
imul
pushf
popa
cld
or
adc
vpsubusw
ror
push
lods
jno
cmps
outs
shl
mov
inc
int
inc
fadd
dec
fidiv
jmp
xchg
imul
mov
mov
inc
jo
loope
lods
pop
fs
(bad)
into
mov
repnz
icebp
into
jbe
mov
aas
adc
add
mov
mov
push
or
in
mov
pop
cmps
or
or
int3
in
jge
in
nop
hlt
pop
pop
xchg
mov
gs
pop
cs
test
fadd
jnp
lods
call
enter
mov
movs
sar
sbb
fbstp
mov
add
ja
leave
push
jg
inc
clc
and
sub
adc
fist
inc
add
mov
and
jns
xchg
push
jne
cmp
or
jmp
sbb
mov
loope
retf
adc
shl
loop
sub
ret
fmul
fisttp
(bad)
sub
cld
push
fwait
bound
xor
rcl
ret
neg
and
(bad)
push
pop
mov
adc
retf
imul
lock
add
cli
sahf
mov
adc
xchg
and
pop
rcr
xor
pop
dec
lods
test
inc
pop
icebp
and
aam
test
gs
add
xchg
jns
mov
jmp
imul
and
es
(bad)
jne
into
push
jmp
(bad)
adc
ret
pop
adc
dec
cli
dec
pop
xchg
xchg
xchg
frstor
cmp
push
xchg
neg
jo
push
add
sbb
push
movs
stos
sti
pop
mov
mov
add
mov
or
lds
dec
add
xchg
cmp
icebp
fwait
stc
outs
test
mov
fdivr
xchg
jg
jmp
sbb
mov
ret
add
xchg
cmps
fnsave
js
dec
outs
dec
dec
mov
cmp
in
pop
(bad)
enter
dec
sar
jmp
fild
ins
(bad)
cmp
mov
test
(bad)
jl
mov
mov
jb
or
and
push
ret
sub
sar
pusha
mov
xor
jmp
push
adc
xor
pop
mov
pop
mov
or
push
ror
ja
js
mov
(bad)
mov
xchg
pop
jle
daa
jno
adc
movs
test
mov
outs
sti
pop
or
sub
(bad)
cdq
add
jmp
and
fiadd
lods
retf
push
xchg
xchg
cmps
inc
jo
aas
daa
stos
sbb
ds
and
xor
cmp
push
mov
stos
mov
and
repnz
sub
imul
and
in
push
es
sub
rol
cmp
es
nop
or
cmps
outs
sbb
and
ret
mov
mov
ss
mov
jg
push
xor
int
dec
mov
out
cmp
in
inc
push
(bad)
jmp
pop
js
mov
push
or
lea
cmps
sbb
int3
addr16
mov
retf
mov
addr16
scas
mov
sar
fcom
add
das
xlat
call
popa
mov
jg
xor
in
leave
mov
movs
jecxz
sbb
inc
mov
push
mov
mov
cmps
and
push
inc
sbb
outs
mov
bound
loope
repnz
add
shr
dec
mov
icebp
mov
enter
mov
pop
push
mov
shl
leave
out
pop
mov
dec
jl
or
pop
xchg
sub
pop
mov
ret
mov
stos
xlat
in
es
popf
ret
stos
(bad)
lock
test
scas
jmp
xor
fmul
pusha
nop
mov
cmps
mov
lahf
and
jno
mov
test
fs
mov
(bad)
bound
mov
in
dec
push
sti
jecxz
jns
inc
mov
arpl
and
mov
inc
aaa
cs
mov
fld
repnz
jle
jp
fdivr
push
shr
jno
add
adc
pop
mov
nop
jmp
cld
cmp
xchg
pop
push
and
add
ja
call
dec
cmp
jnp
xor
out
mov
lods
jl
outs
loop
das
mov
xchg
mov
imul
fist
pushf
pop
pushf
dec
sbb
lock
jb
add
movs
ror
inc
sub
adc
sbb
(bad)
mov
hlt
stc
retf
sbb
fsubr
push
jno
ret
stos
rol
jg
ja
imul
sar
aas
mov
imul
dec
adc
icebp
jae
xchg
xlat
push
inc
xchg
and
or
in
adc
mov
xchg
jb
aad
xchg
add
out
sahf
les
push
and
ja
lock
jle
es
cmps
and
aaa
sub
mov
mov
sbb
inc
hlt
pop
xor
mov
(bad)
add
xchg
or
jmp
repz
mov
retf
repnz
sbb
test
outs
push
adc
or
jp
pusha
test
adc
xor
out
xchg
and
jno
jle
lock
stos
mov
fimul
dec
jg
push
cmc
clc
or
xchg
mov
arpl
lahf
jae
stos
or
sti
or
imul
push
clc
ins
arpl
fisubr
in
(bad)
xchg
ror
or
gs
adc
push
fucomp
int
mov
scas
les
and
push
jecxz
clc
cmp
lahf
mov
xor
dec
mov
cmp
pop
sti
cmp
push
and
hlt
cmp
cmps
or
add
ins
cli
pop
dec
mov
or
stos
cmps
pop
cmp
shr
enter
sub
shl
lods
daa
ss
inc
cmp
ror
add
mov
sbb
push
sbb
cmp
imul
mov
idiv
rcl
and
mov
cmp
sahf
fbstp
xchg
shl
jl
loopne
(bad)
into
adc
jns
jle
mov
pavgb
and
leave
dec
shr
dec
daa
popa
jl
xchg
retf
outs
and
fdivr
mov
out
cwde
and
mov
sbb
int3
sti
das
xchg
cld
or
or
mov
pop
cwde
jbe
pop
push
pop
lea
ins
out
icebp
xchg
out
leave
dec
inc
sbb
movs
mov
ret
push
test
inc
test
(bad)
xor
push
mov
inc
jg
test
sbb
sub
loopne
ds
mov
nop
leave
fnstenv
jg
adc
or
xchg
pop
mov
cs
xor
rcr
(bad)
mov
test
mov
arpl
pusha
xor
mov
aas
cmp
mov
ret
mov
icebp
pop
aas
sub
cmp
fs
pop
mov
mov
or
cmps
(bad)
and
pop
ret
adc
pushf
inc
sbb
(bad)
(bad)
mul
pushf
xchg
cmp
inc
sub
cmp
cmp
mov
cli
paddd
jae
daa
(bad)
push
push
mov
shl
in
or
(bad)
jno
mov
movs
fild
inc
cmp
and
dec
cmp
retf
arpl
(bad)
xchg
rcr
(bad)
lahf
cli
cli
out
cmp
enter
inc
data16
adc
movs
and
or
in
and
xchg
retf
pop
jbe
cmc
test
sub
cs
xor
add
mov
stos
test
jmp
adc
or
jno
sbb
ins
int
or
into
ins
ror
test
xor
dec
ja
pop
fmul
jecxz
pop
sbb
icebp
repz
int
mov
push
mov
jg
ds
in
imul
icebp
adc
fs
xchg
outs
out
lods
xchg
cs
popf
sbb
(bad)
mov
mov
jmp
scas
cmovp
jno
xchg
and
(bad)
cdq
or
jbe
add
int3
sbb
in
xchg
xchg
jae
sbb
fsub
mov
pop
pop
(bad)
test
sub
dec
mov
adc
fnsave
sbb
cmp
jecxz
add
mov
imul
xlat
cmp
int3
sbb
xchg
cld
mov
(bad)
mov
sbb
hlt
or
mov
xchg
mov
enter
fist
pop
aaa
dec
pop
rcr
mov
pop
pushf
xor
push
pushf
es
pop
push
mov
mov
ret
imul
inc
xor
mov
pop
sbb
in
test
push
xor
add
mov
icebp
fcom
push
mov
sub
mov
es
(bad)
push
mov
call
stc
popa
mov
outs
cmp
test
jne
rcr
icebp
xor
lods
aas
inc
retf
sbb
mov
movs
jb
test
add
dec
mov
cli
push
pop
enter
std
jl
fdiv
push
push
mov
popa
loope
dec
jo
arpl
out
dec
sbb
out
lods
ret
xchg
sbb
and
out
inc
(bad)
jno
ficom
mov
adc
call
adc
aaa
or
icebp
das
xchg
ja
xchg
mov
push
arpl
out
sub
or
scas
sub
and
jae
fdivr
shr
mov
pushf
dec
std
ret
int3
lods
jno
sub
xor
xor
and
test
lods
adc
push
sub
and
pushf
xchg
ror
sub
gs
mov
jp
dec
cmp
(bad)
pop
inc
xchg
cmp
mov
mov
and
inc
mov
jo
mov
xor
pop
push
pop
ins
mov
sar
jge
fs
jle
sbb
retf
sub
out
inc
push
(bad)
retf
in
jo
xchg
lods
or
pop
inc
mov
imul
ins
addr16
cmp
stos
pushf
inc
sahf
and
add
iret
xchg
pusha
sahf
retf
jmp
xchg
mul
push
ds
pop
mov
test
rcr
das
pop
test
inc
xor
ins
pusha
cmp
fmulp
dec
sub
sbb
dec
fstp
sbb
jmp
stc
inc
lods
push
mov
jbe
xchg
outs
leave
or
mov
shl
rcl
and
sbb
mov
cmps
lods
xchg
lea
ss
(bad)
into
xor
fmul
cmp
cli
xor
xor
(bad)
in
(bad)
cmc
inc
test
lahf
pop
cmp
jmp
fbstp
push
mov
dec
cli
clc
and
xchg
sbb
repnz
out
jmp
or
cld
lods
lahf
movs
mov
bound
(bad)
sbb
mov
out
jecxz
push
retf
mov
test
daa
imul
popa
ins
adc
push
int3
jbe
arpl
daa
call
add
ret
das
movs
mov
dec
(bad)
daa
or
(bad)
jno
adc
test
and
sti
in
jno
adc
scas
cmps
rcl
scas
in
retf
push
add
sub
(bad)
jnp
adc
push
lods
ficomp
icebp
pop
test
jp
xor
jne
leave
xor
sbb
shl
push
xchg
pop
stos
or
in
and
sub
in
fimul
xor
or
pop
push
not
xchg
mov
sub
jmp
aad
cmp
push
jnp
fiadd
je
push
push
enter
xchg
dec
mov
pop
xor
in
rcl
push
pop
ins
ja
iret
mov
mov
inc
jecxz
pop
test
sub
ins
mov
mov
data16
add
xchg
pop
and
add
lea
jmp
dec
mov
and
or
btc
aaa
cmp
fld
out
jne
es
stos
outs
rol
les
jmp
jmp
in
mov
mov
xchg
sub
pop
vmaxsd
hlt
xchg
xchg
mov
jg
dec
jl
jp
xor
mov
mov
mov
xchg
dec
out
mov
cmp
sub
aad
add
outs
jl
in
clc
dec
xor
jbe
dec
sub
lds
loop
adc
lock
rcr
and
pop
pop
adc
je
aaa
lea
cmc
adc
jae
sbb
(bad)
jb
fs
and
and
sbb
and
sbb
push
enter
mov
add
scas
xor
lahf
or
cmp
dec
(bad)
sbb
xchg
fs
(bad)
pushf
and
push
inc
fs
stos
hlt
add
outs
arpl
adc
imul
inc
mov
mov
or
push
int
hlt
fstp
xchg
fdivr
xor
lahf
xor
popf
xchg
jge
push
mov
mov
fs
iret
mov
cwde
jge
adc
pushf
imul
sbb
mov
sbb
imul
std
or
mov
mov
inc
dec
das
ret
dec
ja
lods
out
ret
mov
push
repnz
popa
dec
cmp
xchg
shl
pop
sub
lahf
xchg
popa
call
dec
pop
dec
jae
jnp
jnp
jmp
ret
xor
stos
or
(bad)
xchg
xor
inc
ror
rcl
aas
shr
mov
cwde
or
in
and
movs
into
cmp
in
or
fst
out
adc
dec
mov
pop
lods
push
mov
and
jb
inc
xor
push
imul
mov
test
ds
sub
cmp
xor
xchg
test
es
jecxz
cmc
shl
push
cmps
mov
outs
popf
lock
mov
inc
sub
mov
popa
jge
test
xlat
push
sub
jecxz
sub
push
dec
scas
ss
cld
pop
bound
icebp
pop
inc
pop
in
nop
shr
mov
xchg
retf
cld
loopne
inc
popa
cs
dec
(bad)
and
movs
idiv
lods
inc
mov
div
int3
dec
inc
(bad)
cmp
out
mov
test
int3
sub
adc
and
jp
imul
lods
push
mov
jno
imul
stc
cmp
call
push
jae
cmps
fldenv
lods
add
or
adc
add
xchg
cmp
addr16
ja
clc
mov
(bad)
xor
jo
jle
fidiv
into
pop
in
push
retf
es
imul
inc
push
mov
inc
mov
fld
aaa
shr
sub
pushf
sub
mov
les
push
pop
js
nop
xchg
push
jecxz
lock
add
dec
push
dec
xchg
arpl
xor
repz
frstor
dec
into
movs
jp
add
inc
add
lea
(bad)
cmp
cdq
ror
sub
test
adc
or
popa
into
sub
sahf
push
lods
cmp
fisub
sub
adc
sbb
test
push
push
and
lods
pop
data16
push
adc
ss
out
clc
push
aaa
fstp
add
arpl
jp
xchg
jo
fnsavew
sub
xor
leave
pop
ds
shl
sub
cmp
loopne
push
or
mov
lds
neg
jae
retf
iret
pop
aaa
(bad)
xor
xchg
jecxz
jno
loope
jbe
jb
test
test
jp
sar
or
and
or
ja
daa
mov
add
push
sbb
std
pop
jmp
movs
movs
pop
mov
jp
dec
xchg
popf
sub
jl
jle
pop
fist
pop
scas
pop
clc
inc
mov
sti
outs
retf
fcomi
pop
mov
movs
inc
sbb
fwait
inc
ss
adc
jmp
in
fistp
fild
jp
mov
iret
add
sub
jmp
pop
push
movs
xor
push
adc
sar
xor
ret
cmps
adc
fcmovbe
or
xchg
rcr
bound
repnz
cmp
mov
mov
repnz
ret
push
and
les
imul
outs
sub
sbb
inc
test
fcmovnb
sbb
je
shl
icebp
and
cmps
or
pushf
out
stos
xchg
lods
out
inc
pop
mov
mov
mov
adc
sub
push
aad
sub
mov
mov
add
adc
or
push
pop
call
pop
fcom
ds
dec
cli
fild
lock
jnp
mov
sub
mov
std
in
addr16
mov
xchg
inc
dec
mov
sbb
(bad)
adc
stos
popa
lea
push
pop
adc
xchg
sahf
push
mov
scas
xchg
inc
cs
in
sub
xchg
sbb
push
push
adc
loope
mov
cs
sahf
test
dec
mov
aad
imul
mov
nop
sbb
push
aam
pushf
adc
int3
jnp
(bad)
adc
add
mov
cmps
push
ret
sbb
pop
inc
and
and
xchg
pop
js
call
xlat
jmp
mov
sub
cmp
jbe
ret
cmp
or
into
pusha
js
leave
ja
lahf
icebp
jne
(bad)
pop
out
or
lods
jbe
jle
cmp
std
movs
jo
mov
inc
jns
cmps
fidivr
out
jge
cmp
neg
sbb
inc
loop
jne
lea
(bad)
mov
jb
ret
inc
enter
inc
rol
jae
mov
scas
push
mov
push
add
pop
ror
mov
mov
jmp
push
(bad)
repz
dec
inc
inc
push
and
inc
or
sub
or
leave
repz
sti
mov
pusha
sub
jle
sub
mov
add
pop
test
add
cs
jb
cld
sti
push
xchg
out
std
rcl
scas
cmp
aam
(bad)
jae
pop
dec
ret
shl
shl
retf
and
cmc
add
pushf
mov
ins
fistp
fcom
ds
out
into
mov
leave
dec
shl
mov
pop
jg
in
cmps
imul
mov
lea
mov
dec
inc
mov
push
repnz
iret
add
inc
jno
popf
stos
dec
sahf
mov
in
iret
and
pop
pusha
mov
ja
jae
push
sbb
pop
xor
dec
bound
sbb
hlt
push
in
fwait
inc
push
gs
push
(bad)
mov
retf
push
test
mov
cs
movntq
out
or
js
add
push
in
dec
xor
je
sub
push
xchg
cmp
sbb
loope
sbb
into
sub
xor
adc
retf
jbe
pop
or
stc
call
imul
mov
scas
rcr
mov
sbb
xlat
add
test
les
icebp
pop
dec
add
jmp
repnz
and
mov
fmul
je
pop
inc
push
loope
(bad)
sti
je
dec
iret
stos
test
scas
add
pop
sbb
or
jg
div
pop
push
inc
(bad)
test
pusha
adc
rcr
shl
adc
js
cmp
jae
ror
stos
bound
int3
outs
sbb
fwait
imul
adc
sub
in
sub
aad
daa
shr
mov
jp
and
cmc
or
test
sahf
mov
loope
cs
add
cmp
adc
or
push
inc
mov
test
jmp
inc
ja
jb
and
ror
mov
dec
ja
cmp
movs
mov
test
je
int3
std
jb
imul
push
stc
jo
push
lods
es
je
adc
jl
xchg
xchg
sti
inc
mov
sub
fs
fwait
xor
scas
cmp
fwait
in
push
stc
rol
and
mov
push
cmps
xorps
xor
fisubr
nop
add
push
cmp
pop
mov
fild
loope
dec
add
dec
outs
inc
repz
xor
mov
out
dec
aaa
push
mov
ss
push
add
push
cmps
push
jmp
xor
or
icebp
adc
inc
add
popf
inc
ror
retf
daa
icebp
aad
je
pusha
dec
test
iret
out
data16
dec
rol
push
in
mov
jb
mov
xor
nop
mov
lock
stos
cmp
mov
fwait
gs
mov
jo
gs
adc
mov
cmp
dec
mov
(bad)
jmp
lods
pop
bound
mov
xchg
mov
sub
and
push
mov
retf
pop
dec
xor
shl
jecxz
pop
arpl
mov
cs
fdivr
(bad)
push
dec
lods
loop
pop
or
imul
add
and
lock
push
jo
movs
inc
ret
push
mov
dec
pop
mov
repz
mov
pushf
jae
jae
mov
in
push
add
mov
sub
jno
cli
mul
aad
inc
lds
add
stc
ror
test
inc
inc
and
movs
mov
push
sbb
mov
xor
pusha
mov
jl
inc
popf
int3
mul
bound
cmp
call
xchg
and
xor
jno
cli
mov
pop
and
push
and
push
or
mov
adc
(bad)
jbe
sub
mov
outs
sub
or
mov
ret
mov
pop
jg
lock
jge
out
fdivr
lds
(bad)
out
arpl
das
adc
stos
mov
mov
movs
push
inc
jge
cld
cmc
retf
in
(bad)
ja
push
mov
ds
jmp
dec
std
leave
repnz
jmp
lahf
scas
fstp
movs
push
xchg
or
pop
lods
mov
vaddsd
xor
jb
dec
adc
mov
sub
push
shr
js
jecxz
movs
mov
fdivr
imul
push
daa
(bad)
pushf
int3
jmp
int
inc
sbb
dec
sbb
adc
jbe
inc
ret
cld
and
mov
or
mov
cmp
in
es
push
pop
nop
fld
xor
adc
xor
fistp
retf
clc
mov
cmc
xchg
pop
xchg
scas
jne
jae
xor
(bad)
je
push
mov
mov
push
ja
arpl
pushf
into
int
cmp
push
and
mov
lods
adc
nop
dec
mov
(bad)
adc
fcom
pop
jnp
loopne
inc
std
stc
push
cmp
call
mov
push
out
lea
fld
sbb
xadd
push
xchg
leave
xchg
nop
mov
int3
aas
les
(bad)
pop
add
mov
mul
xchg
xchg
add
stos
xor
in
add
inc
ret
pop
cmp
push
neg
pushf
push
pop
bswap
in
inc
jnp
stc
xchg
xor
test
ret
lock
inc
scas
add
mov
pop
push
ds
or
imul
loopne
push
or
scas
jge
popa
(bad)
cmp
jae
adc
mov
popf
arpl
pop
cdq
mov
sub
sahf
in
xor
push
sar
mov
out
sub
mov
adc
gs
lods
jbe
dec
mov
push
mov
mov
xlat
pusha
fcmovnbe
mul
call
sub
out
pusha
sbb
xchg
adc
call
xchg
cmp
cs
adc
dec
mov
ds
test
into
pushf
in
sbb
mov
jmp
test
in
add
push
xchg
push
or
jmp
sbb
cmp
mov
shl
push
call
in
sbb
dec
dec
rcr
inc
nop
es
mov
jmp
add
scas
and
add
inc
dec
dec
pop
push
or
or
sub
add
std
and
jg
sub
or
or
xor
in
not
xor
cmps
mov
dec
(bad)
int3
or
sub
adc
xor
out
inc
xor
jns
xor
and
push
inc
pusha
jmp
xchg
out
inc
mov
xor
dec
xor
cli
jno
jae
push
fdivr
xchg
cmp
pop
cmp
sub
shr
je
xchg
or
xchg
xor
rcl
jo
push
and
ficomp
pop
ret
sub
popa
dec
or
ret
add
addr16
sbb
loopne
cmp
addr16
test
push
mov
inc
sbb
push
add
ror
push
add
mov
push
cld
xchg
jle
sub
movs
cmp
and
xchg
jbe
inc
(bad)
fnstenv
dec
mov
pop
pop
sub
(bad)
aam
push
pushf
inc
aas
rcr
add
into
fidiv
cmc
sub
xor
call
cmps
das
les
ins
stos
addr16
jp
aad
loop
cmp
xchg
ret
(bad)
das
xchg
lods
ret
cmp
in
push
sbb
fidiv
ds
dec
mov
push
popa
mov
lahf
sbb
xor
push
xchg
test
add
cmp
cmps
pop
or
shl
scas
xor
mov
and
fwait
(bad)
stos
sub
inc
imul
adc
cs
dec
ret
fs
(bad)
and
push
push
pushf
xlat
xor
shr
test
out
test
iret
xchg
fnsave
push
cmp
xchg
and
mov
out
out
add
rcr
dec
in
outs
or
or
pop
(bad)
sahf
das
adc
in
out
icebp
push
xor
mov
fld
mov
mov
dec
ds
sti
push
xor
movs
bound
or
ds
aas
push
or
loop
mov
cmps
hlt
repz
dec
adc
daa
xor
sahf
and
push
cmp
pop
sar
cwde
add
add
pop
dec
sbb
jle
loop
bound
daa
mov
loopne
jnp
inc
push
sub
add
shr
and
aad
jns
cdq
std
lahf
fistp
ret
push
add
add
sbb
inc
(bad)
push
sar
retf
enter
retf
pop
out
not
repnz
ds
ins
or
aam
gs
push
test
repz
mov
(bad)
cmp
xchg
jmp
call
mov
or
mov
adc
pushf
push
sub
push
fs
push
popf
inc
cmps
dec
les
nop
(bad)
fs
xor
scas
push
fwait
shl
sti
ins
xchg
repz
inc
or
fs
sbb
mov
sub
mov
sub
imul
mov
cld
je
pop
xor
inc
fldenv
lock
ror
jmp
jp
cmp
jns
daa
ja
cmp
cmps
pushf
jne
push
dec
mov
fcomp
add
repnz
adc
icebp
mov
jns
sbb
xchg
mov
neg
add
(bad)
jl
push
dec
pop
hlt
retf
outs
fcmove
and
leave
jp
inc
jp
xor
mov
mov
imul
fsub
xor
ds
nop
scas
mov
ds
repnz
jne
mov
cld
sub
iret
test
or
mov
out
pop
pop
mov
movs
femms
mov
out
xor
inc
jge
jmp
sub
jecxz
xor
fsub
rcl
or
and
cs
mov
xor
frstpm(287
pop
outs
jns
mov
adc
or
pusha
mov
aas
imul
jl
mov
push
inc
inc
imul
enter
loope
inc
pop
mov
xchg
mov
dec
and
les
xchg
jns
lds
movs
fild
pop
mov
xor
push
mov
mov
xor
fild
scas
push
pop
xor
mov
xchg
push
pop
adc
jbe
and
jb
ds
sbb
sti
dec
push
pop
cld
popf
xor
(bad)
mov
or
xor
push
pusha
mov
out
mov
adc
int
stos
mov
pop
or
or
mov
and
out
or
xor
mov
cli
inc
cld
ins
mov
fs
stc
jnp
push
movs
mov
popf
adc
jo
test
mov
and
aaa
(bad)
mov
cdq
xor
mov
push
test
call
es
call
xor
lods
mov
data16
cmp
es
(bad)
sub
dec
lock
shl
scas
shr
add
mov
ja
loop
aas
push
jl
out
push
adc
aaa
lea
or
inc
cmps
imul
pop
fdiv
jns
inc
scas
test
fisubr
call
xor
xor
pushf
jmp
pusha
fcmovnbe
(bad)
push
dec
out
rol
lahf
mov
adc
sub
mov
call
outs
outs
iret
daa
push
out
mov
dec
mov
mov
fwait
xchg
dec
into
fstp
(bad)
bound
pop
mov
cmp
mov
std
add
es
or
test
loop
mov
xor
fs
pop
inc
fnclex
(bad)
jns
mov
pusha
add
cli
xlat
cmp
inc
movs
div
bnd
fadd
aam
mov
pop
push
(bad)
je
arpl
nop
(bad)
pop
outs
jo
(bad)
cmp
leave
sub
pop
mov
ss
sbb
push
fstp
test
dec
outs
lock
mov
push
cmps
out
loope
push
xchg
dec
jbe
sbb
lods
sti
into
sub
pop
and
xor
(bad)
int3
inc
sub
ss
fnstsw
dec
push
mov
push
cs
fcmovb
sub
iret
cmp
sub
and
out
push
fstp
mov
push
stos
loop
mov
int
mov
(bad)
scas
sub
cmc
sub
dec
hlt
int
inc
movs
fistp
pop
and
popf
dec
mov
add
int
or
ja
icebp
push
add
mov
xor
xchg
invd
aas
xlat
je
cmp
arpl
retf
retf
mov
mov
gs
neg
push
jnp
rcl
scas
test
retf
imul
sub
xor
adc
shl
dec
mov
mov
cli
jne
sub
(bad)
jg
push
mov
inc
mov
cmps
dec
in
pop
repnz
aad
ss
stos
outs
data16
mov
cmp
js
mov
out
aam
push
hlt
stos
das
sar
cmps
(bad)
(bad)
sbb
sar
loop
das
hlt
inc
je
loopne
stc
and
fnsave
jg
js
mov
ins
int
inc
adc
sub
lock
lods
sbb
mov
setns
mov
movs
iret
sbb
mov
iret
mov
retf
jg
and
add
call
shl
jb
ja
jg
dec
xchg
pushf
lahf
pop
and
or
xor
xchg
jp
jmp
push
inc
pop
dec
mov
mov
or
mov
pop
mov
pushf
mov
jo
stos
dec
or
js
inc
(bad)
jbe
cwde
sbb
jmp
loop
ja
sub
(bad)
pop
loopne
mov
jnp
ret
push
push
push
(bad)
fst
cmp
sub
jbe
pushf
outs
inc
jo
or
les
fcomp
call
movs
mov
mov
jns
movs
test
(bad)
and
clc
inc
sar
inc
adc
nop
xchg
dec
ins
ins
pop
fild
dec
adc
mov
xchg
mov
in
xchg
retf
movs
and
mov
inc
inc
cmc
jnp
mov
push
pop
outs
das
pop
cmps
mov
in
jle
push
cli
jl
push
or
clc
jb
mov
xlat
mov
adc
imul
inc
cmovg
cmp
mov
xor
cmp
adc
popa
enter
int3
not
fsubr
mov
sub
out
pop
lahf
int3
std
mov
push
jge
xchg
cmp
mov
sbb
jg
inc
pop
mov
pusha
xchg
stos
jae
outs
or
les
(bad)
sbb
cld
sub
jge
cmp
cmp
test
add
jge
lods
out
sub
adc
je
sbb
jle
push
sbb
add
lock
ror
pop
and
push
cdq
cmp
inc
sbb
mov
pusha
xlat
xor
and
in
push
ret
push
dec
xchg
xchg
(bad)
push
lds
clc
push
repz
test
dec
popf
xor
pop
(bad)
aas
and
not
adc
mov
lds
fisttp
mov
dec
mov
sbb
cmp
shld
shr
jecxz
push
out
(bad)
cli
push
retf
sub
fdivr
repz
shr
adc
inc
scas
js
call
outs
scas
cmp
xor
arpl
jle
sbb
test
lock
leave
push
sub
shl
inc
pop
stos
mov
cmc
and
mov
pop
lahf
dec
sbb
pop
pop
sbb
push
pop
in
mov
(bad)
and
push
mov
repnz
cmc
dec
jns
out
cmp
or
ret
sub
add
int3
in
dec
push
cs
leave
test
aaa
jp
pusha
push
fs
test
jo
mov
xchg
adc
pop
sub
add
add
cmps
leave
ficomp
sbb
pop
or
lea
sbb
ins
in
je
mov
jg
ins
cmc
add
xor
push
mov
sbb
aad
adc
ror
lock
les
clc
cmc
and
cmp
ret
xchg
cld
retf
imul
mov
or
push
xchg
and
xor
mov
mov
das
popf
sub
or
icebp
(bad)
sti
lods
repz
jbe
call
push
rcl
inc
std
into
outs
add
sub
push
or
stc
sub
mov
push
xor
xchg
sub
jmp
pop
dec
cli
jbe
mov
mov
hlt
xchg
or
(bad)
rol
sbb
and
mov
sbb
adc
test
clc
ret
nop
jecxz
fs
(bad)
sbb
cli
movs
das
push
xchg
movs
push
outs
pop
je
cld
cmp
jle
imul
imul
jno
mov
outs
ins
popa
sbb
in
pop
mov
inc
in
addr16
xor
not
dec
gs
adc
lock
into
enter
xchg
push
ret
movs
push
imul
clc
ror
xchg
icebp
int
xor
aam
inc
scas
dec
cdq
sbb
mov
jl
push
cmp
push
dec
dec
mov
repz
push
cwde
cli
(bad)
sub
in
mov
cdq
or
ja
xlat
mov
test
mov
loop
inc
sbb
push
mov
ret
jnp
lods
cmp
ds
enter
clc
loopne
ss
xchg
fmul
push
stos
shl
dec
pushf
jp
jb
jne
sub
adc
mov
xor
cmp
xor
hlt
int
bound
ret
scas
test
addr16
call
js
sub
mov
mov
jg
arpl
mov
and
lds
cmp
add
jmp
in
jmp
leave
pop
ret
push
je
add
jecxz
test
dec
mov
fcmovnu
inc
adc
retf
cld
cld
ins
mov
sahf
bound
pop
je
push
je
aas
test
pop
or
adc
inc
sub
xor
xrelease
mov
hlt
lods
sub
mov
pusha
daa
xchg
adc
test
pop
gs
and
jnp
inc
or
mov
in
inc
int
fmul
cdq
loopne
mov
inc
test
fs
jmp
inc
fs
cmc
push
cmp
ror
addr16
adc
mov
jno
sti
aas
dec
pop
adc
sbb
and
movs
fwait
or
pop
(bad)
xchg
xchg
call
icebp
mov
je
adc
and
push
jge
or
dec
mov
jle
xchg
(bad)
inc
jecxz
and
test
std
pop
xor
mov
cmc
cmp
or
into
jmp
cmp
and
std
repz
into
pop
cwde
sbb
mov
or
jle
jmp
dec
(bad)
stc
call
inc
push
jmp
dec
int
movs
shl
movs
cmps
xchg
add
pop
xor
fwait
mov
sub
frstor
mov
fadd
inc
cdq
in
mov
sbb
and
xchg
fs
outs
sub
std
div
push
stos
jb
add
mov
stos
stos
fist
and
fcom
xor
pop
pop
adc
mov
xchg
call
jb
sti
stos
mov
xchg
cdq
popf
xchg
adc
in
mov
mov
aad
retf
ins
mov
jmp
pusha
outs
cs
adc
push
jo
iret
rep
mov
test
inc
int3
inc
xchg
inc
sbb
add
in
jns
dec
jb
jmp
sahf
icebp
les
xchg
popf
mov
lea
frstor
(bad)
int
push
and
and
pop
add
pushf
je
xlat
mov
lods
or
dec
dec
scas
dec
fisubr
ja
iret
pop
mov
push
and
fnop
pop
lahf
mov
leave
sbb
cmp
cli
pop
mov
mov
test
sbb
push
pop
and
sub
test
popf
rcr
sub
into
daa
fist
xchg
sbb
in
lock
xchg
xor
ds
xchg
fidivr
xchg
mov
imul
call
in
jo
or
js
nop
lea
jne
sbb
lods
mov
retf
out
loop
add
jne
push
mov
and
and
adc
pusha
mov
addr16
scas
sti
test
or
icebp
push
into
sbb
mov
lods
in
sbb
data16
fs
jl
clc
or
inc
pop
iret
pop
ss
jg
inc
(bad)
mov
out
test
sub
and
(bad)
retf
adc
imul
scas
jmp
xor
mov
dec
pop
hlt
ins
icebp
jae
pop
xchg
inc
adc
sar
dec
(bad)
dec
mov
adc
cs
sub
mov
fwait
sbb
loopne
cs
leave
lds
sub
jp
inc
lea
add
inc
rcl
push
ret
ds
mov
inc
sbb
push
inc
das
mov
icebp
scas
pusha
out
sub
mov
inc
cs
cmp
adc
jge
add
scas
icebp
inc
fstcw
mov
sahf
sbb
dec
inc
fs
mov
les
cdq
add
mov
xchg
pop
add
inc
sar
aaa
cmps
or
mov
jne
dec
push
sub
xor
sub
pop
cmps
pusha
xchg
jge
adc
xor
cwde
fwait
(bad)
aas
icebp
inc
sub
mov
stc
dec
xchg
inc
mov
cmp
or
rep
pushf
push
enter
or
jge
cmps
xchg
mov
out
xchg
test
cmp
ret
in
mov
test
xchg
(bad)
xor
add
mul
scas
inc
into
jmp
push
lock
mov
xchg
jne
mov
or
or
jmp
dec
push
repnz
enter
and
or
mov
enter
aaa
arpl
mov
adc
test
bound
xchg
daa
movs
test
sub
in
int
dec
ja
fld
movs
daa
inc
cmp
icebp
mov
and
std
iret
bound
inc
mov
xor
popa
lock
mov
movs
movs
dec
out
retf
pop
add
das
ffree
inc
fdivp
sub
or
push
mov
movs
fcmovnu
test
lods
into
xor
inc
xor
mov
aam
cmp
add
dec
mov
jmp
pop
outs
lock
call
fs
adc
ins
sqrtps
jnp
mov
pop
stos
cmp
push
push
fdivp
cdq
adc
gs
inc
mov
or
les
dec
repnz
jnp
dec
mov
movs
push
mov
call
(bad)
loopne
call
mov
jl
jmp
sbb
mov
je
les
in
aad
xor
lds
stc
cmp
iret
movs
gs
and
icebp
and
addr16
xchg
pop
add
stc
mov
jmp
rol
aaa
popf
into
test
psubb
int3
aaa
cs
jnp
sbb
sub
mov
jbe
mov
les
cmc
mov
je
inc
cmps
mov
sub
fstp
dec
adc
cmp
fcmovnbe
xor
rcr
and
jns
add
pop
mov
je
ins
repnz
mov
adc
pusha
and
inc
lahf
xor
sbb
cmps
iret
pushf
inc
jno
dec
hlt
jmp
or
cdq
hlt
sbb
fisttp
or
jg
and
sub
sbb
popa
call
or
and
and
dec
inc
mov
and
push
fs
sub
daa
test
mov
pop
nop
icebp
cmps
push
push
xor
ds
dec
stos
mov
jmp
add
dec
adc
test
xchg
pop
es
fimul
xchg
mov
lock
leave
(bad)
jle
cdq
ret
cmps
and
mov
mov
cmc
jmp
push
fisttp
pop
sub
loop
aaa
aaa
mov
jnp
dec
push
jns
mov
out
mov
scas
push
inc
cmp
push
dec
mov
into
xor
imul
cmps
imul
mov
mov
pop
sub
inc
out
mov
pop
jae
leave
test
xor
(bad)
or
stc
inc
push
push
ss
jno
adc
test
mov
jns
and
cdq
mov
mov
mov
cmp
adc
clc
loop
mov
pop
xchg
and
and
imul
call
mov
enter
xor
sbb
xor
push
movs
mov
shl
or
fcom
jbe
xor
add
fiadd
xchg
dec
add
std
arpl
fcomp
lahf
(bad)
jge
popf
(bad)
push
lds
loop
mov
aas
xchg
out
(bad)
cmc
xchg
add
outs
sub
mov
mov
mov
ins
push
jp
lods
cld
cwde
jge
mov
scas
mov
jo
dec
adc
sbb
shr
mov
jo
fst
mov
push
iret
(bad)
stos
push
fxch
push
xchg
out
pop
sub
std
mov
sub
or
and
jge
mov
mov
xchg
sbb
cmp
gs
mov
mov
and
xor
loopne
ret
adc
mov
jle
mov
cmp
fidiv
cmps
inc
rcl
rol
xor
xchg
or
int
lahf
jbe
mov
xchg
pop
adc
mov
out
push
rcl
sahf
pusha
dec
daa
dec
adc
and
pusha
jl
dec
(bad)
out
pop
sub
mov
inc
ins
repnz
cld
add
push
pop
scas
nop
sbb
sub
stc
xor
pop
add
daa
out
ret
mul
lds
stos
jno
and
shr
sub
push
adc
xchg
into
push
loopne
ret
or
jo
in
int
cmp
fwait
pop
push
fs
popa
call
adc
movs
shl
rcl
push
or
test
(bad)
jae
ror
imul
inc
aas
push
stos
xor
pop
movzx
mov
push
jmp
inc
fldcw
add
xor
push
scas
aam
loopne
cld
popa
mov
push
mov
xchg
mov
xchg
cmp
xor
cdq
cmps
and
adc
xchg
adc
jns
xor
ret
out
jmp
call
cmc
lods
out
mov
mov
in
sub
sbb
mov
cmp
lahf
and
sbb
(bad)
cmps
aaa
inc
fsub
push
ins
lods
push
xchg
mov
dec
bound
cwde
movs
jnp
pop
sub
jnp
sti
out
sbb
pop
mov
push
stos
aam
add
xor
push
and
ss
jp
rcl
cmps
addr16
xchg
data16
je
sar
dec
adc
test
dec
adc
inc
inc
mov
and
int
pusha
xor
xchg
xor
movs
adc
popa
out
adc
sbb
lods
les
clc
pop
jne
and
add
jmp
dec
cmp
call
fwait
aaa
xchg
mov
jl
lods
sub
daa
xor
popa
adc
addr16
outs
xchg
test
mov
cmp
jb
adc
retf
repnz
add
in
movs
inc
sub
or
ss
(bad)
adc
cmps
iret
sti
mov
or
cwde
push
dec
adc
mov
mov
dec
sbb
xchg
call
ins
out
(bad)
and
sbb
cmp
stos
jae
cmps
or
test
jecxz
aas
xor
popf
xor
or
loop
and
dec
inc
mov
pop
pop
movs
iret
inc
jmp
xchg
dec
movs
mov
icebp
dec
xor
stc
sub
sar
fsub
enter
xchg
cld
(bad)
push
or
cmp
aam
stos
inc
(bad)
imul
push
dec
fldenv
dec
cmp
aaa
or
pop
je
fs
jp
dec
xor
scas
adc
xchg
dec
add
in
inc
idiv
xor
inc
fdivr
xchg
test
adc
popa
mov
sbb
movs
jl
sub
fbld
xchg
imul
cmps
sbb
fdivr
push
mov
lds
mov
repnz
aaa
xor
adc
mov
(bad)
jns
push
addr16
out
dec
ins
int3
cmp
jns
test
adc
add
xchg
sar
inc
aam
enter
test
gs
aad
and
mov
and
fld
in
rcr
scas
shr
movs
ds
stc
fld
cmp
push
in
out
xchg
in
dec
add
rcl
cmp
mov
add
jbe
lods
fcomp
out
(bad)
div
shr
add
repz
sub
push
shl
pop
cmp
mov
pop
lock
loope
or
(bad)
je
mov
mov
loope
(bad)
ins
ins
pop
inc
jns
into
pop
lock
gs
cmps
jecxz
cdq
or
scas
xchg
not
cmp
aaa
mov
pop
jp
pop
jmp
call
mov
lods
aas
stos
inc
sbb
dec
retf
jp
inc
adc
(bad)
scas
test
mov
pop
out
std
into
sahf
pop
dec
push
jmp
add
or
pop
jo
mov
outs
add
addr16
lock
xchg
xor
cli
mov
cwde
mov
inc
sar
mov
mov
inc
retf
(bad)
loopne
shl
sti
lds
test
lahf
fs
lahf
xor
xchg
movs
cmp
mov
sbb
and
cdq
cmps
aam
mov
sbb
sub
lea
xchg
inc
add
mov
cli
jae
ret
and
icebp
in
jp
cmc
xor
or
dec
mov
or
xor
ret
and
sub
lock
sbb
add
sub
ud1
lods
push
ins
into
in
xor
aaa
icebp
add
repz
jle
dec
dec
dec
mov
cld
je
pop
fs
dec
adc
std
mov
jmp
or
not
add
mov
mov
dec
stos
pop
lahf
inc
mov
jnp
jnp
lea
(bad)
mov
inc
loopne
lods
jl
xchg
mov
or
pop
add
push
mov
retf
test
fld
jmp
ror
int
push
jecxz
jge
mov
pop
adc
xor
lock
push
cli
pop
sbb
mov
lods
mov
std
stos
loopne
mov
outs
or
adc
int
cmp
inc
cmp
mov
mov
jl
fcompp
mov
gs
dec
sub
ror
std
movs
jbe
ins
cdq
ret
jp
dec
mov
push
sub
fcmovne
call
icebp
ins
fcom
push
mov
cmp
and
outs
jns
clc
pusha
xor
lea
jnp
xchg
and
sub
loopne
dec
pop
cmc
test
es
add
pop
mov
xor
enter
jo
xlat
mov
fisttp
ins
mov
mov
mov
xchg
retf
add
and
ds
sub
pop
mov
jl
mov
shr
test
mov
lods
idiv
sbb
xchg
ss
out
push
stos
jmp
retf
add
xchg
aaa
xchg
test
cwde
rcl
movs
mov
sti
(bad)
clc
cmp
push
xor
cmp
cmp
mov
imul
or
repz
fldcw
daa
or
test
cmp
xchg
or
adc
stos
cmps
shl
dec
aam
outs
(bad)
ja
aam
inc
inc
in
xchg
pop
cdq
scas
dec
shl
and
retf
sahf
jle
fldenv
inc
mov
adc
add
loopne
xor
shr
dec
lods
int3
inc
cmp
test
les
mov
push
scas
sbb
pop
loopne
scas
mov
arpl
fsubrp
mov
jmp
(bad)
jno
pusha
fninit
pushf
sub
gs
mov
sub
xchg
cmc
xor
sbb
(bad)
lods
rcr
sbb
out
mov
sbb
sar
sar
pop
rcl
dec
inc
add
aam
xchg
cmp
out
push
scas
push
inc
out
or
jno
add
pop
(bad)
je
outs
and
nop
mov
mov
pop
push
cmps
jmp
mov
pop
lock
arpl
pop
or
dec
in
imul
(bad)
mov
add
xchg
lock
cmps
pop
mov
adc
or
aam
pop
cwde
push
push
int3
jg
mov
retf
out
add
(bad)
nop
add
shr
jb
repnz
jp
iret
cdq
test
(bad)
pop
jb
pop
loope
sub
in
mov
jecxz
push
cmp
cmp
ins
xor
mov
dec
adc
jg
cdq
mov
cmps
mov
(bad)
imul
cdq
call
or
cs
jp
lds
sub
(bad)
xlat
jbe
pusha
addr16
clc
jmp
xor
inc
dec
icebp
retf
cmp
push
mov
push
and
push
pop
repnz
cmp
pop
std
sub
enter
das
mov
int3
add
sub
js
add
pop
mov
data16
cmp
mov
neg
mov
mov
xchg
mov
and
stos
ins
ret
adc
mov
jnp
iret
cli
sub
loope
in
ja
inc
mov
xchg
xchg
xchg
cmp
or
(bad)
retf
popf
cmp
xor
mov
and
sbb
out
addr16
fs
inc
popf
jecxz
push
retf
push
sbb
fs
pushf
pushf
sar
adc
mov
pop
sub
jl
or
and
inc
stos
and
mov
jne
jns
cmc
jge
add
xchg
rol
cli
or
loop
pop
stc
inc
mov
or
jle
hlt
mov
stc
mov
hlt
das
inc
pop
inc
leave
xchg
icebp
daa
sbb
dec
ficom
and
call
aas
inc
retf
cmp
add
push
in
out
ret
cmc
stc
adc
(bad)
adc
call
mov
mov
or
leave
pop
jl
sub
cmp
ss
punpckhwd
xchg
adc
dec
fmul
aaa
mov
lock
mov
push
xor
sub
int
(bad)
hlt
ja
outs
es
pusha
jmp
mov
stc
cdq
jmp
ins
cwde
(bad)
stos
add
mov
xor
sub
jae
mov
or
movs
imul
xor
dec
dec
fstp
xchg
cmps
stos
data16
lea
adc
mov
push
stos
cmps
inc
pop
push
out
adc
xchg
aad
adc
sahf
and
test
mov
lods
push
in
sub
aam
cwde
loope
sar
mov
cmp
sbb
imul
cs
or
xchg
jl
inc
ja
ss
daa
stos
fistp
pop
mov
dec
sub
pop
iret
mov
imul
inc
cmp
jmp
pop
push
rol
xchg
cwde
dec
and
xor
jl
push
jle
lods
out
repz
mov
xchg
xchg
xchg
or
int
jmp
cmc
push
ror
(bad)
dec
sub
out
loope
stc
into
or
call
adc
sbb
and
pop
enter
bound
pop
mov
bound
and
outs
cwde
icebp
jmp
push
test
xor
aad
aaa
ror
hlt
mov
stc
fadd
jae
aaa
sub
imul
push
add
data16
dec
sub
and
inc
add
stos
mov
jge
jne
pop
imul
sub
vucomiss
cmp
dec
icebp
daa
add
loope
xchg
and
mov
xor
call
in
mov
mov
adc
in
pusha
fstp
push
call
xor
jle
in
and
clc
fcmove
movs
xor
jae
int
push
push
sub
adc
fistp
mov
(bad)
clc
adc
daa
pop
jge
fwait
clc
aaa
or
mov
sbb
lods
fisubr
in
and
pop
dec
into
and
sub
xlat
jmp
pop
cmp
std
mov
or
cmc
into
mov
ror
pop
imul
and
inc
cmps
inc
pop
(bad)
mov
add
fadd
cdq
es
cmp
(bad)
std
stc
mov
or
xor
and
pop
jne
loopne
cs
jne
jmp
lods
mov
retf
rcl
mov
push
ins
into
mov
cmp
lea
mov
mov
pop
fwait
bound
pop
mov
pop
mov
icebp
xor
jae
add
rcl
aaa
out
mov
push
out
dec
add
cmp
mov
pop
jg
push
test
lea
popa
cmp
in
pop
pop
lods
jno
and
cld
xor
enter
add
or
pop
pushf
scas
pop
adc
cmps
sub
push
iret
push
es
sbb
inc
aas
js
mov
cmps
out
lods
mov
mov
sbb
js
inc
sbb
xor
xchg
inc
jne
repnz
test
push
(bad)
ror
stos
xor
jp
cmp
jne
loope
in
addr16
out
mov
(bad)
nop
add
mov
push
fisubr
setns
mov
aaa
mov
dec
enter
pop
shr
ror
(bad)
call
aaa
gs
mov
inc
cmp
cmps
jl
mov
popa
cmp
jne
jge
inc
mov
test
pop
push
aas
sahf
adc
cli
mov
sub
aam
call
scas
sub
in
cdq
addr16
add
jne
cwde
ffree
out
fs
ins
pop
fisubr
ins
cmp
xor
pop
jecxz
js
int
adc
popf
out
or
pop
push
test
push
add
inc
dec
fmulp
or
and
or
push
daa
mov
ror
aas
nop
or
mov
mov
mov
pusha
push
jle
mov
retf
int
fild
test
ret
sub
les
fisubr
mov
outs
jmp
push
(bad)
test
mov
js
pop
pop
xchg
sahf
inc
cmp
cmps
pop
lods
scas
retf
fmul
adc
(bad)
pop
ins
sub
popf
sbb
aad
cs
cli
push
mov
addr16
jo
fdiv
popf
lahf
pop
jno
jo
mov
ins
or
push
inc
dec
add
imul
popf
cmp
out
outs
xchg
xchg
xor
cmp
sub
es
ret
sbb
mov
not
sbb
retf
dec
test
pushf
sub
cli
arpl
int
pop
cdq
mov
clc
in
imul
mov
xor
dec
lock
pop
sbb
jmp
mov
sets
jmp
dec
pcmpeqw
pop
jl
ret
mov
add
jmp
loopne
les
lds
jle
jns
js
xchg
add
mov
into
mov
pop
sbb
mov
retf
enter
xor
popa
sub
mov
test
xchg
es
sahf
pop
jmp
mov
mov
in
ret
or
test
test
call
test
push
shl
test
rol
push
inc
mov
mov
std
movs
in
pop
mov
div
cmps
addr16
mov
mov
out
(bad)
push
mov
ret
pop
and
mov
and
pop
leave
push
in
jae
pop
pop
ror
imul
std
inc
xor
adc
xchg
ret
mov
dec
ret
add
xor
xchg
call
popf
out
pop
push
mov
push
int3
daa
imul
movs
loop
xor
dec
mov
test
addr16
push
int3
ret
repz
imul
xor
sbb
pop
(bad)
call
ja
push
mov
jle
(bad)
popf
push
int3
sbb
cmp
aas
lods
into
ins
mov
cli
lds
dec
pop
mov
test
in
xchg
mov
cmp
cmps
add
mov
xor
mov
jbe
ds
sub
fs
jmp
fmul
push
call
jg
inc
pop
es
call
xor
adc
(bad)
push
cs
sbb
lock
push
sbb
mov
addr16
shr
cmc
movs
xor
inc
pop
into
mov
retf
and
sub
push
mov
xchg
mov
dec
mov
movs
inc
out
mov
lds
pop
loope
and
jg
sahf
into
adc
aas
pusha
xor
dec
scas
outs
out
xor
(bad)
dec
mov
ja
xor
cwde
sbb
fdivr
lahf
pushf
or
retf
imul
outs
fidiv
push
push
sub
add
out
not
cmp
mov
mov
popa
xchg
aad
cdq
jl
call
inc
cmp
sbb
sar
cmp
stos
inc
push
retf
push
mov
pop
sbb
sar
push
sbb
add
push
push
daa
xor
(bad)
(bad)
daa
cmc
inc
(bad)
cmps
psubd
jno
push
pop
cwde
sbb
rol
xor
fisttp
inc
cmp
fmul
jg
cmp
inc
sub
mov
mov
mov
mov
iret
add
push
xchg
jge
mov
add
std
cmps
cmp
jg
sti
fsubr
mov
jle
mov
dec
in
adc
dec
outs
pusha
dec
cmp
scas
ror
mov
xor
adc
mov
sbb
inc
fisttp
push
fs
shl
(bad)
and
call
mov
imul
lods
jmp
out
call
inc
stc
jl
aam
inc
adc
mov
popf
and
fmul
mov
fnsave
fistp
push
call
mov
cli
cwde
pushf
mov
inc
cmp
mov
add
xor
push
in
or
rcl
iret
add
test
fnstsw
mov
call
in
xchg
(bad)
push
in
outs
cmps
sahf
int3
sub
dec
into
stos
ret
push
pushf
add
repz
popa
xlat
cmp
adc
(bad)
add
push
or
mov
push
sahf
mov
cmps
je
aas
aaa
push
lods
cmp
jmp
jle
mul
and
pop
das
push
ins
idiv
loopne
sub
mov
pop
pop
imul
into
push
dec
pushf
xor
cmc
and
mov
push
and
cdq
pop
mov
mov
inc
std
lds
out
leave
add
xor
or
hlt
gs
cs
mov
cdq
dec
test
and
xchg
mov
adc
adc
sub
ror
outs
fimul
sbb
dec
test
aad
(bad)
cmp
xchg
cmps
neg
inc
imul
(bad)
(bad)
xlat
sub
xor
jle
fcmovne
movs
(bad)
adc
jg
sub
psubusb
lods
test
stc
out
sbb
loop
sub
push
mov
xchg
outs
add
jno
in
mov
xchg
cld
push
imul
unpckhps
mov
push
scas
das
fptan
pop
jmp
dec
mov
sti
jg
scas
cwde
xchg
ret
fs
int
call
add
test
dec
pop
lods
xchg
aas
sti
jbe
adc
repnz
jmp
cmps
add
int3
repnz
push
push
(bad)
dec
adc
pop
mov
jnp
leave
and
jp
into
ret
fimul
popa
fwait
jp
inc
aaa
xor
xor
rol
cmps
sahf
or
int3
inc
stc
adc
retf
xor
adc
outs
sub
stos
ins
test
les
pusha
lock
mov
arpl
fst
lea
and
inc
imul
cld
sbb
out
ja
test
and
push
das
pop
mov
xchg
dec
loopne
xchg
adc
scas
aaa
stos
(bad)
rol
popa
mov
mov
pop
mov
push
icebp
ds
icebp
fimul
(bad)
std
cwde
inc
icebp
push
lds
mul
mov
sbb
sbb
cmp
cs
(bad)
mov
ds
xchg
add
fwait
or
pop
adc
rcr
in
and
div
addr16
cmp
mov
std
or
jle
js
aaa
adc
mov
aaa
shl
fsubr
loopne
dec
retf
pop
jno
int
pop
imul
jne
inc
pop
cmps
sub
int
lea
mov
les
std
test
sbb
enter
lods
call
add
mov
jno
out
push
xchg
cwde
xchg
movs
loop
sbb
hlt
in
pop
pop
sar
push
popa
push
or
out
mov
cmp
mov
xchg
sub
pusha
ins
xchg
inc
push
pop
scas
push
or
inc
or
pop
and
ret
sbb
xor
cmp
cdq
call
xchg
ror
adc
cmp
push
retf
add
xchg
cwde
and
dec
inc
mov
(bad)
ds
dec
ficomp
cmp
pop
outs
jecxz
fadd
(bad)
movs
lea
xor
test
fdiv
ror
test
push
jge
dec
inc
and
xor
call
mov
call
sar
neg
mov
fisub
daa
mov
imul
sub
div
mov
inc
loope
mov
pop
inc
sbb
ret
jle
pop
out
adc
inc
imul
fstp
inc
(bad)
pop
jo
and
mov
(bad)
leave
arpl
movs
mov
sbb
sti
cld
ss
pop
sub
(bad)
cmp
mov
add
(bad)
aad
aas
mov
jmp
test
push
int3
int3
xor
jne
in
or
in
xor
loop
mov
call
sbb
lahf
bnd
or
cmp
xor
fs
pusha
lods
in
push
jmp
outs
xor
fild
imul
sbb
ins
jb
repnz
inc
(bad)
sar
aas
and
je
ss
sbb
repz
lock
imul
repz
mov
test
xor
pop
jl
inc
cdq
(bad)
loopne
in
mov
aam
jne
dec
cmp
(bad)
idiv
inc
or
jns
movs
xor
mov
repz
cmp
jnp
jnp
pop
in
out
(bad)
clc
dec
push
add
in
fdiv
enter
inc
(bad)
xchg
ins
repz
xchg
xchg
push
push
or
out
lea
cdq
push
fild
(bad)
rcl
push
enter
cmp
or
push
xor
mov
into
push
fist
pop
popa
xchg
lock
sub
cs
fadd
lods
loop
dec
xor
scas
mov
stc
imul
add
ret
stc
jge
inc
sahf
mov
movs
mov
dec
cmp
bnd
mov
xor
add
xchg
xchg
imul
pop
push
loopne
mov
dec
adc
cmp
js
mov
sub
xchg
aaa
cmp
cmp
idiv
jae
pop
mov
jnp
repz
or
or
mov
in
and
pop
ja
int
fld
and
sbb
mov
outs
int3
out
mov
inc
sbb
xchg
sub
pop
push
sbb
mov
xchg
dec
outs
xor
mov
cwde
dec
call
sbb
fst
or
xor
mov
xchg
fiadd
xor
(bad)
mov
dec
mov
dec
xchg
aas
dec
ror
sub
adc
add
mov
aam
pop
push
push
fdivp
lods
clc
jnp
imul
stc
adc
inc
outs
popa
imul
or
pop
xor
loop
jmp
push
je
push
pop
call
fisubr
ja
add
pop
inc
push
dec
imul
pop
fistp
cld
jge
lahf
je
test
sbb
pop
jecxz
pop
add
adc
pop
daa
pop
fdiv
test
jge
xchg
(bad)
out
mov
inc
add
int3
jae
sbb
fidivr
imul
fdivr
shl
and
add
and
lahf
test
mov
dec
sub
fmul
mov
int3
pop
call
loope
inc
lds
push
ds
pushf
int3
lods
mov
jae
(bad)
mov
fisttp
pop
pop
imul
and
test
push
nop
adc
dec
mov
dec
fst
cmp
mov
mov
stos
push
or
popf
mov
xor
retf
inc
adc
push
sub
pop
mov
fstp
sar
inc
sbb
(bad)
fidiv
rol
jns
pop
cmc
push
fcmovb
pushf
and
push
push
add
or
fistp
sbb
aam
repz
aad
dec
sti
mov
cmp
pop
cmp
cmps
hlt
inc
inc
fsub
loop
je
push
mov
loop
cs
add
sub
add
loopne
lds
jl
std
stos
pusha
leave
sbb
lods
cmc
jne
bnd
fs
sbb
test
jg
pop
or
test
je
sub
add
inc
mov
cli
je
stc
sub
mov
scas
dec
xor
adc
ds
out
mov
out
jp
in
retf
bswap
dec
add
push
cmp
pusha
inc
and
push
push
leave
xchg
pusha
retf
or
pusha
leave
cwde
and
adc
mov
inc
mov
nop
int
out
jae
jp
cmp
sub
mov
xchg
push
jp
xchg
and
ja
aam
xchg
cld
and
xor
mov
add
cs
cmp
pusha
adc
pop
xchg
mov
push
mov
dec
inc
dec
scas
inc
ror
int3
push
mov
test
(bad)
das
pusha
lods
aaa
ret
jmp
cwde
adc
cld
mov
mov
jge
mov
gs
inc
sbb
in
loope
mov
shl
or
in
(bad)
adc
jo
push
inc
popa
sub
imul
out
inc
out
dec
rcl
mov
jmp
mov
fs
cdq
les
inc
xor
mov
jae
push
shl
inc
dec
mov
dec
enter
jmp
in
cmp
enter
mov
mov
leave
mov
shr
adc
push
ja
js
rcr
or
dec
outs
xlat
call
xchg
(bad)
mov
cli
xchg
jle
ds
dec
mov
pop
xor
sub
fld
push
sub
mov
pop
mov
daa
lds
ins
fsin
mov
and
hlt
ins
and
dec
xchg
stos
rcl
cmps
aad
push
test
jmp
in
fwait
push
mov
mov
out
dec
mov
pusha
jg
not
hlt
lds
add
test
inc
and
cwde
int3
push
jmp
pop
fneni(8087
sbb
(bad)
dec
mov
cmp
and
std
sub
mov
cmp
shl
sub
xchg
pop
or
pop
xor
jp
test
jns
cwde
mov
pop
out
and
sar
outs
mov
imul
jmp
out
xchg
pop
push
xchg
data16
scas
out
movs
lods
lods
mov
rol
ffreep
inc
mov
popa
lods
and
add
rcl
add
scas
mov
xor
add
stos
and
sbb
mov
lds
push
sbb
std
or
movs
mov
adc
addr16
mov
in
cld
xor
fwait
inc
aad
mov
jne
jge
es
inc
cs
stos
or
jne
push
pop
mov
jp
es
adc
pop
outs
ins
pop
dec
add
jecxz
add
nop
adc
leave
fwait
xchg
dec
in
jb
dec
and
and
lea
and
mov
outs
in
and
sbb
fild
pop
mov
inc
mov
dec
push
pop
popf
scas
scas
pop
xchg
adc
aad
add
pop
outs
in
ins
pop
in
(bad)
sub
test
push
cmp
xor
retf
fnstcw
inc
mov
push
imul
sbb
mov
pusha
out
pop
sbb
mov
cmp
das
fadd
pop
in
mov
pop
movs
in
test
es
push
retf
sbb
shl
jg
mov
scas
inc
popf
push
rol
sub
and
mov
xor
popf
leave
cmp
and
mov
lods
adc
mov
add
sub
fild
iret
mov
xor
pop
inc
int
rcl
jmp
nop
jge
mov
shr
dec
shl
fmul
mov
fild
fnclex
out
cmps
sub
lock
ds
aaa
ds
mov
movs
aas
outs
imul
icebp
or
iret
sti
or
jmp
pop
mov
sbb
cmp
or
add
mov
arpl
mov
inc
pop
adc
mov
mov
mov
xchg
push
cmc
sbb
adc
hlt
xchg
pop
lods
mov
xchg
mov
cmps
dec
mov
mov
pushf
sar
push
add
xchg
jg
add
cmps
call
mov
loope
je
daa
(bad)
repnz
or
movs
add
cld
mov
(bad)
rol
mov
mov
lods
pop
xchg
dec
push
jns
sahf
iret
dec
inc
add
pop
call
or
and
pop
add
(bad)
bound
jge
loop
or
cs
xor
out
or
jg
fs
cwde
int3
gs
sub
lahf
inc
and
outs
inc
sbb
pop
add
xor
sbb
xchg
inc
fsubrp
out
shr
retf
fidiv
neg
dec
mov
adc
not
push
mov
mov
inc
dec
enter
push
mov
cwde
pop
mov
out
push
leave
mov
hlt
pop
stos
popa
repnz
aad
jecxz
push
das
loopne
jmp
rcl
xor
inc
xchg
pusha
(bad)
jno
call
push
push
dec
sbb
(bad)
test
std
and
retf
mov
lods
call
push
sbb
jmp
pusha
mov
inc
cmp
lahf
push
xchg
xchg
jmp
mov
xchg
cmps
push
mov
add
fnstcw
lahf
fstp
lods
mov
cwde
dec
push
les
mul
xor
adc
ins
ja
loop
mov
mov
pop
mov
test
pop
ret
sub
or
loope
xor
fwait
in
ficom
test
mov
call
sbb
nop
fs
lock
push
mov
jp
mov
cmp
call
movs
out
inc
push
jmp
and
pop
aam
(bad)
jae
(bad)
fiadd
mov
fs
gs
mov
add
pusha
adc
mov
into
mov
lods
lds
add
or
gs
push
jle
xlat
call
dec
mov
cmp
movs
push
adc
test
mov
(bad)
mov
lods
fwait
mul
pop
sub
int3
push
inc
pop
scas
mov
jge
mov
mov
pop
inc
pop
arpl
jo
fimul
pop
inc
pop
xor
adc
ficom
jmp
sahf
(bad)
aaa
mov
sbb
xor
rol
bound
xor
or
pop
lods
sahf
cmp
movs
push
leave
out
js
shl
add
movs
pop
adc
push
outs
mov
mov
jmp
outs
xchg
ins
mov
push
push
cs
popf
sahf
push
dec
mov
fwait
movs
jmp
or
sbb
call
imul
idiv
repnz
ror
jecxz
or
(bad)
bound
shl
mov
sbb
or
adc
and
stos
add
movs
and
fisub
sbb
inc
adc
test
cmps
inc
ret
cmp
test
pushf
pop
(bad)
in
retf
fmul
inc
dec
(bad)
mov
adc
sub
lods
neg
leave
(bad)
mov
gs
leave
sub
popa
add
popa
lods
scas
fwait
jnp
adc
inc
js
xchg
je
adc
(bad)
adc
xchg
jns
push
pusha
sbb
xchg
imul
lock
pop
mov
arpl
sub
mov
push
sub
and
pop
scas
sub
scas
sahf
icebp
test
nop
int3
popf
lahf
mov
sbb
lods
das
fbstp
add
pop
cmc
(bad)
xchg
sub
les
outs
std
mov
iret
mov
clc
ins
add
(bad)
cwde
dec
push
call
mov
mov
push
int
out
pop
aam
and
out
je
jmp
xor
rol
xor
daa
ficom
addr16
in
pop
xchg
(bad)
cmp
(bad)
ds
inc
inc
sti
xchg
sub
inc
xchg
inc
xchg
ror
mov
pop
mov
jge
bound
sar
xchg
stos
rcr
pop
cld
popa
loopne
leave
sub
mov
pop
inc
sbb
push
mov
mov
xor
retf
movs
xor
retf
(bad)
cmps
jp
inc
inc
cwde
adc
jae
jns
std
and
xchg
mov
repz
fidivr
stos
inc
jmp
adc
mov
lahf
mov
dec
jne
jmp
cmp
repnz
and
mul
rcr
mov
pop
ins
push
push
shl
ins
int
ins
or
dec
ret
lea
jne
sbb
test
sahf
aas
dec
cmp
push
(bad)
setg
pop
or
jmp
aad
push
aas
jmp
cmp
mov
addr16
jo
and
stos
repz
adc
mov
mov
jle
icebp
into
imul
mov
daa
(bad)
and
popa
sub
lahf
dec
imul
inc
ins
imul
imul
pusha
push
jge
dec
repnz
dec
adc
add
ss
mov
xor
push
and
stc
inc
loope
or
sbb
leave
mov
loopne
jmp
xchg
and
fbld
dec
loop
inc
shl
xchg
push
jg
ss
dec
fnsave
push
stc
mov
inc
xchg
mov
sub
fcomp
mov
cmp
cs
mov
mov
enter
mov
adc
cli
xchg
pop
out
sub
mov
gs
dec
(bad)
mov
add
(bad)
lods
aam
add
clc
inc
fwait
ss
jb
pop
and
xchg
xor
dec
or
popf
push
es
mov
mov
push
jl
ret
and
sub
movs
das
mov
mov
int
loopne
xchg
aam
fnsave
rol
std
sbb
je
les
jne
jl
les
retf
test
out
js
xchg
retf
mov
repnz
retf
push
sbb
xor
add
scas
jecxz
aad
sub
daa
push
cmp
mov
cmp
mov
hlt
inc
adc
cmp
div
adc
jl
sub
mov
bound
mov
(bad)
jecxz
call
cmp
cmp
scas
js
movs
repnz
adc
add
fcom
inc
pop
xchg
dec
fist
inc
jg
xchg
mov
imul
arpl
stos
and
jmp
mov
inc
adc
loope
stc
clc
xor
aad
fist
adc
lds
fldl2e
rol
dec
mov
fldcw
add
sub
mov
fidiv
iret
ja
inc
xchg
popa
mov
mov
jbe
sub
mov
rol
mov
outs
fld
fwait
jl
int
xchg
xchg
stos
jmp
out
jmp
mov
loope
lods
imul
adc
test
or
xchg
inc
cmps
push
arpl
or
or
(bad)
lock
sti
xor
ds
sbb
cmp
cwde
aas
or
push
cli
mov
jo
fisttp
fisub
jecxz
push
mov
xchg
fcomp
dec
dec
aaa
cmp
add
ins
adc
arpl
lods
jns
in
cmp
int3
arpl
out
xchg
stos
pop
pop
add
sub
or
les
dec
jmp
leave
dec
jle
repz
pop
(bad)
jmp
idiv
sub
aam
cld
jle
loope
xlat
bound
mov
xor
jns
aas
and
in
dec
or
add
add
iret
sbb
mul
das
jl
aas
xchg
cmp
xor
jle
pop
fsubr
sbb
fist
xor
popa
bound
pop
test
loop
jne
aam
aam
sbb
add
idiv
retf
xchg
mov
icebp
pop
arpl
add
out
std
push
enter
ret
fild
dec
mov
ret
push
popf
loopne
js
not
sbb
stos
mov
sbb
xchg
(bad)
and
or
jmp
xchg
lods
jb
cmp
mov
addr16
fs
pusha
mov
cmp
fs
pop
jo
push
dec
retw
push
aam
mov
rcr
or
or
dec
cmc
sub
mov
(bad)
leave
enter
inc
xchg
inc
push
jno
push
adc
inc
sti
sti
das
xchg
and
xchg
jg
adc
sub
or
repz
jae
les
ins
or
mov
pop
lock
(bad)
push
pop
add
mov
ret
xchg
push
aam
fild
test
aad
xchg
mov
call
enter
out
test
sbb
scas
cmp
adc
fucom
add
sub
and
es
mov
jno
and
retf
or
mov
leave
pop
hlt
fpatan
mov
push
mov
ds
push
rcl
inc
test
cmp
inc
setbe
jl
xor
hlt
mov
fwait
pop
call
push
adc
push
sub
shl
std
add
push
add
and
xor
push
test
mov
pop
mov
outs
pop
enterw
inc
jbe
xchg
cs
sub
sbb
mov
sub
loope
jp
sbb
pop
jno
cwde
fwait
adc
dec
inc
xchg
or
sub
dec
cld
mov
test
in
mov
fisttp
sbb
xchg
jp
adc
and
cmps
push
adc
repnz
clc
add
data16
in
lods
ja
xor
fmulp
or
aam
sub
mov
(bad)
push
or
fld
leave
mov
jae
mov
dec
lahf
mov
enter
dec
repnz
mov
jp
adc
sub
cmps
ror
rcl
inc
loop
push
pop
out
out
sbb
sub
fild
xchg
(bad)
movs
int
and
gs
mov
or
loop
adc
outs
cld
cmp
sti
xor
xor
adc
ret
adc
pop
shr
mov
push
stc
ds
xor
inc
jecxz
arpl
loopne
and
cs
xor
mov
add
lods
dec
popa
cmps
cmp
bound
fdiv
push
sbb
shl
jge
imul
pop
mov
aaa
xlat
add
mov
scas
in
arpl
pop
ss
push
call
bound
fistp
xchg
cmp
xor
mov
mov
dec
xchg
jae
jecxz
mov
mov
outs
mov
inc
cmp
dec
dec
pop
jge
cmc
(bad)
les
xchg
popa
(bad)
loope
pop
push
nop
inc
pushf
rcl
cmp
ins
repnz
adc
cmp
pop
shr
or
mov
xlat
cmps
inc
push
daa
dec
cmps
aam
push
cmp
enter
push
enter
outs
xor
dec
add
add
wbinvd
in
(bad)
rol
int
lahf
adc
mov
sub
ror
fisub
icebp
jbe
mov
jbe
mov
out
loope
xchg
mov
scas
lods
and
into
imul
movs
xchg
mov
mov
and
lock
and
sbb
mov
leave
lea
push
adc
adc
push
stc
outs
mov
mov
sbb
in
jmp
div
retf
pop
dec
and
dec
test
out
cdq
je
jmp
je
sbb
adc
cmc
sub
rcr
cmps
xor
push
cmp
push
mov
out
dec
mov
jne
ror
push
mov
inc
nop
and
or
dec
dec
xchg
(bad)
aad
shl
loopne
cmp
int3
sbb
aas
add
jne
cmp
repz
jnp
xchg
dec
mov
mov
aas
loope
mov
les
fs
pop
inc
sub
in
and
jo
inc
mov
ror
or
rcr
cmp
imul
lock
ror
sub
or
mov
sbb
aad
aas
fnstcw
jle
pushf
xchg
cmps
jl
aad
fisttp
jl
je
cmps
addr16
out
imul
mov
(bad)
mov
jbe
fbld
test
pusha
dec
stc
icebp
test
mov
cli
rcl
loop
test
push
outs
out
push
test
bound
lods
pushf
push
inc
mov
repnz
std
push
mov
lds
loope
add
mov
xor
bound
test
push
fld
xchg
std
mov
mov
mov
xchg
aad
sar
cdq
xchg
cmc
or
(bad)
mov
push
cld
dec
push
loopne
imul
sbb
or
dec
mov
xchg
push
sub
lea
fsub
mov
(bad)
xor
pop
mov
fdivp
xlat
(bad)
cmps
fiadd
pop
or
add
clc
mov
add
jl
repz
dec
int
test
hlt
cld
pop
xchg
movs
adc
adc
(bad)
ins
adc
jnp
retf
popa
mov
jne
fcomip
shr
dec
or
xchg
xchg
ins
mov
scas
sahf
xchg
ficom
sar
cmp
mov
jbe
xor
ds
push
in
add
sbb
in
inc
sub
shl
dec
ds
imul
jnp
imul
mov
jns
sahf
stos
and
adc
or
push
bound
out
aad
in
pop
aad
enter
lock
arpl
jne
(bad)
fnstenv
mov
lahf
iret
jecxz
clc
fistp
cmps
(bad)
push
in
sub
sub
pop
jno
inc
popa
inc
ficomp
mov
xlat
out
out
in
lds
in
outs
std
mov
sub
inc
add
ja
fsubr
mov
xchg
adc
mov
pushf
dec
jnp
loope
lahf
ds
scas
sar
mov
pushf
and
mov
in
(bad)
jb
add
jmp
add
xchg
pop
pop
clc
(bad)
pop
and
pop
jle
dec
adc
sbb
nop
push
sbb
mov
das
stc
iret
sahf
mov
mov
outs
out
mov
add
scas
sbb
mov
adc
in
into
loope
dec
jg
xor
mov
mov
rcr
mov
das
(bad)
cmps
sub
(bad)
xor
mov
adc
call
pop
gs
frstor
adc
cmps
repnz
or
sub
add
jp
adc
shr
and
mov
pop
cmp
cmp
shr
gs
pop
dec
lds
(bad)
xor
clc
xchg
loop
sbb
jp
sbb
pop
cwde
lods
ja
and
add
aad
jno
(bad)
cdq
jge
aam
jno
add
call
jns
out
je
push
(bad)
bound
ins
scas
xchg
jge
inc
out
aad
ins
inc
xor
movs
sub
mov
fst
xor
nop
int3
jmp
sbb
pop
or
mov
fbstp
lods
cmp
cs
fldcw
aas
ins
cmps
in
stos
push
pop
shr
retf
add
push
jb
(bad)
leave
mov
sbb
mov
repnz
aas
cmp
rcl
cmp
inc
in
jg
setnp
sbb
inc
out
push
fild
push
cmp
dec
adc
cmp
jg
call
xor
stos
mov
pop
jg
cmp
and
xor
add
jae
jmp
inc
mov
je
fisubr
dec
fwait
cmp
add
lds
les
(bad)
ror
mov
add
mov
retf
in
sub
or
jle
repz
mov
xor
outs
pop
cmp
xor
sbb
pop
mov
lods
sbb
sbb
and
push
in
ds
fsubr
into
fwait
ret
dec
sub
in
cmp
leave
pop
mov
ret
ss
mov
add
and
call
scas
mul
jo
inc
not
out
(bad)
(bad)
pop
(bad)
enter
xchg
int
adc
hlt
cmp
xor
mov
sbb
jge
ins
inc
ret
fs
ret
cmps
pusha
push
jnp
mov
dec
js
xor
arpl
test
(bad)
(bad)
stos
fisttp
jns
mov
pushf
mov
jo
cli
mov
aas
cs
push
jns
push
outs
retf
mov
fst
pushf
jmp
jge
cmps
mov
mov
scas
ds
ins
xor
jnp
mov
adc
fdivr
(bad)
xchg
mov
add
jp
ss
dec
adc
gs
not
xor
sub
push
mov
jmp
(bad)
rol
fld
ds
sbb
test
js
cmp
jmp
movs
out
inc
adc
and
xchg
jno
scas
(bad)
jmp
sbb
fmul
jae
(bad)
inc
push
fbstp
mov
repz
sti
cdq
xchg
lock
(bad)
mov
xor
inc
stc
rcr
sti
xchg
and
dec
adc
jmp
add
jl
xchg
and
cs
mov
sub
(bad)
inc
or
loop
push
pusha
hlt
popa
push
xchg
cld
in
dec
or
(bad)
and
enter
mov
cdq
jg
mov
mov
xlat
daa
retf
lds
in
pop
aad
cvtps2pi
pusha
retf
std
stc
repnz
push
test
scas
xchg
jmp
std
push
psllq
cs
jno
or
sbb
sub
mov
pop
jbe
mov
mov
jo
xchg
push
sub
add
in
xchg
pop
jns
retf
das
arpl
mov
mov
push
ror
fcmove
push
es
mov
mov
pop
(bad)
aam
jmp
sub
mov
(bad)
sbb
cli
aas
cld
adc
adc
pusha
mov
in
sbb
mov
push
in
popf
es
or
pop
mov
mov
std
fbld
jl
jo
sub
test
lods
and
rcl
sub
and
dec
pop
loopne
pop
popf
xchg
fisttp
call
or
jbe
repz
jg
push
dec
cmp
fcmovnu
xor
sbb
mov
cmp
push
jmp
sbb
push
outs
mov
add
repz
sar
mov
xchg
jge
test
(bad)
out
add
sbb
stos
mov
pop
cmp
imul
pop
mov
pusha
cmc
dec
adc
jbe
mov
ret
sbb
jbe
jne
sar
jne
cmp
inc
mov
into
fistp
add
mov
xchg
sbb
(bad)
jg
sbb
sbb
mov
jp
fisub
jnp
enter
cmp
or
call
xchg
fnstcw
push
dec
loop
icebp
xlat
add
dec
push
xchg
les
scas
dec
or
sbb
addr16
and
sbb
inc
addr16
jg
mov
sub
inc
mov
push
and
clc
mov
ficomp
sbb
push
push
sub
ror
fimul
ds
aaa
inc
(bad)
dec
ins
cdq
fxch
popf
sahf
(bad)
nop
loope
jb
retf
xor
dec
lock
inc
loop
mov
add
add
mov
cwde
icebp
pop
pop
add
mov
retf
rol
imul
dec
mov
test
gs
xchg
and
push
aad
scas
add
mov
and
mov
mov
xchg
add
mov
xlat
mov
movs
sbb
and
xor
xchg
pop
imul
jno
lock
es
jecxz
mov
adc
sub
loopne
dec
dec
cmp
pop
adc
mov
clc
dec
stc
add
pop
mov
lock
test
stos
cmps
cwde
sbb
pop
jge
mov
xchg
movs
mov
cs
test
bound
mov
(bad)
inc
outs
cli
je
mov
xlat
push
jge
(bad)
mov
repz
idiv
push
addr16
clc
xor
ds
fst
cs
jns
sbb
fld
lock
jns
sub
add
dec
test
and
aam
cmp
mov
or
add
nop
adc
push
mov
push
inc
and
adc
cmps
adc
mov
mov
ftst
adc
(bad)
out
(bad)
cmp
imul
push
movs
lods
adc
mov
fwait
sbb
ss
push
push
pop
push
test
pop
xor
inc
cli
sub
and
pop
in
movs
mov
test
in
adc
sub
fisub
adc
js
jne
push
sbb
sbb
outs
cmps
stc
mov
fcom
out
xchg
test
xchg
sub
and
add
push
test
adc
inc
test
cmp
(bad)
mov
mov
fisubr
cdq
cld
mov
aas
push
xlat
and
xchg
xchg
sbb
jo
cmp
xchg
sbb
xchg
aaa
fidivr
je
out
out
mov
jno
ror
(bad)
fisubr
pop
shl
mov
js
jmp
push
and
inc
mov
adc
jb
mov
(bad)
or
pop
push
cmc
enter
inc
xchg
jb
xchg
pop
mov
ret
fsubrp
pop
adc
and
adc
in
or
xor
pop
out
cmp
pop
cmp
xchg
pop
mov
mov
js
fwait
mov
xchg
dec
add
cmp
sub
mov
push
push
int3
inc
call
pop
mov
and
and
aas
sbb
je
mov
(bad)
outs
sbb
test
cmp
sete
add
scas
mov
or
mov
jbe
outs
(bad)
das
jmp
jge
and
jle
sbb
xchg
xor
or
pop
sub
or
stos
and
or
rcl
sub
add
push
dec
shl
add
outs
scas
mov
shl
fwait
mov
lods
push
xchg
or
xchg
test
imul
test
movs
pop
sub
outs
pop
ins
sub
ret
sub
lock
push
jge
jo
dec
sub
sub
push
ja
nop
jno
add
add
xchg
aas
movs
adc
ja
jge
(bad)
inc
xor
sbb
mov
js
jmp
inc
shl
mov
mov
push
dec
shl
cmps
or
imul
sbb
test
movs
xor
push
movs
pop
in
adc
sbb
cmp
scas
call
in
jl
sub
xchg
push
mov
mov
mov
in
mov
clc
scas
mov
adc
rcl
push
enter
loopne
out
fs
mov
sub
jp
mov
mov
dec
repz
mov
sub
(bad)
fstp
adc
loopne
sbb
sahf
(bad)
fst
jl
iret
add
adc
mov
push
sub
mov
rol
fmul
push
mov
icebp
sar
test
hlt
pop
sbb
out
rcr
mov
enter
and
loop
mov
jecxz
clc
pop
pop
xchg
cmp
mov
or
stos
test
jecxz
mov
and
mov
mov
shr
jno
dec
sub
mov
add
scas
cli
xchg
scas
cmp
clc
adc
jne
ficom
xor
push
adc
jecxz
pop
add
sti
mov
mov
shl
adc
pop
jle
push
cmp
xchg
test
mov
sub
adc
sti
rcr
xor
jnp
mov
jmp
jne
xchg
or
mov
imul
mov
inc
jle
xor
inc
push
jbe
sbb
sahf
ins
mov
popa
jmp
fadd
(bad)
or
jl
adc
or
or
mov
loop
push
retf
imul
aam
icebp
call
and
arpl
xor
ds
xchg
jo
shr
imul
adc
jmp
addr16
mov
jb
shl
pop
scas
fisubr
or
cli
pop
xor
jns
ror
stos
fcos
ret
jo
adc
(bad)
outs
mov
rol
gs
sbb
cmp
popf
xchg
or
mov
and
jno
mov
add
jo
call
cmps
addr16
sti
test
sub
cwde
xchg
mov
jp
(bad)
test
sbb
(bad)
sbb
test
inc
jge
dec
ret
out
test
jo
sub
inc
call
dec
ss
pop
fsub
pop
mov
out
jmp
jge
xor
push
push
xchg
mov
pushf
fmul
retf
(bad)
or
call
(bad)
stc
add
adc
adc
out
dec
jbe
icebp
jg
push
mov
or
cmp
jg
fdiv
or
push
movs
fistp
jle
lods
inc
in
mov
sti
jno
in
mov
or
lock
in
jl
dec
fmul
aad
mov
fsub
cmp
fndisi(8087
xchg
test
js
and
xor
mov
ds
xor
fs
dec
enter
xor
in
outs
jo
lfs
cmp
mov
push
sti
ss
stos
cmp
add
sub
das
push
mov
xlat
lea
xor
adc
outs
cli
adc
mov
aam
lds
cmps
dec
add
or
cmp
sar
jno
sub
pop
pop
adc
dec
cli
hlt
push
retf
test
push
sub
pop
jge
pop
fs
int
ror
test
mov
jmp
mov
idiv
and
fnstcw
jb
rol
pop
rol
mov
inc
cmps
test
or
jns
into
dec
jmp
pop
(bad)
leave
and
adc
jo
rol
sti
daa
push
jmp
inc
xchg
sbb
pushf
jmp
add
and
cdq
cli
cmp
dec
cld
add
dec
and
repnz
xchg
gs
dec
mov
cs
dec
lods
ins
lock
and
test
push
inc
jmp
in
lods
sbb
xchg
stos
test
retf
xor
inc
(bad)
daa
(bad)
or
ins
mov
out
bound
hlt
jmp
iret
xor
push
call
das
or
fwait
adc
pop
cmps
cmps
int
fisub
popf
rcr
(bad)
adc
and
das
aam
in
loop
pop
test
push
add
and
mov
nop
jbe
mov
hlt
mov
bound
ja
fistp
mov
loope
and
call
xchg
cmps
call
mov
mov
hlt
xor
cs
inc
xor
aam
repnz
ds
out
(bad)
(bad)
mov
push
push
pop
add
sbb
xor
cmc
inc
and
mov
scas
push
mov
test
add
loopne
jle
lea
xchg
sub
add
(bad)
cmp
sti
mov
out
mov
mov
mov
xchg
neg
scas
xchg
retf
cld
add
inc
push
inc
aam
nop
jg
and
mov
jo
dec
jle
sti
sbb
cli
jnp
mov
ss
pop
cmps
daa
push
icebp
mov
adc
pop
or
xchg
pop
add
cld
add
out
push
jo
pop
je
adc
lods
stos
movs
sub
ror
aas
mov
cs
pop
push
in
icebp
push
cmp
dec
add
in
jmp
xor
test
sti
mov
jmp
jl
jno
and
jle
mov
pop
pop
cmps
add
pop
loopne
cwde
cld
push
jmp
and
rcr
mov
retf
xchg
mov
ins
mov
test
gs
repz
das
jne
leave
and
outs
aad
fdiv
fisub
mov
push
push
bound
jmp
xor
push
and
and
int3
and
sub
int3
sub
and
repz
jecxz
jp
pop
stc
sub
loop
in
lahf
aaa
dec
repnz
mov
sbb
jno
(bad)
pop
xor
xchg
mov
out
into
pop
add
aaa
adc
dec
inc
fdiv
scas
add
je
jge
and
clc
icebp
inc
or
mov
loop
mov
in
sbb
popa
push
jo
loope
ja
jo
int3
popf
and
lods
cmps
add
into
cmp
out
cs
lahf
adc
pop
lods
loopne
add
mov
mov
jp
pop
popa
movs
dec
add
dec
adc
shl
mov
call
movlps
fabs
fs
cmc
fcmove
lods
xlat
pop
push
push
ja
sbb
fst
inc
(bad)
xor
clc
push
push
cmp
pop
rcr
mov
adc
scas
mov
mov
gs
mov
inc
in
mov
ds
retf
or
dec
inc
shl
imul
lods
or
int
sub
cmp
or
outs
sub
inc
pop
js
jge
sbb
cmp
and
(bad)
dec
jo
pop
mov
ret
add
addr16
jo
shl
ins
add
mov
push
std
pop
mov
sbb
aaa
sahf
push
stos
(bad)
in
into
ret
adc
cwde
mov
sub
popf
cmp
dec
or
cmp
call
pop
aam
inc
loopne
pusha
xchg
imul
xor
cld
test
(bad)
xor
std
leave
cmc
xchg
sbb
mov
xor
or
(bad)
in
jmp
int3
cmps
sbb
sti
vzeroall
sbb
fadd
jmp
xor
ins
sar
(bad)
mov
xor
rcl
sub
loope
wbinvd
nop
jnp
into
xchg
jmp
je
ret
adc
mov
scas
call
xor
push
sbb
das
lods
(bad)
ret
and
(bad)
sar
mov
xor
pop
addr16
aaa
xchg
push
clc
and
adc
mov
push
or
fcomp
cmp
jno
fild
stos
stc
push
pop
push
inc
mov
aam
(bad)
push
jo
jecxz
aas
sbb
daa
ins
xlat
push
gs
std
rcl
cld
repz
push
adc
cmp
mov
inc
popf
inc
or
in
outs
clc
test
call
sbb
jno
push
push
ret
popf
sbb
add
test
(bad)
repnz
add
sbb
cld
mov
loop
mov
add
add
ret
and
out
shr
add
test
lods
sbb
xor
or
fucom
inc
jge
xor
cmps
ds
cmp
sbb
lods
andnps
loope
in
and
daa
movs
adc
(bad)
sar
jp
addr16
adc
adc
xchg
dec
adc
bound
inc
xchg
test
jae
loop
arpl
out
mov
mov
popa
in
add
lea
out
or
adc
sub
mov
push
cdq
sub
sahf
fsubr
push
push
jno
cmp
mov
mov
and
movs
popw
pop
in
pop
mov
arpl
aas
xor
push
cmps
jno
das
jp
dec
inc
pop
rcr
sbb
and
and
xchg
ins
jmp
xchg
retf
call
and
test
mov
ret
mov
or
aas
jnp
fisttp
mov
mov
mov
pop
ficom
mov
clc
xchg
sahf
icebp
aad
cmp
and
ja
stos
gs
mov
jo
fadd
inc
jmp
push
cs
jg
pop
xor
test
pop
push
jno
mov
sbb
inc
jmp
test
inc
arpl
push
xchg
cmp
test
add
dec
rol
adc
cmp
push
pop
xor
into
xchg
or
sahf
cmp
adc
fisttp
dec
or
sub
push
adc
dec
or
pop
enter
dec
(bad)
dec
jge
and
xor
gs
mov
into
xchg
aaa
sub
nop
add
mov
lea
outs
mov
jg
jnp
jnp
mov
retf
iret
or
adc
sub
fld
xor
(bad)
in
dec
out
imul
pop
and
adc
gs
ja
hlt
hlt
out
push
dec
dec
lds
retf
xor
pop
popa
in
pop
imul
cmps
dec
pop
inc
or
mov
pusha
push
movs
sbb
dec
cmp
and
jo
hlt
inc
neg
dec
lods
and
xchg
hlt
sub
std
mov
sbb
or
pop
cmp
daa
test
dec
js
inc
(bad)
outs
das
shl
adc
mov
pop
std
or
ret
xchg
cli
mov
aaa
cmp
jl
jecxz
cmp
call
mov
aad
hlt
pop
dec
and
push
mov
lock
fs
and
pop
adc
cmp
cmps
aas
cmp
leave
pop
inc
ss
pop
inc
repz
mov
xchg
inc
pop
imul
mov
adc
(bad)
jae
jl
adc
lds
sub
mov
pop
gs
mov
cmp
cmp
xor
lahf
push
imul
repz
pop
hlt
pop
mov
mov
imul
in
xor
sub
jae
imul
xchg
jbe
and
push
test
push
mov
in
pop
les
jp
lds
aam
mov
rcl
retf
popf
mov
out
mov
test
int
pop
push
mov
pop
lea
sbb
out
sbb
cmp
mov
ins
xor
in
mov
push
enter
inc
(bad)
into
neg
jl
cdq
stc
or
adc
or
and
retf
pop
xchg
cmp
xchg
sbb
jge
xor
xchg
jnp
or
dec
xchg
sbb
pop
aam
inc
psllq
out
inc
jle
and
sub
or
std
(bad)
das
es
lods
aas
xor
inc
repz
adc
jns
je
xor
cmc
bound
(bad)
mov
sub
dec
movs
adc
idiv
mov
into
xlat
mov
push
shr
xchg
cmp
mov
int
std
cmp
mov
cmp
test
pusha
popf
ret
jbe
jge
call
mov
mov
outs
into
clc
mov
adc
sbb
std
loope
sub
xor
sub
and
jmp
cdq
xor
jle
mov
mov
out
add
inc
movs
and
xchg
jecxz
pop
enter
mov
test
push
pop
into
jb
stos
xor
ret
or
stos
retf
nop
jae
and
push
mov
pop
in
fbld
mov
xchg
movzx
fstp
call
pop
ret
mov
int3
shr
inc
fidivr
test
xchg
adc
inc
mov
stc
jmp
daa
pop
jb
add
jecxz
pop
pop
jmp
xor
fmul
sbb
rcl
aaa
sar
inc
add
xchg
mov
(bad)
mov
cs
pop
sti
dec
leave
push
fcmove
cmps
les
ss
fcomp
bound
(bad)
leave
retf
jo
pop
repz
add
push
mov
cwde
gs
jg
push
es
xor
call
mov
inc
je
pop
push
fisttp
stos
test
push
pushf
inc
mov
sbb
push
data16
pop
into
shl
and
jecxz
inc
aaa
adc
adc
cdq
ja
dec
mov
shr
fs
jmp
adc
sbb
icebp
xor
inc
push
push
xlat
mov
sti
push
cmp
sub
jb
(bad)
sbb
xor
xlat
sbb
sub
(bad)
sbb
or
sub
aam
cmp
retf
es
lods
dec
leave
inc
rcr
mov
pop
test
call
outs
adc
ret
dec
stos
xchg
pop
add
adc
or
fisub
stos
inc
cmp
add
retf
dec
icebp
sub
pop
popa
and
mov
inc
and
daa
dec
div
pop
cmp
ficom
test
mov
test
push
push
scas
test
inc
cmp
push
adc
into
aaa
lods
addr16
fldenv
enter
jns
scas
push
push
or
lock
shr
adc
aaa
in
jmp
mov
sbb
mov
sub
mov
ss
adc
jl
cmc
or
dec
int3
fs
ins
lods
pop
daa
jmp
xor
jne
dec
ja
jmp
in
imul
loopne
xchg
sbb
cld
add
xchg
enter
jmp
ja
stos
sub
mov
lods
sub
aas
mov
icebp
pop
xchg
dec
or
pop
jg
cmp
adc
xor
in
sub
pop
shr
cwde
cmp
das
pop
jno
xchg
pusha
imul
test
fld
inc
sbb
cmp
ret
jl
ja
push
sar
or
jne
sar
(bad)
mov
aas
test
jns
movs
inc
mov
inc
test
cmp
gs
cmc
xor
iret
xchg
rol
out
pop
fcom
mov
jp
and
pop
sbb
mov
dec
cmp
mov
loop
fsub
cmp
sbb
dec
dec
cs
nop
daa
xchg
out
scas
lea
dec
pop
dec
mov
mov
cmps
cmp
(bad)
mov
cmp
push
and
xlat
mov
push
inc
jae
fistp
lods
gs
xor
and
add
pop
xchg
and
jbe
or
stos
lods
data16
imul
jne
inc
or
test
aam
clc
or
out
dec
jmp
es
dec
mov
js
loope
fist
and
xor
cmp
mov
aaa
pusha
mov
push
mov
cmp
dec
test
xor
gs
stc
dec
sub
or
dec
push
sub
fsubr
dec
imul
sub
sub
push
xor
mov
(bad)
int3
adc
pop
repz
dec
mov
pop
hlt
fwait
mov
outs
jnp
push
and
xchg
ja
mov
aas
sbb
stc
sbb
dec
xor
pop
jne
dec
mov
xor
out
sub
jg
mov
(bad)
(bad)
mov
pushf
bound
stos
mov
loope
sti
test
inc
das
cmps
push
popf
fdivp
push
cmp
inc
xor
hlt
xchg
pop
push
fcmovnu
mov
shl
adc
inc
and
jae
mov
aas
stos
mov
push
scas
lods
mov
nop
bound
nop
cwde
cmp
test
scas
add
inc
call
jo
es
sbb
sub
add
inc
lods
mov
loope
add
dec
xchg
cmps
neg
mov
mov
cmps
inc
mov
jmp
ins
std
push
shr
lods
cli
(bad)
lahf
inc
shr
rcl
lds
leave
rcl
ss
fiadd
rol
and
fsub
sbb
push
pop
xor
mov
push
adc
loope
(bad)
mov
mov
xor
and
cmp
push
mov
gs
(bad)
dec
push
(bad)
jl
es
mov
xchg
sub
inc
jne
xchg
(bad)
movs
xor
jbe
or
xchg
sbb
test
retf
rcl
push
sbb
sub
dec
or
xor
popf
sbb
adc
in
into
or
stos
sar
lea
adc
cmp
push
and
mov
in
lods
lods
xchg
dec
sahf
push
ror
in
aad
sub
mov
mov
push
pop
adc
stc
test
call
mov
sub
inc
jg
lds
lods
outs
adc
dec
fidivr
mov
ja
pusha
mov
push
xchg
sub
int3
out
lea
neg
push
in
push
ja
das
js
cmovo
pop
pushf
jns
push
xchg
fmul
mov
mov
popf
adc
bound
ret
std
mov
lds
out
xor
xchg
popa
inc
cld
push
jns
pop
mov
or
pop
inc
daa
fstp
add
scas
dec
push
clc
fucomip
adc
cmp
loop
scas
sahf
push
push
frstor
mov
(bad)
enter
imul
sbb
in
addr16
pop
inc
or
xchg
sub
adc
sub
addr16
ja
retf
rcl
jmp
sbb
popa
in
push
add
ror
cmp
ret
call
lahf
push
and
dec
sbb
out
add
sti
gs
cmp
test
(bad)
(bad)
in
adc
mov
xchg
add
arpl
mov
sbb
jo
mov
outs
jbe
ret
sar
adc
jno
mov
xchg
xchg
mov
test
or
cmps
add
cmp
popf
ins
popa
test
jg
and
pop
test
or
outs
ret
jl
cs
lock
push
xor
push
rcl
cmp
adc
scas
adc
clc
loope
in
aad
mov
aas
push
or
repnz
js
dec
dec
mov
int3
xchg
push
(bad)
aam
dec
pop
mov
aam
mov
dec
mov
ret
fstp
pusha
fisttp
loop
in
mov
mov
movs
mov
sbb
data16
mov
or
aaa
sbb
push
and
bound
fadd
mov
mov
fcmove
mov
jo
or
cdq
js
sub
mov
push
repz
xor
jp
mov
jg
pop
ror
add
add
retf
mov
sub
pop
add
pop
jo
call
(bad)
hlt
dec
std
pop
pop
mov
enter
push
lds
jl
adc
dec
cmp
jp
pop
and
mov
lods
inc
sbb
inc
jne
jmp
(bad)
std
and
ret
int
lahf
mov
dec
xor
fstp
xchg
mov
jae
lea
jmp
adc
xchg
xor
out
adc
sbb
adc
(bad)
mov
es
cmp
mov
cmp
xchg
loop
test
sbb
add
pop
inc
add
popa
mov
sbb
inc
mov
call
int
in
fsub
dec
sbb
inc
popa
das
mov
cmc
or
(bad)
sub
pop
int3
push
jl
xchg
and
sbb
mov
jb
nop
fst
cld
call
adc
or
mov
iret
sahf
and
mov
pop
add
ret
pop
(bad)
repz
ret
xchg
fisubr
and
shr
xor
xchg
pop
push
adc
inc
lock
std
outs
adc
push
mov
stos
pop
and
dec
into
loope
xchg
push
push
jp
fs
xor
push
jl
xor
cmp
sbb
push
js
aam
into
sbb
xchg
fcomp
xchg
mov
std
pop
leave
jecxz
movs
mov
inc
fwait
lock
adc
shr
mov
int3
mov
ds
fwait
(bad)
les
dec
xchg
sbb
fnstcw
sar
sub
stos
mov
sub
adc
aaa
js
lahf
xchg
dec
fadd
popf
sbb
cmp
dec
and
pop
mov
scas
pusha
je
or
mov
lea
add
aas
fwait
mov
dec
ins
xor
in
ss
or
cdq
xor
fisubr
jo
xchg
mov
mov
inc
inc
inc
iret
and
dec
push
std
mov
and
outs
outs
push
pop
ds
movs
push
sub
push
int3
mov
xlat
add
jne
mov
pop
mov
arpl
popf
dec
dec
pushf
push
xlat
inc
(bad)
jb
jp
ins
leave
imul
and
inc
adc
cdq
ret
add
and
int
cmp
(bad)
pop
jmp
mov
retf
dec
aad
sub
rcr
sub
mov
lahf
imul
pop
cmp
mov
push
or
retf
movs
jns
mov
cdq
daa
dec
cwde
push
or
jns
jecxz
cmp
shr
out
test
or
inc
div
mov
call
cmps
push
mov
div
xchg
jmp
dec
jo
sub
fscale
cli
push
hlt
mov
retf
int
and
adc
ins
adc
jle
(bad)
stos
jb
jmp
in
inc
clc
jbe
pop
jecxz
mul
pop
repz
loope
aad
popa
mov
rcl
xor
mov
ret
loope
fnsave
and
in
sbb
and
jl
fcomp
rcr
test
lds
call
cmp
call
gs
enter
dec
std
push
and
inc
jp
mov
jae
fcmovne
cld
xchg
pop
add
mov
dec
out
mov
ret
and
aas
addr16
iret
inc
sbb
push
xchg
cli
call
sub
mov
ins
loope
jp
push
pop
arpl
dec
add
shl
jne
xchg
sti
data16
popa
fs
push
jae
inc
bound
mov
call
pop
cld
cmp
sub
inc
std
aam
ret
push
mov
or
mov
add
sbb
jmp
push
(bad)
xchg
cli
and
sub
lds
add
pop
ins
xor
add
shl
xor
imul
(bad)
cmc
lahf
mov
dec
aad
add
(bad)
and
sub
idiv
jmp
add
or
sub
aaa
sbb
push
movs
mov
or
jb
std
mov
jle
loope
xor
sub
icebp
ror
ds
pushf
cmp
or
setne
xchg
jecxz
arpl
dec
add
push
pusha
jg
jg
or
cmps
cmc
and
ja
mov
out
into
loopne
push
inc
xor
imul
in
scas
bound
lea
pop
xchg
mov
xlat
jg
mov
fiadd
fild
arpl
and
ret
(bad)
cmp
push
into
pop
outs
xchg
test
lock
cwde
mov
sbb
pushf
xchg
adc
(bad)
xor
push
call
jp
sbb
aaa
lds
daa
add
push
jmp
jbe
addr16
gs
jecxz
jno
sbb
jge
lock
neg
push
cs
ins
(bad)
xchg
pop
cmp
pop
outs
dec
mov
into
jno
push
mov
retf
or
imul
mov
push
inc
mov
fs
shl
stc
mov
adc
lock
retf
cs
addr16
ret
lds
fldenv
or
test
rcl
sar
daa
enter
lods
cwde
push
mov
jecxz
retf
clc
jg
add
dec
xchg
mov
add
xchg
add
sub
fistp
sbb
je
das
adc
pop
inc
xlat
add
not
xchg
pushf
shr
ds
xchg
sub
test
gs
pop
aas
xchg
or
pop
iret
mov
jne
rcl
xor
rcl
lds
shr
(bad)
std
mov
mov
mov
mov
fmulp
stc
cmp
(bad)
sbb
pop
jecxz
frstor
jb
inc
or
mov
pop
(bad)
adc
and
nop
in
mov
or
hlt
in
xor
xchg
stc
test
push
jmp
leave
sahf
cmps
dec
cli
mov
jae
sbb
mov
or
jmp
fnstenv
dec
dec
add
adc
jno
sbb
push
push
jnp
inc
pushf
jge
popf
scas
lahf
mov
sahf
out
xchg
imul
lds
int
ins
or
les
call
fdivrp
lahf
xchg
(bad)
xor
ins
out
mov
and
out
mov
mov
fs
fxam
mov
pop
mov
iret
cmp
icebp
and
aad
ins
or
push
xor
les
mov
repnz
test
rcr
mov
cmp
mov
adc
(bad)
push
mov
jae
call
mov
push
fstp
sbb
ja
pop
jo
mov
movs
xchg
(bad)
rcl
clc
into
sub
push
mov
loope
xor
lock
fidiv
xchg
inc
call
sbb
xchg
jae
push
call
pop
ds
adc
and
inc
or
(bad)
mov
dec
shl
jge
jbe
fcmovnb
push
int3
jb
sub
jo
fmul
mov
sbb
das
fucomip
jne
and
add
jns
or
mov
iret
lock
ret
jns
pop
mov
dec
and
(bad)
jo
and
sbb
pop
mov
xchg
into
cwde
pop
shl
pop
jge
test
scas
mov
xchg
(bad)
xchg
pop
jno
push
mov
mov
inc
mov
fisttp
movs
and
out
dec
mov
movups
jg
dec
push
pop
repnz
push
cmp
in
mov
mov
in
cdq
es
fidiv
push
popa
aas
call
shr
arpl
rol
aam
mov
addr16
daa
fdiv
inc
dec
sbb
add
test
cmp
nop
inc
inc
ret
mov
fld
or
test
push
mov
pop
and
fldenv
mov
xchg
pop
js
cli
pushf
mov
sahf
push
dec
icebp
or
push
sbb
dec
adc
adc
neg
sbb
stos
inc
lahf
push
sbb
int
out
xchg
fcmovnb
sahf
mov
rol
or
int3
and
jmp
pop
retf
add
mov
inc
in
sar
cld
xlat
push
cmps
mov
jnp
into
xchg
jae
xchg
movs
pop
xchg
mov
mov
add
aad
in
lods
lods
or
in
inc
rol
add
repz
pushf
ja
lds
mul
(bad)
jo
adc
cmp
jno
push
aaa
repnz
aaa
and
xchg
push
fldcw
stc
xchg
add
mov
sbb
in
test
jmp
hlt
jmp
xchg
shl
inc
sbb
es
lock
jbe
xor
jns
and
cs
mov
add
in
(bad)
enter
mov
inc
xchg
mov
inc
clc
inc
scas
aam
out
iret
in
xchg
popf
mov
and
xchg
fmul
jl
push
fild
pusha
(bad)
imul
adc
sbb
jge
addr16
pop
test
aas
lods
vpcmpeqb
(bad)
movs
imul
xor
or
loop
ins
and
pop
cmp
outs
dec
out
in
cmp
xor
mul
sbb
call
adc
sbb
fcomp
pop
mov
std
pop
sub
pop
es
cmps
sbb
push
push
mov
fld
mov
aaa
popf
mov
mov
daa
cdq
jp
pop
aam
or
mov
cmp
pop
mov
movs
lock
mov
out
inc
and
lods
mov
in
ret
sbb
mov
aas
inc
mov
pop
outs
mov
mov
mov
not
pop
push
call
push
ror
push
jae
mov
fisttp
popa
push
je
jmp
or
push
xchg
icebp
in
int3
xor
mov
jmpw
mov
std
cmp
loope
fdivr
repz
test
adc
or
arpl
push
repnz
movs
and
xchg
push
mov
pop
and
xchg
in
add
iret
sbb
inc
test
repnz
sbb
int3
movs
(bad)
pop
push
or
dec
out
xlat
pop
stos
je
xor
jle
push
clc
and
fwait
(bad)
jl
cwde
cmps
mov
out
fcom
jb
and
stos
cmps
jp
jmp
xchg
sbb
add
cld
pop
jecxz
add
push
jl
xor
jg
aam
adc
mov
pop
dec
jnp
fidivr
mov
fld
push
ins
retf
repnz
sbb
jge
stos
xchg
cmps
inc
in
popf
into
inc
std
inc
cmp
std
add
sbb
test
pushf
xchg
add
shl
repnz
mov
inc
mov
fisub
shr
and
rcr
sahf
mov
pop
sbb
mov
mov
int3
rol
jo
in
pop
mov
adc
and
dec
pop
lods
(bad)
mov
push
mov
adc
les
popa
aam
shl
cwde
rcl
stc
enter
(bad)
loope
scas
(bad)
jns
pop
cmp
mov
jecxz
xchg
aam
mov
cmps
ret
or
iret
or
inc
sub
add
mov
(bad)
jnp
pop
aad
scas
xor
rcr
cmpps
pop
outs
mov
cmp
xchg
nop
outs
nop
jne
(bad)
fldl2t
(bad)
bound
loopne
cmp
inc
dec
je
or
dec
add
arpl
ss
in
cdq
sub
ins
mov
std
push
fwait
cwde
mov
ret
dec
lds
test
xor
mov
in
fbld
add
adc
lea
add
je
ret
faddp
iret
cmps
pushf
cmps
and
outs
pusha
aam
pop
in
inc
stos
in
mov
jl
jb
sbb
and
leave
fsub
xchg
add
imul
icebp
out
mov
mov
jb
scas
push
mov
cmp
dec
cmp
ret
(bad)
lock
loopne
lahf
sub
sbb
stos
xchg
cmp
inc
hlt
cmc
hlt
out
jne
add
inc
mov
sbb
fmul
push
test
sbb
out
xor
test
fild
mov
add
jmp
pop
add
or
inc
shr
jle
dec
cli
out
in
xor
outs
cmp
and
inc
xor
and
imul
or
add
mov
push
add
mov
dec
movs
popa
sub
icebp
hlt
(bad)
sbb
cmp
ror
xor
mov
push
dec
mov
jle
mul
and
push
call
(bad)
jo
test
push
call
xchg
lea
outs
dec
cs
imul
pusha
jecxz
sahf
(bad)
fs
push
mov
in
test
pop
mov
inc
xor
aam
ret
add
jp
mov
enter
mov
(bad)
fist
je
xchg
rol
mov
in
push
push
xchg
inc
or
mov
mov
in
daa
xor
(bad)
test
pop
sbb
dec
cwde
out
popa
clc
es
add
ss
and
pop
inc
aaa
inc
pop
test
cli
mov
dec
fidiv
dec
test
xchg
sti
out
test
int3
add
shl
scas
fnstcw
mov
gs
jne
xor
jle
push
fisub
dec
(bad)
popf
aaa
addr16
test
fld
repnz
ss
mov
int3
cwde
(bad)
and
add
lods
leave
daa
and
pop
repnz
fwait
stos
mov
in
int
push
repz
aaa
jnp
add
nop
ja
aas
fdivr
scas
push
arpl
sar
in
inc
loopne
daa
cmp
ins
inc
sbb
xchg
ret
add
retf
imul
push
(bad)
stos
in
mov
(bad)
sbb
jo
jl
mov
loopne
retf
pop
dec
sbb
and
sbb
cmp
leave
dec
test
(bad)
xchg
xchg
or
mov
clc
adc
mov
stos
stos
cmp
mov
xchg
adc
fnstenv
ja
cmp
pop
xlat
inc
jne
pop
es
ret
mov
pop
jge
mov
or
nop
xor
movs
add
repnz
sbb
lahf
arpl
cli
aaa
fstp
mov
mov
retf
stos
mov
sahf
and
xchg
cmps
xor
stc
adc
fcompp
jmp
push
aad
xor
cli
fild
inc
cmp
rol
mov
and
adc
inc
mov
fstp
xchg
les
xchg
and
pushf
stos
aas
(bad)
lea
movs
stos
sahf
enter
das
fild
mov
add
lock
dec
aam
out
push
xchg
cmp
(bad)
fdiv
and
imul
mov
adc
fbstp
out
xor
cmp
outs
(bad)
push
iret
lods
dec
cmp
cmp
add
push
push
aad
push
popa
pop
fcmovnu
mov
inc
scas
pop
push
test
sub
scas
js
movs
dec
loope
add
(bad)
test
xchg
lea
imul
jge
inc
cs
jmp
es
add
pop
fbld
jecxz
out
mov
xor
cmp
std
adc
popf
xchg
jns
ror
test
ret
dec
cmc
rcl
fs
shl
ins
pop
mov
movs
and
add
jae
adc
out
xlat
addr16
stos
addr16
jae
test
imul
out
cdq
mov
cmp
xacquire
push
cmc
push
clc
call
lock
sub
cmp
mov
out
stos
adc
adc
and
sbb
ret
sub
ret
cmps
into
mov
mov
inc
xor
cmp
scas
(bad)
ficom
add
mov
ror
pop
push
pop
adc
jno
daa
mov
add
push
xlat
scas
dec
ins
sbb
jne
xor
(bad)
retf
add
fwait
cmps
mov
mov
test
cdq
xor
sub
mov
ins
jno
or
ror
dec
fistp
sub
into
jne
mov
and
inc
leave
ret
int
fiadd
movs
mov
cld
pop
and
sbb
mov
cmps
in
pop
retf
(bad)
bound
cmp
call
gs
in
sub
lahf
jo
mov
pushf
inc
nop
int3
sti
out
jbe
pop
xchg
pop
cli
dec
or
cmp
(bad)
dec
ins
sub
popf
cmp
test
inc
out
cmp
in
mov
cmp
int
add
adc
pushf
cli
cmp
int3
jae
push
inc
adc
hlt
push
out
xlat
or
jbe
dec
add
in
lea
mov
adc
dec
cli
jecxz
sub
push
std
adc
into
mov
test
stos
mov
and
jge
mov
fwait
out
cmp
jae
popf
pop
(bad)
or
loopne
jmp
jo
arpl
(bad)
sub
mov
mov
sub
stos
xchg
adc
mov
je
sub
call
out
sub
push
cmps
xor
inc
int
jecxz
jnp
rcl
inc
retf
adc
stc
xor
mov
mov
mov
sar
clc
inc
cwde
and
in
loop
sub
rcl
jns
mov
in
adc
sbb
jmp
pop
or
mov
push
test
hlt
mov
push
jne
jne
jmp
jmp
push
jns
mov
mov
loopne
xchg
ret
repnz
fs
outs
mov
and
push
aad
(bad)
int
jmp
outs
xor
mov
test
mov
push
and
nop
mov
pop
imul
fidivr
fsub
stos
mov
bound
adc
push
ret
adc
jb
ins
in
test
xchg
add
cmps
pop
push
nop
and
loopne
xchg
sar
sbb
dec
imul
bound
or
mov
lods
xchg
mov
pop
test
jmp
cmp
mov
aas
or
je
rcl
sub
sbb
cwde
dec
cmp
mov
fmul
mov
addr16
inc
and
sar
mov
dec
pusha
out
push
loope
in
jp
lea
inc
cmps
mov
sbb
jae
mov
pop
call
mov
lds
inc
retf
test
jmp
stc
in
ss
dec
jle
aas
jecxz
mov
out
mov
cld
rcr
xor
fxch
xor
retf
gs
dec
sub
adc
leave
sub
dec
outs
aas
adc
dec
movs
fistp
rcl
sbb
mov
stos
pop
or
jle
xor
test
and
fs
outs
pop
push
ins
cmc
xchg
sub
aaa
xor
push
cmp
xor
cmp
sbb
jmp
das
xor
adc
mov
push
call
mov
lods
cs
xchg
xor
mov
(bad)
mov
xor
in
push
ret
add
mov
jmp
push
cmp
loopne
dec
or
pop
repz
ss
int3
inc
dec
loop
xor
xor
scas
aaa
xor
imul
and
inc
lock
add
scas
mov
jp
mov
jnp
xor
hlt
js
ins
mov
movs
std
ins
push
jb
dec
xchg
or
inc
mov
loopne
jmp
fld
fdivr
adc
xor
sbb
std
pop
xlat
mov
mov
nop
(bad)
push
fdiv
mov
(bad)
fmul
sub
mov
mov
pop
dec
jle
es
mov
add
pop
cli
mov
ins
and
(bad)
cs
jmp
ds
mov
or
add
test
and
nop
sub
inc
sub
stos
jecxz
mov
sub
mov
mov
push
sbb
repnz
dec
test
fsub
js
sub
cld
fnstcw
mov
fidivr
pusha
mov
sbb
lods
mov
sub
pop
test
outs
out
push
mov
into
nop
xchg
mov
adc
xchg
enter
out
dec
sbb
dec
fidiv
(bad)
clc
aaa
inc
jp
xor
or
in
scas
sbb
stos
imul
cmp
mov
pop
repnz
mov
repnz
xchg
jmp
(bad)
scas
xchg
cmps
aad
aad
and
fsub
mov
sar
sub
pop
arpl
dec
cmp
shl
xor
(bad)
loopne
cmp
test
in
add
in
dec
aam
or
bound
adc
stos
movs
add
jg
xlat
jmp
retf
jb
lea
lods
dec
xchg
or
leave
jno
mov
daa
les
popa
int3
push
inc
xchg
(bad)
call
or
mov
add
ins
ret
jne
call
ret
inc
lea
dec
imul
sbb
stos
fbstp
dec
sti
test
push
jecxz
jns
or
rol
stc
and
retf
dec
add
sar
add
push
pusha
mov
shl
push
mov
int3
and
dec
xchg
push
popa
repnz
sbb
sub
dec
lds
js
mov
test
xor
stos
add
adc
lods
repnz
xor
sbb
sbb
xor
jbe
pop
add
xchg
jae
test
jmp
psubq
data16
jno
pusha
jmp
mov
cs
pop
xchg
pop
cld
ins
arpl
mov
hlt
dec
shr
js
sbb
pop
nop
aam
in
popf
inc
inc
rcl
xchg
(bad)
(bad)
test
sbb
gs
cmp
inc
sub
xchg
ret
xchg
daa
adc
jge
pop
int3
mov
mov
jp
cmp
cdq
add
test
mov
push
xchg
lahf
je
lods
mov
mov
test
aas
ret
lds
inc
xchg
xchg
inc
clc
call
(bad)
lds
push
stos
mov
jmp
pushf
push
sbb
int
mov
xchg
imul
push
and
jbe
pop
repnz
sub
shl
dec
lahf
and
data16
jecxz
aam
pop
or
inc
enter
xchg
jno
inc
xor
popa
mov
mov
jmp
ins
test
pop
out
cwde
mov
daa
pop
mov
jle
lock
lods
fcomp
in
xchg
adc
outs
push
idiv
sbb
test
or
sub
mov
push
js
inc
call
sar
outs
xlat
(bad)
push
jg
das
add
pop
dec
out
push
test
jg
push
sbb
out
call
mov
dec
in
xchg
mov
bound
sbb
and
add
outs
add
ins
jmp
push
xchg
cs
adc
sub
ret
jno
jge
mov
sub
add
out
cmp
test
fisub
xor
jg
mov
xchg
pusha
dec
cli
mov
ret
cli
leave
(bad)
dec
int3
lock
in
retf
ds
lock
mov
or
out
mov
cmp
mov
inc
loopne
cmp
pop
arpl
jnp
push
cmp
hlt
popf
in
pop
not
mov
shl
dec
clc
pop
push
cmovno
jae
popf
add
push
sti
jne
test
loop
push
mov
mov
leave
mov
inc
cmp
dec
lock
xchg
pop
cwde
lods
cdq
out
lea
fisub
mov
jb
ins
xchg
fidiv
adc
ret
jne
mov
loope
(bad)
ficom
jg
push
cmp
retf
bound
(bad)
adc
mov
jno
shl
cmp
cli
jno
mov
jbe
cmp
sahf
pop
in
mov
mov
dec
mov
add
mov
pop
imul
addr16
push
test
fwait
xchg
sub
aas
iret
jnp
arpl
daa
xor
push
bound
xchg
or
fistp
add
stc
dec
stos
xor
sub
retf
sub
adc
mov
mov
cwde
push
in
cmp
inc
(bad)
xchg
jns
jno
or
pop
es
pop
sbb
cmps
add
int3
adc
push
scas
mov
pop
jge
imul
(bad)
cld
loop
inc
adc
xlat
lods
sti
pop
pop
jo
aaa
je
sub
cmps
or
iret
xchg
adc
inc
jns
movs
aas
pusha
and
mov
mov
mov
(bad)
jmp
call
xor
enter
into
jnp
add
jecxz
sub
mov
addr16
jbe
ins
js
scas
mov
inc
sbb
mov
fst
retf
pop
mov
and
aaa
push
jmp
xor
push
sbb
(bad)
neg
(bad)
mov
pop
jmp
and
daa
mov
bound
lea
cmp
ja
repnz
and
xchg
ror
stos
mov
sbb
push
sahf
mov
sbb
or
repz
dec
jbe
adc
jnp
dec
cmps
cmp
mov
mov
(bad)
jb
cmps
mov
test
cmp
push
mov
inc
and
lods
xor
pop
das
cmp
mov
jae
movs
xchg
pop
sbb
outs
loope
jmp
mov
popa
lahf
mov
or
or
cmp
pop
xchg
loopne
je
sbb
cmps
outs
xor
push
xor
pop
mov
dec
xchg
idiv
sub
ret
cmps
or
fmul
jb
jmp
xor
out
mov
scas
add
xchg
imul
scas
lods
nop
fisttp
xchg
sbb
outs
and
mov
dec
or
adc
and
mov
(bad)
jb
fild
push
movs
jge
das
and
retf
inc
(bad)
(bad)
sbb
popf
out
mov
mov
adc
mov
imul
adc
mov
std
pop
pop
xchg
ret
jns
cmp
lahf
push
fst
xor
iret
fwait
mov
daa
test
pop
push
cmp
push
and
dec
push
or
mov
loop
jle
js
xor
cmc
icebp
outs
cmp
add
and
ret
mul
push
jg
mov
sbb
and
sbb
cmp
js
dec
jecxz
cwde
mov
mov
out
jle
or
xlat
mov
inc
sbb
(bad)
push
sub
hlt
xchg
xor
jl
vmread
adc
ror
lock
popf
mov
jmp
and
call
rol
in
ja
js
hlt
in
stos
pop
fst
jae
outs
pop
outs
not
ror
shl
sbb
sbb
and
out
das
ins
aam
sub
mov
cld
sahf
mov
aas
bound
ficom
jno
xchg
xchg
inc
mov
cmp
cmp
int
ds
std
out
fist
scas
dec
sub
inc
and
les
into
push
sub
cmps
mov
movs
push
push
xor
adc
repz
cmps
(bad)
pushf
call
jge
or
sub
imul
fdivr
dec
mov
sti
push
out
stc
dec
mov
cs
ins
xor
push
mov
sub
adc
(bad)
cmp
sbb
fwait
mov
fisttp
add
jge
mov
inc
inc
test
fs
inc
push
dec
mov
jno
je
xor
aam
mov
outs
xchg
jp
sbb
in
je
adc
mov
sbb
jecxz
inc
sbb
imul
xor
xor
leave
(bad)
pop
mov
or
dec
push
lods
mov
loop
lods
jmp
mov
(bad)
cmc
(bad)
das
rcl
push
ror
in
(bad)
call
out
mov
ins
test
jmp
jmp
pop
pop
xor
mov
push
push
(bad)
movs
mov
rcl
pop
cld
and
ins
lea
movs
rol
cmp
mov
jge
pusha
xchg
lea
mov
sahf
(bad)
cdq
outs
adc
pop
or
test
or
adc
retf
stos
imul
cmp
iret
dec
in
outs
ret
or
aaa
xor
and
out
push
lock
add
repz
mov
cli
aas
loope
hlt
pop
mov
pop
add
mov
inc
pop
pop
cli
loop
mov
call
pause
cmp
and
mov
ficom
pop
push
stc
inc
push
xchg
pop
pop
cdq
addr16
push
xor
hlt
cmp
mov
ja
jmp
inc
dec
push
sub
rol
xor
mov
out
mov
imul
jo
gs
les
mov
sub
dec
cli
mov
int3
sub
fwait
lods
repnz
push
std
xchg
out
and
add
sti
jp
xchg
mov
push
sub
fldenv
lods
popf
rcr
mov
and
sbb
gs
enter
xor
dec
dec
or
adc
sar
retf
sbb
loope
repnz
(bad)
cld
pop
mov
xchg
repz
into
xchg
adc
push
xor
pop
bound
retf
inc
call
(bad)
std
je
xchg
(bad)
mov
adc
dec
stc
sar
dec
cs
xabort
cmp
add
mov
mov
test
dec
mov
xchg
xchg
push
sbb
icebp
push
aas
mov
mov
dec
or
ret
dec
mov
sahf
add
aad
cs
sub
mov
into
cmp
iret
pop
pop
or
imul
inc
shr
dec
out
fldcw
xchg
daa
xlat
std
xchg
inc
cmp
sbb
aam
arpl
frstor
call
mov
hlt
sub
ds
cmp
inc
inc
out
inc
push
rol
sub
and
lock
jmp
loope
cs
cli
dec
cmps
frstor
mov
or
and
fs
ins
imul
jle
mov
adc
nop
nop
add
cmp
sbb
gs
pusha
mov
pop
sbb
and
mov
popa
inc
and
adc
int
les
push
dec
cld
xor
mov
daa
inc
(bad)
out
sub
jle
in
xchg
sti
mov
inc
pop
push
mov
in
mov
arpl
dec
or
or
jbe
ins
fcom
mov
scas
rcl
pop
jl
ins
add
ds
inc
(bad)
cmp
bnd
adc
cdq
outs
jnp
adc
jmp
pop
mov
and
and
scas
add
mov
adc
mov
xor
sbb
push
push
push
sbb
sti
cmps
sbb
rcr
dec
cmp
push
aad
jp
shr
in
cmps
je
mov
or
shufps
out
mov
or
out
sbb
mov
xchg
mov
aaa
movs
adc
and
imul
and
jnp
adc
daa
test
or
mov
mov
sbb
dec
mov
fsubp
jmp
dec
mov
fwait
sti
pop
fdiv
xor
push
fisub
inc
mov
sub
and
pop
pop
ror
sub
shl
sahf
mov
pop
dec
in
pop
pop
sub
aad
sti
iret
jo
xchg
repz
push
mov
sar
es
cdq
clc
fild
movs
shr
xchg
mov
lock
push
out
add
or
mov
jns
int3
(bad)
dec
fstp
add
jb
mov
mov
fld
sub
jmp
mov
add
mov
das
hlt
or
std
xchg
lods
loop
mov
jge
cld
cmps
dec
cmp
cmp
xor
rcr
fucomp
stos
test
xor
cmp
aaa
jae
mov
sub
mov
repz
mov
push
sbb
add
das
mov
jp
and
jge
call
mov
sti
leave
mov
push
push
test
stos
mov
inc
bound
sub
jbe
dec
sbb
push
sub
enter
xchg
xchg
lahf
aam
scas
sub
and
and
sbb
xor
add
push
pop
outs
mov
(bad)
pop
les
daa
mov
mov
out
lds
fimul
int
ss
pushf
(bad)
jmp
es
sub
mov
dec
fwait
or
cdq
shr
xor
push
cwde
inc
in
out
xchg
js
ja
ds
push
mov
icebp
scas
jge
test
fs
mov
outs
mov
xor
jae
rcr
jle
pop
pop
adc
sbb
in
out
cmp
jb
loop
retf
das
repz
sub
rol
les
mov
mov
push
retf
(bad)
enter
ins
sbb
or
retf
lods
inc
dec
sub
xchg
ins
stos
mov
std
ins
hlt
jmp
mov
lock
jnp
xlat
sub
mov
rol
iret
fwait
and
inc
imul
scas
dec
xchg
loopne
sub
push
imul
dec
xor
lahf
and
lea
hlt
retf
aam
aam
cmp
adc
popf
sub
adc
push
push
js
addr16
jnp
hlt
push
dec
rcr
loop
xchg
fild
dec
pop
mov
data16
cmp
std
or
fisttp
mov
xchg
nop
movs
mov
jae
mov
test
test
jmp
sbb
mov
dec
(bad)
ins
mov
ins
jmp
jb
mov
(bad)
data16
in
cli
stos
or
outs
pop
push
movs
xchg
push
enter
xor
push
dec
dec
adc
lock
pop
xchg
or
cmp
cld
jecxz
and
dec
movs
data16
pop
xor
sub
cmp
push
and
ret
mov
loope
fmul
jl
js
xchg
sub
jnp
push
popf
gs
shl
dec
cmp
into
jae
(bad)
(bad)
in
imul
push
retf
sbb
push
out
push
cld
lods
add
not
(bad)
fnstcw
sbb
in
inc
mov
nop
faddp
scas
adc
aad
xor
je
iret
cmp
je
stc
fsubr
or
sub
sub
mov
loopne
pushf
or
inc
sbb
dec
aaa
test
fisttp
push
ror
(bad)
imul
mov
mov
mov
in
cmp
adc
and
dec
aam
imul
mov
cs
mov
cwde
pusha
cld
xchg
(bad)
or
mov
xor
and
dec
cmps
sbb
jae
std
inc
mov
stos
xor
mov
mov
cmp
or
jle
pop
imul
xchg
dec
test
and
xchg
les
adc
jbe
fs
leave
outs
and
pop
fdiv
inc
cmp
rcl
mul
adc
shr
int3
cmp
xor
adc
pop
dec
or
jmp
and
jmp
sub
jmp
add
out
sub
mov
mov
icebp
mov
pop
dec
(bad)
jg
xor
mov
xlat
mov
int
mov
stos
push
lods
ds
or
jne
dec
or
cmps
retf
push
sub
push
jno
push
mov
inc
xchg
out
inc
mov
and
cs
cmc
aaa
pop
not
add
cld
and
mov
sbb
xchg
and
shl
xchg
out
cmp
mov
dec
std
sahf
mov
or
xor
fs
daa
pop
xor
retf
pop
out
jno
clc
cmp
xchg
inc
mov
push
ror
dec
mov
jo
cmps
or
or
js
inc
and
jecxz
stc
sub
mov
pop
sub
fdiv
or
push
xor
add
sub
(bad)
fcom
bound
jae
pusha
lock
jae
fistp
mov
jmp
scas
shl
cmp
xchg
cld
fs
jmp
mov
lea
icebp
pop
into
(bad)
ds
cmp
into
clc
jbe
ret
push
jns
out
jle
mov
pop
ret
push
mov
mov
pxor
inc
mov
fadd
das
repnz
shr
pop
in
cmp
outs
push
jbe
loopne
jb
loope
pop
push
(bad)
bound
cld
push
cmp
nop
(bad)
fisubr
dec
pop
div
fdiv
out
mov
sbb
sub
cmp
sbb
cli
lods
push
xchg
repnz
inc
xor
or
pushf
jge
mov
mov
pop
mov
icebp
shl
repz
mov
out
and
daa
add
stc
adc
call
int
outs
and
jecxz
mov
test
std
cmp
xchg
(bad)
popa
mov
lea
or
lea
and
aam
dec
push
xchg
hlt
pop
mov
dec
popf
retf
push
leave
call
and
dec
jo
imul
sbb
inc
sub
inc
test
inc
sbb
imul
cwde
push
jbe
jl
das
stos
fiadd
int
push
jecxz
mov
cld
xchg
sbb
out
cmp
and
jb
push
js
stos
fldcw
pusha
mov
imul
cmp
leave
js
sbb
inc
mov
adc
arpl
mov
stc
scas
les
loop
cmp
loope
popf
sub
dec
jbe
mov
repnz
repnz
add
(bad)
repz
push
aam
sub
popa
xchg
adc
mov
repnz
mov
fstp
mov
in
aas
sub
sbb
in
call
test
mov
aad
adc
out
adc
and
xchg
clc
and
rcr
inc
xor
inc
xor
call
rol
pop
gs
pushf
mov
shr
lahf
(bad)
xchg
shl
loope
nop
adc
jno
jmp
mov
jmp
cmp
mov
and
or
inc
fldenv
loopne
idiv
imul
into
(bad)
fstp
push
(bad)
popa
jp
loopne
adc
cmp
ror
dec
inc
int3
int3
inc
sub
xchg
sub
lock
pop
into
ss
pushf
cwde
jl
or
(bad)
dec
jnp
mov
mov
sbb
cmc
fisttp
ja
add
and
lds
iret
out
shr
shl
out
pop
sbb
adc
and
adc
mov
aad
in
xor
test
fisub
adc
and
pop
xchg
in
mov
jbe
xor
fild
ror
or
stos
sbb
stc
in
aaa
and
push
int
popf
js
or
shl
mov
call
mov
dec
or
inc
cmp
inc
xchg
loopne
sbb
mov
mul
push
and
dec
mov
sub
stos
lods
mov
idiv
ja
sbb
out
mov
xchg
out
ror
out
jo
and
push
pop
mov
adc
mov
mov
inc
fsubr
jne
lods
jae
ja
fstp
hlt
add
push
lods
aam
jns
scas
and
dec
jne
test
into
push
repz
imul
aam
fcomp
push
ret
in
jmp
dec
and
in
call
mov
mov
sub
and
jnp
enter
nop
fistp
ficomp
push
cmp
not
clc
ins
inc
cmps
das
sub
cmp
aam
mov
gs
sub
xor
and
ficomp
or
sub
dec
xchg
xchg
inc
fsubrp
mov
rcr
add
mov
dec
loop
popf
mov
fcmove
pop
cmp
xchg
popf
sahf
adc
cli
leave
xor
iret
pop
mov
ins
add
push
mov
scas
inc
gs
in
jbe
iret
fs
std
pushf
jecxz
lds
or
xor
les
sub
inc
mov
sbb
jnp
pop
lea
jle
mul
mov
or
loope
outs
push
mov
fistp
data16
addr16
outs
test
rcl
pop
div
pop
in
call
mov
sbb
mov
or
push
mov
rol
arpl
cmp
dec
shl
cmp
fadd
mov
in
xor
cmp
fisttp
mov
das
ins
dec
daa
adc
and
ss
mov
aaa
jl
adc
xchg
push
xchg
and
cmp
out
repnz
test
not
clc
xchg
(bad)
or
loop
adc
icebp
cli
sub
clc
cmps
arpl
jo
and
add
outs
cdq
sbb
int3
adc
xchg
xchg
dec
jnp
sub
dec
scas
jbe
jp
out
and
cld
push
pop
loope
movs
rcl
inc
mov
xchg
mov
xor
scas
mov
add
fsubr
mov
int3
xlat
sub
imul
add
stos
ror
movs
push
cmp
mov
mov
in
(bad)
mov
push
xchg
js
ins
(bad)
sar
jns
repz
xor
sbb
inc
pop
mov
repnz
push
out
jne
in
xor
std
push
push
sub
shl
(bad)
jle
sbb
inc
aad
mov
inc
iret
or
scas
xor
scas
inc
(bad)
push
pop
mov
jp
mov
stc
or
adc
rcl
and
add
scas
lahf
scas
mov
mov
icebp
dec
into
push
mov
dec
(bad)
call
xchg
jno
fs
xchg
(bad)
xlat
pop
mov
test
xlat
inc
nop
mov
pop
loope
push
push
neg
cmc
cmp
out
mov
sub
mov
icebp
xchg
das
ins
or
(bad)
lds
sbb
adc
stos
popf
jecxz
xchg
cmp
mov
jb
ins
dec
ds
icebp
inc
loop
jle
cmp
xchg
cmp
pusha
push
mov
mov
xchg
add
xor
cmp
mov
jle
fsub
in
hlt
cld
mov
or
mov
sub
das
fcmovnbe
sbb
push
add
(bad)
gs
sbb
cmp
sub
mov
pop
pop
pop
push
aas
and
inc
jp
pusha
add
add
cli
aam
cmp
pusha
inc
sahf
jmp
adc
scas
fsubr
(bad)
out
adc
jg
push
arpl
mov
pop
dec
in
lds
enter
adc
dec
add
pop
mov
inc
dec
ret
sbb
mov
sub
push
jae
pop
adc
xchg
sub
mov
push
mov
rcr
mov
mov
jno
mov
pusha
aas
test
mov
xchg
mov
sbb
iret
dec
lock
or
nop
rcl
enter
lods
nop
(bad)
adc
retf
sbb
mov
jo
xchg
sub
adc
adc
(bad)
pop
test
jnp
push
(bad)
sub
js
pop
pop
jae
mov
sbb
jge
adc
(bad)
daa
fisttp
sub
jmp
push
mov
lds
xor
sub
and
xchg
in
jnp
cmp
shr
xchg
test
push
jbe
repnz
lods
sbb
stc
call
(bad)
(bad)
lods
adc
cmp
sub
rcr
pop
or
xchg
sub
mov
mov
cmp
into
cmp
mov
loopne
inc
call
nop
xor
xchg
pop
cdq
cmps
jg
mov
fldcw
cmp
sti
xor
test
ins
loope
outs
add
call
pop
mov
arpl
jl
xor
mov
cmps
bound
loop
nop
pop
xchg
push
cmp
cmp
mov
fld
cdq
int3
stos
or
idiv
call
xchg
mov
or
sub
inc
push
lods
int
xchg
arpl
enter
lea
pop
std
sbb
lods
pop
clc
push
rol
call
mov
(bad)
mov
or
push
jl
inc
and
(bad)
lock
fwait
mov
sub
stos
inc
push
fcom
stos
fistp
inc
js
mov
mov
out
sahf
or
mov
ror
rol
nop
fild
mov
ins
or
adc
ds
shr
js
push
out
retf
js
inc
adc
inc
sub
mov
popa
into
push
jbe
cwde
mov
cld
mov
frstor
out
adc
push
mov
not
retf
(bad)
mov
and
add
rcl
dec
dec
je
in
lds
int3
xor
in
xchg
inc
(bad)
out
fwait
scas
inc
push
and
cdq
pop
call
inc
push
fcom
fisubr
(bad)
out
fsub
mov
mov
outs
dec
cmp
inc
cmp
mov
xchg
jns
or
movs
mov
lods
or
or
inc
xor
and
mov
push
jle
nop
ss
sub
push
mov
push
std
das
mov
jle
retf
inc
cmp
or
add
inc
int
cs
hlt
in
adc
stos
and
repnz
hlt
cs
push
adc
inc
mov
jmp
or
mov
mov
loop
(bad)
xchg
xchg
arpl
xchg
mov
mov
xchg
or
inc
or
pop
xchg
mov
xor
adc
enter
or
sbb
ficomp
cs
inc
(bad)
int
xor
retf
pop
cdq
or
out
jmp
add
popf
test
mov
cld
mov
dec
mov
jae
call
(bad)
icebp
es
and
and
clc
fimul
pusha
into
dec
out
or
scas
adc
xchg
sbb
cmps
in
jno
icebp
inc
adc
mov
cmp
test
aam
sbb
test
ja
ja
ror
pop
dec
push
nop
not
inc
and
stos
stc
jno
movs
mov
mov
loope
outs
ds
inc
repnz
mov
scas
inc
jp
popa
mov
dec
mov
pop
xchg
push
cmc
xor
inc
sub
sub
inc
cmc
imul
enter
push
jae
ror
or
clc
xchg
cmp
fst
mov
pop
sub
sahf
lea
pop
in
xor
mov
test
jmp
adc
scas
dec
or
leave
fsubr
mov
imul
mov
jg
jae
cdq
lahf
aam
ins
rcr
cmps
(bad)
jnp
js
shr
daa
call
jmp
les
out
fs
xchg
hlt
fld
dec
out
fisttp
in
and
xor
xlat
rcr
movs
mov
arpl
mov
dec
pop
fsqrt
inc
xor
(bad)
xor
gs
aaa
push
xchg
pushf
and
lahf
and
xchg
mov
xchg
(bad)
jmp
movs
out
xor
and
inc
sar
add
gs
push
cmp
jg
sbb
pop
and
push
pop
pop
xlat
rcl
sbb
pop
sbb
(bad)
sub
test
and
dec
rcr
mov
out
and
inc
ja
retf
xchg
sbb
xchg
mov
inc
xchg
mov
mov
xor
(bad)
(bad)
aaa
or
sbb
add
or
inc
mov
xor
mov
sar
cmps
sbb
sub
cmc
and
mov
adc
aas
and
jmp
mov
(bad)
clc
inc
cmp
imul
test
jl
(bad)
fcmovnu
jno
jp
add
test
cmp
mov
(bad)
mov
xor
fidiv
sti
ret
mov
adc
or
movs
int3
outs
int3
xor
cmp
push
mov
sbb
(bad)
enter
jge
jl
rol
push
cmp
cmps
jno
stc
nop
add
dec
hlt
aad
mov
mov
rcr
push
push
sar
dec
hlt
cmp
repnz
push
inc
inc
mov
scas
int
jne
jge
data16
sahf
out
push
jl
add
cmp
int3
jnp
inc
bnd
ins
shl
aad
out
xor
loope
es
mov
dec
imul
dec
aad
adc
rep
cmp
out
aaa
fwait
mov
mov
cld
jbe
leave
cwde
mov
loopne
sbb
sbb
out
xchg
(bad)
(bad)
call
adc
(bad)
iret
inc
shr
add
sbb
repz
into
xchg
sbb
scas
icebp
mov
movs
mov
aam
fistp
repz
jle
xchg
clc
scas
test
scas
mov
ins
cmps
and
mov
or
and
or
pop
lahf
cs
int3
and
push
sub
dec
lahf
jecxz
pusha
rcl
pop
ficomp
xor
dec
iret
pushf
(bad)
jae
rcl
dec
mov
call
outs
cwde
lock
jg
into
pop
pushf
fsub
retf
mov
mov
stos
push
cld
sbb
aaa
sbb
aad
mov
inc
adc
or
or
adc
ret
out
ffree
xchg
ja
push
mov
cld
popf
and
sbb
push
outs
mov
cmps
mov
int3
mov
dec
cmps
hlt
fs
jp
and
dec
(bad)
pop
pop
fisttp
(bad)
mov
add
sbb
and
xor
and
in
sbb
jl
(bad)
(bad)
mov
add
push
adc
stc
cmp
inc
ret
mov
dec
inc
xor
or
sub
shl
ror
adc
lock
fs
add
cmp
das
pop
fxch
inc
outs
dec
retf
mov
ja
daa
sbb
adc
(bad)
call
clc
shl
(bad)
push
sahf
add
mov
inc
push
adc
retf
push
adc
mov
and
mov
in
call
retf
jle
xor
sbb
ret
sub
jo
xlat
cmps
xor
and
retf
push
adc
je
push
ret
hlt
or
mov
jmp
sbb
or
mov
mov
les
je
pop
sbb
fidiv
pop
dec
or
dec
inc
jae
adc
cmp
sti
mov
xchg
jnp
aad
xor
or
outs
daa
cmps
outs
stc
cmp
test
inc
les
pop
push
push
pop
mov
jbe
push
and
aaa
cmp
stos
xchg
mov
xchg
add
jecxz
adc
mov
pop
pushf
(bad)
aam
sub
xchg
repnz
fild
scas
addr16
ret
shr
dec
adc
or
ja
test
sbb
or
leave
dec
pushf
icebp
inc
pusha
lea
aas
sbb
repnz
xor
push
or
mov
lock
push
pop
adc
dec
jb
jecxz
or
xchg
pop
mov
repnz
shl
cmc
push
out
inc
loope
icebp
or
into
fisub
aad
cmps
xlat
xlat
mov
pop
data16
dec
je
(bad)
mov
test
call
ret
fst
(bad)
cld
shl
movs
ja
(bad)
stc
gs
stc
out
add
jmp
in
push
add
sbb
lahf
addr16
icebp
nop
mov
js
scas
mov
xlat
gs
sub
xor
sub
mov
cmps
sub
retf
xchg
lds
or
clc
dec
test
in
xchg
and
and
mov
fs
call
sahf
es
mov
inc
jb
call
aam
pop
lods
sub
sbb
or
outs
sahf
sbb
ret
std
xlat
inc
or
jmp
rcl
dec
mov
sbb
or
sbb
inc
push
dec
fidiv
cmp
add
xor
enter
mov
dec
rcl
push
stc
mov
aam
push
cmp
lds
xor
dec
add
and
xor
nop
lock
jmp
jne
shl
mov
dec
retf
lahf
faddp
loopne
mov
dec
mov
lahf
jno
dec
dec
add
mov
int
je
sbb
nop
mov
out
mov
push
cmp
push
mov
out
daa
pop
ins
daa
das
jg
cmp
push
xchg
sar
shr
mov
mov
dec
pop
pop
sub
pop
retf
sub
fst
shl
aad
xchg
add
push
xchg
test
out
or
rcr
mov
(bad)
sbb
xchg
leave
xor
scas
xchg
jp
fld
mov
out
push
xor
dec
sti
fs
mov
xor
pop
ficom
sub
imul
cmps
fnstenv
or
retf
xchg
jp
push
pop
adc
je
js
and
int
stos
stos
and
or
mov
inc
mov
push
xor
scas
adc
pop
mov
add
hlt
div
or
in
test
xchg
inc
jne
adc
outs
movs
out
movs
and
inc
xchg
in
aad
aad
and
jbe
imul
mov
or
mov
sub
sar
mov
in
and
mov
or
inc
das
xlat
loopne
fist
and
jnp
cmps
add
into
and
sub
aas
mov
mov
push
mov
loopne
loopne
xor
rcr
ja
xor
sub
push
mov
pop
or
sub
movs
pusha
xlat
cmp
mov
push
jp
call
test
inc
hlt
ja
push
inc
cli
mov
and
aad
mov
push
jmp
outs
imul
pop
sbb
xor
imul
in
mov
sbb
rol
sahf
xchg
test
loopne
mov
push
mov
cmp
dec
vcmpss
mov
pop
ficom
add
cs
cs
ja
mov
inc
icebp
push
ret
enter
call
lods
hlt
ins
(bad)
ja
aam
(bad)
adc
pop
adc
mov
lods
xchg
add
int
fimul
dec
sub
jg
cmp
mov
mov
enter
push
out
sti
shr
adc
into
mov
sbb
lahf
cmps
es
test
mov
fldcw
pop
pop
mul
pushw
xor
jmp
scas
lea
sub
xor
(bad)
out
push
shr
mov
imul
aad
mov
add
mov
in
outs
fwait
mov
ins
mov
cmp
mov
sub
inc
(bad)
push
sbb
dec
fadd
push
lea
mov
or
out
repnz
movs
bswap
sub
mov
aam
(bad)
shl
ficom
or
xor
sub
or
mov
jmp
pop
leave
mov
fld
ins
push
out
add
adc
(bad)
and
js
jmp
jecxz
pop
jno
push
js
inc
push
pop
fsub
cdq
jb
xchg
xchg
icebp
stc
push
pop
fsub
in
cmps
sbb
jnp
retf
mov
inc
mov
mov
jb
sbb
mov
sub
addr16
add
and
pushf
out
lods
fiadd
cmp
fs
or
test
pop
xor
(bad)
pop
xor
pop
pop
scas
ss
inc
clc
in
repz
sub
pusha
push
push
mov
inc
or
test
adc
pop
or
jmp
xchg
ins
mov
bound
jno
adc
push
add
loop
popa
sbb
retf
cdq
fwait
mov
stos
sbb
xchg
xor
test
out
sbb
iret
push
(bad)
clc
out
jge
imul
mov
les
shl
pop
bound
out
add
ss
stc
scas
int3
jno
lods
mov
dec
xor
shl
jge
dec
cld
pop
mov
xchg
or
jl
aas
pusha
xchg
pop
rol
push
sbb
mov
outs
cwde
sub
push
add
icebp
hlt
jl
int
mov
dec
sbb
jmp
in
add
js
stos
repz
cmp
pusha
jmp
loop
cdq
lahf
stc
loopne
cld
sub
out
adc
(bad)
or
pushf
add
fs
push
mov
jb
or
push
xchg
sbb
jae
sbb
ja
xor
xor
shrd
jp
dec
cdq
push
sub
xchg
pop
inc
repnz
mov
xor
add
xor
pop
out
cmps
int
inc
push
arpl
cmp
xchg
xor
stos
aaa
mov
xchg
push
jmp
pmuludq
lahf
or
fwait
push
cwde
dec
mov
cs
jnp
pop
ja
cwde
ret
mov
scas
mov
idiv
xor
push
xchg
dec
cld
leave
or
mov
jnp
xchg
aam
xchg
push
es
mov
push
sbb
in
in
retf
pop
dec
stos
das
rcr
in
call
jmp
out
sahf
lds
xor
movs
inc
sbb
std
dec
jnp
rcl
mov
sbb
sti
out
cli
cmps
inc
jae
loopne
cmp
sbb
int
outs
jge
popf
sub
push
movs
das
fwait
int
jb
cdq
lea
lock
out
mov
sub
clc
ins
cmp
mov
shr
fadd
js
(bad)
and
addr16
or
sub
test
cmc
pop
sbb
setle
cli
in
cmp
lea
sub
or
pop
mov
arpl
adc
sbb
or
pop
jae
sbb
clc
push
inc
xchg
cmp
mov
cmp
mov
jp
(bad)
sbb
fdivr
push
sbb
mov
mov
lods
mov
xchg
mov
bound
or
adc
fsubr
mov
mov
sbb
ins
out
xchg
mov
outs
dec
cmp
push
dec
(bad)
out
cmp
push
add
mov
loop
adc
imul
xchg
dec
or
ficom
jg
lods
xchg
or
test
mov
loope
jecxz
ja
cld
inc
test
enter
push
xor
sub
rcl
inc
int
scas
mov
lods
popf
iret
inc
jo
and
aad
xor
dec
in
fmulp
aam
aas
js
pop
repz
dec
hlt
in
cmp
push
xor
sbb
inc
ja
cmp
aas
lahf
pushf
aas
outs
lods
mov
movs
scas
(bad)
daa
fdivr
and
sbb
arpl
nop
cld
mov
stos
inc
outs
sbb
popf
(bad)
fcmovu
dec
pop
sbb
call
adc
jbe
gs
(bad)
shr
push
stos
scas
(bad)
sbb
ja
pop
cli
js
(bad)
cmp
pop
lock
stos
ins
imul
loop
pop
xchg
mov
sub
dec
daa
rcl
icebp
and
test
addr16
sub
ror
mov
cmp
adc
jbe
mov
ins
mov
mov
ror
retf
jp
je
cmp
hlt
fstp
lahf
scas
shld
mov
inc
sbb
out
and
rcl
jbe
mov
outs
inc
ret
(bad)
xor
(bad)
cmp
jp
push
xchg
xchg
or
int
ss
xchg
inc
jl
aam
push
jns
dec
fiadd
jnp
push
sub
and
sub
mov
jecxz
in
adc
sub
pop
outs
adc
xchg
inc
push
and
mov
pop
xlat
xchg
and
in
clc
bound
les
cmp
sbb
outs
sub
or
out
dec
add
(bad)
dec
add
push
sbb
hlt
pminub
loope
in
and
mov
aaa
test
inc
mov
cmc
ins
in
xchg
xchg
dec
mov
movs
dec
adc
call
mov
loopne
sbb
add
mov
cli
test
xchg
js
cli
mov
push
(bad)
mov
int3
test
sbb
xchg
mov
test
ss
xlat
out
fistp
ret
mov
add
fwait
mov
pop
pop
sub
scas
cs
jl
sbb
xchg
jno
mov
mov
(bad)
mov
pop
and
stos
retf
mov
lock
out
ficom
pusha
in
repnz
jae
sub
lods
pop
(bad)
and
dec
into
xor
out
popf
cdq
or
push
mov
sub
imul
imul
mov
arpl
(bad)
pop
stos
inc
pop
cmp
retf
retf
fldcw
retf
jp
pop
test
mov
xor
jb
xchg
adc
fidiv
xchg
cmp
(bad)
movs
imul
cmp
mov
dec
rdmsr
hlt
mov
fwait
sbb
(bad)
mov
movs
div
in
sbb
imul
xor
loope
js
cmp
push
gs
iret
pushf
inc
sub
fwait
hlt
mov
sbb
repnz
inc
(bad)
sti
mov
cld
rol
loop
out
push
cwde
and
sub
dec
mov
dec
leave
ficomp
or
stos
cmp
sbb
or
pop
out
fs
sbb
xchg
inc
pop
enter
outs
mov
push
sbb
add
clc
cmp
sar
scas
mov
jae
inc
jns
fcom
pop
sbb
popf
cmps
push
inc
sub
call
mov
adc
clc
cli
call
pop
xchg
es
repz
idiv
inc
mov
leave
sbb
jecxz
and
add
hlt
pop
or
jno
mov
outs
push
sbb
enter
push
js
mov
loopne
mov
inc
xor
push
add
mov
repnz
mov
fcomi
cmp
push
and
xor
lds
clc
sub
rol
adc
fdivp
jno
add
or
in
in
fincstp
jns
mov
dec
mov
adc
outs
aad
add
mov
inc
sbb
pop
gs
adc
in
dec
sbb
push
rol
or
pop
jne
lea
outs
add
mov
int3
sub
rcr
add
adc
loope
mov
out
or
stos
xchg
mov
sar
shl
inc
in
push
push
into
mov
push
inc
cmps
xor
mov
mov
outs
enter
xchg
xor
cmp
call
popf
(bad)
or
(bad)
lods
cld
pop
int3
inc
and
push
mov
pop
pop
xchg
and
inc
jecxz
or
cmp
(bad)
pop
out
pop
out
xchg
sbb
outs
mov
or
ins
mov
mov
add
pop
cwde
int
cmp
(bad)
test
bound
in
cs
mov
loope
mov
cli
cmp
test
push
imul
pop
mov
cmc
cmps
sbb
dec
mov
cmps
sti
inc
out
lds
and
icebp
mov
aas
inc
or
mov
mov
sar
mov
popf
mov
mov
fst
shl
and
sti
sahf
ret
loope
idiv
mov
sub
push
(bad)
push
dec
iret
adc
jo
mov
lods
rol
or
and
stc
inc
add
test
into
sub
addr16
fcomp
inc
dec
dec
div
push
jg
iret
lea
mov
stos
pop
movs
sbb
(bad)
test
shr
(bad)
sub
cmps
loop
rcl
cmp
mov
add
fnstenv
push
mov
xchg
imul
mov
addr16
stos
loop
mov
push
ror
sub
mov
in
mov
mov
cmp
sub
daa
stos
add
(bad)
pop
dec
mov
adc
jp
or
mov
bnd
into
push
jb
(bad)
mov
shl
jge
push
inc
sub
dec
dec
push
sbb
loop
scas
stos
cs
ss
inc
icebp
hlt
ins
sbb
ja
inc
sub
mov
push
add
mov
in
pop
jb
push
jp
inc
adc
jmp
in
ret
xor
daa
lods
jmp
adc
out
fadd
mov
mov
xor
sahf
pop
in
cmp
out
std
and
(bad)
xchg
xor
push
mov
pop
mov
lods
mov
sbb
cmp
in
pop
shl
and
jne
dec
stos
push
mov
je
jmp
mov
xchg
jnp
cli
clc
outs
shl
mov
xor
sub
adc
hlt
sub
cmp
(bad)
neg
in
lods
das
mov
mov
push
adc
test
xchg
outs
pop
and
in
loopne
mov
mov
or
adc
mov
dec
stos
inc
fnstsw
mov
inc
xchg
pop
fistp
fiadd
ja
sub
inc
dec
mov
mov
cwde
jge
retf
dec
cmp
std
inc
and
mov
imul
jbe
pop
sub
xor
jae
inc
sub
adc
in
fidivr
push
sub
add
mov
inc
and
sti
sub
in
jmp
or
bound
sbb
repnz
sti
cmp
lods
scas
stos
push
push
sbb
or
push
cmps
pusha
mov
loopne
mov
push
bound
ja
ja
or
inc
into
les
pop
cmp
das
mov
jge
dec
inc
cmp
mov
pop
cmp
icebp
cs
aaa
retf
ss
adc
imul
mov
jmp
inc
fnstcw
or
xchg
and
sub
lods
sub
add
or
fwait
or
popf
loop
adc
pop
mov
shl
sbb
call
out
and
xor
sbb
or
loopne
jmp
js
jb
pop
mov
push
pop
add
ins
mov
movs
pop
iret
call
xor
pop
mov
mov
pop
aad
ins
in
cmc
add
sbb
mov
push
fwait
or
enter
xor
in
rol
xor
sub
daa
mov
cmp
js
pop
nop
adc
out
cwde
std
ins
pop
cmp
loopne
jmp
shl
mov
test
xchg
add
in
ret
mov
scas
(bad)
out
clc
je
cli
pop
cmp
push
sbb
std
xchg
in
mov
lods
enter
mov
retf
xor
mov
out
mov
outs
or
push
out
inc
sub
xlat
or
int3
xor
lock
and
mov
inc
mov
push
jge
fsub
fst
mov
(bad)
mov
scas
pop
lds
ret
hlt
cli
xchg
js
movs
retf
xor
push
out
mov
fist
mov
fdiv
out
pop
movs
mov
out
clc
inc
les
push
fsubr
jp
popf
jg
addr16
mov
mov
and
or
dec
ins
pusha
test
fs
sbb
jbe
dec
imul
sbb
in
push
jne
dec
adc
cmp
pushf
es
mov
push
dec
sti
jp
dec
push
test
mov
adc
push
and
cmp
push
ins
fwait
adc
xor
jmp
sbb
mov
cmc
sbb
loopne
sahf
test
sahf
push
cmp
and
xchg
cmp
add
ins
mov
gs
push
lods
xlat
pop
retf
cmp
mov
mov
ins
xchg
jae
fadd
cmp
dec
into
add
mov
jle
jle
xchg
sbb
call
int
fwait
add
cmps
leave
xchg
cwde
(bad)
cs
push
lea
cmc
jge
fldl2t
xor
push
popa
(bad)
cmp
mov
mov
mov
mov
aam
dec
je
not
xchg
in
icebp
lock
mov
pop
jmp
rol
sub
push
and
pusha
cli
mov
fs
out
pop
push
sbb
sbb
je
aad
push
repz
nop
shr
repnz
inc
pop
jne
sti
(bad)
cld
enter
addr16
jo
push
xchg
pop
jae
add
jns
sti
mov
mov
imul
push
imul
retf
cmc
or
cs
add
sahf
je
mov
addr16
test
call
aaa
inc
pop
pushf
in
and
jl
cwde
out
mov
cmc
xor
cmp
mov
inc
movs
repnz
jns
or
sbb
lods
and
xchg
cwde
mov
(bad)
jns
inc
pop
push
xor
cli
inc
add
add
les
cmp
xor
data16
push
pop
rcl
aas
adc
mov
push
in
mov
push
test
pushw
add
cmps
pop
dec
push
sub
cmp
fld
dec
sbb
ret
adc
rcr
xchg
push
sub
sub
xchg
ror
leave
dec
mov
movs
(bad)
sub
sahf
and
repz
pop
mov
adc
aad
xor
jne
inc
or
je
pop
add
push
js
jge
jp
and
sub
cli
jge
or
mov
pop
cwde
sbb
add
and
std
mov
sbb
or
mov
pushf
cli
std
dec
and
aaa
cmp
pop
sub
(bad)
mov
xchg
jle
(bad)
ror
push
mov
jge
imul
xchg
sub
movs
aam
movs
je
aas
ins
adc
jge
popf
shr
ds
and
lds
dec
ins
dec
sub
jmp
push
or
out
movs
shr
mov
xchg
jne
jecxz
shr
xlat
imul
mov
arpl
jle
xchg
jmp
ja
push
pop
and
and
repnz
cdq
or
jne
stos
adc
inc
cmp
mov
movntq
fisttp
add
out
stc
dec
cwde
mov
adc
push
mov
push
scas
imul
out
popa
push
pop
xor
dec
fisttp
fcomp
jae
push
aad
lock
test
aad
push
(bad)
push
and
jb
xchg
dec
cmp
jge
aam
(bad)
cmps
lock
aaa
test
adc
pop
cmps
shl
cs
or
cmps
mov
addr16
je
pop
out
jmp
or
jge
adc
not
lods
mov
push
mov
mov
push
xor
adc
mov
mov
ret
ss
aas
imul
sub
xor
sbb
lock
jbe
sbb
push
ficom
mov
scas
inc
push
popa
adc
mov
jle
push
aad
fs
int
cmp
cmp
dec
and
cs
sbb
out
shl
stos
cwde
fwait
mov
cld
jnp
xchg
and
outs
das
xor
fist
pusha
lock
fidiv
sbb
sbb
mov
repnz
int
cmp
xor
popf
arpl
ret
xchg
cmp
popa
hlt
repz
pop
mov
sub
pop
fbld
shr
and
xor
mov
lods
in
mov
sub
enter
ss
fadd
les
mov
repnz
rcl
jb
inc
pusha
dec
cli
stc
fadd
rol
pop
shl
add
ins
(bad)
cmp
and
(bad)
mov
dec
mov
and
mov
add
xchg
jne
jno
nop
push
push
push
cmps
int
enter
aas
dec
bound
aaa
pop
xor
sar
mov
shl
addr16
fisttp
(bad)
(bad)
hlt
xchg
aam
mov
mov
push
push
into
pop
mov
push
or
mov
xchg
or
dec
or
js
dec
inc
xchg
rcr
lods
mov
adc
add
jb
mov
xchg
out
retf
es
pop
inc
aad
fst
outs
imul
pop
movs
enter
stos
pop
push
cvtpi2ps
vmwrite
cmp
and
ins
shr
stc
push
cs
cmp
push
loopne
xchg
jno
stos
mov
mov
sbb
ror
push
and
cmp
or
cld
add
jb
xchg
inc
lock
or
and
dec
and
adc
(bad)
xchg
or
imul
jb
scas
in
xchg
loope
xlat
cwde
das
mov
aas
ds
push
test
push
mov
xchg
mov
out
aaa
xchg
cmp
loopne
retf
fcom
mov
ins
mov
xchg
bound
mov
sbb
std
adc
bound
(bad)
mov
add
and
and
push
aam
mov
movs
cmp
arpl
sti
mov
push
clc
sub
mov
gs
lea
call
sub
jl
ins
(bad)
jb
push
dec
dec
jmp
aad
adc
add
stos
ins
in
leave
enter
mov
pop
or
cdq
mov
xor
dec
pop
mov
jg
out
or
xor
add
dec
loope
jnp
and
in
adc
mov
add
mov
in
mov
mov
add
fiadd
mov
in
jmp
shr
nop
and
jg
loopne
jb
mov
out
sub
adc
retf
sbb
jbe
mov
or
cld
lea
hlt
push
jnp
cmc
test
sbb
xchg
and
lds
ret
xchg
lahf
aam
test
cmc
loope
into
das
adc
jg
ss
adc
push
(bad)
mov
test
in
inc
ja
cmps
sbb
lea
mov
rcl
push
adc
xor
cld
fmul
mov
or
pop
mov
fldl2e
(bad)
jl
rcl
sbb
fwait
mov
xlat
in
mov
cmps
cwde
idiv
and
jmp
repz
test
fucomp
push
icebp
sbb
je
fmul
lods
jmp
les
sbb
les
outs
jge
daa
(bad)
fsubr
dec
pop
add
pop
jge
and
mov
mov
aam
mov
pmuludq
lock
xor
repnz
sub
int
pop
lock
loop
sbb
xor
or
fldenv
das
add
cmp
fst
dec
pop
hlt
je
rcr
mov
ja
push
rol
out
push
xor
sar
xor
adc
add
out
mov
cmps
loopne
out
outs
scas
stos
sub
lds
sbb
outs
sbb
cs
fdivp
rol
pop
ss
jge
xchg
sbb
popa
fistp
sti
movs
int3
dec
sub
or
scas
xor
xor
loopne
mov
stos
fmul
jp
in
push
sti
jg
cmp
loopne
ins
outs
lock
test
popf
jg
arpl
stos
out
aad
mov
das
mov
xchg
stos
js
popa
aad
clc
adc
xchg
add
mov
cwde
mov
jo
test
mul
retf
dec
mov
adc
rcl
loope
pop
add
push
dec
rol
mov
pop
lock
ret
xchg
pop
(bad)
cmp
push
push
add
cld
mov
std
mov
inc
add
das
sub
inc
rcr
xchg
stos
mov
js
sbb
push
addr16
enter
mov
loope
dec
pop
ss
sub
clc
sub
cmp
shl
inc
imul
movs
aas
push
jp
stos
mov
mov
adc
int3
push
xor
or
or
xor
inc
fcom
cmp
add
mov
mov
jne
pop
ins
ret
or
pop
ja
mov
jle
cmp
lock
bound
outs
fmul
xchg
push
or
and
xchg
daa
cs
out
lds
jns
pop
sti
cli
mov
xchg
repnz
in
inc
pop
call
inc
arpl
push
fwait
retf
or
sahf
mov
ret
add
mov
imul
mov
cld
jb
xchg
call
xor
(bad)
mov
mov
movntq
out
dec
(bad)
ja
jo
xchg
sbb
imul
in
call
jno
fnstcw
bound
jnp
push
jp
xchg
add
lahf
in
pop
sub
add
jmp
mov
ins
adc
mov
fcom
cld
xchg
push
outs
push
lea
xchg
clc
cwde
cmp
sub
pop
mov
mov
mov
cmp
cmp
xlat
imul
xchg
lods
xchg
sbb
pop
jns
rol
dec
pop
push
sub
leave
cmp
sub
retf
jmp
fs
mov
stos
jmp
ds
test
adc
leave
cmp
imul
dec
sbb
cwde
pop
cmc
inc
(bad)
lock
add
ds
jnp
sets
cld
inc
std
lods
mov
add
sbb
mov
(bad)
jecxz
push
mov
movs
sbb
mov
jne
mov
mov
xor
inc
mov
and
mov
and
div
jb
je
push
sbb
mov
jmp
or
add
inc
push
popf
inc
test
sbb
sub
jl
stos
pop
mov
push
(bad)
add
jne
and
sbb
lds
fldenv
push
popf
dec
xor
nop
dec
sbb
ins
test
add
repz
in
inc
lods
sub
jbe
out
ds
cmp
xor
mov
add
inc
aaa
push
cmps
pop
test
adc
(bad)
aad
sbb
cmp
ds
pushf
adc
clc
cmps
mov
test
dec
out
sbb
fwait
rol
test
jg
jmp
mov
xor
stos
pusha
(bad)
gs
jo
inc
jmp
xor
jb
or
test
hlt
test
loope
xchg
add
xchg
push
aam
or
test
call
lahf
dec
in
pop
inc
and
cwde
imul
add
adc
xchg
fcmovu
jp
pop
adc
enter
sub
loop
push
dec
xor
scas
sahf
out
imul
xor
and
cdq
dec
add
jns
or
xchg
push
cdq
xchg
fist
xlat
mov
dec
or
sub
ficom
ins
retf
pop
(bad)
xor
or
cmp
aas
(bad)
jno
popa
cmps
dec
pusha
outs
add
pusha
push
and
and
dec
xchg
inc
dec
mov
cmp
aas
cmp
inc
sbb
push
add
iret
pop
repz
add
repnz
xor
xchg
xchg
fs
in
scas
push
sub
mov
cdq
mov
es
push
jge
jno
fdiv
mov
movs
or
mov
test
fadd
ins
mov
add
sub
sbb
xchg
sbb
or
fdivrp
and
jp
dec
sbb
aaa
and
clc
(bad)
bound
out
enter
lods
enter
jbe
cmp
push
into
adc
std
xchg
out
jmp
in
and
cmp
stos
pop
dec
jbe
push
jmp
pop
ja
add
das
mov
aaa
adc
dec
xchg
dec
dec
out
xor
and
inc
or
adc
xchg
dec
xor
inc
ficomp
adc
cmps
ins
jmp
mov
jg
retf
adc
jecxz
add
out
repz
sti
ds
cmps
fsubr
dec
out
mov
je
mov
xor
ins
mov
fsubrp
repz
xchg
or
jb
mov
cmp
cmc
push
mov
inc
adc
adc
jno
sub
or
xor
push
cmp
jbe
add
je
repnz
rcr
dec
pushf
cmps
mov
cmps
xor
xchg
and
inc
xor
xchg
sbb
jbe
jle
test
or
fldenv
mov
shr
es
cmps
clc
jg
jmp
sbb
popa
adc
mov
ja
mov
push
outs
dec
hlt
xchg
mov
xchg
jl
dec
mov
pop
push
hlt
sbb
cmps
ins
dec
mov
aad
lahf
call
in
mov
mov
sahf
pop
mov
inc
mov
push
fimul
jg
cli
adc
arpl
jns
pop
fld
out
jmp
ret
mov
jne
cmp
sbb
cmc
aad
sub
jp
loope
jl
xlat
inc
xor
add
sar
adc
push
jno
cs
xchg
rcr
out
bound
adc
add
pusha
jmp
sbb
jb
fdiv
dec
jmp
pop
dec
add
or
xor
push
not
mov
pop
je
and
jnp
cs
enter
repnz
bound
jnp
ret
xlat
dec
and
jecxz
les
sub
mov
jl
pop
retf
sbb
jmp
(bad)
bnd
push
and
adc
lods
mov
ret
jmp
in
adc
mov
popa
fwait
sub
aas
mov
push
fs
imul
xchg
ficom
sbb
cmp
pusha
xchg
frstor
pop
mov
movs
int3
pop
xor
sbb
cmp
out
js
cmc
mov
outs
aaa
dec
test
sub
inc
jl
xchg
in
lock
push
xchg
aaa
or
mov
neg
xchg
mov
adc
jns
adc
aam
jb
pop
(bad)
jg
cld
data16
and
aas
and
popf
jg
adc
scas
lods
push
and
dec
int
aam
cmp
adc
pop
push
sbb
dec
pop
mov
inc
lods
add
cmps
sub
xor
pushf
mov
sub
inc
adc
clc
sbb
in
and
icebp
dec
push
(bad)
loop
into
arpl
xchg
pop
mov
gs
dec
push
iret
xor
(bad)
adc
xor
sbb
nop
jbe
enter
lahf
mov
int3
mov
arpl
push
xchg
push
aam
sbb
xor
cs
dec
dec
loopne
shr
dec
fwait
movs
icebp
clc
popa
repnz
add
push
mov
sbb
xchg
xchg
outs
mov
lock
and
(bad)
icebp
mov
xor
(bad)
fld
inc
inc
or
scas
es
mov
imul
loopne
cmp
sahf
jne
cdq
jmp
or
inc
ins
ds
jb
pop
jge
(bad)
jmp
lahf
cdq
test
imul
addr16
mov
mov
test
das
fsubr
jge
mov
pop
mov
mov
les
adc
sub
dec
in
in
aas
sbb
cs
stos
stc
jge
add
dec
cmp
or
add
inc
mov
loope
cld
(bad)
dec
js
scas
adc
mov
and
nop
inc
test
mov
adc
dec
sti
ret
jl
inc
xchg
int
mov
mov
mov
in
fs
jle
int3
lea
(bad)
mov
mov
add
data16
aaa
mov
and
sub
pusha
pop
push
and
mov
js
out
sub
les
pop
cmp
out
and
mov
cmp
mov
nop
xlat
push
shl
repnz
sahf
loopne
push
sbb
jo
and
mov
sbb
mov
cmp
movs
mov
pushf
and
mov
es
stos
cmp
xchg
ret
lods
or
(bad)
(bad)
arpl
scas
nop
or
popa
mov
ins
jle
add
not
daa
fwait
dec
imul
push
data16
mov
lds
rcr
pop
pop
inc
mov
push
sbb
cmp
ret
idiv
(bad)
lahf
cwde
loope
xchg
add
jle
pop
ja
mov
out
aad
bound
push
push
cmp
dec
(bad)
jle
test
dec
jnp
inc
arpl
test
sti
out
or
pushf
(bad)
setg
movs
movs
cmp
nop
sub
lods
ins
mov
xor
fisttp
gs
jmp
push
outs
test
mov
dec
cmps
xor
jg
test
push
mov
repz
jmp
fiadd
in
mov
sub
nop
cmps
aam
dec
out
xor
inc
iret
in
cmp
sbb
pop
sub
aam
movs
jl
jecxz
sbb
rcl
mov
pop
and
push
pop
xor
data16
dec
icebp
or
packuswb
dec
daa
jbe
das
scas
push
popf
ud0
enter
adc
cmp
out
fstp
les
cmp
jae
(bad)
xchg
xchg
pop
xchg
cwde
xor
test
sti
mov
(bad)
mov
mov
(bad)
ins
lock
enter
sbb
sbb
jmp
shl
mov
xlat
and
xor
(bad)
(bad)
sbb
xchg
cld
mov
cmps
shr
icebp
xchg
shr
sbb
sub
int
mov
inc
int3
sbb
mov
dec
cmp
mov
gs
jo
imul
pushf
retf
popf
cmp
jbe
std
cmp
pop
ja
inc
dec
scas
jge
js
lea
mov
sub
mov
lods
adc
push
xor
jbe
pusha
jmp
pushw
fcomp
js
pop
mov
mov
loope
movs
jge
dec
fwait
std
data16
or
jge
sti
retf
mov
mov
add
lea
xlat
and
(bad)
cmp
dec
neg
jne
sti
aas
imul
push
push
cdq
jns
mov
movs
cmp
sbb
push
cld
cli
div
xchg
inc
push
inc
xor
ret
add
fiadd
sbb
or
dec
push
push
(bad)
das
add
dec
jne
shr
push
xor
sbb
out
sbb
mov
add
cmp
sahf
retf
in
mov
imul
pop
test
(bad)
jle
bound
mov
lods
gs
(bad)
jge
inc
(bad)
adc
and
into
dec
int3
int3
sub
mov
fstp
popf
stc
and
pop
inc
dec
shr
xor
out
push
push
push
inc
add
pop
pop
inc
xor
fstp
outs
shl
xor
push
push
push
pop
lods
pop
lods
and
aas
ror
add
adc
add
aam
sub
pop
jnp
mov
gs
pop
sub
mov
push
pop
mov
pop
adc
cdq
jmp
scas
dec
sub
out
pop
retf
inc
scas
and
aad
bound
out
xchg
dec
imul
js
or
popf
mov
loop
adc
mov
xchg
pcmpgtw
icebp
rol
pusha
retf
cmc
adc
cmp
push
mov
inc
cdq
test
ret
(bad)
push
fldenv
outs
into
inc
push
mov
push
shl
fcom
repnz
pop
xchg
mov
fsubr
enter
ja
arpl
add
inc
push
scas
loope
pop
jge
mov
fwait
xchg
mov
loope
lahf
adc
jnp
or
jno
xchg
adc
mov
call
sub
cld
aas
pop
sar
xor
rol
sbb
call
data16
popf
stos
xchg
push
jg
adc
xchg
inc
ss
sar
xchg
fcomp
mov
stos
(bad)
leave
mov
std
(bad)
(bad)
mov
fs
pop
ins
mov
fs
xchg
jmp
dec
adc
cmps
(bad)
ficom
movs
test
dec
retf
xchg
ss
popf
and
arpl
add
pop
xchg
pop
sbb
mov
xor
or
imul
fwait
dec
inc
jae
shl
std
add
dec
iret
loope
and
xchg
fdivr
adc
outs
pop
push
scas
jle
daa
cmp
xor
popf
sub
xor
loope
push
imul
cmp
jno
adc
mov
ins
dec
ja
icebp
sub
jle
test
sub
mov
cmp
lahf
xor
sub
push
push
fwait
sar
push
mov
jge
push
pop
sbb
scas
fisub
jno
fnstcw
sub
jp
push
out
ret
movs
fiadd
add
aam
or
sub
daa
mov
setle
xchg
aaa
pop
jmp
jmp
add
ret
aas
or
call
xchg
jecxz
test
mov
lods
mov
jp
movs
xor
out
nop
jae
and
pop
adc
add
mov
adc
mov
aaa
arpl
fistp
pop
sub
add
cmp
add
fcomp
je
aad
xor
jmp
or
push
cmp
pop
mov
inc
fdiv
jbe
jg
ja
push
sub
inc
mov
lock
jno
jg
mov
jno
cmp
jmp
cmp
push
scas
test
loop
cs
jae
or
imul
xchg
xchg
or
fmul
adc
jmp
inc
mov
stos
or
imul
mov
nop
adc
loop
loop
test
or
nop
(bad)
mov
ja
push
add
cdq
(bad)
cmc
jns
loopne
pop
int
and
mov
lahf
popf
scas
fist
not
or
cs
xor
fist
inc
xchg
je
addr16
retf
mov
jg
dec
clc
mov
test
adc
adc
out
add
xor
xchg
jno
movs
dec
sbb
pusha
cmps
jp
and
mov
adc
jae
cmp
xchg
jae
sbb
cs
xor
push
sbb
cmp
mov
jp
ja
loope
retf
jg
or
cmp
jecxz
and
pop
dec
xchg
add
mov
jbe
test
mov
sbb
jge
push
call
dec
mov
jo
stos
fisubr
fwait
data16
rcr
rol
jle
xor
sbb
ficomp
mov
(bad)
gs
and
addr16
xor
loopne
mov
(bad)
repnz
pop
or
inc
jne
jne
scas
add
sbb
fidiv
inc
sub
push
es
outs
in
into
aad
test
pop
lock
adc
add
lods
lsl
or
xchg
ret
cmp
mov
cmp
push
mov
mov
mul
cmps
dec
and
stc
cld
adc
mov
js
jmp
and
aad
sbb
adc
mov
mov
mov
dec
popa
fisubr
fsub
shl
out
pop
jnp
das
aaa
mov
iret
fisubr
jecxz
sbb
dec
imul
sub
or
rcr
scas
ins
cli
stos
or
jb
pop
repnz
push
jecxz
mov
xchg
sahf
mov
push
push
sub
ds
leave
push
and
push
inc
sub
mov
(bad)
xchg
movntq
imul
inc
add
add
mov
div
add
loopne
out
bound
xchg
or
pop
hlt
add
mov
je
addr16
fldlg2
(bad)
in
xchg
xor
mov
adc
div
or
cli
test
sub
xchg
aam
inc
jae
pop
stos
je
call
mov
xor
xchg
cmc
push
leave
cmps
pop
dec
mov
jmp
retf
push
xor
fiadd
cmps
xacquire
(bad)
call
or
cmp
loopne
rol
(bad)
sahf
add
mov
push
popa
dec
repnz
jg
and
ja
cli
mov
push
mov
rcl
test
adc
loop
or
sti
outs
mov
xchg
or
sub
mov
(bad)
aaa
repnz
js
sbb
push
mov
std
sub
mov
stos
cmp
hlt
pop
popf
sub
sub
jnp
cld
int3
push
sub
call
push
cmp
fcomp
add
inc
es
cli
stos
jl
mov
xchg
data16
pop
jge
jl
mov
aaa
fimul
xor
mov
(bad)
out
scas
or
mov
loopne
or
inc
cmp
into
jno
cmc
sub
cmps
out
popf
stc
push
leave
mov
lea
fs
dec
cld
push
bound
retf
cmp
xor
(bad)
mov
pusha
dec
mov
xor
repz
pushf
add
xor
or
aam
popf
add
int3
fnstcw
fbstp
sbb
push
fadd
sbb
xor
lea
adc
shl
inc
(bad)
and
jl
mov
cld
pop
loope
dec
sub
dec
test
stos
(bad)
and
xchg
cmp
sbb
popa
loopne
test
sub
out
or
sub
ss
stos
shl
das
clc
pushf
and
dec
rol
js
mov
sbb
and
lods
pop
jp
dec
dec
mov
arpl
or
mov
ja
add
jbe
jp
icebp
jns
push
ds
mov
mov
cwde
adc
adc
in
or
bound
adc
mov
mov
and
sbb
in
xchg
or
mov
jns
add
jg
rol
sub
mov
xchg
test
(bad)
loopne
cmp
shr
sub
mov
cmp
and
fwait
(bad)
adc
adc
or
xor
add
and
sub
in
dec
ins
cmp
cmp
jl
cli
lahf
repnz
stos
jo
cwde
outs
les
out
sbb
cmp
mov
retf
shl
pop
fdiv
lods
lds
dec
cmp
push
leave
adc
add
outs
xor
enter
or
inc
xchg
(bad)
jle
cmps
mov
sbb
add
cld
aas
inc
arpl
mov
pusha
cli
pusha
cmp
sbb
inc
jmp
lock
cs
shr
mov
cmp
inc
add
fiadd
popf
nop
leave
cmp
(bad)
push
popa
pop
je
jp
mov
xchg
sti
adc
and
xor
xchg
inc
sbb
jo
iret
lods
xor
xchg
pop
push
fcom
inc
mov
fwait
ins
dec
inc
pop
jg
pusha
shl
adc
gs
mov
rcl
mov
sub
ins
ds
into
dec
dec
jno
push
mov
xchg
mov
in
aas
sbb
adc
pop
or
pop
mov
mov
dec
test
pop
out
arpl
or
xchg
movs
out
dec
add
pop
mov
(bad)
jno
cwde
(bad)
jge
hlt
(bad)
das
nop
fs
adc
xlat
fiadd
imul
xchg
jge
mov
or
mov
clc
xor
push
mov
mov
mov
clc
(bad)
cmps
fldl2e
adc
xchg
int
popa
xor
mov
dec
gs
xchg
fcom
cmp
out
aaa
sub
push
mov
rol
push
lock
mov
shr
movs
fwait
xchg
dec
jle
arpl
sbb
cli
adc
sbb
inc
fld
mov
xor
stc
aaa
out
inc
(bad)
es
jb
xor
aam
int3
shl
in
lahf
dec
sbb
es
retf
ins
lods
stos
ds
and
jns
cmp
jb
(bad)
adc
adc
ja
mov
rol
or
mov
mov
jp
push
pop
fstp
aas
mov
mov
xor
ja
ftst
ins
mov
jnp
add
mov
cs
shl
outs
or
out
movs
fyl2xp1
jp
shl
adc
addr16
mov
cli
mov
ins
fwait
push
and
dec
outs
cmp
shl
popf
mov
rcr
cs
push
cmp
scas
lods
mov
push
leave
add
xchg
aaa
pop
adc
lock
jnp
idiv
bound
sar
(bad)
cmp
inc
xchg
pop
cli
push
push
jno
ins
adc
xlat
fst
and
xchg
xor
pushf
sub
sbb
mov
rcl
call
dec
aad
sub
cdq
mov
aam
mov
or
mov
ja
stos
sbb
in
pop
xchg
inc
lds
xor
imul
sbb
out
mov
shl
push
sbb
dec
js
les
mov
test
imul
jb
clc
mov
inc
dec
test
xchg
xor
sbb
jmp
add
dec
fs
mov
xor
xchg
xchg
ja
and
push
popf
imul
icebp
mov
mov
ret
lock
into
mov
xchg
adc
loope
imul
icebp
lahf
fdivr
int3
ja
push
xlat
jg
mov
out
enter
push
pop
push
pop
jno
cld
mov
add
sti
test
mov
rcr
mov
shl
ret
pop
pop
xor
dec
dec
call
das
(bad)
aas
out
lahf
cmp
push
rcl
jle
inc
or
cmp
outs
inc
pop
out
sub
or
in
ds
pop
adc
shl
aad
push
bound
ret
pop
je
mov
mov
(bad)
jno
mov
mov
pop
inc
int3
pop
and
mov
adc
mov
cmp
icebp
adc
out
movs
sar
mov
jle
push
mov
movs
jb
leave
cmp
hlt
dec
inc
or
cs
pop
fs
adc
call
pop
sbb
add
(bad)
or
aaa
mov
adc
mov
scas
mov
dec
ret
lods
pop
xor
outs
push
out
sti
out
xchg
arpl
xchg
inc
cmp
xor
pop
movs
cmp
test
adc
and
mov
cmp
pop
cld
inc
idiv
xor
mov
call
dec
popf
pop
stos
(bad)
pop
pop
pop
div
xor
ins
mov
xchg
dec
sub
cmp
inc
push
and
daa
sbb
lods
bound
(bad)
int3
mov
xchg
icebp
aad
pop
call
cmps
test
in
jmp
or
out
jl
jo
mov
fnstsw
enter
pop
outs
fmul
and
sbb
add
inc
sub
and
(bad)
sar
xor
(bad)
es
je
std
xchg
mov
jl
mov
mov
sub
and
mov
mov
test
xchg
xor
xchg
inc
scas
mov
mov
xor
repz
ret
out
sub
push
les
mov
jns
lahf
loop
sub
adc
inc
sar
(bad)
pop
sub
out
leave
in
into
adc
mov
lea
sub
mov
pop
out
dec
or
hlt
mov
(bad)
dec
bnd
push
sub
add
retf
shr
retf
fsub
aaa
rol
push
fadd
mov
dec
hlt
adc
adc
adc
sbb
xchg
jle
mov
mov
or
hlt
in
push
push
cwde
ficomp
inc
pusha
pop
adc
adc
cdq
xchg
popa
jl
mov
lahf
dec
push
pop
lods
dec
jmp
adc
addr16
movs
jno
cwde
shr
fcomp
sbb
dec
nop
mul
mov
xchg
inc
into
and
js
mov
push
pop
pusha
mov
in
je
repz
adc
cld
(bad)
cmp
push
dec
test
fdiv
iret
inc
(bad)
xchg
js
call
aad
mov
jp
xor
mov
sar
cmp
pushf
add
ja
sbb
add
test
sub
mov
xchg
sbb
in
or
add
mov
jp
pushf
and
lock
inc
mov
in
arpl
adc
mov
inc
add
lds
(bad)
sbb
retf
and
out
xchg
fmulp
cli
sub
mov
sub
repz
xchg
jae
mov
movs
mov
mov
mov
ja
test
shl
repnz
dec
nop
xchg
jmp
popa
test
cmp
or
inc
repnz
mov
clc
cwde
es
xchg
fsubr
popf
cmp
adc
push
and
cdq
inc
jecxz
jl
xlat
sub
test
pop
inc
mov
clc
fwait
call
cli
mov
mov
sti
push
jl
aam
aas
push
fld
and
stc
aam
out
imul
adc
xchg
fisub
retf
shr
adc
xlat
mov
push
mov
cwde
xchg
sbb
int3
call
or
pop
iret
or
rcr
and
or
lods
fadd
(bad)
hlt
stos
lods
into
(bad)
out
cmp
xor
cmps
sbb
arpl
fisubr
test
fcmovb
dec
and
xor
jns
lock
sbb
aam
cmp
in
imul
hlt
cli
inc
dec
iret
push
mov
or
lahf
rcr
pop
int3
int3
ret
pop
and
jns
mov
cmc
push
jno
mov
addr16
sahf
in
sub
bnd
or
xor
arpl
mov
loop
inc
scas
icebp
dec
(bad)
call
add
in
sub
in
inc
aaa
add
ror
dec
xchg
jmp
pop
sbb
xchg
xchg
jge
mov
sub
push
daa
jle
out
pop
out
push
fisub
mov
test
dec
sub
cmc
icebp
adc
and
mov
xchg
ss
push
adc
inc
and
dec
and
or
inc
clc
into
dec
push
out
push
clc
adc
je
pop
mov
sub
cwde
or
sbb
dec
inc
cli
hlt
dec
adc
mov
cmp
dec
ficom
pminsw
xor
push
sub
fst
test
cwde
fdiv
sbb
stos
imul
xor
sbb
out
ret
pop
adc
pop
jg
cmps
popa
adc
sub
imul
inc
iret
inc
outs
mov
add
push
push
jl
jmp
jmp
shl
and
loopne
dec
fdivp
xlat
fcmovb
gs
repz
fnstenv
dec
out
inc
add
dec
mov
dec
je
xchg
pusha
in
adc
lods
adc
and
mov
cmp
daa
xchg
jge
idiv
cdq
add
test
jge
jno
iret
imul
inc
jmp
into
sbb
repz
mov
mov
cmp
sbb
shl
(bad)
aaa
popf
inc
adc
xlat
adc
enter
or
inc
das
xchg
dec
ja
mov
ret
push
fistp
mov
push
or
push
inc
fisub
sti
push
ret
lea
push
xor
mov
and
sar
outs
in
test
mov
sbb
cs
aam
pop
(bad)
fisttp
pop
shr
xor
fcomp
je
in
xchg
mov
ins
jmp
or
dec
xchg
adc
cs
xor
mov
and
das
out
jge
inc
std
fisttp
adc
les
jae
mov
inc
call
mov
xor
shl
std
cmp
sbb
mov
add
cmp
aad
and
inc
shr
xor
popa
in
cdq
mov
dec
inc
jle
ret
lock
scas
pop
nop
jge
add
stos
in
cdq
out
jle
out
sahf
mov
dec
mov
xor
fwait
sub
jmp
mov
clc
dec
sbb
arpl
movs
lock
int
cs
ins
inc
and
dec
lock
add
jae
pop
sub
(bad)
out
cmp
in
mov
and
and
call
jl
daa
mov
fnstenv
js
test
mov
retf
jnp
jnp
xchg
pop
jo
popf
sti
inc
mov
xor
rol
test
addr16
inc
jne
(bad)
fcomp
add
xor
mov
sub
imul
enter
jl
mov
ja
sub
adc
stos
push
xchg
dec
push
sbb
movs
mov
sub
pushf
inc
popf
cmc
shl
aam
aam
fadd
push
fs
xchg
popf
and
repz
jns
xchg
sbb
movs
sti
sub
popf
push
(bad)
cmps
pop
push
out
fldcw
scas
fnstenv
nop
xchg
adc
mov
iret
push
int3
cmp
adc
popf
bnd
bound
push
adc
test
and
mov
retf
push
enter
pop
call
pop
adc
rcl
mov
jno
cmc
and
jmp
pop
mov
lahf
xor
std
imul
adc
inc
cmp
cmp
bound
sub
rol
xlat
xchg
pop
or
call
mov
mov
in
arpl
xchg
es
test
loopne
aam
clc
pop
mov
or
data16
jg
mov
mov
and
aaa
div
adc
cmp
adc
call
cwde
dec
xlat
in
jo
add
push
sar
arpl
dec
mov
jg
call
ret
push
inc
pop
cmp
mov
outs
cmp
les
push
out
(bad)
push
scas
sahf
xchg
dec
and
cmp
jg
cmc
out
popa
cmp
arpl
and
dec
sub
(bad)
shr
pop
mov
sub
pushf
sub
jge
push
inc
bound
sub
mov
mov
sub
ss
test
jno
outs
mov
test
test
pop
jo
ds
jnp
push
into
cs
cwde
sti
mov
inc
in
jno
adc
into
in
sbb
add
dec
leave
or
jb
inc
retf
mov
and
outs
test
jns
xchg
pop
jo
clc
push
out
sub
(bad)
je
ficom
imul
push
dec
jae
sub
jb
add
clc
repnz
fidiv
mov
out
int
push
int
or
mov
in
addr16
sbb
sbb
and
aaa
ss
mov
mov
push
retf
loopne
je
adc
int
fistp
sbb
mov
arpl
sub
stos
sub
and
loope
pop
mul
dec
je
(bad)
jl
inc
add
push
fs
lds
(bad)
mov
jnp
jmp
sti
mov
retf
or
pop
into
fdiv
movs
(bad)
inc
outs
in
push
sbb
loopne
push
pop
ror
cmc
xchg
cdq
dec
mov
adc
call
and
movs
je
xchg
in
push
and
pop
ss
int
(bad)
pop
jb
adc
nop
js
add
jmp
test
test
mov
popa
mov
mov
push
mov
leave
adc
cmc
adc
inc
xchg
fsub
lock
xor
push
imul
jne
movs
loope
cwde
sub
aad
dec
cld
mov
hlt
sbb
aas
xor
jns
jg
adc
or
popf
(bad)
jmp
adc
add
or
fsub
adc
dec
dec
je
mov
and
xchg
pop
add
jns
in
or
scas
add
cmc
push
movs
sbb
sbb
int3
ss
push
clc
sbb
outs
call
cmp
fisub
push
bound
in
icebp
dec
je
imul
cmp
push
dec
cdq
pop
and
push
in
mov
jb
or
or
dec
mov
arpl
into
adc
adc
inc
cmp
mov
adc
(bad)
jge
cmp
dec
xor
int
fnstenv
out
mov
xchg
ret
rol
mov
sub
fcmovnu
inc
retf
std
jnp
inc
pop
dec
fnstcw
sub
pusha
in
add
adc
(bad)
lahf
out
sbb
add
xor
shl
jl
out
push
xchg
mov
cmc
jno
in
jb
pushf
inc
je
sub
mov
sti
popf
pop
cmp
inc
xchg
add
clc
aad
dec
lods
data16
mov
adc
outs
sub
int3
sbb
das
loopne
outs
pop
fidivr
js
cmc
call
ins
fwait
scas
icebp
stos
sti
xor
jo
enter
push
dec
or
out
pop
cmp
iret
inc
pusha
in
xor
js
js
adc
jbe
and
data16
mov
mov
dec
cmps
and
aaa
mov
cmp
out
mov
icebp
(bad)
sbb
stos
and
pushf
stos
repz
les
enter
mov
daa
aaa
jne
shl
pop
mov
mov
shl
bound
inc
out
mov
jo
jle
stc
jp
dec
add
or
pop
sbb
jge
jno
in
jp
in
push
sbb
imul
fcomip
mov
pop
adc
aas
pop
aad
aad
stc
pop
popa
jmp
mov
outs
sbb
cmp
jge
fwait
in
gs
ret
nop
xchg
fisubr
in
ds
xchg
sub
or
aaa
addr16
mov
mov
or
test
in
fcom
aaa
add
mov
loope
adc
inc
jg
retf
fadd
sti
sbb
or
fisub
ret
push
ror
out
and
iret
(bad)
ja
pop
repz
pusha
mov
push
cli
outs
mov
push
pop
jo
shl
das
jecxz
ret
xor
in
retw
sahf
cmp
mov
loope
dec
or
adc
sub
pop
aam
xor
fisub
add
dec
(bad)
pop
adc
ds
mov
xchg
stc
test
in
xlat
xor
call
cmp
(bad)
pop
(bad)
std
cmps
mov
and
mov
cmp
xchg
jle
push
pcmpeqb
int
and
xchg
xchg
cmp
pop
out
adc
pop
shl
sub
add
xor
out
push
repz
lods
and
mov
outs
pop
fdivr
mov
in
aas
push
xchg
iret
mov
out
mov
mov
and
retf
test
jg
cmps
sbb
aam
lods
adc
stos
sub
push
pusha
pop
leave
lods
ins
int
sbb
std
std
ja
mov
jl
jnp
icebp
mov
dec
sbb
jbe
fwait
shl
data16
clc
and
jno
dec
shl
out
loop
mov
fisttp
mov
sbb
sub
enter
mov
fwait
xor
pop
ins
sbb
fistp
fdivp
push
cmp
xor
sub
stc
ins
cld
popf
xor
cmp
xacquire
jecxz
jle
in
iret
mov
sti
jp
ins
mov
ins
sti
sub
repnz
pop
and
ins
push
call
(bad)
push
in
pop
xchg
cmp
fwait
iret
cmp
(bad)
adc
pop
and
or
data16
loope
test
cmp
push
popa
aam
ror
(bad)
fsub
mov
inc
pop
dec
cmp
cmc
mul
fdiv
mov
cmp
push
loope
jbe
pop
lea
mov
movs
xchg
rcr
mov
push
xor
jl
and
mov
imul
sbb
aaa
enter
push
push
dec
test
mov
sub
sti
hlt
and
push
outs
push
mov
jl
imul
push
and
mov
scas
mov
mov
imul
mov
ds
jno
icebp
mov
dec
ror
lds
dec
fst
inc
data16
ins
xchg
or
sbb
mov
es
sbb
cmp
push
mov
ror
and
push
data16
pushf
clc
call
xor
mov
xor
data16
dec
shr
pop
fwait
imul
xchg
mov
sbb
imul
push
in
sar
or
pop
(bad)
outs
add
sub
dec
imul
adc
push
enter
adc
adc
add
out
cmp
pushf
retf
xchg
rcl
push
jmp
(bad)
gs
idiv
sbb
(bad)
mov
cwde
sub
outs
enter
jg
sub
push
outs
mov
or
jns
adc
nop
push
push
cmp
and
xor
jnp
test
dec
cs
push
or
sar
test
mov
mov
(bad)
jne
arpl
cmps
(bad)
pushf
leave
sahf
xor
lea
cmp
stos
bound
push
inc
sar
repnz
sahf
(bad)
test
lahf
jae
scas
movs
mov
lods
dec
sbb
sahf
into
(bad)
test
push
in
je
sub
gs
jecxz
cmp
push
lock
sub
dec
adc
dec
inc
xlat
je
outs
jl
mov
int
call
fistp
push
cmp
stos
xchg
add
shl
push
in
fisttp
add
or
mov
jle
xor
inc
lock
hlt
cdq
cmp
fcom
jge
jl
jb
inc
dec
push
cld
adc
inc
sbb
iret
sub
jle
lahf
jne
mov
fsubr
popa
retf
ds
xchg
jb
xchg
mov
jno
push
mov
fdivr
or
scas
lods
(bad)
inc
jmp
xor
and
cdq
dec
mov
push
push
movs
mov
inc
sbb
sub
lds
xchg
and
(bad)
pushf
data16
dec
jl
dec
push
inc
push
pop
lock
cmp
adc
enter
cld
push
xor
cmp
das
mov
loope
in
imul
pushf
inc
mov
ds
jns
and
add
sub
adc
cmp
sub
shl
repnz
test
loop
jb
adc
inc
adc
dec
xor
dec
(bad)
cmp
jge
push
sbb
jae
(bad)
push
mov
sbb
dec
(bad)
pusha
mov
loop
lea
(bad)
sub
int3
call
xor
pop
js
ja
jb
dec
loop
(bad)
jmp
dec
inc
mov
and
mov
mov
mov
cmc
lods
cmps
daa
push
inc
sub
(bad)
dec
xor
add
lods
sub
aad
sti
add
sub
out
sbb
popa
bound
cmc
jmp
fcmovb
sbb
jae
call
cmp
imul
ror
lods
xchg
ret
pushf
ins
ins
mov
push
jle
adc
loop
dec
data16
jb
ficomp
cmp
sti
push
cmps
dec
and
outs
push
(bad)
mov
imul
jne
in
js
dec
inc
push
jns
dec
stos
jg
not
mov
ret
popf
xchg
jmp
xchg
push
jae
shr
and
and
cld
push
inc
mov
js
hlt
add
mov
fmul
out
pop
or
arpl
mov
dec
psraw
fs
xor
xchg
enter
jne
lock
loope
sti
fdiv
movs
add
cmp
fldcw
ss
fbstp
or
jmp
dec
arpl
sub
rcl
mov
pop
rcr
cli
sbb
ins
sbb
pop
add
xchg
in
push
mov
ins
adc
pop
cwde
aad
xor
adc
xchg
mov
dec
cmp
aam
sbb
sar
jmp
dec
into
cmp
push
sbb
mov
outs
js
xor
xchg
xchg
add
xor
inc
inc
add
(bad)
lock
mov
push
shr
or
js
hlt
gs
inc
pop
sbb
add
sbb
std
inc
mov
cmp
jmp
mov
mov
in
and
pop
cli
aas
mov
iret
fcom
or
jne
inc
arpl
or
popf
arpl
int3
sahf
and
cli
inc
inc
gs
or
les
mov
ss
int3
sbb
jmp
cmps
(bad)
out
mov
lods
jnp
cld
dec
test
pusha
xor
dec
retf
cmps
mov
pop
mov
stos
mov
xchg
nop
int
stc
jle
fisttp
ret
stc
add
mov
pop
dec
jmp
ins
jmp
retf
in
jnp
je
imul
cwde
mov
cmps
xchg
stos
pop
adc
mov
push
adc
(bad)
sbb
sub
fcomp
stos
or
mov
mov
push
push
or
std
fcmovnb
xchg
dec
aaa
daa
jae
mov
rol
and
cld
loope
pop
mov
mov
mov
ins
push
repz
dec
cmp
push
(bad)
rcl
mov
lds
mov
mov
test
or
sbb
mov
pop
shr
out
dec
sub
jb
add
xchg
mov
mov
gs
fld
repz
cdq
xchg
xchg
rcl
pop
mul
lea
pop
ret
xchg
rcr
or
addr16
push
cdq
pop
adc
and
xchg
fs
outs
out
out
sub
test
lock
lahf
mov
test
pop
leave
invd
das
gs
ret
sbb
xor
pop
aad
cmc
mov
jbe
mov
jo
out
inc
out
sub
outs
scas
pop
mov
xor
and
mov
push
in
test
test
addr16
int3
imul
mov
shr
push
aam
inc
and
mov
scas
sti
(bad)
add
aam
adc
sbb
iret
adc
inc
and
out
rol
in
mov
push
aam
mov
mov
clc
das
xchg
pop
xor
push
sbb
enter
ret
inc
xchg
inc
xlat
cmp
pusha
jmp
cli
movs
jo
add
mov
ret
retf
add
test
scas
cmp
in
fiadd
or
inc
jo
push
or
inc
sbb
push
push
fst
jle
xor
sahf
test
jo
jne
out
adc
add
mov
push
jmp
imul
mov
xchg
inc
fmul
int3
xchg
jmp
cs
jmp
arpl
mov
xchg
xchg
dec
pop
xor
dec
jae
and
retf
out
cld
push
sub
bound
js
pop
test
dec
xchg
leave
into
fcom
les
cwde
add
push
dec
shl
mov
xor
js
nop
clc
mov
aad
push
xor
add
lock
pop
sub
ins
aad
mov
pusha
outs
jmp
outs
fninit
mov
lea
inc
loope
test
jmp
dec
pop
jle
xchg
fsub
sbb
out
or
inc
mov
aad
loopne
and
inc
(bad)
mov
inc
fild
adc
retf
dec
bound
movs
mov
pop
(bad)
push
int3
stos
mov
mov
push
retf
fistp
add
push
xchg
into
adc
ins
imul
push
test
or
mov
mov
pop
inc
test
inc
int3
not
rol
or
bound
jle
and
push
mov
in
cs
js
test
out
push
dec
dec
dec
aad
loop
push
stos
inc
sbb
stos
jmp
icebp
int
push
out
jno
imul
fsub
xor
dec
or
test
jbe
or
sbb
stc
out
jns
std
sub
(bad)
lahf
lods
add
jle
and
sbb
sbb
cli
pop
or
push
xchg
inc
push
inc
sar
pop
xchg
mov
push
xor
ret
push
sub
cmp
mov
dec
pusha
mov
xchg
xor
jb
inc
sar
inc
jle
mov
iret
fsubr
dec
jmp
(bad)
jl
mov
sbb
jo
jmp
and
mov
sti
mov
dec
sbb
mov
add
add
push
add
sub
xchg
dec
dec
or
push
ins
shl
aas
ins
aas
inc
and
sub
inc
hlt
mov
ins
(bad)
mov
and
sahf
mov
pop
imul
ror
lahf
addr16
pop
mov
jp
cld
or
push
mov
push
rol
addr16
cmc
cli
outs
imul
(bad)
sbb
daa
outs
loope
cld
int3
nop
jle
add
cmp
out
fist
mov
sub
push
push
cli
sbb
cmp
sub
loope
jle
add
dec
test
popa
sbb
cmp
xor
dec
lock
loope
cwde
push
mov
fst
sti
mov
adc
icebp
add
or
mov
sti
add
stos
add
mov
rep
mov
mov
daa
pop
mov
cld
data16
add
jae
xchg
jmp
xchg
xchg
cmp
in
rcl
inc
cmp
data16
loope
pop
out
push
pop
out
jmp
mov
mov
scas
stos
repz
popf
lods
cmp
adc
cmp
ror
jb
pop
jnp
mov
shl
or
test
sub
add
add
sar
inc
and
enter
or
int3
lds
cmp
movs
fdiv
popf
test
mov
cdq
jmp
imul
stos
es
out
jl
push
cli
mov
js
lock
mov
fistp
sub
push
mov
and
or
dec
loop
pop
repnz
jno
loopne
dec
push
(bad)
aaa
push
les
push
push
rcr
stos
es
cmp
sub
nop
retf
retf
aam
mov
add
fmul
repz
push
aaa
cmp
int3
jno
or
push
lds
pop
enter
popa
int
sbb
jp
inc
dec
hlt
ja
or
mov
lods
es
stc
pop
and
inc
out
scas
xchg
add
push
add
cmp
ins
les
fidivr
loopne
pop
mov
out
jmp
lods
ds
addr16
mov
ins
rcl
xor
mov
inc
mov
mov
jg
cmp
out
sbb
xor
push
je
cmps
sub
adc
cdq
sbb
shl
imul
std
in
pop
cwde
scas
sbb
aam
stos
sbb
adc
loop
pusha
push
pop
inc
push
sar
add
xor
inc
pop
dec
sbb
div
push
aaa
and
jo
push
sbb
cli
dec
jmp
shl
and
retf
retf
and
mov
fwait
stos
add
pop
(bad)
xor
(bad)
or
aam
inc
out
outs
push
or
lds
es
(bad)
fdivp
sbb
mov
pop
mov
jo
cmps
cdq
aad
js
jecxz
test
adc
sbb
jg
das
cmp
mov
add
into
mov
icebp
sub
fnsave
fcmovne
sub
and
les
scas
leave
les
mov
xor
ins
mov
pop
aam
dec
bound
loopne
push
lods
call
sti
scas
mov
movs
adc
ror
bnd
call
ror
push
aaa
ja
je
mov
imul
fs
cmps
ss
adc
lods
aad
js
sub
shr
xor
xor
test
clc
adc
adc
lea
jno
pop
jl
cmp
cmp
xlat
fs
push
pop
fidivr
cmp
ins
pop
dec
(bad)
sbb
xlat
jb
pop
dec
mov
mov
leave
cmp
and
in
xchg
jmp
mov
jbe
and
lea
xchg
sbb
ret
inc
repnz
int
movhps
mov
push
bound
rol
mov
jl
and
push
jnp
push
neg
cmp
je
outs
jae
or
lock
fisub
retf
fist
sub
and
adc
jns
mov
rol
loopne
jne
out
mov
lods
mov
sahf
das
loopne
clc
pop
and
div
jl
pop
jne
ins
inc
stc
call
cld
leave
inc
retf
fnstcw
rcr
pop
mov
rol
dec
movs
inc
pop
out
push
imul
xchg
movs
jecxz
or
and
inc
jae
cmp
int
sbb
ins
ins
cwde
(bad)
ins
retf
sahf
sbb
sti
dec
imul
ret
test
out
sub
mov
leave
fmulp
push
cdq
(bad)
mov
xor
shl
xor
popf
or
mov
shl
in
xor
call
ret
xor
icebp
int
jmp
loopne
leave
xchg
adc
pushf
retf
pop
sbb
mov
cli
jmp
xor
loope
test
pusha
fwait
scas
sbb
test
sbb
pop
mov
or
pop
cmp
xor
stos
loopne
cli
xchg
mov
xchg
aam
pop
and
xchg
mov
sbb
retf
ficomp
pop
neg
aad
popa
fstp
push
adc
and
and
mov
sti
(bad)
aad
setl
push
lock
xchg
aas
push
in
shl
mov
pop
and
cmps
adc
popa
std
push
aas
iret
int
xchg
scas
shl
and
scas
adc
sbb
inc
xchg
jg
test
add
cmp
add
xor
sbb
(bad)
and
dec
mov
mov
xchg
ret
test
mov
push
jne
shl
xor
lock
jmp
cli
mov
iret
(bad)
das
inc
mov
mov
dec
mov
cmp
cmc
push
and
or
inc
stos
sub
dec
popf
data16
cmc
inc
sar
out
mov
stos
pop
data16
popa
les
repnz
mov
cwde
jae
push
test
push
sbb
lods
mov
leave
and
imul
inc
xor
ja
pop
add
fmul
mov
(bad)
dec
pop
add
sbb
or
dec
retf
inc
mov
rcr
push
fdiv
in
push
pop
sub
push
sbb
je
lods
inc
into
or
mov
or
mov
ins
push
cli
or
inc
jg
pop
aad
nop
inc
getsec
jecxz
mov
cmc
icebp
dec
push
cwde
loopne
mov
loope
dec
out
jns
bound
add
inc
and
imul
jecxz
sbb
in
cmc
hlt
sub
cli
adc
sub
pusha
inc
mov
dec
jae
or
stc
mov
aam
push
pusha
add
mov
in
inc
stos
stos
sbb
cmp
mov
sbb
adc
lock
jo
and
stc
pusha
cld
fild
les
retf
adc
pusha
gs
(bad)
out
jmp
fcmovbe
into
adc
adc
xchg
mov
cmps
add
mov
sbb
and
loope
(bad)
adc
pop
mov
jp
pop
push
aad
retf
imul
adc
mov
fst
jmp
pop
mov
sbb
or
push
(bad)
push
or
retf
icebp
hlt
das
pop
imul
cmp
out
sbb
popf
inc
aam
in
xor
sub
add
mov
jns
inc
push
loope
pop
bound
mov
fs
cs
ss
out
imul
jecxz
or
ret
or
sub
mov
jl
fcmovnu
push
or
xor
cmp
push
or
mov
mov
arpl
call
xchg
xor
out
inc
mov
int3
xor
and
adc
out
test
jns
ins
mov
cmps
xchg
int3
rol
mov
enter
icebp
popa
dec
das
repnz
cwde
inc
xchg
mov
cmp
jns
(bad)
mov
and
inc
imul
and
adc
inc
mov
test
mov
test
inc
mov
out
xchg
sub
lods
dec
pop
dec
icebp
dec
popf
ins
(bad)
or
outs
dec
dec
jge
or
loopne
das
ja
ins
pushf
fwait
adc
fdiv
jmp
mov
nop
je
xchg
fdivr
add
sub
jmp
addr16
mov
call
sar
ss
mov
cmp
xchg
jnp
ins
mul
or
mov
inc
ret
jl
in
(bad)
lods
les
jno
sub
or
sub
inc
in
push
xchg
or
jae
sbb
lods
push
in
add
addr16
inc
loop
(bad)
fnsave
pop
cdq
inc
push
(bad)
lock
pop
adc
jecxz
iret
and
jno
(bad)
hlt
adc
xchg
push
ja
dec
cmp
jg
dec
xchg
rol
mov
inc
aad
mov
adc
dec
(bad)
out
mov
pop
fbld
repnz
fbstp
mov
mov
pop
cmp
or
daa
cmp
neg
sahf
pop
inc
retf
mov
sub
cdq
jmp
xchg
shr
movs
and
out
cs
jbe
adc
jp
inc
je
add
and
cmps
mov
push
(bad)
ss
fdivr
retf
ja
or
xor
sbb
mov
fwait
test
out
sub
test
sahf
mov
fst
and
sbb
pop
(bad)
mov
lods
scas
xor
test
jmp
idiv
push
mov
pusha
(bad)
hlt
fldenv
cs
mov
dec
push
adc
iret
test
call
add
xchg
dec
or
sbb
cmps
fnstenv
sub
in
out
push
sbb
sbb
movs
rol
or
pop
sbb
pop
shr
xchg
jb
add
das
push
inc
hlt
mov
in
test
(bad)
pushf
inc
fist
push
xor
pop
pop
lahf
movs
shl
xchg
jg
lods
xlat
pop
call
xor
out
daa
js
xchg
ds
jbe
les
dec
repnz
mov
in
push
pop
adc
jnp
cs
sub
xor
sbb
dec
dec
jmp
push
movs
fld
into
or
repnz
(bad)
(bad)
stc
push
in
dec
jmp
adc
lahf
dec
sub
push
mov
popf
sub
pop
(bad)
mov
ss
loopne
mov
aam
xchg
mov
pop
fild
nop
push
inc
out
or
lahf
cdq
js
lock
mov
fist
outs
cwde
mov
adc
dec
xor
mov
xchg
push
jo
nop
ins
inc
add
mov
call
mov
cmps
(bad)
call
add
or
ret
mov
rcr
mov
aam
rol
cmp
movs
xchg
xchg
pop
cs
int3
mov
lds
xchg
or
(bad)
dec
mov
push
loopne
in
adc
sub
popa
jmp
repnz
mov
repz
inc
cs
push
jmp
mov
outs
shl
popf
xchg
out
adc
mov
adc
cld
imul
cmp
jg
jae
mov
stos
mov
(bad)
bnd
xchg
arpl
cld
stc
rcl
bound
xor
out
addr16
lds
xor
(bad)
push
(bad)
adc
add
je
lock
xchg
loopne
ror
adc
xor
pop
or
repnz
mov
ins
or
adc
mov
and
jg
mov
jle
nop
sbb
or
xchg
pushw
push
sbb
cmp
xchg
mov
(bad)
jns
push
call
xchg
popa
jo
or
jecxz
cli
lods
and
stos
fwait
pop
int
(bad)
shl
jmp
xchg
mov
lods
mov
(bad)
add
sub
pop
fnstsw
lods
mov
aas
sahf
adc
jbe
or
dec
xchg
es
and
inc
cmps
sar
iret
jmp
sti
push
xchg
or
addr16
in
mov
lahf
lock
add
iret
jnp
mov
aam
jo
adc
mov
xchg
and
adc
push
dec
std
data16
inc
push
out
stos
ja
cmp
loopne
ins
push
xchg
call
imul
pop
test
fnstenv
cmp
inc
clc
loope
xor
jo
lods
sti
xor
jl
jnp
cmc
arpl
mov
push
fs
pop
call
or
xor
shl
fisttp
sti
(bad)
enter
sub
retf
mov
fist
hlt
pushf
fisttp
or
mov
sub
and
das
push
enter
inc
adc
(bad)
in
mov
and
jg
iret
xchg
cli
cmc
and
or
lea
in
aam
mov
sbb
(bad)
jbe
mov
lods
nop
sub
repnz
xchg
fwait
mov
in
imul
jmp
loop
fcomp
lods
cwde
push
(bad)
xor
or
mov
jnp
push
ds
das
adc
xor
or
mov
jne
inc
dec
xor
cmp
std
test
jecxz
daa
sub
sub
(bad)
mov
xor
aad
xchg
cs
lahf
outs
mov
add
bnd
adc
and
pand
xor
out
mov
xchg
mov
cmc
imul
mov
icebp
in
dec
cmc
test
ja
xchg
mov
vmwrite
lock
stos
push
cld
nop
mov
cmps
push
sub
in
xchg
and
icebp
mov
xor
jns
rol
(bad)
in
aas
dec
mov
dec
dec
mov
stos
xor
xchg
(bad)
inc
sbb
adc
mov
sub
xor
retf
xchg
push
xor
pop
add
and
bound
test
push
loopne
add
nop
xchg
out
jmp
mov
daa
test
jmp
inc
mov
jl
jo
sbb
out
int
loopne
sahf
fs
mov
jg
push
mov
icebp
cmps
popa
or
sub
mul
and
in
sub
or
and
(bad)
jmp
push
(bad)
pushf
fisub
ret
shl
cmp
and
jae
pop
cmps
adc
call
or
jg
mov
adc
add
sub
les
ja
ja
hlt
cli
out
jecxz
inc
lods
cwde
xchg
add
xor
inc
add
repz
and
(bad)
ja
shl
cmp
dec
mov
bound
sbb
jo
mov
dec
test
cvttps2pi
pop
mov
les
retf
mov
(bad)
loopne
pop
fisub
add
into
xchg
cdq
nop
jecxz
ins
dec
fisub
inc
imul
sub
dec
sub
sbb
ds
add
or
sub
inc
cs
pusha
call
lock
cld
mov
add
jle
test
dec
cwde
and
xchg
or
add
push
mov
xor
in
adc
xchg
icebp
adc
pop
sbb
je
push
fild
xchg
retf
les
aad
repnz
ret
xchg
dec
loopne
push
xor
aaa
ds
add
jb
sar
mov
xor
mov
xor
xor
jns
mov
and
jo
xchg
xchg
cmp
int
ins
mov
repz
mov
dec
xchg
push
ret
fdivr
sub
xchg
cld
jmp
dec
pop
aad
scas
addr16
pop
mov
or
dec
lahf
test
jno
scas
cmp
out
and
mul
loopne
pop
and
mov
xor
js
retf
push
out
add
push
sub
fist
and
sar
inc
fdivp
pusha
add
fistp
pop
pushf
xchg
add
loope
add
dec
out
push
xchg
sar
rcl
xchg
aaa
popf
mov
or
adc
cmp
cmc
adc
mov
stos
cld
cs
push
cld
adc
enter
mov
xchg
imul
and
sbb
in
das
sub
mov
mov
enter
mov
adc
fimul
xchg
mov
and
and
jmp
xchg
and
icebp
fisttp
movs
sub
add
pop
inc
sub
jle
sub
add
xor
fidiv
or
sbb
retf
sbb
sbb
gs
stc
sbb
(bad)
push
jns
cmp
sub
les
and
pop
shl
mov
mov
dec
xchg
mov
and
sti
dec
jle
mov
cs
xchg
inc
jmp
fadd
xor
leave
jg
lods
aas
adc
pop
call
jle
inc
sub
pop
(bad)
cmp
loop
lock
retf
push
push
jb
pop
mov
aad
cmp
push
xor
outs
(bad)
jp
push
hlt
loop
gs
mov
xor
int
adc
inc
or
mov
int
shl
adc
cdq
adc
mov
xor
das
mov
push
cld
push
cmp
sub
fs
xor
mov
repnz
(bad)
neg
movs
add
retf
in
fcomp
push
ffreep
mul
into
pop
(bad)
mov
sbb
mov
push
mov
lods
push
mov
inc
and
ds
mov
aam
or
jae
adc
clc
push
mov
js
les
and
sub
jnp
and
les
lahf
sbb
push
pop
test
push
pop
sahf
xor
stc
loop
push
in
pop
jno
cwde
jmp
pop
mov
push
stc
and
or
xchg
repnz
std
and
in
sub
xor
mov
push
jns
adc
pop
mov
je
pop
sbb
add
aaa
sbb
mov
dec
adc
mov
xor
loop
fidivr
xor
sbb
jns
lea
pusha
imul
xor
nop
or
out
repnz
movs
sub
jecxz
ret
mov
adc
adc
(bad)
pop
mov
aaa
in
push
jb
mov
fisubr
dec
fxch
repz
stc
adc
mov
jge
lock
ins
jne
and
loopne
dec
push
shl
push
retf
dec
cmp
push
es
aaa
mov
movs
pop
out
loopne
mov
adc
sub
pushf
jno
ror
or
sub
and
jmp
mov
mov
mov
in
xchg
les
xlat
sub
imul
leave
sbb
bound
and
jae
fs
and
imul
and
or
test
dec
dec
pushf
dec
and
xor
loopne
add
or
movs
scas
and
xlat
xchg
lea
mov
mov
outs
arpl
xchg
(bad)
pop
xor
in
out
rcl
add
and
xlat
jae
popa
dec
das
ins
dec
movs
adc
fdiv
lds
shl
xlat
not
imul
loop
and
fistp
mov
movs
int3
mov
xor
neg
sub
test
addr16
xor
adc
inc
(bad)
cli
enter
das
frstor
fwait
in
sbb
imul
and
scas
sbb
mov
dec
push
sahf
mov
mov
cmp
adc
jnp
imul
dec
pop
stos
dec
jae
cmps
es
arpl
test
aas
fxch
inc
cli
rol
xchg
sbb
retf
fldcw
cmp
inc
mov
mov
jl
sbb
sahf
enter
mov
mov
adc
call
lds
imul
mov
test
shl
add
mov
fld
test
inc
add
out
and
pop
ja
jle
push
fs
jmp
mov
sbb
sbb
scas
clc
shr
xor
push
test
retf
sbb
inc
inc
add
in
jae
je
jae
in
push
test
sbb
and
and
xlat
add
icebp
xor
sbb
sbb
into
push
push
jne
adc
aad
push
sbb
adc
lea
or
inc
jns
or
mov
adc
shr
jns
mov
sub
cdq
mov
adc
(bad)
mov
ss
or
mov
or
fistp
loope
mov
push
mov
mov
add
cmc
shr
or
test
cwde
cmp
movs
push
dec
out
into
scas
repz
mov
xor
cmp
cmc
inc
je
mov
in
scas
stos
mov
ss
hlt
jne
(bad)
sub
jge
popf
outs
xor
add
in
fidivr
dec
loopne
mov
outs
rcr
add
mov
and
dec
push
and
ins
lods
push
popf
mov
popf
adc
int
jecxz
dec
adc
push
fdivr
dec
ja
jp
daa
dec
xchg
outs
add
sbb
test
adc
aam
test
mov
ss
les
or
inc
cmp
addr16
enter
fild
dec
cmps
out
push
mov
bound
stos
jg
dec
pop
xchg
mov
movs
mov
(bad)
ret
(bad)
das
imul
and
or
enter
push
out
or
popf
xlat
not
xchg
mov
sub
xchg
stc
jge
pop
aaa
jp
mov
dec
or
stc
test
xchg
lods
cmps
out
lods
xor
stos
pushf
jmp
push
cmp
icebp
mov
jae
aam
(bad)
das
retf
lea
adc
loope
pop
pop
cld
xlat
jmp
push
cdq
xchg
je
push
push
xchg
popa
loope
jg
jns
retf
mov
pop
mov
or
sbb
push
pop
ja
pop
leave
mov
adc
loopne
stos
xchg
jmp
std
pop
dec
sbb
lahf
(bad)
retf
(bad)
int3
mov
xchg
loop
xor
test
jo
mov
aaa
dec
jo
sbb
jl
add
pop
ds
aas
je
sub
cmp
(bad)
gs
les
call
dec
fisubr
xchg
push
xor
aam
(bad)
fs
push
retf
call
pop
dec
adc
sbb
jbe
daa
cmps
push
mov
test
xchg
xor
dec
xor
mov
adc
or
add
cmps
rcl
mov
dec
fwait
das
data16
pop
push
test
pop
or
dec
mov
mov
cmp
popf
push
out
add
gs
cli
mov
bound
cmp
mov
add
clc
mov
sbb
mov
push
push
repnz
rol
dec
dec
or
mov
shr
jp
mov
icebp
sbb
or
cmc
mov
dec
push
outs
add
or
stc
in
stos
dec
in
sub
retf
test
add
cmp
pop
js
mov
add
sbb
add
fs
cmp
pop
aaa
scas
ins
(bad)
push
adc
mov
xchg
repz
cmps
and
xor
in
inc
nop
xor
pop
adc
add
adc
sti
lea
loopne
xor
loopne
dec
adc
cmps
jp
xchg
jbe
ror
shl
add
sbb
cmp
adc
repz
mov
popf
in
loopne
into
aas
mov
xor
imul
xchg
cmc
retf
mov
inc
loopne
int
pop
mov
sub
popf
lock
call
cld
mul
pop
mov
sbb
mov
sub
sbb
push
int
cmp
jbe
call
jecxz
jns
mov
mov
fdivr
inc
sbb
sub
aam
jge
hlt
inc
cmc
movs
sbb
arpl
lods
lea
jmp
push
jae
in
mov
jb
mov
dec
fcom
xlat
fild
jb
imul
pop
std
add
clc
xor
mov
xor
mov
mov
jg
cli
movs
cwde
jmp
jno
ins
pop
jb
addr16
movs
sub
fadd
ja
fldcw
sub
fldpi
pusha
enter
(bad)
pop
lods
ss
(bad)
xor
fdiv
sub
pop
adc
cmp
jnp
movs
scas
in
cmps
div
mov
sahf
int
mov
sub
not
jb
cmp
movs
mov
add
mov
stos
aas
outs
mov
pop
push
outs
and
lods
int3
inc
je
pop
pop
js
add
dec
xchg
aam
jb
inc
retf
pop
sub
and
pop
das
add
xchg
pop
mov
ins
mov
and
sahf
adc
jmp
jae
jbe
ins
mov
cwde
in
into
jo
nop
dec
add
shr
movs
push
mov
xor
jg
mov
xlat
cmps
fistp
add
in
je
das
push
dec
or
sub
into
mov
lock
jecxz
xor
stc
nop
call
repz
lods
jbe
cdq
call
pop
pop
popf
div
lahf
mov
xchg
cwde
cmp
mov
test
xor
les
mov
sbb
iret
test
jb
add
(bad)
in
add
es
(bad)
sub
cs
ja
call
(bad)
int3
lahf
out
ja
fnsave
pop
pushf
adc
pop
repz
or
out
out
sub
push
mov
or
scas
xchg
imul
adc
xabort
out
sub
jge
sub
sub
fidiv
scas
mov
inc
arpl
pop
dec
xor
call
pushf
mov
or
les
pop
cli
fcom
jnp
dec
push
xor
dec
xor
or
mov
xlat
in
pop
sub
adc
or
and
lock
call
rcr
sti
(bad)
sub
add
(bad)
hlt
add
add
jp
ds
mov
and
fldenv
ja
inc
cwde
fwait
outs
(bad)
ds
psrlw
xchg
mov
test
sbb
mov
ins
mov
dec
fsub
jp
jge
inc
mov
icebp
sbb
ins
mov
mov
jnp
push
cmp
pop
jno
mov
sbb
and
stos
fs
mov
cs
mov
or
mov
lods
mov
ret
sahf
or
mov
fist
jo
xor
jns
mov
jge
xlat
bound
pusha
cmp
int3
fnstcw
and
ficomp
movs
nop
imul
call
mov
(bad)
ds
movs
mov
pop
push
lock
mov
iret
push
mov
cli
jmp
in
mov
stc
daa
or
mov
dec
(bad)
hlt
xor
mov
inc
mov
dec
movs
xchg
adc
mov
rol
call
cmps
pop
das
jb
retf
es
fadd
xchg
fdivr
or
aaa
sti
mov
loope
scas
stos
pop
cmp
les
jl
ins
test
or
(bad)
jo
std
gs
push
arpl
pop
or
push
call
xchg
push
aas
movs
dec
pop
inc
and
movs
mov
jecxz
pop
test
or
hlt
inc
cmp
sahf
cmp
or
xchg
jb
xchg
lea
and
les
mov
mov
cs
daa
fisub
inc
adc
sbb
sub
mov
leave
mov
mov
mov
test
pushf
mov
xor
mov
inc
call
fwait
inc
cmps
mov
mov
push
inc
xor
pusha
fisttp
ins
cmp
or
xchg
call
and
rol
hlt
sub
add
pop
into
stos
dec
adc
lds
sub
nop
sub
cmps
adc
fsub
add
sub
dec
or
push
ret
aas
mov
xor
mov
cmps
movs
pop
mov
test
(bad)
mov
jmp
jne
cmp
sub
or
push
hlt
mov
xchg
arpl
pusha
mov
(bad)
xchg
(bad)
retf
aas
in
fs
and
in
es
sbb
(bad)
adc
stc
adc
cmc
pop
fnsave
mov
into
xchg
std
lea
(bad)
mov
mov
into
sar
retf
xchg
jl
pop
mov
pop
push
xchg
push
aas
sbb
xchg
and
push
cmp
dec
xor
aaa
mov
mov
in
(bad)
(bad)
mov
fwait
xchg
adc
push
hlt
pushf
aaa
cmp
sub
adc
cmp
mov
ins
mov
mov
xor
add
sti
fpatan
adc
mov
sub
sub
test
sbb
add
sub
lea
rcl
retf
popa
shr
jbe
fld
or
cld
call
mov
rcr
xor
mov
push
adc
ins
mov
sbb
imul
inc
mov
adc
clc
(bad)
dec
pop
aad
int
pop
jo
in
cmp
xor
rcr
push
or
xchg
or
pop
stos
test
mov
cmc
stos
pusha
(bad)
sahf
mov
pop
std
dec
or
sub
or
xor
fwait
mov
xchg
dec
jns
imul
push
add
cmp
cmp
sbb
add
inc
enter
jbe
cmp
mov
scas
into
sbb
push
jo
cld
inc
and
clc
cmp
retf
(bad)
sbb
ins
pop
lds
push
add
dec
cmps
sbb
cmp
popa
jno
out
mov
push
mov
sub
out
adc
leave
sub
lods
call
call
(bad)
ins
int
ret
scas
shl
pop
pop
aaa
loope
or
imul
sahf
(bad)
ja
push
cmp
(bad)
and
pop
xor
add
imul
xsavec
or
push
sbb
add
ins
jmp
les
sar
mov
in
rol
xchg
test
arpl
shl
test
xor
cmps
sbb
jbe
pop
cmp
fs
mov
and
adc
mov
jmp
dec
fidivr
jb
mov
cmp
sub
call
(bad)
and
rcl
(bad)
shl
std
jae
test
inc
pop
pop
sub
mov
addr16
and
push
xchg
inc
sub
jle
cmps
and
adc
popa
es
push
fnstsw
push
jl
and
mov
stos
(bad)
aam
shl
jo
pop
(bad)
bound
cmps
std
int
rcr
cdq
(bad)
popf
sub
(bad)
lock
retf
sub
and
in
mov
xor
in
out
sub
(bad)
call
ss
inc
xlat
inc
pop
pop
sub
xor
ret
test
sbb
test
sub
add
loop
mov
ins
jl
addr16
call
jle
popf
xlat
pop
cmp
jl
mov
test
fwait
mov
(bad)
and
and
in
(bad)
xchg
(bad)
clc
jmp
add
aad
shr
push
sti
jp
sbb
in
fild
xchg
cli
mov
push
les
or
icebp
mov
cmps
daa
hlt
pop
in
mov
jns
jb
es
loopne
sbb
mov
xchg
push
mov
arpl
jnp
adc
les
mov
sbb
call
pop
es
inc
cli
cmp
sub
mov
stos
ins
fwait
prefetchw
je
retf
mov
inc
push
xchg
inc
dec
push
jg
sbb
iret
adc
mov
inc
cdq
mov
pop
cmp
(bad)
(bad)
addr16
jmp
sub
stos
fst
push
cld
fld
and
addr16
int
hlt
sub
and
jo
or
jle
mov
jge
push
hlt
(bad)
retf
mov
neg
mov
adc
sbb
lahf
js
pop
add
and
movs
mov
aaa
xchg
push
popa
and
(bad)
mul
js
sub
push
mov
mov
mov
adc
and
fbld
pushf
mov
shl
fs
scas
sub
cmps
hlt
xor
sar
sti
xor
or
in
leave
mov
push
sub
div
inc
lds
loope
dec
jg
xchg
ret
(bad)
movs
cmp
jbe
call
pop
adc
xor
pop
cli
mov
bound
mov
fdivr
neg
mov
push
fwait
loope
jb
movq
enter
jmp
xor
xor
sub
in
sti
adc
cli
add
push
adc
push
movs
push
xor
lahf
(bad)
push
sub
mov
stos
mov
mov
popf
mov
adc
jo
add
call
mov
or
mov
cmp
lods
xchg
test
cwde
adc
and
mov
je
jl
imul
and
xchg
sar
mov
sub
cld
aad
pusha
and
sahf
stos
out
(bad)
push
iret
or
gs
adc
xchg
lods
push
jns
inc
mov
dec
dec
add
icebp
sub
retf
xor
add
jle
adc
xchg
fsub
sbb
pop
mov
call
pushf
lahf
mov
imul
gs
pop
push
mov
pushf
pop
fiadd
push
xchg
cli
mov
rcl
push
add
and
movs
scas
aam
mov
test
add
or
aam
nop
popf
stos
sub
fdivr
push
jo
and
shl
and
mov
repz
jne
js
gs
or
adc
pusha
jg
cmp
sahf
jmp
call
jae
cwde
push
add
push
cld
dec
cmp
out
scas
add
loop
jae
sar
fldenv
in
popa
popf
or
dec
popa
imul
add
pop
or
out
call
call
mov
in
xchg
adc
cmp
cmp
and
xchg
std
dec
inc
jp
jg
jecxz
xchg
add
ret
bound
jnp
xlat
cld
ja
mov
xchg
jl
(bad)
lock
jmp
mov
xchg
ficomp
pop
add
std
mov
sbb
jecxz
leave
shl
repnz
xor
or
sub
aaa
xchg
icebp
sbb
mul
sbb
aaa
leave
xchg
push
jns
jge
in
adc
lock
pop
cwde
outs
repz
mov
mov
and
jl
je
test
fadd
and
arpl
fdivrp
aam
ret
rcr
mov
repz
inc
mov
in
push
out
push
stos
push
add
mov
rcr
add
or
jecxz
push
mov
dec
xlat
and
cmp
push
lds
retf
rcr
daa
and
daa
mov
xchg
in
call
std
pop
sti
or
cmc
out
mov
cmp
ret
repz
mov
inc
mov
mov
pop
popa
mov
jnp
ja
mov
sbb
das
fisub
inc
push
lock
or
xor
call
push
leave
gs
xchg
or
sbb
inc
or
xor
sbb
inc
shl
addr16
or
and
xchg
xchg
and
jnp
and
test
adc
outs
ins
push
mov
sub
jp
xor
dec
aam
jmp
(bad)
test
cmp
sub
shl
out
adc
mov
in
push
ss
popa
sub
cmp
stc
cwde
dec
mov
dec
push
lea
xor
pusha
fnsave
(bad)
and
lock
push
adc
add
pop
nop
mov
sbb
inc
xor
int
adc
loope
xlat
xor
inc
jecxz
call
lock
movs
push
sub
xchg
lods
leave
sahf
aas
adc
leave
sub
fmulp
pop
mov
dec
mov
sti
mov
inc
aam
cmps
mov
outs
adc
xor
jecxz
retf
aas
dec
das
cmp
(bad)
lods
call
(bad)
das
lock
adc
fnstsw
xor
pushf
pop
aad
popf
pop
push
(bad)
jp
dec
iret
cdq
cwde
or
mov
enter
jne
and
adc
dec
mov
int
push
shld
fst
aam
sbb
mov
sbb
repnz
and
push
daa
push
sbb
cmp
nop
mov
out
movs
(bad)
sbb
mov
cmp
push
sub
ins
call
pusha
and
in
call
stos
scas
test
arpl
repnz
jl
and
sbb
stc
pop
repz
pop
fs
pop
cmp
in
lahf
out
pop
add
hlt
jmp
mov
(bad)
dec
pop
loop
in
mov
cmp
cmp
sub
in
div
popf
(bad)
movs
jmp
dec
xor
adc
mov
call
lods
sbb
push
scas
and
mov
stos
push
lea
arpl
lock
aad
nop
add
add
jbe
push
mov
into
sub
xlat
dec
fs
pushf
cld
jbe
div
mov
mov
xchg
jno
adc
jp
sbb
or
push
inc
xchg
sub
dec
bound
fdiv
jne
and
jo
mov
inc
inc
and
dec
iret
(bad)
mov
mov
dec
repz
icebp
pop
jnp
into
cmp
add
inc
out
pop
xchg
call
ja
aaa
pusha
adc
add
and
dec
(bad)
dec
imul
fs
test
xchg
imul
or
pop
add
pop
mov
mov
aad
mov
pop
sub
stos
packuswb
adc
arpl
std
ficomp
and
cmps
pushf
cmp
hlt
ins
clc
sub
adc
adc
mov
ins
js
push
(bad)
mov
bound
ja
rcl
ror
ret
jmp
cli
cli
mov
lock
imul
cdq
js
loopne
pusha
jo
test
xchg
cmp
fldcw
popa
fwait
add
sub
add
mov
ret
cwde
jae
mov
dec
lds
dec
pop
jmp
fwait
inc
movsx
dec
and
and
(bad)
in
xchg
mov
sub
rcl
add
jns
pop
add
sub
dec
imul
sahf
add
jmp
cmp
icebp
push
out
cmp
cdq
fcomp
mov
cli
cmp
push
pop
sahf
retf
sub
mov
arpl
imul
push
leavew
xor
movs
call
and
mov
rep
inc
mov
push
rcl
xchg
ret
ret
push
icebp
aam
fs
cmp
aaa
xchg
lods
or
and
out
jp
mov
dec
or
inc
sbb
test
xor
mov
dec
ret
pop
bnd
lahf
cli
inc
popa
aas
out
aad
iret
(bad)
popa
or
and
loop
fs
xchg
xchg
mov
lahf
int3
and
and
pusha
ret
mov
pop
test
mov
pusha
dec
rcl
sub
lea
inc
lahf
shl
push
aad
mov
lea
or
scas
test
lea
iret
repnz
mov
dec
push
mov
(bad)
sub
das
retf
push
test
cmp
fild
cli
jge
xor
inc
mov
movs
jno
mov
jns
pop
mov
jbe
sti
addr16
js
mov
xor
cmp
add
add
data16
mov
cmps
leave
mov
loopne
cdq
mov
cld
inc
pusha
and
movs
mov
jb
(bad)
sar
dec
push
mov
mov
pop
ins
and
out
dec
stos
sbb
and
retf
push
nop
push
mov
iret
pop
repz
jns
fdivr
pop
xchg
adc
loop
push
push
imul
hlt
imul
loope
or
jmp
repz
icebp
push
js
adc
push
dec
inc
ins
test
pop
push
dec
inc
in
arpl
(bad)
dec
(bad)
jl
popa
or
iret
jns
loop
das
pop
repnz
arpl
js
outs
imul
es
out
je
lds
data16
sbb
inc
lods
jl
add
aaa
cld
cli
lods
xor
lds
adc
lods
mov
push
inc
call
jl
psubsb
pop
inc
push
xor
imul
dec
aas
mov
jns
pop
pop
and
mov
test
sbb
mov
cmp
push
das
rcl
sbb
push
ror
sub
shl
mov
popa
sub
push
sahf
sub
xchg
mov
pop
mov
mov
int
les
pop
les
cwde
mov
jb
pusha
sbb
jo
mov
cmc
scas
out
rcl
mov
sbb
pop
les
add
cmp
add
gs
mov
mov
iret
or
fnstenv
fwait
movs
rcl
popf
jl
loopne
fstp
inc
cmp
fsubr
aam
push
(bad)
lods
sub
scas
gs
stos
xchg
jno
cmp
inc
(bad)
and
movs
xchg
nop
jecxz
jg
pop
int3
pusha
xchg
and
shl
inc
ds
xchg
xchg
pop
cmp
push
and
mov
push
sbb
sub
pushf
cmc
inc
dec
adc
scas
xchg
ins
or
add
and
(bad)
and
pop
mov
iret
mov
mov
push
push
imul
stc
adc
inc
out
mov
mov
fs
aam
mov
loope
(bad)
sar
cli
inc
mov
outs
xor
add
jmp
fdiv
push
aad
pop
pop
push
arpl
xchg
mov
mov
jns
xchg
mov
jne
out
mov
mov
mov
xchg
jnp
sbb
mov
inc
push
push
out
mov
xchg
fild
(bad)
retf
and
add
cmp
sbb
sbb
arpl
push
mov
mov
or
pusha
dec
xchg
jecxz
cs
lock
popa
shr
loopne
mov
dec
push
xchg
mov
stos
clc
lods
pop
and
xchg
fidiv
fsub
mov
jno
jbe
sub
dec
xchg
daa
aad
arpl
cmc
aam
jge
rol
inc
mov
in
arpl
cmps
gs
mov
or
in
je
push
cmps
stos
sbb
and
test
out
inc
bound
shl
lods
xchg
jo
fdivr
call
dec
cmp
adc
fist
xor
test
or
std
jle
inc
xchg
leave
add
sbb
sti
and
out
or
test
stos
into
stos
fsub
push
out
or
dec
push
sahf
mov
xor
daa
lds
mov
out
sbb
pop
adc
lock
jns
mov
(bad)
(bad)
jmp
cmp
lock
mov
ret
bound
or
inc
jp
push
nop
daa
data16
and
cmps
cmp
sbb
xor
pop
mov
addr16
sbb
dec
xor
jp
inc
ss
push
xor
cwde
aad
test
fucomi
ret
pop
aas
icebp
lds
jl
test
inc
scas
cwde
fmul
xor
mov
mov
mov
mov
and
mov
dec
cmp
fcmovbe
xchg
loop
or
add
xchg
mov
cmp
call
adc
push
fdiv
add
sub
jno
daa
ret
cmp
mov
popf
pop
jbe
mov
repz
mov
(bad)
outs
mov
ja
mov
inc
or
retfw
sub
loope
sti
cmp
add
jne
(bad)
or
pushf
(bad)
push
sbb
fisubr
jle
push
ret
and
inc
inc
push
fisttp
sbb
sub
push
rcl
push
cmp
jl
mov
sbb
xchg
in
push
ja
and
in
shl
add
jb
sti
pop
and
fist
dec
dec
or
dec
mov
lock
xchg
mov
in
mov
xor
(bad)
popf
sub
mov
add
mov
push
cwde
mov
sbb
cs
jns
push
(bad)
jp
pop
sub
pop
xchg
dec
adc
enter
fistp
je
retf
fidivr
(bad)
adc
mov
mov
pop
cmp
push
adc
adc
dec
pop
test
xchg
imul
icebp
in
add
loope
test
fisttp
adc
xor
jo
shr
int3
loop
jg
xchg
adc
popa
ja
je
add
clc
jae
lds
bound
push
adc
sub
dec
xchg
retf
test
ror
outs
into
pushf
sti
dec
mov
xchg
icebp
xor
lahf
pop
(bad)
mov
out
dec
(bad)
hlt
mov
jns
cmp
(bad)
dec
xor
add
sub
inc
into
mov
add
outs
mov
jo
inc
jae
or
mov
add
sbb
mov
pop
sbb
push
xor
add
xchg
sub
sub
call
inc
jp
jmp
movs
rcl
adc
sub
test
mov
sbb
xchg
fcom
fs
xlat
jo
in
mov
adc
aas
js
iret
jle
and
xchg
js
ja
retf
fsubrp
call
push
fmul
pop
lock
and
daa
lds
adc
fcmove
in
dec
dec
jno
jg
jp
retf
or
inc
data16
test
xlat
fwait
pop
adc
inc
mov
in
lods
and
xor
xor
fwait
cdq
sbb
jno
xor
jne
bound
adc
mov
int
sub
ins
cmp
xor
arpl
lock
xor
inc
sar
pop
sbb
xchg
push
repz
dec
sar
dec
inc
xchg
das
out
add
aad
imul
jge
(bad)
mov
(bad)
sbb
pop
mov
icebp
test
add
cmp
loope
pop
imul
int3
sbb
into
mov
xchg
icebp
or
mov
mov
xlat
add
xor
add
dec
fidiv
shl
adc
or
ss
inc
lds
test
ins
xchg
inc
ss
out
inc
jmp
call
test
add
mov
out
mov
adc
out
pushf
push
mov
imul
adc
fxch
daa
cld
rcr
ss
outs
cmp
movs
aad
les
cs
push
jno
inc
ja
dec
dec
xchg
mov
xor
rol
stos
mov
lea
or
lds
push
or
pop
test
and
mov
shr
hlt
pop
xchg
(bad)
dec
inc
scas
pop
pop
pop
ds
shr
xlat
sbb
add
call
ret
movs
mov
mov
pusha
cmps
push
int
cmp
das
in
cmc
cmp
call
jmp
add
push
push
and
ret
stc
sbb
pusha
aaa
jmp
pushf
stc
loope
js
(bad)
jno
mov
neg
daa
push
scas
sbb
cwde
call
jecxz
lods
sbb
dec
movs
xchg
jmp
std
jl
pop
mov
sar
ret
or
push
ret
retf
pop
js
(bad)
in
adc
jae
push
and
push
mov
pusha
mov
iret
(bad)
aas
mov
jle
cmps
fst
retf
pop
scas
inc
(bad)
push
test
scas
inc
(bad)
push
sub
(bad)
sub
sub
and
outs
stos
aad
into
in
dec
add
out
repz
mov
call
out
dec
dec
gs
xor
repnz
pop
dec
mov
enter
test
rcr
repnz
dec
dec
add
add
adc
bound
div
sbb
(bad)
and
or
shl
mov
sbb
aas
rcr
push
in
sti
pop
lods
cwde
ficomp
into
in
cmps
loop
pop
push
xchg
hlt
sbb
mov
out
pop
movs
inc
ins
add
in
jne
dec
test
push
sbb
mov
xchg
jno
stc
push
ror
mov
mov
mov
es
mov
pop
pop
fwait
mov
cwde
out
nop
xchg
sub
cmp
mov
xchg
push
push
mov
cld
fsubr
or
aad
test
xor
inc
add
fiadd
pop
mov
sub
retf
addr16
add
shr
into
ret
jo
ins
push
and
std
push
mov
punpckldq
mov
sub
test
or
mov
into
cli
(bad)
xor
sub
retfw
out
ds
sub
add
arpl
rcl
cmp
test
(bad)
loop
(bad)
jmp
rcl
cmp
xchg
add
xor
or
xor
xor
loop
in
jl
fild
dec
pop
jmp
cmp
and
stos
mov
retf
inc
jns
loope
and
or
push
or
push
or
add
jae
loop
sub
stos
mov
imul
push
mov
jbe
mov
movs
mov
addr16
aam
sbb
inc
iret
cmp
xchg
fdivr
sbb
or
dec
out
jle
and
dec
xchg
xor
int
test
mov
pop
ins
pop
cmp
nop
or
mov
xchg
ret
mov
and
out
xchg
sub
test
add
jnp
jge
adc
fisub
mov
std
out
rol
sti
(bad)
repnz
mov
neg
test
aaa
mov
test
cli
xchg
mov
fwait
mov
jbe
xchg
adc
stos
es
shr
jmp
out
mov
daa
retf
sub
jo
or
push
sbb
aad
lds
sahf
mov
mov
jae
test
fadd
es
ror
(bad)
sub
xlat
add
cmc
mov
sub
ins
jecxz
or
sbb
gs
into
leave
lahf
test
fnstcw
lock
mov
dec
cmp
jle
push
pop
repnz
push
je
sub
or
js
sti
stos
mov
mov
pop
retf
mov
dec
mov
pop
jmp
inc
xchg
cmp
adc
aaa
mov
dec
lods
aad
outs
jb
scas
neg
jo
xchg
inc
in
mov
pop
push
in
jbe
ret
xor
push
lea
jmp
jge
mov
cli
cmp
mov
call
ins
jg
push
nop
dec
add
mov
repnz
lds
dec
sub
sub
inc
ds
sbb
fprem
jnp
mov
into
sub
outs
cli
add
hlt
in
pop
mov
push
bound
sbb
(bad)
adc
jo
mov
arpl
call
pop
iret
adc
fisubr
ret
inc
in
mov
push
mov
test
jmp
scas
rcl
neg
jle
cs
pop
das
add
sti
jg
pop
mov
aam
pusha
push
cmp
dec
data16
lods
ds
(bad)
cdq
dec
cmp
mov
out
jp
aaa
push
(bad)
mov
jne
test
sbb
mov
test
pop
and
lds
div
add
cli
dec
sub
aad
stc
pop
cmp
fdiv
aam
ja
outs
call
sub
hlt
push
adc
mov
and
pop
mov
jmp
pop
cmps
push
jo
cmps
xor
dec
fnstcw
pop
div
retf
not
jl
push
dec
inc
xor
out
outs
fdivrp
mov
cmp
and
sub
mov
pop
dec
data16
ss
ins
dec
inc
hlt
mov
mov
out
(bad)
and
lock
cdq
scas
fisttp
fucomp
pusha
mov
pop
aaa
mov
(bad)
out
fadd
scas
dec
xchg
test
rcr
scas
lods
cmp
sbb
sub
cmp
adc
dec
pop
call
mov
jne
jmp
jne
and
jb
adc
mov
(bad)
imul
mov
cld
push
ins
rcl
data16
pop
icebp
push
es
je
mov
sub
xchg
push
sti
cmp
sbb
test
dec
xor
cmp
jno
cmp
loopne
inc
icebp
push
mov
adc
sub
pop
adc
sub
cmp
pop
shr
xor
jno
xchg
pop
xchg
popa
hlt
call
iret
jne
mov
xchg
pop
jne
xchg
addr16
inc
mov
nop
fnstcw
retf
dec
sub
es
jne
cmp
pop
adc
cs
fsubr
sbb
xchg
sub
ds
mov
(bad)
fsub
es
jns
pop
inc
hlt
aaa
sahf
jmp
push
adc
jmp
cld
jp
cmc
push
(bad)
dec
push
iret
test
ss
inc
retf
test
into
jb
fwait
sub
sub
out
mov
int
dec
retf
ds
div
rol
retf
pop
mov
jnp
fst
enter
stos
fld
(bad)
or
fwait
out
xor
pop
test
fisttp
movs
fs
daa
xor
js
out
lahf
jns
xchg
pop
out
pop
mov
into
mov
xchg
mov
push
inc
lods
enter
sbb
cdq
sub
lock
xor
into
popf
(bad)
inc
cli
arpl
xor
out
sbb
sti
pop
inc
imul
cmp
inc
fwait
pop
test
adc
jg
fdivr
call
sbb
in
push
pop
pop
jg
push
push
lahf
stos
ret
lahf
ja
mov
add
push
enter
add
xlat
sub
ret
test
icebp
cmp
push
addr16
push
fxch
nop
lods
mov
sbb
mov
cmc
sub
xchg
sbb
adc
or
mov
cmp
push
ret
mov
adc
mov
test
sub
jo
es
int3
mov
and
(bad)
test
add
imul
ffreep
shl
test
mov
or
leave
ins
mov
movaps
or
mov
pop
cmp
fistp
push
mov
stos
(bad)
sti
in
rcr
xor
jge
jno
mov
in
dec
xchg
aad
call
adc
xchg
loop
add
sub
ficom
xchg
add
pusha
pop
jmp
adc
(bad)
xor
call
inc
and
sbb
cli
or
popa
ja
cmp
jo
xor
inc
(bad)
std
mov
jbe
ror
je
test
xchg
xchg
add
adc
in
dec
mov
xor
retf
addr16
jb
test
sbb
icebp
test
push
sub
pop
loope
lock
dec
arpl
js
inc
sub
leave
sbb
retf
adc
jo
xor
push
mov
mov
int3
mov
enter
cwde
(bad)
or
out
mov
movs
ins
out
(bad)
jmp
mov
mov
nop
pop
jle
imul
sbb
sahf
cmps
dec
inc
push
ins
fisttp
sbb
and
arpl
in
xchg
or
leave
mov
nop
rcr
sub
fidivr
jl
or
fisub
icebp
movs
rol
mov
sbb
jp
mov
and
mov
arpl
sbb
cmp
in
fs
mov
(bad)
mov
call
cdq
cli
push
cmp
lods
and
sub
test
imul
mov
and
add
mov
mov
add
mov
out
mov
add
cs
xchg
and
gs
mov
inc
daa
mov
sub
int3
dec
dec
sbb
retf
xchg
xchg
fstp
mov
jecxz
(bad)
arpl
enter
mov
push
enter
mov
test
call
xchg
mov
fst
ds
mov
sahf
jnp
and
aas
add
ds
xchg
(bad)
out
ror
xor
mov
cmps
fs
sar
xchg
sbb
cmp
jmp
or
sub
mov
out
movs
push
cmp
xchg
fbstp
in
xor
cmp
xchg
ret
daa
(bad)
fs
xchg
mov
stos
dec
rol
push
fidiv
lock
add
mov
daa
popa
mov
push
rcr
xchg
dec
jne
fistp
mov
mov
mov
add
mov
cmp
clc
jbe
sbb
jae
in
out
in
and
hlt
push
scas
jnp
jmp
mov
test
aas
inc
add
sbb
mov
cmps
fidivr
ret
xchg
lods
pop
jge
(bad)
pop
in
cld
(bad)
adc
test
popf
inc
push
nop
in
loop
lock
je
fldcw
gs
sub
push
(bad)
mov
cmp
add
dec
pusha
inc
in
pop
sbb
call
outs
add
(bad)
cwde
(bad)
(bad)
adc
icebp
popa
cmc
popf
out
cmp
test
cmps
sbb
repz
dec
aaa
jp
rol
inc
xchg
add
aas
cmp
push
push
pop
sub
(bad)
xor
jno
pop
std
rol
inc
jae
outs
xor
add
or
int
jbe
push
jb
mov
adc
inc
jecxz
or
in
xor
dec
or
cmp
cmps
xchg
pop
dec
ins
lea
(bad)
int3
scas
xor
mov
dec
es
icebp
xchg
mov
cmp
jb
or
rol
push
mov
ss
cmp
movs
or
inc
mov
call
dec
retf
ret
mov
cmp
pop
ret
movs
mov
jnp
mov
and
xlat
dec
fs
out
test
scas
popf
dec
call
and
aaa
push
add
jg
sbb
test
mov
rcr
int
pop
push
arpl
imul
or
pop
sbb
bound
call
loop
jge
push
(bad)
jb
push
and
imul
mov
push
dec
test
js
mov
pop
lds
int
push
pop
push
inc
out
mov
in
sbb
aas
leave
test
arpl
sbb
je
gs
jne
sbb
jnp
imul
dec
sbb
mov
xchg
sbb
icebp
pop
cli
add
hlt
push
mov
jge
ret
fdivr
mov
es
xchg
adc
xor
aaa
adc
rcl
repnz
pop
adc
aad
in
pop
fsubr
imul
fisubr
lea
mov
inc
fdivr
scas
fs
fcomi
jb
xchg
xchg
cmp
sahf
mov
arpl
lea
loope
xchg
mov
xor
fsubr
(bad)
lds
ins
out
mov
icebp
sbb
mov
adc
jae
test
pop
xor
mov
xchg
cli
or
data16
outs
or
dec
xchg
mov
adc
adc
in
dec
loop
inc
fs
fbld
stos
neg
xchg
aam
sub
fstp
retf
mov
in
aaa
stc
repnz
add
xchg
movs
xor
(bad)
cmp
sub
mov
push
aad
pop
add
jae
push
out
(bad)
iret
ins
lods
jmp
mov
cmp
push
mov
gs
stos
jmp
jmp
scas
cmc
jnp
cmc
mov
mov
or
shr
adc
sub
sbb
jnp
popa
xchg
adc
push
les
pop
lods
mov
lea
movs
xchg
sar
lods
push
mov
in
push
retf
push
test
neg
mov
int
add
(bad)
jl
or
icebp
fwait
mov
or
icebp
out
xchg
jg
(bad)
mov
mov
mov
xchg
clc
imul
scas
std
enter
mov
and
out
popa
inc
push
jmp
sub
push
dec
xchg
daa
pop
or
cmps
or
(bad)
nop
imul
xor
test
mov
jo
pop
int
out
sbb
adc
in
inc
dec
xlat
fucomi
jns
push
sbb
(bad)
push
mov
lods
and
shr
pop
pop
pushf
loop
out
cmp
shr
jl
call
mov
test
or
icebp
in
pop
cld
push
cs
and
cmp
rcr
sub
adc
test
xchg
mov
pop
xchg
add
or
nop
rep
xlat
in
add
add
pop
retf
in
jp
jl
dec
cld
div
xchg
jne
aam
xchg
pop
jecxz
adc
or
std
retf
and
pop
gs
or
inc
sub
ins
mov
inc
sti
arpl
ds
jnp
inc
(bad)
aam
retf
jno
in
or
xchg
ds
aam
xchg
add
adc
mov
and
fwait
inc
add
push
stos
(bad)
jno
(bad)
mov
cmp
jg
call
mov
jo
enter
out
out
push
xor
xchg
jg
add
xor
and
mov
aam
sub
fsub
xchg
push
int
arpl
xor
mov
outs
ss
push
and
sbb
call
nop
das
xchg
jg
cmp
stos
jg
mov
icebp
cdq
loop
dec
nop
and
jmp
jmp
add
shl
adc
cmp
loopne
in
mov
scas
mov
and
repnz
add
push
or
jnp
lds
mov
outs
push
cwde
icebp
ins
mov
jmp
xchg
sti
fbstp
icebp
or
xor
dec
mov
in
mov
ror
push
mov
add
lahf
fwait
mov
call
out
hlt
inc
outs
jle
mov
retf
mov
mov
pop
add
jg
std
or
neg
clc
pop
mov
dec
pop
fild
xchg
mov
test
add
adc
cmps
leave
mov
pop
pop
push
cwde
in
mov
pop
fistp
ss
clc
mov
cli
jl
push
pop
mov
fidivr
pop
cs
adc
movs
xor
test
add
mov
add
outs
mov
movs
pop
es
clc
and
in
push
jbe
cmp
inc
int3
pop
inc
mov
cvttps2pi
push
(bad)
aad
das
mov
int
loopne
sub
repz
jno
jns
xor
inc
mov
test
mov
jb
lods
mov
(bad)
xor
cli
cmp
stc
jmp
mul
ins
in
push
mov
cmp
inc
jmp
dec
sbb
aam
push
push
cld
or
mov
xchg
inc
cwde
mov
ret
add
pop
jnp
js
xchg
and
xchg
cdq
xlat
fs
jge
into
mov
mov
xor
pop
test
and
cld
jg
repnz
fnstsw
xor
hlt
int
sub
lahf
pusha
push
push
pop
(bad)
das
jb
gs
cmps
xchg
push
das
inc
or
nop
jae
mov
mov
mov
lds
or
test
xchg
stos
aam
fadd
mov
clc
sub
gs
sbb
(bad)
enter
jb
dec
or
jge
xor
pop
pop
mov
jmp
xor
pop
mov
and
in
or
fs
mov
xchg
push
(bad)
(bad)
jns
xchg
ins
jmp
push
sbb
pop
test
cmp
rcr
lahf
into
adc
iret
sbb
ret
ds
je
dec
jmp
mov
xchg
xchg
jne
or
mov
call
lea
and
jge
aas
in
ds
mov
or
push
xor
fsub
sub
loope
jns
das
movs
(bad)
fist
fcom
daa
and
imul
retf
fidiv
pop
push
cmp
es
and
jge
jmp
push
rcr
sbb
ins
or
fnsave
adc
test
or
and
jl
pop
push
push
pop
adc
cwde
sbb
in
les
popa
pusha
stos
(bad)
push
ret
jl
cli
dec
ins
aas
dec
shr
dec
add
sbb
popa
sbb
fldenv
call
call
or
adc
jmp
daa
(bad)
aas
pop
cmps
jge
mov
cld
or
push
mov
std
es
add
clc
fs
(bad)
cmp
xor
int3
xor
mov
cmp
pop
es
test
ins
or
mov
repnz
sub
mul
cmp
and
ja
test
loope
pop
pop
inc
pop
inc
push
inc
inc
dec
sbb
sub
mov
jbe
gs
out
popf
mov
add
je
sar
enter
jge
adc
xchg
je
mov
adc
mov
mov
scas
into
xchg
outs
pop
neg
inc
aam
sub
cmp
xor
and
(bad)
fstp
mov
mov
cmc
leave
xchg
jno
(bad)
arpl
stos
cmc
in
icebp
ret
je
test
gs
adc
jno
(bad)
sbb
imul
jle
xor
and
jns
adc
in
pop
loop
rcl
jecxz
cmp
pop
fwait
imul
add
jl
push
jo
mov
cwde
add
push
ins
cwde
ror
sub
xchg
dec
jecxz
in
loopne
xor
aad
test
mov
xchg
js
cmp
sbb
xor
iret
test
sbb
mov
pop
mov
pop
xor
enter
or
imul
sbb
fcomp
ss
cmp
or
push
adc
inc
pop
pop
dec
mov
rcl
jnp
cmp
xor
push
daa
and
adc
mov
(bad)
sub
mov
mov
push
inc
pop
xlat
adc
int3
and
jnp
pop
pop
lock
rol
dec
jmp
popf
(bad)
mov
push
sub
mov
jle
lods
stos
out
lds
ret
mov
ja
mov
mov
stos
inc
in
(bad)
ucomiss
pop
sbb
imul
cmp
mov
icebp
popa
pop
mov
(bad)
(bad)
fadd
adc
mov
add
xchg
and
lea
lahf
or
dec
sub
lea
add
xchg
add
and
mov
jmp
icebp
dec
mov
mov
(bad)
add
hlt
into
inc
out
pusha
iret
xchg
popa
cmp
sub
xchg
inc
sbb
add
(bad)
mov
fisttp
loop
lock
push
into
push
push
push
dec
push
je
mov
aaa
jmp
sub
pop
inc
aas
aam
xchg
cmps
fisubr
xchg
mov
and
sbb
xchg
jl
stc
cmp
aad
lods
sbb
into
xchg
add
and
add
xchg
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
