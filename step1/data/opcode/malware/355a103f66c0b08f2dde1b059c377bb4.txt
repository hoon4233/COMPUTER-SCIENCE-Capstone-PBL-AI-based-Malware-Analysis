add
add
add
add
sub
fisubr
xor
test
ins
dec
and
aaa
xor
pushf
repz
push
and
or
mov
popa
cmp
rcl
stc
mov
pushf
push
sbb
test
and
add
into
loopne
xchg
cs
sbb
ss
std
mov
lock
pop
test
lods
repnz
mov
out
mov
add
xor
add
sbb
stos
icebp
pop
nop
test
repnz
rcr
and
xor
push
mov
mov
(bad)
push
mov
jbe
mov
fisttp
arpl
icebp
xchg
leave
mov
loope
inc
sub
fxch
fst
xlat
(bad)
fst
das
por
in
sub
mov
test
add
sub
(bad)
gs
(bad)
aad
inc
ds
mov
popf
fwait
leave
mov
sub
retf
ficom
pop
repnz
les
xchg
(bad)
or
pop
mov
push
sahf
retf
xchg
loop
arpl
data16
mov
cmps
add
xor
loop
jmp
jmp
and
sub
jecxz
xor
ins
cmps
pop
in
ss
dec
adc
fldcw
cmp
ss
dec
(bad)
das
retf
sub
in
adc
mov
stos
jo
enter
lea
inc
outs
mov
sub
loopne
into
imul
(bad)
pusha
(bad)
sub
shr
jle
cmp
imul
xchg
mov
push
shr
iret
xchg
jae
imul
jge
push
lea
gs
mov
iret
(bad)
lods
mov
jecxz
and
jle
mov
sub
mov
jge
add
movs
jmp
push
sub
shr
sbb
push
mov
inc
xor
push
push
cs
leave
mov
popf
adc
lds
xchg
push
cmp
in
cmps
push
jne
xchg
xchg
cmp
cwde
mov
repnz
icebp
retf
and
and
dec
in
mov
push
addr16
mov
jae
push
out
sti
fs
add
repnz
call
xchg
test
xchg
outs
mov
lods
retf
xchg
in
jne
xor
xchg
js
fucomi
pop
les
inc
sub
mov
movs
xchg
cli
sub
push
add
clc
popa
sub
test
xchg
pop
xchg
(bad)
es
adc
(bad)
jmp
jp
sub
push
or
int
std
ins
push
scas
scas
lods
mov
xchg
push
push
jno
mov
popa
(bad)
stc
mov
(bad)
js
dec
(bad)
(bad)
mov
shr
arpl
jmp
sub
push
stos
in
sbb
cmp
fucomip
and
mov
sbb
aad
je
inc
mov
pusha
(bad)
sbb
or
pop
mov
or
xchg
push
or
outs
inc
cmp
sar
loop
or
scas
push
mov
or
outs
scas
add
sub
mov
cmp
dec
jnp
movs
pop
inc
imul
cwde
push
inc
loop
add
jge
sub
add
pop
sbb
aaa
mov
or
cs
int3
(bad)
dec
das
dec
and
or
(bad)
jbe
sbb
icebp
jle
loopne
(bad)
xor
scas
mov
jmp
adc
scas
mov
loopne
sub
and
imul
push
jns
mov
shl
aas
sbb
push
inc
into
cwde
repnz
xor
pushf
or
fs
adc
pop
repnz
test
ror
loopne
neg
imul
jmp
xlat
mov
and
push
shr
cmp
in
popa
add
call
dec
mov
xor
mov
std
rcl
sahf
or
out
test
std
adc
jmp
loop
jns
mov
inc
mov
cli
std
adc
push
xchg
mov
jmp
add
jo
popa
sub
(bad)
pop
xchg
dec
adc
dec
cwde
rol
mov
push
out
es
jo
push
out
dec
repz
cli
lods
adc
mov
out
shl
mov
out
dec
dec
stos
mov
push
mov
jmp
fs
and
inc
xchg
jb
fst
int
xor
mov
enter
movs
(bad)
daa
rol
and
pop
stc
cmp
or
test
lock
cmc
jbe
add
aaa
xchg
inc
pop
aam
(bad)
not
shl
jl
popf
sbb
mov
pop
int
add
jp
fiadd
pop
(bad)
jns
mov
fcmovu
adc
mov
mov
jo
pop
and
or
inc
and
(bad)
int
adc
fsubr
rcl
jne
lods
and
enter
sar
pop
add
xchg
sbb
dec
clc
jle
push
xor
or
push
hlt
in
int3
popa
inc
sbb
ret
es
enter
std
dec
mov
enter
add
retf
push
and
inc
pop
mov
lahf
stos
arpl
les
cmps
es
xlat
mov
idiv
adc
mov
jle
and
ja
je
jb
cld
pop
mov
jl
add
sar
mov
mov
sti
loop
aad
pop
stc
mov
mov
push
hlt
add
aaa
cmp
rcr
or
ror
sub
pusha
loop
nop
xor
(bad)
stc
int3
aam
mov
ret
pop
out
cmc
sbb
mov
aam
iret
mov
out
aaa
add
push
div
and
pop
neg
add
mov
mov
popf
pushf
push
fild
out
push
inc
ins
in
xor
inc
mov
lods
inc
retf
ds
inc
dec
pushf
scas
mov
jne
sbb
jmp
imul
(bad)
adc
je
fcmovnb
add
mov
es
jne
dec
lahf
movs
ss
xchg
aaa
xchg
sar
push
(bad)
aad
or
push
dec
aam
pop
test
int3
add
enter
shl
pushw
jbe
movs
gs
int3
aad
mov
js
popa
mov
inc
retf
pop
sbb
leave
push
ficomp
std
stc
fwait
aaa
push
loop
push
or
pop
xor
jae
js
add
fnstsw
lea
out
inc
push
addr16
aaa
fadd
(bad)
sets
jp
bound
rol
mov
lds
mov
sahf
xchg
cwde
mov
push
fldcw
sub
jns
lods
std
je
idiv
rcl
xor
mov
sub
jns
popa
add
add
cmc
mov
fist
popf
aam
add
popf
or
movs
into
test
outs
xchg
inc
sbb
daa
(bad)
aaa
int
or
xchg
mov
loope
int
fbstp
shl
test
jl
push
cmp
cmp
push
mov
adc
out
sub
icebp
push
test
into
adc
add
nop
pop
fild
add
mov
or
push
push
jmp
int
ins
pop
sahf
sbb
inc
and
xor
out
test
pop
mov
in
cld
fidivr
lahf
fld
jnp
xchg
mov
out
dec
out
ins
jp
lds
pop
xchg
or
lods
pop
mov
inc
imul
mov
jnp
fld
mov
in
(bad)
cli
adc
push
movsx
dec
and
pop
and
mov
test
int
mov
sbb
pop
std
xchg
dec
mov
cwde
cmc
jnp
adc
stc
or
out
cmp
xchg
call
xchg
mov
addr16
ja
fucomi
pop
call
inc
dec
xchg
inc
adc
test
pop
stos
push
call
or
adc
sub
inc
aaa
push
bound
fldenv
test
std
jb
dec
clc
dec
and
or
and
in
rcl
sbb
mov
jns
fadd
add
enter
mov
outs
lahf
mov
and
jno
jbe
mov
outs
xchg
add
mov
mov
adc
stc
xor
pushf
dec
cmp
(bad)
jmp
outs
xchg
push
mov
jge
sub
inc
scas
cmps
xchg
pop
jae
add
ins
mov
xchg
das
mov
test
lock
test
and
call
push
pop
or
and
mov
jl
test
jnp
pop
(bad)
and
or
sbb
test
push
cmps
cdq
fist
pop
add
mov
add
and
xchg
call
test
frstor
cmp
shl
push
out
lods
or
cli
jle
push
add
fwait
mov
mov
mov
(bad)
dec
lods
movs
jge
out
ret
aas
mov
es
test
or
mov
sub
xchg
fdivp
xor
mov
das
pop
jno
mov
dec
pop
pop
inc
dec
iret
xchg
mov
rep
jg
or
sub
test
lods
daa
push
cmp
cmps
push
into
jnp
mov
mov
cmps
and
dec
cmps
xlat
mov
sbb
repz
push
fsubr
rol
aaa
gs
push
stos
dec
lods
jno
in
jbe
or
aam
and
add
or
in
inc
pop
xchg
scas
cmp
repnz
movs
fcomi
and
retf
sbb
or
lods
fstp
cmp
call
sar
cs
pop
mov
not
addr16
xchg
pushf
into
int
outs
mov
call
adc
xor
dec
push
sub
jns
or
and
adc
or
jbe
cdq
std
jl
jp
xchg
adc
int3
pop
mov
add
dec
sub
mov
dec
fwait
dec
sahf
xor
and
mov
adc
loope
cmp
neg
cmp
xor
icebp
lea
lds
pop
je
or
mov
mov
push
mov
call
ficomp
nop
out
inc
cmps
jnp
push
cmps
jbe
mov
sub
pop
loope
das
jbe
leave
test
adc
sbb
xchg
leave
xchg
mov
add
jmp
fistp
push
mov
xchg
add
sbb
push
mov
repnz
sahf
(bad)
shl
pop
jmp
cwde
xchg
sbb
mov
or
ret
pop
in
fcom
or
aad
pusha
adc
pop
push
imul
(bad)
push
mov
arpl
push
lds
test
shl
movs
aad
fdiv
lods
or
or
mov
dec
xor
push
pop
xlat
popa
jge
mov
cli
clc
xchg
or
jl
adc
sub
pop
jp
pushf
shl
pusha
dec
rcr
pop
mov
xchg
sub
int3
stos
adc
sbb
hlt
mov
dec
cmp
dec
mov
xchg
sbb
inc
lods
and
or
dec
and
fld
jns
push
xchg
and
xchg
lahf
mov
das
div
pop
stc
loop
je
mov
mov
sub
mov
jp
cmps
cli
lods
mov
repnz
xchg
add
movs
mov
inc
jno
rcl
scas
fldcw
in
fisub
add
mov
test
cdq
ret
sbb
xchg
popa
mov
inc
fdiv
mov
sti
mov
dec
test
xchg
dec
mov
xor
sar
xchg
jns
jae
push
mov
or
cdq
push
mov
movs
jmp
repz
dec
pop
adc
cli
jmp
ret
or
sbb
pop
xchg
sub
adc
leave
xchg
mov
loopne
or
inc
xor
in
mov
lock
and
cmps
jns
js
add
leave
test
push
mov
inc
push
and
xchg
enter
jmp
adc
cmp
rol
js
inc
fwait
cmp
ins
ss
(bad)
xchg
rcl
xchg
sbb
xchg
cmc
sub
dec
mov
imul
bound
mov
pop
inc
push
aad
int3
xlat
scas
mov
stos
data16
sub
mov
pop
cmp
aad
pusha
sbb
xchg
pusha
shl
mov
mul
dec
jmp
dec
push
leave
pop
leave
jb
and
mov
cmp
sub
jno
je
scas
enter
idiv
and
sbb
mov
add
(bad)
or
inc
aaa
and
out
aam
cli
and
add
inc
std
repnz
or
shl
arpl
sub
lods
das
xor
inc
push
jmp
ja
clc
arpl
or
es
xlat
(bad)
sar
sbb
inc
dec
mov
pop
mov
ja
lahf
inc
cmps
adc
loope
call
daa
dec
xchg
push
push
ret
stc
mov
jae
push
dec
jmp
das
imul
mov
sbb
or
std
mov
test
std
sub
xchg
loopne
push
test
rol
sbb
xchg
daa
inc
or
push
xchg
stc
pop
aaa
jmp
ret
or
sbb
cmp
push
ins
and
out
imul
pop
xor
(bad)
jns
push
pop
mov
pop
fst
std
and
push
dec
jge
add
inc
add
dec
jnp
cmps
cdq
inc
call
scas
fsubr
iret
push
or
aam
fs
fisttp
iret
mov
outs
dec
test
ins
sbb
in
lods
ds
mov
dec
jl
mov
out
aam
retf
shr
out
call
inc
jb
shr
mov
cmp
out
addr16
mov
leave
lock
jb
dec
xchg
(bad)
push
fist
imul
popf
sahf
idiv
push
xchg
xor
inc
lock
ss
arpl
das
sub
sbb
loop
popa
sub
mov
mov
mov
cs
inc
mov
and
stos
inc
fld
rol
xchg
mov
jb
test
add
test
movs
mov
push
aad
inc
xor
ffree
ret
in
mov
and
inc
xor
ret
fst
mov
imul
sub
push
push
cmps
pushf
arpl
test
mov
sti
loop
shl
push
add
enter
and
popf
jle
xchg
pushf
xchg
pop
xchg
imul
push
xchg
mov
out
daa
jbe
loop
cwde
hlt
jge
add
xchg
dec
(bad)
mov
jns
lds
out
fdivrp
add
lock
xchg
out
cld
(bad)
movs
shl
jmp
push
jp
in
push
aaa
and
jge
popf
fdivr
(bad)
xor
mov
and
pop
sub
dec
ror
mov
xor
es
shr
mov
xchg
stc
repz
xor
sbb
movs
ror
add
and
repz
jmp
(bad)
aad
xor
and
mov
call
xor
out
cmp
shl
push
leave
clc
add
cmp
cmp
or
int
mov
mov
mov
inc
inc
(bad)
sub
push
and
dec
aad
add
idiv
xchg
xor
dec
iret
cmp
cwde
fild
sbb
daa
push
shr
cwde
pop
dec
push
sbb
popf
fs
adc
dec
outs
add
add
push
or
add
(bad)
and
(bad)
mov
lds
inc
inc
loope
inc
xchg
aaa
mov
shl
imul
or
rol
hlt
cmp
xor
add
inc
add
push
sar
loop
jmpw
addr16
iret
mov
add
mov
sti
xor
jg
ds
push
xor
jne
pop
sar
(bad)
jge
or
mov
adc
sbb
dec
xchg
jmp
test
pop
sub
mov
xlat
ins
loopne
movs
(bad)
lods
pop
nop
pop
sbb
aaa
hlt
aam
push
push
xor
mov
add
or
pop
or
fisub
test
cmps
inc
sbb
or
test
shl
xchg
mov
inc
fidiv
popa
outs
bound
and
in
jo
pop
xor
cwde
add
ss
jg
push
sub
cld
jno
xchg
adc
mov
sahf
xchg
adc
fist
push
pop
dec
mov
dec
les
(bad)
cli
push
and
dec
inc
fld
add
pushf
pop
lods
jl
daa
pop
jge
stc
daa
mov
mov
add
sub
(bad)
cmp
adc
fmul
icebp
push
pop
or
cpuid
or
add
es
in
xor
in
cs
out
lods
leave
mov
jecxz
mov
jbe
cdq
inc
popa
icebp
xlat
addr16
cmp
push
push
ins
es
ss
aas
sub
lods
cmps
add
fild
ss
add
add
movs
xor
xchg
fldenv
add
cmp
call
jl
cmp
je
sbb
and
add
fcomp
xchg
jmp
xor
or
sar
mov
xchg
dec
sar
mov
mov
fcomp
pushf
sar
pusha
sub
jne
jmp
or
cmp
in
stos
adc
xor
sub
gs
push
sub
sub
mov
cmps
mov
mov
mov
out
inc
fcomp
(bad)
stos
aad
fild
stc
cdq
leave
scas
jb
shr
adc
in
jns
scas
sub
inc
and
push
sti
push
or
fcmovnu
inc
loope
inc
cdq
dec
mov
jmp
mov
and
adc
push
aam
shl
scas
retf
out
adc
rcl
lock
gs
movs
loopne
std
mov
sahf
pop
outs
dec
mov
rcr
cmp
out
and
jmp
fisub
pop
sar
sar
and
and
jmp
cld
std
es
mov
or
cs
mov
loop
push
inc
xchg
and
or
mov
dec
adc
mov
jg
mov
mov
inc
fidiv
(bad)
fld
mov
or
out
retf
daa
or
test
icebp
push
fadd
je
sbb
cmc
jnp
cmp
mov
lods
inc
cmps
je
push
pop
aam
pop
mov
xor
scas
inc
pop
cmps
sub
data16
(bad)
xchg
mov
sub
add
ins
ja
push
mov
aaa
pop
rcl
lock
pop
mov
movs
and
pop
jbe
add
(bad)
pop
ror
ins
xor
push
in
test
aam
push
xor
fcomip
and
push
test
(bad)
and
sbb
outs
pop
xchg
cmc
pusha
push
scas
icebp
scas
fsubr
lahf
int
cmp
mov
adc
aad
push
jno
push
jmp
push
push
cmp
pop
sub
sbb
inc
or
int
stc
pop
pop
jg
fadd
jp
mov
xor
shl
xchg
sbb
xchg
ret
mov
add
ja
add
loop
jecxz
inc
retf
add
lods
shl
repnz
or
add
push
mov
leave
(bad)
aad
test
cmp
xor
xor
test
pop
call
pop
xchg
and
dec
jno
cmps
xchg
xor
(bad)
mov
sbb
mov
bswap
xor
push
pop
data16
mov
repz
lahf
pop
pop
imul
clc
jno
xchg
xor
ja
mov
push
retf
xchg
pop
cwde
or
js
jl
pop
mov
pop
push
es
xchg
xor
xor
stos
(bad)
out
fisub
and
add
sub
push
imul
dec
dec
xchg
adc
fs
sbb
test
(bad)
cmps
loope
dec
sub
ss
movs
pop
mov
iret
or
adc
pushf
shl
outs
(bad)
cmp
mov
and
fwait
jmp
pop
sahf
cwde
ins
xor
fstp
inc
inc
call
icebp
int
push
in
in
pop
(bad)
inc
out
mov
cmp
cmp
loop
mov
out
ins
pop
xchg
jns
push
enter
cmp
jle
inc
retf
data16
jne
bound
xor
xor
sub
and
adc
mov
cmc
push
cwd
xor
(bad)
mov
and
jo
adc
mov
sbb
or
retf
inc
adc
xchg
js
xchg
enter
dec
jle
adc
adc
loope
cmp
add
sub
(bad)
js
imul
add
les
ds
push
xor
dec
push
imul
push
rcl
shl
jae
outs
nop
iret
cmp
mov
sub
xchg
or
push
(bad)
lds
fucomp
gs
adc
iret
cld
mov
mov
enter
aas
xor
lock
mov
(bad)
rcr
push
or
jl
out
aad
aad
addr16
pop
gs
jl
mov
aam
cwde
(bad)
pop
mov
cmp
mov
stos
cmps
cmps
cmp
aas
mov
out
add
xor
sub
jne
mov
xchg
jbe
outs
inc
mov
or
fcmove
loopne
cmp
mov
lods
ja
mov
aaa
inc
mov
xchg
push
mov
inc
test
add
and
pop
sbb
adc
mov
cmp
popf
and
pop
test
cmc
push
repnz
sub
xchg
mov
jns
arpl
stc
loope
stc
call
shl
jo
(bad)
mov
sbb
je
loope
adc
jmp
clc
dec
cmps
mov
mov
add
adc
mov
dec
ins
popf
test
and
dec
sbb
mov
loop
pop
gs
popf
sbb
repz
mov
jb
and
dec
test
xchg
stos
loopne
push
xchg
mov
mov
sti
xor
xchg
pop
lock
push
test
mov
mov
pop
mov
and
(bad)
pop
inc
leave
pop
out
xor
and
mov
push
xor
jge
idiv
(bad)
ja
pop
mov
dec
or
sbb
jo
adc
and
sub
pop
ror
addr16
cmp
push
mov
fisttp
add
and
imul
retf
inc
push
out
(bad)
dec
jecxz
pushf
dec
mov
pop
(bad)
jmp
mov
adc
stos
adc
mov
cmc
ja
xor
or
adc
test
mov
retf
dec
(bad)
jnp
cmp
dec
pop
sahf
mov
mov
imul
push
xchg
or
fs
nop
aas
repnz
lods
push
std
(bad)
mov
xchg
retf
cdq
leave
xchg
mov
xchg
add
sbb
mov
mov
mov
movs
inc
cmp
rcr
test
pop
cmc
push
sub
push
sub
lea
aaa
rcl
dec
cmps
leave
inc
push
ret
dec
dec
gs
cwde
cdq
in
mov
aaa
(bad)
aaa
xchg
sbb
mov
stos
cmp
cmc
lahf
inc
cli
cmp
imul
sbb
push
add
test
fild
loopne
mov
xor
sub
cmc
sub
mov
mov
adc
jo
enter
add
inc
sbb
mov
cmp
dec
aad
mov
or
sbb
leave
repz
in
sbb
cmp
xor
add
(bad)
test
arpl
lods
jge
push
pusha
or
cmp
cwde
and
pushf
cmps
(bad)
cwde
push
pop
stos
stos
mov
jno
loopne
(bad)
lds
fcom
inc
std
jo
ja
dec
in
inc
mov
mov
dec
jecxz
mov
mov
or
mov
push
xchg
(bad)
sub
pop
mov
pop
adc
inc
sub
(bad)
iret
outs
fdivr
mov
hlt
daa
inc
test
sub
fs
and
mov
enter
not
adc
jmp
jo
stos
jmp
dec
jbe
pop
xchg
mov
push
leave
push
sub
bound
rcr
cmps
fidiv
inc
adc
sti
cdq
in
mov
outs
push
sbb
imul
ins
bound
jge
inc
imul
adc
mov
daa
jmp
out
pop
ins
pop
jmp
in
cdq
push
jmp
pushf
and
add
xor
(bad)
ds
and
push
repz
pop
sub
or
sbb
dec
push
jl
retf
add
fimul
cmc
xchg
test
add
or
dec
mov
mov
out
mov
push
and
mov
fcmovnbe
jbe
push
icebp
and
rcl
or
fucomi
add
inc
shr
in
out
iret
pop
mov
inc
xchg
fsubrp
dec
hlt
in
dec
xchg
sub
adc
xchg
movs
(bad)
fdiv
mov
mov
sub
jne
sub
je
sub
or
mov
ja
call
fld
sub
mov
xor
push
in
scas
pop
sbb
stos
loope
pop
cmp
lods
or
(bad)
jbe
mov
and
xchg
add
(bad)
out
icebp
mov
dec
test
imul
addr16
aaa
lea
dec
sti
adc
jle
cmp
cs
mov
popa
cmps
pop
adc
imul
or
sub
hlt
jl
or
stc
mov
(bad)
aam
aas
inc
call
jge
movs
repnz
retf
xor
popa
and
sub
mov
adc
popf
test
xchg
pop
sbb
jbe
mov
pop
cmp
sbb
mov
outs
push
sbb
add
pop
or
imul
ins
adc
xor
or
mov
mov
mov
and
aad
aaa
icebp
adc
xchg
dec
cmp
ds
and
(bad)
clc
mov
or
xchg
push
and
rcr
or
jecxz
int
mov
scas
push
cwde
mov
jae
out
fnstsw
sar
ins
push
adc
mov
scas
outs
mov
out
jo
pop
repz
sub
push
xchg
imul
dec
int
stos
jmp
adc
jmp
sub
jmp
add
das
ret
push
daa
xor
jnp
and
fsub
dec
jmp
inc
inc
cld
dec
sbb
mov
cmps
(bad)
ds
lods
mov
lods
xchg
jno
adc
imul
add
cmp
test
adc
xchg
xlat
repnz
or
fnsave
jle
inc
and
aad
pop
mov
adc
jecxz
mov
mov
xchg
mov
aaa
add
rcr
stos
mov
jb
aaa
adc
enter
(bad)
jo
or
iret
ret
jno
dec
jp
ins
mov
lods
clc
mov
fisub
loope
enter
test
cmp
mov
mov
xchg
repnz
jge
ds
in
sbb
neg
popa
movs
repnz
cmps
push
pop
sbb
out
lahf
out
shl
(bad)
xor
mov
test
call
test
out
inc
dec
cmc
xor
xchg
aas
int3
frstor
loop
out
or
push
mov
pop
inc
call
aas
or
add
imul
ins
jb
jne
dec
jp
in
aam
mov
in
lods
lds
or
out
retf
adc
dec
pop
pop
movs
adc
xlat
xor
test
dec
stc
in
jmp
lds
in
pop
push
mov
mov
in
push
xchg
iret
icebp
dec
imul
mov
inc
and
or
push
push
mov
pop
mov
or
sahf
mov
mov
xchg
and
push
ror
inc
adc
push
adc
sbb
pop
dec
pop
jmp
call
test
cli
pop
test
fwait
dec
adc
(bad)
je
bound
cdq
shl
movs
call
repz
fdivr
mov
lds
fs
call
dec
push
pop
out
loope
jge
into
xchg
int3
scas
mov
mov
idiv
add
fisub
imul
add
push
imul
(bad)
push
push
sub
add
popa
jnp
mov
mov
mov
sbb
mov
outs
dec
rcl
adc
pop
clc
leave
xlat
pop
cmc
mov
bound
mov
add
int
inc
xchg
das
add
and
int3
inc
in
jp
mov
mov
jmp
or
adc
femms
push
jno
xor
jns
aad
and
dec
ret
mov
adc
jno
clc
xchg
dec
cdq
and
imul
push
outs
ins
cmp
stc
or
inc
mov
dec
adc
fnsetpm(287
stos
dec
add
or
inc
cdq
add
call
in
add
scas
cli
and
fidiv
and
gs
movs
outs
mov
mov
stos
inc
cdq
jge
test
stos
dec
xchg
shl
aad
shr
and
aaa
push
jge
xchg
add
mov
aaa
aad
(bad)
dec
lods
sbb
dec
mov
fwait
int
pop
jmp
and
xchg
out
pop
mov
xor
pop
xchg
pop
call
dec
xchg
jne
rcl
xchg
lods
mov
dec
dec
xor
movs
sbb
push
dec
cmp
pop
adc
fiadd
stos
out
stos
push
popf
data16
cmp
jmp
fxch
movs
push
mov
xor
retf
out
xchg
paddsb
mov
in
std
in
mov
dec
gs
bnd
popf
movs
call
cmp
rcl
retf
mov
jp
das
arpl
(bad)
out
fnsetpm(287
scas
jp
dec
add
jmp
repz
test
push
cmp
std
jge
pop
outs
cwde
inc
je
out
adc
adc
mov
inc
ds
sub
cld
xchg
stc
xchg
movs
lods
(bad)
pushf
xor
push
push
popf
push
enter
mov
inc
rcl
cmc
mov
push
imul
dec
(bad)
fld
mov
add
cmp
ds
repz
retf
cmp
(bad)
or
inc
daa
or
lahf
pop
aaa
shl
cmp
xlat
mov
or
sbb
sti
mov
push
sub
lahf
rol
sbb
adc
dec
adc
movs
mov
xchg
stos
adc
(bad)
and
fimul
lahf
leave
mov
daa
push
mov
aam
push
mov
outs
xchg
mov
push
dec
xor
lahf
movs
repnz
fdivp
pop
sub
and
pop
js
sub
mov
rcr
fld
repz
nop
pop
and
jge
rcl
sahf
popf
push
ins
sti
add
(bad)
retf
mov
push
ins
stos
pop
sbb
movs
test
mov
clc
aad
mov
(bad)
js
outs
cmc
ja
push
pushf
and
ret
jae
call
and
(bad)
js
mov
sbb
(bad)
ret
pop
xlat
nop
cmp
jns
data16
xlat
inc
add
mov
es
adc
cmp
mov
mov
loopne
int3
neg
cld
xor
adc
pop
pop
sbb
ret
mov
jl
pop
out
inc
call
xlat
fwait
out
pop
jae
add
add
pop
add
push
neg
xlat
leave
push
sub
dec
jp
mov
push
xchg
push
outs
scas
nop
jno
sub
jb
test
fwait
in
fdiv
push
mov
or
rol
ret
push
stos
xor
or
push
jmp
push
scas
popf
xchg
das
js
jge
cmp
aam
jmp
call
pop
xor
leave
mov
inc
or
or
cs
out
xor
adc
icebp
jmp
lods
popa
mov
push
and
repnz
sbb
icebp
mov
xor
mov
or
mov
test
push
popa
repnz
retf
loopne
push
cs
mov
je
stos
jecxz
adc
fistp
sbb
xchg
sbb
test
jnp
and
sbb
ins
inc
pop
fcmovnb
adc
jae
add
mov
aam
ds
(bad)
popf
or
sub
inc
cmps
cld
xor
ins
repz
push
sub
enter
push
push
inc
cdq
enter
lods
iret
sbb
nop
sbb
pop
test
mov
push
pop
sub
in
mov
nop
push
(bad)
nop
addr16
xlat
dec
fst
add
fcom
mov
in
pushf
fisub
rol
sti
and
arpl
push
iret
cmove
fist
jp
push
rcl
shr
and
mov
lock
mov
loopne
test
icebp
pop
mov
jo
sub
xchg
inc
jle
ds
cs
sbb
js
fisubr
add
jns
xchg
retf
rcl
les
push
sbb
sbb
int3
inc
aaa
std
add
aad
dec
(bad)
push
xor
cwde
jmp
bound
mov
test
adc
jge
cmp
stos
push
sub
ds
mov
or
adc
sbb
push
lea
or
adc
inc
inc
or
jg
dec
sub
ffree
and
xchg
outs
clc
push
test
loopne
leave
enter
popf
sbb
mov
fst
mov
out
xor
jp
pop
mov
js
push
mov
ins
out
sbb
iret
cmc
pop
pop
sbb
icebp
nop
adc
mov
add
mov
jno
inc
les
mov
aaa
push
pop
sub
sub
cmps
mov
sub
nop
xchg
lods
mov
test
out
cmp
stos
mov
jl
cmp
jecxz
js
std
dec
cld
inc
rol
mov
mov
js
(bad)
jne
inc
and
ins
mov
mov
in
mov
inc
jne
cmp
mov
sub
cmps
lock
pop
dec
mov
cmp
lods
pop
std
jno
enter
and
movs
lahf
div
popf
dec
fs
mov
les
stc
pop
adc
mov
push
pop
loop
cdq
or
push
daa
int
mov
adc
shr
sar
jg
adc
cmp
or
mov
out
pusha
outs
jbe
add
imul
ins
adc
xor
arpl
pop
call
push
dec
outs
sub
add
push
mov
test
cdq
xchg
xchg
pop
push
movs
and
mov
push
pop
cmps
in
push
test
bnd
mov
jbe
repz
sub
fs
addr16
xchg
int
push
ins
rcl
in
int
cs
jmp
call
(bad)
mov
and
inc
adc
mov
xor
sub
aad
cmp
(bad)
xor
sbb
call
stc
jecxz
movs
xchg
xor
data16
xchg
pusha
hlt
pop
or
xor
pushf
sbb
push
add
clc
es
nop
mov
shl
cmps
lods
dec
gs
stos
mov
outs
ja
jb
hlt
and
mov
mov
cmc
shl
sbb
rcl
shr
and
and
je
std
es
xchg
cwde
popa
inc
mov
jmp
push
sub
cmps
(bad)
repz
mov
fld
xlat
mov
jne
addr16
sub
repz
test
push
cmp
sbb
mov
pushf
outs
loop
call
enter
cmp
or
dec
add
in
jnp
dec
or
sti
neg
ret
fiadd
mov
add
cmp
xlat
dec
cmp
lods
lea
mov
xlat
mov
cmp
sahf
and
lahf
xor
pop
mov
mov
jmp
mov
loopne
movs
dec
xchg
push
das
jno
call
mov
and
ror
jle
and
aam
imul
mov
cmps
lea
nop
call
call
sbb
or
jp
stc
imul
mov
ins
xchg
leave
fbstp
(bad)
cmps
dec
jnp
fcomp
xlat
retf
inc
sbb
dec
sub
sub
ja
enter
jmp
pop
jmp
test
dec
xchg
and
gs
xor
in
dec
scas
pop
fcom
imul
rcl
ficom
jp
dec
xor
out
movs
xchg
arpl
sub
cmp
sbb
jbe
jnp
popf
arpl
into
fisubr
nop
pop
sub
repnz
and
mov
mov
(bad)
jns
call
mov
sub
or
mov
imul
int
sti
add
movs
fcom
push
jp
(bad)
fadd
(bad)
sub
sahf
pop
cwde
jmp
es
jmp
lock
rcr
xchg
add
push
repz
jmp
adc
shl
mov
ret
std
loope
loop
cmps
push
hlt
jle
iret
inc
add
mov
xchg
jnp
push
sbb
dec
dec
stos
aas
xor
push
sbb
jmp
lods
inc
leave
dec
jo
ud2
in
and
ret
pop
pop
stos
ficom
das
leave
or
adc
and
out
shl
sub
inc
outs
int
or
xchg
cld
dec
mov
ss
xchg
or
jmp
adc
or
stc
and
imul
out
sbb
jbe
mov
push
push
dec
xchg
aaa
pop
lock
mov
fdivr
aaa
xchg
lods
retf
ins
mov
std
pop
pop
div
rep
pop
xchg
mov
ret
test
enter
pushf
lods
jg
(bad)
jmp
cmp
inc
icebp
das
push
es
jmp
shr
scas
popf
and
imul
push
fsubr
adc
les
in
add
dec
xor
mov
(bad)
imul
fmulp
stos
xchg
stos
jo
loopne
test
shl
or
sub
aad
mov
mov
inc
fbstp
inc
and
gs
mov
xchg
repz
jnp
aad
jne
out
popf
mov
mov
jno
pinsrw
dec
push
inc
jb
mov
scas
dec
div
mov
push
scas
mov
test
mov
fs
cmp
push
adc
pop
xor
inc
cld
jb
jp
fucomp
and
adc
sti
adc
xor
inc
cli
pop
lods
inc
div
test
loope
and
iret
sti
push
sub
pop
inc
call
mov
pop
sbb
push
frstor
xchg
lahf
fucom
nop
and
pop
adc
adc
or
mov
inc
jbe
pop
or
test
scas
inc
shl
popf
jae
xlat
mov
xchg
pop
dec
xor
lock
popf
out
clc
cmp
pop
jno
mov
repz
mov
loopne
add
repnz
or
inc
mov
(bad)
mov
xchg
xor
sbb
stos
xchg
mov
in
outs
sbb
push
push
or
sbb
arpl
jle
jb
cmps
mov
xor
or
dec
outs
adc
out
cmps
xchg
push
jle
push
or
aam
lds
(bad)
repnz
outs
push
ss
sub
jle
xchg
js
or
add
sbb
test
ins
inc
lahf
cld
sub
jmp
ret
mov
or
sti
jno
or
adc
mov
add
enter
or
outs
xchg
gs
xor
xchg
cmp
test
fsub
scas
in
out
lods
xchg
adc
sub
dec
int
icebp
stos
and
(bad)
cld
mov
(bad)
in
jge
out
int
mov
out
jbe
and
dec
mov
test
xor
inc
mov
stos
rcl
ins
lahf
sar
jmp
sbb
lahf
int
sbb
or
out
iret
test
add
jge
add
pop
(bad)
jl
out
sbb
mov
(bad)
ja
js
fidiv
mov
popa
jo
imul
ins
rcr
push
sub
fld
mov
popf
pop
loopne
stos
or
in
(bad)
and
cmp
jl
fdiv
fucomi
out
cmps
lea
mov
neg
add
setnp
inc
mov
push
add
inc
jbe
test
je
mov
clc
test
ret
and
dec
div
or
inc
adc
push
pop
and
je
cmps
and
pop
(bad)
lock
(bad)
mov
sbb
imul
dec
cmps
inc
cmp
aas
movs
push
cmp
mov
or
addr16
xor
retf
aad
(bad)
aas
xchg
cs
pushf
jae
into
(bad)
ja
jmp
cs
jae
mov
or
daa
std
mov
or
fidivr
mov
and
test
mov
iret
mov
mul
cdq
in
enter
sbb
fisubr
aad
je
fsub
fisubr
mov
xchg
xor
adc
xlat
fdiv
sub
(bad)
das
sub
and
sub
int3
dec
cmp
ins
scas
cmc
xor
outs
ds
adc
repnz
adc
push
jecxz
addr16
scas
push
cmp
mov
push
ror
jecxz
jno
test
sbb
dec
icebp
fstp
xor
dec
enter
mov
adc
push
mov
inc
js
mov
pop
js
pop
aad
push
cwde
popf
loop
or
xlat
mov
(bad)
cmp
imul
pop
jecxz
pop
repz
ret
pop
repnz
popf
repnz
cmps
pop
pop
cmp
adc
scas
out
jnp
add
mov
sbb
push
inc
les
popf
ficom
jb
pop
out
adc
cld
dec
(bad)
push
push
mov
inc
mov
and
inc
inc
leave
mov
sti
or
mov
jns
and
imul
(bad)
int3
adc
add
xchg
mov
jl
cwde
pop
adc
mov
and
push
sbb
imul
cmp
arpl
adc
out
jnp
(bad)
sub
adc
sti
dec
std
mov
add
push
outs
mov
inc
cmp
sbb
xchg
cli
pop
dec
cmp
pop
lods
push
sub
xor
cmp
or
xchg
sub
ficomp
es
dec
adc
sub
les
in
fs
lds
cli
push
rol
dec
xlat
scas
dec
cld
xchg
and
xlat
pop
sbb
mov
xor
xlat
in
jmp
mov
push
retf
adc
mov
sbb
sub
lods
scas
and
out
sbb
cmps
add
and
xchg
and
jb
sahf
pushf
jmp
aas
jmp
xchg
mov
mov
mov
and
test
dec
jge
enter
pop
movs
ficom
add
add
scas
cmps
test
ret
mov
adc
stc
inc
add
pop
mov
cmp
cmps
cld
push
(bad)
aad
mov
mov
jmp
xor
or
xor
dec
cmp
(bad)
in
lds
jmp
mov
push
jmp
jmp
jmp
mov
loope
and
sub
jg
jnp
mov
sbb
mov
push
retf
mov
xchg
hlt
mov
and
ds
popa
xor
call
fnstcw
imul
iret
in
imul
fwait
data16
(bad)
sbb
stos
dec
js
sbb
ret
pop
adc
or
push
inc
push
jecxz
stc
jo
dec
adc
fsub
aas
xchg
xlat
inc
loope
xchg
daa
cmp
inc
sbb
fwait
adc
in
mov
cli
adc
es
sub
and
dec
pop
sub
push
outs
adc
sar
rcr
push
mov
adc
pop
imul
sub
ja
stc
cli
or
sbb
out
xor
ins
in
jae
xor
cmp
sbb
or
and
mov
jg
mov
inc
out
jecxz
xor
sbb
jb
or
sub
lea
(bad)
dec
mov
fistp
add
ins
and
mov
xchg
sbb
mov
lods
aad
inc
cmp
js
test
and
fimul
jb
pop
dec
rcr
popf
pop
push
pop
inc
std
dec
dec
(bad)
jnp
fs
dec
jo
in
mov
and
mov
fld
iret
cwde
mov
pop
gs
ret
mov
leave
pushf
in
in
or
mov
xchg
jnp
mov
ss
pop
and
xchg
js
cmp
cmp
mov
mov
test
stos
mov
popa
call
jno
cli
cld
mov
push
call
dec
jb
pop
xchg
pop
mov
adc
push
(bad)
pop
hlt
or
or
arpl
cmp
into
pop
or
mov
mov
or
jp
sti
out
xor
ds
cmp
dec
dec
sub
adc
in
bound
pop
aaa
xor
std
retf
xchg
xchg
adc
imul
fisttp
in
and
in
ja
stos
sbb
ja
repz
lea
xchg
scas
jl
in
fwait
adc
mov
scas
xor
and
or
mov
and
inc
mov
das
in
neg
in
dec
pop
mov
lods
psubsb
aaa
fadd
push
pop
xor
and
ja
repnz
xlat
mov
pop
call
cs
(bad)
push
fwait
and
jecxz
ins
sub
int3
popa
mov
and
fwait
in
int3
add
movs
scas
popa
std
mov
imul
fnstenv
stos
mov
jnp
adc
mov
sbb
jecxz
xchg
cmp
scas
sbb
xchg
push
das
mov
jge
cli
imul
fsub
icebp
mov
lods
idiv
addr16
dec
mov
or
and
popa
in
idiv
fwait
jbe
std
ja
mov
fidiv
mov
int3
mov
push
pop
fs
dec
inc
cmp
cmp
inc
jle
(bad)
js
xlat
mov
stc
faddp
iret
ja
jl
inc
into
jne
inc
jb
test
stc
inc
outs
add
(bad)
sub
jmp
mov
leave
out
and
int3
sub
mov
dec
sahf
into
call
xchg
adc
mov
xchg
test
mov
and
inc
sub
fwait
push
add
mov
mov
sbb
xor
retf
mul
pop
(bad)
inc
in
and
xor
inc
retf
xlat
jae
cmp
lods
movs
fmul
fdivp
retf
lea
inc
(bad)
and
inc
mov
icebp
xchg
cmps
cmp
xor
cmp
lock
sub
cmp
or
in
ins
test
mov
ret
jecxz
pop
(bad)
pop
xor
test
mov
dec
or
and
and
dec
xchg
nop
jp
ds
ins
pushf
push
movs
addr16
mov
int3
repnz
push
mov
pusha
xchg
ror
stos
push
rcl
dec
dec
sbb
pop
out
mov
js
mov
imul
cmp
in
inc
(bad)
out
int3
jbe
mov
lahf
gs
test
mov
ins
std
rcl
xor
(bad)
or
out
inc
inc
mov
mov
jbe
int3
xchg
sahf
popa
mov
jo
lea
sahf
cld
mov
push
and
xchg
(bad)
add
xor
sub
mov
nop
out
push
xor
mul
adc
sub
cmp
loop
sbb
add
sub
pop
mov
inc
mov
out
ss
adc
add
stos
aaa
mov
retf
retf
imul
mov
in
stos
cwde
lods
aas
push
jnp
mov
sub
sti
call
(bad)
and
mov
fmul
aad
dec
dec
add
push
inc
jg
icebp
add
ret
hlt
sbb
mov
repnz
or
(bad)
mov
unpckhps
jae
fstp
xchg
retf
push
inc
loope
gs
data16
push
imul
fisttp
and
(bad)
(bad)
cmp
movs
imul
leave
and
retf
popf
dec
arpl
sub
(bad)
jle
jp
sti
out
ja
lds
into
stos
sub
les
xchg
ror
inc
mov
jge
jmp
jp
add
jae
lods
(bad)
movs
cs
ins
je
mov
int3
sbb
(bad)
jae
mov
xor
in
push
sub
sahf
retf
test
int
fmul
jbe
out
pop
pop
jp
fist
aaa
sbb
mov
or
idiv
je
cmc
adc
push
aam
xor
out
fisub
xor
adc
(bad)
mov
mov
in
and
cmp
push
scas
inc
dec
adc
clc
fsubr
sbb
(bad)
stos
cmp
push
cwde
xor
inc
enter
cmp
hlt
pop
cmp
les
ret
sub
pop
leave
add
add
ror
inc
pop
(bad)
movs
mov
and
fdiv
imul
repz
loope
mov
mov
scas
cs
loope
out
test
sbb
adc
mov
mov
lods
adc
dec
xor
das
xchg
mov
test
jbe
ja
in
jmp
hlt
cdq
pop
jno
mov
xchg
pop
push
cwde
mov
cld
mov
clc
rcr
repnz
pop
das
or
loop
call
xchg
sub
pop
call
mov
xchg
xchg
push
fcomp
in
addr16
mov
mov
push
inc
(bad)
xor
push
push
in
fwait
not
out
or
fcomp
push
and
cmp
arpl
(bad)
ss
inc
popa
adc
call
loopne
sub
test
jmp
inc
dec
mov
cdq
or
pop
sub
cs
shr
pop
xor
or
cs
movs
adc
mov
dec
xor
xor
push
out
mov
cs
daa
lds
xor
sahf
iret
cmc
aam
xor
call
mov
adc
ret
aas
and
sub
neg
xor
inc
and
adc
push
popa
stc
scas
repz
jle
in
punpcklbw
pop
xor
pop
jne
inc
cmp
scas
in
arpl
add
imul
jo
outs
mov
xchg
out
fmul
aam
cmc
pcmpgtb
push
out
ret
(bad)
and
push
cmps
sbb
pop
xchg
leave
out
adc
ins
push
sbb
fisubr
pop
push
shr
pop
dec
cmp
add
aam
movs
fild
movs
lock
jle
cmp
mov
adc
pop
nop
or
add
dec
aad
stos
outs
mov
iret
push
jnp
jno
rol
sbb
lods
jae
cmp
aaa
sub
jnp
imul
in
nop
jmp
fsubrp
in
fistp
mov
movs
in
rcr
fs
mov
xchg
in
repnz
je
cwde
cmp
aad
add
in
test
(bad)
fnstsw
in
jecxz
or
add
int3
dec
adc
ss
jnp
xchg
mov
in
rol
aam
fs
test
rcr
adc
adc
mov
push
adc
inc
mov
out
divps
enter
sub
(bad)
inc
mov
daa
add
repnz
and
jns
mov
pop
mov
ret
sbb
in
dec
add
adc
xchg
ins
xlat
movs
adc
mov
push
fucom
dec
xchg
and
adc
ret
adc
retf
out
push
xchg
les
push
leave
sbb
adc
(bad)
adc
ja
int3
dec
xchg
outs
sub
add
adc
mov
popa
fwait
jb
ret
clc
dec
call
adc
sbb
clc
dec
sbb
cmp
rcl
pop
ret
mov
or
int3
outs
int3
cmp
sbb
cld
push
fbld
mov
es
xor
cmp
adc
mov
cmps
inc
into
jne
test
push
ret
fstp
adc
shr
push
mov
xchg
int3
mov
enter
call
cmp
out
jns
xor
sbb
mov
mov
rcl
xchg
push
dec
or
fist
mov
clc
xchg
lods
push
push
frstor
add
scas
sar
pushf
mov
scas
shl
icebp
cld
xchg
int3
dec
shl
xchg
int3
pop
mov
daa
iret
fsub
jmp
imul
mov
stos
mov
in
pop
imul
stc
pusha
cmc
cs
fistp
sbb
jnp
push
es
call
dec
popa
dec
ds
sub
mov
in
sbb
rcr
(bad)
sahf
ss
pushf
scas
mov
add
jo
mov
(bad)
sti
push
arpl
aaa
(bad)
lds
out
sub
push
xor
pop
push
imul
cmp
pop
cmp
pop
sbb
pop
mov
mov
jbe
mov
xchg
cmp
jg
adc
mov
mov
push
stos
inc
xor
clc
add
lods
loope
(bad)
mov
xor
out
pop
repnz
pop
push
xchg
(bad)
not
cwde
jle
call
add
jbe
or
dec
jno
mov
sti
test
jmp
inc
pop
xor
jnp
(bad)
cs
pusha
sbb
gs
and
dec
pop
leave
hlt
and
add
sbb
mov
mov
mov
mov
adc
scas
pop
adc
push
xlat
sub
in
or
and
add
jnp
sahf
inc
jl
es
inc
inc
out
retf
push
cmp
lods
(bad)
addr16
icebp
in
loope
inc
out
dec
xchg
mov
or
sub
into
dec
jo
popw
push
mov
fbld
mov
pop
push
shl
or
jno
cmps
or
mov
jb
sbb
fld
je
jns
jmp
mov
adc
lea
inc
retf
jo
int
pop
fsub
js
cli
pop
dec
cmp
inc
cmc
xor
cmps
cwde
js
cld
xlat
mov
mov
sbb
jnp
dec
aas
call
push
sub
out
push
jl
outs
aaa
movs
push
int3
pop
mov
in
pop
dec
ja
cld
cmp
repnz
movs
fneni(8087
call
ret
lods
push
pop
repz
mov
mov
cmp
pushf
shl
aam
in
and
movs
xchg
aam
mov
mov
pop
mov
xor
xor
(bad)
cmps
lods
fcomp
outs
or
shl
int
out
fwait
test
ds
pop
call
ja
sar
ds
add
pushf
cwde
arpl
rcl
leave
into
outs
cdq
retf
jnp
aam
cmp
or
dec
stc
outs
add
mul
adc
push
inc
mov
jg
mov
pushf
in
mov
sbb
xor
imul
inc
mov
mov
or
mov
xor
or
push
jmp
inc
call
out
retf
sbb
and
movs
mov
add
adc
cmp
and
pop
in
ficom
loope
scas
repz
or
cmp
inc
mov
js
jbe
adc
jo
sub
dec
es
fisttp
sbb
xor
fsubr
(bad)
scas
pop
es
xchg
aad
loop
sbb
repz
mov
xchg
fst
fcmovnbe
xchg
pop
adc
xchg
cdq
cld
nop
adc
push
clc
adc
inc
pusha
ror
jb
arpl
xor
fs
cmp
push
(bad)
sti
scas
loope
(bad)
dec
leave
gs
xor
mov
add
lods
les
aad
or
ret
jg
inc
enter
in
sub
aad
xor
dec
mov
repnz
scas
popf
fldcw
push
push
and
outs
pop
lahf
arpl
sub
shl
mov
repnz
out
shl
into
pusha
lds
pop
mov
jns
xor
pushf
call
pop
inc
sbb
jmp
int
cmp
ja
scas
mov
cmp
fisttp
dec
rcl
jge
or
adc
fcomp
hlt
pop
push
adc
push
cmp
loopne
adc
mov
sbb
jge
jmp
adc
sar
push
inc
loopne
mov
test
addr16
outs
inc
add
mov
xchg
test
xlat
imul
push
sub
div
sub
cmp
pop
lds
arpl
mov
lahf
push
and
scas
mov
and
sar
xchg
or
push
or
xchg
adc
es
in
(bad)
mov
fldenv
std
aad
pop
das
mov
dec
or
xor
push
aad
jnp
fldcw
in
repz
ret
rol
jno
and
movd
sbb
xchg
outs
popa
mov
inc
cmp
(bad)
and
mov
fdiv
out
pop
mov
sbb
jbe
lds
mov
push
adc
repnz
or
or
dec
or
pop
xchg
and
shl
fnstcw
xchg
cdq
into
mov
mov
add
aas
(bad)
into
push
pop
ss
jp
rcl
cli
push
jmp
sub
adc
jne
(bad)
addr16
push
sub
mov
gs
clc
loope
push
xlat
fs
inc
mov
aad
rcl
jb
jmp
test
dec
out
aas
jge
mov
pop
adc
aas
push
push
(bad)
fbld
shl
jbe
test
jmp
mov
aam
jge
int
pop
mov
adc
scas
cmp
cmps
mov
sub
xlat
dec
out
cli
jns
jg
cmp
pop
add
(bad)
(bad)
fldcw
push
aas
fabs
aas
mov
jge
clc
xchg
outs
gs
les
stos
push
xchg
repz
cvtpi2ps
adc
dec
sub
sahf
dec
mov
dec
lods
pop
sub
push
xchg
out
out
sbb
sub
and
push
(bad)
mov
test
shl
stos
add
aam
xor
mov
stos
or
push
sub
jp
sub
loopne
push
sub
mov
cld
ja
inc
sbb
cmps
icebp
adc
push
(bad)
aad
(bad)
push
mov
jge
int3
add
iret
cmc
sbb
int3
cdq
lock
jp
lods
inc
mov
fld
push
fsub
jle
xor
sub
push
mov
jmp
dec
mov
mov
shr
test
xor
push
sbb
xor
xor
mov
out
pop
fsubr
cwde
ja
hlt
xchg
mov
(bad)
hlt
loopne
mov
sar
(bad)
mov
dec
fnsave
xchg
mov
sbb
inc
adc
imul
sub
push
sar
cmp
sub
pop
bound
sbb
and
scas
jnp
cmp
mov
jb
aad
fcomp
cs
push
mov
fistp
ds
jmp
mov
ret
test
(bad)
jg
xchg
jnp
xchg
bound
int3
pop
arpl
ins
xchg
enter
call
fadd
pop
fnstenv
add
fbld
leave
cmps
popf
mov
stc
in
mov
movaps
push
mov
outs
call
scas
imul
jmp
mov
aaa
into
popa
jmp
dec
mov
movs
jl
mov
pop
inc
add
not
ins
fadd
iret
inc
cmp
push
ror
and
xor
fdiv
fistp
inc
test
outs
out
adc
mov
jae
icebp
adc
adc
movs
je
fimul
lods
dec
sub
imul
dec
mov
aaa
mov
xchg
test
ins
cs
add
sub
mov
js
xchg
mov
bound
push
cmp
sti
jl
ficom
daa
jno
or
inc
xchg
movs
or
call
push
aas
push
push
sub
sub
xchg
mov
adc
int
and
fist
add
and
repnz
fidiv
cmc
movs
push
scas
je
cli
add
in
pop
xchg
fcom
les
stos
call
sahf
(bad)
xchg
dec
in
xchg
or
sti
nop
dec
cmc
arpl
jle
jp
scas
mov
movs
xchg
pop
inc
pop
dec
fmul
rcr
xor
adc
in
add
(bad)
mov
sbb
rcl
mov
lds
fnstenv
aas
mov
sub
rcr
movs
or
mov
and
call
push
or
dec
push
xchg
xor
rcl
pop
xchg
mul
pop
bsf
xor
xchg
mov
ret
stos
xchg
mov
fimul
dec
xor
dec
mov
test
cmp
fcmovnb
cmp
mov
xor
pusha
stos
lock
inc
stos
(bad)
and
int3
cmp
mov
ins
ins
cmp
mov
dec
mov
iret
cmps
jg
push
pushf
pop
adc
std
push
jmp
sti
push
inc
xchg
call
sbb
adc
and
mov
mov
test
push
inc
aas
jnp
lods
aas
cwde
mov
cmp
xchg
stos
add
pop
mov
sub
fld
and
xchg
xchg
or
out
sub
and
aam
ins
add
inc
(bad)
jmp
out
dec
dec
lock
sbb
sbb
sti
(bad)
and
sub
ret
or
push
push
push
push
fcmovnbe
scas
addr16
test
dec
shr
dec
aaa
popf
retf
imul
repz
or
loopne
and
mov
xor
das
in
in
pop
xor
retf
stos
repz
lock
(bad)
push
xchg
aam
push
dec
jecxz
mov
xor
aam
xchg
stos
sub
add
fisttp
ror
mov
inc
fbld
adc
sbb
rcl
mov
inc
xchg
ins
lods
stc
push
dec
cmp
mov
icebp
add
ds
sbb
cmp
sbb
xor
sub
(bad)
dec
or
and
adc
jmp
retf
adc
mov
mov
loop
movs
cmp
sbb
iret
test
aam
jg
dec
scas
outs
leave
jge
sub
add
xor
sahf
or
addr16
push
scas
pop
cmp
fs
mov
pop
lods
pop
in
sub
push
sahf
jne
add
call
inc
mov
push
in
xchg
sbb
dec
xchg
(bad)
mov
lds
enter
mov
ret
mov
aad
add
test
push
xor
xor
mov
mov
mov
bound
jbe
sub
add
sub
sub
mov
push
hlt
call
jl
add
xchg
and
ins
in
jns
mov
les
scas
xor
push
adc
pop
xlat
mov
fild
sbb
test
repz
jle
mul
(bad)
iret
aam
mov
sti
in
mov
xor
pop
inc
in
push
inc
add
cs
daa
dec
sbb
sbb
pop
xor
and
rep
mov
and
push
mov
pop
dec
mov
cmp
int3
call
xor
inc
jno
jmp
ds
call
jecxz
sbb
inc
sbb
xchg
sub
daa
dec
mov
and
jecxz
jecxz
ins
cmp
fwait
cmc
and
sbb
or
and
inc
mov
jbe
(bad)
stos
imul
into
retf
jp
pop
dec
sbb
popa
imul
xor
mov
pusha
inc
push
call
mov
ficom
push
jne
sahf
or
dec
jmp
inc
push
pop
cmp
mov
adc
scas
sub
xor
scas
push
inc
mov
jnp
jge
fstp
repnz
sub
cmp
adc
test
dec
pop
xor
out
and
(bad)
push
movs
xor
in
push
pop
sbb
enter
cmp
cdq
sahf
nop
ror
mov
jg
fld
stos
cmp
mov
fwait
push
inc
call
popf
ret
(bad)
imul
and
popf
pop
shl
pop
(bad)
lods
adc
enter
mov
push
pop
dec
je
in
mov
test
js
pop
stos
arpl
sub
cmp
mov
jge
imul
ror
out
and
jbe
clc
dec
jmp
jne
daa
pop
sub
shl
gs
inc
in
jae
shl
jl
movs
pop
xchg
mov
inc
mul
push
push
ret
pushf
retf
call
adc
aas
aam
in
out
cli
aad
test
mov
in
cli
ins
stos
aad
inc
inc
test
pop
mov
xchg
sbb
jecxz
mov
cmp
retf
dec
jmp
or
and
outs
lods
nop
mov
xchg
mov
push
jns
inc
mov
in
scas
stos
push
enter
imul
in
dec
in
jg
add
out
addr16
(bad)
or
mov
sub
test
and
out
pop
aas
sub
test
lahf
mov
jno
mov
adc
xor
or
out
cmp
jle
mov
jns
inc
add
adc
xchg
enter
cwde
push
jp
push
test
inc
mov
retf
mov
dec
jecxz
pushf
imul
pop
jbe
cdq
pop
mov
out
loopne
pushf
repnz
cmp
cli
stos
inc
mov
pop
sbb
addr16
aaa
fs
pop
shr
rol
sbb
lods
mov
cmps
in
cmp
or
call
loope
and
xchg
mov
mov
inc
(bad)
jne
xchg
add
or
ja
cmps
xor
in
retf
std
mov
(bad)
nop
or
(bad)
fistp
(bad)
ficom
shr
push
(bad)
mov
xchg
(bad)
call
lea
ss
mov
fild
jb
cmp
adc
mov
iret
arpl
lock
jb
aas
scas
sbb
out
sbb
cmp
jmp
test
shl
cs
push
xchg
jl
sahf
cmp
sbb
cmp
cdq
sar
(bad)
dec
jecxz
jo
fdiv
cmp
stos
xchg
push
mov
mov
mov
retf
enter
mov
sub
pop
adc
xor
icebp
cld
inc
pop
xchg
push
lods
pop
loopne
push
dec
mov
loop
pop
push
out
nop
movs
cs
dec
pop
jecxz
movs
stc
and
add
leave
add
bound
jnp
push
test
pop
sub
dec
aam
mov
and
and
arpl
jle
adc
adc
mov
cmp
sbb
fld
xchg
test
popa
sub
and
push
sbb
ret
or
sub
cmps
popa
jnp
sub
mov
out
in
(bad)
jae
and
out
gs
or
in
outs
call
sti
ret
imul
popa
inc
push
xor
jle
cld
call
xchg
ja
and
in
mov
lahf
sub
inc
xchg
imul
movs
jo
into
push
retf
or
pusha
push
fmul
ret
sbb
mov
pop
(bad)
jge
sbb
(bad)
imul
mov
pop
mov
mov
inc
sub
jmp
fldenv
enter
jp
add
dec
cli
jae
lahf
dec
and
cwde
ss
ret
into
adc
test
add
test
mov
aad
out
loop
jmp
nop
sub
leave
scas
adc
call
xor
xchg
sbb
pop
mov
xchg
pop
retf
pushf
inc
pop
jge
in
dec
mov
mov
movs
out
jne
push
mov
test
jne
mov
mov
(bad)
and
and
jmp
xchg
aad
retf
in
cmp
ds
sub
add
gs
xchg
loop
inc
pop
sbb
mov
ror
imul
pop
cld
pop
cmp
xchg
fimul
jno
mov
cwde
pop
cmp
dec
mov
sub
mov
sub
das
mov
jp
aas
add
sti
lahf
add
pusha
or
popa
(bad)
call
scas
iret
push
hlt
aaa
sub
cmp
outs
rcr
or
cmps
jecxz
pusha
add
xchg
js
aas
mov
jo
fnstenv
imul
jns
or
in
xor
add
xchg
inc
dec
inc
fidivr
stc
dec
mov
cmp
pop
not
ins
test
and
mov
xchg
pushf
mov
hlt
and
in
add
push
stc
aad
enter
jbe
mov
das
jg
imul
add
sub
sahf
adc
movntps
push
lock
repnz
jb
sbb
xlat
mov
jge
push
or
setbe
inc
in
adc
bound
jo
stos
push
shl
movs
xor
push
push
mov
add
ss
arpl
cld
enter
cmc
lods
xor
fild
test
test
sub
mul
pop
aam
int
js
lods
push
scas
sbb
movs
pop
lds
fwait
shr
xchg
and
push
jne
das
and
adc
fwait
xor
cdq
jb
int
jmp
add
icebp
lods
push
jb
pop
cld
bound
ficom
xchg
mov
jae
cmp
mov
lahf
arpl
dec
std
pop
jmp
nop
pop
or
mov
add
add
popf
jmp
popf
cmp
repz
add
push
stc
stos
xchg
push
add
sahf
pop
pop
scas
fisubr
loop
jge
push
sub
fist
jmp
rcl
mov
js
xor
inc
add
jle
jo
lock
aad
popa
lock
mov
sti
pop
pop
xchg
cmp
jae
jno
or
jmp
mov
out
loop
dec
repnz
aam
mov
pop
and
jecxz
dec
call
adc
std
jmp
or
inc
dec
lock
inc
pusha
in
jge
sub
inc
sahf
sahf
stos
test
pop
jecxz
jnp
cdq
out
sbb
sti
jle
adc
push
(bad)
clc
or
mov
retf
repz
inc
cmp
sbb
push
or
adc
sbb
add
mov
mov
jecxz
sub
mov
xchg
pop
or
js
hlt
enter
ret
fnsave
pop
aad
sti
repz
push
cmp
xor
imul
sub
or
fstp
pop
icebp
cdq
popf
jnp
adc
fs
fcmovb
fsub
in
xchg
int3
pop
sbb
sbb
pop
repnz
outs
mov
aaa
dec
jbe
cmp
retf
cmps
ins
inc
dec
cmp
xor
aad
add
cmp
pop
mov
scas
into
shr
loope
dec
xor
jns
stc
and
retf
inc
or
sbb
jbe
into
leave
pop
lock
adc
imul
sbb
xor
int3
loopne
mov
dec
and
cmp
dec
and
cmps
mov
mov
adc
push
inc
lods
nop
sbb
sub
cmp
mov
push
rcl
into
ja
or
scas
les
fld
push
pusha
mov
(bad)
mov
les
ret
xor
adc
js
lods
cld
xchg
into
xchg
out
call
and
cs
bound
push
mov
stc
pop
pop
fchs
pop
ss
movs
dec
sahf
movs
cmc
sbb
mov
sub
outs
stc
add
sbb
outs
jbe
iret
and
push
inc
retf
jl
outs
rcr
mov
fcom
xchg
(bad)
jne
popa
aam
test
sbb
leave
pop
sbb
lods
dec
push
es
jne
dec
and
ins
arpl
dec
mov
and
pop
xchg
sti
imul
(bad)
xor
(bad)
jbe
dec
dec
pushf
or
retf
mov
jecxz
into
imul
popa
and
cmp
or
inc
sbb
xor
rcr
arpl
mov
mov
xor
ja
inc
inc
out
aad
mov
jg
push
mov
mov
pushf
xor
xor
dec
mov
dec
fst
test
jb
inc
jne
je
add
xchg
push
jle
xchg
xchg
mov
cli
fcomip
ja
adc
xor
fld
jne
jnp
not
(bad)
fist
iret
bound
mov
jae
nop
movs
xor
cmp
jo
cmp
jno
sbb
daa
(bad)
fisttp
xlat
adc
outs
test
cmp
test
push
xchg
lock
gs
xlat
pop
mov
mov
pop
je
push
adc
mov
cdq
push
mov
jns
mov
xchg
add
sbb
jp
adc
push
clc
leave
jo
or
lods
int
ret
add
adc
fmul
dec
jmp
lods
icebp
cmp
jns
je
ret
imul
mov
out
test
cmps
call
xchg
mov
cs
imul
lods
adc
and
and
lock
pop
jge
daa
or
pusha
mov
mov
mov
mov
stos
xor
loop
xchg
rcl
xor
bound
xchg
mov
mov
pop
fsubp
leave
inc
xchg
pop
shr
sbb
lea
dec
sar
xchg
jmp
and
push
lock
fldcw
or
fadd
sub
daa
push
mov
je
in
or
and
fldpi
cmp
push
mov
inc
popa
or
jmp
xchg
xlat
jmp
(bad)
fmul
jmp
cmp
sti
jbe
das
(bad)
jo
lock
xchg
jp
push
cld
inc
add
push
lods
(bad)
stos
cmps
xchg
cmp
test
jb
bound
mov
and
pop
sub
cli
icebp
loopne
jb
jne
ins
int
inc
mov
mov
js
xchg
cmp
iret
mov
outs
bound
cmp
sbb
clc
mov
ins
mov
les
fst
xor
xchg
push
xchg
jne
test
xchg
cmp
bound
adc
lods
ret
mov
jp
inc
dec
stos
cdq
pop
test
ret
mov
mov
pushf
jns
lea
pop
inc
retf
or
(bad)
cmp
imul
fimul
jge
dec
mov
mov
ficomp
push
mov
aas
out
xchg
adc
dec
test
xor
and
(bad)
adc
test
add
mov
or
addr16
in
adc
(bad)
ins
and
cmp
jbe
je
call
popf
adc
cmps
push
out
sbb
xchg
arpl
push
mov
rcr
out
adc
stc
sahf
cld
xor
into
push
sbb
lods
mov
push
mov
push
ins
pop
adc
push
jnp
jae
add
and
fwait
inc
ins
test
jmp
mov
jbe
cmps
push
jno
loopne
cld
in
sub
aad
shl
push
dec
out
jecxz
test
fist
retf
lock
mov
sbb
jecxz
leave
cmps
mov
scas
jmp
dec
(bad)
neg
mov
shl
(bad)
jecxz
test
sub
cmp
jo
mov
int
push
mov
ja
call
cmps
inc
out
xchg
or
push
push
push
lods
ret
loopne
xor
xor
inc
enter
xor
ja
stos
loope
xchg
mov
sub
sbb
sbb
sar
inc
adc
add
xor
paddw
cs
push
aad
pop
push
sar
cmp
sub
or
daa
js
scas
(bad)
test
fwait
ja
fld
rol
mov
push
dec
jl
cmc
iret
mov
xchg
mov
lea
inc
mov
or
inc
pop
mov
xor
fistp
xor
add
addps
aas
call
and
inc
lahf
mov
mov
mov
dec
mov
test
inc
or
xchg
push
std
pusha
sbb
xor
mov
xchg
inc
xchg
cmps
inc
in
nop
mov
push
lods
or
lds
ds
sub
aam
sub
out
pop
sbb
or
arpl
jg
out
inc
push
inc
ja
dec
cmp
out
push
or
jg
ja
push
popf
jmp
cmc
sub
mov
dec
dec
xor
cs
mov
xlat
in
loope
mov
inc
test
ficomp
xor
aad
cmps
movs
retf
add
icebp
into
push
push
dec
popf
inc
loope
call
mov
xchg
loop
xor
popa
jne
arpl
inc
ja
push
rol
lods
sbb
cmp
sub
jg
ret
sahf
or
adc
inc
fsub
push
icebp
adc
mov
in
mov
cmp
int
pop
stos
in
inc
or
or
push
jp
xchg
mov
sahf
push
pusha
pop
movs
inc
movs
push
xchg
sahf
push
fwait
enter
xor
(bad)
mov
bound
jge
shl
(bad)
jmp
or
xchg
lods
scas
sub
mov
mov
adc
mov
outs
fsub
jl
inc
pop
outs
popf
jne
ds
outs
ja
lea
cwde
aas
fidiv
dec
cmp
sbb
add
jne
or
cmp
mov
arpl
mov
xchg
push
cdq
push
(bad)
mov
ins
aaa
sbb
pop
mov
jge
push
jmp
pop
adc
push
dec
daa
dec
dec
jb
lock
stos
add
aas
jbe
inc
inc
inc
cmc
mov
shl
sbb
jne
push
out
sbb
adc
pop
and
aaa
fisttp
pop
ficom
sub
pop
dec
in
loope
xchg
mov
inc
fcomp
and
push
mov
outs
test
fcmovnu
call
in
mov
xor
and
jo
xchg
test
scas
xor
or
mov
xor
jg
inc
cld
fisub
xor
in
and
xor
pushf
cmps
mov
jnp
xchg
and
pop
or
push
adc
dec
aaa
mov
scas
push
bound
repz
icebp
xor
sbb
mov
repnz
or
stos
cmp
loope
pop
les
jg
cmp
inc
pop
cmps
fs
jmp
out
cmc
cmp
mov
mov
push
enter
call
call
in
jae
mov
in
repz
rol
cmp
loop
stc
imul
ins
out
icebp
(bad)
sub
mov
inc
sbb
(bad)
clc
mov
jmp
dec
loopne
pop
loope
adc
(bad)
and
adc
bound
mul
hlt
push
scas
rol
pop
pop
fs
es
jmp
jle
adc
jns
out
mov
(bad)
es
arpl
repz
sub
test
fistp
push
mov
aam
test
ficomp
shr
out
aas
sbb
in
in
pop
and
xchg
xchg
mov
int3
sub
ins
push
cmp
arpl
cmps
movs
(bad)
in
xor
cmp
sbb
jmp
push
stos
out
xchg
arpl
outs
add
(bad)
cmps
dec
test
cs
sbb
pop
push
lods
les
lock
dec
xchg
scas
mov
mov
inc
dec
mov
cli
cwde
fcmovne
or
cmp
ret
(bad)
imul
retf
and
(bad)
add
mov
cmp
test
xor
pop
lahf
sahf
pop
in
pusha
push
mov
mov
test
arpl
inc
xchg
adc
push
push
xor
mov
ficomp
pop
pop
sub
sub
leave
cmp
daa
xchg
int3
ficomp
xchg
push
push
adc
jmp
sub
sub
test
out
mov
rcr
fdivrp
in
(bad)
sbb
or
out
or
in
adc
add
inc
out
aas
jp
test
call
test
fsub
nop
push
push
mov
shr
sar
mov
cmp
xor
or
or
fldcw
and
ret
test
mov
cmp
mov
enter
inc
ficom
jbe
mov
push
mov
mov
xchg
xor
sbb
jae
push
inc
repz
inc
pusha
lahf
inc
mov
imul
jmp
jle
fsubr
mov
stos
inc
dec
ins
xchg
push
jnp
in
test
mov
call
pop
aam
add
add
push
push
pop
xchg
and
sbb
loopne
popa
cmp
fild
pop
xchg
jne
adc
out
dec
jns
jns
xor
mov
xlat
jne
popa
push
push
retf
test
dec
cs
adc
add
dec
ins
sub
or
jne
dec
ja
out
xchg
lods
das
daa
mov
sahf
aaa
clc
in
cmp
in
cli
mov
rol
cmp
or
jae
xor
leave
jmp
leave
outs
rcl
stos
clc
rcl
push
lea
jne
je
in
int3
adc
pop
sbb
nop
iret
jmp
lods
es
pop
xchg
pop
(bad)
push
movs
pop
fucomi
(bad)
cld
out
or
call
call
or
push
xchg
jecxz
lahf
sbb
lahf
out
loopne
inc
push
lahf
lods
jmp
cmps
enter
movd
mov
fwait
rcr
pop
mov
cmps
adc
jno
imul
jno
cmp
pop
ja
jmp
cmp
sub
mov
outs
call
or
or
and
jns
loopne
mov
adc
lea
dec
push
fwait
sbb
lock
pushf
movs
int3
jo
sub
mov
mov
mov
add
inc
fs
pop
jl
aas
xlat
loop
push
call
cmp
sti
inc
lods
in
leave
dec
es
mov
aaa
xchg
ret
pop
pop
sub
sub
sub
stos
call
mov
xor
lea
data16
mov
out
add
std
and
adc
leave
xchg
jo
dec
or
outs
je
aam
mov
push
mov
clc
ret
test
shl
pusha
and
fwait
retf
fs
pop
pop
mov
mov
push
pop
add
or
ins
add
inc
push
mov
outs
xor
pop
or
sub
xor
dec
and
and
mov
push
ret
rcr
sub
mov
(bad)
push
call
xlat
test
mov
jge
xchg
(bad)
fcmove
adc
jl
sbb
or
popf
cs
iret
out
mov
push
push
pop
es
loop
cli
jle
gs
sub
pop
xchg
or
sbb
pop
jne
retf
jl
sahf
xchg
jecxz
and
dec
push
pop
mov
test
push
jo
xor
(bad)
adc
or
xchg
iret
and
aad
xor
jecxz
dec
push
xor
xor
lods
pop
inc
mov
jge
and
pop
cmp
pop
xchg
enter
sti
pop
(bad)
mov
pop
stos
or
fstp
ret
cld
cmp
xor
pusha
add
dec
mov
xor
lock
jl
sub
dec
ins
int
mov
je
mov
cmp
lea
fsub
sbb
pop
scas
ret
mov
and
lds
xor
sub
jmp
jno
add
mov
push
add
repz
in
fucom
lds
(bad)
fbld
and
scas
cmp
dec
xor
add
dec
jmp
addr16
xchg
push
data16
stos
adc
mov
jo
aam
cmp
mov
jne
shl
(bad)
ds
out
sahf
mov
(bad)
cwde
sti
(bad)
sbb
adc
xor
lds
arpl
xchg
shr
stc
fadd
stos
(bad)
mov
mov
jbe
into
jns
push
cmc
xchg
xor
ret
mov
lock
ja
mov
add
sar
arpl
and
imul
aad
push
xor
xor
rcl
pop
add
adc
sub
cmp
mov
pop
test
ss
jo
(bad)
nop
pop
shl
mov
mov
push
mov
xchg
das
aas
imul
pop
pop
inc
add
add
call
mov
out
dec
cdq
jp
jmp
aas
ret
xor
lahf
sbb
xor
push
cmps
add
cmp
shr
ret
dec
nop
fcmovnbe
retf
inc
pop
in
push
sbb
loop
inc
in
add
sub
fnstcw
aam
out
sub
stos
lea
lods
cmp
pop
and
call
jge
out
div
mov
add
icebp
shr
aad
dec
sub
push
mov
push
pop
or
adc
pop
mov
in
jo
push
pop
lahf
lahf
daa
fsub
in
stos
push
dec
adc
scas
add
pop
dec
mov
mov
repz
xchg
aam
out
lods
cmps
add
jns
ret
push
(bad)
js
or
pushf
gs
jnp
lds
data16
jp
(bad)
fldz
sub
test
ins
xchg
dec
push
lods
pop
clc
scas
jl
nop
mov
lea
cmp
jmp
int
adc
sbb
and
inc
dec
mov
dec
sub
mov
dec
repz
aaa
xchg
sbb
mov
push
and
pop
in
sub
push
out
into
call
imul
sti
push
fs
add
popf
mov
push
rol
dec
mov
fisub
sub
mul
sub
in
xchg
fsubrp
ja
sub
sub
nop
(bad)
mov
adc
jmp
imul
je
mov
scas
mov
and
jnp
cmp
pop
xor
std
lods
popf
jmp
and
call
and
inc
(bad)
mov
bnd
mov
adc
rcl
shl
imul
lods
neg
add
stos
retf
gs
scas
adc
shl
jne
imul
gs
mov
mov
ins
inc
cdq
loope
aaa
cmps
pop
lock
push
aam
test
or
daa
nop
cmp
in
xchg
sub
push
mov
sbb
lahf
add
mov
mov
adc
cmp
std
leave
popa
add
push
js
add
push
scas
addr16
add
out
adc
in
mov
dec
mov
enter
jmp
jl
test
shr
fdiv
jmp
lods
jbe
outs
loope
inc
pop
ret
pushf
arpl
and
mov
lea
dec
xchg
adc
cmp
clc
sub
inc
mov
stos
mov
inc
pop
jl
jg
(bad)
imul
push
cdq
ret
and
outs
scas
outs
sub
mov
push
in
mov
inc
lock
in
adc
imul
inc
(bad)
mov
dec
dec
cmps
ins
xor
repz
and
sbb
or
ja
jmp
xor
jno
les
nop
lea
and
add
shl
lds
leave
int3
lods
mov
jnp
and
add
sar
lds
mov
addr16
cmc
ret
adc
or
mov
cmp
movs
in
and
fist
push
pop
push
push
and
call
or
dec
mov
sub
inc
add
jb
add
sub
xchg
push
and
cmp
out
shr
(bad)
loop
pop
repz
jno
push
or
pop
mov
aas
sub
add
es
sub
xchg
mov
or
ret
fs
loop
addr16
cli
push
sub
cmp
je
sub
in
cmp
mov
sbb
lods
imul
xchg
sub
adc
or
push
push
fisubr
lea
repz
mov
mov
mov
sub
inc
aam
arpl
lods
sub
lods
sbb
cwde
shr
inc
jne
cwde
pop
into
sbb
inc
pop
mov
xchg
pop
mov
dec
xor
mov
cmp
xchg
cdq
sbb
push
test
out
pop
push
mov
ja
xor
cmp
xchg
xchg
int
cmp
cdq
fxch
shl
add
int3
fild
cld
add
outs
mov
icebp
mov
push
xor
ret
xor
and
cmp
icebp
cmp
call
mov
sbb
mov
addr16
xor
inc
xor
cmp
or
pop
or
ds
or
jo
sub
movs
pop
outs
xor
inc
cmps
fcmovnu
lods
retf
sub
lods
mov
sahf
or
mov
add
mov
mov
and
fmul
jns
push
fld
jmp
and
clc
adc
ss
sub
mov
sub
arpl
mov
retf
push
test
xchg
or
or
pop
and
jmp
fwait
loopne
add
loope
inc
jo
lea
jmp
adc
adc
dec
mov
jb
sbb
pop
jmp
and
ins
jle
jb
std
cli
mov
mov
xlat
pop
pop
and
nop
cmp
enter
cmp
dec
mov
ins
iret
pop
fdiv
stos
sahf
push
sub
jle
mov
in
or
push
dec
fwait
mov
pop
adc
mov
jo
fcom
jnp
popa
sub
int
mov
mov
mov
jg
pusha
aas
out
out
pop
int3
std
xchg
sub
dec
add
adc
mov
js
pop
mov
cmp
gs
dec
(bad)
out
shl
inc
and
push
adc
shl
out
out
int3
pop
jmp
sbb
cmps
inc
(bad)
pop
test
pop
cdq
xlat
popa
xor
xor
pop
jmp
das
retf
jnp
add
movs
push
or
les
jae
(bad)
fidiv
jno
int3
push
push
push
mov
mov
mov
es
or
sub
stos
ds
mov
pop
pop
ret
mov
sub
adc
cdq
mov
out
xor
lock
mov
xlat
adc
xor
pop
mov
mov
inc
dec
sbb
outs
nop
cmp
pop
movs
fcmovu
pop
inc
mov
push
(bad)
xchg
push
fidiv
ins
mov
xchg
push
enter
cmp
mov
cmp
xor
xor
(bad)
xor
nop
push
cmp
xor
dec
imul
ss
ds
cli
fadd
jg
aad
cld
push
data16
mov
pusha
xlat
scas
push
retf
cmc
and
mov
int3
(bad)
lock
xchg
adc
pop
or
mov
jle
bound
push
movs
aas
mov
arpl
cmps
xchg
adc
std
loopne
inc
movs
sub
aad
gs
add
push
pcmpeqb
(bad)
dec
data16
in
lods
pop
mov
add
test
lods
sbb
dec
mov
add
enter
lahf
sub
jg
das
adc
inc
fisttp
pop
in
push
sub
xor
mov
adc
add
out
or
xchg
mov
retf
retf
test
push
dec
popa
cdq
jns
mov
repz
fwait
popf
pop
add
sbb
and
jno
aad
xor
push
aad
dec
in
adc
fidivr
dec
add
mov
call
loope
(bad)
loopne
mov
jne
in
add
int
faddp
cli
into
inc
stos
xor
rcl
push
inc
xor
inc
sub
out
ins
sub
pop
add
xchg
retf
add
daa
(bad)
fadd
or
push
sub
dec
scas
inc
int3
pusha
jl
in
adc
adc
xor
mov
adc
jl
sbb
lea
ins
in
push
sbb
call
pop
ret
daa
std
stc
pop
call
sbb
cmps
jge
int
dec
sub
dec
sub
xchg
jmp
mov
mov
mov
cmc
repnz
jo
xchg
or
jno
and
sub
shl
pop
push
xchg
ss
mov
jmp
ss
sti
sub
jmp
sbb
scas
dec
mov
jo
lds
mov
pop
dec
mov
sub
in
push
push
push
mov
adc
ins
xor
mov
retf
push
add
push
sar
call
addr16
adc
repz
cmps
fnstcw
es
addr16
mov
jecxz
dec
sub
ret
repz
cmp
push
stos
cmp
adc
push
cmp
mov
fistp
shl
retf
push
dec
jge
add
movs
mov
push
pop
mov
fcom
mov
or
pushf
mov
test
adc
inc
pop
rcr
pop
std
retf
inc
sub
or
jnp
mov
hlt
push
add
fstp
jge
shl
outs
jb
mov
or
jb
jl
imul
jo
gs
ret
(bad)
push
jp
pop
pop
fidiv
rcl
gs
inc
cmp
dec
push
out
sbb
jl
ins
in
(bad)
int
lods
mov
xchg
mov
pop
jb
sub
nop
fisub
imul
jbe
cmp
cmc
inc
pop
xlat
call
jecxz
ss
outs
mov
ins
shr
push
call
outs
retf
or
fucomi
jmp
adc
sub
sub
mov
mov
inc
mov
mov
(bad)
pop
xor
cwde
ins
aas
xchg
mov
xor
inc
dec
imul
retf
jp
icebp
out
adc
xor
sbb
retf
enter
into
inc
popa
mov
pop
xor
arpl
add
and
neg
scas
adc
xchg
or
inc
mov
outs
mov
aad
mov
vcvttpd2dq
inc
adc
add
nop
mov
mov
push
xchg
mov
sub
inc
mov
ds
cli
arpl
dec
sar
adc
mov
cmp
pushf
inc
int3
dec
in
cli
jge
out
movs
popf
hlt
and
or
outs
cmc
and
xchg
jecxz
jp
mov
xor
mov
dec
jg
sub
mov
sti
ret
(bad)
pop
lds
les
fwait
jmp
push
aaa
pushf
inc
or
jle
sbb
push
stos
fsubrp
in
dec
jno
mov
add
out
push
or
stos
ins
ficomp
cmc
mov
stos
cmc
mov
stos
add
inc
retf
jbe
outs
mov
(bad)
arpl
call
cli
out
call
cs
mov
xor
mov
mov
xchg
pushf
ss
inc
rcr
aam
xor
mov
sub
mov
cmp
(bad)
int
pop
cld
in
fldl2t
lea
push
cvtpi2ps
loop
and
mov
sbb
cli
xor
inc
in
mov
lahf
xor
pop
not
out
leave
inc
cdq
rcr
push
mov
bnd
stos
sub
push
or
jno
pop
aam
int3
out
call
fild
das
lods
inc
xchg
dec
int3
push
outs
je
int
ret
arpl
(bad)
pop
cwde
sbb
push
retf
xor
push
fs
je
dec
(bad)
stc
rcr
or
mov
xchg
jmp
lds
jne
lods
fistp
out
or
out
jmp
mov
pop
jbe
sbb
push
push
mov
jl
jae
adc
daa
add
push
adc
cmps
lods
pop
add
mov
aad
leave
pop
inc
nop
push
xor
mov
loopne
xchg
call
lods
jecxz
mov
call
inc
repz
sbb
push
or
into
(bad)
in
xchg
dec
mov
jmp
out
inc
pop
lods
ins
add
imul
call
les
mov
pop
shl
cmps
call
cmp
jo
adc
sahf
add
repnz
add
jne
xchg
add
jno
je
add
stos
mov
xchg
pop
daa
fistp
mov
enter
lds
sahf
mov
pop
mov
mov
jae
fcomp
data16
call
fs
cdq
dec
ins
inc
push
test
pop
jecxz
jl
icebp
dec
push
pop
xor
mov
mov
mov
dec
xchg
add
pushf
pop
mov
movs
outs
add
adc
in
or
test
test
(bad)
or
inc
xor
sbb
call
adc
iret
cmp
shl
aam
jo
pop
pusha
sbb
nop
pop
mov
(bad)
cmp
ret
imul
push
xchg
hlt
sbb
out
sbb
test
add
lea
(bad)
in
inc
adc
into
jb
push
or
stc
in
xchg
loop
jno
inc
add
cmp
je
xor
loope
(bad)
adc
pushf
dec
div
jne
ficomp
sub
mov
mov
es
push
cdq
jp
mov
mov
pop
mov
dec
push
(bad)
sbb
ret
aam
sar
xchg
mov
fs
mov
or
iret
mov
xchg
arpl
mov
adc
in
mov
mov
retf
jae
cmps
xor
xchg
shl
(bad)
(bad)
lock
stos
mov
or
cmp
mov
pusha
outs
mul
cmp
or
cmp
adc
dec
jl
jge
les
jl
sbb
mov
mov
jae
stos
rcr
jecxz
add
hlt
xchg
mov
pusha
cmp
popf
mov
(bad)
mov
adc
dec
pushf
pop
popa
jp
(bad)
into
xor
jge
ss
repz
push
fdiv
dec
test
xchg
sbb
adc
out
scas
scas
and
movs
mov
es
add
inc
mov
jb
fsubr
cmp
pop
jmp
cmp
mov
jecxz
movs
loope
ins
inc
rol
jg
retf
or
push
adc
ret
js
outs
fdivr
in
cmps
push
pop
rol
mov
xor
mov
fdivr
jle
lds
icebp
loope
lods
loope
ins
fisttp
mov
sbb
outs
fnstsw
(bad)
mov
lock
sbb
xchg
inc
jge
adc
push
pop
xor
ins
sub
fadd
mov
(bad)
mov
pop
test
lods
int
fsub
dec
movs
rol
inc
pop
sbb
and
mov
(bad)
push
ror
(bad)
or
icebp
xor
pop
fild
mov
aaa
test
cmp
mov
stc
push
and
imul
int3
inc
xchg
or
(bad)
xor
sub
fiadd
cld
xchg
jbe
adc
mov
jg
mov
cmp
and
popa
ins
sar
hlt
adc
and
or
mov
in
xchg
inc
adc
stos
pop
mov
aam
sbb
sbb
sub
pop
jmp
ds
cmp
imul
not
sub
mov
adc
pop
xor
imul
mov
xor
mov
test
mov
call
add
sbb
and
call
aaa
jb
xchg
clc
ins
jns
mov
lods
and
sub
push
or
xchg
enter
lds
sbb
sbb
int3
cdq
mov
movs
sub
push
loop
hlt
movs
imul
bnd
mov
stos
pop
into
sub
test
cmp
and
mov
inc
popa
popf
(bad)
and
fcmovbe
and
es
cmp
sbb
dec
pop
lock
cmp
lea
add
adc
aam
jb
jno
fcmovne
push
xchg
aas
imul
fld
lds
stc
push
mov
js
stos
dec
sbb
sub
adc
inc
push
sbb
sbb
push
(bad)
jmp
dec
push
fisttp
add
push
(bad)
inc
and
imul
lods
mov
shl
add
test
xor
stos
pop
pop
push
sbb
pop
dec
(bad)
xor
out
popf
pop
aam
sbb
call
sub
sti
jne
imul
cli
test
and
inc
je
pop
add
add
fistp
cli
in
cmps
pop
jp
pop
or
add
in
loop
inc
cmp
mov
enter
dec
sub
push
neg
mov
sub
into
cmp
loope
xlat
sbb
mov
out
push
lods
mov
es
retf
push
cmp
mov
jl
ss
mov
mov
rcl
dec
cmp
pop
jo
add
pop
xchg
jnp
in
test
leave
inc
int3
daa
out
retf
sub
out
int3
in
cld
sbb
xchg
ds
dec
and
mov
pushf
xor
adc
sti
sub
mov
jmp
test
scas
hlt
adc
adc
xor
add
into
pop
dec
cmp
movs
jnp
push
push
dec
repz
les
xor
push
pop
test
mov
pop
jecxz
iret
xor
sti
mov
mov
jmp
push
repz
jmp
lods
in
aad
or
je
cmps
dec
inc
cmp
xchg
sub
ins
ret
push
push
enter
adc
lea
test
das
mov
pop
(bad)
(bad)
dec
movs
test
xor
in
pop
mov
inc
push
push
cmp
out
cmp
mul
cld
sar
pushf
mov
ss
sub
push
punpckhdq
ins
xchg
out
mov
enter
leave
cmp
fst
mov
xor
pop
xor
pushf
data16
pop
fnstcw
loop
mov
fsub
fild
lea
js
mov
test
mov
inc
xor
add
xor
inc
fst
out
xor
dec
xor
and
xchg
mov
mov
xor
scas
xor
movs
xchg
or
dec
xor
mov
shl
sahf
mov
fsub
jns
fdivr
je
fwait
movs
and
pop
mov
lods
mov
jne
outs
mov
inc
pop
int3
jns
cmp
sub
cmp
out
leave
stos
ins
mov
shr
std
aaa
fprem
cs
pop
add
rol
je
adc
aas
cmp
xor
jbe
jbe
sbb
fcmovb
dec
aad
ins
xchg
ja
ret
cmc
ds
mov
push
pop
mov
es
loope
or
es
sbb
dec
cmps
ret
mov
push
mov
mov
jbe
cmp
xchg
or
xor
in
(bad)
call
stos
ror
inc
push
inc
pop
add
jae
jg
data16
or
or
div
dec
popf
std
fld
mov
cld
push
cmp
sar
in
imul
and
(bad)
push
(bad)
std
inc
scas
mov
jo
sbb
push
adc
or
out
enter
dec
mov
loope
adc
rcr
test
pop
mov
pusha
mov
stos
cdq
adc
je
test
test
mov
es
(bad)
inc
mov
add
or
loop
inc
pop
pop
mov
(bad)
nop
jle
es
(bad)
rcr
pop
not
shl
out
lds
push
out
aas
cdq
jmp
jmp
aam
add
mov
retf
jns
add
rcl
outs
cmp
sahf
int3
lock
dec
pusha
(bad)
xchg
add
push
cmp
push
lds
or
dec
cmps
fnstenv
sbb
out
lods
mov
retf
loope
mov
out
cmp
mov
js
daa
cmp
ds
xchg
dec
fsub
sub
cmp
or
cdq
rcl
mov
pop
ror
scas
test
sub
or
fnsave
jmp
xlat
sub
adc
outs
mov
ins
mov
stos
call
sbb
call
or
(bad)
sub
push
mov
or
sbb
mov
or
(bad)
lea
mov
fwait
push
int
jle
scas
lahf
add
add
xchg
mov
dec
ins
scas
add
push
and
ficomp
into
jmp
clc
mov
shl
xchg
(bad)
xor
les
inc
adc
or
ror
leave
lods
and
mov
dec
fisub
jmp
xchg
pop
ret
ret
(bad)
hlt
cmc
cmc
inc
mov
jg
push
add
movs
mov
push
fistp
inc
push
call
sub
add
or
and
push
jl
xchg
or
sbb
cld
les
and
and
rcl
in
mov
dec
loop
sar
xor
pop
inc
inc
push
mov
retf
dec
ret
shl
in
or
icebp
mov
xor
ins
std
cmp
leave
shl
jbe
pushf
cmps
adc
mov
retf
aad
fwait
rcr
pop
pop
sbb
sbb
jbe
lea
cld
xchg
and
add
push
nop
fild
ror
mov
std
fs
mov
or
jle
aad
pop
mov
stos
cmp
jmp
je
cs
dec
je
inc
call
mov
add
or
rcl
imul
out
pop
jns
sub
sbb
js
jg
in
movs
xchg
call
xchg
xchg
xor
scas
jbe
push
mov
pop
and
call
lods
test
mov
jle
xor
adc
cmp
xor
stc
gs
inc
shl
dec
xor
xchg
pushf
adc
jno
loope
std
pop
popf
mov
fidivr
dec
arpl
cmp
push
lods
pop
dec
in
stos
fldenv
(bad)
sti
ds
cli
imul
ror
jge
mov
mov
xchg
frndint
jo
jmp
pushf
add
(bad)
dec
mov
rol
test
(bad)
xlat
or
add
(bad)
cli
or
and
push
mov
retf
dec
inc
fst
mov
(bad)
push
and
stos
ret
scas
adc
neg
ror
sbb
test
dec
push
mov
mov
push
mov
sub
ss
mov
(bad)
add
pop
pop
pop
xchg
or
(bad)
mov
es
inc
add
aas
imul
shl
or
jb
push
mov
pop
xchg
add
mov
xchg
and
jmp
sbb
cmp
push
mov
arpl
inc
pop
dec
lea
imul
pop
loopne
ret
mov
xor
in
ins
ja
pop
sbb
push
mov
sub
call
push
sahf
rcr
cmc
mov
xor
and
sbb
cmp
test
adc
stc
mov
movs
or
push
mov
arpl
mov
xchg
inc
test
dec
jne
sub
es
adc
cmp
add
out
adc
fst
gs
sub
push
jae
sub
jl
cmp
loopne
and
cli
es
sub
mov
xchg
popf
adc
stc
inc
pop
mov
add
inc
or
movs
out
mov
retf
fwait
add
cmp
in
and
cli
add
int3
dec
popa
cmp
fisub
adc
mov
aas
ins
xchg
mov
cs
(bad)
clc
lds
push
and
and
mov
je
xlat
into
or
je
or
xchg
je
loope
in
call
clc
rcr
shr
cld
xchg
cmp
adc
cld
dec
xor
and
inc
ins
ins
pop
pop
mov
outs
pop
fstp
inc
repz
int
sbb
inc
mov
sbb
xor
or
cli
aas
in
mov
stos
femms
push
fdiv
mov
fistp
pop
fadd
jnp
xor
xor
ins
cwde
jmp
or
add
(bad)
sub
test
jne
movs
sbb
pop
movs
fnstcw
or
cmp
and
push
ins
add
mov
aas
pop
sub
cmp
in
test
add
aad
lods
test
call
and
cs
sub
dec
xor
cmc
jns
popa
(bad)
adc
pushf
fisubr
add
and
in
xchg
pop
xchg
mov
dec
jae
mov
ds
(bad)
mov
push
jb
mov
fist
xchg
ds
xor
cmp
nop
loopne
fsub
push
lahf
xlat
jae
ins
or
mov
clc
lock
pop
xor
and
mov
es
xor
imul
mov
sub
enter
pop
xchg
pop
or
call
jae
pop
pop
inc
into
push
sub
loop
jbe
test
inc
mov
push
push
call
fmulp
cs
cs
push
shr
push
adc
mov
pop
pop
iret
cli
add
cmp
inc
sub
pop
(bad)
js
clc
jo
(bad)
bound
les
cdq
rep
(bad)
out
out
fcom
inc
jle
lds
xor
jno
push
repz
(bad)
jl
cmc
jle
fcom
pushf
add
stos
adc
inc
mov
call
pop
sub
repnz
adc
sbb
mov
push
sbb
pop
push
add
aas
add
fisub
push
jb
dec
imul
cld
mov
or
gs
mov
cmp
jne
pop
gs
(bad)
loop
cmc
repnz
popa
xchg
loope
and
ror
dec
loopne
mov
fist
adc
ds
repz
int
push
lea
arpl
or
shl
mov
cmps
ss
stos
push
test
ss
sub
jmp
in
jp
jne
stos
and
push
imul
sbb
inc
in
loope
xor
int
outs
pop
imul
cld
sub
xor
loope
and
addr16
(bad)
xlat
fmul
(bad)
fcom
and
mov
xchg
jle
es
scas
and
xor
sbb
inc
movs
xchg
jno
mov
ins
iret
jp
mov
sbb
fwait
pop
jl
sahf
shl
mov
jne
push
mov
push
(bad)
div
rcl
push
xchg
cld
add
stc
gs
hlt
mov
mov
movs
ficom
and
js
or
or
ja
(bad)
enter
sub
jno
or
mov
icebp
retf
outs
push
or
pop
dec
cmp
lsl
mov
neg
ins
add
pop
mov
inc
stc
ficomp
js
inc
int3
pop
sbb
and
xor
pusha
push
sahf
neg
data16
sbb
add
dec
and
and
xchg
std
lock
loope
xor
outs
inc
ja
sbb
sbb
xor
adc
add
pop
cmps
outs
xchg
add
scas
fcmovnu
mov
inc
frstor
mov
or
xchg
cmp
dec
pop
(bad)
and
or
icebp
popf
out
jno
scas
aas
sub
adc
jne
jle
mov
imul
aas
call
mov
mul
sub
push
int
or
das
pop
addr16
out
repz
es
lock
sub
xchg
out
pop
out
and
jns
add
out
sub
pop
and
lea
(bad)
(bad)
arpl
(bad)
push
dec
sbb
test
dec
std
je
popa
jns
push
mov
pop
mov
mov
jae
xor
in
pop
cmp
fwait
cmp
int
add
imul
inc
out
lds
mov
outs
adc
daa
pop
pop
sbb
mov
cld
jae
fdiv
fbstp
pop
mov
mov
sub
mov
test
xchg
(bad)
movd
div
inc
xchg
push
push
push
pushf
or
pop
dec
sub
out
std
lock
and
jle
push
mov
fcom
mov
rsm
fadd
sbb
sbb
pop
jmp
bound
pop
xchg
mov
(bad)
jmp
ds
pop
sbb
push
das
imul
fisubr
repz
stos
jp
int
retf
mov
or
jg
jmp
mov
jb
pop
cs
stos
shl
stos
lahf
jae
mov
(bad)
mov
out
loop
jne
xchg
fimul
cli
shr
adc
xchg
inc
dec
icebp
xor
xchg
mov
fs
sub
add
imul
mov
(bad)
icebp
aad
nop
jmp
retf
mov
pop
es
outs
mov
lock
fdivr
test
jle
sub
cmp
repz
mov
nop
mov
(bad)
addr16
ds
mov
in
mov
out
test
std
inc
call
ror
or
xchg
xchg
sahf
inc
aaa
sub
jl
jge
xchg
sub
je
pop
mov
aad
lods
jle
stos
bswap
adc
jbe
mov
mov
mov
sub
push
aam
div
sti
cli
add
pop
push
scas
lock
push
enter
sub
dec
cmps
cmp
xchg
out
cmps
fnstcw
mov
inc
add
ds
rcr
mov
ins
leave
daa
and
push
mov
xchg
mov
faddp
cld
add
add
jmp
daa
pop
sub
(bad)
retf
push
push
sbb
inc
fwait
or
out
cs
dec
mov
pop
fdivr
jne
cli
xlat
inc
repnz
and
mov
nop
jl
sbb
push
iret
fwait
js
xor
inc
loope
hlt
retf
xchg
sub
push
add
outs
xchg
push
ftst
dec
ror
out
pop
or
sbb
popf
hlt
es
push
cmovb
mov
in
and
cli
jg
push
sub
and
call
mov
mov
sub
imul
fwait
movs
imul
mov
imul
mov
sar
push
mov
push
into
repz
cwde
add
mov
mov
std
xor
and
test
mov
out
pop
dec
pop
mov
and
and
mov
push
xchg
mov
js
xchg
push
fistp
fild
ficom
popf
add
adc
ret
shl
out
pop
and
cdq
stos
sti
pushf
push
icebp
icebp
hlt
sti
xchg
xchg
push
div
cdq
adc
stc
dec
loop
push
lds
fdiv
test
sub
imul
sub
push
mov
mov
aaa
loope
aas
jae
out
jbe
test
int3
repz
dec
pusha
int
div
inc
push
fiadd
mov
xchg
ror
scas
dec
imul
inc
icebp
pop
xor
push
leave
std
fs
xchg
mov
jnp
shr
pop
stos
xchg
mov
cmps
or
les
hlt
xchg
aas
xor
repnz
mov
outs
push
sbb
xor
mov
sar
adc
dec
inc
sbb
retf
push
add
lock
xor
dec
add
or
mov
call
jo
mov
add
and
xchg
(bad)
adc
mov
jbe
mov
ss
ds
xor
ffreep
mov
jne
icebp
fadd
retf
sbb
call
mov
(bad)
push
or
push
rcl
mov
jge
movzx
jle
sar
icebp
add
mov
mov
mov
ficom
xchg
sub
aaa
push
push
mov
pop
push
cmps
pop
and
mov
stc
fisttp
dec
sbb
cmps
push
push
inc
gs
xor
nop
mov
arpl
cmp
call
xor
push
repz
and
retf
aam
adc
(bad)
es
jp
popf
jecxz
xor
and
daa
imul
jbe
cmp
lds
ficom
cmps
lea
xrelease
stos
(bad)
sbb
lea
jg
outs
cwde
ret
inc
(bad)
xchg
popa
xchg
adc
inc
jno
cld
sti
shr
sbb
inc
push
imul
stc
push
imul
imul
dec
in
(bad)
out
adc
mov
mov
pop
sbb
test
push
out
xchg
arpl
leave
push
jbe
mov
sub
retf
mov
fs
mov
sub
out
in
push
jp
xor
popa
mov
jecxz
xchg
bound
xor
and
imul
test
and
sub
adc
push
(bad)
scas
cld
and
iret
push
cmp
and
and
in
call
push
bound
aam
xor
cwde
mov
std
ficom
jno
inc
ret
cmp
push
outs
ret
jb
inc
cli
mov
leave
cdq
or
dec
leave
in
scas
les
ror
retf
mov
lahf
rol
gs
push
sbb
lock
and
adc
inc
and
aaa
(bad)
addr16
in
arpl
xchg
push
lods
fisttp
inc
inc
pop
test
xchg
arpl
loope
(bad)
push
push
pusha
cmp
adc
sahf
sbb
mov
std
cdq
ss
mov
psubb
sub
data16
(bad)
xchg
inc
jne
enter
outs
cld
lds
jno
mov
ret
(bad)
in
jl
xor
inc
shl
cli
bnd
test
push
and
inc
fbld
push
ficomp
inc
xchg
dec
inc
enter
loop
into
int3
cmp
add
and
adc
cmp
pop
sbb
and
cmps
sar
pop
cmps
aaa
and
or
popa
jae
repnz
sbb
dec
adc
aas
fscale
mov
out
fsub
std
cli
aam
fnstcw
cmps
ret
cmp
jmp
push
adc
imul
mov
in
xchg
sbb
sbb
arpl
les
dec
adc
adc
cmps
push
inc
enter
push
or
clc
int
add
add
fsub
sbb
add
adc
cli
fsubr
test
ja
xchg
cli
push
cmps
inc
mov
pop
lea
dec
sahf
cmp
mov
jns
sbb
pushf
aam
mov
jns
sub
je
jbe
shr
mov
out
xchg
cmp
mov
add
add
cmps
cmp
data16
jp
pusha
cmp
ins
and
repz
mov
fsub
lahf
leave
mov
xlat
out
loope
fisubr
sub
mov
hlt
test
cmp
or
sub
xlat
inc
loopne
xchg
add
jmp
outs
sar
or
mov
add
mov
sub
push
ror
shr
and
jl
(bad)
xor
loop
imul
xor
xchg
mov
sbb
test
outs
(bad)
imul
arpl
loop
push
outs
mov
pop
frstor
fdiv
(bad)
mov
jmp
stos
mov
js
ficomp
add
loop
pusha
icebp
loop
push
leave
jno
sbb
jmp
push
dec
in
cmp
adc
test
bound
stos
(bad)
cmp
stos
icebp
sar
mov
ins
sbb
and
daa
int
cmp
lea
aas
scas
dec
stos
sub
jge
sti
ins
push
jns
pop
iret
in
sub
pop
push
inc
xor
arpl
daa
xchg
inc
jmp
adc
mov
fwait
sub
jg
out
lds
fs
cmp
push
lahf
inc
pop
adc
jp
cmps
ins
clc
push
into
inc
popf
cmp
add
shl
movs
xchg
and
retf
je
sahf
imul
mov
push
jb
popf
retf
adc
jecxz
mov
fistp
adc
dec
jo
fcmovnu
xchg
mov
mov
loopne
cmp
pop
inc
push
cmp
jb
inc
fiadd
inc
test
xchg
push
movs
xchg
push
sub
test
loope
xor
lahf
sub
mov
push
dec
jecxz
in
dec
sub
repnz
out
sub
jno
shl
bound
mov
cli
icebp
push
inc
mov
jg
pop
mov
ret
pop
fist
push
stos
or
fiadd
fwait
jecxz
outs
mov
leave
sahf
mov
inc
stos
mov
and
jns
sbb
xor
and
mov
push
popf
adc
(bad)
cmp
jle
dec
pop
jnp
mul
je
repnz
out
mov
mov
xor
loop
and
inc
scas
loop
repnz
ss
stc
jmp
ds
icebp
repz
xchg
scas
push
mov
xlat
mov
in
sub
xchg
test
sbb
add
test
add
fiadd
out
jg
cmp
add
adc
mov
mov
hlt
popa
scas
or
sbb
call
ret
push
or
jbe
or
sub
xchg
clc
pop
xchg
sar
dec
sbb
inc
loope
xor
out
div
cmc
jae
out
mov
push
stos
xchg
dec
mov
mov
mov
outs
cld
loope
or
pop
(bad)
leave
and
dec
or
jmp
pop
les
or
cwde
js
in
shl
sbb
movs
mov
aaa
push
stc
mov
pop
cmp
adc
hlt
push
pop
push
icebp
sbb
jmp
mov
push
xchg
push
gs
aad
fnsave
xchg
fsubr
pop
inc
shl
lock
inc
cdq
lea
sbb
jmp
mov
popa
mov
cwde
leave
enter
mov
in
shr
cld
cmp
lods
mov
push
xchg
inc
stos
dec
mov
and
aaa
inc
mov
mov
push
jae
movs
adc
push
pop
pop
cmp
adc
or
popf
or
repz
mov
jmp
(bad)
mov
dec
dec
icebp
adc
pop
stos
(bad)
add
scas
(bad)
out
int
imul
out
pop
out
pusha
mov
jmp
dec
xor
pop
sbb
out
fstp
sub
push
cmps
jns
dec
in
mov
or
(bad)
popa
in
and
mov
addr16
mov
mov
and
aam
cmps
pop
sbb
cmp
sar
mov
je
inc
aas
push
mov
xchg
test
or
pop
cli
pop
pop
not
repz
adc
ds
fwait
mov
sbb
xchg
(bad)
pop
jg
sub
cmp
stc
adc
sub
jnp
cmc
xchg
imul
adc
adc
cmp
(bad)
mov
xor
inc
(bad)
xor
ja
xor
or
mov
sbb
inc
fcomp
adc
lods
push
retf
shl
xchg
mov
xchg
nop
addr16
jbe
outs
ins
in
mov
lds
jno
pusha
cdq
inc
dec
cmc
push
pop
cdq
push
sub
icebp
xlat
scas
js
jge
cmp
iret
push
mov
xlat
fwait
mov
dec
push
ret
int3
into
icebp
pop
mov
add
test
mov
out
shl
pop
mov
sub
xor
sar
and
(bad)
xchg
(bad)
jmp
cmps
xor
and
jnp
mov
cmc
or
cdq
jnp
xchg
js
cvttps2pi
jnp
sub
mov
pop
test
call
mov
je
ja
mov
jge
adc
and
std
jne
call
mov
frstor
cmps
mov
cmp
xor
nop
nop
imul
call
aas
std
sbb
xchg
outs
or
ja
addr16
sahf
inc
inc
pop
inc
inc
push
sbb
lahf
sar
jne
addr16
xor
ins
ins
inc
addr16
sub
dec
add
sar
in
push
sbb
pop
push
and
gs
dec
xchg
xor
and
pop
pop
inc
push
mov
push
and
xor
retf
mov
xchg
loopne
lea
push
and
mov
mov
call
inc
inc
add
ret
xchg
inc
pop
and
imul
adc
scas
cmp
cld
xchg
retf
fsub
adc
inc
mov
sbb
xor
lahf
push
jecxz
shl
inc
pop
mov
neg
mov
bound
mov
mov
push
nop
add
sti
fcom
cli
jle
ja
add
shr
les
xchg
xchg
mov
es
dec
dec
or
cld
cmp
push
add
movs
jmp
aas
pop
outs
nop
ss
leave
add
dec
aam
xchg
scas
add
icebp
cmp
shr
dec
or
lds
mov
les
push
idiv
dec
jmp
xor
(bad)
cwde
fwait
push
xor
push
sub
mov
or
add
call
sub
fcomip
(bad)
mov
out
add
dec
scas
mov
jae
arpl
mov
cdq
pop
out
fwait
mov
sahf
or
jmp
cmp
jnp
js
test
sbb
mov
stos
gs
test
inc
fistp
mov
test
xlat
mov
cmp
dec
xor
xor
xchg
rcr
ins
ds
xor
adc
mov
xchg
int
out
push
fld
sub
aas
xchg
xor
(bad)
(bad)
pop
aam
cdq
out
sub
retf
addr16
pop
pusha
push
pusha
mov
adc
xlat
out
mov
lock
imul
dec
add
and
jmp
pop
dec
jge
cld
sub
add
mov
stos
leave
into
pop
pop
test
js
inc
jg
lock
xor
xor
ss
loopne
add
push
jmp
jecxz
out
dec
sbb
inc
xor
ss
and
xchg
sub
fnstsw
ds
xchg
bound
ins
mov
je
or
call
nop
and
inc
cdq
int
and
pop
out
sub
jecxz
psubsw
out
push
pushf
mov
in
loope
xchg
add
mov
or
imul
or
and
cmp
jae
jb
mov
or
cmc
sub
sub
sbb
add
mov
cmps
mov
dec
pop
jmp
fadd
addr16
out
pop
mov
out
int3
add
adc
outs
into
pop
ret
fwait
(bad)
stos
es
and
add
mov
call
dec
aam
and
and
out
mov
retfw
mov
mov
cmps
out
mov
push
clc
idiv
call
sti
in
aas
aad
jg
loope
movsx
aaa
and
dec
xchg
inc
pop
adc
in
fcmovb
scas
mov
fcmovbe
push
sti
xchg
and
ins
pusha
mov
sub
call
xchg
dec
stos
push
inc
stos
loopne
cli
adc
ss
cmp
in
sub
arpl
sti
sti
and
jge
into
addr16
mov
movs
mov
(bad)
jg
xchg
bound
xchg
xor
popf
mov
sbb
idiv
pop
push
fiadd
jg
pop
lahf
pusha
dec
adc
mov
movs
xrelease
aam
jle
or
adc
and
stc
call
sub
inc
push
dec
xor
loop
addr16
cmc
cdq
addr16
cdq
pop
adc
out
pop
adc
sar
sub
or
out
(bad)
sub
dec
stos
stos
sbb
jb
jle
dec
rcr
mov
jmp
pop
aam
mov
out
mov
repz
out
dec
mov
sub
and
imul
and
xchg
test
add
xchg
sahf
sbb
push
pop
push
iret
in
add
or
sbb
daa
jne
loope
mov
popf
or
sub
and
lahf
cmp
in
push
cmp
cs
nop
fistp
gs
and
into
dec
lods
xchg
pop
and
in
sbb
mov
(bad)
push
cmc
shl
(bad)
jne
(bad)
jmp
div
mov
ret
adc
imul
movs
(bad)
stos
xor
cmp
adc
sub
mov
push
aaa
daa
mov
pop
mov
mov
push
fcmove
and
lods
mov
cli
out
gs
xchg
xor
cmp
ret
movs
imul
pop
xor
push
push
push
xchg
inc
std
adc
ret
jle
mov
inc
stos
add
gs
add
push
jl
fisub
mov
scas
es
test
push
mov
xor
dec
test
fwait
xchg
add
jmp
pusha
imul
push
add
adc
jp
call
rol
mov
cmp
or
xchg
inc
lds
movs
or
jno
clc
cs
mov
push
xchg
in
sub
xchg
inc
push
xor
std
icebp
adc
inc
xchg
or
test
xchg
push
adc
and
(bad)
fnstcw
mov
adc
inc
fidiv
arpl
mov
mov
fidiv
movs
mov
xor
or
ins
pop
mov
jbe
push
mov
cmc
and
jno
and
sub
shl
mov
ffree
adc
sti
pushf
fcomp
ret
lock
hlt
dec
and
sub
ret
mov
mov
dec
dec
mov
out
int3
mov
dec
push
lods
mul
dec
jp
sub
dec
xor
sub
push
mov
shl
sub
mov
sub
jns
hlt
ins
ins
(bad)
push
pop
clc
test
push
popa
adc
jne
xchg
or
movs
and
test
popa
dec
lea
pop
add
push
and
out
sti
mov
aad
mov
inc
aad
dec
loope
out
test
(bad)
imul
cmps
mov
mov
jg
movs
inc
das
aaa
mov
sub
fidiv
out
shl
imul
jbe
xor
pop
mov
dec
adc
dec
bound
sub
aas
repnz
clc
leave
mov
xor
aad
push
inc
pop
xchg
xor
iret
dec
retf
cli
cmc
loopne
cdq
js
lods
mov
mov
imul
push
dec
adc
inc
dec
and
push
shl
jmp
xchg
xlat
inc
pop
jecxz
in
or
div
fwait
test
adc
push
stc
sahf
jg
ret
sti
movs
jp
cmp
lahf
test
cmc
mov
movs
add
sub
cmp
movs
les
sub
sub
shl
sbb
test
cmp
enter
fcomp
and
sub
mov
into
outs
(bad)
std
aaa
push
xchg
xor
call
rcr
mov
mov
hlt
data16
cmps
sti
mov
xor
shl
xchg
push
mov
cmp
lods
dec
adc
jp
mov
cmp
out
inc
ins
jg
pop
jns
(bad)
jg
adc
fldenv
push
dec
sti
fisub
inc
jl
inc
ror
mov
lds
popf
push
aaa
xchg
mov
push
mov
popa
mov
icebp
pop
gs
jmp
pop
call
enter
subps
sub
xchg
dec
xchg
lock
xor
and
fs
enter
mov
test
mov
inc
jb
fucomp
fdivr
sub
bound
les
sub
(bad)
xor
mov
aad
add
xor
mov
push
pop
inc
cdq
rol
pop
inc
mov
not
and
imul
sbb
sub
add
xchg
add
retf
rcl
rcl
and
sahf
or
in
mov
inc
fmulp
add
mov
cmps
jbe
push
sbb
mov
ins
out
xor
xchg
outs
enter
and
rol
out
mov
inc
mov
mov
repz
repz
stos
xchg
scas
ins
out
and
inc
enter
mov
js
jae
inc
sub
or
add
aam
sbb
mov
cwde
xlat
cdq
lods
jmp
cmp
pop
and
mov
stc
iret
clc
mov
into
sbb
nop
(bad)
fdiv
xlat
out
pop
inc
mov
in
xor
push
sti
or
jl
adc
sbb
icebp
retf
inc
out
ins
cmp
js
fs
loopne
xchg
(bad)
cli
xchg
cmc
jl
mov
lods
add
push
pop
jg
cwde
jns
mov
loope
or
fs
int
outs
loope
test
add
mov
cmp
xor
nop
lea
pop
push
inc
into
je
jmp
add
mov
or
jp
rcl
gs
inc
cmps
jecxz
mov
fcmovnbe
sbb
popf
and
fiadd
push
ss
in
inc
(bad)
popa
dec
jns
push
xor
mov
scas
mov
cmp
xor
and
pop
mov
mov
xchg
(bad)
push
dec
clc
rcr
retf
iret
imul
dec
mov
test
cld
or
test
cwde
sbb
int3
push
inc
ret
and
sub
(bad)
icebp
sub
jns
sbb
bound
fbstp
push
daa
scas
mov
mov
dec
xor
fcomp
call
imul
jg
lds
sbb
aam
es
(bad)
xchg
mov
or
dec
int3
loope
adc
out
fistp
mov
outs
sub
cli
mov
movs
int
sbb
xor
dec
xchg
or
mov
pushf
xchg
movs
jl
xchg
scas
mov
fldcw
and
out
add
cwde
out
stc
arpl
adc
xlat
fs
mov
cmp
add
cmc
mov
sbb
in
enter
mov
jl
enter
pop
jbe
cmp
mov
cmps
mov
push
sub
not
xchg
push
jge
add
xchg
adc
call
fidiv
inc
add
cdq
fcomi
push
pop
mov
pop
pop
test
out
loopne
stos
jnp
mov
imul
test
jl
push
jge
cmp
jnp
inc
(bad)
mov
cdq
leave
in
enter
aaa
jae
cmps
adc
lds
bound
fsubr
js
xor
mov
inc
push
or
out
(bad)
xchg
stc
pop
ss
and
rcl
jae
(bad)
ins
shl
jbe
int
cmps
or
ficomp
xor
popa
imul
daa
pop
cld
test
bound
into
mov
adc
sbb
xchg
fsub
xlat
lahf
cmp
sbb
adc
rcl
imul
arpl
pop
aas
sbb
sub
push
push
mov
pop
sti
mov
jmp
test
popa
addr16
xlat
adc
(bad)
cli
call
mov
xor
mov
inc
lds
icebp
iret
bound
addr16
test
sub
call
mov
arpl
add
fdiv
or
push
pop
and
mov
jne
pop
jmp
fs
mov
mov
mov
sahf
cmps
clc
adc
and
adc
push
out
int
repz
xchg
pushf
das
adc
dec
cmp
push
in
outs
pop
jmp
jge
jb
inc
mov
imul
jns
push
adc
movs
push
dec
jnp
movzx
outs
movs
adc
retf
sahf
int3
out
dec
pop
out
into
pop
or
add
call
pusha
pop
mov
dec
xchg
mov
ds
xchg
loop
gs
and
popf
aam
pop
or
aam
sub
pop
pusha
push
aad
loopne
and
push
(bad)
stos
fsubr
aaa
scas
pop
repz
lods
retf
dec
adc
pop
push
pop
setl
lods
(bad)
out
jnp
mov
sahf
lahf
jl
dec
out
xchg
jnp
movs
(bad)
ret
les
sahf
sub
xchg
push
sbb
jge
mov
inc
cmc
jns
call
mov
xchg
imul
add
shl
imul
adc
(bad)
jnp
loop
stc
add
inc
dec
arpl
out
std
dec
xor
adc
push
repnz
ja
or
fistp
fdiv
clc
jae
fisttp
iret
cdq
cmp
outs
pop
ins
cmps
frstor
test
retf
mov
das
movs
inc
sar
int
xchg
icebp
mov
mov
pop
inc
xchg
test
pop
mov
cli
aaa
sti
ins
inc
push
popa
stc
scas
cli
lods
mov
sub
test
(bad)
in
inc
xor
mov
test
jmp
add
les
pop
dec
aas
add
cs
lods
dec
jb
outs
imul
cmp
leave
xchg
xchg
cmp
dec
inc
fsubr
dec
cmp
or
inc
imul
bnd
and
push
sbb
mov
sub
dec
fstp
aaa
mov
sets
out
mov
mov
sti
pop
adc
sub
mov
pop
cdq
fcmovu
aad
div
xchg
inc
nop
shl
into
leave
ret
push
and
mov
ja
adc
not
lahf
popa
out
xor
pushf
mov
mov
sub
call
add
and
mov
fnstenv
mov
dec
cs
push
hlt
cmp
xor
fiadd
sbb
push
mov
or
push
(bad)
xor
daa
inc
movs
sbb
leave
xor
jle
aam
fldenv
callw
loop
dec
aaa
cs
jle
jae
sub
xchg
or
cmp
aad
fist
shr
sub
or
push
inc
push
into
rol
fcomip
mov
leave
aad
(bad)
leave
mov
ret
xor
lea
or
mov
jg
inc
sahf
cmp
(bad)
jns
mov
add
cmp
mov
ret
or
sti
icebp
shl
ret
ins
cdq
xor
mov
push
dec
sar
stc
cmps
test
ins
clc
out
repz
fidivr
test
inc
cwde
jnp
mov
sbb
xor
stos
pop
(bad)
push
mov
ins
jecxz
(bad)
mov
lds
mov
dec
fidivr
and
mov
in
fs
int
nop
test
sub
inc
fdiv
pop
(bad)
sbb
hlt
lods
loope
popa
adc
pop
test
add
test
enter
mov
fwait
pop
jge
loop
js
sbb
ret
cmc
jbe
cmp
sub
in
(bad)
jne
lea
mov
loope
xor
mov
int3
pop
and
mov
pop
fisttp
ins
xlat
inc
push
add
xchg
dec
sub
dec
cmp
sub
cmp
addr16
adc
dec
and
xor
cmc
mov
daa
lods
mov
push
xor
icebp
call
push
test
xlat
and
or
cmp
dec
in
push
cmp
jle
cmp
lea
loopne
in
out
jmp
mov
lods
stc
push
and
sub
addr16
inc
pop
mov
rcl
sub
push
div
or
mov
je
push
inc
addr16
xor
(bad)
cdq
daa
outs
dec
jp
(bad)
cdq
mov
or
add
cmc
jnp
xchg
xchg
sbb
pusha
sub
fistp
repnz
mov
arpl
enter
ret
ret
jmp
repnz
out
loopne
pop
call
sub
add
aam
ins
in
push
xchg
push
repz
pop
pop
push
jecxz
jle
push
dec
jo
sar
jnp
ret
and
adc
push
lods
test
imul
jb
or
out
es
in
push
idiv
mov
push
and
fnsave
sub
dec
push
lock
xor
test
in
xchg
ror
arpl
scas
mov
or
cmp
stos
mov
pop
das
ret
sbb
pop
push
sbb
mov
ds
or
outs
ficom
test
lock
outs
and
mov
rol
dec
dec
jl
dec
mov
and
cld
inc
popa
jp
xchg
div
(bad)
jecxz
loope
push
retf
mov
inc
mov
enter
ffreep
and
rol
inc
sahf
nop
xor
ja
sti
sub
inc
xor
mov
or
ret
and
pop
jp
xor
jae
jecxz
nop
pop
inc
push
shl
inc
pop
push
mov
lahf
pushf
mov
pop
(bad)
jmp
xlat
sub
inc
mov
add
mov
es
lahf
adc
pop
xor
adc
pop
xchg
push
adc
cli
lock
push
pop
dec
dec
jbe
or
movs
gs
cmps
push
and
ret
je
ret
push
push
adc
je
stc
fwait
mov
mov
mov
jge
xchg
fisubr
adc
fsub
xor
ffree
xchg
or
(bad)
jbe
lea
std
inc
inc
rcr
jbe
sub
clc
jge
and
loop
pop
mov
sub
and
repnz
cmp
cmp
or
mov
jmp
mov
jmp
xchg
ins
jbe
or
jno
dec
xchg
les
or
and
jle
push
test
push
(bad)
and
jb
sub
pop
push
repz
add
jecxz
in
mov
jns
push
xor
ins
outs
and
out
mov
dec
pop
xchg
stc
pushf
retf
ds
shl
sbb
cmp
call
aas
jle
jae
pusha
mov
mov
cmps
das
or
aam
addr16
int3
mov
xchg
cmp
fisubr
xor
jne
xchg
ud2
aam
sbb
mov
dec
cmp
xor
adc
sbb
inc
ds
lds
inc
lods
sbb
scas
xor
sub
shl
sbb
lds
push
jmp
sbb
xlat
mov
xchg
in
ror
in
inc
xchg
out
test
push
es
push
imul
dec
sahf
sbb
pop
mov
jmp
cmp
cdq
loopne
std
sbb
add
mov
jbe
xchg
mov
sbb
js
iret
arpl
cmp
dec
cmp
cmp
mul
or
mov
(bad)
fistp
lea
xlat
in
xchg
repz
fisttp
loopne
pop
sub
jbe
aaa
nop
xchg
call
xchg
cmp
sub
(bad)
in
pop
das
xlat
add
popf
xchg
mov
add
iret
push
jl
dec
sbb
and
jle
or
inc
mov
(bad)
pop
movs
data16
std
pusha
push
cmp
mov
xchg
mov
mov
xor
jne
je
pop
or
imul
inc
sub
pop
out
adc
lods
jp
inc
pop
(bad)
pop
add
xchg
sti
xor
jg
loopne
(bad)
sub
leave
fisttp
push
int
jle
xchg
enter
mov
push
stc
ret
inc
inc
push
jmp
push
adc
adc
mov
cmp
ja
xchg
jg
or
cli
push
dec
scas
fadd
lds
lahf
mov
xchg
sub
imul
aad
dec
mov
mov
mov
sub
outs
cs
push
adc
das
lea
hlt
inc
(bad)
(bad)
(bad)
mov
leave
push
sbb
test
test
addr16
les
pop
scas
(bad)
mov
arpl
xor
jns
sbb
nop
lea
outs
call
ficomp
cmc
popf
sub
mov
xlat
int
ret
dec
jmp
daa
shl
scas
mov
push
sub
movs
dec
out
dec
mov
and
inc
mov
ins
mov
sahf
sub
sbb
in
ins
nop
jg
data16
xchg
frstor
mov
and
push
push
dec
repz
mov
jnp
add
cld
pop
je
into
mov
mov
pop
mov
repnz
inc
out
adc
fld
and
jb
adc
mov
inc
push
mov
loop
or
mov
cmps
add
test
adc
popf
je
(bad)
xor
push
outs
es
inc
cmps
xchg
add
or
gs
add
sbb
outs
jbe
lahf
pusha
fdiv
pusha
das
mov
test
into
cmc
xchg
pop
std
mov
bound
cmp
xchg
xchg
pusha
xor
clc
ret
sbb
(bad)
popf
popa
test
jo
pop
dec
test
jo
lea
pop
or
or
adc
mov
aaa
push
aaa
mov
mov
or
mov
sbb
cmp
lock
adc
xchg
faddp
adc
mov
dec
and
addr16
fnstcw
push
ins
lods
push
jp
jnp
ret
push
cdq
jb
cmc
aad
sub
xchg
inc
mov
lds
jg
retf
add
push
dec
xor
cs
stos
nop
xchg
jmp
sub
out
xor
out
mov
in
fcom
sub
sub
sbb
in
aam
(bad)
push
or
aad
and
push
or
inc
popa
mov
scas
xchg
shl
or
retf
into
dec
mov
jmp
push
outs
repz
mov
push
movs
mov
rep
inc
fldenv
mov
es
cli
push
and
out
pop
scas
adc
stos
test
sbb
daa
pop
mov
fs
xchg
push
outs
xchg
sub
push
call
outs
jnp
sti
test
(bad)
dec
sbb
jne
test
repz
push
jne
ficomp
jne
fstp
ds
xchg
call
out
xor
mov
xor
sub
add
and
aam
and
xor
jmp
nop
inc
nop
les
mov
or
push
sbb
out
inc
lahf
push
es
push
ror
adc
out
jbe
ret
stos
aam
stos
icebp
push
xchg
dec
pop
ins
cmp
mov
in
pop
cli
call
jl
fwait
gs
fwait
push
push
seto
pop
in
mov
sub
std
jg
add
mov
jne
scas
xor
pop
sti
sbb
pop
fnstenv
xor
fcom
inc
arpl
push
lds
imul
popa
fwait
shl
lods
gs
and
xor
cmc
je
or
pop
pop
push
(bad)
xlat
test
cwde
and
fisub
fst
call
je
shr
sar
inc
retf
sub
push
adc
xchg
inc
xor
icebp
lods
imul
or
leave
jp
inc
jb
mov
cwde
(bad)
lea
push
cmc
rcl
outs
test
ror
add
rcl
add
pcmpgtd
je
fistp
add
out
sti
sahf
sbb
push
jmp
outs
js
pop
push
arpl
xor
push
outs
js
fadd
mov
int
pop
dec
sar
nop
jb
dec
shl
mov
dec
pop
ret
lods
test
fst
push
iret
rol
or
aad
sub
cdq
mov
pop
pop
adc
lods
sar
xor
mov
mov
jle
(bad)
mov
in
in
into
cmp
or
sub
sub
mov
push
inc
loope
push
les
(bad)
xor
dec
adc
adc
adc
adc
xor
into
pop
xchg
push
mov
in
inc
std
jne
lea
add
stos
pusha
out
xor
mov
cwde
mov
jnp
mov
xchg
pusha
xchg
int3
xor
cmp
ror
cmp
sub
add
or
jmp
add
mov
dec
(bad)
inc
or
push
sbb
sbb
pop
add
jne
or
cwde
jns
ret
out
push
sbb
dec
pop
pop
xlat
ja
inc
xor
repnz
popf
retf
ret
out
pusha
mov
fmul
mov
aam
(bad)
cmovnp
dec
(bad)
fistp
frstor
xchg
(bad)
dec
pusha
out
pushf
fist
scas
xor
addr16
out
mov
mov
dec
scas
pop
push
dec
dec
rol
and
sub
xor
cdq
sbb
adc
mov
adc
mov
xor
(bad)
push
and
push
ret
lahf
dec
jmp
stos
xchg
pop
mov
mov
xor
pop
push
dec
(bad)
lods
(bad)
sbb
pop
dec
loop
adc
shl
scas
xchg
inc
or
icebp
push
xor
out
inc
xchg
test
daa
inc
inc
sti
shr
shl
mov
dec
mov
pop
pop
xchg
ja
es
sbb
mov
in
scas
adc
pop
xor
pop
xchg
jecxz
(bad)
mov
icebp
lock
(bad)
inc
mov
in
idiv
and
stos
test
mov
ss
dec
test
adc
fs
outs
adc
add
(bad)
lahf
and
imul
jecxz
in
jle
ja
sub
dec
mov
xchg
jae
test
fst
sub
xor
mov
in
rol
mov
mov
outs
adc
bound
jmp
test
push
pop
fyl2xp1
popa
pop
aad
adc
outs
mov
or
mov
movs
cmp
aam
jg
lods
jb
xor
out
lea
lods
adc
sbb
movs
retf
add
ficomp
test
not
loop
pop
cmp
cmp
lods
mov
jno
adc
mov
sbb
mov
mov
mov
leave
sub
mov
adc
rcr
inc
adc
dec
dec
add
mov
push
adc
push
ja
xor
xchg
ins
cld
fist
fptan
fldenv
les
inc
jmp
outs
mov
sti
cld
sbb
(bad)
inc
xchg
xchg
ins
add
jmp
or
jg
mov
push
rol
leave
push
sbb
into
pop
fmul
gs
inc
rol
xor
inc
ins
inc
pop
or
and
mov
out
movs
add
in
jno
dec
repz
mov
fmul
mov
cdq
mov
sub
in
imul
out
(bad)
sub
std
push
xchg
arpl
adc
test
jp
gs
ins
outs
sbb
nop
sub
or
inc
daa
pusha
movs
cmp
lods
in
ror
jo
jg
mov
sbb
adc
jo
enter
xor
mov
fistp
aad
je
and
loope
sub
mov
dec
icebp
inc
mov
or
mov
jp
push
shr
jo
mov
daa
mov
fisttp
add
stc
retf
pcmpeqd
out
clc
mov
imul
pushf
cld
inc
pop
nop
ins
dec
(bad)
xchg
jl
xchg
imul
xor
xor
cdq
cmp
dec
xor
jns
cs
sub
dec
call
retf
push
and
iret
not
enter
mov
popa
add
sbb
fsub
lods
mov
je
pusha
inc
(bad)
enter
adc
stc
sbb
popa
pop
ror
pop
inc
idiv
enter
add
and
cli
cmp
mov
ret
mov
mov
or
sub
(bad)
icebp
call
movs
call
bound
icebp
div
inc
pushf
loopne
in
(bad)
xor
cdq
pop
mov
xchg
inc
dec
xor
fadd
add
xor
call
inc
xchg
and
and
or
test
inc
mov
daa
xor
out
mov
add
sub
mov
xlat
(bad)
test
stos
test
or
cld
into
mov
sbb
call
inc
cmp
mov
dec
fdiv
mov
pop
stc
loopne
xor
add
and
aam
pop
hlt
jmp
lods
ins
cmp
and
inc
in
mov
pop
push
das
sti
das
addr16
add
xchg
push
xor
xchg
fdiv
add
mov
jo
test
mov
out
sbb
dec
and
push
into
push
in
cmc
aas
fsub
sbb
pushf
sti
xbegin
mov
adc
xor
or
xlat
mov
enter
sub
mov
jl
sahf
and
es
jns
xor
fadd
shl
(bad)
cmp
idiv
div
mov
js
repz
loop
push
scas
out
(bad)
stc
pop
stos
adc
outs
xchg
jecxz
lods
jbe
(bad)
in
push
clc
add
mov
or
pop
mov
lods
adc
xchg
jecxz
or
xchg
inc
movs
adc
mov
(bad)
jl
sub
pop
dec
add
add
in
push
vunpcklpd
mov
out
or
mov
daa
loope
adc
jg
popf
jmp
mov
sub
and
xchg
arpl
xchg
jae
pop
pop
adc
js
sar
xchg
cmps
pusha
mov
retf
js
into
out
xchg
lods
cmp
xchg
movs
hlt
pop
setp
inc
mov
sbb
mov
jp
mov
nop
cmp
ins
call
dec
mov
fisttp
call
sbb
scas
loope
pop
and
scas
cmc
lahf
cmc
jge
xor
xchg
cmp
cwde
add
push
pop
mov
es
ins
fsubr
pop
or
push
inc
adc
sti
lds
mov
sbb
sub
lea
mov
shl
stos
sub
pop
dec
and
cmp
push
jecxz
adc
daa
daa
(bad)
or
inc
clc
push
stos
sbb
adc
xlat
fld
das
stos
enter
and
aaa
in
cdq
sub
mov
dec
or
mov
push
fs
loopne
dec
jmp
mov
(bad)
jmp
in
pop
ss
inc
pushf
fsub
or
pop
jno
xor
dec
dec
out
mov
aad
js
stc
fdiv
dec
fwait
xchg
jle
data16
push
xchg
or
push
mov
mov
out
loopne
loopne
and
xchg
add
in
jmp
in
cmps
fs
aas
adc
mov
adc
mov
into
adc
adc
xchg
sbb
jecxz
leave
jle
cdq
push
call
inc
dec
jp
jmp
cli
mov
fist
sub
(bad)
stc
call
add
adc
adc
mov
test
pop
in
cli
int
imul
cmp
mov
int
bound
lods
add
or
dec
and
jno
pop
mov
jmp
(bad)
stc
xor
push
add
retf
cmp
inc
mov
call
mov
stc
dec
add
or
or
mov
movs
cmp
fcomi
sub
jle
mov
rcr
dec
repnz
lahf
je
stc
popf
mov
mov
ret
and
sahf
rol
aaa
xchg
sbb
outs
(bad)
adc
lods
retf
jecxz
arpl
and
js
cwde
pop
push
shr
imul
xor
into
rcr
data16
mov
popa
call
(bad)
aaa
push
or
jne
mov
out
dec
cwde
jmp
mov
mov
mov
push
lea
sub
fist
xor
stos
push
mov
fwait
sub
leave
sbb
jmp
inc
jno
fwait
(bad)
xor
mov
mov
mov
adc
adc
cmp
and
push
(bad)
cmp
push
(bad)
fiadd
fucomp
mov
jno
das
arpl
bound
push
xchg
xchg
xor
xchg
push
jecxz
xor
xchg
pushf
enter
shl
nop
and
ret
xor
adc
aam
out
push
cmc
xchg
jnp
sti
push
sbb
cmp
mov
sti
jns
aas
mov
bound
add
xor
test
mov
sahf
sub
(bad)
scas
lods
cdq
iret
sbb
xchg
lods
jne
aas
xchg
pop
jl
das
fsubr
ins
xchg
xchg
and
inc
ret
mov
and
icebp
jmp
jp
push
out
aas
inc
loop
loope
mov
and
push
imul
push
gs
sub
sbb
(bad)
popf
test
pop
sbb
rol
call
stos
pusha
arpl
pusha
and
jmp
xchg
(bad)
and
inc
mov
pop
jmp
mov
pop
inc
add
dec
or
push
lahf
es
sub
int
retf
test
call
sar
pop
call
adc
adc
jmp
scas
cmp
loope
dec
push
dec
dec
and
int3
(bad)
retf
jmp
pop
lds
add
mov
mul
cwde
mov
mov
aas
mov
xor
outs
jmp
and
pop
fwait
rcr
ins
mov
rol
and
jne
(bad)
sub
jp
gs
gs
loope
cdq
cmps
jle
popa
cmp
adc
jb
cmp
aad
push
mov
xchg
xchg
jge
(bad)
dec
xchg
xchg
jb
mov
imul
or
imul
cmp
into
sub
jne
mov
pop
les
mov
and
adc
jnp
adc
mov
and
(bad)
adc
cmp
xor
cld
inc
popa
je
jmp
sar
call
inc
inc
gs
test
fild
jmp
not
sbb
xchg
lock
shl
adc
sbb
cvtdq2ps
imul
add
aas
dec
adc
jmp
adc
daa
add
aaa
out
hlt
mov
mov
stc
mov
dec
mov
outs
mov
cmp
jecxz
dec
xchg
xchg
icebp
aad
push
loop
pop
ret
in
ror
sbb
aam
pop
in
cwde
ds
cdq
xchg
inc
mov
jne
mov
popa
xor
or
mov
fimul
sti
mov
es
jae
mov
movs
push
and
sbb
and
jecxz
in
(bad)
mov
sub
xor
xchg
push
push
inc
adc
mov
push
dec
(bad)
js
or
xchg
sub
pop
inc
mov
adc
loopne
xchg
mov
test
inc
mov
out
imul
sub
es
movs
fsub
mov
jo
fbld
(bad)
pop
dec
or
mov
mov
push
or
popf
push
inc
push
jo
pushf
add
enter
movs
xor
xchg
dec
in
shl
call
cli
pop
icebp
dec
outs
or
sbb
pop
and
cmp
fadd
popa
mov
fwait
gs
pop
cmp
in
mov
aam
xchg
inc
adc
xchg
xchg
xchg
dec
pop
popf
mov
mov
aad
aaa
cmps
cmp
inc
inc
retf
out
sar
sub
push
outs
test
stos
int3
jo
arpl
aad
cmps
rol
popa
int
in
mov
xor
hlt
cmp
sbb
push
lock
pop
push
jae
mov
rcr
sbb
loop
scas
imul
and
arpl
aaa
xchg
ror
pop
test
or
iret
push
loopne
imul
fcomp
push
and
addr16
mov
dec
mov
dec
push
mov
push
cmc
and
push
xor
daa
in
les
sbb
(bad)
fcomp
cmpps
cmp
dec
or
cmp
fild
add
in
or
out
push
call
jnp
adc
rcl
mov
cdq
push
inc
pop
sar
cld
leave
mov
inc
out
xchg
mov
inc
jl
mov
(bad)
fdiv
orps
pop
jbe
cmp
leave
mov
fmulp
adc
add
push
ds
xchg
pop
pop
je
(bad)
stc
mov
scas
shl
and
cmps
(bad)
retf
xor
psubb
movs
xchg
pop
cmp
pusha
(bad)
jo
pop
pop
aam
scas
shl
sar
adc
movlps
test
dec
cmps
mov
into
sub
icebp
cdq
imul
cli
loop
aas
inc
pop
dec
dec
out
mov
cli
fstp
retf
jecxz
pop
xchg
pop
sbb
sub
xor
mov
or
sysret
cmps
ins
arpl
pushw
jnp
mov
add
(bad)
imul
mov
or
sbb
or
sbb
dec
fdivr
loope
xchg
jmp
fwait
mov
lods
mov
jle
bound
jmp
not
sbb
fs
sub
(bad)
jg
cmp
pop
pop
aas
sub
push
xor
jp
pop
mov
nop
ret
mov
lods
xchg
xor
cmc
(bad)
iret
in
out
pusha
das
sar
pop
pop
mov
cmp
jo
rcl
or
push
daa
es
ds
arpl
add
xchg
push
cld
xchg
inc
push
mov
int3
dec
out
shr
mov
(bad)
jge
mov
mov
shl
idiv
dec
loop
ins
cmp
ds
cmc
jbe
push
pop
adc
mov
test
sbb
mov
mov
jb
xchg
aas
aaa
and
adc
add
(bad)
mov
in
fucomi
int3
out
adc
fldz
aad
call
mov
cmp
pop
sub
mov
std
and
ret
dec
add
scas
aaa
cli
cmp
ret
leave
out
mov
sbb
cwde
inc
ins
movs
xchg
lods
movs
stos
pop
fidivr
pop
xor
cmps
jle
pop
cmp
pop
imul
fdiv
sbb
pop
add
rcr
imul
adc
stos
jbe
jecxz
cli
xor
pop
mov
lahf
add
shr
pop
sbb
and
jo
sub
mov
lds
loopne
dec
cmp
dec
push
into
and
adc
push
and
inc
imul
cmps
out
outs
mov
cmp
jge
fcmovnbe
aam
and
xchg
cmp
mov
jecxz
jmp
jne
or
pop
add
icebp
jnp
test
xor
mov
pop
push
and
jge
pop
push
scas
cli
dec
sti
mov
mov
push
or
aad
jnp
pop
sub
icebp
xchg
rcl
jecxz
xchg
aad
in
jl
enter
bound
add
lock
or
add
(bad)
or
push
hlt
mov
test
jg
jg
mov
das
mov
jne
pop
setno
jns
xor
mov
shr
aas
mov
pop
jne
cs
dec
xchg
(bad)
popa
jmp
mov
pushf
pushf
pop
or
cmps
xchg
cld
test
dec
push
adc
into
push
dec
jnp
(bad)
shl
(bad)
adc
cmp
in
fs
xlat
jg
ret
ret
arpl
mov
add
stc
push
push
loopne
ds
sub
cmps
jp
imul
cdq
pop
scas
xor
imul
inc
gs
mov
into
lods
mov
arpl
mov
outs
pop
sub
mov
or
fild
sti
enter
mov
cmc
jne
les
leave
jle
fldenv
jbe
sti
mov
jns
sbb
std
(bad)
sti
cmp
retf
sar
add
inc
loope
(bad)
cmp
xchg
mov
xchg
cli
gs
gs
jecxz
imul
in
daa
mov
xchg
push
in
ret
mov
aad
xchg
in
mov
mov
pop
data16
push
rcl
lahf
push
in
pusha
sti
xor
fsub
sub
cmps
add
jb
sbb
into
push
lds
jl
sub
in
iret
adc
xchg
push
fldenv
pop
fstp
cmps
cld
dec
mov
in
jne
pop
push
retf
sbb
jp
sub
xchg
xchg
add
add
stos
add
mov
into
call
es
loopne
sub
dec
gs
inc
cwde
mov
xor
and
in
jo
mov
cmp
repz
call
daa
jp
(bad)
push
cmps
call
retf
pop
push
aaa
add
aaa
xor
pop
(bad)
outs
(bad)
(bad)
es
enter
adc
mov
mov
in
test
popa
jecxz
idiv
aaa
shl
cmp
movs
imul
pusha
xor
sete
jecxz
push
nop
gs
and
mov
scas
test
cmp
dec
pop
in
inc
jae
icebp
shl
and
pop
sbb
iret
jle
jmp
lods
stos
add
sbb
and
mov
sub
or
int
push
pusha
std
cmps
mov
push
pop
sbb
push
lahf
imul
dec
sbb
bound
or
add
xchg
dec
mov
adc
int3
popa
cmp
sub
jb
loope
inc
out
jl
clc
adc
pop
or
clc
test
pop
shl
sbb
mov
dec
xor
loop
cmps
adc
adc
xchg
rcr
dec
cmp
cmps
int
cs
xlat
call
xchg
cmps
push
adc
cmp
pop
cmp
(bad)
adc
popa
arpl
sub
out
mov
fnstsw
and
push
mov
add
add
push
dec
dec
xor
dec
push
push
jno
sbb
jg
jp
mov
ins
std
lods
rcl
icebp
test
mov
pushf
mov
in
xor
mov
(bad)
lods
jno
out
nop
std
pop
jge
and
push
fadd
cmp
inc
in
imul
addr16
cwde
pop
(bad)
in
add
or
enter
add
or
add
es
out
dec
stos
ja
fs
ror
xchg
mov
pop
pop
add
ret
cmp
stc
jne
jp
in
jo
scas
je
xor
je
sbb
jns
sbb
mov
dec
mov
push
xor
add
push
popf
outs
cmp
sub
dec
fisubr
fstp
imul
mov
mov
inc
aad
outs
or
adc
dec
add
pop
fisttp
arpl
sub
dec
sub
mov
xchg
jo
mov
aas
inc
ins
inc
inc
popf
in
aam
cli
mov
mov
pop
enter
(bad)
inc
test
xor
stc
lods
rcr
add
test
into
dec
cmc
dec
pop
push
in
in
add
inc
test
mov
shr
fimul
adc
shl
cwde
or
pushf
pop
(bad)
pop
inc
(bad)
in
mov
pop
aad
ins
dec
sar
ds
(bad)
mov
dec
adc
add
mov
cwde
mov
mov
push
dec
xchg
int3
out
cmp
sub
pop
popa
iret
retf
dec
xlat
mov
mov
sahf
pop
and
imul
clc
pop
or
mov
int
adc
or
sahf
div
jecxz
(bad)
mov
rcr
ror
mov
loop
jmp
fist
cwde
les
loop
jb
movs
mov
sahf
push
fmul
inc
dec
pop
icebp
ins
es
fcom
es
mov
int
sbb
or
mov
pop
ret
dec
imul
cmps
adc
xor
les
adc
mov
and
cmps
mov
(bad)
or
es
jmp
fucomip
sub
mov
dec
mov
das
popa
pop
ds
xchg
jecxz
sub
daa
iret
and
loop
xchg
ret
leave
cwde
outs
lahf
pushf
or
sub
or
enter
xchg
lods
scas
outs
inc
sbb
sub
sbb
ins
retf
inc
movs
mov
mov
dec
int
mov
pop
pop
in
cld
iret
or
outs
and
out
aaa
xchg
jl
mov
gs
(bad)
data16
cmps
cmps
jmp
pop
push
xlat
add
xchg
fnstenv
fnstsw
div
cmp
xor
cdq
pop
leave
pushf
jns
aas
inc
ret
stos
cld
in
jp
shl
push
cmp
cmp
xchg
mul
pop
push
in
mov
or
pop
jb
mov
inc
and
or
or
icebp
out
fcomip
add
fwait
in
sti
shl
mov
ja
in
div
scas
lock
leave
inc
aad
div
add
je
jp
mov
push
dec
sti
js
jg
fwait
mov
dec
pop
loop
nop
inc
xchg
mov
add
ficomp
sbb
sbb
mov
jmp
hlt
adc
cmp
adc
pop
pop
and
aam
fisub
repnz
pop
test
jge
mov
test
repz
or
jae
fild
stos
fnstsw
pop
xchg
sub
(bad)
out
push
jo
dec
or
out
pop
(bad)
iret
test
or
ins
das
daa
test
pop
daa
mov
push
mov
inc
mov
movs
clc
fbstp
scas
jno
push
jae
sub
cmps
push
cld
dec
cwde
stc
add
mov
push
mov
jb
sbb
push
mov
and
pop
xchg
imul
neg
movs
pop
mov
mov
fsubr
mov
fwait
push
pop
clc
ja
or
outs
xchg
or
push
push
jmp
arpl
dec
scas
sbb
mov
out
fs
push
cmp
movs
lds
fninit
rcl
ret
mov
ds
jmp
mov
ins
mov
cmc
xchg
call
cld
sbb
call
sub
lods
idiv
aaa
ins
jmp
shl
lea
call
ds
and
push
xor
xor
in
sbb
push
push
pmullw
sbb
jge
stc
xor
aaa
inc
inc
and
or
js
les
dec
daa
lea
add
(bad)
arpl
inc
sbb
imul
push
push
(bad)
fwait
mov
sbb
dec
sub
jno
(bad)
gs
jmp
ds
pop
das
sub
ds
addr16
mov
retf
mov
loopne
out
xchg
mov
push
into
fnsave
mov
rcr
shl
(bad)
and
or
dec
jbe
jle
or
imul
popf
sbb
jmp
(bad)
call
push
dec
lock
mov
aad
jl
out
add
cmp
gs
pop
sbb
add
aas
pusha
lahf
jns
imul
dec
jns
and
lods
inc
dec
shl
in
xchg
outs
xor
inc
ja
sub
inc
jb
mov
int
dec
cmp
aas
push
aad
push
adc
fidivr
push
(bad)
imul
out
rcl
push
xchg
sbb
or
idiv
cmp
mov
mov
mov
push
cmp
xor
inc
cmp
inc
xor
mov
fisub
pop
fadd
mov
(bad)
aad
or
ficom
pop
fwait
pop
fwait
lahf
mov
mov
add
test
dec
dec
cmp
sbb
dec
pushf
jb
call
lods
add
and
stos
pop
int
and
inc
sbb
push
idiv
mov
ret
movs
cwde
cmp
imul
ins
sbb
xor
jbe
loopne
psubd
sub
jb
rcr
adc
mov
jmp
mov
dec
mov
dec
and
movs
ret
mov
movs
mov
jnp
or
call
pushf
stc
adc
ss
ins
add
cmp
jl
int3
test
mov
push
movs
xor
add
mov
das
repz
movs
jb
dec
pop
jmp
mov
aam
push
lock
jecxz
or
mov
sbb
bound
pop
xor
pop
dec
push
inc
mov
mov
dec
push
hlt
mov
dec
fwait
adc
js
and
fadd
cdq
adc
jmp
movzx
gs
fmulp
dec
or
mov
lahf
sub
mov
popa
stos
call
fwait
imul
retf
xor
pusha
cmc
inc
push
add
js
call
es
sub
popf
nop
call
adc
mov
sbb
icebp
sbb
sub
hlt
cs
xchg
int
stos
sbb
add
movs
hlt
(bad)
pusha
mov
cli
mov
ja
and
dec
jge
test
dec
mov
test
sub
(bad)
imul
push
pop
leave
or
or
fmul
test
push
repz
jb
fimul
push
sbb
test
ret
mov
iret
imul
retf
call
add
stc
xchg
btr
jns
pop
dec
sub
push
adc
sbb
pop
push
loope
or
jecxz
(bad)
xchg
in
loopne
sub
xor
or
ds
add
mov
add
out
mov
pop
mov
xor
mov
xor
stc
push
mov
mov
sub
jne
mov
or
clc
das
idiv
jnp
sbb
retf
push
mov
jb
mov
sub
sub
pop
in
cmp
lock
daa
sbb
js
popa
sbb
imul
jg
cdq
and
daa
jae
ja
pop
shl
out
test
(bad)
inc
and
rcr
mov
push
jb
or
sub
mov
xchg
push
inc
and
aam
es
repz
cld
xor
int3
sbb
mov
xor
retf
jmp
and
mov
ds
mov
shl
dec
push
hlt
cdq
inc
push
retf
push
mov
jnp
dec
icebp
mov
mov
in
add
ret
retf
sbb
out
fdivr
mov
rol
mov
cwde
push
clc
adc
imul
cmps
pop
xchg
pop
mov
dec
sbb
bound
jnp
hlt
into
lods
dec
mov
lods
sub
xor
cs
js
pusha
rcl
adc
inc
stc
mov
pusha
fs
movs
lods
fsubrp
mov
rol
mov
push
adc
and
mov
mov
scas
mov
push
jns
mov
loop
jle
and
icebp
mov
icebp
lds
jno
sub
sti
repnz
int
sbb
mov
xchg
sar
xchg
sbb
cld
popf
fcmovnu
loop
mov
out
xchg
int
inc
pop
sahf
mov
out
push
jecxz
inc
sbb
pop
mov
jmp
fdivr
adc
int
mov
out
into
cdq
adc
cdq
cmp
inc
jmp
xchg
int3
mov
popf
lea
loop
push
popa
(bad)
adc
clc
call
(bad)
xchg
push
lahf
push
call
mov
sahf
xchg
xor
retf
mov
inc
(bad)
int
stos
pusha
cmp
adc
and
xchg
xchg
fild
and
inc
aam
imul
outs
int
in
scas
pop
es
lods
mov
push
int3
dec
out
cdq
sti
push
cld
inc
addr16
mov
imul
jge
fs
sbb
rol
jno
in
and
pop
cmp
out
shl
loopne
mov
aaa
movs
test
dec
loop
sahf
or
jge
sub
lock
dec
push
test
mov
add
pop
or
lea
les
lds
mov
stos
mov
push
jns
dec
add
ins
mov
das
in
or
or
mov
xchg
cmp
xchg
dec
inc
leave
cmp
lea
mov
inc
in
das
push
mov
stos
adc
pop
or
add
stos
adc
test
and
pop
mov
adc
lods
mov
lds
sbb
cwde
or
dec
lea
xchg
xlat
pop
fistp
pop
(bad)
push
iret
rcr
mov
or
mov
or
sbb
mov
jmp
or
or
fmul
or
(bad)
cdq
ret
out
and
add
cmp
xchg
and
sahf
xor
stos
mov
ds
stos
es
jecxz
pop
(bad)
out
push
movs
(bad)
jmp
into
mov
mov
jle
movs
sahf
xchg
pop
mov
icebp
xchg
cmp
and
or
test
and
mov
or
dec
sub
jg
adc
add
data16
aad
xor
clc
and
push
jl
stc
into
(bad)
leave
dec
jbe
mov
push
adc
mov
xor
inc
test
push
push
test
ret
ror
xchg
loopne
dec
add
mov
push
ror
imul
pop
pop
stos
inc
call
xchg
pop
loopne
jae
int3
mov
jge
std
push
in
xchg
in
gs
pop
push
imul
fucomp
js
addr16
mov
lods
enter
ja
adc
push
mov
sbb
inc
xchg
cs
scas
jge
push
aas
add
inc
retf
dec
dec
fcmovnu
dec
jmp
imul
push
movlps
popa
cmps
enter
scas
cmp
mov
popa
push
push
ds
dec
xchg
dec
in
jo
das
dec
cli
sahf
xchg
lods
addr16
mov
arpl
in
add
pop
sti
mov
jns
outs
stos
jmp
fsubr
sar
loope
(bad)
in
retf
push
in
jmp
lods
(bad)
icebp
mov
shr
and
mov
lea
out
cdq
mov
mov
cmp
sbb
aaa
xchg
and
mov
iret
ins
push
popf
div
je
mov
ficomp
pop
clc
outs
sub
adc
stos
(bad)
fwait
imul
dec
mov
jmp
outs
int3
or
jne
jge
lods
data16
leave
fdivr
mov
ror
mov
retf
inc
lds
ret
and
push
adc
sbb
(bad)
jbe
mov
mov
or
cmp
cmp
mov
(bad)
(bad)
add
cmps
push
dec
inc
les
jl
repz
rcl
loope
jmp
push
fild
xor
mov
retf
adc
inc
inc
mov
mov
mov
ds
js
and
sahf
inc
jns
xchg
cs
leave
pop
sub
jge
dec
int3
sbb
clc
iret
dec
cmp
dec
rol
mov
pop
pop
push
lods
cs
cmp
mov
dec
xor
and
mov
ss
popa
adc
push
or
pop
retf
mov
mov
cmp
dec
xlat
xlat
mov
jmp
xchg
inc
ror
jne
pushf
repz
outs
mov
enter
add
sub
push
leave
mov
jle
mov
jne
out
jge
or
gs
cmp
jl
jno
push
iret
dec
xlat
mov
test
and
out
mov
cmps
jno
jns
loope
push
pop
sbb
fwait
pushf
mov
fisub
mov
out
pop
mov
and
jecxz
mov
xchg
clc
into
add
push
add
outs
inc
mov
mov
cmc
test
and
push
pop
xchg
int3
mov
add
cwde
xchg
jae
jmp
inc
fiadd
js
mov
daa
movs
and
aaa
jbe
paddw
test
mov
les
or
dec
push
inc
lock
imul
fisubr
sbb
jmp
stc
sbb
leave
cmp
xor
add
and
cld
mov
aad
push
in
inc
and
cmp
ja
call
xor
sbb
ds
jmp
lea
movs
jae
rol
and
xchg
xchg
popa
cmps
fidiv
jp
ins
rcl
adc
lds
stc
xchg
in
dec
pop
or
mov
add
xchg
aam
or
cli
out
mov
rol
jecxz
dec
and
fcomp
dec
(bad)
mov
fcom
mov
mov
leave
mov
cwde
enter
mov
ss
mov
sub
jmp
push
(bad)
push
or
cmp
dec
xchg
enter
adc
in
and
and
sahf
and
scas
retf
hlt
fld
sbb
cmp
fsubrp
push
in
lds
pop
mov
mov
imul
fnsave
pop
push
xchg
add
js
jbe
movs
jmp
push
std
mov
cmp
push
hlt
mov
arpl
lock
cmps
adc
pop
mov
cmp
lahf
and
std
xor
add
pop
(bad)
cld
push
(bad)
aas
jl
jg
loope
jno
sbb
popa
mov
push
push
aaa
mov
and
jbe
push
loop
mov
test
xor
xchg
in
retf
dec
aas
mov
fldln2
ffreep
iret
in
adc
jae
lahf
xchg
ds
jp
int
push
mov
(bad)
mov
sbb
in
add
pop
nop
mov
jo
cs
dec
sar
int3
push
dec
jns
ds
push
fs
xor
jnp
aaa
aam
fisubr
std
adc
mov
test
jmp
inc
mov
push
xor
inc
shl
inc
cmp
mov
mov
dec
js
fistp
repnz
adc
dec
pop
mov
mov
pop
rcr
into
daa
rcl
dec
popf
cwde
outs
retf
sti
scas
inc
sub
xlat
sbb
mov
cmovp
mov
inc
retf
mov
neg
(bad)
dec
test
xchg
mov
lds
sbb
fdiv
sub
fst
adc
xlat
int
xchg
add
sbb
dec
or
(bad)
jnp
mov
dec
(bad)
pop
stc
shl
dec
jmp
push
aaa
ins
fiadd
or
cmps
pop
pushf
clc
cmp
lods
icebp
or
sti
add
das
in
(bad)
mov
aaa
lahf
loope
mov
mov
es
jno
mov
add
jns
mov
xlat
adc
jne
jnp
aad
daa
pop
add
add
cmp
mov
xchg
and
sub
add
fstp
jmp
sbb
scas
outs
sbb
mov
push
mov
push
xor
and
call
xchg
pop
pop
jl
lods
loope
xor
cmp
dec
retf
adc
cmps
ret
div
adc
inc
pop
sbb
and
mov
adc
in
cmp
scas
fdivr
sti
mov
jb
pop
cld
retf
cdq
shr
mov
repz
mov
mov
mov
dec
sub
scas
aaa
cmp
and
jmp
jp
cld
jbe
movs
out
retf
cmp
lahf
dec
or
(bad)
(bad)
jp
pop
sub
je
mov
(bad)
cmp
jne
inc
jbe
inc
sbb
rcl
push
jmp
push
test
call
mov
xchg
mul
push
cmps
pop
fucomip
repz
jb
or
push
mov
mov
stc
cmp
ret
stos
inc
js
daa
mov
xor
mov
pop
or
jno
cwde
adc
pop
xlat
idiv
mov
mov
outs
popf
clc
or
sub
fwait
lock
xchg
out
daa
mov
das
mov
lods
inc
push
int3
inc
leave
add
inc
dec
retf
das
clc
push
jmp
fnsave
mov
std
jnp
push
stos
add
pushf
mov
mov
cmp
xor
int3
xchg
rol
pop
(bad)
adc
stos
push
jp
out
sub
std
add
test
add
test
fdiv
iret
out
pop
xor
dec
(bad)
pop
mov
mov
pop
dec
ss
mov
imul
dec
test
or
jns
fild
and
aam
aad
pop
jbe
test
call
aaa
push
icebp
lea
ret
imul
je
fst
push
stos
cli
data16
mov
and
call
push
mov
ret
in
in
sub
out
inc
ins
out
stos
sub
int3
dec
inc
push
jae
dec
jns
(bad)
out
cmp
push
cli
fmul
(bad)
xor
sbb
lea
ss
mov
jnp
push
push
dec
mov
cmc
cmp
sub
jnp
push
fistp
dec
gs
inc
xor
dec
es
push
add
jb
fcmovb
iret
pop
xlat
pop
push
pop
rcr
(bad)
in
adc
pop
gs
push
push
cmp
jne
pop
or
call
sub
movs
test
mov
jae
(bad)
jecxz
ins
push
mov
inc
je
pop
and
pop
lea
add
mov
lods
push
out
xchg
mov
mov
jmp
jmp
test
adc
out
into
fdivp
or
xchg
push
ja
out
ret
in
inc
std
imul
sar
mov
push
ret
jae
add
xor
xchg
push
mov
aaa
xchg
inc
xchg
aad
jg
fidivr
xor
xor
out
shl
(bad)
out
inc
mov
icebp
or
sbb
pusha
cmc
mov
pushf
js
out
sar
jg
test
cmps
ss
inc
or
xchg
push
fwait
adc
pop
out
loopne
dec
sbb
mov
inc
shl
xor
pop
xor
cmp
into
jbe
inc
dec
pop
dec
sub
jo
cmp
lods
pop
xor
inc
mov
push
xor
push
mov
aad
scas
mov
loopne
jmp
or
aad
sbb
cld
dec
fisubr
cmps
punpcklbw
cmc
push
mov
in
mov
popa
jno
adc
imul
cmps
mov
jmp
fcom
sub
mov
call
fmul
retf
push
mov
pop
das
pop
inc
aam
pop
xor
adc
xchg
aam
lods
(bad)
movs
out
loop
cmp
cmp
xor
es
sar
dec
lock
int3
repnz
xor
ins
jg
add
push
sbb
jmp
retf
lahf
add
jmp
ja
ja
aam
xchg
daa
pop
out
pop
push
sbb
sti
ins
inc
out
adc
mov
adc
fild
or
test
out
jns
dec
clc
movs
mov
outs
pop
jg
push
xor
pop
iret
lock
adc
sbb
and
gs
mov
xchg
adc
sub
xchg
sar
movs
aam
or
(bad)
jge
mov
aas
jle
ret
and
xor
pop
ja
mov
pop
xchg
fnstenv
test
sub
ins
in
mov
xchg
int3
mov
fisubr
mov
xchg
push
loope
dec
jp
(bad)
rol
xchg
jo
mov
scas
fldenv
mov
and
add
aam
add
les
inc
(bad)
xchg
sahf
and
dec
pop
push
lea
xor
and
jb
inc
mov
ja
adc
test
imul
xor
jae
iret
test
or
iret
xor
adc
jns
cmc
mov
xchg
call
test
rcl
cmc
lock
xchg
inc
dec
icebp
jnp
int3
arpl
loope
cmp
sub
pop
xor
movs
retf
add
clc
lahf
and
jle
mov
jecxz
rcl
fisubr
jle
and
cmc
loope
push
int3
out
outs
mov
mov
mov
jo
mov
sub
icebp
sub
idiv
int
add
(bad)
fucomi
retf
push
jmp
fmul
(bad)
(bad)
call
cdq
push
das
test
int3
adc
gs
mov
mov
jmp
stc
in
dec
push
es
pop
daa
ret
add
lods
inc
sbb
lods
ja
icebp
stos
mov
push
xchg
clc
push
enter
gs
adc
add
popa
mov
push
icebp
(bad)
mov
mov
in
pop
inc
pushf
lods
sbb
les
fadd
mov
xchg
mov
or
ins
popa
adc
mov
adc
xchg
jmp
ss
test
pop
or
cmp
sub
iret
mov
in
ret
int3
lods
jecxz
sbb
add
or
or
inc
jnp
inc
outs
or
jae
jecxz
aaa
cdq
out
mov
xchg
dec
pusha
inc
pop
shl
pop
jne
inc
pop
std
jae
jno
mulps
fbld
mov
scas
bound
mov
push
and
pop
jns
das
(bad)
out
add
jmp
out
sub
retf
cld
(bad)
mov
(bad)
retf
fwait
scas
ins
or
jb
sub
jmp
(bad)
icebp
bound
outs
in
cmps
scas
cdq
jne
mov
test
xchg
das
cmp
jg
xchg
test
lods
outs
xchg
sbb
int
fbstp
and
or
push
mov
js
mov
mov
aas
jmp
je
and
xchg
fwait
sub
cld
fs
adc
mov
pushf
fsubr
sub
lods
mov
pop
sub
sti
out
and
shl
pop
iret
rcl
mov
mov
adc
xchg
test
jns
mov
shl
rcl
push
popf
inc
push
push
lds
jmp
mov
xor
cli
(bad)
mov
js
xchg
jecxz
inc
xor
retf
lock
aad
out
adc
outs
and
pop
test
xchg
aas
cmc
shr
data16
sub
test
stc
outs
xchg
fistp
jmp
xor
js
shr
xor
mov
cmps
dec
bound
fstp
inc
inc
fistp
adc
mov
jo
xchg
xchg
adc
lods
inc
jp
jb
xchg
sbb
(bad)
adc
push
cmps
fld
add
dec
mov
mov
adc
jb
jbe
stos
jl
dec
movs
das
mov
(bad)
mov
mov
mov
lds
pop
dec
(bad)
jmp
and
les
test
sub
push
add
out
out
mov
mov
pusha
loopne
adc
lods
pop
push
cmps
cmps
std
sbb
mov
stos
xchg
or
pop
add
mov
in
imul
hlt
popf
push
or
sar
movs
aas
push
movs
fcom
adc
stc
mov
mov
gs
ret
retf
xor
lods
shl
push
repz
fstp
push
fidivr
push
cmp
mov
xor
cli
sub
cmp
xchg
jne
bound
xor
rcr
xchg
pop
shr
dec
repnz
test
mov
out
push
hlt
(bad)
pop
xchg
add
fwait
cld
xor
push
shl
pop
mov
out
sbb
dec
je
loopne
retf
das
inc
mov
sbb
mov
sub
in
sub
fstp
(bad)
loop
adc
fld
dec
cmp
fucomp
stc
push
ss
pop
jl
mov
imul
mov
push
cli
ss
sub
mov
and
fdiv
mov
sub
lods
(bad)
clc
add
stc
call
adc
fbstp
dec
call
or
inc
ror
cmp
mov
sub
call
dec
daa
mov
(bad)
rsm
mov
inc
adc
mov
fcmovne
fsub
imul
xchg
pop
add
bound
xchg
push
data16
fsubr
idiv
push
xchg
sub
add
xor
mov
cmp
xchg
sbb
jo
test
inc
(bad)
fisttp
int
sahf
pop
jmp
jp
xchg
dec
ins
loopne
lds
mov
fdivp
jecxz
jg
mov
xor
fsubr
ds
fmul
pop
mov
and
jge
mov
mov
or
pop
inc
pop
sbb
les
add
mov
imul
adc
icebp
xchg
xchg
sbb
xchg
fnsave
sbb
movs
(bad)
jmp
pop
outs
jle
inc
jmp
outs
popf
clc
repnz
retf
pop
js
push
jmp
stos
jmp
in
outs
or
jg
ins
mov
loopne
push
arpl
jmp
outs
pop
hlt
inc
pop
fcomi
(bad)
xchg
pop
mov
mov
jl
imul
cdq
add
jb
pushf
repnz
mov
scas
xor
cmp
mov
xchg
mov
cmps
dec
jne
fld
rcl
shr
dec
mov
pop
push
mov
ror
into
mov
adc
pushf
push
sbb
mov
rol
retf
mov
call
jp
sub
sahf
imul
dec
imul
xchg
mov
push
xchg
push
out
mov
jmp
fcomi
pop
xchg
add
push
jae
loopne
int
popa
jmp
hlt
adc
data16
lds
jl
cmps
ret
mov
push
pop
mov
cmc
cdq
scas
je
dec
fistp
ja
lea
ins
xchg
aaa
mov
lea
inc
(bad)
fistp
mov
sub
rcl
inc
jno
xor
xor
dec
sub
das
sub
in
push
push
fidivr
sub
popa
push
xor
dec
pop
mov
dec
mov
sbb
sahf
repnz
mov
push
push
jb
ins
sbb
pop
sti
jns
add
fistp
shr
jle
shr
push
mov
inc
frstor
or
push
or
mov
jae
jne
mov
nop
mov
or
jno
push
sub
not
fsub
sahf
xchg
inc
pushf
pop
imul
xchg
jo
mov
and
mov
push
inc
adc
enter
sbb
add
mov
aas
popf
jp
call
shr
addr16
jo
das
icebp
inc
test
or
inc
xchg
add
mov
shl
mov
mov
push
lock
stos
mov
pop
cmp
inc
test
mov
and
xchg
xchg
adc
ja
xor
cmp
lea
mov
cmp
xor
repnz
push
inc
clc
inc
xor
ds
clc
pop
out
nop
lea
out
iret
iret
xchg
ss
jnp
and
mov
push
mov
jge
gs
scas
xor
arpl
pushf
std
(bad)
pop
fld
xchg
mov
fwait
add
xor
aas
adc
xor
cld
bound
xchg
out
addr16
dec
mov
mov
test
cli
dec
je
movs
mov
sbb
xchg
je
cmpxchg
clc
xlat
cmc
dec
xchg
and
cwde
sbb
xchg
cmp
cld
lea
je
int
or
mov
ja
dec
cmp
mov
push
xor
test
jne
and
in
sub
sbb
(bad)
imul
mov
stos
jge
xlat
or
dec
sbb
dec
sub
cli
jne
xchg
test
loope
mov
aaa
mov
push
dec
ror
mov
mov
or
dec
cmp
and
and
and
xor
sbb
jmp
and
add
add
or
dec
retf
loopne
jle
call
fsubr
js
xchg
enter
xlat
lock
sti
out
mov
cli
jmp
shl
or
popa
mov
mov
jo
xchg
mov
int
sub
in
and
sub
push
inc
nop
xor
xchg
sbb
dec
cmp
in
mov
rcl
(bad)
into
scas
sar
(bad)
aam
retf
out
sbb
call
retf
mov
adc
push
pop
in
inc
das
ror
ds
in
ret
(bad)
fyl2x
cdq
cmc
in
push
shl
sbb
dec
ret
push
dec
jl
sub
addr16
test
addr16
xchg
jnp
mov
xor
imul
(bad)
out
inc
adc
mov
and
push
xchg
in
dec
xor
or
mov
mov
in
es
mov
adc
mov
(bad)
xchg
sub
cmp
shl
xor
js
fld
or
fistp
add
inc
xlat
loop
scas
div
dec
sahf
or
pop
push
jne
push
jns
fsubr
(bad)
sub
loop
rcl
je
sub
pop
lods
sbb
imul
dec
iret
int
rcl
stos
adc
mov
xchg
mov
mov
mov
test
loope
mov
sbb
int3
lods
push
jecxz
(bad)
mov
sub
adc
pop
xchg
mov
and
xchg
jl
adc
xchg
lock
enter
mov
lods
cmp
mov
scas
mov
jns
or
mov
cmp
ret
ficomp
push
(bad)
cld
or
xor
cdq
xor
mov
das
les
jmp
fs
sbb
dec
shr
jno
je
lahf
jge
jo
xlat
aaa
lds
rcr
inc
add
adc
push
push
sahf
xor
adc
pushf
daa
jmp
and
xchg
xchg
inc
das
shl
pusha
xchg
mov
push
lods
add
mov
pop
shl
mov
jge
jle
pusha
in
cld
cmp
mov
test
test
popa
out
lods
cmp
sbb
(bad)
jb
inc
xchg
lds
cdq
cmps
xor
add
js
(bad)
or
pusha
sub
mov
adc
xchg
dec
mov
adc
mov
popa
fcmovnu
and
cwde
add
jle
nop
pop
xchg
adc
cmc
in
sbb
sbb
xor
and
mov
mov
xchg
movs
out
pushf
and
push
mov
ins
push
inc
(bad)
jmp
mov
push
retf
xchg
mov
lods
imul
inc
call
push
adc
jno
les
and
outs
addr16
xor
mov
loope
scas
pop
and
stc
lahf
cli
jb
mov
dec
fstp
mov
dec
shr
out
jns
adc
fmul
or
fiadd
or
fidivr
dec
dec
mov
push
ja
add
adc
or
pop
fld
popf
mov
push
daa
cdq
loop
mov
data16
cmp
int
imul
sub
inc
lea
inc
pop
ficom
rol
xchg
pop
adc
adc
push
xor
push
fs
in
mov
jmp
xchg
arpl
jae
and
rcl
pushf
shr
sbb
cmp
or
pop
cmp
sub
(bad)
ret
ss
ss
lea
daa
xor
js
test
leave
in
and
jmp
pushf
sub
inc
out
js
shl
and
out
sub
fistp
jmp
int3
mov
jb
xchg
addr16
xchg
push
movs
mov
push
add
fstp
cmc
push
mov
sahf
inc
push
sub
popa
outs
push
clc
aaa
fstp
or
movs
mov
push
fnstsw
sub
or
adc
mov
adc
pop
cmc
sbb
mov
(bad)
mov
loope
loopne
js
push
mov
dec
jne
inc
in
jmp
in
adc
jge
jns
outs
fstp
enter
fmul
add
adc
inc
cmp
add
fnsave
jg
ja
xchg
fsubr
mov
sub
jb
aam
fwait
pop
mov
pop
stos
pop
(bad)
xor
iret
pop
(bad)
or
jp
sbb
lods
inc
cmps
mov
or
in
imul
cld
dec
xlat
aad
mov
and
inc
jmp
fdiv
mov
adc
ret
jno
jg
jle
or
jmp
add
push
push
xchg
sbb
sti
out
mov
or
mov
out
out
or
mov
or
mov
nop
mov
and
or
enter
jmp
enter
shl
and
je
adc
mov
add
test
sub
ret
mov
jno
add
ret
(bad)
fsubr
(bad)
dec
mov
or
mov
cmp
xor
cmp
jmp
add
fs
pusha
rol
test
push
jmp
jo
pop
add
mov
mov
int
dec
cli
cdq
popf
mov
fabs
popa
dec
or
sbb
cdq
push
mov
jo
std
xor
in
sbb
xchg
leave
fucomp
sub
icebp
inc
pop
jo
mov
imul
push
cmps
mov
mov
adc
xchg
dec
xor
(bad)
jno
icebp
in
cmp
or
xchg
inc
inc
mov
sbb
xchg
fidiv
sbb
mov
fwait
push
xchg
fcomp
lock
mov
sub
cld
popf
xor
sahf
pop
xor
inc
je
pop
jg
inc
adc
in
into
inc
stos
cmc
stc
xchg
fisttp
add
and
aam
xchg
sub
scas
xchg
fld
ja
imul
out
xchg
mov
mov
xchg
adc
add
add
cs
fs
xor
or
jge
popf
xchg
jbe
(bad)
mov
mov
fimul
add
das
mov
(bad)
and
dec
into
cmps
imul
sub
pushf
inc
fidivr
jae
adc
cmp
stos
or
fsub
jne
jmp
lock
shl
mov
sbb
ja
sbb
hlt
inc
cs
lahf
scas
sti
jle
xchg
sti
(bad)
fsubr
push
fdiv
adc
ins
fsub
ret
test
ss
outs
fucomip
mov
test
push
je
pop
es
scas
pusha
in
stc
sub
mov
test
add
outs
(bad)
sub
jbe
cmp
cs
mov
icebp
ror
(bad)
adc
dec
jg
cmps
test
sbb
pop
push
cmp
mov
mov
jg
dec
arpl
call
jl
or
fwait
xor
mov
ret
cmp
sub
rol
sbb
addr16
mov
sbb
aas
loop
push
stc
int3
(bad)
jecxz
pop
sub
xor
pop
outs
bound
push
aaa
(bad)
cmp
jp
in
scas
(bad)
mov
xchg
outs
mov
lds
cs
sbb
mov
out
cmp
xchg
push
fsubr
jno
mov
pop
fcomip
(bad)
push
mov
mov
mov
addr16
cld
out
aaa
fstp
pop
rol
push
dec
sbb
scas
(bad)
aaa
test
sub
and
mov
fdivr
sub
lahf
imul
mov
test
icebp
mov
xchg
int
dec
retf
in
mov
push
or
das
mov
aad
pusha
mov
(bad)
out
or
dec
dec
call
addr16
and
lahf
out
pop
and
dec
cmp
fild
mov
cmp
rol
xor
dec
jl
jmp
sub
push
les
sub
lds
in
push
cli
sub
mov
sbb
fcom
push
xchg
repz
and
push
fisttp
sbb
or
rcl
aam
cwd
hlt
jg
leave
add
mov
push
xchg
mov
ja
xchg
push
fs
jge
arpl
or
push
aas
jmp
shl
cmp
jnp
outs
push
ja
add
pop
popf
sbb
sbb
ror
addr16
test
and
sar
fwait
xchg
push
sub
repnz
add
push
adc
rcl
es
das
mov
aaa
cdq
xchg
xlat
stos
mov
xchg
mov
push
inc
pop
and
xlat
les
adc
std
popa
mov
imul
arpl
clc
enter
pop
adc
frstor
mov
ficomp
ins
pop
adc
mov
jge
jecxz
lods
pop
fidiv
push
movs
in
aam
mov
adc
retf
icebp
add
movs
xchg
xor
sbb
(bad)
in
pusha
xchg
(bad)
jnp
cmp
mov
add
hlt
fdiv
sub
jne
xchg
loopne
jno
lahf
xchg
ins
or
adc
dec
fsub
icebp
addr16
iret
add
mov
jnp
xor
mov
dec
ins
lock
add
or
fnstcw
mov
mov
in
int
mov
xchg
add
push
out
sbb
daa
fwait
lods
pop
sti
push
sbb
cwde
setno
jl
popa
sbb
sbb
push
sahf
out
dec
inc
push
lds
dec
or
inc
imul
icebp
sub
dec
dec
push
jl
(bad)
cdq
mov
cmps
in
or
and
add
adc
test
(bad)
mov
aas
sbb
dec
sbb
sub
into
jne
add
imul
jle
xor
mov
dec
xor
and
mov
jb
std
sbb
into
(bad)
mov
sbb
fdivr
jp
sub
imul
jg
cmp
or
sub
imul
loope
push
mov
mov
ins
mov
call
in
test
sub
push
mov
imul
fistp
stos
loop
and
lea
scas
pop
dec
and
pop
jo
popf
into
fisub
sub
mov
pop
jb
inc
test
sbb
dec
js
iret
popa
scas
fsubrp
push
add
pop
mov
movs
movs
cmc
popf
mov
xchg
repz
xor
mov
les
into
mov
imul
or
jmp
inc
cmp
inc
enter
jge
mov
sub
xor
jbe
cmps
cmp
mov
mov
retf
sti
shl
mov
imul
dec
xchg
fld
sbb
inc
jl
xor
cld
mov
cmp
add
sbb
or
ds
add
iret
aad
int
jg
sub
fsubr
pop
aad
sub
aad
leave
sahf
ror
rcr
push
scas
lahf
sub
jno
push
and
cli
out
xchg
pusha
xchg
push
repz
mov
lea
movs
test
dec
dec
stos
mov
add
in
shl
mov
mov
and
inc
aad
je
dec
mov
loop
pop
push
jno
loope
adc
test
xor
xor
dec
pop
fwait
outs
mov
jp
in
push
push
aaa
cdq
cmps
jne
pop
mov
mov
fsubr
or
sub
and
pop
nop
xchg
lods
cld
out
outs
nop
aas
shl
xchg
add
leave
xchg
ficom
mov
mov
cmp
stos
sub
(bad)
loopne
sar
mov
jbe
loop
mov
xor
xchg
sbb
mov
movs
jne
bound
dec
cmc
ja
mov
jmp
lahf
adc
repz
mov
jns
sbb
xor
popa
cmpps
inc
mov
pop
add
sbb
add
sahf
add
mov
cmc
sbb
movs
or
and
jnp
int3
jl
mov
pop
(bad)
out
scas
adc
jecxz
inc
imul
bound
cld
sbb
push
push
jnp
xchg
or
xchg
scas
mov
inc
mov
sti
icebp
pop
ins
cmps
mov
movs
fimul
fcomp
push
and
in
(bad)
push
call
xchg
cmp
test
adc
pop
popf
inc
sbb
sbb
scas
enter
ds
out
xchg
ins
xchg
pop
xor
div
repnz
push
mov
(bad)
sub
fwait
ins
inc
js
or
mov
aam
sub
jne
xchg
or
cwde
jge
in
scas
mov
jge
xor
jp
and
in
addr16
mov
mov
sar
lods
repnz
jle
mov
arpl
mov
ins
inc
popa
adc
ss
fistp
div
clc
stos
(bad)
clc
pusha
ror
mov
xor
mov
aad
sbb
xchg
or
ret
push
fsub
pop
or
in
ret
dec
cmp
cs
or
pop
xor
add
rol
mov
bound
(bad)
movs
inc
enter
mov
push
push
(bad)
mov
or
mov
lock
adc
aad
or
mov
jae
mov
lods
aam
or
push
jle
or
xor
xchg
jge
sti
adc
add
hlt
add
xor
scas
pop
or
das
addr16
jnp
lahf
(bad)
mov
sub
push
(bad)
push
and
jmp
mov
out
xor
xor
icebp
fbld
push
pop
hlt
jp
xchg
mov
cmp
push
push
cmps
movs
cmp
dec
into
sub
cmps
push
inc
push
loopne
cmp
loope
(bad)
mov
sahf
ins
clc
push
(bad)
add
test
push
js
cmc
imul
lods
pop
imul
and
jb
inc
shr
jge
or
sbb
lods
mov
inc
out
jo
add
dec
outs
pop
leave
xlat
addr16
jnp
jns
mov
fisub
mov
sbb
xor
jl
or
push
mov
push
cmp
inc
jecxz
fdiv
(bad)
cli
mov
xlat
dec
inc
push
bound
loopne
mov
leave
cmp
sbb
scas
int3
sbb
loope
xchg
sbb
in
ins
mov
nop
lea
xor
aam
push
loope
sub
adc
sub
mov
xchg
push
lock
pop
dec
sub
push
inc
outs
shl
push
cwde
mov
fmul
jns
push
(bad)
aas
cmp
mov
jl
mov
dec
fwait
xor
pop
sar
xchg
mov
repnz
mul
jmp
mov
retf
aaa
lahf
ret
push
pop
jbe
lock
dec
fwait
cmp
hlt
cli
add
sti
pop
outs
and
(bad)
mov
mov
pop
sbb
cmp
or
retf
push
fadd
inc
mov
(bad)
xor
adc
mov
jno
push
rcl
jecxz
out
and
clc
loop
fnstenv
sub
daa
adc
fs
cdq
mov
fdivr
inc
cdq
mov
add
jecxz
dec
call
cdq
jecxz
pop
dec
jecxz
push
mov
jl
inc
mov
pop
int3
stos
stc
cdq
mov
rol
or
or
repnz
sbb
inc
pop
popa
mov
mov
xchg
xor
jle
and
fld
repnz
inc
fst
arpl
movs
idiv
jb
ret
xor
fdiv
xchg
xor
mov
retf
cli
cmps
and
leave
mov
jmp
jg
in
mov
xor
push
cmp
jge
mov
sahf
jb
pop
cmp
xchg
mov
fs
mov
lock
enter
arpl
jg
sti
in
cli
rep
scas
xchg
jl
jae
and
push
inc
ss
mov
mov
sbb
xor
push
and
cmp
add
mov
and
pop
cli
push
(bad)
popf
xor
and
sbb
add
jge
sahf
int3
xchg
int
fbld
das
repz
sub
or
adc
inc
mov
or
lahf
rcr
ret
dec
outs
xchg
xchg
dec
fisub
shl
and
nop
test
pop
mov
adc
repz
ret
(bad)
into
push
mov
cs
mov
xchg
lods
xor
ins
frstor
popa
sub
fwait
sub
cmp
add
mov
shl
jle
xor
add
mov
ror
ins
(bad)
into
push
js
xchg
fldcw
jmp
jecxz
jg
pop
mov
out
fwait
pop
mov
sub
push
mov
pop
cmp
mov
aaa
mov
lds
iret
mov
jne
icebp
push
mov
mov
mov
and
cs
jne
cdq
dec
inc
jbe
daa
out
test
mov
or
inc
sub
ud2
sub
outs
call
or
fcmove
mov
jg
dec
pop
add
aas
or
fnstsw
fldcw
daa
jecxz
jne
jo
xor
(bad)
hlt
pop
pop
data16
jg
pop
dec
dec
movs
inc
jns
add
mov
gs
push
dec
adc
xchg
xor
push
out
xor
push
inc
and
sbb
cmps
jne
inc
fwait
or
mov
shl
ja
call
(bad)
nop
mov
cmp
pop
gs
xor
or
xor
out
gs
add
enter
iret
sbb
sub
lea
mov
pop
mov
xor
sbb
in
popa
inc
call
dec
push
xor
cmp
or
sti
sar
sbb
outs
mov
mov
iret
push
jns
shl
push
sub
cmc
lods
lahf
inc
std
inc
ret
stos
mov
test
jp
mov
mov
push
imul
sti
test
stc
movd
mov
inc
scas
xchg
or
mov
push
and
xor
sub
dec
push
dec
fistp
pop
repnz
dec
es
lock
jmp
pushf
stc
lods
mov
adc
sub
jp
(bad)
retf
xor
lock
mov
test
not
jnp
jmp
mov
int
xchg
mov
imul
jle
add
imul
add
dec
repnz
push
lahf
inc
nop
addr16
rcl
fnstenv
jl
mov
out
int3
inc
cdq
lds
int3
jle
and
and
push
jecxz
jge
mov
pushf
dec
xchg
and
lods
push
fisub
fldcw
mov
test
adc
and
pop
sbb
pop
adc
mov
adc
popa
cmp
sbb
mov
das
imul
cmp
sbb
adc
sbb
mov
cmps
arpl
jae
add
aas
mov
jb
push
push
sbb
sbb
xlat
xchg
jns
ds
mul
imul
sbb
cdq
adc
imul
add
mov
mov
test
jmp
dec
lea
and
cmps
or
(bad)
mov
jno
inc
popf
jmp
sti
stos
push
scas
dec
or
out
ins
add
fsub
daa
cmps
jmp
mov
and
stos
adc
test
xlat
add
dec
loope
cmc
ror
jns
aam
jp
xchg
les
xcrypt-cbc
cmps
xchg
add
cmp
xor
jb
or
pop
sbb
lods
add
test
pushf
test
cmps
or
inc
je
out
sub
pop
into
stc
add
push
lods
nop
arpl
xor
pop
dec
addr16
scas
ins
int
mov
dec
sbb
fbld
xor
dec
in
xor
jo
dec
xor
push
jg
and
in
xor
xor
ret
xchg
mov
mov
dec
retf
push
outs
pop
and
bound
or
test
in
jge
movs
scas
xchg
ret
ins
adc
arpl
cmp
aaa
jo
sub
sub
icebp
jmp
push
lods
mov
adc
push
push
aas
lods
stos
jno
mov
ds
ficom
sub
mov
inc
cdq
shr
dec
ret
mov
jne
sub
cmp
mov
mov
leave
inc
cmps
pushf
inc
pop
lock
sub
push
jnp
fbld
inc
popa
jnp
mov
jle
jmp
out
outs
idiv
sbb
jb
push
(bad)
lods
shl
or
imul
fstp
inc
push
push
add
sub
mov
dec
adc
mov
and
push
push
std
jno
out
fs
fild
add
fcmovnu
out
ja
lds
xor
push
retf
lods
fisubr
or
arpl
sub
push
jmp
lock
xchg
scas
mov
inc
xor
mov
lahf
aam
cmp
imul
push
je
popa
pop
mov
lds
cs
xchg
xchg
push
aaa
add
test
cdq
dec
icebp
popa
addr16
lods
jbe
(bad)
enter
call
leave
sub
fdivr
jge
inc
in
xor
lahf
cmp
stc
jo
jnp
or
fdivp
dec
mov
sti
std
sbb
mov
test
cmp
cmp
cmp
iret
or
cmp
push
cmps
and
fst
shr
or
rol
jb
loop
mov
sub
add
lods
xor
jae
repnz
ds
pop
test
add
test
(bad)
fdivp
retf
adc
lock
arpl
dec
jo
push
das
nop
and
push
or
dec
mov
mov
mov
inc
jle
popf
cmp
(bad)
cmc
neg
pop
and
retf
jl
in
aam
aaa
sbb
mov
ins
sti
outs
pop
loop
loope
or
push
cld
(bad)
loop
cli
nop
pop
push
movs
jge
mov
adc
ds
cmp
jb
test
jns
pop
sti
(bad)
popa
jecxz
enter
inc
jb
xchg
into
or
add
xchg
mov
fs
pop
pop
jmp
dec
dec
mov
sbb
and
and
leave
xchg
ret
adc
sub
stos
jbe
xor
sbb
xor
sbb
mov
mov
push
inc
(bad)
cmps
icebp
xchg
out
dec
mov
arpl
mov
and
les
ret
add
xor
aas
inc
cmp
js
or
xor
(bad)
aam
pop
cmp
inc
mov
fninit
mov
adc
jmp
xor
xchg
daa
adc
jo
fnsave
scas
xor
pop
ins
leave
daa
add
test
cmp
jle
int3
das
or
pop
shl
mov
and
mov
adc
das
dec
mov
inc
mov
jbe
pop
loop
mov
sub
push
lahf
add
dec
pop
mov
inc
les
inc
stos
or
repnz
mov
idiv
inc
test
pushf
dec
scas
ins
fild
sbb
leave
loopne
mov
mov
ja
jl
retf
or
push
stos
movs
sti
out
mov
push
jbe
es
pop
fidivr
push
mov
jle
or
sbb
add
stos
xchg
cwde
sbb
push
shr
push
xor
pop
sbb
imul
mov
sbb
das
mov
and
mov
mov
pop
mov
add
int3
ja
adc
dec
push
int
fidivr
adc
push
mov
push
or
test
lock
ror
ror
pop
div
popa
ficomp
sbb
das
imul
xor
jle
call
inc
add
adc
inc
mov
xchg
jae
mov
int
xchg
xchg
mov
mov
mov
dec
jmp
mov
lea
or
je
sub
aas
in
jae
inc
data16
daa
xchg
imul
adc
xchg
(bad)
cmp
aad
jne
mov
sbb
cmp
(bad)
adc
(bad)
xchg
adc
popf
xor
inc
sbb
fs
inc
push
jbe
xor
inc
mov
call
inc
mov
mov
enter
push
and
rcl
sub
cld
stos
mov
push
sbb
dec
mov
xor
adc
loope
pop
sbb
ins
sub
adc
push
push
int
inc
jns
add
aam
cs
push
sub
xor
popa
test
mov
outs
jb
mov
sar
stos
jne
sbb
fisub
cmp
gs
mov
(bad)
scas
dec
into
test
daa
mov
xlat
aaa
xchg
lea
les
call
gs
ja
iret
stos
adc
repz
mov
cmp
or
fiadd
iret
or
scas
mov
add
xor
test
mov
fld
fbld
ret
dec
xor
mov
addr16
pop
mov
in
lea
jnp
push
daa
pop
ror
mov
(bad)
ins
adc
movs
mov
jae
mov
or
sub
fistp
dec
cmp
pop
fcomp
pop
cs
imul
pop
mov
lods
out
and
mov
stos
and
sbb
cmp
jno
mov
sbb
sahf
leave
fisubr
cdq
into
cmp
sbb
xor
adc
push
mov
and
ds
in
(bad)
mov
popa
inc
sub
xor
cmps
outs
cmps
and
into
ror
inc
mov
xor
cs
mov
sub
xor
enter
xor
and
aaa
rol
mov
sub
push
fdivr
push
out
push
mov
mov
mov
mov
repz
jmp
and
in
popa
xchg
cmp
xchg
jmp
sub
call
cmps
outs
in
sub
(bad)
into
and
jmp
test
fstp
or
sub
rol
xor
scas
mov
shl
int
mov
xchg
sub
mov
cs
inc
mov
jg
or
shl
and
pop
mov
push
pop
js
fcomp
push
cmp
xchg
sar
ss
rcl
inc
in
popa
sbb
mov
outs
fisttp
mov
shl
lods
cmp
cmps
neg
jg
int
sbb
std
test
xchg
stc
call
shl
jo
shl
es
pop
mov
xor
ins
out
mov
xor
loop
mov
jmp
pop
mov
test
out
call
rcr
call
fnstenv
sub
jge
mov
push
mov
dec
sahf
add
shr
cmc
mov
mov
cmp
repz
push
jge
stc
xchg
ja
int
cli
lock
push
xor
sub
retf
movs
jl
repnz
sbb
leave
daa
mov
sbb
out
adc
add
xchg
test
retf
sti
push
test
je
and
imul
pop
push
mov
cmp
mov
jl
clc
dec
push
dec
cmc
pop
dec
push
jg
ds
dec
aam
add
(bad)
xor
adc
jns
add
cli
or
add
cs
xor
add
(bad)
mov
push
inc
jmp
ss
mov
xor
icebp
ficomp
cdq
or
push
arpl
inc
jp
aas
or
cmp
xchg
repz
and
scas
test
fild
cmp
iret
cmp
bound
jecxz
xchg
hlt
adc
popa
jecxz
ret
movs
mov
xchg
dec
xor
std
addr16
(bad)
adc
outs
ds
cs
or
fbld
cs
adc
sets
repz
cmc
fcomp
repnz
xor
mov
pop
repz
daa
adc
push
repnz
push
pop
or
(bad)
lods
inc
xor
enter
dec
aaa
add
dec
dec
push
jo
icebp
and
retf
sbb
and
push
(bad)
outs
push
jmp
ins
out
ins
ret
in
xchg
sub
jbe
inc
push
sub
retf
pop
(bad)
call
outs
push
mov
push
cmp
outs
xchg
out
(bad)
push
cmps
gs
sub
outs
frstor
lock
aad
adc
jge
sub
push
jle
inc
pop
inc
pop
push
sbb
scas
sbb
and
mov
retf
mov
jmp
inc
add
and
and
inc
ret
in
inc
loop
mov
lods
(bad)
test
jecxz
xor
adc
pop
rcr
sbb
mov
out
inc
add
and
shl
shr
call
ffree
pushf
xor
sti
rcr
mov
lea
ret
(bad)
push
in
push
ror
jnp
stos
test
loopne
jl
out
add
mov
arpl
xor
cmps
(bad)
sbb
push
inc
fldcw
data16
dec
cdq
icebp
iret
lds
test
push
shl
xchg
fmul
mov
lods
jmp
sbb
cld
mov
dec
fimul
ds
and
je
ret
jmp
jb
xchg
dec
out
push
mov
icebp
jb
push
jae
fild
in
cmp
adc
xlat
dec
ds
cmps
stos
jp
iret
in
imul
ds
jp
xchg
mov
pop
or
cmps
leave
jns
stos
sti
pop
in
test
ficom
retf
(bad)
dec
adc
test
mov
mov
and
and
push
jp
movs
xor
pop
addr16
lods
addr16
mov
adc
xchg
cmp
es
and
fidivr
push
sub
adc
mov
mov
push
or
in
xchg
inc
rcr
xchg
gs
ds
mov
jno
push
movs
pop
shl
mov
loope
pop
retf
mov
jnp
mov
xchg
cmp
sub
mov
push
cmp
out
sub
jae
push
es
div
pop
push
add
out
ss
pop
idiv
jecxz
mov
cdq
or
mul
inc
int
xchg
add
xor
jge
out
shl
in
ins
mov
push
dec
(bad)
div
stos
retf
call
test
sti
out
pushf
xor
ret
or
ror
push
mov
les
inc
aam
movs
pushf
push
mov
or
daa
ins
sub
xor
xchg
int3
mov
mov
call
dec
mov
fist
mov
mov
pop
inc
mov
ss
mov
sub
jnp
jmp
stc
cmp
mov
movs
sub
xlat
adc
cmp
iret
jmp
xchg
jl
xor
pop
cmc
jno
add
fidiv
cld
push
lds
dec
hlt
shr
xchg
mov
inc
sub
xor
inc
jg
xchg
idiv
call
fst
clc
xchg
pushf
bswap
cmp
jne
lock
aaa
pop
push
lods
pop
mov
cmp
jbe
adc
pop
clc
fst
pop
pop
sbb
jp
add
mov
dec
inc
sti
ins
cmp
(bad)
dec
pop
dec
mov
sub
ret
adc
and
ficomp
jmp
jno
ja
mov
push
popf
xchg
mov
movs
add
cmp
fs
mov
rol
inc
lock
gs
dec
icebp
test
in
pop
addr16
rcl
aaa
mov
jns
pop
daa
repz
ja
or
dec
mov
sub
dec
cdq
or
ret
cmps
sub
mov
cmp
shr
xchg
aam
mov
xor
push
add
pushf
sub
cmp
jbe
xlat
dec
pop
bound
iret
jecxz
mov
leave
inc
inc
rep
into
lods
jno
add
xor
shr
rol
xchg
in
or
mov
jecxz
(bad)
addr16
cwde
inc
inc
out
pop
cli
xchg
in
ja
mov
imul
cmp
fdivr
sub
ret
adc
and
lock
pushf
test
jge
repnz
inc
jno
add
push
mov
outs
cmp
or
mov
out
xor
and
mov
push
push
push
push
push
or
sbb
xchg
in
lds
mov
cmp
xchg
pop
jg
sar
cmc
mov
mov
pop
sbb
fbld
xor
inc
out
fwait
rol
lods
ror
mov
cmp
nop
loope
mov
rol
and
mov
in
pop
dec
in
in
push
sbb
mov
es
lds
fisttp
mov
vxorpd
mov
loopne
stc
test
sub
dec
pop
sbb
or
popf
js
push
push
(bad)
cmp
fidivr
mov
mov
and
and
and
xor
aad
arpl
pop
mov
dec
out
imul
dec
pop
push
jmp
scas
push
push
add
inc
mov
xor
sbb
cmp
cmps
movs
mov
push
jmp
ds
cld
(bad)
js
push
adc
adc
xlat
jno
ret
push
mov
fs
in
mov
sbb
sub
sbb
adc
cmp
mov
sbb
sahf
sub
or
add
std
mov
arpl
mov
jbe
cmp
pop
(bad)
mov
push
mov
ror
lock
aad
adc
cmc
inc
adc
into
cmps
add
ja
ret
sbb
inc
addr16
push
enter
(bad)
js
push
jg
jnp
xor
les
mov
xchg
jp
fst
jp
in
sbb
sbb
adc
mov
sar
add
jge
sbb
or
inc
imul
dec
xor
movs
mov
mov
jp
push
pop
inc
lahf
out
ds
stc
xor
inc
cld
in
push
call
lea
dec
xor
rol
jecxz
and
sub
xlat
lods
push
out
fdiv
add
ins
fdiv
fdiv
scas
lahf
(bad)
mov
cmp
xor
or
pushf
lods
sbb
mov
dec
les
inc
cmps
pop
sbb
ins
mov
sub
movs
pop
mov
or
fdivrp
pop
push
sub
pusha
pop
sub
ds
cmps
pop
sub
sub
pop
aad
aad
nop
jle
and
and
arpl
push
lods
sub
or
in
dec
dec
in
(bad)
into
push
mov
inc
push
and
mov
aaa
mov
inc
dec
fdiv
push
(bad)
aad
(bad)
rol
addr16
cmp
inc
in
xchg
test
lods
arpl
into
jge
and
test
or
cmp
cmp
xor
sub
fild
je
mov
mov
shl
dec
pop
mov
push
push
cmps
push
sub
inc
popa
or
sub
push
jbe
fmulp
lods
scas
(bad)
push
dec
dec
inc
xor
cmp
or
lods
daa
sbb
xor
cmps
mov
(bad)
sbb
iret
mov
sub
test
xchg
jo
mov
into
shl
imul
dec
out
inc
mov
sub
ret
fwait
mov
lea
inc
pop
push
mov
ins
lods
add
pop
push
and
sub
xor
imul
xor
pusha
pushf
jne
(bad)
ror
mov
push
cmc
stc
or
xor
je
pop
push
adc
js
xor
mov
rol
jb
dec
push
in
cmps
cwde
test
scas
xchg
xlat
lods
dec
leave
mov
jne
movs
adc
and
mov
sub
sahf
stc
jg
or
push
int3
pop
mov
dec
and
push
bound
js
and
jl
cld
outs
mov
sbb
sub
pop
popa
mov
stc
mov
cli
inc
retf
ins
in
mov
mov
mov
push
xchg
cmp
int3
xor
into
fcomi
and
xor
mov
cld
push
test
outs
repnz
scas
neg
xchg
push
out
std
in
sbb
cmp
push
sub
in
aaa
lea
hlt
arpl
es
cmp
stos
data16
rcr
js
mov
inc
jbe
paddq
sub
cmp
out
mov
scas
(bad)
jle
cli
cmps
cs
sub
cmc
mov
rol
test
adc
push
lods
imul
cmps
push
jp
loopne
push
aam
dec
icebp
and
xor
cld
in
and
shr
shr
cwde
aas
shr
xor
add
adc
sbb
xchg
or
ins
fdiv
xchg
ss
push
sbb
outs
test
and
xor
pop
add
sbb
add
mov
add
lahf
and
js
fsubr
cli
dec
and
push
stc
mov
mov
push
adc
imul
rcl
or
jge
cmp
xor
std
(bad)
jg
mov
sub
fwait
xchg
fcomp
inc
push
jp
retf
or
and
dec
mov
mov
sbb
jbe
or
push
pop
xchg
int
mov
js
mov
add
jno
sub
sbb
popf
or
bnd
out
mov
arpl
mov
jl
cmp
sbb
cmps
call
push
mov
shr
pushf
jge
sub
dec
adc
cdq
cmp
mov
cmp
pop
cmc
mov
mov
lahf
push
clc
jmp
push
clc
or
and
fadd
xchg
cmp
xchg
in
punpckhwd
movs
mov
outs
pop
fdivr
mov
loope
jae
es
loopne
jne
mov
out
in
bound
stos
push
adc
ins
(bad)
xor
fild
mov
ror
mov
call
inc
xor
outs
xor
xchg
test
cwde
sahf
movs
push
jecxz
xchg
jp
jmp
gs
push
sbb
pop
mov
in
push
sub
mov
jae
dec
popf
mov
cmp
ret
ss
pusha
addr16
popa
mov
repz
fisttp
inc
enter
in
or
mov
cmp
dec
pop
xchg
or
xchg
or
scas
inc
retf
jmp
add
cld
and
cmps
hlt
out
mov
pop
inc
dec
sti
lods
xchg
nop
push
or
cli
ror
cmp
jne
shl
push
mov
pop
pop
dec
outs
sub
enter
popf
mov
push
sar
pop
(bad)
mov
mov
cwde
mov
pop
cmp
lds
and
mov
add
and
sub
pusha
dec
dec
pop
or
in
enter
clc
cmp
xor
mov
inc
mov
inc
xchg
sub
les
test
retf
mov
or
idiv
and
and
dec
jae
pop
adc
pop
iret
xchg
dec
and
cs
push
pusha
les
mov
call
pushf
fwait
rcl
(bad)
jle
nop
pop
(bad)
call
mov
ins
scas
scas
mov
jmp
xor
or
inc
push
lahf
lods
push
pop
movq
in
push
clc
sbb
xlat
ins
or
(bad)
out
push
hlt
or
sbb
test
fiadd
movs
mov
daa
jecxz
cmc
test
dec
in
jle
cld
jmp
mov
jg
mov
ins
jecxz
div
imul
fsub
fs
cmp
jo
movs
mov
(bad)
mov
push
jo
mov
arpl
in
ret
in
jp
lds
daa
inc
jmp
xchg
adc
test
cmp
sub
sub
or
dec
(bad)
retf
cmps
sub
loop
mov
sbb
sub
out
sbb
(bad)
or
int3
js
sti
leave
and
les
pusha
retf
pop
sti
movs
dec
lods
push
jecxz
pop
pop
(bad)
ja
add
ret
mov
jmp
int3
add
cmp
out
dec
adc
sahf
std
inc
inc
pop
(bad)
(bad)
xor
mov
push
push
or
out
je
js
xor
jmp
mov
jbe
cmp
push
jne
aaa
adc
and
js
xchg
xlat
aas
sub
stos
adc
dec
cs
data16
mov
sbb
or
(bad)
sbb
imul
or
pop
xor
loope
pop
aad
inc
push
adc
push
lahf
test
popa
cmp
addr16
test
push
inc
sbb
xor
arpl
dec
xchg
dec
cmp
fnstcw
sbb
fidiv
nop
xor
test
ds
lods
jno
pop
cli
push
ins
daa
push
aam
in
mov
sbb
and
mov
bound
das
jnp
call
leave
mov
hlt
jno
push
mov
dec
cmp
and
add
lock
cs
dec
and
fst
in
xor
sub
test
xchg
or
xchg
outs
inc
push
xlat
nop
and
scas
and
outs
in
bound
fwait
pop
jb
xchg
sub
fisttp
jl
inc
fsubp
fwait
sub
scas
imul
sbb
popa
lea
sub
jno
imul
rcr
add
mov
inc
and
sbb
pop
mov
and
push
inc
push
ins
and
inc
add
xchg
mov
cwde
adc
mov
pop
aaa
and
jmp
cmp
mov
cli
jmp
iret
ins
imul
mov
(bad)
ss
mov
xchg
and
in
jo
mov
call
lahf
sub
sub
mov
pop
enter
push
ror
pop
retf
push
pop
aas
jecxz
adc
pop
pushf
sbb
pop
jno
add
fisttp
rol
adc
js
dec
das
inc
mov
push
add
and
test
inc
ss
out
aad
sti
xchg
inc
xlat
dec
lods
shr
mov
shl
and
es
test
xchg
sub
sbb
fisttp
jnp
(bad)
jp
cmps
(bad)
fst
push
jbe
aad
mov
(bad)
pop
jno
sub
inc
stos
xlat
arpl
xchg
pop
(bad)
int
mov
sbb
fisttp
mov
dec
xchg
ds
stos
sbb
cmps
jle
or
loop
adc
jb
jmp
pop
add
jl
xor
(bad)
mov
mov
movs
enter
out
nop
xor
enter
xor
fbstp
jmp
ins
jp
repz
iret
pusha
imul
scas
cmp
push
pop
dec
mov
push
mov
push
mov
sbb
(bad)
sub
sbb
mov
xor
fiadd
retf
fcomip
dec
movs
pxor
push
outs
fmul
jbe
push
mov
jne
sbb
stc
mov
pop
and
mov
and
into
inc
imul
sub
dec
or
popf
loope
add
lods
loop
mov
fbstp
nop
test
jecxz
inc
jno
pop
adc
cmp
or
xchg
sub
test
cld
cli
dec
das
cdq
push
loop
pop
add
jne
xor
test
test
mov
cmp
and
aam
fs
sar
addr16
sbb
sub
out
lea
and
push
cld
mov
bound
xor
les
mov
aas
mov
test
pop
loope
and
xlat
mov
dec
jmp
aas
sub
ins
mov
outs
stc
jne
sbb
cli
or
or
jno
mov
or
stos
xor
mov
rcl
mov
popf
pop
movs
lods
adc
sub
dec
mov
fidiv
inc
jnp
jns
sbb
imul
lds
mov
push
add
jno
jge
cli
shl
movs
out
std
mov
jl
or
and
scas
inc
mov
test
aam
sbb
retf
out
dec
imul
cmp
pushf
lahf
arpl
add
sub
mov
sbb
mov
inc
pop
fild
aas
repz
retf
and
std
outs
lods
retf
fdivr
cdq
inc
or
mov
sub
push
cmps
dec
out
fsub
mov
xchg
(bad)
xor
xchg
mov
jmp
call
and
jmp
xchg
shl
repz
xchg
enter
mov
adc
outs
outs
bound
fist
adc
ja
in
jl
int
xor
mov
sbb
(bad)
icebp
fiadd
sbb
push
mov
xor
dec
mov
int
and
fmul
cmp
jl
sub
add
push
push
mov
jecxz
xchg
ins
adc
pop
mov
mov
push
mov
iret
jg
and
leave
pop
or
xchg
stc
popa
cmp
fdiv
mov
mov
cmp
pop
sbb
and
cmps
test
cmp
(bad)
cmc
inc
mov
pcmpgtb
jb
cmc
or
in
push
pop
cmp
jmp
fst
daa
fadd
out
inc
outs
jmp
and
es
movs
and
jecxz
and
mov
ja
mov
imul
sbb
pop
rcr
fst
mov
lea
loopne
jne
lock
mov
test
icebp
outs
mov
jns
mov
lea
cs
test
xchg
vcvtsi2sd
dec
jae
mov
(bad)
call
inc
mov
stos
and
or
dec
mov
ins
test
cmp
mov
(bad)
into
adc
leave
jle
sbb
inc
pop
inc
loopne
xchg
add
dec
xchg
les
xor
push
push
out
and
fcmovnb
mov
and
xor
cmp
xchg
ret
push
and
mov
fs
mov
sti
mov
add
xor
mov
es
xchg
push
jbe
cmp
in
dec
sub
jns
jbe
sbb
das
sbb
push
add
dec
mov
mov
leave
addr16
mov
jecxz
or
dec
sbb
push
add
rol
ss
mov
and
outs
push
ss
mov
dec
scas
xchg
clc
loop
push
adc
or
jg
dec
mov
jmp
xchg
or
stos
out
clc
xchg
loop
(bad)
gs
or
push
mov
test
push
shl
sbb
dec
out
adc
xchg
shr
popa
add
je
push
(bad)
adc
stos
je
ret
xor
mov
pop
ins
xchg
aad
cwde
sub
cmps
loopne
or
hlt
sbb
div
push
pop
int3
call
fs
push
in
pop
cdq
xchg
enter
arpl
and
(bad)
loop
bound
repnz
ins
rcr
xor
push
inc
aad
arpl
js
into
mov
jl
jnp
pop
aam
mov
je
dec
(bad)
in
mov
xor
scas
sahf
lods
lea
sub
pop
sete
movs
movs
sti
sti
mov
or
retf
int3
sub
(bad)
jge
push
je
push
jbe
dec
jecxz
clc
cmp
mov
pop
add
mov
sbb
xchg
(bad)
data16
aam
mov
mov
test
jl
daa
and
in
inc
repz
inc
ja
pop
test
and
mov
pushf
repnz
ins
inc
jns
in
sar
and
ror
xlat
xchg
sub
sub
arpl
mov
inc
(bad)
cmp
cmps
adc
jns
sub
std
fstp
ins
call
jns
push
inc
fbld
repnz
shr
sti
adc
(bad)
sbb
das
mov
out
xchg
jmp
and
icebp
sbb
test
aad
sbb
not
js
int
test
scas
adc
ins
mov
test
les
(bad)
jmp
or
imul
aas
and
pusha
scas
xor
sbb
pop
pop
inc
call
sbb
fcmove
xor
cmp
int3
aad
sub
push
xchg
pop
(bad)
cmp
mov
push
mov
inc
push
lods
mov
mov
stos
fdivr
or
add
aad
cmp
jne
pop
popf
outs
jno
test
sahf
cmp
mov
sub
sti
mov
or
ror
cmp
jg
xchg
cdq
paddb
xchg
xchg
outs
inc
neg
loop
and
daa
in
and
or
shl
add
js
gs
ret
dec
leave
fiadd
add
fidiv
outs
test
out
sbb
xor
mov
out
leave
mov
lock
outs
dec
dec
jmp
jb
or
cmp
push
pop
int3
in
aad
add
sub
dec
or
mov
xchg
inc
cmp
outs
mov
outs
dec
push
cmp
cmp
stos
jg
stos
jecxz
pushf
arpl
icebp
xchg
mov
jmp
mov
jb
adc
cmp
ins
sub
aad
les
add
shr
dec
dec
sti
cmc
jae
push
pop
mov
scas
stc
mov
ret
sub
push
mov
jmp
es
lea
mov
cmp
cmp
push
lahf
sub
push
lea
mov
retf
movs
mov
rcr
mov
retf
xchg
push
push
mov
jnp
(bad)
out
test
xchg
nop
aas
sti
stos
sbb
out
lock
push
dec
push
jecxz
jbe
mov
sbb
mov
mov
in
jno
push
clc
xchg
mov
shl
cmps
jns
mov
mov
les
push
out
aaa
popf
mov
cmps
lods
dec
or
es
sub
adc
add
arpl
int
inc
sbb
mov
jl
add
jmp
push
sbb
inc
or
or
cmp
adc
ret
add
std
fs
xor
jo
adc
scas
(bad)
and
rcr
cwde
test
lock
jg
test
and
sbb
sbb
addr16
movs
add
cmp
rol
and
or
js
jle
mov
shr
sbb
dec
push
adc
dec
cmp
mov
inc
enter
div
leave
fsub
cmps
ret
dec
xor
pop
cli
mov
pushf
cmp
xor
ss
int3
ret
pop
es
clc
sub
out
push
dec
push
les
sbb
xor
jo
adc
stos
or
sbb
adc
jle
mov
push
dec
push
mov
push
sbb
jb
stos
pop
fcmovbe
jecxz
hlt
adc
shl
mov
cli
daa
popf
loope
movs
shr
push
jmp
xchg
(bad)
(bad)
retf
(bad)
mov
inc
aad
fdiv
les
jae
xchg
push
popf
imul
inc
or
xchg
scas
mov
jns
jg
mov
and
adc
inc
xchg
mov
inc
rcr
dec
adc
or
sbb
or
xlat
push
scas
xor
rol
mov
cmps
ins
add
cmp
(bad)
mov
dec
aaa
shl
push
and
out
lods
inc
mov
mov
mov
(bad)
cmps
push
xchg
inc
mov
dec
shl
pop
outs
fadd
in
shl
fisubr
dec
cmp
out
repnz
cld
icebp
repz
and
pop
jle
sahf
cmp
dec
repnz
fdiv
adc
sbb
mov
inc
retf
add
daa
push
and
adc
mov
lods
fucomip
pushf
out
cmp
loope
or
mov
pop
jecxz
adc
xchg
mov
adc
sbb
bound
jae
lds
push
stc
add
push
push
aam
jo
outs
aam
cwde
xor
leave
or
sbb
das
loop
jmp
pop
verw
pop
push
push
shl
cmp
bnd
push
bound
xlat
jbe
scas
rol
ret
(bad)
jno
push
or
jno
sar
and
fmul
sti
pop
and
and
cmp
adc
sbb
push
add
loopne
pop
loope
adc
jge
xor
jno
cmp
xchg
inc
outs
test
dec
and
test
sar
xor
data16
cli
adc
push
and
push
mov
idiv
fnstenv
sbb
jnp
jbe
das
lea
mov
jg
xchg
or
jp
dec
mov
xchg
repz
hlt
add
sbb
fistp
dec
adc
fucomp
xchg
and
popf
and
leave
sub
sar
and
shl
frstor
mov
jb
aas
add
enter
out
jnp
cmp
bound
mov
mov
push
sar
(bad)
xor
cmc
pop
mov
xchg
mov
repz
repz
nop
cmps
out
retf
out
adc
jge
std
cmp
mov
xor
xor
je
push
or
jnp
loop
dec
mov
pop
jbe
add
jle
jne
data16
cmp
cli
cmp
ins
shr
pop
xor
je
dec
xchg
out
push
inc
inc
lds
pop
cmp
xor
iret
sbb
inc
jno
push
sbb
test
mov
(bad)
clc
(bad)
jo
test
es
add
dec
in
xor
leave
or
(bad)
stos
cs
scas
out
xor
mov
jnp
fimul
add
mov
(bad)
mov
mov
jns
jp
fdiv
(bad)
xchg
jecxz
ss
pop
dec
pop
xor
mov
enter
mov
movs
xlat
push
cld
call
jp
es
cmc
call
mov
aam
sub
paddq
and
dec
outs
xlat
mov
xchg
out
shl
cmp
dec
or
(bad)
ja
loope
add
mov
push
and
ret
out
mov
xlat
outs
fdivr
mov
jns
adc
or
sar
cli
std
mov
adc
pop
push
dec
pop
mov
add
push
cwde
jne
mov
(bad)
jmp
int3
lock
pop
push
aad
mov
dec
push
ins
not
and
cmp
add
pop
sahf
mov
or
sbb
int3
cld
dec
add
aas
test
into
outs
out
xchg
inc
fdiv
pushf
pusha
and
mov
nop
jae
arpl
mov
sub
enter
mov
xchg
mov
adc
call
nop
call
push
bound
aas
cmc
and
and
xchg
into
push
test
retf
cmp
inc
pushf
rcl
add
outs
or
dec
fmul
push
cmp
ja
dec
imul
mov
and
mov
jl
or
dec
test
add
add
cmc
scas
cmp
and
cld
and
pop
jecxz
fdivr
jecxz
les
and
lahf
xchg
ficom
sbb
lahf
xchg
sbb
pop
shl
adc
(bad)
rcl
outs
lods
pusha
mov
jle
hlt
cmp
jb
xchg
push
stos
adc
xchg
cmp
and
push
sbb
mov
xlat
clc
jne
retf
in
(bad)
xchg
add
add
add
cmp
cwde
cmp
sub
shl
mov
out
cs
sub
pop
mov
addr16
mov
cmp
nop
scas
aaa
jo
sti
push
pusha
movs
es
inc
mov
push
push
sar
adc
sahf
sar
cld
int3
mov
mov
retf
pop
and
pop
add
mov
into
dec
pop
and
ins
inc
das
sbb
out
call
popf
or
and
fmul
iret
sbb
movs
pop
mov
movs
aaa
mov
push
inc
and
idiv
in
in
daa
sbb
jb
inc
jb
xor
cwde
sub
jae
movs
mov
dec
ror
in
test
sbb
das
sub
cmp
jg
retf
les
push
out
gs
adc
repnz
push
mul
fsub
ds
call
inc
or
out
fst
jmp
scas
mov
xor
and
into
mov
sbb
fidivr
bound
sub
pop
pop
push
(bad)
pop
dec
dec
daa
inc
ins
sbb
outs
push
movs
lahf
(bad)
adc
test
stos
cmp
pop
fwait
adc
(bad)
push
jno
ds
sti
xor
je
cmp
xchg
sbb
int
les
inc
lahf
dec
push
push
fldcw
pop
aad
fstp
and
jg
lds
dec
out
mov
push
pop
(bad)
mov
out
mov
hlt
xor
ret
(bad)
lods
sbb
pop
neg
cdq
call
mov
rcr
xchg
sahf
test
mov
cmc
mov
test
ror
sbb
or
mov
xchg
jmp
jmp
sub
or
js
hlt
popf
movs
add
dec
popf
ror
std
mov
xchg
sbb
loope
inc
out
and
rcr
xor
je
xor
sub
xor
xor
leave
jecxz
sahf
ffreep
sub
mov
retf
pop
sahf
int
sub
cmp
test
sti
cmps
loope
xor
xor
add
jmp
xchg
mov
out
mov
(bad)
test
bound
and
jne
rcl
inc
push
or
dec
xchg
push
inc
mov
and
retf
push
ret
mov
push
push
inc
pusha
jle
icebp
arpl
adc
adc
and
(bad)
cmp
or
repz
inc
in
shl
rol
sub
and
jmp
cmp
push
xchg
leave
(bad)
lods
adc
aas
fisub
inc
sub
pop
adc
inc
or
imul
out
daa
adc
jno
mov
sbb
sahf
cmp
jno
xlat
sar
fstp
inc
pop
pop
pop
dec
xor
dec
fucomp
ins
inc
jae
bound
(bad)
xor
dec
jl
jmp
xor
dec
push
iret
mov
outs
test
jne
dec
push
pushf
in
push
sar
repz
loopne
xlat
std
fwait
pop
pop
mov
xchg
data16
fistp
retf
jge
ins
dec
aam
std
pushw
mov
test
pop
or
push
rcl
lods
jo
repnz
loopne
add
dec
mov
std
movs
push
inc
cld
mov
ret
sbb
mov
sub
loope
mov
or
sub
dec
jb
cdq
pop
fs
ja
out
retf
js
ds
mov
in
xor
ins
pop
test
jmp
sbb
xchg
adc
jo
or
sysenter
inc
adc
mov
arpl
test
cli
cwde
mov
add
or
mov
cmc
(bad)
outs
mov
add
retf
clc
sti
xchg
sbb
out
adc
fwait
shl
lea
sbb
cmp
mov
xchg
jns
mov
aad
movs
xchg
gs
push
lods
and
mov
enter
enter
cmp
cmc
pop
outs
inc
ds
cwde
fiadd
daa
inc
push
mov
inc
xchg
int
shr
shl
inc
mov
push
out
or
in
xor
popa
test
int
and
js
mov
pop
sbb
inc
(bad)
das
pop
out
fcmovnbe
imul
jbe
xor
push
loop
les
xchg
jmp
sub
sub
cmp
fldenv
xchg
xchg
add
nop
mov
cmp
xchg
fs
pop
enter
mov
pop
mov
sub
and
lods
sahf
jecxz
pusha
clc
inc
(bad)
hlt
push
mov
dec
fmul
ja
lods
repnz
stos
sbb
lods
aam
loope
outs
mov
push
ss
nop
cmps
mov
test
imul
cli
adc
and
mov
push
retf
and
adc
add
test
cmp
add
xor
adc
add
aas
and
jbe
sar
pop
popa
adc
sub
jnp
inc
(bad)
inc
repz
mov
ror
mov
clc
movs
sub
lods
(bad)
test
call
sbb
mov
xchg
sub
xor
lods
(bad)
std
es
adc
pop
add
rcr
int3
sub
into
and
test
jnp
pop
jae
stos
sub
or
std
jne
fdivp
pop
cdq
(bad)
out
in
add
fsub
mov
bound
lods
inc
pop
mov
xchg
(bad)
sub
lods
sbb
ins
popf
mul
or
cwde
and
sub
jb
in
push
ror
cdq
cmp
ret
cmps
popa
aaa
push
js
mov
cmp
and
dec
pop
xchg
repnz
cld
xlat
inc
scas
dec
adc
daa
enter
into
sub
popa
test
cwde
mov
call
test
cdq
mov
sub
xchg
scas
rol
popa
push
xchg
adc
add
mov
push
test
retf
jl
mov
or
out
or
out
dec
mov
cmp
loop
stc
dec
and
outs
xchg
dec
retf
shl
push
data16
mov
mov
cmp
inc
(bad)
jl
gs
pushf
fiadd
xchg
sbb
and
inc
or
jge
dec
sub
lods
mov
out
imul
jmp
std
cmpsd
mov
retf
in
mov
and
cmp
or
in
rcr
push
pop
mov
jmp
inc
scas
ins
test
test
call
jle
add
add
leave
mov
pop
sti
je
mov
jb
inc
xor
dec
es
(bad)
inc
call
cmp
push
and
iret
mov
call
ret
loop
push
mov
or
(bad)
mov
adc
pop
xor
ds
mov
jg
pop
jmp
jge
(bad)
lock
or
lds
sub
inc
test
popa
dec
jle
(bad)
fmul
dec
inc
movs
inc
gs
mov
and
pusha
(bad)
aam
pop
adc
jbe
xchg
lock
imul
test
jge
shl
cmc
sbb
out
mov
loopne
inc
sub
shr
xchg
iret
push
repz
enter
test
adc
sub
into
pop
out
aaa
mov
push
sbb
xlat
jmpw
add
je
pop
cdq
xor
mov
sub
inc
stos
cwde
inc
push
shr
jo
ucomiss
cmp
mov
jg
fsub
hlt
mov
adc
pop
sbb
fs
mov
mov
mov
fbstp
xor
dec
mov
mov
and
jnp
pop
in
(bad)
fimul
sbb
into
rol
mov
or
mov
icebp
mov
aad
push
out
jmp
cld
xchg
call
pop
sti
adc
or
mov
stos
mov
pop
ins
shl
inc
retf
jmp
dec
fs
dec
imul
dec
mov
leave
ins
jnp
xchg
mov
jne
sbb
push
popa
xchg
mov
sub
mov
imul
sbb
mov
xlat
imul
pop
repz
cmp
pusha
in
adc
cmps
loope
gs
iret
mov
dec
cmp
pop
xlat
pushf
imul
jne
push
add
das
jmp
cmp
(bad)
xchg
std
push
push
jge
mov
imul
gs
lods
inc
inc
pop
adc
sbb
mov
and
mov
call
ja
xlat
in
jp
pop
inc
popf
pop
adc
jle
cmp
cmp
mov
cmps
xchg
ins
je
mov
jecxz
dec
xchg
sub
adc
mov
mov
aas
pop
rol
cmp
js
int
jecxz
xchg
cmps
and
cmp
mov
jne
out
out
xlat
js
hlt
dec
xor
push
(bad)
fidiv
jmp
leave
ror
pop
pop
push
mov
xchg
mov
cmp
mov
cmp
or
(bad)
retf
or
push
push
outs
cmp
fadd
mov
adc
xchg
push
xor
or
fnstsw
hlt
(bad)
in
mov
push
push
cmp
pop
(bad)
adc
icebp
bound
dec
iret
shl
push
push
test
shr
loope
fisttp
mov
or
(bad)
stc
jge
shr
xchg
addr16
mov
adc
adc
sahf
(bad)
pop
sub
out
mov
stc
dec
stc
repz
or
in
push
std
aam
cli
retf
cmp
xor
popa
rcr
cmp
loop
jmp
mov
pop
cmps
addr16
jb
jne
xchg
dec
jmp
stc
pop
test
popa
push
add
ret
and
repz
es
aaa
jg
and
inc
js
sub
mov
pop
push
and
or
ds
sti
aas
mov
test
cmp
ss
mov
jo
sbb
repz
scas
sbb
and
inc
mul
mov
mov
fmul
inc
xor
push
push
sub
jns
shr
frstor
(bad)
dec
out
mov
mov
push
push
sahf
fidivr
movs
xor
in
dec
fwait
es
push
add
dec
mov
dec
or
enter
loop
call
stos
pusha
aas
sub
ins
ja
bound
sbb
xchg
push
sub
adc
call
repz
pop
sbb
pop
add
add
test
mov
bt
adc
dec
in
(bad)
sbb
push
test
dec
ret
cwde
fidiv
lahf
js
xchg
out
and
out
cli
cmp
cmp
xchg
inc
ja
pop
(bad)
loopne
in
sar
dec
in
jmp
pushf
sbb
outs
cwde
fsub
fild
mov
cmps
imul
xor
inc
adc
clc
add
fwait
enter
jnp
sub
cwde
xchg
add
in
mov
popa
adc
fldlg2
aam
pop
xor
ror
loopne
mov
mov
xchg
dec
add
aad
sbb
retf
scas
xlat
imul
pop
sar
dec
test
jbe
(bad)
cmp
push
add
mov
xchg
shl
adc
dec
push
sbb
mov
add
ret
dec
rcl
cmp
xlat
jecxz
imul
mov
test
jno
jmp
idiv
push
cmovb
cmc
sub
sbb
lods
pop
xor
loop
lahf
sbb
mov
inc
gs
jge
mov
sbb
in
cwde
cmps
pop
pop
mov
shl
scas
sbb
repnz
mov
int
aaa
repz
scas
idiv
cwde
pushf
dec
dec
into
jmp
(bad)
cmps
pop
xchg
or
inc
adc
mov
xchg
push
fcomp
mov
sub
das
cmp
push
mov
repz
test
mov
jno
jmp
dec
leave
es
loopne
sbb
jns
lock
jmp
aas
inc
push
jbe
mov
mov
pusha
loop
pop
imul
or
in
adc
fisub
cmp
lahf
pop
arpl
cmp
aad
or
sub
cwde
jle
clc
mov
sbb
popf
sahf
scas
(bad)
jg
lock
jne
jns
loope
or
push
and
pop
lds
pop
mov
cmp
push
inc
cs
inc
sti
xchg
xchg
aas
(bad)
loopne
pop
jo
into
shl
mov
pop
cmps
mov
shl
sbb
in
cli
pop
imul
test
push
mov
mov
popf
push
inc
ds
mov
jg
adc
enter
jge
mov
jp
ffreep
jae
dec
mov
lock
jmp
and
test
mov
pop
data16
out
mov
jnp
mov
inc
or
neg
cmps
pop
shl
pop
mov
inc
clc
lea
or
in
(bad)
adc
jns
or
jo
and
aad
dec
xchg
daa
mov
in
cli
lahf
sub
sub
pop
and
in
sub
test
jmp
call
popa
xchg
mov
movs
mov
sbb
fcomp
pop
mov
mov
nop
not
dec
cmp
in
xchg
(bad)
lods
or
mov
shl
inc
inc
jo
dec
fs
xchg
retf
aam
clc
inc
iret
cmp
(bad)
loope
add
and
xor
and
scas
jle
adc
je
cmp
xchg
sbb
add
pop
dec
popa
add
scas
xor
mov
xor
or
lods
(bad)
sbb
out
(bad)
call
fimul
cmp
shl
mov
mov
adc
loopne
loopne
add
sbb
cwde
fistp
bound
xchg
fwait
mov
sub
xor
push
hlt
dec
in
ds
jg
add
xor
clc
je
(bad)
dec
mov
pop
and
mov
fidiv
call
pop
imul
pushf
push
rcr
test
stos
adc
push
sbb
scas
popf
sbb
clc
jmp
pop
mov
push
jmp
inc
out
add
lods
jb
repz
movs
adc
or
cmp
adc
pop
xchg
cmps
inc
fs
mov
or
sub
sub
jne
and
jne
push
cmp
and
rcl
movs
pusha
call
dec
dec
lods
int
movs
cwde
jns
(bad)
div
loope
movs
fild
je
mov
jp
mov
xchg
mov
pop
std
sub
outs
pop
loopne
fnsave
iret
xor
fwait
adc
add
enter
ds
lahf
iret
retf
ja
pop
mov
pop
dec
mov
fdiv
in
cmps
jo
sub
shl
lock
xchg
add
daa
or
mov
popa
adc
neg
xchg
and
je
jne
ret
mov
adc
mov
push
cdq
push
jl
xchg
sbb
or
push
fmul
repnz
cmp
movs
inc
mov
add
xlat
adc
push
and
xor
add
jns
in
outs
push
add
cmp
xchg
stos
inc
mov
(bad)
into
mov
pop
pop
add
iret
lds
sbb
das
inc
pop
sub
cs
(bad)
fsubr
and
sbb
outs
mov
cli
inc
pusha
sub
mov
xchg
rol
test
sahf
cmp
int
shr
ins
into
mov
sti
mov
xchg
push
movs
inc
jecxz
jge
xor
xchg
sub
push
and
(bad)
sar
test
out
or
call
xor
cmp
clc
sbb
ret
push
ret
cdq
popa
xor
cwde
clc
mov
or
(bad)
push
sub
cld
les
cwde
jg
pop
popw
shl
int
(bad)
mov
sub
dec
cmps
pop
cmp
add
in
xchg
int3
shl
hlt
add
fwait
mov
mov
add
ror
(bad)
scas
movs
cmp
push
ret
xor
jp
not
pop
aad
add
loope
aas
icebp
lock
mov
jae
mov
ins
test
and
dec
inc
jp
and
sbb
imul
jns
fild
ins
dec
int3
imul
mov
mov
call
je
xor
xchg
les
out
neg
imul
mov
mov
pop
fmul
dec
mov
and
add
mov
and
push
dec
cmp
jae
arpl
inc
jae
xor
inc
xchg
enter
mov
inc
outs
out
inc
lds
inc
pop
xchg
jecxz
mov
mov
push
dec
cdq
mov
adc
(bad)
pop
ins
cld
sbb
add
push
mov
cmp
out
jbe
iret
std
dec
retf
(bad)
cmp
pop
out
iret
js
fdivr
cli
out
xchg
sbb
push
xor
in
nop
xchg
push
enter
push
pushf
pop
mov
pushf
push
dec
sbb
mov
jae
dec
xchg
add
mov
fs
out
inc
ret
sub
mov
jle
or
jnp
shl
cdq
ja
imul
and
test
out
arpl
xchg
push
icebp
inc
lods
jl
(bad)
ret
push
int
shl
mov
cmp
ret
mov
and
jmp
xchg
test
vcvtdq2pd
add
and
jnp
ficom
add
test
inc
out
les
and
das
jl
jne
aas
cmc
pop
jmp
js
sahf
add
int3
push
sub
pop
jecxz
and
scas
mov
rcr
inc
fs
mov
add
(bad)
jmp
std
push
cmps
and
add
dec
loop
in
jno
push
ds
mov
retf
neg
pop
repnz
imul
or
popa
dec
push
push
sub
mov
inc
into
jbe
je
sub
push
xchg
xor
shl
lods
je
nop
mov
jbe
mov
(bad)
fbstp
push
lock
xchg
xor
pop
aaa
into
data16
or
mov
and
cmp
(bad)
pushf
imul
push
or
mov
sub
sub
sti
out
js
mov
iret
xor
sbb
dec
fs
pop
mov
adc
and
or
cmp
mov
xor
mov
ins
je
dec
int3
mov
sub
add
scas
mov
daa
inc
push
mov
sub
and
or
ret
pop
xor
mov
adc
dec
das
pop
cli
jle
jns
xor
fidiv
pop
cs
pop
xor
sbb
call
cmps
and
xor
stc
dec
pop
mov
ret
xchg
sbb
xchg
add
xor
add
mov
jno
(bad)
cmps
or
fcom
jne
xchg
or
retf
jne
in
dec
inc
xlat
jmp
sub
cmps
mov
dec
mov
push
lahf
or
call
sub
push
int3
push
repz
or
sbb
jbe
jne
lock
pushf
sub
mov
cli
jmp
imul
aaa
fsubr
ja
xor
adc
sbb
jo
xchg
adc
scas
clc
sub
dec
mov
nop
mov
dec
inc
js
fwait
and
fs
mov
call
sbb
rcr
xchg
xor
iret
jae
xchg
int3
xlat
dec
mov
mov
jl
push
mov
xor
rsqrtps
rcl
gs
xor
cld
or
mov
imul
mov
es
cmc
fistp
sti
push
pop
popf
lahf
pop
adc
fisub
sub
push
inc
outs
ror
test
movs
mov
or
dec
push
cli
stc
sbb
add
jp
out
sar
div
xchg
pop
dec
fsub
ret
jl
movs
popf
test
inc
je
cmp
cdq
or
dec
xor
test
sub
xchg
adc
jbe
shl
ss
in
pop
sub
inc
(bad)
repnz
xor
xchg
mov
add
or
or
cs
xor
push
xchg
push
rcl
(bad)
popf
pop
cmp
sbb
adc
dec
imul
pop
jb
rcr
inc
inc
mov
sahf
ins
adc
int3
cmp
mov
xchg
test
cli
sar
imul
xor
shr
imul
imul
shl
sub
mov
add
mov
hlt
mov
in
stos
sbb
sbb
dec
(bad)
and
scas
and
(bad)
pop
fs
pop
popf
jnp
addr16
mov
cmp
stc
ja
js
cmp
cmp
or
mov
add
mov
add
pop
fdivr
mov
cmps
sti
repz
xchg
adc
pop
mov
xchg
ins
ss
js
and
sar
movs
or
jo
dec
addr16
sub
fwait
cmp
aam
xchg
push
cmp
sub
push
add
cld
xchg
add
adc
push
pop
mov
or
into
cmps
cld
push
sbb
ds
jno
cmc
mov
mov
jg
or
mov
jl
or
fnsave
cli
add
mov
lahf
loop
adc
daa
mov
mov
push
add
fsub
scas
imul
clc
and
mov
xchg
int
jae
adc
jl
in
pop
push
daa
mov
mov
pop
repnz
iret
daa
cmp
test
loopne
mov
ds
mov
mov
lock
rcl
xchg
je
retf
inc
into
fdivr
arpl
sbb
mov
jmp
dec
out
xlat
sub
sbb
aam
adc
xor
ds
out
cmp
or
jp
mov
xchg
neg
(bad)
je
pushf
inc
and
daa
in
sub
add
mov
and
push
gs
push
fs
jle
cmc
and
pop
mov
call
pushf
dec
or
xchg
ror
sub
inc
or
mul
or
jno
enter
push
mov
lea
shl
add
loop
cmp
bound
(bad)
mov
add
jnp
add
push
mov
scas
mov
outs
scas
(bad)
std
xor
cs
inc
cmp
pop
out
retf
js
and
mov
mov
xchg
dec
icebp
sbb
jno
cwde
jle
mov
cmp
int
jp
sub
stos
ds
jb
pop
jmp
test
mov
stos
pop
sti
jecxz
fnstcw
pusha
sbb
fsubp
pushf
stos
pop
or
popf
test
lods
and
xlat
(bad)
(bad)
pop
add
test
mov
lea
shr
and
jmp
inc
hlt
js
cmps
xor
xchg
scas
xor
sub
dec
push
sbb
cmps
inc
cmp
cmp
xor
out
jmp
sti
(bad)
adc
mov
pmulhw
xor
xchg
fs
mov
inc
pop
and
enter
imul
sbb
mov
(bad)
pop
push
sub
xchg
fcmovbe
inc
lock
mov
jmp
lods
xchg
sbb
(bad)
jl
inc
mov
aad
xchg
mov
fs
inc
inc
mov
inc
jg
call
xor
and
mov
cmp
(bad)
movs
jmp
dec
mov
adc
inc
shr
(bad)
jns
xor
mov
mov
sbb
loope
cmp
sub
push
mov
nop
pop
test
sub
fst
(bad)
mov
push
mov
xchg
add
ins
jmp
jo
frstor
lods
call
scas
shl
xchg
cwde
out
dec
rcl
sub
or
rcl
lods
in
outs
ss
rcr
popf
sub
test
xchg
arpl
xchg
cmp
pop
int
sbb
(bad)
loope
dec
add
cmp
mov
repz
and
je
inc
xor
test
sti
pop
js
cli
sub
mov
bound
and
sbb
jns
loop
aad
(bad)
cwde
pop
push
and
call
or
ins
mov
leave
loopne
lods
cdq
fnop
(bad)
mov
loope
or
jle
ins
(bad)
jle
xor
gs
or
push
imul
lods
cmp
xor
shl
js
add
inc
into
mov
clc
xchg
in
and
dec
je
jmp
in
sti
rep
daa
dec
push
aad
repz
jge
popa
sbb
sub
div
push
jo
or
hlt
das
shl
mov
push
jp
pop
loop
cmps
fisub
fdiv
sahf
jno
mov
xchg
mov
dec
retf
xlat
aas
sbb
lock
cmp
repz
jecxz
rcr
pop
and
mov
pop
add
nop
out
mov
in
gs
or
aam
scas
or
in
imul
adc
in
je
daa
pop
add
lahf
out
ins
fwait
icebp
adc
test
inc
xchg
and
pop
daa
sahf
loope
and
fdiv
mov
jbe
xchg
pop
loope
inc
jno
in
fdiv
stos
lods
cmp
add
iret
mov
inc
pop
clc
mov
fiadd
fs
mov
sbb
jbe
nop
ja
gs
xchg
lea
aad
mov
fsubr
push
call
jbe
bound
sbb
push
pop
std
call
fist
jno
and
dec
lock
xchg
movs
push
inc
das
xor
push
daa
inc
aam
cmp
xor
sub
sbb
out
fst
inc
push
dec
sti
cmp
mov
dec
out
inc
sahf
dec
(bad)
adc
and
jmp
xor
cmps
mov
push
adc
in
loopne
push
stos
test
cmp
adc
mov
pop
pop
out
dec
sbb
into
stos
out
jg
xchg
retf
(bad)
movs
or
jmp
test
push
sbb
jge
es
outs
fmul
and
dec
cs
jmp
and
and
cmc
mov
xor
leave
jae
(bad)
pop
test
lods
sti
add
ret
(bad)
push
cld
add
inc
push
sub
xchg
mov
ror
mov
hlt
jl
icebp
sub
ja
rcl
out
and
add
jns
jmp
fidiv
test
es
leave
or
jle
ror
mov
inc
scas
arpl
ja
aam
ss
lods
xchg
pop
xchg
les
add
xchg
jmp
data16
or
mov
scas
les
push
sub
mov
aam
test
repz
and
xchg
or
inc
cmp
mov
popf
xchg
and
push
popa
xchg
inc
mov
daa
es
and
in
push
add
adc
psubsw
mov
sub
popf
jne
jg
out
std
sahf
movs
shl
dec
xlat
mov
mov
lahf
dec
call
sub
loope
inc
in
jbe
bound
(bad)
ss
rol
(bad)
jmp
outs
and
push
sbb
and
push
cmc
dec
push
pop
pop
xchg
icebp
imul
pusha
mov
(bad)
push
sub
mov
int
mov
inc
fsubr
int
arpl
push
movs
mov
add
add
(bad)
fwait
imul
dec
outs
push
jp
add
pop
xlat
(bad)
out
jge
sbb
pop
imul
mov
rol
(bad)
iret
inc
jge
xor
loope
jns
mov
fld
retf
dec
popa
add
mov
or
pop
inc
hlt
adc
xchg
or
jne
lock
or
jbe
pop
nop
push
or
inc
dec
popf
cmc
lds
iret
mov
jmp
out
inc
sbb
push
pop
(bad)
jbe
sub
pop
mov
in
push
cli
mov
xor
sub
mov
sub
sti
pop
fdivrp
push
cmp
pop
enter
or
adc
xor
xor
fst
sar
mov
sub
les
(bad)
jp
lods
ss
push
ds
fstp
push
push
jmp
jno
fsubrp
dec
scas
xor
outs
xchg
popa
or
std
sbb
cmp
cdq
jmp
popf
and
movs
loopne
mov
shl
fbstp
adc
mov
push
xor
and
jge
in
push
hlt
dec
fistp
xchg
mov
popa
dec
cld
mov
add
data16
addr16
push
or
leave
repz
or
lock
out
mov
jp
mov
test
popf
cmp
(bad)
jmp
xor
push
xor
inc
bnd
inc
add
cli
out
in
and
dec
and
and
sub
add
add
push
sub
cmc
fdivr
xor
inc
lahf
pop
nop
mov
out
loop
repz
pop
lods
cmc
lock
ss
stos
jl
inc
inc
mov
bound
mov
cmp
inc
jecxz
int3
sbb
test
jns
mov
jl
dec
add
retf
das
or
aam
sbb
xor
mov
or
test
repz
cmp
imul
rcl
and
fld
cmps
iret
dec
xchg
push
inc
xchg
push
xor
bsf
stc
test
scas
imul
es
ins
push
pop
les
inc
not
jae
mov
cmp
and
or
xor
cmp
push
mov
push
push
inc
mov
loopne
stos
xchg
sub
stos
cmp
mov
(bad)
mov
aam
fsubp
ror
lds
mov
into
or
or
cmp
inc
icebp
and
frstor
popf
dec
call
ror
fwait
mov
fisttp
add
pop
sahf
bound
mul
dec
adc
int3
aam
xchg
push
mov
sub
js
clc
(bad)
repz
popa
cli
sub
inc
shl
pop
cmp
cmp
or
(bad)
lock
inc
aas
sahf
jmp
pop
dec
jg
fisubr
inc
jmp
sub
lahf
adc
lods
pushf
inc
or
cmps
das
shl
test
mov
xchg
(bad)
jmp
in
mov
mov
dec
add
mov
push
xchg
sbb
jle
fld
or
pop
xchg
mov
repz
(bad)
in
and
inc
outs
in
test
mov
cdq
(bad)
push
push
sub
rol
sbb
mov
cld
sbb
scas
adc
xchg
xchg
inc
jnp
and
ret
pop
mov
add
rol
xchg
out
sahf
or
xchg
dec
push
adc
inc
push
je
dec
adc
test
sbb
add
jbe
popa
push
aaa
test
scas
dec
mov
es
mov
jbe
iret
xor
xchg
movs
loope
hlt
fidivr
outs
dec
mov
inc
push
cmp
(bad)
mov
or
jmp
rcr
mov
xlat
ds
or
shl
push
cmps
lea
xchg
xchg
cdq
cmp
nop
int3
sub
ror
lds
aad
jmp
jae
or
ss
mov
push
xor
(bad)
pop
fwait
push
(bad)
push
mov
cmp
imul
mov
or
outs
arpl
rcr
or
push
sub
mov
mov
arpl
sub
xchg
and
iret
xchg
daa
inc
dec
(bad)
mov
push
xor
sub
(bad)
xlat
pop
arpl
(bad)
cmp
adc
fimul
loope
pop
retf
sbb
adc
mov
push
into
out
stc
inc
(bad)
mov
movs
inc
xchg
jmp
and
das
in
and
pop
mov
int3
jmp
add
fisubr
in
pop
ins
movs
mov
dec
add
dec
jb
ret
stc
add
pop
cld
hlt
out
int
push
push
rol
test
leave
mov
push
ds
push
movs
add
and
je
push
std
jb
sbb
dec
mov
imul
fwait
into
aas
popf
mov
xchg
aas
sub
cli
inc
and
cli
jmp
into
ret
dec
jg
cs
fdivr
adc
push
daa
push
jae
xlat
push
add
jnp
push
movs
push
iret
retf
jb
xlat
imul
pop
add
pop
aad
int
fdiv
add
lock
out
xchg
sti
cmp
dec
xchg
inc
fcmove
mov
ret
pushf
movs
out
popf
(bad)
push
ret
sbb
popa
cmps
fnstenv
and
sub
adc
pop
xor
add
loopne
inc
adc
movs
mov
push
dec
mov
push
stos
iret
sub
movs
pop
fistp
xchg
std
add
sub
not
pushf
movs
mov
bound
loop
xor
popf
mov
pop
test
jle
or
xor
jl
addr16
sbb
(bad)
mov
fld
lea
outs
retf
test
(bad)
jmp
iret
cmp
or
jmp
dec
gs
mov
in
jo
add
scas
shl
or
cmps
and
mov
pop
xchg
scas
idiv
sub
adc
ja
dec
rcl
sbb
out
adc
stos
(bad)
fsin
jnp
inc
stc
sub
dec
clc
mov
jmp
cld
pop
xchg
xchg
aam
add
fdivr
jge
inc
scas
jb
mov
lds
fst
xchg
outs
inc
mov
aas
int3
(bad)
ins
mov
sub
cmp
dec
out
pop
iret
mov
xor
ror
ror
outs
pop
mov
xlat
imul
mov
push
jmp
pop
dec
dec
dec
pop
int3
sbb
inc
pop
rol
cmp
sub
int
push
jmp
sub
call
imul
dec
fsub
stos
div
mov
fstp
and
mov
cli
dec
mov
inc
push
jg
loopne
jo
cs
ja
rcl
or
mov
fld
inc
push
mov
daa
mov
cmp
mov
mov
lea
aam
push
clc
jle
jle
cmps
inc
lea
test
in
pop
movs
xor
shl
ja
jge
repz
stc
inc
das
and
popf
push
repnz
leave
sub
inc
mov
cmps
aam
mov
stc
mov
pop
lods
xchg
lods
shl
loopne
loopne
sub
xor
popf
call
(bad)
mov
in
add
imul
mov
mov
movs
cmp
push
ret
(bad)
scas
jo
mov
in
not
adc
jl
pop
lods
sub
jne
ins
mov
jb
mov
das
enter
pop
out
out
mov
fwait
sub
or
jle
cmp
fild
or
aaa
nop
inc
dec
cmp
mov
and
jne
mov
pop
aad
daa
fst
push
pop
add
mov
daa
shl
jmp
outs
aas
or
sbb
mov
loop
inc
scas
(bad)
outs
xchg
sub
xlat
push
sub
xchg
jg
loopne
mov
jge
xor
jmp
sbb
imul
test
adc
dec
(bad)
mov
or
(bad)
in
(bad)
cdq
push
aas
pop
test
inc
mov
shl
mov
nop
sbb
mov
imul
(bad)
sbb
ja
(bad)
in
aam
icebp
daa
nop
add
fsubr
neg
cmc
cmps
dec
in
mov
mov
(bad)
ret
jmp
fucom
call
ja
jnp
ja
jecxz
in
dec
mov
mov
lods
inc
cmp
std
or
test
xor
jecxz
push
push
daa
mov
iret
retf
ss
and
imul
push
sar
js
push
adc
mov
scas
les
mov
xchg
cmps
pop
pop
(bad)
arpl
repz
adc
out
adc
(bad)
pop
push
neg
push
xchg
dec
inc
inc
movs
cmp
fs
not
inc
inc
out
int3
(bad)
and
mov
add
adc
lods
jmp
mov
or
je
fwait
sbb
clc
rcl
(bad)
cmp
push
sar
loope
push
mov
fild
sbb
add
dec
nop
dec
xor
jae
(bad)
fimul
sub
ins
cmp
jl
addr16
lahf
scas
xchg
dec
ja
fcomp
cdq
sub
(bad)
aam
pop
mov
mov
jmp
es
movs
jge
push
imul
fisub
scas
xchg
mov
test
mov
dec
out
and
(bad)
jmp
cmp
lahf
shl
add
xlat
push
adc
mov
xchg
int
jge
fcom
push
fwait
mov
pop
and
jns
and
sahf
bound
movs
outs
imul
dec
fldenv
(bad)
stos
or
cmps
dec
jp
sub
push
rcr
add
stc
or
xchg
pusha
iret
mov
sti
xor
imul
rcl
and
xlat
mul
rcl
test
js
xchg
nop
mov
fidivr
or
sbb
sar
inc
adc
jo
pop
mov
xchg
sbb
dec
sbb
jns
or
mov
cmp
xchg
dec
jp
outs
inc
and
inc
mul
test
and
and
(bad)
mov
inc
jbe
nop
lahf
and
sub
jne
bound
mov
fs
call
cmp
inc
add
push
add
out
mov
movs
cmp
imul
inc
xor
jae
outs
scas
cmp
les
es
sbb
pusha
lea
inc
clc
dec
inc
mov
(bad)
clc
mov
std
dec
mov
push
cmp
jmp
jae
pusha
ja
xor
sbb
cs
jo
mov
mov
mov
sbb
repz
jo
scas
xchg
fwait
cdq
sub
(bad)
cmp
xor
sbb
xor
rcr
ds
mov
imul
sub
cmp
addr16
mov
cmp
fsub
jle
sub
xchg
(bad)
mov
adc
xchg
push
std
or
imul
add
test
pop
or
and
nop
fdivr
jl
mov
push
retf
xlat
int
or
add
add
jmp
sbb
hlt
cli
cmc
out
ffree
in
sbb
add
dec
push
mov
test
icebp
cmp
inc
fwait
aaa
ss
scas
and
mov
mov
sbb
cli
je
jp
adc
inc
sub
mov
imul
mov
hlt
les
xchg
fstp
push
or
sub
(bad)
lds
jmp
mov
(bad)
pop
adc
add
jecxz
jbe
pop
push
(bad)
aad
ins
int3
jb
retf
neg
fmul
outs
pop
sbb
adc
mov
and
dec
shl
stos
adc
push
or
into
int
stos
fsubr
stc
mov
xor
jno
xchg
sub
pop
xor
bnd
push
pop
dec
mov
fisubr
push
jecxz
mov
mov
jno
push
aaa
and
bound
fisttp
mov
sub
sub
mov
jo
cmp
std
shl
scas
push
scas
aaa
outs
jecxz
xor
xchg
inc
popf
mov
mov
outs
xchg
in
fld
inc
outs
aam
pop
pop
adc
or
shr
jp
jno
hlt
dec
fs
add
inc
or
fidiv
sbb
adc
pushf
adc
inc
jbe
jne
xchg
xor
fwait
movs
dec
mov
(bad)
inc
add
dec
test
ror
fistp
cli
nop
fcmovnb
outs
(bad)
gs
xor
popa
jb
push
cmps
fwait
pop
mov
sub
into
outs
daa
xor
pop
jbe
retf
push
mul
dec
adc
ja
inc
sub
das
scas
mov
mov
mov
shl
retf
add
xchg
movs
int
sbb
popa
(bad)
push
addr16
shl
in
aaa
test
jmp
lock
xchg
cmps
sub
lahf
pusha
inc
movs
xor
mov
icebp
jmp
and
or
xor
aas
ret
and
inc
cmp
fld
xchg
sbb
call
(bad)
push
fwait
cmps
dec
cdq
sbb
cmps
lds
cmp
inc
fadd
jmp
jb
or
or
pmullw
dec
pop
mov
ds
pop
neg
pop
stos
aam
sti
shr
sbb
aam
shl
sbb
xlat
mov
inc
push
pusha
jb
nop
xchg
mov
jo
adc
icebp
test
xchg
repz
push
xchg
aas
dec
add
shl
lea
inc
scas
popa
inc
neg
shl
cmps
inc
mov
xchg
or
scas
scas
(bad)
js
xchg
lahf
push
in
adc
(bad)
xor
shl
push
jge
mov
push
mov
loopne
push
stos
xor
cli
fist
sti
pop
inc
rcr
and
imul
and
push
(bad)
mov
inc
bnd
fcom
push
and
jmp
stos
mov
js
xchg
mov
ds
clc
xor
test
adc
pop
add
loope
rcl
stos
inc
or
cmps
addr16
cmp
in
xor
add
jp
cmp
lea
mov
clc
mov
iret
add
mov
pop
jo
mov
mov
mov
icebp
jl
push
lods
scas
outs
mov
clc
mov
lock
retf
fidivr
retf
pop
aam
fcom
inc
xchg
pop
jmp
scas
mul
in
pop
popf
movs
mov
in
sub
dec
mov
pop
cmc
pushf
rcr
gs
jg
mov
sub
cmp
jae
inc
mov
into
xor
imul
in
mov
xchg
add
div
mov
mov
jnp
ret
jae
adc
lock
jmp
aaa
mov
or
dec
lock
xor
out
js
and
fs
gs
cld
sub
fmul
jmp
cmps
mov
xchg
pop
sub
cmps
sahf
cmc
mov
(bad)
test
adc
pop
shl
inc
fwait
cmp
sub
stc
mov
and
mov
pop
or
hlt
call
fisttp
mov
shl
movs
cld
std
int
retf
aad
daa
outs
nop
stos
xor
add
stos
fldenv
xchg
mov
dec
and
loope
xchg
test
inc
sbb
(bad)
sub
push
retf
xchg
(bad)
jo
dec
outs
loop
iret
dec
sahf
push
jmp
sbb
jb
sub
out
dec
je
ss
push
jmp
or
ins
loopne
push
pop
add
test
sub
or
xchg
je
je
jne
sahf
adc
test
hlt
dec
in
test
mov
cli
sbb
adc
and
xor
gs
movs
int
jecxz
mov
outs
xchg
adc
sbb
pop
push
mov
(bad)
pop
ins
jo
(bad)
stc
enter
sahf
sbb
pop
icebp
rcr
add
loope
in
xor
mov
ret
imul
push
not
sub
shl
mov
push
shr
arpl
mov
sub
jbe
cmp
inc
mov
inc
lock
push
adc
dec
jmp
push
repz
push
fwait
push
sar
js
out
sub
fstp
inc
inc
out
add
xchg
push
stos
push
jmp
retf
xor
sbb
aas
add
daa
and
mov
mov
mov
(bad)
out
xchg
sahf
mov
fidiv
bound
or
test
adc
repnz
and
daa
mov
mov
and
icebp
enter
dec
call
mov
jmp
sub
dec
pop
xchg
pop
sub
fs
dec
mov
mov
dec
sbb
jg
sbb
mov
sbb
lods
shr
jl
in
fild
enter
inc
push
or
push
repz
sub
cdq
retf
mov
pop
xchg
leave
mov
xchg
mov
js
pop
push
push
rol
call
stos
inc
out
push
in
xchg
push
sub
sub
lock
jnp
xchg
mov
les
leave
push
stos
mov
cmc
xchg
mov
inc
daa
sub
mov
adc
retf
stos
sbb
int
rcl
mov
inc
push
retf
icebp
paddsb
aas
sbb
out
inc
test
cmp
stos
and
mov
or
shl
push
(bad)
shl
(bad)
push
cmp
aas
jo
lods
loope
enter
dec
dec
pushf
or
dec
push
xor
xlat
adc
lea
rcr
push
pushf
cmc
mov
mov
xchg
shr
add
aad
movs
jle
inc
aam
push
mov
inc
je
pusha
sti
mov
mov
pop
add
psubsw
push
cmp
shl
push
pop
int
in
add
add
xchg
lahf
pop
mov
cmp
movs
movs
mov
into
jb
lods
fisub
dec
nop
mov
retf
sub
adc
mov
mov
xchg
cmps
sub
sub
add
or
mov
js
mov
fs
dec
pop
inc
test
dec
xor
add
pop
or
cmp
jae
shl
add
pop
cmps
pop
popf
mov
cmp
adc
fucomip
xchg
mov
sbb
xor
dec
mov
mov
retf
test
sbb
xor
inc
dec
pop
sar
adc
cmps
mov
sbb
sahf
retf
xor
inc
shl
fwait
jne
rcr
add
mov
jg
push
xchg
gs
daa
fild
push
in
stos
sub
pop
cld
inc
xor
das
scas
test
jmp
fs
xor
add
(bad)
clc
pop
mov
jg
jg
dec
xchg
xchg
inc
fs
fcmovb
xor
pop
rol
in
(bad)
outs
(bad)
jp
inc
push
test
(bad)
ja
hlt
or
dec
mov
cmp
cmc
(bad)
lahf
add
adc
mov
xor
das
mov
dec
push
fdivr
loopne
xchg
dec
pushf
movs
cmp
adc
in
jge
mov
cmp
cmp
pop
into
ins
dec
mov
dec
jb
not
test
arpl
dec
dec
cs
jns
pop
loopne
pop
stc
add
and
or
enter
sub
xchg
data16
and
inc
mov
add
mov
add
mov
call
es
pop
ins
pop
xor
mov
mov
in
mov
and
jno
dec
dec
mov
fisttp
push
imul
mov
inc
sbb
pop
loope
mov
jbe
mov
cld
sbb
repnz
sub
add
mov
sbb
invd
aaa
aaa
ss
jmp
bound
jge
js
enter
mov
mov
das
mov
sbb
push
push
pop
jnp
mov
jne
jae
ja
inc
cli
and
add
and
scas
mov
rcl
lods
std
mov
cmp
inc
mov
dec
sbb
xor
shr
adc
adc
(bad)
aas
out
fnstcw
loop
jae
ds
xchg
cmp
push
and
call
inc
loop
adc
push
adc
fwait
and
mov
das
jno
xor
and
xor
call
sbb
in
test
retf
mov
xor
(bad)
aas
adc
fs
mov
and
xchg
jecxz
pop
fsub
clc
push
mov
inc
adc
stos
xchg
xchg
mov
adc
dec
push
pop
pusha
pop
pushf
lahf
daa
and
cmp
(bad)
mov
sub
mov
(bad)
ficomp
mov
dec
loop
push
mov
dec
push
in
mov
ins
push
mov
xchg
inc
mov
je
repz
sbb
pop
add
daa
gs
mov
mov
jp
sbb
xor
lahf
pop
in
dec
fisubr
push
pop
rcr
cdq
in
call
xor
out
sbb
sub
jb
stos
add
cli
cmps
(bad)
fnsave
inc
cmp
and
test
mov
ret
dec
in
xor
mov
data16
rol
test
movs
adc
test
push
add
std
sahf
sub
pop
xchg
jmp
jmp
adc
dec
ror
ins
rol
mov
xchg
aaa
cmp
jge
pop
cmp
dec
call
inc
pop
sub
dec
popa
aam
inc
mov
mov
stos
scas
and
xlat
xchg
inc
dec
int3
setb
or
test
mov
js
popf
ror
sub
int
add
jg
sbb
pop
and
inc
setp
lods
push
pop
mov
inc
hlt
jg
mov
pop
cmp
cmp
xor
fistp
jne
sub
adc
aas
add
shl
test
cmp
cmps
adc
popf
das
je
inc
cmp
xacquire
mov
or
call
push
sti
cmps
outs
loop
mov
cwde
jp
xor
retf
inc
add
sar
xchg
sub
sar
pop
(bad)
cmp
scas
pushf
bound
ret
xlat
repz
stos
fwait
ds
mov
add
fadd
mov
sbb
xor
and
lea
jge
pop
jae
mov
shl
add
mov
frstor
out
xchg
fwait
cmps
fild
push
mov
cmp
inc
in
arpl
js
mov
mov
dec
mov
push
push
repz
hlt
cli
fistp
mov
mov
bound
pusha
sbb
mov
(bad)
gs
and
aaa
retf
sbb
pop
mov
mov
jle
dec
cmp
std
int
mov
fcomp
dec
sbb
xor
shl
fwait
lods
stos
push
add
adc
jo
dec
pop
(bad)
rcr
adc
fist
in
loopne
mov
dec
and
enter
addr16
rol
aam
loopne
fucomip
bswap
pop
jle
xchg
(bad)
out
sbb
sti
iret
ror
mov
dec
scas
out
and
outs
mov
movs
mov
imul
cmc
gs
lock
mov
xchg
inc
push
int3
dec
mov
stc
mov
movs
cmp
int3
cmp
arpl
mov
inc
ss
mov
or
inc
jp
test
inc
sar
mov
inc
jmp
sub
push
jge
inc
pushf
mov
pop
or
in
int
cmc
push
ja
mov
sbb
sahf
inc
in
dec
inc
sbb
cmp
popf
adc
out
lea
aam
adc
(bad)
fistp
pushf
push
xlat
xor
and
mov
enter
cmp
mov
xchg
xchg
push
add
popa
inc
mov
mov
and
pop
popf
fwait
push
xlat
mov
push
mov
sub
mov
imul
test
loopne
and
rcl
(bad)
aam
lods
stos
sbb
and
sub
and
repnz
repnz
mov
sub
xor
dec
repnz
rol
adc
nop
jb
imul
test
mov
cwde
pop
(bad)
outs
div
xor
ins
pop
pop
test
pop
jb
and
xlat
push
into
aam
xchg
scas
mov
mov
(bad)
jns
(bad)
out
adc
and
jg
add
pop
jl
inc
mov
sar
imul
mov
popf
cmp
rol
lahf
(bad)
jmp
pushf
jge
jecxz
mov
jno
push
pop
cmp
mov
pusha
and
cmps
in
(bad)
out
ss
cmp
and
test
inc
das
ja
mov
imul
sar
arpl
test
add
inc
stos
test
cmps
cmp
jg
or
cmp
dec
ret
icebp
sub
push
mov
mov
sub
mov
call
leave
push
push
push
into
sbb
mov
push
mov
mov
cmps
out
pop
in
xchg
stos
movs
sbb
test
cdq
jb
aam
fisttp
pop
(bad)
push
sbb
mov
retf
vpavgb
mov
imul
jbe
sub
cmp
int3
daa
jb
fstp
pop
sbb
sbb
sbb
dec
in
cli
shr
inc
pop
jo
or
jne
mov
(bad)
or
cmps
or
cmps
sbb
dec
xchg
add
nop
and
in
test
jg
xchg
and
mov
psubb
lock
pop
cmp
cmp
in
pop
cmps
mov
xchg
icebp
or
jb
fsin
dec
and
or
sbb
mov
xchg
mov
cmps
enter
dec
(bad)
fcomp
aas
cli
or
mov
das
adc
rcl
inc
push
push
sub
mov
and
mov
jbe
mov
jmp
push
dec
data16
jecxz
ins
sub
sbb
shl
in
div
push
push
jno
jno
push
dec
and
mov
xchg
(bad)
xchg
mov
clc
cld
mov
jne
sti
jp
xlat
in
cwde
pop
out
je
adc
fdiv
iret
rcr
fwait
mov
clc
mov
stos
movs
ffree
jl
ins
pushf
push
test
sar
mov
scas
in
call
pop
add
mov
lods
dec
or
in
lds
pusha
rcl
aas
xor
loopne
add
push
pop
jg
mov
add
adc
mul
leave
and
xor
sub
xor
mov
ret
and
or
or
adc
xchg
into
aam
xor
xor
mov
cld
dec
pop
mov
(bad)
cmc
cmc
mov
fdiv
and
mov
add
pusha
xchg
inc
mov
(bad)
mov
mov
cdq
imul
test
inc
addr16
jmp
repz
aaa
shl
hlt
iret
ret
sbb
or
outs
sbb
xor
mov
pop
or
sub
dec
pop
cmps
retf
in
and
push
or
scas
inc
jmp
push
test
ror
add
aad
neg
in
addr16
cmp
fs
outs
enter
adc
and
out
or
out
cli
jg
retf
lahf
mov
leave
push
jmp
dec
ret
jmp
mov
cmps
(bad)
aam
dec
adc
sub
scas
stos
loop
or
inc
stc
clc
scas
ds
pushf
xchg
or
or
and
jl
cmp
cmp
pop
mov
add
mov
or
push
ss
not
adc
lds
test
shl
scas
scas
mov
scas
or
outs
repnz
add
retf
pop
pop
or
xchg
cdq
pop
xor
xor
sti
or
or
xor
or
test
out
or
or
inc
jb
sbb
and
add
add
imul
dec
fcmovne
sub
jmp
mov
mov
fs
psubusb
sub
adc
sbb
ret
test
(bad)
mov
ret
inc
dec
push
xchg
ja
xchg
and
stos
push
push
movs
push
adc
jp
scas
stc
xor
stc
pop
daa
ds
and
fcom
jae
cmp
pop
test
popfw
lahf
enter
dec
and
and
dec
sahf
jmp
rol
sbb
mov
(bad)
aam
pusha
imul
sub
sub
or
mov
loope
retf
(bad)
fsub
xor
inc
clc
add
pop
popf
cmps
push
int3
fiadd
loopne
sub
mov
pop
addr16
cmp
jecxz
xchg
mov
mov
add
pop
mov
jmp
movs
mov
mov
aad
mov
mov
add
xor
(bad)
dec
pop
arpl
fwait
mov
outs
sub
movs
js
add
lods
dec
inc
xchg
add
je
pop
scas
and
fimul
mov
xchg
inc
cmp
push
mov
in
sub
ffreep
movs
cmc
add
mov
mov
or
xor
mov
inc
jo
pop
push
lods
es
fiadd
and
and
and
cs
xchg
jecxz
(bad)
enter
data16
test
test
enter
lock
lods
or
stos
cmps
stc
and
lods
push
xchg
cmp
ficom
jecxz
ds
stc
ins
cmp
cmp
cmp
sbb
mov
pop
mov
arpl
aaa
vpaddusw
push
cmps
arpl
cmp
shr
imul
adc
sub
mov
sbb
(bad)
pop
bound
fscale
call
jae
push
mov
mov
push
ds
fild
mov
iret
imul
xchg
(bad)
aad
lock
xchg
or
xor
cmp
jl
add
xchg
(bad)
bound
(bad)
shl
and
lahf
jnp
jge
loope
inc
jle
xor
aas
adc
pop
fldenv
mov
adc
(bad)
out
arpl
out
mov
pop
ds
mov
sub
repz
pop
les
sub
dec
call
and
shl
push
pop
adc
push
cdq
cmp
inc
bound
xor
sbb
call
jg
mov
rcr
dec
push
sbb
in
or
dec
mov
mov
mov
loop
add
outs
pop
jnp
pop
ins
dec
test
xchg
adc
stos
and
mov
mov
adc
dec
add
in
adc
mov
pop
xor
call
(bad)
inc
fimul
sbb
add
fwait
sub
cli
sbb
mov
xor
out
add
ja
enter
das
mov
cmp
mov
fcom
adc
les
scas
cmp
je
mov
cmp
(bad)
cmp
lds
mov
lea
in
shl
ret
mov
inc
mov
(bad)
lea
and
shl
retf
cmp
jbe
call
xor
add
adc
retf
push
adc
add
addr16
and
pop
push
cdq
clc
scas
xor
ficomp
jmp
gs
inc
mov
dec
aaa
es
mov
popa
fnsave
icebp
cmp
cmp
(bad)
repnz
mov
int
ins
jg
or
loopne
fnop
cmp
mov
sahf
sub
js
sbb
push
pushf
movs
mov
ss
pusha
mov
outs
inc
fcomip
xlat
scas
or
fstp
jb
(bad)
imul
and
cmp
jg
jne
cli
dec
and
(bad)
push
lahf
sbb
(bad)
push
sti
inc
or
icebp
jne
push
repz
and
idiv
jp
push
push
cmp
test
mov
add
sub
and
inc
and
cmps
pop
inc
adc
xor
cmc
bound
in
ins
jge
out
mov
out
test
in
cld
(bad)
test
push
inc
repz
mov
nop
adc
mov
mov
js
adc
ffreep
cmp
(bad)
jmp
cmps
inc
mov
adc
adc
fidivr
fld
sub
and
mov
test
(bad)
adc
jle
fcomp
add
jb
and
addr16
mov
mov
xchg
cmp
test
xor
out
mov
mov
lods
lea
and
bound
jp
aas
pop
inc
stc
xchg
repz
rcl
cmp
inc
sti
fmul
mov
sub
mov
jmp
cdq
repz
test
leave
mov
sbb
push
mov
mov
xchg
mov
mov
pusha
pcmpeqd
ins
ret
sbb
or
or
xor
(bad)
lea
popa
scas
jle
adc
(bad)
or
test
fcom
dec
mov
shl
mov
pop
or
dec
lds
dec
xchg
cmp
aam
daa
imul
gs
cmp
aas
loop
popa
mov
test
fld1
pop
push
mov
mov
and
pop
lods
(bad)
out
cmp
add
pop
mov
loopne
push
icebp
inc
stos
dec
sbb
inc
or
data16
out
movs
adc
lds
dec
and
shr
lahf
rcr
out
lahf
jne
call
rcr
aaa
mov
scas
bound
cs
jb
and
aad
cld
jnp
xor
mov
or
ret
outs
dec
mov
jbe
in
shl
xor
lods
outs
inc
push
cwde
aam
into
jmp
pop
or
(bad)
sub
lock
pop
inc
mov
enter
sbb
mov
data16
dec
jns
mov
cmp
jg
rcl
daa
jo
je
fs
pop
ja
ins
out
imul
add
ror
ficomp
lods
sbb
and
scas
and
and
(bad)
pop
and
or
pop
popf
and
or
ffree
bnd
cmps
into
sbb
push
cmp
mov
adc
mov
stos
(bad)
dec
inc
xchg
call
or
out
fmul
fsubr
sahf
and
aam
ins
mov
push
clc
mov
sub
mov
scas
sub
adc
loope
xchg
cdq
or
inc
dec
xor
in
or
push
out
scas
or
mov
mov
sbb
or
iret
mov
adc
(bad)
jnp
stos
std
pop
jmp
jbe
div
stos
xchg
mov
add
xor
push
xlat
add
outs
mov
pop
mov
xor
mov
dec
ins
daa
sbb
fwait
pop
sub
es
fcmovb
pop
and
xchg
call
imul
and
and
sub
in
lahf
sub
mov
lahf
sub
cwde
add
sub
or
sub
pop
mov
push
sub
pop
test
div
adc
lds
pushf
or
dec
xchg
jle
sbb
mov
and
jge
popa
js
mov
es
cs
faddp
aad
mov
adc
sbb
xchg
(bad)
mov
pop
sbb
cmp
pop
xor
sub
lea
rcl
jge
pop
scas
mov
arpl
outs
cdq
lea
sbb
or
xchg
xor
sbb
sbb
daa
es
out
xor
xchg
pop
test
pop
cmp
loope
in
xchg
add
inc
call
push
push
sub
cmp
push
jbe
inc
in
cmp
push
adc
mov
mov
in
or
out
xchg
pushf
adc
push
test
xor
cwde
mov
jo
call
jo
shl
xchg
and
adc
ja
mov
ins
neg
loope
mov
scas
mov
inc
cmp
dec
dec
std
lods
xor
xchg
repz
pop
retf
je
push
push
xchg
jmp
(bad)
cmc
popf
in
jns
and
imul
sbb
jmp
add
aad
retf
push
pop
and
xchg
outs
jg
xor
shr
push
addr16
sbb
xor
pop
add
cld
inc
sbb
call
adc
inc
adc
dec
adc
js
jecxz
test
sub
je
xchg
lock
sbb
repnz
xchg
les
cmp
inc
scas
addr16
pop
psrad
mov
loope
fwait
push
add
inc
inc
aas
inc
test
jne
jmp
mov
imul
movs
jg
push
sub
xor
das
cmp
push
push
cs
mov
cmp
fdivr
addr16
outs
cwde
dec
jecxz
setg
and
repz
and
xrelease
adc
xchg
xchg
mov
sbb
movs
cs
or
pop
(bad)
jmp
xor
push
xor
fistp
adc
adc
fldcw
and
je
cmp
lods
mul
mov
movs
mov
cli
adc
nop
stos
sti
xor
nop
jl
mov
pop
mov
dec
cli
sbb
sbb
pop
in
jne
push
mov
jp
push
or
pop
fisttp
cmps
inc
imul
jb
pop
push
fld1
bound
mov
sti
(bad)
or
jg
dec
mov
add
xchg
hlt
inc
cs
dec
sbb
pop
clc
push
cmp
mov
popa
or
mov
cmp
das
fwait
sar
test
cmp
scas
fnstsw
mov
mov
jbe
ret
loopne
jno
sahf
inc
stos
je
push
inc
icebp
cmp
sub
mov
fmul
mov
js
ret
ss
mov
sub
fisubr
jecxz
adc
cdq
add
or
ret
in
mov
sar
es
xchg
stos
ds
imul
lods
loopne
lods
in
outs
ret
sub
ja
gs
je
and
inc
xchg
cmp
fisub
les
or
ds
sbb
jl
js
mov
das
arpl
xchg
pop
in
pop
ins
pop
leave
popa
out
ret
jle
(bad)
cmc
pop
ficomp
push
jno
xchg
cmp
in
in
in
xchg
mov
cmp
push
scas
pop
aaa
(bad)
int3
outs
and
stc
cmps
out
mov
xchg
cmp
in
mov
mov
or
aas
shr
stos
or
xchg
xchg
cmp
xchg
sti
or
xlat
pop
mov
pusha
mov
inc
call
repz
stc
hlt
push
ja
jno
pusha
daa
add
mov
mov
xchg
mov
mov
xchg
iret
mov
push
adc
ins
stos
pop
cmp
cs
cwde
addr16
dec
dec
arpl
xor
lahf
mov
repnz
mov
sar
sub
fldenv
xchg
es
jae
addr16
cdq
jnp
shl
dec
pop
(bad)
mov
popf
popa
into
add
(bad)
xchg
bound
inc
pop
xlat
pusha
push
jp
sub
fld
dec
xchg
lods
push
leave
nop
push
lea
push
(bad)
stc
mov
xor
std
rol
sar
outs
inc
pop
pop
and
rcr
les
into
shl
(bad)
or
sbb
mov
aam
outs
cmps
mov
mov
(bad)
pop
sahf
xor
sub
cmp
clc
popa
aaa
adc
mov
mov
mov
fisttp
cld
rcr
fst
jo
sub
or
rol
std
jl
mov
cmp
out
adc
cmp
or
add
jnp
mov
push
loope
jmp
call
mov
shr
hlt
xchg
iret
imul
xchg
mov
jnp
sbb
adc
mov
xor
ret
jbe
inc
mov
xchg
fist
test
xchg
sub
fisubr
loopne
in
sub
popf
or
arpl
mov
pop
pop
(bad)
cmp
adc
shr
movs
jle
out
repnz
ss
push
inc
aas
jno
jp
addr16
in
inc
xor
jne
nop
mov
jnp
jo
test
stc
cmp
loopne
aas
test
adc
popa
pop
in
xor
std
stos
dec
push
or
fwait
dec
pop
lahf
pushf
int3
sbb
pop
das
(bad)
and
(bad)
adc
mov
xchg
inc
mov
je
stos
sub
add
and
push
xchg
xor
test
push
inc
(bad)
mov
sti
pop
retf
test
and
mov
fmul
dec
mov
ret
out
dec
xor
(bad)
xchg
mov
xchg
in
mov
mov
inc
fsub
aas
test
daa
sbb
xchg
jbe
mov
(bad)
je
push
xor
mov
push
inc
mul
mov
jl
fbstp
pop
push
mov
call
and
pop
adc
ins
jno
push
and
mov
int
std
push
pop
cmp
test
inc
repnz
scas
outs
cmc
mov
adc
push
push
mov
jne
or
pop
or
aad
imul
dec
cmp
loop
sub
cld
test
pop
sbb
adc
dec
pop
and
and
xchg
cmps
fdiv
inc
test
and
outs
dec
xor
or
sub
sbb
in
sbb
and
fcmovbe
push
and
mov
cmc
sbb
adc
dec
sbb
mov
daa
call
cli
add
gs
nop
lock
xchg
push
ds
retf
ins
rcl
cmp
mov
push
arpl
jno
(bad)
js
mov
ja
ret
ins
out
sar
xchg
mov
mov
push
jge
sub
jge
jo
iret
(bad)
data16
and
cmps
pop
mov
mov
cld
dec
mov
dec
(bad)
hlt
hlt
pop
jns
clc
inc
je
sbb
adc
ds
into
add
jmp
call
pop
mov
sub
test
jle
fcom
and
jbe
cmp
stos
call
xor
xchg
push
xchg
les
pop
aaa
imul
jns
mov
test
stos
mov
fist
fs
jle
jg
mov
pushf
pop
dec
lea
push
imul
mov
fisttp
bound
mov
in
pushf
(bad)
shl
cwde
and
stos
mov
xchg
adc
ja
inc
sti
rcl
sub
rol
lahf
repz
push
jno
sub
and
mov
xchg
add
cmps
inc
xchg
clc
lahf
push
inc
dec
hlt
mov
adc
xchg
push
pop
jl
jne
and
add
mov
xchg
mov
mov
shl
js
outs
and
xchg
push
jecxz
ss
add
jl
xor
lock
mov
mov
les
repnz
out
xchg
std
add
adc
mov
movs
mov
xchg
sub
sbb
adc
adc
pop
cmc
(bad)
inc
in
jmp
cdq
push
jmp
dec
add
ret
ja
sub
sbb
cmp
call
mov
das
mul
lods
popf
mov
in
cmp
sbb
or
(bad)
shr
fsubr
inc
arpl
jae
loop
(bad)
repnz
push
out
pop
cmc
pop
cmp
fwait
mov
pop
cmc
sbb
test
cmps
push
pop
adc
or
push
stos
daa
enter
xchg
dec
es
cmps
fist
jnp
inc
mov
pop
cmp
mov
or
push
inc
xchg
add
or
shl
shr
or
pop
test
shl
fwait
dec
cmc
bound
ins
dec
and
push
addr16
test
pop
jmp
inc
jp
into
adc
cmc
ret
jg
daa
fsubr
movs
adc
mov
scas
inc
arpl
inc
leave
fcomp
dec
clc
or
add
dec
xchg
mov
jmp
pop
cmp
cld
dec
pop
(bad)
in
or
jl
xchg
(bad)
pop
inc
in
sbb
adc
adc
push
push
aas
repz
ja
adc
(bad)
rcr
in
and
dec
std
shl
gs
fistp
jl
imul
push
add
inc
xchg
add
int3
test
(bad)
add
mov
pop
movs
sbb
ds
add
fsubr
pop
cmp
and
and
mov
outs
lods
imul
mov
(bad)
dec
xor
xor
out
jb
inc
mov
dec
aas
jge
jl
test
mov
mov
std
dec
jne
sbb
push
loope
mov
call
and
mov
xor
pop
lea
mov
jne
in
shr
mov
dec
hlt
mov
outs
cmp
idiv
sbb
test
mov
dec
div
fs
inc
jecxz
dec
add
int3
ins
mov
call
aam
sbb
inc
call
pop
xchg
pop
outs
jle
neg
dec
mov
xor
jne
jno
jae
adc
xor
cwde
inc
pop
cmps
or
scas
or
mov
in
ret
xor
out
dec
aad
mov
xor
sbb
mov
pop
fmulp
les
and
fnstenv
jae
fbld
cwde
push
inc
iret
in
ror
jg
js
stos
adc
jns
sahf
popf
fwait
xor
movs
jge
dec
in
inc
cli
out
mov
jo
lds
loope
cmp
sti
sti
(bad)
std
jl
xor
and
jnp
aas
adc
mov
mov
into
mov
and
scas
nop
mov
aaa
stos
imul
aad
movs
mov
enter
add
call
xor
push
pop
xor
cmp
or
mov
and
(bad)
push
sbb
mov
sub
inc
fnstcw
inc
pop
(bad)
adc
out
jns
data16
movs
stos
push
jp
sub
add
je
sub
mov
iret
pop
pusha
inc
cld
je
or
adc
inc
mov
aad
addr16
test
cmp
and
neg
ins
aaa
xlat
mov
dec
out
and
adc
sub
lods
inc
int3
cmp
out
mov
jae
push
cmp
inc
ja
xor
out
mov
cmp
dec
xchg
cmp
sub
out
push
sti
push
mov
mov
icebp
sub
retf
push
cs
cmps
xchg
mov
push
push
dec
sub
xchg
gs
leave
dec
hlt
cmps
fild
and
sub
dec
mov
test
fsubr
dec
or
mov
mov
jno
pop
push
xchg
xchg
lods
inc
(bad)
push
std
adc
dec
push
lea
adc
cld
or
add
cmp
cmp
test
fdiv
icebp
pop
or
jle
push
xor
jbe
push
shl
out
sbb
(bad)
fs
inc
mov
cmp
pop
pop
call
popa
call
in
mov
dec
cld
jo
mov
inc
xor
es
movlps
rol
test
mov
addr16
scas
sti
in
xor
cmp
cmps
cmp
pop
push
sub
les
adc
jmp
jmp
mov
cmp
add
push
cmc
xlat
pop
ja
mov
sbb
sahf
(bad)
outs
push
sbb
mov
jl
cmc
dec
add
inc
aad
mov
es
or
mov
mov
aad
jmp
in
mov
or
lds
int3
mov
enter
sub
push
lea
pop
popa
(bad)
popf
jae
cmc
xchg
adc
mov
push
xchg
adc
mov
sub
(bad)
sub
test
mov
ins
imul
stos
dec
(bad)
sti
jae
mov
cli
pop
xor
fld
in
loope
sub
xchg
cmp
mov
(bad)
js
les
sub
and
add
push
repnz
or
into
add
retf
cmp
pop
(bad)
imul
mov
jb
mov
movs
push
das
or
jge
adc
ins
wrmsr
out
std
adc
les
push
dec
mov
scas
mov
inc
dec
or
pop
rcl
push
inc
ror
push
push
or
rol
pop
and
xchg
lock
and
scas
ins
test
jnp
push
hlt
sub
push
dec
adc
cmp
sub
fmulp
fcomp
push
xchg
inc
add
int3
mov
mov
sbb
jecxz
sar
cmp
cmp
(bad)
(bad)
xchg
pop
mov
ja
mov
adc
lds
sbb
icebp
or
dec
clc
and
addr16
cmp
cmp
popf
lahf
pop
inc
jne
adc
loop
ror
pop
popa
les
xor
loope
or
arpl
das
jge
mov
sbb
and
adc
and
xlat
imul
into
ficomp
pop
mov
mov
push
sbb
imul
xchg
mov
sub
or
jmp
cmp
aaa
lods
lahf
cdq
pop
or
mov
pop
mov
sub
mov
dec
lds
pop
in
jns
ins
dec
repz
mov
sub
jg
dec
(bad)
xor
jbe
ins
pusha
pusha
xchg
mov
mov
out
xchg
pop
rcr
stos
data16
sbb
adc
add
cmp
es
mov
add
int
js
sbb
pop
(bad)
dec
cwde
scas
jne
push
mov
or
or
imul
into
sbb
fcomi
ds
or
ss
mov
sbb
and
inc
add
ins
push
jbe
pop
(bad)
lock
rcr
outs
add
in
pop
sub
mov
and
add
or
push
fadd
mov
out
hlt
loope
mov
sar
aad
inc
jecxz
or
daa
jecxz
adc
sub
dec
jne
ins
jb
mov
fwait
lds
sub
test
jp
xchg
data16
fcmovnbe
cmp
hlt
adc
loope
pusha
push
pop
in
cmp
cmp
scas
dec
icebp
(bad)
sti
fnstcw
adc
xor
dec
fcmovbe
inc
and
add
das
adc
push
adc
test
mov
ss
sub
and
fcomp
fs
sub
jmp
pop
push
jge
call
les
mov
and
sahf
add
sub
sub
xchg
(bad)
repnz
ror
fld
cli
and
shl
inc
out
loopne
jno
lods
aaa
cmps
je
jne
push
loop
cs
dec
ds
(bad)
ja
adc
shr
clc
out
loopne
xchg
rol
cmp
lods
in
bsr
xor
mov
mov
dec
cmp
and
xchg
xchg
mov
clc
pop
arpl
cdq
and
mov
loopne
fmul
cmp
adc
ret
nop
lds
xchg
leave
push
outs
idiv
mov
jno
ins
xchg
bound
sbb
rcr
loopne
test
hlt
mov
cmp
or
jge
push
fwait
std
enter
movs
and
xchg
xor
sbb
(bad)
in
jp
push
sub
in
call
adc
loop
in
mov
hlt
xchg
sub
dec
sbb
pop
sub
in
mov
lds
ins
ret
sbb
xchg
loop
fdiv
popa
cli
test
adc
push
nop
ret
push
leave
daa
outs
das
or
sub
pushf
cmp
ds
ss
inc
pop
lds
(bad)
fcomp
dec
in
daa
ror
test
adc
aas
mov
dec
hlt
pop
adc
pop
ss
mov
ret
lds
hlt
neg
ficomp
out
pusha
add
icebp
jmp
enter
sub
das
mov
adc
mov
or
pushf
jmp
aas
add
jb
mov
stc
inc
lea
pop
sbb
jb
int3
inc
ret
cmp
scas
mov
pusha
int
dec
adc
ss
and
jae
rcl
pop
mov
adc
cmp
ret
adc
push
fnstcw
retf
xchg
sahf
mov
push
push
outs
fs
cmp
inc
dec
lods
push
sub
pop
and
cld
call
and
repz
and
pop
inc
je
add
repnz
jecxz
pop
mov
repz
push
sbb
mov
sub
(bad)
fsubr
retf
cmp
cwde
enter
dec
comiss
pop
ds
mov
loop
fist
add
pop
scas
inc
shl
iret
push
(bad)
jnp
pop
pop
iret
ret
or
mov
out
dec
es
add
push
push
mov
jp
and
cmp
and
test
sbb
dec
pop
and
mov
fdiv
ds
mov
pop
push
or
xor
xlat
or
cmp
or
mov
cmp
dec
pop
ret
sbb
push
sub
xchg
cmp
or
add
sbb
and
imul
je
jmp
jno
xchg
mov
xor
ret
jno
lea
retf
cld
xchg
xchg
cmp
dec
cmps
inc
movs
mov
xor
iret
and
outs
mov
out
in
addr16
dec
xor
pop
xchg
ret
test
scas
fsubr
fistp
sub
xchg
adc
je
(bad)
das
mov
js
out
jl
je
pop
and
js
pop
cmp
repnz
pop
or
out
pop
cmp
mov
mov
mov
xlat
idiv
sub
retf
jns
push
mov
dec
inc
les
xchg
jp
mov
js
inc
sbb
jp
adc
popa
add
or
and
retf
adc
adc
cwde
call
add
xchg
mov
sbb
push
sub
retf
sub
adc
or
push
test
or
pop
dec
clc
je
mov
inc
lock
cmp
mov
imul
lds
clc
xchg
jns
sbb
nop
jecxz
int
or
mov
sub
ror
mov
outs
cmp
mov
jo
sahf
pop
call
mov
fldenv
dec
ror
jbe
int3
aam
mov
mov
daa
mov
inc
push
(bad)
push
leave
ins
test
repnz
test
jnp
pop
pop
clc
jecxz
mov
xlat
rcl
mov
ins
cmps
stos
mov
shl
popa
mov
and
lea
js
add
mul
xchg
adc
(bad)
aaa
in
arpl
adc
lods
inc
sbb
push
cmp
mov
and
test
test
lods
or
inc
repnz
mov
mov
push
pop
xchg
xor
adc
pushf
pop
sub
cmps
inc
sub
ret
push
icebp
pop
test
dec
nop
lods
push
jg
cld
retf
daa
sbb
data16
dec
and
xchg
pop
jmp
fldcw
xchg
sbb
jp
stos
adc
mov
ret
addr16
div
mov
push
inc
cmp
sbb
cmp
dec
cmc
dec
xchg
and
cmp
test
out
mov
dec
mov
sub
xchg
dec
push
pop
xor
dec
scas
or
pop
retf
mov
div
movs
fcomip
test
push
inc
sar
mov
mov
sti
pop
test
ds
(bad)
jge
mov
xor
or
xor
xchg
pusha
push
inc
sbb
and
cli
or
repnz
das
or
dec
cld
sub
ins
scas
fdivr
mov
adc
pop
jb
and
jl
and
inc
das
into
js
dec
add
daa
or
pusha
mov
cs
imul
mov
fisttp
or
lock
out
out
daa
aaa
inc
jmp
jnp
sbb
pop
out
not
stos
cmps
dec
gs
inc
mov
cmp
cmp
cmp
mov
cli
mov
pop
pop
sub
rol
dec
or
stos
neg
mov
fwait
or
cmps
jmp
cmp
sbb
cmp
pop
sar
dec
fcomp
push
stc
xchg
retf
outs
cmc
in
(bad)
shr
push
xchg
rcl
add
cmps
in
out
and
test
or
lock
aas
fild
inc
inc
jo
ficomp
loope
adc
push
(bad)
cmc
stos
xchg
dec
outs
and
mov
mov
xchg
xor
add
xchg
mov
xor
pop
pop
in
and
jmp
or
pop
jmp
mov
rcr
or
pop
cwde
test
jne
movs
je
sub
iret
pop
ins
xchg
pop
mov
sbb
add
sbb
mov
mov
movs
dec
or
mov
pop
scas
clc
adc
fnstcw
push
les
sub
div
fucomp
les
sbb
add
or
int3
movs
lods
shl
(bad)
cdq
pop
retf
mov
jp
mov
mov
(bad)
stc
mov
pop
out
leave
lea
jae
sbb
mov
ret
pop
test
xchg
nop
mov
adc
(bad)
jo
out
pop
xor
cmp
push
cdq
adc
sahf
pop
jno
fldenv
ficomp
mov
mov
cmp
mov
or
push
mov
fistp
cli
and
ds
or
jae
lods
inc
cmp
test
mov
xchg
ja
test
mov
sbb
adc
(bad)
jns
dec
bound
mov
(bad)
xor
xor
mov
jae
retf
xchg
xchg
lahf
adc
and
xor
push
rcl
dec
fcmovnu
jae
sar
mov
sbb
out
bound
push
xchg
and
fisttp
add
xchg
xor
popf
ret
xchg
ss
mov
inc
call
push
inc
mov
inc
sbb
test
or
sub
cmp
aam
push
sbb
push
add
test
mov
movs
data16
cli
cmp
jb
xor
(bad)
push
or
es
sbb
dec
gs
push
sub
inc
jmp
jmp
fdiv
jne
daa
xlat
les
cmp
mov
int
mov
jno
cmc
jbe
(bad)
xchg
add
sti
movs
push
add
jne
stc
cmp
stos
js
cmp
xchg
loope
in
inc
test
push
and
push
enter
test
cmp
push
dec
pop
mov
mov
cmps
push
mov
pop
mov
pop
stc
int3
xor
xchg
xor
test
adc
mov
enter
hlt
cmp
lahf
dec
into
push
adc
pusha
mov
nop
(bad)
pop
stos
sub
pop
xchg
int3
add
cwde
mov
in
addr16
ss
cmp
mov
jle
call
and
adc
pop
xchg
inc
mov
shr
fwait
repnz
ss
pop
stos
mov
mov
push
(bad)
shl
pop
xor
fisttp
mov
add
cmp
sbb
je
and
adc
mov
pop
inc
js
jmp
add
sbb
call
fwait
jmp
mov
and
cmp
mov
sbb
call
add
in
cli
xor
cmp
dec
push
xchg
mov
mov
ret
aad
add
add
aaa
test
cdq
aas
imul
arpl
pop
ret
jbe
into
fistp
pop
movs
in
add
gs
retf
outs
sub
add
pop
and
ja
xchg
xchg
jmp
imul
dec
jae
push
adc
inc
jae
test
cmp
cld
or
hlt
fwait
shr
dec
ficom
or
jmp
lahf
shr
push
(bad)
aam
(bad)
addr16
and
retf
imul
jne
xchg
adc
hlt
sub
adc
jecxz
pop
and
cmps
jns
adc
inc
ins
or
add
push
jmp
dec
add
lods
mov
outs
cmp
dec
dec
or
int
mov
add
aas
movs
(bad)
mov
sbb
add
addr16
sahf
ins
out
dec
add
push
out
mov
(bad)
jns
push
int
ret
add
in
(bad)
icebp
(bad)
out
cmps
aam
imul
add
add
(bad)
pusha
mov
call
xor
cmp
enter
mov
or
je
push
pusha
outs
js
bound
fdivr
(bad)
sub
leave
int3
out
mov
and
ins
outs
mov
xor
iret
and
aam
xor
lods
pop
mov
in
addr16
out
and
pop
pop
push
or
test
fidiv
gs
mov
and
cmp
aad
dec
rol
pop
sbb
and
xor
rcr
adc
out
fmul
jb
repz
rol
in
ret
jmp
push
mov
sti
dec
dec
popa
add
inc
stos
pop
imul
mov
cld
inc
jle
jne
xchg
mov
add
push
and
clc
push
scas
fsubr
pop
sub
and
ficom
sub
inc
loop
ins
xor
ret
mov
or
movs
aas
test
loope
pop
sub
sub
adc
in
les
movs
pop
cwde
jl
sub
aad
xchg
sar
les
imul
mov
jnp
not
data16
call
stos
push
ins
std
enter
pop
stc
je
and
jno
cmp
clc
(bad)
jmp
mov
jle
inc
mov
cwde
jne
jg
mov
repz
xor
mov
sub
mov
jb
jae
jmp
or
and
cwde
cmp
xchg
bound
(bad)
enter
out
jno
retf
jge
ja
or
add
fwait
leave
imul
xor
sub
mov
arpl
or
cmps
imul
mov
mov
or
out
jle
sub
pop
into
pop
jp
fmul
push
add
pop
cdq
fsub
pop
xor
test
cdq
outs
xlat
inc
pop
jg
cli
add
fbld
adc
enter
dec
in
mov
xchg
mov
icebp
mov
jl
ds
ret
loopne
xchg
loop
loop
sbb
cmps
lds
pop
out
mov
call
jne
dec
repnz
je
xlat
xchg
add
jo
dec
clc
dec
std
mov
inc
push
dec
inc
adc
or
mov
int3
jns
popf
sbb
jg
dec
retf
icebp
adc
inc
out
test
aas
xor
cmps
mov
das
sbb
aaa
addr16
add
pushf
int3
std
mov
jl
mov
or
dec
les
and
nop
cmp
or
xor
and
outs
cmp
loopne
inc
jns
ja
xchg
inc
and
ror
push
xchg
gs
jp
xchg
jb
in
mov
jne
inc
ss
iret
dec
pop
xchg
add
in
push
dec
push
sub
push
sub
(bad)
jle
adc
arpl
popf
pop
das
jno
cmp
mov
dec
jns
mov
cli
push
into
fstp
jmp
push
repnz
pop
jns
fistp
dec
inc
stc
or
adc
(bad)
out
std
add
imul
add
outs
loope
test
push
int3
mov
cmp
adc
mov
or
adc
push
push
jle
lahf
shr
stos
shl
popa
and
xchg
mov
lods
leave
and
shl
aam
out
into
aam
repnz
xchg
and
add
mov
adc
jne
hlt
dec
add
bound
aam
cmp
in
jg
mov
test
outs
pop
mov
movs
pusha
and
adc
inc
add
test
aas
outs
adc
mov
adc
pop
idiv
push
push
jb
xchg
push
test
xor
inc
jecxz
outs
pop
xor
rcl
push
cld
pop
xor
xchg
test
cs
jnp
fcomi
jo
cmp
es
pop
call
out
fisubr
cmps
jo
push
aam
leave
mov
pop
adc
addr16
je
push
and
inc
pop
fcmovnu
mov
push
iret
js
out
inc
cmp
cmps
mov
jbe
jmp
movs
loope
mov
add
mov
jne
fadd
add
xor
gs
and
push
arpl
push
xchg
adc
lods
call
push
pop
sub
dec
gs
cdq
(bad)
out
cmp
xchg
es
leave
outs
cld
retf
int
mov
jbe
dec
sbb
dec
inc
lds
in
push
arpl
cwde
retf
add
(bad)
(bad)
cmp
push
ret
xlat
(bad)
idiv
pop
sub
cld
sub
add
mov
inc
ror
aaa
and
enter
je
ret
jns
call
lahf
je
and
jp
xchg
mov
in
std
ss
cmp
and
(bad)
cwde
adc
mul
es
sbb
and
cmp
pusha
add
xchg
pop
icebp
ins
mov
fld
mov
xchg
fcmovbe
or
clc
mov
ins
sub
movs
scas
aas
dec
mov
sbb
icebp
sbb
lods
fsubr
xchg
sbb
xor
out
mov
ja
push
das
sub
std
ja
jne
mov
outs
outs
jmp
ret
adc
and
push
aam
jge
rcl
dec
jno
(bad)
outs
test
fs
mov
cmp
sub
arpl
ds
jo
out
or
pop
cmp
pop
sbb
popf
outs
pop
sar
(bad)
(bad)
cmp
push
mov
fwait
aad
pop
push
and
movs
adc
in
inc
pop
fild
and
(bad)
icebp
cli
loopne
aaa
call
xor
mov
jl
rcl
dec
push
jb
loopne
repz
cmp
adc
sub
jno
fwait
jl
mov
and
xor
mov
out
jmp
sub
sub
and
addr16
das
fadd
or
sub
aaa
mov
xchg
sub
call
add
mov
fs
push
add
push
imul
pop
mov
adc
aad
push
imul
out
sbb
hlt
(bad)
(bad)
sub
push
and
stc
jmp
lock
xor
cvtps2pd
mov
out
and
retf
imul
mov
outs
fisubr
je
dec
fnstcw
js
and
fs
mov
outs
iret
shl
aam
daa
int3
mov
pop
add
push
aas
mov
adc
test
mov
enter
div
push
lods
mov
pop
jmp
mov
mov
jmp
inc
xchg
movs
cmp
cmp
push
mov
ss
loop
pop
inc
fwait
sub
call
sub
fcmove
pop
jbe
and
aas
dec
mov
fbld
mov
sbb
cmp
sbb
cwde
xor
xchg
mov
add
sub
dec
cwde
xchg
sub
leave
inc
mov
adc
add
push
cmps
fimul
mov
sbb
mov
cmp
mov
pop
xor
xlat
(bad)
je
retf
dec
add
mov
into
imul
sub
adc
push
adc
lods
jmp
gs
push
mov
sub
push
cmc
out
addr16
pop
or
cmp
pop
jmp
pop
popa
inc
adc
pusha
inc
int3
dec
call
pop
add
adc
fs
int3
cld
xchg
out
push
sti
cmp
test
fst
xor
fld
stc
inc
outs
sub
and
mov
imul
(bad)
pop
cmps
arpl
out
add
in
dec
xchg
and
gs
xor
dec
or
adc
jg
sub
jbe
cmp
call
mov
lds
rol
add
and
mov
push
xchg
or
mov
(bad)
xor
and
jmp
push
xchg
ds
mov
and
or
(bad)
lock
pop
outs
sbb
inc
stc
daa
jmp
xchg
fld
mov
cmc
in
out
call
ds
lds
cmp
cmp
push
jae
fsubr
sub
ja
dec
pushf
inc
cmps
cmps
pop
pop
jne
xor
sub
(bad)
(bad)
test
inc
daa
daa
in
push
fimul
cwde
(bad)
push
dec
imul
sub
xchg
add
fistp
fist
movs
push
cmps
mov
test
add
and
push
dec
dec
je
xchg
jo
call
pop
cmp
int3
push
int3
out
mov
cwde
or
stc
add
xor
push
xchg
ja
cwde
sub
(bad)
and
shl
add
inc
(bad)
push
push
add
mov
sbb
cmps
jno
mov
lods
in
into
leave
aas
cmp
aas
sub
inc
add
cmp
loop
ret
pop
sti
mov
test
fld
jo
lods
fidivr
les
inc
or
les
ins
mov
pop
mov
(bad)
lock
mov
fwait
xchg
retf
mov
ret
call
mov
mov
sbb
loop
inc
cmc
mov
rcl
mov
aas
into
sbb
push
xor
pop
fisub
and
xor
xor
pushf
js
std
ds
xchg
push
xchg
add
popf
jmp
and
test
repz
or
dec
das
sub
jne
pop
mov
sahf
(bad)
int
ret
and
add
cmc
cli
cmc
sbb
fwait
mov
push
hlt
mov
sbb
dec
scas
cld
ficomp
cmp
mov
xchg
mov
loopne
into
inc
ja
(bad)
cld
ret
cmp
cmp
inc
xchg
fdiv
adc
mov
mov
sub
xor
lods
out
or
int
inc
arpl
cmp
shr
aas
mov
jne
lock
adc
int3
mul
ret
int
push
cdq
lods
bound
retf
or
cmp
sub
sub
and
dec
cmp
fdiv
sbb
outs
shl
cmc
mov
ss
inc
shr
jmp
in
dec
pop
test
test
dec
pop
sbb
std
outs
shl
pushf
pop
(bad)
dec
sbb
int3
xchg
inc
cmc
xchg
retf
test
xor
shr
nop
inc
inc
dec
outs
ja
aad
(bad)
lahf
push
jbe
cmp
adc
cli
jmp
pop
hlt
and
cmps
ins
aad
scas
into
frstor
sbb
leave
mov
rol
setg
jno
push
pushf
xor
sub
movs
dec
add
adc
push
rol
stc
sbb
repz
aad
or
add
inc
loopne
mov
mov
pop
fimul
into
mov
cmps
or
inc
fidivr
push
sub
pusha
cwde
push
mov
cmp
loope
xor
bound
fwait
xor
aam
mov
fisttp
lahf
(bad)
fmul
push
cwde
sbb
fcomp
pop
adc
adc
and
retf
js
es
in
in
int3
lds
cwde
dec
cmp
inc
xor
mov
std
jecxz
or
int
lods
aam
mov
enter
sar
loopne
popa
or
adc
dec
mov
push
test
xchg
popf
out
add
ss
add
adc
jo
arpl
fstp
ins
repz
je
sti
popf
icebp
xchg
std
scas
push
sub
int
push
mov
push
scas
push
inc
cwde
mov
pop
push
jb
add
mov
pop
or
xor
sub
out
sub
push
pop
add
adc
mov
dec
hlt
sti
xor
mov
pushf
xchg
popf
pop
and
hlt
adc
xor
lea
cs
dec
cmp
xor
sbb
mov
outs
jecxz
rol
xor
ret
sub
call
scas
test
(bad)
out
mov
shl
add
ficomp
jge
ins
in
pop
and
inc
mov
dec
push
test
inc
push
jmp
sub
leave
fneni(8087
sub
retf
call
test
(bad)
(bad)
adc
dec
paddusb
push
hlt
mov
aam
pop
daa
mov
sbb
jp
imul
jge
hlt
in
int3
jne
pop
pop
shl
inc
xor
ds
mov
cmp
cmps
in
ret
ss
sbb
sahf
dec
aam
mov
call
add
imul
sbb
add
mov
test
pop
and
rol
sub
cmps
loopne
das
jae
push
cmp
and
int3
jmp
push
call
push
imul
push
enter
xchg
sub
fstp
mov
or
xor
xchg
jne
aam
out
xor
xor
inc
lods
jns
fidivr
loop
mov
ficom
sub
cmp
or
das
es
and
sub
(bad)
arpl
not
mov
lock
mov
pop
xor
fbld
jecxz
icebp
int
xchg
inc
popf
fstp
cmc
out
and
sbb
les
pusha
push
fistp
lods
mov
adc
data16
mov
xor
jnp
sbb
dec
dec
daa
sub
dec
mov
mov
xchg
dec
xchg
jle
fwait
sub
nop
mov
and
dec
xchg
(bad)
movs
cli
mov
mov
in
inc
inc
mov
push
scas
inc
out
pop
ud0
and
mov
push
ja
xchg
mov
cmp
mov
aam
xchg
sahf
out
call
(bad)
or
adc
inc
sbb
nop
adc
mov
aad
leave
out
jns
je
popf
in
loope
ret
hlt
xchg
add
enter
add
mov
push
xor
dec
enter
enter
mov
adc
stos
fs
(bad)
adc
jmp
mov
imul
add
xlat
or
movs
adc
fadd
test
lds
and
imul
nop
sub
and
jo
out
aaa
xchg
or
icebp
fs
call
(bad)
gs
sub
movlps
push
test
outs
cdq
or
jmp
pop
add
mov
jl
inc
out
test
mov
pushf
cmp
loop
cmp
add
push
ror
add
or
jecxz
push
xor
scas
cwde
cs
sub
cli
outs
pop
cmc
jbe
xlat
add
adc
xor
shl
rcr
inc
mov
xor
rol
jecxz
inc
xor
adc
xor
inc
jae
push
clc
add
mov
push
add
sub
cmc
jb
mov
dec
mov
fist
cmp
adc
mov
cmp
pop
or
lahf
xor
mov
pop
daa
fnstenv
mov
mov
test
cwde
and
jns
push
cmc
sub
retf
addr16
mov
data16
lods
push
outs
and
inc
mov
fwait
cmp
sub
inc
popa
jbe
outs
leave
jnp
cmp
retf
(bad)
sbb
and
fwait
cwde
jmp
mov
movs
jg
add
or
push
(bad)
cld
pop
mov
push
mov
mov
mov
pop
jg
movs
inc
es
or
(bad)
push
aaa
std
les
popf
imul
(bad)
jmp
mov
lea
mov
mov
(bad)
repnz
dec
xor
mov
inc
pop
jmp
adc
dec
test
xor
loope
pop
repnz
jge
dec
cmp
xor
retf
cmps
movs
loopne
jne
sti
int3
cwde
adc
cmp
(bad)
aas
inc
movs
leave
mov
lods
jp
mov
aaa
lea
mov
int
dec
mov
fwait
inc
cmps
in
in
mov
mov
mov
dec
inc
movs
cmp
outs
and
mov
mov
adc
(bad)
movs
scas
retf
std
mov
jns
mov
and
mov
xchg
call
mov
xor
loope
or
pop
pop
push
mov
(bad)
aas
sbb
sbb
mov
fild
adc
xor
jne
ins
adc
pusha
outs
jmp
inc
add
and
push
add
add
lea
push
in
outs
mov
jp
lock
jmp
xchg
shr
scas
call
or
cmc
mov
hlt
pop
cmp
add
cmp
popa
push
jg
xchg
cmps
sub
loope
rol
mov
stc
sub
hlt
rcr
mov
ins
mov
cld
or
daa
(bad)
sub
inc
mov
outs
aaa
xchg
fs
and
loope
sbb
inc
bound
dec
pusha
xor
dec
mov
icebp
mov
shr
xchg
aam
in
xchg
stos
pop
lods
xchg
xchg
push
jecxz
hlt
jmp
inc
add
retf
call
ret
mov
es
stos
and
hlt
add
inc
xchg
out
dec
jae
xor
inc
cmp
mov
sub
aad
xchg
lahf
add
mov
sar
test
leave
test
mov
fdivr
dec
xchg
scas
sub
inc
sub
addr16
shl
(bad)
mov
data16
sub
mov
nop
fst
xchg
lea
in
aad
inc
xor
push
outs
pop
mov
jo
sbb
adc
cmp
js
sar
in
jnp
dec
jle
cmc
cli
cmp
int3
test
ror
in
sub
sub
sbb
adc
push
ret
xchg
sub
int3
mov
arpl
in
sbb
jle
aas
inc
mov
test
shl
push
clc
fild
movs
aas
repz
popf
fadd
cmp
aam
xchg
sbb
sar
jno
inc
or
mov
hlt
sbb
hlt
arpl
xchg
cdq
in
adc
ror
pop
fwait
repnz
pushf
cld
adc
xor
out
cmp
cdq
pop
and
mov
ja
and
xchg
jecxz
test
enter
and
cmp
cmc
aaa
xor
mov
jg
sbb
into
call
(bad)
repnz
popf
sbb
daa
push
mov
(bad)
push
call
ins
es
outs
adc
into
adc
fiadd
imul
cmp
call
std
push
push
inc
out
inc
mov
repnz
ficom
cmc
popf
dec
mov
es
inc
sbb
jmp
push
fiadd
icebp
enter
and
xchg
mov
mov
repnz
iret
cli
ss
out
fsubr
sbb
movs
out
push
(bad)
dec
push
dec
mov
nop
xor
xor
mov
mov
xor
dec
fsub
add
mov
(bad)
(bad)
jbe
mov
sbb
mov
movs
fmul
clc
mov
pop
push
outs
lahf
add
test
jle
fs
ins
fwait
xchg
inc
vpunpckhbw
adc
xor
in
mov
fmul
fdivr
adc
es
and
clc
jo
fdivp
mov
sbb
pop
or
jl
or
jp
fidivr
(bad)
into
aaa
lahf
loope
fs
add
ins
fcomp
(bad)
scas
out
shl
scas
adc
in
mov
jb
pop
push
xlat
out
cmp
jb
in
les
dec
sub
mov
fisttp
xlat
loope
lds
adc
xor
mov
cmps
popa
dec
push
mov
cmp
pop
retf
into
rcl
mov
sub
adc
sbb
aam
adc
and
shl
dec
xchg
test
lods
push
retf
dec
mov
xor
lods
add
cmps
push
dec
mov
inc
mov
pop
pop
cmp
push
call
repnz
movs
(bad)
mov
xchg
xchg
cmp
cmp
pop
pop
mov
fdivrp
inc
lods
mov
jbe
jo
aas
call
dec
fcmove
mov
(bad)
cmps
adc
dec
loopne
jecxz
ret
sub
push
jp
ret
or
inc
add
push
inc
icebp
mov
sub
scas
cli
les
in
fist
jle
xor
aad
mov
nop
or
dec
retf
aaa
inc
pop
shl
outs
outs
cdq
adc
or
xor
push
inc
in
add
lock
adc
fstp
mov
sbb
icebp
out
leave
pop
sub
(bad)
xor
dec
les
sbb
dec
jnp
mov
idiv
xchg
pop
and
mov
dec
or
sbb
mov
jp
das
es
mov
ja
and
mov
mov
adc
xor
xchg
mov
cmp
cmps
ret
add
cld
out
movs
jmp
inc
mov
(bad)
dec
pop
scas
fisttp
je
pusha
outs
and
stos
pop
cmp
xchg
sbb
sub
sub
sub
xchg
ss
enter
xor
aam
ins
inc
cld
lahf
stos
cs
or
cwde
jmp
loopne
pushf
addr16
movs
in
adc
mov
imul
mov
test
push
movs
mov
mov
inc
mov
adc
lods
out
les
popa
ds
out
lods
dec
js
inc
jns
daa
push
lahf
in
add
adc
xchg
xchg
jns
jecxz
inc
ins
popa
adc
pop
js
popa
xor
add
repnz
frstor
loope
sti
pusha
in
dec
pushf
xchg
or
pop
push
addr16
jbe
jo
jns
ja
adc
or
into
inc
mov
(bad)
mov
ret
in
les
(bad)
je
stc
lds
mov
das
ret
mov
test
add
mov
xlat
xor
xchg
enter
sub
test
add
xchg
adc
mov
out
das
sar
jmp
mov
sub
sub
call
xor
ins
xchg
inc
inc
aaa
mov
pop
or
or
jl
int
out
bound
idiv
test
es
retf
jno
xchg
aam
ffreep
push
les
(bad)
xor
test
dec
outs
test
and
xchg
xchg
call
mov
sti
xchg
movs
jbe
data16
pop
mov
ins
mov
fidiv
fdivrp
mov
xchg
adc
or
cld
int3
xor
rcr
enter
or
xchg
lea
fwait
popf
mov
imul
out
sbb
jmp
adc
mov
std
dec
mov
cmps
pop
push
ins
mov
nop
mov
rol
cmc
cmps
cmp
sbb
pop
out
jmp
outs
adc
xor
lea
imul
cld
mov
(bad)
pop
adc
mov
sub
adc
inc
(bad)
jp
movs
out
outs
leavew
jmp
(bad)
aas
dec
xchg
je
imul
xchg
and
icebp
mov
mov
jmp
mul
or
sub
or
popa
jg
rol
lock
xchg
mov
pop
mov
loopne
add
pusha
push
fcomp
pop
cs
jmp
fmul
pop
push
lods
adc
dec
dec
inc
sbb
repz
aas
mov
adc
and
xor
push
das
das
jbe
jmp
inc
and
lods
push
push
jmp
sbb
ss
fs
mov
scas
int
jle
out
sub
fisub
and
cmp
xchg
pop
adc
sbb
fldz
adc
mov
mov
bound
adc
add
xchg
imul
jne
pxor
lea
adc
and
aaa
mov
inc
mov
jbe
ret
sbb
lods
sub
imul
mov
scas
jp
lock
aam
(bad)
pop
sub
adc
enter
cmp
cmp
or
cmp
mov
jmp
inc
push
sbb
frstor
jnp
mov
(bad)
dec
cmp
and
and
fdiv
retf
xor
data16
sti
test
mov
das
mov
cmp
sbb
add
or
in
je
in
in
arpl
fcmovb
or
sbb
dec
mov
rcl
sahf
adc
mov
test
sub
bound
rcl
dec
dec
xchg
ins
dec
adc
sub
lods
imul
loopne
pushf
cli
fdiv
push
pop
add
retf
pop
inc
mov
and
sti
imul
jne
repz
cmp
pushf
out
mov
adc
loope
jmp
or
mov
cmp
xor
and
shl
mov
cmp
div
mov
jecxz
or
push
ss
cmp
fsubr
ja
pop
inc
mov
ret
add
push
pop
mov
and
arpl
xor
mov
pop
clc
fld
movs
mov
cmc
jl
aaa
ret
mov
jne
push
rcr
cmp
fnstcw
ret
fs
int
push
(bad)
adc
sub
or
in
xchg
lods
cmp
pop
fisttp
cmp
ins
daa
xlat
xchg
sub
push
fs
or
test
or
jg
sbb
mov
ror
xor
scas
sub
les
or
jge
out
mov
mov
aad
pop
fisttp
mov
adc
pop
push
jecxz
sub
call
leave
scas
ins
mov
jmp
mov
repnz
das
addr16
jno
push
and
sbb
cld
inc
cmc
scas
xor
inc
adc
mov
sub
and
xor
push
and
inc
movs
cmc
cmp
or
inc
daa
push
popf
(bad)
out
xor
push
in
push
sub
xchg
daa
shr
pop
mov
inc
pop
das
cmp
adc
shl
fucom
(bad)
xchg
xchg
dec
and
cmp
mov
inc
pushf
inc
jmp
daa
sub
mov
xchg
push
cli
adc
push
fisub
das
add
add
or
data16
inc
add
mov
cs
mov
imul
and
stos
pop
in
adc
xchg
lea
adc
inc
loope
les
loopne
pop
in
jl
and
ret
push
cmp
mov
xchg
mov
pop
mov
jl
sub
cmp
enter
jnp
repnz
sub
scas
or
or
pop
loope
repnz
add
(bad)
and
hlt
cmp
sub
stos
xor
rcl
jmp
movs
add
xlat
and
cmp
imul
loope
test
lock
dec
gs
(bad)
or
out
jge
lods
add
mov
out
outs
jnp
out
outs
push
fst
test
jbe
jno
in
add
int
cli
(bad)
addr16
fild
mov
stos
or
cmp
mov
loope
pop
fisubr
or
push
xor
pusha
dec
pusha
scas
mov
inc
cdq
mov
mov
in
inc
scas
sbb
mov
pushw
pushf
cwde
push
mov
test
cmp
mov
fmulp
iret
(bad)
pop
pop
imul
add
cmp
mov
sub
xchg
mov
or
mov
test
outs
mov
aam
mov
inc
out
inc
sbb
xor
mov
ins
adc
out
push
jno
lahf
sub
loopne
sub
dec
adc
mov
stos
iret
popa
add
nop
sub
sbb
je
xor
ret
into
(bad)
(bad)
call
popa
push
outs
(bad)
rcr
pop
ss
sbb
mov
aad
inc
pop
cmps
aad
daa
fimul
jl
imul
inc
loop
pop
lods
dec
out
jbe
dec
mov
ins
in
mov
inc
(bad)
pusha
stos
ins
sbb
dec
or
mov
jne
jb
rcl
loope
ret
aas
push
mov
lods
mov
pop
retf
pusha
cdq
jb
jge
mov
adc
jmp
(bad)
gs
in
and
mov
pop
test
xchg
cmp
cmp
pop
xchg
iret
cmp
or
add
lock
cmp
test
push
leave
and
sub
pop
and
mov
pop
xchg
movs
ja
sub
jg
and
arpl
std
data16
sbb
cmp
ret
inc
jbe
sahf
push
arpl
sti
mov
js
(bad)
mov
je
pop
test
lahf
lds
or
pop
fild
aad
xor
dec
sub
xchg
mov
in
je
xor
mov
das
fucomp
add
scas
int
or
popa
scas
inc
sub
pop
std
jb
push
inc
jmp
jl
sti
mov
sti
pop
cmp
sbb
hlt
push
mov
cmp
mov
in
mov
add
xor
pop
in
stos
loop
cmp
jp
lahf
aas
xchg
push
imul
xchg
adc
sub
sbb
data16
fisubr
adc
xchg
mov
push
cmp
outs
or
jb
out
fsincos
loopne
fcom
pop
cmp
pop
sahf
cmp
ret
iret
xor
mov
adc
aad
add
inc
int3
pop
aaa
int
fistp
(bad)
or
push
mov
push
and
add
inc
xor
sub
xchg
test
mov
cmp
cmp
lea
mov
pop
aam
idiv
jmp
rcr
and
mov
xlat
outs
ss
das
sub
xor
cmps
push
push
xchg
xor
or
xchg
cmp
cmp
icebp
mov
loope
push
xchg
sub
push
pop
mov
fld
jae
pop
mov
jbe
mov
jnp
es
out
je
jg
inc
adc
cmps
call
adc
or
push
sahf
mov
push
div
mov
(bad)
push
cli
jecxz
mov
jbe
adc
das
push
jne
(bad)
inc
(bad)
js
mov
fidivr
lock
movs
cmp
shl
adc
loopne
arpl
mov
adc
jb
inc
dec
sub
dec
add
sbb
movs
ja
aad
jge
sbb
sbb
dec
or
inc
sub
fmul
sub
scas
jg
jge
jmp
inc
mov
jle
mov
xchg
add
aas
pop
mov
xchg
inc
sub
pop
push
lahf
aaa
sbb
adc
arpl
mov
dec
pop
cmps
inc
push
jne
mov
cs
jl
and
out
and
repz
clc
mov
and
rcr
push
dec
rcr
and
adc
add
cdq
dec
push
repnz
out
add
mov
push
sbb
js
push
push
int
mov
mov
test
nop
shl
pop
adc
sub
test
fmulp
add
sbb
pop
inc
and
pop
repz
xor
not
lds
sub
push
pop
cmp
push
loop
sbb
repnz
out
dec
or
popf
iret
in
adc
sbb
ror
dec
les
cmp
fcmovu
into
mov
les
das
cmc
in
dec
data16
rcl
pop
dec
rcr
test
mov
jbe
sysenter
and
cmp
or
and
loopne
inc
jmp
inc
and
mov
sub
sub
ins
or
mov
(bad)
and
lock
test
imul
movs
mov
sub
ins
cmp
(bad)
shld
adc
jge
or
and
or
or
inc
lods
ror
mov
dec
fidivr
inc
push
mov
mov
inc
mov
ins
mov
sbb
rcl
int3
adc
lods
leave
xchg
movs
out
imul
loopne
outs
scas
popa
mov
inc
imul
fadd
mov
mov
mov
cmp
test
and
fmul
iret
mov
push
push
xchg
push
mov
es
cmc
dec
xor
xor
in
stos
mov
call
jne
mov
cs
cmp
or
es
popf
repnz
inc
out
mov
xor
xor
movs
and
sbb
jae
adc
ret
jnp
lods
sbb
and
outs
call
test
iret
push
sub
std
out
setl
test
inc
xchg
cmp
or
sub
add
push
add
stos
mov
mov
cmc
into
add
test
cmps
jle
call
mov
adc
mov
jo
test
popf
jbe
shl
mov
mov
js
cs
mov
and
and
mov
sbb
outs
ss
push
mov
movs
mov
in
leave
jno
sahf
ja
add
jp
cmc
nop
cmp
xchg
rcr
pop
cmp
xor
mov
aad
jns
xor
jnp
int
out
addr16
out
cdq
add
mov
fsub
(bad)
bound
and
out
pop
jge
adc
nop
fsubr
pusha
sbb
pop
pop
jle
sahf
add
sbb
imul
scas
xchg
mov
xchg
lock
outs
repnz
ins
sub
out
pop
fidivr
mov
jle
mov
xor
imul
mov
es
pslld
bound
dec
mov
retf
adc
sub
push
loopne
jno
cwde
(bad)
fwait
xor
inc
arpl
jp
adc
scas
push
js
sub
movs
cs
add
ins
daa
mov
pop
push
mov
fwait
pop
jb
fwait
aad
jle
inc
mov
retf
femms
stos
mov
movs
cld
out
cmp
xchg
lock
cmp
movs
and
sbb
pop
js
test
popf
dec
mov
mov
sub
call
fwait
inc
iret
ror
loopne
jns
xchg
push
retf
pop
xlat
push
int
gs
das
xchg
pop
(bad)
cmps
ins
std
(bad)
pop
(bad)
js
aam
inc
xchg
mov
fbstp
cwde
dec
fcmovb
ja
ror
stos
push
cmp
cmp
lock
arpl
mov
fmul
add
mov
out
adc
jmp
dec
inc
push
sbb
in
je
loop
jo
inc
sbb
fisub
lds
xchg
ja
out
mov
jne
retf
xchg
fs
nop
cli
adc
stos
xchg
mov
adc
shl
scas
push
lock
ins
das
ror
cmp
arpl
sbb
mov
pop
jne
pop
pop
out
mov
or
xor
pop
js
adc
jnp
vpperm
aaa
outs
mov
into
fs
retf
fwait
pop
xor
xchg
(bad)
fdiv
sub
adc
js
mov
outs
mov
aas
cmp
neg
test
sbb
test
and
gs
int3
lods
push
cmp
cmc
dec
movs
das
icebp
(bad)
movs
fs
mov
mov
and
or
cmp
call
lock
scas
mov
les
in
mov
outs
sub
(bad)
push
pop
cmps
adc
mov
mov
mov
add
add
ret
push
mul
in
ret
cs
dec
adc
mov
sub
loopne
add
add
mov
aas
add
iret
jns
icebp
jg
pop
cmp
xchg
scas
pop
and
push
mov
sbb
and
dec
cmp
iret
sahf
movs
retf
cmp
sub
jne
sub
stos
jbe
sahf
not
aaa
imul
gs
mov
test
(bad)
inc
dec
fwait
dec
push
mov
or
aam
aas
adc
jl
add
pop
in
test
sbb
pop
and
aaa
sub
in
xchg
adc
ds
xchg
aam
pop
test
into
mov
mov
jae
(bad)
push
mov
jmp
daa
push
dec
(bad)
mov
outs
loopne
push
add
loope
stos
jne
push
inc
or
lds
cmp
hlt
test
test
stos
mov
and
pop
inc
(bad)
jno
cmps
(bad)
push
jp
bound
xchg
icebp
mov
mov
sbb
ins
test
dec
xor
retf
or
cli
xor
ror
mov
adc
retf
fisttp
and
js
ret
int3
push
push
(bad)
jecxz
loop
shl
push
inc
mov
mov
cs
push
pop
leave
fldcw
(bad)
es
and
jmp
xor
push
jno
fnstenv
hlt
and
aam
fdivrp
or
fld
(bad)
mov
es
inc
mov
cmp
out
add
dec
sahf
inc
leave
fist
jge
cmp
stos
cld
jnp
or
jbe
fwait
xor
and
rcr
sbb
and
icebp
icebp
popa
icebp
not
sbb
imul
nop
jnp
push
(bad)
test
rol
outs
mov
pop
sub
iret
ret
mov
cmp
jae
je
push
pop
ja
data16
add
add
imul
jp
in
and
inc
pop
add
add
inc
sbb
jae
and
adc
mov
mov
out
inc
mov
mov
mov
imul
jns
outs
lods
add
sub
les
push
imul
xchg
dec
push
shl
jmp
adc
mov
mov
ins
and
repz
inc
jnp
aaa
dec
pop
leave
nop
rol
mov
icebp
loop
pop
mov
jg
mov
sbb
mov
movs
fcom
das
in
cmp
pop
pop
aaa
fistp
add
je
pop
dec
retf
psubsb
in
adc
loope
xchg
mov
mov
jb
scas
call
ins
xchg
mov
jl
je
push
aam
imul
in
adc
and
daa
rcr
retf
jmp
jne
fmul
cdq
fisubr
cmp
dec
push
aad
inc
or
push
inc
jge
mov
lock
loopne
xlat
jl
adc
cmps
jecxz
test
xchg
mov
cli
ret
mov
int3
dec
mov
mov
cmc
xor
test
cwde
dec
jl
xor
mov
outs
push
add
mov
dec
nop
add
cwde
pop
adc
ficom
lods
cmp
sub
mov
and
mov
pop
mov
fcomi
ins
pop
shl
push
sti
push
add
xchg
lahf
or
push
add
cld
shr
inc
ja
lock
aas
inc
cmp
scas
push
shl
dec
mov
rdmsr
ret
mov
push
sbb
lea
push
outs
xchg
ss
popf
push
mov
mov
fiadd
inc
sti
not
fwait
popa
lds
pushf
daa
(bad)
dec
add
lahf
sub
lea
das
out
popa
xchg
cmp
sar
daa
lea
jb
and
or
sub
xchg
iret
aad
adc
pop
inc
outs
add
adc
push
sar
jecxz
lods
inc
dec
fcomp
mov
sub
sbb
mov
add
out
mov
inc
lods
test
movs
or
fistp
jnp
loopne
xchg
jg
add
jb
sbb
in
scas
into
cdq
add
and
jns
clc
jbe
femms
inc
sar
cld
dec
out
jns
in
push
mov
repnz
mov
(bad)
xchg
movs
stc
mov
(bad)
and
daa
pop
dec
aas
sub
lea
push
sub
psllq
stos
mov
mov
cld
loopne
(bad)
je
mov
or
rcr
imul
(bad)
jmp
mov
aas
and
or
add
adc
lock
repnz
xchg
sbb
mov
fucomi
lea
pop
call
repnz
xor
mov
enter
and
nop
dec
sbb
cmp
push
xchg
stos
lahf
test
ss
push
cmc
stos
cli
add
lea
push
push
mov
test
lock
ds
and
jl
aam
mov
test
cld
dec
mov
inc
sar
out
push
adc
mov
mov
cld
push
cmp
adc
daa
mov
mov
xchg
cdq
and
das
add
dec
jle
pop
hlt
pushf
or
scas
push
jl
into
jne
xlat
mov
scas
fstp
mov
cmps
pop
test
popf
xchg
mov
cmp
sub
aam
pop
push
pop
mov
(bad)
cmp
imul
sub
add
div
inc
iret
in
dec
push
bound
or
movs
or
sti
jo
fs
(bad)
sbb
movs
mov
sub
les
add
cs
mov
aad
pop
xor
nop
(bad)
mov
sub
adc
xchg
std
lock
adc
jns
xlat
test
mov
cdq
xor
loop
inc
mov
stos
dec
test
lods
in
dec
test
loope
mul
mov
nop
pop
sti
imul
sbb
rcr
push
pop
scas
dec
out
adc
idiv
ss
adc
aam
adc
addr16
jb
ins
pop
jl
outs
scas
fidiv
inc
ja
jmp
push
iret
add
adc
push
xlat
dec
pop
mov
shr
repz
(bad)
mov
sub
out
mov
ins
sbb
movs
adc
shr
xchg
adc
push
sub
and
xchg
ret
inc
outs
addr16
sahf
sub
and
mov
jecxz
xchg
loope
(bad)
cmp
push
dec
fdivr
std
push
xor
lea
push
nop
jne
ret
xchg
(bad)
mov
stos
add
lahf
loopne
push
dec
cmp
push
jb
shl
lock
pop
add
sar
icebp
jmp
mov
call
aaa
dec
cmp
movs
adc
daa
push
sbb
and
test
sub
push
popw
es
leave
dec
sub
mov
test
ret
xor
sub
inc
mov
mov
add
xor
mov
data16
mov
test
rcl
jae
mov
pop
lea
out
mov
test
jp
loop
cmc
jge
stos
inc
js
add
xchg
xchg
into
sbb
dec
cmp
jo
adc
ret
fs
pop
ret
mov
dec
push
dec
adc
jmp
test
outs
jle
(bad)
jno
mov
add
mov
pop
xchg
movs
or
mov
xchg
mov
and
mov
sub
int3
leave
sub
xor
int
ja
mov
(bad)
pop
lahf
(bad)
jnp
ret
xor
pop
and
pop
jae
sbb
push
jns
fwait
inc
jae
repz
xor
enter
or
sub
cs
xor
shl
pusha
ins
gs
mov
xchg
adc
cmp
call
inc
iret
lods
loope
fst
and
jmp
add
call
out
cmp
and
pop
rcr
ficomp
cmps
sub
shr
aad
cmps
mov
mov
xchg
inc
mov
out
ret
aas
lods
mov
shr
aaa
mov
add
mov
out
adc
pop
inc
push
pop
loop
xchg
sub
(bad)
retf
mov
or
daa
jae
mov
out
lods
sub
and
jle
pushf
mov
fdiv
xchg
dec
movs
add
lock
dec
mov
mov
or
sbb
sbb
aam
adc
mov
mov
int3
std
shl
mov
fild
jmp
out
in
adc
sub
fwait
sub
add
adc
jmp
pop
cmp
push
jae
adc
in
pushf
(bad)
mov
je
cli
jmp
cmp
dec
xchg
test
repnz
xchg
jge
(bad)
shr
outs
cmps
push
dec
mov
add
in
mov
(bad)
mov
sbb
out
or
jmp
adc
imul
pushf
enter
jb
ja
adc
cmp
dec
inc
in
xor
ror
sbb
and
add
mov
mov
arpl
xchg
mov
push
sub
mov
cmp
sar
xor
sbb
aas
ins
xor
aas
lods
pusha
jbe
mov
jecxz
test
fnsave
mov
in
test
mov
xor
in
sub
xchg
and
jb
dec
dec
sbb
lods
shl
ins
mov
outs
js
lods
adc
and
repz
jle
popa
cmps
aad
in
hlt
push
jecxz
out
pop
ret
mov
psrlw
mov
call
dec
adc
les
sub
(bad)
lods
dec
xchg
mov
shl
xor
fcmovbe
cmp
cmp
push
adc
jo
mov
and
mov
(bad)
not
ds
gs
and
push
in
xchg
fwait
rol
mov
and
fisttp
aam
adc
sub
dec
sbb
cld
or
clc
pop
ret
in
aaa
jo
cdq
inc
and
push
pop
gs
test
and
fidivr
dec
push
popf
outs
sbb
clc
cdq
and
add
jb
ret
cs
jmp
jmp
sbb
lahf
mov
jg
jp
cld
jmp
push
mov
adc
lods
fwait
jmp
jno
or
sub
repnz
adc
rol
sbb
inc
icebp
push
mov
repz
cmp
xchg
(bad)
jnp
inc
adc
pushf
push
push
push
outs
inc
vandnps
dec
xchg
in
mov
les
xchg
test
adc
adc
fld
arpl
xchg
xor
pop
dec
int3
jmp
and
jle
dec
or
loop
or
imul
aas
cwde
pushf
pop
xor
adc
pusha
push
jmp
lea
psubq
cmp
(bad)
jbe
xor
sbb
stos
dec
repz
mov
adc
jmp
cmp
ja
mov
push
inc
rcl
clc
in
aas
pushf
adc
fisubr
repz
aas
ins
push
loope
les
hlt
jb
retf
retf
sub
mov
push
pop
mov
hlt
push
out
inc
cmp
gs
std
fnstenv
gs
loopne
imul
or
and
cwde
imul
aad
push
jb
fwait
sbb
stc
daa
cld
(bad)
out
inc
dec
iret
mov
mov
js
xchg
addr16
rcl
add
in
push
mov
sahf
sub
sub
inc
cmp
push
xor
mov
inc
fnstenv
pop
in
ret
mov
data16
fs
pop
cli
push
ins
adc
gs
(bad)
imul
pusha
adc
fidivr
push
inc
nop
sub
or
xchg
in
std
out
cmp
fstp
int
ffreep
push
dec
sbb
adc
pop
dec
jmp
jne
test
push
cdq
cmps
sub
in
mov
repz
icebp
jb
mov
movs
jge
adc
xor
std
xchg
in
mov
stos
cmp
add
jno
stos
movs
jae
and
aad
test
sahf
add
xor
push
rol
dec
push
dec
shr
arpl
out
sbb
(bad)
int
mov
mov
and
lods
cdq
lods
mov
xor
fidiv
mov
ret
bound
fisttp
mov
movs
ja
fcom
int3
int
and
maskmovq
div
xchg
icebp
pshufw
or
imul
jl
push
xor
xchg
mov
xchg
sbb
popa
outs
pushf
rcl
stc
mov
test
sub
cmp
push
mov
inc
mov
jmp
mov
mov
lock
sbb
xchg
ror
or
ins
xor
mov
xor
lahf
push
mov
inc
repz
ret
in
xor
and
push
scas
imul
rol
and
adc
arpl
cmp
iret
(bad)
fwait
sub
dec
mov
jns
adc
jle
mov
fcomp
or
and
iret
fnsave
add
dec
dec
scas
js
pop
(bad)
sub
stos
xchg
lods
mov
mov
(bad)
popf
inc
pop
inc
test
jl
xchg
xchg
rol
adc
mov
data16
xor
outs
or
inc
push
xor
jno
xchg
iret
jle
mov
inc
xor
dec
sub
mov
xlat
sbb
inc
ror
or
aas
mov
out
inc
inc
call
dec
(bad)
jae
add
fwait
fs
xchg
bound
xchg
jg
xor
mov
popa
inc
lods
adc
add
lods
stc
outs
xchg
xchg
setbe
popf
sub
push
mov
jns
xchg
loop
xor
add
rol
pop
ds
push
adc
not
pop
push
int3
fidiv
cdq
jecxz
sub
mov
mov
pop
add
pop
sub
push
adc
cmc
xchg
jecxz
cmc
cmps
sub
xor
mov
fild
dec
push
loop
sub
iret
xor
mov
arpl
iret
lock
inc
mov
(bad)
nop
jae
cmp
xchg
fnsave
jae
mov
xor
outs
jne
jge
sar
clc
inc
inc
syscall
pop
les
in
inc
adc
in
cmp
imul
cmp
test
call
mov
jmp
movs
and
mov
xchg
das
push
fisttp
cmp
pop
and
and
mov
jmp
sbb
push
repnz
add
std
xor
adc
add
into
dec
call
sub
addr16
call
pop
sub
add
mov
mov
fmul
jo
cs
and
lods
rcl
fist
mov
dec
mov
sbb
loop
inc
hlt
push
ja
push
pop
push
dec
sbb
lods
(bad)
not
mov
cmp
mov
mov
lahf
jecxz
out
xor
xchg
lods
or
add
jle
jnp
retf
retf
pop
sub
lock
loop
shl
xor
or
xchg
jo
jmp
sub
fld
mov
push
xchg
hlt
imul
fucomi
lahf
scas
adc
pop
and
pop
push
out
shl
adc
dec
arpl
hlt
mov
push
jns
xchg
and
dec
add
xchg
push
mov
cmp
mov
rcr
xchg
iret
loopne
pusha
xchg
push
in
push
mov
inc
xchg
das
xor
(bad)
test
popa
stos
icebp
push
cmovle
retf
pop
iret
rcr
enter
xchg
retf
mov
les
dec
xor
dec
std
inc
push
add
mov
ret
ins
add
(bad)
loopne
test
mov
adc
cmp
shl
sbb
pop
cdq
sbb
and
jns
and
jb
out
pop
mov
aaa
mov
mov
push
sub
add
sbb
ds
stos
cmp
and
sti
mov
movs
inc
aas
push
push
dec
cmp
xchg
sbb
sub
pop
dec
les
fadd
adc
sbb
sar
sub
imul
data16
adc
fild
push
retf
xlat
enter
cmc
mov
pop
inc
sub
xor
mov
(bad)
push
mov
mov
add
pop
(bad)
sbb
movs
dec
les
shr
pop
cdq
push
and
scas
adc
cmp
push
push
push
mov
ret
out
sub
call
aas
mov
inc
inc
add
cmp
pusha
and
inc
xchg
retf
pop
xchg
popf
or
sar
push
add
sbb
push
gs
push
adc
or
xchg
imul
sub
jae
adc
rol
jns
call
push
cmp
ror
or
cmp
add
sub
mov
adc
dec
cmp
and
push
fst
inc
scas
cmc
cld
jmp
pop
mov
jae
cmp
jg
lea
addr16
jno
sub
mov
pop
pop
lock
(bad)
mov
add
dec
retf
dec
dec
xor
mov
xchg
sar
jnp
mov
out
cmp
and
add
pop
nop
xor
cwde
(bad)
ss
mov
mov
mov
mov
clc
mov
ins
sub
mov
push
rcr
in
lods
(bad)
test
mov
push
test
jecxz
outs
(bad)
cld
sahf
pop
cmp
pop
jns
sub
or
rcr
sub
lahf
adc
jmp
(bad)
xchg
pop
pop
xlat
cmp
and
sti
in
jmp
cdq
xchg
xchg
jmp
mov
rcr
mov
push
sub
push
loopne
movs
cld
cs
inc
pop
adc
push
stos
xlat
xchg
fwait
mov
cmp
inc
out
sub
ret
adc
scas
retf
es
pop
das
mov
inc
daa
test
sbb
xor
add
jnp
push
dec
scas
xchg
and
mov
add
movs
fadd
push
inc
cs
adc
loop
push
jns
fstp
xchg
mov
imul
iret
mov
stos
adc
ss
inc
add
movs
int3
lock
jle
(bad)
xor
sbb
mov
inc
aaa
or
mov
lds
gs
push
les
clc
or
inc
inc
lock
neg
sbb
mov
pop
mov
(bad)
fmul
and
sbb
push
dec
fistp
vmwrite
jmp
pop
and
sbb
cs
pop
or
fcom
add
cdq
addr16
movs
lahf
pop
xchg
in
retw
xor
scas
sub
add
imul
and
xor
mov
and
adc
pop
loopne
jmp
call
scas
int3
mov
and
jne
(bad)
out
jno
and
jne
pushf
mov
repnz
cmp
mov
sbb
sbb
sub
xchg
adc
xchg
shl
jmp
adc
call
jb
dec
adc
stos
and
test
test
dec
push
aam
push
jb
cmp
dec
mov
xchg
pop
cmp
sahf
mov
nop
repz
mov
lds
xlat
adc
in
in
retf
adc
das
and
ret
pop
ret
in
pop
push
pop
sti
xchg
push
pop
pop
jmp
add
test
icebp
add
out
xchg
cmp
lahf
fidivr
icebp
push
mov
mov
ror
mov
lods
jnp
mov
inc
ret
lods
pushf
fisubr
cmp
fisttp
inc
nop
mov
jp
jg
neg
pop
add
rcl
out
data16
mov
test
xor
imul
icebp
add
and
xchg
cmp
push
inc
int3
pop
aam
jge
or
xchg
loopne
xor
pop
mov
push
inc
cwde
jecxz
add
jmp
mov
fs
push
(bad)
ins
inc
lods
dec
mov
mov
call
pop
(bad)
pop
(bad)
(bad)
faddp
add
pop
inc
or
add
ds
stc
adc
ins
sub
cwde
sbb
sbb
xchg
ins
(bad)
outs
cdq
mov
push
lods
ret
icebp
retf
pop
or
mov
into
mov
ror
fidiv
jae
iret
pop
dec
stc
sti
fsub
shl
adc
adc
jle
or
cmp
movs
in
dec
or
mov
sbb
adc
call
push
shl
dec
mov
jge
mov
cmp
popf
sub
xor
adc
stos
or
fnsave
enter
call
sbb
dec
mov
mov
sub
xor
xchg
sub
jae
sahf
fild
into
movs
jecxz
vpmaddwd
leave
mov
(bad)
out
xchg
in
lea
xchg
pop
and
leave
sbb
jmp
jmp
mov
sti
ret
mov
push
in
fcmovnbe
in
xchg
pop
rcr
dec
jmp
shl
pop
ja
outs
cmp
es
test
shl
mov
jg
mov
scas
imul
movs
sub
rcr
inc
repnz
push
cmp
sub
lods
sub
or
repnz
pusha
cmp
dec
retf
push
mov
fldenv
sbb
mov
dec
fdiv
push
inc
inc
xchg
rcl
push
jnp
cld
sbb
mov
xor
add
jmp
pop
inc
sub
jmp
stos
les
std
(bad)
push
sahf
push
lock
and
inc
sti
adc
mov
lahf
or
and
dec
pop
pop
addr16
inc
(bad)
cmp
test
outs
add
add
mov
push
cmp
cmp
add
or
pushf
jb
ss
(bad)
jbe
data16
call
test
cli
xchg
aam
or
xor
mov
mov
int3
pop
aam
ins
push
xchg
std
sub
sbb
or
push
mov
fwait
jns
jbe
lock
in
pop
fst
into
out
sbb
in
push
jb
mov
dec
fcomp
pop
or
cdq
jg
add
adc
rcl
test
inc
scas
popa
or
cmp
or
mov
inc
xor
(bad)
mov
mov
(bad)
or
mov
repnz
mov
retf
gs
push
int3
dec
loop
loop
sub
mov
pop
sub
ret
jl
mov
dec
sub
xor
mov
inc
xchg
adc
(bad)
fist
xchg
test
add
push
xchg
and
xchg
mov
cmps
jo
dec
cmp
mov
loope
(bad)
dec
mov
sti
loope
cs
sbb
mov
in
bound
mov
and
adc
mov
repnz
inc
(bad)
aam
push
mov
movs
(bad)
das
add
clc
pop
xor
aad
cmp
push
hlt
fmul
add
rcr
mov
xor
dec
sbb
jno
stos
xchg
lock
int
cmc
push
mov
nop
imul
xchg
xor
shr
aas
jnp
pop
popf
aam
idiv
xor
(bad)
mov
rol
sub
jg
retf
(bad)
out
sbb
mov
sub
xchg
fisttp
inc
popf
mov
sti
int
and
es
fadd
pop
retf
cmp
int
mov
fimul
add
push
aaa
popa
js
jmp
jmp
cs
xor
jo
jns
cld
mov
mov
repz
fsubr
aam
fld
xchg
push
adc
das
xor
inc
sbb
std
mov
xchg
mov
aam
jge
add
enter
popa
stc
mov
or
xchg
add
test
into
and
jmp
retf
push
ret
sub
lods
push
enter
push
fsubrp
cmps
jle
mov
adc
jns
imul
push
int
movs
or
fild
push
jbe
mov
ret
xor
imul
outs
jmp
test
in
adc
fadd
pop
int3
test
push
xchg
mov
sub
lods
adc
xor
jbe
jmp
cmp
hlt
fild
addr16
sub
cmp
ss
dec
sub
jbe
out
pop
out
jae
push
xchg
sub
adc
xchg
sub
xchg
int3
pop
and
cmp
mov
mov
jecxz
or
or
adc
ret
add
ret
sahf
sbb
push
int
jnp
sar
sbb
movs
mov
cmp
add
pop
jmp
cmp
(bad)
(bad)
bound
es
mov
or
movs
dec
adc
inc
mov
xchg
xchg
movs
ins
pop
sahf
lock
push
mov
mov
(bad)
lods
scas
or
jo
sub
sub
loopne
sub
mov
xchg
lods
int3
(bad)
adc
adc
push
mov
pop
aas
out
sbb
bound
scas
das
dec
iret
fs
sbb
inc
vpaddq
test
fsub
int
loopne
ins
sbb
movs
mov
jo
loope
mov
shl
cmp
xor
fs
xchg
(bad)
ds
cmps
xlat
mov
mov
pop
out
or
cmp
mov
xchg
pop
movs
mov
lock
mov
mov
sbb
or
push
jmp
loope
imul
inc
inc
stos
jmp
mov
mov
rol
or
addr16
int
mov
jl
in
mov
cmp
(bad)
pop
fs
shl
inc
adc
pop
idiv
mul
push
fmul
adc
xor
loopne
gs
mov
and
push
js
test
loop
pop
xchg
and
inc
(bad)
mov
dec
or
ret
pop
call
push
out
mov
xchg
pusha
imul
daa
push
push
cwde
add
pop
jp
or
push
sub
jo
aas
(bad)
pop
inc
xchg
mov
mov
mov
adc
out
xor
mov
dec
cmp
pop
cdq
add
mov
out
cld
add
dec
lahf
dec
mov
iret
xchg
dec
int3
aam
sub
xchg
mov
sbb
sub
(bad)
mov
lock
push
push
call
or
mov
add
pushf
sbb
jl
xchg
mov
mul
xchg
int3
out
xchg
cld
pop
push
lods
jo
out
ins
test
pusha
xor
pop
inc
std
std
xchg
xchg
and
push
fisub
and
pop
stos
mov
rcl
retf
mov
ins
popa
pushf
xchg
test
xchg
cdq
stos
sar
aas
daa
nop
gs
(bad)
lock
cmps
pop
dec
pop
sub
mov
repz
push
call
cmps
xchg
movs
movs
adc
cs
jo
shl
cli
pop
xchg
test
pop
sbb
xchg
test
loopne
dec
iretw
xchg
dec
int
add
adc
ins
xchg
push
in
cld
imul
sub
jl
cdq
mov
jge
cmp
adc
add
popf
sbb
das
push
sbb
lods
(bad)
cs
dec
or
sbb
mov
test
sub
sub
pop
stos
imul
cmps
push
cs
div
rol
push
shl
outs
dec
mov
sub
mov
ds
mov
jmp
in
push
pop
and
jo
sti
push
scas
push
ins
jbe
sti
push
mov
cmc
mov
pop
daa
aas
cld
pop
int
push
mov
imul
add
pusha
or
cmp
(bad)
xor
scas
push
mov
or
inc
cwde
push
lahf
les
push
dec
out
aam
push
frstor
test
std
lock
jmp
stos
inc
cmps
int3
mov
cli
sub
retf
cmp
and
jnp
ror
inc
call
push
(bad)
add
add
in
faddp
js
adc
dec
jge
sub
add
or
sub
cmps
cmp
and
pop
mov
outs
jecxz
sar
push
gs
cmp
arpl
jg
mov
test
popf
out
je
adc
(bad)
dec
shr
xlat
scas
retf
dec
enter
retf
rep
test
test
repz
mov
push
xchg
outs
scas
jl
in
jae
mov
ds
pop
pop
xor
mov
inc
jbe
clc
popa
mov
rcr
sbb
ins
mov
push
aam
imul
adc
lahf
inc
mov
into
ins
xchg
xchg
pop
push
ins
mov
cmp
mov
aaa
xchg
jnp
mov
jb
cmp
pop
push
stos
add
sub
pushf
mov
adc
sub
imul
and
adc
clc
xor
ss
sbb
into
sbb
(bad)
loopne
push
in
addr16
dec
xchg
call
push
(bad)
(bad)
sti
inc
repnz
(bad)
sub
sub
mov
mov
bswap
cwde
arpl
je
adc
inc
dec
lods
fs
outs
cs
sub
mov
or
cmp
xchg
bound
mov
xchg
leave
mul
daa
imul
into
call
mov
cmp
aam
cwde
call
add
aaa
push
xor
dec
sbb
mov
je
or
jle
rep
xchg
jmp
popa
jo
dec
je
adc
mov
(bad)
jnp
popa
or
imul
rol
bound
mov
jnp
ja
int
lods
xchg
xor
aas
push
lods
outs
cmp
xlat
pop
ins
or
jp
cdq
jle
pop
outs
loop
or
cmp
pop
xlat
mov
(bad)
xchg
aam
loope
mov
ss
and
ins
scas
ja
mov
shl
adc
push
pop
ins
sbb
sub
push
lods
ja
aas
test
sub
push
or
ror
aam
sahf
xchg
sbb
ret
mov
sub
dec
movs
enter
cmp
rol
or
pop
in
cmp
repz
(bad)
loop
lea
call
inc
mov
adc
js
fisttp
push
es
cmps
xchg
dec
in
adc
adc
retf
(bad)
fwait
cwde
xchg
jne
add
movs
and
xor
dec
mov
call
pop
sbb
push
fwait
pop
xchg
and
pop
ror
jne
das
dec
out
stos
repz
push
std
dec
adc
or
jb
dec
jnp
xchg
mov
or
and
movs
sub
inc
arpl
xchg
pop
pop
jns
or
xlat
lahf
ffreep
inc
adc
push
jbe
retf
mov
push
fwait
(bad)
xchg
fisubr
fimul
jo
jmp
mov
or
mov
sbb
xchg
out
movs
fwait
adc
fcomp
or
sbb
(bad)
test
fdivr
mov
cdq
or
adc
imul
pushf
jmp
mov
mov
ja
xchg
cli
xor
rcr
and
mov
dec
scas
xchg
jmp
pop
or
addr16
and
add
mov
sahf
push
or
dec
inc
pop
push
pop
popa
and
jnp
inc
es
mov
add
xor
mov
loope
lock
popf
push
in
push
pop
ins
out
mov
rcl
sub
dec
xchg
sbb
push
sub
xor
fwait
mul
and
dec
mov
sbb
dec
pusha
shl
mov
dec
imul
aam
fnstcw
scas
mov
and
cmp
movs
ret
sbb
es
push
sub
hlt
mov
sbb
outs
mov
pop
xor
inc
or
pop
stos
mov
rol
test
adc
and
jnp
ins
test
jo
push
xchg
inc
push
sbb
sar
add
pop
inc
mov
pop
fcom
mov
mov
jg
aaa
cmp
jecxz
enter
mov
aaa
xchg
aaa
xor
adc
repnz
pop
push
pop
stos
xor
push
dec
leave
and
pop
(bad)
les
inc
mov
dec
xchg
ret
adc
jge
mov
sbb
sar
inc
push
(bad)
or
mov
mov
jnp
mov
mov
jne
pop
and
sbb
ror
jmp
stc
sub
sahf
mov
push
dec
mov
fist
cdq
scas
in
stos
sbb
pusha
push
jcxz
mov
dec
xchg
lock
fcmovnu
stc
fs
xchg
fild
cmps
inc
sbb
push
or
adc
or
jge
or
sub
inc
pop
add
fild
mov
retf
jmp
push
into
leave
mov
adc
xor
add
dec
rol
push
mov
retf
mov
outs
adc
ins
dec
sti
stc
mov
push
and
loope
test
sar
jb
ret
ins
cs
aas
xchg
out
in
mov
cmp
in
icebp
in
or
cmp
jae
scas
mov
mov
jle
(bad)
call
xchg
or
or
add
rcl
jmp
fwait
mov
loope
movs
js
imul
cmps
push
mov
dec
cmp
(bad)
xor
pop
cs
sbb
mov
push
mov
push
scas
dec
(bad)
imul
mov
sbb
ret
pop
push
xchg
nop
lods
int3
jne
fsub
test
jns
lea
add
std
ins
sub
div
pusha
and
or
sub
mov
xchg
movs
cmc
ret
sbb
fdivp
jno
call
pop
pop
adc
call
xchg
and
stc
sbb
fistp
inc
jp
mov
xchg
jo
mov
push
adc
pop
push
inc
mov
ins
fmul
loope
jae
cmps
cmp
dec
shl
xlat
mov
dec
shl
dec
inc
rcr
cli
inc
dec
(bad)
test
sub
ror
scas
jb
in
xchg
repnz
mov
inc
ds
jl
retf
(bad)
sub
xchg
in
jg
xchg
dec
outs
out
ret
mov
mov
dec
adc
xchg
dec
enter
js
xchg
jl
add
call
movs
sbb
ror
rcl
and
cmps
mov
aas
loopne
dec
(bad)
sbb
and
mov
jg
add
in
jg
inc
mov
iret
push
lods
ret
dec
repnz
lock
repz
or
into
jge
rol
addr16
scas
mov
push
sub
xchg
xchg
ret
lahf
fucomi
push
jae
push
xchg
imul
mov
jmp
sbb
mov
scas
fstp
shr
shr
call
xor
pushf
push
xor
mov
mov
imul
pop
dec
or
mov
out
jmp
loopne
xchg
and
test
cdq
or
je
mov
into
enter
hlt
mov
scas
test
mov
ins
pop
in
dec
rcl
or
cmp
xlat
or
sub
test
fs
movs
mov
daa
test
bound
repz
and
rol
ds
mov
(bad)
cli
xchg
add
pop
sub
daa
lds
loop
call
xchg
bound
into
cmc
jge
mov
inc
inc
cmp
ret
movs
mov
imul
out
dec
out
sahf
aaa
push
jae
out
sub
test
int3
xchg
xor
xor
aam
inc
xor
mov
scas
inc
push
lds
jmp
xlat
cwde
inc
mov
dec
call
jg
stos
push
cdq
add
mov
jmp
cmp
inc
or
ins
into
adc
sub
ficom
mov
sbb
jmp
xor
xlat
mov
cmp
mov
inc
arpl
ss
call
scas
dec
pop
into
sbb
fidiv
inc
and
sahf
mov
daa
jb
outs
imul
sub
call
push
pusha
jg
fdivr
sar
xor
daa
pop
ins
sahf
scas
sbb
int
push
repnz
pop
or
gs
xor
ins
hlt
daa
enter
mov
jb
and
dec
aas
outs
push
mov
pop
adc
pop
enter
pop
sub
int
(bad)
sti
cmp
dec
cmp
push
sti
call
mov
dec
push
dec
js
(bad)
cwde
cs
stos
sbb
fistp
fldcw
or
lahf
jne
cld
push
sub
mov
fs
inc
enter
xor
mov
inc
adc
push
sbb
xor
dec
imul
aad
loopne
mov
and
xchg
lahf
sbb
and
nop
mov
inc
sti
ret
jno
lods
(bad)
adc
ds
test
lods
in
sbb
mov
repnz
inc
mov
test
sbb
sbb
jne
in
sub
int3
into
ror
sbb
sub
popa
mov
push
dec
add
jb
mov
mov
mov
add
adc
(bad)
mov
cmps
push
lds
stc
or
jl
loopne
(bad)
out
ror
jno
dec
push
pushf
push
add
mov
mov
mov
sub
xlat
jg
mov
inc
xlat
movs
test
sub
or
adc
and
cmp
mov
aam
pop
fiadd
mov
add
jb
and
pop
cmp
adc
mov
out
push
jecxz
inc
fwait
sahf
rcr
or
in
pop
push
rcr
adc
stc
jmp
fs
or
cmps
jae
jl
pop
push
and
(bad)
cld
sbb
mul
inc
jo
xlat
in
adc
inc
cmp
jnp
adc
mov
sahf
outs
mov
mov
mov
dec
dec
(bad)
loope
mov
sub
int3
test
pmovmskb
cmp
enter
mov
mov
mov
int3
mov
sahf
mov
imul
fs
push
mov
call
daa
dec
xor
(bad)
fcomp
imul
push
stos
xor
(bad)
push
stc
aas
pop
mov
xor
les
sahf
fst
pushw
jp
ret
pop
call
push
sub
jge
sahf
xor
mov
pop
adc
test
stos
fistp
fimul
push
das
ficom
pop
xor
fadd
int
jg
and
cmp
adc
mov
ins
retf
and
popf
add
cmp
(bad)
pop
sub
inc
cmc
add
sti
in
sub
add
popa
mov
(bad)
pop
arpl
xchg
aas
xchg
mov
cmp
mov
push
dec
mov
dec
xor
jo
aad
add
stc
and
xchg
pop
jge
test
sbb
xchg
div
sti
push
xor
(bad)
ret
sub
add
sub
cwde
push
dec
out
jmp
das
xchg
mov
inc
mov
pop
mov
aam
imul
inc
(bad)
or
add
xchg
repz
mov
push
push
ror
retf
push
adc
fwait
cwde
movs
stos
jne
mov
pusha
xchg
imul
dec
das
repz
push
jp
inc
imul
imul
xchg
jne
mov
cmps
in
clc
xor
dec
fwait
comiss
add
scas
push
or
sahf
test
inc
push
jae
gs
iret
mov
scas
or
sub
inc
stos
mov
out
xchg
mov
sub
xchg
or
cmp
fdivr
cmc
push
mov
outs
lods
aam
sub
(bad)
ins
mov
add
mul
jmp
imul
mov
jge
jmp
xchg
ds
jo
inc
out
aad
sub
fstp
fdiv
xor
inc
xor
std
xor
jnp
pop
mov
cmp
lods
jnp
outs
add
dec
mov
out
adc
cmp
pop
sub
arpl
sub
mov
dec
ja
loop
xor
mov
pop
fucomip
lahf
mov
jle
clc
sbb
fimul
iret
ret
fcomp
in
push
inc
inc
cmps
add
sbb
sub
lea
cmp
jmp
pop
iret
pop
es
mov
data16
cmp
fsub
or
ret
mov
mov
cs
(bad)
out
jno
sub
retf
xor
sbb
sub
cmp
dec
pop
cmps
ds
and
xchg
test
xchg
in
cmp
adc
mov
hlt
test
addr16
call
or
xchg
(bad)
pop
ret
push
and
mov
sbb
adc
aaa
mov
in
cmps
rcr
(bad)
out
xchg
xor
jecxz
popf
pop
push
xchg
lds
mov
sub
inc
mov
stos
add
arpl
xchg
aaa
jg
jne
lock
add
mov
repnz
(bad)
or
xor
pushf
popw
ds
(bad)
fs
popa
out
sbb
icebp
jle
cmp
sbb
(bad)
fadd
push
les
jl
cs
pop
add
sbb
push
inc
pop
test
or
cmp
into
sbb
aad
pop
xlat
add
imul
add
shl
out
push
scas
sub
pop
test
sti
and
daa
xchg
push
dec
retf
xor
iret
nop
or
and
jo
(bad)
mov
xor
or
or
pop
push
and
xchg
hlt
jmp
repz
mov
push
xor
jp
jle
call
fidivr
lods
pmaddwd
or
aam
sahf
dec
clc
pop
ror
outs
outs
gs
mov
je
xchg
stos
es
test
sbb
(bad)
pop
(bad)
pop
pop
stos
ret
out
inc
xchg
int3
std
clts
dec
mov
call
pop
mov
fsub
dec
add
loop
into
sbb
rol
or
mov
mov
pop
mov
mov
cli
icebp
mov
(bad)
mov
fst
je
jg
out
xchg
in
mov
mov
lahf
outs
jbe
sub
nop
jo
sub
retf
mov
xchg
cdq
cmp
mov
repz
adc
jno
cld
cmp
add
pop
sub
jge
inc
or
lahf
or
jae
(bad)
pop
xor
mov
adc
jb
out
mov
mov
fisttp
xor
mov
int
loope
and
test
mov
(bad)
jmp
push
ret
mov
add
addr16
inc
push
adc
imul
jmp
or
data16
xchg
lock
cmp
leave
sub
xchg
enter
inc
test
mov
jmp
xor
or
dec
cmps
nop
jne
cmp
test
pushf
iret
jno
test
adc
out
imul
fdiv
int3
or
cs
inc
std
rcl
gs
xor
sbb
test
adc
ja
mov
mov
dec
jns
inc
in
pop
ficom
xchg
in
pop
lods
ja
or
popa
mov
add
inc
sbb
pop
mov
fsubr
sub
mov
xchg
fwait
enter
(bad)
pusha
popf
push
lock
xor
shl
push
popf
dec
dec
les
pop
dec
std
movs
cmp
mov
ja
push
inc
loopne
sub
leave
cmp
adc
and
outs
pop
xchg
xchg
push
push
pop
push
stos
aaa
call
ret
inc
imul
fwait
mov
in
mov
es
fbld
icebp
cdq
jg
push
shrd
push
mov
jo
pusha
sub
xchg
mov
jno
mov
push
or
dec
pop
push
push
sti
popf
xor
cli
fld
movs
leavew
clc
imul
cli
aad
(bad)
mov
es
mov
lods
adc
mov
inc
mov
dec
add
jbe
mov
test
(bad)
push
out
cmp
cmps
iret
push
dec
aam
(bad)
sbb
or
lahf
mov
or
retf
or
mov
(bad)
mov
and
or
gs
push
cmps
mov
fld
or
enter
in
adc
pop
out
push
cmp
aaa
adc
fstp
dec
push
sub
push
pop
inc
gs
jne
(bad)
adc
sub
sub
lock
addr16
cdq
cmps
aad
out
or
test
ja
push
sub
out
imul
ret
aad
test
add
fwait
mov
imul
xchg
inc
repz
mov
cmp
leave
jnp
dec
cmp
sbb
lds
xchg
jne
pop
sbb
test
and
(bad)
or
loop
(bad)
outs
cmp
adc
dec
aam
aad
or
and
xchg
pop
lahf
iret
cmps
cmps
mov
es
cmc
mov
fisttp
sbb
fist
inc
mov
ds
imul
stos
push
addr16
nop
xchg
jno
cmp
mov
int
pop
add
sbb
or
retf
jns
mov
(bad)
shr
lahf
movs
les
call
cpuid
mov
stc
ds
loope
sbb
mov
inc
add
and
test
movd
test
or
push
jmp
jne
add
addr16
and
imul
pop
aas
js
out
xor
dec
pop
pushf
xchg
leave
push
ins
inc
xor
ret
js
xor
das
cmps
mov
inc
xchg
getsec
sar
push
test
out
out
jge
and
rol
es
add
ja
or
add
cmps
pop
(bad)
mov
aas
push
loope
cmp
adc
retf
fcom
xor
mov
xor
in
dec
imul
add
xor
fldl2e
sbb
inc
adc
or
cwde
mov
or
push
outs
push
loop
xor
les
hlt
imul
popf
dec
xor
jmp
and
mov
pop
mov
dec
mov
xor
cdq
stos
pop
(bad)
sbb
loopne
(bad)
cmp
call
into
in
(bad)
imul
loope
cmc
jp
das
(bad)
jmp
nop
inc
or
ret
in
and
mov
adc
fnstcw
pop
push
inc
sbb
loop
shl
or
xor
stos
pop
dec
xlat
test
test
sub
into
xchg
cmps
cmp
pop
pop
les
xchg
pop
pop
call
enter
popf
out
aas
pop
jb
mov
loopne
cwde
jl
jmp
sub
call
pop
cmp
sbb
fwait
loope
mov
leave
add
mov
xchg
cmp
out
dec
or
fidiv
std
scas
sbb
xor
cmps
fiadd
mov
inc
mov
xor
test
pop
cmp
mov
inc
lahf
or
scas
shr
pop
data16
mov
mov
dec
fbld
leave
leave
inc
lods
out
xchg
dec
movs
mov
sub
inc
dec
adc
dec
xchg
ret
inc
inc
or
mov
fimul
adc
retf
mov
dec
pop
pusha
hlt
sbb
xchg
loope
fwait
add
daa
mov
xor
add
pop
nop
nop
dec
repnz
mov
xor
dec
fs
sub
popf
fwait
lock
mov
cs
cmps
jecxz
jns
xchg
std
imul
cld
cmp
pushf
xchg
scas
jecxz
sti
cmp
retf
and
push
aas
ins
cmps
(bad)
push
mov
xchg
dec
mov
cwde
cmps
xchg
pop
mov
mov
adc
adc
jno
xchg
push
popf
enter
jb
ss
dec
xchg
push
xchg
imul
xchg
or
clc
out
and
popa
out
jne
popa
test
dec
sahf
les
cmps
sub
sub
and
out
xlat
out
or
sub
dec
loop
out
test
pop
inc
daa
add
loopne
out
aaa
pop
or
outs
jp
cmp
scas
scas
push
mov
fsubr
xor
sbb
push
int3
mov
aas
adc
xor
dec
rcr
or
or
fimul
outs
xor
lea
(bad)
or
mov
add
cmc
and
lahf
shl
pop
add
xchg
cmp
add
aad
mov
mov
out
cmp
mov
push
adc
adc
into
stos
sub
mov
movs
or
ss
std
aam
or
and
push
mov
or
jo
push
stos
jne
mov
jmp
jbe
push
inc
scas
cmc
in
repnz
addr16
in
fcom
shld
repnz
nop
sbb
int
add
lea
push
adc
or
es
in
xor
xor
cli
mov
pop
lods
xor
shr
dec
aaa
mov
outs
sbb
add
aas
hlt
inc
sar
add
js
fucomip
push
jmp
lock
dec
xor
cmc
jmp
xchg
lock
test
mov
cmp
arpl
bound
cdq
ror
ror
cmp
adc
icebp
je
or
ss
dec
mov
or
or
mov
ja
lahf
inc
or
xchg
sub
jl
inc
arpl
jge
pop
popa
js
xlat
mov
leave
xchg
retf
lods
aas
mov
pop
mov
aam
adc
pushf
es
test
add
test
cwde
fmul
cmp
sbb
out
in
push
fcomp
xor
sbb
mov
pop
cs
xor
pop
imul
sub
js
add
jmp
sti
imul
mov
sbb
das
cwde
fisub
xor
xchg
in
jns
out
aam
cmp
inc
movs
jecxz
adc
add
out
test
or
out
sub
fnstenv
ret
jge
call
dec
sti
xor
xchg
leave
pop
addr16
inc
stos
fsub
or
push
sub
repz
push
xchg
push
inc
clc
aam
adc
xor
pop
jecxz
sbb
sub
maskmovq
test
movs
mov
push
loopne
cwde
mov
cmp
scas
sbb
mov
inc
inc
mov
jmp
das
icebp
clc
mov
ds
jg
dec
loop
dec
out
fiadd
mov
dec
or
cmp
xlat
test
push
inc
enter
stos
loop
and
sbb
jp
jle
cmp
loopne
les
jno
cmp
psraw
push
sub
(bad)
jne
jo
shl
loopne
or
test
add
jns
stos
frstpm(287
lods
dec
pop
cmc
or
fst
call
push
pusha
mov
jl
les
dec
push
out
push
push
cmp
sub
xor
or
loope
mov
ja
ds
fnstenv
xor
outs
inc
xchg
xchg
push
(bad)
xor
ja
sub
shl
out
mov
shr
lahf
cmps
xchg
xor
loope
mov
and
or
fs
and
fadd
pop
(bad)
mov
sar
xlat
dec
sbb
or
sub
outs
lock
aas
xor
out
bound
pop
jae
sub
fst
fisttp
fs
inc
aad
push
xchg
jbe
push
outs
icebp
enter
xor
js
movs
sub
inc
pop
js
or
popf
jo
push
xchg
adc
in
cmp
inc
jo
std
add
mov
movs
push
mov
mov
or
cwde
clc
push
stc
fcomp
push
pop
or
ret
not
je
dec
cmc
pop
adc
adc
sub
cdq
and
jne
pop
mov
sub
rcl
stos
ds
cmp
popa
call
(bad)
fstp
adc
int
ret
jmp
fcomip
lahf
mov
hlt
push
popa
not
ret
and
scas
push
je
ret
jo
popw
jae
xlat
scas
push
imul
jmp
push
icebp
aad
jecxz
dec
mov
xor
call
jmp
push
push
cdq
mov
add
sub
jmp
cs
lds
mov
in
jb
lahf
dec
push
and
push
mov
(bad)
push
mov
into
push
xor
test
pop
mov
cwde
(bad)
es
push
jle
sub
fwait
push
fcmovu
sbb
xor
mov
std
aaa
std
or
pop
idiv
(bad)
clc
jle
stc
movlps
retf
add
shl
sbb
inc
mov
ret
adc
lods
fiadd
mov
cmp
sbb
(bad)
dec
ins
shl
ins
cli
push
daa
mov
mov
jmp
fistp
mov
int
and
xchg
shl
aaa
cmp
mov
cs
jmp
xchg
adc
cmp
inc
fimul
outs
add
xchg
xor
icebp
mov
jnp
mov
sahf
inc
shl
sbb
test
sub
mov
inc
sbb
sub
xor
dec
push
push
repnz
jnp
ja
and
mov
mov
mov
or
jle
mov
test
enter
dec
pop
outs
js
or
jmp
xchg
jl
int
and
aam
xlat
push
add
ror
push
call
adc
and
call
sti
push
xchg
inc
push
push
pushf
inc
imul
es
pop
ins
stos
ror
fs
(bad)
push
xor
test
jg
div
ja
rcr
inc
push
mov
cmc
outs
inc
mov
mov
lea
and
pusha
js
imul
mov
mov
jp
push
fadd
iret
addr16
dec
and
aad
ja
sub
in
enter
xchg
cld
push
outs
test
fwait
or
mov
mov
mov
aam
push
jge
cmp
or
push
imul
xlat
das
movs
popf
in
and
and
leave
xchg
mov
(bad)
jp
into
cwde
test
mov
pop
pop
(bad)
cmc
adc
repnz
xchg
cmp
xchg
adc
shr
adc
movs
cmc
shl
lahf
push
sti
and
mov
ja
inc
popa
xor
jns
aam
sahf
jg
push
and
fs
fdiv
ins
jge
lea
xor
test
in
push
pop
data16
xchg
cdq
mov
push
cs
js
sbb
add
pop
adc
icebp
push
xchg
inc
daa
fiadd
push
jns
mov
dec
data16
jmp
pusha
imul
cmp
imul
aad
mov
mov
cdq
mov
enter
mov
sbb
cmp
outs
or
adc
cmp
aaa
outs
mov
hlt
sub
and
outs
pop
cwde
or
pusha
imul
xor
jg
dec
pop
mov
xchg
inc
sbb
xchg
aad
pop
inc
fistp
xchg
into
mov
mov
xor
nop
arpl
pop
push
in
mov
cmc
out
dec
fmul
ss
int
inc
xchg
jnp
push
mov
imul
mov
addr16
xchg
popf
adc
jno
jp
(bad)
stos
push
mov
cdq
std
xchg
in
or
call
jnp
ret
out
mov
test
pushf
pop
inc
pop
inc
fldenv
push
dec
mov
mov
add
sti
mov
and
sbb
mov
fiadd
or
sub
(bad)
(bad)
test
push
rcr
scas
sti
test
les
and
ja
bnd
aaa
fldcw
dec
and
inc
jns
xchg
pop
shrd
(bad)
pop
inc
pop
mov
in
clc
push
pop
mov
inc
mov
movs
mov
mov
stos
shr
cli
xlat
sub
push
mov
cmc
sub
jmp
inc
mov
shl
ins
outs
test
imul
cld
or
sti
xchg
shl
add
out
fdivp
lahf
test
pop
push
je
in
test
call
sub
ret
pusha
jle
cs
ficomp
(bad)
adc
mov
out
(bad)
jmp
(bad)
out
or
(bad)
arpl
shl
ror
movs
push
std
(bad)
dec
pop
inc
movs
out
xchg
sub
xchg
(bad)
pop
adc
and
dec
or
jge
jno
loopne
cdq
add
inc
(bad)
adc
xchg
inc
and
dec
pop
stc
aam
dec
aaa
inc
mov
dec
loope
push
inc
retf
and
and
sub
int
jg
leave
pop
(bad)
sar
and
jg
sbb
jmp
jecxz
and
movs
int3
adc
sbb
mov
sbb
cmp
out
in
pushf
xchg
add
cli
jno
out
xor
cli
dec
adc
xchg
popf
sub
mov
mov
fucomi
xor
call
outs
sbb
call
in
jmp
call
adc
push
test
sbb
jnp
lods
fst
push
sub
lods
jp
push
in
mov
dec
(bad)
xchg
sub
std
mov
shr
loop
clc
into
mov
imul
rcl
test
mov
or
scas
test
not
mov
cmps
int3
cmp
ins
and
push
loop
das
ins
cwde
xchg
inc
es
call
shr
enter
fucom
pushf
push
mov
dec
jg
pop
cmp
xchg
aaa
test
inc
sti
in
pop
mov
adc
pop
jmp
push
outs
repz
fs
pop
sbb
push
mov
sub
aam
(bad)
jge
jno
lea
pop
or
dec
sbb
dec
out
stc
inc
and
push
push
call
xchg
inc
fnstsw
inc
repnz
mov
mov
and
(bad)
adc
add
push
mov
adc
push
std
sbb
push
dec
or
and
les
or
xchg
fchs
inc
or
test
paddusw
lds
pop
xor
mov
adc
push
cmps
pop
leave
and
(bad)
(bad)
int3
dec
gs
sub
rol
std
outs
add
jbe
mov
sub
pusha
push
push
push
jns
aas
mov
test
(bad)
sbb
mov
fcmovbe
lock
xchg
push
icebp
cmp
sub
add
dec
nop
pop
and
retf
or
repz
or
mov
fidiv
enter
xchg
int
loop
(bad)
stc
call
sub
pop
push
mov
mov
mov
(bad)
(bad)
arpl
out
ror
fcomp
outs
xchg
stos
pop
es
mov
or
neg
mov
mov
mov
ds
jge
dec
lods
adc
movs
mov
arpl
mov
lods
xchg
je
out
xor
jns
sbb
stc
out
mov
sbb
mov
jnp
push
stc
jmp
push
scas
int3
and
scas
xor
pusha
and
cmp
push
dec
mov
xchg
mov
scas
fcom
xchg
les
xor
fs
gs
shl
cmp
and
aas
or
fimul
add
scas
movs
add
mov
out
add
test
test
lods
jp
or
popf
mov
inc
int3
sbb
test
add
popf
jae
jo
jmp
sbb
aad
sti
imul
sbb
cmp
adc
pop
and
mov
cdq
and
xor
dec
test
rcr
mov
xor
xchg
stc
lods
hlt
push
neg
jmp
and
aas
mov
add
push
sbb
push
test
dec
push
pop
(bad)
push
addr16
mov
jne
add
daa
cmps
push
push
cwde
imul
ficomp
lods
aaa
pop
mov
and
(bad)
test
movs
sub
mov
sbb
mov
lods
dec
sbb
adc
mov
push
stos
mov
scas
fcmovne
fsubr
rcr
or
sub
sbb
loope
cmp
sete
mov
xchg
sub
movs
fwait
jo
(bad)
xor
(bad)
mov
hlt
push
outs
push
scas
sbb
push
adc
push
adc
ficom
add
mov
cmp
std
xor
add
lods
jg
adc
std
pusha
repz
or
mov
adc
stos
inc
outs
pop
popf
add
movs
loop
aam
inc
sti
dec
scas
push
push
xor
repnz
pop
dec
(bad)
xlat
es
dec
cdq
mov
mov
(bad)
cld
sahf
and
jns
pop
add
addr16
mov
mov
mov
jae
mov
adc
dec
icebp
ja
(bad)
ss
sub
xchg
pop
mov
inc
inc
data16
jge
pop
jb
xchg
jmp
pop
outs
jge
mov
and
iret
jl
mov
fimul
push
pop
sub
push
icebp
cmp
in
inc
rcl
retf
test
iret
jge
icebp
fisubr
loop
mov
xchg
jle
repz
ret
fsubr
xor
lgdtd
jmp
pop
dec
mov
push
cmps
(bad)
cmc
sbb
retf
push
repnz
pop
pop
jnp
nop
push
lahf
(bad)
jg
xor
test
data16
pop
inc
or
adc
sbb
mov
lock
jo
call
xchg
lea
mov
gs
pop
mov
out
(bad)
dec
push
jnp
sub
outs
repz
sbb
mov
pop
cmp
cmp
lock
movs
sbb
fstp
sub
test
int
scas
xor
xor
xor
xlat
loope
pop
in
stc
ror
xor
out
stos
fild
repnz
inc
xchg
cmp
ss
mov
and
mov
add
jne
retf
add
(bad)
push
mov
imul
fnstsw
rcl
xchg
pop
mov
or
fs
sbb
aas
add
aas
xor
sar
adc
stc
inc
pop
ret
ins
dec
adc
aas
fadd
mov
or
push
sub
jbe
jmp
push
xor
cmp
dec
adc
out
mov
popf
je
arpl
mov
adc
(bad)
lea
shl
cmp
dec
jb
cmp
inc
fs
aam
xchg
shr
out
and
rol
in
in
mov
fld
test
retf
aas
scas
not
pop
mov
leave
mov
mov
lock
jecxz
call
xor
arpl
pop
test
add
add
mov
pop
mov
inc
in
dec
inc
and
push
aad
dec
test
push
push
xchg
lock
add
outs
xor
pop
out
enter
in
and
add
iret
shl
jge
ss
pop
cmp
push
fwait
pop
addr16
std
jmp
into
es
and
jno
inc
mov
retf
ror
add
pushf
rol
add
aas
in
mov
cmp
or
pop
push
cmp
xchg
cwde
sbb
daa
ror
xor
iret
cmp
mov
sahf
or
xlat
mov
sahf
sub
pop
cld
fld
fidiv
xchg
(bad)
sahf
xlat
xchg
and
add
and
mov
mov
mov
jne
(bad)
sbb
jle
pop
xor
and
rol
xlat
cmp
out
sub
add
or
lock
xlat
jnp
fwait
(bad)
test
out
xchg
shl
xchg
rep
jge
(bad)
lock
test
retf
test
cmps
ret
cmp
push
sbb
jg
rcl
mov
jbe
pop
and
sub
cmps
push
xchg
inc
and
stos
pop
je
xor
sub
jmp
pop
(bad)
stos
test
and
pushf
xchg
xor
mov
out
or
xor
stos
adc
(bad)
in
or
push
sahf
aas
mov
lahf
aam
aas
aad
push
xchg
push
xchg
mov
mov
mov
loopne
and
mov
push
fs
pop
test
mov
push
mov
mov
fwait
(bad)
(bad)
mov
pop
inc
xchg
out
push
les
mov
cmp
lahf
into
jno
ins
sbb
repz
xchg
pop
xchg
std
add
retf
shl
fsubr
ror
sub
es
fst
sahf
movs
xor
das
jmp
in
repnz
xor
sbb
fs
fwait
call
pop
std
pop
dec
jge
adc
xlat
pop
lea
cmp
xor
in
mov
xlat
ss
cmp
loop
pop
or
push
in
imul
jge
in
call
xor
or
adc
shl
loop
ja
(bad)
out
sub
mov
dec
sbb
test
push
or
(bad)
adc
cli
dec
(bad)
and
or
mov
popa
lods
or
sub
add
pop
enter
call
shl
inc
sbb
and
push
or
rcl
arpl
push
sub
add
xchg
xchg
add
idiv
leave
pop
adc
push
out
test
inc
push
aas
mov
neg
push
pushf
inc
(bad)
dec
fs
(bad)
call
mov
(bad)
repz
xor
lds
pop
repnz
xlat
lock
lahf
outs
movs
and
pop
mov
cmp
add
pop
sub
jl
cld
nop
fadd
mov
inc
mov
fwait
inc
bound
xor
jo
adc
mov
lods
ficom
test
mov
div
sub
inc
add
repz
idiv
aad
add
or
scas
push
and
add
mov
push
sub
sub
cwde
jecxz
push
xchg
sub
pop
mov
sahf
repnz
push
lods
jmp
(bad)
es
pop
arpl
cdq
das
jg
add
or
out
mov
sahf
pop
push
das
scas
adc
nop
test
mov
cld
cmp
shl
aad
dec
xchg
add
nop
mov
stos
movs
fldcw
jmp
mov
jo
xchg
ss
dec
push
sbb
add
test
out
ins
fwait
push
cmp
jmp
adc
cmc
mov
xchg
test
jl
sub
sub
add
xchg
(bad)
pop
jno
and
sbb
xchg
test
jmp
call
sbb
xor
data16
retf
sbb
mov
loope
lods
dec
stos
int3
imul
pop
clc
mov
idiv
add
add
mov
data16
call
les
pop
ins
cmp
mov
xchg
push
lock
jmp
lahf
push
push
sub
jne
test
xlat
xrelease
std
cmp
or
(bad)
xchg
out
cmps
sub
sub
sub
dec
lods
jne
push
pop
or
cmp
mov
ror
mov
mov
inc
loopne
adc
mov
imul
push
adc
mov
jnp
js
sub
and
retf
mov
rol
repnz
sbb
cwde
les
push
mov
cmp
ds
or
push
les
inc
int
ins
es
loopne
adc
inc
jne
mov
xor
jbe
cmp
push
retf
adc
mov
push
out
aas
std
shl
add
or
fnsave
cmc
fdiv
jo
sub
cmps
sahf
jb
xchg
mov
es
xor
aaa
call
fs
inc
call
test
xchg
out
(bad)
mov
cmp
push
sub
mov
pop
sbb
jp
or
xchg
push
mov
loop
mov
adc
or
adc
imul
dec
test
xor
repnz
mov
test
call
pop
sub
mov
jnp
sbb
mov
sbb
inc
sub
xlat
mov
rcr
data16
aaa
jns
retf
mov
cmp
add
mulps
dec
cmp
fcom
push
(bad)
retf
je
mov
std
inc
xchg
xchg
idiv
jo
outs
mov
add
inc
and
add
sbb
xchg
jns
add
mov
adc
fimul
into
ins
adc
add
xchg
adc
xchg
jno
push
out
mov
xor
aam
rcl
push
arpl
into
out
push
(bad)
or
test
cs
push
dec
daa
in
adc
xchg
xchg
inc
adc
daa
mov
add
pop
push
adc
inc
dec
jae
rcl
xchg
data16
xchg
cmp
mov
or
sub
lahf
adc
sbb
mov
mov
inc
jb
jl
mov
pop
add
mov
addr16
dec
lods
or
lock
loope
bound
lea
fimul
outs
jns
jle
repz
pop
std
fdivr
pop
mov
std
sub
fidiv
mov
ja
sub
xchg
jecxz
sar
xchg
cmps
jecxz
lods
loop
xchg
daa
add
int3
sub
mov
push
inc
mov
sub
and
daa
adc
sbb
fistp
inc
popw
ja
mov
push
bound
aad
dec
dec
jns
in
add
test
bnd
jp
fs
aam
clc
movs
jo
mov
enter
fwait
xor
(bad)
fdivrp
out
mov
popa
cmps
ds
pop
into
xlat
iret
xor
fst
neg
inc
pop
clc
test
cmp
pop
pop
stos
jmp
out
jg
jb
adc
leave
movs
stc
hlt
pop
adc
sbb
inc
fmul
xchg
ret
jbe
sahf
mov
leave
gs
lock
cdq
mov
mov
push
jge
push
data16
in
sbb
jle
out
int3
arpl
fmul
fwait
xchg
stos
jp
call
xlat
shr
mov
xor
jl
cmps
push
sub
imul
jno
cld
dec
inc
les
or
inc
mov
jne
push
sub
dec
rcl
hlt
shl
test
sub
xchg
fstp
add
mov
jmp
das
jae
hlt
mov
movs
xchg
sbb
loope
jbe
popf
sbb
lods
or
outs
mov
cmc
and
test
in
fs
nop
cli
mov
cmps
mov
add
bound
mov
stos
or
je
enter
rol
xor
(bad)
add
push
sub
dec
imul
sub
cmp
jo
xchg
or
push
push
mov
pop
cbw
add
xchg
fisubr
inc
pop
push
jg
dec
xchg
dec
or
fcomp
shl
retf
jb
(bad)
fmul
xor
sbb
or
push
aas
fst
cmp
int3
test
or
cld
add
in
jae
jne
dec
xor
cs
(bad)
(bad)
bound
push
mov
jne
ret
add
push
jb
call
sub
daa
ret
inc
mov
in
cs
push
jae
imul
das
or
mov
pop
xchg
fsubrp
pop
aas
xchg
cmp
lods
sub
mov
push
(bad)
mov
cmp
retf
mov
push
out
inc
cli
fist
xchg
jmp
jg
ret
xchg
sbb
test
push
and
sbb
loopne
iret
fidiv
sub
adc
cmp
pop
(bad)
out
adc
cmp
push
jle
adc
adc
mov
xchg
movs
js
call
test
mov
xor
push
mov
push
push
rcl
outs
lds
cmp
sbb
fldcw
repnz
pop
lods
mov
in
mov
call
dec
sbb
bound
add
ret
fistp
mov
pop
ins
popa
ret
cli
dec
xchg
scas
push
popf
jb
icebp
pop
popf
in
push
dec
jge
push
aad
and
std
or
imul
mov
cmp
hlt
out
cld
add
cmp
dec
into
retf
aas
add
cs
inc
or
pop
ficomp
push
test
jo
mov
adc
je
inc
sti
add
lock
(bad)
or
mov
je
jbe
cmp
mov
std
mov
shl
dec
(bad)
jle
pusha
mov
gs
mov
js
xor
push
sbb
and
loope
movs
aaa
inc
cmp
out
push
test
xchg
icebp
int3
cmp
ins
ins
adc
mov
or
mov
sub
push
inc
cmp
and
jl
cs
je
mov
xchg
cmp
mov
dec
push
xchg
lahf
ret
xlat
je
pop
je
mov
xor
sub
cmp
ja
sub
jo
ins
bound
push
test
pushf
inc
xor
and
push
ficomp
mov
mov
gs
iret
(bad)
xchg
cmp
and
js
adc
test
xchg
jbe
lahf
iret
neg
sub
cmps
ds
std
sbb
inc
sbb
jbe
addr16
jmp
aad
fidiv
and
xchg
cld
scas
pusha
pushf
adc
jmp
dec
add
ret
or
or
jecxz
mov
outs
mov
or
neg
(bad)
jmp
cli
in
in
sub
in
cld
imul
jb
sti
outs
xor
out
jg
mov
aaa
std
and
in
stos
or
scas
rcl
lds
neg
or
push
mov
mov
sub
xchg
fld
vmovss
jo
test
pop
test
aas
std
push
idiv
cs
add
test
or
je
inc
ja
xlat
xchg
mov
retf
fsubr
dec
call
xchg
outs
popf
mov
push
shl
mov
rcl
cli
loopne
out
add
(bad)
sub
fsub
imul
imul
ret
push
iret
shr
fisub
lea
bnd
aam
ret
int3
mov
xchg
mov
loop
fisubr
sar
outs
test
sbb
sub
xor
mov
and
push
rcl
fwait
jmp
push
pusha
imul
mov
cdq
ret
pop
mov
movs
mov
outs
es
into
mov
mov
jle
dec
jecxz
mov
pushfw
stos
(bad)
xor
jb
sti
fidiv
xchg
jmp
call
int
or
ss
icebp
outs
jg
sub
and
xchg
mov
retf
adc
lods
mul
dec
sbb
lods
ret
cld
fnstsw
daa
and
fnstcw
pop
dec
sbb
in
(bad)
test
mov
mov
inc
in
fsub
jle
addr16
icebp
mov
aas
cs
push
ret
outs
inc
push
mov
clc
pop
xchg
aad
shl
jp
mov
add
sbb
mov
jnp
xor
add
test
push
je
sub
rol
(bad)
shl
or
xlat
cmps
out
dec
mov
inc
jb
push
pusha
mov
jo
fwait
inc
xchg
pop
imul
pop
pop
outs
pushf
sbb
xchg
je
es
and
adc
jp
jle
in
push
icebp
xor
fbstp
dec
sbb
cmc
imul
sahf
cmp
stc
test
xchg
xchg
in
fwait
jnp
imul
push
jbe
dec
mov
icebp
push
xchg
(bad)
cmp
int3
add
xchg
stos
scas
fwait
out
sub
ret
stos
fsubr
mov
sbb
fild
mov
outs
xchg
pop
fisubr
dec
aam
outs
cli
retf
xchg
imul
sbb
test
sbb
inc
movs
jbe
mov
cmp
cmp
xor
adc
cdq
das
cmc
mov
jl
xchg
adc
popf
rcl
leave
xor
sub
mov
rcr
out
imul
sbb
gs
inc
mov
fcmovnu
jbe
sub
sub
cwde
fmul
adc
xlat
dec
ficomp
dec
aam
mov
pusha
and
mov
int3
hlt
lds
jecxz
call
or
and
mov
pop
sbb
pop
mov
lock
pop
adc
add
jae
js
ret
adc
xor
sub
pop
jnp
mov
push
jge
cmp
pushf
adc
bound
idiv
retf
(bad)
jmp
mov
mov
sar
adc
mov
cmp
stos
ja
mov
pushf
sbb
imul
aas
cmps
xchg
cmp
cli
and
into
scas
rcr
shl
mov
pop
or
mov
cmc
cmp
xchg
sbb
jns
push
mov
leave
jp
fwait
sub
je
adc
xor
loop
pop
out
arpl
add
or
add
dec
jns
or
cmp
push
xchg
mov
mov
sub
push
int
xchg
cwde
mov
lock
fcomp
scas
lock
xor
mov
push
out
cmp
ret
out
rcr
or
shl
lds
mov
mov
test
xlat
in
cmp
mov
(bad)
std
bound
inc
adc
(bad)
out
(bad)
and
in
in
sbb
fadd
or
and
(bad)
scas
xchg
fcom
sub
stos
jle
sub
xor
xchg
sub
fidiv
aas
jo
push
mov
sub
adc
cmp
(bad)
out
popa
dec
shr
add
sub
inc
test
and
das
pushf
test
ja
adc
bnd
fisubr
out
(bad)
cmp
dec
cs
mov
inc
or
inc
rcl
out
popf
dec
fld
add
popf
mov
je
xchg
cdq
mov
repz
enter
xor
or
xchg
sbb
jne
pop
inc
in
add
push
xchg
xor
push
dec
sub
fisub
out
and
hlt
jmp
aas
or
daa
arpl
mov
mov
test
cs
stos
cmp
stos
mov
sub
xor
fsubr
into
jne
xchg
inc
call
bound
mov
cmp
fmul
sbb
or
xor
(bad)
std
ret
pushw
shr
loopne
lock
mov
retf
add
in
lods
js
mov
push
clc
mov
cmps
adc
jne
mov
outs
stc
fisub
not
mov
pop
mov
push
cli
xor
mov
sub
pop
dec
nop
iret
sbb
adc
iret
dec
add
add
test
cmp
aam
inc
lock
and
cld
jae
mov
jp
outs
rcl
cmovae
je
adc
imul
push
(bad)
es
pushf
mov
call
addr16
test
xor
stc
sub
inc
jns
mov
add
push
imul
xlat
aam
cmp
mov
sbb
repz
sub
push
cwde
mov
jno
pop
push
movs
jg
mov
xchg
stos
imul
mov
cmp
movs
fidiv
inc
dec
jmp
popa
pop
(bad)
(bad)
mov
js
mov
in
cs
ret
sbb
loopne
shl
dec
inc
inc
gs
sbb
stos
xchg
cld
dec
in
and
mov
test
inc
mov
loopne
cmp
push
or
popf
xchg
and
push
mov
sar
xor
dec
scas
out
fwait
pop
stos
mov
fild
push
repz
sub
push
rol
jg
fstp
mov
popf
xor
mov
pop
jno
inc
push
inc
test
call
bound
jp
jnp
pop
es
fiadd
jae
mov
dec
sub
jmp
in
jmp
mov
add
test
pop
and
push
out
pop
das
cmps
mov
mov
push
in
sbb
jmp
int3
xchg
repz
jge
loop
xchg
sub
loopne
push
jmp
test
lahf
lock
inc
cdq
sub
sbb
mov
lds
nop
popf
(bad)
aad
into
xor
xchg
into
loope
addr16
adc
in
aaa
ja
cdq
dec
pusha
repnz
cli
add
popa
cwde
fdiv
fmul
(bad)
ds
ret
mov
dec
pusha
mov
inc
int
fisub
arpl
mov
push
sbb
imul
ds
in
push
pop
jne
adc
inc
jno
lods
je
out
inc
jbe
retf
adc
jmp
xor
push
cld
cwd
jl
mov
test
xor
out
sti
mov
mov
movs
jo
fld
std
mov
cmp
jg
jmp
inc
pop
(bad)
xchg
aam
pop
das
mov
into
cmps
sub
fld
xchg
xchg
(bad)
jecxz
leave
pop
arpl
sbb
push
aaa
out
pop
jp
xchg
clc
jns
pop
xor
jl
dec
adc
out
arpl
les
pop
sbb
xor
pop
pop
or
out
aas
add
pop
andps
inc
xor
adc
cmp
add
xor
lea
push
loop
outs
js
ds
mov
popf
ret
adc
jmp
cmp
or
xchg
test
ds
loope
in
ret
sub
leave
mov
les
sub
fild
je
jns
pop
mov
cmp
pop
mov
pop
add
add
call
push
fs
ror
jmp
pop
cli
push
adc
and
imul
cmp
push
xchg
adc
mov
jge
add
lods
push
xchg
out
in
inc
push
jecxz
loopne
mov
and
lea
adc
mov
xchg
cmp
xchg
jp
test
cmp
xor
loopne
xchg
adc
mov
xor
rcl
push
mov
in
addr16
(bad)
xchg
sub
mov
and
out
lahf
loopne
fistp
add
sub
mov
inc
xchg
mov
and
je
xchg
cs
repnz
int3
iret
push
into
test
jg
jle
mov
add
and
add
dec
push
jmp
xor
das
and
gs
mov
aas
xchg
pop
fild
add
xor
dec
bound
or
mov
test
lahf
cmc
mov
es
add
icebp
mov
adc
push
arpl
fwait
mov
clc
mov
test
xchg
mov
push
inc
rcr
add
inc
cwde
cs
add
ss
(bad)
mov
inc
jbe
mov
mov
xlat
clc
call
popa
repz
cmp
push
js
inc
inc
scas
out
push
into
lea
js
dec
addr16
sbb
push
push
imul
mov
movs
cmp
test
fnstcw
call
movs
or
inc
xor
inc
fwait
xor
ret
ja
push
into
push
jno
or
mov
fild
daa
call
movs
repnz
adc
xor
mov
aaa
adc
fisttp
fs
cli
loope
in
inc
(bad)
jecxz
cmps
jnp
adc
push
lock
sbb
lock
mov
arpl
or
ror
mov
scas
mov
ins
and
sar
loop
mov
sti
aas
int
test
add
(bad)
push
mov
out
popf
mov
mov
addr16
fldcw
aad
mov
or
pop
je
and
loope
inc
inc
cld
scas
xor
out
push
mov
pop
dec
inc
icebp
dec
cmc
dec
fild
cld
arpl
push
cmp
(bad)
jp
shl
jge
loopne
jmp
fisubr
or
pusha
push
dec
lea
call
cmc
loope
std
cmps
ja
imul
mov
sub
sbb
push
popf
test
aaa
mov
xchg
fbld
popa
jo
inc
(bad)
fsub
loopne
sub
mov
cmp
xchg
push
repnz
pop
mov
xchg
jge
int
jno
cmp
pop
pop
mov
mov
test
stos
js
inc
or
xchg
or
jae
scas
add
sub
movsx
adc
xor
test
sbb
fdivrp
jmp
int3
pop
jge
xchg
(bad)
push
inc
aas
xchg
out
mov
test
cwde
xor
cmp
shl
xchg
inc
adc
and
and
into
xchg
dec
push
lods
ds
dec
into
dec
pop
jbe
(bad)
cwde
in
mov
jb
mov
jg
ins
in
cmp
dec
scas
mov
push
and
int3
pop
jns
leave
jae
ret
mov
cmp
out
aaa
mov
pushf
adc
inc
jmp
lods
(bad)
dec
xor
mov
aaa
mov
repnz
cld
adc
mov
retf
nop
cmps
push
ror
imul
pop
lahf
nop
gs
aad
scas
mov
ss
rol
cmp
sar
pop
dec
fst
pop
jns
ror
mov
pop
pop
and
arpl
sub
shl
cmps
add
push
xchg
shr
loop
and
adc
popa
shr
pop
mov
mov
mov
mov
jnp
es
in
pop
mov
cmps
push
cmp
push
(bad)
sar
xor
sbb
sbb
call
jne
mov
push
and
sbb
(bad)
jle
add
mov
mov
lahf
and
pop
cdq
mov
push
sbb
rcl
ds
xchg
push
call
test
mov
shl
jae
fcomp
mov
or
mov
outs
fsub
or
sub
mov
in
aas
xor
jae
pop
iret
xchg
cmp
xchg
jb
pop
(bad)
inc
mov
scas
stos
or
sti
test
xchg
(bad)
retf
sbb
mov
inc
xor
or
add
in
pop
jbe
je
push
cmps
movs
dec
jmp
fisubr
popf
outs
dec
sbb
ins
rol
out
js
(bad)
leave
aad
in
dec
add
(bad)
inc
fistp
xchg
out
sub
or
fadd
ss
cld
xchg
jo
push
sbb
inc
lea
retf
cmps
(bad)
es
lahf
fnstenv
into
shr
mov
sahf
pop
test
bound
test
jge
sar
sbb
push
cdq
mov
fild
cmp
push
dec
aam
mov
xchg
shl
and
fwait
pop
pop
test
push
and
icebp
pop
fsub
and
pop
arpl
jl
jmp
sub
add
sahf
cmps
imul
xchg
pop
les
std
ror
mov
pop
or
popf
adc
test
add
mov
mov
cld
add
clc
sbb
adc
clc
and
cmc
dec
fild
dec
shr
ret
add
aam
rcr
pusha
gs
scas
sub
mov
sbb
xchg
lea
push
ds
jbe
(bad)
lea
fucomip
int
mov
ret
push
xchg
pop
xor
xchg
mov
xchg
aas
or
(bad)
jbe
test
jge
cmp
daa
mov
adc
pop
sbb
mov
shl
stos
out
in
cwde
pop
dec
push
loopne
cmp
xor
mov
xchg
fs
or
(bad)
xchg
push
and
lock
push
mov
jle
fistp
into
int3
pop
iret
je
sub
fiadd
adc
iret
sub
out
adc
test
or
lock
adc
jnp
mov
add
or
out
cmps
xchg
push
push
sbb
(bad)
sti
(bad)
pop
ins
nop
cmp
and
push
mov
inc
jae
rcl
call
cmp
dec
or
fist
fisubr
xor
mov
(bad)
aad
pop
lock
pop
sar
je
dec
mov
xlat
or
mov
out
cmp
in
or
dec
loop
sub
sub
add
test
mov
mov
add
mov
xor
pop
(bad)
retf
das
adc
les
push
lahf
add
movs
inc
xchg
xchg
test
mov
idiv
push
xor
or
cmps
icebp
das
loope
jb
mov
dec
mov
jmp
aad
pusha
es
test
mov
xchg
xchg
fdivp
and
pop
cmp
dec
push
dec
(bad)
pop
mov
lods
test
(bad)
dec
in
in
loope
lahf
out
pop
test
inc
in
push
adc
mov
mov
out
dec
add
test
in
add
sub
xchg
lds
jne
and
popa
loop
push
mov
sbb
rcr
dec
ret
and
(bad)
scas
or
jge
sbb
retf
xchg
jno
push
aam
cmps
cmps
lods
mov
push
(bad)
mov
push
mov
fldenv
(bad)
idiv
add
cmp
push
stos
test
(bad)
fcmovb
sbb
lock
dec
xor
cmp
adc
nop
pop
les
add
inc
cmp
xor
cs
and
xchg
neg
jecxz
aas
or
sbb
icebp
xchg
or
sbb
cmc
and
xchg
test
(bad)
bound
xchg
dec
into
rcl
jb
inc
test
push
sti
in
pushf
scas
retf
fs
stos
mov
clc
rol
xchg
cwde
cmc
(bad)
push
loopne
(bad)
cmp
out
cmp
mov
fild
int3
push
sub
adc
lods
adc
mov
test
jle
jo
jo
mov
sub
fiadd
push
jae
add
fnstsw
and
inc
and
adc
sbb
dec
and
push
jmp
pusha
pop
fs
adc
cmp
mov
xchg
adc
pop
in
xchg
scas
cmp
add
xor
adc
daa
ror
(bad)
pop
jae
inc
ret
sbb
dec
adc
fstp
or
(bad)
cmp
ret
mov
xchg
lds
cld
xor
pop
adc
repz
or
mov
out
push
mov
xchg
cwde
shl
cmc
cli
clc
inc
test
inc
inc
rcl
pop
inc
sar
and
and
aas
out
push
jmp
stos
sbb
fistp
repnz
fsub
mov
cmc
mov
cmp
mov
and
addr16
add
sbb
xchg
jle
jle
in
and
call
call
sbb
sbb
add
repnz
add
cmp
pushf
push
sub
out
adc
daa
movs
jns
sub
dec
into
rcr
mov
mov
rcr
sar
lods
push
or
push
(bad)
push
jle
cmp
stc
sbb
das
sbb
aaa
imul
aaa
adc
xchg
xchg
xor
js
sahf
dec
scas
or
in
or
stc
(bad)
rcr
popf
xor
jge
pop
add
jns
fdivr
int3
pop
xchg
mov
xchg
pop
loope
mov
mov
jge
sbb
enter
jp
mov
lods
sbb
das
(bad)
xchg
xor
out
cmp
xor
pop
(bad)
mov
sbb
mov
jns
aam
or
and
mov
pusha
xor
rol
add
dec
xchg
sbb
dec
or
inc
pusha
outs
mov
pcmpgtb
pop
int
(bad)
xchg
inc
call
mov
jmp
ss
sbb
sbb
inc
stos
out
sahf
stos
cmp
ins
lock
lock
mov
mov
and
push
imul
popa
inc
jmp
into
(bad)
aad
xchg
inc
mov
test
ficom
jae
add
pop
inc
cmp
mov
arpl
inc
jg
les
dec
fsub
in
enter
sbb
in
mov
iret
out
imul
push
int3
mov
scas
inc
xchg
retf
cmc
popf
add
js
inc
fdivp
pop
mov
jbe
lds
inc
scas
rcl
aad
and
lods
ja
push
pop
icebp
mov
aad
adc
pop
in
lds
icebp
js
test
xchg
in
add
mov
and
sbb
jmp
push
daa
stos
cmp
xchg
or
cmps
(bad)
push
xchg
ins
mov
repnz
push
push
xchg
xlat
int
lods
jl
adc
not
mov
fstp
mov
outs
xchg
idiv
out
rcl
imul
xor
test
pop
fadd
cdq
ja
lock
out
sub
jmp
sub
imul
dec
mov
xor
out
out
dec
hlt
(bad)
push
jmp
gs
aas
nop
out
mov
fnstenv
loop
mov
cmp
lods
xor
leave
fisubr
mov
imul
pop
and
jns
push
dec
xor
test
(bad)
out
mov
fsubr
out
addr16
sqrtps
sbb
ins
adc
pop
mov
pop
mov
in
push
dec
ret
ss
addr16
repnz
push
dec
outs
lock
mov
fmul
cmps
clc
jo
xchg
push
or
repnz
mov
and
jg
aad
ins
ror
push
sub
push
xchg
add
cmp
push
(bad)
(bad)
std
pop
repz
scas
ja
adc
xchg
sahf
cmp
push
loope
jmp
pop
jbe
clc
cmp
mov
and
sbb
xor
cmp
(bad)
fcmovnu
jle
adc
lock
mov
fst
and
shl
bound
cmps
cmc
sub
pop
xor
(bad)
pop
inc
cwde
push
cdq
mov
mov
mov
and
outs
cmps
or
mov
nop
pop
loopne
or
scas
rol
mov
jnp
pusha
aam
cli
bound
out
and
clc
dec
cmps
mov
mov
push
sbb
pop
adc
cld
pop
out
add
aad
add
jl
pop
jmp
fwait
dec
ss
sti
fcom
jne
aam
mov
fsub
js
imul
ins
popf
push
add
inc
(bad)
retf
aad
dec
sub
(bad)
aam
push
jl
xor
mov
dec
sbb
bound
push
and
call
push
or
ror
stc
inc
pop
push
push
mov
xchg
sbb
mov
cmc
mov
pusha
bound
pop
inc
sahf
mov
mov
fimul
popf
xchg
push
xlat
jmp
loope
iret
push
div
or
ins
loop
scas
fs
retf
jg
and
and
stc
inc
repz
imul
xor
lahf
arpl
jle
(bad)
xlat
je
ins
lods
add
push
jle
or
pop
cdq
ins
inc
dec
adc
jbe
sbb
sub
dec
sbb
jmp
xor
sbb
push
xor
test
dec
adc
js
in
ss
sub
(bad)
jne
dec
adc
retf
pop
fs
addr16
adc
dec
loopne
mov
enter
fdivp
xor
cmp
loop
add
pop
sbb
ror
and
cmp
test
mov
sub
push
mov
xor
push
je
test
pop
mov
jg
sub
out
(bad)
test
popa
test
inc
cmc
jmp
xchg
dec
mov
xor
sbb
scas
popa
jg
mov
ret
pop
std
outs
in
and
fld
leave
cmp
lock
mov
hlt
test
ret
push
xor
jo
or
fimul
mov
add
call
jo
imul
inc
mov
pop
pop
mov
jne
inc
jl
inc
mov
adc
xor
add
sbb
and
cmps
sti
mov
push
cs
outs
lods
cmp
push
cmp
adc
loope
jbe
push
stos
mov
fwait
rol
in
pop
and
push
sti
pusha
cli
mov
repz
(bad)
jg
loopne
pop
test
rol
xchg
test
inc
scas
push
cmps
mov
outs
popa
add
adc
clc
int3
mov
fistp
outs
sub
dec
call
int3
int3
movs
fmul
cmps
jnp
neg
pop
data16
popf
and
sub
xlat
out
imul
jmp
movs
out
mov
push
or
movs
aad
sbb
jmp
scas
retf
jne
ret
cmps
xor
inc
popf
jge
ret
out
aam
popa
popf
inc
pop
cmps
adc
(bad)
and
mov
repnz
xor
fdivr
pop
sbb
pop
movs
sub
mov
or
loopne
aam
push
fcom
cwde
mov
inc
out
mov
sub
add
inc
and
(bad)
js
jno
sti
push
shl
adc
sahf
(bad)
mov
jmp
pop
mov
popa
mov
lea
rcl
fwait
mov
(bad)
sub
imul
mov
nop
sub
and
int
adc
mov
fild
pop
and
pop
sub
push
jb
hlt
in
cmp
rol
pop
xlat
sub
ror
mov
cmc
addr16
inc
dec
bound
sub
jnp
clc
lds
cs
mov
inc
push
stc
cmps
pop
jmpw
and
push
ja
fist
fs
movs
dec
xchg
add
cmp
dec
pop
sbb
or
enter
push
mov
cwde
inc
pop
call
sub
cdq
les
jp
jle
fild
pop
clc
jmp
hlt
pop
(bad)
pop
cmps
ret
in
in
ret
mov
jns
xchg
fwait
cmps
pop
mov
inc
inc
aad
xchg
fimul
cwde
arpl
jne
sahf
clc
ins
fnsave
adc
mov
adc
jl
add
stc
xor
out
xchg
add
and
cmp
leave
push
lock
cwde
std
in
out
xor
icebp
jae
test
cmps
push
(bad)
xlat
clc
mov
retf
lods
xor
(bad)
int3
xchg
fwait
or
aam
xchg
pop
cli
ins
cmps
in
xor
imul
loopne
psrlq
aad
xchg
loopne
aad
ficom
dec
cli
mov
or
xor
sahf
rol
add
ret
sbb
push
pop
sbb
add
jne
fdivr
push
xchg
inc
fnstsw
enter
bound
or
ror
enter
adc
(bad)
adc
sub
and
push
or
mov
jns
cmp
pop
sbb
xor
and
mov
add
sub
and
cmp
ins
(bad)
data16
vshufps
pop
loope
fbstp
popa
adc
pop
mov
lock
leave
xor
mov
rcl
dec
pop
push
popa
pop
xchg
push
es
inc
xor
loope
mov
hlt
in
mov
push
sub
mov
in
jmp
cmp
push
leave
popf
sub
pop
stc
cmp
test
imul
mov
adc
push
pop
lock
mov
push
arpl
mov
shr
test
mov
cmps
sub
adc
jae
aad
jle
ret
xor
sahf
lock
shr
cmp
repnz
scas
stos
inc
adc
push
and
outs
rcl
pop
pop
jne
jo
mov
pusha
mov
sub
jae
jbe
dec
inc
mov
out
mov
outs
or
or
cmp
xor
(bad)
mov
push
cdq
add
imul
iret
mov
pop
cmc
aas
dec
xor
fsubr
bound
push
repnz
mov
cdq
xchg
xor
ret
jnp
pop
cmps
out
sbb
adc
push
ret
push
xor
and
cld
mov
fdivrp
jb
retf
sar
int
cld
cmps
cli
or
inc
or
xchg
data16
repnz
idiv
dec
inc
add
pushf
and
aas
push
movs
in
xchg
sub
or
push
dec
add
mov
jge
imul
dec
push
jne
push
cld
retf
jo
out
mov
enter
pop
mov
pop
mov
or
sub
(bad)
fld
sti
xchg
mov
push
test
sti
fucom
fidivr
xor
nop
ficom
inc
cmp
mov
jge
xor
(bad)
dec
int3
js
dec
jbe
jg
mov
add
or
dec
(bad)
push
mov
out
lahf
xchg
mov
xor
call
push
mov
mov
sub
cdq
mov
push
add
mov
scas
sbb
not
inc
imul
(bad)
jns
call
adc
mov
inc
cld
ds
test
fiadd
je
(bad)
stc
loopne
loopne
jmp
cmp
ss
sar
popa
mov
jmp
xor
dec
fs
or
xchg
xor
addr16
inc
mov
pop
test
(bad)
mov
sub
add
test
daa
outs
inc
int3
(bad)
jle
lds
add
retf
popa
jl
sbb
pop
pusha
sub
pop
loope
sub
fldcw
cli
push
xchg
inc
mov
call
in
sub
or
les
test
int
inc
frstor
fs
xor
sub
cld
data16
cmps
xchg
jb
mov
push
jle
xchg
lahf
imul
xor
out
mov
lahf
xor
mov
dec
pop
jmp
dec
add
pop
mov
outs
sub
movs
adc
stos
mov
data16
adc
fmulp
shl
call
(bad)
xor
and
pop
stc
cmp
mov
loope
dec
leave
cli
mov
scas
adc
lds
mov
and
or
push
sti
cmp
adc
inc
into
popa
(bad)
pop
cmp
fisub
xor
bound
sbb
push
jle
test
(bad)
jae
xchg
inc
pop
and
xchg
sbb
pop
mov
mov
test
mov
je
mov
cmp
les
fwait
cmps
test
call
pop
repz
sub
xor
dec
dec
sub
sbb
pop
test
lahf
push
and
div
movs
mov
sub
out
int3
jae
xchg
sbb
mov
cli
xchg
gs
inc
es
sbb
jecxz
addr16
jbe
(bad)
sahf
popf
cwde
mov
fdivr
loope
(bad)
fwait
jle
mov
out
cmp
(bad)
jmp
or
loop
aas
mov
mov
aam
imul
fist
les
fwait
sbb
jbe
sub
add
fadd
dec
scas
loope
loop
jl
arpl
not
sub
xchg
pop
fs
push
outs
adc
sub
scas
cmps
fs
(bad)
out
(bad)
dec
mov
js
push
or
mov
add
enter
xchg
jl
iret
mov
je
ret
xor
sbb
and
jl
sbb
mov
xor
jecxz
rcr
lods
addr16
adc
idiv
pop
pop
push
sub
daa
jbe
push
adc
sbb
or
in
add
push
dec
sbb
mov
adc
aas
out
mov
inc
or
xchg
mov
cli
pop
cmp
lahf
fidiv
lods
stos
sub
mov
mov
loop
int
adc
retf
popf
js
pop
sbb
jmp
aam
(bad)
fist
arpl
ja
add
add
or
mov
enter
jno
inc
xchg
add
sub
or
cmp
or
pop
add
or
std
dec
(bad)
scas
sub
test
jns
test
addr16
pop
mov
fist
push
mov
xchg
outs
bound
mov
cwde
adc
or
sub
jno
add
dec
sub
mov
jp
shr
ret
daa
and
jmp
in
sub
mov
fs
fdivr
and
call
iret
repz
js
xchg
int3
std
cmp
jo
fimul
mov
enter
mov
bswap
rcr
pop
movs
mov
in
inc
push
loope
jbe
test
xor
sbb
icebp
(bad)
movs
rcl
enter
sub
call
mov
ret
loope
sbb
xchg
icebp
push
lods
lds
fsub
int3
(bad)
out
push
pmulhw
mov
xchg
lds
pop
ins
cmp
jmp
shl
pop
outs
cmp
pop
mov
daa
clc
dec
inc
xchg
xchg
movs
fld
loope
stos
inc
add
out
push
js
xor
add
jg
push
mov
sahf
imul
hlt
movs
pop
fst
leave
in
cmp
lods
mov
inc
ds
add
or
pop
or
(bad)
or
jae
cli
test
xor
or
sub
sbb
or
neg
leave
sub
mov
or
xor
adc
sub
dec
pusha
dec
cmp
mov
push
call
adc
out
adc
cmp
add
int
xor
mov
inc
inc
push
shl
add
aaa
hlt
cmp
cdq
sbb
inc
push
test
dec
or
mov
les
data16
pop
inc
daa
xor
push
mov
mov
ins
mov
lock
xchg
jbe
pop
subps
test
int3
cmp
push
fadd
rcr
cld
dec
inc
jp
fiadd
or
mov
inc
pop
stc
repz
jb
inc
not
push
dec
inc
leave
push
ins
dec
ror
ds
popf
aas
fs
idiv
cmp
shl
sub
cmp
movs
or
xchg
pushf
mov
inc
loopne
add
out
test
cmps
xor
adc
push
xor
ja
fs
jns
loopne
pop
addr16
mov
push
loopne
fisub
fimul
rcr
jmp
jg
bound
loop
fst
pop
arpl
stos
mov
sahf
or
test
jnp
ret
sahf
test
adc
call
mov
sub
xchg
outs
dec
mov
test
pop
inc
xchg
sub
daa
je
or
stc
cwde
mov
lods
popf
pushf
adc
xchg
in
xor
aam
nop
xor
lods
enter
dec
ins
lea
sub
push
and
test
pop
sub
mov
add
ins
lds
and
test
mov
xlat
ins
movs
dec
icebp
out
mov
sub
gs
popf
mov
outs
cmp
lods
out
ins
ins
mov
add
xchg
and
push
sar
bound
pop
xchg
xchg
in
xchg
rol
push
cmp
cdq
xor
unpckhps
cmp
cmp
in
xor
enter
xchg
div
pop
scas
or
jbe
repz
jbe
in
xchg
and
nop
push
cmp
inc
dec
mov
dec
xor
lods
loope
(bad)
jns
mov
(bad)
fild
xchg
dec
push
mov
add
pusha
aas
inc
jb
scas
rol
mul
movs
sahf
dec
mov
rsm
dec
les
inc
push
ja
pop
bound
push
loopne
add
add
inc
jne
loopne
adc
or
push
pop
mov
push
bound
mov
xor
cmps
sub
pop
ins
aaa
xchg
sub
jnp
addr16
or
mov
cdq
or
(bad)
in
cmp
adc
mov
or
addr16
cmp
pop
inc
out
sar
or
dec
fwait
dec
movs
std
pop
and
es
std
xor
mov
test
pop
cmps
push
inc
not
cmp
pop
push
adc
adc
mov
pop
sub
idiv
aaa
ds
aam
xchg
inc
in
outs
or
popf
and
push
(bad)
lahf
inc
ins
pop
sub
jne
test
jg
add
shl
inc
mov
popa
(bad)
mov
adc
jg
in
ret
test
inc
shl
add
sti
pop
lea
fabs
cmp
mov
xor
scas
hlt
mov
ficomp
repnz
cli
dec
sub
mov
jnp
add
pop
leave
mov
xchg
fbld
push
and
inc
jnp
fcmovne
inc
stos
add
pushw
cdq
jo
imul
rol
inc
mov
cld
std
xor
cmp
retf
fld
dec
das
ins
imul
cmp
cwde
test
imul
add
mov
movs
xchg
cmp
shl
(bad)
cli
cmp
fidivr
fdivr
iret
xchg
dec
cmp
test
sbb
dec
leave
dec
jmp
hlt
sbb
aaa
pop
test
jo
cmp
out
jecxz
rcl
ss
adc
(bad)
std
rcr
mov
mov
lahf
sbb
dec
jecxz
test
inc
pusha
pop
and
push
hlt
fimul
stc
mov
jns
lock
out
cdq
sub
ja
ret
in
and
pop
cvtps2pd
mov
ds
cmc
and
xchg
pushf
add
dec
mov
mov
pop
out
hlt
inc
popf
test
(bad)
js
in
(bad)
(bad)
sub
dec
ins
mov
xchg
add
rol
add
test
dec
les
lss
das
hlt
mov
popf
fist
mov
addr16
push
cwde
dec
mov
outs
arpl
(bad)
mov
icebp
movs
lods
jae
rcl
xchg
call
or
inc
pop
cwde
js
mov
call
push
add
add
jecxz
and
aas
(bad)
out
in
imul
and
aas
push
push
sbb
js
mov
sub
ins
neg
jns
and
(bad)
mov
or
iret
and
mov
stc
mul
cmp
aaa
daa
push
xor
sbb
inc
js
dec
sub
daa
ins
mov
lahf
(bad)
ficomp
std
outs
jns
movd
jnp
sub
xchg
add
loope
not
or
mov
imul
daa
xor
add
mov
jae
xchg
mov
cwde
fnsave
jbe
mov
mov
popf
(bad)
push
pushf
or
call
adc
(bad)
or
push
jnp
push
add
lea
dec
and
in
repz
and
(bad)
or
sub
out
dec
dec
sbb
js
gs
mov
cmp
or
fucomi
outs
or
mov
in
repz
daa
dec
mov
movs
sub
push
inc
push
(bad)
dec
(bad)
scas
sbb
mov
adc
ja
pop
out
or
xlat
ins
fiadd
shl
xchg
and
jbe
fild
cmp
ins
arpl
mov
repnz
loope
cli
xlat
(bad)
and
and
mov
add
int
cmp
sub
repz
cwde
arpl
sub
lahf
std
(bad)
cwde
movs
fimul
in
fmul
sub
fisub
test
neg
iret
jecxz
mov
mov
cmp
mov
ja
cmp
neg
xchg
adc
cmp
dec
repnz
jg
pusha
mov
rcr
or
cmps
adc
fnstsw
or
inc
call
jb
jbe
iret
loopne
cmc
out
clc
mov
call
popf
mov
mov
inc
mov
mov
lods
loop
or
inc
loopne
mov
dec
push
fbld
inc
leave
(bad)
scas
ret
les
scas
jmp
mov
cmp
or
xchg
sbb
jns
in
mov
push
pop
add
cmc
in
mov
(bad)
popf
ficomp
push
pop
movs
sbb
and
repz
dec
pop
(bad)
ret
mov
xor
mov
xchg
jno
ror
rol
popa
mov
mov
aas
pop
xchg
inc
neg
js
cmp
cmp
sub
jnp
outs
sbb
sub
dec
shl
cmp
shl
adc
imul
xlat
jp
in
aas
sahf
xchg
mov
xchg
mov
imul
stos
dec
jl
rcl
lods
mov
fcmovu
inc
cmp
add
cmp
pop
push
ins
repz
out
xor
jno
push
ret
push
mov
pop
leave
cwde
jp
fcomp
js
or
or
inc
test
adc
pop
enter
mov
js
jmp
dec
adc
mov
gs
sbb
js
sbb
mov
inc
and
sub
repz
pop
sub
icebp
aad
enter
adc
adc
sub
loop
test
cmp
not
cld
sti
add
test
pop
or
lock
mov
mov
pop
or
cmps
inc
idiv
scas
inc
or
outs
in
mul
cmc
xor
push
or
cld
add
cld
xchg
mov
push
mov
pop
imul
mov
sbb
popa
jge
mov
pop
fidivr
ret
dec
mov
ret
sub
dec
les
out
jmp
xchg
cmp
gs
in
sub
mov
add
jecxz
iret
pop
out
mov
leave
or
repnz
push
inc
mov
mov
adc
aad
mov
jne
add
ja
add
mov
rcl
and
shl
loopne
fcomp
add
push
bnd
mov
xor
movs
cmp
sub
ja
push
dec
dec
(bad)
mov
scas
xor
ja
leave
sti
mov
xchg
pop
sub
jae
cmps
mov
fcmovnu
cwde
and
and
loope
clc
pop
adc
or
lods
add
data16
lds
push
push
icebp
callw
(bad)
hlt
push
lock
sbb
xchg
out
imul
xor
xchg
not
mov
push
(bad)
sub
(bad)
pop
mov
outs
pop
jge
cli
push
cmp
xor
mov
jecxz
sub
dec
xchg
jmpw
and
mov
or
cld
out
pushf
or
pop
push
adc
mov
mov
dec
loope
cmps
das
jb
xchg
push
dec
mov
push
lods
jbe
stos
(bad)
jmp
mov
test
push
cmp
jbe
adc
sub
fwait
gs
mov
adc
push
clc
stos
jb
in
outs
sbb
or
outs
mov
bound
and
inc
neg
push
mov
push
dec
or
sbb
movs
jo
shr
lods
ins
fiadd
jmp
cmp
pop
std
adc
gs
sub
out
call
test
std
sub
into
stos
fistp
outs
daa
sbb
ja
mov
sub
or
inc
int3
leave
add
cmp
xchg
xchg
test
bound
jbe
shl
mov
pop
fst
cmp
jle
or
test
(bad)
xlat
neg
mov
add
dec
bound
pop
jb
fwait
inc
adc
and
push
mov
inc
jne
icebp
fdiv
or
lods
xchg
fbstp
xor
retf
out
jbe
mov
fdivr
and
stos
jmp
add
loopne
cmps
mov
pop
outs
mov
aam
clc
xchg
adc
(bad)
xchg
jecxz
sar
sbb
and
into
pop
dec
movs
push
push
adc
pushf
int
xchg
mov
cmp
dec
cmps
rcl
mov
xor
mov
and
iret
pop
loope
test
sub
mov
sbb
jmp
ror
fstp
test
fs
xchg
adc
sbb
mov
pushf
xchg
(bad)
lahf
ds
cmp
push
mov
inc
or
or
cmp
jne
adc
test
xor
jno
adc
ins
sbb
adc
xor
xor
xor
dec
in
jmp
mov
xor
xor
int3
das
int3
jnp
cmp
fdivr
and
mov
fld
xchg
mov
jae
adc
movs
enter
add
push
sbb
fs
std
loop
pop
lods
into
pop
push
ins
xchg
sahf
xchg
nop
stos
xchg
push
mov
pop
addr16
cs
sbb
shl
push
ret
push
out
out
jmp
lods
fwait
retf
jne
retf
inc
mov
inc
xchg
jbe
sar
mov
dec
pop
out
test
pop
ins
retf
scas
mov
cwde
daa
imul
aas
retf
fwait
inc
xor
addr16
aam
xlat
mov
movs
jecxz
mov
test
movntps
cmp
mov
lahf
ins
cs
and
pusha
sub
or
sbb
jbe
arpl
inc
pop
add
repz
push
rol
iret
sbb
in
test
fmul
movs
and
js
in
sub
(bad)
fadd
inc
pop
mov
mov
cmp
pushf
lods
lea
add
mov
fnstenv
mov
fwait
ret
xor
cs
add
fs
fucom
or
cmp
(bad)
aaa
out
dec
sahf
and
mov
sbb
outs
(bad)
mov
aad
loop
test
lea
xchg
pop
adc
int3
dec
inc
dec
das
into
pop
push
inc
fisub
pop
dec
mov
push
div
sub
adc
adc
sub
cmp
push
(bad)
je
and
ss
jnp
bnd
hlt
cli
cmp
daa
sub
inc
fcomp
push
cli
dec
stc
xor
daa
mov
dec
push
jns
push
movs
inc
(bad)
mov
test
test
cmp
out
sbb
test
mov
in
cmp
add
jle
sub
mov
je
sub
adc
psubw
dec
add
add
shl
cld
jmp
or
xchg
enter
sahf
and
lock
mov
and
pop
outs
xchg
jns
hlt
mov
or
sbb
fidivr
pop
dec
jo
fisttp
cmps
cmc
mul
or
and
and
rol
jecxz
sbb
pop
xor
imul
adc
pop
and
jns
jle
loope
loop
stos
xor
cmp
lahf
jmp
push
and
xchg
inc
scas
loopne
ret
sbb
mov
(bad)
adc
icebp
pop
cdq
jne
jo
mov
outs
cmp
sub
pop
cmp
dec
mov
(bad)
inc
rcl
cmp
mov
mov
les
cmp
dec
outs
movs
xlat
cmp
cmps
xor
sub
inc
pop
retf
inc
aad
imul
leave
lods
(bad)
in
popf
cmp
mov
adc
(bad)
fnstcw
sbb
call
dec
mov
push
xor
or
aaa
in
ins
aad
xor
jmp
mov
add
sub
stc
mul
enter
jecxz
inc
imul
repz
jno
pop
(bad)
aas
pushf
cmp
into
xchg
jmp
sbb
mov
or
lods
jmp
cmp
std
add
dec
test
(bad)
aad
push
nop
rcr
scas
or
and
and
and
outs
or
push
stos
pop
pop
aaa
sub
iret
mov
stos
inc
push
mov
gs
and
xchg
cld
push
jge
ret
add
jl
fdivr
push
(bad)
mov
nop
and
push
inc
add
cli
cmps
jno
out
adc
xchg
or
add
jnp
sti
xchg
movs
outs
loop
les
arpl
jp
sbb
outs
es
data16
or
push
jp
pop
adc
aas
pop
mov
sub
jl
lods
and
xor
neg
in
xlat
cs
(bad)
add
push
mov
pop
in
jmp
arpl
and
sbb
idiv
push
repnz
inc
popa
inc
cmp
sub
in
adc
push
add
sub
jp
mov
jne
mov
fsub
mov
fwait
mov
or
fisub
jbe
stos
leave
fdiv
dec
dec
cmp
xor
lods
inc
out
push
push
mov
sub
out
cmc
(bad)
xchg
mov
pop
or
fs
addr16
stos
test
cs
vshufpd
rcr
sbb
adc
in
ins
loopne
out
jns
mov
leave
loope
les
in
sub
(bad)
loop
mov
out
mov
or
pushf
pop
xchg
cmps
and
aas
fadd
xchg
push
adc
jecxz
out
add
jno
dec
fld
fidiv
xor
and
push
cmp
fisubr
push
mov
sbb
outs
mov
mov
test
call
pop
cmp
(bad)
xchg
jmp
xor
(bad)
mov
pop
in
jg
mov
xchg
test
jge
lock
add
xor
xchg
cmps
(bad)
dec
inc
mov
xor
out
cmp
dec
sub
call
sar
stos
lea
and
dec
enter
cmc
sahf
mov
mov
movs
and
xor
inc
adc
fwait
je
loope
je
shl
mov
or
xor
popf
mov
aaa
lahf
xchg
mov
(bad)
rcl
shl
pop
xchg
lahf
out
jecxz
xor
mov
and
mov
cmp
mov
popa
pop
pop
pop
add
movs
mov
rcl
loopne
pop
inc
(bad)
or
mov
cwde
js
adc
lock
fwait
shr
lock
dec
call
push
sbb
pop
iret
fadd
aad
sub
push
vldmxcsr
xchg
mov
popf
outs
ret
iret
xor
std
pop
sub
ja
xchg
push
std
jno
fmul
pop
out
sbb
inc
and
push
imul
mov
pop
in
adc
mov
push
mov
jecxz
imul
add
(bad)
mov
enter
in
pop
hlt
add
xor
ja
inc
adc
sbb
test
push
or
dec
xchg
ror
and
jp
adc
adc
adc
ss
and
mov
lods
pop
xor
pop
les
dec
push
(bad)
cli
cs
pop
mov
nop
jo
js
loop
push
movs
mov
and
fcom
mov
mov
ss
inc
out
and
idiv
xchg
daa
push
mov
jle
jle
xchg
loopne
cmps
bound
lods
mov
dec
mov
pop
inc
xor
mov
rcl
scas
(bad)
lahf
pushw
or
adc
jp
aas
mov
arpl
pop
imul
arpl
mov
scas
fisubr
or
jg
or
movs
xchg
push
cli
outs
dec
pop
mov
jo
jo
cmp
int
sbb
cmps
enter
popf
fldcw
mov
out
fcom
dec
in
out
jmp
stos
xor
dec
pop
cmp
fstp
test
out
popf
movs
push
(bad)
scas
push
lsl
in
sub
push
(bad)
mov
bound
add
cmp
mov
and
sbb
and
mov
pushfw
or
rcl
cmps
jnp
(bad)
bound
aaa
or
cmp
in
(bad)
sub
fst
test
adc
cmp
and
pop
retf
stc
mov
push
cli
and
mov
or
push
jno
pop
inc
test
rcr
xor
sub
pop
iret
push
and
out
in
push
unpckhps
jecxz
dec
fmul
xchg
scas
cdq
clc
pusha
ds
cmp
(bad)
(bad)
iret
jne
imul
js
cmps
in
jne
mov
aam
sub
mov
aam
scas
out
fcomp
stos
sbb
mov
dec
cmp
xchg
sahf
das
mov
ss
or
mov
repz
mov
add
sub
cli
push
cmp
dec
movs
jmp
sbb
jp
jmp
xor
(bad)
hlt
adc
loopne
sbb
mov
cmps
lds
pop
push
ret
adc
in
dec
bound
fwait
(bad)
mov
sbb
mov
push
(bad)
out
cmp
add
and
pop
adc
mov
jl
sahf
and
cld
push
fdivr
xor
push
out
inc
push
cmp
push
add
xor
pop
sbb
cmps
nop/reserved
movs
inc
sti
loope
call
cmp
sbb
sub
out
cmp
or
push
idiv
mov
cmp
dec
cmp
fsubp
lock
sub
(bad)
aad
inc
mov
fnstenv
mov
sahf
mov
ins
clc
mov
(bad)
leave
inc
mov
pop
pop
jo
sbb
inc
les
sub
cmc
fnstsw
(bad)
popa
outs
test
cmps
push
pop
shl
cmp
xor
xor
add
inc
or
add
shr
std
sbb
pop
pop
jge
jmp
cmp
sub
in
or
add
inc
sub
ins
(bad)
out
aas
fidiv
dec
push
push
popa
inc
dec
lods
mov
xchg
call
sar
sub
and
mov
outs
fidivr
outs
stos
xor
cmps
(bad)
xchg
dec
ins
pusha
fist
fidiv
push
and
test
sbb
lea
cmps
cmp
retf
cmps
int
add
cmp
mov
adc
imul
(bad)
mov
es
jbe
scas
fsubr
jae
xchg
pop
jae
in
mov
sti
dec
fbstp
and
and
fwait
inc
fstp
mov
and
xor
(bad)
(bad)
sti
scas
aas
fidiv
xchg
cmp
stos
std
push
jo
mov
cli
push
ret
loopne
outs
pop
stos
cld
sbb
push
dec
mov
mov
int
xor
push
dec
ret
or
mov
inc
cmps
mov
mov
cmp
cwde
and
push
lea
xlat
repz
shr
int3
push
push
pop
rcr
in
icebp
add
les
cmp
jge
ss
cmps
shl
hlt
cmps
or
aas
outs
jmp
in
mov
call
mov
mov
mov
fisttp
mov
outs
mov
fst
xor
mov
jl
jl
ret
mov
cmp
test
push
aas
in
retf
dec
cwde
movs
or
ret
out
test
mul
mov
push
mov
ds
fdivrp
stos
mov
push
xor
fs
cdq
pusha
fwait
in
test
mov
cmp
or
xchg
lahf
push
out
dec
repnz
push
lea
add
and
lock
push
icebp
stos
jb
jg
in
mov
pop
retf
pop
pop
rol
call
cdq
shl
mov
cmp
cdq
test
sub
push
lds
test
out
imul
ins
xor
push
stos
arpl
cmp
and
add
mov
cmp
into
out
cld
call
std
pop
imul
aaa
movs
movs
mov
inc
mov
and
shr
add
jno
outs
scas
(bad)
jo
ficomp
sbb
mov
out
in
jecxz
aaa
shr
iret
stos
daa
clc
add
and
pop
(bad)
gs
or
out
mov
cmps
(bad)
pop
int
in
push
div
or
ss
jmp
jae
mov
mov
adc
or
in
cmp
repz
inc
jns
dec
in
mov
mov
adc
jecxz
leave
and
outs
out
add
gs
push
jbe
jb
int
rcr
sub
mov
ss
shl
popf
mov
add
fst
lods
into
ret
add
mov
xor
fldpi
add
mov
push
xchg
lods
push
lock
jno
jmp
jnp
cmp
retf
(bad)
in
jecxz
or
ror
jmp
mov
xchg
movs
lds
mov
xor
pop
jae
cmp
jmp
pop
pop
pop
push
jbe
out
sbb
pop
pop
bound
fs
je
cwde
add
dec
push
sti
sub
xor
ja
sbb
xchg
mov
xor
dec
mov
sub
cmp
jmp
out
sub
in
loopne
mov
addr16
add
sub
imul
test
jno
or
sahf
jecxz
or
pusha
je
div
test
loop
test
mov
mov
jge
mov
push
or
aad
jp
jmp
arpl
je
cmp
add
jno
arpl
in
movs
inc
icebp
shr
sub
cld
rcr
and
mov
xor
sub
pop
cmp
jmp
cli
pop
jmp
call
sbb
jge
adc
jmp
test
mov
imul
or
sub
rol
lods
mov
jl
test
adc
or
mov
scas
stc
adc
in
aam
ins
ror
or
add
cmp
sbb
push
aaa
cmps
das
adc
pop
jmp
xor
das
xor
into
test
mov
pop
sbb
fs
mov
sbb
inc
dec
adc
add
popf
xchg
shr
popa
cmp
mov
xchg
cmp
mov
lock
adc
xor
arpl
or
or
adc
jnp
retf
inc
xor
js
dec
in
daa
xor
ret
imul
inc
push
sub
mov
rcr
push
cwde
popa
mov
lock
or
ret
jl
rcr
(bad)
inc
ds
and
xlat
adc
cmp
jecxz
mov
popf
aaa
sub
loop
push
pop
mov
(bad)
sahf
pusha
rol
xor
sbb
xor
and
mov
shl
(bad)
outs
mov
or
or
sbb
xchg
xor
outs
mov
scas
and
sub
push
jnp
or
lahf
fnsave
repnz
add
scas
mov
xchg
in
pop
lea
push
cmps
sbb
fsub
push
push
add
add
push
or
mov
sahf
fcom
sbb
add
jmp
dec
movs
cli
movs
inc
sbb
in
rcr
loope
fwait
adc
and
mov
popf
dec
xchg
mov
fdiv
cmp
fcomp
test
(bad)
xor
mov
jo
test
or
dec
loop
adc
hlt
lods
dec
out
aam
and
aam
lods
mov
or
fcom
ja
lock
mov
xchg
inc
mov
xchg
push
ret
repnz
jp
pushf
jmp
pop
sbb
stc
or
test
dec
mov
stos
push
into
sub
shl
jb
xor
mov
outs
or
push
daa
loop
jnp
or
push
pop
fild
(bad)
std
or
xor
mov
add
daa
xchg
cli
sub
xchg
scas
push
call
es
cmps
pop
mov
outs
and
xchg
jo
das
jmp
enter
pop
push
xor
fcom
test
je
mov
call
cmc
jns
xchg
push
inc
sub
mov
xor
xchg
ret
(bad)
jmp
aam
pop
pop
nop
dec
es
adc
inc
inc
inc
jno
inc
jb
popa
cmp
pushf
adc
xor
or
sti
(bad)
bndstx
jno
sar
outs
retf
ficomp
push
add
lods
push
push
ds
in
dec
fidiv
sahf
jb
mov
cmp
(bad)
int
adc
jbe
(bad)
xor
mov
jl
aaa
pop
xchg
outs
pusha
fs
xor
sub
(bad)
out
pop
mov
cwde
push
sbb
(bad)
fs
mov
jmp
inc
sbb
jbe
mov
repz
cmp
ins
pop
mov
mov
fs
add
ins
retf
sahf
xchg
add
mov
bound
inc
stc
mov
cmp
rcl
jb
sub
es
push
cmc
stos
ret
cmp
aad
cs
jae
lahf
xrelease
add
retf
xor
xor
pop
and
jmp
jmp
mov
int3
rcr
aas
jbe
push
mov
lds
pushf
inc
mov
call
ror
int
arpl
(bad)
ficomp
push
xchg
bound
push
mov
not
outs
jb
sub
and
push
pop
pop
in
and
mov
call
lds
push
mov
inc
inc
fmul
push
jge
pop
(bad)
inc
rol
addr16
dec
dec
pop
push
inc
jnp
stos
jmp
test
xor
aaa
call
adc
xchg
pop
jno
in
xchg
lock
icebp
outs
jp
test
das
int
push
stos
inc
push
pop
mov
scas
jge
sub
nop
jno
loop
cdq
cli
std
retf
and
or
(bad)
jmp
sub
xor
adc
ret
dec
in
idiv
sub
je
cli
aad
mov
push
cdq
int3
jle
loope
pop
and
inc
cs
xchg
out
xor
pop
call
jb
(bad)
xchg
inc
inc
enter
pusha
inc
std
hlt
xchg
xchg
adc
ins
ret
popf
mov
cli
leave
call
mul
xchg
xlat
std
movlps
pop
mov
std
xchg
and
repz
imul
xchg
fisttp
call
inc
pushf
mov
add
or
dec
jmp
jne
sub
gs
inc
and
sbb
psrlq
xrelease
pop
outs
mov
dec
or
mov
popa
out
jge
jg
inc
or
mov
or
mov
pop
loope
sbb
xchg
inc
dec
shr
jns
sub
add
pop
cmp
dec
push
in
test
stc
mul
and
xlat
mov
adc
das
mov
addr16
mov
pop
retf
pop
push
add
into
pop
out
stos
push
push
fst
sub
in
push
push
push
fwait
xor
add
or
mov
adc
lahf
into
mov
out
or
xor
test
icebp
out
call
cmp
ins
and
and
inc
call
xchg
fs
push
lods
daa
add
xchg
or
popf
or
nop
call
aad
sub
sbb
into
outs
or
bound
pushf
loop
std
xor
stos
and
push
adc
movs
xchg
shr
fimul
ror
lds
and
mov
mov
inc
pop
fwait
ret
dec
scas
mov
push
sbb
or
std
scas
sub
dec
dec
sbb
in
inc
sub
cmp
cmc
add
(bad)
scas
xlat
mov
ret
jns
adc
mov
add
cmp
mov
ss
add
jns
sahf
mov
inc
push
js
addr16
jb
cmc
cmps
pop
dec
jmp
inc
dec
sahf
or
pop
test
sbb
cmp
cmp
mov
ret
(bad)
les
jne
jae
cli
hlt
leave
(bad)
adc
daa
xchg
jb
cwde
div
stos
mov
fwait
cmc
pop
ss
pop
out
es
pmulhw
out
mov
loope
mov
jns
data16
ja
push
ficomp
lods
out
or
jg
fbld
mov
jle
or
neg
addr16
push
pop
mov
scas
or
nop
leave
cs
add
cdq
ret
mov
mov
adc
aam
inc
xor
sub
retf
cmp
fbstp
stc
push
jb
fidivr
bound
sub
jns
ins
sbb
sbb
sbb
imul
xchg
mov
in
cmp
xchg
add
fwait
in
xchg
test
push
out
lods
add
add
imul
jecxz
ja
icebp
dec
adc
cmp
adc
mov
or
ret
adc
mov
mov
leave
add
iret
mov
jecxz
push
pop
rol
imul
jne
call
push
fmulp
lahf
fimul
mov
dec
dec
in
imul
jp
call
pop
or
or
pop
xor
mov
call
cmp
out
cmp
sub
sbb
dec
xchg
xor
(bad)
xlat
dec
and
push
arpl
out
bound
pop
iret
retf
les
imul
stos
in
push
cmp
inc
push
mov
dec
jecxz
xchg
pusha
or
mov
sub
xlat
xchg
mov
fwait
rol
stos
daa
xlat
and
ds
adc
push
fisttp
outs
je
mov
mov
ucomiss
iret
icebp
ins
movaps
fild
and
xchg
sbb
jnp
cmc
sbb
addr16
pop
push
mov
mov
add
loop
sbb
jb
outs
std
not
fs
mov
or
pop
cdq
repz
push
pop
sub
xchg
sbb
out
xor
fxch
adc
pusha
mov
(bad)
repz
mov
mov
push
add
frstor
jo
push
outs
fs
sbb
fsubp
rcr
pop
scas
sub
in
cli
sar
sti
jns
xor
mov
mov
jl
cmps
and
add
cmp
sbb
pop
sbb
pop
adc
out
aad
or
push
ficomp
pop
pop
leave
scas
pop
inc
arpl
outs
test
cdq
int
and
adc
cmp
mov
mov
sub
cmp
inc
inc
retf
loopne
repz
pop
(bad)
or
aad
test
popf
jo
cwde
mov
mov
push
sar
push
imul
sub
mov
sub
(bad)
cs
jo
repz
test
or
sub
pop
pop
mov
int3
inc
mov
popf
scas
shl
ror
or
jg
push
idiv
dec
inc
(bad)
adc
out
pop
mov
cs
int3
push
rcl
pop
call
inc
add
and
mov
test
pop
std
mov
and
add
push
ja
push
popa
xchg
adc
xchg
mov
scas
or
aad
push
and
mov
test
leave
mov
sbb
push
push
or
sbb
push
mov
lods
xchg
push
sti
cs
fidivr
in
xchg
dec
call
pop
out
(bad)
jbe
movs
(bad)
lods
adc
sbb
sar
pop
inc
xor
mov
dec
sub
jne
jl
movs
adc
adc
out
cmc
mov
rol
sahf
xchg
adc
dec
or
push
dec
add
les
inc
push
call
adc
adc
mov
push
movs
push
push
xor
sub
fisub
stos
xor
das
dec
cmps
(bad)
fidivr
pop
sbb
les
mov
pop
lock
ds
lahf
adc
neg
cmp
(bad)
mov
fidiv
push
loope
jecxz
mov
cmp
mov
adc
mov
pop
cmps
les
sbb
mov
and
lahf
sub
adc
inc
and
test
mov
xlat
and
cwde
test
inc
lods
icebp
cwde
nop
loopne
add
das
xor
push
cwde
sar
mov
fwait
mov
xor
retf
inc
loope
cmp
xor
and
(bad)
into
cmp
ret
ffreep
push
fwait
shl
pop
rcr
pop
sbb
retf
ja
cmp
es
arpl
pop
cmp
sbb
rcr
jg
jmp
repnz
arpl
popf
jb
sti
aas
or
imul
int3
clc
jbe
outs
lds
retf
ins
inc
je
adc
ror
xor
call
aad
fiadd
inc
sub
ins
(bad)
gs
jae
adc
cmp
push
in
xchg
out
sbb
test
test
mov
icebp
sbb
fwait
shl
pop
out
or
out
cmp
popa
iret
jo
test
cli
xor
retf
repz
fstp
add
mov
loope
xchg
cdq
ins
mov
sbb
add
pop
lods
ds
dec
imul
fldenv
out
shl
fistp
bound
(bad)
add
in
aad
loope
or
retf
arpl
ss
jnp
call
shl
cmps
out
pop
inc
leave
in
retf
loopne
aas
and
inc
in
sti
add
out
fisttp
push
js
call
dec
or
sub
lock
or
mov
mov
mul
fsub
pop
mov
add
bound
jle
addr16
xchg
jmp
or
nop
inc
mov
scas
mov
repnz
clc
sbb
inc
popf
xchg
into
call
imul
jae
jns
fwait
outs
mov
in
cmps
xchg
iret
xchg
rol
dec
scas
retf
jns
mov
pop
mov
mov
div
sub
jnp
rol
fsub
loope
xor
or
and
push
xor
dec
out
push
cld
sub
(bad)
cli
movs
push
les
leave
movs
add
mov
add
je
cmps
fstp
add
xor
ficom
mov
dec
xor
jo
(bad)
aas
pop
mov
xchg
enter
sar
inc
aad
xchg
mov
ins
cli
rcl
mov
xchg
arpl
jbe
inc
adc
dec
pushf
xor
cmp
sbb
mov
icebp
jecxz
mov
icebp
mov
mov
outs
push
fwait
mov
pop
call
ja
les
call
cmp
inc
cmp
retf
enter
dec
iret
mov
enter
and
dec
shr
fmul
jb
mov
xchg
cmc
mov
shl
add
inc
jmp
push
call
(bad)
mov
push
(bad)
mov
push
xlat
out
imul
js
mov
push
shl
popa
dec
add
ficomp
jmp
leave
sub
clc
fwait
sub
jb
in
jbe
pop
xor
pusha
loop
outs
fst
mov
setae
cli
xchg
and
mov
loopne
mov
mov
xor
dec
in
pop
push
sbb
pop
iret
call
pop
push
(bad)
fcmove
add
test
lds
ret
push
cmp
jns
jmp
(bad)
fnstenv
pop
rol
push
pop
mov
mov
mov
xor
(bad)
mov
mov
ss
pop
(bad)
add
add
sbb
(bad)
iret
or
outs
js
outs
call
sbb
sub
aam
repnz
or
fisubr
shl
add
sub
icebp
mov
dec
lock
nop
pop
jae
popf
movs
and
jmp
jne
push
mov
mov
outs
xlat
or
dec
fnstenv
in
jmp
imul
pop
pop
fst
dec
loopne
repnz
aam
mov
outs
ret
push
inc
sbb
int
gs
mov
popa
sub
or
rol
xchg
pop
dec
mov
jmp
mov
loop
out
pop
jmp
stos
adc
inc
nop
sahf
stos
sbb
add
mov
cmps
hlt
pop
(bad)
(bad)
jbe
adc
dec
movs
jmp
test
push
mov
sbb
outs
pushf
test
popa
push
int3
in
mov
add
xor
lahf
or
lahf
mov
in
pop
shl
lock
mov
scas
cli
(bad)
les
add
sahf
int3
jns
outs
popa
adc
and
push
dec
dec
push
hlt
fimul
add
sub
scas
out
add
fimul
(bad)
addr16
lods
mov
imul
ss
mov
ins
das
scas
push
daa
push
push
test
gs
push
sbb
sbb
dec
addr16
pop
out
fild
jns
mov
adc
mov
pusha
adc
jle
mov
xor
mov
dec
mov
adc
dec
leave
imul
ins
in
out
es
mov
movs
push
dec
xchg
aas
fxch
adc
add
adc
mov
add
repz
pop
loope
mov
out
rcr
cmp
mov
mov
or
mov
ret
out
cmps
mov
(bad)
mov
mov
adc
pusha
mov
mov
movs
int
es
and
mov
add
imul
outs
dec
cmps
pop
mov
dec
js
fdiv
out
shl
or
retf
or
xlat
push
ins
imul
or
and
pop
ror
bound
xchg
(bad)
repnz
loop
xor
dec
dec
sar
mov
ret
sbb
scas
mov
and
fiadd
mov
dec
movs
xlat
dec
cmps
cmp
jb
push
and
cmp
sti
in
js
clc
dec
cmp
test
xor
out
adc
scas
mov
cmps
into
sbb
retf
sub
aas
pusha
sbb
mov
xchg
jp
sar
shr
cli
jg
push
mov
test
mov
push
cmp
cli
push
pop
push
add
shl
inc
inc
call
mov
retf
jp
adc
and
fiadd
cmp
mov
enter
mov
push
push
pop
stos
cli
out
mov
xlat
cmp
mov
ftst
femms
jp
mov
lea
loopne
lds
(bad)
mov
dec
mov
pop
sub
xchg
xchg
xchg
sub
xchg
sub
add
adc
inc
inc
jns
outs
out
xor
add
xor
jle
mov
and
dec
mov
in
gs
stos
mov
pop
sbb
mov
ror
sbb
mov
push
imul
mov
dec
xchg
jb
sbb
rcr
jp
mov
adc
pop
int
or
and
cmp
cmps
mov
test
repz
add
out
xor
ds
dec
mov
(bad)
test
xor
lds
sbb
lds
std
imul
out
(bad)
mov
daa
dec
and
pusha
rcr
stos
loope
ins
loopne
ins
xor
nop
das
and
sub
icebp
fmul
int3
cmp
inc
cwde
shr
(bad)
jl
sbb
std
push
cmp
imul
mov
dec
cdq
push
jmp
cmp
jg
push
add
dec
sbb
retf
call
mov
bound
and
add
xor
push
pop
and
mov
adc
adc
ret
xchg
cmp
lods
dec
mov
jl
and
test
mov
sub
xor
sbb
sar
and
pop
std
out
loope
mov
xor
lahf
retf
(bad)
pop
xchg
fcomp
scas
jne
mov
movs
mov
adc
test
leave
adc
sbb
es
cli
nop
push
add
add
dec
clc
lods
popa
stos
dec
ins
add
enter
(bad)
stos
push
test
jmp
push
pop
bound
sbb
adc
jo
(bad)
ds
inc
jg
xchg
jl
inc
pop
jae
sbb
push
(bad)
mov
cmc
mov
pop
(bad)
cmp
imul
jns
inc
es
das
jb
cmp
jne
and
pop
jae
iret
aas
sbb
jle
xchg
xchg
cdq
mov
sub
(bad)
sti
ss
sub
pop
mov
dec
adc
push
jg
inc
stos
sub
push
test
popa
movaps
aaa
xchg
(bad)
ins
sti
jmp
xchg
push
mov
mov
sbb
push
pushf
mov
xor
mov
or
pop
inc
push
xchg
xlat
pop
mov
xchg
out
cmp
daa
add
mov
dec
jnp
fisttp
xor
out
cwde
mov
mov
rcl
cmp
xchg
cmp
call
sub
inc
sub
(bad)
pop
jb
(bad)
loop
rcr
xchg
pop
jae
xlat
push
jbe
inc
jmp
adc
mov
jns
mov
jae
adc
push
mov
std
xchg
mov
cdq
scas
mov
movs
cmp
cmp
push
out
jl
daa
mov
or
push
int
je
pop
std
push
je
and
jno
das
cmp
add
(bad)
and
xchg
inc
sti
pop
push
jmp
test
std
or
fmulp
inc
das
cmps
cwde
lock
xchg
(bad)
jle
and
inc
push
leave
mov
jae
lock
test
(bad)
pop
mov
fcmove
jnp
dec
push
push
sbb
pop
ins
mov
loop
mov
cld
or
lock
cmp
(bad)
and
fwait
add
pop
sar
mov
into
mov
fcomi
retf
mov
fidivr
or
imul
or
jbe
xor
ss
hlt
sbb
mov
push
xor
sbb
add
(bad)
ja
lods
or
pushf
sahf
mov
inc
or
pop
xor
or
xor
je
add
mov
jge
fimul
fst
xor
loopne
xor
pop
mov
mov
sbb
pop
bound
aaa
pop
mov
mov
daa
arpl
add
inc
retf
pop
jecxz
in
add
cmps
inc
es
sub
sub
mov
aaa
adc
shl
movs
xor
jb
lahf
mov
add
cs
push
fist
mov
dec
xor
sahf
mul
xchg
xchg
leave
inc
in
mov
cmps
jb
sti
imul
and
mov
add
xor
scas
cmps
or
icebp
ins
retf
aam
push
fs
idiv
pop
or
jne
(bad)
xlat
sub
stc
dec
inc
cdq
pop
in
fnstsw
scas
rcr
in
and
js
cdq
repnz
das
jmp
stos
mov
ins
lahf
loopne
aad
inc
pop
inc
sbb
pop
inc
mov
adc
push
fnstenv
mov
jb
jbe
lahf
ins
stos
cdq
loop
mov
dec
rcr
int
sbb
imul
lods
add
inc
sub
jle
jecxz
pop
push
push
jnp
test
push
fucomi
fsub
and
jb
popa
cmp
xor
mov
fnsave
and
add
fcom
lea
xor
fidiv
(bad)
mov
or
mov
in
xor
xchg
dec
mov
stos
aam
aaa
jp
test
lods
add
aam
cmp
retf
jo
xor
imul
stc
mov
imul
or
lea
pusha
jp
(bad)
in
dec
imul
fdiv
cmps
ja
jne
pop
jecxz
mov
and
adc
push
std
push
imul
xor
cmps
ret
push
fisubr
push
inc
loopne
int3
dec
and
fwait
add
sbb
push
adc
stos
(bad)
adc
pop
out
mov
push
popa
lods
dec
shr
lahf
fwait
and
mov
lock
mov
mov
cmps
adc
inc
dec
mov
sti
out
arpl
adc
fst
jnp
fst
scas
jmp
inc
cmps
mov
rcr
scas
inc
sbb
jo
mov
cmp
and
icebp
jmp
ss
mov
fcmove
fdiv
bound
xor
aam
(bad)
(bad)
pop
xor
xor
and
fbstp
push
pop
addr16
sbb
pop
mov
cmp
inc
dec
adc
inc
mov
mov
inc
ss
lock
mov
xor
push
in
leave
cmp
(bad)
jmp
xlat
push
jo
ds
push
mov
in
sbb
shr
arpl
xchg
push
dec
stc
xor
hlt
pop
sahf
dec
stc
cli
mov
or
fwait
xchg
push
sub
sub
repnz
pop
int
pop
mov
rcl
inc
pop
jl
pop
enter
pop
sub
and
(bad)
jecxz
retf
ficomp
pop
jno
js
xchg
cmp
inc
int3
mov
push
sbb
or
test
push
mov
aad
idiv
fmul
and
test
xchg
bnd
aaa
xchg
mov
pop
ret
jl
jle
retf
arpl
push
ss
fsub
or
loop
or
fild
(bad)
inc
xor
out
push
mov
dec
fcomp
and
mov
sub
into
ja
jp
jno
xchg
cmp
imul
pop
pop
jns
cmps
in
test
inc
gs
js
jge
jmp
xchg
ss
jns
mov
and
pop
add
loop
inc
mov
sbb
repnz
pop
jp
ss
shl
gs
cmp
dec
push
hlt
pop
hlt
or
jb
xchg
js
je
pop
xor
(bad)
xchg
mov
repz
or
and
je
pop
loop
mul
inc
or
push
hlt
push
jl
sub
enter
xchg
mov
sbb
mov
mov
jg
pop
push
inc
call
call
fadd
add
and
pop
in
stos
adc
sub
inc
jnp
pop
xchg
gs
xor
mov
aam
cdq
movs
repnz
cmp
stos
cmp
bound
inc
mov
push
int
xchg
idiv
pop
in
movs
and
fcom
imul
ret
pop
movs
push
pop
jle
mov
adc
sbb
xor
test
fidiv
lea
dec
test
jmp
and
cmp
fdivr
jbe
dec
mov
mov
or
sbb
neg
add
fld
test
sub
mov
mov
fisttp
repz
and
test
ds
aaa
(bad)
cmp
aas
ror
sbb
mov
icebp
add
push
xor
pop
test
nop
mov
imul
cmp
test
push
push
or
pop
xchg
mov
(bad)
stos
shl
jp
cmc
bound
sub
mov
je
(bad)
ret
dec
fdivr
mov
xor
jb
adc
xor
push
cmp
pop
fsubr
and
leave
mov
mov
je
fdiv
sub
add
jmp
and
test
sbb
repnz
and
cdq
mov
dec
(bad)
rcr
dec
pop
dec
xchg
pop
shl
cmp
xchg
and
and
mov
call
fwait
and
dec
pop
xor
icebp
inc
or
adc
fdivr
dec
pop
sahf
mov
jb
cmp
and
xor
mov
adc
ja
cmps
and
or
mov
and
xchg
mov
jge
push
ret
jmp
jp
pop
jbe
add
cmp
int
jmp
mov
add
inc
cmps
ret
inc
sar
pushf
jmp
shl
daa
inc
mov
dec
(bad)
add
js
add
lods
xor
enter
ins
xchg
or
rcl
mov
popf
repnz
outs
dec
jb
ret
pop
cli
mov
or
outs
fisubr
pop
xor
jbe
ins
test
sub
ds
xlat
into
aad
call
rcr
fs
sub
and
xchg
pop
shl
adc
sbb
jbe
inc
cmp
mov
(bad)
in
jge
mov
imul
cmp
or
jnp
xchg
push
les
xchg
jg
jecxz
xor
(bad)
retf
ficom
popa
mov
loop
jmp
imul
sbb
cwde
sbb
push
cmp
pop
test
pushf
inc
popa
int
imul
pop
xor
push
mov
jle
cmp
shl
mov
iret
xchg
push
stos
cmp
enter
arpl
sbb
shl
(bad)
pop
dec
cmp
xchg
stc
stos
add
das
pop
jge
rcl
ja
and
mov
and
ret
and
addr16
dec
cli
and
les
retf
mov
repnz
shl
mov
out
and
test
mov
clc
xor
enter
aad
cmp
xchg
call
pop
ja
push
jmp
fwait
and
pop
cmp
jbe
inc
inc
dec
mov
ins
push
jmp
sub
aas
out
scas
pop
push
xchg
xchg
in
inc
and
sub
mov
ja
cmp
cmp
pop
outs
cmps
and
xor
jg
inc
hlt
inc
cmps
jp
and
inc
jns
jb
add
xchg
xchg
sbb
adc
fsubr
pop
cmp
sub
lods
jne
in
and
in
jae
push
jmp
sbb
sbb
sbb
sahf
mov
lods
jl
dec
ss
xchg
sub
push
adc
or
mov
jne
cld
add
mul
jmp
inc
mov
out
inc
inc
mov
push
fisubr
dec
sbb
xchg
sub
rol
(bad)
cld
push
add
and
ins
outs
out
jmp
mov
dec
aad
jl
add
adc
dec
mov
jmp
test
xor
xchg
jo
cmp
pop
into
xchg
aaa
jo
(bad)
dec
retf
cli
mov
nop
sbb
mov
stos
jp
pop
sub
test
(bad)
std
maxps
cld
pop
out
or
lahf
add
inc
or
pop
stc
or
xor
enter
xlat
stos
aad
movs
push
mov
jp
push
mov
std
mov
dec
dec
das
ret
out
mov
or
dec
or
or
inc
ins
or
call
test
push
imul
add
ds
icebp
test
mov
jg
dec
jge
ja
pop
rol
dec
jb
cmp
xor
neg
jmp
jmp
pusha
pop
push
bound
retf
lock
or
out
adc
aas
push
sbb
and
cld
div
loopne
push
out
push
xchg
xor
out
cs
or
mov
fidiv
into
push
sub
jo
dec
xchg
dec
loop
jmp
hlt
popf
cdq
xchg
add
lea
lods
cld
jo
or
jo
jmp
das
fldenv
xor
xchg
aas
sbb
add
clc
push
add
mov
je
stc
xchg
dec
mov
jecxz
xchg
(bad)
sbb
test
movs
scas
aam
stc
dec
adc
ds
mov
es
jge
(bad)
mov
ret
jg
test
mov
pop
adc
mov
out
stos
repz
adc
xchg
cli
mov
sbb
xchg
sub
dec
test
scas
arpl
hlt
xchg
dec
sub
cmp
mov
hlt
mov
push
fiadd
xchg
aas
loope
les
nop
mov
mov
mov
add
push
sbb
pop
mov
push
jle
aas
adc
jmp
lahf
mov
or
imul
hlt
daa
add
pop
mov
cmp
add
mov
adc
pusha
mov
into
mov
dec
mov
(bad)
movs
mov
xor
fwait
lahf
test
mov
movs
or
rcr
add
lds
fild
enter
js
jns
shr
sti
repz
arpl
test
cmp
sahf
call
mov
push
out
and
ins
sti
push
inc
daa
add
(bad)
lods
inc
adc
sub
or
or
shr
jmp
fld1
loopne
mov
xchg
fcom
cmp
pop
leave
cmp
out
mov
cs
pop
fwait
xchg
jb
jmp
add
add
cmp
std
add
pop
push
mov
(bad)
cwde
sahf
jmp
sbb
popf
sub
stos
fbld
repz
enter
cmp
dec
inc
fdivr
ret
aad
sbb
fsub
xchg
rcl
ja
pop
repnz
xor
lods
mov
jo
push
out
les
xchg
scas
adc
xor
fld
cmp
cmp
adc
fcomp
shr
jo
push
jg
out
inc
lahf
int3
pop
lock
ret
mov
inc
mov
retf
mov
(bad)
movs
dec
inc
jns
mov
js
and
mov
sbb
sub
into
(bad)
outs
jp
cdq
or
mov
add
xchg
or
xlat
mov
arpl
mov
jnp
pop
jno
aaa
daa
ret
jg
neg
fisttp
mov
in
test
cs
mov
or
(bad)
cwde
xor
mov
in
add
je
fs
sbb
mov
cmp
fst
out
pop
push
sbb
mov
mov
sbb
pop
cmp
dec
xchg
stos
shr
jl
mov
sub
sbb
ins
dec
ins
add
loope
push
add
mov
hlt
mov
add
out
mov
fsubrp
sub
push
push
(bad)
shl
mov
test
mov
inc
add
and
mov
out
adc
add
loopne
and
and
sti
movs
bound
pop
(bad)
out
sub
retf
fwait
shl
or
outs
adc
mov
shr
out
cli
jns
inc
call
mov
lds
pusha
js
pushf
ficom
js
push
out
stos
or
loope
jmp
pop
pop
aam
cmp
sbb
lods
aam
fsub
add
ret
adc
iret
enter
stos
jecxz
cli
xchg
or
pop
loopne
mov
pop
adc
adc
xor
pop
(bad)
outs
jg
sbb
js
(bad)
cmp
xor
sahf
shl
ds
jge
push
sub
or
mov
mov
out
sub
sbb
xchg
stc
std
mov
cwde
mov
xor
or
xor
daa
xchg
les
mov
inc
xor
and
add
dec
mov
xchg
(bad)
xchg
cmp
ins
scas
sub
hlt
(bad)
mov
rol
sar
dec
dec
push
inc
mov
sub
pop
adc
mov
dec
int
xor
icebp
neg
sbb
or
adc
or
lahf
mov
lds
push
jg
or
(bad)
call
ret
test
pop
cwde
sub
push
adc
pop
pusha
outs
mov
xchg
sbb
gs
cmc
xor
mov
xchg
(bad)
arpl
out
cmp
mov
jp
jmp
fwait
xchg
leave
sub
lea
aam
xchg
inc
je
scas
adc
cmp
mov
fisttp
cmc
div
test
dec
and
dec
xchg
xchg
mov
dec
data16
movs
and
dec
mov
ror
imul
and
outs
imul
jmp
jg
and
cld
sbb
mov
mov
repz
inc
inc
dec
loope
test
jmp
sbb
dec
lahf
and
loope
adc
pop
in
data16
repz
push
mov
movs
and
daa
or
or
inc
sub
sahf
inc
sbb
cwde
lods
dec
cmps
adc
add
retf
popf
shl
aad
cmps
call
mov
out
in
jno
test
cmp
sbb
dec
jmp
es
(bad)
retf
(bad)
cmp
sub
jae
and
pop
fdivr
movs
dec
sbb
xor
lods
pop
into
cs
xchg
push
pusha
pop
push
(bad)
popa
cmp
jb
sahf
in
pop
or
dec
sahf
je
mov
div
dec
push
mov
shr
or
push
data16
and
mov
sub
pop
rcl
sub
mov
sub
in
mov
pop
stos
out
mov
imul
aas
repz
mov
fbld
ins
inc
push
retw
mov
lock
mov
add
xor
jne
retf
dec
push
xchg
cld
sub
and
inc
cmc
xor
out
in
leave
dec
sub
icebp
or
xor
fst
push
push
leave
dec
push
out
mov
clc
pop
or
aam
mov
out
sbb
hlt
cwde
test
sub
sti
pop
outs
and
mov
push
scas
sahf
and
pop
jl
adc
popf
arpl
icebp
mov
in
dec
out
cmp
jne
and
inc
je
fldenv
push
out
pop
jno
xchg
mov
adc
push
shl
and
lea
and
sub
out
push
sub
ss
(bad)
es
jo
mov
fs
dec
mov
xchg
sahf
imul
ss
sbb
mov
xchg
ds
pop
jno
mov
jmp
fpatan
jge
dec
mov
inc
inc
(bad)
pop
loop
dec
xchg
pop
fldenv
inc
and
inc
test
inc
jnp
loop
arpl
xor
inc
mov
iretw
push
je
rol
(bad)
mov
or
aad
sti
sbb
pop
cmps
cli
xlat
cmp
pop
jecxz
pop
dec
lea
inc
mov
mov
clc
and
loop
sti
sub
ror
jo
and
add
ficomp
add
mov
dec
mov
push
or
adc
push
xchg
inc
cs
sbb
(bad)
aad
ja
jmp
xor
scas
clc
int3
movs
xor
pop
into
mov
fwait
ret
pop
icebp
repz
aad
dec
in
fcmovu
mov
jle
enter
cmps
imul
cmp
out
sbb
inc
dec
sbb
daa
arpl
adc
(bad)
bound
movs
xchg
in
cld
sbb
clc
add
neg
test
sbb
xchg
nop
shl
ss
iret
inc
aam
push
sbb
xor
push
mov
cmps
or
xchg
pop
xor
mov
sub
mov
push
push
inc
push
fstp
idiv
cli
xor
iret
inc
inc
pop
mul
outs
jge
cdq
popa
test
inc
xlat
xchg
jb
inc
sub
jbe
jb
xor
push
push
and
and
mov
ret
add
dec
in
or
lahf
sub
ins
aad
dec
push
and
jg
test
(bad)
fsub
mov
adc
push
dec
adc
jmp
rcr
repz
mov
xchg
aad
add
daa
fisttp
clc
xchg
inc
mov
test
mov
cs
lods
dec
xchg
aad
stos
inc
pop
dec
xchg
in
lock
(bad)
enter
push
ret
mov
cli
or
outs
sub
test
(bad)
mov
xor
inc
xchg
xor
jle
jge
jg
xor
adc
jno
adc
xchg
sbb
test
add
mov
retf
cmps
mov
sysenter
xchg
mov
mov
dec
std
lods
xchg
jmp
arpl
call
inc
into
mov
stos
imul
push
mov
dec
mov
or
xor
sbb
sbb
stos
pop
xchg
fnsave
stos
and
jmp
push
inc
sbb
lea
dec
cmps
mov
adc
mov
mov
jecxz
mov
pop
jno
mov
dec
mov
mov
clc
push
sbb
jl
mov
in
mov
aad
jl
pusha
loope
int
mov
mov
addr16
mov
jo
popa
loop
test
movs
mov
sub
stos
mov
jbe
pop
push
pop
repnz
aas
(bad)
in
dec
ficom
cmps
mov
sub
fcomp
jp
outs
jbe
dec
lea
add
clc
cdq
add
mov
enter
pop
cwde
and
ins
outs
lods
cmp
fadd
xchg
jae
ret
xchg
popa
xchg
dec
sar
aam
hlt
sti
xchg
xchg
sub
add
mov
or
xor
ret
mov
xchg
ja
jl
inc
outs
in
xchg
not
shl
imul
xor
js
adc
xor
adc
in
sub
jno
xor
mov
jle
aas
(bad)
(bad)
xchg
(bad)
loope
loopne
ins
xchg
jle
nop
adc
add
push
aad
inc
push
cmps
fcom
inc
(bad)
div
addr16
clc
jle
jno
cmp
or
xchg
jmp
pop
sbb
xor
cmp
push
xchg
and
sbb
jmp
cmp
pop
pop
lea
test
jl
and
xor
stos
sbb
xor
xchg
das
sbb
popa
cld
mov
(bad)
fnstsw
movsx
lock
scas
aam
inc
sbb
scas
add
pop
mov
jae
adc
mov
or
(bad)
pop
call
pop
into
mov
pushf
punpckhdq
xchg
mov
int3
stos
mov
sub
jo
test
xor
xchg
or
aad
pusha
push
xor
xor
rol
out
fild
jg
xor
lock
inc
in
jns
popa
cmp
sbb
cmps
es
mov
into
xor
int3
mov
jp
xchg
fnstenv
scas
lods
cs
lahf
xor
int
push
mov
stos
xor
arpl
sub
adc
rol
lahf
gs
mov
inc
sub
mov
ret
call
push
into
inc
cmc
and
fcmovnbe
xchg
nop
cs
mov
jge
jg
inc
sbb
mov
xor
hlt
xchg
sub
sbb
xchg
mov
mov
ret
leave
outs
int
loope
dec
cmc
into
mov
dec
and
or
xchg
inc
out
in
inc
sahf
or
mov
adc
les
adc
jecxz
or
mov
fdiv
push
push
and
cmps
push
xchg
cmp
jge
mov
cmp
out
fidiv
mov
fbstp
test
in
pop
ret
aam
inc
pop
jl
movs
adc
ret
fmul
dec
push
mov
bound
retf
lock
add
pop
pop
mov
popf
sub
mov
test
pop
push
cmp
out
adc
and
dec
jg
jl
(bad)
jne
pop
outs
mov
rcr
ret
call
push
cmp
lahf
push
and
ds
cld
(bad)
(bad)
mov
mov
(bad)
out
add
mov
sbb
ret
mov
lahf
xchg
or
cmp
sbb
rcl
test
sub
mov
adc
movd
imul
movs
out
xor
test
jns
mov
inc
xchg
sar
jge
sar
mov
adc
lock
xchg
push
fwait
push
jnp
and
fmul
call
nop
or
jns
jge
xchg
xor
mov
imul
ja
punpcklbw
retf
mov
(bad)
(bad)
aaa
out
push
jbe
pop
pushf
mov
fcom
shl
pop
mov
mov
mov
dec
mov
mov
adc
jmp
push
inc
lahf
ins
cmp
fstp
ret
out
lods
retf
movs
and
sub
bound
mov
leave
add
inc
popf
mov
test
or
out
shr
clc
(bad)
icebp
jno
jno
dec
xchg
sub
fs
cmp
adc
enter
icebp
aaa
mov
push
stos
mov
stos
mov
in
and
idiv
std
add
mov
mov
lahf
into
xchg
icebp
loopne
jns
jmp
xchg
or
ins
jae
sub
jle
and
into
sub
dec
mov
mov
or
bound
jmp
or
scas
mov
sub
cld
cdq
or
sub
or
fstp
fmul
cmovne
dec
cmps
pop
rcl
hlt
inc
icebp
inc
adc
add
out
lds
lock
mov
out
rcr
in
pop
jg
mov
push
ins
lock
inc
scas
and
and
mov
inc
adc
sar
(bad)
(bad)
mov
push
and
dec
mov
fld
ds
enter
dec
xchg
push
mov
xchg
xchg
xor
mov
push
shl
hlt
hlt
gs
push
adc
outs
push
adc
or
es
movs
or
inc
fs
jo
pop
jle
stc
pop
push
fstp
test
iret
aad
jge
push
xor
mov
add
mov
setl
sbb
les
sar
sub
sub
sar
popa
out
adc
sbb
lea
out
mov
xchg
push
fnstenv
shl
xchg
pop
mov
cmp
adc
and
cmc
ret
jno
mov
xchg
(bad)
mov
cmp
mov
add
retf
mov
shl
adc
les
nop
es
jp
bound
mov
jae
rcl
out
pusha
dec
pop
mov
jns
xchg
int
push
mov
test
mov
cmps
xor
sbb
hlt
mov
jne
inc
push
data16
sub
idiv
add
sub
push
xor
fldenv
aad
stos
mov
stc
adc
and
pop
or
in
mov
mov
popa
scas
es
adc
pop
jno
pusha
shr
push
and
(bad)
in
sub
(bad)
pop
and
or
jmp
cmp
ret
(bad)
pop
inc
call
add
mov
shl
pop
xor
xor
xchg
jns
mov
shr
nop
or
in
adc
aam
scas
idiv
(bad)
push
leave
cdq
dec
or
jle
xor
sub
outs
out
js
add
push
or
icebp
lahf
mov
add
cmp
push
push
daa
and
repnz
add
mov
test
jmp
xor
dec
mov
inc
mov
ret
imul
jmp
cld
aad
fcomp
xor
ja
ja
and
inc
test
xchg
in
repz
inc
xor
and
jb
call
sub
xor
pop
mov
retf
cmp
sub
shl
fsubr
(bad)
(bad)
out
and
lahf
dec
dec
jmp
adc
in
stos
dec
aas
fnclex
push
add
sbb
pop
fisub
or
push
shrd
cmp
cmp
cwde
xor
sahf
out
and
xchg
nop
xchg
jecxz
call
dec
test
dec
cwde
ds
inc
call
sbb
xor
scas
movs
in
enter
fwait
add
aam
popf
div
in
mov
or
xchg
lods
ret
add
lods
dec
loope
aam
not
fldenv
movs
dec
repz
imul
outs
and
sub
pop
cli
jae
shl
dec
or
sti
stos
sti
inc
sub
and
push
mov
fwait
into
outs
(bad)
js
dec
mov
or
mov
bound
add
adc
xlat
rol
mov
(bad)
push
fwait
lods
dec
xor
pop
lock
or
xor
cmp
xchg
xchg
xchg
(bad)
mov
sbb
cli
inc
fstp
(bad)
out
push
inc
stos
cmp
cmp
stos
sub
dec
imul
popa
scas
xlat
mov
popa
pop
xor
int3
ret
idiv
ficom
mov
mov
cmp
inc
(bad)
cmp
enter
adc
mov
es
xlat
ret
mov
es
dec
mov
iret
sbb
sbb
sub
gs
in
jp
fidiv
xor
lea
xor
inc
imul
add
in
fdiv
shl
retf
sbb
xchg
(bad)
xlat
pop
jnp
clc
jne
rcr
pop
sub
or
dec
jo
imul
xor
jmp
repnz
aad
dec
aad
add
out
imul
cld
jg
int3
sti
pop
sub
cmps
rcr
push
fstp
jno
stc
mov
movs
xor
cmps
ja
push
daa
sbb
pusha
inc
push
xchg
test
aaa
rcr
sbb
or
cmps
cmps
mov
adc
mul
xchg
jmp
mov
or
dec
and
jle
dec
xchg
(bad)
in
outs
dec
sub
movs
xor
sub
mov
repnz
add
es
jecxz
jecxz
push
shl
into
jae
mov
push
sar
js
mov
stos
mov
xchg
jmp
pop
test
push
inc
rcr
mov
mov
fsub
dec
retf
xlat
mov
xor
xchg
or
push
hlt
inc
call
ficom
das
jge
cmp
cmp
cmp
stos
add
adc
imul
sahf
out
cs
fcmovb
mov
test
out
cmps
nop
jg
out
pop
adc
cmp
popf
ret
jno
xchg
inc
daa
xchg
jnp
push
aas
xor
jg
add
cmp
adc
mov
lods
mov
lea
repz
inc
or
jg
cmp
and
in
inc
or
jp
out
test
jb
adc
(bad)
retf
jns
jnp
sub
push
push
adc
cmp
(bad)
jno
test
jo
retf
aam
cmp
dec
mov
dec
sub
fwait
pop
push
push
jl
dec
sub
cmps
or
inc
mov
push
mov
retf
push
pop
cmc
shl
push
cmp
enter
mov
jecxz
mov
adc
test
sub
and
inc
call
idiv
and
mov
loopne
jmp
dec
pop
repnz
jmp
and
out
aas
fsubr
mov
jne
leave
test
leave
add
cmp
popf
xor
or
enter
call
add
loope
xor
dec
mov
in
cmp
ja
push
cmps
xchg
into
(bad)
add
jo
out
scas
inc
cdq
pop
iret
cmp
mov
or
dec
or
mov
jae
fidivr
xchg
and
repz
popf
lods
jecxz
pop
inc
xor
mov
call
jns
jge
xchg
aad
sbb
out
outs
sub
push
data16
jmp
mov
sbb
and
fwait
inc
lds
sub
xchg
test
and
sbb
imul
cmp
fiadd
add
loopne
mov
cmps
push
push
mov
add
in
dec
dec
or
mov
adc
add
inc
cmps
jle
int
xor
mov
popf
xchg
xor
shl
jnp
int
js
and
and
mov
daa
(bad)
mov
mov
iret
mov
and
test
mov
inc
call
lahf
in
adc
pop
push
nop
retf
push
push
add
add
das
inc
add
daa
pop
cs
add
or
jmp
inc
fs
in
adc
jge
jne
out
iret
and
push
and
sub
shl
loop
aam
xchg
sti
sub
adc
mov
mov
inc
sub
ror
std
xchg
cmc
neg
imul
dec
mov
adc
js
push
scas
es
stos
adc
xrelease
imul
imul
stos
push
fnstsw
push
inc
and
int
mov
shl
or
pusha
sbb
sub
stc
xchg
or
js
dec
add
inc
sbb
xchg
(bad)
stos
mov
xchg
and
mov
mov
xor
push
adc
not
clc
ins
mov
push
hlt
mov
ror
cmp
or
fsub
push
dec
mov
adc
in
bound
pop
inc
iret
mov
xor
jne
je
sbb
in
inc
rol
xor
mov
adc
and
xchg
push
fmul
jns
inc
push
xchg
and
cwde
mov
push
mov
pop
add
push
ret
inc
mov
enter
and
mov
in
add
outs
call
and
xchg
dec
adc
js
pop
sbb
xor
cld
mov
adc
movs
mov
sub
sub
fs
rol
sbb
in
imul
int
std
jns
aad
dec
ja
push
rcl
in
or
mov
out
jmp
leave
imul
sub
xchg
div
or
shl
aas
enter
test
das
test
jnp
leave
in
arpl
outs
paddq
imul
or
pop
jmp
cmp
pop
arpl
jae
xchg
mov
or
cld
cmp
mov
xchg
jbe
add
sub
inc
(bad)
addr16
jne
(bad)
retf
jo
mov
or
jmp
push
out
rcl
push
pushf
xchg
pop
fwait
xor
iret
out
push
push
dec
movs
nop
arpl
xchg
ror
outs
pop
or
jo
xchg
outs
iret
in
and
xchg
shr
ds
cld
(bad)
sbb
dec
addr16
push
cmp
inc
lods
ins
lods
push
ror
arpl
cmp
jno
in
shl
lods
loop
lock
cmc
or
ror
push
mov
adc
das
lock
mov
push
das
add
pop
fimul
mov
retf
push
repz
fnclex
cmp
jp
xchg
xchg
in
and
lods
popf
or
mov
mov
jns
sbb
out
pop
bound
jno
sbb
xchg
inc
dec
xchg
inc
and
repnz
sahf
cdq
daa
sahf
push
jno
and
ins
es
mov
sar
es
in
daa
pop
outs
(bad)
cwde
sbb
push
imul
push
test
test
popa
mov
les
(bad)
pop
adc
lods
popa
adc
int3
mov
push
mov
div
jge
pop
and
ins
iret
popf
xchg
and
into
mov
sbb
sbb
add
sbb
adc
xchg
lods
add
jl
into
ja
cmp
adc
cmp
repnz
sub
mov
jmp
cmp
fdiv
cmps
dec
pop
or
(bad)
fisub
inc
dec
pop
retf
in
stc
mov
sbb
add
adc
sub
not
fdiv
arpl
pop
arpl
dec
push
inc
scas
das
xchg
inc
inc
ror
add
sub
cmp
dec
xacquire
loope
and
cld
sub
sbb
fcmovnbe
cmps
cmp
push
jle
jl
(bad)
(bad)
sub
movs
int
mov
xchg
or
xchg
mov
loopne
movs
lods
out
rcl
ins
pushf
jge
ror
adc
dec
xor
mov
pushf
inc
sub
mov
ror
mov
pop
je
pop
add
(bad)
add
add
dec
mov
mov
cli
aaa
cld
push
repnz
jmp
jo
xor
ret
mov
jmp
fisttp
scas
or
inc
cmp
or
test
sub
test
mov
out
sub
(bad)
adc
sahf
aam
add
add
leave
dec
sahf
jg
jno
into
cld
out
adc
lds
cmps
mov
push
push
lods
inc
dec
lea
cmp
dec
pop
jno
icebp
or
cld
sar
mov
cmps
and
mov
xchg
cmp
add
das
retf
sti
int3
cmc
fsub
mov
xchg
inc
inc
div
rcl
pop
mul
cmc
es
jmp
cmps
fsubp
jns
hlt
xor
scas
push
ret
or
sbb
int3
push
(bad)
dec
call
adc
je
dec
cli
inc
jge
or
sbb
add
nop
pop
mov
jmp
inc
imul
fwait
enter
scas
in
outs
sub
push
sub
mov
cmp
xchg
das
sbb
retf
call
jmp
mov
adc
inc
aas
inc
ret
sbb
push
fstp
jl
dec
jge
and
push
imul
dec
cmc
retf
in
mov
je
mov
or
cmp
sub
inc
in
test
das
stc
sub
cld
mov
adc
mov
dec
enter
xchg
into
cmp
xor
out
ret
out
lds
mov
pop
loopne
inc
inc
call
xchg
jb
sbb
cmp
xchg
fcomp
lahf
scas
nop
mov
rcr
daa
push
leave
add
inc
movs
repnz
pop
adc
push
fstp
shr
dec
push
ret
pop
xchg
stc
xor
xchg
cmp
(bad)
push
sub
or
rcl
icebp
rcr
mov
into
cdq
fimul
mov
pop
loope
aas
xchg
sub
pop
sbb
rcr
push
pop
fsubr
cmp
inc
sahf
out
mov
mov
pop
(bad)
bound
iret
jge
inc
xchg
mov
jecxz
test
cs
xor
gs
push
aad
ja
repnz
jl
cmps
jg
dec
dec
fcom
aas
hlt
call
sub
mov
push
mov
repz
ret
and
mov
test
out
(bad)
cli
push
loop
adc
sbb
sub
mov
fbstp
push
sub
pop
rol
sahf
iret
je
or
xor
push
mov
and
add
fild
jnp
aas
jmp
aam
jnp
adc
cmp
adc
push
or
sub
and
mov
push
push
enter
xchg
shld
pop
sub
jecxz
or
(bad)
jo
xchg
popa
cmps
sub
jae
cmp
jns
pop
add
jb
rcr
xor
xchg
ret
or
lock
pushf
xchg
mov
jmp
repz
je
ja
sub
jg
cdq
mov
sub
inc
pop
and
xor
jp
test
xor
daa
fmul
test
test
test
fidivr
mov
test
add
adc
stos
sub
ja
sbb
test
aad
or
push
sub
je
mov
mov
sbb
out
popa
pop
sahf
enter
fmul
sahf
int
ja
push
rcr
repnz
mov
adc
adc
adc
and
idiv
xor
cmp
adc
arpl
jbe
inc
inc
ins
leave
inc
mov
or
mov
jno
sbb
or
sbb
jbe
sahf
xchg
pop
cmp
in
cmp
mov
mov
mov
and
movs
(bad)
fdivr
jno
ins
retf
pop
jmp
dec
pusha
out
gs
mov
and
out
test
or
xchg
loope
je
cmp
mov
jns
out
icebp
rol
and
sbb
sbb
inc
inc
inc
inc
mov
mov
sbb
pop
xor
inc
aaa
movs
dec
pusha
mov
add
aad
dec
ins
fs
gs
xchg
scas
cdq
xchg
stc
les
xchg
popf
xchg
or
mov
and
lods
or
jb
pushf
dec
add
xor
mov
push
dec
pop
pop
not
ins
inc
add
fwait
aad
cli
mov
or
int
test
xchg
xor
hlt
test
mov
pop
jmp
ja
sbb
test
es
mov
sbb
pop
or
out
mov
and
and
rcr
pop
push
pop
dec
or
and
outs
bound
jmp
mov
xor
mov
jno
push
xor
in
push
mov
aas
pop
shl
mov
cli
jl
fs
pop
add
call
retf
xchg
cwde
mov
mov
mov
inc
xchg
cmp
inc
jmp
lock
fld
(bad)
cmp
mov
jo
test
mov
pushf
lds
(bad)
bound
pop
adc
jmp
mov
xchg
(bad)
jbe
push
mov
repz
sbb
mov
cld
add
inc
sub
xlat
inc
rcl
ds
idiv
fnstcw
aad
mov
mov
sbb
dec
loope
and
inc
inc
call
call
xchg
jbe
(bad)
outs
push
das
mov
in
jne
out
pusha
stc
xchg
sbb
mov
mov
cs
inc
imul
xor
mov
jnp
cmp
and
call
cld
jp
pop
or
cmp
mov
xchg
fnstcw
and
xor
loopne
fdivrp
cmps
sub
push
test
icebp
push
enter
dec
mov
add
mov
repz
add
mov
addr16
inc
stos
out
pop
cmp
mov
fwait
popf
test
and
dec
lea
leave
test
adc
sbb
cwde
add
inc
sbb
mov
xchg
imul
pop
jno
and
inc
imul
ins
jecxz
popf
mov
sbb
mov
jmp
mov
push
sub
out
push
dec
push
mov
pop
shl
xchg
das
mov
pop
fnsetpm(287
and
jns
fdivr
push
and
(bad)
mov
mov
and
out
mov
pop
or
or
movs
cmp
js
fcmovb
sub
into
test
add
pop
ror
jl
call
aad
xchg
stos
dec
ror
in
in
mov
inc
or
xor
lahf
and
push
in
mov
fild
sahf
sahf
mov
inc
aas
add
mov
and
or
mov
neg
data16
in
test
inc
ret
jmp
mov
test
and
mov
push
arpl
punpcklbw
inc
daa
(bad)
xor
dec
ror
mov
outs
add
sub
hlt
inc
mov
xchg
xchg
adc
mov
add
dec
aad
jl
icebp
jl
sbb
aaa
add
pop
mov
lods
sti
and
sbb
fistp
sub
jo
rol
std
pop
mov
in
cmp
jmp
(bad)
fldcw
and
das
(bad)
push
gs
ret
adc
push
mov
push
sar
push
dec
jno
mov
xchg
inc
cs
cmovne
push
cld
push
mov
sub
adc
(bad)
ins
in
shl
xchg
push
cmp
ret
aas
cmp
xchg
sub
idiv
pop
and
add
push
test
or
add
mov
mov
jmp
rcr
rol
dec
repnz
push
and
xor
dec
jno
and
mov
push
ret
loopne
sbb
inc
cmp
(bad)
dec
gs
fstp
test
icebp
sar
pop
xchg
in
mov
jge
dec
mov
add
dec
sub
pop
jle
pop
fld
push
inc
cmc
sub
sti
add
xchg
scas
push
cmp
sahf
cmp
inc
sub
aam
sub
ins
popa
sbb
jmp
rcr
and
push
ret
mov
pop
sbb
iret
sub
add
mov
mov
loop
mov
sbb
out
ds
or
mov
movs
icebp
fcmovb
popa
movs
mov
jle
(bad)
xor
stc
cmps
or
pop
sbb
or
add
outs
les
or
mov
stos
arpl
cmps
cmp
mov
xor
fisttp
push
lds
mov
xchg
(bad)
pop
pop
jns
mov
ds
mov
mov
pop
lahf
jmp
fdiv
and
mov
xor
mov
push
or
push
or
cmp
nop
cs
push
js
xlat
jae
arpl
iret
cli
adc
repz
dec
(bad)
in
push
es
iret
mov
jmp
call
or
das
rcl
adc
inc
xor
imul
or
imul
and
rol
jb
mov
shl
xchg
retf
arpl
in
inc
jnp
mov
and
(bad)
adc
pop
fs
lds
int
jmp
popf
mov
sub
push
inc
add
shr
adc
xchg
cmp
mov
bound
sub
inc
nop
xchg
mul
ss
jg
fmul
xor
stos
outs
loopne
mov
iret
(bad)
cli
stos
in
sti
jne
clc
ret
jo
dec
fidivr
cmp
cmp
jo
pop
stos
les
popa
or
test
loop
das
inc
dec
xchg
mov
pushf
mov
sbb
ficomp
cmps
pop
test
add
leave
sub
cli
jmp
dec
mov
repnz
mov
mov
scas
(bad)
jmp
scas
cmp
int
sub
ror
cmps
sub
cli
pop
sahf
icebp
adc
ret
push
dec
jecxz
jg
pop
mov
mov
push
lea
loope
xchg
inc
in
jecxz
and
jp
jecxz
jb
int3
popa
repz
mov
dec
sub
in
das
cmp
jecxz
and
ret
into
xchg
cmp
mov
dec
and
mov
ret
jns
or
and
cs
(bad)
and
jae
pushf
icebp
jg
sti
dec
cmp
dec
mov
lods
add
mov
js
or
mov
mov
cdq
jmp
adc
mov
dec
lods
retf
imul
shl
popf
dec
loopne
cld
popa
in
push
or
xchg
sbb
loopne
jns
sahf
push
aad
pop
dec
sub
ins
cmp
cmp
pop
dec
mov
inc
and
int3
mov
outs
stos
loopne
ret
dec
cmp
pop
ret
mov
mov
jge
aam
push
mov
imul
test
dec
stos
or
mov
mov
mov
and
call
mov
or
les
pop
xchg
aaa
ror
mov
add
or
inc
popa
adc
in
cmps
dec
data16
sub
push
mov
aad
push
(bad)
mov
test
push
in
push
ss
pusha
xor
jns
jmp
mov
and
sbb
aas
xchg
repnz
xor
jle
retf
mov
pop
adc
sub
jo
jo
cli
jecxz
cwde
jo
cli
pop
xor
popa
shl
push
fwait
arpl
mov
or
push
mov
and
and
push
pop
enter
popf
(bad)
ret
jae
adc
mov
loop
push
pusha
test
dec
xor
mov
mov
icebp
out
(bad)
rcr
outs
fisubr
xchg
scas
xor
xchg
dec
fnstcw
or
xor
scas
jne
pop
jne
pop
sbb
mov
fisttp
lods
je
daa
movs
mov
mov
int
inc
ja
pop
mov
idiv
movs
and
mov
mov
add
arpl
and
mov
pusha
push
xchg
fistp
aas
add
and
addr16
sub
mov
cmp
or
cmp
dec
adc
add
out
jecxz
jb
inc
mov
mov
loope
or
xor
mov
pop
fimul
or
jle
mov
cmps
and
push
scas
ins
mov
mov
sahf
repz
stos
fld
div
pop
aaa
push
punpckhdq
int
inc
jne
pop
or
push
outs
mov
inc
dec
push
arpl
shl
cmp
xchg
adc
and
sbb
xchg
cmp
sti
fnstcw
xor
xchg
cwde
jb
scas
rol
push
retf
cs
int
cli
mov
aaa
(bad)
sbb
call
pop
rcl
xchg
jp
call
xchg
enter
fwait
pop
imul
gs
mov
in
mov
pop
rcr
mov
fmul
add
(bad)
test
ret
and
xchg
popf
aaa
jbe
in
cmp
or
ror
mov
mov
or
and
sub
inc
cmps
push
dec
xor
pop
shl
adc
imul
mov
pop
(bad)
pop
xor
add
daa
dec
mov
or
pop
mov
aaa
adc
add
cmp
adc
out
mov
(bad)
mov
stc
outs
xor
mov
inc
je
dec
jns
repnz
fs
jnp
or
int3
les
rol
xor
lea
or
and
mov
jo
xchg
pop
xchg
aam
sub
pushf
push
and
mov
sar
mov
addr16
fs
cmp
or
lods
add
les
retf
sbb
cmc
dec
push
sbb
test
ins
or
pop
daa
inc
xchg
ja
into
test
xor
lods
imul
cld
push
fbld
leave
std
mov
sbb
sar
mov
push
aaa
push
pop
push
les
arpl
idiv
in
fmul
or
jmp
icebp
cmps
sbb
or
mov
xchg
mov
popf
inc
push
movs
xor
fadd
inc
cmp
int
pop
idiv
arpl
enter
imul
lahf
mov
jbe
pop
jns
je
or
add
xchg
mov
addr16
call
loope
movs
mov
add
mov
mov
xor
enter
in
cmps
cmp
xchg
enter
mov
mov
jp
fisub
add
mov
jg
adc
mov
stos
xor
nop
aaa
ins
push
sub
call
adc
lahf
das
or
jbe
repnz
cmps
mov
stos
fldcw
dec
adc
sub
loopne
hlt
sar
and
sub
and
jmp
dec
aas
stc
jno
push
out
add
not
jle
cmp
shl
les
ja
ficom
and
cmp
add
leave
int3
add
shr
xchg
push
xor
dec
popa
int
xchg
push
fst
das
adc
pop
(bad)
(bad)
mov
fistp
sub
in
jb
cdq
int
scas
mov
adc
fiadd
inc
jle
add
xchg
xchg
push
rcl
lea
xchg
das
lahf
dec
in
inc
fs
adc
pop
std
mov
mov
cwde
outs
outs
pop
jmp
ins
call
scas
xchg
sti
jb
mov
test
movs
int3
icebp
gs
fmul
xor
mov
dec
xor
arpl
or
inc
shl
sbb
or
xor
daa
and
mov
pushw
(bad)
jae
pop
cmp
les
xchg
das
pop
pop
and
ret
sub
cmp
neg
sub
jmp
xchg
test
popf
sar
in
mov
xchg
inc
inc
jmp
fnsave
adc
fdivr
jbe
jmp
pop
out
mov
xor
adc
xchg
push
fsub
mul
pop
sub
lock
adc
mov
int3
ret
daa
jb
inc
xchg
xchg
daa
shl
pop
xor
lods
adc
adc
jns
shl
out
test
pop
mov
ret
icebp
cs
cwde
rcl
mov
mov
xchg
mov
mov
jbe
ret
xlat
in
push
sub
dec
out
dec
aam
or
test
inc
sahf
fidivr
call
pop
daa
cwde
lods
add
rcr
sbb
sahf
xor
mov
xor
mov
mov
mov
sub
xchg
fdiv
fs
pusha
aad
push
bound
idiv
outs
push
or
addr16
mov
repz
add
sub
and
jmp
jge
dec
pop
cmp
mov
sub
jb
or
out
ins
mov
jo
sub
aam
xor
shr
(bad)
addr16
mov
sub
xchg
lods
mov
pop
pop
push
or
pop
xchg
adc
dec
ins
fsub
nop
scas
hlt
add
fsubp
mov
imul
adc
jg
mov
div
xor
dec
pop
jmp
adc
mov
mov
mov
mov
mov
jns
retf
gs
cli
xchg
(bad)
neg
outs
xor
push
jle
and
sbb
lods
pop
(bad)
adc
sahf
mov
pop
mov
and
xchg
retf
aad
push
mov
inc
xchg
xchg
aam
adc
jmp
mov
sbb
jbe
push
addr16
cmp
std
les
(bad)
enter
xchg
jmp
or
and
add
pop
loope
and
sbb
test
mov
dec
leave
rcl
icebp
jb
aas
adc
sbb
xchg
cmps
ds
inc
addr16
stos
shl
into
out
pop
pop
cli
push
in
push
pop
(bad)
call
mov
xchg
jle
xchg
mov
dec
pop
rol
push
sar
and
cld
pop
sub
mov
push
xchg
stc
cmp
pop
fidivr
mov
aam
and
(bad)
int3
dec
add
(bad)
xchg
jbe
xchg
xchg
adc
stc
fwait
adc
das
dec
pop
lock
push
inc
push
pop
out
push
push
fnclex
scas
inc
shl
test
lods
push
movs
mov
sbb
dec
cmp
dec
cli
inc
jne
adc
hlt
dec
movs
mov
(bad)
les
sar
cmps
clc
mov
mov
push
or
int3
pop
hlt
mov
sub
das
gs
mov
push
shr
cmp
in
cdq
std
jnp
ja
shl
inc
xchg
mov
outs
dec
lds
int3
lds
repz
sub
jb
scas
sbb
les
mov
fcomp
sbb
pop
aas
xchg
cmp
stos
add
jmp
push
mov
jecxz
xor
addr16
retf
hlt
mov
jnp
cmp
loop
pop
lock
pop
mov
in
test
dec
jns
push
in
mov
test
pop
icebp
sbb
jnp
mov
push
mul
loope
popf
cli
shl
mov
inc
inc
mov
data16
add
pop
push
icebp
stos
test
sub
jne
jmp
mov
add
pop
pop
(bad)
in
mul
or
mov
aad
add
pop
xlat
xor
push
sbb
aam
js
add
jle
push
pushf
dec
and
pop
nop
mov
inc
scas
and
bound
dec
rcr
inc
or
xchg
dec
(bad)
popf
mov
imul
call
pop
aad
imul
dec
pop
jb
mov
loopne
mov
cmp
into
aad
gs
sub
sub
xchg
dec
repz
stos
cwde
inc
jnp
add
mov
out
dec
or
ret
out
adc
and
test
mov
lods
bnd
push
mov
xor
call
sub
test
mov
pop
inc
rcl
push
cmps
jecxz
outs
pop
fdiv
cmps
push
add
cmp
int3
(bad)
rol
and
enter
sub
cmp
jmp
cli
mov
mov
jbe
leave
lock
xchg
cmps
pop
aas
pop
sub
(bad)
jnp
mov
(bad)
mov
push
or
pop
aas
mov
ins
pushf
or
cdq
lds
adc
jbe
cmps
out
mov
sbb
push
jbe
hlt
jle
test
xor
jnp
(bad)
std
sub
(bad)
dec
js
das
pop
shl
(bad)
in
and
neg
cs
(bad)
cmp
pusha
popa
call
mov
test
sahf
bound
jne
std
call
iret
test
mov
scas
scas
pop
rol
dec
imul
ret
pop
add
push
sbb
mov
(bad)
push
xor
jmp
xor
push
ret
frstor
mov
cmp
mov
jecxz
mov
jmp
ret
pop
xor
xchg
inc
cmp
icebp
mov
inc
add
and
dec
mov
xor
push
lahf
dec
out
es
mov
loop
push
mov
mov
lods
js
dec
xor
fsub
jp
stos
jle
pop
repz
jne
loopne
adc
call
lahf
adc
adc
pusha
xchg
xchg
or
adc
cmp
shl
js
(bad)
ins
add
js
imul
inc
inc
rcl
cmp
inc
out
ins
loopne
xchg
push
out
xor
sti
push
add
mov
rcr
mov
fcomp
into
and
scas
ret
mul
xor
retf
icebp
mov
rcr
fwait
imul
dec
push
jmp
lods
push
add
jge
sbb
sar
push
xchg
pop
cmp
scas
dec
clc
push
jg
pop
sbb
jne
fdivr
adc
repnz
fistp
cmp
mov
test
ins
xor
and
jl
dec
sbb
inc
jns
imul
mov
push
loope
cmps
xor
xchg
fs
cmp
push
rcl
out
adc
sub
fistp
and
jns
lds
ins
es
cmp
and
push
nop
out
push
in
lea
xor
inc
add
xor
pop
das
popf
jmp
scas
mov
repnz
push
mov
scas
test
add
inc
das
jl
enter
or
add
in
push
mov
jae
aam
int
sbb
xchg
push
pop
cmps
movs
out
pop
cwde
aaa
mov
push
lock
mov
xchg
cmc
fimul
int3
in
std
leave
pop
int
je
out
in
jge
pop
pop
xchg
cdq
pop
nop
sti
je
jle
jp
in
jle
popa
adc
pop
enter
call
addr16
pop
jo
rcr
mov
xor
scas
ret
lock
imul
hlt
jl
sar
(bad)
std
mov
and
push
aaa
cmp
movs
push
test
dec
pop
das
mov
imul
mov
xchg
mov
mov
jmp
jecxz
call
pop
retf
cmps
jb
cmp
xchg
out
jno
adc
addr16
loop
add
mov
icebp
test
(bad)
pop
ins
mov
sub
inc
fcmovnu
mov
cs
sahf
jnp
or
test
cld
jae
stos
mov
enterw
dec
xlat
sub
mov
mov
test
cmp
jo
sub
(bad)
xor
das
cld
inc
enter
fwait
xor
stos
xor
loopne
cmp
xchg
ret
mov
retf
call
repz
call
and
jb
mov
inc
(bad)
dec
mov
movs
iret
mov
es
mov
mov
call
loope
nop
xchg
ror
fisubr
cwde
pop
mov
sub
pop
mov
ds
rcl
ja
out
test
push
in
adc
mov
das
sub
retf
or
call
jmp
lods
mov
mov
std
movs
(bad)
dec
es
(bad)
jae
jo
das
sub
ins
stos
or
mov
inc
fstp
add
cmc
cmp
fisub
js
test
inc
mov
aad
mov
jnp
sbb
dec
std
(bad)
in
cmp
jne
loopne
pop
push
outs
pop
mov
out
mov
lods
mov
cmp
mov
hlt
adc
adc
mov
mov
adc
stos
in
pop
retf
mul
popf
imul
jge
test
(bad)
fld
(bad)
fwait
ins
jg
fstp
mov
pusha
cmp
sub
inc
out
mov
repnz
pop
xchg
jb
sbb
stc
and
loop
mov
cmp
sbb
push
fisttp
jle
(bad)
call
jge
stc
cmc
movs
idiv
pop
inc
gs
or
ds
cld
iret
mov
fucomip
jb
lds
out
push
pop
and
push
aad
loop
jp
or
add
pop
ja
inc
lods
je
jns
daa
sub
out
mov
xlat
sub
outs
push
sbb
or
dec
mov
or
pop
cmp
fcomp
push
xchg
ds
imul
xchg
das
mov
cmp
mov
sbb
out
cmps
mov
int
inc
xchg
aad
xchg
jecxz
scas
jmp
pop
jle
das
retf
sti
cmc
es
mov
adc
jle
outs
pop
jmp
mov
dec
lods
ret
aad
adc
gs
xchg
sbb
push
out
cmp
cmc
dec
mov
mov
jle
xchg
fs
and
pop
cmp
(bad)
out
cwde
call
sub
fwait
data16
sbb
les
pop
adc
jmp
jno
xor
pop
or
jb
add
push
inc
pop
dec
aad
test
loop
pop
dec
(bad)
jge
cmc
cld
mov
fnstcw
fnstsw
movs
ret
cmp
jns
ret
or
popa
fadd
push
cld
mov
outs
sti
mov
jnp
arpl
int3
mov
push
lock
mov
scas
lea
dec
mov
(bad)
xchg
(bad)
sub
mov
or
mov
iret
cmp
aam
sub
jl
lahf
mov
or
addr16
cmp
aas
ja
jne
xchg
jmp
retf
movs
and
test
dec
lock
out
test
inc
xor
sbb
xchg
pop
dec
fild
ror
push
adc
sbb
movs
loop
aam
out
sbb
js
jge
add
inc
aad
mov
and
daa
mov
call
pop
outs
mov
add
push
out
lods
jp
xor
or
adc
jmp
xor
xor
cwde
mov
mov
add
adc
push
adc
mov
aas
bound
push
sub
out
popa
out
cdq
pop
scas
nop
xchg
jp
sub
jae
xor
jge
dec
mov
mov
xchg
or
rol
dec
out
repz
arpl
and
push
hlt
sahf
sbb
mov
jnp
push
dec
or
jne
fld
cmp
or
fcom
fwait
mov
jge
ja
xchg
xchg
movs
js
dec
std
pop
cmp
jo
repz
(bad)
pusha
stc
enter
push
leave
retf
jl
out
mov
jne
inc
addr16
ja
inc
xor
es
mov
xor
hlt
ins
push
pop
or
mov
or
and
or
inc
xor
popa
cmp
push
jge
inc
xor
inc
dec
aad
ins
cmp
ins
cmp
aaa
fild
jge
shr
xchg
sub
addr16
pop
sub
nop
div
fist
ror
inc
sub
and
aam
das
rcl
pop
pop
push
cmps
sbb
xor
pop
add
xchg
xchg
das
(bad)
(bad)
push
pop
jns
cmp
inc
mov
je
xor
mov
loopne
out
dec
outs
or
outs
jge
(bad)
lods
bound
es
call
or
xchg
mov
fisubr
mov
ins
fidiv
fdiv
and
shl
(bad)
loopne
jecxz
adc
fst
mov
nop
shr
cmps
imul
push
jl
dec
and
sbb
pop
jae
and
outs
cmc
fwait
test
stos
ds
sbb
or
sahf
pop
bound
mov
nop
mov
cmc
jle
into
jmp
mov
adc
lahf
shr
fnsave
jne
dec
add
dec
cmp
push
push
cmps
fdiv
aad
sub
test
inc
arpl
cmp
aad
dec
(bad)
inc
or
dec
and
(bad)
shl
sub
(bad)
inc
in
jo
adc
xor
xchg
cmp
xchg
inc
mov
sub
in
sbb
pushf
push
imul
aas
cmps
ret
sbb
mov
movs
loope
inc
fisubr
jle
and
xlat
cli
lods
dec
ret
mov
push
push
(bad)
test
jns
stos
dec
pusha
xchg
enter
in
mov
das
cmps
adc
inc
fnstsw
scas
mov
das
add
cld
outs
dec
icebp
call
cmps
mov
icebp
push
mov
fisttp
sub
cmp
xchg
push
xchg
les
xchg
mov
dec
or
into
sbb
aas
data16
push
mov
mov
xchg
lods
mov
pop
add
les
mov
mov
cmps
xor
mov
adc
xor
lods
xchg
(bad)
pop
xor
les
cmps
mov
adc
or
mov
xchg
xchg
xchg
adc
ret
retf
mov
pop
adc
movs
dec
pop
daa
iret
xchg
loop
ins
shr
pusha
sub
or
popa
ds
jmp
fwait
mov
add
sub
repnz
sub
push
je
mov
jmp
mov
inc
jmp
or
or
dec
aaa
pop
push
jg
data16
dec
mov
jne
mov
jb
inc
add
adc
mov
addr16
cs
retf
int
cmps
mov
mov
xchg
and
je
xor
push
in
pop
sbb
push
xrelease
inc
aas
and
pop
std
add
mov
inc
lods
cmp
retf
jge
adc
sbb
or
mov
xor
pop
cwde
in
mov
hlt
jl
mov
xor
jmp
add
xchg
adc
push
leave
cdq
xor
cdq
sub
test
ds
ss
mov
std
(bad)
mov
jp
mov
pop
shl
xor
into
inc
int3
shl
push
daa
clc
or
(bad)
dec
xor
aaa
jp
inc
mov
push
(bad)
jle
std
ins
adc
inc
repz
mov
sub
hlt
xchg
test
inc
mov
adc
retf
loope
stos
ja
sti
cmp
mov
mov
dec
push
pop
fld
sub
adc
xor
int3
cdq
jmp
enter
inc
test
add
mov
xlat
cdq
jb
fsub
div
dec
out
sbb
call
in
jnp
xor
jne
clc
jmp
gs
mov
sbb
dec
into
cmps
sahf
fs
sbb
(bad)
hlt
cmp
jmp
xchg
sbb
movs
lock
sub
push
jp
movs
pop
xchg
or
pop
scas
clc
adc
xchg
mov
dec
dec
pop
test
add
xor
sub
mov
dec
xchg
mov
les
or
add
repnz
in
mov
not
lock
inc
mov
mov
push
mov
jo
pop
aas
in
mov
(bad)
int
sub
mul
in
jae
push
popa
adc
jmp
or
push
dec
sub
adc
ror
jl
retf
xlat
push
push
test
and
retf
adc
fisub
pop
lds
cmp
pop
gs
std
shr
call
ja
sub
stos
(bad)
daa
fadd
out
int
sub
nop
sbb
inc
(bad)
addr16
fnstcw
addr16
stos
xchg
adc
sar
inc
or
hlt
imul
pushf
pop
add
call
je
leave
xor
test
mov
xor
mov
ss
xor
jecxz
mov
lods
jle
pop
int
cmc
jb
js
xchg
(bad)
xor
je
stos
mov
in
xchg
xor
sub
mov
mov
retf
fidivr
cdq
stc
movs
sub
adc
and
mov
cli
or
sbb
sbb
xchg
or
mov
xor
inc
jbe
fbstp
sbb
test
inc
out
mul
test
pusha
push
ds
int3
mov
imul
push
mov
fild
fs
clc
neg
jmp
rcr
shl
imul
lea
pause
mov
adc
mov
adc
fst
cs
or
sbb
iret
jp
fmulp
and
jne
(bad)
push
inc
aad
(bad)
fidiv
sub
data16
jnp
mov
gs
fsubr
or
ret
fadd
add
aaa
jne
(bad)
clc
cmp
mov
jno
mov
das
shl
in
sbb
sbb
loope
jae
dec
fadd
pop
addr16
ja
cmp
in
cdq
ficom
push
mov
push
adc
(bad)
je
aam
jg
and
cmp
je
repz
dec
ror
aad
cwde
mov
jecxz
dec
ret
pop
xor
or
add
xchg
cmps
sbb
cmp
sbb
dec
dec
aam
xchg
sbb
cs
ja
popa
jb
add
ret
mov
retf
inc
pop
mov
fst
mov
dec
jmp
or
xor
aaa
push
jo
mov
fdiv
lods
sar
and
and
stos
repz
shr
test
jmp
std
xor
push
lea
dec
lock
xchg
in
or
cmp
bound
mov
out
mov
fs
outs
inc
and
stos
push
push
add
mov
xchg
mov
push
ja
mov
dec
fsubr
push
cmp
mov
cld
test
add
idiv
adc
hlt
push
push
mov
fiadd
and
sub
inc
mov
ja
jmp
mov
(bad)
mov
or
(bad)
push
loop
hlt
call
neg
pop
popa
inc
repz
pop
icebp
ficom
dec
push
push
xlat
xchg
pushf
push
fild
mov
sub
sub
je
rcr
dec
dec
push
dec
push
xor
sbb
hlt
or
loopne
arpl
std
cmc
dec
int
test
shr
outs
inc
or
jns
jmp
int3
sub
jns
fisttp
jg
cld
pop
sbb
inc
or
add
inc
mov
sbb
fucomi
(bad)
in
stos
ret
stos
ret
jle
ins
gs
cmp
and
adc
bound
and
es
jmp
call
out
push
sub
push
mov
ja
aas
arpl
mov
sub
in
lds
cmp
add
xor
hlt
daa
adc
push
ins
mov
xchg
jp
sar
or
mov
xor
cmps
sbb
cmp
sbb
aam
out
cmps
lods
sub
test
push
mov
push
mov
les
jp
bnd
out
or
sub
ins
and
sbb
repz
out
xchg
xor
cmp
scas
jbe
addr16
mov
sahf
sti
shl
loope
jmp
lods
leave
push
int3
adc
jae
xchg
xchg
out
cmp
mov
std
lea
sub
mov
dec
or
cmovnp
mov
adc
(bad)
mov
fcomp
enter
inc
fld
cmp
stc
sub
mov
or
xchg
mov
fisubr
nop
sti
(bad)
jns
push
or
test
add
cmp
cmp
(bad)
int3
js
imul
(bad)
(bad)
or
ja
retf
lods
out
push
and
ja
pop
sbb
cmps
pop
jge
xchg
cmc
push
push
add
jnp
mov
jmp
and
leave
sub
das
and
cmc
(bad)
enter
std
je
aam
dec
mov
stos
(bad)
and
mov
push
pop
cdq
xor
int
fwait
mov
mov
test
jne
leave
outs
das
in
pop
sti
test
inc
daa
fimul
(bad)
(bad)
or
in
cmc
sub
mov
xchg
sub
sub
pop
movs
or
mov
sbb
ret
out
and
pop
(bad)
inc
or
jge
or
mov
jl
xor
cli
ret
xlat
jne
xchg
je
lea
add
stos
in
cwde
pop
mov
sub
and
cmps
imul
mov
dec
aaa
sub
lea
movs
mov
push
sub
rcl
repnz
aam
push
or
sub
out
cli
inc
stos
fild
lea
out
(bad)
jae
out
loop
or
xchg
icebp
mov
xchg
sbb
(bad)
scas
out
xor
push
pop
xchg
loopne
and
or
das
cwde
jae
sahf
mov
int
sub
mov
or
sub
test
ins
push
xchg
push
je
stos
mov
addr16
adc
enter
pop
push
hlt
loopne
inc
or
ret
imul
mov
call
in
inc
xchg
fwait
ret
int3
cmp
daa
push
mov
enter
adc
adc
mov
or
imul
sbb
mov
repz
pop
fist
jl
arpl
push
fmul
pop
js
push
lock
push
les
(bad)
out
and
jno
pop
int3
dec
cmc
pop
fistp
aas
pop
adc
add
inc
jmp
dec
arpl
aaa
stc
(bad)
push
push
sbb
jl
adc
or
out
lahf
mov
jp
iret
fnstsw
xchg
pushf
or
inc
pop
dec
xor
fadd
cmp
das
(bad)
sub
ja
es
cmp
push
fld
mov
scas
push
xchg
and
call
test
push
mov
int
sahf
sar
les
jmp
aad
outs
or
into
addr16
lahf
es
sahf
scas
mov
xchg
scas
leave
or
xchg
jp
mov
cmc
cdq
or
lahf
stos
cwde
ret
ror
sub
cmp
ficom
out
push
add
stc
dec
aas
push
lahf
push
cld
or
stos
mov
jne
push
cdq
sbb
sub
add
inc
lods
inc
adc
mov
add
inc
push
pop
test
inc
ds
sub
retf
sbb
ins
out
mov
add
movs
and
data16
movs
pop
and
pop
mov
and
stos
pop
xchg
aad
ja
pop
and
adc
ins
xor
pop
lods
jbe
pop
mov
mov
movs
dec
(bad)
lods
sbb
(bad)
jmp
(bad)
lock
dec
popf
push
pop
fild
add
movs
movs
or
jo
cmps
jbe
fbstp
xchg
fcomp
leave
outs
sti
outs
call
clc
(bad)
mov
or
adc
sbb
mov
jbe
movs
adc
rcl
aaa
outs
jmp
cmp
and
sub
fiadd
out
mov
sahf
cwde
sti
test
mov
jmp
add
mov
stos
jae
pop
das
rcr
sbb
ror
(bad)
jo
(bad)
sub
xchg
pop
add
mov
mov
and
pop
dec
sbb
mov
add
sar
jb
in
jl
inc
mov
mov
arpl
fild
sub
jge
jb
push
jne
inc
push
cmps
xor
jmp
and
in
add
hlt
mov
out
imul
cmc
outs
cwde
int3
sbb
cli
or
das
shl
imul
xchg
push
cmp
sbb
dec
xchg
dec
out
fucomp
retf
cmp
ja
fcmovnu
and
imul
inc
sbb
popa
fld
sbb
or
xor
sar
cmp
(bad)
pop
nop
cmp
sbb
mov
loop
gs
loope
cmp
xor
ficomp
inc
push
loopne
sub
push
dec
es
mov
mov
xor
sbb
arpl
outs
cmp
adc
mov
jne
mov
push
adc
sahf
sar
xor
mov
sub
ror
lea
lods
pop
fs
fmul
les
(bad)
push
and
pop
add
stos
rol
adc
pushf
or
outs
jmp
repnz
mov
repz
gs
mov
test
cmp
jbe
scas
xor
retf
sub
jmp
es
mov
xor
inc
jecxz
sub
test
ret
jne
adc
in
aad
jecxz
loope
sahf
js
mov
mov
adc
cld
fwait
jge
cmp
xchg
(bad)
pushf
rcl
push
ins
pushf
push
or
push
ins
pop
shl
mov
ret
repnz
pop
(bad)
mov
leave
mov
idiv
cmovl
mov
nop
pop
fsubp
loop
xor
xchg
pop
pushf
mov
aaa
and
inc
mov
in
adc
(bad)
arpl
ss
scas
call
cmc
into
add
sub
dec
fs
push
and
int3
push
cli
pop
cmp
inc
xor
out
mov
add
imul
push
shl
mov
cdq
xor
(bad)
cli
push
add
fucomi
add
inc
mov
mov
frstor
cld
dec
rcr
jno
lea
xchg
jecxz
inc
inc
ins
mov
out
loop
push
xor
xlat
add
inc
inc
bound
fs
mov
imul
add
xor
mov
in
xchg
outs
sbb
add
xchg
in
cs
pop
cdq
dec
repnz
adc
or
jns
adc
shl
xor
lea
ja
test
push
pop
jnp
push
mov
(bad)
ins
jecxz
cmp
inc
jl
cmp
jg
xor
add
repnz
ds
push
xchg
mov
dec
outs
push
ret
sbb
jmp
ficomp
inc
and
or
dec
das
dec
ret
int3
jns
into
sahf
xchg
fnstsw
jb
adc
icebp
paddb
jae
mov
or
cmp
push
adc
push
loop
ss
or
int3
add
push
mov
out
stos
or
les
dec
test
std
pop
jo
out
sub
jb
shr
outs
inc
lods
inc
cmps
sti
and
aas
jae
add
mov
loopne
shl
xor
jecxz
xchg
fcomip
adc
adc
inc
fistp
pop
aas
inc
push
fist
xor
fistp
(bad)
or
ins
xor
mov
or
xchg
cmp
retf
hlt
inc
push
jle
adc
jae
xchg
cwde
in
out
adc
mov
mov
pop
push
sar
mov
in
sbb
out
pop
push
dec
repnz
dec
int3
pop
ins
push
add
inc
sbb
mov
ret
push
ss
sbb
pushf
cli
mov
jns
les
nop
push
cmpps
inc
sbb
loopne
je
lahf
ret
mov
push
add
aad
push
repnz
mul
loopne
inc
in
push
pop
out
cmp
pop
cli
sub
frstor
push
and
rol
addr16
(bad)
xor
xlat
and
xchg
add
jg
ja
fcmovu
inc
lods
pop
mov
inc
mov
inc
sub
sahf
mov
jecxz
jg
sbb
mov
jmp
loop
shl
cmps
pop
jnp
push
dec
daa
lea
fsubr
cmp
add
mov
dec
int3
sbb
push
xchg
retf
mov
pop
dec
xor
fisubr
dec
pop
mov
push
xchg
xor
aas
cmps
cmp
mov
scas
nop
inc
paddsw
popa
imul
xchg
xchg
jmp
mov
in
mov
leave
inc
adc
sub
push
ficom
mov
and
(bad)
cmp
mov
(bad)
dec
or
repnz
cwde
cwde
test
push
test
and
retf
cmovp
enter
aas
mov
mov
push
and
lods
sar
mov
mov
dec
cld
bnd
movs
dec
aaa
cmps
push
aaa
in
repz
jmp
dec
fist
sub
adc
pop
jbe
cdq
icebp
retf
push
in
pop
ins
retf
jno
test
pop
stc
push
dec
nop
push
cwde
(bad)
fwait
mov
mov
sub
jns
cmp
cmp
cmp
cmp
enter
clc
movs
popa
std
or
js
cmps
jbe
jp
lods
dec
(bad)
adc
jne
mov
sub
sub
(bad)
icebp
loop
pop
(bad)
push
icebp
lds
ds
add
jg
push
lods
in
sbb
das
inc
scas
out
pop
push
call
sbb
(bad)
stc
dec
add
xchg
add
or
rcl
popa
adc
cmc
es
repz
cmp
sbb
adc
ins
mov
pop
stos
lahf
repz
jae
xor
adc
mov
fcom
enter
mov
push
and
fsubp
int
sub
dec
mov
add
and
add
test
xor
push
push
xchg
icebp
pop
ret
dec
push
sub
sub
jg
pop
adc
jo
lea
dec
or
rcr
or
das
mul
mov
add
cmp
(bad)
inc
or
stc
lods
xchg
es
and
sub
pop
push
mov
pop
clc
fstp
sbb
sbb
sbb
xchg
frstor
or
clc
fdivr
mov
or
sub
dec
neg
in
inc
jne
sub
imul
aad
test
push
nop
xchg
push
push
call
cmp
nop
dec
or
add
arpl
lods
cmp
pop
pusha
ja
fist
imul
pop
stos
sbb
nop
jne
in
mov
jne
les
xor
mov
sbb
mov
dec
mov
test
shl
xchg
fcomp
cld
test
call
loop
ficom
xchg
push
scas
ins
stos
fld
push
xchg
sub
pusha
inc
popa
jmp
adc
cld
fst
stc
mov
push
or
les
push
mov
movs
pop
push
dec
retf
jge
dec
jae
jl
push
das
pop
aad
ss
bswap
fs
sub
sbb
and
repz
cmps
in
mov
ss
fistp
rcr
add
das
dec
dec
loopne
mov
hlt
dec
in
fdiv
mov
push
sub
repnz
mov
cmc
iret
inc
pop
lods
add
ins
hlt
arpl
add
ds
pop
and
or
add
pop
or
into
jmp
push
(bad)
jnp
fucomp
stc
lds
and
or
pop
(bad)
retf
scas
sbb
xor
push
dec
add
out
mov
mov
jp
sti
push
sbb
push
fadd
cmp
cdq
aas
or
push
jle
sub
mov
add
xchg
(bad)
idiv
popa
pushf
leave
push
scas
stos
jg
inc
popa
sbb
call
cmp
enter
in
xchg
daa
dec
inc
ret
daa
js
les
out
call
out
rol
scas
std
enter
(bad)
mov
mov
dec
lahf
dec
jl
icebp
daa
lock
or
vmovsd
inc
xchg
add
mov
movs
jno
push
or
jo
outs
inc
mov
jecxz
test
sub
lea
pop
jne
push
mov
xlat
adc
popa
xlat
mov
mov
cmp
sub
cmp
repnz
(bad)
pop
push
fmul
push
adc
add
sbb
sub
xchg
mov
cdq
xor
or
push
es
adc
and
lds
jno
dec
fadd
and
dec
lds
(bad)
xchg
pop
cwde
xchg
scas
xor
mov
stos
lock
mov
stos
fs
outs
in
push
pop
ja
xchg
cmp
sti
push
xor
icebp
lock
xchg
sar
dec
xchg
sti
sub
cmp
loope
ins
and
das
cli
adc
mov
jle
mov
jno
out
iret
sti
aam
dec
imul
mov
(bad)
pop
int3
sub
ret
mov
xchg
ret
adc
pop
mov
inc
pusha
mov
out
(bad)
xor
imul
mov
fisttp
call
lahf
pop
cmp
pop
call
jmp
rcr
cld
cmp
pop
inc
jge
scas
mov
popa
cmp
xlat
mov
xchg
jg
add
jns
cmc
or
jnp
cld
pop
or
imul
mov
and
or
jge
inc
fnstcw
std
outs
cdq
cs
or
jl
ja
ret
jecxz
mov
add
mov
sti
sahf
and
in
mov
adc
(bad)
movs
out
pop
shl
pusha
inc
retf
test
adc
pop
ficomp
xchg
mov
shl
jnp
mov
clc
inc
repz
jl
adc
call
test
mov
ror
nop
jl
adc
sahf
hlt
nop
lock
xor
movs
pop
pop
sbb
push
xor
repnz
mov
push
aaa
mov
cld
outs
adc
cs
push
sub
mov
dec
jb
ds
mov
push
cmp
inc
add
lods
mov
rcl
or
inc
jle
adc
push
mov
jge
cdq
dec
or
(bad)
inc
cmp
mov
mov
test
xor
or
jo
inc
push
test
pop
stc
push
sti
js
(bad)
int3
adc
jg
(bad)
jl
clc
sbb
push
and
dec
jmp
or
inc
and
and
inc
mov
jl
outs
ja
mov
add
ss
pop
or
sbb
or
fwait
imul
lock
adc
icebp
mov
or
cdq
inc
jb
lods
cli
stos
imul
inc
add
(bad)
mov
ins
push
xor
lds
mov
and
mov
pop
inc
sbb
sbb
cli
(bad)
out
loop
retf
xchg
mov
sub
jg
dec
shr
or
into
cmp
(bad)
data16
xor
push
push
loopne
mov
jno
jae
popa
int3
xchg
aaa
sub
push
dec
add
into
add
cld
jno
xchg
jle
lahf
jno
inc
push
cmp
xchg
test
cmp
leave
ror
mov
mov
gs
add
aaa
cmc
dec
xchg
jnp
push
and
inc
xchg
sbb
xor
or
pushf
jle
mov
mov
pop
fsub
push
or
call
or
add
mov
pop
pop
int3
xlat
pop
fs
imul
jg
and
dec
cmp
test
int3
ja
std
push
lock
arpl
add
push
pextrw
push
in
mov
mov
jae
xchg
mov
and
cmp
js
or
shl
sbb
mov
ins
inc
rol
or
je
and
std
push
xchg
pop
test
into
fcmovnb
or
in
sub
fnstsw
add
sub
js
pop
xchg
jb
cmps
cmps
das
aaa
dec
xchg
sub
icebp
neg
lods
hlt
fistp
xchg
dec
inc
push
out
stc
test
sbb
mov
cmps
mov
aaa
dec
sahf
push
cwde
scas
push
(bad)
jnp
pop
inc
(bad)
test
(bad)
out
movs
sti
outs
ss
in
mov
mov
add
jae
mov
retf
loope
rcl
loopne
jg
frstor
repnz
lock
fstp
and
mov
cmp
jmp
jmp
push
out
sub
jge
xchg
push
test
and
inc
arpl
or
sbb
popa
inc
xchg
(bad)
stc
jno
cld
out
(bad)
std
or
sub
loopne
int3
add
repnz
ins
dec
mov
in
icebp
ret
or
div
xor
mov
sahf
jmp
pushf
ss
test
adc
mov
push
sub
xor
std
retf
(bad)
jmp
jmp
inc
jo
xlat
xchg
jp
gs
cmps
call
pop
fsubr
xchg
je
outs
push
sub
popa
les
mov
cmp
pop
and
push
mov
sbb
aad
int3
mov
push
inc
in
push
ins
mov
sub
mov
dec
and
addr16
mov
fwait
mov
pop
js
sub
or
xor
lea
pop
dec
push
int3
add
and
mov
sub
nop
loopne
(bad)
(bad)
out
or
adc
lock
imul
and
scas
cmp
arpl
ins
imul
mov
inc
lock
sbb
push
aam
cmp
cmps
stos
stc
mov
jp
push
je
cli
call
jb
movs
(bad)
jb
sbb
sub
xchg
jle
in
pop
inc
pop
ss
mov
ins
imul
loopne
jmp
popf
in
push
pop
arpl
arpl
mov
inc
adc
addr16
mov
jp
and
daa
xchg
mov
pusha
jmp
out
sbb
retf
or
or
inc
jns
inc
in
jmp
pusha
rol
lods
cmp
sbb
mov
cmps
dec
movs
mov
push
pop
test
pushf
jl
mov
std
jl
push
out
push
dec
xorps
xor
cld
mov
dec
add
lea
test
(bad)
mov
pop
dec
push
sbb
xchg
xlat
xor
rol
test
stc
cmp
sub
mov
stos
lahf
test
mov
sub
xor
sar
mov
or
test
fild
adc
xchg
push
je
dec
pop
mov
sub
call
cmc
sbb
mov
into
jl
clc
cmps
push
daa
inc
out
inc
lock
mov
gs
aas
sub
ins
call
(bad)
fsub
or
mov
lea
push
dec
pop
dec
add
in
lods
pop
cli
xchg
icebp
or
scas
mov
cld
inc
stos
xor
xchg
jnp
int3
aaa
dec
sub
scas
aas
jo
enter
adc
fistp
shl
test
jge
or
in
mov
jnp
cmp
jns
test
ins
and
shr
sahf
push
(bad)
pop
call
mov
outs
cmp
mov
mov
or
(bad)
popf
or
ret
ds
imul
test
rol
dec
ins
xchg
je
adc
imul
cmp
mov
sub
xchg
cmp
sub
outs
into
std
add
pop
neg
jbe
retf
jecxz
jle
fistp
or
xor
scas
inc
(bad)
xor
jle
retf
scas
nop
dec
dec
fcomp
pop
imul
popw
mov
gs
(bad)
les
mov
aas
xchg
imul
mov
mov
jl
ins
mov
das
cmp
push
xchg
popa
sub
jnp
repz
in
mov
xor
xor
(bad)
fbstp
and
mov
cmps
jmp
xchg
pop
inc
ret
aaa
pop
mov
or
sbb
mov
adc
test
push
adc
sar
lock
(bad)
psrlw
pop
in
out
neg
rcl
mov
cmc
retf
mov
fdivr
fisubr
mov
or
sub
stos
into
rcl
inc
sub
adc
outs
mov
and
cmps
div
cmp
sbb
pop
mov
dec
mov
inc
loopne
mov
addr16
shl
outs
and
push
jb
push
sub
mov
mov
jae
mov
mul
ins
jns
dec
sbb
out
pop
mov
into
push
hlt
(bad)
jmp
sbb
aad
das
popa
dec
xor
lods
mov
xlat
jge
popf
inc
lahf
mov
xchg
push
fmul
or
std
inc
stos
test
sbb
ret
sbb
or
xchg
out
out
jb
mov
xor
fistp
outs
fisttp
mov
mov
pusha
(bad)
dec
cmp
daa
sbb
push
pop
inc
jl
ins
inc
dec
or
aaa
or
test
loop
sbb
cmp
(bad)
js
push
cmp
or
loope
icebp
scas
push
int3
add
mov
and
pop
je
unpckhps
mov
sbb
cli
mov
inc
and
lods
inc
cli
cmps
inc
mov
dec
xor
aaa
mov
sub
data16
hlt
or
inc
mov
xchg
lods
mov
add
or
push
hlt
(bad)
jo
ds
sub
into
stos
ror
jno
sub
mov
icebp
nop
dec
inc
imul
(bad)
scas
or
js
and
out
retf
pop
mov
hlt
pop
cs
xchg
push
cmp
mov
or
dec
and
fadd
sub
and
and
inc
jl
aam
or
mov
repz
xchg
mov
inc
pop
clc
addr16
xchg
jl
sub
out
add
jmp
loopne
mov
and
retf
aad
xchg
adc
push
js
in
(bad)
cwde
jmp
xor
je
cli
sbb
fst
das
push
movs
xor
rcr
cdq
xchg
cmc
xchg
mov
fiadd
cmps
sahf
fsubr
pop
into
(bad)
mov
xchg
or
dec
add
div
cmp
jbe
jge
cmp
hlt
sbb
add
in
dec
or
xor
shl
outs
sbb
or
aad
lock
adc
inc
xchg
js
das
xchg
xor
sbb
(bad)
inc
dec
mov
or
add
movs
bound
test
or
in
add
inc
mov
(bad)
sub
xchg
sbb
cmps
repz
jmp
jle
rcr
gs
jb
outs
shl
xchg
sub
xor
jns
adc
jno
mov
inc
pushf
fadd
fmul
adc
jns
test
mov
add
sbb
mov
and
call
dec
or
jecxz
sahf
(bad)
pop
mov
jle
mov
and
nop
fwait
ds
and
popa
test
and
arpl
push
ds
add
mov
xchg
fistp
shl
adc
lods
xchg
xor
fcom
cli
add
js
(bad)
and
ds
xchg
fldenv
pushf
pop
shl
cmp
mov
imul
test
mov
dec
sub
aam
test
inc
cmp
(bad)
mov
pop
add
xchg
xlat
aas
outs
int3
fnstsw
push
lock
or
sbb
imul
out
vgetmantps
pop
out
and
jmp
lock
ret
jae
test
xchg
xchg
and
add
scas
sub
jmp
push
sbb
or
push
adc
cli
inc
jl
mov
or
std
push
inc
das
mov
and
cmc
sbb
outs
add
out
push
jle
add
dec
mov
dec
pop
pushf
ror
lahf
pushf
mov
mov
into
mov
sbb
adc
sbb
clc
sbb
add
xchg
inc
add
sbb
sub
pop
jge
mov
test
cmp
xchg
int
not
sub
dec
ins
xchg
inc
fstp
repz
lock
dec
or
jmp
sbb
push
adc
stos
fmulp
pop
sbb
aas
sub
push
xchg
out
nop
or
popf
loopne
repz
outs
cmp
cwde
sbb
push
fwait
lods
push
xchg
imul
imul
jns
gs
mov
jmp
imul
xchg
in
sub
xchg
ret
sbb
leave
jae
mov
repnz
mov
and
add
xor
(bad)
mov
sbb
(bad)
push
push
pushf
das
psrad
aad
fsubr
mov
mov
shr
fiadd
loopne
shr
sbb
mov
mov
lods
pop
repnz
sub
mov
ds
jle
int
and
add
push
mov
sub
retf
mov
cmc
xor
lods
retf
add
adc
lods
dec
neg
inc
lods
out
xchg
or
movs
sub
fyl2x
cmp
bound
and
jmp
fimul
push
and
and
xor
and
mov
inc
idiv
cdq
push
ja
int3
stos
cmp
mov
lods
jecxz
in
push
outs
test
mov
and
add
jle
xchg
js
cmps
retf
push
jo
in
repnz
out
sub
mov
push
mov
mov
adc
pop
xchg
push
repz
fst
sbb
ja
dec
mov
stc
sbb
(bad)
loop
mov
jp
mov
in
mov
sbb
stos
test
jbe
dec
mov
loopne
inc
or
(bad)
adc
sbb
pushf
mov
xor
jbe
xor
loop
fstp
mov
add
mov
aas
sub
push
arpl
out
test
inc
push
cmp
xchg
hlt
push
das
aaa
jmp
scas
jmp
and
(bad)
sti
push
inc
push
clc
test
or
xchg
hlt
mov
jle
(bad)
dec
sub
adc
or
test
push
outs
in
xchg
pop
add
mov
mov
add
mov
fwait
shl
aaa
loop
outs
jg
sti
adc
jnp
(bad)
jmp
add
cli
dec
and
hlt
dec
pop
popf
cs
jg
movs
xchg
popf
not
xchg
out
sbb
jle
jl
loop
add
call
(bad)
inc
xchg
outs
inc
dec
clc
lds
out
mul
sahf
sbb
dec
rcr
in
adc
add
mov
xchg
pop
jnp
ffree
jecxz
cdq
lods
jbe
cmps
sbb
xlat
lods
loopne
mov
fild
ficom
cmp
xchg
xor
shl
repz
movs
pop
mov
les
outs
xchg
mov
test
mov
cmps
dec
imul
jecxz
clc
or
outs
or
cmps
inc
stc
sbb
jmp
mov
xchg
out
dec
mov
fistp
sub
jns
inc
pusha
cli
(bad)
pop
xchg
push
pusha
and
push
sub
or
div
jnp
fist
in
into
adc
mov
add
bound
xor
(bad)
test
jecxz
mov
pop
jmp
aam
push
je
push
mov
mov
mov
aaa
nop
cmps
push
cmp
jmp
add
xor
cmp
lea
outs
cmp
lea
(bad)
mov
out
cmp
xchg
lahf
add
and
pusha
std
shl
push
mov
into
jae
pop
fisubr
sub
or
das
push
add
movs
dec
lods
out
idiv
mov
push
cli
ins
inc
shl
pop
(bad)
jecxz
xor
push
xor
scas
dec
dec
xchg
inc
(bad)
hlt
ins
rcr
mov
and
ret
call
loop
jge
jno
jmp
dec
xor
pop
pushf
sub
and
aaa
jae
int
jge
scas
add
or
in
int
test
mov
push
add
adc
or
loop
adc
pop
or
rcl
jns
jle
sahf
inc
ret
mov
sbb
sti
outs
call
call
ins
fstp
fsin
popa
icebp
pop
or
clc
test
pop
int
outs
cmp
fs
mov
or
jmp
test
fwait
push
loop
movs
mov
push
mov
pop
stc
sti
xchg
inc
addr16
ret
lods
jmp
inc
clc
dec
mov
pop
mov
push
cs
ret
pop
jmp
mov
sub
or
or
push
inc
jo
mov
dec
cmp
inc
mov
dec
adc
test
mov
icebp
int3
(bad)
not
and
xchg
sbb
mov
ret
mov
sbb
cmp
mov
cmp
xor
pushf
jg
daa
or
or
adc
sti
sub
push
lods
daa
retf
out
push
call
xchg
jnp
mov
or
(bad)
add
cmp
add
inc
retf
pop
ss
inc
jp
and
das
data16
xchg
in
imul
aaa
push
add
fsub
xchg
pop
add
pop
sbb
and
dec
xor
lahf
test
push
(bad)
inc
sub
xor
ret
jo
xor
fld
and
inc
xor
arpl
(bad)
call
iret
ficom
call
push
fidivr
mov
mov
cs
loope
jmp
ins
ins
jns
adc
in
data16
mov
xlat
xchg
outs
xor
out
push
sub
imul
jg
popa
cmp
imul
dec
call
adc
cs
data16
aas
jno
das
in
or
or
or
stos
mov
jg
movs
ja
enter
(bad)
fmul
ins
dec
(bad)
mov
outs
outs
not
or
into
mov
outs
cs
dec
add
int
aad
pusha
push
(bad)
dec
cmp
loop
fldl2e
mov
pop
fist
lods
loope
or
rcl
nop
jmp
aaa
xor
shl
jmp
jae
sbb
ficomp
inc
add
fcomp
sti
add
and
jg
sti
add
push
ins
and
mov
popf
mov
data16
rcr
cld
sbb
mov
pop
hlt
neg
mov
loope
fild
dec
inc
jl
pop
lods
movs
lods
hlt
push
cmp
jg
push
(bad)
jmp
retf
mov
or
cld
(bad)
ror
popf
or
stos
fisubr
and
push
clc
dec
mov
lock
repz
jle
jge
je
popf
inc
ja
inc
xchg
lahf
inc
cmps
pop
jp
jns
cwde
xor
mul
mov
in
inc
lods
mov
and
cmp
and
enter
call
loope
inc
mov
ret
mov
mov
xchg
cmp
jne
repz
adc
mov
shl
fstp
mov
das
add
xchg
or
bound
bnd
adc
(bad)
(bad)
xlat
in
rcr
ins
ret
or
jnp
pushf
sahf
movs
sahf
scas
mov
add
fwait
inc
jg
mov
loopne
pop
(bad)
adc
xlat
mov
ins
pop
push
ss
jns
adc
or
pop
cmp
addr16
mov
jmp
jae
add
adc
inc
dec
jnp
out
inc
outs
xchg
aam
mov
cld
dec
mov
into
and
lea
and
ja
sbb
push
int
push
fst
push
imul
sub
sub
call
xor
out
or
mov
(bad)
cmps
leave
push
push
cmp
repnz
push
hlt
xchg
leave
push
mov
dec
cmp
arpl
mov
(bad)
pop
into
(bad)
jnp
mov
or
sub
lods
test
ja
pusha
jno
inc
jo
sbb
loopne
dec
pop
inc
mov
inc
test
sbb
(bad)
(bad)
into
call
inc
sti
lock
jg
sbb
mov
xor
add
out
(bad)
push
cmp
setl
pop
retf
iret
mov
scas
pop
mov
sub
xchg
imul
jnp
and
rcr
pop
fldcw
jl
es
jo
add
(bad)
in
inc
lods
jne
cmps
nop
(bad)
mov
mov
sub
std
in
push
cmp
test
dec
jb
pop
cmp
jno
imul
xlat
dec
adc
out
jmp
or
mov
cmp
mov
mov
xchg
mov
and
hlt
pop
jecxz
fidivr
mov
adc
aam
pop
cmp
fild
leave
call
int
test
outs
ins
push
fs
outs
movs
aaa
inc
sbb
add
fsub
sahf
or
push
sbb
xchg
loop
inc
dec
xchg
ins
xchg
(bad)
xor
mov
fdivr
cwde
icebp
daa
cmp
repnz
sbb
inc
jl
mov
xchg
imul
add
push
mov
leave
jns
sbb
push
jo
push
scas
lods
push
cmc
cmp
add
popa
stos
adc
pop
(bad)
loopne
rcl
fidivr
sti
stos
mov
push
test
jecxz
in
inc
pop
push
(bad)
loop
popa
sub
je
mov
pop
inc
jle
mov
pmaxsw
movs
adc
scas
test
jns
lock
sub
push
iret
ja
(bad)
xlat
lods
jne
inc
test
pop
ret
mov
ret
outs
push
popa
lea
mov
ffree
(bad)
nop
icebp
add
pop
loopne
sub
ja
push
out
jnp
popf
idiv
xchg
int
pop
cmp
mov
fsub
mov
addr16
shl
push
cli
pop
scas
sub
or
inc
dec
jg
lods
mov
daa
inc
push
(bad)
ins
push
or
or
or
or
int
lods
lea
push
retf
out
mov
xchg
fmul
sbb
shl
pop
out
rcl
adc
dec
jmp
push
lods
ret
add
push
lods
inc
je
jecxz
ror
addr16
out
sbb
sub
push
inc
inc
jecxz
fucomip
scas
sbb
daa
cmp
adc
lds
in
mov
fwait
and
retf
aad
(bad)
stos
rcr
mov
mov
(bad)
popw
ficom
push
je
pop
push
xor
adc
mov
cdq
arpl
sub
add
jge
xor
sbb
sub
adc
sbb
loopne
or
adc
aaa
inc
dec
call
or
cmpxchg
mov
sbb
loop
test
pop
xchg
ret
es
les
add
stc
mov
in
pop
jmp
inc
pop
dec
aam
sub
xchg
fmul
pop
cmp
push
jmp
push
mov
add
aam
mov
fs
xchg
repnz
sbb
xchg
test
aad
push
inc
jo
or
push
and
inc
add
inc
dec
imul
stos
cmc
dec
arpl
call
lds
sub
out
shl
rol
test
pop
cs
pop
sub
add
push
dec
push
lds
call
cmp
cwde
gs
out
out
aas
aam
sub
jg
mov
in
lahf
xor
pop
and
fwait
shl
retf
fst
pop
add
pop
or
push
aas
push
es
mov
sbb
es
inc
cmp
jns
dec
sar
cmps
test
dec
popa
fldenv
xor
mov
sbb
aas
dec
enter
inc
add
mov
xor
push
stos
cli
mov
push
inc
inc
xchg
ins
add
adc
sbb
inc
and
sbb
mov
bound
neg
or
pop
(bad)
push
and
fisubr
mov
cmc
out
push
int
xchg
jge
or
sbb
clc
pop
cmp
je
inc
popf
in
out
push
push
inc
jle
jns
clc
pushf
data16
std
and
cmp
pusha
out
nop
jle
icebp
mov
pop
lahf
cwde
jp
jns
lods
hlt
sub
sahf
into
jl
aas
iret
int3
iret
or
mov
sbb
pop
sbb
xor
loopne
jae
adc
jl
pop
sub
mov
rol
mov
mov
pusha
dec
push
icebp
daa
mov
push
mov
stos
pushf
(bad)
and
dec
mov
fsubr
xor
add
jne
(bad)
out
test
sub
sub
mov
xor
xchg
or
outs
or
bound
out
inc
jecxz
cs
xor
xchg
test
inc
cmp
int
pop
cld
adc
sbb
sbb
addr16
repz
sub
mov
or
hlt
sti
nop
adc
xor
jg
and
imul
bound
loope
fwait
repz
jns
push
cmp
cmp
push
mov
shr
and
sub
arpl
daa
mov
retf
rcr
and
sti
xor
outs
adc
stc
mov
and
popa
adc
dec
xchg
jne
lock
sub
jecxz
aam
mov
sar
lods
sbb
add
cmovs
pop
and
lea
sub
mov
clc
or
xchg
cmps
push
add
clc
aas
inc
lods
dec
or
int3
int3
pop
je
movs
(bad)
and
(bad)
std
pop
xchg
scas
repz
arpl
(bad)
repz
or
lds
push
xchg
dec
sbb
rcr
jmp
lods
or
or
enter
push
out
out
xchg
dec
lods
inc
lds
push
fdiv
mov
jmp
push
jne
sbb
dec
dec
movs
loopne
shl
(bad)
dec
pop
(bad)
sbb
loope
add
addr16
sub
into
or
paddsb
loop
push
sbb
loopne
or
(bad)
clc
mov
sbb
enter
inc
push
adc
popf
fcom
leave
fistp
in
mov
xchg
jo
or
cmp
mov
xor
bound
xchg
mov
stc
imul
adc
fdiv
add
and
inc
dec
inc
out
lods
xchg
in
adc
pop
add
stos
inc
mov
adc
add
adc
push
lock
mov
iret
and
ret
jno
je
sub
repnz
xor
pop
dec
test
dec
(bad)
push
test
or
lods
rcr
mov
xor
push
call
add
pusha
int
push
cmp
jnp
les
daa
sbb
push
push
(bad)
push
xchg
push
xchg
inc
popa
cmc
mov
xchg
sbb
pop
clc
bound
outs
dec
sar
xchg
pop
repnz
jecxz
push
daa
div
or
cmp
(bad)
mov
aaa
loope
cli
enter
mov
mov
adc
scas
(bad)
mov
mov
dec
and
movs
rcr
call
stos
xlat
daa
sahf
fst
sub
(bad)
cmps
aam
loope
cmp
push
sbb
and
arpl
pop
pop
dec
inc
sub
xor
(bad)
int
mov
adc
imul
pusha
outs
mov
push
mov
or
(bad)
(bad)
jns
fstp
popf
ins
dec
push
test
jb
imul
mov
dec
dec
stos
mov
test
add
test
fdiv
inc
mov
and
dec
inc
inc
js
fbld
push
int
jnp
jl
es
dec
pop
and
ins
std
mov
retf
sub
shl
iret
mov
xor
push
loopne
ss
xor
test
cmp
shl
fwait
dec
aam
stc
icebp
aaa
adc
sbb
inc
repnz
add
fsub
out
std
push
and
lea
fild
cmp
adc
cmp
push
push
aaa
push
pop
jp
xchg
(bad)
jmp
repz
dec
ins
call
lock
loop
loope
xchg
cmp
or
dec
or
and
pop
dec
jl
xchg
std
inc
fist
cmps
out
call
add
clc
repnz
dec
pusha
pop
cmp
cli
jnp
cmp
sar
mov
inc
adc
push
mov
dec
fcom
dec
cmp
imul
dec
lds
add
mov
je
out
cdq
lods
pop
cmc
(bad)
test
mov
sahf
fisttp
dec
cs
jge
pop
hlt
data16
ds
dec
out
(bad)
cmp
cmp
jecxz
cmp
sub
mov
xor
and
and
add
cli
jne
jns
adc
pop
mov
inc
test
jne
sti
retf
xchg
sar
push
mov
adc
or
enter
test
and
add
sub
aad
mov
sahf
sub
retf
sbb
lods
ja
mov
test
leave
xor
(bad)
(bad)
xor
test
in
xchg
xchg
push
nop
or
mov
sub
jnp
sbb
inc
xchg
dec
pop
pop
js
scas
pop
sbb
pop
enter
(bad)
sbb
pushf
pop
imul
add
pop
sahf
xlat
sbb
dec
in
push
push
cmp
mov
es
push
add
jno
cmp
ds
in
ins
lods
push
fst
push
pop
ins
aad
outs
sti
fmul
fsubp
dec
add
pushf
jae
mov
out
inc
mov
test
xchg
mov
cmps
pusha
inc
ror
cmp
out
int
leave
pop
adc
pop
mov
std
add
mov
out
and
sub
jp
test
(bad)
repz
adc
inc
lds
xchg
fs
test
jno
mov
cmp
adc
inc
pop
(bad)
scas
fldcw
inc
xchg
and
push
in
adc
dec
out
pop
test
xor
data16
ss
and
sub
inc
fucomip
inc
cmp
push
push
sub
(bad)
or
mov
add
je
add
fild
out
or
cmp
pushf
or
loope
and
div
inc
dec
push
jg
fbstp
adc
bound
in
loope
loopne
sbb
sti
or
out
cwde
popa
xchg
adc
aad
push
ja
cmp
cmp
repz
xchg
stos
fdivr
aas
sbb
(bad)
std
xlat
mov
icebp
jmp
(bad)
xchg
ss
stos
enter
pop
dec
sub
adc
adc
sbb
add
sub
dec
sub
xlat
xor
xor
pop
jns
bound
pop
out
pop
mov
call
adc
cmp
and
add
movs
rcr
sbb
mov
xor
jle
rol
or
mov
imul
aas
out
retf
push
xchg
sti
in
jg
adc
xor
inc
cmp
cs
(bad)
xchg
out
pusha
xchg
or
mov
into
and
sub
idiv
mov
rcl
mov
mov
leave
inc
(bad)
xor
push
sbb
(bad)
(bad)
add
cs
cmps
xor
lods
sahf
or
lds
in
test
aam
daa
movs
aam
fisubr
repnz
mov
outs
clc
cmp
mov
in
aam
xor
add
dec
data16
repz
lahf
in
dec
repz
xchg
cmp
adc
and
mov
repz
loopne
cmp
sbb
mov
rcr
sbb
sti
pop
cli
aas
ss
cwde
or
loop
sahf
bound
or
mov
xor
mov
push
rcl
adc
mov
aaa
dec
xchg
(bad)
and
cmp
push
ins
jbe
idiv
push
retf
test
fst
push
and
xchg
out
retf
xchg
xor
xor
dec
adc
inc
push
sti
in
mov
jne
mov
(bad)
cmc
imul
scas
push
cld
imul
dec
std
cli
cmps
gs
pop
add
sar
push
cmp
and
xchg
sub
repnz
dec
imul
inc
mov
mov
push
mov
nop
ins
es
dec
jge
sub
imul
xchg
adc
adc
aaa
ret
xor
(bad)
sbb
and
bound
or
cmp
mov
sbb
push
push
adc
popf
jecxz
data16
push
lahf
ins
adc
jl
gs
call
mov
rcr
cmp
sub
xor
mov
add
sub
scas
add
ds
pop
jae
pop
ficom
pop
xor
inc
call
js
cmp
sub
rcr
push
push
mov
adc
and
push
outs
xchg
cdq
dec
fxch
pop
xor
pop
add
sar
test
dec
xor
mov
cld
out
fcom
sbb
out
and
add
pop
xchg
adc
and
test
sbb
bound
stc
inc
scas
add
jl
(bad)
dec
jmp
je
mov
dec
mov
push
cmp
cmp
push
cmp
rol
mov
push
shl
in
add
xchg
in
add
sbb
lahf
add
enter
xchg
cli
fwait
pop
pop
iret
mov
lock
dec
xchg
add
(bad)
pusha
repz
cmp
xor
sbb
sbb
sbb
movs
jns
fisub
xchg
pop
fdivrp
rcl
shr
adc
sbb
cwde
mov
aas
xchg
gs
aad
add
ins
inc
jne
mov
rcr
inc
mov
addr16
pop
cmp
add
sbb
mov
sbb
adc
xor
outs
sub
daa
not
lahf
not
pop
mov
sbb
mov
movs
and
jle
ficom
or
in
xchg
imul
or
rcr
mov
xor
push
fisub
out
imul
cmps
and
mov
jmp
(bad)
sti
jbe
out
das
(bad)
adc
(bad)
mov
test
pop
in
call
stc
push
jns
ss
clc
ja
out
jne
imul
pop
stc
jnp
adc
call
dec
sbb
sub
xor
out
cmps
leave
jb
out
div
mov
mov
cmp
pushf
jl
ins
jb
pusha
sbb
ja
mul
(bad)
(bad)
jecxz
and
aaa
or
mov
mul
jmp
adc
ins
mov
mov
fwait
xchg
jne
aaa
in
or
data16
dec
adc
pop
jle
fdivrp
test
jg
mov
xor
dec
sbb
mov
nop
jmp
and
cmp
jbe
ret
push
or
dec
dec
fidivr
push
xchg
lods
mov
mov
cmps
or
mov
add
dec
or
stc
mov
loopne
retf
out
dec
out
enter
inc
mov
sub
sub
mov
add
adc
fwait
xchg
dec
xchg
pushf
ja
mov
pop
xor
pop
imul
ds
test
mov
sub
add
pop
hlt
cmps
or
pop
lds
rcr
mov
mov
jle
call
cmp
xchg
push
xchg
xchg
cld
adc
xor
sti
ror
pop
dec
scas
push
or
push
ret
dec
jecxz
dec
ins
iret
(bad)
stc
mov
jbe
jbe
cmp
mov
dec
test
cmp
sbb
and
push
xlat
jp
loope
push
dec
je
add
or
aam
fsubr
xchg
das
cmp
mov
inc
jle
sbb
adc
nop
mov
test
lods
sub
out
add
shr
out
mov
into
pusha
cmp
cmp
jl
jl
jle
xchg
push
mov
sbb
or
mov
jae
mov
dec
jae
sti
pop
std
mul
out
xchg
arpl
jmp
cli
mov
ds
lds
mov
inc
dec
(bad)
dec
(bad)
fisttp
dec
sbb
inc
dec
xchg
sbb
inc
fsubr
pushf
dec
jp
add
add
ret
xlat
or
imul
call
or
js
cmp
dec
data16
ltr
cmps
gs
call
sbb
mov
mov
mov
out
xor
and
mov
ins
jl
das
adc
add
mov
pop
xor
push
hlt
xchg
mov
or
sub
aad
test
push
jle
lds
ss
je
jg
out
push
in
pop
cmp
push
xchg
imul
and
adc
mov
xchg
iret
sub
pop
pop
adc
daa
jp
jo
jb
sub
add
and
cmp
fld
je
jle
xchg
cdq
jge
fs
and
jge
sub
(bad)
scas
js
sub
mov
xchg
pop
dec
lods
inc
mov
test
adc
dec
jmp
push
sbb
(bad)
mov
scas
sub
retf
sahf
lahf
pop
(bad)
push
repz
cmp
(bad)
clc
mov
nop
mov
dec
inc
cmp
jecxz
call
push
(bad)
es
sti
out
out
mov
cmp
jne
iret
mov
dec
daa
repnz
movs
and
gs
sbb
inc
jb
sar
pop
pop
mov
xchg
sub
arpl
idiv
ss
inc
xchg
xchg
addr16
mov
jbe
test
cmp
fs
or
fadd
clc
and
cmps
stos
and
(bad)
xor
jnp
pusha
cwde
push
adc
jmp
fiadd
test
push
push
or
inc
mov
scas
dec
aaa
mov
scas
xchg
cmp
fdivr
pop
out
xchg
xor
das
ins
retf
sub
in
ret
fisttp
nop
cs
sbb
fistp
(bad)
dec
cmp
(bad)
push
cmps
and
inc
sbb
xchg
or
test
int
out
fs
adc
shl
ret
shl
test
lahf
test
mov
out
sbb
(bad)
int
jge
jno
push
jnp
jecxz
(bad)
mov
dec
pop
ror
sub
(bad)
cmp
out
push
push
stos
data16
xor
int3
push
pushw
cmp
enter
add
mov
aad
inc
int3
fsubr
mov
jl
fwait
push
ret
push
std
imul
(bad)
pop
retf
pop
ds
cwde
test
sub
(bad)
mov
outs
mov
mov
mov
xor
mov
das
inc
or
fst
xchg
xor
icebp
pop
int
cdq
or
sub
add
push
(bad)
popf
nop
rol
clc
add
addr16
add
popa
sbb
fadd
jae
mov
and
pop
not
adc
mov
mov
jmp
mov
cwde
inc
push
mov
(bad)
sub
or
in
sbb
dec
and
adc
mov
cmps
imul
pop
cdq
xchg
div
sub
mov
adc
sub
xor
(bad)
inc
add
ja
pushf
xchg
rep
enter
inc
pushf
jae
sbb
fcmove
pop
jnp
cmp
jb
stos
outs
fistp
or
outs
add
test
jmp
jg
push
adc
cmp
mov
jl
fwait
sti
pop
adc
mov
mov
push
xchg
shl
bound
faddp
add
shr
jmp
mov
jns
aaa
mov
add
fiadd
cli
mov
inc
and
imul
out
mov
adc
jno
popa
mov
aam
popa
mov
leave
popa
xor
imul
add
jecxz
js
sub
shr
aas
mov
imul
mov
add
mov
sbb
push
jnp
push
inc
js
add
out
enter
pop
lods
bound
mov
(bad)
je
mov
in
repnz
icebp
push
jp
xor
sub
mov
ja
int3
ficomp
stc
leave
repnz
daa
cmps
dec
lods
mov
adc
jecxz
in
pushf
and
xchg
pop
inc
adc
adc
aas
mov
jne
test
movs
cdq
rcr
jo
(bad)
mov
clc
fbstp
cwde
ja
push
cs
daa
sbb
inc
fbld
and
sub
add
sbb
enter
mul
fidiv
xchg
retf
xor
and
cmp
xchg
pop
push
xor
xor
add
mov
outs
cli
xchg
stos
push
pop
clc
and
test
or
push
sub
or
jl
and
sbb
pop
out
pop
sbb
daa
je
pop
pop
movs
mov
aad
pop
ins
inc
packuswb
cdq
add
jno
fsubr
push
pop
pop
test
popf
adc
mov
mov
inc
mov
(bad)
ss
inc
fcomp
into
xchg
mov
xchg
push
int3
jmp
ds
loope
sub
adc
xor
mov
imul
sub
cmp
pop
cmp
nop
lahf
lea
neg
xor
push
pop
pop
mov
sub
mov
ins
sub
out
ins
test
mov
call
xchg
iret
enter
and
out
(bad)
mov
mov
fmul
xchg
adc
aad
pop
push
sbb
jne
mov
jno
stc
add
test
lods
mov
mov
xchg
mov
in
loop
mov
hlt
sub
adc
nop
xor
ret
sub
sbb
mov
dec
jge
mov
frndint
push
shl
fwait
and
(bad)
rcr
ins
idiv
push
xchg
pop
jo
ret
and
test
cmp
or
xor
movs
ja
rcr
mov
inc
fsubp
mov
mov
xchg
shr
arpl
xchg
out
jg
sub
dec
push
fcomp
into
scas
and
(bad)
fisubr
rcl
xor
mul
or
mov
icebp
lods
adc
fs
pop
xlat
test
sbb
dec
jmp
inc
stos
stc
aam
out
and
sub
mov
iret
adc
inc
push
test
sub
xchg
jbe
cwde
or
jno
(bad)
mov
outs
repz
jno
pop
in
fwait
div
add
push
scas
repnz
fimul
sbb
std
jo
sbb
mov
leave
add
retf
ds
push
ret
pop
es
imul
pop
cmp
lods
pusha
jmp
add
fcom
cmp
fs
cmps
ja
jge
jecxz
inc
fidiv
mov
addr16
mov
out
mov
out
mov
add
movs
mov
pop
mov
gs
neg
jge
loope
add
sti
push
cld
fwait
mov
into
iret
rol
scas
fwait
or
jmp
mov
and
retf
inc
push
cmp
mov
sub
inc
test
out
repz
or
inc
cdq
iret
repnz
cli
add
call
xor
adc
jmp
imul
or
cmps
mov
(bad)
jnp
js
add
popa
pop
sbb
loope
xchg
idiv
xchg
pop
mov
imul
jecxz
bound
icebp
sub
out
jb
cmp
test
xchg
mov
xchg
lds
push
rcr
inc
inc
stos
mov
pop
fadd
cmps
mov
shl
or
add
add
stos
xor
jb
test
inc
dec
loop
or
cmp
sub
pop
pop
inc
fcomp
sub
inc
neg
add
mov
movs
push
jmp
es
iret
pop
xchg
cmp
dec
(bad)
xor
or
mov
mov
adc
test
push
fild
rcl
enter
adc
jo
adc
imul
sbb
int3
push
pop
cmp
push
repnz
jg
xor
shl
or
push
mov
les
in
mov
ds
stos
shl
jns
dec
outs
iret
or
lds
mov
inc
loope
aad
adc
dec
test
xchg
adc
mov
je
mov
fld
inc
into
xor
fdiv
sbb
movs
ins
pop
mov
mov
clc
sti
cmp
inc
out
dec
push
xchg
mov
aas
cwde
xchg
into
adc
(bad)
mov
lock
sbb
adc
je
sbb
sbb
cmc
ss
adc
(bad)
(bad)
pop
je
out
cdq
loope
aad
aas
adc
clc
cmp
xor
in
imul
in
rcr
ds
jecxz
push
inc
xchg
inc
retf
imul
pop
xor
jecxz
mov
out
ins
pop
pusha
jl
(bad)
ins
inc
outs
shl
in
mov
xor
mov
push
inc
test
pushf
jecxz
ins
or
sbb
inc
sahf
in
jg
shl
shl
out
cwde
call
je
pop
cli
push
icebp
push
push
mul
or
std
hlt
xchg
js
aaa
mov
ds
pop
or
aaa
cmps
cwde
xor
call
in
dec
jne
sbb
or
mov
in
cmp
pop
aad
jae
xchg
in
stc
jle
sub
mov
cwde
pop
or
mov
cmp
fist
rcr
pop
loope
xchg
sub
nop
push
mov
pusha
and
aas
dec
mov
sub
icebp
jp
std
inc
xor
mov
in
pushf
mov
pop
or
adc
arpl
cmps
mov
shr
sbb
idiv
cmp
inc
push
shr
je
inc
pop
cld
sar
call
or
push
push
data16
cmp
xchg
(bad)
arpl
push
gs
sbb
sub
fs
dec
sub
pop
js
not
aas
mov
rol
(bad)
shl
cli
cmp
sbb
dec
xchg
ins
les
push
arpl
mov
ret
not
push
out
mov
push
add
scas
loopne
call
mov
xor
cmp
in
or
mov
retf
stc
dec
jle
stos
mov
and
neg
sub
jecxz
add
ds
mov
aam
gs
je
outs
add
inc
imul
sti
fmul
mov
out
dec
or
pop
pop
dec
bound
je
stos
mov
cmp
rol
imul
enter
dec
push
jle
or
sub
mov
ficomp
into
xchg
jmp
xlat
jge
outs
mov
fidivr
shl
sar
loop
jae
rcl
add
inc
or
sbb
fwait
and
(bad)
and
les
or
xchg
inc
pusha
mov
popf
into
sub
(bad)
xchg
push
sahf
loope
sbb
inc
and
pop
nop
sbb
iret
and
sub
cmps
mov
pop
inc
xchg
outs
hlt
adc
mov
lods
jo
cmps
pop
(bad)
jns
and
fs
ret
ja
mov
push
cmps
nop
add
cwde
mov
pmulhw
xlat
sbb
(bad)
pop
pop
or
in
pop
cmps
adc
icebp
and
nop
inc
jmp
sub
inc
jmp
daa
mov
imul
mov
imul
and
push
repnz
test
pop
imul
or
ja
(bad)
lea
and
mov
sbb
xor
stc
stos
jbe
test
aam
sub
jnp
rcr
sar
ret
ss
inc
cmp
push
xor
rcl
pop
or
mov
test
push
mov
lods
cmps
retf
and
icebp
stos
inc
lock
mov
rcl
test
sbb
fucomi
add
mov
xlat
dec
mov
scas
(bad)
mov
cmp
shl
mov
inc
repnz
or
jbe
dec
and
pop
and
psubd
jge
xchg
scas
push
mov
add
push
(bad)
popf
lock
ds
jbe
and
dec
out
mov
push
sub
push
mov
add
mov
push
mov
or
sub
xor
xor
fmul
lods
loop
mov
sti
pop
push
sahf
pushf
mov
jecxz
int
out
sbb
jp
in
and
loopne
mov
mov
or
push
mov
mov
jbe
jl
test
pop
idiv
mov
jl
adc
stos
dec
dec
cmp
aam
jle
jae
cdq
mov
sbb
sub
jle
mov
jmp
fmul
or
inc
dec
and
mov
fdivrp
mov
retf
pop
mov
adc
dec
pop
push
int
pushf
pop
stos
jecxz
mov
jne
jl
jl
loopne
pop
das
idiv
sbb
popa
or
popf
sub
repz
push
pop
or
and
xor
inc
icebp
and
call
cmps
and
pop
adc
(bad)
push
ret
scas
pop
sbb
btr
or
inc
pop
pop
push
jl
mov
cmp
xor
pop
jb
jo
mov
or
call
mov
in
push
rcr
jl
ret
fsub
jmp
push
cmp
inc
retf
loopne
push
(bad)
mov
fstp
mov
fstp
jae
sahf
aaa
imul
retf
cmc
mov
and
call
or
sar
pop
cmps
mov
addr16
jno
push
aad
jle
sub
adc
jmp
cmp
test
out
int3
mov
stos
xlat
call
int3
cmp
aad
js
movs
pop
mov
popf
push
jno
lods
stos
daa
shl
sbb
or
stos
rol
int
cmp
add
dec
(bad)
xor
out
cwde
lods
loopne
repnz
mov
fidiv
and
cmp
jb
cmp
sti
cwde
nop
pop
mov
lea
je
lods
jecxz
mov
push
push
out
test
pop
cmps
in
aas
add
pop
fwait
or
adc
ins
inc
mov
(bad)
jns
push
jns
popf
sub
int
push
std
iret
sbb
pop
pop
int3
xor
mov
fisubr
and
add
mov
inc
cmp
xchg
cmps
test
dec
xchg
push
fisubr
es
pop
and
lds
jge
push
pop
idiv
out
test
mov
pop
or
add
leave
iret
shl
mov
and
or
push
pop
hlt
jmp
mov
pop
add
fst
xor
aad
test
callw
(bad)
sti
xchg
retf
icebp
adc
dec
xor
xlat
mov
mov
xchg
dec
mov
outs
mov
in
mov
call
dec
jno
int3
mov
pop
add
mov
adc
mov
mul
je
inc
cmc
or
adc
jae
mov
or
out
ins
xchg
mov
mov
aad
push
or
and
loop
xchg
and
cmps
stos
stos
add
sbb
xor
fnsetpm(287
mov
pop
cld
push
pop
or
hlt
cmp
xor
jb
xor
or
std
mov
jg
cld
mov
daa
lahf
int
js
push
into
ret
cs
or
gs
es
jo
mov
jne
stos
add
cmp
xchg
popa
popf
idiv
cli
push
pop
push
out
arpl
xchg
dec
loopne
(bad)
imul
mov
in
jmp
dec
mov
movs
test
scas
adc
ins
add
imul
push
xchg
das
sbb
pop
pop
mov
pop
push
and
std
scas
jmp
clc
fst
gs
mov
and
pop
or
adc
jecxz
push
xor
mov
inc
jmp
jg
cmps
inc
out
ror
xchg
mov
pop
jae
outs
addr16
(bad)
and
inc
push
mov
xchg
and
into
out
push
fwait
sti
mov
mov
cmp
vmovapd
clc
cmps
test
mov
mov
push
jnp
dec
mov
mov
fwait
push
and
xchg
leave
test
fbstp
in
pushf
scas
inc
mov
lods
loop
lea
mov
repz
push
jmp
out
inc
mov
outs
in
dec
jae
inc
arpl
or
add
cli
add
out
outs
aas
out
inc
rcl
mov
sub
sub
lea
movs
ins
aad
add
xchg
sbb
mov
clc
je
lock
fsubr
fidiv
push
pop
add
jmp
cmp
je
mov
fst
adc
dec
stos
enter
mov
fisttp
push
mov
xor
and
je
jg
dec
sahf
jg
pop
dec
adc
mov
lock
adc
add
movs
stos
or
xor
xor
and
push
or
sbb
fs
inc
xchg
sub
std
ja
mov
or
test
push
jo
and
js
and
push
out
lahf
retf
data16
mov
(bad)
call
xor
jmp
jo
dec
adc
add
sub
add
sub
mov
push
sub
cmp
pop
dec
(bad)
jge
loope
je
(bad)
cld
dec
lods
mov
pop
mov
cmps
add
test
xchg
not
cmps
hlt
sub
sub
mov
push
stos
inc
lea
ja
or
add
retf
cmp
(bad)
cmps
sbb
out
inc
addr16
in
jns
enter
nop
movs
xor
push
scas
cwde
push
mov
clc
mov
outs
xchg
pop
xlat
test
(bad)
(bad)
cmps
popf
mov
xchg
lock
test
xor
xchg
pop
push
sub
mov
push
call
jo
jno
mov
or
call
arpl
iret
adc
outs
nop
lods
pop
or
js
dec
sbb
ins
int
push
push
sub
and
imul
pop
adc
mov
popf
inc
clc
lahf
and
fistp
mov
mov
or
pop
cdq
imul
outs
jo
pop
jno
xchg
push
and
lods
retf
fwait
xchg
cdq
xchg
mov
xor
mov
or
push
pop
or
sbb
cs
ds
repnz
jo
fild
shl
pop
std
jo
ja
dec
cmps
fld
std
or
test
and
test
(bad)
cmp
or
call
cmp
jp
push
pop
repnz
imul
or
test
push
outs
div
xlat
push
test
dec
out
mov
sub
sub
cmp
inc
adc
or
push
repz
(bad)
add
xor
xchg
pop
mov
adc
cmps
stos
sbb
scas
scas
adc
and
addr16
in
cmp
leave
mov
test
lods
imul
sti
nop
or
xchg
or
leave
and
mov
sub
push
xchg
or
xor
mov
popf
aad
push
lahf
jp
shl
add
jnp
push
fisttp
pop
repnz
in
push
loopne
jg
mov
xchg
daa
hlt
adc
jae
sahf
test
push
gs
retf
sar
fs
add
push
sbb
add
or
mov
daa
jp
pop
test
out
xor
stos
pop
pop
div
arpl
and
push
adc
jmp
(bad)
sbb
dec
and
outs
loope
call
cli
and
fwait
ja
xor
mov
xor
push
lahf
sub
call
test
outs
xor
mov
jmp
lods
push
pop
dec
repz
fidiv
push
pop
pop
fcom
inc
arpl
pop
push
(bad)
cmps
inc
outs
or
std
out
or
mov
sbb
mov
sahf
std
pop
mov
aaa
mov
inc
mov
je
imul
div
retf
add
cdq
push
push
call
inc
xor
mov
fist
mov
bound
outs
cli
cmp
or
std
imul
pop
out
push
popa
fistp
je
mov
loop
lods
mov
xchg
leave
mov
push
adc
pushf
mov
and
clc
xor
mov
sar
jns
rcr
mov
sbb
mov
repnz
movs
dec
xchg
lock
mov
dec
in
mov
daa
outs
xor
arpl
ins
sbb
mov
add
push
cdq
ret
pop
and
pop
jno
in
cwde
dec
jmp
and
mov
fmul
or
add
mov
push
inc
inc
cmc
aad
fistp
inc
and
lods
sahf
jl
lock
push
xchg
vmread
jne
rcr
mov
or
xchg
dec
cmp
inc
dec
(bad)
push
aas
xor
mov
jl
dec
cmp
add
push
jg
ret
sbb
outs
sub
fs
sbb
jmp
test
and
imul
pop
test
jne
pop
(bad)
jno
clc
jp
cmp
fdivr
mov
or
jnp
cmp
test
add
and
dec
loop
mov
ds
sar
add
push
mov
mov
loopne
push
scas
neg
jbe
dec
pop
outs
jle
mov
pop
ja
xlat
mov
lea
repnz
and
jnp
and
div
test
fisttp
cmp
aad
add
mov
std
jb
loope
jbe
xchg
push
ss
fidivr
xchg
sar
push
daa
sar
xor
cli
call
pop
in
lock
dec
jb
xchg
mov
(bad)
(bad)
loop
retf
inc
cli
(bad)
push
or
pushf
sub
push
xchg
out
test
clc
cdq
and
inc
push
leave
bound
mov
inc
clc
imul
mov
lods
pop
xor
lea
xchg
push
clc
dec
push
dec
cmp
and
mov
(bad)
cmps
pushf
imul
sbb
xor
mov
mov
out
xchg
aas
xor
or
pusha
stos
sbb
cwde
popf
stc
dec
repnz
jg
push
scas
pop
mov
and
cmps
in
adc
xchg
or
stos
int3
add
inc
cmp
iret
pop
xchg
add
test
pop
inc
pop
jnp
or
les
fmul
movs
push
(bad)
pop
mov
pop
lea
pop
nop
das
inc
sbb
xchg
(bad)
retf
retf
(bad)
out
mov
dec
sbb
xchg
jae
add
pop
inc
les
sub
add
lahf
outs
int
rcr
inc
fwait
sub
fwait
in
aas
mov
test
or
xor
and
out
add
mov
push
fcom
ins
xchg
icebp
int
or
hlt
dec
xchg
fidivr
mov
jmp
jl
push
in
iret
xor
jle
and
call
(bad)
aam
and
fmul
mov
es
ror
mov
jmp
cmp
(bad)
in
repz
or
adc
icebp
mov
jnp
xor
mov
mov
sbb
in
or
add
aas
call
nop
aad
inc
xchg
shl
push
push
retf
push
push
mov
test
push
popa
jmp
shr
ins
popa
and
adc
and
mov
jne
mov
jmp
bound
mov
sub
lahf
xor
fucomi
push
fistp
and
inc
jne
push
ficomp
(bad)
es
adc
mov
mov
lods
mov
jmp
mov
push
bts
scas
sub
sbb
test
and
stc
mov
out
test
outs
scas
inc
push
aad
lahf
pusha
mov
fld
dec
mov
mov
lods
xchg
cmps
mov
in
jg
daa
sahf
mov
jl
mov
cmp
dec
add
dec
jae
inc
shr
shr
lds
cs
sub
cmps
fld
sbb
xchg
arpl
ss
fcmovbe
loope
mov
imul
mov
ja
ds
mov
int
mov
and
je
pop
addr16
add
jmp
iret
sbb
scas
jge
(bad)
adc
xor
fimul
cmp
shl
and
scas
push
sbb
rcr
and
in
in
fcmovnb
xchg
jmp
pop
(bad)
mov
lahf
shl
hlt
inc
aad
inc
sub
test
fld
lea
sbb
xor
adc
movs
adc
movs
lods
cld
mov
(bad)
adc
adc
sbb
xchg
and
mov
fsub
or
pop
xor
add
sbb
in
fisubr
xchg
and
jle
dec
stos
sub
add
rcl
inc
aas
ss
and
scas
adc
push
scas
sub
out
popf
xchg
push
xor
aaa
add
imul
mov
adc
xor
pop
les
aam
ins
sahf
sub
cmp
and
cmps
add
fs
jbe
add
in
pusha
inc
addr16
leave
inc
or
pop
mov
sbb
outs
sbb
add
lahf
mov
scas
mov
xor
call
dec
sbb
sub
or
mov
loopne
and
mov
push
mov
push
cmp
test
retf
sub
mov
sahf
mov
or
fstp
lock
dec
jg
mov
sbb
sub
ror
into
mov
cmp
test
push
scas
push
in
jbe
in
or
fisub
mov
in
xchg
mov
push
pop
outs
cli
pop
ins
push
iret
(bad)
and
xchg
das
aam
and
nop
inc
pop
inc
aam
inc
cli
sub
dec
mov
add
stos
jno
jle
dec
xor
(bad)
and
aas
dec
mov
cwde
cmps
(bad)
les
sbb
mov
loopne
stos
pop
frstor
(bad)
enter
or
out
push
leave
inc
int3
jmp
jg
jp
cwde
mov
dec
(bad)
into
inc
xchg
in
mov
and
sub
rcr
cwde
data16
add
adc
jle
das
inc
fcom
retf
xchg
jmp
mov
pop
lahf
jmp
push
arpl
dec
icebp
mov
psllq
gs
jmp
push
dec
fmul
shl
repz
rsm
dec
cli
(bad)
fadd
int
and
or
ror
cmp
ret
or
into
stos
into
sbb
xlat
in
es
cs
sbb
and
ins
les
mov
(bad)
scas
mov
mov
sub
jno
push
adc
pop
xchg
popf
ret
icebp
popf
cmp
hlt
jecxz
push
mov
jo
arpl
leave
fs
pop
xchg
int
shl
les
cmp
xchg
sti
pop
xchg
adc
xchg
in
push
sub
cld
cli
movaps
mov
cmp
mov
sub
das
popf
adc
aam
and
fidivr
mov
int
in
mov
fimul
mov
aaa
fwait
call
loope
les
shr
pop
mov
pop
jecxz
repz
arpl
data16
icebp
out
test
and
adc
jl
pop
clc
ficomp
les
mov
xchg
mov
bound
adc
jo
call
sahf
ret
popf
mov
cmp
mov
push
retf
cdq
adc
push
fwait
pop
loope
popa
cmp
das
push
rcl
dec
fcmovnb
sub
dec
xor
mov
shr
(bad)
out
cmp
out
repz
lods
xlat
repnz
fbstp
xor
push
outs
jg
jp
call
mov
cld
mov
push
dec
cmp
ret
mov
mov
cmps
mov
out
mov
pop
addr16
and
pop
push
jmp
push
inc
sbb
jmp
fcom
dec
adc
xchg
sbb
daa
inc
es
arpl
push
mov
xlat
outs
xor
fcmovne
scas
pop
cmp
and
mov
push
xchg
div
pop
movs
test
and
push
mov
adc
or
jne
mov
dec
test
mov
out
xor
xor
and
imul
fst
xchg
cmp
xor
loop
stos
scas
stos
scas
push
addr16
sbb
ja
mov
mov
push
nop
or
lds
fsub
inc
repnz
not
jle
ins
xor
data16
mov
mov
repnz
pop
out
add
sbb
inc
sbb
sti
pop
cmp
sbb
ins
shl
ficomp
mov
icebp
jns
arpl
jne
and
mov
test
adc
jl
int3
mov
(bad)
mov
mov
scas
std
int3
loop
jns
loopne
xchg
jb
inc
stc
shr
xchg
push
std
adc
adc
sbb
cld
stos
cmps
repz
sbb
xor
add
jmp
ror
outs
pop
retf
fwait
sub
pop
out
aam
mov
dec
fs
cmps
cmps
mov
ret
in
push
mov
fld
(bad)
out
and
cwde
push
and
retf
inc
inc
jl
lea
shl
loop
pop
fstp
out
jnp
movs
or
lds
xor
gs
loope
call
mov
dec
and
fnstenv
lods
xchg
lock
and
dec
inc
out
cs
jp
sbb
pop
sub
inc
cmp
stc
mov
pop
stos
pop
fistp
pusha
dec
in
push
pushf
mov
push
sbb
(bad)
sbb
cmps
rcl
dec
jae
xor
out
movs
inc
and
mov
(bad)
and
inc
je
ret
mov
daa
ja
(bad)
push
mov
xor
mov
inc
or
cmc
push
(bad)
fisub
jns
jp
int3
sub
jo
arpl
cmps
ror
mov
icebp
pop
ins
call
mov
dec
jl
movs
pusha
mov
xor
mov
outs
or
dec
mulps
fstp
mov
into
ret
xchg
xchg
retf
and
and
jne
mov
xor
fwait
daa
fwait
lods
pushf
mov
jmp
push
mov
aas
sub
xchg
enter
mov
das
mov
push
in
repnz
xor
(bad)
outs
push
add
dec
ret
push
mov
pusha
out
push
(bad)
fnstcw
push
dec
push
out
pop
mov
movs
and
pop
into
daa
add
xchg
mov
adc
in
popf
ja
addr16
and
dec
add
inc
out
outs
jmp
repnz
sub
es
xchg
mov
xchg
xor
sbb
mov
adc
dec
pop
dec
daa
and
mov
scas
hlt
sub
bound
fcmovnu
ffree
push
jle
pop
push
jns
inc
jecxz
inc
test
lods
and
adc
xor
jecxz
or
stos
into
push
pop
jecxz
pop
adc
mov
add
gs
dec
test
xchg
inc
pop
neg
sub
js
lahf
pusha
mov
sub
movs
dec
xor
icebp
sub
stos
push
mov
or
shl
stos
jb
and
les
loope
rol
lea
std
push
xor
popf
movs
icebp
scas
push
mov
loop
and
pop
pop
hlt
mov
mov
add
xchg
loopne
mov
cmps
jmp
stc
mov
inc
jnp
cwde
in
xchg
jle
mov
xor
inc
test
mov
jb
adc
into
pop
jmp
mov
ins
test
push
int3
inc
inc
push
jns
cmp
les
imul
in
stos
sub
out
xchg
out
in
jmp
outs
mov
and
and
pop
mov
sub
cmp
jno
aad
mov
dec
adc
shl
ins
push
(bad)
jo
hlt
mov
sti
fistp
push
jnp
add
sbb
jbe
pop
sbb
das
sbb
jno
cmp
xor
push
mov
in
sub
mov
and
call
jmp
jb
jl
jecxz
mov
movs
jns
fiadd
add
dec
mov
or
xor
adc
xchg
xchg
cmp
mov
pop
loopne
shr
sub
sub
xlat
dec
add
dec
aam
out
inc
and
sbb
jmp
cmp
ss
repnz
inc
sub
xor
inc
sti
cmp
outs
cli
add
aam
mov
(bad)
pop
inc
mov
cdq
mov
mov
dec
call
fmul
fld
and
jg
cmp
gs
fsubr
sub
mov
push
mov
data16
mov
xor
inc
int3
dec
push
or
mov
and
popf
dec
cmc
nop
cmp
cmps
xor
pop
lods
and
gs
pop
pop
dec
fld
fisttp
xlat
inc
cmps
inc
in
inc
(bad)
lahf
cmp
sbb
mov
mov
in
sbb
sub
test
jmp
cmps
das
ss
xchg
hlt
inc
movs
fcom
leave
jg
(bad)
sti
mov
mov
push
mov
and
(bad)
je
cld
stos
mov
repz
inc
add
mov
in
cli
xchg
pop
lock
movs
das
je
pop
fidiv
jnp
xor
ja
jmp
push
pusha
mov
xchg
dec
ficomp
xchg
push
mov
idiv
xor
jmp
push
int
jns
stos
jmp
mov
test
push
sub
mov
vrcpps
or
repz
xchg
xchg
sbb
ret
mov
ret
mov
xor
add
push
daa
and
arpl
jno
jmp
inc
jnp
(bad)
(bad)
fstp
ins
or
repnz
mov
cdq
bound
sbb
sub
pop
pop
(bad)
addr16
jge
push
nop
add
fisubr
mov
fnstcw
and
fdivr
add
pop
jo
js
inc
or
fcomp
or
add
pop
inc
push
mov
cmc
repnz
mov
and
jbe
jp
and
or
lods
out
mov
leave
adc
movs
daa
pop
stos
inc
xor
test
mov
(bad)
mov
lahf
mov
push
bound
movs
rol
mov
lea
retf
fadd
push
sahf
shl
fisubr
lods
popa
movs
dec
cmp
test
push
jae
add
adc
ja
ret
pop
push
mov
xchg
arpl
mov
push
jle
inc
pop
cmp
push
cmp
movs
and
daa
xlat
cmp
rcl
test
(bad)
jp
sbb
dec
pop
pop
xchg
sar
jne
sub
sub
cmc
sbb
cmp
pop
add
cmp
sub
mov
aam
push
in
bound
mov
ret
dec
or
js
cmp
dec
xchg
jmp
pop
mov
nop
jbe
pop
xchg
(bad)
pushf
jmp
jl
ret
and
loopne
outs
xlat
inc
int3
ins
not
or
std
out
loope
fst
movs
int
add
adc
fistp
add
push
test
add
add
sub
mov
rcl
adc
movs
lods
fmul
and
jno
cmp
pushf
js
je
clc
es
xchg
out
addr16
and
adc
pop
push
or
rcr
push
cmp
and
fidivr
push
in
cmc
ret
ret
sub
int3
mov
sub
enter
rcl
nop
nop
adc
es
shl
pop
jnp
sub
and
inc
shl
jecxz
test
cmp
data16
pushf
jne
scas
and
repz
retf
jg
push
lds
or
cs
in
inc
xchg
add
mov
xchg
daa
clc
jb
hlt
jo
mov
push
or
mov
or
sar
sub
push
and
(bad)
or
cmps
mov
sbb
int3
cmp
mov
lods
js
mov
out
js
cmps
mov
mov
inc
inc
xchg
dec
fnstenv
jmp
push
out
cld
or
pop
xor
cmps
cld
adc
shl
fld
daa
lods
jge
cmp
out
es
mov
sahf
scas
and
sahf
lods
fild
adc
mov
lahf
mov
lods
pop
inc
xor
arpl
mov
inc
add
lds
dec
jg
fadd
xchg
popa
sar
clc
dec
push
push
cmps
dec
and
push
scas
adc
repz
xchg
add
mov
out
mov
push
and
jl
mov
sub
ins
adc
fiadd
jb
in
sbb
aas
loope
test
loop
push
inc
out
push
cmp
cmp
popf
push
or
mov
aam
pop
in
sub
shl
lock
sub
fcmovnbe
mov
popa
cmp
or
test
sub
rcl
test
push
mov
(bad)
ror
lock
and
mov
stos
jmp
or
sbb
mov
xor
dec
mov
fild
push
lds
push
xchg
clc
int
into
add
mov
jno
pushf
shr
mov
mov
mov
fwait
dec
out
xchg
lea
push
cld
jnp
scas
mov
out
inc
lods
shl
clc
xor
mov
and
push
out
xchg
loopne
adc
pop
pop
dec
add
mov
inc
dec
ftst
movs
nop
test
sbb
dec
mov
rol
mov
test
inc
xor
std
adc
pop
dec
outs
rcr
rol
and
aad
sahf
mov
adc
add
enter
(bad)
icebp
stos
sbb
fsubrp
jns
imul
dec
loope
pop
mov
mov
adc
lods
leave
pop
mov
rcr
jmp
in
shl
nop
or
js
and
fs
cmp
(bad)
xlat
jmp
xor
pop
xchg
and
je
mov
jns
movs
clc
imul
xor
add
arpl
and
rcr
test
pop
xchg
mov
jb
mov
ficom
cmp
gs
mov
adc
xor
sub
add
fmul
dec
push
jb
in
es
inc
inc
jmp
push
icebp
dec
adc
xchg
cmp
mov
push
popf
stos
ret
mov
pop
pop
arpl
or
and
mov
push
or
mul
and
fwait
mov
(bad)
out
cmc
pop
pop
inc
adc
add
(bad)
test
lods
and
adc
jae
test
and
ret
out
jp
ins
outs
lods
idiv
repnz
in
cmps
jl
lods
cmp
pop
rcr
jb
aas
test
mov
jg
(bad)
in
mov
pop
jns
data16
into
sub
out
jnp
icebp
scas
cs
sbb
or
lods
ret
enter
imul
mov
xor
test
in
test
outs
xor
int
xchg
loope
and
movs
jle
inc
es
add
aas
or
out
xchg
and
adc
(bad)
cmps
data16
imul
mov
push
push
ds
inc
movs
fwait
lock
jecxz
mov
cmp
xlat
(bad)
outs
push
clc
test
mov
jbe
mov
repnz
sub
dec
xchg
xor
mov
adc
stos
iret
xchg
js
enter
or
ret
imul
adc
add
mov
leave
add
leave
movs
lea
(bad)
add
pop
pop
sbb
sbb
or
inc
jmp
fiadd
sahf
inc
ret
test
bound
mov
(bad)
mov
push
mov
mov
test
cmc
and
push
xor
jmp
adc
int3
push
dec
pusha
sub
mov
ss
mov
xchg
aad
and
add
gs
imul
and
ins
aas
(bad)
mov
sub
mov
adc
loopne
push
lock
adc
sbb
jnp
lock
scas
inc
add
aam
jmp
mov
(bad)
imul
xchg
aas
jbe
cmp
shl
or
lds
mov
push
pop
std
out
push
pop
add
pop
addr16
fs
repz
mov
jmp
ds
ins
pop
imul
clc
pop
mov
or
xor
or
out
sbb
je
or
dec
jl
mov
mov
idiv
sub
push
jp
or
cld
call
and
std
cmp
cld
popa
adc
mov
imul
cld
(bad)
cld
movs
mov
fcomi
xor
bnd
push
aaa
call
dec
lock
or
in
and
jg
xor
or
loopne
pop
test
fcmovnu
shr
outs
idiv
pop
add
xlat
jb
push
bound
aad
imul
hlt
push
lock
cmp
or
add
out
aad
test
and
mov
outs
aam
pop
push
pop
ds
ins
repz
push
shr
add
or
fisttp
pop
pop
arpl
shl
(bad)
and
mov
retf
xor
sbb
or
xchg
pop
jne
sbb
and
add
and
imul
call
into
mov
mov
jge
pop
pusha
test
mov
repz
ins
push
aaa
mov
push
add
aad
adc
sbb
jne
adc
ror
sub
stos
jecxz
mov
arpl
data16
pop
pop
stc
sub
movs
and
ins
sbb
mov
jae
mov
ret
inc
mov
push
mov
pushf
ret
jmp
cmp
sub
adc
mov
push
mov
retf
mov
pop
popa
arpl
mov
jo
aas
stos
je
mov
mov
push
jno
mov
mov
inc
adc
jge
cmp
xor
loope
fs
jnp
xchg
and
and
lds
je
ins
xchg
sahf
adc
(bad)
ja
movhps
sub
mov
sub
or
inc
inc
retf
or
nop
pop
sub
mov
jae
pop
sub
les
stos
xor
push
call
push
inc
push
outs
imul
xlat
ss
iret
cwde
inc
cmp
cmp
pusha
shr
dec
ds
push
mov
stos
xchg
outs
sub
(bad)
mov
lods
mov
enter
cmc
push
cmp
bound
pop
jo
std
test
sar
mov
and
arpl
in
mov
push
or
mov
mov
mov
mov
adc
retf
inc
outs
retf
call
int3
in
mov
sub
jmp
jle
in
(bad)
add
dec
cmp
repz
add
movs
adc
call
frstor
scas
mov
(bad)
(bad)
fs
stos
fst
xor
sbb
or
int3
sub
or
jmp
push
loop
push
push
push
xchg
mov
xadd
nop
fxch
das
xchg
rcl
mov
push
sub
ja
inc
inc
fnstcw
pop
cmp
cmp
dec
mov
cwde
pusha
xor
xor
pusha
xor
addr16
jbe
jbe
fisub
xchg
and
sbb
xchg
xchg
inc
bound
imul
jnp
stos
mov
mov
test
fwait
sbb
add
mov
mov
ja
enter
xor
inc
xchg
add
pop
ss
xchg
leave
and
xchg
cmps
xchg
fstp
pop
popf
(bad)
pop
pop
pop
fs
sahf
push
retf
ret
jns
js
adc
adc
les
xor
out
cdq
adc
push
inc
mov
aas
addr16
lahf
xchg
jns
push
xchg
mov
adc
mov
enter
push
add
sub
adc
mov
push
lods
xlat
add
add
sbb
or
fnstsw
enter
jmp
jmp
rol
ja
inc
mov
push
int
mov
std
aaa
(bad)
hlt
push
scas
lea
arpl
push
fsubr
ss
int
push
in
jmp
aad
xchg
xchg
mov
fild
xchg
xor
and
cmp
outs
jns
cs
aad
push
or
ss
test
jge
aas
pop
lods
sbb
push
mov
xchg
jns
sahf
xlat
cwde
inc
scas
scas
dec
jnp
(bad)
lock
test
shl
jecxz
rol
ins
adc
leave
pushf
aas
jbe
int3
mov
pop
jb
jge
jne
push
or
outs
or
sbb
and
add
hlt
scas
stos
popa
stc
push
cmp
inc
pop
popa
sbb
call
fs
xchg
cmp
dec
(bad)
std
jb
es
out
cmp
lods
xchg
xchg
in
aad
sub
inc
push
xchg
icebp
les
popa
gs
cmps
sahf
xchg
inc
mov
jecxz
cmp
adc
ins
mov
scas
sub
pop
fs
push
jno
xor
inc
sbb
int3
mov
call
enter
imul
push
mov
cmps
xlat
mov
pop
outs
lods
(bad)
pop
into
inc
adc
push
inc
not
inc
dec
push
push
into
in
sub
vaddss
div
in
movs
popa
push
ror
rcr
outs
jmp
pop
mov
push
and
xchg
push
jo
mov
scas
int
pop
xor
cwde
inc
adc
idiv
or
and
inc
sbb
lods
add
cmp
call
push
xchg
clc
or
fisttp
jbe
cmp
sbb
(bad)
mov
(bad)
sti
or
mov
lock
jne
mov
sbb
inc
retf
retf
xlat
imul
leave
xchg
cmps
pop
mov
jmp
test
adc
scas
les
inc
cmc
lds
(bad)
jnp
push
sbb
pop
mov
xor
sub
jo
mov
add
cwde
pop
js
ja
inc
inc
and
pop
aad
cmc
cmp
mov
fwait
sub
cmp
icebp
sbb
jle
jp
mov
(bad)
pop
lods
jp
(bad)
pop
not
inc
out
and
dec
mov
icebp
nop
arpl
fist
add
in
pop
out
retf
(bad)
pushf
sbb
add
das
or
lods
sbb
nop
movs
jb
pop
mov
jmp
cmps
fwait
mov
push
aas
sub
in
clc
lock
lahf
mov
cdq
in
sbb
ret
ins
xchg
cmp
rol
add
dec
xchg
pop
and
push
leave
leave
jp
fwait
sbb
inc
(bad)
sbb
mov
out
pop
lods
iret
cmp
sbb
(bad)
mov
test
nop
outs
or
xor
inc
(bad)
pop
shl
inc
sub
loope
cmp
jns
arpl
adc
les
cli
test
std
sub
xor
aaa
add
movs
fucomp
mov
push
cmp
fcomp
cmp
dec
mov
mov
mov
sbb
lds
jp
test
out
in
jge
ret
iret
gs
mov
inc
lahf
jmp
mov
in
jecxz
popf
or
test
push
das
les
call
(bad)
and
add
xlat
retf
inc
pop
jl
pop
xor
or
hlt
mov
or
adc
sar
cld
ret
xchg
int
js
xor
jle
mov
inc
sub
pop
xor
push
push
adc
xchg
cmp
adc
push
sar
sub
sbb
cmp
xor
ret
sbb
scas
ffree
xlat
mov
add
xchg
mov
lods
add
xchg
cmps
mov
sbb
adc
jmp
add
shr
jmp
ins
cmp
les
xchg
(bad)
pop
cld
add
sbb
out
sub
mov
in
imul
je
mov
sar
fnstsw
in
mov
pop
adc
dec
mov
das
inc
xchg
(bad)
push
xor
inc
(bad)
ins
mov
inc
aas
outs
das
pop
das
pop
dec
cld
sub
sbb
push
sub
dec
dec
push
or
test
xchg
sbb
adc
aaa
imul
push
repz
inc
out
dec
into
neg
dec
loopne
jnp
pop
or
mov
ret
aas
sahf
xchg
sti
mov
sub
jb
inc
or
adc
bnd
into
leave
scas
enter
fiadd
mov
mov
ss
pop
outs
retf
shl
mov
lock
shl
pusha
enter
bnd
mov
pop
shr
in
cs
ret
or
inc
bound
mov
fmul
mov
lds
test
add
cmp
xor
(bad)
xchg
xor
push
stos
cli
dec
add
cmc
ds
loopne
loope
jns
xchg
aam
(bad)
cmp
dec
cld
arpl
addr16
mov
inc
xchg
jnp
dec
jbe
pop
sbb
retf
dec
(bad)
mov
retf
xchg
xor
push
mov
xor
adc
xchg
(bad)
mov
fidiv
(bad)
cmp
xchg
pop
mov
dec
xchg
cmc
xchg
fidivr
mov
(bad)
fisttp
(bad)
mov
inc
pop
push
push
shr
cli
mov
and
add
or
call
and
or
test
adc
int
cld
sbb
cmp
clc
mov
push
mov
pop
aas
movs
pop
imul
loopne
inc
mov
outs
lock
mov
xor
hlt
cwde
and
jmp
and
ficom
push
iret
daa
jmp
pusha
mov
push
cli
inc
or
pop
sub
daa
xor
jns
daa
std
aas
sub
mov
in
fldcw
int
rcr
out
cmp
lods
les
xchg
jne
and
add
sub
out
outs
xor
sbb
jle
(bad)
xlat
int
shr
push
pop
leave
dec
sub
sub
mov
ret
das
mov
ret
xchg
out
inc
add
test
mov
cdq
(bad)
mov
(bad)
sub
out
inc
cwde
jl
fmul
ins
lock
jle
cwde
jmp
push
scas
jns
(bad)
pop
rcr
int3
fldcw
xchg
lds
push
push
js
jne
ror
push
push
xchg
jmp
movs
add
call
pop
mov
xchg
adc
pop
cmps
inc
xor
and
(bad)
sbb
and
and
outs
and
adc
lea
retf
push
je
sub
aam
pop
call
pop
inc
push
sti
cmovge
xchg
mov
jns
shl
movs
dec
bound
out
push
popa
cmc
fwait
mov
jmp
add
xchg
jb
and
inc
imul
sbb
mov
ss
stos
fcmovne
hlt
aaa
xor
shr
jmp
out
mov
stos
mov
ffreep
js
stc
pop
cli
dec
shl
mov
push
xchg
mov
push
xor
jmp
or
sar
push
div
les
dec
lods
test
add
jle
sbb
js
ja
push
jne
and
int3
inc
(bad)
sti
add
loop
add
jge
inc
pop
xlat
inc
sbb
jns
inc
arpl
sub
push
fdivr
sbb
call
or
mov
pushf
and
push
jmp
xor
xchg
xor
xor
into
outs
and
in
add
jae
inc
jmp
jmp
out
aaa
pop
mov
xchg
icebp
inc
fisub
inc
or
ss
rol
ret
scas
xchg
mov
nop
(bad)
(bad)
cmp
imul
jecxz
inc
sbb
xlat
pop
mov
xlat
(bad)
pop
scas
nop
cli
mov
sbb
pop
mov
mov
shr
push
idiv
fs
fmul
fs
sub
dec
mov
movs
call
fstp
repz
(bad)
mov
dec
or
lahf
int3
pop
add
inc
dec
js
or
cdq
or
xchg
call
stos
push
std
or
in
imul
mov
push
fs
mov
and
aas
cmp
mov
xor
cmp
sti
mov
mov
rol
je
mov
jnp
les
dec
inc
call
dec
sbb
cmc
sub
(bad)
rcl
cmp
add
sub
outs
in
push
in
dec
dec
sub
jmp
sbb
jmp
shr
fisubr
sbb
fcomp
mov
loop
and
sbb
loop
or
push
ror
cs
(bad)
mov
stos
into
and
push
and
fadd
lock
push
ins
xor
leave
mov
sub
clc
xchg
inc
adc
pop
add
push
mov
add
iret
mov
or
cld
cmp
pop
and
pop
in
js
jle
jg
mov
pop
out
daa
lods
and
jmp
pop
and
pop
clc
adc
cmps
(bad)
push
in
int3
push
inc
cmp
sub
jbe
sbb
shl
aas
xchg
cdq
push
data16
jecxz
(bad)
mov
xor
cmps
and
mov
mov
fs
inc
push
xchg
jbe
xchg
inc
jo
in
mov
dec
sahf
cli
xor
je
imul
clc
(bad)
hlt
rcr
jb
into
pushf
lahf
popf
loopne
pop
rcl
adc
cmp
out
dec
repz
xchg
sbb
mov
jl
cmp
xchg
or
jg
mov
stc
fnstcw
inc
jo
adc
mov
sub
sub
aad
scas
shl
inc
push
fwait
sbb
aas
cli
loope
cmp
and
adc
int3
hlt
ss
ins
ss
retf
out
inc
cmp
lea
push
inc
arpl
scas
shld
leave
popa
mov
pop
mov
test
pop
dec
int
hlt
push
add
pushf
mov
jne
dec
mov
xchg
(bad)
imul
push
sti
add
leave
add
or
mov
bound
test
out
xor
inc
jmp
mov
rol
ins
and
call
cmp
lods
xchg
ds
mov
mov
adc
add
mov
sub
sub
pop
loope
cmp
cmp
pop
push
dec
mov
mov
aad
jbe
popa
and
fcomp
(bad)
adc
jne
(bad)
fcmovb
dec
clc
cwde
dec
icebp
xchg
repnz
loop
xor
xchg
pop
(bad)
repnz
fdivr
test
loope
or
outs
push
mov
test
fld
cmps
jmp
gs
dec
sub
sti
ja
mov
jmp
rol
in
dec
sbb
jbe
js
inc
pushf
or
inc
add
push
jbe
dec
es
popa
fist
mov
ss
mov
(bad)
aam
inc
jmp
xchg
jne
dec
inc
stos
push
aam
xchg
lods
ins
xlat
xor
xchg
outs
jae
mov
fwait
pop
in
mov
lods
jnp
loope
xchg
out
ja
sub
add
mov
sbb
pop
mov
inc
xor
xchg
lods
retf
enter
out
jmp
(bad)
mov
push
ja
mov
sub
dec
sub
call
add
jo
xchg
push
inc
xlat
js
xchg
sub
cmp
mov
sbb
adc
mov
hlt
aad
(bad)
xor
icebp
xor
mov
xchg
sub
mov
and
movs
pop
loop
(bad)
in
rol
xlat
sub
xchg
ja
loope
es
retf
pushf
cmp
rcl
jns
push
pushf
cmp
sti
xchg
mov
call
pushf
sti
cmp
ret
lea
pop
neg
xchg
loope
pushf
push
arpl
les
popa
outs
sbb
test
imul
push
mov
pop
and
icebp
dec
ds
gs
mov
fldenv
xchg
pop
push
xchg
and
or
jmp
push
push
or
fisttp
mov
mov
add
shl
sti
test
jae
sahf
comiss
mov
jmp
xlat
mov
sar
ja
dec
test
add
jae
fistp
lahf
hlt
out
rol
ret
aas
pop
arpl
fsub
ss
or
std
mov
pop
sbb
ss
stc
ja
clc
mov
push
lock
js
sti
lds
addr16
div
icebp
movs
pop
sbb
cmp
mov
retf
xchg
mov
xlat
sbb
aam
sub
int
test
cmp
mov
sbb
mov
xchg
inc
lahf
lahf
mov
xchg
mov
lods
jp
pop
gs
cwde
xchg
xlat
pop
addr16
js
shr
icebp
push
sbb
pop
inc
push
dec
sbb
or
retf
sahf
sbb
out
mov
daa
dec
scas
push
idiv
mov
lahf
or
jae
out
mov
jmp
sub
call
hlt
xchg
sbb
stc
jecxz
cs
imul
mov
mov
mov
dec
fdivr
push
int3
and
dec
ficom
retf
inc
pop
or
jbe
or
mov
out
shl
fbld
pushf
push
imul
das
shr
stos
jle
mov
add
cdq
cli
nop
arpl
out
mov
stos
and
icebp
xor
aas
dec
repnz
cmp
fild
mov
inc
cwde
test
add
imul
sbb
cld
cmp
inc
xor
pop
mov
aaa
aam
sbb
arpl
pop
repnz
int
add
xor
cmp
loopne
arpl
cmp
sbb
jae
mov
and
sbb
inc
jb
fdiv
mov
jecxz
popf
enter
mov
cs
lock
cwde
sahf
and
push
out
outs
sbb
mov
pop
mov
and
push
aaa
ja
mov
push
sahf
in
mov
push
dec
std
leave
test
jge
scas
shl
push
imul
jmp
cmp
mov
sbb
test
or
cmp
pop
add
cmps
jbe
cmp
dec
inc
ficomp
xchg
outs
arpl
or
xchg
daa
inc
ja
sbb
mov
enter
mov
jo
push
mov
imul
jno
jne
cmc
mov
inc
push
xor
xor
cmp
pusha
push
fnstcw
xchg
ja
cmp
mov
mov
mov
mov
push
movs
pop
pop
ficom
pop
mov
test
ficomp
pop
(bad)
add
xchg
neg
sub
push
dec
mov
addr16
mov
pop
pusha
pop
jmp
lods
mov
shl
sbb
ffree
xchg
(bad)
in
shr
cli
nop
call
lods
mov
push
cmps
xor
mov
mov
cmp
xchg
mov
cmps
push
out
repz
mov
outs
sbb
inc
out
stos
(bad)
fisttp
jge
lea
das
jmp
cs
jno
jmp
nop
aad
mov
ins
dec
test
and
inc
mov
and
xor
or
inc
jmp
sub
ja
cwde
cli
dec
mov
push
pusha
push
js
xor
or
push
adc
movs
outs
xchg
xlat
ins
loopne
mov
push
into
sbb
ins
cmps
xchg
cmc
mov
fcom
rol
pop
rcr
dec
fidivr
test
rol
cdq
icebp
loop
mov
jne
cmp
(bad)
push
scas
and
dec
test
add
sbb
mov
lahf
cli
shr
add
cmp
or
sbb
dec
loope
popa
mov
xor
add
shl
adc
pop
jmp
jmp
adc
pop
imul
dec
pop
aas
inc
or
mov
ror
arpl
outs
xchg
pop
clc
inc
adc
push
push
out
pop
dec
push
arpl
cmp
xchg
adc
sbb
jmp
mov
push
sub
test
fs
jecxz
sti
leave
retf
mov
out
push
std
pop
adc
adc
and
hlt
je
cs
pop
(bad)
mov
mov
sub
inc
ins
das
jno
cmps
in
out
enter
shl
sbb
pop
stos
(bad)
mov
add
(bad)
and
imul
and
xchg
xchg
jbe
pop
mov
push
add
mov
fcomp
rcr
jb
or
retf
aad
fs
mov
rcr
(bad)
or
popf
sahf
ror
enter
cmp
add
std
mov
inc
stos
test
popa
in
pushf
xor
mov
sbb
ficomp
xor
(bad)
lds
shr
ins
jbe
mov
test
dec
popf
dec
les
fcomp
push
jae
push
xchg
pop
scas
outs
xchg
mov
mov
cmps
cmc
jmp
sub
push
mov
movs
shr
mov
push
jecxz
cmps
outs
mov
xor
pop
xor
mov
cli
icebp
mov
ror
cmps
pop
pop
call
jge
fdivr
pop
cmp
and
jmp
icebp
call
std
mov
scas
repz
mov
pop
mov
inc
jo
popf
pop
aad
xor
fst
popa
ud2
rcl
lahf
mov
sbb
enter
xlat
sar
fist
jnp
push
les
xchg
iret
sub
or
and
sbb
xchg
push
popa
push
inc
inc
mov
mov
push
fnop
jp
outs
fist
jp
push
pusha
clc
cmp
pop
ins
gs
popf
data16
icebp
dec
mov
hlt
pop
xchg
and
jge
daa
mov
shl
ins
mov
mov
sbb
scas
inc
xchg
shl
mov
inc
pop
cli
scas
lds
mov
dec
dec
push
inc
sub
add
sub
nop
call
inc
cmp
es
int
jle
adc
das
pop
aaa
and
cmp
fistp
inc
data16
add
(bad)
dec
enter
test
inc
cmp
dec
loope
aam
inc
sbb
sbb
sub
mov
sbb
cmp
(bad)
push
xor
or
fnsave
cmp
cwde
data16
xor
mov
push
xchg
mov
int
pushf
test
adc
and
daa
movs
adc
dec
adc
xchg
or
xor
aaa
push
jnp
push
outs
ret
es
add
xlat
repnz
xor
lahf
pop
mov
(bad)
popf
ja
push
inc
aas
cmps
ds
scas
mov
push
div
pop
adc
sub
leave
push
retf
iret
(bad)
or
adc
mov
lods
(bad)
pop
movs
ds
(bad)
(bad)
xor
aaa
das
cld
sar
jno
movs
push
or
test
inc
sbb
mov
lods
pushf
ins
mov
hlt
cmp
rol
aaa
test
mov
sbb
nop
imul
test
mov
(bad)
and
cmc
ss
xor
push
push
mov
ins
cwde
pop
imul
mov
xor
xor
cmp
dec
gs
and
inc
push
lock
pop
sub
ja
or
push
mov
adc
movs
jae
repnz
imul
mov
call
ret
push
test
pop
push
adc
stos
mov
adc
fiadd
lods
and
xchg
sbb
inc
ds
dec
push
lods
mov
ins
(bad)
icebp
fsubp
sbb
sub
push
les
cdq
push
add
push
jge
imul
mov
push
and
sub
sub
jl
sbb
ja
lods
rep
and
outs
and
popf
sbb
xor
or
inc
hlt
fnstsw
les
lea
push
loopne
adc
in
dec
pop
sub
inc
les
cmp
mov
mov
adc
call
scas
iret
pushf
fwait
or
loopne
movs
and
loope
push
ins
loopne
xchg
cmp
jmp
rcl
movs
xchg
mov
aam
sbb
movs
push
mov
(bad)
ds
cdq
cs
jno
jno
stos
sbb
lahf
inc
push
mov
sbb
ret
xchg
push
cmps
xor
add
dec
pop
and
int3
stos
sbb
lahf
ins
jge
loope
rol
je
cmp
addr16
push
test
jp
or
shr
ror
cld
and
dec
out
(bad)
cld
rcr
pop
popa
pop
rol
add
pusha
cmc
mov
out
popf
ins
test
repnz
adc
retf
add
jae
pop
xchg
lea
ret
scas
mov
push
jnp
pop
in
retf
rcr
and
mul
mov
adc
cmp
xchg
dec
adc
jp
mov
(bad)
rol
ret
es
lahf
(bad)
call
retf
je
jno
rol
enter
std
add
lea
fadd
sub
inc
and
pop
pop
nop
sbb
lods
push
mul
pushf
xor
movs
jns
cli
out
mov
xchg
xchg
sbb
mov
fisttp
push
stos
ret
retf
imul
or
inc
jno
arpl
xchg
jb
and
idiv
inc
jb
fisttp
pop
ret
xchg
inc
lock
jnp
std
aas
rcl
sub
ins
ja
fcom
add
test
jno
xchg
movs
and
aad
xlat
fnstcw
xchg
sub
xchg
stos
mul
adc
dec
push
or
retf
pop
std
cmp
xor
adc
mov
mov
lea
mov
(bad)
mov
jecxz
fcom
pop
call
inc
xor
mov
leave
movs
popa
mov
sbb
sub
mov
pop
popf
xchg
pop
inc
hlt
(bad)
iret
or
push
stos
and
cld
adc
sbb
dec
out
jns
xor
loop
ret
nop
(bad)
xor
pop
call
test
jle
pop
fisttp
sub
shl
and
int
fucomi
retf
test
mov
fnstsw
push
es
dec
addr16
fistp
hlt
(bad)
xor
jg
ret
jnp
and
scas
cwde
push
cs
pop
ja
mov
repnz
std
fadd
mov
aas
out
mov
popa
sti
or
xor
xor
xor
mov
loope
jmp
push
(bad)
cmp
xor
leave
and
int3
call
and
movs
xor
pop
repz
ds
mov
add
adc
test
cmp
mov
mov
or
xchg
sar
inc
out
int
lds
js
sbb
and
mov
repnz
movs
icebp
ja
call
(bad)
mov
arpl
pop
inc
iret
cmp
sbb
mov
fidivr
push
stos
pop
mov
rcr
sub
pushf
iret
clc
jmp
shl
test
arpl
icebp
lods
(bad)
fst
clc
sub
mov
cwde
lock
mov
sub
dec
or
xchg
fldl2t
push
sbb
add
cmp
and
pop
pop
or
push
jns
add
pop
cwde
repnz
push
in
cmps
mov
imul
jnp
aad
leave
mov
movs
out
shl
jbe
test
mov
stc
outs
xor
and
dec
dec
dec
bound
loopne
push
adc
pop
inc
ret
pop
cmp
mov
mov
scas
pop
cdq
loope
sub
ins
mov
(bad)
xor
les
das
cli
push
mov
cmp
test
iret
jo
into
push
and
mov
adc
and
add
mov
mov
cmp
lahf
push
and
(bad)
nop
ja
(bad)
sub
jno
adc
dec
mov
adc
xchg
add
push
sbb
test
xchg
cmp
scas
add
in
js
daa
push
dec
enter
add
ins
test
fadd
xor
(bad)
sbb
add
xchg
jl
ja
fcmovbe
adc
sbb
jne
dec
jo
stc
mov
sbb
sbb
pusha
fild
mov
mov
add
sar
lock
xchg
jo
int
fwait
push
inc
sbb
push
xor
mov
dec
push
popf
and
push
fild
loope
push
pusha
test
in
xor
adc
xor
(bad)
pop
jmp
fsubr
mov
movs
inc
pop
inc
jecxz
ss
mov
mov
adc
lahf
jl
int
call
xchg
js
dec
inc
loope
add
jnp
jb
inc
pop
or
setge
sub
jbe
inc
nop
xor
ins
adc
movs
dec
bound
push
jl
std
out
sbb
inc
fisttp
and
cli
mov
pop
inc
xchg
aaa
xchg
aam
and
push
add
xchg
inc
js
jae
clc
stos
popa
(bad)
icebp
bound
sub
add
pop
jnp
in
retf
loop
pop
mov
ds
sbb
cmc
jmp
push
gs
mov
icebp
xor
mov
out
pop
sbb
inc
les
xchg
shl
bound
pop
fisubr
xchg
out
or
(bad)
aad
cmp
inc
jl
cmp
and
lahf
int
test
and
cwde
add
fstp
lds
push
test
xor
inc
iret
int
int
cmp
lahf
or
pop
cmps
(bad)
mov
loope
ins
dec
mov
arpl
outs
call
lods
shl
(bad)
dec
mov
push
sub
hlt
dec
cmps
in
jl
imul
cmp
cmp
cs
mov
mov
out
shl
daa
mov
sub
xor
into
push
push
sbb
sbb
out
cdq
mov
xchg
jg
and
cld
xchg
and
adc
inc
pop
add
mov
mov
and
dec
mov
popa
dec
mov
out
sar
into
xor
adc
push
fisttp
rcl
mov
call
jmp
sub
outs
enter
xor
(bad)
out
divps
scas
call
nop
test
pop
out
lods
aaa
les
in
test
cdq
aam
pop
jo
sbb
int3
aad
or
push
cwde
or
sub
pop
sbb
jl
ins
push
pushf
popa
out
add
int3
fwait
pusha
adc
push
cmp
cmps
call
(bad)
jo
cmp
in
and
popa
test
ss
movs
test
cmp
cmp
mov
or
in
dec
sahf
push
and
fidivr
(bad)
in
es
dec
mov
test
js
dec
shl
cli
loop
(bad)
sbb
(bad)
push
outs
push
ins
mov
mov
es
dec
scas
xchg
adc
jae
xor
jmp
or
retf
pop
lods
call
test
mov
mov
add
cmp
lock
add
jnp
push
pop
int3
icebp
in
mov
push
jno
fwait
dec
loop
xchg
adc
push
js
pop
sbb
and
adc
mov
xor
mul
jl
mov
and
icebp
push
mov
push
sbb
mov
retf
xchg
ss
outs
and
imul
mov
sahf
mov
dec
push
retf
mov
or
jno
sbb
xor
imul
mov
pusha
frstor
add
stc
xchg
outs
cmp
mov
and
push
cs
pop
nop
jg
add
xlat
fbstp
mov
mov
mov
lods
adc
dec
adc
into
movs
mov
jmp
jnp
xor
jo
jmp
or
or
and
out
adc
addr16
jmp
mov
push
xchg
mov
sbb
add
sub
aaa
xchg
sub
outs
mov
ins
in
addr16
hlt
push
dec
retf
imul
cmps
add
pushf
cli
mov
and
mov
retf
rol
js
xor
jno
stos
mov
adc
fcomp
mov
scas
imul
cs
test
test
js
add
pop
ins
jo
or
hlt
mov
into
inc
or
inc
addr16
sbb
sub
das
ret
les
mov
ja
mov
lods
idiv
mov
xor
sbb
lahf
mov
add
dec
mov
dec
je
jne
cmp
in
mov
fimul
push
and
push
push
mov
das
pop
lods
or
mov
sub
cmp
xchg
cmp
add
sub
cld
push
sbb
std
stc
mov
cmp
sbb
fdivr
jbe
daa
pop
adc
js
mov
add
pop
inc
lods
repz
dec
mov
cmp
loopne
inc
(bad)
pop
icebp
sahf
lock
sbb
ror
ins
int
pop
fistp
loopne
cmp
sbb
jb
gs
test
in
ss
xchg
js
push
pop
dec
mov
sbb
cmp
aam
xchg
adc
and
pop
ret
loop
xor
imul
ss
into
rcl
dec
popa
pop
repz
jbe
test
sbb
mov
mov
mov
ret
xor
pop
pop
in
cli
jns
(bad)
adc
nop
sbb
shl
cmp
(bad)
pop
sti
xor
test
xchg
jno
xchg
dec
and
push
adc
cmp
add
lods
cld
mov
jnp
pop
jge
pop
or
sbb
mov
jp
inc
cmp
inc
mov
ins
cli
jle
sub
lods
jae
lahf
push
pop
inc
mov
dec
into
dec
mov
bound
fs
pusha
jg
xor
xlat
std
mov
cs
inc
mov
mov
scas
dec
fstp
clc
mov
sbb
sahf
aam
jo
xchg
out
loopne
push
div
push
cmps
mov
les
push
jmp
ins
dec
addr16
stc
lahf
hlt
sbb
cmc
mov
cmp
push
or
js
jne
inc
mov
pop
leave
or
inc
xchg
inc
inc
mov
xor
xchg
mov
repnz
sub
push
fstp
and
add
lock
push
ror
rol
mov
adc
mov
sbb
or
mov
mov
cli
out
popf
push
inc
sahf
mov
daa
sub
ja
ret
mov
xor
xor
cmp
aaa
mov
iret
imul
inc
inc
pop
xor
out
mov
stc
inc
jmp
sbb
test
sbb
and
pop
ficom
movs
aaa
or
or
mov
std
adc
out
push
pusha
mov
(bad)
fcom
outs
jmp
push
xlat
sbb
push
idiv
je
and
fstp
pop
xchg
shl
mov
dec
test
mov
mov
into
mov
out
push
iret
mov
add
shl
cdq
out
shr
add
(bad)
inc
popf
in
cmps
pushf
test
pop
push
lds
stos
pop
ror
sbb
test
sbb
call
test
inc
mov
mov
out
(bad)
mov
out
in
(bad)
fld
xchg
adc
mov
les
sbb
adc
ins
inc
pusha
into
jae
add
inc
rcl
sub
dec
pop
sbb
lea
mov
ins
fs
out
int3
dec
outs
cmp
dec
xchg
(bad)
xchg
jnp
sbb
in
ds
mov
mov
pop
cmps
push
out
call
aas
cli
pop
std
xchg
mov
bound
repz
stc
fdivr
lea
daa
mov
fiadd
sub
ret
jne
popa
stos
out
push
(bad)
out
cmp
hlt
mov
movs
sbb
aam
sbb
pop
or
inc
jne
sub
call
out
fwait
mov
jns
push
cmp
fcom
clc
xor
mov
jge
nop
add
cmc
mov
adc
mov
mov
mov
cmps
sub
fdiv
lods
mov
in
xchg
lea
jecxz
in
add
loope
xchg
sbb
call
test
sbb
in
pop
out
inc
fstp
(bad)
sar
repnz
popf
xor
addr16
fcomp
or
icebp
jbe
adc
pop
or
out
fmulp
push
js
mov
retf
push
xlat
mov
mov
outs
ror
aaa
xor
push
mov
cmps
jg
dec
dec
sub
xchg
adc
pop
push
pop
movs
mov
frndint
xchg
pop
sti
push
stos
jae
mov
push
dec
adc
test
movsx
jnp
mov
xor
lea
frndint
pop
loop
(bad)
inc
movs
sahf
std
xchg
adc
sbb
ficom
push
push
out
cmc
ins
pop
jge
scas
or
mov
test
(bad)
pushf
data16
into
adc
stc
adc
pop
adc
mov
xchg
add
dec
inc
and
imul
sbb
jo
dec
jb
fadd
sti
adc
cmp
sub
imul
add
lea
clc
sbb
test
jp
or
push
pusha
jmp
jb
inc
sbb
sbb
push
sti
out
test
fwait
mov
cmp
or
sahf
pop
inc
jb
vmread
mov
cmp
or
pop
scas
dec
or
call
mov
sbb
js
arpl
pushf
inc
shl
scas
test
pop
outs
rcl
jb
cdq
xlat
sbb
shl
dec
jl
sub
jb
sbb
mov
push
adc
cmp
das
fwait
mov
shl
jbe
int3
test
inc
or
or
(bad)
lods
or
sar
cmp
mov
lahf
pushf
enter
pop
mov
in
adc
sbb
ror
jge
and
imul
rol
push
adc
push
pop
push
scas
ins
mov
sbb
xchg
dec
mov
dec
les
adc
out
sub
pop
mov
ret
dec
mov
scas
jle
sbb
leave
outs
test
push
imul
inc
repnz
or
sbb
cdq
leave
sbb
jnp
ret
mov
ins
mov
or
pop
xor
das
inc
movs
scas
sti
jnp
hlt
mov
out
jg
add
sbb
dec
shl
int3
xor
fmul
xor
cld
vmwrite
ret
dec
and
push
fwait
fs
std
in
pop
sti
mov
leave
push
je
je
fwait
xor
frstor
xor
adc
daa
mov
outs
jge
add
enter
cdq
inc
adc
sbb
mov
push
jg
adc
adc
out
mov
lods
fcomp
or
bound
sbb
loop
ss
out
loopne
mov
clc
or
fsubr
adc
int3
inc
mov
loope
sbb
cmp
dec
leave
imul
mov
popa
mov
out
test
es
push
lods
pusha
jg
inc
mov
xchg
or
mov
stos
jl
aad
dec
adc
mov
pop
stos
ret
aaa
sub
stc
sbb
(bad)
xor
jge
add
pop
mov
es
aam
sbb
cdq
es
daa
das
xor
push
sar
ins
dec
imul
das
adc
jmp
mov
pusha
jl
xor
cs
pop
in
inc
or
and
test
cmp
jno
(bad)
or
sub
xchg
nop
(bad)
clc
div
mov
mov
pop
fist
retf
pushf
test
sahf
sbb
mov
add
jmp
add
js
cld
mov
ins
in
add
lods
xor
pop
mov
pop
stos
fsub
(bad)
dec
add
or
jae
mov
mov
pop
mov
adc
je
cmp
and
jnp
xchg
neg
push
mov
mov
mul
cmp
lods
sub
bound
push
neg
and
pop
sar
cmp
xchg
jne
(bad)
in
scas
cmp
fimul
mov
int3
or
stc
js
jg
cmp
outs
mov
xchg
stos
inc
xor
and
push
cmc
das
test
sub
sbb
js
mov
leave
pop
fist
jecxz
es
push
xchg
in
jg
(bad)
mov
cmp
pop
mov
bound
call
push
paddb
xchg
das
lock
and
cmp
pop
cli
xchg
adc
mov
aas
xor
lock
mov
dec
in
cmps
dec
stc
cmps
xchg
or
mov
ins
das
or
hlt
ret
in
aaa
mov
inc
adc
sub
xchg
mov
test
mov
aad
(bad)
mov
pusha
daa
cmps
mov
inc
fnstcw
jmp
dec
fnsave
adc
frstor
inc
test
or
mov
pop
xor
std
cmc
pushf
addr16
inc
xor
leave
push
or
sbb
inc
mov
push
cmp
xchg
dec
and
ins
(bad)
mov
mov
int
dec
xchg
adc
int
xchg
pusha
call
xchg
pop
adc
mov
and
fistp
(bad)
mov
xchg
xchg
imul
jbe
push
stos
sbb
fld
pop
(bad)
pop
arpl
jp
inc
fcomp
inc
mov
aad
sub
cli
xor
retf
xor
pop
iret
xor
push
inc
xchg
out
lahf
pop
nop
mov
and
in
and
shl
jl
test
int3
xchg
sbb
pop
ficomp
inc
in
mov
icebp
leave
inc
and
lods
(bad)
and
data16
out
frstor
loop
not
(bad)
ficom
or
leave
mov
and
fidivr
add
js
imul
jae
mov
ror
int
dec
int3
dec
ins
add
fwait
inc
xchg
sub
jns
jmp
cmps
mov
and
out
add
pop
inc
pop
imul
dec
add
bound
jno
mov
jo
shl
inc
mov
xchg
pop
or
mul
jnp
in
pushf
mov
outs
adc
sub
inc
dec
jmp
mov
mov
sti
xchg
frstor
pop
ret
mov
daa
mov
jb
shl
push
sti
ins
jb
rcl
jl
lods
nop
test
in
cmps
xchg
sbb
mov
pop
addr16
push
push
ret
mov
stc
aam
cmps
jg
pusha
fild
jno
jmp
sbb
mov
mov
fnstcw
iret
inc
movs
dec
pop
sub
fld
push
jl
cmp
mov
mov
test
int
fs
mov
inc
mov
add
pop
adc
mov
leave
and
cmp
je
popf
addr16
rcl
and
add
inc
pop
and
fwait
imul
daa
jns
(bad)
ss
jne
ins
cmp
pop
stc
movs
out
or
jp
cmps
jb
sbb
add
vpavgw
sbb
cs
sbb
ins
sti
sub
sub
jmp
sbb
inc
xchg
je
mov
jnp
pop
xchg
enter
or
loope
call
xor
and
pushf
jne
mov
je
mov
or
add
mov
into
push
or
dec
sub
sub
xor
push
pushf
jmp
arpl
js
xchg
push
or
fnstsw
dec
xchg
jmp
xor
out
(bad)
nop
mov
and
retf
cmp
or
ja
je
xor
(bad)
in
fucomp
int
mov
ret
outs
enter
mov
inc
mov
call
cmc
(bad)
or
pop
lahf
mov
retf
jne
push
mov
call
daa
add
or
loope
dec
jno
dec
jmp
mov
push
outs
mov
adc
cli
jno
fisttp
jecxz
ins
pop
xor
cmps
sub
repnz
push
mov
cs
data16
(bad)
cmps
rcr
sti
mov
hlt
pop
lea
mov
aaa
add
cli
inc
or
and
aaa
(bad)
jmp
addr16
push
sahf
mov
mov
ss
sub
and
out
scas
es
popa
js
shl
mov
fild
or
or
cmps
and
push
scas
icebp
inc
jmp
jp
mov
mov
xchg
(bad)
out
jg
outs
mov
pop
lods
dec
xchg
sbb
sub
lods
cwde
inc
jne
pusha
jl
cdq
inc
minps
popf
out
dec
xchg
cs
or
rol
cmp
dec
cmp
sub
cmp
mov
rcl
fnstenv
mov
in
xor
mov
icebp
push
xchg
push
jns
push
cmp
sahf
rcr
and
mov
cmps
out
adc
pop
mov
dec
jns
sbb
jl
stos
es
ins
jg
dec
fcom
jge
dec
test
add
push
dec
push
or
mov
mov
scas
test
scas
aad
or
mov
xchg
shr
push
pop
or
mov
int
movs
dec
jo
mov
jns
retf
ficomp
pop
dec
bound
repnz
out
cmp
outs
mov
mov
pusha
jle
imul
push
in
cmps
jo
pop
lahf
pop
xor
and
ins
mov
shr
mov
loop
stc
xchg
and
pusha
cmps
mov
iret
call
and
pop
adc
mov
xchg
push
repnz
or
cdq
mov
dec
or
sahf
dec
leave
clc
inc
std
jmp
jp
test
stc
mov
fucomp
loope
cmp
fwait
push
or
loope
adc
pushf
mov
dec
mov
je
rcl
xchg
xor
adc
xchg
sbb
xchg
in
sbb
xor
inc
scas
inc
aas
pop
dec
inc
call
test
lahf
push
mov
in
xchg
fstp
mov
ss
daa
lds
retf
pop
les
mov
jb
add
xchg
out
rol
popa
outs
ins
cmp
xchg
jg
cmp
pop
ss
cmp
daa
test
mov
cdq
add
jle
fidiv
stc
xchg
fcmove
mov
or
inc
mov
fist
ret
loop
adc
and
je
push
ja
lds
aas
imul
inc
adc
xor
repz
movs
aam
jecxz
rcr
aaa
pop
cdq
data16
sub
cmps
shl
add
shl
xor
adc
movs
jo
movs
pushf
rcr
or
imul
mov
out
(bad)
cld
movs
in
dec
addr16
rcr
mov
(bad)
jecxz
cmc
arpl
ds
dec
xchg
les
push
in
xchg
dec
mov
cmp
fisub
mov
leave
mov
jb
xchg
push
bound
(bad)
cdq
aaa
cmp
push
lods
ret
lock
sub
push
idiv
sbb
add
pop
xchg
fnstenv
or
pop
inc
icebp
adc
call
xchg
and
xchg
dec
jb
lahf
xor
and
dec
loop
icebp
mov
rcl
cwde
jb
test
fild
movs
test
sub
inc
pop
jg
jns
test
pop
test
push
mov
mov
repnz
ins
les
aas
dec
dec
mov
or
stc
and
mov
mov
pop
sub
daa
cwde
jecxz
cmp
sbb
cmp
loopne
int
add
popa
add
or
xchg
jns
lods
das
add
cmp
jo
popa
inc
cmps
outs
daa
pop
sbb
(bad)
out
iret
mov
ins
push
inc
push
fnsave
sahf
xchg
jecxz
jno
inc
dec
out
sahf
aam
ins
scas
cmp
xor
in
jne
or
out
jns
and
xchg
inc
and
rcl
sar
mov
xor
and
mov
inc
mov
inc
pushf
xor
scas
xor
test
cld
call
xor
lds
inc
icebp
cld
out
add
xor
push
add
adc
cmps
xchg
rcr
mov
xor
aam
dec
sbb
and
sahf
out
or
push
xor
push
push
frstor
arpl
inc
fiadd
inc
outs
cdq
rcl
and
(bad)
mov
rcr
jmp
sub
retf
cmps
push
push
cs
xor
mov
outs
mov
cmps
and
jne
xchg
cli
adc
pop
test
lahf
das
rcr
dec
mov
(bad)
mov
int3
mov
lods
push
iret
sbb
xor
mov
fs
(bad)
adc
adc
jmp
std
lods
jmp
fwait
ror
xchg
rcr
loop
mov
daa
jnp
cmp
pusha
ret
les
sub
aaa
cmps
call
mov
pushf
or
pop
leave
and
inc
sub
iret
test
movs
or
mov
cmp
aas
arpl
lods
jns
jnp
sub
ins
pop
fcomp
cs
ret
ret
imul
mov
ins
jmp
cwde
in
pusha
sbb
aas
or
cmp
(bad)
xchg
loope
dec
out
pop
sub
push
dec
xor
fimul
sub
loope
mov
je
or
and
inc
and
adc
adc
mov
(bad)
mov
arpl
push
pop
add
fwait
stos
shr
mov
cmps
ror
fs
mov
inc
mov
adc
sti
rcr
cmp
jge
push
repz
adc
mov
pop
sub
gs
sar
jae
cdq
pop
mov
fmul
pop
jne
call
lock
mov
div
cmps
jecxz
mov
mov
test
xor
inc
in
mov
mov
and
or
hlt
(bad)
loope
out
fldenv
mov
push
fst
mov
ror
add
jg
(bad)
jno
movs
jge
js
jno
push
lock
ins
rcr
sbb
cmps
inc
xor
leave
add
or
dec
cdq
test
retfw
jbe
sahf
rol
popf
pop
adc
test
inc
mov
xor
arpl
arpl
jbe
arpl
(bad)
xor
sbb
mov
sub
mov
das
nop
fs
imul
pop
(bad)
push
sahf
shl
idiv
pop
add
nop
or
(bad)
push
jp
sar
xor
push
mov
xchg
ja
aad
jmp
in
outs
sbb
or
cwde
cwde
push
push
dec
out
sbb
test
ror
pusha
aas
ds
push
out
cmp
lds
jne
inc
rcr
mov
fadd
mov
ins
rcl
and
in
sar
cdq
xor
adc
imul
pop
adc
popf
(bad)
adc
sub
movs
leave
out
mov
clc
mov
mov
daa
mov
lea
sbb
jp
in
inc
mov
mov
or
jmp
mov
loope
mov
pop
dec
movs
adc
or
neg
pusha
jns
cmp
ja
and
ja
fst
pop
pop
push
inc
nop
sbb
jnp
arpl
test
jbe
mov
sbb
dec
and
loop
stc
inc
ins
sub
mov
data16
mov
xor
div
mov
neg
cmp
in
ds
movs
test
mov
or
hlt
sahf
ret
push
into
push
pop
mov
inc
cmp
dec
push
mov
mov
sahf
push
call
pop
xchg
repz
cmp
xchg
jbe
out
into
sub
mov
into
outs
sti
rcl
push
jne
cli
mov
in
xor
sbb
(bad)
out
and
mov
cmp
dec
mov
popa
stc
inc
pushw
dec
xchg
pop
add
mov
cmp
cmps
fsubr
jp
std
cli
push
leave
mov
retf
test
pop
popa
push
mov
mov
arpl
retf
add
pop
push
in
cdq
es
sub
popa
data16
aam
xlat
movs
fistp
fnsave
sbb
into
stc
popf
out
rcl
sbb
push
in
fsubr
mov
dec
mov
mov
inc
test
sbb
jbe
(bad)
(bad)
in
ror
mov
add
mov
mov
ror
mul
repnz
je
adc
bound
pop
fwait
sbb
jbe
sbb
pop
mov
sbb
cmps
and
or
cld
xor
mov
and
movs
sti
inc
push
cmp
pop
cmps
and
fdivr
mov
outs
xor
mov
and
jmp
push
sbb
inc
and
mov
jle
cmc
fimul
(bad)
jg
scas
jge
mov
inc
jmp
adc
push
inc
inc
loopne
adc
stos
sub
mov
popa
bound
das
loop
shl
dec
daa
cmp
inc
aam
lds
fucomi
fs
out
mov
jne
les
and
pop
adc
pop
adc
push
xor
das
popf
xchg
dec
int3
mov
sti
jl
mov
(bad)
(bad)
loopne
cmps
jbe
mov
mov
lea
(bad)
or
jle
adc
lahf
ja
jl
jle
(bad)
xchg
and
adc
test
cmp
mov
push
mov
mov
or
fsubr
cmp
retf
mov
push
xor
sbb
sbb
fild
ds
or
adc
shl
loopne
adc
mov
mov
jmp
retf
in
cli
xor
stos
out
cmp
mov
xchg
fiadd
jo
dec
xor
sbb
fiadd
jmp
ja
je
add
or
das
(bad)
xchg
(bad)
aam
nop
in
es
xchg
sbb
xor
pop
dec
imul
adc
sub
(bad)
pop
add
xchg
add
xor
jl
rol
jb
xchg
adc
(bad)
jb
dec
shr
push
cs
jae
in
repz
out
mov
xchg
mov
hlt
retf
dec
mov
mov
mov
cmp
pop
shl
(bad)
xchg
push
les
les
dec
mov
hlt
call
les
imul
retf
in
into
push
pop
jns
pop
das
xor
sbb
fsubrp
sbb
fiadd
jl
mov
(bad)
(bad)
xchg
mov
dec
call
ror
jo
xlat
sub
jno
xor
xchg
lds
fdiv
cmp
push
fs
movs
jae
mov
fcom
inc
jecxz
inc
xchg
neg
idiv
push
push
repnz
pop
fimul
sub
mov
mov
jne
add
fwait
mov
dec
test
jnp
stos
pusha
lea
je
(bad)
jnp
iret
out
ins
pop
loop
pop
xchg
jge
inc
mov
or
mov
push
ret
pop
imul
loop
retf
lock
(bad)
sbb
cli
mov
rcl
sub
inc
lock
out
(bad)
pop
int3
imul
push
dec
jbe
push
cmc
daa
pop
pop
jmp
nop
in
or
push
retf
mov
repnz
cmps
pop
sub
sub
sahf
adc
(bad)
int3
ficomp
test
dec
dec
fisubr
in
es
lds
mov
or
pop
movsx
inc
sbb
sahf
add
sti
sar
(bad)
push
jne
pop
push
clc
or
push
adc
fstp
mov
xchg
repz
mov
jne
sub
std
dec
add
outs
jae
ret
out
aaa
shl
test
cdq
(bad)
sti
inc
cdq
fst
daa
int3
enter
xchg
jmp
sbb
push
dec
aaa
pop
jmp
ja
cmps
idiv
sub
mov
mov
inc
aas
call
mov
std
scas
inc
test
pushf
add
push
mov
add
imul
clc
out
jge
mov
es
icebp
and
xchg
and
into
pop
jp
out
jb
jmp
mov
pop
adc
retf
add
aad
repnz
jmp
pop
xchg
rcr
push
sbb
call
stos
jecxz
popf
in
xchg
push
jo
(bad)
into
adc
xchg
mov
pop
and
jb
add
mov
mov
mov
inc
mov
add
and
fmul
xor
push
push
and
or
jnp
jg
mov
cmp
out
pop
add
push
xor
stos
fcom
and
popa
sbb
lahf
fwait
mov
inc
int
and
outs
(bad)
dec
lea
cmp
add
inc
scas
xor
enter
popf
leave
add
fwait
or
cmp
rol
xchg
ss
cmp
adc
pop
test
xor
daa
add
ficom
sbb
sbb
sbb
pop
lea
sbb
xchg
movs
leave
shl
xchg
inc
push
cmps
mov
fisttp
adc
mov
dec
into
loop
mov
mov
inc
adc
add
sar
xlat
retf
xchg
lods
and
push
aaa
imul
xor
pop
fwait
das
dec
add
mov
pushf
(bad)
jle
cli
jno
ret
mov
stos
ficom
mov
pop
test
into
outs
cmps
dec
stos
cld
xchg
pop
pop
les
adc
shl
out
jno
ror
(bad)
(bad)
test
iret
(bad)
cmps
push
inc
push
jns
add
ss
mov
push
sub
daa
aam
imul
aam
push
mov
fisttp
(bad)
jg
pop
mov
adc
push
cmp
xor
loope
test
lock
pop
dec
pusha
pop
enter
lahf
xchg
dec
push
div
dec
xor
mov
not
addr16
movs
leave
fwait
add
push
stos
pop
xchg
cmp
(bad)
pushf
push
mov
nop
dec
out
and
and
mov
or
jmp
repz
mov
loope
sub
or
xchg
mov
fisub
sub
jecxz
sub
push
rcl
or
and
sbb
add
test
sbb
cmp
add
dec
jb
push
sti
and
je
in
ret
adc
clc
cmp
jnp
push
addr16
lods
ins
and
pop
into
mov
sbb
sbb
daa
cld
sub
pushf
mov
pop
in
test
mov
cmc
push
mov
xchg
js
mov
leave
or
push
xchg
into
or
ins
or
pusha
aaa
mov
stos
aad
xor
pop
xchg
push
xor
push
lea
shl
out
jnp
aam
fs
shl
scas
cmp
dec
and
(bad)
out
push
daa
imul
(bad)
rcl
inc
sub
xor
cmps
mov
push
pop
add
pop
jmp
les
inc
xor
arpl
dec
popa
adc
and
or
int3
mov
fiadd
in
sti
inc
pusha
push
or
hlt
jl
scas
scas
arpl
mov
adc
test
loope
push
ror
xchg
mov
pop
add
lock
test
cmp
jl
fnstsw
ss
nop
sub
sar
mov
repnz
ficom
mov
cmps
imul
test
outs
lock
push
mov
fs
jecxz
iret
cmp
movs
cmp
imul
out
stos
pop
cmp
dec
mov
xor
sub
dec
(bad)
sbb
cs
adc
outs
call
imul
mov
and
bound
xchg
ret
out
mov
lds
ds
shr
out
add
ss
xor
push
out
rep
cmp
sbb
sbb
popf
push
aad
fwait
jnp
pop
ins
adc
int3
inc
scas
mov
xor
div
sbb
push
daa
mov
adc
push
dec
jp
dec
jb
mov
mov
and
js
into
push
add
adc
mov
dec
or
cmps
jle
iret
add
test
adc
sub
push
jp
sbb
cmp
and
jo
xchg
int3
push
add
cmp
clc
jecxz
mov
adc
mov
fadd
sbb
mov
push
and
imul
test
call
jmp
cwde
push
jl
(bad)
fcom
repz
cmp
pusha
fs
jg
repz
mov
xchg
push
and
lock
(bad)
cmp
or
inc
jmp
lods
or
jmp
inc
xchg
outs
xor
popf
or
ins
clc
nop
push
sbb
sbb
lahf
inc
mov
loop
push
int
jnp
je
or
popf
dec
dec
fstp
imul
or
ins
icebp
loop
arpl
loopne
xchg
lds
retf
(bad)
mov
retf
dec
fadd
or
jle
stos
imul
mov
das
mov
aad
out
icebp
sbb
les
mov
add
fistp
add
cmp
les
popf
jns
js
adc
or
sub
jo
dec
sbb
cmps
(bad)
adc
imul
imul
sbb
out
add
push
es
hlt
sbb
xor
xchg
xchg
test
add
push
xchg
icebp
mov
jne
test
js
add
push
push
sub
pusha
pushf
and
ja
sub
or
scas
inc
ss
cmp
cmc
adc
arpl
mov
hlt
pop
xchg
shl
cmp
or
int
dec
mov
or
jle
pusha
mov
push
cdq
sub
icebp
mov
btc
pop
pop
loopne
pop
std
outs
out
add
std
int3
int
out
cmpxchg8b
adc
dec
jno
loope
adc
mov
push
dec
mov
imul
dec
or
mov
fcmovbe
les
cdq
dec
shr
mov
(bad)
in
movs
imul
ror
push
and
and
mov
aad
popf
lds
in
jmp
ins
int
xor
and
cli
js
sbb
dec
add
xchg
jp
xchg
cdq
add
sbb
fcmovnu
sar
or
push
xchg
push
jmp
and
jle
inc
mov
(bad)
cmc
sub
popa
(bad)
fisttp
retf
aad
add
jmp
mov
nop
imul
mov
xchg
mov
dec
cmps
lea
xchg
test
xor
dec
dec
mov
add
mov
int3
xchg
(bad)
mov
sbb
lods
das
outs
test
push
(bad)
xchg
dec
push
sbb
push
sbb
test
jae
cmp
ret
pop
sub
mov
cmc
movs
jg
jb
xor
push
xor
mov
pop
or
adc
movs
cmp
inc
jns
neg
dec
test
rcr
mov
inc
pop
xchg
or
cmp
ficomp
fwait
cmps
push
mov
push
test
mov
sbb
jmp
adc
pop
inc
dec
lods
inc
jmp
mov
stc
inc
paddusb
cs
loope
loop
in
ret
xor
push
add
idiv
xor
lods
aaa
mov
add
out
or
mov
imul
ud2
in
push
scas
fwait
imul
sbb
xor
sbb
jl
mov
jecxz
jno
psadbw
stos
inc
push
fild
ja
loope
out
out
mov
or
test
pop
mov
adc
imul
pop
cmps
jnp
mov
and
lods
jno
sbb
jb
inc
ret
pop
cdq
push
mov
retf
sti
sti
rcl
xor
pop
mov
mov
dec
pushf
mov
push
jmp
and
js
dec
adc
xchg
add
arpl
out
or
pop
movs
cld
retf
pop
addr16
mov
cwde
mov
pop
add
popa
xor
push
pop
fimul
sbb
int3
jae
push
push
push
clc
pop
push
push
div
js
ds
dec
outs
add
mov
retf
dec
int3
out
mov
cmc
imul
daa
lods
lea
(bad)
in
pushf
xchg
int
dec
mov
mov
lods
shl
jb
xor
lods
cdq
scas
jmp
ja
inc
enter
mov
xchg
hlt
out
sbb
sbb
mov
aam
inc
xchg
ja
or
mov
scas
cmp
(bad)
sahf
sub
lock
xchg
aaa
mov
mov
mov
xor
es
popf
fsub
dec
loope
dec
bound
xchg
mov
popf
mov
push
sti
out
loopne
and
jecxz
adc
push
xchg
or
fwait
dec
inc
nop
push
cdq
or
sar
and
and
nop
idiv
xchg
call
or
ret
fld
sub
sbb
mov
sbb
lahf
lea
mov
pop
fisttp
sub
lods
add
pop
aaa
push
std
int3
(bad)
pop
into
lea
inc
fwait
stc
cdq
mov
mov
dec
sub
shr
retf
iret
dec
repnz
mov
dec
add
add
mov
add
xor
mov
jne
cdq
ss
ins
and
mov
dec
sbb
mov
lods
adc
icebp
or
hlt
cmp
or
adc
inc
cwde
xchg
daa
iret
fwait
call
test
sub
int3
mov
lods
or
and
jmp
jecxz
call
repnz
mov
dec
pusha
call
mov
test
pop
adc
ins
or
shl
adc
popf
in
sbb
std
jmp
add
(bad)
addr16
das
pop
and
shr
leave
push
movs
add
pop
lods
add
hlt
xor
xchg
ja
(bad)
fwait
pop
lahf
popa
jle
xor
lods
fwait
pop
out
scas
sbb
jnp
pop
mov
mov
push
mov
xor
int
add
push
mov
push
xor
fwait
jns
enter
in
ret
stc
ss
in
shl
jge
jnp
fisubr
into
shl
(bad)
mov
ins
xlat
mov
stc
fcomp
cmp
in
push
mov
mov
out
imul
gs
jnp
stos
xchg
imul
popf
inc
nop
mov
mov
(bad)
lods
scas
punpcklbw
sahf
push
mov
fisttp
sub
cmps
ja
push
push
jmp
mov
sbb
inc
lea
sar
add
sub
call
xlat
xchg
xchg
lock
mov
int3
scas
aam
(bad)
add
inc
pop
xchg
xor
cs
or
je
cwde
push
inc
push
aam
lds
je
rcr
into
sti
mov
jmp
test
and
repnz
push
cmp
pop
imul
add
mov
stos
pop
xchg
ins
aam
push
sbb
mov
loope
jno
and
cld
(bad)
jmp
ret
xchg
rcr
mov
dec
mov
push
in
jo
fsub
dec
xchg
faddp
or
sub
push
and
jecxz
loope
inc
call
mov
cmps
mov
cmp
out
pop
out
ror
loop
adc
cmp
push
cwde
dec
cmp
nop
or
fs
mov
ins
lds
stos
fs
push
sbb
adc
retf
push
sbb
pop
mov
scas
or
ret
mov
popf
scas
xor
or
dec
je
jns
xor
jo
push
jecxz
ins
xchg
out
dec
ss
mov
loope
fisttp
ins
mov
ins
jl
cmc
cli
adc
cmp
loop
lods
pop
cmp
stos
out
sub
jge
mov
clc
retf
xchg
es
or
xchg
imul
iret
jno
cmp
jno
stos
ds
mov
inc
add
stc
add
mov
sbb
sti
pop
mov
xchg
shl
xchg
jl
inc
ja
imul
fdivr
dec
pop
jo
push
adc
mov
xlat
xchg
leave
push
shl
repnz
and
movs
sub
or
pop
ficom
xchg
adc
in
mov
pusha
inc
mov
movs
push
test
pop
xor
lods
jne
les
jbe
retf
sub
test
cmp
leave
aad
jmp
ja
int
aaa
lods
inc
pop
sub
into
enter
enter
adc
outs
ror
mov
push
jmp
(bad)
cmovl
(bad)
fdivrp
addr16
pop
jb
inc
enter
out
jg
mov
inc
push
sahf
test
mov
or
sub
fwait
push
push
repnz
(bad)
add
fisubr
push
inc
test
mov
int3
jge
cmp
gs
sbb
jb
mov
fwait
retf
out
ins
pop
ins
cwde
inc
sbb
push
inc
push
mov
cmp
mov
and
xor
pop
mov
repz
adc
ror
cwde
adc
clc
stc
ror
mov
cmps
jge
dec
sbb
leave
and
ins
mov
ins
hlt
(bad)
cmp
pop
dec
sbb
in
icebp
push
xchg
xor
cmp
in
in
add
mul
dec
or
sahf
adc
mov
iret
inc
sbb
mov
scas
scas
mov
dec
int
sbb
cmp
lods
imul
aam
lea
shr
or
lahf
mov
push
mov
ret
pop
xchg
adc
cmp
jae
stc
shr
(bad)
sbb
push
test
cdq
cld
jl
pop
xor
xor
push
movs
dec
pop
(bad)
lods
cwde
movs
sub
(bad)
je
je
mov
xchg
imul
or
xor
sahf
lahf
leave
(bad)
sub
or
daa
mov
imul
jno
out
mov
pop
xchg
jg
inc
cmp
or
xor
xchg
push
call
sub
jb
stc
(bad)
adc
pusha
sbb
shl
xchg
push
cs
jbe
stc
test
into
mov
fld
dec
jbe
ret
scas
retf
cwde
adc
sub
fistp
xor
push
dec
xor
pop
cmp
test
add
scas
test
lods
stos
mov
cwde
push
cwde
jns
mov
cmp
ja
add
dec
pop
mov
add
pop
clc
pop
sub
pop
or
xor
call
lahf
movs
xchg
mov
add
inc
(bad)
mov
aam
pop
lds
aam
and
pop
xchg
sbb
jb
dec
(bad)
mov
bound
mov
sub
adc
jnp
retf
mov
lock
jle
je
leave
sbb
push
fdiv
aam
xlat
xchg
je
rcl
xchg
sub
data16
jo
daa
movs
out
fisub
jmp
int
pop
cmp
mov
(bad)
mov
dec
mov
cdq
or
out
mov
mov
cdq
movs
xor
jns
sbb
pop
hlt
jns
sahf
call
xchg
mov
adc
int
and
sti
out
inc
and
sub
mov
push
dec
inc
cmp
lock
jno
or
pop
pusha
mov
sbb
call
cs
idiv
sub
cld
in
call
sbb
pop
arpl
(bad)
lods
out
fwait
mul
mov
adc
pusha
inc
dec
lea
test
sub
pop
loop
shr
push
mov
jne
jle
cmp
loope
mov
enter
imul
stos
dec
mov
or
push
arpl
call
out
push
dec
xchg
and
and
mov
lods
leave
mov
dec
push
in
je
xor
inc
aas
dec
gs
add
jl
mov
add
daa
push
aaa
test
cmp
scas
imul
ss
mov
outs
add
xor
sub
rol
xchg
std
jbe
push
fimul
popa
inc
add
(bad)
popa
xor
cmp
popf
(bad)
sbb
(bad)
cli
leave
or
or
push
dec
push
test
add
sti
icebp
lea
in
mov
dec
mov
(bad)
fwait
out
in
in
mov
push
adc
and
jmp
pop
and
test
icebp
mov
add
jne
inc
das
stc
inc
shr
xchg
or
xchg
retf
repnz
test
repnz
jb
les
jns
ja
in
jmp
fmul
shl
mov
js
xor
add
outs
cmps
inc
xor
das
push
pushf
adc
xchg
test
call
(bad)
pop
add
dec
mov
loope
jg
mov
mov
shl
dec
lock
or
inc
das
(bad)
shl
or
outs
js
mov
bound
pop
cli
shr
and
addr16
xchg
(bad)
pop
sahf
jmp
sahf
or
mov
mov
xor
and
dec
movs
push
ficomp
jle
inc
push
mov
pop
scas
xchg
rcl
push
stos
dec
mov
cmp
mov
sub
scas
fwait
add
push
sub
mov
rcl
mov
mov
add
xlat
jae
jge
inc
adc
pop
mov
outs
fs
mov
add
mov
and
adc
jb
add
lds
dec
inc
loop
inc
retf
pop
rol
xchg
adc
push
sbb
cmp
outs
add
daa
clc
call
xchg
call
push
dec
test
cdq
data16
xchg
test
icebp
cmc
pop
jmp
outs
call
je
cmp
push
sub
movs
lock
test
aaa
in
push
inc
out
es
int
scas
cmp
ror
xchg
jb
dec
mov
jmp
push
in
mov
xor
hlt
in
jno
(bad)
sti
shl
or
stos
std
or
(bad)
sub
jb
xchg
fnstsw
fwait
mov
dec
push
rcl
movups
and
dec
inc
or
fiadd
pop
popf
frstor
sti
test
ror
dec
call
int3
test
(bad)
push
mov
out
inc
pop
lds
inc
mov
sub
push
movups
pop
dec
cmc
stc
fldenv
sbb
retf
arpl
out
test
dec
sbb
sbb
jle
(bad)
mov
les
mov
test
push
call
ss
dec
ficomp
mov
dec
xchg
sar
pop
out
push
aaa
xor
call
pusha
nop
sbb
mov
jo
gs
sti
les
or
add
call
fs
es
sub
pusha
push
adc
leave
mov
jle
adc
jns
cmp
(bad)
dec
(bad)
jecxz
cmp
jnp
jb
nop
push
pop
test
not
push
div
push
mov
lea
call
push
mov
add
or
jnp
imul
retf
jmp
sbb
mov
mov
call
jo
dec
dec
mov
jmp
outs
add
retf
adc
sub
imul
jecxz
mov
outs
lods
fcmovb
(bad)
dec
fs
mov
jno
ret
scas
retf
(bad)
outs
ja
mov
loope
sub
xchg
jmp
xchg
pop
and
inc
in
push
mov
ficomp
(bad)
mov
pusha
ret
sub
test
cs
and
not
ins
push
mov
and
cli
bound
enter
loopne
push
je
cmps
jl
sar
outs
lods
mov
repz
aas
cmp
ffreep
adc
jl
(bad)
sub
shr
add
std
imul
mov
das
inc
push
mov
dec
sti
inc
popf
inc
loop
xchg
sar
fsin
mov
mov
lahf
adc
push
xor
push
enter
fadd
pop
stos
pop
fnstsw
ret
mov
pop
mov
pop
sbb
xor
idiv
cmps
nop
mov
jle
test
or
dec
clc
mov
sub
sub
pushf
imul
mov
push
adc
jecxz
add
cmp
mov
ffreep
mov
aaa
push
jmp
push
inc
cld
sub
lock
mov
pop
std
popf
pop
mov
adc
xchg
lds
xor
ret
loop
ja
mov
add
std
loope
leave
(bad)
stc
push
inc
jae
(bad)
sahf
jmp
out
add
or
test
lock
xor
push
sub
or
fcmovnb
inc
xlat
sbb
retf
and
fstp
mov
xchg
in
test
inc
dec
sahf
fld
pop
out
jp
sub
and
sbb
nop
in
sbb
outs
mov
sub
jmp
mov
sub
mov
push
ret
cdq
xchg
sahf
xchg
test
les
mul
inc
jbe
or
cli
mov
inc
xor
adc
mov
jnp
cmp
mov
outs
mov
seto
dec
enter
jne
aaa
lods
out
push
xchg
cmp
out
je
sahf
enter
scas
xchg
inc
xchg
mov
or
sbb
scas
out
jnp
jns
shl
push
mov
mov
or
xor
movs
stos
out
add
fcomp
out
scas
aas
pop
(bad)
jmp
(bad)
push
add
xor
fcomp
xor
lea
mov
lea
ficom
push
pop
outs
dec
xor
sub
pop
or
sbb
adc
push
sbb
pop
mov
and
push
xchg
inc
inc
sub
xchg
stos
push
mov
sub
pop
fld
cmps
hlt
sub
mov
lahf
fdiv
adc
mov
dec
movs
or
(bad)
pop
shl
mov
inc
push
add
jl
or
push
outs
pushf
mov
(bad)
push
arpl
loope
mov
sbb
or
cmp
mov
iret
jl
fmul
pop
dec
imul
mov
pop
(bad)
repz
retf
pushf
cmp
xor
inc
jl
aas
outs
inc
push
popa
iret
xor
pop
retf
dec
stc
fxch
dec
cmc
add
inc
mov
push
in
mov
pusha
inc
test
add
push
enter
push
cmps
xor
retf
outs
cmp
push
xor
out
push
popa
psllq
xor
xor
inc
clc
inc
(bad)
scas
jecxz
mov
jl
sub
mov
sub
(bad)
and
mov
mov
cmps
aas
push
sub
int3
(bad)
pop
mov
(bad)
je
repnz
test
ins
int
jmp
mov
sub
sbb
outs
or
inc
and
dec
imul
movs
mov
mov
cld
popf
push
test
jmp
and
jp
fistp
fistp
icebp
xor
mov
shl
test
(bad)
and
mov
jns
pop
pop
stos
pop
std
call
sub
jns
pop
sub
push
mov
sub
ja
sub
adc
mov
aam
fcomp
jae
jbe
adc
mov
sbb
mov
cmps
cdq
sub
fwait
scas
das
jp
fisttp
xchg
xor
mov
jg
lods
(bad)
jl
aaa
imul
in
sbb
sahf
enter
mov
pop
enter
pop
dec
inc
gs
sub
push
cwde
mov
lods
das
adc
aad
dec
pop
sbb
sbb
imul
adc
out
sub
into
adc
test
add
movs
mov
mov
stc
pop
scas
sub
shr
sub
ja
stos
push
fdivp
mov
sub
jg
and
sbb
jg
xor
cmp
ret
or
xor
repnz
shl
and
pop
out
icebp
cmp
gs
ja
ficomp
dec
pop
sbb
not
sbb
sub
pop
pop
dec
ret
pop
je
or
inc
lea
mov
jp
stos
scas
loop
inc
inc
test
adc
cmp
fiadd
jmp
mov
icebp
aas
inc
push
jmp
cli
cmp
aaa
pop
or
mov
xor
mov
adc
sar
jmp
into
stc
cmp
cmp
adc
in
inc
ficom
dec
rol
mov
cmovg
mov
adc
jbe
stc
jmp
mov
out
cmps
push
retf
jg
fwait
dec
xchg
cmp
mov
fbld
clc
das
pusha
pop
or
push
daa
mov
test
inc
ret
out
cld
jne
ror
stos
pop
jg
fimul
add
stos
dec
out
xor
jmp
idiv
leave
mov
stos
inc
aaa
adc
and
add
push
stc
fwait
ret
fimul
or
mov
pop
aad
retf
xchg
nop
into
push
mov
jg
push
jnp
fs
add
pop
stos
jmp
or
xchg
cwde
mov
js
fnstsw
int3
cmp
icebp
retf
jne
mov
out
js
retf
xor
pop
and
fs
in
clc
add
mov
ins
repnz
jne
mov
in
add
jno
mov
mov
std
push
nop
mov
pop
dec
adc
(bad)
setne
xchg
in
sub
adc
add
xor
push
ja
xchg
outs
not
xchg
push
in
or
mov
je
jecxz
mov
push
mov
sub
jp
mov
fbstp
sbb
xor
xor
push
or
hlt
cmp
shl
xchg
jecxz
fcom
(bad)
cmps
jbe
mov
cld
push
aad
scas
pop
mov
xor
jmp
test
mov
pushf
aad
es
test
sub
fistp
mov
stos
pop
fcomp
mov
add
pop
xlat
outs
add
xlat
aas
or
(bad)
test
push
test
pop
add
mov
xchg
movs
ja
inc
jp
push
ins
les
iret
dec
sub
ret
or
push
sbb
popa
arpl
mov
stc
scas
xchg
push
and
icebp
loop
xchg
aam
mov
xor
aad
mov
cmps
leave
call
pop
jno
xchg
xor
stc
ja
fs
and
and
pop
lods
int
sbb
push
add
(bad)
call
cmp
xor
cld
loope
into
je
sahf
push
idiv
cli
mov
scas
in
dec
sub
xor
jo
fsub
cdq
jecxz
mov
dec
jnp
sub
fadd
jno
outs
sub
cmps
dec
push
jmp
stc
or
mov
cmp
or
pop
popa
sub
retf
xchg
pop
jae
add
xchg
cli
mov
rdmsr
inc
nop
(bad)
push
cld
push
xchg
ret
js
sbb
mov
inc
and
enter
lods
les
xchg
xchg
xchg
pop
inc
sub
fisubr
aad
cmps
adc
cmp
mov
stos
test
in
or
pop
dec
add
pop
fidiv
jne
cwde
mov
xor
stos
xchg
mov
mov
and
out
jb
out
dec
out
mov
mov
and
je
mov
sub
mov
call
ss
je
adc
push
les
imul
add
test
jne
data16
xchg
pop
xchg
mov
xlat
or
sahf
dec
fld
shl
push
dec
rcr
repz
neg
xor
psubsw
cld
aas
dec
cmp
fdivrp
popf
add
and
(bad)
outs
shl
xor
xor
lods
push
call
das
push
push
and
mov
scas
mov
ficomp
jmp
pavgw
cmp
jns
rol
stos
jbe
xchg
or
into
ret
mov
pop
mov
in
sbb
bnd
mov
mov
and
(bad)
rcr
sbb
jl
jle
mov
(bad)
adc
push
and
mov
xchg
pop
daa
add
movs
jg
neg
sub
out
add
jmp
sub
shl
retf
pusha
pusha
test
pop
push
scas
dec
sti
and
mov
xchg
dec
cs
xchg
xor
in
js
adc
pop
jb
int3
cmps
les
aas
xchg
(bad)
retf
clc
aaa
(bad)
shl
dec
xchg
int3
cmp
movs
pop
xchg
ins
pop
mov
or
and
aam
pop
pop
inc
and
call
push
mov
ret
mov
mov
jb
jmp
mov
imul
sbb
and
arpl
sti
and
jl
jmp
add
mov
fcom
mov
cmc
mov
sbb
xlat
add
jecxz
xchg
neg
mov
enter
test
stos
pop
xor
shl
mov
pop
mov
imul
dec
xchg
iret
push
fwait
cmp
xchg
dec
pop
adc
outs
imul
nop
ret
cli
cmp
dec
out
jo
ins
ins
in
jl
cmp
out
inc
or
(bad)
loop
add
jle
xlat
sbb
inc
lock
push
shl
je
dec
mov
pop
movs
ret
retf
or
ins
add
repnz
push
jle
inc
std
retf
ds
es
inc
aad
sahf
jl
mov
pop
dec
das
dec
mov
cmp
pop
mov
xchg
ret
push
add
cmp
out
cwde
popa
mov
movs
es
cmp
scas
loopne
fdivp
retf
pop
cld
cmp
push
push
out
sbb
or
repz
inc
push
cmp
xchg
scas
aam
push
pop
inc
and
pushf
arpl
fldenv
pop
mov
loope
cli
test
jg
test
jl
ja
cmp
push
cmp
mov
shr
shl
test
inc
stos
das
sub
int
adc
ret
inc
adc
and
push
jp
fsubr
imul
inc
dec
jp
mov
mov
lahf
mov
daa
pushf
sub
cld
fsub
sub
mov
loopne
sbb
ror
cmp
xlat
xchg
dec
aaa
inc
dec
pusha
xchg
jmp
les
call
jecxz
sub
(bad)
(bad)
dec
ins
jo
mov
(bad)
lahf
(bad)
push
cmp
cld
jmp
scas
fsubr
xor
mov
cmp
mov
mov
xchg
mov
(bad)
(bad)
int
cdq
mov
cmc
movs
jbe
xchg
push
out
xlat
outs
push
test
sbb
mov
add
xchg
inc
outs
std
int3
pop
cld
add
dec
call
div
bound
jmp
and
sbb
std
jno
test
jle
cmp
push
lock
mov
cmc
sub
ret
fcmovu
mov
ins
cdq
fld
movs
arpl
push
or
ins
arpl
pop
mov
adc
inc
out
mov
arpl
cmp
add
jno
call
mov
enter
pushf
mov
mov
sti
mov
movs
aaa
cmc
push
pop
adc
xchg
fbstp
xor
push
clc
mov
jecxz
aad
dec
(bad)
adc
in
loop
rcl
cli
push
add
adc
add
dec
mov
adc
adc
jg
ret
out
mov
adc
dec
jg
stos
cwde
es
shr
mov
js
loop
loop
jecxz
dec
test
inc
loope
data16
hlt
jnp
sar
sbb
and
jnp
shl
xchg
imul
mov
sbb
xor
movs
xchg
mov
mov
push
in
or
stos
retf
jae
cmp
je
out
inc
cmc
iret
in
push
xchg
call
test
aas
mov
jns
and
sbb
popa
or
fst
xchg
mov
mov
in
xchg
and
cmp
inc
fs
mov
add
aam
push
rcl
jmp
fwait
adc
jg
shr
mov
pop
(bad)
fcom
gs
mov
sahf
sub
push
mov
sbb
jne
fild
pop
mov
scas
fs
push
mov
test
ret
mov
sahf
pop
rol
sub
fnstcw
inc
xor
mov
pop
out
push
jb
jno
push
lock
mov
push
ins
cwde
sbb
jp
dec
(bad)
push
ds
fsub
std
in
js
stos
push
(bad)
jbe
data16
pop
call
int
bound
das
int3
rep
mov
mov
popf
mov
mov
jae
inc
mov
shl
push
mov
jb
or
and
sub
jns
stc
xor
push
cmp
pop
inc
gs
mov
iret
fwait
int3
push
dec
sbb
jo
cmps
sub
dec
fisubr
xor
inc
jle
inc
push
push
pop
pop
nop
bound
add
leave
out
sti
subps
sub
lea
sbb
loopne
cli
mov
xor
(bad)
mov
pop
data16
mov
repnz
aas
mov
pop
ja
or
inc
imul
(bad)
ffree
loopne
rcl
add
and
movs
in
mov
popf
adc
fwait
sahf
aad
xor
xchg
mov
xchg
sub
sub
jbe
(bad)
(bad)
movs
dec
xchg
repnz
jecxz
fmulp
es
enter
ror
xchg
shr
xor
aam
rcr
cwde
sub
lods
retf
in
inc
js
add
retf
sbb
xor
sub
(bad)
jp
aas
xchg
sbb
ret
idiv
sub
and
jg
lods
inc
push
and
aaa
cmp
jbe
inc
stos
aaa
imul
push
iret
pop
mov
push
sbb
nop
int
aad
add
mov
sahf
jge
cmp
adc
ret
cmp
sbb
hlt
sub
xor
mov
es
out
sti
bound
packsswb
sbb
sbb
mov
mov
mov
inc
jnp
mov
jmp
cmp
je
inc
dec
(bad)
loope
aas
aaa
cld
sub
stc
mov
jb
movs
pop
prefetch
js
push
and
enter
movs
loopne
jmp
(bad)
loopne
xor
add
push
outs
ret
fld
cmp
or
loope
(bad)
pop
out
jo
jmp
(bad)
cmc
ficomp
lods
(bad)
push
xor
and
cs
sbb
push
adc
adc
lods
sub
cmp
jbe
sub
or
add
popa
int3
ret
cmp
test
lods
ins
lock
outs
cmps
sahf
imul
inc
cmps
mov
jl
and
jmp
cli
pop
sub
xor
pop
ror
cmp
cdq
(bad)
adc
jecxz
push
fidiv
xor
and
push
sar
and
inc
mov
pop
inc
addr16
fldenv
sbb
sbb
sbb
mov
call
or
(bad)
test
jae
cmps
int
push
popa
(bad)
je
jmp
ret
push
call
xor
shr
dec
jnp
and
xchg
or
popf
fwait
rcr
sti
jle
sar
ds
push
(bad)
aas
mov
sbb
jg
icebp
dec
and
jne
lahf
xchg
fild
mov
mov
aam
mov
out
inc
xor
pop
test
or
sbb
pop
inc
les
or
xchg
pop
inc
rol
fistp
and
leave
mov
mov
adc
cmps
pop
push
sub
or
test
imul
sub
xchg
xor
xor
dec
mov
push
call
inc
icebp
ins
or
xchg
cs
sub
not
dec
enter
inc
cmps
stc
jge
jns
add
or
cmp
movs
into
add
call
ins
jb
shl
xchg
in
pop
(bad)
aad
movs
pop
aas
out
mov
retf
test
adc
pop
and
neg
gs
fs
mov
cdq
jl
dec
jb
retf
cmp
sahf
in
js
xchg
(bad)
out
jo
mov
mov
jl
or
jbe
pop
mov
or
xchg
rol
inc
sbb
pop
jmp
repnz
inc
or
repz
pop
cmps
cmps
dec
(bad)
cdq
test
js
xor
cmp
push
cmp
and
and
push
inc
and
and
pop
pop
push
pushf
push
adc
icebp
cmps
loopne
mov
xchg
adc
test
xor
sub
xor
jbe
scas
(bad)
jg
push
fdivr
or
stos
dec
fcom
retf
pop
ror
xor
daa
or
jnp
push
in
push
lods
cmp
not
ins
sar
sub
inc
pusha
bound
je
(bad)
ins
leave
nop
jg
lea
dec
movs
shr
push
fcomp
(bad)
adc
leave
mov
mov
mov
adc
outs
xchg
enter
fwait
mov
std
test
and
in
mov
jl
add
dec
xor
lock
movs
mov
int
pop
and
sbb
int3
repz
fwait
rcl
or
imul
mov
sbb
sub
dec
fadd
in
pop
fwait
push
and
push
int
aas
stc
push
addr16
xor
jo
shl
(bad)
cwde
mov
popa
push
push
xchg
mov
div
pushf
sbb
and
je
shl
mov
jb
into
cmps
in
call
mov
sub
(bad)
or
outs
push
push
xchg
push
in
retf
mov
push
sub
data16
ins
jmp
lods
push
dec
std
arpl
adc
mov
(bad)
jns
and
lods
mov
sbb
jle
mov
jno
ins
repz
jae
push
cli
lock
cmp
in
sbb
mov
mov
call
jo
dec
hlt
loope
test
dec
mov
and
(bad)
mov
outs
(bad)
jne
sbb
and
cli
xchg
jmp
cmp
or
ds
cmp
adc
int3
sti
loopne
push
xchg
popf
in
xchg
dec
jo
xchg
popf
test
push
jnp
aad
movs
mov
out
cmc
jmp
rcr
jmp
sub
mov
mov
push
stos
leave
aaa
scas
push
js
jg
aad
call
pop
pop
imul
sbb
mov
mov
es
out
popf
cs
loop
ja
xchg
jecxz
outs
jb
push
xor
xor
cld
mul
pop
push
imul
aam
aas
aas
and
sar
loopne
sbb
out
movs
fs
ja
jle
test
loop
jl
vaddps
repz
in
cwde
iret
mov
ins
cmp
cs
imul
jg
jge
in
repnz
loop
push
(bad)
xchg
pop
enter
inc
dec
and
(bad)
loop
in
jo
xchg
packuswb
clc
sub
cmp
add
pop
loop
lds
retf
mov
(bad)
(bad)
call
hlt
jl
popf
pop
mov
jecxz
repnz
xchg
dec
sbb
cld
loope
cmp
ja
dec
test
stc
xor
xlat
aad
ins
into
push
dec
dec
outs
fistp
inc
cwde
(bad)
outs
icebp
rcr
lock
test
add
cmp
add
and
mov
out
fisttp
and
xor
cmp
mov
sbb
enter
cmp
test
push
and
inc
icebp
jno
(bad)
popf
inc
lahf
ror
xor
mov
popf
push
retf
sub
leave
mov
mov
xchg
dec
inc
ror
push
lea
outs
or
xchg
inc
aad
jnp
aad
ss
jp
nop
hlt
xchg
shl
xlat
lods
and
ja
push
outs
mov
cmc
xchg
int
jl
sbb
xor
vaddsd
push
into
mov
imul
cmp
je
jmp
push
mov
jge
add
(bad)
sub
push
xor
fsubp
into
mov
jnp
ror
ret
push
out
ds
cs
dec
inc
ins
clc
xor
lods
adc
sub
adc
sbb
imul
jmp
push
mov
inc
sar
sahf
cdq
lahf
(bad)
push
retf
pop
sbb
lea
pop
(bad)
cmp
js
dec
ja
add
xor
(bad)
popa
or
paddusb
and
out
lahf
gs
or
es
xchg
or
enter
and
lods
push
sahf
aas
pushw
shr
inc
sbb
or
int3
pop
fsubr
push
mov
stc
or
or
dec
div
ins
sub
mov
pop
retf
adc
jecxz
call
cmp
nop
(bad)
fbstp
mov
xlat
outs
cmp
fsub
js
pop
adc
inc
call
imul
(bad)
retf
hlt
cld
aam
arpl
pushf
mov
das
scas
push
es
test
add
clc
pop
jge
sub
lea
mov
fisub
call
mov
lock
ss
sbb
xchg
xor
jns
mov
nop
aam
jae
in
and
mov
fsubr
push
es
jnp
data16
std
test
or
in
cdq
pop
add
sbb
jmp
test
cs
mov
scas
loop
rcr
add
ror
dec
add
jge
push
mov
jnp
les
mov
(bad)
and
push
dec
pop
ins
push
and
fwait
xlat
cli
sbb
popf
jne
fld
or
imul
stos
pop
jp
popf
dec
les
(bad)
add
das
daa
push
hlt
mov
mov
mov
int3
loop
xor
iret
addr16
mov
(bad)
cmps
jbe
inc
pop
adc
stos
xchg
fs
icebp
or
cmc
adc
lahf
mov
and
jle
mov
mov
retf
inc
mov
int3
test
mov
push
ja
nop
pop
call
call
xchg
xor
push
mov
in
ret
ss
mov
pop
and
fwait
les
jg
sub
xor
mov
sbb
adc
fistp
outs
call
jb
cmp
or
pop
mov
test
cmp
ror
sbb
and
dec
jecxz
fisttp
outs
jmp
mov
jle
test
dec
ror
jmp
inc
fcom
sar
add
jmp
(bad)
inc
add
ds
pusha
inc
or
xor
jp
jae
sbb
push
xchg
out
out
loope
clc
and
les
in
std
fcomp
pop
out
jmp
push
pop
je
xchg
mov
gs
mov
push
mov
push
shl
sbb
xchg
xchg
xor
mov
xor
adc
push
xchg
test
add
inc
sahf
shr
xor
rcl
pop
jmp
jne
sbb
push
sar
rol
push
xor
cdq
inc
xchg
js
fsub
icebp
sbb
imul
push
mov
dec
(bad)
cmps
ss
pop
in
test
repnz
cdq
js
cmp
arpl
int3
and
sbb
das
in
add
test
pop
mov
movs
in
stc
in
scas
fcomp
outs
(bad)
fisub
lods
jecxz
xchg
div
xchg
dec
or
test
or
jecxz
and
mov
or
sub
xchg
icebp
aas
adc
sbb
cmp
(bad)
enter
jne
jbe
adc
fwait
and
mov
mov
jge
dec
gs
pslld
in
mov
sbb
push
pop
xor
icebp
jns
add
cs
(bad)
jb
test
mov
mov
fs
inc
dec
lea
hlt
adc
and
xchg
or
cmp
push
push
cmc
jbe
(bad)
push
sub
mov
inc
cmp
sahf
sub
(bad)
sbb
fisubr
dec
lea
dec
dec
popf
sbb
push
js
neg
nop
pop
or
jno
add
leave
imul
and
mov
xchg
adc
sub
ret
fimul
(bad)
jbe
pop
sub
sbb
addr16
stos
popf
fld
jp
add
mov
or
cmp
pop
push
popa
jnp
cmps
push
adc
push
pop
shl
inc
adc
mov
mov
in
mov
cmp
push
mov
push
sbb
push
jl
xchg
pop
js
ds
and
mov
mov
cmps
in
inc
push
int
xor
push
mov
adc
inc
or
imul
lahf
daa
loope
mov
fcmovne
dec
sbb
stos
data16
out
cld
jo
or
(bad)
fmulp
cmp
shl
inc
std
jb
mov
push
mov
lods
idiv
sbb
(bad)
fneni(8087
cwde
dec
cmp
rcr
ffreep
jbe
sub
(bad)
das
ins
or
stc
cmp
mov
stos
xor
call
cs
in
mov
lods
mov
and
aam
test
out
pop
mov
xor
push
(bad)
(bad)
jno
pushf
shl
imul
xor
jno
pop
push
popa
inc
sub
push
mov
addr16
sub
dec
popa
in
push
fldl2t
std
test
out
es
mov
pop
xchg
lods
mov
inc
loopne
enter
mov
outs
pop
add
jmp
and
mov
cmp
xchg
push
ds
jmp
xchg
repnz
adc
test
dec
les
xor
test
in
inc
or
mov
in
aad
adc
xchg
dec
ret
das
arpl
ds
pop
xchg
pop
inc
mov
xor
push
jecxz
div
xchg
dec
push
or
leave
xor
pushf
test
add
mov
bound
sbb
fisubr
or
cmp
aaa
call
xlat
inc
frstor
sub
pop
or
in
ins
ds
inc
jge
pop
push
hlt
mov
in
(bad)
xchg
mov
xor
arpl
iret
jecxz
out
xchg
shl
aas
sub
(bad)
xchg
ficom
dec
in
cmp
ins
pinsrw
xor
in
inc
mov
xor
add
or
sub
inc
paddq
cs
call
das
pop
in
aam
push
in
scas
adc
cwde
lods
cs
sub
jg
pop
push
mov
aaa
cmps
scas
or
(bad)
jo
scas
clc
call
pop
fnstsw
mov
or
push
das
leave
std
adc
add
call
pop
ds
rol
dec
and
dec
repz
test
dec
movs
clc
leave
xor
mov
push
and
push
out
popa
or
dec
sub
mov
adc
dec
push
xchg
jecxz
imul
fsub
and
xlat
cli
adc
cmp
test
addr16
dec
cwde
aam
pop
sub
or
adc
stos
cdq
mov
ds
lods
nop
push
enter
sub
ret
pop
jmp
sbb
popf
into
data16
mov
adc
retf
push
mov
adc
mul
xchg
add
stos
arpl
fld
push
or
or
jge
add
sti
stc
sub
jne
test
iret
and
mov
sbb
jmp
sub
rol
dec
cmps
xchg
test
pusha
outs
and
add
cmps
cmp
nop
unpcklps
rol
test
pop
loop
push
adc
push
imul
and
in
adc
fwait
rol
enter
ins
cli
inc
pop
neg
cmp
fsubp
mov
in
or
stc
cs
enter
popf
mov
sbb
mov
jbe
xor
jl
lds
test
outs
mov
test
les
xchg
xor
push
xchg
inc
mov
xchg
mov
adc
cmps
jo
and
inc
ins
(bad)
lock
imul
or
mov
xchg
push
out
loope
inc
xor
cmps
jecxz
add
outs
push
aaa
mul
sti
stos
cmps
cwde
cmp
retf
fisttp
(bad)
clc
sub
mov
and
mov
int3
rsqrtps
repz
xor
add
inc
push
stos
add
inc
repz
mov
jno
in
sti
mov
inc
sub
data16
sub
je
fstp
and
adc
inc
test
call
sub
and
test
int
jle
fwait
jmp
out
movs
daa
add
test
mov
test
gs
mov
mov
adc
int
mov
push
mov
lods
test
mov
mov
jb
scas
fisttp
ins
push
lds
push
xor
xor
pop
add
stc
add
sbb
mov
pop
fst
scas
and
mov
push
and
(bad)
or
cwde
into
mov
aad
fdivr
test
mov
gs
or
sbb
mov
pop
fsub
xchg
and
cmp
ja
ss
inc
cmp
xchg
mov
shr
repz
test
pop
mov
call
adc
push
retf
cdq
mov
neg
jp
push
jle
inc
imul
sbb
add
jae
xchg
(bad)
ja
outs
ror
mov
call
push
in
push
cmp
cli
add
mov
icebp
pop
xchg
push
mov
inc
stos
sbb
mov
int
cmp
gs
inc
adc
pop
mov
sbb
dec
inc
xchg
clc
xchg
icebp
shl
(bad)
and
mov
xor
arpl
cmp
push
rol
adc
stc
add
sbb
push
mov
xchg
xchg
mov
ror
add
cmp
xor
(bad)
mov
xlat
fwait
jnp
pushf
out
in
fsubp
jmp
and
dec
pop
cld
cmp
push
mov
bound
adc
add
xor
xchg
xor
push
push
fild
or
cmps
adc
psrlq
xchg
xor
imul
data16
push
leave
(bad)
and
pop
pushf
ja
clc
ja
fs
arpl
pop
sbb
push
cld
jbe
popf
jno
push
icebp
mov
icebp
mov
jp
lds
hlt
adc
pop
and
mov
jne
fdiv
pop
xor
and
xor
dec
mov
or
sub
mov
pop
jb
test
xor
fucomip
jb
fisttp
xchg
mov
xchg
jo
jecxz
mov
cmp
rol
xor
push
mov
lock
jge
jbe
sub
pushf
retf
dec
pop
nop
leave
mov
add
mov
loope
sahf
or
jl
neg
pop
stos
in
rep
rcr
mov
cld
add
xchg
clc
rcl
fld
aas
xchg
ins
add
push
jl
xor
cli
repnz
add
mov
ds
cmp
adc
mov
push
daa
stos
mov
fnstenv
dec
ret
scas
xchg
outs
nop
cs
inc
pop
cdq
ror
repz
mov
ret
jmp
scas
test
imul
pop
inc
test
(bad)
cld
sar
pop
ins
and
sbb
adc
cmp
cmp
test
data16
dec
inc
pop
leave
pop
xor
push
push
mov
test
mov
ins
bound
int
or
fldcw
jle
push
xchg
out
test
cmp
push
add
sbb
sar
dec
into
jb
cmps
(bad)
(bad)
mov
ret
cld
(bad)
pop
dec
retf
and
jg
push
fisttp
retf
xor
loop
inc
daa
sbb
sub
ss
je
or
push
retf
loopne
sub
mov
popa
add
push
push
repz
mov
pop
jbe
loope
data16
mov
stos
repz
xor
lahf
cdq
xchg
push
sti
jae
inc
mov
sub
retf
shr
fbstp
hlt
cmp
cld
test
mov
in
movs
mov
icebp
imul
and
cmp
ret
pop
and
(bad)
inc
mov
sbb
cmps
test
xchg
and
mov
mov
call
inc
push
sub
inc
and
cwde
aam
pushf
jbe
mov
scas
rcr
xchg
js
ror
arpl
hlt
ret
pop
inc
(bad)
mov
add
or
call
sbb
ins
stos
push
sbb
lds
leave
test
aas
outs
sbb
int3
push
xchg
sbb
mov
fst
test
jnp
cmp
or
cmps
dec
jno
nop
movs
faddp
jg
jg
push
mov
in
or
ss
sub
ins
dec
(bad)
mov
inc
or
cmps
xchg
jbe
data16
push
mov
jb
ins
cmp
pop
xlat
cli
test
in
data16
push
call
cmp
movs
nop
inc
fstp
loope
mov
and
jl
xchg
jecxz
or
xor
pop
jle
jmp
push
dec
pop
pop
mov
or
ds
or
mov
movs
or
sub
enter
inc
sbb
cmp
and
cmps
and
arpl
fnstenv
repnz
sbb
call
aas
and
xchg
cld
test
push
mov
sahf
sub
jnp
sbb
adc
out
gs
retf
loop
dec
stc
in
jb
cmp
(bad)
sub
mov
adc
cmp
(bad)
int3
idiv
icebp
mov
in
pop
stc
push
nop
out
or
push
xchg
push
test
and
xchg
push
aas
cmp
sbb
imul
xchg
mov
sub
sbb
fmul
xchg
idiv
cmps
movs
aam
mov
adc
sbb
movs
jp
jmp
shr
enter
sbb
xor
add
loopne
in
sbb
sahf
(bad)
inc
cmps
daa
fucomi
test
ret
cmps
push
mov
(bad)
cli
jne
and
cmp
aad
pop
cmp
arpl
or
stos
ins
(bad)
jmp
xor
lods
(bad)
idiv
test
dec
push
push
adc
or
sub
mov
gs
adc
(bad)
cmp
je
sbb
clc
out
adc
jge
dec
mov
or
sub
aaa
add
out
ins
lods
and
cmp
cmps
jo
mov
mov
inc
(bad)
adc
dec
push
(bad)
adc
cld
add
int
xlat
push
xor
dec
xor
pop
sub
push
repnz
das
jne
std
cdq
cmc
sub
js
push
movs
ret
call
push
xchg
xor
mov
jne
ror
push
repz
gs
nop
adc
xchg
pop
push
(bad)
out
jecxz
ja
lock
pop
inc
lods
cmp
mov
add
jmp
add
push
sbb
xchg
jnp
adc
ret
and
mov
pop
aam
sub
xor
out
xlat
dec
fsubr
mov
jns
jecxz
sbb
xor
pushf
push
push
in
loopne
je
cmp
adc
sahf
mov
cmp
cmp
xor
or
push
cmc
js
outs
scas
inc
cs
fcom
sub
cmps
(bad)
mov
sub
test
out
scas
or
or
daa
out
push
xchg
lock
inc
add
scas
mov
sub
and
dec
call
mov
lea
push
mov
int3
std
mov
adc
(bad)
pop
sub
jmp
das
cmp
jg
adc
push
sub
cmps
jbe
push
push
std
pusha
ins
sbb
rol
ss
neg
inc
push
jg
inc
mov
inc
dec
(bad)
in
sbb
jae
adc
imul
adc
(bad)
mov
jbe
movs
or
pop
shl
sbb
repnz
dec
test
inc
rol
jmp
mov
out
pop
sub
hlt
mov
mov
inc
ja
movs
iret
and
ret
sub
ins
sub
or
popf
inc
mov
ja
shl
push
shl
mov
lahf
or
xor
lds
mov
mov
add
and
or
imul
clc
clc
pop
test
stos
retf
xor
in
leave
adc
pop
fs
or
mov
jecxz
nop
or
jge
xlat
jb
inc
(bad)
rol
jne
push
jecxz
jle
xchg
mov
mov
sbb
add
out
mov
jae
pop
std
jo
pop
call
mov
xchg
inc
imul
inc
adc
scas
mov
mov
add
cmp
sub
xor
nop
dec
push
mov
pusha
popa
jmp
(bad)
lock
mov
add
fiadd
and
jp
imul
pop
ds
inc
add
inc
aad
int
jne
pusha
inc
jae
and
leave
sar
into
loope
mov
call
inc
dec
mov
call
push
inc
push
mov
js
dec
lahf
mov
cmc
mov
inc
call
push
popa
(bad)
sub
ret
shr
mov
dec
push
inc
pop
cmp
pop
mov
and
add
or
call
or
inc
popf
push
je
mov
jmp
sbb
xchg
call
fisubr
sub
scas
fild
and
jnp
gs
retf
or
inc
call
mov
jmp
push
adc
sub
shl
loop
inc
xor
jo
or
fwait
mov
sub
push
jg
shl
pop
inc
aad
ja
cld
mov
mov
out
fxch
ins
bound
dec
add
sbb
mov
jno
sub
mov
cmps
lea
cmps
fsub
mov
xchg
shl
arpl
mov
or
mov
add
(bad)
sbb
push
cmps
sbb
inc
pop
sub
jp
nop
(bad)
fst
pushf
(bad)
jle
ds
mov
inc
vmread
inc
shl
mov
std
int
jnp
fs
int
lahf
les
or
ret
cld
mov
vshufpd
sbb
ins
ss
mov
xor
xchg
cld
inc
iret
shl
push
and
adc
lea
add
cld
dec
ror
mov
lahf
ja
dec
or
mov
push
mov
lods
jb
mov
add
xchg
xor
jb
lods
call
ins
sahf
jge
inc
mov
hlt
add
jge
fdiv
pusha
mov
pop
(bad)
mov
jns
out
cli
jns
test
fwait
es
mov
inc
jnp
mov
xchg
xor
fucomp
xchg
dec
and
or
sbb
mov
push
dec
pushf
fisttp
fcomi
cmp
jle
popf
or
dec
or
lds
push
jg
in
mov
adc
(bad)
mov
ins
ror
pop
or
mov
sub
rcr
sub
je
add
mov
push
pop
lods
fnstenv
das
xchg
xchg
aam
test
leave
rcr
lock
adc
ins
xor
jbe
rcr
movs
mov
mov
retf
scas
adc
aam
retf
in
mov
ins
jle
xor
mov
das
add
xchg
dec
sub
mov
mov
cmp
or
(bad)
and
mov
pop
jno
add
mov
(bad)
call
or
in
xchg
cmps
jmp
xchg
ja
out
aas
add
loope
ret
jle
loope
popa
push
add
jo
xor
test
mov
mov
leave
inc
loopne
adc
iret
stc
pop
(bad)
ror
jns
xor
int
test
add
sti
xor
aam
adc
mov
rol
jecxz
push
sbb
and
mov
or
lock
rcr
ret
fwait
pop
xor
loopne
add
cmp
sahf
(bad)
frstor
add
mov
out
rcr
test
mov
mov
clc
xlat
xchg
rcl
or
sti
into
lea
shr
jno
dec
xchg
test
mov
(bad)
fstp
mov
xchg
cmps
shl
inc
push
mov
scas
aaa
mov
(bad)
mov
inc
push
sub
dec
test
stos
pop
cmp
inc
push
retf
sub
dec
fbstp
out
icebp
ja
pop
repnz
and
mov
or
cmps
mov
je
push
outs
test
add
(bad)
ins
in
push
aam
push
mov
mov
lods
aad
dec
jae
xlat
or
sbb
cmp
mov
adc
retf
in
in
inc
test
jge
aaa
dec
cmp
add
and
and
out
xor
xor
pop
and
idiv
call
sar
pop
mov
mov
jl
pushf
dec
scas
shl
or
adc
cmps
fidiv
imul
fadd
push
adc
xor
std
das
stc
div
aaa
mov
ret
scas
rcr
and
pop
sub
pop
iret
popa
sbb
fsub
icebp
pusha
adc
sbb
mov
push
mov
inc
cld
shr
iret
adc
loope
lea
ins
xor
rcl
jb
pop
shl
sub
test
pusha
add
js
xchg
out
je
xor
cmc
stc
or
jl
pop
mov
xor
push
ins
shl
xchg
dec
dec
mov
cmp
inc
xor
xchg
fwait
stc
cmp
loopne
inc
sub
mov
sahf
pusha
mov
loope
xor
(bad)
fisttp
mov
push
leave
in
add
enter
mov
ins
inc
std
imul
or
aas
aad
mov
(bad)
es
adc
mov
mov
cmps
lea
sbb
jl
xlat
cld
push
rcl
pop
mov
arpl
push
in
scas
outs
inc
arpl
sub
jge
in
xchg
dec
push
mov
sbb
pop
loop
pop
and
sub
scas
aas
daa
xor
ja
add
test
xchg
in
call
fs
push
sub
push
xchg
mov
test
add
nop
adc
pop
repnz
dec
loope
cmp
add
fimul
mov
and
or
or
dec
in
shl
jmp
pop
repnz
fistp
sub
xor
add
add
aaa
dec
mov
fndisi(8087
mov
ror
repnz
adc
xlat
pusha
lahf
repnz
xor
fldcw
cmp
aad
adc
retf
and
test
pop
(bad)
and
mov
iret
mov
dec
adc
xor
push
push
in
cmp
or
imul
(bad)
and
(bad)
gs
mov
push
mov
dec
lods
push
pop
pushf
inc
js
ss
mov
cli
stos
pop
jae
cmp
loop
add
and
in
cmp
pop
aaa
out
outs
push
cmc
pop
push
(bad)
push
jo
jmp
or
mov
jmp
xchg
(bad)
ror
fs
mov
icebp
jo
data16
sbb
adc
xchg
jl
xchg
cmp
mov
sar
add
lods
loope
fs
lods
mov
jmp
mov
repnz
jnp
sbb
stos
add
cmp
shl
ds
cmc
add
shl
lds
adc
mov
in
jne
pop
int3
aas
js
les
xchg
xor
int3
imul
dec
and
aas
mov
loopne
add
repz
sub
clc
jmp
outs
jp
or
fbstp
test
leave
stos
adc
adc
xor
inc
icebp
xor
fs
pop
xchg
xchg
fcomp
jbe
retf
(bad)
movs
call
sahf
xchg
outs
or
out
jne
xchg
sahf
and
lods
dec
cmps
clc
push
outs
xor
int
outs
inc
sti
int3
iret
repnz
adc
movs
mov
es
xchg
sbb
add
int3
loope
stos
stos
xor
push
pop
adc
sbb
push
mov
push
adc
pop
push
ds
adc
pop
dec
rol
icebp
push
or
push
jne
jl
out
add
ds
loope
clc
dec
sbb
xor
jmp
add
fnstenv
shr
xchg
daa
fmul
ret
add
aaa
cmp
sbb
dec
movs
jno
js
xchg
mov
arpl
push
cmp
cmp
pop
inc
mov
cmp
scas
push
cs
add
mov
pushf
jmp
mov
std
mov
jge
pop
pop
or
leave
ds
pop
jp
cmp
rcr
in
mov
cmp
sbb
push
jge
hlt
in
inc
or
cmp
or
stc
mov
adc
inc
pop
cwde
jne
mov
pop
mov
cdq
add
jp
sar
lds
xor
loopne
fs
xor
fnstsw
enter
outs
idiv
xchg
out
cmp
inc
inc
(bad)
int
mov
lds
shr
adc
pop
pop
out
xchg
into
xchg
jge
xor
scas
enter
xchg
xchg
stc
push
mov
mov
(bad)
hlt
dec
cli
cmc
pushf
sbb
sub
add
jge
shl
cmp
dec
pop
push
mov
and
aam
ror
dec
stos
cmp
inc
fsubrp
rcl
fistp
and
retf
jne
sub
and
push
hlt
cmps
sub
mov
cmc
and
cs
scas
outs
stos
cmp
iret
test
and
das
(bad)
add
cmp
mov
rcr
inc
push
sub
push
cmp
jl
rol
(bad)
imul
jg
(bad)
es
lea
or
inc
sar
rdmsr
rcl
or
push
pop
jno
test
(bad)
or
mov
pop
push
sti
jne
xchg
bound
cmp
in
imul
movs
rcr
xchg
mov
or
push
mov
pusha
dec
push
(bad)
push
sub
int3
xor
fdiv
test
cli
js
and
pop
add
inc
dec
sbb
arpl
add
mov
stc
and
cld
ficom
aam
lods
aaa
cmp
lock
js
loopne
pushf
xchg
fimul
push
mov
mov
sub
int3
cdq
add
sbb
push
loope
inc
repz
push
in
pop
in
or
push
hlt
jb
dec
aas
lds
xchg
fst
pop
(bad)
jb
sub
ja
(bad)
stos
jne
adc
pop
jl
mov
loope
stc
or
mov
cmp
rcl
pusha
xor
mov
cli
addr16
inc
push
and
mov
je
xchg
shl
jg
xchg
pop
jl
dec
mov
or
jmp
sahf
mov
retf
(bad)
pop
rcl
stc
ret
xchg
pop
aas
aam
xor
adc
adc
dec
(bad)
iret
into
push
icebp
push
pop
jmp
inc
pop
add
loop
(bad)
xor
or
movs
sub
jecxz
and
push
add
test
or
push
sbb
ret
mov
nop
in
pushfw
out
movs
out
mov
sub
in
mov
push
(bad)
jmp
sub
dec
mov
cmps
int3
or
cs
arpl
sub
inc
inc
ret
sar
sbb
sbb
push
fwait
or
cmp
adc
int
mov
xchg
addr16
fs
daa
xchg
repnz
mov
(bad)
shr
mov
push
cmp
jne
sbb
xor
xchg
cmc
repz
imul
idiv
ret
popf
outs
ins
cs
cmps
cmp
and
fild
push
adc
jle
inc
stc
jle
jmp
mov
adc
pop
out
dec
shl
xor
dec
sbb
retf
or
adc
push
add
lea
adc
shl
nop
(bad)
stc
mov
pop
pop
int
pop
jae
ficom
pop
lock
popa
cmc
push
mov
jp
mov
add
daa
jo
xchg
pop
pop
jo
jns
sub
mov
retf
xchg
jns
pop
sub
retf
or
mov
sub
lock
pushf
mov
ret
retw
adc
aaa
cmp
xor
popf
jne
scas
jecxz
pop
test
cmp
mov
lods
and
shr
scas
scas
fbld
cmp
out
stos
mov
pop
lods
int3
aam
xor
xchg
leave
adc
sub
push
ss
(bad)
in
in
stos
call
jmp
fs
outs
stc
cmp
or
jae
pop
push
lahf
imul
ret
aad
xor
inc
mov
pushf
test
dec
xchg
lods
pop
push
mov
jo
dec
test
fdecstp
xchg
stos
gs
je
cmps
add
mov
addr16
and
pop
sbb
mov
cwde
cld
push
pop
xchg
ret
push
fisub
mov
ins
jnp
jo
fimul
iret
pop
jp
(bad)
mov
(bad)
dec
lock
push
add
lahf
pop
rcl
pop
mov
xor
in
imul
lea
push
mov
xor
pop
scas
jge
repz
add
push
pop
push
loop
ss
icebp
movs
stc
jge
xchg
and
shl
lods
sub
sbb
mov
cld
test
sub
cmp
enter
out
mov
or
aam
pushf
or
cmp
bound
mov
aas
mov
jnp
sbb
or
call
push
es
fisttp
arpl
adc
jo
repz
ret
mov
mov
in
fadd
push
iret
lods
in
lahf
out
mov
test
in
(bad)
mov
lock
sub
scas
lods
addr16
add
out
popa
mov
lahf
push
imul
outs
mov
mov
cmps
iret
loop
(bad)
and
cwde
mov
mov
adc
and
fcmovne
or
jae
jmp
pushf
add
into
test
jp
(bad)
mov
xor
dec
jl
or
cli
inc
shr
in
pop
or
cmps
adc
sub
lods
adc
adc
xchg
xor
clc
je
inc
fmul
inc
sbb
in
neg
das
iret
lods
data16
cs
dec
mov
pop
dec
int3
adc
sub
sbb
stos
mov
sub
push
adc
dec
ret
push
shl
aaa
(bad)
cmc
fdiv
mov
sub
mov
retf
outs
mov
bound
lods
adc
sub
xchg
jmp
mov
xor
lock
jno
push
mov
sbb
les
scas
xchg
(bad)
in
xor
inc
imul
adc
dec
cmp
mov
push
adc
jg
cmp
adc
xor
pushf
pop
nop
add
push
call
dec
or
mov
push
xchg
pop
push
mov
cmp
add
sar
pop
mov
ja
xchg
aam
fdiv
dec
daa
mov
jns
inc
mov
push
mov
scas
pop
jnp
lods
imul
jecxz
scas
add
clc
into
push
out
mov
sub
imul
enter
cwde
xor
test
add
or
pop
jno
call
mov
pusha
xchg
mov
mov
adc
hlt
sahf
xchg
ret
jge
or
fs
and
ja
sahf
out
aam
bound
pop
lods
sbb
xchg
mov
pusha
dec
mov
adc
dec
loopne
sub
xor
dec
out
mov
imul
inc
and
mov
ror
xor
repnz
leave
push
xor
fsub
inc
sbb
xor
pop
iret
mov
loop
data16
jne
jnp
stos
cmps
stos
sbb
shr
in
cmps
lahf
mov
sbb
scas
add
lahf
iret
dec
mov
or
mov
dec
mov
xor
mov
xchg
jmp
test
and
hlt
cmp
aam
out
adc
cmp
adc
add
inc
mov
cmp
std
cmp
jne
pop
cdq
push
inc
int
in
and
pop
stos
or
in
mov
push
cmp
lahf
cmp
out
in
pop
scas
add
mov
mov
lods
and
cmp
dec
das
test
sbb
pop
loopne
rcr
xor
and
lods
sub
dec
inc
out
inc
out
stc
aad
loope
xchg
pusha
imul
inc
in
stos
pop
sbb
test
(bad)
js
xor
daa
fbstp
in
ss
pusha
inc
mov
stos
push
push
sar
test
adc
stos
not
and
jae
push
or
xor
in
jns
out
movs
outs
jg
fstp
aam
(bad)
aas
retf
retf
js
cmp
(bad)
out
sahf
sub
cmps
and
jno
mov
adc
je
(bad)
shl
cmp
imul
dec
cmps
out
adc
mov
retf
push
and
and
dec
inc
pop
movs
(bad)
in
rcl
inc
sbb
xor
fs
push
inc
push
fcom
std
mov
stos
lods
idiv
and
mov
stos
xor
dec
jecxz
dec
cmp
inc
xor
idiv
in
sub
cli
jge
hlt
je
inc
ja
mov
sar
out
mov
aaa
mov
data16
jmp
sub
ret
or
aad
mov
fdivr
inc
pop
inc
inc
xchg
scas
pop
inc
pusha
dec
imul
push
adc
shr
xor
loope
xchg
hlt
(bad)
test
mov
pop
out
lahf
xchg
aas
jbe
jbe
sbb
mov
xchg
test
mov
dec
out
sbb
adc
sbb
mov
and
inc
outs
pusha
jae
in
lea
mov
add
cmp
or
mov
push
sbb
mov
or
dec
cdq
mov
pop
mov
aaa
(bad)
fidiv
inc
pop
push
add
lea
and
mov
adc
push
inc
int
hlt
mov
mov
cmps
addr16
fwait
pop
and
xchg
test
mov
adc
pop
stos
or
jmp
aam
outs
in
iret
into
cmp
and
lods
mov
fsubr
rcl
shl
xchg
loopne
push
lods
add
cmp
aam
mov
test
push
loope
adc
pop
push
enter
test
lock
out
mov
mov
icebp
imul
mov
add
repz
jmp
pop
push
push
scas
popf
(bad)
aas
cmp
mov
adc
(bad)
movs
sbb
cmp
shl
or
in
rcl
mov
mov
jae
fisub
add
addr16
fwait
jg
push
sub
add
fcomp
movs
jmp
mov
lock
aaa
mov
jns
test
and
xor
fild
test
pop
popa
or
punpckldq
pop
xor
mov
sub
and
ins
fisubr
movs
(bad)
jns
not
ins
and
fisub
movs
fld
mov
out
(bad)
xchg
cld
sbb
popa
and
out
mov
cmp
and
(bad)
push
outs
sahf
inc
cmp
adc
adc
clc
test
mov
mov
enter
sbb
(bad)
aam
sbb
aam
and
inc
outs
int3
pushf
daa
sub
inc
sbb
stos
mov
add
shl
dec
push
nop
ss
jle
dec
push
jo
nop
(bad)
jecxz
add
ret
mov
aad
adc
sub
outs
xor
mov
add
and
push
pop
(bad)
pushf
xchg
loopne
or
pop
pop
mov
pop
cmps
cdq
jnp
sbb
push
cmp
aas
inc
inc
jo
data16
push
dec
sub
mov
shr
loopne
popa
int3
cdq
mov
shl
ret
jl
push
cwde
mov
(bad)
out
rol
add
xor
sbb
or
sbb
ret
and
in
pushf
das
aad
pop
cmp
push
push
sar
outs
add
dec
push
dec
cmp
rcl
fcmovu
cmp
push
outs
xchg
jnp
mov
movs
xchg
xchg
pop
dec
mov
cli
retf
or
jmp
scas
sub
aad
inc
aas
sar
pop
adc
mov
(bad)
push
jo
xor
jmp
add
into
scas
idiv
inc
je
jmp
aam
shl
push
hlt
push
sbb
fs
xchg
add
ins
imul
ficom
or
test
rcr
out
jo
test
frstor
mov
xor
mov
dec
push
pop
mov
push
hlt
in
sub
xchg
or
adc
xchg
sub
and
xor
sbb
jle
cdq
push
std
xor
dec
sar
shl
fwait
aas
outs
xchg
nop
add
aaa
xor
jle
push
push
ins
push
fisttp
mov
adc
cdq
jne
loopne
jnp
jbe
push
aaa
jbe
iret
add
lea
cmp
push
pop
push
scas
inc
jecxz
pop
jle
sbb
push
ret
sbb
(bad)
inc
adc
pushf
push
outs
jnp
push
popa
ror
imul
xor
les
dec
xchg
cwde
xchg
cwde
sbb
lock
mov
cmp
hlt
inc
pop
iret
cdq
or
das
xchg
mov
je
jp
popf
sbb
and
ja
cmp
outs
push
xchg
outs
mov
xchg
shr
rcl
retf
ror
retf
dec
push
arpl
(bad)
inc
test
aam
int3
add
fld
ja
push
mov
jns
out
cmp
movs
lods
add
in
mov
jmp
add
push
or
fild
xor
adc
sub
jl
xor
pop
push
jl
cmp
sub
dec
adc
and
in
xchg
jae
stos
lock
loopne
adc
dec
inc
sub
daa
jmp
inc
int
dec
ss
adc
ret
jmp
push
push
scas
add
push
sub
int
(bad)
repz
mov
(bad)
and
dec
inc
out
gs
fucomi
fmul
movs
cmps
jmp
(bad)
adc
jge
(bad)
mov
ds
and
add
sbb
sbb
mov
gs
xor
mov
hlt
or
xchg
xchg
addr16
or
ret
fst
pop
add
dec
(bad)
push
push
dec
jl
hlt
mov
xchg
mov
mov
xchg
mov
pop
dec
mov
rol
dec
in
dec
xchg
std
pop
cmps
jo
nop
mov
add
js
dec
pop
mov
push
pusha
pop
adc
outs
repnz
movs
jl
pop
sahf
xor
aaa
add
sbb
ja
adc
dec
xchg
or
jae
mov
pop
lds
push
mov
mov
jae
or
mov
mov
jmp
loopne
neg
pop
cmp
into
leave
jns
xor
aam
pushf
fisub
and
lahf
jno
fs
fbld
inc
call
popf
sbb
cmp
popf
pop
mov
mov
push
js
and
inc
dec
cld
daa
add
inc
push
shl
push
loope
pop
jmp
cmp
adc
jnp
jmp
loopne
shl
mov
(bad)
lods
pusha
push
mov
dec
jmp
pop
fiadd
mov
(bad)
lea
pushf
pop
sar
sub
imul
lods
clc
push
sbb
and
out
xor
adc
adc
mov
sub
pop
cmp
mov
pop
xchg
pop
into
pop
pop
psllq
ja
in
neg
sbb
lahf
push
jecxz
push
or
(bad)
or
adc
sbb
pop
dec
mov
add
mov
outs
inc
nop
clc
cmps
mov
hlt
sub
push
int3
lds
shr
(bad)
clc
daa
aam
cmp
(bad)
or
inc
dec
cmp
fmul
push
xor
loop
movs
es
and
das
loop
(bad)
mov
push
cmp
pop
mov
fcmovnb
inc
outs
inc
call
and
fldcw
or
mov
cmp
out
movs
pop
mov
fnstsw
ss
adc
add
mov
ds
(bad)
mov
js
call
jb
xchg
aaa
std
(bad)
lock
mov
popf
or
sub
int
sbb
sbb
out
xchg
mov
fdiv
jns
leave
push
adc
mov
jne
bound
sbb
cmp
inc
call
out
jg
jg
mov
int
mov
pop
pop
out
pop
mov
dec
and
cmp
push
add
jbe
dec
movs
mov
cmovo
aam
(bad)
fdiv
cmp
shr
adc
lock
xchg
(bad)
cmp
sahf
je
int3
fistp
popa
sub
repz
dec
test
aas
xor
fwait
mov
cmp
cld
cmp
mov
xchg
loop
ins
icebp
fsubr
adc
call
hlt
das
mov
out
mov
dec
sbb
(bad)
loop
xor
rcr
loop
cmc
out
in
outs
adc
pop
pusha
les
push
xlat
scas
or
cmps
fimul
in
sbb
xor
adc
fdivr
xchg
repz
ds
movs
and
jae
xor
cmp
popa
pop
mov
inc
outs
add
out
add
cmp
mov
into
fisubr
add
rol
int
add
int
push
mov
cwde
call
popf
fisub
neg
or
inc
fist
mov
stc
cmp
xor
dec
idiv
loop
fstp
movs
arpl
sub
pop
sub
iret
mov
retf
push
xchg
inc
adc
ja
and
jnp
push
cmps
push
mov
mov
je
xlat
icebp
sub
aad
cdq
push
scas
(bad)
pop
lods
fisub
mov
and
pop
fwait
shl
aad
dec
punpckldq
mov
inc
xor
add
jb
cmp
stos
aaa
(bad)
std
aaa
or
mov
push
loop
xchg
stc
adc
fild
dec
adc
mov
imul
popf
inc
retf
or
popa
mov
and
cmp
xchg
out
push
add
jb
loop
sbb
push
out
adc
dec
popf
inc
xchg
sub
push
add
or
(bad)
and
test
sub
mov
dec
imul
xor
mov
hlt
bound
mov
bound
cdq
enter
xor
cmp
nop
push
dec
mov
ins
push
add
(bad)
sbb
mov
push
repnz
int
xchg
pusha
idiv
loopne
cmp
cld
add
jno
cmp
movs
mov
aad
dec
xchg
jmp
shl
dec
and
outs
xor
xor
ins
jae
jge
mov
pop
and
cdq
into
mov
fcomp
inc
sahf
mov
push
mov
daa
pop
leave
out
lds
sub
dec
sahf
inc
sub
mul
add
sbb
pop
add
push
or
pusha
in
cdq
fcmovu
aam
add
in
out
dec
js
int3
out
je
out
and
adc
call
jns
mov
loopne
jae
or
mov
(bad)
pop
shl
in
pop
mov
stos
je
ins
call
mov
fwait
icebp
push
push
sub
jmp
cmps
cmp
or
repz
sub
jl
xchg
inc
test
mov
pop
push
xor
(bad)
mov
in
daa
cmc
hlt
pop
jl
aas
jmp
sub
cmps
jg
mov
add
push
cmp
iret
inc
add
dec
adc
mov
stos
sbb
xchg
or
cmp
or
pushf
icebp
lds
cmps
(bad)
repz
fbld
and
push
leave
pop
pop
xor
test
lock
gs
xor
fwait
mov
fwait
bound
adc
and
jmp
sbb
mov
test
mov
add
lock
inc
ror
xor
sub
lds
leave
outs
(bad)
scas
ror
push
movs
mov
adc
mov
pop
retf
dec
stos
hlt
inc
rcl
pop
jb
adc
popf
movs
add
lods
imul
repz
lods
ins
cmp
push
retf
xlat
sbb
adc
lahf
sbb
pop
mov
lea
stos
mov
xchg
test
mov
pop
cmp
clc
xchg
add
mov
stos
push
out
cmp
je
pop
fidiv
adc
pop
mov
add
call
js
dec
retf
test
adc
and
loope
fucomp
and
dec
push
sbb
test
call
fwait
std
add
call
mov
aas
dec
pop
int3
lock
and
push
sub
add
or
push
jno
dec
sbb
xor
jmp
shl
int3
mov
rcl
std
repnz
or
scas
xor
rcl
xor
xchg
inc
jne
sub
pop
pop
xchg
mov
(bad)
retf
ja
xchg
xchg
or
sub
(bad)
lods
arpl
(bad)
in
pusha
xor
aaa
in
and
scas
dec
dec
mov
xchg
or
or
sub
mov
not
cmp
dec
ficom
inc
dec
or
xor
jge
mov
or
das
jecxz
arpl
sbb
xor
(bad)
outs
out
pop
jns
pop
mov
or
lea
jnp
dec
jl
rcr
and
ss
repnz
aam
pop
clc
out
cmp
cs
push
mov
sub
push
xor
popa
aas
sub
les
repnz
jecxz
cwde
ret
fwait
out
fdivr
adc
xchg
test
mov
lods
and
daa
pop
imul
out
inc
clc
lea
fsub
popf
push
out
(bad)
mov
push
adc
pop
jo
pop
pop
mov
(bad)
mov
fsub
push
and
movs
in
sbb
add
ja
rcr
ret
mov
fs
rol
nop
and
dec
xor
mul
call
mov
cmp
js
pop
push
mov
jne
ja
push
jnp
pop
aas
cmp
addr16
mov
or
push
inc
repz
or
retf
aas
gs
or
push
xor
mov
outs
jo
cmp
scas
jmp
rol
jecxz
shl
std
pop
ins
outs
mov
(bad)
cwde
fmul
push
pop
into
in
retf
cld
pop
lock
mov
retf
ret
cmps
add
push
sub
sub
inc
fwait
mov
inc
sub
ja
xchg
add
sbb
adc
add
(bad)
repz
inc
jecxz
cmp
pop
mov
lock
push
and
add
imul
xor
pop
dec
adc
fdiv
or
in
lods
pusha
or
mov
pop
sar
test
call
mov
mov
or
xchg
push
dec
cmc
or
jp
lods
(bad)
ja
mov
adc
cmp
inc
cli
inc
mov
icebp
pushf
jge
cmp
movs
and
dec
ret
sbb
ins
mov
inc
int3
push
sahf
movs
jae
jle
sub
push
xchg
push
loope
mov
hlt
xchg
std
(bad)
out
mov
(bad)
(bad)
jmp
iret
scas
lahf
mov
and
(bad)
jb
mov
add
jle
adc
xchg
inc
cmp
sub
mov
retf
dec
das
mov
ins
xchg
xor
xor
data16
cli
dec
enter
or
xchg
int3
jmp
outs
pop
(bad)
mov
fldenv
cmp
ror
sub
mov
jo
(bad)
in
movs
cwde
mov
inc
mov
sub
loop
inc
aad
jp
ins
jl
into
mov
pop
jg
lock
cwde
xor
cmp
or
lock
adc
cmp
add
jbe
mov
out
out
cdq
adc
mov
xor
mul
push
nop
addr16
xor
adc
repz
rol
xchg
sub
push
sbb
mov
pushf
arpl
pop
jg
pop
cwde
push
ins
mov
cmp
xor
cld
aas
(bad)
sbb
and
pop
test
dec
enter
hlt
outs
push
xor
xchg
aaa
push
pop
mov
or
int
dec
xor
mov
adc
stos
xchg
mov
jns
inc
(bad)
es
inc
test
ror
pushf
jp
rcr
add
xor
frstor
mov
sub
ret
(bad)
repz
popf
imul
lods
and
sub
(bad)
jns
loopne
fcmovbe
xchg
mov
sub
data16
adc
pop
pop
in
hlt
dec
dec
call
mov
in
shl
jmp
nop
mov
out
fdiv
mov
jne
repnz
pushf
sahf
or
jo
call
test
cwde
mov
sbb
xchg
lahf
mov
push
jo
aas
scas
daa
daa
mov
jg
xchg
outs
adc
and
out
xor
mov
out
push
popf
push
sbb
dec
gs
not
jg
mov
(bad)
push
imul
fbstp
outs
push
gs
sub
xchg
arpl
or
sar
xchg
sar
in
outs
sbb
or
inc
dec
iret
mov
sbb
out
jmp
mov
pop
pop
repnz
jge
push
sbb
in
in
out
sub
fst
mov
clc
pop
cwde
(bad)
fidiv
xchg
mov
popf
lock
add
imul
je
sbb
push
mov
scas
in
fcomp
xchg
fist
add
and
cs
xor
psubb
push
(bad)
mov
mov
popf
test
adc
sbb
add
xchg
out
sahf
dec
cmp
icebp
stos
out
into
loopne
sbb
leave
dec
dec
std
iret
out
popa
js
lds
pop
call
sbb
xchg
test
daa
ror
xlat
daa
mov
pop
clc
or
xor
test
fcomp
xor
add
pusha
hlt
ins
adc
gs
mov
and
add
xor
xor
push
jle
jp
dec
addr16
call
lock
jge
mov
inc
aaa
mov
inc
out
mov
test
test
jge
daa
mov
(bad)
call
adc
sub
sahf
pop
cmc
sbb
rcr
jo
pop
cdq
or
xchg
sbb
and
stos
dec
cmp
jo
mov
stc
in
movs
fs
mov
leave
pop
or
cmp
xchg
mov
jae
cmp
test
ja
mov
cdq
or
or
xchg
int
xchg
jmp
lahf
mov
or
loope
sub
xor
in
enter
cmp
adc
popf
xchg
cmp
das
inc
(bad)
pop
sub
arpl
and
idiv
idiv
or
inc
sbb
push
push
jnp
inc
inc
mov
or
push
inc
inc
mov
shl
lahf
cs
test
push
ds
rol
es
(bad)
pop
sub
xor
add
popa
pop
bound
cmp
dec
mov
pop
dec
leave
pop
sahf
mov
ret
cmp
push
mov
and
mov
push
xchg
adc
pushf
loope
ins
(bad)
mov
inc
pop
pop
sbb
inc
xchg
aaa
mov
add
js
in
out
mov
xor
sub
lahf
xchg
push
arpl
dec
and
pusha
cwde
sbb
movs
int
jno
xor
jno
or
scas
or
mov
or
mov
ja
into
jae
bound
retf
adc
add
jbe
xor
sbb
(bad)
add
push
into
cmp
cwde
xor
sbb
sbb
inc
fdivr
xchg
xchg
or
ja
arpl
out
sub
xor
jns
mov
adc
and
xchg
les
ds
xchg
mov
xor
sub
and
pop
push
pop
(bad)
jmp
je
mov
pop
ss
push
sub
pop
das
add
mov
cli
ss
mov
fwait
cs
mov
xchg
popa
mov
es
sbb
cli
mov
call
mov
add
popf
xor
push
lahf
loopne
scas
retf
(bad)
loope
imul
lock
or
push
mov
(bad)
mov
icebp
jb
(bad)
mov
cmp
xor
hlt
je
push
(bad)
out
aaa
popa
call
stos
jp
je
adc
inc
push
jle
fs
mov
ror
cmp
cmp
fs
dec
pop
cdq
mov
pop
xchg
xchg
inc
jge
lahf
imul
mov
loope
in
or
mov
in
test
inc
and
mov
or
push
push
adc
iret
dec
mov
cmp
push
or
pop
hlt
cmp
adc
(bad)
jmp
and
adc
inc
push
lock
aaa
dec
jp
mov
mov
fsubr
lds
pushf
pop
repnz
sub
mov
adc
out
fwait
(bad)
mov
cmp
bound
int
dec
aaa
push
les
mov
pop
add
ret
fst
icebp
dec
xchg
inc
cmp
dec
pop
leave
aad
iret
and
push
popf
fisttp
nop
stos
mov
mov
mov
sub
lea
pop
add
mov
addr16
dec
mov
or
push
das
mov
sbb
xchg
cli
(bad)
mov
ficom
shr
push
scas
ins
jns
imul
lock
imul
adc
enter
in
test
imul
xchg
mov
push
mov
dec
rcr
add
pusha
add
add
dec
pop
adc
mov
xchg
iret
pop
mov
sbb
mov
ins
and
test
pop
out
or
sub
sub
xor
sub
add
out
cmp
mov
neg
cmp
inc
repnz
ins
mov
icebp
in
das
(bad)
lahf
and
dec
dec
outs
out
jl
dec
push
fcom
icebp
dec
push
icebp
push
xchg
mov
or
mov
(bad)
xlat
sub
xor
sub
or
mov
ss
mov
mov
mov
js
mov
mov
call
mov
add
jg
jecxz
mov
or
in
cld
inc
loop
pop
push
sbb
dec
jp
cmc
jno
repz
adc
(bad)
xor
mov
push
inc
rcr
mov
pop
jbe
call
xchg
cmp
sub
in
repnz
(bad)
fsubr
fimul
stos
push
data16
imul
pop
movs
loopne
add
shr
(bad)
mov
xor
or
mov
sub
push
bound
in
repz
xchg
add
and
or
push
repz
pop
xor
fdivr
jle
lar
jl
jl
jge
jo
add
dec
fidivr
push
dec
sub
mov
fist
hlt
test
cs
ja
pop
lods
cdq
adc
(bad)
mov
sub
pusha
jl
cmp
pop
dec
imul
fist
xchg
and
inc
test
jae
sbb
pop
mov
or
push
mov
sbb
or
sub
mov
and
outs
and
sahf
in
jae
ret
or
mov
xor
fnstsw
mov
icebp
push
mov
xchg
mov
lock
push
out
xchg
in
imul
fadd
popf
mov
idiv
push
lahf
cmp
scas
(bad)
and
adc
rol
icebp
ror
adc
add
rcr
xchg
test
stos
test
mov
test
sbb
push
rcl
add
rcl
pushf
inc
xor
sub
lea
dec
daa
cmp
add
push
lea
int3
sahf
ficomp
retf
imul
out
cmps
retf
cwde
aam
add
iret
inc
shl
sub
into
or
mov
mov
xor
shl
fdiv
cmp
ficom
aas
pop
dec
mov
adc
sub
(bad)
jmp
dec
movs
movs
mov
inc
xor
retf
cmc
mov
pop
push
xor
cdq
or
sbb
in
jmp
lods
push
in
(bad)
clc
inc
cmp
push
mov
adc
imul
cmp
icebp
dec
sub
cmp
xor
sbb
ss
ret
push
in
push
sub
int
or
or
loope
shr
in
repz
test
xchg
and
jg
std
add
cli
out
dec
pop
xchg
add
(bad)
cmc
aad
xchg
ror
imul
mov
mov
mov
dec
xchg
fisttp
xchg
sub
jp
int3
xchg
jno
pop
push
mov
cmps
les
pop
pop
cdq
ja
outs
jb
jmp
mov
xchg
inc
ror
and
popf
shl
or
test
int
mov
mov
push
jb
mov
mov
cs
sub
or
inc
lods
adc
push
sbb
outs
jge
push
pusha
and
xor
adc
iret
outs
xchg
loope
xchg
sbb
mov
out
ins
ss
bound
mov
(bad)
in
inc
mov
out
ins
in
cmp
mov
pop
and
inc
jle
inc
push
xchg
sbb
ja
and
cmps
xlat
sub
ret
add
adc
fsub
jl
call
sub
jl
das
pop
in
fnstenv
sbb
or
xchg
and
xor
nop
es
into
push
sbb
cmp
out
push
sub
fldln2
jno
test
jp
mov
sbb
jge
mov
push
sahf
xor
cld
push
das
pop
and
out
add
sar
hlt
xor
shl
loope
lods
add
mov
lock
sub
lods
jl
sub
push
sub
push
pop
ss
mov
outs
mov
ret
mov
push
test
and
push
push
repnz
push
dec
sti
jo
(bad)
jg
and
fld
sub
fldcw
cmp
xchg
cmps
mov
add
out
mov
arpl
sbb
in
add
mov
and
into
jge
cmp
daa
inc
inc
rcl
scas
jg
(bad)
retf
xchg
fcom
movs
mov
inc
xor
jp
lds
mov
or
inc
xchg
pop
out
push
lock
les
dec
dec
mov
shr
scas
inc
jle
fiadd
in
cli
jo
jne
cli
imul
popf
adc
or
stos
sbb
sbb
sub
rcr
xor
jmp
(bad)
cmp
xor
ror
inc
stos
dec
fwait
push
sbb
or
aad
ins
js
test
push
xor
ss
xchg
pop
pop
or
pop
jb
adc
sbb
jl
sbb
repz
and
in
mul
stos
call
aaa
je
sbb
jne
movs
test
cmps
xchg
pop
in
es
adc
sbb
push
cmp
mov
mov
pop
pop
retf
sbb
lds
mov
sub
test
pop
je
cli
and
xor
shl
mov
push
mov
adc
jo
mov
cmp
retf
sub
iret
enter
repz
jg
cli
outs
in
cdq
retf
iret
pop
daa
and
add
stos
mov
sub
push
enter
push
fist
sbb
js
or
leave
std
push
shl
adc
or
mov
xchg
add
or
jp
xor
ss
fidivr
stc
jmp
inc
sub
push
in
in
lods
or
xchg
daa
jp
pop
icebp
push
and
sbb
sub
sbb
scas
mov
or
push
pop
sbb
mov
cmp
sbb
pop
mov
and
mov
ss
inc
imul
push
and
gs
mov
stos
icebp
aas
test
xchg
dec
icebp
in
movs
mov
stos
popf
test
aad
out
inc
push
out
out
mov
outs
dec
xor
es
xchg
outs
enter
push
dec
(bad)
or
pop
cmp
loope
dec
pop
xor
inc
scas
repnz
fbld
fldcw
(bad)
mov
and
xchg
bound
mov
pop
stos
pop
mov
cmp
retf
jnp
imul
enter
mov
mov
(bad)
pop
test
loopne
icebp
cdq
fild
inc
in
xor
jl
popa
mov
jo
add
jmp
pop
icebp
sbb
je
or
add
test
int3
sbb
xchg
adc
sar
xchg
cmp
pop
cmp
add
xor
daa
out
lahf
push
adc
jmp
repnz
mov
add
push
dec
add
ret
mov
xor
mov
jmp
lahf
sbb
jmp
mov
cmc
jae
pop
or
push
fisubr
pop
out
repnz
sbb
sub
inc
mov
mov
adc
jecxz
out
shl
pop
cmp
add
mov
retf
mov
mov
mov
sbb
in
push
mov
push
out
push
popf
mov
mov
test
call
stos
push
dec
retf
or
ret
dec
and
retf
jle
rcl
lea
repnz
adc
gs
retf
xchg
jb
adc
test
ja
pop
fadd
jbe
outs
jb
jmp
mov
add
sub
sub
pop
push
in
std
je
sti
mov
xchg
cdq
pop
call
out
fsubr
test
push
(bad)
or
fwait
or
cmps
cmp
retf
cld
mov
adc
jg
arpl
dec
dec
es
inc
clc
js
icebp
adc
fistp
jecxz
and
xchg
js
cmp
jb
movs
mov
pushf
cmp
(bad)
jmp
mov
loop
jb
inc
cmp
cmp
hlt
out
aaa
fwait
jbe
ds
ret
jmp
aas
scas
pop
sbb
in
idiv
dec
outs
cmps
iret
pop
inc
lea
loopne
pop
ret
loope
cmps
pop
xchg
inc
leave
lods
loopne
sbb
dec
xchg
outs
mov
sahf
mov
and
inc
shr
jb
inc
push
push
arpl
add
push
fmul
jae
mov
fidiv
xchg
arpl
shr
stc
ja
aas
cmps
xchg
mov
out
push
iret
add
adc
es
test
xchg
repz
sti
(bad)
call
or
lods
mov
inc
xchg
imul
or
xchg
pop
inc
in
cmps
jnp
and
add
or
pop
or
cli
inc
das
fild
sbb
cs
fs
retf
adc
pop
pop
push
jae
push
pop
dec
xchg
(bad)
jae
cdq
outs
jo
stc
call
out
pop
inc
jge
shl
test
cs
in
repnz
(bad)
enter
push
ins
(bad)
push
xlat
leave
mov
mov
inc
jo
mov
test
mov
sub
dec
cdq
mov
mov
pop
jge
jmp
call
jl
aad
cmps
bound
stc
repz
rcr
into
or
push
mov
test
push
mov
or
pop
sbb
add
sbb
lea
iret
jb
aaa
addr16
xchg
rol
adc
sahf
in
inc
in
cmp
ins
or
out
aad
mov
jp
adc
lock
xor
rcr
xor
scas
int3
stc
xor
ds
fs
pop
sub
(bad)
sub
mov
loop
fld
or
cs
jmp
jb
out
dec
inc
mov
sbb
pop
cmp
dec
xor
jmp
jge
bndldx
(bad)
and
adc
leave
std
jno
fild
jo
xchg
push
cmps
or
sub
loop
ret
push
mov
bound
daa
mov
inc
(bad)
push
xor
mov
push
lods
mov
dec
sub
push
sbb
jp
dec
(bad)
xchg
pop
loope
test
imul
es
or
adc
mov
xor
into
jmp
cmps
lock
add
mov
js
adc
jne
retf
leave
sqrtps
xchg
cld
or
repz
stos
cmp
mov
sub
pop
cmp
ret
and
add
jp
cmps
mov
adc
ret
ret
jmp
inc
fs
data16
(bad)
shr
jmp
daa
repz
dec
add
pop
ja
bound
in
mov
js
xchg
sbb
pop
fwait
(bad)
xor
xor
sbb
out
mov
xchg
sub
add
xor
das
push
jns
dec
rol
push
pop
repnz
nop
imul
mov
out
jecxz
jg
in
and
je
jle
inc
dec
add
movs
push
push
sub
mov
mov
push
pop
retf
and
mov
adc
iret
xchg
xor
cmp
fist
xor
jle
call
out
push
adc
stos
imul
scas
pushf
or
jo
xlat
push
xchg
push
ret
jno
sti
sbb
outs
cmp
xchg
popf
push
jns
xchg
les
cmp
mov
pop
sub
hlt
dec
jge
or
inc
cmp
add
and
cmovo
ds
je
popf
dec
lahf
sub
ins
addr16
rcl
inc
inc
out
retf
jp
sahf
int
jp
mov
sar
div
mov
(bad)
dec
mov
loope
jmp
movs
fsub
ret
rcl
test
leave
push
addr16
and
(bad)
(bad)
lods
jg
push
mov
sub
jp
rcr
adc
fs
loope
out
inc
add
xchg
out
push
xchg
push
xchg
out
(bad)
pop
jns
xchg
mov
clc
push
mov
sub
xchg
push
mov
lock
sub
add
cmp
dec
rol
or
(bad)
mov
pxor
sub
mov
rcl
sbb
jns
adc
xchg
cmp
xchg
adc
add
iret
mov
das
mov
jle
push
fdivr
jns
xchg
mov
ds
pop
and
xor
mov
sub
jmp
pcmpeqd
mov
add
jns
push
jge
test
pusha
fwait
test
stos
test
or
mov
mov
jae
fmul
push
ror
xchg
cmc
sbb
fmul
leave
enter
mov
xchg
xchg
xchg
call
push
idiv
pusha
push
mov
sbb
sahf
ror
sbb
inc
and
xor
int3
jne
push
or
adc
xchg
jle
push
or
call
in
jne
pop
(bad)
div
outs
gs
pop
sbb
mov
sahf
iret
retf
inc
cmp
fwait
lea
shl
(bad)
stos
and
fidivr
js
cmp
js
cli
adc
mov
mov
adc
inc
push
mov
in
add
pop
lods
mov
sbb
in
imul
cmp
or
pop
aad
mov
daa
jge
icebp
out
clc
or
lods
or
cwde
xchg
rcr
lock
(bad)
icebp
xchg
or
sar
aaa
push
cmp
mov
cdq
dec
out
dec
call
xor
dec
(bad)
dec
inc
cmp
hlt
mov
sub
repnz
jne
cmp
sbb
inc
pop
add
ret
cdq
sub
retf
push
mov
fadd
int
sub
jge
mov
pop
sahf
pop
jmp
mov
mov
mov
inc
push
fcmovnbe
adc
shl
lds
out
jbe
ds
scas
cmc
retf
test
or
adc
pop
ins
aam
out
mov
cwde
call
or
xchg
je
jnp
test
jp
xchg
mov
push
lock
es
pop
pop
pusha
das
adc
cmp
sbb
aad
loopne
popf
xor
dec
aas
inc
cmps
aad
dec
jp
mov
mov
shr
in
rcr
out
push
jno
std
mov
dec
mov
mov
loope
test
mov
xchg
mov
xor
xlat
and
adc
mov
mov
ffree
push
adc
mov
ja
popf
jae
(bad)
fisttp
mov
lahf
sti
or
dec
sub
jge
jae
inc
out
and
pop
mov
mov
add
cmp
mov
inc
xchg
xor
and
xchg
mov
mov
mov
ret
cmp
in
xchg
fucom
mov
cmc
dec
nop
sub
clc
es
xchg
sbb
je
arpl
retf
out
or
inc
mov
loope
push
or
outs
mov
dec
xor
cmp
sub
fisttp
xchg
sub
mov
imul
stos
ss
cld
js
(bad)
popf
pop
ins
fmul
ss
mov
lock
dec
int3
push
imul
ja
retf
mov
stc
mov
mov
fucomi
sbb
or
shl
js
adc
cld
imul
arpl
push
and
jge
sahf
movs
arpl
push
repnz
mov
inc
inc
adc
push
stc
cli
mov
adc
outs
shl
aad
aad
jmp
std
sub
shr
mov
push
and
rol
sbb
xchg
mov
add
or
addr16
sahf
inc
cmp
or
jne
lahf
xchg
in
jne
cdq
add
sahf
lahf
jmp
cmp
sub
in
dec
adc
sub
and
loope
mov
mov
stos
mov
xchg
push
sub
xor
dec
pop
jb
fidivr
pop
test
pop
pop
mov
add
mov
or
fsub
out
les
adc
leave
popf
lock
add
cli
mov
and
and
popa
xor
sub
clc
dec
cmps
and
test
inc
sar
lods
loope
loope
shr
(bad)
cmp
(bad)
adc
mov
jbe
rcl
mov
addr16
mov
mov
push
jns
cmp
sub
and
xlat
mov
or
call
inc
ror
mov
enter
test
adc
ficomp
mov
mov
outs
cmps
and
popf
(bad)
out
xor
ins
(bad)
in
xchg
xchg
xchg
bound
xchg
mov
loopne
xchg
pushf
cmc
sub
sahf
enter
push
mov
xor
ins
jp
popf
cmp
cwde
fmul
add
div
cmp
push
sbb
or
push
bound
popf
out
xchg
rcl
shl
hlt
aas
fdiv
pop
call
inc
pop
in
ins
retf
dec
loop
gs
mov
xor
scas
cmp
jmp
jp
fs
dec
dec
mov
aad
out
cmp
ret
mov
xchg
movs
test
cmps
imul
dec
push
(bad)
sbb
jmp
cs
movs
(bad)
and
cli
sub
ins
test
mov
ret
clc
xor
mov
rcr
jle
loopne
cmp
inc
or
ins
(bad)
pop
inc
sub
jle
ss
hlt
imul
es
sub
inc
int3
inc
mov
das
xchg
cmps
(bad)
fnstcw
jle
js
gs
loopne
dec
dec
mov
popa
jge
adc
mov
leave
and
aad
sar
add
daa
sub
xchg
sbb
add
add
fwait
pusha
retf
mov
(bad)
or
sub
pop
cmc
sbb
sbb
das
out
mov
inc
cwde
sub
pusha
push
mov
hlt
pop
xor
sbb
cli
pop
ss
cmp
dec
add
sbb
mov
int
fs
xchg
mov
adc
mov
xchg
test
stc
repz
hlt
cli
push
(bad)
rol
mov
stos
mov
lds
stc
xchg
mov
cmp
and
xlat
sub
adc
retf
and
call
cmps
add
in
cwde
or
mov
dec
(bad)
mov
bound
cdq
popa
(bad)
push
add
jmp
out
jmp
mov
sub
ins
lea
inc
xchg
mov
dec
dec
retf
xchg
xor
adc
xor
ins
test
jl
jne
mov
cmp
jae
test
mov
mov
scas
mov
jae
pop
adc
dec
xchg
xor
mov
xor
xchg
cmps
xchg
add
pop
and
popa
xchg
ins
stos
dec
push
cmp
scas
cmp
jns
sub
out
mov
ja
and
jo
sub
adc
cmps
pop
rcr
(bad)
jp
push
inc
xchg
rcr
jp
push
pop
repnz
stos
rol
mov
cmp
loope
data16
fadd
into
into
arpl
cli
push
out
inc
(bad)
lahf
and
cmp
aad
sar
adc
add
pop
mov
pop
dec
pushf
clc
cmp
xchg
xor
arpl
mov
sbb
leave
or
add
into
loope
test
xlat
stc
pop
sub
push
cmp
add
inc
inc
pop
xchg
sti
pop
loop
jecxz
(bad)
cmp
inc
lds
addr16
mov
fwait
sbb
pop
cmp
and
inc
movs
dec
jecxz
gs
or
cmp
rcr
jnp
mov
clc
gs
hlt
pop
cmovne
fs
jg
mov
shl
je
aas
retf
retf
or
pop
lds
push
test
xchg
dec
or
pushf
dec
sub
mov
dec
cmc
push
mov
aam
sbb
add
sti
div
dec
pop
(bad)
mov
aaa
sahf
loop
and
imul
loopne
aas
pop
std
scas
mov
repnz
jge
test
addr16
fdivp
into
inc
fwait
or
(bad)
cmps
xor
retf
call
adc
inc
jne
daa
jmp
mov
and
sub
outs
jecxz
adc
inc
mov
mov
mov
mov
arpl
scas
cmp
aad
sub
je
mov
daa
mov
xor
bnd
jae
cmc
jp
xchg
jae
jl
in
dec
stos
cs
jmp
pxor
pop
jno
mov
popa
jl
ss
adc
push
(bad)
sar
push
sub
dec
xchg
xor
adc
push
pop
bound
movs
fsub
outs
cmp
test
in
cdq
(bad)
fnsave
fs
lods
xchg
and
loopne
or
fmul
mov
les
adc
adc
repz
jbe
in
add
fwait
aam
aad
bound
sbb
rcr
mov
loope
lea
mov
mov
sub
imul
sbb
push
fadd
inc
mov
and
call
call
mov
xor
into
jmp
mov
or
enter
pop
int3
stc
popf
bound
js
enter
shl
das
sahf
push
inc
cmp
in
jp
and
ror
mov
sub
dec
sbb
and
sbb
mov
cmp
ins
pop
addr16
cmp
and
movs
arpl
arpl
movs
sub
push
jg
push
mov
push
sub
jge
xor
lods
inc
fs
fidiv
outs
repnz
mov
std
push
sbb
outs
nop
sbb
(bad)
mov
sub
sub
(bad)
xor
mov
fcmovbe
and
scas
lock
lods
mov
and
inc
mov
dec
jo
addr16
test
inc
mov
xor
arpl
mov
cmp
into
fucomip
aad
test
pushf
push
bound
fistp
pop
int3
cli
pop
test
mov
inc
adc
adc
mov
(bad)
pushf
enter
outs
movs
movs
xchg
push
ins
mov
mov
adc
cmc
pop
sub
je
std
jmp
and
jp
push
mov
jmp
imul
stc
je
adc
mov
pop
and
into
stos
mov
add
cwde
fdiv
add
sbb
cmp
xor
into
rcl
fidiv
lock
jo
sbb
out
(bad)
sub
ret
sti
(bad)
adc
add
sub
and
sahf
inc
fmul
imul
mov
pop
(bad)
sub
jmp
push
push
cmc
lods
push
dec
xor
rcl
jl
add
push
mov
sub
sahf
mov
movs
imul
push
repnz
sbb
inc
pop
in
jp
not
pop
mov
mov
das
pop
dec
mov
aas
imul
add
jnp
bound
sbb
push
add
ret
aas
add
jo
sub
sub
jmp
mov
aad
cmp
or
sub
add
rol
fiadd
aas
mov
test
jg
push
push
lea
mov
aam
mov
enter
inc
sbb
into
lock
(bad)
rol
xchg
add
pop
or
pop
(bad)
imul
repz
jne
outs
outs
add
xchg
dec
pop
aaa
and
sbb
mov
cdq
xor
les
inc
cmps
aam
bound
mov
mov
ja
popf
cmp
jp
jle
add
lods
je
movs
hlt
(bad)
cmc
mov
fist
in
in
aam
gs
sub
stos
mov
sub
test
mov
sub
pop
addr16
repnz
dec
outs
or
mov
dec
sub
pop
fmul
pushf
xchg
aas
or
ja
(bad)
ins
and
xor
inc
inc
add
mov
or
or
inc
sbb
in
pusha
xchg
dec
aas
pop
mov
les
mov
jbe
or
cli
fild
xor
pop
test
ss
ret
mov
and
add
or
scas
push
mov
jmp
jns
jmp
call
push
test
xchg
das
xchg
les
xor
push
push
push
add
jp
jbe
xchg
pop
lahf
jl
ja
jecxz
and
into
sub
je
adc
and
fwait
jle
imul
ins
mov
and
xchg
pop
lock
push
lds
in
out
rcr
add
jmp
aad
retf
pusha
mov
sub
xchg
cld
(bad)
hlt
and
pusha
ret
mov
in
or
or
pop
pop
push
daa
dec
(bad)
sbb
retf
push
popf
xor
sub
in
jo
and
jp
dec
xlat
mov
jb
add
daa
adc
sbb
jbe
mov
jg
sub
sub
push
jbe
jnp
pop
xchg
scas
sbb
jb
jb
xchg
mov
jmp
aam
call
xchg
imul
rcl
int3
js
dec
jns
stos
jmp
push
sbb
mov
shl
cdq
scas
call
imul
pusha
sub
ins
aad
fidiv
mov
pop
cmp
cmp
push
adc
mov
xchg
jne
sub
loope
sub
adc
xchg
sbb
mov
icebp
mov
movs
jp
mov
mov
mov
adc
repnz
aaa
pop
movs
xor
xor
(bad)
cmp
sub
jl
cmp
imul
pop
jnp
pop
movs
iret
sbb
stos
mov
rol
xchg
lahf
sbb
adc
adc
xor
push
ficom
sub
mov
pop
hlt
inc
adc
(bad)
add
not
fstp
push
dec
jl
pop
push
lock
inc
stos
out
or
movs
mov
sahf
ret
int3
adc
sbb
mov
inc
out
cmc
(bad)
xor
cmp
sbb
dec
(bad)
scas
pusha
jb
mov
rcl
mov
imul
fdivr
push
outs
clc
jmp
mov
push
pop
mov
icebp
ret
adc
gs
(bad)
mov
xor
popa
les
and
xchg
and
out
loopne
bound
sbb
xchg
aad
aas
mov
push
mov
or
out
out
ins
xor
repnz
fisubr
fdivr
pop
movs
pop
sbb
xchg
sub
cmp
pop
cmp
jnp
dec
push
out
cli
jno
cmp
add
push
repnz
(bad)
and
cmp
retf
mov
sub
mov
mov
ret
daa
mov
in
data16
stc
ret
mov
out
(bad)
hlt
sbb
das
daa
push
cmps
pop
pop
push
pop
add
repz
cmp
dec
add
sbb
aad
scas
mov
icebp
cmp
and
dec
aam
fldcw
xchg
dec
mov
push
cmp
stos
test
sub
inc
add
and
pop
pop
loope
dec
js
adc
push
ror
aad
es
jb
stc
rdpmc
adc
add
(bad)
jns
push
inc
cli
pop
enter
pop
or
ins
and
js
and
hlt
enter
in
icebp
lock
gs
jae
mov
(bad)
stos
outs
push
stos
mov
push
aas
mov
mov
inc
xchg
mov
rcr
adc
retf
mov
and
dec
adc
inc
mov
pushf
mul
jp
retf
push
cmp
sbb
loop
(bad)
sub
leave
mov
pop
xchg
stos
sub
retf
or
(bad)
loope
cld
int
pmulhuw
ret
push
jmp
leave
loope
ds
sub
add
outs
sub
or
rol
jae
inc
adc
xor
test
pop
dec
and
jne
pop
push
xchg
mov
mov
lods
jae
jne
inc
add
sbb
pop
shr
scas
mov
fbld
inc
fcmovnb
movs
(bad)
outs
push
push
adc
in
add
jae
stc
sti
stc
jge
stc
test
push
not
cmps
xor
jo
fisubr
push
mov
adc
jl
fst
jne
inc
je
mov
adc
div
xor
neg
mov
adc
sub
push
fimul
or
inc
mov
jne
hlt
dec
mov
std
shl
xor
inc
sti
fs
jb
mov
xchg
push
lds
icebp
aam
fadd
mov
and
ret
fistp
add
retf
cmp
mov
ja
xor
cli
inc
nop
daa
aas
movs
gs
loopne
test
iret
sahf
loopne
xor
arpl
sti
sbb
pop
and
mov
or
pop
sahf
imul
(bad)
jl
add
in
rcr
fs
(bad)
pusha
in
and
mov
daa
inc
push
mov
fcmovne
pop
aaa
mov
lahf
pop
js
jns
imul
bound
adc
or
outs
dec
inc
ret
mov
mov
repz
jo
mov
push
xor
mov
iret
sub
lods
mov
mov
sbb
pop
movs
faddp
add
xor
jmp
(bad)
das
mov
lods
fidiv
mov
daa
loope
fsubrp
mov
cmp
cld
repz
add
call
adc
test
xchg
movs
mov
popf
jne
(bad)
add
xchg
adc
arpl
cmp
test
aaa
sbb
inc
push
(bad)
cwde
mov
punpcklbw
je
scas
push
in
dec
retf
xor
inc
lds
push
mov
xchg
les
rcl
jbe
jmp
ror
mov
push
ret
jbe
stc
cmp
aaa
out
int
pop
pop
jo
inc
push
(bad)
lods
adc
jne
jne
push
jp
stc
pop
jle
sub
pop
sub
add
stos
addr16
xchg
call
sub
xchg
leave
xchg
or
fisttp
fcomp
sbb
sbb
pop
gs
xor
pop
rol
mov
scas
mov
int
js
mov
pusha
sub
out
xchg
loope
mov
sbb
inc
push
push
jmp
mov
or
enter
jno
mov
dec
push
ret
lods
nop
sbb
rcr
lods
mov
inc
jg
push
pushf
lock
xchg
inc
inc
jmp
test
mov
out
out
adc
cmps
sbb
push
and
add
pop
movs
sbb
(bad)
dec
xchg
loop
push
mov
mov
into
and
int3
xchg
adc
out
xor
xchg
cdq
clc
lods
fwait
cmp
lods
aas
test
inc
sub
in
cmp
mov
bound
xor
jae
test
adc
icebp
js
arpl
into
jp
sub
xchg
shl
les
in
jns
xchg
es
inc
xor
(bad)
movs
pop
(bad)
jo
xchg
jb
int
pop
fiadd
or
loop
sbb
imul
adc
sbb
mov
(bad)
jmp
adc
sbb
fcom
ins
neg
cld
pusha
cmps
jns
xor
mov
add
xchg
mov
repz
ret
hlt
add
push
retf
jmp
mov
ins
jo
cmp
das
and
jmp
pushf
sbb
jmp
dec
lods
movs
xchg
aaa
adc
in
jb
xchg
jb
or
xchg
pavgb
xchg
jecxz
inc
mov
rcl
inc
fidiv
dec
std
xor
cwde
and
and
rdpmc
sub
add
hlt
hlt
mov
(bad)
adc
fwait
or
shr
cmc
clc
mov
inc
sbb
cmp
fwait
(bad)
fcomip
xor
mov
adc
ja
mov
pushf
pushf
xchg
dec
fst
(bad)
rol
cmp
ret
enter
sub
shl
lahf
ret
mov
out
ss
test
dec
sub
cli
into
add
push
or
sub
sub
ret
jae
and
out
rcl
movs
push
xor
cmp
adc
test
das
push
xor
in
xchg
psrlw
dec
mov
sbb
cmp
mov
lods
sbb
inc
fwait
ds
jle
push
inc
sbb
push
xchg
ret
cwde
js
shl
popa
sub
in
mov
aam
test
push
stos
mov
nop
arpl
push
push
ret
mov
cmp
dec
popf
sub
and
ins
stos
xchg
sahf
xlat
jmp
test
xchg
cmp
fild
push
leave
jl
fstp
jnp
adc
jb
mov
xchg
inc
add
cwde
(bad)
enter
xchg
in
(bad)
cmp
mov
and
dec
aad
(bad)
dec
pop
sub
ins
aaa
(bad)
sub
and
xchg
pusha
in
mov
es
fisub
lds
inc
mov
mov
lock
push
inc
xchg
sub
mov
pop
test
imul
or
xchg
mov
pop
mov
mov
scas
fwait
sub
pop
push
cs
jge
pop
jecxz
ds
retf
call
fucom
aam
push
ss
xor
invd
test
mov
movaps
ficomp
xor
pop
ss
inc
xor
adc
xor
loop
lea
mov
mov
cmp
and
inc
sbb
pushf
scas
cmp
js
jp
mov
and
imul
xor
mov
xchg
xlat
mov
mov
ror
sbb
mov
jno
shl
add
lahf
xor
aad
repz
add
jge
mov
jae
test
push
mov
pop
mov
scas
mov
ins
add
ficom
mov
fst
vpcomb
ins
repnz
imul
add
stos
das
mov
xor
dec
sub
sti
jge
test
dec
into
call
jb
dec
pop
shr
jno
jae
jo
xchg
xor
push
mov
push
pop
xor
pause
push
addr16
mov
jno
ja
lea
nop
push
push
jbe
popf
dec
jg
cmp
leave
jo
push
adc
arpl
cmp
cmps
xchg
loopne
(bad)
lea
dec
test
test
daa
scas
icebp
cmp
cs
es
or
xor
sbb
test
push
pop
hlt
movs
ret
push
jns
arpl
mov
xchg
loopne
cmp
arpl
mov
jb
xor
mov
imul
dec
clc
sbb
cwde
sbb
popf
inc
jmp
out
popa
retf
sbb
or
ret
cmp
mov
xchg
call
inc
leave
rol
sbb
popa
cs
add
xor
mov
and
daa
sub
retf
inc
cld
(bad)
das
repnz
aas
std
jmp
lea
aam
and
fild
adc
xchg
inc
jmp
dec
push
sbb
fucom
lahf
mov
sbb
cwde
mov
shr
xlat
fcomip
adc
add
frstor
repz
ffreep
int3
mov
sbb
adc
inc
xor
(bad)
fisubr
mov
or
mov
repz
pop
stos
sbb
popa
aaa
inc
repz
stc
sbb
pop
(bad)
mov
add
fild
push
(bad)
push
push
or
mov
(bad)
push
and
ins
dec
js
cmps
cmp
xor
shl
es
clc
(bad)
shl
sub
loop
dec
push
test
sti
std
xchg
adc
inc
ret
icebp
ret
je
sbb
lods
outs
addr16
jmp
or
inc
xor
out
pop
mov
pop
sub
xchg
fmul
mov
jb
sub
les
sub
mov
mov
inc
adc
xor
cmp
das
jno
xchg
out
push
into
int
xor
pop
mov
jo
test
popf
(bad)
je
xor
pop
jmp
cmps
je
(bad)
clc
mov
sub
cld
retf
mov
(bad)
sbb
mov
jp
xchg
mov
dec
mov
stos
or
int
imul
push
das
test
mov
xchg
xor
ss
mov
sub
mov
inc
rcr
xchg
jb
add
mov
xchg
adc
and
mov
fstp
dec
call
cmps
add
or
adc
sbb
push
addr16
test
hlt
xchg
sbb
xchg
xchg
jnp
push
fistp
paddb
push
inc
addr16
imul
adc
ret
jecxz
cmp
adc
cmc
xchg
adc
cmps
jmp
movs
frstor
mov
fwait
push
xchg
dec
add
xchg
outs
icebp
push
xchg
out
out
ins
jo
inc
cli
mov
sahf
cmp
idiv
scas
call
int
mov
imul
mov
dec
dec
cmp
or
xor
fdiv
fdivr
mov
inc
mov
mov
adc
dec
dec
ins
fsub
fnstcw
jo
sti
sbb
xchg
nop
movs
outs
daa
add
pop
cmc
push
mov
movs
repz
leave
or
xor
out
adc
push
sbb
jo
jmp
mov
push
xchg
loop
es
test
test
stos
nop
pushf
or
addr16
pop
popf
ds
data16
cdq
aam
xchg
sub
call
cmp
out
dec
popa
jl
mov
aad
dec
enter
div
daa
add
mov
sar
push
aaa
enter
dec
cld
mov
pop
xchg
mov
mov
adc
push
repz
xchg
or
push
push
add
cmp
push
in
daa
inc
cs
mov
ds
push
call
int3
jne
xchg
mov
xor
es
fs
sbb
xor
movs
jg
mov
ins
sti
clc
outs
hlt
jmp
mov
outs
inc
js
pushf
mov
inc
imul
std
(bad)
mov
retf
movs
(bad)
mov
pop
push
ficomp
dec
stc
aas
mov
sti
add
lods
dec
fistp
add
ds
jne
pop
xor
jge
xor
scas
mov
mul
jmp
sahf
pop
jmp
leave
ror
jecxz
mov
test
dec
xor
push
rcl
inc
xchg
cmp
movs
int3
int
lahf
mov
lods
jmp
or
pop
(bad)
fld
pop
lods
xchg
(bad)
cs
jns
das
pushf
sub
sbb
cld
stos
jle
cli
push
fdivp
arpl
sub
sbb
aas
push
pop
mov
mov
stos
cmps
dec
xchg
jle
(bad)
xchg
push
push
push
cmp
mov
call
or
pop
sti
dec
arpl
xor
addr16
imul
frstor
jle
and
mov
ficomp
push
call
jle
mov
inc
leave
xchg
and
(bad)
call
fsub
mov
icebp
enter
dec
sti
or
mov
xchg
(bad)
mov
outs
xchg
fmulp
aam
jecxz
mov
icebp
imul
dec
pop
(bad)
pop
add
and
jnp
add
and
cmp
(bad)
adc
call
cli
test
dec
ret
lea
(bad)
sub
or
xchg
inc
and
repz
xor
xchg
lock
in
les
or
xor
out
mov
mov
mov
stos
lds
ins
cmp
xor
push
mov
pop
clc
push
movs
pop
fsubr
cdq
jnp
outs
inc
repnz
in
xor
fsub
leave
stc
xchg
mov
push
xchg
das
arpl
cmc
push
std
and
pop
mov
mov
jp
jnp
push
push
pop
shl
cmp
js
cmp
cmps
mov
jno
xor
or
dec
add
xor
sahf
(bad)
jne
cld
jbe
out
mov
dec
xchg
(bad)
cmp
dec
call
test
mov
or
xchg
leave
mov
sub
test
mov
int3
mov
fadd
mov
aad
jo
stos
sbb
imul
pusha
retf
call
push
ss
rcl
sbb
test
gs
add
shl
out
cmp
inc
sub
movs
pop
pop
add
pop
xlat
daa
xchg
jae
cs
out
and
jecxz
test
dec
fisubr
sbb
out
xor
jae
test
mov
retf
xchg
push
cmps
addr16
into
sub
cmps
or
ror
ret
dec
bnd
ja
adc
mov
sub
adc
mov
cs
icebp
pop
ret
or
nop
dec
add
jmp
cmc
mov
(bad)
jno
(bad)
bound
inc
xchg
retf
dec
sbb
mov
inc
dec
xor
pop
inc
xor
adc
(bad)
push
mov
das
dec
inc
in
sbb
stc
popa
pusha
add
out
call
cmps
nop
dec
xchg
or
jae
mov
stc
push
aad
gs
mov
jmp
ja
lds
ins
xor
and
cwde
aad
ins
je
push
out
sbb
inc
mov
xchg
inc
shl
adc
xchg
clc
lods
mov
jmp
xchg
or
shr
pop
fdiv
jp
mov
pusha
(bad)
push
sbb
lds
in
out
and
push
mov
imul
sub
loopne
mov
test
adc
add
test
fcom
stc
imul
shr
push
dec
xor
inc
pop
in
xchg
adc
sar
sti
jnp
and
lahf
xor
in
inc
nop
call
mov
dec
js
es
shr
jecxz
mov
jo
hlt
pop
and
mov
lea
cs
les
and
sahf
pop
imul
cmp
(bad)
repz
push
pop
enter
push
jnp
in
push
aam
dec
sbb
ins
xchg
jle
jg
push
dec
and
mov
add
lahf
cmp
mov
and
iret
pop
hlt
in
loop
or
data16
jns
jo
rcl
test
mov
imul
cmp
ja
retf
jnp
dec
jmp
stos
in
and
rcr
(bad)
cmp
pop
into
jl
ins
fcom
jl
jmp
jmp
out
adc
sbb
cmp
cmp
sub
pop
mov
sti
pop
sbb
inc
test
jno
nop
imul
je
cmp
jmp
cmp
(bad)
retf
xor
cdq
jns
push
jne
and
jns
mov
jne
cmps
sbb
pop
push
or
sbb
cld
or
or
push
push
mov
dec
sub
or
xlat
retf
leave
call
inc
and
add
movs
out
sub
nop
mov
into
jle
cmc
call
aaa
ret
or
pop
mov
sub
mov
or
outs
or
mov
dec
mov
loopne
ss
(bad)
shr
push
inc
fist
dec
fnstenv
pop
and
or
jbe
push
les
add
mov
mov
fiadd
out
fistp
jno
pop
test
mov
idiv
adc
mov
jg
cmps
add
mov
adc
push
repnz
or
es
lods
xchg
imul
inc
dec
jl
nop
retf
cmp
pusha
outs
inc
inc
and
push
stos
ins
xor
cdq
mov
inc
xor
cmp
cmp
jmp
or
lods
mov
mov
in
(bad)
test
sar
push
sub
out
(bad)
(bad)
and
jnp
mov
movs
mov
add
pop
mov
adc
pop
sti
mov
jg
test
jns
jecxz
sub
in
lea
mov
dec
xchg
popf
sbb
std
sub
or
jns
in
jmp
into
lahf
adc
sub
std
fistp
(bad)
mov
fiadd
xor
ja
push
(bad)
scas
push
ret
test
das
into
mov
fistp
sbb
inc
cmc
repnz
mov
cmp
lea
dec
mov
dec
addr16
daa
loop
enter
rcl
pop
inc
outs
jns
loopne
push
loop
push
js
xchg
jg
jnp
nop
ds
xchg
mov
pop
ror
sbb
push
adc
int3
xor
(bad)
jg
jmp
sbb
in
or
jmp
or
cli
retf
and
in
jmp
or
inc
xchg
and
popf
retf
xchg
adc
pop
repz
mov
mov
scas
or
fstp
sbb
sbb
aad
clc
and
icebp
sub
stos
jno
inc
icebp
daa
jg
pop
lods
push
cmp
mov
(bad)
mov
sub
(bad)
or
arpl
adc
sbb
push
das
cmp
es
icebp
ss
dec
mov
inc
rol
mov
enter
xchg
cmps
mov
cmc
and
inc
sbb
int
pushf
xchg
pop
push
pushf
mov
shr
cmp
hlt
shr
xor
push
mov
dec
adc
sub
in
idiv
in
mov
sub
pop
pop
adc
gs
push
jo
fdiv
ins
sar
cmps
jnp
adc
pusha
repnz
adc
shl
loope
hlt
bound
retf
in
xor
xchg
ret
fisttp
int
pop
movs
mov
mov
sbb
movs
mov
frstor
fs
mov
mov
ret
fisub
pop
lock
or
dec
imul
xor
or
pop
es
fdiv
stc
cmps
adc
ins
jg
mov
je
push
mov
nop
retf
test
ss
xor
xchg
outs
mov
ja
(bad)
lock
(bad)
sbb
test
xor
pop
adc
jae
push
xor
jge
adc
dec
xchg
fistp
sub
push
push
frstor
in
loop
pop
sub
mov
scas
(bad)
sbb
stos
aaa
pop
ins
pop
daa
test
xchg
imul
mov
fldenv
mov
mov
js
add
and
jae
iret
push
xchg
and
cmps
jbe
pop
dec
ret
popf
xor
or
loop
and
dec
dec
fcomip
jo
(bad)
adc
test
movs
and
push
xor
out
sbb
xchg
rol
retf
jmp
adc
mov
inc
push
loop
pop
mov
adc
xchg
cmp
pusha
mov
fistp
push
shl
jb
fs
or
push
fbld
xor
outs
neg
ins
(bad)
pop
push
aad
dec
(bad)
sti
dec
mov
push
mov
mov
inc
dec
repnz
(bad)
setae
fnstsw
rcl
mov
jb
and
out
dec
cld
mov
sub
fcmove
movs
fidiv
inc
cmp
sbb
je
(bad)
in
bound
add
in
xor
leave
cmp
nop
push
enter
in
test
jmp
dec
lods
pusha
sub
loope
jnp
dec
aas
mov
jmp
xchg
inc
jbe
imul
movs
pop
in
cmp
or
xor
lods
inc
lock
rcr
sub
iret
or
push
fldenv
das
aam
arpl
retf
adc
hlt
mov
sub
in
pop
les
adc
(bad)
popf
retf
jl
mov
xchg
mov
cmp
pop
mov
xchg
inc
lea
or
pop
lock
push
shl
adc
dec
dec
xchg
adc
inc
or
inc
in
out
mov
ror
mov
push
rol
fstp
xor
mov
sbb
outs
ins
popf
lods
movs
sub
inc
lea
mov
xchg
mov
jb
iret
(bad)
pop
sub
jmp
cdq
or
cli
inc
std
pop
and
daa
cmc
push
mov
pop
or
imul
jl
sbb
push
mov
xlat
sub
add
loop
fs
pop
repnz
loope
pop
sbb
das
xor
in
icebp
xor
lods
aad
test
mov
imul
js
dec
dec
push
xchg
mov
out
xchg
push
loop
fild
ret
cmp
cmp
popf
sub
dec
jmp
loope
cdq
cmps
sti
aad
stos
retf
repnz
xor
jle
int3
rcl
jno
stos
(bad)
lods
add
nop
xlat
add
xchg
cmp
mov
int
movs
inc
xchg
xchg
aas
repz
test
int
adc
jb
aas
retf
or
inc
lds
les
jo
mov
ret
add
fsubr
cdq
cli
push
ror
test
dec
push
test
cdq
movs
(bad)
rcl
mov
or
ret
inc
outs
inc
ja
leave
inc
dec
gs
sub
scas
and
and
loopne
sub
dec
and
mov
stos
mov
addr16
dec
movs
jecxz
aad
cs
push
or
out
sub
ds
hlt
out
test
movs
test
sbb
cmp
shl
(bad)
std
cdq
mov
das
pop
or
mov
inc
or
mov
in
xor
xor
popf
repz
mov
(bad)
movs
gs
lds
sti
arpl
lods
test
inc
sbb
dec
pop
jl
pop
cld
ret
add
enter
or
pushf
inc
mov
ja
jbe
iret
sbb
push
or
or
jp
call
out
pop
mov
jae
mov
and
xchg
add
mov
repz
mov
mov
adc
lods
add
cmp
mov
fcom
data16
push
iret
push
pop
cs
je
or
mov
sbb
adc
xchg
scas
and
jnp
pushf
mul
xchg
leave
and
add
repz
dec
jnp
push
icebp
adc
inc
ss
cmp
jl
and
jl
test
jmp
fcmovnb
xchg
mov
push
int3
stos
jg
ins
js
pushf
jg
cmp
into
loopne
pop
pop
pop
into
in
cs
pop
sahf
(bad)
pop
push
cmc
xor
in
leave
xor
loope
xor
loop
nop
jmp
cli
and
xchg
add
lahf
stos
lock
hlt
fwait
ins
xor
cmps
pop
cmp
test
mov
pusha
lods
and
push
cmc
test
ficom
(bad)
dec
sbb
movs
in
sahf
or
(bad)
ss
xchg
mov
and
xchg
(bad)
pop
pop
rol
xchg
in
ror
ret
dec
jp
sub
and
push
mov
push
pop
push
lock
ins
xor
jl
cwde
mov
inc
ins
(bad)
test
mov
xor
repnz
cwde
fnstcw
dec
adc
gs
call
mov
loope
xor
jns
jge
out
inc
andps
out
xor
add
jne
bound
ds
enter
pop
pop
and
or
in
mov
adc
xor
mov
imul
xor
int3
in
pop
add
and
imul
fs
cmc
shl
into
das
fs
(bad)
sbb
mov
jno
loop
es
jmp
jo
sbb
lock
add
mov
inc
in
adc
aad
fs
pop
retf
sub
ss
neg
dec
push
jge
das
sub
xchg
adc
(bad)
loop
stos
and
xor
loopne
inc
test
into
repnz
fisttp
mov
xor
inc
cmp
cmps
aas
and
test
jmp
dec
enter
jae
push
rol
push
mov
mov
fadd
aad
aaa
sbb
loop
stc
hlt
jecxz
lock
jbe
in
mov
cmp
retf
out
out
xchg
push
dec
idiv
fs
mov
jns
xchg
test
jnp
cmp
div
bound
cmp
adc
xchg
adc
dec
push
clc
or
test
sbb
rol
adc
mov
(bad)
sbb
cmps
sbb
jp
out
lods
xchg
sub
push
je
test
cli
mov
retf
or
clc
jns
mov
mov
push
cmp
adc
mov
dec
js
sbb
out
cs
dec
fild
movs
dec
sub
sub
cmp
sbb
xchg
xchg
mov
pusha
sqrtps
sar
add
sbb
mov
call
inc
add
int
sbb
das
xchg
push
sub
(bad)
sub
add
and
jl
in
cmps
mov
aam
(bad)
(bad)
mov
loopne
or
std
sbb
xlat
bound
adc
call
and
and
lods
mov
add
xor
(bad)
loopne
xchg
inc
fidivr
cld
and
mov
retf
lahf
aaa
nop
adc
inc
mov
add
fstp
or
imul
les
mov
jb
push
push
and
sub
cmps
in
inc
icebp
cmc
ja
xchg
cmps
xchg
shl
sti
and
psubb
fdivr
lock
cmp
jb
mov
cmp
cmp
test
shr
lods
add
inc
and
fdivr
jbe
pop
jbe
pop
stc
enter
loop
sub
sti
push
out
adc
jl
sbb
mov
das
push
movs
mov
sbb
shr
jae
xor
aam
mov
inc
push
mov
add
fldenv
xor
xlat
and
xchg
stos
ds
jae
retf
sub
ror
(bad)
jmp
pop
xbegin
inc
lods
out
and
pop
pop
icebp
out
xchg
ins
(bad)
adc
das
sti
js
jge
pop
adc
jp
test
sub
mov
mov
mov
push
inc
mov
movs
int
pop
int
jg
in
xchg
fbld
xchg
cdq
push
out
fmul
add
xor
mov
jge
pop
movs
in
sbb
jmp
pop
xchg
rcl
dec
dec
not
xchg
dec
inc
movs
aad
test
xor
adc
je
push
pop
in
in
outs
std
retf
inc
dec
lock
cmps
aaa
sbb
inc
mov
pop
das
mov
shl
adc
xchg
cmp
or
jmp
ret
pop
imul
popa
or
(bad)
std
cmp
sub
fist
xlat
inc
mov
xor
cld
push
mov
imul
dec
es
je
push
stos
jp
jg
adc
scas
les
retf
fisubr
sbb
out
mov
jo
fidiv
jl
cmp
sbb
int3
inc
cdq
aad
lea
stos
dec
inc
pop
lods
loop
mov
test
popa
cmp
push
push
lea
dec
int3
loop
push
push
push
dec
cmc
push
inc
mov
cmp
xor
mov
add
xchg
mov
xor
lods
fiadd
in
add
mov
test
dec
jmp
or
loope
lahf
popa
xlat
pop
pusha
fucom
data16
adc
jl
push
pushf
sub
dec
call
xchg
push
jge
call
cli
sbb
hlt
inc
pop
retf
loop
int
fmulp
pop
iret
loopne
sub
call
bound
push
sub
jge
or
out
dec
repz
jno
mov
jecxz
loopne
fwait
dec
inc
mov
rol
cdq
aaa
inc
cmp
xchg
sbb
call
cmp
gs
or
aad
ins
sbb
mov
dec
adc
lods
data16
in
xor
test
cmp
test
sbb
pop
push
mov
mov
fsubr
sbb
cmp
stc
xchg
aaa
iret
(bad)
fwait
(bad)
jae
ins
cmps
shl
popf
ret
push
ja
dec
sub
std
sbb
movs
xor
inc
dec
mov
rcl
xchg
xor
mul
cs
push
lock
cmp
or
repz
mov
and
aaa
jge
mov
test
push
add
jne
push
fcom
mov
daa
ficom
mov
dec
leave
(bad)
xor
(bad)
push
sub
xchg
add
add
imul
fmul
sar
adc
fmul
fldcw
out
lods
push
mov
in
iret
xor
adc
aas
out
mov
jge
cmp
jno
lods
enter
dec
aaa
sub
pushf
mov
call
or
sbb
xchg
loope
xlat
adc
fdivr
dec
int3
fild
jge
and
mov
(bad)
jbe
enter
jns
mov
xor
xor
dec
mov
jmp
sbb
in
push
jb
mov
pop
cli
out
xchg
cmp
jmp
std
(bad)
mov
sub
xchg
ja
mov
mov
xchg
xchg
push
jbe
dec
cmps
outs
xor
push
addr16
mov
fs
push
int
loopne
in
cdq
stos
call
jl
mov
adc
vmwrite
retf
mov
jb
mov
jmp
pop
or
retf
movs
inc
retf
movs
int3
mov
push
jmp
inc
mov
adc
jns
sub
int3
pop
popa
pusha
test
jle
xchg
xor
mov
test
fwait
xchg
outs
hlt
aaa
ret
sar
repnz
je
dec
sbb
stos
retf
jno
fldcw
push
xchg
inc
jmp
cmp
aad
mov
pop
cmc
or
jnp
in
call
loope
call
add
gs
fwait
mov
pusha
ffreep
nop
pop
loop
pop
mov
das
jmp
jle
cld
jno
pop
ss
pop
aam
imul
mov
jge
es
das
fcom
js
aaa
call
ficomp
hlt
xchg
lods
mov
jae
das
and
push
lea
xor
retf
lods
mov
sbb
cmc
cmp
and
push
sbb
push
ins
jae
dec
sub
sbb
into
sub
dec
pop
add
and
pop
dec
jnp
inc
aam
push
push
pushf
and
fsubp
ret
dec
mov
mov
pop
and
sahf
jecxz
mov
int3
mov
and
int3
fidivr
jb
xchg
aaa
push
xchg
mov
scas
(bad)
fxch
mov
mov
(bad)
rol
les
cmp
repz
cmp
in
pop
es
mov
scas
test
(bad)
in
inc
xchg
pop
push
es
adc
jo
mov
test
adc
pop
mov
fistp
ja
inc
enter
adc
cmp
and
in
retf
ficom
(bad)
call
push
mov
mov
jl
bound
and
mov
sub
dec
fwait
push
call
xchg
sub
loope
cmp
and
fisttp
movs
xchg
fild
jno
std
mov
rcl
fsub
pop
sti
lods
rcl
fdiv
std
and
dec
int3
mov
popf
mov
mov
push
sahf
add
pop
xchg
in
ret
shl
in
xchg
int3
pop
shl
repnz
sub
xchg
push
ror
sub
inc
test
and
inc
mov
jmp
pop
or
mov
out
js
or
ja
sar
pop
fwait
mov
ret
out
mov
add
dec
push
scas
xchg
adc
rcr
cwde
ja
popf
in
bswap
push
pop
loop
out
pushf
jp
je
cld
addr16
iret
ret
push
lahf
adc
inc
xchg
js
aas
loop
xlat
je
and
dec
jbe
mov
jmp
mov
aaa
add
inc
test
add
jo
ret
or
inc
sub
outs
cwde
xor
(bad)
xor
jmp
add
mov
xchg
dec
and
and
or
adc
adc
(bad)
lea
push
in
xchg
ds
mov
and
xchg
add
cld
repnz
iret
ret
outs
adc
(bad)
jl
addr16
push
in
das
cmp
push
inc
sti
repnz
gs
dec
and
ja
jb
xchg
sbb
jmp
inc
ins
pusha
in
push
add
retf
jne
push
inc
xor
pop
cmc
cmp
aaa
sbb
add
xchg
sub
xchg
push
fdivr
je
sbb
out
imul
loope
sbb
repnz
xor
mov
outs
push
shr
dec
ins
scas
call
push
arpl
stc
fwait
std
xor
jb
jge
and
sub
xor
test
xchg
jne
jl
pop
xor
test
lock
mov
or
(bad)
out
or
inc
mov
push
(bad)
push
das
pop
call
jbe
jbe
xor
xor
dec
call
jp
pusha
(bad)
in
loop
test
aam
into
push
outs
sahf
mov
jp
retf
loopne
mov
jo
repz
dec
mov
lahf
mov
sub
pop
mov
sub
lods
out
ja
cmps
xchg
pop
imul
sbb
jl
mov
cld
es
or
push
xor
push
mov
ins
scas
call
push
mov
jecxz
jp
mov
add
sbb
aaa
fstp
movs
pop
push
push
das
jmp
or
je
fs
cmp
or
mov
psrad
inc
pop
cwde
outs
adc
mov
dec
push
repz
mov
mov
into
xor
daa
ret
sbb
int3
and
xchg
xor
outs
mov
cwde
and
pusha
mov
test
(bad)
imul
push
jno
sar
sbb
sub
sbb
imul
cmp
xchg
inc
jge
cmp
or
xor
jo
pusha
adc
sbb
test
stc
inc
pop
xchg
in
sbb
sbb
push
in
clc
sbb
fdivr
fmul
adc
std
pop
(bad)
gs
stos
cmp
pushf
gs
ret
cmp
ds
mov
mov
in
in
test
adc
rol
das
mov
psubb
inc
xor
adc
sahf
mov
ss
out
stc
aad
sub
call
jbe
cld
movs
add
xor
fsub
aad
xor
add
daa
mov
lds
pop
sub
pop
test
outs
adc
out
jno
adc
rcr
or
popa
cmp
shl
shl
cmp
adc
jp
sbb
adc
ins
mov
cwde
jne
mov
mov
mov
(bad)
call
mov
cmps
jecxz
mov
sbb
sbb
cmp
jbe
or
sbb
mov
stos
call
pusha
mov
icebp
cmp
mov
sahf
adc
cmps
rcr
inc
movs
mov
mov
or
jno
mov
iret
es
sbb
shl
mov
(bad)
jno
push
punpckhdq
pextrw
mov
loope
pop
stc
xor
jns
sub
pop
xchg
pop
pusha
arpl
push
jecxz
stos
ret
sub
lds
mov
adc
mov
mov
xchg
mov
dec
xor
in
adc
pop
ret
retf
mov
pop
mov
xor
fsub
out
add
(bad)
outs
cmp
test
out
cmp
push
ja
cmp
ss
and
sbb
out
loop
push
stc
mov
inc
dec
test
mov
xchg
adc
lea
sub
inc
add
adc
jnp
nop
maskmovq
not
push
fdiv
mov
xchg
test
iret
adc
and
out
mov
and
arpl
popf
adc
jecxz
fstp
scas
adc
mov
jg
cmc
test
jle
mov
xor
repz
sbb
aaa
rcl
shl
(bad)
push
sbb
push
sbb
jl
div
test
rol
gs
mov
sub
cmp
fld
dec
push
aam
int
aas
and
adc
cdq
clc
shr
std
push
or
jne
cmps
lea
sbb
sub
fnstenv
pop
ja
adc
jne
add
jbe
icebp
sahf
push
xlat
add
jns
mov
fistp
adc
jg
cmp
mov
and
or
xlat
addr16
les
(bad)
mov
div
and
addr16
jmp
or
or
push
mov
pop
mov
das
sub
lods
imul
imul
jl
jno
pop
push
fisubr
xor
pop
ror
aaa
std
call
cwde
inc
and
pop
and
mul
mov
stos
add
add
xchg
push
cmps
push
sub
sub
clc
push
inc
out
mov
or
jle
adc
imul
call
adc
sub
dec
cmp
movs
cmp
mov
pop
xor
push
data16
rol
imul
inc
loope
out
or
fdivr
xchg
xchg
or
push
mov
or
pop
int3
pop
outs
sbb
aam
not
pop
mov
sbb
rol
ret
ret
mov
test
sbb
scas
or
movs
in
jg
enter
sub
repnz
push
in
jp
data16
sub
sahf
add
or
mov
dec
lea
lds
push
retf
pop
sub
sbb
pop
pop
push
addr16
icebp
jno
hlt
jno
dec
xchg
cdq
xchg
outs
retf
push
into
jb
push
in
mov
mov
test
ss
mov
dec
clc
popf
mov
dec
ins
jbe
scas
or
ds
and
stc
stos
jg
adc
(bad)
or
adc
and
push
(bad)
adc
retf
pop
rcr
das
mov
mov
xor
mov
aas
aam
xchg
or
imul
push
mov
icebp
sar
sub
and
add
sahf
push
sub
jle
stos
call
mov
shr
lock
pushf
int
popa
test
pop
int
fucom
push
shl
fs
outs
and
push
rcr
mov
data16
xor
dec
cmp
mov
inc
inc
dec
lock
sub
sti
push
aad
xor
pop
enter
call
das
out
outs
ins
jg
arpl
ds
mov
imul
jae
sub
sbb
scas
int3
and
sar
sbb
xor
enter
mov
enter
arpl
ja
test
iret
inc
dec
and
mov
and
or
lods
test
mov
aad
and
or
aad
dec
imul
add
out
cwde
test
les
shl
cmp
mov
pushf
xlat
or
imul
out
imul
mov
rcl
loopne
push
mov
mov
and
cdq
daa
push
es
enter
cmp
lea
leave
cmp
leave
fiadd
ins
push
cmps
and
xor
into
or
retf
hlt
push
sti
cli
rcr
pop
xor
pop
inc
icebp
mov
mov
sbb
inc
push
jb
shr
sbb
cdq
push
push
test
scas
(bad)
xchg
test
jge
out
jp
retf
cwde
lock
ss
adc
sbb
lea
pop
imul
fmul
or
jb
fwait
icebp
adc
mov
mov
dec
jnp
sbb
jle
arpl
addr16
in
jle
popf
pop
xchg
inc
retf
push
sti
adc
shl
into
fs
add
mov
sbb
cmp
fcmovbe
xchg
adc
dec
push
dec
mov
jne
aam
pop
cmp
pop
sti
ins
cli
mov
les
and
cmp
and
in
(bad)
nop
sub
adc
xchg
inc
lds
fisttp
jne
mov
adc
je
push
sub
ret
outs
push
outs
jmp
mov
lea
pop
cmp
daa
(bad)
xor
add
scas
adc
test
in
xchg
and
cmp
adc
(bad)
xlat
sub
sti
cwde
sbb
loop
xchg
push
out
inc
cwde
jecxz
or
in
xlat
ss
ss
repz
mov
in
dec
adc
cmp
xchg
dec
jne
adc
mov
add
sub
push
call
add
xor
cmps
into
mov
inc
dec
cs
repnz
(bad)
das
push
sub
and
jl
adc
fwait
sbb
popa
and
adc
mov
je
imul
jmp
or
jnp
adc
jmp
sub
jne
mov
sub
aas
cld
loope
js
xchg
stos
push
mov
popf
imul
adc
inc
mov
xor
out
leave
les
pop
cmp
test
stos
ror
in
ja
int
or
lods
inc
bswap
out
aam
and
mov
retf
inc
ds
inc
mov
xor
mov
inc
je
or
xor
dec
xor
pop
jle
add
xchg
inc
imul
jbe
cmp
addr16
xor
mov
push
repz
bound
adc
out
in
mov
sbb
pop
dec
jle
(bad)
pop
in
shl
or
jg
aad
mov
popf
and
xchg
mov
mov
jp
dec
xor
jecxz
push
je
push
movs
in
arpl
cdq
les
(bad)
hlt
mov
call
fidivr
adc
jno
in
outs
outs
pop
mov
mov
mov
inc
mov
ja
pop
in
sub
cwde
ret
rcr
lahf
hlt
test
in
xchg
sbb
test
pop
inc
vmovapd
out
outs
mov
call
test
push
mov
enter
inc
sbb
cmp
mov
sub
xchg
pop
mov
scas
cmp
mov
ds
gs
stc
pop
sar
xchg
and
and
fsubr
daa
pop
fs
cwde
rcl
cmp
cmps
ins
shl
mov
in
dec
ja
ret
xchg
xchg
leave
sub
(bad)
xchg
sbb
fwait
add
inc
loope
aam
(bad)
xor
mov
cmp
fwait
and
test
out
push
leave
jns
push
fild
dec
mov
imul
adc
xchg
add
sub
mov
mov
rol
add
dec
adc
dec
push
ret
clc
jo
and
rcr
inc
mov
add
pop
dec
out
test
inc
(bad)
(bad)
fsub
pop
sbb
inc
add
jnp
rcl
mov
or
adc
leave
adc
cmp
cwde
scas
nop
inc
rol
test
xor
pop
push
xor
ficom
sbb
sbb
push
addr16
xchg
stc
xlat
xor
and
(bad)
fistp
dec
stos
xor
dec
mov
sti
mov
int3
jp
and
inc
dec
mov
out
pop
jo
popf
fisubr
adc
xchg
lock
shr
(bad)
or
sbb
cmc
cdq
inc
icebp
sbb
mov
das
fist
push
test
add
cld
(bad)
int
dec
(bad)
test
cld
mov
jmp
dec
ins
aam
mov
icebp
imul
adc
sbb
rcl
jmp
or
mov
addps
movs
test
pop
xchg
int3
push
daa
sbb
sub
iret
ins
inc
cs
pushf
sub
xchg
mov
lock
popf
sub
mov
cli
bound
inc
dec
mov
mov
mov
test
mov
popa
lock
je
jmp
jne
iret
mov
or
sub
mov
add
add
jnp
lods
pop
dec
outs
dec
sbb
jmp
pusha
mov
mov
cmp
mov
cs
jmp
jl
lds
pop
sbb
lods
mov
pop
fiadd
adc
xor
addr16
or
mov
pop
add
inc
inc
and
int3
sar
mov
loope
sbb
add
fiadd
retf
inc
ret
lahf
outs
cmp
push
daa
or
sar
iret
xchg
xor
(bad)
out
ret
mov
loopne
outs
mov
cmp
push
or
test
or
jl
jg
out
xor
nop
jns
cld
inc
xlat
xchg
push
je
daa
ror
sti
mov
and
ins
xchg
sub
dec
rol
ins
mov
retf
fwait
mov
scas
mov
pushf
mov
jnp
(bad)
cld
sti
imul
ror
inc
xor
jbe
xlat
in
and
mov
xor
enter
mov
mov
(bad)
mov
ins
dec
dec
arpl
pop
test
outs
xchg
(bad)
fmul
pop
(bad)
stos
adc
fdivr
push
mov
inc
retf
and
mov
shl
mov
add
pop
rcr
iret
xor
inc
ror
and
fdiv
jae
sub
ficom
ret
inc
adc
mov
(bad)
jle
test
add
mov
sbb
jmp
es
mov
mov
adc
jp
xchg
inc
cmp
inc
xchg
retf
test
xchg
aaa
cmp
mov
stos
mov
jmp
hlt
mov
popa
call
leave
ins
mov
adc
imul
pop
jmp
jne
inc
sub
and
push
jb
arpl
call
fldenv
mov
push
pop
lahf
ret
xchg
dec
adc
(bad)
inc
daa
les
leave
call
ret
lock
xchg
jl
lahf
sub
(bad)
jbe
mov
xchg
jg
mov
fsubr
loope
das
std
cmc
xchg
sti
xchg
inc
add
add
in
jg
outs
sbb
add
test
dec
ret
xor
dec
ss
loop
enter
sub
cs
inc
in
add
mov
stos
int
push
jge
(bad)
in
push
jne
jmp
test
sub
hlt
jg
test
les
xchg
ja
out
dec
sub
mov
cmp
stos
mov
sbb
dec
aad
and
mov
and
cmc
xchg
pop
inc
mov
fcmovu
icebp
mov
arpl
xor
dec
enter
sti
xor
(bad)
cmc
outs
mov
inc
inc
mov
mov
sar
scas
add
cwde
or
enter
pop
ja
lds
(bad)
and
fwait
sbb
ja
cmp
push
stc
pop
test
mov
add
shl
adc
sub
xchg
mov
adc
cmp
xchg
outs
je
dec
daa
in
add
xor
lds
adc
loop
inc
pushf
int
enter
rcr
clc
mov
iret
or
xchg
aad
jecxz
sbb
xchg
mov
sti
ret
jnp
std
cmp
pop
lods
cwde
pusha
lock
cmps
xchg
scas
inc
add
cld
mov
inc
dec
in
jnp
pop
pop
stc
jo
push
adc
neg
or
jge
iret
push
dec
inc
pusha
pop
retf
jno
es
xlat
int
cmps
sahf
jb
out
stos
nop
aad
mov
and
xlat
sub
imul
jbe
cs
leave
fisubr
cmp
jp
nop
sbb
aad
mov
jbe
outs
ins
xor
xor
cmp
xor
addr16
push
popf
out
xor
sub
mov
adc
jecxz
sbb
pop
mov
test
xor
aad
add
mov
es
ds
shl
and
(bad)
pop
retf
lds
lahf
cmp
push
sub
jge
adc
jb
arpl
dec
xchg
xor
or
push
in
pop
cwde
mov
adc
or
fcmovb
test
out
xor
jge
sub
jns
adc
cli
or
mov
sar
in
mov
in
stc
test
jp
jp
aaa
push
in
pop
inc
mov
das
ffree
imul
xor
mov
cdq
fistp
(bad)
push
aad
mov
scas
mov
inc
mov
shl
jecxz
mov
pop
in
jae
rol
scas
xchg
clc
fidiv
add
push
jnp
(bad)
(bad)
cli
pop
in
mov
loop
not
pop
(bad)
mov
popa
call
adc
xlat
pop
gs
shr
push
pushf
cmp
popf
or
xchg
jb
shr
xchg
mov
push
jbe
adc
inc
(bad)
xchg
movs
js
adc
mov
xchg
pushw
adc
fmul
push
inc
(bad)
sub
and
pop
cli
cmovge
or
mov
mov
mov
cmp
aas
sahf
xchg
test
adc
test
hlt
mov
cmp
and
jo
dec
dec
add
das
inc
sbb
fcomp
lds
out
pop
imul
mov
xor
jp
out
adc
in
sbb
pop
inc
push
pop
mov
sub
adc
push
mov
stos
cmp
sbb
call
push
fwait
sub
jno
xor
cld
addr16
cld
and
dec
loopne
fnstsw
mov
jle
sub
sti
add
jmp
outs
fbld
or
sub
inc
in
in
scas
call
inc
ficom
jmp
aam
sti
add
adc
jbe
fwait
cmp
mov
xor
cdq
out
mov
pop
push
mov
jbe
cwde
sub
retf
adc
inc
mov
add
cmp
clc
push
cmp
jnp
int
jp
or
cs
popf
shr
sub
das
mov
jp
add
rcl
fs
and
mov
sar
es
xor
xlat
pop
scas
dec
sahf
jmp
imul
lods
scas
pushf
retf
adc
popf
jb
ret
jmp
icebp
test
add
jo
pop
ins
add
data16
pop
rcl
call
push
sti
jge
jne
mov
push
push
leave
inc
push
and
pop
loop
dec
mov
retf
dec
es
pmaddwd
inc
dec
push
xchg
sbb
fdiv
xchg
adc
cli
or
nop
lods
(bad)
retf
aad
push
(bad)
icebp
cmp
je
jns
inc
gs
mov
sbb
jle
out
cs
adc
mov
sahf
stc
ret
xor
sbb
mov
stos
daa
push
sub
popf
mov
sahf
mov
fisubr
inc
cmp
call
in
psubsw
fcom
ja
fsub
imul
sub
test
xchg
cmp
leave
jb
and
inc
jg
and
leave
ins
xor
push
push
jl
ja
cwde
cmp
cmp
bound
das
shl
inc
retw
and
dec
jno
fdiv
mov
out
push
and
mov
icebp
shl
out
cmp
sbb
xchg
push
mov
dec
cwde
lods
lods
cmps
xlat
and
mov
(bad)
iret
hlt
jne
aad
xor
jmp
mov
push
mov
movups
std
shl
stos
mov
(bad)
dec
xor
adc
in
mov
mov
sbb
retf
ret
in
push
xchg
lahf
dec
(bad)
sub
in
inc
ds
scas
fwait
in
pop
jmp
mov
ds
leave
cdq
pop
stc
and
daa
pop
or
xchg
mov
out
sbb
mov
dec
or
call
sar
cmp
mov
pop
cmp
jnp
movs
pop
mov
(bad)
pop
xchg
das
out
xchg
(bad)
mov
and
inc
mov
pusha
cmp
retf
addr16
push
lods
xchg
push
aad
rol
imul
mov
dec
jb
loope
div
jb
aad
retf
adc
out
inc
rcl
cmp
xor
sub
mov
cdq
lods
add
imul
and
lea
sub
loope
adc
xlat
adc
sub
xchg
ins
push
and
dec
mov
and
fwait
(bad)
fimul
daa
dec
add
lods
cmp
adc
dec
dec
pop
loope
jnp
std
or
call
sub
sbb
and
pop
cli
cwde
imul
fcomip
movs
sbb
push
sub
ins
idiv
fwait
lahf
push
adc
jbe
and
sub
push
sub
or
pop
pop
jo
cld
sub
xchg
mov
push
mov
cld
jne
popa
sbb
jg
out
ss
jmp
and
push
jg
inc
dec
dec
sbb
inc
mov
sbb
adc
adc
add
dec
hlt
push
or
mov
sbb
jecxz
mov
jmp
sbb
cmps
pop
sub
addr16
or
sti
ds
mov
mov
and
xor
mov
loope
mov
into
dec
or
hlt
xor
fldcw
dec
retf
sbb
and
aam
(bad)
jae
adc
stc
imul
pop
push
fst
push
lock
sub
jne
popa
lahf
fldl2t
sub
mov
outs
test
iret
add
sti
mov
pop
mov
pop
in
retf
add
lock
ret
(bad)
pop
add
push
dec
jl
scas
inc
lock
mov
fisub
push
pop
and
or
rol
push
jmp
xor
xchg
lahf
daa
stc
imul
mov
push
mov
xor
mov
icebp
xchg
inc
dec
jbe
in
dec
push
into
mov
xor
rol
mov
aam
fxch
dec
xchg
xor
adc
pop
mov
in
pushf
dec
(bad)
in
into
mov
popa
cwde
(bad)
hlt
out
push
pop
mov
jge
mov
ret
retf
ds
jno
fst
sbb
stc
jg
popa
(bad)
mov
mov
mov
push
mul
adc
pusha
mov
adc
sbb
out
push
imul
jae
cs
dec
push
xchg
rcl
xchg
call
inc
in
in
rcl
stos
sub
scas
mov
sub
arpl
inc
in
retf
movsx
jne
cld
outs
inc
jbe
inc
push
sar
int3
mov
lahf
sub
in
dec
arpl
push
add
inc
pop
out
fcmovnb
push
jmp
(bad)
sbb
int
test
xchg
cmp
jge
fcomp
es
cmc
pop
out
dec
inc
and
out
(bad)
in
fmul
add
xchg
push
inc
js
push
imul
inc
vpcmpgtw
jmp
xchg
sub
mov
dec
ins
or
movs
and
xor
popa
stc
pop
cs
out
out
jecxz
dec
xor
add
inc
aas
dec
mov
bound
jp
lea
test
and
sub
jns
sub
retf
mov
pushf
jmp
cmp
jmp
retf
or
mov
sbb
pop
ret
les
call
mov
imul
push
jle
and
ds
jae
xchg
in
jmp
or
enter
mov
adc
adc
(bad)
call
cmc
jae
adc
fwait
jmp
ficomp
fadd
adc
data16
out
jo
dec
cli
sti
shl
sub
mov
push
pushf
mov
push
retf
jne
mul
pop
sub
cld
jg
pop
and
outs
inc
int
inc
sub
test
outs
sar
ficomp
jge
sbb
dec
push
and
and
ret
pop
dec
data16
mov
jmp
pushf
ret
xchg
or
mov
mov
loope
dec
xchg
jns
repnz
adc
test
popf
into
jne
mov
xchg
lea
sub
sbb
(bad)
adc
xor
cmp
rcl
jp
xor
ds
jae
popf
push
je
xor
xor
daa
jecxz
adc
ins
(bad)
shr
sbb
dec
adc
mov
popa
xchg
std
pop
cmp
loop
push
sub
push
cmps
pop
jmp
or
cli
call
sbb
lods
clc
in
nop
or
test
movs
pop
dec
mov
shl
cmc
add
out
call
call
xchg
nop
fistp
stc
mov
mov
mov
(bad)
mov
xchg
add
fld
ins
xchg
xor
xor
dec
aaa
repnz
call
shl
add
and
mov
mov
mov
rcr
lahf
int3
cmp
dec
aaa
xor
adc
test
mov
ficom
out
jmp
in
cmp
imul
jecxz
and
aad
pop
clc
adc
adc
retf
pop
cmp
lds
test
movs
xor
stos
fnstcw
adc
ret
in
jmp
(bad)
jmp
jg
(bad)
cmps
xchg
std
(bad)
call
mov
loop
or
cmp
push
scas
sbb
jmp
cmp
jmp
lods
fld
lahf
mov
loope
int
add
addr16
je
mov
retf
cmp
mov
cmp
cdq
fiadd
movs
dec
inc
sbb
xor
add
push
aaa
inc
retf
js
retf
clc
xchg
dec
add
je
repz
push
es
fcomp
ins
xor
test
mov
and
out
hlt
out
or
jb
add
lods
pop
mov
fisub
jnp
mov
test
(bad)
ins
xchg
mov
aas
sub
sbb
inc
push
jae
jecxz
add
inc
out
jp
inc
xchg
inc
stc
in
jb
jge
ds
mov
lods
cmps
lds
or
xor
rdmsr
pop
jae
cld
mov
fstp
js
inc
enter
adc
hlt
lods
add
popa
(bad)
cs
rcl
dec
mov
dec
push
pop
inc
nop
jnp
cmp
pop
ret
sub
fnstenv
cmp
sbb
push
ret
rcl
pop
loopne
stos
pmulhw
push
xor
bound
dec
imul
jecxz
xchg
xor
fdivr
cmp
jge
inc
sbb
xchg
loop
movs
gs
cli
stos
aad
ins
retf
sbb
adc
aaa
jae
xor
rol
mov
mov
xor
js
fld
or
adc
inc
test
ins
pop
mov
call
and
daa
add
test
dec
ds
lods
mov
cmp
not
xor
mov
fs
cmp
int
pop
xor
fcom
push
inc
push
(bad)
pushf
xchg
cwde
or
jne
test
push
fst
mov
mov
sub
xchg
test
inc
sbb
add
hlt
test
popf
adc
xor
imul
mov
(bad)
adc
stc
mov
ins
test
dec
ja
push
add
cld
mov
pop
(bad)
fstp
xor
push
add
pop
push
lods
add
daa
dec
jge
inc
sbb
and
push
jmp
mov
mov
adc
pop
retf
test
mov
retf
xor
shl
dec
loope
adc
rol
mov
push
mov
and
(bad)
mov
cmp
mov
push
xor
out
pop
lock
adc
imul
fninit
scas
sbb
inc
mov
fdiv
xchg
icebp
push
cmps
mov
inc
jbe
lahf
cmp
inc
int3
scas
jnp
cwde
jl
in
int
inc
jmp
sbb
int3
call
sbb
mov
inc
add
arpl
and
sbb
clc
mov
pop
test
jae
sbb
push
hlt
mov
mov
imul
mov
xor
dec
aam
sbb
mov
push
sbb
je
adc
shr
mov
arpl
sbb
cmp
dec
pop
and
xchg
mov
in
jmp
test
es
fdivr
test
leave
xor
jno
in
jmp
or
sar
xor
ja
mov
adc
push
jmp
jg
and
icebp
jle
mov
push
or
mov
mov
ror
jbe
pusha
push
mov
jecxz
xor
pop
loop
jle
mov
add
std
out
and
scas
pop
and
jnp
call
add
imul
dec
aas
mov
mov
add
fwait
adc
pop
sub
iret
mov
cmp
pusha
in
idiv
xor
imul
es
mov
sahf
adc
imul
fst
(bad)
pop
push
inc
push
mov
add
outs
cwde
and
hlt
test
pop
fcmovnbe
fidiv
pop
mov
and
adc
in
fcomp
inc
xchg
jg
adc
scas
add
bnd
mov
fild
or
int3
push
leave
mov
or
std
cwde
test
add
sub
inc
mov
fidivr
ret
pop
xor
sbb
cdq
push
setns
in
imul
add
mov
dec
xor
movs
sbb
in
sbb
mov
adc
push
js
and
xchg
scas
or
rol
xor
xor
push
cmp
xchg
sbb
movs
pop
es
inc
xchg
shl
inc
mov
pop
sub
dec
pop
outs
adc
sahf
or
mov
jae
jp
xor
cmps
test
(bad)
das
pop
mov
xchg
je
lahf
out
nop
lds
xor
ret
in
cmp
xor
neg
mov
mov
pop
adc
mov
add
mov
mov
outs
aad
adc
cmp
inc
push
pop
out
test
aad
jg
or
sar
and
pop
xor
mov
ss
loopne
pop
cmp
ret
(bad)
or
add
shl
add
mov
in
jge
pop
dec
repnz
sub
test
cmp
sbb
mov
lock
jg
xor
call
push
xchg
dec
xor
jg
loope
shl
retf
cmp
add
xor
in
sbb
jns
neg
mov
popa
cmps
or
les
jg
ja
fwait
cld
pop
unpckhps
out
fild
fsubr
cmp
sbb
mov
sub
pop
jecxz
iret
fcomp
or
leave
sar
push
push
jmp
mov
push
js
mov
stos
mov
aas
rol
xchg
jns
in
pop
cwde
dec
popa
pop
xor
push
sub
(bad)
xchg
int
ds
jecxz
movs
je
mov
mov
push
mov
mov
jg
add
fdiv
inc
lds
(bad)
xchg
add
sbb
nop
dec
mov
jne
mov
mov
inc
cmp
aad
jns
mov
or
xchg
popa
dec
dec
pusha
or
mov
mov
adc
test
and
js
test
dec
mov
jne
push
iret
jecxz
loop
dec
jg
ret
or
and
loope
mov
es
(bad)
sbb
jmp
icebp
sub
or
inc
mul
loopne
and
out
xlat
mov
add
fdiv
jg
xchg
(bad)
shl
and
(bad)
sbb
pop
mov
xchg
add
or
scas
out
cwde
pop
sti
push
mov
pop
add
test
sbb
sub
arpl
mov
jmp
out
sahf
mov
aas
call
sub
scas
cmps
inc
xor
lea
inc
or
or
jg
sbb
cmps
neg
inc
pop
or
ficomp
jle
sub
mov
dec
lahf
xor
cmps
(bad)
sbb
jmp
sub
aas
leave
jecxz
mov
(bad)
and
out
std
sbb
js
adc
imul
add
cmc
dec
(bad)
inc
add
push
(bad)
adc
retf
cmp
cvtps2pi
rep
cli
adc
mov
lea
mov
adc
shr
stc
xchg
jp
cmp
mov
cmp
ja
es
or
adc
inc
test
cs
cwde
or
xor
iret
mov
imul
out
inc
add
mov
iret
xlat
pop
out
fbld
add
mov
das
fdivr
test
(bad)
fisttp
xchg
mov
(bad)
repz
sbb
repnz
pop
lahf
xchg
and
xor
xchg
xchg
call
xlat
enter
ret
mov
or
scas
fst
rol
leave
popa
xlat
adc
mov
pop
fcomp
add
xchg
cs
xchg
xlat
xor
mov
push
ret
popf
pop
push
idiv
sub
pop
ret
add
cs
or
ins
data16
iret
popa
movs
repz
adc
sar
retf
jae
idiv
xor
lods
jmp
and
sub
pop
jmp
in
xchg
addr16
das
and
sbb
xor
jb
push
out
fisub
dec
stos
rol
xchg
aam
outs
mov
repz
mov
mov
out
lods
jmp
daa
retf
icebp
mov
sub
cmps
imul
cmp
xor
inc
pop
clc
jmp
mov
frstor
test
mov
pusha
or
imul
jb
cdq
mov
scas
repnz
fadd
jne
dec
(bad)
xor
sti
out
push
popa
xchg
xlat
test
ja
push
adc
out
(bad)
pop
(bad)
fsub
pop
int3
pop
arpl
ret
and
pusha
mov
hlt
push
sub
not
bound
mov
outs
aam
mov
ins
popa
fcomip
jge
repnz
mov
ja
dec
fisub
jae
int
fldenv
sbb
cmc
jae
cmp
scas
mov
je
push
das
fcom
out
xor
add
shl
mov
pop
clc
mov
mov
out
ins
inc
or
xchg
div
not
jb
and
jo
mov
cmp
xchg
mov
jg
dec
stos
mov
or
xchg
mov
xor
jle
pop
sbb
and
pop
xor
push
pop
aas
ins
fwait
clc
and
cmp
pop
(bad)
sbb
or
mov
int
sbb
ins
mov
movsx
cdq
cli
fld
(bad)
movzx
xor
outs
xchg
and
retf
jb
jmp
repnz
in
xor
mov
out
dec
adc
jge
addr16
repnz
sub
mov
sbb
call
dec
enter
dec
mov
pushf
cmc
(bad)
clc
lods
call
clc
xor
dec
or
cmc
add
aad
or
push
jne
ds
mov
cmc
inc
jle
mov
(bad)
fistp
xor
stc
out
fmul
sti
inc
in
cwde
out
sub
cwde
jno
fs
ror
adc
icebp
xor
imul
pop
pop
xor
imul
jne
jmp
addr16
xor
push
add
es
into
dec
sub
xchg
cmc
call
or
sahf
popf
inc
xor
cmp
repnz
push
repnz
pop
jmp
cli
and
push
dec
mov
adc
and
cmp
(bad)
jmp
sti
repz
in
mov
sbb
dec
xlat
stc
std
fst
and
cmp
xchg
dec
mov
fidivr
mov
mov
movs
adc
ds
mov
sub
movs
div
enter
cmp
inc
ins
call
(bad)
test
dec
pop
adc
jmp
dec
or
in
cmp
addr16
add
in
jle
dec
pop
mov
scas
mov
pusha
dec
pop
scas
lea
mov
jecxz
mov
in
iret
(bad)
add
scas
xchg
xlat
pop
sbb
push
scas
jb
test
int
mov
push
(bad)
sbb
push
push
aad
xchg
sbb
in
int3
enter
xor
cmc
sbb
pop
fs
xchg
icebp
push
pop
or
jge
add
or
scas
xor
push
mov
data16
push
clc
xchg
outs
gs
cmp
iret
fcom
adc
inc
xchg
pushf
loope
push
push
lods
xor
sbb
sbb
adc
rol
ins
ins
aas
lods
mov
cmp
sbb
(bad)
cmp
test
sub
xchg
xchg
cmp
or
and
sbb
ins
sbb
add
hlt
repnz
mov
jge
fisub
js
iret
push
xchg
std
pop
xchg
mov
mov
push
test
mov
inc
test
pop
ja
pop
(bad)
inc
retf
sbb
sar
repz
mov
add
jae
fst
mov
pop
push
(bad)
jns
xchg
cmp
lock
push
test
mov
shl
out
xchg
(bad)
mov
xchg
dec
mov
mov
jle
cwde
xchg
(bad)
leave
dec
xor
int
test
jae
push
rol
aad
push
xchg
fs
mov
sub
jle
xchg
xor
bound
test
sbb
cmps
xchg
(bad)
shl
or
inc
adc
das
mov
sub
jge
push
data16
iret
cmp
pop
pop
mov
int
mov
mov
inc
call
out
jl
shl
xchg
xchg
dec
mov
js
cmp
inc
cmp
lock
inc
icebp
push
push
test
xchg
imul
jb
hlt
pop
ins
call
and
ret
mov
leave
sbb
xor
fs
or
dec
(bad)
es
sbb
mov
pop
pop
inc
and
push
push
mov
int3
aaa
cmp
or
loop
ja
cmps
mov
shl
mul
dec
mov
sbb
neg
cs
pop
dec
iret
test
in
mov
fdivr
mov
dec
mov
or
out
sbb
(bad)
loop
xchg
ror
push
jle
pop
dec
test
pop
and
cmp
sbb
mov
jp
dec
cmc
add
retf
mov
inc
test
mov
es
inc
mov
fisubr
pop
outs
dec
adc
push
inc
xlat
inc
dec
and
pop
leave
or
mov
pop
fld
aaa
sub
cdq
iret
xor
jmp
push
mov
jae
test
aam
add
xchg
(bad)
and
int
add
mov
mov
stc
pop
sti
cli
scas
mov
mov
and
int
stos
addr16
loopne
mov
mov
sar
sub
sub
mov
retf
or
outs
adc
mov
int
shl
fs
jb
push
fisub
mov
adc
ds
xlat
dec
addr16
mov
or
rol
dec
ins
xor
sub
movs
and
(bad)
sub
and
add
pop
inc
out
cdq
jmp
cmp
mov
jecxz
lea
ss
out
dec
retf
mov
jl
mov
xor
jmp
jae
(bad)
loope
jmp
cmps
das
sbb
repnz
mov
ja
and
pop
daa
mov
rcr
rol
cld
jmp
jecxz
xchg
scas
cmp
jge
sbb
jno
push
xchg
pop
pop
push
xor
ins
pop
sub
repz
push
nop
movs
out
fwait
xchg
and
out
jnp
adc
mov
or
and
jno
push
adc
into
cmp
cmps
and
sub
je
(bad)
xchg
xor
dec
or
(bad)
lods
and
test
mov
jle
ss
xchg
mov
es
or
push
sahf
add
test
adc
nop
mov
sbb
push
or
cmp
enter
call
mov
and
dec
mov
shr
cmp
mov
or
pop
sbb
ficomp
mov
fst
or
lea
aam
pop
mov
scas
repnz
or
lds
outs
movs
jo
mov
cmps
fadd
adc
pop
stc
xchg
popa
call
cmp
popa
inc
mov
jge
cld
test
je
push
arpl
retf
xor
push
sahf
adc
das
sbb
pop
sub
(bad)
int3
sub
cld
xchg
mov
call
lahf
jno
div
lods
out
ret
pop
dec
mov
or
bound
lahf
fiadd
push
mov
pop
inc
das
push
ins
std
inc
cmp
stc
push
call
xlat
pop
popf
retf
mov
daa
(bad)
mov
test
into
or
out
inc
mov
cmp
outs
mov
cmp
clc
fld
enter
add
mov
dec
stc
push
sar
mov
inc
es
fwait
sub
mov
pop
and
pop
je
imul
ja
pop
mov
mov
out
mov
das
jmp
movs
cs
loope
ficomp
into
pushf
mov
dec
lea
push
icebp
sub
push
fmul
cmp
pop
dec
(bad)
jno
cdq
mov
data16
xchg
shl
call
shl
rcl
pusha
and
mov
xchg
out
ja
inc
js
adc
lods
repz
cmp
and
nop
push
stos
xchg
inc
cmps
xor
loop
inc
mov
(bad)
jo
loopne
inc
add
mov
stos
out
(bad)
jg
jnp
je
push
fisttp
or
jb
aas
popa
lods
cwde
adc
clc
hlt
sar
outs
pop
movs
cmp
pop
adc
adc
sub
sti
pop
das
shl
ds
scas
sbb
inc
icebp
repnz
xchg
and
add
pop
out
arpl
in
test
ja
mov
sub
inc
in
js
and
mov
shr
adc
add
in
loopne
mov
pushf
inc
cmps
paddq
pop
aad
xor
sbb
cmp
cwde
dec
cs
xchg
cmc
je
(bad)
rcl
mov
xchg
xchg
add
push
inc
je
in
cmps
in
jp
(bad)
adc
retf
fnstsw
push
pop
mov
cmp
sbb
retf
(bad)
loope
iret
pop
xor
stos
cmp
add
inc
cmp
addr16
add
cdq
push
xor
(bad)
in
pop
retf
(bad)
jl
pop
sub
push
mov
div
cmp
dec
mov
(bad)
lock
aaa
xor
xchg
jno
jo
repz
fbstp
test
adc
add
mov
dec
sub
test
sub
cmp
leave
mov
lods
mov
fs
rcl
xor
cmp
loopne
jp
mov
push
push
shl
nop
or
dec
jns
pusha
mov
not
jo
sbb
retf
adc
hlt
fnsave
test
or
out
push
ror
out
sbb
out
pop
mov
xor
dec
inc
jno
std
mov
(bad)
mov
aad
in
push
inc
xchg
fidiv
popf
sub
sahf
mov
cmp
mov
call
jmp
rcr
fdivr
pop
loop
mov
mov
sbb
add
mov
inc
div
rcr
cmp
xor
pop
leave
nop
shl
jmp
cmc
repz
enter
cmp
mov
mov
sub
jecxz
(bad)
push
test
jno
mov
call
xor
(bad)
js
pop
jecxz
sub
push
into
push
scas
or
cli
adc
rcl
adc
mov
aad
xchg
fs
xor
jnp
cmc
pop
pop
add
mov
mov
xor
push
sub
call
(bad)
sar
(bad)
sub
sub
icebp
xor
xchg
sbb
push
popf
hlt
call
jbe
je
push
sub
repz
dec
inc
int3
loope
aad
(bad)
cwde
das
jne
fcomp
sub
ss
cli
pop
in
add
xor
sbb
jg
mov
(bad)
clc
xchg
aas
bound
sbb
clc
xchg
xor
add
mov
in
std
inc
mov
test
out
sub
and
call
popa
inc
bound
add
inc
mov
mov
cli
ds
pushf
jge
int
mov
mov
int3
mov
inc
shl
pop
repz
xor
bound
xor
xlat
ror
pusha
sub
push
mov
push
push
mov
pop
sahf
adc
scas
fcomp
out
stos
retf
push
mov
mov
mov
(bad)
ss
adc
jnp
lods
push
adc
sub
pop
xor
and
imul
jne
psubd
jae
aad
stos
cmp
sbb
(bad)
pop
xor
dec
je
xor
dec
lahf
push
mov
add
mov
iret
mov
sbb
xchg
mov
(bad)
ds
pop
ins
scas
dec
jnp
mov
pop
dec
and
adc
movs
mov
fiadd
mov
xchg
mov
mov
add
inc
jmp
jns
sub
in
(bad)
push
mov
jmp
jle
adc
mov
(bad)
ror
hlt
lock
not
pushf
and
(bad)
sub
and
imul
mov
add
es
mov
xchg
cdq
xchg
push
jae
or
dec
inc
cmps
mov
pop
outs
data16
shr
xchg
mov
sub
nop
pop
sub
(bad)
mov
mov
dec
js
push
add
shl
es
jns
loop
jne
xor
mov
pop
jmp
clc
jne
ja
ror
xor
xor
or
sub
(bad)
or
mov
iret
imul
call
pop
cmps
jb
stc
mov
dec
sbb
movs
lods
fist
push
call
div
sub
jle
mov
push
cmp
inc
xchg
nop
cwde
pop
or
rcr
popf
cmps
enter
sbb
xchg
xlat
pop
add
arpl
cmp
mov
jnp
test
mov
aas
stos
mov
fadd
popf
jns
lds
inc
mov
ja
jmp
jg
fild
mov
mov
stos
(bad)
or
push
adc
sbb
pop
dec
jmp
(bad)
and
in
lods
movs
cmp
mov
sub
aaa
sbb
push
push
iret
mov
imul
push
(bad)
xor
and
xlat
cwde
int3
xchg
cmp
mov
jmp
dec
in
mov
sahf
aas
and
and
push
jnp
(bad)
dec
sub
add
mov
ja
dec
test
or
mov
addr16
or
xchg
or
xchg
and
inc
jae
lods
xchg
arpl
out
push
add
xchg
imul
(bad)
(bad)
mov
pop
sub
(bad)
xor
sbb
shl
fcmovne
and
xchg
jge
cmp
mov
sub
loopne
mov
and
jnp
cmp
xor
fst
dec
int3
push
(bad)
lock
cmps
fistp
xchg
xchg
fst
jb
add
imul
adc
push
mov
jb
stos
dec
jg
movs
ret
out
enter
bound
push
xchg
xor
shr
or
gs
ins
dec
dec
out
mov
hlt
es
xchg
sbb
stos
mov
out
dec
cmp
into
(bad)
mov
cmp
mov
movs
cmp
in
call
cmp
push
retf
cwde
xadd
mov
ret
or
push
aas
push
mov
pushf
dec
add
pushf
cmp
ret
jmp
inc
lods
(bad)
fisubr
call
push
xchg
and
mov
jb
pop
pushf
sti
mov
cdq
(bad)
repz
dec
stc
cld
call
in
(bad)
stc
mov
lock
sbb
mov
or
jl
push
cdq
out
add
stc
dec
pop
mov
loop
mov
nop
ins
mov
ror
nop
xor
aam
mov
mov
mov
adc
test
mov
sbb
mov
outs
cmps
daa
dec
js
sub
(bad)
pop
movs
ret
mov
dec
nop
enter
xchg
test
popf
imul
call
movs
mov
or
cdq
xchg
cmp
or
and
aaa
shl
or
icebp
add
sub
xchg
pop
pop
in
jnp
shr
stos
mov
addr16
mov
mov
adc
cmp
jb
loope
addr16
cmp
inc
jno
inc
cmp
pop
ror
int
pop
push
clc
or
cmp
dec
inc
jl
pop
out
test
movs
adc
in
xchg
test
xor
(bad)
ret
iret
cs
pushf
push
ret
add
cmp
xor
int
icebp
cdq
jecxz
mov
sub
push
or
jbe
rol
out
mov
out
pop
fdivr
jns
cmp
cmp
pop
xor
cld
pusha
jl
jmp
leave
daa
sahf
jle
inc
xchg
ror
add
test
xchg
xor
mov
xchg
mov
stos
and
aad
jg
jecxz
clc
lea
mov
lahf
cli
adc
adc
push
fist
shr
inc
lahf
sub
xor
data16
inc
xchg
mov
mov
shl
jns
mov
mov
xchg
mov
sti
movs
std
inc
ja
mov
lods
sub
mov
inc
xchg
cwde
into
pop
es
retf
fsub
fxch
es
xor
into
mov
jne
and
fadd
aaa
fs
xchg
ret
xchg
dec
push
mov
mov
ins
inc
xchg
nop
fwait
jmp
fwait
add
pop
inc
fld
(bad)
dec
nop
jno
add
sub
jle
out
xor
inc
or
adc
push
mov
mov
fdiv
lods
out
loope
push
(bad)
xor
fstp
pushf
addr16
movs
pushf
sahf
ss
ja
fstp
xchg
fld
adc
std
fist
xchg
daa
repnz
lock
sbb
pop
pop
cli
mov
or
push
mov
addr16
aaa
mov
repz
sti
or
test
cwde
push
pop
sub
cmp
mov
cmp
mov
aas
ret
in
mov
pop
cmp
clc
fwait
ja
repz
or
mov
xor
fstp
lods
mov
push
lahf
push
jmp
inc
std
xchg
loop
cdq
sbb
xchg
cli
test
in
mov
outs
xor
jno
or
dec
fidiv
pop
bound
lods
inc
push
mov
push
jmp
scas
adc
jns
ret
out
push
sahf
retf
aas
ins
push
shl
push
repnz
mov
dec
aam
add
mov
push
xor
mov
imul
cmp
mov
sub
je
das
sbb
inc
mov
cmp
sar
mov
ja
test
push
dec
rcl
mov
pop
int
pop
or
add
xchg
push
int
les
fsubr
dec
rcl
out
pop
pop
cwde
ret
inc
mov
imul
adc
jp
cli
mov
fnstenv
jo
mov
or
sub
jge
cmps
fmul
les
dec
es
cmp
adc
loopne
cdq
lods
jb
inc
repz
out
dec
xor
imul
sti
sbb
mov
mov
mov
pop
lock
ror
sbb
sti
rcr
faddp
popa
jp
bsr
loop
xor
push
or
pop
sub
dec
ds
dec
xchg
push
bound
jecxz
mov
inc
xlat
push
dec
ss
jge
push
sub
std
cdq
in
outs
aam
or
sub
jne
adc
sub
dec
out
arpl
fmul
mov
push
and
mov
push
and
cmc
cmp
or
lds
jae
in
je
adc
or
hlt
sbb
sbb
pop
inc
in
addr16
sahf
nop
mov
icebp
stos
or
ds
sub
inc
mov
sub
loope
lock
aad
jnp
mov
push
xchg
inc
(bad)
mov
fimul
call
sbb
dec
jnp
cli
nop
pop
mov
sbb
ins
push
xchg
sbb
push
sbb
sbb
mov
in
xchg
popf
imul
push
sub
sub
leave
scas
mov
xchg
xchg
cdq
sbb
or
jmp
inc
xchg
push
int3
adc
and
gs
mov
fcom
or
loop
int3
mov
mov
jmp
sbb
(bad)
inc
imul
mov
(bad)
mov
fcomp
pop
mov
test
push
(bad)
out
mov
outs
scas
push
xor
addr16
adc
jbe
sbb
mov
mov
xchg
ins
sub
nop
add
data16
pop
fcmovnb
js
sub
jp
pop
pop
out
push
dec
xchg
repz
push
out
out
sar
or
test
les
dec
dec
imul
sub
or
cld
mov
fcomp
mov
or
in
sbb
mov
out
cwde
shr
xchg
in
out
sahf
sbb
das
aad
and
inc
jns
cmp
idiv
int3
loope
cmp
rcl
scas
jb
jbe
xor
int3
stos
pop
inc
mov
pop
std
cmp
sbb
test
lahf
xor
movs
inc
(bad)
dec
xchg
inc
test
xor
ret
lds
mov
ss
xor
das
ret
pop
push
jmp
push
mov
bound
or
sub
test
adc
push
dec
or
dec
aaa
pushf
fmulp
(bad)
out
call
sahf
cmps
fdiv
push
fchs
pop
sub
sti
inc
pop
cld
ror
ja
cmp
js
addr16
dec
and
sti
add
daa
xchg
cmp
lahf
sbb
out
icebp
add
scas
jmp
pop
mov
aad
fistp
mov
addr16
addr16
xchg
(bad)
or
arpl
mov
stc
mov
push
repz
lods
lahf
ret
push
dec
xor
mov
mov
xor
test
jle
sub
imul
lods
(bad)
push
sbb
(bad)
stc
jmp
mov
mov
xor
jecxz
retf
add
inc
jl
add
xchg
pusha
jg
push
sbb
not
ret
jecxz
std
stc
and
hlt
loope
(bad)
sbb
jmp
mov
imul
(bad)
sub
sbb
rcl
loopne
je
scas
cmps
or
dec
ret
push
ds
scas
mov
add
ret
movs
fst
and
scas
dec
dec
inc
pushf
daa
sub
add
sub
rcl
test
in
pop
nop
pop
jmp
xchg
rcr
shl
outs
es
xor
leave
lods
stos
sub
add
xchg
cmps
push
mov
arpl
ja
mov
cwde
push
push
jo
test
fidivr
xor
fidivr
ja
lock
sti
loopne
xlat
repnz
stos
data16
in
push
test
pop
popa
sbb
lahf
hlt
jns
adc
aaa
and
pop
adc
mov
and
in
add
int3
mov
mov
fs
add
adc
test
dec
out
sbb
push
cmp
dec
fcomp
test
not
cmp
scas
and
aaa
les
test
and
sbb
cmp
pop
inc
addr16
cwde
or
or
rcr
int3
inc
in
mov
pop
popf
fst
adc
pop
in
rcr
mov
mov
test
cmp
(bad)
jl
mov
enter
lds
cmp
sub
aaa
sbb
pop
sbb
int3
push
(bad)
xchg
jp
mov
cmp
xchg
into
out
jecxz
cmova
sahf
sbb
out
rol
and
jge
arpl
sti
jecxz
jmp
into
mov
sbb
inc
les
sub
add
outs
sti
inc
mov
repnz
push
fcomp
add
fs
mov
int3
adc
dec
push
clc
push
ret
out
test
test
add
ins
loopne
test
bound
inc
jg
cli
mov
scas
or
dec
xlat
rcr
jno
mov
shr
enter
out
daa
int3
mov
xor
push
out
push
xchg
stos
xchg
sbb
jns
test
mov
add
out
test
xchg
inc
movs
stc
adc
add
inc
aam
mov
aam
arpl
push
stc
fwait
pop
(bad)
push
xor
int3
dec
sub
cs
cwde
mov
or
(bad)
popa
xor
cs
inc
sub
add
sub
mov
imul
aad
fistp
push
aam
jbe
ret
sub
push
add
nop
aad
xor
stos
(bad)
jecxz
xchg
push
push
cld
outs
mov
(bad)
test
pop
mov
cmp
jno
in
and
shl
xchg
out
jge
mov
into
xchg
xchg
inc
mov
test
mov
ret
adc
adc
and
lods
dec
jb
push
jo
sbb
sub
in
inc
data16
mov
leave
inc
sbb
push
fldenv
scas
pop
int
stos
sbb
mov
movs
cmc
push
xchg
inc
es
cli
sbb
xor
xchg
cmps
pop
call
arpl
shl
jno
sbb
xchg
lahf
aaa
jbe
cmp
shr
xor
rcl
sahf
pusha
xchg
cwde
movs
sahf
dec
xchg
fdivr
ret
and
or
fmul
hlt
mov
pop
mov
fnstcw
lahf
mov
mov
(bad)
mov
jo
push
aaa
mov
pop
jbe
sbb
lods
xlat
sti
leave
cmp
cwde
push
out
sar
xor
in
xchg
cdq
test
not
sbb
movs
in
rcr
das
or
adc
pusha
rcr
and
outs
pusha
(bad)
out
rol
test
ds
fisttp
and
push
(bad)
sahf
dec
cwde
mov
mov
pop
mov
lods
ret
ds
jno
cmp
fsubr
call
leave
scas
inc
xchg
sbb
mov
xchg
mov
adc
aam
push
sbb
xor
sub
popf
inc
push
ja
adc
clc
movs
or
mov
xor
inc
cs
push
out
repz
pcmpeqw
and
out
and
cwde
out
xchg
call
mov
xchg
test
jno
cdq
xchg
cmp
inc
(bad)
call
sbb
xchg
dec
adc
rol
seto
jmp
xor
inc
mov
ret
add
in
retf
push
pop
jb
repz
popa
fidivr
mov
cwde
push
stc
jl
sub
rcr
cmp
jmp
repnz
adc
repz
pop
fdivr
cs
repz
repz
cmps
rol
fdivr
pop
in
test
mov
mov
sub
arpl
inc
and
jl
sti
sub
mov
push
mov
enter
push
push
adc
jg
inc
loop
hlt
pop
enter
add
cmp
idiv
mov
fild
ret
(bad)
rol
scas
jmp
fwait
mov
stos
pop
pop
jge
inc
add
pop
jg
mov
pop
and
mov
iret
test
push
aas
adc
fmulp
jg
push
shl
mov
in
dec
js
(bad)
mov
mov
add
or
cwde
adc
scas
pop
into
pop
mov
xor
add
dec
stc
jno
or
(bad)
aas
int3
sti
fsubr
dec
lock
aad
pop
dec
sbb
push
(bad)
xchg
dec
or
test
sub
pop
pusha
and
add
pop
mov
movs
mov
pop
(bad)
rol
stos
xchg
cmp
jmp
mov
aad
ror
jp
cwde
test
iret
out
lods
adc
inc
(bad)
je
fisub
inc
pop
mov
xchg
mov
mov
jae
cmps
fld
sub
inc
sbb
cli
mov
stc
sbb
nop
jno
out
mov
rcl
add
in
pop
mov
push
sbb
pop
lds
pop
icebp
xor
mov
or
mov
sbb
dec
add
fldcw
fisub
xor
fwait
jno
and
mov
imul
mov
sbb
test
repz
in
xchg
in
jns
push
mov
popa
lea
test
dec
das
out
sar
cmp
int3
cmp
mov
mov
cwde
shl
and
mov
ja
xor
stos
mov
les
sub
addr16
mov
imul
dec
xchg
adc
add
out
sar
sbb
sbb
rcl
xlat
mov
test
mov
and
and
fwait
arpl
scas
cmp
mov
jg
lods
and
icebp
(bad)
xor
popa
adc
pop
xor
aad
(bad)
ss
fwait
dec
not
ins
out
cld
xor
out
shr
mov
out
mov
loope
push
mov
push
cmp
fmul
(bad)
or
mov
fldln2
aaa
mov
stc
dec
nop
lahf
cmp
dec
adc
xchg
push
xchg
inc
mov
or
add
hlt
and
jo
je
ins
iret
cmp
test
adc
sbb
mov
jecxz
dec
retf
mov
mov
fdivr
call
dec
pop
mov
sti
movs
lock
and
push
(bad)
xor
test
mov
(bad)
fisttp
iret
loopne
sbb
or
dec
adc
and
rcl
add
(bad)
movs
cwde
jp
push
xchg
jge
(bad)
and
arpl
mov
icebp
xlat
lods
movs
push
xchg
mov
jge
fs
dec
push
(bad)
push
cmp
cmps
test
mov
sbb
shr
es
call
shl
into
mov
mov
test
jbe
shr
adc
mov
ins
movs
lea
ret
fucom
pop
dec
sub
and
sbb
stos
or
sbb
in
add
in
cmovp
jp
pop
(bad)
fcmovb
inc
ds
scas
mov
push
sti
in
dec
sbb
fmul
neg
cwde
xor
std
mov
push
inc
xchg
xchg
lods
push
mov
aaa
pop
push
adc
jo
in
stos
pop
mov
add
inc
mov
movs
mov
hlt
cmp
or
int3
sbb
popf
pop
ss
jecxz
sub
add
hlt
aas
push
and
bound
mov
iret
pop
xchg
or
jae
lahf
cs
das
mov
inc
into
and
push
adc
push
ja
mov
jns
pop
dec
pop
ret
mov
sub
and
test
js
cmps
cdq
mov
adc
push
jnp
adc
xchg
or
dec
sub
arpl
(bad)
in
xchg
cmps
push
rcl
stc
into
movs
sub
dec
cmc
mov
lea
mov
sbb
adc
add
repnz
cmp
sub
jmp
imul
in
cli
lods
sub
into
fs
inc
push
lock
mov
pop
pop
pop
mov
and
fsubp
and
lock
xor
or
sub
icebp
or
pop
xchg
in
pusha
test
inc
sbb
xor
mov
fistp
jmp
jbe
xor
cmp
jne
or
into
pop
sbb
dec
mov
jp
push
gs
sub
jge
daa
sbb
dec
cmps
pop
sub
jbe
cld
mov
push
and
outs
push
sbb
ins
mov
pop
jle
mov
outs
push
fs
sbb
add
int3
jbe
ja
add
iret
adc
mov
lahf
mov
sbb
addr16
stos
aas
outs
enter
outs
movs
pop
sbb
retf
xor
mov
in
dec
ins
lock
stos
sbb
fwait
movs
push
xchg
pop
jmp
dec
lds
loopne
mov
ret
mov
movs
loopne
stc
push
and
push
int3
or
hlt
scas
sub
test
pusha
cwde
xchg
cmp
jnp
xchg
cli
inc
and
shr
mov
fld
mov
jmp
cmps
shl
mov
sbb
in
outs
jb
mov
add
pop
scas
test
ins
jmp
js
add
or
xchg
xor
jmp
lock
and
xchg
fisub
stos
out
sbb
add
sahf
rol
mov
mov
xchg
push
cmp
outs
jge
sbb
sahf
hlt
xchg
fcomp
push
ss
mov
jne
cdq
mov
rol
and
adc
push
out
and
mov
xor
cdq
ds
and
mov
fistp
out
fst
aad
mov
mov
mov
cmp
mov
(bad)
xor
xor
leave
rcr
sbb
mov
mov
mov
add
xor
lock
inc
xchg
mov
jmp
adc
pop
mov
mov
das
pop
fdiv
(bad)
lock
mov
mov
and
jge
and
in
ret
test
retf
mov
cmp
and
or
daa
loopne
jb
mov
xor
add
lahf
iret
imul
xchg
ret
data16
push
cmp
adc
fmul
cwde
pop
dec
outs
fldenv
pop
mov
stos
jb
cmps
lahf
imul
mov
test
nop
retf
xor
and
pop
sahf
push
and
outs
loop
sub
std
sahf
push
sub
fistp
mov
adc
aad
inc
aaa
jnp
push
mov
and
shr
(bad)
fild
cdq
jbe
repnz
rcl
popf
jns
xor
dec
stc
fcmovnu
into
mov
lock
or
in
aam
mov
popa
push
sbb
push
shl
pop
jnp
ins
sti
arpl
pop
imul
arpl
(bad)
gs
mov
in
loope
adc
pop
and
call
jbe
fistp
into
je
lods
cmp
ror
aad
(bad)
pop
in
push
mov
mov
js
lods
xchg
clc
in
mov
pop
int
lds
and
inc
stc
(bad)
cmp
popa
sub
shl
fcomp
mov
mov
call
dec
cmp
ja
mov
push
ret
aaa
sbb
cwde
jns
out
cmps
or
retf
call
push
mov
and
xchg
mov
jno
cmp
mov
ret
pop
sbb
retf
dec
push
fldenv
cwde
clc
sahf
sbb
adc
pop
call
xchg
es
jg
retf
das
lea
dec
mov
and
push
pop
xor
jo
lods
adc
outs
xor
push
push
push
std
(bad)
xor
shl
xchg
cmp
cmp
pop
dec
xor
pop
test
and
adc
loope
push
outs
jmp
int3
dec
push
mov
ret
jmp
inc
test
sbb
mov
stos
jg
xchg
out
push
push
push
mov
inc
mov
fdivr
sub
int3
jae
push
cmp
or
xchg
pop
and
sub
arpl
ret
dec
movs
cmp
jp
xchg
stc
repnz
stos
imul
xor
js
loop
sub
cmps
xchg
cmp
add
and
cmp
mov
stos
and
shl
xchg
in
ret
push
fimul
lock
jns
sub
jmp
gs
int
ss
mov
movs
sbb
maskmovq
div
sub
push
clc
ins
add
popf
into
adc
sbb
fild
leave
(bad)
call
in
xor
sub
fstp
push
test
mov
sub
jno
and
push
xchg
or
cmp
mov
pop
xchg
ja
jle
or
pop
(bad)
mov
push
cs
into
enter
xor
mov
push
xor
sbb
jp
adc
xchg
mov
std
jp
inc
inc
sbb
adc
jb
test
jb
imul
fxam
dec
repz
call
xchg
mov
icebp
pushf
inc
inc
das
jl
cmp
inc
pop
icebp
mov
imul
adc
in
mov
fs
mov
mov
push
jl
ror
in
js
aad
fwait
sbb
out
addr16
ficom
rep
lock
and
test
mov
clc
sub
imul
inc
retf
xor
imul
(bad)
push
ss
lahf
loop
dec
imul
bound
inc
or
jb
aad
popa
sbb
(bad)
dec
test
ficomp
jge
mov
shr
loope
scas
jno
mov
daa
jbe
sbb
mov
sahf
loopne
pop
movs
mov
test
push
test
outs
test
cwde
je
xchg
test
xor
push
adc
inc
daa
adc
sub
or
jmp
fsubr
inc
aad
stc
dec
popa
cdq
mov
sbb
(bad)
sub
test
nop
(bad)
dec
mov
aaa
xchg
inc
scas
hlt
sbb
jnp
mov
pop
cli
push
rol
scas
rol
push
js
int
ins
push
ret
jmp
xchg
cmp
push
inc
or
jbe
ret
std
sti
int
stos
push
cmc
sub
femms
scas
sbb
push
js
dec
dec
in
push
daa
int3
sbb
xor
nop
shl
test
cmp
(bad)
inc
scas
mov
jae
xchg
xchg
rcl
mov
in
sub
jns
pavgb
hlt
mov
xor
jno
sub
dec
and
add
(bad)
sbb
or
adc
jecxz
sub
add
fild
and
xor
sub
xchg
adc
sti
inc
xchg
fnsave
push
into
sti
mov
movs
loopne
jp
push
xor
(bad)
xchg
std
sbb
push
das
dec
jmp
gs
or
es
or
mov
shl
mov
loope
cmp
and
in
mov
ins
(bad)
fmul
add
stc
inc
jae
ja
and
das
push
or
adc
cmp
pop
ss
fiadd
out
sbb
in
mov
dec
arpl
jmp
rcr
ins
sbb
mov
aad
cdq
leave
or
mul
jg
repnz
push
or
push
mov
mov
(bad)
lods
jnp
inc
push
mov
or
xor
xchg
ror
push
inc
jle
jecxz
adc
cs
push
inc
(bad)
not
cmovle
cmp
cmp
cmovp
jge
jnp
pusha
daa
and
inc
push
sub
or
xor
push
xor
xchg
icebp
mov
scas
jno
xchg
pop
in
xor
inc
jns
xchg
fdivr
jns
je
popa
mov
sub
ins
jno
xchg
mov
pop
inc
add
xor
(bad)
cmp
jbe
(bad)
xchg
or
cld
loope
in
pop
sbb
test
pop
pop
and
mov
sub
or
mov
pop
or
ins
mov
or
(bad)
pop
pusha
cmp
test
int3
cmp
loop
mov
xchg
outs
idiv
(bad)
mov
mov
iret
mov
in
std
mov
mov
pushf
scas
shr
add
add
sbb
push
nop
push
iret
ret
pop
or
ins
stos
out
xor
cli
push
mov
daa
pop
(bad)
out
push
nop
mov
sub
idiv
aaa
mov
retf
add
enter
mov
arpl
sub
and
sbb
ffree
or
inc
inc
fimul
shl
ret
and
repz
outs
dec
ror
bound
fidivr
jl
mov
fldenv
popf
dec
mov
jg
popa
add
or
adc
dec
iret
les
popf
(bad)
in
add
cmp
sti
pop
jmp
sbb
sbb
movs
adc
cld
in
adc
pop
fadd
scas
cmp
(bad)
iret
sub
arpl
or
sar
xchg
sbb
jnp
loopne
lds
cli
mov
lahf
out
xor
mov
add
or
pop
std
loopne
out
(bad)
(bad)
dec
mov
jecxz
sahf
fdivr
xlat
mov
pop
out
mov
inc
pushf
mov
mov
cmps
sbb
ins
or
sti
xchg
push
pop
pop
xor
in
xchg
(bad)
cs
call
mov
shr
das
jbe
dec
movs
xchg
cmp
mov
outs
in
jo
push
or
dec
cmp
das
scas
jmp
mov
dec
imul
jl
inc
jae
test
add
cmp
test
jb
push
(bad)
ins
xlat
ds
cwde
xchg
pop
mov
pop
dec
loopne
pop
lds
push
rol
pop
test
(bad)
jge
addr16
in
outs
push
(bad)
push
jecxz
std
in
test
xchg
push
add
loopne
lods
lods
add
jmp
(bad)
cmp
xchg
je
jmp
out
(bad)
mov
in
repz
sub
mov
xchg
push
cmp
je
call
sbb
and
pop
push
fs
movs
dec
and
mov
jmp
push
test
imul
mov
aad
pop
sar
xchg
stos
xchg
mov
mov
adc
jl
cmps
scas
push
movs
pop
sbb
mov
push
inc
rol
outs
in
push
test
sbb
mov
sbb
mov
out
pop
loope
popf
cmp
xchg
lock
dec
or
imul
in
mov
or
or
bnd
mov
cmp
cmps
test
les
push
pop
fcmove
jb
pushw
push
adc
js
push
imul
jnp
shl
out
iret
mov
push
ds
call
mov
lods
add
cmp
cmp
or
test
lods
sub
aad
stos
inc
fld
outs
mov
mov
mov
pop
ins
jge
mov
mov
fldenv
ins
repz
cmp
repz
mov
mul
cli
ins
adc
mov
call
or
out
push
lea
adc
sti
or
mov
jb
jb
mov
enter
gs
test
inc
arpl
adc
push
push
test
add
and
mov
mov
adc
icebp
out
inc
cmc
pusha
mov
and
fdivp
jg
dec
dec
fidivr
mov
add
loopne
add
jle
(bad)
sti
sbb
int
sub
bound
in
mov
leave
inc
js
sub
adc
mov
ret
test
in
arpl
cmp
(bad)
jle
mov
fisubr
shl
lods
jge
ss
cmps
scas
ins
out
inc
mov
pop
sub
fnsave
mov
cmc
ret
xor
or
dec
fild
stos
cmp
mov
bound
mov
and
inc
fcomp
(bad)
call
dec
cmps
dec
mov
mov
loop
sub
mov
jmp
imul
cmp
sti
fisubr
adc
mov
test
xchg
out
data16
or
stos
push
(bad)
loopne
in
imul
and
cdq
sub
add
enter
cld
call
pop
loop
or
mov
in
sub
jmp
leave
loopne
sub
hlt
jmp
mov
shl
dec
mov
nop
jge
arpl
dec
stos
xor
jmp
pop
test
xor
in
cmp
mov
xchg
iret
sub
push
jp
sub
add
clc
push
adc
push
sub
cli
int3
sub
(bad)
ja
mov
add
mov
inc
call
cmps
hlt
xchg
mov
je
pop
cmp
cmp
in
jno
call
fstp
mov
inc
leave
movs
enter
shr
or
mov
lods
call
retf
xor
test
mov
xor
jnp
lds
push
or
jl
dec
and
xor
mov
cmp
mov
ret
int3
inc
and
hlt
jmp
sbb
in
mov
repz
int
pop
call
cmp
pop
cmp
add
iret
bound
ins
shl
and
call
lds
pop
ins
fwait
into
mov
dec
jbe
cdq
into
(bad)
(bad)
(bad)
arpl
lods
lea
ret
je
in
push
xor
leave
test
jno
pop
imul
mov
adc
xor
std
scas
sbb
(bad)
inc
out
and
outs
int
lock
retf
jle
mov
aas
xor
call
pop
sbb
jnp
sub
mov
sti
in
ficomp
mov
pop
inc
dec
into
pusha
jmp
mov
sbb
out
cmp
clc
and
sbb
pop
jge
es
into
sbb
rcl
sbb
mov
jle
lock
and
out
nop
mov
push
push
add
cmp
mov
out
add
or
cld
xor
xor
in
add
jne
ror
push
rol
sub
push
mov
xchg
loopne
xor
(bad)
jb
or
dec
daa
inc
xchg
out
xchg
mov
fisttp
(bad)
or
cmp
clc
(bad)
into
dec
(bad)
(bad)
fsubr
pop
shl
lea
push
cwde
popf
push
or
jl
mov
cmc
mov
das
sub
inc
jnp
aam
out
shl
mov
adc
ret
mov
jp
mov
repnz
cli
das
push
sub
cmp
push
add
into
cmp
mov
or
or
pop
mov
and
xor
daa
fild
mov
in
inc
cli
mov
mov
(bad)
jg
fdivr
lea
cmp
push
repnz
(bad)
sar
scas
lods
mov
mov
mov
shr
add
scas
xor
and
and
pusha
jnp
ins
xchg
(bad)
jmp
sbb
add
fimul
jns
mov
aaa
cmp
ins
and
mov
std
mov
nop
push
adc
xchg
xor
popa
sub
push
push
sti
adc
cwde
div
jnp
inc
mov
or
pop
cli
or
pop
push
sub
retf
mov
add
stc
pop
pop
mov
in
xor
ss
mov
mov
loope
cmp
inc
xlat
push
(bad)
jle
sbb
leave
sbb
ds
mov
mov
sar
xchg
jo
sub
loopne
jg
icebp
popf
dec
test
sub
mov
dec
jbe
adc
cwde
add
lods
sbb
cmps
pop
in
stos
push
rol
or
and
dec
and
outs
(bad)
call
sub
in
call
cmp
mov
icebp
mov
or
inc
retf
or
dec
dec
add
retf
or
arpl
jmp
jo
mov
mov
mov
pop
(bad)
jmp
sbb
pushf
outs
jmp
call
mov
out
and
stc
push
xchg
pop
mov
cmp
dec
dec
dec
add
das
mov
jns
jmp
and
adc
out
sub
mov
and
ss
jnp
sbb
dec
and
xor
lds
test
cmp
sbb
pusha
mov
loope
jno
add
idiv
enter
dec
jl
mov
pop
(bad)
mov
adc
dec
add
and
xchg
les
push
fdiv
jge
push
add
ins
push
sub
fsubr
xor
push
mov
mov
xchg
mov
das
fadd
adc
dec
mov
cmp
ds
push
jne
jl
pop
mov
dec
fs
jae
loop
jl
ins
stos
and
xlat
cmp
lea
scas
das
sbb
les
shr
ds
ja
icebp
out
test
mov
cmps
(bad)
and
add
push
and
xlat
add
ja
jb
arpl
lock
push
sub
pop
(bad)
xchg
mov
lock
outs
jmp
ffree
xchg
test
mov
inc
sbb
xchg
cli
data16
outs
out
dec
ss
mov
sub
jbe
fst
fs
and
clc
cmc
pushf
outs
add
loope
xor
shr
mov
cmp
dec
cmc
scas
pop
scas
sbb
fidivr
fsubr
cmp
scas
xlat
sub
call
ja
xchg
out
cs
mov
jne
and
lods
int
clc
dec
xchg
xchg
sar
fidivr
sub
jns
pop
fwait
loop
in
fild
int
or
repz
pop
mov
dec
jmp
pmaddwd
loopne
and
ins
out
shl
push
nop
test
inc
mov
test
aam
inc
jp
in
mov
shl
xchg
sbb
iret
sbb
ds
pop
idiv
xor
retf
add
stos
mov
pop
mov
dec
mov
adc
sub
retf
fdivr
add
mov
bound
call
loope
and
fild
xor
mov
pop
pop
adc
push
lock
or
adc
mov
jg
retf
sbb
call
imul
clc
shl
aam
adc
xchg
sbb
push
push
mov
mov
adc
dec
sahf
and
repz
jmp
std
sbb
push
nop
or
fdivr
add
push
sub
dec
test
psllw
xchg
inc
test
xor
cmp
mov
mov
nop
jns
add
xchg
inc
out
inc
or
xchg
adc
and
inc
mov
aas
or
push
rcl
push
xor
cmc
js
xor
psrlq
out
ret
lea
sub
adc
lahf
cmc
imul
(bad)
jmp
dec
pmaxub
mov
push
loop
inc
scas
jl
test
hlt
into
in
jnp
inc
mov
call
inc
hlt
repnz
mul
sub
jno
repz
pop
dec
sbb
ret
mov
xchg
fidiv
and
stc
mov
(bad)
in
jbe
lahf
push
jle
in
out
sub
mov
push
les
mov
iret
add
dec
js
sahf
movs
mov
fs
jmp
add
paddusw
fcmovbe
inc
sub
sbb
xor
(bad)
pop
mov
adc
in
mov
aad
movs
aaa
fcmove
cld
ds
scas
xor
lahf
push
loope
push
jne
(bad)
sbb
jno
dec
mov
(bad)
mov
mov
dec
fbld
push
lods
sahf
out
adc
push
pop
fdiv
cmp
jne
(bad)
jl
movs
push
int3
sbb
fistp
inc
shr
pop
sbb
jle
addr16
lahf
xchg
mul
jb
(bad)
lea
adc
jmp
mov
les
das
inc
jg
loope
jns
lahf
lods
hlt
inc
pop
pop
bound
or
adc
fidivr
add
shl
cmps
aaa
cmps
sub
mov
call
adc
push
sbb
sti
inc
shl
mov
mov
imul
loopne
xchg
pop
std
xchg
dec
and
stos
jnp
retf
inc
jae
test
cmp
push
pop
out
stos
scas
adc
inc
ds
test
popw
xchg
inc
dec
and
cwde
or
stos
gs
dec
inc
ja
out
pop
pop
cmp
dec
cli
je
pop
jne
mov
cwde
idiv
sub
(bad)
jmp
retf
xchg
push
(bad)
int3
or
out
push
fwait
mov
dec
pusha
shl
push
loop
mov
push
mov
leave
push
enter
xchg
(bad)
scas
jne
sahf
lea
cmp
jmp
inc
retf
in
aas
cmc
aaa
or
inc
lods
push
dec
cs
and
pop
xchg
mov
out
dec
mov
fnsave
sub
xchg
mov
div
inc
push
int3
mov
icebp
(bad)
dec
mov
push
cmps
cli
and
inc
cld
jmp
rol
mov
pop
adc
push
cmp
push
cwde
pop
fidiv
std
sbb
fisub
lds
xlat
movs
outs
inc
and
sub
inc
dec
repnz
push
(bad)
int3
inc
fmul
inc
jle
mov
mov
mov
nop
int
mov
call
leave
sti
inc
push
imul
jecxz
dec
ror
daa
stos
dec
xchg
or
in
xchg
addr16
mov
fwait
cbw
mov
jp
and
mov
loopne
movs
and
add
mov
mov
outs
rcr
mov
xor
sahf
icebp
adc
std
sub
pop
cmp
jl
rol
xchg
jecxz
or
xor
aas
cmp
rol
dec
push
(bad)
stc
cli
iret
clc
arpl
or
mov
outs
lods
mov
fiadd
das
push
adc
cld
xor
add
sub
and
lock
mov
xchg
or
jbe
fldenv
jge
and
mov
test
hlt
daa
inc
mov
ins
mov
ss
out
cs
in
pop
dec
sbb
ins
rcr
in
in
xor
scas
pop
mov
scas
(bad)
adc
mov
mov
sub
or
cmp
push
enter
mov
stc
daa
pusha
not
cmp
and
(bad)
or
push
bswap
or
inc
push
push
into
mov
mov
or
push
inc
test
ds
xchg
mov
mov
inc
jnp
lea
pop
call
mov
jl
cmc
dec
inc
push
fidivr
adc
xor
xchg
loope
pushf
mov
jno
mov
daa
sti
inc
fnstcw
or
push
rol
pop
(bad)
movs
retf
jns
cmp
(bad)
lahf
daa
out
mov
test
push
scas
pop
ins
stos
out
mul
cmp
div
push
lock
leave
xor
adc
push
push
push
arpl
xor
cmp
js
pusha
cmc
call
pop
mov
repz
xchg
pop
stc
cmc
(bad)
gs
push
pop
or
mov
mov
lods
sbb
das
lahf
sbb
xchg
outs
imul
dec
inc
jns
xchg
jno
or
mov
jnp
sub
inc
jp
mov
leave
sbb
xchg
push
int3
enter
(bad)
leave
pushf
inc
sbb
mov
out
test
and
sbb
mov
cmps
xchg
adc
sti
push
das
mov
sub
mov
pop
movs
in
cmps
pop
jae
sub
mov
push
push
cli
xchg
scas
jmp
dec
ss
or
dec
jp
in
pop
sub
mov
out
cmp
mov
psllw
or
fdivp
fwait
(bad)
lods
test
adc
int
loope
or
jne
rcl
xchg
iret
xor
jle
stos
and
pop
ror
push
pop
pop
(bad)
or
pop
mov
aaa
mov
and
sbb
and
fisttp
cmp
sahf
mov
js
shl
outs
push
xchg
and
sub
jge
inc
xor
xchg
out
clc
and
adc
push
loop
xchg
stc
dec
adc
mov
daa
fadd
pop
fldcw
mov
mov
js
int
push
mov
inc
jnp
fnsave
das
les
retw
pop
aad
stos
test
or
and
pop
inc
inc
mov
sbb
xchg
iret
and
repnz
or
loopne
add
fnstsw
outs
inc
xlat
je
out
nop
enter
test
push
xchg
mov
xchg
rcr
sub
out
jp
jp
mov
push
sub
bound
mov
adc
mov
mov
nop
sahf
add
mov
pusha
out
inc
push
xchg
jmp
xor
sbb
mov
mov
fnsave
mov
std
pop
inc
mov
fs
sbb
aad
daa
movs
sar
inc
int3
push
mov
xor
add
cmp
sti
shr
mov
movs
pop
inc
lds
push
or
sub
in
mov
in
or
shr
xchg
push
in
add
(bad)
aaa
popf
mov
fidivr
adc
cmp
je
movs
ins
enter
scas
vpshlb
or
neg
mov
adc
adc
pushf
loop
xchg
mov
test
xor
push
push
test
fmul
and
mov
mov
ds
dec
adc
sar
ret
pop
fst
jbe
imul
test
push
lods
(bad)
imul
push
in
push
dec
pop
push
ret
add
sbb
nop
add
mov
stos
mov
in
push
loop
jmp
(bad)
test
mov
mov
call
push
pop
in
fist
outs
cmp
push
inc
call
dec
xchg
fnstsw
mov
mov
mov
pop
add
sti
push
imul
dec
lods
or
sbb
adc
sub
adc
(bad)
adc
lods
rcl
sub
push
pop
push
xor
dec
pop
call
mov
add
out
imul
lahf
xor
adc
pop
and
inc
adc
xchg
arpl
test
and
and
in
mov
push
sti
xchg
jle
inc
(bad)
ffreep
std
pop
(bad)
jl
or
mov
into
das
push
jo
push
test
mov
mov
icebp
stc
(bad)
pop
xor
aas
push
mov
mov
test
lods
arpl
fild
xchg
aam
xchg
mov
(bad)
cli
inc
fucomi
mov
daa
fnstsw
mov
lods
xchg
rcl
push
pop
ror
pop
fs
ror
stc
retf
dec
ret
sbb
mov
rcr
hlt
push
add
pop
fidiv
mov
call
sbb
sub
jecxz
xchg
pop
sbb
push
inc
movs
fs
movs
inc
mov
adc
cs
push
cmp
mov
int
pop
sti
(bad)
or
imul
fwait
push
push
out
push
js
repz
inc
jno
repz
mov
js
mov
xchg
shr
loop
fcomp
test
xor
inc
sahf
pop
xor
or
mov
aad
(bad)
ins
ins
int3
aad
mov
je
(bad)
les
or
dec
cmc
fadd
imul
rcr
xor
sbb
arpl
push
dec
mov
jg
fcmovu
jns
das
cmps
popf
retf
clc
hlt
je
inc
push
cmp
xchg
xor
ss
push
push
xor
test
inc
push
mov
fidivr
rcr
mov
ds
pop
fdiv
dec
rcl
ss
loop
xor
and
movs
push
cmp
int3
inc
ror
xor
mov
aam
jns
push
test
(bad)
jb
add
add
scas
lea
pusha
ret
icebp
cmp
jbe
leave
test
xlat
or
and
xchg
ins
lods
or
fld
sti
jp
jne
adc
or
sub
adc
sbb
jmp
mov
retf
mov
and
test
in
cmp
cwde
into
xchg
xchg
sub
adc
(bad)
add
das
dec
fidiv
enter
retf
jnp
push
std
fidiv
pop
jbe
int
(bad)
jnp
in
dec
or
(bad)
sbb
inc
pop
or
jle
cmp
and
xchg
fadd
call
cmp
inc
loope
mov
jne
in
mov
ins
dec
test
jmp
dec
xor
(bad)
mov
(bad)
cmp
cwde
jp
pop
cld
das
leave
cmp
cmc
test
repnz
rcl
fs
out
cdq
mov
inc
xchg
push
mov
mov
jb
or
scas
xor
inc
jl
jns
adc
xor
dec
fimul
dec
fadd
mov
sbb
pop
inc
fisttp
jp
cmp
push
cmp
and
push
fs
dec
icebp
retf
std
imul
xchg
mov
aaa
pop
cmp
mov
je
div
and
add
cmp
mov
fdiv
imul
dec
imul
adc
push
fistp
out
jo
(bad)
adc
sub
mov
or
test
fisub
jbe
mov
pop
outs
iret
xchg
and
test
pop
inc
xchg
lods
mov
mov
scas
push
cmp
adc
loope
int
mov
jb
in
sub
ret
xor
inc
and
cwde
adc
mov
aad
xchg
bound
sub
mov
and
leave
ror
mov
lds
mov
shl
and
lahf
movs
cmp
mov
sub
call
aas
jmp
and
xchg
fcmovbe
push
fld
push
add
fadd
xor
sub
aas
xchg
call
addr16
pop
sahf
test
add
fist
mov
add
mov
lahf
push
jg
and
jne
mov
adc
jle
daa
stc
out
mov
pop
test
lds
inc
adc
mov
(bad)
das
in
mov
xchg
cmc
int
xchg
add
xor
inc
dec
repnz
(bad)
push
jns
jle
dec
cmp
pop
jbe
iret
in
add
lds
or
repz
outs
adc
mov
arpl
lea
pop
adc
inc
ins
ror
into
xchg
test
iretw
xor
scas
pop
jbe
out
icebp
das
jmp
push
xor
sbb
jge
ror
xor
repnz
inc
pop
adc
push
out
dec
aam
pushf
es
push
xchg
mov
stc
inc
fidiv
sub
cmp
out
leave
clc
cmp
retf
stos
dec
mov
inc
imul
xor
test
or
jno
adc
inc
push
mov
rcr
(bad)
clc
jns
ins
sar
enter
nop
es
ins
add
adc
mov
xchg
ja
rol
mov
arpl
pushf
sub
xor
hlt
mov
inc
push
or
jl
xor
lock
xchg
div
int3
cmp
stos
imul
xchg
or
ror
retf
in
pop
pushf
push
xlat
cmp
jne
inc
test
sbb
imul
jnp
into
ds
cmp
outs
jo
sbb
dec
ins
sbb
in
mov
pushf
adc
mov
fs
retf
pop
sub
lods
bound
cdq
test
sbb
adc
(bad)
aaa
and
xor
push
js
push
adc
sahf
jmp
in
lock
movs
pop
repz
cdq
retf
mov
loopne
inc
int
(bad)
push
div
fistp
jg
jo
mov
add
mov
sub
or
pop
push
dec
aam
push
xor
mov
inc
mov
sub
popf
mov
and
sub
adc
in
pop
mov
lea
pop
pop
retf
mov
popa
dec
stos
push
mov
or
fwait
stos
fmulp
xor
pop
daa
mov
mov
cmp
inc
cmps
es
jl
data16
mov
mov
jg
jge
jmp
or
jecxz
jp
mov
mov
fsubr
stos
fwait
xor
fcomp
lods
and
cwde
pop
retf
jmp
mov
push
jnp
push
jl
mov
jne
mov
jnp
ins
sbb
cld
sbb
cmc
adc
mov
fwait
jle
xchg
adc
call
cmps
inc
(bad)
or
and
outs
sub
mov
push
loope
cld
in
in
push
lock
pop
and
leave
mov
adc
mov
iret
aad
ins
mov
(bad)
addr16
rcl
int
mov
sub
pushf
push
inc
jle
outs
mov
outs
shl
push
call
xor
sar
(bad)
sbb
imul
push
mov
jnp
xchg
pop
and
dec
ins
test
or
fs
and
retf
daa
mov
(bad)
fbld
dec
in
in
xor
sbb
mov
repnz
xchg
dec
add
cmp
jns
sbb
jmp
das
lea
out
xchg
lock
xchg
shl
(bad)
(bad)
add
adc
(bad)
xchg
int3
(bad)
mov
test
pusha
add
outs
xlat
pop
loopne
daa
jmp
mov
mov
push
jne
out
push
iret
xchg
outs
popa
dec
fwait
js
(bad)
push
dec
daa
sar
retf
in
and
push
mov
leave
pop
add
call
cdq
fs
xchg
mov
mov
adc
jmp
fucomi
rcr
test
sbb
mov
ret
push
fidivr
mov
test
sub
cmps
aam
xor
icebp
jb
push
test
xor
mov
stos
iret
test
fiadd
adc
and
cmps
push
rcr
inc
sbb
mov
retf
imul
mov
add
movs
pop
dec
in
push
scas
test
enter
mov
and
test
sub
cs
mov
adc
ins
fs
add
jne
arpl
adc
push
bound
scas
push
(bad)
pop
adc
cld
push
xchg
xor
xchg
pop
mov
mov
push
push
mov
dec
or
jns
inc
outs
retf
dec
sub
lock
sbb
loop
mov
fnsave
fwait
inc
pushf
dec
stos
pop
jne
sbb
inc
imul
push
mov
ins
mov
sub
shl
es
sahf
jb
mov
xlat
add
test
inc
ja
call
push
sbb
les
call
sbb
and
(bad)
pusha
call
retf
cmp
xchg
adc
pushf
push
mov
pop
cmp
xchg
mov
in
fmul
mov
sub
cmc
add
sub
sbb
sbb
sahf
mov
push
xor
mov
movs
jl
out
aad
sahf
xlat
adc
cmp
or
jbe
cli
mov
repz
repz
xor
and
stc
leave
pop
sbb
daa
sets
in
mov
das
pop
cmp
pop
add
mov
sbb
icebp
cmp
in
sbb
mov
xchg
or
cwde
jmp
cld
out
(bad)
hlt
mov
jbe
imul
sbb
jg
(bad)
xchg
mov
mov
les
cmp
int
mov
ja
xor
lods
push
push
es
push
push
xor
scas
ret
adc
test
imul
sbb
inc
xchg
out
mov
jb
outs
pop
jp
push
sbb
lock
iret
push
test
movs
ja
mov
mov
pop
mov
scas
and
push
fs
or
jne
arpl
popf
inc
sti
imul
add
xor
pop
dec
push
and
jle
hlt
push
mov
out
and
lods
mov
push
add
int
(bad)
arpl
stos
imul
ins
test
mov
repz
inc
test
je
adc
sbb
mov
ficom
clc
push
mov
cmps
sbb
int3
dec
push
(bad)
xchg
aad
jb
jge
pmuludq
js
sbb
mov
fwait
push
and
test
xchg
jecxz
mov
je
dec
cwde
sub
xor
xchg
stos
push
jne
xlat
add
xchg
dec
sahf
ss
loopne
aam
add
(bad)
rcl
inc
cmp
jl
jle
push
dec
push
xor
es
or
mov
ja
jmp
fs
add
mov
fcmovne
int3
mov
jecxz
arpl
jg
cmps
push
scas
cs
sbb
aad
dec
icebp
sbb
or
mov
(bad)
fmul
jns
mov
push
inc
and
adc
and
aaa
cmps
mov
retf
add
dec
inc
cmp
out
jecxz
rol
mov
call
into
dec
mov
sub
movs
test
and
out
iret
jno
sub
scas
or
inc
in
pop
mov
pusha
dec
imul
gs
popf
xchg
xchg
sbb
jae
in
popf
jb
and
scas
cmc
mov
jne
and
cmp
cmps
arpl
fldenv
mov
push
data16
cmc
sub
mov
add
and
xor
pop
xor
pop
lds
or
stos
mov
add
cdq
xor
push
icebp
lods
inc
dec
ins
(bad)
jbe
shr
push
rcl
mov
out
add
xrelease
out
out
sub
xchg
outs
into
cdq
arpl
or
cmp
dec
mov
pop
xchg
push
stc
inc
mov
ja
mov
sub
jmp
jl
fisub
mov
aas
dec
rol
stos
xchg
sub
adc
out
ret
cmp
add
lea
pop
xor
push
test
mov
inc
mov
or
jle
nop
mov
rcr
or
and
(bad)
jmp
push
stos
mov
mov
aad
iret
adc
retf
ins
aaa
cmp
mov
(bad)
aam
mov
in
call
push
inc
mov
dec
and
jg
movs
inc
adc
test
sbb
cvtps2pi
rcl
stos
dec
retf
fdiv
xchg
pusha
lea
jmp
sahf
xchg
cmp
cmp
mov
push
in
sbb
inc
pop
ins
adc
inc
sbb
stos
(bad)
or
shl
push
in
iret
adc
sbb
scas
test
sahf
cmp
dec
adc
mov
lahf
adc
sbb
jl
out
idiv
push
and
sbb
push
es
pop
in
aad
inc
ss
pop
cmp
(bad)
xor
aad
inc
push
arpl
inc
sub
jp
stos
xor
aad
stos
xchg
icebp
add
idiv
push
mov
xor
cmc
xchg
imul
push
jge
call
ds
xchg
adc
int3
cmc
sar
xchg
stos
(bad)
repz
jl
ds
jmp
mov
cmps
or
ins
jo
mov
rcr
xor
or
movs
call
dec
in
out
jne
(bad)
add
push
repz
ret
mov
inc
iret
jb
xchg
ds
jno
push
(bad)
ds
adc
fs
jbe
(bad)
in
in
mov
pop
jns
je
outs
out
xor
xor
pusha
jns
adc
push
and
and
mov
cmc
jno
xor
pop
iret
jmp
jecxz
pop
shl
jg
push
test
nop
ins
scas
add
adc
inc
jp
stos
ds
cdq
sub
mov
in
sti
js
mov
es
or
in
pop
loope
mov
dec
loopne
jmp
(bad)
jmp
sub
fimul
adc
fsubr
sbb
cmp
loope
push
xchg
test
cmp
mov
js
in
add
pop
aam
out
xchg
mov
jg
movs
pop
pop
movs
adc
int3
rol
aam
mov
daa
jge
loop
sub
in
scas
jmp
jle
loop
mov
scas
popf
inc
dec
mov
jmp
or
adc
popf
movs
mov
cmp
or
popfw
push
xchg
daa
dec
xchg
mov
test
fstp
sbb
push
xor
mov
lds
movs
mov
push
xor
mov
in
fsub
outs
in
or
mov
pop
scas
sti
data16
sbb
mov
daa
mov
add
mov
mov
in
mov
not
jbe
sub
les
fist
pop
or
adc
lahf
or
leave
cwde
pop
inc
fdivp
jno
adc
inc
inc
test
and
ror
scas
mov
sub
or
cmps
or
or
adc
je
fwait
into
pop
push
xchg
sub
imul
mov
dec
scas
mov
dec
cli
clc
pusha
pop
lods
dec
stos
cmp
inc
xchg
sbb
in
scas
ja
push
clc
in
dec
stc
sar
dec
pop
dec
inc
je
jb
hlt
ret
mov
sbb
adc
sub
ds
sub
xor
nop
popa
aas
fistp
xchg
movs
mov
xchg
in
clc
cmp
stos
xchg
jp
push
jns
cmp
test
scas
imul
ins
test
adc
mov
jne
adc
mov
push
dec
div
jmp
jmp
dec
lock
pop
pop
std
and
xchg
inc
or
cmp
xor
jns
xchg
adc
pop
adc
loop
pop
jae
aam
add
inc
push
clc
wbinvd
shl
call
std
push
xchg
imul
cmp
push
rcl
mov
sub
bound
pop
xchg
test
jmp
jp
lds
jle
loope
sub
nop
mov
jns
iret
aad
dec
sar
rcl
jbe
xchg
sub
mov
rcr
sbb
or
gs
in
mov
movs
lods
mov
jb
bound
sbb
test
cmp
int
pop
jle
fild
sub
aad
jmp
addr16
push
mov
mov
enter
int
rcr
dec
mov
sbb
(bad)
stos
jmp
retf
xlat
inc
sub
or
xor
xor
cmp
cwde
lds
lahf
add
pop
sbb
mov
add
xchg
push
sub
xchg
mov
cld
sub
(bad)
cmp
sub
inc
push
xchg
inc
pop
ret
(bad)
fistp
rcl
sbb
std
push
sub
ret
cli
pop
mov
outs
mov
outs
enter
or
xchg
jno
sti
inc
xchg
es
divps
cmp
loopne
(bad)
ds
icebp
imul
aad
movs
add
outs
cmp
inc
adc
movs
int
dec
sbb
sub
add
jl
hlt
out
push
or
xchg
mov
clc
outs
mov
xchg
mov
inc
cmp
cwde
push
jne
inc
push
pop
in
pusha
imul
or
les
aaa
data16
adc
lahf
int3
sbb
arpl
sub
retf
dec
jg
push
sbb
out
lock
cld
adc
idiv
out
shr
ins
mov
lds
outs
mov
cmps
stos
mov
jno
in
iret
das
out
aad
mov
jecxz
shl
call
cmp
xchg
cmc
push
jmp
ins
cmps
or
sub
pushf
rcr
jle
int
pop
test
les
sbb
leave
sub
sbb
std
scas
rcr
pop
push
sub
icebp
into
prefetch
or
psllq
add
jge
cmps
(bad)
jnp
imul
mov
fs
cmp
sbb
sbb
fidiv
and
stos
pop
hlt
xchg
adc
jae
cmp
inc
sub
outs
dec
mov
mov
push
jl
mov
movs
loop
mov
xor
ins
pop
call
jnp
dec
dec
pop
std
cli
iret
inc
mov
xchg
pusha
stos
push
cmp
adc
(bad)
and
ds
jmp
jnp
push
daa
xchg
sbb
neg
add
daa
out
fstp
sbb
mov
sti
mov
mov
icebp
(bad)
(bad)
jmp
ins
les
loopne
fwait
sbb
cmps
inc
inc
xchg
fld
ret
movs
cmp
hlt
in
pop
daa
push
popf
loopne
out
xor
push
inc
mov
push
movs
(bad)
cmc
rcr
mov
push
pop
push
loopne
in
cmp
pslld
pushf
cmc
xchg
aaa
jmp
sti
cmp
inc
ds
mov
addr16
mov
mov
or
ins
push
or
cs
stos
test
mov
repnz
sti
mov
loope
xchg
scas
sbb
ins
adc
(bad)
jne
bnd
out
dec
mov
fcomi
ss
dec
mov
xchg
jo
xchg
arpl
mov
out
icebp
mov
dec
xchg
or
dec
retf
xlat
xor
add
(bad)
test
(bad)
ins
mov
fisubr
dec
xchg
outs
mov
bound
adc
sbb
sbb
mov
retf
sbb
loopne
stos
mov
out
inc
gs
daa
dec
std
ja
adc
xor
jne
jae
inc
cmp
out
shr
mov
jno
jmp
push
xchg
iret
jb
cmps
pushf
push
(bad)
sub
fisubr
sar
jle
call
mov
rol
xor
in
dec
movs
push
dec
pop
aas
or
mov
call
mov
dec
pop
mov
add
aaa
(bad)
and
ja
sbb
jo
outs
xchg
adc
jl
or
inc
mov
push
dec
fadd
xor
push
(bad)
mov
pop
sub
mov
push
mov
sub
xor
push
inc
inc
in
popa
or
push
test
xchg
xchg
mov
sub
xchg
push
(bad)
test
xor
xor
mov
lds
cs
movs
inc
xchg
xor
js
mov
adc
adc
lahf
in
xor
test
cmp
repnz
(bad)
and
out
add
cmp
xchg
(bad)
into
sbb
inc
shl
xchg
add
dec
push
jb
enter
fs
jo
lods
rol
pop
dec
add
push
addr16
mov
sbb
pop
inc
sti
loopne
mov
or
pop
je
xchg
into
xchg
les
retf
mov
and
mov
push
mov
mov
xor
push
and
into
imul
and
out
push
push
nop
xor
xchg
dec
xchg
and
mov
sbb
dec
ins
fdiv
call
adc
pop
mov
jnp
push
mov
lea
sbb
cmps
ror
push
inc
iret
outs
jae
dec
stc
das
mov
mov
sub
jo
xchg
or
push
stos
cmps
add
push
or
or
fcom
jns
mov
pusha
es
jns
test
adc
fcom
adc
push
mov
and
ret
sub
dec
mov
xchg
jp
xchg
ficom
stos
adc
movs
mov
out
xor
mov
inc
and
xor
test
retf
out
push
sbb
add
shl
cdq
ins
ds
fdivr
mov
adc
fisubr
(bad)
dec
mov
and
mov
retf
inc
pop
bound
xor
jp
mov
xor
push
push
xchg
lahf
pop
das
xchg
mov
inc
loop
mov
push
call
sub
add
mov
imul
mov
add
sub
adc
mov
jl
dec
xor
inc
adc
or
in
dec
xor
(bad)
(bad)
retf
movs
mov
cwde
outs
fisubr
inc
mov
jne
jmp
mov
xchg
(bad)
mov
or
inc
in
in
sbb
mov
pop
fstp
cmps
movs
hlt
jmp
push
and
and
retf
pop
fadd
pushf
add
add
dec
ins
loop
jecxz
enter
mov
imul
push
(bad)
push
pop
dec
inc
add
fmul
into
popa
lods
je
xor
push
push
xlat
outs
jg
inc
ins
rcl
aas
ret
mov
dec
out
and
push
adc
push
pop
mov
sbb
mov
sub
xchg
push
mov
pop
mov
mov
leave
and
add
add
and
aad
xor
mov
lea
jmp
hlt
(bad)
pusha
test
cmp
daa
cmp
stos
cmp
ins
inc
adc
out
pop
pushf
sahf
lock
and
xchg
sub
shl
paddw
sub
sbb
aam
mov
pop
outs
jns
xchg
add
mov
cmp
jge
aam
fldcw
ror
inc
retf
add
shr
add
sbb
movs
xor
push
cmps
mov
or
ja
fdiv
xchg
dec
jmp
jb
out
sub
mov
div
test
sbb
add
prefetch
test
pop
cmps
ins
daa
ins
jnp
aam
xor
add
je
hlt
cmp
or
outs
in
fwait
xchg
addr16
mov
xor
jmp
sbb
or
jge
out
adc
mov
xor
mov
or
cmc
mov
loope
popa
ss
fdivr
xor
xchg
or
rcr
mov
popa
and
or
dec
ins
inc
sbb
mov
lods
in
jle
push
adc
push
mov
xor
cmp
mov
out
les
sbb
jecxz
jl
call
fwait
sbb
inc
cdq
repz
rcl
test
inc
push
sub
jb
xlat
stos
movs
jns
cmp
push
outs
ret
mov
xchg
(bad)
shr
mov
jl
(bad)
push
mov
lds
pop
mov
ret
mov
fs
and
pop
test
lahf
into
test
pop
xor
dec
push
mul
xchg
int
add
cwde
call
mov
movntq
in
movhps
jmp
arpl
inc
cld
mov
(bad)
lock
inc
sub
dec
mov
iret
or
lods
sar
sar
inc
pop
and
lahf
or
bnd
add
test
outs
adc
pop
popa
ror
jbe
js
add
movs
aas
pusha
or
call
aas
in
hlt
jg
rcl
xor
popa
push
push
retf
sti
ds
popa
sbb
cld
fidiv
mov
jne
sub
in
int
pop
(bad)
stos
rcr
clc
bound
pusha
add
mov
mov
cmp
sub
stos
push
es
xchg
sub
jno
pop
ins
mov
mov
xchg
pop
pop
jo
js
sub
pop
fbld
hlt
leave
loop
jg
int3
loope
push
cdq
retf
fadd
repnz
(bad)
nop
call
shr
repz
cwde
aam
fldenv
mov
or
ins
and
fmul
and
pop
cdq
mov
inc
outs
(bad)
cmc
inc
jmp
dec
xchg
les
repnz
pop
lds
inc
bound
das
popa
add
lds
sub
mov
xchg
mov
in
scas
clc
lods
ja
dec
xor
dec
loopne
and
call
jno
xor
and
sub
test
stos
jae
loope
mov
or
jmp
sbb
inc
inc
cld
xor
popa
or
push
int
xchg
xor
and
mov
data16
jmp
loop
inc
pop
pop
out
(bad)
rcr
jge
inc
push
test
in
jecxz
sbb
stc
icebp
loope
sbb
dec
fs
fcmovnu
add
data16
in
fisubr
inc
add
icebp
neg
mov
mov
js
fcomi
inc
dec
xor
sbb
xor
out
cmp
sub
or
ins
adc
inc
cwde
pushf
jg
jmp
sub
fidivr
data16
adc
inc
pop
mov
jo
inc
sbb
adc
repz
or
mov
cmp
cmp
and
push
push
icebp
push
daa
jo
mov
xchg
cdq
jl
fwait
sub
(bad)
and
push
xor
xor
mov
std
jbe
inc
loope
mov
jbe
dec
and
lock
jns
in
and
dec
lock
pop
add
cwde
cmp
cmps
test
bnd
xchg
xchg
jg
jge
push
shr
mov
(bad)
mov
mov
inc
inc
dec
stos
adc
mov
inc
mov
push
arpl
push
mov
data16
pusha
xor
xor
xor
(bad)
ds
mov
push
xchg
inc
out
idiv
add
pop
pop
stc
hlt
movs
in
mov
xchg
lock
sub
mov
jg
xor
popa
test
dec
and
icebp
loope
imul
cmc
xchg
jmp
mov
in
(bad)
xchg
in
pop
in
cmp
push
imul
shl
outs
stos
cli
in
add
shl
leave
xor
repz
stos
lods
cli
jle
dec
cmp
nop
sub
pop
jo
dec
fs
fcom
repnz
push
cmp
and
sbb
push
push
sbb
int
push
clc
out
into
mov
lea
nop
adc
inc
jl
mov
aaa
pop
mov
sbb
ficomp
lods
and
fadd
jo
sti
jge
mov
cld
not
lock
cwde
jp
jnp
sbb
aas
xchg
mov
add
sbb
scas
add
icebp
push
scas
(bad)
(bad)
xchg
add
mov
jmp
aaa
push
pop
mov
bound
mov
xchg
das
jmp
ins
cmps
pop
scas
mov
scas
mov
xor
xor
xor
and
dec
sar
movs
mov
sub
cmps
xchg
ins
clc
push
test
ret
sbb
xor
or
sbb
fdiv
jge
mov
loopne
outs
mov
cmc
jecxz
push
jl
mov
adc
sub
pop
add
cmp
in
xchg
cmp
das
pop
dec
and
cmp
imul
inc
xchg
cmps
fs
shr
ins
sbb
add
push
dec
or
or
mov
not
xchg
cmps
cmp
lods
test
mov
xchg
push
xor
fwait
enter
movs
jb
dec
ss
jbe
sbb
stos
and
jge
retf
pop
shl
pop
arpl
rcl
retf
bound
sbb
push
(bad)
in
lea
fcomip
jg
fsub
mov
mov
or
in
cmps
imul
sbb
fs
jge
cld
shr
adc
in
test
adc
jno
retf
xor
and
loope
inc
retf
leave
icebp
movs
fbstp
mov
dec
outs
mov
adc
in
adc
xor
pop
mov
shl
push
iret
aad
ret
mov
inc
test
push
lea
and
sub
push
retf
dec
add
xor
ja
loope
push
cmp
int
bound
push
arpl
or
out
sub
push
dec
pop
inc
cmps
adc
fdivr
shr
lea
popf
sub
ja
ret
pop
sub
sbb
mov
dec
fisubr
(bad)
test
fadd
sub
hlt
mov
call
iret
cmp
push
jno
pop
fsubr
movs
enter
inc
rol
cmp
jnp
rcr
push
add
std
pop
(bad)
cs
arpl
pop
push
cmp
inc
pop
pop
pop
test
iret
fs
and
aaa
push
xchg
push
cmp
cmc
sbb
and
jg
mov
mov
dec
jl
dec
jmp
loop
jb
add
or
outs
or
jb
mov
xchg
lock
(bad)
xor
push
loope
mov
retf
jnp
jnp
addr16
push
mov
icebp
sahf
lock
popf
fwait
cs
xchg
je
ror
test
mov
mov
or
data16
stos
iret
xchg
cs
jl
idiv
into
jb
pop
loop
pop
fild
imul
xor
lds
and
outs
lahf
dec
add
jecxz
pop
out
ror
ret
ja
cmps
add
ja
sbb
cmp
push
loop
mov
hlt
lock
push
test
xchg
shl
sub
rol
div
fstp
imul
pop
sub
adc
pop
jmp
mov
mov
in
aam
cmp
mov
popf
popf
pop
movs
ins
scas
push
pop
mov
jo
jp
cwde
sbb
mov
mov
nop
inc
rcr
mov
cmp
inc
cmps
mov
xchg
cli
aad
sub
or
es
xchg
in
das
clc
mov
and
sti
pop
mov
mov
movs
ins
fstp
rcl
sub
lds
pusha
mov
or
mov
rol
shl
mov
dec
sar
fcomp
mov
(bad)
sar
adc
mov
loope
bound
or
imul
mov
(bad)
push
fcmovnb
(bad)
lahf
or
mov
jge
sbb
mov
jl
int3
mov
jbe
icebp
add
inc
nop
or
std
into
retf
lock
lea
ss
or
out
jns
adc
fs
push
inc
or
mov
loope
(bad)
(bad)
xchg
call
or
mov
retf
pop
jle
aad
mov
pop
and
(bad)
and
data16
ins
in
xchg
(bad)
cmps
call
mov
add
popf
test
outs
das
and
loop
mov
cmps
sti
scas
cwde
jge
stc
into
adc
inc
adc
or
or
and
fnstcw
add
push
sti
rcl
lods
mov
clc
xor
mov
in
xchg
sar
add
dec
add
cmc
jo
aam
xor
(bad)
jmp
test
ja
mov
outs
mov
cmp
adc
es
pop
pop
sub
push
push
push
mov
mov
mov
mov
sbb
sub
sbb
jae
out
out
retf
or
les
add
push
push
pushf
mov
cmps
xor
fld
in
clc
mov
push
mov
mov
push
cs
addr16
sub
sbb
imul
std
xor
outs
cld
cmps
pop
imul
jp
fsubr
fs
imul
sbb
adc
lahf
jge
sbb
jmp
fs
jp
jns
add
sbb
mov
push
cmps
in
mov
call
into
sbb
test
clc
sub
aas
fild
mov
mov
test
lock
xchg
add
mov
sbb
xchg
popf
or
mov
in
fstp
inc
lods
test
dec
(bad)
xchg
sahf
push
mov
fdiv
fld
fwait
or
xor
nop
pop
fs
out
pop
movs
mov
jne
outs
jb
retf
cli
dec
fcom
or
jmp
fld
xchg
es
jmp
sub
int3
dec
test
aaa
loopne
mov
xchg
and
add
jmp
test
jb
mov
mov
scas
or
pop
mov
das
(bad)
repz
lods
push
adc
out
mov
mov
push
mov
lods
fldcw
jmp
inc
push
out
mov
or
mov
dec
js
pop
sub
pop
aam
arpl
inc
jle
mov
dec
push
or
cmp
aas
adc
mov
dec
mov
pop
sub
jns
mov
in
call
mov
test
mov
rcl
adc
cmps
xor
pop
cli
(bad)
cmp
movnti
fmul
aam
jo
sahf
(bad)
call
movs
neg
es
icebp
inc
cmps
pop
movs
fdivr
stos
lods
stc
out
or
mov
bound
in
ret
aaa
and
push
xchg
sub
push
push
jmp
shl
and
sti
push
rol
andps
and
mov
sbb
fidiv
(bad)
cmps
int
pop
jo
push
loop
rol
aam
out
mov
in
sbb
push
outs
movs
imul
loopne
icebp
inc
or
repnz
lock
nop
add
cmc
mov
xchg
cmps
xor
sbb
push
aam
imul
xchg
pop
mov
outs
dec
inc
jecxz
clc
sbb
ins
mov
(bad)
fldcw
test
jg
dec
jp
cmovbe
mov
mov
repnz
(bad)
lock
mov
repnz
mov
gs
push
test
and
mov
push
fs
jnp
fwait
repz
dec
lods
mov
in
jmp
iret
xor
push
and
pop
ror
mov
adc
sahf
sub
xor
es
hlt
cmps
jo
loopne
int
out
imul
sbb
mov
call
jl
cmps
frstor
rcr
mov
dec
fnstenv
das
xchg
lods
hlt
ds
or
inc
jbe
jg
or
cwde
inc
mov
enter
outs
iret
sub
mov
outs
or
cld
jg
fstp
or
dec
inc
push
mov
test
rcl
push
sub
inc
add
out
xor
cs
(bad)
ds
(bad)
movs
and
add
not
mov
dec
movs
je
push
push
push
(bad)
mov
or
jecxz
mov
sub
dec
in
sbb
sbb
clc
cmp
not
cmp
sahf
pop
dec
rcl
pop
and
cmp
push
mov
push
push
(bad)
mov
sahf
lods
jb
pop
jnp
(bad)
adc
mov
mov
sub
(bad)
scas
dec
dec
gs
jo
fs
ds
nop
xor
pop
popf
ins
cmps
and
vrsqrtps
inc
inc
shl
scas
es
data16
mov
repnz
mov
xchg
add
push
xchg
jne
sbb
loope
pop
pop
xchg
jle
mov
rcl
xchg
cmp
dec
pop
int
mov
inc
je
adc
dec
xor
lods
inc
cmp
cmp
in
jne
mov
mov
leave
sbb
daa
popf
jno
sahf
jae
out
jns
mov
and
loopne
les
int
xor
inc
jne
jl
in
fdiv
mov
jl
sbb
outs
and
xchg
adc
inc
mov
stos
fistp
cmp
mov
jns
pop
push
cmp
iret
mov
sub
bndstx
jo
dec
fld
mov
adc
sbb
cld
inc
les
cmc
sub
sbb
rcl
enter
popa
les
inc
pusha
add
inc
push
ins
repz
mov
pusha
sbb
sub
adc
sbb
cmp
cli
mov
int
and
sub
push
and
jnp
xchg
xchg
and
or
cs
retf
push
push
and
dec
or
sar
dec
enter
xchg
cmc
add
mov
shr
xor
sub
in
gs
jbe
je
pop
stc
fstp
retf
test
sbb
jbe
jnp
and
pop
and
mov
or
cld
cmp
add
sbb
neg
int3
jb
retf
mov
add
mov
shl
jge
test
rcl
mov
shl
imul
leave
mov
retf
call
scas
adc
xchg
jg
mov
xchg
xor
xor
outs
js
xor
sub
ins
cmp
test
sub
out
cld
cs
xor
push
nop
mov
retf
and
sub
pop
shl
push
dec
pop
cmc
push
add
xor
and
push
pusha
loop
jno
nop
pop
mov
push
cmp
fisttp
sbb
and
jnp
pusha
jecxz
pop
loopne
xchg
sub
in
sub
mov
lds
and
ret
not
xor
bound
xchg
xchg
ror
ja
mov
jg
push
ror
(bad)
repnz
cmp
add
or
jne
arpl
inc
cmps
mov
into
inc
stc
(bad)
clc
loope
inc
mov
ret
rcl
xchg
add
aaa
outs
dec
ss
out
push
mov
pop
pop
mov
xchg
inc
ss
dec
icebp
add
mov
and
movs
sbb
ret
imul
fwait
retf
sbb
mov
das
int3
inc
hlt
mov
xchg
mov
push
or
cmp
cmp
js
mov
sbb
scas
xchg
lods
cmps
sub
(bad)
sbb
push
leave
xlat
out
retf
xor
push
xor
arpl
and
dec
cmps
mov
cmp
jns
mov
pop
xchg
inc
gs
std
dec
rol
rol
into
call
push
push
(bad)
les
cmc
call
adc
test
imul
and
and
dec
fcomp
fidivr
xor
jp
shl
cmps
fist
jb
out
jg
jmp
shr
mov
jle
out
icebp
mov
fmul
inc
mov
in
(bad)
loope
inc
das
jo
(bad)
fisttp
sub
(bad)
push
mov
daa
push
popf
out
out
xor
sbb
or
clc
jns
sbb
rcr
jp
push
leave
jae
and
hlt
pop
sub
lahf
sbb
sub
or
repz
ss
sub
pop
push
push
cwde
retf
sar
(bad)
test
mov
or
in
call
or
push
fidiv
mov
pop
in
sub
sub
hlt
cmp
cmp
fnsave
cmp
push
sub
add
loopne
pushaw
push
loope
loop
in
jns
in
in
mov
and
or
icebp
dec
push
pop
(bad)
pop
mov
jmp
(bad)
int3
adc
sbb
jae
cld
xchg
sbb
mov
jo
fld
or
pusha
std
icebp
mov
popf
out
popf
pop
pop
sub
mov
cmc
aam
or
outs
cmp
les
cmp
sub
retf
sbb
and
scas
or
push
dec
xor
out
or
xchg
inc
je
push
sbb
rol
cli
call
mov
jmp
or
arpl
loop
fistp
push
imul
xchg
adc
std
mov
(bad)
cli
sbb
test
sbb
(bad)
jp
mov
jns
cmp
std
jecxz
cmp
jnp
clc
lock
fs
out
arpl
jnp
sub
(bad)
hlt
add
es
sar
imul
lock
mov
sahf
mov
jns
pop
jmp
jmp
adc
xchg
push
outs
cmc
mov
cmp
pop
pushf
jnp
sbb
sbb
mov
inc
pop
ds
aam
mov
jmp
mov
mov
idiv
arpl
repnz
sbb
(bad)
mov
les
jl
pop
dec
aaa
mov
ror
test
or
mov
push
mov
xchg
xor
call
hlt
inc
test
mov
jno
adc
xor
adc
push
popa
cmp
dec
or
cld
out
mov
jo
mov
aaa
push
mov
mov
fst
adc
dec
dec
ja
push
rcl
test
ror
push
cmps
push
(bad)
mov
sub
or
shl
jmp
(bad)
jmp
and
jecxz
in
arpl
ret
in
(bad)
pop
popf
jmp
mov
push
lock
(bad)
jae
out
push
call
addr16
scas
movs
mov
mov
or
lods
or
xlat
sti
dec
xor
stc
mov
fs
outs
pop
jb
data16
pop
ins
in
scas
mov
scas
addps
mov
lods
outs
ror
jmp
das
popf
stos
stos
cmps
data16
mov
sbb
rcl
push
cld
jg
jle
imul
leave
rol
arpl
adc
test
xchg
popf
mov
xchg
pop
stc
int
cmps
addr16
xchg
loope
inc
mov
iret
mov
push
(bad)
ffreep
imul
mov
mov
aam
push
mov
data16
mov
jno
add
loop
inc
jno
adc
dec
(bad)
int
in
dec
ret
xchg
add
mov
jmp
adc
sub
or
push
ss
xchg
mov
hlt
aad
es
jmp
adc
out
(bad)
movlps
xlat
movs
xor
hlt
mov
mov
hlt
push
sub
and
dec
pop
inc
sbb
inc
sub
cwde
xlat
fisttp
int
pop
inc
xchg
xchg
in
mov
inc
repz
adc
ret
push
neg
stos
outs
cmp
or
push
xchg
lock
push
add
inc
inc
stos
xor
outs
mov
xor
dec
inc
(bad)
icebp
or
and
rcr
lds
jp
push
aad
xor
or
xor
rcr
sub
or
les
lods
call
cld
inc
(bad)
xlat
test
push
pusha
shr
jo
xor
adc
jle
ret
jmp
cmp
jl
push
jmp
cmp
test
pop
xor
xlat
pushf
enter
fidivr
add
xor
push
push
out
ret
movq
jae
sar
jg
or
aaa
pop
jnp
psubsw
(bad)
push
gs
out
mov
arpl
jmp
iret
sub
fadd
leave
xchg
sub
ins
cmp
popa
(bad)
and
cmp
mov
pop
mov
pop
mov
pop
fcomp
inc
xchg
rcr
scas
jmp
xchg
xor
mov
pop
and
fs
jmp
aaa
xor
xor
mov
call
sbb
jns
xor
inc
das
mov
jmp
ins
inc
pop
xlat
in
inc
(bad)
movs
sti
or
aad
outs
lds
push
or
or
sbb
mov
xor
in
ret
inc
cmp
aaa
adc
(bad)
pop
mov
dec
xor
addr16
pop
jno
mov
xchg
push
(bad)
(bad)
adc
push
int
ss
ret
jle
daa
cdq
adc
cmp
dec
jmp
cmp
push
outs
mov
inc
call
sbb
sbb
jb
jb
fimul
mov
jle
cmp
iret
or
test
shl
sbb
mov
and
push
cmc
adc
pop
sub
xor
add
lea
mov
fsubr
ret
mov
test
sbb
jg
sub
ret
aam
loop
xchg
in
dec
cld
iret
sahf
xchg
add
cmp
adc
mov
jle
xor
sbb
int
and
mov
xor
push
in
mov
cdq
pop
fs
mov
push
repz
add
add
xor
retf
add
fld
lgdtd
jge
outs
pop
xchg
lods
adc
loopne
popa
xor
enter
mov
ds
fist
aas
pop
mov
xor
js
je
outs
sbb
sub
cmc
and
fisttp
pusha
sub
xchg
adc
popa
or
ret
out
retf
leave
jp
ss
mov
push
bound
je
mov
iret
in
mov
inc
lds
loope
je
nop
xlat
xor
fstp
jmp
shl
jle
shr
xor
xchg
or
or
popf
mov
pusha
arpl
js
jle
sbb
imul
cmc
(bad)
repnz
dec
loope
(bad)
cmps
loop
mov
add
in
scas
xchg
inc
daa
mov
fcmovne
cmp
sbb
push
sub
mov
push
shl
cmc
xlat
data16
je
les
xor
add
dec
or
jne
dec
adc
xor
out
(bad)
ret
rol
mov
mov
stos
mov
xor
pop
dec
xchg
cmp
xchg
xchg
outs
jge
test
mov
movs
and
in
fadd
add
dec
idiv
push
(bad)
jl
xor
add
jb
dec
mov
jne
sub
scas
movs
stos
in
mov
mov
pop
cmps
in
dec
test
jns
mov
(bad)
(bad)
push
mov
test
xchg
imul
ret
cld
jp
movs
mov
dec
sti
push
xchg
add
jo
out
xchg
jg
add
addr16
xchg
xchg
add
jb
ret
xchg
adc
retf
xchg
pushf
sbb
outs
aam
sar
push
stos
mov
sbb
cmp
mov
pop
add
rcr
xor
cmps
mov
fisttp
jmp
and
adc
clc
cld
xchg
xchg
pop
and
cmps
je
dec
and
xor
js
retf
leave
cli
outs
out
jbe
loop
mov
ss
jae
ins
pop
sar
mov
sti
pop
push
push
or
lods
fwait
ins
mov
mov
pusha
lock
mov
movs
inc
lods
es
or
fisttp
ins
(bad)
retf
out
cmp
xchg
xlat
sub
mov
cmp
icebp
out
lods
cwde
ret
mov
cmp
adc
mov
fcmovnu
push
data16
cmp
fdivp
mov
ret
mov
push
push
sub
aam
loop
movs
fcmovnb
fist
in
(bad)
jae
push
mov
xchg
mov
add
test
adc
fistp
mov
int
daa
loop
xchg
jle
bound
mov
imul
sub
push
iret
sub
push
ja
stos
mov
(bad)
loope
fld
cmc
mov
stos
js
dec
arpl
cmp
out
std
jmp
add
sub
push
jno
xchg
ins
sub
sub
in
adc
jbe
movs
inc
test
bound
sbb
popa
sub
das
push
mov
or
lods
inc
mov
stos
mov
sbb
imul
push
daa
mov
lds
jne
(bad)
or
pop
iret
call
jns
xchg
push
test
cmp
rep
jb
push
jo
data16
jecxz
jnp
xlat
gs
das
cmp
(bad)
jle
loop
out
in
xor
int3
dec
loopne
add
icebp
mov
imul
in
sub
and
pop
std
or
rcr
iret
call
jp
sub
jecxz
aad
jne
inc
xor
jne
cmp
int
sub
icebp
cmp
cmp
mov
fs
ins
sbb
dec
pop
jae
xchg
stos
mov
movs
jecxz
cmp
rcl
add
lock
cmp
xchg
push
rcr
mov
(bad)
(bad)
out
cmp
lock
adc
or
mov
(bad)
mov
and
mov
push
scas
cld
push
push
aam
in
mov
xor
sbb
mov
jb
add
(bad)
push
cld
dec
jo
leave
cld
hlt
test
mov
mov
shl
stos
xchg
cmp
pop
xor
popf
sbb
adc
or
or
push
adc
ss
je
out
mov
nop
stos
bnd
pop
xlat
repz
mov
(bad)
int
sbb
mov
enter
mov
jne
aam
icebp
gs
dec
repz
sub
push
aaa
scas
push
ins
hlt
out
dec
(bad)
or
into
loopne
add
shr
pop
mov
push
out
test
xchg
and
aad
icebp
add
cmp
mov
sbb
popa
pop
or
adc
mov
or
or
jbe
inc
les
push
loopne
aad
add
imul
popa
test
(bad)
movs
sub
dec
inc
push
cs
call
dec
fisubr
sahf
cli
add
fild
push
test
mov
mov
das
sbb
mov
hlt
push
pusha
mov
pop
xchg
movs
shl
repnz
outs
shl
in
je
adc
xor
push
xor
(bad)
sahf
ins
mov
push
mov
bound
push
add
mov
mov
jno
mov
inc
jne
fwait
mov
sar
or
jno
loopne
dec
dec
(bad)
jns
ds
fistp
in
pop
mov
mov
std
inc
nop
xchg
and
pop
xchg
sub
fild
dec
add
icebp
xor
cmp
mov
dec
sar
inc
xchg
lahf
fidivr
inc
repnz
sar
add
xor
out
repnz
sub
addr16
aas
sti
popf
movs
adc
popa
add
sar
add
ins
inc
jg
je
or
add
fidiv
hlt
add
push
xor
mov
fistp
pop
scas
jmp
xchg
xchg
ja
bound
inc
inc
cdq
pop
or
(bad)
jg
pop
dec
mov
jb
stos
xor
cmps
adc
addr16
sub
in
add
mov
pop
sub
inc
mov
sbb
xchg
in
pop
arpl
retf
fdivrp
sti
sti
cwde
shr
cmp
xchg
cmp
add
pop
and
inc
pop
lahf
sbb
test
jne
sub
outs
mov
fcmovb
dec
mov
jo
xor
stos
xor
bound
sbb
div
mov
mov
in
xchg
into
pop
jg
mov
mul
mov
xchg
aaa
push
(bad)
jmp
dec
out
add
and
jmp
sbb
mov
jecxz
jl
cmps
daa
or
jg
data16
test
jl
jge
and
mov
sbb
mov
or
and
pushf
faddp
xchg
adc
cs
jp
mov
dec
out
mov
xor
fimul
mov
mov
icebp
sub
jmp
pop
dec
jg
adc
sbb
movs
shl
dec
mov
test
out
or
mov
sbb
repz
gs
dec
pop
clc
xor
test
out
in
dec
push
(bad)
mov
pop
cmp
add
movs
call
fmul
rcr
sbb
dec
cli
push
ja
fiadd
aad
(bad)
push
adc
(bad)
adc
sub
pop
xor
push
push
inc
mov
cmp
sbb
mov
xchg
jo
movs
push
jne
jno
jae
adc
(bad)
rcr
xchg
adc
and
jg
das
hlt
enter
stos
popw
xchg
lea
shl
dec
inc
and
and
jecxz
out
sbb
mov
or
cli
out
or
mov
xor
add
(bad)
inc
aaa
(bad)
aad
in
std
mov
ins
call
jbe
pusha
shr
dec
and
(bad)
stc
mov
in
cmps
hlt
das
inc
dec
inc
and
mov
cmp
jmp
out
(bad)
add
push
aaa
mov
into
mov
es
rcl
test
repz
or
out
push
sub
push
stos
hlt
call
xor
sbb
outs
enter
clc
rep
sub
leave
mov
lea
(bad)
xlat
adc
xor
fisttp
(bad)
jecxz
jecxz
cwde
xchg
sub
(bad)
mov
and
sti
mov
fcomp
fld
xchg
xlat
iret
cmps
push
imul
jae
es
and
jl
cmp
jns
inc
pop
neg
xchg
scas
xor
loopne
(bad)
cwde
jb
xchg
and
out
es
inc
aaa
pushf
jg
adc
pop
jns
jle
sar
jbe
pop
push
pop
push
pop
sub
repz
sar
lods
jp
inc
fisub
rol
js
jo
and
loop
adc
loope
(bad)
jp
jb
push
fcmove
out
lods
push
jecxz
sub
sahf
mov
pop
(bad)
mov
pop
(bad)
push
sub
jmp
and
add
and
fdiv
cs
xchg
loop
imul
int
lds
cmp
daa
mov
adc
mov
cmp
jmp
cdq
(bad)
into
xor
scas
scas
cmp
outs
inc
xor
bound
js
pop
in
loope
and
or
add
mov
or
dec
popa
ficomp
call
ins
push
mov
sbb
cmc
(bad)
imul
(bad)
pop
(bad)
repnz
adc
sub
cli
xchg
iret
xor
retf
cs
nop
adc
dec
call
or
lahf
pop
(bad)
in
adc
mov
push
shl
cmc
xor
jle
jle
lfs
push
inc
in
cmp
lea
jg
daa
xchg
test
mov
dec
neg
jg
hlt
pushf
cmp
xor
sub
in
add
fstp
fdivr
sbb
mov
mov
fimul
xchg
xor
fimul
sbb
and
mov
or
inc
adc
mov
xlat
jmp
mov
jb
xlat
and
jo
mov
or
sub
dec
ror
xchg
ds
and
shl
jmp
scas
dec
fmul
xchg
repz
test
repnz
sub
in
sti
add
mov
ficom
daa
add
sbb
fbld
xchg
rol
mov
mov
cmps
fsubr
xchg
and
lea
data16
adc
push
jo
sub
test
lods
mov
and
into
rcr
dec
sbb
add
push
pop
cld
push
jnp
lds
dec
int3
loopne
test
clc
mov
imul
loopne
and
jge
or
call
lock
push
inc
xchg
clc
xchg
push
jb
dec
jmp
les
cmp
inc
cld
pop
dec
stc
cli
mov
ins
jbe
scas
fisttp
adc
stos
lds
sahf
dec
xchg
ss
push
xchg
mov
(bad)
rcl
je
mov
sbb
fwait
add
sbb
and
xchg
int
fmul
add
shl
add
aad
sbb
or
arpl
loope
retf
shl
inc
or
aam
lahf
loop
or
and
fwait
xlat
jbe
pop
jp
push
push
imul
sbb
cwde
xchg
mov
xor
movs
je
cmp
daa
adc
xchg
jp
sar
fisubr
test
je
cli
rcl
in
loope
cmp
lods
fs
mov
mov
pop
and
fisttp
push
inc
in
repnz
into
ret
idiv
lods
shr
mov
fild
inc
push
std
sub
and
cmp
sti
jno
inc
adc
mov
sti
jmp
mov
fisttp
mov
xchg
adc
sub
cmps
iret
or
sub
ins
dec
test
out
cmp
lods
mov
fcomp
lock
in
sti
sub
outs
ficom
sub
pop
sti
ret
jb
pop
sti
jnp
imul
(bad)
mov
fisubr
xchg
inc
fcmovne
out
pop
lahf
daa
pop
retf
mov
jae
mov
int3
mov
cmps
xchg
sbb
xchg
cmp
aaa
mov
push
ins
or
dec
and
(bad)
adc
movs
pop
(bad)
jo
add
fisub
pop
sub
sub
mov
sbb
scas
clc
push
mov
shl
(bad)
out
push
pop
ins
jbe
cmc
fs
std
aaa
adc
out
mov
mov
cmp
push
daa
sub
mov
rcl
ja
js
push
jo
lock
mov
push
(bad)
or
and
adc
mov
clc
sbb
aad
jmp
mov
pusha
lods
push
cld
outs
mov
push
imul
cmp
and
pusha
pop
std
cdq
movs
out
into
mov
mov
shl
xchg
push
xchg
xchg
cmps
fsubp
mov
sahf
ret
pop
mov
pop
xchg
jle
clc
mov
daa
sbb
push
add
jbe
add
or
fiadd
or
ja
push
imul
int
pop
nop
mov
ds
xchg
or
test
or
dec
mov
push
and
cmp
pop
in
mov
mov
push
retf
jne
loopne
out
xchg
inc
imul
scas
add
jg
cld
sets
ss
sbb
dec
je
sub
daa
test
aam
push
xor
sub
or
lods
addr16
and
repz
xchg
or
or
sub
push
jno
push
jmp
sub
push
movs
push
xchg
pop
lods
int
pop
fcomip
pop
pushf
xlat
ins
mov
enter
out
push
fwait
add
sub
push
fs
push
scas
in
mov
imul
dec
lea
jecxz
mov
mov
mov
jno
mov
and
fdiv
or
ret
sbb
gs
push
jae
pop
mov
add
aad
inc
or
das
lods
les
or
pop
shl
cmp
je
nop
es
mov
jecxz
inc
(bad)
test
(bad)
xor
dec
mov
inc
shl
adc
jl
(bad)
movs
out
push
mov
adc
aaa
cli
repnz
ficom
retf
or
sti
mov
out
add
cmp
fldcw
and
xor
hlt
rol
xor
in
dec
test
mov
xor
scas
cmp
ins
inc
mov
cmc
pop
cmp
fwait
pop
movs
mov
fnstenv
loope
fwait
add
aas
or
xchg
pusha
cli
and
dec
push
push
sar
and
in
xor
test
repnz
pop
call
mov
xor
out
enter
lock
ins
adc
mov
push
mov
adc
and
mov
aas
lahf
dec
cwde
movs
adc
inc
jns
jnp
push
data16
int
cmp
inc
and
fs
outs
add
and
mov
inc
enter
xchg
push
rol
push
add
push
data16
cs
test
mov
cmp
pop
iret
inc
outs
inc
jmp
ja
xor
adc
shr
rol
ret
scas
add
gs
hlt
cmp
mov
rcl
mov
out
xor
cwde
js
sbb
cmp
loope
push
push
shl
mul
add
iret
icebp
cmp
std
fcom
mov
inc
sbb
jne
loop
sbb
xor
dec
inc
mov
and
adc
or
fwait
jmp
sti
xor
in
jmp
test
sar
stos
adc
jle
mov
mov
or
pushf
stos
cmc
pusha
xor
xchg
addr16
sub
(bad)
loopne
(bad)
cmps
adc
mov
cmps
outs
pop
nop
ds
and
add
rcl
pop
add
mov
ret
jecxz
lea
dec
cmc
cmp
loope
into
sbb
sub
outs
sub
emms
xor
mov
fidiv
sub
int
pop
cmp
mov
repnz
ret
xor
jmp
lea
lods
fistp
sahf
adc
or
mov
mov
push
xchg
test
daa
lock
sti
pop
outs
xchg
adc
adc
and
adc
ins
lahf
loop
jno
cmc
push
dec
(bad)
pop
mov
fbld
outs
outs
retf
loope
repz
stos
xchg
mov
imul
int3
js
into
mov
ja
and
cmp
out
pop
mov
pop
bound
or
repnz
call
jnp
movs
mov
call
scas
rol
rcr
and
pop
and
xor
or
cld
mov
dec
lods
cld
into
adc
imul
lock
dec
inc
xor
sub
push
js
fmul
jle
push
push
scas
adc
scas
shl
out
cmc
js
les
pop
jmp
je
mov
xor
cmp
jg
jns
arpl
(bad)
mov
sbb
mov
sub
fcom
adc
ret
jns
aas
or
in
mov
in
mov
enter
push
push
pop
or
pushf
fisub
dec
push
push
mov
js
pop
(bad)
fs
stos
sbb
cmp
adc
sar
ret
sub
xchg
mov
mov
stc
inc
mov
mov
loope
mov
scas
pop
loop
je
jmp
jge
jne
nop
mov
inc
or
shl
repz
pop
je
aaa
ror
das
mov
add
rcr
call
repnz
inc
into
test
(bad)
pop
fdiv
out
dec
imul
fs
imul
aad
xchg
or
das
jns
push
test
sub
pop
xchg
and
fcomp
call
sbb
bound
jmp
mov
dec
add
mov
push
xor
es
mov
imul
push
(bad)
adc
retf
jb
fs
xchg
lock
add
dec
xor
mov
pop
test
mov
mov
xchg
aad
mul
sub
pushf
ins
pop
movs
sbb
sbb
movs
jb
cmc
xchg
mov
mov
out
out
jg
sub
cwde
clc
mov
ret
jo
bound
inc
gs
hlt
pushf
sbb
mov
push
xor
mov
or
pop
xchg
or
(bad)
or
mul
dec
bound
bound
pushf
lahf
jbe
ret
xrelease
cwde
push
lock
jecxz
outs
mov
pop
out
cs
adc
cs
dec
or
adc
pop
sbb
xor
rcr
xchg
test
and
cld
lods
retf
cmp
imul
std
mov
jg
mov
cmp
clc
sub
js
ins
cmp
adc
scas
dec
jns
xchg
sub
fwait
cmp
and
gs
pop
and
xchg
jbe
mov
sbb
popf
out
ret
mov
pusha
xor
or
pop
call
popf
popf
push
and
add
into
ret
mov
imul
push
fild
mov
mov
dec
movs
mov
jns
fsubr
fnstenv
push
xchg
in
into
cmps
mov
push
cmps
mov
xor
gs
outs
neg
or
and
fwait
xor
xchg
and
sbb
fadd
scas
rcr
je
adc
jmp
add
fs
out
sub
push
mov
fwait
addr16
sha256rnds2
inc
cdq
leave
pop
mov
jmp
or
ins
out
xor
pop
dec
dec
imul
out
add
mov
sub
xchg
mov
out
push
and
adc
xchg
xchg
ficom
scas
jbe
lods
outs
lods
pop
or
add
fs
inc
inc
mov
rep
cmc
add
(bad)
xchg
pop
icebp
cmp
lods
jmp
jbe
pop
pop
sti
pop
lea
sub
lea
int3
outs
add
or
mov
ja
lahf
mov
cld
push
jo
pop
lahf
mov
mov
cmps
out
and
push
push
test
test
sbb
bound
out
mul
test
ja
xchg
push
out
or
shl
js
dec
int3
xor
outs
or
test
push
iret
out
imul
stc
fbld
call
push
aam
ret
pusha
jp
mov
jns
(bad)
js
adc
jnp
jle
test
push
mov
push
pop
enter
pop
(bad)
fidiv
cmps
xchg
cwde
pop
push
ds
push
int3
or
retf
lods
push
mov
mov
add
xor
push
ds
(bad)
es
mov
add
repz
int3
pop
scas
push
loopne
retf
xchg
adc
mov
arpl
adc
lds
inc
jnp
mov
jo
je
or
lods
fdivr
sbb
sbb
fld
xchg
mov
(bad)
cwde
dec
jg
in
aas
xchg
loop
sub
inc
sbb
retf
inc
mov
stos
aaa
cmps
mov
push
shr
pop
std
push
jmp
cdq
sub
loope
mov
es
mov
jno
add
sbb
sbb
scas
adc
jne
in
sti
push
sbb
pop
add
std
aas
add
jecxz
pop
cmp
out
pushf
imul
pop
and
(bad)
js
js
pop
mov
mov
out
out
loope
clc
xor
lahf
pushf
adc
xor
lea
lock
xor
sahf
sti
dec
add
mov
loop
in
pushf
jae
mov
sar
rcl
repz
retf
fcomp
adc
cs
nop
mov
sbb
neg
movs
add
xor
ss
sbb
fisub
pop
aas
xchg
xor
add
push
out
dec
fs
push
pusha
stos
or
mov
push
leave
jb
pushf
test
xchg
das
test
jbe
dec
pop
push
ja
inc
xchg
loopne
rcr
and
out
xlat
clc
outs
fsincos
sub
jg
cmp
mov
and
or
lahf
outs
repnz
mov
mov
icebp
aas
and
loopne
ficom
cmp
xor
stos
or
and
sbb
test
fbld
sbb
fsubr
jnp
sub
xor
retf
movzx
fcmovu
mov
daa
mov
pop
aad
mov
dec
jl
les
loope
cli
hlt
adc
fldcw
sbb
stos
mov
fwait
std
mov
or
stos
push
ss
mov
ja
mov
push
shl
sub
popa
shl
ret
and
and
cmpxchg
fst
ret
inc
and
dec
ins
jl
loope
mov
add
push
xchg
mov
inc
jne
push
xchg
sub
jae
xor
dec
mov
ret
int
paddd
arpl
lahf
getsec
gs
sub
fdiv
dec
ja
push
cmp
xchg
sbb
sub
into
cli
add
mov
dec
and
test
sub
into
jnp
mov
jmp
dec
cmp
sbb
cmp
sub
pop
and
adc
mov
sbb
adc
lods
aaa
fs
and
inc
jnp
add
dec
cmc
dec
push
xchg
imul
loope
loopne
jecxz
xchg
adc
leave
es
fbld
enter
sbb
daa
das
lds
inc
addr16
leave
fadd
jae
mov
dec
inc
sub
mov
shl
cmp
push
(bad)
imul
hlt
scas
stos
pop
cdq
les
add
call
repnz
ds
aas
test
(bad)
imul
ins
clc
pusha
xlat
xor
fidiv
xchg
fild
jne
xlat
fwait
mov
outs
or
clc
shl
arpl
lods
jo
int
and
lds
movs
fst
add
mov
xchg
aaa
js
xor
pop
mov
shl
fwait
(bad)
mov
xor
mov
add
adc
ins
pop
push
pushf
sti
imul
std
mov
inc
adc
cmp
jecxz
sub
imul
jnp
sbb
out
rcr
scas
mov
jle
(bad)
(bad)
in
clc
fs
rol
das
jb
fnstenv
sbb
jbe
out
cmps
cmp
repz
retf
cmp
in
mov
test
(bad)
fcom
fsub
nop
(bad)
mov
or
inc
and
mov
xor
adc
pop
pop
pushf
sbb
test
cld
mov
xchg
mov
sbb
jo
xchg
ja
cmps
sbb
faddp
das
sub
adc
and
mov
xchg
or
leave
loope
jle
dec
mov
mov
mov
sbb
es
dec
es
mov
cmp
mov
loop
scas
dec
xchg
mov
mov
lods
mov
fisubr
and
int
add
dec
mov
push
push
lods
cmps
aaa
idiv
loope
and
xor
inc
xchg
add
jg
hlt
retf
ins
xor
mov
outs
inc
xor
frstor
push
test
out
cmp
mov
adc
into
mov
push
push
stos
sub
dec
xchg
int3
xchg
outs
pop
sub
jmp
popf
adc
iret
ds
mov
iret
dec
pop
(bad)
jnp
xor
push
push
ins
xor
ja
bound
jecxz
mov
add
(bad)
in
pop
cli
jmp
aaa
test
pop
pushf
or
add
push
inc
shl
dec
es
arpl
cmps
push
add
movs
mov
mov
push
ret
xchg
cmps
std
cli
xlat
enter
xor
push
fmul
imul
sar
sahf
xor
dec
cmc
inc
cmps
xchg
cs
rcr
sbb
inc
mov
cs
icebp
cli
pop
(bad)
sbb
or
jo
pop
ss
jns
adc
popf
mov
sbb
loop
cmp
sub
clc
sbb
imul
mov
fdivp
push
inc
sbb
push
mov
jl
or
mov
test
aam
je
push
movs
scas
cmp
inc
xchg
cmp
adc
xchg
mov
push
repnz
sbb
and
icebp
mov
cmp
cmp
inc
idiv
mov
dec
enterw
imul
or
dec
out
or
addr16
jne
and
aaa
and
fsub
imul
ficom
dec
mov
mov
out
xor
(bad)
fmul
jmp
jmp
push
fiadd
movs
xchg
ss
lahf
cs
sub
inc
xchg
les
(bad)
jmp
mov
cmp
xlat
sahf
add
in
shr
sub
xchg
inc
mov
ret
xchg
adc
test
mov
ret
mov
dec
(bad)
movs
jle
xor
daa
sub
mov
xchg
ret
mov
or
sar
adc
pop
lods
icebp
sub
xor
lahf
(bad)
pop
and
jnp
repnz
ds
mov
out
mov
lock
hlt
nop
aam
cmp
cmp
hlt
push
pusha
es
sbb
mov
sub
xor
lahf
fwait
mov
fstp
ins
xchg
sbb
ss
test
dec
xor
out
pop
shl
fcom
sub
stos
jecxz
ins
mov
aam
imul
xchg
cmp
xchg
jae
xchg
adc
sub
cmc
fsubrp
paddsb
sub
xor
std
stc
int3
inc
and
add
lds
test
je
jne
fistp
mov
fcomp
aaa
sub
and
dec
jge
add
mov
ins
xchg
hlt
adc
pop
mov
xchg
ja
sar
jnp
jns
stc
or
inc
call
pop
fcom
push
movs
rcr
xor
imul
dec
jbe
push
hlt
inc
push
in
fs
mov
ret
cwde
jp
dec
lds
jecxz
shr
retf
fsub
mov
lods
jg
inc
nop
inc
or
loopne
jae
dec
jecxz
fs
inc
ret
and
mov
mov
dec
aam
or
mov
lods
sub
(bad)
mov
pop
scas
mov
dec
call
daa
repz
retf
pop
rcr
pop
cmps
dec
in
mov
ja
mov
push
mov
jns
cmp
add
push
add
js
std
scas
in
push
add
sub
das
aad
shr
xchg
sbb
repz
push
repnz
js
sub
je
test
mov
sbb
inc
into
out
push
xor
pop
mov
sub
sbb
enter
jbe
xor
neg
and
in
iret
std
sub
jl
stos
adc
test
and
movs
icebp
xlat
and
dec
or
int
sbb
dec
stc
cmp
add
int3
xchg
mov
or
inc
dec
push
shl
adc
rol
or
sti
stos
repnz
in
shr
movs
jo
movs
mov
addr16
add
in
adc
stc
jecxz
stos
add
mov
ins
shl
dec
cwde
push
sub
pop
lods
fidivr
addr16
jb
(bad)
jno
xchg
jl
sbb
loope
mov
imul
repz
dec
pop
aaa
xlat
pop
in
jno
leave
and
popa
test
sbb
por
jp
xor
push
aad
cmps
gs
cmps
jle
and
lock
jmp
pop
retf
pop
arpl
hlt
mov
outs
and
imul
mov
xchg
test
cmp
fnstsw
sub
xor
mov
and
dec
add
xchg
lods
and
lock
or
lea
pop
adc
cli
xlat
dec
lahf
jmp
out
xor
clc
test
and
dec
jle
dec
stos
jo
fidivr
rol
cmp
sub
and
inc
out
lock
scas
and
or
cmp
jb
push
mov
fdivr
dec
aaa
push
xchg
(bad)
fwait
and
inc
mov
adc
js
outs
mov
and
pop
xchg
jmp
mov
ret
sbb
push
xor
mov
shl
or
xchg
and
mov
in
outs
sti
sub
xchg
push
mov
stos
push
lods
lds
xchg
leave
pop
pushf
and
lea
sbb
mov
push
or
sub
dec
rcl
mov
xchg
jecxz
das
shl
dec
sahf
scas
aad
fimul
jno
mov
jb
jae
in
jp
dec
repnz
in
push
sub
mov
out
mov
pop
or
ret
fsubr
fs
out
sbb
mov
int3
sbb
fidiv
or
push
mov
xchg
xor
xlat
mov
sbb
jmp
lods
(bad)
sub
jo
mov
in
mov
mov
push
jmp
xchg
cmp
inc
sahf
rcr
jmp
sub
mov
repnz
data16
retf
xchg
imul
sbb
fcmovu
mov
mov
add
int
add
sbb
enter
jb
test
and
dec
mov
(bad)
dec
cmp
sbb
pop
inc
popa
icebp
test
or
retf
cli
out
(bad)
jno
addr16
push
lds
ins
ror
and
inc
cmp
sub
mov
ins
scas
jecxz
mov
sbb
mov
xchg
or
lds
mov
int
add
adc
pop
stos
fidiv
aaa
and
add
test
popf
shl
idiv
xlat
dec
mov
jnp
cs
or
inc
pop
and
inc
ret
into
mov
mov
test
stc
daa
ja
jae
adc
push
jmp
and
mov
sbb
cmp
mov
mov
iret
cld
and
jg
xchg
adc
inc
data16
mov
xchg
or
cld
repnz
add
fidiv
pop
mov
push
out
adc
loope
ins
cmp
cmovns
xor
dec
jnp
(bad)
fcmovnb
ss
repz
cmps
shl
and
adc
sbb
xchg
stos
jp
and
shr
or
ror
jge
enter
int
gs
mul
(bad)
imul
jae
push
xor
or
repz
lock
imul
mov
inc
fcomp
lods
push
(bad)
test
div
pop
popa
sti
jecxz
pusha
jb
jne
fnstenv
out
imul
mov
adc
vprotq
pop
and
outs
or
xor
dec
fstp
pop
in
enter
jp
pop
jecxz
mov
daa
mov
in
sub
and
mov
clc
mov
loopne
out
sbb
(bad)
(bad)
dec
stos
mov
pop
rol
xchg
inc
cmps
inc
adc
xchg
je
pop
dec
pushf
cmp
mov
sub
out
int3
(bad)
jmp
mov
and
and
test
jle
jno
mov
pushf
faddp
fsub
out
rcl
fs
mov
push
leave
dec
mov
ins
pop
(bad)
aaa
ins
cmp
xchg
repz
idiv
push
dec
test
iret
jb
mov
pushw
and
shr
and
jbe
jmp
add
or
cmps
pop
jb
mov
push
xor
cmp
mov
jle
outs
outs
sub
jne
mov
jl
mov
enter
sub
lahf
sub
jns
jne
xchg
cmp
aam
sub
ins
mov
pop
stos
inc
xor
push
out
imul
retf
ja
retf
mov
mov
std
cmp
call
and
add
xor
cmp
mov
popf
(bad)
imul
pop
int3
jge
jbe
cli
cmc
add
or
push
dec
jp
mov
stos
shr
jnp
(bad)
mov
push
iret
inc
pop
or
push
repz
daa
push
inc
fwait
test
cs
push
xchg
jmp
out
or
call
jl
scas
test
sbb
fld
pop
xchg
xchg
hlt
mov
mov
pop
ins
xchg
loope
cmps
(bad)
push
inc
or
loop
jg
inc
(bad)
cli
jmp
xchg
cmps
mov
jbe
sub
gs
cmp
pop
xlat
push
loopne
sbb
les
cmp
sar
jle
into
fadd
fisttp
xor
cmp
sbb
jnp
loop
adc
call
in
(bad)
adc
push
xor
mov
rcr
add
push
push
jecxz
or
loop
(bad)
jecxz
aam
in
mov
mov
fld
imul
mov
jae
fdivr
xor
inc
jl
(bad)
(bad)
ss
sbb
pop
mov
lods
div
add
(bad)
mov
dec
cmp
xor
lock
arpl
lds
jmp
retf
adc
mov
outs
imul
fmul
in
hlt
mov
adc
(bad)
xor
dec
rep
and
mov
or
adc
jne
call
jl
test
inc
in
cmp
ins
movs
xor
xor
shl
and
daa
retf
cmps
xor
test
mov
stc
bnd
mov
pop
and
mov
pusha
repz
fstp
arpl
(bad)
call
pushf
std
repz
mov
cli
(bad)
sahf
pop
jmp
test
cld
xor
fimul
push
xor
(bad)
mov
xchg
cmp
ja
sub
loop
push
xor
cmp
push
imul
cs
outs
ds
call
inc
ja
push
dec
and
enter
movs
sar
enter
push
sub
adc
out
clc
mov
sub
test
cmp
pop
je
dec
jle
add
push
sbb
test
xchg
xor
add
sar
cmp
sbb
pusha
pop
xor
push
sub
shl
shl
add
shl
pop
mov
arpl
add
lods
nop
pop
jno
jl
out
mov
cmps
mov
iret
xchg
dec
sbb
push
lahf
pop
movs
(bad)
cmp
ins
out
sbb
hlt
movs
sbb
into
pop
dec
dec
(bad)
inc
ret
ret
xchg
mov
sub
inc
mov
or
popf
dec
jmp
movs
adc
popa
push
cmps
ror
cmps
xchg
fcom
and
mov
sbb
fwait
or
inc
cmp
imul
bound
sahf
jne
mov
wrmsr
or
scas
cli
adc
add
cmova
xchg
sub
or
jl
mov
icebp
pop
sar
(bad)
out
and
imul
or
rcl
jmp
fsubr
pop
mov
dec
lock
adc
popa
and
mov
icebp
cmp
xor
int
adc
in
mov
dec
and
lods
push
arpl
imul
loop
xchg
mov
(bad)
dec
push
and
jae
cdq
mov
imul
cli
cmp
pop
add
or
and
pusha
sub
mov
pop
mov
adc
sub
lods
lahf
(bad)
or
cmp
mov
adc
jne
movs
add
mov
pop
push
xor
pusha
fstp
fild
add
popf
repnz
lea
and
mov
xchg
and
push
adc
lds
addr16
xchg
icebp
pop
push
ja
repz
mov
jae
dec
push
cmps
pop
xor
pushf
push
out
mov
dec
das
dec
and
dec
dec
mov
cld
jmp
repz
mov
push
xchg
rcr
daa
movs
xchg
lods
lahf
adc
pminsw
inc
mov
inc
xchg
push
push
jecxz
jnp
or
adc
ret
jle
cmc
enter
inc
aaa
push
add
push
push
movs
and
mov
(bad)
push
hlt
aaa
cli
jg
int
mov
jmp
cmp
cmc
jne
adc
mov
call
mul
xchg
add
mov
inc
scas
icebp
sahf
stos
pop
push
out
out
sar
imul
(bad)
loop
inc
iret
push
ret
push
adc
lods
aam
aas
push
push
jle
aam
lea
fisttp
add
int3
cli
cmp
and
jp
scas
(bad)
mov
mov
loopne
and
xchg
dec
imul
rcr
mov
cmp
imul
cmp
sub
dec
clc
out
pusha
nop
push
pop
fadd
fadd
aad
cli
in
in
dec
lea
or
cmps
mov
aas
push
sub
xor
dec
js
push
es
clc
push
dec
inc
add
inc
ret
movs
int
les
outs
push
and
ficomp
mov
sbb
add
push
inc
dec
aam
push
rol
jae
mov
cmp
xor
bound
jle
sbb
or
out
push
pop
and
ds
pop
fwait
jp
push
enter
mov
mov
cwde
fdivp
(bad)
call
xor
inc
jne
lods
xor
cmp
sub
cmps
out
ror
jne
adc
dec
outs
mov
cmp
push
aad
xchg
dec
call
popf
sbb
mov
out
(bad)
in
ins
in
xchg
dec
popa
out
mov
lea
xchg
sbb
cwde
dec
pop
cmp
adc
mov
leave
cmc
and
aad
js
push
fidivr
lea
mov
dec
or
jo
or
daa
mov
xchg
(bad)
rcr
xchg
scas
inc
stos
mov
sar
imul
push
push
adc
cmps
ret
movs
inc
test
xchg
ins
dec
push
mov
add
add
mul
xchg
sbb
inc
shl
rol
inc
test
push
lahf
sbb
retf
xchg
inc
pop
std
jno
ret
ja
sbb
fiadd
mov
ficomp
fisub
push
in
inc
gs
add
xor
dec
mov
je
jb
dec
jmp
je
push
mov
xor
push
xor
jl
outs
pop
sub
sub
lds
iret
sub
push
jle
movs
adc
lock
push
jb
fiadd
or
mov
jnp
mov
aad
cmc
jecxz
adc
xchg
es
mov
cdq
mov
jo
hlt
inc
sub
pop
shl
mov
imul
mov
push
pop
retf
jg
xchg
xor
loopne
add
fnstcw
xchg
sbb
pop
mov
and
(bad)
jle
sbb
xor
imul
aam
in
ret
pop
test
jno
push
add
call
mov
push
pop
dec
arpl
mov
dec
shl
ja
cmp
mov
xchg
push
movs
imul
je
xlat
add
adc
gs
je
pop
or
movs
repnz
imul
in
sti
xor
clc
add
dec
pushf
out
mov
prefetcht2
test
adc
inc
cld
stc
sti
ret
pop
js
in
sbb
push
out
loopne
push
dec
pop
or
sub
push
shr
sbb
sbb
dec
or
add
cmps
bound
not
mov
movs
jae
and
retf
xor
add
mov
adc
cmps
inc
out
push
das
jo
ret
je
add
fisubr
addr16
adc
call
pop
and
scas
fisttp
xchg
xchg
cmp
mov
push
add
aas
loop
in
lods
fwait
(bad)
imul
adc
xchg
in
movs
in
xor
cmc
pushf
mov
mov
dec
sub
jbe
cld
adc
push
jns
clc
in
sbb
ins
in
sbb
int
hlt
pop
push
out
iret
pop
clc
mov
icebp
mov
sub
imul
or
loopne
scas
lods
xor
mov
clc
sbb
retf
jbe
xor
icebp
sbb
or
lock
lock
popf
outs
mov
lods
fs
inc
(bad)
call
fidiv
sbb
pop
add
adc
aas
sbb
mov
repz
scas
mov
inc
push
leave
or
add
xor
cs
call
rcl
jp
scas
ss
(bad)
fadd
mov
daa
mov
add
push
repnz
mov
sbb
fs
jnp
test
jge
sub
imul
test
scas
cdq
sub
pushf
xchg
or
push
and
dec
fimul
cli
iret
and
stos
jmp
push
mov
popf
ins
out
inc
stc
push
mov
add
inc
(bad)
test
cmp
jbe
adc
xchg
aaa
in
pop
adc
inc
mov
in
xor
pop
jge
and
add
or
std
leave
cli
xchg
pop
pop
jno
or
jne
test
sbb
lods
and
cmp
in
aas
jnp
lods
add
dec
dec
imul
daa
fnstenv
pop
clc
in
pusha
aam
jg
mov
push
jmp
adc
jnp
adc
dec
ds
push
add
(bad)
dec
bound
fidiv
movs
inc
sub
(bad)
int
jmp
adc
push
adc
or
test
mov
pop
aad
push
in
dec
nop
and
dec
scas
mov
pop
out
sbb
popf
or
adc
push
push
dec
popf
mov
dec
sbb
les
(bad)
fs
push
add
into
test
push
sar
jmp
xor
adc
and
inc
jg
cmps
test
jnp
dec
js
mov
fst
dec
sbb
dec
je
or
in
pop
inc
sbb
gs
pusha
cmp
icebp
or
mov
clc
mov
fwait
lods
ror
jnp
inc
sti
(bad)
dec
jbe
jnp
and
inc
push
fimul
pusha
fwait
enter
cmps
stos
cmp
inc
xor
(bad)
mov
and
and
and
xchg
imul
lea
fs
aaa
outs
lock
xchg
mov
mov
or
call
fsubr
loopne
and
and
and
imul
dec
rol
pop
or
cwde
mov
stos
adc
imul
cmp
add
adc
dec
(bad)
movs
pop
inc
shl
sbb
push
xor
jne
pop
cmp
mov
or
push
shr
int
or
mov
ins
mov
mov
dec
push
shl
jge
adc
movs
push
pop
iret
xchg
xchg
fnstenv
mov
(bad)
sahf
aad
ret
dec
pushf
das
push
mov
mov
ret
lds
xchg
int3
push
mov
sar
fcom
or
in
cmp
aam
add
lods
pop
push
lods
jl
sbb
stos
push
jno
push
pop
or
xor
push
xchg
sbb
outs
inc
adc
and
xor
cmps
add
arpl
popf
pop
or
cmc
and
stos
daa
test
test
jp
les
call
mov
adc
sbb
sbb
inc
or
inc
lods
or
push
inc
or
dec
or
add
loop
ror
aas
scas
imul
sub
(bad)
aas
push
cmp
or
bound
mov
and
(bad)
lods
out
pop
mov
xor
idiv
scas
mov
cli
jl
nop
outs
jg
inc
and
push
ficom
dec
or
enter
xor
mov
ins
cmp
repnz
jnp
jmp
je
clc
dec
cwde
jmp
mov
(bad)
aad
mov
mov
sbb
ins
mov
movs
cmps
inc
mov
mov
retf
or
xchg
xor
push
add
repz
mov
shr
test
retf
pushf
xchg
and
ror
xchg
daa
mov
jl
sbb
(bad)
out
jmp
xchg
gs
cmp
inc
sbb
xor
adc
stos
arpl
inc
pop
jne
data16
pop
in
in
addr16
cld
scas
push
dec
out
xchg
adc
cli
daa
test
jne
(bad)
call
or
retf
das
push
sub
pop
into
maxps
test
mov
jle
jne
jle
add
jge
cmp
adc
lods
jge
or
fcom
cdq
sti
(bad)
div
sbb
aad
push
adc
and
mov
lds
pop
dec
mov
out
xchg
push
ds
sbb
jbe
mov
retf
sti
sbb
mov
int
(bad)
mov
xor
js
push
loope
pushf
cmp
loope
pop
jp
mov
jne
imul
inc
sbb
movs
fwait
pop
fwait
lods
inc
and
sbb
std
stos
(bad)
enter
add
enter
ror
int3
out
dec
mov
stos
xchg
ret
retf
shl
je
sub
in
rol
or
mov
add
ja
mov
xor
sbb
adc
sbb
or
mov
call
push
sub
add
into
xor
dec
add
cmp
sub
inc
movs
outs
mov
sbb
fimul
nop
das
test
inc
retf
(bad)
sbb
adc
bound
pop
jg
aas
cmp
fidiv
add
ror
outs
cmp
jmp
jbe
push
sbb
test
inc
pop
mov
mov
iret
xor
mov
test
xlat
popf
scas
sbb
push
sub
daa
jmp
ja
enter
push
xor
pop
iret
fcom
test
repz
mov
mov
mov
and
push
xchg
lea
mov
push
add
xchg
retf
adc
repnz
(bad)
and
xor
inc
or
scas
stos
(bad)
pop
popf
fsubr
shl
ins
call
scas
fisttp
lock
push
fcomp
popf
imul
jns
test
or
(bad)
stos
fcmovnb
push
retf
sbb
mov
add
xchg
ds
cmp
jae
nop
or
jo
pop
in
nop
rol
mov
loope
sub
ss
jmp
pop
dec
mov
inc
xchg
sahf
sti
jno
xor
scas
das
mov
inc
hlt
push
test
(bad)
retf
and
je
adc
aas
push
fimul
mov
fmul
out
or
outs
mov
icebp
ja
aas
shl
(bad)
call
test
jmp
sub
adc
cmp
lds
bound
inc
adc
ror
repz
sub
sbb
dec
jnp
in
cmp
mov
xor
push
pusha
iret
(bad)
pop
mov
lock
lods
cmp
call
std
xchg
pop
sbb
ret
shl
push
les
dec
mov
cld
bound
add
repnz
push
stos
cwde
shl
shl
sar
je
cmp
cmp
retf
dec
imul
xchg
mov
mov
inc
sbb
retf
cmc
mov
push
sbb
xor
in
mov
fstp
jle
dec
ss
popa
stc
mov
gs
push
sub
or
fsub
les
lds
mov
scas
nop
cmp
xchg
xchg
dec
lahf
fist
xchg
mov
or
sbb
xchg
mov
test
std
push
loop
sbb
mov
adc
pop
sbb
loopne
ins
mov
push
loopne
ins
mov
inc
test
cli
or
es
int
xor
xchg
mov
sti
into
cmp
mov
push
jmp
jbe
je
xchg
xor
push
push
not
mov
enter
(bad)
scas
int3
xor
sub
sbb
xchg
lods
sar
add
movs
sbb
inc
into
cmps
jge
mov
popf
test
cs
or
mov
sbb
jb
movs
xor
loopne
(bad)
jg
sub
ins
sub
scas
inc
xchg
pop
test
push
fld
jp
mov
push
shl
mov
mov
and
lods
xor
test
into
mov
pop
mov
and
inc
test
into
shl
std
add
inc
cmc
push
fs
iret
sbb
retf
sub
push
adc
bound
inc
js
lahf
gs
xchg
push
pop
mov
mov
stos
push
lds
out
sub
(bad)
fnstsw
mov
push
sbb
push
sti
mov
pop
dec
dec
scas
inc
iret
xchg
sbb
mov
rcr
and
jae
and
mov
push
adc
stos
jae
stos
and
das
jmp
jae
cmp
inc
sub
sub
lock
push
mov
loopne
dec
in
pop
cmp
enter
xchg
rol
pop
int
push
pop
inc
loop
sub
lds
push
push
loopne
ins
xor
dec
arpl
and
pop
cdq
sub
adc
cmps
(bad)
fld
stos
jg
mov
push
mul
mov
dec
mov
add
mov
jnp
fist
mov
outs
daa
cmps
test
sar
in
aad
jmp
inc
adc
xor
pop
leave
add
sahf
test
inc
mov
leave
adc
push
mov
fs
mov
cld
mov
push
mov
movs
xor
jbe
mov
sbb
call
aaa
sbb
add
jle
icebp
jbe
mov
lahf
adc
ja
enter
adc
sbb
mov
xor
xchg
sbb
in
(bad)
mov
in
ja
add
fadd
cmp
jl
and
fst
push
xor
scas
in
inc
movs
and
scas
imul
push
inc
ficomp
test
std
or
inc
lahf
jno
mov
ja
stos
les
mov
or
vpunpckhwd
sar
inc
push
aas
xor
addr16
cmps
push
xor
jae
popf
in
test
int
rol
(bad)
pop
and
push
add
mov
cli
les
pop
loope
adc
gs
aad
jns
add
sub
movs
aas
rcl
mov
call
(bad)
je
jbe
sbb
jp
std
popf
ins
mov
or
xchg
fdiv
push
leave
in
xor
add
mov
jmp
sub
out
gs
xchg
or
test
cdq
fs
movs
fwait
adc
mov
dec
repz
push
cld
push
pop
pop
add
cmp
(bad)
push
mov
xor
addr16
inc
mov
or
fimul
inc
cmp
mov
pusha
test
dec
retf
lea
dec
jg
xlat
popf
test
pop
out
adc
lods
cs
pushf
(bad)
mov
xor
shr
arpl
push
shl
cli
mov
arpl
ror
xchg
mov
jp
enter
(bad)
cmp
add
imul
fnstsw
dec
mov
shl
inc
mov
push
sbb
dec
shr
fcomi
movs
xor
and
add
retf
xchg
mov
(bad)
pop
ret
mov
or
push
fisubr
push
push
mov
daa
fs
leave
xchg
(bad)
adc
movs
push
or
dec
adc
xor
pop
jnp
jb
pusha
push
jo
sbb
cwde
jp
adc
push
inc
fcomp
pop
stos
lods
jg
mov
jl
fldcw
add
pusha
lea
mov
pusha
mov
adc
loopne
sti
test
out
stos
or
sub
(bad)
outs
or
cli
cdq
(bad)
xlat
inc
xchg
and
xchg
or
(bad)
pop
pop
in
cmp
ja
enter
mov
loopne
ret
xor
iret
(bad)
xchg
movs
shl
nop
push
cmp
pop
or
push
jae
push
mov
lds
sti
xchg
mov
idiv
retf
lds
lahf
push
sub
rol
or
or
ds
jp
sub
sbb
cmc
push
(bad)
cmp
xchg
addr16
mov
stc
xchg
sub
lods
mov
test
test
and
fsubr
mov
pop
inc
aad
int
mov
dec
out
sub
fwait
push
in
mov
and
retf
dec
icebp
ins
xor
and
out
jno
mov
das
adc
ja
dec
xor
outs
or
push
mov
cwde
xor
test
in
add
jb
inc
mov
push
inc
rol
mov
les
div
call
mov
fist
in
dec
xchg
loope
gs
mov
mov
mov
jo
cmp
cmp
push
pushf
or
pop
nop
cli
fdivr
push
out
cs
out
push
pop
loope
neg
sub
ja
dec
mov
rol
push
sbb
(bad)
mov
sbb
mov
dec
xchg
push
jg
xlat
leave
inc
mov
inc
xor
cmp
xor
jmp
gs
ret
dec
mov
out
xor
pop
adc
pop
enter
js
sbb
fs
cmp
jnp
clc
prefetchw
or
xchg
sub
push
inc
pop
test
and
gs
cmp
mov
gs
loopne
fsub
es
outs
mov
ret
loope
push
stc
pop
xchg
call
or
cs
dec
test
cli
xchg
xor
shr
sbb
fmul
inc
lea
pop
sub
cmp
fcom
gs
das
cld
(bad)
cwde
loope
and
popa
and
aas
mov
lds
iret
ins
pop
xchg
cmp
sub
jnp
or
sbb
loopne
std
jmp
push
pop
div
outs
outs
jno
push
xor
js
inc
les
and
pop
mov
repnz
inc
lds
jmp
ins
push
popa
add
and
xcrypt-cbc
cmps
xchg
mov
jb
test
sub
push
psubb
jb
out
mov
cmps
in
mov
jnp
call
jmp
in
mov
in
stos
dec
mov
inc
js
loopne
lods
outs
mov
cmp
jbe
mov
loop
cs
mov
aaa
cmp
xchg
repnz
call
add
cmc
xor
fidivr
call
or
ja
sub
stc
or
cmovle
div
xchg
rcr
cld
cs
mov
mov
jl
test
pop
ss
mov
dec
dec
(bad)
mov
je
mov
inc
pop
inc
ja
adc
(bad)
add
lods
adc
mov
movs
rcr
jecxz
add
jno
mov
xchg
add
ret
adc
xor
outs
mov
xor
or
iret
faddp
pushf
movs
mov
test
stos
sti
lea
jge
push
mov
lea
cmp
and
addr16
push
stos
jmp
mov
(bad)
lds
xor
js
test
lods
adc
jmp
jle
and
(bad)
and
outs
loop
stos
xor
adc
lahf
into
inc
sar
xor
icebp
cmc
dec
das
loop
mov
(bad)
nop
push
arpl
sbb
inc
inc
into
adc
jbe
adc
push
or
out
mov
repz
cli
int3
popa
jns
mov
mov
ins
imul
mov
push
clc
or
jno
pop
sti
cli
pop
inc
inc
xor
cmps
pop
cmps
mov
fld
and
lock
das
pusha
fs
xor
inc
sub
scas
dec
fisttp
adc
cmp
enter
cld
adc
mov
stos
mov
(bad)
or
jl
loop
in
mov
ja
and
add
arpl
leave
dec
xchg
jp
sbb
ss
arpl
daa
cmc
mov
outs
stos
pop
and
(bad)
pop
retf
(bad)
into
mov
inc
dec
jbe
jns
adc
pop
(bad)
jecxz
dec
and
test
inc
xchg
dec
test
pop
sbb
mov
ret
ret
jb
or
push
int
(bad)
stos
scas
cmp
mov
mov
pop
sub
pop
mov
inc
dec
ficom
leave
xchg
push
mov
or
push
fdiv
mov
sbb
in
jne
jmp
dec
dec
int3
popf
ja
jmp
outs
and
xchg
mov
or
hlt
jne
sub
adc
sti
hlt
into
shr
mov
lahf
cmp
cmc
push
jno
repz
xchg
cs
fdiv
jp
loopne
jns
mov
mov
mov
jne
data16
cmp
adc
inc
push
int
mov
mov
scas
xor
jg
inc
ss
push
add
inc
arpl
in
sub
xchg
dec
out
or
mov
jg
stos
lods
int
pop
fmul
sbb
add
loope
pop
sbb
shl
inc
mov
inc
jl
mov
test
cmp
cwde
adc
lea
inc
add
xchg
ins
ret
repz
pop
and
inc
lahf
inc
push
ret
sahf
xchg
ret
test
xor
fst
sub
(bad)
fimul
jmp
add
push
jp
mov
ror
push
sbb
jle
xchg
cmp
in
push
sbb
loop
and
inc
mov
sub
and
or
inc
ret
jge
xor
movnti
pop
inc
dec
outs
fsub
mov
sti
adc
repz
je
mov
mov
test
pop
mov
sti
push
jmp
leave
pop
push
pop
scas
push
jmp
jo
mov
pop
in
movs
push
pusha
add
jne
sbb
iret
adc
push
ins
mov
mov
inc
dec
sbb
dec
cdq
or
cmps
into
cld
push
or
imul
movups
xor
pop
aas
mov
jg
cmc
adc
fdivp
jo
cs
cmp
cmp
mov
popf
in
(bad)
idiv
pop
stos
mul
fidivr
std
xor
into
js
pop
sub
sub
ss
xor
out
jp
push
dec
mov
push
pop
jmp
add
mov
leave
push
jecxz
bnd
xor
pop
cmc
gs
rcl
mov
imul
fidivr
popa
push
xor
cmps
sub
add
jno
or
lods
out
(bad)
jb
mov
sbb
out
push
dec
call
(bad)
(bad)
lea
bnd
xchg
stos
ins
mov
gs
and
and
movs
xchg
lock
add
dec
stos
pop
and
push
mov
pop
mov
rcr
repnz
push
pop
sub
lea
lea
stos
jecxz
pop
fldenv
pop
mov
sahf
inc
inc
repnz
int3
frstor
cmp
idiv
and
ins
imul
adc
iret
inc
div
scas
stos
jne
mov
shl
mov
ret
mov
dec
push
rcr
dec
dec
pusha
sub
sti
jno
fld
or
outs
xor
ins
mov
dec
stos
and
jp
jl
shl
dec
out
scas
dec
jae
mov
lds
int
inc
movs
or
in
jl
mov
xchg
mov
mov
fldenv
lahf
loope
jp
sbb
dec
mov
dec
jl
adc
mov
jne
mov
mov
sbb
imul
lahf
xor
add
xor
mov
adc
mov
fidivr
xchg
xor
mov
cld
fwait
sbb
cdq
in
loop
and
dec
rcl
cmovge
mov
xor
mov
shl
sub
mov
and
fprem
loopne
jae
shl
shl
mov
fidiv
or
inc
push
js
jo
xor
and
and
pop
mov
(bad)
xor
loope
int3
test
sub
xchg
(bad)
cmp
jg
shufps
jmp
(bad)
call
(bad)
hlt
push
les
movs
nop
push
mov
sub
(bad)
aaa
daa
add
push
adc
mov
mov
inc
sub
jmp
aam
adc
imul
cmp
sub
mov
movs
mov
stos
cmps
sub
mov
ret
xchg
in
sbb
sbb
fsub
enter
xlat
in
inc
sub
sbb
jne
mov
mov
xor
sbb
push
mov
fstp
mov
std
iret
adc
xor
jb
sbb
mov
xchg
movs
jb
lods
pop
call
push
add
lock
fsubr
ret
loop
test
ss
ss
pop
dec
sar
ss
xor
movs
movs
add
push
shl
push
xchg
outs
cmps
fadd
mov
pusha
popf
imul
cs
inc
pop
push
or
int3
mov
popf
cmp
das
shl
adc
add
into
sbb
mov
loope
add
data16
es
test
fcomp
cmp
xchg
jne
imul
pop
push
jbe
add
add
lahf
dec
mov
mov
adc
add
dec
jne
add
lock
jnp
test
push
mov
cld
fwait
ins
xchg
lahf
xor
mov
into
add
lock
and
js
jae
dec
mov
pushf
dec
mov
fild
add
dec
xrelease
mov
in
cdq
adc
out
int3
ss
adc
js
mov
inc
mov
stos
les
mov
bound
popf
add
retf
pop
sub
adc
jne
adc
rcr
push
(bad)
push
call
xchg
and
pushf
mov
adc
dec
cwde
fnstenv
inc
sti
fisub
mov
jo
cmovbe
int3
out
out
sti
jge
jmp
cmps
jmp
sbb
inc
(bad)
lahf
ror
mov
repnz
sub
xor
and
mov
push
icebp
inc
dec
ficom
ins
cmp
mov
and
inc
push
add
fadd
or
sbb
lods
xchg
dec
pushf
arpl
and
in
outs
lds
adc
fldcw
xchg
xchg
inc
stos
xchg
rcr
mov
lahf
adc
xchg
xor
dec
(bad)
bswap
and
mov
jl
mov
or
sub
inc
cmps
adc
sahf
mov
xor
lock
xchg
loope
fidiv
lahf
mov
xchg
repz
xlat
out
stos
sub
fs
jmp
aad
push
arpl
or
into
sub
inc
fst
mov
mov
rol
fiadd
(bad)
push
sub
or
inc
pop
(bad)
stos
aam
or
fisttp
jmp
and
jno
aaa
sbb
mov
int3
rcr
jns
retf
jg
mov
es
sub
faddp
inc
addr16
gs
stos
movs
or
push
loop
cdq
push
iret
inc
push
in
dec
xchg
mov
inc
test
jge
imul
hlt
loop
xchg
mov
inc
cmp
mov
call
mov
popa
int3
es
dec
push
xchg
rcr
add
add
push
sub
mov
lea
in
pusha
pop
mov
inc
popf
ficom
pop
gs
loop
pop
popa
inc
cmp
pop
xchg
dec
xchg
test
bound
cmp
add
dec
(bad)
fidiv
or
retf
ins
(bad)
fist
imul
aam
mov
jmp
mov
mov
mov
mov
rol
pop
jl
jmp
aad
push
mov
lea
adc
sar
lds
das
or
aam
xchg
sahf
inc
loop
call
imul
push
jns
jl
scas
or
push
stos
xor
sub
ins
mov
jae
add
inc
adc
cs
lahf
push
jge
sbb
mov
pushf
push
(bad)
aam
push
jo
or
mov
outs
and
std
stos
jb
(bad)
stc
xchg
mov
fst
stos
mov
or
dec
fist
test
xchg
fild
test
stos
push
adc
ins
jmp
or
out
std
rcr
fsubr
xor
aas
psllw
inc
mov
add
or
sub
dec
xchg
and
inc
mov
pop
mov
stc
mov
add
sub
outs
mov
in
dec
jb
sub
add
mul
or
fs
dec
not
icebp
sbb
xchg
or
jmp
clc
out
inc
jns
out
add
sbb
(bad)
pop
sub
push
dec
mov
sbb
imul
push
xchg
rcl
mov
jbe
xchg
in
mov
pushf
sar
push
fimul
or
adc
fs
stos
pop
int3
jmp
xor
sbb
aam
xchg
jl
push
jbe
je
jno
ret
shr
fwait
stc
rol
jmp
test
adc
adc
call
mov
adc
sub
movs
cs
inc
(bad)
scas
xor
test
mov
push
push
ret
outs
sub
fldcw
mov
add
push
dec
cmps
push
test
imul
inc
mov
xlat
sub
pop
sar
imul
les
mov
sub
es
fwait
(bad)
rcr
idiv
xchg
dec
stos
push
xor
jbe
mov
inc
scas
add
std
pop
sbb
jnp
les
adc
or
or
ins
sti
lods
adc
ds
loope
pop
add
or
inc
mov
fist
adc
inc
shl
sar
sti
ret
lods
adc
addr16
es
adc
out
ss
mov
mov
fsubrp
fdivr
push
fs
loopne
push
jge
loopne
sub
push
cmp
outs
mov
out
pop
std
jle
aad
bswap
sar
sub
adc
sbb
stos
ja
and
out
(bad)
jns
xor
xchg
sub
out
into
cmp
std
push
lahf
add
inc
in
enter
jl
sbb
jg
cwde
jbe
iret
les
and
iret
daa
fcomp
xchg
test
or
or
fst
ds
mov
cs
mov
cwde
stc
and
sbb
lods
inc
outs
clc
dec
xor
cmps
push
ret
dec
or
outs
inc
enter
gs
push
ror
fidiv
jle
sub
push
aaa
inc
in
out
xchg
and
outs
retf
adc
repz
jbe
push
dec
xchg
into
pop
cmp
test
xor
xchg
iret
aad
pop
pop
mov
xchg
cmps
jmp
inc
aas
dec
cld
mov
xor
fstp
lods
ja
add
jge
ret
mov
in
stos
mov
jg
jne
cld
mov
aas
adc
cwde
xor
cmps
and
jnp
inc
dec
xchg
mov
arpl
jg
sahf
shl
push
test
(bad)
pusha
in
mov
ins
ficom
xchg
inc
rol
outs
iret
js
ds
leave
dec
shr
xchg
inc
mov
or
inc
aad
cs
or
and
popa
xchg
sub
cmp
sub
(bad)
imul
je
sub
outs
or
int
adc
add
test
sub
mov
ror
stos
xchg
sbb
jae
inc
in
dec
addr16
cmc
xor
sbb
jp
xchg
clc
sbb
add
xchg
sahf
jecxz
inc
and
sahf
and
cld
sub
ficomp
push
pop
add
and
imul
cld
arpl
test
mov
add
shr
mov
push
dec
ds
dec
in
mov
mov
adc
sub
fucom
add
mov
adc
ror
stos
loop
sub
out
out
lahf
adc
dec
sub
ins
out
fist
add
pextrw
push
pusha
pop
or
fdiv
in
rol
jnp
mov
stc
xchg
out
scas
or
cmp
test
fcmovne
sub
add
clc
xor
(bad)
sbb
and
repz
push
and
dec
dec
fcomp
sub
mov
inc
sub
pop
fldcw
shr
mov
adc
mov
push
or
and
push
dec
mov
xchg
cli
ds
fld
xchg
or
ja
das
loop
adc
push
data16
popf
push
ja
xchg
mov
(bad)
in
shl
sar
call
push
js
sti
dec
jns
inc
fsub
out
jae
add
mov
adc
pop
and
mov
adc
jb
inc
sub
sbb
lds
scas
pop
ror
addr16
push
dec
js
or
mov
rol
(bad)
ds
test
cli
push
pop
mov
rcl
shr
test
push
imul
mov
je
imul
inc
or
jmp
mov
outs
gs
daa
xchg
mov
dec
cmps
sbb
or
ins
mov
cmp
xor
in
nop
cmp
jle
lock
fcmovnbe
fucom
in
cli
sbb
jl
push
(bad)
ss
lock
push
sub
(bad)
call
cmp
add
jo
(bad)
(bad)
sar
loopne
push
adc
pop
(bad)
add
xor
sbb
sub
ret
mov
push
mov
in
shr
sub
ja
test
pop
jmp
cmp
test
ds
mov
pop
inc
inc
push
mov
lds
push
mov
test
xor
cmp
jp
mov
ja
xchg
repz
push
push
int
xchg
fstp
xlat
lock
aas
lods
xor
in
jmp
xchg
cwde
or
or
pop
sbb
xchg
xchg
cmp
cld
cmp
mov
jge
xchg
in
mov
jb
je
pop
mov
mov
cmp
cmp
push
cmp
out
mov
xlat
test
stc
pop
bound
or
inc
rol
cwde
mov
mov
push
and
cmc
test
pop
or
sub
mov
adc
and
xchg
lds
xor
jnp
icebp
add
popf
loop
inc
cmps
rcr
dec
push
(bad)
lahf
enter
ret
mov
jno
mov
(bad)
push
inc
mov
jmp
mov
call
rcl
int
inc
pop
mov
pop
cmp
xor
js
xor
lea
pop
gs
daa
cli
js
jg
inc
push
sbb
inc
les
int3
push
xchg
mov
sub
pop
sbb
scas
cmc
pop
xchg
aam
int3
stos
or
xor
(bad)
cli
cmps
icebp
push
ret
mov
mov
jg
pop
xchg
adc
mov
sti
(bad)
xor
inc
inc
pop
dec
cmp
test
xchg
sahf
nop
or
mov
sub
sbb
inc
retf
jl
rol
pusha
pushf
pop
mov
sbb
xlat
jl
inc
outs
sbb
inc
pop
lods
mov
fcmovbe
jns
les
arpl
jg
and
push
aaa
lods
sbb
add
stos
inc
gs
jmp
loope
lock
mov
push
push
inc
xlat
lock
cld
fcmovne
std
sbb
xchg
sub
mov
mov
outs
call
xor
scas
sbb
pop
clc
imul
fidivr
out
ins
loop
les
nop
adc
pusha
mov
and
retf
sahf
mov
dec
xchg
rol
jle
dec
dec
push
jp
push
push
es
data16
fucomip
loop
mov
imul
and
dec
es
or
cmp
arpl
fld
in
or
lock
inc
nop
hlt
inc
std
(bad)
dec
call
lods
leave
mov
lock
repnz
in
clc
adc
xor
push
sub
bound
mov
out
dec
sub
aad
ffreep
inc
pusha
push
xor
sbb
push
repnz
pop
int3
dec
mov
sbb
fcmove
(bad)
mov
pop
cs
pop
xor
dec
sahf
jbe
dec
cmp
mov
jl
mov
pop
fcomp
pop
mov
sub
push
scas
jae
xchg
ins
inc
xor
push
pop
out
inc
imul
cs
mov
xor
dec
aas
inc
xor
iret
mov
sub
movs
add
cmps
sti
inc
(bad)
sti
(bad)
movs
scas
popf
inc
mov
inc
jo
cmp
(bad)
fist
ror
dec
push
sub
sbb
and
adc
fwait
lahf
inc
push
cdq
repz
dec
cdq
cmp
adc
pushf
int3
jmp
popa
enter
sub
ja
cmps
ins
pusha
xchg
or
sbb
jae
fwait
das
xchg
arpl
cmc
mov
xchg
xor
fcmove
ja
ret
fcmovnu
jmp
jne
jle
jecxz
inc
xlat
cwde
and
jne
sbb
cli
mov
jmp
lock
in
(bad)
pop
loop
popa
into
mov
mov
cwde
or
sub
(bad)
mov
mov
call
cmp
(bad)
mov
(bad)
in
add
rcr
dec
sbb
adc
or
mov
imul
icebp
jnp
or
jl
mov
inc
je
push
cmp
hlt
sub
xchg
pop
jnp
rcr
add
push
and
jl
popf
xchg
outs
jbe
or
cwde
and
jg
stos
add
jl
push
jo
pop
xchg
sti
adc
xchg
lods
jns
jmp
outs
mov
mov
or
or
sti
test
add
pop
jmp
aad
cwde
push
add
xchg
sub
stos
mov
push
(bad)
jle
(bad)
cmp
and
add
outs
mov
and
mov
popf
jae
jg
cmps
pop
loop
mov
push
fdivp
push
out
ss
push
dec
mov
dec
(bad)
enter
add
inc
iret
sbb
jb
test
loopne
xor
inc
push
or
out
add
(bad)
mul
stos
sbb
cmc
ja
ret
test
mov
inc
mov
inc
sbb
pop
xor
jmp
mov
enter
jmp
jbe
and
push
mov
or
ja
cmp
sbb
xor
xchg
movs
icebp
inc
lahf
jl
xchg
mov
sub
or
xchg
xchg
(bad)
xchg
repz
push
mov
es
dec
inc
mov
mov
movq
inc
les
div
cli
add
pop
inc
or
pop
xor
ret
pop
(bad)
xlat
call
mov
aad
sub
xor
test
stos
(bad)
aam
or
out
xchg
mov
xor
out
jnp
fstp
mov
les
inc
idiv
shl
repz
add
or
inc
jp
imul
aas
or
dec
fist
out
jmp
lea
and
jl
add
fdivr
and
jl
push
add
push
dec
dec
in
les
cmp
adc
sub
bnd
fcom
or
cmp
iret
push
inc
pop
push
retf
std
jl
out
add
arpl
rcl
lea
jle
mov
xchg
xchg
cli
sbb
lock
test
test
sub
js
cmc
sbb
and
jg
mov
cmps
sbb
push
jmp
ret
mov
loop
mov
pop
aad
or
das
xor
dec
out
das
mov
hlt
fdiv
pop
fwait
xor
or
mov
retf
in
jnp
(bad)
(bad)
cmps
mov
mov
dec
mov
mov
sbb
xor
test
jbe
out
pusha
xchg
sti
push
sar
jns
dec
mov
push
dec
and
mov
push
sahf
xchg
out
push
xor
xor
push
pop
loope
in
int3
cs
or
jno
stos
fwait
jns
loop
stos
mov
mov
nop
jecxz
aam
mov
(bad)
int
cmp
push
retf
stc
cmc
into
adc
(bad)
pop
imul
pop
mov
push
inc
pushf
sbb
retf
mov
pop
lock
cmp
mov
push
lods
mov
push
retf
adc
movs
mov
dec
mov
mov
pop
inc
jmp
pop
scas
and
fld
movs
call
mov
jl
jbe
fnstsw
aas
outs
retf
sub
out
lds
call
mov
add
scas
lea
mov
int
popa
mov
adc
adc
aad
je
in
pushf
scas
dec
xchg
pushf
stos
stos
inc
sub
div
sbb
arpl
inc
sub
and
add
add
jmp
jmp
xor
cmp
mov
sahf
and
cdq
adc
icebp
fidiv
add
in
cdq
jb
mov
mov
ror
retf
pop
sbb
mov
inc
loope
add
outs
(bad)
pop
and
fdivr
out
ror
out
ss
or
(bad)
iret
call
pop
sbb
adc
stos
inc
mov
popf
jle
push
cwde
inc
dec
ss
retf
mov
xor
clc
sbb
aaa
jb
stos
sbb
data16
ds
pop
xchg
imul
and
data16
push
cli
dec
and
jge
fdivr
add
imul
cli
mov
es
cld
xchg
call
push
mov
scas
and
jns
clc
sbb
mov
xor
push
popf
mov
mov
imul
push
push
xchg
dec
cmp
pop
fisubr
jg
aad
pop
iret
cmp
cmp
in
fnstenv
inc
dec
(bad)
mov
retf
stc
scas
jg
fucom
out
je
add
leave
and
sub
(bad)
in
mov
movs
sti
sub
psubb
push
xor
mov
ret
pop
nop
in
sub
mov
mov
cwde
retf
lahf
fistp
das
pop
inc
fnsave
(bad)
clc
pcmpeqd
inc
test
mov
xchg
bound
rcr
and
sub
xor
aas
pop
shl
out
cmp
dec
sub
ins
idiv
or
and
pop
sbb
aad
call
inc
rcr
pusha
sub
xchg
xchg
mov
neg
pop
or
jnp
inc
sub
mov
cmps
dec
out
dec
int
ss
mov
xchg
movs
xor
jbe
loop
lds
pusha
retf
lahf
imul
sub
lahf
das
lds
ins
push
add
cwde
fld
mov
inc
cmc
mov
retf
push
push
xchg
fxch
das
shl
xchg
aad
movs
xor
and
jb
pop
pop
cmp
adc
pop
add
push
ds
add
aas
shl
mov
mov
cmp
pop
fist
push
sub
call
das
jmp
jg
arpl
or
sub
mov
jne
mov
imul
outs
add
push
movs
mov
icebp
jl
dec
jns
aam
mov
jno
out
iret
(bad)
cli
in
adc
loop
in
and
ret
mov
sub
rcl
fist
or
fisttp
cmps
retf
fnstenv
fdivrp
add
mov
addr16
mov
in
adc
pusha
movs
sbb
jae
mov
push
jo
lea
push
inc
icebp
inc
popf
aam
push
das
in
mov
mov
fs
pop
dec
test
test
scas
and
push
rcl
xchg
cmp
(bad)
in
fsub
fld
mov
and
mov
cmp
aas
stos
arpl
jl
ins
jo
adc
xchg
mov
jge
jb
mov
cmps
fprem
sahf
or
cmps
adc
sub
add
fstp
lock
lds
adc
call
stos
dec
daa
popf
inc
idiv
jae
xor
push
sbb
into
cmp
xchg
push
xor
or
ficomp
or
mov
hlt
or
repz
xchg
scas
or
retf
sbb
ficom
jnp
inc
adc
mov
adc
lods
push
popf
bound
lds
lahf
jle
int3
dec
(bad)
pop
adc
add
adc
xchg
xor
jge
into
adc
and
outs
ret
ss
adc
lahf
loop
jg
jecxz
imul
cdq
sub
push
stc
pop
(bad)
(bad)
pop
xor
mov
data16
jo
jg
cmp
jbe
imul
sbb
pop
adc
jmp
jbe
jne
jle
inc
cmp
or
push
shl
enter
add
mov
jge
inc
mov
add
cwde
cli
push
call
fsubr
loope
fadd
cmp
ror
and
test
bound
mov
test
int3
and
cmp
mov
adc
arpl
and
iret
es
not
xchg
outs
aam
adc
(bad)
push
add
ficomp
nop
xchg
(bad)
ror
xlat
push
mov
and
inc
mov
add
pop
mov
mov
test
pop
xor
sub
icebp
adc
pusha
lahf
cmp
enter
cmp
jb
jg
push
pop
fnstcw
sub
xchg
sub
in
and
mov
xchg
fdivrp
sub
or
fidivr
lds
jmp
sbb
sbb
cmp
popf
push
sbb
jb
aaa
fs
stos
mov
mov
xchg
push
js
fs
jmp
sub
mov
inc
pop
in
xlat
jmp
clc
(bad)
dec
pop
stos
or
std
add
mov
pop
and
xor
aaa
mov
ret
sub
jge
(bad)
rol
icebp
sbb
add
xor
scas
adc
and
cmps
popf
add
in
push
inc
in
xor
mov
mov
out
leave
js
aaa
mov
clc
push
retf
jbe
sbb
cdq
or
fsubr
push
ins
pop
fistp
fistp
mov
push
pop
ja
test
pusha
div
ins
test
popa
mov
cwde
test
mov
mov
add
jmp
mov
or
ret
jae
push
pushf
sub
fwait
inc
hlt
xchg
lock
ss
sbb
xor
sbb
inc
ror
(bad)
mov
scas
test
adc
cld
jbe
pop
adc
test
out
mov
ret
xor
inc
add
dec
std
daa
mov
or
imul
sbb
jg
cdq
cmps
xchg
mov
scas
xchg
push
nop
cmp
in
test
jo
jle
pop
or
dec
retf
test
inc
xchg
and
sbb
rcl
mov
test
clc
adc
movs
lods
jmp
mov
test
mov
sbb
loop
push
movs
into
jmp
cli
sar
les
ret
adc
popa
daa
(bad)
popa
movs
pop
or
fs
adc
push
into
xor
fwait
mov
mov
dec
cdq
mov
or
push
push
mov
pop
shr
call
dec
push
std
pop
sub
cs
add
and
mov
dec
in
inc
cld
jne
ins
push
(bad)
adc
mov
add
or
or
in
ins
loopne
ss
daa
(bad)
add
int3
jb
jb
mov
es
fstp
jbe
outs
cmp
push
sbb
mov
mov
jno
xor
xchg
mov
imul
push
add
stc
je
mov
add
cmp
lahf
into
ret
ds
pop
jbe
add
push
sbb
xor
mov
mov
push
test
sbb
jne
sub
mov
daa
test
dec
ret
mov
mov
not
xchg
ret
add
leave
in
loop
aad
mov
scas
and
into
adc
sub
pop
into
and
ja
adc
adc
push
dec
sub
and
xor
fucomi
int3
cwde
sar
adc
add
dec
sbb
cmp
fistp
(bad)
lods
inc
xchg
push
xchg
mov
mov
js
xlat
imul
mov
movs
xor
mov
mov
jmp
jl
test
lods
sbb
sub
pop
leave
out
shl
icebp
cmp
scas
mov
cmp
add
popa
int3
and
stos
cld
stos
lock
aaa
mov
pop
pop
sbb
repnz
fsubr
or
jmp
mov
xlat
sub
aaa
jb
and
and
pop
mov
mov
cmp
(bad)
push
in
je
push
xchg
ret
aas
cmp
mov
pusha
adc
rol
mov
fstp
std
mov
xchg
xor
ins
arpl
aaa
cmp
popf
pushf
inc
xchg
daa
and
retf
xor
jmp
int3
aaa
dec
out
stos
cmp
mov
popa
mov
cmp
mov
sti
shr
fiadd
mov
lahf
lods
out
or
xor
loope
push
ret
xlat
or
cmp
pop
movs
mov
loope
loopne
add
shl
dec
push
fistp
(bad)
stos
jg
jmp
frstor
xor
das
cmps
xor
and
adc
fmul
mov
int3
lods
(bad)
cmp
shl
sbb
movs
push
xlat
ud2
cmp
fiadd
pop
in
pop
nop
mov
push
jae
fs
jb
(bad)
and
repnz
ficom
dec
je
inc
pop
or
int3
lahf
fisttp
or
or
sub
add
jb
push
stos
int3
mov
test
pop
add
dec
mov
and
and
test
outs
nop
xlat
push
mov
loope
jg
(bad)
pop
sub
xchg
xlat
scas
pop
inc
ss
mov
fstp
movs
in
sub
xor
xor
mov
repnz
cwde
jmp
cmp
jge
adc
rcr
inc
mov
stos
xchg
inc
cld
(bad)
inc
push
mov
cmp
xchg
jno
mov
addr16
out
fmul
lea
or
arpl
jno
pop
xchg
(bad)
mov
cli
jno
lea
add
inc
getsec
push
or
mov
push
inc
aas
pusha
out
outs
aam
mov
mov
sbb
sbb
mov
gs
adc
stos
das
daa
call
rcr
push
push
or
mov
out
clc
xor
loope
lods
push
sub
mov
pusha
pushf
or
retf
movs
cmp
pop
adc
sbb
leave
mov
xchg
mov
div
fcomp
out
not
popf
push
icebp
ja
jmp
cwde
icebp
push
cmps
push
mov
les
pop
test
pop
(bad)
movs
cld
inc
nop
jns
and
pop
sahf
xor
mov
call
pop
repnz
out
cmp
sub
cmp
or
ja
cmp
adc
(bad)
mov
sbb
xlat
mov
jne
inc
ret
cmp
pop
or
jmp
fwait
ds
mov
rcr
(bad)
mov
and
jmp
cdq
mov
in
fwait
in
sbb
(bad)
outs
inc
js
mov
in
icebp
xchg
cwde
(bad)
loop
sub
cmp
dec
xor
xor
and
cmp
sbb
icebp
mov
sahf
xor
push
xchg
imul
xor
jge
sbb
stos
lds
fisttp
push
jns
loop
sbb
sbb
adc
mov
std
lahf
dec
jbe
stos
jb
jmp
or
ins
aas
movs
stc
cmp
les
pushf
inc
sub
inc
call
nop
out
jae
mov
sub
shl
inc
call
sub
or
mov
aas
mov
sbb
test
call
enter
jbe
adc
fisttp
mov
adc
test
mov
fmul
mov
lahf
pop
mov
and
jge
loope
arpl
and
dec
push
outs
rol
ret
or
sbb
ss
sti
sti
jp
push
fisttp
and
dec
and
xlat
jae
(bad)
in
and
sbb
fdiv
and
push
cmp
mov
jnp
stos
(bad)
out
iret
fdivr
mov
cmps
mov
dec
ja
pop
xor
jmp
stc
inc
xchg
or
cld
aaa
jnp
push
aaa
rcl
test
movs
add
mov
sub
scas
or
shr
cmp
sbb
jp
dec
mov
outs
xchg
cmps
xor
cmp
push
push
out
repnz
jb
xchg
dec
imul
out
test
jg
xchg
clc
neg
adc
and
cs
push
sub
sub
(bad)
add
iret
jle
jb
cmps
mov
add
loopne
xchg
add
add
adc
je
pop
or
(bad)
cmp
std
push
ins
mov
lock
pusha
stos
push
dec
lods
hlt
and
icebp
popa
and
aas
jnp
pop
mov
mov
xor
mov
mov
dec
cs
sub
in
test
fistp
inc
mov
dec
pushf
in
jne
jne
repnz
cmp
je
pop
mov
jno
mov
push
mov
daa
fidiv
mov
jge
nop
push
xor
cld
push
rol
(bad)
adc
clc
stos
enter
js
mov
in
retf
inc
mov
stc
pop
adc
xchg
jmp
ja
retf
push
idiv
fnsave
or
imul
cwde
fstp
cmp
pop
rcr
xor
adc
cmp
aam
inc
movs
fcmovne
cmc
push
aad
or
xor
jle
sub
in
add
push
repnz
sub
addr16
push
cld
ret
inc
mov
xchg
lahf
aaa
dec
cli
addr16
jne
mov
pop
ds
rcl
daa
out
test
xchg
and
push
jp
in
rcl
in
clc
in
mov
fild
pop
inc
mov
mov
sbb
lea
arpl
in
daa
inc
dec
cli
dec
lock
mov
xor
sub
cmp
lock
imul
das
dec
jle
xor
aad
mov
in
sub
mov
xchg
mov
cmp
xchg
jbe
(bad)
loopne
push
repnz
push
sti
sbb
(bad)
in
scas
cmps
mov
mov
iret
out
sbb
cmp
inc
jae
fisubr
sbb
mov
int
jns
adc
sbb
xchg
pop
test
out
dec
popa
js
jmp
inc
xchg
adc
scas
mov
lahf
in
mov
cmp
mov
mov
int
rol
in
jae
jne
rol
add
ins
mov
jae
xlat
shr
push
ret
pop
mov
mov
dec
push
iret
popa
cmc
mov
xchg
cmps
jl
das
cli
data16
outs
stos
pop
cmp
pop
or
pop
xchg
call
bound
jo
inc
xor
push
fmul
push
fsubr
enter
inc
sub
(bad)
inc
mov
xor
enter
push
jae
mov
(bad)
xchg
mov
aaa
jae
clc
xchg
popf
fist
call
into
sbb
(bad)
pusha
mov
xor
popf
test
jnp
stos
sti
rcl
inc
popf
ret
sub
xchg
dec
daa
push
and
or
jb
mov
inc
push
mov
push
daa
outs
fwait
inc
cmp
stos
out
stos
pop
test
in
cs
mov
hlt
pop
imul
xchg
inc
sbb
je
jno
mov
das
(bad)
push
data16
out
and
dec
dec
fwait
mov
ret
mov
das
aaa
dec
push
shr
mov
sbb
aaa
(bad)
mov
adc
pop
jo
xor
jb
jge
jg
stos
nop
jecxz
movs
jno
push
ins
cwde
movd
scas
inc
pop
or
call
daa
add
sub
pop
nop
aas
cwde
aam
cmp
test
adc
cld
out
lods
mov
popa
push
or
fwait
in
adc
add
repz
and
(bad)
mov
push
pop
cmp
xor
pop
(bad)
ret
repnz
shl
jne
adc
imul
mov
cmp
push
sti
push
jle
add
xor
mov
fstp
jg
and
fdivr
push
add
gs
sub
jecxz
cmp
sub
rol
inc
cwde
shl
jne
ficomp
add
and
or
repnz
mov
or
sub
jno
mov
pop
ss
ret
jae
stos
cmp
mov
gs
add
pop
retf
pop
test
xchg
lods
dec
xchg
gs
mov
sub
xlat
mov
in
mov
fst
mov
outs
cmps
icebp
scas
jno
pusha
pop
jne
inc
inc
xchg
xchg
addr16
iret
adc
pop
sbb
mov
es
ret
and
inc
int
(bad)
push
jb
in
lock
sbb
jl
mov
sub
(bad)
aas
std
outs
loop
(bad)
adc
xor
add
sbb
clc
and
movs
gs
mov
dec
jno
fsub
mov
jae
sbb
rcl
push
je
movs
xchg
jns
(bad)
cmp
and
retf
mov
div
sbb
sub
jg
imul
(bad)
sub
fwait
mov
jle
fwait
mov
xchg
pop
mov
inc
push
sub
mov
imul
mov
add
pushf
xor
mov
movd
sti
pop
or
xchg
push
outs
cmp
xor
xor
inc
jbe
push
inc
mov
stos
xor
shl
out
aam
xchg
fdiv
inc
sub
movs
adc
push
and
loope
mov
inc
inc
cmp
retf
xchg
loope
mov
fstp
sub
cmc
cmp
push
aam
fsubr
mov
or
sbb
loop
fwait
dec
outs
push
jge
aaa
xchg
scas
pop
mov
cli
cmp
popf
dec
mov
ins
cmps
ss
(bad)
mov
call
jb
icebp
fld
mov
add
repz
dec
into
sub
push
xchg
sub
int3
(bad)
mov
lods
clc
pop
popf
cld
dec
mov
stc
ret
sbb
ins
int
and
hlt
and
fs
jmp
idiv
push
push
sbb
test
jns
push
hlt
inc
mul
and
cs
and
sbb
inc
cld
mov
xor
cmp
pop
push
in
je
pop
test
mov
enter
cmp
popa
enter
jg
and
(bad)
xlat
cmps
fldcw
sub
and
sub
pop
pop
xor
(bad)
cmp
mov
shl
(bad)
cmps
popa
ror
push
pop
jmp
popa
xchg
mov
sbb
cmps
movs
stos
xor
dec
hlt
lods
sub
lds
pop
test
push
mov
jnp
cmp
jmp
or
jae
xchg
lods
xor
test
sub
fld
pushf
fidiv
test
leave
pop
and
shl
shl
popf
adc
jmp
in
movs
jmp
sub
fdivr
loop
in
inc
xchg
(bad)
js
cmps
pushf
inc
inc
das
addr16
imul
repnz
xor
loope
add
es
or
nop
iret
dec
sub
pop
inc
outs
out
ins
add
dec
pop
sbb
mov
push
into
mov
add
jae
sub
mov
push
arpl
clc
mov
mov
and
jne
and
inc
sub
loop
test
iret
push
xor
popf
cmp
or
sti
sub
xor
pusha
mov
sbb
movs
in
mov
inc
dec
inc
xchg
les
jmp
xor
loopne
and
dec
movs
push
inc
push
push
jb
dec
inc
inc
mov
or
das
dec
dec
inc
cmp
or
pusha
je
xor
mov
movs
imul
push
cmps
push
loop
fisttp
cs
or
push
retf
and
push
or
shr
dec
cmp
sbb
cmps
push
or
xchg
cmp
lahf
icebp
mov
cs
movs
retf
retf
mov
sub
dec
push
retf
loope
test
jb
mov
clc
cmp
pop
add
pop
cli
icebp
pop
jmp
xor
dec
(bad)
mov
out
aad
test
call
xor
xchg
pop
mov
imul
jge
or
inc
push
pop
xchg
mov
xor
inc
adc
adc
mov
push
cmps
imul
pop
in
jbe
mov
gs
push
push
xchg
ficom
and
loope
ffree
sub
push
mov
repnz
repz
inc
daa
push
sbb
push
clc
ins
ja
push
js
push
lods
out
and
jmp
and
xor
mov
adc
ds
add
(bad)
mov
fdivr
push
mov
rol
dec
sar
cmc
push
fidivr
pusha
das
sbb
xor
cmp
and
jmp
push
nop
popf
xchg
or
paddusb
sbb
lahf
ror
dec
loopne
pop
add
cdq
clc
imul
sub
jns
stos
sub
out
or
imul
mov
(bad)
repz
aaa
push
sub
inc
(bad)
lds
inc
mov
push
ins
ja
hlt
test
mov
icebp
popa
mul
in
or
sar
rol
popf
fmul
movs
xlat
sbb
jle
loopne
add
fdivr
ins
inc
call
add
xor
shr
sub
add
cmp
pusha
pushf
sub
fucomip
popa
jl
js
jbe
or
mov
adc
mov
outs
mov
stos
push
push
inc
scas
aaa
mov
in
jge
lods
jbe
push
dec
pop
cwde
xchg
mov
mov
dec
cmp
outs
dec
add
jnp
mov
jo
enter
add
mov
(bad)
setno
std
jmp
pop
pop
sbb
ds
adc
mov
jno
jmp
idiv
sbb
push
pop
or
mov
loopne
out
jp
clc
and
scas
daa
sub
and
push
cmp
push
test
out
hlt
push
int
(bad)
inc
sub
xchg
cdq
rcr
mov
xchg
dec
fisttp
inc
enter
mov
sub
cld
add
ret
icebp
adc
aam
ss
add
and
xchg
cmp
adc
xchg
(bad)
ss
rcl
dec
xchg
ss
adc
dec
sbb
cmp
clc
jnp
mov
xchg
adc
or
cmps
sub
dec
stos
mov
int3
jmp
out
int
mov
std
sbb
movups
mov
int3
hlt
mov
mov
jnp
sbb
repnz
dec
mov
xor
shl
movs
push
mov
pop
mov
mov
ret
or
std
add
sbb
div
ret
dec
pop
sar
xor
(bad)
call
repz
xor
cmp
scas
adc
cmp
add
jns
movs
push
inc
sbb
pop
out
jns
popf
dec
push
dec
div
add
sbb
or
xor
(bad)
sti
jns
ror
mov
xchg
mov
lods
push
xchg
fmul
cmp
push
sbb
sub
adc
pushf
cli
retf
jg
sbb
sub
scas
xor
or
popf
sti
jns
or
push
jge
das
mov
outs
pop
nop
iret
out
adc
cmp
dec
inc
jg
les
ss
(bad)
inc
jp
or
popf
into
sbb
icebp
inc
adc
xchg
int3
cmps
sbb
mov
mov
add
xor
arpl
sbb
lds
retf
int
push
sbb
sbb
in
and
sub
leave
push
(bad)
(bad)
adc
mov
lods
fs
or
inc
outs
mov
mov
add
pop
xor
ret
mov
shl
shl
mov
and
inc
xor
cmp
push
add
mov
or
push
mov
add
icebp
push
sub
sar
cwde
xchg
(bad)
mov
add
pop
mov
(bad)
out
dec
test
mov
adc
mov
inc
cmp
pop
mov
mov
xchg
or
xor
test
scas
leave
div
push
lods
ins
mov
add
sahf
dec
cmps
adc
or
mov
ret
int
push
push
sbb
sbb
mov
pop
jo
jecxz
or
test
jmp
(bad)
mov
dec
or
xor
cmps
add
addr16
test
dec
or
xchg
lahf
cmc
inc
mov
into
cmp
xchg
pop
(bad)
pop
int3
jp
outs
mov
rcl
mov
(bad)
repnz
arpl
xor
xchg
outs
jge
or
mov
jecxz
aam
je
mov
push
(bad)
cmp
xchg
xchg
push
and
jmp
mov
xor
repz
dec
mov
call
mov
add
inc
ds
xchg
or
xchg
push
lock
inc
inc
jmp
sbb
sbb
xor
push
push
cmp
iret
in
scas
mov
inc
fld
(bad)
icebp
mov
dec
das
pop
(bad)
xor
mov
(bad)
pop
sub
fs
push
inc
adc
in
clc
cmp
iret
dec
ror
mov
adc
cmp
enter
jge
repnz
pop
cmp
std
dec
or
or
jnp
push
test
cmp
xchg
inc
xchg
sub
movs
addr16
or
lods
xchg
cmp
fisub
popa
clc
stc
cdq
pop
and
add
std
aaa
cmp
jge
xchg
dec
call
kandb
scas
in
mov
(bad)
ss
sub
xchg
add
(bad)
ror
and
mov
mov
jne
pop
fs
test
pop
dec
push
aaa
sbb
xchg
lds
movs
sar
out
shr
pop
retf
push
lea
sub
and
mov
retf
lods
jo
pop
add
xchg
fsubrp
and
add
bound
push
mov
mov
out
lods
in
and
add
call
ret
adc
(bad)
sbb
sub
ror
inc
and
mov
(bad)
movs
push
sub
fsubr
dec
and
ror
sub
in
push
xor
test
or
mov
lock
pop
adc
int
pop
int
fsub
dec
ins
nop
stc
xor
mov
ins
pop
and
in
repnz
sti
addr16
jae
cmovge
in
(bad)
jmp
mov
mov
cs
js
sbb
repnz
or
cmp
cwde
sub
add
jns
jp
(bad)
sbb
mov
cmc
lahf
sbb
loope
test
pop
ds
(bad)
dec
cmp
mov
xchg
lea
lahf
loop
pop
ret
mov
into
retf
cmc
std
mov
mov
sub
inc
enter
subps
jge
or
fdivr
(bad)
mov
and
sbb
fcom
push
jle
retf
sub
mov
adc
cmp
loopne
stos
ret
mov
mov
add
aaa
gs
xchg
pushf
sar
sbb
out
jmp
or
cs
loope
pop
aad
lods
aam
dec
push
inc
pusha
test
mov
cs
inc
add
fs
pusha
fdivr
clc
cmp
jl
pop
adc
jmp
sbb
lods
stos
push
out
pop
adc
dec
inc
mov
mov
sub
mov
(bad)
cmp
lock
cld
and
and
mov
or
(bad)
add
out
clc
cwde
sahf
push
push
std
(bad)
out
sbb
add
test
xchg
cli
jno
sar
pop
leave
lods
xchg
inc
sbb
or
daa
int3
daa
inc
out
mov
jns
mov
jo
fsubr
cdq
pushf
mov
nop
ficom
call
loope
popf
(bad)
and
(bad)
dec
jecxz
push
mov
loope
scas
jb
fist
xchg
fmul
retf
sbb
shr
ret
or
jo
dec
sub
daa
push
sub
mov
fdivr
fwait
mov
mov
stos
out
push
jns
dec
aad
mov
jp
add
ret
mov
aad
adc
push
or
jl
dec
xchg
jb
mov
and
jns
add
in
add
nop
sbb
gs
pop
sbb
lods
mov
mov
or
sbb
xor
xor
xlat
fistp
mov
es
mov
and
(bad)
jae
dec
mov
cmc
jg
out
add
fld
or
fisubr
inc
or
xlat
int3
mov
cmp
inc
jns
xchg
sbb
pop
dec
ret
adc
adc
aam
mov
mov
mov
ror
ja
stos
aaa
jp
dec
adc
stc
push
cmps
inc
test
out
mov
cmc
pop
bound
mov
shr
mov
or
fsubr
pop
mov
(bad)
ins
in
mov
mov
cmp
dec
or
popa
mov
lods
jb
add
std
stc
cmp
div
in
fs
pop
(bad)
ret
cs
and
je
in
jp
xor
and
sbb
mov
sub
push
ret
scas
pushf
xor
mov
or
jb
or
int
mov
movs
dec
aas
(bad)
sub
aam
lds
mov
xchg
xchg
ret
xchg
fisttp
ror
mov
sahf
loopne
mov
jnp
icebp
sub
in
xchg
int
aad
sbb
into
sub
rol
sbb
mul
sbb
out
(bad)
dec
imul
push
in
sbb
in
test
out
mov
daa
stc
push
cmp
jno
icebp
inc
xchg
inc
leave
into
mov
dec
xor
add
mov
push
add
jmp
stos
je
gs
sub
or
call
and
std
retf
xor
lds
mov
cmps
(bad)
repnz
jbe
jb
jmp
fs
sbb
or
jb
mov
ins
leave
je
and
inc
aaa
pop
lahf
enter
xchg
frstor
sbb
mov
push
call
cwde
retf
ins
out
in
add
jb
enter
mov
mov
xor
mov
add
adc
cld
dec
dec
jae
inc
fs
or
sbb
jno
cs
jmp
sbb
test
pop
jg
dec
rcr
ror
call
jo
dec
call
test
xor
and
stos
jp
pop
lods
addr16
xchg
test
popf
mov
or
repz
and
fwait
ret
clc
(bad)
xor
cmp
es
fild
pushf
arpl
and
stos
cmps
cmps
cmp
call
jne
out
xor
push
mov
repz
ins
cmps
mov
test
rcr
jmp
jmp
mov
mov
je
jne
lods
pop
daa
outs
cmp
mov
repz
test
mov
call
shl
push
xor
ins
movs
sti
jns
test
cwde
adc
mov
sbb
ss
aam
sbb
int
mov
mov
out
test
pop
jge
jns
sub
sbb
lods
pop
(bad)
fidivr
test
cmovg
xor
outs
daa
dec
pop
loopne
test
xor
xchg
pop
(bad)
push
out
pop
sbb
mov
aad
or
mov
pop
pop
shr
cmp
(bad)
imul
adc
sbb
dec
pop
pop
mov
rcr
xor
inc
or
call
lock
jp
or
movs
mov
or
and
sub
or
es
xchg
fidivr
shr
xchg
and
push
in
xchg
xor
js
not
jmp
aad
dec
pop
rol
mov
arpl
sbb
lods
jnp
ins
out
pushf
je
pop
mov
fisub
dec
test
pop
call
inc
dec
cmp
cmps
dec
jmp
push
call
jge
xchg
adc
push
pop
stos
lahf
add
mov
and
inc
repz
ins
ds
call
xchg
dec
jecxz
pop
and
jmp
adc
pushf
repnz
and
xlat
test
fcmovne
pop
jg
dec
mov
movlps
in
in
sbb
rol
clc
imul
push
cmovo
sub
mov
inc
push
test
jmp
mov
xchg
in
pop
add
das
add
push
push
(bad)
scas
retf
ja
sbb
and
call
fidivr
daa
loope
xchg
mov
mov
daa
sub
sub
and
aam
xor
shl
ret
in
sub
adc
imul
pop
or
fild
cli
mov
sti
cmp
icebp
cmc
mov
pop
ror
imul
push
cmc
sub
or
sahf
pop
in
call
adc
mov
sbb
mov
dec
movs
mov
mov
xor
xchg
popaw
xor
dec
mov
adc
aas
cmp
std
mov
loope
dec
in
movs
cmp
mov
pop
mov
xor
fwait
femms
ja
in
inc
jns
pop
sar
dec
pop
mov
push
mov
and
ret
adc
jno
hlt
loope
pop
xchg
jno
add
aas
test
stos
retf
cmps
mov
arpl
out
scas
xor
xchg
push
test
inc
push
fsubrp
ja
pop
xor
(bad)
(bad)
in
or
hlt
iret
pushf
add
mov
jmp
jmp
aaa
mov
inc
dec
ret
dec
sbb
icebp
rcl
in
jb
cmps
mov
in
mov
enter
xor
das
mov
adc
cwde
pop
aad
imul
sub
hlt
mov
jbe
or
out
cli
sub
out
sbb
pop
(bad)
xlat
test
and
cmps
fs
arpl
dec
int
pop
and
(bad)
out
or
lock
jno
fidivr
ret
pop
scas
jecxz
and
xchg
sbb
push
test
scas
stc
sbb
leave
push
pop
xor
rcr
clc
repnz
ss
mov
shl
adc
cmp
mov
loopne
jecxz
les
sub
jg
push
push
xor
inc
imul
push
movs
or
xchg
xor
jle
sti
mov
adc
dec
lods
call
pop
and
mov
cld
xchg
mov
jnp
out
fisttp
lds
xchg
push
mov
xchg
mov
adc
dec
pop
iret
js
in
add
push
inc
jmp
jb
and
pop
add
pop
into
mov
test
and
sub
or
adc
mov
add
xchg
xor
mov
loopne
pusha
push
in
fcmovbe
or
sbb
movs
xchg
dec
mov
(bad)
mov
je
pop
neg
pop
or
cmp
dec
ins
or
and
outs
xchg
jmp
hlt
imul
inc
fs
lahf
mov
(bad)
push
mov
or
fmul
cwde
push
jmp
add
jnp
xchg
mov
imul
sbb
mov
and
or
xchg
dec
fisttp
adc
add
imul
pop
pop
cmp
inc
inc
jmp
(bad)
pop
adc
mov
fnsave
adc
xchg
test
clc
push
mov
retf
dec
adc
adc
mov
outs
jmp
jne
jnp
je
push
imul
and
scas
clc
push
sub
push
into
mov
ss
lock
lock
std
dec
lock
add
ins
js
adc
cld
cmp
adc
xchg
sar
imul
mov
mov
cs
sbb
cld
bound
and
or
adc
add
sub
and
adc
sbb
or
out
scas
std
icebp
pop
or
or
shr
cmp
adc
push
aam
in
pop
pop
cmps
call
cmps
dec
es
retf
(bad)
sub
xor
jae
mov
inc
jp
fwait
pusha
ficom
inc
pop
test
or
rep
xor
mov
dec
fdivr
sub
out
jns
aam
inc
sbb
ins
pushf
std
sbb
test
xchg
mov
loop
(bad)
cmp
out
jmp
adc
ins
fbstp
mov
mov
int
push
xor
mov
add
fdivr
mov
xor
pop
fs
in
pop
retf
sbb
not
add
dec
stos
jno
inc
dec
mov
and
outs
lods
xchg
pop
test
jecxz
stos
out
jb
ffreep
xor
out
add
lds
pop
pop
push
xor
mov
or
jne
test
mov
pop
dec
dec
jg
sbb
arpl
xchg
mov
out
inc
inc
inc
test
xor
ins
xchg
adc
call
xchg
mov
daa
scas
inc
pusha
arpl
retf
daa
pusha
(bad)
cmp
and
(bad)
sti
dec
add
clc
test
movs
xchg
(bad)
push
mov
push
cld
pop
mov
jbe
xchg
dec
inc
pop
push
dec
stos
iret
xor
outs
cmp
rol
test
inc
pop
sub
add
xor
ficomp
push
jno
loope
test
jecxz
mov
inc
fucomip
jo
loop
lock
mov
cmp
inc
jmp
jl
popf
inc
xchg
adc
mov
push
push
iret
lock
aam
add
ret
cmps
ret
fnstenv
int3
bound
cdq
(bad)
aad
jecxz
mov
ins
jmp
les
jmp
int3
pop
scas
(bad)
jmp
(bad)
call
xchg
and
push
mov
add
aad
or
scas
or
xchg
aaa
into
xor
gs
aaa
push
lea
stos
mov
cmp
fistp
push
mov
push
mov
test
icebp
or
test
jb
sbb
add
jo
fsubrp
scas
adc
or
in
sbb
mov
int3
sbb
and
sub
push
lds
adc
xchg
in
jo
mov
adc
inc
xchg
add
push
stos
clc
sbb
lahf
cmps
add
sbb
xchg
push
ins
leave
push
pop
dec
cli
call
mov
push
aad
mov
xchg
pusha
pop
(bad)
xchg
jo
or
fwait
mov
imul
rcl
or
push
sub
lods
push
or
jne
or
cwde
dec
cmc
cli
push
mov
inc
iret
jecxz
in
sbb
xor
jle
push
dec
xor
(bad)
repz
cmp
sub
push
lea
pop
adc
inc
jbe
inc
lock
and
xchg
cmp
mov
fld
mov
cmp
mov
sti
mov
ins
push
mov
push
cmc
out
cwde
ss
pop
push
frstor
adc
inc
add
out
cmps
pop
cs
call
out
dec
int3
jnp
jae
mov
mov
fwait
xchg
sub
repz
int
xchg
jecxz
(bad)
adc
sbb
add
stos
idiv
jns
jp
mov
dec
mov
mov
add
nop
daa
xlat
mov
outs
xor
(bad)
mov
jle
in
push
movs
rcr
leave
mov
test
mov
pop
inc
cmc
cmps
mov
sbb
mov
je
or
push
pop
ss
push
inc
jnp
int3
out
outs
ret
cli
movs
dec
mov
mov
add
dec
jo
fwait
and
dec
dec
jge
inc
xor
adc
add
adc
push
es
(bad)
mov
js
add
push
jecxz
aam
imul
mov
cmp
push
jno
test
push
and
jecxz
leave
jp
clc
popf
pop
pop
inc
imul
js
bound
div
lods
or
icebp
cmps
ds
dec
fisub
xor
add
jnp
inc
pop
xlat
movs
push
cdq
lahf
xchg
push
add
shr
jp
or
sub
inc
pushaw
and
and
jl
(bad)
mov
in
mov
inc
sub
xchg
add
mov
jne
fs
ror
mov
mov
xchg
pop
scas
xor
pop
adc
push
pushf
jmp
jmp
(bad)
pop
rol
and
xor
adc
xchg
inc
mov
mov
push
sbb
sbb
push
popf
leave
call
push
pop
push
push
ins
imul
das
push
clc
sahf
mov
inc
call
out
sub
add
outs
test
xor
mov
push
inc
fucomp
and
pop
rcr
cdq
and
rol
mov
and
sub
xchg
pop
mov
and
scas
and
jns
repnz
into
rol
dec
pop
outs
(bad)
mov
cwde
cli
mov
push
pop
jno
xchg
stc
popa
sub
in
xchg
xor
test
add
fimul
outs
iret
arpl
inc
sar
dec
jmp
loopne
(bad)
fs
dec
lea
xchg
loopne
mov
and
jp
dec
or
test
xchg
push
std
sub
jmp
aam
push
out
(bad)
je
movs
xlat
ds
daa
xchg
stos
jno
sbb
ja
(bad)
test
xor
mov
fnstsw
fidivr
pop
dec
xor
and
ret
arpl
push
push
mov
jg
jno
in
popa
add
push
push
jb
pop
aam
enter
scas
mov
dec
call
dec
scas
les
push
xor
sbb
push
shr
enter
retf
push
cmp
jmp
dec
and
das
pop
mov
adc
mov
mov
stc
test
not
arpl
pop
leave
sahf
outs
cld
movs
inc
xlat
pop
paddw
push
popa
xchg
xor
xchg
cmp
cmc
pop
mov
add
ret
jge
inc
ja
jge
mov
out
les
dec
mov
(bad)
movs
cld
int
icebp
or
xchg
in
or
enter
out
loop
ss
neg
movs
js
push
and
dec
hlt
in
xchg
push
arpl
rol
enter
fwait
inc
inc
pop
add
jno
add
xchg
mov
aad
sti
push
mov
ss
aas
cmc
imul
cli
inc
fdiv
mov
sar
out
call
outs
pop
xchg
cld
test
loop
cmp
pop
ud2
mov
fadd
icebp
inc
mov
cs
add
fs
ss
cdq
inc
adc
jne
pop
fcomip
add
cdq
or
dec
sar
stos
push
mov
ret
push
and
pop
cmp
cmp
fs
aas
retf
pop
iret
pop
add
adc
les
das
nop
jne
add
mov
push
test
aam
fadd
shl
das
int
imul
std
jmp
sub
fstp
xor
jne
mov
mov
(bad)
dec
imul
push
repnz
xor
sbb
mov
cmp
xor
hlt
shr
dec
cmp
mov
das
repnz
and
cmp
repnz
das
add
enterw
pop
lahf
and
out
push
repnz
xor
dec
gs
inc
mov
xor
loope
jae
cli
push
dec
gs
mov
movs
das
dec
xor
xchg
pop
push
rol
jmp
dec
arpl
lds
jge
cli
jmp
sbb
jb
mov
scas
imul
mov
nop
leave
or
not
(bad)
mov
or
jo
xchg
sub
in
mov
fst
fadd
add
pusha
rcr
loope
push
shl
movs
loopne
inc
mov
sbb
jge
add
cwde
call
sahf
out
je
push
inc
les
xchg
pop
dec
lds
leave
out
mov
popf
test
push
mov
pop
cwde
(bad)
and
or
repz
movs
inc
jns
pop
sbb
xchg
jmp
daa
dec
xchg
inc
jge
gs
shr
dec
movs
fiadd
fistp
push
stc
mov
mov
div
jbe
lock
or
lods
cmp
cmp
aas
cs
rol
cmps
push
mov
inc
nop
iret
pop
dec
mov
or
add
(bad)
xlat
mov
das
push
rcr
ja
cmp
(bad)
dec
mov
mov
out
pop
mov
cs
aaa
aaa
scas
jno
push
adc
call
fisttp
cmp
bound
xchg
mov
mov
arpl
setg
into
rol
sbb
dec
ins
inc
cli
enter
adc
pop
jmp
and
xchg
not
pop
retf
fcomp
repnz
or
(bad)
(bad)
adc
mov
aad
sub
test
and
mov
dec
xchg
mov
mov
pop
fisubr
outs
push
out
cmps
pop
sahf
mov
adc
bound
dec
stc
ds
leave
sub
or
test
jmp
rcl
aad
mov
stos
out
pop
mov
or
inc
or
nop
mov
inc
mov
ins
cmp
push
and
dec
push
adc
and
mul
jne
clc
enter
adc
ret
xchg
and
pop
into
(bad)
in
pop
(bad)
idiv
add
sub
test
rol
mov
mov
mov
push
mov
(bad)
arpl
adc
out
add
jle
les
out
mov
mov
test
cmp
loope
imul
adc
aas
fsub
aaa
xchg
mov
mov
inc
dec
gs
shl
push
xchg
xor
test
mov
shr
(bad)
in
sub
push
popf
mov
or
rcr
mov
cmp
sahf
pushf
cmp
jge
cmp
cld
dec
scas
xor
pusha
stos
cmp
jmp
data16
and
ins
or
push
pop
inc
rcl
jmp
mov
dec
or
mov
mov
ds
pop
fwait
and
or
cld
xchg
pop
push
lds
jge
jno
gs
xchg
xchg
scas
rcl
ror
int
and
imul
mov
mov
call
jmp
jp
and
dec
mov
lods
cmp
or
dec
fld
add
sub
xchg
hlt
jge
sbb
and
cmp
push
add
push
lods
or
mov
in
movs
rol
mov
pop
mov
xchg
pop
mov
jg
adc
mov
sub
inc
dec
jl
dec
add
add
cwde
inc
fstp
cli
aaa
sbb
push
add
mov
xchg
aam
xchg
cmps
push
add
xor
cmps
repz
std
(bad)
push
push
test
pop
mov
xor
inc
jle
add
sbb
inc
or
jecxz
aas
out
dec
mov
mov
sub
jmp
stc
adc
sbb
iret
xchg
test
(bad)
sub
test
mov
push
xor
mov
out
cmp
mov
sub
aaa
stos
js
ror
pop
aas
push
(bad)
out
bound
xchg
xor
mov
adc
(bad)
xchg
leave
pop
xor
push
xchg
mov
pop
lds
pop
cmp
adc
movs
lock
shl
jmp
mov
pop
test
mov
jne
adc
xchg
(bad)
mov
ins
cmp
(bad)
sbb
fiadd
adc
sbb
mov
push
outs
adc
call
dec
and
out
cs
mov
push
xor
mov
das
jae
shl
and
xor
js
cli
test
sbb
leave
stos
outs
iret
add
mov
leave
mov
in
fcmovb
cmp
sbb
adc
js
jb
loope
pop
mov
add
sbb
sbb
aad
cdq
dec
scas
jp
or
inc
aaa
test
repnz
mov
test
dec
or
cmp
hlt
jecxz
ret
xor
cmp
mov
rcl
ja
cmp
(bad)
(bad)
shr
sbb
lock
rcl
mov
repnz
cmp
cmp
pop
mov
cmp
ret
aas
add
inc
adc
dec
pop
xor
jno
data16
jle
pop
sub
mov
mov
hlt
mov
and
xchg
movs
or
test
mov
push
dec
mov
mov
or
inc
fwait
push
sti
lds
int3
pop
inc
pop
bound
sub
aaa
inc
pushf
jle
inc
dec
or
jge
cmps
dec
repnz
mov
fwait
inc
test
mov
and
fimul
rol
stc
cld
inc
xlat
dec
cdq
dec
mov
xchg
pushf
jmp
and
das
neg
cld
mov
repz
pop
push
nop
es
mov
push
dec
fist
rcr
mov
mov
sbb
or
pop
adc
pop
ins
mov
mov
(bad)
cmc
lods
call
cld
ins
idiv
leave
pop
or
or
cmp
leave
bound
daa
test
pop
ret
test
mov
iret
(bad)
(bad)
shl
loopne
or
push
adc
jecxz
dec
aaa
add
xchg
pop
js
rcr
scas
in
outs
int3
xor
pop
nop
dec
add
jmp
mov
jle
in
or
jmp
inc
(bad)
fmul
adc
mov
shl
cmp
(bad)
out
ja
or
or
xchg
pop
push
ficom
jle
call
js
or
xor
mov
and
ja
or
sbb
jmp
push
mov
fwait
mul
sbb
inc
out
sub
out
mov
cmp
sbb
pushf
clc
push
mov
sbb
cmp
loopne
js
dec
jmp
shr
lods
test
cmps
clc
out
sahf
outs
loop
popf
into
imul
push
sub
imul
pop
lahf
push
xchg
xor
push
sbb
cli
test
les
cld
aad
jmp
test
sub
popf
push
inc
mov
sub
sub
push
mov
xchg
cmp
ss
inc
xor
test
push
xor
mov
or
cmp
adc
test
sbb
pop
sub
jmp
pushf
retf
pop
fld
cli
sub
cli
mov
pop
jns
scas
loop
scas
push
xchg
(bad)
call
sub
aaa
pop
inc
and
adc
mov
and
pop
inc
cmps
xor
jecxz
sub
cli
fild
push
jle
inc
jns
jnp
in
xchg
aas
stos
sbb
push
loope
xor
lods
dec
mov
das
add
mov
push
aam
movs
mov
fbstp
out
aas
mov
stos
push
cmc
stos
mov
das
ret
xor
enter
xchg
push
mov
sbb
xor
(bad)
cmp
ret
es
ins
(bad)
aad
push
push
in
iret
add
popa
cld
mov
pop
mov
jae
gs
mov
dec
shl
out
or
dec
push
and
in
and
sub
dec
leave
xor
in
fdivr
lock
cmp
inc
xchg
ins
fld
pop
ret
mov
push
jbe
sti
cld
call
xchg
cmp
popa
sub
aad
mov
stos
rcr
mov
fstp
scas
dec
stos
imul
inc
and
mov
outs
cmp
(bad)
lods
call
mov
cmp
sbb
in
mov
cmp
jnp
cld
inc
inc
inc
outs
sbb
or
(bad)
(bad)
fidiv
mov
add
sbb
jle
mov
repnz
jne
mov
mov
lahf
pop
inc
retf
ins
jae
stos
leave
clc
push
call
repnz
sbb
add
xchg
cmp
jns
std
(bad)
mov
ret
inc
mov
inc
jne
fiadd
hlt
test
dec
dec
mov
cdq
xchg
and
dec
pop
adc
je
sbb
(bad)
out
sti
dec
push
xchg
sub
xor
pop
aad
xor
mov
fstp
and
mov
sbb
push
add
stos
mov
dec
fist
mov
popf
mov
ret
push
pop
inc
xchg
sub
je
and
in
xchg
sbb
imul
(bad)
or
push
test
lods
cli
(bad)
push
(bad)
call
dec
cmove
push
cmp
std
push
xchg
neg
cmp
imul
xchg
ja
fs
jo
cs
mov
jmp
stc
sub
add
push
cmp
cmp
jge
(bad)
sub
test
push
mov
mov
xor
imul
mul
imul
pop
cli
or
call
into
jl
ins
call
jmp
imul
(bad)
jne
fmul
retf
(bad)
call
gs
sub
lds
jp
pop
imul
mov
xchg
push
mov
(bad)
jmp
pop
pop
ins
sbb
jae
loopne
repnz
push
mov
enter
aas
xor
adc
out
stos
sbb
add
jmp
mov
(bad)
jne
push
pop
mov
xchg
cld
cli
xchg
test
les
xchg
scas
mov
push
sub
call
xchg
adc
or
imul
dec
xchg
add
scas
cmp
push
jnp
xchg
or
sub
jae
nop
fsub
or
cmp
push
add
mov
scas
das
sub
scas
add
or
loope
icebp
pop
sahf
sub
loope
mov
retf
int
hlt
out
data16
jl
cs
xchg
cs
add
hlt
mov
ja
and
push
int3
and
xor
repz
jbe
enter
fdiv
xor
jecxz
sbb
add
iret
out
dec
add
pop
add
shr
xchg
call
in
sub
mov
mov
mov
cmp
or
or
or
shr
stc
pop
fdiv
pop
shl
(bad)
clc
and
jl
mov
in
cmp
test
mov
sbb
aas
and
fbld
int
out
jmp
adc
call
or
cmp
repnz
cli
xor
inc
nop
and
mov
mov
inc
lods
jns
cld
ret
mov
mov
fdivr
push
pop
rcl
or
or
aas
popa
aam
das
out
mov
dec
push
mov
jmp
adc
das
retf
pushf
dec
repz
and
data16
xor
pop
cli
pusha
test
stc
mov
push
icebp
sar
(bad)
(bad)
sbb
add
jg
retf
jb
sbb
mov
jmp
xchg
icebp
fiadd
sub
sbb
out
es
or
xchg
call
or
clc
adc
mov
cwde
dec
cld
je
pusha
int3
sub
xchg
xchg
mov
or
push
ss
jbe
push
xchg
add
adc
mov
mov
push
scas
xor
jno
outs
psubw
(bad)
in
adc
mov
mov
lds
xchg
push
pop
outs
mov
fwait
icebp
mov
fst
xchg
(bad)
out
or
test
outs
fnstenv
sar
mov
jae
ins
jp
fld
nop
pop
or
cmp
push
push
cmps
jmp
xchg
add
std
mov
or
cmp
out
dec
in
(bad)
test
ds
push
std
into
fwait
arpl
pop
xor
retf
cmp
in
mov
call
fwait
into
xor
inc
xor
(bad)
dec
in
in
dec
rcl
xchg
in
xor
jl
mov
cmp
aaa
dec
std
out
fwait
cmp
cmp
outs
and
sub
mov
lods
xchg
fild
cwde
mov
aam
or
jmp
lods
dec
cmp
fisttp
dec
push
rcr
mov
cwde
je
cmp
mov
ins
lods
stos
shr
add
jno
outs
mov
lods
add
and
or
jmp
test
cmp
jge
jmp
dec
imul
xchg
popa
sbb
push
push
mov
dec
dec
adc
mov
mov
jbe
dec
push
scas
jne
mov
into
jmp
xor
xchg
add
sub
repnz
push
dec
out
fdivr
inc
mov
jg
mov
jge
cmp
mov
outs
(bad)
mov
mov
push
adc
shl
cmp
and
xchg
(bad)
imul
std
movs
mov
mov
jmp
mov
sbb
xchg
sbb
shl
mov
daa
dec
popf
lods
inc
aas
mov
xchg
push
lock
dec
daa
ins
sub
and
push
push
aas
sbb
jge
jmp
test
jge
fwait
test
jg
push
out
arpl
xor
out
imul
pop
sub
in
ss
push
push
jmp
push
call
retf
aad
loope
and
aaa
fidivr
popa
(bad)
into
xchg
dec
cmp
enter
fiadd
sbb
add
xor
hlt
xchg
push
icebp
outs
inc
movs
lock
mov
xchg
pop
repnz
cwde
mov
mov
add
adc
pop
call
jnp
loop
lods
push
add
(bad)
pop
movs
push
in
jns
rcl
cmp
mov
clc
sbb
mov
mov
xchg
jp
push
movs
xor
push
cmp
jle
xor
repnz
add
mov
and
(bad)
dec
jbe
add
scas
jbe
cmp
fcmovu
pop
mov
test
aaa
aad
pusha
sti
inc
(bad)
push
push
jno
imul
fs
mov
mov
aam
dec
xchg
mov
inc
imul
repz
adc
outs
leave
std
dec
je
arpl
btr
aaa
mov
push
cmp
cli
inc
loopne
pop
add
mov
iret
sbb
sti
punpcklwd
pop
rcr
adc
out
loopne
out
gs
scas
xchg
std
int
repz
push
outs
dec
cdq
mov
retf
mov
add
cwde
mov
stos
inc
xchg
sub
popa
sub
pop
add
ds
jb
pop
add
and
xor
adc
xor
jnp
add
push
sahf
sti
xor
or
sbb
fsubr
shr
jno
mov
cwde
js
mov
ret
test
test
int3
retf
scas
mov
pushf
cpuid
push
jg
jl
mov
push
add
dec
sub
add
or
mov
mov
mov
dec
sbb
pop
xchg
push
mov
cmc
rcr
stos
push
and
inc
out
sbb
pop
stos
sbb
push
xchg
inc
pop
cli
xchg
or
lods
jl
dec
sub
(bad)
(bad)
cld
leave
fwait
call
into
add
sbb
aad
pop
or
retf
push
cmp
jb
mov
inc
dec
sub
stc
jp
xor
inc
ins
into
add
and
scas
xchg
dec
add
fcom
adc
pop
mov
jae
scas
mov
scas
inc
add
repz
lods
fbstp
xchg
cmp
jb
xchg
fmul
mov
mov
dec
(bad)
mov
fild
or
stos
daa
mov
inc
add
xchg
es
pop
ins
call
or
push
ret
mov
(bad)
jl
pop
sbb
(bad)
sbb
out
mov
push
mov
push
pop
call
push
push
sub
push
jmp
lock
and
scas
or
or
bound
out
scas
shl
pusha
mov
or
mov
push
and
mov
call
out
outs
test
inc
call
call
sub
jge
je
and
push
cs
add
test
clc
mov
pop
pop
jns
scas
mov
dec
add
rcr
xchg
cld
mov
xor
mov
aas
loop
cmc
jne
sti
enter
(bad)
fist
std
jo
cli
dec
xor
xchg
dec
fimul
pop
addr16
mov
pop
inc
into
add
sbb
push
(bad)
sbb
mov
fadd
mov
sti
cdq
push
fild
daa
daa
ret
push
lds
(bad)
xchg
mov
mov
jbe
ins
cli
retf
inc
or
inc
jecxz
mov
ja
mov
xchg
pop
jns
pop
pop
sub
icebp
jne
(bad)
or
push
cli
sub
ffree
jl
js
and
inc
mov
mov
das
pop
lods
or
xchg
neg
and
jbe
iret
mov
mov
(bad)
bound
mov
cli
sub
mov
inc
popf
sbb
not
clc
cdq
ja
(bad)
test
and
(bad)
mov
dec
sahf
into
pop
pop
jecxz
ror
lods
add
jp
fcmovnu
stos
daa
adc
cmp
jp
es
jns
loopne
sub
xchg
(bad)
repz
and
aad
xchg
jo
push
rcr
mov
and
mov
mov
dec
sbb
mov
shr
in
sub
mov
call
out
out
and
sti
jg
cdq
lea
fdiv
adc
cmp
dec
dec
adc
data16
jmp
mov
mov
(bad)
cmc
push
or
dec
mov
loopne
lods
mov
sbb
fucom
mov
xchg
icebp
pop
fwait
cli
lock
xchg
call
adc
fwait
jae
shl
nop
or
mov
mov
lds
push
lahf
or
into
or
punpcklwd
jae
mov
cld
gs
cs
xlat
sbb
gs
rcl
dec
mov
mov
pop
sub
and
push
cmp
push
cmp
addr16
inc
call
push
imul
cmp
pop
sar
popa
repz
xlat
or
ins
sbb
inc
add
push
imul
(bad)
in
(bad)
cmp
xor
(bad)
push
and
sbb
loop
mov
and
pop
mov
data16
fsubrp
or
stos
(bad)
fnsave
jnp
ffree
and
xor
cmps
push
push
ins
js
mov
rcr
cld
dec
xchg
lods
jne
repnz
dec
sbb
cmps
sbb
pop
sbb
cmp
enter
popa
aam
dec
fwait
jl
outs
ffree
popa
and
cmps
movs
mov
ret
inc
fadd
mov
ss
or
fwait
push
push
xchg
jmp
out
cmp
cmps
push
sub
fs
sar
out
outs
xchg
jmp
add
(bad)
pop
inc
push
push
or
or
mov
test
call
icebp
jp
loope
mov
cld
or
mov
dec
in
adc
ja
mov
inc
(bad)
div
cmc
shl
mov
loop
pop
mov
jg
(bad)
and
loope
pop
in
cmp
jecxz
ja
jl
jae
jecxz
test
int
xlat
push
and
xchg
mov
shl
retf
mov
add
mov
push
ror
rol
sub
xor
pop
lahf
stc
inc
in
fisub
sub
pushf
fwait
out
popa
loopne
dec
fild
(bad)
and
dec
push
add
push
sub
loop
mov
icebp
adc
xchg
sub
adc
dec
ror
jle
inc
mov
mov
std
stc
jmp
mov
ins
cmps
dec
fwait
mov
add
mov
and
inc
mov
push
ret
and
je
mov
jno
push
retf
push
push
dec
xor
jecxz
imul
jns
lahf
push
mov
inc
cmp
arpl
dec
daa
dec
punpckhdq
jo
inc
call
in
cmp
int
imul
adc
inc
push
sbb
push
inc
mov
lahf
sub
lods
sbb
pop
sbb
jecxz
cmovo
jo
push
or
lods
aam
cmp
jb
repnz
add
jbe
sbb
and
and
adc
and
ja
add
mov
loop
inc
add
fwait
dec
xlat
popa
imul
push
and
xlat
push
cmp
mov
shl
imul
xchg
mov
push
addr16
call
sub
jmp
daa
fs
rdmsr
sahf
stos
xor
arpl
sub
stos
cld
add
xchg
push
pop
xchg
or
add
sbb
sahf
sbb
xchg
pop
lahf
xchg
and
and
or
out
sub
stos
addr16
fild
(bad)
fcom
ds
push
adc
or
sbb
jge
fdivr
cmp
inc
or
cwde
out
mov
fist
and
pop
lea
inc
in
popf
(bad)
ins
inc
(bad)
xchg
sub
mov
mov
add
ja
adc
dec
cmps
lahf
sub
jne
cmp
out
pop
push
arpl
sbb
mov
jecxz
adc
scas
dec
fnstenv
into
out
pop
std
dec
mov
inc
add
jns
push
lods
add
div
ins
push
push
xlat
in
mov
icebp
pop
jae
push
dec
inc
and
jns
arpl
add
sbb
xor
lds
data16
push
and
mov
add
xchg
imul
fisubr
jecxz
loop
xchg
add
jno
cld
cmp
jnp
xchg
xchg
push
stc
iret
mov
push
push
sbb
sbb
int
dec
jl
fimul
push
push
aad
inc
xlat
push
cmp
sub
sti
mov
mov
mul
push
(bad)
dec
xchg
dec
xchg
call
sar
pop
push
test
mov
and
ficomp
xchg
dec
loope
jle
inc
scas
ret
fistp
inc
addr16
push
cli
push
popf
div
imul
add
cwde
in
mov
ja
cmp
push
or
add
adc
and
jmp
sbb
xchg
push
std
pusha
jbe
daa
ins
mov
scas
xor
test
pop
(bad)
into
mov
cmp
scas
enter
push
mov
sti
xchg
inc
fsubr
or
mov
hlt
xor
mov
push
inc
mov
push
inc
xchg
or
aas
in
inc
sub
call
push
cmp
pop
fld
adc
ss
and
daa
rcr
lea
ret
xchg
ins
scas
call
aaa
pop
push
push
jne
inc
in
cmps
jl
lods
je
hlt
cmp
mul
test
xchg
sbb
pop
jmp
inc
mov
push
stos
not
or
out
imul
mov
mov
jnp
hlt
mov
or
xchg
ret
rcr
ja
mov
inc
sar
sti
sbb
mov
lea
xor
pop
or
pop
std
shl
outs
mov
in
cld
sub
rcr
clc
div
or
jp
jno
paddb
jne
lock
out
dec
add
xchg
jbe
cmp
xlat
sub
in
inc
or
mov
sub
out
dec
dec
pop
cmps
das
mov
aaa
inc
icebp
imul
ss
out
mov
shl
fist
dec
cmp
jmp
mov
mov
sub
(bad)
hlt
mov
mul
and
add
mov
cmp
cmp
lods
lock
out
xchg
push
mov
lahf
inc
outs
gs
push
mov
jge
and
popa
xchg
sbb
mov
arpl
icebp
add
mov
cmps
xchg
imul
test
mov
jns
(bad)
dec
pop
and
ins
hlt
std
jnp
(bad)
mov
inc
sub
int
pop
mov
mov
sbb
loop
mov
ins
jno
inc
loopne
dec
in
nop
jno
jmp
sti
xchg
xchg
ds
fbld
mov
sbb
into
bound
adc
mov
push
jge
and
in
mov
add
push
in
sub
xor
xchg
mov
scas
mov
add
pop
out
repnz
fistp
icebp
jle
popf
sub
push
adc
fidivr
mov
fwait
or
mov
aas
sub
iret
jmp
jp
out
push
ins
cs
inc
popf
mov
xchg
dec
push
outs
mov
mov
push
mov
cmp
jmp
retf
in
sub
or
xchg
in
jecxz
inc
cdq
mov
adc
or
xchg
in
movs
mov
in
jmp
xchg
sbb
xchg
dec
shl
push
push
pop
cmps
sub
ror
push
add
in
cmp
xchg
and
push
lods
and
ret
test
push
push
out
sub
pop
dec
iret
fcmovnbe
ds
mov
xchg
outs
add
adc
push
stc
xor
and
in
xchg
ds
(bad)
inc
repnz
rcr
pop
mov
fstp
stos
push
pop
mov
sub
jmp
mov
mov
test
je
mov
pop
(bad)
xchg
mov
xchg
clc
pop
jmp
fstp
adc
loopne
cli
imul
sbb
inc
stos
sbb
test
cmps
cmp
ja
jg
adc
repz
mov
pop
cmovs
push
or
lods
add
out
fst
mov
cld
lock
xchg
(bad)
cmps
arpl
aas
imul
mov
movs
inc
or
push
fldcw
adc
sbb
ins
dec
ss
aam
dec
adc
data16
das
outs
fs
jmp
adc
xor
cmp
vcomiss
mov
xlat
ds
ret
fild
into
jnp
outs
sti
push
idiv
sbb
sahf
push
in
pop
icebp
shr
cmp
xchg
out
lods
mov
pusha
mov
inc
sbb
lea
mov
pop
adc
out
scas
fstp
sbb
push
out
push
cdq
rcr
call
mov
mov
rcr
(bad)
xor
bound
xchg
aaa
cld
test
inc
iret
jns
rol
call
mov
jge
mov
mov
iret
in
lock
add
mov
and
or
popa
in
sbb
jmp
(bad)
mov
mov
retf
sbb
leave
push
fnstenv
in
cld
into
sbb
sbb
repz
and
popa
ret
out
inc
leave
enter
clc
dec
aam
sti
add
add
fiadd
icebp
lods
lods
pop
jb
mov
enter
ror
mov
mov
mov
and
ret
jno
cdq
repz
mov
daa
mov
int3
inc
dec
sub
or
mov
add
fidivr
mov
mov
mov
push
cld
mov
jg
mov
or
jo
mov
and
in
and
xor
clc
xor
xchg
sbb
retf
mov
xchg
dec
pop
push
shl
jl
aaa
and
pop
in
aaa
inc
mov
jmp
imul
pop
sub
test
cwde
ret
inc
inc
push
out
and
ins
or
fisub
dec
dec
rol
(bad)
jns
scas
xor
icebp
push
das
pushf
sbb
outs
cdq
sub
mov
cwde
pop
inc
cmovnp
stos
int3
sahf
jecxz
dec
in
retf
pop
adc
jae
cmps
fwait
jmp
jle
sahf
fld
outs
in
xchg
jbe
adc
xchg
xor
sar
stc
xor
mov
push
jmp
push
lds
inc
(bad)
(bad)
ds
sahf
idiv
sbb
mov
aad
mov
mov
pop
retf
call
push
shl
out
push
mov
or
xchg
sub
cs
inc
mov
dec
cmp
icebp
pop
rol
rol
xchg
xlat
test
retf
cmps
mov
jg
sbb
push
cmp
aaa
dec
out
(bad)
or
call
fdiv
jecxz
iret
scas
aas
push
mov
nop
xor
imul
outs
sbb
lds
xchg
push
mov
cs
popf
ret
cli
inc
es
mov
push
xchg
mov
jns
bound
mov
dec
mov
mov
xlat
iret
pop
adc
das
push
lock
imul
ins
xor
jae
inc
imul
lahf
nop
int
xchg
mov
sub
cwde
mov
retf
sbb
pop
je
es
mov
aad
in
retf
cmp
test
sti
sbb
pop
jnp
rol
int
es
cli
cwde
das
mov
leave
sub
xor
pop
imul
jo
sub
or
push
out
mov
dec
mov
and
imul
mov
iret
sub
(bad)
test
mov
(bad)
ficomp
push
cli
sub
mov
and
fldcw
jmp
iret
fst
push
ja
(bad)
mov
in
clc
jl
xor
adc
fisub
sbb
sub
adc
rol
pop
push
pop
xchg
mov
mov
aam
sbb
outs
test
jecxz
shr
add
in
(bad)
jmp
fcomip
mov
sbb
in
inc
or
lea
mov
mov
mov
mov
in
xchg
sbb
rcl
shr
cmp
es
outs
ss
jle
jg
dec
cli
out
or
sub
sub
push
iret
es
xor
das
ss
mov
fnsave
adc
lds
and
cmp
movs
pop
les
aam
fprem
and
mov
pop
(bad)
mov
add
push
enter
push
and
or
fild
loopne
ret
push
sub
jnp
add
in
in
sbb
adc
xor
rcr
(bad)
clc
enter
add
outs
lock
push
xor
hlt
push
jp
pop
jmp
mov
je
ss
xchg
imul
addr16
gs
adc
lods
ror
jmp
xchg
bound
cmc
mov
test
cld
js
popf
aas
xor
add
and
push
into
test
xlat
hlt
mov
fnstenv
mov
sbb
stos
mov
dec
int3
cmp
das
xchg
ss
mov
icebp
jne
sbb
dec
test
jmp
outs
xchg
dec
mov
pop
mov
jbe
jle
sti
dec
inc
mov
sar
xor
push
lahf
popf
ja
and
mov
xchg
jp
leave
jno
jmp
repz
cwde
daa
jae
dec
cmps
outs
add
adc
stc
dec
jno
sbb
test
dec
mov
sub
lock
mov
dec
xor
cmc
cmp
pop
ss
into
test
pandn
fild
fmul
imul
test
add
mov
mov
pop
ficom
mov
mov
fldenv
xor
pop
adc
add
(bad)
outs
cwde
fnstenv
and
aad
xchg
and
xchg
pop
mov
in
and
mov
cmps
test
pop
cmps
aad
pushf
inc
aad
out
mov
imul
fcmovne
or
inc
retf
in
retf
fld
mov
dec
jmp
jno
fbld
mov
popa
xchg
jae
push
xor
fwait
cmps
mov
push
mov
push
pop
cmps
pop
inc
or
jae
and
mov
pop
mov
iret
popa
cmp
pop
rol
repz
leave
push
cmps
adc
fistp
fs
jle
push
cmp
retf
(bad)
mov
cmp
jg
sets
repz
jg
mov
mov
adc
xlat
pop
xor
cmp
xchg
inc
iret
loope
cmp
pop
and
xchg
cmp
jnp
gs
mov
shl
add
dec
jmp
mov
or
idiv
fistp
pop
sub
enter
push
lahf
dec
(bad)
hlt
in
mov
jns
dec
sub
retf
out
sti
lods
hlt
jg
cdq
in
and
sub
jae
or
cmp
jecxz
xor
or
into
fisttp
dec
jne
mov
mov
inc
lea
shr
fcmovnu
add
xor
mov
xor
int3
scas
out
stc
lock
mov
mov
and
add
addr16
mov
add
rol
sub
retf
jbe
or
sbb
adc
or
xor
test
repnz
jmp
shr
add
retf
jne
add
lods
pop
xlat
and
in
dec
jmp
lods
ret
mov
sub
aam
inc
jge
loope
mov
movs
inc
pop
(bad)
mov
or
xchg
imul
pop
jmp
stc
(bad)
mov
js
ins
popa
xchg
push
lock
sub
sub
addr16
inc
mov
scas
pop
enter
fld
lea
dec
inc
xlat
(bad)
outs
rol
stos
cmp
aas
pop
out
stos
sbb
add
sbb
jle
push
loop
and
lods
mov
push
jne
rcl
imul
imul
enter
xlat
jmp
(bad)
cmp
jb
call
(bad)
cmp
fdivr
cmp
xchg
xchg
sub
pop
in
push
in
enter
jo
dec
sti
jmp
push
in
aad
sub
cmps
add
out
dec
arpl
iret
mov
pop
lods
aad
inc
jae
ficom
pushf
ret
neg
(bad)
out
or
repnz
shr
dec
mov
repz
lods
or
mov
sar
je
xor
push
outs
sub
inc
pop
inc
les
cs
(bad)
mov
jg
aaa
js
popf
shl
outs
popf
out
enter
dec
and
sbb
sub
idiv
inc
adc
adc
xor
lods
adc
imul
frstor
sbb
outs
and
jmp
dec
(bad)
int3
lods
pop
fisub
cmp
cmp
and
lods
add
cmp
test
sub
or
inc
xor
sub
sbb
out
xor
bound
popa
cmp
movs
nop
push
out
cmp
test
pop
mov
xchg
or
sbb
or
pop
fdiv
addr16
push
mov
ret
scas
fidivr
mov
scas
fwait
hlt
jbe
jmp
and
push
add
loopne
ret
xlat
mov
sahf
sub
test
mov
movs
push
adc
pop
and
jg
sbb
lock
xchg
js
iret
adc
std
sbb
push
loopne
lods
cmp
xchg
retf
inc
sahf
cmp
sub
sbb
or
inc
outs
mov
aad
cld
pop
sub
ret
ins
xchg
adc
inc
mov
mov
imul
mov
and
fsubr
dec
cmp
(bad)
push
and
sub
mov
inc
mov
and
push
sbb
out
popa
mov
xlat
push
(bad)
jg
jbe
jle
sbb
and
mov
retf
std
mov
jbe
cld
or
rol
and
in
ret
sub
xchg
(bad)
mov
or
xchg
div
ret
mov
mov
fmul
xor
sahf
sbb
adc
dec
cwde
lods
(bad)
fmul
test
adc
jp
jb
push
dec
and
jns
inc
cs
out
and
sub
push
daa
sbb
mov
adc
sti
cmp
cs
xor
jae
push
mov
shl
mov
pop
mov
mov
pop
stc
scas
add
(bad)
loopne
cmp
add
lods
mov
cmp
xchg
inc
cmp
iret
test
das
xchg
data16
lock
sub
mov
cli
jbe
pusha
dec
cmps
mov
pusha
cmc
in
pop
push
pop
push
mov
mov
out
out
ja
clc
repnz
loope
es
idiv
iret
int3
popa
mov
cmc
or
(bad)
into
std
lds
jae
cdq
int3
mov
add
push
xchg
push
inc
out
jns
xchg
dec
lea
outs
cmp
int
push
add
popf
call
sbb
call
nop
xor
dec
pop
daa
arpl
xlat
jmp
cmp
pop
iret
inc
dec
mov
and
pop
mov
push
push
add
(bad)
push
or
fdiv
mov
inc
push
adc
(bad)
pop
(bad)
mov
mov
cmc
stos
ret
loop
pop
jg
push
rcr
adc
cld
dec
sub
pop
pop
xor
fmulp
inc
leave
mov
aaa
sahf
sti
jge
mov
out
stos
pop
fldcw
into
iret
outs
add
rol
data16
int
scas
fxch
mov
add
outs
dec
push
sub
repz
sub
loopne
shl
cdq
push
aaa
jnp
cmps
sbb
ss
js
sub
ins
pop
add
fwait
inc
push
mov
in
mov
dec
lock
cld
inc
inc
mov
in
push
jmp
les
sub
adc
(bad)
cmp
mov
call
inc
jecxz
sbb
pushf
mov
inc
dec
xor
and
mov
push
xchg
adc
imul
inc
push
dec
push
xchg
fldlg2
push
ds
adc
jmp
pop
daa
ror
loope
and
lea
pop
fadd
inc
lods
inc
dec
add
dec
popa
in
mov
test
xor
mov
test
aaa
adc
dec
das
pop
xchg
inc
jle
arpl
lea
or
das
jbe
lea
sub
fwait
inc
retf
lods
pop
sub
cld
sahf
fcomp
mov
dec
lods
jl
out
xor
sub
leave
ret
nop
dec
test
test
mov
out
cmps
sbb
inc
jmp
jne
jno
mov
and
adc
pop
and
push
mov
inc
mov
and
rcl
cli
pop
test
or
mov
aas
mov
push
jo
cmp
jg
fwait
test
mov
fld
mov
dec
xchg
mov
jb
mov
jb
mov
adc
(bad)
push
mov
jmp
add
mov
push
lea
lea
sahf
mov
or
adc
fst
pop
adc
and
adc
mov
aam
shl
retf
add
icebp
pop
sbb
adc
(bad)
cmps
inc
inc
xchg
cmps
push
jb
retf
ja
stc
mov
hlt
mov
inc
lds
pop
mov
test
clc
call
sub
dec
cmps
ror
jb
jmp
mov
cli
in
jne
push
pop
or
call
xor
xor
mov
loopne
adc
adc
fs
call
icebp
cdq
mov
and
xchg
inc
cli
sub
inc
add
add
pusha
mov
push
jg
adc
inc
push
or
cmc
xchg
das
fcom
dec
popa
(bad)
xor
ret
stos
dec
es
inc
pop
mov
cdq
sbb
mov
retf
std
fstp
jmp
xlat
and
cmp
psllw
add
jl
and
jecxz
out
outs
add
push
mov
pop
xlat
dec
push
jnp
xchg
lds
iret
ins
mov
jle
rol
sub
push
(bad)
mov
hlt
cli
les
adc
sbb
or
push
je
add
jne
push
pop
mov
(bad)
and
and
push
cld
out
mov
call
dec
fimul
daa
popa
loop
jle
pop
fdivr
inc
push
push
push
pop
lods
sub
or
test
cdq
(bad)
xlat
retf
fdivr
nop
and
pop
clc
mov
fistp
mov
mov
fs
push
add
inc
cmp
dec
and
mov
cmp
push
mov
sub
sti
imul
jmp
mov
jl
(bad)
cmc
sahf
cdq
loope
arpl
lods
gs
lea
cmp
mov
xchg
popa
add
pop
push
adc
cmp
mov
leave
push
cmc
push
leave
inc
lds
cmp
ret
fbstp
inc
aam
push
fnsave
std
cs
popa
jae
and
dec
xor
and
inc
rcl
mov
mov
enter
jne
add
adc
dec
in
fwait
movs
je
jmp
lods
xor
stos
stc
neg
not
sub
gs
dec
mov
nop
sub
pop
out
aad
fld
ins
add
adc
clc
cmp
pop
jmp
ret
push
sar
jl
neg
mov
inc
sar
push
cmp
inc
arpl
pop
or
jne
push
idiv
adc
shl
jle
mov
jb
movs
push
mov
push
cmc
add
push
mov
and
rep
popf
ds
in
mov
mov
xor
in
(bad)
fs
mov
dec
sbb
lea
adc
inc
inc
fnstcw
add
mov
sahf
mov
jbe
and
retf
xchg
xlat
add
adc
inc
jle
fcmovnb
addr16
pop
inc
out
stc
aad
repz
nop
and
push
enter
stc
sub
cmp
pop
and
add
inc
or
sbb
popa
sar
sbb
call
imul
jl
or
popa
cli
mov
pusha
rcr
mov
add
jecxz
or
out
inc
or
mov
add
jecxz
cli
mov
ds
add
aaa
mov
and
out
imul
out
xchg
push
mov
and
jbe
test
lods
adc
adc
int3
jo
xchg
jne
mov
jge
xor
(bad)
rcl
arpl
mov
lods
mov
ins
sub
jae
adc
js
mov
xrelease
leave
std
mov
sar
pushf
gs
shl
pop
add
xchg
xor
push
add
fnstcw
cmp
xchg
mov
aad
adc
and
mov
repz
sub
ja
mov
aas
jle
fnsave
in
into
fist
cmp
outs
jg
imul
in
aaa
adc
lahf
cli
arpl
je
add
ret
pop
dec
imul
adc
test
sbb
ret
jl
mov
and
mov
nop
xor
mov
mov
pop
ds
in
push
mov
bound
gs
mov
fdiv
xchg
jnp
scas
nop
inc
or
shl
hlt
jnp
mov
hlt
sub
xchg
in
and
push
mov
stc
mov
ss
shr
outs
popf
popa
inc
ret
jns
xor
adc
cwde
pop
aas
mov
sbb
add
sahf
pusha
fsubr
xchg
adc
or
out
in
dec
test
out
inc
sub
lds
sbb
int
pop
xor
in
outs
(bad)
cmps
and
test
sbb
imul
push
scas
xchg
pop
loop
addr16
das
push
mov
ffreep
xchg
bound
cli
mov
cmp
pushf
adc
mov
fsub
les
pop
mov
(bad)
(bad)
clc
mov
mov
xlat
pusha
and
xchg
adc
xor
(bad)
nop
inc
loope
mov
and
add
shl
loopne
xor
int
xchg
hlt
addr16
and
xchg
int
nop
push
(bad)
ret
sbb
xor
mov
lahf
jnp
pushf
xchg
or
fadd
dec
xchg
gs
jne
inc
xor
xchg
(bad)
(bad)
lods
addr16
cmp
cmp
ins
dec
out
stos
add
outs
aam
xor
push
mov
jge
sub
mov
out
push
shl
fsubr
inc
pop
gs
adc
sub
cmp
mov
stos
cld
sub
jo
mov
shl
cmp
sbb
dec
pushf
fsub
cld
sbb
mov
enter
sub
xchg
xchg
jne
pop
ins
sbb
adc
mov
imul
je
sub
aaa
loope
pop
bnd
in
pop
out
lods
cmps
push
aaa
xchg
pop
sbb
outs
jle
inc
imul
sbb
add
jmp
mov
and
lock
xor
xlat
and
mov
mov
add
sub
jmp
(bad)
ror
ret
add
imul
cmps
jns
in
and
outs
jae
out
retf
in
repnz
jns
cli
jmp
outs
jno
or
test
mov
jne
fwait
mov
xor
pop
into
mov
pop
mov
fsub
iret
bnd
sbb
fisttp
fldenv
sub
data16
outs
loope
shr
add
shl
dec
push
inc
stos
das
lea
inc
xlat
into
mov
outs
lahf
idiv
sti
mov
not
xchg
pusha
pop
retf
nop
int3
(bad)
repz
sbb
push
xor
inc
(bad)
mov
cmc
imul
sub
pop
movs
or
outs
adc
aad
dec
mov
fs
mov
and
or
popa
iret
test
movs
fdivr
outs
jno
(bad)
ds
pop
cmp
push
lods
sub
inc
jmp
cmp
xchg
pop
std
mov
mov
xchg
hlt
cld
push
(bad)
in
popa
sub
mov
mov
or
cmps
scas
loop
sub
mov
xchg
mov
std
push
and
pusha
add
aad
into
mov
mov
xchg
aas
sbb
sub
mov
(bad)
push
xchg
ins
imul
test
out
mov
inc
mov
sbb
dec
adc
jae
adc
and
dec
retf
addr16
push
dec
imul
push
xchg
popf
xor
push
xor
out
inc
dec
add
cli
mov
mov
inc
shl
xor
xchg
push
cld
loopne
leave
or
jne
call
(bad)
xchg
jne
test
outs
mov
sub
dec
and
(bad)
hlt
push
mov
mov
cwde
lods
(bad)
fs
lock
and
adc
cmc
les
push
mov
push
mov
dec
test
inc
push
jl
push
xchg
test
add
xlat
add
xchg
cmp
push
inc
sti
cmps
or
jno
cmc
and
sub
sbb
add
rol
inc
add
(bad)
mov
xor
inc
repnz
sbb
pop
xchg
push
in
call
je
mov
sub
(bad)
scas
add
idiv
pop
fwait
mov
dec
test
jno
(bad)
sti
popa
mov
retf
test
mov
mov
cmp
movs
(bad)
fnsave
dec
mov
sub
jle
dec
sub
xor
sub
movs
sbb
mov
pop
(bad)
mov
xchg
(bad)
mov
pop
test
jns
mov
lahf
int3
call
mov
and
push
pusha
mov
cdq
shl
xchg
adc
inc
pop
fsubr
add
mov
add
mov
mul
inc
push
jbe
test
cs
or
and
and
out
xchg
xchg
shl
jl
pop
imul
mov
lahf
mov
pop
enter
dec
lods
sub
nop
lods
push
ret
pop
outs
sub
add
sbb
sahf
dec
mov
mov
mov
inc
push
add
cmc
sub
retf
fild
cmp
push
lods
call
pusha
div
xor
inc
popf
adc
inc
cwde
mov
jmp
loope
jae
js
sbb
inc
inc
xchg
popf
stos
push
mov
mov
pop
inc
mov
xor
popf
or
cli
mov
and
cli
cmc
out
outs
push
call
sahf
or
aaa
mov
dec
mov
fmul
inc
add
add
pop
scas
sahf
mov
jno
jns
shl
xchg
sar
cmp
mov
push
push
jmp
pop
shl
mov
ins
cmp
cld
xchg
xchg
jp
outs
lock
and
mov
add
and
push
loop
push
aam
push
test
mov
jb
test
lock
bound
mov
xor
cmp
cmp
jo
cmp
push
sbb
outs
sahf
jnp
mov
movs
jg
xchg
jno
sub
sti
loop
lock
xchg
shr
sti
inc
test
lds
push
sub
push
lahf
push
out
fcomp
stos
(bad)
inc
pop
jecxz
pushf
cld
int3
shr
cmp
dec
xor
jo
ins
lods
jp
jecxz
sbb
adc
inc
outs
mov
repnz
mov
dec
add
xor
sub
repnz
test
(bad)
in
dec
imul
mov
ss
fstp
pop
jae
mov
ds
mov
clc
xchg
pushf
jo
mov
enter
dec
inc
fs
inc
jb
adc
je
xchg
inc
adc
jle
fucomp
rcl
adc
mov
add
test
jno
push
daa
xchg
loope
fcomp
daa
mov
push
cwde
adc
adc
mov
push
js
cmc
jg
xchg
mov
test
daa
xor
loope
jmp
imul
xchg
fdivr
das
int3
xor
stc
data16
dec
nop
cmp
or
cmp
popf
(bad)
in
ret
sar
inc
xchg
retf
dec
hlt
das
rcl
repnz
sub
pop
fisubr
dec
push
push
sub
inc
push
fild
(bad)
out
add
jbe
jmp
out
xchg
repnz
xchg
(bad)
retf
in
shl
fwait
imul
into
dec
jmp
mov
mov
adc
push
cli
pop
jns
mov
daa
inc
push
jb
and
into
sbb
(bad)
adc
loop
push
sub
cmp
je
push
cmp
or
cli
or
imul
adc
pop
jp
les
gs
out
out
div
sti
mov
and
punpcklwd
xor
mov
sahf
leave
mov
rdpmc
add
add
scas
es
pop
sbb
lods
enter
shl
out
adc
push
mov
adc
lea
movs
(bad)
sbb
dec
push
(bad)
call
lock
or
xor
sbb
mov
pop
mov
(bad)
sbb
inc
movs
mov
scas
lods
inc
dec
adc
jmp
push
inc
mov
es
jge
lods
dec
sahf
adc
jg
dec
push
mov
and
inc
cmp
cmp
ret
out
push
call
sahf
sbb
in
mov
xor
pop
xchg
cmps
dec
hlt
mov
(bad)
jmp
inc
in
push
pusha
xor
imul
outs
rcl
ds
dec
add
ins
xor
outs
pop
shr
shl
mov
and
loopne
and
enter
scas
inc
jmp
ss
cwde
sbb
jecxz
sbb
cmp
mov
mov
mov
xchg
ds
les
loopne
pop
sbb
pop
xchg
cld
out
dec
mov
cdq
hlt
loop
xchg
into
cs
inc
lea
cmp
adc
mov
mov
push
push
sub
leave
(bad)
(bad)
sbb
cmc
push
push
repnz
stos
mov
mov
jmp
and
jno
stc
cmp
rcl
gs
imul
iret
mov
push
add
lods
and
lds
sbb
lods
dec
pop
dec
dec
inc
nop
repz
mov
mov
sub
inc
das
xor
mov
fs
loope
jl
pop
adc
iret
inc
mov
je
sub
jns
aad
adc
and
dec
fadd
pop
dec
xchg
rcr
push
ins
mov
movs
push
adc
inc
stos
(bad)
sti
add
adc
and
xor
mov
fbstp
xor
mov
sbb
(bad)
repnz
shr
in
xor
mov
test
push
xchg
jp
pop
iret
cmp
test
out
icebp
jl
push
inc
lods
push
dec
or
inc
popa
cmp
aam
ss
or
mov
xchg
bound
xor
iret
xor
enter
lahf
rol
leave
(bad)
out
add
sbb
jmp
sub
cs
ja
aas
ss
jge
(bad)
popa
pop
(bad)
cmc
jns
retf
loopne
sub
jmp
mov
retf
ins
in
jp
(bad)
fidiv
xor
adc
into
sub
add
mov
adc
adc
sbb
add
mov
jp
adc
jmp
(bad)
aas
mov
jo
not
or
retf
cld
cli
mov
push
ds
shr
adc
push
clc
repnz
push
sbb
popa
push
push
dec
cmc
lods
jno
retf
fnsave
mov
fmul
push
cmp
jmp
loope
out
pusha
cld
cld
xor
jl
pop
jnp
mov
xor
mov
adc
fs
das
mov
shr
rcl
movs
adc
gs
es
stos
test
add
cmp
pmaxsw
adc
shl
mov
xchg
sbb
and
dec
imul
call
mov
add
push
push
enter
lahf
xor
sub
jae
repz
or
pop
jmp
es
adc
mov
dec
add
mov
push
push
xor
shr
imul
fisub
sub
adc
je
and
xchg
mov
and
movs
lods
pop
jp
jo
pop
sub
in
js
adc
pop
and
inc
sub
inc
popf
jae
and
pop
mov
dec
fnsave
add
dec
jecxz
add
push
stc
xchg
ror
push
dec
in
mov
test
ins
adc
mov
test
mov
mov
xor
int
in
cmp
es
mov
mov
push
imul
imul
add
cmp
stc
mov
shl
in
pop
data16
(bad)
scas
fldenv
mov
xchg
mov
mov
jne
mov
vpavgb
mov
lods
leave
xor
push
mov
mov
cmp
pop
aam
in
add
jge
and
pop
aad
inc
mov
sub
add
pop
xor
inc
push
or
push
pop
or
jb
call
outs
pop
dec
scas
mov
call
jmp
daa
fsubr
mov
cs
cs
xor
cmp
cdq
sbb
pop
xor
pop
mov
mov
daa
in
imul
jmp
std
mov
fldenv
repnz
mov
mov
pop
out
xor
(bad)
fnstsw
jp
pop
icebp
sub
mov
lahf
ins
mov
je
jne
xor
inc
inc
enter
mov
mov
xor
out
add
bound
loopne
movups
pop
hlt
dec
fidivr
xchg
pop
shl
pop
jmp
push
ds
cld
push
test
mov
jb
and
test
or
sub
pop
xor
sbb
cld
inc
xor
mov
and
shr
adc
inc
cmp
mov
aad
mov
sbb
imul
movs
cld
jmp
mov
push
fcomip
lock
sbb
xchg
mov
cmp
test
inc
fucom
cmp
daa
xor
ja
seto
in
mov
aaa
mov
int
jmp
test
(bad)
pop
aam
adc
adc
scas
clc
push
loope
ss
sbb
add
loope
outs
push
push
xchg
push
mov
jle
shl
into
adc
lds
mov
jae
xchg
mov
sar
jmp
cld
fsub
dec
push
pop
movs
cld
add
pop
sub
fistp
lods
loop
cmp
les
outs
add
inc
not
cld
pop
movs
push
sahf
mov
std
lods
push
in
inc
xor
scas
mov
and
add
cmp
in
repz
mov
jp
mov
loop
cdq
inc
lea
xchg
pop
mov
sar
outs
mov
addr16
(bad)
call
adc
and
jp
add
pop
push
lods
sbb
ret
test
or
out
je
mov
mov
mov
les
pop
xchg
and
cmp
mov
scas
lea
scas
pop
adc
inc
mov
daa
lods
push
inc
and
push
add
adc
pop
test
ficom
cli
add
push
or
fcmovne
inc
out
fisttp
cmp
mov
fild
cmps
inc
test
iret
xchg
adc
adc
cdq
dec
dec
push
push
loopne
pop
jns
sbb
lock
lods
call
dec
(bad)
cmp
dec
add
movs
mov
jmp
outs
sar
mov
cmp
sbb
cmp
bound
inc
ins
mov
rol
ficom
shl
dec
mov
xchg
popa
or
rol
push
mov
xor
sub
dec
outs
or
pop
les
fisub
repz
movs
(bad)
ja
dec
mov
push
popf
shl
pushf
add
mov
mov
jmp
jmp
std
shl
lock
mov
pop
xchg
mov
and
js
push
add
shl
dec
and
call
sbb
and
adc
pop
xchg
jecxz
popa
mov
mov
enter
loopne
pop
ins
fdivr
adc
mov
sub
pop
cmp
xchg
test
push
(bad)
cmp
loopne
in
ins
cmp
enter
adc
fistp
sub
cld
push
jg
not
add
ins
sbb
inc
es
and
cmps
inc
imul
push
lds
mov
sbb
aaa
cmps
sub
ds
lods
ins
cdq
test
repz
arpl
mov
mov
bound
mov
and
or
xor
dec
fwait
pop
xchg
xor
xchg
push
call
fisubr
(bad)
fcmove
dec
scas
add
lock
scas
pop
fstp
loopne
or
shr
push
dec
jo
leave
xchg
aam
xchg
lock
mov
xchg
cmp
add
mov
mov
aaa
xor
sahf
pop
lea
cmp
lock
sub
adc
movs
pushf
sbb
or
dec
retf
ss
mov
adc
jb
inc
xor
mov
xchg
dec
xchg
adc
or
xor
xchg
mov
push
cmps
shl
xor
lea
jae
or
adc
cli
fbstp
push
jbe
inc
scas
scas
xchg
jecxz
mov
mov
das
xchg
and
data16
jecxz
popa
adc
pop
dec
mov
xlat
ret
js
icebp
gs
mov
lahf
cmp
retf
sbb
(bad)
fisttp
lahf
and
sbb
or
inc
outs
movs
aam
hlt
cli
push
(bad)
in
push
xchg
or
outs
arpl
mov
call
sqrtps
jnp
push
movs
not
adc
(bad)
call
shr
mov
repnz
fwait
mov
inc
push
push
in
pop
into
inc
ret
in
rcr
xchg
ror
lods
push
mov
test
pop
retf
call
push
pop
mov
aaa
dec
mov
(bad)
mov
adc
sub
inc
movs
push
cs
push
hlt
ror
add
enter
pushf
adc
inc
xchg
retf
into
cmps
jecxz
stos
sbb
jl
mov
mov
xor
cli
inc
inc
loopne
sbb
lods
xchg
popf
ror
mov
or
inc
stos
mov
stos
cmps
mov
cmp
fist
jecxz
dec
clc
sar
ss
fisttp
add
mov
cmp
ins
pop
xchg
cwde
dec
out
xchg
jp
push
repnz
jp
outs
push
in
pop
repz
loop
(bad)
ja
popf
mov
xor
pop
inc
cmps
jmp
cmp
scas
cld
and
shr
out
imul
pop
xchg
pop
xor
push
wbinvd
je
scas
(bad)
cmp
push
pop
mov
loope
xlat
(bad)
xchg
dec
pop
dec
retf
scas
ds
cmp
add
(bad)
stos
dec
or
inc
mov
ret
gs
sub
hlt
push
add
push
in
xor
pop
mov
repnz
test
scas
pop
jbe
out
push
inc
cmp
xor
shr
push
je
(bad)
fadd
jb
(bad)
mov
mov
push
popa
fcmove
(bad)
jmp
add
mov
imul
xchg
mov
jae
mov
pop
push
sub
jle
jecxz
push
aaa
mov
rol
lds
ins
mov
sub
fs
mov
sar
stos
mov
add
and
in
ret
mov
xor
nop
(bad)
cmp
ins
test
sti
jecxz
inc
rsqrtps
test
jns
pusha
icebp
stc
int
stc
pushf
inc
jae
loope
out
and
test
cs
jg
shl
pop
movs
jp
cmp
pop
xchg
pop
add
mov
js
jecxz
mov
mov
jecxz
mov
out
fdivrp
jae
bound
mov
xchg
jns
mov
jl
mov
inc
dec
xchg
ret
fcom
lods
repz
inc
fnstcw
mov
add
ret
cmps
test
enter
xchg
(bad)
repnz
jns
lock
sti
sub
pop
daa
add
jo
arpl
push
xchg
cwde
daa
in
loope
jo
cmps
pop
ja
loopne
mov
(bad)
add
mov
sbb
dec
ins
movs
mov
lods
ret
or
in
stc
and
fld
and
inc
sub
mov
mov
repnz
clc
xchg
sbb
or
mov
lods
out
pop
xchg
mov
out
sar
fsubr
jg
mov
mov
adc
int
jl
push
popa
dec
mov
sbb
sub
hlt
mov
adc
mov
sub
xchg
push
jb
xchg
sbb
xor
out
xlat
loop
(bad)
cmps
into
xlat
jmp
in
lahf
popa
in
bound
adc
(bad)
pop
inc
adc
fsubr
(bad)
dec
cmp
mov
test
xchg
cli
jns
lods
sti
cmp
call
xchg
xor
push
lds
mov
imul
xor
sti
add
mov
call
mov
rcl
dec
or
int3
xor
cwde
mov
ror
fsub
in
push
xchg
and
stc
jo
pop
sub
or
call
and
cmp
mov
movs
aad
dec
fwait
jle
mov
dec
cld
jno
adc
xor
push
shl
dec
inc
popf
push
cmp
sbb
stos
pop
pop
(bad)
(bad)
dec
pop
mov
loop
mov
inc
cmp
aad
fidivr
call
inc
movs
sbb
mov
add
cmp
inc
movs
fwait
dec
mov
jns
adc
nop
mov
outs
outs
sbb
mov
js
adc
fs
(bad)
push
enter
xor
pop
mov
dec
ror
xchg
pop
pop
and
lock
les
in
sahf
jo
and
mov
mov
sbb
pop
mov
cmp
call
mov
int
clc
adc
retf
xchg
addr16
sub
jb
and
dec
xlat
cmp
nop
std
mov
test
aad
test
inc
sbb
fs
ds
or
cmps
inc
call
nop
or
add
imul
pop
imul
inc
xchg
iret
mov
ins
adc
add
fimul
jmp
pop
mov
fmulp
push
xor
mov
jge
sub
add
sbb
fsubr
mov
shl
jo
push
push
into
stos
aam
cs
test
xlat
add
hlt
add
test
cmps
inc
shl
jg
popa
out
dec
sbb
push
fild
adc
cmp
addr16
jae
shl
movs
jne
add
sbb
lock
popf
movs
and
dec
neg
dec
(bad)
jmp
add
pop
push
inc
dec
jle
fs
inc
adc
rcl
xor
xor
mov
in
pop
addr16
xor
call
jle
xor
cmp
cli
dec
aaa
enter
out
jno
mov
pop
ret
outs
scas
dec
scas
adc
jl
ins
outs
sub
popf
int3
ins
test
xchg
in
cmp
adc
dec
das
inc
lods
mov
mov
jmp
push
push
enter
fwait
inc
add
mov
popf
jmp
push
cmp
aaa
lods
dec
push
repnz
push
xchg
xchg
xchg
loope
mov
jecxz
nop
push
or
add
ja
adc
push
sbb
mov
cmp
movs
int
add
repz
cmc
popa
add
push
sbb
cmp
dec
pop
dec
adc
out
(bad)
sub
daa
and
sbb
push
dec
adc
gs
jnp
mov
and
dec
mov
push
or
outs
push
repnz
fcom
(bad)
inc
cs
out
jle
adc
loop
je
bound
sti
pop
cmp
mov
fstp
mov
xchg
lods
or
loopne
repz
imul
mov
adc
jl
in
xchg
sbb
cmp
lahf
dec
adc
lock
call
iret
icebp
adc
mov
scas
loop
lds
int3
(bad)
iret
and
(bad)
adc
aad
shr
push
mov
loope
(bad)
fistp
mov
(bad)
imul
int3
ret
scas
sbb
lahf
outs
es
hlt
xchg
adc
in
adc
jge
sbb
lods
mov
lds
pop
xlat
xchg
mov
ja
mov
ss
lods
loopne
push
and
test
dec
xor
and
sbb
jbe
and
enter
sub
fsub
mov
mov
sbb
jge
push
popa
call
mov
adc
daa
shl
sbb
dec
xchg
jp
and
mov
mov
push
jb
xor
and
retf
jl
adc
aam
movs
push
mov
out
inc
popf
fmul
jo
in
cld
loopne
retf
test
dec
jno
cs
push
in
jmp
movs
stos
mov
int
div
lea
and
call
push
mov
cmps
(bad)
repnz
stos
sub
xchg
sub
stos
div
mov
or
cmp
les
stos
mov
xlat
cs
dec
push
mov
pop
ja
ds
cdq
popf
cs
mov
pop
adc
adc
inc
test
push
dec
aam
gs
mov
xor
mov
mov
call
stos
or
imul
pushf
xchg
jge
fiadd
inc
call
mov
loope
dec
push
mov
xlat
pop
inc
adc
ror
loopne
retf
inc
lahf
mov
in
ret
aaa
dec
popf
sub
sbb
sbb
jb
xchg
aas
mov
adc
cs
daa
adc
or
or
scas
out
scas
scas
fwait
xor
lods
cmps
mov
loopne
mov
fldenv
rcl
fisub
mov
and
and
dec
fdivp
cli
fstp
(bad)
pushf
lds
in
(bad)
call
mov
int
jle
stos
mov
pop
fcomp
mov
js
mov
popa
(bad)
dec
std
jns
push
cmps
xchg
push
lods
out
inc
js
or
ret
push
mov
bound
lods
cmp
cdq
mov
(bad)
jle
call
sub
lahf
add
pop
cmp
clc
ret
mov
popf
scas
sub
je
test
stc
cmp
bound
push
(bad)
mov
test
test
or
inc
dec
ss
push
jno
retf
add
mov
xor
int3
les
jp
arpl
sub
pop
and
jns
fs
or
(bad)
int
dec
mov
mov
mov
push
jecxz
mov
fld
ret
push
and
loop
scas
les
ror
add
rol
retf
mov
add
ror
mov
ss
adc
loopne
test
arpl
inc
jmp
adc
sahf
ror
rcl
arpl
sub
fwait
and
adc
sub
mov
adc
pop
fidiv
out
sbb
mov
(bad)
ins
push
push
mov
pop
sub
test
dec
push
lahf
jmp
mov
push
test
mov
add
mov
ret
jae
xor
fldcw
jnp
jmp
inc
adc
jl
pop
loopne
fwait
or
pusha
scas
mov
xor
aad
es
push
scas
mov
sbb
rcl
jmp
shr
and
jbe
jmp
adc
fiadd
cld
xchg
pop
and
push
pop
sti
pop
ins
shl
or
scas
mov
add
js
mov
test
loope
jg
test
out
out
dec
add
push
les
int3
lahf
xchg
mov
clc
add
rcl
jno
or
fiadd
in
test
pop
mov
iret
jae
and
cld
adc
add
adc
sub
(bad)
jmp
out
jmp
es
aam
cmp
cmc
mov
sti
shl
in
retf
inc
and
pop
jl
cwde
loopne
mov
fwait
cdq
(bad)
enter
pop
outs
das
inc
cmps
(bad)
cmc
mov
inc
xor
inc
es
mov
mov
jno
pop
movs
and
aas
jmp
sub
xchg
int3
add
cmp
loope
xchg
in
into
outs
adc
addr16
arpl
loop
xor
fbld
lock
sahf
fmul
(bad)
mov
mov
inc
cmp
or
popa
ret
fwait
inc
pop
int
(bad)
movs
xlat
pop
mov
xchg
es
mov
mov
xchg
xchg
test
adc
test
push
push
dec
cli
(bad)
fisubr
aas
test
inc
or
and
or
pop
xchg
inc
in
adc
popa
(bad)
xchg
or
mov
sub
inc
sub
loopne
push
mov
pop
mov
push
ja
sub
jg
push
lahf
jp
xor
add
push
add
mov
jbe
pop
push
lods
cmovne
jmp
push
mov
pushf
addr16
xor
cdq
and
mov
in
inc
pandn
mov
dec
adc
dec
rcr
lods
xor
fistp
test
movs
jmp
adc
neg
test
xchg
pop
xor
mov
movs
in
pop
inc
pop
loope
mov
call
and
repz
jb
test
xchg
aam
or
adc
adc
mov
je
int
jl
adc
aad
mov
add
int3
push
sub
and
push
mov
inc
push
adc
and
out
cli
movs
dec
mov
fs
pop
inc
ins
sub
adc
or
jl
lds
gs
inc
sbb
mov
sahf
div
std
sbb
push
jge
inc
mov
out
fwait
add
add
rol
mov
stos
sbb
fdivr
mov
imul
nop
mov
stos
jl
or
xchg
jg
in
sub
mov
gs
push
mov
not
cmp
idiv
sar
and
push
imul
pop
mov
sbb
dec
aas
gs
es
cld
and
out
jmp
xor
repnz
cmp
xor
cmp
loopne
xchg
inc
mov
stos
jns
or
jnp
mov
(bad)
fcom
mov
fidiv
movs
push
(bad)
jb
sti
lds
add
sbb
cmp
cwde
mov
mov
mov
add
mov
dec
mov
imul
push
dec
stos
out
test
cmp
ins
jnp
xor
stc
pop
push
jno
call
push
loopne
sbb
mov
mov
mov
stos
test
add
lods
loopne
pushf
pop
outs
js
leave
mov
sbb
inc
call
hlt
std
xchg
ins
ins
mov
jbe
mov
ds
jmp
imul
in
mov
dec
cmp
mov
out
xchg
dec
ret
mov
aad
out
aad
cmp
std
call
inc
pop
sar
sub
fld
sub
jecxz
push
jecxz
rcl
cmc
dec
xchg
test
ror
mov
loope
sub
xchg
lock
scas
xor
push
jmp
sub
jo
mov
arpl
mov
mov
stos
sbb
mov
aas
in
add
sbb
je
aas
push
xor
push
sub
cmps
out
cmc
adc
pop
mov
add
dec
and
imul
jns
mov
mov
xchg
mov
sbb
dec
cmp
pushf
ins
(bad)
pop
add
add
mov
jne
idiv
fstp
loopne
test
loopne
mov
int3
mov
and
adc
push
push
push
inc
daa
std
cmp
idiv
inc
scas
cmp
call
cmp
pop
cmp
dec
add
fcomp
push
cmp
dec
(bad)
test
sub
pop
(bad)
je
cmp
into
jno
adc
pop
sbb
jle
mov
int3
mov
push
or
fadd
push
div
call
sbb
mov
ret
pop
jo
mov
pop
or
shl
jg
mov
mov
lds
int3
shr
add
iret
mov
xchg
cmc
add
into
add
fld
mov
addr16
cli
mov
add
stos
in
mov
inc
mov
push
mov
pop
sbb
fmulp
in
repnz
mov
mov
cli
pop
add
in
test
cmp
sbb
sar
adc
movs
dec
cmc
and
jmp
jae
vmovntps
iret
cmp
fsubr
xor
imul
push
faddp
mov
push
dec
ins
(bad)
xor
jle
mov
adc
xor
fsubr
ds
pop
popf
dec
add
adc
rcl
pushf
dec
xchg
add
test
cwde
imul
mov
mov
sub
adc
push
dec
in
or
or
arpl
lods
lods
inc
push
int3
test
or
inc
mov
cmp
mov
in
push
cmp
mov
push
push
outs
pop
push
xor
loopne
pop
or
adc
cmc
mov
pop
jb
jecxz
js
sysenter
fwait
sub
add
jg
inc
jne
ror
mov
adc
fdiv
popa
pop
pop
leave
and
sbb
pop
test
inc
rol
js
push
dec
je
xchg
retf
and
pop
or
sub
dec
arpl
dec
imul
int3
push
sbb
fistp
and
repz
jp
add
mov
xchg
add
push
scas
jg
xchg
mov
mov
pop
cmp
fwait
inc
push
test
test
lds
(bad)
xchg
inc
jne
adc
jle
aas
adc
(bad)
push
push
sbb
movs
mov
mov
aas
test
sub
ret
stc
xchg
inc
in
pop
dec
popa
jmp
ins
je
inc
rol
jp
inc
inc
aad
shr
lods
mov
cmp
cli
dec
imul
rol
in
mov
push
or
mov
xchg
xlat
pop
cmp
rcr
std
mov
clc
addr16
mov
aaa
call
gs
cld
gs
cmp
cmp
dec
fld
addr16
xchg
lea
and
in
loope
out
mov
adc
out
lds
push
add
mov
imul
mov
aam
les
popa
xor
mov
or
pop
cli
mov
lods
mov
ss
pop
xor
mov
xchg
mov
jne
or
xchg
mov
pop
sub
je
mov
mov
mov
xor
push
jecxz
push
pop
mov
sbb
in
xchg
cwde
jae
mov
sbb
gs
fdiv
cmp
(bad)
or
xchg
sti
fisttp
aas
ja
sub
push
sti
xor
pop
clc
xlat
sub
or
clc
sub
mov
imul
out
mov
push
jmp
loope
jb
dec
mov
sub
loope
jbe
shl
push
call
(bad)
mov
jecxz
xchg
and
and
sahf
idiv
xor
out
and
aad
int3
dec
sub
int3
(bad)
in
mov
call
dec
cs
hlt
mov
mov
pusha
data16
xchg
(bad)
in
mov
inc
sbb
mov
xor
fisubr
popa
sub
sbb
rcl
call
push
pop
adc
ret
(bad)
and
sbb
push
ins
cld
inc
mov
andps
sahf
popa
cmc
sub
in
mov
js
sub
mov
push
mov
sub
or
sub
rcl
fld
cmps
cmps
popa
cs
fld
cmp
jno
out
inc
stos
mov
jp
mov
cmp
jae
rol
rol
scas
pop
xor
sti
sbb
sbb
cmps
or
dec
mov
out
jbe
les
imul
das
in
repnz
in
add
enter
jbe
sbb
pop
fistp
push
jge
xchg
repnz
pop
and
repz
jp
pop
icebp
xchg
push
scas
fst
xor
out
push
inc
push
mov
cmps
out
xor
dec
and
dec
ret
mov
and
jns
sub
sbb
fs
rcr
test
mov
dec
je
lahf
cmp
push
lds
adc
add
xor
mov
pop
xchg
ret
adc
pop
aad
mov
and
pop
sub
adc
and
xor
cmp
repnz
cmp
mov
jno
sti
mov
push
xor
jbe
jno
pop
xlat
push
and
leave
sub
scas
call
jnp
in
jmp
adc
in
ret
cmp
mov
cmp
push
add
test
hlt
fucomip
push
bound
sahf
push
(bad)
jo
add
pop
(bad)
loop
dec
xchg
lahf
or
mov
test
jmp
inc
mul
enter
jge
xor
cmp
jecxz
dec
rol
and
int
mov
popf
cwde
jns
dec
repnz
ret
lods
cmp
jmp
mov
xor
enter
cmp
je
add
mov
mov
mov
push
dec
pop
and
loop
sbb
bound
fsubr
shl
ret
shl
in
mov
fdiv
mov
mov
dec
in
leave
xchg
sub
xor
out
sub
mov
mul
or
pop
mov
icebp
call
add
scas
mov
cmp
xchg
or
and
mov
stos
std
push
aas
test
aad
lock
sahf
push
ror
mov
lock
xor
in
outs
cmp
aam
fidivr
loop
hlt
pop
xchg
loope
or
push
sbb
or
dec
dec
add
push
cmp
aaa
ins
adc
lods
call
push
sbb
in
js
xchg
movs
dec
test
retf
test
push
cmp
xlat
mov
sti
add
pmovmskb
repnz
xor
aaa
fwait
cmp
or
add
int3
daa
pop
sbb
shl
dec
(bad)
adc
jmp
loop
mov
jne
inc
stos
adc
pminsw
mov
aad
pop
fmul
sbb
mov
popa
sbb
and
mov
jne
fs
dec
mov
xor
nop
bound
xchg
aaa
push
push
mov
and
and
and
add
shr
arpl
aad
aaa
div
xadd
nop
cwde
mov
popf
inc
fldcw
jns
cmps
mov
cmps
sar
ins
mov
push
mov
fiadd
mov
or
dec
mov
cdq
mov
out
xchg
or
mov
ins
aad
test
add
cmp
lds
hlt
mov
dec
mov
add
lods
sub
fnstcw
stos
dec
xchg
test
bound
sub
imul
lock
mov
xchg
fisttp
repnz
loopne
cmp
xor
adc
out
jl
repnz
and
add
jge
push
inc
pop
push
call
mov
xor
add
jmp
ins
xchg
js
rcl
mov
out
vpsrld
inc
test
loop
dec
mov
call
jae
cmp
fist
and
adc
xchg
mov
stos
xchg
clc
mov
xor
mov
add
cli
test
cmp
and
push
out
jl
push
cld
inc
dec
out
cmp
adc
out
and
icebp
mov
sar
ficomp
adc
inc
(bad)
sbb
clc
test
inc
sbb
in
lock
clc
aad
imul
repz
call
mov
push
add
push
adc
outs
dec
sub
cmp
icebp
in
push
cmovbe
xchg
xchg
dec
xchg
xchg
not
scas
inc
xor
cdq
mov
lock
enter
sahf
int3
jmp
aas
jae
aas
popa
jb
lock
(bad)
cli
sbb
ficomp
cmps
dec
cmp
cdq
push
push
and
in
and
dec
push
and
adc
loopne
hlt
xor
ss
adc
fistp
add
aas
or
push
mov
stos
mov
in
in
dec
mov
xor
jnp
sbb
push
loope
in
jb
cdq
xor
imul
sub
pop
cmps
std
xlat
push
jbe
dec
cmp
cmp
movs
pushf
and
stos
xchg
outs
inc
fs
xchg
loope
ins
cmp
dec
push
movs
dec
rol
and
inc
test
das
mov
lods
stc
adc
std
outs
int
bnd
or
lds
pop
push
pop
cmp
adc
jno
inc
sbb
mov
popa
std
repnz
push
std
lods
mov
mov
lock
aam
jecxz
jnp
xchg
pop
retf
stc
push
mov
icebp
fninit
jmp
lahf
mov
fist
rol
ret
cwde
add
sbb
sbb
stc
pop
push
fld
(bad)
ins
test
xor
in
mov
mov
mov
inc
and
call
sbb
dec
repz
fwait
es
mov
fnsave
xchg
ins
pop
sub
cmps
sar
add
xchg
sbb
jne
or
sub
aas
push
inc
mov
lea
aas
shl
xchg
mov
ss
std
stc
mov
adc
cmc
in
je
mov
out
xor
xchg
(bad)
sbb
in
out
dec
(bad)
fstp
jle
jmp
dec
imul
cwde
mov
rcr
iret
enter
leave
and
and
push
cmp
dec
cmp
jge
stc
xchg
pop
(bad)
dec
repz
nop
cdq
add
loop
cdq
mov
sbb
cmp
repz
xchg
icebp
mov
rol
add
mov
or
cmc
dec
fcom
sub
cwde
cmc
or
pop
outs
add
pop
cmp
ret
mov
popf
outs
xchg
popa
lahf
fisttp
mov
mov
add
mov
xor
push
imul
cwde
sbb
cmp
pop
push
ret
inc
sbb
jmp
cmc
sar
test
xchg
dec
loopne
sti
test
neg
cmp
popf
fdiv
push
dec
pushf
push
mov
jno
stc
clc
jecxz
cld
add
inc
inc
mov
imul
arpl
cdq
mov
cs
shl
fcomp
inc
js
sbb
call
stos
xchg
cld
nop
pop
sbb
shl
cmp
mov
mov
add
or
pop
loope
mov
adc
mov
push
div
in
ret
mov
ret
std
lea
mov
lods
stos
mov
mov
mov
movs
or
ins
push
ds
xchg
jno
xor
lods
jo
loopne
call
dec
add
js
pusha
or
les
loop
mov
push
jbe
cmp
mov
xor
sub
cmps
ds
fldcw
shl
mov
and
icebp
push
not
movs
fs
stc
jo
jnp
xchg
push
dec
ins
push
shl
jp
sbb
fnstenv
dec
ficomp
sub
push
psubsb
into
movs
lods
xchg
pop
sub
jnp
mov
jg
sub
sbb
xchg
lea
xchg
bound
xor
pop
add
imul
dec
and
xchg
cli
cs
push
js
ds
lea
bound
mov
xchg
outs
sbb
ja
int
xor
xchg
pop
mov
out
adc
aas
repnz
adc
mov
scas
or
mov
imul
(bad)
(bad)
pop
test
je
out
cmps
sub
in
ins
fisttp
movs
mov
ins
xchg
outs
jns
ds
xchg
jp
dec
js
xor
pop
repnz
xor
adc
pop
ja
jae
js
in
cmps
pop
sub
push
rol
adc
les
mov
push
jle
cwde
push
ds
push
mov
rcr
pop
cmp
push
inc
jecxz
daa
outs
sti
dec
sbb
mov
mov
aas
imul
push
cmp
lock
loopne
test
cmp
iret
mov
mov
mov
mov
imul
cmps
(bad)
fmul
xchg
jo
adc
and
add
pop
fisttp
repz
cs
arpl
cs
push
pop
outs
pop
mov
hlt
pop
push
pop
and
in
jmp
stos
mov
(bad)
into
std
shl
sub
sub
hlt
or
std
in
adc
sbb
in
das
(bad)
ffree
dec
(bad)
pop
sbb
ficomp
rcr
adc
hlt
imul
int
mov
cmp
sbb
stc
jbe
es
push
jmp
movs
cdq
lods
push
rol
ret
fwait
out
xor
or
hlt
mov
cmps
jecxz
repz
dec
das
push
fdiv
(bad)
aam
idiv
sbb
lahf
test
add
pushf
int
and
jae
out
rcl
mov
popf
xchg
or
in
push
jb
mov
rol
sbb
icebp
mov
idiv
lock
cmp
arpl
test
sar
inc
mov
movs
sysenter
lods
fcom
xor
pop
jecxz
in
adc
dec
add
pop
ins
ins
xor
in
inc
adc
pop
mov
xchg
xlat
mov
mov
xchg
inc
xbegin
ja
sub
jl
add
xchg
cld
in
pop
mov
fadd
push
test
int3
push
scas
xchg
mov
dec
inc
popa
mov
cld
adc
call
dec
adc
mov
jge
nop
fidiv
xor
ins
loop
sbb
jnp
xor
mov
cwde
scas
int3
es
sub
fidivr
sbb
js
mov
sti
dec
mov
mov
xor
inc
call
xchg
push
sub
cmp
popf
sbb
pop
in
xchg
pop
test
out
add
inc
mov
dec
shr
aam
mov
add
in
xor
es
pop
adc
lods
fisttp
sbb
or
iret
test
mov
popa
mov
jo
xlat
aam
(bad)
xor
push
into
(bad)
(bad)
dec
sub
stc
idiv
shl
bound
sti
adc
push
retf
adc
js
fidivr
movs
jne
sbb
scas
scas
pop
mov
cmc
xlat
mov
push
cli
fdivr
push
sub
xor
and
adc
xchg
mov
jae
push
das
ret
xor
or
xor
xchg
dec
sbb
(bad)
sbb
push
rcr
pop
data16
fucomip
sub
test
jle
pop
xor
aaa
jnp
cld
sbb
lods
add
scas
cmps
inc
or
cmp
inc
cmc
loope
and
test
inc
sbb
cmp
out
clc
loope
xor
inc
outs
adc
pop
(bad)
cmp
add
xchg
cmp
push
fild
dec
ret
in
xchg
sahf
lahf
xor
jne
mov
pusha
aaa
fs
test
out
dec
sbb
repnz
adc
and
int3
aas
outs
movs
sub
push
hlt
sbb
jg
push
dec
pop
arpl
lds
pop
cmp
adc
js
and
test
ins
adc
push
add
mov
mov
movs
nop
stc
stos
add
and
xor
xor
jp
adc
inc
sub
es
cmps
xor
inc
les
cmp
cmp
mov
dec
push
cmp
cs
in
cs
es
loope
and
fsubr
call
mov
inc
dec
push
fdivr
pop
mov
lar
(bad)
int3
mov
push
aas
cmp
cmc
xchg
adc
sbb
sti
lock
test
pop
cld
xchg
jb
and
cmp
shl
jl
pusha
pop
js
jl
sub
pop
je
add
push
fnstcw
jmp
xor
mov
fst
jb
into
xchg
mov
shl
sub
xchg
and
lahf
inc
cmps
sub
jbe
and
dec
cmp
pop
mov
ja
je
and
lock
cld
pop
fistp
pop
sub
or
ret
push
or
aam
les
jmp
xchg
aad
mov
add
pop
or
cdq
mov
xor
ret
inc
test
cwde
or
repz
outs
mov
xchg
aam
dec
inc
scas
inc
imul
imul
adc
sub
xchg
outs
xchg
shr
div
daa
mov
and
sbb
cmps
xlat
xchg
sbb
sub
push
push
es
out
inc
pop
sub
and
popf
repnz
xchg
pop
xor
ret
data16
fisub
cli
out
mov
fs
dec
sub
retf
add
icebp
mov
sti
inc
out
adc
add
ins
adc
or
ficomp
sti
inc
mov
mov
int3
jge
adc
mov
aam
cmp
(bad)
and
dec
sbb
push
rcr
sti
call
and
shl
call
sbb
test
mov
in
add
cwde
lods
pop
je
mov
add
lods
dec
outs
pop
push
add
push
enter
sub
je
sbb
pop
jl
xchg
pushf
inc
inc
pop
pop
pop
mov
and
sub
neg
xor
shl
jmp
dec
cmp
cmp
mov
movaps
adc
sbb
pop
mov
hlt
xor
sub
lock
and
add
inc
mov
sbb
call
std
push
sbb
cld
fwait
dec
call
dec
ins
sbb
sbb
inc
lods
stos
add
mov
jae
xor
pushf
pop
jne
jae
sbb
inc
test
ins
ret
retf
push
sbb
jnp
(bad)
xchg
cmc
pop
aam
cmp
or
hlt
(bad)
aaa
stc
jns
into
sbb
std
and
rcl
sbb
jge
into
cmp
sub
test
xor
add
hlt
fistp
mov
scas
in
pop
adc
jmp
xor
lds
mov
aad
pop
sbb
hlt
inc
inc
arpl
lahf
iret
pop
dec
push
adc
repz
lods
push
pop
(bad)
mov
rcr
push
lahf
js
or
xor
aam
and
add
mov
sub
inc
dec
mov
mov
daa
jmp
mov
lods
mov
or
mov
jne
sbb
in
jnp
and
ret
ss
je
into
cmps
pop
cmp
sub
pop
lea
dec
push
sbb
repz
inc
scas
xor
(bad)
call
(bad)
hlt
call
dec
jae
inc
verw
scas
(bad)
aad
sar
jo
push
shl
mov
rcl
lahf
xchg
sub
stos
xchg
jg
cmp
arpl
jb
(bad)
mov
shl
mov
cmc
out
shl
nop
and
and
push
leave
shr
push
and
jmp
cwde
or
pushf
cmps
sbb
clc
movs
mov
jnp
sbb
dec
or
sub
or
and
jbe
pop
xor
add
cmps
les
sub
sbb
adc
mov
lds
in
arpl
jae
out
jge
jle
xor
je
mov
iret
sti
cmp
outs
jecxz
xchg
xchg
pop
(bad)
(bad)
pop
or
imul
retf
pop
ret
jp
adc
mul
dec
push
ja
adc
fsubrp
xchg
ds
(bad)
xor
dec
lods
test
push
clc
pop
mov
mov
pop
popa
pop
sbb
fs
push
sub
adc
pop
mov
jg
test
cli
push
(bad)
xchg
ja
xor
mov
scas
mov
mov
jnp
mov
pop
mov
mov
jge
push
in
sub
push
sbb
jnp
push
out
sti
dec
int3
loop
xchg
sbb
inc
inc
push
inc
retf
dec
mov
inc
mov
ret
jno
cmp
int
mov
add
dec
sbb
dec
pop
setne
sti
sbb
mov
push
fmul
or
(bad)
jne
xchg
repz
movd
xchg
sub
xor
dec
sbb
pop
lds
test
popf
(bad)
sbb
jmp
dec
cld
ins
fisttp
jecxz
imul
cs
pop
imul
adc
cwde
sbb
aaa
outs
ret
mov
cmp
mov
icebp
arpl
add
jnp
ins
xchg
retf
call
push
bound
jl
xor
xor
mov
inc
ret
mov
mov
sbb
add
sbb
add
push
jbe
cs
jmp
aam
adc
add
not
mov
sbb
push
pop
mov
inc
jl
icebp
mov
cmp
pop
xor
aaa
sub
push
add
pop
mov
mov
jbe
out
inc
cmps
ja
mul
push
sbb
movs
out
lods
dec
sbb
cs
jae
out
and
mov
test
fistp
in
dec
mov
dec
btr
xchg
mov
adc
movs
jle
dec
cmps
mov
stos
and
mov
mov
lock
ror
inc
ficom
imul
pop
adc
rcr
aam
sahf
clc
jge
xor
jae
mov
rcr
jae
sub
mov
push
ja
movs
inc
pusha
out
mov
jnp
out
xchg
aaa
retf
ret
clc
push
mov
(bad)
shl
xchg
loopne
jmp
mov
pop
scas
cmp
or
xlat
push
addr16
retf
lods
aad
push
pop
sar
pop
xchg
enter
cld
lea
dec
es
push
add
test
test
xchg
retf
je
xchg
fnstsw
imul
cmps
mov
sub
mov
addr16
shl
mov
ret
call
dec
jae
aas
out
xchg
outs
jb
cld
xchg
test
mov
aas
stos
dec
pop
sbb
mov
or
fs
fisubr
cmp
retf
cmc
or
mov
jmp
scas
(bad)
jl
pop
xchg
fistp
jle
out
mov
fistp
cmp
jmp
xchg
xor
cdq
xchg
cmp
fisttp
mov
mov
scas
loope
ret
pop
add
nop
sub
nop
push
sbb
stos
(bad)
xchg
mov
out
test
in
add
sub
and
or
jne
dec
enter
inc
inc
push
adc
dec
pop
add
jnp
or
test
mov
inc
sbb
add
call
ja
imul
push
xchg
test
xchg
push
pusha
lods
xor
fcomp
aas
adc
std
in
cli
pop
ror
sub
loope
sub
inc
mov
or
retf
mov
xor
repnz
adc
adc
mov
imul
inc
lahf
pop
cdq
jb
lods
mov
mov
jne
cmp
sbb
sahf
cmp
sub
jle
add
inc
xchg
sbb
lea
data16
test
fild
ins
fld
inc
out
test
xchg
repnz
fld
pop
xor
mov
es
mov
or
int3
call
add
push
int3
add
pop
cmp
fwait
lahf
pop
js
mov
mov
je
ffree
mov
jp
push
xchg
popa
frstor
add
sub
or
in
shl
or
pop
cmps
out
pop
adc
fsub
push
(bad)
xchg
jne
dec
in
pushf
push
imul
popf
loope
aas
sbb
aad
mov
fistp
call
sbb
sar
inc
lea
dec
xchg
mov
ins
jecxz
mov
lds
push
test
fnstsw
cmc
rdtsc
jo
mov
adc
sbb
std
(bad)
les
mov
sahf
sahf
cmp
add
fstsw
sbb
ins
mov
mov
push
into
xor
jnp
and
std
mov
push
inc
fadd
sbb
es
mov
scas
xchg
shr
stc
call
jbe
jns
dec
outs
sbb
xor
loope
inc
(bad)
cmps
aas
data16
mov
nop
dec
ror
les
stc
cmp
scas
loop
pop
or
das
push
push
fucomi
ins
xchg
rcl
or
mov
iret
imul
xchg
mov
and
call
pop
cld
cmps
cmps
pop
mov
cmp
in
std
outs
test
dec
pop
iret
mov
int3
fst
(bad)
call
(bad)
mul
leave
add
in
ins
and
pushf
stc
not
cmp
call
push
sub
pushf
outs
not
adc
aam
sar
popa
mov
cmps
or
stos
iret
mov
sar
xchg
dec
xor
scas
mov
je
call
xor
mov
jmp
loop
loopne
xchg
xchg
into
inc
cmp
mov
mov
cmp
jmp
bound
in
sub
cmps
push
pop
push
out
push
pop
inc
in
scas
push
push
retf
out
cs
(bad)
aas
pop
push
inc
sub
retf
iret
xor
hlt
mov
in
ins
(bad)
ss
(bad)
fdivp
mov
mov
data16
aas
data16
mov
and
stos
sbb
popa
cdq
rcl
mov
push
(bad)
xor
dec
xchg
xchg
adc
mov
ror
xchg
lahf
hlt
imul
mov
jns
add
call
(bad)
or
cmp
adc
xor
retf
mov
jle
ret
bound
sbb
movs
(bad)
mov
dec
sbb
jecxz
aas
mov
hlt
in
mov
rcl
mov
mov
fnstenv
pop
fild
push
sub
mov
mov
out
(bad)
call
push
jnp
pushf
lea
or
test
inc
neg
cmc
push
mov
mov
jmp
repz
sbb
ja
cmp
mov
xchg
mov
pop
mov
inc
sbb
xchg
xchg
cmp
cld
(bad)
jle
out
inc
lods
and
push
imul
mov
push
inc
pop
ja
sahf
sub
dec
shl
arpl
xor
sub
adc
shl
adc
outs
js
fst
pop
test
adc
jle
into
lods
sbb
mov
xchg
jecxz
call
ds
and
leave
mov
sbb
xchg
mov
sub
(bad)
mov
or
(bad)
leave
mov
xchg
call
inc
imul
(bad)
push
sar
pop
imul
mov
cmps
adc
xchg
or
outs
test
imul
les
fidiv
sub
pop
dec
imul
push
scas
and
mov
ins
fbld
lods
xchg
sahf
jbe
push
xor
out
pop
xchg
jnp
fs
ret
inc
cwde
enter
arpl
cmp
and
cmp
and
push
sbb
mov
dec
mov
push
xchg
pushf
out
dec
dec
add
mov
mov
mov
push
mov
jmp
add
adc
xchg
and
jno
mov
mov
mov
push
pop
outs
imul
jo
repz
ins
mov
repnz
pop
mov
adc
les
xchg
jns
xchg
scas
ds
cmc
fcmove
movs
into
mul
jb
neg
fbstp
aas
add
add
add
inc
out
inc
mov
fnstsw
sahf
sbb
adc
sub
cmp
cs
xor
xchg
and
movs
xlat
cwde
popa
iret
mov
pop
fcomp
jns
fwait
retf
push
pop
push
or
pushf
shr
mov
xor
mov
lock
xchg
lods
repnz
pop
lds
cli
clc
inc
pop
lock
cwde
inc
dec
sub
jecxz
inc
mov
ds
dec
fld
jb
sub
mov
ret
add
lods
js
dec
pop
xor
pusha
adc
mov
aas
pop
jns
mov
into
test
std
dec
shr
inc
outs
mov
xor
ja
out
aam
or
adc
jecxz
into
push
vcvtpd2ps
ret
aaa
add
mov
aam
sahf
mov
das
push
sbb
pop
jo
aad
mov
div
or
jmp
sub
leave
int
pop
xchg
rol
nop
cs
cmp
ror
int3
push
xchg
push
push
push
leave
mov
scas
ret
cld
std
ret
loope
(bad)
outs
ret
cmps
scas
aad
pop
leave
push
sbb
xor
add
int3
mov
(bad)
cmps
ss
xchg
or
repz
mov
or
int3
dec
(bad)
ror
call
test
and
adc
div
push
mov
push
push
out
push
push
xor
adc
xor
mov
adc
jge
mov
cdq
ret
ret
adc
mov
test
jnp
cmp
jge
cli
add
mov
jge
cmc
sar
jmp
push
dec
scas
xchg
in
mov
cli
jmp
arpl
mov
outs
and
mov
add
out
mov
jno
jl
test
gs
nop
dec
test
dec
std
scas
sbb
rcr
shr
int3
jge
inc
push
dec
dec
xor
fld
mov
iret
scas
push
mov
mov
xor
sub
das
cmp
call
sbb
pop
scas
lea
ins
(bad)
pop
in
hlt
or
test
das
jo
sub
jle
enter
pop
mov
pop
imul
jmp
arpl
push
xchg
push
(bad)
xor
out
dec
adc
scas
jp
dec
xchg
out
inc
neg
in
shl
cmovbe
fiadd
pop
and
inc
and
or
mov
pushf
mov
cmps
jb
cmp
out
pop
rcr
inc
not
pop
fiadd
clc
test
jns
jge
adc
and
aaa
jecxz
aam
out
cmp
loopne
nop
jae
call
sbb
ss
popa
ror
scas
adc
and
into
xchg
pop
out
lahf
mov
push
jns
mov
cmp
sbb
outs
sahf
imul
xchg
stos
pop
jo
in
in
jle
fstp
rcl
pop
push
add
push
pop
cld
loop
sub
sbb
cld
int3
mov
mov
dec
int
sti
cmp
cmc
sub
sub
inc
xor
sub
ins
(bad)
arpl
push
add
outs
cwde
int
xchg
out
outs
int
aam
fs
ss
dec
cmps
sub
loopne
shr
inc
fst
adc
lahf
push
(bad)
mov
inc
jl
(bad)
or
aas
xchg
aaa
sub
lahf
xchg
nop
hlt
mov
clc
js
add
lock
lahf
mov
setno
mov
lea
mov
cdq
xchg
pop
sub
rcl
arpl
jge
dec
test
jno
into
scas
gs
fild
mov
push
hlt
add
stc
dec
pop
clc
push
nop
das
lea
(bad)
std
fldcw
in
push
jno
cmp
push
stos
sbb
movs
xor
loope
cdq
mov
and
jbe
dec
sar
add
aaa
mov
imul
mov
pushf
(bad)
sahf
ja
inc
cmp
stos
sar
out
pop
lock
loop
dec
inc
mov
inc
add
sbb
jo
or
mov
fwait
inc
ss
or
jne
lahf
jns
sbb
mov
push
cmp
aaa
sbb
pop
jge
test
push
aam
dec
pop
cmps
addr16
dec
inc
js
xlat
dec
retf
dec
pop
outs
ja
ins
xchg
and
mov
jo
xor
mov
fwait
xchg
or
cmp
shr
add
nop
js
jle
ds
sub
push
jbe
fnsave
popf
mov
mov
jl
jecxz
(bad)
ret
stos
in
imul
inc
int3
mov
cmp
rcr
cmps
in
xchg
fdiv
mov
sub
ror
inc
es
mov
cmp
popf
fistp
test
jne
lds
dec
xchg
push
test
sbb
mov
cmp
cdq
dec
xchg
test
sahf
pop
mov
xor
mov
test
xchg
mov
sbb
int3
mov
cmc
data16
cli
sub
cmp
fbld
jle
sub
inc
xchg
in
mov
loope
add
out
xor
and
addr16
fistp
sbb
jge
scas
inc
fdiv
in
mov
or
sub
and
pop
push
pop
rcl
addr16
psadbw
(bad)
clc
loope
mov
(bad)
arpl
jge
bound
cmp
scas
push
mov
fnstenv
cli
cs
push
jbe
aas
mov
ins
sbb
stos
jmp
outs
shr
scas
pop
cmps
inc
mov
jno
hlt
scas
(bad)
or
cmp
cs
jp
scas
nop
fsubr
(bad)
and
lods
scas
xchg
pop
cli
jmp
lods
pop
mov
loopne
sub
data16
push
data16
dec
test
cmc
aam
dec
sub
lods
add
push
inc
add
outs
cmp
fnstsw
in
dec
cmp
xor
adc
and
lods
pusha
mov
push
push
ret
cmp
icebp
mov
jns
push
mov
into
add
xchg
fs
(bad)
inc
pop
sub
into
call
mov
fistp
fisubr
in
retf
sbb
mov
xor
jp
and
mov
mov
push
les
retf
lods
stos
das
je
test
aas
push
mov
aad
es
mov
pop
ficomp
cmps
mov
(bad)
loope
out
test
aaa
std
and
cmp
mov
std
shr
inc
in
(bad)
out
enter
fisubr
movs
repnz
out
test
mov
sbb
call
sub
add
inc
or
call
mov
shr
mov
or
es
shl
pop
mov
add
(bad)
dec
iret
xchg
cli
loopne
adc
cmp
dec
das
xor
ins
and
dec
mov
cmp
inc
mov
sub
adc
push
dec
call
mov
(bad)
sbb
pop
(bad)
jne
xchg
cmp
xlat
test
xor
std
mov
xor
paddq
cmps
lods
inc
loop
icebp
mov
add
push
fwait
dec
push
adc
fistp
icebp
fist
adc
cmp
cdq
xchg
test
out
sahf
pop
jo
iret
mov
adc
push
outs
xor
scas
int
cdq
dec
jns
mov
adc
sbb
int
cmp
(bad)
mov
ret
xlat
mov
and
push
inc
adc
loope
or
test
ror
and
ja
push
xor
iret
xor
pslld
sar
sub
cmc
push
sar
sbb
mov
mov
sbb
sub
sub
clc
dec
jmp
cmp
call
and
mov
stos
scas
cmp
xor
into
mov
xchg
out
fidiv
adc
scas
push
mov
out
xlat
pop
or
ret
push
leave
mov
mov
cmp
lods
or
inc
loope
mov
pop
xchg
and
mov
dec
fstp
stc
or
out
mov
mov
cmps
outs
xor
sbb
xor
in
arpl
inc
test
rcr
cdq
mov
inc
scas
push
jp
add
xlat
aaa
call
cmc
push
xor
stc
jge
lock
ss
push
rcr
fistp
inc
in
inc
push
(bad)
repnz
jns
inc
jo
fild
mov
ds
push
fidivr
fistp
xor
jbe
in
movs
pusha
mov
imul
aad
sub
sbb
data16
jae
cwde
mov
je
inc
cmp
stos
mov
push
not
test
out
mov
jmp
lea
mov
test
clc
lock
jl
(bad)
jle
les
mov
dec
push
rcr
mov
out
mov
dec
pop
das
cmp
jnp
push
xor
inc
adc
inc
fs
ss
mov
pop
pop
repnz
ret
or
popf
sub
gs
mov
sub
fwait
mov
pop
push
test
sub
adc
(bad)
or
or
sbb
fsub
mov
jp
movs
inc
popf
lods
push
add
leave
or
lea
int3
cld
movs
add
idiv
fistp
dec
mov
inc
je
in
test
or
cmc
xchg
cmp
pop
cmps
mov
jmp
mov
inc
fs
lods
idiv
sti
push
fwait
les
push
jae
mov
cmps
inc
dec
shl
add
xor
std
jge
ficom
inc
add
xor
mov
mov
outs
(bad)
dec
dec
jnp
xlat
inc
out
push
or
js
mov
retf
push
data16
xchg
ins
outs
mov
or
add
pop
pusha
lock
cmp
add
pop
push
pusha
pop
cmc
icebp
fild
xchg
ins
inc
lahf
inc
icebp
xchg
mov
sar
cmp
out
aam
les
fld
into
pop
cmp
jg
mov
mov
sub
test
ins
mov
jp
scas
add
pop
ficom
in
mov
pop
jp
test
inc
pusha
(bad)
call
sti
popf
inc
push
mov
in
push
push
(bad)
shl
mov
ins
or
fcomp
mov
and
adc
jge
add
push
mov
jl
les
psubsb
or
xor
pop
mov
xchg
(bad)
leave
icebp
mov
push
inc
fwait
(bad)
and
pop
sub
in
mov
daa
cmp
pop
and
arpl
add
mov
cmp
ins
pushf
mov
push
jmp
xchg
sbb
push
push
push
mov
xchg
aam
cs
cmps
jp
pop
in
inc
cdq
sahf
ds
loopne
and
lds
sbb
out
dec
jl
mov
xchg
adc
pop
mov
int3
retf
pop
inc
daa
mov
shl
inc
adc
into
adc
cld
xchg
pop
fcmovu
mov
mov
gs
daa
ss
dec
jecxz
xor
cs
mov
outs
in
lock
aaa
icebp
lds
xchg
dec
dec
mov
cmp
retf
dec
in
(bad)
xchg
lods
adc
sbb
sbb
adc
daa
inc
dec
add
jmp
jge
inc
mov
xchg
mov
outs
pop
test
adc
not
inc
and
rcr
daa
das
cmc
jno
call
push
shr
mov
sahf
fiadd
loop
(bad)
(bad)
lock
ror
jmp
xlat
mov
loop
dec
sar
mov
push
fwait
pop
push
sub
ja
cmps
push
cmp
retf
xor
jae
call
pop
fst
jbe
cwde
dec
xchg
jb
ss
push
repnz
mov
adc
fiadd
jle
pusha
mov
add
or
mov
mov
sub
mov
xor
jle
jg
push
mov
xchg
xor
push
ds
fsubrp
push
adc
pop
aad
mov
dec
fiadd
mov
jns
test
retf
div
mov
mov
inc
imul
das
pop
clc
and
jbe
aad
or
add
jp
popa
hlt
call
pushf
out
sti
sub
pop
push
cmc
leave
adc
pop
sub
hlt
cdq
fwait
pop
push
push
jg
adc
bswap
fist
sahf
or
mov
mov
jae
xlat
lds
and
jne
push
ss
into
imul
xor
mov
loopne
xor
stc
repz
lea
in
inc
(bad)
js
dec
jmp
mov
mov
or
cmps
sub
cmp
jle
and
adc
jmp
jnp
mov
jecxz
jbe
out
ret
int
mov
(bad)
sti
xchg
ret
shl
dec
call
mov
ficomp
cmp
addr16
push
sbb
out
sbb
fisttp
enter
sub
int3
inc
jno
dec
sub
sub
push
rcr
push
cmp
lods
push
cmp
or
push
cwde
mov
nop
aad
fwait
push
pusha
xor
pop
sbb
cmps
cwde
arpl
cmps
inc
push
lahf
out
imul
outs
cmp
and
fsubr
in
sbb
xchg
mov
iret
add
int
inc
cdq
imul
ror
inc
jo
pop
and
mov
sbb
rol
ret
cmc
jmp
faddp
sti
mov
mov
push
sub
add
loope
ror
rcr
cmp
stos
out
bound
push
and
push
jb
(bad)
xor
xor
sub
enter
add
push
mov
stos
dec
mov
hlt
xchg
and
int
jmp
retf
inc
scas
lds
stc
fmul
pop
push
fmulp
test
xor
jns
out
cmp
repnz
and
je
jp
sub
cmp
xchg
push
cmp
mov
lea
scas
or
mov
icebp
pop
push
add
fistp
mov
aaa
jnp
int
add
stos
(bad)
and
xchg
mov
popf
jp
in
xchg
dec
in
ins
outs
sub
scas
stos
mov
in
mov
xor
nop
cmp
femms
pop
aaa
loopne
lods
fwait
loope
inc
mov
arpl
push
or
mov
ins
ins
jb
in
out
xor
jnp
dec
pop
imul
es
cmp
loopne
fcomp
cmp
adc
(bad)
pop
test
in
xchg
clc
lods
xchg
xchg
fnstenv
and
xor
fisub
pop
fidivr
cmp
dec
inc
xchg
fiadd
xchg
mov
cmc
retf
std
inc
mov
xchg
and
movs
scas
xor
les
out
add
jmp
jbe
iret
push
jl
outs
fs
js
ja
imul
cld
in
out
ror
mov
out
inc
push
(bad)
mov
fdivr
xchg
lds
inc
inc
mov
sub
int3
sar
fisubr
mov
fcom
out
sbb
and
push
jbe
test
sub
fs
jo
ret
(bad)
sahf
bound
repnz
cld
cdq
push
fcmove
cli
adc
rol
or
pop
jg
jns
jecxz
icebp
pusha
dec
ss
mov
sub
xchg
dec
les
inc
stos
nop
jp
adc
mov
ins
jmp
cmp
data16
adc
fs
cmp
ds
xchg
imul
mov
inc
pop
(bad)
outs
pop
cmp
out
cmp
pop
sub
and
bndstx
mov
pop
into
rol
stos
mov
int
mov
rol
mov
clc
daa
push
xor
jge
leave
mov
ja
(bad)
loopne
adc
fbld
mov
ins
das
jecxz
sbb
sbb
sub
mov
hlt
cdq
arpl
(bad)
loopne
imul
xchg
adc
fisttp
rol
xchg
mov
sub
mov
mov
xchg
inc
xchg
mov
call
xlat
cmps
adc
ret
xchg
mov
arpl
inc
enter
fcom
js
out
add
xchg
cwde
xchg
or
jno
mul
lock
fidiv
xchg
xchg
outs
mov
or
lahf
popf
mov
loop
and
je
jl
xchg
aaa
sbb
mov
add
lods
imul
ins
imul
add
inc
inc
sbb
sbb
les
mov
xchg
addr16
cmp
aam
jle
add
xchg
mov
pop
cs
inc
mov
sub
(bad)
jno
jg
xor
imul
mov
cmp
out
daa
xchg
sbb
cli
sub
loopne
lock
call
stos
rol
fidiv
dec
add
cmp
repz
pushf
push
ss
not
push
xchg
add
mov
cwde
mov
xor
and
mov
lahf
add
lds
jecxz
adc
sbb
jb
mov
xchg
call
(bad)
lock
dec
es
std
aas
sub
in
fistp
push
mov
xchg
jne
daa
mov
push
cld
fidivr
out
mov
repnz
mov
xchg
hlt
inc
daa
or
jbe
sub
xchg
hlt
cmc
add
jne
jae
test
xchg
sbb
add
jmp
push
clc
ins
jns
xchg
popa
sub
add
adc
cmp
stc
scas
pop
xchg
imul
stos
es
jbe
pop
retf
clc
clc
add
ins
add
out
cwde
aam
stc
sahf
dec
stc
add
ja
arpl
xor
or
adc
movs
loope
mov
sub
xor
popf
add
mov
jo
push
cld
stc
or
pop
out
cmp
pop
sti
jge
fdivr
push
test
out
cmp
sbb
mov
mov
cmps
or
sbb
cmp
leave
cs
pusha
pop
jae
mov
cmps
push
(bad)
int3
(bad)
adc
xchg
iret
adc
clts
sbb
mov
popf
loope
jmp
push
in
les
fwait
mov
xor
sbb
mov
pop
pop
sub
adc
arpl
ret
repz
pop
neg
xchg
jp
dec
cmps
jne
lods
mov
into
retf
into
xchg
lods
div
fild
cli
cmps
pusha
movs
push
push
sub
cmp
shl
pop
lods
lea
das
push
sub
es
icebp
lea
mov
sub
xor
and
or
jge
imul
adc
and
mov
jle
movs
and
cwde
scas
adc
xor
add
sbb
pop
push
mov
in
or
test
pusha
cdq
inc
fwait
xchg
popf
ss
int
cmp
and
imul
(bad)
xor
sub
mov
xor
int
sub
pop
iret
jmp
retf
mov
out
sbb
add
mov
dec
jbe
adc
mov
lds
rcl
sub
outs
jno
lds
pavgb
jge
pop
mov
pop
stos
push
outs
dec
sbb
scas
sbb
inc
push
outs
or
dec
mov
jb
sub
pop
call
lds
xor
inc
add
inc
icebp
mov
dec
mov
(bad)
xchg
push
dec
jmp
push
cmp
(bad)
mov
cld
bound
test
adc
xor
or
xchg
nop
xor
sti
(bad)
hlt
inc
adc
jnp
xchg
sti
nop
pop
xor
jmp
(bad)
loopne
loopne
sub
retf
dec
sub
xchg
adc
cmc
mov
lods
arpl
xor
arpl
pop
add
fst
add
add
shr
pusha
pop
adc
inc
pop
fldcw
imul
pusha
adc
arpl
or
aam
ja
das
jmp
(bad)
fisubr
pusha
test
ins
std
cmp
sub
mov
or
sar
jno
repnz
stos
cmp
push
inc
add
stos
stos
sbb
sub
js
ret
popf
sahf
xchg
loope
sbb
pop
inc
push
lock
jle
fiadd
mov
and
jmp
mov
jne
test
div
fisub
dec
mov
aad
add
aas
mov
adc
sbb
xor
inc
sbb
aas
in
mov
scas
dec
add
add
mov
xchg
mov
xchg
aas
cmp
and
(bad)
xchg
hlt
lea
sbb
xchg
inc
(bad)
ficomp
sar
arpl
clc
cmp
rol
cmc
dec
cdq
sub
mov
xor
xor
sbb
xchg
mov
stos
sbb
dec
push
into
int
hlt
sub
xor
jmp
cmp
pop
sub
addr16
cwde
and
hlt
sar
stos
sbb
cmp
pop
cmc
xchg
jl
cwde
or
je
and
rcr
xchg
movs
add
adc
test
dec
adc
lea
push
jl
test
adc
repz
add
add
or
jmp
clc
add
cmc
test
in
jmp
mov
adc
xor
jl
neg
lds
jns
mov
iret
in
xor
xchg
lods
movs
xor
xor
push
pop
ret
icebp
mov
les
sbb
cdq
add
pusha
sub
nop
cmovb
xor
or
cmps
js
aad
daa
and
jae
push
sub
aas
(bad)
pop
stos
mov
fisttp
std
xchg
mov
jae
ret
repnz
adc
iret
in
sbb
or
dec
cmp
movs
nop
imul
xor
test
stc
xchg
xor
cmc
ins
das
or
in
sti
xchg
mov
in
mov
adc
xor
les
dec
retf
das
cs
and
(bad)
pop
or
int3
stos
jno
loopne
out
adc
sub
loope
add
adc
je
sbb
inc
str
dec
or
fimul
dec
into
jp
inc
jo
movs
dec
push
cli
jmp
and
stos
cmp
mov
inc
scas
imul
or
(bad)
jle
fidivr
das
xor
and
xchg
xchg
js
mov
mov
das
test
inc
lea
into
outs
sar
cmp
sbb
daa
sub
push
pop
lea
pop
pushf
xlat
scas
ret
sub
sub
int3
xor
pop
icebp
sbb
xchg
sbb
xor
imul
jns
mov
ds
inc
jae
les
fbld
pop
push
in
mov
out
sub
gs
in
dec
pushf
push
mov
in
out
adc
test
ror
pop
frndint
loope
ret
sub
cmp
movs
les
push
pop
mov
mov
inc
adc
xor
mov
lahf
push
(bad)
and
stos
sbb
int
fistp
inc
mov
test
push
sbb
cmp
dec
in
mov
imul
dec
xor
fidivr
cwde
(bad)
neg
lods
xchg
push
mov
jle
outs
minps
and
jnp
cld
and
mov
into
mov
test
pop
mov
pop
pop
sbb
dec
fisttp
mov
push
pop
std
and
daa
mov
loopne
cmp
push
lods
scas
rol
and
or
add
and
jns
cmps
popf
push
add
add
sbb
jae
jmp
push
and
pushf
jecxz
xchg
ret
out
imul
ds
dec
mov
pushf
xchg
or
jmp
jnp
xor
pop
retf
stos
jmp
div
cwde
arpl
jg
xor
cs
mov
pushf
adc
cmp
push
push
xchg
adc
xor
xchg
sbb
sub
xor
jl
mov
fidiv
sbb
sbb
or
loop
(bad)
(bad)
ret
rcr
mov
rcr
imul
cwde
in
aad
mov
div
in
push
add
ror
gs
in
test
inc
retf
jno
dec
aas
adc
sub
mov
dec
je
pop
(bad)
adc
and
add
inc
mov
ins
test
ja
mov
mov
imul
stos
xchg
jae
bound
stos
pop
xchg
inc
nop
andps
repz
and
and
in
aaa
sahf
je
mov
cmps
mov
add
cmc
loopne
bound
pop
jmp
and
add
test
imul
mov
jbe
or
jmp
sub
int
xchg
fild
add
popa
sbb
mov
cmc
ins
adc
aad
bound
fs
fsub
or
jmp
jb
retf
movs
gs
lea
addr16
inc
cwde
or
les
add
pop
test
imul
in
mov
sbb
and
mov
mov
sahf
lods
gs
scas
mov
sub
mov
int3
out
dec
jae
mov
scas
daa
test
dec
sbb
push
cmc
pop
fstp
jae
jne
cmp
and
inc
pop
retf
(bad)
pop
push
test
cli
shl
aad
cmps
mov
rcl
xchg
sahf
inc
popa
jb
ins
cmp
add
daa
pop
push
leave
push
push
call
mov
out
dec
mov
(bad)
mov
pop
stc
xchg
adc
bnd
mov
add
dec
mov
inc
jno
dec
mov
pop
aam
jg
fs
je
or
rol
(bad)
sbb
ret
jmp
gs
outs
push
inc
rol
wbinvd
xchg
xchg
cmp
sahf
xchg
mov
mov
neg
loopne
adc
out
ins
mov
pop
iret
movs
movs
and
sub
and
(bad)
or
test
push
movs
jge
push
je
jmp
mov
jl
cmp
gs
push
mov
jnp
push
test
ret
or
jmp
mov
xor
not
xchg
lods
jle
add
lahf
loopne
cdq
pop
clc
mov
fdiv
ror
in
add
push
aas
mov
jno
test
xor
xor
shr
out
mov
jecxz
in
std
mov
and
adc
xchg
jle
(bad)
pushf
scas
cmps
loopne
ja
mov
dec
push
jo
adc
xlat
inc
adc
addr16
or
cdq
out
in
cld
ins
scas
clc
int3
sbb
mov
cld
or
mov
aad
popa
addr16
xor
(bad)
cmps
inc
repz
push
sbb
les
cmp
dec
out
arpl
push
test
ret
test
test
fs
dec
pop
sti
mov
sub
jns
test
jo
mov
lods
or
mov
jbe
dec
scas
or
test
popf
jle
or
ins
adc
arpl
xchg
popf
popa
int
push
ret
inc
stos
cmp
ss
imul
inc
into
pop
xchg
mov
xor
jo
popa
loop
shr
stos
inc
aad
xor
dec
aad
(bad)
in
sbb
cmp
mov
nop
mov
test
inc
pop
inc
pop
ja
sub
cmovno
scas
sbb
and
fisttp
(bad)
movs
pop
adc
jecxz
ds
adc
cmp
test
push
mov
retf
xchg
mov
fbld
cmp
push
cmp
xor
push
(bad)
cmp
jmp
push
mov
fstp
inc
stos
push
ficomp
inc
push
push
and
xchg
push
inc
and
adc
push
xor
cs
sub
inc
mov
adc
mov
xor
pusha
fist
push
sbb
lds
inc
ss
or
mov
mov
pop
inc
retf
icebp
clc
sahf
jno
lahf
mov
fmul
dec
jge
jae
(bad)
mov
(bad)
aad
cmp
dec
bound
and
pop
push
cmps
lods
(bad)
jmp
call
adc
shl
inc
ficomp
xchg
sahf
pushf
sbb
lahf
ret
add
mov
repnz
out
movs
xor
data16
in
mov
xchg
push
fimul
rol
dec
cvtps2pd
inc
pop
mov
push
leave
cli
inc
lds
jns
and
inc
adc
ds
add
dec
adc
into
cmp
or
and
sbb
dec
or
push
int3
sti
push
add
mov
jne
and
inc
jge
sbb
push
xchg
or
mov
add
and
(bad)
dec
xor
ss
jge
addr16
call
repz
pop
test
xchg
push
jecxz
xor
pop
mov
ret
cmp
xor
enter
add
mov
or
xchg
aas
mov
fcmovnbe
mov
push
clc
pop
jo
mov
scas
pusha
mov
daa
das
pop
jno
jecxz
xor
lods
outs
aad
stc
(bad)
jnp
ins
inc
xchg
(bad)
fdivr
scas
stos
outs
bound
mov
mov
sub
dec
dec
jno
fsubr
mov
(bad)
mov
jno
mov
jbe
mov
cmp
mov
cdq
imul
or
test
jecxz
dec
sub
lock
sahf
mov
ret
test
ret
jge
es
ret
sbb
das
mov
xchg
(bad)
xor
sahf
int
and
mov
es
retf
jge
movs
emms
aad
test
push
in
mov
adc
xchg
and
cwde
xlat
jb
div
mov
push
dec
pushf
cmc
pop
enter
idiv
pop
(bad)
mov
inc
cmp
dec
or
fs
pop
les
ja
test
cwde
cmps
data16
mov
clc
out
inc
(bad)
call
(bad)
js
xor
call
cmps
inc
sub
shr
cmps
leave
fs
pop
jg
jge
pop
adc
mov
mov
icebp
fwait
or
out
cmp
xchg
inc
add
pushf
loopne
test
inc
loope
cmc
or
sub
dec
lea
loopne
retf
inc
ins
cmp
pop
addr16
and
lock
xor
cli
dec
scas
aas
test
shr
cmps
mov
mov
adc
mov
push
test
or
and
sub
mov
add
(bad)
mov
sbb
sti
lock
add
inc
shl
repnz
loop
jecxz
retf
int
add
pop
push
call
mov
mov
bound
rcl
xchg
ja
call
push
inc
sub
add
or
nop
std
sub
pop
mov
outs
(bad)
or
pop
aas
jle
jb
and
inc
mov
xor
hlt
les
mov
shl
repz
fcom
mov
pop
rcr
shl
mov
inc
outs
inc
push
repz
dec
call
test
call
call
add
pop
lods
mov
xchg
inc
sbb
sub
xchg
adc
push
(bad)
jnp
add
call
retf
mov
mov
test
fsub
pop
sbb
lods
in
sbb
pop
int3
fisubr
ficom
xchg
fwait
das
test
inc
(bad)
pop
jg
loopne
mov
fldenv
scas
cmp
cmp
jecxz
sbb
in
push
jne
dec
popa
adc
jmp
stos
or
movs
outs
cmp
bound
ins
je
mov
outs
mov
mov
xchg
inc
mov
hlt
(bad)
cli
mov
test
mov
fisttp
arpl
fst
in
jmp
jne
xchg
sbb
(bad)
mov
bound
xchg
push
jp
mov
cmps
add
jmp
push
ror
xor
and
fisttp
int
fsub
mov
push
bound
add
test
in
sbb
xchg
add
cld
sbb
push
inc
addr16
and
int3
es
jb
jbe
cmp
push
sbb
call
scas
xor
inc
pop
retf
in
add
jmp
push
call
outs
sbb
add
adc
les
pop
lods
movs
js
adc
pop
lfs
cmc
jg
adc
sub
pop
adc
movs
adc
dec
fcmovbe
ins
adc
aad
outs
pushf
jb
cmps
jp
into
ds
jne
pop
pop
retf
(bad)
dec
imul
xchg
ror
jmp
repnz
inc
lods
push
cmp
jl
cmp
mov
loope
sub
ja
add
test
js
push
pop
pop
add
ror
imul
jne
ss
sti
push
jne
cmps
jl
mov
js
mov
push
push
push
(bad)
cli
mov
popf
pop
aaa
dec
push
(bad)
xchg
repnz
fnstcw
ja
ja
loopne
inc
jl
lahf
mov
dec
das
ret
mov
(bad)
std
mov
fs
or
adc
xchg
jo
dec
(bad)
mov
clc
test
mov
add
psrld
jnp
es
in
push
(bad)
es
xor
push
mov
dec
push
arpl
les
lock
outs
dec
cmp
je
out
fst
add
sbb
fstp
hlt
inc
and
stc
jnp
xchg
add
fldcw
xchg
adc
fiadd
jmp
ret
loope
sub
push
jns
xor
mov
icebp
inc
xchg
jnp
pop
(bad)
pop
dec
xchg
push
sbb
fistp
dec
dec
loop
icebp
arpl
xchg
xchg
shl
mov
aas
in
stos
stos
jecxz
push
cld
xchg
nop
mov
popa
jle
dec
aaa
add
mov
repz
mov
loop
xchg
pop
ss
mov
hlt
add
leave
adc
cmp
in
inc
or
mov
call
dec
test
or
jo
jle
mov
adc
inc
(bad)
out
cmps
or
jo
dec
xchg
sub
hlt
mov
das
pop
imul
push
dec
push
fistp
or
fmul
repnz
jecxz
push
push
cmp
mov
aam
jmp
xor
jge
xchg
dec
sahf
push
cmc
fisubr
mov
fs
popa
test
sbb
adc
cli
in
sub
xchg
jp
loop
aaa
jmp
sub
mov
push
test
sub
cmp
xchg
inc
mov
sub
xchg
pushf
(bad)
mov
xor
xor
and
or
dec
dec
call
movntps
cmp
fisttp
push
or
jno
add
loopne
data16
lds
adc
inc
xchg
cmp
fnsave
lock
repnz
inc
loope
mov
cmp
ds
mov
jmp
fld
mov
div
hlt
lods
sahf
ss
sub
xchg
mov
adc
inc
jp
mov
lea
sar
(bad)
sbb
scas
fadd
shl
mov
xor
push
xor
add
popa
mov
or
sbb
or
fistp
sub
fist
or
bound
xchg
(bad)
mov
cmp
gs
psubsw
das
sub
xor
pop
pop
jg
mov
mov
(bad)
fidivr
test
popf
jmp
ins
jnp
pop
add
aaa
enter
pop
int
adc
mov
add
js
es
push
add
mov
adc
mov
adc
xor
cmp
(bad)
or
fsub
adc
call
jl
pop
push
and
push
fimul
push
call
loopne
icebp
mov
xchg
inc
mov
lds
jl
mov
xchg
add
push
mov
in
pop
inc
push
lods
jno
popa
js
xchg
ins
and
push
adc
fisub
enter
dec
popa
add
jb
mov
sub
lds
jge
aaa
push
icebp
frstor
in
xchg
shl
or
or
aaa
adc
adc
jmp
jb
popa
pcmpgtw
les
add
mov
jg
dec
imul
jae
mov
xchg
mov
cmc
or
ds
mov
test
scas
xor
or
into
fs
jl
adc
xchg
cld
and
pop
nop
repz
pop
adc
or
pushf
jge
push
outs
ins
test
and
pop
cwde
cmp
pop
stc
shl
jbe
and
and
dec
aas
cmp
(bad)
aad
inc
lahf
dec
mov
fnstsw
mov
pusha
mov
jp
pop
jl
in
outs
test
jbe
adc
push
jmp
in
cli
dec
dec
setnp
pop
sub
xchg
not
push
mov
dec
je
shl
in
jge
jb
iret
dec
loop
and
bound
shl
into
into
mov
repz
movs
mov
cli
mov
loopne
int3
ret
aas
out
xchg
inc
cdq
and
mov
popw
pop
fistp
fs
gs
sti
cmp
stos
inc
test
and
mov
jno
lds
add
add
mov
mov
xor
mov
jb
add
nop
pop
imul
jg
cmp
movs
inc
jl
call
xor
sar
stos
adc
retf
or
shl
dec
inc
fscale
mov
int3
mov
inc
mov
fs
sbb
inc
and
push
stos
sbb
xchg
cmc
or
adc
into
int
out
add
movs
push
mov
(bad)
push
mov
inc
jnp
scas
sbb
les
leave
lods
inc
lea
cmps
mov
clc
or
pop
push
sbb
ret
cmp
add
xchg
daa
mov
xchg
movs
mov
dec
mov
jno
ins
xor
adc
(bad)
stos
lods
push
das
xor
aad
push
jp
xchg
and
rcl
ja
cmps
cmc
std
sbb
or
fstp
pop
test
cmp
push
adc
add
pop
sub
add
imul
xchg
jo
out
inc
cmp
call
mov
mov
push
mov
enter
and
sub
lods
test
bound
sbb
jmp
outs
pushf
movs
sti
pop
xchg
dec
sbb
es
pusha
sub
cmp
jb
jae
mov
sbb
cmps
imul
gs
in
int
jge
(bad)
aam
cmp
pop
sub
test
prefetchwt1
movs
sti
fsub
mov
fisttp
cmp
daa
pop
jmp
push
out
das
dec
sbb
mov
push
add
out
adc
mov
in
test
fbstp
inc
pop
fild
lods
or
ins
aam
repnz
clc
and
xor
adc
rol
or
mov
gs
sar
std
xchg
sbb
xchg
jl
fdiv
fimul
ins
aam
push
push
push
push
test
aam
xchg
jae
dec
or
push
sub
pop
xor
dec
and
out
cmp
jecxz
mov
pop
test
xchg
push
int3
add
outs
jne
pusha
stos
ficomp
int
xchg
xor
popf
repz
dec
and
cmp
xchg
or
or
sbb
adc
mov
les
popa
xlat
loopne
push
loope
mov
int3
aad
cmp
ror
fld
adc
shl
pop
adc
lods
sub
stos
dec
and
aam
cmp
pop
xor
inc
(bad)
(bad)
dec
mov
pop
out
xor
lds
(bad)
or
inc
dec
jne
loop
je
add
push
gs
mov
je
pusha
call
and
imul
mov
repz
and
push
fidiv
pop
sbb
jno
or
pop
mov
dec
mov
add
mov
retf
dec
and
cmp
js
scas
test
jns
imul
repnz
push
xchg
mov
popf
loop
xor
adc
dec
(bad)
sbb
and
ret
push
sbb
or
aaa
xor
fsub
cmps
and
dec
xor
je
adc
(bad)
js
inc
mov
xchg
xor
mov
out
lods
mov
mov
out
loop
popa
push
sub
pop
xor
stos
dec
push
icebp
jg
mov
dec
cmp
sub
add
cli
sub
call
loop
in
dec
cli
test
sbb
gs
inc
inc
imul
cli
cmp
sti
mov
inc
mov
aas
daa
mov
nop
iret
popa
icebp
jge
jmp
inc
shr
(bad)
sbb
test
and
fs
sub
add
out
movs
sub
iret
or
imul
bound
stc
nop
movs
loopne
jo
call
ret
or
pop
(bad)
iret
add
sar
add
ins
push
add
lods
push
jno
cmp
ficomp
(bad)
fbstp
dec
adc
add
aaa
jb
and
sahf
mov
(bad)
xlat
jle
jbe
push
out
cmps
pop
out
sub
dec
ss
lods
mov
out
jg
pop
fs
or
pop
adc
(bad)
out
pop
bound
test
jae
(bad)
stos
aad
outs
pusha
dec
push
pop
idiv
jmp
mov
fild
stos
mov
cld
loop
inc
xchg
jns
repnz
jl
stos
fisttp
fld
(bad)
push
iret
arpl
or
in
gs
pushf
in
jle
sbb
xchg
mov
ret
mov
xchg
or
dec
push
sbb
xchg
xchg
inc
mov
pushf
sbb
mov
repnz
xor
and
push
push
fsubr
repnz
pop
jge
loope
xchg
ja
fld
and
fistp
fld
fisttp
mov
xor
jb
add
mov
pusha
mov
les
sbb
lahf
xor
repnz
jbe
call
jl
pushf
cmp
loopne
dec
shr
mov
rol
ss
ins
icebp
mov
mov
aad
xchg
aaa
push
or
into
lds
mov
cmp
add
mov
xor
sub
and
adc
mov
add
and
add
into
fstp
outs
int3
mov
jo
fbstp
lods
and
mov
aas
aas
mov
jle
jae
inc
push
ins
push
push
adc
push
jge
cld
sub
repz
and
xchg
push
xchg
and
mov
sar
not
out
call
inc
cmp
or
(bad)
or
pop
sbb
pop
xchg
inc
or
shl
add
adc
(bad)
jg
stos
ret
lods
push
in
mov
mov
cmc
out
int3
lock
scas
outs
or
pop
sar
imul
xchg
mov
and
sub
fs
repz
xchg
(bad)
jg
stos
sub
cli
pusha
inc
mov
inc
mov
mov
(bad)
popf
out
jl
pop
rcl
test
add
aaa
push
jp
pop
dec
cwde
mov
inc
mov
xchg
movs
iret
cmp
ins
fist
pop
sub
cmp
push
sbb
std
mov
mov
aad
call
or
inc
enter
fimul
jg
aas
test
sbb
push
inc
in
shl
pop
out
inc
hlt
lea
xchg
xor
sub
inc
mov
fnstcw
jb
leave
xchg
add
dec
mov
cmp
inc
adc
or
das
arpl
push
and
out
dec
inc
ror
add
out
sbb
repnz
push
shl
aam
or
into
stc
pop
call
mov
jge
push
or
inc
mov
ret
mov
(bad)
xlat
jo
dec
lahf
jg
int3
jo
sub
lods
pop
(bad)
sbb
mov
mov
imul
div
jno
mov
imul
jno
cli
or
fist
es
inc
sub
scas
cmp
mov
ds
cmps
mov
sub
dec
jnp
adc
push
xlat
sub
jg
push
movs
dec
pop
aad
dec
test
fwait
jg
inc
xor
sub
(bad)
cmc
mov
pop
mov
dec
sub
mov
pop
jmp
int3
push
(bad)
push
lahf
or
mov
mov
ss
push
jg
inc
lods
dec
mov
gs
cwde
xor
int3
pop
shr
rol
(bad)
(bad)
(bad)
std
mov
mov
js
sti
push
fcmovu
sbb
jo
add
xchg
into
cdq
mov
test
nop
inc
xor
retf
mov
dec
in
pop
and
push
inc
inc
mov
xor
aas
mov
mov
ret
lea
cmp
mov
mov
jns
std
xor
(bad)
mov
sahf
jle
(bad)
repz
cs
add
xchg
sbb
outs
xchg
xchg
shr
outs
sar
and
mov
sub
sub
push
xor
and
in
inc
repz
and
mov
std
int
in
sbb
test
mov
push
mov
clc
test
clc
cli
pop
lahf
sub
not
pop
adc
pop
mov
mov
popf
mov
xchg
add
mov
jae
sbb
(bad)
(bad)
or
pop
add
(bad)
movs
sub
xchg
adc
and
out
jmp
inc
xchg
sahf
sbb
out
pop
sbb
das
out
inc
test
ret
push
xchg
cdq
ja
rol
fiadd
(bad)
sbb
loopne
(bad)
nop
sub
jnp
push
push
movs
loopne
dec
fcom
out
aas
jne
mov
adc
adc
pop
mov
(bad)
fistp
aad
lock
mov
mov
pusha
movs
rcr
shl
mov
stos
and
shl
fisub
into
ret
xchg
mov
daa
or
popa
imul
pushf
inc
(bad)
push
push
in
clc
mov
pop
push
or
out
xor
and
pop
mov
mov
aam
movs
int3
add
inc
cwde
out
in
xchg
int
cmp
mov
rcr
and
(bad)
and
pop
push
stc
inc
xchg
hlt
inc
mov
dec
sbb
add
stc
fs
js
(bad)
jnp
mov
push
sti
hlt
dec
loopne
mov
cmp
retf
mov
sub
sbb
dec
push
jecxz
sbb
xor
jae
in
jbe
sbb
in
mov
pop
inc
pop
loop
and
jno
and
jo
pop
int
into
sub
xlat
fadd
popf
cwde
or
leave
mov
nop
movs
push
or
push
fdiv
xor
mov
add
push
pop
pop
sub
push
mov
inc
repz
cmp
ret
pop
test
loope
mov
lock
ror
push
push
add
fimul
lds
out
mov
test
(bad)
div
ret
xor
repnz
xor
push
pop
pushf
or
addr16
jae
out
pop
mov
dec
ficomp
inc
enter
sahf
shr
(bad)
mov
jmp
sbb
sti
addr16
mov
int
or
inc
add
pop
cmp
out
mov
ins
cmp
ror
ins
add
mov
cld
mov
sbb
push
lods
sar
push
js
iret
mov
rcr
mov
pop
adc
and
movs
popf
fist
aam
iret
scas
add
cmp
xor
iret
push
push
or
push
inc
(bad)
mov
fisubr
fidivr
push
cmp
xchg
idiv
xor
in
cs
js
push
lds
ins
pushf
int
inc
dec
push
jae
mov
sahf
sbb
neg
xor
ret
mov
sbb
fcmovnbe
add
aad
mov
cmp
ret
mov
sbb
sub
pushf
sbb
mov
rol
xor
loopne
jmp
enter
enter
push
xor
sahf
jno
pop
fwait
push
lods
push
js
adc
push
pop
out
sbb
jmp
test
adc
test
adc
pop
int
push
cmp
ret
stc
ret
mov
push
sub
or
pop
ins
xor
out
adc
lods
pop
sub
(bad)
and
sbb
cmp
push
xchg
cmps
shr
out
push
daa
xor
pop
dec
lahf
repnz
(bad)
inc
mov
jae
push
jl
aas
fnsave
xchg
sub
adc
push
xor
inc
jmp
sbb
add
jbe
dec
nop
pop
in
nop
outs
sbb
in
rcl
inc
out
mov
inc
outs
jecxz
push
gs
adc
xchg
pop
mov
mov
dec
mov
(bad)
in
(bad)
out
call
in
add
pop
dec
and
ds
dec
sub
mul
jmp
push
mov
push
(bad)
cmp
pushf
sub
add
cli
mov
adc
scas
mov
into
sub
(bad)
xchg
inc
arpl
xchg
cmp
(bad)
es
jb
cmp
jns
stc
gs
xchg
test
jnp
sub
stc
or
popa
clc
imul
cwde
ins
or
bound
mov
and
fild
mov
mov
jns
or
cmp
pop
jmp
push
mov
clc
push
aas
rcl
sub
fcomp
(bad)
std
lds
and
cmp
push
mov
fadd
adc
aas
jge
xor
cmp
scas
add
cmp
cdq
mov
push
repnz
adc
pop
mov
pcmpeqb
push
cmp
(bad)
dec
dec
nop
xchg
in
sti
cmc
mov
(bad)
mov
inc
aaa
mov
fst
cld
(bad)
jae
je
gs
je
stos
lods
adc
int3
xlat
ja
and
mov
push
mov
mov
push
mov
ins
enter
xchg
jne
push
(bad)
fild
mov
xchg
mov
sbb
sti
xor
sbb
add
popa
aam
out
dec
(bad)
jb
xlat
aaa
adc
or
mov
out
inc
dec
xchg
dec
xchg
inc
adc
in
jnp
dec
imul
xor
movs
cmp
cmp
retf
sub
lea
xchg
jge
add
and
rcl
in
push
inc
sub
add
std
xor
cmps
jmp
fsubr
jle
inc
push
mov
test
jnp
add
(bad)
aad
push
push
sub
imul
sahf
sbb
repz
jge
dec
retf
push
aaa
mov
test
xor
mov
(bad)
pop
jle
jp
daa
inc
(bad)
(bad)
cmc
(bad)
xor
loop
xchg
inc
out
and
ins
repz
dec
aaa
js
push
jecxz
or
cmp
sub
jb
adc
fimul
sub
fsubr
fcmovb
call
test
sub
pop
ins
cmp
xor
push
imul
jo
adc
dec
jmp
ss
call
rcl
xchg
out
jno
cmp
cmp
adc
neg
sbb
out
cmp
xchg
outs
es
xlat
stos
inc
je
add
pop
test
push
cmc
inc
iret
lea
push
cmc
outs
ret
xchg
arpl
outs
gs
js
push
in
sub
bswap
dec
and
popf
inc
xlat
and
pop
pop
cmps
jmp
xchg
sar
or
adc
cmp
mov
icebp
movs
pop
movs
sar
jb
shr
jnp
ss
mul
popa
enter
sub
push
sbb
pusha
aad
and
fild
daa
movs
mov
push
mov
ror
mov
jmp
stos
mov
add
out
adc
and
sbb
sub
adc
xor
adc
es
add
cmp
jne
shl
push
mov
push
js
and
jb
leave
in
pop
lahf
imul
cmps
(bad)
ror
std
push
pusha
arpl
mov
jmp
add
aam
inc
(bad)
pusha
loop
sub
jg
inc
cmp
sub
imul
sbb
jo
pop
in
rcr
into
inc
call
jne
cmps
jecxz
cs
adc
fdiv
push
pusha
add
adc
retf
bswap
ds
punpcklbw
pop
out
and
out
pop
lock
(bad)
stc
mov
mov
jmp
scas
sbb
aad
retf
pop
test
inc
js
mov
jle
mov
(bad)
retf
xor
outs
jmp
and
clc
stc
sub
lahf
add
not
int3
ror
jg
call
jbe
(bad)
(bad)
cli
sbb
cmp
fisttp
mov
movs
daa
xor
jbe
and
dec
cmps
mov
cmp
xchg
mov
sbb
inc
sub
cmp
xchg
mov
push
out
lock
mov
loop
add
out
icebp
add
outs
inc
fdivr
pop
fwait
iret
test
xor
clc
out
sbb
icebp
cmp
push
inc
push
iret
sbb
mov
cwde
sub
dec
mov
xlat
cld
jno
aas
popa
cs
jl
jmp
sub
neg
les
sbb
scas
sub
dec
xchg
pop
push
pusha
out
repnz
in
push
in
inc
or
mov
pop
cdq
xchg
aad
xchg
xor
push
and
les
mov
adc
lahf
add
inc
adc
cs
hlt
sbb
mov
test
jmp
mov
imul
and
push
leave
outs
sbb
mov
movs
mov
add
cmovge
jmp
daa
aas
lea
lea
into
mov
mov
loopne
jle
sbb
shl
pop
ror
dec
add
push
or
sbb
xor
inc
sbb
push
test
pop
pop
pop
mov
sbb
sub
adc
in
push
push
lea
pop
inc
mov
or
xor
mov
test
fidivr
pop
lock
(bad)
mov
adc
sbb
ret
mov
scas
push
inc
xor
retf
inc
jmp
ss
xchg
shl
jecxz
and
pusha
loop
sbb
shr
mov
jb
sbb
mov
les
sbb
ret
dec
xor
retf
xor
mov
addr16
lds
cld
daa
adc
xlat
(bad)
push
scas
out
xchg
retf
movs
mov
out
adc
xchg
icebp
and
xchg
sar
ds
std
(bad)
xchg
sub
inc
stc
ds
test
mov
je
adc
gs
cdq
jne
ja
push
in
mov
pop
dec
or
push
fs
loop
in
mov
js
and
and
outs
pushf
aaa
jnp
mov
in
test
jne
sub
fdiv
mov
add
cmp
les
retf
cmp
repnz
pop
dec
add
fsubr
cmc
cmp
and
xor
mov
and
add
adc
imul
add
cmp
pop
mov
push
bound
neg
dec
(bad)
inc
inc
imul
test
adc
loop
retf
mov
cmp
ins
and
pop
fldcw
xchg
(bad)
daa
add
inc
and
stc
inc
fisttp
shr
outs
gs
jbe
rol
fs
sbb
xchg
out
pop
inc
pusha
test
fs
xchg
in
cs
or
(bad)
arpl
sub
aad
es
xchg
push
(bad)
leave
(bad)
and
and
leave
movs
adc
pop
mov
fld
push
fidivr
es
jecxz
push
adc
dec
xor
mov
jmp
stc
mov
ja
mov
scas
out
jmp
and
dec
pop
mov
or
mov
inc
lahf
ret
dec
mov
add
and
push
mov
sub
js
adc
stos
loopne
enter
add
and
or
out
pusha
outs
adc
fsubr
aam
or
icebp
popf
mov
dec
or
adc
inc
pop
push
cmps
sbb
lds
dec
xor
jp
jecxz
push
repnz
jmp
pop
iret
sbb
icebp
(bad)
fnstcw
inc
test
jmp
and
adc
aam
je
mov
scas
mov
fisttp
jo
je
adc
mov
(bad)
out
mov
inc
mov
or
or
inc
call
cmps
lods
push
adc
aad
lods
mov
(bad)
fmul
(bad)
mov
mov
std
loope
stos
fwait
int3
repnz
hlt
enter
sbb
inc
call
cmp
aaa
push
es
inc
movs
retf
lea
(bad)
pop
mov
adc
and
stos
push
dec
call
ret
rol
(bad)
fdiv
std
mov
mov
push
(bad)
sti
xor
ret
pop
cmp
mov
or
push
sahf
rol
int3
das
test
adc
mov
jno
or
dec
icebp
fwait
in
ret
mov
mul
jecxz
push
push
retf
fdivr
(bad)
push
das
jmp
inc
lea
arpl
movs
faddp
es
test
rcr
aad
(bad)
imul
iret
dec
test
push
jo
cdq
push
enterw
adc
int3
jnp
movs
cmpxchg
out
fmul
lods
pop
add
adc
adc
inc
std
mov
dec
xchg
inc
cwde
cmpxchg
sahf
xchg
mov
xor
cmp
mov
icebp
sub
cdq
(bad)
cld
pusha
int
adc
mov
sub
jecxz
or
jae
fstp
adc
mov
lods
add
jnp
dec
int3
pop
xchg
jmp
repz
push
adc
rcr
adc
lock
mov
xor
adc
jae
ret
test
leave
lahf
fmul
xor
sahf
xor
les
es
leave
jle
mov
sub
test
sti
push
sbb
shl
xchg
pop
adc
sub
adc
(bad)
dec
call
(bad)
adc
into
mov
inc
sbb
xor
loop
jae
add
xor
cmps
lds
cmp
inc
cmp
inc
leave
in
push
push
xchg
loope
sub
inc
xchg
add
out
leave
(bad)
mov
add
js
dec
adc
in
jge
leave
pop
xchg
ret
frstor
out
int
push
xchg
xchg
test
inc
mov
jmp
fmul
push
sbb
loopne
or
inc
pop
add
mov
jno
dec
js
mov
jns
stos
add
hlt
mov
movs
push
add
std
es
out
pushf
loope
scas
mov
das
test
cmp
test
ins
or
mov
xor
(bad)
into
nop
mov
dec
outs
scas
(bad)
retf
outs
inc
push
mov
or
pop
xchg
add
stos
test
ret
movs
or
push
push
add
and
jmp
call
mov
inc
sbb
push
push
xor
fidiv
sbb
sub
call
bound
fsub
clc
inc
add
iret
pop
(bad)
or
jae
jecxz
je
int
mul
xor
jge
lahf
push
xchg
pop
or
int
ret
cmps
cld
inc
jl
mov
mov
mov
pushf
push
imul
idiv
mov
dec
mov
repnz
lds
repz
inc
sbb
xlat
popa
popa
push
cmps
test
pop
inc
or
xor
inc
jl
adc
dec
mov
aad
mov
je
repnz
test
cmps
jmp
fs
sub
sbb
out
add
mov
push
adc
cs
add
rol
outs
sub
(bad)
mov
add
or
mov
and
dec
jg
sti
xchg
push
lods
out
movs
sub
add
mov
mov
add
and
in
sbb
jne
leave
stc
fimul
jno
xchg
jp
mov
dec
jle
pop
sbb
cli
fidiv
add
mov
jnp
lahf
push
(bad)
cld
or
adc
mov
or
fcom
or
pop
call
cmp
sbb
ja
lea
out
sbb
sbb
ret
sbb
fldcw
push
xor
mov
fucomip
inc
arpl
or
sbb
popa
call
sbb
sbb
int
mov
jns
dec
jno
rcr
sbb
fcomp
push
push
outs
and
pop
sti
push
test
out
fldenv
pop
jecxz
(bad)
and
cli
fwait
(bad)
addr16
shr
jno
sub
cmp
jge
idiv
sub
mov
outs
dec
mov
movs
shr
lahf
sub
cwde
mov
and
or
sbb
xchg
and
add
fs
mov
mov
inc
pop
sti
in
ss
pusha
sub
jne
faddp
mov
push
cmc
sub
jne
in
pop
bound
dec
out
and
imul
mov
mov
fild
dec
adc
and
lods
push
xchg
sub
xchg
movq
jecxz
test
in
dec
sar
(bad)
rcl
cmc
(bad)
push
push
gs
dec
push
ret
sbb
and
retf
ror
add
cmp
adc
(bad)
push
push
fsubrp
mov
fwait
jp
test
sbb
test
mov
pop
jae
sti
mov
add
xchg
retf
sbb
jmp
mov
mov
cmc
into
push
sub
push
push
add
inc
fsub
out
jae
arpl
fwait
shr
xor
mov
inc
push
xorps
sub
sub
sbb
inc
xchg
sbb
dec
xor
addr16
retf
out
(bad)
bound
or
dec
pop
loopne
dec
adc
in
addr16
call
adc
daa
ja
cmp
ret
gs
das
out
sub
push
push
add
and
mov
and
jo
pop
mov
xchg
imul
stos
sub
pop
out
mov
cmp
mov
sbb
inc
cmps
adc
fcomp
sbb
popa
jge
in
or
test
ret
ins
ins
xchg
pop
mov
cmp
or
cmp
cmc
cmp
lods
mov
cmp
mov
ret
cmps
inc
cmc
mov
sub
xor
or
add
dec
sbb
out
rcl
rol
movs
adc
and
inc
fwait
movs
dec
cli
and
inc
bound
mov
idiv
jp
mov
add
push
xchg
in
cmp
lods
and
jmp
xor
add
push
jmp
clts
xor
xor
pop
sbb
repz
test
sti
pop
jmp
aad
push
arpl
mov
out
js
xchg
adc
or
neg
movs
data16
mov
mov
jl
outs
lds
aas
sbb
ret
push
mov
dec
jne
(bad)
fwait
and
mov
retf
or
inc
inc
stos
cmp
sbb
jg
sbb
fbld
push
mov
cmp
mov
dec
out
xchg
mov
popf
mov
mov
push
(bad)
pop
test
xchg
stos
int3
push
fsub
sub
pop
fucomip
out
iret
sub
xchg
mov
in
aad
and
cs
cwde
inc
out
jmp
fwait
retf
out
dec
es
ds
or
xor
mov
rcl
pusha
loope
adc
gs
call
xchg
lods
push
jmp
std
out
stc
ins
and
xor
inc
cmps
ficom
xchg
mov
mov
imul
leave
shr
aaa
pop
cmps
xchg
or
mov
(bad)
imul
add
(bad)
jl
lds
push
and
out
fwait
nop
mov
mov
xchg
in
add
adc
pop
dec
sbb
in
mov
ins
icebp
test
fstp
(bad)
adc
inc
mov
xchg
mov
lods
or
cmp
retf
mov
or
test
xchg
jp
sbb
mov
scas
(bad)
and
add
jl
cmp
cmc
in
fild
ss
sbb
(bad)
nop
add
and
out
loop
pop
ds
gs
jmp
mov
pop
into
sbb
inc
push
ret
or
push
in
pushf
out
adc
cli
int3
or
retf
cmc
mov
cmp
fld
mov
cmp
enter
ret
cdq
and
ins
repz
sub
jmp
dec
adc
jb
lea
inc
add
pop
pop
aas
xchg
xchg
icebp
jl
inc
scas
mov
frstor
inc
push
jl
adc
inc
pushf
cmps
stos
fisubr
sub
movs
cmp
mov
jmp
frstor
push
and
cwde
pop
repz
pop
sbb
ins
push
sub
fbstp
sub
push
or
neg
jecxz
ds
adc
jae
in
(bad)
aad
(bad)
mov
outs
adc
in
(bad)
stos
je
cli
stos
ds
imul
in
test
xchg
jg
push
in
add
daa
xor
std
mov
jge
fistp
adc
mov
icebp
cmps
inc
jp
xor
adc
mov
ret
mov
xchg
mov
xor
mov
and
stos
sbb
daa
xchg
jecxz
rcr
cmps
mov
imul
cmp
push
mov
jnp
mov
sbb
stos
es
mov
and
ja
mov
or
jle
popa
dec
mov
push
inc
xor
movs
in
scas
cs
add
retf
aad
or
inc
pop
adc
std
iret
lea
mov
fnstenv
les
add
pusha
mov
retf
leave
xchg
pop
mov
dec
repz
(bad)
(bad)
out
fld
dec
retf
arpl
inc
add
test
sti
test
mov
cli
call
mov
cli
loopne
(bad)
sub
mov
push
sub
test
jg
mov
sbb
add
aad
sub
and
loopne
cmp
in
sahf
xchg
and
call
fcomp
test
push
retf
(bad)
fisttp
adc
mov
mov
cmp
test
inc
mov
aaa
sbb
ss
push
sbb
outs
inc
pop
retf
pop
adc
xchg
(bad)
dec
jae
ret
ja
dec
in
xor
jp
mov
repz
fbstp
xchg
ss
ror
nop
dec
push
mov
test
push
rol
dec
(bad)
pop
sbb
jmp
adc
sqrtps
mov
sbb
mov
std
movs
sahf
cld
in
out
jnp
nop
adc
dec
dec
dec
(bad)
call
pop
or
mov
aad
in
xchg
cmp
cmp
std
out
xlat
int3
bound
pop
movs
stc
mov
pop
fwait
mov
mov
jns
cmc
rol
add
js
fist
imul
mov
int
cmps
mov
pop
xchg
and
loope
loopne
popa
pop
add
mov
cwde
std
and
jne
ror
jg
adc
pusha
nop
aaa
fild
(bad)
ja
sub
mov
push
out
stos
push
jno
mov
and
mov
rcl
adc
lods
ja
jmp
adc
fucomip
adc
inc
or
push
sub
daa
mov
repnz
dec
xchg
adc
inc
inc
test
push
loop
cmp
lods
je
and
sbb
mov
jno
sub
dec
jo
data16
push
pop
sub
test
leave
das
mov
adc
sub
xor
fild
xchg
pop
stos
es
pop
mov
inc
(bad)
retf
add
nop
add
jne
ret
mov
sar
mov
inc
push
and
stc
jmp
mov
jg
xchg
cmp
mov
aam
cld
mov
adc
dec
in
lea
inc
jle
aaa
aas
dec
mov
sub
pop
dec
adc
lahf
sbb
xor
int
mov
rcr
mov
xor
clc
cmp
inc
sbb
(bad)
js
sbb
or
pop
or
sub
xor
stc
stos
clc
cwde
in
cmp
sbb
inc
div
sbb
fidiv
imul
jae
xchg
leave
ds
les
pusha
ret
adc
jb
cwde
mov
jmp
aaa
std
pop
sbb
shl
xrelease
jo
in
cmp
test
inc
dec
leave
jmp
dec
mov
mov
sbb
mul
mov
jg
or
inc
inc
jns
cmp
test
retf
ret
mov
push
xchg
inc
bound
pop
xchg
jmp
pop
mov
jecxz
shl
js
lahf
cli
in
test
repnz
ds
jle
aaa
jb
mov
dec
xchg
adc
mov
dec
mov
cmp
inc
aad
inc
or
enter
test
inc
xor
xor
or
xor
bound
jns
xor
xchg
jecxz
add
add
adc
xchg
pop
out
mov
mov
scas
ret
test
xor
inc
cmp
or
cld
pop
xor
push
xchg
push
stos
jp
(bad)
neg
aaa
in
mov
ret
stc
and
repz
in
xor
ins
cmc
dec
retf
cs
push
and
mov
movs
add
aad
mov
or
leave
adc
jecxz
jmp
mov
arpl
fadd
push
lock
jo
ins
dec
xlat
test
scas
repz
xchg
mov
mov
movs
adc
cmps
je
jmp
(bad)
mov
dec
fld
cld
push
rcr
je
and
es
adc
in
inc
stos
cmps
add
jmp
inc
cmp
add
push
push
and
arpl
les
cmp
mov
fdivp
pop
pcmpgtb
lahf
retf
dec
mov
add
iret
stos
adc
cmp
ret
push
inc
stc
loope
cld
adc
pop
jmp
mov
mov
add
jp
fnstsw
pop
in
ret
pop
leave
sti
(bad)
mov
aad
cmc
aad
mov
test
and
dec
rcr
loop
dec
iret
jae
and
sbb
in
(bad)
mov
pushf
mov
push
or
push
mov
add
lods
sbb
push
jg
shr
jle
loopne
pop
xchg
loopne
xchg
lea
inc
outs
mov
pop
sbb
pop
les
call
cli
fild
inc
cli
movs
inc
int
and
aaa
and
test
cmp
cmp
adc
or
sub
push
mov
bound
pop
sti
stos
cmp
push
add
(bad)
lea
cli
pop
sar
popa
scas
test
loop
inc
xor
add
mov
xchg
jg
loop
cmp
ficomp
xor
jo
sbb
into
dec
cmp
push
lahf
jle
scas
cmp
push
dec
ins
sahf
fcom
mov
and
pop
fimul
movs
xchg
addr16
cmp
fidivr
cmp
(bad)
sti
adc
xchg
pop
ror
je
imul
sbb
jno
jnp
(bad)
jmp
push
mov
sbb
js
pop
pop
stos
push
mov
lock
adc
adc
cmps
call
pop
mov
int3
(bad)
jmp
sub
adc
xchg
in
xchg
sub
out
or
dec
xor
and
jbe
sub
jno
ret
aas
or
jmp
cmps
pop
lods
sbb
cmp
out
nop
and
or
ret
pop
add
inc
sub
mov
xchg
xor
bound
mov
add
mov
mov
push
and
repnz
retf
retf
xchg
dec
add
or
out
pop
inc
xlat
xor
pop
ins
and
cmc
mov
into
cwde
in
add
add
sbb
std
pop
not
test
fisub
dec
xchg
add
xchg
loopne
call
jg
dec
fiadd
out
or
xchg
imul
iret
adc
(bad)
mov
es
pop
test
shl
(bad)
ins
jl
aaa
das
inc
ret
mov
adc
mov
add
lock
dec
lock
cmovs
sub
aas
cmp
fdivr
jl
(bad)
in
ds
sti
xchg
inc
push
pop
xor
xchg
mov
and
jns
pushf
jmp
out
mov
inc
or
jb
mov
enter
xor
ds
push
or
daa
pop
sbb
in
cdq
in
pusha
and
adc
arpl
loopne
loopne
jp
clc
fdiv
ror
mov
push
add
test
aaa
sbb
fdivp
ret
cld
imul
cld
lahf
sbb
test
retf
movs
push
aad
(bad)
add
sbb
in
and
inc
push
call
int
or
mov
cmp
push
add
gs
mov
and
jo
dec
hlt
or
loop
or
inc
(bad)
idiv
(bad)
leave
push
call
mov
pop
test
sbb
add
fs
pop
and
cmps
sbb
data16
mov
je
mov
(bad)
mov
fistp
loopne
adc
push
ret
iret
add
adc
mov
jnp
jmp
push
add
xlat
mov
xor
dec
xchg
inc
in
ins
or
push
and
jne
je
mov
jg
dec
adc
jecxz
cmp
sbb
dec
adc
inc
rcl
stos
mov
or
sub
aam
mov
popa
mov
retf
ja
and
sar
push
repnz
xor
and
sbb
mov
pop
dec
jl
sub
or
and
outs
aad
pop
adc
mov
sbb
sar
push
shl
xchg
in
int
call
call
repz
xchg
dec
xchg
jmp
loopne
arpl
push
cmp
je
movs
sub
(bad)
loopne
add
mov
pop
icebp
(bad)
or
nop
cmc
cmps
movs
mov
or
ret
mov
arpl
cdq
loop
pop
sbb
in
xchg
xlat
xor
popf
inc
ret
ins
sbb
inc
stos
sbb
dec
push
out
inc
pop
arpl
cmp
add
add
call
adc
mov
jge
loopne
repz
xchg
inc
add
out
pop
jo
mov
and
push
inc
idiv
sahf
adc
pop
adc
sub
xor
cwde
rcl
add
push
mov
mov
xchg
push
fstp
imul
inc
scas
mov
mov
adc
ins
push
loopne
inc
leave
fist
inc
pop
dec
loopne
call
mov
sbb
push
xchg
mov
mov
mov
pop
jmp
sbb
dec
pushf
mov
mov
cwde
scas
and
jo
push
imul
scas
mov
or
jmp
pop
dec
adc
xor
movs
loope
mov
(bad)
sar
push
pushf
add
pop
or
cmps
mov
rcr
xchg
mov
lahf
lods
add
repnz
mov
push
xor
popa
adc
jns
addr16
mov
cwde
out
dec
add
loop
pop
cmc
imul
xchg
push
cmc
mov
mov
xchg
fucomi
cmps
and
mov
out
je
mov
(bad)
jae
das
adc
sub
inc
sub
out
dec
and
hlt
mov
out
push
add
mov
imul
or
cld
iret
imul
sbb
sbb
call
fucomp
nop
sub
adc
jo
arpl
pop
pop
test
es
or
pop
sbb
push
jmp
mov
test
in
jl
cmp
mov
jnp
adc
inc
or
ficomp
rcl
mov
mov
mov
inc
jb
push
cmp
rcl
fbld
lock
push
(bad)
(bad)
sub
cmp
jp
pop
aad
mov
cmp
not
ficom
daa
les
inc
sbb
in
jmp
daa
and
inc
and
ret
outs
fimul
pushf
in
scas
cmps
inc
mov
shl
fdiv
sbb
xchg
xlat
test
dec
pop
(bad)
xchg
div
imul
mov
cmp
in
imul
add
scas
and
sahf
repnz
jns
inc
sbb
stos
xchg
jns
jl
adc
xchg
fs
pop
cmc
gs
inc
or
outs
or
and
dec
fmul
fiadd
mov
test
push
pop
pop
cs
or
loop
and
dec
mov
fscale
push
pop
daa
push
into
ss
(bad)
ja
outs
jo
rol
jae
xchg
xchg
mov
scas
fcom
ret
xchg
mov
popf
repz
mov
stc
mov
loopne
cmps
mov
sub
push
test
or
and
imul
dec
cli
pop
push
stc
cmp
fwait
inc
neg
push
out
outs
fnstcw
pop
pop
mov
inc
xor
and
enter
sar
push
mov
cwde
lahf
xor
dec
gs
xchg
sub
int3
(bad)
xor
xor
in
sbb
adc
dec
fsub
or
and
idiv
push
mov
call
mov
pop
in
sub
jp
out
movs
adc
cwde
sti
or
bound
pop
cmp
stos
xchg
jg
xchg
push
jmp
xor
jmp
int
push
and
sti
js
jae
mov
xor
mov
fcom
dec
jge
add
call
scas
inc
xor
scas
sub
push
xchg
push
push
rcr
(bad)
mov
call
in
or
(bad)
jne
fs
mov
push
and
sbb
add
xor
aam
out
stos
call
push
scas
aaa
and
inc
mov
fwait
mov
dec
call
pop
adc
cmp
lahf
mov
add
add
jb
iret
mov
mov
xor
xchg
mov
mov
out
xor
cmp
jmp
jbe
pushf
retf
(bad)
lock
push
sahf
aam
mov
or
mov
xor
inc
shl
ds
cmp
push
mov
mov
fwait
mov
push
cmp
cmp
cmp
dec
push
jno
int3
ja
test
(bad)
(bad)
cs
xor
ret
jbe
in
mov
mov
icebp
push
scas
fadd
xchg
xor
dec
xor
add
int3
scas
lods
pop
sbb
jp
add
mov
dec
mov
xchg
xor
push
aaa
shr
mov
stos
packsswb
fidivr
int3
xchg
imul
jle
mov
adc
mov
mov
dec
mov
mov
in
pusha
leave
sub
mov
sbb
js
jp
jl
sti
dec
sub
repz
pop
(bad)
ficomp
mov
add
jle
hlt
push
ror
push
add
pop
or
sbb
inc
mov
scas
imul
pop
or
pusha
add
es
xchg
fstp
(bad)
add
dec
xor
daa
xchg
mov
mov
bound
or
(bad)
in
mov
ret
xchg
sub
sbb
or
xchg
out
pop
rcr
ins
(bad)
cmp
rcr
out
push
not
hlt
pop
cwde
aad
push
imul
jp
sbb
mov
add
push
test
fsub
inc
jnp
in
and
jno
retf
(bad)
sub
xor
add
aaa
xchg
jg
stc
cld
cmp
out
dec
hlt
fbstp
push
adc
ja
fidiv
je
xor
xchg
push
adc
and
lds
cmp
xor
jg
dec
xor
enter
jmp
and
sti
(bad)
xor
mov
cmp
in
inc
pop
das
sub
fidiv
in
mov
jl
xchg
mov
int
mov
popf
cwde
test
add
ins
inc
xlat
sti
xchg
xor
add
les
sti
pop
(bad)
stos
sbb
test
lds
and
lods
jg
gs
shr
and
xor
mov
push
cmp
call
movs
mov
test
mov
cmp
sub
pusha
adc
lock
jb
in
or
xchg
retf
addr16
aas
pop
fsubr
jbe
sub
sar
daa
xor
sbb
adc
xor
jbe
cmp
jle
out
pop
mov
in
cmps
movs
push
iret
pop
sbb
adc
test
xor
adc
adc
cwde
pop
xchg
push
sbb
push
add
mov
popf
lahf
cmps
(bad)
outs
mov
mov
bound
fld
in
push
popf
(bad)
lahf
and
mov
test
(bad)
jnp
lods
cmp
jbe
adc
xor
or
out
retf
jne
xchg
mov
stos
xchg
das
or
cld
adc
jns
or
(bad)
jno
and
scas
xlat
sub
add
aam
mov
push
xchg
add
enter
pop
sub
push
enter
in
xchg
mov
sbb
or
sbb
call
sub
mov
and
shr
repnz
clc
mov
fstp
ja
mov
lock
xor
sub
jno
xor
cmp
vpaddq
mov
outs
fld
xchg
jecxz
repnz
pop
mov
aaa
bound
in
mov
push
mov
xor
mov
xchg
cs
ror
fidivr
pop
push
xchg
cmp
mov
sbb
pop
(bad)
dec
outs
movs
mov
ins
sbb
(bad)
and
cmps
fcom
inc
iret
sub
xchg
out
lods
xchg
adc
cs
retf
and
(bad)
outs
push
push
push
push
inc
(bad)
(bad)
fld
cmp
jo
not
jmp
pop
cmp
aaa
in
dec
aam
pop
rol
or
pop
fistp
mov
(bad)
cmp
mov
inc
ss
pop
xor
pop
js
fcmovbe
sub
xor
sub
xlat
popf
or
jge
xchg
sub
scas
ss
mov
cmp
adc
mov
lods
jge
cdq
xlat
cmovno
icebp
(bad)
cmp
and
adc
mov
and
add
jne
jno
shl
mov
mov
xor
mov
xchg
jmp
push
jmp
mov
scas
xor
dec
lock
dec
shl
adc
dec
mov
sub
and
imul
mov
idiv
pop
push
xor
push
xchg
test
ins
inc
out
int
(bad)
pop
scas
(bad)
inc
fisub
sar
das
pop
ja
les
outs
int
dec
cdq
scas
jecxz
mov
lock
stos
ja
rol
mov
mov
fiadd
adc
xor
in
frstor
cwde
cmp
add
aas
cmps
cmp
pushf
sbb
cmc
sub
scas
sbb
or
nop
or
jg
mov
pop
mov
loope
sub
cli
fimul
mov
xlat
mov
popf
stos
or
shl
mov
mov
cwde
shl
adc
jg
cdq
dec
scas
pmullw
push
retf
or
enter
mov
retf
fmul
or
mov
out
shr
sbb
mov
packsswb
inc
sbb
push
cdq
nop
push
dec
arpl
jge
int3
mov
adc
jmp
xchg
fdivp
out
sbb
scas
repnz
jbe
ja
es
mov
jae
cmps
mov
adc
ret
pop
cmp
pop
movs
pushf
pop
pop
adc
mov
pop
mov
ja
clc
lock
pop
mov
lock
ins
mov
inc
push
add
jnp
pop
jmp
mov
popf
aam
pandn
popf
pushf
mov
mov
lea
dec
test
adc
(bad)
popa
cmps
call
imul
push
test
lahf
shl
xor
vextractf32x4
cld
adc
inc
add
cmp
inc
gs
xor
cmps
xor
shr
cdq
add
test
jmp
xchg
ret
mov
jp
push
and
mov
in
pushf
data16
xchg
mov
add
es
outs
sub
retf
ror
out
jo
iret
pop
dec
ins
shl
xor
js
sbb
fwait
mov
xchg
inc
xlat
inc
and
cmp
(bad)
push
outs
das
add
and
pop
pop
push
mov
dec
inc
pop
(bad)
mov
mov
into
push
scas
dec
and
mov
in
jl
icebp
dec
jbe
adc
mov
das
and
jecxz
pop
and
jecxz
jne
(bad)
inc
out
jbe
xchg
cdq
cs
sub
inc
adc
mov
and
add
mov
or
mov
sub
inc
and
jecxz
cmp
loop
es
lahf
xor
xor
aaa
(bad)
cs
adc
out
push
push
adc
pop
and
adc
add
xchg
fwait
jae
cmp
in
cwde
arpl
and
inc
cmc
jle
jmp
sbb
cmp
add
pop
push
sbb
cli
mov
in
mov
jle
mov
scas
ja
stc
je
std
sub
lahf
inc
ss
cwde
hlt
jecxz
imul
call
rcr
sbb
inc
call
daa
pop
mov
lods
sub
mul
cmc
imul
pusha
sbb
fisttp
sub
sub
push
and
push
adc
and
popf
and
jno
mov
ss
add
jb
xchg
fst
pop
jno
(bad)
and
or
scas
mov
mov
xchg
(bad)
fwait
popa
push
lock
xchg
dec
fst
xchg
in
push
push
and
jnp
xor
jmp
pop
pop
leave
mov
mov
retf
pop
daa
mov
into
icebp
sub
and
fwait
movs
jne
push
fcomp
fiadd
push
xchg
pop
pop
mov
out
mov
aam
mov
add
cli
in
repnz
js
or
mov
dec
neg
fistp
cmps
jmp
lea
mov
xchg
out
sbb
mov
push
cmp
bound
arpl
mov
lods
xor
rcr
dec
jo
cmp
jb
mov
dec
pop
sub
clc
retf
lea
mov
lods
mov
pop
mov
push
inc
or
stos
into
(bad)
jmp
ins
mov
or
pop
adc
aaa
(bad)
jmp
fidiv
shl
int
or
xlat
mov
mov
xchg
ror
les
mov
add
rcr
inc
jbe
push
cmp
mov
movs
pusha
in
lods
fiadd
xor
jp
inc
push
jp
sti
stc
adc
(bad)
lds
lds
mov
jae
jecxz
sbb
add
addr16
cmp
or
sub
pop
adc
hlt
lods
(bad)
and
xor
mov
cbw
mov
jle
cdq
or
sbb
jge
in
sti
fmul
bswap
(bad)
pop
icebp
push
enter
popa
pop
sbb
jb
cs
mov
mov
add
jno
sub
jmp
xor
push
mov
sbb
mov
in
outs
daa
adc
std
imul
mov
mov
xchg
jbe
lea
dec
inc
js
mov
cdq
cmps
jne
add
sub
or
ficom
xchg
add
mov
repnz
mov
push
mov
dec
cs
jl
popa
mov
xchg
sbb
(bad)
rcl
clc
test
mov
push
inc
in
retf
lea
das
sti
lds
xor
xchg
sbb
stc
and
xor
cmp
sbb
sbb
loop
mov
jg
cmp
pop
mov
iret
iret
out
mov
inc
or
push
cmps
mov
repnz
mov
das
xchg
mov
push
cmp
jae
aas
dec
xchg
hlt
loop
shl
cwde
nop
rol
fwait
aad
rcl
pop
lahf
or
arpl
dec
outs
or
sbb
leave
ffree
je
outs
adc
ins
lahf
and
pop
jmp
sub
pop
ja
mov
xchg
cmp
(bad)
xor
jae
cmp
ror
pop
shr
xor
ds
push
cmp
cmps
dec
loopne
and
aaa
mov
inc
xchg
cmp
pop
adc
mov
test
push
dec
inc
jmp
sbb
mov
cld
in
or
(bad)
lock
out
hlt
les
movs
mov
daa
xchg
mov
icebp
imul
pop
sbb
test
pop
cmp
and
push
das
pop
xchg
xor
push
retf
mov
sub
les
or
jmp
mov
nop
push
outs
psrld
mov
ficom
and
in
mov
mov
xor
call
icebp
shr
lea
xchg
push
ja
aad
cmps
gs
loop
dec
div
shl
xchg
imul
inc
call
test
das
test
pop
sbb
int
ror
mov
jle
push
xchg
dec
mov
sahf
sub
cmp
mov
adc
jae
xchg
(bad)
in
into
cs
push
int3
data16
add
fbstp
in
aam
leave
sbb
jbe
shl
and
sub
xchg
out
sbb
jmp
mov
sbb
shr
xchg
(bad)
and
fisttp
mov
test
sar
daa
xchg
inc
sti
xchg
gs
mov
dec
stc
fs
mov
inc
xlat
jge
and
ins
pop
out
ds
xor
cmps
nop
dec
sbb
inc
xchg
inc
sub
and
or
xchg
test
rcl
mov
pushf
dec
ror
add
jno
fistp
push
es
pop
jp
adc
mov
jg
aad
cmps
lea
fdivr
adc
lods
ds
pop
cmps
mov
xor
xchg
push
push
(bad)
adc
xlat
inc
sahf
mov
lock
fnstcw
or
bound
loope
shr
xor
shl
scas
cmp
jnp
test
push
sub
mov
or
pop
mov
push
push
dec
jne
nop
fldcw
les
fs
inc
jmp
retf
add
mov
out
xchg
or
pusha
dec
aaa
movs
mov
push
out
daa
and
ja
dec
jnp
es
mov
or
ficom
adc
pop
push
sbb
js
mov
out
sbb
jbe
test
xchg
js
test
or
repnz
test
cmp
jp
les
popf
loop
lods
mov
aam
or
ins
or
jmp
stc
mov
fild
sbb
cmc
jle
not
dec
sub
sti
cdq
sbb
int
pcmpeqb
mov
sub
cld
cmp
ret
fidivr
imul
into
lock
daa
out
pop
push
icebp
cld
push
adc
pusha
fisubr
mov
mov
fimul
scas
push
test
jle
aad
fdivr
mov
push
cmp
xor
xchg
sub
cmp
xor
dec
test
xlat
jae
cs
smsw
mov
ja
lahf
ins
iret
test
mov
in
leave
mov
popa
aaa
aas
addr16
fnstenv
mov
mov
sub
jns
mov
test
sub
or
es
(bad)
xor
mov
xchg
mov
stos
pushw
mov
dec
pop
cld
sub
mov
pop
push
xchg
das
sbb
xchg
retf
cmp
in
aaa
adc
xlat
retf
bnd
lahf
aad
dec
pop
fninit
mov
sub
jmp
ins
pop
jl
jg
sub
add
int
stc
dec
popf
mov
cwde
mov
cmp
cwde
xor
in
rcr
call
cmp
or
jmp
imul
xchg
sub
xchg
push
sbb
jge
mov
ds
cmp
(bad)
push
inc
es
jo
(bad)
inc
cli
arpl
or
mov
inc
jmp
je
cmp
mov
ret
cmp
fild
add
aad
adc
fbld
sub
mov
mov
in
in
mov
inc
lds
cmc
je
and
lea
in
push
mov
pusha
pop
retf
fiadd
js
mov
and
test
sub
and
sub
or
dec
mov
clc
cwde
pop
push
out
inc
inc
xor
push
cdq
ja
lea
shl
mov
aas
repnz
add
dec
retf
inc
lock
adc
inc
aad
xchg
movs
cmp
xor
jbe
xlat
popa
js
movs
out
adc
jns
aam
cmp
jl
iret
pop
adc
adc
ins
xor
pop
retf
popa
mov
cmp
pushf
ss
push
jg
mov
out
xchg
fdivp
add
arpl
loopne
and
mov
xlat
clc
aam
(bad)
lock
in
movs
xchg
fldenv
sbb
cmps
pop
push
mov
sti
in
xchg
lahf
in
loopne
pop
sbb
aas
adc
jns
gs
ja
imul
out
pusha
and
push
popa
std
fild
and
inc
sbb
out
lods
loop
fwait
cmc
push
pop
mov
retf
jle
test
cmps
cmps
cmps
inc
mov
mov
push
xor
enter
mov
mov
test
neg
jle
mov
adc
cli
fcomp
dec
inc
sbb
adc
hlt
jb
inc
jecxz
test
mov
loopne
or
pop
cdq
or
loop
rol
cmp
retf
add
in
test
mov
addr16
bound
xchg
mov
mov
push
xchg
in
and
pop
push
dec
sti
pop
fnstcw
xchg
add
pusha
popf
xchg
jp
ss
loopne
xor
std
sbb
push
(bad)
adc
mov
jl
fdivr
sub
mov
(bad)
jmp
fist
pop
call
or
or
and
enter
mov
push
dec
jp
sbb
aas
push
pusha
mov
and
xor
mov
xor
int
inc
outs
push
fmul
pop
shl
pop
jb
pop
cmp
cmp
mov
add
sub
cwde
jbe
pop
cmc
sub
aam
mov
mov
inc
stos
sbb
enter
jecxz
mov
jmp
and
sahf
movs
jmp
dec
test
add
adc
add
sar
in
fsubr
outs
add
or
lods
fucomi
xor
mov
pop
xlat
pop
ins
dec
(bad)
add
arpl
clc
mov
stos
imul
aaa
out
cdq
enter
inc
sbb
js
inc
dec
dec
mov
xchg
shl
out
or
es
sbb
xchg
jmp
aas
repnz
sbb
pop
test
or
repz
jne
mov
call
sbb
jge
mov
clc
ins
pop
mov
push
or
sub
and
repz
aad
mov
(bad)
ja
mov
xlat
cdq
mov
push
fst
jecxz
dec
mov
mov
add
and
out
es
into
mov
mov
cmps
add
pop
shl
add
xlat
xchg
mov
shr
or
push
stos
ret
mov
mov
jbe
adc
data16
popf
or
inc
cwde
xor
repnz
xchg
popa
inc
xchg
mov
jae
xchg
es
jle
aaa
cwde
cmc
in
out
xor
pop
xchg
neg
jle
pop
inc
adc
jnp
push
jecxz
jbe
xor
loop
call
movs
jnp
mov
cmp
mov
push
sub
push
xchg
sub
ds
mov
mov
jge
cmp
aaa
jne
imul
fdivr
push
daa
ja
jmp
test
std
push
or
push
and
lahf
stos
mov
js
cmps
ja
data16
inc
adc
dec
or
push
cmc
leave
popa
inc
fsubrp
dec
jle
aad
retf
push
mov
sub
sub
test
cmps
mov
mov
pusha
pop
inc
pop
pop
jo
mov
out
pop
out
push
fs
ja
xchg
jecxz
sub
xchg
push
in
pusha
sahf
xor
ficom
mov
sti
add
dec
mov
nop
ror
dec
and
in
xchg
loop
scas
neg
iret
or
push
sar
add
ins
(bad)
mov
sbb
daa
adc
xor
and
push
and
in
cmps
xor
test
push
push
shl
int3
mov
cmp
mov
ja
hlt
bound
pop
sbb
mov
lds
test
mov
mov
mov
xchg
fsub
mov
xchg
jmp
push
cmp
inc
loopne
mov
pop
push
in
lahf
mov
rol
jno
xchg
add
out
js
dec
mov
in
loopne
or
cmp
mov
mov
or
jns
es
cmp
ins
mov
mov
and
pop
add
rcr
test
push
sti
clc
scas
jmp
in
bound
rol
int
cdq
out
jo
out
ror
ret
add
fcomip
js
xchg
push
ins
mov
pusha
jmp
xor
add
jp
dec
lods
aad
jno
dec
fild
lock
inc
inc
push
sbb
test
mov
mov
cli
pushf
mov
jns
and
movs
sbb
pop
sub
fsub
int3
fsub
std
jge
jmp
sub
ins
loope
xor
es
mov
jl
push
cmc
pop
stos
inc
push
fidivr
ret
jl
mov
jbe
int
pop
sub
push
int
inc
sub
pop
das
addr16
sub
jge
add
movs
jmp
lea
jo
xor
mov
dec
push
mov
gs
cmps
mov
fisubr
and
sbb
dec
add
xchg
mov
add
movnti
push
pop
jp
xor
add
std
ror
mov
shl
test
jp
or
jns
shl
rol
cmps
inc
mov
cmps
js
ds
rol
(bad)
dec
outs
outs
inc
ficom
mov
(bad)
mov
add
into
xchg
sbb
mov
out
int3
mov
enter
and
dec
mov
jno
jecxz
mov
pop
adc
lods
sti
push
dec
xlat
test
aaa
retf
xor
xchg
dec
ja
fst
mov
push
and
jle
fld
adc
sbb
inc
xlat
cmp
inc
jno
rcl
imul
jns
mov
fcomp
inc
pop
movlps
pop
aad
fidivr
popf
ror
adc
sbb
je
cmp
push
jbe
jae
adc
outs
mov
add
das
cmp
loop
adc
ds
jl
pop
sbb
inc
cs
pop
add
pop
das
sub
(bad)
in
and
fchs
movs
in
cmps
jb
(bad)
pop
pop
mov
push
stos
xchg
lods
scas
mov
sbb
sbb
sbb
stc
pop
add
mov
sub
test
fistp
xchg
das
jmp
leave
jbe
pop
or
add
inc
sub
sahf
lds
stc
jle
sub
call
jbe
lock
xor
push
pop
mov
cmp
hlt
jnp
test
cmp
jo
daa
cmp
outs
or
vphsubdq
jecxz
fdivp
mov
test
pop
inc
mov
and
loope
or
inc
lock
add
push
call
push
fcomp
aad
xchg
imul
dec
inc
inc
lds
xchg
lahf
jns
(bad)
push
pop
cmp
(bad)
sub
neg
sbb
mov
push
and
pop
adc
xchg
aam
mov
cdq
into
mov
adc
pop
psubsb
dec
test
xor
inc
repz
sbb
popf
jb
jecxz
fimul
sbb
fisubr
xchg
fisubr
and
jle
cmps
int
iret
sbb
test
xchg
(bad)
and
push
adc
pushf
mov
mov
sub
sub
xor
inc
push
ins
enter
cmc
mov
inc
leave
fs
push
pusha
test
out
push
movs
xchg
pop
jo
pop
fisttp
js
sbb
sub
inc
mov
push
(bad)
rcl
dec
push
jle
mov
cdq
cmp
push
mov
fimul
inc
ss
stos
les
mov
adc
and
imul
js
lods
pop
imul
push
retf
mov
adc
(bad)
out
repnz
adc
and
sub
xchg
jbe
push
xchg
xor
dec
mov
jnp
and
or
mov
sar
pcmpgtd
mov
push
adc
jbe
or
cmps
(bad)
je
jmp
in
sbb
dec
pop
cmps
mov
dec
loope
inc
fld
mov
aad
scas
pop
retf
stc
and
mov
adc
aaa
and
movs
arpl
scas
inc
fimul
sti
lods
push
mov
mov
ret
addr16
icebp
pop
nop
movs
push
daa
sub
jne
mov
call
push
movs
add
xchg
sub
in
inc
push
daa
int3
push
mov
or
cmps
jb
idiv
add
pop
mov
mov
imul
xchg
mov
mov
stc
push
outs
xchg
xor
rcl
dec
push
mov
push
popf
fwait
cmp
scas
leave
pop
in
sbb
pop
cmp
push
loop
xchg
fisttp
mov
(bad)
int
hlt
mov
ja
cmp
mov
data16
dec
fimul
cmp
sub
or
adc
sbb
xchg
mov
(bad)
push
aaa
mov
es
stos
add
ins
cdq
xchg
mov
ja
fld
jns
push
lahf
scas
mov
(bad)
arpl
sahf
(bad)
jmp
jl
jle
imul
int3
mov
mov
inc
cli
and
(bad)
fcmovnbe
jl
jle
mov
hlt
fnstenv
inc
cmps
fwait
ins
fidivr
imul
xor
(bad)
addr16
inc
sbb
cmp
arpl
sbb
std
sub
xchg
jb
adc
aad
es
lods
inc
retf
mov
int3
or
test
lods
jmp
.byte
