xchg
mov
mov
ins
cmps
js
arpl
pushf
fs
pushf
jl
jp
outs
cmps
js
scas
hlt
cs
out
pop
test
int
shr
mov
ins
cmps
js
in
js
ins
cmps
repz
dec
xchg
loopne
sub
mov
pop
xchg
dec
pushf
or
dec
shl
pop
shl
mov
sub
pushf
fs
mov
fcmovne
mov
cmp
push
mov
cmps
js
out
arpl
cld
mov
out
cmp
adc
jl
js
sbb
js
xor
and
cmp
inc
cmp
popf
cmp
repnz
sub
mov
sub
cli
ins
cs
in
dec
sub
jle
ins
cmps
ja
shl
xor
mov
std
nop
add
or
cmps
cmc
std
xchg
cmp
je
pop
scas
sti
inc
xchg
test
adc
xor
jecxz
js
adc
sub
std
sub
ins
add
or
cmps
repz
sub
pop
pop
cmp
push
pop
cmp
js
js
loope
inc
or
cmps
repz
cmp
push
pop
cmp
cmps
and
xor
aaa
push
stos
jno
sbb
jo
test
mov
out
aas
dec
mov
jl
sub
mov
xchg
jecxz
repz
sub
xchg
not
pop
xchg
addr16
leave
cmp
adc
stc
pop
xchg
arpl
pusha
jge
fsub
js
ins
cmps
js
addr16
sub
ins
cmps
sti
jl
scas
mov
jg
mov
cli
ins
scas
js
ins
int
push
push
fstp
out
arpl
lods
sar
ins
cmps
js
xchg
push
call
cmps
nop
mov
test
xchg
test
mov
aam
js
ins
cli
daa
out
cs
in
and
xchg
fsub
js
sbb
js
test
push
or
cmps
adc
ins
cmps
js
xchg
sbb
mov
xchg
iret
or
cmps
adc
jl
js
or
pop
mov
xor
push
cmp
inc
pushf
or
je
ins
movs
mov
mov
add
enter
pop
or
cmps
adc
jns
js
xchg
xchg
push
or
cmps
xchg
xchg
xchg
pop
or
cmps
icebp
popf
js
cmp
ins
and
mov
nop
not
jno
ret
fstp
ins
repnz
pop
aam
xor
ins
dec
pop
into
ins
cmps
sub
cmp
out
sbb
icebp
inc
pop
pop
icebp
jg
cmps
adc
push
cmps
adc
dec
aaa
cmp
ins
cs
mov
in
(bad)
pop
in
mov
xchg
pop
icebp
jg
cmps
cmc
cmp
cmp
jo
ins
cmps
cmc
cmp
cmp
nop
jp
cmps
js
test
mov
ins
iret
call
cmp
pop
retf
inc
xchg
not
cmp
cmps
js
imul
js
mov
std
push
fistp
xor
adc
pop
addr16
out
outs
mov
push
pusha
icebp
das
pop
inc
mov
retf
jns
in
cmc
std
xchg
div
std
nop
not
mov
ins
int
shr
inc
sbb
jecxz
ins
cmps
icebp
jle
push
cmp
ins
cmps
jno
sbb
xchg
je
or
shr
test
rol
in
xchg
nop
dec
xadd
dec
sbb
sti
lds
js
ins
dec
je
xchg
push
lahf
xor
push
icebp
jg
addr16
xor
in
in
sub
cmp
cmp
in
sti
push
or
iret
popa
mov
xchg
shl
scas
nop
adc
mov
push
pop
or
inc
sbb
push
sahf
adc
pop
or
mov
push
xchg
mov
inc
pop
pop
icebp
jg
stc
mov
cmp
popf
cmp
sub
mov
ss
jbe
mov
inc
imul
sbb
inc
ins
dec
adc
or
xor
jge
fsub
js
xchg
dec
cmp
sub
inc
out
jo
shl
inc
cmp
xchg
in
fwait
jns
sbb
std
nop
shr
sub
std
jl
cmp
std
xchg
dec
dec
xor
icebp
jnp
mov
movs
pop
cmp
push
cmps
js
xchg
sahf
mov
inc
out
jo
lods
and
inc
sub
inc
mov
sub
cmp
pop
xchg
movs
fs
mov
sbb
repz
sub
test
and
sbb
xchg
gs
in
test
pop
xchg
out
jo
lods
and
inc
sub
inc
mov
stos
shl
jmp
cmps
xchg
mov
push
xchg
stos
in
push
dec
out
jo
js
lock
cmps
js
xchg
loopne
adc
cmp
in
push
jp
xor
inc
push
mov
inc
xchg
cmps
cmc
cmp
xor
and
repnz
pop
cmp
cli
je
out
pop
stos
in
(bad)
pop
in
test
stos
xchg
mov
dec
xor
ins
cmps
repz
cmc
push
mov
xor
mov
mov
mov
sbb
js
xor
cmps
daa
out
outs
mov
call
xor
pop
pusha
pop
pop
js
ins
cmps
(bad)
fst
loop
mov
sar
out
jo
mov
cs
mov
cmps
cs
in
sti
jp
das
ins
(bad)
les
in
xor
scas
mov
std
nop
cs
inc
xor
and
repnz
pop
cmp
shr
xor
sbb
es
mov
cmps
icebp
dec
xchg
(bad)
mov
sahf
sub
mov
sbb
ja
mov
jge
inc
adc
std
nop
cs
inc
pop
addr16
out
outs
mov
out
cmp
or
cmp
ror
cli
ins
pop
or
cli
ins
icebp
nop
cmp
sub
lds
das
shl
inc
cmp
xchg
pop
sub
adc
out
cmp
inc
xchg
pop
sti
jl
clc
es
repnz
pop
aas
icebp
das
xor
stos
(bad)
cmp
and
xchg
mov
mov
iret
or
ins
cs
rcl
icebp
xchg
fs
shr
int3
ins
cmps
icebp
inc
ins
pop
icebp
jg
mov
daa
out
cli
mov
call
sbb
dec
add
loop
mov
nop
cs
cli
ins
cmps
or
int
(bad)
ins
div
mov
sub
pusha
inc
aas
scas
rcl
cmps
js
mov
cmp
mov
xchg
hlt
jo
jge
js
xor
and
repnz
pop
out
dec
pop
jmp
lock
sbb
mov
mov
js
out
cmp
ins
dec
mov
std
pushf
not
test
in
push
lods
xlat
js
in
shr
cs
js
jl
and
cs
out
cmp
enter
adc
not
xor
test
js
loop
mov
ror
pushf
and
mov
cmps
repz
xchg
mov
mov
scas
es
cmc
push
cmps
js
lods
scas
mov
std
mov
mov
push
xchg
pop
xchg
es
je
js
lods
clc
es
fs
mov
sbb
js
cmp
ret
into
addr16
mov
(bad)
fsub
js
xchg
cmps
js
imul
int
int3
cli
ins
sahf
cmp
mov
pusha
add
or
cmps
icebp
pusha
fwait
inc
icebp
cmp
in
sti
test
add
mov
lock
mov
cmp
icebp
jnp
and
cmps
js
xchg
pop
js
loope
cdq
inc
xchg
pop
sub
stos
nop
jb
cmps
js
ins
iret
mov
cmps
cmc
cmp
cmp
push
inc
xchg
pop
sti
jl
call
out
and
cmps
js
cmp
jns
in
stc
jnp
mov
loope
mov
out
jo
sub
sub
push
pop
das
movs
in
test
adc
mov
mov
ins
and
inc
ins
test
cdq
ins
cmps
js
or
cmp
int3
cli
ins
pop
xchg
scas
hlt
jno
ins
pop
jge
fsub
js
sub
mov
sbb
cmp
cmps
icebp
std
xchg
mov
shr
int3
ins
cmps
and
mov
mov
std
mov
icebp
std
test
or
cmps
cmc
std
pushf
div
int
and
test
inc
sar
add
out
out
xchg
dec
cs
xchg
ins
cmps
jno
sbb
adc
in
shr
mov
out
xchg
cs
(bad)
in
dec
or
cmp
cmp
in
cmps
sub
push
pop
out
sub
cmps
js
sub
js
mov
mov
xchg
pop
js
out
je
jmp
sar
mov
mov
fs
test
add
mov
lock
mov
cmp
cmp
mov
mov
and
in
mov
in
test
xchg
pop
icebp
jnp
stc
and
repnz
pop
out
dec
je
cmp
(bad)
loopne
xor
xchg
cmps
xor
xchg
mov
lahf
adc
pop
js
sub
ja
out
js
gs
test
ins
cmps
js
lahf
adc
mov
jl
sbb
sub
inc
mov
scas
inc
lea
mov
repz
sub
ins
not
sub
in
push
cmp
arpl
fwait
test
mov
into
in
mov
xchg
scas
mov
inc
ins
adc
pop
js
cmp
cmps
fcmovnu
fsub
js
sub
or
cmp
fst
mov
inc
dec
sbb
jo
push
mov
sti
fst
pop
icebp
jg
sub
mov
fwait
dec
mov
xchg
pop
sti
fst
cmps
or
xchg
shl
pop
cmp
ins
dec
or
xchg
cmps
xor
int
shr
shr
shr
clc
add
out
ins
dec
and
ins
cmps
icebp
std
xchg
int
shr
call
ins
sub
mov
data16
jo
out
test
or
mov
ds
or
push
aad
js
push
cmps
cmc
std
cwde
not
mov
ins
pop
or
mov
inc
cmps
js
sbb
add
js
xor
mov
cmp
popf
add
cmps
jp
test
adc
out
xlat
clc
inc
pop
and
mov
xor
std
inc
xchg
pop
xchg
ins
dec
rcl
ins
cmps
icebp
cmp
loope
mov
push
in
pop
xchg
scas
mov
mov
mov
mov
leave
ins
cmps
nop
push
add
xchg
mov
inc
fldcw
inc
xchg
sub
jl
pop
xchg
test
mov
sbb
cmps
js
cmps
es
ret
js
jmp
neg
and
in
call
and
cmp
adc
dec
push
mov
cmps
cmc
cmp
cmp
sbb
cmps
repz
cmp
inc
inc
js
js
ins
cmps
icebp
std
nop
scas
mov
mov
mov
mov
inc
xchg
neg
and
in
call
adc
cmp
cmp
add
fdivr
ins
pop
int
xchg
pop
xchg
pop
xchg
arpl
stos
loopne
add
out
mov
xchg
pop
fucomi
int3
in
cmp
sub
push
xchg
pop
xchg
int
(bad)
ins
div
adc
jno
arpl
lds
rcr
xchg
cmps
ja
stc
movs
js
in
sbb
mov
add
jns
xor
mov
xchg
pop
sub
push
xchg
arpl
shl
ficomp
inc
aam
adc
jmp
cs
inc
xchg
pop
inc
inc
xchg
cmps
js
call
test
cmp
sub
cmc
cmp
cmp
sub
sub
cmps
js
test
ja
jmp
popa
jl
cmp
cmp
xchg
pop
xchg
cmps
js
jmp
mov
shr
lods
pop
cmps
adc
int3
out
push
cld
push
xchg
arpl
pop
js
sbb
cwde
cli
ins
sub
inc
xchg
pop
xchg
test
mov
and
mov
pop
xchg
jmp
cmps
js
ins
int
shr
neg
stc
ins
dec
ss
xchg
pop
sti
jl
call
push
cmps
adc
mov
js
rcr
inc
xchg
lock
mov
stos
inc
inc
xchg
cmps
js
pushaw
std
or
pop
xchg
ins
iret
aad
cmps
adc
int3
out
push
pusha
push
xchg
arpl
pop
js
sbb
cwde
cli
ins
sub
inc
xchg
pop
xchg
test
inc
xchg
and
mov
pop
xchg
jmp
cmps
js
ins
int
ror
inc
cmp
ins
dec
mov
xchg
pop
sti
jl
call
push
cmps
adc
mov
js
rcr
inc
xchg
lock
adc
test
inc
inc
xchg
cmps
js
pushaw
std
or
pop
xchg
ins
iret
in
pop
cmps
adc
int3
out
push
in
xchg
arpl
pop
js
sbb
xchg
cmps
js
aam
sbb
jmp
cs
pop
cmps
adc
int3
out
push
cmp
inc
out
arpl
pop
js
sbb
xchg
cmps
js
push
cmps
adc
mov
js
cmp
cmp
xchg
and
mov
pop
xchg
ins
iret
rcr
cmc
add
cmp
dec
xchg
pop
sti
jl
call
push
cmps
adc
mov
js
rcr
inc
xchg
lock
dec
cwde
pop
xchg
test
inc
inc
xchg
cmps
js
pushaw
std
or
pop
xchg
rcl
xchg
cmps
or
or
cmps
js
jmp
not
loope
mov
mov
ins
push
sub
cmps
fcmovnu
fsub
js
scas
sbb
ins
popa
std
inc
xchg
pop
xchg
ins
mov
or
pop
xchg
scas
sub
pusha
xchg
pop
xchg
out
movs
inc
xchg
pop
sub
push
pop
das
in
loop
mov
test
dec
push
pop
xchg
div
cmp
cmp
inc
inc
cmp
mov
cmp
pop
js
jmp
and
ins
xchg
pop
xchg
in
sti
sbb
ins
and
add
sub
mov
inc
stos
js
or
sbb
pusha
std
adc
cmps
js
jmp
div
cmp
cmp
std
pusha
xchg
pop
xchg
out
xchg
jo
xchg
ins
xor
xchg
not
sub
aas
xchg
div
adc
js
sub
js
and
ins
cmps
cmc
cmp
cmp
std
ins
xchg
pop
xchg
out
xchg
mov
loop
cmp
scas
mov
mov
xchg
pop
xchg
out
test
xchg
pop
sub
push
pop
das
and
test
shl
inc
xchg
pop
sub
jmp
div
adc
icebp
pusha
ins
jg
jnp
fiadd
ins
cmps
stc
dec
lahf
mov
mov
xchg
pop
sub
jmp
div
adc
jno
arpl
adc
sub
mov
pop
js
fstp
inc
xchg
iret
sub
sub
pop
xchg
dec
out
aam
cmps
sti
jl
and
push
xchg
pop
xchg
ins
int
push
cmp
jne
mov
jmp
cs
inc
xchg
sub
inc
xchg
pop
xchg
add
cwde
cli
ins
sub
inc
xchg
pop
xchg
test
adc
ins
and
lods
or
sub
sub
push
xchg
pop
xchg
jmp
sub
sbb
pop
xchg
loope
call
push
jl
lahf
add
js
lahf
add
or
out
dec
push
mov
out
nop
inc
xchg
pop
das
xor
das
xchg
in
test
mov
mov
inc
ins
test
iret
outs
cmps
js
leave
or
cmp
cmp
clc
pop
cmps
repz
cmp
inc
inc
js
js
ins
cmps
icebp
std
nop
es
mov
test
mov
js
jmp
div
cmp
cmp
inc
inc
cmp
icebp
std
nop
mov
cmp
pop
js
jmp
and
or
inc
jns
ins
int
push
cmp
js
xor
cmps
js
stos
and
inc
xchg
pop
jp
out
enter
icebp
cmp
loope
cld
inc
xchg
pop
sub
xchg
and
test
inc
sar
int
xchg
pop
xchg
xor
mov
ror
xchg
lock
pop
icebp
pusha
pop
jg
jnp
fiadd
ins
cmps
sti
sbb
ins
sub
xor
xlat
cdq
cli
ins
sub
cmp
pop
xchg
out
xchg
cs
cmp
out
sbb
inc
xchg
pop
js
call
sub
fcom
cmps
xchg
out
lock
xchg
pop
sub
push
pop
das
cwde
in
test
mov
mov
inc
ins
test
pop
ins
cmps
js
out
sbb
inc
xchg
pop
jo
jmp
and
rcl
and
cmp
cmp
int
xchg
pop
xchg
push
xchg
arpl
stos
loopne
add
in
(bad)
pop
in
and
pop
icebp
jnp
sbb
inc
xchg
pop
js
call
pusha
std
dec
xchg
pop
xchg
push
pop
xchg
xchg
not
in
in
xor
xchg
not
cmp
jg
jnp
sub
jo
out
test
or
inc
xchg
pop
xchg
loope
sbb
pop
sub
jmp
sub
mov
cmp
adc
cmps
sti
jl
int
xor
xchg
not
loopne
in
xor
xchg
not
cmp
jg
jnp
sbb
inc
xchg
pop
js
ins
pop
push
pop
in
and
xchg
pop
icebp
jnp
and
inc
xchg
pop
sub
pop
pop
cs
and
inc
xchg
pop
repz
push
and
inc
xchg
pop
ja
popa
pop
xchg
and
inc
xchg
pop
sub
pop
pop
cs
and
inc
xchg
pop
sub
pop
pop
cs
push
scas
imul
cmp
out
pushf
inc
xchg
pop
inc
cmp
arpl
sti
add
ins
sar
jmp
cmps
repz
cmp
dec
inc
cmp
xchg
shl
ja
inc
xchg
div
mov
test
fwait
inc
icebp
cmp
in
sti
add
ins
shl
jae
inc
xchg
div
mov
jg
inc
xchg
div
mov
jnp
inc
xchg
div
mov
imul
sub
pop
xchg
pop
xchg
out
xchg
fs
dec
dec
xchg
pop
daa
out
outs
mov
inc
add
int3
cli
ins
iret
loop
sub
sbb
ins
cmps
js
cmp
icebp
popf
ins
cmps
js
out
dec
ins
jmp
lock
fld
ins
shl
pushf
xor
inc
mov
mov
ins
cmps
nop
fiadd
js
test
shl
cmps
js
or
std
mov
push
adc
xchg
call
mov
pop
xchg
pop
xchg
popf
stos
loop
mov
sub
xor
dec
mov
jmp
and
js
xchg
std
nop
pop
xchg
clc
es
sub
dec
or
mov
scas
mov
xor
jns
adc
adc
mov
add
pop
clc
ins
int
shr
(bad)
jg
dec
dec
fsubr
jnp
cs
cmp
cli
jo
cli
in
xchg
aam
sbb
sub
jns
mov
icebp
out
cmp
js
lods
mov
mov
repz
mov
sub
scas
call
mov
push
outs
jns
in
mov
mov
in
xor
and
out
stc
ins
scas
mov
mov
ins
cmps
ja
pop
movs
js
xchg
cmp
fsub
js
popa
mov
xchg
fsubr
js
imul
mov
sub
push
cmps
jge
repz
push
push
movs
js
in
stos
pusha
daa
sub
lahf
ja
inc
movs
js
call
int3
popa
push
xchg
and
push
cmp
mov
push
cmp
mov
in
xchg
mov
cmps
js
imul
xchg
call
int3
imul
mov
ins
cmps
clc
mov
cmp
mov
sub
out
push
pop
pop
xchg
mov
jl
imul
mov
ins
push
cdq
xor
push
icebp
jns
stos
pusha
daa
sub
pop
xchg
mov
jo
imul
mov
ins
cmps
clc
mov
cmp
mov
sub
out
push
mov
inc
call
int3
imul
mov
in
clc
mov
cmp
mov
icebp
out
mov
fcomp
inc
call
int3
imul
mov
ins
cmps
clc
mov
cmp
mov
cmc
out
mov
in
xchg
mov
xchg
in
dec
movs
loopne
cmps
clc
mov
cmp
mov
ins
cmps
fst
js
imul
mov
stc
ins
out
pop
ins
cmps
js
cmp
mov
imul
frndint
cmc
out
mov
ins
dec
mov
push
icebp
out
mov
ins
dec
leave
mov
sbb
cmp
sub
cmps
js
in
dec
jo
data16
mov
outs
dec
cmc
mov
test
mov
repz
cwde
in
push
lea
sub
cmp
int3
in
mov
fld
xchg
lods
pop
mov
aam
js
in
cmps
js
adc
inc
ja
cmps
js
push
pop
pop
cmp
in
stos
pusha
daa
sub
pop
jge
fsub
js
pop
push
xchg
and
push
cmp
mov
push
cmp
mov
ins
cmps
clc
mov
cmp
mov
lods
dec
daa
mov
fwait
inc
icebp
std
test
mov
cli
ins
push
jge
repz
clc
arpl
mov
dec
sub
cmp
in
ja
imul
mov
std
fwait
test
mov
out
inc
jg
sub
push
sub
js
cmps
js
call
daa
add
inc
imul
cmp
push
sub
cmp
int
push
cmp
sub
aaa
cmp
sub
daa
add
cmp
push
jle
sub
mov
call
daa
sub
mov
(bad)
out
ficomp
js
fisub
sti
pop
imul
dec
in
fimul
lds
mov
jl
dec
stos
call
mov
jns
call
xor
inc
and
aaa
cmp
ins
sahf
jge
cld
out
retf
mov
cmps
js
dec
stos
call
mov
jns
call
xor
rcr
cmps
xchg
int
out
ins
sahf
jge
cld
out
retf
jge
fsub
js
pushf
mov
mov
pusha
pop
sar
ins
cmps
(bad)
pop
in
mov
lods
stc
and
repnz
pop
cmp
scas
fidiv
ins
cmps
xchg
add
ret
dec
iret
out
cmps
icebp
jle
mov
cli
ins
icebp
nop
jp
cmps
js
xor
cmp
in
test
stos
iret
push
add
cmps
cs
(bad)
mov
ins
iret
inc
add
cmps
cs
cmc
clc
js
iret
push
in
ins
iret
xor
cmps
cs
in
js
iret
xchg
out
ins
iret
add
cmps
cs
adc
(bad)
fdivr
ins
cmp
outs
mov
push
add
cs
xlat
push
dec
test
cmp
ror
cli
ins
iret
cld
add
cmps
cmc
std
(bad)
test
mov
mov
mov
push
ins
sub
jg
push
cmp
xchg
cmps
stc
push
sbb
js
out
ret
xchg
mov
sti
fnstsw
js
out
ret
stos
loop
mov
sub
mov
sbb
cwde
inc
imul
cmp
mov
in
mov
mov
ins
sub
add
js
lahf
add
std
test
adc
sub
inc
jns
in
ins
mov
xor
ins
sub
shr
shr
or
mov
cmp
or
call
or
ror
cli
ins
int
inc
sbb
adc
push
mov
mov
ins
cmps
stc
push
inc
sar
xchg
rcr
xchg
mov
cmc
std
test
xchg
fsubr
cmp
dec
icebp
out
xor
inc
xchg
mov
push
pop
mov
sub
icebp
jnp
stc
and
repnz
pop
out
dec
pusha
jg
pop
push
pushf
cmp
mov
inc
out
je
sub
cmc
jl
xor
mov
sub
push
push
mov
cmc
std
xchg
div
std
test
xchg
xchg
int
xor
xchg
pop
or
daa
sub
dec
jb
sub
jp
gs
in
nop
outs
mov
pop
jae
inc
mov
pop
dec
inc
in
xchg
xchg
shl
xchg
pop
ins
test
out
out
fs
mov
icebp
das
xor
scas
repz
pop
jge
fsub
js
xchg
test
mov
ins
cmps
or
(bad)
ins
call
arpl
cmp
outs
call
arpl
cmp
outs
call
arpl
cmp
push
cmps
ja
movs
js
out
push
xor
lock
push
popa
cmp
std
xchg
test
mov
ins
test
lods
push
sahf
mov
mov
arpl
ins
scas
push
gs
in
js
in
sti
push
outs
test
lods
jp
mov
cmp
mov
jp
leave
icebp
inc
out
dec
jl
fisub
js
sbb
ja
sub
js
sub
sbb
mov
ins
cmps
ja
cmp
push
sub
sbb
mov
xor
sti
jo
sub
test
repz
mov
push
push
loop
xor
xchg
and
mov
js
jns
ins
cmps
xchg
cwde
arpl
cmp
cmp
stos
add
cmps
js
arpl
cmp
inc
xchg
pop
xchg
in
fwait
inc
mov
and
inc
mov
xchg
and
mov
sbb
icebp
inc
out
dec
jnp
push
mov
cmp
mov
inc
rcr
mov
push
ins
cmps
js
cmp
mov
or
std
jl
sub
imul
xor
jns
ins
cmps
clc
test
or
cmp
jp
xor
cmp
movs
clc
test
or
push
outs
daa
inc
mov
xchg
and
mov
push
dec
js
ins
sar
test
sti
jo
sub
test
repz
mov
mov
sub
jns
out
dec
jl
cmp
lods
imul
sub
xchg
out
clc
test
or
push
outs
daa
inc
mov
xchg
and
mov
sbb
mov
mov
jbe
xchg
cmps
js
sbb
js
je
jae
ins
cmps
repz
jl
sub
imul
js
ins
loopne
inc
ins
mov
iret
inc
xchg
pop
daa
out
outs
mov
push
pusha
hlt
cs
xchg
mov
repz
dec
mov
cdq
js
gs
inc
test
inc
test
xor
stos
push
push
outs
cmps
js
stos
shl
mov
imul
into
in
jl
call
out
mov
not
loope
mov
ja
push
cmps
js
dec
call
out
ret
xchg
test
js
lock
push
cmp
clc
ins
sahf
cmp
lahf
out
xor
cmc
cld
jae
repz
sahf
cmps
mov
mov
sub
cld
jb
repz
cwde
cs
clc
ins
and
mov
xchg
mov
xchg
cmps
mov
mov
push
mov
icebp
test
mov
sti
jo
mov
mov
in
cmp
icebp
mov
ins
hlt
cs
repnz
mov
(bad)
cli
ins
dec
or
xchg
pop
sti
jl
clc
es
fs
popf
ins
cmps
nop
xchg
xor
lock
mov
jmp
cmps
nop
mov
ins
cmps
js
pop
mov
xchg
popa
std
dec
sbb
out
mov
jg
rol
xchg
cmps
or
dec
sbb
push
mov
jns
jbe
lds
pop
xchg
jmp
daa
inc
mov
outs
sar
xor
xchg
xor
xchg
pop
adc
sub
sbb
mov
ins
cmps
repz
in
in
call
fidiv
mov
pop
adc
sub
sbb
mov
in
fsub
pop
xchg
dec
aas
loope
cmps
repz
in
ins
cwde
std
out
cmp
push
xchg
inc
xchg
cmps
ja
jmp
int3
mov
data16
in
mov
xchg
pop
mov
inc
ins
test
sub
lods
inc
jp
push
mov
sub
js
call
test
sub
lods
inc
jp
js
sub
sub
js
inc
xchg
mov
clc
add
ins
test
das
ins
cmps
js
divps
addr16
pop
xchg
out
lods
addr16
pop
icebp
imul
icebp
pusha
imul
xchg
ins
mov
mov
ins
cmps
icebp
jle
push
jns
mov
xchg
inc
xchg
loopne
jnp
mov
mov
xchg
pop
push
outs
loope
cld
xchg
pop
sub
(bad)
js
xchg
mov
sti
sbb
ins
dec
hlt
mov
xchg
cmps
js
(bad)
inc
xchg
pop
int
mov
xchg
pop
xchg
arpl
pop
jno
sbb
sti
sbb
ins
sub
cmp
xchg
xchg
mov
xchg
mov
cmp
mov
and
mov
sbb
gs
inc
ins
mov
stc
inc
xchg
movs
js
push
test
pusha
imul
xchg
es
cmp
ror
inc
sbb
mov
in
and
ins
cmps
repz
inc
pop
xchg
sbb
jmp
int3
fsub
js
fnstcw
inc
xchg
dec
jecxz
ins
cmps
xchg
clc
outs
cmps
js
fidiv
mov
pop
mov
lods
dec
cmp
xchg
pop
sti
sbb
ins
sub
dec
sbb
mov
jp
lea
je
in
ins
push
mov
xchg
stc
push
xchg
inc
xchg
call
push
outs
cwd
mov
cmps
daa
jb
xchg
and
cwde
dec
xchg
mov
xchg
in
sbb
int
iret
es
cmp
cmps
inc
xchg
cs
mov
lock
inc
out
add
mov
xchg
jmp
sub
and
mov
in
xchg
pop
repz
out
in
xchg
pop
jnp
in
call
cmp
out
lods
addr16
pop
icebp
cmp
push
mov
xchg
pop
int
mov
xchg
lock
out
lods
addr16
pop
inc
cmp
sbb
repz
in
int3
addr16
pop
jns
mov
xchg
sbb
int
iret
js
push
adc
xchg
pop
mov
sub
lods
dec
je
add
js
ins
pop
in
adc
pop
xchg
pop
jge
fsub
js
fidiv
mov
pop
mov
fs
xchg
xchg
cs
pop
xor
mov
sbb
mov
jmp
dec
sbb
ins
mov
mov
ins
cmps
icebp
cmp
gs
or
js
in
fidiv
arpl
inc
mov
cwde
dec
xchg
adc
test
clc
lds
cmp
cmps
js
test
dec
sbb
js
jns
ins
cmps
sti
push
xchg
sub
push
pop
xchg
add
inc
xchg
cmps
sti
adc
imul
sub
pushf
and
mov
jb
mov
test
xor
js
data16
test
jno
xchg
mov
arpl
in
sbb
movs
icebp
or
add
sbb
adc
test
repz
ins
and
inc
loope
dec
mov
xchg
pop
xchg
cmp
push
xchg
mov
and
inc
push
repnz
in
aas
adc
cmps
inc
xchg
aad
cmp
add
inc
xchg
cmps
ja
stc
add
inc
xchg
call
sbb
pop
xchg
cmps
clc
test
js
ins
cmps
or
mov
sbb
js
ins
cmps
or
mov
sbb
js
ins
cmps
or
sub
fisub
(bad)
pop
jno
adc
clc
lds
movs
arpl
std
dec
sbb
xchg
adc
mov
rol
mov
sbb
int3
cs
dec
sbb
out
mov
pop
mov
jns
movs
mov
inc
out
ins
push
mov
xchg
push
dec
xchg
sbb
ins
cmps
or
mov
xchg
xchg
nop
pop
xchg
jmp
cmps
ja
jmp
int3
mov
data16
in
mov
xchg
pop
daa
out
outs
mov
push
push
hlt
cs
out
jo
sub
movs
mov
scas
inc
mov
ins
sub
add
ins
cmps
js
enter
jne
js
loope
lods
xor
ins
push
ja
ins
cmps
mov
fidiv
cli
ins
push
jg
ins
cmps
mov
pushf
pop
int
in
std
xchg
cmp
mov
ins
popa
cmp
xor
into
in
fwait
popf
cmp
mov
jle
sub
push
data16
cmp
dec
jge
pushf
add
mov
sub
std
xchg
popa
cmp
mov
arpl
sub
ins
arpl
idiv
xchg
cmps
ja
das
cmps
inc
js
cmps
js
add
jp
repnz
cmps
js
out
pop
cmp
push
test
sti
ins
cs
inc
push
mov
cmp
push
test
sti
ins
push
cmp
mov
jl
sub
mov
in
popf
lods
cmps
js
push
daa
js
ins
sar
pop
jl
sub
jp
gs
in
xchg
test
mov
ins
shl
das
cmps
inc
int
daa
cmp
dec
ins
daa
add
jmp
pop
xchg
push
js
jp
jnp
(bad)
lea
push
cmp
cmp
push
jns
adc
retf
cmp
jp
repnz
cmps
js
push
test
std
xchg
clc
es
fs
jmp
lock
sbb
out
mov
call
(bad)
cs
inc
ins
cmps
js
push
cmps
nop
fidivr
cmps
js
popf
and
inc
sub
inc
mov
stos
dec
jbe
push
cdq
and
imul
ins
cmps
xchg
mov
adc
pusha
fwait
inc
icebp
std
xchg
cs
jnp
cs
add
js
test
sub
or
fwait
mov
xor
std
inc
mov
xchg
stos
sub
mov
and
xchg
pop
sub
icebp
js
loope
js
xchg
pop
sub
cmps
js
out
arpl
call
out
outs
mov
pop
sahf
(bad)
or
ins
cmps
adc
fs
push
popf
hlt
js
xor
mov
push
jl
cs
rol
ins
loope
es
shr
mov
push
cmps
adc
in
pop
or
mov
xchg
pop
or
mov
pusha
and
mov
in
(bad)
pop
in
mov
stos
int
out
test
sub
lods
mov
shr
outs
jmp
xchg
mov
pop
in
mov
stos
int
cmp
stos
js
fs
mov
loop
push
push
cmp
inc
sbb
inc
sbb
push
jns
js
cmp
jmp
nop
dec
jle
sub
ins
clc
es
fs
mov
icebp
das
pop
in
iret
loop
in
dec
inc
in
adc
ins
int
shr
shr
js
shl
test
popa
sti
inc
xchg
sar
dec
sbb
adc
icebp
std
xchg
cs
shr
jle
cmps
js
sub
xchg
in
fwait
jns
sbb
jnp
cmps
cmc
in
nop
cmc
sub
stos
cs
jge
js
push
cmps
cmc
std
nop
not
mov
ins
icebp
nop
inc
cmp
cmp
mov
mov
cmp
xor
cmps
daa
out
outs
mov
call
js
inc
xor
js
in
cmps
js
push
mov
adc
sbb
js
stos
and
inc
sbb
icebp
inc
fwait
inc
icebp
std
xchg
cs
shr
xchg
cmp
sub
test
shl
and
mov
cmp
js
lods
out
mov
in
daa
out
fs
out
cmp
xor
stos
push
cmp
pop
lds
in
xchg
mov
ins
fs
adc
add
out
test
scas
cmps
mov
inc
sbb
js
fxtract
js
add
cwde
cli
ins
dec
shr
ins
cmps
sti
jl
xchg
mov
mov
mov
js
stc
hlt
js
out
arpl
push
cli
je
test
inc
xchg
jle
cdq
push
call
je
pushf
sub
inc
in
jns
in
test
add
cwde
cli
ins
dec
sbb
ins
cmps
sti
jl
clc
es
fs
out
cmp
jg
pop
xchg
(bad)
aad
stc
std
nop
pop
ss
cmps
nop
mov
cmps
js
pop
pop
xchg
stos
arpl
jl
cmp
dec
pop
cmps
nop
call
aas
sbb
mov
mov
nop
cs
inc
xor
and
repnz
pop
out
dec
pop
jmp
lock
aaa
pop
push
push
mov
mov
std
mov
js
or
cmp
inc
js
adc
(bad)
neg
cmp
ins
push
fnsave
mov
mov
test
sar
stos
loop
mov
arpl
cmp
inc
pop
retf
cmps
(bad)
pop
in
movs
xor
test
cld
imul
push
in
fiadd
aad
movs
stc
dec
sub
mov
sbb
pusha
test
clc
outs
das
cmp
jnp
mov
cmp
mov
ins
loop
cmp
pop
jp
push
daa
adc
inc
ins
shr
xor
adc
cmp
test
lods
retf
ins
test
in
mov
pushf
xor
dec
icebp
jo
loop
mov
jmp
ins
loop
xor
stos
ja
sub
repz
fs
jmp
call
mov
bound
ja
sub
repz
fs
jmp
repz
mov
es
sbb
cld
aaa
call
clc
ins
aaa
ret
in
loop
js
aad
or
adc
std
js
aaa
call
sub
aaa
dec
mov
aaa
call
sub
aaa
cmp
cld
aaa
call
sub
aaa
cmp
cld
aaa
call
sub
aaa
or
sub
cmps
enter
ret
push
aad
imul
aaa
call
sub
aaa
dec
mov
aaa
call
sub
aaa
inc
pusha
cld
aaa
call
sub
aaa
sbb
cld
aaa
call
test
cld
aaa
call
mov
cld
aaa
call
test
call
mov
cld
aaa
call
sub
sub
mov
aaa
call
sub
and
mov
cmps
aaa
call
sub
aaa
call
sub
and
mov
movs
aaa
call
sub
aaa
call
inc
xchg
cmps
push
clc
ins
scas
or
adc
cdq
cli
ins
dec
imul
aaa
call
clc
ins
aaa
adc
aaa
call
inc
ins
aaa
call
sub
aaa
ret
in
loop
js
in
call
jns
aaa
call
sub
aaa
sub
cld
aaa
call
sub
aaa
(bad)
dec
cld
aaa
call
sub
aaa
and
cld
aaa
call
inc
adc
dec
mov
aaa
call
sub
aaa
call
cmps
enter
sti
inc
ins
aaa
call
sub
aaa
ret
push
in
call
jns
aaa
call
sub
aaa
sub
cld
aaa
call
sub
aaa
(bad)
dec
cld
aaa
call
sub
aaa
and
cld
aaa
call
or
cld
aaa
call
sub
aaa
call
aaa
call
push
push
mov
inc
scas
fs
mov
icebp
das
xor
scas
repz
pusha
shl
pusha
pusha
cmp
out
loop
xor
dec
icebp
std
test
push
in
pushf
xor
pop
dec
dec
in
cwde
xor
jnp
fisttp
test
stos
loop
mov
ins
cmps
rol
cmps
js
or
std
mov
jg
dec
cmp
adc
pop
and
scas
das
sub
mov
xchg
cmps
xchg
xchg
test
aaa
mov
aam
pop
mov
ins
cmps
ja
cmp
inc
jbe
dec
xchg
cs
dec
xchg
cs
mov
js
pop
iret
jl
mov
push
jl
into
cmc
xchg
mov
mov
ins
cmps
or
dec
sub
into
test
adc
test
loop
xor
pop
adc
ins
sub
imul
push
sub
mov
mov
loope
mov
mov
cmps
js
push
cmp
mov
and
shl
cmps
js
or
std
mov
popa
jle
xchg
loop
mov
loop
lock
popa
ja
bound
inc
xor
and
repnz
pop
out
dec
dec
jmp
lock
out
rdtsc
pushf
xchg
mov
stos
dec
out
ins
cmps
ret
movs
mov
push
ins
ins
mov
cmps
inc
ins
icebp
push
cmp
test
sar
lods
dec
dec
mov
mov
xchg
fs
loope
xchg
pop
sti
jl
cs
movs
outs
cmps
js
fcmovu
xchg
jns
movs
rep
push
or
cli
ins
mov
sbb
mov
adc
mov
ficom
mov
(bad)
cmps
mov
ins
lock
dec
and
js
mov
jge
shl
js
sub
push
test
js
out
arpl
movs
sbb
mov
jnp
mov
xor
test
cmps
dec
test
loop
mov
ins
movs
jge
shl
js
sub
popa
int
(bad)
cs
pusha
outs
loop
xor
(bad)
xchg
push
sbb
mov
inc
std
xchg
aad
push
(bad)
mov
int
js
out
movs
mov
pop
icebp
jp
adc
outs
in
test
cmps
nop
and
nop
(bad)
and
ja
xchg
cs
pop
jl
scas
xor
(bad)
es
add
js
sub
rol
mov
sub
jmp
movs
sbb
mov
jnp
mov
xor
test
cmps
dec
test
loop
mov
ins
movs
jge
shl
js
sub
popa
int
(bad)
cs
dec
ins
push
icebp
jle
jg
std
pushf
sub
fs
js
jl
cmp
add
mov
cmp
mov
cmps
mov
ins
test
in
xor
js
cwde
add
mov
stos
inc
xor
in
mov
repnz
imul
stos
movs
add
push
daa
add
cmp
dec
pusha
xor
icebp
jle
adc
mov
ins
not
cmp
cmps
adc
add
js
sub
or
mov
push
cmps
cmc
std
test
xchg
mov
xchg
mov
icebp
ins
cmps
icebp
dec
fwait
inc
icebp
std
mov
inc
nop
repnz
js
test
mov
xor
and
repnz
pop
in
dec
pusha
mov
cmp
or
in
icebp
dec
fwait
inc
icebp
cmp
in
stc
mov
(bad)
cmps
js
loope
xchg
cmps
rcl
cmps
js
mov
std
push
xchg
pop
xchg
stos
dec
(bad)
rep
cmps
ret
lds
in
(bad)
push
lods
pop
jg
xchg
mov
and
stos
and
stc
in
lock
in
push
pop
xchg
std
xchg
cmps
xchg
xchg
test
mov
xchg
sbb
sub
lods
push
xchg
jns
mov
mov
mov
sbb
clc
call
xchg
cmps
repnz
xchg
fwait
jo
cmps
popa
std
mov
test
xor
scas
cmps
or
inc
xchg
pop
dec
jle
mov
cmc
cmp
cmp
call
dec
mov
js
jmp
not
xor
js
ins
int
shr
shr
clc
loope
add
sub
out
js
in
mov
pop
icebp
dec
inc
push
icebp
jle
shl
in
cmp
ins
cmps
adc
xchg
pop
sub
ins
mov
(bad)
pop
int
xchg
pop
xchg
out
js
xchg
adc
sub
int3
cli
ins
hlt
adc
in
xor
xchg
not
cmp
sub
inc
xchg
pop
xchg
add
cmps
cli
ins
sub
inc
xchg
pop
xchg
add
js
in
dec
inc
mov
sbb
cmp
ins
iret
mov
cmps
cmc
cmp
cmp
js
ins
daa
nop
movs
ins
cmps
js
add
cmps
cli
ins
iret
add
mov
cmps
js
out
arpl
xor
mov
cmp
popf
jmp
out
ins
pop
dec
in
fisub
in
xchg
in
pusha
je
ins
cmps
sti
fst
div
std
nop
not
mov
ins
int
shr
inc
sbb
pop
icebp
ins
cmps
icebp
dec
out
outs
xchg
in
fwait
jns
sbb
std
xchg
cmp
pop
shr
js
sbb
pop
icebp
ins
cmps
xchg
nop
dec
cmp
ins
cmps
daa
out
outs
mov
pop
pop
nop
cli
vmaxpd
in
xchg
js
sub
ins
cmps
adc
xchg
shr
sbb
dec
mov
je
and
out
ror
sbb
cs
xor
sbb
or
mov
xor
mov
call
loope
stc
jg
test
mov
loope
test
push
cmps
adc
ins
int
shr
mov
shl
leave
out
js
gs
pop
addr16
(bad)
xchg
shl
sbb
js
sbb
iret
lock
cmps
jno
sbb
push
ins
cmps
dec
js
mov
push
in
jmp
sbb
js
pop
addr16
movs
fs
lods
cmp
repz
sub
mov
rcl
ret
mov
add
js
fwait
inc
icebp
std
pushf
cs
std
nop
not
mov
ins
pop
or
push
push
out
js
gs
pop
addr16
test
loop
call
ins
pop
or
push
inc
out
js
gs
xchg
rol
pop
addr16
mov
ins
push
lahf
xor
dec
icebp
jg
rol
arpl
cmp
jnp
cs
jmp
retf
lods
cmc
clc
in
push
inc
in
sti
test
rcr
and
js
cmp
lahf
(bad)
ins
cmps
icebp
std
xchg
push
test
cmps
inc
std
xchg
rcl
xchg
cmps
xor
xchg
mov
mov
ins
int
shr
ror
pop
ds
cmps
jno
sbb
icebp
inc
ins
pop
icebp
jg
xchg
test
cmps
nop
sub
daa
out
fs
ins
arpl
movs
xchg
mov
lods
sub
pushf
push
in
xor
mov
call
sbb
cmp
xchg
out
test
scas
mov
xchg
push
stos
or
pusha
cmp
mov
jl
(bad)
ins
cmps
sti
jl
adc
mov
test
cmps
js
xchg
and
mov
push
cdq
js
test
daa
inc
xchg
xor
or
jle
cmps
shl
js
or
std
xchg
cs
push
push
mov
sub
adc
mov
in
jns
cmp
or
mov
in
dec
jp
repnz
mov
adc
mov
inc
iret
int
mov
scas
repnz
pop
out
dec
push
in
sbb
dec
pop
push
icebp
jle
dec
jmp
ins
cmps
icebp
std
xchg
cs
mov
int
push
lods
in
mov
adc
mov
jp
into
mov
gs
arpl
jl
out
push
or
push
pop
or
pusha
cmp
lock
add
and
shl
pop
icebp
outs
out
popa
sbb
in
shl
dec
mov
push
outs
cs
jg
lock
in
out
test
ds
or
inc
arpl
cmp
retf
cmp
jno
repnz
pop
aam
js
ins
dec
(bad)
stc
ins
cmps
sub
cmp
add
fld
js
out
add
leave
dec
xchg
cmps
icebp
dec
inc
push
icebp
jle
and
inc
sbb
xchg
test
icebp
jnp
jl
mov
cmps
js
rcr
inc
xchg
cmps
or
cli
ins
cmps
dec
js
xor
pop
or
mov
xchg
pop
xchg
jne
js
fwait
add
cmp
out
mov
add
pop
sub
ins
xchg
pop
xchg
ins
cmps
das
shr
jmp
ins
cmps
icebp
cmp
aam
xor
xor
ja
inc
xchg
cs
mov
and
jns
in
repz
fs
je
pop
xchg
lods
and
inc
sub
inc
mov
stos
int
xor
imul
test
mov
xchg
and
mov
repnz
cli
ins
pop
or
mov
add
cmps
cli
ins
pop
int
xchg
pop
xchg
loop
mov
add
js
aad
js
ins
pop
pop
jge
jg
mov
cmps
xchg
test
cmp
mov
out
cmp
mov
xchg
and
mov
sub
js
cmc
push
sub
xchg
pop
das
rcl
cmp
ins
cmps
sti
jl
pop
data16
cmps
(bad)
pop
in
mov
xchg
pop
icebp
jle
mov
jb
ins
cmps
loope
xchg
and
mov
mov
js
fstp
inc
xchg
dec
pop
std
ins
cmps
sti
jl
iret
dec
cmps
xchg
test
mov
mov
ins
cmps
loope
xchg
and
mov
mov
js
fstp
inc
xchg
dec
xchg
cld
ins
cmps
sti
jl
mov
cs
jl
pop
xchg
stos
dec
jecxz
ins
cmps
shl
pop
sti
inc
imul
js
aad
js
ins
pop
sub
inc
xchg
pop
xchg
add
cmps
cli
ins
lock
sub
xchg
dec
iret
push
cmps
repz
cmp
pop
cmps
sub
jecxz
mov
and
lods
js
ins
pop
pop
jge
jg
mov
cmps
xchg
test
cmp
ins
and
mov
lods
cmps
cli
ins
pop
int
xchg
pop
xchg
jecxz
mov
pushf
mov
cld
ins
cmps
shl
pop
sti
inc
imul
cmp
xchg
pop
nop
xchg
sub
adc
fstp
inc
xchg
dec
outs
cld
ins
cmps
sti
jl
dec
stos
sti
ins
cmps
shl
pop
sti
inc
imul
js
aad
js
ins
pop
sub
inc
xchg
pop
xchg
add
cmps
cli
ins
lock
push
das
cmps
js
test
stc
dec
jno
js
test
cmp
ins
cmps
loope
xchg
cmc
adc
in
xor
xchg
lock
cs
cmps
js
jmp
test
call
ins
not
cmp
cmps
js
cmps
js
cmc
push
cmp
test
cmp
ins
cmps
loope
xchg
cmc
repz
cmp
inc
cmps
das
push
sub
js
out
arpl
dec
in
mov
ins
pop
pop
jge
jg
mov
cmps
xchg
test
cmp
in
push
sub
inc
cmps
js
cmps
js
cmc
push
cmp
add
cmps
cli
ins
pop
int
xchg
pop
xchg
in
mov
mov
lods
js
ins
pop
pop
jge
jg
mov
cmps
xchg
test
mov
add
cmps
cli
ins
pop
or
inc
xchg
pop
sub
idiv
mov
ins
cmps
sti
jl
dec
jmp
ins
cmps
shl
pop
sti
inc
imul
cmp
xchg
pop
nop
or
cmps
js
test
rcr
cmps
js
mov
std
js
pop
xchg
stos
dec
daa
cli
ins
cmps
shl
pop
sti
inc
imul
cmp
xchg
pop
nop
(bad)
cmps
js
test
nop
sub
js
cmps
js
cmc
push
cmp
test
sbb
xchg
cmc
repz
cmp
inc
cmps
das
push
dec
in
mov
adc
jns
ins
and
add
pop
xchg
ins
popa
std
mov
in
dec
and
ins
cmps
sti
sbb
ins
dec
push
xor
sbb
add
pop
xchg
aam
xor
sbb
add
fwait
inc
xor
loope
xchg
and
fnstcw
add
cmps
js
(bad)
call
call
pop
test
jo
jg
lock
add
cmp
and
cmps
cmc
add
cmp
stc
ins
cmps
sti
jl
mov
jmp
lds
xchg
pop
xchg
ins
cmps
js
out
fld
dec
xchg
pop
xchg
mov
xchg
sub
inc
xchg
pop
xchg
add
cmps
cli
ins
not
cmp
cmps
js
cmps
js
cmc
push
cmp
add
cmps
cli
ins
pop
int
xchg
pop
xchg
out
mov
pushf
mov
stc
ins
cmps
shl
pop
sti
inc
imul
cmp
xchg
pop
nop
call
nop
data16
js
cmps
js
cmc
push
cmp
add
cwde
cli
ins
pop
int
xchg
pop
xchg
out
mov
jmp
daa
js
ins
pop
std
dec
xchg
pop
xchg
jmp
sahf
std
add
pop
xchg
xchg
cs
push
xchg
pop
xchg
pushf
cmps
mov
stos
dec
repnz
jo
std
inc
xchg
pop
xchg
cmps
js
in
sbb
xchg
pop
js
call
mov
sub
js
jmp
test
in
ins
cmps
js
jmp
cs
push
xchg
pop
xchg
mov
loope
in
xor
xchg
not
cmp
pop
test
outs
xchg
in
fwait
jns
sbb
jg
lds
xchg
pop
xchg
stos
test
std
mov
arpl
std
push
xchg
pop
xchg
xchg
pop
sub
pushf
js
loope
mov
pop
sub
pop
xchg
arpl
push
xchg
pop
int
xchg
pop
xchg
mov
test
and
or
mov
ins
cmps
sti
jl
pop
pushf
clc
ins
cmps
(bad)
pop
in
rol
repz
in
nop
push
push
cmps
js
cmps
js
cmc
push
cmp
add
cmps
cli
ins
pop
int
xchg
pop
xchg
cwde
js
out
arpl
in
cwde
js
aad
js
ins
pop
pop
jge
jg
mov
cmps
xchg
test
inc
mov
test
inc
mov
ins
cmps
loope
xchg
and
mov
mov
js
fstp
inc
xchg
dec
add
fs
int
xchg
pop
xchg
pushf
js
in
push
inc
out
cmps
xchg
loope
js
xchg
pop
sub
pop
xchg
hlt
nop
mov
test
icebp
cmp
gs
call
popf
cmps
cli
ins
pop
int
xchg
pop
xchg
cwde
js
out
arpl
test
js
ins
pop
pop
jge
jg
and
or
test
mov
mov
ins
cmps
loope
xchg
and
mov
mov
js
fstp
inc
xchg
dec
fwait
xchg
jl
mov
cmc
cdq
js
aad
js
ins
pop
pop
jge
jg
mov
cmps
xchg
test
inc
mov
add
cmps
cli
ins
pop
int
xchg
pop
xchg
cdq
js
out
arpl
or
lods
js
ins
pop
pop
jge
dec
dec
aaa
xchg
fld
and
pop
xchg
lock
test
inc
mov
test
jb
ins
cmps
loope
xchg
and
mov
mov
js
fstp
inc
xchg
dec
xor
fs
fmul
cmps
js
ins
cdq
js
aad
js
ins
pop
pop
jge
jg
mov
cmps
xchg
test
mov
mov
ins
cmps
loope
xchg
and
mov
mov
js
fstp
inc
xchg
dec
add
dec
iret
test
mov
cmps
js
fwait
pop
sti
inc
imul
js
aad
js
ins
pop
sub
inc
xchg
pop
xchg
add
cmps
cli
ins
lock
sbb
js
test
adc
fstp
inc
xchg
dec
retf
test
jl
mov
cs
add
pop
xchg
stos
dec
sbb
ins
cmps
js
fwait
pop
sti
inc
imul
cmp
xchg
pop
nop
cmp
js
test
adc
pop
xchg
dec
pop
test
jl
dec
push
test
mov
cmps
js
fwait
pop
sti
inc
imul
cmp
xchg
pop
nop
repnz
cmps
js
test
adc
fstp
inc
xchg
dec
dec
test
jl
mov
sbb
pop
pop
jge
jg
mov
cmps
xchg
test
mov
inc
xchg
pop
sub
jmp
not
mov
test
mov
test
inc
mov
ins
cmps
loope
xchg
and
mov
mov
js
fstp
inc
xchg
dec
mov
ins
cmps
sti
jl
mov
ins
jns
mov
xchg
pop
nop
or
js
test
nop
(bad)
push
cmps
js
cmps
js
cmc
push
cmp
add
cwde
cli
ins
pop
int
xchg
pop
xchg
fwait
js
out
arpl
and
dec
jnp
ins
pop
jo
jg
cmp
sub
inc
xchg
pop
xchg
add
movs
cli
ins
lock
xchg
js
test
nop
cmps
push
cmps
js
cmps
js
cmc
push
cmp
add
cwde
cli
ins
pop
int
xchg
pop
xchg
fwait
js
out
arpl
mov
cmp
xchg
pop
nop
xchg
push
cmps
js
test
icebp
dec
inc
push
icebp
jle
inc
inc
mov
ins
cmps
loope
xchg
and
mov
mov
js
fstp
inc
xchg
dec
xchg
fs
ret
sub
ins
cmps
js
fwait
pop
sti
inc
imul
js
aad
js
ins
pop
sub
inc
xchg
pop
xchg
add
cmps
cli
ins
lock
push
push
cmps
js
test
adc
in
inc
fstp
inc
xchg
dec
iret
sub
fs
shr
shr
shr
clc
xchg
shl
pop
lahf
js
in
nop
inc
xchg
pop
stc
jle
movs
js
xchg
adc
push
cmps
js
ins
sub
dec
xchg
pop
xchg
cmp
int
xchg
pop
xchg
dec
xchg
dec
test
test
int
xchg
pop
xchg
nop
js
in
(bad)
pop
in
rol
icebp
jle
dec
(bad)
(bad)
ins
cmps
repz
xor
and
repnz
pop
in
dec
jl
ins
cmps
das
pop
xor
dec
inc
in
mov
sub
vpunpcklqdq
sub
out
cmp
xchg
pop
sub
popf
js
push
cmps
adc
mov
js
jmp
not
mov
mov
inc
out
arpl
pop
jns
sub
mov
add
movs
cli
ins
iret
xor
cmps
adc
rcl
inc
add
movs
cli
ins
iret
mov
push
mov
js
outs
cmps
js
test
mov
and
cwde
in
dec
inc
in
daa
jno
repnz
pop
in
dec
in
ins
cmps
sub
cmp
stc
test
lahf
shl
cs
cmp
and
and
pop
xchg
push
cmps
ja
lods
and
mov
xchg
pop
repz
fs
mov
in
hlt
inc
xchg
pop
icebp
inc
inc
pop
icebp
jg
jl
std
fs
push
sbb
bnd
cmp
fadd
pop
cs
xor
add
pop
xchg
test
dec
mov
out
add
pop
cmc
in
data16
cmp
stc
aas
test
adc
(bad)
dec
mov
xchg
pop
xchg
pop
test
dec
outs
(bad)
ins
cmps
icebp
cmp
xchg
adc
inc
xchg
pop
nop
mov
cmp
xchg
repz
out
or
pop
cmc
in
data16
cmc
in
outs
cmps
cmp
stc
das
test
iret
js
cmps
nop
push
pop
cmps
js
jmp
int
shr
sbb
pop
xchg
test
or
xchg
js
cmp
adc
ins
cmps
js
jmp
not
pop
mov
js
fdivr
mov
in
dec
adc
sti
jl
scas
mov
push
cmps
js
lods
dec
adc
xchg
pop
xchg
push
and
jmp
not
inc
fnstenv
test
pop
int
xchg
pop
xchg
sub
xor
aas
test
pop
int
xchg
pop
xchg
loope
int3
inc
xchg
pop
sub
push
xchg
arpl
jmp
scas
mov
rcr
js
lods
dec
jp
ins
cmps
adc
mov
js
jmp
not
xor
std
or
pop
xchg
loope
test
pop
sub
lahf
js
test
inc
xchg
cs
cmp
pop
xchg
stos
cmps
pop
mov
ins
sub
add
fwait
inc
mov
stos
and
inc
xchg
pop
cmp
ins
cmps
rcl
cmps
js
mov
std
aam
pop
xchg
stos
pusha
std
pop
xchg
pop
xchg
stos
and
mov
xchg
pop
js
jo
mov
inc
ins
cmps
stc
push
push
iret
js
loope
rol
sub
dec
xchg
sub
sbb
pop
xchg
loope
rol
sub
ins
int
ror
shr
xor
xchg
not
mov
ins
scas
mov
mov
xchg
pop
xchg
xchg
js
in
dec
loope
ins
cmps
xchg
add
cmps
cli
ins
iret
add
cmp
cmp
mov
jl
popa
std
rcl
mov
inc
inc
pop
icebp
jg
and
sbb
mov
ins
cs
rol
dec
mov
xchg
pop
xchg
xchg
pop
inc
mov
sbb
adc
add
sbb
inc
xchg
pop
js
iretw
js
ins
cmps
nop
out
pop
cmps
js
jnp
js
fwait
inc
icebp
cmp
in
adc
pop
xchg
imul
push
test
cmps
adc
mov
js
jmp
not
cmp
cmps
js
dec
and
and
pop
xchg
in
xchg
scas
out
add
inc
xchg
pop
js
cmp
mov
leave
cmp
cmp
cmp
adc
stc
js
cmp
mov
mov
xchg
pop
nop
bound
js
fld
test
dec
ret
mov
cmp
xchg
icebp
jg
stc
and
mov
sti
push
js
cs
out
ins
pop
dec
mov
(bad)
pop
in
mov
stos
xchg
xor
pop
or
mov
in
xchg
stos
nop
bound
js
scas
shl
nop
pop
or
mov
in
mov
test
mov
in
mov
cmp
mov
xchg
test
in
nop
cmps
test
fcomi
mov
cwde
sub
inc
not
mov
ins
cs
movs
ins
test
js
loop
xor
or
sub
clc
cmp
stos
lea
jl
pop
or
js
not
inc
sbb
cmc
cld
push
cmp
test
dec
mov
arpl
cmp
mov
loope
push
mov
inc
ins
pop
icebp
jg
test
std
xchg
sub
imul
mov
test
cmp
out
add
sub
ins
int
shr
mov
jle
pop
dec
inc
in
adc
dec
ret
mov
std
xchg
imul
push
and
dec
or
xchg
clc
es
fs
cmps
ins
cmps
nop
and
jmp
lock
sbb
inc
ins
pop
icebp
jg
and
pop
xchg
pop
cmp
sti
fnstcw
loope
les
pop
sub
xchg
not
fidiv
mov
in
jno
arpl
loope
ins
cmps
icebp
inc
pop
pop
icebp
jg
pop
int
mov
push
fst
jo
lods
rcr
fldcw
inc
xchg
pop
or
mov
ins
cmps
(bad)
pop
in
rcr
icebp
jg
cmp
pusha
std
add
pop
xchg
jae
js
jmp
div
cmp
cmp
nop
ss
cmps
js
lods
rol
fwait
mov
xchg
test
dec
mov
gs
pop
xchg
pop
xchg
pusha
dec
mov
fwait
inc
icebp
cmp
in
dec
js
dec
jl
enter
xor
mov
cmp
popf
add
js
test
push
mov
out
jo
das
cmp
mov
jmp
cs
jmp
mov
adc
out
outs
xchg
in
fwait
jns
sbb
jg
scas
icebp
bound
sub
sbb
sar
js
mov
ins
cmps
sti
jl
pop
cmp
ins
cmps
(bad)
pop
in
mov
pop
repz
in
icebp
dec
pop
push
icebp
jle
jmp
std
mov
test
mov
mov
ins
cmps
loope
xchg
and
mov
mov
js
jmp
not
cmp
fdivr
test
dec
mov
ins
cmps
loope
xchg
and
mov
pop
cmps
js
(bad)
js
cmc
push
sub
xchg
pop
das
shl
cmp
xchg
pop
das
push
icebp
xchg
js
out
arpl
adc
mov
out
pop
jge
js
mov
cmps
cmc
cmp
cmp
jecxz
ins
cmps
sti
jl
iret
dec
cmps
cmc
cmp
cmp
dec
fs
cs
push
mov
xchg
stos
dec
dec
mov
mov
cmps
js
fwait
pop
sti
inc
imul
cmp
xchg
pop
sub
xchg
js
out
arpl
jge
js
aad
js
ins
pop
pop
jge
inc
dec
xchg
ins
cmps
js
fwait
pop
sub
xchg
lock
mov
js
shl
nop
dec
pop
cmps
js
test
xchg
jl
push
cmps
cmc
cmp
cmp
pop
cmps
cmc
cmp
cmp
stos
mov
jl
dec
retf
mov
mov
cmps
js
fwait
pop
sti
inc
imul
cmp
xchg
pop
sub
xchg
js
out
arpl
data16
mov
xchg
pop
sub
xchg
js
out
arpl
call
mov
mov
cmps
js
fwait
pop
sti
inc
imul
cmp
xchg
pop
sub
xchg
js
out
arpl
outs
js
mov
xchg
pop
sub
xchg
js
out
arpl
push
xchg
js
aad
js
ins
pop
pop
jge
inc
dec
pop
mov
fld
and
cmps
cwde
inc
xchg
lock
mov
js
shl
nop
cmps
pop
cmps
js
test
adc
jmp
not
cmp
cmps
js
cmps
js
cmc
push
cmp
add
cwde
cli
ins
sub
mov
test
mov
dec
in
adc
mov
js
jmp
not
cmp
cmps
js
cmps
js
cmc
push
cmp
add
cwde
cli
ins
sub
mov
test
mov
add
cmps
cli
ins
sub
mov
test
dec
mov
test
dec
mov
ins
cmps
loope
xchg
and
mov
mov
js
jmp
not
cmp
mov
mov
jmp
not
xchg
mov
js
jmp
not
cmp
cmps
js
cmps
js
cmc
push
cmp
add
cwde
cli
ins
sub
mov
test
dec
mov
add
cmps
cli
ins
sub
mov
test
mov
mov
jmp
cs
mov
ins
pop
pop
jge
js
mov
cmps
cmc
cmp
cmp
or
dec
iret
mov
push
outs
cmps
js
fwait
pop
icebp
outs
in
pusha
push
xor
xchg
lock
shl
nop
push
pop
cmps
js
test
nop
ds
cmps
js
cmps
js
cmc
push
cmp
add
cwde
cli
ins
sub
mov
test
dec
mov
add
movs
cli
ins
sub
mov
test
dec
mov
in
push
inc
xchg
(bad)
pop
cmps
js
cmps
js
cmc
push
cmp
add
cwde
cli
ins
sub
mov
test
dec
mov
test
jb
ins
cmps
loope
xchg
and
mov
pop
cmps
js
(bad)
js
cmc
push
sub
xchg
pop
das
shl
cmp
xchg
pop
das
push
imul
cmp
xchg
pop
sub
xchg
js
out
arpl
ins
int
shr
js
ins
iret
js
ins
out
push
std
mov
in
test
pop
stc
jle
fnstsw
loope
js
xchg
pop
sub
mov
push
cmps
cmc
add
cmp
cmc
add
cmp
inc
mov
xchg
mov
xchg
adc
inc
cmps
js
lods
out
mov
push
(bad)
pop
in
pushf
addr16
pop
icebp
jle
stc
and
repnz
pop
in
dec
hlt
mov
cmp
xor
rep
icebp
inc
inc
pop
icebp
jg
add
inc
xchg
pop
js
call
xor
scas
sub
mov
out
jo
cmp
test
pop
and
ins
cmps
(bad)
pop
in
cld
inc
xchg
pop
icebp
jg
not
ins
not
push
jns
xchg
cmps
scas
cli
ins
dec
sti
xchg
ins
cmps
icebp
cmp
push
mov
mov
xchg
pop
sub
mov
add
jns
ins
sub
or
pop
xchg
add
movs
cli
ins
iret
int3
fs
adc
into
inc
xchg
arpl
test
add
push
and
jmp
not
add
js
fwait
inc
icebp
cmp
in
xchg
aas
sub
or
pop
xchg
test
mov
addr16
adc
js
add
movs
cli
ins
sub
inc
xchg
pop
xchg
test
push
mov
xchg
pop
xchg
loope
test
pop
sub
mov
test
and
mov
shr
add
mov
mov
inc
in
mov
inc
sub
pushf
inc
xchg
pop
jns
ins
cmps
sti
add
ins
shl
and
mov
in
cmc
cmp
cmp
test
xchg
pop
and
xchg
div
cmp
cmp
js
ins
int
shr
shr
inc
xchg
pop
xchg
push
cmps
nop
mov
lods
test
sub
js
(bad)
test
dec
mov
rcl
js
mov
std
rcl
int
xchg
pop
xchg
jle
cmp
ins
sub
inc
xchg
pop
xchg
test
push
mov
stos
and
inc
xchg
pop
js
inc
es
xor
xchg
not
int
in
push
dec
mov
in
jno
sbb
push
add
pop
inc
xchg
pop
jns
jmp
fwait
jge
movs
scas
mov
ins
iret
js
ins
cmps
nop
repnz
cmps
js
push
and
inc
xchg
pop
sub
test
mov
xchg
cs
fs
cmc
cmp
cmp
push
or
call
mov
and
inc
xchg
pop
sub
test
pop
and
mov
addr16
fsub
xchg
loope
hlt
inc
xchg
pop
sub
mov
loope
in
xchg
pop
sub
xor
outs
xchg
pop
icebp
jle
push
rcl
pop
xchg
jecxz
mov
cmps
nop
scas
inc
cmps
js
add
movs
cli
ins
icebp
nop
dec
inc
cmps
js
test
jno
sbb
js
xchg
mov
out
in
xchg
pop
sti
push
push
hlt
icebp
jnp
push
sub
xor
outs
xchg
pop
sti
jl
dec
pop
xor
cmp
mov
xchg
test
inc
xchg
and
mov
pop
(bad)
pop
in
or
xchg
pop
icebp
jg
dec
adc
pop
xchg
cmps
js
loope
int3
inc
xchg
pop
sub
mov
push
cmps
xchg
test
adc
add
nop
ins
cmps
repz
xor
and
mov
sti
push
jl
cs
out
jo
dec
fwait
mov
pop
in
xor
hlt
nop
test
xor
push
xchg
pusha
dec
cmp
cwde
sub
jl
adc
test
push
mov
cmp
lahf
ins
cmps
sar
cmps
js
mov
cmp
push
jne
js
xchg
shl
mov
pop
mov
dec
cmps
js
sub
shr
les
out
shr
push
mov
in
icebp
inc
pop
pop
icebp
jg
pop
cs
fisttp
test
cmp
lahf
ins
cmps
cs
add
loop
push
push
adc
cld
mov
cmp
popf
add
js
test
pop
mov
call
mov
jmp
cs
mov
dec
push
mov
xchg
cmps
xor
scas
mov
push
iret
xchg
ins
push
xchg
icebp
nop
push
cmps
js
ins
pop
or
dec
xchg
pop
sub
push
xchg
arpl
pop
js
sbb
stc
jg
stc
js
push
movs
cs
cmc
(bad)
js
in
xchg
pop
xor
mov
cmp
popf
cmp
(bad)
push
xchg
in
push
xor
jg
pop
jns
xchg
icebp
inc
ins
pop
icebp
jg
adc
fs
cmc
std
cwde
not
xor
ins
iret
cmp
in
push
cmp
ins
test
std
xchg
and
mov
cmps
cmc
std
cwde
not
cmp
not
mov
ins
pop
dec
xchg
repz
push
mov
popa
mov
cmps
push
inc
sub
movaps
inc
popa
fcomi
out
fs
shl
inc
jne
adc
int
shr
shr
jns
ins
int
shr
mov
push
cmps
adc
inc
cmps
js
stos
int
out
push
xchg
xchg
test
push
mov
add
icebp
adc
sub
cmps
js
ins
icebp
adc
cmps
nop
fiadd
shr
adc
sub
cmps
js
ins
icebp
adc
sub
nop
inc
xor
jns
push
xchg
xchg
test
jns
push
xchg
xchg
test
jns
push
xchg
xchg
test
jns
push
xchg
xchg
test
adc
icebp
adc
sub
cmps
js
ins
icebp
adc
sub
cmps
js
ins
icebp
adc
cmps
nop
jb
cmps
js
ins
icebp
adc
cmps
nop
add
js
xchg
cmps
xor
clc
es
cs
jmp
ret
mov
inc
fwait
inc
icebp
std
nop
cs
push
icebp
out
push
push
cmp
xchg
clc
ins
iret
cmps
ds
adc
nop
and
dec
cmps
js
nop
pop
dec
cmp
in
push
jne
js
iret
fwait
out
ins
iret
cmps
ds
adc
clc
sbb
cmps
nop
mov
cmps
js
xchg
xchg
xor
int
inc
pop
mov
stc
ins
dec
xchg
sahf
ins
cmps
fistp
and
mov
inc
cmp
mov
ins
int
inc
pop
mov
mov
ins
cmps
fstp
mov
cmp
jo
cmp
ins
int
inc
pop
(bad)
out
ins
dec
fistp
int
js
mov
cmp
inc
cmp
mov
ins
int
inc
pop
xchg
stc
ins
dec
sti
sahf
ins
cmps
fist
and
mov
dec
cmp
mov
ins
cmp
pop
dec
cmp
in
push
xor
mov
cmps
ds
adc
cld
sbb
cmps
nop
test
out
fs
lods
cmp
(bad)
push
xor
dec
outs
mov
cmps
xchg
fs
jmp
dec
mov
cmp
test
(bad)
and
mov
test
pop
mov
cmp
nop
fimul
js
xchg
mov
inc
pop
xchg
out
ins
int
out
out
test
sub
std
pushf
not
mov
ins
daa
sub
mov
cmp
ins
iret
js
ins
cmps
nop
xchg
dec
cmps
js
sub
cmp
pop
cmp
mov
push
sub
inc
inc
loop
cmp
ins
shr
call
ins
iret
mov
mov
ins
add
daa
sub
xchg
dec
daa
sub
xchg
cmp
sub
cmps
js
sub
std
pushf
and
fdivr
jno
in
not
fs
js
mov
cmp
dec
cmps
js
or
cmp
push
cmps
adc
push
cmps
adc
outs
cmps
js
ins
int
shl
push
xchg
cmp
popa
stc
jg
mov
push
cmps
rcr
mov
cmp
xchg
push
cmps
xchg
push
mov
mov
js
or
push
shr
call
ins
iret
mov
mov
ins
add
sbb
cmps
adc
sub
xchg
cmp
sub
test
ins
int
rol
mov
mov
js
mov
cmp
dec
cmps
js
int3
add
mov
pop
cmp
mov
sub
cmp
ins
cmps
js
int3
cmps
js
push
(bad)
adc
mov
jge
cli
ins
int
push
mov
js
iret
stos
out
ins
es
mov
shr
mov
out
shr
cld
int3
out
sar
mov
ins
cmps
js
inc
iret
js
ins
not
ss
js
mov
cmp
dec
cmps
js
js
cmp
pop
cmp
mov
or
cmp
add
js
ins
int
shr
clc
call
ins
iret
std
bound
cmps
adc
ins
add
and
mov
js
ins
iret
cmp
inc
cmp
shl
shr
cmps
js
xchg
xchg
nop
and
dec
cmps
js
ins
pop
dec
mov
out
shr
fmul
in
rol
js
push
xchg
adc
ins
cmps
js
push
iret
jnp
in
not
fs
js
jmp
cmps
nop
mov
in
push
cmp
in
adc
sub
xchg
sbb
cmps
adc
iret
sar
ins
cmps
js
outs
cmps
clc
call
ins
iret
std
bound
cmps
adc
ins
add
daa
sub
pop
xchg
ins
pop
dec
mov
out
shr
cld
int3
out
sar
ror
iret
jns
ins
iret
js
ins
not
shl
jl
mov
dec
cmps
js
cld
add
mov
ins
cmps
adc
sub
xchg
cmp
sub
es
ins
iret
xchg
ins
cmps
js
ins
cmps
js
add
mov
arpl
cmps
adc
ins
add
sbb
cmps
adc
sub
xchg
cmp
sub
rcl
ins
cmps
js
scas
cmps
js
add
js
cmp
cmp
cmps
adc
in
shr
fwait
ins
cmps
fisttp
ins
pop
dec
mov
out
shr
cld
int3
out
sar
mov
ins
cmps
js
or
js
ins
not
stos
mov
js
mov
cmp
dec
cmps
js
pushf
cmp
mov
in
adc
sub
xchg
cmp
sub
icebp
adc
ins
cmps
js
int3
cmps
js
add
js
cmp
jle
cmps
adc
in
shr
call
js
ins
pop
dec
mov
out
shr
fmul
in
shl
mov
ins
cmps
js
js
js
in
not
fs
js
ins
jge
mov
ins
dec
sub
int
js
ins
pop
dec
mov
out
shr
fmul
in
shl
mov
ins
cmps
js
js
js
in
not
sub
in
shr
cmp
ins
dec
outs
call
js
xchg
mov
inc
pop
xchg
out
ins
int
inc
pop
(bad)
fdivr
ins
int
rol
mov
add
js
cmp
movs
cmps
adc
ins
movs
js
test
mov
sub
xchg
dec
daa
sub
xchg
sbb
cmps
adc
ins
cmps
js
js
js
in
not
fs
js
ins
jge
mov
ins
dec
out
ins
cmps
fistp
ins
pop
dec
mov
out
shr
cld
int3
out
sar
jecxz
ins
cmps
adc
ins
cmps
js
jb
js
in
not
pop
mov
js
xchg
jle
mov
dec
cmps
js
hlt
add
mov
xchg
pop
std
sahf
ins
cmps
(bad)
pop
in
xchg
xor
pop
daa
out
fs
test
lock
push
dec
arpl
mov
cmps
xchg
fs
pop
dec
xchg
pop
icebp
jle
dec
mov
lods
fwait
pop
xchg
test
(bad)
xchg
mov
inc
pop
scas
out
ins
dec
mov
pushf
imul
push
cmp
adc
sub
sub
inc
inc
loop
call
sub
shr
shr
call
ins
iret
cdq
arpl
cmps
adc
aad
js
iret
jecxz
stc
ins
int
inc
pop
xchg
out
ins
int
call
xchg
mov
call
add
js
cmp
mov
cmps
adc
in
shr
cwde
ins
cmps
fstp
out
mov
pop
xchg
out
ins
int
inc
pop
jecxz
stc
ins
iret
push
mov
xchg
mov
call
add
js
cmp
movs
cmps
adc
in
shr
cwde
ins
cmps
fcmovnu
int3
in
shr
shr
shr
jns
ins
int
shr
mov
push
cmps
adc
dec
cmps
js
stos
int
out
push
xchg
xchg
test
mov
pop
xchg
out
ins
int
inc
pop
(bad)
fdivr
ins
int
ror
int
sar
jnp
in
not
fs
js
jmp
cmps
nop
outs
jae
js
test
cmp
in
adc
mov
js
ins
iret
cmp
test
cmp
ins
iret
or
mov
ins
pop
dec
push
icebp
out
push
adc
call
jp
js
ins
iret
ss
test
cmp
ins
dec
ins
shr
shl
cmps
js
xchg
xchg
nop
and
jae
js
ins
pop
dec
mov
out
shr
fmul
in
rol
js
push
xchg
adc
daa
sub
mov
cmp
ins
int
push
push
mov
fsqrt
ins
es
shr
mov
out
shr
fmul
in
rol
js
push
fwait
adc
iret
jnp
in
not
fs
js
jmp
cmps
nop
inc
jb
js
inc
cmp
mov
xchg
int
inc
pop
xchg
out
ins
int
inc
pop
jecxz
stc
ins
int
shr
cmps
js
push
leave
adc
cmps
js
add
mov
arpl
cmps
adc
ins
add
sbb
cmps
icebp
inc
pop
pop
icebp
jg
cmps
xchg
push
cmps
xchg
push
mov
fild
js
ins
iret
mov
mov
cs
mov
ins
int
push
adc
loope
ins
int
inc
pop
xchg
out
ins
int
inc
pop
jecxz
stc
ins
int
rcl
pop
js
ins
int
shr
call
ins
iret
mov
mov
ins
add
and
xchg
xchg
dec
daa
sub
xchg
cmp
sub
icebp
adc
ins
cmps
js
int3
cmps
js
add
js
cmp
jle
cmps
adc
in
shr
cmps
ins
cmps
fld
in
shr
mov
out
shr
cld
int3
out
sar
mov
ins
cmps
js
jb
js
ins
not
(bad)
mov
js
mov
cmp
jno
js
adc
cmp
pop
cmp
mov
sub
cmp
ins
cmps
js
xchg
cmps
js
push
mov
sub
cmp
mov
ins
int
push
cmc
mov
(bad)
ins
int
inc
pop
xchg
out
ins
int
inc
pop
(bad)
fdivr
ins
int
shr
cmps
js
push
mov
lods
add
js
cmp
call
mov
ins
movs
js
test
gs
sub
stc
jg
mov
mov
pop
cmp
mov
or
cmp
push
loope
lods
add
js
cmp
movs
cmps
adc
ins
movs
js
test
push
daa
sub
xchg
dec
daa
sub
xchg
sbb
cmps
adc
push
mov
mov
mov
cmp
ins
iret
js
ins
cmps
nop
push
jo
js
dec
cmp
mov
pop
cmp
mov
sub
cmp
ins
cmps
js
sub
js
push
mov
sub
(bad)
jle
mov
ins
int
push
fnstcw
(bad)
ins
dec
ror
icebp
inc
inc
pop
icebp
jg
ins
mov
clc
es
repnz
pop
out
dec
ins
jmp
lock
pop
push
mov
cmp
int
shr
cmps
js
push
movs
adc
ins
cmps
clc
inc
sbb
js
stos
and
inc
arpl
in
mov
cmp
mov
in
jns
in
cs
int
js
out
ret
stos
loop
mov
sub
xor
sub
inc
sbb
js
ins
cmps
js
test
fild
and
mov
and
js
sbb
jmp
cmp
sbb
xchg
test
icebp
std
xchg
scas
mov
shr
cmp
test
call
ins
daa
nop
sub
pop
xchg
test
sar
cmps
js
mov
cmp
out
outs
mov
push
cmps
js
aas
icebp
(bad)
mov
lods
cmp
iret
fimul
cmps
cmc
cmp
cmp
sub
ins
push
icebp
jle
dec
fs
ins
cmps
loope
xchg
cs
xor
pop
clc
lds
sbb
cli
ins
sub
mov
test
add
shl
js
xchg
pop
sub
mov
xchg
fsub
js
jmp
not
cmp
daa
add
sar
cmp
xchg
pop
sub
mov
mov
sbb
js
jmp
not
cmp
pop
jle
jge
xor
cmps
cmc
cmp
cmp
shr
xchg
mov
leave
cli
ins
sub
mov
test
outs
mov
mov
std
inc
xchg
pop
xchg
stos
daa
add
shr
push
cmp
xchg
pop
sub
mov
mov
sbb
js
jmp
not
cmp
pop
jb
jge
cmps
or
cmps
cmc
cmp
cmp
cmp
xchg
lods
or
cli
ins
sub
mov
test
mov
adc
int
iret
pop
or
cmps
cmc
cmp
cmp
ja
ins
cmps
clc
lds
sahf
retf
sub
mov
test
mov
(bad)
imul
loope
js
xchg
pop
sub
mov
mov
add
mov
popa
cmps
cmc
cmp
cmp
js
sub
pop
xchg
push
jle
mov
ins
iret
cmp
sub
pop
xchg
lods
xor
inc
bound
in
(bad)
pop
in
add
icebp
jle
mov
jno
mov
sub
cmp
sub
adc
icebp
nop
ret
js
xor
jns
xchg
pop
sti
jl
scas
mov
out
test
pusha
mov
xor
mov
adc
out
sar
mov
rcl
js
fwait
inc
icebp
cmp
in
adc
fsubp
js
jmp
not
push
fnstsw
js
ins
pop
xor
add
ins
shr
rcl
dec
xchg
pop
sub
mov
mov
xchg
pop
jp
jge
mov
cmp
cmp
mov
ins
cmps
icebp
dec
inc
push
icebp
jle
sbb
int
iret
lahf
or
cmps
cmc
cmp
cmp
xlat
lods
ins
cmps
clc
add
push
adc
mov
xchg
pop
sub
mov
mov
xchg
pop
jge
jge
popa
or
cmps
cmc
cmp
cmp
add
or
mov
pop
jle
jge
dec
or
cmps
cmc
cmp
cmp
and
lahf
pop
xchg
shr
and
mov
xchg
pop
sub
mov
mov
xchg
pop
jo
jge
adc
cmps
cmc
cmp
cmp
pop
lods
ins
cmps
icebp
dec
ins
push
icebp
jle
sbb
int
iret
repz
cmps
cmc
cmp
cmp
jg
ins
cmps
clc
add
data16
(bad)
adc
mov
xchg
pop
sub
mov
mov
xchg
pop
jae
jge
mov
cmps
cmc
cmp
cmp
stos
lods
ins
cmps
icebp
dec
fwait
inc
icebp
cmp
in
clc
add
pusha
shr
test
mov
xchg
pop
sub
mov
mov
xchg
pop
jne
jge
jnp
cmps
cmc
cmp
cmp
jmp
ins
cmps
clc
add
(bad)
imul
loope
xchg
dec
xchg
pop
sub
mov
mov
ins
sub
push
fwait
pop
xchg
test
mov
cs
fs
pop
xchg
stos
iret
or
cmps
adc
fsubp
js
xchg
inc
out
arpl
jmp
daa
lds
pop
xchg
test
inc
ins
test
mov
js
pushf
xchg
mov
stos
es
mov
pop
cmp
xchg
and
mov
and
arpl
cmps
mov
outs
cmps
js
rcr
inc
xchg
cmps
ja
mov
sbb
jmp
daa
lds
pop
xchg
ins
cmps
mov
inc
ins
sub
inc
xchg
pop
xchg
add
mov
inc
nop
pop
xchg
test
pusha
mov
aam
pop
mov
jmp
cs
inc
xchg
cmps
or
test
mov
xor
mov
mov
mov
pushf
lds
pop
xchg
ins
and
fdiv
out
mov
int
js
inc
jle
mov
xchg
pop
sub
mov
push
mov
cmps
adc
int
js
jae
cmp
xchg
pop
sub
mov
mov
and
cmps
cmc
cmp
cmp
arpl
inc
icebp
cmp
in
cmc
cmp
cmp
push
cmp
cmp
iret
scas
ins
cmps
adc
jmp
not
cmp
pop
xchg
dec
ja
ins
cmps
cmc
cmp
out
addr16
loope
test
pop
sub
xchg
jg
mov
xchg
pop
sub
mov
mov
ins
sub
inc
xchg
pop
xchg
test
ins
mov
cwde
jg
mov
xchg
pop
sub
cmp
mov
test
shr
js
jmp
and
mov
ins
cmps
and
jmp
pop
rep
ins
cmps
(bad)
pop
in
lods
dec
xchg
pop
icebp
jle
sbb
mov
nop
jns
ins
pop
int
xchg
pop
xchg
cld
push
cmp
ins
sub
inc
xchg
pop
xchg
test
mov
add
retf
sub
inc
xchg
pop
xchg
test
std
inc
xchg
pop
xchg
test
std
pusha
fwait
pop
xchg
sub
pusha
fwait
pop
xchg
shl
push
int
sub
pusha
fwait
pop
xchg
mov
js
arpl
pusha
fwait
pop
xchg
sar
inc
xchg
movs
punpckhwd
popa
int
ins
cmps
xchg
loope
test
pop
sub
mov
and
adc
push
inc
xchg
not
xor
ja
inc
xchg
sub
inc
xchg
pop
xchg
test
imul
pop
xchg
push
out
data16
js
jmp
pop
fadd
in
mov
xchg
pop
icebp
jle
and
fst
inc
xchg
dec
adc
nop
pop
xchg
dec
adc
nop
pop
xchg
sub
dec
xchg
pop
xchg
test
imul
push
cmps
xchg
add
or
ins
int
shr
stos
ins
cmps
sub
mov
mov
xchg
pop
sub
xchg
adc
mov
stos
icebp
jnp
addr16
imul
xchg
adc
jle
js
stos
lds
ins
iret
cmp
ja
nop
xchg
jns
js
test
add
es
gs
cmp
popf
add
js
test
push
out
xlat
xchg
jl
inc
es
mov
clc
pop
cmp
ins
mov
js
in
fcom
pop
jno
sbb
js
push
cmps
nop
inc
js
js
in
push
pusha
in
repz
fs
daa
sub
cmp
mov
in
push
test
ins
cmps
adc
icebp
out
push
xor
js
ins
iret
call
cmps
jge
js
pop
mov
mov
ins
cmps
icebp
pusha
pop
jg
jnp
mov
std
or
shl
movs
mov
mov
int
js
jmp
not
cmp
cmps
js
jmp
and
int3
fsub
js
mov
cmps
xchg
in
and
cmps
js
mov
cs
mov
cmps
cs
in
sti
jg
xor
add
jno
xchg
nop
(bad)
js
js
ficomp
iret
push
xchg
pop
ret
lds
in
(bad)
push
lods
pop
jg
xchg
mov
and
stos
and
fxam
push
lock
add
jno
and
push
xchg
pop
inc
mov
addr16
push
cs
js
stos
and
push
xchg
pop
js
dec
mov
mov
ins
shl
jmp
xchg
mov
inc
pop
sub
pop
sbb
cli
ins
iret
mov
cmps
cmc
cmp
cmp
jg
ins
cmps
adc
xchg
pop
sub
xchg
not
xor
xchg
not
cmp
sub
pop
sbb
inc
xchg
and
mov
iret
dec
xchg
dec
xchg
ins
jg
jnp
cmps
nop
xchg
arpl
cmp
ins
iret
mov
clc
repz
push
icebp
mov
mov
in
cmc
add
loope
jl
cmps
rcr
add
or
in
sar
push
cmp
ins
iret
or
cmps
nop
sar
js
ror
dec
(bad)
mov
cmps
js
lahf
rcr
(bad)
jg
mov
ins
iret
mov
cwde
cld
out
push
push
mov
mov
in
cmc
add
loope
clc
outs
cmps
rcr
add
sbb
cmp
ins
iret
js
sub
cmps
js
test
cmc
add
loope
mov
mov
cmps
js
leave
mov
shr
shr
js
ins
iret
js
ins
out
mov
loope
js
in
int3
shr
js
ins
not
jg
pop
xchg
aam
cmc
cmp
cmp
aas
mov
cmps
cmc
xor
out
outs
xchg
in
fwait
jns
sbb
mov
cmp
lds
xchg
ror
push
mov
cmps
cmc
std
aam
adc
ins
pop
or
mov
xchg
test
mov
loope
int
xchg
pop
sub
mov
mov
xchg
pop
sti
jo
out
test
or
int
icebp
sub
xchg
lock
fmul
mov
cmps
adc
push
movs
adc
in
inc
sbb
nop
shl
js
test
js
fwait
inc
icebp
cmp
out
int3
push
xchg
pop
icebp
jnp
ror
push
popf
stos
js
loope
cdq
arpl
cmps
icebp
std
mov
mov
sbb
cmp
imul
js
cmps
pop
mov
(bad)
lods
xor
jnp
ins
cmps
adc
ins
cs
mov
ins
dec
jmp
mov
call
pop
in
enter
repz
in
mov
mov
ins
cmps
js
stos
loop
mov
mov
mov
add
dec
or
xchg
xchg
dec
daa
sub
cmps
adc
push
cmps
adc
lea
add
mov
push
mov
out
ins
es
sar
pop
cmp
test
js
jbe
xchg
arpl
stos
js
push
cmps
js
in
aad
sar
jg
mov
ins
iret
push
pusha
cmps
sub
stos
js
in
aam
xchg
pop
stc
jnp
aad
mov
ins
int
call
xchg
pop
mov
inc
push
jg
pusha
in
cmc
cmp
cmp
std
adc
pop
xchg
add
int3
cli
ins
iret
add
cmps
adc
fsub
js
ins
cmps
js
test
out
inc
xchg
and
mov
out
adc
cmps
js
imul
js
ins
dec
pop
adc
std
js
loope
rcl
pop
sub
ins
int
shl
cmps
adc
ins
not
xor
xchg
not
mov
push
out
shr
push
movs
stos
js
cmp
cmp
push
jns
ins
int
inc
pop
cmps
out
ins
dec
dec
mov
cmps
xchg
mov
test
jbe
ins
mov
xor
std
test
adc
mov
nop
xchg
bound
lods
out
cld
mov
jl
sub
test
js
cmp
(bad)
jp
jbe
add
enter
inc
icebp
std
nop
cs
inc
jl
cld
sub
bound
mov
ins
cmps
xchg
and
cmps
js
jge
js
arpl
sbb
stos
ins
cmps
js
ja
imul
push
lahf
jns
ins
test
cmp
js
add
adc
cmps
js
call
iret
lea
cmps
xchg
test
std
push
xchg
pop
xchg
xchg
cmps
xor
iret
xchg
arpl
cmps
xchg
test
test
and
mov
pop
int
xchg
pop
xchg
stos
js
gs
jmp
and
pop
jecxz
stc
ins
dec
mov
ins
cmps
jno
sbb
repz
inc
and
push
pop
xchg
xchg
sahf
test
jae
std
pop
xchg
pop
xchg
xchg
and
mov
xchg
pop
push
sub
push
ja
mov
cmps
repz
inc
and
xor
jnp
inc
xchg
mov
ins
xchg
pop
xchg
push
cmps
adc
sub
cmps
js
xchg
mov
(bad)
in
mov
ins
cmps
(bad)
fsub
js
add
cmp
in
sti
popf
or
cmp
fsub
js
sbb
cmp
xchg
(bad)
clc
test
cmp
imul
cli
ins
dec
and
pop
and
mov
push
inc
in
fnstcw
sub
js
push
cmps
nop
outs
pusha
cmps
js
inc
mov
out
ins
sahf
cmp
int
dec
fwait
mov
cmps
icebp
inc
fwait
inc
icebp
cmp
in
xchg
mov
sub
xchg
pusha
cmp
mov
sbb
inc
mov
sbb
cmp
pushf
cmp
mov
clc
add
mov
adc
cmp
int3
add
mov
pusha
cmp
mov
js
cmp
ins
cmps
adc
fldcw
mov
pop
inc
mov
sbb
cmp
pop
cmp
jl
js
sbb
js
xchg
pop
xchg
sbb
pusha
mov
sbb
ins
and
fs
pop
xchg
xchg
pop
sub
stos
js
in
pushf
inc
xchg
pop
xchg
test
js
xchg
xchg
xor
iret
xchg
xchg
pop
xchg
pop
dec
push
icebp
out
push
mov
sbb
int
int
shr
pusha
cmps
adc
ins
pop
dec
push
icebp
out
push
mov
jge
ins
sub
xchg
jmp
popa
std
dec
xchg
pop
xchg
cmps
jns
jmp
iret
xchg
xchg
pop
xchg
pop
dec
cmp
in
push
add
test
pop
sti
jo
out
test
or
retf
jns
xor
mov
xchg
pop
sub
xor
je
xchg
pop
js
sbb
adc
ins
dec
xlat
mov
cmps
xchg
test
jb
ins
dec
sub
ret
jl
js
mov
std
pop
xchg
pop
xchg
stos
sub
inc
xchg
pop
xchg
loope
mov
pop
sub
inc
jg
mov
xchg
pop
sub
stos
js
out
arpl
xchg
cmps
js
loope
test
pop
sub
mov
stos
mov
cmps
clc
add
ins
rcr
ins
int
shl
cmp
cmps
js
pop
mov
xchg
mov
cmps
xchg
pop
push
pop
xchg
and
inc
sub
inc
mov
xchg
mov
cwde
push
cmps
adc
ins
int
push
lods
js
xchg
xchg
fs
cmps
js
ret
mov
test
pop
js
push
test
cmp
out
jge
xchg
pop
xchg
fstp
ins
int
ror
cmps
nop
jb
cmps
js
pop
mov
cmpxchg
enter
cmp
pop
xchg
cmps
repnz
push
mov
add
push
xor
xchg
pop
xchg
sub
dec
xchg
pop
xchg
add
mov
dec
xchg
pop
xchg
test
jae
ins
and
test
pop
js
ins
sub
inc
xchg
pop
xchg
xchg
xchg
clc
sbb
cmps
nop
pop
cmps
js
rcr
inc
xchg
cmps
or
mov
ins
int
push
cmp
xchg
clc
sbb
cmps
nop
inc
cmps
js
fwait
movs
js
loope
test
pop
sub
xchg
not
xchg
mov
js
jmp
not
cmp
cmps
js
jmp
test
mov
xchg
pop
xchg
push
cmps
adc
mov
dec
xchg
mov
cmps
xchg
test
jo
ins
dec
in
mov
scas
xchg
loope
test
pop
sub
xchg
not
sbb
push
test
not
cmp
cmps
js
jmp
test
mov
xchg
pop
xchg
push
cmps
adc
mov
dec
push
inc
cmp
mov
ins
dec
push
mov
xchg
pop
xchg
outs
xchg
in
fwait
jns
sbb
inc
outs
rcr
ins
int
rol
cmp
cmps
js
pop
(bad)
out
ins
dec
xchg
outs
cmps
js
jmp
cmps
xchg
test
std
inc
xchg
pop
xchg
call
pop
inc
mov
mov
adc
mov
dec
imul
cmp
mov
ins
dec
sar
pop
xchg
sub
xchg
pop
push
mov
xchg
pop
xchg
loope
mov
pop
sub
inc
jg
mov
xchg
pop
sub
scas
js
out
arpl
xchg
cmps
js
loope
test
pop
sub
xchg
stc
ins
dec
push
mov
xchg
pop
xchg
rcr
ins
int
sar
cmp
imul
stc
ins
dec
aas
mov
outs
cmps
js
jmp
cmps
xchg
test
std
inc
xchg
pop
xchg
call
pop
inc
mov
mov
adc
mov
dec
and
dec
cmp
mov
ins
dec
jns
ins
cmps
clc
cmp
ins
sub
inc
xchg
pop
xchg
movs
pop
cmp
push
cmps
js
xchg
test
sub
push
or
in
dec
or
pop
xchg
sub
dec
xchg
pop
xchg
add
mov
dec
xchg
pop
xchg
test
mov
aam
xor
jmp
sub
pop
xchg
pop
xchg
stos
int
shr
shr
shr
clc
add
out
ins
dec
sti
mov
pushf
pop
xchg
movs
adc
pushf
pop
xchg
aaa
jge
ins
daa
inc
enter
mov
pop
cmp
in
fwait
jns
sbb
jnp
cmps
cmc
sub
ds
adc
fst
inc
xchg
dec
mov
mov
xchg
pop
sub
outs
iret
mov
cmps
xchg
test
jge
ins
sub
dec
xchg
pop
xchg
movs
pop
cmp
push
cmps
js
xchg
int
xor
xchg
cmc
sub
xchg
hlt
xchg
test
jge
ins
int
xor
xchg
not
mov
ins
pop
int
xchg
pop
xchg
mov
mov
pop
nop
inc
outs
cmps
js
pop
jecxz
stc
ins
dec
sar
push
cmps
adc
cmps
js
sub
pop
sub
nop
push
push
push
xchg
or
int
shr
dec
xchg
pop
xchg
mov
call
jo
out
test
or
mov
xchg
pop
sub
add
(bad)
ins
pop
int
xchg
pop
xchg
mov
cmc
cmp
cmp
jns
xor
xchg
adc
push
cmps
js
xchg
xchg
xor
pop
int
xchg
pop
xchg
movs
js
stos
mov
jns
ins
cmps
adc
in
rcl
test
mov
loopne
xchg
test
adc
sub
cmps
js
xchg
xchg
xor
dec
imul
pop
or
push
mov
and
mov
in
in
sti
push
pusha
hlt
cs
out
jo
test
mov
in
jns
in
repz
pusha
call
mov
fisubr
arpl
mov
(bad)
call
lods
xchg
test
jl
ins
es
sbb
stc
ins
shl
pop
daa
fsqrt
ins
dec
(bad)
mov
in
push
cmp
inc
cmp
mov
ins
pushf
dec
xchg
repz
int
pop
dec
movs
stc
out
push
or
xchg
fs
xchg
xchg
push
daa
sub
cmps
js
xchg
push
lahf
xor
pop
icebp
jg
xchg
push
daa
sub
xchg
pop
daa
sub
cmps
js
pop
xchg
stc
ins
shr
xlat
int3
cli
ins
cmps
or
and
push
xchg
stc
ins
rcr
push
xlat
int3
cli
ins
cmps
or
sbb
cmps
nop
inc
outs
cmps
js
pusha
pop
int
ins
cmps
(bad)
pop
in
mov
stos
xchg
mov
stc
ins
sar
jno
in
clc
ins
pushf
dec
cmp
in
int
sub
test
out
xor
dec
xchg
repz
int
sub
pushf
repz
sbb
clc
ins
sar
jno
call
nop
repz
int
sub
ror
js
pop
xchg
stc
ins
sar
jno
loope
ins
pushf
dec
cmp
in
int
sub
movs
repz
mov
shr
sbb
or
into
push
adc
cld
mov
jl
js
ins
pop
pop
mov
in
sub
cmps
js
ins
pop
pop
mov
in
sub
cmps
js
ins
pop
pop
test
in
sub
cmps
js
ins
pop
pop
lods
lahf
in
sub
cmps
js
ins
pop
pop
cwde
lahf
in
sub
cmps
js
ins
pop
pop
xchg
lahf
in
sub
cmps
js
ins
pop
pop
mov
cmps
js
ins
pop
pop
mov
cmps
js
ins
repnz
pop
cmp
cmps
js
stos
daa
inc
call
cmp
test
jge
ins
and
mov
loop
mov
rcl
stos
loopne
mov
sbb
movs
sub
or
out
pop
pop
int
dec
jns
arpl
jg
lods
sar
xchg
xchg
push
cmps
nop
jle
cmps
js
ins
lock
xchg
pop
daa
jno
(bad)
stc
push
ins
mov
mov
ins
and
cmps
push
xchg
test
jl
xchg
inc
js
ins
sub
pushf
fs
mov
inc
jmp
mov
fwait
jle
icebp
xchg
sub
pushf
fs
les
mov
and
jp
cmps
js
ins
pop
pop
clc
lahf
in
sub
cmps
js
ins
pop
pop
cld
lahf
in
sub
cmps
js
ins
pop
pop
lock
in
sub
cmps
js
ins
pop
pop
hlt
lahf
in
sub
cmps
js
ins
pop
pop
call
cld
cmps
js
ins
pop
pop
in
lahf
in
sub
cmps
js
ins
pop
pop
loopne
in
sub
cmps
js
ins
pop
pop
in
in
sub
cmps
js
ins
pop
pop
fcomp
cmps
js
ins
pop
pop
fcomp
cmps
js
ins
pop
pop
rcr
cmps
js
ins
pop
pop
aam
in
sub
cmps
js
ins
pop
pop
enter
sub
cmps
js
ins
pop
pop
int3
lahf
in
sub
cmps
js
ins
pop
pop
rcr
js
ins
pop
pop
les
cmps
js
ins
pop
pop
cmp
cmps
js
ins
pop
pop
cmp
in
sub
cmps
js
ins
pop
pop
xor
cmps
js
ins
pop
pop
xor
in
sub
cmps
js
ins
pop
pop
sub
cmps
js
ins
pop
pop
sub
in
sub
cmps
js
ins
pop
pop
and
cmps
js
ins
pop
pop
and
in
sub
cmps
js
ins
pop
pop
sbb
cmps
js
ins
pop
pop
sbb
in
sub
cmps
js
ins
pop
pop
adc
cmps
js
ins
pop
pop
adc
in
sub
cmps
js
ins
pop
pop
or
cmps
js
ins
pop
pop
or
in
sub
cmps
js
ins
pop
pop
add
cmps
js
ins
pop
pop
add
in
sub
cmps
js
ins
pop
pop
js
in
sub
cmps
js
ins
pop
pop
jl
in
sub
cmps
js
ins
pop
pop
jo
in
sub
cmps
js
ins
pop
pop
je
in
sub
cmps
js
ins
pop
pop
push
cld
cmps
js
ins
pop
pop
ins
lahf
in
sub
cmps
js
ins
pop
pop
pusha
lahf
in
sub
cmps
js
ins
pop
pop
fs
in
sub
cmps
js
ins
pop
pop
pop
lahf
in
sub
cmps
js
ins
pop
pop
pop
lahf
in
sub
cmps
js
ins
pop
pop
push
lahf
in
sub
cmps
js
ins
pop
pop
push
lahf
in
sub
cmps
js
ins
pop
pop
inc
lahf
in
sub
cmps
js
ins
pop
pop
inc
lahf
in
sub
cmps
js
ins
pop
pop
mov
cld
cmps
js
ins
pop
pop
mov
cld
cmps
js
ins
pop
pop
mov
in
sub
cmps
js
ins
pop
pop
mov
in
sub
cmps
js
ins
pop
pop
test
in
sub
cmps
js
ins
pop
pop
lods
cwde
in
sub
cmps
js
ins
pop
pop
mov
cld
cmps
js
ins
pop
pop
movs
cwde
in
sub
cmps
js
ins
pop
pop
cwde
cwde
in
sub
cmps
js
ins
pop
pop
pushf
cwde
in
sub
cmps
js
ins
pop
pop
nop
cwde
in
sub
cmps
js
ins
pop
pop
xchg
cwde
in
sub
cmps
js
ins
pop
pop
mov
cmps
js
ins
pop
pop
mov
cmps
js
ins
pop
pop
sbb
js
ins
pop
pop
test
cmps
js
ins
pop
pop
clc
cwde
in
sub
cmps
js
ins
pop
pop
cld
cwde
in
sub
cmps
js
ins
pop
pop
lock
in
sub
cmps
js
ins
pop
pop
hlt
cwde
in
sub
cmps
js
ins
pop
pop
call
cld
cmps
js
ins
pop
pop
in
cwde
in
sub
cmps
js
ins
pop
pop
loopne
in
sub
cmps
js
ins
pop
pop
in
in
sub
cmps
js
ins
pop
pop
fcomp
cmps
js
ins
pop
pop
fcomp
cmps
js
ins
pop
pop
enter
sub
cmps
js
ins
pop
pop
int3
cwde
in
sub
cmps
js
ins
pop
pop
rcr
js
ins
pop
pop
les
cmps
js
ins
pop
pop
cmp
cmps
js
ins
pop
pop
xor
in
sub
cmps
js
ins
pop
pop
sub
cmps
js
ins
pop
pop
sub
in
sub
cmps
js
ins
pop
pop
and
cmps
js
ins
pop
pop
and
in
sub
cmps
js
ins
pop
pop
sbb
cmps
js
ins
pop
pop
sbb
in
sub
cmps
js
ins
pop
pop
adc
cmps
js
ins
pop
pop
adc
in
sub
cmps
js
ins
pop
pop
add
cmps
js
ins
pop
pop
add
in
sub
cmps
js
ins
pop
pop
js
in
sub
cmps
js
ins
pop
pop
jl
in
sub
cmps
js
ins
pop
pop
jo
in
sub
cmps
js
ins
pop
pop
je
in
sub
cmps
js
ins
pop
pop
push
cld
cmps
js
ins
pop
pop
ins
cwde
in
sub
cmps
js
ins
pop
pop
pusha
cwde
in
sub
cmps
js
ins
pop
pop
fs
in
sub
cmps
js
ins
pop
pop
pop
cwde
in
sub
cmps
js
ins
pop
pop
pop
cwde
in
sub
cmps
js
ins
pop
pop
push
cwde
in
sub
cmps
js
ins
pop
pop
push
cwde
in
sub
cmps
js
ins
pop
pop
dec
cwde
in
sub
cmps
js
ins
pop
pop
dec
cwde
in
sub
cmps
js
ins
pop
pop
inc
cwde
in
sub
cmps
js
ins
pop
pop
inc
cwde
in
sub
cmps
js
ins
