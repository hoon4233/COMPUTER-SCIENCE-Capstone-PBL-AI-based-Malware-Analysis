cs
inc
inc
add
pop
inc
outs
outs
ins
gs
outs
add
add
fsubr
(bad)
inc
gs
jb
lea
sub
add
push
(bad)
mov
inc
adc
pop
dec
outs
je
addr16
adc
(bad)
sti
(bad)
jg
rcr
inc
jns
sub
outs
mov
push
outs
jb
add
add
inc
nop
adc
inc
popa
jb
imul
ins
add
cwde
or
push
je
imul
or
add
jp
aaa
dec
sar
int3
cmp
fadd
fsub
aam
aaa
inc
(bad)
std
aaa
int
push
mov
push
dec
bound
arpl
pop
or
(bad)
fistp
inc
cmp
add
push
jns
je
ins
add
sbb
inc
add
or
(bad)
out
mov
popa
arpl
leave
or
add
out
push
sti
add
inc
sub
inc
and
clc
jmp
xlat
jge
leave
or
aam
int3
inc
push
dec
add
jae
dec
pop
dec
inc
dec
gs
sahf
jmp
or
add
push
jno
fnsave
rcr
mov
(bad)
repz
inc
add
mov
cmp
push
(bad)
fs
mov
stc
inc
jmp
pop
(bad)
push
sbb
ror
enter
inc
(bad)
sar
hlt
nop
inc
push
sbb
sbb
mov
pushf
cwde
xchg
nop
sbb
mov
push
cmp
push
sbb
je
pusha
daa
sbb
ins
add
pop
add
or
cld
pop
push
xor
pusha
pop
adc
or
xor
pusha
sbb
pop
pop
push
clc
and
add
mov
outs
mov
add
test
je
movzx
mov
add
pop
ret
nop
rcr
xchg
dec
sub
and
push
sbb
xor
jg
nop
xor
push
mov
cmp
jne
push
sti
push
add
push
ins
add
add
ret
mov
(bad)
(bad)
(bad)
fisttp
mov
add
lea
mov
mov
mov
inc
cmp
jne
mov
mov
mov
sub
add
push
push
mov
mov
dec
int3
test
(bad)
jg
ror
mov
mov
mov
mov
mov
mov
mov
mov
idiv
out
add
add
or
mov
push
mov
push
push
push
push
push
mov
mov
mov
mov
mov
imul
cmp
or
push
or
ret
mov
ins
add
mov
mov
mov
(bad)
inc
add
jmp
add
cmp
jne
sbb
mov
cmp
(bad)
(bad)
jmp
ret
mov
mov
xor
shl
ror
outs
(bad)
(bad)
out
inc
mov
mov
dec
cmp
jb
mov
add
mov
add
cmp
fdivr
push
cmp
jne
mov
add
add
jnp
add
popa
std
psadbw
jmp
mov
mov
add
cs
sub
jmp
mov
mov
(bad)
fild
or
mov
add
sub
mov
sub
mov
mov
cmp
jmp
jmp
mov
jmp
mov
cmp
jne
xor
pop
xchg
nop
loopne
push
mov
mov
cmp
jge
mov
mov
add
jae
push
push
push
mov
pushf
mov
mov
test
je
mov
mov
pop
mov
loope
add
adc
movs
clc
add
fsubr
sbb
arpl
fnstenv
test
fs
jnp
push
jne
js
(bad)
in
ins
sub
mov
cmp
jbe
(bad)
and
ja
(bad)
in
mov
or
mov
mov
icebp
add
or
lds
sbb
jae
cmp
ja
mov
add
or
sbb
cmp
jae
mov
pusha
fnsave
xor
jmp
mov
loope
loope
add
push
mov
cmp
pop
jne
mov
and
add
mov
push
and
mov
or
xchg
or
sti
add
mov
hlt
mov
sti
(bad)
dec
in
lock
inc
adc
add
and
pusha
ja
inc
add
sub
mov
(bad)
jmp
mov
mov
add
cmp
jbe
mov
cmp
jbe
mov
mov
adc
add
sti
push
push
rcr
movs
jmp
mov
cmp
les
mov
xchg
and
repz
outs
or
and
jmp
popf
mov
mov
sub
mov
std
jmp
test
sbb
jae
mov
cmp
jae
mov
or
sbb
add
inc
add
xor
jae
add
xchg
aas
cmp
clc
mov
(bad)
aas
call
sar
mov
or
sub
xlat
dec
out
ficomp
jbe
push
mov
rol
in
add
popf
jmp
or
xlat
je
jne
stos
(bad)
cs
por
dec
mov
add
adc
push
and
adc
push
dec
iret
push
ss
mov
push
pop
ja
mov
xchg
add
je
cmp
jne
add
mov
(bad)
in
sbb
cmp
or
push
add
ja
add
je
sbb
ins
adc
add
jno
in
sub
out
ret
jae
mov
xlat
mov
sbb
adc
sahf
jecxz
jne
lods
mov
mov
cmp
jne
movs
jg
mov
xlat
add
pop
add
cmp
je
pop
mov
sbb
inc
push
adc
ret
imul
jg
(bad)
mov
lea
add
pop
mov
mov
mov
sub
inc
jg
call
retf
mov
mov
test
je
pop
or
mov
inc
and
mov
add
adc
or
add
cmp
adc
cmp
jmp
(bad)
(bad)
mov
push
mov
xor
push
push
push
mov
push
enter
lods
cmp
je
adc
xchg
dec
(bad)
mov
sbb
sbb
and
inc
jge
cmps
jg
add
push
mov
fist
je
mov
or
out
sbb
inc
cmp
mov
mov
mov
sar
rcr
mov
push
pop
cdq
xchg
in
sub
pop
ret
ret
push
cmp
imul
int3
cmp
inc
mov
add
nop
xchg
xchg
xor
mov
(bad)
sbb
sbb
mov
sbb
push
shl
mov
ds
push
jne
fscale
sahf
pusha
xchg
jo
cwde
mov
mov
(bad)
fistp
ret
push
cmp
adc
ja
mov
cmp
mov
sti
mov
inc
rol
stc
add
outs
push
mov
jmp
push
pop
(bad)
jg
mov
hlt
mov
mov
mov
leave
jmp
xor
inc
mov
dec
or
add
(bad)
shl
dec
or
push
mov
cmp
(bad)
dec
nop
push
mov
sub
lea
cmp
std
jg
(bad)
jl
mov
mov
aaa
push
fs
ret
cmp
jl
mov
or
mov
mov
mov
pop
ret
inc
sub
push
jbe
into
aad
cld
test
add
aam
sti
jmp
mov
push
or
mov
add
adc
ror
pop
xor
add
and
lahf
inc
or
pop
pop
sbb
bound
std
jg
adc
mov
and
enter
ret
pop
or
test
je
inc
popa
push
jb
sub
cmp
sbb
dec
or
add
mov
pushf
sbb
test
pop
xor
add
add
mov
test
out
(bad)
cli
add
mov
arpl
cld
mov
adc
(bad)
aaa
rol
pop
aaa
push
scas
mov
mov
mov
or
mov
test
je
(bad)
sti
mov
or
sub
(bad)
jg
mov
sub
mov
sub
cmp
jge
inc
scas
cmps
adc
add
jae
ss
or
jmp
adc
cmp
jnp
idiv
mov
test
je
mov
sub
bound
mov
xlat
ret
call
adc
sub
push
in
sbb
fcom
retf
adc
mov
mov
mov
add
sub
fwait
xor
or
jo
add
jg
mov
test
rol
dec
fisub
add
cli
mov
and
call
mov
mov
mov
jmp
cli
inc
add
adc
shl
pop
add
sub
cmp
add
fimul
mov
pop
mov
scas
mov
xchg
int3
clc
in
add
or
jmp
mov
mov
add
add
iret
xor
push
push
and
push
add
cmp
movs
movs
mov
add
in
std
inc
mov
inc
or
test
std
out
(bad)
pop
xchg
jmp
mov
cmp
jae
es
inc
add
pop
add
neg
add
add
cmp
jae
sbb
(bad)
or
mov
or
sub
(bad)
sti
xlat
xor
mov
les
xlat
jl
and
in
lea
or
add
out
dec
dec
je
mov
push
(bad)
xchg
aas
mov
add
pop
pop
push
aad
mov
lea
add
imul
aaa
cld
mov
mov
add
fadd
jg
jae
push
xor
shl
jne
lock
pminsw
mov
mov
outs
ret
sbb
mov
mov
jnp
pop
add
jg
mov
mov
cmp
sbb
pop
je
mov
jmp
(bad)
adc
out
fmul
or
(bad)
retf
shr
jmp
adc
cmp
jg
sub
cmp
jge
add
sub
inc
cmp
inc
add
lock
(bad)
and
adc
dec
cmps
ja
jle
push
push
or
push
rol
(bad)
mov
cs
fs
mov
cmp
jne
mov
lods
or
push
and
mov
sbb
daa
push
adc
fsubr
jne
dec
or
shl
clc
les
or
xor
push
push
add
pop
xor
lods
mov
ret
pop
and
cmp
lock
jmp
sti
(bad)
jg
lock
ret
mov
dec
out
mov
(bad)
retf
jne
mov
jg
shr
movs
xor
mov
jmp
mov
call
mov
mov
mov
mov
dec
clc
dec
add
push
or
jbe
xor
inc
cld
inc
jmp
add
fmul
(bad)
iret
cmp
pop
pop
or
cmp
cdq
test
enter
jmp
mov
adc
xlat
retf
xor
dec
bound
cld
or
push
pop
ret
out
push
lea
lock
xchg
pop
mov
and
jge
jne
div
inc
cld
push
add
xchg
enter
push
mov
into
dec
test
jne
inc
or
cmp
ret
sub
cmp
je
mov
mov
xchg
sbb
ret
je
mov
adc
ds
or
lahf
add
mov
mov
cld
jbe
loope
or
mov
inc
jne
sub
addr16
cwde
xor
add
inc
jo
outs
or
ret
sbb
mov
cli
add
or
jmp
jmp
add
sub
or
js
mov
dec
add
and
rol
push
jo
movs
es
nop
push
mov
and
aas
ret
clc
mov
add
and
cmp
(bad)
aas
sbb
sub
mov
and
pop
jno
mov
cmp
jne
mov
sub
dec
cmp
jle
jb
into
(bad)
out
add
sbb
or
add
pop
lock
xchg
lea
push
cld
out
enter
mov
dec
xor
add
add
fimul
or
sbb
add
fsubr
xor
(bad)
sub
pop
pusha
dec
or
and
inc
and
iret
popa
jmp
or
lds
ss
jge
daa
adc
xor
and
ss
mov
and
jne
clc
call
xchg
fbstp
ret
mov
and
fidivr
add
mov
(bad)
sub
shr
jmp
cs
sub
cmp
pop
mov
xchg
dec
(bad)
mov
in
popa
mov
out
add
dec
ficom
and
ret
mov
cli
add
sti
pop
xlat
jne
lock
or
(bad)
adc
sbb
stos
jg
out
adc
repnz
(bad)
jp
push
daa
add
daa
outs
mov
jecxz
pop
ss
sbb
js
add
ss
bound
adc
xchg
call
ins
cmp
xor
mov
test
je
mov
mov
xchg
ins
sbb
mov
mov
inc
adc
jmp
lods
inc
inc
push
test
jle
call
pop
inc
add
sbb
xor
mov
pop
ret
and
movs
jmp
or
aas
mov
test
je
test
je
push
mov
call
shl
ret
lock
mov
dec
sbb
sbb
shl
outs
(bad)
in
out
je
clc
sar
ja
jae
out
pop
push
sbb
mov
jbe
iret
mov
or
or
xor
daa
pop
int3
adc
adc
cmp
mov
inc
mov
jle
sbb
adc
fcomip
mov
into
mov
xor
xlat
pop
fadd
adc
cmp
or
fndisi(8087
out
loop
jne
and
sbb
jmp
cmp
ja
jbe
out
mov
push
inc
xor
mov
sbb
jle
and
mov
ret
push
push
push
sbb
cmp
pop
pop
jne
ret
xor
sbb
adc
push
sbb
pop
pop
ret
push
(bad)
(bad)
(bad)
call
(bad)
mov
xor
or
je
test
jle
cmp
jg
sub
inc
test
jl
cmp
jg
(bad)
jg
inc
(bad)
mov
inc
rep
jmp
mov
xor
jmp
mov
jmp
mov
pop
pop
bound
add
lods
or
mov
fsubr
(bad)
out
jmp
div
je
cli
js
rep
mov
and
rep
pop
jle
(bad)
pop
ret
lea
lea
sbb
std
sbb
xor
pop
xchg
add
jle
in
cld
jmp
in
add
fmul
sti
(bad)
(bad)
jmp
jbe
cmp
jne
cmp
jne
add
jmp
xor
mov
jmp
cmp
jne
sub
push
or
sub
add
cmp
mov
call
sbb
es
ja
mov
aad
cmp
xor
jmp
pop
cmp
push
cmp
jbe
mov
mov
inc
inc
cmp
ja
in
mov
rcr
mov
jmp
and
ja
addr16
aad
pop
xchg
add
jnp
xor
push
div
push
push
mov
add
inc
jmp
mov
lahf
fcmovb
ror
clc
test
je
ins
sbb
jo
add
jmp
iret
daa
mov
inc
xchg
add
rcl
std
fdiv
add
mov
out
add
(bad)
fistp
and
fnclex
fldcw
add
cmp
pop
ret
jnp
(bad)
nop
sub
fistp
fwait
pop
pop
dec
cmp
adc
icebp
mov
les
std
inc
cmp
jb
cmp
jbe
mov
(bad)
jmp
adc
push
cwde
mov
cmp
add
cmp
jne
mov
mov
call
sub
add
mov
or
mov
xlat
outs
inc
adc
push
lea
push
sbb
adc
std
out
dec
iret
add
test
jne
cmp
cwde
cmp
jne
xor
pop
sub
xor
pop
mov
sbb
jae
imul
es
push
mov
dec
pop
loopne
fst
aam
jecxz
or
jg
out
fbstp
in
lock
sete
pcmpgtd
inc
add
xlat
mov
cs
fldz
aam
hlt
or
cwde
jno
push
mov
xor
mov
fcomip
inc
mov
mov
sub
dec
je
dec
je
aas
cmp
jmp
sub
add
cmp
sbb
sub
jmp
pop
inc
add
mov
shr
mov
aaa
inc
mov
dec
add
test
cld
pop
lock
push
push
push
push
lea
repnz
cmp
je
pop
mov
cmp
jne
dec
add
add
ss
fucomip
dec
inc
je
add
add
shr
add
arpl
pop
jae
retf
add
ja
in
mov
pop
dec
jne
cmp
(bad)
(bad)
std
shl
cmp
jmp
push
push
sub
dec
std
std
iret
pop
sahf
xor
jbe
cmp
inc
or
jg
out
sbb
iret
mov
test
xlat
je
push
jmp
cmp
inc
push
jmp
push
scas
adc
je
into
mov
popf
jecxz
xlat
je
push
add
sbb
pusha
inc
or
and
sbb
lock
(bad)
mov
jmp
or
cwde
jmp
jnp
mov
ret
xor
mov
lea
jle
inc
adc
xor
mov
inc
push
mov
ret
aas
lahf
or
aas
pop
cmp
dec
(bad)
cmps
inc
std
adc
inc
add
inc
outs
push
mov
sub
push
cmovns
jmp
(bad)
shl
sbb
fucomi
pop
cmp
aaa
sti
inc
add
jmp
add
fistp
retf
mov
arpl
cmp
daa
aaa
and
or
cld
hlt
jmp
xlat
jb
ja
and
cmp
jne
outs
sbb
lock
sbb
or
sbb
sbb
jmp
cmp
mov
outs
and
sti
fcmovnb
xor
mov
mov
xor
mov
inc
pop
cmp
adc
enter
ror
add
loope
enter
add
cld
jbe
mov
jmp
inc
mov
inc
sbb
adc
push
mov
int3
std
call
cmp
jbe
mov
mov
inc
inc
and
fnstsw
cmp
mov
xor
push
push
mov
inc
inc
sub
ja
mov
ret
jmp
pop
cmp
jne
dec
je
mov
mov
or
cmp
(bad)
inc
or
loop
push
add
add
pop
and
je
mov
cmp
jne
dec
je
mov
(bad)
(bad)
dec
cmp
jne
dec
je
mov
cmp
jne
add
jmp
pop
cmp
jne
cmp
jne
rcr
sti
jmp
or
adc
into
shr
or
jo
add
pop
(bad)
jmp
(bad)
cmp
or
add
ret
and
je
mov
cmp
jne
(bad)
(bad)
fwait
dec
dec
add
dec
add
dec
dec
add
dec
add
jae
nop
xor
ret
pop
arpl
nop
push
mov
mov
mov
shl
mov
mov
wbinvd
rep
mov
sub
jg
jmp
xor
imul
mov
mov
pop
or
(bad)
push
jecxz
(bad)
inc
int3
int3
int3
or
push
inc
cmp
je
mov
cmp
je
cmp
(bad)
(bad)
(bad)
sti
je
cmp
add
je
cmp
je
cmp
jne
daa
js
(bad)
mov
inc
test
je
jmp
add
cmp
ja
cmp
ja
(bad)
(bad)
out
ret
add
add
sub
or
or
out
(bad)
(bad)
jmp
neg
jle
js
pop
sub
jmp
inc
and
pushf
mov
or
lahf
std
ja
fild
sub
dec
jbe
sub
cmp
ja
cmp
in
ffree
or
shl
push
aad
int
add
fcomp
test
jle
mov
cmp
xchg
or
stc
adc
movs
outs
add
sbb
cmp
fcomp
push
rcl
add
bndstx
dec
test
push
(bad)
jg
push
js
add
test
push
or
retf
add
sub
push
push
mov
loopne
cld
shl
movs
call
in
add
pop
jmp
sbb
pop
pop
cmps
add
int
mov
mov
cmp
jle
sub
push
push
mov
nop
add
std
aaa
or
aas
aad
pop
ret
and
sbb
leave
jg
mov
pop
(bad)
(bad)
fdiv
inc
push
add
add
or
or
mov
adc
nop
mov
jmp
sbb
div
adc
(bad)
cmp
(bad)
pop
imul
push
cmp
jbe
adc
push
inc
mov
dec
jne
daa
frstor
pop
sub
mov
pop
mov
movs
repz
push
or
cmps
or
jnp
jg
push
fild
test
add
jge
dec
lea
fld
fmulp
shr
je
adc
(bad)
daa
iret
pop
loope
add
popa
arpl
lods
inc
ja
add
(bad)
adc
push
neg
dec
jge
cs
out
push
neg
pop
add
sbb
fnstsw
inc
stc
jmp
fstp
fld
fstp
fldz
pop
stos
jnp
push
xlat
mov
push
add
aad
add
mov
add
psubd
inc
pushf
or
ret
cmovg
and
adc
mov
mov
sbb
add
cmp
mov
mov
js
push
add
sub
test
call
xor
out
sub
pop
jecxz
add
leave
sbb
push
add
lds
mov
inc
jbe
imul
cmp
call
stc
add
(bad)
mov
bound
inc
add
xlat
fadd
nop
lods
outs
(bad)
(bad)
(bad)
push
js
xchg
add
test
in
int3
into
sbb
ror
mov
push
(bad)
(bad)
(bad)
call
push
inc
enter
mov
inc
cmp
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
cmp
inc
in
mov
mov
addr16
leave
repnz
bound
and
cld
gs
(bad)
(bad)
(bad)
call
lods
lds
iret
dec
js
rol
adc
lds
stos
mov
cmp
(bad)
(bad)
(bad)
jmp
xchg
test
stos
pop
out
sub
imul
(bad)
div
jl
xor
cmp
(bad)
(bad)
(bad)
(bad)
call
mov
stc
popf
sti
jmp
stos
push
inc
mov
push
sbb
sar
repnz
(bad)
(bad)
(bad)
inc
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
(bad)
(bad)
(bad)
jmp
repz
loope
jp
iret
inc
bound
ds
push
cmps
scas
mov
(bad)
(bad)
(bad)
call
or
add
cmp
xor
in
cmp
sahf
xchg
pop
cmps
lock
(bad)
(bad)
jmp
mov
popa
mov
fsub
addr16
repz
mov
sub
and
add
les
outs
bound
xor
jmp
xchg
cmp
fild
pop
jne
push
mov
fsub
or
aad
shl
mov
std
nop
push
mov
add
movzx
inc
mov
lea
push
push
mov
mov
or
pushf
jne
xor
push
push
loopne
push
mov
mov
push
lea
clc
pop
xlat
cdq
cmc
xor
sbb
push
das
cmp
cmc
(bad)
jg
mov
mov
jmp
push
clc
and
or
(bad)
(bad)
jmp
aam
in
ret
add
inc
push
push
inc
push
inc
pop
inc
outs
jb
popa
outs
fs
inc
gs
pop
loop
push
imul
push
dec
popa
jae
push
popa
ins
jne
scas
jmp
fninit
fld
mov
mov
mov
mov
ret
nop
xadd
jo
xor
mov
inc
adc
out
lahf
or
je
mov
or
dec
cld
jne
dec
mov
xor
and
jne
cmp
inc
mov
dec
mov
test
mov
fnstcw
fcomp
sbb
mov
movs
rcr
cld
adc
cmp
add
aaa
test
ffreep
lock
fiadd
sub
(bad)
xor
add
iret
sub
sar
ffree
nop
jo
mov
mov
call
rcl
ret
mov
stos
mov
inc
loop
fdiv
rcl
add
stos
pop
fs
mov
mov
test
je
call
cli
add
pop
fcomp
mov
jmp
cmp
je
pop
mov
add
mov
push
in
(bad)
inc
jnp
mov
add
dec
jne
jne
mov
call
mov
mov
mov
test
je
inc
inc
jmp
push
jmp
stc
lock
adc
(bad)
jb
movsx
add
jmp
jmp
or
mov
mov
push
dec
add
push
xor
cmp
fnstenv
fisttp
mov
mov
xor
(bad)
clc
and
push
loopne
jbe
push
mov
imul
shl
in
adc
clc
mov
adc
add
inc
push
mov
call
jmp
lea
mov
and
sbb
add
jmp
xchg
ret
sbb
xor
pop
jb
dec
in
cmp
cmp
ret
loop
push
push
(bad)
(bad)
mov
inc
mov
add
mov
cmp
jne
mov
cmp
jne
mov
or
jo
jne
mov
cmp
je
add
fmul
mov
je
add
rcl
sub
pop
lock
outs
clc
(bad)
fbld
mov
mov
cmp
je
mov
test
jne
mov
sbb
je
nop
cld
(bad)
fcomip
push
xchg
jmp
gs
test
je
movzx
push
add
repnz
je
pop
sbb
test
enter
cld
pop
arpl
idiv
les
add
fs
pop
je
jmp
pop
inc
sbb
pop
clc
aas
(bad)
ja
add
shl
jne
ret
mov
ret
nop
add
in
loopne
(bad)
pop
mov
add
lock
aas
push
mov
or
je
cmp
jae
push
and
in
clc
mov
add
loope
pop
popa
lock
push
(bad)
cmp
(bad)
push
xor
xor
mov
pusha
mov
xor
mov
dec
push
ja
std
out
cmp
je
push
add
dec
jne
js
jmp
sub
mov
into
mov
dec
sbb
and
jne
dec
sbb
rcr
int
add
mov
dec
adc
in
jg
push
sbb
jne
dec
fcomp
sbb
jbe
jmp
dec
in
push
pop
add
push
clc
(bad)
(bad)
call
push
test
jl
call
xor
lea
mov
mov
mov
mov
cmp
or
mov
pop
pop
pop
cld
sub
mov
mov
outs
xlat
hlt
sbb
adc
add
jmp
sbb
cmps
scas
or
(bad)
jg
pop
cli
mov
test
jg
ret
push
push
adc
pop
pop
ret
nop
cmp
ja
loopne
jbe
aas
into
(bad)
in
push
call
jae
sbb
je
push
push
push
push
pop
adc
fldcw
sbb
addr16
cmp
push
sbb
or
mov
ins
ret
jae
fsubr
pop
dec
add
push
push
adc
(bad)
call
push
leave
je
mov
cmp
je
cmp
jne
movsx
inc
inc
jmp
add
shl
add
sbb
int3
shl
jno
pop
cmp
test
pop
pop
cmp
int3
out
inc
adc
jecxz
pop
out
add
loopne
dec
add
inc
add
jne
xchg
mov
mov
je
push
or
mov
je
ror
(bad)
outs
and
dec
and
cmp
je
ds
cmp
jbe
js
ja
neg
adc
push
add
clc
add
test
add
dec
or
xor
cmp
cld
psubw
jbe
adc
or
sbb
ja
cmp
je
or
fist
push
fs
popf
loope
sbb
xchg
push
push
push
push
call
mov
sub
mov
jmp
add
inc
add
cmp
aas
aam
sub
add
mov
shl
adc
sbb
cwde
mov
lock
outs
adc
out
rcr
js
push
sbb
(bad)
scas
xchg
and
mov
mov
mov
outs
cmp
dec
add
pop
add
lds
out
fadd
(bad)
fist
clc
je
mov
cmp
jne
mov
push
fstp
std
xor
inc
inc
leave
pop
int3
je
mov
xor
ja
adc
jne
add
dec
jne
mov
adc
jo
mov
or
cmp
popa
xchg
lahf
icebp
mov
add
mov
(bad)
xchg
push
xchg
xchg
out
and
push
popf
sub
je
adc
xchg
or
pop
push
mov
popa
cmp
xor
mov
into
std
inc
mov
mov
les
push
push
push
and
icebp
cmp
add
push
jmp
out
xchg
xor
inc
add
dec
sub
js
mov
add
outs
je
mov
push
inc
mov
sbb
rol
pop
mov
mov
jp
xor
jmp
dec
cmp
ja
jg
mov
xor
pop
mov
pop
pop
daa
sub
jmp
ret
xor
mov
jg
and
call
ret
jg
jmp
or
xchg
add
sar
pop
cmp
push
(bad)
out
mov
je
sub
dec
je
jmp
add
mov
call
xor
push
cmp
cmp
cs
je
dec
(bad)
(bad)
(bad)
std
je
jmp
sub
call
sub
enter
leave
jmp
mov
jmp
mov
(bad)
(bad)
out
iret
jmp
bndldx
into
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
or
sbb
in
retf
cmp
mov
psrld
dec
dec
leave
add
je
sub
mov
and
xor
xchg
cmc
jg
push
cmp
inc
sbb
cli
(bad)
in
jle
(bad)
(bad)
dec
out
or
mov
dec
jle
push
sar
add
fnstcw
rcr
adc
and
les
shl
inc
hlt
mov
push
mov
in
je
cmps
not
std
push
inc
cmp
shl
pop
mov
cmp
sub
mov
cmp
je
cmp
sub
add
jb
cmp
mov
fnsave
mov
cs
mov
mov
hlt
mov
xchg
hlt
test
jle
dec
mov
inc
fdivp
mov
mov
rol
jmp
cwde
xchg
xor
sub
xor
das
xor
mov
mov
pop
pop
ret
cmps
retf
mov
fcomp
cmp
xor
fisttp
cmp
jle
inc
fmulp
dec
sbb
repz
push
clc
pop
(bad)
add
add
add
sti
jmp
mov
dec
mov
add
sub
jo
sbb
xor
mov
dec
add
cmp
sbb
inc
add
push
add
in
ja
add
push
mov
dec
jne
pop
pop
pop
and
cmp
and
sbb
jg
xor
add
mov
add
dec
mov
push
mov
mov
mov
pop
cdq
idiv
add
xor
mov
mov
mov
cmp
call
mov
dec
test
jne
mov
mov
(bad)
(bad)
and
mov
mov
mov
shr
dec
test
jne
imul
mov
xchg
rol
add
call
mov
push
push
mov
mov
pop
(bad)
aas
cld
movs
leave
adc
dec
or
cmp
mov
cmp
or
or
mov
push
push
sbb
dec
sbb
push
jne
not
pop
ret
cmp
xchg
ins
call
ds
jo
ret
add
add
sti
fsub
fmul
test
idiv
sub
jne
cmp
je
mov
mov
xor
mov
mov
call
ins
jo
ja
jne
cmp
test
xor
xor
frstor
inc
push
xor
add
add
adc
mov
dec
adc
inc
add
or
push
ror
mov
jg
jne
call
or
je
xor
cmp
jne
out
ja
pop
push
call
or
jmp
add
lock
popa
pop
sysenter
sub
jnp
aaa
ret
mov
ret
nop
pop
fucomp
mov
push
xor
push
push
sar
mov
mov
mov
push
push
sbb
call
xor
push
add
push
or
xchg
shl
iret
adc
mov
cmp
mov
call
mov
mov
mov
mov
(bad)
mov
push
push
mov
push
push
push
and
pop
and
xchg
arpl
clc
mov
out
ret
nop
mov
test
je
mov
clc
dec
jl
lock
jne
push
lea
xor
cmp
in
(bad)
xchg
xchg
mov
mov
sub
(bad)
or
mov
xor
push
or
add
dec
jne
rcl
pop
neg
ret
nop
daa
and
inc
jg
mov
aas
sbb
sbb
dec
or
adc
pop
jmp
lock
xchg
or
out
adc
dec
jl
inc
or
jmp
sub
sar
add
icebp
(bad)
(bad)
out
and
(bad)
pop
sbb
mov
or
push
cld
mov
les
ret
xor
mov
mov
mov
xchg
stc
mov
hlt
or
mov
lock
cmp
push
mov
sub
imul
xchg
push
jnp
jle
push
push
mov
add
mov
sbb
lock
sar
pop
cld
inc
hlt
add
mov
idiv
and
xor
outs
add
add
push
push
or
or
mov
mov
jl
(bad)
icebp
(bad)
mov
adc
out
mov
add
mov
mov
push
cmp
or
das
jge
push
jl
ret
(bad)
mov
push
mov
mov
(bad)
jmp
pop
ret
nop
xor
movs
and
or
dec
add
dec
add
dec
add
cld
inc
call
rcr
shr
jne
pop
das
sub
je
cmp
add
int
xlat
push
xor
jmp
add
add
shr
sar
ds
cmp
inc
ret
nop
push
push
push
(bad)
push
repnz
jne
not
pop
add
pop
pop
sbb
or
push
mov
test
je
cmp
jl
mov
cmp
hlt
(bad)
add
(bad)
mov
mov
ret
sub
(bad)
(bad)
jg
cld
je
jns
mov
mov
add
cmp
je
sbb
cmp
cld
mov
add
or
std
out
fisttp
cmp
jmp
inc
popa
test
je
je
cmp
je
jmp
test
pop
cmps
cmp
ror
into
push
mov
add
inc
(bad)
cmp
mov
sbb
cli
bound
push
push
pop
mov
(bad)
jle
test
je
dec
xor
dec
xor
out
push
cmp
push
push
push
mov
xor
mov
test
je
cmp
jne
mov
std
jmp
mov
dec
jmp
xor
adc
cmp
jne
xor
dec
jne
fistp
fld
mov
mov
add
(bad)
jg
aaa
dec
jmp
sbb
(bad)
mov
mov
sbb
or
add
in
adc
jne
pop
pop
test
jne
sub
clc
cmp
dec
jecxz
xlat
xchg
pop
lea
jmp
ret
pop
call
arpl
cmp
je
out
call
cld
mov
and
je
sub
sbb
dec
cmp
jne
dec
je
cmp
fdivr
sti
push
dec
je
and
and
daa
add
jmp
pusha
sbb
jmp
push
shl
sar
pop
mov
pop
inc
clc
daa
shl
mov
scas
das
inc
push
dec
cmp
mov
mov
fist
push
or
sbb
mov
mov
jo
clc
jne
lea
pop
xor
cmp
stos
pushf
cmp
or
jg
adc
cmp
dec
jl
mov
fidivr
sub
test
jl
cmp
jg
add
stc
je
cmp
inc
jmp
xor
jmp
mov
jmp
adc
mov
iret
jnp
fs
push
inc
xor
dec
jl
cmp
jge
test
jle
sub
cmp
jle
mov
jl
jg
sub
add
lea
sbb
adc
sub
mov
mov
push
dec
mov
push
mov
and
adc
xlat
inc
xlat
mov
mov
mov
jmp
jne
mov
mov
lea
clc
sub
add
add
dec
fcomip
jmp
mov
add
fbstp
adc
mov
mov
mov
hlt
mov
ss
js
mov
inc
sub
jle
lods
adc
out
jbe
mov
popf
je
in
pop
xor
jmp
iret
ror
push
pop
mov
sub
xchg
(bad)
mov
inc
add
add
sub
dec
or
loopne
pop
pop
pop
xchg
mov
mov
mov
(bad)
dec
push
call
inc
xor
mov
jae
mov
in
icebp
sub
mov
push
cmp
ret
push
mov
mov
xor
adc
je
jnp
retf
in
mov
pop
btr
ret
mov
cld
mov
jmp
out
push
popa
add
leave
dec
mov
push
push
mov
sti
int3
or
mov
or
cld
xor
jo
loopne
call
jp
mov
je
sub
sbb
mov
cmp
or
pop
jmp
sbb
ss
loopne
enter
cmp
fst
dec
enter
movs
sub
or
movs
mov
jecxz
and
fisttp
push
popa
pop
int3
sbb
mov
mov
adc
cmp
cmp
shl
mov
sbb
add
nop
add
mov
sbb
mov
call
push
shl
cmp
je
outs
push
push
add
in
sbb
inc
cmp
and
mov
jmp
pop
pop
and
bound
fild
pop
cvtps2pd
or
or
jecxz
sbb
push
inc
dec
fidivr
xor
add
xor
jmp
dec
cmp
jge
jl
push
icebp
loop
ret
ret
cmp
punpcklbw
rol
(bad)
mov
jae
fsub
mov
dec
dec
call
mov
xor
test
jle
add
mov
mov
pop
cmp
enter
xor
dec
rcl
in
dec
in
xor
outs
cmp
inc
aas
mov
push
inc
push
ds
popa
shr
mov
call
mov
pop
lea
mov
mov
add
fmul
push
pushf
add
rcr
not
xor
cmp
je
cmp
je
std
(bad)
call
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
call
je
popf
dec
jg
jmp
mov
mov
(bad)
(bad)
(bad)
dec
or
ret
adc
out
jmp
push
mov
mov
mov
add
mov
mov
int3
std
mov
dec
jg
pop
jmp
sbb
dec
gs
cli
or
lock
leave
ret
inc
sbb
fadd
pop
cmp
sti
add
adc
push
sbb
stc
add
test
loopne
dec
aaa
mov
loope
and
jge
pop
jbe
(bad)
je
test
xor
inc
repnz
mov
jg
xor
push
adc
mov
pop
xor
pop
imul
cmps
ja
cmp
jmp
mov
add
cmp
and
repz
jmp
sbb
or
mov
sub
dec
in
inc
sbb
sar
popf
jmp
mov
pop
push
inc
xor
jg
jmp
clc
pop
adc
or
loopne
adc
xchg
sbb
inc
pop
inc
lock
fnstsw
adc
or
xor
dec
sbb
cmp
dec
sar
outs
jp
fidiv
cmp
adc
sar
call
inc
inc
push
xchg
add
xchg
and
pop
in
sbb
push
dec
and
pusha
lock
popa
ffreep
pop
adc
dec
pusha
inc
or
out
inc
cwde
push
xlat
sbb
inc
pusha
xlat
das
xor
mov
lea
mov
cld
push
dec
clc
push
mov
sub
jle
mov
add
(bad)
(bad)
fbstp
inc
add
pop
mov
mov
cmp
je
cmp
je
cmp
xor
stc
or
push
je
cmp
sub
fwait
ret
stc
cmp
mov
retf
stos
arpl
sbb
add
test
fcom
jge
cmp
ins
lea
fdivp
dec
cmp
add
pop
xor
(bad)
push
sti
ret
call
or
inc
dec
pop
jmp
pop
in
(bad)
pop
pop
add
rcr
inc
xor
and
popa
lahf
cmp
add
mov
adc
xlat
rcr
add
mov
test
pop
jge
lea
add
mov
in
cmp
ins
and
mov
test
cdq
inc
push
popa
jge
add
lea
idiv
mov
xor
add
jne
cmp
shl
inc
aaa
push
cmp
jmp
mov
imul
xor
(bad)
adc
jmp
loop
clc
outs
inc
dec
cwde
cmp
sbb
dec
or
ja
inc
dec
add
loope
in
add
dec
jne
outs
adc
pop
cs
mov
cmp
add
dec
jne
cmp
(bad)
fisub
sbb
gs
xor
aad
fisub
in
icebp
mov
xor
das
push
push
mov
mov
or
mul
add
mov
retf
ret
aaa
(bad)
mov
inc
ins
dec
ret
in
push
clc
sar
jne
inc
dec
jmp
mov
pop
inc
xor
inc
add
(bad)
jg
fs
cwde
repnz
mov
mov
mov
mov
test
js
(bad)
jg
test
jge
mov
sub
(bad)
ss
sar
inc
pop
xor
mov
loope
sub
hlt
(bad)
mov
pop
xor
mov
add
mov
mov
mov
mov
std
(bad)
push
sahf
add
xor
add
test
inc
in
inc
in
idiv
cmp
je
(bad)
out
xchg
inc
in
dec
add
xor
jge
jge
(bad)
(bad)
dec
push
sbb
imul
add
mov
sub
sti
out
(bad)
mov
or
mov
pop
mov
jmp
dec
push
std
jg
lahf
push
sbb
in
cmp
jge
mov
inc
sub
fiadd
mov
inc
dec
xchg
cmp
pop
add
mov
push
and
adc
imul
call
sub
mov
add
mov
rol
or
sbb
add
mov
cmp
xlat
sub
dec
inc
call
add
push
icebp
(bad)
inc
cmp
jle
add
dec
dec
test
jl
inc
mov
ja
dec
push
mov
lea
mov
ret
inc
hlt
cld
popa
xlat
out
dec
jne
mov
or
add
or
cmp
inc
pushf
ret
nop
adc
cmp
dec
jne
push
mov
ja
add
sbb
test
je
mov
call
in
mov
push
mov
ja
inc
pop
stos
push
adc
dec
jne
push
push
mov
inc
pop
lock
dec
inc
xor
pop
mov
out
shl
xor
aas
jo
mov
mov
cmp
jl
adc
jne
ins
jo
loope
rol
les
gs
movs
icebp
(bad)
push
fadd
push
push
adc
or
mov
test
les
or
mov
mov
sub
out
dec
inc
add
inc
adc
cmp
out
test
scas
sbb
(bad)
cmp
je
cmp
jne
mov
push
ret
mov
test
jne
ret
jmp
cld
jg
lods
push
mov
test
je
cmp
jne
xchg
jo
add
clc
mov
and
cld
inc
hlt
push
add
pop
jnp
lock
inc
add
add
lods
test
sbb
sbb
adc
mov
pop
das
loopne
dec
loop
cmp
jne
fstp
add
or
add
jnp
call
leave
imul
lea
adc
jmp
in
push
mov
add
mov
sub
lea
jno
pop
pop
sub
add
cmp
(bad)
aas
clc
mov
sub
mov
add
inc
cmp
jp
inc
adc
add
mov
out
lea
or
(bad)
fdiv
js
test
pop
sbb
lea
add
inc
cmp
dec
jg
mov
ret
dec
inc
sub
xchg
adc
aas
inc
add
mov
loop
push
xchg
call
mov
ffree
ret
imul
gs
idiv
(bad)
xor
cs
ins
cld
add
je
outs
outs
addr16
popa
je
dec
popa
ins
gs
adc
out
scas
jae
(bad)
loopne
movs
inc
cld
mov
addr16
jecxz
lock
lea
aaa
lea
add
add
push
push
xchg
ins
or
je
sbb
fld
jne
adc
sbb
outs
inc
pusha
les
mov
test
(bad)
mov
inc
pop
lea
push
lea
xchg
push
cs
cwde
sbb
ja
das
jae
pop
push
pusha
sar
mov
or
and
xchg
test
jl
mov
sar
loopne
add
push
add
adc
(bad)
sti
mov
and
inc
cmp
jne
sbb
xor
jge
psrlq
fsubr
addr16
or
dec
cmp
je
(bad)
fdiv
or
(bad)
jmp
je
je
mov
sub
push
or
fadd
out
jb
jo
cmps
mov
cs
je
jns
mov
pop
aaa
repz
and
inc
cmc
inc
xor
mov
pop
pop
pop
ret
add
push
outs
data16
popa
jb
sub
popa
xchg
dec
outs
arpl
gs
sbb
pusha
mov
inc
mov
or
cmc
dec
nop
mov
dec
mov
push
mov
adc
jle
adc
outs
loopne
pop
mov
mov
cmp
mov
cmp
jne
mov
mov
mov
js
outs
add
daa
mov
mov
mov
jb
in
outs
gs
icebp
mov
mov
daa
add
ss
(bad)
fldcw
pop
add
js
gs
mov
mov
cmp
enter
dec
pop
mov
sbb
push
add
pop
jo
inc
jmp
add
cld
lods
das
mov
add
jne
ss
ror
sbb
push
jmp
push
cwd
sub
push
adc
pop
adc
popa
aas
fcom
inc
imul
into
std
jbe
cmp
out
or
pop
mov
push
and
mov
cmp
jne
cmp
je
out
mov
shl
fist
cs
ret
add
add
push
cmps
push
inc
loope
mov
add
mov
pop
test
aas
call
ret
mov
push
and
in
mov
je
push
std
mov
imul
push
push
test
pop
mov
mov
mov
xlat
mov
mov
pop
push
pop
popf
mov
sar
xchg
cmp
inc
sti
push
pop
shl
data16
jmp
push
mov
sbb
pop
or
icebp
adc
dec
inc
loope
sar
xor
jmp
mov
pop
jae
mov
sbb
jmp
es
or
neg
ja
or
push
cld
mov
push
add
pop
mov
xor
out
xor
sbb
xor
sbb
sub
ins
mov
movzx
inc
cmp
ja
mov
inc
jmp
cmp
popa
jbe
lea
cmp
ja
mov
shr
or
mov
(bad)
(bad)
mov
jecxz
or
mov
and
or
mov
add
jmp
leave
fdiv
xor
and
shl
add
cmp
jae
cmp
jb
add
jmp
dec
mov
jmp
sbb
mov
add
inc
inc
sbb
jecxz
push
add
(bad)
sbb
imul
inc
loop
hlt
mov
jge
xchg
sbb
sbb
mov
xor
cmp
or
test
dec
xchg
mov
xor
fild
xor
rol
jae
test
(bad)
(bad)
out
and
mov
inc
mov
and
cmp
jne
and
loop
sub
cmp
shl
or
mov
sub
and
mov
jmp
mov
(bad)
out
or
inc
dec
jae
cmp
jb
add
psadbw
pop
dec
push
mov
and
test
aas
fdiv
je
adc
je
sbb
cli
mov
push
sbb
adc
arpl
inc
and
fwait
daa
mov
int3
xor
jl
arpl
repnz
lock
(bad)
mov
push
mov
xor
call
je
and
lock
icebp
xor
lahf
sub
sbb
mov
cmp
push
and
ja
in
mov
pop
and
test
jle
mov
dec
lea
jne
jg
cmp
(bad)
in
xor
dec
shl
push
fadd
in
into
mov
out
xor
popa
cmp
dec
pop
sub
mov
cmp
mov
inc
movs
adc
cmp
adc
jb
fdivr
movs
cmp
out
sti
jne
push
mov
cwde
mov
outs
and
pop
mov
in
das
bound
(bad)
push
cmp
scas
es
ror
or
dec
fild
cld
(bad)
inc
call
cmp
jge
push
cwde
lea
push
in
add
inc
sbb
fmul
add
inc
jmp
mov
add
xor
lock
xor
mov
nop
std
jg
lock
dec
nop
push
lea
push
push
fdivr
push
mov
lock
pop
mov
lea
and
fmul
cmp
es
xor
sbb
xor
xor
or
mov
cmp
ds
and
inc
jne
mov
mov
pop
int3
adc
or
add
loopne
outs
mov
pop
sar
fdivr
imul
add
add
mov
pusha
add
mov
sbb
push
mov
xchg
and
rol
xchg
es
es
mov
or
or
add
dec
aam
mov
add
add
fild
mov
or
jbe
cmp
push
scas
cli
aas
add
add
or
add
add
jmp
add
adc
or
fstp
rcl
dec
mov
jmp
add
mov
push
push
cs
lods
out
test
push
ror
cmp
cmp
mov
mov
shl
add
jne
adc
or
mov
sub
push
mov
pusha
xchg
adc
imul
out
mov
and
fcomp
sub
hlt
add
mov
out
fdivr
mov
ins
ret
out
pop
hlt
out
arpl
shl
fs
mov
sbb
push
mov
xor
pop
mov
cmps
push
pop
jecxz
das
aad
call
add
sbb
adc
js
mov
sub
aaa
dec
mov
mov
or
inc
or
dec
or
cmp
les
mov
mov
pop
in
ja
dec
outs
and
enter
or
push
or
enter
sbb
std
sub
ja
add
fs
add
xor
mov
or
push
gs
arpl
or
inc
jb
jns
adc
(bad)
std
push
bound
or
inc
push
inc
outs
arpl
push
ja
inc
gs
jne
je
dec
outs
je
imul
arpl
fstp
(bad)
mov
inc
arpl
ins
or
xor
pop
in
jmp
push
gs
jb
gs
xor
arpl
(bad)
(bad)
(bad)
(bad)
jmp
outs
js
imul
ja
nop
adc
inc
add
andps
outs
gs
jb
jnp
(bad)
(bad)
ja
je
je
add
imul
xor
mov
js
inc
inc
jmp
inc
push
jo
push
fs
pop
inc
push
sbb
push
push
sbb
dec
inc
inc
sbb
cmp
xor
nop
inc
push
xor
nop
inc
push
sbb
sbb
push
sbb
adc
sbb
or
sbb
cld
(bad)
clc
pop
hlt
fs
inc
push
lock
call
in
fadd
sbb
rol
sbb
enter
fs
inc
mov
inc
push
mov
test
inc
push
sbb
fs
xchg
nop
push
sbb
mov
jl
je
nop
inc
push
jo
push
fs
pop
inc
push
sbb
push
push
sbb
dec
inc
inc
push
sbb
or
inc
fs
(bad)
pusha
pop
pop
xor
and
and
and
cmp
xor
or
enter
sbb
enter
adc
enter
or
add
or
pop
or
hlt
lock
call
in
fdiv
enter
aam
enter
int3
enter
or
sar
mov
test
xor
and
sbb
push
fcom
nop
inc
push
sbb
sar
mov
mov
lods
test
fs
inc
movs
mov
push
cwde
xchg
nop
nop
inc
push
sbb
cmp
fs
je
ins
push
fs
pop
fs
inc
push
pop
push
push
nop
inc
push
sbb
inc
push
sbb
cmp
sbb
xor
sbb
and
sbb
nop
inc
push
sbb
nop
inc
push
sbb
add
daa
sbb
add
xchg
mov
pop
or
hlt
lock
call
in
fdiv
enter
aam
enter
int3
enter
or
sar
mov
lods
sbb
push
pop
movs
mov
pushf
cwde
xchg
pcmpgtb
mov
test
fs
jo
sbb
push
nop
inc
pop
pop
push
fs
inc
push
push
dec
dec
nop
inc
push
sbb
inc
push
sbb
xor
sbb
sub
sbb
sbb
adc
nop
inc
push
adc
lods
inc
push
sbb
cld
scas
nop
inc
push
sbb
pop
hlt
lock
push
sbb
in
sbb
(bad)
aam
fs
inc
ror
enter
push
(bad)
sar
mov
push
sbb
movs
push
sbb
pushf
cwde
xchg
sbb
nop
mov
test
sbb
jo
jge
dec
mov
movzx
shl
or
cmp
pop
cdq
add
rcl
jo
pop
cmp
in
test
push
push
call
push
lock
bound
pop
sbb
ret
nop
shl
(bad)
(bad)
out
test
push
mov
movsx
mov
movsx
mov
(bad)
inc
pop
ret
push
mov
mov
mov
mov
mov
add
popa
pop
push
lahf
fadd
loope
jecxz
mov
sbb
sbb
scas
or
mov
add
and
pop
call
add
and
cld
push
push
dec
add
mov
pop
pop
pop
pop
pop
ret
inc
data16
push
push
rol
push
sub
add
push
mov
mov
push
push
ins
add
pop
mov
or
mov
mov
push
test
mov
push
sbb
test
je
(bad)
mov
(bad)
out
cmps
(bad)
and
add
pop
stc
xor
mov
cmp
je
aas
leave
and
or
inc
or
add
jo
ret
jmp
dec
popa
gs
ins
popa
outs
and
push
dec
inc
inc
dec
dec
neg
in
cmps
leave
pop
add
adc
dec
dec
dec
dec
push
inc
pxor
jg
dec
pop
and
push
push
push
dec
push
push
pop
adc
dec
push
dec
pop
xor
fist
and
inc
push
pop
cmps
xor
fld
xor
ja
mov
sbb
push
add
adc
test
sbb
aaa
add
pop
mov
inc
add
or
icebp
pop
repnz
hlt
cmc
div
or
enter
xor
pusha
lahf
inc
cli
psubq
cld
enter
std
(bad)
jmp
or
loopne
aas
fsub
pop
pop
jecxz
in
enter
in
out
or
jmp
enter
out
or
enter
shl
enter
rcl
enter
aad
xlat
and
fiadd
(bad)
fimul
enter
shl
and
and
and
retf
xor
retf
int3
int
or
enter
mov
enter
mov
enter
mov
mov
or
xor
div
mov
mov
xor
and
and
and
and
inc
and
mov
jmp
and
push
add
cmp
or
push
inc
imul
nop
dec
femms
or
popa
jb
push
add
add
xor
repnz
mov
leave
pop
into
add
adc
call
pop
daa
iret
or
push
jmp
xchg
adc
add
inc
js
gs
fisttp
mov
imul
add
adc
outs
aaa
addr16
mov
inc
dec
gs
jo
mov
je
pop
pop
(bad)
jg
in
or
dec
jne
dec
dec
gs
outs
jb
out
test
pop
pop
ror
fs
push
or
or
outs
pop
inc
jb
outs
jb
ja
(bad)
jg
neg
push
or
js
gs
popa
ins
mov
xor
and
xchg
sbb
adc
mov
pop
pop
pop
inc
push
je
mov
idiv
nop
jg
dec
inc
imul
outs
nop
nop
push
aas
add
pop
push
or
popa
out
inc
in
outs
addr16
test
rcr
call
jbe
pop
pop
dec
jbe
jb
ins
outs
ja
inc
jns
add
out
sub
gs
dec
inc
dec
popa
je
mov
pushf
push
pop
mov
clc
mov
popa
mov
retf
imul
push
clc
xchg
and
inc
mov
imul
dec
pop
pop
push
or
ret
pusha
mov
movs
push
pop
daa
cld
adc
push
or
outs
fs
mov
push
pop
push
xchg
mov
outs
imul
pop
jnp
pop
neg
xor
outs
pop
pop
retf
inc
popa
jae
outs
mov
pop
in
and
outs
outs
retf
mov
xlat
adc
adc
jg
(bad)
retf
adc
arpl
jae
push
imul
pop
push
mov
cld
and
jb
jbe
add
in
gs
enter
test
jecxz
push
inc
push
je
arpl
nop
and
adc
add
pop
pop
or
jb
ins
inc
mov
jl
pop
push
stc
push
and
push
popa
jb
popa
outs
fsub
mov
retf
pop
shl
loope
(bad)
jae
gs
inc
popa
outs
fs
dec
fadd
cmp
pop
pop
fnstenv
inc
bound
jb
arpl
test
dec
outs
je
inc
(bad)
pushf
cmp
pop
aas
add
lock
retf
xchg
or
push
pop
and
bound
dec
jg
loop
adc
mov
inc
push
popa
data16
ins
jb
mov
adc
cs
xor
shl
rcr
dec
pop
or
jae
je
ins
jae
rol
inc
push
push
cwde
jae
add
cld
das
push
add
xchg
sti
pop
inc
sbb
add
pop
dec
(bad)
push
push
push
mov
jne
repnz
int3
add
jmp
pop
lock
lds
and
test
or
or
dec
sar
arpl
aam
xor
inc
adc
(bad)
aas
shl
sub
push
mov
jnp
sbb
in
pop
in
push
loopne
sbb
mov
fsubr
cmp
or
pop
add
les
inc
add
test
aam
add
dec
jne
je
push
ficom
ins
jne
imul
gs
jns
arpl
outs
outs
imul
and
bnd
adc
repz
or
(bad)
mov
mov
pop
sbb
push
pop
cs
mov
fadd
retf
mov
mov
dec
rcr
jo
das
or
xor
mov
loopne
inc
or
sbb
leave
shr
dec
shl
pop
mov
cmp
clc
ja
std
inc
add
adc
add
or
mov
pop
cmp
shl
fadd
or
adc
mov
mov
mov
lock
push
add
pop
or
add
inc
add
mov
jge
cmp
(bad)
jmp
idiv
mov
test
je
mov
cmp
jb
cmp
xchg
(bad)
jp
add
mov
inc
inc
dec
test
jne
mov
ret
cmp
jmp
push
(bad)
mov
shl
push
cld
inc
std
(bad)
dec
add
cmps
je
movzx
movzx
call
jg
mov
mov
xor
and
push
mov
repz
jne
std
jne
inc
or
ret
push
push
push
daa
push
adc
adc
sub
cmp
ja
mov
jg
cmp
jb
cmp
out
and
sti
je
movzx
movsx
mov
rcr
nop
cmp
je
push
pop
sahf
adc
dec
cld
cmp
jg
sar
mov
mov
add
xchg
repnz
sbb
lock
icebp
bound
push
push
data16
xchg
arpl
sub
std
aaa
lds
xor
(bad)
popf
or
aas
sub
test
sete
std
ret
mov
lea
push
push
push
lods
xchg
or
mov
out
call
mov
cmp
jl
cmp
jbe
cmp
jge
(bad)
(bad)
mov
pop
dec
cmp
push
mov
sub
inc
mov
sub
je
sub
cmp
sti
add
push
clc
push
lock
stos
in
mov
mov
mov
and
mov
ins
add
or
(bad)
jg
mov
jbe
mov
mov
sub
je
sub
je
jmp
cmp
jne
dec
hlt
jmp
or
cmp
jne
inc
jmp
adc
push
dec
jmp
(bad)
bt
(bad)
mov
or
mov
ja
lea
clc
mov
dec
mov
outs
cmp
inc
hlt
jne
mov
mov
xor
cwde
adc
(bad)
mov
inc
mov
mov
cmp
jbe
xchg
fcos
(bad)
sahf
adc
sub
inc
mov
inc
inc
jmp
adc
cmp
jne
inc
jmp
xchg
push
test
sbb
ret
mov
add
jge
add
jmp
mov
mov
inc
jne
xchg
add
or
sub
scas
cmp
inc
xor
mov
dec
shl
xlat
lock
arpl
push
add
sub
jb
adc
dec
sub
je
add
sub
jae
sbb
jl
inc
mov
pop
in
push
inc
add
sub
jb
sub
mov
std
add
or
push
inc
dec
jne
mov
mov
nop
or
jne
or
jns
neg
xor
sub
ret
mov
or
push
xor
div
dec
add
cmp
jb
add
mov
or
jne
pop
pop
jg
(bad)
jmp
icebp
sub
jbe
add
mov
sub
jmp
mov
dec
jne
xor
in
adc
adc
push
xor
jne
mov
mov
fistp
inc
add
pop
aaa
imul
test
xor
add
xor
adc
neg
call
daa
jbe
mov
dec
inc
add
ret
push
sub
fnstcw
fnstcw
arpl
(bad)
jmp
or
add
fldcw
mov
fld1
adc
mov
add
xor
inc
add
jg
add
fild
fild
fdivr
(bad)
(bad)
out
ret
sub
fild
fild
fld
dec
fprem
fistp
fdivr
mov
add
cmp
(bad)
(bad)
(bad)
push
add
mov
fld
fcom
fstsw
sahf
jae
fldcw
add
ffree
ffree
ffree
ffree
pop
inc
add
addr16
xor
jl
fwait
out
and
leave
push
test
pop
iret
js
in
mov
and
xor
sub
outs
std
enter
sbb
push
push
add
inc
mov
pop
and
lock
je
mov
adc
inc
and
or
mov
sub
sbb
dec
mov
add
mov
mov
xor
mov
add
push
jmp
and
push
push
xor
cmp
test
aam
xlat
pop
and
push
mov
pop
ror
inc
sub
scas
loopne
daa
mov
test
mov
or
lods
and
mov
cs
inc
clc
sbb
adc
fmul
push
mov
xchg
inc
mov
test
jl
inc
adc
mov
mov
lock
ja
jae
test
je
sbb
sub
(bad)
jecxz
inc
inc
pop
lahf
cmp
inc
cld
jg
(bad)
lock
mov
mov
lea
mov
test
lock
je
fld
fcomp
loop
xchg
add
dec
fnstenv
push
mul
(bad)
xlat
or
ror
js
pop
xor
fnstcw
add
and
and
cs
add
add
mov
lea
add
pop
imul
lahf
fimul
lea
mov
aaa
add
ja
test
je
mov
mov
ins
in
test
and
pop
mov
fcom
mov
mov
inc
in
jbe
test
adc
mov
lock
inc
and
cmp
ja
mov
and
inc
ja
mov
adc
add
mov
and
lds
test
mov
cmp
cmp
jmp
ret
jbe
mov
cmp
shr
pop
sbb
stos
ror
pop
iret
jns
mov
mov
loopne
add
jl
xor
sahf
mov
mov
xor
loopne
bound
mov
shl
cmps
inc
or
push
lea
push
(bad)
push
icebp
arpl
ds
push
cld
pop
scas
aas
test
les
pop
push
inc
adc
hlt
mov
(bad)
call
lea
std
rol
cmp
je
or
neg
out
inc
cmp
jne
jae
enter
ret
sti
aaa
mov
push
pop
sbb
jo
inc
cld
rol
in
pop
sbb
in
aas
jp
inc
setne
pop
ret
packuswb
inc
outs
sub
add
adc
neg
inc
jne
dec
jmp
lea
push
mov
ins
std
(bad)
mov
push
dec
jmp
mov
and
jne
push
lea
mov
les
inc
add
(bad)
cwde
mov
mov
mov
lea
lea
mov
mov
and
inc
in
dec
and
mov
push
adc
inc
add
cmp
dec
push
mov
ins
stos
push
and
jl
jmp
push
dec
cwde
jae
push
(bad)
pop
xlat
inc
(bad)
or
mov
je
cmp
dec
test
mov
icebp
or
cmp
mov
in
jg
xor
loopne
daa
pop
push
add
xor
inc
dec
enter
pop
jmp
dec
cmp
jg
adc
repnz
in
push
shl
das
push
adc
pop
shl
enter
sar
mov
test
jle
mov
push
sbb
push
mov
push
mov
loop
pop
dec
jne
dec
dec
test
jg
mov
mov
xchg
sub
in
mov
jl
jnp
std
push
into
pop
loopne
je
stc
je
add
ret
pop
cmp
or
out
out
xor
jne
lea
sub
add
adc
jmp
popa
aaa
lock
mov
jle
cmp
std
push
jmp
jne
push
aas
adc
mov
jmp
sub
cmps
and
cmp
jno
je
push
push
ds
dec
push
inc
mov
and
and
or
ss
mov
pop
call
jo
xor
pop
push
lea
xor
shl
cld
inc
and
sar
fild
xor
mov
mov
mov
push
pop
icebp
paddusw
mov
inc
dec
mov
repnz
nop
std
mov
xor
sbb
cmps
(bad)
std
lahf
pushf
ret
nop
mov
mov
(bad)
xor
repnz
mov
std
jmp
enter
pop
lea
adc
std
ret
xchg
push
sbb
daa
push
push
(bad)
dec
dec
into
cmp
mov
mov
mov
shr
rep
iret
cmc
xor
ret
jbe
xchg
(bad)
(bad)
dec
leave
je
repnz
jne
inc
sub
sub
mov
cmp
mov
jmp
stos
mov
pop
xor
pop
push
inc
mov
mov
mov
scas
jle
test
sbb
(bad)
dec
jnp
inc
ja
adc
iret
push
lahf
call
(bad)
xor
lahf
xlat
xor
repz
mov
mov
popa
mov
shl
and
cs
and
cmp
cli
jmp
cmps
fld
sti
fbld
xor
or
je
repnz
fcomp
mov
(bad)
call
in
mov
jmp
test
jne
xor
ret
inc
mov
cmp
jne
jmp
push
(bad)
inc
inc
mov
mov
xor
(bad)
repnz
not
dec
je
mov
mov
movaps
jbe
lock
pop
dec
mov
push
mov
repz
pop
mov
jne
loopne
mov
mov
rol
or
sahf
mov
dec
inc
mov
mov
call
sbb
pop
ret
or
shl
push
ucomiss
loope
mov
mov
inc
jno
sbb
into
leave
pop
inc
sar
dec
sbb
or
mov
push
ss
pop
pop
cmp
fdiv
std
es
pop
jbe
mov
dec
push
(bad)
arpl
jne
les
call
sbb
mov
mov
dec
and
and
test
mov
les
loopne
call
fcom
or
cmp
je
mov
add
stos
aas
shl
lods
xor
(bad)
rcl
into
xor
loope
mov
adc
or
lock
mov
or
dec
jne
mov
sub
(bad)
jmp
push
bnd
pop
call
sub
fwait
jbe
fsubr
jne
mov
adc
lods
jmp
aas
jmp
cmc
mov
mov
or
mov
mov
inc
jne
cdq
sub
mov
sub
jae
xor
cmp
in
mov
sub
jae
add
lahf
movs
xchg
or
sar
gs
lock
push
(bad)
(bad)
inc
jne
jmp
xor
cmp
je
cmp
jb
cmp
ja
imul
push
sub
movzx
add
jle
lods
jmp
(bad)
(bad)
mov
sub
inc
or
inc
mov
cmp
mov
loop
fadd
je
fsubr
sub
(bad)
(bad)
mov
cmp
jg
sub
lea
mov
movzx
jmp
out
fld
out
cdq
pop
xchg
or
dec
(bad)
frstor
xor
pop
add
mov
shl
cs
addr16
mov
mov
fbstp
push
mov
mov
sub
mov
and
outs
outs
cmp
mov
push
fmul
inc
je
ins
repz
call
test
loopne
test
push
je
lea
xor
adc
test
fdiv
xor
scas
or
stc
push
jne
push
std
pop
loope
mov
jbe
mov
push
mov
jmp
xor
idiv
fistp
movzx
jmp
mov
jmp
mov
aaa
jbe
jne
inc
and
cmp
push
aad
(bad)
pop
(bad)
jg
dec
jmp
sbb
mov
dec
cld
cmp
ja
sbb
sti
add
mov
push
jmp
mov
xor
adc
inc
mov
stc
sub
pop
pop
push
jne
xchg
aam
repz
(bad)
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
je
mov
cmp
je
ja
(bad)
adc
je
dec
jne
mov
paddd
cmp
jbe
mov
jne
movzx
jmp
mov
(bad)
rcr
retf
cmp
jbe
mov
jo
mov
repnz
into
mov
adc
ret
push
je
imul
push
pop
imul
dec
shl
outs
mov
test
je
in
jmp
push
in
ds
mov
adc
add
pusha
cmps
jo
jmp
(bad)
aas
mov
pop
adc
mov
inc
ss
push
pop
inc
jae
add
xchg
add
pop
test
jno
pop
ret
clc
mov
mov
es
adc
add
imul
es
pop
clc
add
jge
and
cld
lea
push
add
or
ja
xchg
jl
jmp
add
mov
ins
cmp
mov
es
dec
cs
mov
add
cmp
jge
mov
jle
sub
lea
and
inc
mov
or
jne
(bad)
(bad)
inc
shr
or
sar
mov
neg
jmp
or
je
mov
stos
xchg
push
mov
xor
div
push
xor
inc
dec
or
jne
or
jg
dec
mov
stos
cmp
jne
pop
lock
aam
inc
cld
mov
fcomip
mov
mov
or
mov
mov
in
or
mov
outs
clc
cmp
jne
add
inc
sub
jle
pop
mov
add
add
mov
inc
repz
mov
movzx
sub
jmp
shl
jge
mov
add
inc
add
jne
pop
rep
jmp
lea
movzx
(bad)
mov
add
ja
movsx
cmp
jle
mov
lea
js
mov
add
call
movs
cld
loop
shl
or
jns
mov
cwde
inc
(bad)
out
mov
add
inc
dec
inc
dec
lods
or
xor
cmp
je
mov
stos
loope
inc
pop
xchg
movsx
xor
cmp
jg
cmp
jl
sub
sbb
add
inc
sti
stos
neg
mov
rep
jmp
and
out
out
mov
stos
loop
pop
adc
or
fwait
jge
out
stos
jmp
daa
inc
add
shr
pop
fucomip
add
push
mov
stos
xchg
int
push
(bad)
mov
sub
leave
mov
mov
movsx
dec
jmp
dec
sub
or
mov
neg
sub
mov
(bad)
mov
add
repz
inc
ss
dec
je
dec
jne
mov
test
je
stos
ja
pop
div
sbb
(bad)
stos
jecxz
cmp
je
(bad)
cmp
inc
jne
cs
jne
ret
xor
mov
(bad)
dec
adc
or
add
add
retf
jbe
mov
aaa
ins
xor
add
lea
add
push
mov
push
push
push
cmp
je
ins
or
push
jmp
pop
pop
inc
loop
ret
push
mov
(bad)
(bad)
in
fcomi
movs
pop
ret
and
inc
inc
inc
sub
and
or
std
jle
sub
sub
sub
sbb
inc
inc
xlat
in
jle
sub
and
sub
sub
fisubr
add
sub
inc
sub
sub
sbb
mov
and
jmp
daa
xlat
add
rol
mov
mov
sbb
sub
mov
mov
mov
(bad)
mov
inc
or
push
cmp
test
out
fistp
inc
cmp
rol
inc
add
aas
jmp
cli
mov
cs
dec
add
sar
inc
mov
fadd
clc
repz
loope
jg
sbb
pop
frndint
jmp
fcomp
fstsw
fwait
idiv
sar
test
je
fidiv
fbstp
lea
mov
(bad)
jg
mov
mov
shr
and
add
stos
dec
jne
xor
stos
mov
add
fwait
mov
xor
mov
jge
dec
jge
lahf
sti
(bad)
inc
cmp
jb
mov
dec
js
inc
adc
mov
(bad)
ja
jmp
mov
fs
mov
jmp
and
je
mov
mov
shr
mov
mov
ret
sbb
sahf
call
(bad)
call
call
push
add
ror
je
jns
neg
neg
cmp
mov
fiadd
xor
mov
or
ds
jl
mov
sub
add
cmps
sbb
jae
dec
das
or
ror
in
ins
loopne
cli
bound
jg
push
cmp
push
fidiv
pop
inc
jne
mov
or
mov
and
out
idiv
jne
dec
jne
jmp
mov
add
stos
pop
adc
(bad)
(bad)
mov
mov
lea
sub
mov
dec
cmp
je
mov
loope
pop
jmp
xor
mov
out
cld
icebp
sbb
pop
add
sub
mov
jmp
fstcw
fbstp
rcr
ror
mov
loop
jmp
je
cmp
jne
inc
mov
sar
mov
inc
sti
jne
inc
and
neg
cmp
je
mov
and
aaa
inc
cld
fistp
mov
pop
add
jp
scas
inc
mov
dec
jne
mov
iret
jne
(bad)
fbstp
dec
bound
push
add
loopne
sti
add
pop
inc
(bad)
(bad)
aas
jmp
fstp
fstsw
test
jne
mov
and
(bad)
(bad)
jmp
ror
data16
and
ret
xor
xor
lods
sub
neg
js
add
jae
fimul
hlt
inc
jmp
sbb
idiv
jle
push
cmp
stc
mov
sub
inc
imul
call
cli
hlt
add
add
sbb
neg
ret
adc
and
push
pop
push
push
lea
lea
mov
jg
jbe
adc
ss
push
fwait
adc
fsubr
add
add
das
xlat
sub
or
nop
inc
jnp
lods
pop
sbb
(bad)
pop
mov
ss
or
and
add
aam
cli
mov
sub
fstp
fwait
inc
pop
ror
jg
sub
mov
or
push
(bad)
popf
(bad)
mov
push
xor
mov
fld
fmul
test
inc
jmp
out
push
movs
adc
mov
sbb
fsubr
push
or
pop
xchg
or
mov
mov
pop
xor
(bad)
(bad)
(bad)
out
repz
inc
inc
cmp
jae
cmp
jae
cmp
jae
cmp
jmp
cmp
mov
imul
movzx
imul
add
movzx
imul
fisttp
(bad)
add
dec
fild
fdiv
sbb
fstp
fwait
push
add
or
jbe
dec
retf
movs
dec
outs
hlt
push
push
push
outs
mov
push
call
inc
clc
lea
lea
mov
dec
jl
int3
jo
push
mov
jo
cmp
dec
in
or
iret
adc
fs
mov
imul
or
enter
and
test
jne
movzx
mov
mov
adc
shl
test
add
sbb
push
icebp
test
je
mov
std
jg
sbb
mov
mov
mov
mov
mov
loopne
lea
lea
jge
add
add
cmp
ja
cmp
jb
add
cmp
mov
ins
movzx
cmp
ja
or
sar
(bad)
fdivr
jg
add
inc
dec
jne
movzx
dec
mov
lahf
cdq
idiv
imul
in
cdq
mov
bound
repnz
mov
mov
idiv
add
movzx
add
sub
inc
xor
push
call
add
add
inc
clc
mov
dec
mov
pusha
push
retf
pusha
dec
in
test
jg
int3
cmp
pusha
sub
inc
pop
hlt
nop
mov
jmpw
sub
mov
inc
mov
dec
data16
std
(bad)
(bad)
mov
mov
add
jl
sub
add
adc
(bad)
inc
aam
repnz
lock
bnd
cmp
aaa
idiv
push
dec
add
imul
add
sub
(bad)
dec
jl
repnz
sub
inc
lock
sbb
ins
mov
test
dec
rol
pop
lds
ror
pop
mov
mov
mov
dec
repnz
out
(bad)
cmp
jb
mov
jmp
mov
(bad)
add
sbb
inc
repnz
mov
or
dec
shr
mov
push
push
mov
pushf
push
(bad)
push
into
mov
inc
clc
(bad)
cmp
clc
ins
xor
add
cld
pop
outs
js
jno
mov
inc
xchg
or
idiv
lock
mov
add
ret
pop
stos
sbb
je
inc
mov
cld
(bad)
fist
mov
mov
and
cmp
rcr
and
cli
outs
cli
add
sbb
add
inc
push
xlat
in
pop
jp
xor
das
inc
cmp
nop
rcr
(bad)
inc
jb
mov
or
add
jne
mov
mov
(bad)
pop
mov
add
add
lock
popf
arpl
ror
sub
dec
push
sub
sar
adc
add
add
or
sti
je
mov
sub
inc
mov
inc
hlt
ja
mov
js
add
or
or
jo
out
out
dec
mov
lea
adc
rcl
outs
inc
pop
nop
je
mov
add
jnp
or
xor
aaa
fstp
jmp
sbb
pop
(bad)
scas
shl
enter
jecxz
iret
and
loope
(bad)
call
leave
mov
or
jbe
das
jmp
xlat
inc
or
inc
repnz
je
je
in
inc
or
sahf
or
jo
fcmovnbe
repnz
mov
in
push
test
mov
cmp
push
push
pop
push
cwde
xchg
push
sbb
jge
cli
test
je
lea
adc
mov
xor
inc
xchg
psubd
xchg
je
sub
jne
push
mov
or
mov
push
jmp
cmp
(bad)
scas
or
out
fdivp
mov
cmp
jne
addr16
loope
call
lock
add
dec
test
lea
dec
mov
in
mov
and
sbb
inc
(bad)
sbb
xor
xor
push
hlt
pop
push
in
(bad)
int3
add
arpl
test
add
mov
std
push
enter
inc
jg
jno
test
test
fistp
push
nop
jne
xor
je
jno
push
mov
add
jne
gs
inc
enter
ret
in
push
cmp
xchg
shl
jbe
xor
inc
adc
jns
add
sub
dec
add
add
mov
mov
mov
sbb
(bad)
cld
push
sbb
test
inc
pusha
cmp
add
lea
ud0
in
add
inc
jecxz
jmp
in
inc
sti
hlt
shl
jmp
aas
jne
xchg
xor
mov
stos
sahf
or
mov
fnstsw
mov
in
mov
mov
add
mov
sub
or
or
cmp
jne
mov
mov
addr16
cmp
prefetch
or
push
cmp
add
and
mov
cmp
ss
jmp
add
or
out
fstp
jg
add
add
add
add
or
sbb
out
inc
or
stos
inc
add
inc
inc
cmps
inc
add
popf
add
out
scas
test
or
adc
inc
add
push
fmul
xchg
sbb
pop
cmp
jg
add
inc
bound
stc
repnz
(bad)
pop
inc
setno
cwde
loope
and
jae
das
pop
dec
dec
push
lea
imul
int
mov
inc
fmul
xchg
adc
sub
cmp
xchg
mov
sub
js
add
sbb
xor
mov
mov
mov
add
movs
xchg
dec
mov
or
sbb
xchg
mov
(bad)
pop
sbb
and
je
jmp
sbb
xchg
imul
push
jp
mov
xchg
(bad)
mov
out
push
ja
or
pop
leave
and
sub
mov
mov
adc
pop
in
mov
mov
pushf
cwde
pop
imul
xchg
adc
pop
mov
jmp
lock
rol
clc
dec
jg
je
sub
je
sub
je
sub
(bad)
(bad)
call
je
jmp
sub
je
sub
je
jmp
cmp
jne
mov
loop
rcl
je
mov
loopne
adc
dec
test
jne
mov
jmp
mov
xor
mov
inc
mov
mov
ror
popa
(bad)
(bad)
(bad)
out
jmp
inc
(bad)
mov
mov
adc
add
sub
test
je
cli
jle
mov
or
inc
(bad)
das
sub
or
mov
xor
pop
add
push
mov
ror
and
cmps
add
sub
test
in
mov
imul
fsubr
or
add
je
sbb
inc
cld
add
fwait
in
push
xor
cmp
stos
std
cmp
test
mov
mov
jns
adc
mov
gs
xchg
mov
adc
push
(bad)
cmp
xor
aaa
xchg
xchg
xchg
fdivr
and
inc
test
dec
int3
inc
inc
xor
and
jne
push
inc
dec
mov
lea
test
(bad)
arpl
in
cmc
add
push
call
add
test
fcomp
push
mov
nop
mov
sbb
cdq
sysenter
fdivr
jle
add
inc
mov
cmp
jmp
push
jmp
ret
fisttp
sbb
add
inc
cld
jp
add
push
aam
mov
xchg
inc
out
cmp
jmp
je
sub
inc
xor
movs
or
or
les
test
clc
(bad)
(bad)
cmp
mov
xchg
ja
movs
and
lea
outs
cmp
and
jmp
inc
dec
das
push
dec
pushf
cmp
out
loopne
das
push
or
add
adc
mov
cmps
and
push
mov
ficomp
xor
mov
jp
or
cmp
or
mov
(bad)
or
(bad)
mov
shl
or
add
adc
pushf
dec
mov
add
loopne
icebp
pop
jmp
inc
out
adc
fdivr
xchg
dec
xor
mov
pop
pop
fist
fadd
mov
clc
mov
mov
mov
movs
pushf
mov
out
push
xor
jmp
mov
add
lea
xor
mov
sub
add
mov
inc
add
pop
es
adc
shr
jae
xlat
fild
mov
sbb
mov
dec
adc
ret
or
cld
mov
std
mov
outs
add
inc
test
pop
jno
in
cs
jmp
in
lods
les
idiv
xor
test
je
mov
pop
or
xor
test
push
push
push
les
jle
je
push
or
ret
inc
jne
and
push
mov
fdiv
aad
jb
push
cmp
jle
inc
rcr
jecxz
push
push
xor
fdiv
mov
mov
fld
(bad)
(bad)
adc
mov
mov
cmp
jne
inc
push
sub
outs
pop
retf
mov
mov
mov
and
sub
je
dec
(bad)
ja
push
or
or
push
jmp
mov
jmp
add
xor
jmp
mov
jmp
inc
add
jle
outs
mov
xchg
jmp
mov
push
(bad)
or
mov
add
add
popa
jbe
cwde
add
mov
mov
push
(bad)
fcom
call
call
mov
add
cmp
push
cmps
loop
je
pop
pop
repnz
jbe
sbb
adc
mov
(bad)
mov
mov
jmp
add
dec
jne
mov
jg
and
add
push
mov
push
sar
cmp
sti
arpl
mov
mov
inc
cld
cdq
xor
sub
add
mov
jg
dec
cmp
fs
or
push
test
dec
imul
cld
jmp
pop
dec
inc
inc
or
ret
retf
jecxz
add
xor
fdivr
pop
loopne
pop
in
stc
jno
test
jmp
jne
sti
mov
add
call
mov
xor
inc
div
inc
cld
cmp
fdiv
cmp
jne
mov
add
dec
loop
lds
test
sbb
mov
sbb
adc
loope
jo
cmp
or
mov
lea
push
pushf
fsub
test
mov
mov
mov
push
sbb
inc
jmp
and
jmp
mov
shl
inc
imul
jb
je
popa
out
mov
push
mov
mov
mov
pop
hlt
mov
pop
jnp
sti
add
sbb
sbb
in
fstp
and
jmp
sbb
mov
aaa
sbb
scas
cmp
in
push
jle
push
movzx
(bad)
mov
pop
mov
jmp
cmp
ja
add
sbb
and
movzx
sub
push
in
mov
data16
add
cmp
cmp
cmp
arpl
jle
add
jmp
cmp
add
pop
jmp
out
jmp
or
and
out
xchg
lahf
mov
adc
add
(bad)
cmp
or
cmp
inc
cmp
scas
fwait
pop
scas
mov
adc
inc
fcmovb
sar
cmp
cmp
idiv
or
jmp
jne
and
inc
jl
lea
push
call
mov
mov
sub
pop
outs
push
sub
lock
xor
sbb
add
sub
or
(bad)
mov
push
mov
push
out
movs
mov
inc
mul
retf
inc
xchg
shl
cmp
inc
mov
push
or
aam
sbb
add
push
add
mov
repnz
or
xor
fs
aas
popf
jo
shl
(bad)
mov
adc
(bad)
jmp
enter
sub
outs
mov
mov
or
xchg
mov
push
lea
and
add
mov
push
mov
jno
lahf
or
or
fnsave
je
lea
push
pop
add
inc
(bad)
mov
and
xor
iret
pop
sub
pop
sbb
push
add
jge
adc
and
sbb
pop
or
ds
scas
push
dec
jne
add
add
jp
inc
jg
cmp
or
add
out
cmps
sbb
push
and
adc
mov
pop
es
loop
pop
scas
ret
out
outs
add
lds
or
push
or
or
and
add
popa
call
xor
(bad)
cmp
add
jl
xor
jmp
mov
and
ja
add
out
add
test
and
adc
cmp
sbb
mov
push
lds
inc
push
sbb
popa
adc
pop
mov
popa
jne
and
jmp
fnstsw
mov
fcomp
jb
push
fsubr
int
fist
pop
fwait
jmp
or
and
mov
add
mov
mov
push
add
icebp
fisubr
adc
push
(bad)
inc
cld
popa
xor
jne
enter
add
dec
jmp
je
xchg
or
icebp
fcom
(bad)
stos
dec
jae
mov
xor
lea
cmps
or
pop
jle
mov
dec
arpl
ss
jmp
mov
adc
or
cwde
das
mov
lea
dec
add
push
push
add
inc
add
je
(bad)
cld
mov
fidivr
je
mov
es
or
leave
jmp
mov
mov
mov
add
xor
push
and
xor
add
xchg
mov
(bad)
mov
fld
mov
or
mov
out
ficom
or
cmps
xor
push
hlt
test
and
cmp
mov
(bad)
xor
inc
add
loopne
or
add
or
and
lea
call
clc
push
push
lea
push
mov
ret
out
mov
in
and
cmp
push
mov
sub
jb
es
or
jmp
out
(bad)
retf
cmp
lods
xor
jmp
push
sbb
mov
push
xor
pop
jmp
jmp
cmp
je
inc
cmp
cmp
add
outs
aaa
dec
mov
mov
enter
addps
ins
dec
sub
idiv
dec
mov
or
dec
push
push
jnp
push
pop
ja
mov
xchg
ret
dec
(bad)
jne
pop
inc
xchg
shr
push
jbe
and
add
xchg
das
fdiv
out
jle
cwde
mov
adc
movs
mov
sub
mov
shl
add
std
sub
jae
push
inc
push
cwde
push
push
into
and
(bad)
mov
(bad)
aas
sar
add
dec
jne
push
sub
enter
test
popa
xchg
mov
inc
sub
xor
retf
xchg
mov
dec
dec
mov
adc
mov
lahf
push
push
cwde
mov
xabort
aam
mov
jb
sub
fist
add
sub
jb
sahf
xor
mov
(bad)
call
jmp
je
sub
je
xlat
mov
stos
aaa
cmp
pop
std
loop
jp
sbb
jle
adc
sbb
(bad)
pop
stc
adc
push
out
stos
mov
add
fwait
push
mov
lock
mov
adc
add
sbb
pop
sub
xchg
mov
push
cmp
dec
loopne
outs
jnp
punpcklwd
out
sub
and
in
test
and
xchg
(bad)
push
mov
daa
dec
adc
(bad)
std
mov
xor
sub
jne
inc
sbb
ret
sbb
add
in
jae
or
jle
push
(bad)
jl
imul
sbb
add
dec
shl
movntps
jns
cli
call
aam
add
cmp
shl
gs
add
add
test
jo
xor
push
pop
sar
or
push
lea
rol
lahf
sti
nop
cmp
sti
adc
lea
pop
or
bound
pusha
test
jne
sbb
sti
jg
fstp
sbb
sbb
inc
clc
jmp
sub
sti
mov
inc
mov
dec
mov
lea
mov
jle
mov
mov
cmp
ror
ins
and
(bad)
cmp
fdivr
out
add
jle
int
cmp
je
mov
test
add
ds
test
test
xchg
sti
sti
pop
icebp
xrelease
call
test
mov
add
mov
mov
out
out
ficom
mov
add
mov
mov
enter
int3
add
out
push
push
push
lea
test
jl
mov
ret
ret
pop
ret
lods
add
inc
jmp
jo
mov
add
les
push
inc
sbb
or
mov
pop
mov
jbe
and
adc
sbb
push
push
push
sti
pop
sti
mov
js
pop
test
push
push
sbb
ss
push
or
je
mov
idiv
push
or
jecxz
sti
into
shl
rol
loopne
stos
(bad)
addr16
test
retf
and
mov
mov
mov
lea
loopne
clc
cmp
(bad)
xor
adc
xchg
cmp
out
inc
pusha
pusha
enter
mov
push
retf
mov
push
test
bound
sbb
ins
or
pushf
sub
jge
push
add
repnz
push
fdiv
gs
mov
ror
mov
lea
push
inc
mov
add
enter
inc
clc
adc
push
cmc
xor
cmp
daa
dec
ret
test
mov
push
es
gs
rol
ins
add
lds
sbb
clc
xor
test
hlt
mov
jmp
inc
cld
mov
inc
cmp
or
sub
jg
fbstp
fwait
lods
js
sbb
inc
and
cli
xchg
cmp
add
mov
jo
jo
pop
xchg
rcr
fnsave
pusha
adc
dec
je
add
mov
sub
jb
jmp
mov
mov
retf
and
not
in
lods
js
shl
(bad)
jmp
scas
xor
jmp
jecxz
or
fcmovne
push
mov
mov
sbb
enter
movs
shl
clc
popa
dec
test
je
daa
shl
dec
push
cld
mov
fild
repnz
mov
mov
mov
mov
(bad)
(bad)
jge
mov
lea
push
dec
push
loopne
aam
adc
test
dec
loopne
mov
mov
sub
add
inc
sbb
sub
mov
adc
mov
das
or
cmc
out
dec
xor
or
mov
mov
add
or
and
push
push
repnz
and
je
jmp
xor
inc
cmp
xor
and
sbb
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
or
dec
mov
ret
or
scas
cwde
mov
hlt
test
scas
jge
push
add
mov
std
inc
jecxz
test
adc
mov
rol
mov
cmp
jne
lea
lock
push
dec
js
sbb
inc
loopne
mov
in
nop
cmp
rol
pop
xchg
(bad)
mov
call
scas
je
shl
sbb
add
out
lea
sub
(bad)
out
dec
push
mov
adc
mov
sbb
sar
jae
mov
add
mov
push
mov
mov
add
mov
add
aaa
les
fstp
jmp
xchg
xchg
cmp
test
mov
mov
movs
push
mov
iret
pop
sub
pop
xchg
rol
cvtdq2ps
or
xchg
cmps
out
add
mov
js
and
adc
cmp
mov
xor
or
xchg
lock
cwde
pop
les
out
rol
or
rol
dec
push
sub
jae
mov
or
mov
fadd
cld
out
pusha
nop
dec
pusha
arpl
push
push
lock
clc
ins
cld
mov
iret
xor
into
inc
lock
arpl
lods
outs
and
sbb
or
xchg
jb
fcomp
call
jmp
dec
cli
frstor
mov
push
sub
jmp
fisubr
or
mov
push
mov
mov
mov
hlt
or
ins
mov
div
fmul
add
inc
add
xlat
xchg
les
mov
mov
mov
hlt
loop
add
cmp
or
mov
or
fdiv
ror
and
sahf
fstp
and
fwait
xor
mov
or
mov
mov
pop
mov
les
add
xchg
xchg
pop
sbb
or
or
int3
pusha
dec
jmp
ror
add
aam
cmp
cmp
mov
add
mov
mov
or
stos
mov
mov
add
fucomp
cmp
jne
cmp
test
sbb
(bad)
es
push
sahf
xor
outs
mov
jne
cli
sbb
fidivr
cmp
stos
xor
clc
pop
pmullw
retf
jae
pop
sbb
sub
test
pop
push
mov
ficomp
inc
hlt
xor
clc
and
(bad)
in
push
push
pop
enter
or
in
mov
add
mov
out
aam
and
cmp
sbb
(bad)
int3
or
lahf
mov
xor
pop
add
mov
cld
dec
and
cmp
je
test
jne
mov
jg
or
add
mov
jmp
mov
mov
push
dec
jmp
dec
test
jl
mov
cmp
js
jmp
and
mov
inc
inc
test
jne
mov
jmp
mov
dec
add
adc
ret
xor
shl
rcl
adc
(bad)
(bad)
mov
ret
nop
xor
sbb
mov
shr
push
sbb
in
cmp
f2xm1
jle
or
lock
mov
ds
pusha
(bad)
cmp
idiv
and
lock
mov
hlt
jg
ret
push
das
mov
(bad)
cmp
jl
mov
add
pop
bt
xor
aas
push
xchg
mov
inc
cmp
jge
xor
pop
or
pushf
loopne
ins
adc
inc
hlt
in
hlt
jo
sbb
jmp
inc
jecxz
or
adc
add
pop
hlt
jge
(bad)
push
lahf
jl
cmp
jne
push
push
xor
dec
xor
mov
mov
mov
dec
scas
std
push
pop
xchg
clc
mov
test
jle
outs
mov
fdivr
cmp
jle
out
pop
aam
push
cs
call
(bad)
call
add
or
cs
jg
xor
mov
inc
jmp
mov
mov
dec
test
xor
cmps
xor
xor
jg
pop
ret
cmp
pop
je
mov
pop
mov
push
sub
sub
das
fdivr
or
ret
mov
sub
pop
ret
sahf
loop
das
sub
pop
mov
push
mov
sti
pop
aam
mov
test
std
inc
jo
aad
cmp
daa
ror
xchg
repz
cmp
lahf
xor
jge
adc
ret
cmp
test
adc
(bad)
push
push
dec
dec
jecxz
inc
mov
call
add
lock
sub
inc
pop
push
popf
mov
test
je
mov
jl
in
je
cmp
je
dec
jle
adc
fdivr
and
mov
adc
add
mov
sahf
mov
mov
cmps
add
jg
jl
add
je
push
push
push
push
push
mov
(bad)
push
dec
cmp
je
sbb
jne
inc
inc
inc
stos
or
sbb
mov
sub
cld
out
mov
sar
cli
jbe
xor
mov
pusha
jmp
push
rcl
fmul
adc
loop
mov
adc
ret
and
pusha
add
jg
jmp
je
mov
cdq
sub
jb
je
jmp
inc
inc
mov
into
xor
adc
push
hlt
adc
hlt
xor
adc
push
pop
enter
dec
lea
dec
fcom
mov
or
mov
out
mov
aas
ja
out
inc
das
dec
and
push
loope
cli
outs
mov
jge
add
push
mov
cdq
iret
sub
xor
or
push
outs
aaa
push
mov
sub
jb
inc
mov
mov
adc
xchg
bts
inc
(bad)
dec
jne
jmp
loop
mov
or
inc
aaa
pop
jne
pop
or
pop
pop
pop
ret
lahf
clc
pop
ja
sub
ja
or
arpl
setb
pop
add
inc
sub
add
inc
cmp
add
dec
xchg
push
push
cwde
jno
scas
ja
add
sbb
movzx
mov
xor
mov
shr
mov
inc
add
les
dec
rep
push
add
test
sahf
fisub
mov
je
mov
xchg
pop
mov
xor
(bad)
lock
and
setne
mov
xor
adc
xchg
xchg
mov
inc
inc
cmp
mov
adc
inc
jo
add
add
mov
xor
add
xchg
ror
mov
add
jmp
pop
xor
jge
int
xchg
shl
and
mov
mov
pusha
or
test
outs
or
stc
push
mov
pop
shl
dec
shl
sbb
sahf
cmps
ins
cli
mov
test
pop
push
cwde
mov
scas
push
xor
mov
in
frstor
mov
je
xor
dec
mov
shl
in
out
and
dec
ret
sbb
mov
jb
fidiv
cwde
mov
or
retf
mov
mov
fnsave
sbb
pop
sbb
aas
mov
mov
add
ss
outs
mov
add
cld
fmul
mov
mov
mov
aam
mov
icebp
jae
jg
aam
push
ss
mov
xor
push
and
test
push
mov
ds
stos
out
aas
push
sar
mov
stc
and
int3
mov
push
add
loope
push
pop
enter
inc
xor
and
inc
enter
test
push
aas
pusha
pop
mul
ss
cld
mov
les
test
fsub
jo
les
aas
lea
and
adc
add
and
xchg
jbe
mov
cmp
aam
pop
icebp
out
jg
jne
push
push
hlt
mov
and
cmp
sbb
popa
cdq
sub
fistp
aam
jae
std
jno
dec
enter
sahf
cs
xor
fld
loopne
mov
sub
push
mov
fsubr
fs
addr16
ins
add
fs
jns
and
adc
xor
popa
ins
stos
adc
test
sub
cwde
stos
out
or
push
aas
sbb
pop
pop
sti
mov
ins
ins
sbb
pop
and
inc
ret
jg
aaa
mov
rcl
sar
add
add
test
mov
mov
inc
clc
hlt
add
jo
mov
mov
mov
push
mov
jle
fdivr
daa
jo
shr
adc
or
adc
loopne
jmp
push
scas
sub
(bad)
jmp
pop
inc
push
cdq
jne
ffreep
out
loop
cld
mov
mov
mov
call
(bad)
ss
dec
add
(bad)
mov
mov
icebp
add
add
ins
pop
cmp
jmp
push
push
push
push
je
push
jo
cmp
add
inc
lods
jb
pop
ret
add
(bad)
dec
das
inc
imul
push
jo
arpl
add
pop
jmp
xadd
inc
and
imul
xchg
sti
rol
aaa
cld
pop
jl
sub
clc
xor
mov
ja
mov
call
jl
push
push
mov
mov
pop
cmp
cmp
aas
inc
call
jne
mov
and
movs
daa
mov
or
hlt
sbb
push
pusha
mov
mov
mov
xor
(bad)
out
jmp
fbld
and
inc
sbb
sbb
mov
mov
mov
mov
jmp
ins
jne
(bad)
mov
hlt
jo
gs
pop
mov
or
call
dec
push
inc
ds
mov
mov
mov
dec
jg
ins
add
aas
lea
mov
and
pusha
ret
inc
push
mov
mov
nop
mov
xor
mov
push
ror
mov
clc
iret
ret
add
sbb
mov
je
lea
aam
add
pop
je
pop
xchg
inc
add
push
mov
rcr
out
jecxz
and
test
(bad)
xor
add
cld
or
push
xor
jmp
and
pusha
mov
ltr
mov
sbb
xor
daa
push
(bad)
ss
enter
ins
cmp
cmp
mov
mov
sub
mov
push
inc
mov
dec
mov
daa
cwde
sahf
loope
mov
and
hlt
inc
mov
pop
cmp
sti
mov
inc
cmp
or
push
sbb
mov
pop
cmpxchg8b
sub
mov
jl
(bad)
(bad)
cmps
jle
push
mov
mov
mov
ret
cmp
seta
jo
add
fsub
lea
ret
sbb
xchg
ret
inc
xchg
pop
add
retf
cmp
jne
push
inc
or
sbb
(bad)
out
mov
and
inc
dec
cmp
sete
inc
mov
in
push
push
(bad)
mov
dec
xchg
xor
sbb
jne
iret
inc
loopne
jbe
fcomp
mov
les
test
add
cmp
dec
pop
daa
fwait
jne
inc
shl
rol
daa
mov
inc
or
xlat
add
and
fldlg2
dec
clc
cmp
cdq
js
and
inc
jmp
pop
ins
xadd
xor
pop
cmp
js
dec
test
jle
pop
cmp
dec
add
add
push
int3
sbb
lea
inc
ret
enter
jne
mov
(bad)
pop
les
test
jg
mov
mov
test
dec
mov
les
adc
add
daa
iret
lock
and
push
push
or
push
mov
call
xchg
retf
xchg
add
xor
rcr
sub
inc
or
cmp
mov
in
mov
mov
sub
stos
adc
js
test
jne
(bad)
cmps
xor
ret
fs
cwde
sbb
loopne
push
mov
bound
add
jae
add
xchg
add
xchg
mov
pop
push
mov
fwait
call
dec
mov
cmp
mov
sub
and
loop
es
fldcw
je
sbb
pop
aas
pop
push
sbb
add
mov
add
pusha
outs
inc
add
bound
clc
ins
inc
add
xlat
jne
fs
pop
lods
pop
in
jne
xlat
jl
outs
inc
add
dec
daa
aam
shl
shl
les
fdivr
mov
lods
or
movs
xlat
jne
xlat
pop
and
pushf
pop
or
pop
adc
pop
xlat
jne
mov
hlt
pop
test
xchg
pop
jl
dec
jne
xlat
xor
xor
ins
pop
adc
shl
rol
and
push
pop
dec
pop
xlat
jne
dec
lock
inc
pop
jo
cmp
int3
imul
jne
xor
or
xor
pop
push
pop
not
and
jmp
add
or
pop
sbb
mov
aas
pop
adc
and
or
mov
or
sub
das
add
adc
add
pusha
and
push
jne
add
call
clc
or
and
or
sub
in
pop
sbb
push
jmp
jmp
int3
inc
in
aam
loopne
jmp
jmp
nop
das
fmul
mov
or
or
ror
cld
int3
test
or
or
or
pop
mov
push
and
jne
jecxz
or
ja
or
jne
jne
and
or
jne
jne
inc
test
int3
das
movs
or
inc
mov
or
cwde
or
and
sbb
pop
ins
xor
lods
mov
push
xor
fneni(8087
leave
ins
call
xchg
jne
or
mov
call
mov
mov
xlat
mov
or
sbb
adc
push
xor
inc
jno
push
jmp
push
xor
icebp
adc
and
xor
mov
pushf
xor
xor
sub
out
push
inc
adc
cmp
loop
test
adc
xor
xchg
xchg
or
aad
push
xchg
push
aad
popf
test
mov
cmp
xor
enter
fld
sbb
or
aad
sbb
clc
jecxz
jns
xchg
fadd
mov
mov
mov
movs
cmp
jns
je
mov
and
ss
mov
mov
or
retf
fsub
mov
jb
comiss
mov
mov
hlt
add
inc
sar
add
cld
rcr
clc
pop
pop
cmp
out
pop
mov
jmp
mov
push
add
scas
and
xchg
or
int3
nop
pop
ret
aaa
es
cmp
or
rcr
xchg
or
pop
test
jge
fs
sbb
inc
aaa
fcom
xor
(bad)
fst
fdiv
and
mov
xchg
jae
push
inc
sub
mov
mov
out
add
daa
imul
cmp
mov
fmul
and
xlat
mov
inc
imul
xlat
movs
in
dec
cmp
imul
repnz
(bad)
or
clc
push
ret
inc
clc
and
cmp
sub
xor
cmp
xchg
ins
sar
arpl
sbb
es
sar
mov
or
popa
movs
or
das
loope
jge
nop
adc
mov
test
xor
mov
cmps
sbb
mov
mov
sbb
cmp
mov
mov
pushf
xchg
lahf
outs
pop
loopne
add
pushf
movs
inc
xchg
retf
cmp
sbb
(bad)
xor
xchg
mov
or
cmp
lea
fsubr
test
jns
jae
jecxz
or
dec
xlat
inc
jae
add
xor
arpl
and
loopne
out
mov
push
mov
mov
mov
cmp
je
push
cmp
xlat
es
inc
cld
push
push
jo
rcl
add
jg
out
sbb
push
push
mov
aas
push
push
mov
adc
cld
pop
mov
pop
mov
mov
jge
xchg
pop
push
test
sub
leave
and
mov
and
jo
xchg
pop
jb
js
xchg
pop
jb
add
les
and
jge
xchg
int3
in
mov
cmp
lock
pop
addr16
pop
leave
mov
mov
in
enter
mov
mov
call
mov
mov
xchg
lahf
mov
in
mov
dec
sahf
cld
sbb
ins
dec
xchg
sub
mov
xor
fcom
jne
xor
inc
push
test
inc
js
adc
add
outs
je
enter
fs
jne
dec
jne
ins
out
cmp
imul
outs
daa
fistp
pop
dec
jb
pop
pop
outs
or
fstp
das
xor
jb
ins
push
je
movsx
pop
inc
popa
je
(bad)
leave
mov
or
mov
adc
inc
jae
popa
mov
je
cmovae
cmova
mov
in
xlat
getsec
inc
popf
gs
and
pop
sub
inc
jo
jmp
sbb
mov
sub
add
shr
ret
nop
mov
mov
mov
jmp
push
clc
jmp
adc
sti
lods
or
nop
add
cmp
xchg
add
call
in
add
adc
adc
or
add
or
push
add
out
call
mov
lock
add
setl
push
adc
push
inc
jne
je
ins
test
sbb
cli
add
sbb
int3
jge
mov
cs
aaa
loopne
ret
cli
mov
retf
xor
inc
inc
and
(bad)
fadd
or
push
inc
pop
and
and
nop
inc
out
aaa
in
in
pop
arpl
mov
arpl
mov
pop
arpl
(bad)
mov
or
(bad)
popa
inc
pusha
outs
pop
arpl
(bad)
retf
test
inc
jb
gs
loope
mov
pop
arpl
fs
test
aam
ret
pop
arpl
mov
js
mov
mov
dec
inc
dec
pop
cmp
inc
add
sbb
add
pop
ret
inc
jb
popa
jns
outs
inc
pop
pop
jae
lea
mov
enter
push
mov
inc
inc
jb
aam
fnstenv
(bad)
push
pop
inc
scas
rcr
iret
adc
scas
ret
dec
je
ins
jo
arpl
mov
pop
adc
push
xchg
adc
dec
(bad)
fist
sub
ds
push
inc
fadd
ss
lahf
mov
push
outs
gs
outs
xchg
je
data16
sub
push
call
inc
imul
jl
pop
inc
jo
xor
sbb
push
xchg
cld
mov
mov
clc
loope
lods
js
or
and
ja
xor
jg
adc
push
js
in
mov
mov
rol
push
push
cmp
xor
and
mov
lea
adc
mov
clc
add
lea
mov
enter
in
cmp
inc
fsub
inc
in
aad
fwait
add
sbb
fmul
mov
out
xchg
xchg
xor
and
cmp
lods
xor
and
lods
out
ja
out
sub
jp
cwde
jae
xor
bound
or
je
loope
fild
xor
add
sbb
push
push
ret
cmp
push
icebp
add
or
je
cld
fwait
outs
sub
sub
je
pop
sub
and
je
push
pop
or
jae
sbb
mov
sub
(bad)
stos
fild
std
inc
sub
lock
mov
mov
jae
push
leave
and
and
mov
mov
and
lea
mov
sbb
jmp
and
das
or
and
rcr
gs
in
and
in
mov
dec
mov
dec
jno
mov
jmp
(bad)
iret
cmp
xor
xor
xchg
jmp
dec
adc
and
loopne
popa
or
lds
ds
mov
mov
mov
mov
(bad)
rol
inc
aam
lea
push
call
mov
mov
lea
push
pop
out
cmp
add
sbb
cwde
ror
jo
mov
xor
out
xchg
add
ficom
rol
push
jecxz
xor
imul
sub
push
jmp
je
jmp
mov
push
fisub
jmp
or
nop
lods
fadd
add
xlat
(bad)
out
xchg
mov
or
mov
cld
cld
imul
mov
add
fild
loope
idiv
stos
add
(bad)
(bad)
(bad)
dec
adc
mov
cmp
setg
dec
test
je
test
jge
mov
pop
add
mov
inc
(bad)
mov
cmp
add
pushf
xchg
add
call
jg
test
jne
xor
jmp
push
or
mov
mov
push
sub
lods
pop
mov
call
fild
pop
ja
fild
test
jne
mov
push
add
push
(bad)
adc
jmp
cmp
jne
xor
test
je
and
inc
or
test
dec
jmp
(bad)
fcomp
adc
mov
mov
in
pop
mov
jl
inc
xor
lea
pusha
neg
sti
nop
mov
lea
push
cmp
mov
outs
(bad)
lea
cmp
sub
outs
xchg
and
push
add
dec
mov
inc
cmp
mov
pop
sahf
jne
inc
lea
test
add
add
dec
jne
push
and
rcr
jl
test
je
lea
mov
dec
lods
sbb
add
lock
js
push
add
popf
dec
pop
sub
(bad)
fsub
xor
(bad)
adc
or
mov
jmp
cmp
jne
xor
ja
xor
add
jne
mov
call
jmp
test
inc
and
loopne
jmp
mov
dec
in
lods
mov
mov
call
jmp
(bad)
mov
pusha
pop
pcmpgtd
add
mov
cmp
test
mov
or
add
and
push
sbb
aaa
push
pusha
push
push
push
mov
test
test
fwait
inc
mov
int3
jae
or
inc
ins
test
jmp
or
lds
mov
add
js
int
sbb
clc
xchg
jecxz
xor
mov
push
loopne
push
push
push
rcr
sbb
add
fld
fsubr
fld
scas
or
or
xor
jo
mov
lahf
inc
loop
dec
lea
jle
xchg
int3
mov
lea
sbb
jbe
sbb
cwde
imul
cmp
call
(bad)
jmp
popf
xor
mov
pop
ror
outs
push
and
pop
inc
fsub
add
mov
jg
jecxz
test
ds
jae
push
lods
cmp
jns
cmp
or
add
rol
hlt
xor
mov
test
call
adc
cmp
cwde
sub
mov
test
inc
add
cmps
retf
test
sub
jo
mov
push
rcl
push
not
jmp
jp
mov
fdivr
fimul
lods
jne
test
inc
mov
mov
test
arpl
jecxz
inc
add
inc
or
lock
push
dec
sub
or
cmp
push
pop
call
mov
call
push
ins
or
mov
fsubp
dec
popa
xchg
jp
push
aaa
les
aaa
pop
test
xor
cdq
pop
test
xchg
not
ins
xchg
mov
add
(bad)
jmp
sub
jb
je
dec
je
jmp
lea
rol
adc
enter
inc
clc
adc
in
push
fwait
cmp
test
lea
and
(bad)
out
ds
(bad)
jno
fbld
dec
adc
cs
mov
into
nop
xor
or
dec
and
mov
mov
jo
push
push
cld
arpl
enter
sti
(bad)
fs
inc
push
push
pusha
cmp
aaa
push
and
mov
mov
cmp
loopne
inc
in
push
lea
mov
cmp
or
jbe
xor
pop
mov
aaa
fsubr
dec
pusha
push
push
loop
or
pop
mov
xchg
jmp
nop
sub
adc
adc
pop
out
or
jno
jae
dec
mov
sbb
sub
call
enter
call
int3
int
pop
daa
test
in
fadd
inc
cld
or
mov
cli
mov
xor
in
mov
cmp
je
xor
or
dec
out
call
adc
sbb
add
inc
or
push
das
inc
adc
mov
sti
and
xor
mov
push
cmp
in
ret
popf
(bad)
std
mov
mov
cmp
(bad)
jmp
rol
xchg
xchg
push
in
icebp
imul
outs
nop
lods
mov
mov
inc
add
cli
or
xchg
adc
and
sub
ret
dec
cmp
mov
mov
jo
add
fisub
and
jl
gs
cmp
movsx
fldl2t
jno
adc
jecxz
clc
push
mov
sbb
fld
add
fstp
fmul
cmc
cmp
and
les
push
and
sbb
mov
push
push
xchg
pop
in
mov
sbb
fadd
in
cmp
mov
lds
sbb
or
sahf
pop
sbb
leave
loopne
popa
loopne
adc
mov
fadd
fsub
fwait
in
or
in
mov
sbb
movsx
fcomp
cdq
in
movhps
ror
or
movzx
rcl
aad
ja
xor
push
lahf
int3
xlat
jbe
int3
sbb
xlat
or
fadd
sbb
cmp
inc
jl
call
cmc
pop
dec
out
mov
fwait
or
jg
repnz
retf
jmp
aam
mov
movs
pop
add
out
shl
clc
fbstp
test
or
shl
clc
xchg
in
jae
mov
and
mov
jns
stc
cmps
imul
add
jnp
sti
sahf
pop
add
hlt
add
add
jno
sti
js
outs
lea
(bad)
mov
inc
add
mov
inc
mov
add
ds
nop
mov
addr16
and
outs
lea
adc
jo
imul
imul
(bad)
data16
fsub
loop
jl
lea
xor
out
add
jo
dec
movs
sub
adc
ins
es
pop
in
nop
outs
pushf
sbb
pushf
cmp
jb
xor
addr16
sbb
cmp
jmp
sbb
popa
push
stc
sbb
sbb
xchg
push
jmp
lea
pop
dec
mov
in
sbb
and
push
xor
pop
cld
mov
rcl
adc
push
mov
mov
xor
add
xchg
and
jnp
scas
cmp
inc
movs
xor
mov
(bad)
je
inc
mov
or
mov
out
jbe
fdivr
rol
clc
mov
mov
scas
ret
test
and
sub
hlt
loopne
loope
or
loopne
pop
leave
inc
(bad)
gs
in
daa
rcr
into
mov
fistp
push
inc
es
fld
add
mov
cs
jg
jo
mov
inc
int3
cdq
stos
xor
outs
xor
das
js
popa
sbb
loopne
pop
mov
adc
call
pushf
test
es
hlt
imul
xchg
push
xlat
enter
push
repz
add
inc
loopne
sub
pushf
fwait
test
inc
push
es
sub
sbb
jle
bound
sub
(bad)
mov
cmp
daa
push
xor
arpl
rol
add
pop
adc
sub
dec
test
inc
pop
ja
xor
xor
mov
inc
add
push
jne
xor
mov
dec
(bad)
xor
add
mov
add
sub
add
mov
pop
sub
fld
sbb
mov
and
sub
sub
jmp
or
cmp
sbb
mov
std
in
pop
enter
shl
std
aas
fwait
xor
icebp
lea
sbb
push
pop
adc
inc
loop
es
lea
sbb
fwait
les
sbb
sbb
dec
add
sbb
lds
les
sbb
and
sbb
cmp
add
xchg
mov
inc
hlt
mov
and
dec
rol
push
aaa
jae
inc
adc
inc
add
push
cmps
add
or
add
xor
add
adc
cmps
jmp
pop
lsl
and
popa
call
adc
es
stos
cmp
aaa
sbb
sbb
pop
clc
and
nop
sbb
and
mov
cmp
pop
out
xor
or
or
xchg
push
sbb
push
sbb
cmp
test
sbb
adc
sub
and
cmp
cmp
mov
fwait
cmp
sbb
and
sbb
jo
xor
sbb
mov
icebp
push
cmp
push
adc
sbb
dec
and
cmp
jl
dec
aas
loope
jo
cmp
push
pop
cmp
jns
or
cmp
sahf
les
inc
js
cmp
pop
outs
cwde
add
fpatan
lea
mov
jo
add
mov
add
mov
lea
xor
scas
and
mov
es
inc
nop
ja
sbb
jne
mov
jge
pushf
loopne
test
cmp
in
add
mov
inc
cmp
mov
jmp
mov
aas
add
or
mov
fsub
cdq
mov
out
aas
mov
mov
popa
rol
mov
sbb
aas
mov
cmp
cmc
sbb
mov
push
push
std
jg
pop
loop
pop
mov
fstp
fwait
add
ret
adc
cwde
or
sti
push
add
js
arpl
not
xchg
adc
or
ret
nop
sub
stos
jns
add
fidivr
and
mov
lahf
cmp
jb
mov
xchg
in
add
mov
icebp
in
sbb
sbb
jl
loopne
jo
sub
add
dec
adc
mov
nop
std
sbb
ins
imul
push
sbb
retf
sub
jg
ins
add
std
fist
bound
jne
jb
outs
arpl
or
and
push
out
adc
cmp
gs
jp
xchg
and
jae
or
adc
and
out
or
xchg
gs
outs
pop
lahf
sub
lock
andnps
outs
sub
jle
outs
ja
inc
arpl
pop
neg
push
push
and
inc
or
push
inc
aad
cmp
mov
std
psubw
mov
je
fstp
ss
xlat
lds
clc
std
xchg
lea
pop
push
pop
(bad)
mov
data16
dec
and
push
mov
movzx
mov
push
push
stos
ds
ja
cmp
mov
mov
jae
pop
add
jne
loopne
and
jmp
loopne
push
icebp
cmp
cld
xchg
adc
dec
ja
imul
and
(bad)
dec
std
sbb
mov
movzx
mov
ja
mov
mov
fistp
pusha
test
je
mov
pop
inc
push
cld
inc
rcl
or
popa
lea
loope
imul
rdpmc
sbb
or
cmps
inc
jge
das
ret
xchg
sbb
fwait
sbb
inc
jns
gs
fucomp
unpckhps
lods
mov
inc
movs
stc
add
nop
sub
inc
add
add
xor
fsub
fs
mov
mov
inc
add
add
test
pop
rcl
lods
cmp
add
inc
inc
ins
mov
dec
cmp
xchg
loope
add
push
mov
cmp
cwde
xchg
jne
repz
dec
pop
es
or
cld
jb
in
sbb
pop
sti
je
inc
mov
out
jecxz
mov
mov
mov
mov
data16
stos
cs
xlat
mov
rol
aad
jmp
sti
ins
or
or
rol
and
inc
jge
cmp
je
lea
inc
mov
mov
add
push
pusha
dec
test
jns
fldcw
push
inc
icebp
pop
inc
ret
push
mov
lea
push
sti
mov
cmp
inc
dec
push
add
out
mov
inc
ror
les
ret
mov
(bad)
jnp
or
shl
(bad)
ret
mov
(bad)
daa
or
fild
sti
mov
xor
cmp
or
mov
mov
jle
rol
push
movzx
mov
mov
cld
(bad)
(bad)
jns
adc
jns
push
sti
mov
mov
adc
push
sub
int3
mov
mov
xor
cmp
imul
mov
loope
mov
mov
xor
dec
or
fxch
daa
lods
fstp
fist
jge
pop
retf
sti
je
or
lahf
add
or
push
outs
rol
sub
push
and
dec
cmp
(bad)
je
es
push
inc
jbe
or
inc
inc
jle
dec
sar
cwde
or
mov
fist
sti
mov
sub
lahf
sub
mov
cmp
and
clc
out
test
add
push
in
jne
ret
or
pop
imul
add
sbb
loopne
fstp
add
dec
lock
add
sub
jmp
rol
jp
popa
sbb
jmp
jl
std
jecxz
in
inc
xor
adc
je
cmp
xchg
xor
add
fs
or
ror
mov
push
inc
jb
mov
sti
sbb
clc
mov
jno
jmp
inc
dec
jne
enter
outs
push
inc
adc
cs
inc
out
fild
out
fild
push
push
sbb
jne
stc
dec
pop
fidivr
mov
sub
inc
push
or
mov
pusha
jp
push
mov
sti
add
push
(bad)
sti
pop
inc
sbb
ja
adc
mov
sub
cmp
out
(bad)
stc
sbb
mov
jmp
xchg
mov
jmp
and
repnz
add
add
inc
or
outs
sub
pushf
arpl
or
clc
sub
in
or
es
fs
das
jae
cmp
xchg
test
inc
add
enter
xchg
lods
pop
lods
scas
and
xchg
or
xchg
xchg
xchg
xchg
or
enter
cwde
xor
and
and
and
add
xor
and
xor
loopne
shl
daa
loopne
pop
mov
sub
mov
add
dec
xor
(bad)
mov
(bad)
xor
outs
xor
lea
jb
shl
push
cmp
add
add
or
mov
(bad)
(bad)
(bad)
jl
pop
xor
mov
cmp
jne
mov
xor
test
jne
dec
jne
jmp
mov
inc
inc
push
pop
dec
clc
jle
cmps
jmp
rol
mov
cmp
mov
pushw
(bad)
clc
jg
add
js
add
mov
in
pop
xchg
push
mov
add
push
jmp
ja
jmp
dec
ret
scas
shl
or
(bad)
call
je
mov
mov
and
xor
mov
sbb
mov
movzx
(bad)
(bad)
dec
test
je
lea
mov
and
cmp
je
mov
dec
lea
jne
mov
(bad)
(bad)
(bad)
inc
add
enter
in
mov
jmp
mov
mov
xor
test
jne
(bad)
push
out
jne
(bad)
push
push
mov
mov
mov
cmp
je
xor
mov
mov
mov
sub
dec
cmp
mov
jb
ja
xor
adc
sbb
mov
inc
add
mov
cmp
jb
mov
add
(bad)
out
fdiv
push
jae
adc
cmp
movsx
or
pop
add
pop
pop
ret
movsx
je
test
mov
mov
mov
jbe
cld
int
fisttp
push
adc
add
(bad)
dec
cmp
ja
jb
movsx
add
call
adc
cmp
mov
or
pop
or
daa
(bad)
mov
mov
or
movsx
add
call
pop
pop
ret
push
arpl
dec
(bad)
leave
add
(bad)
jg
add
cmp
jb
mov
stos
mov
stos
pop
adc
jb
icebp
xchg
fmul
mov
aaa
lock
call
and
pop
jo
adc
adc
mov
mov
add
clc
push
add
cwde
lods
aaa
cmp
imul
mov
inc
rol
cmp
dec
shl
daa
add
jo
aas
dec
or
into
sub
data16
jmp
adc
pop
inc
mov
mov
mov
sub
add
std
fbstp
or
jmp
shl
addr16
add
lods
push
in
push
add
adc
sub
popa
dec
or
cmp
mov
arpl
loopne
add
sbb
jp
inc
hlt
pop
movs
mov
mov
inc
jmp
sub
jmp
clc
push
mov
and
sbb
add
cmp
jmp
sbb
out
(bad)
cmp
ror
jmp
add
jne
mov
cli
add
jne
mov
cld
loopne
push
(bad)
call
jmp
mov
mov
add
mov
pushf
xor
jg
stos
push
sbb
xchg
and
mov
cmp
nop
inc
lock
setge
and
cmp
ja
test
pop
movs
add
movs
sti
mov
sbb
cs
mov
mov
add
mov
mov
and
mov
jg
cmp
inc
add
or
movsx
add
mov
inc
add
fcom
cld
push
jne
cmp
inc
dec
fwait
sub
inc
add
ja
imul
sbb
hlt
fstp
fwait
pop
sub
or
adc
push
inc
push
sub
outs
mov
adc
inc
sbb
sub
ja
xchg
mov
and
shl
or
sbb
xchg
sub
fsubr
dec
adc
(bad)
jmp
mov
div
outs
jmp
adc
lock
inc
sbb
iret
mov
in
jg
push
mov
scas
jg
movs
mov
pop
or
mov
jno
push
mov
adc
cld
sbb
enter
mov
mov
inc
and
sbb
neg
jg
mov
ja
cmp
push
cmp
mov
pop
jp
cmp
mov
dec
or
dec
add
nop
mov
inc
daa
icebp
cmp
push
dec
add
cmp
jge
xor
jmp
sbb
loop
clc
dec
sbb
(bad)
push
test
mov
inc
dec
or
rcr
mov
and
or
mov
adc
es
pop
idiv
add
mov
jb
gs
fs
vfrczpd
sub
push
stc
sbb
push
adc
loopne
add
inc
mov
lahf
sub
icebp
fwait
push
add
adc
add
jmp
ins
imul
xchg
add
in
fdivr
push
or
data16
jne
je
data16
je
push
imul
jle
je
inc
xor
pop
inc
ins
popa
jae
gs
pop
xor
or
add
inc
imul
jle
dec
(bad)
pop
pop
or
outs
inc
add
ja
or
adc
fs
mov
mov
adc
pop
div
shr
addr16
outs
ins
jns
mov
int3
push
mov
out
(bad)
(bad)
mov
jae
push
jae
inc
ins
je
jae
inc
je
ins
push
fdivr
cwde
jnp
sbb
jae
dec
imul
push
and
and
inc
add
or
fstp
pop
push
je
je
add
cmp
add
dec
gs
jo
outs
add
gs
ret
out
pop
cld
nop
push
sbb
sbb
lds
mov
pop
or
dec
gs
out
mov
out
outs
jb
or
ins
mov
fwait
js
fld
or
jb
inc
jne
sub
mov
ret
ja
or
dec
outs
jne
jbe
add
or
push
gs
and
ret
outs
fs
iret
add
loope
inc
dec
sbb
inc
mov
add
nop
push
add
int3
cmp
je
call
je
gs
ins
cmp
int3
jge
xchg
pop
pop
int3
scas
pop
int3
inc
les
mov
pop
pop
sub
push
out
pop
or
mov
pop
pop
pop
sbb
aas
add
inc
inc
dec
jo
outs
push
mov
lock
sub
push
adc
ins
gs
sub
jge
pop
push
cmp
or
in
hlt
or
push
nop
cmp
shl
mov
push
or
fldlg2
push
dec
pop
push
nop
bound
push
inc
inc
adc
inc
outs
jne
fs
in
cmp
das
sar
add
pop
rcl
and
mov
pop
ror
psrad
or
imul
mov
sub
jae
clc
inc
pusha
das
xchg
push
pop
push
adc
inc
mov
add
push
leave
pop
push
pop
pop
fstp
inc
outs
ins
jo
outs
mov
mov
push
popa
clc
inc
pop
adc
inc
les
ret
dec
shl
push
adc
not
fnstcw
gs
pop
mov
mov
add
sti
sub
mov
jo
mov
pop
mov
sub
add
inc
inc
add
inc
inc
add
or
inc
add
push
or
das
pop
jmp
add
(bad)
push
inc
inc
add
xlat
js
test
pop
pop
out
push
jbe
push
les
mov
rol
call
push
pusha
dec
inc
fild
std
add
inc
add
mov
add
(bad)
jmp
inc
outs
xchg
fld
jl
or
jb
ret
shl
aaa
mov
adc
aad
inc
add
jge
cmc
rcl
dec
add
jl
mov
int3
int3
shl
push
inc
cmp
fdiv
pop
movs
pop
pop
jo
cmp
add
add
add
add
xchg
xchg
xchg
cmovae
mov
xor
fcomp
add
inc
push
sub
sub
push
test
jo
sti
or
inc
mov
adc
adc
sub
jae
sbb
test
or
fcom
in
inc
fs
jo
gs
lock
jmp
xor
pushf
jae
push
rcl
sahf
cmps
add
scas
cmp
pop
(bad)
pop
jge
rcr
or
add
jo
xor
pop
out
por
jo
stos
sbb
dec
sti
add
lahf
fld
dec
inc
sub
pop
mov
mov
sub
add
inc
add
scas
imul
add
inc
add
out
(bad)
xor
arpl
inc
dec
inc
add
xor
popf
std
inc
push
inc
add
dec
dec
pop
js
int3
js
shl
push
pop
dec
push
clc
pusha
mov
push
adc
leave
mov
cmc
inc
inc
and
inc
add
dec
push
(bad)
jg
dec
je
ins
adc
sahf
jmp
mov
and
out
pop
ret
xor
aas
adc
cmp
dec
adc
adc
sbb
leave
sbb
or
shl
mov
mov
das
ja
in
(bad)
sub
inc
add
cwde
pop
or
inc
sti
out
sar
xor
add
das
fadd
sbb
add
das
adc
push
or
xlat
jne
or
mov
and
jae
pop
aam
add
add
jnp
fild
loope
add
fdivr
mov
idiv
add
pop
push
sub
pusha
and
pop
jecxz
add
or
pusha
pusha
popa
inc
xchg
inc
add
pop
shl
ja
or
pop
mov
pop
ja
outs
mov
out
inc
add
pop
or
push
dec
popa
outs
fs
mov
mov
sbb
test
ja
dec
xchg
fbstp
dec
jmp
jmp
jbe
pop
sbb
mov
popa
pop
mov
pop
call
pop
pop
adc
pop
mov
test
icebp
jl
xlat
sbb
pushf
pop
adc
movlps
mul
out
je
call
sub
inc
add
ds
mov
mov
clc
pop
pop
gs
cmps
xor
adc
inc
add
sbb
push
mov
imul
adc
xchg
ret
jnp
push
pop
repz
rcr
in
inc
add
pusha
or
test
or
adc
adc
sbb
add
and
sub
sub
jmp
js
or
xor
aam
int3
mov
dec
shl
inc
dec
xor
shl
mov
das
dec
add
cmp
fst
mov
test
inc
add
add
cmp
cmp
xchg
aad
jl
inc
dec
stos
xchg
lods
inc
add
add
inc
add
scas
mov
nop
pushf
nop
or
call
inc
rol
sub
(bad)
mov
mov
cmp
mov
jg
jnp
imul
pop
js
loop
out
cmps
pop
dec
push
popa
daa
or
pop
add
iret
ror
cmp
aas
hlt
or
sbb
adc
sub
adc
pop
inc
aas
or
out
(bad)
mov
add
jb
add
pop
test
in
fmul
add
jae
jo
pop
icebp
popa
fs
int3
cmp
jmp
add
add
mov
jae
adc
pop
inc
pop
mov
push
shl
sbb
jg
ror
push
lahf
inc
add
call
outs
xor
mov
cmp
push
push
ins
dec
popa
ins
fcom
sub
icebp
(bad)
inc
gs
outs
gs
cmp
pop
enter
call
rcl
stos
mov
ror
mov
and
add
jg
pop
movs
pop
pop
jl
inc
and
arpl
and
inc
xor
sar
int3
adc
add
outs
or
dec
push
pop
sbb
inc
(bad)
int
dec
xchg
in
pop
pop
dec
or
push
test
movs
jnp
sbb
mov
add
add
xor
mov
jmp
out
or
inc
or
jae
les
inc
add
push
sbb
int3
jne
push
mov
ud2
mov
pop
fadd
lods
cmps
cmp
or
xlat
or
shl
(bad)
aas
pop
adc
std
(bad)
cld
(bad)
sti
(bad)
(bad)
(bad)
cli
(bad)
stc
(bad)
clc
push
push
push
push
push
push
dec
shl
(bad)
(bad)
push
push
call
pusha
add
xor
mov
xlat
outs
pop
add
punpckhbw
push
fdiv
pop
pushf
(bad)
ficom
cmp
add
add
add
mov
add
mov
adc
inc
daa
addr16
push
sbb
mov
push
popa
mul
push
sbb
or
xchg
pusha
rcr
add
inc
stos
xlat
jne
out
add
paddb
push
or
add
jg
push
inc
popa
jae
arpl
test
fxch
pushf
jmp
loopne
xchg
add
jo
pop
ja
or
add
add
and
fild
mov
add
mov
pop
fs
or
imul
sub
scas
and
fwait
pop
adc
das
shl
mov
xchg
add
mov
ins
mov
push
(bad)
dec
push
push
dec
fs
je
popa
jo
outs
je
jns
imul
or
fdivr
inc
icebp
mov
mov
mov
pop
pop
pop
ret
push
mov
mov
fldcw
clc
add
sub
daa
mov
push
xor
cmp
(bad)
lahf
mov
cmp
jne
cmp
je
jbe
mov
fs
jae
xchg
xor
push
pop
add
push
inc
and
inc
add
pop
addr16
jb
jne
mov
nop
loopne
mov
push
pop
out
daa
sti
add
inc
add
push
jae
mov
call
shl
and
arpl
add
xor
jg
fdivr
xor
xor
dec
test
jl
inc
xor
adc
fmul
outs
idiv
ja
cmc
call
adc
aad
std
pop
adc
mov
inc
dec
jne
mov
sub
and
mov
inc
mov
jge
call
test
das
and
and
mov
jmp
dec
je
mov
jg
sbb
fild
(bad)
fstp
jmp
or
(bad)
jmp
jne
shr
ins
add
add
mov
out
push
add
shr
stc
jg
scas
and
daa
push
and
mov
add
push
inc
and
adc
int3
or
jo
mov
dec
cs
xor
sbb
xor
add
pop
and
inc
xchg
xor
add
mov
outs
push
cwde
mov
pop
inc
add
jle
push
inc
aam
mov
mov
lahf
lock
and
xor
or
adc
jmp
cld
test
jne
inc
dec
jne
mov
adc
ss
or
push
push
lods
jl
adc
mov
outs
add
dec
lods
xchg
clc
mov
mov
mov
mov
or
xor
or
daa
mov
or
jne
sub
daa
ret
mov
cmp
(bad)
hlt
pop
pop
inc
jbe
test
xor
mov
add
movs
or
mov
mov
add
sub
pop
or
ss
repnz
or
push
mov
sub
mov
inc
loopne
add
out
data16
xor
mov
stos
leave
add
jmp
jnp
imul
xor
inc
test
setge
pop
mov
fimul
lock
xor
and
and
adc
jno
dec
mov
cmp
inc
je
adc
aas
adc
xor
xchg
mov
dec
outs
xchg
xor
or
test
mov
shl
sbb
dec
gs
pop
jmp
daa
clc
mov
cmp
je
addr16
fbld
xor
mov
jno
aad
fsub
hlt
imul
mov
inc
dec
jne
adc
sbb
jmp
sub
dec
adc
xchg
sub
lea
pop
pop
dec
das
or
sub
(bad)
js
popa
and
xor
xor
mov
inc
push
push
js
push
std
dec
test
jl
inc
jbe
pop
xor
mov
cwde
inc
dec
jne
and
xchg
pop
dec
adc
(bad)
lahf
jecxz
xchg
ror
call
inc
push
add
pushf
or
cld
pop
(bad)
bound
inc
dec
jne
mov
push
aaa
fldcw
inc
(bad)
jnp
test
xor
cmp
dec
mov
mov
test
jne
sub
dec
ins
xchg
xor
add
int
and
xor
in
inc
adc
or
sub
mov
lea
clc
push
lea
test
mov
lea
jbe
lods
cs
mov
fs
in
inc
paddsw
xor
add
fbld
ja
dec
pop
push
mov
mov
jg
inc
clc
mov
lock
jne
ja
add
inc
lock
les
inc
clc
mov
mov
dec
test
jl
inc
mov
mov
sbb
daa
ret
jecxz
call
je
add
pusha
mov
fstp
int3
hlt
sub
es
lock
inc
icebp
mov
sub
aam
ins
mov
xor
popa
xor
in
dec
jne
stc
call
nop
add
mov
mov
call
add
test
je
or
add
mov
cs
pop
out
push
push
mov
test
jl
out
jl
clc
hlt
mov
and
out
movs
test
push
inc
pushf
ror
jp
popf
ds
inc
or
aaa
cld
push
add
sbb
in
int
arpl
mov
cmp
mov
mov
xlat
out
and
pop
pop
sub
mov
push
cmp
call
mov
cmp
xchg
rol
rcl
retf
pop
inc
adc
(bad)
lds
ds
leave
mov
loopne
sbb
xor
pop
in
lahf
jecxz
jmp
push
cld
mov
mov
sbb
cmp
sti
arpl
inc
hlt
or
xchg
int3
lds
sbb
push
fadd
add
mov
scas
mov
popf
inc
mov
rol
cmp
jp
dec
cmp
fadd
dec
add
sahf
cmps
inc
pop
sbb
inc
push
daa
adc
dec
xchg
push
and
mov
add
sbb
pop
mov
icebp
push
dec
and
ret
sub
(bad)
push
mov
fwait
cmp
cmp
int3
inc
clc
jp
sar
xchg
push
push
and
popf
sub
xchg
leave
in
in
and
pop
add
push
xor
pop
(bad)
jmp
xor
shl
pop
pop
je
fcom
clc
clc
pop
pop
inc
arpl
inc
(bad)
cmp
rol
(bad)
hlt
mov
add
call
adc
imul
inc
push
hlt
mov
pop
push
cmp
dec
cmp
mov
cmp
inc
mov
lods
inc
call
push
mov
call
stos
pand
(bad)
mov
sub
pop
xor
add
out
sbb
cld
pop
retf
lds
es
sub
push
std
adc
add
test
pop
jae
int
das
jnp
push
loope
sbb
sbb
mov
add
and
ja
dec
call
shl
inc
or
stos
rcl
loop
add
inc
lods
and
dec
ss
pop
mov
ret
add
cwde
ins
push
dec
xor
adc
cld
sbb
jge
das
dec
into
push
and
and
and
jmp
or
iret
and
xchg
repnz
cwde
fwait
in
pop
and
mov
or
cld
adc
inc
mov
sub
sbb
inc
outs
outs
jae
mov
dec
mov
mov
mov
sbb
in
xchg
stos
cmc
punpckhbw
mov
push
mov
cmps
sub
xlat
cld
and
or
lods
pop
clc
xor
mov
jle
cmps
int
push
ss
mov
xor
inc
cmp
and
pop
or
inc
sbb
movs
xor
cmp
jne
and
xor
fsub
mov
fsub
dec
cmp
mov
popf
pop
adc
pop
jmp
xor
mov
test
jl
inc
lea
mov
fdiv
call
scas
dec
cld
mov
jmp
add
dec
jne
xor
aas
push
aas
mov
or
cld
cmp
jne
mov
test
shl
fimul
mov
inc
cmp
add
idiv
add
sub
mov
adc
or
icebp
js
lock
rdtsc
mov
nop
cmp
inc
shr
xor
pop
ret
test
mov
daa
mov
sbb
orps
ret
clc
clc
mov
call
test
jne
inc
aam
dec
cwde
fwait
retf
xchg
dec
cmps
jle
fnsave
call
add
xor
bswap
adc
nop
(bad)
aas
mov
test
jne
mov
out
push
sub
adc
ds
jo
shr
pop
xchg
clc
shrd
add
mov
loope
aas
in
loopne
loope
xor
push
(bad)
adc
lock
in
cwde
(bad)
add
pop
cmps
push
push
sbb
cwde
or
sbb
sub
or
jo
sbb
xchg
sbb
nop
dec
pusha
(bad)
pop
iret
lds
mov
pop
pushw
sub
out
xor
cmps
mov
adc
pop
(bad)
(bad)
adc
push
or
adc
mov
jne
add
ror
push
add
bound
fdivr
and
xor
cmp
out
mov
sbb
ror
daa
cwde
add
loope
addr16
outs
push
push
pop
push
cld
fcom
xchg
inc
xor
xor
cmp
cmp
je
xchg
add
pop
lods
daa
and
adc
cld
pop
mov
push
pop
shl
repnz
add
vmovdqa
sbb
inc
or
cs
or
jb
and
push
cmp
retf
shl
push
mov
mov
ds
loope
inc
stos
enter
out
dec
add
adc
sete
cmp
fisttp
add
add
sbb
sbb
ss
push
es
int3
add
mov
sub
ds
pusha
pop
out
pop
mov
fwait
int3
dec
pop
pop
xchg
sbb
out
mov
idiv
push
fild
jmp
les
cmp
xchg
out
cmp
ret
and
mov
mov
inc
inc
dec
xchg
jmp
xor
inc
push
add
pop
mov
sbb
inc
mov
add
adc
adc
ja
cmp
jl
mov
mov
mov
fld
xor
call
xor
or
jge
sub
mov
rol
(bad)
loope
jno
adc
add
mov
sbb
add
mov
ret
call
push
test
xor
mov
mov
sub
add
and
clc
sub
stc
nop
jae
(bad)
adc
sar
and
inc
je
into
rol
xor
addr16
xor
and
shr
lds
ret
xchg
and
push
adc
push
ret
dec
and
stos
push
inc
add
add
or
jg
mov
cmp
jle
mov
test
jle
loop
jmp
cmp
jle
push
jmp
mov
stos
add
cmp
xor
ja
(bad)
jg
push
xor
jmp
inc
cmp
jge
mov
cmp
jne
or
add
leave
dec
pusha
xchg
pop
or
or
mov
mov
adc
adc
popa
ja
xchg
mov
mov
sbb
ja
adc
ja
push
div
mov
test
in
xor
call
mov
mov
call
rep
pop
adc
stos
mov
xor
and
adc
aam
pop
sbb
push
repnz
outs
dec
adc
or
pop
call
add
jo
je
mov
shl
(bad)
ret
push
mov
pop
mov
dec
add
adc
sub
sbb
xchg
cld
dec
shl
xor
xchg
int3
and
pop
mov
dec
mov
sub
jg
dec
mov
call
add
aam
inc
jne
mov
popa
and
and
test
xlat
adc
push
aam
adc
pop
mov
mov
mov
es
inc
ds
mov
call
add
out
outs
enter
mov
adc
leave
dec
sbb
daa
cwde
push
jmp
mov
mov
sbb
in
popa
push
push
pop
jl
addr16
rol
cmp
jl
mov
cmp
rcr
loopne
add
inc
jae
int3
adc
xor
and
push
mov
adc
mov
cmp
inc
iret
sub
lock
add
pusha
xor
in
fst
lods
xchg
fwait
outs
add
stos
inc
xchg
fwait
in
popa
xchg
xor
bound
jo
bound
les
aaa
push
add
and
push
ins
add
adc
xor
pop
add
ror
pop
fwait
mov
inc
add
xchg
enter
add
push
fadd
(bad)
jo
into
add
test
inc
lock
add
inc
and
cmp
clc
add
xor
rcl
shl
cmp
je
xor
mov
dec
push
out
dec
ja
fild
pop
sbb
mov
cmp
in
sbb
add
je
and
pop
lds
aaa
or
fistp
in
aad
and
into
or
fisttp
add
hlt
(bad)
adc
mov
cmp
jae
movs
or
je
fwait
(bad)
inc
stos
adc
btr
ret
cmp
jl
push
inc
dec
adc
mov
cli
pop
pop
pop
jmp
call
inc
add
mov
jl
inc
xchg
xor
mov
dec
add
adc
je
or
mov
cmp
ja
and
bt
jb
call
and
add
mov
jp
ret
mov
jmp
inc
cmp
add
inc
dec
jne
lock
cs
rcr
xor
call
test
je
xchg
mov
call
loope
std
inc
pop
add
pushf
ret
aaa
xchg
and
adc
xchg
dec
add
jecxz
dec
aad
div
sbb
sub
call
push
cmp
mov
je
dec
xor
(bad)
dec
int3
call
add
add
hlt
fist
mov
push
add
dec
dec
loop
or
leave
dec
pop
add
cmp
jmp
shl
pop
shr
ins
add
fcom
es
push
js
fcom
dec
mov
inc
sahf
xchg
sub
lods
sbb
ret
mov
shr
xchg
mov
dec
add
mov
xlat
push
mov
aam
push
(bad)
sub
fldz
jge
aaa
mov
mov
mov
xor
mov
cmps
mov
loopne
fild
add
aam
add
push
push
frstor
not
add
cwde
mov
adc
sbb
add
mov
inc
add
add
or
movups
add
mov
or
mov
add
add
jo
repz
loope
mov
imul
adc
stc
pop
xchg
push
push
xor
ss
pop
push
mov
inc
ds
and
jle
and
iret
daa
cwde
and
jae
add
gs
imul
cmp
or
pusha
add
stos
lea
add
pop
stos
cli
xor
sbb
mov
mov
adc
clc
mov
add
call
mov
ja
add
cmp
push
aaa
mov
and
cmp
dec
push
push
xlat
(bad)
dec
mov
add
ins
lahf
cmp
test
adc
lock
mov
cmp
inc
inc
clc
mov
call
mov
push
mov
aaa
or
fs
ja
push
sbb
cmp
dec
jne
pusha
ss
fdivr
pop
lock
xor
dec
xchg
cmps
sbb
into
cmp
jae
add
inc
icebp
ret
mov
fcom
shr
and
aad
inc
mov
mov
mov
mov
mov
mov
add
add
inc
pop
mov
test
inc
push
mov
sbb
into
fidivr
mov
jecxz
push
cmp
adc
or
cmp
xor
sbb
inc
in
jo
popa
push
(bad)
pop
fwait
sub
mov
daa
adc
add
cld
outs
idiv
fadd
adc
lahf
ret
ret
add
pop
push
(bad)
inc
loope
ror
push
loope
inc
add
push
push
fwait
cmp
mov
hlt
xor
add
ret
cmp
bound
(bad)
jmp
enter
dec
or
jne
xor
inc
inc
or
mov
or
push
pusha
addr16
popf
dec
pop
(bad)
sbb
cld
sahf
mov
enter
jl
cmp
jne
mov
push
xor
add
pusha
sbb
lock
lea
cmp
xchg
shl
cmp
or
rcl
ja
ret
ja
lea
mov
mov
mov
cmp
jb
emms
lods
stos
daa
jno
lods
fisubr
dec
sub
push
xchg
xor
loope
mov
jp
out
inc
add
pop
sti
cmp
and
jg
test
lock
fisttp
hlt
sbb
shl
dec
cmp
push
popa
sub
sbb
push
lods
cli
dec
test
cld
xor
mov
xchg
sbb
lea
xor
cmovs
xor
dec
data16
mov
sbb
push
and
push
into
push
aad
cld
stc
and
and
or
popa
add
sub
sbb
lea
inc
inc
pop
or
aaa
subps
cs
stos
pop
rcr
sbb
mov
jecxz
cmp
pop
adc
aad
cld
shr
mov
sbb
cmp
cmp
dec
mov
sub
xor
inc
and
cwde
add
adc
gs
push
dec
into
mov
inc
lock
mov
ds
adc
jne
xor
inc
and
dec
loopne
inc
jp
or
pop
scas
jmp
clc
add
inc
stos
int3
retf
addr16
fld
sub
ss
or
mov
mov
xchg
and
and
ja
or
fadd
aad
push
pop
call
add
xor
int
or
in
and
sbb
adc
call
xor
scas
or
aaa
daa
ret
and
test
retf
cld
pop
rol
push
and
xor
mov
and
and
push
clc
lahf
push
push
hlt
mov
ret
ja
mov
dec
jne
fwait
mov
fadd
inc
clc
imul
xchg
pushf
push
xchg
lahf
cmc
cli
pop
xor
and
xor
nop
add
xor
sub
inc
mov
rcl
retf
xchg
xor
push
push
dec
pushf
add
test
pusha
add
xlat
mov
push
je
lea
push
mov
adc
add
pop
fsubrp
mov
xor
dec
lock
(bad)
leave
or
loopne
inc
stos
je
dec
inc
push
and
lods
jecxz
dec
dec
enter
jae
adc
clc
mov
mov
push
adc
dec
cmp
je
inc
dec
jne
or
mov
rol
and
add
mov
cld
movs
or
and
call
push
or
retf
and
xchg
push
fdiv
leave
lods
push
movs
cmp
ins
xchg
(bad)
sbb
inc
add
loopne
js
add
and
lahf
dec
cld
das
clc
mov
aaa
imul
add
dec
adc
sub
xor
clc
dec
and
lock
or
cdq
pop
or
into
xor
or
int3
dec
ror
add
push
jo
dec
shl
dec
and
mov
adc
xor
add
xor
and
iret
sbb
cli
cmp
je
pop
sub
inc
xor
dec
sbb
bound
add
add
mov
fs
add
sbb
sbb
mov
xor
in
push
mov
sub
mov
into
jo
or
mov
dec
and
cdq
fs
nop
mov
mov
leave
ja
je
push
xchg
xor
add
lods
jno
aaa
jae
mov
out
daa
shl
add
sar
pop
jg
mov
out
fs
je
loop
and
es
add
sub
and
mov
xlat
in
xchg
ret
push
jge
push
pusha
outs
pop
cmp
cwde
fwait
in
js
bound
call
daa
data16
jecxz
xchg
mov
inc
js
and
mov
enter
(bad)
push
mov
xor
push
(bad)
fwait
xor
rol
or
je
adc
add
and
adc
adc
jb
sbb
sub
or
mov
ja
mov
repnz
and
aad
jg
call
add
popa
sbb
push
push
inc
adc
inc
(bad)
(bad)
(bad)
fild
cmp
mov
test
je
sub
je
sub
jne
mov
sub
lea
clc
xchg
jb
test
cmp
lock
call
add
add
xchg
sub
sbb
out
pop
cmp
inc
adc
xor
icebp
xor
push
jo
in
dec
mov
pop
pusha
adc
in
mov
fsub
adc
mov
jae
(bad)
test
test
cmp
inc
pop
addr16
out
jg
out
fimul
jne
test
or
mov
aas
and
pop
sbb
xadd
(bad)
mov
mov
mov
push
fwait
xor
cmp
arpl
mov
mov
inc
sbb
xor
call
sub
test
cmp
push
sbb
cmp
adc
(bad)
and
mov
jmp
iret
mov
call
in
popf
sbb
inc
sbb
dec
je
jmp
mov
call
call
adc
or
shl
cdq
mov
xchg
test
and
inc
and
xor
call
jg
sub
push
sbb
push
xchg
sub
mov
sub
adc
sbb
pop
inc
loopne
sub
dec
xor
or
stos
test
jl
cmp
fwait
int
inc
cmp
xchg
pop
lea
inc
add
bound
loop
aaa
pop
dec
add
adc
add
fld
imul
call
movs
xchg
jne
jnp
sahf
call
ss
xor
(bad)
mov
dec
ret
push
mov
lea
mov
lea
mov
(bad)
dec
sbb
mov
mov
mov
das
nop
add
(bad)
(bad)
mov
test
and
cmp
jg
mov
icebp
jmp
add
shr
mov
mov
stos
(bad)
(bad)
jg
or
add
sbb
and
test
mov
or
sbb
repz
mov
mov
mov
mov
sbb
add
mov
cmps
adc
inc
or
mov
add
in
or
outs
sbb
out
cmp
inc
lock
push
mov
shl
pop
repnz
jns
sar
ror
pop
sar
lds
pop
jge
repnz
sbb
pop
mov
jb
xchg
sar
ds
mov
sbb
call
shl
daa
mov
push
retf
in
jo
xor
dec
and
mov
std
pop
outs
mov
sub
outs
ds
aam
xor
push
into
adc
and
or
xor
jne
sbb
dec
cli
jge
fstp
mov
lock
inc
lea
push
pop
adc
cmp
js
loope
mov
stc
ja
ja
mov
lock
repnz
outs
mov
add
xlat
cmp
test
inc
cmps
sbb
jns
enter
dec
sub
cmps
test
pusha
sbb
xchg
ud2
sti
inc
push
inc
mov
inc
add
(bad)
lock
pusha
jmp
jbe
inc
hlt
shr
jae
jg
je
mov
push
or
add
sar
mov
jg
cmp
jl
mov
(bad)
(bad)
mov
fdivr
pop
lock
mov
jmp
cmp
jne
mov
icebp
call
inc
dec
cmp
jge
cmp
jle
sub
outs
mov
mov
cmp
jl
push
call
mov
call
pop
mov
adc
fist
rep
cmp
je
test
je
shl
stos
(bad)
movs
nop
sub
pop
dec
je
nop
add
pop
mov
mov
iret
dec
sar
aad
xor
ret
mov
fwait
push
inc
pop
inc
xchg
daa
ja
loope
xor
add
sub
or
lock
fs
les
lock
pop
jae
js
inc
bound
xor
ret
xchg
mov
add
add
mov
pop
xchg
fucomi
or
scas
push
cdq
cmp
lea
iret
imul
dec
add
pop
mov
adc
add
add
pop
xor
mov
push
and
arpl
push
or
lock
or
push
cmp
xor
add
add
(bad)
(bad)
jg
sbb
add
mov
mov
mov
mov
inc
pop
or
loopne
push
rcl
push
sub
adc
cmp
ds
adc
adc
jno
adc
cmp
sub
nop
fimul
sub
and
mov
mov
outs
cmps
lea
cdq
mov
mov
mov
xchg
clc
mov
or
add
or
cli
pop
cmp
mov
call
fdivr
push
adc
pop
in
mov
cmp
lock
jae
cs
loop
mov
cdq
push
push
mov
push
int
adc
imul
sub
mov
cmc
xor
mov
es
cdq
pop
call
inc
clc
daa
lea
cmp
daa
xbegin
and
xor
push
or
fdiv
dec
push
sbb
mov
scas
popa
ja
leave
cmp
lods
lods
rol
xor
mov
jne
mov
loope
jne
or
shl
pop
data16
add
popa
add
dec
adc
or
js
xchg
jle
cwde
cs
add
jbe
sub
pop
sub
in
mov
add
pop
stos
call
mov
cmp
or
pop
cmp
mov
jae
jmp
jge
mov
jmp
mov
add
jl
push
or
push
mov
or
push
or
mov
aaa
sbb
lds
loopne
sbb
(bad)
or
hlt
and
push
ss
loopne
clc
push
mov
push
sbb
pop
push
add
xchg
test
arpl
ret
(bad)
pop
shl
cmp
outs
nop
addr16
pop
and
dec
cmp
pop
mov
lock
sub
mov
ja
lock
mov
jns
neg
xor
ret
(bad)
and
clc
jmp
adc
scas
or
xor
pusha
push
push
mov
pop
dec
outs
call
enter
mov
cmps
pushf
mov
scas
aas
push
add
lods
pop
or
pop
lds
call
enter
xchg
daa
loop
cmp
add
sub
xor
es
add
pop
cmps
loopne
and
sub
sbb
mov
jge
jne
cmp
out
or
imul
jne
add
vmread
cmp
jge
sbb
mov
pop
inc
cmp
dec
lea
aad
xchg
xor
cmps
sahf
hlt
push
jg
inc
clc
or
inc
mov
add
out
add
arpl
xchg
push
in
adc
fs
stc
sbb
pushf
fdiv
adc
(bad)
les
in
cmp
in
inc
fdivr
mov
retf
test
mov
test
gs
jp
pop
and
in
int3
sub
and
mov
fwait
mov
mov
adc
add
(bad)
jmp
test
inc
add
(bad)
mov
inc
jg
das
sbb
jae
jmp
(bad)
(bad)
(bad)
mov
sub
jb
je
dec
je
jmp
mov
jmp
add
scas
mov
push
or
inc
or
mov
test
stos
cmpxchg
sbb
or
add
inc
push
jo
cwde
and
pop
cmp
and
rcl
sbb
dec
xor
loopne
jo
retf
push
adc
lods
adc
jnp
push
movs
add
pop
ret
jg
push
dec
scas
inc
pop
mov
push
popa
jmp
or
sbb
jae
lods
outs
mov
push
add
mov
push
jg
dec
(bad)
inc
sar
cmp
rcl
cli
call
dec
xor
test
push
push
movs
retf
mov
pop
and
sbb
cli
call
dec
mov
cmp
jge
mov
add
jo
or
fwait
clc
jmp
xchg
cmp
je
mov
add
call
add
loopne
dec
mov
inc
or
sti
je
sub
adc
add
xor
jmp
test
jne
mov
movzx
push
cmp
aas
lods
pop
or
adc
mov
mov
sbb
fwait
cmp
sbb
aaa
adc
shl
mov
push
(bad)
jmp
(bad)
jg
stos
xor
clc
add
test
jle
cmp
jle
cmp
jle
sbb
pop
jae
aam
or
or
lds
mov
mov
xchg
xchg
push
les
aad
push
pop
jg
add
add
push
fwait
test
pop
cmp
enter
lods
adc
addr16
inc
jp
adc
(bad)
hlt
and
movs
aaa
imul
sbb
inc
cld
push
lea
mov
mov
mov
sub
and
loopne
ds
mov
nop
jae
rcl
sub
repnz
push
ror
mov
test
mov
inc
adc
pop
sbb
add
js
mov
adc
cwde
ret
pop
repz
movs
mov
adc
add
inc
pop
pop
jl
jg
je
mov
cmp
lods
popa
and
or
or
or
inc
test
add
xor
adc
pop
je
mov
pop
cmp
int3
sar
push
sbb
shr
add
or
jne
add
adc
or
jo
or
in
imul
iret
sbb
cs
add
popf
or
outs
popa
into
jne
jo
imul
push
add
iret
dec
cmp
ja
jg
add
and
retf
cld
sub
pop
dec
outs
je
popa
jg
(bad)
jmp
add
inc
adc
inc
or
or
inc
adc
dec
cld
ret
mov
xor
sbb
xor
adc
mov
out
jl
mov
mov
jmp
add
hlt
cmp
pop
icebp
inc
je
mov
sub
mov
lea
mov
inc
mov
inc
lea
pop
jge
mov
add
nop
mov
fild
xchg
push
add
pusha
add
xor
add
popf
cs
add
add
adc
rol
xor
inc
(bad)
mov
dec
cld
add
adc
pop
add
push
xor
dec
jp
and
dec
add
pop
je
adc
clc
in
lock
or
(bad)
mov
(bad)
jmp
sbb
sub
jae
xlat
dec
mov
pop
mov
div
mov
jge
lahf
jno
mov
je
cmp
aaa
loop
int
sub
dec
jne
mov
or
sub
ret
push
sahf
push
mov
xchg
mov
pop
pop
fistp
add
dec
sub
mov
mov
inc
cld
dec
xor
xchg
pop
test
jge
adc
jl
dec
inc
lahf
inc
and
mov
out
fcom
enter
or
mov
xchg
retf
bound
test
jge
jae
data16
repz
add
add
push
xchg
addr16
aas
dec
out
push
ss
dec
sbb
jg
add
dec
push
loope
mov
in
inc
cld
test
es
xchg
shr
xor
jmp
add
add
push
clc
mov
outs
hlt
jbe
stos
(bad)
std
leave
adc
inc
test
je
adc
adc
icebp
mov
jl
mov
call
push
mov
pop
inc
pop
neg
dec
add
cwde
jmp
sbb
cld
pop
jl
inc
cmp
jl
xor
gs
or
stos
aaa
push
xchg
sub
pop
inc
mov
sbb
adc
std
inc
and
inc
dec
jne
push
sub
inc
int3
fs
pushf
and
dec
ss
inc
adc
out
push
add
mov
aaa
sub
add
or
push
neg
cmp
add
test
push
das
call
push
push
xchg
inc
leave
loopne
jg
mov
mov
cmp
jne
xor
cld
add
out
shl
inc
mov
sub
bound
pop
enter
jb
xchg
jae
test
push
outs
xlat
inc
cld
cmps
enter
je
mov
pusha
mov
mov
cmp
xchg
xor
and
retf
jp
lock
cs
ret
mov
pushf
ret
nop
push
pop
mov
fmul
and
or
inc
xor
scas
or
and
push
add
add
cmp
push
add
mov
and
cmp
popa
add
std
push
adc
push
adc
mov
and
push
dec
inc
dec
add
iret
js
cmp
fdivr
add
ud0
or
loope
(bad)
and
lahf
es
inc
clc
jle
push
jo
add
adc
clc
neg
call
lea
xor
leave
mov
fsub
mov
dec
cmp
adc
nop
or
inc
pop
imul
frstor
dec
or
sub
sbb
pusha
mov
xor
xchg
cmp
jb
lea
(bad)
fsubr
xchg
push
popf
in
pop
sbb
hlt
sbb
dec
jo
icebp
push
mov
adc
retf
fst
cmp
adc
mov
fdivr
adc
sti
inc
xchg
and
fdiv
test
sete
dec
dec
push
retf
push
mov
cmp
je
push
cs
and
push
inc
pop
call
stos
sbb
add
inc
jle
mov
mov
mov
add
push
and
push
cmp
push
lds
idiv
out
fcom
xchg
adc
jnp
bound
pop
inc
cld
dec
sub
mov
call
jno
jbe
mov
add
icebp
add
rcr
push
leave
fmul
mov
xchg
xor
sub
dec
pop
add
push
add
push
add
push
mov
daa
cmp
or
push
or
daa
cwde
sbb
fidiv
mov
lock
mov
psllq
shl
ds
sti
xor
inc
cld
mov
adc
mov
sub
sbb
rol
mov
idiv
lock
fmul
(bad)
emms
sbb
xor
(bad)
add
loope
inc
or
icebp
test
sub
adc
idiv
mov
mov
push
rol
call
enter
jo
inc
add
fsubr
hlt
(bad)
sbb
cmp
inc
dec
inc
and
fdivr
aaa
mov
pop
loop
xor
sbb
test
dec
js
cmp
das
getsec
mov
inc
test
and
outs
clc
adc
pop
fmul
mov
aad
stos
xchg
push
inc
xor
xchg
inc
xor
jae
push
cmp
in
and
retf
fld
xor
push
cmp
lahf
cmp
and
es
call
fcom
add
js
je
movsx
outs
add
adc
inc
mov
sub
std
mov
mov
adc
int
call
dec
jne
cmp
retf
sub
pop
inc
out
ja
mov
xor
jmp
inc
push
push
fdivr
sub
mov
and
sub
sub
dec
mov
out
or
push
hlt
nop
push
mov
cmp
(bad)
and
push
mov
mov
mov
jmp
mov
sub
ja
clc
out
outs
adc
fnstenv
mov
push
sub
adc
(bad)
cmp
inc
adc
dec
adc
jmp
cli
and
or
jne
dec
and
fistp
or
sbb
cmp
dec
adc
div
mov
(bad)
cwde
pop
cdq
mov
xchg
mov
in
fistp
mov
jbe
adc
icebp
xor
adc
and
cmp
xchg
icebp
pop
dec
adc
daa
into
and
xor
push
xchg
into
nop
or
inc
pusha
or
xor
push
popa
xor
aas
mov
mov
ss
arpl
cmp
inc
xor
arpl
add
jno
sub
in
lmsw
cmp
rcr
jmp
jae
das
inc
xchg
std
inc
les
jno
adc
or
jnp
popa
adc
add
sbb
add
xor
dec
mov
jo
loopne
shr
ja
mov
mov
cmp
xlat
loop
push
inc
(bad)
adc
adc
and
scas
xor
retf
in
fwait
cmp
cmc
sbb
jo
pop
inc
xor
fwait
dec
cwde
dec
test
je
inc
sar
inc
xor
inc
ins
inc
cmp
sbb
cld
cld
add
mov
leave
pop
push
inc
xor
(bad)
into
cmp
pop
mov
stos
pop
mov
aaa
dec
retf
dec
jne
inc
xlat
adc
aaa
addr16
std
mov
pop
add
lds
cwde
mov
or
loopne
sub
mov
jmp
sbb
neg
and
adc
fistp
test
jne
or
jmp
hlt
inc
std
push
lds
mov
rcr
push
push
push
or
pop
cmp
and
mov
sbb
rcr
mov
add
jo
mov
icebp
and
out
adc
xchg
inc
inc
inc
add
(bad)
outs
test
mov
jno
loop
scas
and
add
dec
mov
jns
mov
mov
out
jmp
stc
cmp
jne
mov
call
test
out
out
je
inc
in
or
cld
inc
jle
inc
in
or
test
jns
clc
mov
sar
retf
sbb
push
jg
pop
adc
and
push
pusha
mov
out
adc
and
adc
popf
jnp
add
stos
mov
push
fadd
add
(bad)
pop
idiv
mov
jb
push
sub
mov
lds
mov
fstp
(bad)
sti
mov
test
je
or
outs
sbb
cmp
stc
sub
xor
iret
repnz
mov
setg
sub
adc
scas
int
or
lea
mul
sbb
rcr
ja
pop
mov
mov
test
jne
scas
clc
mov
inc
pop
ret
mov
mov
inc
mov
jp
rcl
adc
xchg
mov
add
cld
mov
mov
call
mov
dec
loopne
push
imul
and
and
and
push
mov
inc
sub
inc
mov
aaa
adc
inc
fdivr
test
aas
mov
mov
fiadd
std
test
je
dec
push
pop
jmp
xchg
jl
sti
imul
add
add
inc
push
(bad)
jo
test
pop
add
pop
or
test
scas
push
sbb
mov
push
inc
jne
push
outs
jle
ja
mov
mov
test
je
clc
mov
mov
arpl
(bad)
fiadd
dec
int3
mov
sub
mov
jmp
std
push
xor
mov
adc
mov
stc
test
pusha
jo
pop
pop
push
imul
outs
test
xor
das
xor
mov
sbb
and
ret
inc
retf
sbb
add
ja
inc
or
cmp
nop
jmp
fmul
int
add
es
loopne
or
aaa
fdiv
(bad)
sbb
inc
mov
fist
mov
inc
cld
cmp
xor
xor
jne
hlt
aad
popa
jl
and
xor
sub
jo
add
add
arpl
pop
inc
push
es
jb
cmp
lds
les
movs
jmp
dec
mov
mov
inc
in
cmp
and
sbb
(bad)
sub
dec
movs
fwait
das
push
push
inc
cld
push
xor
js
test
jne
dec
mov
call
sub
or
ror
mov
xchg
sub
push
and
push
xchg
cld
fisttp
inc
adc
or
jg
push
add
scas
stos
add
jmp
(bad)
aas
callw
sbb
jno
mov
mov
fild
mov
fld
add
mov
(bad)
hlt
inc
setp
mov
or
inc
fnstcw
or
xchg
push
lds
mov
xor
inc
imul
inc
and
push
inc
or
or
and
fisttp
mov
test
xlat
inc
idiv
dec
fstp
fst
rol
rcr
loop
inc
mov
mov
adc
scas
mov
push
je
out
into
push
adc
add
add
add
enter
inc
fdiv
leave
mov
adc
sub
ss
and
mov
mov
push
outs
repnz
cmp
push
mov
jmp
or
dec
call
into
add
mov
(bad)
and
jmp
addr16
stos
sub
mov
adc
out
(bad)
xchg
xlat
sub
je
dec
je
add
jmp
lea
in
sbb
inc
and
jmp
and
push
ficomp
push
mov
sbb
xchg
outs
adc
add
sub
cmp
mov
std
mov
jmp
mov
add
std
pop
sbb
push
(bad)
imul
inc
lock
cdq
mov
mov
add
add
mov
push
popa
inc
test
pop
mov
arpl
or
add
and
cmp
jne
cld
aas
adc
sbb
mov
test
in
pop
jmp
sub
add
sbb
add
cmps
shl
stos
movs
call
cld
mov
and
adc
cld
mov
mov
sbb
jne
fist
cmp
xor
fs
das
retf
das
dec
aaa
mov
mov
test
test
clc
mov
push
in
(bad)
test
sahf
add
aad
(bad)
mov
pop
or
mov
popa
inc
sbb
add
jnp
sbb
dec
push
push
add
aad
xor
clc
or
(bad)
test
xor
fild
int
or
daa
or
sbb
test
std
cmp
push
inc
scas
ja
lock
div
xchg
jmp
inc
cmp
jl
pop
cmp
jne
sbb
jbe
jg
shl
retf
sub
mov
push
cmp
add
cwde
fcom
js
pop
(bad)
out
push
jo
add
ror
xor
aas
nop
and
gs
inc
in
mov
mov
xor
cmp
jne
out
out
std
and
adc
push
jae
sub
and
mov
inc
shl
(bad)
cdq
stos
cli
je
mov
mov
out
enter
iret
inc
out
lds
ja
in
ja
xor
js
add
xor
movs
fstp
pop
inc
mov
or
sub
sub
das
mov
jmp
fimul
stos
jnp
js
add
adc
mov
xchg
pop
pusha
cmp
xor
add
sbb
(bad)
call
test
push
ins
jo
mov
inc
xchg
cmp
not
jg
sbb
push
into
bound
mov
push
sbb
inc
imul
and
pop
inc
add
enter
out
jbe
dec
cmp
xor
or
cmp
cld
lock
out
xchg
(bad)
jecxz
loop
cld
adc
jnp
lock
jecxz
fsubr
pop
mov
add
mov
mov
sub
dec
xchg
mov
inc
ret
push
dec
inc
pop
add
inc
aaa
adc
scas
dec
movs
xor
mov
sbb
xchg
call
mov
es
push
add
ins
or
mov
xchg
popf
jns
and
pop
push
inc
(bad)
out
add
xchg
push
mov
sub
jp
(bad)
mov
jno
add
(bad)
jne
mov
sub
add
sbb
sub
or
add
call
xor
mov
cmp
retf
mov
inc
add
add
mov
daa
jnp
imul
pop
nop
out
pshufw
or
jge
retf
add
jnp
jne
loope
sbb
cmp
mov
jne
xchg
sub
mov
lods
retf
mov
sbb
dec
sbb
push
sub
mov
add
or
mov
inc
lea
push
and
test
js
hlt
out
fdiv
jge
mov
or
jg
mov
sub
jo
aas
ret
dec
jge
jbe
mov
fcmovb
je
push
sbb
leave
imul
add
and
in
xor
lds
shr
cmp
jl
lea
and
add
pop
sbb
jg
(bad)
out
or
outs
jnp
push
push
push
nop
jmp
lea
sbb
or
arpl
mov
sbb
push
sbb
push
sbb
aaa
je
loopne
add
cmp
pop
daa
jnp
sub
xchg
push
push
enter
sbb
pop
test
sbb
add
rol
mov
pop
das
(bad)
icebp
imul
aas
lock
addr16
in
add
add
or
mov
mov
mov
ss
push
cld
hlt
mov
test
add
jb
enter
aas
mov
xor
pop
add
cli
(bad)
jg
pop
jmp
mov
mov
mov
mov
mov
xchg
lea
and
cmps
jle
adc
(bad)
adc
sub
xor
pusha
mov
out
push
mov
(bad)
ret
std
ja
adc
inc
xor
mov
call
push
cmp
das
cmp
(bad)
jmp
out
sbb
sbb
or
xor
sar
ret
pop
add
xor
rep
jns
mov
add
fwait
pop
call
mov
mov
loopne
shr
add
xchg
popa
dec
mov
xchg
xor
outs
or
pop
cld
lahf
ror
call
mov
mov
jmp
mov
sbb
jnp
jae
jne
jnp
jo
ret
adc
or
xor
fincstp
or
loop
or
adc
test
adc
das
adc
or
inc
mov
lock
es
mov
ror
inc
lock
jne
mov
sbb
test
shl
adc
dec
adc
sub
popa
je
xor
or
mov
les
cwde
sbb
jmp
or
pop
dec
mov
outs
mov
mov
jmp
sub
daa
mov
adc
aaa
pop
ins
push
or
or
js
scas
and
mov
xor
scas
out
push
ss
dec
push
sar
outs
cmp
pop
inc
stos
pop
daa
js
test
sub
and
fbstp
jle
or
out
lock
xor
jmp
clc
or
mov
adc
sbb
sbb
cmp
in
adc
mov
in
cmp
ja
bts
jmp
movs
sbb
loop
pop
add
jl
mov
nop
sbb
out
adc
mov
rcl
out
xchg
stos
push
ins
mov
jmp
or
or
sbb
pusha
pushf
pop
ret
adc
inc
add
sbb
and
sbb
xchg
cmp
or
(bad)
sbb
lock
dec
mov
sub
jne
sti
or
adc
jmp
push
hlt
add
fsubr
lods
mov
sub
push
add
jmp
lea
mov
fdivr
cld
mov
mov
aas
add
imul
ror
inc
gs
xor
xor
inc
xchg
shr
push
dec
jae
pop
lds
nop
mov
pop
bound
or
sub
xchg
popf
jp
test
ja
mov
data16
xor
sbb
in
push
movs
lahf
add
cmps
sar
cmp
and
mov
pop
inc
(bad)
add
fsub
push
mov
xchg
jae
and
cmp
xchg
icebp
call
or
xor
inc
jmp
stos
ins
inc
jg
fmul
mov
ins
inc
outs
mov
fs
lods
pop
lock
nop
or
mov
ret
cld
jmp
jae
sub
and
mov
ret
xchg
pop
push
push
mov
pusha
retf
lds
out
imul
data16
rcr
and
and
rol
fs
add
mov
add
jns
mov
or
xchg
mov
and
adc
xchg
jmp
arpl
mov
in
jge
mov
add
add
scas
sti
dec
xlat
ucomiss
cmp
inc
pop
dec
add
ins
jl
cdq
jle
mov
and
mov
aad
test
sbb
sub
pop
test
xor
xchg
or
and
and
inc
push
mov
fmul
mov
ja
sub
pop
pop
pusha
mov
push
cwde
popf
cmp
inc
lahf
xor
aad
imul
sub
or
in
sbb
sbb
pusha
enter
dec
ret
lahf
sbb
imul
xchg
mov
arpl
xchg
ss
sbb
lahf
push
sub
das
inc
mov
xchg
cmp
lock
test
jmp
test
je
lea
lea
mov
and
inc
xor
xor
pop
jle
dec
add
iret
icebp
sbb
adc
pop
fld
loopne
xor
adc
add
sbb
mov
scas
outs
lea
cwde
adc
sbb
and
scas
inc
test
add
es
retf
xor
imul
mov
add
aas
les
add
push
add
push
push
xor
ror
push
sbb
loopne
xor
cmp
push
push
mov
movs
pop
mov
xor
mov
sub
mov
push
cmp
retf
aas
cmp
call
pop
push
push
mov
mov
sbb
inc
add
mov
ror
inc
hlt
ror
pop
lahf
aas
rcl
outs
into
adc
add
(bad)
gs
add
in
jne
or
dec
je
mov
cmp
je
mov
sbb
jae
jne
and
bound
loopne
add
mov
xor
adc
rol
fs
retf
add
imul
add
push
xor
iret
les
add
jle
push
or
(bad)
adc
or
or
adc
mov
fstp
cmp
pop
jg
mov
mov
repnz
mov
xchg
retf
rol
sbb
inc
mov
ds
mov
scas
add
xchg
adc
inc
ret
and
lds
xchg
lock
out
sbb
adc
lock
dec
test
sub
test
inc
mov
mov
fsubr
je
xchg
jae
dec
cmp
test
inc
sub
fadd
jle
loop
xor
adc
dec
popa
dec
rcr
fmul
xor
mov
(bad)
jmp
and
mov
add
(bad)
jmp
test
and
inc
add
mov
mov
call
push
or
shl
pop
rcr
cs
call
and
sbb
push
push
add
jmp
iret
mov
sub
pop
(bad)
mov
xor
push
jo
add
addr16
xchg
xchg
xchg
adc
je
jne
retf
cwde
inc
add
pop
add
jge
xor
test
mov
add
jmp
jnp
pop
movhps
dec
adc
addr16
jo
mov
je
mov
iret
lds
mov
movsx
mov
mov
sahf
and
push
hlt
fcomp
mov
mov
add
cmp
xor
ins
inc
outs
push
jne
daa
pop
push
adc
jbe
adc
scas
js
aad
cmc
test
ins
pop
jle
push
lds
aam
push
ret
int
out
sete
inc
inc
jmp
push
(bad)
add
in
jmp
adc
pop
lods
and
xor
and
adc
(bad)
dec
add
adc
mov
imul
mov
xor
outs
or
mov
mov
jmp
mov
sub
dec
mov
pop
sub
push
mov
add
inc
inc
add
mov
pop
adc
or
pop
adc
jmp
pop
ret
outs
inc
xor
out
or
ret
mov
pop
addr16
mov
jl
add
add
add
and
pop
pop
or
fdivr
ret
cmp
jl
or
jnp
mov
sub
pop
imul
pop
mov
sbb
xor
add
mov
dec
add
jb
pop
not
sub
cli
inc
sar
pusha
or
das
idiv
add
adc
mov
cmp
jmp
and
bound
(bad)
cwde
jae
fcomp
push
adc
push
mov
push
jbe
add
fwait
lahf
mov
lds
iret
mov
pusha
out
test
ret
sub
cld
out
inc
cmps
es
push
mov
sub
adc
(bad)
add
add
cmp
outs
not
sbb
std
mov
aas
xor
mov
mov
cmp
pop
cmp
push
adc
retf
sets
and
iret
std
mov
pop
ret
push
ret
nop
or
or
sti
jg
inc
adc
mov
cmp
je
sub
cmc
mov
add
or
inc
jo
adc
push
add
loop
(bad)
jmp
or
mov
popf
clc
push
call
lock
loopne
inc
(bad)
mov
cmp
inc
in
or
lods
jg
or
test
cmc
add
or
xor
in
shr
push
das
fpatan
mov
je
or
push
or
ficomp
inc
or
push
imul
cwde
xor
hlt
pop
call
clc
adc
js
cmp
dec
pop
push
mov
out
out
jo
pop
pop
gs
lock
test
and
aaa
sbb
loopne
ja
out
gs
pop
or
lds
xor
dec
lahf
mov
jl
push
sahf
cld
cmp
sbb
push
mov
outs
in
xor
(bad)
adc
ret
cld
mov
mov
or
psrad
xchg
add
call
or
inc
adc
mov
cmovb
adc
dec
cld
mov
pop
sub
jae
xchg
div
test
mov
in
icebp
push
push
sbb
mov
mov
pop
push
mov
push
push
inc
mov
fist
shl
icebp
xor
pop
add
(bad)
push
pop
xchg
dec
loop
add
sbb
jge
aaa
loop
ret
sub
xchg
fwait
movs
test
jp
into
mov
mov
push
xchg
call
jmp
add
jle
add
test
pop
sub
xchg
movs
cmp
je
xchg
jl
push
xchg
lods
mov
daa
(bad)
push
inc
pop
mov
ficom
sbb
fild
mov
test
mov
test
rol
xchg
cmc
add
std
adc
cld
dec
in
mov
fmul
lahf
out
test
je
test
xchg
dec
xor
inc
hlt
or
inc
cli
push
jmp
xchg
pop
ror
pop
scas
loop
sbb
xchg
jo
test
dec
add
mov
pushf
jmp
call
pop
ret
adc
lds
xor
rcl
pop
into
outs
pop
inc
jne
mov
imul
movs
popa
(bad)
mov
mov
arpl
sbb
cmp
xchg
adc
or
mov
sbb
mov
arpl
adc
ja
dec
jp
adc
adc
(bad)
(bad)
and
mov
dec
push
add
adc
repz
mov
add
push
xchg
and
inc
adc
je
aam
mov
shl
pop
sub
or
ja
dec
std
out
inc
and
push
mov
sbb
mov
lea
xchg
add
mov
add
mov
stos
jmp
add
mov
cmp
(bad)
jmp
and
inc
or
fmul
mov
push
add
ffreep
loopne
xor
and
or
popf
push
hlt
or
iret
jae
sar
loopne
inc
push
or
add
pop
enter
cli
jmp
(bad)
ja
sti
add
scas
add
outs
stos
mov
or
inc
and
pop
psadbw
in
cwde
push
mov
push
xor
inc
xor
lea
(bad)
call
std
aas
adc
pushf
mov
and
div
aam
and
or
adc
xor
push
aas
push
dec
ins
loop
or
fcom
adc
inc
inc
inc
je
jmp
mov
xor
xor
mov
call
std
pop
and
call
mov
popa
push
jecxz
fisttp
into
jbe
(bad)
pop
aaa
cwde
pop
test
xchg
pusha
mov
retf
push
xor
xchg
sbb
pop
and
cmc
add
hlt
div
inc
sbb
mov
xchg
mov
jmp
inc
add
add
test
push
pop
daa
cli
pop
jl
inc
adc
outs
add
adc
xchg
and
dec
sbb
mov
or
push
les
sub
inc
sbb
push
mov
outs
(bad)
and
sbb
mov
sbb
test
jnp
fild
rcr
inc
nop
or
add
rol
xchg
xor
pop
push
test
pop
xlat
jne
sbb
aaa
hlt
arpl
fimul
mov
cmc
and
xchg
mov
push
xor
ret
lock
xor
xchg
mov
add
idiv
fadd
inc
adc
add
cwde
fsubr
pop
jbe
and
jge
push
dec
or
mov
push
and
xor
cmp
pop
sbb
mov
lock
(bad)
dec
xor
mov
test
jne
mov
and
mov
pop
cmp
jne
mov
xchg
pusha
jmp
mov
not
cld
mov
enter
mov
lahf
sbb
and
dec
sbb
cmovae
xor
push
mov
inc
add
add
jne
push
and
addr16
nop
cmp
scas
aaa
sbb
sbb
adc
fld
fcomp
ret
sub
xchg
sub
nop
jnp
inc
mov
add
or
push
mov
out
test
cs
cmp
jbe
xor
push
xlat
jo
dec
icebp
and
out
and
jl
cdq
jge
pop
jp
sbb
mov
mov
xlat
push
mov
(bad)
push
data16
push
push
push
push
inc
sbb
inc
cld
maskmovq
div
adc
xchg
sar
call
push
push
jg
push
push
inc
(bad)
cmp
and
mov
inc
pop
mov
cmp
xchg
sbb
bswap
sbb
mov
push
shl
push
outs
jo
xor
pop
and
sti
loope
or
fisttp
push
les
xor
pushf
in
inc
xlat
and
in
cmp
jmp
and
or
add
cmps
ja
add
ret
nop
sub
fsubr
push
adc
sub
fsubr
je
pop
sti
pop
sub
ds
jne
cmp
jne
adc
loope
imul
in
sbb
test
add
cmp
je
jmp
inc
and
push
cmp
push
(bad)
cmp
daa
std
ret
mov
pop
pop
cmps
pop
cmp
sbb
mov
jg
add
mov
and
in
or
sbb
xchg
jb
test
sbb
inc
jne
inc
dec
jne
mov
xchg
inc
add
ficom
pop
fnstcw
pusha
je
out
sub
push
mov
jmp
and
mov
xor
dec
inc
fmul
push
mov
cmp
or
xchg
shl
xchg
xchg
les
sbb
clc
cdq
sub
mov
xchg
adc
mov
jo
pop
push
jb
xor
add
xchg
mov
xor
inc
pop
dec
daa
mov
dec
cmc
aas
mov
xor
mov
mov
mov
test
(bad)
(bad)
push
jge
xor
cmp
jg
mov
dec
cmp
je
mov
or
aam
adc
fnsave
retf
mov
xor
jg
aad
push
(bad)
jo
(bad)
jg
pop
or
jmp
and
jnp
je
xor
push
add
sbb
jmp
or
cwde
dec
sahf
add
jo
jle
fadd
jne
xor
ret
and
mov
dec
in
or
inc
icebp
cmps
cmp
imul
lods
cmp
jmp
aad
pop
cmp
(bad)
mov
cmps
sbb
add
inc
cmp
js
push
or
rol
cdq
sbb
xor
mov
outs
(bad)
clc
push
mov
jne
mov
cmp
jne
mov
add
stos
and
inc
xor
adc
mov
push
mov
mov
cmp
mov
fmul
adc
or
pop
out
push
add
ja
or
lods
or
icebp
cmps
sbb
(bad)
out
daa
push
(bad)
adc
jmp
in
inc
xor
sub
repz
fsub
xchg
nop
jae
add
xor
sbb
jg
add
popf
sbb
mov
add
mov
xor
inc
adc
lock
int3
mov
sub
clc
add
out
fwait
cdq
and
mov
loopne
or
dec
add
sub
inc
push
inc
push
cs
jnp
cmc
or
loop
add
or
fld
xchg
push
jmp
rol
and
add
push
mov
add
lea
movhps
ret
adc
fild
jae
push
bnd
cwde
imul
ja
ins
stos
xor
mov
je
mov
iret
sub
hlt
(bad)
retf
inc
call
mov
xchg
je
pop
push
rcr
dec
xchg
mov
sbb
jg
(bad)
jg
fsub
inc
inc
jne
mov
cmp
je
mov
jae
push
rol
inc
xor
iret
cmp
nop
imul
mov
not
les
mov
xor
inc
inc
mov
pop
pop
or
ins
adc
cmp
xchg
fdiv
inc
cld
pop
ret
mov
mov
add
mov
sbb
imul
dec
cld
xchg
xor
mov
cmp
jne
sub
xchg
aam
add
dec
jne
xor
pop
xor
mov
xchg
adc
adc
(bad)
inc
or
inc
or
add
aam
aad
jle
and
mov
stos
inc
or
inc
add
push
es
pusha
inc
add
xor
sbb
or
shl
mov
xchg
add
inc
or
jmp
jge
add
xchg
add
mov
cmp
pavgb
cmps
inc
mov
and
mov
scas
sub
add
adc
data16
add
add
or
adc
ss
push
scas
rol
test
jl
xchg
jae
in
pop
xlat
inc
sub
les
or
sbb
push
mov
mov
mov
mov
mov
jmp
pop
pop
stc
push
and
push
pop
or
sub
add
test
outs
xchg
pop
lods
adc
push
adc
cmp
inc
jo
hlt
je
mov
pop
inc
sbb
inc
in
out
pusha
or
arpl
in
sbb
out
jecxz
dec
pusha
imul
pop
inc
jl
sahf
cld
add
add
lahf
stos
call
js
add
push
inc
dec
cs
sbb
inc
pop
or
xor
lock
hlt
or
push
mov
push
fadd
mov
mov
clc
cmp
jmp
aas
(bad)
fistp
or
add
mov
jne
test
jle
stos
jae
jne
jle
inc
jmp
mov
push
mov
mov
dec
(bad)
xchg
jae
adc
adc
mov
push
mov
add
adc
mov
mov
inc
fcom
push
mov
je
adc
push
fadd
dec
adc
xchg
pop
mov
pop
adc
repz
adc
std
sub
sbb
test
ja
into
loop
add
xchg
(bad)
jmp
jg
cmp
(bad)
jg
pop
js
mov
and
push
loopne
or
stc
sub
ss
adc
in
xor
in
mov
and
and
lea
push
mov
ret
mov
xor
iret
out
fiadd
pop
or
fcomp
cmps
add
psubw
inc
adc
mov
xor
sub
mov
(bad)
add
inc
add
add
shl
xor
inc
fwait
mov
add
or
(bad)
jge
and
mov
add
sti
imul
inc
or
inc
mov
sbb
je
push
or
or
add
into
push
popf
xchg
in
loopne
add
cwde
inc
dec
jne
add
movs
das
inc
add
fnstsw
sub
arpl
xor
push
push
lea
call
add
pop
cmps
dec
icebp
pop
inc
and
xchg
(bad)
out
fwait
mov
cmp
jne
push
xor
cmovo
add
pop
mov
mov
push
lea
mov
mov
sbb
mov
xchg
lea
mov
lea
mov
mov
add
inc
add
mov
sub
mov
sldt
jl
mov
dec
push
add
or
push
or
(bad)
fld
ret
push
mov
mov
pop
ret
nop
push
push
sbb
dec
adc
lea
jecxz
ficom
mov
outs
and
fsub
mov
pop
ror
or
cmp
je
or
adc
push
sub
push
je
or
push
mov
push
mov
mov
daa
pop
sub
or
pusha
inc
push
sub
loopne
push
push
sbb
ror
jae
push
add
push
push
sbb
icebp
std
jnp
call
and
add
enter
ss
mov
loope
inc
mov
aaa
mov
sub
mov
into
inc
lock
pop
ins
mov
inc
inc
sbb
(bad)
push
xor
inc
(bad)
pop
fcomp
fidivr
in
mov
mov
push
sbb
nop
xchg
mov
add
sbb
push
adc
mov
test
scas
add
dec
xor
sbb
adc
arpl
cwde
adc
je
sub
popa
dec
fisub
add
popf
jo
and
mov
call
xor
mov
cmps
adc
xchg
mov
xchg
add
or
mov
mov
and
jae
enter
jne
enter
ja
jns
or
jnp
or
jge
jg
or
enter
arpl
enter
gs
addr16
xor
ins
or
ins
outs
outs
push
or
enter
push
xor
and
and
and
pop
or
pop
pop
pop
inc
or
enter
inc
xor
and
and
and
dec
or
dec
dec
dec
xor
enter
xor
xor
jle
inc
mov
(bad)
aaa
dec
sbb
ret
pop
pop
inc
hlt
ja
add
push
inc
outs
ins
outs
sbb
mov
shr
lea
retf
call
add
pop
add
push
inc
push
inc
pusha
das
ss
pop
pop
sbb
inc
add
sbb
add
add
outs
je
imul
jl
sbb
data16
jg
icebp
movs
test
jo
bound
jbe
les
data16
or
nop
jl
add
or
nop
cmp
mov
inc
push
rcr
adc
add
and
icebp
push
je
ins
dec
movs
sbb
add
(bad)
jmp
inc
outs
ins
or
dec
je
ins
imul
mov
outs
gs
imul
idiv
mov
clc
or
adc
push
add
rcl
inc
add
or
outs
push
jg
push
jl
add
or
pop
jo
push
outs
ins
imul
push
jo
inc
popa
jae
add
add
or
mov
sub
gs
jb
jo
dec
outs
jae
fs
jbe
sti
inc
jb
ins
adc
mov
popa
add
xor
je
mov
mov
inc
ins
popa
arpl
push
push
jo
dec
outs
jo
idiv
mov
ins
inc
outs
jo
or
je
or
jb
gs
adc
ins
add
pop
adc
popa
jae
mov
cwde
fwait
or
xor
mov
pop
or
outs
jb
ret
psraw
and
mov
shl
add
jg
push
inc
jb
jae
and
scas
xor
pop
bound
mov
or
jae
outs
jb
jp
popa
ins
or
push
mov
jg
xchg
arpl
or
inc
inc
imul
out
jae
xchg
jb
jae
pop
adc
pop
or
or
clc
popa
enter
retf
cmp
mov
add
retf
mov
adc
inc
xor
inc
add
dec
into
inc
add
push
out
enter
pop
pop
adc
aas
fldenv
or
add
dec
jo
sbb
dec
mov
imul
outs
and
mov
cmps
inc
rcl
sahf
xchg
mov
test
adc
fmul
cld
add
xor
or
add
lods
ja
or
rcr
rcr
mov
ret
and
fld
add
aaa
jge
test
rcl
push
and
fadd
enter
es
jne
pop
jecxz
pop
leave
ins
mov
inc
clc
and
mov
add
add
pop
data16
inc
add
xor
jne
push
dec
imul
sbb
add
mov
add
cwde
jmp
cwde
add
add
add
pop
pop
sbb
cmp
jl
popf
jae
idiv
add
imul
add
in
mov
add
(bad)
dec
mov
aas
cmp
push
or
adc
in
(bad)
or
pop
leave
ret
mov
pop
or
bound
mov
inc
jl
inc
add
mov
inc
fcomp
add
add
sbb
pop
sbb
add
pop
mov
nop
add
inc
idiv
outs
pop
add
add
push
call
add
test
add
popa
addr16
pop
fild
(bad)
and
inc
add
push
nop
pusha
aas
dec
push
pop
mov
or
add
jnp
les
add
mov
add
fild
add
and
test
ret
xor
mov
pop
xor
fwait
sbb
fadd
mov
idiv
out
inc
add
add
add
push
inc
popa
outs
jbe
jae
pop
or
adc
js
rcr
outs
or
sub
mov
xchg
add
xor
and
int3
or
(bad)
inc
mov
sar
mov
xlat
icebp
les
add
pop
xchg
adc
push
(bad)
jg
lsl
add
mov
int3
add
push
mov
mov
xchg
out
jle
mov
or
inc
and
fmul
or
sub
sbb
lock
sub
sbb
pushf
int3
jmp
xlat
jge
sub
inc
add
pop
fiadd
cmps
mov
dec
mov
sbb
ror
fisttp
pop
xchg
fstp
jne
sti
nop
or
or
out
mov
pop
cld
add
sbb
inc
add
adc
cmp
pop
pop
adc
jl
mov
xor
div
or
jle
hlt
cmp
add
add
pop
push
pop
ins
add
jl
inc
aaa
mov
pop
push
neg
adc
or
xor
mov
stos
mov
jo
mov
adc
test
in
mov
xlat
into
add
add
jl
pushf
inc
and
jmp
dec
ins
popa
addr16
push
adc
mov
sub
rdmsr
jo
or
add
add
push
inc
imul
xchg
sub
inc
not
push
or
sbb
cmps
mov
or
cmps
or
pop
fdivr
cmps
pusha
or
loopne
cmps
xchg
or
inc
add
add
inc
add
sbb
mov
mov
sbb
add
add
pop
daa
and
lods
adc
pop
inc
add
pop
nop
clc
inc
pop
rcr
sbb
retf
mov
inc
xor
ror
or
cmp
add
and
xlat
inc
xor
inc
jae
clc
fld
pusha
add
push
dec
arpl
inc
nop
jl
dec
test
mov
in
pavgb
sub
push
ret
inc
int3
push
cmp
cld
or
jne
(bad)
jmp
and
inc
pushf
pop
enter
(bad)
loope
fmul
jmp
and
add
ret
jo
scas
jl
fistp
jmp
call
xchg
pop
mov
mov
or
cdq
js
out
enter
jo
dec
test
je
cmp
inc
ret
cmp
nop
push
cmp
js
out
int3
inc
adc
pusha
add
popa
outs
out
jb
jmp
ret
rol
xor
inc
dec
jne
arpl
jle
push
inc
mov
xchg
ret
dec
call
sub
pusha
retf
and
xor
xor
pop
sbb
jo
add
push
push
or
xor
pop
mov
push
repz
push
push
fnstsw
loop
mov
mov
and
mov
mov
psubsb
mov
sub
call
push
mov
clc
jmp
mov
mov
or
jle
inc
xchg
and
jne
aaa
movzx
mov
clc
add
shl
shl
jnp
in
jne
sbb
sbb
cmp
push
cld
mov
mov
cmp
adc
jo
(bad)
test
fist
lea
sbb
push
mov
mov
mov
cmp
popf
sbb
push
lock
pop
mov
bound
mov
cmp
sub
fiadd
inc
mov
cld
xor
aaa
jae
loop
in
inc
aaa
mov
dec
add
mov
adc
mov
mov
cmp
mov
sahf
mov
jmp
inc
loope
mov
jne
fwait
mov
(bad)
frstor
jae
mov
jge
sbb
xor
inc
das
mov
sti
push
pop
cmp
int3
or
jbe
push
movs
rcl
enter
mov
outs
jmp
adc
inc
les
(bad)
je
cmp
push
xor
xlat
jl
jo
es
or
adc
pusha
mov
es
adc
inc
inc
stc
mov
sbb
mov
xor
dec
je
inc
mov
mov
mov
das
ins
out
ins
push
xor
push
or
push
imul
inc
mov
fbstp
sbb
pop
add
(bad)
repz
adc
or
push
cmc
out
neg
xor
mov
mov
xchg
mov
cmp
push
jne
mov
mov
dec
out
xor
jmp
ss
inc
clc
sbb
mov
push
jmp
rol
xchg
adc
push
into
js
hlt
add
or
in
addr16
mov
inc
cld
jg
mov
mov
or
sbb
call
sti
pop
or
inc
dec
jne
test
or
test
push
jnp
call
ins
adc
pop
jle
cmp
jb
outs
outs
and
jb
gs
lahf
mov
ins
imul
inc
mov
jbe
xor
iret
xchg
xor
jne
jo
and
in
mov
popa
ins
cmova
xor
outs
mul
jmp
add
sti
arpl
fs
rdpmc
dec
imul
packuswb
ins
ins
outs
ja
mov
mov
add
ins
inc
jne
push
adc
loope
iret
inc
inc
jno
adc
add
inc
sbb
add
sub
in
outs
gs
aaa
dec
push
imul
lds
sub
sahf
inc
test
or
and
and
sub
adc
daa
arpl
gs
outs
jb
push
out
mul
ja
pop
inc
popa
mov
and
mov
push
outs
jb
push
add
inc
aam
ins
xchg
inc
popa
arpl
jb
jne
std
fxch
leave
pop
jae
je
inc
popa
mov
pop
inc
adc
addr16
loope
aam
xor
shl
je
push
fs
cmp
js
and
adc
arpl
shl
sub
ins
test
retf
imul
add
push
dec
stos
add
dec
int3
push
int
and
and
xchg
int
ins
jns
xchg
stos
ror
adc
shl
fnstcw
mov
or
push
ret
(bad)
outs
pop
in
ins
or
adc
ins
mov
arpl
sub
mov
sbb
ja
mov
outs
inc
imul
adc
iret
js
sub
jne
jnp
fild
and
or
aaa
adc
dec
pop
xor
(bad)
xchg
dec
iret
js
lahf
pop
push
arpl
ins
ins
push
dec
and
inc
iret
sahf
or
inc
imul
pop
jnp
inc
push
mov
mov
(bad)
xor
not
int
ror
push
pop
lock
loop
xchg
add
test
jge
cmp
pop
mov
push
mov
sub
mov
adc
pop
ret
mov
sub
add
test
rdpmc
adc
jg
xchg
jnp
dec
push
dec
pop
inc
dec
inc
push
push
inc
std
rdtsc
pop
xchg
mov
inc
push
dec
push
mov
icebp
xchg
sbb
sti
push
pop
dec
inc
dec
dec
push
xchg
in
xchg
das
dec
inc
inc
adc
mov
dec
inc
push
dec
dec
push
sbb
loope
sti
pop
pop
dec
inc
dec
inc
inc
push
dec
xor
call
dec
dec
inc
inc
xor
ja
inc
xor
inc
add
sbb
not
dec
dec
dec
inc
push
inc
inc
dec
inc
xor
adc
inc
dec
adc
push
sti
fisttp
dec
dec
push
dec
sbb
arpl
inc
push
inc
push
push
retf
dec
push
inc
inc
dec
fidivr
stc
fs
inc
inc
dec
push
pop
push
push
push
bnd
dec
not
inc
dec
dec
pop
imul
dec
inc
push
push
inc
push
push
dec
push
inc
xor
push
dec
inc
dec
adc
adc
mov
sysret
clc
fild
xchg
mov
push
mov
mov
in
ja
test
mov
push
push
rcr
xor
xchg
inc
add
mov
add
dec
jae
jl
or
cmp
jne
add
dec
push
or
inc
or
push
and
mov
outs
pop
hlt
and
mov
pop
sub
out
(bad)
mov
enter
enter
inc
or
jmp
add
ror
(bad)
call
push
adc
mov
daa
icebp
sti
mov
cwde
mov
mov
mov
pop
jmp
cld
fld
push
push
ret
dec
mov
inc
mov
and
call
cmps
dec
mov
mov
mov
call
cmp
ja
test
lds
cmp
adc
inc
sbb
dec
test
mov
mov
push
mov
ror
cld
mov
xor
cmp
adc
imul
(bad)
ffree
xchg
dec
mov
cmp
je
mov
inc
lea
sub
jo
in
popa
mov
sbb
div
lods
push
sbb
sbb
mov
leave
push
cmp
(bad)
mov
jo
mov
pop
dec
add
push
cdq
sbb
mov
(bad)
sahf
pusha
ror
int3
ror
push
mov
out
xchg
and
xchg
sbb
aaa
add
push
cmp
je
mov
pop
inc
les
and
add
mov
inc
xor
sbb
inc
cmp
pop
or
add
jae
xor
or
jge
or
in
jle
inc
adc
inc
ror
les
fmul
test
je
mov
(bad)
cdq
sub
out
add
xchg
ror
add
fnstsw
jbe
or
mov
mov
lea
inc
ret
aam
mov
and
pop
sbb
mov
adc
in
cmp
jmp
lea
cmp
sbb
cmp
std
inc
fiadd
mov
fldln2
lds
and
inc
fild
sub
push
jl
inc
fild
inc
fild
lea
loopne
loope
pop
or
inc
or
adc
test
lods
xchg
and
out
mov
sbb
idiv
adc
add
xor
push
lds
jns
pop
inc
inc
mov
mov
or
iret
ret
les
lea
inc
jno
nop
sub
xor
and
das
lock
mov
push
xchg
mov
add
add
and
fwait
aaa
outs
test
je
xor
ret
cmp
pop
and
cvttps2pi
sub
add
or
inc
sbb
push
daa
inc
or
les
sub
fdivr
loopne
in
fisttp
sub
shl
xor
jl
inc
adc
mov
mov
pop
add
mov
fbld
sub
add
mov
adc
xor
nop
pop
mov
neg
(bad)
dec
ret
pop
and
or
pop
sbb
inc
popa
das
out
adc
cmp
sub
sub
push
pop
mov
jmp
inc
sbb
inc
or
push
pop
test
add
add
add
clc
push
(bad)
cld
mov
ret
pop
lods
xchg
hlt
sti
(bad)
(bad)
pop
clc
les
(bad)
imul
push
adc
push
sbb
in
js
retf
sub
jb
pusha
dec
xchg
jecxz
add
loopne
iret
jecxz
and
popf
ss
push
jecxz
and
pop
jecxz
add
cmp
fiadd
(bad)
adc
jne
jg
inc
add
add
xor
dec
js
adc
xchg
out
pop
fbstp
jns
mov
sbb
mov
inc
nop
jmp
mov
adc
hlt
cli
icebp
outs
jo
aas
mov
lea
loope
and
push
gs
fadd
nop
push
cmp
and
lock
icebp
ret
mov
adc
(bad)
fdiv
xchg
das
xchg
add
pop
repnz
test
jl
xor
add
in
sti
or
retf
xor
mov
dec
add
rcl
adc
mov
inc
cmps
add
adc
xchg
pop
ret
mov
mov
xor
cld
stos
ret
inc
adc
inc
pushf
nop
push
push
inc
out
rcl
or
sbb
ret
or
mov
sub
push
aaa
pusha
add
xor
das
clc
shl
popa
js
es
outs
mov
ins
les
add
in
adc
in
test
enter
outs
fdivr
add
mov
sbb
jmp
cs
or
out
sbb
test
push
push
mov
adc
sbb
dec
pushf
push
mov
xchg
mov
add
pop
and
mov
sbb
inc
cld
cmps
mov
sub
jb
je
jmp
mov
jmp
fcomp
sbb
cmp
jmp
or
mov
call
cwde
inc
adc
xor
lea
dec
lahf
mov
cmp
xor
adc
loop
loopne
mov
sbb
add
mov
sub
popa
sbb
cmp
clc
xor
mov
inc
cmp
lahf
rol
rol
out
(bad)
dec
mov
mov
and
mov
mov
(bad)
adc
in
mov
add
mov
mov
and
sbb
xlat
into
xor
test
fdiv
mov
sub
aaa
ss
test
mov
mov
mov
inc
aam
inc
daa
cwde
mov
daa
cwde
lea
or
push
push
push
mov
hlt
(bad)
and
mov
mov
adc
inc
rol
mov
aas
push
jg
ror
or
push
add
or
pop
inc
cmp
add
mov
sub
mov
or
add
jl
adc
pop
sbb
ror
pop
mov
add
add
shr
scas
push
push
push
pop
push
xchg
test
into
sbb
shl
pop
aad
mov
dec
retf
pop
mov
imul
push
inc
js
aam
pop
dec
icebp
addr16
(bad)
and
inc
cld
push
ror
mov
add
jmp
clc
ret
xchg
adc
rcr
rol
fwait
mov
outs
scas
mov
adc
sub
test
sub
mov
push
cmc
xchg
push
push
mov
adc
jne
add
loope
push
mov
mov
js
cmp
and
pop
shl
pop
pop
cld
es
pop
push
mov
push
lock
jle
push
mov
inc
push
or
or
add
xchg
mov
pop
push
pop
loopne
hlt
mov
popf
mov
inc
xchg
ins
cwde
jne
es
or
iret
mov
or
xchg
mov
or
push
out
add
push
dec
add
test
inc
cmp
pop
mov
pop
push
mov
add
stos
mov
jae
mov
shl
sbb
add
pop
jo
rol
fbld
add
jnp
add
xchg
pop
dec
outs
adc
sbb
jp
daa
cld
and
or
out
mov
push
ret
lods
mov
fcom
and
or
imul
retf
inc
or
or
into
jle
ret
or
push
or
adc
and
int
or
inc
loopne
rol
mov
pop
pusha
jmp
sbb
stos
loope
or
add
pop
aam
mov
cs
fldenv
cmp
pop
dec
dec
sahf
stc
movs
mov
pop
ss
xor
ds
jmp
push
mov
push
adc
sbb
ret
ja
jg
adc
mov
dec
mov
and
mov
push
cmp
or
shl
pushf
lods
mov
push
retf
mov
adc
jp
cmp
and
push
repz
cmp
add
lock
cmps
cmps
mov
cmp
shl
mov
(bad)
pop
and
shl
sar
or
mov
(bad)
imul
pop
cmp
jg
sbb
push
mov
not
and
mov
(bad)
loop
add
ret
je
jp
test
(bad)
mov
cmp
jne
mov
add
das
or
mov
and
ret
add
pop
test
or
xchg
mov
ret
or
pop
or
mov
call
mov
mov
cmp
cwde
test
das
pop
and
(bad)
pop
sti
xor
pop
push
mov
(bad)
sub
es
je
sbb
loope
shr
retf
js
xchg
ins
adc
xchg
and
pop
retf
je
and
push
data16
loopne
mov
sub
js
ror
aaa
test
and
jmp
stos
and
inc
or
je
call
pop
popa
or
retf
push
fwait
xor
cmp
pop
add
pop
mov
xchg
aas
int3
mov
add
call
dec
add
mov
ret
nop
mov
add
in
out
stos
inc
sub
lea
mov
mov
push
xor
sbb
xchg
xor
or
xor
adc
aas
retf
sub
call
xchg
mov
call
test
outs
push
(bad)
out
mov
adc
add
xchg
mov
push
adc
sub
jl
movs
sub
xchg
ror
fsub
mov
push
add
or
pushf
test
xor
xlat
dec
aad
ret
jae
lea
movs
movs
mov
sbb
lock
or
and
es
cmp
das
inc
int3
push
push
call
push
push
(bad)
add
adc
push
mov
pop
fdiv
xor
fsub
pop
call
jp
or
in
push
inc
test
add
sub
ret
add
pusha
aam
jnp
(bad)
fimul
xor
pop
sbb
inc
lock
in
sub
inc
and
paddsw
add
xchg
mov
mov
inc
and
aas
push
mov
lods
mov
mov
std
jo
(bad)
sbb
or
ror
mov
and
cmp
pop
xor
pop
xor
jnp
jp
sbb
mov
or
or
sub
je
add
enter
and
(bad)
call
loopne
xor
ret
dec
imul
add
not
and
cmp
add
pop
sar
aaa
pop
jg
mov
mov
mov
mov
inc
push
mov
cmp
jne
fidiv
pop
sub
xchg
cmp
jne
rol
xchg
in
xor
inc
jnp
adc
icebp
xchg
sbb
pop
ror
imul
or
mov
sub
and
stos
ds
push
sbb
or
jmp
and
push
cmp
cmps
fistp
inc
fdivr
int3
jo
sti
lea
cmp
push
jp
sbb
mov
jae
xchg
mov
pop
sbb
test
fadd
je
push
adc
retf
xchg
cmp
js
push
or
xor
xor
sub
nop
sub
sub
inc
add
pop
and
repnz
pop
mov
push
es
mov
pop
and
add
jg
mov
jo
inc
add
jae
mov
aam
mov
mov
jae
pop
mov
mov
rcr
sub
or
sbb
xchg
mov
mov
cmps
fabs
(bad)
xor
int3
or
test
xor
fisub
inc
rol
outs
mov
mov
(bad)
(bad)
mov
add
lea
lea
mov
mov
mov
mov
mov
or
add
shl
mov
add
arpl
mov
(bad)
loopne
cmp
mov
dec
test
jle
sbb
jmp
jmp
adc
lea
mov
mov
mov
mov
mov
inc
mov
mov
inc
dec
jne
test
std
scas
sti
scas
mov
adc
or
xchg
add
xor
shr
cmp
(bad)
repnz
push
jmp
xlat
aam
lea
and
cld
dec
clc
dec
js
adc
ja
(bad)
(bad)
js
add
add
bswap
shr
mov
dec
jns
jmp
push
xor
adc
out
jmp
shr
shl
mov
mov
jmp
jo
cmp
call
mov
cli
adc
add
lds
pop
inc
sbb
stc
cmc
and
mov
push
jae
xchg
pop
and
mov
dec
inc
dec
mov
push
inc
pop
inc
stos
push
test
mov
rcr
lock
rol
dec
lea
call
inc
cld
mov
movzx
loopne
fadd
jmp
inc
sbb
in
xchg
in
xor
push
xor
outs
xchg
xchg
jl
sub
shl
mov
and
outs
(bad)
clc
or
test
bound
std
push
pop
mov
cmp
sub
mov
sbb
add
pop
add
inc
add
fwait
add
nop
movzx
lea
pop
or
push
rcl
lds
cmp
mov
inc
xchg
scas
fld
(bad)
jg
xchg
in
clc
xor
mov
test
je
xor
ins
jp
aam
fdivr
clc
lea
push
aas
jbe
push
push
pop
jo
fsubr
fstp
adc
dec
and
mov
mov
sbb
mov
add
adc
sbb
cmc
jne
mov
(bad)
xor
movzx
call
ror
outs
inc
mov
mov
aaa
pop
add
xor
je
in
push
push
jb
sub
aam
aas
sub
lea
cmp
jge
mov
push
pop
mov
xor
lds
nop
int3
inc
ret
mov
and
push
cmps
and
and
push
jmp
mov
push
or
outs
shl
inc
add
add
push
shr
les
inc
push
(bad)
(bad)
dec
adc
into
add
gs
ja
mov
jo
into
and
mov
cld
mov
add
scas
es
aam
xchg
in
pop
sub
sti
sar
std
push
push
pop
mov
shl
mov
jge
xchg
in
inc
jl
push
or
leave
jmp
es
jb
call
and
or
adc
mov
mov
mov
sbb
into
movzx
jl
aam
inc
and
clc
pop
mov
or
mov
add
bound
cwde
jnp
or
fadd
mov
add
mov
mov
push
and
mov
xor
rcr
push
sbb
jge
call
cmp
loop
and
(bad)
out
inc
cld
xor
mov
mov
lock
add
enter
pop
add
mov
sub
inc
sar
mov
movzx
push
(bad)
fadd
out
sbb
aas
mul
adc
clc
jg
test
shl
cmp
jl
mov
adc
fist
icebp
cmp
jg
repnz
jle
mov
pop
push
(bad)
push
sub
cmps
ins
mov
or
test
fs
adc
lock
loop
add
lock
cld
xor
ja
dec
jne
push
sub
enter
push
or
push
or
jmp
or
mov
cli
push
add
push
add
sbb
jge
push
jnp
sub
add
adc
add
outs
push
push
adc
inc
or
imul
mov
cmp
jbe
mov
jg
or
mov
xchg
or
mov
xchg
dec
aaa
mov
xchg
inc
fmul
mov
out
add
jl
mov
dec
ret
add
ror
ret
pop
(bad)
std
(bad)
fdivr
pop
in
sub
pop
loopne
es
mov
sbb
(bad)
mov
lock
xor
mov
shl
fmul
jmp
in
dec
jne
push
push
ret
ror
sbb
icebp
popa
sub
inc
retf
xchg
ror
sbb
icebp
add
out
mov
stc
in
add
sub
jge
icebp
add
inc
clc
adc
cmp
dec
or
xor
push
or
dec
enter
jmp
lea
ror
mov
jmp
jmp
push
mov
pop
cwde
movzx
push
inc
mov
ins
mov
pop
mov
mov
les
sub
dec
sahf
rcr
jne
add
push
scas
cmps
into
dec
push
pop
dec
push
les
sub
dec
cmp
pop
cmp
mov
push
mov
and
aad
add
cwde
push
add
pop
rcl
mov
cmp
cs
fadd
add
or
adc
sub
push
adc
jmp
mov
lods
add
lock
or
add
imul
sbb
sub
mov
cmp
jl
cmp
jb
push
mov
lea
or
jmp
jmp
mov
xor
mov
out
and
mov
cli
(bad)
fild
or
sub
je
dec
sub
jb
sub
data16
jmp
mov
jmp
pop
add
mov
mov
div
jmp
or
(bad)
(bad)
push
imul
mov
sbb
add
and
add
mov
and
mov
push
mov
hlt
aas
ror
enter
clc
imul
mov
add
adc
fcom
in
hlt
ja
sbb
add
and
inc
out
adc
test
je
add
jmp
xchg
(bad)
std
push
sahf
movs
adc
loopne
bound
ret
push
xchg
push
mov
sbb
aad
cmps
nop
fild
jecxz
imul
(bad)
and
fild
lea
daa
add
mov
pop
lock
hlt
cmc
shl
int3
sbb
jle
pop
imul
in
or
enter
push
mov
inc
or
mov
aas
shl
js
ror
inc
jbe
outs
mov
sbb
je
push
add
call
xchg
pop
adc
xor
push
cmps
mov
push
shl
lds
jo
dec
test
or
retf
(bad)
mov
in
loop
and
lock
add
lea
repz
es
and
add
lds
push
mov
in
mov
ss
aas
push
cli
fbstp
cld
fcmovne
sbb
lea
lea
sahf
out
sub
(bad)
call
xchg
in
fadd
sub
scas
or
and
cwde
popa
xor
in
or
xchg
or
fist
mov
xor
mov
icebp
jge
imul
push
mov
adc
jae
jo
test
push
add
mov
ror
out
dec
inc
fadd
add
push
(bad)
mov
mov
sbb
mov
mov
mov
mov
mov
cld
xor
sbb
push
scas
push
push
mov
inc
mov
fisttp
mov
call
not
add
out
jb
mov
mov
adc
adc
out
jle
popa
push
in
dec
lock
call
(bad)
stos
enter
pop
loopne
js
and
pop
cmp
pop
or
add
pop
call
jne
cmp
aam
inc
cmp
mov
xor
cmp
xchg
inc
add
daa
push
aaa
mov
mov
cmp
adc
or
retf
cmp
stos
cld
mov
je
pop
cld
mov
fisubr
dec
jno
inc
rcl
je
ret
mov
es
sbb
add
mov
pop
pop
ret
ss
dec
jl
nop
iret
pop
pop
adc
and
xor
or
inc
adc
xor
pop
rcr
loope
or
jecxz
adc
mov
popa
lds
and
add
stos
out
pop
cld
shl
es
stc
es
clc
adc
add
inc
inc
(bad)
adc
push
out
or
or
and
or
sbb
call
ror
in
mov
mov
add
clc
xor
rol
ficomp
call
es
or
es
cmps
(bad)
xlat
jge
adc
adc
hlt
or
push
and
jne
je
rol
out
adc
hlt
xchg
jae
adc
clc
xchg
aad
inc
ror
pushf
ret
pusha
les
adc
sbb
out
or
nop
mov
and
or
adc
dec
inc
xor
ret
xlat
sbb
pusha
mov
xchg
sbb
je
mov
mov
cli
adc
mov
(bad)
or
or
sbb
cs
sub
mov
fst
cld
mul
push
push
or
stc
jae
mov
add
dec
bound
mov
std
jg
pop
cmp
je
mov
mov
ins
adc
ja
cmp
ret
aam
push
add
pop
aaa
popa
inc
jnp
pop
fs
push
inc
mov
mov
jmp
mov
push
cld
inc
add
(bad)
cmp
pop
adc
sub
inc
add
and
call
fsub
xor
ds
inc
and
add
xchg
dec
cmp
jl
mov
cmps
(bad)
jo
xor
ret
sbb
iret
mov
xor
shl
jmp
mov
shr
arpl
dec
fwait
test
cmps
push
fs
and
sub
out
dec
sbb
leave
push
xchg
dec
inc
inc
mov
and
cmp
faddp
leave
push
push
fimul
xchg
or
arpl
fist
mov
test
je
mov
pop
push
and
dec
fsub
sti
stos
loop
mov
fidivr
test
push
jge
add
cmp
adc
cld
add
mov
ja
add
pop
and
jle
jmp
loopne
je
adc
jne
xor
loop
cmp
ret
adc
or
sbb
fcmovb
jl
mov
or
call
sbb
rol
outs
adc
push
sbb
add
push
ins
inc
xor
adc
je
xor
dec
dec
gs
out
jo
inc
iret
lods
push
addr16
rcr
dec
sbb
mov
jae
mov
std
inc
cs
adc
inc
xchg
jmp
push
sbb
sub
add
jge
sbb
and
add
ins
adc
jmp
or
mov
inc
pop
out
aam
mov
mov
popf
fld
es
pop
push
sub
xchg
sti
(bad)
mov
xor
lock
add
xor
pushf
fwait
cmp
ja
inc
repnz
inc
mov
(bad)
dec
add
push
jbe
(bad)
jne
mov
or
add
daa
cwde
pop
jecxz
les
fwait
das
add
sub
jae
fsubrp
sub
sub
jle
jmp
adc
mov
(bad)
pop
or
xchg
and
mov
into
iret
xor
cmp
je
mov
pop
cmp
bound
je
icebp
dec
mov
inc
or
mov
sbb
inc
inc
adc
dec
inc
lock
(bad)
call
mov
lock
sahf
mov
cmp
ja
pop
adc
paddusb
add
je
jp
mov
sbb
mov
and
or
xchg
mov
test
push
icebp
dec
and
xchg
pop
mov
and
jmp
jne
lods
inc
or
fbld
jne
loopne
dec
xlat
pop
ret
push
hlt
push
inc
sub
je
cmp
jne
pop
es
jne
mov
(bad)
clc
add
mov
pop
ret
jmp
sbb
jne
inc
loopne
stc
add
add
enter
les
and
jo
pop
push
cli
adc
cs
or
js
gs
jnp
or
and
xor
je
dec
scas
and
cwde
mov
cmc
add
xchg
mov
cmps
jbe
test
push
push
push
or
xchg
cld
cli
mov
rol
pop
fimul
in
adc
test
in
bound
imul
sbb
jae
jb
mov
or
or
jmp
add
push
or
sti
adc
xchg
test
rcr
push
lock
outs
cmp
fldpi
push
sub
and
test
cmc
mov
add
mov
jge
add
lock
inc
mov
push
out
add
add
lds
paddd
or
and
shl
fimul
inc
pop
test
mov
or
shl
fmul
pop
push
fwait
(bad)
xlat
or
add
push
push
cmp
jne
int3
or
ja
adc
pop
add
add
jp
in
mov
retf
fwait
cli
and
out
repz
fmul
mov
rol
add
(bad)
loope
test
in
cmp
jbe
pop
je
add
push
dec
and
pop
jo
cmp
and
mov
fadd
out
pushf
mov
ja
stos
dec
mov
mov
xor
sar
sar
je
inc
mov
and
aas
loop
or
ja
ins
lods
out
les
push
add
fadd
push
pushf
xchg
or
jbe
ret
mov
or
mov
xor
push
aas
test
mov
jge
dec
or
jne
or
jo
sbb
movs
jp
or
mov
add
xchg
imul
pushf
jae
jae
test
pop
or
out
xor
mov
inc
mov
pop
in
mov
add
(bad)
sbb
mov
loopne
jnp
loopne
mov
pop
inc
mov
mov
jle
jmp
push
adc
retf
or
test
jbe
lahf
out
mov
mov
xor
sbb
and
add
dec
sti
jp
les
iret
pop
pop
pop
push
sar
mov
xor
out
add
or
push
inc
mov
and
inc
sar
inc
rcl
aas
cwde
mov
retf
jmp
push
inc
jb
xchg
lds
in
xchg
pop
call
fimul
setg
pop
pop
mov
cmp
cmp
(bad)
loopne
pop
jbe
lock
sbb
jnp
ror
adc
mov
sbb
or
je
test
cmp
rcl
in
fld
and
push
add
outs
mov
pop
sar
push
push
fsub
sbb
inc
mov
aaa
mov
or
(bad)
sbb
int3
(bad)
mov
jb
pop
mov
mov
push
jecxz
or
cmp
xor
jmp
jmp
aam
js
idiv
pop
and
mov
inc
popa
xchg
call
aad
pop
jbe
push
push
add
dec
js
outs
mov
iret
push
bnd
pop
mov
pop
outs
push
mov
xor
cmp
pop
add
mov
test
xor
gs
push
inc
add
cmps
mov
jge
aaa
push
into
cmp
adc
loopne
add
pop
add
push
add
and
cmps
mov
xlat
jne
push
pop
out
add
movs
hlt
ret
inc
mov
adc
jbe
adc
sbb
pop
xchg
xchg
imul
or
adc
jo
adc
inc
test
xlat
idiv
pop
inc
hlt
push
sti
ja
icebp
inc
in
call
jne
push
mov
and
pop
call
mov
xchg
inc
mov
std
lahf
in
add
(bad)
xchg
cmp
je
mov
mov
fsubr
cli
sbb
out
adc
ret
add
ja
or
sbb
sub
push
push
les
inc
adc
arpl
pop
lock
pop
pop
mov
shl
xor
mov
rol
loope
or
mov
out
add
test
gs
xchg
int3
add
loopne
adc
cmp
fst
dec
xchg
fisub
pop
mov
lahf
sbb
push
rol
js
retf
clc
popa
pusha
and
fiadd
bound
ret
fwait
add
mov
xor
out
mov
and
pop
daa
push
out
add
cdq
mov
inc
xor
outs
add
mov
push
or
clc
xchg
(bad)
call
add
inc
aad
inc
and
int
arpl
cmps
call
mov
in
xchg
out
je
(bad)
and
or
sub
xor
and
add
daa
std
sti
dec
jge
call
mov
or
out
mov
inc
xor
inc
xor
inc
cmp
fild
leave
mov
cmps
scas
mov
xor
or
pusha
fs
dec
je
movs
mov
outs
ins
shl
pusha
mov
call
dec
xchg
rcl
xchg
adc
jmp
(bad)
add
out
scas
jmp
or
fdiv
inc
icebp
rep
pop
mov
(bad)
call
cmps
neg
cld
add
push
push
xor
ja
je
sbb
mov
jl
les
clc
std
sti
sbb
out
adc
push
sub
sub
aad
ffreep
call
adc
imul
add
popa
pop
push
mov
add
inc
test
inc
sub
push
add
add
push
aaa
add
or
js
stos
adc
mov
push
leave
mov
cmps
daa
push
lahf
and
enter
xor
mov
lea
sbb
jg
or
add
pop
lea
out
jl
(bad)
pop
push
sub
push
stos
(bad)
aam
push
dec
and
ud0
xor
fmul
sub
inc
test
mov
rol
out
movzx
add
popa
and
jg
add
je
pop
pop
push
pushf
rol
add
pop
mov
push
pop
(bad)
mov
retf
push
mov
pop
imul
cmp
jg
movzx
sub
call
movzx
imul
cmp
xchg
shl
shl
out
fnsave
push
mov
mov
push
sbb
std
and
push
push
xchg
adc
mov
loop
dec
pop
push
lock
fcomp
xchg
lea
fsubr
imul
icebp
fadd
aaa
std
shl
shr
mov
je
clc
cmp
or
cli
push
loop
and
jg
push
ins
push
in
inc
or
pop
push
mov
sub
add
fadd
lahf
std
lods
leave
sub
push
mov
es
mov
dec
add
pop
mov
adc
cmp
adc
aaa
imul
pop
add
push
and
test
dec
pop
mov
pop
popa
imul
mov
xchg
xchg
sahf
push
ror
cmp
xchg
xlat
and
and
nop
xchg
add
cmp
adc
mov
hlt
(bad)
or
add
jle
jmp
jno
dec
push
sbb
enter
mov
jmp
adc
mov
pop
xor
inc
inc
xor
inc
adc
inc
mov
nop
mov
fld
aam
ins
add
adc
fadd
xchg
ror
sub
mov
clc
cmp
loop
hlt
lock
mov
scas
call
mov
sub
xor
sbb
sub
sbb
mov
lahf
jmp
mov
loope
dec
imul
fdivr
or
push
adc
pop
lea
pop
inc
(bad)
call
mov
jmp
xor
jmp
xor
ret
mov
dec
mov
in
repnz
sub
sar
dec
je
pop
paddsw
aad
dec
add
push
adc
jne
push
adc
arpl
das
ins
jg
ja
cmc
cmp
jne
ja
(bad)
js
div
add
pop
xchg
and
xor
(bad)
(bad)
(bad)
rcr
sar
mov
pop
popa
add
mov
sub
lock
sbb
add
inc
xor
jne
push
mov
or
in
jbe
outs
pop
mov
mov
lods
mov
lds
mov
mov
mov
data16
add
dec
scas
dec
adc
dec
push
sub
jae
mov
loope
or
add
out
adc
add
sub
push
sub
add
cld
sbb
jmp
xor
inc
sbb
add
out
pop
outs
sub
xchg
imul
inc
jmp
push
adc
adc
push
sti
repz
ror
adc
jecxz
sbb
loop
inc
ins
sbb
(bad)
out
cli
cs
adc
scas
repz
xor
push
pop
push
mov
jno
int3
jge
cmp
sbb
add
jne
das
in
mov
inc
stc
pop
mov
inc
dec
inc
jae
add
sbb
push
adc
sbb
cmc
fmul
xor
mov
adc
dec
in
push
mov
mov
cmp
jne
jb
jge
or
mov
nop
stos
je
pop
mov
cmp
jmp
and
inc
fld
jb
enter
pop
mov
pop
lahf
mov
cmp
jne
push
bound
push
lock
or
scas
fmul
mov
mov
imul
cmp
adc
jmp
mov
mov
test
je
and
loop
push
ins
adc
loope
jne
mov
dec
inc
and
lods
sbb
(bad)
add
test
jne
mov
rcl
push
adc
xchg
dec
push
loop
inc
lods
gs
inc
hlt
cmp
push
inc
les
jle
sub
push
sub
icebp
mov
add
mov
jle
pop
cmp
adc
ret
push
mov
push
addr16
xor
(bad)
adc
dec
and
sub
mov
jno
or
inc
and
mov
inc
fisub
aam
pop
sbb
(bad)
(bad)
push
adc
mov
pop
or
jo
mov
clc
mov
mov
jp
outs
pop
mov
mov
or
xor
jo
js
mov
inc
loop
loop
push
clc
cmp
mov
fsubr
dec
adc
lds
shl
sbb
inc
xor
rcl
mov
or
xor
inc
mov
inc
xor
xchg
sub
jb
inc
xor
pop
adc
inc
push
push
push
add
pop
mov
pop
aad
popa
or
adc
xor
pop
icebp
add
mov
cmp
iret
mov
add
fmul
lea
inc
cmp
(bad)
sbb
push
or
jge
or
xchg
inc
fild
push
inc
loopne
ror
xchg
xchg
or
sbb
or
std
pop
lea
add
mov
and
cmp
sub
mov
movzx
mov
push
mov
mov
mov
mov
pop
push
sub
jmp
mov
sub
push
test
sub
mov
mov
cmp
and
cli
adc
daa
push
ror
enter
(bad)
fsubp
call
and
(bad)
iret
or
(bad)
adc
mov
add
mov
inc
sub
mov
mov
mov
or
xor
push
push
sti
fild
push
ror
add
bndstx
mov
movs
mov
mov
mov
call
cmp
cli
mov
les
mov
cmp
aaa
add
cli
adc
jne
sbb
pop
mov
or
pop
push
add
sbb
jne
inc
push
idiv
push
(bad)
dec
mov
mov
movzx
xor
mov
imul
cmp
mov
inc
and
ror
sub
bound
and
js
mov
push
adc
fst
dec
fwait
mov
clc
sub
mov
pop
add
cmp
push
pop
and
lock
test
xor
enter
pop
into
scas
sbb
js
je
xor
rcr
js
mov
xlat
mov
jne
test
jbe
cmps
push
out
ins
inc
or
rcr
dec
xchg
push
cmp
xchg
in
mov
pop
push
in
loop
rcl
push
test
mov
mov
or
adc
in
cmp
sbb
mov
sahf
sbb
inc
cmp
je
xor
inc
or
mov
and
xchg
cmp
cmp
jo
cld
mov
popf
cmp
adc
or
xchg
je
cdq
mov
jno
jb
aas
push
in
shl
and
push
pop
or
add
inc
push
xor
mov
repz
or
or
fnstsw
cmp
jne
push
mov
or
jge
lea
sbb
or
push
pop
mov
xchg
(bad)
xor
sbb
inc
cwde
add
repnz
inc
mov
ror
nop
and
sbb
fs
dec
or
mov
adc
mov
daa
inc
mov
mov
add
add
in
outs
bound
mov
out
add
aaa
xor
and
or
lea
fimul
inc
pusha
out
adc
popa
jmp
cli
ja
les
mov
cmp
inc
dec
scas
add
rol
mov
sub
add
hlt
add
jb
xlat
stos
clc
pop
ja
les
sub
jle
cmovb
call
nop
sar
push
push
pusha
pop
loope
push
hlt
mov
adc
loop
mov
inc
adc
sbb
inc
adc
xor
jb
jmp
popf
or
outs
and
imul
push
adc
push
pop
add
(bad)
cdq
jbe
adc
add
bound
push
mov
adc
bound
push
jo
fcom
scas
add
(bad)
sbb
fmul
test
inc
jle
inc
std
fwait
mov
adc
jne
lock
inc
xor
rol
xor
pop
jnp
or
test
mov
inc
add
fnstsw
jg
jg
add
ins
add
call
push
les
jb
dec
push
adc
outs
jns
mov
jg
adc
push
jo
inc
int
idiv
sbb
nop
pop
mov
inc
sbb
dec
adc
aas
fwait
stc
js
ja
fadd
test
je
adc
arpl
fstp
sbb
pop
pop
lods
inc
and
mov
sete
mov
inc
out
cmc
je
call
mov
nop
scas
out
adc
test
or
adc
add
jo
sbb
lods
cmc
ss
(bad)
rol
(bad)
jmp
add
mov
out
mov
dec
adc
retf
xchg
push
aas
adc
inc
rol
cmps
out
call
lea
ret
push
inc
cmp
add
add
dec
shr
add
repz
aam
ret
mov
push
frstor
adc
jg
test
mov
adc
fist
inc
cmp
je
push
and
scas
cpuid
sub
mov
int
jnp
or
test
movs
mov
mov
inc
and
enter
sbb
inc
sub
mov
add
sbb
mov
lea
mov
cwde
out
or
xchg
cdq
loopne
jae
or
cmps
sbb
and
add
cmps
mov
add
cmp
scas
out
add
mov
xchg
jmp
sar
ja
inc
and
rol
mov
test
jp
mov
call
mov
inc
scas
mov
push
jo
add
jo
fwait
cmp
xchg
mov
adc
cmps
mov
sub
popf
or
pop
stos
or
call
sub
add
mov
push
nop
pop
sbb
and
lea
icebp
jmp
jge
add
inc
and
mov
cs
mov
mov
mov
jne
lea
add
push
add
mov
inc
xor
push
add
loop
dec
push
rol
jbe
mov
mov
mov
sti
dec
inc
aam
mov
inc
sub
pop
jo
jae
cli
pop
cmp
xor
or
inc
and
jae
push
stos
push
mov
cmp
add
sub
ss
je
push
sub
sub
(bad)
jle
sub
ins
dec
cmp
jbe
mov
add
loopne
int3
add
sbb
adc
pop
lods
test
ror
sbb
add
in
lea
add
les
daa
nop
je
je
sbb
add
inc
push
xchg
je
sbb
mov
(bad)
lea
pop
push
jno
push
dec
push
add
and
inc
inc
fld
push
and
aas
es
sahf
ss
inc
push
jo
rcl
(bad)
nop
(bad)
jle
out
jmp
adc
push
xor
sub
adc
adc
je
lea
cmp
cli
fwait
push
in
jo
leave
mov
fcomp
add
cmp
inc
or
sub
jo
les
mov
xor
enter
aam
add
mov
sbb
jmp
sub
leave
sbb
mov
ror
inc
hlt
dec
loopne
jp
adc
dec
inc
jp
push
adc
push
or
ins
push
or
sbb
(bad)
cld
mov
add
cmps
sbb
mov
mov
fiadd
pusha
fs
rcr
aas
idiv
sbb
cmps
pop
fistp
sub
or
cmc
pop
pusha
add
mov
mov
and
aam
into
add
push
add
add
and
ins
fwait
push
mov
lock
inc
mov
mov
outs
imul
sbb
in
cmp
jge
ror
in
inc
jns
push
leave
loopne
mov
adc
test
or
push
ror
adc
cmp
out
mov
cmp
inc
add
rol
sar
mov
pop
fadd
adc
push
add
mov
inc
add
mov
inc
sahf
cmp
mov
and
dec
cmps
or
adc
jne
jo
inc
pop
or
pop
mov
data16
jge
aas
sub
add
jne
pusha
idiv
nop
loope
inc
sbb
push
fild
jae
cli
push
jl
sub
jb
je
jmp
mov
retf
or
and
xor
inc
sub
lea
push
movzx
xor
in
(bad)
adc
cmp
les
push
sbb
ret
push
das
lock
cmp
jne
inc
cdq
mov
repnz
or
nop
cmc
and
pop
sub
add
inc
test
or
test
push
test
or
outs
pop
push
mov
adc
add
das
inc
mov
inc
bound
nop
or
sbb
mov
ret
add
adc
and
mov
mov
mov
sbb
dec
stos
and
sbb
dec
and
sub
pop
mov
out
xor
mov
or
and
or
push
push
scas
sar
loope
clc
add
aas
cmp
xor
les
jae
les
and
ret
mov
jnp
pusha
dec
xor
mov
and
in
outs
xchg
icebp
jo
fwait
mov
imul
or
pop
cmp
ss
push
inc
jo
pop
iret
mov
xchg
adc
out
dec
sub
push
xor
mov
mov
add
xchg
jno
add
sbb
clc
icebp
mov
dec
adc
or
fidiv
nop
test
add
pop
or
sub
daa
mov
xchg
xor
xchg
sbb
clc
jns
push
jge
mov
call
pop
sub
and
jge
sbb
in
sub
mov
cmp
lock
je
jmp
daa
andps
pop
adc
pop
and
cmp
out
mov
xchg
push
push
outs
push
push
pop
inc
push
xor
fs
add
loopne
inc
add
adc
adc
jne
mov
dec
add
push
mul
cmp
cmps
cmp
(bad)
inc
lock
add
sub
sub
adc
or
inc
inc
mov
pop
sbb
add
adc
call
popa
je
gs
mov
mov
or
test
pop
fcmovnu
bt
(bad)
movs
xchg
sar
pop
aaa
enter
push
sahf
sub
inc
xor
xchg
outs
or
add
pop
lahf
push
mov
jl
rol
call
xchg
add
pusha
iret
or
xchg
adc
or
pop
jo
jne
nop
and
js
ss
jmp
mov
or
pop
std
pop
mov
pop
pop
mov
mov
call
cld
mov
cmp
push
or
pusha
xchg
pop
adc
and
add
adc
sbb
fimul
retf
add
in
mov
push
add
lds
cmp
xchg
std
lods
lock
add
retf
jl
inc
adc
in
add
retf
jns
and
inc
or
call
dec
mov
mov
fmul
add
dec
(bad)
xor
xor
mov
and
dec
or
sbb
(bad)
fld
retf
cmp
int
jmp
add
inc
cmp
jne
pusha
fmul
std
inc
cmp
jne
pop
xchg
push
xor
jecxz
aaa
inc
cs
xor
add
inc
aad
pop
je
pop
lock
mov
sbb
sar
das
mov
dec
sbb
lods
inc
add
push
pop
or
mov
sbb
jns
add
sar
out
loop
jne
jbe
in
add
xor
adc
js
pushf
ret
jge
out
push
add
sbb
movs
mov
mov
ds
aad
inc
mov
xor
mov
xchg
pop
add
shl
bound
or
data16
mov
sbb
in
inc
pusha
rol
imul
adc
js
js
loop
adc
mov
mov
popf
inc
sbb
sbb
adc
fdivr
retf
jmp
pop
out
sub
add
sub
repnz
push
out
xchg
push
mov
mov
mov
loopne
pop
shr
(bad)
jg
add
pop
cwde
mov
mov
fild
popf
add
in
sub
adc
adc
out
cmp
push
sub
xchg
adc
and
popa
cs
mov
mov
inc
add
add
fnsave
jns
lods
mov
rol
mov
mov
sar
mov
pop
jl
xchg
femms
sbb
adc
lock
ror
sbb
cmp
jo
push
add
jo
cmp
fld
or
jb
aaa
fwait
repnz
inc
add
imul
inc
inc
add
pop
sub
pop
xor
inc
add
pop
fs
sub
or
dec
fsub
fs
inc
jg
sbb
fsub
pop
mov
addr16
push
push
push
je
arpl
test
fimul
cmps
dec
mov
dec
aaa
ret
jle
rol
sti
lods
add
sub
xor
pop
mov
rcl
cmp
sub
inc
cld
je
cmp
jne
or
and
retf
mov
out
js
inc
sbb
pop
add
jne
mov
xchg
or
adc
and
lds
imul
icebp
daa
push
ret
inc
add
sbb
fld
or
aam
mov
push
pop
out
aam
or
xchg
mov
xor
in
js
push
dec
iret
add
xor
sub
ja
cmp
add
mov
(bad)
jmp
and
mov
jmp
xor
pop
push
push
dec
fdiv
enter
push
xchg
add
aaa
inc
jmp
inc
pop
cmp
and
and
and
or
enter
adc
xor
and
or
sbb
cs
clc
repz
loopne
int3
sbb
push
adc
sti
jno
sbb
add
push
push
push
push
xor
ror
inc
add
jne
cmp
push
(bad)
cmp
test
mov
test
or
sbb
pop
mov
mov
inc
aaa
add
mov
div
mov
jmp
inc
pop
mov
fcom
js
xchg
addr16
pusha
ret
dec
shl
jg
add
dec
outs
outs
pop
aad
hlt
imul
jg
sub
cmp
sub
inc
add
or
push
(bad)
(bad)
dec
enter
add
sub
jb
je
dec
je
dec
or
call
or
xor
jmp
mov
mov
jne
pop
enter
imul
inc
mov
je
rol
jmp
gs
imul
mov
aaa
fadd
cmp
mov
mov
cmp
xchg
mov
push
xor
and
out
sbb
add
adc
push
inc
sti
addr16
add
push
or
jle
mov
add
add
push
sub
stos
and
aaa
std
mov
pop
or
jne
cmp
mov
push
xor
add
push
mov
call
lea
loop
mov
(bad)
pop
push
imul
jmp
out
out
push
add
push
dec
ret
or
or
cwde
popa
call
adc
std
xchg
ret
inc
xchg
adc
mov
daa
outs
aaa
(bad)
rol
or
or
or
or
and
call
ss
es
test
test
jl
and
jge
cmp
jl
xor
sub
jle
mov
dec
xor
inc
inc
add
mov
out
icebp
xchg
das
lock
cmp
xor
sbb
call
call
outs
xor
cmp
div
sub
or
xor
or
aaa
xor
inc
or
stos
inc
push
lea
lea
in
pop
mov
jg
dec
jb
push
sub
mov
add
fadd
or
push
mov
(bad)
rcl
add
inc
dec
push
push
dec
inc
pop
neg
retf
nop
xor
or
mov
xchg
or
pop
popa
outs
add
pop
out
pop
jg
inc
test
cmps
fs
neg
mov
adc
mov
inc
or
pop
popa
outs
add
xchg
imul
idiv
out
sub
mov
or
mov
cmps
or
rcr
xor
inc
adc
mov
fsubr
adc
and
sbb
test
jb
(bad)
out
inc
call
scas
push
push
adc
gs
pop
pop
mov
inc
clc
fcomp
jmp
inc
out
add
fidivr
pop
fsubr
or
aad
sbb
xor
inc
ss
(bad)
aas
fdivr
add
hlt
add
mov
jmp
test
jmp
in
push
add
adc
xor
add
call
int3
xor
ror
xor
movs
inc
xchg
jecxz
sub
outs
jne
(bad)
ins
popa
jns
rcr
or
test
push
clc
imul
loope
mov
add
sahf
jbe
inc
push
add
add
out
or
aad
or
ret
push
push
inc
push
xor
cs
dec
dec
pop
mov
cmp
retf
(bad)
sub
shr
lods
addr16
psrad
test
add
int3
jge
jge
aas
xor
sbb
push
add
xchg
pop
prefetch
or
arpl
inc
and
pop
sar
xchg
cld
mov
pop
rcl
mov
jns
cmp
and
je
jae
jl
inc
mov
aaa
or
push
add
mov
jg
adc
inc
add
inc
add
adc
std
mov
mov
push
imul
mov
cmp
mov
cmp
add
cmp
dec
inc
js
mov
or
pop
cld
mov
cmp
push
(bad)
mov
push
jo
arpl
ins
and
cmp
cmp
xor
or
cdq
enter
in
je
mov
cmp
sbb
add
push
xor
xor
push
or
pop
test
outs
outs
arpl
pushf
add
sub
shl
push
jle
fist
push
jne
dec
outs
fs
test
push
xor
add
pop
inc
inc
popf
add
adc
ins
xlat
(bad)
or
add
cmp
adc
xor
fxch
add
pop
xor
jnp
pushf
dec
adc
dec
cmps
jmp
push
or
int3
int3
(bad)
jecxz
in
imul
add
cmp
ud0
pop
or
add
dec
xor
mov
out
inc
pop
je
les
jo
pop
sbb
or
inc
add
or
add
mov
mov
inc
mov
enter
xor
movs
inc
mov
loopne
in
ins
add
or
nop
mov
inc
aaa
pop
cmp
ss
mov
leave
jo
xchg
and
xchg
cmps
test
pop
add
rcl
push
push
repz
adc
cmp
sbb
push
clc
mov
add
mov
mov
push
dec
mov
ror
or
rcl
push
(bad)
loopne
scas
adc
mov
addr16
mov
gs
movs
clc
mov
jmp
bound
xor
pop
pop
ret
add
jl
add
sbb
test
icebp
mov
sbb
add
data16
cmp
add
or
jnp
jns
or
hlt
add
adc
mov
and
sbb
push
mov
arpl
outs
inc
sbb
fld
mov
adc
loope
or
pop
cmp
mov
addr16
sub
mov
mov
mov
xchg
and
clc
and
in
or
mov
and
inc
adc
je
mov
or
push
lods
inc
adc
inc
movs
and
shl
sbb
inc
lahf
mov
test
inc
push
test
or
arpl
xchg
sbb
popa
ret
add
ror
xlat
(bad)
out
cmp
add
mov
cmp
jae
mov
test
jg
and
sti
pop
or
call
mov
sbb
sbb
add
nop
aas
clc
mov
mov
xchg
adc
sbb
or
std
fs
sub
jne
sub
ror
lock
sar
jnp
cmp
jne
lock
mov
or
test
in
mov
sbb
je
in
(bad)
cs
out
and
nop
and
adc
popf
ds
aad
pop
cld
push
and
inc
inc
cld
mov
data16
pop
mov
mov
jo
sbb
std
mov
or
jle
call
fstp
fimul
hlt
jne
prefetcht1
jle
or
ror
adc
adc
jmp
xor
das
or
push
into
dec
push
leave
adc
lods
sbb
xor
or
dec
mov
add
push
push
add
je
mov
adc
push
mov
dec
stos
jo
sub
inc
adc
jno
add
cmp
xor
push
mov
xor
add
jns
xor
xor
out
or
add
mov
mov
or
jne
fiadd
dec
mov
repz
shl
mov
or
push
cmp
or
add
div
sbb
push
inc
xchg
mov
lock
fnstsw
fisttp
rcl
sbb
frstor
movs
and
inc
sub
fisttp
loopne
(bad)
push
ret
clc
add
mov
inc
std
lock
test
lods
cld
add
xchg
mov
inc
cld
mov
mov
jle
xchg
mov
xor
sbb
lds
outs
cli
xchg
or
inc
add
jne
inc
sub
test
jne
sbb
fdivr
cmps
aam
inc
fadd
out
test
xchg
mov
das
or
jmp
jne
xor
aas
popa
pop
and
mov
mov
aad
dec
mov
xchg
inc
mov
pop
ret
mov
push
adc
jmp
sar
ud2
stos
fdiv
mov
inc
aad
scas
call
ror
dec
out
mov
or
fdiv
ins
sar
inc
daa
loop
and
cmps
dec
adc
cmp
sti
inc
add
jl
mov
and
jbe
jle
mov
lea
push
cmp
cmps
push
loopne
out
jg
and
and
imul
and
loopne
push
cmp
mov
and
push
loopne
sbb
push
mov
call
pop
lock
nop
loop
pop
inc
push
xchg
or
cmp
inc
adc
jne
mov
test
sub
and
jg
retf
jl
inc
inc
aas
dec
pop
add
repnz
out
xor
in
mov
mov
cmps
aas
in
js
push
call
shl
lock
in
and
add
push
inc
jae
hlt
hlt
dec
jne
sub
dec
xor
js
outs
push
dec
das
ss
mov
(bad)
mov
ins
ret
cmp
in
fwait
push
sub
mov
inc
add
shl
or
sar
es
pop
pop
inc
xor
or
mov
cmps
jno
hlt
pop
mov
xor
push
dec
or
xor
mov
call
push
cmp
or
or
dec
jne
add
inc
or
and
add
aad
add
push
push
pop
arpl
mov
pop
adc
xor
push
ja
push
add
mov
sbb
call
outs
rol
and
pop
jae
add
cmp
xor
mov
jge
add
and
pop
jg
add
(bad)
dec
out
enter
sbb
and
inc
add
mov
sti
inc
lock
jmp
pusha
sub
ins
jmp
push
inc
(bad)
mov
adc
or
jae
inc
inc
cmp
mov
pop
lock
pop
(bad)
push
or
push
mov
mov
mov
test
ror
and
mov
sbb
cmp
jne
add
push
push
add
jne
out
sbb
sub
jae
jbe
sbb
sub
sub
and
mov
ja
js
dec
out
sub
sub
lahf
ja
adc
cmp
and
add
shr
imul
fisub
and
or
ss
popa
in
add
jb
and
je
xor
shr
call
xchg
clc
pop
ret
sub
mov
lods
sbb
inc
aaa
cdq
xor
rol
push
aaa
icebp
push
aaa
out
shr
jne
mov
inc
in
sub
inc
sub
adc
ins
fcom
cmp
retf
mov
push
(bad)
out
call
neg
sbb
sbb
repz
(bad)
push
call
loop
mov
les
mov
je
adc
sti
fst
mov
mov
je
aas
xchg
in
push
push
dec
inc
lahf
in
out
test
jnp
jle
mov
jne
mov
mov
fmul
cmp
dec
or
or
cdq
xchg
ins
or
out
or
or
fs
pushf
or
mov
and
outs
bound
push
jae
test
or
(bad)
jmp
arpl
arpl
xchg
mov
je
popa
ins
imul
pop
retf
push
hlt
push
outs
imul
je
push
jb
jo
add
push
inc
outs
test
xor
fadd
outs
ja
add
push
mov
das
adc
mov
das
push
outs
jae
mov
mov
mov
aas
sub
or
outs
stos
pop
or
and
and
adc
dec
icebp
push
xchg
pop
push
retf
dec
popa
into
std
aaa
pop
ret
nop
jo
mov
js
inc
sbb
pop
popf
ror
jmp
push
push
push
jns
mov
sbb
(bad)
nop
aam
pusha
adc
fcomp
or
xchg
fcomip
cmps
sti
cmp
add
je
push
inc
jb
arpl
push
gs
add
lea
add
jo
push
retf
loop
xor
lea
fs
dec
add
retf
dec
das
xchg
mov
xchg
or
push
xlat
mov
or
aas
add
sar
scas
stos
and
sbb
jmp
add
mov
enter
mov
cmp
dec
jle
fistp
cmp
push
dec
push
je
mov
jne
xlat
xchg
mov
mov
in
pop
test
push
test
in
in
mov
in
pushf
mov
in
lods
mov
in
in
mov
in
in
int3
rcl
in
in
fcomp
loopne
in
in
call
pop
xlat
aad
add
cld
or
into
cmp
adc
dec
dec
adc
sbb
dec
dec
dec
dec
and
sub
xor
dec
xor
xchg
rcl
jbe
mov
jae
pop
loope
inc
(bad)
cmp
add
test
add
add
sbb
fstp
sub
adc
mov
ret
popa
pusha
pop
sbb
mov
pusha
pop
push
imul
adc
push
mul
push
fadd
mov
jge
push
in
pop
clc
adc
push
mov
push
in
(bad)
xor
adc
push
rcl
push
sar
mov
pop
push
jle
push
test
jne
jle
in
push
enter
in
(bad)
mov
adc
mov
adc
push
cmp
adc
push
fmul
fsubr
sbb
pop
adc
pop
adc
push
jge
add
movs
adc
cmp
sbb
adc
fsub
xor
sbb
cmps
adc
sti
adc
jle
push
push
dec
add
adc
push
pop
adc
sti
xor
push
add
xor
mov
xchg
push
mov
sahf
push
fcom
inc
dec
dec
add
jno
cmp
and
and
mov
jg
aad
mov
gs
gs
dec
jo
sti
xor
fisubr
or
jae
adc
push
push
add
leave
xchg
inc
inc
xor
out
push
add
and
cmc
add
outs
je
outs
je
add
(bad)
pop
push
mov
je
fs
adc
adc
add
fld
je
adc
mov
push
imul
je
gs
pop
sahf
leave
fsub
sbb
lahf
inc
fs
punpckldq
add
cwde
mov
imul
mov
pushf
ins
jns
jb
outs
or
popa
jb
cmp
cmp
scas
ret
xchg
in
mov
bswap
pushf
test
pusha
add
or
popa
sbb
and
push
or
jae
popa
pusha
mov
pop
loope
std
xchg
xor
jb
imul
xor
dec
getsec
gs
jns
or
daa
add
adc
outs
ja
ss
shl
xchg
and
push
jns
repnz
int3
or
cmps
pop
out
add
psadbw
or
ucomiss
or
add
adc
jae
jo
scas
fs
inc
or
mov
mov
inc
mov
jb
inc
lds
sbb
das
inc
push
or
and
pusha
xchg
pop
pop
mov
sbb
mov
jnp
or
mov
inc
outs
arpl
rcl
leave
jo
sbb
cmp
addr16
loop
fwait
xchg
imul
push
jbe
call
or
adc
lahf
mov
mov
ret
xor
inc
pop
push
jp
ret
jne
sti
pop
mov
call
or
and
push
cmp
add
out
sub
add
hlt
mov
mov
outs
test
test
dec
outs
lahf
mov
sbb
dec
sub
adc
aaa
loope
aaa
dec
mov
sbb
push
push
in
mov
aaa
sbb
push
aaa
and
push
out
aaa
push
aaa
push
mov
outs
push
aaa
pop
sbb
mov
mov
aaa
popa
out
inc
push
pop
nop
sbb
ret
fsub
aaa
rcr
pop
cwde
cmp
push
in
aaa
fnstenv
stc
push
aaa
pusha
fstp
lldt
add
aaa
push
in
aaa
xor
aaa
cmp
push
out
aaa
push
aaa
imul
jae
mov
ret
enter
outs
in
add
cmp
stos
invd
or
add
lods
out
or
clc
mov
add
or
fcom
dec
int3
movs
xchg
push
add
aaa
(bad)
jo
popa
aaa
call
aaa
pop
pop
jmp
mov
add
adc
add
(bad)
out
call
adc
add
mov
pop
inc
add
inc
outs
ins
ins
outs
outs
call
mov
stos
pop
adc
dec
out
add
jae
add
adc
xor
add
sti
pop
mov
add
add
mov
xor
inc
add
pop
add
and
js
add
or
out
js
mov
and
add
pop
dec
test
mov
and
and
clc
pop
add
push
cwde
xchg
pop
sbb
inc
xor
push
push
add
call
mov
push
nop
mov
retf
mov
xor
lea
mov
adc
mov
cmp
sbb
js
add
adc
mov
mov
xchg
call
(bad)
jmp
rol
repnz
mov
test
je
mov
push
mov
add
add
mov
push
push
mov
pop
test
inc
seto
sub
add
rcl
pop
push
ret
lea
(bad)
pushf
out
enter
add
dec
jmp
jmp
(bad)
mov
sbb
add
jmp
mov
and
add
fist
fisub
out
push
add
xor
mov
das
jb
stos
fst
cmp
xchg
and
das
das
mov
mov
test
call
aaa
add
mov
sub
xor
pop
fs
pop
mov
test
aas
cdq
arpl
sub
add
mov
ror
clc
and
inc
inc
test
pmulhw
sbb
das
es
add
sbb
mov
pop
pop
pushf
jge
sub
add
ins
fisttp
push
sbb
out
cmp
mov
call
pop
test
leave
pop
icebp
into
mov
or
test
mov
jle
dec
dec
ret
outs
arpl
ja
add
add
jb
cld
jmp
mov
sub
rsqrtps
jb
out
popf
clc
test
outs
jge
arpl
imul
inc
ins
ins
sub
cmp
push
outs
bswap
int
mov
das
loop
dec
dec
xchg
add
add
pop
xor
(bad)
mov
lahf
push
lahf
mov
scas
push
mov
mov
pop
sub
hlt
push
aam
dec
sub
inc
and
add
test
lea
push
aas
push
mov
mov
xor
arpl
push
gs
jo
add
mov
push
gs
adc
loop
fwait
shl
je
and
imul
sbb
add
jmp
or
or
pop
mov
hlt
pop
ins
push
jmp
test
outs
(bad)
or
or
pop
ror
or
cmp
jo
cmp
cmp
pop
aaa
pop
jae
fadd
or
and
jl
repz
mov
inc
ins
dec
jne
cmp
mov
adc
dec
mov
mov
inc
mov
nop
and
mov
xor
movs
sahf
in
xchg
inc
dec
clc
mov
sub
or
mov
adc
jl
mov
xor
arpl
pop
pop
inc
jl
or
xlat
or
inc
sbb
stos
add
(bad)
xor
jmp
adc
and
das
aas
pop
in
sti
jg
pusha
inc
add
push
push
imul
or
inc
mov
add
mov
add
mov
and
sbb
scas
mov
pop
add
pop
mov
fcom
xlat
fs
push
cwde
and
push
adc
add
or
mov
push
jl
jb
popa
ins
push
pop
test
adc
cmp
pop
pop
inc
add
inc
xor
fnstsw
(bad)
push
push
push
pushf
mov
push
std
ror
add
add
mov
cmp
push
mov
add
es
sti
pop
xchg
mov
(bad)
adc
cmp
mov
aas
dec
ret
cld
inc
sbb
jmp
inc
pusha
pop
mov
clc
and
std
add
inc
inc
inc
add
lock
inc
inc
clc
mov
rol
and
in
jnp
xor
and
add
or
aad
div
jnp
add
dec
xor
push
push
aad
leave
and
cmp
push
xchg
ret
aam
test
xchg
push
and
inc
sbb
xor
push
inc
je
mov
ror
sti
ja
ja
push
xor
push
xor
push
in
out
ss
mov
cmp
cmp
dec
push
sbb
jns
push
mov
or
enter
cmp
and
and
and
jge
or
es
or
enter
sub
xor
and
and
and
adc
adc
enter
sbb
enter
sbb
enter
push
pop
add
or
add
or
add
push
pop
dec
and
das
pop
adc
add
add
repz
shl
add
push
shl
loopne
xor
shl
or
add
dec
shl
cld
popa
inc
add
hlt
mov
shl
test
mov
rcr
dec
shl
lods
jo
dec
shl
push
xor
rcr
push
test
shl
ins
xor
pop
and
dec
rcr
dec
adc
shl
out
shl
call
xor
adc
or
add
dec
shl
pop
hlt
mov
xor
in
fsub
aam
sub
fs
call
mov
or
add
or
popa
xchg
jbe
dec
sub
dec
test
or
pop
push
and
xchg
into
push
sti
sub
or
gs
cmp
pop
out
xchg
sahf
push
add
push
mov
pushf
jnp
cwde
aaa
test
mov
mov
and
fnsave
mov
push
adc
xor
pop
out
out
clc
jb
xchg
ffreep
inc
jg
imul
mov
add
enter
inc
xor
mov
cli
push
out
or
sbb
fstp
xchg
sub
add
dec
jne
pop
or
ret
jnp
push
mov
cmp
inc
push
mov
dec
xor
lock
xor
jmp
jmp
mov
sub
sub
pop
neg
call
and
mov
jne
inc
aaa
and
sub
sbb
dec
xor
or
inc
adc
rcr
iretw
nop
movs
outs
fsub
mov
push
xor
pop
out
mov
add
mov
jg
shl
movs
mov
ja
loopne
jnp
and
pop
popa
aas
mov
rcr
sbb
cmc
sbb
add
(bad)
push
ficomp
mov
cdq
mov
or
push
jae
dec
les
mov
shr
popf
and
fdiv
mov
xchg
mov
cmp
addr16
enter
inc
out
aaa
das
addr16
std
popa
out
inc
push
dec
aas
fnstsw
retf
int3
arpl
cmp
inc
out
je
mov
mov
dec
sub
stos
movs
cmp
jmp
ds
hlt
out
(bad)
sbb
push
push
rcr
add
adc
fdivr
pop
pusha
xchg
pop
test
sti
aaa
push
sub
int3
pop
ret
sub
cmp
cdq
fwait
xor
cmp
fcom
div
fwait
add
jae
sbb
inc
add
or
(bad)
add
outs
movs
aas
push
adc
inc
outs
jb
popa
je
mov
mov
pop
nop
(bad)
jb
push
mov
je
je
cmp
mov
jge
arpl
add
aaa
add
jo
dec
xchg
inc
jne
cld
sbb
mov
xchg
cwde
or
cs
push
pop
adc
mov
scas
pop
(bad)
loopne
jne
sahf
lock
out
cmp
cmp
sahf
cli
sti
call
popa
out
fmul
out
aas
int3
mov
es
xor
add
or
rol
adc
js
inc
fwait
out
(bad)
push
ins
inc
add
add
push
push
aaa
ret
xor
inc
imul
(bad)
adc
ins
mov
(bad)
(bad)
sti
xor
xor
sub
xor
dec
imul
arpl
add
jne
je
mov
add
add
mov
arpl
ins
and
out
out
mov
push
add
add
das
or
add
jbe
fadd
jo
jb
jb
popa
add
jmp
push
(bad)
daa
gs
scas
mov
jbe
gs
jg
sti
bound
ins
and
inc
jo
popa
add
push
scas
jmp
or
cmp
jae
sbb
or
pop
jae
and
fsub
ins
push
adc
mov
test
popa
shl
push
pop
ja
into
pop
je
push
je
bound
cmp
(bad)
inc
jae
imul
out
outs
out
adc
xchg
outs
inc
outs
mul
push
sbb
je
scas
je
jmp
retf
pop
popa
xchg
xor
inc
jb
jns
into
pop
lock
outs
or
data16
and
jnp
js
jecxz
sbb
mov
mov
out
popa
call
mov
mov
sbb
cmp
fild
add
cmp
setge
mov
and
pop
ret
add
add
in
push
movs
and
inc
pop
lock
test
pop
inc
out
dec
fimul
add
push
and
cmp
clc
out
fistp
mov
add
jmp
mov
mov
into
ret
cmp
je
sbb
jmp
add
das
mov
or
es
cmp
ins
call
pop
ffreep
jle
scas
push
mov
xor
mov
test
je
push
icebp
(bad)
les
rcr
sti
sbb
les
inc
neg
mov
adc
push
loope
jnp
add
aad
xor
or
pop
dec
movs
jb
jo
cmp
mov
inc
out
mov
xchg
push
hlt
mov
mul
pop
test
shl
mov
inc
data16
dec
xchg
inc
push
mov
pushf
mov
jae
scas
sti
pop
movs
(bad)
mov
cmp
je
fsub
add
mov
inc
adc
dec
cmp
mov
test
or
mov
push
mov
dec
sbb
add
jmp
je
jmp
mov
sub
jmp
or
(bad)
mov
dec
inc
add
rol
mov
ret
mov
add
mov
cmp
ja
mov
(bad)
mov
push
add
add
add
add
add
jmp
add
add
add
pop
pop
or
or
or
or
or
or
call
call
pop
sbb
call
sbb
push
pop
and
and
and
in
shl
inc
add
add
fbstp
add
add
and
push
addr16
call
int
out
shl
add
xor
xor
push
data16
nop
sahf
xor
xor
mov
js
cmp
dec
jmp
adc
out
or
adc
sub
add
cmp
or
sub
mov
je
xor
xchg
and
mov
scas
adc
xchg
sub
mov
mov
cmp
mov
pusha
lahf
sbb
and
push
and
mov
cwde
and
stos
xchg
out
mov
cwde
adc
ds
out
aaa
mov
xor
or
fwait
stos
sub
cwde
add
add
and
and
mov
mov
dec
ins
and
pusha
adc
push
xchg
mov
popa
inc
pusha
mov
stos
adc
mov
test
jbe
pusha
inc
jmp
fsubr
mov
dec
jmp
or
xchg
mov
xor
arpl
stos
scas
sti
sub
and
mov
fucomp
aas
or
or
and
jmp
or
in
or
push
or
push
je
mov
pop
jl
adc
adc
jb
xchg
pop
call
or
mov
mov
mul
fadd
dec
add
cdq
and
mov
push
sar
jae
xchg
push
lea
lea
jg
(bad)
adc
test
je
push
push
call
add
sti
fnsave
and
je
push
push
pop
enter
add
fcom
(bad)
push
lea
pop
push
hlt
(bad)
aas
mov
inc
mov
sub
mov
sub
mov
push
jmp
mov
push
mov
push
test
mov
sub
loope
push
fadd
ror
lea
dec
icebp
dec
int3
mov
mov
add
mov
push
add
adc
push
out
pop
retf
add
pop
fild
mov
cmp
add
inc
or
push
inc
jno
mov
aas
lock
and
test
adc
mov
cwde
mov
out
or
sbb
or
add
rcl
sub
jns
jne
std
(bad)
fst
int3
sbb
jo
je
inc
outs
je
jb
pop
cli
fisttp
inc
outs
je
outs
ins
or
fs
pop
je
pop
test
sub
paddsb
sbb
xchg
loop
add
call
add
cmp
fcom
(bad)
out
jle
dec
inc
lahf
inc
add
mov
aam
inc
add
test
mov
push
sub
add
ja
mov
inc
add
push
inc
add
adc
add
push
inc
add
inc
add
add
inc
add
and
inc
add
sbb
fnsave
sbb
add
add
adc
mov
(bad)
mov
test
inc
add
inc
sahf
inc
add
arpl
add
mov
mov
mov
mov
cmps
jmp
adc
(bad)
inc
call
je
mov
mov
add
sub
push
(bad)
mov
gs
or
or
and
sub
or
inc
daa
xor
add
nop
pushf
and
jbe
mov
xor
mov
or
inc
cmp
push
push
adc
das
mov
xor
daa
add
mov
add
sbb
add
inc
icebp
or
add
add
add
jmp
pop
call
add
in
and
inc
inc
out
out
lock
inc
in
fadd
inc
sub
add
inc
outs
arpl
jb
pop
ins
inc
(bad)
outs
pop
add
inc
pop
push
add
inc
jne
outs
dec
mov
sbb
pop
mov
mov
sub
add
mov
into
inc
add
dec
sbb
icebp
iret
inc
inc
stos
stos
sti
stos
adc
pop
mov
imul
dec
add
jne
push
test
sar
push
loope
add
loopne
or
add
inc
lock
neg
je
in
jp
add
jg
hlt
(bad)
(bad)
call
add
inc
jb
addr16
jne
jae
jb
mov
test
sub
adc
or
imul
test
dec
cmc
and
adc
fiadd
mov
cmp
or
pop
or
mov
push
cmp
adc
or
outs
arpl
push
cmp
ret
push
dec
pop
loopne
lock
add
(bad)
addr16
in
fld
mov
add
mov
bound
add
sar
pop
mov
cmp
add
sti
sbb
or
push
adc
pop
shl
jmp
or
and
pusha
sbb
xor
ret
jae
dec
jo
or
or
add
fld
add
cld
or
jo
jo
xchg
jo
jg
imul
or
add
addr16
daa
cdq
dec
cmp
add
inc
out
jnp
jl
pop
hlt
push
fs
mov
mov
add
add
pop
test
sbb
mov
add
add
mov
pop
adc
mov
mov
xor
std
imul
outs
inc
add
aas
and
or
jb
push
jb
jo
and
adc
cmp
inc
and
sti
(bad)
xor
imul
add
movq
outs
cld
gs
and
mov
add
dec
outs
inc
bound
pop
neg
ja
je
inc
add
mov
and
out
cmp
fadd
jo
rol
lock
add
cmp
jge
fcomp
inc
add
outs
add
stc
(bad)
jg
add
dec
outs
inc
outs
fs
outs
arpl
sbb
jge
in
and
jo
rol
sar
jg
iret
ins
add
sub
or
dec
outs
jne
gs
outs
ja
fdiv
outs
add
sub
mov
jbe
dec
loopne
add
sub
pusha
pop
fsubr
inc
and
add
jnp
loope
inc
ja
js
add
cmp
das
dec
gs
jbe
(bad)
aaa
push
inc
mov
loope
mov
push
je
jb
pop
aam
mov
jnp
adc
std
icebp
jg
or
jnp
add
or
je
inc
popa
jae
mov
add
in
jnp
dec
icebp
or
dec
push
ins
or
push
jo
gs
or
xor
mov
jl
xchg
pop
div
xchg
test
pcmpgtb
xchg
add
fisub
sub
and
and
icebp
lds
lahf
lea
add
test
es
mov
iret
and
fwait
mov
or
xor
and
add
pop
pop
and
mov
fstp
les
sar
inc
ja
(bad)
out
mov
add
inc
add
inc
add
cmp
add
enter
jecxz
inc
add
jne
xchg
inc
add
add
imul
adc
mov
out
pop
xor
call
xor
adc
lock
mov
jnp
mov
mov
test
les
xor
stos
inc
add
pop
and
sub
xchg
ud2
jge
mov
arpl
adc
jb
mov
mov
movs
or
test
pop
lahf
pop
push
popa
bound
outs
jo
jle
cmp
or
mov
mov
xor
fwait
mov
add
pop
or
shl
xor
out
jge
daa
in
mov
stos
or
add
xor
add
add
or
mov
stos
in
xor
test
mov
inc
adc
rcr
out
(bad)
mov
inc
gs
ins
pushf
jae
fld
arpl
div
add
adc
outs
outs
outs
fstp
gs
dec
or
sbb
and
add
add
dec
push
fs
dec
dec
jne
sbb
in
bound
cld
int3
cmp
add
dec
sub
addr16
inc
xchg
mov
cld
inc
mov
adc
pop
sub
fdivr
mov
dec
enter
movs
(bad)
sbb
out
adc
inc
add
add
inc
and
mov
xchg
inc
call
test
and
test
mov
dec
imul
pop
imul
test
pop
(bad)
neg
add
dec
ins
mov
mov
adc
test
dec
xlat
ror
cwde
and
dec
popa
js
outs
addr16
pop
adc
enter
xchg
in
dec
pop
jbe
jb
or
and
xor
push
sub
fst
test
ret
or
mov
shr
aad
pop
ret
scas
xor
pop
daa
cdq
imul
inc
push
out
sub
out
jmp
xchg
repz
cmovae
add
popa
jae
out
nop
mov
inc
test
xchg
out
xor
aam
mov
push
sub
or
in
shr
jg
test
rcl
pusha
jg
cmp
lock
xchg
sbb
add
add
mov
and
add
push
or
cmp
inc
pushf
jge
in
cs
sbb
pusha
iret
retf
add
add
push
(bad)
fisub
mov
and
add
xor
ins
sub
xchg
pushf
xor
mov
and
xchg
shl
mov
call
and
add
in
mov
add
cmp
mov
js
je
mov
add
and
dec
gs
push
in
mov
pop
add
cmp
and
gs
dec
call
fiadd
push
jo
mov
add
cmp
test
mov
(bad)
ins
dec
push
xchg
dec
jbe
and
cmp
mov
push
jo
aas
xchg
dec
gs
dec
cld
inc
and
imul
pop
or
fwait
addr16
sti
movs
cmp
in
push
jae
dec
outs
outs
gs
stos
test
push
inc
outs
je
add
test
add
seto
mov
sub
push
inc
jg
inc
jo
inc
add
jg
pop
add
add
scas
fst
and
pop
add
xchg
xor
fbstp
xor
add
xchg
add
dec
(bad)
fmul
xlat
cdq
imul
popa
inc
push
repz
push
je
lock
repz
test
pusha
repz
mov
or
jnp
fld
mov
cld
pop
xor
or
ror
add
xor
js
mov
or
cwde
mov
cmp
cmp
rol
and
mov
pop
add
or
retf
or
xor
call
mov
mov
call
fidiv
sbb
mov
adc
xchg
dec
gs
mov
sbb
jl
add
sbb
mov
shl
cmp
add
jae
xor
rcl
mov
add
les
dec
loop
shl
add
add
xchg
add
mov
in
mov
xchg
fcom
shl
cmp
add
push
popa
outs
je
jb
push
fidiv
ins
sub
jae
add
fldenv
arpl
es
imul
ja
and
xor
cmp
or
outs
mov
xor
mov
mov
cmp
and
in
ss
aaa
mov
movs
push
fstp
cmp
cmp
shl
and
add
cmp
xchg
mov
mov
fdivr
inc
pop
cmp
and
inc
retf
cmp
sbb
ins
pop
mov
pop
aad
(bad)
out
and
dec
mov
outs
pop
push
xchg
inc
and
inc
push
add
or
xchg
sbb
inc
adc
add
lahf
sub
add
int
out
mov
inc
add
stos
inc
add
pop
xlat
std
adc
pop
and
jg
fld
lock
inc
add
or
in
lock
inc
add
jne
xlat
xor
js
sub
xlat
xor
int3
add
(bad)
fbstp
fmul
dec
or
adc
je
outs
outs
test
cmp
outs
outs
fisubr
shr
mov
xchg
paddb
push
(bad)
pop
add
pusha
nop
scas
pop
inc
or
scas
clc
loopne
xor
mov
mov
add
movs
mov
inc
(bad)
aas
nop
scas
xchg
mov
add
add
in
push
push
call
std
fbstp
mov
mov
fcos
sbb
push
pop
dec
adc
inc
outs
outs
nop
cmp
aaa
pop
push
and
inc
xchg
add
ret
ror
xlat
pop
ret
jae
or
sub
add
push
xchg
jae
adc
inc
int3
shl
jl
loopne
sbb
inc
pop
fnsave
cld
fbstp
or
add
mov
mov
enter
mov
add
jmp
nop
add
sub
mov
sbb
call
push
std
jg
les
add
inc
add
add
pusha
push
aad
xor
pop
or
push
sbb
iret
or
xor
push
pop
xor
add
add
into
mov
add
inc
call
adc
push
push
hlt
rol
adc
lods
add
bswap
push
push
inc
mov
mov
adc
mov
push
adc
mov
idiv
xchg
test
mov
mov
add
pop
popa
ins
mov
add
push
gs
ins
sbb
mov
add
sbb
rcr
or
sbb
dec
rcl
mov
sti
sbb
xchg
mov
add
inc
xchg
or
and
imul
adc
add
dec
mov
adc
and
dec
or
icebp
add
mov
inc
and
lds
push
fbld
sub
or
and
sub
and
xor
ins
and
mov
fsub
sub
fnstenvw
xor
leave
dec
outs
out
dec
and
and
sub
inc
and
and
push
adc
mov
and
and
xor
mov
jo
mov
xlat
add
(bad)
pop
and
sbb
adc
fwait
out
inc
push
adc
inc
add
sti
call
stos
inc
add
inc
add
scas
inc
add
stos
ret
adc
scas
inc
add
adc
adc
outs
aaa
adc
aas
dec
push
inc
add
push
shl
or
push
and
stos
retf
pop
adc
cwde
call
mov
jl
add
or
aaa
cld
mov
or
push
mov
lds
daa
add
movs
mov
fcmovnb
jnp
xchg
add
xchg
cvtdq2ps
add
neg
mov
je
mov
and
inc
jmp
dec
adc
in
adc
clc
add
add
aad
mov
sub
add
call
cli
push
mov
xlat
sub
fsubr
sahf
mov
loopne
add
add
xchg
stos
test
mov
sub
pushf
sbb
je
mov
cmp
jne
or
(bad)
js
add
lea
mov
add
sbb
jne
xor
mov
enter
push
push
call
sub
shl
jne
fcom
pop
fsub
mov
iret
mov
sub
xchg
push
push
jae
cmps
jnp
xor
cmp
jmp
sbb
pop
push
push
inc
ror
jl
add
jmp
push
jb
repz
jo
sub
pop
retf
arpl
fdivrp
xchg
add
mov
mov
sub
mov
mov
mov
mov
ror
retf
jl
outs
and
lea
or
push
ret
(bad)
mov
add
add
add
scas
add
or
inc
xor
mov
cmp
call
or
adc
(bad)
or
cmp
push
lea
lea
pop
lds
gs
mov
or
aaa
cld
adc
daa
add
xchg
sub
stos
and
dec
sub
push
push
or
aas
sti
scas
hlt
pop
fsubr
sbb
add
add
and
les
xchg
mov
sbb
xor
data16
movs
sbb
xchg
dec
inc
in
mov
test
jne
push
or
test
sub
push
jno
inc
aad
mov
mov
fist
add
leave
inc
int3
nop
ins
test
leave
cmp
pop
xor
adc
mov
mov
sub
mov
outs
pop
or
fmul
cmp
sub
ins
adc
push
or
out
sar
stos
or
sbb
inc
mov
call
std
jge
mov
lock
push
and
ret
mov
push
cmp
fidiv
pop
mov
out
test
jg
inc
push
inc
setne
xor
mov
sbb
ja
cmp
push
cmps
xchg
ficomp
cli
ja
inc
nop
pusha
cmp
je
test
xor
mov
out
and
mov
in
sar
in
mov
and
pop
and
mov
mov
cmp
pop
and
mov
xchg
clc
(bad)
mov
pop
adc
(bad)
scas
add
and
add
mov
shl
xor
sbb
cdq
fimul
mov
pop
cs
pop
(bad)
cmc
add
shl
pop
imul
push
mov
mov
mov
cmp
adc
push
je
fbstp
add
std
mov
mov
mov
call
jmp
jg
loope
arpl
(bad)
fld
inc
or
and
and
fistp
jno
addr16
sub
cmp
ss
add
xchg
retf
addr16
not
and
add
jl
mov
xchg
dec
add
push
test
popa
or
fstp
mov
jo
inc
add
mov
(bad)
jmp
mov
adc
mov
inc
push
push
mov
enter
out
cmp
add
or
mov
imul
cmp
cld
in
jmp
cdq
jl
rcl
add
xor
mov
add
lds
(bad)
div
cmps
and
pop
push
fmul
je
mov
sti
sti
in
and
cdq
inc
(bad)
cmp
pop
add
not
add
jo
fidiv
push
cmp
push
dec
jo
fnstcw
ret
cmp
jg
mov
out
cmp
pop
inc
jne
fxch
ins
loopne
or
and
enter
neg
sbb
sub
sahf
add
pop
clc
add
sbb
mov
(bad)
rol
mov
inc
ins
mov
xchg
pop
xor
and
lds
push
ss
add
jmp
mov
or
or
ja
leave
movs
mov
cmp
mov
ret
cmp
(bad)
sti
sbb
nop
pop
pop
mov
push
cmp
es
mov
cmp
les
adc
sahf
(bad)
lds
push
ja
mov
mov
sbb
push
scas
mov
iret
jae
jae
inc
inc
je
nop
daa
adc
add
add
push
add
pop
add
fcom
push
xchg
xchg
inc
daa
or
and
adc
shl
inc
and
sub
adc
push
xor
stos
loop
add
push
cmp
fadd
cmps
push
jge
scas
add
mov
mov
adc
add
cmps
inc
and
(bad)
call
sbb
push
into
mov
xchg
pop
jmp
fwait
xchg
add
pop
fist
mov
push
shr
or
sbb
xor
not
stos
jo
mov
inc
enter
or
cmp
jg
dec
mov
adc
(bad)
movs
aaa
dec
ror
jmp
clc
mov
cmp
lock
loop
test
mov
pop
aaa
or
pop
aam
add
push
fwait
sub
fadd
imul
cmp
mov
fs
mov
test
je
cmps
test
cmps
lods
xchg
mov
or
push
clc
add
mov
ud2
out
jecxz
sbb
push
aaa
xor
(bad)
std
mov
aas
cmps
inc
inc
pop
mov
sbb
jnp
inc
mov
(bad)
mov
mov
or
fcmovu
cmp
and
adc
scas
and
jecxz
(bad)
push
clc
cmp
push
add
fwait
out
adc
push
adc
inc
add
pop
ffreep
daa
and
je
cmp
push
and
or
push
jmp
call
(bad)
dec
jg
add
add
je
push
push
mov
fs
push
das
aam
std
loopne
pop
inc
pop
mov
mov
imul
adc
add
les
pop
sbb
pop
arpl
add
je
inc
cld
dec
mov
cmp
ret
xor
cld
inc
inc
mov
leave
fsub
retf
clc
mov
or
mov
jbe
rcr
nop
popa
test
adc
cmp
je
push
or
or
sbb
leave
add
pop
inc
and
add
fmul
ins
mov
inc
clc
cmp
adc
jl
inc
add
inc
pop
les
not
inc
push
cmp
mov
xchg
xor
adc
add
pop
push
jnp
fcom
xor
mov
test
hlt
inc
push
out
adc
mov
or
mov
adc
pop
sub
and
dec
pop
mov
mov
sub
enter
fsubr
and
inc
and
cmp
jle
hlt
sbb
loopne
test
out
ret
and
dec
std
add
sti
add
ret
(bad)
push
and
add
xor
es
in
lock
movs
inc
push
hlt
fild
push
push
(bad)
fstp
inc
mov
int
mov
sar
ja
add
add
jg
adc
cld
pop
pusha
test
ds
pop
inc
in
dec
dec
inc
test
je
lss
les
sub
jg
cmp
add
push
fiadd
push
pop
test
mov
fs
js
or
nop
jg
push
add
sbb
inc
push
add
push
adc
push
add
(bad)
mov
cmp
cmp
cli
jne
mov
pop
sub
(bad)
mov
data16
inc
push
add
mov
push
mov
jge
jge
data16
nop
not
jbe
arpl
popf
adc
sbb
pusha
gs
pop
je
and
dec
jge
fadd
sar
mov
loope
inc
lock
or
dec
aas
add
cmps
(bad)
mov
sbb
or
push
push
rcl
(bad)
mov
cmps
pop
xor
clc
cmp
(bad)
call
das
sub
dec
add
mov
push
push
push
ds
test
adc
sub
adc
jg
xchg
mov
test
jl
sbb
out
xchg
mov
(bad)
or
loopne
mov
push
sub
jae
and
daa
retf
lock
lods
sbb
dec
mov
add
rol
retf
fadd
inc
clc
mov
or
popa
jg
pusha
jmp
push
dec
cs
push
outs
and
push
dec
daa
inc
add
dec
sbb
out
dec
mov
mov
nop
cwde
jae
mov
std
sbb
dec
add
or
jo
xchg
dec
sub
retf
push
inc
dec
push
out
test
sub
aas
sub
addr16
inc
aad
mov
(bad)
jge
call
and
or
dec
mov
out
mov
jnp
adc
loopne
push
in
sbb
jmp
scas
ret
xor
and
push
push
sbb
daa
loope
xchg
xor
test
je
jecxz
mov
sbb
sbb
and
aam
ret
and
fdiv
inc
xor
pop
mov
les
shr
lea
push
add
sub
cmp
jne
ror
add
push
out
aas
js
ins
inc
add
pusha
je
sub
jmp
inc
jg
inc
and
jo
sbb
cmps
add
xchg
aad
sbb
sbb
frstor
fcomp
add
stos
push
xor
dec
cmp
and
in
loopne
xchg
mov
inc
inc
inc
mov
add
add
shl
lods
add
inc
test
mov
sub
mov
and
inc
out
ds
loopne
xchg
mov
adc
pop
adc
add
imul
xchg
mov
add
add
lds
cmp
xchg
mov
push
jl
xor
test
sbb
xchg
xchg
xchg
push
sbb
add
retf
dec
clc
inc
lea
mov
neg
std
sti
add
leave
mov
dec
sbb
shl
rol
and
and
inc
add
shl
arpl
data16
cmp
dec
imul
mov
mov
add
adc
cmp
xor
inc
mov
or
push
mov
lea
mov
pusha
or
push
inc
test
pop
add
les
ret
or
mov
xor
mov
dec
mov
push
or
loopne
sbb
pop
push
enter
dec
stos
jae
outs
add
shr
movzx
and
inc
push
push
push
cmp
or
aaa
(bad)
out
add
ret
push
adc
out
sub
or
and
pop
push
adc
scas
iret
mov
sub
call
nop
pop
pop
pop
(bad)
sbb
outs
repz
jo
and
mov
pop
ret
cmp
cmp
jmp
pop
adc
sbb
push
lock
std
clc
inc
or
jmp
and
cmp
fadd
add
add
ja
sbb
cmp
mov
ds
adc
pop
add
push
xchg
inc
cmp
enter
adc
aaa
hlt
sub
inc
pop
cmp
clc
and
je
shl
jmp
mov
adc
dec
loopne
adc
sub
cmp
dec
pop
ret
mov
bound
or
push
push
or
adc
push
int3
inc
cmp
mov
mov
mov
pop
adc
dec
jl
add
xor
mov
es
and
popa
inc
nop
inc
xchg
adc
jne
mov
test
push
and
loope
add
sbb
(bad)
and
push
or
jne
mov
adc
(bad)
mov
inc
and
mov
lds
pusha
loope
sub
dec
je
sub
je
sub
jmp
mov
adc
mov
mov
push
xor
mov
fstp
add
jp
ret
adc
or
jnp
lds
iret
test
pop
cli
mov
mov
and
add
mov
mov
add
cmp
add
mov
adc
xor
call
mov
adc
cmps
js
mov
aas
sbb
mov
jg
pop
sbb
mov
outs
das
rcl
adc
pop
cmps
sub
mov
lahf
loop
movs
add
push
mov
or
adc
inc
loopne
add
mov
add
sbb
mov
dec
mov
ret
inc
je
pushf
repz
push
sub
clc
mov
push
mov
sbb
add
mul
lds
(bad)
inc
(bad)
cmp
je
push
push
push
outs
cmp
pop
push
daa
pop
mov
mov
push
mov
loopne
mov
mov
mov
stos
popf
pop
sbb
xchg
or
jnp
nop
mov
xchg
js
ror
push
or
pop
mul
inc
add
push
push
dec
dec
add
pop
add
es
sbb
adc
xlat
sbb
jmp
pop
rcl
jg
mov
cmp
jne
sub
jne
bndstx
sbb
aaa
rol
mov
popf
and
adc
jne
mov
adc
push
sahf
jmp
lahf
loope
xor
add
adc
lods
mov
mov
mov
inc
mov
push
fwait
lods
adc
push
inc
cs
xchg
sub
cli
adc
jle
mov
test
inc
inc
ds
shr
loope
lock
cmp
sbb
addr16
push
inc
xor
loopne
jl
or
cmps
(bad)
or
jae
dec
adc
and
inc
sub
mov
push
pop
pushf
adc
sbb
out
outs
sub
pop
adc
or
jmp
call
fiadd
add
inc
add
ret
outs
push
add
std
cmps
add
jecxz
xor
inc
add
lods
inc
add
inc
push
add
hlt
loope
add
enter
or
add
and
fwait
pop
adc
push
rol
jmp
ror
xor
loop
mov
add
pop
or
or
inc
pusha
and
aaa
or
push
test
inc
or
push
add
jae
cmp
idiv
inc
add
add
jmp
pop
mov
mov
enter
mov
mov
xor
js
jbe
xchg
jl
aas
mov
cmpxchg
jo
add
ins
stc
jno
bound
add
or
std
arpl
and
xor
fnstcw
stc
add
shl
or
adc
mov
dec
rol
leave
shl
mov
xchg
fild
enter
or
sub
add
jnp
movaps
or
sbb
out
rol
pop
xor
mov
(bad)
pop
pusha
mov
jb
mov
aaa
inc
add
push
push
push
imul
xchg
pop
rol
or
xchg
leave
pop
or
jmp
test
jne
cmp
je
push
rcl
jmp
add
popa
cld
cmp
fcompp
jg
and
cmp
mov
sti
daa
and
sbb
jne
push
and
jne
mov
adc
es
cmp
xchg
add
scas
add
add
sub
add
mov
add
adc
js
mov
mov
inc
ror
and
adc
and
xor
mov
outs
(bad)
ja
ret
dec
cld
stos
mov
adc
mov
mov
sbb
push
inc
and
and
out
mov
imul
cs
or
repnz
pusha
mov
jg
mov
imul
mov
mov
and
lods
and
xchg
js
push
outs
push
aaa
fst
or
xchg
addr16
push
or
sub
mov
mov
and
aaa
sub
adc
sbb
xor
aaa
cmc
add
inc
adc
mov
inc
xor
mov
xor
lods
jo
push
pop
movs
je
add
rcl
push
push
mov
or
add
push
pop
call
mov
call
in
push
xor
ret
enter
dec
cld
mov
cmp
rol
cmps
jg
div
mov
aaa
and
pop
sbb
jne
mov
lea
push
adc
inc
in
cmp
push
shl
dec
test
xchg
in
xchg
loope
lea
xor
das
jo
ins
adc
cmp
(bad)
mov
add
push
pop
pusha
cli
push
add
mov
jnp
inc
pop
sub
sbb
jecxz
mul
mov
jmp
aaa
pop
dec
inc
sub
sub
std
push
and
sub
or
xor
jae
and
sub
sub
dec
dec
sub
arpl
rcl
xor
sbb
and
add
jg
mov
aam
push
pop
ret
dec
inc
shl
add
inc
push
jo
arpl
jecxz
sub
dec
dec
(bad)
loope
clc
push
and
or
sbb
js
add
push
iret
loopne
stos
mov
sbb
dec
xor
dec
cmp
rol
test
inc
jle
cmp
inc
mov
mov
cld
xchg
or
cdq
push
push
mov
xor
mov
jle
test
cmp
mov
imul
test
add
movntq
out
adc
cld
adc
inc
sbb
cmp
das
lea
and
das
jbe
inc
inc
sbb
add
ins
jo
inc
sub
test
imul
add
ror
test
les
out
test
bound
aaa
test
xchg
ret
test
jp
push
adc
ret
cmp
push
or
lock
dec
push
aaa
mov
jb
daa
and
mov
sub
sbb
and
pop
pusha
adc
mov
add
pop
mov
lock
pushf
or
inc
icebp
and
xor
cli
jecxz
test
cmp
je
push
add
add
and
jae
dec
je
add
push
mov
stos
xor
movzx
push
sbb
xchg
in
cwde
inc
sbb
add
push
or
lock
xor
out
sbb
cmp
dec
in
sbb
adc
mov
pop
mov
mov
ja
rol
fild
adc
leave
sbb
into
or
stos
cmp
add
inc
cld
push
push
inc
mov
or
mov
or
mov
icebp
dec
test
aad
sbb
shl
jae
mov
or
cld
add
xor
adc
inc
or
add
pop
push
dec
dec
dec
inc
dec
push
arpl
add
clc
(bad)
(bad)
pop
xchg
inc
add
or
aaa
xor
add
inc
or
into
std
out
add
push
add
push
mov
shr
push
push
(bad)
mov
sbb
sbb
(bad)
outs
loopne
mov
lea
imul
je
cmp
and
push
sub
jb
jne
mov
ss
ss
cmp
mov
cmp
setne
jl
mov
push
mov
bound
or
ret
nop
fdiv
adc
lock
lea
movs
movs
mov
clc
push
movs
mov
pop
mov
mov
rol
add
sub
mov
iret
and
adc
pop
mov
pusha
sub
mov
je
shl
push
es
mov
mov
inc
pop
pop
pop
hlt
jno
aaa
retf
mov
jno
(bad)
and
fmul
cmp
sub
mov
mov
call
sub
cmp
and
leave
sub
dec
adc
xor
fdivr
or
mov
daa
push
ror
adc
in
or
test
mov
adc
outs
test
add
add
out
xor
mov
or
push
cmp
dec
lods
and
sbb
in
push
pop
outs
xor
jecxz
sti
data16
arpl
adc
jnp
sub
dec
fsubr
outs
mov
mov
add
shl
cmp
pop
int3
push
add
push
inc
sbb
ja
cmp
nop
call
sub
or
or
(bad)
jg
rol
inc
add
push
popa
loop
and
inc
add
push
mov
mov
popa
ins
adc
and
popa
ins
inc
sub
xchg
jo
in
pop
popa
ins
push
mov
jne
push
mul
je
or
or
push
movs
pop
adc
or
add
pop
std
xor
inc
add
add
or
add
cmp
pop
pop
xlat
jge
pop
adc
inc
add
add
fbstp
out
inc
add
pop
ins
pshufw
or
popa
lods
sbb
and
pop
pop
adc
sub
dec
inc
lahf
add
neg
je
cmp
pop
dec
enter
jae
mov
int3
pop
or
mov
lock
test
xor
nop
nop
outs
pop
sbb
pusha
mov
add
ret
fadd
or
ret
cmp
fld
cwde
imul
cmp
cwde
mov
jo
addr16
mov
popa
out
fadd
ret
adc
sub
loopne
cwde
imul
out
xor
mov
out
cld
push
sbb
sbb
inc
js
sub
dec
jo
inc
fs
jo
sbb
jae
repnz
sub
fcomip
adc
add
daa
mov
enter
mov
call
or
enter
sbb
cmps
xor
sahf
mov
in
sub
adc
inc
add
fcomp
lock
sub
or
adc
js
ror
int
push
and
add
or
jo
aas
or
jnp
inc
sbb
pop
add
nop
arpl
sbb
mov
dec
push
push
mov
int
ja
mov
xlat
inc
xchg
or
js
xor
aaa
enter
or
dec
ds
inc
add
or
adc
xchg
(bad)
cmc
add
nop
mov
jae
cmc
out
sbb
rol
mov
sub
add
ins
bound
fcomp
cld
and
or
bound
cmp
and
fist
or
popa
outs
jne
ins
or
daa
jmp
call
mov
cmp
test
cmp
popa
je
jns
sbb
call
fld
mov
or
int3
xor
mov
iret
adc
jp
mov
add
lock
arpl
nop
mov
push
popa
bound
sbb
push
rol
mov
sti
and
mov
push
mov
shl
xchg
lds
sub
loope
sub
sbb
popa
imul
popa
imul
sbb
pop
popa
imul
imul
jle
sti
pop
mov
push
or
add
cmp
sub
in
adc
sets
fcom
out
xchg
loope
gs
shl
add
(bad)
and
and
call
pop
inc
fisubr
xchg
adc
daa
sbb
jle
arpl
adc
xchg
sbb
outs
cs
jae
add
jle
cwde
mov
dec
jae
add
adc
(bad)
lahf
jg
xchg
mov
daa
add
or
enter
js
and
scas
clc
test
or
ja
enter
push
and
or
imul
or
or
jb
mov
mov
call
dec
add
sbb
add
pop
pop
add
pop
and
gs
add
add
sbb
fnstsw
push
rol
add
sete
outs
pusha
mov
in
mov
dec
gs
add
add
xor
sbb
into
cmp
out
fistp
push
nop
mov
push
push
enter
push
add
adc
call
cmp
mov
push
jl
and
orps
push
test
test
lods
dec
add
push
add
fld
shl
popa
outs
jns
mov
add
mov
push
aas
mov
xor
xchg
neg
jnp
popa
add
out
pop
adc
pop
jl
cwde
adc
and
fadd
push
mov
imul
or
inc
xchg
pop
inc
cmps
das
xchg
lock
push
popa
jb
gs
mov
add
adc
rcr
sub
pop
or
pusha
je
mov
loope
pusha
add
in
adc
or
pop
cmp
sti
adc
mov
push
push
outs
push
push
rol
inc
ins
lods
ret
pusha
retf
or
ja
jg
pop
je
ins
mov
outs
pop
shl
ja
int3
fiadd
xchg
xchg
punpckhbw
imul
and
pop
add
ja
and
aad
adc
je
imul
dec
movs
out
push
fnstcw
or
fld
adc
outs
cmc
fist
shl
add
dec
inc
cld
inc
stos
push
outs
jae
push
pop
inc
retf
pop
in
rol
add
mov
mov
push
mov
jae
mov
add
xor
cmp
inc
fcom
out
xchg
mov
push
inc
jb
add
je
push
inc
inc
sub
sti
pop
jmp
popa
ss
xor
int3
test
rol
sti
ja
ja
sub
test
das
shl
mov
jl
pusha
add
(bad)
adc
push
push
dec
ret
cmp
xor
je
xchg
mov
cmp
xchg
sbb
xlat
pop
push
xchg
dec
or
push
les
pop
add
add
out
mov
adc
outs
push
pop
fidiv
sub
pop
out
fsub
out
xchg
das
in
ror
push
push
cmps
jmp
dec
ret
mov
nop
add
les
rol
inc
jmp
enter
(bad)
inc
adc
pop
adc
ja
sbb
mov
push
iret
dec
add
(bad)
(bad)
(bad)
inc
mov
add
add
add
add
add
add
add
add
or
add
mov
mov
mov
mov
mov
mov
cmp
cmp
cmp
cmp
add
in
(bad)
in
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
(bad)
fdivrp
(bad)
fdivr
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcos
fdivr
xlat
call
call
call
call
call
call
call
dec
(bad)
clc
dec
dec
dec
(bad)
(bad)
mov
retf
push
dec
dec
push
inc
add
sbb
inc
add
out
cmps
jmp
add
fwait
cmps
stc
sbb
inc
add
aam
ss
add
mov
les
xchg
pop
fbstp
add
cmp
sbb
xor
cmp
je
pop
xlat
jne
hlt
and
pop
fs
adc
inc
jl
inc
add
pop
inc
add
xor
pop
test
imul
mov
aas
inc
add
and
adc
sub
xor
jne
dec
add
sbb
and
push
rcl
aam
inc
add
loopne
inc
add
cmp
add
jne
iret
mov
ins
iret
adc
push
mov
pop
clc
push
jae
nop
or
sbb
sbb
lock
movs
inc
sub
mov
test
(bad)
fs
rcr
inc
add
and
and
pop
push
int
sub
add
xor
push
inc
mov
pop
jae
add
add
dec
div
or
inc
push
add
add
imul
test
int
add
dec
add
or
int3
add
or
xchg
loop
inc
pop
add
add
pushf
shl
push
xchg
(bad)
inc
sub
pop
adc
pop
jnp
out
sbb
add
add
pop
or
or
jo
fcos
push
pusha
rol
add
in
jne
jbe
dec
push
and
jmp
pop
pop
push
xchg
sbb
jecxz
or
aas
fmul
inc
aas
int3
sub
aas
add
test
pop
aas
sub
xor
pop
adc
push
inc
inc
mov
add
inc
add
or
xor
cld
dec
sub
add
or
add
adc
out
imul
mov
or
jae
fild
or
push
inc
ins
jo
popa
and
iret
cld
ja
and
jb
push
dec
popa
je
push
call
inc
push
add
fdivr
pop
addr16
ins
adc
and
fld
(bad)
mov
mov
pop
cmp
pusha
nop
mov
sbb
or
add
scas
inc
ror
mov
dec
idiv
jmp
or
push
popa
imul
push
jo
arpl
nop
add
cmp
inc
cmp
sti
and
bound
add
cmp
pop
bound
bound
jnp
ja
sub
inc
jae
cmp
shl
dec
adc
out
add
bound
push
push
imul
outs
data16
sahf
loopne
ja
mov
movs
inc
(bad)
dec
adc
sbb
cmp
jns
leave
(bad)
(bad)
std
sbb
stos
pusha
add
dec
mov
add
jmp
(bad)
mov
gs
or
add
or
pusha
and
and
xchg
xchg
dec
pop
add
inc
mov
or
lahf
add
push
nop
or
pusha
push
inc
repz
pop
adc
mov
popa
xchg
aaa
add
lldt
add
adc
call
adc
add
add
adc
inc
add
dec
add
add
add
add
add
add
add
lock
(bad)
inc
test
lsl
add
add
add
add
add
mov
mov
fwait
js
push
loope
or
mov
dec
mov
mov
mov
mov
mov
mov
mov
mov
push
and
mov
clc
(bad)
jmp
mov
mov
add
push
mov
xor
cmp
cli
les
add
jmp
clc
outs
loop
ret
inc
inc
inc
(bad)
mov
(bad)
mov
(bad)
mov
inc
mov
push
push
cmps
imul
inc
add
cwde
jmp
loopne
xlat
add
jo
inc
add
hlt
or
add
sbb
add
test
or
inc
add
or
add
nop
test
mov
add
or
pop
sbb
add
cmp
dec
or
add
jmp
jo
cmp
add
imul
add
jae
cmps
imul
scas
cmp
add
or
ins
pop
fwait
cmps
imul
into
(bad)
into
jne
jnp
add
jl
add
inc
adc
sti
adc
fucomp
cmp
fild
push
dec
inc
xchg
inc
add
fild
mov
outs
inc
add
imul
les
lock
pop
pushf
dec
in
call
hlt
mov
ins
push
das
call
into
std
scas
imul
adc
add
adc
fadd
fdiv
mov
pushf
xchg
lock
pop
imul
pop
fsub
jo
(bad)
int3
mov
mov
mov
add
xchg
add
and
fs
(bad)
mov
mov
jg
mov
add
inc
or
xchg
sbb
jecxz
adc
pop
sti
mov
add
(bad)
add
cmovl
lock
mov
lahf
inc
mov
pop
push
shl
and
hlt
sahf
xor
add
mov
adc
sti
mov
push
adc
test
mov
xlat
pop
stos
pop
je
nop
pop
dec
shl
fcom
inc
and
jl
jp
inc
add
pop
jl
pop
repnz
pop
or
sbb
add
shl
or
jo
push
pop
out
or
imul
sbb
dec
pop
dec
cmp
fstp
inc
add
out
(bad)
mov
add
adc
pop
test
mov
shr
ret
cmps
sti
outs
ja
rol
adc
pop
adc
sbb
hlt
pop
jae
cmp
pop
adc
pop
in
add
dec
or
idiv
and
outs
gs
mov
adc
cwde
mov
rol
cmp
cdq
movs
mov
and
test
xchg
or
add
nop
or
adc
nop
add
sbb
sbb
stos
fadd
je
mov
sub
pop
imul
inc
add
imul
imul
jne
add
pushf
pop
je
xor
cmp
inc
add
femms
push
stos
call
cmps
add
fwait
out
jle
push
test
add
sub
mov
sbb
aam
in
mov
mov
inc
mov
inc
add
int3
inc
jge
push
jb
(bad)
call
jge
rcr
rol
add
inc
add
adc
aas
inc
mov
pop
mov
ret
mov
pop
add
jg
push
push
lea
mov
inc
nop
mov
xor
or
out
int3
push
push
inc
call
push
or
push
pop
call
push
push
adc
add
or
pop
rol
cmp
call
mov
and
pop
mov
inc
inc
test
fnstsw
idiv
jne
and
add
nop
mov
add
adc
or
jbe
jg
test
je
sahf
push
or
add
jne
mov
sti
pop
push
adc
push
pop
sub
lahf
push
push
push
mov
dec
neg
ds
arpl
add
in
cmp
mov
rcl
mov
jmp
add
ud0
fst
pop
add
add
(bad)
sub
sbb
add
inc
and
add
xchg
mov
jb
push
outs
push
popf
ficomp
je
jb
jb
xlat
cmp
loopne
stc
mov
mov
dec
dec
inc
gs
ins
sti
mov
push
jno
jb
dec
inc
push
push
add
xor
cwde
sbb
dec
adc
adc
xchg
cmp
daa
push
push
inc
push
adc
xchg
push
jo
adc
(bad)
out
test
arpl
outs
jne
inc
ins
popa
jae
dec
fldlg2
into
adc
mov
jae
xchg
jae
dec
push
nop
mov
jmp
fist
push
int3
inc
jg
pop
dec
jne
je
xchg
mov
pop
xchg
dec
push
popa
cmp
cdq
or
sbb
mov
inc
jo
push
out
ins
data16
in
pop
aas
mov
std
dec
popa
outs
cmp
jp
inc
jmp
fsubr
pop
aaa
inc
add
push
mov
dec
add
stos
and
icebp
sub
mov
repnz
mov
fsubr
jne
mov
jmp
push
mov
add
or
pop
jmp
xchg
or
jae
jae
mov
mov
cmc
adc
mov
add
inc
pop
pop
mov
pop
fxch
cli
sbb
je
mov
or
inc
xor
mov
call
and
shl
jg
adc
mov
cmp
test
push
mov
pop
fadd
dec
in
outs
retf
ret
mov
pop
add
or
pop
push
aaa
inc
push
adc
(bad)
out
inc
pop
sbb
jmp
mov
out
pop
add
mov
dec
fdiv
jmp
mov
js
sete
movlhps
inc
mov
cmp
jl
push
mov
out
inc
adc
push
push
outs
mov
mov
je
mov
add
mov
ret
pop
mov
add
inc
movs
cmps
cdq
dec
push
ja
push
call
sbb
cmp
pop
mov
mov
inc
icebp
call
movs
xlat
jbe
frstor
je
mov
xor
xchg
call
add
lock
xchg
rol
dec
mov
fsubr
inc
sar
inc
dec
jne
aam
xor
sub
dec
clc
dec
dec
jne
xor
js
mov
jmp
xor
test
stos
pop
imul
push
out
sbb
or
add
jmp
push
pop
pop
js
lock
jne
test
jne
mov
add
dec
adc
call
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
dec
mov
mov
mov
mov
mov
mov
mov
cld
cli
(bad)
out
pop
push
push
push
mov
pop
pusha
push
cmp
xor
jne
adc
stc
nop
lahf
push
fist
pop
lea
call
xchg
aaa
mov
and
mov
nop
push
mov
iret
pop
and
movs
push
pop
clc
sub
ret
fimul
xlat
inc
sbb
repnz
push
ja
xchg
repnz
cmp
je
sub
sbb
inc
sub
je
jmp
sub
je
ja
call
je
jmp
lea
inc
pop
pop
int3
lea
push
mov
sbb
xor
clc
call
or
jo
dec
fnstsw
add
or
jnp
adc
mov
outs
call
es
sub
je
sub
je
jmp
loopne
jge
sbb
dec
inc
ins
mov
mov
sub
cmp
xchg
leave
dec
lock
or
mov
mov
pop
test
shl
mov
mov
or
mov
ret
mov
rcl
(bad)
push
pop
and
inc
mov
pusha
push
adc
add
fmul
pusha
stos
addr16
cs
paddq
int3
mov
push
add
adc
inc
cld
pop
push
xchg
add
mov
(bad)
mov
sbb
push
mov
mov
cmp
sub
retf
mov
fdiv
xlat
and
mov
pop
pop
leave
mov
sub
mov
mov
mov
inc
adc
inc
cmp
fbld
sbb
iret
mov
sbb
push
and
(bad)
fisttp
pop
mov
mov
inc
xlat
jmp
fcom
fisttp
xor
push
sub
cmp
mov
(bad)
or
adc
mov
xor
push
jg
or
loopne
mov
mov
add
inc
mov
push
add
sbb
mov
inc
pop
add
cmc
pop
push
jno
out
mov
add
or
lock
mov
jmp
mov
call
sbb
mov
mov
mov
mov
mov
mov
jmp
call
push
ins
mov
push
lea
lea
movs
add
pop
lea
mov
jmp
inc
mov
xor
test
fbstp
xor
mov
mov
pop
or
fimul
rol
cmp
cli
lock
mov
repz
mov
mov
fnsave
ret
or
mov
ror
inc
xchg
xor
mov
and
es
adc
add
shl
ror
neg
push
neg
push
lea
rcl
repz
fadd
inc
rcl
push
mov
pop
ret
dec
adc
sbb
popa
dec
fist
ror
ja
inc
pushf
rcl
sti
cmp
jne
xor
jmp
std
mov
lea
fcomi
dec
pop
clc
push
push
(bad)
pop
clc
xchg
mov
mov
mov
cmp
icebp
mov
jmp
push
inc
hlt
(bad)
cmp
jne
or
xor
mov
cdq
push
push
jne
addr16
out
add
out
add
sar
jne
shl
call
jne
push
and
mov
fcom
fdiv
in
and
enter
sbb
imul
jmp
les
xor
idiv
mov
test
ffreep
retf
mov
and
jge
cmp
inc
add
out
je
mov
mov
scas
in
loopne
je
push
lea
jmp
pusha
icebp
mov
inc
mov
cmp
inc
in
mov
mov
sub
inc
mov
lea
push
push
push
inc
lock
popf
pop
add
sub
gs
sub
loope
fnstsw
dec
push
lea
push
mov
mov
push
mov
xor
fcomp
iret
adc
cmp
fdivrp
fdivr
sbb
lea
push
ins
fdiv
cmp
add
mov
or
jmp
push
bound
and
inc
inc
rol
push
leave
adc
sar
dec
clc
cs
lock
movs
movs
pop
fld
cmp
test
sub
adc
add
setne
out
or
icebp
jle
fld
mov
xor
test
jl
mov
adc
mov
inc
lock
or
push
cmp
mov
bswap
pop
pop
lahf
inc
push
fdivr
mov
jo
push
push
popa
ret
xor
cmps
sub
pop
add
inc
and
lea
cmp
push
fmul
add
pop
add
and
jne
push
mov
in
pop
fcom
or
lds
sbb
dec
jne
mov
inc
pop
jle
or
push
mov
in
adc
jl
push
bound
in
nop
add
in
cmp
fisub
mov
add
jne
sbb
out
xchg
xchg
push
mov
dec
sbb
je
inc
jne
adc
mov
adc
clc
push
rol
aam
pop
xchg
ret
mov
xor
sbb
cmp
dec
or
push
pop
in
mov
(bad)
ja
or
dec
hlt
ror
or
add
xchg
ror
clc
lea
push
and
push
push
adc
push
sub
leave
add
sbb
rol
sbb
jo
lock
pop
mov
js
cmp
and
push
jp
add
and
or
sbb
xchg
ret
jmp
in
push
mov
xchg
retw
mov
mov
mov
pusha
test
xchg
(bad)
add
dec
(bad)
or
jmp
nop
ret
out
lock
leave
push
jge
ror
call
push
mov
push
mov
xchg
out
mov
jmp
jg
cmps
adc
or
add
(bad)
retf
loopne
mov
in
pop
fdiv
ret
inc
aas
cmp
push
adc
or
cwde
je
push
add
hlt
xor
jecxz
fstp
and
jl
mov
push
cld
je
cmp
add
and
or
jne
mov
sbb
xchg
dec
cmp
jo
cmp
xchg
xchg
jmp
mov
mov
xor
xchg
lahf
add
mov
pop
add
xor
repz
or
js
add
loope
(bad)
aaa
cld
add
mov
cdq
xor
sub
cmp
mov
ja
sub
adc
mov
fadd
push
add
add
lea
(bad)
sbb
inc
add
fsubr
xor
cmp
out
inc
add
xor
aaa
sbb
hlt
mov
cmps
lea
mov
add
mov
add
jmp
sahf
call
xchg
push
sbb
std
cmp
je
xchg
sub
push
mov
mov
pop
xchg
mov
or
mov
mov
mov
shl
xor
sub
bound
clc
je
lea
call
arpl
fadd
push
sub
retf
or
push
sar
mov
push
out
jmp
jmp
add
lock
fild
and
(bad)
(bad)
xor
cmp
adc
add
inc
fisub
pop
lods
and
and
xor
adc
jmp
xor
pop
or
mov
add
add
pop
add
sub
test
pop
jo
dec
add
test
aas
fadd
jne
push
push
mov
mov
out
jmp
or
fs
lds
mov
mov
sub
or
test
arpl
mov
inc
push
jmp
sub
sbb
adc
cmpps
shl
scas
je
mov
call
lea
in
addr16
add
sub
jl
or
call
or
mov
loop
outs
and
pop
xor
bound
cmp
ins
idiv
push
push
adc
(bad)
(bad)
push
adc
mov
cmp
mov
sub
fs
cmp
dec
movs
(bad)
lea
mov
mov
sub
test
jle
mov
sub
mov
fild
mov
dec
or
or
mov
stc
fstp
fwait
jmp
and
(bad)
mov
sbb
mov
sub
test
jle
mov
mov
sub
xor
push
or
push
adc
aam
(bad)
cmp
sub
mov
mov
loopne
lahf
fucom
add
adc
jmp
verw
adc
addr16
jne
or
jmp
or
leave
xor
shl
adc
mov
push
mov
add
ret
test
je
mov
xor
jmp
xchg
ja
jne
xor
cmp
clc
mov
call
add
fprem
mov
dec
add
push
clc
sahf
add
sbb
cmp
jne
add
pop
add
jmp
cmc
jle
fs
mov
mov
xchg
add
in
inc
dec
add
(bad)
dec
in
mov
inc
mov
jb
cld
mov
mov
push
push
rcr
test
sbb
add
out
sti
in
rol
mov
clc
jno
sbb
in
ja
cmp
jne
xor
inc
cmc
push
pop
loopne
je
mov
les
jmp
lea
mov
icebp
mov
push
inc
ja
ja
clc
mov
mov
in
mov
mov
mov
clc
mov
push
fdivr
cmp
push
dec
mov
add
sub
aam
cs
push
and
and
es
push
lods
add
inc
mov
enter
jmp
repnz
mov
lods
mov
dec
jo
mov
cld
mov
add
add
mov
daa
test
dec
fwait
inc
push
aas
sbb
call
mov
jmp
pusha
inc
mov
adc
sbb
out
iret
or
jae
mov
sbb
jae
mov
cmp
inc
xor
mov
or
repnz
lahf
mov
js
add
test
inc
lahf
or
or
mov
arpl
xor
and
sbb
adc
mov
iret
and
mov
dec
cwde
fidiv
out
stos
mov
mov
and
sub
jmp
popa
mov
inc
push
je
inc
push
mov
push
xchg
test
and
cmp
jmp
adc
push
adc
ret
ss
out
cld
loopne
sub
jnp
add
sbb
add
mov
add
inc
pop
test
mov
(bad)
and
jne
cmp
je
aaa
je
inc
(bad)
sub
mov
call
push
call
jne
add
mov
adc
mov
pusha
pushf
xchg
cmp
jmp
clc
jb
sbb
xor
or
adc
jo
push
jl
ret
cmp
pop
add
jge
inc
mov
adc
push
test
(bad)
push
jl
enter
ret
push
or
dec
inc
xor
out
aad
adc
retf
inc
inc
in
xlat
mov
sbb
push
mov
push
adc
mov
adc
sbb
adc
jno
std
push
popf
sbb
xor
push
add
js
bswap
jne
adc
xor
adc
mov
cmp
daa
cwde
js
mov
popa
jno
add
rol
cmp
shr
push
push
mov
je
xor
outs
add
jne
call
out
adc
nop
int3
fimul
sub
icebp
push
pusha
mov
test
je
mov
push
mov
push
sub
hlt
jae
nop
fmul
mov
sub
dec
add
adc
xor
mov
mov
rol
jmp
dec
add
mov
mov
or
test
mov
jg
add
test
pop
rol
sbb
(bad)
pushf
xor
loopne
push
add
pop
mov
pushf
push
inc
xor
add
jb
retf
mov
inc
hlt
mov
fiadd
pop
ret
lock
inc
add
mov
and
loope
cmp
div
nop
mov
fsub
jmp
cmc
call
inc
add
dec
hlt
jne
add
mov
(bad)
adc
hlt
xor
push
sub
mov
pop
adc
xor
xor
out
mov
outs
mov
add
hlt
not
add
inc
fild
sub
inc
ret
mov
and
rol
add
not
jle
push
aaa
pop
add
jle
sbb
test
jne
pop
ret
imul
div
jne
jnp
pop
in
add
dec
cld
aaa
adc
ror
or
push
mov
xchg
mov
add
fsub
ds
mov
inc
cld
mov
cwde
and
pop
pop
adc
push
loop
pop
pop
mov
ss
rol
jl
aas
mov
push
mov
xchg
pop
sub
fistp
out
jae
je
add
aas
inc
cld
not
(bad)
fmul
je
sbb
adc
or
jmp
inc
jo
pop
and
sub
or
xchg
(bad)
rcl
add
push
enter
mov
mov
cmp
bound
and
push
adc
push
pop
jge
scas
daa
or
sub
test
mov
jno
into
push
rcl
mov
add
mov
stos
push
sub
add
je
dec
je
dec
je
jmp
cmp
je
mov
sbb
inc
dec
adc
mov
ja
or
add
or
push
mov
sbb
loop
ss
dec
push
sbb
je
sub
cmp
cmp
push
dec
mov
je
mov
fucomip
dec
jbe
push
or
and
sbb
sbb
mov
push
jb
sub
call
dec
mov
dec
imul
clc
sbb
dec
in
pushf
sbb
mov
bound
inc
pusha
mov
fmul
lods
cld
pop
jbe
xlat
adc
xor
push
mov
pop
arpl
icebp
fild
adc
mov
cmp
je
lea
add
mov
loopne
push
rcl
mov
out
icebp
cld
xchg
mov
fwait
add
xor
sub
imul
sub
or
sbb
mov
pop
fsub
add
call
out
add
and
inc
les
and
inc
or
or
lds
out
in
mov
call
(bad)
test
pop
push
pusha
cli
add
add
fcomp
stos
dec
xor
popa
cmp
fild
int
call
mov
inc
jo
mov
push
dec
pop
cmp
xchg
lea
push
push
nop
xor
jne
xor
push
test
in
hlt
inc
or
aaa
into
xor
push
cwde
adc
aaa
xchg
std
push
sbb
xor
cmp
push
outs
jo
xor
add
mov
ret
push
adc
inc
inc
sub
inc
dec
push
and
or
(bad)
sub
or
in
mov
lock
pop
and
jge
mov
(bad)
fstp
and
push
pop
xchg
cmp
push
clc
loopne
cmp
mov
xchg
cmp
in
push
and
inc
adc
scas
jnp
jo
sbb
pop
inc
pop
sti
mov
mov
nop
mov
scas
xor
scas
push
fldenv
jbe
dec
mov
mov
mov
cmp
pop
mov
mov
xchg
jne
sbb
mov
cmp
mov
jg
lods
ins
adc
xor
adc
and
add
jl
out
pop
or
mov
call
mov
pop
cmp
inc
je
inc
cmp
mov
sub
cmps
inc
mov
push
inc
add
popa
call
add
add
or
fwait
(bad)
push
sbb
inc
sbb
inc
add
inc
jo
cmp
inc
push
add
inc
pop
add
sbb
cmps
pop
pop
add
sbb
inc
(bad)
jg
add
inc
jp
jmp
mov
mov
push
add
and
xchg
xor
clc
cmp
inc
fild
mov
ins
push
aas
not
cmp
pusha
xchg
cmp
pushf
fsub
push
mov
mov
(bad)
mov
jb
cmp
pusha
inc
jmp
sub
imul
(bad)
adc
inc
ins
add
inc
push
sbb
test
fnstcw
adc
add
hlt
jnp
xor
daa
mov
ret
pop
icebp
aaa
add
push
setne
ret
mov
xor
icebp
add
jae
je
cld
xchg
lock
popa
cmp
and
push
into
repz
mov
call
push
add
lds
xlat
mov
sbb
call
loopne
pop
inc
sub
mov
mov
das
push
push
xor
sbb
sbb
mov
push
jl
call
or
sbb
pop
sub
sbb
push
ins
test
je
mov
mov
jge
fcomp
popa
je
pop
adc
ror
aaa
add
mov
les
ins
and
or
sub
aas
pop
inc
sub
ror
add
push
adc
inc
ins
(bad)
jg
jge
ins
les
mov
mov
test
prefetcht1
adc
xchg
rcr
cwde
dec
add
sti
jmp
mov
mov
lahf
fs
jbe
or
mov
push
xor
push
xchg
inc
push
inc
je
cmp
jmp
add
inc
inc
aas
mov
call
add
outs
pushf
or
sbb
dec
mov
mov
mov
sub
retf
add
or
xchg
mov
and
jle
mov
loopne
retf
mov
and
xchg
or
xor
cmp
mov
std
dec
adc
jne
shl
cmp
jmp
adc
out
icebp
cmp
clc
jne
adc
cmc
push
dec
push
push
imul
loope
jne
test
add
mov
cmp
mov
cmp
add
cmp
jne
add
(bad)
inc
cmp
je
cmp
je
cmp
je
test
cs
cmp
ret
jmp
pop
enter
jmp
sub
je
test
je
sbb
mov
jle
std
inc
dec
push
mov
addr16
inc
dec
loope
addr16
push
clc
push
pop
or
or
out
jg
ror
jg
dec
or
into
jb
jae
jne
sub
(bad)
adc
adc
mov
inc
dec
je
xor
mov
sub
xor
inc
and
or
cmp
or
xchg
inc
add
(bad)
xor
sbb
mov
jne
js
cwde
jge
iret
xchg
adc
call
mov
ja
lock
test
shl
inc
xchg
test
inc
mov
scas
test
jmp
cmp
jne
inc
xchg
mov
jp
movs
jmp
test
dec
push
hlt
push
ret
add
inc
dec
mov
or
inc
or
adc
cmp
adc
sbb
dec
mov
div
inc
or
dec
adc
scas
mov
mov
imul
sub
(bad)
std
adc
mov
mov
mov
xchg
std
rol
cmp
adc
jbe
mov
scas
cmp
sub
or
sbb
cmp
pop
add
loopne
xchg
bound
inc
lock
inc
iret
jmp
ret
mov
mov
and
mov
add
lock
mov
bound
xor
dec
push
mov
(bad)
enter
add
adc
lea
rol
and
cwde
jge
shl
sub
int3
pop
cmp
jmp
add
or
(bad)
popa
call
sti
push
mov
inc
cld
xchg
xor
push
add
iret
add
push
xor
mov
shl
mov
sahf
mov
jge
and
adc
clc
jne
mov
cld
jge
xor
mov
cld
xor
mov
push
ja
add
sahf
xor
sbb
into
jns
and
shr
and
cmp
mov
dec
adc
int
or
icebp
pusha
and
mov
mov
sbb
arpl
(bad)
test
div
(bad)
call
sub
adc
add
mov
mov
js
test
fld
lea
push
scas
mov
mov
mov
mov
jl
mov
dec
mov
push
add
mov
ret
imul
out
xor
or
mov
sub
push
sub
add
push
shr
or
cmps
fadd
sahf
dec
inc
inc
dec
mov
scas
xor
jb
add
daa
fiadd
jle
xor
add
int3
xor
jmp
sti
or
cdq
mov
aaa
inc
or
xor
add
inc
(bad)
push
inc
push
pcmpeqd
lahf
dec
hlt
push
inc
aas
xor
jecxz
adc
xor
inc
or
sbb
inc
lea
mov
test
xor
or
jne
inc
scas
out
add
mov
retf
inc
add
inc
hlt
inc
mov
adc
xchg
lock
js
js
pop
in
retf
inc
mov
add
inc
cld
inc
mov
mov
add
mov
fdiv
enter
sub
sub
shl
push
fadd
and
imul
push
pop
je
call
mov
stos
xchg
jne
mov
xor
dec
cli
xchg
fcomip
je
pop
jne
mov
or
and
hlt
or
shl
add
icebp
and
inc
lods
xor
adc
test
in
adc
sbb
cwde
repz
imul
es
and
push
sub
addr16
add
nop
dec
lock
add
(bad)
cmp
je
je
mov
scas
jmp
mov
adc
loopne
push
push
stos
xchg
mov
jmp
mov
or
inc
add
push
sub
or
sar
lock
inc
push
add
neg
sub
fnsave
dec
inc
sub
es
sbb
mov
adc
or
cs
(bad)
push
aas
dec
add
ret
int3
fdiv
cmpunordps
push
and
enter
sub
dec
xchg
or
dec
or
fist
fadd
adc
dec
and
mov
out
mov
call
add
mov
or
out
add
xchg
ss
xor
add
and
dec
or
in
setle
and
ret
adc
pop
push
and
je
add
xor
jno
xchg
inc
and
pop
shl
dec
or
add
dec
pop
je
mov
test
je
ds
and
push
push
icebp
shl
adc
popa
aam
aas
in
sbb
inc
push
and
add
or
push
paddd
adc
pusha
jne
mov
sbb
push
dec
dec
adc
add
cmps
stos
push
push
outs
adc
or
jno
cmp
je
sub
into
push
pop
popf
add
cld
mov
mov
test
test
inc
xchg
adc
imul
mov
push
mov
mov
and
pop
or
jo
packsswb
pop
mov
out
and
sub
stc
mov
pop
cdq
push
cs
add
dec
mov
sbb
sub
aas
psubb
pop
push
je
(bad)
shl
pop
dec
int
pop
push
sbb
cdq
push
cdq
xor
ja
sbb
ret
nop
cmp
je
mov
sub
leave
daa
pop
nop
femms
mov
mov
push
push
mov
mov
sbb
ret
rol
adc
rcl
jl
adc
mov
jmp
(bad)
pop
sbb
mov
mov
jno
mov
push
mov
cmps
mov
(bad)
inc
inc
in
cli
add
pop
pop
(bad)
mov
fcomp
out
or
pop
sbb
shl
arpl
jl
jno
xchg
sbb
push
(bad)
aad
cmp
sar
aaa
mov
or
add
cmp
push
inc
dec
int
dec
xchg
xor
(bad)
cmp
je
mov
mov
mov
cmp
out
clc
dec
add
inc
push
add
je
sbb
adc
push
mov
push
push
add
push
sar
jp
add
dec
push
std
sub
js
add
mov
add
(bad)
mov
or
je
mov
pop
fwait
je
rol
jne
pop
ss
js
mov
pause
cdq
addr16
sbb
mov
mov
mov
cmp
nop
pop
je
mov
dec
or
sub
cmp
leave
fcos
push
jo
adc
inc
pop
inc
or
inc
retf
xchg
pop
pop
dec
leave
xlat
xor
pop
dec
mov
pusha
jmp
dec
inc
and
push
js
adc
xchg
ins
in
mov
aad
imul
fcom
pop
add
sbb
or
push
sub
cmp
add
mov
jl
mov
mov
movs
xchg
leave
push
pop
jecxz
jl
pushf
sbb
ins
mov
(bad)
inc
jl
mov
mov
sub
mov
cmp
push
add
xor
(bad)
pop
call
inc
push
add
or
aad
(bad)
(bad)
mov
xor
shl
xchg
push
add
mov
int
pusha
popa
add
mov
(bad)
fsub
xchg
push
mov
jmp
mov
inc
(bad)
shr
xlat
pop
pusha
ror
or
or
sub
push
and
mov
stos
test
add
mov
inc
(bad)
cld
mov
mov
cs
push
cld
cwde
pop
out
add
xor
dec
or
fadd
pop
(bad)
inc
cmp
inc
push
inc
je
lea
xor
add
lea
clc
aas
push
inc
or
inc
out
jg
xor
(bad)
pop
fmul
test
jne
test
jg
jae
adc
cmp
jmp
or
cld
adc
adc
test
and
jg
sti
add
pushf
test
push
in
and
sbb
popf
push
add
cmp
mov
leave
add
add
jne
push
pop
push
movs
test
mov
mov
sahf
mov
fcomp
push
in
adc
jno
sub
test
sti
jb
add
aas
jecxz
in
jne
rcl
adc
fidiv
xlat
inc
leave
jae
push
sahf
push
jmp
call
mov
sbb
pop
mov
rol
packssdw
jo
or
call
adc
clc
add
js
jnp
cmp
in
dec
test
mov
test
push
in
pop
xchg
loopne
push
mov
sub
out
adc
or
test
inc
iret
in
call
ins
xchg
or
mov
mov
mov
mov
add
push
xor
enter
xchg
dec
push
push
adc
pop
test
jecxz
jo
dec
pop
push
shl
ss
xor
push
aaa
daa
dec
mov
nop
stos
loopne
sbb
ret
outs
jecxz
adc
add
lds
sub
mov
sbb
inc
pop
adc
mov
das
or
mov
jb
inc
mov
mov
out
inc
add
add
adc
jb
pop
mov
(bad)
mov
cmp
inc
add
mov
idiv
jnp
jo
sbb
push
je
or
jne
mov
test
je
push
xchg
pop
loopne
push
cmp
sub
mov
and
or
add
jle
scas
ja
pop
loopne
add
add
and
idiv
mov
xor
rcr
mov
xchg
jbe
out
cmp
sbb
push
add
xchg
add
xor
add
mov
add
mov
pop
inc
hlt
inc
push
add
dec
adc
dec
or
pop
retf
push
inc
add
pop
and
fdivr
pop
pop
sar
xor
adc
je
xor
push
mov
sbb
adc
xchg
call
fisttp
add
cmp
adc
call
jne
pop
pminsw
mov
dec
inc
shl
call
icebp
ja
ja
in
mov
sbb
inc
add
mov
mov
ins
mov
or
inc
js
call
fild
fmul
fild
fsubp
out
ins
or
mov
fild
mov
and
fwait
lea
fld
sbb
mov
fld
cmp
and
mov
inc
add
mov
add
mov
lea
or
mov
cvttps2pi
inc
lea
xor
sbb
pop
je
je
ja
push
rol
mov
push
ss
mov
adc
cmp
push
inc
push
mov
out
loope
das
in
jae
or
mov
sbb
movhlps
xchg
(bad)
xor
mov
or
std
dec
sbb
hlt
sbb
iret
mul
fcomi
inc
dec
mov
mov
outs
(bad)
pop
pusha
not
dec
push
cmp
adc
out
call
jno
mov
loop
std
or
leave
setl
fld
(bad)
jge
lock
mov
test
je
or
or
fimul
lea
mov
lahf
fst
mov
jmp
adc
dec
mov
js
xchg
or
and
addr16
std
out
mov
icebp
lea
movs
movs
mov
out
jbe
clc
or
je
test
(bad)
hlt
fld
push
add
push
mov
mov
ror
xchg
inc
xchg
xchg
out
add
add
(bad)
adc
push
mov
dec
dec
sub
in
add
ret
ret
dec
mov
inc
push
pop
test
jl
sar
(bad)
cld
sbb
push
add
lea
int
jmp
or
inc
pop
pop
clc
inc
push
xchg
mov
lock
sbb
push
xor
ret
es
je
add
push
mov
lock
inc
xlat
mov
push
push
mov
mov
sub
sub
push
mov
push
mov
add
inc
jbe
arpl
and
inc
in
sub
push
push
mov
sbb
dec
pop
aaa
call
sub
pop
sti
sub
push
push
inc
inc
in
sub
pop
mov
push
sbb
sbb
mov
mov
cli
imul
ret
ja
mov
or
inc
in
ret
cmc
mov
push
mov
add
lahf
jo
fiadd
mov
imul
mov
xchg
adc
icebp
jb
cmp
mov
jne
rcl
adc
mov
(bad)
push
push
cmp
mov
mov
add
sub
inc
add
add
je
jmp
adc
pop
fidivr
and
or
push
mov
cwde
inc
or
mov
js
popf
shl
and
fidiv
shr
fwait
call
xor
das
dec
mov
mov
jmp
fucomip
and
or
inc
and
mov
and
xor
and
call
cmps
out
loopne
call
(bad)
dec
test
cmp
ins
shl
xor
inc
add
dec
in
rol
adc
add
mov
jmp
xchg
xchg
pop
mov
fmul
add
ja
push
mov
in
les
push
inc
call
push
in
int3
inc
cmp
add
pop
mov
lds
push
js
int3
push
xchg
fild
add
mov
mov
jne
jg
icebp
int3
lea
jecxz
sub
enter
outs
mov
mov
sbb
data16
inc
push
xchg
test
aaa
add
je
jg
retf
mov
mov
add
adc
bound
xor
mov
test
je
in
xchg
mov
xor
jg
mov
push
or
pop
mov
jle
mov
or
push
cld
mov
push
lea
icebp
call
rcr
inc
mov
cmps
and
imul
push
xor
mov
into
dec
push
inc
fsub
mov
mov
jecxz
cmps
mov
iret
or
push
jge
ror
jne
xchg
xor
addr16
or
sub
inc
sbb
add
and
add
sbb
je
push
dec
and
jae
dec
add
pminsw
mov
add
lds
retf
rcr
add
rcr
nop
push
push
mov
dec
or
dec
outs
xchg
add
inc
add
stos
sub
xchg
sbb
push
or
and
inc
push
inc
add
cmp
je
jae
sub
or
sbb
fdiv
xor
push
pop
mov
inc
add
sbb
std
sub
jae
pop
hlt
outs
ret
mov
sub
jae
mov
dec
and
mov
jp
pop
jp
bound
fmul
dec
cwde
xor
xor
or
sbb
and
sbb
mov
xchg
leave
scas
or
xchg
or
(bad)
mov
or
(bad)
call
es
or
retf
clc
dec
add
mov
out
pop
loopne
outs
inc
jg
xlat
cmp
mov
sub
fwait
cli
gs
push
adc
je
mov
cmp
stos
je
cmp
cmp
ss
inc
(bad)
pop
aaa
rcl
dec
(bad)
lock
push
je
stc
mov
test
jbe
ss
xor
push
mov
adc
jae
mov
mov
jmp
adc
adc
push
or
or
mov
fs
sti
adc
or
(bad)
cmp
jle
mov
cmp
jle
(bad)
or
fild
add
jle
adc
(bad)
xor
mul
push
sub
or
mov
jo
repz
adc
push
mov
pop
cmp
rcl
neg
push
lock
push
or
cld
xchg
mov
lea
pop
int
sbb
aam
adc
fwait
xor
mov
mov
dec
mov
clc
mov
mov
sub
push
lahf
je
mov
push
call
mov
xchg
jnp
or
and
idiv
(bad)
std
sub
dec
mov
push
pop
add
ret
mov
mov
nop
inc
int3
rol
lock
sub
sub
fisubr
add
xchg
ret
call
adc
(bad)
jae
mov
test
sbb
cli
shl
add
sbb
and
dec
or
sar
mov
aaa
cmp
push
and
ja
add
add
hlt
jb
cmp
je
add
(bad)
aas
cmp
xchg
dec
div
jo
cmp
arpl
mov
rol
cmp
test
fdivr
push
xor
add
je
xchg
add
mov
add
je
dec
je
and
aaa
dec
je
jmp
mov
ins
(bad)
call
sbb
(bad)
(bad)
pop
cmp
cs
mov
(bad)
mov
dec
push
add
jle
and
jmp
inc
adc
or
aas
add
inc
je
mov
adc
inc
sbb
push
out
call
mov
outs
jmp
call
mov
data16
inc
div
icebp
mov
or
cmp
or
and
add
dec
add
(bad)
mov
loopne
mov
or
pop
dec
xor
add
inc
sar
dec
je
dec
je
jmp
mov
sub
test
inc
add
push
xchg
mov
jmp
mov
test
jne
xor
rol
pop
jmp
into
add
inc
push
cmp
sub
inc
add
adc
dec
dec
push
out
adc
add
mov
push
lds
data16
mov
nop
mov
xchg
inc
mov
cmp
cld
mov
sti
adc
push
or
sub
clc
fild
inc
pop
setne
pop
lock
mov
fcom
imul
jbe
add
push
in
add
clc
push
push
movs
mov
sbb
fiadd
sbb
jmp
or
inc
inc
and
mov
cmp
es
loope
mov
sbb
mov
cmp
lock
adc
call
inc
sbb
jne
and
inc
fbstp
inc
retf
sar
jmp
or
xor
sbb
stos
nop
cmp
push
adc
xchg
call
sar
push
pop
sub
add
dec
dec
add
jp
fmul
mov
xchg
xchg
or
jbe
arpl
stos
aas
stos
jmp
inc
push
adc
mov
cmp
jg
or
jmp
jecxz
push
sbb
pop
jmp
mov
add
int3
mov
or
(bad)
xor
jo
cli
aad
jmp
movsx
push
pop
ret
and
add
es
mov
add
aad
lock
mov
push
add
or
and
or
add
push
mov
sbb
jl
rcr
and
nop
add
dec
xor
push
cmp
inc
sbb
mov
inc
lahf
push
fldl2t
shl
rcr
mov
inc
jl
jmp
cli
fisttp
cmps
cmp
add
sahf
pop
xor
add
imul
dec
gs
adc
sbb
jle
add
cmp
pop
add
adc
mov
call
or
add
pop
and
dec
jne
add
adc
or
add
mov
cmps
neg
push
or
push
lock
xor
or
or
sbb
icebp
daa
popa
nop
and
daa
inc
add
daa
push
dec
jg
push
jmp
dec
std
rcl
in
call
or
push
emms
call
scas
jb
ret
bound
stos
test
cmp
sub
mov
add
sub
sahf
lock
add
aam
jmp
test
adc
dec
or
jl
xchg
jnp
cmps
dec
loop
pop
add
or
data16
or
lods
fistp
push
xchg
cmp
push
cmp
daa
push
mov
mov
mov
jbe
mov
movs
idiv
fs
mov
push
add
and
jmp
pop
int3
push
add
es
jge
adc
inc
lea
bound
pavgw
mov
and
mov
add
xlat
pop
rol
push
cmps
das
ror
sbb
push
or
pop
pcmpeqd
or
mov
jae
mov
rcl
push
xor
pop
adc
pop
lock
sbb
jbe
push
mov
mov
dec
inc
stc
push
ds
xchg
mov
inc
push
add
push
dec
cld
cmp
leave
mov
pop
ret
pop
clc
test
mov
push
or
or
shl
mov
mov
std
call
clc
or
or
or
adc
push
inc
jbe
jle
mov
or
or
jo
jnp
and
pop
push
in
push
sub
adc
(bad)
push
inc
push
add
sbb
inc
sbb
jne
cmp
je
xlat
dec
add
add
mov
das
add
push
ss
dec
adc
je
push
inc
icebp
leave
jmp
sub
sbb
add
xor
fild
imul
pop
add
cmp
and
push
shl
or
jmp
mov
inc
rol
jmp
ret
sub
cmp
je
cld
mov
push
pop
inc
jo
inc
pusha
je
retf
stos
push
jl
(bad)
or
fdiv
clc
outs
and
add
push
movsx
mov
xor
mov
mov
sahf
or
lahf
inc
inc
jmp
mov
push
adc
push
nop
jmp
xor
fucom
or
imul
adc
mov
popf
stos
mov
pop
ror
jae
cmp
pop
and
or
outs
neg
fadd
inc
pop
not
mov
xlat
jnp
jbe
mov
dec
pop
and
nop
mov
add
mov
(bad)
push
ret
call
push
sbb
ret
nop
pop
sub
mov
adc
pop
daa
and
adc
aam
fadd
cmp
xor
pop
fidiv
pusha
sub
or
add
loop
xchg
stos
fcmovb
add
call
pop
pop
mov
jl
adc
ins
push
idiv
add
pop
mov
sub
push
ret
es
mov
mov
add
lea
mov
mov
add
cmps
add
xchg
sub
mov
hlt
ja
test
lea
mov
sub
(bad)
fbld
inc
dec
mov
sub
push
lea
mov
sub
add
dec
mov
sub
mov
add
sub
mov
add
sub
push
arpl
mov
fmul
popa
shl
stos
pop
arpl
or
retf
clc
mov
mov
adc
lds
sub
sub
pop
jmp
fadd
fisubr
inc
or
dec
popf
mov
push
mov
mov
or
pop
sbb
push
movs
jp
jp
pop
cld
rcl
cmp
and
add
ret
daa
rcr
push
ror
outs
push
xor
sbb
(bad)
inc
cmp
push
pusha
cmp
or
sbb
(bad)
addr16
or
or
inc
fnsave
cmp
xchg
add
std
or
adc
in
add
or
or
pop
std
arpl
or
mov
inc
inc
mov
js
inc
inc
mov
mov
add
je
(bad)
out
mov
lock
lods
jbe
cli
mov
fs
mov
pushf
xor
fmul
pop
je
inc
mov
pop
inc
add
or
pop
push
or
je
add
pop
mov
or
pop
inc
pop
cmps
fnsave
add
jp
mov
or
test
and
int3
cmp
sbb
xchg
mov
cmp
(bad)
je
dec
adc
stos
aas
push
mov
mov
leave
add
adc
(bad)
mov
ja
dec
xor
cmp
iret
test
ror
(bad)
sbb
mov
or
clc
test
add
ins
rcl
adc
aaa
cmp
push
inc
jne
pop
jnp
push
push
mov
loopne
push
daa
xor
mov
and
icebp
jae
ret
add
fcomp
stos
mov
sahf
jae
mov
inc
adc
jmp
out
xchg
enter
fwait
cld
inc
jo
mov
add
mov
imul
add
jns
add
ror
add
ins
cmp
ja
hlt
out
pop
add
gs
sub
mov
pop
and
jle
std
or
mov
or
adc
mov
xor
fwait
mov
xor
fwait
jae
(bad)
call
stos
inc
add
sub
jb
je
dec
je
dec
je
mov
push
mov
jmp
jb
mov
jmp
mov
add
ret
xor
js
hlt
or
mov
cmp
scas
imul
ror
and
ret
nop
push
sub
jne
mov
push
mov
lods
rcl
mov
fmul
loope
push
out
pop
pop
fstp
adc
jo
and
sbb
loopne
cmp
jne
and
jmp
sub
dec
je
or
les
or
fcom
ja
aas
mov
dec
and
jae
add
mov
mov
fisub
mov
imul
add
xlat
mov
cmp
js
shl
xchg
popa
push
mov
push
add
fwait
aam
jmp
xchg
aaa
xlat
test
je
mov
mov
mov
das
jg
(bad)
mov
jge
pop
add
test
or
call
cli
loope
ja
sub
or
pop
xor
dec
inc
nop
sbb
sbb
popa
(bad)
sub
push
cmp
cmp
scas
or
dec
adc
and
add
sbb
cwde
mov
cmp
je
test
call
jnp
mov
inc
clc
dec
fcom
mov
pop
pop
dec
les
shl
ret
sub
inc
rdpmc
je
pop
add
cli
add
cmp
mov
cmp
ret
mov
movs
jo
out
mov
mov
xor
dec
mov
mov
rol
xchg
jmp
lahf
ret
in
adc
adc
clc
sub
aad
sbb
hlt
dec
mov
das
jbe
xor
and
test
xor
fwait
jae
push
sub
test
mov
sub
call
push
push
call
mov
mov
mov
call
add
pusha
mov
mov
jg
xor
add
js
adc
mov
xor
lea
dec
add
loope
lock
jl
push
test
add
add
out
out
mov
arpl
jne
and
leave
call
add
sbb
fs
xchg
sub
out
adc
sti
cmpxchg
xchg
lock
xchg
fbld
or
sbb
out
lea
jl
dec
in
mov
push
shl
cwde
das
fidivr
sub
lds
out
adc
add
lods
stos
arpl
sub
les
(bad)
or
cwde
xor
mov
into
outs
sbb
jl
out
jne
mov
inc
xchg
mov
xchg
inc
adc
or
push
shr
add
sbb
hlt
imul
pushf
retf
int3
ror
xor
add
or
jnp
js
mov
dec
add
mov
dec
test
cdq
sub
fstp
and
mov
in
nop
cmc
test
jl
cmp
jge
mov
ret
mov
mov
add
fadd
jne
aaa
sbb
sbb
add
pop
jmp
je
and
mov
and
add
ret
or
xor
jp
jbe
cmp
or
or
inc
jb
jmp
dec
(bad)
out
nop
sub
invd
mov
dec
popf
iret
or
les
sbb
pushf
add
(bad)
addr16
dec
les
ja
(bad)
call
leave
xor
mov
cmp
ja
jmp
jmp
retf
xchg
lahf
adc
cmp
setg
jmp
mov
add
(bad)
(bad)
call
cmp
setle
jmp
mov
cmp
sbb
or
outs
loopne
dec
dec
jmp
push
dec
sbb
fwait
scas
dec
cld
xchg
xchg
push
xchg
movs
add
add
cli
mov
mov
lea
sbb
mov
push
icebp
je
push
inc
jle
sti
push
mov
push
cld
cmp
je
mov
mov
js
cdq
mov
inc
aas
jl
add
mov
mov
sbb
pop
ror
mov
sbb
xor
out
lea
adc
add
call
mov
mov
mov
xchg
or
mov
mov
dec
es
(bad)
push
sub
test
je
xor
ficom
add
adc
sub
ja
push
loopne
ror
sbb
xor
mov
idiv
jne
mov
mov
mov
sar
jns
adc
sub
mov
sbb
or
add
mov
mov
jle
jb
add
sbb
jle
jnp
fisttp
and
in
cld
mov
inc
push
call
bound
jle
test
ficom
not
lock
int
fwait
mov
jmp
inc
loopne
fdivp
out
sbb
clc
je
aam
or
mov
mov
sub
lods
sti
mov
mov
ret
jb
sub
inc
xor
add
leave
add
or
inc
add
mov
jl
xor
add
add
fadd
add
or
call
dec
inc
sti
cmp
ja
test
inc
add
inc
inc
shl
add
add
call
in
(bad)
clc
mov
add
jmp
or
sub
or
jo
fs
push
in
add
jmp
or
push
or
inc
or
sbb
ret
cld
stos
inc
pop
adc
lea
inc
pop
push
std
or
lea
push
lods
mov
sbb
or
add
or
mov
js
or
cmp
cdq
cmp
cmp
and
pop
push
dec
cmp
clc
push
push
call
ror
add
xlat
jge
jmp
inc
add
(bad)
cmp
iret
xor
inc
push
call
sub
push
and
push
adc
aas
into
sub
and
jmp
push
push
mov
pop
add
jmp
cmovo
add
cmps
scas
call
icebp
or
adc
pop
inc
test
je
inc
mov
xor
test
sbb
xchg
cmp
adc
push
add
mov
cmp
neg
jne
push
push
loope
hlt
jmp
cld
sub
dec
test
jl
sbb
jbe
and
clc
(bad)
(bad)
sti
cmp
jne
ja
jg
add
mov
and
mov
(bad)
call
dec
test
adc
(bad)
cmp
je
xor
jmp
rol
cmp
jge
test
push
in
loopne
xchg
ror
icebp
add
inc
outs
sbb
fmul
push
xor
cs
jne
lods
cmp
jl
xchg
shl
and
popa
outs
mov
data16
dec
lds
repnz
int3
pop
push
and
xor
leave
ins
add
add
ins
test
add
lahf
(bad)
inc
mov
dec
cmp
jl
mov
aas
les
int3
add
push
mov
mov
jne
sub
jne
out
ret
push
pop
ret
add
mov
push
mov
sti
sahf
cmp
movs
cld
fnstsw
push
and
cld
loop
and
and
leave
data16
mov
inc
and
jl
je
test
xchg
and
dec
icebp
pop
add
mov
rol
cmp
push
(bad)
out
int3
add
or
(bad)
adc
and
and
or
jb
xor
or
fwait
lods
pusha
adc
call
xchg
test
sub
pop
daa
std
je
cld
call
test
push
mov
sub
jbe
adc
or
or
cli
pop
xor
inc
cld
or
popa
iret
loop
pop
add
push
xchg
mov
mov
dec
neg
pusha
push
out
pop
sub
push
popf
jno
push
idiv
jge
dec
nop
inc
mov
jle
clc
lock
jne
test
je
cmp
adc
add
aam
fadd
add
push
ret
jb
dec
sahf
pop
sbb
ins
outs
add
mov
inc
outs
inc
xlat
dec
cmps
and
dec
mov
lea
inc
add
and
outs
push
cmp
call
clc
sub
sub
je
pop
add
inc
inc
jle
jbe
enter
jl
dec
push
mov
hlt
inc
hlt
xor
xor
mov
pushf
sub
dec
inc
in
push
sbb
sub
xchg
int
rcl
jnp
xchg
mov
test
adc
outs
cwde
push
(bad)
rcl
push
dec
out
and
in
xchg
jecxz
dec
test
jl
inc
std
xchg
leave
(bad)
loopne
mov
les
adc
adc
fild
jne
fsub
mov
mov
pop
dec
cmps
fadd
xor
jo
cld
mov
jmp
scas
add
cld
jmp
mov
or
cmp
popf
sbb
xor
push
pop
or
or
jae
in
scas
mul
loopne
mov
lea
xchg
add
cwde
scas
xor
inc
adc
mov
into
aas
jmp
mov
(bad)
ja
mov
cmc
test
setne
mov
call
jmp
fidivr
cmp
mov
push
dec
test
je
mov
outs
ret
dec
sbb
xchg
shr
adc
repz
mov
jmp
lea
lahf
sbb
imul
fxch
inc
cmp
add
pop
out
dec
fdiv
add
hlt
add
ror
ret
mov
add
push
or
mov
ror
add
sub
cmp
or
movs
sbb
nop
in
add
loopne
mov
dec
inc
xor
clc
das
add
inc
sub
scas
jae
loope
inc
jae
push
dec
(bad)
jmp
jp
mov
xor
call
popf
sbb
pop
jbe
cmp
test
popf
ret
int3
outs
cmp
push
sbb
pop
cld
and
xor
adc
add
ss
dec
sub
inc
stos
bound
sar
fdiv
sub
iret
sbb
sbb
push
cmp
ret
push
inc
stos
mov
in
je
mov
jmp
xor
cmp
jle
push
stos
mov
mov
sub
mov
hlt
mov
in
repnz
fistp
mov
push
or
fadd
cld
mov
mov
jmp
retf
popa
sbb
pop
and
aad
jnp
mov
pop
call
cmp
mov
pop
mov
add
(bad)
add
xor
jp
lds
adc
xor
ja
xor
inc
and
cld
jg
hlt
test
je
mov
lea
push
push
mov
div
pop
rol
mov
sub
sub
fldenv
leave
and
iret
add
ror
and
or
mov
les
shr
add
out
push
or
jmp
adc
mov
cmp
(bad)
fisttp
pop
retf
shl
adc
add
jle
cmp
push
cmp
jne
or
adc
or
(bad)
cld
repz
pop
push
mov
and
jle
into
call
push
inc
and
inc
mov
mov
add
add
test
pop
cld
sti
add
dec
push
add
pop
test
int
mov
push
call
mov
sgdtd
mov
mov
mov
mov
inc
adc
adc
inc
dec
mov
mov
test
jb
mov
jmp
mov
fwait
or
inc
and
mov
add
and
sti
nop
mov
les
inc
lock
mov
es
inc
loope
cld
lea
(bad)
int
and
jle
push
neg
les
mov
add
and
lock
dec
push
push
xchg
push
or
xchg
mov
std
aaa
add
jae
test
inc
je
mov
mov
pop
je
sub
shl
and
xor
out
jg
jmp
mov
mov
dec
add
or
lea
cmp
push
xchg
push
lods
ins
inc
pushf
mov
frstor
test
rcl
test
jmp
inc
(bad)
or
add
xchg
add
jnp
push
and
and
mov
inc
mov
mov
mov
or
or
sar
xor
and
sub
push
add
sbb
ja
push
mov
mov
push
adc
add
push
pop
rol
sub
loop
sub
jne
loopne
je
enter
ret
mov
pushf
adc
add
mov
cmp
ja
xor
retf
push
xchg
lea
cwde
add
in
xchg
ret
jecxz
in
mov
sbb
mov
mov
adc
mov
out
jb
xor
out
jno
leave
push
add
mov
jno
mov
add
push
dec
jno
cmp
inc
adc
add
add
dec
add
in
adc
inc
and
mov
inc
mov
xchg
jnp
xor
mov
cli
or
push
mov
cmp
jne
push
inc
pop
and
je
pop
mov
mov
pop
cdq
clc
cld
mov
gs
lea
push
fisubr
ss
test
test
mov
test
je
jno
or
mov
lea
arpl
sbb
push
lods
clc
cmp
mov
cmp
jne
inc
pusha
pop
inc
jo
sub
inc
sbb
push
out
mov
jmp
cmp
mov
or
mov
cmp
repz
aam
and
scas
add
std
mov
call
adc
mov
inc
gs
outs
xor
fcom
das
mov
or
sti
(bad)
fimul
cmp
cmp
inc
fs
lea
or
pop
es
sbb
clc
fs
add
vmovlpd
cmc
push
sbb
inc
out
adc
aaa
data16
push
sbb
inc
cli
rcl
add
push
daa
add
ss
xor
(bad)
and
pop
and
pusha
leave
sbb
dec
add
sub
std
mov
jb
or
xchg
rol
xor
iret
out
mov
push
pop
add
inc
mov
inc
jbe
sub
jl
inc
push
sbb
pop
adc
jne
push
imul
mov
cmp
sub
mov
mov
cmovg
cmc
sti
popf
inc
mov
mov
add
mov
cmp
adc
sub
push
or
add
lock
test
jl
inc
push
dec
inc
jg
jecxz
les
out
xchg
mov
xor
push
adc
shr
and
ret
mov
mov
mov
xor
jo
pop
sbb
outs
pop
dec
pop
pop
dec
sub
and
sbb
cs
nop
cmp
jb
cmp
sbb
pop
adc
shl
mov
std
adc
dec
les
sbb
or
xchg
mov
imul
int3
mov
test
je
(bad)
adc
or
shl
push
or
pop
push
adc
je
xor
out
pusha
cdq
jne
or
pop
cmp
or
cld
mov
pop
pusha
scas
popa
pop
ret
dec
enter
inc
ja
push
les
and
(bad)
neg
je
sbb
adc
les
scas
inc
sub
fistp
out
inc
jmp
ror
push
cld
mov
dec
pop
(bad)
pop
fwait
or
pop
mov
mov
jmp
mov
cmp
movs
inc
xor
jl
adc
mov
jne
cmp
xchg
out
dec
enter
clc
std
push
sbb
js
mov
je
ss
shl
inc
mov
push
popa
cwde
mov
mov
cmp
jl
xor
shr
lods
mov
mov
lods
pop
clc
push
xor
shr
jmp
or
sub
les
adc
cwde
call
or
xlat
or
adc
test
rcr
sbb
(bad)
jmp
out
push
inc
jo
call
ja
(bad)
call
mov
push
xchg
push
inc
pop
inc
hlt
adc
mov
sub
or
lock
mov
mov
jo
push
push
push
inc
ret
and
and
test
sub
out
add
cmp
je
xchg
push
sbb
or
js
add
add
sub
jne
pop
sbb
mov
add
shr
push
sub
xor
add
scas
in
push
push
mov
scas
cs
out
sub
mov
data16
cmp
scas
in
out
inc
add
push
push
adc
xor
mov
add
ds
pop
clc
add
cmc
neg
inc
sbb
daa
icebp
ss
mov
in
inc
nop
test
test
scas
or
sub
ror
(bad)
pop
mov
or
add
loop
ret
xor
mov
xor
jmp
jg
test
mov
int3
lea
xor
add
sbb
push
jae
jo
push
lea
mov
mov
mov
mov
js
clc
(bad)
xor
mov
mov
mov
sbb
cmp
idiv
loopne
pop
je
dec
je
sub
je
cmp
adc
dec
aaa
add
jb
(bad)
add
or
or
cmp
jne
arpl
test
adc
push
lds
clc
arpl
je
inc
push
and
test
mov
mov
cmp
sbb
dec
test
xchg
cmp
lock
aaa
fcos
test
and
je
xchg
xor
push
inc
dec
dec
int
or
pop
adc
or
push
add
loope
inc
mov
dec
push
adc
or
mov
jmp
add
sbb
xchg
movs
adc
fmul
int
add
cmp
shl
cmp
mov
loop
dec
popf
mov
sub
inc
or
in
jne
add
jmp
jb
add
jmp
mov
pop
cld
fwait
mov
add
push
adc
aam
imul
xchg
dec
mov
mov
add
jg
ins
jb
pop
pop
and
xchg
ds
cmp
sub
jne
mov
jmp
mov
aam
aad
push
sub
loopne
cli
ja
bound
sub
or
sbb
or
mov
cmp
push
cld
dec
daa
repnz
out
and
fxch
and
sbb
call
xor
cmp
icebp
push
pop
pop
sbb
mov
jmp
mov
sub
sbb
mov
sub
in
push
test
sbb
xor
jl
pop
add
cmp
in
xor
and
xchg
add
fild
or
hlt
add
test
mov
push
inc
xor
inc
shr
int3
mov
or
xor
jne
test
je
mov
push
mov
inc
push
mov
sbb
pop
inc
mov
(bad)
je
data16
add
dec
jne
or
cwde
mov
dec
popa
push
fwait
xchg
int3
fst
cmp
repz
mov
push
nop
(bad)
test
fs
gs
xchg
clc
outs
mov
push
adc
mov
mov
xchg
call
pop
jl
outs
add
push
cmp
xchg
mov
loope
in
cmp
sub
movlhps
mov
nop
out
icebp
add
cmc
or
inc
mov
xchg
lea
call
fsubr
punpckldq
inc
sbb
add
test
add
pop
dec
inc
add
or
dec
dec
xor
lea
cld
aas
fcom
add
push
test
je
retfw
lock
mov
int3
lock
push
ror
repz
and
clc
fbld
dec
push
add
pop
enter
int
dec
scas
sub
jmp
jae
push
pop
add
inc
mov
mov
mov
in
sub
or
inc
pop
or
inc
cs
cmp
test
test
rol
xchg
sub
fst
sbb
in
lds
pop
add
xor
add
nop
das
sbb
dec
mov
inc
jge
loope
pop
adc
pop
test
inc
cmp
cmp
sbb
inc
push
dec
pop
fld
inc
push
dec
inc
dec
outs
clc
and
jne
and
mov
inc
fsub
mov
inc
hlt
or
mov
add
(bad)
jg
pop
enter
ror
aad
rcl
fild
dec
push
mov
add
jmp
push
sti
adc
shl
lock
cmp
pop
test
je
aaa
cmp
pop
test
adc
jnp
and
or
dec
in
ja
jmp
xchg
inc
in
sub
call
pop
mov
or
or
mov
clc
rcl
sbb
dec
push
cmp
push
mov
ins
cwde
xchg
mov
je
in
cmp
push
mov
adc
(bad)
fiadd
push
or
lock
mov
leave
inc
xor
out
ja
popa
sbb
test
push
xchg
mov
pop
aas
jle
mov
cmp
test
iret
adc
mov
fadd
lock
ins
test
sbb
mov
lea
inc
fstp
sbb
es
pushf
or
pop
mov
pop
add
push
cs
sub
push
pop
inc
stos
pop
or
dec
xchg
ror
mov
mov
fwait
loop
xchg
out
jmp
cld
push
mov
cmp
in
push
push
aas
mov
xchg
push
pusha
das
or
ss
inc
add
cld
push
inc
jno
fs
mov
std
pop
shr
push
outs
adc
mov
sahf
stos
sbb
and
adc
or
push
fldenv
push
(bad)
sar
sub
ror
and
lock
pop
sbb
ins
inc
and
dec
and
dec
add
outs
loopne
jp
imul
add
and
popf
pusha
sbb
daa
adc
adc
mov
pop
mov
xor
in
push
xor
mov
fisub
pop
lods
outs
pop
test
xlat
mov
jno
in
(bad)
or
sbb
and
daa
xor
push
add
xor
mov
pop
iret
sbb
push
xor
pop
(bad)
jmp
stc
mov
jg
mov
cmp
jne
mov
or
add
ss
test
inc
lock
cwde
fs
test
into
in
aas
add
mov
test
cmp
push
fadd
loop
je
pusha
data16
or
pop
fstp
cmp
add
sub
dec
add
sti
mov
xor
dec
and
or
add
or
je
lahf
push
add
test
add
adc
out
dec
or
add
sbb
xor
push
int3
jg
ins
sbb
icebp
add
jno
xor
dec
ja
mov
jle
xchg
mov
or
inc
inc
loopne
inc
sbb
jne
lea
lea
and
sub
sbb
adc
sbb
sbb
es
mov
(bad)
bound
cmp
cmp
jp
pusha
xchg
test
sub
add
inc
ja
ret
fild
pop
cmp
sbb
(bad)
popa
and
sar
sub
je
add
test
cmp
or
test
jne
loopne
push
and
into
push
and
in
int3
test
cmp
push
mov
inc
neg
sbb
test
jecxz
aam
(bad)
sbb
pop
movsx
fs
add
push
jmp
cmp
mov
jne
sub
or
inc
xor
pop
inc
js
cmp
add
je
sbb
cmp
popa
sbb
pop
mov
push
adc
int3
and
adc
into
and
mov
or
rcl
jae
sbb
cmp
imul
and
inc
mov
push
not
xor
dec
ss
and
lock
mov
sub
cmp
das
(bad)
je
sbb
call
mov
sbb
rcl
cmp
mov
xor
lahf
cli
pop
out
daa
xchg
popa
jmp
mov
cld
aaa
popa
sbb
sbb
mov
push
sub
loope
mov
xchg
dec
sar
ds
cmp
rcl
loopne
xchg
xchg
rcl
and
sub
aas
add
xor
loope
push
sahf
mov
mov
add
ret
aam
push
and
fidiv
loope
inc
out
xchg
or
ror
out
mov
xchg
push
sub
cmp
lods
out
or
xchg
rol
pop
retf
adc
ja
int3
or
xchg
enter
push
lahf
ror
enter
or
and
mov
cmp
aas
jne
idiv
cmp
mov
leave
fucomp
retf
xor
xlat
cmp
jb
adc
sub
je
push
or
or
retf
mov
sub
mov
cli
adc
dec
cld
dec
push
test
mov
push
mov
push
jne
inc
jno
xlat
scas
ret
test
xlat
fnsave
add
xchg
jno
inc
aaa
push
sbb
mov
or
repnz
add
jns
ja
add
xor
call
in
adc
pop
xchg
int3
ss
add
add
in
ficomp
adc
jge
sub
xchg
pop
push
jno
and
pop
add
nop
adc
test
push
test
inc
iret
lock
cmps
aaa
dec
mov
push
mov
div
outs
jno
(bad)
shr
add
(bad)
adc
call
mov
lea
movs
movs
mov
iret
and
pop
push
(bad)
mov
clc
push
push
jle
add
(bad)
pop
pop
sar
lea
(bad)
or
hlt
push
xlat
aam
call
out
lea
or
(bad)
imul
ins
and
mov
dec
push
xchg
mov
push
sti
out
adc
sti
jne
dec
sbb
jne
mov
aas
push
adc
xchg
loopne
loopne
mov
cmp
daa
cmp
push
inc
jmp
inc
add
push
and
mov
jne
add
dec
add
or
aas
dec
in
out
dec
add
jne
cmp
loopne
mov
add
mov
dec
mov
div
nop
pop
pop
pop
outs
cmp
pop
push
fmul
and
dec
cmp
out
test
jne
(bad)
mov
add
dec
inc
cmc
loope
cmp
sbb
adc
fldenv
inc
mov
cmp
cmp
sbb
mov
push
adc
add
ret
mov
push
push
mov
or
jne
push
sar
leave
and
inc
sub
push
stos
hlt
cmp
inc
mov
mov
sub
cld
mov
cmp
cld
xor
inc
and
push
pop
push
mov
mov
add
or
and
mov
mov
adc
lock
push
mov
sbb
mov
jno
fcomip
ret
nop
xor
mov
jge
bound
xor
push
call
sbb
lds
icebp
cmp
clc
or
pop
fld
enter
lock
out
cmps
and
adc
push
push
push
push
dec
inc
xor
icebp
xchg
(bad)
out
sub
js
cmp
adc
sub
push
ret
or
xchg
push
fsub
xor
or
fstp
popa
adc
add
test
mov
mov
inc
xchg
loope
add
push
cmp
pop
je
scas
push
mov
mov
mov
add
and
inc
push
adc
lea
pop
mov
mov
cmp
mov
sub
dec
inc
in
dec
mov
rol
push
and
dec
cdq
jbe
sbb
mov
and
or
push
test
xchg
call
push
add
dec
mov
sub
fsub
in
pop
pop
xor
mov
mov
mov
push
call
push
mov
push
push
push
scas
ss
out
(bad)
aam
sub
mov
jg
iret
push
cmps
mov
mov
cmp
in
dec
or
aam
push
test
adc
sti
add
add
bswap
and
push
cdq
je
mov
aas
les
shr
mov
je
pusha
add
inc
or
popf
adc
mov
mov
in
sub
fs
fiadd
push
xor
arpl
dec
push
mov
jmp
inc
dec
jne
mov
and
out
add
push
out
jb
loopne
cmp
lock
jnp
ja
add
jne
lods
cmp
lds
pop
popf
mov
sub
push
push
cmp
mov
mov
pop
(bad)
leave
mov
lock
je
cld
push
xor
mov
pop
sub
add
mov
xlat
scas
imul
mov
or
pop
stos
idiv
jg
sbb
fimul
cmps
dec
inc
pop
cmp
inc
xor
rcr
mov
dec
xchg
add
dec
inc
or
test
add
pop
cmp
popf
adc
ret
xor
mov
xor
je
sbb
jbe
xor
inc
movs
cwde
pop
out
ja
pop
push
jae
adc
mov
mov
add
inc
jl
std
mov
jge
add
cmp
or
mov
add
sbb
jne
or
aas
les
mov
fsub
push
push
and
fisub
xor
ja
adc
loop
sub
add
inc
int3
jg
bound
lock
adc
and
adc
inc
pusha
xlat
adc
jo
jo
add
jne
inc
test
jo
mov
push
or
inc
cs
ins
sub
pop
bound
add
aam
cmp
je
pop
es
loope
add
ins
inc
ds
inc
pop
mov
add
pop
add
rol
ret
mov
fild
dec
jne
push
mov
adc
sub
push
xchg
mov
js
jae
sbb
xor
fild
sub
xchg
push
mov
xor
int
xchg
add
add
sub
sbb
add
loope
les
xor
mov
movzx
and
add
add
arpl
push
js
add
push
xchg
sub
pop
popa
sbb
not
push
addr16
sub
adc
push
xchg
and
mov
(bad)
xchg
es
mov
pusha
mov
test
test
(bad)
push
es
adc
sbb
sti
outs
push
lock
cmp
pushf
mov
adc
rcr
pop
nop
and
lock
(bad)
out
add
xchg
cmp
jne
bound
mov
and
jl
mov
pushf
into
mov
dec
xor
dec
outs
jnp
mov
loope
push
adc
add
jle
loopne
jle
push
not
cmp
scas
je
mov
push
add
inc
pop
enter
inc
(bad)
jae
mov
adc
inc
rcr
retf
das
push
lahf
stos
call
cmp
setne
movs
xor
adc
call
inc
sti
cmp
sbb
mov
(bad)
dec
or
jb
dec
je
jmp
cmp
jmp
ror
clc
jmp
imul
inc
addr16
leave
call
dec
mov
mov
imul
cmp
sub
mov
mov
and
inc
and
add
push
mov
jne
xor
mov
clc
test
jg
adc
aad
sub
or
inc
loopne
ds
sahf
dec
and
push
stos
jl
sbb
push
add
push
(bad)
xlat
shl
adc
fisub
aam
inc
cld
ret
div
add
cs
test
jne
xchg
jne
dec
add
cs
add
and
and
movzx
cmp
jg
je
sub
(bad)
outs
aad
push
je
sub
je
jmp
add
or
pop
cli
pop
push
jmp
mov
pop
in
into
push
mov
test
inc
push
pop
icebp
inc
pcmpgtb
jne
sbb
mov
scas
push
xor
pop
or
add
jp
adc
mov
shl
mov
movzx
jnp
jl
movs
push
sbb
jmp
movs
push
in
test
jne
mov
mov
pop
rcl
cmp
push
repnz
push
add
popa
and
xor
sbb
and
cmp
xchg
retf
and
jg
adc
inc
and
jle
and
inc
int3
and
pop
int3
and
mov
xchg
and
adc
or
adc
sti
cmp
je
das
add
sub
sbb
xor
jmp
mov
push
into
add
jmp
cmp
adc
mov
(bad)
icebp
add
push
pop
lock
jo
mov
jne
lea
and
push
adc
push
jle
mov
dec
mov
mov
sar
repnz
and
adc
and
loop
and
inc
nop
jle
mov
jne
xor
ficom
mov
or
fadd
cmp
jle
inc
shr
frstor
jbe
xchg
cmp
je
(bad)
jmp
je
icebp
or
sbb
cld
mov
fst
cld
mov
xor
sbb
pop
jo
xchg
loopne
and
sub
loopne
push
(bad)
por
cmp
daa
hlt
repz
mov
or
lahf
xchg
pop
xor
or
jbe
sbb
inc
and
jae
(bad)
pop
dec
aas
or
adc
in
cwde
cmp
pop
fwait
ja
xor
adc
mov
add
mov
inc
inc
jmp
add
jne
push
ret
jae
add
xchg
add
push
push
pop
(bad)
ja
sbb
in
pop
loopne
dec
jne
add
nop
add
push
icebp
and
daa
dec
or
xor
enter
out
cdq
pop
shr
xor
push
mov
cmp
add
jb
pop
push
fs
sub
mov
inc
or
mov
dec
(bad)
sti
add
cmp
je
mov
movs
xor
and
call
fst
je
test
jne
dec
add
cmp
test
jecxz
adc
inc
or
lock
daa
cmp
jge
lea
outs
fdivr
scas
loopne
sbb
shr
adc
(bad)
jle
mov
dec
add
adc
cmp
mov
pop
loopne
mov
inc
shl
xchg
bound
dec
jmp
xor
arpl
dec
mov
div
push
or
retf
mov
and
inc
in
leave
je
pop
and
add
test
pop
ficomp
xor
je
push
jle
bound
lahf
add
lock
mov
pop
call
and
push
and
out
push
nop
mov
or
cli
mov
push
inc
adc
pop
add
sbb
cs
mov
sbb
push
mov
add
add
jecxz
leave
jb
pop
xchg
inc
pop
cmp
xor
sbb
(bad)
jl
jge
ret
add
(bad)
adc
(bad)
test
je
adc
adc
push
movs
adc
push
jl
dec
jne
imul
mov
inc
pop
inc
push
jl
or
(bad)
adc
adc
jmp
mov
mov
dec
dec
pop
sbb
or
aad
loopne
add
pop
mov
push
inc
mov
xchg
mov
mov
sbb
mov
je
test
push
jne
fnstsw
repz
sub
mov
int
or
dec
cmp
and
add
test
pop
test
je
push
scas
adc
xor
js
test
fs
ja
add
add
or
xchg
adc
push
mov
or
mov
xchg
xchg
ret
push
scas
inc
bound
or
clc
push
push
xor
inc
inc
pop
add
jg
adc
ja
jg
adc
push
mov
xchg
add
cmps
and
xor
out
jne
dec
inc
mov
cmp
jle
(bad)
jmp
mov
cmp
jle
mov
mov
adc
push
dec
add
ds
cmp
jle
or
jmp
fcmovnbe
push
or
inc
or
daa
call
mov
xor
mov
push
adc
pop
enter
sbb
push
icebp
popa
cmp
fsub
inc
inc
ret
xor
sub
dec
into
dec
cmp
cmp
or
lods
bound
nop
(bad)
mov
les
pop
stc
cmp
mov
nop
shr
adc
pop
mov
adc
std
std
xor
nop
and
pop
mov
rol
sbb
arpl
or
pop
inc
fdiv
add
add
inc
xchg
or
cli
jmp
xor
ret
movsx
test
jl
cli
sub
stos
gs
or
mov
mov
repnz
movsx
and
cmp
rol
xlat
mov
sub
fild
dec
test
or
mov
es
popa
nop
ret
jnp
mov
sahf
cmp
pop
and
(bad)
pop
sub
lods
sub
jg
(bad)
(bad)
(bad)
inc
push
sbb
int3
or
pop
shr
sub
sbb
stos
ret
test
ja
jp
mov
int3
test
xchg
pop
xor
das
mov
aam
dec
xor
sbb
shl
push
bnd
sbb
pop
and
ror
xchg
fwait
push
inc
dec
or
and
cmp
scas
je
mov
pop
pop
(bad)
mov
shl
(bad)
jmp
push
inc
add
fsubr
pop
clc
jmp
jg
add
es
and
sub
cmc
add
bound
adc
pop
inc
push
push
shl
or
push
mov
push
adc
push
pop
cmps
lea
xor
clc
(bad)
loope
mov
out
inc
mov
sub
mov
inc
mov
push
inc
rcl
mov
ss
shr
mov
mov
mov
(bad)
jl
jne
sbb
ja
add
dec
sti
mov
mov
sub
inc
mov
push
retf
stos
fsub
mov
xchg
jmp
inc
in
cmp
jle
call
xor
jne
aaa
add
in
pop
mov
loope
jge
jmp
jmp
lock
pop
inc
xchg
rdpmc
fucomi
or
or
mov
mov
dec
push
and
aad
push
cld
icebp
or
adc
or
fild
cld
jne
mov
add
cmp
jne
pushf
jnp
inc
push
and
or
mov
sbb
push
ins
imul
push
or
repnz
add
retf
mov
lods
ins
dec
push
nop
xor
or
retf
test
sbb
call
dec
loopne
push
add
push
clc
jne
stc
inc
push
mov
outs
loop
sbb
jmp
mov
fisttp
mov
das
adc
inc
add
and
and
sar
or
(bad)
ins
mov
enter
inc
je
mov
or
pusha
mov
adc
mov
adc
or
cld
or
pop
or
adc
mov
rcr
mov
mov
mov
mov
sbb
adc
jmp
rcl
aaa
(bad)
sub
test
jge
mov
add
xchg
cld
mov
cmp
test
loope
jle
out
je
mov
or
ror
pop
lea
push
fucomip
jne
dec
mov
sub
sub
add
jmp
scas
sub
sub
adc
mov
or
cmp
jle
jb
push
hlt
sub
clc
psubb
and
or
mov
sub
or
fwait
or
or
cwde
loop
loopne
rcr
int3
pusha
iret
repz
enter
fcmovb
pop
aad
ror
mov
dec
inc
(bad)
and
mov
xor
ret
jo
add
mov
push
ret
mov
loopne
dec
mov
(bad)
fist
add
sub
jb
sub
je
jmp
mov
jmp
sti
mov
out
add
inc
popa
and
add
sbb
(bad)
(bad)
mov
add
mov
sub
sub
sub
mov
cmp
jle
inc
inc
ja
adc
inc
mov
sti
scas
add
btr
btr
mov
imul
add
imul
jmp
mov
jmp
mov
jmp
and
fucomp
inc
add
mov
pop
adc
push
dec
sub
cmp
jle
or
out
mov
adc
push
mov
mov
jmp
cmps
and
inc
mov
dec
sub
jb
je
jmp
mov
cwde
mov
cmp
jge
mov
dec
ror
adc
mov
loopne
push
ffreep
mov
mov
sub
(bad)
push
jnp
adc
jle
sbb
mov
add
in
inc
lock
push
int3
cdq
cmps
fcom
std
test
mov
mov
scas
sti
adc
add
cmp
leave
pop
mov
into
jge
inc
inc
or
adc
(bad)
fbstp
aam
inc
dec
add
add
inc
dec
jne
or
jle
mov
add
int3
cmp
jle
or
push
adc
and
fwait
mov
or
inc
int3
mov
or
aas
test
inc
enter
sbb
or
aam
inc
stos
inc
or
xor
aam
inc
les
lods
mov
neg
jecxz
pop
add
clts
shr
add
fnstsw
sti
call
dec
shl
add
and
pop
imul
mov
or
add
xor
adc
pop
add
aaa
xchg
jmp
cld
mov
pop
dec
or
lea
fiadd
push
push
dec
shl
sub
repz
fadd
ja
and
or
push
and
out
pop
mov
jge
in
pop
or
mov
and
cmps
inc
cwde
xchg
xchg
inc
cld
cmp
je
sbb
mov
je
shl
mov
lea
adc
call
sub
mov
and
push
pop
(bad)
adc
push
pop
jns
sbb
and
add
daa
movs
mov
ror
(bad)
cmps
mov
jge
jmp
xor
ret
push
fsubr
push
int3
mov
mov
or
jmp
sub
mov
adc
inc
in
dec
jne
xor
call
cmc
outs
pop
mov
mov
(bad)
fcomip
adc
fsubr
inc
fadd
dec
cld
add
and
(bad)
dec
enter
dec
clc
mov
cmp
jne
xor
sub
inc
dec
sub
jae
in
inc
fmul
repz
dec
int3
inc
hlt
add
iret
clc
pop
hlt
xor
mov
mov
mov
sub
dec
bound
jl
jmp
cmp
pop
mov
cmp
push
pop
sbb
push
adc
test
cmps
xor
adc
cmp
stos
aas
add
pop
sub
pushf
pop
pop
int3
sbb
cmp
and
xchg
ja
sbb
mov
or
icebp
mov
stos
sbb
push
mov
(bad)
mov
pop
sbb
push
xor
cmp
or
push
add
push
std
mov
jnp
div
mov
push
or
je
add
inc
out
lahf
or
add
inc
or
push
add
packsswb
or
sbb
loop
mov
inc
add
add
pop
loopne
xchg
and
dec
cs
mov
sub
mov
cwde
and
(bad)
fcmovnb
call
out
ja
inc
mov
add
inc
outs
pop
fdiv
in
jo
jnp
jge
inc
hlt
loop
inc
lea
lea
fsubr
add
push
push
adc
jg
lea
lea
sbb
push
cs
das
cmp
or
add
dec
sbb
mov
mov
cdq
pushf
test
ins
cmp
sub
xor
pop
fdiv
mov
and
je
push
mov
nop
in
scas
and
add
xor
enter
add
and
adc
loopne
mov
int3
movzx
mov
add
dec
imul
adc
shl
add
push
out
int
mov
test
push
cmp
daa
sbb
adc
xor
adc
xor
mov
outs
mov
ret
adc
ja
dec
lds
cmp
(bad)
fs
push
and
or
xor
cmp
sbb
sbb
test
add
dec
and
cld
test
inc
jmp
xor
ret
add
cli
stos
mov
inc
mov
or
push
push
or
sub
mov
lock
scas
mov
je
sub
leave
mov
pop
(bad)
std
sbb
mov
dec
or
cs
push
jb
(bad)
std
xchg
je
sub
je
add
or
in
aad
cmp
add
add
mov
push
or
push
sbb
ret
mov
mov
or
je
test
je
lahf
test
xchg
jmp
shr
xor
ret
cwde
lock
ret
and
or
sub
sbb
or
add
ins
cmp
or
add
jmp
not
cmp
aaa
aas
or
and
push
dec
xlat
pop
adc
mov
(bad)
clc
sbb
mov
mov
retf
mov
lock
jo
ror
and
cmc
pop
mov
inc
cwde
mov
sbb
jnp
or
loope
fdivr
and
fcomp
(bad)
add
hlt
mov
dec
mov
je
push
rol
rcl
jl
xlat
out
xchg
jno
push
add
push
(bad)
push
cmp
mov
call
xor
rcr
fs
ins
shr
test
jmp
add
rcl
mov
mov
or
xchg
mov
lods
xchg
arpl
xor
or
or
pcmpeqb
(bad)
loopne
cmp
sti
pop
cmps
inc
pop
outs
cli
jmp
in
add
add
je
loope
sbb
fs
add
mov
mov
add
inc
adc
push
and
jnp
inc
or
add
dec
jb
add
rol
add
in
or
xchg
jnp
loope
dec
les
adc
cmp
and
movs
pusha
das
add
push
lods
inc
mov
fcom
ss
(bad)
mov
inc
add
add
clc
pop
or
sbb
jle
mov
cmp
xchg
mov
or
retf
or
lock
push
je
rol
sbb
call
push
xor
and
xor
pop
pop
rol
lea
js
dec
or
and
sbb
ja
mov
sub
or
add
stc
add
add
cmp
outs
add
or
mov
and
cmp
(bad)
sub
sbb
mov
xchg
shl
pop
rcl
fistp
pop
in
lock
mov
out
data16
jo
cld
inc
(bad)
iret
dec
mov
add
and
lea
daa
iret
push
push
add
push
lea
lods
mov
aam
xchg
add
repnz
adc
std
mov
aaa
inc
cld
mov
stc
rcr
loope
sbb
add
cmp
inc
in
add
push
fsubrp
pop
idiv
push
in
cmp
jge
adc
inc
dec
mov
pcmpgtw
adc
adc
add
and
sub
cmp
lahf
jl
mov
fld
call
adc
cld
inc
pop
xchg
movs
push
mov
mov
fcomp
xchg
mov
push
push
jecxz
push
xlat
push
or
pop
loopne
push
mov
cmp
aam
xchg
(bad)
bound
cmp
clc
fs
cmp
rcl
out
add
adc
mov
adc
je
pop
add
add
add
sbb
jmp
cmp
in
jle
inc
add
xor
mov
mov
mov
push
popf
call
es
mov
add
dec
test
ret
and
in
fcmove
nop
aad
adc
push
mov
and
out
pusha
call
out
in
push
mov
mov
dec
and
mov
add
push
and
or
mov
push
push
mov
(bad)
cld
push
lods
and
mov
add
inc
lods
shl
bound
xor
and
add
add
pop
test
shl
outs
jg
fnstenv
aas
rol
add
mov
pop
(bad)
fs
dec
xor
push
push
mov
jno
daa
push
add
fdivr
adc
pop
push
call
and
les
mov
repnz
fsubr
inc
mov
push
(bad)
cs
or
dec
mov
and
(bad)
fmul
pushf
sub
arpl
call
sub
mov
add
push
outs
pop
sub
mov
call
add
push
add
push
add
push
repz
push
or
sbb
in
dec
jp
push
push
imul
push
adc
dec
jl
xchg
push
mov
inc
fmul
add
pop
pop
push
ins
scas
cwde
cmp
cdq
add
aad
(bad)
iret
mov
(bad)
adc
add
mul
add
jne
lock
mov
mov
mov
fiadd
fadd
xor
add
xchg
mov
cmp
ret
or
mov
push
loop
mov
retf
push
rcl
arpl
(bad)
(bad)
(bad)
cmp
adc
dec
jo
push
js
mov
push
jle
call
mov
lea
pop
pop
pop
clc
dec
and
and
mov
test
clc
popa
push
jmp
cmp
je
int
adc
xchg
jmp
ins
mov
or
jge
fs
or
push
mov
fld
lock
test
fild
in
mov
sbb
mov
loope
sar
xor
mov
pop
mov
add
jge
adc
push
mov
call
ins
inc
and
add
push
push
push
shl
rol
nop
cmp
mov
push
and
(bad)
nop
pop
sti
push
pop
push
in
ret
pop
add
imul
je
adc
clc
fbstp
adc
cmp
fild
inc
push
jne
and
les
push
add
jbe
daa
pushf
jb
sub
sbb
inc
in
cmp
dec
mov
add
cld
cmps
mov
jbe
add
cmp
add
jp
or
sub
loopne
mov
add
push
pusha
mov
(bad)
(bad)
mov
sbb
cld
mov
scas
jl
mov
pop
sbb
loopne
sbb
inc
idiv
leave
js
and
inc
fadd
mov
dec
inc
and
jo
sub
dec
aaa
pop
fwait
mov
fistp
or
(bad)
nop
loopne
out
mov
xlat
pop
and
adc
push
sbb
inc
fs
cmp
xor
or
mov
mov
adc
add
push
mov
pop
je
cmp
test
jne
mov
ret
push
mov
add
or
mov
sbb
call
and
test
je
mov
jmp
mov
clc
and
test
in
shl
jmp
or
div
push
ret
jns
(bad)
hlt
mov
into
push
adc
dec
adc
xchg
daa
add
out
pop
xchg
movs
ret
cmp
jne
dec
add
movs
jmp
xor
cmp
inc
shr
stos
lods
js
das
or
inc
push
popa
xor
inc
xchg
adc
adc
cli
fwait
(bad)
mov
sbb
push
adc
dec
adc
cmps
or
std
mov
add
ret
jo
mov
mov
cwde
push
add
add
add
aas
(bad)
dec
je
dec
jne
mov
jmp
add
jmp
jmp
inc
sbb
pop
fs
pop
mov
cmp
jne
mov
daa
cld
shl
les
ss
inc
addr16
sbb
or
cmp
jne
fist
jecxz
dec
mov
sub
test
std
dec
xlat
mov
cmp
jne
dec
xchg
fdiv
(bad)
mov
xchg
adc
xchg
sub
jmp
mov
jne
jo
jne
out
push
push
fs
add
pop
mov
adc
shl
adc
adc
les
cmp
cwde
sub
add
test
pop
xchg
fmul
inc
mov
adc
and
pop
push
loope
sbb
adc
lar
push
jmp
nop
les
(bad)
pop
mov
cdq
idiv
xor
je
cmp
mov
xchg
sbb
xchg
adc
rol
(bad)
out
(bad)
(bad)
rcl
mov
sbb
pop
lock
push
gs
lds
sub
mov
xchg
jecxz
mov
mov
dec
xor
push
push
mov
mov
and
or
dec
mov
mov
cli
shr
xchg
les
xchg
sub
(bad)
scas
inc
inc
hlt
mov
adc
movs
xor
adc
xor
dec
ret
out
add
sub
xlat
jl
test
push
mov
mov
ss
adc
jecxz
push
push
es
cmp
jo
test
adc
xchg
mov
adc
pop
mov
lahf
jne
add
mov
mov
inc
add
push
pop
inc
fst
pop
je
sbb
jp
icebp
psubq
test
unpcklps
sbb
xor
scas
fsubr
out
popa
adc
xchg
xor
xchg
retf
rol
xor
das
rol
sub
jns
iret
mov
adc
jne
or
imul
jns
je
adc
add
mov
mov
cmp
data16
and
and
push
push
pop
arpl
jo
fmul
(bad)
jmp
cdq
jo
or
lea
push
cld
cmp
cmc
xchg
movs
mov
pop
je
mov
int
pushf
add
pop
xor
mov
call
sub
popa
adc
(bad)
or
scas
test
ret
xor
or
inc
and
add
or
add
adc
stos
stos
push
sbb
sbb
pop
or
call
add
xchg
add
bound
mov
xchg
adc
jne
mov
and
pop
(bad)
pop
xor
ss
cmps
or
xor
mov
xor
(bad)
and
pop
cmp
jle
arpl
jle
xchg
shl
add
mov
xchg
add
(bad)
push
inc
adc
push
mov
mov
push
mov
mov
lods
or
add
and
loope
mov
mov
xchg
ror
rol
or
out
call
or
inc
jo
push
arpl
nop
loop
icebp
mov
cmp
je
cmp
cmp
mov
xor
add
test
jo
fcom
jnp
nop
mov
mov
adc
outs
adc
pop
adc
mov
sub
stc
hlt
addr16
add
or
inc
add
lds
shl
std
pop
jle
call
ja
shr
fwait
and
sti
dec
pop
inc
cwde
mov
(bad)
push
out
jne
std
(bad)
dec
sbb
dec
cmp
cmp
dec
xor
inc
adc
mov
fist
mov
mov
cld
mov
jo
mov
(bad)
jb
cmps
stos
cmp
rol
pop
jecxz
push
xor
idiv
mov
dec
ds
xor
pop
adc
mov
cdq
and
ror
mov
cli
(bad)
dec
add
add
ret
add
ret
inc
ret
dec
mov
xlat
xchg
jg
test
loop
jb
test
dec
in
or
cmp
cmp
clc
add
ret
push
mov
xor
cwde
int3
pop
das
sbb
xlat
inc
scas
retf
xchg
add
adc
jo
cmp
aas
push
inc
in
pop
dec
imul
ror
jl
add
ins
sub
and
dec
imul
jnp
aad
jo
inc
add
push
push
mov
sbb
mov
push
jb
push
pop
mov
enter
pop
push
mov
mov
push
in
mov
nop
push
int
cmp
aas
sar
adc
adc
mov
cmp
sbb
lods
inc
cmp
xchg
adc
sub
lods
aas
adc
cli
pop
call
pop
pop
push
mov
mov
sub
push
outs
add
call
out
mov
ret
mov
adc
cmp
mov
popa
mov
test
lods
inc
cmp
or
xchg
pusha
ja
add
jmp
mov
dec
jne
loopne
rol
adc
ret
dec
hlt
or
jge
sub
sbb
mov
cli
gs
pop
add
call
add
sub
push
rcr
js
inc
lock
ret
jle
mov
push
lea
(bad)
aam
lock
lea
ret
jp
mov
cmp
test
jae
dec
cwde
push
mov
mov
mov
inc
lds
jo
sbb
add
retf
sub
jnp
and
or
jnp
push
mov
and
xor
add
idiv
cmp
nop
mov
jne
mov
mov
mov
add
pop
sub
or
rol
shl
loope
pop
add
sbb
sub
pushf
rcl
int3
xor
rcr
clc
jns
clc
mov
cmp
fs
cmp
jne
cs
dec
div
xor
mov
mov
cmp
loopne
sbb
push
not
pushf
cmp
dec
xchg
rcl
js
jmp
adc
lock
in
fmul
lds
dec
test
mov
push
lea
popa
add
lds
dec
mov
inc
jl
inc
and
inc
inc
add
loopne
sti
mov
mov
mov
add
std
cmp
inc
sbb
pop
adc
pop
fs
push
xchg
ficomp
xor
cmp
cdq
sbb
xor
sbb
pop
inc
xchg
fsubr
nop
jg
inc
dec
push
push
mov
fdivr
xor
sbb
xor
cmp
inc
adc
cmps
aaa
push
gs
sbb
pop
or
inc
or
xchg
push
inc
push
sbb
into
inc
adc
or
div
mov
pop
adc
push
mov
and
div
mov
js
mov
mov
push
sbb
inc
test
xor
xchg
push
xchg
icebp
addr16
mov
dec
es
fwait
xor
pop
or
retf
loopne
test
jne
push
jecxz
mov
(bad)
(bad)
fstp
mov
or
inc
push
je
mov
mov
jmp
mov
mov
mov
div
mov
sub
mov
mov
pop
xchg
sub
xchg
push
pop
and
mov
push
fwait
pop
mov
add
daa
push
or
add
pusha
xchg
mov
clc
sub
sbb
icebp
mov
jg
pop
hlt
mov
in
xor
xor
inc
sar
xchg
cld
cmp
jl
adc
test
and
inc
std
retf
and
push
test
lock
or
leave
xchg
cmp
sub
in
leave
paddb
jo
bswap
add
and
fmul
call
add
cmp
jg
jg
in
push
xchg
adc
cld
sbb
jle
pop
sti
add
push
inc
add
sbb
adc
adc
inc
dec
xor
pop
sti
in
jbe
push
jmp
sub
jg
aas
fdiv
xchg
cmp
jg
adc
jo
jbe
jg
jecxz
cld
inc
out
mov
and
mov
sti
(bad)
push
add
inc
add
cmp
jge
sbb
cmp
jbe
jp
test
jne
sub
arpl
je
addr16
mov
sbb
les
cwde
or
or
pusha
in
and
sbb
hlt
push
repz
cwde
jnp
pop
test
je
or
call
or
xor
adc
pop
cld
sub
lea
and
jne
enter
sub
adc
mov
and
dec
cwde
xlat
dec
sbb
out
lock
and
add
mov
inc
popf
push
xchg
lahf
mov
les
mov
mov
pop
cmp
cmps
shl
ror
push
cdq
and
sub
lock
(bad)
mov
cwde
test
xor
push
test
jne
dec
(bad)
push
mov
mov
stos
mov
call
xor
adc
jle
xor
push
or
jle
or
ret
ja
add
mov
mov
mov
pop
lock
cli
sbb
push
push
loop
push
sbb
test
pop
push
in
test
call
pusha
movlhps
adc
mov
push
push
adc
cmp
add
test
or
inc
in
popa
sbb
sbb
scas
and
fsubr
sbb
inc
lock
or
mov
ret
jle
mov
lea
outs
xchg
adc
push
shr
in
push
mov
in
cmp
sbb
loop
lahf
sahf
popa
cmp
push
adc
(bad)
enter
es
or
push
and
cmp
push
or
mov
jmp
call
cwde
jmp
and
(bad)
out
aaa
(bad)
pop
fs
je
call
or
jae
cld
lahf
in
sar
jmp
adc
or
pop
cld
ja
in
cmp
jge
mov
mov
in
test
jle
mov
add
idiv
out
cmp
cmp
inc
aas
dec
push
inc
adc
ror
or
into
xchg
push
shl
sbb
jp
xchg
inc
xor
imul
std
arpl
cmp
sub
mov
mov
add
and
mov
fistp
mov
add
sub
xchg
add
mov
rcr
dec
sbb
inc
dec
add
push
cmps
mov
rol
or
jnp
add
inc
adc
jmp
mov
into
mov
inc
cs
and
dec
or
xchg
in
adc
push
test
inc
and
and
dec
inc
pavgb
lahf
mov
push
xchg
mov
dec
inc
push
push
jge
ret
mov
inc
cmp
sub
push
imul
outs
enter
push
sbb
mov
add
add
and
sub
or
push
pop
mov
dec
int
push
je
inc
dec
inc
push
jle
push
(bad)
pop
inc
add
add
sbb
(bad)
pop
dec
rol
add
and
inc
shr
inc
scas
jno
aas
or
mov
lock
aam
add
ins
push
inc
xchg
movs
mov
cmps
push
jne
xor
and
movs
enter
push
outs
pop
stos
es
jne
add
inc
mov
mov
ror
mov
inc
add
cmp
jne
lea
sbb
add
xor
dec
in
add
mov
shr
call
call
inc
mov
sub
sub
paddsb
lock
es
sbb
ret
and
inc
adc
ud1
cmp
sub
out
not
fidivr
push
sub
and
arpl
adc
inc
add
retf
(bad)
into
icebp
out
pop
add
adc
add
add
lea
add
push
mov
cmps
or
lock
or
push
lea
mov
sub
adc
jb
sbb
push
sub
fild
adc
xor
add
or
sbb
cmp
add
jnp
inc
retf
cld
inc
aad
inc
mov
dec
mov
mov
add
dec
mov
or
sbb
mov
jb
cdq
pop
ja
jg
push
adc
add
add
add
pop
inc
hlt
add
imul
inc
hlt
xor
push
(bad)
daa
jmp
cwde
stc
mov
fmul
push
neg
or
mov
and
mov
stos
pop
ins
or
fwait
mov
and
pop
and
adc
sub
pusha
adc
push
fimul
xchg
jp
js
shl
js
jae
lock
xchg
mov
push
lods
add
sbb
cmp
es
inc
and
into
xor
pop
retf
pop
sbb
add
and
inc
push
push
mov
jmp
mov
mov
mov
leave
push
add
int3
sar
out
cmp
mov
jnp
in
pop
adc
push
xor
mov
inc
xlat
adc
pop
sbb
dec
mov
push
mov
xor
jle
lock
enter
into
cmc
sbb
rcl
dec
xor
mov
mov
aaa
stos
fwait
cmp
jne
fadd
add
in
jne
mov
daa
clc
cmp
sbb
push
fs
mov
mov
stos
jg
inc
xor
add
xchg
pop
stos
sbb
jmp
pop
mov
push
fadd
mov
sar
fs
jae
jne
sub
xchg
adc
stos
xchg
fdivr
push
fs
jg
mov
or
mov
mov
mov
sbb
jne
mov
adc
push
jg
into
shr
adc
mov
ins
inc
mov
test
push
adc
jne
push
mov
mov
push
mov
inc
sbb
das
repnz
mov
pop
mov
inc
icebp
xchg
popa
adc
imul
sub
or
shl
jmp
ret
call
dec
or
jmp
inc
sub
jo
xchg
jnp
hlt
mov
inc
stos
pushf
sub
and
daa
cmp
clc
pop
fimul
test
cmp
je
inc
pop
add
xchg
mov
xor
adc
inc
dec
xchg
test
jne
lea
mov
xchg
std
add
ja
add
cs
inc
mov
dec
je
add
(bad)
cmc
das
push
add
and
mov
push
or
in
test
or
add
add
inc
adc
sbb
icebp
scas
call
jne
mov
popa
adc
mov
add
sbb
sub
dec
add
loopne
outs
adc
jno
fwait
jp
dec
fild
sbb
mov
inc
rcl
clc
push
push
xor
js
movs
and
push
mov
inc
retf
sbb
pop
sbb
inc
jge
jle
(bad)
loope
pop
mov
sub
xchg
sub
in
pop
inc
xchg
push
mov
mov
scas
clc
push
push
jb
jo
cmp
daa
movsx
aam
or
sbb
jl
add
cdq
adc
adc
adc
std
pop
pop
cmp
adc
push
test
mov
sbb
lods
in
push
cmp
pop
scas
push
scas
mov
es
pusha
adc
adc
jmp
add
in
xlat
test
mov
mov
aaa
jbe
push
jo
push
adc
inc
mov
das
add
mov
pop
ins
retf
sub
cs
inc
adc
jmp
jb
dec
fwait
push
je
enter
ret
mov
gs
popa
outs
movs
hlt
lea
jbe
pop
hlt
lds
push
and
outs
jo
dec
(bad)
cmp
sbb
jne
ret
fs
or
bound
int3
pop
adc
xor
xchg
adc
xor
dec
jbe
pop
movs
test
jg
jmp
mov
add
js
add
push
rcl
or
pop
ds
movs
je
(bad)
adc
jae
cmp
sbb
(bad)
jne
(bad)
cmp
lods
pop
nop
cmp
push
jbe
int3
inc
lods
or
scas
pusha
mov
xchg
or
xchg
test
sub
or
push
xchg
mov
add
and
inc
push
sub
and
test
and
je
adc
sbb
mov
xchg
add
or
sub
mov
push
in
fmul
jb
dec
jbe
les
lock
adc
pop
pop
lock
xchg
test
add
inc
push
pop
cmp
and
mov
inc
cmps
clc
(bad)
imul
pop
mov
mov
push
push
cmp
mov
mov
cmp
dec
popa
loopne
jne
mov
add
xchg
fs
add
push
or
push
sub
arpl
push
mov
push
jo
pop
cdq
mov
pusha
pop
mov
sbb
cmp
aas
xlat
ins
sub
ucomiss
mov
hlt
pop
ret
mov
movs
jne
xchg
or
les
pusha
popa
rol
adc
test
inc
and
mov
inc
fcmove
pop
inc
lahf
push
push
sub
jmp
je
xchg
and
inc
and
or
mov
jmp
xor
adc
stc
push
data16
inc
and
push
sub
jae
dec
sbb
mov
cmp
sbb
xchg
inc
pusha
lods
or
pop
adc
pusha
mov
or
sbb
jae
daa
xchg
mov
mov
pop
jne
or
jae
mov
jmp
cld
je
adc
mov
add
inc
push
cmp
adc
xchg
fdivr
clc
jle
cmovno
pop
jmp
push
fild
je
sub
pop
fs
call
dec
mov
idiv
pop
fcom
popa
cmp
push
and
(bad)
int
(bad)
mov
test
je
xchg
sbb
rol
sub
cmps
sti
or
jne
push
mov
add
addr16
and
mov
mov
rol
cmps
mov
jmp
mov
in
add
jmp
dec
cmp
jge
imul
call
aad
xor
clc
adc
cld
and
outs
out
sbb
jmp
in
inc
in
jg
cmp
hlt
jg
leave
inc
and
mov
fcom
push
xchg
in
jne
(bad)
aaa
clc
push
and
add
sbb
cld
mov
pop
adc
mov
mov
or
and
xchg
mov
xchg
add
aam
sub
sbb
loop
mov
fsubr
and
or
mov
je
nop
les
out
cld
or
mov
pop
imul
outs
call
jg
add
mov
mov
inc
xor
cmp
sbb
inc
or
ror
out
mov
pop
ins
add
cs
xchg
sub
sub
cmp
jge
jbe
dec
out
popa
and
adc
and
adc
push
and
iret
xchg
mov
lea
mov
aaa
or
cmp
mov
inc
and
inc
push
pop
pop
mov
rol
xchg
push
test
je
dec
or
retf
ss
cdq
or
add
jne
outs
jo
mov
stos
cld
mov
and
les
xchg
sub
call
jl
inc
and
inc
push
inc
mov
dec
lock
inc
loope
ror
mov
fist
rol
pop
cmp
mov
mov
retf
or
and
push
in
pusha
mul
and
pop
mov
add
pusha
pop
cmp
(bad)
or
push
cdq
xchg
movs
add
mov
cmp
stos
jbe
push
jl
mov
mov
daa
push
pusha
stos
mov
inc
out
enter
jg
jmp
xor
cdq
xor
sub
push
jg
call
xor
mov
hlt
ds
ja
jo
cmp
test
sbb
test
push
hlt
je
dec
lar
cli
fistp
pop
je
sub
test
shr
sub
jne
cmp
pop
jne
aaa
adc
shr
mov
cmp
cmp
jl
jne
pop
pop
sbb
movaps
mov
pandn
mov
push
push
scas
mov
fld
mov
sub
or
lock
pop
idiv
mov
mov
jge
add
test
shl
dec
push
sub
bound
jae
pop
call
cmp
lock
adc
or
jge
adc
adc
mov
jne
pop
mov
and
push
adc
sbb
je
rcl
mov
mov
test
jne
mov
push
or
adc
and
adc
adc
js
or
je
add
and
mov
inc
adc
fnstsw
enter
jge
adc
test
icebp
jle
mov
out
or
xor
std
ja
retf
and
xor
aam
popf
mov
or
inc
aas
fwait
lock
lea
push
fiadd
sub
inc
mov
mov
mov
clc
cmp
jg
dec
inc
stos
cmp
inc
add
int3
inc
ror
arpl
or
stos
or
nop
mov
dec
push
test
sbb
dec
mov
aaa
cdq
out
movzx
movsx
add
adc
jo
inc
outs
inc
sbb
shl
inc
xor
push
xor
into
add
and
jmp
jnp
das
int3
adc
xor
mov
jecxz
xor
shl
sub
jbe
lea
mov
push
or
jmp
inc
js
fist
loopne
inc
in
inc
jns
(bad)
adc
add
sub
imul
inc
mov
push
mov
frstor
mov
inc
or
sbb
add
js
add
cmps
movs
ror
add
imul
inc
mov
pop
cwde
or
add
mov
add
push
mov
sub
or
jge
vmwrite
push
jg
or
push
std
jne
mov
jge
pop
adc
mov
or
add
pop
add
loopne
(bad)
cmps
mov
and
add
add
in
cmps
mov
scas
push
mov
inc
mov
loopne
rcr
push
add
clc
add
rol
or
aaa
jo
dec
in
lock
sbb
jg
aas
fild
pop
and
punpckhdq
lea
push
push
push
dec
mov
call
fcom
outs
sub
dec
adc
push
and
adc
and
pusha
mov
cmova
(bad)
xchg
ror
ins
add
out
(bad)
mov
adc
pop
and
push
xchg
or
xchg
fadd
sub
je
jmp
cwde
add
mov
idiv
xchg
add
mov
movs
sti
std
cmp
je
sbb
jmp
adc
dec
jne
add
push
mov
adc
mov
mov
xlat
or
or
pop
shr
ror
push
(bad)
pop
push
jmp
int
int
cmp
add
push
fsubr
and
mov
push
jo
push
cmp
push
add
test
es
loopne
ja
adc
cmps
xlat
in
add
push
jne
ins
cmps
lahf
and
pop
push
into
inc
cmps
and
push
jae
sub
xchg
addr16
sahf
js
jl
jns
in
and
jbe
and
add
adc
xchg
int3
nop
jge
movs
adc
dec
and
pop
outs
mov
push
dec
adc
xor
out
rcl
add
add
push
dec
dec
dec
dec
push
inc
inc
push
(bad)
jg
dec
dec
inc
add
ins
xor
cs
aam
mov
inc
gs
gs
dec
adc
gs
jae
adc
jbe
jb
push
add
jmp
je
je
jae
add
push
cmp
ins
cwde
and
push
adc
jae
leave
xchg
inc
and
inc
pop
nop
sub
sti
inc
outs
outs
je
das
jae
mov
sbb
or
cmp
enter
outs
je
data16
loopne
inc
cmp
cli
add
sbb
push
push
call
scas
mov
mov
mov
or
mov
hlt
mov
clc
cmp
je
push
arpl
mov
mov
mov
mov
out
push
cmc
jno
call
lea
clc
xchg
adc
dec
je
loope
stos
dec
or
adc
jmp
push
pop
pop
xchg
ret
or
cmp
xor
(bad)
jmp
hlt
xor
mov
movzx
bound
add
jge
push
cmp
out
jmp
test
jo
je
lock
adc
daa
cwde
or
ror
add
loopne
sbb
dec
jo
jae
mov
(bad)
cmp
test
dec
mov
sub
xor
or
and
cmp
in
sub
push
rcl
sti
pop
repnz
push
aam
inc
imul
mov
lea
push
or
sub
mov
push
xor
mov
cld
mov
pop
test
or
sub
xor
inc
lock
std
xchg
adc
in
push
adc
inc
cld
leave
mov
gs
lock
test
jnp
popa
cmc
push
in
adc
pop
sbb
leave
and
mov
js
or
mov
into
mov
adc
into
add
add
ds
mov
adc
ja
sbb
call
pop
call
mov
in
jmp
add
cli
jg
(bad)
call
push
(bad)
add
inc
adc
push
sbb
xor
pop
xor
xor
adc
inc
cmc
pop
inc
shr
cmp
daa
push
rcl
pop
(bad)
out
std
jb
ins
dec
data16
add
add
inc
outs
imul
popa
je
lods
pop
mov
sbb
int3
inc
fdivrp
jne
mov
pop
daa
mov
push
mov
push
popa
dec
pop
js
ins
adc
push
rcl
push
aas
dec
xor
add
hlt
out
out
and
pop
arpl
and
(bad)
cmp
setae
inc
adc
xchg
or
or
sti
adc
arpl
mov
ins
setge
loopne
or
popa
wrmsr
aam
mov
or
mov
pop
push
jb
mov
mov
mov
int3
add
xchg
sub
add
cmp
loopne
add
add
dec
test
xor
int3
retf
(bad)
or
clc
lods
cmps
inc
call
inc
test
inc
retf
push
outs
push
inc
pop
test
aad
cmp
clc
(bad)
out
popa
xlat
jne
sub
inc
add
outs
pusha
add
push
in
or
(bad)
popa
imul
mov
test
cs
add
add
add
jne
outs
mov
clc
pusha
(bad)
in
dec
dec
add
mov
add
or
outs
ins
xor
jb
mov
jl
sbb
in
push
scas
jmp
mov
into
add
je
mov
add
jg
lods
fild
mov
inc
add
mov
xor
out
and
std
(bad)
stc
push
push
(bad)
fcom
and
and
inc
add
push
mov
imul
jae
lahf
pop
push
(bad)
mov
inc
add
xor
and
sub
add
pop
aad
mov
test
lock
mov
pop
sbb
fisttp
das
add
aam
inc
iret
fwait
cmps
sti
jmp
dec
inc
add
add
push
mov
add
pop
inc
add
add
add
in
sti
out
inc
add
inc
add
dec
inc
add
sbb
add
sti
call
inc
add
inc
add
inc
add
pusha
add
int3
mov
js
inc
add
push
inc
add
mov
scas
jmp
mov
add
les
add
sti
ds
outs
jb
inc
jne
hlt
mov
jecxz
adc
(bad)
mov
push
xor
dec
fmul
or
sbb
add
mov
adc
inc
rcr
sub
inc
sbb
cmps
mov
xchg
adc
xlat
cmp
(bad)
pop
inc
xlat
shl
out
aaa
sbb
add
adc
push
nop
dec
fcomip
loopne
and
add
pop
shl
add
pop
ret
aad
adc
adc
and
icebp
and
or
adc
mov
pop
push
or
add
pop
push
add
sub
and
enter
sub
inc
sbb
sbb
sub
pop
adc
pop
je
add
inc
pop
inc
add
and
push
sub
(bad)
scas
pop
pop
or
outs
imul
and
fwait
pop
test
je
or
arpl
adc
add
rol
or
mov
test
je
mov
xchg
pop
xor
test
cli
inc
ret
or
xchg
into
add
int3
fistp
rcr
iret
in
mov
xchg
add
je
sbb
sbb
shr
add
cld
mov
jle
repnz
jl
and
mov
xchg
leave
sbb
push
adc
stos
pop
mov
jl
mov
mov
mov
movs
sub
pop
add
sub
pop
mov
mov
pop
pop
jmp
push
mov
push
lea
loopne
out
cmp
xor
add
adc
inc
jb
pop
cmp
je
push
shl
int3
or
push
inc
pop
bnd
fucomp
sbb
jne
enter
sar
leave
adc
mov
(bad)
aas
(bad)
fmul
je
mov
daa
repz
xchg
push
sub
aas
inc
out
xchg
add
add
or
add
add
and
jbe
or
cdq
sbb
push
lock
or
push
inc
or
inc
and
aas
rcl
and
xchg
movs
or
inc
sbb
cmc
mov
mov
add
sbb
mov
aaa
lock
add
or
sbb
test
daa
mov
xor
daa
cwde
jmp
add
int3
or
mov
add
xor
mov
xor
or
bound
mov
dec
xor
add
in
stos
pop
or
inc
mov
cmp
push
inc
add
add
mov
sahf
call
ret
adc
sbb
(bad)
mov
mov
xor
adc
(bad)
fs
mov
dec
mov
enter
pop
adc
sbb
mov
jp
or
push
inc
hlt
mov
push
in
jecxz
mov
mov
enter
adc
fs
nop
cmp
jne
adc
fwait
xchg
aas
in
hlt
inc
in
test
or
sub
jle
sub
fiadd
mov
pusha
push
mov
cmp
mov
jae
mov
je
jae
inc
out
pusha
mov
xor
lock
loopne
dec
inc
pop
(bad)
cmps
pop
adc
add
inc
mov
xor
add
push
mov
pop
inc
dec
jne
(bad)
je
mov
lds
popf
cli
xor
adc
mov
fiadd
or
ficom
cmps
adc
push
push
push
mov
add
push
je
jbe
inc
add
add
or
je
mov
sbb
push
inc
pop
inc
mov
mov
or
stos
stc
je
cmp
pop
std
out
fwait
(bad)
push
aam
mov
fcmovnbe
cld
inc
je
xor
call
jmp
icebp
mov
daa
ss
add
js
add
int3
mov
mov
test
cmp
sbb
inc
or
rol
push
add
pop
add
push
call
outs
leave
push
push
xor
add
jnp
and
adc
mov
jecxz
cmp
lahf
movs
pop
out
fwait
pop
mov
mov
mov
(bad)
icebp
and
pop
lahf
add
ror
stos
mov
cmp
stos
mov
or
jl
add
cld
test
cwde
push
push
pop
scas
(bad)
and
cs
dec
inc
xchg
push
mov
jmp
imul
adc
div
imul
push
jl
ror
and
nop
xor
pop
or
test
call
push
jae
outs
xor
inc
dec
mov
push
or
mov
mov
mov
mov
mov
mov
ins
pop
jnp
push
fmul
push
fs
ret
loope
xor
mov
jge
add
std
add
mov
mov
or
test
sbb
fs
sbb
jp
jge
aaa
xor
iret
ins
cmp
loopne
icebp
add
test
loop
inc
cld
mov
enter
add
lods
pop
into
inc
aad
adc
pop
imul
cmp
loop
inc
push
cdq
sub
cwde
add
push
adc
jae
pop
push
push
inc
dec
jne
mov
add
xor
jle
cmps
mov
js
add
inc
pop
xchg
sbb
and
pusha
mov
inc
push
pop
ja
aad
scas
add
dec
js
je
aas
nop
and
adc
inc
ins
mov
push
cld
cmp
xchg
inc
ror
adc
retf
jne
ret
pop
pop
xor
(bad)
adc
inc
xor
push
inc
icebp
bound
adc
jbe
std
lahf
lds
sar
push
pop
sbb
mov
cmp
jne
inc
mov
dec
cmp
jne
loopne
adc
or
js
push
add
lock
adc
push
mov
mov
mov
mov
scas
rol
add
xchg
push
unpckhps
xchg
mov
in
loopne
and
push
inc
sbb
hlt
ror
and
mov
out
pop
inc
arpl
out
daa
cmp
je
fs
inc
jbe
sbb
pop
mov
mov
push
adc
mov
push
xchg
adc
ds
cmp
popa
sbb
(bad)
cmp
jnp
popa
mov
adc
pop
push
pop
and
push
inc
push
mov
pop
sub
push
fidiv
fstp
mov
push
jbe
nop
popa
fistp
mov
cmp
inc
xor
pop
ret
fisttp
or
inc
shl
ret
adc
fcmovbe
mov
aas
(bad)
xor
mov
mov
mov
and
adc
ret
call
add
mov
add
mov
mov
repz
sub
cmc
or
pop
les
(bad)
add
cmp
pop
fist
fdiv
shl
push
cmp
jne
hlt
xor
cmp
je
cmp
cmp
aam
adc
add
push
imul
or
xchg
mov
pop
test
les
pop
push
inc
pusha
mov
pop
inc
jl
push
std
test
sar
inc
adc
add
mov
(bad)
hlt
movzx
test
mov
mov
xor
mul
mov
mov
mov
mov
xor
scas
daa
sbb
sub
icebp
(bad)
call
and
add
dec
jne
inc
mov
and
(bad)
imul
das
xchg
mov
ds
inc
aaa
jo
add
jge
mov
sub
adc
out
fld
mov
in
cmp
aaa
ror
add
hlt
pop
adc
div
add
add
add
push
or
call
adc
dec
imul
push
add
dec
popa
addr16
outs
fs
dec
fsub
ss
push
cmovo
xlat
or
jmp
out
inc
and
add
icebp
inc
add
inc
add
pop
jge
xchg
add
inc
add
je
jbe
pop
or
inc
add
add
jmp
pop
adc
ins
adc
mov
sti
fwait
out
js
push
(bad)
sbb
out
sub
jge
dec
ins
sub
add
aaa
in
add
lock
je
adc
push
clc
dec
je
jmp
ret
add
mov
sub
shl
add
sub
ret
pop
lock
pop
cwde
and
xchg
push
mov
(bad)
mov
mov
or
das
fdiv
mov
pop
aad
mov
ja
jo
loopne
repz
inc
push
psubsb
inc
sar
push
lods
mov
leave
xor
loope
pop
xchg
pop
and
adc
mov
mov
icebp
push
push
mov
mov
lds
cmp
jl
cmp
mov
xor
jge
lea
mov
xchg
add
mov
cmp
inc
inc
add
mov
push
mov
pop
push
dec
lahf
jb
test
fdiv
mov
es
out
js
gs
pop
adc
pop
adc
add
js
test
mov
and
pop
sub
push
push
cli
outs
(bad)
fisttp
mov
test
daa
pop
call
popa
jl
or
stos
add
lods
mov
call
add
sub
pusha
(bad)
cli
inc
call
scas
cmps
(bad)
into
cmps
pusha
mov
js
dec
pusha
xchg
popa
push
sub
jg
cli
sbb
sar
mov
aas
inc
aam
fimul
mov
mov
(bad)
jmp
mov
mov
push
lea
push
push
call
or
inc
xor
mov
fdiv
mov
cli
arpl
mov
test
je
mov
add
js
jae
popf
add
and
jle
iret
shr
pop
addr16
test
pavgb
fisub
sbb
jl
(bad)
(bad)
sbb
cmp
fs
clc
loope
xor
or
push
push
xchg
into
fs
xor
mov
adc
push
push
push
fs
clc
pop
mov
cmp
js
jmp
sbb
aas
sbb
sbb
aaa
aaa
(bad)
cmp
dec
clc
cmp
push
push
xor
mov
inc
xlat
inc
add
lods
imul
inc
add
add
sub
sbb
jne
push
jo
ds
mov
cmp
inc
mov
inc
sbb
js
pop
sbb
cmps
icebp
add
(bad)
sub
fadd
cmp
cmp
sbb
dec
neg
shr
pop
inc
cmc
test
dec
in
arpl
ret
jg
fldlg2
push
mov
arpl
add
repz
adc
loope
fwait
mov
mov
push
test
sbb
xchg
jo
pop
xor
or
adc
inc
nop
in
adc
sbb
adc
pushf
call
inc
(bad)
repnz
mov
xchg
mov
clc
xchg
fnsetpm(287
cmp
jl
ror
ds
dec
add
cmp
or
aaa
xchg
bound
pusha
adc
(bad)
or
bound
test
test
push
xor
add
add
jb
add
pop
jmp
repz
or
adc
inc
inc
adc
pusha
cld
or
(bad)
stc
mov
retf
inc
daa
cmp
test
jnp
dec
in
dec
cmp
fdiv
and
outs
or
inc
adc
push
fcomp
jmp
fist
mov
push
push
add
add
sub
pusha
(bad)
call
or
push
sub
inc
clc
add
mov
jb
arpl
adc
loop
stos
out
movs
inc
xor
mov
add
cvttps2pi
mov
data16
cwde
push
add
xchg
sbb
std
fist
add
dec
adc
dec
xor
push
adc
or
or
inc
test
fs
adc
mov
repnz
dec
add
adc
pop
mov
pop
and
pop
loop
push
mov
xchg
adc
inc
scas
or
pop
sbb
mov
call
not
fs
dec
dec
pop
push
jne
arpl
ret
rcl
pop
outs
clc
dec
lock
push
mov
push
mov
push
mov
adc
(bad)
nop
adc
push
or
push
mov
push
neg
xor
jg
adc
or
es
mov
mov
add
ret
or
mov
jb
into
mov
cmps
fimul
mov
test
loope
arpl
mov
sbb
mov
push
or
push
ss
call
inc
mov
jns
cmp
push
shl
add
inc
dec
(bad)
popa
in
in
cmp
mov
inc
popf
cmp
into
push
cmp
je
cmp
jne
mov
and
xchg
add
jne
or
push
inc
push
sbb
adc
call
xchg
adc
mov
jl
popa
and
adc
ins
js
adc
sbb
sbb
les
fistp
ret
retf
clc
sbb
xchg
xor
mov
fadd
jmp
add
jl
pop
call
xor
(bad)
mov
or
es
add
fucomip
retf
(bad)
cdq
js
jne
div
pop
les
sbb
(bad)
adc
push
mov
test
xor
xchg
mov
(bad)
std
inc
mov
mov
mov
mov
adc
inc
mov
mov
data16
aad
imul
shl
test
adc
aad
sub
paddusb
sbb
jmp
fsub
pop
mov
loopne
jmp
mov
cmp
repz
out
push
adc
mov
inc
out
shr
pop
(bad)
xchg
mov
sub
iret
mov
add
bound
adc
cmps
add
movs
dec
sbb
repnz
out
ret
cmp
and
inc
xor
sbb
xor
sub
inc
xor
or
add
repz
pusha
push
mov
cmp
cli
dec
mov
mov
das
pop
ret
push
mov
js
adc
mov
sub
mov
push
xchg
xor
pop
add
mov
ins
and
or
push
jecxz
call
add
in
mov
xchg
inc
dec
jne
cmp
push
aam
and
jg
mov
loope
jecxz
cs
call
xor
cmp
jne
out
clc
adc
ror
jmp
add
adc
call
cmps
test
dec
dec
test
je
mov
xor
mov
call
push
nop
stos
push
push
sub
rcr
in
pop
adc
push
push
dec
nop
test
sahf
add
mov
fwait
xor
ja
test
je
or
in
push
std
cs
add
fdiv
inc
(bad)
out
rol
sub
jmp
test
jne
cmc
push
scas
dec
shl
push
shl
jmp
cs
adc
iret
mov
xchg
push
push
push
clc
mov
mov
es
xchg
es
loope
push
mov
inc
(bad)
(bad)
cmp
mov
sub
pop
xchg
sbb
jmp
add
jnp
add
xor
mov
aaa
mov
pop
and
jbe
test
add
dec
add
jo
xchg
fwait
stc
jmp
mov
xor
add
fnsetpm(287
test
setg
rcl
dec
clc
sub
xchg
enter
push
dec
mov
mov
and
push
cmp
add
clc
inc
cwde
mov
inc
sub
push
adc
fist
cmps
mov
ins
popa
inc
mov
(bad)
rol
jne
xor
jp
jp
cmp
adc
adc
loopne
(bad)
push
pop
outs
pop
adc
push
push
push
push
dec
js
inc
ja
out
adc
and
add
or
retf
(bad)
pop
pop
ds
cmp
add
inc
mov
(bad)
data16
pop
pushf
or
sbb
or
cmp
dec
pushf
xor
lock
in
mov
xor
adc
pop
out
call
dec
cli
neg
int
cld
xchg
xor
mov
inc
mov
xor
rcl
arpl
test
push
data16
xchg
cs
sub
xor
cli
daa
pop
cmp
add
add
test
cmp
mov
adc
scas
xlat
or
or
sti
ret
imul
push
fmul
les
or
ins
add
shr
inc
into
loopne
test
or
and
sbb
xor
dec
in
dec
jne
es
std
dec
jne
scas
cmps
dec
inc
xor
stos
es
test
cmp
loopne
inc
ret
push
jbe
xor
sbb
fstp
leave
xor
push
and
push
fistp
cli
add
inc
lods
popf
dec
adc
or
sub
add
adc
add
aad
sub
mov
ss
xchg
arpl
(bad)
xor
dec
arpl
mov
pop
jno
ud1
loop
push
fst
push
adc
lea
mov
emms
or
jne
cmp
pop
imul
add
and
adc
dec
inc
lea
and
data16
and
mov
or
dec
push
xchg
sti
call
call
dec
sete
test
je
and
push
rcl
ins
sbb
and
add
mov
sub
sbb
mov
sbb
movs
inc
icebp
das
and
mov
mov
sbb
xchg
(bad)
push
add
and
mul
inc
xlat
push
xchg
inc
dec
and
inc
test
mov
hlt
rcr
shrd
sbb
and
stc
rol
mov
dec
cmp
mov
xlat
cmp
mov
aad
adc
jne
bound
cmc
nop
and
push
inc
lods
or
or
lods
or
ror
cmp
mov
test
std
mov
mov
icebp
in
aas
add
add
push
scas
jo
or
adc
mulps
mov
add
sahf
jp
fcom
adc
and
fild
neg
xor
pushf
push
xchg
mov
or
fwait
dec
mov
les
pop
aaa
cwde
cmp
dec
inc
add
ja
mov
outs
dec
or
xchg
aam
pop
pop
ret
push
jo
outs
inc
xchg
xor
(bad)
repnz
push
jb
je
inc
stc
jmp
mov
push
cmp
dec
pop
cmp
je
(bad)
pop
adc
mov
push
cmp
lock
rol
dec
jmp
ins
add
inc
push
cmp
je
pop
push
shl
fmul
lods
ret
dec
cdq
loope
cli
ret
jno
cmp
cwde
jnp
sbb
int3
clc
out
cwde
add
mov
sub
pop
jb
and
lock
pop
add
add
or
fisttp
inc
dec
inc
pop
(bad)
(bad)
jb
outs
jb
loopne
add
push
adc
gs
imul
sbb
or
fcomp
push
ins
bound
push
and
ins
bound
or
in
ja
fsub
or
std
inc
add
adc
and
and
inc
jbe
outs
je
inc
adc
(bad)
or
gs
add
push
bound
ins
adc
inc
hlt
add
arpl
push
js
adc
jb
ja
and
mov
push
lock
inc
inc
test
mov
adc
cmp
inc
add
fild
sub
data16
adc
nop
in
sbb
jbe
fldpi
or
jae
inc
sub
ja
gs
inc
add
sar
gs
ret
aas
in
test
add
adc
dec
popa
jae
jb
out
add
push
or
add
mov
ins
cmp
adc
std
add
adc
or
xor
enter
loopne
or
pop
ins
popa
into
ins
popa
ret
inc
ins
popa
push
popa
jb
cmps
add
add
adc
inc
sub
dec
test
sub
inc
ret
iret
and
fs
cmps
sbb
xor
js
inc
or
inc
aaa
pusha
adc
fcom
add
mov
pop
hlt
add
inc
add
jmp
test
hlt
add
aaa
pop
add
fdivr
sbb
mov
pop
pop
push
or
mov
mov
mov
adc
pop
mov
outs
movs
or
add
add
inc
loopne
neg
add
jmp
or
inc
add
out
lahf
(bad)
sbb
pandn
outs
fmul
pop
sbb
inc
add
inc
add
inc
sub
aaa
inc
add
add
add
rol
mov
and
inc
aam
clc
adc
xor
inc
add
add
(bad)
add
add
in
pop
push
repnz
add
sbb
sbb
push
rcr
and
(bad)
(bad)
imul
sbb
add
add
gs
push
cmp
cmp
out
mov
or
dec
outs
je
gs
and
enter
add
dec
imul
scas
sti
scas
and
or
movs
add
lods
ds
jne
push
add
push
xlat
cwde
jmp
and
lods
sldt
add
test
(bad)
sbb
in
cmp
add
add
sub
jae
pop
mov
or
add
aam
sbb
or
enter
fmul
or
inc
or
mov
dec
cmp
xchg
fist
mov
cmp
or
xor
or
xlat
xor
inc
loope
fidivr
and
and
push
mov
or
inc
jb
jne
inc
lock
jo
retf
push
push
pop
lods
jnp
add
xor
inc
cli
or
jne
inc
dec
and
sbb
inc
or
rcr
call
add
into
imul
mov
add
push
popa
imul
pusha
and
mov
add
lods
dec
lea
lods
dec
sar
js
ds
int3
ret
mov
xlat
push
adc
mov
add
push
inc
ja
and
add
mov
arpl
(bad)
nop
and
cmp
mov
jnp
add
push
push
loopne
cwde
add
popa
lock
push
add
dec
outs
adc
neg
mov
add
and
pop
pop
add
inc
add
sbb
outs
add
mov
aad
mov
loop
add
jp
and
push
hlt
pop
inc
repz
inc
add
add
enter
inc
add
pop
xchg
jmp
fld
lds
push
sub
and
push
icebp
jbe
in
jne
cmp
out
add
dec
jb
mov
cwde
xor
mov
popa
add
rep
xor
ror
test
enter
or
push
inc
add
push
lds
(bad)
outs
jge
pop
out
jne
rol
pop
(bad)
jle
xlat
or
adc
ja
add
mov
aaa
mov
and
and
add
mov
or
clc
dec
gs
jb
lds
cmp
xlat
mov
cmps
or
pusha
inc
mov
test
and
or
jb
pop
add
outs
ror
cmp
call
or
inc
cmp
and
or
je
xor
ins
sbb
push
sub
loope
add
push
mov
aas
mov
xchg
nop
or
inc
add
andps
or
jg
push
mov
push
jo
and
jo
dec
adc
jo
dec
loop
cmp
or
push
jb
arpl
out
mov
dec
sbb
je
xor
cmp
mov
out
and
aas
mov
outs
jae
mov
call
ins
jg
outs
mov
or
or
mov
jo
outs
cwde
or
cmp
ins
popa
call
aam
jbe
push
push
hlt
not
popa
shr
add
pop
or
add
js
jecxz
pop
xlat
jmp
in
pushf
pop
inc
add
add
div
mov
mov
adc
enter
in
adc
je
cmp
call
shr
pop
dec
or
adc
rcl
xchg
xchg
pop
add
bound
push
adc
and
sub
jne
les
pusha
add
xor
pushf
xor
les
or
(bad)
bound
lea
inc
pushf
add
and
pop
mov
or
pusha
iret
jge
push
add
cs
push
test
stos
loop
push
test
jo
add
(bad)
loopne
mov
cld
or
sub
adc
inc
add
rcl
add
inc
add
inc
inc
add
add
scas
adc
inc
outs
push
adc
dec
jmp
sub
pop
or
pop
or
adc
push
mov
sub
movs
and
test
push
jle
inc
cmc
inc
pop
push
das
(bad)
(bad)
mov
xor
xor
xor
inc
inc
inc
inc
inc
dec
adc
(bad)
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
es
mov
rcl
xor
jp
pop
adc
mov
mov
repz
test
inc
and
lahf
push
das
mov
sti
loopne
xor
test
dec
scas
xor
adc
das
or
ret
jae
add
std
mov
xor
mov
xor
std
jmp
inc
(bad)
test
je
add
or
adc
sbb
sar
mov
cmp
add
shr
(bad)
push
call
shl
test
je
jg
sub
cmp
call
pop
sbb
ret
lea
or
cmp
sbb
lock
or
stos
pop
pop
or
ds
mov
mov
cmp
jge
add
sub
jb
or
mov
jnp
call
inc
icebp
add
ret
mov
in
(bad)
mov
std
cmp
jge
add
sub
cmp
cld
or
or
sbb
call
sbb
and
jmp
popa
add
sub
jb
cld
jg
inc
clc
xor
mov
mov
in
pop
and
jbe
dec
mov
stos
cmp
add
push
ins
mov
xor
inc
add
sbb
jmp
pop
adc
jmp
cmp
push
dec
jb
leave
adc
ret
pusha
ret
xchg
daa
sub
outs
lea
and
fdivr
cwde
dec
syscall
icebp
movq
pusha
jmp
lea
in
adc
cld
inc
icebp
or
dec
fdivr
je
arpl
add
sbb
inc
in
inc
dec
or
aas
mov
mov
pop
sbb
pop
dec
push
rcr
add
les
mov
cmp
sti
inc
sbb
cli
mov
xor
sbb
cmp
pop
pop
cmp
jl
jne
add
fwait
or
cmp
push
sub
or
dec
cmp
add
jne
add
mov
add
mov
mov
inc
sbb
mov
inc
or
lea
clc
popa
xor
mov
xor
and
ror
inc
pop
xor
xor
lea
mov
add
cwde
test
je
data16
add
jmp
sbb
add
iret
mov
inc
in
inc
jmp
sbb
sbb
mov
mov
mov
add
xchg
inc
xchg
adc
(bad)
mov
(bad)
or
jmp
inc
cmp
jne
push
or
push
outs
fiadd
push
lds
push
loopne
xchg
pop
pop
mov
xchg
mov
movzx
mov
adc
sub
clc
add
fild
test
je
mov
jmp
mov
call
(bad)
xor
cld
mov
mov
cmp
ja
movs
sub
push
push
call
add
mov
inc
sub
jmp
lods
cmp
jg
mov
loope
xchg
outs
sbb
ja
dec
hlt
jae
(bad)
jmp
clc
call
(bad)
test
push
fnsave
mov
das
or
(bad)
push
in
(bad)
mov
jmp
mov
mov
cmp
jle
inc
cld
out
in
mov
xor
jne
dec
xor
mov
cmp
ja
call
mov
add
mov
jbe
popf
sti
jmp
mov
aaa
sbb
sub
jg
mov
lock
cmp
jbe
jmp
cmp
adc
xor
mov
jge
add
cmp
(bad)
cli
es
call
fstp
imul
dec
mov
adc
adc
loopne
mov
das
sub
cmps
mov
dec
mov
inc
mov
cmp
sbb
jae
inc
inc
ret
jl
sub
xor
scas
aaa
mov
inc
das
add
enter
add
inc
mov
cmp
adc
int
int3
inc
mov
imul
jae
xor
xor
add
push
fld
xor
mov
add
cmp
scas
push
sbb
inc
push
das
inc
(bad)
inc
add
popf
push
popf
mov
or
and
cmp
je
xor
mov
sti
fst
push
movs
mov
pushf
movzx
cmp
outs
xor
add
mov
mov
retf
xor
into
push
add
jae
mov
jp
cmp
sbb
mov
into
adc
dec
sub
add
ds
push
add
add
mov
jo
cld
js
jmp
inc
loop
sbb
shl
mov
shr
add
mov
cmp
iret
daa
aas
sub
inc
adc
jae
lds
add
call
pop
pop
fsub
and
lock
jle
sub
movs
mov
sbb
cmp
out
in
loope
mov
xor
dec
es
fadd
mov
inc
pop
mov
inc
pop
pop
ret
xchg
aam
adc
and
retf
jle
scas
clc
or
mov
nop
push
cwde
mov
adc
aam
push
ror
xor
std
jmp
mov
mov
cmp
mov
inc
jmp
mov
mov
push
test
adc
inc
add
pop
loopne
retf
jg
mov
inc
fwait
add
lods
mov
push
in
add
inc
push
inc
fs
nop
(bad)
jmp
mov
loope
xor
cwde
pop
test
jg
cmp
adc
adc
or
pop
sbb
inc
pop
sub
(bad)
scas
call
(bad)
pop
mov
data16
or
cld
(bad)
movzx
xor
add
add
outs
loopne
xor
jg
xor
mov
mov
movq
inc
cli
xor
push
push
jnp
add
jbe
or
adc
sbb
std
jmp
mov
add
inc
mov
jmp
add
mov
mov
cmp
mov
mov
fstp
xor
clc
push
shl
je
adc
jne
pop
mov
clc
jmp
pop
pop
add
mov
out
inc
retf
aas
dec
xchg
add
push
and
jle
add
push
jl
out
bound
test
cmp
je
mov
cmp
add
jb
jno
sbb
mov
xor
pusha
add
jg
add
pusha
neg
xor
scas
pop
or
mov
or
pshufw
add
push
or
outs
inc
aaa
mov
cdq
inc
cmp
push
cmps
sbb
or
dec
lahf
outs
(bad)
dec
inc
push
mov
add
add
jecxz
scas
mov
mov
std
daa
cmp
or
push
lea
inc
push
cld
inc
(bad)
push
push
push
sub
shl
or
xor
sub
mov
mov
or
mov
jge
or
fdivr
sbb
or
repz
shl
sbb
and
or
in
jg
jp
or
or
push
jb
lahf
jnp
mov
push
sbb
mov
xchg
dec
lea
or
dec
into
inc
or
xor
or
jno
xor
ret
pop
inc
xor
mov
pop
inc
into
mov
add
dec
xor
push
xor
sbb
xor
jg
pop
jo
fld
dec
in
cs
adc
je
xor
lds
ss
dec
cld
mov
movs
aaa
(bad)
sti
sbb
push
push
dec
cld
outs
add
push
punpckhdq
shl
hlt
and
lea
movs
add
cmp
(bad)
hlt
mov
add
xor
jb
jbe
sub
cmc
and
jle
mov
fwait
(bad)
mov
sbb
jne
mov
cmp
je
mov
xor
adc
dec
ins
mov
mov
or
sbb
adc
xchg
and
or
push
jp
jne
pop
das
stos
and
and
add
je
je
rcl
mov
mov
test
jne
je
add
je
dec
or
mov
xlat
add
or
adc
in
or
lds
inc
pop
push
push
sete
push
lock
test
jle
push
push
test
jo
xchg
lock
sbb
dec
sub
pop
xor
jg
test
je
cmp
and
xor
inc
xor
mov
mov
sbb
sahf
adc
dec
les
hlt
cmp
add
mov
fnstsw
add
jmp
pop
mov
sub
jge
mov
inc
cmp
jae
mov
add
add
call
daa
inc
or
lahf
mov
inc
dec
jne
add
jmp
push
jne
mov
or
fcomi
out
test
add
mov
jmp
sbb
fmul
inc
sbb
cwde
sub
mov
shr
dec
or
mov
mov
outs
add
jg
add
pop
pop
xor
mov
sbb
js
or
and
pop
add
and
rcl
and
xor
sbb
lahf
hlt
leave
aad
movhps
jecxz
mov
arpl
inc
lods
cs
je
test
jne
and
or
jmp
cld
pop
push
push
cmp
or
or
inc
lea
sahf
shl
ja
aad
je
add
add
and
hlt
jbe
mov
sub
shr
cmp
mov
fmul
pusha
jne
aaa
jne
sub
(bad)
mov
add
add
lea
mov
out
pop
cmp
sahf
std
popa
adc
inc
mov
jle
add
inc
fcom
mov
add
push
mov
or
call
cmp
jne
jg
xor
dec
push
push
mov
bound
xchg
push
into
mov
sbb
add
pop
add
mov
push
jb
adc
ret
mov
and
fcom
mov
lds
and
cmp
fadd
mov
popa
jnp
adc
dec
inc
adc
ret
fsub
add
mov
sbb
sub
les
loopne
or
jecxz
inc
shl
add
outs
clc
pop
mov
mov
sbb
dec
or
sub
inc
push
test
add
fist
or
(bad)
ja
inc
sub
add
inc
or
inc
or
cmp
inc
je
adc
adc
stos
mov
adc
push
or
or
mov
sbb
sbb
pop
xor
sbb
xor
or
cmp
xor
or
jo
add
jg
clc
in
cmp
mov
inc
ror
dec
xor
inc
ror
fstp
jne
inc
iret
es
or
mov
inc
adc
mov
in
hlt
sbb
xor
xor
call
jle
ror
fcmovb
inc
clc
cld
jne
mov
jle
add
js
add
mov
mov
inc
cmp
jle
or
(bad)
fbld
inc
enter
jg
ficomp
or
mov
pop
inc
push
mov
mov
mov
add
mov
dec
test
je
fsubr
cs
repz
test
ss
push
add
sti
fld
inc
mov
add
or
rol
adc
cld
jmp
push
mov
rcl
and
push
cld
xor
je
ror
test
popa
neg
sbb
xor
inc
sub
sbb
ret
mov
pop
dec
mov
mov
cld
mov
or
ja
loope
data16
cmp
and
jbe
jmp
adc
mov
inc
and
and
sub
dec
sar
mov
xor
mov
or
xor
imul
dec
sub
sbb
jae
or
push
push
mov
mov
(bad)
rcl
ret
push
sub
clc
add
xor
push
imul
inc
mov
add
test
jg
mov
pop
mov
add
xchg
mov
push
or
test
aad
mov
xchg
mov
jge
in
inc
mov
inc
mov
and
adc
or
sub
or
xchg
outs
test
inc
push
das
sub
mov
arpl
in
sub
rol
fdiv
xchg
lock
int
or
ret
jae
mov
jl
scas
test
and
lea
lea
push
ret
jae
inc
punpckhwd
sti
das
mov
sub
cmp
jge
sbb
xchg
push
lock
mov
ss
jbe
dec
add
push
or
jge
xor
stos
or
push
hlt
pop
xchg
mov
addr16
mov
and
inc
sbb
addr16
mov
enter
mov
dec
int3
adc
jo
lea
inc
jp
cdq
psubw
dec
xchg
sti
dec
das
dec
cld
jmp
or
add
add
dec
pop
punpckhbw
xchg
mov
scas
gs
sbb
cmc
cdq
or
fbstp
mov
dec
add
xchg
fwait
add
cmp
mov
xor
cmp
sub
add
push
cli
pop
push
sahf
enter
rol
add
push
pop
inc
rcl
rcr
add
xor
movs
inc
or
pop
jnp
inc
clc
imul
cmp
call
mov
pop
nop
pop
dec
sub
bound
ja
outs
or
or
lods
in
scas
jb
shl
sbb
inc
je
es
lock
push
push
pushf
dec
out
xor
fadd
push
or
sbb
(bad)
jae
dec
call
ja
fcomip
mov
enter
rol
inc
pushf
sbb
js
push
inc
or
or
dec
mov
jo
xor
push
ja
je
and
pop
mov
bound
mov
js
fld
out
pushf
or
mov
xor
mov
mov
adc
push
sbb
je
push
in
cmc
sub
sub
jae
es
push
stc
mov
fmul
outs
test
and
sbb
cmp
jmp
sub
dec
mov
test
je
ss
(bad)
js
jne
mov
movs
mov
lods
fsub
rol
arpl
add
push
ja
ret
call
dec
inc
dec
xchg
mul
add
mov
xor
pop
pop
ret
push
shl
add
outs
adc
cmp
popf
push
pop
xor
mov
adc
test
xor
pop
sbb
pop
or
xchg
adc
call
adc
lea
fmul
test
adc
and
rol
mov
and
test
dec
add
mov
mov
call
adc
je
sbb
mov
jne
add
mov
push
mov
pop
or
clc
sub
and
push
sbb
add
jo
jo
dec
adc
or
mov
sub
push
leave
sub
mov
mov
(bad)
dec
inc
clc
mov
mov
test
jbe
les
ja
inc
scas
mov
and
sub
or
mov
rol
adc
call
lock
(bad)
jb
dec
enter
cmc
or
jl
inc
and
aam
add
add
test
shld
fs
or
inc
daa
push
enter
(bad)
push
stos
inc
scas
mov
pop
adc
inc
jg
xor
inc
or
inc
loopne
js
sbb
pop
sub
pop
add
dec
int3
add
mov
sbb
or
daa
cmovb
xor
pop
daa
add
or
cwde
push
push
push
mov
nop
mov
mov
mov
sbb
mov
mov
or
test
cli
shl
or
iret
inc
xlat
push
add
and
jg
add
mov
mov
mov
es
enter
push
add
je
xchg
movs
fwait
sbb
jl
jmp
or
rol
je
mov
cmp
pop
inc
ja
jne
cmp
je
xchg
cmp
(bad)
enter
or
inc
hlt
mov
push
dec
iret
test
out
push
mov
je
test
inc
or
mov
enter
mov
mov
cwde
cmp
stos
mov
mov
imul
jne
add
and
stos
jbe
add
sub
mov
or
ja
mov
push
fs
mov
repz
je
or
mov
inc
sub
add
scas
xor
(bad)
(bad)
inc
test
sbb
or
push
xor
pop
mov
test
xchg
xchg
inc
or
inc
je
in
pop
push
aad
xchg
scas
iret
fadd
cs
dec
aam
mov
mov
fwait
out
nop
push
mov
pop
sub
or
mov
jmp
mov
call
inc
cmps
pop
test
hlt
mov
mov
add
xor
jl
dec
inc
loop
inc
cld
mov
jmp
(bad)
(bad)
call
in
sub
add
(bad)
mov
mov
mov
mov
inc
inc
mov
add
jg
std
adc
dec
add
inc
jg
test
jne
dec
adc
sti
xor
sub
sub
data16
int
rol
sbb
wbinvd
or
or
xor
sti
test
sbb
pop
pusha
jecxz
hlt
mov
popf
div
push
fadd
push
jg
data16
out
pusha
jmp
dec
add
leave
or
in
xor
mov
dec
inc
or
or
add
mov
lea
push
push
push
dec
clts
pop
sbb
cmp
es
add
inc
add
mov
xchg
add
cmp
in
cmp
loope
xchg
mov
test
gs
push
xchg
push
in
sub
fadd
add
or
nop
cmp
je
mov
jp
into
push
test
js
inc
xor
ins
adc
in
jo
jne
pop
xor
mov
mov
or
jl
inc
mov
inc
lock
xor
mov
mov
or
je
lods
jle
sar
jp
aas
jne
sub
dec
jne
jb
mov
outs
add
cmp
je
mov
pop
pop
cmc
ret
push
inc
sbb
jne
aas
mov
and
enter
mov
push
not
jne
call
test
je
cmp
(bad)
outs
and
mov
ret
push
sbb
mov
orps
sub
jne
cs
mov
push
fsub
lahf
or
aaa
pop
sbb
pop
jl
pop
add
push
iret
push
cmp
ja
je
inc
adc
mov
cli
push
mov
add
inc
loopne
pop
aas
cmp
mov
push
inc
movlps
ins
std
add
addr16
or
sbb
add
pop
jne
adc
push
das
mov
les
dec
cmps
fwait
jne
mov
mov
inc
pop
call
xor
jg
cmp
je
mov
loopne
fcomp
add
cmp
out
ds
inc
je
mov
jae
fs
adc
or
je
mov
push
mov
fist
inc
fs
je
and
push
adc
sar
es
lock
mov
add
inc
sbb
or
mov
add
das
sbb
push
push
jmp
inc
mov
mov
and
xor
fwait
mov
push
mov
cld
push
pusha
add
ret
icebp
mov
mov
mov
aas
xchg
inc
aaa
mov
cld
cmps
sub
aas
out
cmp
je
ret
inc
push
jne
cmp
xchg
(bad)
mov
test
mov
outs
inc
adc
inc
inc
cmp
inc
dec
jne
mov
or
dec
xchg
pop
mov
adc
mov
je
mov
jo
inc
(bad)
pavgb
mov
push
out
dec
test
jl
mov
cmp
jge
mov
add
(bad)
loopne
mov
inc
aas
jbe
adc
call
mov
inc
ret
and
loopne
(bad)
adc
mov
or
xor
pop
mov
int
mov
inc
add
xchg
mov
pop
ret
dec
mov
xchg
ret
mov
fwait
mov
movs
xor
ficomp
lods
cmp
xor
sub
or
mov
mov
add
inc
jl
cmp
mov
push
jle
xchg
je
mov
cmp
ja
jmp
inc
add
cmp
sbb
mov
ins
and
call
push
les
(bad)
enter
or
(bad)
mov
mov
add
fcmove
rol
ret
xchg
mov
mov
cmps
fdiv
ror
lock
test
add
mov
pop
sub
sub
jge
push
xor
jbe
nop
push
adc
xchg
or
add
pusha
rcr
xchg
sti
adc
fwait
into
or
mov
xor
shl
lock
rcl
jo
inc
fs
jle
pushf
cmp
sbb
jne
push
inc
hlt
or
dec
and
push
sbb
jne
shr
mov
cmp
add
mov
sbb
imul
(bad)
inc
sti
inc
icebp
push
jge
add
add
ins
jmp
adc
mov
push
xor
cmp
mov
add
push
and
(bad)
cs
mov
call
(bad)
dec
add
aas
ins
cli
mov
mov
add
mov
jg
ror
mov
mov
test
jne
push
test
cmp
fistp
adc
arpl
inc
mov
jl
xor
fwait
(bad)
inc
or
sub
inc
dec
mov
add
movs
or
cmp
adc
adc
setge
stc
push
jae
cmp
mov
jo
dec
rcl
test
je
or
les
aaa
inc
sbb
inc
xor
sub
pop
adc
into
and
add
mov
sub
mov
fcmovnb
in
shl
mov
lock
cmp
je
mov
cmp
ret
push
ret
ret
and
jne
shl
xlat
mov
jl
dec
ja
push
sti
push
call
je
inc
icebp
or
xchg
push
adc
dec
adc
or
and
push
and
imul
pop
daa
cmp
adc
iret
jle
aas
cmp
mov
mov
addps
adc
inc
pop
jecxz
ffreep
and
aas
add
ins
and
adc
jmp
inc
fidiv
cmp
jne
ja
icebp
push
mov
pop
cmp
pop
sbb
sub
or
add
adc
adc
sub
ret
jmp
mov
cmp
add
or
dec
and
mov
ret
mov
outs
adc
outs
xchg
push
rcl
add
cmp
pop
ret
int3
push
or
pop
sbb
and
cmp
xor
or
cmp
push
or
inc
sbb
xor
int3
sbb
sbb
ret
and
pop
in
inc
inc
aaa
hlt
add
xchg
add
je
mov
sub
add
sti
aam
xchg
dec
mov
loope
ror
add
(bad)
push
sub
shr
ret
xor
push
mov
adc
push
xor
shl
popa
mov
ins
mov
push
xor
xor
fmul
or
ror
xor
push
cmp
dec
push
adc
add
aam
push
cmp
(bad)
sti
jne
in
retf
or
pop
push
retf
out
inc
jl
or
cmp
dec
imul
repnz
imul
cwde
cmp
je
lds
mov
cmp
data16
inc
xchg
aam
push
cmp
lock
mov
dec
add
push
(bad)
nop
(bad)
jle
jno
mov
nop
mov
dec
inc
in
inc
push
mov
cmp
and
and
ret
sbb
push
sub
test
push
mov
mov
aad
push
mov
inc
xchg
or
inc
ror
inc
xchg
ret
cmc
sbb
xor
push
or
push
inc
in
(bad)
inc
sbb
stos
sbb
mov
mov
shl
jmp
ins
test
jne
push
add
mov
xor
adc
cmp
adc
or
mov
add
mov
xor
push
push
or
and
sar
xchg
pop
push
mov
mov
mov
outs
stos
jp
mov
xchg
add
dec
jne
mov
fisttp
test
push
into
sti
sbb
dec
inc
mov
mov
je
inc
hlt
mov
std
popf
or
pusha
jne
lea
sub
sub
mov
(bad)
iret
test
add
je
jne
push
add
clc
jmp
push
push
mov
mov
xor
aam
aaa
push
and
rcr
hlt
(bad)
mov
clc
mov
sbb
push
xchg
addr16
pop
retf
bound
fistp
or
pop
es
cmp
fisttp
sub
add
dec
mov
mov
mov
mov
mov
mov
adc
jp
mov
cld
aas
test
dec
cmovbe
inc
out
cmp
jne
inc
sbb
aaa
rol
mov
cld
mov
scas
mov
hlt
add
loopne
cmp
mul
lock
rol
movs
ret
adc
add
test
push
in
sbb
loopne
clc
push
cld
(bad)
(bad)
mov
xor
dec
jo
cmps
shl
or
adc
sub
outs
cmp
test
jmp
in
adc
add
cpuid
cs
cmps
jge
mov
lea
aaa
jno
sub
es
jge
add
and
or
daa
cld
mov
loopne
fs
or
inc
xor
jle
pop
push
or
das
push
aas
pusha
dec
mov
dec
aaa
add
inc
inc
xor
out
ja
dec
ror
xor
inc
dec
enter
call
adc
adc
popa
pop
fs
push
pushw
sti
mov
mov
sub
loop
inc
mov
and
hlt
jl
pop
lea
jle
sbb
push
or
out
or
xor
mov
mov
mov
jo
bt
jae
inc
jmp
mov
pop
or
ror
inc
js
push
mov
test
je
and
jge
pop
call
lea
mov
daa
stos
cmp
sbb
mov
inc
fsub
imul
jmp
inc
xchg
push
xchg
loope
ins
cmp
fmul
mov
aas
xchg
leave
fstp
fsubr
pop
mov
das
mov
inc
dec
cwde
mov
ret
or
inc
sbb
push
inc
fsubr
mov
dec
mov
inc
clc
jo
dec
jne
sbb
fs
or
lahf
inc
out
sbb
xchg
cs
test
dec
or
mov
xchg
out
ds
xor
imul
inc
mov
jo
sti
mov
jp
xchg
push
mov
mov
or
adc
adc
ror
add
cmp
jmp
or
in
adc
test
bound
mov
in
pushf
imul
cwde
pop
pop
add
hlt
into
xor
or
xor
rcr
push
ins
xor
test
mov
into
mov
add
clc
imul
daa
or
cmp
push
mov
call
cmp
outs
mov
pop
call
push
ja
xchg
test
mov
test
retf
inc
sbb
xlat
daa
data16
mov
xchg
add
add
in
mov
sub
dec
sub
jl
fs
jp
inc
(bad)
sub
sub
jge
das
mov
adc
inc
add
fisubr
jmp
mov
add
dec
jne
push
pop
sti
inc
xchg
inc
pop
test
je
cmp
je
mov
mov
ss
mov
jmp
or
js
popf
fbstp
sbb
in
(bad)
out
(bad)
mov
and
sub
jg
dec
xor
rol
cmp
stos
popa
jge
adc
mov
mov
dec
inc
jne
mov
stos
ret
and
jnp
loop
pop
ret
inc
cmp
jne
cmp
je
mov
sbb
lahf
je
rol
invd
les
push
cmp
in
and
cmp
pop
sub
mov
stc
jl
scas
jmp
aas
push
je
les
cmp
xchg
mov
add
inc
sbb
inc
add
sbb
add
push
hlt
call
mov
mov
inc
inc
ffree
or
cmp
pop
ret
leave
jno
inc
mov
jb
adc
push
xchg
in
sbb
xchg
loope
inc
mov
pop
rcl
jne
push
xor
mov
push
cmps
pop
test
shr
ror
inc
mov
stc
rcr
or
push
lock
mov
scas
xor
push
or
and
cli
add
xor
pop
push
add
ret
or
mov
and
or
push
mov
movzx
cmp
int
inc
jne
cmp
addr16
cmp
je
or
add
imul
sub
ret
or
js
pusha
add
inc
add
ret
adc
inc
xchg
mov
and
pop
cmp
push
sub
stc
fisttp
or
enter
xrelease
mov
xor
mov
mov
add
inc
les
inc
push
dec
mov
sbb
mov
and
xor
sub
(bad)
mov
jle
adc
xor
call
push
xchg
add
push
mov
jmp
mov
mov
sbb
add
cs
cmp
pushw
cmp
mov
cli
shl
gs
cmps
mov
outs
mov
xor
movzx
inc
cmp
iret
sbb
cli
add
or
test
mov
add
jp
shl
inc
mov
inc
inc
into
aad
aam
test
push
or
ins
pop
rcr
add
push
adc
sbb
addr16
shr
dec
mov
add
cmp
cmp
xor
mov
pop
push
aas
xor
jb
jnp
mov
jmp
test
pop
mul
jne
add
or
xchg
call
jecxz
or
mov
pop
jmp
mov
dec
dec
push
add
test
jle
test
jne
dec
rcr
ins
mov
mov
push
lea
(bad)
loopne
loope
sbb
test
mov
in
out
loop
and
add
test
test
(bad)
jge
jne
push
cmp
je
mov
mov
lahf
cmp
cmp
or
mov
cli
and
inc
hlt
mov
cmps
push
xor
push
jl
inc
xor
adc
in
lds
in
cmp
cwde
mov
int3
add
cli
outs
or
test
jne
add
add
mov
aas
adc
not
pop
mov
outs
push
add
dec
(bad)
pop
sbb
sbb
inc
cld
or
cmp
ds
jmp
stos
push
ret
int3
call
jmp
sbb
ja
gs
mov
jg
xchg
mov
cmp
icebp
dec
fstp
test
jge
add
lahf
sub
adc
adc
inc
or
je
and
mov
xchg
test
cs
rol
sbb
repnz
sti
jg
dec
inc
repz
mov
cli
mov
sub
add
add
lea
xor
rcl
ss
cmp
repz
pusha
mov
aam
out
mov
loop
cdq
je
cmp
je
les
jge
dec
inc
add
cld
add
xor
inc
call
xor
push
mov
mov
or
psrad
jmp
xor
lock
push
and
push
inc
and
mov
push
call
push
pop
cli
add
movs
mov
and
jmp
add
inc
cmp
je
sbb
iret
jle
xchg
shl
lea
and
lahf
(bad)
dec
ret
daa
jnp
or
push
pop
nop
or
cmps
cmp
sbb
push
push
mov
fidivr
sub
inc
fild
imul
pusha
push
pop
sub
push
popf
outs
add
mov
std
(bad)
dec
inc
js
loopne
push
fsub
push
mov
out
(bad)
call
pop
push
mov
inc
mov
test
or
(bad)
jle
add
mov
push
inc
cmp
jge
cmp
jb
outs
(bad)
xor
pop
jg
les
in
imul
push
mov
test
xor
inc
cmc
adc
adc
adc
(bad)
mov
adc
sub
sbb
lea
adc
and
push
add
sbb
cmp
shl
rol
push
jmp
push
inc
adc
add
push
fwait
cmps
xchg
lock
add
mov
mov
mov
mov
inc
mov
xor
or
ror
or
mov
or
push
or
clc
outs
xchg
push
push
cli
mov
pop
cs
in
pop
pop
push
ins
and
jae
add
loop
fnstcw
jl
sbb
jnp
sub
pop
fiadd
pop
inc
inc
jmp
xchg
add
or
cmp
je
enter
xor
call
mov
leave
xchg
xchg
clc
aaa
popa
jo
ja
icebp
mov
mov
sbb
shl
mov
mov
sub
jb
add
cmp
xchg
xor
sub
mov
ins
nop
outs
inc
cld
or
adc
adc
cmp
test
inc
scas
iret
repnz
xchg
ins
cmp
jne
push
pop
mov
stos
inc
cwde
sub
clc
int3
nop
mov
sbb
xchg
pop
jecxz
push
xor
test
je
push
(bad)
push
cld
mov
xchg
std
mov
xor
lock
sbb
clc
push
or
leave
push
rdpmc
ror
mov
add
je
jmp
push
add
jo
punpckldq
call
ds
(bad)
hlt
icebp
push
test
fs
nop
push
fsubr
sub
addr16
push
and
lock
jge
pusha
jb
mov
in
loopne
xchg
inc
mov
ins
fisubr
cmp
push
lea
mov
adc
jbe
hlt
pop
or
adc
clc
xor
push
fs
xor
add
into
rcl
outs
clc
stos
mov
je
add
cmp
push
add
cld
jns
or
inc
xchg
mov
pop
mov
hlt
mov
div
adc
pushf
loope
sub
(bad)
jl
inc
mov
xor
adc
push
loopne
call
or
inc
mov
mov
fsubr
(bad)
(bad)
push
jmp
push
or
jne
mov
add
pop
or
add
add
or
jl
mov
inc
dec
jne
xor
add
or
sbb
sbb
mov
add
xchg
jno
out
pop
inc
sbb
addr16
pop
in
out
ret
popa
dec
nop
(bad)
(bad)
inc
mov
cmp
jne
shl
or
mov
jmp
cmp
data16
inc
jne
push
jge
mov
mov
sbb
movs
sbb
push
ret
paddb
cmp
mov
add
arpl
add
or
int3
enter
jmp
and
mov
xor
push
dec
std
xchg
mov
adc
add
cmps
adc
paddw
adc
jmp
xor
jmp
push
mov
inc
adc
movs
pop
mov
cmp
xor
push
xor
inc
jge
aam
xor
push
inc
je
mov
rol
addr16
arpl
add
mov
push
mov
(bad)
inc
and
rcr
imul
sub
fcomp
mov
dec
sub
cmp
mov
inc
movzx
mov
shr
and
mov
aas
test
cmp
push
pop
cmp
ret
cmp
mov
sbb
cmp
push
push
neg
inc
xor
pop
xchg
push
push
adc
dec
jbe
aas
jl
div
xor
sbb
aam
or
add
cmp
cld
xor
mov
ss
xor
ins
or
mov
add
or
nop
mov
push
adc
dec
push
sbb
mov
xchg
add
dec
push
sub
add
push
pop
dec
push
add
addr16
or
pop
aam
inc
imul
jo
add
xchg
push
aad
stos
or
mov
les
mov
mov
mov
push
inc
pop
push
cmp
jp
push
call
push
dec
je
daa
pmaxub
and
adc
cmps
jno
inc
sub
je
and
add
ins
cld
mov
test
adc
cmp
mov
push
shl
in
push
cmp
mov
dec
jne
dec
retf
xor
pop
pop
xor
mov
pop
sbb
loop
out
fs
test
je
repz
je
or
add
mov
adc
mov
add
test
jmp
fstp
cmc
adc
inc
clc
sahf
(bad)
jmp
movzx
adc
in
ret
xor
mov
std
clc
add
jo
and
stos
inc
pop
cld
fmul
rcr
mov
mov
cmp
sub
add
inc
loopne
sub
xchg
jl
sbb
mov
cmp
jne
push
inc
xor
pop
mov
enter
push
loopne
push
or
add
sbb
aam
cdq
je
leave
nop
and
xor
adc
arpl
or
xor
add
mov
test
je
add
cmp
sbb
or
div
sbb
sbb
adc
ffree
pop
add
mov
and
cmp
push
jne
add
or
ss
or
dec
add
mov
cdq
fsub
mov
pop
sub
jp
sbb
fmul
sbb
pop
addr16
lock
sbb
xlat
add
pop
add
mov
adc
loopne
mov
sub
mov
fmul
in
mov
dec
dec
cmc
cwde
leave
popf
hlt
fs
(bad)
shr
mov
adc
xor
sbb
xor
cmp
push
adc
and
dec
jo
or
nop
popa
or
out
mov
lods
fistp
inc
in
sbb
ret
or
cwde
sbb
or
pop
and
sbb
les
in
and
add
shl
mov
lea
inc
cmp
dec
jo
icebp
or
cmp
test
sbb
call
xchg
in
js
mov
inc
fimul
dec
adc
xor
add
xor
out
inc
aam
add
call
cmp
je
mov
adc
and
xchg
sub
push
shl
xchg
es
add
push
test
xchg
add
sub
or
dec
idiv
mov
xchg
dec
int3
lea
shl
sbb
repnz
cmp
jne
or
gs
push
pushf
mov
clc
xchg
and
nop
xor
adc
and
xor
sub
mov
sub
adc
loop
(bad)
fimul
sbb
cmp
mov
clc
push
loopne
pop
push
mov
mov
push
cmp
pusha
inc
and
push
inc
xor
xchg
or
inc
popa
add
dec
push
ror
adc
jl
add
rol
cmp
jmp
or
call
mov
inc
dec
inc
ret
push
mov
and
cmp
retf
xor
inc
sub
lock
das
and
jmp
mov
loope
icebp
push
add
nop
push
add
cmp
je
cmp
je
add
cmp
jmp
mov
jmp
inc
out
or
test
mov
pushf
ret
push
mov
xor
pusha
pusha
ret
stos
mov
or
mov
jo
mov
mov
bound
adc
xlat
arpl
push
cmp
or
push
stos
inc
inc
cld
jmp
dec
lods
and
lea
lea
pop
out
outs
cmp
mov
inc
push
pushf
adc
movzx
jl
imul
mov
xor
frstor
push
push
push
mov
pop
and
push
push
push
aas
clc
mov
mov
mov
adc
fiadd
cld
inc
add
cmp
cmp
jne
sbb
outs
xor
xor
mov
inc
dec
jne
sbb
add
push
pop
icebp
lea
jnp
popf
add
daa
jle
jbe
jmp
mov
push
cld
punpcklbw
mov
test
je
inc
cmc
arpl
or
sbb
add
push
ror
or
mov
inc
test
je
dec
(bad)
push
ja
xor
and
mov
jne
or
and
aaa
hlt
add
inc
or
push
lea
mov
cmp
xchg
iret
jnp
jmp
test
jmp
mov
lea
mov
mov
and
jl
xor
es
sahf
or
cmps
sahf
add
cmp
jle
movs
sub
xlat
call
and
(bad)
sub
or
sub
mov
dec
mov
test
add
mov
push
or
push
add
aas
cmp
jle
sbb
push
shr
lock
add
push
xchg
mov
cmp
clc
cmp
jl
mov
(bad)
mov
cmp
cdq
sti
fcomp
std
and
jne
sub
dec
jl
inc
push
je
mov
sub
inc
std
fnsave
cmp
cmp
jge
pop
(bad)
shr
mov
jmp
push
lea
and
outs
mov
cmp
jo
fcomp
sub
inc
add
mov
adc
jo
adc
mov
out
pop
jmp
mov
out
mov
jo
add
pop
and
hlt
pop
je
inc
add
jmp
lock
paddsb
inc
jno
add
cmp
jmp
cmps
in
pop
loopne
cld
aaa
fadd
push
test
enter
push
jmp
and
dec
mov
out
scas
enter
push
sti
icebp
sub
movs
fdiv
and
add
in
loop
retf
rcl
jp
pop
and
or
mov
inc
aaa
dec
adc
xor
or
cmps
clc
daa
sub
add
mov
jl
xchg
sbb
aad
adc
pop
mov
push
loope
(bad)
push
xor
sbb
and
pop
ins
loop
add
daa
push
or
adc
push
mov
add
mov
xlat
xchg
les
fild
dec
outs
arpl
add
sbb
cmovns
jmp
pusha
add
sbb
gs
popa
jb
jae
inc
ins
popa
push
je
aam
or
jno
push
cmp
ins
arpl
test
nop
vmread
xsavec
clc
out
jo
inc
push
xchg
js
out
lahf
stos
jb
ins
push
arpl
mov
cmp
stos
outs
lock
das
fstp
sub
cmp
ror
inc
shr
xor
sbb
add
push
pop
adc
sub
aad
xor
sgdtd
add
push
dec
lsl
pop
out
cmp
add
inc
jb
and
mov
and
(bad)
add
add
adc
popa
jb
imul
test
and
and
inc
or
push
mov
add
add
push
sub
adc
inc
adc
mov
(bad)
jae
add
add
jmp
add
jg
mov
add
push
ins
outs
outs
je
inc
add
inc
jne
inc
and
mov
add
in
loop
xor
mov
push
or
add
inc
pop
int3
pop
or
or
ins
bound
add
adc
bound
add
xor
and
inc
sbb
adc
or
and
gs
add
or
push
shr
xchg
outs
ja
je
inc
daa
adc
fnsave
ja
mov
leave
out
push
imul
or
popa
js
sahf
sbb
cld
mov
or
or
sbb
push
in
retf
paddusb
add
dec
sub
mov
or
pop
out
xchg
inc
add
add
push
xchg
jne
dec
das
mov
adc
inc
add
add
add
imul
or
adc
ins
daa
sbb
inc
add
and
sar
in
jmp
call
pop
push
add
sub
push
inc
mov
mov
fadd
popa
add
sbb
sbb
mov
add
add
xchg
movs
inc
dec
outs
jb
enter
and
or
or
or
add
xor
jg
and
sti
mov
sysexit
xchg
push
push
bound
outs
or
push
mov
or
ja
or
jp
mov
jo
fist
inc
imul
jae
outs
outs
ins
aam
or
adc
push
mov
push
mov
prefetchw
sti
(bad)
(bad)
jg
jb
outs
outs
imul
inc
add
movs
sbb
out
mov
das
mov
xor
sti
out
aas
or
(bad)
dec
dec
dec
ins
gs
sti
(bad)
aas
adc
shl
int
push
rcl
sahf
cmps
add
scas
cmp
pop
xlat
xor
jmp
das
add
repz
add
mov
or
jb
dec
or
dec
inc
dec
inc
push
or
jae
je
shr
outs
push
outs
jo
dec
fdiv
add
adc
daa
adc
outs
mov
xor
jno
sbb
mov
push
jns
je
ins
adc
mov
gs
bound
jle
add
mov
sub
dec
or
out
ja
dec
jae
dec
nop
inc
pop
add
push
(bad)
mov
add
jg
inc
shr
gs
popaw
jne
jge
in
ins
je
or
dec
outs
ins
jns
adc
hlt
(bad)
mov
outs
push
arpl
outs
out
dec
imul
inc
dec
popa
imul
adc
sbb
mov
cmp
test
outs
imul
and
sbb
pop
or
idiv
popa
jb
or
or
ins
(bad)
mov
sbb
xor
xor
outs
or
mov
ins
div
rcl
add
add
xor
push
jo
dec
outs
outs
gs
(bad)
jg
jb
jo
jb
imul
outs
das
push
outs
inc
imul
jl
add
arpl
inc
in
inc
mov
adc
sbb
push
inc
(bad)
arpl
mov
xchg
inc
out
sub
or
mov
jbe
dec
fild
push
pusha
or
or
mov
inc
or
inc
pop
xor
inc
push
jne
jb
sub
inc
popa
outs
and
pop
jecxz
adc
pop
pause
dec
inc
push
pop
(bad)
call
ins
mov
add
addr16
push
push
dec
dec
gs
pop
dec
popa
outs
fs
pop
(bad)
adc
mov
(bad)
cmp
outs
aaa
add
add
inc
outs
ins
ins
shl
nop
adc
inc
popa
mov
add
jl
xchg
gs
bswap
or
sub
adc
retf
(bad)
and
add
outs
cmovb
sbb
mov
adc
call
inc
add
cmp
and
inc
rcl
xor
popf
and
(bad)
aas
loopne
inc
add
inc
add
mov
idiv
pop
mov
cmps
inc
add
inc
add
or
adc
and
clc
add
add
ja
inc
jmp
xor
inc
stos
jg
inc
shl
or
ds
add
add
scas
and
dec
mov
inc
push
aam
mov
inc
aad
pusha
call
(bad)
(bad)
xchg
inc
out
jae
inc
add
enter
add
xlat
std
out
mov
inc
add
int3
fild
ret
dec
mov
cmp
movs
das
and
mov
(bad)
mov
pop
fs
add
add
daa
add
add
call
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
jmp
sbb
inc
add
aas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
(bad)
jmp
mov
mov
mov
mov
mov
mov
push
fist
push
(bad)
std
jmp
sub
in
stos
dec
push
leave
ret
cmps
jnp
sub
pop
dec
pop
retf
popf
imul
inc
add
add
ins
cmp
scas
test
add
jmp
ins
cmp
into
aaa
add
shl
add
pop
rol
out
dec
jns
inc
add
pop
sbb
loope
lods
scas
imul
rcr
das
lock
fmul
cld
add
mov
add
mov
xchg
mov
add
mov
cld
mov
cmp
inc
add
add
cmps
jmp
mov
inc
add
add
mov
cwde
pop
nop
enter
adc
mov
lods
test
mov
mov
xchg
in
in
jl
in
jecxz
ror
adc
sbb
sahf
add
nop
xor
jae
iret
and
add
jo
and
add
daa
add
inc
loop
add
push
data16
pop
or
sar
jg
sbb
add
aam
push
push
jbe
es
or
xor
and
jg
ret
push
or
or
inc
arpl
mov
ins
sbb
and
add
ins
sub
mov
fsub
inc
pushf
in
ins
cmc
dec
adc
outs
or
add
loope
mov
mov
add
and
popa
ins
jne
and
test
xor
or
dec
enter
in
movs
mov
adc
adc
shl
xchg
xor
add
push
fstp
mov
push
adc
je
xchg
sub
out
and
mov
add
leave
jae
sub
or
xor
inc
add
push
cmp
xor
add
and
bound
jno
sbb
popa
jo
cld
pop
daa
mov
add
pusha
(bad)
and
add
and
in
es
add
sbb
or
stos
jmp
ffree
or
sbb
inc
call
or
mov
add
popa
outs
jae
popa
sti
push
pusha
mov
xor
add
call
shr
mov
push
sbb
xor
sbb
and
or
cmps
pop
push
push
sub
stos
push
push
arpl
iret
cmp
xor
or
and
push
nop
das
imul
outs
and
inc
out
sub
je
loope
xlat
inc
or
mov
je
xchg
jb
addr16
or
and
and
push
sbb
cmp
verr
outs
and
test
jge
push
cmp
fdivr
mov
and
sub
add
scas
das
lock
int3
aam
cmp
test
les
mov
sub
sbb
and
(bad)
cmp
call
sub
add
sar
dec
je
add
push
addr16
ret
into
(bad)
nop
inc
cld
mov
xchg
out
cmp
ror
dec
repnz
jnp
inc
add
or
adc
ja
add
xor
push
sub
xor
add
add
dec
ins
fs
jb
popa
je
pop
pop
aam
test
sti
outs
enter
bound
arpl
sbb
inc
pop
push
pusha
mov
sub
xchg
xor
xlat
les
push
mov
fldenv
fnsave
add
ins
jae
adc
add
add
pop
int3
jne
mov
popf
pushf
dec
and
xor
jecxz
and
cmc
aaa
in
add
xchg
xor
or
push
int3
jne
stos
arpl
mov
and
mov
push
pop
fs
inc
add
aad
mov
ss
mov
outs
popa
jo
cdq
add
add
outs
aaa
mov
ja
or
inc
add
jle
cmp
cmp
inc
jne
data16
loopne
or
je
jo
int
xchg
je
push
mov
add
add
and
or
and
and
jne
adc
mov
jl
or
imul
call
jmp
jnp
add
add
and
add
and
dec
cmp
dec
cwde
fisubr
add
pop
sahf
add
adc
add
das
dec
and
and
ds
shr
sbb
jmp
nop
add
aas
outs
jae
add
stos
add
cwde
sbb
stos
stos
inc
mov
test
inc
ss
inc
add
nop
add
inc
add
dec
inc
adc
jmp
mov
jg
inc
or
je
js
neg
fs
jge
jge
inc
jb
adc
pop
in
add
cmp
jae
xor
mov
outs
neg
fsub
inc
gs
outs
jns
dec
in
cdq
mov
inc
gs
cmp
jp
rol
mov
add
hlt
fadd
arpl
iret
je
cs
mov
sbb
nop
mov
add
xor
cmp
fmul
or
aaa
and
add
nop
dec
dec
out
rcr
outs
dec
fimul
xchg
sub
test
in
mov
dec
and
mov
in
fstp
iret
cmp
mov
jo
add
dec
outs
cmp
test
test
add
fadd
ins
jo
fdiv
push
fsubr
inc
dec
dec
inc
fs
pop
sub
or
mov
jge
cmp
push
ret
neg
sbb
stos
ja
and
sbb
rol
and
xchg
dec
call
and
jo
jno
iret
jne
cmp
add
push
jg
push
in
and
arpl
inc
repnz
neg
add
add
push
add
dec
outs
fdiv
fistp
sub
sub
das
cmp
jo
mov
jbe
sahf
pop
or
cmp
add
loope
inc
aam
adc
xchg
jnp
rol
jbe
das
pop
inc
dec
inc
enter
push
in
add
loopne
ja
aam
push
int3
in
and
pop
mov
jmp
and
out
add
arpl
add
rcl
push
not
adc
les
add
add
test
inc
add
cmp
mov
(bad)
dec
add
inc
mov
mov
mov
(bad)
mov
sti
and
fucomip
outs
stos
popf
add
xor
inc
add
mov
andps
mov
inc
xchg
dec
sbb
xor
lds
add
inc
nop
test
fldcw
jo
ret
or
or
xlat
or
jecxz
mov
inc
add
jg
xor
push
add
inc
bswap
test
adc
and
pop
in
inc
cmps
inc
aad
push
cmps
jo
inc
jg
add
adc
mov
mov
aaa
in
fild
pop
push
movs
pop
test
add
nop
jo
and
outs
mov
enter
fmul
pop
push
add
add
in
add
add
cmovge
jnp
push
push
aam
xlat
or
sti
push
imul
pop
cmp
enter
lods
jae
scas
pop
jg
pop
push
pop
pop
add
dec
shl
inc
jo
ins
imul
sub
mov
adc
or
lds
mov
pop
(bad)
call
push
mov
in
push
call
test
je
mov
les
jne
or
jmp
or
(bad)
std
(bad)
call
pop
nop
or
pop
shl
xor
inc
sbb
shl
inc
xor
loop
or
pop
add
rcl
adc
or
xchg
lock
out
add
cwde
inc
push
mov
push
mov
cmp
fstp
jo
sub
call
fistp
xlat
pop
pop
sbb
adc
push
std
daa
sub
call
mov
dec
push
push
push
xor
cmp
adc
push
clc
cmp
add
xor
ds
pop
add
and
ds
push
cmp
inc
cld
scas
hlt
das
sbb
push
call
and
adc
and
add
hlt
ins
mov
jl
call
rol
sbb
mov
pop
loop
xor
or
xchg
test
fimul
push
adc
dec
adc
ror
jo
xor
inc
hlt
outs
or
add
cmp
dec
clc
adc
popa
cmp
cmp
je
add
add
dec
ret
push
ret
inc
sub
in
adc
jne
cmp
jge
jne
mov
cmp
sbb
adc
das
daa
and
sbb
call
je
mov
ja
pop
fwait
sbb
rcl
jg
jecxz
push
cmp
xorps
sbb
stos
push
mov
bnd
(bad)
jg
mov
cmp
jne
xor
mov
mov
into
add
add
push
popf
pop
mov
or
call
les
add
push
bound
rcl
movs
shl
imul
mov
mov
xchg
sub
adc
cwde
xor
xchg
push
or
jb
scas
and
sti
cmp
jne
and
sbb
and
xor
xor
arpl
xchg
xor
loopne
fisttp
sbb
ret
mov
test
je
or
int
xor
or
add
or
mov
and
cs
gs
xor
cmp
ret
jb
jae
mov
pop
adc
and
or
add
in
in
mov
add
jb
test
mov
outs
test
sbb
test
add
inc
adc
enter
test
test
test
jo
sbb
test
rcr
repnz
push
push
add
sbb
mov
ja
cld
push
lea
test
push
lock
fistp
cmp
icebp
xor
add
jo
inc
je
in
dec
stos
mov
aam
jne
mov
cdq
inc
test
or
ret
cmp
inc
xor
pop
jmp
hlt
mov
mov
into
sub
mov
sbb
xor
xor
or
sar
xchg
ins
jge
cli
and
push
push
inc
sbb
inc
fmul
and
xor
cwde
add
lock
mov
or
push
add
dec
or
mov
mov
sub
shl
icebp
mov
mov
mov
add
clc
mov
imul
cmp
mov
mov
mov
mov
cdq
(bad)
add
jmp
inc
pop
cli
pop
aad
das
mov
and
jg
inc
(bad)
mov
mov
adc
inc
or
sbb
pop
or
clc
mov
jge
mov
mov
mov
cmp
mov
cmp
add
ja
js
test
je
xchg
call
push
sub
mov
push
push
jge
test
cmp
je
icebp
jmp
sub
or
mov
jmp
cmp
je
je
call
mov
and
mov
jne
(bad)
(bad)
(bad)
mov
mov
add
add
mov
mov
call
lock
fcom
jl
pushf
adc
add
pop
pop
ret
xor
mov
nop
or
(bad)
je
dec
add
je
add
cwde
lods
or
add
test
jb
dec
or
inc
or
or
imul
inc
inc
enter
cmp
sub
adc
push
aam
and
add
adc
ss
sub
xor
addr16
push
mov
or
clc
cmp
push
push
inc
inc
push
xor
in
ja
add
fcomp
adc
ja
pop
inc
dec
jne
adc
inc
rol
mov
and
inc
sbb
sar
call
xor
jle
dec
mov
fdivr
mov
and
js
outs
sbb
je
push
mov
call
test
test
in
push
adc
cmp
sbb
into
or
add
jbe
cld
mov
and
fs
fmul
xchg
outs
xchg
shl
or
or
sti
add
add
jmp
xor
nop
pop
test
jne
movzx
push
mov
shl
inc
or
pop
hlt
neg
jmp
sbb
div
xor
or
je
shl
xor
dec
cli
dec
into
aam
jnp
test
add
clc
and
mov
cld
jns
jne
push
mov
cmp
les
ss
xor
fmul
add
add
bound
popf
dec
aad
add
cmps
pop
lds
jns
cmp
setl
jg
sbb
pop
mov
sbb
(bad)
je
inc
push
shr
cmp
adc
movsx
rcl
imul
call
mov
mov
imul
ja
ret
nop
dec
cmp
scas
ret
hlt
add
test
sub
jae
ret
jb
push
add
jmp
xor
mov
or
push
(bad)
sbb
dec
inc
cdq
idiv
sbb
mov
pop
cmc
out
fsubr
xor
inc
or
add
xchg
sbb
hlt
or
jmp
xor
pop
out
inc
in
lock
test
jle
mov
push
ret
sub
mov
and
ret
sub
sti
jg
mov
sti
mov
pop
dec
je
add
inc
xchg
sti
cmp
dec
jne
sub
cli
mov
mov
add
aaa
adc
adc
and
dec
jg
adc
mov
dec
call
fcomip
adc
mov
je
xor
inc
push
fs
sti
jmp
ds
or
or
enter
adc
shr
inc
add
clc
pop
ja
mov
test
add
shl
adc
cwde
fmul
mov
add
test
adc
sub
pop
push
sbb
sbb
inc
mov
or
test
push
adc
ss
add
xor
js
cmp
aas
jns
pop
mov
addr16
inc
jmp
mov
push
leave
popa
jo
aad
scas
ret
inc
jbe
sbb
sub
dec
sbb
xor
push
or
push
adc
push
mov
inc
pop
push
mov
cmp
je
mov
add
xchg
mov
mov
cwde
clc
add
mov
mov
inc
ja
or
and
add
sti
jg
test
je
mov
mov
mov
sub
inc
sahf
and
je
mov
cmp
push
sub
shl
jg
or
push
push
into
inc
add
inc
sbb
je
mov
pop
jle
sar
mov
cmp
jle
mov
jmp
test
jge
xor
ins
add
xor
div
push
aam
add
mov
cmp
je
sub
pop
adc
ret
xor
jle
mov
mov
sub
or
or
add
pop
adc
jecxz
adc
or
mov
mov
adc
push
or
mov
push
sub
mov
ror
outs
push
cmp
je
xor
pusha
mov
je
xchg
push
inc
iret
fstp
cmp
xor
add
call
clc
js
cmp
je
mov
pop
scas
or
mov
test
jge
mov
dec
cld
ja
test
ret
nop
mov
mov
push
ja
xor
mov
out
loop
leave
mov
push
sub
(bad)
jmp
mov
(bad)
cld
cmp
cmc
sbb
push
mov
movzx
dec
div
or
adc
(bad)
push
add
add
mov
js
add
push
mov
ds
and
enter
dec
jb
dec
fdiv
xor
push
enter
sub
sbb
adc
adc
mov
inc
push
sbb
xchg
lea
push
pop
shl
loopne
pop
push
push
add
add
jmp
mov
jmp
xor
push
inc
std
push
mov
sub
mov
mov
test
sbb
jge
mov
mov
jge
fs
adc
mov
mov
mov
retf
inc
jmp
mov
mov
mov
repnz
push
mov
mov
addr16
pop
mov
add
add
lea
push
movzx
fmul
retf
int
cmp
jge
mov
or
lea
sbb
idiv
outs
sub
(bad)
jge
mov
retf
pop
add
sbb
add
mov
add
in
adc
(bad)
jmp
aaa
jo
movs
mov
inc
push
or
sbb
cmc
add
jo
movs
sbb
xchg
add
ror
dec
mov
pop
sbb
mov
adc
fwait
add
jne
aam
(bad)
jae
inc
sub
inc
es
dec
pusha
neg
inc
cmc
daa
cwde
mov
add
add
add
and
sub
cld
pop
sbb
inc
mov
and
or
adc
(bad)
mov
in
aaa
sahf
test
inc
lds
stos
lahf
mov
mov
aam
popf
or
cmp
std
nop
adc
fcomp
jne
mov
int3
inc
mov
sub
lea
add
pusha
xchg
cmp
xchg
xchg
or
sub
add
mov
adc
inc
cmp
add
xchg
xor
cmp
je
mov
adc
es
xchg
dec
inc
adc
hlt
add
aaa
inc
rcl
or
les
aad
dec
add
shl
sub
push
sbb
cli
cmovae
int3
mov
mov
cmp
in
inc
lods
pop
adc
sub
test
xchg
mov
jbe
jae
inc
test
push
adc
cwde
dec
stos
ficom
ror
stos
sbb
add
add
push
aaa
loope
mov
add
sbb
inc
call
adc
inc
shl
and
add
xchg
mov
cmp
or
sbb
mov
seta
sub
aaa
sbb
mov
fisubr
jne
and
sbb
retf
(bad)
mov
xchg
mov
daa
mov
stos
jns
cwde
(bad)
xchg
std
rcl
mov
ja
sub
adc
popf
xchg
rol
sub
add
retf
faddp
pop
dec
aaa
fnstenv
in
push
sub
xchg
outs
adc
dec
nop
mov
pop
and
ja
mov
stos
xchg
push
test
je
test
(bad)
out
les
adc
or
adc
add
enter
add
rol
call
sbb
adc
fwait
lock
add
movs
push
inc
add
inc
add
cmp
dec
adc
sti
sbb
cmp
add
adc
inc
or
stos
aaa
dec
sbb
sub
in
out
jbe
inc
and
or
aaa
test
jge
js
rcl
test
add
mov
lds
or
inc
ja
jb
add
mov
sbb
inc
mov
jle
push
or
push
fadd
inc
ror
add
pop
jbe
add
cs
dec
ss
pop
pop
ret
pop
fild
mov
mov
loopne
mov
cld
pop
and
push
push
add
outs
aaa
loope
lods
adc
fwait
inc
or
sbb
sar
and
int
test
stos
jp
cli
dec
cmp
je
push
push
mov
pop
pop
push
cmps
or
fs
clc
mov
jmp
mov
pusha
fist
add
test
ins
add
pop
xchg
fsub
push
mov
sub
jo
inc
lock
mov
retf
inc
sub
pop
mov
cmp
je
dec
je
call
shr
mov
jmp
mov
fild
mov
fsub
ds
mov
sub
adc
cmps
xor
add
mov
push
cwde
pop
xor
pop
cld
sub
ds
pop
push
xchg
push
shl
or
pop
inc
mov
and
mov
lods
sbb
sbb
mov
pop
or
ss
xchg
and
in
push
ret
and
mov
sub
or
je
(bad)
mov
sub
xor
sub
mov
imul
push
shr
add
imul
test
or
ja
js
enter
fimul
stos
mov
push
mov
add
sub
xor
add
adc
adc
push
test
or
adc
inc
fs
cdq
xchg
add
sub
dec
mov
mov
pusha
cli
pop
add
mov
adc
cmp
fist
mov
jge
adc
adc
push
xor
ins
jo
jbe
or
push
push
pushf
or
gs
loopne
xor
mov
mov
popa
pop
(bad)
(bad)
fcomp
jmp
sbb
retf
sbb
inc
rcl
aad
cmp
es
add
stos
js
adc
adc
xchg
mov
xor
test
xor
mov
jne
lea
inc
cmp
inc
lea
mov
sub
add
or
push
mov
lea
mov
mov
xor
mov
inc
clc
jbe
mov
and
adc
cmp
sar
ret
or
ret
xor
xor
and
push
add
in
enter
dec
cwde
mov
aaa
je
inc
cld
pop
mov
jns
cwde
stos
loopne
or
sahf
push
in
loop
je
pop
adc
and
scas
mov
xchg
ror
mov
cli
sbb
mov
push
adc
sbb
or
(bad)
or
icebp
add
clc
aas
sbb
xor
add
je
lock
and
dec
inc
test
sti
inc
push
adc
mov
arpl
mov
mov
dec
sbb
dec
cmp
dec
arpl
les
sub
mov
test
add
xor
mov
pop
xchg
mov
mov
xor
or
adc
int3
ins
stos
push
add
mov
add
adc
cmp
je
mov
pop
mov
ficomp
and
jnp
and
push
cld
xchg
add
test
or
mov
ja
inc
jl
cwde
mov
sub
pop
ins
cmp
mov
or
or
and
aam
je
or
and
(bad)
sub
pop
cmp
xchg
dec
or
mov
jmp
fs
add
(bad)
mov
inc
loopne
jmp
push
mov
adc
push
inc
mov
mov
out
add
xor
(bad)
pop
mov
and
cs
sbb
add
or
or
cld
cmp
hlt
jmp
sbb
ret
fnstsw
cmp
aam
sahf
pop
cld
inc
jb
ja
mov
rol
loop
pop
jmp
lods
pop
add
jle
int
xchg
je
add
cmp
add
sti
mov
add
mov
and
je
jnp
fs
outs
dec
fcomp
xchg
fadd
leave
pop
cmp
call
jmp
cmp
pop
sub
mov
je
fimul
inc
test
push
adc
add
and
pop
mov
mov
sar
call
mov
ret
sub
jb
je
jmp
dec
mov
mov
sbb
mov
retf
jmp
mov
les
pop
xor
sub
sub
mov
mov
jp
jle
jne
push
sub
es
movs
jl
pop
mov
rcr
scas
dec
test
je
and
add
imul
xor
mov
out
mov
rcl
pusha
call
push
cmp
mov
es
or
scas
xchg
sbb
push
pop
mov
and
clc
lds
ret
test
cmp
jle
pop
adc
inc
fnstenv
ja
nop
push
mov
inc
adc
(bad)
(bad)
mov
ret
sbb
xor
xor
std
pop
add
test
adc
xor
jle
shr
inc
mov
je
sbb
in
scas
dec
xchg
std
cmp
je
adc
lods
cli
test
push
out
sub
add
les
sbb
or
xchg
lods
add
mov
jns
lock
call
dec
xchg
xchg
hlt
in
ds
fwait
add
and
mov
push
ja
cld
mov
mov
mov
mul
cs
and
dec
inc
nop
xor
ror
pop
shr
and
pop
rcr
and
xchg
mov
cli
add
adc
jno
dec
mov
icebp
cs
aad
(bad)
mov
mov
xchg
add
push
xor
mov
jne
iret
and
push
xchg
xor
push
mov
pop
xchg
inc
mov
add
xchg
mov
pop
xor
mov
div
cmp
push
add
push
js
sbb
sbb
sbb
pop
out
mov
pop
rol
and
std
fld
add
add
cmp
movhps
push
gs
fsubr
jb
mov
outs
outs
jb
in
add
je
add
repnz
popa
mov
push
and
or
in
or
inc
pop
cwde
and
ret
add
(bad)
ja
sbb
sbb
cdq
(bad)
jbe
push
mov
mov
cmps
mov
call
ins
sbb
xor
iret
push
add
pop
mov
dec
adc
push
lods
inc
lock
add
xchg
fwait
cli
test
mov
push
add
adc
inc
cmp
push
push
push
sub
shr
adc
pop
add
test
ja
xor
ret
lahf
jo
mov
out
jo
shr
sub
aas
cmp
hlt
jg
add
mov
push
push
and
sub
pop
push
and
or
or
pop
movs
and
les
mov
inc
add
(bad)
xchg
shl
rol
sub
sbb
add
jb
popa
stos
cmp
aas
pop
sub
xor
movs
add
shl
and
pop
repz
je
sub
cmp
cmp
test
add
aas
xchg
xchg
mov
jmp
retf
mov
nop
add
pop
push
pop
mov
and
cmc
or
ins
pop
aaa
jae
iret
call
retf
mov
or
xchg
enter
(bad)
nop
int
out
arpl
adc
mov
mov
add
inc
cs
call
inc
dec
aam
mov
sub
add
dec
sub
add
sbb
mov
test
stos
test
nop
bound
or
out
jge
push
rol
cwde
add
cmp
adc
dec
push
ins
add
fdivp
ss
mov
push
cld
and
les
add
icebp
jmp
mov
mov
dec
jne
ja
ret
js
push
mov
or
sbb
jne
fcomp
mov
push
cmp
je
xchg
mov
dec
and
cli
add
mov
mov
adc
out
jg
js
jmp
xchg
add
sub
mov
ficom
mov
mov
mov
mov
neg
jmp
mov
stos
add
cmps
fnsave
mov
test
add
dec
jne
adc
adc
jg
mov
je
stc
add
mov
pop
test
icebp
mov
jl
test
je
mov
outs
mov
or
xor
sbb
sub
(bad)
jae
das
mov
pusha
xchg
inc
push
rol
xchg
je
mov
mov
jmp
and
mov
cli
je
cmp
out
add
lock
add
or
xlat
jecxz
loop
stos
rcl
pop
test
cmp
mov
je
ja
test
add
push
mov
dec
adc
ins
cdq
les
mov
inc
push
(bad)
out
mov
lock
pop
mov
(bad)
sar
and
dec
sub
or
retf
add
stos
arpl
push
inc
or
pop
aas
xchg
mov
lods
ret
pop
adc
adc
mov
xchg
fistp
jmp
add
rol
je
cli
sub
jb
sub
je
add
dec
je
mov
and
arpl
dec
je
adc
adc
add
add
pop
out
jne
adc
test
or
dec
inc
inc
inc
adc
add
sbb
mov
pop
sub
repz
mov
jmp
aas
sbb
mov
cld
je
sbb
leave
jne
push
pop
dec
std
js
and
mov
add
test
xchg
out
fadd
mov
and
adc
and
and
inc
sbb
and
mov
idiv
cmp
jne
xor
pusha
inc
test
repz
cmp
add
inc
or
sub
cmp
test
test
inc
jne
fstp
xor
je
or
in
cmp
jne
call
mov
mov
fimul
ret
cld
mov
mov
lds
test
daa
inc
rol
mov
inc
mov
(bad)
stos
stos
mov
adc
aad
loope
xor
mov
shr
aaa
or
adc
xchg
fucomip
adc
adc
hlt
cs
fsub
fiadd
mov
mov
clc
push
leave
jo
or
ds
xchg
fiadd
push
mov
jo
jae
cmp
leave
or
and
sub
push
jns
push
pop
not
mov
mov
adc
lods
add
ret
stc
push
pusha
sbb
cmp
mov
hlt
shl
add
xor
loope
add
lea
push
lea
mov
ror
inc
cmp
dec
inc
or
adc
arpl
and
dec
push
(bad)
sub
test
lock
cld
in
aas
sub
pop
cmps
leave
out
add
cli
mov
jne
xchg
leave
outs
or
pushf
adc
or
xchg
push
adc
adc
mov
inc
ss
xor
adc
xor
or
inc
pushf
test
or
mov
add
mov
and
je
jb
ja
dec
or
mov
jbe
(bad)
sub
scas
pop
adc
jg
pop
test
push
or
or
sub
cmp
clc
push
inc
xor
dec
cld
clc
inc
mov
mov
add
add
fmul
push
aas
loop
push
cmp
les
je
xchg
sub
je
add
adc
inc
jne
scas
jecxz
add
adc
mov
cmp
xchg
adc
inc
popa
ror
jl
les
xchg
dec
pop
sbb
xchg
push
sti
mov
or
push
inc
lea
(bad)
xor
sub
mov
or
inc
movs
daa
xor
neg
push
out
sub
and
xor
or
jl
cld
pop
jo
or
inc
outs
call
shl
pop
scas
add
shr
fsubr
std
add
mov
leave
and
pop
das
popa
sbb
sbb
aaa
jae
push
inc
and
push
movs
aaa
fs
push
push
add
ret
pop
clc
lea
pop
push
xor
sbb
clc
(bad)
jg
mov
mov
mov
mov
neg
mov
neg
dec
mov
call
adc
push
jns
outs
xor
dec
test
and
sbb
xor
pop
leave
sub
in
push
mov
pop
loope
hlt
sbb
dec
mov
std
push
mov
xchg
jle
sub
push
mov
mov
sub
push
push
push
push
fwait
jge
clc
fstp
ret
add
push
xor
pop
cmps
mov
add
pop
add
xchg
sub
xor
ret
aas
mov
sar
sbb
(bad)
out
(bad)
jmp
arpl
mov
sub
or
lods
push
sub
mov
inc
inc
inc
xchg
xor
mov
and
jmp
ja
inc
inc
inc
dec
jne
les
mov
pop
xor
jg
add
add
mov
xor
ret
push
add
pusha
add
jmp
xchg
inc
sub
ret
jo
or
or
xor
push
xchg
push
xor
mov
pop
shl
inc
cmovb
daa
add
cmp
inc
call
je
mov
and
outs
jmp
pop
sti
push
mov
cmp
std
je
mov
mov
or
dec
lods
jno
les
add
add
xor
out
rcr
ds
adc
mov
mov
pop
add
mov
outs
xor
cld
adc
clc
jne
cmp
xchg
cmp
loop
dec
adc
xor
push
inc
pop
mov
jmp
jne
mov
add
popf
aad
adc
mov
out
hlt
js
pusha
add
add
clc
sbb
cli
xor
xor
push
and
outs
movs
sub
fsub
xor
jno
push
add
enter
push
cmp
cs
lds
or
(bad)
fldenv
(bad)
adc
add
dec
jne
(bad)
and
cli
sbb
ret
add
dec
xor
and
dec
add
jbe
into
bound
out
mov
push
mov
sub
jg
lahf
dec
daa
push
mov
mov
add
or
xor
jmp
sbb
add
xor
repz
xor
or
test
out
adc
sbb
inc
push
in
push
adc
sub
add
push
jecxz
and
stos
sub
out
inc
inc
rcl
adc
aaa
push
add
cwde
daa
jmp
call
add
push
mov
ins
ss
add
dec
sbb
sub
and
sti
int
sub
pop
fidiv
push
nop
push
ret
pop
mov
xchg
adc
ret
mov
xor
loopne
sbb
lea
push
mov
call
add
jmp
cmp
sti
add
inc
cld
call
add
clc
(bad)
jge
enter
mov
sti
add
inc
add
sbb
mov
les
inc
add
adc
or
or
call
dec
les
xchg
sbb
xor
sti
push
mov
cmp
mov
and
mov
sbb
lock
mov
inc
call
jb
mov
adc
cmp
setne
cmp
out
push
push
push
fld
add
ds
sub
call
mov
mov
mov
mov
add
in
out
and
and
xlat
mov
cmp
pop
sub
jg
shl
ret
or
xor
sti
je
mov
xor
inc
mov
loope
jo
rcl
jg
and
dec
cmp
pop
or
adc
je
hlt
mov
push
aad
or
and
push
xchg
add
mov
dec
adc
dec
jne
mov
and
mov
inc
mov
(bad)
(bad)
or
mov
xchg
or
test
fdiv
ror
mov
loop
push
popf
sub
jne
out
xor
je
cli
jge
or
jne
daa
je
pusha
fadd
push
adc
pusha
call
dec
movs
bound
das
clc
je
inc
sbb
in
fwait
cdq
call
or
(bad)
lea
rcr
inc
mov
aas
add
jnp
std
pusha
je
push
push
pop
mov
push
sub
add
rol
cmp
fcomp
sub
xchg
mov
add
mov
aam
dec
in
mov
jo
in
jne
cmps
sbb
inc
sahf
xor
mov
mov
(bad)
inc
cmps
push
cmp
call
push
dec
add
adc
cmp
add
mov
fwait
cmp
xchg
je
mov
bound
pop
push
jbe
ret
mov
cs
cmps
mov
fdivr
in
pop
xlat
je
mov
je
or
push
out
push
loopne
and
mov
mov
daa
or
xlat
add
mov
ja
call
fist
je
mov
daa
inc
and
adc
xor
cmp
dec
cs
or
mov
sub
push
push
scas
and
mov
sub
movs
(bad)
fcomp
sahf
mov
cmps
cmp
cwde
adc
cmp
je
xor
xchg
ret
stos
adc
pop
push
std
mov
push
in
mov
mov
ja
adc
test
je
cmp
adc
add
test
add
mov
mov
call
add
jmp
cmp
jne
mov
cmp
je
ins
mov
push
cmp
xor
sbb
cmp
popf
(bad)
inc
shl
aaa
dec
test
jl
jl
mov
jle
iret
je
call
and
test
retf
fsub
add
test
ds
cmp
mov
cmps
mov
add
jbe
mov
and
test
and
aas
arpl
jne
mov
push
mov
push
mov
call
push
adc
vpsubb
adc
pop
add
push
mul
sti
enter
call
dec
xor
mov
mov
pop
mov
retf
push
lods
es
jge
loope
lods
mov
dec
cwde
mov
pop
cmp
xlat
cmp
sar
test
dec
add
cmp
jge
pop
and
inc
push
adc
adc
ins
add
push
and
mov
test
outs
sub
xor
xchg
and
add
push
mov
jmp
sub
pop
ret
push
mov
push
mov
stos
dec
dec
jne
inc
push
and
jne
rcl
rcl
popa
pop
in
jno
or
call
jne
movs
sbb
sbb
mov
(bad)
outs
add
(bad)
(bad)
cld
mov
test
adc
movs
sub
add
and
out
or
scas
dec
mov
out
mov
add
add
or
mov
add
cmp
out
add
xor
jne
jmp
add
cmp
ja
test
mov
sub
ret
mov
xchg
div
sbb
jmp
push
rol
jo
les
in
jmp
sub
je
sub
jne
mov
aaa
adc
sub
mov
popa
xor
out
add
add
or
lea
std
and
xor
inc
hlt
mov
pusha
pop
sub
or
cmp
mov
mov
sbb
add
shr
gs
std
add
sub
jae
inc
and
pusha
sub
sub
jae
add
and
test
je
add
test
or
cmp
push
add
mov
and
adc
adc
je
or
xchg
xor
or
outs
clc
je
or
add
sub
sti
mov
mov
sub
jo
or
fnstsw
clc
push
sbb
push
jbe
or
je
and
shr
xor
pop
jbe
es
mov
fucom
(bad)
je
dec
je
xchg
(bad)
jecxz
inc
es
mov
and
mov
jae
or
or
push
imul
or
jle
add
push
add
in
bound
add
add
cmp
pushf
mov
mov
nop
jae
or
cmp
add
push
push
lods
and
or
pop
call
sbb
sbb
jmp
push
jge
xor
xor
pop
loopne
inc
icebp
test
dec
dec
inc
dec
mov
add
imul
lds
jp
into
push
push
pop
xor
test
rcl
mov
inc
or
lea
inc
inc
arpl
add
mov
and
mov
and
push
retf
add
inc
in
inc
or
inc
call
mov
fadd
mov
mov
mov
mov
mov
mov
fst
inc
and
push
fstp
pop
push
mov
call
mov
jmp
fwait
mov
lea
repz
or
pop
mov
idiv
lea
add
pop
jp
or
mov
(bad)
inc
popa
mov
cmp
cmp
mov
(bad)
adc
push
int3
test
shl
inc
les
inc
adc
inc
cmp
jne
mov
push
adc
jmp
lahf
mov
rcr
adc
mov
and
dec
ss
and
cmps
push
fisttp
adc
xor
cmp
call
std
pop
std
je
cmp
je
movs
jne
cmp
jne
xchg
cwde
jmp
and
or
(bad)
fwait
bound
scas
mov
add
pop
or
sbb
(bad)
add
push
sub
mov
test
jmp
jnp
xor
leave
lock
imul
xchg
and
popa
aaa
neg
clc
add
inc
xor
shr
test
push
push
mov
mov
fisub
test
jne
jmp
push
(bad)
mov
push
outs
dec
clc
xor
inc
aam
jbe
cld
mov
or
inc
call
mov
or
leave
jbe
scas
xlat
outs
xor
push
iret
out
xor
add
pusha
mov
add
stos
mov
xchg
xor
lock
dec
(bad)
out
sbb
(bad)
dec
xor
or
clc
xchg
mov
push
ins
mov
and
test
fdivrp
fistp
add
mov
or
lea
inc
push
jae
scas
and
sbb
fs
cmp
push
rcr
mov
cmp
je
sub
adc
jg
sbb
push
js
mov
and
shl
das
out
icebp
fsub
mov
sbb
ret
and
mov
sub
loop
sbb
add
mov
mov
test
fldcw
jg
xor
neg
mov
jp
ja
out
mov
(bad)
aad
pop
inc
std
and
mov
mov
jmp
jbe
cmp
inc
jne
mov
frstor
ja
jne
aaa
push
adc
xor
pop
inc
adc
pop
inc
mov
imul
ret
std
jbe
test
jne
cs
xor
mov
(bad)
out
add
pushf
mov
dec
je
sbb
movs
ja
retf
or
mov
cdq
not
and
inc
mov
and
push
cmc
xchg
pop
push
fst
mov
icebp
rcl
add
push
(bad)
cmp
mov
or
sub
mov
sti
fsubr
das
dec
cmp
lock
add
lds
lock
nop
daa
inc
mov
and
and
dec
and
or
subps
mov
aad
cmp
sbb
push
daa
rcl
push
pusha
jbe
or
test
mov
inc
adc
mov
fdivr
xlat
lock
sbb
(bad)
je
push
inc
add
or
xchg
or
push
cmc
add
add
popf
and
stc
or
adc
mov
lock
push
fisttp
rol
ins
loopne
test
jns
jae
aad
test
jnp
iret
outs
cmp
cmp
je
mov
in
xchg
in
add
and
jmp
div
and
loopne
(bad)
div
mov
cmp
jne
aaa
jne
mov
retf
pushaw
inc
fs
inc
push
iret
or
adc
ins
pop
(bad)
arpl
mov
add
lock
je
mov
je
mov
out
push
cmp
je
push
inc
sbb
mov
xchg
adc
add
mov
mov
cmp
push
pop
add
jae
mov
mov
mov
es
das
add
mov
push
das
movs
or
xchg
mov
adc
cmp
mov
or
fld
mov
sahf
loop
or
sbb
jbe
sti
jo
sub
mov
push
cld
add
inc
cld
in
lahf
and
cmp
enter
jae
neg
xchg
add
and
add
cs
add
adc
push
sub
call
out
data16
fcom
and
inc
sbb
cwde
push
fsub
sbb
fucomip
mov
(bad)
lock
xor
mov
(bad)
mov
icebp
scas
int
jl
or
mov
mov
xor
and
or
cmp
call
sar
sti
push
add
inc
mov
fld
mov
adc
bound
jne
fcomp
dec
jne
xor
sbb
push
add
pop
ret
add
inc
movs
rol
sar
adc
mov
lods
leave
inc
add
inc
push
data16
add
and
and
jmp
les
sahf
(bad)
pop
cwde
clc
cmp
inc
or
popf
pop
inc
and
icebp
add
add
lds
cwde
pop
sub
jp
cdq
add
or
rcl
jne
or
or
call
std
in
push
cdq
xchg
pop
cwde
jmp
inc
icebp
pop
sbb
add
push
push
adc
and
mov
add
pop
pop
ret
mov
dec
mov
mov
pop
ret
lods
mov
loopne
clc
push
xchg
jg
cmp
add
test
mov
cmp
and
cli
adc
cwde
and
cwde
loope
ror
push
push
test
or
inc
lock
pop
pop
or
cdq
int3
rcr
cmp
jmp
leave
pop
jge
cmps
add
xor
jbe
adc
mov
ret
push
test
xor
pop
pop
sub
xchg
test
push
lock
nop
fwait
add
fmul
and
mov
test
pop
pop
push
loopne
pusha
mov
jle
add
cmp
add
aad
ins
push
inc
lods
ds
push
aaa
xor
popa
je
or
lods
pop
loopne
push
int3
inc
shr
call
lock
(bad)
push
mov
xor
lahf
and
nop
std
dec
xor
fmul
rol
iret
and
xor
and
jbe
sbb
mov
shl
test
loopne
ret
out
or
jne
sbb
mov
das
add
sbb
shl
test
je
mov
inc
mov
xchg
cmp
or
push
sbb
inc
add
scas
adc
or
push
aaa
jecxz
ja
xchg
xchg
fwait
int
adc
jmp
xchg
je
xor
cmp
jne
data16
add
sub
adc
push
std
or
add
inc
adc
ficom
mov
(bad)
add
test
mov
sbb
add
cld
fwait
call
jmp
xor
jp
xchg
or
add
push
mov
arpl
xor
xchg
ret
mov
mov
sub
mov
or
ret
cdq
ja
xchg
adc
or
inc
pusha
retf
and
aam
mov
push
cmps
in
mov
adc
xor
jmp
mov
mov
mov
and
sti
push
sbb
call
arpl
mov
cmp
clc
aas
fsub
mov
movzx
fdivr
pop
adc
push
sub
daa
or
cwde
rcl
inc
jl
inc
add
outs
test
pop
inc
jne
mov
or
hlt
ins
jmp
ret
adc
push
(bad)
aas
or
jne
cmp
je
cmp
nop
jmp
or
ret
push
je
cmp
adc
sub
push
xor
jecxz
rcl
pop
cmovbe
dec
xchg
mov
je
jmp
sbb
std
sbb
sbb
inc
addr16
and
js
add
in
rcr
jmp
and
add
fild
xor
ror
shr
jmp
adc
arpl
xor
cmp
pop
xor
add
cmp
jne
in
cmp
mov
mov
sub
inc
test
ss
or
or
pusha
and
inc
push
sbb
inc
(bad)
inc
clc
pop
js
push
mov
cmp
sbb
neg
loop
xor
cmps
xor
xor
mov
mov
repz
rol
aam
and
or
cmps
cmp
adc
test
or
fild
xor
ja
aaa
add
xor
cmp
jne
cmp
(bad)
add
jne
cmp
add
mov
jne
lds
mov
mov
cmp
add
jno
xor
xor
adc
fadd
rol
fwait
lock
data16
xchg
dec
rol
pop
jne
jmp
add
jne
mov
add
enter
add
mov
xor
rcl
out
mov
lea
push
or
jg
lea
lea
sbb
rol
dec
fmul
mov
jge
add
fild
pop
loopne
inc
in
jmp
mov
push
inc
ror
mov
mov
mov
push
mov
adc
in
inc
sahf
dec
test
or
jge
add
mov
xchg
add
les
inc
clc
int
div
jnp
inc
adc
pop
jmp
sbb
pop
cmovb
add
lods
add
into
sub
cmps
jb
adc
test
lock
add
cmp
add
push
jg
jmp
je
dec
sbb
jbe
mov
mov
or
mov
lea
pop
jae
out
mov
or
or
adc
or
add
inc
and
lea
lea
verw
mov
cmp
lock
inc
add
pop
inc
push
inc
mov
add
sub
cdq
pop
jne
ror
mov
cmp
jle
add
icebp
mov
leave
jae
push
pop
cmp
pop
movs
stos
call
js
push
cmp
sbb
je
mov
add
mov
pop
in
pop
mov
adc
mov
lea
mov
mov
int3
pop
pop
loopne
inc
or
push
lock
pop
mov
xor
adc
call
es
test
jecxz
push
rol
add
loopne
not
push
and
mov
and
inc
inc
or
sbb
or
shl
cmc
mov
jl
sub
call
shl
add
les
or
xor
addr16
pop
push
mov
dec
push
add
popf
rol
and
js
mov
pop
or
add
cmp
je
cmc
add
add
aam
push
add
jae
cmp
or
cmp
movs
fwait
shr
push
lahf
leave
rol
xor
jp
pminsw
jne
or
mov
clc
mov
sbb
stos
test
out
popa
in
add
das
or
or
push
inc
lahf
xor
test
push
jne
cli
add
sbb
scas
sbb
aad
dec
adc
dec
cdq
sub
scas
jl
mov
mov
mov
(bad)
enter
mov
jbe
add
and
push
jne
mov
sar
(bad)
ss
in
(bad)
cld
sub
sar
jns
adc
or
xor
fldenv
outs
sti
xor
xor
and
fcomp
and
jmp
dec
xchg
enter
add
fild
cld
or
mov
push
mov
mov
arpl
mov
js
and
dec
lods
ret
test
jmp
and
loop
push
push
ret
jmp
fdivr
adc
inc
in
pop
jne
or
and
ror
mov
jo
sub
pop
jbe
add
enter
movs
loope
add
in
inc
inc
add
lods
and
not
test
stos
mov
sbb
inc
fsub
loope
aad
mov
add
imul
or
stos
or
adc
movs
pop
cwde
loopne
inc
jno
and
test
and
push
cmp
push
out
inc
pop
jnp
loope
pop
adc
sbb
jmp
inc
and
mov
mov
shl
or
push
mov
add
(bad)
dec
popf
sub
adc
cmp
cwde
mov
scas
pop
and
jb
push
inc
and
shr
fcomp
xchg
sub
cld
nop
and
icebp
iret
das
sub
jne
add
mov
dec
(bad)
push
icebp
sbb
lock
push
pop
ret
sub
pop
loopne
outs
xor
into
out
cmc
pop
mov
lock
and
sbb
and
jb
fldcw
and
add
pop
pop
jmp
ret
mov
pop
in
in
rol
pusha
dec
inc
adc
sbb
inc
xor
or
stos
aad
or
mov
add
das
inc
mov
pop
or
xchg
push
ja
push
push
mov
push
test
cmp
cmp
sub
add
call
push
push
in
mov
push
push
mov
push
pop
cmp
je
dec
push
icebp
add
loop
call
call
jmp
mov
mov
jo
lock
ror
push
iret
out
inc
push
int
out
push
shl
clc
adc
pop
pop
mov
icebp
adc
sub
call
or
inc
sub
lsl
pop
loopne
jg
je
mov
retf
rcl
jb
ret
pop
xchg
inc
stos
fwait
mov
mov
jmp
add
mov
outs
lock
in
mov
cmp
mov
out
add
jp
sbb
addr16
(bad)
jmp
push
add
dec
jmp
jmp
int
iret
pushf
or
sti
iret
movs
jle
jne
cld
adc
add
cmp
lahf
cmp
sbb
add
mov
mov
inc
dec
jne
sub
call
out
outs
add
sbb
add
xor
daa
lds
or
jae
inc
mov
push
adc
add
icebp
mov
inc
sti
sub
std
or
pop
and
lock
xor
pop
dec
adc
int
mov
ins
and
es
add
mov
or
sbb
mov
arpl
rcl
mov
stos
mov
jg
add
cdq
mov
fstp
pop
adc
jne
and
inc
inc
fmul
(bad)
push
push
cmp
fadd
div
cmp
push
push
dec
mov
xor
and
ds
add
pop
call
or
mov
cmps
and
out
loopne
test
mov
inc
mov
lahf
xchg
cld
or
xor
test
mov
lea
mov
or
push
mov
or
sub
inc
lods
xor
xchg
pop
push
out
cmp
and
repnz
sub
sbb
pop
mov
mov
inc
in
add
aam
inc
mov
jl
sti
(bad)
mov
xor
push
cld
mov
data16
mov
push
mov
xor
loop
and
mov
xor
push
mov
ja
fnstsw
cld
ss
fist
lea
mov
cmp
inc
nop
dec
mov
mov
add
inc
cld
mov
fadd
and
clc
int3
mov
sbb
mov
ins
inc
mov
sub
jo
ins
or
cmp
int3
dec
xchg
mov
adc
xor
into
or
int3
les
xchg
inc
call
push
out
adc
mov
out
loop
pop
push
loop
iret
and
inc
dec
add
dec
pop
jl
arpl
sub
add
cld
lods
and
mov
mov
add
lea
push
add
pop
pop
mov
addr16
inc
jl
and
xor
data16
xor
ins
addr16
xchg
repnz
and
out
push
scas
or
dec
dec
lea
and
add
mov
std
outs
push
pop
es
pop
and
ret
or
xor
aas
int3
sbb
jbe
aas
les
mov
xor
dec
push
js
push
inc
cwde
xchg
sbb
fsubp
mov
push
pop
mov
mov
das
outs
popf
inc
inc
inc
adc
add
cmovbe
mov
or
mov
icebp
jl
movs
and
add
jb
xor
add
jnp
or
je
inc
pusha
loop
sbb
imul
add
loop
call
hlt
pop
adc
mov
and
push
add
xchg
ds
mov
mov
add
mov
add
cmp
add
inc
pop
push
bound
leave
and
inc
adc
sub
ins
pop
test
jbe
mov
add
add
pushf
mov
adc
icebp
mov
xor
mov
stos
push
and
ds
mov
xor
sbb
or
or
push
or
repz
xchg
mov
mov
add
push
rcl
stos
call
ins
xchg
and
or
ins
push
ins
call
or
inc
(bad)
mov
mov
mov
and
or
sbb
mov
in
push
clc
repnz
xchg
push
cmc
xor
mov
(bad)
and
jmp
cmp
div
cmp
push
dec
test
out
adc
xchg
rol
loopne
mov
cmc
ins
shl
ret
and
cmp
mov
test
inc
dec
adc
call
cmp
imul
or
test
push
push
mov
(bad)
dec
adc
or
mov
cdq
loopne
add
pop
cmp
dec
pop
inc
inc
outs
mov
sub
dec
xchg
add
dec
rol
inc
cmp
cwde
and
bswap
or
rcl
push
mov
ret
mov
jmp
inc
stos
push
sub
cmp
add
and
punpcklbw
add
pop
call
loopne
push
mov
in
or
add
or
test
add
pop
shl
stos
cld
sub
ror
add
xor
sub
push
push
mov
push
mov
pop
fwait
call
cli
xchg
std
and
push
push
div
(bad)
clc
nop
cmp
pop
addr16
cs
aam
ret
cmp
sahf
mov
jbe
or
mov
adc
nop
xchg
daa
pop
xor
and
je
fistp
sbb
pop
(bad)
or
dec
or
add
addr16
pop
std
sub
push
push
mov
sahf
stos
loopne
call
les
punpckhbw
cmp
pop
lods
mov
adc
and
shr
cmp
push
push
xor
int3
push
out
xchg
jecxz
loop
ficomp
dec
jne
scas
add
das
jle
pop
mov
inc
lea
js
inc
mov
add
mov
ins
sbb
sbb
call
mov
sub
je
sub
leave
ror
fdivr
mov
jne
and
arpl
dec
clc
jno
pop
fsub
into
cdq
cli
pop
cmps
add
cld
test
call
add
dec
int3
fcomp
dec
push
in
pop
inc
xchg
mov
or
pop
call
inc
daa
add
mov
sti
add
pusha
pop
add
dec
add
ret
add
sbb
push
mov
rcr
xchg
repnz
dec
jne
push
retf
loopne
mov
mov
dec
lahf
(bad)
daa
or
je
cmovb
inc
xor
jle
gs
push
es
or
jne
mov
push
xor
addr16
jge
je
outs
jge
ds
inc
retf
jecxz
lods
cli
ins
jle
mov
idiv
add
or
mov
clc
lahf
push
int3
push
rol
xchg
push
(bad)
imul
sbb
mov
or
outs
push
out
or
mov
pop
mov
popa
jne
mov
sub
jecxz
or
js
or
dec
inc
sbb
jb
jo
inc
sub
in
mov
jmp
mov
mov
mov
xor
sub
fmul
jno
push
push
sub
jmp
push
or
and
test
push
call
cld
pop
test
cmp
sbb
scas
in
inc
add
adc
adc
add
sub
xchg
test
outs
outs
bound
loope
or
pushf
add
rcl
jo
jb
rcl
leave
(bad)
lsl
jnp
ja
add
add
shl
mov
jg
pop
pop
pop
or
and
aaa
add
add
xchg
loope
sbb
add
mov
add
inc
and
pop
pop
in
or
add
mov
mov
push
sbb
out
mov
mov
push
mov
push
mov
mov
mov
hlt
enter
add
mov
enter
adc
add
out
dec
add
ret
(bad)
out
imul
out
inc
add
jle
aas
sub
add
pop
sub
popa
or
dec
push
push
mov
and
fmul
sub
cmp
out
mov
push
xor
push
mov
idiv
or
mov
push
adc
shl
inc
add
push
xor
sub
adc
xor
mov
(bad)
xor
(bad)
adc
mov
sub
pusha
outs
pusha
cvttps2pi
ret
or
push
cmp
shl
ret
jae
mov
fucomp
mov
aaa
and
push
or
add
inc
push
pop
push
neg
adc
mov
ud1
call
sbb
test
je
mov
inc
test
std
test
pop
ret
dec
mov
in
sbb
pop
cmp
mov
lock
(bad)
or
dec
adc
and
or
sub
int3
mul
inc
cld
mov
push
ins
ret
push
or
xor
add
dec
adc
and
pushf
or
push
pop
mul
jnp
or
cmp
fbstp
stos
jp
adc
adc
fsubr
inc
dec
mov
ret
or
sbb
aaa
adc
push
or
mov
fs
push
xor
push
jmp
std
inc
cmp
je
jo
test
retf
dec
adc
push
push
xor
push
sbb
push
mov
in
fldenv
inc
xchg
or
cwde
and
add
mov
and
cmp
mov
loope
or
int
inc
dec
mov
mov
add
mov
or
jmp
mov
push
mov
nop
mov
mov
fnstcw
out
jl
cmp
jle
inc
push
and
jmp
or
pop
add
sub
mov
jmp
fucomip
add
je
add
cmp
jne
div
mov
mov
test
je
rol
sar
hlt
jle
cmp
je
stos
or
dec
popa
mov
mov
and
sar
call
cmp
int
mov
cmp
je
or
push
push
jnp
xor
pop
adc
pop
out
mov
sar
pop
cwde
jo
mov
mov
add
add
loop
(bad)
jmp
or
cmc
dec
mov
and
cld
cmp
jne
adc
mov
push
pushf
inc
add
push
ins
mov
pop
pop
xor
mov
inc
mov
or
inc
pop
mov
call
ja
push
push
push
fnstsw
mov
test
add
sti
or
pop
(bad)
lea
js
outs
or
pop
icebp
sub
test
sahf
mov
add
fiadd
out
mov
inc
clc
iret
lea
push
in
and
xchg
sub
push
jg
mov
push
cmp
test
lea
sub
and
add
aaa
add
ficom
sbb
push
cmp
pop
xor
js
inc
cmp
jge
cmp
jbe
xor
call
inc
in
add
dec
lock
mov
pop
mov
add
xor
int
fs
push
popf
icebp
ret
and
repz
mov
push
cmp
inc
push
bound
jb
add
mov
gs
(bad)
fild
add
jb
ins
pop
dec
gs
outs
popa
jb
and
popa
jns
jne
jae
and
add
fld
add
inc
add
cmps
pop
adc
push
push
popa
inc
cli
and
mov
xor
xor
mov
jne
cmp
add
cmp
mov
pop
int3
sub
ss
int3
daa
push
mov
arpl
imul
push
(bad)
(bad)
(bad)
aas
xor
cmp
je
mov
jmp
mov
test
je
cmp
jne
test
jne
mov
adc
mov
mov
addr16
mov
je
mov
test
jne
push
add
es
loopne
mov
pop
pusha
out
loop
add
je
push
push
add
mov
push
adc
call
mov
pop
add
push
pop
pop
pop
push
mov
mov
std
in
jg
add
push
push
push
push
jmp
movsx
loopne
test
add
stc
inc
lock
int3
mov
jb
outs
retf
mov
pop
push
cmp
loopne
mov
adc
xchg
and
hlt
jmp
add
cmp
xor
mov
adc
pop
or
cmp
adc
les
adc
test
test
cmp
or
push
(bad)
jg
add
(bad)
(bad)
push
popa
(bad)
sbb
lea
arpl
mov
jmp
mov
cmp
adc
xor
and
and
add
jnp
aam
pop
bswap
mov
ret
fsubr
clc
or
and
and
sbb
loop
cli
pop
adc
xchg
dec
ret
dec
add
mov
test
retf
pop
(bad)
call
add
pushf
ret
ret
call
(bad)
dec
je
add
outs
sub
cmp
das
mov
and
and
mov
and
add
adc
mov
mov
cmove
fild
xor
inc
dec
add
pop
inc
out
mov
and
or
sub
jnp
or
push
arpl
ja
adc
add
dec
add
add
jne
cmp
sbb
cmp
sti
iret
push
jmp
mov
mov
pop
add
jmp
dec
out
enter
add
aas
out
repz
add
jmp
cs
lock
cld
mov
hlt
jmp
sbb
xor
adc
xor
jo
(bad)
dec
push
mov
push
inc
push
clc
mov
mov
push
popa
xchg
dec
stos
or
jne
lock
jg
sub
mov
cmp
clc
push
dec
cmp
je
xor
shl
fld
jmp
ins
add
sub
into
xor
cmp
pop
sub
and
aas
mov
sub
jmp
adc
inc
or
xor
lock
sub
jmp
or
jo
jmp
or
enter
sahf
sbb
dec
es
and
inc
add
push
push
mov
mov
fld
js
add
pop
hlt
inc
cld
fst
mov
push
add
std
(bad)
pop
hlt
mov
cmp
jne
sbb
push
icebp
(bad)
fiadd
je
push
inc
pusha
or
cmps
sbb
push
jbe
enter
jae
sbb
mov
adc
clc
and
mov
fadd
in
jbe
pop
mul
or
aam
push
push
dec
pop
add
inc
sar
je
xor
adc
int
sbb
shr
(bad)
mov
push
push
xlat
sbb
push
pusha
out
and
adc
inc
mov
xor
call
mov
in
pop
inc
fisttp
pop
mov
sub
adc
add
jl
popa
test
add
mov
sbb
pusha
in
adc
je
or
or
sbb
inc
int3
xor
xchg
mov
lock
or
adc
les
loop
jb
mov
add
cmp
sub
stc
add
jo
xchg
xor
data16
add
or
jp
aas
mov
lods
cwde
ins
lock
adc
adc
inc
movs
imul
or
jmp
cdq
xor
pop
cmp
xor
stc
mov
push
pop
ss
pop
sbb
stos
adc
mov
mov
cs
mov
mul
xor
rol
loop
cmp
adc
add
pop
adc
pop
xor
adc
rcl
mov
add
adc
out
push
jne
jbe
je
dec
icebp
xchg
add
ror
ja
cwde
adc
cmp
mov
test
mov
stos
clc
jmp
jmp
in
mov
sbb
adc
sub
adc
imul
add
mov
jmp
cmp
je
mov
mov
mov
movs
je
test
or
call
js
adc
loopne
add
mov
cwde
cmp
inc
je
test
ja
mov
scas
mov
mov
mov
(bad)
push
push
mov
fcmovnu
jl
lahf
cmp
xchg
mov
add
lock
(bad)
(bad)
lock
push
mov
jne
cmp
push
sub
mov
mov
xchg
lock
cwde
mov
jnp
ja
jns
pusha
mov
jg
jne
push
pop
cmp
loopne
push
jo
jge
cmp
pop
ret
nop
fs
scas
pop
cmp
rol
inc
aaa
hlt
mov
xchg
add
jmp
es
or
aas
pop
ret
in
add
add
jge
test
imul
dec
int3
xor
cmp
lds
mov
pop
ret
xor
add
shr
mov
mov
cmp
adc
cli
sbb
pop
cmp
add
xor
jl
mov
test
je
js
jmp
or
mov
sbb
je
inc
add
shr
mov
pop
idiv
rcl
add
sbb
adc
add
inc
xor
jmp
add
inc
xchg
and
add
or
mov
ja
adc
daa
mov
js
fiadd
mov
sbb
mov
inc
je
or
add
jp
mov
add
cmp
push
sbb
pop
push
mov
dec
pop
cwde
jne
les
mov
and
and
je
test
test
xchg
ins
test
push
outs
fidivr
or
movs
push
lea
in
sahf
in
adc
jle
or
sar
into
ficomp
add
add
adc
pop
nop
lea
adc
loopne
inc
add
cmp
cdq
in
and
xchg
mov
push
inc
xor
sbb
ins
or
push
dec
hlt
add
mov
add
dec
dec
dec
inc
dec
dec
jmp
(bad)
adc
ret
retf
add
adc
js
int3
fimul
add
add
jne
out
and
sbb
push
or
(bad)
lock
add
and
icebp
and
pop
test
push
jmp
mov
daa
sub
add
mov
add
add
add
sub
or
je
mov
xor
xchg
mov
pop
jmp
sbb
cmp
add
sbb
inc
cmovl
mov
inc
inc
out
push
add
in
daa
cwde
mov
add
sbb
test
mov
(bad)
aam
inc
add
dec
push
aam
xchg
add
mov
xchg
jne
pop
mov
test
sbb
jo
push
lock
push
mov
ror
mov
or
popf
mov
mov
push
mov
add
sbb
lea
mov
add
ss
aam
xchg
sbb
or
popa
mov
and
dec
mov
lea
addr16
mov
shl
jo
jecxz
fdiv
mov
xchg
adc
mov
(bad)
dec
adc
push
(bad)
push
add
inc
arpl
mov
cmp
je
js
sti
jo
ss
movs
or
in
ror
adc
add
adc
gs
dec
add
or
inc
scas
push
mov
(bad)
push
or
ds
test
ja
push
mov
push
cmp
jne
xor
mov
jle
dec
or
sbb
push
fs
sbb
test
dec
push
dec
cld
out
xchg
js
push
pusha
inc
ror
in
jg
inc
vdivps
into
loopne
loop
jmp
cwde
pop
fmul
jne
pop
leave
add
js
hlt
outs
add
js
add
mov
sti
pop
dec
jb
cmp
je
pop
cmp
mov
pop
mov
mov
xor
mov
dec
pop
add
xchg
sbb
mov
xchg
dec
outs
mov
cmp
adc
sbb
and
adc
sbb
pop
mov
inc
pop
push
ins
dec
or
mov
and
cmp
shl
loop
das
ret
je
fistp
cmp
jl
push
cmp
mov
push
mov
and
pop
xchg
pop
loopne
jne
(bad)
jg
mov
push
jmp
cli
adc
bound
outs
call
cmp
xchg
hlt
push
jnp
inc
jb
ret
push
dec
xor
sub
inc
ret
stos
cli
icebp
sbb
fst
xchg
call
ins
ret
sbb
jbe
pop
add
push
push
adc
pop
push
jbe
and
jle
dec
cmp
xchg
mov
sub
shr
push
in
or
ss
push
pop
or
cmc
dec
xor
jne
sub
push
adc
(bad)
and
jnp
loop
and
clc
sbb
jbe
test
movs
emms
rcr
adc
loopne
add
jl
jle
add
fs
loop
mov
jne
jmp
add
addr16
fs
repnz
and
jmp
sub
lea
mov
pop
or
lea
push
sub
push
ror
ss
loopne
xor
cmp
cmp
inc
mul
clc
mov
cmp
mov
clc
xchg
inc
icebp
add
clc
mov
out
lea
jbe
fst
es
push
xor
pop
cld
jmp
in
inc
pop
inc
sub
rcr
pop
sbb
(bad)
repnz
mov
mov
rcl
adc
mov
mov
pusha
data16
or
adc
push
and
mov
shl
jmp
add
adc
sti
cmp
jne
(bad)
mov
jg
jmp
sbb
jg
std
dec
test
add
cmp
jg
je
adc
xchg
adc
std
pop
nop
and
adc
inc
add
nop
sbb
mov
psubq
push
inc
add
push
or
sti
xchg
add
pop
mov
mov
sbb
push
test
call
add
out
inc
adc
adc
test
test
int3
adc
je
fild
add
je
adc
ja
shl
call
cwde
mov
aas
je
cwde
sti
fstp
sub
test
or
pop
adc
dec
pop
je
sub
(bad)
sbb
call
adc
jmp
shl
push
int3
add
shl
push
test
jge
mov
iret
je
jmp
test
jbe
inc
sahf
or
cmp
repz
or
mov
test
pushf
xor
add
xor
adc
aad
mov
aas
clc
mov
mov
(bad)
jnp
xor
loope
fadd
mov
fistp
xor
stos
ss
cs
sbb
lds
adc
add
cmp
jb
repnz
in
mov
dec
adc
je
xchg
call
fdivr
pop
mov
test
ret
and
cmp
nop
adc
or
jne
scas
mov
or
jno
in
push
add
mov
adc
bnd
mov
mov
inc
test
xchg
lock
add
jns
ror
xchg
inc
pop
adc
sub
cdq
je
sbb
add
and
(bad)
jbe
inc
fimul
test
xchg
and
je
add
test
jae
xchg
imul
cmp
and
fsubr
xchg
jae
fadd
ficom
push
punpckldq
lds
mov
mov
or
inc
xor
mov
mov
push
(bad)
fs
call
cmps
out
outs
pop
push
push
dec
adc
cmp
sub
sbb
jmp
dec
clc
mov
std
inc
mov
and
cmp
push
clc
inc
sub
and
or
mov
rcr
scas
fldenv
ins
pushf
sti
push
sbb
cmp
jmp
pop
ror
test
mov
push
add
add
push
mov
mov
pop
js
sbb
out
out
popw
clc
add
pushf
inc
pop
js
and
cmp
and
or
fwait
dec
push
push
dec
xchg
in
addr16
or
or
cmp
dec
shr
cmp
lods
pop
inc
aaa
adc
xor
test
loop
add
movs
rol
sub
pop
xchg
push
push
test
stos
inc
push
inc
ja
and
not
rol
loope
out
jo
push
je
add
rol
pop
pop
imul
into
dec
push
lea
jne
sub
cwde
cmp
je
out
inc
push
mov
sbb
jno
add
mov
xor
mov
sub
adc
inc
or
dec
add
jle
and
adc
add
js
mov
ins
add
push
imul
(bad)
xchg
outs
stos
cmp
(bad)
(bad)
dec
jbe
ins
je
jae
xor
dec
add
push
imul
xor
js
imul
cli
outs
outs
add
mov
jne
das
stos
push
pusha
or
cwde
ret
pop
aad
and
inc
jmp
pop
fist
mov
pop
mov
inc
inc
push
not
dec
or
(bad)
cmp
xchg
je
push
mov
dec
sbb
mov
add
and
loopne
pop
dec
xchg
mov
popf
or
pop
clc
jmp
inc
(bad)
test
(bad)
xor
mov
push
call
xor
scas
test
pop
enter
shr
xchg
and
pop
xor
add
pushf
mov
or
pusha
loopne
pop
mov
add
mov
or
and
jae
jne
cmps
mov
std
cdq
test
sbb
int3
je
push
sbb
sub
jmp
dec
loope
js
and
aam
or
xlat
sub
arpl
jo
lock
pop
inc
neg
cmp
add
shr
das
test
inc
outs
enter
cmp
sub
mov
je
add
and
inc
and
scas
mov
fcmovnbe
(bad)
ss
inc
jmp
mov
add
aas
xchg
dec
push
inc
cld
jmp
ror
or
icebp
pop
dec
add
pop
and
push
les
inc
mov
sub
mov
ins
add
mov
cmp
adc
xchg
pop
sub
inc
pop
mov
push
push
push
xor
cmps
clc
sbb
mov
sbb
or
addr16
movs
pop
mov
jne
mov
mov
sbb
test
jne
lods
mov
jmp
icebp
add
pop
or
push
cmp
xor
add
xor
cmp
add
rol
push
shr
ins
xor
cli
cmp
and
mov
sub
mov
fnstcw
push
xlat
add
call
into
or
pop
into
xchg
push
rcl
mov
add
push
pop
jmp
push
mov
push
mov
mov
mov
nop
sbb
cmp
pop
add
add
mov
cwde
add
ret
mov
(bad)
out
sub
mov
add
inc
in
adc
pop
sbb
and
push
push
test
fld
repnz
push
cmps
push
jmp
sahf
je
mov
cmp
je
xchg
ret
mov
adc
call
xor
test
jne
xchg
cmp
std
call
or
and
les
imul
pop
(bad)
ds
push
jge
add
in
and
push
ret
out
call
sub
arpl
sbb
push
jmp
dec
jne
xchg
cmp
sbb
push
or
call
push
jmp
mov
and
pop
push
or
mov
shl
xor
jne
ret
mov
mov
pop
dec
cmp
cmp
aas
pop
sub
jo
mov
cmp
jne
mov
cmp
rol
jne
inc
mov
data16
push
inc
fisttp
add
movs
outs
inc
add
cld
div
sbb
rcr
push
xchg
mov
fmul
and
stos
dec
hlt
inc
cld
mov
mov
lahf
jmp
test
sub
inc
cs
dec
push
inc
cld
mov
push
add
cmp
leave
ret
xor
mov
push
xchg
aad
lods
mov
into
pop
ret
adc
bound
inc
cld
mov
cs
adc
mov
mov
fcom
mov
aam
fwait
clc
xlat
inc
mov
sub
je
sub
jne
icebp
pmullw
(bad)
xlat
add
pop
mov
cmp
fld
push
inc
cld
sub
cmp
into
add
sub
xchg
mov
nop
dec
not
add
movs
enter
mov
punpckhbw
add
or
in
nop
dec
test
pop
push
add
mov
aam
test
jae
ror
jae
mov
or
jmp
dec
add
inc
mov
sbb
xor
push
mov
xchg
jg
and
clc
or
add
jb
enter
cld
outs
pop
test
lods
loopne
add
lods
adc
push
inc
push
fisttp
aam
cmp
push
fsub
dec
mov
adc
add
inc
sbb
mov
in
lea
push
adc
(bad)
lock
adc
sbb
(bad)
call
mov
mov
sub
sar
jns
adc
add
push
push
push
cmp
adc
cwde
push
add
sbb
pop
loopne
add
pop
or
jo
inc
in
xlat
repnz
add
mov
push
inc
(bad)
or
test
push
push
push
and
ror
cld
lods
and
cmp
je
test
mov
nop
mov
mov
mov
dec
add
adc
push
movs
in
or
add
xor
cmp
mov
mov
xor
clc
(bad)
(bad)
call
push
or
dec
jae
mov
lea
add
add
pop
or
cmp
in
dec
add
mov
out
nop
or
cmp
adc
xchg
popa
xchg
js
test
cmp
bound
ret
pop
std
(bad)
dec
push
push
add
jp
lea
cmp
mov
sbb
cmp
adc
mov
push
add
jmp
or
lock
mov
lahf
lds
add
je
cmp
add
sbb
dec
and
mov
fucomp
cmps
loop
lods
add
test
mov
jmp
cmp
sbb
xchg
clc
adc
arpl
mov
push
rcl
jnp
push
sbb
cmp
jne
fild
icebp
adc
add
scas
dec
adc
jne
mov
jne
fcomp
lahf
or
mov
xor
mov
loop
rcr
fadd
cs
jge
mov
int3
mov
push
mov
mov
call
mov
adc
je
mov
mov
cmp
add
call
dec
fadd
dec
push
cmp
push
call
and
movzx
push
pop
call
test
lds
mov
cdq
jnp
lock
add
ins
sbb
mov
xlat
xchg
call
jmp
xor
cmp
push
jbe
rol
loope
fwait
inc
or
popa
addr16
or
adc
fcom
mov
cmps
sub
mov
cmp
mov
pop
cmps
inc
iret
and
pop
cld
push
call
mov
mov
jmp
mov
adc
ret
daa
cwde
adc
xlat
xor
add
jp
(bad)
adc
cmp
cmp
ret
and
mov
add
sbb
adc
add
add
enter
inc
dec
jne
rcl
out
loopne
mov
and
repz
(bad)
mov
fcom
dec
je
cmp
mov
push
or
jne
sub
mov
mov
xchg
sbb
mov
adc
(bad)
push
add
mov
aaa
inc
dec
hlt
mov
arpl
or
sub
adc
fmul
and
inc
popa
sub
out
sbb
ja
push
lea
out
jmp
adc
daa
jp
hlt
in
or
or
sbb
mov
dec
add
outs
lahf
push
cld
mov
adc
arpl
sbb
rol
cli
fistp
lods
jno
add
add
rol
arpl
mov
stc
add
add
and
inc
(bad)
ffree
inc
push
lock
mov
sub
add
push
std
push
dec
and
aam
or
pop
cwde
movzx
cmp
push
mov
sbb
xchg
cmp
ret
mov
div
test
push
movs
ficom
xor
cmp
pop
push
loopne
imul
xor
adc
arpl
mov
pop
or
pop
addr16
xchg
and
push
call
cmps
jbe
or
or
sbb
ror
adc
scas
jmp
jo
inc
inc
or
stos
xor
xchg
test
movs
inc
sbb
sbb
cmp
add
inc
cmp
dec
push
pop
jo
out
call
mov
inc
add
cmp
ret
movzx
inc
mov
cmp
(bad)
sahf
pop
loopne
sub
add
out
sub
and
inc
je
inc
(bad)
push
cwde
sub
push
cmp
mov
and
cli
adc
adc
mov
xchg
test
or
add
or
jl
sbb
push
(bad)
fist
sub
xchg
jne
call
adc
sub
adc
mov
pushf
push
push
jecxz
pop
enter
sbb
mov
aad
lahf
pushf
lahf
or
ror
sub
inc
enter
fisttp
out
mov
movzx
sub
adc
mov
push
add
or
nop
xor
jg
mov
mov
mov
lea
inc
es
add
adc
sbb
aaa
adc
push
inc
inc
and
pop
shl
ss
or
ja
add
syscall
push
push
jmp
cmp
jne
xor
ds
dec
push
add
cmp
xchg
cmp
mov
mov
add
and
add
or
jmp
mov
mov
xlat
es
and
les
leave
mov
or
pushf
sub
xor
mov
mov
mov
mov
(bad)
mov
loopne
add
sbb
in
push
push
daa
xor
add
bound
nop
push
cld
loope
and
add
bound
jb
adc
xor
jae
push
or
(bad)
mov
adc
pop
xor
fmul
sbb
imul
cwde
sbb
jo
adc
(bad)
js
add
add
pop
out
inc
shr
push
xor
add
pusha
add
(bad)
(bad)
mov
ret
nop
push
mov
mov
mov
pop
repz
mov
mov
inc
ins
clc
add
(bad)
fmul
push
rol
adc
fwait
arpl
xchg
or
adc
ficom
into
pop
test
lea
add
add
cmp
mov
push
cmp
jg
out
mov
sub
pop
clc
push
mov
mov
xor
mov
xor
or
(bad)
jmp
cmp
jne
mov
mov
movzx
imul
add
and
test
cli
(bad)
jmp
cli
add
imul
add
sub
mov
in
push
mov
push
jne
fist
inc
mov
push
add
sar
ret
mov
sub
ja
or
mov
cdq
idiv
xchg
cmc
mov
loopne
inc
cld
push
cmps
mov
test
add
ds
or
aad
call
jnp
pop
cmp
pusha
das
fisub
test
pop
sbb
jg
test
sub
call
xor
mov
loop
fst
loop
loope
fdiv
add
cld
jl
adc
add
cld
dec
cld
mov
fldenv
inc
pushf
cld
mov
push
mov
ror
cmp
fisub
xchg
xor
cld
pop
jmp
push
mov
jmp
add
mov
mov
sub
je
sub
jne
mov
sub
lea
mov
popa
or
js
cmp
push
int3
iret
dec
cmp
jle
xor
add
cmp
pushf
fwait
test
add
loope
dec
push
push
or
sub
inc
cld
fwait
pop
std
add
add
jbe
push
adc
lea
lea
(bad)
out
call
mov
lea
movs
movs
pop
lea
mov
mov
lea
push
push
mov
mov
xchg
or
push
je
sbb
fisttp
loop
dec
je
add
push
dec
sbb
xchg
push
fucomp
(bad)
imul
inc
pusha
jne
mov
mov
(bad)
clc
mov
mov
pop
mov
inc
lods
sti
mov
mov
sub
mov
push
or
aaa
add
test
jne
lea
movs
jne
iret
rol
lea
or
addr16
adc
loopne
lea
mov
outs
not
test
jo
or
or
cmp
mov
mov
push
mov
mov
sub
jecxz
sub
push
lea
push
pop
pop
out
lock
dec
inc
xchg
push
or
std
out
sub
test
mov
mov
int3
lea
mov
test
shl
or
or
(bad)
mov
ror
mov
mov
ret
mov
mov
xchg
push
sbb
leave
mov
or
imul
jp
jg
xchg
inc
jecxz
jge
lds
aaa
push
push
sub
sub
dec
jecxz
push
fmul
xor
lds
test
ss
and
adc
pop
into
ret
fwait
out
scas
pop
push
cmp
adc
mov
fcomp
dec
add
sbb
xor
mov
or
mov
jnp
push
sbb
inc
arpl
fistp
inc
data16
jmp
add
jo
lock
cmp
add
sub
sub
push
mov
dec
push
add
xchg
pop
push
mov
push
push
ins
sbb
jae
jo
jne
push
mov
or
add
adc
lea
mov
jmp
shl
jmp
jle
test
es
cmp
mov
mov
xchg
inc
adc
mov
and
cmps
dec
or
and
xchg
push
and
mov
test
test
je
cmp
add
(bad)
mov
mov
add
(bad)
mov
lock
add
add
clc
fincstp
lahf
inc
adc
je
push
(bad)
(bad)
aas
popa
add
repz
dec
je
mov
cmp
je
addr16
sbb
adc
sub
mov
push
xchg
add
sbb
je
or
sbb
out
and
add
xchg
ret
rol
sbb
mov
xchg
jb
add
add
dec
mov
cmp
xchg
shl
test
push
adc
das
mov
cld
daa
pop
jmp
leave
push
push
cs
push
mov
push
rcr
jo
push
pop
ret
add
gs
add
gs
popa
jns
jb
cld
pop
add
je
imul
and
ret
mov
adc
add
add
push
ret
mov
or
sbb
loopne
push
add
xchg
cmps
pop
ja
jnp
or
add
mov
loop
lds
add
int3
pushf
je
push
adc
movs
aas
push
inc
mov
xchg
icebp
add
sbb
add
loopne
sti
clc
pop
ret
sub
sbb
in
xor
adc
pop
sbb
popa
inc
sub
push
popa
jae
bound
mov
add
push
mov
add
test
sub
test
cmp
mov
add
inc
fsubr
cmp
loopne
enter
in
call
sbb
mov
movs
jae
iret
xor
sbb
(bad)
cld
aam
inc
sahf
add
mov
push
cwde
jmp
or
inc
sub
or
pop
repnz
adc
and
sbb
cmp
stos
mov
sbb
xchg
pop
sub
add
imul
gs
gs
add
dec
push
add
(bad)
push
push
outs
popa
jo
push
gs
adc
mov
add
inc
imul
gs
ins
ss
bndstx
dec
cmp
mov
push
jb
arpl
jae
gs
outs
jb
add
mov
palignr
nop
push
jb
add
ss
fcos
mov
outs
fs
gs
nop
pop
push
add
mov
add
xchg
or
call
mov
lahf
pop
leave
push
sub
pop
push
pop
sbb
mov
leave
scas
dec
jb
inc
cmp
add
sti
and
mov
sub
ins
xchg
cmp
sbb
push
fsub
ret
sbb
inc
sbb
xor
ret
add
sti
push
sbb
iret
in
or
not
outs
mov
mov
push
outs
aaa
push
dec
out
pushf
xor
shr
fadd
or
fisttp
fdivr
mov
cmp
test
cmp
xor
jb
push
outs
nop
loopne
jb
jg
push
enter
push
pop
adc
pop
ja
and
mov
ins
xlat
cmc
scas
adc
xchg
mov
push
xor
iret
mov
ror
jmp
xor
mov
neg
jae
dec
push
and
cs
dec
push
sub
add
jbe
jo
imul
ja
(bad)
push
gs
imul
imul
pop
pop
or
clc
mov
test
(bad)
add
xor
dec
push
test
mov
sub
dec
push
lahf
inc
add
cmp
out
or
xor
inc
add
dec
cli
(bad)
mov
add
inc
add
add
outs
data16
push
icebp
xor
ja
push
clc
adc
xor
sub
xchg
add
pop
inc
sbb
mov
mov
mov
lea
inc
adc
mov
mov
add
adc
adc
ret
aaa
mov
ret
sub
clc
add
cli
int
je
add
jne
lea
adc
add
in
lea
add
lock
push
dec
out
pusha
je
mul
in
push
enter
xchg
call
inc
loopne
lock
jnp
loopne
cmp
cmp
jne
xlat
jmp
xor
mov
mov
cmps
ds
dec
push
mov
test
cmp
cmp
gs
pop
cmp
xor
xor
ins
cld
dec
test
push
mov
lea
out
mov
lea
jne
pop
inc
adc
push
cs
cmp
add
jo
in
mov
jl
pusha
pop
imul
xor
pop
push
in
sbb
xor
adc
push
aas
inc
jmp
mov
outs
pop
push
xchg
aas
in
push
cmp
out
xchg
out
out
jecxz
inc
cs
inc
fcom
outs
mov
jne
fbld
test
mov
call
pushf
in
jmp
outs
test
cmp
jae
and
xchg
push
shr
push
sbb
mov
sti
sti
sbb
jge
mov
adc
jno
pop
sbb
or
adc
test
mov
fdiv
dec
mov
cmp
test
jne
nop
lea
imul
mov
lea
add
mov
(bad)
mov
std
pcmpeqb
clc
std
(bad)
call
or
in
pop
inc
lea
pop
test
and
test
or
pop
or
jne
xor
popf
sti
xchg
sbb
cld
lea
cdq
jnp
mov
or
ins
prefetchnta
add
cmp
and
sbb
fcom
push
xor
call
gs
loop
or
add
mov
or
ja
aam
jp
lea
out
or
or
xchg
loopne
xor
jl
mov
adc
sti
or
lea
(bad)
xchg
inc
or
xchg
aam
inc
or
aaa
sti
lea
mov
fadd
out
mov
add
pop
clc
lea
mov
out
mov
jge
je
adc
pusha
mov
sub
fcomip
inc
and
fmul
mov
cli
add
cmp
seto
daa
(bad)
je
push
jle
add
add
and
fadd
jecxz
and
sbb
(bad)
call
lea
adc
adc
neg
ror
mov
mov
(bad)
pusha
jne
lods
jmp
adc
add
sub
aad
adc
and
adc
imul
and
push
jae
jp
and
mov
push
xlat
pop
in
dec
xchg
push
push
mov
add
dec
bound
xor
push
mov
dec
in
inc
call
mov
jne
scas
add
adc
mov
jmp
mov
adc
ror
add
push
rcl
ds
lea
lods
and
mov
jl
mov
out
loopne
pusha
mov
loopne
add
jmp
pop
inc
out
add
cs
jae
push
add
jae
syscall
or
js
or
mov
jo
punpckhdq
mov
cmp
ins
cs
minps
pop
ins
adc
in
(bad)
(bad)
(bad)
dec
cmp
inc
push
dec
push
push
and
inc
push
inc
inc
inc
cmp
popa
jae
jb
jo
and
(bad)
(bad)
(bad)
out
pop
and
popa
jb
push
outs
jb
jae
cmp
imul
xor
(bad)
(bad)
push
jae
arpl
je
and
ja
ja
aaa
aaa
ins
cmp
arpl
arpl
out
(bad)
jmp
je
jae
cs
ss
inc
inc
xor
or
inc
xor
repnz
(bad)
xor
inc
xor
xor
inc
inc
xor
out
(bad)
xor
inc
cmp
inc
das
inc
push
inc
push
push
dec
push
dec
cs
mov
dec
mov
and
inc
add
push
xor
cld
(bad)
movs
das
movs
xor
or
arpl
sti
out
pop
imul
sub
or
gs
jmp
adc
or
and
gs
popa
jo
sub
pop
adc
outs
arpl
cs
sub
sub
jge
or
das
das
and
loope
das
pop
ds
ins
outs
imul
or
movaps
push
push
dec
push
push
dec
cs
dec
inc
adc
cmp
out
inc
pop
fs
cmp
dec
inc
push
gs
mov
inc
inc
dec
inc
push
xor
fbstp
and
ja
ja
popa
arpl
jb
xchg
sbb
arpl
or
xchg
cwde
add
mov
jg
inc
cld
mov
mov
stc
jne
or
aaa
fs
fs
(bad)
ss
lea
nop
test
jne
out
dec
call
jne
popa
scas
add
outs
mov
jbe
mov
xor
cmc
xor
out
ds
jne
cld
push
lea
mov
cmp
mov
aas
in
std
add
mov
shl
test
outs
add
out
lea
das
push
jl
aaa
dec
push
jbe
fnstenv
push
ins
test
add
test
je
push
mov
mov
push
sub
mov
dec
lock
int3
dec
mov
sub
jmp
in
pop
jecxz
sub
cmp
loopne
cmp
pop
repz
mov
icebp
popf
repz
test
enter
js
jo
ins
adc
jnp
test
loopne
retf
sub
lea
idiv
and
lea
es
jp
or
test
mov
mov
idiv
adc
test
pusha
push
mov
fcom
and
push
jnp
outs
pusha
xor
and
push
pusha
das
data16
loopne
test
loop
popf
jnp
lds
enter
jp
pusha
xor
aad
mov
in
mov
int3
out
jmp
pop
ds
cld
cmp
pusha
icebp
push
out
xchg
outs
push
mov
add
push
push
push
cmp
call
pop
ds
test
and
xor
pop
mov
mov
fisub
call
inc
push
not
(bad)
clc
sbb
push
fcmovne
xchg
das
jo
cld
out
mov
inc
dec
inc
push
cs
sub
add
jg
mov
jne
outs
sbb
(bad)
(bad)
jb
outs
imul
xchg
dec
pop
dec
icebp
fwait
mov
pop
push
jne
pop
or
inc
nop
cmp
pop
push
cwde
test
or
gs
ins
pop
outs
jo
dec
sub
outs
pop
test
cmp
ins
outs
jb
push
data16
fs
(bad)
adc
test
cmp
(bad)
pop
hlt
gs
add
jbe
icebp
xor
mov
adc
jo
inc
mov
cmp
mov
cmp
xor
xor
pop
mov
add
mov
mov
call
aaa
lock
sub
lea
cmp
mov
mov
stos
test
dec
or
sti
cmp
pushf
adc
xchg
push
lea
les
or
sbb
pusha
je
lea
push
mov
jecxz
out
inc
rcr
pop
imul
inc
or
and
xchg
pusha
xchg
test
int3
in
mov
lea
pop
shl
mov
inc
mov
jne
arpl
div
cld
imul
cmp
lock
xchg
cmps
push
mov
sub
or
ret
jne
test
push
mov
aam
push
pop
and
out
pop
add
call
pop
xor
mov
mov
cmc
data16
sbb
or
gs
sbb
jmp
xchg
sbb
add
add
adc
inc
aam
pop
loopne
inc
adc
in
sbb
or
or
push
add
add
dec
inc
adc
add
mov
clc
xchg
test
lea
push
mov
mov
loope
je
xchg
inc
pop
sbb
or
mov
lock
fadd
shr
push
ins
(bad)
xchg
in
fisttp
and
sbb
push
push
fs
fwait
lods
js
add
icebp
jae
sbb
mov
pop
cmp
pop
mov
out
movs
es
push
into
xchg
sbb
hlt
cmps
lds
loope
rcr
xrelease
stos
mov
or
mov
cld
adc
fmul
loope
jno
xor
inc
sbb
inc
sub
(bad)
lock
in
push
fs
sub
syscall
sub
jns
out
dec
or
pop
rol
in
mov
mov
sbb
loopne
hlt
sar
lea
ror
pushf
inc
lods
data16
enter
in
in
pop
pop
inc
out
push
repz
dec
mov
nop
sub
pusha
das
and
adc
or
outs
inc
cdq
sti
and
mov
xchg
ja
inc
jge
mulps
xchg
and
jle
jne
leave
aam
aam
aam
loope
lea
or
inc
mov
(bad)
in
fistp
int3
xor
addr16
add
pop
pop
pusha
push
lea
jbe
mov
and
mov
add
jae
fcmovnbe
cs
mov
enter
push
mov
sar
not
jo
xchg
out
push
push
cs
push
or
popa
jbe
cs
pop
or
adc
adc
pop
jae
and
(bad)
ja
and
outs
imul
bound
jo
je
cmp
dec
lahf
dec
gs
outs
outs
sub
pop
(bad)
mov
clc
ret
(bad)
mov
into
icebp
mov
dec
hlt
int
(bad)
mov
loopne
fdiv
stos
into
fidiv
pop
int3
push
shr
fistp
pop
push
outs
jb
and
ins
mul
sbb
mov
ds
add
xor
(bad)
popa
cld
pop
adc
push
push
loop
dec
xchg
dec
or
in
cmp
fadd
loope
jl
lea
add
and
mov
inc
lock
or
scas
lock
jo
test
jne
add
das
mov
ss
fild
mov
mov
hlt
dec
retf
cmp
push
sbb
mov
jb
test
cmp
mov
bound
xor
cwde
xor
call
ja
sub
dec
pop
pop
fcomp
scas
idiv
sub
in
std
enter
add
daa
xor
fwait
sub
pop
push
into
sbb
sbb
cmp
scas
mov
add
aaa
fld
dec
pop
sbb
out
fild
scas
sub
inc
add
mov
adc
pop
arpl
dec
inc
add
inc
popa
arpl
sbb
mov
jecxz
inc
xchg
push
and
push
push
ror
pusha
xchg
shr
mov
in
lahf
push
pop
pop
xchg
ins
or
and
pop
fcom
shl
and
pop
into
inc
pop
sub
cmp
sub
pop
mov
inc
iret
mov
sub
into
popf
sbb
sbb
and
mov
shl
dec
pusha
rcr
push
and
mov
nop
rcl
imul
hlt
or
push
mov
clc
fst
jmp
enter
push
mov
lds
sti
add
inc
ror
fdiv
inc
ss
imul
lahf
aam
add
sbb
dec
or
mov
push
clc
dec
out
nop
cs
add
mov
adc
sub
push
outs
imul
mov
or
jp
adc
or
add
and
jg
mov
sub
push
mov
add
aas
cmp
fadd
out
in
int3
mov
mov
scas
mov
mov
cmp
dec
fcos
pop
sti
jne
lea
imul
les
loopne
ja
inc
push
(bad)
out
lock
loopne
push
enter
push
int3
dec
adc
std
pop
pop
xchg
hlt
mov
cmp
out
sub
rcr
xchg
push
inc
ret
mov
addr16
jne
sbb
pop
jecxz
les
imul
jno
dec
shl
push
in
or
sbb
jno
adc
pop
dec
icebp
or
jno
out
add
movs
xor
test
enter
inc
dec
jno
ja
mov
dec
jno
or
jb
(bad)
sbb
inc
cmp
add
add
lea
or
inc
mov
into
jge
mov
pop
lea
das
scas
adc
push
in
iret
fsubr
xchg
movs
jo
xor
inc
loopne
mov
test
mov
mov
add
lods
mov
nop
mov
(bad)
jge
in
dec
jp
add
clc
push
pop
ds
sahf
adc
shl
cmp
sub
add
cs
xor
cmp
pop
sub
pop
xchg
clc
cmp
hlt
mov
or
xchg
aam
xchg
adc
fdiv
jmp
ficomp
cmp
jmp
fild
xor
in
sub
cmp
jecxz
cdq
ret
std
push
add
xchg
pop
jne
inc
dec
inc
add
dec
inc
add
add
invd
pop
or
test
js
add
daa
and
cld
ja
in
add
xor
xchg
add
pop
inc
xor
shl
loope
add
cmps
add
ins
outs
xor
inc
hlt
(bad)
mov
popa
bound
xor
dec
inc
add
jmp
xor
xchg
adc
or
ins
imul
inc
add
push
xor
arpl
adc
xor
loopne
jae
push
adc
jl
or
(bad)
out
cmovle
push
push
and
add
in
jge
add
add
mov
push
or
pusha
call
jecxz
and
mov
jo
add
add
jnp
mov
push
enter
addr16
mov
pop
mov
pusha
ds
inc
adc
push
lea
mov
inc
add
cmp
jne
mov
jnp
pop
aam
pop
and
mov
mov
mov
add
add
lea
mov
push
int3
stos
or
int3
scas
out
in
imul
mov
add
and
outs
inc
cld
mov
sbb
cmp
loopne
jge
cmp
dec
arpl
mov
data16
push
push
push
or
loop
add
add
scas
jmp
clc
jmp
xchg
das
adc
and
add
das
shr
adc
xor
xor
push
clc
jg
xchg
cmp
lea
mov
and
sbb
test
lods
add
idiv
mov
scas
add
sbb
cmp
or
mov
fs
mov
jae
out
dec
lock
add
adc
push
ins
call
jae
jae
fnstenv
cmp
lea
and
jge
fadd
sub
movs
or
lea
mov
inc
int3
(bad)
push
ja
dec
push
xchg
out
clc
add
pop
aam
push
mov
loopne
pop
push
call
movs
pop
add
and
ret
ror
lea
or
(bad)
cmp
jne
mov
fwait
dec
call
inc
cmp
jne
inc
cmp
jne
pop
mov
mov
push
enter
xor
jne
lock
mov
xor
or
test
lods
mov
push
rcl
mov
pop
push
push
xchg
lea
mov
in
sbb
mov
add
sbb
sub
shl
lea
cmp
jb
mov
xor
mov
and
nop
arpl
dec
mov
inc
popa
cwde
mov
and
(bad)
pop
inc
test
inc
clc
xchg
push
lods
sub
inc
lods
or
push
xchg
sbb
jne
cmp
je
dec
inc
nop
rcl
iret
adc
movs
add
movs
lea
dec
push
add
jnp
out
cmp
dec
lea
mov
fcom
push
and
xor
cwde
movs
pusha
rol
cwde
xor
daa
test
adc
inc
mov
or
dec
pop
push
mov
in
or
mov
push
adc
push
aaa
xchg
pop
aaa
(bad)
fbstp
push
imul
mov
mov
loope
clc
mov
out
call
aam
mov
ret
adc
inc
lahf
or
xor
into
movs
mov
mov
repnz
push
add
adc
int
inc
sub
std
(bad)
out
push
pop
mov
std
enter
mov
retf
pop
inc
lock
fs
in
aaa
push
lock
jne
mov
popf
jae
fwait
or
pop
jmp
in
std
mov
dec
sbb
push
daa
jecxz
mov
jo
mov
mov
add
or
int3
(bad)
mov
and
stos
daa
pusha
clc
and
add
mov
out
xor
pushf
shl
popa
adc
push
ja
mov
and
fdivr
push
inc
lock
pop
loopne
adc
or
repz
loopne
inc
add
add
sub
fnsave
(bad)
jno
add
pop
add
inc
add
pop
inc
add
cld
mov
cld
je
fild
jl
inc
add
inc
add
adc
inc
add
or
inc
add
mov
add
aaa
(bad)
inc
sbb
inc
add
sub
aam
inc
add
dec
ss
fistp
add
enter
cwde
push
mov
sub
or
jne
aaa
jl
inc
add
pop
add
bound
repz
jmp
add
dec
inc
add
adc
push
inc
add
fs
sub
hlt
fstp
jbe
add
jnp
cmp
add
add
mov
popf
add
sar
shl
or
je
lods
pop
cli
je
sti
popf
add
fs
add
arpl
dec
mov
jl
test
inc
add
pop
adc
out
jne
add
gs
add
add
or
mov
imul
mov
das
pop
add
scas
jmp
add
inc
add
out
add
jae
add
adc
in
add
xlat
ins
ins
(bad)
addr16
repz
inc
add
dec
inc
add
imul
add
pop
je
add
(bad)
sub
inc
stos
adc
loope
mov
add
add
pop
push
cmp
jae
(bad)
lock
push
cmp
or
loopne
mov
cmp
or
test
or
adc
test
mov
adc
mov
add
mov
inc
add
dec
and
fsub
inc
(bad)
jmp
add
dec
retf
int3
enter
enter
fcomp
fxch
(bad)
(bad)
loopne
ja
or
jecxz
in
das
xchg
inc
xor
jne
je
ins
and
and
jbe
inc
popa
je
xor
xor
add
or
sub
dec
pop
add
pusha
pop
push
in
pop
add
add
sbb
mov
jg
pop
sbb
mov
add
cmps
jmp
sbb
sub
dec
mov
mov
add
inc
jbe
imul
cmp
shr
pop
or
dec
add
and
jae
add
add
xor
in
hlt
cld
add
shl
or
adc
and
xor
shl
cmp
dec
push
shl
je
dec
shl
movs
lods
xor
shl
mov
xor
rcr
in
hlt
add
sahf
sub
sub
or
pop
test
add
pop
fs
xchg
push
add
js
addr16
sbb
add
nop
pop
call
sbb
dec
jp
movs
pop
pop
jnp
inc
into
sahf
movups
and
lar
xor
enter
addr16
cmp
das
xor
jle
and
rcr
inc
mov
cmp
add
pop
iret
add
pop
mov
fild
add
add
add
add
cmp
push
inc
add
jo
call
les
call
add
sub
cmps
imul
out
fbld
add
or
sar
mov
hlt
cmovno
add
inc
add
pop
add
inc
lock
(bad)
sub
jmp
sti
or
cmp
sbb
or
popa
outs
jae
push
gs
pushw
pop
stos
loop
xor
push
mov
loope
mov
mov
or
pop
dec
xlat
jne
push
aam
add
in
xor
popf
(bad)
das
pop
sbb
rol
sbb
int3
add
push
cmp
pop
xlat
xor
call
pop
pop
add
shl
jo
inc
jl
rol
add
mov
retf
int3
es
(bad)
sti
lock
mov
jae
fwait
and
inc
clc
add
sbb
or
outs
sub
xor
popa
dec
jne
push
scas
fs
adc
js
adc
dec
nop
adc
in
out
rol
sbb
in
sbb
int3
inc
dec
shl
cmp
push
mov
push
cmps
jmp
jl
add
inc
xchg
push
aam
pop
mov
sbb
cld
pop
push
pop
or
mov
add
pop
pop
movd
jbe
cmp
out
pop
dec
pop
xchg
pop
pop
dec
cmps
jmp
pop
push
mov
mov
pop
or
fcomp
das
add
dec
add
pop
pop
pop
scas
jmp
xlat
je
dec
sbb
or
mov
mov
pop
js
xchg
imul
pop
push
add
inc
add
mov
pop
scas
or
jne
cmp
push
push
pop
sbb
push
mov
aad
jb
push
in
adc
or
enter
in
or
out
jbe
jg
sahf
jmp
add
add
add
mov
push
add
ja
sbb
and
and
add
rdtsc
or
or
pop
mov
add
add
mov
outs
push
jge
jecxz
pop
xchg
add
push
xchg
xchg
pop
adc
pop
xor
jnp
loopne
inc
add
add
dec
lock
sub
pusha
pop
inc
add
shl
mov
xor
xor
shl
hlt
add
shl
cmp
iret
xor
dec
push
and
test
push
cmp
mov
add
mov
int
sbb
mov
pop
leave
push
jnp
or
add
adc
sbb
pop
repz
jmp
dec
pop
dec
pop
dec
cwde
jecxz
fiadd
dec
pop
inc
push
sub
cmps
dec
bswap
cmovnp
jmp
pop
dec
pop
loopne
jmp
pop
add
aam
and
or
cmp
dec
out
hlt
dec
cmp
xor
xor
dec
out
hlt
pop
xor
xor
out
hlt
dec
out
xor
xor
and
popf
(bad)
out
jne
pop
pop
add
aam
add
pop
and
ret
test
add
pop
nop
add
repz
shl
mov
add
in
dec
addr16
add
mov
add
fwait
out
mov
fcomp
inc
add
inc
add
call
test
test
int3
fsub
imul
and
dec
cmps
imul
imul
cmps
add
out
jge
ret
fmul
lock
ss
sahf
jnp
sub
add
mov
fistp
pop
sbb
neg
xor
push
add
xchg
cmps
pop
in
mov
inc
add
pop
or
sbb
pop
jmp
jmp
mov
push
adc
mov
cli
setl
stos
mov
jne
inc
add
les
not
fadd
imul
cmc
add
inc
add
adc
repz
pop
repnz
icebp
dec
shl
adc
je
out
sub
xor
mov
cwde
push
scas
jmp
aam
pop
jmp
mov
pop
xor
add
or
cs
jnp
push
out
pop
add
sbb
add
push
or
jo
retf
xor
add
add
pop
sbb
add
repnz
cmp
or
or
fisttp
add
sar
mov
inc
pushf
xor
nop
add
dec
fadd
mov
push
sbb
gs
push
dec
into
in
mov
mov
adc
adc
mov
out
xor
or
sub
and
ja
adc
aam
dec
out
push
add
test
lahf
mov
add
js
pop
mov
add
int3
adc
sbb
test
cmp
xchg
adc
pop
outs
add
fidivr
add
jae
cwde
mov
mov
das
sub
pop
xchg
imul
cli
call
(bad)
inc
imul
shl
add
add
lock
fdivr
cli
jmp
add
mov
adc
pop
loopne
test
xlat
rcl
xor
inc
add
ror
add
mov
test
arpl
inc
jg
out
test
or
not
inc
pop
mov
sub
mov
pop
neg
adc
jl
pop
add
sar
loopne
inc
add
in
xchg
fs
push
scas
pop
xlat
daa
jo
xchg
xchg
dec
pop
jmp
out
stos
dec
sbb
loopne
xor
in
add
retf
sub
arpl
pop
ins
or
add
lods
pop
fs
xlat
jne
clc
das
add
jl
nop
or
push
out
add
imul
sub
out
sub
fld
imul
inc
add
jecxz
pop
mov
das
or
sub
enter
mov
out
inc
add
cld
mov
adc
jne
xlat
pop
pop
adc
xlat
mov
das
xlat
xor
int3
pinsrw
push
jo
aam
and
or
ret
iret
push
pop
hlt
add
jmp
sbb
inc
add
jmp
scas
imul
adc
or
scas
sti
scas
sbb
sbb
les
dec
jmp
out
adc
je
dec
dec
add
mov
and
loopne
push
jo
fcmovnbe
xor
jge
int3
scas
fistp
lock
jne
jnp
daa
sbb
test
pop
add
mov
inc
dec
mov
movs
addr16
pop
mov
das
sbb
sbb
imul
cld
ret
jmp
lods
pop
or
(bad)
xor
xor
aaa
scas
jmp
daa
or
das
pushf
aas
push
add
aaa
mov
sbb
psubusb
mov
add
and
xlat
jne
pop
dec
mov
push
mov
pop
xlat
jne
xor
add
pop
or
aam
push
jb
add
neg
sbb
lock
mov
pop
xlat
jne
dec
das
mov
sub
rcr
scas
imul
adc
movs
sbb
mov
xchg
mov
retf
addr16
loopne
in
mov
addr16
inc
push
jb
xlat
xchg
fadd
pop
or
ins
rcl
inc
je
movs
adc
outs
xor
inc
add
mov
scas
les
mov
fsubr
adc
add
xor
sbb
nop
sti
ret
aas
sbb
pop
inc
xlat
lock
in
dec
xor
xchg
mov
dec
xchg
adc
jne
xlat
addr16
pop
pop
add
aaa
or
xor
inc
jmp
and
das
stos
add
fstp
add
movs
pusha
pop
rcl
add
cmps
push
xor
and
mov
push
add
or
inc
add
or
mov
add
inc
adc
pop
ja
add
push
and
dec
add
das
mul
dec
inc
add
dec
inc
add
or
jle
add
inc
push
xor
fstp
push
add
xorps
ja
dec
dec
add
dec
add
add
mov
pop
xlat
jne
dec
xchg
push
and
pop
push
popf
lfence
mov
pop
inc
gs
cmp
pop
idiv
mov
aaa
pop
push
cmp
cmps
dec
jbe
xlat
jne
dec
movs
dec
cmp
add
mov
sahf
mov
dec
add
test
cdq
add
add
sub
popf
cmp
push
adc
sbb
add
repz
aas
inc
add
add
inc
add
inc
cmp
aaa
sbb
rol
mov
add
pusha
outs
push
jp
add
dec
std
inc
out
add
inc
ds
test
cld
paddb
jg
clc
add
push
add
popf
mov
add
jge
les
cld
add
and
(bad)
cld
or
(bad)
cld
(bad)
(bad)
jg
iret
or
stos
sbb
and
bound
arpl
or
mov
xchg
sbb
add
push
mov
xchg
pusha
or
mov
add
add
rdpmc
movnti
dec
or
add
(bad)
jmp
sbb
(bad)
ficomp
(bad)
push
(bad)
(bad)
out
add
out
sbb
pop
repnz
xor
cmp
loopne
(bad)
push
pop
push
clc
or
push
adc
add
jnp
cld
movhps
sub
js
fdivr
add
xchg
pop
cmp
xor
add
mov
mov
pop
std
add
mov
push
fld
ss
jmp
stos
(bad)
add
out
test
add
inc
jg
inc
adc
mov
ret
ret
popf
call
xor
sar
(bad)
mov
push
cdq
sti
add
pop
add
push
and
pop
inc
xor
add
jnp
pop
xchg
sbb
mov
adc
sbb
jmp
push
call
mov
pop
sbb
push
pop
xor
(bad)
or
add
jbe
or
add
outs
xor
cmp
inc
imul
aaa
or
fdivr
inc
inc
add
add
cmps
push
stos
sbb
push
loopne
rcr
adc
add
inc
(bad)
jnp
mov
add
aaa
adc
pop
psubusb
add
iret
jae
sbb
in
pop
cmp
xor
or
sbb
call
jbe
add
lods
add
sub
add
mov
inc
xchg
pop
pop
sub
test
add
ror
add
adc
inc
adc
or
test
xchg
jg
aas
pop
or
movhps
das
retf
in
or
addr16
fdiv
or
pop
cld
mov
jmp
add
push
fadd
dec
xor
mov
and
sub
sbb
fwait
or
loope
pop
xor
add
dec
adc
or
and
(bad)
cmp
add
or
add
push
add
jnp
add
ja
pop
fild
add
inc
add
popa
add
pusha
xor
add
sbb
add
jmp
push
sbb
mov
and
or
fwait
dec
and
xor
inc
(bad)
(bad)
(bad)
jg
sbb
sbb
jg
push
sbb
call
or
dec
test
pop
(bad)
inc
loope
js
push
inc
cmp
and
mov
add
and
add
cmp
add
pop
stos
sub
add
out
cwde
push
add
mov
pop
in
add
push
xchg
add
out
add
add
push
or
fmul
add
xor
cmp
(bad)
std
cmp
xor
cwde
push
mov
xor
pop
adc
xor
dec
(bad)
xor
adc
adc
repz
fsub
repz
xor
adc
pop
std
adc
adc
push
and
xor
clc
daa
cmp
es
adc
adc
int
out
jp
(bad)
pop
xor
cmp
into
mov
xor
dec
cmp
daa
mov
sub
cmp
sbb
fsubr
jnp
adc
cmp
dec
arpl
ficom
pop
adc
push
dec
(bad)
clc
sub
or
out
mov
(bad)
inc
mov
add
or
adc
jb
xor
ja
fmul
mov
inc
and
add
pushf
pop
adc
and
sub
push
inc
and
sub
sub
add
iret
lock
and
cmp
repz
add
xor
mov
(bad)
cmp
repz
cmp
sub
cmp
out
sahf
jecxz
clc
sbb
cmp
jmp
cmp
adc
gs
sti
push
ret
aas
pop
das
and
cmp
and
(bad)
cmp
jo
out
xor
add
mov
dec
sub
sub
data16
cmp
add
cmp
xor
mov
(bad)
int
fdiv
sub
sub
imul
and
popa
xchg
adc
outs
xchg
adc
popa
xchg
or
neg
leave
adc
fnstcw
xor
xor
clc
mov
adc
mov
add
frstor
add
test
aas
add
inc
inc
inc
or
adc
ror
push
pop
push
sahf
adc
(bad)
jns
xor
mov
inc
aad
aam
(bad)
in
xchg
sbb
popf
cmp
xor
adc
in
daa
out
in
pop
out
push
push
(bad)
lahf
mov
fldenv
inc
add
repz
in
(bad)
add
mov
adc
xor
repz
int3
dec
push
or
mov
dec
dec
daa
push
pop
dec
cmp
data16
aas
sub
call
arpl
pop
(bad)
imul
mov
popf
or
(bad)
clc
cmp
adc
daa
push
add
(bad)
fiadd
xor
call
daa
ss
mov
dec
cmp
daa
arpl
xor
or
in
inc
inc
cmp
sub
int3
push
sbb
aas
into
pop
sub
inc
mov
gs
std
jae
hlt
leave
mov
inc
inc
daa
pushf
sti
cmp
adc
data16
lahf
cmp
call
xor
adc
in
fldenv
xor
out
out
jecxz
cmp
inc
ja
add
mov
outs
xor
inc
xor
fsub
test
stos
movs
mov
sub
mov
mov
aas
retf
xor
adc
pop
xor
adc
pop
fidiv
les
add
xor
pop
out
lahf
sti
and
aas
adc
inc
sub
push
mov
sub
xor
pop
sbb
jae
arpl
xor
and
clc
(bad)
aas
sti
out
jg
inc
inc
data16
inc
push
cmp
clc
cmp
push
inc
mov
adc
stos
inc
lahf
jnp
pop
(bad)
lahf
xor
mov
fs
jae
lahf
ja
xor
stos
dec
loope
mov
mul
adc
and
mov
adc
iret
mov
mov
mov
xor
icebp
pusha
rcr
dec
jb
xchg
mov
lds
or
xor
adc
pop
retf
push
out
mov
(bad)
jle
sbb
pop
mov
xrelease
cmp
sbb
hlt
pop
ins
xor
or
push
xor
adc
cmps
out
sub
adc
jo
sbb
adc
push
fwait
in
and
adc
xchg
es
mov
jnp
xor
es
xor
ficom
imul
xchg
adc
rcr
mov
rol
cmp
aad
cmp
sub
(bad)
cmp
add
sbb
(bad)
xor
mov
jecxz
add
or
mov
xor
pop
out
cmp
or
mov
sar
scas
add
push
sbb
leave
popa
repz
xlat
cs
out
sar
sub
cdq
mov
out
call
mov
int
sar
mov
rcr
sub
mov
pop
test
sbb
out
daa
jp
mov
xor
into
xchg
jae
add
add
pushf
mov
iret
or
mov
push
inc
mov
inc
push
ret
and
xchg
xor
adc
cmc
xchg
stos
and
popf
cmp
rol
gs
shl
and
sub
hlt
pop
dec
mov
and
bound
pop
dec
ins
ret
ins
adc
rcr
pusha
cmp
inc
or
cmp
cld
push
push
cmp
(bad)
dec
add
xchg
jae
jae
stos
stos
pop
ja
or
or
test
rdmsr
cmp
and
nop
cmp
shl
mov
adc
sbb
in
cmp
sar
and
and
mov
jmp
dec
and
and
dec
out
fistp
stos
adc
loopne
outs
jb
test
mov
daa
inc
dec
or
add
pop
add
sub
invd
add
or
add
add
push
ret
and
das
nop
adc
inc
xor
dec
hlt
sub
xor
xchg
lock
iret
mov
(bad)
js
add
pop
pop
mov
lock
sti
fs
xchg
pop
daa
cwde
sbb
pop
add
ins
xor
push
out
jbe
mov
dec
add
mov
pop
add
popf
or
or
sub
inc
add
adc
cmp
dec
(bad)
jge
lahf
sub
add
push
add
add
outs
add
add
std
push
lds
imul
add
adc
dec
add
add
dec
pmaxsw
gs
add
imul
cmp
pop
in
out
outs
add
add
pop
push
add
js
je
add
in
mov
out
dec
add
add
jae
sub
addr16
push
add
add
dec
jb
frstor
(bad)
fs
dec
lahf
fdiv
add
adc
push
or
pop
and
xchg
fs
or
inc
jne
add
inc
push
or
sbb
scas
jmp
gs
jo
imul
mov
and
jo
arpl
add
or
loope
xor
test
adc
add
shr
or
test
imul
xchg
sbb
pop
xlat
fbstp
je
outs
xchg
inc
inc
arpl
adc
dec
pop
pop
imul
push
(bad)
outs
sti
adc
rcl
or
inc
pop
jo
nop
scas
jo
imul
shl
ins
pop
or
inc
mov
popa
add
and
test
push
sub
sbb
pop
str
adc
bswap
in
inc
das
or
adc
cmps
mov
or
into
cbw
sbb
ins
out
outs
fs
int
or
mov
xor
jp
dec
ins
std
daa
fnstsw
mov
std
imul
push
retf
fs
std
icebp
jo
fstp
sbb
cmp
imul
xchg
pop
arpl
inc
add
mov
popa
add
aaa
or
mov
popa
jns
gs
jae
adc
outs
aas
push
push
movs
inc
jnp
js
xlat
rcl
add
xor
leave
imul
jo
sbb
mov
in
add
xchg
jge
sbb
cmp
inc
mov
inc
test
sahf
and
inc
ds
cmp
fistp
add
sub
and
fnstsw
add
imul
dec
jne
adc
pop
xlat
jne
push
jb
pop
pop
mul
cmp
outs
mov
fs
arpl
jne
jb
stos
ins
and
pop
aaa
or
popa
adc
push
out
mov
inc
sub
clc
(bad)
jbe
outs
and
pop
cmp
inc
neg
and
iret
cmp
inc
and
ja
mov
push
sub
jp
add
jae
outs
mov
aad
aas
jae
inc
cwde
cmp
sub
add
outs
aas
and
push
dec
mov
sub
jne
ja
cmp
fst
gs
inc
xlat
arpl
and
(bad)
mov
add
and
or
and
pop
jge
ret
xchg
push
iret
inc
dec
fucomi
popf
jnp
rol
ins
aaa
and
ja
test
add
scas
jo
arpl
mov
ret
popa
inc
mov
jae
xor
out
cmp
dec
mov
xlat
inc
shr
pop
(bad)
pop
pop
test
fild
mov
jnp
retf
cmp
icebp
paddw
push
add
jb
xchg
xchg
sbb
add
jmp
addr16
pop
xlat
ror
push
sbb
sub
or
sbb
sbb
loope
dec
jl
add
jnp
add
mov
or
mul
add
xchg
jmp
das
aaa
cmps
jae
inc
iret
out
daa
push
mov
je
sub
add
ins
or
ret
inc
ret
pop
ret
sub
inc
(bad)
outs
or
lock
jmp
jnp
loopne
jae
(bad)
int
xor
dec
iret
jae
add
hlt
mov
or
adc
cmp
pop
pop
dec
dec
ret
mov
add
es
scas
mov
add
add
push
mov
cmp
push
xor
jb
or
push
arpl
es
mov
imul
jge
scas
dec
aaa
outs
lds
adc
pusha
jnp
sbb
xchg
add
xchg
retf
jae
test
icebp
ret
inc
movs
jo
scas
cmp
xchg
dec
loopne
pusha
clc
stos
and
mov
and
adc
out
mov
outs
lea
ret
iret
imul
daa
test
mov
out
shl
push
xor
ins
add
or
call
cmp
arpl
pop
stos
je
sbb
dec
and
sbb
inc
fstp
test
lds
jmp
aaa
inc
ret
sbb
scas
jae
data16
hlt
data16
mov
gs
dec
das
add
xlat
xor
jo
iret
dec
dec
jo
es
pusha
jmp
sbb
xlat
pop
sbb
add
add
fnstsw
cmp
add
aas
or
mov
cmc
popa
inc
xchg
cmp
pop
jnp
outs
jno
sbb
pop
dec
out
sub
ins
sbb
arpl
dec
jno
mov
mov
imul
iret
adc
outs
imul
mov
xlat
(bad)
xor
xor
sub
and
jg
xchg
jmp
sub
mov
ja
push
sbb
sub
jo
inc
and
pcmpgtd
jo
xor
in
push
outs
add
ins
add
push
ja
out
mov
sti
ror
fnsave
sbb
mov
add
rcl
shl
jl
gs
add
test
lods
xchg
jmp
mov
mov
icebp
ja
arpl
(bad)
or
pop
lea
xlat
mov
test
or
xor
push
xchg
lds
sbb
and
pop
sub
and
pop
hlt
cmp
pop
pusha
cwde
or
cmc
cmp
push
jne
jl
dec
adc
inc
dec
fs
icebp
cmp
ins
add
cmp
(bad)
imul
push
dec
push
and
push
aad
loopne
pop
mov
jmp
push
aad
mov
xchg
in
ja
push
and
ja
inc
inc
(bad)
and
ret
icebp
outs
add
cmc
sbb
add
jg
ror
jge
pop
ja
js
aad
std
pusha
cmp
add
test
nop
das
out
leave
in
sar
loope
fnstenv
pop
mov
ror
sbb
sbb
out
mov
pop
das
fimul
add
inc
adc
cmc
shl
xor
sbb
cmp
add
add
xchg
cmp
sub
jo
movs
jns
in
jae
jne
xchg
les
ror
cmp
cs
popa
clc
ret
imul
xor
shl
and
sbb
jae
shl
jnp
stc
lock
mov
jae
popa
ja
mov
int3
push
sbb
shl
gs
stos
cmp
mov
popf
inc
imul
jnp
xor
xor
and
add
sbb
pop
jbe
mov
push
iret
popf
jg
repz
imul
sbb
fild
add
mov
xor
push
addr16
cmp
fst
xlat
rol
and
and
fnsave
or
and
in
dec
jae
mov
sbb
cmps
xlat
pop
leave
(bad)
rol
mov
and
jnp
call
out
pop
rol
jne
adc
jo
or
out
popa
lods
imul
mov
pop
mov
mov
or
out
dec
ret
cmps
add
pop
gs
outs
xchg
je
cmc
addr16
adc
fnstenv
dec
jp
cmp
shl
ficomp
xor
dec
daa
sbb
cmp
add
jg
and
loop
jmp
and
pop
add
sub
and
pop
jns
adc
add
pop
pusha
xchg
push
pop
jnp
cmp
and
adc
or
xlat
mov
dec
mov
and
in
jnp
mov
dec
mov
cmp
and
push
(bad)
cmp
loope
or
hlt
jp
cmp
push
cmp
imul
jo
ja
jge
(bad)
test
inc
ins
sbb
test
out
cmp
scas
jo
scas
sti
icebp
dec
or
imul
mov
loopne
xchg
sbb
inc
retf
cmp
push
(bad)
shl
int
(bad)
sub
adc
adc
dec
loop
(bad)
add
jno
dec
cmp
leave
jno
pop
cmp
retf
jb
or
push
mov
gs
sub
dec
or
popa
xchg
add
fs
xor
add
test
fwait
push
retf
rol
inc
dec
xor
aad
jo
popa
jecxz
fs
and
into
push
mov
or
add
jae
xor
jecxz
cmp
inc
pop
adc
popa
je
sbb
sbb
icebp
(bad)
aam
outs
mov
mov
mov
push
and
dec
lds
xor
imul
sbb
test
js
add
dec
jg
pop
and
cmp
and
pusha
gs
and
scas
lea
or
imul
push
sbb
popa
or
push
and
dec
imul
cmps
add
lods
adc
jmp
pop
jno
les
jo
(bad)
add
sub
addr16
jp
ret
fild
push
sbb
jge
(bad)
and
jnp
mov
cmps
mov
mov
pop
add
dec
iret
jns
cdq
mov
gs
jb
adc
js
rol
mov
mov
add
call
pop
dec
xor
pop
popa
push
je
or
pop
mov
arpl
inc
pop
sbb
invd
cmp
add
outs
pop
and
mov
xchg
pop
es
jne
push
pop
jecxz
xchg
mov
int
pop
mov
push
scas
adc
push
jae
scas
inc
pop
pop
loope
gs
rol
bound
sbb
pop
leave
aas
int
js
inc
arpl
and
loopne
das
inc
fisttp
popf
jecxz
pop
sub
cmp
mov
idiv
sub
or
sub
xchg
fs
mov
add
mov
sbb
jns
or
inc
cmp
(bad)
pause
mov
xor
add
push
sbb
rol
arpl
iret
(bad)
cmp
jnp
xchg
test
addr16
cmp
mov
mov
repz
in
icebp
jbe
pop
dec
sub
pop
mov
cmovno
pop
push
pshufw
imul
dec
aas
je
arpl
xchg
loopne
dec
mov
jmp
dec
out
sub
push
pop
cdq
jg
inc
jo
sbb
jno
es
add
add
add
fstp
mov
jmp
nop
xor
ror
add
mov
hlt
mov
pop
iret
jb
retf
mov
fld
and
jno
add
cwde
and
pop
dec
sub
dec
aaa
ins
popa
jge
dec
es
lods
xchg
addr16
mov
js
dec
inc
sub
rcl
data16
cwde
xor
inc
dec
mov
jnp
add
jp
push
ins
or
loope
cmp
addr16
xchg
ja
dec
femms
cmps
repz
inc
test
push
stos
pop
pop
xor
adc
pop
jmp
inc
lds
jb
mov
pusha
xchg
add
aas
in
movs
out
in
and
add
gs
rcl
js
cmp
or
scas
sbb
lahf
cli
shl
mov
popa
add
and
xlat
aas
xor
mov
push
push
sbb
in
jecxz
mov
fwait
out
outs
add
cli
mov
jb
daa
ja
fsubrp
aad
inc
and
or
inc
mov
lds
ja
lock
je
xor
lods
dec
sar
pop
pusha
shr
xor
xor
mov
ja
mov
or
push
mov
pop
push
das
call
push
movlps
pop
and
mov
xchg
sub
jo
fnstcw
sbb
(bad)
jne
imul
jno
sbb
lock
jae
cmp
and
cmp
xor
retf
rcl
in
mov
cmp
fisubr
xchg
push
movlps
imul
adc
imul
xchg
push
nop
sar
xchg
and
packsswb
jp
mov
aad
sbb
add
sti
js
cmp
sbb
jnp
ins
mov
inc
add
push
sbb
inc
out
push
and
aad
sbb
arpl
xchg
adc
popa
out
icebp
fidivr
daa
ins
sbb
pusha
mov
popf
mov
sar
int3
add
mov
mov
push
fstp
shl
push
imul
jne
aad
inc
pop
jge
adc
fstp
popa
adc
imul
mul
inc
sub
adc
fild
and
xchg
adc
mov
and
movs
mov
jno
adc
sbb
cmps
push
sub
pusha
nop
add
adc
neg
imul
test
xchg
xlat
test
cmp
das
dec
cmp
xchg
outs
add
push
dec
and
cmp
frstor
lods
add
sbb
push
or
pop
aas
push
enter
xor
(bad)
sbb
cmp
aas
mov
call
xchg
add
cmp
aaa
mov
pop
fwait
cmp
pop
add
add
add
add
(bad)
push
test
aaa
push
jb
push
arpl
adc
push
imul
add
or
add
add
(bad)
push
push
(bad)
fstp
or
imul
ja
add
push
push
jns
gs
sbb
push
ins
(bad)
jmp
mov
pop
popa
je
inc
add
movs
imul
push
adc
imul
push
or
outs
je
aaa
out
add
outs
jb
and
dec
xor
out
jbe
jae
or
dec
popa
je
add
popf
push
out
add
add
push
je
ins
sbb
inc
ins
popa
jae
ins
xor
jae
jge
out
jae
or
inc
push
popa
jb
popa
outs
cmp
or
aas
inc
test
push
xchg
add
jae
mov
imul
or
in
sti
mov
inc
outs
jb
push
mov
jb
outs
je
test
outs
idiv
ja
enter
jo
outs
ins
add
sub
popa
jo
imul
adc
inc
je
adc
(bad)
fistp
inc
ins
imul
pop
push
je
jnp
mov
push
loopne
push
dec
add
es
cmp
jb
mov
ins
mov
dec
dec
rcr
xlat
movs
or
or
pop
jae
xor
jo
add
fs
outs
jne
mov
dec
ins
addr16
popa
ins
outs
adc
jne
lahf
es
inc
ins
adc
push
ins
or
sbb
push
push
ins
dec
bound
sbb
push
addr16
aas
fisttp
shl
jb
dec
outs
outs
add
mov
sub
xor
imul
sbb
out
push
loopne
mov
adc
add
add
pop
fst
fist
xchg
push
imul
mov
pusha
add
fbld
into
movs
dec
jne
je
push
ror
add
mov
mov
pop
xor
add
xor
inc
dec
addr16
add
gs
jne
out
stos
mov
add
add
add
push
loop
stos
mov
add
pop
inc
popa
jo
(bad)
mov
inc
jne
dec
jne
(bad)
(bad)
(bad)
jmp
and
jb
jae
inc
outs
ins
outs
jb
or
inc
je
inc
popa
arpl
inc
outs
outs
je
(bad)
(bad)
jmp
inc
push
je
cmove
inc
push
dec
push
pop
inc
dec
inc
push
push
inc
push
or
xor
ins
enter
js
or
mov
sti
sub
add
or
push
call
xor
or
call
icebp
push
dec
ins
fs
jb
gs
or
clc
push
push
outs
jae
test
push
jo
push
arpl
outs
inc
gs
dec
outs
inc
adc
adc
fld
jb
popa
je
pop
pop
idiv
jg
jb
push
or
ins
jae
gs
outs
arpl
pusha
or
popf
or
and
or
cmp
aas
mov
add
outs
js
adc
mov
push
sbb
(bad)
push
xor
(bad)
gs
xor
sub
gs
pop
or
mov
jg
stc
dec
jnp
push
adc
push
sbb
(bad)
ffreep
call
jae
pop
sbb
xor
and
test
arpl
jns
mov
pop
adc
cmp
dec
outs
jg
push
jo
std
nop
arpl
js
inc
add
(bad)
out
aas
jo
stc
pop
inc
dec
sbb
add
or
jb
push
sub
add
add
mov
push
int3
add
or
add
clc
add
or
ins
inc
adc
ss
pop
push
int3
mov
mov
sbb
add
sbb
das
sbb
and
mov
out
mov
adc
imul
add
adc
push
or
(bad)
cmp
cmc
outs
ins
ins
inc
jl
or
push
gs
imul
push
in
push
pop
or
inc
cwde
hlt
enter
add
inc
add
je
add
and
in
not
add
mul
adc
mov
jbe
arpl
cmp
push
add
loopne
int
inc
ins
gs
add
sbb
push
ins
jae
gs
popa
ins
mov
add
or
dec
outs
pop
inc
ins
and
sti
ins
outs
arpl
add
pushf
std
popa
outs
fs
gs
inc
inc
ins
jae
jb
jo
inc
add
push
add
data16
or
(bad)
fistp
outs
inc
js
cmp
imul
ins
gs
bound
cld
aaa
fld
add
jb
jne
ins
mov
sub
mov
imul
jae
push
gs
jne
arpl
bound
adc
outs
sub
in
push
cmp
gs
mov
pop
xchg
or
outs
je
addr16
add
inc
fsubr
out
imul
dec
data16
add
gs
or
gs
mov
and
ins
inc
imul
xchg
pop
inc
fs
popa
jb
dec
sbb
lock
jbe
inc
adc
arpl
sti
outs
je
add
imul
ins
outs
cmp
clc
bound
push
outs
outs
imul
gs
adc
adc
fadd
jb
xlat
and
xor
outs
fs
je
ins
add
inc
gs
gs
adc
popa
ret
cs
inc
fs
cmp
jb
imul
clc
out
aaa
gs
imul
push
das
pushf
loop
aaa
and
gs
pushf
frstor
inc
in
cs
inc
imul
or
xor
je
or
gs
js
(bad)
fs
pusha
push
je
aad
je
jb
arpl
data16
bound
jne
and
data16
adc
int
jns
push
imul
dec
popa
jae
sti
push
inc
jne
ins
push
popa
je
cmp
dec
xor
je
fbld
adc
inc
jb
jbe
mov
aas
inc
imul
arpl
icebp
inc
inc
cmp
gs
sub
test
sub
jle
jnp
mov
push
mov
pop
inc
inc
push
add
push
push
dec
and
push
sahf
adc
fs
outs
arpl
shl
ror
gs
inc
js
das
(bad)
cmp
dec
or
outs
jnp
pop
popa
movs
mov
sub
test
push
sbb
adc
dec
(bad)
ins
(bad)
mov
ins
arpl
and
paddsb
sbb
adc
inc
pop
neg
icebp
outs
jne
inc
sub
popa
jb
ins
inc
(bad)
fwait
xchg
xchg
pop
lods
dec
and
mov
pusha
mov
pop
add
or
mov
test
clc
xchg
inc
outs
jo
sub
jo
jb
xchg
mov
cwde
loop
add
and
shr
sbb
mov
push
shl
add
inc
and
mov
mov
or
rcl
add
jb
xlat
outs
cmp
gs
push
retf
or
adc
mov
adc
push
sub
ins
movs
imul
gs
xchg
cdq
mov
je
or
imul
add
sbb
pop
or
or
in
mov
add
in
sbb
popa
and
adc
mov
xor
or
add
jbe
rol
test
mov
add
or
test
or
sahf
cmp
aam
xor
test
and
xor
cmp
xor
xchg
je
ja
jo
cwde
adc
imul
adc
inc
push
cmp
ret
sbb
jp
mov
jge
ret
add
add
inc
sub
cld
enter
loope
call
jo
outs
dec
gs
cmp
hlt
in
sldt
ss
pop
and
std
jg
inc
push
inc
dec
popa
outs
popa
addr16
inc
aas
call
jb
out
loop
pop
push
add
add
dec
ins
and
pop
into
dec
arpl
fst
ret
sub
push
sbb
mov
jb
addr16
pop
pusha
pop
(bad)
aaa
adc
push
pop
sbb
outs
jp
sbb
outs
jb
pop
mov
sahf
dec
outs
jbe
sbb
lods
sub
sub
xor
adc
pop
adc
fstp
inc
imul
sar
cmp
ja
cdq
imul
jmp
pop
fwait
or
outs
int
push
gs
ror
xor
adc
push
add
push
dec
cmpxchg
gs
outs
jns
popa
ret
daa
xor
nop
cmp
je
mov
outs
jmp
punpckhbw
add
jb
mov
dec
jb
aad
mov
cs
div
jb
adc
pop
push
jmp
das
mov
dec
push
xor
movs
out
hlt
fsub
inc
dec
inc
xor
dec
and
fs
sti
inc
jb
jae
push
inc
imul
stos
sbb
push
cmp
push
mov
in
push
mov
push
mov
inc
inc
mov
mov
popf
jae
outs
jb
or
push
imul
out
in
ja
sub
out
inc
and
outs
fmul
jae
adc
outs
xor
xchg
pop
push
rcl
(bad)
adc
addr16
jp
dec
gs
arpl
mov
inc
js
jmp
xor
cmp
rcr
push
push
je
arpl
data16
or
and
fld
sub
push
inc
gs
jle
mov
imul
dec
inc
inc
sub
in
pop
or
fisttp
inc
cdq
sbb
adc
icebp
imul
push
rol
jmp
ins
popa
jo
pop
aaa
ins
jne
mov
into
push
sub
jecxz
jnp
add
ins
imul
outs
dec
outs
mov
ss
push
adc
push
dec
popa
ins
stos
popa
inc
clc
data16
outs
sub
ins
data16
cmp
pop
hlt
xchg
jb
pop
pushf
and
fcomip
mov
jo
je
xchg
add
aam
ret
xchg
and
xor
jo
push
add
sar
jmp
gs
jb
popa
jns
je
dec
ss
mov
aaa
push
inc
mov
pusha
adc
les
pop
outs
mov
outs
sbb
mov
mov
xchg
or
gs
cmp
int3
ret
in
add
fs
sbb
jns
and
pop
mov
adc
adc
push
xchg
lds
ficom
test
loope
(bad)
iret
bound
inc
jb
ins
retf
add
scas
jg
std
pusha
in
mov
fs
xchg
retf
int
or
and
ret
cmp
pop
jae
or
popa
outs
jae
mov
inc
adc
inc
arpl
cmp
add
jo
jo
xor
pop
je
ins
push
popa
inc
jnp
sub
mov
and
pop
iret
adc
mov
dec
ja
gs
and
int
push
dec
push
cmp
in
cwde
scas
(bad)
adc
push
int3
xor
rdpmc
xor
ins
push
pop
pushf
add
dec
outs
outs
addr16
cmps
es
sbb
push
popa
fdivr
fisubr
sbb
xchg
fwait
jne
xor
dec
fnstenv
xor
sbb
mov
out
gs
mov
shl
arpl
gs
add
mov
xchg
test
rcl
cs
stos
inc
arpl
cld
or
retf
inc
outs
fs
ins
arpl
ins
ficom
shl
push
outs
fsub
push
sbb
or
call
inc
adc
xor
inc
jne
imul
jo
add
add
fcmovne
sbb
inc
das
popa
jae
push
gs
ja
add
mov
cwde
lock
je
outs
aas
pop
je
jne
je
in
fnsave
or
push
gs
iret
jle
or
gs
dec
gs
shr
push
out
icebp
inc
push
dec
jae
in
push
cwde
and
xor
push
cmp
jbe
and
aas
dec
popa
jo
and
inc
jmp
pusha
xchg
dec
cmp
outs
or
push
lea
adc
inc
mov
out
out
add
mov
js
imul
outs
ins
gs
dec
jae
xchg
or
jnp
adc
in
pusha
daa
pop
and
fsubrp
mov
packsswb
jo
adc
jo
arpl
out
add
cmp
imul
rcr
ins
cmp
popa
shl
adc
mov
mov
jae
jb
outs
jne
cmp
add
fisubr
setno
xor
jb
ins
std
sbb
fwait
dec
cmp
cmp
or
xor
ret
mov
jecxz
push
outs
xchg
cwde
pop
xchg
or
sub
movs
adc
push
ret
mov
call
and
jecxz
or
(bad)
retf
jae
or
retf
movd
cs
xor
pushf
push
in
xchg
dec
ret
or
pop
xor
pop
push
pop
sbb
and
int3
(bad)
sbb
xor
dec
pop
adc
pop
adc
and
bound
inc
push
popa
les
je
je
adc
push
int
xchg
sub
mov
push
adc
xchg
add
nop
mov
loope
pop
mov
or
imul
ror
inc
or
data16
cld
push
or
pop
push
push
bound
pop
lods
(bad)
mov
mov
push
popa
jo
aad
mul
adc
or
cmp
fwait
sbb
push
xor
pop
fld
jno
popa
ins
or
ins
and
ret
adc
es
loop
fs
popa
imul
or
push
xchg
adc
shr
push
adc
and
fsub
lock
or
adc
xor
cmp
fadd
adc
addr16
imul
movs
push
outs
jns
int
mov
adc
xchg
mov
daa
data16
les
fdiv
dec
inc
dec
push
adc
push
cmp
int3
push
ss
inc
adc
je
add
push
repnz
arpl
mov
adc
test
or
aaa
mov
xor
mov
add
mov
rol
outs
retf
push
inc
loop
pop
inc
fs
jae
shl
cdq
bound
adc
je
or
dec
xor
xchg
pusha
cwde
sbb
adc
ja
inc
rcr
add
sub
jo
push
push
gs
xor
jmp
dec
pop
gs
rcr
cmp
inc
add
dec
add
add
pop
inc
sub
add
add
or
dec
fwait
xchg
mov
push
or
pop
add
clc
push
adc
add
dec
xor
into
mov
add
push
adc
adc
cmp
jae
xor
adc
push
test
repz
add
nop
add
aaa
in
daa
int3
cmp
or
loopne
add
popa
adc
sti
test
sbb
out
fst
pusha
or
add
push
inc
iret
jmp
jnp
jmp
inc
and
add
inc
inc
cmp
mov
popa
into
jne
dec
xor
add
rol
out
fcom
push
add
pop
pop
cmp
pop
adc
shr
rcr
iret
repz
add
rcr
dec
cs
jp
test
rol
and
ds
shr
dec
add
xchg
add
dec
push
cs
es
jb
ins
outs
arpl
dec
push
add
jnp
int3
cdq
mov
es
and
sbb
out
mov
daa
add
add
add
lock
push
add
dec
add
inc
add
pusha
mov
lea
mov
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
nop
jecxz
add
pusha
inc
add
adc
add
add
add
or
add
add
push
add
add
add
mov
add
rol
add
mov
add
add
add
or
add
lock
add
nop
or
or
add
lock
add
add
xchg
adc
add
add
add
pop
add
add
add
add
add
add
add
add
call
add
add
add
add
add
pusha
add
add
add
mov
add
xchg
adc
add
add
add
add
add
add
mov
add
cmp
add
add
xchg
adc
add
add
add
add
add
add
fadd
add
ins
pop
push
add
add
xchg
adc
add
add
add
add
add
add
add
add
mov
add
add
adc
add
add
add
add
add
add
sub
add
aam
push
add
add
xchg
adc
add
add
add
add
add
add
push
add
add
pusha
push
add
add
xchg
adc
add
add
add
add
add
add
js
add
cmp
push
add
add
xchg
adc
add
add
add
add
add
add
mov
bound
add
add
xchg
adc
add
add
or
add
xor
add
inc
or
add
or
push
or
adc
add
jl
add
mov
add
cwde
or
xor
add
pop
add
xor
add
test
add
xchg
adc
add
add
add
add
add
add
xor
add
movs
arpl
add
add
add
adc
add
add
add
add
add
add
pop
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
push
add
add
add
adc
add
add
add
add
add
add
test
add
sub
add
add
add
adc
add
add
add
add
add
add
rol
add
clc
push
add
add
add
adc
add
add
add
add
add
add
clc
add
add
ins
push
add
add
add
adc
add
add
add
add
add
add
and
add
cwde
outs
push
add
add
add
adc
add
add
add
add
add
add
dec
add
add
push
add
add
add
adc
add
add
add
add
add
add
jo
add
cmp
add
add
add
adc
add
add
add
add
add
add
cwde
add
add
je
add
add
add
adc
add
add
add
add
add
add
rol
add
jne
add
add
add
adc
add
add
add
add
add
add
add
add
add
sub
add
add
push
add
add
add
add
xchg
adc
add
add
add
add
add
add
sbb
add
push
add
add
add
adc
add
add
add
add
add
add
inc
add
add
push
add
add
xchg
adc
add
add
add
add
add
add
push
add
add
add
add
adc
add
add
add
add
add
add
nop
add
add
add
add
add
add
adc
add
add
add
add
fmul
add
add
add
xchg
adc
add
add
add
add
add
add
rol
add
mov
add
add
xchg
adc
add
add
add
adc
icebp
sldt
jo
add
cwde
add
add
rol
add
add
add
adc
add
cmp
add
pusha
push
add
mov
add
mov
add
fadd
add
add
add
sub
add
push
pop
add
js
add
mov
adc
add
pop
add
xchg
adc
add
add
add
add
add
add
mov
push
add
add
add
adc
add
add
add
add
add
add
mov
add
mov
add
add
add
adc
add
add
add
add
add
add
fadd
push
add
add
xchg
adc
add
add
add
add
add
add
add
add
js
push
add
add
add
adc
add
add
add
add
add
add
sub
add
ins
nop
push
add
add
add
adc
add
add
add
add
add
add
push
push
add
push
add
add
adc
add
add
add
add
add
add
js
add
pusha
xchg
push
add
add
xchg
adc
add
add
add
add
add
add
mov
xchg
push
add
add
add
adc
add
add
add
add
add
add
enter
jo
push
add
add
adc
add
add
add
add
add
add
lock
add
fcomp
add
xchg
adc
add
add
add
add
add
add
sbb
add
les
add
xchg
adc
add
add
add
add
add
add
inc
pop
add
clc
mov
add
xchg
adc
add
add
add
add
add
add
push
mov
add
xchg
adc
add
add
add
add
add
add
nop
pop
add
cwde
movs
push
add
add
add
adc
add
add
add
add
add
add
mov
test
add
add
xchg
adc
add
add
add
add
add
add
loopne
add
aam
push
add
add
xchg
adc
add
add
add
add
lock
sbb
add
inc
or
adc
add
add
add
xchg
adc
add
add
add
add
add
add
xor
add
mov
add
xchg
adc
add
add
add
add
add
add
pop
or
add
add
add
adc
add
add
add
add
add
add
or
add
push
add
add
add
adc
add
add
add
pop
add
jg
add
or
cmp
add
add
add
sub
add
push
or
cmp
add
js
add
mov
jg
add
or
add
add
xchg
adc
add
add
add
add
add
add
lock
add
add
add
xchg
adc
add
add
add
add
add
add
sbb
add
pop
mov
add
add
xchg
adc
add
add
add
add
add
add
inc
or
add
add
add
xchg
adc
add
add
add
add
add
add
push
mov
add
add
xchg
adc
add
add
add
add
add
add
nop
or
add
add
xchg
adc
add
add
add
add
add
add
mov
mov
add
add
xchg
adc
add
add
add
add
add
add
loopne
add
mov
add
add
adc
add
add
add
add
and
add
add
add
xchg
adc
add
add
add
add
add
add
and
add
ins
or
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
push
add
add
push
add
xor
or
dec
add
dec
add
dec
add
dec
add
add
shl
sub
add
adc
add
and
add
add
add
add
add
rol
add
(bad)
inc
add
inc
push
or
add
inc
add
add
add
stos
add
adc
pop
add
add
add
jno
add
rol
add
add
add
add
(bad)
jmp
(bad)
(bad)
cli
stos
stos
stos
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
cli
stos
xor
xor
scas
std
cli
mov
aas
jmp
xor
jmp
mov
rcr
repnz
jmp
sar
fild
pandn
cmp
mov
repz
mov
out
repz
push
xor
xor
jecxz
cld
(bad)
dec
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
psubb
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
neg
imul
ja
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
int3
(bad)
inc
cdq
(bad)
inc
data16
inc
xor
inc
add
inc
dec
inc
int3
int3
inc
cdq
int3
inc
data16
inc
xor
inc
add
inc
call
inc
cdq
cdq
inc
cwd
inc
xor
inc
jmp
add
inc
cdq
inc
data16
xor
add
inc
push
inc
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
int3
int3
add
int3
int3
add
int3
int3
add
int3
int3
add
int3
int3
add
cdq
int3
add
cdq
int3
add
cdq
int3
add
cdq
int3
add
cdq
int3
add
data16
add
data16
add
data16
add
data16
add
data16
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
call
add
call
add
call
add
int3
cdq
add
int3
cdq
add
int3
cdq
add
int3
cdq
add
cdq
cdq
add
cdq
cdq
add
cdq
cdq
add
cdq
cdq
add
cdq
cdq
add
cwd
add
cwd
add
cwd
add
cwd
add
cwd
add
xor
add
xor
add
xor
add
add
add
cdq
add
add
add
jmp
int3
jmp
cdq
jmp
jmp
xor
data16
jmp
dec
data16
int3
data16
int3
data16
int3
data16
int3
data16
cdq
data16
cdq
data16
cdq
data16
cdq
data16
cdq
data16
data16
data16
data16
data16
data16
xor
int3
xor
cdq
xor
xor
xor
data16
xor
inc
data16
add
cdq
add
data16
xor
data16
add
(bad)
push
add
push
add
push
add
push
add
push
add
int3
xor
int3
int3
xor
cdq
int3
xor
data16
xor
xor
xor
add
xor
call
xor
cdq
cdq
xor
cwd
xor
xor
xor
jmp
add
xor
cdq
xor
data16
xor
add
xor
push
xor
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
int3
add
int3
int3
add
cdq
int3
add
data16
add
xor
add
add
add
call
add
cdq
cdq
add
cwd
add
xor
add
jmp
add
data16
cdq
data16
data16
xor
add
data16
push
add
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
out
out
add
fstp
add
stos
stos
add
ja
add
push
add
add
and
add
adc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fcmovu
fcmovu
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fcomp
fcomp
fcmovnu
fcmovnu
(bad)
(bad)
stc
(bad)
fstp
fcmovu
fcomp
fcmovnu
fcmovnu
fcomp
(bad)
(bad)
(bad)
fstp
fcmovnu
fimul
add
fcomp
fcomp
(bad)
(bad)
(bad)
fstp
fcmovu
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fcmovu
push
add
(bad)
(bad)
call
fstp
fcmovu
push
add
add
(bad)
stc
(bad)
fstp
fcmovu
cmp
add
push
add
(bad)
cli
(bad)
(bad)
fcmovnu
fstp
fidivr
push
add
(bad)
(bad)
(bad)
fcmovu
(bad)
fstp
fcmovu
fcmovu
adc
(bad)
(bad)
fcmovu
(bad)
(bad)
(bad)
fcmovnu
fcmovu
(bad)
(bad)
fcmovu
(bad)
(bad)
cld
(bad)
clc
(bad)
clc
(bad)
(bad)
(bad)
(bad)
clc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
psubb
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
neg
not
push
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
inc
push
or
add
inc
add
add
add
stos
add
adc
pop
add
add
add
jno
add
rol
add
add
add
add
cli
stos
scas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
stos
stos
(bad)
(bad)
out
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
stos
lods
ror
(bad)
(bad)
out
(bad)
jmp
jmp
(bad)
(bad)
(bad)
(bad)
cli
stos
mov
cli
out
(bad)
out
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
stos
scas
iret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
stos
stos
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
stos
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
stos
stos
stos
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
stos
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
stos
xor
aas
(bad)
(bad)
(bad)
(bad)
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
out
(bad)
(bad)
(bad)
(bad)
dec
mov
aas
(bad)
(bad)
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
aas
(bad)
(bad)
(bad)
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
stos
scas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
stos
xor
cmp
outs
out
(bad)
(bad)
(bad)
jmp
cmp
(bad)
push
outs
(bad)
(bad)
(bad)
(bad)
fild
xor
(bad)
push
icebp
(bad)
(bad)
(bad)
(bad)
cli
mov
xor
push
call
(bad)
(bad)
(bad)
(bad)
cli
mov
aas
(bad)
push
call
(bad)
(bad)
(bad)
(bad)
cli
mov
das
(bad)
out
aas
lahf
(bad)
(bad)
(bad)
(bad)
(bad)
cli
mov
aas
(bad)
(bad)
stc
lahf
(bad)
(bad)
(bad)
(bad)
jmp
add
(bad)
(bad)
stc
(bad)
(bad)
(bad)
(bad)
(bad)
cli
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
xor
xor
xor
ds
(bad)
out
(bad)
(bad)
(bad)
(bad)
push
aas
push
xor
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
dec
(bad)
cld
(bad)
ds
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cmp
add
jmp
add
fistp
add
add
(bad)
clc
add
inc
aas
mov
inc
aas
(bad)
inc
aas
out
inc
aas
(bad)
inc
pandn
add
idiv
add
(bad)
add
inc
or
cmp
add
add
add
cld
add
cld
add
pop
clc
add
(bad)
add
pop
lock
aas
lock
icebp
ror
std
(bad)
mov
add
add
add
add
add
add
add
or
add
add
add
(bad)
(bad)
inc
int3
(bad)
inc
cdq
(bad)
inc
data16
inc
xor
inc
add
inc
dec
inc
int3
int3
inc
cdq
int3
inc
data16
inc
xor
inc
add
inc
call
inc
cdq
cdq
inc
cwd
inc
xor
inc
jmp
add
inc
cdq
inc
data16
xor
add
inc
push
inc
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
int3
int3
add
int3
int3
add
int3
int3
add
int3
int3
add
int3
int3
add
cdq
int3
add
cdq
int3
add
cdq
int3
add
cdq
int3
add
cdq
int3
add
data16
add
data16
add
data16
add
data16
add
data16
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
call
add
call
add
call
add
int3
cdq
add
int3
cdq
add
int3
cdq
add
int3
cdq
add
cdq
cdq
add
cdq
cdq
add
cdq
cdq
add
cdq
cdq
add
cdq
cdq
add
cwd
add
cwd
add
cwd
add
cwd
add
cwd
add
xor
add
xor
add
xor
add
add
add
cdq
add
add
add
jmp
int3
jmp
cdq
jmp
jmp
xor
data16
jmp
dec
data16
int3
data16
int3
data16
int3
data16
int3
data16
cdq
data16
cdq
data16
cdq
data16
cdq
data16
cdq
data16
data16
data16
data16
data16
data16
xor
int3
xor
cdq
xor
xor
xor
data16
xor
inc
data16
add
cdq
add
data16
xor
data16
add
(bad)
push
add
push
add
push
add
push
add
push
add
int3
xor
int3
int3
xor
cdq
int3
xor
data16
xor
xor
xor
add
xor
call
xor
cdq
cdq
xor
cwd
xor
xor
xor
jmp
add
xor
cdq
xor
data16
xor
add
xor
push
xor
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
int3
add
int3
int3
add
cdq
int3
add
data16
add
xor
add
add
add
call
add
cdq
cdq
add
cwd
add
xor
add
jmp
add
data16
cdq
data16
data16
xor
add
data16
push
add
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
out
out
add
fstp
add
stos
stos
add
ja
add
push
add
add
and
add
adc
add
add
add
(bad)
(bad)
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fdivr
(bad)
(bad)
cld
sti
sti
stc
stc
stc
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
frstor
fdivr
(bad)
(bad)
(bad)
sti
fstp
(bad)
test
(bad)
stc
stc
stc
(bad)
(bad)
(bad)
(bad)
(bad)
sti
(bad)
(bad)
(bad)
(bad)
(bad)
fsub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
fstp
fstp
(bad)
(bad)
fld
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fnstsw
clc
(bad)
(bad)
(bad)
(bad)
fstp
cld
(bad)
(bad)
(bad)
cld
(bad)
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
cmp
fstp
fstp
fstp
(bad)
fstp
(bad)
clc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
fstp
fcmovu
(bad)
clc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
(bad)
fstp
fcmovu
fcmovu
fs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
(bad)
fstp
fstp
fcmovu
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
(bad)
fcmovu
fcmovu
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
fstp
fcmovnu
(bad)
fcmovu
(bad)
fstp
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
(bad)
fstp
fcmovu
(bad)
(bad)
fstp
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
fstp
fcmovu
(bad)
(bad)
(bad)
(bad)
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fcmovu
fcmovu
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fcomp
fcomp
fcmovnu
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
sar
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
(bad)
fstp
fcmovu
fcomp
fcmovnu
fcmovnu
fcomp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
dec
(bad)
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fcmovnu
fimul
add
fcomp
fcomp
(bad)
(bad)
(bad)
(bad)
call
(bad)
dec
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fcmovu
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
xlat
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fcmovu
push
add
(bad)
(bad)
call
call
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fcmovu
push
add
add
(bad)
(bad)
(bad)
(bad)
jmp
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fidivr
add
pop
push
add
(bad)
cli
(bad)
(bad)
(bad)
sti
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fcmovnu
fcmovnu
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
(bad)
fstp
fcmovu
fcmovu
adc
(bad)
(bad)
(bad)
(bad)
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcmovnu
(bad)
(bad)
(bad)
(bad)
fcmovnu
fcmovu
(bad)
(bad)
fcmovu
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sti
(bad)
(bad)
(bad)
(bad)
clc
(bad)
(bad)
(bad)
(bad)
clc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cmp
add
jmp
add
fistp
add
add
(bad)
clc
add
inc
aas
mov
inc
aas
(bad)
inc
aas
out
inc
aas
(bad)
inc
pandn
add
idiv
add
(bad)
add
inc
or
cmp
add
add
add
cld
add
cld
add
pop
clc
add
(bad)
add
pop
lock
aas
lock
icebp
ror
std
(bad)
mov
add
add
add
adc
adc
add
add
sub
add
add
adc
add
add
or
push
add
and
add
add
call
add
and
add
add
add
add
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
add
add
push
pop
add
add
add
push
pop
add
add
add
push
pop
add
push
pop
add
sysret
add
sysret
add
sysret
add
sysret
add
add
add
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
ins
add
ins
arpl
xor
fs
ins
add
imul
ins
add
gs
jne
xor
cs
ins
add
gs
xor
fs
ins
add
jb
imul
add
dec
outs
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
ins
ins
outs
arpl
add
jb
jne
ins
inc
jb
add
add
imul
jae
add
push
gs
ins
outs
jae
dec
gs
add
dec
ins
popa
addr16
imul
add
add
jbe
inc
inc
add
push
popa
jb
popa
outs
je
outs
jo
add
add
je
inc
add
add
jb
jne
jb
push
popa
ins
jne
inc
ja
ja
popa
arpl
jb
outs
arpl
iret
adc
mov
add
add
add
add
dec
add
add
add
add
add
adc
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
movs
rol
pusha
or
add
push
mov
add
adc
add
add
push
add
ret
add
add
bound
push
jno
add
add
push
add
push
add
adc
add
adc
add
cmp
add
(bad)
dec
add
dec
add
dec
add
inc
add
add
add
inc
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
adc
add
adc
add
add
add
add
add
add
pop
push
add
add
add
pop
push
add
add
add
pop
push
add
or
add
pushw
add
or
add
adc
add
add
add
or
add
add
add
add
add
add
jle
add
add
add
jle
add
add
add
jle
add
add
add
jle
add
add
add
jle
add
add
add
jle
add
add
add
jle
add
add
add
dec
or
add
add
add
add
add
add
dec
or
add
add
add
add
add
add
dec
or
add
add
add
add
add
add
dec
or
add
add
retf
or
add
xor
add
dec
add
add
add
and
add
inc
add
add
add
dec
or
add
add
add
add
jle
add
add
add
dec
or
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
jle
add
jle
add
add
add
xchg
or
add
add
add
add
add
add
sub
add
add
add
sub
add
add
add
dec
or
add
add
add
add
add
add
add
add
inc
add
add
add
jle
add
add
add
dec
or
add
add
dec
or
add
add
add
add
add
sub
add
add
add
inc
add
add
add
inc
add
sub
add
add
add
jle
add
add
add
jb
add
or
add
shl
mov
xor
mov
add
add
pop
push
add
add
add
ror
add
cmp
add
sub
add
dec
or
add
add
add
add
add
or
add
add
add
add
add
add
adc
add
or
add
push
add
add
add
add
add
adc
add
inc
add
add
add
sub
add
and
add
jle
add
dec
add
add
push
add
add
add
add
add
add
add
add
sub
add
sub
add
and
add
jle
add
add
add
jle
add
add
add
jle
add
add
add
jb
add
add
add
jb
add
and
add
add
add
add
add
add
jle
add
add
add
jle
add
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
les
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
or
add
adc
adc
or
pop
mov
xchg
jns
mov
pop
aam
imul
jle
ins
and
add
imul
imul
add
add
jns
add
xor
sub
dec
dec
push
or
mov
add
ins
xor
cld
jle
push
and
bound
dec
ret
pop
test
xlat
(bad)
pop
or
sbb
inc
addr16
xchg
xor
pop
cdq
and
jb
push
call
pop
aam
imul
pop
sub
(bad)
int3
xchg
xchg
dec
mov
gs
add
sub
ins
xor
test
add
cmp
or
push
mov
lahf
pop
sbb
push
or
add
push
fcomp
or
xor
xor
xlat
add
xor
xor
jae
sbb
push
mov
gs
xor
xor
push
cmp
xor
sub
jbe
imul
(bad)
or
dec
or
xor
xor
cmp
or
push
mov
dec
push
pop
sub
jle
jge
gs
add
repz
jge
gs
adc
imul
movq
bound
dec
jnp
add
jns
jbe
dec
fisttp
adc
ret
jbe
ins
xor
sub
and
xlat
add
xor
xor
jae
sbb
pop
mov
imul
pop
lea
sbb
push
add
jns
jbe
pop
push
push
adc
add
jle
dec
imul
sar
jbe
jbe
imul
push
xor
push
push
push
sub
pop
xchg
arpl
push
xor
xor
xor
jae
test
lea
or
push
pop
iret
push
jae
mul
dec
in
dec
test
and
(bad)
jae
sbb
bound
dec
aaa
push
pop
(bad)
call
push
add
dec
cmp
push
test
pop
adc
jbe
push
test
push
pop
dec
push
push
or
lea
(bad)
gs
or
dec
sub
push
xor
call
push
bound
nop
jae
sbb
jne
jbe
gs
xchg
jae
das
in
pop
xchg
test
(bad)
jmp
push
push
pop
or
(bad)
pop
lea
mov
gs
pop
dec
mov
mov
aam
pop
lea
clc
jbe
jl
dec
or
aam
imul
dec
(bad)
xchg
(bad)
push
sbb
mov
and
inc
push
pop
lea
xchg
or
(bad)
iret
imul
aam
pop
lea
mul
xchg
clc
jbe
push
push
push
or
xchg
pop
cli
push
cmp
(bad)
jmp
jne
add
pop
add
dec
fadd
add
add
add
imul
imul
add
add
jns
add
xor
xor
sub
dec
dec
push
or
gs
jbe
ins
xor
int
jne
sbb
mov
xchg
and
cwde
nop
push
(bad)
rcr
gs
jae
xor
(bad)
jmp
bound
xchg
pop
jb
and
add
sub
add
push
das
and
bound
gs
push
gs
push
outs
data16
add
add
add
push
or
add
add
or
add
or
add
add
and
add
xor
add
scas
or
add
adc
add
adc
add
adc
add
adc
add
adc
add
sar
test
stos
mov
add
add
push
push
add
push
or
adc
push
xor
add
adc
add
push
push
push
inc
dec
adc
add
sub
add
push
inc
sub
inc
dec
sbb
dec
dec
add
dec
dec
add
push
dec
add
pop
dec
add
jo
add
add
das
adc
add
push
xor
or
sbb
dec
dec
add
dec
dec
add
push
dec
add
pop
or
jo
add
imul
push
push
xor
or
sbb
dec
dec
add
dec
dec
add
push
dec
add
pop
or
outs
sub
jo
add
imul
add
add
add
add
push
or
add
or
add
or
add
or
add
add
or
add
adc
add
adc
add
adc
add
adc
add
test
add
test
add
out
out
out
out
out
out
out
out
in
add
add
add
lldt
fs
add
add
adc
add
add
add
xor
popa
and
addr16
add
or
push
add
ret
add
add
add
add
jmp
push
in
dec
dec
bound
arpl
dec
inc
push
push
ins
inc
ja
jle
jle
jbe
dec
mov
pop
or
sub
push
hlt
jbe
jbe
imul
imul
or
dec
mov
pop
cmp
jbe
lea
jbe
mov
pop
daa
pop
cmp
push
or
or
outs
xchg
and
sub
dec
sbb
jle
bound
xor
retf
dec
int
or
into
dec
xor
jl
xor
add
pop
cmps
jle
add
add
test
call
jge
test
(bad)
jmp
jno
push
or
add
add
jns
dec
push
push
or
add
push
aaa
add
jbe
ins
xor
int
jne
sbb
push
into
dec
jp
sub
dec
or
xor
xchg
jp
and
push
push
xor
jl
push
gs
push
stos
mov
push
test
pop
adc
or
xor
ins
lahf
ins
std
(bad)
cli
push
xor
and
xchg
pop
jb
and
xor
in
les
imul
jbe
addr16
push
add
push
or
das
and
bound
push
movs
dec
sbb
sub
dec
xchg
mov
push
test
pop
dec
ins
call
gs
icebp
ins
lahf
ins
or
mov
xchg
cwde
pop
jne
retf
gs
xor
jmp
push
sub
bound
pop
push
pop
push
add
jmp
jle
pop
jne
lds
mov
bound
push
pop
push
call
pop
jge
jne
adc
jmp
push
add
jle
pop
jne
sub
push
bound
sub
dec
cli
push
call
xchg
repz
jbe
xchg
imul
dec
hlt
xchg
add
dec
push
push
mov
ja
jb
fs
adc
jbe
bound
or
loopne
les
pop
jne
test
pop
dec
dec
push
add
call
dec
mov
push
int
pop
dec
jne
adc
pop
jne
test
push
mov
pop
sub
xchg
mov
push
test
and
xchg
pop
jb
and
bound
push
into
dec
sbb
icebp
ins
lahf
ins
sbb
mov
bound
add
or
xor
call
lea
pop
mov
add
add
xor
in
sar
add
or
add
add
nop
cmp
xor
add
mov
and
or
and
mov
add
pop
mov
add
mov
add
test
add
add
add
add
add
add
add
add
add
dec
add
inc
icebp
inc
add
or
add
arpl
add
or
add
add
xor
popa
and
add
inc
dec
adc
add
add
pop
dec
add
dec
sbb
ins
dec
or
dec
add
jae
or
dec
add
add
and
inc
inc
bnd
add
add
add
push
add
sahf
movs
mov
pop
push
dec
add
add
inc
add
repz
add
add
add
add
outs
data16
add
sbb
pop
test
add
push
add
or
ins
add
push
add
add
test
add
add
add
add
add
hlt
inc
add
add
add
add
add
add
loopne
pop
push
push
add
add
add
add
pop
inc
add
repnz
or
add
adc
add
add
add
sbb
fnstcw
add
add
add
add
and
adc
add
and
pop
and
pop
and
popa
and
add
inc
dec
sbb
dec
dec
add
dec
dec
add
push
dec
add
pop
dec
add
jo
add
add
add
add
mov
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
xchg
add
mov
add
fwait
add
add
add
imul
add
add
aaa
add
add
add
add
xor
add
add
add
add
add
add
add
add
cwde
add
add
xor
add
add
add
add
add
add
add
add
cwde
add
add
xor
add
add
add
add
add
add
add
add
cwde
add
add
xor
add
add
add
add
add
add
add
add
cwde
add
add
xor
add
add
add
add
add
add
add
add
cwde
add
add
xor
add
add
add
add
add
add
add
add
cwde
add
add
xor
add
add
add
add
add
add
add
add
cwde
add
add
xor
add
add
add
add
add
add
add
add
cwde
add
add
xor
add
add
add
add
add
add
add
add
cwde
add
add
xor
add
add
add
add
add
add
add
add
cwde
add
add
xor
add
add
add
add
add
add
add
add
cwde
add
add
xor
add
add
add
add
add
add
pop
add
add
add
imul
add
add
aaa
add
add
add
add
add
add
add
dec
mov
xor
add
add
add
add
add
add
add
add
add
pushf
adc
pop
dec
mov
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
adc
add
add
add
push
add
ret
add
add
add
push
add
ret
add
add
add
inc
add
pop
add
add
add
fdivr
add
add
pop
add
add
add
add
pop
add
add
add
ins
cli
pop
add
add
add
outs
cli
pop
add
add
add
fiadd
add
iret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jg
add
rol
add
inc
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
xor
cmp
push
sub
outs
jae
data16
arpl
cmp
imul
ins
popa
jb
je
addr16
and
gs
outs
jbe
cmp
add
add
add
sub
jae
push
sub
outs
jae
data16
arpl
cmp
imul
ins
popa
jb
je
addr16
and
fs
je
add
push
pop
lea
adc
add
add
add
xor
add
xor
xor
add
add
add
jae
or
jo
arpl
or
jne
popa
jb
popa
je
or
inc
inc
popa
je
add
je
or
je
jbe
or
gs
jns
or
arpl
popa
ins
jne
add
push
inc
push
inc
or
dec
popa
ins
gs
pop
gs
jb
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
arpl
add
data16
add
add
jle
add
jg
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
lea
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
xor
add
xor
add
cmp
add
cmp
add
inc
add
add
add
inc
add
add
add
push
add
add
add
add
pusha
add
add
add
add
data16
add
add
imul
add
xchg
add
mov
add
or
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
or
add
in
add
add
add
add
add
adc
add
inc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
xlat
add
add
add
add
add
add
add
inc
add
adc
add
add
inc
add
add
add
outs
add
outs
add
ja
outs
add
inc
add
add
add
inc
add
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
inc
push
nop
add
add
add
add
add
jp
and
add
or
add
add
add
inc
add
add
add
push
add
ins
add
jae
and
dec
add
ja
and
push
add
ins
add
outs
add
add
add
pop
push
add
add
add
adc
add
add
add
push
add
ins
add
outs
add
add
es
add
add
or
add
add
add
add
jp
and
add
or
add
add
add
inc
add
add
add
inc
add
imul
add
cmp
nop
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
mov
dec
add
push
add
ins
add
jne
outs
add
add
add
icebp
or
add
add
add
add
mov
es
jae
inc
add
add
add
add
add
jp
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
test
mov
mov
push
and
and
and
xor
xor
xor
xor
xor
inc
inc
dec
dec
push
call
call
call
(bad)
cmp
call
pop
jmp
inc
add
add
add
jnp
mov
sbb
sbb
or
or
or
push
xor
xor
push
xor
dec
(bad)
cmp
pop
jmp
jmp
inc
add
add
pop
mov
add
add
add
add
add
add
add
add
add
add
sub
dec
add
add
add
test
add
(bad)
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
jg
push
add
xor
(bad)
call
add
add
add
inc
add
add
pop
add
push
add
dec
add
add
inc
add
add
pop
add
push
add
dec
(bad)
inc
add
add
add
add
add
test
adc
daa
mov
xor
add
pop
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
or
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
dec
inc
and
push
push
inc
dec
add
add
add
add
add
add
add
push
add
add
add
add
jb
popa
ins
add
push
add
add
add
dec
inc
and
push
push
inc
dec
add
add
add
add
add
xor
add
push
add
add
add
add
arpl
jae
data16
dec
data16
outs
jb
add
add
add
add
add
add
add
call
add
add
add
ret
mov
add
add
add
add
jp
add
add
add
mov
add
add
inc
add
add
add
add
add
aad
aad
sbb
xchg
xchg
or
sub
scas
xor
add
mov
add
or
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
add
xchg
add
add
add
add
add
movs
add
add
add
add
add
test
add
push
add
add
add
dec
inc
and
push
push
inc
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
or
add
add
add
or
add
add
add
or
