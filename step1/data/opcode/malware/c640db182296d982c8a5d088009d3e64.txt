add
mov
test
scas
pushf
fmul
mov
pop
dec
mov
daa
sbb
xor
jne
sub
and
(bad)
test
inc
nop
loopne
adc
sti
das
jp
in
dec
sub
and
fisttp
sub
jmp
and
adc
inc
mov
movs
test
xor
(bad)
mov
hlt
jbe
and
mov
sar
clc
(bad)
nop
sahf
es
scas
cmc
(bad)
fimul
(bad)
adc
repz
cmps
push
mov
mov
out
(bad)
es
aas
mov
scas
jl
or
lods
xcrypt-ecb
cmps
lea
out
sti
add
cwde
mov
and
push
cmp
push
push
pop
iret
or
(bad)
cmc
and
push
in
add
mov
loop
imul
adc
push
(bad)
mov
pusha
outs
or
retf
ins
push
xchg
sahf
int3
xchg
sbb
cwde
push
push
mov
sbb
(bad)
movs
adc
bound
out
xor
int
es
or
lods
push
cmp
loopne
das
fsub
cdq
sar
ins
paddsw
(bad)
fwait
sbb
cs
xor
into
call
pushf
and
push
ret
or
push
fs
dec
jmp
imul
call
scas
arpl
sahf
mov
faddp
pop
int
push
xor
inc
mov
cmp
lea
(bad)
aas
sub
test
scas
imul
addr16
inc
xchg
cmp
or
jae
sub
add
js
stos
test
fcmovbe
dec
jne
push
ret
or
rol
cwde
call
div
test
xchg
cs
repz
pop
cmps
xchg
push
or
pop
cmp
mov
not
call
inc
enter
out
mov
ins
dec
inc
mov
data16
cmps
jle
(bad)
icebp
jle
jp
sar
mov
ja
pop
push
cmps
outs
add
mov
jmp
mov
adc
xlat
mov
jp
inc
pop
inc
xchg
call
mov
dec
addr16
rol
inc
cmp
loop
rcr
dec
sbb
add
inc
cdq
std
pop
xor
sub
aas
jg
in
adc
aad
sbb
pop
leave
pop
pop
pop
cmc
rcl
dec
mov
mov
sub
push
or
inc
adc
pop
dec
aam
pop
gs
sub
fdiv
jnp
call
lods
jno
call
mov
retf
sub
dec
ds
lods
sbb
(bad)
adc
cmps
mov
pop
test
and
int
aad
push
test
call
cmp
cdq
cmp
je
loope
das
lods
ins
cmp
push
xchg
jae
or
cmc
push
movzx
loop
push
stc
add
mov
dec
push
cmp
sbb
or
popf
fstp
les
xchg
fisubr
jmp
inc
xor
and
cld
dec
sbb
ret
cmp
push
mov
lods
push
sub
inc
jl
ret
or
bound
xchg
sub
push
(bad)
repnz
pop
sahf
gs
pop
jle
call
das
jnp
xor
xchg
push
cmps
(bad)
xchg
js
push
loopne
xor
(bad)
mov
jne
mov
push
call
ins
mov
push
pusha
test
ror
sar
add
cdq
mov
dec
or
fisubr
rcr
in
(bad)
fadd
dec
cwde
mov
into
imul
dec
test
fistp
xor
repz
stos
sbb
into
and
mov
pop
repz
dec
fcomp
iret
int3
adc
test
ss
addr16
rep
jecxz
sti
jecxz
enter
pop
sar
push
aaa
ror
push
shl
call
stc
cwde
sbb
rcr
loopne
or
xchg
pop
mov
xchg
mul
fdiv
cmps
jp
mov
pop
pop
jge
sbb
rcl
in
cs
gs
xchg
out
iret
jne
lods
(bad)
mov
loop
(bad)
or
adc
sub
pop
cmp
cmp
push
loopne
lds
(bad)
in
movs
movs
dec
mov
add
sbb
jmp
push
inc
sbb
mov
retf
sbb
mov
add
stos
jge
pop
out
and
les
je
xchg
bound
jns
inc
or
jmp
ret
push
jl
cmps
les
adc
popa
inc
sbb
jns
mov
push
call
in
shr
fbstp
adc
and
in
scas
xor
sbb
inc
clc
add
sbb
jle
cmp
cdq
fcomp
sti
sub
fadd
iret
and
pusha
push
dec
mov
mov
pop
sbb
lds
je
daa
shr
push
or
stc
mov
bound
scas
pop
cmp
or
mov
je
mov
aas
xchg
adc
dec
sub
cmp
mov
int
pop
pop
sbb
test
cli
cmps
(bad)
pop
jmp
pop
jo
movs
xchg
sbb
(bad)
rcr
loop
jo
aas
mov
adc
pushf
cdq
data16
inc
adc
xchg
dec
adc
sbb
scas
pop
xchg
cmp
push
fadd
sbb
mov
sbb
fs
dec
ins
imul
dec
xchg
fcomp
pop
sbb
cmp
out
pushf
fld
(bad)
(bad)
call
shl
xchg
imul
sbb
stos
push
cmps
popa
lods
out
cmps
(bad)
sti
call
leave
sbb
push
sbb
inc
jbe
fadd
sti
inc
xor
sub
push
cmp
push
dec
mov
xor
fstp
mov
sti
mov
mov
sbb
push
cmp
cwde
xchg
cmps
lods
js
cmp
pop
mov
out
pop
xchg
paddb
pop
push
push
mov
sub
push
cdq
jmp
(bad)
rol
dec
jno
xchg
or
jg
daa
adc
div
xor
inc
push
iret
loope
stos
sub
pushf
mov
popa
push
stos
sub
ret
inc
sbb
and
clc
aas
das
outs
push
loope
test
mov
clc
xchg
in
mov
iret
loop
data16
(bad)
mov
inc
ret
mov
scas
test
jge
add
pop
cmc
pusha
shl
sub
pop
(bad)
xor
imul
hlt
push
inc
xchg
cwde
aas
pop
xchg
and
pop
lds
outs
fstp
xchg
mov
sub
mov
in
cmp
std
jns
cld
js
dec
adc
pop
pop
test
stos
or
sub
cmps
stc
enter
lea
jmp
xor
out
shl
int
push
repz
fdivr
mov
aam
popf
dec
pop
outs
rcl
(bad)
mov
push
das
movs
fsub
retf
loope
out
retf
cmps
pop
push
sub
popf
mov
aaa
call
pusha
jg
test
fcom
outs
shl
xchg
sti
pop
push
jecxz
jl
xchg
cmps
xlat
xchg
adc
jg
cwde
mov
push
call
dec
daa
popa
jnp
adc
imul
inc
ins
fdivr
test
adc
xchg
mov
adc
arpl
fnstenv
addr16
ret
mov
pop
mov
loopne
aaa
pushf
mov
or
push
jg
mov
cmp
lahf
(bad)
push
js
dec
fwait
cmp
mov
and
hlt
xchg
fimul
sar
outs
stos
test
push
rol
and
test
and
jnp
mov
pushf
pop
pusha
mov
pop
lea
pop
push
rep
movsx
movzx
pop
xchg
mov
pusha
setae
xchg
lods
btr
cmc
movsx
pop
not
stc
call
jmp
call
mov
pusha
call
add
pusha
push
jmp
call
push
call
push
push
push
mov
mov
xor
lea
call
lahf
adc
sahf
rcr
sub
jne
mov
pop
rol
pop
pop
ret
jmp
mov
pushf
pusha
pushf
pushf
push
ret
mov
push
lea
jmp
add
cmc
cmc
mov
pusha
push
cmp
mov
push
jmp
pusha
lea
jb
aam
cmp
not
cwde
mov
pushf
jmp
push
pushf
lea
mov
lea
call
call
adc
pop
mov
and
pop
movs
stc
mov
adc
popf
add
push
iret
mov
xchg
imul
xor
sbb
and
fisubr
adc
cmc
inc
mov
outs
inc
mov
pop
adc
sub
fcom
jecxz
jno
or
lea
std
push
movs
jbe
imul
in
mov
mov
sub
je
push
(bad)
xor
sub
cmp
adc
add
pop
mov
or
stc
dec
cdq
in
je
mov
jne
outs
retf
ja
mov
dec
push
fisttp
mov
hlt
or
or
cmp
cdq
inc
adc
mov
mov
sbb
jae
lds
jmp
pop
jmp
adc
cwde
mov
add
mov
in
push
pop
pushf
or
enter
push
repnz
in
cmp
mov
push
shl
xlat
or
sbb
push
sub
sti
pop
mov
retf
fwait
xchg
popa
cmp
out
int
stos
cld
dec
call
sub
pushf
or
mov
push
outs
inc
pop
repnz
add
dec
sar
ins
aad
movs
jns
out
inc
dec
lahf
xor
retf
push
jns
sub
push
push
dec
sbb
clc
mov
pop
inc
xor
retf
call
fidiv
loop
mov
inc
sbb
pop
xor
fidivr
addr16
sub
xor
push
inc
out
mov
push
clc
retf
mov
ficom
mov
popf
dec
movs
mov
retf
inc
adc
fs
jmp
retf
pushf
push
sub
(bad)
shl
retf
cmp
(bad)
and
mov
repnz
movs
stc
enter
nop
loopne
test
pop
push
test
sub
repnz
jb
jg
ret
dec
sbb
mov
into
dec
pushf
(bad)
push
lods
jp
mov
cs
push
out
rcl
xchg
adc
arpl
mov
dec
fwait
cli
pusha
mov
mov
push
push
ret
rol
mov
push
cmp
stc
sub
mov
clc
shl
pushf
cmc
stc
stc
add
stc
test
sub
push
push
lea
jne
bts
inc
jmp
cmp
jmp
cmp
pusha
call
add
jl
sub
not
mov
pusha
push
pusha
jmp
pusha
pushf
rol
mov
mov
sub
push
cmc
push
shl
push
pushf
test
cmp
add
mov
cmc
jmp
mov
mov
lea
jmp
xchg
pusha
mov
lea
ja
pusha
lea
jae
movsx
mov
pusha
xchg
lea
seto
lea
setle
seta
mov
push
lahf
mov
lea
cwde
push
setle
call
call
mov
pushf
pushf
push
ret
call
mov
push
aam
pop
mov
lea
xor
sbb
(bad)
(bad)
mov
adc
rol
mov
movs
js
daa
sbb
out
mov
cmp
cdq
out
adc
retf
mov
and
sbb
cmc
push
stos
add
test
ret
xor
sbb
in
fbstp
and
loope
sub
pop
hlt
inc
adc
cli
shl
and
sbb
jb
add
stos
call
call
sbb
push
xchg
xchg
jle
jmp
out
cmp
and
daa
jbe
int3
mov
inc
dec
sbb
enter
push
mov
and
(bad)
and
addr16
stos
call
mov
sti
dec
outs
inc
xchg
jge
jmp
loope
sub
jg
jbe
sbb
daa
lods
lahf
jae
add
out
neg
test
xor
xlat
lods
jg
push
pop
jmp
push
jb
sub
pop
dec
fwait
cld
jmp
fs
add
aas
xchg
jecxz
stos
loope
mov
push
jg
ret
push
jle
call
daa
imul
pop
icebp
ret
jnp
xor
jmp
adc
and
loop
sub
pop
loopne
adc
movs
cmc
cmp
xlat
sub
sbb
add
cmp
mov
sbb
fdiv
xchg
or
ins
aas
(bad)
pop
retf
sbb
fld
pop
(bad)
les
loop
loop
mov
sbb
das
adc
into
pop
cwde
imul
in
test
ds
sbb
xchg
sbb
imul
sbb
mov
sub
imul
jl
sub
aad
dec
adc
cwde
add
cmps
cdq
call
mov
add
ds
pop
mov
imul
mov
int3
push
sahf
in
scas
je
pop
mov
jne
pop
das
push
fnstcw
out
and
ret
jb
dec
dec
rcl
stos
std
in
mov
pushf
aas
xor
sbb
mov
jo
or
retf
inc
xchg
std
sub
mov
bound
sbb
ret
sub
pop
dec
call
(bad)
cmps
stos
out
test
fbstp
jbe
push
dec
fsubr
cmps
sub
lea
push
adc
aam
jb
push
cmp
or
jno
or
in
mov
push
lea
jmp
or
push
btr
xchg
or
mov
sbb
cmc
xor
sub
test
shl
push
ror
aas
jle
push
shrd
aad
lahf
aad
push
bsf
neg
btc
push
bswap
shl
mov
cmc
test
push
jmp
test
sub
call
inc
dec
mov
push
bswap
pop
mov
inc
pusha
mov
pushf
pusha
mov
mov
push
mov
pushf
not
jmp
sub
movzx
movzx
lea
jmp
add
pop
ja
outs
imul
mov
add
pusha
push
push
mov
call
lea
jne
aad
rcl
inc
sub
ror
neg
jmp
movzx
bswap
mov
mov
lea
jmp
push
mov
lea
call
pushf
push
lea
jne
adc
pusha
lea
jae
cwde
clc
daa
pop
call
not
mov
pushf
mov
pushf
push
lea
jmp
cmp
mov
mov
call
pushf
lea
jb
jmp
call
add
push
je
push
je
inc
add
and
out
pushf
pusha
stos
pushf
push
push
lea
jmp
imul
mov
push
daa
and
aas
xchg
lock
in
movs
loop
xor
rol
sbb
icebp
fmul
(bad)
sbb
cmps
clc
jne
xor
mov
xchg
jmp
inc
sbb
sub
movs
xor
jmp
pop
inc
adc
xlat
mov
out
test
mov
retf
sbb
movs
jns
outs
pop
(bad)
les
ret
sbb
add
sbb
jns
xor
pmuludq
pop
dec
sbb
js
inc
stos
jle
pop
dec
sbb
in
mov
sbb
ja
rcr
pop
(bad)
les
sub
lock
cwde
pop
(bad)
dec
lahf
push
pop
int
xchg
imul
cld
jg
inc
xchg
mov
sub
retf
xchg
inc
(bad)
popa
das
add
xor
or
sbb
jmp
scas
xchg
bound
in
xchg
xchg
int3
jl
std
shl
pusha
mov
lea
test
cmp
cwde
imul
mov
dec
and
adc
bnd
aaa
xor
sub
mov
mov
sbb
jne
add
cmp
cmp
stc
dec
push
cmps
cli
int3
popa
mov
xchg
push
es
jo
adc
test
push
out
ds
(bad)
pushf
shl
mov
cmp
add
lahf
mov
cmp
test
pushf
pusha
sub
push
mov
jmp
pushf
lea
jne
movzx
mov
aas
sub
xor
jmp
rcl
(bad)
in
inc
(bad)
sbb
out
push
dec
sbb
imul
test
or
(bad)
mov
jb
mov
mov
jne
ss
int
(bad)
xor
jnp
xor
jne
fdiv
inc
mov
sub
adc
mov
dec
ret
je
pushf
ins
leave
nop
mov
lods
lahf
lock
adc
xchg
cmp
xor
xchg
scas
outs
pusha
das
test
and
pop
mov
push
inc
push
cs
cmp
pop
rol
sub
mov
fnsave
xor
push
cmps
cwde
jmp
jmp
or
pop
mov
push
dec
mov
jle
ins
mov
mov
jp
mov
mov
stc
dec
push
and
xor
lds
outs
inc
adc
std
xchg
mov
cmps
cmps
or
dec
cmps
cdq
push
cwde
or
std
out
mov
dec
push
cmps
jbe
sbb
push
(bad)
mov
outs
ja
das
cmp
shl
pop
push
and
icebp
ret
inc
mov
sub
adc
jbe
add
pop
fs
fisubr
mov
pop
mov
scas
jge
jno
frstor
loopne
ret
xchg
test
mov
stos
mov
jmp
addr16
adc
mov
sbb
ror
stos
sbb
xchg
stos
jl
jns
inc
lods
(bad)
cmp
aas
xor
aas
cmp
mov
cld
xor
mov
div
repz
fs
ins
es
test
out
not
into
arpl
or
or
scas
xor
icebp
inc
enter
mov
push
push
jmp
pop
pop
fisubr
or
mov
inc
adc
cmp
out
inc
enter
jl
xchg
sub
cs
shl
jp
(bad)
(bad)
xchg
rcl
add
call
sub
ret
adc
mov
(bad)
mov
cld
retf
mov
and
aam
sbb
mov
(bad)
pop
mov
sbb
jmp
movsx
ror
rcr
rol
xor
bts
bswap
pushf
rol
mov
clc
sub
pushf
ror
xor
xor
call
jmp
pusha
mov
movzx
push
pop
movsx
mov
mov
pusha
push
lea
jmp
lea
pushf
push
push
jmp
btr
shl
call
clc
xor
call
pcmpgtb
les
std
cli
int3
mov
jo
cli
enter
and
test
or
mov
repnz
ds
enter
in
call
mov
push
cmp
loop
lahf
popa
inc
xor
pop
and
mov
shl
pop
das
sbb
scas
adc
sub
and
or
dec
mov
pop
push
adc
iret
mov
ret
inc
fld
xor
out
xor
lock
mov
mov
sub
aam
scas
add
cmp
jmp
out
rcl
test
sbb
rcl
mov
dec
sbb
ss
pmaxub
mov
mov
cld
xchg
sub
mov
stc
shld
je
mov
clc
ret
clc
lock
push
fwait
jmp
xor
mov
inc
ret
jnp
add
fisubr
mov
sub
jg
mov
retf
adc
or
div
imul
or
cmps
cwde
in
pop
dec
mov
pop
sub
sub
fcom
(bad)
sbb
pop
xor
dec
aas
xchg
mov
add
add
mov
mov
add
call
sub
ret
repnz
jg
and
mov
aas
mov
mov
adc
lea
call
call
jmp
cmp
pusha
call
jmp
jmp
test
push
pushf
lea
je
or
rcr
rol
lea
mov
btr
add
add
shld
not
ror
mov
cmp
jmp
xor
shr
add
mov
sub
jb
mov
add
call
sub
jne
ret
push
clc
jmp
lea
push
mov
pushf
push
lea
jmp
mov
cmp
movzx
mov
pusha
mov
lea
jb
mov
xor
xor
inc
mov
push
sub
pusha
push
mov
jmp
pushf
jmp
pushf
push
stos
push
mov
push
pushf
lea
jmp
pushf
mov
pusha
lods
bt
not
cmc
cmp
jmp
sub
jmp
bt
bt
call
sub
push
sub
add
call
pusha
lea
jne
sar
shl
stc
mov
cmp
clc
add
pusha
movzx
not
mov
movzx
movsx
mov
pushf
mov
push
lea
jmp
pusha
lea
jae
movsx
mov
movsx
mov
bsf
cmp
clc
cmp
mov
pushf
pushf
xor
mov
repnz
mov
pushf
lea
jne
cmp
shrd
movzx
xchg
mov
push
neg
sub
jmp
test
rcr
mov
inc
shl
pusha
bsr
mov
dec
pusha
mov
cmc
bt
cmp
mov
mov
mov
lea
jb
cmp
mov
das
mov
sete
not
xadd
inc
xchg
sub
mov
cwde
cmc
rol
daa
add
not
lahf
call
push
setbe
jmp
mov
inc
in
pop
mov
add
or
fiadd
pop
int
cwde
imul
pop
and
push
in
popa
xor
sbb
cmp
jmp
mov
pop
scas
xor
aad
pop
inc
xor
out
dec
cmp
or
int
jo
adc
jno
icebp
mov
jmp
rcl
movs
call
shl
ds
add
fbstp
sbb
(bad)
enter
sub
cmc
inc
jle
inc
inc
xor
cmc
inc
mov
cld
xor
adc
stos
jl
pop
cs
xlat
sub
mov
in
cmp
scas
inc
push
imul
stos
ins
mov
retf
mov
scas
loope
pop
out
ret
pop
sub
push
mov
mov
push
ret
mov
push
mov
lea
jmp
cmp
jmp
pusha
mov
pushf
push
push
push
ret
push
push
pop
mov
push
ret
lea
jb
xor
cmp
mov
stc
jmp
lea
ja
pusha
push
call
pushf
mov
jmp
lea
jne
push
movzx
cwde
mov
pop
not
push
not
push
bswap
bswap
lea
jmp
call
jle
fisub
mov
jo
push
and
test
cmp
jl
out
rcl
repnz
dec
and
mov
inc
aaa
xchg
push
mov
scas
inc
xchg
add
dec
xor
xor
test
test
bound
imul
movs
add
stos
popf
jno
sahf
(bad)
and
out
daa
and
push
aas
mov
out
ret
cmp
je
or
mov
xor
pop
mov
and
in
jmp
pop
mov
stos
test
inc
xchg
adc
(bad)
lock
xlat
xchg
adc
push
mov
push
inc
call
adc
sub
fidiv
enter
mov
and
nop
fbld
adc
mov
icebp
inc
int3
pushf
pushf
jp
fsubr
call
mov
ins
pop
mov
or
in
sti
pop
shl
cld
adc
retf
sahf
jge
mov
mov
push
push
test
inc
test
std
shr
inc
mov
sub
ret
and
icebp
stc
sub
xchg
fs
sbb
push
pop
jmp
es
ret
xchg
imul
fbstp
mov
inc
retf
xor
pop
out
imul
and
pop
fisubr
shl
adc
into
popf
xchg
test
cmp
(bad)
das
cmc
enter
dec
sahf
ror
cli
das
gs
adc
ins
mov
repz
enter
ret
mov
mov
addr16
jno
movs
or
and
outs
mov
iret
pop
dec
lahf
or
xor
fcmovne
sbb
fstp
or
fild
daa
sbb
xchg
pop
test
hlt
inc
test
dec
adc
aam
ja
mov
mov
das
push
jo
inc
jo
ss
adc
fidiv
les
jp
xchg
gs
sbb
ds
stc
dec
aaa
ins
out
movs
cmc
push
mov
pushf
lea
jb
bt
jmp
jmp
pushf
cmp
pusha
call
stc
cmp
push
lea
jle
push
lea
jb
rcr
bsf
cwde
mov
neg
jmp
pusha
jmp
call
mov
cmp
call
test
pushf
test
push
push
pusha
call
xchg
pusha
mov
call
call
mov
adc
out
mov
cmp
push
adc
fmul
xor
movs
mov
xchg
jno
xchg
push
sbb
sub
adc
rol
ret
xchg
dec
sbb
push
movs
test
imul
and
or
cmp
fist
aas
mov
loopne
into
and
scas
xor
push
adc
(bad)
cmp
inc
sbb
sub
(bad)
adc
push
inc
xor
sub
hlt
inc
mov
jnp
ret
sbb
ss
xor
inc
adc
push
loop
test
iret
add
mov
pusha
mov
or
cmp
call
gs
es
(bad)
sub
mov
push
jmp
cwde
mov
movsx
cwde
bswap
lea
push
jmp
mov
lea
call
pusha
pushf
push
pushf
lea
jb
cwde
lahf
bts
movzx
not
sbb
sbb
rcr
shr
btr
lea
call
shl
call
add
inc
jb
popa
je
push
je
gs
ins
dec
outs
dec
inc
ins
outs
bound
add
xor
pusha
mov
rol
stc
sub
call
not
rep
movsx
movsx
mov
mov
push
pop
mov
call
mov
bsf
mov
bt
push
jmp
setno
mov
mov
lea
jmp
mov
shl
add
pop
bswap
mov
jmp
btr
call
and
bt
adc
seto
mov
bt
shl
cmc
push
test
stc
add
pushf
lea
jmp
sbb
movsx
call
push
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
call
clc
pop
ret
adc
push
pushf
mov
pushf
lea
jae
dec
pop
cmp
pop
and
cmc
mov
btr
or
and
neg
cmp
push
mov
call
mov
push
lea
ja
or
ror
rcr
not
sub
adc
shl
shl
not
add
bsf
mov
pusha
call
add
inc
gs
outs
fs
gs
imul
add
push
dec
shl
sub
cwde
push
bts
das
push
sar
daa
jmp
fsubr
mov
enter
pop
xor
or
dec
scas
add
jo
cdq
inc
aaa
mov
and
mov
push
and
sub
(bad)
shl
xor
popf
out
and
mov
repz
lea
(bad)
mov
inc
mov
movs
sub
jmp
inc
fldcw
jmp
clc
mov
sub
mov
jmp
dec
pushf
mov
mov
push
mov
pop
adc
sar
and
sbb
test
and
mov
mov
scas
sti
mov
adc
mov
fidiv
test
arpl
sbb
aaa
push
pop
lods
jg
sbb
push
nop
jecxz
adc
inc
sub
es
rcr
popa
mov
cli
dec
dec
adc
pop
mov
dec
and
sbb
leave
(bad)
mov
pop
adc
shl
stc
jmp
xchg
popa
lods
aam
aad
aad
cli
jae
mov
out
out
inc
rcl
(bad)
push
pop
xchg
adc
aam
ja
pop
pop
mov
sbb
loope
fldcw
fsubr
(bad)
cmps
cmc
push
cmps
sbb
pop
in
ins
mov
jge
xor
leave
xchg
push
daa
retf
mov
div
inc
jb
ss
sbb
pop
adc
push
cmp
sub
mov
shl
pushf
test
test
test
mov
call
aad
mov
neg
inc
shl
shl
add
cmc
mov
mov
call
pusha
lea
jae
not
cmc
rol
mov
or
bts
mov
movsx
mov
cmp
clc
jmp
inc
mov
not
mov
stc
clc
cmp
setg
movzx
lea
not
pushf
mov
mov
call
lea
call
call
mov
jmp
lea
jne
pusha
pop
neg
mov
mov
bt
add
pusha
lea
jb
movzx
bswap
mov
pushf
pusha
lea
jmp
bt
bt
stc
mov
pushf
cmc
test
cmp
mov
lea
jb
das
shl
mov
rcl
bts
mov
bt
shl
pushf
lea
mov
lea
call
call
mov
push
mov
pushf
mov
push
ret
call
std
push
dec
adc
pop
mov
cdq
xchg
imul
jge
out
rcl
pop
retf
add
(bad)
push
(bad)
les
aas
push
dec
pushf
add
mov
dec
mov
mov
aas
push
and
xchg
arpl
xor
outs
repz
ret
mov
outs
xchg
into
rcl
mov
call
mov
jne
add
jne
loop
lahf
test
lods
mov
xor
lds
or
mov
adc
(bad)
leave
sbb
jl
mov
push
cmc
xor
cs
inc
add
jns
dec
and
sub
rcl
adc
addr16
mov
leave
sub
in
xchg
imul
push
mov
mov
push
stos
push
lea
jmp
jmp
pop
sub
bsf
adc
pop
movsx
mov
clc
neg
cmp
push
lea
jg
lahf
movsx
mov
jmp
or
mov
bt
repnz
jmp
push
pushf
call
push
mov
push
push
push
push
ret
mov
pop
mov
loope
mov
adc
sbb
ss
shl
cmps
jnp
pop
xor
xchg
pop
frstor
or
dec
xchg
test
dec
popf
add
jno
loop
into
in
inc
aad
call
and
in
fxch
pushf
mov
pop
(bad)
lahf
push
lods
jmp
push
cmp
xchg
mov
out
jns
sbb
in
cmps
mov
cld
dec
aaa
or
adc
in
inc
into
pushf
adc
data16
fldcw
stos
jge
ret
stc
in
stos
lods
pushf
outs
jae
xor
outs
mov
dec
sbb
cmps
xchg
adc
jecxz
popf
lock
push
push
pop
dec
and
dec
and
cli
mov
call
pusha
pusha
pushf
lea
jb
bt
shl
ror
shld
cmp
movsx
push
pop
mov
pusha
push
lea
jb
btc
movsx
xor
sub
mov
pushf
sub
pushf
push
mov
jmp
call
stc
cmp
pushf
add
mov
pushf
jmp
adc
jmp
lea
jne
pusha
xor
clc
cmc
mov
inc
sub
test
shld
lea
stc
sub
pushf
test
cmp
cmp
push
pop
jmp
pushf
push
lea
jb
aaa
inc
cmp
bswap
pusha
setno
mov
push
lea
jb
pusha
aad
not
sar
mov
jmp
jmp
mov
pushf
lea
je
pushf
push
lea
jmp
mov
rcl
clc
rcr
sar
mov
lea
clc
mov
sbb
inc
mov
movzx
rcr
bts
push
mov
bsf
rcl
mov
call
jne
aad
fistp
fnsave
xor
repnz
lea
outs
pop
xor
xor
(bad)
cmc
in
add
inc
and
(bad)
nop
adc
mov
mov
outs
inc
dec
and
xchg
jmp
cmp
adc
(bad)
mov
loopne
mov
jge
xor
sbb
movs
stc
pop
repnz
pop
and
adc
js
in
xchg
shl
ret
add
call
leave
pusha
pop
mov
pushf
lea
ja
pusha
push
pusha
call
pushf
lock
fsubr
mov
mov
xor
ja
gs
shl
ds
mov
mov
fistp
push
xchg
test
test
pop
loop
sbb
jno
shl
(bad)
jo
inc
scas
and
ror
mov
cdq
and
push
jbe
mov
cs
ss
lea
ficom
repz
pop
mov
fwait
dec
sbb
or
sbb
adc
repz
cmp
or
loopne
gs
pop
call
ja
cli
sub
loopne
sbb
jns
retf
mov
repnz
outs
nop
leave
xchg
pop
push
fcom
fwait
mov
jo
dec
and
push
lods
loope
cmp
scas
neg
cmp
sub
pusha
stos
ss
and
sub
mov
jl
dec
jecxz
mov
sbb
sti
repz
and
repnz
es
and
clc
popf
xor
inc
jns
ins
call
mov
dec
jo
mov
mov
repnz
dec
rcl
pop
rcl
stos
or
sbb
cld
mov
inc
rol
jg
adc
cs
loopne
push
aam
stc
push
es
and
xor
push
js
pop
stos
(bad)
jmp
lods
nop
int3
addr16
sbb
test
ss
cmp
cmp
xchg
add
fild
out
retf
mov
mov
mov
jmp
(bad)
loopne
lods
jbe
sbb
inc
retf
mov
sbb
loope
mov
jo
xchg
imul
xchg
inc
mov
arpl
sbb
enter
push
add
mov
ds
aam
shl
les
test
push
push
mov
addr16
and
xchg
daa
sbb
add
loope
jae
cmp
aam
add
mov
inc
jge
dec
cmp
movs
xchg
stc
(bad)
pushf
xchg
shl
inc
push
imul
xchg
fimul
jns
mov
push
and
stos
sub
or
test
je
jecxz
push
mov
stos
hlt
push
mov
xchg
cmp
xchg
stc
repnz
retf
add
lahf
pop
mov
(bad)
shl
pushf
xchg
in
retf
shl
jmp
dec
cmps
mov
shl
adc
mov
hlt
fld
test
xchg
xchg
push
shr
jl
push
sbb
pop
add
out
icebp
sbb
xchg
push
sub
popa
(bad)
scas
sbb
adc
retf
mov
pop
sub
ja
cmp
or
(bad)
mov
mov
jnp
enter
stos
add
or
or
cmp
aas
and
std
test
jo
pop
bound
lods
stc
(bad)
retf
mov
cmp
jmp
aam
jae
ret
lds
xchg
test
out
mov
inc
push
cmp
push
pushf
sbb
xor
cwde
push
mov
call
out
cmp
push
pop
fdiv
adc
pop
mov
xchg
sub
lods
(bad)
mov
and
jl
(bad)
retf
hlt
jns
sub
test
fisubr
fsubrp
inc
sar
ja
mov
push
pop
loop
push
sbb
pop
lods
adc
xor
adc
call
iret
jns
cmp
ret
pop
adc
adc
push
or
push
mov
daa
mov
unpckhps
or
rcr
inc
and
and
adc
jmp
pushf
rcl
js
sbb
xchg
or
push
sbb
sub
shl
sti
out
mov
lds
and
jns
xor
int3
xor
adc
and
cdq
sahf
(bad)
sti
cmp
inc
push
mov
sti
cmps
mov
and
outs
in
push
dec
xlat
push
scas
xchg
in
inc
push
test
cmc
lea
mov
xchg
fcom
mov
xchg
cmp
data16
movs
fs
unpckhps
int3
stc
int
cmp
adc
data16
adc
sub
jge
jmp
inc
popf
test
(bad)
jl
das
ret
int3
xchg
sti
cli
fsub
stos
adc
movs
scas
mov
cmps
pop
jo
adc
sub
push
cli
int3
popa
loopne
add
cmc
jne
ret
(bad)
and
mov
aaa
pop
xor
mov
push
or
push
rcr
or
loopne
pop
test
push
xor
push
inc
jp
add
jl
loop
and
shl
cmp
in
jge
arpl
fidivr
xor
in
mov
aam
(bad)
repnz
pop
or
inc
ret
xchg
pop
cmp
popa
xor
ja
mov
jae
call
mov
je
test
repz
inc
fwait
cmp
inc
in
aam
out
iret
jmp
sbb
sar
enter
cmp
mov
mov
jmp
jp
clc
push
mov
sbb
add
lods
inc
or
or
icebp
pop
cld
js
adc
dec
jmp
or
icebp
and
adc
sbb
call
mov
pop
and
mov
hlt
push
aad
cs
fsubr
fisttp
mov
push
or
and
in
sub
pop
xor
mov
mov
jmp
test
rol
xchg
mov
cmp
push
das
dec
fstp
pop
pop
inc
mov
cmp
cmc
dec
or
xchg
mov
stc
xchg
and
hlt
jb
dec
xchg
or
and
xchg
ja
sub
add
cs
jns
add
adc
sbb
mov
int
idiv
add
push
cmp
sub
mov
(bad)
es
lea
push
add
aas
pop
sub
jg
pop
add
scas
mov
in
xor
ret
mov
push
cld
out
mov
inc
jmp
cpuid
push
lar
test
or
jnp
into
loopne
inc
jmp
cmps
mov
je
cs
xor
leave
mov
sub
cmp
add
movs
(bad)
popa
lods
sub
gs
pmulhuw
mov
xchg
(bad)
mov
lea
mov
jb
cmp
and
loop
dec
sbb
aam
pushf
jnp
sub
or
loopne
fdiv
inc
jae
into
out
mov
jno
sub
push
es
js
mov
lds
(bad)
lods
out
jecxz
mov
cmp
cmps
mov
mov
pop
jecxz
call
mov
sub
push
es
fstp
inc
loop
pushf
fldcw
sti
(bad)
stos
movs
aam
iret
std
adc
sub
and
xchg
push
lea
js
mov
jae
cmp
scas
enter
inc
push
push
fcomi
mov
add
icebp
pop
cmps
adc
xchg
mov
test
jo
pop
out
mov
repz
int
inc
push
cmp
ins
mov
sbb
push
pop
jg
jo
dec
sub
or
add
xchg
sbb
shl
js
shl
pop
fidivr
popa
fst
jo
daa
xor
jge
vpsubb
inc
adc
pop
mov
mov
cmp
jnp
sub
cmp
mov
jns
fiadd
movs
sahf
fnstenv
movs
fistp
dec
sub
sub
jmp
mov
aas
ds
xor
retf
outs
retfw
xor
mov
xchg
xor
xchg
mov
int3
mov
push
ss
mov
ja
outs
ror
adc
dec
xor
sub
call
cdq
jl
mov
sub
outs
retf
out
std
cmp
fcomp
popa
(bad)
in
(bad)
icebp
add
enter
gs
movs
pop
jp
enter
stos
fld
sar
fst
lods
push
mov
call
inc
xor
jg
out
ja
iret
mov
ja
je
cmps
test
sti
push
call
lods
js
cmp
xor
aam
jmp
cwde
dec
ins
adc
imul
sti
cmp
xchg
pop
add
call
cmp
das
test
fisub
shl
movs
mov
movs
dec
data16
in
adc
movs
lahf
cld
push
pop
sti
arpl
push
cdq
fisubr
pop
inc
mov
pop
xchg
or
shl
cmc
jl
sub
mov
push
lea
push
test
jmp
or
xor
in
les
repnz
mov
cwde
push
dec
das
mov
jo
fwait
bound
sbb
adc
jge
cdq
jecxz
jmp
fsubr
push
int
or
pop
out
arpl
stos
dec
in
mov
xchg
out
mov
mov
lea
sbb
(bad)
lea
push
sbb
cmps
clc
pop
dec
or
cmc
mov
bound
or
push
sbb
cmp
pop
xchg
pop
stos
test
xchg
and
push
sub
int
in
rol
fdivr
and
shl
and
stc
xchg
push
repnz
dec
xor
rcl
jo
hlt
cmp
mov
mov
pop
out
pusha
arpl
nop
(bad)
jmp
sbb
clc
or
dec
xchg
mov
in
push
cdq
mov
repz
cmp
cmps
mov
(bad)
leave
(bad)
je
and
imul
xchg
xchg
xor
outs
pusha
js
test
mov
sub
pop
cdq
pop
mov
clc
scas
rcl
ror
sbb
mov
push
adc
sub
jge
loop
out
sub
call
sbb
xchg
fst
ret
clc
es
hlt
jo
add
xor
push
pop
jbe
into
and
cmp
lock
push
jns
dec
imul
mov
or
jmp
jmp
out
mov
or
and
jmp
add
dec
push
cmc
mov
mov
sbb
sbb
sub
stos
dec
pop
cld
fcmovb
pop
je
inc
leave
sbb
lods
adc
out
fbstp
jmp
retf
push
stc
inc
jmp
mov
push
and
jnp
xor
sub
mov
xor
je
sbb
pop
pop
mov
adc
repnz
push
adc
xchg
out
pop
fs
test
fsub
ins
fld
xchg
pop
iret
or
stos
mov
fstp
push
movs
mov
sub
mov
and
sub
push
mov
sub
into
mov
lds
mov
test
mov
out
mov
push
aam
or
in
rcl
push
out
push
loope
dec
and
dec
call
lahf
sbb
ds
add
jg
xchg
push
fadd
cmp
(bad)
mov
lahf
aad
xor
cmp
mov
cmps
(bad)
sti
int
mov
arpl
rcr
xor
(bad)
sti
xchg
inc
jne
push
fldcw
test
pushf
sti
mov
and
sub
scas
sbb
dec
xchg
xor
jmp
inc
aad
mov
in
fistp
jmp
xchg
(bad)
cmp
pop
pop
hlt
mov
cli
out
addr16
addr16
mov
js
lds
hlt
sbb
daa
dec
and
test
je
hlt
mov
aam
push
mov
push
call
cld
aam
adc
ret
or
pop
jl
iret
jp
push
in
cmp
cmp
xchg
std
ss
cld
or
mov
adc
adc
mov
push
(bad)
pop
adc
mov
or
xor
push
std
in
retf
sub
fs
or
lahf
out
mov
jle
mov
xchg
jo
sahf
aaa
mov
(bad)
dec
mov
add
repnz
ss
in
dec
inc
lea
xor
jg
loop
lock
out
inc
(bad)
out
adc
jo
jnp
dec
xor
mov
sbb
fmul
jo
lock
pusha
ins
dec
push
dec
sar
fwait
shl
dec
int
fcmovbe
repz
mov
je
sar
fdivrp
sub
sub
stos
retf
sbb
inc
fldenv
gs
dec
lea
fidivr
dec
sbb
dec
ret
adc
push
outs
jle
push
push
xor
mov
and
rep
adc
fsub
daa
jb
add
ret
rol
xchg
mov
jecxz
pop
mov
call
test
ins
mov
std
fdivp
push
cmc
leave
pop
sbb
jno
dec
lds
ss
cmps
xchg
or
in
mov
push
out
mov
jnp
xchg
jge
ds
jge
pop
push
(bad)
cld
das
xchg
sub
(bad)
push
xor
retf
xchg
add
xor
daa
loop
pushf
push
sbb
adc
jp
jae
sub
test
fnsave
mov
adc
mov
jae
sub
mov
push
adc
test
xchg
sti
mov
nop
mov
fiadd
pop
dec
ret
push
iret
imul
addr16
sbb
outs
(bad)
das
sub
(bad)
lahf
jmp
test
ficomp
ds
cmp
inc
fcom
ins
dec
mov
cwde
xor
je
call
jno
push
add
cmp
int3
enter
inc
inc
inc
repnz
push
inc
mov
sbb
sbb
js
jg
xchg
out
jmp
mov
ja
cmp
pop
cmp
les
adc
icebp
xchg
aaa
jp
sbb
jae
out
(bad)
mov
(bad)
cmp
cdq
cli
or
call
daa
mov
outs
iret
xor
cmps
adc
mov
xchg
xchg
ss
pop
push
xchg
hlt
div
adc
mov
jp
mov
mov
out
push
xor
test
daa
sub
dec
or
dec
retf
rcr
movs
pop
inc
add
dec
xchg
pushf
(bad)
scas
sub
scas
cmp
loopne
imul
stos
xchg
in
leave
push
jl
mov
xchg
sub
xor
mov
addr16
sbb
call
test
pushf
sub
pusha
sar
jae
jmp
mov
push
push
sar
sub
das
pop
xor
jmp
mov
adc
movs
and
fwait
lds
and
sub
pop
pop
push
xchg
(bad)
xchg
(bad)
sub
xor
pop
into
ret
pop
bound
add
mov
and
ret
loop
lock
jp
cmp
xchg
scas
mov
je
add
push
out
and
cli
gs
jg
imul
add
sub
push
icebp
sub
into
std
xor
xchg
ret
aas
outs
pop
(bad)
pop
pusha
jo
fistp
add
mov
fscale
sub
dec
inc
push
inc
mov
in
add
call
int
jecxz
dec
ror
cmp
adc
ds
jae
mov
inc
lahf
ret
jp
add
sub
(bad)
fmul
inc
ss
jb
(bad)
aas
sbb
jp
rol
iret
add
adc
cmp
loop
add
out
data16
push
call
add
cmp
pusha
mov
and
call
inc
or
jnp
in
mov
xor
jbe
repz
fsubr
jmp
retf
das
sbb
fwait
repnz
psrlq
ret
movs
pop
jb
or
add
sbb
cdq
push
and
or
xchg
cmp
or
repnz
add
xchg
loope
ret
mov
outs
jns
fwait
and
sub
or
fdivr
lds
jge
scas
fstp
inc
ret
cmp
scas
push
call
cmp
ds
shr
sub
mov
inc
mov
cmp
xor
dec
dec
lock
out
jae
add
out
add
or
fisttp
fwait
js
ja
inc
xchg
popa
xor
dec
sub
(bad)
movs
add
inc
ret
push
pop
mov
out
cli
xor
cmp
loope
inc
cs
cmp
add
adc
and
xchg
sub
ret
jg
or
jno
mov
fst
cdq
out
out
xlat
mov
xchg
jno
jnp
xor
push
sahf
push
mov
xchg
adc
ret
stc
sub
jecxz
retf
pop
mov
xor
xchg
retf
dec
pushf
push
mov
sahf
dec
(bad)
fucom
adc
inc
lods
mov
mov
popf
cmp
out
push
out
xchg
inc
mov
nop
pop
(bad)
jb
jmp
aaa
nop
fsubr
jmp
retf
mov
push
jb
mov
js
fwait
add
jl
shr
jg
add
ins
and
and
mov
fs
call
push
dec
sbb
icebp
pop
push
add
add
cmp
cmps
sub
add
fisttp
xor
jmp
ins
jno
cmp
sbb
ret
pcmpgtw
les
xchg
clc
movs
lahf
idiv
mov
shr
push
imul
out
push
iret
mov
xchg
fnstsw
xchg
nop
movs
mov
bswap
xchg
cmp
xchg
sbb
int3
mov
int3
fnsave
rcl
inc
repz
retf
jmp
clc
adc
fwait
mov
retf
mov
cmp
neg
lds
cwde
cs
cmp
jbe
fwait
lods
mov
sub
and
test
dec
sub
cmp
mov
imul
dec
in
aam
sar
xchg
jp
xchg
jg
push
popf
cmp
int
jo
out
or
adc
(bad)
cmps
cs
sub
pusha
jns
push
xchg
jl
scas
jp
jle
xor
pop
mov
inc
add
in
push
ds
dec
xchg
add
iret
stos
add
mov
std
jge
es
clc
jno
inc
clc
xor
push
pop
retf
dec
lods
outs
lock
dec
ret
sti
sbb
iret
mov
cmps
add
adc
ret
sar
mov
out
add
mov
mov
mov
sub
and
cmp
aad
inc
out
in
stc
out
jbe
stc
ins
jns
jmp
fnstcw
dec
push
inc
dec
jge
xor
jecxz
jae
cdq
jmp
sub
mov
mov
fdivr
push
mov
fsub
jmp
out
mov
mov
xchg
hlt
jmp
fild
nop
mov
cmp
inc
xchg
mov
pop
xchg
pop
int3
mov
fldenv
pushf
hlt
repnz
mov
or
xchg
js
xor
cmp
mov
xor
dec
and
out
ficom
lea
mov
outs
mov
repz
mov
or
mov
js
lock
mov
fidiv
xchg
jmp
adc
into
cwde
jmp
stc
xor
cs
xchg
sub
xchg
int
pop
or
sub
in
fdivr
push
cwde
inc
ins
adc
fisttp
rcl
lds
xlat
push
ds
call
les
inc
cdq
repnz
ret
fstp
call
pop
jo
lock
xchg
and
inc
call
aas
inc
fsub
xor
xlat
gs
cmc
pop
loopne
cmp
lods
loope
cmp
cmps
inc
mov
mov
sub
push
push
pop
cmp
out
ror
xor
aad
mov
xor
jl
dec
pop
and
adc
outs
addr16
xchg
mov
pop
or
leave
clc
sti
loopne
daa
ret
jl
mov
and
in
mov
dec
shr
or
push
and
fidivr
(bad)
cmp
jp
pusha
aas
xchg
sub
mov
mov
push
push
(bad)
cld
retf
fild
add
enter
mov
cli
out
xchg
mov
adc
stos
sti
(bad)
std
mov
and
scas
push
call
movs
into
dec
outs
test
xchg
repnz
rcr
inc
pop
sub
and
enter
adc
adc
add
sub
pop
mov
adc
das
pop
loopne
lock
mov
sbb
movs
inc
in
pop
sbb
mov
push
out
and
(bad)
aad
jns
call
(bad)
sbb
shl
and
xchg
cdq
mov
mov
and
nop
or
xor
cli
nop
xor
(bad)
mov
mov
jo
imul
ja
xchg
mov
bound
rdpmc
dec
mov
popa
fnstsw
mov
clc
and
dec
ds
pop
mov
mov
fist
sub
mov
movs
mov
ja
push
push
popf
jl
stos
pop
fild
imul
sbb
and
sub
hlt
test
xor
out
or
adc
or
gs
inc
mov
add
or
lds
cmp
cmps
outs
push
popa
test
test
dec
dec
and
mov
enter
ins
repz
popf
jmp
lds
sbb
es
sub
es
push
es
mov
mov
or
jae
pop
mov
or
dec
aad
les
jb
cmc
jg
loop
out
cmp
lea
jmp
xor
shl
ror
call
jle
mov
fmul
xor
retf
mov
pop
enter
cmp
cmp
jmp
pop
sbb
push
jecxz
movs
ret
mov
outs
neg
clc
icebp
jecxz
cli
out
xlat
ret
cmp
xor
dec
cs
inc
cmp
sbb
aaa
out
sbb
adc
fld
jge
mov
gs
jo
mov
inc
jl
xchg
enter
loop
mov
aaa
xchg
xor
or
outs
jnp
mov
ss
cmc
ret
scas
pop
scas
jmp
or
outs
inc
or
or
jbe
test
sub
(bad)
or
mulps
out
loop
repz
pusha
dec
cli
repz
jl
ds
in
adc
ins
les
mov
rcl
loopne
dec
mov
stos
outs
je
into
lods
pusha
test
and
retf
dec
sub
fcom
clc
mov
xchg
inc
call
(bad)
scas
adc
mov
push
ret
fistp
fimul
pop
enter
and
or
push
mov
nop
xchg
movs
(bad)
mov
mov
lods
pusha
ins
or
mov
cmp
add
mov
adc
int3
hlt
xchg
in
or
jp
mov
pop
fist
adc
pop
fild
cmps
pop
mov
sbb
push
call
inc
retf
aam
(bad)
and
sub
in
inc
cmps
sti
pop
cwde
loop
jl
jns
aad
daa
data16
lds
xchg
inc
inc
sbb
mov
fbstp
ins
icebp
iret
sub
retf
aam
add
and
jl
cmps
adc
(bad)
int3
icebp
or
scas
icebp
xchg
mov
fidiv
xchg
aaa
sbb
mov
mov
sub
or
mov
add
out
xor
mov
std
aaa
adc
mov
int3
stos
ja
out
inc
push
cmp
fidiv
sbb
call
into
in
lods
push
cmp
imul
xor
(bad)
rcl
imul
lea
imul
mov
movntps
adc
lds
cmps
jmp
mov
fnsave
xchg
xor
ret
shl
dec
xor
jb
push
xor
mov
xchg
cs
mov
mov
inc
jle
xor
mov
push
out
or
mov
test
sub
mov
(bad)
fsub
inc
mul
retf
xchg
test
cmp
data16
retf
lea
pop
dec
test
push
stos
jl
(bad)
xor
test
sti
rcl
aaa
push
pop
jg
mov
dec
icebp
sbb
push
dec
add
pop
scas
or
out
das
and
pusha
mov
movs
int
sahf
xor
sub
(bad)
and
jg
arpl
xchg
aam
movs
test
cmp
mov
pop
cmps
mov
cli
jb
push
call
pop
mov
shl
cs
dec
retf
cwde
cmp
scas
xchg
mov
push
or
inc
test
mov
push
cmps
stos
je
cmp
aad
mov
dec
lods
sub
lock
mov
or
(bad)
sbb
cmp
lea
push
dec
pushf
jle
mov
stc
xchg
jp
jmp
xchg
cmp
sub
pop
retf
xlat
ins
ja
mov
mov
test
aam
inc
mov
sub
fdiv
or
or
pusha
daa
fwait
cdq
repz
cmp
cmp
repnz
(bad)
add
jbe
fs
inc
adc
xchg
js
push
int
dec
push
cmp
test
inc
(bad)
mov
ds
mov
dec
jo
jno
xor
and
fsub
shr
xor
xorps
int3
inc
scas
bound
or
jmp
cmp
adc
mul
inc
jo
dec
test
jle
adc
jmp
or
or
pop
bound
in
sbb
adc
clc
fstp
sub
mov
mov
xor
pop
inc
(bad)
jno
add
sub
add
cmp
int3
or
(bad)
imul
std
mov
push
mov
xor
push
gs
stc
add
scas
test
dec
mov
je
movsx
mov
push
cmp
pop
xor
cdq
jg
xchg
lahf
lea
in
push
ret
shl
inc
fimul
mov
ins
push
cmps
mov
or
jg
push
or
mov
test
add
pop
push
jecxz
das
scas
pop
adc
xor
addr16
mov
jne
retf
cmps
mov
xor
pop
lods
mov
fs
push
or
cmps
cmp
adc
fistp
and
fbstp
jo
fs
inc
or
jne
inc
xor
out
sbb
movs
loope
sbb
in
and
cmc
push
dec
test
in
mov
test
mov
lds
shl
sbb
jb
sbb
push
dec
jae
xchg
cmp
pop
jmp
call
adc
mov
inc
sbb
jmp
adc
mov
mov
cs
xchg
pusha
pop
test
inc
test
and
dec
les
rol
or
clc
iret
push
test
ret
jmp
jno
sbb
ret
pop
inc
in
and
mov
cwde
lods
sbb
call
push
pop
pop
xor
dec
repnz
pop
sub
ins
ret
outs
cwde
mov
aam
aas
or
(bad)
pop
push
push
es
ror
sub
leave
mov
mov
cld
retf
mov
dec
xchg
push
push
push
mov
inc
adc
es
rol
(bad)
cli
mov
mov
sbb
imul
adc
sbb
addr16
xchg
or
lea
cs
lods
cmp
and
push
mov
ret
pop
mov
jp
popf
push
jne
push
outs
ja
outs
xor
mov
rcl
ja
dec
frstor
cmp
movs
mov
jno
rcl
mov
dec
sbb
add
ud0
add
test
out
dec
mov
lea
fisub
js
and
jo
les
push
mov
cmps
xchg
test
std
retf
inc
xchg
adc
fst
test
cmp
pop
mov
adc
inc
add
sub
dec
pop
cmp
js
cwde
mov
sbb
push
push
(bad)
xchg
inc
mov
dec
pop
inc
or
test
cmp
jmp
push
push
mov
mov
(bad)
(bad)
jbe
fs
fwait
cdq
xor
rcl
in
sub
cmp
jg
jnp
xchg
mov
iret
neg
jne
fistp
add
and
or
xor
call
mov
loop
mov
sbb
test
mov
pop
pop
call
mov
mov
push
(bad)
imul
fisubr
dec
adc
cmp
xor
xchg
fwait
out
mov
dec
adc
cmps
ss
fadd
mov
std
pushf
jmp
test
jg
aad
js
inc
mov
(bad)
xchg
in
pop
out
mov
cmps
pop
mov
jp
(bad)
add
add
jo
sbb
sub
dec
jecxz
sub
jns
out
in
push
data16
int3
pop
push
mov
ss
ret
test
xchg
push
popf
rcl
xchg
mov
jae
pop
les
imul
(bad)
mul
mov
adc
sbb
std
bound
clc
xor
jnp
mov
inc
sbb
mov
adc
fwait
stos
pop
(bad)
inc
ds
jmp
mov
jb
shl
aaa
adc
or
(bad)
cmps
or
cli
ret
inc
jns
push
mov
pop
fldenv
into
aas
dec
ins
and
lds
add
push
jo
cs
jo
jg
cmp
pushf
push
xor
dec
(bad)
fist
std
mov
jg
jo
mov
xchg
in
iret
jmp
rcl
or
push
pushf
and
repnz
mov
jbe
ror
mov
inc
push
lods
js
jnp
sahf
fisubr
jge
sbb
xchg
xor
lds
xor
pop
sub
mov
ins
seta
rcr
inc
inc
dec
pop
icebp
icebp
pop
sbb
mov
mov
ror
inc
mov
sub
or
mov
pop
pusha
sbb
pop
inc
dec
loope
sbb
adc
cmp
dec
adc
inc
neg
ja
xchg
mov
inc
and
xchg
cmp
gs
es
mov
stos
jmp
lods
and
xchg
fwait
sbb
inc
(bad)
test
pop
mov
jp
call
xchg
mov
retf
std
and
jg
inc
push
arpl
mov
fdivr
jno
sbb
jg
outs
mov
retf
popa
sbb
cmp
enter
cmp
sbb
dec
lds
ins
pop
inc
sub
lea
retf
hlt
outs
in
out
ins
cmc
sub
cmp
enter
idiv
nop
cdq
scas
xchg
sahf
xor
jp
cli
mov
pop
push
mov
in
push
jg
pop
addr16
std
push
cmp
scas
dec
mov
cmp
mov
mov
(bad)
rcr
mov
push
fyl2x
les
stos
mov
push
fdivrp
jle
mov
push
loopne
shl
cli
and
add
test
inc
call
imul
dec
xchg
bound
fild
mov
ret
in
xchg
jge
aam
int
dec
pop
jnp
aaa
ja
push
mov
and
xor
ins
cwde
not
daa
sbb
xchg
cli
inc
jecxz
popa
xchg
and
fldcw
cmp
retf
pop
pop
cmps
dec
pushf
scas
in
jns
jle
shl
popa
in
outs
xchg
xchg
xor
push
(bad)
cs
and
aad
jp
jno
in
dec
sbb
mov
lahf
rol
sbb
loopne
outs
ds
jmp
sub
das
jbe
fwait
aaa
ret
cmps
stos
and
pop
mov
ficomp
and
pop
cmp
push
call
mov
call
repz
jge
sahf
sub
or
loope
in
sub
(bad)
cdq
pop
adc
popa
xor
stos
repnz
push
in
not
sub
jle
xchg
xchg
dec
add
in
adc
popf
jns
popf
sub
cmps
pop
or
dec
inc
std
push
cld
sub
aaa
jecxz
or
xchg
out
push
call
divps
sbb
sbb
loopne
call
popf
mov
stc
pop
ins
xor
pusha
addr16
sahf
add
dec
mov
adc
movs
rcr
or
cli
popa
push
adc
dec
push
ss
dec
pusha
mov
mov
(bad)
lods
push
das
neg
adc
adc
and
sbb
retf
lods
adc
nop
jmp
sar
inc
icebp
iret
iret
push
mov
mov
ret
sub
jmp
repnz
test
popw
sub
inc
inc
jp
mov
ficomp
popa
retf
mov
push
lods
mov
fsubr
jne
and
arpl
lods
jecxz
mov
xchg
mov
or
mov
gs
test
push
add
cmp
pop
push
sbb
xchg
bound
cmp
imul
inc
pop
hlt
xchg
xchg
xor
sbb
or
test
sahf
arpl
pop
pop
movs
das
div
neg
mov
loopne
and
sub
cmp
scas
and
xchg
dec
push
test
lds
pop
movs
xor
sub
mov
daa
pop
mov
ins
push
xchg
fdiv
push
(bad)
adc
ins
test
jecxz
adc
add
dec
vpmaxsd
icebp
jno
push
jns
push
shl
inc
inc
add
pop
mov
int
sbb
cmp
scas
pop
and
jmp
or
iret
xor
xlat
mov
aaa
dec
cmp
sub
imul
dec
cmp
(bad)
xor
push
cmp
mov
loop
stc
cdq
add
mov
aad
movs
xchg
pop
mov
sbb
sub
fisttp
popa
outs
jg
cmp
pop
or
or
ret
add
inc
sahf
add
pop
jae
das
or
sbb
pushf
mov
push
and
xor
movs
xchg
bound
pushf
mov
cmp
jmp
shl
push
sti
jns
sbb
dec
or
stos
das
mov
mov
dec
or
or
ja
fisubr
mov
dec
retf
xchg
add
fbld
mov
push
out
ss
add
or
adc
push
daa
xchg
repnz
push
jecxz
into
mov
mov
pop
out
imul
sar
cmp
test
call
(bad)
retf
(bad)
jae
and
in
push
inc
loope
(bad)
push
into
in
leave
mov
bound
push
or
leave
(bad)
fs
jecxz
xchg
repz
cmp
es
clc
pop
mov
ins
imul
mov
lds
push
sub
add
rsqrtps
xchg
xchg
add
pop
dec
(bad)
outs
movs
push
cdq
out
pusha
adc
push
sub
cmc
sbb
push
jge
pop
jl
xchg
jmp
push
add
xchg
ins
hlt
pushf
loopne
cmp
lea
ss
or
cmp
sbb
movs
pop
and
push
dec
dec
jb
dec
jne
imul
cmps
lock
in
addr16
adc
cs
cmp
std
xchg
lods
adc
loope
out
sbb
aad
movs
hlt
cmps
in
and
jno
inc
adc
into
pop
out
lods
daa
or
sqrtps
gs
out
inc
mov
rcr
fs
push
fiadd
xchg
int3
bound
inc
mov
sbb
ds
rcl
outs
jne
dec
call
out
adc
cmps
aas
jmp
jae
int3
adc
dec
ins
jmp
xchg
adc
mov
inc
jno
jp
xchg
das
push
stc
inc
inc
pushf
out
cmps
jbe
test
push
push
ret
ja
xchg
fcmovne
test
xlat
lahf
jae
movs
pop
mov
out
and
pop
xchg
popa
push
loop
cmp
cdq
lods
push
fisubr
out
mov
xlat
div
jo
xor
imul
ins
fwait
scas
js
mov
add
push
stos
stc
sub
and
xchg
imul
hlt
pusha
push
sub
jge
inc
xor
mov
inc
push
pop
and
push
loope
hlt
or
sbb
push
sbb
stos
xor
dec
jno
mov
fs
sbb
leave
out
(bad)
xlat
lds
pop
add
sbb
sub
inc
mov
mov
jmp
lds
fcom
cmp
inc
outs
push
push
inc
mov
rcl
dec
popf
pop
mov
push
mov
mov
dec
jne
int3
test
and
dec
loopne
nop
sbb
jl
div
call
out
mov
(bad)
lock
and
(bad)
adc
dec
and
adc
sysenter
pushf
jge
aas
out
or
fs
cmps
push
cmp
xchg
nop
push
sub
fninit
aam
sbb
(bad)
adc
call
dec
pop
mov
lock
xchg
jl
adc
or
in
adc
push
sti
adc
add
call
adc
add
pop
cmp
fisubr
repz
sahf
int
stos
shl
jg
repz
loope
mov
pop
jmp
jge
and
or
and
je
dec
scas
push
stos
lea
test
pop
xor
mov
xchg
add
js
jne
(bad)
push
adc
lock
mov
outs
fiadd
into
and
pop
mov
aas
push
mov
clc
scas
dec
mov
(bad)
pop
adc
mov
jge
jg
mov
cs
xor
push
mov
jno
fisub
ins
bound
daa
cmp
or
in
(bad)
in
sub
ficom
lock
shr
push
outs
push
scas
push
mov
mov
in
cmps
mov
and
lds
adc
xchg
mov
or
jns
adc
ret
ret
mov
lods
sbb
mov
leave
cmp
xor
pop
dec
sti
outs
jb
clc
je
out
push
mov
mov
fisttp
fldcw
ins
mov
call
push
push
jne
dec
cdq
inc
clc
lahf
into
mov
jbe
sbb
ins
mov
pop
mov
push
data16
fld
mov
rol
scas
hlt
lods
inc
cld
jb
test
(bad)
sti
repnz
mov
cmps
push
sub
sub
sahf
xchg
mov
sbb
pop
sahf
popa
inc
xchg
fisub
inc
xor
cmp
(bad)
sub
cmp
call
mov
sbb
jmp
and
and
scas
push
les
(bad)
stc
fcmovnu
dec
fistp
pop
sti
leave
(bad)
popa
mov
mov
adc
push
ret
daa
sub
shl
pop
dec
in
(bad)
xchg
jle
ficom
idiv
popa
push
pop
(bad)
mov
(bad)
shl
or
gs
mov
jo
hlt
adc
sub
xor
(bad)
scas
adc
arpl
rol
xlat
adc
(bad)
out
add
jecxz
sbb
push
enter
fidiv
mov
cmp
and
jmp
pop
or
inc
inc
stos
cmp
js
stos
(bad)
ror
push
daa
sbb
adc
ret
clc
add
cmp
inc
mov
fs
lods
sub
mov
scas
ins
arpl
push
call
adc
mov
push
add
bswap
push
lods
mov
mov
mov
push
push
ds
add
sbb
cmp
clc
in
add
cmp
lock
adc
xchg
pop
aaa
mov
dec
xlat
test
in
push
sub
enter
cmp
xchg
or
xor
push
ins
sbb
pop
pop
and
mov
and
nop
retf
fbstp
and
inc
addr16
push
cmps
push
retf
cmp
cdq
je
mov
add
dec
jp
mov
inc
(bad)
test
cdq
call
pop
mov
test
cmps
mov
(bad)
mov
arpl
cli
ret
test
push
enter
aad
lods
int3
out
int3
shl
imul
aaa
xchg
rcl
popf
icebp
jl
jae
daa
daa
push
xor
and
movs
imul
mov
adc
jl
sbb
jmp
ret
test
lods
mov
mov
cli
daa
jne
sub
sub
push
scas
mov
or
xchg
out
and
sub
(bad)
cmp
out
or
jmp
lods
xchg
xchg
imul
cld
pop
lods
cmp
xchg
sbb
test
sbb
sub
push
sbb
mov
call
into
add
cwde
sbb
mov
ss
push
cld
test
rol
mov
mov
inc
mov
sub
retf
iret
pop
dec
adc
mov
push
fistp
cmps
(bad)
lds
fsubr
mov
xchg
dec
or
inc
cmp
dec
mov
fsubr
jmp
mov
iret
and
dec
adc
nop
or
cmp
xor
mov
fs
nop
jns
add
adc
xor
mov
push
mov
icebp
int
pop
test
leave
jle
cmp
or
mov
xor
fisttp
adc
lea
pop
dec
or
and
ins
popa
scas
cs
lahf
ret
adc
mov
mov
mov
jecxz
nop
adc
or
mov
xor
jp
aaa
sbb
call
pop
dec
mov
clc
jp
push
movs
xlat
xchg
daa
mov
aaa
(bad)
int
shl
cmp
xchg
(bad)
or
dec
js
lds
inc
std
and
xchg
loope
movs
adc
pop
sub
mov
rcl
jno
movs
cwde
jmp
or
xchg
popf
jae
retf
in
sub
sub
aaa
adc
mov
je
les
movs
retf
inc
aad
popa
jecxz
jecxz
jns
push
out
add
shr
push
popa
mov
ror
pusha
xchg
pop
xor
(bad)
xchg
cmc
dec
aam
dec
popa
mov
jae
fwait
mov
jbe
fsubp
mov
mov
in
pop
xor
jae
adc
sub
xlat
sub
hlt
cmc
dec
inc
leave
fmul
sub
retf
xor
and
xor
pop
and
cdq
mov
cmp
sub
cmp
loope
or
push
mov
pop
cmc
mov
mov
test
clc
jl
jns
rol
outs
sbb
pop
dec
xchg
dec
mov
pop
test
pushf
sub
inc
mov
dec
add
adc
aad
mov
sar
stos
xchg
out
nop
test
in
stos
fadd
and
adc
(bad)
ror
addr16
jnp
mov
fisttp
fld
ds
idiv
mov
pop
popa
addr16
push
xchg
fcmove
sbb
push
arpl
aad
dec
adc
call
sub
mov
xor
(bad)
cs
adc
inc
adc
xor
scas
pop
cmp
es
or
and
stos
and
inc
mov
cmps
fmulp
dec
xchg
inc
push
cmp
mov
push
push
xchg
jp
icebp
lock
test
and
bound
jns
popf
adc
cld
dec
shl
sbb
pop
icebp
inc
mov
xchg
aad
cmp
(bad)
adc
dec
mov
in
ja
dec
mov
sub
mov
aaa
fs
aam
mov
jb
mov
fucomip
jae
xor
push
xor
cmps
pop
sub
imul
rol
shl
mov
arpl
jmp
(bad)
sbb
xor
inc
push
in
sbb
pop
mov
and
iret
pop
or
cmp
add
scas
or
outs
jae
mov
jae
dec
lock
and
les
mov
add
cld
push
or
ret
fdiv
test
mov
(bad)
out
fmul
dec
mov
out
mov
adc
inc
scas
mov
mov
jae
cmp
sub
mov
movs
xchg
cmp
cmps
mov
push
mov
imul
ror
mov
ret
sub
mul
jge
jecxz
mov
aas
test
push
mov
xor
mov
sub
sbb
outs
stc
cmp
mov
ins
inc
not
inc
jno
loope
jecxz
inc
mov
xlat
dec
cmp
out
ret
dec
xchg
inc
and
ja
push
loop
ins
jno
cli
movs
push
adc
cmp
pop
push
stos
daa
out
or
sbb
out
xchg
lea
dec
(bad)
(bad)
jecxz
xchg
xor
push
fst
lods
outs
mov
les
xlat
icebp
nop
mov
aaa
test
int
jmp
imul
aad
dec
ins
push
arpl
or
xchg
imul
pop
imul
xor
(bad)
in
jno
inc
mov
jmp
mov
aaa
cmp
mov
jl
or
(bad)
mov
fnstenv
or
sbb
and
inc
dec
cmp
cs
ret
add
and
push
push
sub
jnp
cmp
ss
mov
xor
sub
mov
xor
and
adc
out
mov
xchg
inc
push
pop
retf
pop
js
pop
stc
into
push
in
pushf
cwde
sbb
add
adc
jnp
or
loope
js
sbb
push
xchg
jb
push
hlt
or
push
call
sbb
mov
(bad)
cmp
push
test
jge
add
and
fs
sbb
pop
lods
loopne
lds
outs
pop
jmp
in
add
jmp
ins
les
pop
and
add
jl
retf
ficom
ret
inc
or
xchg
mov
fcomp
lds
push
les
adc
cmc
test
dec
fmul
scas
dec
loope
call
sahf
add
fcomip
ss
cld
jb
sbb
(bad)
mov
pop
pusha
or
jb
mov
and
pop
dec
cmps
sbb
stos
mov
mov
sbb
push
pop
jb
sub
arpl
mov
mov
adc
and
cmp
adc
enter
mov
xor
and
cmps
test
in
lods
in
mov
fisttp
(bad)
fucom
in
addr16
outs
or
daa
xchg
sbb
jle
dec
add
or
aaa
sbb
(bad)
jno
mov
loope
ja
push
jo
ret
xchg
sbb
out
and
das
retf
jmp
iret
stos
(bad)
in
fimul
jg
aaa
jne
das
or
mov
fcom
(bad)
fild
repz
jnp
inc
aaa
mov
cmps
add
std
je
out
test
adc
in
adc
rcl
or
out
inc
repz
inc
scas
pop
iret
cmp
lahf
ret
fistp
(bad)
pop
shl
dec
push
jg
adc
jbe
mov
sub
sbb
stos
xlat
xchg
inc
lods
fisubr
pop
pop
sar
pop
icebp
add
inc
sar
pop
jg
retf
inc
jmp
xor
cli
dec
test
int
jbe
adc
(bad)
addr16
ror
cli
dec
fistp
jno
test
into
mov
stc
cmp
push
mov
mov
and
(bad)
(bad)
sti
gs
js
test
pusha
or
push
sub
xor
js
fsubr
out
dec
add
imul
ficom
xor
mov
ss
(bad)
(bad)
or
push
sub
out
rol
jnp
adc
inc
fstp
mul
lock
scas
push
test
test
jle
pop
call
fsub
popf
dec
add
inc
xchg
add
mov
mov
push
cdq
pop
sar
(bad)
repz
mov
jae
add
pusha
lds
and
retf
test
cli
jne
sbb
or
(bad)
xor
push
xchg
(bad)
test
xchg
adc
cmp
push
pop
popf
adc
dec
mov
stc
scas
pop
or
loopne
pop
dec
pop
push
mov
test
cld
hlt
mov
es
call
int
leave
movs
cs
xchg
ror
jno
ret
sbb
and
add
mov
push
adc
sub
and
mov
xor
jae
xchg
push
fild
or
retf
mov
push
inc
pop
sbb
adc
jo
sbb
push
lock
sub
movs
ret
and
ror
mov
cs
gs
aad
sbb
mov
xchg
xor
in
mov
push
dec
dec
sbb
cdq
ret
call
ja
icebp
std
jp
jecxz
dec
adc
or
addr16
add
call
xor
inc
and
push
lahf
jne
data16
idiv
test
mov
push
mov
and
mov
inc
scas
or
pusha
int3
ss
cwde
mov
and
dec
or
sub
pop
and
pushf
sti
sub
dec
cmps
cmp
stos
xchg
(bad)
fcomp
jle
sub
mov
or
jg
xchg
mov
aas
(bad)
mov
push
cmps
loopne
nop
pusha
dec
pop
xchg
xor
daa
sub
imul
out
mov
mov
retf
push
jbe
mov
sub
leave
mov
cmp
test
loop
and
dec
shl
rol
inc
in
mov
jl
cmp
call
pop
ds
pop
in
test
inc
push
pop
mov
dec
outs
sbb
mov
adc
push
fstp
popa
sbb
cdq
adc
or
dec
inc
inc
fcmovu
leave
es
into
jmp
imul
hlt
gs
mov
pusha
dec
add
jp
mov
jl
es
arpl
aad
mov
adc
dec
jl
lea
or
shr
shr
es
scas
loope
loop
mov
xchg
dec
ja
test
ss
arpl
mov
xor
arpl
imul
cld
sub
pop
jo
stos
and
or
or
shl
call
pop
(bad)
mov
cmps
cli
imul
stos
push
cdq
popf
loope
movq
and
icebp
jo
les
ret
mov
pop
or
adc
je
hlt
call
retf
push
dec
fst
iret
gs
out
or
jne
xchg
outs
cld
imul
pop
add
xchg
push
lock
cmp
sub
jmp
push
mov
sub
push
sub
pusha
mov
scas
add
push
sti
sbb
cmp
ret
xchg
das
dec
shl
jle
retf
or
repnz
cwde
aam
mov
cmp
fiadd
push
imul
mov
jo
in
(bad)
int
dec
adc
and
pop
pop
icebp
or
mov
pop
in
rcr
push
adc
sbb
out
inc
add
adc
sti
scas
dec
rcr
sbb
test
inc
das
ret
(bad)
out
loope
sbb
out
xchg
jbe
arpl
pop
pop
mov
jb
sbb
mov
pusha
mov
xchg
loopne
pop
inc
jne
nop
xlat
lock
mov
(bad)
mov
sub
ret
lahf
out
fwait
dec
je
xor
xchg
push
cmp
fldcw
jle
outs
cmp
rcl
rcr
gs
xchg
sbb
sbb
retf
jns
add
xchg
std
push
sahf
aam
cmp
jne
aas
das
mov
movs
icebp
dec
js
jp
test
jmp
cmp
and
jno
adc
cmp
nop
in
pop
pop
or
loopne
pop
(bad)
xchg
(bad)
das
add
inc
fnstenv
adc
sub
mov
ret
sbb
mov
adc
push
sar
mov
mov
sub
jo
enter
push
call
lods
je
add
cmp
pop
xor
adc
jl
adc
add
adc
pop
sbb
not
lea
dec
push
inc
mov
inc
xchg
aam
mov
fisub
sti
iret
imul
scas
loop
cwde
shl
pusha
lods
mov
sbb
(bad)
jmp
outs
mov
dec
daa
mov
popa
mov
imul
fiadd
sub
imul
mov
xor
xchg
mov
sbb
(bad)
mov
or
adc
cwde
call
sub
js
popa
push
repz
dec
xor
(bad)
mov
and
iret
sbb
inc
popa
pop
rcl
outs
jnp
cdq
pop
loop
(bad)
imul
sar
(bad)
neg
inc
into
addr16
pusha
ret
(bad)
push
leave
and
into
push
mov
xor
push
fwait
repnz
add
shr
fisubr
jle
arpl
test
ffreep
imul
aas
xchg
and
enter
pop
jl
stc
inc
sbb
pop
and
test
add
jecxz
mov
or
push
inc
push
and
mov
cmps
pop
dec
push
and
xchg
xor
xchg
xor
adc
aas
or
iret
xor
push
push
mov
ins
xchg
lods
mov
jne
in
fsubr
adc
(bad)
push
or
sbb
loopne
and
push
stos
ins
mov
xchg
inc
repz
add
cmp
daa
callw
(bad)
xchg
adc
jns
cmp
stos
outs
stos
push
sbb
xchg
js
add
cmp
mov
retf
test
xchg
imul
jo
data16
ficom
cmp
xchg
or
push
pop
sahf
xchg
add
(bad)
dec
dec
and
ret
clc
popa
cmp
loope
mov
shr
adc
lahf
sbb
mov
xchg
ret
ror
sbb
sub
aam
ja
push
cmc
nop
sbb
jle
lods
repnz
and
mov
cmc
sbb
sub
cwde
cli
jmp
cmp
lods
dec
push
inc
xor
mov
aaa
or
mov
mov
into
add
jecxz
xchg
(bad)
cmp
aas
loopne
daa
ins
mov
retf
retf
xchg
sbb
sub
adc
jnp
outs
mov
jle
cmps
push
push
push
dec
cmc
push
inc
or
adc
mov
xchg
sbb
mov
pop
and
and
pop
dec
call
add
push
repz
xchg
ja
jp
lahf
retf
sti
loopne
adc
cmp
jmp
pop
jmp
test
push
mov
add
sub
jo
or
lock
hlt
and
jl
push
imul
out
lds
retf
fwait
xchg
js
je
ficom
rcr
sub
pusha
scas
loop
xchg
adc
fdivr
iret
pop
(bad)
push
mov
add
mov
dec
and
jns
lds
scas
(bad)
fadd
(bad)
fisub
jo
mov
dec
aas
test
mov
addr16
cmp
outs
add
mov
pop
xor
and
mov
add
dec
int
ins
push
pop
mov
jne
push
daa
inc
sti
test
pusha
mov
xor
cmp
pop
push
sbb
jo
mov
aam
sbb
cwde
loope
sbb
jno
adc
fsubr
int3
mov
gs
push
ror
iret
mov
jmp
xor
xor
(bad)
mov
xchg
adc
jp
jb
add
jecxz
rcr
(bad)
dec
mov
daa
mov
(bad)
adc
mov
or
(bad)
outs
test
and
fwait
push
pop
push
push
(bad)
push
fstp
pop
addr16
aaa
or
jne
sub
cs
outs
and
push
fwait
loopne
cmp
or
mov
add
jae
add
push
or
jnp
jbe
add
ins
(bad)
cmps
arpl
mov
push
das
and
scas
outs
mov
pop
xlat
sub
(bad)
scas
push
pushf
aaa
in
inc
test
dec
mov
inc
aas
out
test
popa
push
mov
add
stc
sub
cld
pop
add
xor
iret
push
push
jge
imul
inc
xchg
loop
(bad)
cmps
(bad)
xchg
cmp
into
pop
sahf
icebp
repnz
lahf
cmp
pusha
ins
fldenv
or
ins
loope
mov
mov
add
arpl
xor
xchg
int
inc
es
scas
aas
out
sub
lahf
adc
jp
(bad)
or
stc
fidivr
dec
in
add
movs
bound
cli
xor
jne
out
lods
pop
jbe
push
loopne
mov
dec
cld
pop
ins
pop
xchg
call
mov
icebp
ins
cs
xor
mov
and
adc
ret
sbb
movs
frstor
hlt
dec
test
mov
rcr
cmp
enter
test
(bad)
hlt
mov
div
ins
xor
and
pinsrw
outs
aam
popf
lock
ins
xor
aam
mov
mov
inc
inc
test
js
pop
adc
stos
pop
inc
mov
ret
push
(bad)
sub
ficom
xor
out
mov
mov
out
les
cs
int3
pop
jmp
rol
xchg
data16
adc
imul
cmp
aas
test
adc
xlat
ss
sbb
jge
inc
push
mov
mov
jmp
sbb
sub
cli
adc
push
push
popa
es
xor
test
clc
daa
daa
xchg
jp
sahf
cld
aam
mov
adc
test
cs
les
ror
or
loop
mov
icebp
sar
(bad)
loop
cs
int
jg
shr
push
jne
not
(bad)
hlt
ret
fisttp
and
ja
dec
push
lahf
into
xor
jb
jnp
(bad)
sub
aad
jo
in
popa
mov
adc
rol
fcmovnu
xor
cmp
or
stos
inc
push
push
add
jae
jno
xchg
out
in
dec
mov
cmp
sub
and
mov
inc
jo
adc
xchg
and
jmp
inc
cmp
add
jns
and
fsub
jno
jl
scas
mov
push
imul
sub
cmps
inc
(bad)
cs
or
imul
jge
jb
cwde
fistp
fwait
ins
mov
push
neg
pop
test
rcl
in
mov
add
iret
mov
lock
inc
xlat
xchg
cld
xor
dec
ins
jecxz
jbe
div
addr16
fbstp
int3
adc
(bad)
jge
fcom
arpl
jmp
pushf
mov
div
in
mov
sbb
(bad)
cmp
jmp
out
in
xchg
add
jns
or
fwait
sbb
imul
adc
mov
push
xchg
int3
in
mov
push
out
(bad)
adc
add
mov
call
ins
and
lods
enter
ins
movs
out
es
and
movq
pop
outs
sbb
xor
movs
dec
jmp
push
fadd
fidivr
int3
movs
je
(bad)
adc
fdivr
scas
dec
ret
pop
dec
je
(bad)
cmp
leave
movs
mov
mov
ret
xchg
and
pusha
dec
inc
sub
push
enter
aam
sahf
xchg
pop
(bad)
rcr
and
mov
dec
sbb
fisubr
mov
mov
xlat
jb
fnstenv
std
push
fcmovnbe
test
inc
or
xor
ss
mov
and
push
ret
or
jmp
sahf
out
adc
popf
xor
mov
ins
sub
pusha
(bad)
out
cmp
div
add
inc
sar
inc
loop
pop
cmp
jo
add
cld
xchg
adc
(bad)
popa
(bad)
sbb
cmp
enter
imul
mov
push
dec
hlt
mov
fs
or
stos
sbb
mov
mov
pop
repz
addr16
(bad)
add
add
ret
push
dec
dec
pusha
out
xchg
(bad)
mov
scas
jle
retf
mov
lahf
rcl
repnz
add
mov
sbb
sbb
cli
dec
icebp
jp
and
jl
fsub
and
shr
add
and
sub
push
adc
aad
mov
cmp
imul
xchg
or
jle
add
neg
in
sbb
out
ss
repz
cwde
pop
retf
mov
popa
sub
test
sub
cmps
cmp
dec
pop
out
mov
aad
jnp
xor
sub
(bad)
mov
mov
jp
addr16
xor
lahf
mul
jbe
inc
push
pop
pop
cli
pushf
xchg
add
adc
jno
imul
sbb
push
and
rcr
leave
(bad)
test
push
imul
icebp
div
daa
leave
pop
(bad)
lods
imul
xchg
sbb
data16
mov
popa
out
jne
call
shr
loop
addr16
imul
ja
jmp
int3
xchg
push
movs
push
movs
or
shl
ja
and
mov
mov
pushf
adc
and
add
xor
cmp
das
sbb
jp
mov
(bad)
scas
mov
clc
jns
fldcw
or
scas
mov
lods
or
mov
(bad)
lds
dec
lods
mov
and
stos
lock
mov
xchg
ret
fisub
ss
pop
mov
out
sbb
xbegin
xlat
add
iret
dec
test
xchg
aaa
cmc
mov
(bad)
push
out
aaa
push
add
js
push
mov
into
(bad)
loopne
mov
mov
mov
fisttp
fist
iret
ins
and
add
pop
pop
or
jp
sar
fs
mov
dec
loopne
pmaxsw
cwde
mov
out
dec
cmps
inc
mov
xlat
aaa
(bad)
shr
push
mov
bound
movs
rol
movlps
push
sbb
jno
cmp
adc
jb
fld
test
pop
cmp
out
xor
and
popf
xchg
fistp
test
jb
mov
jns
adc
mov
out
loop
mov
push
and
or
pop
out
mov
mov
cdq
mov
dec
add
inc
(bad)
mov
pop
jnp
adc
pop
jne
pop
dec
push
lahf
stos
scas
xchg
arpl
mov
xchg
(bad)
mov
push
repnz
mov
add
(bad)
and
aaa
retf
rcr
cmp
mov
push
scas
call
jo
pop
pop
jae
scas
in
das
mov
pop
inc
push
mov
dec
push
xor
in
xchg
pushf
sbb
das
je
push
push
sbb
retf
aas
pop
jecxz
sbb
mov
or
xor
fdiv
inc
inc
int
xchg
imul
stos
mov
mov
xchg
aaa
pushf
inc
pop
pop
lds
fst
(bad)
mov
fsub
clc
mov
jl
nop
cmp
cmp
push
jo
and
lods
mov
add
lods
ins
pop
ins
stos
ds
pusha
xor
add
adc
jmp
mov
loope
mov
test
loopne
pop
into
outs
cdq
in
jo
loope
push
cmc
ins
cld
ror
or
and
cmp
nop
aad
hlt
or
mov
fdivr
imul
ficomp
call
stc
mov
hlt
add
scas
or
xor
shl
ins
sub
(bad)
iret
out
sub
push
dec
(bad)
inc
sub
push
stc
enter
in
mov
iret
cs
(bad)
outs
mov
push
icebp
fistp
xor
xlat
inc
dec
pop
mov
mov
add
xchg
mov
int3
mov
(bad)
sbb
xor
inc
jl
jnp
(bad)
leave
inc
jecxz
out
mov
addr16
pop
mov
jl
iret
pop
imul
popf
dec
jecxz
into
jb
xchg
sti
call
add
les
and
sub
fs
cmp
test
stos
and
icebp
test
int
pop
scas
fdivr
sbb
cli
dec
js
pop
(bad)
in
sbb
clc
lock
nop
in
(bad)
adc
inc
mov
xor
inc
and
jno
int3
dec
sbb
aaa
mov
add
ins
or
stos
adc
push
mov
mov
loop
mov
iret
mov
js
into
cld
inc
aas
movs
(bad)
pop
ss
cmp
or
mov
jge
push
in
xlat
mov
outs
jg
sub
es
mov
sub
sbb
dec
pop
and
cmp
or
adc
inc
mov
cmp
(bad)
(bad)
cmp
inc
mov
dec
push
pop
cld
iret
fcmove
(bad)
retf
pushf
add
outs
jmp
imul
push
or
test
mov
fwait
xor
imul
mov
or
nop
mov
mov
jmp
repnz
rcl
sti
fmul
mov
outs
cwde
call
sbb
pusha
ror
in
xchg
fisub
sub
jbe
inc
jmp
lds
es
(bad)
loope
mov
mov
add
mov
inc
dec
cmps
push
outs
bnd
xchg
sub
xchg
sub
xlat
(bad)
jbe
out
mov
sbb
dec
jb
or
xchg
xchg
pop
cmp
enter
push
dec
movs
mov
jg
daa
dec
or
cmc
inc
and
es
xor
mov
mov
and
sbb
mov
aad
test
xlat
and
add
(bad)
sbb
(bad)
gs
iret
xor
adc
movs
sbb
dec
inc
mov
sbb
ret
lock
jmp
loop
cmp
sbb
xor
in
std
fcomp
sbb
fs
sti
fiadd
call
xchg
and
fild
pop
mov
pop
fisttp
cmp
add
lds
lods
imul
xchg
xchg
rcr
mov
aas
idiv
ja
push
adc
outs
or
sbb
daa
cli
dec
icebp
into
push
mov
pop
mov
retf
arpl
fninit
shl
enter
push
leave
lahf
mov
arpl
arpl
pop
sub
out
aas
xchg
mov
(bad)
stos
xor
repnz
ins
xor
sub
imul
push
xchg
inc
mov
and
adc
xor
jg
xchg
push
lock
pop
cs
imul
scas
adc
and
aaa
cmp
outs
xor
add
shl
and
(bad)
stc
sahf
fdivp
fbld
test
in
in
ins
test
lods
dec
iret
sub
and
mov
shl
sahf
outs
lods
sbb
enter
push
xchg
fistp
xchg
(bad)
out
mov
or
cmps
cmc
out
sub
cli
or
fist
add
push
pop
mov
pop
pop
cdq
xchg
mov
xor
into
fsub
xor
xor
popa
rcr
jmp
xchg
test
(bad)
sbb
pop
sub
cmp
add
lea
jmp
scas
inc
(bad)
adc
mov
push
ins
mov
in
sub
xor
imul
xchg
in
scas
and
jo
sub
sub
push
icebp
icebp
mov
jns
add
(bad)
or
add
sti
inc
or
inc
aad
xor
stc
jae
popa
outs
inc
pusha
or
test
or
jbe
and
(bad)
aaa
fidivr
popa
and
mov
mov
jne
fmul
clc
sbb
test
lock
movs
fidivr
fcmovb
pop
lds
stc
adc
cmps
fdecstp
sbb
jae
in
jmp
loop
aaa
pop
sbb
or
in
xchg
call
and
fwait
adc
movs
outs
add
dec
pop
pop
adc
or
fiadd
push
pop
push
loopne
sub
popa
(bad)
mov
add
adc
push
dec
mov
je
sub
pop
push
mov
test
stos
ins
push
cmp
icebp
iret
gs
hlt
data16
or
adc
hlt
lea
cmp
push
jmp
xchg
mov
shl
jnp
xchg
push
mov
push
xchg
imul
mov
push
dec
sub
mov
xchg
sub
(bad)
jnp
outs
ret
mov
add
je
mov
cld
jecxz
cmp
(bad)
push
cmp
mov
pop
mov
sbb
push
ins
fldcw
lods
aas
mov
lods
pop
sub
sub
out
je
idiv
in
mov
fnstsw
xchg
fst
push
jle
fwait
data16
shl
and
hlt
(bad)
mov
xor
mov
aam
retf
and
mov
mov
out
or
(bad)
pop
test
push
and
mov
mov
popf
inc
int
(bad)
popf
ret
cmp
ss
xchg
popa
mov
jne
rol
lock
retf
arpl
(bad)
cmp
(bad)
cmps
adc
xchg
xlat
xchg
ins
gs
scas
mov
ins
sbb
in
lahf
add
cmp
movs
fwait
xchg
and
xor
inc
daa
adc
xor
push
int3
xor
mov
movs
hlt
mov
sub
ret
lahf
call
nop
lock
stos
inc
loop
pop
nop
cdq
setge
daa
push
daa
and
(bad)
and
lock
repnz
dec
jae
test
int
scas
and
(bad)
fild
ss
and
jmp
xor
mov
jl
lahf
mov
jbe
mov
cmp
mov
inc
dec
pusha
popf
xchg
js
push
adc
mov
sti
mov
cld
not
add
repnz
dec
pop
ficomp
cmps
outs
add
mov
call
addr16
fidiv
repnz
mov
and
add
cmp
sub
mov
sbb
dec
sti
xor
sub
cmps
jle
add
cwde
cmc
push
cmp
xor
dec
(bad)
loop
leave
icebp
inc
imul
cli
in
pop
push
movs
push
movs
popf
xlat
cmp
into
jecxz
xchg
xor
cmp
or
mov
pop
or
fsubr
dec
retf
shr
sar
or
mov
pop
sub
call
and
fcmovbe
cmp
fxch
cmp
pop
test
aas
mov
sub
sub
jge
fld
pop
(bad)
inc
ror
leave
sbb
(bad)
pop
jl
adc
in
sub
sbb
mov
jmp
call
in
inc
mov
stos
shl
and
xchg
in
adc
das
ds
adc
or
inc
pop
icebp
popa
stos
sbb
fadd
fdivp
or
inc
jb
mov
adc
(bad)
jnp
xor
pop
dec
inc
dec
mov
outs
ficomp
rcr
cmps
mov
mov
lea
sub
dec
fcomp
les
rcr
fwait
mov
loop
test
stos
jns
bnd
repnz
inc
or
cmp
mov
jmp
mov
loope
daa
push
test
jp
test
aas
mov
das
pop
std
and
push
mov
mov
jmp
mov
lods
sub
and
fist
push
or
les
fwait
add
pop
cld
mov
push
cdq
rol
xor
add
xor
pop
test
mov
fsubr
mov
out
add
ror
mov
(bad)
mov
push
adc
jp
out
retf
or
(bad)
xor
(bad)
ret
mov
test
inc
pop
loope
test
outs
mov
js
in
jb
(bad)
jge
mov
add
out
in
or
xchg
adc
into
retf
add
and
mov
daa
and
mov
jmp
push
xchg
jge
bound
enter
sub
mov
mov
fwait
mov
jg
(bad)
mov
out
push
lods
(bad)
ins
jo
push
lods
and
pusha
mov
xlat
mov
mov
jb
popa
sub
and
inc
ins
xchg
in
sti
dec
hlt
shl
mov
dec
add
pop
add
aas
add
out
retf
xchg
movs
inc
xor
aam
xchg
test
fs
data16
stc
sbb
in
ins
sbb
and
dec
out
adc
stos
fcomp
jle
dec
idiv
leave
mov
jp
mov
cmp
xchg
out
push
push
adc
sub
shl
rcr
pop
mov
pop
(bad)
sbb
test
fld
mov
adc
cwde
add
sbb
push
jmp
test
cmps
ret
push
or
sub
movs
int3
std
add
retf
jnp
sub
call
push
movs
stos
loopne
push
mov
mov
push
inc
shl
ret
fwait
outs
inc
mov
shl
fyl2x
daa
call
mov
jo
xor
adc
ss
mov
out
and
mov
mov
xchg
stos
movs
xchg
ret
retf
pusha
ins
shl
cli
inc
cmps
rol
push
mov
ins
mov
daa
push
sub
fistp
pop
push
pusha
shl
add
iret
jno
push
mov
jmp
xchg
push
mov
adc
dec
jne
popa
or
pop
imul
aaa
retf
sahf
mov
sub
pop
fisttp
call
(bad)
test
mov
(bad)
sbb
cmp
sub
inc
inc
push
(bad)
jl
fs
mov
adc
ds
push
xchg
test
xchg
push
mov
rcr
out
sahf
and
loopne
lea
aam
jmp
pop
ins
jp
popf
imul
jl
sbb
push
mov
add
adc
iret
mov
fbld
jmp
test
retf
sub
repnz
push
jg
sub
xchg
cmp
ret
and
lds
mov
add
rcr
add
add
adc
aam
(bad)
sbb
es
icebp
aad
(bad)
scas
jl
ins
imul
jnp
push
pop
sub
add
xchg
dec
xchg
pusha
pop
test
lock
pop
push
pop
inc
xor
shl
inc
push
dec
popa
clc
jno
shl
mov
cmp
stos
xlat
retf
ficom
dec
dec
mov
xchg
dec
aam
pop
mov
mov
jb
popf
dec
lock
ss
sar
rcl
(bad)
cmp
add
aad
std
or
and
cmp
mov
sub
and
mov
enter
or
pop
jmp
pop
push
add
stc
dec
test
adc
int3
fst
ret
mov
fdivr
mov
cmc
and
cmps
pop
addr16
xor
cmp
popa
ss
push
ret
xchg
xchg
shr
fst
push
jmp
(bad)
sbb
xlat
sub
loop
cmps
adc
shr
retf
dec
aam
es
inc
xor
icebp
movs
push
push
dec
adc
push
call
aaa
lods
cmp
pushf
es
mov
cwde
movs
inc
scas
or
cmp
ffreep
jb
aad
sahf
lds
jp
retf
fwait
jmp
lds
pop
arpl
sbb
and
dec
shl
in
hlt
sar
or
test
jp
in
sub
jnp
adc
cli
(bad)
cld
jno
scas
scas
call
mov
ins
or
and
cmps
repz
jae
jae
test
sahf
xchg
fdiv
xor
idiv
push
adc
sbb
fiadd
xor
dec
xchg
nop
push
dec
jbe
ss
cld
push
ret
sub
(bad)
ds
movs
retf
mov
pop
std
(bad)
repz
dec
in
cs
xor
(bad)
(bad)
jmp
push
adc
in
pop
xchg
pop
jo
popa
mov
fisubr
sbb
mov
mov
dec
and
mov
cs
bound
xchg
mov
sbb
rol
das
loope
add
scas
fiadd
outs
xor
ret
cwde
cmps
push
add
(bad)
mov
push
sub
sub
in
outs
sbb
mov
lods
retf
mov
in
dec
mov
ins
cwde
popa
adc
sbb
stos
mov
inc
and
aad
sbb
push
stos
jo
dec
pop
jne
ja
inc
aaa
outs
mov
push
call
out
repz
out
ret
jo
push
xchg
mov
sub
adc
pop
sub
dec
stc
mov
arpl
popf
cmps
imul
mov
add
mov
stos
int3
and
push
jne
pop
add
mov
xchg
sub
test
and
aam
push
popa
fsubr
fld
loopne
mov
ds
add
aaa
add
lahf
vmovmskps
sub
sub
push
pop
jne
sahf
sahf
ds
div
mov
mov
retf
sub
mov
les
mov
push
add
cdq
push
jns
out
mov
(bad)
fadd
cmp
add
adc
or
or
jae
sbb
push
(bad)
adc
fs
adc
sub
sbb
push
psrld
aam
neg
repnz
and
jmp
data16
mov
cmps
fwait
mov
jmp
je
sbb
mov
in
mov
mov
out
push
hlt
mov
aas
mov
clc
loope
add
jge
out
xchg
mov
and
(bad)
ins
(bad)
mov
or
retf
in
jo
(bad)
pop
mov
scas
mov
repz
inc
cmp
je
push
push
xor
xor
mov
mov
or
cmp
mov
adc
cld
test
icebp
inc
(bad)
and
adc
ror
out
adc
sti
push
test
jmp
jnp
adc
push
jmp
mov
pop
pop
lods
xchg
cs
push
sbb
ja
xor
xchg
pop
add
jg
fisttp
inc
mov
stos
push
lea
lods
sbb
lods
sub
aad
inc
repnz
lahf
cmp
cmp
cmc
test
imul
push
dec
xor
dec
das
js
xchg
loop
mov
or
mov
sub
inc
mov
test
dec
ror
xchg
(bad)
and
das
mov
dec
mov
dec
iret
mov
pop
repz
fadd
scas
adc
push
movs
dec
ins
das
cwde
test
push
repnz
test
rol
jno
push
or
xor
je
inc
lods
and
imul
cmp
aas
test
inc
xor
cmp
rol
push
and
bswap
jecxz
push
jns
jbe
xchg
cwde
std
shr
mov
add
mov
std
fmulp
sub
loop
iret
and
cmps
mov
fcmovbe
shl
test
jmp
or
cwde
push
jg
pop
pusha
mov
inc
cwde
rcpps
cmp
adc
xor
not
fnstsw
push
jl
dec
std
out
fiadd
out
mov
jnp
pop
fild
outs
adc
pop
or
enter
pusha
dec
and
xchg
pop
mov
sbb
or
lea
dec
es
mov
repz
jmp
xchg
icebp
aad
mov
dec
or
pop
fwait
cmps
dec
sti
stc
push
call
sbb
and
out
gs
xchg
stc
ret
fs
outs
dec
imul
pop
imul
xchg
mov
in
push
jae
inc
cmc
push
sub
sbb
push
test
inc
mov
jecxz
pop
into
stos
repnz
shl
rcl
call
adc
ins
mov
in
in
sbb
imul
das
das
dec
adc
dec
sub
es
sub
jae
xchg
cwde
out
mov
test
xor
pop
jecxz
or
int
sub
and
pop
push
sbb
sbb
add
cmp
ret
mov
clc
retf
pusha
aas
outs
lock
mov
sub
cld
repz
bswap
aad
inc
pusha
repz
(bad)
xchg
pushf
call
adc
pop
fmul
popf
stc
js
jg
inc
test
or
out
jmp
rep
jg
enter
jnp
fucomip
xor
jge
dec
and
pop
stos
xor
adc
sub
and
gs
fmul
cmp
pop
jl
into
cmp
out
ds
xchg
mov
cmc
mov
add
dec
stos
push
in
and
add
sub
out
fsub
adc
and
arpl
popa
dec
sbb
adc
fsubr
aas
cli
pop
jb
fwait
push
scas
xchg
xor
jb
ror
(bad)
pop
push
imul
movs
inc
cmps
retf
dec
cmc
scas
ins
lock
call
push
mov
icebp
(bad)
mov
rcr
add
dec
sti
push
and
int
into
push
aam
std
and
xor
push
pop
cmps
mov
jbe
mov
dec
xor
mov
std
mov
ror
pop
mov
adc
mov
popa
into
inc
rcl
loopne
push
sbb
mov
pusha
cld
push
push
mov
xor
dec
sbb
push
daa
loopne
sbb
jecxz
clc
and
mov
popf
xor
push
lods
xchg
and
mov
mov
xchg
lea
test
xlat
adc
arpl
lea
fimul
dec
data16
pop
fdiv
mov
pop
out
loopne
mov
xlat
fild
fwait
rcr
mul
out
inc
scas
jmp
mov
jp
(bad)
jmp
mov
das
push
pusha
stos
test
aad
pop
test
(bad)
or
popf
cmp
ins
xchg
jns
jmp
and
out
pop
cs
push
aam
cmp
loopne
sbb
xchg
cmp
ja
(bad)
push
xchg
addr16
mov
cmp
repnz
fs
mov
cmp
and
or
jmp
and
scas
mov
hlt
jne
cmc
retf
mov
push
loopne
pushf
push
call
jg
arpl
in
je
mov
movs
jae
loope
jno
popf
stos
or
adc
push
loopne
mov
test
sbb
xchg
sub
fmul
adc
sbb
into
ss
shl
arpl
lds
jl
out
pop
or
in
bound
retf
jns
xchg
imul
gs
inc
push
mov
sub
enter
enter
ds
xor
sahf
xchg
aaa
inc
ins
cmp
or
dec
imul
iret
ror
or
dec
popf
retf
sbb
sub
in
dec
push
rol
pop
push
js
pmaxsw
popa
sbb
pop
jb
xor
add
mov
cs
xlat
sti
jbe
xor
lock
add
rcl
xchg
cli
out
add
test
jecxz
pop
mov
xor
and
std
mov
xchg
inc
jno
cld
adc
jne
loop
cmc
scas
add
int
cmp
mov
push
call
imul
fild
call
jbe
or
outs
shl
out
xchg
(bad)
loope
xchg
cmp
dec
jno
popa
push
pop
fbld
cmp
(bad)
mov
lds
scas
sbb
rcr
adc
or
dec
jo
fiadd
sbb
sub
test
sub
enter
cmp
adc
push
xchg
adc
lock
mov
leave
pop
icebp
movs
push
mov
pop
push
or
sub
sbb
adc
call
jmp
xchg
aam
and
jp
(bad)
adc
add
jbe
inc
enter
jmp
xor
cmp
xchg
push
push
xor
sbb
jnp
push
shl
call
div
push
movs
pop
adc
in
dec
xchg
xchg
cmp
cmp
(bad)
outs
pushf
cli
retf
add
push
sub
sub
inc
jo
jnp
mov
mov
adc
jae
jge
int
mov
or
dec
mov
inc
push
es
cld
cdq
inc
mov
movs
mov
inc
inc
or
jnp
gs
repnz
sub
push
mov
xor
pop
(bad)
out
pop
push
push
fdiv
dec
shr
out
test
and
sub
lods
iret
sub
aas
mov
pop
xor
dec
stos
mov
scas
fldenv
aad
pop
add
cmp
sbb
push
test
div
out
test
pop
fdiv
in
inc
sub
shl
or
and
push
push
sbb
xor
cmp
rol
xor
in
repz
mov
call
or
in
movs
jno
fwait
ss
or
mov
jae
mov
jecxz
loopne
in
xchg
lods
mov
aas
cmps
outs
bound
push
movs
sub
dec
mov
or
mov
sub
adc
pop
retf
cli
js
fstp
push
xchg
push
lahf
or
mov
pop
push
xchg
pusha
ret
int
popa
xlat
and
and
xchg
and
sub
adc
(bad)
ret
or
or
loope
rol
shl
js
sub
mov
mov
in
shl
push
sahf
xchg
or
mov
inc
xchg
aam
neg
inc
add
pop
or
or
and
repnz
cwde
mov
cli
sbb
fcom
jmp
popa
loopne
nop
push
dec
or
cmp
sbb
ja
cmp
movs
dec
mov
je
test
and
sub
xchg
jmp
mov
fnstenv
or
imul
push
dec
sbb
dec
mov
adc
das
inc
cmp
loop
or
mov
adc
push
ret
mov
pop
dec
vshufps
ins
push
out
jno
cmps
mov
dec
cld
icebp
mov
outs
leave
jno
push
movs
mov
(bad)
mov
jae
xchg
push
ss
bound
pop
jge
pop
popf
pop
adc
stc
xchg
cs
xor
cmps
push
or
or
push
idiv
iret
pusha
imul
jnp
pop
cmps
add
imul
push
cli
dec
jg
mov
xor
cwde
or
inc
out
mov
and
dec
(bad)
pushf
push
lods
iret
loopne
mov
(bad)
sti
icebp
out
scas
nop
cdq
jae
sbb
cmp
fs
cmp
addr16
sub
cmp
push
or
jns
and
leave
mov
pop
sti
sbb
and
jmp
in
cmp
cmp
cmove
push
adc
shl
adc
arpl
inc
(bad)
out
xor
and
mov
or
das
repz
fistp
sar
xchg
xor
lea
mov
fwait
(bad)
sbb
sub
(bad)
std
in
adc
sbb
into
aas
loop
dec
inc
retf
xor
shl
add
out
mov
add
in
js
cs
or
xor
cmps
pop
pop
mov
int
xchg
mov
push
mov
les
push
xor
push
mov
out
add
arpl
mov
adc
mov
into
loope
in
outs
into
fisttp
add
mov
cmps
repnz
ins
sbb
(bad)
pop
adc
nop
call
dec
add
mov
jl
daa
cmp
fst
push
xor
dec
(bad)
mov
push
jbe
cmp
std
cmp
jg
push
jp
mov
enter
cmc
aaa
fidivr
pop
jg
adc
scas
jg
(bad)
popa
pop
leave
xchg
daa
cs
jb
add
and
xor
mov
cmps
push
jg
scas
inc
inc
jg
sti
pushf
shr
inc
pop
cmps
sub
jge
xchg
dec
cmp
lock
in
mul
jmp
repz
icebp
mov
sub
es
xchg
(bad)
shl
pusha
enter
das
add
push
in
xchg
jge
ror
dec
call
dec
bound
inc
fidivr
mov
xor
push
xchg
cmp
mov
mov
cmps
sahf
and
add
cmp
adc
inc
ins
xlat
mov
stos
cmps
mov
out
sub
pop
pop
retf
mov
adc
fwait
sbb
jmp
dec
push
jno
scas
loopne
adc
xor
xchg
fstp
fdivr
mov
push
stos
mov
fild
icebp
xchg
loopne
mov
cmps
mov
cmp
and
push
mov
mov
add
lods
jne
mov
xor
dec
sahf
cmp
xor
jbe
(bad)
xor
push
and
and
loopne
xchg
movntps
test
lahf
pop
and
sbb
push
call
push
sub
(bad)
ss
jae
out
xor
and
stos
xor
jecxz
inc
outs
sti
je
movs
bound
jl
push
adc
inc
fldpi
pop
inc
mov
mov
lods
xor
vmovaps
xlat
add
outs
mov
sar
inc
nop
inc
clc
push
in
or
pusha
dec
adc
sbb
int3
pop
cmp
push
pushf
mov
mov
pop
or
fiadd
test
xchg
sbb
in
pop
xchg
and
and
and
stos
addr16
mov
stc
jle
jno
add
mov
push
stos
leave
mov
jbe
pop
adc
add
xor
hlt
addr16
or
mov
or
not
jmp
pop
pop
cdq
mov
jg
loop
push
push
add
cmp
mov
cwde
shr
test
pusha
imul
daa
mov
mul
and
inc
mov
stos
and
inc
loope
cdq
jg
cmp
int
cmps
cmp
sbb
jmp
(bad)
inc
dec
mov
fild
pop
call
jg
out
(bad)
jmp
ret
lahf
adc
fcomp
lea
(bad)
push
fdiv
test
cmp
pop
push
repz
xchg
mov
mov
fld
push
or
adc
mov
cdq
out
sbb
pop
jmp
jmp
loop
popf
dec
(bad)
fstp
jne
xlat
cs
jnp
stos
inc
sbb
cli
mov
int
es
and
subps
test
fs
aas
xchg
pop
test
rcr
xchg
sti
add
push
mov
icebp
popf
mov
dec
rol
out
and
add
mov
inc
inc
mov
fwait
and
sub
ds
or
xor
in
push
jns
sbb
je
rcl
xlat
ins
push
arpl
imul
jno
loop
stos
fnsave
add
sub
xor
sar
add
sub
mov
retf
push
lea
mov
and
mov
pop
pusha
xor
fadd
sbb
sub
mov
mov
sub
jbe
mov
adc
in
arpl
cs
dec
test
loopne
fst
sub
jp
cmp
movntq
not
int3
(bad)
loope
inc
es
call
shl
mov
data16
and
retf
sbb
test
out
adc
fcom
push
test
inc
mov
pop
das
mov
xor
xchg
test
mov
call
pop
dec
pop
(bad)
mov
mov
fsubr
mov
lds
dec
cmp
mov
cmps
push
aaa
adc
scas
jno
pop
mov
and
aaa
xor
adc
sub
retf
jmp
icebp
sub
(bad)
pusha
mov
xchg
mov
addr16
and
aas
sbb
push
movs
pop
mov
xor
and
push
inc
(bad)
lds
dec
pop
ins
inc
xchg
add
and
pop
dec
inc
mov
sub
fwait
fs
adc
fsubr
cmp
sub
scas
into
fwait
mov
popf
(bad)
jp
and
mov
int3
jp
sbb
(bad)
adc
add
movs
xchg
movs
or
jecxz
call
scas
or
dec
pop
hlt
cmp
xchg
sub
or
jle
adc
lahf
push
test
data16
sub
imul
jmp
lods
inc
mov
cmp
fild
imul
or
push
sbb
int
push
pop
lea
stc
inc
out
mov
out
(bad)
adc
or
push
stos
push
sti
mov
xor
adc
jnp
mov
stc
dec
dec
cld
xchg
int
fnstenv
in
xor
dec
test
mov
adc
jno
out
mov
stos
das
fnsave
dec
sub
loop
push
aam
ss
ficomp
mov
daa
xchg
inc
and
stos
ja
xor
and
sbb
inc
test
ins
ret
dec
mov
adc
fiadd
jb
mov
sbb
cmp
les
call
into
mov
test
sbb
aam
xchg
pop
(bad)
pop
ins
jp
(bad)
loop
das
ins
cmp
leave
sbb
out
mov
jl
and
dec
sub
push
dec
jae
sbb
int
jae
or
repz
imul
dec
jb
jb
push
popf
mov
data16
in
loopne
xor
test
mov
cdq
sub
inc
hlt
in
jo
sub
in
data16
shl
outs
mov
outs
es
daa
sbb
call
xor
daa
jl
and
shl
rcr
imul
push
cmp
aam
inc
loope
fidivr
and
popf
movs
arpl
cmp
xlat
sub
push
enter
pop
mov
cmp
xor
xor
add
dec
fnstenv
sbb
fs
test
mov
aam
mov
test
dec
push
repz
(bad)
stos
mov
mov
call
enter
xor
bound
sbb
in
leave
xchg
xchg
sbb
mov
add
daa
jge
sub
mov
xor
mov
and
xchg
jne
das
push
rcr
push
into
xchg
std
(bad)
stos
mov
xor
sub
js
adc
and
xor
(bad)
movs
inc
call
mov
mov
movs
(bad)
fist
and
sub
jmp
mov
and
push
push
rcr
and
shl
cwde
ins
xchg
mov
cmp
push
fsub
pop
mov
les
outs
(bad)
icebp
xor
xor
mov
inc
into
addr16
sbb
jg
add
ja
mov
leave
add
(bad)
xlat
jo
push
test
xchg
xor
push
xchg
cs
pop
js
scas
rol
dec
or
adc
ins
sbb
jmp
inc
adc
mov
leave
jb
pusha
jns
sahf
daa
arpl
pop
fisttp
dec
loop
inc
test
stos
mov
jb
out
push
mov
pop
lods
cmps
fnstsw
repz
pop
(bad)
repz
mov
sbb
cmp
dec
add
dec
test
jns
idiv
push
mov
xchg
imul
or
popa
push
outs
ins
jecxz
mov
ss
inc
or
ret
aaa
xor
sbb
aad
aas
pusha
jmp
jg
pop
or
sub
inc
pop
or
lods
in
sub
push
fcmovb
inc
cmp
jl
mov
sub
xchg
add
imul
cdq
xchg
lea
fcmovb
pop
dec
inc
scas
xor
fbstp
jmp
arpl
cmps
xor
jo
sub
pop
aad
repnz
ror
add
pop
inc
jmp
push
adc
pop
push
(bad)
in
sahf
mov
retf
cmp
(bad)
mov
xchg
int3
lods
iret
cmp
push
jg
inc
stc
repz
push
cmps
and
jge
repz
add
jp
push
xchg
mov
test
int
jbe
and
adc
aad
pop
push
jmp
or
sbb
sar
arpl
and
pop
push
push
cmp
sti
xchg
das
and
loopne
xchg
cdq
pushf
adc
mov
mov
inc
pusha
(bad)
out
xor
adc
lahf
into
dec
ficom
push
icebp
mov
jmp
jmp
sti
or
pop
mul
or
cmp
mov
popa
mov
xchg
fstp
in
out
test
dec
jle
sub
and
add
inc
jo
xor
rcr
xchg
lahf
out
sbb
movs
adc
and
cli
js
out
dec
lods
xchg
and
call
retf
outs
aad
sub
push
sar
mov
fld
mov
mov
es
push
mov
(bad)
mov
out
xor
cmp
push
mov
pop
les
cld
ja
(bad)
dec
cmc
js
js
sub
iret
lock
or
pop
pop
dec
scas
xchg
das
inc
lods
and
iret
leave
jne
shl
fsub
xor
jp
adc
mov
push
sub
pop
enter
mov
mov
mov
mov
mov
shl
pop
pop
into
mov
add
and
cs
cdq
push
add
lods
out
out
(bad)
push
and
int3
sti
in
jne
movs
sub
loop
xchg
push
into
ds
xor
lods
mov
inc
push
mov
inc
mov
add
aaa
int
mov
lds
add
xor
pop
in
icebp
imul
movs
out
stos
outs
cmps
pop
hlt
popa
ds
aad
aas
or
jg
jne
movs
fst
into
jecxz
int
jge
mov
lahf
sbb
or
pop
pusha
ret
cmps
sub
and
fwait
mov
dec
mov
aam
jmp
mov
dec
out
jbe
pop
push
iret
and
jb
mov
jle
aam
pop
inc
sub
mov
loop
icebp
mov
mov
call
mov
sbb
xlat
jb
pop
ja
push
test
sbb
scas
adc
push
ret
rcr
in
push
sar
pop
ins
call
scas
cmp
retf
pop
pop
out
aam
pop
pop
pushf
sbb
cmp
popf
not
cli
ja
push
cdq
sahf
xchg
shl
aad
push
sub
mov
sbb
(bad)
pusha
cmc
xor
jbe
push
outs
(bad)
cmovne
or
int
xchg
pop
xchg
mov
sbb
xchg
mov
pushf
jbe
int3
repnz
bnd
xchg
pop
mov
dec
fimul
pop
leave
les
dec
in
fisub
outs
ret
fmul
inc
je
jbe
mov
fld
sbb
push
cwde
cmp
popf
movhps
inc
inc
retf
jns
mov
xchg
dec
ret
(bad)
jae
leave
mov
xlat
and
xor
xor
call
mov
cs
mov
inc
shl
sub
sub
adc
mov
pop
and
stos
jp
sub
iret
and
jbe
retf
mov
and
add
js
jno
test
ret
imul
mov
pop
cli
test
sbb
xor
fsubr
or
and
je
enter
fldcw
out
xchg
stos
mov
in
ret
and
int3
push
mov
sti
add
adc
or
(bad)
xchg
cld
data16
dec
xchg
add
cmp
cdq
into
xchg
adc
inc
add
rcl
test
xlat
ror
jp
add
xor
rol
xchg
xchg
push
pop
and
nop
loope
fiadd
out
(bad)
sub
in
sbb
not
stc
push
jmp
mov
data16
xchg
jecxz
mov
std
inc
or
cmps
ss
and
mov
fsubr
leave
cmp
cld
dec
mov
(bad)
repz
lods
pusha
into
fistp
shr
cmp
inc
mov
(bad)
cwde
pushf
xor
fcomp
sar
in
or
add
sti
jmp
call
popa
(bad)
mov
mov
and
bound
xor
daa
mov
aad
(bad)
hlt
cwde
jle
lea
(bad)
push
mov
outs
dec
mov
ret
into
call
scas
imul
hlt
cmp
pushf
outs
mov
pop
in
mov
pop
sub
mov
frstor
call
repnz
xor
(bad)
out
sbb
xchg
mov
inc
ror
addr16
push
push
(bad)
fldenv
add
sub
repz
sub
sbb
inc
test
mov
arpl
cdq
test
sti
cmp
lds
pop
call
and
xlat
cmp
dec
mov
aas
rol
xor
(bad)
ror
xor
mov
push
retf
mov
mov
popf
out
sti
ins
sti
adc
push
movs
xlat
test
mov
shl
mov
into
rcr
push
or
shl
shl
popf
adc
sub
pop
cld
sbb
cmp
push
mov
rcl
xchg
mov
ret
into
into
xor
xor
pop
add
call
lds
ja
jnp
xor
jmp
mov
pop
sbb
cld
fs
mov
leave
aad
add
in
inc
sub
in
sbb
hlt
cmp
shl
dec
xchg
stos
mov
aas
or
jecxz
fcmovbe
jnp
inc
add
popf
mov
ins
lods
jae
lahf
(bad)
out
movs
les
jns
xchg
das
xor
cmp
fwait
aas
dec
add
pop
jmp
push
and
enter
add
fwait
jle
jmp
push
mov
rcr
mov
test
lds
add
fisub
mov
ins
not
dec
sbb
and
add
or
fnsave
or
call
imul
dec
inc
mov
mov
fadd
xchg
into
mov
cs
sar
stos
sbb
retf
xor
xor
or
not
fstp
idiv
std
fwait
jbe
mov
add
push
mov
push
dec
in
pop
inc
sub
arpl
or
mov
mov
ins
test
push
sbb
xchg
imul
aas
xor
pop
mov
cwde
fist
xlat
add
cmps
add
mov
popf
fcmovne
mov
mov
rcr
fadd
js
stos
(bad)
xchg
pop
(bad)
mov
dec
add
pop
sti
retf
arpl
push
mov
or
adc
icebp
daa
add
pushf
imul
hlt
jp
push
sbb
adc
into
push
paddsw
in
jge
jmp
aam
add
mov
xchg
test
adc
mov
ret
hlt
mov
cmp
dec
pop
inc
scas
or
add
ficomp
aam
mov
(bad)
popf
aaa
cmp
popa
or
lods
arpl
mov
mov
(bad)
mov
imul
loope
pop
pusha
sub
aad
xchg
jo
leave
xor
sbb
jmp
pop
je
mov
pop
jmp
push
push
push
outs
fbstp
call
cmc
fmul
arpl
fwait
test
xor
pop
hlt
cdq
jmp
je
push
jnp
jle
sub
jno
sti
in
retf
push
dec
loop
sbb
call
mov
or
(bad)
(bad)
jecxz
pusha
jb
xor
dec
pushf
pop
sbb
pop
outs
or
cs
pop
push
inc
mov
cmp
imul
popf
pop
cmp
loop
push
xchg
in
jmp
jo
dec
aaa
mov
lock
and
inc
and
mov
out
shl
sub
out
jne
sub
loope
sbb
dec
cmp
sub
xor
jb
jno
jg
pop
mov
loopne
rcr
pop
xchg
adc
cli
cmp
mov
inc
sub
jb
test
mov
mov
test
das
dec
cli
pushf
sbb
sub
jmp
aam
loop
add
add
cmp
xchg
fs
neg
inc
xchg
add
add
leave
jo
jge
fcomp
jno
and
outs
aad
repnz
das
dec
cmp
add
rol
xchg
imul
jecxz
es
mov
shr
mov
cmp
cld
jns
jbe
out
jge
in
loope
xor
xchg
xchg
hlt
sub
scas
outs
mov
ret
(bad)
push
pop
xchg
retf
jns
es
call
fwait
push
test
rcr
dec
icebp
loope
sub
sar
push
add
mov
fs
nop
ds
sub
shl
pushf
and
push
sbb
movs
mov
mov
lods
scas
push
call
loop
xlat
sbb
(bad)
and
es
stos
inc
imul
jo
inc
jmp
fistp
xor
dec
rol
and
aas
mov
pop
pop
mov
mov
imul
(bad)
jg
icebp
mov
add
idiv
pusha
imul
push
daa
jmp
cmc
mov
sub
stc
out
push
xlat
clc
or
das
arpl
xchg
cmc
ss
pushf
and
movs
xchg
(bad)
fs
push
mov
bound
lahf
int3
ins
jbe
pop
mov
mov
or
ja
pop
rcr
mov
stos
mov
push
inc
sub
scas
mov
xchg
aad
jae
push
cwde
push
mov
retf
jl
fistp
pop
scas
ret
fistp
xor
call
add
jmp
mov
jne
data16
mov
and
cmps
sahf
mov
test
xchg
pop
pop
push
sahf
sub
call
hlt
aas
ret
ret
push
(bad)
cs
mov
repnz
xor
push
xor
xchg
mul
jb
scas
inc
mov
jg
popa
jmp
(bad)
rcr
add
fnsave
jne
outs
repz
xor
fs
pop
cmps
dec
sub
js
fs
daa
cmp
dec
int
or
fidivr
and
cmp
enter
add
mov
daa
sbb
lods
push
xor
retf
adc
lea
popf
pop
lock
and
inc
fsubr
push
bound
fsub
mov
pop
mov
pop
jmp
push
imul
scas
xor
pop
cwde
jns
int
xor
xor
jnp
sub
pop
cld
push
or
sbb
push
xchg
pop
push
aad
jno
ret
aad
ss
(bad)
mov
stos
dec
xor
or
cmps
das
out
das
lock
xor
cmp
stos
adc
loop
xchg
fnstenv
hlt
sbb
(bad)
in
rol
hlt
xchg
xchg
or
jmp
jne
ror
add
fsubrp
popa
or
sub
mov
cmps
or
dec
(bad)
hlt
sub
aas
jp
xchg
stc
fild
mov
les
test
cmp
mov
out
push
adc
enter
sub
fmul
movs
sub
in
in
and
fadd
test
xor
ds
jb
xchg
push
je
shl
mov
add
test
jmp
mov
pop
push
clc
add
imul
leave
xor
xchg
or
retf
and
outs
cmp
dec
les
jns
test
clc
mov
sub
sub
pop
dec
(bad)
and
mov
and
mov
jle
add
fxam
movs
pop
test
pop
push
mov
fucompp
add
mov
cmp
int
ja
fs
push
add
test
dec
enter
scas
ss
adc
push
mov
(bad)
cmc
and
call
test
jle
push
shr
retf
int
mov
neg
xchg
inc
sub
mov
into
cmp
adc
mov
cwde
mov
mov
inc
push
mov
add
push
data16
xor
je
outs
push
repz
or
pop
lds
lods
jle
and
cdq
or
dec
xor
lods
test
jne
cwde
adc
mul
jnp
sbb
icebp
or
jno
mov
cs
mov
mov
push
cmp
jmp
inc
jo
adc
pop
mov
fld
push
pop
mov
clc
ja
sub
fisubr
push
cs
aaa
sub
sub
lods
ss
and
sti
stos
add
xchg
clc
xor
pusha
out
in
or
rcr
push
icebp
sub
leave
fld
jae
and
sar
aam
aam
sbb
pushf
test
and
(bad)
and
int3
int3
loop
shl
xor
xchg
into
bswap
pop
dec
in
enter
sub
xor
lods
cmp
xor
daa
lods
repz
int3
or
stc
jbe
std
inc
and
push
xchg
mov
jle
ret
dec
test
jecxz
ins
sub
bound
lds
adc
cmp
in
push
clc
stos
mov
mov
jmp
jp
popa
mov
mov
jae
mov
stc
les
imul
(bad)
add
movs
adc
lock
mov
add
add
stc
pop
xchg
pop
icebp
xchg
aas
pushf
jmp
imul
cli
mov
or
jle
jae
jg
mov
inc
scas
sbb
ret
out
stos
sub
retf
push
loope
lods
inc
adc
cmp
nop
or
jnp
and
adc
in
pushf
pop
(bad)
in
pop
leave
xchg
(bad)
cmp
mov
imul
mov
gs
push
stos
stc
or
and
(bad)
in
mov
xchg
push
std
pop
test
out
pop
cli
les
add
adc
inc
dec
push
in
(bad)
gs
ins
(bad)
popf
lds
das
popf
xchg
loope
add
mov
or
push
cmp
xor
xchg
push
jmp
imul
xchg
aam
inc
mov
and
push
and
push
fnstenv
pop
(bad)
addr16
ficom
pop
or
fsubr
add
ins
cmp
shr
xchg
cmp
(bad)
retf
scas
dec
xchg
and
(bad)
mov
hlt
leave
sbb
add
repz
jmp
jne
int
inc
push
xlat
in
and
in
sub
(bad)
adc
jle
pop
or
gs
bound
xor
neg
rcl
xchg
iret
int3
jno
les
mov
icebp
dec
xor
inc
sub
and
mov
(bad)
hlt
aam
and
adc
mov
and
adc
push
dec
aad
(bad)
sub
dec
mov
sub
popf
mov
int
or
pop
and
jae
aaa
rcr
push
stos
fisub
fidivr
fist
push
loopne
xor
sti
ret
repz
aas
ror
lods
dec
pop
(bad)
mov
sbb
inc
xchg
outs
pop
push
xchg
fmul
fcom
ja
retf
dec
jbe
mov
cdq
jl
xor
mov
push
mov
dec
or
xlat
jl
aam
mov
jl
retf
push
jge
and
cld
pop
bound
ja
xor
push
xchg
stc
clc
shr
int
aad
sti
ins
out
rcl
adc
div
jb
retf
aaa
push
fbstp
fdiv
inc
aam
or
and
add
repz
lods
push
das
sbb
pushf
mov
pop
or
ficom
push
inc
stos
aaa
xchg
shl
arpl
dec
ror
pop
adc
adc
inc
push
add
mov
fldenv
or
xlat
push
imul
fisttp
mov
test
ins
rol
(bad)
fnsetpm(287
sbb
call
mov
and
pop
jle
bound
test
mov
popa
popa
loope
(bad)
dec
sbb
fsub
call
fsubp
mov
jecxz
push
add
or
cmps
jle
jbe
cmps
cmp
or
xor
jmp
inc
loope
loopne
inc
lods
pusha
sbb
push
loop
in
sahf
aaa
xor
rcr
mov
push
nop
mov
cmp
in
dec
pusha
imul
iret
rcl
pop
and
mov
push
pop
add
mov
mov
popa
call
mov
mov
hlt
sti
aaa
iret
adc
pushf
cdq
dec
mov
sub
in
loopne
jne
aam
ins
shr
mov
dec
pop
xor
dec
adc
xchg
sbb
jns
daa
ror
inc
pusha
jecxz
jl
cs
into
scas
mov
retf
jl
jnp
jb
xchg
loopne
mov
test
pop
mov
xor
outs
xlat
xor
add
ret
leave
dec
xchg
or
mov
adc
inc
into
jle
push
loop
jmp
in
inc
je
int3
mov
test
or
fiadd
ss
mov
pop
mov
cmp
fwait
sahf
test
sub
repnz
dec
push
mov
retf
xchg
cwde
adc
xor
jns
enter
mov
and
shl
fld
mov
test
lock
cli
push
xor
xor
xchg
mov
xor
jge
pop
lahf
fidiv
dec
scas
fs
jle
jbe
mov
xor
in
pop
dec
fmul
outs
push
pushf
pop
retf
mov
fucomp
or
xchg
and
push
loop
out
mov
sub
dec
add
inc
xlat
add
div
push
fcmovb
sub
cwde
pop
push
es
mov
jo
fst
sar
loop
xchg
rcl
int
fwait
in
pop
push
iret
imul
mov
dec
or
(bad)
xchg
icebp
repz
jns
fs
je
retf
in
aas
jbe
inc
cmp
out
pop
add
mov
xor
call
ins
pushf
aas
imul
mov
pop
ret
call
aas
into
es
push
mov
repnz
stos
out
fld
mov
xchg
sub
or
mov
aas
mov
xor
in
sub
mov
not
jp
mov
dec
ret
xchg
popa
(bad)
lock
cld
(bad)
loop
pusha
in
rol
sub
sbb
mov
data16
popa
xchg
xor
ja
jmp
sti
shl
cdq
cmc
ins
sub
pop
addr16
in
jo
or
jb
cmp
nop
xor
cwde
mov
xchg
inc
aas
test
mov
cs
cmp
add
je
icebp
adc
or
repz
pop
xor
lea
into
sbb
sbb
xchg
ins
jle
cmps
daa
in
les
imul
mov
jbe
inc
out
pusha
fs
jmp
shl
loopne
fsub
or
out
jl
adc
repz
stos
mov
mov
lea
sub
js
pop
pop
mov
or
mov
fmul
or
(bad)
ffreep
bnd
adc
dec
xchg
dec
cwde
xor
push
out
ins
inc
scas
aaa
cld
lahf
push
(bad)
jo
lds
mov
mov
fdiv
cmp
div
or
xlat
inc
mov
std
and
jle
ins
push
xchg
in
xchg
cld
sbb
in
xchg
and
aaa
sbb
popf
and
jb
mov
pop
aaa
push
push
test
popa
aas
je
mov
scas
cli
sbb
cli
(bad)
lahf
and
shl
(bad)
out
cmps
jp
fnstenv
sub
fs
pop
stos
push
dec
arpl
xchg
jne
ret
push
fiadd
add
xchg
pop
mov
inc
mov
mov
retf
int3
xor
imul
icebp
fistp
ret
ror
jp
jne
jae
pop
icebp
popf
es
jmp
ror
sub
cli
adc
mov
xchg
mov
xor
jmp
dec
aam
mov
adc
sbb
push
mov
arpl
pop
jecxz
or
xor
setbe
(bad)
bound
add
cmp
cld
lods
cmp
outs
mov
push
cld
pushf
push
daa
rcl
int3
cmp
gs
add
jnp
jb
faddp
mov
shl
ret
outs
sub
add
inc
jnp
jbe
push
adc
jl
jmp
or
or
in
xor
adc
cmp
popa
adc
aad
push
sbb
(bad)
in
daa
pop
mov
stc
jge
(bad)
shl
sbb
xchg
dec
xor
int3
int3
add
jp
mov
inc
retf
outs
das
mov
sub
or
lods
pop
jle
inc
repnz
sub
sub
loop
je
mov
sub
(bad)
shl
dec
and
rol
test
pop
out
xor
mov
add
out
addr16
inc
dec
mov
mov
or
mov
dec
mov
push
or
movs
(bad)
fisub
pushf
mov
popf
push
or
jg
sub
(bad)
dec
ret
mov
ja
fldcw
cs
push
movs
jmp
clc
rol
in
in
call
in
lahf
mov
sti
repz
enter
ins
pop
xchg
in
cdq
data16
jns
mov
test
mov
mov
adc
sbb
test
shl
jecxz
mov
xchg
cmp
and
sbb
xchg
enter
jb
imul
mov
pop
shl
pop
xchg
mov
rcr
xor
cmps
push
dec
shl
aad
push
popf
cmps
arpl
int3
inc
aam
or
adc
sub
clc
mov
imul
bound
xor
pop
test
add
loop
test
sahf
out
and
dec
inc
repz
movs
repnz
cmps
leave
movs
js
xchg
fmul
dec
in
xor
mov
inc
mov
idiv
stc
sub
sub
aaa
add
add
movs
dec
xchg
das
add
cmp
mov
and
int
lods
xor
stc
mov
mov
jp
and
dec
lahf
ins
push
sbb
sbb
adc
push
bound
dec
mov
mov
data16
jge
jo
mov
test
les
jp
push
sbb
add
ror
mov
nop
pop
add
(bad)
scas
mov
pop
cmp
into
gs
dec
dec
and
out
aam
lock
pop
fst
adc
pop
dec
cmps
out
jns
push
sub
jmp
test
add
xchg
push
hlt
xchg
das
push
cmp
pop
outs
pop
aam
dec
dec
int
mov
mov
jmp
fisub
imul
pop
cmovbe
stos
add
jge
repz
cli
jecxz
dec
adc
xchg
dec
arpl
loop
xor
cwde
push
cmp
les
movs
xor
add
fnstenv
out
dec
(bad)
fmul
iret
mov
adc
jno
cmps
addr16
ficom
jp
cmc
outs
xor
das
leave
inc
das
push
mov
adc
jmp
lock
push
mov
xlat
sub
jg
imul
pop
inc
jne
add
or
out
mov
retf
sbb
xchg
hlt
mov
sar
mov
and
xor
stos
sub
add
cmc
adc
scas
fcmovne
cmps
into
mov
cli
inc
mov
or
inc
int3
cwde
xor
rcl
dec
in
dec
fcmovnu
or
push
retf
inc
outs
sub
mov
fnstsw
add
pop
out
add
iret
or
cmc
das
sbb
cmp
sbb
daa
jns
push
into
push
clc
push
clc
push
inc
mov
adc
cmc
and
mov
cmp
sbb
loope
dec
(bad)
cld
jnp
addr16
ins
mov
maskmovq
jbe
adc
push
xchg
les
sub
pop
nop
test
test
add
ficomp
lahf
mov
sar
fmul
mov
mov
(bad)
dec
cmp
and
(bad)
out
fsub
fld
push
sbb
into
inc
cmc
jnp
push
imul
xchg
sahf
add
push
push
mov
ret
pusha
add
fisub
sub
sbb
and
ss
(bad)
jbe
push
out
movs
pop
lea
retf
or
xor
cmp
mov
add
loopne
data16
jg
into
inc
or
aad
enter
jle
pusha
jl
push
das
loop
repz
or
mov
mov
and
jge
fist
pop
push
in
into
jne
dec
jnp
xor
cdq
add
mov
inc
scas
les
popa
dec
jae
sbb
adc
adc
test
lods
mov
je
jb
mov
push
in
test
mov
shl
jp
sti
stos
xchg
push
push
and
and
in
pop
and
sub
test
into
imul
mov
inc
xor
popf
jg
jmp
mov
add
adc
dec
xchg
cmps
cmp
push
sahf
ins
aad
daa
push
rol
inc
outs
push
inc
cmp
repnz
xchg
xchg
or
imul
sub
pop
cmp
push
xchg
fist
or
out
push
xor
add
pop
pop
cmp
mov
pop
or
sub
loopne
and
(bad)
adc
add
sub
int3
sub
jecxz
adc
mov
in
std
add
cmc
mov
xchg
(bad)
push
out
in
addr16
mov
mov
or
inc
outs
mov
xlat
cwde
cli
jae
xor
enter
outs
xor
add
aam
test
adc
and
jns
out
in
dec
lods
imul
xor
(bad)
cmp
icebp
sbb
(bad)
jmp
jne
mov
in
mov
ja
xchg
pop
retf
js
fnstcw
aaa
shl
cdq
lock
jno
lods
cs
xchg
sbb
lods
and
arpl
repz
xchg
sbb
jl
neg
cmp
leave
loop
jl
js
cmp
scas
out
(bad)
dec
mov
ret
int3
cmp
ror
fadd
aas
ins
add
mov
fist
test
fcomp
mov
mov
cmps
ins
cmps
cs
adc
sbb
xchg
sbb
stos
sub
jnp
inc
adc
sbb
inc
xchg
(bad)
out
jae
fsqrt
nop
fisub
inc
mov
clc
xchg
adc
mov
std
cwde
loope
mov
dec
ret
(bad)
es
adc
pop
ficomp
inc
dec
test
std
push
sbb
in
sbb
mov
int3
mov
xchg
fsub
add
jbe
pop
mov
iret
jle
aad
ins
sbb
rcr
es
out
mov
dec
movs
add
aam
and
inc
ret
push
mov
xchg
rcr
fdivr
lods
lds
push
call
ins
jns
sbb
sbb
sbb
push
sub
inc
and
pop
push
push
aam
push
push
push
jmp
sub
cwde
fwait
call
aas
pop
icebp
and
leave
daa
ror
sar
sub
outs
stos
pop
std
lods
or
sahf
test
(bad)
scas
lea
loop
arpl
add
aam
nop
cmp
cmp
add
sub
pop
add
pop
jb
xlat
mov
inc
lea
dec
xor
addr16
or
int
or
sbb
mov
retf
lods
mov
int
xchg
rcr
add
pop
push
ret
and
out
xor
imul
cmp
sbb
inc
dec
xchg
call
js
shl
(bad)
jo
sbb
rcr
dec
div
rcr
shr
sar
xchg
mov
cmp
stos
add
sub
ror
sub
jno
push
dec
mul
adc
mov
mov
push
cmp
mov
and
(bad)
or
fbstp
xlat
loop
mov
pop
xor
adc
shr
stos
sti
scas
les
mov
movs
xchg
mov
repz
push
repz
(bad)
fidivr
xor
xor
in
and
inc
test
jmp
ret
je
ds
sub
xor
add
out
sub
stos
es
xchg
mov
into
iret
jl
jmp
jo
sbb
add
adc
jo
mov
push
(bad)
xor
and
scas
mov
dec
mov
mov
jno
int
cdq
pop
call
pop
xor
loopne
jns
mov
nop
outs
mov
inc
(bad)
push
add
call
sbb
adc
lods
mov
push
xchg
dec
test
inc
jl
xchg
inc
xor
pop
mov
dec
xlat
cmp
lock
popf
lea
sar
call
test
xchg
add
pop
push
into
inc
jo
add
hlt
mov
movs
mov
mov
xchg
out
or
mov
cmp
rcl
pop
xor
adc
movs
push
pop
movs
cmp
das
(bad)
outs
xchg
cmp
mov
cmps
js
daa
push
sbb
cld
add
cmp
hlt
int
xchg
jge
scas
pop
or
inc
jecxz
adc
and
rol
sub
mov
cmp
dec
add
stos
std
sbb
cmp
mov
jp
lods
nop
sub
loop
xor
dec
push
push
pop
adc
xchg
(bad)
sub
std
lea
jmp
ja
or
fist
push
cmp
mov
xchg
pusha
jmp
loope
test
(bad)
push
pop
dec
mov
cs
or
mov
xchg
pushf
cmp
lahf
jb
sub
inc
fst
or
xor
nop
repz
cwde
cs
scas
les
out
add
bound
jae
xor
imul
nop
aam
jbe
popf
mov
mov
data16
rcr
test
xchg
retf
pop
mov
mov
dec
mov
dec
out
sbb
sub
cs
sbb
mov
fucomp
sbb
or
rcr
dec
sub
into
into
cmp
pop
cmp
mov
mov
pop
jg
loopne
outs
in
je
xlat
xor
mov
loop
cmp
jno
stos
mov
xor
and
and
inc
stos
pushf
lahf
inc
inc
add
jne
xchg
cvtps2pd
dec
push
sub
int3
sbb
adc
cmp
push
cwde
scas
push
imul
mov
in
mov
mov
repz
jle
sbb
dec
add
movs
xor
inc
sbb
popf
repz
call
cdq
into
jg
(bad)
int
xlat
test
sbb
mov
fistp
test
dec
int3
and
and
movs
jno
cli
adc
xchg
test
pop
mov
push
inc
ret
jl
nop
mov
adc
dec
in
movs
and
dec
xor
div
jp
or
mov
xchg
sbb
div
add
sbb
mov
or
pop
jno
adc
ror
xchg
cmps
cmp
imul
test
and
std
mov
(bad)
jp
in
or
ret
jge
sar
pop
int
out
xor
add
push
rol
(bad)
xchg
dec
push
ja
mov
push
lods
fdiv
leave
loop
pop
or
cwde
out
mov
(bad)
rcl
mov
or
add
mov
sub
pop
fwait
jmp
and
lahf
mov
adc
ds
adc
jae
imul
ins
adc
cmovnp
mov
shl
cmp
jae
cdq
adc
jns
imul
sub
imul
iret
mov
fbstp
(bad)
xchg
jb
push
mov
sbb
xchg
adc
mov
cmovs
xchg
fsubrp
mov
dec
adc
fstp
sub
test
lock
arpl
jo
cli
lods
mov
mov
mov
test
sti
sbb
sub
push
mov
pushf
mov
(bad)
stos
mov
pop
jge
bound
inc
xchg
je
popa
stos
in
test
iret
xor
push
sub
inc
sbb
icebp
leave
or
push
sub
jnp
cld
cmp
popa
fmul
fwait
ins
add
rol
cmps
sub
stc
push
xor
scas
iret
int3
add
(bad)
mov
out
outs
(bad)
sbb
push
sub
sbb
pop
inc
sar
dec
mov
pop
pop
test
adc
push
lds
cmp
push
pop
mov
call
inc
lods
rcr
js
sbb
cmp
jecxz
mov
fnstcw
add
rcr
iretw
xchg
pop
outs
inc
mov
setbe
lds
sub
daa
pop
out
(bad)
pop
cdq
pop
cdq
sub
(bad)
sahf
dec
pop
sti
daa
test
repz
xor
movs
enter
adc
js
in
aas
je
test
cmp
retf
std
icebp
xor
ins
add
repnz
inc
call
scas
inc
adc
sbb
add
test
push
std
fiadd
addr16
jno
dec
in
inc
mov
fadd
jo
lods
mov
mov
call
(bad)
jnp
test
aaa
fld
jge
std
sbb
fild
lock
sar
aas
pop
popa
push
(bad)
cli
js
or
mov
or
pop
sbb
inc
(bad)
fadd
lea
xchg
xor
mov
add
int
lock
push
cmps
outs
sbb
xor
les
cmps
jl
dec
(bad)
call
mov
mov
xor
(bad)
push
add
mov
cmp
cmp
adc
test
and
cmp
aaa
mov
mov
push
loope
jns
mov
repnz
xor
ret
jo
dec
fisub
aam
pop
or
adc
iret
or
pop
or
imul
(bad)
fld
outs
test
push
cs
test
cmp
shr
call
and
stc
(bad)
mov
inc
lock
ds
scas
mov
movs
gs
fs
imul
repnz
and
call
jmp
in
aas
jmp
jl
cmps
ror
or
sbb
fldcw
xchg
or
jle
aaa
dec
sahf
frstor
sar
lock
shr
cwde
and
ret
call
cmp
adc
inc
dec
sbb
sbb
fcomp
cmp
sub
call
shl
addr16
add
add
push
push
xor
(bad)
push
cdq
fcom
ss
inc
pop
sbb
xor
cmps
inc
xchg
inc
lods
pop
mov
es
rol
shl
pop
ja
jp
les
iret
test
push
in
repnz
fwait
jne
adc
out
pop
xor
fadd
mov
push
xchg
inc
repnz
push
fcomp
shr
cs
xchg
cmp
(bad)
dec
scas
mov
pop
and
mov
pop
adc
ret
sbb
fwait
retf
mov
or
mov
cmps
mov
fst
in
mov
add
repnz
in
repnz
int3
jge
dec
pop
call
(bad)
mov
(bad)
out
sub
pop
sbb
lods
mov
outs
cmp
mov
not
pop
push
sub
dec
ficom
ins
shl
xor
mov
push
mov
jno
add
xchg
xchg
xor
fstp
cwde
mov
xchg
out
adc
add
popf
ja
jg
inc
inc
ja
inc
test
out
(bad)
leave
out
inc
mov
stc
mov
int3
push
sar
enter
gs
ds
sbb
mov
fcomp
(bad)
js
push
dec
dec
cli
mov
xor
stc
inc
push
jmp
cs
test
hlt
xchg
sbb
xchg
mov
jnp
cmp
in
imul
std
ins
ins
nop
push
push
mov
jo
cmp
and
lods
push
pusha
out
pop
out
jmp
cmp
bnd
mov
lods
jae
mov
xor
mov
mov
mov
sub
jp
adc
push
mov
ss
push
inc
jno
or
ret
mov
test
cs
adc
xchg
js
lods
cmp
ins
lea
lds
jae
and
jns
mov
fdiv
pop
add
scas
push
adc
mov
cmps
pop
xor
and
lds
xor
pop
pop
jmp
movs
mov
xchg
fmul
stos
dec
fisubr
push
hlt
shl
mov
fiadd
scas
dec
imul
push
pushf
adc
xor
int
and
cmp
mov
enter
fild
dec
mov
sbb
add
or
sbb
ret
retf
sbb
(bad)
push
pop
arpl
inc
push
mov
mov
and
and
dec
mov
mov
adc
dec
push
mov
mov
sbb
mov
mov
mov
cmp
fmul
push
and
xchg
aaa
gs
pop
push
leave
cdq
sbb
(bad)
sbb
sub
add
fmul
in
shl
lods
mov
add
js
mov
ins
inc
fcomp
xor
rol
cmp
ja
or
es
hlt
cdq
push
or
neg
add
sub
xor
ss
std
fist
push
add
je
xchg
mov
das
and
test
stos
push
adc
cmp
sub
retf
scas
test
rol
test
push
inc
adc
fcom
pop
sbb
mov
and
xchg
ss
mov
scas
xchg
xchg
sub
adc
sub
sub
xchg
mov
stos
sbb
jmp
and
add
push
mov
jae
mov
scas
inc
je
cmp
mov
cmp
sub
loopne
cwde
rcr
mov
rdtsc
jge
iret
(bad)
ss
inc
jg
jge
mov
mov
ret
fimul
xchg
push
sbb
mov
add
and
stc
mov
in
jae
(bad)
int
cld
adc
(bad)
jns
scas
sti
sbb
daa
loop
ds
pop
push
rol
inc
mov
jo
mov
mov
loope
fiadd
jge
mov
out
xor
das
dec
ret
sar
pop
and
adc
cwde
dec
movs
adc
inc
jmp
push
pop
sub
fisttp
mov
mov
movs
mov
mov
test
ins
das
sub
movs
sub
mov
into
aad
and
or
xchg
mov
add
cmps
test
push
push
scas
xchg
jmp
jmp
sbb
jl
and
in
movs
enter
jle
lock
int
xor
mov
int
pop
ret
daa
push
scas
setb
xchg
and
mov
or
xchg
ja
xor
in
xor
pop
jno
or
adc
cmp
add
int
push
imul
mov
mov
ins
adc
jl
lods
(bad)
jnp
sbb
mov
jge
push
mov
aas
pop
test
jp
pusha
jmp
enter
mov
push
adc
ins
xrelease
in
jo
sar
mov
push
push
add
mov
inc
lock
cmc
out
dec
int3
imul
lahf
fistp
and
call
adc
or
or
push
pop
add
pop
idiv
arpl
lahf
int3
mov
xchg
loopne
aas
nop
mov
fwait
inc
sub
(bad)
enter
cmp
cwde
push
push
push
xchg
loope
mov
dec
dec
in
inc
sub
not
inc
jns
xlat
push
cmp
add
int
push
fcomp
sar
adc
inc
jp
xchg
das
cld
cs
jb
out
pop
jge
jecxz
das
dec
add
sub
sbb
mov
add
ds
dec
cld
sbb
or
(bad)
stc
sti
hlt
enter
into
push
jb
ins
inc
adc
jle
xor
and
dec
js
and
dec
mov
icebp
cmp
mov
mov
mov
movs
xchg
es
push
mov
mov
popf
sub
jno
(bad)
dec
mov
test
mov
inc
ret
and
and
fs
int
call
rcl
lahf
les
inc
out
mov
jns
repz
cs
fiadd
retf
addr16
(bad)
pop
jmp
outs
push
inc
and
lds
mov
mov
mov
in
test
mov
sub
jnp
mov
inc
push
xor
imul
es
pop
inc
ja
out
outs
ret
imul
cmp
mov
imul
pop
cmc
loopne
add
fst
mov
fld
imul
shl
out
inc
pop
jmp
push
jmp
push
mov
nop
in
push
loop
inc
cmp
std
retf
or
xchg
push
arpl
cwde
and
dec
stc
sub
inc
(bad)
sar
or
imul
test
scas
aaa
(bad)
dec
push
mov
int
repz
dec
or
mov
push
xor
and
sub
arpl
mov
mov
sti
pushf
inc
xor
jmp
loopne
or
inc
mov
add
sbb
cmp
jge
adc
ss
jecxz
out
and
inc
idiv
sub
dec
sti
leave
in
(bad)
(bad)
push
js
jb
dec
std
test
outs
out
retf
dec
adc
ret
sar
call
fisttp
dec
ins
push
call
dec
cmp
out
mov
icebp
mov
js
stos
add
(bad)
in
xchg
jle
xor
jns
xchg
hlt
sbb
jle
push
mov
mov
cmp
dec
jmp
aam
cld
(bad)
jmp
(bad)
jmp
jmp
mov
pop
sub
xchg
in
xor
add
fmul
fstp
mov
int
and
xchg
arpl
stc
or
pop
add
fst
stos
cdq
pop
ins
push
retf
mov
adc
and
push
push
push
and
mov
jecxz
popa
retf
ret
inc
mov
retf
out
or
jl
pop
add
mov
pop
lock
stc
inc
(bad)
cmc
jo
inc
xchg
mov
addr16
xchg
mov
arpl
mov
ds
outs
or
repz
dec
sbb
pop
rol
aaa
add
ins
test
pop
(bad)
xchg
shl
mov
aad
icebp
fldcw
add
push
pop
add
jbe
sbb
mov
enter
fisub
rcr
addr16
(bad)
dec
xchg
adc
fnstenv
sub
and
mov
sub
xchg
idiv
gs
add
push
pop
and
inc
adc
pushf
fistp
adc
mov
push
arpl
into
dec
(bad)
fnsave
or
dec
sbb
jb
dec
scas
shl
inc
push
jmp
cmps
les
jnp
hlt
push
dec
shr
adc
mov
out
sbb
stos
adc
popf
jne
call
or
and
sub
add
jno
mov
addr16
or
sub
rcl
dec
fisttp
scas
dec
inc
add
and
cmps
adc
cmps
mov
fisubr
pop
imul
pop
or
jne
inc
and
jmp
aam
xchg
lahf
pusha
cs
jo
sub
xor
lock
add
adc
fsub
cmp
add
repnz
daa
je
fnstsw
ins
es
jge
jmp
addr16
aaa
push
ins
xchg
loop
mov
cmp
push
mov
mov
push
cmp
ficomp
addr16
mov
sti
retf
out
jae
lahf
and
mov
(bad)
in
fidiv
scas
pop
sahf
enter
inc
test
lods
mov
cmps
jl
and
and
fs
sub
push
cmp
mov
pushf
leave
and
adc
push
and
nop
(bad)
jmp
and
and
cmp
arpl
es
in
aas
sub
ins
retf
sbb
push
sbb
xor
pop
cmp
pushf
sbb
loope
gs
(bad)
xchg
mov
cmps
js
lock
and
int3
and
pop
retf
add
cmp
sbb
mov
popa
cmp
jg
daa
or
push
sbb
add
loopne
rol
movs
adc
not
shr
jo
loopne
inc
pop
movs
and
or
jmp
jg
xor
or
cdq
in
dec
data16
xor
cmps
mov
fs
push
gs
pop
inc
(bad)
lods
es
jmp
inc
and
fnsave
sub
loopne
ja
add
add
sbb
xor
and
cmp
mov
cli
mov
popf
jecxz
icebp
and
test
jno
mov
push
push
sub
pop
add
(bad)
or
(bad)
stc
test
jbe
call
dec
les
call
sbb
pop
dec
mov
cmp
mov
xchg
mov
pushf
or
mov
aad
outs
sahf
jae
in
xor
sub
das
aam
fcomp
or
sub
lods
neg
cdq
jbe
mov
inc
xlat
push
push
ins
retf
aad
lock
in
iret
sti
hlt
mov
sub
out
loope
in
mov
push
xor
(bad)
sahf
jge
aaa
inc
cmp
inc
mov
sub
jl
mov
fcom
das
(bad)
inc
push
mov
in
mov
pop
loopne
(bad)
or
adc
mov
jns
cdq
(bad)
out
pop
sbb
dec
sbb
fild
fld
out
add
in
loopne
(bad)
das
rcl
mov
mov
inc
pop
sbb
ja
inc
or
int
stos
xor
ret
inc
scas
xchg
lods
add
add
pop
cs
mov
cmp
test
shl
scas
ins
pop
xor
xlat
out
test
adc
(bad)
sub
cmp
mov
inc
inc
push
xor
push
dec
daa
ins
sub
inc
mov
jo
xchg
movs
test
sub
dec
fidiv
ss
mov
inc
test
shr
push
cmps
scas
(bad)
jecxz
xchg
sbb
adc
cmp
push
lods
leave
jl
movs
loop
enter
addr16
pop
inc
cld
ss
cmps
(bad)
lea
(bad)
push
mov
jns
mov
jl
int
div
fs
xchg
sbb
sbb
fcomi
das
test
push
or
adc
sub
fs
mov
mov
cmps
das
ins
jno
add
jg
mov
rep
jo
push
or
loopne
push
and
jp
call
sbb
inc
test
push
popf
sti
sub
out
xor
mov
test
lods
fisub
mov
cwde
fld
rcr
rcl
cmps
dec
pop
sub
mov
xchg
pop
xchg
int
add
xchg
scas
shl
mov
cmps
jne
adc
push
stos
outs
fs
inc
add
cdq
mov
xor
and
retf
imul
mov
aaa
xor
xchg
xor
les
sete
inc
mov
mov
or
(bad)
outs
jmp
jo
dec
inc
jl
push
xchg
ret
jo
loope
xchg
cmp
shl
cwde
in
inc
pop
push
(bad)
outs
scas
shl
add
jecxz
mov
xor
cmp
jnp
mov
sbb
dec
dec
sub
fs
push
scas
test
fwait
(bad)
clc
xor
mov
and
dec
aad
shl
stos
mov
(bad)
inc
cmp
ja
push
or
sbb
push
xchg
arpl
sar
cmps
cmp
sbb
sub
ror
sbb
and
loope
adc
pop
in
(bad)
jg
imul
cmp
fcomp
adc
mov
(bad)
jg
jb
dec
push
sub
sub
shl
imul
in
fld
inc
or
call
push
aas
mov
in
sbb
fild
retf
ret
ss
mov
and
add
stos
in
cmps
cmps
sti
retf
test
add
(bad)
xor
pop
jae
ror
and
jmp
adc
jns
scas
pop
ins
mov
inc
ret
sbb
adc
adc
sbb
scas
jne
push
adc
mov
sbb
lods
ja
dec
mov
cwde
mov
lea
adc
mov
ret
cwde
dec
push
lods
sbb
adc
pop
or
add
stos
movs
shr
aas
es
or
fiadd
xchg
movs
rcl
out
loop
xchg
aas
fiadd
test
push
ficom
xchg
xor
aam
leave
push
jle
ret
loope
cmp
ret
xor
fs
sbb
int3
aam
xchg
sub
jmp
cwde
and
add
ficom
sub
cdq
jecxz
movs
and
xlat
dec
shl
retf
loopne
xchg
pop
dec
test
icebp
inc
mov
cmp
retf
int
repz
mov
aas
(bad)
aas
add
jmp
mov
dec
imul
xchg
ret
xchg
push
mov
jl
leave
repz
test
fst
je
cmps
adc
rol
in
mov
jno
inc
mov
and
xchg
sub
rol
addr16
(bad)
and
cmp
fimul
out
add
rol
ja
popa
xchg
xchg
add
inc
xor
sbb
cmps
lock
sar
stos
adc
jecxz
es
test
mov
pop
pop
test
fsubr
dec
je
push
repnz
xchg
push
add
mov
outs
adc
sbb
and
rol
jb
pushf
cmc
movq
pushf
adc
inc
add
jecxz
inc
gs
cwde
scas
xor
xlat
jp
mov
mov
aaa
ins
and
jno
dec
iret
push
mov
(bad)
fxam
aaa
pop
ja
pushf
not
mov
mov
aas
test
stc
gs
or
aam
loopne
sub
xchg
xchg
(bad)
mov
(bad)
jmp
sbb
add
jg
add
loopne
pop
in
mov
sbb
out
inc
mov
cdq
aad
xlat
(bad)
out
test
cmp
and
jle
aam
sbb
fwait
ss
mov
lea
lods
lea
mov
ins
fidivr
iret
and
cmp
mov
xchg
enter
es
pop
pop
push
in
jp
test
jp
pop
pusha
push
ror
dec
sti
leave
lds
xor
call
mov
mov
cmp
pop
pop
in
call
call
cmp
mov
jmp
cld
sbb
aad
xor
in
add
mov
inc
mov
stos
push
aaa
mov
pop
movs
mov
call
enter
aam
fstp
jae
push
mov
adc
sbb
test
add
add
fsubr
mov
std
mov
sbb
aaa
loope
xor
call
leave
lods
je
les
(bad)
or
xor
sub
xchg
xor
sbb
movs
mov
loop
call
push
sub
xchg
stc
mov
outs
jg
push
jns
call
inc
nop
repnz
out
les
enter
and
cwde
push
and
sbb
ja
repz
cs
hlt
shl
adc
xor
icebp
mov
leave
mov
jl
es
imul
push
loop
pop
mov
cmps
enter
ret
mov
cmp
jno
adc
add
popa
cmc
add
call
pop
xchg
sub
in
retf
aaa
mov
cdq
mov
cmp
inc
popa
mov
mov
aas
cmovne
sbb
mov
call
cmp
mov
je
xchg
dec
push
ret
js
aas
mov
aaa
xchg
loope
push
outs
lahf
push
jl
movs
not
test
xlat
add
shl
or
or
shl
inc
add
xchg
icebp
sbb
data16
push
aad
sbb
cmp
inc
outs
outs
loop
cmp
aad
sub
pop
repnz
push
dec
inc
dec
leave
mov
ja
popa
jae
jl
or
lahf
out
xlat
dec
pop
xchg
(bad)
test
mov
int
pop
xchg
test
adc
jae
call
fiadd
ficomp
mov
cli
bound
fidivr
(bad)
ins
mov
movs
test
sub
inc
push
enter
mov
jmp
inc
loop
cli
loope
js
and
cmp
xlat
data16
sub
add
data16
stos
test
pop
jg
jmp
loopne
dec
das
dec
jno
js
repnz
stos
shufps
loope
inc
(bad)
cli
cmp
popa
lock
aas
sbb
cmp
leave
mov
test
(bad)
inc
and
mov
mov
sti
mov
gs
mov
pmullw
pop
jo
xchg
mov
rcl
add
mov
sbb
lods
outs
and
and
fsubr
clc
mov
clc
cdq
mov
push
js
adc
push
cmp
xchg
sub
mov
add
mov
inc
popf
es
stos
sub
push
pushf
cmp
movs
mov
popa
arpl
xchg
mov
jno
mov
aam
jo
xchg
adc
scas
lea
mov
cmp
test
sbb
lea
jo
(bad)
jmp
mov
lods
fimul
mov
dec
push
cmps
sbb
pop
sub
push
sbb
loop
jns
push
in
pop
or
mov
cld
mov
jb
sub
and
adc
mov
int3
iret
daa
mov
adc
(bad)
inc
rol
add
push
inc
pop
push
mov
arpl
iret
ds
sbb
in
call
lods
and
mov
test
std
test
out
push
pop
jmp
ret
icebp
jbe
cmp
repz
xchg
div
xor
icebp
mov
aaa
enter
mov
aad
call
and
mul
stc
imul
mov
repnz
or
movs
inc
mov
cmp
cmp
ret
adc
and
(bad)
xchg
loope
and
inc
mov
js
fstp
mov
mov
pop
js
les
xor
mov
pop
sub
adc
mov
or
fadd
push
outs
mov
paddd
pusha
cmp
mov
sti
cld
xor
cmps
out
mov
push
xchg
inc
jmp
xchg
js
das
mov
inc
xchg
or
stos
lock
stc
retf
cwde
fs
fsubr
call
(bad)
or
add
push
xchg
popf
cmp
aas
pushf
nop
sbb
pusha
xor
pop
mov
iret
stos
pop
(bad)
jmp
xchg
mov
hlt
jmp
ds
mov
scas
jae
push
or
sbb
mov
xchg
test
add
xchg
sub
lods
daa
cmp
or
je
or
inc
and
stos
out
mov
retf
inc
adc
pop
mov
ret
jp
jo
leave
inc
scas
scas
pop
jo
imul
mov
pusha
inc
out
mov
pop
pop
mov
or
test
fld
inc
mov
dec
adc
test
in
aad
add
aam
and
aaa
sub
add
icebp
ret
jns
(bad)
sub
js
int3
retf
data16
pop
pusha
jne
jno
adc
in
push
mov
lods
stos
scas
stos
cs
jb
xchg
xor
jmp
adc
push
or
enter
inc
push
fldcw
inc
xchg
push
cmp
and
sti
js
mov
aaa
lahf
jns
shl
mov
sbb
jbe
(bad)
(bad)
add
clc
je
mov
xchg
push
xchg
or
mov
fild
sub
movs
and
into
mov
call
push
(bad)
sub
cmp
jnp
jle
inc
imul
pop
and
mov
inc
inc
cmp
mov
das
call
(bad)
jns
pop
add
cmps
popa
push
in
jmp
inc
mov
rol
jl
and
mov
dec
or
cmp
sbb
shr
mov
sar
(bad)
cmp
psubq
icebp
xchg
sbb
and
fs
daa
pop
(bad)
mov
mov
push
xor
jno
aam
shr
push
xor
xor
push
xchg
fidiv
push
lea
sub
xchg
jecxz
(bad)
outs
in
jl
push
xchg
mov
loop
sub
movs
mov
inc
jae
js
(bad)
addr16
adc
jl
ficomp
jbe
scas
cmp
imul
retf
imul
mov
out
add
call
cmp
or
inc
fsub
pop
pop
fmul
sahf
out
mov
push
push
neg
std
sbb
sub
popf
jnp
adc
cdq
pop
xchg
int3
pop
push
add
xchg
inc
js
mov
fwait
push
cmp
push
or
ja
scas
in
jbe
dec
(bad)
mov
mov
inc
and
jl
daa
mov
cld
aas
repnz
out
test
in
add
and
ds
mov
mov
pop
xchg
sbb
movs
(bad)
in
test
movs
mov
xor
jp
(bad)
cmp
(bad)
pop
adc
mov
pop
cli
mov
imul
sbb
cmps
addr16
(bad)
in
sti
js
stos
mov
cmp
stos
nop
add
sbb
or
add
xor
xchg
add
sar
mov
test
lahf
cwde
call
dec
lea
xchg
and
repnz
daa
mov
ds
pop
mov
ds
mov
or
and
dec
fsubr
leave
ins
jg
jb
mov
das
in
call
(bad)
popf
nop
fstp
sub
loopne
lea
xor
jge
ins
pop
(bad)
inc
nop
mov
ffreep
popf
cmp
outs
mov
add
je
jnp
jae
push
push
(bad)
lock
sar
inc
add
pop
inc
mov
pop
cmp
push
push
sbb
loop
shl
sub
jno
jae
movs
jecxz
mov
push
in
mov
mov
add
mov
dec
pop
rol
xchg
jae
movs
xor
inc
push
ret
fnstsw
into
ret
mov
push
xor
jae
mov
rcl
aas
and
fwait
jle
popf
cmps
rcr
loopne
test
loope
jmp
or
fistp
sub
push
(bad)
pop
sbb
enter
mov
movs
cmps
dec
push
fcmove
gs
adc
adc
sbb
xchg
lahf
nop
inc
xchg
daa
adc
dec
loope
scas
and
pop
(bad)
pop
ss
fcomp
xlat
and
or
loope
js
(bad)
fdivr
push
hlt
fsubp
xor
jp
cmp
inc
cs
orps
adc
mov
mov
fisub
xor
jmp
sbb
(bad)
inc
aas
push
or
mov
aaa
mov
movs
shr
adc
nop
cdq
(bad)
shl
dec
xor
popa
pop
loope
outs
jle
ins
and
mov
mov
push
or
scas
iret
or
nop
xor
fbstp
stos
add
add
jae
inc
push
dec
or
aaa
es
inc
adc
ret
xchg
bound
xchg
inc
push
pop
ret
mov
pmaxsw
leave
dec
mov
sub
cmp
dec
ins
je
or
and
aad
int3
push
stc
aaa
out
pop
js
push
lock
mov
ret
xchg
(bad)
and
xor
mov
movs
jb
out
cmp
inc
daa
inc
aas
in
lahf
loopne
dec
pop
dec
sbb
pushf
pop
add
faddp
or
lods
lds
lahf
mov
pop
lahf
(bad)
or
xor
xor
or
mov
je
aas
mov
fs
test
mov
push
mov
xchg
cwde
shl
pop
or
imul
pop
add
std
movhps
or
repz
sub
or
out
mov
(bad)
mov
frstor
fmul
out
adc
sbb
inc
lock
lea
sub
call
mov
mov
les
pop
push
clc
mov
dec
fld
mov
xor
fist
test
cli
sub
jb
popa
xchg
sbb
out
mov
enter
jbe
xchg
adc
cmp
stos
add
pop
sbb
movs
dec
jmp
add
ss
dec
clc
or
mov
pop
add
mov
arpl
dec
dec
xor
and
pop
movs
(bad)
das
sbb
(bad)
pushf
test
dec
repnz
jg
call
sub
xchg
cmc
and
jmp
test
lds
stos
lea
jmp
jo
daa
(bad)
iret
mov
outs
push
or
enter
sahf
aaa
loop
jl
or
mov
pushf
adc
outs
cdq
imul
xchg
pop
js
pop
xchg
or
mov
aam
test
sbb
bound
outs
add
shl
sbb
xchg
enter
push
imul
add
lods
pop
scas
dec
sahf
popa
jno
ins
popw
mov
shl
mov
mov
lods
add
ins
aam
inc
xchg
mov
addr16
adc
leave
out
(bad)
imul
je
or
push
test
inc
push
fiadd
stos
sub
js
dec
ret
push
jne
xchg
jmp
sub
mov
shl
fld
mov
jnp
jl
fisubr
pop
adc
add
xor
pop
pop
aam
out
xor
add
aam
stos
push
pushf
daa
dec
jnp
in
adc
xchg
mov
fstp
sbb
fwait
repnz
stos
stos
clc
mov
popa
outs
and
or
data16
(bad)
dec
ds
(bad)
inc
out
mov
add
jle
add
inc
sbb
push
xchg
lds
or
pushf
out
push
out
es
les
lds
adc
add
jg
add
sahf
xchg
sub
pop
mov
adc
pop
xchg
adc
cwde
pusha
int
xchg
pushf
nop
rol
aaa
xor
cmp
out
pop
push
nop
test
popf
data16
pop
push
xor
sub
mov
fs
or
int
dec
test
mov
retf
fwait
and
rcl
jnp
mov
push
adc
(bad)
dec
inc
push
mov
mov
retf
cmp
sub
in
jmp
or
std
xchg
daa
adc
or
(bad)
dec
std
ret
stos
int
lahf
add
movs
cwde
mov
dec
adc
and
mov
test
pop
sbb
arpl
push
test
ins
lods
sbb
mov
lods
out
fstp
xchg
out
scas
xchg
mov
fidivr
repnz
cs
(bad)
add
mov
pop
ja
(bad)
xor
(bad)
into
int3
jp
mov
dec
ret
loope
jbe
sub
mov
add
jle
xor
ret
retf
gs
outs
pop
jbe
imul
xchg
jb
mov
call
(bad)
loopne
scas
add
iret
in
aam
mov
adc
sub
cs
adc
fidivr
mov
leave
ins
inc
ss
outs
lock
cmp
in
xchg
arpl
fisttp
out
xlat
scas
and
dec
mov
ds
outs
test
pop
and
cwde
add
dec
loopne
xchg
das
leave
xchg
inc
push
and
pop
fwait
dec
js
test
imul
out
or
scas
lds
imul
push
popa
cmp
push
mov
mov
(bad)
int3
xchg
add
pop
les
adc
test
rcr
(bad)
popf
sub
inc
sub
ins
cmp
push
popa
daa
call
dec
in
out
jns
out
mov
inc
addr16
ins
ret
cmp
enter
cmp
test
dec
sub
mov
xlat
xor
push
addr16
sbb
cmps
xchg
call
lds
ret
push
jmp
lds
fadd
add
aam
ret
scas
fcomp
jno
loop
mov
je
fcmovnu
jmp
push
xchg
xchg
jl
or
mov
sub
ins
arpl
and
mov
lahf
cs
lock
inc
stc
hlt
frstor
shl
inc
jg
push
push
fnsave
jns
mov
sub
sbb
fstp
xchg
jnp
push
inc
movs
mov
inc
mov
(bad)
in
es
and
or
mov
adc
or
push
and
push
or
adc
rcr
shr
bound
cmp
std
push
pop
cli
jae
push
add
or
adc
(bad)
in
test
mov
daa
mov
jmp
xchg
push
cdq
idiv
cmp
test
mov
es
fld
sub
ja
mov
les
call
and
adc
mov
dec
fisttp
mov
lahf
sbb
mov
mov
dec
or
std
outs
pop
and
int3
push
gs
daa
lds
mov
mov
sbb
mov
fcmovnb
dec
mov
adc
xor
add
and
cmp
nop
sbb
xor
movs
in
retf
dec
iret
inc
sub
scas
je
movs
arpl
xchg
pop
sbb
dec
or
xor
test
or
push
fidivr
rcl
mov
dec
and
imul
push
xchg
(bad)
push
adc
or
jp
retf
push
xchg
xor
mov
mov
(bad)
imul
push
fldenv
cld
mov
sub
cmp
sbb
dec
add
push
fwait
sbb
aaa
movs
hlt
outs
jno
neg
add
pop
mov
test
dec
inc
jb
rdpmc
push
mov
es
xchg
xor
add
loop
in
outs
mov
test
push
adc
mov
mov
shr
int3
test
jmp
mov
stos
loopne
leave
push
stos
(bad)
or
mov
sub
in
popa
and
xchg
cmp
dec
jmp
pop
sub
repz
mov
idiv
pop
add
pop
cld
cmps
pop
icebp
jbe
adc
sbb
ret
out
pop
popa
test
stos
ret
mov
push
cmp
cmp
and
cdq
push
ins
xor
dec
jmp
xchg
enter
jp
and
popf
mov
arpl
pusha
leave
push
jl
lds
adc
(bad)
test
inc
rcr
push
add
sub
addr16
inc
shr
push
push
sbb
xor
pop
xor
jmp
pop
push
pop
sub
inc
(bad)
and
popf
push
sbb
out
mov
sbb
daa
in
and
add
cwde
out
mov
xor
rcl
push
je
dec
int
out
cld
jge
fstp
and
rol
mov
icebp
jne
cli
hlt
rol
js
or
jl
dec
ja
jb
or
fimul
push
es
rcl
in
bound
mov
pushf
mov
cmp
leave
out
dec
pushf
or
sti
pusha
xchg
lock
out
jp
push
inc
cmps
xchg
retfw
stc
cmp
fdiv
movs
jo
or
jnp
les
stos
call
mov
and
sbb
cli
inc
ret
pop
(bad)
xor
or
test
fld
sahf
cmps
sub
out
ficom
xchg
sub
add
pop
js
push
mov
call
pop
dec
jg
in
ins
cmps
jle
out
dec
je
in
ror
test
inc
mov
fisttp
pop
sub
jbe
mul
lahf
inc
add
mov
(bad)
jle
sti
mov
test
cdq
ret
add
(bad)
push
rol
sbb
in
and
sbb
ret
into
ficomp
enter
sahf
mov
sub
add
sbb
(bad)
mov
cs
jne
push
popa
and
add
xlat
cmp
sbb
in
xchg
cmp
rcr
fmul
out
pop
xchg
mov
mov
jl
mov
nop
mov
mov
lods
push
int
push
push
in
fnsetpm(287
sub
jne
adc
lods
xor
pop
cmc
leave
mov
mov
jne
loop
shl
es
adc
jle
push
sub
shr
sti
(bad)
fs
push
ret
pusha
(bad)
test
stos
jae
cmp
add
nop
retf
imul
shl
xor
pop
fsub
mov
out
lock
inc
inc
aaa
xchg
xchg
inc
push
xor
pop
dec
mov
mov
retf
je
mov
shl
fst
neg
jmp
sub
add
push
and
add
mov
sbb
(bad)
aas
retf
retf
pop
fld
dec
sbb
sub
imul
dec
mov
in
cwde
out
fwait
sub
xor
push
addr16
cld
jl
leave
push
xor
mov
sub
(bad)
push
dec
lods
(bad)
in
mov
adc
aas
test
(bad)
stos
les
cmc
xor
sti
jl
jmp
cmp
jecxz
xlat
sbb
add
fidivr
loop
dec
ss
lea
dec
xor
pop
jb
add
pop
add
lods
cmp
xchg
mov
mov
imul
movs
mov
pop
imul
call
xchg
lahf
xchg
or
loop
xor
(bad)
cmp
inc
fcom
rcl
inc
movs
test
or
les
pop
hlt
cmp
frstor
xchg
lods
add
out
and
int
stos
arpl
or
and
loope
mov
or
retf
inc
adc
sbb
sahf
cmp
inc
xor
aam
adc
scas
inc
add
jno
pop
pop
gs
jp
pop
mov
adc
push
sahf
jns
enter
push
jl
xchg
sbb
mov
sbb
test
cli
mov
popf
mov
pop
jecxz
call
xchg
xor
lods
lock
dec
lods
fs
outs
addr16
push
push
mov
sub
ret
clc
jmp
outs
or
xchg
iret
xor
in
stos
jle
jp
push
sbb
int3
cli
jnp
fst
sbb
ficom
cmp
mov
and
dec
adc
sub
movs
sbb
mov
cmp
xor
add
cvtsd2si
push
cmp
shl
sub
into
push
inc
lds
dec
xchg
repnz
adc
repz
pop
jne
pusha
and
dec
xor
das
xor
push
cwde
in
mov
call
imul
mov
faddp
add
in
ss
sbb
stos
repnz
out
mov
test
sar
dec
out
cmc
push
push
mov
jae
xchg
cmp
push
dec
fs
push
in
inc
jb
loopne
xchg
addr16
mov
adc
int3
arpl
mov
shr
mov
movs
mov
or
jg
mov
add
shl
js
test
pop
hlt
dec
mov
mov
cmp
pop
lahf
js
fnstenv
retf
pushf
adc
push
mov
(bad)
xor
pop
xchg
ins
or
int3
out
pop
inc
mov
sbb
fisub
cwde
ds
(bad)
push
jb
or
adc
pop
push
data16
or
lods
stos
data16
pop
ret
popf
ret
call
les
jne
jle
dec
adc
xchg
cmp
push
leave
pop
xchg
jl
dec
mov
adc
into
jb
and
or
and
mov
es
call
or
mov
push
rcl
dec
movs
inc
add
inc
pop
pop
int
xchg
std
push
mov
push
cmp
enter
mov
mov
push
and
dec
pop
imul
mov
mov
cwde
fmul
xlat
fldcw
or
retf
bts
and
int3
sbb
retfw
inc
hlt
ret
sbb
in
mov
and
fcomp
sbb
adc
lods
xor
sub
dec
xchg
je
(bad)
gs
sub
pop
out
in
push
ret
les
addr16
retf
cwde
and
and
and
jmp
cmp
inc
inc
iret
mov
mov
cmp
cmc
cmp
mov
jb
xchg
loopne
gs
mov
dec
jmp
iret
mov
stos
shl
ins
dec
daa
(bad)
xlat
outs
dec
loop
mov
xor
and
sbb
cmps
or
popf
aas
fcom
dec
mov
pop
rcr
adc
mov
loop
jmp
cmps
push
in
data16
call
mov
sbb
inc
xchg
pop
pop
addr16
ja
fsub
pop
cs
cmp
xchg
out
ja
dec
add
jge
sbb
push
dec
mov
sahf
mov
not
std
scas
and
xchg
lea
mov
sbb
cmp
push
sub
jmp
adc
fbld
(bad)
adc
and
sbb
ins
cmps
sti
cmps
or
or
cmp
test
xchg
je
gs
pop
push
into
add
mov
adc
xor
xchg
mov
fistp
dec
dec
and
dec
(bad)
dec
fld
leave
scas
(bad)
ret
dec
jno
xchg
pop
inc
out
mov
xor
push
iret
les
pop
adc
mov
lock
daa
push
sub
xchg
ja
mov
xchg
(bad)
mov
xor
test
add
mov
sar
lods
(bad)
and
cmp
aaa
in
mov
add
pop
xor
xor
out
ret
int3
lea
in
jbe
or
sub
inc
sti
fisttp
xor
test
xchg
gs
std
retf
ins
out
adc
outs
movs
dec
jnp
mov
pop
jbe
scas
add
jge
xor
leave
push
cmp
jmp
jge
ins
arpl
dec
fistp
int
jmp
pop
adc
fs
sahf
lock
xor
add
cmp
xchg
loopne
and
cmc
jne
test
out
ja
mov
xchg
push
mov
sub
test
imul
sub
mov
popa
(bad)
push
std
cmp
out
ins
mov
cmovno
and
push
dec
pusha
movs
or
push
retf
mov
cmp
in
and
mov
push
add
jge
dec
mov
and
mov
outs
mov
xor
add
iret
je
cdq
cmp
adc
jmp
inc
and
xor
cdq
lods
leave
ja
out
or
xlat
inc
lds
iret
jmp
aaa
cmp
fcomp
xor
or
les
ds
jg
xchg
push
lods
push
loopne
pop
sub
test
inc
jmp
add
bound
xchg
pop
nop
int
mov
leave
pop
sbb
dec
pop
data16
sub
or
xchg
pop
(bad)
pop
cs
jecxz
imul
and
jo
lds
mov
into
rep
test
sbb
lods
mov
jns
fs
dec
cmp
push
imul
mov
xor
std
mov
jmp
add
jno
dec
push
iret
push
outs
sbb
pop
pop
and
cmc
pop
cmps
repnz
mov
inc
push
mov
adc
imul
cmp
xchg
fldcw
jns
sub
push
mov
mov
mov
mov
neg
lods
leave
sbb
cmp
sbb
fistp
mov
mov
sub
inc
mov
add
inc
xchg
sbb
(bad)
fbstp
pop
pop
cli
rol
stos
sahf
dec
jo
repz
fwait
inc
aas
inc
mov
or
jns
adc
mov
adc
cmps
push
add
sub
mov
inc
ja
dec
fs
cmps
pop
loope
test
js
and
fidiv
out
test
dec
popf
sub
mov
dec
push
cdq
mov
bound
shl
aam
cmps
fdivr
push
mov
fnstsw
dec
loope
hlt
xchg
mov
retf
retf
jmp
test
es
or
out
(bad)
push
sti
mov
mov
stos
and
mov
mov
(bad)
or
add
out
pop
repz
adc
lods
addr16
pop
xchg
icebp
(bad)
arpl
or
ret
retf
aad
das
cmp
lods
sub
inc
fild
push
dec
enter
pop
jge
(bad)
jl
ins
and
retf
xchg
es
test
ins
daa
(bad)
cwde
xchg
vmread
ss
in
out
cmps
xchg
mov
fndisi(8087
sar
test
cli
adc
mov
sub
hlt
sbb
and
movs
aaa
sbb
iret
ds
into
push
aas
outs
xor
inc
js
and
sub
xor
pop
or
fwait
sub
push
xor
pop
loop
aam
inc
cmp
adc
mov
sti
or
mov
adc
xchg
loope
adc
jne
jns
lock
jmp
mov
cld
clc
sbb
out
xchg
sbb
push
xlat
inc
adc
xchg
(bad)
shl
inc
push
inc
repnz
xor
adc
sbb
cwde
ds
adc
pushf
data16
fisubr
out
stc
in
daa
adc
lock
xchg
outs
cmps
into
mov
pop
or
jmp
std
jl
gs
inc
ss
mov
cmp
dec
sahf
loopne
aad
js
popa
fiadd
push
out
pop
pop
fs
popf
inc
dec
sub
popf
ins
out
test
jg
xchg
popa
ret
dec
popa
push
cmps
or
pop
loopne
pushf
xchg
lds
int
lahf
or
mov
into
mov
dec
sub
mov
pop
dec
and
ins
aas
ins
imul
sar
inc
cmp
push
leave
and
retf
stc
ficom
clc
push
xor
and
shl
push
daa
mov
loop
mov
mov
and
xchg
fcomp
jns
das
pop
jb
sahf
mov
pop
adc
sbb
xor
add
xchg
add
inc
xchg
test
cmp
xchg
lds
sar
xchg
xchg
or
test
test
add
jmp
sbb
out
add
enter
cmc
shl
jge
xchg
push
jae
fisub
jp
movs
fs
(bad)
jae
push
cwde
or
cmp
adc
or
or
enter
ss
in
dec
popa
dec
bound
xor
repz
mov
cmp
mov
jno
aaa
jo
lahf
push
shl
sahf
push
adc
cdq
imul
and
sub
xchg
fisttp
add
stos
icebp
pusha
sub
in
adc
call
out
xchg
sbb
bound
dec
jno
or
sbb
xor
push
inc
neg
sbb
mov
int3
fldenv
adc
sub
inc
sbb
loope
nop
movs
jo
call
es
add
and
lods
fldcw
mov
jp
lea
cmp
mov
dec
or
mov
mov
mov
aad
adc
loopne
sbb
push
cmp
adc
and
(bad)
sbb
in
inc
iret
cmp
adc
xor
sbb
(bad)
xlat
fs
ss
or
movs
jl
inc
les
and
mov
cmp
rcr
imul
aam
das
popa
add
xor
or
or
mov
inc
aad
out
lods
psrad
outs
div
(bad)
stc
data16
retf
mov
test
cs
dec
loop
add
xor
sbb
push
adc
add
add
mov
mov
cli
aaa
pop
stos
xor
sbb
imul
xchg
xor
mov
inc
addr16
(bad)
in
and
xchg
stc
sbb
sub
inc
out
jmp
xchg
repz
fmul
test
scas
icebp
and
xchg
add
push
iret
inc
and
sub
rcl
add
hlt
fdivr
jl
pop
inc
fwait
jl
xor
jmp
(bad)
ficom
loopne
mov
fisub
int
call
dec
mov
adc
jge
jno
rcl
out
or
adc
call
push
mov
jle
int3
adc
leave
push
add
sub
repz
repnz
aad
ins
arpl
push
inc
add
push
jns
aaa
add
sbb
pop
and
sbb
sbb
pop
adc
das
dec
test
test
sub
jg
jle
pop
aaa
or
clc
push
sub
mov
xor
(bad)
xchg
mov
ss
and
adc
adc
jae
add
int3
jae
jmp
add
add
and
icebp
mov
repnz
std
mov
sbb
pop
ret
das
(bad)
mov
inc
pop
daa
stos
icebp
clc
and
ja
inc
xlat
xlat
sbb
or
out
enter
or
das
xchg
pop
sbb
out
and
and
sbb
pop
xchg
and
adc
loope
popa
adc
in
fsubr
push
push
sti
xor
pop
imul
je
and
xchg
shr
scas
mov
adc
mov
retf
test
lds
pop
xor
mov
or
mov
inc
xor
xchg
dec
and
mov
push
mov
sub
mov
mov
mov
lds
data16
push
(bad)
pushf
lods
cwde
xor
sbb
out
xlat
jmp
cwde
mov
cmps
or
ins
adc
fcom
cmc
xchg
xchg
popa
xor
push
xchg
pop
sbb
das
xchg
push
jle
dec
ror
cwde
mov
cwde
push
cmp
inc
movs
loop
xor
push
mov
jmp
cmp
in
stc
cli
lea
pop
or
fsub
movs
(bad)
pop
or
jmp
call
inc
pop
mov
popf
adc
mov
jae
xchg
push
pop
test
mov
cld
sbb
sub
mov
sbb
in
pcmpgtb
mov
xchg
push
sub
mov
mov
popa
call
enter
pop
mov
stos
and
call
aam
push
(bad)
arpl
jmp
fst
and
and
pop
mov
push
xor
and
jmp
lods
out
dec
mov
add
and
or
sti
push
dec
outs
lock
dec
inc
adc
push
je
cmp
dec
jbe
dec
call
cmp
arpl
fidivr
add
lods
or
xor
sbb
xor
dec
mov
push
leave
inc
rcr
add
push
sbb
and
out
adc
pop
xchg
pop
pop
push
jl
dec
stc
repnz
inc
xlat
inc
dec
mov
std
mov
adc
mov
mov
mov
call
sub
imul
sbb
pop
xchg
mov
add
dec
data16
dec
outs
jmp
push
addr16
inc
xchg
add
sahf
arpl
or
inc
cs
mov
ins
cld
test
xchg
aad
sbb
stos
inc
lods
dec
aad
sub
mov
push
mov
ror
lahf
mov
or
out
lahf
xor
xchg
jg
rcl
enter
mov
or
ds
shr
and
icebp
cmps
jo
call
dec
arpl
add
cmp
or
inc
cs
dec
mov
icebp
loopne
outs
call
fild
popa
hlt
push
jmp
add
push
iret
outs
hlt
jb
cwde
inc
sti
stos
and
and
mov
adc
xor
repnz
bound
push
push
std
xchg
cmps
iret
mov
cmp
mov
mov
mov
inc
fst
lods
jbe
arpl
inc
sub
frstor
sub
xor
add
and
repz
sub
aas
pop
int
jno
pop
or
(bad)
dec
xchg
out
mov
cmp
mov
repz
jb
outs
sbb
ds
leave
sub
sub
push
mov
xchg
fild
in
push
dec
std
jno
mov
ins
ret
fmul
mov
in
fdiv
push
sbb
pop
test
lods
fild
das
pop
add
ror
mov
cmps
pop
out
in
and
sbb
loop
mov
ins
jmp
leave
call
sub
pop
jmp
stc
outs
aad
add
mov
push
popa
xchg
cmps
pop
or
or
pushf
mov
mov
jns
gs
fcom
test
sbb
test
or
mov
add
sub
(bad)
cmps
push
inc
lods
icebp
repz
dec
fs
add
in
jnp
aam
dec
push
sbb
sahf
nop
fmul
xchg
and
loope
imul
imul
call
iret
imul
loopne
add
cmp
lods
jbe
shr
mov
std
call
aad
add
data16
adc
in
dec
cmp
arpl
(bad)
fild
outs
iret
(bad)
loop
adc
push
in
je
pop
out
pusha
jle
std
mov
aaa
push
retf
fiadd
lea
inc
fwait
sub
test
xor
sahf
ficom
cdq
cmp
xchg
jle
and
dec
rcl
scas
mov
and
or
mov
aas
shr
xchg
sahf
mov
sbb
dec
in
(bad)
sbb
stc
aam
dec
inc
or
dec
mov
nop
mov
mov
adc
outs
adc
inc
and
push
push
cdq
ret
jp
clc
push
mov
xor
add
cld
out
fs
lea
xchg
(bad)
loopne
cwde
sub
and
sub
(bad)
rcl
jecxz
and
fisttp
pop
scas
test
ja
(bad)
jmp
retf
jne
into
jb
adc
out
mov
into
clc
jg
data16
fcom
ror
add
inc
mov
(bad)
clc
mov
jecxz
xchg
bound
int3
mov
pop
push
and
ja
nop
mov
into
cmp
inc
xchg
cli
aam
mov
icebp
retf
stos
adc
(bad)
movs
add
call
ret
jp
or
jb
call
mov
retf
sbb
sub
mov
xchg
out
or
xchg
fs
push
sti
mov
inc
mov
jle
and
mov
shl
or
dec
icebp
cmp
call
call
push
jmp
mov
adc
jg
imul
xchg
sahf
sbb
dec
dec
jl
jbe
sbb
test
out
mov
mov
push
xchg
xchg
adc
mov
repz
ret
hlt
or
stos
sbb
retf
xor
jmp
das
or
in
jno
dec
push
aam
and
out
fsub
cdq
test
fcomp
cmp
je
aad
fcmovnb
data16
loopne
icebp
cmp
retf
xchg
xchg
mov
and
call
adc
cli
shl
test
daa
mov
or
imul
ins
lods
out
push
aas
pop
mov
sub
jno
xor
test
add
ja
ins
out
dec
adc
pusha
ret
ds
scas
ror
xchg
popf
xchg
xor
aam
xor
test
adc
mov
test
js
pusha
pop
out
jae
pop
add
and
shr
daa
add
sub
mul
mov
prefetch
or
fs
movs
jmp
(bad)
repz
sahf
pusha
jne
pop
cld
retf
aas
fild
adc
aad
test
cdq
cli
sbb
shr
cmp
push
inc
fnstcw
adc
pop
cmc
and
je
call
mul
(bad)
sub
xor
mov
(bad)
aam
lods
imul
xor
pop
ret
xchg
add
jnp
jnp
or
and
dec
retf
adc
push
(bad)
das
mov
mov
shr
inc
sub
test
loopne
call
fcomp
mov
into
sub
sub
call
out
xchg
xor
jbe
cmps
(bad)
push
push
aas
jne
jns
pop
ins
push
push
sbb
pop
pushf
jmp
ins
cmp
mov
add
cmp
sub
push
js
ds
dec
push
popf
push
enter
leave
clc
pop
(bad)
sub
dec
sar
mov
mov
dec
sub
rol
push
popa
inc
arpl
and
lds
outs
outs
popf
jo
jp
xor
push
sbb
aaa
inc
ins
sbb
mov
mov
mov
stos
xchg
adc
mov
rcpps
and
nop
js
das
pop
mov
jbe
xor
daa
xchg
cmps
cmps
or
mov
ins
add
inc
out
add
mov
pop
ret
cmp
(bad)
dec
shl
data16
retf
test
dec
aas
pushf
lock
rol
lods
es
sahf
shl
inc
cwde
neg
jl
sbb
das
jle
es
(bad)
lods
dec
sub
iret
iret
ins
dec
mov
or
push
cmp
inc
jecxz
dec
jp
push
push
push
push
sar
mov
ins
int
loope
stc
sub
cmp
cmp
cmp
leave
dec
cli
mov
sbb
outs
dec
push
jb
fdiv
ins
outs
lods
mov
inc
pop
push
pop
iret
(bad)
cmp
hlt
imul
add
outs
mov
js
mov
mov
mov
add
fwait
mov
popf
(bad)
test
xchg
mov
dec
test
lock
jmp
xor
mov
jbe
popf
stos
cwde
clc
fidivr
xchg
mov
pop
loopne
cdq
out
or
jmp
ror
adc
pop
and
cmps
lods
jae
cmp
call
cmp
dec
cdq
sub
inc
movs
dec
movs
fs
mov
push
jns
fisttp
dec
(bad)
shl
inc
pop
mov
cwde
adc
aas
push
or
cmp
aad
inc
adc
imul
(bad)
xchg
out
retf
fwait
pushf
test
mov
shr
fdivrp
or
(bad)
mov
mov
mov
in
fistp
xchg
test
jecxz
ror
lahf
jnp
pop
retf
retf
pop
call
gs
pop
inc
jns
call
lods
push
fs
inc
xor
add
and
add
inc
(bad)
xor
std
daa
add
loope
lock
jbe
fnstsw
jl
pop
(bad)
push
jl
fild
push
sbb
movs
jno
call
repz
mov
xchg
cmc
xchg
sbb
sub
jge
gs
stc
sub
dec
cmp
or
push
lods
or
(bad)
adc
daa
out
mov
sub
in
ror
sub
inc
adc
dec
push
pop
imul
xor
inc
(bad)
loope
pop
cmp
(bad)
pushf
clc
xor
jbe
jmp
out
mov
into
jo
sub
rcr
dec
retf
add
pushf
push
not
iret
hlt
xor
addr16
inc
cmp
sub
in
data16
arpl
inc
mov
lock
inc
adc
in
enter
xor
(bad)
mov
add
bound
jnp
cld
jmp
xor
ds
sub
push
inc
scas
dec
xchg
mov
lds
test
(bad)
push
push
cs
rcl
(bad)
dec
pop
scas
jle
push
fisttp
adc
xchg
adc
test
call
ss
pop
clc
inc
adc
xchg
mov
or
cmp
outs
retf
pop
push
mov
imul
mov
ret
pop
jmp
mov
mov
out
clc
mov
sbb
and
popf
xchg
cmps
mov
pop
pop
fst
add
int
mov
adc
clc
call
mov
or
(bad)
neg
sbb
adc
std
push
add
and
shr
pop
in
cmp
sar
mov
cmp
mov
scas
lock
in
pop
adc
rcl
mov
and
inc
dec
test
sbb
and
and
adc
fwait
outs
xchg
adc
(bad)
mov
adc
mov
mov
xlat
cmps
dec
lea
in
clc
adc
mov
(bad)
mov
inc
in
mov
sbb
repz
pushf
in
pop
movs
pop
and
pop
sbb
sbb
fdivrp
dec
test
out
mov
pop
int3
ret
push
stos
pop
std
xor
jl
repnz
ins
stos
cmp
or
add
(bad)
fisttp
in
push
cmps
sbb
loope
sbb
(bad)
mov
out
shl
jl
dec
jno
cmps
daa
fist
jmp
push
std
sub
pop
jle
jl
inc
cdq
aad
sbb
or
or
mov
or
outs
shl
loopne
fisttp
add
xrelease
mov
and
stos
pop
aam
ret
inc
jo
push
rcl
int3
mov
leave
leave
mov
pusha
push
jae
sti
mov
cli
in
int
pop
cdq
sbb
sub
or
fst
(bad)
(bad)
retf
mov
add
mov
aaa
das
adc
dec
das
jne
and
outs
loop
pop
sar
or
mov
fstp
sbb
fadd
pop
call
adc
pop
lahf
adc
jl
scas
jmp
push
repnz
inc
imul
pop
aas
das
add
cmp
js
stos
xchg
cwde
clc
mov
cmp
test
in
mov
push
pushf
jl
lods
mov
jbe
push
retf
cs
sub
(bad)
je
bound
dec
pop
ret
arpl
and
arpl
adc
int
pop
pop
imul
sbb
dec
or
jp
xor
icebp
bound
jl
(bad)
sbb
jle
out
sbb
mov
(bad)
shl
sub
int3
lock
bound
clc
sbb
loop
jg
pop
mov
and
popf
ja
xor
cmp
scas
mov
jae
clc
xchg
test
xor
mov
inc
dec
mov
xor
pusha
ror
jmp
inc
jecxz
push
imul
cld
pop
clc
sub
inc
pop
ins
les
je
xchg
mov
push
out
inc
jp
leave
fstp
lods
loopne
sbb
(bad)
nop
mov
cmp
xor
addr16
fs
add
cmp
or
sub
idiv
leave
das
or
cmp
inc
das
mov
cdq
rol
inc
lods
xor
and
mov
jns
leave
popf
into
ret
fistp
inc
fistp
retf
cmp
push
(bad)
cmps
aad
ficomp
loop
inc
lock
sub
mov
mov
jae
and
and
pop
aam
and
popa
hlt
test
scas
fadd
ins
dec
jle
mov
in
int
or
or
push
test
or
hlt
or
in
xlat
repnz
in
das
pop
aam
pop
cmp
mov
mov
in
mov
outs
and
add
push
xchg
adc
mov
xchg
push
call
mov
jp
adc
daa
jp
sbb
mov
fucomip
arpl
pushf
shr
in
mov
add
data16
xor
lods
and
test
mov
inc
into
retf
cmp
lods
xchg
adc
imul
and
jl
mov
adc
(bad)
xor
mov
push
inc
cmps
in
out
(bad)
mov
adc
sub
or
movs
push
and
xor
mov
pop
aad
in
sbb
je
push
loope
xchg
aad
ror
out
or
cwde
sbb
push
dec
fcom
pop
or
cmp
mov
jmp
movs
adc
pop
pop
test
pop
mov
sub
xchg
out
aaa
pop
retf
stc
jg
cmp
das
xor
add
pop
push
sbb
and
fs
jno
inc
xor
mul
mov
call
mov
jecxz
xchg
mov
pusha
add
jo
enter
push
push
and
mov
mov
lods
outs
fmul
adc
dec
call
or
fwait
arpl
mov
mov
xchg
ja
xchg
or
jmp
push
xor
and
(bad)
arpl
inc
jg
lds
bound
adc
xlat
pop
adc
and
cwde
mov
jno
or
out
dec
push
cdq
cvtps2pi
ds
cdq
dec
inc
add
inc
adc
pop
getsec
in
cwde
movs
scas
dec
shl
and
pop
xor
jmp
in
jl
adc
cmps
loope
sub
add
and
popa
xlat
sub
fiadd
faddp
xor
pop
call
call
sbb
lock
aad
ret
stos
cmp
nop
inc
ffreep
test
adc
js
dec
cmp
imul
js
cmp
push
fcomp
xor
rcr
jo
push
xor
sbb
and
hlt
adc
iret
push
stos
jecxz
cdq
test
sahf
outs
(bad)
jmp
inc
enter
(bad)
push
aaa
icebp
push
fild
cdq
aas
or
adc
inc
mov
fsubr
stc
xchg
or
shl
je
rcr
mov
inc
sub
sbb
(bad)
pusha
dec
push
cmps
xchg
sub
inc
pushf
mov
push
jnp
mov
and
jp
or
xor
int
shl
(bad)
xchg
ret
jno
push
push
aas
jge
xor
fs
add
sub
jae
pop
bnd
and
mov
pop
dec
jns
aas
cmps
out
aad
mov
mov
mov
mov
dec
adc
das
out
adc
pusha
mov
(bad)
fldcw
mov
jo
sti
ss
mov
ret
xlat
pop
pop
out
mov
rcl
test
adc
sub
fldcw
arpl
inc
loope
cmp
or
imul
shr
mov
or
or
daa
jmp
mov
lods
test
int
jae
in
mov
adc
sub
xchg
in
ja
xor
mov
loop
dec
loop
daa
(bad)
push
hlt
jmp
in
mov
adc
adc
pop
(bad)
sbb
inc
adc
call
rcl
pop
out
mov
iret
sbb
pop
out
and
jae
jecxz
je
sahf
inc
mov
addr16
hlt
push
dec
pop
jl
cli
xor
jecxz
push
sbb
cmc
or
retf
lods
dec
addr16
test
push
popa
(bad)
(bad)
div
vmwrite
sub
adc
cmps
jb
data16
neg
inc
pusha
mov
push
pop
out
push
cld
mov
out
pop
mov
cmp
and
push
mov
cwde
dec
or
mov
jle
xlat
(bad)
imul
lds
call
jg
mov
push
loope
lds
fstp
dec
and
out
cmp
dec
push
(bad)
cmp
and
push
out
xor
nop
loop
ins
cdq
pop
xor
lds
jns
mov
outs
int
mov
inc
xchg
pop
add
jl
push
dec
adc
fistp
adc
icebp
sti
repnz
jge
add
fldenv
scas
push
sub
lods
mov
shl
sub
jae
sbb
mov
fdivr
rcl
xlat
outs
out
sbb
pop
pop
sub
dec
pop
mov
pop
or
cmp
dec
inc
call
test
mov
pop
or
pop
mov
stos
xchg
pop
popf
mov
int3
icebp
es
pop
cmps
jne
mov
mov
sbb
add
out
dec
cmpxchg
aam
outs
lods
pop
jo
ins
and
lods
int
lods
jmp
jne
or
dec
mov
lods
cmps
fsub
and
dec
shl
xchg
pop
dec
or
sbb
mov
mov
repz
jns
gs
mov
xchg
mov
xchg
into
pop
mov
call
inc
cmp
and
popf
pop
out
or
int3
inc
cmc
test
rol
and
nop
mov
mov
rcl
and
jl
clc
fmul
jmp
popf
test
ja
imul
and
xor
test
cmp
jb
in
or
pop
imul
dec
xchg
pop
inc
xor
popf
inc
mov
mov
and
or
xchg
dec
xor
pop
and
pop
xor
lods
imul
loop
lods
sahf
stc
jecxz
dec
sub
add
ins
inc
sub
popf
mov
pop
fwait
shl
lahf
add
lods
lock
jae
int3
out
or
cmc
fldenv
adc
dec
lds
scas
jecxz
sahf
dec
inc
adc
sub
and
loop
xchg
imul
aaa
std
aam
adc
loope
jo
jb
icebp
pop
loopne
stc
aaa
dec
mov
cmp
data16
or
lds
push
leave
addr16
push
fbld
test
sbb
jae
xchg
retf
pop
div
movs
icebp
or
adc
out
sub
add
xchg
cmp
out
outs
cdq
and
jp
mov
mov
out
movs
push
mov
or
push
(bad)
mov
iret
gs
pop
(bad)
imul
in
je
push
dec
jecxz
lods
div
jmp
jg
arpl
xor
scas
cli
cmp
adc
in
sub
xchg
cmp
inc
mov
shl
bound
retf
jns
js
xor
outs
jl
push
repz
les
int
lods
inc
cdq
scas
fcmovu
mov
ror
inc
lds
dec
xor
sub
pusha
nop
movs
addr16
mov
loop
pop
gs
or
jmp
rcl
arpl
pop
add
push
out
int3
mov
cmp
cmc
arpl
imul
jle
les
in
jmp
jl
loopne
mov
inc
mov
mov
test
fs
test
xor
inc
daa
mov
ror
and
push
add
scas
out
ss
pop
mov
add
in
hlt
repz
les
inc
repnz
adc
popa
jns
xchg
cmp
cmp
xor
call
jmp
push
int3
fcom
or
or
xchg
aas
lahf
add
mov
jecxz
inc
imul
jnp
out
loop
sbb
pop
lock
iret
loop
pop
sbb
pusha
into
test
pop
movs
ss
jmp
jne
shl
mov
pop
jnp
(bad)
lahf
aaa
mov
movs
mov
jecxz
repnz
fild
mov
dec
inc
mov
sbb
pop
sbb
pop
cmps
xchg
pop
xchg
cmp
push
mul
jmp
jbe
nop
(bad)
and
jno
sbb
and
jmp
jo
call
mov
jnp
rcr
loope
inc
mov
mov
xor
xchg
inc
cmp
inc
inc
mov
add
xchg
popa
subps
mov
jb
mov
stos
ret
icebp
(bad)
popf
ror
sbb
sub
pusha
push
push
and
inc
std
push
jno
pop
xchg
xlat
xor
lds
(bad)
(bad)
xor
das
dec
mov
sub
jmp
push
jb
push
movs
pop
cmp
pop
scas
add
in
push
call
adc
lock
jb
cmc
mov
push
inc
pop
push
mov
adc
sub
shr
cmp
(bad)
clc
or
stos
or
jle
adc
rcl
sub
fmul
or
dec
and
mov
mov
repnz
jle
mov
pop
mov
pop
out
cmps
cmps
sbb
push
(bad)
out
out
popf
fwait
mov
out
lods
das
mov
inc
push
movs
mov
sahf
xor
pop
cmp
adc
xor
cs
retf
mov
ficom
and
add
cmp
jne
fidivr
pop
or
dec
out
push
dec
in
jno
out
add
adc
sbb
xchg
xchg
add
sub
mov
jno
mov
cwde
scas
in
call
xor
xor
mov
fbstp
or
add
pop
(bad)
ds
fs
fucom
pop
push
push
dec
enter
movs
pusha
mov
and
outs
pop
in
sub
das
mov
cmp
and
jae
fcomp
mov
mov
inc
cmps
hlt
ja
std
call
sbb
inc
mov
jnp
sub
inc
jp
cmp
sahf
xchg
stos
jno
or
dec
retf
push
xchg
xchg
jl
push
(bad)
leave
out
mov
repnz
imul
movs
jmp
mov
retf
adc
jno
cmp
mov
and
mov
out
ret
mov
pop
cwde
xchg
xor
adc
repnz
pmaddwd
pop
push
out
ja
cli
sbb
lods
dec
aas
or
cmps
cmps
push
pop
push
jo
les
push
loope
add
cld
bound
sub
es
mov
and
jo
pop
sbb
leave
adc
dec
daa
js
cmps
jnp
adc
(bad)
jne
fnstenv
mov
and
arpl
cmps
add
xchg
sahf
aam
and
sub
and
mov
into
cli
pop
xchg
add
pop
shl
inc
xor
dec
out
jno
push
add
repz
xchg
push
ins
mov
inc
mov
jmp
jge
mov
cmp
wbinvd
inc
cmc
inc
outs
dec
(bad)
lock
inc
fdecstp
xchg
popf
shr
push
cs
(bad)
xlat
mov
aam
push
test
dec
stos
imul
push
pusha
or
mov
push
jp
popa
mov
jge
leave
cld
ins
inc
xor
fs
add
mov
push
xchg
lods
xchg
in
ret
aas
repz
imul
jns
fadd
call
xlat
sar
push
and
mov
(bad)
fwait
sbb
add
mov
inc
xchg
cmc
cmp
adc
sub
dec
fldcw
jge
lea
rol
sub
dec
push
(bad)
mov
imul
ss
and
cs
fiadd
icebp
fstp
push
add
(bad)
sub
add
int
and
xor
push
mov
stos
dec
popf
lods
int3
dec
xor
pop
jecxz
adc
scas
adc
inc
jno
add
pop
pop
dec
xchg
ss
pop
cmp
stos
into
lock
aad
jl
aas
pop
lods
pop
movs
and
mov
test
adc
in
not
dec
pushf
fwait
adc
arpl
cwde
shl
movs
bound
repz
or
jnp
out
adc
cmp
xlat
sub
push
(bad)
xor
xchg
adc
cmp
pop
mov
xchg
loop
adc
arpl
std
retf
rol
jnp
push
cmp
pop
inc
sub
or
xor
aam
sti
test
inc
sub
int3
stos
retf
out
cmp
xchg
adc
and
scas
xchg
push
xchg
shl
sahf
leave
and
push
jecxz
dec
clc
xor
sbb
cmp
dec
movs
mov
(bad)
imul
int
repnz
dec
pop
nop
dec
iret
add
test
jae
ins
pop
xchg
(bad)
xchg
sbb
xlat
ja
sbb
pop
pop
add
mov
ficom
sbb
ds
add
out
adc
out
sub
pop
add
sbb
cmp
aad
jle
mov
and
ss
pop
jbe
sbb
mov
int3
mov
dec
dec
cmps
push
pop
data16
push
pop
push
sbb
adc
mov
jae
xor
sahf
outs
jmp
sub
scas
retf
jl
and
mov
xor
repz
push
test
mov
jns
jp
repz
jo
mov
out
in
inc
and
jnp
movs
pop
test
mov
mov
inc
(bad)
cmp
(bad)
je
or
mov
test
loope
xchg
les
out
ins
sar
mov
sbb
and
fwait
push
call
adc
pop
adc
push
hlt
dec
xor
dec
fadd
mov
into
clc
aad
or
lods
loop
call
sbb
mov
lods
sar
mov
jge
mov
lds
into
movs
inc
call
mov
add
aas
add
adc
mov
out
mov
inc
leave
pop
inc
mov
fidiv
cli
punpcklwd
lods
and
outs
mov
int3
dec
mov
or
cmp
lods
aaa
clc
mov
sub
cmp
jne
xchg
xchg
dec
icebp
mov
or
fisub
jb
mov
or
js
bound
stc
push
add
and
xchg
mov
mov
adc
in
mov
xchg
dec
scas
mov
icebp
clc
cmps
enter
sub
mov
frstor
je
imul
add
out
pop
and
stos
out
jge
cmp
mov
stos
sbb
test
mov
loop
jno
out
fwait
mov
scas
or
jmp
sub
or
pop
in
imul
imul
pop
mov
dec
xchg
xchg
je
lea
gs
shl
(bad)
cmc
cmp
pop
and
pop
and
add
sahf
jnp
mov
push
ret
pop
outs
sub
iret
mov
fucom
pop
mov
jmp
test
xlat
pusha
xlat
aam
mov
push
jbe
mov
call
pop
or
data16
ins
mov
jecxz
shr
mov
cmc
fistp
mov
cdq
mov
out
mov
outs
es
pop
xchg
mov
imul
idiv
pop
sbb
mov
(bad)
fcomip
and
pop
add
ins
mov
pop
sbb
scas
pop
js
add
lds
and
imul
inc
dec
dec
fwait
sub
bound
fild
jb
xchg
adc
adc
and
int
stc
xchg
cdq
dec
cmc
out
mov
aaa
sbb
pop
lods
test
inc
ret
int3
jne
into
imul
imul
icebp
bswap
xor
daa
fld1
les
mov
push
add
pop
loopne
or
add
push
out
pushf
popf
mov
jmp
and
sbb
sahf
enter
cdq
stc
ja
pushf
pop
xchg
cmc
xchg
dec
xchg
sbb
pop
cmp
mov
js
xor
movs
push
js
movs
pop
sbb
push
or
popw
fistp
ins
(bad)
xor
push
jl
std
sub
inc
push
aaa
icebp
lds
cwde
cmp
xor
popa
jb
lock
mov
clc
ins
sub
cmp
inc
push
sbb
les
cmc
sub
nop
imul
fst
in
loopne
sub
pop
xchg
jae
arpl
pop
jb
fst
xlat
cmp
jo
out
cmp
push
cld
repz
jle
xor
mov
retf
fistp
cmp
dec
lods
push
dec
jbe
(bad)
out
outs
cmps
mov
pop
rcl
shl
adc
out
(bad)
xor
adc
dec
xchg
cs
add
dec
xchg
dec
fidivr
outs
outs
sbb
push
xchg
nop
sbb
inc
mov
popf
jmp
test
mov
mov
in
call
adc
enter
jns
cmp
xor
mov
pop
mov
les
push
xor
and
mov
sub
push
sahf
sahf
add
cmps
and
ss
adc
jnp
xchg
cmp
out
sub
jl
fadd
adc
mov
inc
aas
scas
jmp
ret
push
daa
jg
sar
adc
mov
shr
adc
test
adc
xor
idiv
cmps
ins
mov
es
add
xchg
push
lahf
pop
(bad)
call
or
mov
mov
push
in
xor
jmp
xchg
sub
dec
sbb
adc
test
jmp
aaa
mov
mov
or
cmp
and
pop
mov
jge
jns
mov
mov
inc
mov
ret
push
stos
xchg
mov
ffree
inc
outs
mov
je
inc
shl
and
sbb
das
sbb
data16
pop
sub
sti
ret
xchg
loopne
and
les
inc
pop
fwait
imul
add
out
sbb
pop
(bad)
test
mov
lods
bound
pop
add
pop
pop
cs
je
(bad)
jno
fwait
in
dec
mov
mov
jecxz
enter
xor
sahf
imul
into
mov
xchg
adc
sub
xchg
mov
fnsave
jmp
(bad)
pusha
jno
xchg
inc
sbb
add
pop
ret
adc
aad
xor
test
dec
lock
push
(bad)
retf
sti
mov
and
push
jle
test
cmp
sbb
or
cwde
pushf
test
hlt
shl
push
pop
or
mov
sbb
daa
arpl
push
sbb
movs
pusha
adc
mov
mov
mov
pop
xor
inc
sbb
sub
fisubr
xor
test
and
leave
and
rcl
sbb
pop
jmp
(bad)
in
push
xor
mov
pop
add
and
inc
pop
int
ret
and
popf
xor
(bad)
lds
sbb
sti
dec
std
jl
lahf
iret
mov
pop
cmps
jecxz
(bad)
test
ret
adc
add
shl
mov
cli
imul
in
xchg
imul
cmp
jl
addr16
push
mov
sbb
imul
neg
xor
ret
and
fsub
pop
rcl
loop
nop
cmc
sub
and
xchg
adc
mov
rcl
leave
push
sahf
out
lods
xor
sbb
adc
cdq
out
in
fisttp
or
js
add
xchg
dec
popf
add
or
retf
gs
pop
iret
fs
(bad)
aaa
pop
adc
jns
cmp
nop
mov
dec
aam
or
adc
je
lea
sbb
mov
cmps
ror
adc
stos
fistp
ins
push
or
stc
out
cmp
xor
movs
pop
data16
scas
fcom
enter
mov
pop
and
push
ret
stos
mov
sub
fcmovnbe
(bad)
fild
dec
dec
lods
in
jb
sub
ins
movs
retf
pusha
into
and
iret
leave
cmps
adc
cmps
fdivr
cdq
mov
jne
dec
and
jae
mov
mov
xor
jmp
xlat
(bad)
jno
in
addr16
lds
mov
dec
imul
nop
shl
inc
xor
inc
add
test
pop
cld
mov
arpl
imul
rol
add
mov
js
rcl
retf
pop
jecxz
shl
mov
dec
repnz
sub
inc
test
movs
mov
rcl
xlat
push
sbb
scas
xor
mov
mov
sbb
loopne
mov
into
cmp
int3
les
mov
mov
test
mov
mov
push
(bad)
and
sub
test
ds
retf
hlt
(bad)
jae
sbb
or
push
or
pop
sub
cmp
enter
xor
mov
adc
aaa
mov
cmp
mov
pop
mov
sbb
pop
test
add
and
cmc
cld
test
stc
add
(bad)
push
add
adc
adc
pop
int3
retf
mov
add
addr16
inc
lds
int
push
and
add
sub
xor
cld
jmp
and
or
jbe
out
pop
inc
out
add
xchg
cli
jmp
jmp
call
mov
dec
sar
(bad)
jp
imul
addr16
mov
pop
dec
pop
xor
inc
jno
pop
in
ror
mov
mov
push
xchg
and
xlat
pop
sahf
xchg
(bad)
(bad)
lods
cld
mov
mov
push
push
(bad)
mov
leave
or
sar
cmc
jecxz
adc
ret
dec
and
or
mov
push
adc
imul
mov
add
mov
popf
cli
jo
pop
adc
bound
adc
nop
push
mov
add
sub
popa
jbe
in
sub
jg
adc
xor
push
pop
cmp
(bad)
leave
or
mov
jbe
(bad)
loop
cmp
xchg
pop
imul
mov
cmc
aas
hlt
jnp
ja
(bad)
idiv
or
int3
sbb
js
int
ret
cli
pop
outs
add
(bad)
xor
sbb
jns
das
jecxz
and
sub
aam
movs
mov
add
push
aam
and
fisttp
(bad)
mov
sub
(bad)
std
and
push
aaa
pop
xchg
rcl
inc
test
fcomp
jmp
cmp
rcl
mov
cdq
jno
push
imul
jnp
gs
push
mov
ins
xchg
mov
cmp
push
rol
call
(bad)
lahf
mov
sbb
loope
add
pop
sub
sub
ret
mov
dec
mov
xchg
adc
call
push
mov
mov
mov
shl
popa
aaa
aas
ins
enter
iret
cmp
jg
into
sub
ret
ja
pop
mov
lea
inc
call
pop
mov
ror
mov
xchg
repz
test
in
jb
inc
mov
cmp
cmp
sti
cli
or
sub
rol
mov
pop
jge
fidivr
xchg
test
fsub
jecxz
dec
cmp
jecxz
movs
add
scas
or
ins
jmp
jp
test
outs
sub
test
jecxz
mov
std
int3
aaa
or
les
lahf
retf
mov
ds
mov
jns
(bad)
mov
pop
dec
mov
cmp
xor
js
aas
cmps
pop
xchg
mov
ss
dec
inc
or
push
cwde
push
mov
dec
jno
sbb
or
cli
jo
(bad)
loopne
push
xchg
dec
neg
add
int
mov
mov
iret
xor
jno
add
or
stos
adc
fist
inc
mov
je
mov
mov
or
ret
mov
retf
cld
out
pop
rol
scas
push
hlt
rsm
and
cmp
jmp
cmovs
pop
test
xchg
mov
outs
pop
clc
dec
sub
mov
pop
data16
add
fld
cmp
xchg
push
test
retf
iret
fs
jae
jns
test
fwait
or
xchg
jmp
in
fdiv
push
mov
lea
cwde
jo
mov
neg
sbb
lods
cmp
adc
adc
push
in
icebp
in
rcl
lahf
add
in
dec
jns
mov
popa
lods
xchg
add
loope
loope
outs
xlat
fs
adc
dec
mul
dec
jge
dec
ret
iret
mov
daa
mov
mul
sbb
cli
in
pop
inc
int
and
sbb
jo
push
mov
pop
xor
ror
add
cmp
mov
jmp
rcr
sub
dec
jp
hlt
(bad)
imul
push
jl
add
cmp
(bad)
jno
dec
clc
scas
cmp
arpl
xor
cli
fs
inc
cmp
test
lock
xor
pop
cs
add
int3
pusha
out
dec
and
lods
xchg
push
imul
push
loope
std
xchg
jae
inc
fst
jae
and
fldz
mov
mov
dec
in
mov
and
mov
retf
pusha
xor
cs
scas
cmp
jecxz
sahf
outs
test
jne
dec
xor
retf
dec
in
dec
imul
std
loopne
cmps
mov
mov
xchg
adc
and
pop
sub
and
pop
stos
rcl
rol
mov
enter
jns
push
les
sbb
and
in
(bad)
loopne
cmp
mov
or
adc
call
and
push
or
clc
mov
push
pop
push
and
test
pop
ss
push
sar
(bad)
fs
ret
jg
in
aad
pop
test
dec
icebp
repz
xchg
mov
ffree
or
push
cwde
xor
clc
cmps
push
ret
jecxz
sub
fnsave
lds
jl
fidiv
sub
push
loopne
shr
jo
sti
mov
add
mov
stc
int
sub
in
mov
and
iret
fwait
xchg
movs
xor
pop
cmps
mov
arpl
es
into
add
cmp
cmps
mov
mov
out
dec
adc
popa
fisub
xchg
mov
ds
inc
mov
xchg
dec
(bad)
xchg
outs
mov
inc
mov
xchg
sbb
fmul
imul
push
xor
popa
shl
pop
push
call
sub
pop
int
jno
mov
jecxz
lods
or
neg
out
mov
xor
test
mov
dec
test
mov
dec
sbb
stos
xchg
cmp
dec
cmp
pushf
repnz
push
cmp
repnz
sub
mov
movs
add
sub
push
push
mov
stos
into
pop
pop
sbb
dec
arpl
sub
pmuludq
pop
dec
pop
and
jl
ja
and
adc
(bad)
pop
adc
dec
(bad)
into
cdq
adc
(bad)
and
les
scas
(bad)
push
jmp
(bad)
jmp
pop
add
ds
ds
shl
aad
outs
cs
mov
jle
dec
jo
outs
pop
jecxz
xor
ds
mov
xor
push
call
sub
inc
jae
sbb
xchg
dec
pusha
inc
shl
sbb
dec
adc
push
mov
je
out
sbb
(bad)
(bad)
or
loopne
out
clc
enter
js
test
pusha
int3
aam
cs
call
mov
hlt
jge
sbb
out
dec
mov
je
dec
aad
test
push
push
jecxz
add
cmp
adc
xchg
cli
call
retf
inc
lock
cmp
mov
cmp
and
sub
stc
push
push
sahf
ss
jae
jo
add
(bad)
cmp
retf
push
dec
cmps
arpl
sbb
mov
in
dec
(bad)
movs
js
shl
cmp
out
pop
jns
xor
and
fld
xchg
dec
pushf
cld
adc
or
jae
nop
jmp
pop
pop
imul
mov
es
add
xor
mov
(bad)
and
jb
mov
jns
xchg
loope
lahf
ins
lods
mov
test
repz
sbb
lods
cmp
dec
pop
jp
sub
bound
sbb
(bad)
inc
xchg
xor
jp
add
imul
(bad)
mov
cmp
sbb
xchg
iret
jp
es
fadd
inc
cmp
pop
jne
push
sbb
dec
inc
in
ffree
or
je
lock
shl
dec
push
add
movs
xor
ret
movs
loopne
mov
inc
xchg
sbb
int
adc
xor
adc
mov
sbb
dec
test
adc
and
lock
dec
sbb
idiv
xor
cmps
lahf
out
movs
mov
cdq
fst
scas
repz
dec
cmp
cmp
adc
pop
(bad)
mov
out
(bad)
or
inc
mov
adc
mov
inc
xor
fcomi
push
lea
and
dec
outs
fisttp
dec
imul
jle
cmc
inc
fldcw
pop
aaa
mov
call
ror
(bad)
mov
add
ret
shl
pop
xchg
sbb
and
neg
lea
mov
aaa
pusha
mov
pop
movs
fmul
sub
mov
push
(bad)
and
mov
dec
fldcw
std
(bad)
inc
outs
sub
xchg
cmp
call
inc
cld
jl
int3
cs
(bad)
cmc
or
lods
dec
(bad)
sbb
data16
push
lahf
mov
clc
dec
sbb
sub
mov
stos
loope
std
xor
jnp
mov
loope
rcr
xor
sub
(bad)
pop
pop
dec
rcr
mov
xor
cmp
mov
xchg
stc
or
xchg
imul
(bad)
stos
fidivr
jbe
jne
adc
adc
cmp
dec
leave
arpl
sbb
mov
and
shl
(bad)
imul
mov
and
loope
sub
xchg
add
cmp
pop
xchg
xchg
jb
mov
clc
push
mov
jg
outs
mov
mov
cmp
inc
ss
stos
or
scas
stc
mov
std
(bad)
std
xchg
or
mov
cmps
jmp
jo
aaa
ins
stc
outs
xchg
mov
(bad)
cmp
xchg
ins
xor
mov
lods
dec
ins
lods
jle
jmp
xchg
test
or
pop
in
xchg
mov
jae
cmp
inc
test
sbb
(bad)
mov
jle
inc
add
pushf
jmp
fistp
lods
repz
jle
mov
in
scas
push
(bad)
cmp
mov
aas
sahf
shl
icebp
ins
aad
loopne
sub
cwde
fadd
mov
cs
add
fcom
cwde
out
rol
repnz
rol
imul
xchg
mov
pop
fstp
add
mov
lods
and
imul
test
pop
rep
pop
scas
dec
outs
scas
ror
inc
xor
pop
cmps
mov
outs
inc
sub
dec
fadd
dec
lds
mov
or
scas
xlat
test
cmps
outs
fnstenv
fmul
jo
outs
push
dec
adc
mov
into
popa
mov
sti
je
cmp
dec
jl
mov
or
sub
ret
out
push
jmp
cmp
or
pop
sub
sub
adc
clc
mov
pop
cmp
jge
inc
call
jge
push
adc
xor
loop
aad
sbb
dec
enter
push
out
in
push
(bad)
inc
xor
sbb
aas
and
jo
pop
hlt
repnz
or
call
stos
ret
cmp
ds
(bad)
dec
repnz
jae
sub
aas
jmp
dec
repnz
and
pop
or
mov
add
xlat
xlat
pop
push
sub
and
sub
iret
jns
inc
dec
mov
xor
mov
inc
loop
dec
test
pop
xchg
pop
out
cmp
shl
mov
ja
js
div
cmp
(bad)
int3
hlt
dec
dec
int3
and
sbb
loop
cs
fnsave
push
mov
add
jl
pop
add
jne
pusha
or
test
xlat
nop
inc
add
leave
in
xchg
or
ins
fcmovu
fimul
imul
js
pop
add
add
adc
add
cmp
jl
out
adc
(bad)
adc
ins
cmps
add
movs
jno
jbe
jno
mul
test
sbb
push
xor
outs
lds
mov
or
fsub
scas
xor
jae
ins
rcl
add
or
xor
aam
test
mov
daa
pop
mov
enter
cmps
push
jmp
mov
test
inc
movs
cld
rcr
push
mov
mov
mov
mov
xor
or
push
push
out
add
out
pop
pop
repz
pop
mov
adc
or
movs
push
popf
adc
loop
or
jle
out
or
sub
mov
xchg
inc
and
in
rol
ins
cmp
mov
mov
push
pop
pop
je
sub
stos
mov
nop
push
int3
arpl
xor
dec
in
rcl
repnz
gs
neg
jae
mov
or
sbb
pop
mov
in
or
ror
loop
dec
xor
jns
push
loopne
and
movs
imul
jne
ds
cmp
fimul
cmps
cmp
or
mov
xchg
jae
jecxz
jbe
icebp
sub
stc
mov
cli
rcl
fnstcw
xor
das
fdivp
xor
outs
xchg
sub
lods
push
jno
push
out
or
mov
lods
adc
push
popf
movs
dec
jp
js
es
inc
int3
cmp
rol
dec
mov
jmp
aad
jmp
xchg
sar
ror
test
dec
loopne
and
(bad)
pop
sbb
dec
icebp
call
cwde
adc
es
push
movs
retf
xchg
mov
and
lods
fwait
retf
in
dec
aad
mov
into
and
fwait
push
es
cmp
je
lods
ins
daa
cdq
mov
out
out
dec
cmp
lods
push
and
or
and
fcom
xchg
out
xor
mov
push
inc
out
dec
repz
aam
(bad)
imul
xchg
aas
adc
retf
and
mov
dec
or
lahf
cmps
mov
inc
xor
mov
xchg
adc
cmps
repnz
add
test
iret
out
cmp
inc
push
cmps
sub
sbb
inc
fstp
sub
sbb
push
ret
fisttp
adc
inc
call
mov
jge
mov
add
jb
mov
pusha
xchg
pop
call
ins
xor
hlt
mov
cwde
ds
ins
bnd
add
jle
xchg
sbb
mov
dec
sub
(bad)
adc
mov
add
scas
test
cmc
dec
sub
rcr
out
imul
(bad)
int
lock
mov
inc
cmp
ror
retf
mov
out
mov
iret
pop
push
cmp
loope
sbb
adc
push
js
adc
sbb
xchg
test
fcom
and
out
inc
test
mov
sbb
ins
sahf
sti
sbb
or
div
add
jg
dec
push
mov
(bad)
adc
stc
jl
jne
pop
or
stc
adc
imul
ins
aaa
popf
addr16
out
call
sub
arpl
sub
dec
test
jp
pushf
sbb
cli
cmp
inc
mov
int
jne
fnstsw
sar
cmp
(bad)
out
leave
xchg
or
cwde
cmps
pushf
ja
mov
fcomip
lds
jbe
push
xchg
ins
ja
jmp
sbb
dec
shl
in
les
xchg
jo
jns
out
adc
mov
jb
(bad)
outs
pop
ds
clc
jnp
jecxz
pusha
enter
out
and
cmps
ror
mov
out
lds
shl
lods
cmp
push
mov
call
test
mov
jb
inc
and
cmp
retf
rol
dec
push
and
retf
ins
pushf
ss
in
popa
je
fst
out
adc
lods
inc
mov
dec
je
lods
mov
test
addr16
mov
cmps
(bad)
lea
adc
fld
sti
inc
fdiv
adc
mov
in
mov
and
int3
mov
adc
call
fidivr
gs
push
out
or
push
adc
out
enter
lea
js
lock
imul
and
mov
dec
rcr
add
sahf
and
mov
ret
arpl
jne
into
cmp
retf
cmp
aaa
jb
cwde
sbb
scas
fistp
fs
dec
retf
inc
push
mov
dec
pop
pop
inc
mov
aaa
dec
(bad)
fisttp
sbb
stc
loopne
jp
loope
and
into
lea
out
add
cmp
or
outs
and
push
fldenv
(bad)
mov
loop
pop
mov
push
fs
leave
in
mov
jge
dec
sub
pushf
xor
stc
lahf
mov
push
sub
mov
in
xor
jns
lock
pusha
xchg
enter
outs
mov
cmp
pusha
test
imul
loope
shl
add
adc
sbb
loopne
out
pop
stos
outs
aad
adc
jmp
lea
inc
xchg
fild
mov
xchg
cmp
cld
cdq
loop
add
xchg
dec
stos
cld
and
and
fwait
or
xchg
pop
mov
sti
movs
cmp
cld
or
lea
popf
retf
mov
ins
(bad)
stc
in
jle
bound
ja
loopne
fild
les
stc
dec
sti
retf
xchg
cmps
sbb
repnz
retf
jnp
or
pop
pop
cmp
in
addr16
loopne
xchg
stos
sti
shl
jo
jp
imul
dec
out
jmp
mov
sbb
(bad)
ins
repnz
jno
inc
and
test
aaa
sbb
inc
loope
xor
lods
pop
or
add
mov
xor
test
(bad)
jnp
test
test
ror
add
pop
into
cmps
inc
jo
sbb
mov
movs
pop
(bad)
push
popa
das
movs
je
xchg
pop
(bad)
push
ror
add
repz
mov
aad
pop
pop
(bad)
mov
xor
cdq
cmp
mov
fnstsw
push
sub
mov
adc
xchg
call
pop
jmp
in
xor
add
pop
inc
bnd
xchg
inc
adc
mov
jmp
pop
sbb
mov
popf
xchg
out
test
fsubr
aam
icebp
jnp
add
xchg
inc
add
scas
cmp
cmp
div
imul
dec
(bad)
cmp
hlt
movs
retf
push
inc
popf
mov
cmps
mov
fcom
in
repz
mov
mov
mov
jge
int3
cmp
mov
aas
push
xor
sub
leave
jl
xchg
adc
lahf
fstp
ror
jo
js
or
mov
inc
fdivr
mov
dec
imul
pushf
fdiv
pop
popf
push
stos
or
loop
lahf
(bad)
(bad)
out
adc
test
mov
fcomp
shl
sub
mov
sbb
sub
sti
add
sbb
xchg
xchg
mov
pop
mov
movs
mov
sbb
pop
(bad)
fist
test
sbb
cli
xchg
sub
enter
mov
pop
retf
sahf
xchg
cld
out
pop
shl
repz
daa
inc
aas
pop
push
xor
jmp
sub
ins
push
mov
rcl
mov
sub
cdq
jno
push
aas
cmp
outs
jecxz
xchg
fnsave
dec
clc
shl
push
xchg
and
jl
sub
fdivr
dec
xchg
imul
cld
xchg
xchg
xchg
test
push
in
scas
popf
lea
outs
mov
add
jmp
aaa
(bad)
mov
sub
out
add
dec
dec
mov
cld
addr16
ins
dec
cdq
test
sub
xchg
push
icebp
out
cmp
cmp
test
cmps
push
addr16
mov
or
sbb
bnd
xchg
inc
cwde
sbb
push
push
and
retf
icebp
push
sub
lock
xchg
rcl
xor
sub
cmp
sbb
(bad)
sbb
xchg
aas
or
inc
add
mov
out
mov
adc
psllq
pop
lahf
dec
mov
rcr
lea
(bad)
pop
mov
pop
jno
dec
frndint
shl
jmp
hlt
or
cli
inc
dec
pusha
ds
ret
retf
mov
cli
inc
sbb
cmps
in
pop
and
dec
pop
in
inc
not
cmp
loop
push
ins
popf
rol
xor
mov
jecxz
loopne
ret
push
test
mov
out
pop
ins
mov
dec
loop
ret
(bad)
lds
mov
shl
call
push
(bad)
dec
lea
data16
mov
jmp
js
inc
loopne
add
or
ret
mov
cs
enter
inc
rol
out
lods
adc
dec
xor
jge
mov
sbb
adc
hlt
jo
scas
mov
fstp
sub
jnp
push
bound
push
mov
pop
imul
inc
daa
aad
popa
jnp
jl
push
cmp
je
and
mov
jno
add
pusha
add
mov
add
dec
rol
jp
and
mov
icebp
xor
mov
pushf
mov
fwait
adc
sahf
jne
xlat
and
cmp
addr16
idiv
lahf
xor
pop
in
cmp
pop
call
jp
(bad)
jg
fwait
inc
mov
and
sti
outs
and
loop
cmp
mov
and
shl
jge
nop
in
sbb
out
mov
pop
lock
popa
rcr
repz
into
shr
and
and
ror
rol
adc
aaa
jno
sub
xchg
jb
mov
in
(bad)
and
in
nop
js
fnstsw
push
sub
outs
or
hlt
(bad)
test
cs
(bad)
aaa
out
add
je
xlat
dec
and
sbb
stos
(bad)
mov
sub
add
jp
jb
xchg
and
inc
mov
test
sbb
ret
inc
jno
mov
mov
mov
aaa
mov
jp
mov
fsubp
sub
mov
jg
mov
repz
rol
iret
fcmovb
dec
mov
out
cmp
mov
pinsrw
arpl
dec
mov
aam
les
sub
fs
push
lods
xor
arpl
repnz
nop
cmp
outs
inc
sbb
dec
mov
xchg
xchg
out
adc
sub
adc
in
sbb
mov
js
cmp
xchg
or
inc
xchg
jnp
hlt
inc
div
cmps
mov
adc
mov
inc
in
fldenv
sbb
ret
sbb
sbb
mov
adc
pop
xor
xchg
push
mov
add
adc
cmps
sbb
daa
clc
push
sub
dec
xor
cwde
js
dec
xlat
data16
rcl
mov
jmp
leave
mov
mov
pop
jl
sub
fsub
xchg
test
sbb
dec
clc
add
lahf
test
sub
retf
or
frstor
int3
lea
or
fcmove
sub
rol
test
movs
sbb
(bad)
in
stos
sub
xor
jne
(bad)
mov
mov
jb
or
mov
(bad)
out
push
adc
jp
push
in
add
xchg
ja
or
jne
sub
arpl
adc
ss
xor
aam
jge
and
dec
push
push
arpl
out
jmp
push
adc
movs
jnp
aas
psubd
mov
lock
ficom
cmp
jmp
in
and
arpl
dec
cs
jbe
push
mov
psubb
lea
ficom
ret
in
adc
bound
push
jle
retf
mov
push
mov
mov
dec
in
xchg
stos
rol
push
mov
mov
cmp
xor
stos
xchg
icebp
clc
mov
stc
add
or
xchg
or
sub
and
pop
mov
je
add
data16
sbb
lock
call
xchg
xor
daa
jp
mov
xor
inc
adc
sub
hlt
pop
hlt
push
mov
daa
outs
sub
push
je
add
xchg
push
inc
add
repnz
mov
lods
test
fsubr
icebp
retf
inc
add
outs
xor
push
not
mov
and
pop
lahf
cmp
dec
ret
cmps
bound
xor
inc
dec
add
dec
cmps
clc
xchg
add
mov
xchg
int
jae
xchg
repnz
ss
xchg
dec
and
sub
pushf
and
jae
neg
mov
adc
lahf
dec
or
movs
and
adc
dec
ds
fnstenv
jnp
fcom
sub
xor
or
adc
movs
mov
dec
dec
mov
shr
jb
jnp
mov
or
fsub
push
or
mov
pop
stos
jns
mov
(bad)
inc
stos
cmp
xor
push
xchg
sub
dec
sbb
imul
popf
inc
jecxz
ins
pop
test
scas
scas
shl
std
sub
sub
lds
lods
rcl
and
stos
pop
dec
jbe
test
outs
iret
or
cs
sub
and
(bad)
push
cmp
mov
inc
sub
test
and
and
sbb
sub
push
push
dec
sub
aaa
pusha
aas
adc
or
and
xchg
xor
xor
add
dec
jne
and
xchg
sub
or
xor
fdiv
ja
outs
bound
sub
jo
loop
add
adc
or
push
add
stos
push
fdiv
data16
fstp
cli
xlat
out
xor
cmp
ds
pop
add
cld
pop
push
pop
jns
mov
xchg
ret
xor
mov
lahf
iret
fsub
xchg
jnp
dec
inc
stos
cmp
mov
retf
scas
push
pop
fiadd
add
in
xor
mov
ds
fadd
jne
jno
or
iret
addr16
adc
cmp
rol
mov
gs
out
cmps
adc
imul
fst
call
cs
retf
jb
mov
mov
sub
and
mov
push
push
enter
jp
cmp
or
xor
aad
mov
popf
and
mov
jmp
(bad)
in
push
mov
xlat
sahf
mov
dec
sahf
mov
fcmovbe
push
mov
pop
mov
ficomp
mov
mov
cwde
fild
les
data16
ins
jns
and
mov
std
add
outs
out
stc
pop
out
fisttp
pop
(bad)
mov
jp
inc
es
pop
dec
push
call
mov
mov
xor
inc
xchg
jge
adc
bound
cmp
mov
pop
sub
cmp
mov
icebp
adc
loopne
inc
mov
aam
mov
mov
rcr
jl
imul
jle
push
aaa
add
mov
bound
dec
xchg
xor
scas
adc
imul
push
and
or
pop
xchg
push
xchg
out
mov
push
ja
(bad)
sub
rcr
das
sbb
mov
xchg
nop
js
and
int
sub
movs
dec
(bad)
and
lods
fdivr
xchg
(bad)
fiadd
dec
and
test
sti
ss
leave
cwde
sar
pop
das
fisttp
xlat
lahf
jmp
jbe
pop
xlat
sub
adc
inc
test
adc
test
out
add
or
popa
in
and
xchg
inc
cmps
ja
sbb
into
pop
xchg
pop
or
call
jge
test
xor
mov
pop
daa
and
scas
fst
add
adc
mov
or
add
(bad)
cmp
sub
mov
jb
add
inc
outs
stc
mov
sub
in
adc
sbb
in
(bad)
repz
dec
jp
fs
call
adc
inc
cs
jb
sbb
ds
or
mov
pop
loope
jmp
xchg
adc
sub
xchg
test
mov
xchg
adc
dec
sbb
popa
push
in
in
xlat
push
lea
mov
inc
das
mov
je
data16
inc
pop
xchg
fistp
jmp
(bad)
movs
add
retf
shl
dec
cs
sbb
xchg
or
push
pmullw
push
and
cdq
mov
or
add
push
cmp
sbb
and
(bad)
(bad)
or
mov
pusha
loope
dec
je
xchg
dec
dec
inc
push
enter
sbb
pop
jp
aas
push
add
jg
xor
mov
or
adc
enter
mov
lea
test
(bad)
jne
jmp
dec
mov
movs
(bad)
stos
or
xchg
lahf
inc
or
xchg
dec
jg
mov
addr16
outs
push
xchg
es
out
pop
mov
xchg
jg
cld
mov
stos
in
or
dec
sbb
pop
test
jecxz
pop
jne
daa
jo
adc
aad
ja
mov
cmps
or
mov
sahf
test
jae
cli
loop
push
add
inc
push
push
rol
jnp
cwde
mov
jle
mov
pop
pop
pop
xchg
fs
(bad)
ja
mov
mov
cmc
mov
jl
ret
ret
aas
sbb
xchg
out
movs
hlt
loopne
xchg
arpl
inc
stc
lds
inc
lea
jg
icebp
cmps
push
pop
mov
addr16
into
cmp
jmp
sub
enter
test
mov
mov
neg
mov
inc
in
dec
pop
jp
mov
fild
(bad)
in
nop
inc
ret
pop
sub
sahf
gs
(bad)
fimul
mov
cmps
movs
(bad)
(bad)
mov
div
and
mov
ins
icebp
les
xor
cmp
and
test
(bad)
push
hlt
aaa
jnp
daa
xchg
iret
cdq
int
dec
push
les
(bad)
cdq
aad
push
adc
scas
enter
jl
sub
sbb
not
dec
fmul
sahf
test
call
aad
mov
sti
out
pop
mov
push
iret
shr
pop
addr16
inc
dec
or
mov
lea
test
sar
xchg
ret
rcr
push
mov
or
push
ins
movs
loope
xor
or
push
sbb
les
aam
mov
inc
lea
(bad)
in
mov
jle
mov
jnp
mov
repz
mov
adc
pop
adc
imul
into
scas
dec
in
xor
mov
out
adc
out
add
xchg
rcr
sbb
mov
xchg
pop
add
jmp
nop
push
mov
stos
outs
adc
push
outs
loope
sub
(bad)
sti
pop
mov
mov
mov
jb
je
mov
xchg
xor
(bad)
stos
test
repnz
pop
mov
push
leave
dec
push
inc
fiadd
push
mov
inc
test
fdivr
dec
inc
xor
push
inc
cmpxchg
mov
pop
mov
test
mov
int3
popa
in
hlt
retf
out
sub
push
sbb
inc
aam
cmc
dec
inc
outs
shl
xcrypt-ofb
cmps
sub
rcr
inc
add
inc
cmps
mov
lock
cmps
adc
aas
fld
xchg
xchg
sub
xchg
push
shl
iret
scas
xchg
dec
outs
int
jns
and
imul
push
inc
cmps
cdq
pushf
in
adc
repz
movs
jne
icebp
xchg
sbb
or
sub
pop
jp
xor
data16
mov
icebp
adc
cli
das
shl
es
mov
push
sbb
fild
lds
cmp
sahf
xor
jl
add
pop
repnz
dec
(bad)
mov
dec
push
lods
jg
lods
fisubr
cwde
int
nop
inc
add
cmp
ret
pop
mov
and
jnp
xchg
push
and
lahf
test
ret
mov
int
mov
or
pop
jne
inc
xchg
fsubr
fcmovnbe
or
mov
push
retf
push
sbb
mov
aad
adc
push
push
cs
jle
cmp
adc
aaa
rol
lods
fisubr
adc
mov
into
cmp
frstor
add
bound
je
ins
aas
jne
clc
outs
jbe
test
lods
repz
loope
fwait
dec
dec
hlt
jb
fwait
xor
inc
test
shr
mov
add
sbb
adc
add
cmps
jb
add
mov
jne
scas
adc
into
ja
enter
lods
dec
pop
inc
sbb
mov
push
jnp
jnp
(bad)
and
dec
push
scas
aam
mov
rcr
scas
mov
mov
lods
repnz
mov
pop
iret
pop
pop
in
fnstsw
or
nop
test
jl
inc
fstp
dec
fs
push
mov
cmp
ffreep
out
pop
in
cmp
call
lods
cli
dec
idiv
pop
and
popa
mov
mov
loope
jge
int3
shl
(bad)
jmp
fiadd
lock
jbe
and
or
bound
inc
not
fcom
mov
ja
outs
std
popf
sbb
cmp
xchg
or
jecxz
mov
sub
sub
push
xor
sub
ins
inc
(bad)
mov
outs
test
jg
jecxz
aad
and
mov
xchg
sbb
sbb
mov
imul
or
add
out
sti
sub
(bad)
cmp
xor
fstp
push
mov
ss
or
lock
adc
out
not
sbb
adc
ja
jg
or
call
mov
sbb
cld
mov
mov
inc
imul
(bad)
cmp
jo
lahf
adc
test
pop
das
mov
mov
repz
adc
fld
retf
dec
dec
mov
cdq
jne
xchg
sub
popa
outs
xchg
xchg
hlt
cs
mov
pop
je
(bad)
adc
fwait
and
or
cmp
stos
loopne
cmp
add
std
in
mov
add
sbb
loop
mov
int
es
or
call
add
mov
push
enter
or
data16
cwde
dec
(bad)
aam
add
js
pop
mov
imul
cdq
das
mov
ficom
push
dec
fnsave
mov
in
ds
xlat
xor
push
and
sahf
adc
(bad)
push
das
cmp
(bad)
sbb
jmp
std
add
add
mov
popf
je
adc
stos
das
xor
cmp
loope
mov
cmp
adc
(bad)
das
dec
mov
and
loopne
call
mov
mov
jmp
ins
repz
cmp
in
loopne
mov
je
inc
(bad)
sub
retf
pop
mov
pop
(bad)
outs
bound
hlt
and
mov
popf
rcr
fs
(bad)
pop
mov
repnz
xchg
call
call
jno
cmp
jmp
lahf
jl
in
shl
sbb
jmp
sbb
push
jbe
pop
fiadd
mov
cmp
sbb
and
rol
enter
dec
retf
loopne
arpl
ss
fsub
mov
retf
pushf
(bad)
jmp
push
and
sub
rcl
loopne
loope
or
stos
mov
lahf
add
and
lock
xchg
test
pusha
pop
clc
sbb
mov
sub
sbb
mov
mov
sub
inc
sub
call
jmp
icebp
inc
test
cs
enter
jnp
xor
loop
add
pop
xor
and
bound
cmp
pop
mov
jno
pushf
int
(bad)
pop
lods
mov
cmp
cmps
jmp
jno
sub
sub
out
mov
in
mov
sar
ss
cmps
mov
in
pop
sub
(bad)
icebp
adc
dec
push
(bad)
bound
xor
cmc
lds
add
lods
stos
sahf
daa
sub
push
cmp
out
mov
pop
mov
push
int
std
call
outs
cmp
adc
fcmovb
xchg
jge
lods
ins
add
mov
jg
fstp
jnp
inc
pop
mov
rol
fwait
xor
mov
sti
push
push
push
hlt
(bad)
loope
mov
jne
add
js
cmps
xor
jo
jo
stos
mov
mov
mov
jbe
jb
loop
jo
ret
xchg
(bad)
call
jg
ds
retf
lock
mov
mov
shl
xor
mov
xchg
hlt
sbb
inc
retf
call
into
add
mov
jnp
jmp
mov
call
sbb
mov
daa
call
into
jne
iret
retf
push
mov
sar
pushf
or
nop
mov
xlat
jecxz
mov
adc
cs
in
dec
push
fiadd
dec
ficom
cmp
push
data16
sub
push
mov
xor
mov
dec
inc
pop
sub
pop
cmp
xchg
stos
imul
cmps
and
or
jo
or
lock
mov
push
mov
(bad)
clc
xchg
inc
cmp
cdq
(bad)
fwait
push
out
sbb
push
pop
lods
es
fcom
retf
icebp
or
fwait
stos
out
in
push
sbb
rcr
jbe
test
pushf
mov
jne
adc
sbb
fadd
cmp
sbb
outs
fsubp
int3
lds
and
lahf
int3
xchg
pop
test
stc
(bad)
(bad)
push
lea
sbb
mov
mov
ror
loopne
nop
jmp
xor
cmp
sub
inc
inc
rol
cmp
xchg
adc
push
ins
shl
mov
push
aad
fstp
sbb
imul
mov
mov
ret
stos
cmp
adc
fsincos
and
in
scas
jo
jae
mov
mov
fs
mov
icebp
cmp
(bad)
frstor
sbb
jge
lods
adc
iret
outs
jo
mov
adc
push
cmps
mov
sbb
mov
pop
xor
xor
call
or
xchg
inc
xchg
mov
mov
(bad)
jno
in
mov
inc
push
adc
movs
stos
jbe
mov
shl
ss
addr16
jl
push
xchg
jo
adc
dec
jbe
mov
push
mov
or
dec
and
ja
jmp
add
dec
cli
sbb
sbb
or
and
sbb
xchg
sub
out
push
imul
mov
mov
daa
mov
sub
popf
mov
mov
mov
push
jne
xor
repnz
add
pop
in
dec
lds
sbb
jmp
int
fcom
stc
sub
mov
xchg
(bad)
aad
xor
inc
ss
mov
dec
mov
sti
nop
sti
popa
pop
gs
pop
push
out
inc
pushf
jmp
rcl
out
imul
mov
imul
jecxz
sbb
xchg
inc
scas
(bad)
mov
adc
adc
jmp
repnz
bound
mov
enter
fs
sub
cdq
leave
popf
mov
mov
push
std
outs
std
jmp
test
and
addr16
ds
push
xchg
xor
and
jecxz
inc
pop
pop
or
ret
xlat
addr16
add
je
add
push
out
ss
adc
test
push
pop
cwde
mov
leave
push
inc
mov
fdivr
fs
inc
(bad)
push
xor
imul
adc
xchg
aam
inc
push
pop
adc
stc
je
js
adc
mov
into
movs
jns
mov
mov
xchg
xlat
out
sahf
or
stos
cmc
(bad)
popf
mov
jnp
xchg
push
pop
or
xchg
sbb
test
pop
cmps
leave
fs
call
shl
dec
retf
push
jecxz
enter
push
jle
fwait
je
cmp
cdq
aad
add
mov
sahf
push
aas
scas
inc
inc
repnz
jno
pushf
gs
mov
test
es
dec
mov
mov
fild
out
or
sbb
pop
ss
jb
and
mov
xchg
push
fadd
inc
push
test
push
sub
(bad)
cs
das
pop
or
sub
out
add
jecxz
popa
push
sbb
aad
pop
mov
(bad)
lea
stc
jge
mov
mov
inc
shr
ficomp
popa
adc
pop
xchg
ret
dec
inc
lea
lea
add
loop
rol
movaps
pop
dec
mov
jmp
sar
add
or
sahf
dec
repz
sub
mov
sub
or
cmps
push
int
cdq
test
ja
mov
outs
pop
es
mov
push
imul
dec
movs
rcl
jbe
sbb
stc
mov
push
mov
in
jne
lock
test
dec
jle
inc
retf
das
sbb
mov
(bad)
fimul
or
in
xchg
ins
stc
scas
adc
ja
xor
out
rol
add
shl
fstp
sub
sub
shl
pushf
jmp
fwait
sub
jmp
test
xchg
mov
jl
aas
nop
add
mov
xor
mov
and
and
fucomp
xor
ret
add
mov
jo
out
xor
add
sbb
xor
sbb
fstp
xlat
adc
jnp
(bad)
xchg
sub
das
lds
popa
in
std
jb
sub
mov
jle
stos
shl
jbe
mov
mov
inc
sub
pop
icebp
mov
repz
pop
adc
cmps
retf
mov
loopne
shr
xchg
sub
add
gs
push
es
scas
in
jmp
cwde
cmp
(bad)
dec
mov
(bad)
movs
les
jnp
and
das
enter
sbb
jg
mov
or
mov
sub
pop
jno
push
xor
add
lock
jb
movs
push
push
push
(bad)
std
(bad)
ja
sub
cmps
sub
ds
cmp
sbb
es
iret
or
jno
cmp
cmp
(bad)
sub
push
pop
mov
sbb
pop
je
(bad)
int3
in
dec
dec
xchg
loop
in
mov
and
(bad)
xor
stc
ret
xor
sub
add
cmps
cwde
push
jl
es
sbb
push
cmp
add
pop
or
in
jmp
ret
test
cmp
cmp
dec
inc
es
int
push
add
sahf
aaa
into
mov
xor
in
pop
sbb
xchg
ret
les
xchg
daa
mov
push
es
mov
xor
xor
in
mov
ds
imul
aaa
dec
or
mov
fisttp
mov
jmp
icebp
adc
int3
push
addr16
add
or
outs
inc
push
push
aas
out
rol
dec
outs
(bad)
mov
lods
mov
je
stc
pop
jmp
mov
mov
sti
frstor
jmp
push
cs
loopne
aam
mov
sbb
add
sbb
xchg
mov
add
pop
dec
jp
(bad)
enter
cmp
mov
fild
xlat
loop
call
ret
test
jle
cmps
or
mov
std
loop
clc
mov
sub
mov
or
lds
pop
dec
pop
push
fisub
mov
push
adc
xor
mul
fimul
out
pop
jg
mov
cmp
or
cmp
lock
mov
mov
loope
fsub
or
jno
mov
es
test
push
add
or
outs
mov
pop
shl
cmp
fbld
(bad)
das
mov
push
jle
cwde
pop
and
in
xor
jno
mov
cmp
shr
mov
cmp
call
inc
mov
xor
movs
(bad)
stos
add
inc
rcr
aas
push
or
fdiv
fdiv
sub
jmp
pop
addr16
inc
jne
imul
or
and
(bad)
in
in
jne
lock
neg
mov
bndstx
or
and
add
stos
aaa
or
xor
test
popf
add
sbb
adc
icebp
mov
sahf
addr16
sbb
push
movs
jno
push
push
mov
jb
in
push
add
push
je
outs
ins
sbb
push
nop
fidivr
jbe
scas
add
cmp
ret
and
jge
pop
xchg
gs
fsubr
shl
hlt
rcl
sbb
cld
ficomp
jl
mov
shl
es
jae
test
fistp
inc
js
mov
(bad)
aas
mov
into
inc
push
sbb
pop
inc
dec
cs
imul
sub
push
mov
outs
or
call
pop
inc
sub
inc
aad
loope
add
xchg
mov
call
dec
mov
hlt
pop
push
gs
sti
xchg
and
push
push
add
xchg
dec
test
jge
cmp
mov
(bad)
scas
neg
aam
mov
push
xchg
cld
pop
xor
push
add
dec
mov
rcl
sbb
or
jo
xchg
xor
repz
pop
stos
ds
mov
jbe
jecxz
mov
push
int
xor
push
lea
iret
xor
int
adc
inc
lock
xor
cs
push
push
push
pop
xor
in
pop
fmul
push
in
mov
aaa
sub
mov
inc
daa
jmp
clc
push
mov
inc
or
sub
movs
and
jp
adc
popaw
mov
inc
xor
std
(bad)
vsubsd
push
jge
jg
pop
(bad)
mov
adc
shr
adc
push
repnz
dec
mov
fistp
jb
and
int3
add
xchg
(bad)
stc
add
add
cmps
aas
in
xchg
sbb
into
loope
leave
icebp
or
nop
fistp
(bad)
cli
dec
inc
push
xchg
ffree
int
sbb
mov
test
dec
retf
aam
inc
into
ret
scas
adc
mov
(bad)
xchg
jmp
push
xor
inc
push
aas
inc
rol
push
call
push
imul
pop
mov
dec
loop
or
mov
xchg
add
shld
jae
pop
and
add
sbb
xor
retf
push
shl
mov
and
add
xchg
jp
mov
xor
inc
(bad)
fs
jmp
add
dec
cmp
push
fimul
push
cli
pop
and
(bad)
push
or
ror
mov
fwait
gs
cli
lock
push
jae
pop
(bad)
xor
(bad)
fmul
or
and
imul
push
adc
rcl
inc
xchg
das
in
xchg
retf
xchg
cmp
mov
test
mov
adc
cmp
push
ss
jl
cld
inc
mov
sbb
inc
stos
faddp
sahf
mov
stos
xchg
push
mov
push
mov
push
loopne
popf
xchg
ds
pop
mov
fbld
ja
arpl
push
mov
mov
(bad)
retf
xor
es
adc
outs
dec
adc
fidivr
inc
sbb
lock
push
push
es
adc
fimul
xor
xchg
mov
sahf
out
pop
fsub
retf
int
pusha
mov
dec
mov
icebp
jne
daa
cmp
inc
sub
xor
rcr
cli
sub
pop
or
in
inc
les
(bad)
cld
pop
xchg
movs
sub
sar
dec
cmp
sbb
std
stc
add
sub
ins
mov
inc
cwde
pop
jl
push
adc
jns
add
lods
das
mov
retf
stos
mov
push
stos
pop
loop
mov
int
into
sub
in
aaa
(bad)
in
aas
movs
dec
push
push
je
rol
jb
dec
je
cmp
(bad)
imul
and
dec
mov
popa
mov
xor
lds
icebp
loopne
inc
out
mov
inc
xlat
push
mov
arpl
dec
dec
xchg
jnp
push
outs
inc
xor
repnz
push
jecxz
sbb
inc
push
adc
adc
push
jg
sub
pop
rcr
lods
psubusw
push
xor
ret
retf
mov
add
add
inc
js
xor
mov
scas
xchg
mov
jns
add
and
aad
(bad)
push
call
dec
mov
cs
mov
xor
sbb
ror
(bad)
add
test
mov
adc
and
add
ins
cmc
invd
sbb
jp
xor
mov
adc
inc
lock
sub
sub
inc
sti
xchg
pop
mov
call
call
out
adc
push
les
push
xchg
cs
(bad)
add
jbe
mov
cs
xlat
int3
ffree
(bad)
dec
push
sub
dec
cld
ret
xchg
lea
jmp
mov
and
sbb
and
mov
fs
and
and
in
or
stos
sbb
das
inc
fxch
ins
test
cmps
cmp
xchg
xlat
pop
aad
dec
shl
xchg
jmp
shl
and
mov
loope
les
retf
cmp
or
jno
shl
xchg
pop
(bad)
jecxz
jg
imul
rcr
mov
popf
shl
xchg
mov
into
mov
pop
aad
xor
out
mov
xor
sbb
pop
call
inc
xor
clc
pop
sub
xor
nop
movs
push
outs
test
cmps
adc
dec
lods
inc
dec
into
inc
retf
mov
call
into
mov
test
call
and
stos
cmp
les
lods
fwait
push
add
mov
xor
leave
jb
cmp
inc
ret
mov
shr
(bad)
call
(bad)
sbb
movs
pop
mov
xchg
aam
adc
jge
rol
or
ds
push
mov
fs
mov
in
lahf
cmp
je
test
ins
pop
imul
repnz
cmps
mov
lahf
sub
jbe
clc
mov
je
sbb
or
xor
cld
fistp
push
push
(bad)
adc
in
out
adc
push
xchg
mov
mov
mov
and
je
sbb
test
sbb
add
jmp
loop
mov
scas
mov
stos
jle
push
shl
shl
mov
dec
pop
out
loope
mov
stos
enter
lahf
and
jnp
mov
mov
sbb
xor
mov
push
sbb
cmc
dec
mov
hlt
lea
ds
mov
sbb
xor
retf
cli
sbb
add
lock
bound
out
out
lods
and
sbb
sub
int3
jle
mov
jp
and
or
icebp
fwait
and
imul
lds
add
jo
inc
cmp
into
sub
pop
mov
jo
sub
add
out
repz
mov
leave
pop
mov
fdivp
(bad)
inc
outs
into
ins
fmul
xchg
(bad)
jne
jecxz
xchg
out
adc
sti
mov
jb
and
pop
mov
or
loope
loope
nop
push
repnz
push
or
jmp
div
cdq
push
sub
jno
xor
(bad)
cmp
and
fs
stos
xchg
call
cmps
adc
aam
clc
jmp
test
leave
pop
xchg
stos
scas
fsub
jo
inc
jle
jno
sbb
pop
call
inc
mov
add
ins
or
retf
sbb
sub
imul
fisttp
aad
mov
and
jb
dec
mov
(bad)
push
or
je
mov
sahf
inc
imul
inc
sbb
(bad)
lea
push
and
(bad)
pop
push
popa
repnz
mov
sbb
bound
fstp
fnsave
aam
data16
std
push
iret
mov
addr16
in
pop
adc
shl
scas
aaa
jo
mov
adc
fidiv
mov
mov
lds
dec
aam
enter
cs
jno
cmp
xor
sub
mov
push
and
lods
repz
ins
rcl
xor
rcl
add
ret
jmp
(bad)
xor
pop
cs
leave
je
sub
(bad)
mov
int
or
dec
rcl
test
fnsave
adc
inc
retf
rcr
scas
pop
xchg
enter
addr16
leave
cdq
mov
xchg
xlat
sbb
xchg
jl
mov
xor
sbb
(bad)
and
pop
mov
or
jbe
adc
enter
mov
(bad)
xchg
aad
movs
or
xlat
jle
xor
pop
aam
mov
mov
lods
inc
outs
imul
adc
fsubr
enter
mov
(bad)
int
pusha
adc
add
push
(bad)
stos
sbb
adc
lock
jae
mov
pop
pop
(bad)
into
adc
ret
pop
repnz
cmp
dec
push
(bad)
push
pop
xor
mov
les
mov
inc
lahf
sbb
jb
mov
fnstenv
int
jno
dec
es
cmp
fsub
jp
xor
jbe
sbb
pop
popa
sub
adc
imul
fidivr
scas
or
push
in
outs
(bad)
test
outs
in
inc
out
sahf
push
les
sub
fsubr
es
sbb
aad
mov
sbb
mov
(bad)
fs
lock
sbb
lea
out
pop
xchg
fidivr
xchg
pop
sub
inc
jno
aam
xchg
push
sub
dec
xchg
arpl
sar
add
xor
pop
push
(bad)
fistp
pop
pushf
test
fiadd
sub
jae
add
and
push
mov
push
cmp
imul
sbb
lds
pop
lock
stos
loope
add
ror
mov
fwait
and
push
add
mov
cmp
cwde
add
inc
pop
int3
or
(bad)
out
in
push
hlt
addr16
enter
daa
cmp
add
in
or
jns
sti
popf
jg
js
in
out
ror
lock
and
ret
test
adc
xchg
sub
inc
bnd
inc
out
push
xlat
hlt
cmp
outs
ss
pop
sbb
std
popa
inc
sbb
inc
cmc
ret
in
push
ret
or
dec
test
test
jl
xchg
ror
aaa
mov
pop
xchg
enter
jnp
xor
or
xchg
ins
adc
setno
mov
lock
cs
cmp
xchg
xchg
dec
push
std
jle
push
mov
jp
test
outs
clc
lods
enter
arpl
mov
fs
inc
sar
dec
sbb
gs
sahf
repnz
mov
cmp
(bad)
sti
out
cdq
fadd
push
and
adc
dec
sbb
push
pusha
aam
dec
in
in
fidiv
retf
stos
mov
out
(bad)
sbb
test
movs
fnsave
ror
add
fwait
cmps
jl
adc
les
sahf
jo
and
mov
nop
repnz
inc
aaa
add
test
sbb
sub
pcmpgtd
in
pusha
add
jmp
test
sbb
inc
sbb
aaa
mov
test
rcr
aam
sub
jae
jl
or
adc
call
fisttp
sub
cmp
push
out
fisttp
call
hlt
pop
call
ds
mov
cli
dec
and
mov
scas
cld
clc
push
sbb
ins
jnp
pop
mov
xor
or
add
mov
(bad)
loopne
dec
(bad)
xor
sub
sub
fwait
aaa
jne
in
(bad)
cwde
retf
lods
pmaxsw
push
pop
push
push
push
jb
aad
or
mov
jle
out
mov
(bad)
repz
push
pop
cmp
das
(bad)
bnd
stc
jbe
das
adc
jmp
xchg
addr16
inc
sbb
mov
xchg
dec
sub
mov
dec
adc
sahf
add
sub
mov
les
es
fidivr
add
push
and
dec
jno
jnp
cwde
add
sub
adc
hlt
mov
dec
push
and
mov
dec
icebp
adc
in
and
daa
call
xchg
mov
mov
add
add
das
mov
jl
arpl
mov
mov
push
mov
ins
sbb
les
jnp
sbb
mov
add
ins
lahf
popa
mov
das
clc
cmp
dec
stos
adc
and
gs
(bad)
inc
std
fldcw
popf
(bad)
dec
jmp
ficom
cdq
mov
cdq
xchg
(bad)
in
mov
pop
xor
sub
mov
fld
push
sbb
inc
mov
shl
retf
out
and
(bad)
movs
and
push
in
dec
(bad)
mov
jg
pop
or
jmp
in
jns
sub
pusha
pop
or
xchg
mov
jae
lods
xor
xor
xor
xor
fs
jbe
and
std
sbb
jl
arpl
neg
pop
idiv
dec
lods
sub
cmp
(bad)
scas
cmp
call
mov
sbb
or
mov
sbb
ins
(bad)
arpl
sub
xchg
sbb
sub
loope
mov
ret
pop
cli
dec
adc
call
(bad)
xchg
fld
inc
xlat
xchg
mov
pop
and
sub
int
cli
mov
push
pop
ret
jnp
xor
sar
out
pop
mov
pushf
cmp
cmps
popf
cdq
imul
out
cwde
jmp
xchg
sar
mov
or
std
push
mov
and
aad
(bad)
int3
dec
aam
cmp
sbb
cs
add
cmp
stos
je
dec
add
cmp
out
xor
ja
aad
call
inc
xchg
jnp
shl
cmc
mov
stos
idiv
mov
xor
mov
sbb
(bad)
scas
push
ret
popa
nop
lahf
jg
and
into
mov
adc
or
mov
out
cmps
and
jo
mov
xchg
jp
and
ss
sub
dec
add
mov
aam
xchg
jne
xchg
or
adc
dec
or
or
rcl
pop
cmc
int
dec
push
hlt
add
movs
xchg
jne
mov
int
(bad)
inc
dec
loopne
popf
imul
add
(bad)
mov
data16
push
in
(bad)
jg
jo
inc
add
xor
imul
sti
mov
cmp
scas
jnp
(bad)
outs
jb
or
loopne
sub
cmp
jecxz
dec
jmp
mov
imul
jl
dec
pop
jg
arpl
adc
mov
fisttp
fist
call
scas
pop
shl
ja
mov
aas
push
out
adc
movs
fsub
pop
in
mov
jne
fdivr
int3
fisub
hlt
loope
dec
dec
out
ins
rol
out
sub
and
add
mov
fwait
jno
pushf
int
cli
cmps
das
jg
dec
xchg
shr
fcom
inc
pop
jbe
aam
inc
dec
push
jbe
mov
pop
cmp
movs
mov
mov
enter
lods
repz
sub
arpl
pop
cld
jecxz
push
adc
fwait
or
out
ds
jae
sub
loope
in
daa
in
retf
sbb
inc
add
xchg
pop
(bad)
(bad)
mov
inc
mov
push
pop
fsubp
adc
retf
jns
aam
push
adc
stos
mov
loopne
jbe
xchg
imul
into
add
sub
nop
jne
mov
mov
sahf
xor
es
outs
mov
xor
inc
jmp
movs
lock
inc
mov
popa
fcomp
cmp
cmc
and
fild
sbb
add
jnp
leave
fimul
in
pop
fnstenv
mov
xor
sbb
adc
int3
inc
jo
retf
movs
neg
repz
xchg
mov
mov
fs
outs
pop
mov
gs
int
push
push
sbb
retf
push
in
push
shr
fisubr
sbb
and
das
xchg
out
jle
sti
mov
mov
cmp
ret
repz
mov
nop
movs
xchg
arpl
and
sub
push
mov
addr16
mov
inc
pop
pop
xor
xor
and
inc
test
mov
xor
mov
mov
pop
push
test
push
out
pop
xchg
retf
add
shr
mov
lods
adc
sub
mov
or
add
pop
xor
fwait
lods
fwait
xchg
enter
les
dec
in
iret
push
aad
clc
je
dec
and
jmp
inc
jae
push
test
xchg
xchg
sub
add
or
or
sbb
mov
aad
and
and
or
sbb
cmp
scas
(bad)
sahf
jb
mov
xchg
pushf
data16
mov
mov
(bad)
retf
push
push
push
stc
sbb
lods
push
les
mov
lock
in
pop
fidiv
loopne
sub
cwde
xor
xchg
fidivr
shr
aam
mov
sub
cmp
push
ins
dec
inc
mov
pop
das
not
adc
repnz
lods
mov
(bad)
adc
push
mov
xlat
mov
inc
jle
mov
pop
jno
xchg
push
xchg
stc
push
and
je
enter
sub
add
jp
ss
repnz
cld
push
sbb
jle
lock
mov
mov
cmc
gs
in
push
fisubr
mov
fnstcw
jg
or
dec
aas
lahf
fs
mov
stc
scas
arpl
mov
dec
stos
loope
lock
ss
pushf
mov
pusha
or
movs
(bad)
sar
push
in
pop
jbe
arpl
in
jp
jp
xchg
(bad)
int
mov
add
cmp
stos
pushf
inc
cmp
fisttp
cmp
and
inc
outs
inc
in
cmc
and
(bad)
and
int
(bad)
cli
mov
mov
test
pop
sub
jae
iret
ds
xchg
pop
cmps
iret
mov
or
xchg
add
shr
(bad)
jbe
inc
or
ror
jmp
fnstcw
stos
rol
mov
push
push
ficom
out
and
jo
stos
cld
mov
xchg
mov
aas
sbb
add
fidivr
inc
jp
fist
fistp
xchg
add
sbb
jg
adc
push
push
xor
nop
(bad)
inc
inc
or
mov
jns
jmp
inc
adc
shl
ret
in
shl
add
shr
mov
pop
pop
sub
not
cmp
mov
jge
gs
xor
sub
xor
outs
push
fcom
outs
mov
bound
jo
jmp
outs
sbb
inc
mov
xchg
retf
and
pusha
loopne
or
jo
ja
push
cmc
scas
pop
out
push
cs
mov
loope
jp
ret
inc
xor
sub
out
sub
ins
pop
push
aam
push
cmps
xchg
cld
stos
mov
xlat
or
mov
mov
(bad)
out
imul
cmp
adc
(bad)
pushf
dec
inc
and
adc
mov
(bad)
aaa
adc
mov
sbb
test
leave
jle
fsub
pop
lds
xchg
gs
int3
lahf
xor
lods
icebp
(bad)
jecxz
xor
cmp
fimul
sub
cmp
leave
sub
sub
and
adc
pop
inc
loop
pop
cmp
xchg
jmp
pop
shl
add
mov
stos
cmps
xchg
test
loope
xchg
push
push
sbb
xor
int
lahf
out
xlat
cmp
addr16
aaa
iret
gs
jecxz
sbb
fmul
cdq
std
jb
ins
(bad)
sbb
loop
(bad)
(bad)
adc
push
ror
fmul
xchg
lds
popa
xchg
mov
xchg
and
fs
add
inc
es
fwait
pop
add
adc
loopne
cmps
lods
jne
xchg
cmps
out
xchg
in
lea
mov
rcr
gs
lahf
or
or
dec
call
sti
imul
ret
std
sub
mov
les
sub
dec
and
es
imul
ja
add
ins
adc
dec
adc
mov
add
sub
retf
inc
dec
adc
or
and
pusha
fnstcw
rol
clc
out
mov
loop
ja
mov
div
and
adc
jbe
add
mov
cs
mov
sbb
and
pop
pop
mov
xchg
test
stc
or
je
cdq
inc
push
je
dec
adc
mov
movs
push
push
cmp
jno
repnz
cmp
je
cmp
jnp
inc
add
mov
fisubr
jnp
sbb
leave
sti
arpl
jmp
lods
and
inc
cmps
cmc
xchg
addr16
sbb
pop
iret
js
lds
xchg
xor
xchg
jg
nop
inc
enter
xor
pop
and
retf
pop
adc
xchg
sbb
push
(bad)
mov
xor
lods
into
ja
dec
cmp
cmps
fldz
fiadd
sbb
xchg
add
jb
adc
out
dec
(bad)
(bad)
imul
inc
push
cmp
div
xor
push
xor
pop
scas
test
sahf
mov
lea
pop
xchg
adc
mov
push
xchg
js
cli
push
(bad)
cmp
xchg
(bad)
mov
mov
inc
fild
not
into
fsubr
iret
lea
mov
out
mov
jb
lods
fild
ss
sbb
jae
push
ds
in
jge
cmp
xor
and
pop
xchg
xor
inc
shr
ins
shl
ret
jns
scas
adc
adc
fld
jb
gs
jecxz
xor
push
repz
mov
adc
add
retf
(bad)
ja
addr16
jnp
dec
jno
mov
sti
xlat
push
daa
add
push
xchg
retf
cmps
pusha
mov
sbb
xor
jmp
fs
ret
fiadd
ror
pushf
xchg
mov
mov
into
jns
inc
loope
(bad)
mov
mov
(bad)
bound
pop
pop
fimul
pop
in
in
nop
push
in
xor
jle
push
ror
or
dec
adc
repnz
fild
scas
lea
lds
(bad)
mov
mov
jmp
jecxz
cli
push
(bad)
movs
pop
neg
or
xchg
inc
scas
fbld
test
sbb
mov
lds
fsub
and
ds
in
cld
fs
push
idiv
dec
int3
div
ds
add
sahf
in
icebp
mov
sbb
and
cmc
or
pop
and
dec
sti
fisttp
add
jmp
mov
aad
inc
loopne
sub
xor
mov
inc
fist
clc
xchg
cld
jnp
(bad)
push
add
add
cmp
push
add
mov
loope
loope
jge
push
add
push
pop
leave
mov
lods
mov
add
jg
stos
pop
jl
jne
inc
sub
bound
pop
out
push
cdq
jbe
retf
loope
out
pop
push
sahf
stc
movs
xchg
xor
cmp
in
xchg
and
stos
adc
jp
adc
stc
dec
inc
in
xor
stc
ins
daa
dec
setns
js
dec
add
xor
xchg
mov
push
sbb
fistp
(bad)
rol
lods
mov
adc
pusha
jecxz
dec
pop
mov
mov
out
adc
loope
xchg
imul
xor
data16
movs
or
or
outs
xor
add
jmp
sub
cmps
stc
ins
div
dec
inc
mov
(bad)
or
push
jnp
cmp
sbb
fidiv
mov
iret
into
(bad)
call
add
jae
xchg
push
stos
dec
jmp
sub
call
test
test
scas
push
sub
dec
clc
cli
call
pusha
aam
popa
xchg
mov
out
rcl
jae
nop
(bad)
mov
(bad)
jecxz
ss
ins
repz
iret
shr
pop
jo
jmp
in
mov
sbb
pop
stos
mov
jne
jge
mov
mov
(bad)
in
pop
je
pop
pop
jno
jo
inc
xchg
xchg
or
aas
icebp
sar
adc
xchg
mov
push
jge
jae
cmp
add
mov
and
cli
dec
mov
push
cmp
sbb
in
push
gs
ins
das
xchg
sbb
fimul
pop
jne
daa
jnp
dec
call
test
xchg
loopne
push
pop
pop
stos
and
cdq
movs
xor
jbe
or
add
in
pop
setae
fdiv
adc
or
xor
cmp
popa
sub
or
iret
adc
adc
mov
xchg
int3
sub
sbb
es
pop
je
mov
mov
mov
cmp
ins
leave
push
imul
(bad)
loopne
loopne
call
mov
bswap
jmp
jl
sub
jno
push
dec
js
xchg
mov
mov
push
mov
inc
mov
push
idiv
mov
cmps
inc
aas
push
mov
rcr
adc
jmp
test
adc
mov
loope
out
mov
xor
movs
mov
std
addr16
xchg
fs
aaa
retf
out
cmp
sub
ins
jg
fwait
mov
test
(bad)
cli
imul
pop
call
mov
gs
ins
movs
xor
mov
cmp
pop
aas
inc
mov
ins
sar
cmc
lock
mov
push
daa
outs
xchg
dec
push
xor
inc
cwde
data16
movs
lods
sub
sbb
adc
test
mov
popf
cld
pop
jnp
sub
(bad)
jmp
dec
xchg
or
das
imul
sbb
inc
sbb
inc
xchg
or
sti
imul
int
lock
out
mov
fidiv
sbb
push
mov
pop
and
pop
ins
mov
sbb
arpl
adc
pop
mov
sbb
mov
adc
or
ds
jns
ja
push
aas
sbb
jge
jge
jnp
jmp
or
fwait
arpl
cmps
inc
jo
retf
adc
cmps
test
and
xor
jle
loope
nop
inc
add
cmp
(bad)
fidivr
mov
cmp
fcom
pop
in
mov
in
cld
mov
adc
scas
mov
inc
rol
imul
cmps
add
shr
dec
and
and
adc
cmp
aas
call
shl
int3
ret
xor
fsubr
inc
mov
push
inc
imul
lahf
mov
in
jmp
inc
imul
jo
cmps
mov
sbb
xor
pop
test
add
out
ficomp
lahf
xlat
adc
xchg
ss
fwait
in
inc
xor
and
cmc
scas
xchg
shl
imul
std
mov
sub
mov
jb
rcl
std
push
jnp
(bad)
mov
and
push
leave
pop
mov
ds
sar
fwait
jle
hlt
push
mov
cs
scas
mov
ins
cli
scas
call
pop
sub
fild
push
cdq
aam
outs
inc
cmp
es
ins
sar
in
iret
pop
movs
scas
adc
sub
mov
add
mov
mov
pop
(bad)
or
retf
leave
stc
call
sbb
mov
pop
cmps
mov
scas
js
sbb
adc
push
pop
stos
sbb
push
aad
cmp
push
cdq
out
xor
cmps
(bad)
pushf
cmp
mov
stos
ss
test
and
jo
das
mov
push
pushf
leave
in
scas
pop
sbb
pop
cmp
sbb
(bad)
das
mov
pop
mov
push
sbb
pop
mov
ficom
sbb
out
xor
push
xchg
int
arpl
adc
xor
popa
xchg
adc
scas
fcmovu
mov
pop
ret
lds
repnz
movs
int
cmp
pop
mul
pop
dec
out
mov
inc
mov
outs
fdiv
push
std
mov
imul
push
push
jae
mov
mov
ins
lock
mov
es
cmps
test
mov
pop
xchg
shr
out
sbb
mov
jno
dec
mov
xchg
xor
imul
push
es
xchg
retf
cli
or
scas
outs
and
lahf
xchg
jmp
push
mov
inc
mov
shr
mov
ja
ds
sub
mov
out
push
scas
scas
sub
cmps
out
add
xchg
and
jp
xlat
xor
add
jo
xlat
mov
push
sahf
jmp
movs
cs
xor
mov
jmp
pop
xor
push
jb
es
ror
rcl
retf
aas
fdivr
and
lahf
mov
or
mov
fnstenv
jb
or
lods
sub
push
push
pusha
das
int3
xor
daa
ret
jmp
dec
add
push
cmp
jae
xor
mov
shl
(bad)
clc
dec
mov
jnp
aaa
xor
mov
xchg
push
xor
sub
xlat
in
or
fwait
push
clc
cmps
pushf
imul
cdq
int
xchg
push
iret
dec
je
icebp
ds
shr
push
fst
mov
jmp
sbb
mov
dec
xchg
sbb
sub
jmp
jmp
fdiv
pop
inc
cmps
mov
sub
or
mov
cmp
outs
leave
adc
idiv
cmp
cmp
jg
jae
push
sti
out
xchg
bound
jecxz
add
or
imul
push
pop
fidivr
cmp
enter
mov
ficom
jb
sub
push
or
cmps
dec
nop
mov
pusha
xchg
stos
je
sahf
mov
xchg
add
dec
jmp
xchg
(bad)
cli
je
test
(bad)
ins
xchg
or
jp
fstp
add
lds
push
(bad)
lock
or
loope
push
sbb
dec
adc
sub
test
mov
pusha
push
xchg
sub
sbb
dec
lahf
mov
not
fstp
pop
sub
and
pop
add
mov
sbb
cmp
sub
outs
sbb
shl
(bad)
arpl
mov
out
push
jne
imul
stos
(bad)
test
pop
bound
and
push
pop
mov
jbe
pop
add
mov
sub
fbstp
dec
and
enter
sub
in
lods
jmp
push
jp
pop
daa
cli
mov
adc
shl
sahf
sbb
and
imul
add
js
xchg
sub
sar
arpl
out
dec
int3
shl
jle
cmp
jne
movs
ss
jne
cmp
into
data16
nop
or
hlt
popa
ss
and
ror
xor
or
sub
jg
xor
adc
lods
addr16
dec
cmp
or
mov
in
dec
aas
xchg
stc
inc
dec
test
hlt
push
push
dec
lea
ret
aam
jge
ins
xchg
test
icebp
mov
fs
dec
pop
xchg
cmp
mov
je
mov
or
in
cmc
cld
or
call
les
or
(bad)
sub
in
inc
cmp
loop
jne
cmc
mov
imul
cmps
test
(bad)
aas
push
int3
mov
or
sbb
dec
jns
xor
xor
push
or
push
push
cmps
mov
rcr
push
clc
cmp
int3
pushf
call
int3
mov
pop
jle
call
ja
imul
stos
jo
adc
xchg
loopne
inc
pop
inc
jne
in
call
popf
pop
sbb
jle
pop
push
jns
xchg
and
ret
sbb
sbb
ins
mov
rcr
mov
lods
jge
and
adc
ins
sar
pop
das
ret
xor
jmp
das
sub
ror
retf
lods
push
mov
hlt
iret
ins
aam
outs
out
loop
retf
jns
test
lds
or
xchg
jmp
imul
fistp
push
nop
test
mov
mov
xchg
xor
outs
loopne
retf
cld
push
out
add
push
sub
mov
shl
retf
inc
jb
mov
test
and
fwait
add
js
jo
fsub
jno
ds
mov
aad
or
push
sahf
dec
std
sahf
mov
adc
cwde
shld
push
sub
jl
inc
xor
push
push
std
std
push
test
lea
ds
add
loopne
mov
imul
xlat
popf
push
push
sub
in
or
cmps
mov
ins
add
xor
push
pop
mov
jmp
cmc
push
inc
loopne
pop
outs
pusha
hlt
push
mov
repz
sbb
xchg
es
push
add
mov
mov
ds
mov
clc
and
xor
mov
ins
mov
xchg
mov
push
repz
sbb
add
js
imul
sbb
test
test
or
jmp
neg
jp
lods
sahf
int
(bad)
mov
gs
inc
test
cld
ins
push
jns
dec
and
add
pop
and
(bad)
cmp
je
mov
popf
int
loopne
or
sub
fs
sub
inc
popa
in
fisttp
sbb
mov
push
mov
mov
hlt
fisub
leave
mov
scas
aas
and
mov
test
pop
sbb
push
ja
rcl
xor
xchg
imul
(bad)
fnstsw
adc
aas
daa
jo
sahf
cmp
cmp
push
cmps
pop
(bad)
pop
mov
ret
nop
aaa
and
xor
or
dec
or
mov
and
cwde
js
les
lahf
mov
sub
call
inc
(bad)
sub
sbb
addr16
movs
xor
dec
test
xchg
jl
gs
out
mov
ja
adc
mov
arpl
cmp
int3
and
inc
inc
stc
or
jle
leave
xor
cmp
jbe
sbb
ret
fldenv
(bad)
jl
add
enter
mov
mov
pushf
shr
test
pop
outs
fmul
inc
aaa
mov
mov
ud1
adc
and
pop
out
daa
scas
sub
xchg
inc
cmp
das
and
lods
inc
(bad)
jmp
adc
push
cmp
jns
pop
add
sub
mov
ret
xchg
sar
xchg
jl
jecxz
mov
adc
fsubr
cmc
xlat
cmp
sub
(bad)
mov
cmp
js
test
arpl
mov
mov
lahf
push
adc
stc
stos
sti
test
retf
ins
lock
stos
jmp
cmp
pop
push
and
cmps
sub
scas
dec
stc
inc
sbb
pop
mov
leave
fwait
ins
or
add
xor
xchg
loop
jae
xor
mov
int3
pop
and
popa
aad
les
jge
out
adc
mov
push
push
dec
push
jb
pop
dec
cdq
in
stc
test
cmc
mov
inc
leave
fstp
push
mov
test
pop
daa
aam
out
mov
xor
add
jle
add
inc
call
inc
push
cmp
movs
add
push
inc
dec
fcompp
sub
jmp
or
nop
loope
es
addr16
adc
sbb
and
add
mov
popf
fimul
jns
mov
ins
sub
imul
dec
xlat
call
inc
in
cmps
sub
pop
ins
cmp
push
cli
mov
call
enter
sbb
loop
jns
inc
mov
in
jae
cmp
stos
adc
mov
add
push
and
out
jecxz
ins
loop
mov
sbb
sub
pop
jge
ret
inc
stos
cld
bound
popf
imul
mov
dec
pop
xchg
ja
or
fimul
(bad)
mov
mov
int3
or
and
call
repnz
mov
add
outs
xchg
add
push
push
xchg
daa
cmp
stc
aas
jmp
std
mov
stos
mov
sbb
mov
jg
movs
mov
jb
or
out
xchg
cmp
cmc
pop
add
sar
cli
mov
clc
mov
jo
mov
dec
dec
sar
xlat
mov
sahf
call
xchg
xor
jecxz
mov
push
ror
sbb
mov
test
fstp
cdq
mov
popa
or
hlt
data16
ret
adc
dec
adc
mov
into
add
ja
cmp
aam
sbb
ret
add
adc
inc
xchg
push
sub
sbb
(bad)
mov
fs
ret
jnp
test
push
or
sbb
add
cwde
clc
lds
xor
sti
sbb
adc
es
jbe
jecxz
jge
pop
rcl
adc
lock
fsubr
aaa
sub
sub
and
retf
or
shl
cmp
ret
or
and
sbb
xchg
cwde
stc
adc
aad
sub
adc
cmp
fistp
cmp
jl
pop
loope
lahf
cmc
sub
in
pop
repnz
sub
jmp
xchg
movs
test
add
sub
and
movs
or
leave
cmp
adc
xchg
mov
fmul
inc
xor
sbb
inc
out
movs
daa
out
popa
sub
nop
clc
sub
aad
in
ret
add
pushf
retf
fdivr
cdq
sbb
icebp
mov
dec
(bad)
xlat
pusha
dec
sub
mov
ret
push
loope
jb
(bad)
clc
(bad)
idiv
dec
sub
mov
add
cdq
(bad)
mov
mov
mov
fdivr
mov
pop
aam
xchg
mov
fwait
inc
mov
call
pop
jp
pop
leave
adc
mov
xchg
in
mul
ret
inc
pushf
mov
xchg
(bad)
rol
mov
arpl
inc
push
movs
shl
scas
cmps
call
pop
push
scas
dec
movs
jmp
lea
dec
call
ror
mov
or
lea
and
pop
pop
fdivr
hlt
fsub
or
xchg
ins
fs
push
ins
test
call
adc
lock
or
stc
dec
repnz
test
add
mov
mov
sbb
sbb
jge
xchg
push
cs
mov
ret
sti
fisub
xchg
dec
shl
mov
mov
pop
mov
hlt
jne
mov
or
jle
or
cmp
mov
pop
out
xchg
push
inc
jge
in
sbb
add
mov
push
inc
jo
sub
pop
sbb
in
ret
in
mov
call
fwait
call
sbb
arpl
retf
dec
add
div
and
xor
mov
jp
sahf
xlat
ins
push
mov
(bad)
sbb
pusha
or
add
push
popf
jns
out
xchg
fs
lods
mov
test
ret
enter
cmp
ficom
clc
jo
mov
ret
xor
and
push
pop
les
push
sbb
xor
push
lods
inc
mov
xchg
xor
inc
rol
pop
push
inc
adc
sbb
pop
sub
mov
jno
pop
jb
arpl
and
xchg
sbb
call
ror
and
test
sub
aaa
(bad)
sbb
ret
mov
jb
inc
aaa
cmp
arpl
add
mov
call
aaa
jle
cmp
sbb
pop
sbb
push
daa
cmp
pop
pushf
mov
shr
and
cld
cmps
and
push
repz
xchg
mov
push
sbb
adc
push
sub
stos
push
in
or
jmp
mov
or
sbb
sti
push
(bad)
mov
cmc
jmp
adc
jmp
test
cmp
sahf
ins
aad
fist
or
sbb
sbb
adc
imul
dec
sbb
popf
dec
push
test
outs
cmc
pop
dec
jl
std
push
adc
push
in
es
adc
jno
mov
add
sahf
aad
jb
fwait
aad
mov
cmc
enter
xchg
retf
xchg
mov
fisub
fsubrp
pop
or
das
xor
and
ficom
push
or
cmp
or
pushw
retf
out
scas
lahf
sub
rcl
xchg
neg
nop
xor
pop
or
cmp
sbb
xor
mov
xchg
jo
xor
xchg
jo
mov
cmps
imul
xchg
mov
fld
repnz
push
mov
pop
adc
add
sbb
mov
fiadd
shrd
nop
fdiv
inc
es
int
mov
inc
pop
mov
pop
ds
cmp
cmps
push
jo
loope
inc
jp
sbb
fs
xchg
lods
imul
pusha
mov
repz
cmc
adc
iret
push
sub
push
lods
ror
ja
push
mul
movs
and
dec
xchg
shr
jbe
cmp
sbb
mov
mov
aam
sbb
xchg
xor
sbb
popf
mov
(bad)
ret
ins
rol
xlat
(bad)
fwait
push
hlt
and
test
repnz
out
push
or
xchg
cld
fcom
(bad)
mov
mov
stos
scas
ror
test
shrd
mov
mov
pop
jecxz
sub
fsub
or
fisubr
pop
sbb
sbb
and
dec
shl
inc
scas
mov
jno
mov
(bad)
mov
stos
dec
sbb
clc
pop
scas
repnz
jne
and
je
fcmovb
gs
loopne
pop
(bad)
arpl
xchg
inc
or
test
je
and
push
sub
push
jg
retf
inc
std
cwde
test
push
data16
fisttp
in
sbb
inc
aam
clc
xchg
inc
sbb
imul
jns
jecxz
cmps
mov
pop
sar
mov
mov
xchg
dec
daa
cld
add
test
push
mov
push
xor
mov
std
pop
lods
mov
mov
and
cmps
pshufw
push
push
das
pop
bound
dec
test
cmps
mov
or
and
mov
cmp
push
xor
(bad)
sub
ins
iret
retf
xchg
mov
retf
adc
mov
adc
cli
jbe
ins
cmp
dec
shl
cmp
fldcw
aaa
inc
xchg
jle
push
pop
repnz
mov
adc
mov
jle
xchg
xchg
cmps
adc
sub
mov
(bad)
mov
mov
lahf
jae
scas
adc
dec
scas
aad
cmp
aaa
retf
pop
cmp
aas
sbb
fmul
jl
and
aas
shr
cmc
ret
xchg
ror
jle
je
xor
xchg
dec
pop
sbb
ror
aas
das
fnstenv
setae
dec
scas
adc
fsubrp
test
adc
aam
push
sub
lods
pop
mov
(bad)
adc
mov
mov
aad
bound
jb
jge
dec
sub
rol
fsub
xchg
mov
outs
adc
popf
shl
and
push
push
daa
dec
dec
sub
pop
jl
loop
cs
inc
mov
mov
jne
inc
shl
mov
fisub
test
daa
(bad)
pop
xor
xlat
loope
or
or
pop
sbb
adc
mov
mov
outs
(bad)
repz
mov
mov
push
aam
out
cmp
neg
jmp
into
test
pop
cmp
sbb
inc
pop
(bad)
mov
and
or
fmul
test
pop
shl
sbb
inc
dec
inc
mov
mov
mov
sahf
ja
scas
push
xchg
inc
(bad)
fsub
shl
stos
xchg
push
sub
mov
pop
stc
push
pop
mov
call
fs
jmp
push
sub
cmp
(bad)
sub
lods
jg
adc
mov
idiv
repz
aaa
add
add
dec
xchg
shl
cmp
and
or
mov
and
push
inc
or
push
dec
data16
jp
mov
arpl
jo
adc
mov
aam
push
inc
cmp
js
es
out
popf
cli
retf
fild
jb
test
mov
aas
xchg
jno
pop
dec
mul
cmp
nop
xor
cmps
push
push
fidiv
fisub
mov
jbe
cmp
xor
popa
ret
fcmovbe
sbb
mov
inc
add
jp
pop
aas
jle
ins
xchg
jb
aad
mov
enter
ror
test
add
mov
aas
cmp
mov
xchg
cdq
daa
dec
inc
push
movs
addr16
in
outs
lea
adc
inc
lahf
push
sbb
stc
adc
xor
sbb
scas
ror
fsub
mov
call
in
rcl
rcr
cmp
sbb
mov
mov
mov
dec
stos
cmp
test
add
mov
loop
push
mov
xchg
mov
mov
out
cmps
add
mov
movs
sbb
ret
mov
test
int
data16
loop
cmp
push
and
scas
xor
xor
cmp
cwde
push
clc
mov
sbb
sub
jmp
inc
xchg
mov
jb
fwait
test
inc
xchg
add
jnp
mov
bnd
fild
add
jg
popa
imul
push
mov
jge
test
std
mov
jg
dec
loopne
bswap
pop
(bad)
jg
dec
test
ret
cld
cmp
or
mov
test
js
in
xchg
int3
add
retf
jmp
dec
call
mov
mov
xchg
arpl
adc
aad
mov
ret
adc
rcl
lds
dec
dec
sub
aam
loope
pop
pop
aaa
adc
sbb
enter
and
dec
ins
push
or
inc
cmc
or
xlat
xlat
scas
retf
pop
jne
xor
jge
fs
pop
xchg
fcmovnbe
call
lahf
fldenv
or
mov
cmp
jge
popa
adc
jmp
ds
push
or
int3
and
push
inc
mov
push
jmp
push
and
cmp
idiv
iret
cmp
outs
not
in
push
and
ror
add
xor
pop
repnz
push
test
or
test
dec
fcmovnu
mov
sbb
push
out
iret
mov
(bad)
mov
div
jo
in
addr16
ror
sti
(bad)
xchg
jge
mov
sub
lods
les
icebp
inc
aad
add
mov
fsub
jns
and
cs
mov
mov
adc
sub
mov
nop
mov
and
div
sbb
mov
sar
adc
aam
jns
fs
cmp
loop
and
and
cmp
push
dec
imul
xor
pop
pop
out
repnz
gs
loope
pop
and
add
mov
pop
sbb
(bad)
fistp
lea
sbb
in
cmps
inc
mov
dec
ins
loopne
fs
inc
jmp
int3
and
out
cmp
inc
ja
jae
pusha
es
xor
or
lock
je
leave
pop
sbb
icebp
xchg
cmp
test
cdq
mov
idiv
(bad)
cli
mov
jl
jg
xchg
inc
mov
sub
mov
fsubr
repnz
ret
clc
sub
jge
je
cli
test
imul
or
outs
jmp
fidivr
leave
mov
dec
loopne
test
cmps
xchg
mov
add
loopne
data16
aaa
inc
in
cmp
aas
rcr
cmp
jmp
je
sub
dec
jo
pop
pop
mov
not
jmp
or
inc
mov
hlt
imul
add
mul
ja
(bad)
mov
mov
retf
dec
xchg
jns
inc
inc
sbb
test
and
fwait
xchg
dec
jo
dec
cmp
mov
cmp
mov
fcom
xor
and
push
jmp
xlat
xchg
rcl
outs
xchg
retf
faddp
pop
xor
shr
mov
movs
mov
push
mov
mov
mov
cdq
imul
sub
in
adc
mov
xchg
stos
(bad)
dec
cs
jne
fnstenv
adc
in
and
stos
cli
cmp
dec
jle
xor
in
jge
cmps
int
aam
sbb
dec
loop
dec
cmp
push
and
cmps
pop
or
push
or
js
adc
sub
(bad)
rcr
es
sub
fisttp
push
(bad)
div
add
xchg
test
xchg
jo
inc
sub
xchg
lods
xchg
ins
jmp
xchg
and
jge
mov
imul
sub
and
mov
popf
call
sub
icebp
push
and
leave
and
push
xchg
lds
mov
sub
mov
jl
xor
dec
dec
ret
scas
sub
in
mov
and
loope
js
xor
mov
and
sbb
fidivr
lds
ja
enter
jp
xchg
dec
adc
mov
rcr
lahf
stc
mov
and
popf
inc
cdq
sbb
jecxz
add
add
jle
mov
add
ror
in
adc
xor
add
clc
outs
push
clc
test
inc
pop
sbb
pop
popf
out
stos
aas
out
loope
push
xchg
sbb
les
int3
stc
jecxz
stc
adc
aam
push
stos
cmp
dec
cmp
add
jmp
je
cmps
idiv
div
test
pushf
sti
stc
cmp
push
cmp
mov
sub
inc
ds
retf
mov
hlt
sbb
jmp
mov
das
push
adc
imul
out
push
sub
cs
pop
jl
test
jmp
push
mov
lods
pop
in
mov
mov
mov
popf
sub
fwait
xchg
call
xor
imul
call
pop
mov
fcmovu
dec
test
out
push
jmp
mov
repz
hlt
cld
mov
sbb
aad
in
sub
mov
shl
mov
(bad)
xlat
lea
enter
sahf
rcl
inc
mov
dec
xchg
pop
(bad)
sti
jg
retf
pop
lds
cwde
lea
stos
xchg
mov
scas
in
ret
out
aam
push
xchg
call
jle
arpl
stos
ds
outs
sub
repz
cmp
clc
imul
mov
mov
adc
imul
adc
fcom
inc
pop
aad
imul
or
nop
inc
jb
adc
das
pop
ret
mov
je
(bad)
bound
mov
cwde
lahf
cmp
dec
cmc
or
scas
scas
jns
loop
jns
pop
and
xchg
mov
pop
fs
das
aam
and
add
daa
inc
jo
push
mov
out
scas
adc
xor
in
int
push
dec
mov
mov
pop
inc
frstor
and
mov
sbb
push
bound
cmp
xor
call
outs
xor
loopne
ret
push
loop
stos
lahf
pop
lds
mov
movs
add
mov
es
pop
sub
cli
in
adc
(bad)
gs
(bad)
or
je
sub
enter
bound
mov
pop
cmp
cmp
jo
lea
nop
jp
dec
loope
imul
iret
test
and
int3
push
pop
adc
push
ret
or
push
cmp
test
fnstenv
pop
mov
cmc
shl
cmp
inc
and
jbe
fwait
aas
fadd
mov
add
div
js
adc
mov
mov
xlat
jge
in
jmp
test
cli
mov
inc
push
fwait
fs
cwde
push
or
cmp
mov
or
adc
mov
(bad)
std
sub
dec
push
jo
jmp
aas
dec
dec
cmp
xor
out
clc
pop
sahf
ret
ins
cmp
call
adc
mov
ror
add
ds
mov
ins
xchg
mov
les
or
jnp
and
imul
into
and
out
cs
leave
xchg
sbb
xor
jle
push
outs
and
popf
imul
xor
jmp
mov
xor
xor
retf
pop
jo
xor
inc
call
push
lgs
sub
or
and
mov
xchg
dec
mov
push
(bad)
in
aas
push
mov
mov
cwde
pop
dec
enter
movs
(bad)
sbb
out
add
bound
cmps
xchg
dec
sbb
jp
inc
test
(bad)
in
lods
cs
daa
loope
push
clc
fwait
adc
xchg
push
test
imul
xchg
outs
or
sub
inc
jg
mov
fist
lea
push
les
ffreep
sbb
repz
out
pop
js
jmp
retf
sub
(bad)
lahf
push
cmp
leave
pop
fimul
aad
sub
pavgb
or
jo
ds
iret
sbb
std
fld
dec
inc
pop
mov
cdq
and
jecxz
push
fisttp
mov
jp
js
pop
pop
push
jecxz
test
push
(bad)
fisub
push
fld
pop
jmp
in
nop
cmp
cmps
(bad)
pop
push
bound
xchg
aaa
or
lods
sub
xchg
ret
rol
les
fiadd
jns
dec
outs
push
imul
push
fidivr
mov
mov
data16
jecxz
repz
mov
paddq
cs
mov
retf
or
jp
ins
scas
push
addr16
dec
ins
sub
sbb
je
enter
sub
stc
pop
je
outs
je
dec
lock
repz
fist
pop
pop
iret
rcl
pushf
add
fdiv
js
les
xchg
fistp
cmp
cdq
ret
outs
call
cmc
add
pop
iret
repnz
push
inc
push
movs
jecxz
fs
jg
call
pop
cdq
lods
push
out
xor
jbe
pop
jnp
add
out
rcl
mov
mov
stos
stc
stos
jbe
not
loope
dec
mov
sbb
std
jnp
inc
dec
mov
xor
movs
mov
xchg
mov
repz
push
gs
sub
adc
icebp
sbb
rol
mov
icebp
ss
cmps
jp
sub
push
mov
(bad)
push
scas
std
in
cmp
xchg
std
retf
sar
je
popa
(bad)
cmp
scas
xor
pop
jl
lds
inc
test
and
jnp
cmp
clc
(bad)
dec
shl
push
and
cs
movs
loope
mov
lods
pop
mov
call
retf
xchg
xchg
inc
or
repz
leave
shl
sti
mov
cmp
fldenv
int
rcl
push
xchg
jp
xchg
push
adc
push
adc
and
and
or
clc
dec
retf
mov
into
sbb
loop
push
pop
push
push
mov
fisubr
sub
push
push
ds
ja
das
jl
push
dec
jg
sub
add
fucomp
mov
mov
push
mov
loop
mov
inc
adc
lods
cli
ret
retf
add
std
cmp
mov
jbe
jmp
cwde
jmp
jge
pop
sbb
lahf
ins
addr16
dec
jmp
sub
lds
sbb
retf
(bad)
aad
(bad)
fdivr
(bad)
mov
add
stos
or
jb
hlt
push
sub
inc
jo
pop
mov
inc
retf
call
sub
mov
cmp
das
pop
cmps
outs
mov
inc
jne
and
adc
sti
sub
loope
jg
div
shr
nop
jns
adc
and
pop
ret
jge
scas
jae
or
out
mov
adc
mov
push
push
or
aam
xchg
mov
jns
je
jecxz
int3
pop
pop
test
(bad)
cmp
fptan
jle
out
outs
daa
sti
jg
out
jb
or
cmps
(bad)
stos
xchg
in
aam
xchg
sbb
not
test
fwait
sub
test
aaa
stos
jno
test
pop
adc
xchg
inc
outs
sub
cmps
jg
aaa
dec
lea
hlt
cmp
sub
stos
sub
sbb
push
aam
aam
xor
cs
push
sti
dec
adc
enter
pushf
lds
arpl
aaa
xchg
add
loopne
xchg
popf
fistp
inc
sub
fst
xor
sub
pop
mov
push
out
dec
and
test
ja
lods
xchg
pop
push
cs
mov
mov
out
(bad)
je
shl
sub
repnz
ror
fs
adc
retf
into
outs
shr
lock
xor
pop
push
rcl
push
test
nop
mov
dec
xlat
leave
lods
inc
push
sub
jl
jns
mov
clc
bswap
movs
retf
mov
cmp
jle
mov
push
push
sahf
jmp
ror
ror
adc
imul
(bad)
add
mov
ds
int3
and
xor
cmp
popf
xor
test
and
(bad)
iret
cmp
lods
outs
push
imul
push
scas
pop
adc
and
jmp
(bad)
sbb
in
sbb
ficomp
sbb
imul
adc
outs
pop
popf
sub
add
cmp
test
and
das
call
xchg
fs
cmc
test
ror
pslld
int
cmc
push
and
jmp
pop
dec
into
pop
push
rol
call
arpl
mov
clc
xor
stos
retf
adc
imul
or
and
jg
lock
lea
xchg
cwde
inc
mov
imul
cdq
jmp
inc
je
call
cdq
fwait
ror
fdivr
and
lahf
sub
addr16
leave
or
aaa
push
add
mov
cmp
fcmovbe
or
push
in
retf
mov
inc
jle
addr16
faddp
arpl
imul
cmp
sub
ret
cmp
lahf
xor
retf
retf
leave
adc
fwait
mov
mov
inc
xchg
sub
repz
imul
imul
cmp
adc
popf
or
mov
lds
pop
fdiv
repz
cmp
jmp
ds
loop
pop
xor
jle
daa
setno
mov
into
push
hlt
rcl
pop
dec
das
fiadd
cmp
jae
int3
ins
shl
add
sbb
xchg
(bad)
ins
adc
sub
pop
aas
jl
outs
retf
call
dec
repz
mov
mov
out
cmp
add
mov
mov
dec
stos
call
and
pop
mov
call
(bad)
aad
sti
rcr
test
mov
add
sbb
xor
sbb
out
sbb
popa
cli
cmp
ror
ins
pop
cmps
sbb
jp
or
xor
aam
clc
pop
add
dec
into
mov
add
mov
pop
pop
pop
aam
(bad)
xchg
movs
stc
mov
xor
adc
xor
adc
sub
stos
iret
clc
xchg
icebp
out
jecxz
popf
in
(bad)
and
cld
es
xlat
sbb
adc
mov
shl
and
inc
inc
mov
pop
jle
scas
gs
daa
push
fsub
push
xor
mov
leave
jecxz
add
mov
(bad)
sub
mov
push
mov
sahf
cdq
cmc
push
sub
push
dec
test
inc
inc
int
sbb
jle
call
cmps
pop
dec
scas
cwde
or
sbb
iret
pop
popf
dec
add
push
xor
mov
aas
or
outs
test
hlt
xor
jne
sub
fisubr
cmps
inc
inc
mov
in
jnp
stos
stos
addr16
add
in
pop
push
push
mov
imul
clc
adc
inc
je
ins
mov
jle
dec
in
aad
mov
jmp
lea
mov
rcl
fs
and
leave
cmps
test
mov
jg
mov
sbb
push
adc
fisttp
les
or
xchg
push
mov
cmp
jmp
dec
imul
xor
pcmpeqw
xor
pop
pop
fisttp
sar
inc
push
sub
sbb
xor
out
dec
(bad)
push
test
xchg
cld
add
call
adc
and
mov
pop
enter
push
stc
and
xor
iret
arpl
or
nop
retf
xor
ret
sbb
div
or
adc
movs
jo
pop
out
pop
jo
(bad)
cmps
in
popa
mov
fistp
inc
push
call
scas
adc
ret
dec
in
sbb
shr
sbb
in
popf
hlt
jne
xchg
adc
adc
repnz
mov
dec
dec
mov
dec
mov
mov
add
jae
push
cmp
fcmovb
add
inc
test
lock
aad
retf
leave
or
mov
gs
push
or
xchg
inc
scas
repz
mov
aaa
test
adc
ret
xchg
add
dec
push
jl
jnp
mov
jo
pop
pop
jecxz
push
sub
mov
and
xchg
xchg
add
mov
push
xchg
jno
push
pop
push
jb
mov
pusha
stos
push
shl
sbb
mov
dec
adc
test
gs
mov
outs
js
push
xchg
stos
test
inc
jnp
les
xor
dec
pushf
test
cmp
and
pop
sub
mov
push
icebp
cmp
pop
pop
sahf
pop
mov
popa
mov
dec
jno
push
inc
or
shr
pop
push
cs
pop
inc
push
jecxz
or
xchg
sub
(bad)
push
xchg
loopne
scas
push
or
mov
mov
movs
lods
mov
xor
fcmove
mov
xor
sub
fist
pop
in
xor
jmp
js
pop
add
sub
mov
(bad)
ret
outs
mov
daa
xor
mov
xor
or
fdivr
sar
std
je
shl
push
jbe
push
call
inc
push
push
jl
scas
inc
or
leave
push
inc
xchg
in
jmp
xchg
call
or
mov
jmp
fsubr
or
shl
cmp
test
and
and
add
xor
(bad)
outs
or
lahf
or
aas
sub
cs
inc
fld
stos
idiv
imul
addr16
ss
jecxz
gs
jbe
loope
pop
ins
sub
cmp
fisub
fld
rcl
mov
sbb
out
add
add
stc
mov
shl
aaa
and
lahf
data16
ss
loop
adc
pcmpgtd
xor
pop
les
movs
cmp
xchg
(bad)
sub
mov
add
push
mov
dec
cmp
push
movs
sbb
jne
jecxz
jp
pushf
sub
jmp
xor
sbb
adc
dec
addr16
popa
(bad)
in
sub
mov
enter
out
cmp
adc
retf
outs
add
ins
mov
jbe
std
dec
and
imul
das
mov
adc
jmp
js
aad
cmp
xor
sbb
sbb
scas
pop
and
jecxz
ds
or
fst
hlt
fwait
je
mov
mov
out
mov
popf
and
fsub
in
(bad)
out
push
lods
add
ds
pushf
test
push
push
stc
fneni(8087
jo
mov
mov
lea
cmp
mov
stos
fst
data16
mov
loopne
unpcklps
rcr
cdq
push
sub
shl
mov
xchg
and
(bad)
adc
mov
xor
inc
push
jp
(bad)
xor
lahf
adc
or
lock
gs
test
jae
xchg
sub
dec
retf
cmp
jmp
idiv
cli
pop
idiv
and
push
push
imul
mov
aam
jns
adc
mov
mov
cmps
clc
add
in
imul
enter
loop
ja
mov
ss
cmp
xchg
push
mov
cmc
rcl
adc
iret
(bad)
bound
shl
rcr
lods
xor
mov
ret
mov
pop
cmp
push
and
sbb
fidivr
test
or
ins
scas
sub
jno
clc
mov
(bad)
imul
lahf
jg
sub
pushf
aas
movs
test
inc
xor
add
cmp
and
sbb
cmp
ficom
push
es
push
ret
into
mov
pop
sahf
xor
and
icebp
xchg
mov
sbb
call
pop
test
push
scas
ja
cmp
adc
cdq
mov
bound
arpl
es
jae
xchg
aas
stos
jns
fdivr
mov
in
pop
sbb
fwait
mov
test
push
mov
in
jo
adc
mov
sub
and
mov
outs
cmp
cmp
pusha
loopne
push
rol
mov
adc
push
pushf
outs
aad
pop
les
call
sbb
(bad)
(bad)
gs
cmc
inc
inc
pop
push
jmp
pop
lods
retf
inc
or
lea
jno
test
inc
push
dec
mov
gs
mov
xor
sub
push
cmp
repz
xchg
dec
shr
bound
xor
das
mov
mov
adc
xchg
xchg
mul
pop
movs
(bad)
stos
sti
test
arpl
mov
push
retf
mov
sub
pop
aam
int3
and
data16
pop
pop
mov
push
mov
shr
fsubr
stc
out
and
xor
dec
(bad)
imul
jp
inc
xor
mov
iret
test
pop
shl
jns
xlat
dec
jae
xchg
loop
div
popf
stos
in
scas
test
cld
add
pop
sbb
cmp
push
lea
push
mov
xchg
jbe
inc
sahf
out
dec
cmps
mov
cmps
sahf
fadd
cwde
pop
jo
(bad)
mov
ret
movs
sti
xchg
push
jle
ret
cmp
adc
sbb
jg
pop
test
adc
jl
dec
push
addr16
sbb
fbstp
out
sbb
es
sub
jns
or
mov
inc
cmp
jmp
or
clc
cs
jmp
int
mov
test
pop
mov
sbb
sub
cdq
inc
xchg
or
stos
xor
jmp
or
adc
push
adc
dec
femms
ins
or
and
mov
pop
rcl
mov
mov
retf
sbb
mov
xchg
jle
gs
(bad)
adc
aad
jmp
imul
sub
ds
fadd
int3
jg
xor
js
pop
push
pop
jns
call
pop
cmp
addr16
retf
pop
icebp
in
sar
aad
mov
scas
xchg
aam
dec
leave
inc
push
cmps
mov
cli
and
push
loopne
cmp
aad
pop
stos
sbb
pushf
int3
add
jno
mov
fs
shl
jg
cmc
mov
ret
push
adc
xchg
mov
test
bound
xchg
xlat
in
cmp
xchg
inc
jo
dec
icebp
paddusb
and
sti
sub
pop
dec
(bad)
jle
gs
push
scas
cwde
jnp
(bad)
jno
leave
retf
xchg
pop
ins
mov
aam
xchg
(bad)
cmps
call
mov
cmp
pop
dec
mov
dec
mov
mov
mov
jmp
push
pop
pusha
das
aam
mov
or
sbb
push
mov
or
or
inc
pop
push
mov
pushfw
cmp
and
mov
aaa
dec
(bad)
push
jo
pop
jg
mov
scas
out
pop
sub
scas
cdq
jns
and
add
mov
retf
aas
push
aaa
xchg
es
dec
sbb
cmp
(bad)
sub
xor
hlt
fdivrp
jbe
pop
inc
lods
ficomp
xor
pop
mov
stos
cmp
fstp
mov
aad
pop
(bad)
ins
in
and
mov
mov
pop
aas
aam
retf
stos
dec
ins
sub
aas
imul
repz
mov
leave
pop
in
cmp
add
in
mov
sub
mov
or
out
dec
fdiv
and
sbb
pop
xor
and
pop
mov
jecxz
inc
aaa
xor
push
je
dec
xor
outs
movntps
jno
pop
pop
movs
or
sbb
ins
mov
jne
shr
ret
cli
(bad)
arpl
xchg
sbb
das
test
dec
outs
jae
pop
retf
lods
mov
add
ss
(bad)
or
loope
adc
mov
pop
dec
inc
lods
pop
aad
sbb
in
icebp
pop
pushf
and
add
pop
or
ins
(bad)
sbb
mov
das
and
gs
mov
or
jae
out
lods
xchg
jno
(bad)
mov
ret
adc
cmp
and
jp
fistp
aad
hlt
into
pop
loop
mov
out
or
hlt
mov
test
mov
cwde
cs
or
add
pop
in
xor
dec
loop
mov
mov
mov
inc
rol
daa
xchg
loope
mov
psllw
and
(bad)
mov
xchg
retfw
in
ins
pop
push
cmp
jo
add
push
lock
arpl
pop
in
and
xchg
push
mov
cs
in
xchg
iret
test
aam
dec
jnp
nop
clc
call
rol
adc
fistp
pop
sub
mov
jg
jo
add
dec
inc
pop
pop
push
jae
into
sub
push
outs
repnz
repnz
push
sbb
dec
(bad)
cmp
jl
cmp
(bad)
jp
js
dec
les
mov
push
sbb
js
ds
test
shl
mov
popf
xor
sub
xchg
ins
outs
cmps
jmp
adc
jno
in
out
jo
icebp
aam
popf
push
icebp
imul
jmp
dec
xor
mov
xchg
outs
jbe
mov
push
mov
xchg
js
xchg
(bad)
enter
les
xchg
ins
into
inc
mul
shl
stos
jg
dec
add
xchg
sub
lahf
sub
repz
loope
aas
jle
cmp
out
jg
ret
add
or
and
gs
bound
lahf
(bad)
pop
sbb
push
mov
cmps
xchg
inc
jp
push
mov
popa
pushf
adc
rcr
pop
neg
jnp
and
pop
movs
and
loopne
cdq
es
leave
in
push
mov
(bad)
in
test
mov
faddp
ds
sbb
clc
mov
push
push
push
int
mov
ret
movs
add
jne
pop
jl
outs
(bad)
push
jp
stc
rcr
out
(bad)
cld
push
mov
aam
mov
movs
or
adc
imul
js
int3
aaa
pop
dec
ds
cmp
xadd
inc
in
sahf
push
mov
cmp
push
repz
jg
mov
adc
in
push
movs
imul
jbe
cmp
int
sbb
add
jg
add
bswap
test
rcr
loop
push
jg
sub
mov
cli
pusha
adc
adc
xchg
cmp
adc
rcr
sbb
inc
sub
aad
xor
pop
adc
inc
fcmovne
mov
iret
rcr
out
pop
pop
jno
cmp
cmp
dec
cld
add
cs
mov
imul
xchg
mov
cmp
cli
add
or
mul
sub
lods
rcr
dec
aam
inc
iret
adc
xchg
and
xor
out
out
mov
stos
xor
cs
ja
sbb
(bad)
and
cmp
jns
adc
addr16
dec
push
add
jo
imul
sub
popf
mov
sbb
fwait
aad
xchg
pop
mov
sub
pop
dec
in
and
jne
neg
ret
sbb
js
loope
pop
or
(bad)
xchg
push
mov
or
adc
leave
sti
sbb
jle
ins
movs
sub
mov
pop
(bad)
and
add
lods
pushf
movs
jmp
das
mov
push
mov
in
inc
and
sbb
imul
jnp
mov
ja
push
pop
jg
add
and
pop
je
out
jp
mov
jo
ret
outs
into
or
or
push
nop
pop
ret
ret
adc
vpaddsw
sbb
jge
or
cmp
ret
adc
adc
add
repz
dec
ins
pop
(bad)
outs
js
sar
(bad)
imul
or
shr
mov
mov
push
test
mov
imul
cdq
push
sbb
clc
hlt
mov
adc
push
sub
push
dec
lea
repz
aam
push
popa
cmp
jmp
call
in
fs
pop
popa
xchg
xor
jge
mov
mov
push
adc
(bad)
sahf
mov
pop
stc
mov
es
rcr
iret
sub
inc
pop
and
loope
jne
call
jge
daa
lods
dec
shl
push
test
pop
ins
mov
lahf
or
fdiv
fidiv
int
mov
mov
imul
cmp
(bad)
aam
lahf
jg
jmp
inc
mov
in
stos
imul
ret
(bad)
jmp
and
lea
jg
add
test
in
sub
in
cdq
mov
dec
fsubr
int
xor
mov
jecxz
nop
xchg
inc
leave
es
arpl
test
cmp
imul
push
ret
mov
adc
xchg
push
fdiv
idiv
xor
adc
xchg
push
retf
mov
inc
movs
push
push
test
frstor
pop
data16
inc
aaa
adc
ror
bound
data16
jbe
pop
add
and
scas
xchg
sub
clc
mov
mov
or
sti
mov
test
movs
push
fdiv
sub
jecxz
jp
push
sub
sar
inc
fimul
add
mov
add
sbb
outs
pushf
and
sbb
and
or
cmp
(bad)
int3
or
jmp
and
xor
push
test
jb
test
out
cmc
sbb
into
cmc
push
loop
xchg
or
push
scas
add
pop
dec
cmc
or
into
push
mov
sbb
sbb
xchg
sbb
jae
sbb
(bad)
jno
sahf
jp
out
dec
test
ja
into
or
outs
dec
or
jecxz
push
mov
and
sbb
adc
add
outs
mov
movs
adc
sti
mov
push
pop
sbb
adc
test
mov
mov
cmp
in
retf
jge
push
repz
xor
pop
or
mov
xchg
aam
mov
outs
push
add
mov
enter
pop
mov
pop
sbb
adc
push
dec
loopne
mov
push
aaa
test
sub
mov
xor
test
test
daa
jo
loop
mov
sar
call
inc
pop
jecxz
mov
pop
retf
leavew
add
mov
ficom
aas
push
pop
repnz
sub
or
ja
xchg
add
ror
and
sub
xor
dec
int
test
sbb
nop
retf
in
ja
cld
mov
inc
int3
loopne
movs
ret
std
dec
mov
icebp
jge
lods
leave
mov
mov
lds
xchg
xor
mov
lds
cmps
out
ja
push
in
xor
repz
mov
and
fld
push
aam
retf
pop
and
mov
ins
out
test
dec
ja
mov
jns
push
add
shr
pop
popf
xchg
out
(bad)
outs
in
das
pop
mov
cmp
lock
mov
inc
xchg
inc
cmc
adc
int
(bad)
mov
aas
cmp
inc
adc
inc
sbb
cmp
nop
sbb
mov
pushf
stos
fist
ret
pushf
ss
jl
shr
mov
inc
push
mov
ja
scas
push
or
mov
push
sbb
pop
fbstp
jbe
ret
sub
push
push
enter
add
neg
jecxz
retf
cmp
repz
xchg
ret
js
test
inc
jecxz
mov
fs
fbld
int
xchg
int
or
push
xchg
add
mov
or
out
mov
je
push
fdivr
loope
and
adc
adc
mov
shr
imul
leave
push
sub
inc
mov
jecxz
cmc
lods
xchg
adc
mov
mov
jno
sahf
stos
adc
mov
sbb
lahf
lods
(bad)
fnclex
cld
dec
xchg
sub
adc
sub
or
loopne
push
push
jno
pop
cmp
mov
rcl
lds
or
xchg
ins
adc
sbb
stos
mov
pusha
in
scas
out
sbb
inc
cmc
lock
dec
pop
pop
movs
ja
rcl
sbb
cs
cmc
(bad)
leave
rcl
enter
xchg
inc
cdq
xor
and
scas
ret
sub
push
adc
mov
pop
inc
rol
cmps
out
fcmovnu
xchg
push
sub
push
mov
adc
ss
fimul
enter
mov
and
mov
mov
int3
add
dec
outs
mov
add
mov
ins
pop
test
shr
cmp
inc
mov
jnp
lock
pop
cmp
jb
movs
cmp
and
xor
or
sub
(bad)
into
loopne
dec
cmps
mov
in
mov
dec
and
stos
in
shl
xor
inc
cld
out
inc
data16
cmp
out
pop
push
sar
or
sbb
in
push
fisttp
movs
fisttp
mov
push
sbb
jae
sub
jg
jg
push
and
lahf
nop
pop
jno
mov
imul
xor
call
fucomi
pop
xor
sbb
push
fiadd
cdq
mov
cwde
addr16
gs
dec
and
mov
and
nop
arpl
int3
mov
ret
retf
fucomip
xchg
leave
loope
cmp
sbb
test
test
out
js
push
jno
cld
xor
ins
sbb
sbb
out
push
sti
icebp
jnp
jb
mov
ins
add
imul
and
ins
repnz
scas
(bad)
arpl
or
pop
pop
bound
sbb
push
aas
mov
test
and
sbb
xchg
fst
movs
mov
mov
and
repnz
leave
js
jle
bound
fcmove
enter
sbb
mov
xchg
(bad)
loop
push
pop
lods
fsub
sub
mov
call
int
sbb
loopne
ror
enter
xchg
inc
sbb
and
xchg
mov
jno
mov
sub
stos
jno
rol
out
leave
mov
and
inc
mov
mov
cmp
jmp
pop
shl
arpl
icebp
scas
js
mov
mov
sub
clc
sbb
std
sbb
scas
jl
inc
jge
jmp
xchg
inc
jle
pop
in
shl
out
in
cmp
out
hlt
in
daa
inc
pop
cli
dec
rcl
and
call
push
mov
mov
ins
xchg
inc
mov
adc
es
mov
pop
push
js
cmps
in
into
or
popa
push
mov
or
sub
xchg
and
xchg
adc
je
mov
jecxz
xchg
cmp
sbb
push
lods
add
test
cwde
imul
sbb
(bad)
shr
fcomp
fmul
jne
inc
into
cmp
dec
or
jno
(bad)
es
aaa
aad
idiv
or
xlat
(bad)
fcmovnbe
or
pushf
aad
das
test
les
outs
mov
int3
movs
fld
mov
jo
add
aam
movs
sbb
jge
lods
push
sbb
mov
xchg
add
cmp
push
pop
dec
dec
leave
stos
rol
xchg
cwde
sti
and
out
call
ds
sub
test
or
sbb
mov
sahf
adc
ds
dec
out
mov
and
adc
mov
push
test
ror
aad
fs
(bad)
movs
sbb
and
clc
and
mov
sub
push
outs
and
mov
mov
jo
lods
dec
push
mov
add
aad
mov
inc
out
or
stos
xor
sti
sbb
fadd
mov
mov
loope
ins
adc
outs
ins
sbb
pop
cwde
jl
dec
inc
scas
dec
movd
cmp
add
ss
imul
dec
lahf
stc
add
add
mov
cmp
(bad)
jae
and
sub
jbe
xor
ja
sar
test
int3
fcmovu
out
mov
xor
dec
int3
inc
xor
in
(bad)
sar
imul
jns
xchg
pop
in
push
jl
xchg
sub
lds
mov
mov
mov
or
lods
fadd
or
pop
cmc
fld
or
fist
call
lods
cdq
cdq
sub
loope
push
mov
test
rcl
mov
pop
dec
pushf
add
imul
pop
shl
lods
test
mov
aam
inc
ins
(bad)
cdq
xor
add
mov
adc
or
jnp
loopne
sysexit
jecxz
pushf
jg
(bad)
sub
fsubr
repnz
aam
push
aad
sbb
adc
inc
inc
sub
ins
jl
jns
stos
jmp
dec
int
bound
xchg
out
stos
pop
mov
lock
shr
xchg
scas
cmp
iret
loope
in
xchg
arpl
xor
mov
xchg
fwait
pmuludq
dec
dec
icebp
push
pusha
cmp
stc
test
cwde
outs
(bad)
xchg
add
cmps
sbb
sub
push
and
out
pop
test
dec
ret
jbe
xor
add
sub
inc
mov
pop
icebp
mov
pop
jecxz
outs
stos
pushf
sub
inc
sub
mov
jae
mov
or
jb
out
mov
movs
push
adc
movs
ss
and
in
nop
cld
pop
mov
pop
icebp
shr
fs
dec
xor
mov
push
out
or
xlat
push
aaa
ins
in
lahf
adc
(bad)
cmp
pop
xchg
sti
out
jno
mov
into
xchg
xor
dec
(bad)
shl
pop
jne
rcl
stc
repnz
dec
cdq
fldcw
mov
movs
adc
pop
add
movs
cmp
xor
push
jmp
test
pop
jae
scas
pop
inc
cmp
ja
mov
nop
jno
mov
int3
dec
scas
call
inc
in
cmc
pop
cmc
cmp
fwait
call
or
dec
mov
inc
mov
cmps
std
mov
ret
sahf
retf
ficomp
xlat
sbb
add
and
cmps
loop
int
andps
push
icebp
enter
jl
mov
frstor
rol
sahf
dec
add
dec
mov
outs
jae
ret
or
std
sbb
pop
test
idiv
rcl
mov
pop
add
imul
dec
mov
pop
mov
add
jmp
test
cmp
outs
gs
adc
stc
retf
lock
(bad)
add
jb
push
lods
cdq
mov
rol
inc
out
enter
das
or
stos
push
inc
pop
push
add
dec
int3
jnp
xor
inc
cmps
stos
push
add
and
adc
sub
xchg
xchg
pusha
jmp
push
leave
dec
sbb
fnstsw
push
jmp
rcr
or
not
jp
lea
pop
les
fwait
cmp
data16
add
pop
aad
call
rol
add
and
and
sbb
div
pop
push
add
cmp
loope
mov
jmp
push
retf
sub
retf
xchg
(bad)
(bad)
sub
repnz
ret
fadd
cmp
inc
mov
jo
sub
inc
imul
ror
jno
adc
hlt
cli
push
test
add
pop
sbb
xchg
mov
test
cmp
xor
mov
pop
popf
cdq
dec
adc
adc
retf
sub
outs
xor
xchg
jmp
scas
out
(bad)
and
cmp
or
rcl
jmp
cld
imul
mov
popa
sub
mov
xchg
les
xor
cs
adc
inc
test
dec
pop
repz
xchg
fidiv
xlat
push
pop
sbb
mov
inc
mov
sbb
fmul
push
mov
scas
ds
mov
add
push
and
jg
pop
mov
imul
xchg
jmp
pop
mov
mov
pop
sbb
jno
aad
js
stc
pop
mov
dec
cmp
push
push
(bad)
repnz
das
pushf
(bad)
xor
mov
dec
lods
cmp
jne
std
rcl
test
mov
and
xchg
data16
loopne
pop
pusha
push
(bad)
cmp
mov
mov
inc
xor
push
data16
(bad)
ins
lea
sbb
in
cmc
call
repnz
mov
(bad)
shl
sub
dec
jmp
cmp
sub
add
add
in
aam
jp
icebp
aam
cmp
push
pop
aam
and
dec
out
sbb
adc
bnd
or
cmps
dec
dec
mul
repz
inc
pop
retf
out
jne
stc
mov
push
aas
mov
pop
lods
push
lods
jno
mov
int
mov
sub
hlt
jmp
adc
push
and
and
cmc
cmp
(bad)
or
jmp
mov
push
popa
nop
xchg
clc
sbb
outs
mov
movs
inc
addr16
dec
inc
dec
out
cmps
xor
jecxz
and
mov
cmp
mov
lods
data16
pushf
push
sub
xor
mov
mov
cmp
xchg
sti
mov
ins
retf
dec
sbb
fisubr
push
icebp
sub
dec
sbb
(bad)
clc
mov
ficomp
mov
push
xchg
mov
(bad)
xchg
sar
push
inc
pop
xor
mov
mov
ret
push
sub
jo
gs
leave
mov
fist
or
sub
cmps
adc
jno
pusha
mov
mov
inc
(bad)
sub
inc
ret
xor
scas
in
ins
xchg
push
aam
arpl
push
aas
cld
call
sub
cwde
mov
not
adc
js
scas
add
mov
aam
setp
xchg
ins
stos
xchg
mov
test
mov
jae
mov
iret
int3
pop
sbb
mul
(bad)
dec
outs
push
cmp
int
repnz
mov
jbe
dec
inc
outs
shr
and
call
mov
inc
mov
or
test
loop
inc
out
pop
and
stos
cmp
sbb
ror
xor
push
and
cli
jecxz
xchg
mov
shr
std
fs
shr
pop
push
sbb
mov
cmps
add
mov
add
jmp
rep
cmp
sar
sub
cmps
sub
cli
jnp
fld
pop
jp
xor
or
jae
arpl
fiadd
je
enter
icebp
dec
test
mov
xchg
xor
mov
add
add
mov
jecxz
mov
mov
adc
pop
mov
or
cmp
inc
xchg
test
jno
scas
push
mov
add
shr
jns
cmp
mov
lock
cdq
das
jl
lahf
rcr
pop
mov
dec
pop
inc
test
aad
adc
adc
xchg
mov
cmps
mov
out
sbb
dec
dec
repz
ret
test
mov
ret
sbb
push
pop
jle
sub
lock
mov
ins
aad
aad
jo
or
mov
pop
(bad)
(bad)
sbb
ror
scas
sahf
jmp
dec
and
popa
adc
dec
adc
daa
test
and
mov
mov
fist
mov
dec
in
fcmovb
inc
fwait
stos
xchg
rcl
(bad)
test
int3
scas
lods
jmp
ss
cmp
dec
popa
xchg
ja
lea
sbb
movs
and
arpl
xchg
adc
jno
sar
arpl
(bad)
movs
es
xchg
adc
popf
fnstenv
in
mov
das
out
mov
out
jns
cmc
shl
mov
aas
lea
out
push
fmul
jp
push
dec
mov
or
xor
cmps
into
push
adc
not
pop
xor
xor
scas
mov
xor
jne
popa
add
push
or
dec
out
lahf
fwait
retf
jns
lea
nop
push
pop
sbb
mov
push
lahf
and
xor
leave
sub
add
push
enter
call
daa
mov
imul
jo
jle
scas
lds
xor
retf
stos
push
std
xchg
add
jo
mov
add
sub
sub
and
(bad)
out
inc
xor
outs
push
(bad)
in
cld
ret
and
push
xchg
outs
push
cmps
inc
sbb
and
jmp
add
push
mov
es
(bad)
mov
jg
popf
jmp
lock
rol
cmc
ins
repz
push
and
cwde
xchg
(bad)
pusha
(bad)
push
push
xchg
mov
dec
pop
fld
cli
test
cs
sbb
inc
pop
and
mov
stos
iret
xchg
in
or
ins
adc
rcr
xchg
push
inc
nop
dec
dec
sbb
mov
ud0
cmp
pop
sbb
enter
iret
xchg
or
cmp
popf
mov
ror
jnp
outs
jmp
repz
xchg
outs
cmp
sbb
aaa
jo
cmps
cmp
in
mov
xor
pusha
das
sbb
ss
pop
mov
jle
or
imul
push
outs
mov
pop
enter
xor
jno
repz
enter
mov
jno
sbb
sti
lea
mov
sbb
mov
cmp
sbb
aaa
push
adc
add
mov
std
stc
(bad)
sbb
jb
sbb
and
mov
adc
and
dec
xor
mov
push
cmp
mov
mov
push
ret
aas
lea
dec
leave
and
and
les
fidiv
shl
cmp
jb
cmp
pop
stos
sub
sub
adc
and
jl
test
mov
fild
push
inc
cmp
jl
xchg
iret
outs
les
pop
sbb
loop
adc
imul
ja
rcl
and
ja
pop
mov
loopne
pop
iret
pop
inc
xchg
ror
sbb
jbe
sbb
mov
psrld
lock
aaa
lds
cmp
sub
repnz
mov
int3
(bad)
nop
xchg
or
outs
out
xchg
pop
and
mov
daa
sbb
jecxz
and
lahf
dec
test
mov
dec
cmp
cmp
mov
ins
sub
dec
xchg
js
cdq
and
out
cmp
outs
std
inc
test
test
fs
push
jecxz
int
mov
iret
pushf
push
icebp
xchg
mov
inc
rcl
loope
add
pop
mov
fs
fwait
cmp
pop
aas
js
jge
pop
(bad)
sub
(bad)
fcomp
jge
mov
lock
in
test
xchg
mov
add
jmp
imul
add
int
ret
jbe
inc
fwait
lods
add
shl
lds
ror
movs
jne
and
loope
repnz
xlat
stc
and
xor
pop
xchg
pop
pop
push
mov
or
and
ret
pop
sbb
stc
setne
in
jp
es
movs
jnp
mov
xchg
mov
xlat
inc
dec
jmp
mov
ror
jnp
add
sti
arpl
pop
mov
pop
lahf
add
pop
push
in
mov
mov
call
or
test
mov
sub
jecxz
inc
cmps
mov
ss
or
popf
movs
ret
aas
and
push
dec
cmp
adc
les
movs
pop
fisttp
jne
fdivr
std
push
lahf
sbb
sub
push
test
aam
inc
rcl
xchg
nop
lea
test
call
mov
fild
into
add
inc
scas
or
in
test
push
pop
in
mov
xor
fadd
aam
ins
jmp
std
mov
retf
stc
fst
out
mov
aas
movs
lea
lods
stos
cmp
loope
add
sub
adc
mov
fsubr
ds
cwde
pushf
cwde
adc
out
xor
hlt
cs
push
call
pop
int
jp
push
jne
int
fs
pop
mov
out
push
or
jle
fs
bound
cwde
clc
mov
lds
jmp
imul
pop
push
dec
lds
outs
mov
scas
data16
aaa
inc
cdq
test
aaa
add
icebp
fnstcw
mov
inc
retf
inc
xor
inc
daa
mov
rep
lods
sbb
fimul
sahf
mov
mov
popf
and
cli
out
mov
dec
mov
ret
gs
cmps
add
nop
and
push
cwde
sbb
sub
test
icebp
cmp
and
jg
ss
fstp
xor
lods
lds
imul
sbb
test
(bad)
fwait
jno
shl
pushf
mov
ds
adc
cmc
xchg
idiv
les
sub
cli
jge
push
fcmovbe
cmps
jg
retf
jb
pop
sub
dec
daa
cmp
lock
xor
mov
push
in
add
dec
mov
inc
push
mov
retf
dec
add
adc
mov
mov
out
push
out
dec
rcl
mov
and
mov
mov
cdq
xor
imul
(bad)
sbb
xchg
fst
mov
xor
(bad)
neg
test
lock
outs
out
lods
(bad)
rol
cmps
ja
mov
jp
push
sbb
les
jecxz
pushf
in
push
pcmpeqb
dec
sub
add
sbb
xchg
dec
mul
mov
xor
sub
adc
push
xchg
add
dec
jecxz
fs
leave
or
xchg
and
push
syscall
mov
mov
mov
inc
or
cmp
movs
mov
clc
stc
movs
cld
pop
std
pop
sar
mov
inc
call
cmp
jle
movs
xor
dec
xor
dec
std
bound
xchg
sbb
pusha
loop
inc
jecxz
pop
and
xchg
enter
arpl
rcr
pop
inc
fdiv
mov
shr
rol
push
les
hlt
xor
dec
rol
adc
loopne
jl
pop
inc
loopne
inc
xchg
cs
jno
cld
out
int
cmp
dec
ds
gs
sar
dec
outs
ret
scas
xor
test
sbb
pop
cmps
and
ret
bound
pop
push
loope
mov
test
jbe
es
and
xchg
mov
mov
sti
pop
xchg
push
mov
mov
sti
stos
iret
mov
lods
dec
ror
dec
in
scas
pop
pushf
mov
in
mov
daa
sbb
xchg
data16
sbb
mov
(bad)
jmp
xchg
gs
mov
data16
ins
rcr
jmp
jno
xlat
call
adc
movs
rol
xor
mov
das
dec
scas
into
mov
add
jmp
repnz
and
inc
dec
push
mov
stc
outs
mov
mov
std
push
mov
dec
xor
sbb
shl
ret
or
pop
pop
or
and
jmp
inc
adc
dec
jbe
add
xchg
shl
rcr
sub
int
sbb
jno
xor
and
mov
sub
add
and
dec
push
mov
adc
fwait
mov
inc
sti
repnz
push
out
mov
test
pop
mov
mov
dec
lods
xchg
xchg
mov
fsub
or
stos
pop
pop
test
sub
mov
(bad)
cmp
pop
(bad)
pop
ds
mov
cmp
cld
and
inc
arpl
mov
mov
loope
jecxz
pop
jl
add
out
mov
pop
adc
daa
cs
mov
(bad)
xchg
push
pop
push
out
out
inc
idiv
loop
push
adc
cmp
test
jg
and
out
outs
call
ja
rcr
test
ror
test
enter
(bad)
fdivr
aas
sbb
call
push
loope
out
push
sub
scas
and
sub
xchg
mov
xor
aas
bound
mov
xor
mov
sub
xchg
div
mov
into
jo
rcr
jnp
outs
icebp
cmp
sahf
sub
push
mov
es
mov
xchg
hlt
out
xchg
inc
nop
mov
xchg
push
aad
out
dec
jg
xchg
(bad)
(bad)
leave
xchg
xor
test
iret
pop
das
mov
xor
call
clc
mov
xchg
adc
xchg
xchg
movs
aam
std
lods
int
mov
shl
jle
adc
in
shl
and
jb
ror
cmp
jl
jg
add
xor
dec
shl
dec
jmp
xor
mov
push
aas
hlt
sub
pop
sbb
pop
movs
push
and
enter
cmp
in
dec
and
les
xor
shr
(bad)
out
aaa
out
push
cmp
jnp
sbb
sub
jg
mov
and
clc
out
ja
ins
jns
rcr
xor
(bad)
sbb
jbe
jge
ret
ret
lds
jmp
imul
call
jecxz
sub
pop
mul
movs
lods
bound
mov
mov
xchg
mov
push
xor
fwait
jnp
adc
clc
stos
fistp
leave
and
adc
arpl
call
(bad)
mov
in
(bad)
lock
lea
rol
loop
xor
add
fld
in
jns
fs
mov
loope
nop
xor
(bad)
sbb
dec
cmc
outs
dec
jmp
ret
pusha
stc
push
pop
clc
bt
cmp
call
add
test
push
push
movzx
movsx
mov
jmp
push
and
dec
pop
mov
dec
sbb
div
pusha
mov
or
inc
xchg
and
push
fild
std
js
push
push
push
add
push
int3
lahf
repz
inc
(bad)
fist
int
mov
lods
lahf
jae
sub
add
outs
pusha
xor
sbb
mov
xchg
cmps
clc
add
push
add
push
test
jns
iret
mov
pop
lds
adc
dec
rcr
adc
cmp
out
lock
mov
dec
(bad)
cdq
in
ins
xor
imul
cmp
pop
out
mov
ror
scas
mov
aas
mov
cli
in
ds
or
std
push
in
add
dec
test
mov
retf
or
and
rol
call
mov
add
jae
add
sbb
mov
dec
call
ds
idiv
jmp
xor
sbb
xchg
inc
rol
cmp
cmps
sar
loop
out
mov
push
push
cdq
jmp
push
push
ins
mov
(bad)
test
out
ret
pop
pop
sub
(bad)
pusha
mov
jmp
jge
inc
rol
loope
lods
mov
jecxz
push
scas
fdiv
dec
mov
fcmovnu
into
and
inc
fxch
lahf
mov
in
stos
xor
mov
mov
movs
sub
push
inc
adc
inc
fisub
jnp
lea
fs
xlat
stos
scas
je
stos
pop
jbe
cwde
hlt
movs
cmc
and
loope
pop
aas
add
les
inc
fisubr
lea
xor
dec
mul
ds
(bad)
xlat
cmc
xor
fisub
gs
push
push
repz
dec
shl
cld
sub
in
push
(bad)
fadd
imul
adc
(bad)
daa
and
arpl
push
int3
mov
mov
(bad)
scas
jmp
add
xchg
xchg
outs
sub
stos
adc
hlt
out
xchg
out
adc
mov
push
xlat
cmps
dec
clc
fld
or
or
rcl
cmps
jnp
add
and
fisub
and
mov
pop
push
stos
popf
icebp
aad
sub
mov
and
fs
fs
test
sbb
outs
inc
and
adc
or
xchg
pop
xor
(bad)
sub
adc
pop
cmp
mov
lea
call
pusha
lea
jb
lea
cwde
shl
movzx
shl
shr
movzx
pushf
stc
pushf
imul
mov
cmc
lea
test
jmp
pusha
push
jmp
cmc
call
test
mov
clc
dec
fild
adc
cmp
adc
shl
pop
das
add
scas
mov
jb
ret
cmp
sub
in
je
cmp
inc
push
mov
arpl
pop
xlat
mov
dec
adc
in
movs
jg
xchg
inc
xor
mov
into
mov
mov
or
xor
pop
stc
dec
cdq
push
fsubr
scas
pop
fisubr
imul
(bad)
sub
loope
lahf
jae
push
cmc
dec
mov
lds
mov
dec
shl
jge
stc
jae
inc
shr
mov
test
call
push
lea
jb
btc
cmp
bswap
mov
jmp
mov
pusha
pushf
pushf
mov
lea
jmp
pushf
lea
jae
jmp
jg
lahf
gs
pop
mov
sbb
mov
dec
aaa
xchg
outs
out
sub
daa
clc
dec
cmp
jns
test
pop
dec
pop
dec
lds
add
fsubr
xor
mov
lock
dec
xchg
popa
sbb
leave
in
mov
les
repz
xchg
jae
sub
sub
add
data16
mov
mov
xlat
test
cmp
xchg
addr16
cmps
add
jno
sub
pop
xchg
loop
xchg
loope
jno
mov
mov
js
sub
cdq
push
popf
loop
movs
stc
mov
dec
push
cmc
retf
push
inc
xchg
ins
mov
das
add
(bad)
je
(bad)
int3
fcmove
and
inc
sub
adc
cmps
jp
xor
in
adc
cmp
cs
inc
fwait
lods
pop
scas
or
xor
aaa
sbb
cmp
nop
mov
inc
inc
clc
out
les
mov
push
adc
pop
loopne
xchg
gs
mov
pushf
pop
inc
adc
popa
pop
push
aam
cld
jns
out
(bad)
pusha
push
movs
stc
jmp
push
movs
jmp
inc
call
aad
push
sahf
outs
sub
jge
ds
jl
in
rcl
sub
movs
imul
loop
mov
jp
xor
call
(bad)
xchg
jl
adc
das
in
and
ja
data16
ret
mov
and
xchg
(bad)
int3
int
lds
dec
lahf
adc
out
jl
add
(bad)
call
mov
inc
xor
mov
pop
pop
and
cmps
xchg
jmp
mov
inc
adc
int
adc
fwait
mov
or
jge
push
mov
aas
mov
jmp
mov
das
pop
call
sbb
xlat
xchg
arpl
mov
jno
mov
dec
rol
inc
adc
icebp
mov
in
sbb
stos
sti
add
add
sub
xor
lods
or
sub
mov
shl
scas
lods
add
sub
sar
dec
btc
mov
bts
mov
shrd
btc
bsf
bsr
sub
pop
and
pop
sbb
pop
aaa
mov
pusha
push
bt
test
shl
call
repnz
lea
jnp
pushf
pusha
pusha
lea
jne
lea
call
mov
lea
je
stc
add
pushf
cmp
cmc
push
cmp
mov
jmp
movzx
mov
pushf
mov
movsx
pusha
lea
call
xor
jmp
lea
je
not
lea
dec
add
ror
or
mov
pusha
cmc
add
cmp
clc
test
call
pop
stos
cdq
pop
inc
pop
mov
in
mov
cmp
sub
and
and
dec
or
in
das
jmp
cmp
inc
adc
shl
fwait
push
test
mov
mov
bound
mov
retf
gs
adc
(bad)
xor
call
mov
ds
sbb
fisubr
in
js
out
outs
aas
(bad)
xchg
or
hlt
xchg
test
call
inc
(bad)
pusha
stos
pushf
push
pushf
mov
lea
jmp
outs
je
ins
ins
cs
ins
add
add
(bad)
jmp
xchg
loope
adc
push
lea
jle
pusha
lea
jb
stc
jmp
shr
call
push
clc
bt
mov
pusha
cmp
call
push
jmp
cmc
cmp
pushf
lea
jmp
jmp
lea
je
jbe
pusha
sub
pushf
cmp
pusha
push
push
push
lea
ja
push
mov
lea
jmp
push
jmp
push
call
jae
add
call
jb
mov
shl
lea
call
add
pop
ret
lea
jne
setge
seta
lahf
pushf
mov
lea
lea
mov
lea
mov
not
bswap
not
lea
lea
jbe
pushf
pushf
pusha
mov
jmp
xchg
push
pop
bswap
mov
lea
lea
call
movsx
movzx
pusha
mov
pusha
call
jmp
aaa
xchg
aas
pop
mov
lea
fwait
jmp
mov
or
cs
das
and
ds
fidiv
rcl
push
es
jno
mov
test
push
loopne
stos
jle
pop
inc
pop
xchg
push
stos
pop
jmp
dec
loope
das
stos
scas
and
and
stos
cmp
in
mov
enter
ret
dec
iret
and
loope
mov
movs
jno
bound
scas
inc
mov
ins
inc
cs
jb
and
cmps
mov
add
stos
outs
pop
xor
hlt
aad
leave
pushf
std
fbld
pop
cmp
cli
or
lods
and
fcom
mov
mov
daa
neg
fdivr
out
mov
shl
xor
mov
cmp
push
cmp
cmp
jmp
mov
popf
jns
xchg
in
aas
adc
or
sar
test
adc
lds
pop
push
and
aam
push
xlat
mov
repz
adc
sub
ret
loopne
ret
ret
inc
fmul
(bad)
shl
mov
test
sub
push
shr
sub
bts
pusha
bt
mov
xchg
sar
mov
bsr
shrd
sub
cwde
rcr
pop
dec
and
cwde
sete
movsx
mov
pushf
stc
clc
shl
call
lea
jb
clc
cmp
cmc
cmp
jmp
lea
call
not
bswap
add
push
mov
rcl
mov
pusha
cmp
push
mov
sbb
jmp
bt
stc
test
push
lea
je
cmc
or
bt
add
and
seta
rcl
mov
pusha
cmp
cmp
cmp
add
cmp
cmp
mov
shl
pusha
cmc
mov
stc
call
push
cmp
call
push
movzx
call
jmp
jmp
push
lea
jb
xchg
movzx
adc
shr
bts
clc
pusha
imul
btc
lea
sbb
mov
call
cwde
mov
pushf
jmp
lahf
repnz
int
pop
mov
mov
(bad)
mov
dec
sbb
add
xor
sti
call
sub
jl
cs
or
xor
pop
aam
int3
lahf
lock
mov
shl
mov
fcomp
cmp
es
mov
push
jg
mov
mov
sahf
(bad)
nop
jl
mov
and
or
ja
mov
pusha
jmp
push
pushf
add
call
add
inc
js
je
jb
arpl
jae
mov
xor
add
not
mov
bsr
add
movsx
adc
mov
pusha
rcr
neg
shl
mov
sub
pusha
bt
call
pusha
call
pushf
mov
pushf
pushf
pushf
mov
lea
jmp
lahf
mov
cwde
mov
pusha
mov
jmp
cmp
jmp
clc
sub
pusha
movzx
pop
movsx
lea
push
mov
jmp
cmc
test
sub
test
mov
clc
bsr
aas
mov
sete
sub
daa
bt
and
daa
movzx
rol
ror
mov
cmc
shl
test
add
pusha
mov
lea
push
lea
call
pushf
mov
push
lea
jb
btr
or
bsf
movzx
stc
shr
btc
imul
not
clc
bts
shl
lea
and
mov
lea
push
stc
movzx
pusha
shld
xchg
mov
test
btr
mov
not
movzx
cmp
pusha
mov
mov
jmp
bsr
add
shld
pop
shl
cmp
call
adc
call
bt
rol
mov
sub
cmp
test
cmp
cmc
shl
stc
pushf
add
cmp
bt
push
sub
pushf
call
call
push
mov
mov
call
sub
test
jmp
cld
repnz
add
add
add
add
add
add
add
add
add
add
jo
add
add
pop
push
add
add
add
add
add
repnz
add
int3
add
add
stos
add
add
and
call
or
rcr
rol
rcr
mov
test
cmp
stc
shl
cmp
stc
bt
add
setae
mov
cwde
lea
push
pusha
lea
call
cmc
test
pushf
add
mov
cmp
call
adc
push
push
lea
jae
shl
aam
shl
pop
rcr
cmc
mov
btr
pop
and
bsf
aam
cmp
mov
das
cmp
setl
lea
movsx
mov
mov
pushf
lea
jb
movsx
stc
cmp
push
pusha
movsx
push
mov
jmp
pushf
lea
call
push
push
pusha
mov
jmp
jmp
fs
cmps
sbb
(bad)
daa
mov
inc
cmp
(bad)
pop
push
inc
push
mov
loope
pop
bound
cmps
mov
stc
into
stos
cdq
jmp
or
mov
leave
les
xchg
push
iret
sub
(bad)
cld
(bad)
mov
xchg
sub
xor
ror
cdq
iret
pop
das
mov
pop
jo
mov
sub
clc
inc
or
pop
adc
sub
jge
adc
aad
jnp
bound
popa
push
and
les
or
movs
arpl
(bad)
pusha
arpl
out
cmp
arpl
dec
hlt
out
jo
out
inc
push
in
pop
mov
and
fsub
test
imul
retf
sahf
(bad)
cmp
cli
je
test
xchg
jbe
cmp
cld
mov
adc
mov
add
fimul
into
mov
fcomip
shl
xor
fwait
and
in
pop
ds
sbb
fmulp
lahf
xchg
and
retf
cmp
mov
fldenv
mov
shl
adc
popf
fcomp
loopne
mov
xchg
out
enter
jnp
mul
test
or
add
in
mov
mov
jnp
xor
fwait
mov
cld
dec
movs
mov
fldcw
jl
inc
pushf
or
adc
loop
inc
push
add
enter
jae
aaa
cmp
dec
loop
test
bound
out
dec
jne
push
inc
xor
dec
imul
add
mov
push
test
jmp
in
and
pop
movs
fist
or
dec
or
push
sbb
sbb
push
push
lea
pushf
mov
push
lea
jmp
lea
ja
rcr
mov
setnp
pusha
sub
bswap
and
lea
add
rcr
mov
setb
bt
cmc
or
mov
bt
push
cmc
repnz
pushf
call
lea
je
jg
movsx
lea
call
jmp
push
mov
push
lea
jbe
and
shl
shld
ror
sub
shrd
bsr
call
push
lea
ja
pusha
call
jmp
mov
pusha
pop
push
mov
pushf
pushf
pushf
mov
jmp
pushf
mov
movzx
lea
pusha
lea
call
mov
mov
push
mov
jmp
test
pushf
sub
pushf
mov
lea
jne
shl
test
movzx
mov
not
shr
ror
not
mov
jmp
push
lea
jb
aad
movzx
test
push
mov
cmc
bt
cmp
jmp
mov
call
jmp
jmp
push
pop
mov
pushf
push
pushf
push
ret
adc
jmp
lea
lea
pushf
pusha
pusha
lea
call
pusha
mov
pusha
jmp
cmc
test
mov
lea
je
pusha
call
lea
jne
pushf
mov
lea
mov
pusha
lahf
lea
jmp
call
or
ds
pop
mov
ret
push
jo
es
shl
dec
sbb
dec
rcl
fbstp
adc
mov
mov
adc
jno
mov
or
add
and
inc
cwde
(bad)
jo
jmp
inc
(bad)
and
cdq
sbb
ror
inc
cwde
push
fdiv
out
pop
ins
fcom
xchg
test
mov
sub
test
rcr
aaa
push
repnz
mov
bound
mov
inc
adc
ds
adc
push
add
adc
and
add
add
mov
pusha
pushf
lea
call
pusha
mov
call
lea
jb
setg
rol
inc
mov
pusha
sub
pushf
mov
mov
call
dec
cmc
neg
cmc
not
stc
stc
mov
call
test
test
jmp
jmp
lea
call
pusha
adc
jmp
test
mov
jmp
cmp
jne
shl
shl
push
lods
not
ror
xor
rol
sub
mov
pop
ret
jmp
push
movzx
not
lea
push
jmp
pushf
call
lea
call
jmp
add
ja
jo
imul
shl
fs
jb
clc
bt
bt
call
mov
push
call
jmp
jmp
pusha
mov
mov
pusha
pushf
lea
jo
je
bswap
movsx
lea
pushf
jmp
lea
mov
mov
pusha
push
lea
call
jmp
lea
jb
clc
cmp
jmp
push
call
lea
jb
cmc
pushf
cmp
push
lea
jne
bsr
btc
shr
mov
cmc
pusha
add
stc
cmp
push
bt
movzx
lea
clc
rcr
mov
cmc
cmp
jmp
lea
jae
pushf
aam
shl
mov
shld
push
or
mov
mov
shl
lahf
mov
test
shr
cmp
call
and
rcl
data16
jmp
mov
lods
sbb
daa
xchg
fcomp
fistp
in
test
push
pop
inc
cld
fcom
outs
enter
push
dec
sbb
out
pop
inc
jae
retf
push
cmp
std
sub
(bad)
adc
icebp
out
or
ins
mov
div
fstp
push
mov
jge
push
repz
xor
int3
cmc
sahf
push
jae
aad
cld
jecxz
stos
dec
mov
sub
xor
retf
in
std
fdivrp
mov
mov
pop
mov
jecxz
repnz
add
jmp
addr16
sub
mov
loopne
fiadd
pushf
mov
lea
jmp
add
pop
mov
mov
pushf
jmp
clc
lea
imul
sub
add
shr
push
lea
sar
sar
mov
pusha
adc
xchg
btc
sbb
mov
btr
mov
push
push
jmp
pushf
mov
jmp
cmc
clc
not
pushf
cmp
cwde
lea
jbe
lea
movzx
pusha
lea
mov
call
pusha
mov
lea
jp
call
dec
add
bswap
pusha
bsf
xchg
mov
mov
call
cmp
bswap
lea
pusha
setl
movzx
lea
mov
pushf
jmp
mov
pop
mov
int3
lahf
stos
loopne
out
cmp
xor
cmps
js
ret
adc
xor
mov
mov
adc
and
into
mov
mov
aam
dec
fdivr
sbb
inc
xor
sbb
push
inc
xchg
mov
fwait
add
hlt
enter
inc
xchg
out
pop
nop
and
stos
jg
sti
shl
sti
(bad)
push
jns
mov
aam
jge
inc
jecxz
jno
xor
dec
dec
push
push
push
cs
ins
add
add
(bad)
pushf
lea
jb
btc
movzx
add
sar
adc
btr
shr
not
clc
lea
rcr
imul
pushf
shl
lea
add
cmc
shl
test
mov
btc
push
cmc
mov
call
jmp
lea
jne
test
cmp
pushf
mov
rcl
mov
pushf
shld
bt
sub
call
lea
call
jbe
pushf
adc
pushf
lea
jae
cmc
bsr
pop
dec
adc
jp
btc
pop
jmp
add
jmp
mov
mov
push
call
bt
cmp
call
jmp
push
lea
jne
call
mov
or
mov
cmc
mov
call
cmp
mov
call
pushf
jmp
lea
jne
btr
sar
mov
neg
mov
bt
jmp
lea
push
lea
jmp
mov
lea
jae
stc
rcl
xchg
pop
aad
bt
movsx
pop
bsf
lahf
aam
aad
mov
lahf
cwde
bsr
lea
cmp
movzx
cwde
pusha
bswap
mov
push
pusha
call
movzx
jmp
aaa
bts
mov
push
shl
sbb
not
inc
setbe
bt
rcr
mov
shl
add
setge
lahf
cwde
setb
pushf
lea
push
mov
lea
pusha
lea
call
pusha
pushf
mov
push
adc
pushf
push
jmp
pushf
not
lods
bt
bt
pushf
cmc
not
cmc
pushf
bt
stc
neg
jmp
lea
jb
test
cmp
test
cmp
push
call
mov
mov
mov
lea
jb
pushf
inc
bsf
mov
clc
pushf
clc
bt
sub
push
mov
pusha
call
pusha
lahf
lea
pushf
mov
jmp
movzx
jmp
pushf
mov
pushf
push
push
push
ret
pusha
lea
je
clc
test
push
stc
add
cmc
cmp
mov
call
mov
lea
call
jmp
cmc
push
shl
pusha
bt
test
pusha
add
jmp
sub
jmp
pushf
pushf
lea
ja
call
lea
jb
push
push
cmp
pushf
jmp
jmp
push
mov
setns
pop
mov
bswap
mov
lahf
mov
call
lea
push
pushf
mov
mov
call
pushf
stos
push
mov
lea
jmp
call
fs
mov
mov
push
jmp
pop
mov
fldcw
pop
mov
ret
cmps
xchg
mov
je
mov
mov
cmps
cmp
test
inc
int3
pop
fs
jmp
mov
cli
push
pop
imul
jg
(bad)
xor
jl
inc
sub
out
outs
movs
xor
(bad)
xchg
data16
jno
xor
fst
lock
mov
jne
jbe
sub
jmp
cmp
call
push
lock
std
std
mov
or
fwait
sar
or
ret
jge
mov
pop
pop
ss
lods
scas
sbb
jge
leave
in
dec
dec
dec
les
aam
push
mov
js
inc
pop
test
adc
test
cwde
jecxz
xchg
push
mov
xchg
and
mov
fmul
lods
sbb
dec
add
mov
pushf
lea
jmp
bt
not
bt
neg
push
pushf
push
jmp
jmp
lea
je
xadd
mov
bsf
not
mov
xor
movzx
add
and
add
shl
not
mov
clc
call
shrd
add
call
pusha
jmp
btc
dec
shrd
xor
bsr
lea
cmp
mov
pushf
bt
mov
neg
jmp
lahf
pushf
cwde
xchg
pusha
mov
pop
xchg
mov
not
mov
pop
lea
jmp
pushf
cmc
bt
test
push
push
pushf
lea
je
push
mov
add
stc
cmp
jmp
call
push
jmp
jnp
mov
cld
iret
pop
mov
mov
inc
inc
adc
fs
scas
sub
jecxz
lds
inc
pushf
cs
les
in
and
or
inc
lods
and
push
arpl
pop
mov
repz
jle
jmp
mov
adc
aam
adc
xor
(bad)
cmps
sub
ret
repz
mov
pop
ret
xchg
xlat
or
jno
fwait
imul
mov
adc
bound
cmp
not
lea
jge
lods
clc
cmp
jmp
cmp
mov
pushf
lea
ja
cmc
pusha
bt
imul
push
pushf
add
push
push
lea
jmp
mov
mov
stc
jmp
lds
aaa
mov
xchg
jo
inc
jge
mov
repz
int
movs
pop
cs
inc
dec
cs
pushf
add
mov
mov
leave
test
cs
inc
xor
inc
xor
je
lods
stc
enter
sub
xchg
mov
sbb
mov
inc
xchg
shl
push
fild
push
mov
(bad)
daa
out
push
add
je
ss
sub
bt
cmc
pushf
pusha
cmp
pusha
lea
jae
pushf
pusha
pushf
lea
jmp
bswap
imul
not
push
sub
jmp
movzx
jo
lea
lea
mov
not
lods
push
not
bt
cmc
ror
cmp
mov
call
mov
lea
pusha
lea
je
call
mov
pusha
push
lea
jmp
cdq
call
mov
mov
retf
inc
xchg
sbb
stc
dec
jecxz
mov
xor
cld
into
pusha
inc
sub
lock
jbe
(bad)
(bad)
cmps
xchg
leave
push
adc
jge
ds
int3
rcr
push
fidivr
call
dec
mov
inc
pushf
add
daa
cmps
je
mov
adc
je
(bad)
or
leave
pop
mov
and
stos
jns
dec
push
sbb
mov
repnz
cs
idiv
pusha
mov
shl
push
lahf
jmp
add
sub
inc
xor
jl
inc
pop
or
mov
lds
add
(bad)
ss
xchg
jae
sar
push
pop
sub
out
inc
rcl
dec
and
adc
jle
push
fsubr
loopne
or
pop
jge
push
dec
js
arpl
fwait
(bad)
loop
int3
pop
cs
xor
fsubr
sbb
adc
test
xor
sbb
aad
clc
pop
movs
xchg
int
mov
xor
inc
or
and
mov
imul
mov
stc
dec
ins
cmp
or
xchg
lahf
xchg
test
fsub
retf
xchg
push
daa
pop
mov
or
cmp
push
and
loope
lods
and
xor
fist
cwde
repz
inc
fnstenv
rol
jl
fs
test
mov
(bad)
fistp
and
sbb
ins
cmp
fidiv
call
leave
mov
jg
or
dec
mov
jne
arpl
inc
fwait
std
retf
xor
add
clc
add
jp
sub
scas
test
and
inc
xchg
push
loopne
add
or
mov
jnp
jnp
test
es
mov
std
shl
mov
test
sbb
mov
not
in
fsubr
or
adc
ja
jb
mov
lds
adc
cdq
in
mov
xchg
and
sahf
repz
push
pushf
push
jmp
cmp
cmp
pusha
mov
pushf
pushf
lea
jae
push
test
call
stos
pushf
pushf
pushf
lea
jmp
mov
stos
pushf
pushf
push
pushf
lea
jmp
jmp
jmp
jmp
cmp
test
not
call
cmc
cmp
bt
cmp
pusha
lea
jbe
sub
sub
not
jmp
fsubr
sub
and
mov
into
mov
add
or
inc
loope
and
not
stc
in
adc
jle
fisubr
daa
xor
mov
add
inc
xor
jmp
bnd
mov
sub
mul
clc
dec
mov
push
cmps
or
mov
add
mov
mov
mov
mov
lea
jmp
pushf
jmp
enter
adc
add
add
lods
add
add
add
add
add
add
lods
add
add
add
add
add
add
lods
add
add
add
add
rol
add
out
add
add
lods
add
add
add
add
mov
add
add
add
icebp
add
add
add
add
add
adc
add
lea
jae
cwde
movzx
lea
jmp
mov
mov
mov
call
adc
jmp
(bad)
(bad)
stc
pop
ret
xchg
pushf
push
call
dec
sbb
and
mov
dec
cmp
out
xchg
(bad)
imul
cmp
and
gs
inc
pop
mov
xchg
in
xchg
pop
pop
xor
adc
into
pushf
test
push
pop
fsub
mov
fisub
stc
lods
sti
cmp
xchg
dec
sbb
dec
or
pop
cmp
fldl2e
dec
jo
test
aaa
mov
daa
xchg
add
loop
(bad)
es
test
xchg
mov
(bad)
jbe
les
jne
push
fidiv
imul
mov
or
rcr
mov
mov
call
fld
sub
sub
pop
xchg
fldcw
inc
loop
popf
(bad)
xor
xor
sub
cmp
lods
outs
ret
enter
int
cmps
fwait
test
(bad)
(bad)
enter
ja
jo
popa
or
rcr
pop
mov
out
pop
or
adc
fbld
iret
pop
sahf
(bad)
aaa
out
lods
xchg
pushf
pop
fbld
sar
mov
sbb
jg
inc
ret
pop
cmp
sub
(bad)
std
loope
sub
dec
mov
ins
hlt
stc
sbb
loop
and
(bad)
lock
lahf
mov
push
cli
jmp
in
mov
test
and
add
mov
push
and
daa
inc
mov
pop
mov
and
push
(bad)
das
sbb
xchg
cmps
and
mov
fs
shl
pop
mov
add
sub
movs
xchg
in
cmps
cs
inc
push
mov
lods
in
ds
out
sti
cmp
and
inc
pusha
mov
cmp
sub
shr
xchg
mov
jecxz
sbb
sbb
pop
pop
add
repnz
pop
retf
dec
cdq
cmc
out
xchg
pop
lods
push
dec
cdq
aam
cmp
mov
mov
and
cmp
jae
cs
xor
or
pop
pop
sub
sub
xor
and
fs
sbb
cwde
jmp
stos
inc
aaa
movs
xchg
jecxz
rcl
aaa
jno
cmp
repnz
sbb
adc
(bad)
or
sub
cli
mov
push
lahf
ss
pusha
ror
(bad)
retf
jnp
bswap
ss
dec
cdq
(bad)
dec
popf
cmp
push
pusha
push
jle
adc
sub
and
dec
cmp
xlat
ret
mov
shl
and
arpl
ins
mov
lods
jge
push
mov
and
push
daa
pop
cmps
ficom
jbe
add
adc
retf
add
bt
xor
lea
jl
pushf
pushf
mov
rol
mov
sub
sub
js
clc
push
shl
cmc
cmc
push
cmc
add
test
pushf
push
push
sub
pusha
pushf
lea
jne
inc
clc
mov
not
mov
sub
ror
xor
sub
mov
shl
mov
add
call
setne
pusha
mov
movsx
pusha
push
push
mov
pop
pushf
rep
lea
movsx
not
lea
mov
xchg
xchg
setle
bswap
lods
bt
mov
rol
rcr
not
stc
push
ror
shr
clc
shr
shld
xor
pushf
btc
rol
rol
sar
or
bt
stc
sub
not
shld
sar
bsf
xor
jmp
mov
or
mov
movzx
xadd
btc
add
add
bsf
shr
neg
mov
bt
shr
movsx
add
not
lea
movzx
mov
pusha
pushf
call
mov
pushf
push
ret
lea
jnp
cmp
push
mov
lea
jb
clc
adc
rcr
movsx
mov
ror
push
jmp
lea
jae
shld
bsr
rcr
aad
pop
lea
dec
not
add
pop
setg
mov
lahf
cmp
jbe
not
mov
call
lea
jb
ror
cmp
call
push
jmp
pushf
push
sbb
jmp
jmp
jmp
sar
add
lea
shl
rol
mov
clc
push
pushf
mov
movzx
rcr
mov
clc
stc
push
jmp
mov
pushf
pushf
lea
jae
bswap
or
mov
dec
bswap
rcl
mov
btc
mov
test
pusha
xor
cmp
repnz
push
push
lea
jne
and
bswap
mov
cmp
sub
xor
mov
test
bt
clc
sub
stc
clc
cmp
cmc
push
push
cmp
call
bsr
mov
test
shr
bts
shl
mov
rcr
ror
xor
btc
xor
bsf
neg
add
mov
pusha
bswap
and
bts
mov
clc
xor
shl
shld
mov
cmp
sub
mov
shrd
neg
mov
mov
bsr
mov
sbb
call
lea
call
jmp
stc
clc
add
jmp
pop
mov
clc
clc
test
add
stc
mov
mov
push
test
mov
push
lea
jno
pusha
lea
je
cmc
stc
pushf
add
call
push
pushf
call
mov
bt
test
pushf
call
pusha
lea
jb
aaa
cwde
mov
jmp
jmp
jmp
cmp
push
push
lea
jg
jbe
xadd
movsx
sub
rcl
clc
mov
dec
dec
mov
xadd
rol
add
and
rol
shr
call
mov
lea
jb
bt
pusha
xor
pushf
test
jmp
sub
mov
mov
pushf
push
call
mov
stos
pushf
pushf
lea
jmp
stos
mov
push
lea
jmp
cmp
jmp
pusha
push
mov
call
jmp
leave
cdq
sbb
and
movs
clc
addr16
stos
rcl
mov
dec
dec
mov
stos
sub
jo
jg
aam
popf
jecxz
daa
outs
xchg
add
or
sub
lds
mov
sub
jno
mov
sub
adc
push
int3
add
cmp
sbb
push
stos
or
in
pop
mov
mov
inc
or
sbb
daa
mov
dec
add
dec
sbb
stos
nop
gs
and
dec
pop
scas
in
mov
mov
sbb
scas
jns
dec
lea
jne
pusha
ror
test
pop
sub
aad
cwde
shl
mov
shl
shr
dec
add
ror
sub
mov
test
cmc
test
call
test
bt
mov
call
sub
pusha
sub
add
not
movzx
lea
lea
mov
pusha
mov
lea
jmp
jmp
mov
cmp
mov
lea
ja
push
mov
pusha
pusha
lea
jmp
pushf
lea
jae
jmp
mov
shr
add
add
adc
mov
push
test
jmp
inc
bt
clc
cmp
not
clc
cmp
sete
lea
mov
cwde
mov
mov
pusha
lea
ja
call
mov
lea
jb
lea
rol
not
cmp
pushf
lahf
pop
mov
push
push
lea
jb
dec
adc
shld
aam
mov
test
pushf
test
cmc
sub
pusha
pusha
jmp
push
pusha
lea
jne
btr
sub
btr
aas
lea
mov
dec
add
rcl
mov
cmc
clc
pushf
test
pusha
pusha
pushf
lea
je
pushf
pushf
lea
jmp
push
pushf
push
mov
jmp
mov
pushf
pushf
lea
jb
mov
pusha
inc
cmp
pusha
mov
mov
call
add
dec
outs
arpl
inc
jb
gs
jno
add
lea
jne
jmp
add
inc
gs
jb
arpl
fs
jae
add
cmp
pushf
sub
bt
pusha
push
push
pop
pushf
mov
cmp
pushf
lea
ja
shr
clc
add
mov
sub
bswap
add
setne
mov
test
cmp
pushf
mov
push
pushf
repnz
jmp
movsx
xor
btr
mov
inc
xor
mov
btc
setg
shl
bt
mov
or
cmp
call
xadd
xadd
not
stc
setbe
mov
test
clc
movzx
daa
add
call
mov
lea
jae
xchg
movzx
call
mov
mov
jmp
lea
call
pusha
call
pusha
lea
jne
rcl
aaa
neg
sub
bt
das
call
stc
cmp
push
pushf
pushf
lea
jb
clc
cmp
push
pusha
lea
jno
push
lea
jae
sar
xor
sbb
mov
bt
test
mov
xor
sub
mov
cmp
sub
cmp
test
push
pushf
repnz
push
jmp
push
lea
jb
pusha
pusha
bt
cmp
jmp
imul
jmp
clc
cmp
pushf
push
lea
ja
push
stc
pusha
mov
imul
clc
bt
push
cmp
add
push
pushf
pushf
push
lea
jmp
mov
sti
rcr
mov
dec
mov
xchg
push
repz
pop
xor
stos
gs
pop
xor
add
jb
mov
call
loop
adc
and
fldcw
ret
adc
fmul
clc
enter
cmp
jg
and
push
sub
inc
mov
jle
xchg
bound
cmp
pop
pop
jb
fs
movs
jbe
jb
mov
adc
push
int3
pop
mov
into
hlt
lahf
outs
and
lea
popa
xor
mov
or
movs
xchg
jmp
cwde
dec
aaa
or
cwde
in
dec
test
shl
cdq
jmp
out
pop
stc
call
mov
std
pop
pop
mov
inc
adc
push
loopne
ds
sbb
scas
fcmovnbe
lds
jmp
mov
push
test
pop
xchg
fs
and
loope
inc
(bad)
stos
xchg
(bad)
jle
cmp
(bad)
bound
push
icebp
cdq
xor
push
cli
add
fild
das
(bad)
into
fs
sub
shl
pop
shr
push
inc
pop
sbb
cs
jmp
sub
outs
ret
scas
xor
lds
pop
fadd
jl
enter
cmp
pushf
pushf
inc
mov
push
clc
cmc
not
push
call
mov
jmp
push
adc
pushf
push
push
jmp
mov
jmp
cmc
neg
jmp
add
add
repnz
add
add
add
add
add
add
add
add
add
add
jo
add
add
pop
push
add
add
add
add
add
repnz
add
int3
add
add
stos
add
add
aad
mov
(bad)
lods
inc
pop
stc
test
je
pop
nop
sub
pop
pop
mov
js
bound
adc
movs
add
mov
addr16
xchg
outs
outs
cld
and
or
(bad)
out
xchg
stos
ins
sbb
push
fisttp
js
clc
mov
pop
inc
ret
add
sub
push
enter
dec
inc
pop
sbb
inc
pop
dec
sbb
scas
inc
add
out
mov
dec
(bad)
mov
jno
or
sbb
jns
push
inc
ret
iret
sub
mov
xchg
mov
adc
cmp
clc
mov
pusha
push
ret
sahf
lahf
enter
fisttp
push
std
mov
push
cmp
dec
imul
mov
int
inc
lods
mov
cmp
inc
jp
jp
mov
cmp
xor
push
fistp
popf
sbb
rcr
pop
jge
xlat
adc
outs
movs
movhps
fst
adc
push
push
lods
jae
data16
xor
jle
and
or
jecxz
sub
mov
push
pop
out
fistp
pop
loope
repz
add
fst
jmp
cmp
out
das
push
dec
jg
shl
and
or
out
dec
sbb
shl
cs
sub
out
pop
dec
ret
push
xor
jp
and
lea
sub
clc
cmp
mov
into
cmp
push
arpl
inc
leave
push
popa
ja
inc
jecxz
cmps
adc
xchg
inc
inc
bound
mov
shr
add
cwde
sub
out
push
inc
push
mov
mov
movs
sbb
rcl
repz
jle
xor
and
dec
mov
mov
sub
ror
imul
adc
adc
iret
clc
(bad)
clc
fbstp
sub
push
imul
adc
sti
movs
push
jmp
pop
adc
cmps
rol
and
test
sbb
add
jne
dec
cmp
push
stos
sub
pusha
(bad)
xor
lahf
and
xchg
test
data16
cmps
fsub
sbb
mov
jp
ror
rcr
push
into
jns
sub
dec
ret
cmps
xchg
daa
push
js
cmp
or
cmp
lods
sti
(bad)
int3
call
adc
lock
xchg
fcom
cs
xchg
dec
mov
mul
jl
ret
mov
mov
(bad)
loopne
(bad)
push
xchg
shl
push
push
and
pop
ins
xchg
pop
ret
sbb
(bad)
or
ds
push
test
mov
pminub
sbb
outs
inc
out
cmp
xor
jo
mov
jmp
xchg
jns
arpl
or
mov
and
add
jbe
pop
pushf
jb
add
pop
out
(bad)
dec
fisub
pusha
jg
aad
jmp
pop
test
aaa
fcomp
addr16
dec
jae
arpl
jae
ret
fnstenv
xchg
popf
test
in
fs
daa
jmp
jb
push
sub
test
xchg
dec
popf
(bad)
mov
ins
out
xor
pop
mov
repz
in
jle
retf
xchg
aad
ret
loop
icebp
cwde
shl
add
out
pop
ss
dec
pop
jns
jno
jmp
jo
jno
dec
arpl
pop
dec
pop
push
ds
jmp
xor
pushf
sti
push
and
popa
mov
clc
call
sub
jne
out
pop
jmp
cmp
inc
mov
lea
mov
sbb
and
test
js
xor
pop
or
hlt
shl
add
sbb
add
stos
mov
jg
push
mov
sub
shr
cmp
jecxz
jb
mov
(bad)
out
xor
xor
enter
sbb
add
stc
or
fs
lods
cwde
or
mov
mov
sbb
je
mov
or
scas
scas
js
ss
(bad)
in
test
push
daa
sar
into
or
std
mov
dec
shl
xchg
sar
(bad)
sar
sub
dec
adc
inc
js
js
dec
out
mov
cld
push
in
pop
cdq
xor
lea
adc
hlt
(bad)
adc
ret
mov
lods
retf
repz
retf
out
test
test
adc
xor
ror
adc
jp
sbb
sub
rol
sub
mov
test
ficom
pushf
dec
jle
ss
adc
popa
push
dec
test
arpl
ror
mov
hlt
mov
sub
in
jge
jg
pushf
imul
in
jne
imul
and
dec
loopne
xor
movs
xor
adc
jle
cmc
(bad)
aam
inc
repz
lods
cs
add
sub
or
retf
ja
cmc
and
jmp
loop
mov
add
cwde
ins
inc
nop
pop
mov
mov
and
sbb
push
xchg
cdq
add
fadd
xor
ror
jmp
push
xlat
mov
fnstenv
sub
sbb
mov
xor
xchg
sbb
mov
push
bound
sub
ret
add
add
in
(bad)
mov
inc
cmp
(bad)
ins
int3
push
xor
adc
xor
mov
imul
adc
adc
mov
dec
call
out
mov
jnp
icebp
dec
pop
lods
mov
retf
xor
(bad)
jle
and
jle
mov
nop
push
(bad)
sub
mov
xchg
xchg
loop
test
xor
add
pop
cmps
mov
jge
and
sbb
out
fistp
imul
xor
out
retf
mov
popf
push
mov
pop
scas
cmp
(bad)
mov
mov
(bad)
ror
out
in
mov
mov
mov
mov
xor
jmp
jmp
inc
pushf
scas
mov
or
fisttp
push
xor
add
sbb
mov
dec
repz
jmp
jo
pop
jmp
retf
out
xor
xlat
dec
test
inc
in
les
out
adc
fnstcw
and
test
js
fs
dec
(bad)
retf
jle
mov
push
or
out
rcl
imul
fidivr
cmp
mov
dec
jmp
cli
fnsave
dec
xchg
xor
push
ins
xchg
es
adc
add
sbb
ret
cmp
sbb
in
mov
ficomp
test
jecxz
iret
pop
in
shr
adc
nop
psubusb
cmp
std
out
add
or
cmp
mov
sahf
cmp
fxam
movs
push
jmp
mov
jae
xchg
mov
cld
pop
in
pop
pop
pop
dec
std
add
jmp
pop
dec
push
imul
outs
mov
(bad)
mov
xchg
jno
push
scas
or
out
test
xchg
test
stos
aad
shl
rep
inc
mov
mov
inc
sub
popa
push
int3
and
lea
sbb
adc
jne
cmp
cmp
outs
mov
cmp
xor
and
out
jbe
sub
test
mov
inc
(bad)
test
test
mov
dec
cmp
outs
add
pop
adc
int
mov
or
push
ret
ins
mov
inc
adc
cmps
sbb
out
std
out
pop
ins
jae
push
cwde
popa
dec
fnsave
xor
inc
sub
aam
lahf
neg
cmp
lods
bnd
xor
(bad)
push
aam
fisttp
leave
mov
and
or
pusha
cmp
xlat
jb
repz
mov
and
mov
push
mov
pop
out
stos
jnp
dec
cdq
je
repnz
mov
pop
xor
rcl
mov
jo
mov
lods
jne
test
sub
push
stos
mov
in
mov
sub
and
pop
sahf
jmp
(bad)
adc
mov
aaa
fs
inc
cmps
ds
nop
push
aas
pop
xchg
jae
test
mov
loopne
push
sub
xchg
enter
xchg
jmp
jo
push
out
not
(bad)
cld
imul
mov
inc
fs
in
dec
clc
ds
scas
js
pop
mov
retf
pusha
xlat
es
mov
iret
sub
jp
push
aam
aad
sbb
sub
mov
xor
sub
cmp
aad
mov
(bad)
dec
les
clc
mov
je
add
rcr
gs
bound
jbe
ss
(bad)
sbb
jo
stos
js
outs
cwde
xor
rdtsc
(bad)
stos
test
rcl
leave
(bad)
shl
dec
mov
bound
inc
sbb
and
or
mov
test
jmp
push
iret
test
call
jbe
into
jno
sbb
push
fsubr
sub
movs
xchg
push
mov
mov
aaa
xlat
test
imul
add
ret
or
mov
adc
fstp
jo
aas
push
retf
sbb
std
retf
outs
xchg
mov
stos
jg
push
inc
sub
xchg
jno
pop
adc
lahf
dec
int
lods
push
or
jnp
xchg
push
aam
xchg
push
cdq
ds
dec
pop
inc
push
dec
inc
dec
jmp
dec
ror
or
popf
jbe
sub
enter
pop
loop
test
int3
pop
or
movs
xchg
repnz
retf
jns
mov
out
in
dec
mov
push
(bad)
outs
aaa
inc
dec
cmp
cmc
mov
arpl
je
out
sub
jbe
jg
push
mov
loope
push
and
hlt
sub
xor
pop
imul
adc
outs
cmps
movnti
test
movs
(bad)
jne
aaa
push
xchg
sub
jge
xchg
sbb
sbb
fadd
js
or
lock
pop
ret
push
adc
xor
ja
pop
inc
cld
call
inc
fucom
fnstcw
jbe
ja
adc
mov
push
push
xor
xchg
jmp
sbb
add
cld
inc
shl
push
sub
fist
cmp
jl
or
ror
inc
or
ja
jecxz
xlat
mov
mov
not
dec
and
add
dec
push
pop
js
bound
pop
or
jnp
and
data16
stos
lods
push
xor
adc
xor
(bad)
call
ds
push
xchg
xchg
hlt
in
adc
and
not
push
rcl
jecxz
mov
enter
jbe
add
xchg
hlt
mov
mov
cmp
ret
pop
jb
bound
xchg
imul
mov
test
popf
call
xor
mov
lods
mov
ficom
movs
mov
in
cli
mov
fmul
(bad)
push
cli
mov
stos
or
mov
cmp
mov
gs
adc
data16
int
pop
inc
cli
xor
push
lmsw
pop
adc
mov
push
pop
inc
(bad)
inc
push
dec
iret
jecxz
cmp
das
dec
fadd
cmps
(bad)
jno
pop
test
js
sub
xchg
in
pop
cmp
mov
icebp
push
cmp
cwde
retf
mov
pop
out
mov
aad
lahf
call
int
fs
enter
repnz
sbb
stc
test
in
pushf
or
mov
rol
ret
jne
fbld
sbb
or
dec
es
ins
jae
and
idiv
sbb
aaa
(bad)
cmp
sbb
pop
inc
cmp
outs
test
mov
mov
jo
or
jmp
mov
repnz
cmc
sbb
daa
mov
outs
xacquire
pop
mov
adc
xchg
rcr
xchg
mov
mov
aam
mov
add
push
scas
shl
dec
xchg
mov
pop
shl
inc
mov
dec
adc
mov
mov
(bad)
int3
mov
xor
mov
jg
retf
cli
mov
scas
or
fsub
xor
mov
sub
push
vpmacswd
jae
pop
push
xchg
(bad)
pop
movs
std
das
xchg
aas
shr
inc
jns
sti
cld
ficom
int3
cli
gs
mov
cli
daa
test
mov
xor
adc
add
adc
dec
dec
std
loopne
mov
xor
ret
int
pop
jp
or
sbb
rol
lahf
stc
xchg
into
aad
aad
mov
push
scas
stc
arpl
pop
fisubr
cmp
xor
and
push
push
mov
pushf
cld
scas
(bad)
out
loopne
jecxz
xchg
stc
mov
mov
ret
xlat
dec
leave
retf
pop
js
add
and
mov
add
add
push
push
and
adc
add
ins
xchg
scas
shl
int3
xchg
add
jg
cld
sbb
cmp
or
out
xor
out
and
cdq
adc
inc
retf
fs
inc
and
leave
aam
jmp
jno
xor
inc
xor
jo
pop
xchg
pop
and
arpl
aam
pusha
add
add
in
cld
aas
or
scas
fidiv
mov
fucomip
fadd
mov
mov
and
inc
ins
xor
aaa
sbb
rcr
mov
push
push
mov
mov
sub
imul
outs
mov
fcomp
mov
loopne
pop
inc
jmp
sub
pop
inc
stc
div
ds
(bad)
jmp
lods
sbb
lahf
push
push
adc
stc
imul
cld
and
call
and
cmp
sahf
sbb
lods
arpl
sar
xchg
inc
mov
add
add
inc
push
xor
cs
ins
add
xor
fs
je
movzx
pusha
lea
mov
jmp
cmp
sub
cmc
repnz
pusha
lea
jne
cmc
add
stc
adc
mov
xor
inc
add
and
sub
neg
jmp
setb
lods
call
xor
pusha
mov
test
call
call
pusha
pusha
lea
jb
bt
cmp
call
mov
push
lea
jne
bt
mov
call
bsr
mov
pusha
jmp
lea
movzx
rcr
mov
add
test
pusha
xchg
push
xchg
mov
and
lea
sbb
cmc
mov
mov
bt
jmp
jmp
lea
jb
mov
sets
movsx
cmp
mov
lea
jmp
jmp
lea
call
pusha
call
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
cmp
(bad)
inc
add
jmp
mov
rcl
mov
bsr
rcr
test
ror
add
sbb
pushf
shr
cmc
test
rol
xadd
mov
movzx
cmp
jmp
jmp
fsubr
mov
pop
std
into
enter
jne
cmp
and
pop
shl
xchg
jecxz
and
fist
pop
dec
inc
push
jle
ret
xlat
pop
scas
repz
stos
adc
add
adc
(bad)
fmul
cwde
mov
fidiv
push
and
(bad)
jo
add
inc
xchg
pushfw
das
cmps
xchg
adc
mov
pop
push
addr16
xchg
mov
sbb
fcmovnbe
lds
dec
xchg
jb
adc
jns
pop
sub
xor
add
jb
or
cs
inc
cmps
clc
fistp
shl
aaa
fdivr
(bad)
fnsave
mov
dec
ins
call
out
pop
dec
movs
lock
stc
pop
dec
sbb
cmp
jno
sub
dec
jmpw
cmp
mov
inc
dec
ds
in
jo
cmp
sbb
adc
int3
push
pop
stos
xchg
retf
mov
int3
sbb
in
inc
jae
mov
push
inc
cdq
add
imul
retf
(bad)
jmp
aas
pop
inc
shrd
add
lea
pop
and
bswap
mov
movzx
aas
sar
das
cmp
push
pop
mov
pushf
pushf
mov
lea
jb
shld
cmp
lahf
call
movzx
cwde
mov
pop
lea
jmp
adc
mov
call
push
pop
push
pushf
push
ret
add
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
sbb
lods
repz
mov
bound
mov
xchg
mov
mov
mov
stc
dec
dec
xchg
test
loop
mov
int3
cld
dec
mov
jnp
pop
mov
or
sub
loopne
inc
test
movs
pop
lock
xchg
jne
adc
and
enter
neg
jmp
lahf
sub
mov
push
cmps
mov
cld
pushf
(bad)
mov
dec
or
dec
and
pop
mov
call
pop
dec
and
in
xchg
push
cmps
leave
(bad)
repz
mov
fldcw
nop
loope
sub
xchg
ret
jbe
aas
cmp
sbb
outs
dec
outs
fucomi
fisubr
sbb
enter
dec
sbb
outs
push
movs
movs
enter
xchg
dec
out
sbb
sbb
jne
std
dec
mov
dec
call
xchg
call
push
movs
idiv
int
jo
push
jno
pop
imul
and
movs
movs
xchg
push
in
adc
fldcw
sbb
jo
or
loopne
add
cmp
ds
(bad)
sbb
or
enter
call
js
pop
mov
ret
lock
xor
xor
sbb
test
inc
(bad)
or
fwait
xchg
test
in
repz
outs
fstp
mov
int
loopne
xchg
out
xor
imul
mov
jp
xor
xchg
pop
sub
cmps
push
push
rep
cdq
imul
lahf
xchg
popa
cs
mov
out
test
shr
mov
nop
and
xchg
fdivr
mov
icebp
mov
adc
lods
inc
fucomi
sbb
rcl
fxch
call
xor
sbb
out
pop
push
push
cmp
or
out
ret
(bad)
mov
out
push
inc
das
and
mov
push
add
loopne
jb
cmps
cmp
inc
adc
mov
dec
mov
movs
xor
xchg
push
xchg
lea
jb
sub
mov
rol
dec
mov
call
pushf
lea
jb
cmp
jmp
jg
idiv
es
stc
dec
xchg
out
cdq
push
and
popf
sbb
(bad)
cmps
dec
pop
int
xor
jecxz
(bad)
jmp
nop
test
lock
sub
ins
cmp
add
arpl
xor
ins
mov
xor
jp
jecxz
rcl
ret
jne
mov
jne
cmp
stos
popf
in
push
xor
xchg
xchg
sbb
jmp
cmc
lds
push
mov
out
inc
xchg
push
out
loope
mov
push
mov
cmps
cmc
movs
add
fstp
sbb
(bad)
jg
int
(bad)
out
shl
mov
sbb
fldcw
movs
repz
fsubr
js
mov
ds
and
je
xor
cmc
(bad)
sahf
mov
adc
dec
retf
out
stos
jnp
dec
dec
lahf
sbb
aas
outs
cmp
std
mov
hlt
data16
cli
jns
lds
in
stos
pop
loope
sub
je
or
dec
outs
jmp
les
iret
hlt
or
enter
(bad)
mov
in
aas
jl
retf
cdq
cmp
jle
pusha
jl
(bad)
xchg
or
call
mov
daa
sbb
loope
dec
pop
in
jb
push
pop
int3
fwait
popa
fld
aas
xchg
outs
inc
and
xlat
dec
sbb
cmp
in
mov
mov
push
test
imul
inc
cwde
xchg
(bad)
ss
test
adc
xor
pusha
push
mov
jmp
lea
call
push
call
add
call
cmp
pushf
test
pusha
pushf
jmp
not
xchg
mov
neg
add
bts
bswap
setl
clc
mov
bsf
movsx
test
mov
call
jl
hlt
mov
inc
xchg
push
repz
out
mov
and
repnz
mov
fxch
call
cmps
xchg
cdq
jecxz
shl
mov
ror
cli
enter
fnsave
xchg
mov
mov
or
inc
mov
mov
mov
je
test
xchg
inc
int3
mov
push
xchg
jmp
mov
scas
adc
cld
imul
(bad)
retf
(bad)
cmp
ror
les
dec
mov
sbb
adc
repz
mov
pusha
push
lods
shr
push
cld
jae
xor
inc
pop
call
loope
mov
ds
int3
add
icebp
lds
shl
inc
xchg
jl
push
inc
xor
push
jae
das
stos
jmp
pushf
push
mov
push
mov
jmp
push
lea
call
push
lea
call
jmp
pop
stos
mov
mov
cmp
push
mov
out
mov
ret
out
cmps
push
mov
mov
call
push
cmps
daa
test
mov
xchg
repnz
mov
push
cmp
jmp
outs
cmp
push
push
adc
add
loop
test
retf
jae
shld
rcl
mov
sar
xor
mov
shr
xor
mov
bt
xor
pusha
repnz
pushf
mov
lea
jne
not
mov
jb
sub
add
clc
mov
test
stc
sub
jmp
lea
je
pushf
lea
jmp
outs
ins
xor
cs
ins
add
pop
mov
in
cmp
je
ds
mov
fld
test
dec
or
(bad)
mov
fcomp
adc
push
mov
hlt
mov
and
mov
ja
push
cmp
cdq
ins
je
cs
dec
ss
add
out
mov
push
shl
mov
test
mov
inc
xchg
call
rcl
pushf
ss
std
out
mov
sahf
pushf
rcl
sbb
jle
xor
imul
mov
scas
push
inc
and
aas
aam
mov
pushf
mov
outs
pop
in
mov
fwait
lea
das
iret
sub
(bad)
jl
sub
loop
mov
push
or
mov
jl
aaa
push
sti
into
lahf
mov
push
cmps
xor
sbb
jno
dec
jp
xor
js
popf
pop
sub
ja
out
adc
cmp
jle
in
cdq
xor
lds
outs
and
loop
mov
inc
lea
lock
mov
cmps
jmp
pop
jae
fisubr
dec
rcr
les
leave
arpl
sbb
xor
sub
mov
int
sbb
sub
or
jmp
cmp
pushf
jo
xchg
mov
mov
adc
pop
mov
sub
aas
adc
mov
or
xor
(bad)
or
mov
mov
stos
ins
pop
xor
inc
push
cmps
push
(bad)
stos
call
rol
test
fild
rol
fwait
ins
aas
daa
fsub
mov
mov
jae
pop
rol
adc
sbb
fld
pop
adc
loopne
scas
call
test
or
repz
sbb
and
inc
cli
in
mov
fisubr
mov
div
sub
mov
xchg
out
adc
add
sahf
pop
fld
jae
pop
dec
sbb
mov
cmps
add
mov
(bad)
xchg
mov
lods
shl
xchg
daa
pop
adc
pop
(bad)
or
or
mov
cs
int3
js
aas
mov
dec
retf
lahf
mov
xchg
cmp
add
and
clc
retf
cld
sbb
fucomp
(bad)
jbe
mov
cs
rcl
mov
lds
mov
stos
mov
pop
sub
add
inc
pop
nop
dec
sahf
(bad)
cli
cmp
sub
ins
stos
jns
fwait
adc
mov
xor
enter
inc
adc
xchg
cdq
(bad)
sub
pop
push
and
outs
inc
and
pushf
outs
inc
call
in
sub
push
rcr
xchg
(bad)
lds
es
xchg
xchg
jmp
push
lea
ja
jmp
mov
push
lea
jb
shrd
rcr
daa
cmp
movsx
call
call
call
pusha
bswap
mov
mov
bswap
cwde
mov
call
call
lea
mov
and
shr
shr
neg
mov
test
rcr
pushf
mov
not
sub
movsx
mov
lea
cwde
rol
aad
aaa
mov
aaa
cmp
sub
lahf
cmc
shr
ror
and
stc
mov
cmp
test
push
stc
shl
push
clc
pusha
add
call
push
mov
mov
mov
push
lea
jmp
xor
add
mov
std
int3
mov
fwait
cwde
in
ja
out
ds
add
retf
cmp
push
mov
pop
mov
pop
xchg
dec
lahf
pop
jb
into
out
cmp
adc
es
and
daa
in
ds
dec
cdq
jmp
(bad)
shr
es
das
fcmovbe
gs
lods
lahf
hlt
inc
xor
mov
push
sbb
int
adc
push
pop
sub
mov
xchg
addr16
cli
dec
(bad)
cli
mov
(bad)
fsubr
push
sbb
mov
icebp
inc
adc
test
mov
pcmpeqd
and
xchg
stos
adc
adc
fsin
(bad)
call
fs
je
cmp
pusha
sub
jmp
cmps
sti
idiv
test
pop
lods
pop
jmp
fisubr
test
pop
xor
les
xchg
xchg
mov
mov
jecxz
cmp
sbb
jmp
icebp
push
mov
xor
or
push
inc
shl
sbb
push
(bad)
les
push
and
into
sahf
push
and
bound
fs
shl
push
jl
mov
not
stc
dec
iret
push
cmp
mov
push
lea
jb
das
aas
mov
rcr
sar
clc
clc
not
cmp
neg
mov
cwde
rol
mov
add
not
movsx
xchg
not
setb
cwde
setno
cwde
lea
push
mov
push
pusha
lea
call
call
call
not
clc
neg
jmp
lods
jmp
shl
push
lea
mov
cmc
sub
test
stc
clc
push
pop
call
add
inc
gs
outs
fs
gs
imul
add
xor
lea
jmp
push
call
add
add
add
and
bound
dec
jbe
sub
imul
rol
adc
adc
inc
lds
fs
movs
stos
rol
dec
popf
rol
cli
scas
adc
sbb
(bad)
xchg
xchg
test
dec
xchg
adc
push
jge
dec
enter
add
out
loopne
call
dec
adc
mov
gs
movs
aad
ja
cwde
js
jbe
retf
fs
dec
xlat
mov
data16
dec
cmp
mov
mov
leave
mov
xchg
push
and
jge
inc
sub
or
leave
push
or
dec
sbb
or
mov
sbb
xchg
and
jb
sbb
lods
jl
push
test
inc
jns
in
xor
jg
retf
add
call
push
sub
xor
push
movs
paddusw
xchg
lea
mov
push
xor
daa
cmp
pop
pop
dec
pushf
mov
sahf
aam
test
push
xchg
call
dec
and
pmulhuw
mov
cmp
and
jmp
cmps
push
adc
or
push
sub
scas
ins
mov
fist
test
into
js
repz
test
sti
jmp
sbb
and
mov
pop
jg
mov
inc
or
pop
mov
into
fnsave
mov
jo
mov
fwait
xor
in
shl
fist
ds
repz
sbb
lock
lea
push
mov
or
mov
push
cmp
lods
pushf
outs
and
daa
mov
mov
(bad)
xchg
retf
lea
xchg
test
pop
jecxz
in
(bad)
out
ret
outs
inc
fld
mov
mov
fwait
jo
fist
lods
jle
push
push
scas
pop
adc
stos
jmp
retf
xor
jnp
mov
imul
jnp
cmp
icebp
jmp
push
xchg
gs
sahf
pop
scas
shr
mov
out
jae
add
mov
add
test
out
test
xor
hlt
inc
cmp
mov
cwde
mov
cmp
pop
xchg
mov
pusha
lods
bt
clc
not
call
mov
push
cwde
lahf
movzx
mov
call
lea
jne
sub
stc
mov
cmp
bt
test
add
pushf
jmp
movzx
mov
call
pushf
lea
jb
pushf
xor
test
sub
jno
test
push
pusha
not
call
push
push
lea
call
shl
xor
jmp
addr16
mov
fbstp
dec
mov
jg
dec
lahf
(bad)
daa
cmps
fsubr
in
push
adc
ret
adc
xchg
out
repz
fcmovne
cdq
test
movs
and
call
push
jg
(bad)
scas
pusha
in
sub
sbb
pop
das
das
add
mov
sahf
cmp
lea
mov
dec
(bad)
lock
je
sti
cli
out
sbb
mov
adc
mov
xor
adc
scas
test
pop
stos
mov
nop
jp
ret
mov
inc
sbb
and
add
imul
and
out
mov
dec
and
mov
dec
pushf
(bad)
dec
das
and
into
pusha
xchg
retf
jne
mov
outs
shrd
pushf
mov
test
mov
cmp
mov
call
sub
clc
call
push
jge
push
pushf
mov
mov
push
ret
push
lea
jb
adc
ror
mov
stc
cmp
clc
push
sub
jmp
mov
jmp
lea
jb
shl
rcr
mov
push
cmp
sub
push
pushf
call
test
test
call
bt
pusha
repnz
pushf
jmp
pusha
push
clc
test
shl
pusha
mov
stc
pushf
add
call
pushf
push
and
ret
xor
mov
jg
dec
adc
repnz
mov
imul
ficomp
pop
sbb
and
xchg
xchg
not
push
cmp
dec
loope
repz
xor
and
jbe
in
xchg
adc
jae
ror
daa
sub
inc
aaa
and
inc
mov
icebp
push
icebp
jl
mov
add
mov
adc
mov
popf
jnp
sbb
les
sub
arpl
sbb
retf
movs
retf
jl
mov
call
or
mov
mov
and
outs
jno
outs
out
inc
sbb
test
push
mov
stc
jae
or
test
hlt
(bad)
outs
push
and
fwait
sub
scas
repnz
jns
fild
bound
cld
and
sub
mov
push
mov
xchg
jmp
cmp
loop
xor
pop
add
adc
fnsave
xchg
repnz
mov
loopne
movs
sar
mul
imul
jmp
cmps
inc
mov
adc
and
jge
(bad)
les
push
mov
cli
fwait
scas
std
pop
dec
imul
sbb
test
add
popa
fisub
xchg
pop
adc
test
xor
mov
repz
movs
jne
fisttp
int3
ror
jg
pop
in
xor
fdivr
imul
sbb
fist
ror
outs
das
sub
ror
cmp
xchg
test
iret
fwait
pop
jnp
mov
test
iret
in
sub
shl
adc
movs
mov
daa
in
pop
jle
inc
cmp
mov
push
daa
lods
out
mov
in
add
xor
ins
cli
je
lea
movs
pop
in
pop
dec
xchg
and
call
fcom
pop
push
call
dec
sbb
jmp
(bad)
fcomp
or
(bad)
pop
xchg
ror
(bad)
and
and
cmp
ss
sbb
push
aas
pop
scas
jno
sub
rol
mov
mov
je
pop
popf
adc
mov
les
mov
mov
push
xchg
scas
sahf
int
jg
sub
add
mov
loop
jle
push
xor
out
retf
add
xor
scas
(bad)
mov
(bad)
or
cmp
into
xor
push
xlat
addr16
lock
adc
pop
jg
and
mov
xchg
mov
sub
pushf
pop
cmp
cmp
hlt
inc
add
(bad)
div
jae
add
jo
psrld
ret
loopne
push
cmp
adc
xor
(bad)
jnp
sbb
ror
in
pop
jne
nop
popa
xor
movs
cwde
repnz
push
dec
xchg
add
or
es
leave
std
add
pop
sti
pushf
inc
pop
sbb
out
fdivrp
or
(bad)
aam
jecxz
cdq
mov
in
pop
add
fcmovb
dec
shr
jecxz
jae
cdq
xor
xchg
or
ds
(bad)
mov
sub
fild
inc
shr
jns
fwait
xchg
push
inc
xchg
call
sub
das
dec
shl
or
cli
into
pop
les
inc
out
mov
xor
xor
jg
xor
in
ficom
dec
push
or
es
jp
mov
out
loopne
jne
inc
fstp
jp
mov
xor
mov
adc
out
int3
ror
(bad)
and
sbb
cmp
scas
push
and
ror
bnd
push
(bad)
lods
dec
mov
std
call
sub
aaa
jmp
imul
xchg
lds
stos
(bad)
in
dec
mov
push
aas
test
push
ss
out
mov
inc
outs
push
jp
mov
(bad)
sbb
test
inc
dec
sub
in
cmp
pop
and
dec
add
pop
dec
mov
push
into
loope
sti
imul
jbe
fistp
(bad)
das
call
(bad)
into
retf
dec
fdivrp
out
mov
out
add
stc
add
loop
out
push
(bad)
es
ds
cmc
sub
mov
adc
pop
fsubr
out
cmp
adc
lea
iret
data16
fld
pushf
pop
aaa
fwait
shl
inc
fisubr
ret
call
xor
fwait
outs
xchg
cs
cld
inc
call
inc
inc
repnz
(bad)
cmps
adc
mov
sahf
cmc
mov
mov
jp
call
push
jae
hlt
mov
jmp
aad
or
das
mov
push
mov
add
mov
push
push
or
dec
cmp
pop
pop
arpl
cmc
pop
jl
and
(bad)
data16
stc
sar
sbb
inc
jne
(bad)
lods
mov
hlt
lods
or
add
fnstenv
jg
test
and
xor
bound
imul
jp
and
test
push
inc
sub
xchg
jg
fisub
mov
stos
jno
inc
adc
add
fdiv
loope
pop
jb
add
mov
xchg
mov
js
inc
test
sbb
and
mov
movs
sbb
shl
ret
sub
dec
ins
add
sub
xchg
and
mov
adc
pop
fist
mov
or
dec
and
jae
scas
sbb
movs
sub
rol
imul
lahf
jg
out
aad
or
(bad)
jnp
xchg
(bad)
push
stos
xchg
ja
mov
jbe
mov
jmp
fimul
sbb
mov
fcmovu
rol
(bad)
test
dec
and
lds
fdivr
enter
push
cmp
inc
fadd
les
(bad)
xlat
cdq
stc
xor
(bad)
push
in
sbb
mov
(bad)
fdivr
imul
sub
in
jb
into
jmp
imul
icebp
clc
daa
adc
dec
iret
push
lds
fs
cmps
not
xor
xchg
stos
enter
retf
mov
jge
and
mov
dec
jp
(bad)
ins
jae
jb
dec
stc
bound
outs
mov
pop
and
lahf
nop
mov
das
mov
adc
adc
mov
add
sub
popf
add
ret
lahf
jne
stos
mov
pop
aas
dec
jbe
ret
push
int
jmp
dec
inc
lds
(bad)
mov
or
pop
aam
cmp
std
mov
jb
movs
aad
fiadd
mov
popf
hlt
icebp
in
aad
mov
or
gs
mov
in
ss
lds
lds
mov
push
inc
cmp
inc
cmps
jle
xor
lahf
jb
outs
adc
test
ror
lds
adc
outs
fmul
je
or
pop
loop
gs
inc
pop
mov
inc
push
(bad)
jnp
and
and
inc
sti
xor
lea
xchg
jmp
xor
mov
movs
pop
jl
fwait
stc
pop
aaa
xchg
xor
cmps
jmp
std
push
aas
test
sbb
int
mov
jle
adc
sub
fbld
dec
jnp
mov
jb
test
or
(bad)
xlat
in
add
test
xor
xor
cmps
(bad)
jmp
xchg
lods
pop
xor
pop
out
(bad)
add
int3
test
xchg
jmp
xchg
ret
cmp
leave
call
sbb
fcom
xor
pop
lods
mov
fisubr
sar
pop
push
jg
xchg
ficom
dec
sub
jg
call
xor
cmp
rcl
lds
xchg
adc
cld
sahf
mov
ins
jns
fsub
movs
lods
or
and
clc
loop
push
xor
ins
mov
sar
ins
push
lea
dec
dec
mov
outs
aaa
clc
dec
fwait
jp
movs
mul
mov
(bad)
daa
rcl
out
cli
cmp
mov
retf
test
call
idiv
adc
and
rcr
cmp
fstp
xchg
sbb
push
xchg
push
repz
adc
xchg
dec
mov
movs
pop
cmp
mov
push
inc
aas
out
repz
sub
outs
fcmove
jecxz
test
ins
add
mov
add
mov
in
sub
jmp
xchg
mov
jl
xchg
or
lds
out
xor
xchg
sbb
gs
(bad)
(bad)
mov
out
fnstcw
nop
pop
out
fcmovnbe
and
retf
data16
movs
shr
arpl
jnp
pop
(bad)
repnz
mov
mov
popf
mov
mov
push
sbb
and
(bad)
scas
(bad)
jae
out
aad
icebp
and
mov
addr16
iret
adc
mov
lea
pop
movs
ss
sub
aaa
cld
dec
jbe
arpl
out
sbb
and
dec
fiadd
sub
imul
dec
jb
pusha
jge
mov
stos
xchg
popa
lahf
dec
pop
xor
or
dec
or
push
movs
fimul
loope
push
mov
int3
lahf
mov
arpl
sbb
es
jmp
or
adc
test
imul
clc
cdq
pop
jecxz
fsubrp
push
jmp
je
retf
mov
imul
in
(bad)
es
fsub
lahf
jmp
cmps
mov
push
pop
hlt
jmp
pop
mov
jge
push
cmp
ret
not
nop
pop
jns
sub
sbb
jae
or
lods
cmc
mov
cmp
pop
sub
aas
nop
jmp
test
inc
xor
cmp
xchg
xlat
mov
int3
outs
xor
(bad)
pop
lods
popa
sbb
imul
or
pop
xor
add
cmp
xchg
dec
ins
loopne
pop
and
(bad)
mov
les
mov
pop
jl
dec
jecxz
jl
mov
and
lahf
xlat
sbb
mov
inc
movs
mov
xor
xchg
(bad)
mov
inc
icebp
xchg
outs
push
shl
xchg
push
div
sbb
pop
ins
(bad)
cld
in
adc
xchg
sbb
test
in
call
adc
mov
clc
and
rcr
mov
popf
fs
es
imul
sbb
in
scas
nop
or
jne
rol
hlt
inc
push
xchg
and
add
cmc
test
cmp
cmp
jne
popf
(bad)
std
and
pop
push
aad
mov
and
fld
movs
out
out
xchg
fidiv
into
sub
adc
bound
mov
add
dec
jmp
jg
xor
in
adc
repz
test
add
(bad)
or
popf
or
fisttp
push
std
(bad)
fcomp
pop
xchg
mov
ins
aam
push
dec
outs
jmp
xor
iret
adc
add
push
xchg
pop
scas
leave
xchg
movs
sbb
inc
shl
clc
add
mov
cmp
(bad)
cmp
pop
sti
(bad)
or
push
shl
inc
ins
nop
push
jae
imul
sbb
cmps
retf
je
jnp
cld
or
and
rcl
mov
xlat
pushf
cwde
or
loopne
(bad)
sbb
add
jae
push
adc
add
lahf
(bad)
adc
ins
xor
fistp
pop
pop
(bad)
xchg
ret
outs
push
aad
and
sbb
test
mov
ror
mov
repnz
add
sbb
in
jp
pop
mov
scas
lods
ja
cmp
pop
stos
int3
cmp
popf
mov
aad
retf
jne
pop
icebp
push
dec
jl
mov
jecxz
jp
pop
pusha
icebp
mov
jle
inc
jae
mov
sbb
mov
or
add
cmp
jb
mov
inc
fcomp
pop
pushf
pushf
and
lea
movs
mov
or
mov
dec
in
test
adc
mov
mov
xchg
fcmovbe
pop
mov
pop
pop
sub
xchg
ja
sbb
addr16
jp
cdq
pop
movs
fsub
es
cs
in
test
test
or
sbb
jl
xchg
lock
out
and
mov
jecxz
cmps
inc
div
ins
mov
leave
mov
add
dec
out
scas
push
pop
add
inc
je
cmp
das
cmp
add
jg
jbe
in
mov
out
outs
fild
mov
dec
sub
stc
mov
sti
cmp
cs
jae
pusha
jb
sub
add
mov
aam
xchg
pop
(bad)
cs
shl
xor
push
inc
lock
imul
jmp
ds
nop
fwait
lds
sub
lahf
mov
test
hlt
fcmovu
jns
js
sbb
mov
pop
mov
pop
and
jmp
mov
mov
shl
jge
mov
sbb
fld
and
sbb
push
ja
int3
jb
fidivr
push
pop
cmc
out
push
lock
in
jae
cmps
push
push
add
retf
mov
mov
dec
sub
pop
cmovne
out
jb
ret
call
mov
ss
xor
dec
pusha
ret
mov
cmps
xor
std
or
and
jmp
cmps
add
cmp
inc
(bad)
inc
inc
cmp
rcl
xchg
xchg
gs
mov
hlt
cwde
fsubr
pusha
jne
mov
mov
xchg
add
cdq
retf
or
call
je
mov
pop
inc
push
mov
in
aas
mov
sub
lods
in
in
repz
pop
mov
xchg
cmp
dec
rcr
or
pop
std
dec
shl
sahf
addr16
sahf
inc
inc
ret
sub
fsub
dec
jle
and
(bad)
xchg
shr
mov
ja
out
pusha
in
push
dec
push
inc
movs
aaa
xchg
lods
loope
ja
xchg
adc
jb
int
out
in
cmp
not
cmp
push
daa
xchg
shl
push
daa
ins
retf
push
out
inc
fs
add
leave
push
lea
rol
pop
mov
scas
(bad)
out
rdpmc
daa
or
iret
fidivr
popf
in
imul
mov
aad
int3
test
aad
shl
push
retf
adc
xchg
add
retf
sbb
in
push
stos
in
sbb
shr
dec
je
aas
push
pusha
or
sbb
cmp
test
add
sbb
or
sub
dec
push
(bad)
gs
jb
out
daa
dec
lds
adc
pop
mov
retf
int3
dec
and
mov
ds
jle
pop
add
sbb
and
das
push
or
test
icebp
push
aaa
mov
dec
xrelease
and
pop
or
(bad)
cmc
xor
adc
or
adc
sbb
aas
mov
mov
sbb
arpl
xchg
mov
jo
lahf
mov
ja
(bad)
ja
ins
push
call
jl
cli
aad
movs
sbb
jle
fwait
inc
cwde
mov
or
cmp
push
fdiv
rcl
xchg
cdq
cmp
xchg
fild
dec
lock
sbb
shr
loope
mov
into
in
mov
dec
in
enter
mov
xor
ja
cli
add
cli
dec
cmp
icebp
movs
pop
add
outs
mov
mov
fmul
pushf
bound
out
fisubr
sub
loopne
jnp
xchg
mov
inc
push
pop
sub
loop
xchg
inc
mov
loope
jo
xchg
imul
mov
clc
or
sub
pop
mov
adc
jae
mov
inc
xlat
retf
into
pop
cmp
mov
jo
lods
mov
enter
adc
cwde
neg
xchg
in
out
je
jns
movs
and
mov
aad
jbe
repnz
imul
xlat
ror
sub
adc
in
(bad)
fistp
xor
or
dec
xor
call
adc
inc
mov
movs
ins
xchg
repnz
pop
and
int3
add
dec
lock
repnz
mov
xor
stos
dec
retf
or
imul
enter
add
test
(bad)
leave
fsubr
mov
adc
stos
xchg
pop
or
push
rcr
scas
bound
sbb
pushf
lods
lock
mov
(bad)
dec
stos
xlat
neg
mov
mov
add
and
movs
outs
adc
jb
mov
sti
xor
out
retf
les
and
and
test
add
xlat
dec
aaa
and
sti
xchg
sahf
jg
aas
cmc
out
dec
aam
test
inc
or
xor
lock
repz
add
mov
cdq
mov
clc
clc
inc
mov
mov
out
mov
loope
rcl
cld
fs
gs
fsubr
(bad)
(bad)
dec
cli
sti
imul
sbb
mov
test
mov
ja
dec
or
scas
or
repz
mov
xchg
mov
icebp
gs
xchg
jmp
xchg
cmp
movs
clc
mov
sub
gs
mov
mov
mov
int3
js
mov
imul
(bad)
enter
pop
dec
or
mov
mov
or
cmps
or
xor
in
mov
iret
lds
ffree
xlat
fiadd
xor
lahf
repz
div
retf
call
in
mov
pusha
sub
mov
mov
ss
mov
or
stos
push
bound
fist
adc
call
in
fbstp
mov
mov
jno
in
adc
xor
outs
push
inc
int
bound
popa
push
not
ins
pop
jne
fsubr
movs
push
mov
outs
(bad)
aad
sub
sub
adc
int
ins
cli
xchg
add
shr
stc
mov
lahf
ss
fs
and
sbb
inc
cmp
imul
aad
(bad)
mov
aas
cdq
scas
in
in
mov
int3
adc
aam
mov
clc
sub
ins
ss
inc
xor
jp
push
push
fld
rol
jno
repnz
pop
jno
je
not
mov
fsubr
push
ficomp
dec
test
popf
jecxz
dec
lods
xchg
pop
pop
inc
es
daa
lds
cmp
lods
sar
or
dec
xchg
lods
push
sub
push
sti
shr
sub
sub
inc
sub
ficom
stos
and
(bad)
fisttp
mov
add
adc
nop
adc
ret
mov
daa
jmp
out
das
mov
mov
mov
or
cmp
mov
adc
pop
jmp
retf
cmps
cmc
rcl
cmp
push
test
xchg
cld
mov
push
in
sbb
mov
cld
in
pop
pop
outs
xlat
test
inc
cli
not
push
sub
fist
jge
sti
mov
mov
rcr
xchg
push
lock
push
or
lods
retf
test
xchg
in
or
in
mov
movs
(bad)
jmp
shr
(bad)
cmp
outs
test
add
es
ja
sub
out
sub
hlt
aam
pop
je
add
loopne
repz
and
or
cmp
or
cmps
fwait
inc
add
cld
shr
mov
dec
pop
addr16
mov
repnz
jo
pop
sti
in
adc
pop
lahf
fwait
adc
pop
jmp
and
std
add
nop
mov
sub
cdq
out
add
inc
int
fs
cmc
or
leave
call
xor
loope
loopne
lds
pop
sbb
mov
retf
cmp
inc
nop
pavgb
ror
add
sbb
rcl
ret
sti
fadd
imul
cmp
jae
fcom
push
ficomp
sbb
add
ret
enter
lea
sbb
fbstp
mov
or
mov
inc
mov
test
mov
ins
in
repz
lods
adc
call
clc
ror
inc
ss
jbe
leave
out
adc
mov
dec
add
cmps
inc
sbb
outs
mov
jne
lea
loopne
mov
repnz
rcl
clc
jmp
lock
test
and
lea
push
test
movs
ret
stos
cs
mov
adc
or
out
cmp
js
in
add
sub
sub
xchg
jns
out
int
mul
sbb
mov
fild
test
sbb
loope
dec
or
retf
outs
mov
int
xchg
ss
inc
fdivr
pop
dec
jecxz
mov
cwde
into
xor
in
or
sahf
jbe
inc
mov
sub
inc
shl
leave
push
faddp
icebp
imul
mov
loop
call
xor
pop
jb
frstor
adc
fwait
dec
inc
in
cmp
icebp
inc
mov
movs
shr
xchg
mov
pop
lds
repnz
mov
pop
dec
pop
sub
(bad)
in
mov
nop
cmps
sub
dec
lods
aaa
mov
jb
xlat
mov
int
dec
fsub
sub
cmp
(bad)
sub
sub
aas
xchg
mov
lea
clc
jns
or
jne
or
out
jge
add
dec
bound
lods
jnp
cmp
bound
aad
xchg
call
mov
bound
aaa
popf
pushf
cmp
lahf
repz
pop
pop
dec
cdq
cmp
push
je
xor
aad
jp
push
into
outs
jns
adc
pushf
lea
push
lea
daa
ret
sbb
aas
cmc
mov
dec
inc
iret
push
inc
pusha
xor
push
pop
movs
and
hlt
loope
bound
sbb
aas
out
xlat
arpl
or
mov
dec
imul
sub
cli
aad
(bad)
push
ds
movs
push
(bad)
push
sar
fwait
ss
fbld
lock
outs
mov
push
dec
repz
out
jbe
mov
push
(bad)
aam
jle
dec
adc
jns
fxch
mov
fldenv
jl
mov
jge
ins
inc
pop
mov
mov
pusha
sbb
call
push
lahf
push
daa
fwait
cmp
pop
sti
adc
rol
leave
mov
ret
jbe
or
cmps
cmps
mov
fiadd
out
addr16
xor
xlat
jle
push
push
adc
mov
sbb
and
mov
int
data16
mov
shr
sti
sub
out
(bad)
xlat
pop
loopne
xchg
adc
xchg
add
out
clc
inc
xchg
mov
shl
repnz
mov
into
pushf
enter
jle
lods
sti
and
sti
in
push
inc
sbb
(bad)
cld
out
je
in
jl
add
je
jecxz
xor
stos
mov
or
mov
mov
hlt
arpl
icebp
into
inc
iret
push
dec
call
sbb
das
or
jle
addr16
sub
adc
push
(bad)
pop
lahf
fwait
sbb
or
jo
push
lds
xchg
xchg
add
cmps
jo
into
rcl
and
xlat
cmc
std
xor
sbb
shr
clc
xchg
pop
(bad)
(bad)
and
cmc
sbb
cwde
jecxz
and
sub
cs
mov
mov
sub
(bad)
xor
call
cmp
(bad)
rol
cs
lock
ffree
fbstp
sub
inc
xchg
add
push
inc
js
push
(bad)
cli
mov
hlt
adc
jmp
add
adc
sub
jl
cmc
inc
dec
mov
scas
lahf
jge
aaa
call
clc
inc
jns
lock
jo
dec
loop
jne
js
inc
loop
test
cwde
sar
or
fstp
mov
sahf
in
push
lods
mov
xchg
cmp
mov
mov
cld
mov
mov
arpl
xor
bnd
push
div
push
mov
sub
fstp
push
push
mov
es
leave
ds
lahf
iret
mov
mov
(bad)
enter
xor
addr16
cmc
ja
jo
call
fsubrp
mov
and
or
loop
sbb
repnz
push
pop
mov
mov
inc
aad
mov
imul
jecxz
das
fbld
js
sub
rcr
jl
inc
fdivr
and
idiv
in
push
mov
test
jo
xor
int
add
stos
ror
not
and
out
in
cld
jnp
sar
ja
pop
enter
pop
mov
pop
mov
test
(bad)
out
dec
repnz
sbb
mov
sti
repnz
loop
test
dec
sbb
dec
repz
jnp
sahf
pop
or
aaa
inc
fcmovnb
xor
loope
xor
cmps
aaa
pop
scas
xor
ret
sbb
cmp
int3
arpl
daa
mov
mov
push
jae
dec
(bad)
jmp
test
sbb
js
jg
mov
mov
xor
int3
sar
jnp
push
inc
inc
jge
sub
outs
clc
aas
or
sbb
ret
pop
adc
adc
in
test
ins
and
out
xchg
dec
mov
ficomp
nop
cs
sbb
jae
dec
mov
or
repz
imul
inc
adc
cdq
daa
fldcw
mov
dec
fwait
je
cmps
test
pop
inc
bound
mov
cmps
cmp
dec
or
xlat
imul
xchg
add
shr
push
push
jl
enter
loopne
mov
loopne
mov
retf
enter
loope
(bad)
fwait
jl
jae
mov
dec
enter
out
icebp
xchg
xor
imul
mov
add
push
cmp
int3
xlat
mov
mov
lahf
xchg
hlt
and
fmul
or
and
adc
mov
and
out
int3
out
mov
iret
xchg
cmp
retf
push
push
cmps
shl
and
in
mov
movs
jmp
dec
sub
jl
inc
pop
jne
dec
and
push
cmc
pop
inc
sub
inc
mov
int
jae
iret
inc
add
out
addr16
mov
and
xor
fild
out
rcr
(bad)
fwait
lods
sub
adc
sbb
je
xchg
pop
movs
into
sub
out
call
aaa
in
inc
inc
(bad)
xchg
fwait
repz
call
lds
sub
and
hlt
cmc
sahf
mov
aam
sar
std
sub
lock
loopne
shl
ins
add
and
fild
cmp
xchg
jno
jb
jecxz
movs
jno
scas
sbb
lds
inc
sti
sub
cmc
call
out
popf
lods
inc
xchg
out
int
xchg
mov
(bad)
fsub
movs
xor
(bad)
ucomiss
mov
jmp
out
test
inc
popf
mov
cmp
test
stc
mov
scas
call
sub
jmp
push
out
div
xchg
sub
and
stos
push
jmp
dec
dec
adc
and
stos
jo
or
xchg
lahf
int
leave
in
mov
bound
and
ficom
test
gs
sub
xchg
retf
loope
ficomp
xchg
stc
lahf
aas
fwait
jne
add
lods
jne
mov
add
ins
adc
add
fnsave
xchg
push
jecxz
jp
push
sbb
sub
nop
pop
xchg
cmp
push
sbb
movs
mov
inc
ins
or
outs
or
or
or
xchg
or
mov
mov
mov
out
rep
xor
xchg
mov
mov
ins
repz
mov
dec
add
repnz
ret
outs
sbb
call
lea
inc
ret
into
jecxz
icebp
imul
ret
ins
fiadd
and
fmul
imul
and
enter
imul
popf
popa
neg
shl
mov
vcvttpd2dq
rcr
pop
es
dec
cmps
dec
pusha
out
fs
stc
cmps
mov
stos
test
sti
jb
shr
test
cmp
push
mov
fild
test
fisubr
lods
xchg
(bad)
push
pop
xor
jo
push
shr
jmp
dec
ja
rol
mov
dec
test
(bad)
call
mov
ins
jg
pop
les
fst
push
or
in
call
inc
xor
cmps
pop
mov
mov
shl
hlt
sbb
xchg
dec
and
cdq
sbb
mov
outs
push
push
xchg
jl
jne
mov
sbb
leave
loope
cmps
xor
xchg
xor
xor
and
shl
inc
pop
stc
mov
ins
add
inc
das
leave
fidivr
cmps
cmp
mov
mov
xchg
out
mov
cmp
jg
psubd
rol
inc
ins
out
movs
imul
icebp
test
sbb
sti
pop
push
pop
pop
imul
push
not
les
lods
fmul
jne
mov
js
sahf
ins
push
adc
fdivr
fdivr
sub
pop
sbb
packssdw
xchg
mov
dec
neg
dec
sub
xchg
xchg
mov
ret
sub
jecxz
mov
sbb
pop
aaa
add
or
xchg
inc
out
push
pop
dec
or
repnz
scas
mov
call
xlat
out
pusha
dec
pop
cld
mov
(bad)
mov
out
jecxz
shl
jecxz
xor
or
movs
fcom
mov
cmps
test
jnp
pop
mov
cdq
push
data16
das
jecxz
sbb
int
(bad)
and
idiv
mov
jp
out
iret
xor
mov
out
xchg
popf
pop
fwait
pop
loopne
call
xchg
mov
push
ret
jb
rcr
cmc
mov
jb
mov
pop
mov
mov
mov
mov
cli
into
das
xchg
test
adc
(bad)
push
hlt
mov
xchg
data16
sbb
pop
scas
cmp
mov
arpl
inc
xchg
lahf
inc
ret
sahf
bound
test
daa
test
sub
sbb
and
sub
inc
fadd
out
xor
es
cld
pop
sbb
rep
imul
xlat
mov
jno
push
lahf
stos
sbb
add
xchg
sub
pop
rcr
in
sti
addr16
xor
or
retf
in
mov
sbb
ins
ror
xor
sbb
shl
loope
mov
and
out
xchg
add
push
add
(bad)
jbe
dec
sti
inc
push
ret
rcr
push
inc
pusha
push
movmskps
cmp
jnp
fcom
jns
popa
xchg
xchg
imul
movs
(bad)
cmp
inc
push
into
sub
fwait
loopne
add
das
xor
fld
mov
push
jns
ja
add
dec
mov
add
bound
sub
fldenv
sbb
push
mov
lahf
or
xchg
loop
xor
xor
inc
loopne
inc
aad
iret
ss
dec
cli
adc
and
cmps
fs
jbe
dec
pop
retf
sub
lods
jmp
pop
imul
enter
(bad)
sti
mov
add
mov
mov
gs
xor
stc
inc
add
mov
cmps
jo
rcl
pop
mov
hlt
sub
cwde
stos
jl
std
and
xor
pop
jo
test
ret
movs
adc
xlat
inc
dec
sbb
lods
mov
push
in
cmp
or
xor
fild
stos
push
movs
mov
mov
mov
xor
mov
jno
inc
or
mov
int3
test
ja
mov
int
xor
loopne
retf
sti
or
cdq
jb
jg
add
pop
stc
jo
int3
movs
out
(bad)
call
inc
les
pop
aas
xor
xor
xor
jnp
das
add
inc
lahf
outs
imul
xchg
mov
push
call
dec
pop
adc
popa
scas
fistp
xchg
adc
popa
shl
add
jbe
lods
or
xor
out
and
jge
outs
ins
inc
mov
fadd
les
shr
xchg
inc
adc
ins
inc
or
dec
cmp
test
rcr
dec
ret
add
dec
mov
imul
pop
or
mov
sbb
xchg
loop
cdq
lea
pop
sub
pop
pop
in
xor
lock
fld
add
cmps
dec
fwait
jp
outs
xor
test
cmp
retf
add
mov
popf
out
fwait
cs
icebp
or
fst
call
loop
or
lock
call
lahf
cwde
imul
mov
ficom
or
mov
(bad)
push
pusha
idiv
xchg
push
cmp
or
test
jl
fisubr
loopne
fsub
ret
cmc
sub
add
cmp
dec
aas
ds
xor
scas
sbb
test
and
dec
ins
mov
imul
or
movs
sbb
movs
jbe
test
xchg
dec
or
push
mov
dec
jbe
xchg
cmp
loopne
fidivr
shl
pop
cmp
xchg
xor
pop
cmp
inc
push
adc
xchg
sbb
stc
and
sbb
retf
stos
sub
jae
ins
xor
retf
ret
rcl
and
iret
mov
nop
cs
movs
stc
mov
(bad)
mov
aam
sbb
and
mov
pop
and
fimul
inc
inc
pop
add
jne
lds
ror
add
or
iret
test
imul
outs
sbb
fld
das
xor
(bad)
outs
(bad)
in
pop
push
in
lods
lahf
mov
lea
mov
jge
mov
mov
cli
test
and
mov
sbb
mov
clc
retf
mov
dec
cli
cmps
pushf
lods
repnz
(bad)
adc
sub
mov
sti
ins
scas
leave
in
fdiv
or
in
sub
sbb
pop
mov
mov
cmp
nop
lock
jp
in
(bad)
arpl
test
retf
mov
rcl
ror
or
jbe
jmp
hlt
sub
out
imul
idiv
mov
dec
cwde
loop
dec
and
data16
icebp
(bad)
cmps
sbb
mov
and
cwde
bound
push
xchg
les
fld
and
mov
call
pop
push
popa
jle
ins
xchg
pop
cli
or
int
add
push
(bad)
pop
mov
and
jmp
mov
pop
ret
cmp
dec
sbb
jbe
inc
call
daa
mov
dec
pop
cmp
mov
in
stos
push
fisttp
in
pop
jmp
adc
dec
test
hlt
cli
push
mov
ins
cmps
(bad)
push
adc
(bad)
rcl
(bad)
int3
(bad)
cmc
sub
scas
(bad)
mov
inc
dec
mov
mul
aad
adc
stos
fstp
popf
cmp
xor
neg
or
jno
mov
mov
stc
shl
out
loope
clc
sub
dec
jo
jg
xor
jae
dec
stos
push
push
stos
test
call
mov
cmp
dec
loope
pop
les
and
les
fnstenv
and
push
xchg
jbe
cmc
shl
xlat
data16
lock
pushf
pop
ja
stos
movs
stos
mov
add
rol
fadd
sbb
xor
add
xchg
sub
sbb
pop
sahf
lds
adc
aas
cmp
fdivr
add
sub
test
push
mov
xor
and
repz
add
(bad)
adc
rcr
mov
out
and
leave
(bad)
adc
inc
das
(bad)
popf
xor
adc
js
dec
lds
test
outs
mov
aad
mov
pop
cmps
cmp
sub
cmps
and
sti
js
ins
lods
lea
clc
(bad)
or
push
shr
cmc
fist
or
mov
fdivr
ret
outs
loop
mov
and
aam
ds
lahf
out
ins
cmp
cmp
leave
adc
pushf
jo
pop
int3
movs
in
fcmovne
shr
sbb
add
shl
sbb
xor
aas
jmp
xor
test
add
out
les
xor
mov
icebp
sar
add
mov
cmp
in
data16
mov
jmp
push
adc
ja
jmp
int
sbb
out
sbb
ror
mov
fild
push
sub
(bad)
sub
cmps
cmp
pop
fsubr
dec
cmp
cmp
shufps
rcl
pop
and
adc
mov
jmp
or
add
dec
cld
mov
lds
je
inc
xchg
les
pop
and
rep
or
and
pop
or
adc
mov
add
in
xchg
xchg
lds
stos
fisttp
(bad)
and
gs
js
add
movs
add
cmp
retf
dec
jecxz
sar
ja
aam
popf
and
xor
bound
mov
xor
mov
xchg
dec
movlps
push
and
push
pop
cmp
pop
jmp
test
out
add
mov
fild
ins
inc
cmp
nop
mov
cwde
jge
inc
cli
and
popa
adc
sahf
mov
or
out
pushf
repz
call
stc
sub
inc
jmp
add
xchg
add
lds
int
daa
pop
lods
xchg
push
inc
push
scas
add
push
test
rcr
cmps
xor
mov
or
mul
or
inc
cmp
outs
jae
popf
adc
xchg
sub
inc
cmp
xchg
out
test
pop
fsub
jae
(bad)
jg
test
xor
rcr
jmp
cmp
mov
cli
addr16
fldcw
mov
(bad)
mov
and
or
inc
lea
outs
shl
xchg
jo
mov
push
retf
inc
rcl
fidivr
or
mov
sahf
aaa
sub
inc
push
cmp
push
fistp
cld
xchg
jle
jae
stc
xchg
retf
add
sub
sub
aaa
sub
aam
adc
lock
pop
dec
std
hlt
icebp
sbb
xlat
sbb
(bad)
jecxz
push
out
inc
and
cs
es
stos
stos
fdivr
or
jb
mov
mov
xor
and
loope
in
dec
dec
inc
addr16
mov
daa
add
or
pop
iret
pop
jmp
cs
jb
pusha
push
into
mov
cmp
sbb
xor
sbb
jmp
and
jns
cmp
mov
repnz
jo
sub
mov
inc
xchg
cmp
xlat
or
and
add
div
sbb
mov
mov
pop
(bad)
mov
xchg
mov
rcl
and
sub
fisubr
aam
mov
add
inc
inc
movs
push
push
sbb
jnp
outs
(bad)
sbb
push
jp
aas
adc
mov
mov
push
sub
int3
outs
fistp
inc
aam
xor
add
sbb
mov
push
push
add
mov
scas
mov
in
jb
xchg
adc
xchg
and
pop
and
sub
lahf
push
pop
push
arpl
test
loope
inc
(bad)
and
cmp
cmp
jnp
enter
cmp
sbb
retf
jp
adc
cmc
jge
push
and
mov
dec
in
das
in
pop
retf
(bad)
lock
fidivr
pop
mov
dec
add
in
cmp
dec
js
mov
or
or
adc
inc
cmp
xchg
cmc
mov
aam
jecxz
outs
cmp
aad
fiadd
shr
(bad)
mov
mov
rcr
inc
test
loop
arpl
cmp
adc
adc
fstp
xchg
pop
dec
mov
add
pop
enter
test
aam
adc
retf
leave
data16
push
sbb
pop
pop
xor
fcom
ror
test
call
mov
imul
sbb
xor
loope
push
and
es
add
push
xchg
into
mov
cmps
fisub
jb
adc
enter
adc
mov
(bad)
mov
jbe
out
jecxz
ins
and
ins
bound
jne
in
test
test
inc
jae
out
pushf
test
push
sti
stos
add
mov
nop
cmp
pop
push
ds
cs
sub
fwait
es
push
cmp
mov
retf
pop
test
push
fild
xor
mov
call
inc
mov
jbe
push
sbb
(bad)
in
ins
push
sbb
ins
fild
push
adc
sub
dec
dec
cmps
out
adc
fsubr
add
cmp
or
jnp
sbb
dec
lahf
xor
mov
sub
stc
inc
pop
fsub
push
xor
pusha
fistp
loope
imul
push
and
test
xchg
iret
or
mov
mov
mov
mov
out
push
fisub
sti
push
sbb
out
sti
ins
inc
or
aaa
jge
mov
pop
int3
test
or
sti
xchg
sub
jecxz
and
xor
mov
pop
mov
sub
or
inc
dec
stos
and
fwait
sub
aaa
inc
pop
add
popf
dec
mov
(bad)
mov
stos
jnp
xchg
test
jo
enter
out
mov
daa
aam
mov
enter
xor
ror
and
jne
enter
push
xlat
movs
pusha
or
sub
dec
mov
xor
sub
aaa
sti
pop
mov
inc
inc
adc
pushf
mul
jo
loopne
cli
sub
pop
xor
test
adc
inc
jle
xor
int
fwait
loop
loope
leave
sahf
aad
pop
aam
lock
cmp
daa
or
(bad)
jbe
mov
std
hlt
cmp
xor
jmp
mov
jns
or
jae
jmp
xor
pop
ins
sti
sub
mov
xchg
sub
jmp
dec
xor
ret
lock
push
jbe
(bad)
or
push
movs
dec
aad
fwait
add
js
aam
xor
mov
and
mov
inc
test
ret
inc
add
add
mov
inc
into
dec
sub
dec
nop
push
xor
ret
das
sub
adc
fnstsw
pop
fs
pop
pop
mov
cld
push
mov
lods
xor
icebp
sub
jns
add
lahf
cmp
or
jle
add
ds
sub
push
jle
sbb
mov
fild
xchg
js
ja
cwde
pop
mov
push
sbb
jmp
sub
fstp
add
cli
xchg
jbe
rol
pop
and
xchg
out
xchg
mov
sbb
jg
or
mov
nop
outs
mov
pop
hlt
jg
sti
sbb
iret
(bad)
jge
outs
je
mov
aad
mov
movs
out
or
mov
mov
adc
push
cld
xchg
dec
mov
cmp
adc
test
mov
adc
nop
fs
or
ss
mov
mov
mov
inc
xor
pop
pop
xor
nop
stos
cmp
lock
or
push
jmp
xchg
jbe
(bad)
cmp
leave
pop
(bad)
js
adc
or
jbe
mov
push
cmp
aaa
jnp
or
push
dec
movs
jo
or
fwait
inc
cli
add
fld
cmp
stos
pop
cmp
ins
sub
sbb
fisubr
cmp
and
mov
jo
sahf
mov
cmp
dec
pop
push
adc
dec
jbe
dec
adc
ins
or
cmps
popa
inc
inc
xor
sbb
ins
ja
out
inc
aas
jge
(bad)
cmp
push
stc
cmp
cmps
(bad)
or
jg
xor
(bad)
jmp
xor
push
movs
mov
inc
push
ret
sbb
or
sub
scas
aas
out
jmp
jp
push
sbb
cmp
xchg
nop
fnsave
xchg
aaa
sub
(bad)
retf
push
push
je
ret
add
fld
mov
jbe
sti
sub
inc
inc
or
push
loope
fsubr
int3
adc
or
and
in
mov
paddd
nop
push
stos
pop
movs
xchg
dec
les
sahf
mov
add
sar
scas
or
adc
ja
jle
push
sti
ffreep
into
test
ss
shl
lahf
push
movs
mov
packssdw
(bad)
mov
push
adc
push
sbb
pop
mov
fst
mov
in
mov
push
mov
xchg
sti
outs
xor
ret
(bad)
sub
sub
repz
or
in
add
adc
xchg
(bad)
mov
sbb
pop
xor
icebp
mov
jbe
adc
data16
in
mov
popf
cmps
iret
frstor
cld
add
mov
dec
xchg
stos
mov
jl
aam
xor
and
ds
push
jne
xor
push
in
dec
add
idiv
sar
test
dec
fcom
mov
push
(bad)
aad
push
mov
(bad)
xlat
not
mov
mov
call
outs
mov
cmp
in
inc
out
push
add
sub
add
jmp
xchg
idiv
loop
inc
adc
cmp
not
add
das
jns
fcmovnu
rcr
outs
add
cmp
mov
xchg
mov
add
scas
mov
inc
inc
das
call
dec
jae
in
shl
test
pop
mov
pop
jnp
jecxz
cdq
enter
inc
adc
aaa
je
adc
(bad)
pushw
js
mov
in
sub
mov
gs
mov
(bad)
jl
leave
dec
inc
in
mov
add
sbb
jge
(bad)
jbe
pop
jo
mov
(bad)
cmc
test
and
iret
or
xchg
aaa
lahf
test
xchg
repnz
pop
cdq
rcr
stos
pop
bound
retf
adc
gs
mov
adc
aad
xchg
mov
xchg
inc
adc
fidivr
fs
mov
dec
jb
mov
pop
pop
in
xor
mov
sub
lahf
or
ds
add
push
bound
aas
jae
test
mov
push
int
mov
test
jno
push
push
dec
inc
jbe
mov
aas
sahf
fiadd
scas
mov
cld
push
cmp
inc
sbb
int
adc
cmps
inc
popa
fild
push
adc
shr
dec
pop
or
add
pop
and
cmp
xchg
call
mov
call
scas
and
inc
cmp
mov
jnp
cmc
les
call
or
adc
aam
enter
(bad)
jle
jno
mov
(bad)
popf
in
shl
cmps
shl
clc
ja
retf
dec
ins
test
movs
jae
pop
pushf
push
int
in
mov
mov
and
test
cmc
bound
pop
jb
push
jle
mov
dec
ja
dec
movs
sahf
adc
popa
push
sbb
out
fs
cmp
inc
pop
dec
cld
movs
in
mov
add
fmul
sub
add
adc
sar
inc
and
(bad)
loopne
lock
retfw
addr16
xor
push
sbb
add
arpl
push
jns
iret
mov
retf
pop
scas
and
mov
mov
jno
ds
mov
aam
aaa
push
out
dec
mov
sbb
sub
aad
jg
cmp
jp
fucom
mov
add
jg
pop
imul
mov
jno
addr16
int
xchg
movs
dec
fimul
fnstenv
jnp
lods
sbb
xchg
mov
add
cmp
dec
test
(bad)
call
cdq
adc
sub
mov
push
aaa
mov
in
and
loop
loope
pop
xchg
in
ror
rcr
das
scas
repz
aam
loop
inc
scas
inc
push
push
mov
or
(bad)
ret
(bad)
push
push
pusha
dec
pop
mov
or
jae
mov
rol
dec
std
in
xlat
fcomp
xrelease
adc
dec
aad
cmp
push
mov
add
cdq
pop
sub
mov
cmp
stc
or
stos
lods
in
movs
mov
or
cmp
stos
(bad)
jmp
test
aas
scas
inc
cmp
out
dec
or
xchg
test
fstp
mov
xor
lods
ins
push
pop
mov
rol
movs
or
int3
sbb
mov
jne
shr
fstp
push
mov
jno
cmp
in
(bad)
lds
push
scas
in
push
sub
cmp
inc
stc
aad
(bad)
xor
mov
cwde
out
or
and
arpl
adc
and
dec
movs
(bad)
jmp
push
repnz
lahf
pop
dec
jg
(bad)
clc
int
in
test
mov
mov
adc
add
loopne
ja
stos
push
or
mov
ss
lods
xor
iret
loop
sbb
in
pop
das
imul
aaa
aad
(bad)
scas
inc
mov
call
xchg
push
jmp
add
or
sahf
push
pop
pop
dec
adc
mov
mov
adc
push
add
(bad)
iret
aam
dec
adc
jle
and
(bad)
cld
dec
outs
pushf
cld
scas
(bad)
rcl
mov
cs
pusha
mov
test
ins
push
mov
pusha
rcr
and
and
mov
jp
(bad)
dec
add
lock
pop
retf
mov
cmp
shr
xor
and
and
lahf
push
shl
inc
btr
mov
bswap
rcr
sub
pusha
jmp
mov
pop
mov
jns
dec
mov
push
bound
push
mov
and
in
mov
pandn
test
int
mov
sbb
inc
add
lods
jp
inc
fs
es
ss
xor
fstp
mov
adc
fild
data16
and
fcmovne
mov
xor
xchg
xor
repz
xchg
mov
dec
sbb
pushf
data16
jmp
inc
or
xchg
imul
out
sti
xchg
jo
fmul
popf
mov
or
adc
movs
push
mov
out
loopne
add
fldcw
into
lea
jo
hlt
inc
adc
push
lea
call
jae
push
lea
jb
add
lahf
lea
not
movzx
shr
shr
call
mov
shl
lea
call
pop
ret
pusha
stc
cmc
push
not
pushf
cmp
cwde
lea
pushf
mov
call
mov
not
add
shl
mov
test
test
pushf
pusha
lea
je
call
sub
not
not
jmp
lea
je
stc
sub
clc
clc
cmp
push
lea
ja
call
dec
fwait
fwait
popa
test
mov
sub
(bad)
xor
jb
hlt
ret
add
test
inc
xchg
and
cdq
jecxz
dec
pop
out
mov
mov
arpl
fidiv
fnstcw
dec
and
shr
cmc
or
add
jmp
addr16
lea
retf
jp
(bad)
xor
cmp
(bad)
push
lods
(bad)
cmp
fisubr
xchg
call
inc
ja
pop
lds
imul
sar
inc
nop
rcl
mov
dec
pusha
add
dec
add
rcr
cmp
pushf
test
mov
call
call
sar
rcr
rol
bt
sub
rcl
test
cmp
mov
pusha
jmp
pushf
jmp
lahf
lea
setb
call
add
dec
outs
popa
fs
imul
add
add
ror
or
(bad)
jmp
bsf
stc
mov
pushf
rcl
not
pusha
sbb
mov
not
sar
setne
test
add
cwde
lahf
pushf
setb
setle
lea
push
jmp
clc
mov
test
test
push
push
seto
mov
mov
push
pusha
lea
je
movsx
pushf
pop
lea
pushf
lea
call
pusha
adc
mov
mov
push
jmp
push
movzx
lahf
lea
pusha
pusha
mov
call
mov
jmp
mov
das
daa
sbb
movzx
mov
bswap
cmp
lahf
pop
not
mov
push
mov
pushf
pushf
lea
jb
sub
rcl
movzx
aam
cmp
not
movzx
not
mov
call
pusha
push
call
mov
pusha
jmp
lea
jae
jmp
jmp
push
mov
pushf
mov
lea
jmp
push
lea
jmp
pushf
bt
imul
cmp
test
test
add
pushf
lea
jmp
aad
cmp
movs
pop
mov
sub
sbb
in
cmp
clc
jno
cmp
es
outs
push
cmps
(bad)
outs
fwait
xchg
push
loope
adc
out
or
int3
and
sar
and
pop
push
fabs
mov
je
xchg
test
dec
mov
push
sub
or
mov
mov
neg
adc
pop
rcl
push
in
(bad)
xchg
mov
daa
cld
push
std
push
(bad)
in
and
das
mov
xor
jnp
clc
pop
nop
and
shl
shl
pop
mov
enter
jle
jge
xor
add
mov
mov
add
rol
mov
pushf
movzx
pop
cmp
mov
call
neg
mov
call
setb
lahf
lea
push
mov
call
lea
jb
bsr
mov
clc
and
stc
xor
mov
bt
js
pushf
shr
jmp
movs
stc
adc
push
jp
sub
and
loopne
popf
xor
jecxz
pop
sti
xchg
aam
out
mov
xchg
adc
(bad)
rol
xchg
(bad)
loop
mov
add
iret
and
mov
js
xchg
popa
jmp
xor
cmps
stos
sti
leave
mov
std
sub
aam
mov
cmp
test
pusha
mov
gs
push
and
push
call
stos
cdq
imul
sti
call
inc
or
sub
inc
adc
jb
pop
fwait
outs
add
(bad)
dec
mov
movs
pop
mov
pop
lods
jle
ins
inc
dec
sbb
in
xchg
mov
into
pop
call
cwde
mov
inc
xchg
add
ret
imul
mov
outs
ror
pop
pop
aam
js
xor
push
xlat
sub
nop
xlat
leave
sbb
nop
add
mov
rcl
aam
cmp
cli
int
shl
out
and
add
imul
cmp
dec
or
dec
mov
jp
mov
jns
sbb
retf
push
add
mov
inc
push
xchg
pop
jmp
pop
popf
ins
aaa
push
mov
xor
stc
xchg
gs
xor
leave
jnp
outs
dec
adc
xor
push
jmp
fldcw
shl
pop
push
ficomp
and
xchg
add
call
pop
sbb
outs
inc
dec
sbb
push
dec
or
add
mov
push
mov
jecxz
scas
(bad)
aad
movs
and
pop
and
cdq
xor
and
(bad)
int
fnsave
js
xchg
push
push
mov
ret
xchg
jnp
fisubr
mov
jnp
mov
loope
scas
test
fist
movs
xor
sbb
cld
xchg
cli
mov
dec
lahf
mov
mov
add
movs
pop
jp
pop
repnz
xchg
dec
pushf
call
xchg
fisubr
ins
inc
or
retf
popf
jne
aaa
add
sar
xchg
fmul
mov
push
shld
lea
clc
test
sub
push
push
push
push
pop
mov
pushf
pushf
cmp
mov
lea
ja
add
xor
stc
rcr
sub
mov
movzx
mov
add
dec
bt
sar
push
mov
sub
jns
ror
bt
sbb
mov
pusha
jmp
lea
ja
xor
shl
pushf
sub
rcl
sbb
shr
sub
add
mov
bt
mov
rcr
call
push
lea
jne
mov
jmp
bt
push
push
sub
call
mov
mov
mov
lea
jmp
dec
mov
push
pushf
call
pushf
mov
lea
jb
movzx
inc
btr
cwde
movzx
cmc
xor
dec
btc
shr
movzx
imul
sbb
clc
rcl
lea
setg
cmc
push
call
shl
movzx
mov
cmp
pushf
cmp
pushf
jmp
mov
shl
rcl
push
mov
rcl
cmp
inc
mov
pusha
rol
clc
movzx
mov
stc
jmp
lea
je
bt
cmc
sub
clc
call
add
sbb
(bad)
push
(bad)
iret
popf
test
mov
inc
fcmovb
adc
xchg
retf
xchg
es
mov
lods
sahf
adc
fwait
out
pop
push
inc
push
clc
dec
shl
clc
inc
mov
jl
inc
xchg
mov
loope
retf
inc
sbb
xchg
jnp
addr16
stos
sbb
and
aad
pushf
mov
mov
mov
sbb
test
cmp
(bad)
sbb
sbb
ds
add
pusha
mov
xor
ret
je
adc
pop
(bad)
imul
or
dec
test
std
int3
dec
sbb
mov
outs
jg
paddd
in
pop
xor
mov
aam
fwait
jmp
xchg
sbb
mov
fld
pop
dec
lahf
sub
add
je
pop
test
sbb
jne
mov
ret
adc
(bad)
xchg
xchg
gs
or
test
hlt
icebp
inc
test
pusha
out
sar
sub
arpl
mov
jg
and
pop
dec
cwde
icebp
leave
lods
jle
dec
inc
sbb
and
jp
cmp
dec
mov
or
retf
pop
gs
push
inc
adc
push
cmp
sub
cmc
push
dec
in
fsubr
mov
xchg
test
sbb
xlat
xchg
data16
and
pop
push
inc
adc
dec
mov
lock
out
inc
(bad)
mov
or
cli
je
cmc
enter
xchg
fisubr
jl
or
xor
scas
loope
adc
shl
popa
ss
fisub
fs
ja
push
pushf
lea
jmp
movzx
clc
rol
and
sbb
shr
jmp
call
push
push
mov
mov
mov
shl
lea
call
adc
sub
jne
mov
sub
pop
pop
ret
jmp
clc
cmc
cmp
pusha
mov
pushf
sbb
pushf
stc
lea
clc
call
cmp
mov
pushf
pushf
call
stos
pushf
push
lea
jmp
not
mov
push
pusha
mov
jmp
add
dec
outs
arpl
inc
ins
ins
outs
arpl
clc
not
bt
cmc
call
xchg
jmp
mov
aad
mov
loopne
stos
jg
in
adc
repnz
imul
fsub
out
aas
outs
pop
sub
data16
push
out
cmp
mov
and
xchg
stos
popf
ins
inc
push
sti
push
outs
inc
push
sub
mov
mov
leave
xchg
arpl
cld
inc
mov
push
push
inc
xchg
loop
ss
std
xor
mov
adc
and
sbb
imul
or
inc
push
aas
xchg
out
mov
in
sub
and
mov
jmp
call
lea
jbe
neg
bt
sub
neg
mov
pusha
mov
clc
cmp
cmc
add
clc
not
neg
shr
bts
bsr
mov
call
test
jmp
mov
test
push
call
push
push
call
lea
jae
pushf
add
lea
jp
pushf
mov
push
push
mov
lea
jmp
mov
lea
jne
stc
sub
aaa
call
mov
movsx
call
push
call
call
jmp
mov
mov
jmp
pushf
mov
mov
pushf
lea
jne
pushf
push
push
mov
jmp
add
mov
call
add
pop
ret
call
push
sub
cmp
repnz
pushf
pusha
pushf
lea
jne
xor
mov
mov
and
pushf
sub
btc
rcr
lea
jmp
call
lea
jb
call
sbb
pushf
lea
mov
pushf
lea
jmp
lea
jae
jae
sub
pusha
lahf
lea
jmp
push
push
lea
call
bsr
bswap
neg
bts
add
xadd
pop
adc
setg
pusha
mov
stc
cmp
mov
cmp
jmp
mov
call
mov
push
push
lea
jmp
push
lock
std
std
adc
pop
mov
ret
jnp
(bad)
rol
lea
rcr
int
xor
and
sub
jge
dec
in
mov
in
and
aam
pop
iret
add
jmp
aaa
test
(bad)
std
xchg
loope
mov
mov
push
xchg
and
xchg
push
out
fs
dec
popa
mov
retf
mov
enter
fiadd
call
pusha
lea
ja
pusha
call
lea
jne
bsf
pushf
mov
pusha
add
cmp
stc
test
bt
movzx
btr
mov
pusha
mov
add
cmp
pushf
mov
jmp
call
mov
jmp
shr
rcr
mov
pushf
cmp
pushf
mov
pushf
lea
jo
jne
neg
aad
sub
not
dec
mov
shr
bt
add
and
mov
clc
test
stc
clc
test
pusha
jmp
call
bt
ror
cmp
xor
cmc
push
clc
call
pusha
pushf
jmp
pushf
mov
push
stos
mov
mov
mov
mov
mov
mov
lea
jmp
movsx
bswap
movsx
jmp
stos
jle
fstp
loop
mov
mov
imul
mov
cmps
daa
jb
cld
into
cmp
jl
sar
jp
in
adc
lods
pop
out
test
inc
jl
mov
push
shl
mov
push
pop
scas
add
cmps
sub
nop
sub
aam
adc
in
add
add
mov
fmul
fadd
push
mov
inc
repz
push
bnd
xchg
out
or
adc
jno
(bad)
jge
dec
dec
cdq
push
test
rcr
fs
jne
lahf
lea
mov
pushf
lea
mov
cwde
lea
jmp
cmp
shl
jmp
xchg
pusha
call
jmp
push
dec
dec
push
inc
push
dec
cs
ins
add
dec
mov
jmp
pushf
lea
jb
push
xor
call
mov
sbb
cwde
pop
mov
(bad)
adc
xchg
jge
pop
or
sar
rcr
(bad)
jl
outs
pushf
gs
and
std
push
in
mov
movs
jp
data16
dec
mov
(bad)
and
pop
fucomip
jle
arpl
lahf
(bad)
daa
cdq
mov
data16
cmp
clc
dec
(bad)
inc
cmc
shl
xchg
addr16
out
movs
jbe
adc
mov
lea
cld
cmps
js
or
xchg
pusha
xchg
adc
mov
sbb
ret
cwde
mov
sbb
mov
inc
or
sar
pop
(bad)
xor
mov
sbb
cwde
pop
call
mov
outs
push
mov
push
xor
sub
cmovne
aad
mov
jmp
add
fcmovne
cwde
pop
repz
bound
outs
mov
data16
lahf
test
fst
addr16
stc
retf
mov
sti
mov
push
push
pushf
mov
not
push
push
pushf
mov
call
push
mov
bt
stc
cmp
jmp
xadd
pop
clc
rcl
bts
pop
movsx
pusha
inc
xor
mov
clc
rol
mov
not
mov
cmc
bt
bt
stc
add
call
pushf
sub
call
mov
push
xchg
call
lea
jg
jbe
pushf
neg
mov
sbb
xor
add
stc
shl
ror
adc
mov
movsx
sar
add
test
cmc
mov
inc
mov
and
shr
shld
push
mov
pushf
cmp
jmp
lods
clc
cmc
bt
not
stc
push
pushf
push
ror
pushf
bt
cmc
xor
stc
jmp
call
mov
dec
movzx
movzx
mov
test
mov
shld
stc
mov
sar
sub
bts
sbb
or
rol
mov
dec
sub
ror
mov
shld
bts
xor
sub
bt
call
mov
mov
movsx
pop
lea
push
jmp
or
push
xchg
pop
mov
inc
push
add
(bad)
fs
dec
mov
loope
pop
sub
in
add
pop
in
jmp
(bad)
test
cmps
es
dec
mov
mov
mov
dec
mov
es
push
push
cmp
or
(bad)
scas
adc
jg
push
(bad)
mov
mov
or
lock
cmp
hlt
(bad)
sahf
jae
pop
xor
pop
aad
iret
rcl
addr16
jne
popf
scas
mov
fsub
mov
xchg
push
movs
cmc
icebp
jecxz
imul
dec
(bad)
rcl
mov
shr
pop
mov
or
scas
popf
and
(bad)
(bad)
(bad)
and
and
lds
xchg
aad
push
sbb
or
mov
mov
xlat
dec
mov
xchg
push
dec
aas
nop
(bad)
cdq
add
fist
push
in
sub
xchg
out
movs
test
pushf
fld
mov
adc
cmps
ja
mov
fsubr
push
lahf
sub
xchg
int
jae
adc
push
jo
mov
mov
jg
shr
sub
mov
mov
dec
cmp
sti
jbe
add
adc
jmp
call
jnp
pushf
pushf
pushf
mov
jmp
mov
neg
clc
cmc
cmp
pushf
jmp
cmp
push
call
mov
jmp
mov
setb
not
lods
clc
cmc
stc
not
pushf
cmp
cmp
cmp
neg
call
outs
cmp
mov
jo
push
daa
lds
xchg
in
and
scas
popf
outs
inc
ds
out
ds
cmp
pop
xchg
(bad)
in
pushf
int3
xchg
aad
(bad)
jecxz
cmps
or
loope
sbb
retf
jnp
or
and
mov
cmp
jecxz
cld
fld
sub
out
cli
sar
sub
sete
lea
setbe
pop
xchg
pop
movsx
call
out
dec
adc
push
pop
call
dec
push
cmps
enter
dec
sbb
fmulp
add
add
mov
pop
dec
test
int
sbb
jmp
jnp
in
push
lods
and
xchg
enter
ins
pop
mov
call
dec
jb
jo
fnsave
xor
ins
xor
pop
xchg
push
outs
mov
into
mov
in
jmp
inc
sub
and
in
popf
in
lock
push
mov
int3
sbb
or
leave
cwde
pop
sub
jle
js
fbld
jns
mov
cmp
and
mov
dec
call
or
outs
mov
push
icebp
jmp
aas
dec
sahf
push
add
std
out
mov
inc
xor
int
cmp
mov
inc
inc
cld
imul
cli
retf
loopne
mov
imul
pop
(bad)
shr
dec
pushf
push
jns
and
sub
jmp
popf
sbb
push
and
int
jne
gs
xor
fs
ins
add
popf
pop
(bad)
(bad)
jmp
mov
lea
pushf
mov
pusha
call
mov
lea
jne
lea
push
pusha
mov
pushf
push
lea
pop
mov
jmp
outs
mov
mov
mov
jp
pop
xchg
dec
sbb
sbb
fidivr
hlt
scas
xor
push
icebp
push
nop
jnp
mov
fsubr
push
imul
mov
mov
loopne
dec
cmp
jmp
inc
repz
adc
das
jle
test
or
shl
ins
pop
das
xor
cwde
jmp
pop
das
mov
and
adc
fsubr
or
lock
pop
rcl
stos
popf
ins
sbb
jbe
imul
push
mov
les
shl
bound
inc
(bad)
mov
test
xor
icebp
out
aas
mov
sub
mov
retf
call
movs
js
sbb
popf
sub
mov
dec
movs
test
dec
bound
xor
rcr
add
or
ss
fcmovnu
into
mov
ins
jne
aaa
add
ins
pop
cmp
movs
push
add
mov
sub
psraw
aaa
leave
sbb
fld
int
mov
add
push
inc
xchg
or
stos
jnp
sbb
jmp
test
dec
mov
xchg
idiv
jmp
push
push
mov
sbb
(bad)
stc
xor
push
xor
sub
lahf
mov
call
mov
loope
adc
stos
pop
js
repz
xchg
pop
cwde
pop
xchg
scas
cmp
sbb
lds
ins
call
fwait
out
outs
or
lods
add
or
ds
psubusw
aas
sub
or
mov
lahf
gs
loop
movs
xchg
pop
lods
(bad)
mov
(bad)
popf
icebp
or
scas
adc
ror
mov
(bad)
sub
sbb
icebp
xchg
paddb
sar
mov
pop
xor
ja
and
mov
scas
xchg
(bad)
mov
lock
inc
adc
cmp
sub
addr16
xchg
cmc
inc
sbb
sti
adc
sbb
sbb
mov
pop
lods
or
dec
xchg
pop
mov
inc
xchg
adc
cmp
popa
js
pop
je
fmul
mov
xor
cmc
popa
iret
(bad)
sti
int
adc
push
pop
or
arpl
stc
dec
mov
mov
cmp
ret
shl
fsubr
popf
dec
fcmovbe
mov
mov
adc
mov
adc
fidiv
(bad)
cld
or
xchg
imul
fnstsw
jo
cmp
xor
ja
fucomip
mov
inc
sbb
xor
push
icebp
arpl
arpl
(bad)
out
rcr
pop
and
in
push
sub
xor
lahf
inc
xchg
fsubr
jo
push
in
pop
and
aam
mov
repnz
daa
test
inc
jb
ror
jmp
cmp
jmp
jmp
jmp
jae
push
pushf
lea
jb
neg
jmp
cmp
mov
lea
jbe
jmp
add
pusha
test
cmc
mov
clc
push
test
jmp
and
rcl
mov
jmp
mov
jne
icebp
fs
fcomp
cwde
mov
jmp
loope
test
pop
mov
dec
sbb
sub
push
sub
xchg
psubd
pop
std
out
ins
shr
inc
jmp
sub
pop
cmp
push
mov
jl
pop
test
rcl
iret
jp
fld
cld
out
mov
repz
mov
lods
addr16
popf
sbb
dec
mov
mov
mov
pop
xchg
sub
pop
dec
jae
push
mov
xor
xchg
jecxz
inc
jecxz
sub
mov
call
test
test
push
sub
test
test
push
pop
jmp
stos
mov
push
push
pusha
lea
jmp
call
call
pushf
not
rcl
rcl
inc
shr
mov
lea
das
daa
dec
cmc
add
cwde
lahf
push
setb
lea
lea
pushf
mov
push
lea
call
pusha
pusha
push
push
adc
call
jmp
mov
mov
pusha
push
push
lea
jmp
call
call
call
clc
xchg
and
movsx
cmc
sub
xchg
stc
lea
neg
mov
pushf
push
not
inc
add
jmp
pusha
mov
pushf
mov
lea
call
push
pusha
pushf
mov
pusha
push
lea
jmp
lea
call
pusha
adc
mov
pushf
pusha
lea
jb
pushf
clc
xor
cmp
push
test
not
not
pusha
mov
mov
mov
push
pushf
lea
jmp
lea
jb
test
xor
test
test
pushf
push
mov
push
lea
je
bswap
lea
push
push
lea
call
pusha
push
call
cmp
jmp
lea
jne
not
xor
shld
mov
rol
test
add
inc
cmp
sbb
jmp
call
pusha
cmp
push
call
push
mov
jmp
jmp
push
call
jmp
mov
mov
call
adc
pushf
pusha
jmp
sar
xchg
xadd
add
cmc
xchg
mov
inc
sbb
mov
cmp
cmp
mov
pusha
lea
jmp
lea
pusha
jmp
pusha
lea
ja
pushf
lea
jb
test
xor
cmc
bt
test
test
setle
call
pusha
lea
jb
bswap
pushf
sub
setnp
mov
sbb
clc
not
shl
sete
mov
cmc
add
call
pushf
lea
ja
pushf
pusha
push
pushf
lea
jb
cmp
cmp
pushf
lea
jne
bts
mov
jmp
lea
call
push
jmp
movsx
pop
sar
mov
shld
inc
daa
cmp
cwde
mov
push
jmp
movzx
mov
jmp
lea
call
jmp
setno
mov
bsr
xadd
mov
xor
test
sbb
sub
mov
mov
dec
ror
shr
mov
mov
pusha
bt
mov
mov
rcr
cmc
mov
and
pusha
mov
shr
mov
pushf
test
sub
or
mov
shrd
adc
bswap
mov
or
bsf
adc
sub
bsr
btr
rol
and
aas
add
mov
clc
cmc
cmc
shl
test
test
add
pushf
jmp
mov
mov
or
test
in
into
sbb
in
cmp
rcl
sbb
je
adc
test
loop
cmps
xchg
fs
push
out
mov
jne
sbb
std
ja
ja
stc
jmp
cmp
pop
jmp
jmp
sbb
lea
ret
xchg
fs
mov
lahf
xchg
out
int3
call
ror
xor
(bad)
movd
add
mov
fild
aad
adc
pop
test
ud2
add
ret
add
ror
cmp
push
gs
aad
dec
xchg
imul
sub
add
in
sub
loop
mov
add
mov
popa
xchg
les
repz
sub
fs
jbe
test
mov
rol
bsf
add
jmp
sbb
mov
push
pushf
repnz
pushf
pusha
push
jmp
bswap
setb
cwde
pushf
call
lea
call
mov
pushf
pushf
inc
sub
jno
pushf
push
not
mov
stc
call
mov
call
add
push
imul
jo
outs
add
jb
test
jmp
hlt
inc
inc
or
xor
push
iret
mov
push
sub
int3
mov
test
cmp
and
lods
dec
jae
sar
adc
in
jecxz
mov
cmc
rcl
or
cs
ret
and
fwait
ins
dec
cdq
fsubr
es
or
addr16
sub
scas
adc
popf
out
and
mov
dec
push
inc
pop
and
jbe
movs
jmp
iret
mov
mov
mov
rol
push
mov
jo
test
pop
movsx
bswap
cwde
lea
movsx
movzx
bswap
movzx
mov
push
lea
ja
pushf
push
mov
call
lea
ja
push
pushf
lea
jne
pushf
call
sbb
push
test
mov
lea
lea
stc
clc
push
pushf
mov
shl
xchg
bsr
movzx
lea
sub
movzx
mov
mov
push
not
not
push
add
setne
sete
pusha
push
rep
mov
pushf
mov
push
push
sets
mov
call
push
push
pop
pusha
push
lea
jmp
jmp
cmc
add
pusha
mov
jmp
mov
call
rol
jmp
movsx
mov
seto
jmp
mov
pushf
mov
push
call
pusha
call
add
pushf
mov
mov
lea
jmp
mov
pushf
pusha
pushf
push
lea
jmp
jmp
mov
pusha
mov
pusha
push
jmp
call
mov
pusha
mov
pushf
mov
lea
jmp
push
push
pop
mov
lea
jmp
shl
neg
aaa
lea
stc
clc
cmp
push
lea
ja
mov
bsr
stc
mov
xchg
bts
bswap
lea
add
shl
bts
sub
movsx
mov
stc
lea
movzx
btr
and
bt
bsf
stc
sub
mov
mov
jmp
rcr
aad
mov
bt
call
pusha
jmp
mov
push
pop
pushf
lea
jmp
push
push
pop
mov
lea
jmp
neg
mov
sar
ror
add
not
mov
pushf
push
mov
call
mov
mov
call
mov
pushf
call
push
pushf
push
pop
mov
mov
lea
jmp
push
mov
jmp
call
cmc
cmp
xor
mov
neg
bt
lea
jne
rol
test
push
clc
pusha
neg
pusha
call
jmp
rcr
shrd
jmp
push
pusha
mov
push
pusha
lea
jmp
pusha
mov
jmp
jmp
push
call
jmp
mov
lea
jne
rol
neg
sar
xor
seto
jmp
jmp
call
jmp
mov
jmp
push
jmp
jmp
call
not
test
mov
rdtsc
mov
rcr
mov
shr
js
test
mov
clc
add
stc
stc
cmp
shrd
push
mov
lea
jg
mov
jmp
shl
bts
daa
aad
mov
rcl
xor
mov
cmc
clc
sub
stc
pushf
stc
shr
pusha
pusha
mov
pushf
mov
mov
pushf
push
lea
jb
pushf
push
jmp
pushf
repz
pop
pushf
call
jmp
ror
add
xor
not
mov
clc
sub
pusha
bt
add
mov
pushf
pusha
pushf
pushf
pop
call
call
stc
cmp
sar
and
mov
rol
shl
mov
call
pushf
mov
push
mov
call
repz
pop
mov
pushf
mov
jmp
push
pushf
push
pop
pushf
pushf
mov
pushf
lea
jmp
push
mov
jmp
mov
push
push
pop
mov
pushf
pushf
lea
jmp
mov
lea
jle
push
jmp
clc
btc
rol
mov
bsr
cmp
mov
pusha
clc
add
mov
call
jmp
push
pusha
push
mov
call
push
mov
call
lea
jae
pushf
call
pusha
mov
pusha
mov
jmp
jmp
pushf
call
lea
jb
pusha
pushf
pop
lea
jae
pushf
pushf
push
pop
mov
lea
jmp
mov
test
sub
push
lea
jne
cmc
jmp
push
mov
mov
mov
mov
mov
push
pop
mov
pushf
mov
mov
lea
jmp
mov
mov
dec
push
call
inc
mov
cbw
pusha
stc
cmc
cwde
pushf
test
cmp
sub
jmp
xadd
shrd
movzx
bt
lea
add
btc
dec
sub
pushf
movsx
movzx
rol
btc
clc
shr
bts
neg
rcl
add
shl
btr
pushf
mov
call
call
cbw
pushf
stc
bt
cwde
pusha
bt
sub
call
clc
mov
cmp
push
pushf
clc
sub
bt
stc
push
mov
sub
jmp
mov
mov
mov
push
lea
jmp
call
mov
call
cmp
jmp
mov
adc
mov
pushf
shl
mov
cmp
sub
jne
pushf
add
mov
push
mov
mov
pushf
lea
jmp
mov
jmp
pusha
call
xor
mov
push
inc
mov
cmp
call
sub
jmp
mov
push
jmp
mov
pusha
pusha
repz
pop
pushf
mov
call
pushf
pop
call
push
pop
pop
pushf
push
lea
jmp
mov
pushf
pushf
mov
lea
jmp
push
mov
pushf
pop
mov
push
pushf
push
pop
mov
lea
jmp
push
call
inc
sbb
pushf
mov
neg
bt
clc
neg
mov
push
sub
cmc
mov
stc
shr
pusha
mov
jmp
call
call
jmp
pushf
pushf
pop
call
rol
test
cmc
test
neg
call
cbw
cmp
push
stc
cmp
cwde
cmc
jmp
pushf
call
push
mov
pushf
mov
lea
jmp
not
rcl
not
not
aaa
clc
mov
push
sub
bt
jmp
jmp
pushf
mov
push
lea
jmp
jmp
mov
xor
call
call
push
pop
mov
lea
jmp
xor
cmc
clc
cmc
cwde
cmc
bt
stc
sub
jmp
bt
push
jmp
bt
cmp
stc
lea
bt
pushf
clc
sub
mov
lea
js
pusha
push
mov
push
pushf
push
lea
jmp
mov
push
jmp
adc
movsx
neg
mov
cmp
pusha
xor
jmp
push
pushf
mov
push
lea
jmp
push
pop
pushf
mov
lea
jmp
mov
push
mov
push
mov
pusha
push
call
pushf
mov
jmp
pushf
pushf
mov
push
lea
jg
pushf
pushf
mov
pushf
pusha
mov
push
mov
push
push
jmp
mov
pushf
mov
call
movsx
mov
stc
pushf
bt
sub
pusha
pusha
pushf
push
mov
push
mov
mov
lea
jmp
pusha
inc
jmp
pushf
mov
mov
mov
call
mov
lea
jne
call
call
movzx
push
cwde
xchg
mov
push
bswap
mov
mov
pushf
call
jmp
mov
jmp
mov
mov
repz
pop
call
pusha
push
mov
mov
mov
mov
pusha
lea
jmp
stc
not
stc
not
test
pusha
sub
cmp
pushf
and
jmp
pushf
mov
push
push
push
push
lea
jmp
lea
je
pushf
mov
mov
jmp
mov
push
call
call
jmp
mov
jmp
cmc
push
push
add
jmp
jmp
pushf
push
jmp
pushf
mov
call
mov
pushf
mov
push
pushf
lea
jmp
call
jmp
mov
lea
movsx
push
xchg
bswap
push
jmp
push
pusha
push
pop
push
push
push
mov
lea
jmp
pushf
pushf
pop
pushf
call
mov
pushf
push
lea
jmp
mov
pushf
mov
push
lea
jmp
repz
pop
pushf
push
call
call
call
pushf
pusha
pushf
push
pop
mov
lea
jmp
mov
pusha
sub
shrd
not
add
lea
bswap
add
cmc
cmc
dec
ror
not
setb
push
sub
mov
mov
dec
add
inc
dec
lea
lea
lea
bswap
pushf
movzx
jmp
mov
push
mov
call
pushf
mov
pushf
mov
pushf
mov
jmp
push
pop
sub
movsx
xchg
and
push
lea
push
pusha
sub
mov
xchg
bt
add
rcr
movsx
ror
test
bswap
bt
lea
xor
pusha
add
sub
not
lea
xchg
sar
mov
btr
bt
mov
sete
bt
sbb
cmc
add
neg
mov
setae
add
bts
btc
add
sub
rol
add
bts
ror
add
mov
not
ror
neg
sub
movsx
test
add
inc
movzx
jmp
mov
jmp
div
push
call
test
xor
stc
test
xchg
push
call
pushf
mov
jmp
clc
sub
bt
cmc
rol
mov
push
mov
push
sub
bt
cmp
bt
sub
mov
mov
inc
push
stc
mov
bt
cmc
sub
mov
mov
mov
mov
mov
mov
lea
jmp
jmp
mov
pusha
pushf
mov
mov
lea
jmp
mov
push
call
call
pusha
push
pop
mov
push
lea
jmp
pushf
jmp
mov
mov
call
pushf
jmp
mov
inc
pushf
bt
sub
mov
jmp
neg
test
pusha
movzx
test
xor
test
neg
push
movsx
rol
bsf
dec
movsx
neg
xor
neg
or
adc
xor
and
shld
test
movzx
bswap
shrd
sub
bt
das
stc
lea
cmc
cmp
clc
clc
mov
cmc
call
push
pushf
mov
jmp
mov
mov
push
pop
pushf
pushf
push
mov
lea
jmp
pusha
mov
mov
mov
jmp
call
call
xor
push
jmp
mov
mov
push
call
pushf
mov
push
push
ret
pushf
clc
add
pusha
pushf
call
push
popf
pushf
lea
jmp
mov
jmp
push
mov
mov
lea
jmp
call
mov
mov
mov
lea
jmp
mov
not
pusha
mov
mov
push
push
mov
lea
cpuid
pusha
stc
sub
stc
cmp
jmp
push
mov
jmp
inc
shl
mov
pusha
cmp
cmp
xor
sub
jbe
neg
pushf
rol
jmp
mov
repz
pop
push
mov
call
push
pushf
mov
not
setnp
mov
jns
not
sets
push
call
mov
push
mov
mov
call
mov
pusha
pusha
push
pop
mov
pushf
mov
push
lea
jmp
pusha
neg
bt
rol
pushf
cmc
neg
cmp
call
mov
mov
call
mov
pushf
mov
pushf
pusha
lea
jmp
mov
pusha
ror
push
pushf
jmp
mov
mov
pusha
mov
pusha
call
jmp
push
repz
pop
pushf
call
mov
pushf
pushf
mov
jmp
cmp
clc
stc
sub
push
cmp
jmp
mov
pushf
mov
mov
lea
jmp
push
pop
push
lea
jmp
mov
mov
push
jmp
rcl
xor
rcl
bts
mov
and
push
cmp
or
mov
pushf
cmp
sub
mov
bt
shr
push
mov
pusha
call
jmp
push
pushf
pop
pusha
mov
call
mov
push
push
mov
jmp
or
cmc
neg
shl
mov
add
sar
cmc
mov
clc
sub
test
cmc
shl
pushf
mov
pushf
jmp
not
cwde
mov
push
jmp
pushf
jmp
mov
call
call
push
call
call
mov
push
pushf
pop
pusha
jmp
mov
call
push
call
cmp
adc
lahf
mov
cmc
sub
cmc
pusha
stc
lea
jo
add
jmp
pushf
mov
mov
mov
pushf
pushf
lea
jmp
mov
jmp
mov
jmp
call
push
pop
push
lea
jmp
push
push
call
call
cmc
add
pusha
jmp
mov
call
mov
call
mov
push
and
pusha
pushf
cmp
call
jmp
mov
mov
mov
pusha
mov
lea
jmp
cmc
mov
ror
call
mov
pushf
mov
pushf
mov
lea
jmp
shr
bsf
mov
sbb
bt
add
pushf
mov
lea
ja
push
push
mov
push
push
lea
jmp
jmp
call
push
setno
mov
pusha
repz
pop
or
xchg
movzx
call
bt
rcr
stc
shr
mov
shl
shl
mov
stc
mov
cmp
clc
add
test
bt
push
shld
pusha
mov
pusha
mov
pushf
pop
pushf
push
pushf
push
pop
mov
lea
jmp
mov
jmp
pushf
pushf
pop
call
mov
pushf
mov
call
jmp
pusha
add
bt
add
jl
popf
pushf
pushf
pushf
lea
jmp
push
pushf
mov
push
pushf
mov
call
pushf
mov
jmp
mov
cmc
pusha
add
pusha
push
mov
push
lea
jmp
push
pop
push
push
mov
lea
jmp
mov
push
pop
push
mov
lea
jmp
call
rcr
rol
seta
lea
clc
bsf
sub
ror
mov
mov
shr
rcr
not
mov
test
and
bsf
shl
add
xchg
xchg
jmp
mov
jmp
push
mov
pushf
pushf
call
clc
jmp
jmp
lea
jbe
push
pusha
mov
lea
jmp
push
pop
push
push
push
lea
jmp
bswap
push
jmp
pushf
and
push
pushf
mov
pushf
pop
push
call
xor
cmc
sub
push
jmp
clc
cmp
sub
test
pusha
call
mov
call
shl
cmp
mov
mov
bt
add
stc
push
shrd
mov
jmp
mov
push
mov
call
push
pop
pushf
lea
jmp
mov
jmp
jmp
neg
pusha
cmc
bt
ror
call
cmc
sub
jmp
dec
not
add
and
mov
clc
add
stc
pusha
jmp
push
mov
mov
pushf
push
mov
push
push
mov
mov
mov
push
call
cmp
sub
sar
neg
sar
sub
clc
btr
neg
setb
bswap
ror
xor
push
rol
shl
sub
call
mov
push
pushf
mov
push
pushf
call
bswap
push
lea
setno
push
jmp
push
pushf
jmp
call
shr
adc
daa
mov
push
shl
dec
clc
mov
cmc
call
mov
call
sar
movsx
rcl
movzx
rol
sub
setg
movsx
and
btr
sub
movzx
bt
rol
sar
adc
movzx
sub
shl
pusha
sub
and
mov
pusha
cmp
bt
add
stc
sub
pushf
mov
pushf
mov
lea
jmp
shld
and
xchg
rdtsc
clc
sub
pusha
mov
call
bt
xor
call
jmp
call
push
mov
mov
call
push
pusha
ror
pushf
inc
call
bts
rcl
movzx
call
xor
mov
stc
cmc
sub
pushf
push
call
sets
jmp
pusha
inc
push
sub
call
mov
pushf
jmp
jmp
ror
shr
push
sar
movzx
mov
test
clc
test
sub
pushf
pushf
sub
stc
cmp
pushf
call
push
jmp
jmp
test
jmp
jmp
push
sub
pushf
mov
mov
pushf
pushf
pushf
mov
lea
jmp
push
jmp
mov
mov
mov
mov
lea
jmp
shrd
neg
shl
das
mov
pushf
ror
dec
mov
pushf
jmp
pushf
jmp
jmp
mov
pushf
mov
pushf
pushf
pop
call
jmp
mov
mov
pushf
call
jmp
push
pop
push
lea
jmp
call
shl
mov
mov
sbb
sub
shl
sbb
mov
push
test
pusha
sub
push
pushf
call
neg
test
jmp
mov
jmp
jmp
shl
mov
pushf
mov
pusha
pushf
pushf
pop
jmp
mov
mov
jmp
pushf
repz
pop
call
call
mov
cmp
cmc
sub
mov
mov
pushf
call
push
dec
mov
pushf
push
mov
pushf
pushf
pushf
pushf
push
ret
cmp
bswap
call
sbb
or
jmp
add
mov
mov
pushf
push
mov
mov
mov
call
shl
pusha
movzx
jmp
pusha
mov
push
push
pushf
mov
lea
jmp
bts
or
shr
pushf
movzx
stc
clc
bt
xor
add
jl
bt
sub
bt
bt
pusha
ror
pusha
inc
stc
stc
clc
pushf
ror
jmp
inc
cmp
mov
cbw
stc
pushf
stc
cwde
stc
stc
test
stc
sub
call
push
mov
call
jmp
mov
push
pusha
lea
jmp
call
call
cmc
call
mov
repz
pop
call
mov
mov
mov
lea
jmp
jmp
inc
jmp
bsf
lahf
shrd
mov
ror
mov
test
clc
not
stc
pushf
clc
call
push
jmp
pusha
mov
mov
pushf
call
push
clc
cmp
bt
add
pushf
call
pusha
bt
add
pusha
mov
mov
push
lea
jmp
clc
call
jmp
movzx
cwde
pop
push
push
ret
mov
call
push
bts
lahf
cmp
mov
cmp
pushf
bt
sub
pushf
mov
mov
push
mov
push
push
lea
jmp
mov
pushf
pusha
mov
call
jmp
push
mov
call
mov
lea
jns
push
mov
push
lea
jmp
jmp
bt
cmc
or
push
pushf
jmp
push
push
pop
push
pushf
pushf
pusha
lea
jmp
jmp
push
xor
call
neg
mov
jmp
mov
mov
push
mov
pushf
call
call
jmp
jmp
cmc
xor
cmc
jmp
jmp
mov
call
jns
sbb
sar
ror
mov
push
bt
stc
cmp
xor
lea
jbe
pushf
clc
clc
neg
clc
bt
bt
rol
mov
clc
push
cmc
neg
pushf
pusha
xor
call
setl
mov
mov
movsx
push
mov
mov
jmp
stc
rol
jmp
pushf
pushf
push
push
pop
pusha
mov
lea
jmp
mov
jmp
push
pop
mov
mov
pushf
push
lea
jmp
ror
push
jmp
push
mov
mov
pushf
call
shl
adc
bt
movzx
call
jmp
repz
pop
jmp
call
repz
pop
mov
pushf
push
jmp
movzx
mov
jmp
pusha
pusha
call
cld
push
jmp
mov
call
push
jmp
clc
rol
mov
test
add
call
inc
call
cmc
cmc
stc
add
pushf
pushf
pop
call
call
push
mov
push
pop
mov
push
pushf
mov
lea
jmp
mov
mov
push
pop
mov
push
lea
jmp
mov
call
mov
call
sbb
mov
or
pushf
shr
or
mov
bt
clc
add
push
mov
push
pusha
lea
jmp
push
pop
mov
pushf
push
lea
jmp
mov
pushf
call
pusha
push
jmp
push
call
pusha
call
push
lea
je
cmp
test
jmp
pusha
pusha
mov
pushf
mov
pushf
pushf
mov
jmp
mov
mov
mov
mov
lea
jmp
mov
push
push
push
ret
mov
mov
pusha
push
push
mov
pushf
call
adc
bsr
mov
call
pushf
pop
lea
jb
push
mov
push
pop
pushf
push
pusha
lea
jmp
js
push
sub
stc
cmc
push
ror
pushf
lea
jp
pusha
inc
cmc
clc
stc
ror
cmp
test
xor
stc
mov
mov
sub
call
adc
stc
bt
mov
cmc
sbb
pop
lahf
pop
aam
shld
rdtsc
pop
bsf
popf
movzx
lahf
pusha
mov
xchg
mov
not
xchg
mov
lahf
mov
lahf
lea
mov
xchg
cwde
mov
seto
lea
jg
pop
push
push
ret
mov
mov
jmp
push
pop
push
mov
lea
jmp
das
shrd
mov
test
shl
mov
jmp
mov
mov
push
mov
jmp
bt
push
mov
sub
jmp
not
clc
pusha
and
jmp
mov
call
jmp
push
mov
jmp
pusha
mov
pusha
push
pop
mov
pushf
mov
lea
jmp
jmp
jmp
push
pop
mov
mov
lea
jmp
inc
bt
call
xor
push
pusha
mov
xchg
jmp
mov
test
cmp
cmp
add
pusha
call
pushf
push
call
mov
jmp
mov
pushf
pop
push
call
shrd
jmp
lea
jae
mov
push
push
push
mov
pusha
pushf
mov
pushf
lea
jmp
mov
pushf
jmp
xchg
std
mov
jmp
bt
shl
pushf
call
pushf
mov
push
mov
pushf
mov
mov
push
call
rep
btc
ror
clc
lea
mov
stc
lea
and
test
mov
cmc
std
push
popf
pusha
push
mov
push
lea
jmp
push
add
mov
call
pushf
pop
mov
call
push
push
repz
pop
push
call
mov
mov
jmp
push
push
push
pop
mov
lea
jmp
repz
pop
pushf
pusha
mov
call
cmp
test
lea
stc
jmp
pusha
xchg
pushf
sbb
push
pop
dec
mov
pop
pusha
btr
mov
adc
add
lea
lea
ror
bsf
sar
bswap
jmp
mov
call
mov
inc
add
gs
add
outs
inc
add
jo
add
js
add
jo
add
add
popa
inc
add
outs
inc
add
jns
add
add
pusha
inc
add
jne
add
add
gs
add
jl
add
ja
add
jl
add
jp
add
jbe
add
je
add
js
add
inc
add
je
add
jns
add
inc
add
inc
add
inc
add
popa
inc
add
inc
add
inc
add
inc
add
popa
inc
add
jae
add
inc
add
jb
add
add
gs
add
jns
add
jp
add
jns
add
test
out
inc
add
inc
add
inc
add
addr16
add
outs
inc
add
outs
inc
add
jne
add
jnp
add
pusha
inc
add
add
gs
add
je
add
inc
add
inc
add
jge
add
jo
add
add
inc
add
je
add
pop
inc
add
js
add
inc
add
inc
add
popa
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pusha
inc
add
inc
add
jo
add
add
jbe
add
inc
add
test
lods
jl
add
ja
add
jbe
add
ins
inc
add
je
add
ins
inc
add
inc
add
je
add
inc
add
jb
add
inc
add
test
cmp
add
je
add
jb
add
inc
add
outs
inc
add
inc
add
add
pop
inc
add
inc
add
jp
add
je
add
inc
add
popa
inc
add
js
add
jo
add
jns
add
pop
inc
add
inc
add
ins
inc
add
inc
add
test
dec
fs
add
popa
inc
add
jne
add
jo
add
jo
add
inc
add
jns
add
jbe
add
inc
add
jb
add
test
mov
test
(bad)
jns
add
jne
add
jge
add
inc
add
jp
add
outs
inc
add
pop
inc
add
je
add
add
jns
add
inc
add
jb
add
jne
add
inc
add
je
add
jp
add
inc
add
je
add
je
add
pusha
inc
add
pop
inc
add
inc
add
inc
add
test
mov
jbe
add
add
test
es
add
je
add
add
jp
add
inc
add
inc
add
inc
add
jbe
add
test
rol
inc
add
je
add
pop
inc
add
inc
add
jbe
add
jns
add
pop
inc
add
outs
inc
add
inc
add
jb
add
outs
inc
add
inc
add
popa
inc
add
inc
add
inc
add
outs
inc
add
inc
add
inc
add
inc
add
jb
add
outs
inc
add
test
test
add
je
add
inc
add
jp
add
jp
add
jns
add
inc
add
inc
add
jns
add
popa
inc
add
inc
add
outs
inc
add
pushf
call
xor
jmp
pushf
call
mov
call
add
add
mov
lea
jmp
mov
push
lea
jmp
pushf
mov
mov
push
pusha
lea
jmp
lea
jmp
push
pusha
pushf
mov
pusha
call
push
mov
mov
mov
push
pushf
lea
jmp
neg
jmp
call
mov
push
mov
mov
pusha
mov
mov
mov
mov
call
mov
push
mov
mov
push
ret
ror
stc
pusha
call
mov
jmp
push
jmp
mov
pushf
pushf
lea
jmp
pushf
jmp
sub
neg
sub
mov
bt
movzx
mov
call
repz
pop
mov
mov
lea
jg
push
pusha
mov
push
pop
push
mov
mov
mov
lea
jmp
jmp
mov
mov
lea
jmp
std
pushf
mov
std
cld
mov
std
jmp
repz
pop
push
pushf
mov
call
push
mov
pushf
pushf
call
lea
inc
not
setge
mov
movzx
pusha
bswap
jmp
das
shl
xadd
movsx
mov
btr
mov
clc
jae
pushf
add
pushf
push
call
call
mov
jmp
mov
jmp
jmp
pushf
pop
mov
push
pop
pusha
push
pushf
lea
jmp
pushf
lea
push
push
push
lea
jmp
mov
mov
call
rcr
xadd
shld
movzx
bswap
pop
not
bt
add
rcl
sub
sub
bts
pushf
not
rol
xor
neg
setle
jmp
jmp
pushf
pushf
pop
jmp
mov
push
mov
push
jmp
pop
inc
add
mov
bt
add
clc
xor
rcl
mov
clc
add
pushf
jmp
pushf
call
call
