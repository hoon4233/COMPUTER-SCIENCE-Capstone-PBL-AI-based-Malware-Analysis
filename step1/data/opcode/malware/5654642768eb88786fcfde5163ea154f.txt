ss
les
jo
mov
mov
retf
enter
cmp
cmps
push
(bad)
mov
movs
sbb
dec
loope
mov
mov
fidiv
adc
lods
or
sbb
jb
jo
test
pop
(bad)
outs
pop
ret
out
mov
in
mov
rcl
push
in
in
mov
mov
lock
mov
pushf
xchg
(bad)
cs
xchg
or
outs
jp
stc
lds
add
jg
mov
inc
retf
dec
mov
sbb
cmp
cmp
inc
shl
xor
cdq
fnstenv
jnp
sbb
movs
push
mov
mov
mov
sub
xlat
scas
call
test
int
sbb
in
push
repz
les
les
mov
jge
push
shl
fwait
loopne
inc
and
into
dec
xor
popa
jle
push
aad
ficomp
imul
in
popf
sar
popa
push
dec
mov
dec
imul
lock
dec
mov
jnp
mov
cld
jmp
mov
or
es
pop
in
cmp
inc
or
nop
jmp
jmp
mov
inc
sub
mov
and
or
jg
and
mov
xchg
adc
in
sbb
inc
xchg
scas
pushf
adc
rcl
rol
arpl
jbe
or
dec
fisub
jb
push
cmp
loope
lock
and
adc
inc
mov
stos
ss
xor
jmp
retf
add
pop
fs
and
stc
(bad)
xchg
nop
push
fsub
inc
pop
icebp
mov
cmc
rcr
test
inc
push
test
jbe
mov
in
or
push
push
or
inc
ds
fist
add
push
pushf
imul
es
cmp
inc
add
test
or
in
sahf
inc
sub
jp
sbb
ret
ins
sub
cli
fbld
dec
mov
sahf
retf
ss
sbb
(bad)
jae
inc
jp
jno
sahf
movs
ret
push
lea
out
mov
arpl
push
xor
fbstp
fidivr
mov
dec
mov
call
jo
ror
pop
outs
mov
xor
retf
mov
jno
mov
fcomip
jb
ja
aam
push
into
xlat
push
inc
retf
dec
jmp
mov
sahf
mov
cmp
adc
cdq
fsub
dec
pop
lods
ds
xor
fs
xlat
test
stos
lahf
clc
sbb
mov
test
mov
aam
loop
xchg
push
call
jmp
icebp
call
pop
mov
cli
inc
add
les
push
sbb
cmc
outs
and
mov
mov
sahf
fisubr
test
jno
shl
test
cli
neg
add
rcl
stc
xor
cdq
sbb
shl
fs
jmp
inc
out
pop
outs
int3
jp
(bad)
mov
sub
popa
xlat
repz
and
sti
xchg
sub
mov
adc
ds
scas
test
xchg
jle
movs
xchg
cmp
std
sub
jo
fbstp
and
cs
leave
adc
rcl
or
in
cld
push
lea
cdq
xchg
sub
sbb
clc
lods
dec
hlt
cmp
stc
jl
(bad)
xor
push
xchg
sbb
jmp
dec
inc
pop
leave
gs
hlt
sbb
or
mov
mov
add
jbe
enter
cmp
(bad)
shr
sahf
sub
int3
dec
push
std
push
push
repz
adc
adc
or
jbe
and
pop
sbb
aam
xchg
mov
loop
stos
cdq
pop
inc
mov
xchg
mov
dec
stos
mov
enter
cmp
jbe
push
repz
imul
pusha
mov
in
pop
push
sbb
xor
(bad)
xchg
jns
in
dec
cmp
gs
jp
in
jmp
in
mov
lods
or
and
fwait
or
push
shr
inc
popf
sbb
jnp
xlat
lahf
imul
ds
js
or
out
popf
pop
push
cmps
or
xchg
cmp
pop
or
es
test
int
mov
pusha
sub
iret
jae
mov
sbb
loope
cmps
test
fbstp
ret
adc
fwait
cmp
fbld
sbb
ja
sar
sahf
repz
movs
nop
mov
and
lods
dec
xor
mov
cmp
or
stos
mov
movs
xchg
int3
cli
imul
xchg
adc
jnp
lods
cmp
es
pop
or
fwait
cmps
inc
pop
movs
jl
pop
adc
cdq
(bad)
push
out
or
repnz
mov
cmc
cmc
pop
dec
mov
(bad)
mov
adc
sbb
ds
mov
pop
jl
aad
lock
test
cmp
adc
seto
mov
jg
mov
sub
scas
jae
cmp
test
xchg
sbb
enter
or
pop
fisubr
mov
dec
hlt
popa
stos
add
pop
push
add
addr16
mov
in
arpl
cs
fwait
or
hlt
sub
mov
mov
cld
xor
push
not
lods
push
or
xchg
or
movs
push
mov
sub
lds
cmps
and
dec
or
sbb
fmul
ds
clc
and
inc
xor
or
test
mov
out
cmp
xchg
and
stc
adc
cmp
lds
out
scas
outs
xor
xor
push
ins
mov
mov
test
sahf
mov
adc
add
imul
ret
pcmpeqw
icebp
js
or
sar
sti
stc
aas
cmp
and
arpl
pop
lods
pop
jae
js
jbe
add
xor
jle
mov
ja
fsub
fsubr
clc
movs
jae
aas
or
adc
xor
jbe
or
and
in
push
in
adc
in
mov
inc
jmp
inc
sbb
clc
sub
imul
stc
jmp
out
iret
pop
(bad)
lock
push
jl
and
and
je
xchg
lods
jb
mov
scas
ret
sbb
(bad)
scas
fist
enter
dec
loop
inc
fsub
mov
cmp
sbb
mov
cli
add
shl
jno
les
out
sbb
fbstp
jnp
pop
rol
pop
xor
jp
pop
jno
add
nop
dec
imul
popf
add
movs
repnz
into
jge
jl
xchg
dec
jae
shl
inc
mov
arpl
push
cmp
jg
sub
sbb
cdq
aas
(bad)
push
dec
inc
fldcw
cdq
popa
cmp
dec
jp
add
out
pop
pop
jmp
loope
xchg
mov
xor
mov
outs
sub
xor
xor
jmp
cmp
hlt
retf
push
call
sub
scas
mov
adc
add
(bad)
jp
jg
jmp
jnp
cmp
sbb
push
push
or
iret
lods
sbb
pop
sub
fild
cmp
jmp
sbb
out
loopne
dec
jp
jecxz
fadd
in
in
sub
fadd
jbe
(bad)
scas
dec
out
addr16
ffree
gs
add
and
(bad)
mov
mov
and
nop
pop
js
xchg
adc
fsubr
aas
aam
push
xchg
cs
adc
inc
mov
push
int
jbe
cld
sbb
std
adc
out
enter
sbb
xchg
sahf
fcom
cdq
fnstenv
imul
aad
or
dec
push
hlt
in
cwde
test
pop
(bad)
and
test
pusha
cli
add
jns
pop
add
std
or
jle
xor
loopne
(bad)
stc
inc
enter
xchg
pop
ins
jle
call
shr
push
mov
js
in
mov
ds
ror
push
lahf
pop
cmp
out
push
xchg
xorps
xchg
aaa
adc
pop
or
push
inc
(bad)
push
or
sbb
and
xchg
dec
pop
and
es
mov
pop
pop
push
pop
ds
in
xchg
cmps
jbe
jmp
inc
lods
and
pusha
mov
and
or
out
loop
mov
fldenv
das
xor
in
addr16
add
in
add
xor
pop
jmp
fisttp
push
cmps
scas
sbb
or
shr
aad
in
mov
add
sub
out
cmp
in
not
cmps
jns
stos
xchg
int3
xor
retf
loopne
push
mov
add
dec
inc
lahf
pop
add
movs
test
mov
pop
or
into
out
loope
iret
iret
or
mov
mov
jle
neg
push
jg
push
jle
pop
out
movs
cmp
stos
mov
pop
cmc
xchg
ins
call
mov
in
ds
imul
and
add
lds
loope
mov
xchg
sbb
das
out
sub
xchg
scas
xchg
push
mov
mov
or
xchg
mov
inc
nop
lods
xor
or
aaa
out
pop
pop
stc
mov
push
in
xor
dec
dec
cwde
mov
(bad)
(bad)
scas
jb
xchg
inc
jmp
jo
xor
adc
cmp
dec
out
int
loop
lock
nop
cmp
inc
addr16
jmp
jmp
inc
aad
pop
std
pop
xchg
mov
jl
stc
pusha
and
inc
in
jne
jb
imul
cld
(bad)
in
retf
mov
cwde
inc
inc
sub
add
sub
push
pop
sbb
pop
into
sti
fistp
popa
lea
add
outs
jo
xchg
pop
iret
xchg
out
xchg
or
jmp
dec
jbe
sbb
push
out
(bad)
sbb
xor
cs
scas
lds
and
sub
sahf
jb
(bad)
cmovl
push
inc
sub
pop
outs
and
repz
inc
cmp
mov
sahf
adc
and
add
and
ret
adc
inc
movs
jp
ds
push
jbe
(bad)
jmp
fcomi
sub
rol
hlt
push
ja
dec
clc
(bad)
aaa
sub
dec
fs
pop
push
push
or
inc
adc
push
mov
mov
sub
dec
mov
jle
dec
xor
jge
cld
and
movs
jmp
mov
and
push
arpl
add
in
shl
mov
(bad)
push
xor
xor
xlat
std
jns
lea
sbb
pusha
xchg
add
dec
dec
and
jae
pop
pop
sar
mov
add
ja
cmps
sahf
and
dec
mov
xchg
push
jae
ds
outs
mov
out
jne
shl
(bad)
in
push
dec
xchg
xchg
mov
je
xchg
ds
xor
ucomiss
mov
cmp
adc
jne
and
pushf
jne
xchg
jmp
lods
loopne
jmp
idiv
popf
arpl
add
out
lods
cmp
xchg
xchg
mov
add
push
cdq
push
sub
pop
out
pop
inc
ins
in
dec
add
(bad)
dec
bnd
aam
(bad)
cld
push
xchg
lock
push
cmp
out
lods
outs
lods
push
xchg
aad
movs
imul
mov
pop
cs
loop
xchg
lods
ret
xor
sub
mov
data16
test
inc
mov
or
gs
pusha
jae
inc
sbb
test
push
enter
inc
pop
loop
inc
fwait
lods
sar
mov
sub
jge
dec
xchg
mov
(bad)
inc
and
push
outs
dec
pop
imul
in
add
hlt
push
ret
mov
int3
inc
xor
outs
sub
mov
(bad)
jl
sub
test
pop
or
or
fisubr
ret
dec
add
fcmovu
pop
movs
jne
fwait
sub
ret
jnp
fwait
mov
call
jne
inc
sbb
push
outs
xchg
push
push
cmp
pop
mov
and
xor
movs
das
jle
lds
hlt
mov
inc
mov
fstp
xchg
push
xchg
call
mov
repnz
lods
pop
sbb
push
jp
stos
mov
into
push
imul
mov
cmp
jmp
and
outs
scas
mov
ins
test
push
push
jbe
push
bound
sub
(bad)
bound
mov
into
loope
ficom
fst
repz
or
adc
int3
and
scas
mov
cmp
adc
xchg
das
inc
outs
mov
mov
pop
mov
xchg
rcr
mov
jp
and
clc
sub
outs
repz
jp
push
mov
ins
jb
leave
fucomp
dec
xor
cmps
pop
mov
std
outs
inc
jb
clc
daa
(bad)
rcl
imul
cmp
lods
ins
mov
aad
push
pop
push
mov
inc
sbb
inc
jecxz
inc
ins
adc
and
test
ret
enter
aad
cmp
out
rol
jmp
pop
aam
jl
fldenv
out
xchg
aad
dec
loope
int3
sub
rcr
pop
mov
pop
jns
out
sar
jae
das
icebp
push
daa
dec
jmp
retf
push
pop
std
jp
mov
out
and
(bad)
dec
out
fisubr
ficom
or
mov
lock
add
mov
mov
mov
loop
pop
test
lock
in
push
jmp
mov
dec
jns
jbe
(bad)
mov
hlt
push
adc
lock
idiv
push
mov
mov
pop
loop
and
cmp
pop
clc
ja
cmp
jae
jnp
push
jno
inc
push
stos
and
aas
sysenter
rcr
das
out
sahf
aas
(bad)
loopne
repnz
pop
pop
pop
or
or
mov
and
fdiv
(bad)
iret
inc
sar
add
mov
(bad)
jmp
cmps
cmc
cwde
rcr
push
pop
inc
fistp
inc
inc
lods
mov
cmps
push
add
inc
inc
imul
dec
fucomp
ins
sbb
stos
push
push
bndldx
call
(bad)
pop
clc
pop
(bad)
jle
adc
xchg
icebp
(bad)
jo
ret
sbb
addr16
push
cmp
mov
leave
ror
(bad)
in
xlat
adc
push
inc
mov
(bad)
sub
sbb
daa
repnz
inc
sbb
jbe
imul
fcmovb
ja
cmp
mov
lock
mov
or
repnz
xchg
stos
cwde
mov
xchg
test
or
sbb
retf
and
jo
or
pop
pop
mov
mov
neg
push
in
mov
dec
or
cli
shl
out
sub
cdq
cmovne
xchg
jbe
(bad)
dec
cld
mov
dec
xlat
mov
movs
dec
call
jge
push
pop
into
fisub
cmp
jmp
dec
xchg
repnz
jo
nop
(bad)
icebp
pushf
mov
cli
leave
mov
inc
mov
js
and
push
imul
dec
popa
push
das
pusha
dec
cmp
jl
and
sbb
popa
stos
jmp
(bad)
(bad)
rcr
inc
aaa
movs
xlat
mov
retf
pop
push
retf
loope
inc
xchg
div
dec
(bad)
pop
mov
add
jne
cdq
popa
dec
lods
jae
dec
in
sti
mov
lock
sbb
fisub
test
shr
add
mov
push
clc
mov
sar
xchg
in
cmp
sub
adc
push
daa
mov
stos
nop
push
js
adc
xor
adc
sub
retf
imul
xchg
pop
add
dec
cmp
frstor
loop
sub
repz
js
cmp
cmp
loope
add
sar
ror
clc
sub
mov
inc
sub
retf
inc
xor
movs
adc
arpl
fcomp
lea
xchg
sar
rol
add
mov
icebp
not
js
movs
out
ret
jecxz
cld
lea
ja
inc
ss
ins
sar
rcr
int
jmp
add
mov
movs
cwde
loope
sub
cs
ins
ror
cmp
dec
aad
xchg
mov
hlt
pop
pusha
ds
sar
imul
mov
mov
push
in
pop
aaa
xchg
sub
jmp
jg
cmp
pusha
icebp
xchg
xor
mov
mov
and
or
cmp
lds
lods
stos
inc
jle
out
jecxz
jle
jnp
enter
mov
(bad)
cmp
push
mov
mov
inc
sbb
inc
outs
(bad)
call
ret
mov
cmp
clc
popf
add
outs
sbb
add
enter
mov
mov
cs
xchg
(bad)
inc
fcom
xor
lds
shr
movs
pop
retf
pop
test
add
jae
out
fldenv
sub
ins
mov
jae
mov
dec
cli
fstp
pop
add
mov
pop
ret
fcomp
add
out
pop
mov
mov
add
(bad)
iret
xchg
adc
and
mov
daa
xor
in
pushf
icebp
jl
fisubr
push
and
xor
sahf
cmps
sahf
loope
iret
or
retf
jnp
or
cdq
mov
dec
adc
sub
add
dec
jo
adc
mov
cmps
push
sub
(bad)
and
fdiv
fdiv
mov
aad
loopne
pop
cmp
cmp
ins
aaa
ret
das
add
arpl
test
dec
push
jb
add
mov
xlat
adc
cli
pop
in
int3
sbb
mov
outs
call
shr
into
in
mov
mov
les
or
cli
popa
frstpm(287
and
mov
pop
mov
or
push
xchg
test
sbb
ds
push
popf
mov
in
inc
adc
xchg
and
cmps
out
rcl
jmp
pop
stos
xchg
in
test
in
and
mov
aas
call
jno
jp
mov
out
ins
dec
mov
xor
jl
push
arpl
mov
shr
xchg
movs
push
test
(bad)
out
aaa
mov
sub
repnz
sbb
aam
push
mov
pop
inc
and
adc
dec
sbb
adc
xor
dec
je
pop
leave
add
fs
mov
mov
cmp
push
dec
out
cwde
mov
and
retf
xchg
adc
movups
lds
std
or
jp
ins
mov
jmp
sub
pop
pop
loope
pop
in
loopne
sub
sub
jmp
add
add
mov
jo
dec
shl
cmc
enter
sub
inc
cmc
fwait
push
(bad)
jge
call
jg
lods
int
call
enter
xchg
hlt
adc
outs
cmc
popf
retf
aad
loopne
dec
cwde
mov
push
pop
frstor
xchg
or
mov
and
enter
loope
mov
adc
retf
cmp
mul
popa
pop
jo
xor
mov
push
or
aad
daa
out
mov
pop
repz
and
or
add
mov
fwait
inc
mov
fisttp
fs
or
clc
movs
ret
jae
or
push
fidivr
mov
xor
(bad)
or
retf
jo
adc
inc
movs
repnz
jnp
ret
jmp
cmps
mov
adc
push
ins
bound
mov
xlat
pusha
jne
add
lar
mov
out
sbb
dec
cmps
xor
ja
xor
inc
xchg
lods
in
adc
xor
cmps
add
add
mov
mov
mov
test
add
jmp
mov
in
jle
aas
nop
inc
sti
xchg
dec
ret
shl
loope
jae
jns
cmp
ret
sbb
mov
fwait
retf
inc
nop
pop
mov
daa
pop
xchg
inc
inc
outs
or
add
inc
jne
lods
les
mov
cmp
cmp
push
shr
mov
inc
pop
jb
pushf
in
pop
xchg
cmp
pop
mov
dec
xchg
mov
test
mov
popa
icebp
fbstp
fld
int3
(bad)
adc
ror
dec
cmp
daa
mov
test
sbb
pop
sbb
jb
pop
bound
mov
sti
imul
dec
xor
mov
mov
sbb
xchg
cmp
aam
and
mov
mov
loope
and
add
or
ja
nop
mov
sbb
lock
add
aam
push
imul
add
jmp
sar
stos
imul
and
mov
data16
mov
stos
dec
mov
js
jmp
fnstcw
test
iret
out
jge
xchg
outs
mov
shl
js
push
movs
push
inc
adc
test
mov
(bad)
pop
cdq
jle
shl
push
cmp
push
xor
jo
add
test
jecxz
mov
jmp
stos
in
cmc
mov
rcl
loop
lock
fild
pop
retf
mov
ss
xor
jns
lods
or
push
test
xchg
sbb
neg
cmp
cmp
pushf
iret
mov
in
inc
je
(bad)
pop
sahf
retf
push
lock
push
cmp
dec
sub
pop
jbe
and
repnz
add
fs
mov
or
sub
test
add
in
mov
(bad)
dec
inc
xchg
gs
sbb
sbb
not
aaa
jbe
(bad)
add
(bad)
fiadd
add
out
gs
mov
int
push
jnp
stc
mov
push
and
xchg
lods
push
outs
test
push
pop
ror
and
cmp
push
(bad)
push
mov
or
cmp
pop
mov
mov
shr
or
stc
neg
xor
ret
jl
rol
adc
aad
push
out
and
adc
(bad)
dec
dec
xchg
in
outs
mov
ss
sub
das
lock
pop
fs
push
not
cmp
mov
fwait
cli
test
sbb
adc
lea
push
inc
mov
mov
retf
mov
add
xor
mov
cwde
mov
inc
or
(bad)
call
dec
mov
fild
dec
out
sar
hlt
sbb
dec
ins
test
(bad)
clc
push
cmp
shl
mov
adc
in
cli
outs
push
xchg
stos
stos
imul
dec
or
cmc
imul
or
mov
mov
adc
xlat
push
sbb
repnz
xchg
aaa
push
jmp
cmps
mov
pop
adc
xchg
stos
xchg
out
scas
adc
imul
mov
xchg
pop
loopne
cmc
in
(bad)
jne
or
stos
adc
push
dec
add
test
popa
cmp
cli
in
pop
sbb
fucomp
sub
mov
xchg
pop
jge
sub
fisttp
jle
and
int
xchg
pushf
inc
nop
cmps
cmc
push
cmps
mov
mov
mov
jg
icebp
mov
or
lock
stc
sbb
fist
jae
sbb
outs
jge
mov
add
daa
int3
rsm
test
adc
aam
js
inc
mov
push
dec
imul
out
fist
stos
bound
adc
inc
pop
add
out
bound
xor
lods
jmp
jp
js
xor
cmp
jbe
push
push
ins
and
mov
dec
mov
repz
push
aas
sbb
or
repz
std
lods
and
push
jg
test
mov
nop
dec
xor
xchg
add
rcl
loop
in
adc
mov
add
mov
out
fwait
xlat
jl
push
add
mov
mov
jno
push
push
jp
call
inc
loopne
int
jbe
jnp
sar
mov
test
repnz
or
xor
ja
xchg
jge
arpl
lahf
fsub
pop
es
push
loopne
inc
push
pop
scas
mov
daa
mov
sahf
into
jg
jmp
cmp
mov
jl
ins
pushf
stos
dec
fldcw
cmp
leave
out
sbb
ins
mov
mov
fst
inc
aad
and
(bad)
scas
pop
mov
frndint
idiv
addr16
outs
ins
or
fisttp
fadd
add
adc
fld
pop
add
js
adc
sub
or
mov
mov
and
hlt
mul
push
jle
ins
out
into
inc
div
inc
cmp
adc
mov
mov
repnz
mov
inc
xchg
into
int
stc
cld
xor
and
inc
mov
scas
adc
(bad)
aam
push
xlat
shl
cld
loop
jns
xchg
mov
fstp
xor
nop
pop
mov
cmps
sub
or
retf
aas
xchg
cld
and
cwde
mov
fdivr
push
call
inc
add
int
mov
outs
jge
mov
jbe
mov
or
push
mov
xor
cmp
mov
sub
(bad)
lock
pop
mov
cmps
mov
add
fst
out
xchg
fs
mov
cmp
adc
inc
sub
mov
pusha
xor
shl
mov
jne
inc
je
dec
fidivr
iret
sar
movs
scas
call
jge
in
in
rol
mov
push
out
cld
gs
cwde
mov
lahf
mov
gs
inc
mov
adc
cmp
cmc
scas
adc
outs
mov
xchg
popa
mov
push
fimul
cmc
ret
add
xchg
mov
ret
sahf
jg
loope
outs
add
xor
imul
jne
ficom
(bad)
aad
fsub
in
mov
not
dec
and
sar
and
push
es
pop
dec
sub
xor
sub
dec
movs
ss
sub
sub
push
out
mov
das
mov
cli
cmp
cmp
and
mov
inc
push
gs
clc
(bad)
repnz
mov
int3
dec
fxch
or
cmpxchg
pop
xchg
daa
xor
not
je
retf
arpl
jl
(bad)
fcomp
cmp
or
repnz
fs
call
xchg
and
or
and
sub
cmps
arpl
mov
cdq
loop
sbb
xor
inc
dec
loop
in
jp
les
sub
push
push
movs
mov
adc
sub
sar
jo
test
scas
lock
in
push
fdivr
bound
mov
icebp
mov
loopne
fnstsw
push
push
cld
push
retf
push
mov
stc
push
cmps
sub
leave
sub
xchg
gs
hlt
or
or
adc
mov
mov
(bad)
cwde
leave
jg
and
cmp
inc
cdq
inc
push
push
sub
test
mov
daa
mov
imul
jge
xor
icebp
jge
or
sub
(bad)
fdivr
jmp
jge
rcl
popf
and
addr16
push
leave
or
(bad)
and
mov
push
sub
aas
sub
xchg
adc
es
repnz
sahf
rcl
fnsave
and
lahf
push
xlat
mov
or
nop
inc
sub
and
mov
idiv
iret
in
or
je
cmps
hlt
and
popf
(bad)
arpl
mov
jne
mov
les
psubsw
ins
push
gs
jno
lahf
xchg
jo
ins
les
xchg
jmp
js
inc
out
les
dec
xchg
push
xor
or
cmp
ret
ret
clc
imul
rcr
ins
sbb
aam
mov
xor
mov
mov
stc
jg
cmp
test
imul
in
push
mov
xchg
xor
imul
adc
xor
cwde
fild
push
push
push
lods
pop
push
mov
and
mov
push
pop
pushf
les
add
sbb
and
std
test
icebp
cdq
data16
cmp
xchg
rol
and
stc
xor
sub
lahf
xlat
jg
push
sbb
pop
jne
nop
cmovae
stc
repz
pop
shl
mov
cmp
push
mov
jb
iret
sbb
clc
mov
inc
push
mov
in
rcr
dec
or
sbb
rcl
xchg
jo
out
mov
test
inc
sbb
idiv
mov
test
rcl
push
fld
xlat
dec
push
pop
jae
mov
adc
test
cmp
enter
test
es
(bad)
lock
xchg
je
out
push
mov
in
pop
mov
lods
(bad)
fcom
pop
adc
dec
adc
xor
mov
mov
les
dec
mov
sti
pop
or
jne
and
idiv
jb
iret
popf
fld
inc
cmps
int3
ret
cmps
mov
ss
fsubp
shl
fdiv
dec
ror
xlat
mov
or
sbb
div
(bad)
and
pop
lahf
gs
out
pop
lock
xchg
fs
fnstsw
ja
or
sbb
test
out
dec
mov
xchg
sbb
sub
xchg
(bad)
out
xchg
int3
mov
mov
int
repnz
mov
ja
fmul
adc
lods
adc
cmp
shr
cmp
cmps
jbe
push
stc
mov
stc
in
js
hlt
dec
ss
cmp
out
or
cmp
xchg
mov
ret
add
test
mov
ja
(bad)
call
fstp
jg
push
(bad)
data16
out
adc
retf
xor
(bad)
cdq
cmp
js
or
mov
xor
adc
mov
mov
xchg
or
call
or
sar
(bad)
sbb
mov
cli
(bad)
stos
or
pusha
hlt
stos
xor
xor
je
pop
cmp
sbb
mov
clc
mov
mov
pop
shr
mov
cwde
pop
or
adc
xchg
jge
imul
cmp
add
pusha
and
mov
fisttp
jmp
xchg
xchg
xor
jmp
cmp
pop
mov
aaa
mov
pop
clc
inc
sbb
push
pusha
push
jo
sub
repnz
jne
cld
nop
xchg
in
(bad)
cmps
fstp
sub
lahf
daa
int3
inc
ins
dec
and
iret
xchg
cmp
dec
sub
fnstsw
(bad)
sub
retf
(bad)
sbb
cwde
or
inc
iret
add
cmp
xor
loop
lods
or
xlat
sahf
aam
scas
clc
mov
and
out
push
jo
fcomp
not
xchg
push
mov
xchg
push
pop
xchg
cmp
pop
push
ret
mov
movs
jbe
jb
enter
mov
push
out
push
pop
push
sahf
lds
enter
and
shl
add
fisub
ret
jmp
sbb
fimul
cmps
cli
adc
jmp
inc
mov
popf
(bad)
cmps
add
inc
(bad)
out
sbb
dec
cmp
popa
mov
lea
test
(bad)
jmp
sahf
add
aas
add
xchg
push
pop
xchg
retf
fcomp
int
jo
sub
jnp
or
or
sub
and
nop
mov
jo
mov
fnstcw
jne
movs
shl
jl
fisttp
cs
stos
rol
jg
adc
out
outs
into
add
or
mov
imul
and
mov
dec
adc
arpl
into
stos
inc
fs
das
cdq
dec
xchg
and
sbb
pop
stos
inc
loopne
in
xor
add
jecxz
bound
popa
jns
bound
cmp
iret
(bad)
jmp
cs
or
and
frstor
jo
adc
fadd
std
mov
repz
inc
mov
dec
ret
pop
inc
and
xchg
shl
push
in
xchg
ror
in
cs
je
pop
mov
inc
xor
mov
push
adc
dec
repz
dec
mov
ret
test
push
not
xchg
sub
add
mov
rcr
outs
jne
jbe
xchg
out
jle
adc
sbb
and
pushf
push
xchg
sbb
pop
js
adc
inc
popf
aas
cmps
jmp
mov
mov
(bad)
mov
shl
lds
pop
pushf
fstp
fsub
in
add
push
mov
xchg
mov
cmp
cmps
fadd
(bad)
or
in
adc
movs
div
ss
xchg
jge
sub
call
jge
or
sahf
xchg
test
call
nop
fs
test
mov
pop
dec
addr16
lea
inc
xor
ss
mov
mov
mov
fld
int3
mov
test
xor
sbb
out
inc
sub
leave
pop
mov
and
push
push
test
je
fnsave
jge
sbb
xlat
ins
int
xchg
jl
outs
lock
movs
and
xchg
not
adc
pop
dec
leave
pop
in
xor
inc
inc
mov
sub
jno
ins
inc
push
push
out
not
and
test
test
add
lahf
add
add
cwde
or
cmp
mov
jle
in
inc
hlt
pusha
in
repz
pop
or
div
mov
outs
sub
dec
jp
inc
rol
push
cmps
and
shl
jle
dec
mov
cmp
(bad)
lods
retf
pop
in
jns
movs
push
cmp
xchg
enter
(bad)
stc
aam
hlt
mov
push
jbe
cmp
stc
xor
mov
hlt
xchg
sti
inc
lea
fsubr
mov
imul
sub
ret
and
xchg
jae
add
cmc
retf
and
sbb
xchg
cli
xchg
and
dec
mov
movs
jo
out
cs
xchg
jmp
cdq
mov
fisub
fs
and
inc
or
mov
xchg
fxch
and
cmc
mov
and
stc
cld
imul
push
sub
jmp
pop
daa
sahf
jbe
leave
mov
inc
and
push
jae
div
mov
cs
dec
sahf
mov
call
inc
fsub
and
pusha
push
out
inc
daa
mov
push
daa
jecxz
es
xor
or
mov
into
into
sub
sbb
dec
fdiv
and
push
push
xchg
mov
das
mov
aas
pop
inc
mov
dec
aam
xchg
int3
cmp
daa
sbb
dec
sub
sub
popf
jp
loop
scas
mov
jae
dec
fwait
cmc
ficom
sbb
inc
xrelease
outs
test
fs
sub
xlat
outs
ss
int
fisttp
pop
cmp
test
cmps
mov
nop
movs
inc
xchg
movs
mov
mov
(bad)
jo
push
mov
mov
aas
jnp
jp
cmp
pop
jp
cmps
fisttp
lock
xor
mov
sahf
xchg
mov
dec
dec
pop
or
out
aaa
cmps
rcr
je
add
lock
das
leave
add
sahf
pop
sti
push
push
stc
sub
mov
hlt
fimul
clc
inc
sub
dec
shl
repnz
push
test
jmp
retf
rol
call
xchg
adc
jp
inc
paddd
push
mov
cmp
jmp
lea
add
ss
lods
dec
iret
xchg
lock
sar
push
inc
mov
xchg
pushf
mov
je
inc
popa
pop
cmps
add
inc
loopne
or
scas
dec
out
dec
pop
popa
call
(bad)
mov
outs
lods
mov
aas
inc
out
cmp
sahf
icebp
or
fldcw
push
inc
aam
retf
rcr
sbb
movs
outs
pop
jns
ret
test
adc
xor
dec
sbb
inc
(bad)
rol
xchg
mov
adc
loope
jmp
or
mov
mov
sbb
inc
adc
and
push
stos
sbb
push
sbb
or
xchg
mov
dec
icebp
xchg
pop
dec
xchg
pop
inc
test
sbb
jle
movs
push
test
xor
pop
mov
in
adc
xchg
inc
cmps
pop
les
loope
fiadd
xor
ds
mov
inc
dec
cmp
adc
sub
dec
int3
test
and
or
mov
je
imul
mov
stc
aas
dec
fcom
scas
or
fimul
(bad)
retf
sub
popa
and
mov
push
int
sub
int
pushf
add
dec
xor
out
inc
or
jg
mov
mov
ins
mov
in
push
mov
imul
inc
pop
or
jns
mov
iret
and
out
add
js
lock
out
dec
pop
retf
inc
stos
scas
xor
mov
xchg
add
push
jne
cmps
sahf
fwait
xchg
std
sbb
inc
enter
repz
sbb
mov
xchg
(bad)
mov
pop
(bad)
mov
jbe
shl
add
icebp
pop
pminsw
jp
mov
mov
sub
lods
fistp
je
jl
push
jge
dec
jge
(bad)
cmp
mov
jecxz
test
mov
nop
inc
mov
pop
fdivr
sub
retf
mov
cs
jmp
mov
xor
fst
enter
clc
inc
mov
add
sub
outs
push
les
div
inc
fcom
arpl
mov
out
or
test
jo
popa
jle
or
or
xor
lahf
ins
popf
repz
test
xchg
push
add
clc
push
into
call
shl
and
in
(bad)
call
pop
ds
repz
dec
popa
mov
pop
or
hlt
push
push
repnz
ds
sbb
xchg
sbb
daa
and
sbb
mov
mov
dec
mov
(bad)
in
enter
jg
mov
lahf
push
pop
jle
outs
adc
sbb
xchg
cdq
or
adc
into
cmp
dec
xor
(bad)
scas
mov
js
jmp
sbb
pop
cmp
or
pushf
mov
loop
cs
retf
xchg
dec
inc
pop
(bad)
pop
push
ror
dec
pop
movs
mov
mov
dec
mov
pop
in
dec
xor
push
cli
and
enter
inc
jne
nop
push
into
jo
mov
loopne
loop
xchg
hlt
mov
xchg
stc
aas
push
movs
xchg
loopne
fnstenv
loope
cdq
and
and
adc
stos
cld
cs
repz
and
and
mov
sahf
in
inc
fst
imul
aad
(bad)
push
mov
sub
mov
scas
sbb
push
out
addr16
mov
pop
and
xchg
dec
call
idiv
mov
push
hlt
or
aas
jg
xchg
ret
outs
out
jbe
mov
push
sub
or
sbb
add
outs
push
push
xchg
mov
imul
xlat
mov
dec
ficom
scas
comiss
(bad)
sbb
push
mov
pop
sahf
jecxz
in
test
xor
pusha
pop
jmp
lock
pop
add
or
stos
sub
retf
jle
or
(bad)
aad
mov
cmp
add
add
scas
sar
out
sub
and
mov
mov
dec
mov
mov
ror
mov
xchg
call
in
mov
adc
pop
or
(bad)
mov
xor
into
ret
add
test
push
jecxz
es
imul
imul
xchg
ds
(bad)
add
stos
rcr
pop
test
cmp
(bad)
outs
scas
jo
dec
inc
shl
or
sub
cli
call
mov
jg
mov
jge
cli
cmp
xlat
scas
ficomp
jp
cmps
push
mov
in
fst
xchg
mov
inc
bswap
jae
or
test
aad
inc
test
jb
mov
inc
aam
cmp
mov
in
ret
push
dec
repz
sbb
dec
push
push
stos
mov
arpl
adc
dec
in
(bad)
push
pop
add
int3
fistp
add
pop
pop
cmc
fcomp
dec
mov
xchg
sahf
adc
xchg
jns
cmp
push
sub
mov
push
adc
scas
mov
cmp
adc
mov
xor
xor
outs
sbb
ret
(bad)
mov
xchg
inc
mov
arpl
xchg
aas
dec
fnstsw
pop
fld
or
(bad)
cld
add
adc
ret
sub
jl
pushf
sub
cmp
sbb
cmp
ror
cli
dec
mov
mov
pop
addr16
mov
lods
aaa
cmps
jae
das
dec
mov
mul
nop
out
cli
mov
pushf
adc
inc
mov
mov
mov
imul
jecxz
dec
jge
test
das
sbb
inc
loope
cmp
mov
aad
pusha
inc
dec
stos
cmps
push
(bad)
stos
jne
xchg
leave
test
jle
cmovl
mov
cmps
retf
ret
mov
push
push
popa
jbe
mov
inc
and
sbb
jmp
ret
rol
jmp
sbb
(bad)
lock
lods
out
xchg
call
sbb
xchg
pusha
imul
push
sahf
mov
add
jl
icebp
aas
add
push
inc
dec
fwait
arpl
movs
sbb
cmp
xlat
push
sbb
inc
test
ret
sar
sub
jle
sub
data16
lahf
shl
lahf
push
shr
(bad)
push
scas
addr16
dec
popf
test
dec
into
jns
xchg
push
add
mov
fisttp
pop
add
dec
mov
fadd
nop
dec
ins
jmp
nop
in
rcl
iret
adc
xchg
push
mov
call
out
inc
pop
enter
and
push
mov
bound
enter
fsub
aad
jecxz
ss
or
out
retf
add
mov
cmp
jmp
fld
sbb
bound
push
mov
push
or
or
cwde
pop
repz
and
loop
adc
or
in
adc
call
test
les
rcl
out
or
add
pop
shl
adc
dec
push
pop
cmp
jg
call
mov
ds
mov
and
mov
mov
fist
mov
xchg
pop
mov
daa
je
and
dec
ret
aam
lea
ret
mov
or
xor
cmp
loopne
les
mov
inc
sbb
fistp
stos
push
das
and
xchg
mov
leave
inc
jge
pushf
cmps
popf
push
xchg
jecxz
fisub
jp
out
xchg
sub
mov
push
jmp
dec
adc
xchg
pusha
mov
mov
xchg
cs
sub
pop
xchg
cmc
inc
clc
out
popa
or
push
dec
add
and
cmp
push
dec
or
jbe
push
dec
xlat
into
ror
popa
cld
push
inc
dec
mov
dec
xchg
jno
ret
mov
jp
ja
bound
scas
sub
(bad)
mov
pop
mov
mov
lock
cmps
jae
cmp
dec
sbb
dec
dec
or
sub
mov
pop
push
mov
sbb
mov
sub
data16
pusha
stos
cmp
outs
iret
sbb
cld
dec
mov
jl
imul
add
in
mov
(bad)
push
aam
jnp
mov
push
es
mov
adc
mov
inc
mov
mov
ins
xchg
clc
jp
test
push
xchg
pop
daa
inc
inc
xchg
mov
xchg
adc
bound
sbb
add
mov
and
and
stos
xchg
mov
mov
cld
add
xchg
dec
stos
ja
neg
sub
jp
push
pop
out
fnstsw
xchg
dec
xor
add
dec
mov
xchg
xor
pop
cmp
jnp
and
mov
adc
lock
or
jp
(bad)
je
cmp
mov
adc
neg
fadd
or
leave
jmp
mov
xor
inc
out
xor
adc
fistp
cmp
or
xor
es
in
mov
dec
push
mov
leave
xor
out
sti
or
sub
stos
iret
popa
sbb
cmp
or
repnz
rcl
fidiv
retf
lock
pop
mov
cmp
test
or
fistp
add
nop
rol
pop
icebp
inc
int3
test
fidivr
cmp
jnp
stos
jno
sti
pop
mov
mov
and
mov
or
inc
mov
gs
pop
mov
mov
mov
leave
or
mov
fbstp
push
push
lods
shl
loopne
outs
pop
adc
pop
sub
mov
pop
push
cwde
hlt
mov
mov
inc
js
sar
pop
mov
popf
movs
push
sbb
aaa
arpl
push
rol
pop
ins
int3
jl
ror
jno
daa
loope
loop
jbe
loopne
cwde
xor
cmp
cld
jmp
inc
aaa
(bad)
mov
neg
fsub
or
xlat
push
jae
das
xchg
out
pop
lds
mov
pop
sub
sub
test
xchg
push
adc
pop
xchg
jmp
clc
mov
pop
cmp
hlt
mov
xor
jno
jmp
cmp
repz
sbb
sbb
cdq
adc
cmps
shl
lods
push
les
stc
aad
bound
and
push
add
push
cmps
and
mov
mov
outs
cli
(bad)
lods
mov
pop
ins
sbb
popa
mov
out
mov
popw
jmp
xor
shl
inc
mov
lods
pop
or
iret
push
out
iret
jo
test
fidivr
xlat
push
and
lahf
cld
scas
(bad)
int3
xchg
fsubr
inc
inc
mov
jle
ja
aas
cli
inc
aas
inc
xchg
and
jmp
sar
adc
dec
lods
and
xor
and
adc
cld
inc
mov
xlat
jo
(bad)
jmp
in
inc
cli
xor
mov
(bad)
in
push
add
es
inc
rcl
and
push
dec
sub
dec
pop
mov
retf
cmp
xchg
lea
sub
adc
inc
sti
sbb
cli
scas
mov
inc
push
add
aas
aaa
jbe
scas
gs
mov
cmps
add
aaa
push
loope
inc
rcl
jg
fcomp
retf
sbb
dec
xor
leave
rcl
mov
pop
int
pop
xchg
je
(bad)
fadd
test
sub
fsubr
add
push
jg
push
adc
sbb
pop
mov
xor
pop
adc
call
cmp
icebp
(bad)
les
mov
int
cmc
cli
in
sti
mov
jecxz
stos
inc
icebp
dec
imul
sbb
lea
sbb
cdq
or
and
sbb
mov
xchg
inc
or
enter
inc
cmc
mov
lods
xchg
mov
and
cli
cmp
retf
and
inc
movs
stos
arpl
jmp
rcr
aad
xchg
pop
outs
cmp
lock
sbb
or
mov
add
or
(bad)
cmps
xchg
outs
inc
pop
push
push
xchg
repnz
stos
xor
es
les
sub
sub
mov
and
cmps
fsubr
jae
call
xlat
xor
and
add
or
jecxz
ins
(bad)
call
mov
and
jle
cmp
nop
jecxz
aad
and
fs
xchg
and
mov
or
xor
adc
sbb
sbb
sti
popa
inc
or
cmp
pushf
jb
xor
push
pop
pop
or
push
and
mov
repnz
cmps
lods
loopne
inc
movs
enter
or
cmp
pop
sub
and
aas
(bad)
ror
adc
test
inc
hlt
xchg
outs
push
retf
cmp
pop
loope
bound
xor
sbb
outs
mov
test
les
add
sti
in
movs
loopne
mov
sub
ins
aaa
pop
in
or
in
push
pushf
adc
test
adc
gs
jbe
in
mov
cmps
rol
adc
es
adc
test
ror
xor
int
lods
movs
bound
lods
adc
or
in
dec
cmc
out
cmps
scas
in
nop
mov
jge
mov
repz
and
pop
jb
aam
aas
dec
sub
es
das
mov
ret
sub
adc
inc
js
sub
add
adc
xchg
in
push
cmp
push
jns
mul
dec
test
xchg
or
(bad)
adc
mov
push
sub
cld
or
int3
xchg
cmp
ja
xchg
cmp
ret
sub
lods
test
aad
cmps
mov
clc
mov
mov
add
sub
jae
lods
ret
jp
sub
out
mov
pop
xchg
fcomp
jae
pop
lods
fiadd
jl
stos
sbb
jecxz
stos
sbb
fisub
(bad)
int
out
push
(bad)
jns
jg
loope
enter
add
cmp
es
rol
rep
dec
in
lahf
push
mov
mov
or
int3
and
data16
xchg
loope
iret
sbb
sbb
push
jge
sti
ret
mov
lods
pop
ror
cmp
add
sub
xchg
mov
add
sub
in
js
xchg
or
es
pusha
mov
push
cmp
push
mov
pop
xchg
dec
dec
(bad)
rol
icebp
addr16
sub
push
cwde
cs
mov
add
and
call
fstp
ret
pop
or
not
mov
out
ins
ins
mov
jl
pusha
mov
or
add
out
jmp
inc
mov
ror
jmp
je
push
in
ss
mov
inc
jns
xor
imul
(bad)
les
movs
into
hlt
pop
movs
or
sti
cli
leave
cs
mov
dec
out
pop
cmps
or
ret
test
cmps
lods
fmul
jno
dec
mov
adc
add
lahf
cmp
cwde
(bad)
xor
inc
test
rol
cmps
push
cmc
jp
mov
out
je
(bad)
mov
mov
lods
cmp
mov
lock
xchg
dec
xchg
add
cli
(bad)
push
(bad)
(bad)
call
xchg
scas
dec
enter
jae
adc
jnp
loope
pop
popa
rcl
push
pop
push
mov
mov
scas
aam
pop
rol
lds
shl
or
xor
and
inc
in
cmp
aam
sahf
mov
mov
sub
pop
out
int3
mov
iret
sub
test
cmps
sbb
inc
push
jmp
pop
in
xchg
cs
imul
outs
xchg
jg
cmp
inc
lahf
sar
pop
ja
popf
jmp
ficom
shl
clc
ins
daa
int3
push
xchg
iret
imul
xor
clc
call
hlt
mov
mov
mov
jbe
mov
data16
data16
loopne
shr
adc
xchg
test
rol
std
scas
add
mov
add
imul
pop
mov
push
mov
cmp
sbb
add
dec
out
jne
push
push
add
push
fld
lahf
cmp
add
cdq
sbb
adc
cmp
icebp
cmp
add
loopne
popa
pop
test
adc
daa
leave
cmp
das
test
sahf
xchg
sub
push
in
cdq
sub
inc
xchg
adc
mov
dec
enter
xchg
std
jne
in
pop
cld
aaa
or
pop
mov
test
mov
jmp
push
jbe
cmp
adc
add
pop
outs
jmp
inc
or
shl
iret
pop
adc
enter
(bad)
scas
mov
sub
xchg
cmps
pop
dec
leave
mov
retf
adc
mov
dec
ja
jae
xchg
inc
out
xor
neg
aaa
das
das
xchg
outs
mov
cli
out
mov
push
stos
mov
add
aaa
div
mov
dec
dec
sub
xchg
fsubr
pop
push
stos
inc
(bad)
push
out
lds
or
shl
and
cld
sbb
(bad)
jecxz
sub
mul
and
test
mov
cmps
cmps
sub
shr
mov
gs
mov
movs
loopne
xor
mov
jbe
out
std
cwde
rcr
mov
xchg
xor
mov
js
dec
add
lahf
mov
gs
enter
add
push
push
loope
mov
shr
mov
enter
or
mov
or
push
js
rcl
mov
cli
mov
out
sbb
xchg
pop
push
add
add
lods
dec
ja
lock
jmp
mov
mov
adc
xchg
inc
scas
add
mov
fsub
mov
leave
or
add
and
stos
mov
arpl
pop
sbb
mov
xor
mov
push
push
and
scas
(bad)
aam
aaa
pop
je
retf
jnp
mov
pop
push
cli
mov
lock
stos
cmp
sub
xor
pop
push
pop
mov
jo
je
stos
(bad)
sahf
and
jge
ds
ret
mov
xchg
or
push
push
push
cdq
mov
inc
dec
arpl
(bad)
mov
imul
jno
sbb
sbb
and
rcl
test
xchg
cld
pop
rcl
arpl
dec
push
pop
mov
dec
pop
sub
jnp
sub
popf
mov
pop
leave
dec
rcl
push
cs
inc
cwde
mov
xchg
ja
outs
int
sbb
jmp
mov
cmp
jg
leave
ret
jb
sbb
add
aaa
call
cmp
outs
pusha
inc
inc
adc
addr16
pop
or
mov
mov
pop
jg
jmp
add
adc
or
add
push
fst
mov
push
jmp
rol
jl
push
push
xor
push
stc
xor
dec
push
jmp
jnp
les
pushf
and
push
sub
dec
cmp
outs
sub
sub
ror
or
pop
inc
mov
add
mov
shr
xor
jb
push
inc
add
mov
xlat
dec
fcom
sub
mov
pusha
popa
call
out
mov
jnp
mov
(bad)
dec
jmp
test
push
scas
fs
pop
mov
push
pop
xchg
xor
mov
lock
inc
mov
jmp
sbb
imul
sti
ret
data16
scas
jns
jnp
pop
sar
push
rol
jmp
or
iret
inc
movs
inc
pop
stc
mov
jl
mov
or
adc
in
xlat
outs
or
data16
lds
popa
and
mov
retf
iret
jmp
mov
sar
cmp
fidiv
outs
push
mov
mov
scas
jl
and
in
adc
pop
mov
jns
and
and
(bad)
cld
aad
xor
jmp
adc
rol
fistp
lds
mov
push
adc
mov
std
sar
nop
or
push
scas
dec
mov
push
pop
mov
daa
stos
lods
jbe
or
mov
push
into
imul
mov
mov
arpl
sbb
mov
xor
jmp
inc
dec
test
mov
ficom
inc
push
adc
scas
(bad)
add
mov
sbb
dec
rcr
movs
pusha
xor
xor
sub
cwde
dec
inc
out
inc
push
push
inc
int
mov
(bad)
cmp
cmp
push
iret
(bad)
cwde
xor
addr16
mov
ret
fimul
mov
(bad)
adc
push
cld
jge
dec
sub
movs
pushf
imul
xchg
lock
(bad)
loopne
idiv
sahf
movs
and
sub
cmp
xor
mov
fild
arpl
repz
(bad)
into
xor
popa
lods
push
pusha
pand
cli
pop
adc
bound
or
enter
loopne
jbe
out
mov
shl
arpl
jne
stos
mov
sbb
dec
jle
inc
xchg
stos
sbb
push
inc
rcr
mov
dec
into
aaa
mov
dec
mov
lods
das
cmp
fstp
fcmovb
call
add
cmp
rsm
enter
(bad)
cs
xor
in
or
inc
jo
adc
push
xor
adc
stc
ins
fistp
sub
xchg
pusha
adc
xor
ja
popa
ds
(bad)
fldcw
and
enter
mov
pop
icebp
mov
pop
leave
sar
mov
pop
aad
xchg
std
retf
pop
pop
mov
lods
mov
cmp
shl
lods
bound
in
cdq
xor
bound
call
xchg
cmp
sub
jge
cmp
popa
inc
mov
or
xchg
push
xchg
test
out
xor
sbb
ss
retf
(bad)
jmp
fimul
mov
push
loopne
or
addr16
call
sbb
cmps
mov
es
test
cs
and
mov
xchg
lea
jl
push
into
cmc
lahf
scas
xor
sar
mov
dec
adc
fist
dec
(bad)
in
(bad)
sub
sbb
or
adc
sbb
xchg
pop
sahf
nop
lods
mov
inc
lds
pusha
mov
test
push
adc
les
and
test
ds
pop
test
dec
cli
out
into
push
mov
outs
mov
mov
push
outs
xor
sub
aas
cmps
fs
adc
inc
aas
mov
scas
pop
ret
repz
cmp
outs
mov
and
mov
pop
and
retf
fisub
add
push
pop
inc
js
sahf
mov
jge
imul
and
or
jecxz
cdq
cmp
jne
(bad)
sbb
fs
pop
shl
and
js
jle
loope
mov
addr16
adc
jnp
mov
mov
push
dec
test
cmp
mov
mov
mov
jp
int
fcmovne
push
cs
fnstcw
jecxz
jno
test
stc
lds
jno
and
inc
repnz
cmps
push
or
(bad)
jecxz
lods
add
or
sbb
mov
add
xor
das
mov
adc
dec
rol
sub
pushf
(bad)
sar
rcr
pushf
out
or
push
xchg
lahf
or
dec
sub
fprem1
sbb
mov
jns
or
cmp
retf
nop
cli
jge
cmp
pop
arpl
stc
in
sbb
cmps
or
inc
and
movlps
imul
pop
sbb
clc
mov
and
cmp
sbb
bound
adc
popa
test
cmc
in
cmp
mov
mov
xor
nop
cld
sahf
jg
jb
ud2
ds
enter
xchg
fldenv
out
push
adc
mov
sub
cmp
out
push
and
mov
test
int
movs
jns
repnz
push
cli
jmp
sub
aaa
loop
pop
and
jb
popa
sbb
in
jno
int3
and
xor
xor
push
test
xor
pop
push
movs
cmp
cdq
stos
inc
xor
cmp
and
xor
mov
sub
jl
xlat
ins
aam
stos
jmp
popa
int
fiadd
and
add
call
daa
jmp
xor
and
es
pop
je
add
out
(bad)
fistp
retf
idiv
push
mov
stos
stos
std
sbb
mov
cmp
xor
add
lahf
idiv
or
cdq
mov
dec
outs
loop
ins
mov
stos
sbb
xor
or
xor
hlt
fisttp
imul
fwait
sar
scas
or
sbb
sbb
call
retf
loopne
xor
(bad)
aas
cmp
xchg
rcl
pop
in
dec
push
int
jns
jmp
mov
sbb
xor
retf
nop
or
xor
xchg
xchg
mov
or
clc
jmp
data16
aaa
jbe
or
iret
push
or
ds
xor
add
push
inc
call
into
pop
pusha
imul
fnstcw
push
pushf
xchg
sub
adc
sub
outs
push
movs
add
arpl
inc
dec
xor
cmp
pop
xchg
je
fisttp
or
dec
push
xchg
shr
sbb
gs
mov
xchg
leave
push
mov
jp
or
stos
adc
repz
xor
dec
dec
xor
hlt
pop
mov
push
mov
test
aaa
into
and
cmp
adc
mov
pusha
mov
sub
add
jle
mul
ss
cwde
or
psrlw
dec
lock
std
icebp
outs
and
aad
stc
adc
xchg
push
aam
int
inc
(bad)
fld
xchg
fmul
xor
xchg
(bad)
adc
jmp
lods
mov
leave
test
inc
ret
push
inc
cdq
icebp
sahf
popf
mov
mov
scas
cwde
retf
add
inc
pop
repnz
daa
add
hlt
jns
test
xchg
xchg
in
stos
cmp
daa
stc
mov
add
pop
jp
adc
dec
xlat
out
push
or
fcomp
cmp
fisttp
cmp
test
and
and
xor
mov
dec
adc
jle
cli
push
mov
adc
cmp
adc
pop
std
in
or
jmp
(bad)
jge
mov
leave
xchg
lods
cmps
retf
push
fdiv
sti
xor
stos
push
test
xchg
rcr
fdiv
arpl
in
bound
fidiv
cmp
cmps
aad
xchg
cmp
xchg
add
movs
repnz
mov
call
fdivr
add
mov
mul
shl
sub
and
mov
cmp
mov
push
and
aaa
xor
das
pop
jmp
jge
push
dec
and
scas
ss
fnsave
jp
repnz
repz
cld
icebp
cmps
sub
jl
adc
pop
adc
outs
cli
and
mov
shl
cmps
ficom
int
retf
cmp
inc
cwde
mov
and
clc
jge
ins
pop
rol
ret
dec
or
add
adc
loope
push
rcr
or
pop
(bad)
ret
(bad)
mov
sub
retf
adc
jle
div
push
sub
jge
int
mov
jp
sub
bound
loop
stos
std
ja
adc
gs
(bad)
jbe
fcmovnbe
cmp
push
les
sbb
mov
mov
mov
movs
push
mov
scas
in
mov
add
cmp
ins
jg
pop
cmp
sbb
xchg
pusha
out
addr16
ins
fsub
jne
inc
enter
repz
iret
scas
in
push
fdivr
mov
mov
ltr
stos
aaa
inc
stos
pop
(bad)
(bad)
repnz
int
cdq
push
fwait
push
mov
icebp
jmp
fild
xchg
cld
push
pop
adc
nop
ins
pop
or
mov
xchg
sbb
and
ja
inc
cmp
pop
sub
add
push
and
mov
retf
fs
or
fild
inc
ja
sub
pop
dec
jle
jnp
xchg
dec
aas
(bad)
push
xchg
or
in
push
push
call
mov
mov
scas
shl
daa
adc
rcr
pusha
sub
cmp
lods
cdq
dec
loop
lock
es
mov
mov
add
hlt
inc
xor
int3
inc
(bad)
ss
fs
popf
adc
sbb
mov
dec
push
and
inc
xchg
or
xchg
imul
out
shr
jae
loope
mov
inc
(bad)
and
aas
ins
fcomp
add
pop
stos
enter
jb
out
pop
retf
int
mov
ins
mov
xchg
xor
mov
jg
jl
mov
dec
lods
pop
xor
mov
adc
lock
imul
pop
mov
les
jnp
es
push
xchg
inc
ret
pop
fst
pop
cmp
xor
sbb
les
xor
cmps
jmp
inc
fs
js
pop
adc
jo
add
cdq
push
cdq
call
dec
sbb
inc
xchg
sub
cmp
pop
lds
sahf
(bad)
mov
or
sub
call
(bad)
arpl
mov
ror
jae
mov
clc
adc
scas
pusha
or
or
adc
jmp
call
(bad)
sub
pop
push
jle
arpl
(bad)
icebp
xchg
mov
jb
and
inc
jno
and
mov
adc
mov
add
icebp
pop
adc
repz
mov
push
aad
mov
fld
aad
lock
repz
jb
mov
jg
push
sar
and
xor
or
jnp
and
and
or
sahf
call
cmp
cdq
mov
popa
imul
clc
push
or
xlat
xor
ret
out
test
(bad)
outs
push
sbb
pop
pop
sbb
enter
ja
jae
loop
sbb
aam
int3
mov
ss
test
cmp
jg
neg
jne
fiadd
mov
push
jle
movs
imul
repnz
and
sbb
xchg
mov
iret
dec
jmp
mov
inc
jo
mov
ffree
inc
(bad)
cmps
arpl
push
shl
sub
xor
int
lock
rcr
div
mov
mov
shl
or
nop
pop
cmp
push
inc
je
cmc
mov
ins
out
inc
cmc
and
cmp
aaa
or
sbb
stc
mov
xor
aas
fild
mov
je
into
cmp
adc
ss
test
dec
push
ret
xchg
popa
pop
movs
cld
mov
imul
add
or
sbb
pop
sub
jo
mov
push
int
cmp
arpl
sub
xchg
leave
sbb
and
outs
in
xor
cmp
sti
xchg
push
mov
std
add
sbb
retf
inc
jl
sub
xchg
pusha
neg
mov
cs
or
adc
push
lods
lds
pop
xor
fwait
mov
pusha
in
sub
xor
inc
out
inc
inc
xchg
xchg
push
mov
gs
arpl
scas
xor
jmp
stos
mov
ret
(bad)
xchg
es
or
popf
outs
xchg
or
and
in
adc
push
fdivp
out
sbb
gs
jl
hlt
daa
push
mov
cdq
push
or
dec
cdq
repnz
xor
cmp
jmp
cmps
cwde
adc
jne
loope
push
xchg
inc
or
dec
(bad)
mov
sar
cmc
adc
jbe
rcr
and
xor
pop
fstp
push
popf
mov
nop
adc
out
mov
inc
fisttp
push
sbb
fxch
mov
inc
test
popa
fwait
mov
mov
shl
cmp
stc
jns
mov
fcmovb
sub
or
add
push
cmp
out
or
cmps
sti
sub
inc
cld
cdq
lock
(bad)
fiadd
fwait
push
stos
popa
push
inc
jp
cmc
cwde
in
mov
pusha
cwde
imul
scas
ret
out
in
out
add
jg
lahf
lahf
das
repnz
jp
fdiv
cmp
xchg
lock
movs
lock
iret
(bad)
test
cmp
aas
mov
test
les
jns
jo
call
in
sub
adc
sbb
jo
enter
ret
inc
imul
xchg
(bad)
in
scas
sahf
sbb
(bad)
ss
add
loop
cmp
scas
push
xor
ja
xor
jae
popf
call
push
push
cmp
xor
mov
sbb
ss
sub
(bad)
jne
and
fwait
mov
cmp
or
or
ins
pop
lock
cld
fdivr
mov
repz
cmp
jecxz
mov
out
call
dec
push
push
sbb
and
movs
sub
sub
and
mov
movs
fimul
ins
inc
es
shl
pop
test
test
aam
dec
sub
xchg
scas
dec
cs
push
mov
arpl
rcl
adc
mov
sub
test
xchg
jmp
push
int
mov
(bad)
mov
loopne
std
mov
(bad)
cmp
mov
mov
mov
stos
cwde
sub
inc
or
movs
sub
or
xchg
lahf
sub
push
lahf
pop
jns
xchg
and
sbb
xchg
retf
ins
adc
jns
lods
es
inc
add
mov
xor
stos
jno
sahf
or
call
add
push
adc
xchg
jb
cmps
sbb
inc
add
xchg
sbb
push
pop
jge
inc
call
pop
mov
inc
jge
out
sub
std
pushf
mov
movs
cs
iret
int3
leave
call
jnp
inc
sar
jo
stc
mov
in
js
nop
sub
daa
mov
sub
nop
out
adc
push
mov
pop
rol
jecxz
push
mov
inc
fist
sbb
xor
out
rcr
loop
fucomi
in
out
fwait
call
xchg
aas
mov
add
test
idiv
pusha
inc
mov
bound
loope
xor
in
jae
ficom
sub
lea
push
push
ret
adc
(bad)
or
push
fimul
adc
outs
mov
ftst
arpl
pop
jge
cs
or
pop
clc
repz
(bad)
popf
mov
jae
xchg
cdq
inc
and
enter
adc
sbb
ss
sti
pop
shl
xor
(bad)
mov
sbb
test
xchg
and
mov
mov
pop
dec
shl
dec
(bad)
sbb
test
lds
fcom
and
mov
test
sub
sbb
cmp
ficom
aam
test
das
push
and
fstp
sahf
mov
push
mov
stos
xor
popf
adc
pusha
loop
jge
mov
xor
adc
jg
mov
int
fwait
movs
inc
add
test
lea
adc
mov
lahf
mov
cmp
xchg
mul
shl
pop
shl
cdq
pop
push
and
dec
pop
cmp
inc
shrd
and
sbb
xchg
out
lods
js
mov
xor
sbb
xlat
cli
pop
cmps
into
test
(bad)
sar
stc
and
xchg
sbb
enter
pusha
sub
mov
pop
pop
ds
push
pop
(bad)
cmp
(bad)
out
cmps
cmps
pop
adc
mov
bound
outs
in
leave
mov
mov
mov
adc
jns
mov
xor
dec
retf
fistp
pop
sbb
test
in
scas
in
aas
push
dec
and
xchg
daa
push
mov
adc
aad
lods
mov
adc
ja
pop
fldcw
jno
add
mov
adc
add
adc
xchg
ror
mov
mov
arpl
mov
stos
loopne
sub
sbb
jl
in
scas
push
(bad)
popf
fs
lods
pop
xchg
xchg
xor
sbb
(bad)
imul
lea
pop
minps
mov
fucomip
(bad)
inc
fisub
inc
out
xchg
xchg
mov
dec
inc
mov
aad
in
xrelease
cmp
fisttp
jge
arpl
sbb
out
(bad)
or
add
(bad)
(bad)
loop
repnz
aaa
or
sub
aam
push
xchg
test
or
pop
retf
ds
popa
pop
dec
add
cmps
jbe
enter
and
sub
pop
dec
sub
and
arpl
fwait
cs
mov
jns
mov
pop
lds
mov
cmp
cli
mov
mov
in
sti
arpl
push
xor
xchg
and
add
add
aaa
lahf
sbb
push
cmp
inc
dec
add
lea
sub
fld
mov
aas
rol
je
stos
icebp
hlt
or
cld
sub
pop
or
mov
pop
movq
loop
call
call
inc
ror
cs
shr
and
movs
clc
pop
fdivr
cwde
nop
mov
dec
out
pop
out
gs
hlt
iret
xchg
mov
mov
add
push
call
xchg
mov
jg
mov
add
jnp
jp
mov
jl
cmc
bound
out
loopne
fs
cmps
(bad)
int
scas
push
push
data16
and
je
out
std
repz
pop
sub
sbb
jb
mov
xchg
dec
cli
adc
cs
out
xor
sub
push
jnp
and
imul
push
cld
sub
clc
cmps
sbb
xor
add
ror
sub
inc
out
adc
pop
cs
icebp
adc
test
jbe
je
xchg
clc
popf
push
movs
xchg
sub
imul
push
out
js
inc
xor
lods
and
enter
and
in
sbb
dec
add
data16
aas
das
and
mov
pop
xchg
iret
es
xchg
rol
pop
push
daa
movs
lods
pop
stos
pop
mov
add
in
cmp
dec
cmp
iret
mov
outs
imul
loope
add
pop
push
cld
in
cmc
mov
pop
retf
lods
out
push
pusha
gs
movs
mov
xor
xchg
inc
mov
push
in
and
xchg
mov
mov
or
cdq
ret
sahf
xor
(bad)
in
arpl
sub
aam
(bad)
dec
ret
dec
ror
dec
and
mov
jmp
sbb
jge
enter
mov
rcl
sbb
jecxz
xor
and
jl
mov
mov
mov
out
adc
pushf
mov
mov
pop
fstp
icebp
test
adc
test
and
shl
out
mov
repz
sbb
inc
mov
jecxz
sub
shl
jmp
cmc
in
movs
pushf
jae
aas
sbb
xor
out
cmc
sub
dec
shl
adc
fadd
es
xchg
mov
fcomp
fs
aam
loopne
pop
adc
fimul
push
imul
bound
ret
mov
push
adc
lods
dec
adc
dec
aam
mov
ret
in
sar
test
xchg
push
jno
pop
push
jle
lods
xor
call
adc
jnp
xchg
mov
les
mov
xor
mov
iret
retf
xor
test
call
dec
xor
push
pop
cmp
xchg
data16
mov
cmc
rol
movs
pop
jbe
cwde
mov
push
mov
cwde
pop
jns
icebp
in
and
sti
enter
nop
and
div
scas
xor
ret
in
cmp
or
add
sub
mov
movs
pushf
test
pop
sub
mov
cs
les
stos
movs
mov
cdq
jmp
bound
hlt
outs
sbb
int
and
pop
stos
not
test
in
and
or
js
gs
out
jbe
xrstor
pop
into
push
dec
or
inc
and
stos
ficomp
xchg
call
mov
aad
dec
test
and
(bad)
in
adc
or
add
sbb
cmc
mov
sbb
es
push
nop
mov
sbb
int3
push
sbb
bound
push
xor
mov
pop
ss
icebp
call
test
mov
cdq
leave
cdq
cs
in
or
shl
xchg
sub
pop
out
xchg
cmp
push
or
stc
aas
adc
sub
je
jo
leave
xor
imul
movs
lock
xor
pop
or
lahf
adc
aam
out
xor
sbb
jns
dec
in
ss
dec
div
sub
jg
pop
jmp
adc
leave
inc
add
adc
jo
xchg
push
mov
jo
gs
loope
mov
pushf
cmps
jae
daa
cld
mov
daa
stc
mov
add
cmp
sbb
push
sub
xchg
jb
in
clc
(bad)
fisttp
pop
jge
pop
push
(bad)
shl
dec
ins
jb
push
sbb
push
xchg
loope
xchg
xor
sub
ins
xor
loop
dec
test
push
(bad)
out
and
jae
bound
mov
jecxz
sti
jbe
ins
movs
repz
outs
test
mov
jmp
inc
jo
inc
ror
neg
add
(bad)
jb
fimul
ror
mov
push
addr16
xchg
outs
shl
arpl
pop
dec
scas
mov
dec
fimul
add
jge
test
fdivr
in
aam
dec
inc
or
sub
mov
ins
push
pop
call
in
cmp
or
pop
addr16
mov
adc
or
shl
fdiv
and
sub
mov
shl
adc
mov
cmp
stc
stc
out
daa
daa
test
repz
in
cli
cmp
or
jo
pop
pop
mul
inc
pop
jge
(bad)
aaa
pusha
imul
neg
mov
and
mov
int3
test
cmp
mov
(bad)
cmps
sub
mov
cmp
xchg
outs
sbb
push
inc
or
fst
mov
inc
adc
sahf
jno
sbb
pop
add
cmp
sti
push
inc
aas
stc
and
sbb
enter
out
fbld
sbb
(bad)
cmp
push
(bad)
fimul
(bad)
in
xor
out
bound
xchg
clc
fnstcw
push
and
pop
or
sbb
(bad)
cmp
(bad)
cmp
mul
dec
cmc
out
test
(bad)
(bad)
int
fcomp
popa
out
ins
icebp
jbe
pushf
bound
mov
adc
sbb
or
daa
(bad)
push
out
or
ret
mov
jg
inc
push
cwde
mov
cmp
fild
test
sbb
jno
pop
es
or
or
imul
jp
(bad)
xor
stos
test
or
and
xchg
into
sbb
xor
icebp
sbb
mov
sar
cmc
mov
mov
and
push
xchg
mov
or
sub
add
cli
idiv
pop
xlat
xlat
cmps
pusha
jmp
inc
enter
popf
mov
mov
scas
rcr
inc
aam
in
imul
int
int
sub
adc
add
sub
gs
inc
std
xor
fldenv
hlt
and
int
arpl
mov
(bad)
in
clc
dec
mov
jg
dec
mov
mov
jp
(bad)
aam
mov
cmps
dec
(bad)
jl
mov
xor
sub
cmp
push
adc
ret
xor
pop
jbe
mov
inc
cmp
jg
push
cs
adc
sbb
cli
imul
push
imul
xchg
lea
call
pop
dec
inc
sti
or
outs
xchg
add
shr
xor
and
pop
add
sti
inc
sub
xchg
(bad)
adc
popa
mov
leave
and
pop
add
xor
fld
and
cmps
loop
or
pop
rcl
fs
hlt
push
adc
push
push
jnp
nop
cmc
outs
cmp
sub
test
mov
fidivr
jne
mov
(bad)
(bad)
push
xor
and
mov
sub
sub
xchg
out
pop
jmp
push
sbb
lea
dec
imul
loope
mov
mov
xlat
add
mov
adc
repnz
jae
xchg
push
addr16
add
out
rcr
cwde
in
cmp
(bad)
leave
imul
in
cmp
pop
jo
pop
in
cmp
sbb
cld
pop
push
ja
popf
aad
cwde
pop
ror
(bad)
push
and
test
sbb
in
cwde
in
les
push
mov
xor
es
cmc
lea
inc
sbb
(bad)
test
sub
je
and
pop
fisub
cmps
mov
stos
(bad)
mov
lahf
mov
jae
pop
sub
dec
jge
jl
int
test
leave
or
cmps
push
pushf
popf
hlt
iret
mov
lods
jno
stos
sbb
dec
and
push
mov
mov
movs
sub
dec
add
sub
stos
xchg
iret
jmp
pop
sub
fist
add
hlt
mov
push
xchg
cmp
test
cld
fcmovne
sbb
pop
sti
jmp
jmp
inc
adc
scas
ins
cwde
xor
fmul
in
stos
jne
push
inc
cmps
and
push
jecxz
pop
sbb
dec
or
sbb
test
xlat
scas
(bad)
loope
sti
or
dec
cmp
cwde
out
out
cmp
sub
sbb
jns
std
ficomp
mov
cmp
(bad)
and
dec
pop
popf
pop
push
jmp
clc
stos
sub
and
inc
jecxz
inc
fwait
pop
adc
dec
xor
loopne
(bad)
lods
je
into
or
jge
mov
xchg
jae
pusha
ins
push
or
pop
jg
fisttp
daa
jle
cmp
imul
mov
and
jmp
sbb
sbb
dec
cmp
hlt
mov
jo
xchg
jge
inc
retf
leave
aam
jge
xchg
mov
ins
addr16
and
xchg
add
xchg
xor
dec
shl
push
and
mov
movs
retf
call
(bad)
fprem
enter
movs
xchg
or
sub
div
pop
(bad)
adc
add
fxch
test
cld
fadd
cwde
jo
xor
mov
shl
pop
cmp
(bad)
rol
sahf
cmp
sub
inc
dec
xor
and
and
add
fcmovbe
imul
imul
mov
dec
in
nop
rcl
ret
and
ficom
bound
arpl
pop
inc
repz
outs
iret
mov
call
ret
or
cld
pop
or
sub
jb
mov
movs
out
loop
push
popf
stos
inc
push
cdq
(bad)
jmp
pop
mov
jecxz
push
xor
xchg
lods
mov
ret
or
inc
fisubr
or
fidiv
std
pop
push
sahf
push
jns
inc
or
jmp
rcr
add
lea
xchg
dec
mov
movs
and
xor
inc
xlat
mov
lods
inc
pop
dec
xor
inc
sbb
fldcw
jbe
mov
xor
scas
sub
ss
push
add
outs
add
mov
pop
ds
pop
fcomp
push
clc
int3
push
ror
rol
inc
inc
inc
add
iret
mov
xor
dec
call
adc
retf
fwait
aas
xlat
(bad)
fs
xor
in
or
lahf
inc
test
loop
jno
pop
stos
inc
inc
adc
inc
cmp
dec
sbb
test
mov
mov
aam
dec
fcmove
mov
ror
and
add
imul
adc
and
scas
sbb
jnp
shl
inc
cli
(bad)
xchg
clc
cmc
out
mov
and
je
xchg
push
or
je
and
call
pop
and
stos
or
and
mov
aad
xor
jp
sbb
mov
inc
or
dec
imul
(bad)
cs
lea
pop
test
dec
push
pop
and
hlt
loop
xor
in
scas
sbb
mov
mov
imul
sbb
scas
outs
xchg
dec
cdq
and
jns
mov
add
aam
aam
outs
sbb
jmp
and
sbb
push
xor
xor
push
outs
ins
xchg
sub
push
pop
xchg
jmp
enter
push
or
test
out
mov
xchg
add
pusha
fld
dec
mov
dec
push
pushf
cdq
and
jae
jmp
push
and
jp
hlt
ss
fnstcw
xor
ss
cmps
xchg
das
ficom
dec
add
sub
inc
lea
pop
cdq
in
mov
(bad)
pop
out
(bad)
jnp
and
add
ret
call
add
and
daa
cmc
test
call
mov
adc
mov
push
in
jmp
mov
dec
lds
icebp
aaa
imul
shl
sahf
inc
xor
inc
out
imul
enter
push
dec
loopne
arpl
jmp
xor
mov
inc
sbb
add
arpl
int
aas
cmps
sbb
jbe
pop
sub
mov
mov
inc
and
in
stos
sub
mov
push
jno
shl
rcr
cmc
jnp
shr
fdivrp
cld
pop
dec
inc
es
jg
(bad)
fstp
jne
dec
sti
pop
cdq
fdiv
int3
popa
int3
lods
mov
mov
jg
clc
pop
adc
push
out
add
jmp
int
test
push
mov
ja
mov
cs
mov
mov
popa
dec
pushf
dec
addr16
xchg
push
adc
aam
inc
cmc
push
pop
movs
mov
xor
enter
jns
push
fisttp
imul
(bad)
fisttp
xor
jecxz
inc
cld
jno
cmp
xchg
pop
jecxz
inc
push
stos
call
mov
lock
lods
lds
mov
ror
mov
daa
adc
data16
mov
and
cmp
in
dec
and
pop
loopne
add
push
inc
xor
sbb
inc
cdq
fwait
mov
stc
mov
add
rcr
sub
daa
loop
inc
test
ror
push
xchg
pop
sbb
mov
add
xchg
test
mov
(bad)
xlat
jne
pop
ja
mov
sub
sub
mov
adc
or
fwait
shl
mov
sub
mov
(bad)
xlat
xor
jge
pop
(bad)
pushf
mov
in
iret
hlt
pop
push
fs
sbb
rcr
mov
adc
retf
and
dec
xchg
xor
mov
jl
jb
test
dec
rcr
out
ins
int
nop
lock
mov
push
fld
push
aad
fcomip
pop
test
pop
call
jp
cwde
(bad)
xor
push
rcr
sub
jmp
into
inc
sub
xchg
aam
imul
(bad)
mov
aaa
pop
mov
xlat
pop
imul
in
daa
and
sbb
daa
clc
mov
mov
leave
ins
xchg
cmp
add
icebp
sbb
call
push
jg
xchg
mov
or
loope
xor
cld
sub
inc
int3
clc
rcr
loopne
xchg
sub
test
xchg
pop
sbb
push
jge
fbld
pop
push
imul
aas
fmulp
and
push
sub
inc
add
aad
je
outs
mov
movs
sar
addr16
push
(bad)
in
jo
es
sub
ret
and
loopne
xor
jge
mov
jae
dec
in
adc
ja
icebp
mov
cmp
add
jns
dec
out
mov
loop
cmp
push
leave
clc
mov
mov
jmp
rol
repnz
div
mov
imul
out
es
icebp
inc
cmp
cs
adc
call
and
loop
xor
mov
shl
sub
inc
ins
lock
call
jp
push
or
mov
loop
out
push
cmps
sbb
repz
mov
imul
jbe
xchg
xor
and
(bad)
mov
push
adc
scas
fbld
adc
test
add
repz
and
or
push
daa
call
lods
add
nop
or
sti
inc
push
fwait
mov
mov
mov
sbb
inc
push
mov
inc
cdq
(bad)
lahf
inc
sub
sbb
dec
(bad)
jne
push
pop
jbe
cmp
pusha
mov
retf
imul
adc
xor
add
inc
dec
lods
jge
std
xchg
or
add
std
push
call
cmp
inc
aad
add
push
(bad)
aaa
pop
sbb
push
xbegin
add
mov
in
mov
test
push
shr
test
sti
dec
inc
xchg
sti
les
sar
inc
sub
jl
popa
or
shr
mov
xchg
jno
aaa
mov
xor
and
mov
mov
push
xchg
test
int3
push
and
mov
and
cli
dec
adc
(bad)
iret
test
pop
std
add
cmp
ins
add
sar
in
jae
(bad)
imul
xchg
sti
push
stc
nop
xchg
xchg
in
or
in
mov
cmps
les
aas
out
inc
and
fadd
pop
mov
add
in
cld
inc
mov
mov
cmp
xlat
cmp
xchg
ins
idiv
pop
inc
mov
dec
jl
mov
adc
mov
mov
ins
jg
(bad)
imul
fist
add
add
mov
cmp
in
mov
jo
jmp
cmp
in
mov
mov
push
test
fld
das
adc
and
loop
mov
ins
mov
cmc
adc
mov
ins
cs
ins
arpl
push
loopne
dec
fmul
dec
mov
inc
cmps
cld
mov
inc
push
retf
into
shl
adc
bound
cmc
push
add
xor
push
sbb
cmps
repnz
inc
mov
std
cmc
pop
(bad)
sub
mov
xchg
sbb
cmp
ret
dec
sub
xor
pusha
xlat
and
idiv
push
cmp
push
and
push
mov
dec
sbb
inc
mov
jbe
and
sbb
or
cmp
outs
gs
xchg
inc
clc
out
test
mov
outs
in
jmp
sub
loope
cmp
call
push
cld
mov
outs
pop
pop
lea
pop
data16
pusha
cmp
outs
fsubr
scas
mov
cmp
inc
movs
inc
mov
loopne
shl
mov
mov
data16
push
fs
jno
test
mov
mov
xor
mov
idiv
and
adc
enter
inc
inc
inc
out
js
and
or
or
add
and
xor
daa
mov
add
sti
cmp
sbb
sbb
pop
cmp
adc
dec
push
stos
pop
lock
mov
or
pop
aaa
xlat
dec
mov
call
call
cwde
adc
cmp
cs
jg
adc
jne
pop
fwait
mov
fadd
cmp
push
mov
repnz
sub
ret
add
mov
xor
andps
retf
and
test
push
int
mov
add
fbstp
inc
ss
mov
fdivr
push
fbstp
push
pop
repz
add
nop
daa
mov
scas
out
inc
xchg
mov
lods
cmp
adc
push
xchg
mov
push
push
jg
pop
or
or
jnp
inc
ins
into
xlat
sti
mov
sbb
jp
cmps
cmps
adc
enter
test
dec
cmp
cmc
and
loop
ret
in
into
push
pop
jne
std
xchg
adc
mov
sbb
inc
les
jns
mov
mov
push
loopne
fst
into
inc
jg
add
push
mov
dec
fdiv
mov
loope
out
mov
sti
xor
mov
loope
cmp
and
sub
adc
out
out
inc
mov
cld
mov
add
jmp
fist
sub
jle
jmp
inc
jmp
in
or
dec
lahf
inc
push
inc
retf
dec
adc
sub
es
fisub
sbb
mov
test
jge
mov
add
pop
jge
repz
push
sub
mov
or
mov
pop
cmps
shl
fld
(bad)
pusha
xchg
dec
lea
pop
mov
movs
imul
or
mov
cmp
es
add
out
xlat
cs
cmp
inc
lods
ffreep
mov
imul
rcr
and
fwait
(bad)
mov
je
cmp
jge
adc
call
stc
jb
retf
dec
dec
dec
or
mov
jnp
ins
push
fcmovne
cmp
ins
xor
int3
adc
in
test
jmp
out
jno
dec
outs
push
xchg
jp
imul
movs
arpl
popf
jb
xchg
xor
pop
loopne
jmp
aad
sbb
push
and
xor
mov
sbb
pop
jno
push
inc
movs
mul
lea
xor
dec
push
push
push
test
mov
sti
adc
pop
stos
dec
cmp
int
movs
fist
xchg
dec
ret
test
mov
mov
push
mov
popf
sbb
pop
push
fnstenv
mov
jge
test
push
je
mov
jb
mov
or
jmp
pop
aam
jge
fst
push
xchg
mov
sub
ror
inc
int3
sar
rol
xor
dec
mov
ins
pop
ror
push
imul
jbe
les
mov
cmp
mov
and
xlat
stos
fild
imul
movs
(bad)
pop
stos
and
retf
cld
or
pop
scas
movntq
out
in
out
or
nop
xchg
dec
inc
xchg
fst
in
xor
sub
cmp
sbb
icebp
pop
mov
push
dec
int
push
scas
mov
cmp
shl
jns
push
shl
call
mov
mov
fisubr
(bad)
pop
dec
int3
add
test
mov
sbb
or
mov
data16
dec
lahf
movs
inc
push
push
mov
jno
shl
retf
xor
out
leave
fisttp
not
inc
(bad)
jge
mov
or
fwait
adc
sbb
shl
push
inc
rcr
inc
loopne
inc
aam
xchg
xchg
clc
pop
inc
jle
pop
inc
xor
cmp
into
pop
and
mov
or
imul
add
sti
mov
sub
neg
push
loopne
dec
outs
in
mov
sar
add
cmp
out
es
sub
es
loopne
stos
push
iret
lahf
cmp
cmps
dec
imul
fild
retf
add
jmp
sbb
outs
pop
ret
aad
push
int
addr16
loope
sbb
aad
inc
call
retf
push
pushf
fisubr
retf
sbb
jbe
or
xchg
pop
sub
ret
inc
adc
sti
mov
and
push
push
cmp
jnp
jmp
sbb
ins
add
cmps
sbb
rcr
lods
mov
aaa
push
jns
das
(bad)
pop
sahf
xlat
ret
rol
aaa
cmc
fimul
cwde
fcom
mov
iret
std
clc
sar
nop
fcom
mov
in
outs
sbb
rol
stos
lock
add
sub
push
fwait
shl
in
fxch
dec
jecxz
cmp
inc
push
cmc
retf
imul
xchg
sbb
xor
mov
data16
popa
outs
sbb
push
stos
mov
mov
xchg
cmp
add
mov
aam
imul
sbb
xchg
rcl
addr16
sub
adc
mov
pop
imul
test
push
mov
pop
sti
fwait
sbb
pop
push
dec
pop
sbb
js
(bad)
mov
mov
push
cmp
and
fisub
bound
pop
aam
test
lods
scas
push
pop
xchg
dec
retf
xchg
pushf
add
sbb
inc
push
sub
cmp
mov
sbb
cmps
add
cmp
je
pusha
call
mov
mov
add
stos
rcl
xlat
das
ins
in
mov
jnp
je
xor
mov
push
mov
lods
and
pop
mov
adc
pop
rcr
aad
mov
xor
fstp
xchg
xchg
scas
outs
adc
add
inc
std
fiadd
add
test
dec
je
dec
pop
clc
les
imul
mov
pop
(bad)
mov
pop
lods
cmps
mov
or
or
sub
inc
fdivr
sbb
cmps
stos
leave
inc
mov
push
outs
out
int
xor
dec
dec
rcl
loopne
mov
or
push
inc
or
loop
mov
sub
adc
ins
xchg
mov
mov
mov
pop
idiv
or
or
sbb
adc
mov
fsubp
inc
and
sub
mov
xchg
aam
scas
repz
add
dec
dec
or
(bad)
stos
out
(bad)
sti
inc
xchg
loop
dec
and
mov
dec
sahf
imul
cli
clc
lea
addr16
out
scas
xchg
imul
sbb
mov
mov
into
push
sub
dec
sub
mov
js
push
push
(bad)
cld
xor
and
std
test
fs
cmp
inc
icebp
inc
push
sbb
add
inc
cld
pop
and
imul
dec
mov
mov
sbb
test
mov
and
push
arpl
out
jbe
(bad)
pop
popf
push
pop
xor
inc
pop
(bad)
push
pop
stos
out
inc
push
dec
shl
ins
push
pusha
mov
stc
es
or
inc
push
push
sbb
or
and
arpl
outs
jne
ret
movs
inc
nop
fld
sbb
call
rcl
and
(bad)
jbe
sbb
ja
(bad)
icebp
pop
retf
in
ins
sbb
sub
int3
lahf
dec
sub
or
and
push
(bad)
xor
add
loope
mov
call
jb
mov
mov
movs
int
test
daa
test
adc
inc
fstp
xor
adc
out
fisub
jmp
sub
add
pop
mov
ret
adc
gs
add
sub
std
shl
mov
cmp
vmovhps
movs
fwait
inc
xchg
sti
call
mov
scas
cmp
adc
popa
lock
xor
pop
xchg
cwde
jmp
cmp
ins
sahf
call
scas
ret
mov
xchg
sub
and
jbe
mov
test
int
iret
aad
inc
xchg
retf
add
dec
mov
inc
push
add
adc
dec
add
jmp
cli
push
ins
loope
rcl
js
sub
cs
xchg
test
repnz
(bad)
pusha
jmp
mov
push
ins
xchg
test
outs
sahf
hlt
mov
daa
cdq
jp
or
(bad)
loope
test
mov
mov
and
retf
je
mov
jo
inc
xchg
dec
test
movs
in
mov
or
push
aad
adc
sub
stos
pop
out
jmp
fist
and
call
fwait
jnp
rol
lahf
iret
mov
xchg
call
or
add
jae
movs
call
dec
int
cmp
xchg
jne
test
jmp
jp
(bad)
je
adc
mov
dec
rcl
push
shr
push
fwait
jmp
jns
xchg
sub
iret
mov
aaa
adc
sbb
add
int
ja
add
retfw
enter
adc
sbb
push
sti
fiadd
dec
xchg
push
mov
push
or
and
pop
xchg
inc
cs
lea
adc
retf
pop
in
rol
and
ja
inc
or
dec
dec
and
into
out
mov
xchg
into
jbe
mov
retf
in
(bad)
int
(bad)
and
ss
push
es
xchg
xchg
in
movs
hlt
xor
ret
rol
cmp
fadd
and
stos
int
or
xor
loope
cs
cmp
out
cli
pop
fdivr
xor
mov
pop
push
fs
lahf
xchg
cwde
sbb
daa
sub
cmp
fisttp
inc
dec
mov
(bad)
and
xchg
cmps
arpl
and
mov
iret
xor
test
pop
mov
rol
mov
call
pop
sbb
xor
data16
iret
sti
cmp
mov
retf
loope
inc
dec
mov
cld
jg
mov
push
retf
adc
xchg
adc
imul
retf
(bad)
js
xchg
mov
arpl
or
ja
sahf
and
or
sbb
cmp
out
neg
out
xlat
imul
in
clc
jmp
ss
cmp
clc
sub
sti
and
mov
(bad)
out
leave
loop
sub
dec
rcl
lea
cdq
popf
test
and
lods
ret
sub
popf
cli
stos
and
cmc
fld
jmp
popa
popa
ret
mov
cmp
test
xchg
adc
clc
mov
pop
loope
aaa
hlt
es
movs
and
or
pop
mov
jno
mov
adc
ja
and
mov
push
daa
mov
cmp
cwde
xchg
cmp
sub
ds
int
cmc
(bad)
std
rcr
sub
sti
mov
shl
mov
adc
lock
mov
not
push
pop
bound
inc
pop
rol
outs
xchg
arpl
mov
mov
dec
mov
mov
sub
jmp
icebp
test
push
adc
jmp
jbe
dec
push
mov
addr16
pop
test
inc
mov
into
dec
cmp
add
jo
jp
add
sahf
pop
scas
xchg
cwde
mov
mov
fidiv
and
sub
mov
mov
jmp
imul
xor
in
loop
test
es
adc
repnz
or
mov
leave
out
xchg
xchg
add
gs
pop
cmp
adc
add
lods
sub
xchg
jnp
fcmovb
pop
lods
sub
dec
mov
mov
(bad)
mov
pop
aas
adc
lock
cmps
dec
scas
(bad)
call
inc
pop
out
xor
jge
jb
jae
pop
or
retf
loop
scas
mov
aam
pop
sub
lds
or
fs
nop
mov
inc
imul
pop
add
nop
rol
cmp
cwde
add
leave
jl
pop
jmp
jmp
xor
ins
inc
stos
and
push
(bad)
cmp
loop
rol
and
mov
xchg
lods
inc
out
pop
js
xchg
fild
jecxz
mov
mov
mov
fsub
pop
pop
shr
add
push
and
push
ror
enter
jl
xor
mov
sub
leave
xor
mov
or
inc
xlat
fcomp
mov
push
mov
xchg
cdq
stc
cmps
jno
(bad)
sub
cmp
ret
push
jnp
lods
jnp
dec
retf
or
gs
pop
xor
jne
xor
sbb
inc
push
fcomp
add
stc
stos
jge
repnz
outs
jo
inc
adc
add
adc
jp
jbe
sahf
cmp
push
xor
mov
xchg
stc
cli
enter
sbb
sub
loope
inc
lea
rcl
stos
jns
adc
shl
in
mul
fmul
push
xor
mov
jo
push
push
inc
sub
mov
adc
es
push
or
push
pop
cmp
arpl
mov
fnstsw
push
dec
mov
int3
out
sar
cdq
pop
xor
inc
aad
leave
(bad)
stos
dec
(bad)
mov
cdq
xchg
mov
pop
mov
push
sub
shr
scas
sub
fs
ret
xor
add
loop
jmp
aas
jne
mov
outs
adc
fist
adc
(bad)
(bad)
dec
in
sbb
repz
gs
push
sti
in
cs
xor
jg
pop
sbb
call
pusha
mov
aad
sar
cdq
ret
(bad)
xchg
sub
imul
xchg
inc
xor
adc
rcr
xchg
push
iret
sahf
aad
inc
int3
inc
fsub
jbe
push
push
loopne
enter
or
dec
ror
enter
inc
cmp
jo
sbb
xchg
and
jnp
ja
add
mov
mov
dec
mov
je
je
imul
xlat
jle
and
ja
mov
hlt
xchg
xchg
sbb
loope
push
cmps
sub
jb
xor
lds
push
jnp
and
call
push
fwait
sbb
or
(bad)
xor
repnz
or
pop
scas
or
xlat
popa
ds
call
ret
in
xchg
gs
cdq
rcl
mov
mov
cli
pusha
(bad)
sbb
cmps
push
aaa
dec
cmc
push
idiv
or
mov
dec
pop
(bad)
movs
xor
int3
jle
mov
shl
mov
xchg
xlat
in
cmp
push
inc
jmp
ret
mov
xor
fucomp
pop
aas
retf
jns
cmps
popa
aaa
mov
mov
xchg
popa
cmp
int3
jb
sub
popf
or
enter
(bad)
loope
xchg
and
sbb
icebp
and
lds
movs
ret
inc
xchg
jae
fld
and
shl
stos
cmp
arpl
cmps
xchg
inc
scas
je
stos
adc
stc
fisttp
push
in
xor
ret
sub
sbb
inc
mov
test
jns
jne
aad
lods
in
sub
scas
test
inc
push
inc
mov
adc
xlat
push
sub
into
mov
mov
aam
pop
out
ds
pop
cmp
ds
ins
jmp
ret
lods
inc
mov
sbb
mov
push
adc
icebp
jb
jl
sub
lahf
adc
mov
xchg
mov
jnp
push
sbb
icebp
push
mov
aam
retf
rol
adc
test
add
push
jne
fbstp
jl
add
mov
sti
retf
(bad)
mov
push
xor
ins
mov
fld
add
das
xchg
xchg
push
ds
aaa
mov
and
std
and
jno
add
rol
cmp
arpl
outs
jmp
loope
clc
pop
sbb
(bad)
repnz
popa
xor
ret
dec
sbb
mov
mov
push
ja
mov
ins
icebp
ins
jl
ret
push
ja
ins
retf
in
cmps
cli
sbb
xchg
bound
sti
mov
bound
pop
or
adc
mov
aad
test
inc
sub
popf
mov
cs
cmc
fist
push
jo
push
xor
loope
hlt
mov
ins
xchg
call
test
jge
and
push
movs
fidiv
hlt
cmp
jb
outs
scas
(bad)
dec
jmp
add
jge
sub
jmp
add
(bad)
mov
or
sahf
out
mov
pop
jp
mov
push
adc
push
dec
xchg
jmp
xor
jae
pop
movs
jb
inc
mov
adc
mov
dec
mov
push
mov
les
inc
xor
mov
inc
jae
int
push
scas
js
and
and
mov
or
add
in
or
pop
popa
jbe
xor
lods
dec
sub
je
gs
pop
inc
es
into
cmp
cmps
daa
mov
fidivr
out
fimul
(bad)
or
add
jo
adc
call
dec
push
xor
test
jne
lds
xor
xchg
adc
or
out
out
inc
cmc
arpl
or
mov
fild
fisub
popf
pop
das
xor
jp
stos
cmp
test
(bad)
stos
lods
hlt
dec
mov
and
cmps
add
test
mov
jbe
es
mov
xchg
aaa
ss
retf
shr
xchg
push
sbb
in
int
or
mov
loope
pop
pusha
test
xor
and
push
and
mov
cwde
or
push
cmp
ror
retf
inc
mov
cs
mov
test
xor
or
mov
pop
gs
sbb
add
lock
add
mov
repz
xor
pop
pushf
or
xchg
pop
std
rol
loop
push
cli
addr16
xor
int3
mov
test
pop
dec
cmp
sbb
add
shl
jb
stc
iret
inc
push
lods
loope
aad
xor
movs
sbb
je
xor
sub
push
sar
pop
add
sti
out
rol
fs
push
rcl
mul
fisttp
jbe
push
xchg
pop
inc
xchg
pop
mov
inc
push
in
xchg
sar
add
sub
add
sar
retf
inc
dec
sub
fs
xchg
mov
(bad)
mov
in
sbb
xor
lds
jnp
(bad)
dec
inc
sub
fwait
xchg
sti
cmp
imul
jmp
(bad)
sub
jnp
sti
inc
inc
mov
xlat
jmp
dec
mov
mov
movs
inc
in
loop
add
arpl
fs
into
std
and
push
mov
dec
ja
lahf
cli
mov
mov
add
(bad)
imul
mov
pop
shl
push
mov
(bad)
in
rcr
mov
cmp
push
ror
mov
shl
in
xchg
inc
add
xchg
rcr
iret
fisttp
in
(bad)
push
xlat
cmc
popf
sbb
out
mov
into
dec
pop
mov
cmps
or
add
sahf
in
sub
pop
xor
scas
and
clc
jge
test
xchg
fist
and
jmp
mov
xor
fwait
jae
or
dec
jmp
mov
cmp
push
or
imul
fadd
xchg
and
aad
add
adc
or
and
pop
mov
sbb
pop
ret
out
or
mov
and
jae
jb
jmp
(bad)
cmc
push
int
adc
dec
cmp
push
daa
jmp
movs
jl
imul
push
ds
(bad)
push
xor
jb
dec
clc
inc
nop
jb
inc
pop
mov
cmp
dec
mov
adc
fcmovnu
out
mov
mov
or
adc
pushf
std
mov
cmps
mov
push
rol
cmp
imul
pop
mov
shl
sub
(bad)
jae
jnp
loop
ja
loop
ret
add
leave
xor
lods
sbb
push
push
xor
push
adc
jmp
add
dec
pop
dec
fucomi
(bad)
and
push
rcr
mov
jo
(bad)
out
arpl
dec
push
gs
es
xchg
sub
in
pop
and
push
lods
or
mov
in
mov
jne
ja
imul
sar
dec
and
inc
ds
mov
cmps
mov
jl
ins
outs
and
xchg
jns
mov
(bad)
(bad)
cli
sub
or
mov
jb
popf
add
xchg
ins
push
fstp
mov
retf
push
inc
xor
test
mov
xor
xor
cmps
push
pop
aam
xor
pop
sub
sub
or
je
rcr
cwde
out
loop
not
lods
dec
xchg
or
jmp
ror
inc
push
adc
xchg
sub
xor
add
or
cmp
cmp
das
retf
(bad)
sub
pop
out
xor
call
retf
or
bound
jmp
dec
int3
cs
nop
test
push
aad
sub
xchg
(bad)
lock
inc
or
mov
loop
xchg
sti
ja
test
sub
jb
or
push
mov
loope
out
sub
outs
sub
pushf
int3
lods
and
adc
fisttp
push
(bad)
pusha
sub
add
pop
lods
and
mov
jb
ins
and
aas
(bad)
jnp
xchg
push
cmp
mov
mov
rol
add
jae
repnz
push
stos
jle
mov
jae
stos
push
(bad)
mov
lock
out
mov
jns
xchg
movs
push
xchg
pop
dec
jmp
clc
xchg
ss
dec
pop
mov
xchg
out
push
inc
in
or
arpl
call
sbb
rcr
dec
pslld
loop
dec
scas
(bad)
and
add
xchg
or
rcr
test
pop
retf
jmp
push
sub
add
push
fmul
ja
lds
sti
adc
popa
cdq
inc
mov
xor
adc
sub
cmp
lds
in
(bad)
sbb
sbb
movs
stos
cmp
sbb
cld
mov
push
scas
jmp
xchg
jmp
jp
fisttp
sbb
fwait
cwde
rcl
nop
add
and
out
ret
stos
and
or
lds
or
lea
ja
push
fst
push
lods
popf
(bad)
lock
not
outs
inc
fsubr
push
jg
or
ret
xchg
call
dec
fdivr
(bad)
sbb
push
pop
jo
ja
xchg
stos
mov
cs
ja
mov
int
test
mov
leave
sahf
push
int3
pop
pop
ss
in
dec
pop
es
stc
scas
or
mov
mov
inc
cmp
inc
cmp
dec
aas
mov
dec
mov
stc
jae
nop
mov
and
fisttp
adc
push
int
(bad)
mov
adc
mul
xchg
pusha
enter
in
aam
sbb
push
inc
jmp
cmp
and
cmps
push
sub
push
push
test
call
mov
sbb
in
fimul
leave
inc
stos
imul
mov
pop
arpl
jmp
imul
retf
js
inc
and
mov
leave
xor
cmp
xor
out
xor
mov
dec
imul
ja
neg
aad
mov
pop
mov
dec
cmp
adc
sub
ins
(bad)
adc
imul
aad
and
cs
enter
cwde
dec
mov
jp
sahf
mov
les
dec
out
cli
lods
gs
push
sbb
or
hlt
loop
retf
xchg
mov
neg
add
ins
jp
cmp
or
sahf
arpl
push
das
stos
stc
inc
je
inc
movs
push
sahf
add
stos
adc
xor
div
xchg
jp
pop
loopne
test
and
sub
cmp
rcl
mov
mov
dec
mov
lods
jno
inc
push
or
dec
ss
xchg
push
fld
es
sbb
push
push
jbe
fiadd
xor
push
sub
pop
sbb
push
or
push
test
jnp
mov
pop
xor
dec
pop
inc
add
(bad)
hlt
call
stos
retf
mov
test
adc
jno
xor
cmc
xchg
xchg
pushf
cmp
mov
(bad)
and
es
stos
cmp
sub
push
xor
jae
movs
add
fdiv
loope
sbb
ins
push
dec
adc
mov
or
jmp
lea
(bad)
imul
and
add
call
dec
mov
cmp
mov
inc
mov
sub
jl
cmc
das
ds
das
cmp
sbb
jbe
sar
fwait
jl
xchg
dec
retf
cmps
mov
pop
add
and
add
cmp
xor
sbb
mov
jge
jge
jg
jns
dec
sahf
jo
imul
add
pop
(bad)
loope
pop
and
xchg
div
jl
add
xchg
push
iret
dec
outs
xchg
movs
cmp
push
jb
leave
div
dec
jg
pop
pop
ins
pop
inc
xlat
add
out
mov
aad
loopne
lock
jmp
push
or
adc
push
shr
data16
xchg
mov
sub
dec
xchg
and
lds
sbb
fwait
outs
in
pop
sar
sub
and
stos
test
dec
push
jmp
sub
push
leave
mov
je
xlat
cdq
jmp
lods
or
xor
push
jecxz
dec
inc
inc
mov
aad
fs
gs
jne
and
das
xor
xor
neg
add
cmc
bound
pushf
dec
movs
jmp
arpl
push
cmp
loop
mov
ins
xor
dec
add
out
sbb
stc
jg
push
and
pop
cmp
imul
inc
push
pop
jo
mov
shr
imul
mov
loope
lea
ja
pusha
dec
das
mov
(bad)
push
cwde
sahf
test
dec
dec
aaa
jbe
or
(bad)
sub
test
cli
cmp
add
pop
ret
add
push
popa
mov
imul
cmp
shl
fs
push
hlt
into
sbb
adc
enter
lods
add
push
xchg
adc
repz
movs
neg
mov
cli
fiadd
outs
jecxz
jbe
retf
inc
add
jl
repz
or
ja
in
adc
arpl
or
inc
out
cmp
out
sbb
jae
in
mov
bound
fsubr
jb
jno
cmp
arpl
dec
push
enter
mov
xchg
pop
es
mov
jbe
mov
sub
xchg
jp
(bad)
jbe
sub
sub
jge
lods
cmps
xchg
lea
jbe
mov
lds
sar
in
jge
arpl
sub
cld
(bad)
enter
jg
mov
sub
es
popa
and
or
test
pushf
iret
aam
jne
fdiv
movs
shl
shl
jbe
cmp
add
adc
cld
(bad)
lods
mov
mov
leave
push
push
and
movs
dec
(bad)
cmp
lods
cld
jp
pop
cmps
cmp
aam
nop
sahf
loope
arpl
not
ja
neg
js
xor
out
push
jmp
lods
fwait
test
sar
adc
daa
int3
mov
jg
das
add
sub
cwde
mov
lds
mov
xlat
xchg
pop
loope
push
inc
pop
push
sbb
add
push
int3
repz
mov
mov
add
mov
popa
mov
stc
xor
dec
arpl
ja
add
inc
cmps
cmp
or
or
inc
jbe
jecxz
in
jae
std
sbb
xchg
fidivr
shl
ret
shl
cld
add
stos
outs
adc
nop
and
add
test
test
lea
jbe
repz
mov
int
leave
jbe
ret
mov
aaa
clc
je
mov
pusha
mov
cmp
push
sub
shr
imul
sbb
pop
pushf
push
call
adc
or
arpl
xor
es
sub
lds
inc
sub
fcom
iret
dec
fistp
adc
and
add
inc
mov
push
test
or
jmp
jae
mov
adc
shl
push
jg
mov
lahf
pop
test
cmp
sti
fiadd
jns
mov
mov
mov
lds
lds
outs
xchg
shl
cmp
dec
mov
add
(bad)
bound
adc
and
xchg
xchg
test
cmp
outs
xor
je
add
pop
fadd
ss
cmps
addr16
xor
fmul
xchg
jl
push
int3
movs
and
dec
rol
pminsw
add
leave
inc
(bad)
outs
adc
add
jl
fld
test
cmc
push
int3
mov
jg
xchg
add
adc
loopne
push
xchg
adc
jecxz
mov
add
jmp
outs
rol
int3
mov
cmc
add
sub
inc
pop
test
call
(bad)
sbb
popa
adc
dec
call
mov
jg
and
inc
fcom
inc
test
push
fs
inc
add
call
push
adc
popa
ins
mov
daa
jge
stos
shl
sbb
je
inc
(bad)
fisttp
lods
jmp
jecxz
push
pusha
stc
jmp
ror
(bad)
ror
rol
lahf
sub
add
jg
lahf
xchg
mov
add
inc
out
adc
inc
pushf
repz
jle
iret
xchg
rol
dec
cmp
mov
jmp
and
fstp
or
or
adc
je
jne
retf
sbb
pop
mov
cmp
mov
(bad)
xor
pop
cs
xchg
mov
lahf
test
push
ins
sbb
inc
jl
lods
push
gs
pop
int
sbb
and
or
and
stc
or
xor
loopne
out
mov
dec
fld
test
push
bound
mov
dec
inc
sub
xchg
mov
jbe
pop
xor
inc
rcr
retf
sbb
jp
cmp
jno
inc
into
movs
sbb
pop
(bad)
movs
lods
jmp
adc
inc
jmp
mov
jmp
pop
retf
out
test
add
ja
cmp
(bad)
cmp
mov
push
mov
test
pop
repz
ins
jb
fsubr
jp
xchg
dec
in
xchg
popa
adc
adc
inc
loop
and
inc
int3
jno
or
jnp
push
mov
pop
push
push
pop
xor
stos
arpl
mov
mov
jnp
cmp
daa
jmp
mov
mov
cmp
int3
mov
dec
jecxz
cmp
xor
jmp
add
xchg
rcr
push
mov
(bad)
leave
pop
and
xor
pop
mov
ret
loope
mov
pusha
jns
out
or
rol
fsubr
dec
outs
dec
sub
fwait
mov
dec
push
(bad)
push
fsubr
aas
pop
xchg
data16
xchg
test
sub
mov
fidiv
ds
stos
ror
imul
inc
jle
pop
loope
loop
jmp
sbb
mov
fcmovne
mov
stc
stos
or
xchg
enter
test
pop
popa
(bad)
sub
xchg
shr
jb
mov
or
inc
test
bound
(bad)
out
out
in
rcr
fimul
stos
mov
adc
call
cmc
or
push
fisttp
pop
mov
mov
jl
xchg
(bad)
in
daa
mov
xchg
loop
push
mov
repnz
popa
scas
mov
pop
mov
enter
and
or
cmp
lods
out
sbb
nop
pop
add
mov
outs
adc
xor
xchg
arpl
jns
fstp
inc
(bad)
sar
outs
mov
in
(bad)
xor
cmp
and
js
xchg
or
and
js
xlat
jg
mov
sti
jb
pop
jb
and
loopne
sub
das
outs
in
mov
and
dec
pop
fisttp
loopne
out
pushf
xchg
pop
ja
cmc
inc
push
add
add
inc
mov
mov
mov
in
dec
into
ret
(bad)
mov
cmp
mov
or
leave
add
lahf
dec
addr16
sub
sbb
jnp
cs
jo
cmp
(bad)
jle
ret
retf
jno
mulps
adc
ret
xor
loope
adc
retf
pop
push
loopne
sbb
jle
xchg
in
aaa
addr16
loope
sub
iret
jne
mov
cmp
div
mov
dec
xchg
sbb
sbb
jle
leave
inc
popa
cmp
lods
add
dec
mov
arpl
dec
mov
dec
inc
popf
adc
call
movs
ins
lea
loopne
mov
test
add
sbb
sbb
push
dec
nop
add
fwait
mov
jmp
hlt
adc
sbb
les
outs
sbb
mov
adc
xchg
hlt
fld
mov
cmp
or
call
popa
and
(bad)
int3
lds
lahf
pusha
fcmovu
test
add
scas
cli
pop
pop
pop
(bad)
out
clc
add
test
push
push
jns
push
pop
push
icebp
jo
xchg
addr16
repz
fistp
sbb
cmps
mov
sbb
outs
add
or
imul
sub
test
mov
jmp
pushf
js
inc
cmc
mov
add
and
xchg
clc
pop
inc
stos
mov
mov
sub
int
fdivr
and
retf
dec
cdq
icebp
cmp
add
ror
fcom
shr
cmp
stc
pop
push
dec
dec
aaa
mov
scas
and
jae
loope
retf
jb
xchg
scas
loope
dec
xor
xor
out
mov
pcmpeqw
dec
dec
out
test
jp
(bad)
jb
call
mov
adc
sub
je
mov
jmp
dec
cld
fisubr
xchg
and
and
add
je
jg
adc
and
xchg
dec
dec
pop
mov
xor
push
and
iret
pop
sub
mov
cmp
ins
pusha
scas
pop
mov
test
sbb
(bad)
xchg
fs
xchg
sub
cwde
xchg
cmp
sub
not
leave
call
fldl2t
or
add
jle
xchg
pop
test
pop
int3
data16
rcr
sub
cmp
xor
mov
dec
out
push
inc
test
add
jnp
push
dec
out
xchg
sbb
in
fild
add
(bad)
dec
mov
inc
mov
lods
mov
xchg
cmps
popf
in
ja
mov
arpl
mov
add
push
or
scas
mov
sar
sbb
test
xor
call
mov
mov
shl
cld
or
shl
arpl
repnz
xchg
ins
mov
std
ret
cmp
jmp
mov
or
and
ror
daa
cmp
xor
jl
sbb
adc
sub
movs
jmp
push
or
sbb
popf
or
cs
inc
pushf
push
pushf
cld
jmp
ds
fadd
cmp
outs
sub
mov
es
xchg
retf
loopne
(bad)
out
xchg
shl
xor
mov
and
mov
iret
lods
jne
pop
xor
das
push
call
push
js
mov
push
or
add
push
sbb
lahf
addr16
fdivr
mov
mov
xor
lods
lds
mov
(bad)
jbe
ror
jne
sbb
jno
xor
(bad)
jns
mov
mov
fidivr
jns
mov
inc
inc
xchg
and
sbb
das
movs
push
sub
add
inc
outs
stc
cmp
retf
xchg
aad
nop
(bad)
jns
mov
lods
(bad)
and
adc
xchg
ffreep
add
lea
or
sbb
mov
movs
xchg
cmp
and
loope
cmps
push
test
jo
pop
loopne
mov
adc
loop
mov
add
sub
push
dec
sti
fsub
sbb
cmp
daa
stos
cmp
mov
(bad)
(bad)
xchg
mov
xchg
push
add
fdiv
outs
sahf
int3
lds
jae
scas
lea
stc
mov
and
(bad)
pushf
ret
mov
xor
call
in
scas
jns
sub
scas
push
adc
or
cmp
add
in
out
jns
xor
mov
in
push
dec
add
(bad)
cmps
push
movs
ja
mov
pop
fcmove
aaa
jge
das
neg
mov
mov
test
pusha
jb
or
ins
cmp
int3
stc
adc
mov
lea
push
push
inc
inc
das
sbb
(bad)
ret
add
cld
je
movs
ret
into
mov
test
div
add
sti
add
scas
shl
int3
ss
jmp
add
into
mov
jmp
jecxz
aam
rcl
fs
test
ret
cmp
xor
aam
push
fwait
adc
add
mov
push
jmp
enter
outs
dec
hlt
cmp
test
jbe
pop
inc
pop
rcl
mov
repnz
push
dec
outs
(bad)
push
es
les
mov
imul
lahf
inc
and
retf
les
shl
mov
cli
hlt
xor
jbe
jmp
in
retf
add
dec
rcl
test
push
aam
lods
mov
inc
cmp
sub
(bad)
daa
sbb
cld
dec
push
cmps
mov
repnz
imul
fadd
shr
add
out
imul
ins
xlat
ins
or
pop
xor
dec
in
sbb
fadd
clc
mov
js
es
jge
scas
pop
arpl
(bad)
out
mov
in
add
loop
cwde
jno
in
pop
jmp
jp
mov
shl
nop
les
cmp
in
in
jmp
add
inc
fisubr
jns
xor
ret
mov
jo
xchg
ds
ds
vcvtsi2ss
js
sub
inc
xchg
push
fst
jmp
and
gs
outs
in
retf
in
mov
mov
or
or
hlt
not
ficomp
adc
sub
cmp
sbb
adc
sub
xchg
outs
icebp
cld
test
fsub
shl
xchg
int3
clc
lahf
lods
pop
mov
stc
mov
dec
add
or
mov
fdivr
mov
xor
mov
jl
in
movs
mov
adc
mov
push
xchg
ja
push
push
sti
pop
add
retf
(bad)
cdq
into
mov
loop
xlat
ds
add
mov
pusha
sbb
cmp
xchg
push
inc
mov
(bad)
add
mov
mov
sub
xor
stc
nop
popf
in
enter
mov
or
mov
aad
nop
jecxz
fistp
and
push
jle
dec
je
push
mov
sub
pop
and
jmp
dec
(bad)
sbb
sub
jno
out
add
data16
imul
push
in
fwait
and
mov
mov
arpl
and
imul
dec
fisub
adc
inc
inc
sbb
jp
fldcw
leave
out
fnclex
push
pop
xlat
hlt
lock
jne
(bad)
jg
test
cmps
xchg
in
retf
add
sub
aad
(bad)
ror
enter
test
mov
fs
jp
cmp
xchg
xchg
sub
add
test
xchg
rcr
jb
inc
mov
sub
or
or
aaa
xchg
mov
ret
daa
jo
jns
aam
sbb
mov
adc
test
add
mov
lea
aam
scas
scas
test
mov
sahf
xor
cmps
test
call
into
xchg
loope
mov
mov
ja
movs
(bad)
in
adc
bound
js
push
loopne
add
shl
sar
add
add
push
ins
scas
or
jle
sub
push
stos
and
popf
dec
pop
jns
mov
pop
movs
les
imul
hlt
cmp
mov
mov
(bad)
movs
rcr
ds
sub
pcmpeqb
je
jle
int3
call
xor
stos
and
mov
inc
lock
data16
jmp
mov
sbb
ret
inc
and
jecxz
xchg
jae
xor
movs
icebp
and
push
fmul
in
in
lock
sti
dec
mov
movs
push
jmp
xor
jmp
sahf
and
cld
push
inc
pop
cmp
sbb
enter
sbb
jnp
xchg
in
int3
rcl
pop
aas
loopne
xchg
xor
sbb
dec
movs
and
iret
add
jne
mov
jns
fsubr
dec
rcr
rcr
mov
or
or
xor
fs
fs
out
daa
call
adc
shl
movs
dec
sbb
sub
pop
adc
mov
dec
aaa
fiadd
sbb
scas
mov
hlt
adc
xor
adc
sbb
fld
cmc
xchg
adc
fisttp
jnp
fimul
and
push
or
cmp
xlat
test
or
mov
fs
jle
cmps
jg
dec
jbe
mov
mov
outs
mov
xchg
mov
inc
scas
pop
inc
dec
and
push
les
movs
inc
retf
mov
cmp
xlat
pop
xor
fnstcw
sbb
ins
hlt
shl
pop
jbe
inc
std
push
adc
add
pop
xchg
inc
push
fidivr
lods
sbb
fwait
mov
sub
add
sbb
add
sbb
xchg
stc
cdq
mov
arpl
jae
inc
retf
stos
pop
(bad)
xchg
out
daa
push
in
dec
cs
imul
pop
(bad)
xchg
sti
test
mov
xchg
imul
push
mov
aaa
push
mov
(bad)
das
pop
mov
addr16
and
jge
jg
or
sub
jne
test
jnp
xchg
ins
inc
ficom
sub
retf
dec
test
dec
mov
and
popa
adc
retf
jmp
sub
mov
(bad)
call
sbb
push
dec
movs
in
seto
push
mov
pop
std
arpl
pusha
pop
ror
inc
sahf
dec
jb
outs
aad
xor
nop
sbb
jecxz
or
aaa
pop
and
jmp
dec
jmp
pushf
xor
dec
push
test
mov
cmp
scas
mov
jns
fs
push
das
sti
fisttp
stos
jbe
(bad)
imul
and
dec
clc
dec
pop
pop
shr
xor
out
xchg
lds
jb
movs
add
cmp
dec
xor
push
pop
add
jg
sub
aad
lods
outs
mov
inc
jp
sbb
movs
dec
xor
xchg
jg
clc
ds
pusha
mov
adc
imul
int
xchg
mov
and
and
outs
xchg
cmp
cmp
or
inc
xchg
idiv
(bad)
xor
mov
push
test
cmp
or
mov
outs
jle
rcl
add
popa
mov
mov
and
sbb
add
jg
test
arpl
retf
fld
je
sar
inc
das
inc
in
or
xchg
sub
mov
mov
push
push
dec
jmp
sbb
wbinvd
ja
cmp
rol
test
inc
pop
add
sar
pop
mov
dec
xor
sbb
test
rcr
lock
ins
mov
ret
xchg
in
jnp
push
cmps
test
jbe
or
adc
popf
stos
push
adc
(bad)
and
mov
addps
push
pop
lods
jp
ret
loope
push
mov
jno
jmp
fisttp
mov
inc
iret
mov
xlat
sub
es
dec
call
int
mov
and
call
sub
adc
neg
sub
clc
std
nop
ss
jmp
adc
adc
test
scas
inc
jl
nop
pusha
adc
out
jb
and
mov
out
ror
mov
into
add
loopne
std
cli
loop
cmps
imul
pop
out
stos
dec
xchg
push
fidivr
fist
outs
out
inc
inc
ror
call
cmps
aaa
stos
pop
xchg
and
dec
or
loop
fisubr
adc
and
clc
or
push
push
movs
push
xor
fs
mov
clc
jp
pop
ja
mov
push
sti
xchg
push
pop
jo
inc
es
(bad)
pushf
(bad)
push
adc
mov
and
enter
add
shl
ins
lods
sti
xchg
shr
dec
les
and
shl
stc
and
jbe
or
pop
int3
mov
xchg
push
leave
cs
es
(bad)
fist
stos
jae
xor
mov
icebp
ja
lock
loopne
sahf
pop
in
add
fisub
adc
push
ret
cmp
cmc
leave
fs
add
sub
add
jge
popa
fadd
pop
test
es
cmp
ficom
dec
xor
js
sti
fwait
lods
outs
ret
clc
jnp
jns
jb
mov
pushf
fsubr
shr
dec
pop
inc
adc
dec
loop
retf
dec
xor
cs
nop
push
mov
or
inc
jb
jae
push
mov
adc
aaa
xchg
loopne
(bad)
or
stos
call
mov
adc
pop
into
pop
icebp
movs
mov
push
jmp
icebp
xchg
ins
retf
mov
ss
dec
in
(bad)
lahf
inc
cwde
inc
adc
jbe
jmp
(bad)
sar
fisttp
scas
inc
cs
jne
into
pop
mov
es
fist
or
pushf
inc
loopne
jecxz
movs
rcl
jns
mov
or
mov
fbstp
popa
repnz
(bad)
mov
jmp
or
cmps
cmp
lods
pop
xchg
jbe
mov
movs
cld
mov
jle
out
leave
retf
xchg
into
fimul
or
xor
ss
pop
dec
pop
mov
(bad)
retf
lock
sbb
mov
inc
aam
in
push
adc
je
invd
adc
mov
mov
adc
ret
pusha
imul
pop
xchg
or
xchg
push
xor
ds
or
add
fs
outs
out
retf
mov
or
mov
mov
add
push
lds
retf
sbb
rcr
fs
mov
xchg
test
into
inc
pop
xchg
mov
outs
mov
ret
(bad)
stc
adc
test
call
push
and
mov
sub
dec
sbb
jns
mov
mov
cld
mov
or
sbb
adc
mov
addr16
push
ret
lahf
or
xor
pop
cmps
daa
xor
scas
mov
sub
pop
mov
fsubr
mov
enter
rcr
sub
outs
jl
xor
jmp
jecxz
addr16
cwde
loope
arpl
cmp
push
ret
outs
xchg
(bad)
jae
call
push
cdq
jo
scas
(bad)
mov
pop
mov
add
or
stos
scas
aam
pop
push
pusha
push
bound
push
xor
stos
(bad)
aad
test
cmp
sub
mov
test
ins
cmps
jnp
mov
mov
jne
mov
test
jo
add
outs
sbb
mov
dec
lahf
sbb
mov
mov
jl
dec
cld
pop
xor
xchg
mov
adc
push
sbb
mov
and
cmp
pop
nop
lock
jp
jbe
sub
inc
push
xchg
stc
jl
sahf
data16
and
mov
sbb
sbb
div
das
add
(bad)
call
imul
ins
fwait
mov
ins
dec
mov
jno
shl
aad
jno
scas
std
xchg
(bad)
sbb
push
imul
das
push
pop
fwait
sub
push
bound
movs
mov
icebp
scas
int
xor
mov
leave
xchg
push
fidiv
push
iret
out
mov
ret
jge
mov
addr16
xchg
mov
sti
movs
aam
xor
ds
push
outs
ficom
ret
shr
clc
adc
add
add
lods
dec
sbb
addr16
cmps
or
fstp
xchg
std
cmp
inc
push
repz
dec
dec
fdivr
xchg
push
lds
mov
std
jnp
dec
lahf
(bad)
add
xchg
retf
gs
jo
adc
mov
jno
dec
ret
cli
stos
add
mov
rol
in
mov
xor
or
pop
movs
rcr
push
daa
imul
jmp
retf
icebp
sar
daa
stc
mov
je
jmp
jnp
sti
jns
shr
jb
lahf
sbb
(bad)
xchg
dec
sub
xlat
ins
add
xor
jmp
lods
adc
jge
into
adc
push
mov
mov
shr
jnp
lock
cmp
or
mov
mov
sbb
sar
shl
push
out
sbb
push
ins
push
(bad)
js
push
(bad)
jae
ins
inc
dec
inc
and
mov
jmp
out
loop
mov
data16
xor
sub
rcl
sub
mov
lea
ret
mov
xchg
sahf
jmp
mov
cmp
sub
add
nop
stc
inc
cmp
cmp
push
mov
jo
inc
add
movs
test
mov
sahf
or
ror
jle
not
xchg
sti
inc
adc
(bad)
in
fs
in
out
jno
mov
mov
stos
jmp
(bad)
test
(bad)
test
and
mov
and
nop
mov
mov
push
shl
push
bound
inc
das
sbb
xchg
into
sbb
in
dec
es
sar
sub
out
jno
pop
and
dec
sub
fadd
mov
shl
test
jmp
mov
jg
pslld
jns
or
call
xchg
add
sbb
bound
out
pop
retf
mov
shl
mov
xchg
or
mov
add
and
mov
pop
es
shl
and
in
mov
pop
sub
mov
dec
popa
lea
push
push
shl
sbb
and
cmp
(bad)
not
inc
nop
mov
cld
push
arpl
xor
fistp
xor
pminub
push
enter
or
mov
lea
mov
push
jmp
mov
jne
iret
add
mov
leave
and
push
repnz
mov
ins
cdq
ins
cmp
pop
jl
adc
arpl
out
(bad)
icebp
stc
jns
lods
mov
push
scas
xchg
or
inc
cs
out
or
int
fnstenv
je
das
ins
mov
hlt
repnz
push
mov
cmps
ss
fldenv
mov
push
push
loop
ret
mov
cwde
nop
icebp
sbb
mov
shr
mov
call
push
in
lahf
dec
adc
retf
fisubr
add
jmp
pop
mov
loopne
add
push
inc
add
enter
pop
mov
fwait
mov
cmps
sub
retf
test
lock
mov
sar
mov
jmp
adc
dec
retf
jmp
ds
cmp
daa
scas
enter
pop
shl
in
xor
lods
pop
mov
out
cld
cmp
in
ret
mov
xor
scas
pop
test
cdq
scas
idiv
jle
add
dec
jg
xchg
and
mov
lods
add
dec
mov
dec
lods
mov
adc
xor
(bad)
sbb
pop
cmp
dec
push
jle
hlt
jno
loope
imul
pop
js
jns
daa
test
dec
push
test
mov
fadd
outs
rcr
out
cs
nop
int3
or
or
sub
pop
dec
lds
loopne
lock
xchg
sbb
and
sar
cmp
push
popf
pop
mov
and
nop
sub
push
test
addr16
inc
(bad)
addr16
mov
push
cdq
das
fnsave
arpl
cli
cld
sub
add
int3
mov
ret
mov
aad
dec
adc
sub
retf
call
icebp
mov
xor
es
retf
nop/reserved
fstp
bound
sahf
xchg
jmp
jle
lahf
sbb
jl
jnp
adc
jecxz
push
enter
ins
shl
outs
inc
push
pusha
jle
leave
gs
push
imul
push
outs
fsubr
mov
cs
mov
add
inc
pushf
arpl
in
xlat
xchg
inc
push
pop
cmp
cmps
cs
jae
in
pop
ins
xor
sbb
into
xchg
pop
arpl
daa
aam
cld
ss
retf
adc
push
int3
inc
push
pop
ret
(bad)
adc
xchg
push
pop
jp
sub
cmp
sbb
and
fld
es
cmp
or
lods
and
cmp
iret
xchg
xchg
jle
cli
pop
(bad)
iret
xchg
scas
movs
mov
mov
loop
gs
dec
jns
mov
push
or
cwde
jmp
pop
(bad)
xchg
cmp
out
mov
addr16
out
dec
jne
test
rol
jmp
mov
cmp
loop
sbb
jno
stos
mov
mov
les
pop
mov
retf
dec
push
fcmovnu
sub
into
ss
xor
mov
mov
pop
and
add
jb
out
aaa
xor
in
data16
movs
mov
inc
in
xchg
xchg
and
(bad)
sbb
and
aas
and
fs
dec
lds
in
mov
xchg
sbb
add
shl
sub
loopne
sbb
jae
inc
sbb
test
arpl
jle
sub
xchg
sbb
and
or
cld
js
or
jecxz
rol
test
in
push
in
mov
pop
fld
or
adc
out
scas
inc
jle
adc
push
jbe
ins
sub
or
in
xor
stc
pusha
(bad)
and
shr
(bad)
mov
mov
shl
push
mov
not
in
and
test
dec
sbb
ja
mov
dec
xchg
shl
adc
cmc
ds
pop
(bad)
adc
stos
(bad)
add
(bad)
rcr
mov
cmps
add
pop
sahf
test
push
es
sub
xor
jmp
sar
sbb
adc
lods
mov
mov
pop
fistp
push
xor
(bad)
cdq
(bad)
dec
pop
xor
inc
push
in
and
sbb
xchg
pop
pop
inc
push
sahf
cmp
mov
data16
retf
push
in
out
inc
add
sub
inc
and
aam
push
retf
loope
and
xchg
push
sbb
scas
and
xor
jb
inc
cs
mov
sbb
dec
jl
sahf
adc
cmp
dec
adc
cmp
call
mov
hlt
xchg
fimul
push
pop
test
mov
xchg
imul
add
cld
inc
dec
cmps
test
mov
jbe
(bad)
mov
sbb
les
jge
mov
mov
loope
repz
repz
and
jmp
dec
add
jns
push
and
ret
aas
test
jo
sti
jge
xchg
cpuid
and
sbb
sar
cmps
out
pop
popf
jo
sub
repnz
cli
js
dec
sub
push
cmc
mov
pop
or
nop
adc
jb
call
fdiv
fidivr
rcl
pop
daa
inc
and
lahf
fwait
mov
cmp
repnz
ins
(bad)
mov
shl
xchg
(bad)
push
arpl
sub
mov
pop
sub
jle
push
push
jp
and
(bad)
dec
or
or
jb
push
inc
xchg
xor
cdq
(bad)
mov
inc
mov
add
in
pop
xchg
add
sbb
adc
inc
movs
ror
inc
inc
cmp
imul
mov
repnz
addr16
call
repnz
or
ins
pop
add
aam
daa
sbb
repnz
test
cmp
cmps
int
mov
icebp
inc
cld
aad
dec
(bad)
aaa
into
push
fst
lock
adc
hlt
push
add
mov
or
sbb
dec
adc
jns
mov
and
cmp
test
stos
fdiv
in
add
mov
mov
jmp
adc
cmp
ret
lds
gs
pop
mov
icebp
enter
cmps
cmps
in
dec
push
or
shl
or
les
xor
jge
aad
or
cmp
sub
stos
sub
sbb
and
test
xor
and
int
lds
jne
fisttp
add
(bad)
lods
es
out
cmp
inc
(bad)
lahf
adc
xor
stc
mov
sbb
dec
sbb
sbb
mov
cmps
and
retf
cmc
xor
(bad)
idiv
(bad)
lock
ret
movs
inc
mov
push
(bad)
adc
stc
mov
in
inc
out
test
hlt
pushf
cmps
jecxz
mov
inc
ret
mov
and
xchg
pushf
mov
arpl
imul
cdq
dec
in
sub
inc
(bad)
xchg
in
pushf
outs
push
xchg
mov
fwait
inc
daa
in
in
repnz
sbb
cmp
sub
(bad)
jmp
xchg
pop
cmp
mov
xor
sub
sub
jmp
rol
or
inc
shr
call
es
pop
es
ficomp
jle
dec
call
inc
idiv
jnp
sub
jecxz
mov
mov
popa
bound
movs
cmp
xchg
shl
je
dec
mov
cmp
xchg
es
mov
lods
sbb
mov
(bad)
cmps
xor
pushf
mov
dec
adc
jno
add
hlt
fcomi
dec
pop
out
add
jmp
mov
in
mul
rol
xchg
xor
ins
and
sub
call
imul
mov
test
jmp
inc
cmc
inc
jg
outs
js
inc
jle
sub
pushf
xchg
mov
pusha
xlat
jecxz
pop
cwde
pushf
scas
mov
into
je
mov
cs
push
pushf
pop
ret
push
pop
ins
push
lock
lods
hlt
ficomp
mov
cmc
push
sar
mov
les
adc
call
call
adc
fwait
adc
imul
xchg
cmp
fsubr
daa
dec
repnz
aam
or
push
pop
push
call
pop
inc
cli
repnz
push
mov
bound
inc
mov
fadd
add
je
mov
out
pop
call
shl
adc
fwait
dec
push
leave
mov
pop
xor
inc
lods
or
mov
and
repnz
shr
(bad)
inc
xor
ss
xor
push
fs
adc
mov
lahf
loopne
cld
shl
xchg
add
sti
rcl
cmp
push
cmp
aas
mov
ja
jb
dec
or
or
outs
push
and
cmp
cdq
cmp
dec
ds
(bad)
jno
mov
xor
add
push
cmc
pop
test
(bad)
xor
aas
(bad)
call
xchg
or
add
dec
dec
xor
pop
daa
ror
or
aaa
enter
jno
adc
mov
jp
add
repz
fld
ja
fwait
ror
popa
adc
out
fwait
loope
pop
in
jl
out
mov
cmp
jne
add
xchg
push
imul
scas
sbb
js
sbb
sub
xchg
cmc
clc
lods
call
scas
les
and
mov
mov
retf
jmp
and
dec
add
xlat
xchg
mov
cmps
adc
sbb
pop
push
icebp
loope
pop
ja
and
inc
ret
xchg
xchg
rcr
retf
inc
cmp
pop
fst
add
fdivr
out
jns
(bad)
dec
inc
daa
je
pop
cmp
in
mov
pop
aam
push
push
sbb
gs
and
movs
call
jg
das
lea
push
sahf
aas
test
pop
sub
dec
std
sub
ins
or
adc
pop
popf
push
push
mov
movs
push
ja
js
nop
addr16
add
inc
push
pusha
in
adc
push
pop
leave
cmps
jno
mov
stc
jns
fwait
dec
ins
add
out
loop
ja
repz
add
loope
or
mov
push
test
jecxz
ficom
jmp
xchg
sbb
dec
es
mov
and
aad
popf
(bad)
shl
xor
ret
lds
aas
ins
sub
adc
(bad)
dec
mov
fild
inc
mov
sbb
mov
xchg
xchg
sbb
jae
ja
ja
and
mov
(bad)
popa
mov
add
dec
popa
add
in
cmp
fld
cli
nop
pushf
mov
jb
jge
test
mov
and
fidiv
sbb
fcmovnb
call
mov
adc
push
std
dec
lock
push
inc
mov
mov
sbb
vmovdqa
out
dec
lea
pop
stos
jmp
sub
push
hlt
xchg
outs
jno
inc
pop
push
cmps
(bad)
sub
scas
shl
pop
sbb
int
(bad)
mov
mov
mov
(bad)
cli
pop
sbb
ret
mov
lahf
mov
fiadd
or
ins
xor
test
imul
mov
push
call
cmp
or
push
pusha
call
test
push
hlt
push
add
pop
and
scas
pusha
int3
ins
mov
or
pop
fstp
pop
nop
push
icebp
mov
push
mov
jmp
popa
jae
jo
ds
adc
xchg
aad
fs
sub
fistp
and
(bad)
ja
rcl
mov
add
pop
jae
cmps
push
gs
nop
fisttp
fsubr
lock
or
cwde
movs
stos
(bad)
jle
mov
jb
stos
scas
nop
ins
jbe
adc
fisttp
fsubr
xchg
dec
loope
push
es
stos
lods
xor
push
and
adc
and
push
inc
sar
out
jle
imul
popa
lea
adc
adc
aas
faddp
fcom
adc
push
jmp
xchg
ds
out
lds
and
lahf
fdiv
js
(bad)
jmp
push
push
and
sub
enter
inc
int3
es
mov
fcom
inc
cmps
push
push
int3
fnstsw
dec
jg
xchg
sbb
fstp
outs
dec
cwde
mov
ret
dec
int3
mov
ret
mov
mov
add
sbb
mov
mov
imul
xchg
pop
sbb
inc
retf
pop
(bad)
je
jg
or
xor
sub
fidiv
aaa
and
(bad)
push
jb
or
psrlq
cmp
fwait
mov
ror
push
mov
pushf
mov
push
mov
dec
mov
int
sub
das
idiv
inc
std
outs
stos
(bad)
pushf
test
dec
retf
xor
jbe
mov
ret
movs
cmp
mov
mov
sbb
jne
add
sub
in
nop
or
sub
adc
and
and
ret
jg
inc
sub
ins
pop
mov
je
push
out
jl
dec
(bad)
mov
les
retf
adc
or
jmp
pop
lahf
fisubr
pop
pop
cmp
mov
adc
cmc
ds
or
retf
cld
cld
mov
in
push
aam
pop
outs
push
mov
mov
popa
mov
pop
jmp
xchg
rol
bound
fs
loop
sbb
sub
add
push
or
shl
loope
xor
cmc
or
arpl
mov
cmp
scas
xor
ret
push
rcr
jmp
pop
imul
adc
add
mov
(bad)
fisub
stos
cmp
and
pop
push
and
aam
push
jl
mov
cmp
add
or
pusha
mov
and
mov
dec
outs
fcom
mov
ret
outs
inc
push
pop
add
into
loope
ret
adc
movs
mov
(bad)
cld
cld
push
int3
std
push
rol
or
push
test
sub
cmp
xor
sub
arpl
(bad)
adc
je
inc
dec
mov
adc
adc
add
and
lods
outs
cli
mov
rcl
mov
and
fcomip
stos
fsubp
call
or
push
jnp
add
add
loop
pop
js
or
inc
dec
repnz
cmc
outs
adc
sar
retf
pop
sbb
enter
inc
out
sti
cwde
or
cld
(bad)
(bad)
fild
repnz
jb
mov
adc
nop
adc
lock
pop
dec
cmp
push
(bad)
je
jns
(bad)
cdq
xchg
test
int3
(bad)
test
jno
fs
push
call
jecxz
jae
xchg
cmp
popf
mov
add
cmp
js
(bad)
mov
xchg
out
not
sbb
push
or
mov
jnp
mov
adc
lods
int3
popa
inc
cmp
push
jno
mov
pop
add
dec
shr
sub
lods
adc
add
sub
push
repnz
sub
jmp
sbb
movs
stos
add
mov
mov
lods
stos
inc
imul
mov
push
jl
add
dec
fisubr
(bad)
fmul
xor
neg
shl
fwait
dec
mov
out
cmp
fist
ficom
retf
in
arpl
push
pop
sub
aas
mov
cmp
jne
adc
ja
in
push
add
cmp
icebp
and
lds
popa
xor
fistp
inc
inc
stos
fdivr
shr
xchg
leave
jg
lods
cmp
cdq
and
xchg
mov
in
(bad)
fld
mov
sbb
jnp
fstp
ja
push
rol
(bad)
out
ins
jbe
fldenv
cmp
fs
frstor
mov
cmp
not
push
cmp
add
cmp
pop
scas
xor
xchg
in
bnd
add
neg
push
sbb
push
sub
repz
sbb
sbb
cld
cmp
icebp
hlt
and
sub
pop
or
movs
movs
cmp
xor
scas
ficom
test
fs
lahf
push
movs
in
xchg
inc
inc
test
inc
cmp
xchg
pop
inc
aaa
and
nop/reserved
(bad)
sub
push
fs
xlat
jno
or
nop
scas
les
pop
xor
in
popf
mov
bound
push
retf
call
jnp
cmp
mov
and
lods
xor
dec
sub
rol
(bad)
vpsrld
cli
mov
pop
jmp
pop
gs
jbe
inc
inc
popf
call
lods
(bad)
sar
cld
pop
mov
jnp
mov
push
adc
leave
xchg
lock
out
inc
aaa
pop
mov
leave
sub
and
xchg
shl
test
test
mov
cmps
push
dec
add
mov
cmp
xor
fidivr
mov
sbb
xor
pop
push
add
addr16
push
adc
push
clc
push
add
rcr
daa
loop
fs
mov
push
(bad)
sbb
rcl
sub
adc
jnp
or
inc
sti
je
dec
inc
fld
inc
loopne
adc
out
mov
cmp
cmp
int
add
add
lds
nop
sub
mov
fs
dec
ds
daa
iret
outs
les
sbb
inc
push
push
add
pushf
(bad)
jno
sub
call
cmc
shr
shr
push
sbb
lahf
pusha
imul
addr16
stos
pushf
mov
cmps
aas
cmc
sbb
xor
jecxz
or
fcom
and
mov
xor
rcr
cmp
xchg
or
push
mov
cmps
stos
aam
lods
mov
dec
movs
sbb
sbb
cld
fsub
mov
push
push
sahf
(bad)
jo
jno
add
out
ins
mov
and
mov
leave
leave
fcmovu
mov
add
push
and
mov
sbb
icebp
in
fstp
push
mov
ret
clc
add
mov
ret
retf
jge
and
mov
mov
cdq
or
jl
outs
sbb
pop
mov
push
pop
mov
jmp
pop
rcr
(bad)
out
outs
and
cmp
xor
out
and
iret
daa
push
xchg
mov
inc
push
nop
or
data16
les
sub
cmc
ret
push
and
xchg
jno
push
and
push
mov
cmps
sbb
or
mov
bnd
or
jbe
adc
push
inc
xor
mov
jmp
pop
mov
mov
xchg
sar
cli
push
loop
ins
nop
add
rcl
push
lods
or
mov
ins
xor
xchg
scas
scas
sub
pop
retf
and
nop
dec
push
lock
in
int3
ins
inc
sti
ds
std
(bad)
dec
sbb
int
je
jmp
icebp
mov
or
retf
cmps
jl
jp
push
int
push
dec
movs
ins
mov
out
xchg
js
sbb
or
sub
mov
aad
popf
jp
leave
aaa
push
sahf
(bad)
jns
add
stc
shl
test
cmp
add
popa
std
test
repnz
je
icebp
pop
mov
pushf
xor
xor
lods
lods
and
xchg
iret
ret
xor
scas
sti
dec
xor
fwait
and
pushf
repnz
imul
shl
xchg
neg
hlt
fcom
std
pushf
cld
int
aam
in
mov
add
xchg
xchg
adc
inc
and
in
shl
xchg
dec
(bad)
shl
addr16
int3
(bad)
mov
cmp
pusha
mov
ret
lahf
inc
lea
mov
mov
cmp
in
or
xchg
or
push
int
adc
pop
popa
ret
out
cwde
das
mov
mov
and
stos
repz
or
mov
mov
push
cdq
outs
aaa
mov
(bad)
adc
ret
fistp
out
pop
scas
mov
dec
js
sbb
mov
add
mov
loopne
mov
xchg
sub
cmp
hlt
xor
movs
call
addr16
inc
pop
xchg
loope
ins
out
outs
or
nop
mov
jp
sbb
add
test
push
mov
pusha
rcr
popf
xor
sub
or
loopne
pop
push
xor
scas
dec
cmp
xor
cmp
cmp
sub
cmp
mov
mov
cwde
pop
repnz
adc
retf
pop
adc
sub
mov
cmp
dec
mov
cmps
lahf
pop
call
inc
shl
push
push
and
lods
rcr
fsub
cmp
aas
test
adc
iret
not
sbb
add
(bad)
hlt
inc
call
adc
or
sub
je
adc
add
daa
jb
cmp
push
rcl
(bad)
sti
lods
ret
mov
mov
or
or
xchg
inc
mov
iret
or
dec
(bad)
xlat
sahf
jbe
call
movs
out
fwait
inc
stos
pushf
adc
mov
push
shl
cmp
jl
inc
mov
sub
retf
mul
dec
sbb
or
or
jmp
daa
xor
dec
stos
push
or
cdq
je
jo
in
imul
fiadd
test
adc
popa
jge
xchg
ja
adc
cwde
push
inc
pop
cwde
push
dec
out
adc
push
mov
adc
mov
or
dec
ror
cmp
push
inc
rcr
lods
daa
or
and
mov
fwait
mov
xchg
shr
sub
inc
jecxz
lock
cmps
xchg
ret
(bad)
iret
paddsw
sbb
dec
jmp
in
pop
sub
xchg
sbb
jnp
fistp
popa
mov
in
push
mov
jae
call
loopne
mov
cmps
mov
add
shl
sbb
out
and
arpl
inc
mov
aaa
mov
loope
xchg
fucomi
jbe
sbb
repz
pop
xchg
leave
pop
retf
and
hlt
test
push
bound
(bad)
stc
pop
(bad)
jns
out
sub
arpl
sub
aas
(bad)
fcom
pop
lahf
mov
add
add
rcl
in
dec
mov
xor
fdivr
(bad)
imul
jl
repz
cmp
pop
xchg
or
and
clc
lea
out
dec
cmp
jae
add
loop
sub
push
or
(bad)
add
das
sbb
loopne
xor
retf
push
popa
mov
test
out
xchg
clc
xchg
and
mov
ret
xor
mov
sahf
ret
inc
cs
(bad)
dec
jg
rcr
(bad)
mov
mov
push
gs
xor
pushf
pop
loopne
aam
test
xor
int3
mov
popf
ja
cmp
sqrtps
out
push
addr16
xor
dec
mov
sti
iret
aas
mov
add
aas
or
scas
fnstcw
addr16
das
jb
mov
push
mov
or
ret
jae
cmp
pop
add
adc
pop
sub
in
pop
adc
mov
jnp
inc
iret
imul
and
sar
in
inc
ficomp
push
or
int3
or
mov
into
fsub
gs
ds
clc
inc
mov
stos
lock
pop
mov
or
imul
dec
pop
cdq
xchg
into
pop
mov
fstp
mov
stos
jo
shr
rol
cmp
adc
and
jns
sbb
jge
push
cld
fst
mov
ret
pushf
push
sti
mov
pop
pop
inc
stc
hlt
pop
adc
xchg
pop
sbb
lock
cmp
cmps
into
pop
dec
mov
push
push
mov
cwde
push
or
loope
cmc
push
clc
ret
inc
cmc
popa
retf
rcr
sar
(bad)
xchg
cli
jl
sub
mov
xor
add
(bad)
inc
popa
adc
xchg
psrad
fndisi(8087
dec
sahf
test
xchg
jae
ret
sub
pop
dec
je
sbb
jno
and
jecxz
pop
add
(bad)
jmp
daa
or
and
popa
fisub
inc
xor
cld
jmp
mov
sbb
jmp
ja
je
pusha
xchg
(bad)
xor
cmp
push
and
fadd
mov
je
fs
and
das
ds
pop
mov
push
nop
jb
lahf
cmp
iret
lds
rcr
jns
push
mov
sub
xchg
pop
cwde
jle
arpl
jno
mov
sbb
lea
(bad)
fstp
pushf
in
xchg
mov
mov
clc
push
rcl
jae
movs
fld
add
das
repz
jle
ja
gs
cdq
fdivr
sub
mov
cmps
xlat
fs
jl
xchg
adc
aam
sbb
sub
int
add
add
js
jg
pop
mov
mov
jp
(bad)
aad
loopne
test
xchg
push
jp
push
add
fdivr
mov
mov
mov
mov
out
(bad)
push
(bad)
xchg
(bad)
aam
xchg
imul
mov
enter
and
push
iret
nop
mov
ins
mov
mov
mov
inc
in
push
sar
jmp
pop
xor
and
fsub
lods
xor
jno
movs
inc
icebp
mov
ret
jge
inc
outs
push
sub
jmp
and
jno
inc
cld
jmp
aas
mov
mov
mov
mov
mov
pop
xchg
movs
icebp
xchg
xor
test
call
rcl
jne
pop
or
xor
out
cmc
add
dec
test
cmp
sti
stos
les
mov
fwait
(bad)
mov
push
dec
(bad)
bound
push
popa
sub
push
(bad)
lods
fisttp
pop
repnz
adc
aad
and
xor
sti
je
inc
push
imul
test
pop
or
cmp
jb
neg
repz
mov
in
push
(bad)
stos
addr16
out
inc
mov
ret
or
(bad)
gs
adc
fcom
(bad)
lahf
jge
pushf
pushw
mov
pop
add
pop
mov
mov
cld
cmp
xchg
(bad)
lahf
adc
test
(bad)
hlt
arpl
mov
xchg
aaa
outs
mov
adc
int3
xchg
sub
ds
cmp
mov
frstor
ror
mov
sub
sbb
push
xchg
sbb
jg
dec
cdq
and
add
sar
sbb
adc
fsub
or
xchg
push
in
inc
sbb
or
xchg
xchg
xor
fisub
jne
or
fist
jmp
cmp
aaa
iret
cli
mov
cmc
xchg
jo
movs
loope
mov
mov
ins
inc
cmp
jl
out
mov
sbb
or
lds
rcr
pushf
add
inc
shl
add
adc
lock
push
nop
inc
cmp
popf
cld
cmp
pop
sbb
cmp
push
pushf
or
int3
xor
jg
ror
cmp
scas
mov
add
cmps
es
out
fwait
mov
int3
mov
adc
sbb
xor
imul
lea
mov
js
adc
movs
adc
(bad)
rcr
in
imul
xchg
adc
ret
push
mov
push
add
push
inc
sub
movs
sub
jp
lahf
arpl
mov
xchg
movs
pop
inc
cdq
pop
punpcklwd
push
imul
mov
aam
inc
lock
mov
push
xor
ja
neg
(bad)
xchg
mov
inc
in
js
les
outs
and
pushf
mov
(bad)
movups
sbb
push
ja
cmp
and
hlt
pop
lock
mov
into
xchg
test
jmp
xchg
pushf
and
sbb
(bad)
xchg
mov
outs
and
jmp
and
rol
(bad)
sbb
cli
imul
fsub
xchg
jnp
pop
out
pop
mov
sbb
(bad)
sahf
lahf
mov
ins
nop
mov
std
(bad)
not
out
gs
xlat
inc
and
pop
add
test
sbb
in
inc
ror
test
sti
inc
push
(bad)
jnp
xlat
dec
fistp
cmp
out
mov
sbb
es
push
fs
sub
neg
sub
outs
sbb
ins
stos
jp
aad
icebp
aad
mov
lods
out
or
jne
jno
rcl
or
jns
in
int3
mov
pop
fimul
clc
cdq
push
fsin
(bad)
out
lock
mov
xchg
inc
add
sbb
add
mov
mov
rcl
repz
mov
xor
xor
scas
push
(bad)
ds
fucomp
repnz
push
sbb
pop
add
and
lahf
and
ja
and
jge
sbb
fsubr
sub
stos
or
imul
inc
and
pop
dec
rol
pop
sub
pop
dec
iret
xchg
stos
rol
inc
outs
jne
fs
imul
xor
movs
mov
push
in
arpl
dec
arpl
lock
mov
mov
bound
cmp
(bad)
rcr
inc
div
lea
into
mov
fs
jns
out
pushf
push
or
mov
pusha
cld
das
cmp
outs
in
adc
je
fsubr
les
dec
stos
pusha
adc
mov
xchg
jmp
adc
sti
cmp
sbb
in
cmc
mov
jbe
pop
movs
mov
and
dec
enter
mov
sti
arpl
adc
lahf
test
hlt
inc
and
jne
adc
jne
lods
cs
aaa
jl
int
inc
inc
xor
pop
and
pusha
fs
add
mov
jb
in
inc
xchg
sbb
pop
std
or
mov
int3
xor
fisttp
aam
jp
cmp
and
lods
fsub
pop
mov
imul
int3
adc
mov
imul
loope
out
pop
ret
xchg
int3
sub
dec
outs
(bad)
stc
inc
les
push
mov
ret
xchg
adc
jl
test
pop
cmp
mov
xor
jb
push
cmps
adc
mov
xchg
call
lods
and
lods
jns
bound
out
mov
mov
adc
xchg
cmps
shr
mov
xchg
(bad)
mov
mov
nop
jmp
test
mov
nop
sbb
retf
cmp
shl
xchg
lods
and
sbb
cld
js
lods
outs
cmp
dec
adc
je
outs
push
mov
dec
out
mov
aad
out
pop
sub
jmp
add
out
ret
and
sbb
jne
mov
imul
push
pop
xor
cli
ja
fisttp
movs
inc
pusha
cdq
xchg
mov
inc
sbb
inc
(bad)
repnz
xchg
aas
push
mov
ret
xor
ror
cmp
fadd
scas
cmp
or
es
fwait
call
jno
or
cmp
add
imul
out
xchg
cmp
mov
cmps
jns
push
out
pushf
repnz
sub
cmp
mov
jb
inc
adc
sbb
stos
dec
mov
and
xchg
sub
adc
cmps
xor
dec
xor
xchg
sub
push
and
cmc
push
inc
or
jne
scas
imul
(bad)
retf
loop
and
and
mov
push
sar
push
jo
clc
mov
sahf
test
fld
xor
xlat
lea
cmp
fdiv
or
sbb
jo
push
cmp
sub
xchg
cdq
adc
imul
jp
dec
icebp
sub
into
lahf
(bad)
dec
js
mov
or
xchg
loope
cmc
loope
inc
shr
std
bound
pop
push
es
rcl
mov
ret
xchg
xchg
in
mov
xchg
pop
pop
scas
icebp
pop
fdiv
push
cmp
loop
jge
xor
iret
cwde
add
mov
dec
or
sbb
call
ja
add
add
mov
xor
and
and
push
out
jmp
or
mov
jl
(bad)
or
cdq
call
and
fld
cdq
xor
jo
xor
loope
inc
clc
push
shr
mov
daa
cdq
push
sub
movs
imul
cli
lahf
pop
adc
mov
mov
dec
dec
sub
inc
sahf
jae
cmp
popa
mov
mov
outs
shl
and
(bad)
cmp
push
mov
les
inc
adc
ds
mov
data16
dec
in
popa
ins
imul
inc
sub
push
pop
sti
xchg
cdq
cs
int3
mov
iret
mov
dec
popa
inc
or
in
in
(bad)
lods
cmp
add
(bad)
xchg
and
add
fcom
dec
push
mov
push
sbb
mov
xchg
ret
in
clc
stos
ins
push
mov
lea
push
popf
mov
ja
push
mov
adc
mul
(bad)
neg
jnp
sub
(bad)
fist
das
xchg
mov
popa
(bad)
fstp
lahf
cmps
int
adc
cmc
fs
cli
popa
int
test
inc
cli
cmp
or
stos
sar
repz
inc
xor
adc
push
pushf
xchg
mov
jmp
push
int3
add
xchg
sbb
lds
fnsave
and
mov
fcomip
rol
mov
adc
xchg
or
jne
pop
sbb
repnz
das
mov
xchg
cmp
mov
pop
retf
inc
add
pop
ffree
cdq
sub
inc
out
int3
jmp
icebp
xchg
push
pop
pop
hlt
pop
int3
mov
pusha
ret
xor
sbb
popf
adc
imul
jno
and
jmp
adc
pop
mov
jnp
xor
cmp
push
adc
test
clc
ins
(bad)
ficomp
jnp
jb
and
cmc
jge
or
pushf
popa
scas
(bad)
adc
imul
scas
jmp
push
cmc
mov
neg
adc
fisttp
popf
xlat
lea
dec
mov
sbb
mov
movs
jp
test
push
mov
sbb
and
mov
pop
lock
add
ss
sahf
test
loope
je
fisttp
pop
ret
mov
cmp
in
clc
test
and
imul
imul
cmp
sub
sub
xchg
mov
stos
adc
xor
out
sti
xchg
out
inc
mov
cmp
xor
cdq
retf
push
idiv
test
cld
imul
and
mov
pop
push
add
pop
loopne
cld
retf
int3
mov
inc
out
or
mov
cmp
(bad)
(bad)
clc
nop
aas
(bad)
jae
mov
clc
(bad)
out
mov
clc
adc
and
mov
push
cmp
xor
adc
pop
popa
dec
(bad)
test
xchg
repnz
in
and
adc
repz
xlat
test
aas
sbb
push
adc
ficomp
pop
jp
std
adc
inc
cs
jge
test
cmp
sub
mov
sbb
add
stc
pop
out
cwde
add
xchg
add
mov
jae
add
mov
jecxz
std
test
sub
cmps
aam
sub
sub
out
test
dec
test
inc
out
stc
adc
push
mov
cdq
cmc
ror
mov
popf
xchg
push
jb
mov
jmp
or
xor
nop
pop
test
mov
push
stos
xor
add
xlat
test
xor
push
aad
lods
sub
test
not
aad
pusha
jle
mov
mov
call
dec
xlat
cmps
fstp
xchg
(bad)
cmps
inc
gs
and
pop
pop
pop
cmp
ret
hlt
cmps
aam
outs
xchg
inc
in
sub
mov
add
sbb
or
jp
or
or
mul
inc
xor
fs
or
jae
pop
(bad)
cmps
dec
push
outs
dec
dec
arpl
or
movs
jmp
mov
or
cwde
cmp
popf
fcmovnbe
adc
jmp
enter
popf
lds
cli
es
ds
sub
xchg
aaa
ret
jns
mov
jnp
mov
dec
aam
cdq
mov
mul
push
mov
leave
stos
div
mov
(bad)
into
xchg
mov
movs
adc
jnp
stos
arpl
sub
cld
adc
jg
popa
nop
xor
fdiv
xchg
test
jne
xor
fisttp
test
and
jecxz
imul
mov
inc
cwde
loope
mov
xchg
std
push
jg
xor
pushf
adc
pop
ds
jae
fdiv
xchg
xor
xor
dec
les
add
mov
dec
sbb
ret
in
and
pop
and
jl
mov
mov
mov
test
out
leave
fincstp
test
aas
std
adc
jnp
retf
fimul
or
popf
arpl
pop
or
fmul
sbb
adc
sub
adc
(bad)
stc
lods
xchg
scas
cdq
sti
jae
inc
push
sub
sbb
(bad)
es
call
xlat
outs
(bad)
outs
in
popa
xchg
out
add
cmps
or
pop
add
rol
sub
push
adc
mov
push
rcl
adc
push
mov
out
cmp
lea
sbb
sar
scas
mov
movs
or
mov
xor
jp
sbb
sub
repnz
jae
enter
or
push
inc
fist
pop
mov
int
jns
push
push
sar
adc
in
scas
add
aam
ins
mov
jno
call
mov
inc
cwde
jo
inc
ror
enter
xchg
pop
dec
pop
adc
fstp
imul
fs
mov
xor
pop
jmp
sub
fcmovb
jbe
repnz
stos
jle
fs
push
aas
daa
sbb
pop
xchg
jl
retf
dec
xor
push
ja
add
inc
ret
mov
cmp
inc
(bad)
jmp
je
ret
jne
gs
and
call
loopne
and
idiv
or
hlt
sbb
sbb
ret
mov
sbb
xchg
ja
pop
repz
sub
inc
imul
cdq
repnz
mov
cmps
fdivr
ins
call
sub
call
jmp
or
popa
or
(bad)
out
adc
inc
test
add
add
sar
rol
jo
jecxz
sbb
adc
pop
loope
or
outs
out
ss
push
jmp
mov
sbb
call
in
mov
and
sbb
add
sbb
cdq
add
leave
mov
sub
sub
inc
and
retf
aas
sub
push
and
jae
pop
add
push
stc
mov
pop
or
pop
jne
shl
js
and
mov
fldcw
je
cmp
arpl
call
dec
jl
xchg
mov
int3
pop
mov
jno
push
fdiv
sti
mov
dec
dec
xor
clc
and
retf
xor
fdivrp
fnsave
test
movs
test
mov
into
pop
and
test
mov
add
fdiv
out
les
ror
test
out
mov
mov
rcr
jl
push
sbb
push
sti
or
pushf
cmps
mov
cmp
ja
xchg
mov
cli
rcl
mov
pop
outs
mov
sahf
cmp
imul
inc
pop
pop
pop
or
mov
cli
cmp
dec
jp
pop
es
hlt
loope
cmp
test
mov
int
fst
pop
sti
xchg
stos
push
pop
clc
inc
and
add
daa
mov
jb
mov
mov
adc
and
aad
(bad)
mul
or
jo
mov
pop
cwde
push
jno
or
xor
cmp
test
xchg
mov
or
jmp
shl
jo
ins
pushf
dec
in
cmps
inc
mov
pusha
inc
sbb
jne
les
mov
rol
into
nop
repnz
loopne
jnp
lahf
call
mov
jp
fwait
and
in
sbb
mov
xor
sub
mov
les
jge
jl
lods
adc
call
addr16
dec
jnp
test
lea
clc
into
aad
and
out
in
lahf
lahf
pxor
ss
dec
mov
cmp
add
(bad)
inc
sbb
pop
add
xchg
push
aaa
cmc
out
push
add
xor
es
sub
outs
in
repnz
pop
mov
and
fild
or
and
sub
mov
add
cmp
lds
mov
mov
sub
push
(bad)
push
push
int3
push
sti
jecxz
sti
jb
in
test
retf
out
les
call
pop
(bad)
adc
gs
cmp
outs
scas
and
loopne
sbb
pushf
mov
sub
sub
js
les
jne
dec
imul
je
pop
mov
dec
jg
retf
mov
dec
pop
arpl
push
mov
sbb
push
ja
int
loope
dec
xchg
das
rcr
sbb
adc
popa
push
mov
cli
xor
inc
retf
cmp
and
or
hlt
adc
sahf
add
out
ret
fidiv
cli
or
loope
in
jmp
mov
cdq
jmp
mov
sbb
push
push
shl
(bad)
cmp
push
mov
not
(bad)
daa
cmp
xlat
cmp
jmp
mov
iret
pushf
fadd
sbb
xchg
dec
xchg
ss
or
lock
or
movs
cli
xchg
mov
data16
les
movs
stos
sbb
popf
push
xor
cmp
sub
repz
cld
dec
mov
mov
mov
sbb
push
repnz
pop
out
jg
into
mov
iret
xor
xchg
cvtps2pi
in
fidiv
lock
mov
clc
stos
or
mov
jns
mov
in
cld
daa
add
pop
and
hlt
outs
(bad)
aad
or
loope
clc
mov
sub
adc
mov
cwde
sbb
cli
bound
mov
inc
imul
fwait
cmp
sub
loope
push
fsubrp
mov
imul
lahf
or
cmp
pop
jge
imul
add
in
loope
cmp
cmp
lea
(bad)
fist
stc
nop
fstp
sbb
mov
in
in
jl
pusha
enter
aad
inc
movs
ror
push
push
test
dec
fsubr
and
xor
fsubr
arpl
(bad)
scas
mov
aam
or
lahf
xchg
xor
ja
es
xlat
lods
inc
ror
mov
add
sub
lods
cmp
enter
jae
(bad)
pusha
sbb
(bad)
jp
cmps
or
cmp
adc
test
or
aam
mov
push
dec
stos
(bad)
xchg
enter
and
test
adc
(bad)
mov
dec
test
(bad)
iret
(bad)
mov
and
int3
sub
xchg
fwait
sub
dec
int3
scas
repz
dec
into
mov
jle
in
sbb
mov
fld
test
and
dec
jp
push
js
retf
ss
xor
pop
fidivr
int3
mov
pop
add
bound
cmp
pop
ror
movs
not
push
aaa
lods
mov
fsubr
sbb
or
lods
call
push
mov
push
sar
outs
pop
mov
mov
bound
xchg
daa
mov
stos
jnp
xchg
pop
add
mov
mov
(bad)
mov
xchg
shl
dec
test
popa
nop
pop
sbb
ins
test
xor
les
(bad)
mov
push
outs
sbb
and
pop
dec
ja
dec
bound
mov
out
pop
fsubr
pop
mov
sbb
sbb
in
sar
retf
in
xor
jne
push
cmps
add
aas
lods
cdq
imul
test
mov
icebp
int
ror
pop
sbb
outs
arpl
repz
loope
and
mov
and
lods
in
fist
lahf
xor
sahf
dec
adc
aam
push
cmp
add
nop
repnz
inc
ret
adc
mov
xchg
cs
rcl
push
shl
add
les
xor
cs
cmp
test
sub
jmp
popa
das
cmp
pop
loop
mov
icebp
jl
sbb
jge
icebp
mov
jb
retf
xor
ret
test
or
and
loope
cmps
mov
in
xchg
cmp
hlt
cdq
cmps
pop
cmp
mov
push
adc
mov
outs
adc
shl
shl
xchg
fidivr
rcl
aaa
rcl
inc
pop
adc
sar
jmp
test
xchg
in
daa
popf
outs
jbe
jge
and
xchg
jl
cmp
and
gs
sbb
or
jne
(bad)
lods
aad
adc
jbe
and
push
add
fistp
cmps
mov
xor
in
inc
stos
enter
cmc
jbe
jg
neg
loop
aam
retf
sti
inc
sub
aad
dec
mov
std
pusha
inc
aas
into
mov
movs
mov
shr
mov
ins
es
mov
adc
shl
push
sbb
xchg
sub
rcl
add
mov
in
pop
xchg
push
xchg
and
sub
aam
add
mov
cmp
add
scas
mov
aaa
jg
fnstenv
add
mov
fs
jmp
outs
or
dec
loope
repz
outs
jnp
xchg
gs
inc
mov
push
pop
or
aam
xor
pop
sar
cvtps2pd
xchg
adc
(bad)
cmp
or
xor
inc
das
jmp
fsubr
loope
mov
fimul
fucom
cmps
rol
lahf
adc
add
inc
mov
lods
mov
mov
jl
pop
shr
xchg
(bad)
out
or
and
xor
sahf
jo
rcr
pop
cmp
out
test
cmp
nop
add
repnz
fucomip
imul
sub
out
dec
lahf
xor
inc
mov
xchg
scas
xlat
cmp
call
xchg
jbe
push
push
daa
and
imul
mov
add
xchg
dec
fs
pop
sbb
push
ds
and
sbb
cdq
xchg
mov
into
std
pop
test
xor
mov
mov
add
jmp
sahf
ret
cmp
sub
sbb
push
inc
test
imul
sar
cmp
cmp
mov
jb
pop
clc
lock
lock
fld
sub
(bad)
gs
cli
int3
imul
icebp
jl
xor
sbb
and
xchg
inc
in
mov
inc
fstp
neg
ds
dec
xchg
aad
out
mov
cmp
unpcklps
jge
es
xor
dec
or
push
scas
int
mov
enter
mov
jmp
mov
les
cmp
cli
pop
pop
icebp
clc
push
xchg
sbb
xchg
shl
repnz
out
popf
inc
sti
in
dec
bound
call
cmp
mov
fsub
lea
outs
sbb
sbb
rol
ss
or
clc
cs
jb
jl
out
mov
adc
inc
push
test
xchg
dec
cmps
dec
scas
pop
shl
push
sub
call
ss
adc
loopne
rcl
xchg
(bad)
jmp
pop
js
sub
adc
inc
add
mov
ja
ds
lock
retf
adc
push
int3
lods
dec
and
nop
bound
inc
mov
popf
and
sbb
dec
jmp
xor
push
pusha
imul
sbb
cdq
lods
sbb
add
cdq
out
out
pop
mov
mov
out
mov
mov
and
mov
ret
ret
cmp
adc
adc
push
and
shl
cmp
stos
leave
xchg
test
mov
mov
call
jge
xchg
stos
test
(bad)
dec
fbstp
pop
xlat
test
(bad)
sti
in
cmp
call
xchg
data16
adc
shl
mov
inc
dec
mov
push
or
and
sbb
movs
ds
loop
xchg
push
call
jb
call
sar
imul
mov
jb
add
push
enter
test
add
cmp
rcl
sub
outs
fmul
stos
cdq
ins
lea
fwait
rcr
cwde
jns
mov
and
popa
sbb
xor
outs
icebp
sti
jb
(bad)
fld
outs
xchg
cmp
jle
mov
sti
das
push
cmp
push
nop
pushf
xor
icebp
inc
ret
xor
push
and
mul
mov
pop
mov
sti
xor
xlat
or
cmp
mov
rol
sahf
test
push
dec
scas
fiadd
mov
aad
mov
pop
shr
arpl
lock
xor
hlt
cwde
outs
dec
dec
loopne
cmp
and
xchg
movs
test
(bad)
test
mov
shl
fdiv
movs
outs
sti
pop
and
xchg
inc
ja
mov
push
call
mov
in
or
sub
pop
call
jge
call
sbb
paddsb
pop
dec
pusha
mov
call
cmp
fidivr
xchg
sbb
in
and
mov
mov
retf
xor
cld
mov
(bad)
push
call
(bad)
pop
xchg
fistp
jmp
stos
sbb
mov
dec
pop
push
or
outs
loope
or
fisub
in
adc
aam
mov
aas
hlt
enter
test
or
inc
pop
fwait
nop
inc
mov
retf
or
out
int3
push
ins
dec
seta
inc
adc
xchg
movs
mov
mov
inc
nop
cmp
fisubr
imul
pop
adc
xchg
push
xor
ror
imul
and
cmps
xchg
jp
mov
sub
xchg
sbb
jecxz
pop
adc
(bad)
hlt
mov
push
mov
(bad)
xor
dec
jg
fisttp
sub
push
pop
sbb
jnp
jp
push
stos
push
mov
dec
mov
adc
inc
sbb
jmp
pop
mov
pop
push
(bad)
aam
sbb
mov
push
or
(bad)
sbb
movs
gs
mov
cmp
fistp
or
jmp
lock
and
repnz
scas
shl
mov
mov
into
mov
push
pushf
hlt
sbb
popf
out
(bad)
(bad)
and
mov
lock
push
jl
cmc
mov
rcl
inc
imul
xchg
lods
repz
test
sub
inc
or
jmp
pop
aaa
lea
cdq
int3
mov
and
mov
rcl
jb
xor
mov
push
mov
addr16
jmp
nop
lods
addr16
cli
std
(bad)
lock
cmp
nop
popa
fs
add
jecxz
xchg
mov
pop
fdiv
push
mov
adc
lock
imul
fwait
jb
jo
shl
jmp
ret
inc
pop
push
test
xor
fsubr
push
pushf
stc
lds
xchg
pushf
arpl
sbb
inc
or
mov
inc
stos
mov
xchg
xor
jno
mov
dec
js
pushw
jno
pop
mov
retf
addr16
vmwrite
push
sub
push
xor
xchg
xor
cmps
rol
push
and
outs
ins
ins
bound
mov
mov
es
inc
adc
fxch
scas
cmps
add
mov
mov
jnp
imul
adc
iret
inc
test
jb
enter
pop
lahf
cmp
div
push
add
data16
pop
(bad)
pop
test
mov
cwde
jo
(bad)
cmc
mov
mov
in
pop
es
fwait
pop
outs
push
push
xor
mov
stos
cmps
aaa
lock
ins
ins
bnd
clc
loope
fsubr
fidiv
les
mov
ret
dec
inc
in
xchg
mov
mov
imul
mov
inc
push
mov
cli
push
(bad)
(bad)
shr
das
xchg
mov
bound
mov
pop
jmp
div
mov
and
push
ja
xchg
bound
cdq
cmp
dec
jmp
pop
jmp
fild
mov
xor
or
dec
rcl
jns
xchg
push
cmp
ds
jp
lods
(bad)
dec
ret
xor
outs
pop
adc
int
aam
add
(bad)
gs
shl
or
cli
dec
xor
mov
retf
mov
add
mov
add
push
xchg
shl
sub
leave
pop
test
mov
ja
add
inc
adc
fwait
jp
shl
aam
das
pop
dec
gs
add
loop
mov
scas
(bad)
out
or
aaa
movs
jmp
iret
pop
xchg
pop
jmp
push
or
xchg
fist
pop
push
mov
gs
loop
jb
hlt
jae
into
push
xchg
fneni(8087
psrad
mov
cdq
mov
rcl
xchg
xchg
(bad)
ja
in
push
loope
jns
cmp
pop
push
inc
inc
and
scas
and
clc
cs
mov
or
sub
in
inc
in
xor
daa
bound
movs
push
pop
arpl
lods
cld
mov
mov
cmp
mov
neg
test
imul
mov
imul
(bad)
xlat
xchg
and
xor
(bad)
mov
(bad)
mov
into
(bad)
jmp
mov
mov
pop
lea
or
sbb
or
(bad)
sub
push
loopne
add
out
sbb
dec
xchg
push
mov
test
jp
xor
sbb
test
inc
pop
or
cmp
int3
ret
xlat
mov
(bad)
jmp
mov
pusha
repz
push
mov
add
retf
popa
or
pop
adc
sub
mov
xor
enter
fimul
mov
clc
out
add
jle
fs
adc
out
sar
dec
dec
fsub
cmp
(bad)
adc
xchg
int
dec
out
push
cmp
dec
lods
jp
inc
jae
or
aam
(bad)
arpl
jns
inc
inc
and
mov
int
lea
repz
ret
or
icebp
push
push
rol
aam
mov
pop
pop
imul
repz
mov
mov
sub
mov
dec
fmulp
adc
lds
xor
loopne
and
xchg
add
sub
mov
stos
mov
dec
retf
scas
fldcw
xchg
xchg
mov
pop
out
push
es
xchg
mov
dec
push
adc
push
inc
and
add
aas
inc
les
out
mov
fisttp
and
pop
into
stos
test
add
mov
jge
jmp
outs
jl
cli
ret
dec
js
loopne
lods
into
arpl
inc
in
outs
test
rcl
cmps
cmp
inc
jge
jbe
nop
repnz
push
push
cmp
jo
pushf
push
hlt
(bad)
mov
repz
xor
enter
rcl
and
cmp
pop
sbb
loop
inc
pop
mov
mov
loopne
cmp
mov
jns
pusha
adc
adc
sbb
retf
in
push
repz
movs
repz
pop
add
loop
jl
push
fld
xchg
gs
sub
push
dec
ret
push
je
push
xchg
cdq
push
scas
xchg
jb
inc
mov
retf
fsub
mov
outs
cs
jecxz
xchg
sar
js
cli
cmps
arpl
add
cdq
(bad)
fnstenv
mov
dec
mov
int3
inc
mov
adc
sbb
mov
lock
(bad)
sub
xchg
out
xchg
popa
pop
pop
mov
xchg
mov
call
dec
bound
dec
xor
movs
rcr
jp
inc
or
or
rol
(bad)
(bad)
cmp
aaa
cmp
add
xor
or
push
pop
jns
and
data16
mov
test
dec
adc
cs
cmp
pusha
dec
inc
(bad)
fsub
fsub
dec
lods
in
ja
arpl
xor
mov
test
les
inc
cmps
cvttps2pi
push
adc
cs
scas
xchg
lock
mov
jae
shr
pop
rcr
mov
and
pop
shl
scas
das
mov
lds
add
add
int3
mov
inc
cdq
lock
inc
fldenv
pusha
adc
aad
retf
(bad)
mov
sub
in
aam
cmp
pop
fistp
aad
repz
xchg
pop
mov
sbb
mov
push
dec
fst
adc
imul
mov
cmp
push
out
outs
inc
sub
push
mov
mov
adc
adc
mov
cmps
stos
stos
in
ds
dec
xchg
sbb
addr16
mov
pop
adc
mov
loopne
mov
imul
xchg
mov
cmp
or
je
sbb
xchg
adc
jo
out
push
call
dec
jp
cs
inc
mov
pop
mov
mov
add
cmp
pusha
jmp
pop
cmp
in
bound
imul
in
sbb
push
fcmovnb
inc
scas
jp
cld
xchg
mov
aam
dec
fisubr
ds
xchg
push
mov
dec
out
or
call
adc
pusha
idiv
out
sbb
or
and
mov
xlat
jb
pop
mov
add
call
xor
loopne
inc
push
jno
pop
mov
push
in
xor
adc
mov
fst
std
(bad)
(bad)
sub
mov
jmp
or
cmps
jp
and
shl
add
test
cmp
es
pop
adc
repz
(bad)
and
je
push
lds
pop
sahf
cmp
push
clc
cmc
jmp
sub
xchg
jnp
adc
add
ret
mov
fidivr
dec
adc
dec
pop
retf
jno
xor
xchg
imul
call
or
xchg
hlt
and
cmp
mov
sub
mov
fcom
inc
jo
add
(bad)
call
mov
sub
fistp
xchg
fldenv
push
call
adc
and
jne
pop
es
or
icebp
out
xor
sbb
inc
into
sub
xchg
fiadd
adc
dec
shl
mov
nop
test
dec
int3
mov
ds
or
out
inc
mov
test
mov
add
out
rol
cmc
jae
jecxz
ins
loope
push
test
xchg
fsubr
push
cmp
into
adc
cmp
mov
jmp
sub
stos
shl
retf
xchg
test
(bad)
addr16
std
or
jge
arpl
cmp
inc
cmp
retf
imul
movs
and
lea
fucomp
call
nop
adc
mov
add
push
jl
mov
inc
mov
xor
int3
mov
mov
jne
mov
popf
mov
into
sbb
retf
loopne
xchg
ret
popa
jecxz
inc
sbb
jmp
adc
pop
jle
out
mov
jmp
mov
div
inc
sbb
aaa
int3
outs
sub
hlt
cmp
ss
out
xchg
out
dec
loopne
mov
scas
dec
je
enter
mov
into
out
fwait
inc
call
adc
cld
out
adc
sahf
test
inc
push
call
gs
sub
adc
mov
jl
pop
mov
mov
pop
mov
shr
push
mov
push
loope
or
ror
push
xchg
jmp
xlat
push
ds
addr16
mov
dec
fadd
push
inc
fidiv
mov
outs
mov
fist
aam
inc
cmps
(bad)
(bad)
mov
gs
nop
ror
push
sbb
jae
(bad)
cmp
mov
jne
ret
push
sub
movhps
je
(bad)
arpl
add
push
mov
pop
jl
je
gs
je
dec
sahf
sahf
inc
adc
je
mov
jl
inc
sti
mov
add
pop
aaa
cld
test
jbe
shl
das
push
and
sar
retf
mov
mov
ins
scas
ins
lahf
push
sbb
das
jne
dec
jbe
cmp
movs
(bad)
xchg
jb
clc
sub
sbb
pop
jmp
cmp
and
sub
push
movs
aaa
xor
test
dec
dec
js
pop
jo
(bad)
repnz
(bad)
sub
gs
jae
cmps
pop
push
addr16
test
arpl
call
out
shl
pop
pop
pop
leave
cld
jo
cmps
cld
dec
test
shl
jge
arpl
mov
inc
movs
sbb
neg
cld
das
mov
nop
popa
cmp
pusha
adc
pop
inc
mov
xor
push
mov
repnz
lahf
test
xor
mov
out
loop
fld
fbstp
jo
or
mov
mov
xor
cli
aad
stos
fisub
dec
inc
push
xor
xchg
xchg
push
dec
xchg
inc
adc
jmp
cmp
das
stc
dec
ins
call
out
rcl
mov
xor
sub
(bad)
fwait
aas
or
out
mov
loop
xchg
(bad)
fist
inc
retf
xchg
outs
daa
xchg
add
push
repnz
and
or
ror
pusha
iret
jl
retf
jb
add
xor
fnstenv
inc
sub
addr16
sbb
pushf
hlt
or
aad
out
jmp
mov
push
sbb
cmp
pop
or
fisub
lahf
mov
in
mov
imul
jle
loop
out
push
inc
jle
cmp
call
les
es
fild
(bad)
cmp
mov
cmp
xchg
aad
enter
bound
out
xchg
loopne
jnp
mov
hlt
mov
mov
sub
inc
hlt
and
xor
pushf
cmp
push
jb
fldcw
mov
iret
ds
pop
mov
jno
leave
sub
mov
mov
cmps
pusha
sub
mov
adc
sti
pop
adc
jns
lds
in
or
push
retf
sub
xor
mov
aam
push
or
aad
int3
xchg
or
mov
mov
test
sbb
adc
and
ins
or
in
wbinvd
pop
jl
jns
rcl
mov
dec
leave
aas
jge
fstp
loop
jp
inc
sahf
push
or
cmps
(bad)
pop
and
xor
mov
ja
mov
cwde
pusha
xchg
ror
inc
outs
call
sbb
ins
mov
mov
in
push
push
leave
add
sub
hlt
jno
add
stos
enter
ret
inc
cmps
or
(bad)
hlt
sub
or
call
mov
loopne
pushf
mov
shl
xor
push
mov
sar
lds
(bad)
mov
and
call
mov
push
repz
push
mov
sbb
sahf
jb
scas
(bad)
scas
jecxz
inc
and
mov
dec
ret
ss
das
sbb
nop
pop
xchg
retf
clc
cmp
or
xchg
jge
and
aam
in
mov
mov
es
addr16
add
jns
shl
(bad)
push
pop
lahf
cwde
rol
(bad)
mov
inc
add
cmp
dec
xor
mov
lock
xor
xor
xchg
xor
xor
or
sti
repz
sbb
sbb
scas
outs
popa
lods
ja
mov
pop
stc
jnp
jge
cmp
sar
leave
dec
call
jo
push
adc
in
jne
enter
pop
cmp
xlat
fcmovu
sbb
push
enter
push
xor
movs
addr16
js
xor
sahf
cmc
push
loop
dec
adc
in
pushf
push
jno
clc
jl
dec
xchg
dec
cld
fisttp
mov
repz
nop
xchg
aas
cmc
(bad)
mov
sub
mov
loopne
adc
fcmovnb
sub
scas
fidivr
repz
jp
into
sbb
and
cld
adc
fbld
jg
in
mov
push
and
enter
xchg
das
adc
movs
(bad)
xor
add
adc
lds
add
in
jmp
fst
inc
stos
mov
pusha
mov
les
lea
fdivr
int3
push
mov
push
mov
add
jne
and
nop
std
cmp
mov
mov
pop
jmp
or
add
js
dec
movs
sub
sbb
rcl
push
jmp
shrd
push
(bad)
in
inc
(bad)
scas
sub
adc
mov
add
dec
push
pop
sbb
pusha
mov
mov
lods
cwde
mov
lods
(bad)
(bad)
inc
push
add
sbb
out
cld
jge
adc
add
xchg
test
imul
lods
cmc
(bad)
and
addr16
sbb
jns
cmp
lods
movs
push
arpl
ds
out
ror
add
pop
outs
loop
ss
neg
bound
outs
and
mov
gs
add
xlat
adc
push
loope
rsqrtps
hlt
mov
mov
inc
xor
pop
je
fidivr
popa
rcr
lea
cmp
je
fisub
(bad)
push
xchg
mov
jne
loope
lods
and
mov
adc
mov
ins
jmp
mov
or
(bad)
nop
jns
mov
dec
data16
lahf
push
jl
xchg
push
push
mov
pop
cmp
inc
jecxz
or
mov
ror
adc
and
add
gs
das
add
rcl
xchg
sub
(bad)
or
adc
into
and
bound
not
loop
push
add
(bad)
scas
nop
jp
stc
les
call
xchg
add
dec
cs
imul
push
pop
popa
out
jno
push
pop
scas
jbe
jmp
push
das
or
xchg
jecxz
inc
jle
js
jge
cmp
jns
in
enter
(bad)
lahf
or
xrelease
mov
jg
jp
and
retf
xchg
and
push
leave
jnp
xor
pop
lods
mov
inc
lock
and
mov
scas
movs
movs
in
loop
cmp
and
xchg
mov
rcl
jle
ror
mov
lods
outs
mov
or
int
cmps
shr
das
iret
rcr
les
pop
movs
push
clc
jecxz
popa
jne
sbb
adc
mov
push
nop
fstp
ja
add
xor
loopne
fidiv
jle
inc
xor
in
movs
sbb
out
test
mov
xor
(bad)
push
mov
fisttp
push
xchg
jg
(bad)
popf
test
pop
jmp
mov
aas
xchg
mov
cmps
push
stc
outs
push
pop
mov
push
pushf
fucomip
xchg
inc
arpl
cmc
add
fcom
and
stos
enter
ss
stos
mov
dec
mov
jecxz
jmp
and
mov
dec
cmp
push
daa
and
cmp
mov
mov
mov
imul
cmp
pusha
(bad)
repnz
mov
cld
aas
data16
shl
sub
pushf
(bad)
xor
(bad)
call
push
or
jmp
mov
mov
pop
ds
stos
das
mov
or
shl
jecxz
mov
ins
pop
add
fnstenv
aad
popa
jnp
cmp
sahf
std
xor
inc
jae
(bad)
add
(bad)
pop
movs
sub
xchg
and
retf
cli
lds
lods
cmp
pop
stc
into
mov
dec
push
or
adc
adc
mov
fisub
and
and
inc
sub
or
ror
add
sbb
sbb
sub
pop
idiv
dec
(bad)
jmp
xchg
jmp
sbb
mov
daa
inc
add
cmps
pop
test
icebp
mov
addr16
sbb
inc
sbb
inc
sahf
or
jmp
nop
add
xchg
retf
xchg
inc
mov
fs
pop
push
add
in
mov
jmp
mov
cs
xlat
xor
pop
in
arpl
fimul
jb
mov
movs
stc
cmp
push
imul
cld
ds
fdiv
pop
daa
js
pop
add
pop
sub
cs
sub
push
cdq
arpl
cmp
loopne
xchg
jnp
mov
cmc
ficomp
stos
mov
iret
mov
bound
push
push
sub
mov
dec
xchg
jnp
adc
retf
pop
shr
xor
sub
dec
shl
rcr
scas
xor
mov
popa
sbb
nop
sbb
loop
jge
daa
xlat
xchg
xlat
push
fwait
idiv
stos
cmp
jns
fcomp
into
adc
scas
dec
rcr
aam
test
fild
retf
inc
scas
xlat
data16
or
push
mov
add
jo
leave
shr
jmp
in
adc
xchg
dec
das
cmp
ret
and
xor
cmps
mov
pop
mov
fldcw
fisttp
jbe
in
xor
mov
dec
adc
sar
je
or
into
pop
gs
sbb
test
ja
mov
rol
cmps
mov
pop
ds
rcl
mov
in
add
push
inc
fsubr
fldcw
xor
dec
or
push
add
hlt
pop
or
cmp
adc
pop
nop
add
aam
jmp
cmp
and
jae
xlat
jp
dec
clc
push
xchg
dec
jg
je
push
cmps
mov
pop
xchg
sahf
dec
mov
es
sbb
pop
test
sub
sti
lods
jne
inc
or
leave
dec
adc
enter
out
sub
ins
js
push
es
mov
inc
mov
sub
jl
std
out
cmp
(bad)
or
leave
sar
add
mov
pop
aam
retf
inc
fnstcw
push
mov
push
cmps
xor
sbb
pop
xchg
jbe
aas
(bad)
jo
fild
xchg
stc
dec
icebp
xchg
hlt
je
popf
add
retf
into
data16
int3
push
ror
sbb
rcl
pop
sbb
(bad)
icebp
sahf
mov
sub
dec
or
mov
mov
(bad)
pop
xor
test
lea
jo
pop
bnd
sahf
icebp
sub
adc
adc
jbe
sbb
jbe
jle
cs
lea
clc
rcl
xchg
and
iret
in
add
mov
xchg
rcr
add
daa
jecxz
adc
das
xor
pop
out
sbb
ins
aas
push
mov
xchg
jl
movs
je
ret
call
sahf
sub
jns
add
mov
add
pop
cli
int
in
out
ret
dec
sbb
jbe
in
cdq
jg
call
or
call
ret
dec
sub
pop
ret
neg
sbb
fcmovnu
ffree
mov
aaa
pop
sahf
outs
jns
(bad)
call
mov
test
pushf
cmp
pop
nop
into
mov
sbb
arpl
and
sbb
nop
sub
or
jmp
push
retf
mov
(bad)
mov
cmc
mov
dec
jns
inc
cwde
mov
jecxz
jle
or
add
sar
pop
add
out
pop
cmp
imul
inc
sub
mov
rcl
sbb
test
and
fdivr
imul
out
sub
inc
ficom
int3
arpl
sbb
pop
in
jno
and
mov
aaa
in
pop
xor
push
out
pushf
push
push
inc
movs
jae
jb
stos
call
xor
arpl
and
xor
repnz
push
js
in
das
jl
xor
mov
(bad)
or
sub
mov
push
xchg
ins
jnp
call
retf
sbb
jae
xchg
popf
sub
mov
mov
add
out
ror
stc
mov
repnz
push
add
pushf
lahf
and
imul
fnsave
ret
das
cmc
mov
fmul
and
cmp
int3
xchg
(bad)
push
mov
fldenv
rol
ss
inc
or
pop
(bad)
and
pop
cdq
mov
push
sbb
jno
arpl
sbb
fstp
xchg
pop
cmp
adc
cwde
popa
pop
jge
cmp
imul
xor
mov
adc
push
retf
(bad)
sub
mov
mov
movs
sbb
mov
sub
sbb
movs
jmp
cmp
push
cld
call
push
mov
stos
test
mov
fmul
(bad)
stos
adc
in
xchg
xlat
and
mov
movs
xchg
ins
jle
aad
test
adc
int3
mov
push
imul
cmp
rol
test
rcl
(bad)
sti
std
jmp
sbb
inc
outs
push
shr
sbb
mov
fwait
aam
enter
aas
mov
lds
mov
sbb
cmp
push
cmp
push
push
push
and
sub
movs
push
fnstsw
addr16
dec
loop
loopne
jle
jl
and
scas
ins
add
xor
dec
dec
std
mov
ja
dec
repnz
call
mov
dec
sbb
imul
cwde
or
pop
(bad)
add
pop
jl
add
push
sbb
adc
pop
call
arpl
(bad)
leave
pop
cld
cli
cmp
mov
adc
and
popa
pop
cmp
xchg
push
pop
mov
mov
mov
pop
mov
or
or
and
or
clc
sar
std
shr
(bad)
loopne
sbb
js
jmp
lods
adc
shr
test
jb
push
test
add
cwde
imul
dec
mov
pop
ins
ins
into
mov
js
es
sub
gs
iret
jno
push
in
pop
add
xor
cld
push
and
inc
inc
and
dec
push
xchg
enter
fist
scas
ds
xchg
mov
in
es
add
mov
repz
retf
xor
jno
sub
fiadd
push
test
sub
jns
xchg
fisub
sub
mov
mov
xchg
dec
sbb
pushf
jge
jge
jmp
adc
inc
idiv
mov
and
mov
push
xor
mov
push
test
mov
das
stos
sub
cmps
push
pop
mov
repz
sti
cld
ins
xchg
stos
jmp
and
popa
loopne
sub
sbb
push
and
xor
push
inc
push
out
adc
stos
pop
or
xchg
xchg
adc
repz
shl
sbb
mov
data16
outs
adc
gs
call
mov
inc
sbb
xor
inc
loopne
lock
jmp
out
sbb
xchg
push
jle
cmp
xor
mov
pop
retf
gs
or
push
mov
out
jg
in
pop
inc
pop
jno
sub
out
jno
imul
out
jbe
xchg
dec
sbb
rol
in
adc
or
(bad)
jae
pushf
les
iret
cmp
push
sbb
test
mov
bound
jae
fcom
jae
or
js
jge
xor
lds
neg
mov
fldcw
data16
imul
or
push
add
adc
xchg
js
ins
inc
les
pop
or
dec
xchg
push
jnp
pop
mov
lahf
in
jge
arpl
sub
lods
gs
cmp
clc
sahf
repz
and
rol
pop
push
push
adc
fist
(bad)
xor
jg
out
in
dec
xor
mov
out
cmp
mov
cmps
jecxz
xchg
xor
(bad)
and
adc
and
fstp
test
cmp
aaa
(bad)
jns
push
pushf
jb
push
into
sbb
int3
cs
jg
mov
sbb
loope
mov
jmp
ret
stc
sub
iret
pushf
retf
call
pop
xor
retf
push
mov
mov
in
push
(bad)
rol
outs
fisub
xchg
sti
loop
mov
sbb
push
stc
pop
out
adc
nop
adc
xchg
push
push
test
call
fdivr
fwait
push
stos
in
add
cwde
xor
push
sahf
(bad)
adc
fnstsw
push
cdq
and
arpl
pop
adc
out
sbb
les
fisttp
lods
imul
in
std
mov
retf
ret
iret
xchg
jnp
adc
and
enter
fsubr
pop
xchg
loope
lods
lods
inc
cmc
push
mov
fcmove
fwait
movs
arpl
jae
inc
mov
daa
xchg
aad
sbb
pop
outs
adc
sub
sub
cwde
dec
test
mov
shl
js
outs
sub
jl
(bad)
jno
leave
mov
xor
sbb
pop
inc
lea
xor
in
pusha
inc
std
outs
test
stos
sbb
hlt
adc
pop
mov
or
fnstcw
push
pop
dec
shr
scas
adc
ins
aad
out
mov
xor
lods
ret
jae
jg
sub
fwait
mov
(bad)
push
cmp
push
aaa
adc
sahf
sbb
(bad)
mov
mov
mov
daa
pop
xchg
repz
add
gs
sbb
pop
enter
leave
movs
xor
std
icebp
jno
out
fidivr
lods
dec
ret
sar
jl
gs
and
jo
lods
es
jmp
bound
hlt
sub
cld
retf
xor
sub
out
pop
xchg
test
cld
sub
push
in
jmp
and
pop
leave
pop
mov
adc
xor
cmps
(bad)
sub
addr16
imul
pop
inc
movs
fldenv
push
sahf
cmc
xor
pop
adc
sub
inc
call
mov
jbe
pop
cmp
mov
xor
sti
jno
mov
repnz
pop
xor
jmp
sbb
rol
xor
mul
je
inc
rol
dec
mov
sbb
sbb
jno
retf
jno
and
xor
push
call
jb
mov
pop
sub
dec
xchg
data16
ficom
stos
lds
push
fidivr
mov
jg
ror
sti
pop
pop
into
js
shl
mov
xchg
pop
inc
stos
in
add
or
cwde
scas
fdivr
mov
aaa
pop
sub
dec
or
or
sub
jo
xchg
pop
fsubr
add
add
(bad)
dec
push
jo
sar
mov
(bad)
scas
cli
jno
push
cmp
ror
aas
rcl
mov
jnp
xor
pop
mov
xchg
dec
fs
sbb
aas
xchg
cmps
xor
retf
mov
cmp
mov
out
scas
ds
cmc
sub
xchg
push
sbb
or
jae
xchg
mov
lds
inc
addr16
ins
fdivr
cwde
mov
bound
mov
inc
dec
sub
icebp
mov
popf
scas
dec
sbb
or
aam
jb
mov
adc
push
lea
icebp
loopne
pop
mov
fld
inc
mov
fiadd
mov
lahf
mov
mov
pop
jae
xchg
and
push
adc
mov
movs
test
push
add
in
cs
int3
push
bound
mov
nop
jl
xlat
dec
imul
(bad)
jecxz
rcr
jmp
xchg
dec
inc
cmps
fs
sub
out
cld
and
inc
data16
mov
stos
adc
and
mov
movs
xor
inc
or
out
cs
pop
enter
(bad)
hlt
(bad)
and
adc
into
div
shr
xchg
fwait
in
cmps
xchg
push
mov
pop
dec
imul
lock
(bad)
stc
inc
aam
enter
or
std
loopne
inc
aas
lods
stc
add
and
pop
xchg
aam
jp
pop
dec
sub
loopne
jecxz
xchg
fcmovb
les
cli
out
cmp
in
jno
rol
test
mov
cmps
jne
push
add
pop
xor
(bad)
addr16
popf
arpl
add
xchg
jecxz
xchg
daa
dec
and
lock
mov
mov
push
fsubr
les
mov
aaa
out
rcr
fldcw
dec
push
outs
adc
shl
call
dec
adc
pop
test
mov
lds
enter
xor
dec
jge
jmp
mov
xor
mov
fs
cs
mov
imul
dec
out
movs
lods
icebp
mov
mov
test
cmps
not
aad
dec
inc
fdivr
ds
int3
sbb
push
scas
fild
outs
rcl
pop
arpl
stos
ja
push
mov
inc
sbb
mul
cmp
test
icebp
in
mov
stos
ret
mov
cmp
aaa
dec
stos
(bad)
jmp
or
jmp
cwde
cdq
push
(bad)
fdiv
jp
ss
and
sub
popf
hlt
sar
adc
es
adc
gs
out
les
push
sub
lock
call
xlat
and
cmp
push
(bad)
aam
jl
mov
imul
das
add
and
fnstcw
inc
jo
scas
push
sub
cmps
ret
jl
mov
clc
mov
mov
pop
call
xchg
sti
mov
xchg
and
pop
push
(bad)
outs
movs
jecxz
icebp
out
scas
fnstcw
pop
inc
aad
xchg
mov
jbe
or
rol
pop
dec
xor
jnp
jl
inc
add
xchg
add
test
retf
test
sahf
jp
dec
mov
arpl
xchg
push
adc
test
js
cs
xor
clc
jae
js
or
ss
or
xlat
sub
mov
gs
loopne
xchg
(bad)
pusha
pop
cmp
pop
(bad)
mov
add
popf
dec
push
int
xor
mov
pop
sbb
in
fwait
xor
adc
or
cmp
daa
push
call
test
(bad)
dec
in
jp
vpmuldq
add
mov
pushf
push
mul
jmp
add
xchg
cmp
data16
stos
(bad)
jnp
movs
call
mov
scas
rcpps
loopne
jecxz
sub
into
cwde
inc
pop
pop
cdq
test
out
add
shl
push
mov
imul
movs
jp
in
jo
cmp
push
and
push
(bad)
loopne
sbb
les
loopne
mov
shl
fst
xchg
iret
and
lods
xchg
mov
dec
cmp
mov
sbb
dec
cld
in
mov
pop
into
adc
mov
jmp
clc
cmp
sub
mov
stos
or
push
out
and
stc
push
je
sbb
add
ins
jecxz
inc
push
out
sub
pop
shl
repz
aaa
ins
pop
dec
out
jo
in
lahf
scas
mov
adc
(bad)
sbb
inc
or
call
aaa
aad
add
fsub
jb
pop
sbb
mov
ja
jmp
or
cmp
fs
sbb
pop
call
aam
sub
loopne
out
icebp
out
sbb
lahf
add
movs
into
pop
push
adc
mov
jns
mov
pusha
popa
xor
inc
in
push
aaa
out
adc
rcl
mov
inc
mov
xor
mov
pop
sbb
pop
sahf
inc
sub
and
aas
les
push
test
enter
call
cmp
mov
dec
cmp
repnz
rcr
jae
pop
xchg
clc
cs
lods
cli
js
dec
xor
pop
fld
inc
scas
lods
das
fwait
test
sbb
sahf
(bad)
(bad)
sahf
inc
dec
ja
(bad)
push
cs
push
bound
repnz
iret
xor
scas
pop
xchg
iret
and
popa
xor
pop
or
outs
dec
std
rcr
fldenv
in
retf
(bad)
jge
pop
nop
imul
ret
jp
mov
push
sbb
nop
xor
jo
mov
out
mov
mov
shl
jmp
or
setl
cmps
pop
push
mov
hlt
jecxz
ins
dec
mov
(bad)
cmp
xchg
arpl
push
shl
add
sti
xchg
jbe
dec
lock
mov
outs
sbb
or
test
lds
push
mov
retf
enter
fcomp
mov
push
inc
push
mov
int3
out
mov
scas
imul
mov
(bad)
jp
ret
adc
pop
test
ins
(bad)
xor
and
and
fsubr
fs
mov
add
inc
sti
(bad)
std
pop
lock
sahf
pop
pop
or
hlt
fisubr
inc
cwde
xchg
pop
pop
hlt
sar
push
popf
mov
movs
nop
jecxz
pop
sbb
jns
sbb
inc
dec
xchg
or
mov
out
(bad)
mov
jb
dec
mov
sbb
add
and
xchg
cmps
popf
xchg
inc
xchg
jmp
cmc
push
and
add
push
mov
fadd
mov
daa
sub
adc
dec
(bad)
sbb
cmp
add
or
std
mov
daa
mov
addr16
xor
mov
adc
jns
bound
adc
test
mov
pop
push
and
out
imul
cli
push
outs
inc
shl
jmp
into
ins
adc
pop
ret
jl
movs
or
dec
sbb
adc
add
ficom
jmp
jl
sbb
sti
sbb
push
rcr
mov
lock
jns
out
clc
xchg
pop
dec
mov
push
std
adc
xchg
mov
addr16
imul
(bad)
push
or
jecxz
push
xlat
ss
shl
in
loope
push
xchg
sbb
or
xor
jmp
pusha
xor
push
add
movs
adc
test
test
mov
push
push
clc
cmp
gs
aaa
jg
and
out
mov
sbb
bound
pop
mov
rcl
inc
sub
cli
pop
and
xchg
outs
push
adc
ret
in
jmp
jge
push
jmp
sbb
dec
and
cmps
loop
push
inc
cmps
xchg
pop
pushf
out
out
cmp
jnp
jb
repnz
cmps
mov
adc
sub
cwde
mov
or
xor
xchg
dec
add
or
stos
pusha
sub
mov
dec
xchg
retf
(bad)
in
pop
in
lea
addr16
out
ror
cmc
vpcmpgtb
lods
(bad)
jmp
iret
inc
push
cmps
stos
and
jns
inc
adc
jmp
lds
sbb
xchg
or
add
loope
scas
dec
es
sbb
dec
mov
mov
inc
sti
mov
pop
pop
add
mov
stc
push
mov
cmp
out
sub
cwde
mov
in
mov
inc
movs
pop
inc
das
popa
xor
ret
stos
jl
hlt
popa
jno
fild
sbb
clc
inc
pusha
jmp
call
adc
div
push
lods
xchg
movs
xchg
inc
aam
jo
mov
sub
sti
(bad)
stc
or
xchg
sbb
push
sub
xor
shl
loopne
into
pop
xchg
inc
mov
lds
rcl
into
pop
cmp
(bad)
fistp
jnp
mov
push
jns
xor
ds
add
sahf
pop
mov
jnp
push
sub
in
test
xor
and
mov
adc
jns
mov
in
ror
cmp
pop
ss
dec
mov
mov
xlat
and
fldenv
das
das
fcmovu
push
aam
push
test
dec
push
adc
jae
jle
aam
loop
xchg
(bad)
aam
xchg
inc
xlat
ds
inc
dec
inc
xchg
pop
clc
fistp
xchg
cmp
dec
loop
add
fcmovne
(bad)
mov
push
sbb
dec
stc
lahf
addr16
fs
push
adc
pusha
fld
push
adc
je
lock
adc
cmp
inc
(bad)
cwde
(bad)
jae
add
mov
aam
rdmsr
mov
ret
sti
xor
out
dec
lods
test
jno
or
mov
mov
cdq
push
pop
xor
in
add
cmp
jl
sbb
out
dec
pop
lods
xchg
cmp
rcl
test
jge
sti
jmp
ret
xchg
pushf
push
out
pop
sbb
sbb
in
sbb
ret
rol
aad
mov
cmp
in
pop
fimul
in
je
mov
sbb
add
ins
pop
push
ins
jp
ret
popa
lods
ins
and
mov
push
repnz
xor
js
outs
inc
into
push
mov
xchg
add
mov
shl
mov
mov
or
pop
stos
inc
mov
push
or
cmp
repnz
test
push
adc
and
mov
xlat
daa
(bad)
cwde
xor
rdtsc
sub
out
out
sbb
push
fdivr
in
mov
jge
xor
fcomp
fimul
mov
mov
adc
popa
in
iret
pop
sti
pop
sbb
cdq
sbb
push
(bad)
mov
mov
mov
push
ins
inc
xor
je
test
cli
add
push
mov
xor
dec
push
outs
pop
jmp
ds
rol
lods
inc
sub
ret
add
cmp
jno
clc
sti
adc
xlat
add
push
(bad)
pop
jmp
aas
ja
push
pushf
add
in
aaa
jmp
(bad)
sbb
pop
inc
xchg
mov
pop
pop
inc
jne
test
cwde
add
add
call
add
neg
dec
dec
dec
or
fadd
addr16
pop
inc
jl
ds
mov
bound
adc
ins
sub
mov
test
js
mov
xchg
cdq
das
test
call
jo
pusha
jbe
jo
cli
(bad)
(bad)
enter
add
xchg
stos
xchg
outs
(bad)
and
loope
cmp
sub
mov
movs
or
fild
sbb
mov
push
xchg
mov
add
outs
jecxz
or
jp
mov
or
or
loop
sbb
sub
jl
in
pushf
cld
pushf
adc
sub
dec
adc
inc
mov
aaa
pushf
dec
sub
mov
mov
jo
jmp
test
cmp
and
call
inc
int3
into
fcom
xor
sahf
cs
push
std
(bad)
add
xor
add
(bad)
test
jns
dec
push
enter
loope
lods
test
fsub
and
dec
ret
xor
mov
iret
push
sub
pop
fwait
mov
sbb
test
add
cmp
test
aad
icebp
imul
sub
cmp
sub
adc
jns
jmp
stos
xor
loop
jmp
pop
mov
daa
stos
push
xchg
icebp
rol
out
test
push
cmp
in
sbb
lea
icebp
outs
inc
outs
cwde
adc
pop
lds
loopne
jae
shr
jmp
les
fnstcw
ret
mov
push
lods
sbb
fisub
test
jecxz
dec
and
test
push
call
ins
push
fsubp
sti
add
cmp
pop
dec
pop
sub
push
jmp
fcom
add
jecxz
xchg
sar
lea
loopne
les
jmp
cld
(bad)
ds
ficomp
call
jb
aas
gs
adc
jne
dec
loopne
aaa
pshufw
out
hlt
fist
pop
ins
jno
or
cmp
in
mov
dec
jo
aam
js
add
mov
jmp
(bad)
rcl
xor
mov
adc
sbb
test
xor
dec
sbb
push
jae
(bad)
(bad)
mov
or
inc
loopne
rcr
mov
loope
(bad)
sub
push
fs
cmp
add
mov
xor
imul
mov
int3
push
enter
mov
sbb
sbb
mov
pop
inc
or
int3
push
pop
mov
jle
jns
cmp
and
xor
out
shr
cmps
popf
and
in
add
sti
mov
xchg
lods
adc
cmp
or
pop
out
(bad)
fsubr
xor
stos
lock
jmp
out
lods
pop
lods
jmp
mov
xchg
out
push
aas
adc
fld
xchg
jbe
outs
loop
cmp
xor
fs
cmp
xchg
fdiv
cwde
out
les
jb
mov
and
hlt
pop
mov
and
test
jl
sub
jmp
faddp
ret
ins
or
push
mov
inc
inc
cmp
fild
(bad)
loope
cmp
pushf
jmp
cs
(bad)
push
inc
imul
pop
adc
in
cs
outs
(bad)
retf
sbb
pop
add
int3
or
not
call
dec
jns
jbe
sbb
fnstcw
jmp
call
dec
and
xor
std
dec
pop
popf
xor
lods
fistp
jg
fstp
stos
pop
xchg
and
ja
inc
repz
shr
fldenv
inc
pushf
ja
dec
mov
add
mov
in
lods
mov
icebp
pushf
pop
and
dec
mov
sahf
mov
inc
sub
sbb
inc
ror
test
sar
jg
mov
push
mov
xchg
cmp
aad
fisubr
(bad)
jmp
push
paddsw
mov
sub
pop
mov
mov
and
mov
xchg
pop
fsubr
sbb
sub
(bad)
dec
mov
es
jle
hlt
mov
jmp
or
pop
cli
mov
enter
aas
mov
or
ret
jle
sbb
xchg
stos
mov
addr16
mov
push
push
fstp
xchg
sbb
in
sub
adc
or
sbb
dec
addr16
adc
repz
and
or
dec
push
test
mov
fistp
mov
lock
(bad)
iret
out
lahf
and
xchg
lods
lock
out
loope
cmc
pop
xor
popa
mov
mov
aaa
mov
cmp
fs
jmp
sti
in
test
sub
in
sar
(bad)
scas
xor
jge
not
cwde
in
mov
fcmovnu
jns
push
and
inc
mov
dec
mov
jp
push
cmp
cmp
and
(bad)
clc
cs
not
sbb
push
push
pop
je
mov
mov
hlt
jbe
gs
stos
cmps
rol
xchg
clc
sbb
adc
pop
inc
(bad)
pop
in
add
jmp
xchg
fidiv
inc
mov
out
ins
jns
test
add
shl
jmp
cmp
leave
imul
xor
not
cmps
std
jle
xor
jno
cmp
in
add
push
fild
data16
adc
cmps
pushf
mov
call
pop
add
arpl
jmp
dec
pop
test
push
or
aam
inc
pop
retf
push
cdq
and
test
pop
xlat
push
call
jbe
jae
jl
jo
push
leave
test
jmp
sub
pop
mov
adc
push
inc
cmc
add
nop
mov
bound
mov
dec
leave
(bad)
xchg
ss
inc
out
sti
in
and
and
cmc
mov
mov
stos
and
push
lods
loope
jmp
dec
jp
xchg
and
xor
mov
fmulp
adc
aad
push
pop
lds
jo
shl
in
leave
cdq
pop
jle
jae
hlt
(bad)
mov
fs
jg
ret
push
std
and
sub
cmp
or
hlt
inc
int
dec
sbb
data16
enter
mov
and
adc
iret
stos
(bad)
in
icebp
mov
mov
mov
cmp
jmp
call
mov
xchg
icebp
mov
ds
sbb
jg
mov
cs
imul
sub
dec
popf
inc
cli
popa
cmp
cwde
add
pop
fadd
sar
out
sahf
popa
jl
pop
(bad)
loope
xor
inc
rol
jp
dec
add
rol
out
movhlps
jns
jle
inc
jmp
and
mov
fldcw
xor
pop
cmp
sub
push
daa
mov
out
es
ror
mov
mov
aad
xor
(bad)
cmp
gs
fisttp
sbb
mov
ins
pusha
mov
sbb
inc
es
ficomp
loope
sub
or
and
push
or
mov
cmp
addr16
push
test
or
dec
mov
sar
adc
sub
push
add
jo
lea
adc
enter
lea
jne
push
and
frndint
aam
jb
pop
jmp
in
adc
xchg
lahf
xchg
pop
and
xor
xchg
lods
mov
sbb
xor
(bad)
in
dec
push
popa
and
mov
xor
test
pop
cmc
pusha
loopne
punpckldq
cmp
pop
cmp
shl
add
(bad)
call
jp
mov
(bad)
sub
sbb
push
jnp
clc
jl
jecxz
pop
add
push
mov
jp
mov
sbb
call
sahf
jns
sbb
or
xlat
retf
lock
pop
adc
xchg
sbb
rcr
call
push
push
jle
jno
les
pop
stc
lds
cmp
jmp
out
and
mov
mov
sbb
push
sub
fisubr
daa
shl
out
cmps
fmul
push
int3
xor
leave
jmp
test
sub
and
or
jne
cmp
xchg
imul
xchg
cs
jmp
sbb
mov
sbb
scas
mov
icebp
mov
mov
pop
push
sub
add
aam
ror
lea
cli
(bad)
dec
dec
iret
push
inc
sub
lea
push
fnsetpm(287
scas
and
mul
dec
adc
inc
cmc
fild
push
xor
and
cmc
scas
sbb
cmps
cdq
xlat
call
mov
sahf
mov
in
inc
sub
and
in
push
fisubr
ss
sub
jmp
sub
and
sbb
rcl
push
sub
mov
adc
xchg
imul
retf
imul
rcl
jg
ins
icebp
adc
pop
xor
movs
mov
mov
adc
ds
int3
jnp
imul
sbb
or
(bad)
shr
sub
or
imul
scas
push
call
and
sbb
sub
ror
inc
mov
ja
loop
jno
jmp
jne
out
push
mov
out
sub
mov
fistp
(bad)
call
sub
xor
call
adc
retf
push
inc
cmp
xor
(bad)
xchg
popa
inc
mov
xor
and
sub
mov
dec
and
ret
scas
or
fld
push
cmp
sub
mov
out
sti
out
xor
fnsave
stos
movs
stc
inc
gs
dec
test
push
pop
jo
das
jbe
dec
scas
movs
in
or
jae
jmp
fisttp
push
and
stos
mov
xchg
dec
adc
mov
pop
push
xchg
jge
ror
jle
push
mov
xchg
and
fs
and
je
adc
fbld
test
sub
jmp
in
mov
sti
push
push
adc
and
in
pop
or
dec
push
out
push
mov
jge
sar
mov
push
call
ret
(bad)
and
dec
out
mov
daa
fdivr
sbb
jo
sbb
dec
mov
cld
xchg
jp
push
pusha
fisub
leave
add
or
mov
(bad)
jmp
jmp
scas
test
mov
and
and
add
mov
shr
arpl
add
(bad)
jnp
fisttp
mov
pop
push
pop
or
mov
inc
xor
jnp
mov
test
mov
push
cmp
adc
xchg
js
pop
movs
pop
jmp
inc
sbb
cmp
das
jmp
or
pop
ja
jle
fldl2e
mov
sbb
mov
mov
in
push
inc
repnz
add
fist
mov
jge
push
arpl
cmc
test
xchg
push
sahf
sbb
iret
test
je
jg
cmc
ss
imul
rcr
cmc
xor
cli
loop
pop
out
and
pushf
loop
xchg
mov
daa
fmul
pop
test
retf
scas
retf
enter
pop
loope
xchg
dec
fild
mov
aad
in
or
cmp
icebp
(bad)
sar
test
je
ret
leave
pop
bound
inc
mov
dec
std
mov
cli
xchg
(bad)
cli
scas
jp
push
and
inc
repz
mov
jg
inc
adc
fadd
outs
cmp
aaa
xchg
dec
fs
add
sbb
add
inc
ja
shr
aaa
outs
add
mov
mov
cmps
add
lods
test
pop
in
fimul
popa
mov
and
retf
lock
dec
mov
fadd
mov
mov
(bad)
xor
es
movs
imul
pop
lock
inc
test
mov
push
loop
pusha
data16
lock
push
jb
adc
stos
sub
mov
cmp
mov
inc
xor
pusha
xchg
add
inc
repz
ja
cmp
and
jmp
fxch
jae
enter
cmp
aam
mov
call
push
rcl
jmp
es
leave
shr
inc
push
test
lock
call
ja
into
into
nop
pop
push
pop
dec
sub
mov
aas
scas
lahf
mov
ins
pop
xchg
lea
mov
in
enter
loope
push
mov
xchg
mov
xchg
add
clc
gs
cmp
mov
push
ins
mov
ins
or
pop
dec
sti
dec
xchg
ret
outs
sub
leave
ss
enter
mov
test
out
xchg
int
or
sub
mov
ds
sub
or
outs
mov
lea
pop
aas
lahf
xchg
add
adc
cmp
jne
dec
and
les
int
mov
in
iret
loop
sar
xlat
push
cmp
test
or
mov
cmps
js
jne
inc
mov
jb
fsub
mov
push
pop
push
scas
(bad)
aad
std
adc
sub
sbb
mov
cwde
movs
or
mov
shr
cmp
scas
jmp
(bad)
repnz
pop
scas
xchg
ins
xchg
test
xchg
ds
sbb
cmpxchg
mov
mov
movs
pop
jmp
dec
push
scas
xor
cmp
inc
push
fld
ins
scas
inc
sahf
xor
dec
cli
lods
or
adc
rcl
aam
mov
mov
adc
mov
fs
inc
retf
pop
and
ins
mov
(bad)
sub
cmp
sti
xor
ss
enter
js
nop
sub
pop
mov
dec
mov
mov
fs
lods
dec
sub
xlat
mov
mov
(bad)
lds
and
sbb
pop
jb
sub
cmp
cmp
(bad)
jmp
int
(bad)
pusha
mov
les
ret
push
call
nop
push
std
add
je
out
fistp
push
rcl
dec
es
sbb
cmps
cli
jnp
in
call
int
(bad)
pop
inc
(bad)
jecxz
jmp
push
or
pop
xor
jl
sar
or
push
movs
xchg
inc
aas
jecxz
mov
test
sbb
cwde
jb
xchg
cmp
sub
pop
mov
sbb
push
(bad)
sub
and
mov
ins
push
inc
ret
add
hlt
xor
jp
(bad)
(bad)
loopne
in
ficomp
inc
cmps
cmps
arpl
xchg
mov
(bad)
and
inc
inc
adc
std
std
mov
and
xor
sbb
ret
call
movd
push
dec
push
popa
shr
cmp
and
add
enter
les
mov
enter
push
mov
movs
pop
mov
fdivr
cmp
rcr
fbstp
xchg
stos
mov
sbb
mov
pop
out
lock
imul
add
jnp
mov
xchg
mov
push
cli
cmps
ret
in
xchg
or
inc
(bad)
mov
inc
sub
inc
fwait
js
mov
arpl
sub
dec
out
aam
xchg
jle
xor
inc
and
and
jp
scas
or
or
mov
mov
inc
cmp
cmp
jbe
je
hlt
movs
cmp
xchg
mov
(bad)
nop
adc
lds
mov
cmp
sar
sar
ficomp
and
or
mov
xchg
pop
fsubr
cdq
out
mov
imul
mov
inc
fs
loope
test
sbb
and
js
sar
or
inc
xchg
test
jge
push
fdivrp
int3
mov
xchg
cdq
cmp
stc
addr16
pop
les
sub
loop
xor
xor
lock
in
imul
xchg
ror
js
push
dec
mov
jg
imul
test
fmul
jmp
sbb
jge
call
adc
in
adc
push
adc
call
dec
or
pop
das
jbe
sbb
add
fwait
jge
rcr
adc
mov
fmul
inc
or
mov
lahf
cmp
jp
push
fdivr
push
scas
dec
mov
fld
cmp
push
xchg
push
xor
call
mov
sahf
xchg
and
push
(bad)
cmp
int
cmp
out
fdivr
scas
movs
push
sbb
out
sub
nop
mov
jbe
and
cmp
jae
les
adc
push
sub
mov
xchg
test
retf
lock
inc
push
mov
push
dec
and
adc
mov
mov
adc
cmps
mov
push
xor
lods
adc
pop
and
add
scas
popf
cdq
pushf
not
xchg
mov
mov
lods
test
xchg
push
test
(bad)
jmp
lsl
call
add
cmps
jmp
adc
fsubp
jmp
inc
xchg
lds
xor
xchg
mov
mov
(bad)
lods
pop
jae
mov
jb
push
out
jnp
(bad)
xlat
shl
leave
icebp
rcr
mov
outs
lock
pop
cmp
sub
sbb
jecxz
sub
mov
xchg
sbb
mul
add
push
loop
or
pusha
(bad)
add
jns
js
adc
pop
push
popf
fsubrp
adc
sub
popf
cwde
xchg
and
sbb
cmps
mov
sti
mov
fisttp
mov
cwde
pop
repz
hlt
xchg
aam
cmp
(bad)
out
ret
and
inc
aaa
jle
test
dec
sbb
mov
or
test
jae
cmp
(bad)
movzx
scas
sbb
jnp
or
cld
ret
cwde
dec
aad
and
inc
mov
(bad)
stos
jp
scas
das
bound
lds
inc
daa
popa
jne
aad
mov
push
or
sbb
scas
mov
jbe
or
jmp
push
cmp
and
or
aas
inc
push
ss
pop
ja
test
push
leave
aam
sub
mov
mov
xor
and
not
adc
add
dec
pop
sbb
in
ins
(bad)
pop
mov
dec
sub
pop
pop
cld
imul
xor
mov
in
sbb
mov
cmc
imul
push
jnp
sub
into
gs
scas
cwde
outs
adc
sbb
bound
lods
call
movs
xor
jns
xchg
fwait
int
ror
stos
add
arpl
sbb
shr
mov
mov
jp
adc
mov
push
dec
sub
and
cmp
push
cmp
movs
and
pushf
outs
mov
cmp
dec
xor
cmp
jle
mov
test
int3
dec
mov
pusha
stc
(bad)
aam
sbb
or
xor
leave
daa
push
rcl
push
cmp
mov
mov
js
test
mov
mov
imul
inc
jbe
xchg
clc
scas
leave
jg
mov
cli
idiv
mov
(bad)
cwde
adc
mov
leave
xchg
data16
test
repz
add
mov
or
sub
and
cmps
xlat
fsubr
mov
loop
cmp
js
retf
add
mov
jnp
int
sbb
enter
cmp
or
adc
loope
push
xor
das
mov
mov
loopne
or
shr
mov
sbb
(bad)
ins
xor
mov
outs
cdq
les
(bad)
jg
xchg
pusha
or
mov
data16
loopne
inc
sub
or
cmp
sti
sbb
int3
ss
(bad)
popf
push
sub
in
mov
xchg
push
frstor
sub
mov
mov
pop
movs
outs
xchg
xchg
lock
loop
repnz
retf
pusha
mov
mov
pop
adc
imul
iret
sub
ret
mov
test
mov
push
cs
movs
jae
cli
cmp
loope
mov
push
lds
xchg
mov
iret
adc
inc
imul
scas
enter
sub
ret
(bad)
xor
adc
dec
adc
xchg
and
pop
cmp
fild
fwait
outs
pop
movlps
adc
pop
fdivr
(bad)
cmp
lock
xchg
or
pusha
clc
cmp
jmp
repnz
shl
jno
daa
in
sbb
cmp
add
xchg
adc
add
push
js
mov
xor
pop
scas
dec
test
push
dec
jbe
jb
push
and
inc
adc
xor
xchg
ja
dec
sub
sar
inc
and
cmp
arpl
inc
retf
int3
stos
loope
push
adc
aaa
pop
cld
jge
add
inc
leave
mov
mov
out
sub
outs
mov
push
les
push
adc
sar
and
rcl
dec
add
mov
pop
je
jns
push
neg
pop
add
mov
ss
in
push
jl
jno
ret
xchg
jns
mov
cmps
jg
mov
ret
sub
scas
cmps
popa
inc
aad
and
push
je
fldenv
dec
imul
mov
xchg
push
xchg
pop
(bad)
sar
cmps
pop
xchg
xchg
pushf
pop
push
mov
push
lods
pop
es
icebp
je
add
leave
or
adc
ins
pusha
push
mov
push
mov
jne
jo
fidivr
into
adc
out
repnz
jnp
lock
(bad)
mov
cmp
(bad)
mov
or
cmp
xor
icebp
cli
es
add
or
sbb
and
mov
dec
jge
jns
jecxz
ficom
aas
sbb
mov
(bad)
aas
cmp
sbb
out
pop
push
mov
jne
ins
cdq
pop
jnp
call
retf
jp
lahf
lahf
adc
dec
cmc
jb
push
rcr
sar
das
jp
add
or
(bad)
imul
xor
call
and
cmp
dec
adc
sets
pop
ror
out
repz
jecxz
adc
test
sub
or
in
mov
xchg
rcl
add
test
xchg
xchg
fldenv
push
shl
out
dec
mov
rol
jnp
jns
mov
aaa
pop
frstor
or
and
mov
pop
and
or
ror
dec
arpl
lods
aas
xlat
imul
xor
das
daa
rol
mov
lea
add
dec
cdq
fbld
mov
add
aaa
mov
aam
out
inc
(bad)
mov
dec
inc
pop
out
hlt
shl
mov
adc
push
das
sub
mov
jp
pop
enter
jg
arpl
sahf
out
jge
test
in
add
xchg
push
retf
add
in
imul
arpl
xor
test
or
inc
cmc
ret
gs
push
test
out
push
ret
cmp
push
daa
push
jp
out
fldlg2
xchg
rol
in
jb
fsubr
mov
(bad)
call
mov
mov
ret
push
sbb
cld
jnp
sbb
mov
dec
in
pusha
gs
lods
int
jae
movs
cli
ss
sbb
adc
xor
or
push
cmp
xor
in
out
call
hlt
mov
dec
adc
aas
shr
cmp
adc
mov
aad
pop
les
pop
lds
or
pop
push
jne
sub
lds
pop
outs
addr16
test
mov
outs
xor
(bad)
sub
or
stos
fiadd
mov
xchg
sar
xor
out
push
pop
in
fisub
(bad)
cmp
ds
clc
test
out
scas
xchg
push
add
cmp
call
ror
pop
ja
aad
cmp
jno
and
cmp
push
test
jno
dec
xor
mov
adc
mov
mov
shr
cli
xor
cli
repz
pop
mov
adc
inc
clc
ja
lds
cwde
ret
jae
xor
mov
iret
int3
ja
int
test
or
pop
bound
les
xchg
cmp
jg
stc
iret
in
sbb
pop
push
mov
pop
adc
cmp
xor
sahf
call
add
jbe
dec
sahf
xor
cli
dec
nop
cmp
add
jo
pop
(bad)
les
addr16
sbb
out
dec
sbb
in
inc
xchg
push
sub
cmp
xchg
add
jno
(bad)
cmp
mov
movs
jnp
and
add
test
pusha
sahf
push
mov
dec
xor
push
add
push
inc
stos
push
mov
out
jmp
into
cmp
or
fsub
push
mov
retf
sti
sbb
(bad)
scas
repz
push
sub
jle
sbb
js
jns
cmovle
dec
mov
outs
sub
add
retf
popa
ficom
mov
sbb
jmp
xor
not
nop
inc
sub
in
or
mov
popa
dec
into
(bad)
pop
inc
cmp
sbb
or
les
movs
loopne
loopne
or
push
cmp
call
movs
sbb
popf
mov
scas
inc
daa
addr16
daa
mov
mov
mov
push
inc
out
jae
adc
add
sbb
call
add
xor
arpl
das
pop
or
loop
lea
dec
leave
fmul
in
push
mov
cmp
cmp
or
or
movs
xlat
je
in
fisttp
pop
sar
xchg
sbb
jnp
adc
rcr
pop
mov
imul
sub
jns
fcmovb
add
je
inc
mov
fisub
rcr
shl
neg
xor
scas
outs
sbb
fmul
fidiv
inc
icebp
xchg
ss
(bad)
and
scas
jle
in
enter
jno
int3
clc
daa
xchg
lods
mov
jle
fisttp
mov
inc
jecxz
mov
sbb
sti
push
iret
push
cmp
cmp
or
mov
add
and
into
data16
pop
adc
test
inc
lea
test
jno
loop
clc
jge
sub
cmp
pop
push
cli
sub
test
shl
pop
pop
dec
pop
push
in
mov
enter
jnp
addr16
cld
sub
cmp
lods
pop
stc
push
js
shr
cmp
add
mov
adc
mov
ret
cli
cmp
xchg
jp
(bad)
inc
nop
test
sub
adc
jle
int3
mov
jbe
scas
adc
fwait
fwait
outs
ins
shr
loopne
cmps
inc
push
jns
dec
mov
mov
add
pusha
mov
int3
sbb
(bad)
ds
xor
or
outs
je
retf
and
fist
dec
scas
xor
frstor
popf
lods
cmp
ret
fst
add
addr16
add
push
aam
hlt
test
loop
mov
sbb
sbb
xchg
or
adc
mov
mov
push
rol
aad
leave
movs
test
or
or
fwait
hlt
fwait
or
or
mov
fdiv
jl
xlat
adc
repz
call
or
sub
lea
cmp
mov
pushf
outs
call
cmp
mov
out
imul
fild
cmp
(bad)
pop
ja
dec
xchg
jbe
fwait
mov
mov
out
leave
ret
push
aas
sti
mov
das
push
mov
xchg
or
jmp
gs
inc
test
sbb
inc
mov
emms
in
push
popa
(bad)
pop
in
push
cmc
xor
cld
out
outs
push
jmp
test
jle
mov
mov
mov
fidivr
pop
or
retf
or
mov
(bad)
call
push
sub
jp
loope
call
lods
cmp
mov
mov
jl
fdivr
mov
out
mov
lea
xchg
je
gs
shr
push
dec
adc
mov
jge
and
gs
adc
bound
add
lods
fwait
cmp
sahf
in
inc
push
sahf
imul
mov
adc
jmp
mov
cmp
sbb
sahf
mov
out
mov
sub
pop
fs
jne
or
xlat
adc
outs
in
int
aad
mov
cmp
push
xchg
cmp
jnp
loop
ror
and
stos
(bad)
out
enter
outs
xor
leave
dec
dec
dec
jne
sar
jb
xchg
ins
test
mov
jecxz
push
mov
push
shl
mov
mov
out
add
(bad)
(bad)
xor
imul
in
mov
and
jl
clc
in
inc
dec
mov
sbb
mov
inc
enter
mov
push
jae
dec
sar
mov
(bad)
sub
int3
out
(bad)
cmp
jmp
imul
push
cmc
gs
loop
cwde
in
dec
and
or
popf
sahf
in
or
inc
fwait
inc
sbb
aaa
mov
jnp
in
or
clc
jbe
push
jmp
add
jp
sahf
xchg
inc
mov
das
sub
xchg
pop
or
lea
or
inc
xchg
jo
int3
add
jmp
xchg
aam
xchg
ret
push
mov
int
dec
jl
(bad)
fdivrp
mov
fdivr
idiv
jle
dec
inc
scas
and
(bad)
inc
mov
mov
mov
jmp
ins
mov
mov
xor
mov
xchg
jp
xchg
fs
mov
mov
and
imul
push
push
mov
xchg
push
xor
mov
es
scas
icebp
rcl
int3
mov
mov
movs
addr16
fsubr
ror
adc
pmaxsw
and
push
cmp
mov
mov
jb
cmp
xor
cmp
push
mov
add
(bad)
es
call
ds
in
xor
inc
cmp
push
jne
mov
mov
jbe
mov
and
adc
jnp
push
gs
movs
jbe
and
cmp
mov
inc
mov
and
outs
clc
in
pop
xor
sahf
sub
and
inc
aaa
jne
add
xchg
cmps
sar
mov
dec
pop
cwde
sub
push
mov
in
leave
sahf
lahf
jae
mov
push
jae
xor
sahf
push
call
scas
and
mov
fmul
sbb
dec
call
and
dec
mov
pop
fnsave
jno
and
leave
adc
sub
jbe
test
xchg
cli
test
xor
push
pop
mov
push
rol
adc
add
jb
push
jnp
stos
jle
dec
mov
lods
dec
test
jle
jp
inc
cmp
pop
pop
imul
jl
xor
add
dec
bt
jno
push
push
xchg
repnz
pushf
and
outs
movs
(bad)
sub
cmps
sub
ins
shr
add
pop
repnz
inc
cmp
xor
mov
sub
ret
inc
cmp
enter
int3
cmps
pop
rcl
mov
xlat
shl
int3
jl
fst
int3
lods
scas
fdivr
in
adc
icebp
aas
enter
aad
adc
xchg
int
and
cli
cmp
ret
or
mov
test
rcr
les
test
test
fist
jg
dec
int3
sbb
xchg
xor
jmp
inc
mov
pop
mov
je
pop
push
pop
test
std
sub
sbb
std
pop
jle
add
icebp
mov
push
ds
or
ins
xor
inc
jge
mov
sbb
fbstp
add
mov
lods
in
jmp
hlt
call
inc
ret
dec
pop
adc
iret
repnz
idiv
out
inc
loop
or
or
xchg
push
imul
adc
fistp
ror
ret
jnp
icebp
imul
add
adc
call
adc
mov
es
outs
in
in
cmps
test
leave
sub
mov
mov
int
mov
stc
aad
xor
sub
in
aam
stc
fcomip
xor
add
out
inc
and
cmp
jmp
ss
pop
and
leave
repnz
cmc
jne
lods
or
dec
push
out
mov
cmps
leave
adc
jbe
aad
jmp
sub
aaa
or
cld
in
retf
ret
in
ret
pop
(bad)
ja
cwde
sbb
jns
cmps
xchg
mov
jmp
push
or
dec
mov
push
or
movs
mov
pop
jl
inc
pop
push
dec
and
(bad)
clc
add
shl
push
mov
cmps
fld
stos
inc
cmps
cmc
push
mov
pusha
retf
jbe
pop
xor
add
mov
rol
in
shl
scas
mov
fbld
lea
ins
loope
call
movs
jnp
test
jne
jno
cmc
cmps
not
fwait
inc
jnp
sbb
fwait
sub
xor
js
push
nop
sti
add
mov
adc
call
sbb
jmp
sbb
mov
stos
jl
push
jmp
xchg
cwde
out
shl
popf
inc
in
xchg
popf
mov
cli
pop
xchg
mov
sub
mov
xchg
and
movs
push
or
mov
mov
cmps
xor
retf
data16
scas
inc
into
push
outs
out
or
ins
cli
mov
mov
push
push
xchg
fistp
(bad)
(bad)
ja
jl
addr16
xchg
retf
loopne
cmp
push
inc
ja
bound
mov
aad
add
sbb
(bad)
dec
das
lods
adc
std
out
cmp
inc
add
movs
xchg
imul
sbb
sbb
pop
push
cli
iret
test
jo
retf
fnsave
mov
jo
enter
ret
mov
cmp
lock
scas
loop
icebp
or
fwait
push
pop
mov
mov
mov
xor
lds
sbb
shl
jno
pop
cmp
push
fwait
pop
call
lea
xor
add
fbstp
fbstp
das
daa
xchg
popf
add
(bad)
retf
jmp
xchg
xor
jmp
mov
cdq
int3
inc
jp
call
sub
inc
xchg
fs
shl
out
bound
xchg
(bad)
sbb
sub
xlat
daa
push
push
cmp
mov
cmp
loope
cmp
inc
ss
jmp
dec
les
xchg
ins
xchg
scas
dec
sti
js
sbb
cmp
xor
push
outs
pop
sbb
mov
cmp
fst
fdiv
sub
lods
in
add
nop
jns
add
stos
add
mov
sbb
sar
xlat
rcr
xchg
sub
js
in
sub
xor
add
push
ins
sub
out
cli
sub
outs
mov
sub
int3
add
ins
pop
mov
and
pop
xchg
dec
pop
cmp
out
ror
gs
mov
test
push
mov
in
push
pop
loop
jae
inc
aam
sub
out
retf
dec
add
outs
dec
mov
leave
lock
stos
loopne
mov
or
sub
sahf
call
dec
imul
adc
mov
sub
arpl
xchg
in
rcr
mov
out
enter
test
clc
or
je
not
mov
adc
jg
push
fld
(bad)
enter
sbb
and
cli
mov
pop
call
movs
ins
mov
cmc
out
push
xor
in
enter
push
int
xor
aas
cmps
cmp
out
mov
cmp
cmp
add
lock
inc
push
xchg
out
mov
popa
push
push
jmp
add
or
arpl
cli
inc
aaa
mov
lods
inc
leave
dec
sbb
ficomp
jae
out
(bad)
bound
daa
fwait
div
add
fadd
inc
lea
mov
jmp
xor
or
add
mov
push
xor
sbb
or
push
imul
leave
mov
pop
int3
retf
dec
dec
inc
dec
add
dec
dec
mov
test
es
mov
mov
pop
fisub
pop
data16
rcl
lods
pop
outs
into
lar
pop
or
movs
stos
mov
fnstsw
popa
ds
sti
pop
adc
dec
cmp
or
xor
and
call
test
mov
add
inc
cmps
push
mov
lahf
fs
inc
addr16
fsub
jbe
popa
mov
in
cmc
jae
cmp
xchg
push
add
pop
arpl
inc
cmp
jge
(bad)
aad
or
not
pop
sub
nop
or
mov
mov
std
or
cmp
and
jge
mov
aad
cmp
jp
xchg
(bad)
adc
sbb
mov
sbb
mov
sbb
inc
mov
dec
adc
push
shl
add
dec
cmp
je
cwde
sub
outs
stos
(bad)
rol
shl
test
daa
mov
xchg
mov
mov
fld
or
mov
ret
pop
pop
push
mov
ds
pushf
pop
sub
cmps
jmp
les
imul
retf
dec
mov
cmp
mov
mov
(bad)
adc
mov
xor
jno
or
jno
out
cmp
retf
mov
inc
xlat
fwait
out
mov
mov
movs
inc
mov
mov
push
xor
jo
jecxz
pop
sbb
or
(bad)
imul
pop
xor
and
pop
push
mov
ins
inc
in
adc
ror
mov
and
enter
inc
inc
or
ret
loope
pop
sbb
fs
mov
sbb
dec
cmp
push
inc
dec
jo
pop
mov
int
dec
jmp
sbb
push
in
scas
fistp
mov
pop
cdq
jae
add
sub
or
inc
adc
aam
je
and
xor
add
out
xchg
sub
retf
sbb
loopne
cmp
cli
ret
jp
push
or
xor
lea
js
inc
cwde
dec
scas
loope
scas
sub
je
or
push
mov
outs
fmul
jle
push
xor
add
movs
adc
cmp
cmp
mov
nop
lock
cmps
pop
mov
and
out
xchg
xor
mov
mov
cmp
inc
push
or
sbb
test
imul
lds
or
xchg
jecxz
ror
cdq
sar
seta
cs
xlat
es
imul
pop
fwait
lea
push
retf
js
ins
xchg
inc
mov
pop
int3
loopne
cmp
dec
call
mov
frstor
add
xchg
(bad)
dec
mov
dec
sub
mov
hlt
mov
jno
ja
dec
outs
xor
or
push
scas
dec
cmc
dec
and
clc
add
test
jmp
pusha
push
inc
xchg
inc
lock
or
xor
push
stos
mov
dec
mov
nop
icebp
movs
adc
fucomi
and
add
not
cmps
test
imul
es
mov
aaa
cmp
mov
or
adc
das
mov
je
stc
push
add
pop
xor
add
cmp
iret
inc
mov
jp
and
push
inc
mov
inc
test
pop
mov
add
outs
daa
adc
dec
or
sahf
or
loop
mov
add
aaa
aaa
xchg
imul
mov
adc
mov
pop
push
cli
fldcw
jmp
push
cmc
pop
stc
pop
and
enter
rol
jl
mov
aas
fist
int3
jno
push
and
cmp
add
lahf
clc
inc
loopne
add
cs
cld
pop
add
jecxz
xchg
outs
adc
scas
(bad)
mov
pop
or
jl
push
in
fisubr
xor
and
cmp
adc
dec
push
inc
dec
das
hlt
dec
or
push
icebp
or
mov
faddp
mov
dec
in
xor
into
rcl
adc
and
pop
int3
or
cmp
outs
mov
(bad)
sub
jecxz
push
mov
mov
adc
(bad)
aas
cmp
xor
retf
mov
push
aam
dec
(bad)
fwait
das
retf
inc
mov
cmp
mov
cmps
and
sub
ins
pushf
and
hlt
(bad)
jle
mov
push
jno
aam
out
mov
jno
sahf
jge
xchg
aad
cli
mov
and
cld
aaa
ret
lahf
dec
dec
(bad)
pop
ja
shl
sub
lods
jge
or
pop
imul
movs
xor
jmp
imul
repz
or
shl
cmp
dec
outs
dec
adc
pop
adc
bound
cmps
xor
mov
inc
mov
jo
push
into
js
fmulp
inc
lea
pop
in
imul
loopne
or
mov
jns
pop
shl
sbb
adc
xchg
sbb
push
hlt
shl
cmp
cli
call
call
cmp
(bad)
int
mov
cwde
jno
push
pop
mov
sub
sbb
and
mov
jge
inc
stos
mov
imul
ret
cmp
dec
out
mov
ja
shl
jecxz
cmc
add
sbb
cmp
outs
ja
loope
iret
mov
xlat
test
pop
dec
aas
std
outs
jo
mov
pop
(bad)
push
push
push
loope
cmc
scas
enter
push
or
adc
cmp
push
fbstp
ds
fisttp
push
mov
retf
adc
or
int3
sbb
and
dec
lds
jns
mov
aaa
cmc
xchg
dec
rcr
xor
mov
inc
test
add
or
inc
mov
mov
and
pop
dec
adc
enter
outs
cmp
inc
retf
rol
shl
jle
push
cmp
jecxz
movs
fmulp
push
ins
dec
pop
and
sbb
(bad)
fiadd
adc
pop
mov
adc
retf
fwait
retf
and
pushf
mov
cmp
mov
(bad)
and
sbb
in
iret
icebp
pop
xchg
cmp
sti
mov
daa
sbb
icebp
nop
jbe
pop
sub
cwde
in
je
cld
sbb
into
std
jb
fdiv
test
pop
enter
sbb
inc
push
push
test
jno
adc
(bad)
scas
adc
ret
inc
push
jle
cmp
xchg
jb
pop
pusha
mov
inc
enter
sbb
fdivr
mov
cmp
jmp
cmp
cmps
iret
or
mov
jb
mov
or
ds
or
outs
(bad)
push
mov
inc
add
iret
sbb
rcl
xchg
and
shl
ss
jmp
cmps
adc
cmp
retf
sub
es
sub
ds
add
mov
and
sub
lods
adc
inc
push
or
push
sub
in
scas
and
dec
cmp
push
std
neg
add
push
add
in
pop
cs
enter
les
inc
mov
adc
xchg
enter
cld
adc
push
clc
ins
push
and
je
shl
mov
scas
pop
push
xchg
inc
clc
mov
adc
retf
xor
adc
xlat
push
sub
cdq
sbb
push
js
ret
jecxz
loop
fnsave
stos
mov
(bad)
xchg
pop
xor
in
mov
out
nop
pop
dec
setg
pop
sbb
sbb
push
hlt
cmp
xor
dec
cs
ret
test
mov
adc
cmps
adc
xchg
mov
push
clc
loop
test
test
into
cdq
lock
dec
or
xchg
and
repz
mov
mov
popf
cdq
les
jmp
push
pop
mov
inc
cmp
pextrw
mov
inc
pop
jecxz
push
push
pop
cmp
cmps
jl
je
push
xchg
adc
mov
icebp
cdq
pop
inc
push
push
sti
ficomp
je
jne
adc
mov
inc
pop
cld
sbb
icebp
aam
in
fstp
mov
jg
xor
movs
gs
and
or
push
mov
lods
mov
dec
mov
popa
ret
int3
push
jbe
jmp
aas
retf
out
push
mov
sbb
xchg
pop
push
mov
mov
loopne
out
test
rcr
(bad)
sub
push
and
mov
out
mov
in
and
outs
loope
int
adc
es
jle
push
(bad)
mov
gs
mov
movs
icebp
ss
mov
jbe
sub
xchg
xor
aad
pop
mov
test
jb
sbb
cmp
popf
lds
int
loop
jp
pop
mov
int3
add
inc
call
add
les
mov
adc
bnd
out
xchg
dec
add
fst
sbb
mov
aaa
sbb
(bad)
xchg
cld
das
lods
jnp
rol
adc
pusha
mov
movs
jb
loop
aaa
pop
rcr
pop
jl
arpl
cld
mov
xor
cli
int
lahf
cmp
mov
mov
adc
sub
xchg
mov
mov
xlat
add
jg
lea
cdq
das
rol
jae
push
ds
and
test
xor
pop
mov
sbb
or
ja
inc
loop
dec
xchg
arpl
shl
adc
sub
push
xchg
pop
mov
outs
aad
or
adc
and
xchg
mov
retf
ins
fsub
repz
mov
jmp
or
cmp
arpl
leave
dec
cmp
icebp
jp
cmp
daa
pop
int3
mov
pusha
push
js
mov
lock
lods
xor
inc
fld
adc
push
fucomp
aad
push
bound
pusha
push
repz
mov
or
ja
mov
pop
sbb
xor
jmp
and
das
cmps
cwde
stc
test
int3
cwde
dec
xor
aaa
jo
xor
fs
jae
rol
jo
out
jno
sahf
xchg
pop
adc
mov
retf
sub
cmp
inc
adc
pop
fldcw
mov
loop
pop
cmp
in
test
inc
mov
xor
xor
cmps
mov
sbb
pop
(bad)
jmp
ins
loopne
test
fld
sub
sar
outs
retf
mov
cmp
in
(bad)
(bad)
push
push
mov
jmp
inc
sti
ja
aas
add
fnstenv
mov
xor
sbb
outs
and
fcomp
jbe
in
pop
mov
sbb
mov
xchg
mov
xor
jo
(bad)
mov
lds
dec
js
push
sti
ror
cmovno
sti
fild
and
sbb
sahf
jae
add
push
inc
cmp
pop
dec
mov
not
fisub
xchg
cmp
xchg
aam
fcomp
in
into
ds
cmp
jnp
add
inc
add
ror
xchg
xlat
shr
or
aaa
fwait
xchg
xchg
ss
loope
mov
mov
jl
addr16
sbb
inc
push
jmp
ja
inc
dec
loop
sbb
in
scas
pusha
fisttp
mov
inc
push
mov
ds
dec
sar
adc
dec
mov
test
push
and
pop
sub
cmp
movs
jbe
cmp
mov
add
jo
inc
bound
jecxz
stc
fldenv
pop
dec
pop
xor
jns
call
sub
xor
push
dec
stos
js
movs
pushf
xchg
arpl
jle
pop
fmul
jne
or
inc
inc
ins
addr16
(bad)
dec
or
push
dec
pop
or
popa
or
mov
les
jnp
mov
jo
dec
dec
ss
xchg
mov
movs
ja
inc
pop
and
retf
fsub
xor
cmp
mov
retf
mov
sti
fs
stos
ds
sbb
dec
(bad)
jnp
cli
xor
inc
bound
mov
aas
pusha
jl
movs
daa
fiadd
add
jecxz
(bad)
jmp
ret
comiss
mov
jbe
push
in
idiv
fwait
push
les
jo
into
cmps
and
retf
cmp
int3
into
data16
je
(bad)
cld
fisttp
push
dec
xor
inc
dec
sbb
pusha
imul
fcom
dec
pop
sub
cmovg
sbb
retf
xchg
xor
outs
or
aam
fucom
push
in
sbb
retf
mov
mov
(bad)
pop
mov
mov
mov
pop
mov
outs
pop
or
sahf
jg
xchg
mov
aam
in
and
cdq
sub
jae
pop
aam
sbb
push
rcr
mov
inc
pop
or
mov
js
iret
arpl
test
popa
out
gs
loop
mov
dec
ja
outs
les
outs
push
(bad)
push
pop
pop
mov
adc
mov
popa
inc
fwait
adc
mov
out
jns
(bad)
mov
mov
inc
in
xor
mov
jp
scas
add
add
bound
push
jp
pop
shl
or
jge
add
(bad)
das
retf
mov
cs
(bad)
or
inc
xor
mov
xchg
dec
push
or
pop
cmps
mov
push
iret
cwde
or
lds
xchg
ds
adc
daa
out
test
mov
add
cmp
js
inc
mov
(bad)
mov
shl
xor
xor
jae
pusha
data16
xlat
aad
sbb
mov
dec
mov
iret
fwait
daa
xor
(bad)
sbb
retf
sub
pusha
loop
stos
dec
sub
shl
fistp
call
fsubr
adc
imul
aaa
mov
inc
inc
ss
add
jge
loopne
test
or
jno
mov
inc
ins
jl
sub
xchg
mov
mul
fdiv
call
je
lahf
ds
xchg
or
inc
imul
pushf
shl
test
rcr
cmp
mov
push
mov
in
and
int3
cmp
pushf
dec
pushf
fdiv
lds
mov
fdivr
add
pop
push
jge
bound
mov
or
push
push
ja
icebp
fadd
and
clc
cmps
mov
pop
sbb
xchg
cmps
xor
fild
mov
cli
adc
adc
pop
(bad)
stc
call
mov
jno
mov
aaa
fimul
dec
lock
jae
sbb
sub
dec
fs
sub
sbb
bound
pop
shl
push
add
inc
push
js
jmp
lods
cmp
mov
inc
sub
dec
std
sub
addr16
cmp
or
add
shl
dec
(bad)
enter
sbb
sub
mov
iret
cmps
mov
stc
dec
das
sub
push
test
nop
out
jnp
cmp
(bad)
mov
daa
xchg
(bad)
(bad)
clc
ins
jmp
xchg
fmul
imul
jecxz
inc
xchg
fsub
inc
pop
inc
xor
pop
mov
adc
mov
sub
bound
and
movs
stos
inc
stos
push
pop
pusha
cwde
or
and
xchg
ds
jp
mov
int3
js
neg
cmp
push
ret
loope
aad
and
lods
aam
nop
cmps
dec
mov
and
fst
pop
adc
repnz
adc
cmp
mov
(bad)
repz
or
mov
mov
test
outs
scas
call
mov
jne
js
inc
mov
cmc
dec
sub
lahf
dec
mov
inc
out
sbb
mov
cmp
xchg
outs
js
aad
inc
dec
mov
mov
nop
pop
dec
fild
cdq
aas
adc
sbb
push
or
arpl
pushf
pop
outs
sar
push
and
sahf
mov
arpl
sahf
movs
pop
add
jge
out
ds
loop
pop
ja
sbb
stc
and
ss
dec
enter
inc
(bad)
aas
mov
daa
xchg
pop
xor
cld
sbb
sar
cmp
idiv
(bad)
out
pop
mov
push
or
std
movs
sbb
mov
je
mov
cmps
retf
pop
data16
inc
aaa
fisub
dec
push
fadd
icebp
add
into
push
add
movs
cmp
mov
push
push
pop
leave
icebp
xlat
jnp
lds
imul
add
sbb
retf
xchg
ss
addr16
cwde
push
(bad)
mov
popf
(bad)
mov
lea
cmp
push
test
or
mov
daa
jae
retf
add
jno
cli
pusha
adc
retf
inc
out
pop
inc
cs
mov
push
xor
fild
imul
retf
cld
push
push
add
jle
cmp
xchg
add
sahf
fsub
ds
repnz
mov
and
arpl
cmp
xchg
mov
pop
(bad)
js
xchg
mov
xor
mov
adc
xor
inc
xchg
mov
fdivr
pop
aad
(bad)
cwde
dec
lock
test
or
push
or
jae
xor
jmp
je
call
in
dec
xchg
ins
cdq
jae
adc
in
call
je
outs
sbb
sbb
(bad)
ja
add
repz
cmps
mov
push
shl
sbb
jb
xor
or
in
sbb
pop
mov
bound
lods
push
std
adc
xchg
out
sub
das
test
add
shl
pop
jp
push
add
(bad)
inc
or
and
mov
repz
cmp
std
mov
in
and
mov
sbb
retf
adc
stos
sahf
or
jb
adc
and
mov
mov
xchg
arpl
shl
cld
mov
in
sar
jns
mov
dec
jb
inc
scas
push
loopne
sub
ret
lea
das
outs
inc
and
imul
sub
mov
push
mov
data16
pop
retf
dec
xchg
xchg
stc
mov
pop
mov
dec
mov
xchg
add
test
pop
adc
cmp
gs
xor
lds
push
movs
pusha
mov
push
or
fistp
shr
sub
in
jmp
push
xor
mov
mov
pop
xchg
sub
or
cmps
bound
repz
or
mov
pop
test
sbb
popa
mov
jbe
or
bound
mov
mov
jb
cmp
outs
pop
cli
lods
lea
dec
xor
outs
push
gs
fmul
js
mov
push
std
mov
test
pop
and
(bad)
cmp
out
push
fidiv
pop
sub
jmp
into
push
popf
mov
test
mov
mov
adc
je
xchg
loop
lods
retf
mov
in
leave
and
inc
push
lds
dec
shl
test
or
and
clc
xor
neg
imul
add
pop
xchg
es
repz
and
mov
add
mov
pusha
sbb
mov
and
inc
inc
nop
fimul
in
ins
dec
mov
mov
out
nop
cld
mov
retf
jg
cld
push
out
std
mov
rol
mov
ret
mov
sub
in
push
cli
shl
lds
pop
out
pop
sub
(bad)
xchg
push
jb
fst
cmp
xor
ja
je
jns
mov
das
inc
movs
xor
in
jae
aam
push
dec
ins
add
xchg
xor
ins
outs
fcomp
cmp
aad
add
cmp
pop
gs
arpl
xchg
shl
pop
lea
mov
ror
rol
mov
xchg
repnz
add
mov
fistp
jbe
inc
xchg
xchg
lods
movs
inc
cmp
cmp
cmp
lahf
sbb
das
outs
add
ret
xchg
jnp
push
test
and
mov
push
fwait
pop
xchg
in
repnz
xor
jne
mov
and
cmps
pushf
data16
pop
dec
mov
call
sbb
adc
imul
int
fwait
pop
shl
adc
sub
pop
xor
outs
fnsave
pop
in
loope
jmp
daa
mov
retf
push
movs
xchg
xchg
mov
mov
call
xor
and
int3
fcmovnu
add
jmp
or
out
sbb
shl
lock
or
add
nop
mov
loopne
ficom
mov
clc
sahf
cld
xchg
fisttp
ins
enter
xchg
lea
pop
jb
adc
fcomp
aaa
cdq
adc
adc
xor
fs
mov
sub
push
nop
mov
adc
lods
inc
sub
mov
add
out
inc
adc
in
call
cmps
adc
push
fistp
popf
or
jge
mov
rcl
cmp
out
or
fiadd
mov
adc
jno
sub
mov
or
add
pop
shl
and
icebp
js
dec
dec
sub
sub
xor
xor
out
and
adc
ins
xchg
mov
dec
dec
dec
mov
fistp
movs
or
fs
leave
or
out
test
xchg
push
adc
dec
pop
fs
jge
loopne
cld
inc
add
and
or
or
jmp
cli
dec
and
fs
(bad)
fistp
dec
jle
push
mov
sub
js
out
imul
push
sbb
jle
add
lods
jmp
xor
lods
hlt
xor
lea
repnz
sbb
mov
(bad)
mov
inc
int3
mov
test
mov
ret
push
cmp
sahf
cwde
pop
fdivr
test
aam
icebp
pusha
and
jmp
shl
stos
je
test
mov
int
sbb
adc
sbb
pop
leave
movs
mov
cmp
(bad)
repnz
inc
push
mov
mov
cmps
add
xor
popa
mov
sti
jmp
jnp
add
ficomp
push
cmps
or
mov
mov
sbb
movs
jge
add
das
aaa
xor
dec
sti
ret
mov
dec
mov
pusha
fsubr
xchg
lock
std
push
dec
mov
ficom
push
adc
out
mov
fist
loope
push
xchg
pop
xchg
fcom
out
add
sub
in
ss
leave
add
xchg
mov
je
adc
test
mov
xor
xor
push
and
cmp
mov
test
inc
mov
xor
loopne
xor
xchg
add
(bad)
dec
xchg
sub
hlt
call
shl
push
push
mov
cmp
fadd
stos
xor
xchg
fcom
aam
(bad)
cwde
pop
cld
xchg
push
call
pop
cli
out
je
cs
xor
push
jge
rol
cs
jns
int
(bad)
mov
inc
pushf
pop
ss
shl
scas
ins
sbb
inc
loop
fisubr
popa
stc
sbb
scas
sub
push
pop
mov
arpl
rol
cmp
mov
movs
sahf
fdiv
outs
sub
call
(bad)
in
mov
data16
sahf
push
(bad)
jge
or
inc
aaa
lahf
mov
push
push
aaa
pop
aaa
div
lahf
xor
sbb
cs
icebp
xor
out
cvtpi2ps
test
lds
push
jp
cli
pop
out
lock
push
rol
pop
mov
rcl
add
add
ret
ret
pop
cwde
mov
scas
shl
xchg
hlt
fstp
cmp
fild
retf
sub
push
sti
mov
lods
mov
cmp
jle
xchg
mov
dec
pop
iret
shl
mov
push
hlt
xchg
std
cmps
and
inc
push
outs
xor
outs
lock
ror
inc
shl
rcr
pop
repnz
inc
add
fidivr
daa
dec
push
bound
jp
pushf
xor
push
sub
fsub
fsub
xchg
mov
dec
mov
scas
mov
imul
loope
pusha
repnz
mov
out
repnz
shl
and
xor
shr
sub
(bad)
mov
fidivr
xor
cli
mov
or
fidivr
and
test
idiv
and
xchg
cmps
(bad)
(bad)
or
test
(bad)
jl
mov
dec
or
xchg
adc
icebp
ins
mov
jne
mov
cli
std
push
gs
push
in
xchg
daa
xchg
xor
mov
ja
sbb
cmps
(bad)
in
imul
sbb
(bad)
sti
movs
shl
sub
and
dec
dec
shr
cwde
bound
mov
cli
daa
sti
fs
cwde
pop
mov
cmp
mov
pop
inc
ss
pop
pop
and
aam
test
and
xchg
retf
shr
(bad)
movs
xor
test
(bad)
je
xchg
mov
jb
mov
je
in
lahf
pop
ret
js
xor
add
test
xor
ficom
mov
or
fadd
jg
int
cs
sub
fild
mov
and
ret
cmps
sahf
adc
aad
mov
pop
loopne
bound
outs
adc
iret
retf
push
sub
imul
add
popf
cmp
fs
outs
mov
xchg
jp
outs
xchg
stos
(bad)
stos
repz
add
pop
or
scas
out
or
in
inc
xor
(bad)
sub
jno
std
je
pop
ins
stos
inc
sub
rcr
cmp
test
movs
cmp
jl
or
dec
sub
sbb
aas
cmps
pop
movs
sub
mov
jp
sub
fnsetpm(287
adc
push
xor
jo
in
add
(bad)
jg
call
bound
or
fwait
jmp
cdq
int3
jno
dec
inc
sbb
repnz
sub
add
pop
and
add
jne
call
jne
fbstp
out
popf
mov
mov
repnz
push
push
mov
add
or
mov
mov
and
bound
cmp
push
test
arpl
stos
mov
stc
lea
sbb
loope
xchg
mov
std
in
out
jae
add
xor
push
xor
(bad)
rol
inc
sbb
push
outs
int3
loopne
jmp
xchg
sbb
test
out
rcr
xor
sbb
adc
cs
push
ret
call
cmc
test
xlat
xor
push
push
mov
es
sub
inc
push
sbb
pop
std
dec
pop
dec
xor
and
ins
pop
nop
ds
mov
mov
sbb
sub
jo
pop
xchg
mov
xor
les
stos
xor
pop
mov
retf
aas
cmc
push
mov
push
jle
mov
leave
mov
add
inc
jne
xchg
add
xchg
sbb
call
and
js
stos
and
in
jbe
fwait
xor
dec
mov
jns
or
and
cld
addr16
push
and
and
sub
xor
mov
bound
push
sbb
ret
dec
shr
addr16
lock
cmp
xchg
cs
sti
jbe
rcr
adc
sbb
adc
fdivr
mov
cli
cmp
dec
aas
and
jne
repz
push
jp
jmp
xchg
add
pop
xor
lock
xor
pop
pop
shl
loop
outs
rol
stos
arpl
fcmovb
aam
dec
lock
mov
xlat
push
push
sub
retf
sub
or
mov
sti
(bad)
jecxz
inc
mov
jo
or
push
jl
pushf
or
mov
mov
out
mul
push
jl
cmp
(bad)
fcmovbe
mov
movs
push
jae
inc
retf
inc
xchg
lahf
xor
dec
push
add
sti
hlt
or
mov
inc
jmp
sbb
mov
into
in
cmp
(bad)
fsub
sti
xchg
or
and
stos
aas
pop
or
jl
cld
inc
lea
shl
shl
and
pop
push
cmp
add
aad
sub
mov
cdq
out
popa
and
push
test
push
mov
in
fs
imul
pop
xchg
cmove
pop
in
repnz
je
and
and
ret
int
push
lds
(bad)
xor
add
pusha
or
loop
xchg
and
or
cmp
push
sar
pop
mov
addr16
retf
cwde
pop
adc
test
jmp
mov
mov
cmp
push
cmp
xchg
(bad)
arpl
div
push
test
int
daa
mov
adc
and
cmps
daa
(bad)
hlt
xchg
cld
iret
in
outs
je
push
or
test
dec
mov
loope
shl
mov
pop
add
lods
div
mov
xchg
xchg
imul
je
sub
dec
(bad)
lods
lea
pushf
jno
pusha
or
add
ss
and
loop
xchg
adc
call
push
cmp
mov
push
add
(bad)
enter
add
sub
pusha
mov
xor
in
cmp
or
mov
inc
or
dec
daa
call
jns
callw
xchg
xchg
sbb
dec
lods
popa
and
cmp
das
mov
and
xchg
sub
gs
popf
mov
or
in
sbb
dec
and
test
int
cmp
fst
pop
lods
push
into
push
fwait
es
out
inc
ficom
fwait
sbb
test
sub
sbb
aam
cli
adc
mov
ins
cmp
icebp
mov
mov
inc
mov
dec
xchg
fimul
pop
dec
cmp
lock
jle
jle
shl
repz
adc
dec
call
jmp
lock
pop
xor
pop
aaa
mov
shl
push
mov
ret
pushf
mov
mov
ds
mov
jp
leave
dec
jmp
pop
xchg
xor
push
mov
pop
pop
fbstp
pop
repnz
xchg
pop
xchg
mov
dec
cwde
pop
push
mov
movs
loop
ret
call
arpl
stos
push
lea
push
xlat
push
jmp
retf
stc
or
pushf
mov
pop
mov
nop
neg
arpl
adc
add
push
call
fisub
mov
(bad)
aam
mov
add
cmps
scas
cdq
sbb
jg
jle
mov
push
and
pop
aas
div
call
sub
cmp
iret
adc
enter
and
jmp
iret
icebp
adc
dec
out
daa
fcomp
lea
fiadd
shl
add
lods
icebp
dec
xor
xor
inc
test
inc
not
sub
addr16
iret
int
pop
adc
push
les
push
xchg
js
iret
adc
mov
push
imul
push
cwde
and
mov
adc
mov
pop
dec
mov
and
lds
mov
mov
mov
dec
lahf
sub
test
mov
xor
lahf
(bad)
das
mov
out
(bad)
retf
sub
imul
jns
cmp
add
push
lods
add
(bad)
ins
pop
sbb
and
xor
aam
pushf
stos
in
mov
(bad)
in
push
cmp
mov
(bad)
loop
leave
cs
jecxz
mov
call
cmp
add
push
sub
add
mov
push
add
out
cmp
test
in
(bad)
xlat
je
ins
mov
clc
icebp
sti
cmp
es
fimul
push
lds
icebp
xchg
push
and
xchg
sub
mul
dec
push
in
ficomp
fucomp
ins
arpl
stc
jno
(bad)
js
add
addr16
imul
dec
jns
or
rcr
inc
jle
(bad)
jnp
pop
or
out
pop
pop
lds
fsubr
or
push
ret
jb
cmp
outs
neg
cmovno
xchg
cmp
mov
in
adc
push
adc
call
xlat
out
(bad)
and
pop
pusha
inc
(bad)
sti
pop
cld
push
sbb
adc
neg
imul
dec
popa
in
mov
js
movs
fcmovnu
and
add
dec
shl
cwde
test
sahf
aaa
retf
xchg
lods
push
shl
sbb
mov
cmps
aaa
push
js
rcl
add
push
push
or
mov
(bad)
retf
sbb
jo
loope
ins
xor
add
ds
cmp
jmp
je
push
dec
adc
imul
fst
cli
mov
je
mov
movs
or
push
sbb
push
jmp
xor
std
pop
mov
addr16
cmps
sub
mov
std
shr
cmp
je
sti
xor
xchg
test
(bad)
je
aaa
push
sar
mov
lods
jge
jns
lods
sub
add
mov
push
xor
xchg
ret
push
sbb
mov
mov
pushf
call
pop
gs
mov
fcomp
imul
mov
leave
pushf
mov
mov
push
jnp
stos
loopne
pop
lock
xchg
jb
in
dec
outs
jb
jno
sbb
icebp
mov
ins
lds
jb
imul
push
mov
outs
lock
inc
xor
sbb
lods
xor
cmp
(bad)
jl
adc
add
lahf
inc
bound
call
jbe
pop
or
xchg
mov
pop
sbb
bound
js
sbb
add
arpl
arpl
sub
retf
jmp
rcl
test
jg
les
fstp
cmp
arpl
ins
fmul
push
(bad)
icebp
(bad)
fs
push
add
cmp
mov
inc
rcl
(bad)
xchg
popa
aas
imul
ja
sub
imul
ds
daa
ins
std
data16
and
mov
enter
imul
mov
cmp
(bad)
cli
or
dec
xchg
lds
cmp
dec
push
cmp
enter
sub
sub
stc
test
call
xchg
pop
mov
lea
sub
and
inc
shr
bts
aas
mov
and
dec
test
imul
dec
push
loop
push
xchg
xchg
pop
pop
cmp
dec
and
cmp
add
xchg
and
jge
hlt
or
shl
je
loope
stos
(bad)
jbe
out
test
inc
pop
add
aam
jo
mov
cmc
enter
sub
rcr
cmp
lods
repnz
cmp
adc
arpl
sub
ins
addr16
int
dec
cmps
dec
shl
adc
pop
jg
jg
bound
les
sbb
jb
push
jmp
aaa
fistp
inc
inc
sti
aam
dec
repnz
mov
fs
pop
aaa
(bad)
jo
call
dec
data16
call
lds
(bad)
dec
in
das
ret
dec
adc
jg
xchg
push
lds
mov
int3
jle
xchg
arpl
push
mov
jmp
inc
and
into
jp
mul
cs
cld
pop
mov
movs
out
stos
cmp
cdq
std
mov
dec
mov
loopne
(bad)
scas
(bad)
jae
movs
jne
mov
mov
xor
and
clc
lds
and
sahf
add
aam
fistp
imul
jbe
test
mov
mov
ins
jnp
pop
jmp
jl
or
aaa
lock
xchg
ffreep
les
or
add
sbb
add
popf
loope
cld
mov
loopne
scas
repnz
dec
loop
addr16
xor
sub
add
push
outs
aam
or
outs
ja
retf
stos
adc
mov
and
sub
in
bound
add
add
hlt
xor
scas
push
mov
fmul
call
push
sahf
sti
lods
jge
or
xor
jecxz
les
pop
movs
or
data16
ss
xor
iret
movs
dec
jl
test
daa
pop
add
cmp
xchg
dec
mov
fidivr
dec
call
lahf
inc
jbe
ret
inc
push
sub
pop
lods
pusha
rcr
or
adc
mov
xchg
dec
or
daa
pop
lods
ds
dec
sbb
imul
rcl
lock
or
sub
ror
stos
int3
push
ins
jp
pop
pushf
cmp
mov
call
inc
nop
cld
sub
dec
inc
dec
mov
add
xor
mov
dec
shl
in
inc
push
and
clc
mov
fdiv
call
test
out
stos
sar
in
cmps
test
sbb
fadd
aas
out
jge
stos
bound
js
ins
add
sub
push
inc
or
mov
fld
lock
mov
movs
mov
sbb
in
xchg
shl
dec
mov
jno
sahf
cdq
sbb
push
cmp
sar
mov
loopne
clc
loopne
pop
push
and
push
xor
cs
sub
xor
aam
fldcw
or
idiv
dec
jo
jnp
mov
xor
push
push
or
loop
outs
xchg
js
pop
popf
ror
push
mov
js
call
xchg
bound
dec
or
in
out
ds
sub
cmp
(bad)
pushf
popa
popa
fwait
dec
popf
xlat
jnp
push
xchg
push
mov
dec
dec
push
or
adc
iret
inc
ror
push
mov
add
xor
dec
data16
in
mov
retf
out
xor
push
outs
aas
call
repz
ret
cmps
and
rcl
inc
stos
int3
out
ins
popf
and
fistp
pop
fisttp
inc
popa
das
imul
mov
ror
fdivr
cmc
mov
jle
lock
int
add
jecxz
and
ror
retf
test
mov
movs
push
and
pushf
call
mov
outs
test
inc
das
jmp
push
mov
and
imul
dec
mov
nop
mov
inc
ins
and
adc
jo
and
test
shr
(bad)
xor
add
dec
pop
push
rol
ins
stos
mov
dec
imul
xor
adc
fcomp
fwait
scas
xor
push
mov
mov
or
or
shr
mov
stos
xor
pop
fwait
mov
cli
add
adc
imul
(bad)
clc
cmc
test
call
or
outs
push
lahf
je
and
stos
mov
in
pop
and
push
xchg
lea
lock
out
cmps
xchg
push
push
xchg
aam
adc
std
push
iret
mov
mov
pusha
stc
mov
sub
adc
hlt
push
sub
cmc
rcr
and
or
fwait
rcl
mul
dec
inc
cmp
cmc
mov
data16
ret
lods
inc
adc
mov
sub
loopne
mov
push
push
pusha
loopne
mov
adc
inc
cmp
inc
xor
xchg
jecxz
les
xchg
loop
retf
push
sub
div
xlat
fiadd
int3
cdq
mov
sub
mov
cld
sub
mov
cld
retf
ret
and
push
jmp
lods
ins
mov
fcom
push
pop
scas
imul
clc
cs
mov
gs
jo
in
mov
fcmovnu
jno
cmp
inc
and
ins
nop
rcl
mov
ret
xor
repz
or
leave
mov
jo
add
arpl
cmps
cwde
xor
adc
jp
ret
mov
inc
adc
inc
sti
push
cmp
ds
mov
inc
test
test
jb
jle
pop
retf
ds
aad
sub
mov
scas
xor
dec
dec
popa
int3
sbb
sbb
fld
add
test
dec
jp
ja
cmp
sbb
and
jne
push
jb
adc
sar
sub
mov
push
jl
sbb
out
js
mov
jbe
push
or
call
in
pop
mov
cmps
rol
retf
add
pop
adc
mov
adc
movs
outs
xchg
aas
push
inc
inc
pop
pop
xor
hlt
fwait
xchg
push
mov
jb
xor
xor
dec
xchg
stos
call
ret
adc
inc
aaa
and
inc
and
adc
rcl
xor
ins
imul
pop
ja
arpl
mov
nop
lods
clc
sar
aaa
cdq
mov
loope
je
push
test
xchg
ret
mov
clc
cmp
jecxz
sahf
jle
fwait
cld
leave
xor
icebp
(bad)
mov
lds
jge
xchg
fcom
ins
jae
jne
dec
jne
out
or
push
and
mov
mov
dec
iret
mov
outs
push
mov
cmps
dec
pop
in
shl
xlat
ret
cmps
jae
add
lods
stos
sar
add
or
push
dec
mov
xor
cmp
adc
adc
cdq
cdq
mov
ret
pop
data16
jp
inc
jle
in
pop
movs
add
std
pop
mov
mov
xor
cmp
sub
sbb
mov
imul
push
jle
push
adc
hlt
bound
add
dec
push
mov
jmp
cs
jl
push
or
sahf
jp
mov
popa
jmp
cmp
mov
push
repnz
mov
lahf
inc
pop
ds
xor
pusha
dec
arpl
dec
mov
frstor
repz
jno
mov
inc
test
stc
mov
mov
aas
sub
cli
mov
shl
pop
pusha
pop
xor
jno
outs
push
out
adc
(bad)
fwait
xchg
mov
cld
sbb
and
jge
clc
data16
call
inc
xor
mov
inc
stos
xor
add
fld
nop
adc
sub
icebp
inc
pushf
jmp
fs
je
or
xor
or
or
mov
pop
in
pop
pop
sbb
mov
rcl
mov
pop
mov
dec
(bad)
repz
xor
nop
mov
push
jno
cmp
inc
inc
jge
pop
adc
daa
jo
mov
add
outs
repnz
or
push
(bad)
pop
dec
dec
add
mov
push
sub
xchg
mov
(bad)
mov
or
int
les
dec
cmp
aad
repnz
mov
adc
fcom
sub
imul
into
dec
mov
cld
xchg
or
mov
mov
out
sub
repz
cmp
ror
repz
sbb
mov
jnp
inc
aad
mov
into
or
add
sbb
in
inc
push
ss
cmovle
ds
aam
retf
cmps
pop
sub
cmp
call
push
mov
jecxz
xor
jp
enter
(bad)
sbb
mov
sbb
xchg
xchg
cmp
cmp
(bad)
cmp
or
int3
pusha
test
pop
out
popf
and
adc
pop
inc
int
dec
lods
in
leave
aaa
jmp
mov
mov
sbb
test
fidiv
inc
and
(bad)
loopne
call
pushf
fs
ret
xor
push
data16
loopne
mov
add
dec
cmp
inc
sbb
fsub
ins
add
and
push
mov
pop
mov
aas
jae
mov
ins
fcomi
sbb
inc
cs
sti
mul
sbb
retf
cmps
je
push
pop
jae
dec
lods
cmps
mov
jae
rcr
(bad)
push
loopne
jo
adc
test
jbe
rcr
push
push
and
mov
(bad)
adc
sub
fwait
aaa
mov
or
dec
adc
add
(bad)
sub
shl
(bad)
stc
hlt
sub
pop
sbb
ror
inc
sbb
(bad)
mov
loope
adc
pop
sahf
inc
cmc
bound
sub
int3
(bad)
int3
pop
lods
into
push
inc
inc
jae
in
in
jle
out
sub
inc
or
inc
xor
pop
and
cmp
fisubr
call
and
pop
mov
inc
ins
outs
pop
cmps
sar
rcr
and
cld
and
xchg
repz
jmp
clc
sub
aam
pop
sub
xchg
fld
mov
inc
push
jge
jo
pop
or
retf
shr
adc
mov
sub
mov
mov
xchg
lea
dec
int
mov
enter
movs
arpl
call
imul
add
rcl
dec
dec
(bad)
out
popa
sti
cmc
lock
pop
xchg
das
xchg
or
in
popa
ret
mov
mov
push
push
mov
inc
mov
repz
pop
mov
mov
les
mov
vmovss
pop
ficomp
inc
inc
or
and
ins
push
pop
sub
sub
inc
dec
das
xchg
push
and
jg
xlat
mov
mov
aam
cwde
test
adc
shl
mov
cmp
and
dec
in
lods
scas
cs
aam
cmp
ins
call
dec
in
inc
in
leave
sub
cmp
push
outs
stos
jmp
mov
add
stos
xchg
pop
adc
and
test
out
(bad)
repz
xchg
mov
cmp
or
mov
les
and
push
stos
popa
xchg
jge
dec
out
(bad)
xor
inc
adc
lods
jne
in
add
xor
fdivr
fwait
and
push
jmp
push
cs
sbb
or
adc
shr
jg
cli
outs
enter
inc
popf
jg
push
sbb
repz
push
cmp
and
es
lea
dec
int3
dec
dec
mov
bound
pop
je
test
jnp
sbb
clc
retf
call
fdiv
mov
dec
cmp
add
or
loope
movs
pop
jg
fwait
mov
pop
lds
jmp
popf
add
pop
sbb
mov
mov
cdq
mov
mov
push
mov
loop
fst
das
jle
lock
imul
and
jbe
jb
pop
mov
sub
mov
fadd
out
sbb
adc
movs
sbb
neg
xchg
aaa
dec
outs
retf
stc
fdivp
cs
xor
out
sbb
fcomip
cmps
movs
aas
lds
ret
ret
and
call
sub
data16
mov
js
fucomip
leave
pusha
jmp
icebp
xchg
xor
dec
leave
push
mov
call
ins
pop
lock
push
pop
fst
inc
jp
jae
mov
mov
sbb
sub
push
out
and
int3
call
movs
ds
aas
push
push
or
pop
movs
xlat
cmp
lods
idiv
add
mov
cdq
xchg
aam
xchg
mov
sbb
xchg
sbb
fsubr
sub
out
push
xlat
dec
jp
call
pop
hlt
inc
add
xchg
(bad)
push
(bad)
dec
xor
and
dec
push
rol
popf
cmp
jb
int3
int
outs
clc
adc
mov
inc
loopne
push
cmp
rol
(bad)
shl
jecxz
fwait
pop
jae
jmp
fwait
gs
jno
mov
aaa
sahf
and
(bad)
fistp
jbe
pop
inc
mov
loop
es
push
jo
jg
imul
es
sbb
pusha
mov
stos
pop
mov
dec
sbb
sbb
mov
sahf
adc
xor
add
inc
dec
inc
add
push
xchg
xchg
xchg
inc
outs
imul
inc
fnsetpm(287
mov
jo
ret
shl
add
stos
mov
xor
xchg
inc
jge
add
ins
mov
ins
call
out
xchg
mov
and
int3
inc
or
push
mov
ror
ret
shl
rcl
and
mov
sbb
jg
lock
stos
inc
xchg
jnp
push
add
xchg
sti
loopne
sbb
cmovne
cmps
in
cmps
jmp
cmps
jge
rcl
mov
push
ds
xchg
mov
scas
xchg
add
cmp
cmp
and
inc
ret
push
xlat
jno
sbb
jecxz
sub
jecxz
or
rcr
inc
jg
adc
xor
sub
clc
xlat
arpl
lods
mov
mov
jecxz
push
sub
rcl
ins
sbb
out
mov
pop
sbb
movs
dec
int
mov
test
call
xchg
jne
jne
mov
add
sbb
fstp
sub
xchg
inc
mov
sbb
aas
mov
ret
jb
sub
pop
clc
daa
enter
cmps
push
lods
jmp
fnstcw
jge
(bad)
or
push
lahf
(bad)
mov
fwait
add
popa
jecxz
pusha
xor
push
pushf
nop
iret
retf
ins
mov
gs
xor
dec
cmps
push
inc
xchg
add
sub
dec
movs
loopne
cmps
iret
xor
xor
sbb
mov
call
inc
jo
add
les
aaa
stc
push
push
pop
loopne
test
(bad)
mov
jl
xor
cmp
mov
or
pop
jmp
or
sbb
or
cli
int
mov
lods
and
daa
cmp
(bad)
sbb
inc
mov
xlat
std
retf
sbb
adc
inc
pop
dec
out
push
sub
pop
call
out
mov
cmp
cmp
in
mov
push
inc
push
mov
out
movs
and
cwde
in
xor
jmp
shl
fwait
xchg
and
xlat
xchg
ret
outs
mov
lods
pop
xchg
or
mov
(bad)
(bad)
bound
leave
test
add
maxps
fcom
xlat
push
stos
scas
ds
mov
pop
std
shr
test
add
out
int3
fdivrp
mov
gs
xchg
push
dec
movs
or
jns
cmp
xchg
inc
sub
gs
pop
xchg
or
stos
fwait
pcmpeqd
or
jle
fcmovb
xor
fwait
ss
dec
ret
loopne
adc
pushf
outs
mov
push
es
xchg
stos
test
sub
fdivrp
pop
jecxz
sub
mov
cmp
sub
pop
xchg
nop
es
mov
xchg
mov
sub
clc
cmp
into
cdq
pop
sbb
cs
ja
leave
ret
sub
mov
mov
or
sqrtps
dec
or
data16
adc
xchg
push
iret
mov
mov
cmp
(bad)
mov
clc
mov
jae
arpl
sub
stos
sub
or
sti
lea
or
dec
mov
aas
and
out
inc
cs
mov
sar
stos
adc
pop
rol
push
and
jmp
jb
inc
cmp
cmp
(bad)
xor
jp
or
mov
adc
cmps
cmc
and
mov
mov
popf
les
mov
call
ror
sahf
mov
call
imul
xchg
call
xchg
mov
mov
aad
xor
push
pop
jl
push
mov
mov
push
cmc
fnsave
adc
inc
dec
cmp
xchg
test
jnp
xchg
mov
push
ds
mov
out
mov
dec
pop
xchg
mov
mov
imul
std
scas
mov
or
sbb
stc
xchg
std
sub
cmp
sti
sbb
mov
push
xor
dec
jg
nop
add
dec
pusha
inc
or
adc
das
adc
icebp
aam
push
xor
sub
and
hlt
pop
dec
fwait
inc
sbb
iret
rol
fwait
jns
es
ret
inc
inc
jge
xchg
inc
(bad)
fsubr
outs
pop
pop
lds
xor
push
push
clc
mov
ins
mov
retf
dec
dec
pop
pop
sbb
sub
pop
icebp
popf
sub
add
aaa
or
lahf
xor
ins
mov
jg
add
test
sbb
ins
imul
jno
test
fucomip
dec
mov
ret
les
xor
std
inc
xor
gs
sbb
push
shl
xor
cmps
scas
sbb
addr16
cmc
pushf
cmp
fwait
or
mov
push
xchg
push
pop
nop
lahf
popf
clc
mov
and
(bad)
pop
out
sbb
sub
sub
xchg
mov
aaa
sub
sar
repz
jmp
sub
loope
loopne
add
fst
ret
add
pop
ret
pop
es
pushf
stos
cmp
movs
pop
sbb
inc
test
std
bound
lock
pop
shl
pop
mov
mov
out
rol
fild
popf
nop
das
mov
fwait
outs
sub
push
xchg
fistp
mov
into
sub
fiadd
dec
enter
xlat
cmc
jle
je
xor
stos
and
cmc
or
jp
and
std
lods
mov
cs
retf
mov
sub
push
sbb
mov
inc
jno
push
mov
in
mov
loope
in
gs
xchg
in
and
xchg
add
inc
mov
dec
cmp
cmp
(bad)
xor
add
fnstcw
mov
(bad)
jmp
int3
out
retf
xlat
call
(bad)
fisttp
push
(bad)
(bad)
jp
pop
test
daa
ss
pusha
dec
(bad)
xchg
out
cmps
xor
pop
sbb
fistp
or
mov
inc
loop
sub
inc
test
mov
(bad)
and
pop
sbb
mov
adc
push
sti
imul
loopne
test
ficomp
xor
(bad)
leave
mov
and
inc
pop
push
sbb
add
jnp
stc
movs
dec
daa
cmps
jecxz
out
or
je
xchg
xor
mov
add
fwait
sub
mov
inc
inc
cdq
imul
iret
jmp
dec
or
adc
mov
rol
mov
ds
cmps
out
mov
mov
pop
out
push
mov
or
mov
mov
mov
dec
xor
in
jo
xchg
loop
retf
call
add
loope
xchg
out
mov
movd
fstp
imul
fs
mov
push
test
mov
std
in
adc
pop
mov
cs
fs
loope
jmp
movs
sub
ins
repz
pop
sahf
in
scas
inc
push
jbe
ins
push
xor
pop
movs
cld
(bad)
push
pusha
mov
cmps
or
adc
dec
jg
std
test
imul
push
popf
mov
sahf
add
pop
sar
leave
add
std
push
mov
inc
imul
or
ror
pop
pop
loop
and
xor
mov
fisubr
cmps
pop
adc
cwde
cdq
aaa
mov
fs
pop
data16
push
mov
leave
mov
mov
and
xchg
scas
ror
outs
inc
aam
xchg
sub
sub
fwait
(bad)
das
sbb
stc
and
shl
mov
cmp
push
in
ror
pop
fbld
jmp
dec
xchg
push
in
fwait
dec
xchg
rcr
pop
stos
pop
in
stos
push
je
jmp
enter
retf
cli
pop
enter
loopne
sbb
sbb
push
push
ret
xchg
(bad)
mov
xchg
retf
dec
xlat
add
xchg
aaa
(bad)
(bad)
sub
or
aas
cld
xor
int3
sbb
shl
jno
call
pop
jno
out
push
pusha
and
imul
les
cmc
pushf
scas
inc
xor
dec
aaa
mov
fdivrp
and
in
jmp
push
aaa
dec
js
pusha
inc
out
into
(bad)
mov
jp
cmp
imul
ret
or
outs
fwait
leave
sub
call
xchg
inc
sbb
ja
sub
lahf
cmc
push
xchg
mov
or
mov
jmp
mov
movs
sub
cmps
retf
and
in
sub
push
jbe
in
rcl
movs
js
data16
fisttp
movs
mov
stc
mov
adc
pop
int3
sbb
jmp
push
jl
rcl
sbb
mov
mov
mov
inc
and
inc
je
dec
adc
sbb
inc
retf
lock
stos
jns
or
xor
inc
inc
icebp
sbb
inc
jp
and
lds
mov
sub
add
sub
into
outs
loop
sbb
(bad)
dec
inc
xor
sbb
imul
enter
ins
test
fiadd
adc
shr
sar
(bad)
pushf
cmp
mov
add
call
rcl
add
push
xchg
rol
pop
inc
jecxz
cmp
adc
(bad)
mov
das
fild
adc
and
mov
cmp
inc
aam
xchg
push
outs
iret
mov
retf
loopne
push
cmc
je
or
fwait
pop
ins
pop
inc
in
xchg
pop
mov
add
push
sar
imul
loope
pop
cmps
jnp
sahf
adc
and
jne
pushf
test
adc
lea
mov
jb
shl
and
clc
sub
mov
mov
mov
sbb
add
(bad)
stc
cs
lahf
pop
pop
fs
pop
push
ror
inc
pop
or
jbe
inc
shl
mov
sbb
jne
das
inc
push
in
les
ss
sbb
mov
dec
fiadd
mov
(bad)
call
or
or
mov
push
(bad)
push
xchg
aaa
repnz
push
add
das
push
loop
outs
in
or
sar
add
pop
lds
or
daa
inc
lahf
ret
jae
adc
sbb
not
call
popf
ficomp
mov
lahf
mov
cmc
dec
or
mov
add
add
sub
(bad)
adc
stos
mov
mov
or
in
retf
js
push
pusha
cmp
add
sahf
scas
jbe
mov
push
dec
and
outs
cmp
out
xor
pop
retf
(bad)
mov
push
ins
mov
adc
mov
jp
cmp
mov
push
lock
push
or
pop
xchg
adc
inc
nop
shl
pop
inc
add
push
push
(bad)
call
(bad)
cmp
mov
push
pop
pop
mov
movs
dec
mov
aad
jle
sub
pop
pusha
daa
ror
gs
sub
jno
xchg
mov
add
pop
mov
rol
mov
mov
or
pop
push
aam
out
fist
mov
pop
and
sub
or
cmps
inc
arpl
inc
fcom
mov
(bad)
loope
out
cli
push
mov
push
loop
sub
stos
fsub
jecxz
(bad)
push
mov
fdivr
add
leave
jne
add
xchg
mov
jecxz
xlat
sub
stos
sahf
add
and
fld
cdq
mov
mov
je
xor
jne
mov
daa
js
dec
inc
xchg
aaa
pop
in
or
ins
jle
mov
out
push
cmps
fcomp
mov
int
ja
out
pop
dec
sub
sub
cmp
add
lea
ss
daa
lock
add
stos
jnp
or
mov
adc
ss
test
test
push
pushf
sub
lea
call
loopne
cmp
mov
inc
nop
and
inc
jle
call
xor
xchg
adc
imul
mov
in
int
retf
retw
cmp
adc
add
mul
imul
mov
xchg
out
mov
call
ds
js
jae
xlat
add
stc
mov
and
out
mov
xchg
or
mul
push
adc
stos
test
loop
adc
mov
outs
lea
adc
idiv
fadd
outs
in
(bad)
mov
outs
add
push
push
gs
and
leave
pop
inc
pop
mov
outs
lock
pop
sbb
inc
jle
hlt
cmc
or
outs
add
xchg
pop
sti
pop
pop
inc
sub
xor
sub
mov
inc
loop
in
sub
sbb
push
test
call
jmp
repnz
into
pusha
and
inc
jae
xchg
bound
arpl
push
fisttp
retf
lea
aad
fcomip
jns
sub
test
aaa
mov
xchg
push
sbb
mov
in
(bad)
aaa
xor
jge
imul
add
mov
aam
out
inc
in
ret
mov
fisttp
cli
movs
neg
cld
add
jbe
mov
sub
lods
(bad)
imul
ds
pop
add
xor
in
js
add
mov
sbb
and
pop
(bad)
xchg
pop
mov
add
adc
xlat
xchg
xlat
mov
dec
mov
add
es
mov
push
mov
imul
ins
cmps
push
icebp
cmps
and
push
enter
mov
mov
xchg
push
jb
mov
cwde
xchg
mov
add
jl
jg
jb
mov
lds
sar
sub
add
icebp
movs
jge
sub
xor
out
pop
dec
lods
iret
mov
fsub
cmc
mov
sub
sbb
jge
arpl
xor
xlat
aad
push
xor
mov
push
(bad)
(bad)
jnp
xor
cld
cmc
test
and
rcr
adc
jle
add
mov
pop
loope
push
imul
stos
ins
mov
inc
imul
and
cwde
mov
pushf
pop
jg
ja
test
scas
mov
push
test
xchg
and
dec
cmp
ficom
test
das
adc
std
(bad)
loopne
dec
adc
mov
adc
cwde
rcl
adc
mov
fisttp
outs
ret
inc
jns
call
into
repz
dec
fisub
test
inc
mov
push
leave
push
cs
(bad)
std
loope
repz
mov
mov
aaa
xchg
add
dec
mov
(bad)
(bad)
enter
fistp
cmp
jne
mov
fdivr
mov
fcomi
movs
std
xchg
mov
adc
inc
(bad)
(bad)
mov
cld
pop
or
movs
add
out
inc
dec
test
cmp
aam
sub
(bad)
out
hlt
je
push
dec
retf
call
jb
lods
hlt
push
mov
xor
mov
pop
int
pop
hlt
or
(bad)
mov
jle
jnp
and
push
mov
fidiv
mov
into
mov
test
lock
popf
lds
adc
int
aam
in
retf
jbe
not
jno
xor
leave
test
adc
mov
ins
jp
xchg
push
push
dec
mov
and
in
and
dec
jne
retf
cmc
pop
xchg
ror
fldenv
pusha
xor
(bad)
cld
jb
cmp
add
sbb
in
icebp
outs
mov
fs
add
cdq
or
push
dec
and
mov
dec
sbb
mov
into
sub
retf
ja
std
push
stos
call
push
sar
sbb
cmp
cmp
push
outs
cmp
add
dec
sub
sti
jge
mov
pop
bound
test
xchg
pop
cmp
xor
pop
in
fs
mov
mov
ds
scas
fist
iret
or
adc
in
int3
inc
and
or
add
pop
xor
mov
int
push
or
aas
mov
xchg
dec
ins
inc
inc
inc
es
xor
ja
inc
aam
sbb
xor
test
call
pop
into
mov
and
jb
call
sar
clc
nop
cmp
adc
push
push
cmp
mov
xor
mov
push
push
push
dec
jns
fcmovu
mov
pop
and
xchg
jg
add
sbb
xchg
jb
jb
js
mov
mov
pop
arpl
das
mov
ja
push
lds
xchg
fimul
gs
stc
outs
cmp
sbb
ins
cmp
(bad)
outs
mov
div
xchg
sar
xor
mov
pop
icebp
mov
xor
xor
call
adc
ret
clc
sub
inc
push
rcl
nop
fldenv
inc
cmp
cmc
icebp
shl
int
ror
add
sbb
pop
repz
push
sub
fsubr
lahf
or
add
jno
add
sub
icebp
repnz
adc
out
aam
jno
xlat
mov
mov
push
push
or
sub
and
jmp
xchg
je
mov
and
out
pop
aam
push
popa
fs
adc
sub
jae
cmp
daa
pop
lea
push
fild
dec
movs
dec
mov
add
mov
jae
mov
sub
adc
rcr
mov
jno
lods
add
dec
in
pop
or
sti
mov
cmp
push
push
add
dec
popa
into
xchg
outs
mov
pop
inc
jb
into
dec
pop
(bad)
in
push
nop
jns
addr16
or
cmps
ss
ja
aaa
and
xor
dec
add
jg
jp
aaa
sbb
cmp
adc
imul
fisub
xchg
jmp
and
push
and
movzx
je
mov
lea
sbb
xchg
jbe
ds
aaa
xlat
xchg
pop
sbb
fwait
fwait
das
cs
imul
or
mov
and
and
es
mov
fist
xchg
push
xor
pop
stc
test
jns
add
adc
mov
sbb
cmp
mov
cmp
stc
fsin
hlt
cmp
xor
enter
cmp
ret
cld
repz
pop
loopne
xchg
sub
and
jle
sub
jne
jle
dec
xor
mov
pop
xchg
cmp
pop
shl
jae
ds
ins
jns
mov
aad
neg
dec
into
mov
shl
jmp
mov
push
inc
jnp
outs
retfw
stc
enter
aad
test
jmp
call
or
into
(bad)
jl
retf
cmp
arpl
sbb
imul
mov
or
or
test
dec
lock
jmp
out
call
or
hlt
inc
xchg
mov
data16
or
push
mov
popa
inc
rcr
aad
cdq
ror
sbb
sub
cmp
or
retf
mov
add
pusha
icebp
dec
aas
(bad)
stos
mov
xor
xor
sub
cmps
fstp
das
mov
repnz
dec
adc
inc
push
adc
xchg
pop
ret
mov
lock
add
jl
add
fimul
xchg
test
dec
mov
in
(bad)
mov
and
mov
sub
jo
cmp
(bad)
jmp
push
(bad)
loop
sbb
ror
call
rcr
rol
mov
xchg
in
adc
sub
inc
test
shl
scas
jp
and
or
fadd
aaa
jecxz
xlat
test
jp
or
cmp
add
push
mov
sub
ss
pusha
(bad)
ficom
jle
leave
inc
pop
cli
mov
fisttp
cli
mov
cdq
push
dec
icebp
xor
fnstenv
fldenv
shr
int
and
ins
cmp
adc
or
int
sahf
xchg
cmp
fsubr
inc
cwde
push
pop
rol
pusha
mov
inc
ret
xor
out
in
cmps
adc
cmp
punpcklbw
sbb
cmp
or
or
mov
fiadd
jae
sbb
addr16
fsubr
(bad)
and
mov
lahf
sbb
pop
inc
outs
dec
or
into
add
call
in
push
mov
lods
mov
mov
(bad)
mov
inc
jb
hlt
mov
inc
sbb
cmp
jmp
jge
mov
imul
mov
lea
pop
bnd
data16
in
int3
jp
arpl
stc
call
mov
xchg
and
fnstsw
scas
(bad)
iret
loopne
xchg
push
mov
daa
xor
mov
mov
xchg
mov
int
adc
xchg
ds
mov
jbe
test
or
mov
jp
mov
push
or
sbb
(bad)
sub
out
daa
loop
mov
pop
jg
rcr
xchg
mov
add
add
jmp
mov
jp
ret
ds
mov
push
fmul
pop
dec
dec
aaa
lahf
mov
ret
pop
or
repnz
out
or
adc
and
push
pop
dec
fisttp
or
pop
jns
sbb
push
mov
fild
fwait
jl
fidivr
imul
pop
clc
js
and
cmp
jo
gs
mov
cmp
add
inc
fldenv
push
xchg
in
jbe
int3
cmp
retf
je
cmp
dec
loope
dec
xor
fsubr
dec
sbb
inc
call
fwait
or
xchg
mov
retf
in
popf
sub
push
sbb
das
hlt
inc
pop
xchg
push
jecxz
cmp
adc
iret
and
inc
mov
mov
xor
mov
mov
xor
jl
pushf
xchg
in
adc
jae
out
sub
or
adc
adc
push
adc
js
xchg
out
mov
cdq
std
fild
rcl
jmp
(bad)
push
push
adc
mov
or
rcl
icebp
push
fsub
dec
loope
lea
out
jmp
pop
adc
xchg
push
clc
dec
lods
aam
daa
ror
addr16
xor
adc
scas
push
mov
adc
mov
jp
sub
stos
or
(bad)
std
add
cli
inc
jmp
fwait
add
mov
xchg
mov
xor
dec
dec
clc
repz
cmc
dec
sar
push
inc
stc
and
lock
mov
scas
push
pop
push
in
push
fwait
pop
push
adc
fidiv
inc
daa
inc
xchg
fnsave
cmps
neg
bound
(bad)
test
adc
add
jle
clts
adc
pop
xor
es
cmp
or
fldcw
dec
sub
dec
adc
inc
imul
cld
fsub
xor
jecxz
imul
inc
adc
sub
mov
jecxz
ss
add
inc
push
xchg
inc
jbe
xchg
push
dec
stos
cmps
add
in
test
arpl
jns
fimul
push
dec
cmps
sti
xor
sbb
jmp
shl
jmp
xchg
jb
and
mov
mov
dec
(bad)
push
adc
sub
cmp
aam
dec
sbb
adc
out
test
imul
aam
imul
add
add
jl
pop
fst
data16
ret
xor
retf
retf
(bad)
out
hlt
loop
add
push
mov
cmc
add
lds
cdq
into
push
mov
pushf
dec
jmp
sub
cmp
jo
and
aaa
out
cmp
and
mov
mov
jae
jmp
sub
mov
shl
add
hlt
pcmpgtd
mov
mov
sub
pop
les
mov
jnp
cmps
out
in
jb
and
fs
stos
cdq
aaa
shl
out
aad
inc
popa
cmp
pushf
dec
adc
xchg
push
xchg
cmp
pushf
mov
and
pop
cli
daa
pop
pop
jno
idiv
push
mov
push
jl
aad
ja
fwait
inc
mov
xchg
jecxz
imul
(bad)
push
xor
jmp
xor
sbb
xchg
add
ror
lea
dec
xchg
push
push
sar
retf
aad
cmp
mov
push
daa
outs
repnz
mov
xchg
push
sbb
mov
ret
fstp
arpl
push
xchg
scas
iret
cmp
add
dec
push
(bad)
cmp
imul
jmp
mov
pop
(bad)
lods
xor
cmps
sub
inc
xor
nop
loope
mov
jns
push
or
in
shr
pop
imul
cwde
les
cdq
mov
or
add
cmp
ret
loop
retf
pop
push
add
pop
cmp
clc
xchg
(bad)
xchg
stos
push
mov
jp
xchg
cld
or
mov
jp
lods
mov
rol
dec
add
xor
adc
daa
imul
ja
pusha
push
xor
in
dec
mov
mov
mov
push
mov
cmp
movs
sbb
ss
sub
shr
je
jecxz
inc
aaa
sub
pop
sbb
cld
in
arpl
cdq
mov
(bad)
adc
shr
and
paddq
rdpmc
addr16
shr
gs
std
shr
xchg
int
cld
out
xchg
adc
jge
je
sbb
xor
mov
es
push
(bad)
jae
bound
(bad)
not
cdq
stos
fisttp
jmp
(bad)
repnz
push
add
jno
clc
jno
in
faddp
movs
dec
add
cmps
mov
in
stc
inc
pop
sub
inc
cmp
shl
jne
mov
ja
ins
(bad)
lahf
cmp
jae
ins
in
inc
push
and
add
lods
sub
inc
pop
movs
lods
adc
call
mov
mov
inc
or
add
sbb
rol
int
add
div
out
and
mov
lock
dec
out
mov
popa
out
(bad)
pop
jns
rcr
mov
jge
aad
jle
popf
add
std
jg
dec
into
cdq
pusha
pop
fsub
jae
pop
cmc
outs
pop
dec
test
into
(bad)
sbb
xor
dec
into
xchg
adc
jl
jle
xor
mov
std
jecxz
(bad)
mov
xor
sub
pop
fcomp
sbb
push
pusha
jno
push
lds
pop
movs
rol
add
cmps
inc
je
mov
pushf
pop
cmp
arpl
jmp
(bad)
(bad)
jo
pop
mov
sbb
jecxz
cmc
ins
pop
shl
mov
in
in
push
addr16
inc
push
xor
push
outs
mov
or
xor
in
sti
aad
lea
jle
jp
mov
cmp
or
add
icebp
cmps
stos
aam
cdq
jg
mov
cmc
ins
sbb
inc
cdq
sbb
mov
mov
adc
test
mov
mov
push
xor
jb
outs
inc
or
cs
or
jg
add
sub
repnz
pop
ret
test
in
jno
cmps
sbb
sbb
leave
cmps
mov
cli
push
out
imul
sbb
cmps
pop
data16
loope
pop
inc
add
mov
and
mov
pop
mov
fldcw
imul
sub
sub
mov
fstp
xor
rcr
ins
add
mov
imul
movs
push
push
fmul
push
lea
and
(bad)
fwait
jmp
push
xchg
sub
dec
lods
stos
inc
in
outs
add
mov
pop
sar
xor
cmp
test
jne
outs
xchg
ss
js
pop
jnp
adc
(bad)
sbb
enter
cdq
sbb
jge
mov
mov
hlt
adc
shl
xchg
jmp
mov
aad
cmp
stc
adc
mov
fist
mov
push
jp
ss
sub
and
xchg
and
or
out
in
cmp
(bad)
bound
shr
js
daa
sub
xor
xor
add
int
xor
adc
cmc
inc
fild
rol
add
aad
ret
aas
pop
lahf
ja
push
inc
mov
add
sbb
mov
xor
mov
mov
pop
sar
sub
xchg
and
dec
pop
arpl
mov
retf
fs
fdiv
jmp
mov
or
or
ds
retf
and
out
cmc
pop
xor
sub
mov
shr
push
lods
pop
imul
(bad)
lock
repz
js
xchg
ins
sbb
adc
jg
cli
push
ins
cmps
pop
push
adc
fimul
ret
push
fwait
push
call
fild
lods
mov
(bad)
(bad)
rol
jns
mov
lods
and
mov
xchg
jae
call
movs
pop
push
stos
lods
fmul
add
mov
fld
sub
mov
neg
les
and
mov
xchg
out
mov
mov
or
sti
sub
rol
sahf
sub
dec
out
dec
jmp
xchg
out
ret
or
mov
push
fdivr
sti
out
push
cmp
jb
je
lods
and
jp
jnp
retf
outs
in
fcmove
daa
ss
scas
pop
and
push
jp
jno
(bad)
std
mov
xchg
loope
sub
adc
push
movs
jnp
inc
loope
imul
pop
sub
data16
imul
mov
aad
inc
and
cmp
cmp
(bad)
ds
mov
jmp
and
fwait
xor
es
push
mov
sbb
or
sar
mov
push
out
outs
or
mov
xor
js
jne
mov
xchg
jno
inc
out
test
push
ja
jmp
push
les
or
and
out
mov
movs
and
inc
mov
push
psllq
adc
jmp
mov
xchg
loope
xchg
xchg
icebp
lods
(bad)
gs
pushf
scas
adc
dec
xchg
adc
sub
inc
sub
dec
loop
(bad)
adc
scas
mov
inc
mov
fwait
pusha
cld
fstp
sub
push
jno
popf
sar
inc
mov
arpl
movs
xor
out
scas
fcmovne
mov
mov
pmaxsw
ds
and
inc
and
aaa
push
or
stos
mov
js
dec
out
cmp
inc
mov
pop
xchg
sahf
or
bndstx
std
in
sub
aaa
push
(bad)
in
add
lock
push
loopne
sub
mov
jg
mov
loop
in
ins
sub
hlt
sub
or
out
movs
xchg
cmp
loopne
adc
jp
adc
jg
rcr
xor
stos
test
adc
adc
add
jle
add
dec
test
clc
stc
xchg
adc
sub
cmp
int3
(bad)
dec
fisubr
imul
xor
(bad)
mov
jb
mov
lds
or
pop
mov
(bad)
int
movs
mov
ficomp
xchg
jns
mov
fdivr
mov
ins
mov
aam
cmp
xchg
push
inc
inc
xor
call
adc
add
cli
add
out
jp
and
ins
and
mov
nop
push
jecxz
xchg
fcom
int3
fld
ins
daa
and
jns
inc
xchg
enter
add
test
mov
out
in
push
call
out
jae
xchg
out
xchg
and
fadd
mov
add
into
bnd
popa
mov
data16
pushf
mov
daa
jl
sahf
mov
in
nop
cmp
fwait
push
or
jno
jl
pop
stc
je
fs
sub
sysret
aad
add
adc
cdq
inc
add
cmp
stos
ror
sub
jne
fnstenv
and
test
xor
mov
and
(bad)
in
jnp
test
adc
test
mov
mov
push
dec
(bad)
loop
aas
sbb
mov
xchg
sub
xchg
mov
jb
shl
movs
or
pop
lods
push
ins
outs
jnp
fnstsw
xchg
adc
cmps
aas
mov
push
push
sub
pop
(bad)
loope
(bad)
out
icebp
jmp
gs
xchg
out
inc
and
sub
jo
cdq
xchg
sub
sbb
cmp
sub
mov
pusha
and
xchg
fisttp
ret
imul
jae
popa
aad
push
fild
out
ja
btr
jmp
ds
in
jmp
pop
jl
jo
xchg
or
xlat
repz
inc
das
leave
(bad)
retf
xchg
mov
xor
repz
mov
je
lea
loopne
jno
inc
shl
sub
jmp
jle
cmp
gs
add
sbb
fcomp
sahf
loope
dec
test
iret
popf
pop
xor
mov
lea
pop
xor
mov
outs
jmp
lahf
cmp
daa
imul
cdq
mov
movs
shl
adc
retf
cmp
pop
jecxz
(bad)
push
ins
pop
push
ds
and
push
add
fidivr
xchg
inc
xor
pusha
push
dec
sbb
xchg
cmp
inc
push
add
popa
mov
xchg
mov
dec
jno
sti
add
loopne
(bad)
daa
arpl
popa
jg
arpl
cmp
cmps
or
nop
push
mov
iret
popa
or
cld
addr16
pop
aaa
pusha
outs
scas
out
dec
in
mov
xchg
test
fbstp
aam
sbb
je
mov
xor
add
sbb
pop
and
push
sub
and
sub
lock
dec
jmp
sbb
push
sub
mov
not
mov
xchg
or
outs
mov
cmp
cli
fwait
gs
sar
rcl
push
sete
int3
inc
push
sub
xchg
dec
dec
dec
adc
mov
mov
out
adc
cmp
outs
dec
je
(bad)
cld
and
sbb
add
mov
test
mov
xor
jmp
dec
or
out
repz
sub
sar
mov
xor
or
and
sbb
jbe
sahf
ds
int
(bad)
(bad)
aas
mov
mov
push
(bad)
pop
gs
in
push
in
movs
push
inc
sub
sub
call
adc
push
push
push
sbb
int3
mov
mov
or
push
ss
out
dec
mov
dec
in
movs
dec
fnstsw
inc
inc
(bad)
mov
aam
lahf
xchg
sbb
ja
repnz
dec
xchg
movs
mov
and
dec
aas
mov
loope
jge
aad
jo
inc
rcr
(bad)
(bad)
aas
jb
out
xchg
inc
inc
rcl
clc
dec
mov
mov
cmp
jmp
int
mov
sub
pop
test
jge
aas
inc
mov
outs
lds
stos
cmps
mov
dec
leave
and
cmps
mov
mov
cmp
push
fsubr
push
push
jecxz
out
xor
adc
sbb
adc
inc
xor
(bad)
cld
cmp
jne
mov
arpl
or
scas
in
pop
mov
and
lods
shr
outs
xchg
fistp
push
pop
or
cdq
jbe
push
mov
addr16
cmp
cs
ds
cmp
out
dec
movs
addr16
and
repz
sub
gs
jmp
ja
dec
jno
test
fld
jp
jle
sbb
jle
sbb
sbb
call
pop
cwde
sub
fist
sar
xchg
out
or
mov
iret
mov
xchg
out
(bad)
mov
cmp
test
mov
push
push
cld
jmp
sub
(bad)
push
in
out
scas
cmc
call
stos
out
sub
sbb
fld
stc
or
jne
fsub
xchg
jnp
mov
mov
std
mov
push
pop
inc
fnsave
xor
push
mov
stc
add
mov
xchg
fcmovnu
outs
les
aas
repnz
sub
sbb
je
add
jge
mov
in
rcl
mov
sbb
in
mov
cmp
or
xor
push
(bad)
call
out
dec
add
mov
add
xchg
push
push
enter
dec
sbb
mov
push
outs
(bad)
(bad)
xchg
outs
fnstcw
fs
loop
pop
cmp
sub
shl
psubq
push
ret
mov
jmp
sbb
fistp
rcr
enter
es
add
pop
ror
aad
xchg
add
push
and
jne
xchg
out
mov
dec
enter
mov
jb
push
fucomip
out
sbb
jno
pop
(bad)
imul
dec
imul
enter
inc
cmp
mov
outs
retf
sbb
setbe
push
xchg
lods
call
lds
mov
pop
jmp
push
or
clc
ret
mov
xchg
inc
int3
mov
dec
test
leave
and
addr16
data16
(bad)
xchg
jnp
inc
mov
les
jle
adc
outs
test
xchg
xchg
mov
ror
clc
jns
push
and
xchg
lods
outs
es
in
retf
std
xor
or
test
sub
ins
lea
xor
ret
out
inc
in
push
sbb
cmps
lock
sbb
cdq
jne
fsubr
aad
test
inc
retf
sub
outs
jno
ds
les
jno
mov
retf
jecxz
das
or
pop
dec
jnp
push
hlt
dec
inc
adc
jle
and
in
test
movs
adc
mov
mov
pop
outs
lock
aad
mov
mov
adc
in
dec
and
jl
cmps
fisubr
loope
and
cmp
jl
pop
call
push
mov
stos
fmul
outs
ret
mov
retf
jmp
scas
aad
xor
push
pop
or
xor
xchg
pop
ja
add
mov
mov
inc
pop
mov
into
cli
clc
test
in
repnz
and
adc
call
mov
mov
and
xchg
or
jbe
pop
or
adc
jns
rcr
movs
gs
movs
or
lods
xchg
sbb
fwait
jecxz
fld
or
test
ds
dec
and
das
mov
aas
xchg
inc
pop
fisttp
pop
data16
mul
cmp
ret
xor
mov
inc
xchg
push
adc
push
bound
adc
imul
and
movs
out
cld
pop
add
loop
push
je
mov
xchg
shl
mov
and
ins
lahf
ror
loop
xchg
sbb
ret
push
icebp
stc
cdq
sbb
sub
jo
in
cwde
mov
loopne
inc
cli
in
push
aas
push
add
mov
xor
in
or
bound
push
ins
es
sbb
cmp
cmp
mov
jno
xchg
xchg
stc
xchg
mov
mov
jp
jne
imul
cmp
cwde
xchg
sbb
mov
push
jge
push
ss
rcr
scas
xlat
std
inc
pop
sbb
dec
mov
leave
adc
(bad)
pop
xchg
shr
stos
dec
addr16
dec
into
mov
aas
jge
mov
mov
sub
retf
lock
or
fwait
sub
add
inc
addr16
jmp
mov
js
mov
sar
xchg
inc
push
push
fisttp
sbb
or
pop
mov
mov
lods
and
jmp
sub
ds
mov
xchg
cdq
movs
in
xor
and
sub
cmp
test
call
cli
push
dec
je
mov
hlt
add
int3
push
mov
adc
cmp
and
stc
mov
cmps
fisub
xor
sub
cmps
repnz
cmp
in
jne
gs
std
fs
div
mov
mov
and
adc
push
mov
imul
jne
push
and
imul
mov
mov
or
fs
lahf
mov
mov
pop
xchg
fidivr
sti
inc
xchg
xchg
je
inc
and
repz
aam
loopne
lahf
jne
lahf
adc
add
mov
test
repz
fidivr
pop
sbb
ins
sbb
fiadd
imul
into
cld
sub
bound
jae
mov
sahf
mov
cdq
inc
push
push
popf
test
add
mov
jmp
push
clc
mov
and
out
xchg
sahf
jg
test
lea
cmp
jb
rcr
repz
cmc
jg
rol
pop
inc
xchg
(bad)
dec
movs
mov
pop
add
pop
fwait
jb
mov
js
fld
pop
test
mov
mov
dec
mov
add
es
gs
pop
sub
and
jg
outs
iret
fld
call
sub
test
and
ins
(bad)
addr16
cld
xchg
call
xchg
rol
popa
not
adc
fcomp
gs
ror
cmps
(bad)
jo
pop
(bad)
cmp
nop
in
lods
(bad)
xchg
inc
adc
loop
shl
sbb
test
adc
or
ss
retf
(bad)
cmp
ins
cmp
add
or
sbb
push
aam
mov
(bad)
shl
xlat
push
fisubr
push
popf
scas
lods
outs
out
call
test
push
leave
icebp
or
int
lods
fsubr
pushf
(bad)
in
pminub
push
rol
push
pop
mov
lahf
fnsave
cmp
mov
push
inc
cmp
imul
int3
push
call
scas
pushf
xchg
push
inc
lea
mov
push
pop
dec
in
inc
xchg
mov
retf
cmp
mov
sar
in
mov
loopne
lahf
test
lods
aam
std
add
cld
ret
scas
(bad)
dec
popf
push
push
fs
sub
call
jno
xor
ins
dec
xor
and
sbb
fstp
inc
cs
loope
out
fimul
xor
adc
mov
jle
inc
fs
loope
sub
adc
xchg
jb
inc
retf
dec
push
popa
xor
jo
add
aas
pop
add
aaa
add
xchg
jnp
cmp
add
cwde
shl
sbb
pushf
mov
mov
fstp
shl
jno
sub
(bad)
mov
add
cdq
jbe
mov
inc
push
xchg
loopne
jl
(bad)
xor
sahf
xor
xchg
mov
or
fistp
fisttp
fldcw
mov
dec
jne
push
jae
scas
sbb
in
dec
std
mov
add
sub
outs
or
mov
test
xchg
mov
ds
enter
xor
jge
ds
leave
cli
stc
cmp
clc
fsqrt
mov
push
cld
into
imul
int3
scas
hlt
lods
mov
mov
xor
and
jl
mov
xor
push
movs
imul
outs
mov
das
ficomp
dec
inc
push
in
mov
xchg
cmp
int
(bad)
add
call
into
adc
sbb
mov
sbb
sbb
pop
mov
sub
inc
mov
mov
adc
mov
xor
fld
dec
cmp
mov
jbe
adc
scas
div
mov
mov
dec
out
cli
cmp
shl
in
sbb
lea
addr16
outs
cmp
sub
pop
jmp
cdq
adc
pusha
(bad)
adc
and
outs
mov
dec
jo
or
jp
mov
scas
sti
out
aas
xchg
cwde
and
out
leave
add
pop
mov
and
cmp
pop
jg
or
mov
icebp
sbb
ror
or
test
pmuludq
sbb
add
mov
sbb
xchg
test
mov
aam
cmps
mov
retf
movs
outs
out
ins
popa
or
dec
popf
lods
mov
data16
mov
std
sbb
and
xor
adc
and
xchg
jns
jmp
loop
movs
mov
hlt
jmp
js
push
mov
adc
add
mov
mov
scas
adc
xor
and
and
ins
xlat
imul
cmp
jb
jbe
mov
std
out
xchg
retf
xor
xchg
inc
jge
jb
test
sbb
loop
dec
(bad)
push
xor
and
jl
daa
arpl
push
fstp
or
stos
sahf
inc
mov
popa
lds
sar
fstp
test
dec
sub
dec
(bad)
out
mov
sti
sub
in
xor
and
push
add
mov
int3
not
cld
ss
xchg
add
dec
jns
pop
jae
movs
lods
jns
adc
push
jo
imul
mov
jecxz
sar
iret
stos
cmps
popf
test
or
jo
sub
es
leave
push
lea
xchg
push
iret
mov
sar
stc
dec
cmps
adc
xlat
arpl
lahf
aas
loopne
jp
adc
adc
push
ret
mov
xor
les
sbb
pop
inc
adc
add
cmc
fidivr
xor
add
pop
adc
and
xor
aad
cdq
add
lods
(bad)
iret
popa
add
and
mov
sahf
cld
out
push
sahf
movs
adc
pop
mov
lahf
push
in
push
mov
or
jne
mov
lods
inc
cmp
inc
and
dec
ret
add
and
cmp
jl
mov
add
(bad)
in
mov
jne
and
in
clc
dec
fbld
repnz
rcl
(bad)
cmp
frstor
mov
js
xchg
out
or
sbb
cli
cmp
cwde
aad
fldcw
mov
and
sub
js
in
cmp
or
lock
(bad)
sbb
mov
out
push
outs
xor
or
jns
clc
add
rol
retf
inc
loop
mov
ss
lods
jle
push
push
mov
mov
or
cmp
mov
lock
mov
es
jle
sbb
sub
xchg
clc
cmp
mov
loop
jne
mov
out
add
mov
js
test
jecxz
cmp
xchg
jle
out
and
xchg
and
test
xchg
cs
imul
inc
or
cdq
fidivr
mov
(bad)
ds
(bad)
pop
sbb
daa
inc
test
aas
pop
test
inc
outs
test
mov
xchg
lahf
pusha
adc
ret
hlt
xor
ins
fcmovnu
out
lds
add
loope
or
sub
jl
mov
add
jo
cmp
mov
lods
mov
jg
jno
cs
mov
ja
daa
test
sub
inc
das
(bad)
xor
dec
push
pushf
ds
sub
pop
popa
cmp
mov
or
ins
jno
lds
mov
dec
in
xor
(bad)
retf
jmp
test
inc
add
jno
in
adc
sub
cmp
mov
xor
push
xchg
nop
lds
int
leave
test
jns
mov
outs
add
fldenv
scas
cmps
xchg
push
leave
xchg
fcom
test
fisttp
rcr
enter
les
fiadd
jmp
cmp
int3
or
xchg
mov
pusha
pop
fdiv
dec
cdq
jnp
push
fdivr
ror
jmp
sub
xlat
sub
mov
loope
xor
or
jmp
adc
xor
repnz
(bad)
(bad)
sbb
xchg
xchg
icebp
sbb
cmc
shl
or
add
pop
cld
sti
push
jl
adc
push
mov
dec
(bad)
cli
(bad)
fistp
jmp
and
pop
sub
and
in
ds
sti
jne
mov
dec
sub
fldcw
clc
aam
xor
mov
stos
add
inc
mov
out
jne
xchg
bnd
nop
cmp
xchg
test
mov
out
repz
and
inc
fdiv
inc
popa
loope
mov
cmp
pop
rol
mov
inc
(bad)
pop
push
mov
push
(bad)
adc
out
sbb
lods
retf
outs
mov
sub
mov
jg
cli
outs
les
xchg
sub
and
test
loop
pop
stc
fisubr
test
dec
neg
iret
fistp
dec
add
ds
cwde
inc
sbb
jmp
pop
push
movs
jnp
push
out
dec
jns
xchg
inc
data16
and
fisub
pop
retf
dec
mov
cmp
mov
imul
shl
aaa
push
addr16
pop
mov
cdq
int
push
test
aaa
(bad)
mov
jmp
cmp
adc
(bad)
mov
shr
xchg
mov
inc
add
out
or
fidiv
(bad)
jmp
ins
xor
ret
inc
lds
cmp
push
and
push
or
aam
cmp
cmp
repz
sub
mov
cmp
pop
push
retf
ins
jne
js
adc
adc
mov
leave
jb
loope
stos
xor
jg
ins
mov
mov
mov
sbb
cld
sahf
(bad)
aaa
pop
xchg
(bad)
mov
nop
test
scas
add
push
ret
call
sub
fild
ins
arpl
and
fnstcw
shr
out
repz
xor
jae
jns
jne
ds
mov
push
push
and
ins
pop
sub
mov
outs
mov
mov
data16
pop
inc
xor
mov
xor
xor
ins
(bad)
cli
push
icebp
repz
add
sbb
adc
push
add
push
and
jnp
jno
sub
or
jne
jl
jp
and
push
(bad)
jge
sahf
sbb
mov
cld
in
icebp
push
in
push
xor
pop
inc
inc
push
pop
cld
and
mov
and
push
add
inc
xor
mov
sub
stc
inc
pop
imul
popf
adc
gs
loop
mov
test
mov
pop
push
call
pop
sbb
imul
and
pop
sub
ss
iret
and
rcl
inc
sbb
jnp
jns
out
das
dec
jecxz
jge
ins
mov
je
inc
outs
popf
jne
push
xchg
sahf
addr16
dec
(bad)
mov
adc
scas
jmp
in
inc
and
pop
test
mov
outs
mov
pop
jmp
or
test
out
shr
cmp
xchg
push
or
(bad)
jge
xchg
sub
jb
push
ins
into
and
(bad)
jne
sub
dec
pop
imul
and
inc
mov
and
sahf
aam
or
xor
(bad)
cmc
test
cwde
mov
cwde
xchg
jmp
mov
push
dec
mul
cmc
sub
jecxz
rcl
arpl
cmps
fucomip
movs
inc
mov
addr16
cmp
cmps
or
test
sub
and
addr16
inc
inc
jno
das
jmp
cmp
adc
sub
nop
test
pop
test
mov
or
mov
pop
das
rcr
xchg
push
in
pop
mov
retf
adc
out
jnp
inc
cmp
(bad)
jbe
jbe
jmp
pop
test
xchg
xor
xlat
call
test
mov
sbb
push
or
sbb
fild
jns
mov
loopne
dec
xchg
sbb
mov
je
sub
jnp
cli
jge
push
(bad)
cmp
test
outs
dec
clc
adc
mov
jns
inc
popf
iret
addr16
cmp
fist
inc
mov
sbb
jmp
sbb
rcr
inc
dec
push
sub
icebp
mov
mov
fcmove
arpl
xor
xor
and
fistp
pop
or
loopne
pop
outs
jp
(bad)
jmp
jp
ja
fwait
out
jp
push
pop
add
int
sbb
aad
pop
gs
jmp
loopne
(bad)
mov
and
pop
into
xlat
dec
or
int3
mov
xchg
cmp
fbld
into
ja
leave
and
les
pop
jl
mov
push
mov
aaa
lds
into
mov
mov
mov
mov
out
add
rcl
aas
popa
and
dec
call
stos
rcr
sahf
fst
jl
shl
test
popa
push
call
mov
mov
ret
mov
shr
dec
pusha
(bad)
pop
leave
out
loop
mov
mov
xor
sub
cs
test
mov
xor
nop
jmp
sub
in
dec
into
cli
or
int3
dec
cli
test
retf
pop
cwde
or
fild
test
test
jae
or
mov
outs
fiadd
xchg
gs
sub
ucomiss
or
xchg
cmc
ds
int
or
sahf
mov
sbb
loopne
mov
cdq
(bad)
out
loopne
daa
neg
out
neg
jg
inc
pop
dec
mov
push
cmps
mov
mov
je
clc
jns
pop
jge
sbb
inc
ins
loope
sbb
jnp
xchg
mov
jbe
sub
adc
mov
fdiv
(bad)
outs
dec
shr
bound
icebp
sub
fstp
stc
mov
sbb
mov
mov
cmp
inc
out
xor
fmul
mov
inc
cmp
int
pop
mov
push
mov
push
xchg
daa
pop
pop
out
dec
fnstcw
lock
or
mov
xchg
es
mov
(bad)
call
sub
shl
inc
sub
push
cli
xor
push
pop
xchg
xchg
cmp
xchg
xor
push
(bad)
(bad)
js
lahf
test
sub
mov
sbb
pop
enter
stos
je
ins
or
jg
mov
xor
cdq
out
jecxz
sub
mov
add
fs
cmc
pop
js
pop
dec
fcmovu
mov
dec
mov
and
std
rcr
(bad)
das
or
sbb
lods
ss
xlat
lods
pop
test
and
xor
mov
sub
mov
ret
push
repnz
dec
xor
inc
mov
push
imul
fsubr
mov
popf
pusha
pop
ss
push
xchg
pushf
repnz
out
ja
xchg
std
and
mov
hlt
pop
(bad)
dec
sub
push
xor
clc
inc
stos
xor
call
jecxz
mov
xchg
and
pop
sbb
lock
inc
fcomp
xchg
inc
call
cwde
icebp
xchg
leave
push
cmp
rcl
ins
inc
or
repz
fnstsw
mov
out
ss
push
(bad)
loope
sbb
pop
sbb
sbb
ror
cmp
pop
cmp
cmp
inc
fsubr
fdiv
mov
sub
jae
nop
cli
sub
(bad)
sbb
fisub
ins
dec
mov
loopne
lods
aas
mov
sub
and
ja
iret
out
in
(bad)
stc
(bad)
dec
sub
inc
sub
cmps
(bad)
(bad)
dec
mov
sub
scas
mov
dec
sub
les
mov
xchg
adc
jbe
add
sbb
cmps
(bad)
sub
aad
(bad)
in
je
add
not
popa
scas
stos
sub
adc
repnz
jp
je
inc
popa
int3
mov
dec
and
hlt
xor
inc
mov
in
fwait
popf
dec
push
loopne
mov
mov
sub
cdq
arpl
and
sbb
cli
mov
sbb
push
sbb
aaa
add
dec
or
sbb
aaa
sub
add
mov
mov
xchg
push
xchg
imul
ss
xchg
pop
adc
rcr
rol
addr16
ret
cmp
xor
mov
les
mov
sub
aas
fdivr
lea
and
mov
xchg
aam
pop
dec
mov
push
bound
cmp
fidiv
push
push
xor
mov
xor
and
daa
loope
adc
xchg
in
scas
pop
outs
neg
jp
and
loop
sub
lock
in
xchg
lock
inc
inc
or
not
or
push
and
mov
add
add
outs
xor
adc
test
lea
fnstcw
cli
mov
and
sbb
imul
fcmovnbe
call
cmc
inc
in
pop
fwait
and
or
lods
add
or
cmps
out
stc
pop
mov
mov
or
inc
out
jae
pop
sub
push
fldcw
mov
imul
sbb
arpl
mul
cmc
push
fsubr
mov
dec
push
movs
sub
jo
adc
adc
shl
inc
xchg
xlat
repnz
pop
push
shl
jg
pop
sub
adc
retf
in
xor
je
xchg
test
icebp
(bad)
dec
xchg
xchg
or
mov
push
int3
test
rep
pop
sub
call
scas
inc
daa
jne
aad
cli
leave
mov
cmp
jp
lea
cmp
push
mov
pop
iret
int3
jle
loope
adc
fcomp
cmps
sub
pop
push
mov
cdq
push
mov
aas
out
outs
push
dec
out
adc
sbb
mov
(bad)
ins
scas
lahf
sub
xor
xchg
and
enter
aad
sar
adc
or
mov
call
adc
dec
add
mov
mov
or
inc
test
mov
fisub
cli
mov
jecxz
jecxz
cmps
mov
neg
lahf
add
push
xchg
fldcw
cmp
fstp
cmps
gs
xor
mov
test
pop
(bad)
adc
aad
xor
(bad)
add
jno
jecxz
xor
dec
inc
imul
xchg
push
lahf
(bad)
aad
adc
or
lds
inc
push
clc
push
in
pop
aad
(bad)
lods
es
add
je
jle
out
dec
cdq
data16
das
dec
pusha
xchg
xchg
or
je
jns
and
pop
cli
sti
sbb
or
je
sbb
or
mov
scas
or
pop
mov
pusha
scas
clc
data16
cld
jb
test
popa
pop
xchg
ror
sbb
add
imul
pop
movs
pushf
mov
xchg
aaa
dec
call
cmp
bound
test
inc
icebp
xchg
stos
test
je
xor
call
adc
in
stc
call
cdq
sbb
mov
or
pop
jo
in
mov
aas
ret
lock
loop
sar
pop
inc
dec
or
xchg
jg
int
or
pop
fs
cli
adc
xor
cwde
mov
mul
ss
sub
popf
push
fidivr
and
lahf
imul
adc
dec
stc
dec
jmp
dec
inc
(bad)
cmp
imul
inc
dec
dec
mov
bound
and
pop
jp
lods
or
(bad)
adc
cmp
sub
jnp
repz
ficomp
lods
dec
cmps
sub
aad
(bad)
pop
inc
ja
or
loopne
js
pop
jno
jnp
test
inc
test
adc
or
adc
cmp
fsubr
sub
icebp
inc
out
jae
lods
(bad)
mov
imul
arpl
pop
ins
or
cmps
cwde
lods
outs
ins
xor
inc
adc
add
addr16
mov
mov
adc
cwde
dec
retf
mov
stos
in
mov
ret
call
mov
bound
or
jnp
mov
cmp
inc
out
(bad)
imul
sti
pop
nop
jecxz
les
push
loopne
iret
stc
ds
mov
gs
rcl
popa
ds
jl
push
xchg
sub
sbb
push
leave
ins
xchg
shl
scas
and
jmp
push
adc
jmp
cmp
push
add
push
scas
loopne
fmul
jo
push
fild
lds
cdq
mov
and
xor
pop
mov
lea
push
add
ret
jmp
es
jl
sub
dec
pop
data16
pop
mov
ret
cs
test
sbb
cld
jle
pop
mov
daa
xor
fimul
push
xchg
test
xor
push
cmp
stc
pop
push
jl
jle
sar
push
ins
call
add
jle
mov
fbstp
loope
xchg
sub
out
enter
test
add
int
fist
fisubr
xchg
jnp
jge
push
ss
inc
mov
stc
jp
sahf
int3
jno
leave
cmp
sar
or
imul
fbld
jno
out
sbb
(bad)
iret
jae
addr16
rcr
jge
and
lods
cs
cs
add
in
mov
stos
inc
cmp
stos
add
arpl
jbe
ja
add
pop
mov
jmp
mov
xchg
xor
or
call
push
and
inc
jp
fs
lods
out
cdq
out
push
stos
int
fs
loopne
mov
mov
(bad)
icebp
jbe
adc
stc
pushf
cmps
pop
push
cmp
sbb
xor
cs
push
mov
and
dec
xor
iret
xor
push
inc
sbb
jge
enter
cli
pop
fwait
(bad)
xor
or
and
sub
frstor
mov
ja
sbb
bound
push
sbb
jo
xor
cli
mov
mov
imul
ins
mov
fsubr
mov
(bad)
adc
cld
cld
add
pop
neg
jbe
or
cmp
mov
or
jl
loopne
cmp
mov
jmp
icebp
aad
xchg
mov
fwait
add
sbb
push
jae
jg
and
mov
in
(bad)
sahf
popa
push
(bad)
and
jp
pop
ror
push
cmc
(bad)
iret
jecxz
sbb
add
gs
sub
(bad)
xchg
xor
(bad)
lods
rcr
xor
sbb
ret
xchg
mov
add
push
fdiv
xor
bound
jmp
movs
xchg
inc
mov
aaa
daa
fadd
ins
sahf
push
add
into
cmp
xor
add
jo
xchg
loop
dec
pop
data16
xor
stc
mov
sbb
pop
mov
xchg
lock
into
or
pop
lods
or
jnp
iret
jl
mov
push
pop
add
mov
mov
add
jb
fwait
dec
test
mov
or
jbe
test
enter
cli
cmp
ja
dec
loope
aas
cmp
push
cmp
popa
xor
test
dec
xchg
sti
fnstcw
mov
rol
dec
(bad)
fisub
shl
or
inc
cmps
mov
loope
xor
ror
pop
shl
gs
adc
or
sbb
(bad)
cli
adc
sub
das
loope
push
loop
lahf
daa
iret
daa
ins
mov
push
adc
add
mov
(bad)
fistp
dec
icebp
cmp
es
fidiv
les
enter
cmp
ins
cmp
outs
and
mov
xor
adc
jp
adc
stc
and
cmp
inc
jbe
sahf
jnp
fistp
dec
sti
retf
lahf
xchg
retf
jmp
outs
lods
fisubr
rcl
push
int3
sub
das
mov
pop
cwde
push
pop
int3
sub
push
add
mov
and
fld
cmp
sub
iret
dec
fidivr
scas
loop
aad
cmp
jg
jmp
pushf
gs
test
aad
outs
lahf
fisubr
enter
jmp
lods
mov
and
vpcmpeqw
xor
dec
sbb
xchg
pushf
ficom
xor
jle
imul
test
xchg
call
je
push
xor
push
loope
pop
add
mov
dec
out
cmp
cmc
adc
xchg
inc
jno
push
movs
cmp
std
pop
jmp
jae
lods
call
xchg
and
inc
sub
adc
ds
jl
imul
int3
or
or
or
push
inc
(bad)
mov
sub
add
idiv
mov
call
cmp
dec
pop
(bad)
retf
mov
and
push
and
dec
popa
cdq
out
push
das
or
dec
xor
sub
jns
das
into
mov
adc
arpl
mov
cmp
jle
pop
mov
loopne
daa
stos
aaa
imul
sbb
jb
lds
inc
shl
dec
push
mov
jmp
push
adc
cmp
(bad)
push
dec
call
jg
mov
nop
ja
sub
inc
fs
lea
sub
cmps
jg
xor
xchg
xor
mov
adc
fsub
add
inc
ins
loope
outs
(bad)
jg
mov
pop
call
mov
mov
mov
out
pop
jne
xor
iret
popf
pusha
xchg
mov
ins
jb
outs
fnstenv
lods
xchg
xlat
cmp
lods
out
pop
mov
addr16
(bad)
mov
lea
pop
xor
mov
ins
cwde
call
jmp
adc
retf
mov
lods
inc
mov
mov
sbb
out
or
(bad)
aam
lahf
and
(bad)
mov
cmp
pop
inc
movs
(bad)
mov
call
xchg
sbb
(bad)
dec
adc
out
mov
js
iret
addr16
fldcw
mov
dec
or
cli
icebp
push
data16
es
push
movs
fild
jb
aaa
cmp
fist
js
dec
and
mov
xchg
mov
xchg
fstp
dec
dec
(bad)
fdiv
xchg
or
push
fs
pop
or
mov
imul
mov
adc
test
jo
ins
pop
add
in
es
mov
push
mov
cmp
xchg
jmp
scas
or
retf
js
icebp
xchg
fisubr
jmp
mov
xchg
adc
call
fsubr
cmp
dec
mov
(bad)
cmp
leave
cmp
fsubr
leave
mov
inc
mov
mov
retf
(bad)
std
cmp
push
mov
add
or
es
jnp
fnstcw
xchg
or
inc
cs
sbb
push
cmp
popf
inc
xor
push
popf
int
adc
pop
pop
mov
jl
lock
arpl
cmps
sbb
sub
xor
cmc
jns
lahf
adc
adc
cmp
dec
sub
in
scas
mov
(bad)
clc
call
jbe
aas
mov
popa
daa
imul
pop
xor
push
mov
sbb
and
and
enter
pop
cwde
sub
cs
mov
mov
shl
pop
ja
or
pop
cmp
repnz
xchg
jo
jno
mov
and
movs
cmps
adc
addr16
dec
push
jmp
aaa
popf
int
push
inc
jle
(bad)
call
popa
aam
sbb
cmc
popf
outs
jb
sub
movs
push
iret
sbb
stos
adc
(bad)
mov
stc
jno
std
push
inc
fst
dec
jmp
mov
pop
stos
push
pusha
jl
inc
add
xor
xor
addr16
cmp
jg
in
sub
add
adc
pop
(bad)
push
or
pop
cld
mov
cmps
std
push
mov
in
enter
fidivr
mov
in
jecxz
push
clc
in
dec
and
cld
jp
test
cwde
in
js
lods
shl
not
in
leave
jo
jae
inc
mov
loop
enter
or
mov
aad
mov
pop
xchg
inc
loopne
sbb
icebp
dec
jle
cmp
mov
xchg
inc
js
mov
(bad)
jne
mov
jo
cwde
or
add
mov
push
sub
in
outs
mov
add
cmps
jl
ret
adc
and
movs
outs
push
pusha
test
repnz
dec
jnp
loop
js
iret
sub
fdiv
in
retf
ss
fiadd
push
stos
mov
test
mov
jge
iret
das
sub
jne
(bad)
adc
jecxz
cmps
cmp
repnz
jle
lahf
mov
xchg
xor
xchg
mov
(bad)
mov
pusha
fs
xchg
dec
and
sub
je
cmp
mov
in
arpl
xchg
mul
and
sub
adc
(bad)
fwait
and
cmp
inc
and
mov
xchg
int
dec
sbb
imul
xchg
cmps
pop
add
pushf
in
sbb
cdq
cmc
mov
fdiv
popf
loope
imul
popf
ja
mov
dec
mov
jp
loope
jae
jmp
mov
sub
inc
or
pop
mov
fs
mov
bound
pop
mov
sub
ret
mov
fbstp
add
cs
leave
jmp
dec
jno
pop
dec
mov
data16
cmps
push
retf
add
or
mov
mov
jge
pop
dec
inc
mov
icebp
push
sub
cmp
xor
cmp
test
fist
gs
cs
sbb
mov
fldenv
push
js
ds
inc
nop
jmp
sub
jle
imul
or
xchg
je
std
sub
or
or
rol
psubb
stos
fst
(bad)
loopne
imul
or
or
or
mov
imul
inc
in
js
lea
mov
and
arpl
dec
scas
pop
lock
enter
cmps
(bad)
xor
adc
sub
scas
idiv
pop
inc
loope
push
dec
or
iret
out
or
cdq
aam
xchg
mov
cmp
ds
push
fadd
in
ds
pop
xchg
popf
pop
push
icebp
fnstenv
jmp
lock
lods
ss
jmp
sbb
mov
push
repnz
ret
test
aad
(bad)
fadd
inc
mov
imul
js
aas
mov
push
les
jbe
push
pop
push
push
mov
pop
jmp
push
retf
or
ins
imul
into
stc
cmp
fnsave
mov
loop
cmp
add
outs
fiadd
dec
mov
fwait
test
stos
add
add
les
jp
lods
cmc
jecxz
enter
js
mov
sbb
mov
fidivr
cmp
shl
mov
call
dec
mov
push
push
sbb
arpl
sbb
inc
out
push
repz
lock
lock
add
cmp
mov
mov
cmp
push
mov
jne
sub
jmp
jle
mov
pop
pushf
dec
std
jo
add
xchg
loope
(bad)
or
xor
xchg
(bad)
mov
push
shl
and
hlt
xor
cmp
pop
xchg
or
dec
pop
in
jns
xor
sti
add
out
mov
mov
es
fild
mov
cmp
jecxz
xchg
sbb
test
sbb
push
jno
xchg
lahf
jge
jbe
sbb
test
or
inc
push
push
cld
in
ds
mov
mov
pop
test
and
sbb
test
mov
xchg
sub
idiv
ss
inc
xchg
pop
sahf
mov
jns
nop
jg
inc
xor
mov
xor
(bad)
fnstenv
pop
(bad)
mov
xchg
and
add
nop/reserved
out
ja
push
inc
or
mov
in
out
jns
jecxz
or
jmp
mov
mov
das
cmp
cmp
bound
test
daa
push
mov
jmp
jnp
or
stc
call
xchg
mov
sbb
jne
es
ret
nop
clc
adc
xlat
sbb
not
fldcw
fwait
aas
sub
pop
in
pop
std
ret
xor
sbb
xor
pusha
out
xchg
test
lock
mov
mov
das
test
pop
push
sar
adc
dec
rcr
mov
sbb
push
push
inc
cmovne
jp
jmp
lods
xor
pusha
cwde
loope
out
ret
xor
(bad)
jo
push
ins
nop
add
push
xor
loopne
inc
jne
push
je
fs
scas
mov
call
out
push
pop
mov
mov
neg
adc
ds
inc
mov
mov
pop
push
cmps
xor
mov
test
pop
inc
push
data16
push
mov
push
adc
cmps
and
call
scas
aaa
arpl
push
idiv
xor
pusha
inc
cmp
pop
test
sub
pushf
pushf
call
lahf
jge
ret
dec
mov
pop
add
ss
test
sar
xchg
nop
mov
sti
mov
ret
aam
test
mov
ror
movs
push
mov
inc
fxch
rol
pop
push
mov
je
mov
ds
xor
push
push
outs
jle
mov
(bad)
in
add
aaa
push
sub
cmp
sahf
add
ss
ss
push
xor
mov
das
mov
mov
push
out
cmps
aaa
adc
jmp
pop
fild
pop
jmp
(bad)
mov
das
and
and
push
xchg
push
mov
inc
push
xor
xor
out
xchg
mov
inc
dec
sti
addr16
jb
cmp
or
xor
push
sahf
popf
cmps
ret
imul
add
jae
sub
cwde
clc
ds
cmp
sub
(bad)
das
or
popa
jmp
out
shl
jmp
adc
cmp
sub
div
adc
xor
and
lds
jno
test
(bad)
adc
mov
arpl
cmp
push
jle
adc
and
xchg
aad
je
xor
pop
rcl
or
shl
mov
cmp
loop
test
sbb
icebp
sub
pop
inc
movs
lds
mov
pop
mov
mov
dec
xchg
rcr
inc
and
dec
push
(bad)
(bad)
pop
fnstsw
dec
popf
add
imul
xchg
jp
scas
mov
fld
ins
jge
sub
cdq
pushf
dec
test
mov
(bad)
jl
into
in
aam
das
mov
mov
inc
lods
shl
lods
lods
push
cmps
not
inc
daa
and
mov
out
cs
cmp
stc
mov
push
sbb
dec
movs
scas
sub
sbb
neg
and
add
mov
xchg
js
add
lods
adc
dec
mov
ror
outs
pop
push
mov
adc
fldenv
shr
xchg
jecxz
es
adc
mov
mov
mov
out
push
sub
mov
dec
xor
adc
sbb
(bad)
push
dec
or
hlt
cld
enter
mov
pop
push
and
call
aad
clc
jl
call
pop
jns
pushf
sub
dec
cmp
dec
and
ret
ss
and
adc
jno
inc
ret
adc
mov
push
stc
inc
mov
stos
popf
dec
cwde
ds
mov
push
pop
xor
(bad)
vpaddd
jno
int3
bound
mov
ins
mov
cli
shr
cwde
push
lods
mov
stos
mov
xor
xchg
mov
inc
int3
mov
test
cwde
cmps
(bad)
loop
shufps
(bad)
rol
adc
mov
adc
cmp
repz
arpl
push
add
je
jecxz
jo
sbb
jnp
jb
adc
and
mov
add
mov
or
jecxz
fimul
or
mov
cld
pop
jge
daa
ds
sar
sbb
add
mov
fldenv
sbb
sar
jne
jg
pop
cmp
xchg
mov
push
push
jb
ret
shl
mov
mov
(bad)
jmp
into
pop
mov
mov
mov
cmp
fs
arpl
inc
push
mov
xchg
ins
jg
jne
push
jmp
fsubr
cmp
movs
xchg
sbb
sub
dec
xor
imul
xchg
aad
jecxz
xor
test
imul
jbe
and
push
pop
int
std
cwde
add
xor
sbb
jg
xchg
out
pop
pushf
inc
cmc
or
imul
jae
movs
ror
sbb
sahf
push
dec
(bad)
stos
and
and
xchg
push
in
das
out
(bad)
cli
inc
lock
jmp
xchg
out
sub
and
cwde
call
retf
mov
jb
xor
dec
retf
sub
dec
or
push
inc
push
outs
ins
cmps
popf
add
sbb
outs
and
sbb
cmc
pop
aaa
fnstsw
sbb
mov
dec
sbb
inc
inc
add
cmp
imul
and
sub
pop
or
or
push
adc
jne
cmp
ss
xor
test
add
daa
bound
sbb
in
and
jo
pop
das
pop
mov
daa
lea
fs
mov
xchg
or
cmp
movs
sub
and
xor
mov
(bad)
icebp
out
and
jl
pop
push
jo
push
sub
jbe
repz
push
mov
dec
cs
cmps
seta
cmps
jp
jne
stos
int3
push
pop
lea
or
jo
mov
pop
neg
add
inc
and
icebp
and
pop
push
bound
aad
mov
jp
outs
sub
jo
popa
or
shl
xor
xor
cld
cmp
ss
adc
add
sub
retf
mov
pop
cwde
popa
fwait
aaa
cmp
and
pop
mov
or
cmps
mov
mov
rol
outs
pop
xor
cs
in
cld
and
or
sbb
sub
pop
arpl
push
fnstenv
dec
idiv
jle
xchg
aam
push
in
loop
nop
jae
pusha
push
xor
rcl
xchg
ja
xchg
out
dec
mov
loope
popf
add
push
mov
pushf
loopne
push
pop
adc
cmp
jmp
sub
jp
cmps
xor
add
xchg
push
test
sbb
loop
hlt
mov
pop
pop
xor
jno
pop
add
stc
push
dec
push
mov
and
addr16
stos
cmps
cwde
inc
mov
in
cmp
call
xor
mov
push
push
ret
cmp
retf
imul
mov
xchg
mov
int3
mov
out
cmp
movs
lea
mov
out
rcl
push
nop
push
cmp
push
in
shl
sub
popf
int3
jne
addr16
outs
lock
inc
enter
lea
out
or
cmp
es
push
stos
jnp
sub
mov
sbb
loop
jae
fld
inc
sub
xchg
adc
xchg
test
imul
call
retf
test
mov
sub
pop
mov
repnz
fninit
aas
add
xor
cmps
aaa
popf
outs
bt
xor
(bad)
dec
cs
inc
sub
fidivr
mov
push
push
and
xchg
mul
cld
inc
jecxz
jmp
xor
jecxz
jo
int3
cs
dec
push
sub
rcl
sub
pop
stos
lods
retf
push
out
fs
push
xchg
mov
mov
push
aad
mov
inc
into
int3
mov
jmp
dec
jmp
jno
arpl
pop
fwait
mov
mov
push
out
cdq
mov
sub
jno
aam
(bad)
sbb
push
dec
loopne
movs
(bad)
bound
mov
or
jae
clc
push
ins
fdivr
jmp
mov
xchg
jbe
push
sbb
outs
jecxz
adc
ror
fcomip
mov
js
sub
test
std
xchg
xchg
mov
or
jno
(bad)
sahf
inc
imul
cmp
push
lea
div
loopne
cs
mov
and
aas
ret
mov
repnz
aad
nop
shr
lahf
sub
fistp
sub
mov
push
jmp
aas
adc
dec
lods
mul
fist
mov
pop
pop
fst
sar
stc
pop
mov
cwde
inc
cmc
or
mov
(bad)
xor
arpl
xchg
jge
xlat
or
shl
sub
mov
call
(bad)
inc
cmps
sub
stos
in
out
dec
xchg
dec
fs
adc
out
js
push
sub
(bad)
(bad)
lods
ins
push
(bad)
lock
repnz
pop
shl
adc
xor
pop
aaa
or
xor
pop
push
or
fsub
mov
nop
cmc
push
(bad)
lock
push
popf
in
xchg
cmp
mov
mov
inc
out
bound
and
mov
jp
push
jo
std
in
jl
ror
shrd
xchg
xchg
dec
dec
test
mov
ins
frstor
stc
pop
icebp
mov
and
and
not
mov
fwait
rcl
pop
test
hlt
sub
xor
cmps
mov
fs
stos
out
mov
mov
xchg
scas
dec
add
je
daa
fwait
and
out
xlat
lods
dec
call
aas
in
pop
lock
arpl
pop
cwde
comiss
pusha
sbb
mov
scas
push
fst
das
lds
stc
adc
inc
push
in
rol
mov
and
daa
hlt
dec
push
(bad)
jl
jno
(bad)
jmp
das
aas
mov
outs
jb
js
pop
push
add
lock
inc
adc
shr
ins
pop
mov
daa
fcom
mov
outs
push
cmps
sub
add
retf
cmps
xchg
push
lods
loopne
call
pop
aad
adc
fwait
retf
pop
jl
jo
repnz
jne
out
bound
movs
stc
mov
xchg
add
lods
sub
mov
xchg
pop
mov
jle
daa
inc
mov
stos
shr
(bad)
rol
clc
pop
adc
push
movs
cmp
or
aaa
ja
nop
daa
mov
imul
pop
and
aam
aas
hlt
lock
shl
mov
mov
and
pushf
mov
(bad)
fsubr
mov
push
shl
in
pop
mov
in
mov
push
xchg
inc
fld
movs
mov
das
cli
out
push
dec
sbb
int3
jo
sub
enter
adc
mov
jnp
jl
dec
and
xor
ins
mov
addr16
jbe
cmp
cmp
push
jne
or
push
jmp
aad
outs
(bad)
pop
or
inc
push
dec
loop
cmp
mov
cmp
pop
cli
push
sti
jl
out
dec
mov
leave
(bad)
and
popa
std
and
cwde
cmp
and
loope
inc
xchg
cmp
sar
xchg
das
movs
cmps
xor
in
lea
leave
cld
out
push
or
in
fisttp
cs
lods
pop
sbb
dec
or
or
cmc
mov
pop
add
jae
adc
mov
mov
(bad)
pop
std
jae
lahf
sub
faddp
je
mov
pop
lahf
stos
jge
push
cmc
cmps
xor
pop
bound
or
mov
ins
mov
hlt
adc
dec
sbb
or
ja
aad
call
xor
stc
pop
xchg
jne
fisttp
add
in
xchg
aaa
dec
xchg
sbb
je
sub
test
pop
pop
mov
adc
xor
mov
or
cmp
pop
adc
or
or
popf
pop
and
mov
jb
mov
ins
add
xor
jbe
ins
adc
iret
shl
(bad)
pop
or
nop
add
movs
pop
lahf
movs
pop
dec
dec
mov
shl
jo
mov
mov
retf
mov
jo
call
or
movs
dec
push
cmp
and
pushf
jge
mov
fsub
enter
cmp
mov
dec
push
jnp
sahf
mov
push
sbb
mov
int3
pop
push
nop
(bad)
xlat
stos
sbb
fdivr
jmp
das
sub
jmp
vmovlpd
shl
adc
ficomp
inc
movs
pop
icebp
ja
xor
jno
push
xor
mov
jne
loop
jp
pusha
pop
lods
inc
sbb
sti
cmp
pop
movs
inc
pop
pop
(bad)
dec
cmp
adc
jo
bound
out
inc
and
push
or
pcmpeqb
push
pop
mov
sar
hlt
jns
sbb
sbb
mov
repnz
loop
and
sub
lahf
test
cmp
xor
jno
xchg
adc
jbe
xchg
push
push
ror
xor
or
push
hlt
mov
out
sub
movs
xlat
push
mov
daa
adc
add
js
nop
call
mov
rcl
cmp
(bad)
cmp
loope
imul
inc
es
stc
jmp
repnz
adc
imul
xchg
ficom
ret
(bad)
push
hlt
push
push
shr
int
dec
jg
lock
out
movs
mov
je
adc
push
arpl
ret
mov
fisttp
fld
repz
int
into
adc
adc
je
in
sbb
retf
mov
icebp
or
mov
(bad)
push
pop
mov
cmps
fnstcw
mov
jmp
or
sub
sar
sbb
sub
sub
sbb
pop
mov
pop
ret
jne
mov
sbb
outs
mov
jle
loope
hlt
mov
(bad)
in
push
inc
mov
hlt
adc
aas
mov
mov
sbb
pusha
imul
push
lods
jle
das
mov
sti
add
imul
test
mov
push
imul
leave
push
nop
aaa
adc
push
inc
dec
fs
jmp
leave
xor
call
xor
and
repz
fld
daa
or
(bad)
cld
jbe
xor
jle
jg
je
(bad)
mov
mov
sahf
fmul
in
sbb
das
in
in
or
into
(bad)
loop
sbb
sub
dec
cmpxchg
stos
fist
retf
xor
cwde
push
shr
sbb
sbb
sub
ds
movzx
dec
pop
push
jmp
push
add
jo
imul
and
sti
sub
mov
mov
pop
mov
and
mov
and
push
cld
jp
cld
mov
pop
sahf
lock
pop
lahf
sbb
cmp
adc
shr
sbb
sbb
mov
and
xor
js
mov
mov
xchg
mov
add
push
loope
iret
aad
cli
mov
push
enter
neg
inc
in
ins
sbb
push
stc
cmp
imul
ja
jne
mov
add
fistp
popa
ret
sti
dec
add
in
sbb
icebp
sbb
pop
lods
sbb
in
cmp
dec
stc
or
mov
jne
xchg
inc
push
test
loope
dec
mov
loopne
aas
and
xchg
push
mov
out
ins
scas
cld
mov
and
jg
push
cmp
xchg
sub
jnp
mov
es
jne
ds
adc
mov
xor
xchg
mov
add
mov
test
xchg
dec
jns
jbe
pop
inc
adc
and
outs
mov
call
addr16
ins
or
test
stc
call
inc
cdq
inc
scas
jne
push
ja
ds
dec
mov
mov
pop
nop
adc
jb
mul
ds
inc
daa
or
sbb
fisubr
mov
pop
cmps
mov
push
push
push
shl
shr
(bad)
mov
pandn
dec
or
fld
and
mov
in
xchg
and
add
test
dec
ds
xor
push
and
adc
pop
cmp
div
arpl
lds
and
mov
scas
add
int
sbb
mov
sbb
mov
jnp
in
adc
or
lods
jo
push
movs
dec
(bad)
stos
push
dec
movs
jae
repnz
in
outs
loopne
fs
dec
jmp
std
cs
aad
mov
adc
adc
xchg
xchg
and
clc
jle
fdivrp
js
mov
add
movs
mov
xchg
adc
mov
add
and
retf
(bad)
mov
cld
dec
mov
ss
sub
jecxz
sar
add
push
jecxz
jl
mov
es
mov
xor
imul
stos
mov
(bad)
out
xchg
inc
pusha
push
add
jbe
cmc
sbb
cs
in
dec
repz
xchg
mov
test
lds
adc
or
dec
iret
inc
loopne
ins
mov
retf
mov
cmp
or
adc
pop
dec
imul
jle
xchg
pop
add
test
rcl
cwde
pop
sbb
add
test
(bad)
loop
jmp
sub
cmps
stc
gs
or
and
add
mov
lods
cs
(bad)
add
inc
pop
xor
mov
jb
xchg
or
js
cmovle
je
icebp
jbe
jae
lahf
cmp
and
inc
sub
add
aam
ja
pushf
or
add
push
test
xchg
imul
lds
sub
(bad)
push
fxtract
inc
dec
and
mov
pop
cmp
mov
and
mov
js
test
mov
sbb
adc
aaa
(bad)
mov
xchg
cli
push
jecxz
fsub
mov
xchg
sbb
jge
adc
and
les
(bad)
test
inc
sub
lahf
adc
imul
push
mov
imul
int3
idiv
mov
adc
xchg
sar
repnz
adc
cli
inc
inc
fild
(bad)
mov
push
mov
sub
adc
fdiv
ret
daa
add
pop
mov
imul
xchg
lock
push
cmp
loope
push
jmp
repnz
enter
(bad)
xchg
es
aaa
std
sbb
aad
sub
inc
add
cli
xchg
mov
fsubr
sbb
pop
xor
xor
mov
mov
dec
or
sbb
(bad)
mov
(bad)
xchg
int3
sbb
pop
into
repz
or
lahf
fadd
sahf
pop
sbb
outs
cs
adc
push
mov
mov
or
ds
pop
xchg
jne
gs
xor
pushf
push
sub
pop
cmp
stos
fistp
mov
cmp
mov
cmp
seta
jg
ror
xor
dec
addr16
hlt
sbb
ret
jmp
js
mov
jmp
mov
into
dec
enter
cmp
inc
or
std
and
sub
cwde
fnstcw
movs
call
inc
jecxz
popf
jl
lods
xchg
and
inc
jnp
push
sbb
xor
xlat
xchg
vhsubpd
sub
(bad)
shl
pop
int3
ins
pop
retf
call
push
sbb
pop
das
rcr
xor
dec
cmp
adc
test
mov
cmp
jns
es
sti
mov
outs
dec
mov
loope
adc
xchg
mov
jmp
out
retf
and
aam
inc
outs
jge
cmps
mov
inc
and
fstp
pop
aas
cmps
jnp
imul
sub
pop
inc
push
or
enter
in
mov
adc
pushf
dec
jmp
dec
ror
out
ror
mov
popa
xlat
ss
pop
jmp
les
push
dec
dec
in
xchg
ret
and
add
xor
outs
adc
mov
mov
inc
sub
adc
mov
pushf
cmc
xchg
ins
imul
adc
mov
(bad)
lock
je
sub
fmul
rcl
and
mov
sbb
jne
mov
bnd
les
addr16
mov
mov
fsubr
jbe
inc
xchg
xor
dec
test
push
mov
sub
ss
jb
add
rcl
cdq
mov
dec
adc
leave
xor
fdivr
fistp
mov
sbb
mov
pop
bound
arpl
or
or
dec
inc
sbb
(bad)
psubusw
fsub
ret
push
push
mov
mov
jg
scas
gs
icebp
in
outs
xchg
imul
inc
push
hlt
ins
xchg
(bad)
into
push
or
mov
add
mov
mov
stos
jmp
int3
cmps
cmp
fwait
jle
dec
pop
jo
mov
(bad)
mov
jbe
xor
clc
nop
fdivr
sbb
fadd
stc
push
mov
aas
and
jb
fsubr
shl
in
xor
xlat
inc
mov
cli
in
(bad)
push
push
add
mov
into
cmps
inc
out
pop
bound
add
adc
fisub
jmp
jmp
scas
mov
jp
mov
shl
mov
js
test
sub
leave
pusha
retf
pop
mov
test
ficomp
imul
push
(bad)
jmp
or
xchg
ret
push
test
push
dec
jg
adc
in
fs
pop
pop
mov
fstp
lock
mov
jecxz
and
mov
out
add
es
jbe
adc
mov
icebp
jo
mov
imul
mov
xor
daa
sub
cmp
cmp
xchg
xchg
out
xlat
outs
mov
add
push
lods
aas
xchg
xor
inc
jecxz
mov
shr
sti
es
adc
dec
outs
outs
mov
enter
in
int3
in
mov
add
ins
mov
mov
out
neg
sub
and
sub
outs
pop
arpl
mov
or
cmp
test
les
or
aam
fbld
or
xor
popf
sar
mov
arpl
je
inc
adc
cmp
jmp
inc
jbe
pop
xchg
leave
in
push
sub
add
retf
lahf
adc
(bad)
mov
fs
imul
inc
(bad)
push
daa
inc
clc
mov
mov
adc
scas
icebp
add
pop
test
add
mov
es
and
mov
cmc
fisttp
xor
jecxz
sbb
cdq
into
popf
mov
je
je
mov
fwait
or
mov
dec
test
inc
push
sbb
pushf
jg
and
out
and
imul
mov
aad
inc
lea
push
sub
aas
retf
or
add
enter
add
outs
cmps
add
jne
push
scas
shl
pop
sbb
data16
aad
ins
cmp
push
das
(bad)
scas
inc
pop
push
icebp
aad
fild
pop
and
cmp
adc
cmp
call
adc
retf
lods
sbb
cmc
std
fcmove
bound
dec
mov
cwde
into
retf
test
test
push
aas
mov
in
and
cwde
sub
and
dec
xor
nop
out
sti
out
push
inc
out
mov
inc
xor
(bad)
aad
push
test
cmp
dec
push
xlat
test
xlat
push
and
jb
clc
test
call
push
not
jns
les
shr
test
and
icebp
push
pushf
call
in
pushf
test
sub
(bad)
pop
inc
(bad)
adc
jnp
cmp
inc
iret
icebp
inc
cmp
sbb
popa
nop
cld
pop
retf
and
add
sub
cmp
stos
jmp
pop
loopne
je
mov
mov
sub
and
sbb
pop
sar
dec
cmp
test
outs
call
cwde
jne
and
mov
in
scas
sbb
mov
shl
mov
(bad)
lock
jae
mov
mov
inc
aas
je
or
aas
neg
cmp
mov
leave
sbb
sub
lahf
out
pop
popa
xor
sbb
dec
mov
push
push
push
out
xchg
ret
add
and
or
imul
hlt
pusha
(bad)
mov
js
js
retf
imul
shl
adc
mov
dec
pop
mov
aaa
arpl
stc
inc
pop
stos
fwait
cmp
mov
scas
std
jnp
xchg
adc
movs
mov
or
inc
leave
inc
dec
sahf
lods
jl
pushf
std
pop
call
mov
ja
popf
test
stos
cmps
jno
clc
push
adc
xor
dec
jl
and
lods
mov
mov
cwde
cmp
mov
push
enter
add
pop
or
jp
fmul
mov
shr
cmp
pop
xchg
movs
cmp
cmps
pop
icebp
jb
dec
shl
popa
sub
fs
orps
cdq
push
adc
xchg
adc
dec
lock
cld
pop
mov
jecxz
ret
retf
push
fldcw
inc
les
ja
daa
out
or
sbb
mul
jmp
lea
imul
cli
fcomp
inc
inc
jmp
icebp
adc
cmps
shl
cdq
or
and
xor
enter
idiv
or
dec
mov
xchg
in
retf
sahf
jge
mov
mov
push
jns
mov
adc
push
rcl
fwait
inc
movs
push
jle
lods
push
xchg
out
push
stos
sbb
je
gs
dec
inc
mov
dec
test
repnz
ret
mov
mov
or
mov
push
(bad)
cmp
rcl
xchg
dec
jmp
cmp
int3
cld
sti
jbe
ds
cdq
fdivr
cmp
test
or
stc
cmp
mov
push
sub
ins
mov
(bad)
and
pushf
add
idiv
popf
push
sbb
jnp
jmp
pop
(bad)
mov
clc
aas
call
push
jae
ret
inc
out
push
mov
xor
test
mov
int
mov
sti
cmp
sub
and
in
mov
out
inc
cmp
pop
stos
shl
lahf
or
popf
out
mov
sbb
xchg
pop
fidivr
jmp
jmp
jb
rcl
pusha
ss
xor
ja
addr16
sar
jle
pop
add
movs
push
pushf
and
add
retf
cmp
mov
(bad)
imul
adc
mov
into
jecxz
aas
mov
(bad)
hlt
enter
jne
or
or
push
test
in
cli
(bad)
fstp
scas
test
imul
pop
pop
ja
jp
jge
aad
jecxz
mov
dec
xchg
sub
pusha
bound
push
fmul
div
cld
add
push
fmul
ins
cmp
push
push
mov
iret
loope
(bad)
test
fistp
shl
mov
cmp
sbb
and
or
sub
and
(bad)
out
push
cmp
call
xor
mov
dec
push
stc
add
mov
inc
cmp
leave
push
jmp
push
je
mov
jecxz
push
jbe
push
sub
inc
sub
call
xchg
mov
xor
rol
mov
mov
lahf
jp
jbe
xchg
loop
outs
dec
and
lds
in
rcr
xor
sub
js
(bad)
jbe
push
pop
pop
ja
in
cmp
sbb
sbb
and
ret
inc
inc
hlt
jne
or
repnz
loop
shr
adc
movs
cli
and
sub
(bad)
das
sbb
cli
pop
retf
jmp
repz
push
and
shl
pop
mov
pop
out
ds
jae
icebp
and
and
jb
xor
and
pop
jno
dec
clc
test
xchg
mov
push
mov
ret
in
jl
je
push
adc
daa
add
fbld
aad
jae
inc
cdq
repz
jne
mov
and
div
lods
sbb
cs
jne
dec
imul
ss
mov
movs
mov
inc
inc
mov
hlt
or
icebp
mov
inc
loop
shl
cmp
loopne
mov
test
xchg
pop
aad
ins
add
clc
in
sbb
scas
fisubr
mov
add
dec
retf
inc
in
xor
clc
mov
sahf
inc
push
xor
fcom
ins
stos
fist
pop
pushf
cmp
xor
or
shl
(bad)
ja
int3
and
push
sahf
test
aad
ins
add
or
les
xchg
pop
lods
pslld
ja
adc
imul
and
inc
xor
fs
scas
sub
sbb
inc
pop
sub
nop
jl
mov
arpl
ja
mul
sub
(bad)
xor
mov
jb
pop
cld
adc
mov
pop
sbb
sub
(bad)
imul
and
iret
cmps
adc
fidivr
add
ins
(bad)
and
imul
cmp
gs
sahf
cmp
jno
imul
arpl
jecxz
jge
popa
sub
jb
out
and
xor
push
es
or
fmul
mov
jecxz
add
(bad)
leave
mov
push
outs
xor
sbb
jle
mov
jle
(bad)
mov
in
mov
shr
fdiv
(bad)
int3
es
hlt
out
(bad)
daa
loope
std
or
ins
sbb
(bad)
inc
xor
lahf
shl
jecxz
punpcklwd
fcmovnb
sbb
mov
ja
pushf
call
or
mov
mov
iret
(bad)
push
jge
test
cmps
dec
outs
lahf
xchg
adc
in
pop
add
test
cwde
mov
adc
sbb
in
shl
clc
das
add
ficomp
push
and
mov
lahf
popf
cmp
sub
retf
inc
or
ins
cmps
aas
shl
sub
jl
shl
je
imul
jne
mov
inc
add
je
in
out
in
mov
not
xor
jle
push
es
loopne
jl
jl
loop
pop
out
cmp
jnp
xor
cwde
mov
sub
daa
(bad)
mov
push
fsubr
lds
bnd
sub
call
adc
mov
out
jae
xchg
dec
sbb
in
test
cld
fwait
mov
or
push
call
data16
aad
mov
cmps
imul
push
iret
cmps
sub
cmp
stc
or
sar
int
sub
repz
(bad)
jp
fidivr
in
sbb
mov
xor
movs
in
sar
lds
inc
test
mov
(bad)
jb
retf
or
ret
enter
cmp
cmps
inc
test
xchg
ss
shr
or
imul
aad
fs
js
outs
mov
push
and
mov
(bad)
out
xor
fbstp
stos
mov
fs
and
neg
retf
adc
sahf
pop
scas
retf
jecxz
loopne
movs
add
popa
(bad)
hlt
adc
das
(bad)
fwait
mov
ret
dec
scas
idiv
pushf
pop
sub
add
add
mov
repz
pop
mov
div
cmc
pop
es
xor
mov
push
mov
in
adc
adc
sub
(bad)
jbe
(bad)
scas
mov
jb
or
dec
add
inc
mov
adc
mov
dec
stc
mov
stos
and
xor
pop
ins
or
mov
jmp
or
jg
and
dec
pop
pushf
mov
adc
jp
sbb
inc
mov
xor
lods
shl
mov
jns
lods
lock
test
movs
lods
push
adc
aas
enter
iret
leave
mov
cmovs
xor
pop
and
cld
push
and
and
mov
fadd
and
push
mov
mov
bound
adc
jmp
adc
stos
fbstp
cmp
push
lods
repz
aam
pop
xor
stc
or
fsub
jmp
std
sbb
sbb
neg
mov
fwait
inc
sub
addr16
dec
mov
jmp
std
cmp
out
adc
mov
and
out
push
nop
adc
sbb
(bad)
outs
rcr
fucom
les
inc
dec
push
jno
pop
pop
sub
cmp
stc
(bad)
jnp
inc
nop
jnp
popa
outs
xor
enter
cmps
xchg
inc
mov
xchg
mov
sbb
pop
aam
addr16
cdq
or
pop
out
and
(bad)
xchg
and
movs
inc
mov
les
arpl
sbb
(bad)
jno
mov
jo
in
pop
outs
and
inc
cwde
push
add
mov
mov
popf
adc
pop
push
add
inc
dec
dec
add
rol
jp
fcom
push
fdivrp
pop
aam
mov
cmc
gs
neg
jmp
test
out
pushf
inc
es
stc
leave
mov
out
or
adc
imul
mov
inc
clc
or
nop
inc
out
dec
inc
xchg
test
jbe
aas
fs
in
std
mov
stos
sub
mov
jmp
jecxz
js
(bad)
in
aam
inc
js
mov
outs
push
test
pop
test
loop
dec
movs
call
mov
pop
xor
jb
inc
push
adc
or
push
jns
adc
aaa
push
sbb
outs
aaa
cmp
mov
pop
xor
cmp
imul
xor
inc
les
dec
(bad)
cmc
sbb
and
pop
xor
into
mov
jo
add
sub
pop
mov
sub
pop
adc
sar
call
mov
sbb
enter
and
out
mov
mov
adc
cmp
cmc
xchg
and
retf
mov
jmp
push
in
jecxz
sbb
add
jno
push
mov
scas
xlat
hlt
jmp
int3
inc
or
test
sub
lods
adc
xchg
shr
mov
pushf
add
mov
dec
retf
fcom
or
and
xchg
pop
pop
call
xchg
loope
lock
push
adc
jne
jle
fld
ins
adc
data16
ficomp
movs
mov
adc
mov
or
test
mov
xchg
test
xchg
jg
add
pop
sub
pop
fiadd
retf
adc
rcl
sar
arpl
ret
ror
imul
das
sub
out
inc
cdq
lahf
popa
pop
(bad)
(bad)
movs
add
jns
inc
pop
aam
pop
jmp
(bad)
leave
cmp
sub
cmp
frstor
jmp
jmp
and
stos
daa
das
hlt
or
and
mov
lock
clc
and
add
inc
cwde
repz
fnstsw
ss
sahf
sub
push
in
stos
and
fidiv
movs
xchg
aam
push
in
mov
pop
dec
hlt
and
enter
dec
sbb
mov
into
jbe
add
aad
or
call
xchg
jp
retf
ds
adc
push
mov
leave
add
imul
sti
dec
nop
or
rcl
pop
sti
push
lahf
jno
add
add
pop
loop
fwait
dec
add
sbb
int
pusha
retf
adc
and
pop
push
sub
dec
sti
repnz
fsubrp
xchg
sub
sbb
data16
pop
mov
test
out
or
je
imul
sub
xchg
into
sub
jb
dec
and
test
dec
mov
dec
loop
push
ins
inc
iret
(bad)
stos
and
test
push
shl
inc
xchg
pop
mov
xchg
cdq
mov
scas
inc
shl
mov
lods
push
lea
pop
add
mov
sar
icebp
retf
xchg
test
in
and
push
in
icebp
ja
pop
mov
xchg
cli
cmp
lds
pop
pop
je
sbb
dec
mov
mov
lods
add
shr
call
fiadd
inc
add
mov
test
push
or
jbe
sahf
push
inc
std
xor
push
mov
clc
xor
mov
les
popf
outs
xchg
inc
or
ins
add
sub
icebp
jecxz
inc
mov
dec
jbe
pop
add
movs
leave
push
pop
leave
fwait
pop
stos
push
dec
out
push
sbb
shl
cmovp
std
outs
pop
dec
dec
out
jbe
mov
jmp
and
add
xchg
inc
scas
je
aam
mov
movs
push
mov
pop
inc
pop
push
push
mov
test
xor
xor
adc
sbb
arpl
push
jae
mov
lods
inc
mov
stos
das
sub
adc
push
fwait
retf
stc
cmps
popf
push
jb
adc
scas
jae
rcl
or
js
inc
arpl
dec
(bad)
cmp
les
pop
lea
sbb
mov
ds
mov
js
mov
fmul
jnp
xchg
xchg
pop
push
and
xchg
cmps
das
lahf
pusha
push
icebp
ss
push
inc
and
retf
pusha
mov
mov
adc
aas
dec
dec
shl
pop
inc
xlat
sub
dec
sub
pop
icebp
push
mov
out
scas
lahf
aad
iret
adc
sbb
push
fisttp
xchg
leave
adc
pop
lahf
pop
aam
lahf
mov
dec
es
movs
fucomip
nop
cs
out
cs
jae
jns
les
inc
ins
mov
cmps
scas
sbb
mov
es
imul
je
mov
pop
and
or
sub
pop
xchg
sti
mov
pushf
ss
cs
outs
xchg
ret
push
sub
rol
inc
out
mov
xchg
fsubr
push
mov
adc
sbb
sbb
mov
and
and
jl
pop
ss
and
mov
mov
sbb
(bad)
mov
xor
xlat
xor
stos
mov
inc
jb
std
ja
into
cwde
imul
fist
inc
xchg
adc
add
sbb
jnp
popf
sbb
push
test
sbb
sbb
es
jl
dec
adc
mov
fist
loope
int
sti
shl
pop
pop
enter
xor
jp
or
mov
fistp
add
sbb
sub
out
mov
cmp
or
add
mov
pop
sub
(bad)
and
das
inc
sub
push
movs
(bad)
jge
cmp
das
inc
mov
dec
cmp
dec
arpl
dec
retf
pusha
out
mov
inc
cmp
xchg
jmp
addr16
mov
lods
cmp
movs
out
pop
fdivr
(bad)
ja
jae
pop
mov
loopne
mov
push
pusha
xor
or
fild
cli
pop
pop
mov
(bad)
push
aad
clc
rol
and
js
jbe
mov
loop
cmp
loop
movs
cli
movs
mov
add
in
neg
mov
sbb
adc
inc
fcmovne
clc
aas
cli
sbb
jge
pop
repnz
je
inc
aad
jne
mov
dec
cmp
aaa
mov
dec
pop
adc
repz
neg
push
push
aam
jmp
xor
jns
aad
mov
sbb
sub
mov
je
inc
jge
mov
pop
cmp
out
pop
sub
adc
mov
ins
xchg
loope
cwde
mov
mov
adc
or
mov
fcmovbe
or
pusha
js
jbe
jmp
dec
mov
ss
fisub
xchg
and
cdq
xchg
bound
jge
mov
pop
inc
push
outs
lods
fwait
xchg
push
jle
(bad)
cmc
cmp
std
das
lds
mov
dec
push
out
in
arpl
ins
mov
pop
addr16
mov
pop
adc
cwde
in
rcr
icebp
pop
pushf
mov
push
fsub
sahf
jle
scas
xor
sbb
in
xchg
daa
(bad)
aam
lock
mov
cdq
daa
jmp
inc
imul
outs
loopne
adc
jp
retf
dec
jmp
push
das
sub
loop
lds
(bad)
jge
popa
cmp
sub
xchg
orps
movs
jecxz
ss
add
in
xor
mov
ret
aam
xor
or
ss
xor
push
sub
add
cmc
jge
adc
jle
mov
add
fst
test
fcmovu
xor
pop
xchg
fld
scas
jecxz
retf
adc
fistp
mov
xchg
mov
mov
pop
rcr
not
retf
repnz
push
mov
or
popf
call
pop
stc
jae
iret
rcr
jg
out
sub
(bad)
lods
fbstp
(bad)
and
adc
or
adc
xchg
inc
jo
aas
ss
cdq
sub
push
pop
into
cmp
sub
call
inc
aad
pop
jp
fwait
cmc
sub
xor
push
stos
and
sbb
ja
adc
mov
in
les
push
jbe
imul
jb
cwde
sub
(bad)
push
cmps
mov
add
(bad)
lock
retf
imul
call
jmp
mov
fwait
adc
outs
(bad)
icebp
test
stc
or
int3
(bad)
or
pop
test
and
int
arpl
fnsave
repz
jmp
mov
fbstp
pusha
or
in
stc
(bad)
xor
adc
aam
repnz
xchg
scas
cmp
pop
daa
adc
adc
lock
in
shl
mov
loopne
pop
push
dec
sub
or
mov
add
jmp
int3
aad
push
movs
aaa
sbb
iret
and
add
scas
xor
pop
jbe
mov
aad
pop
push
jno
(bad)
cmps
push
pop
cmps
(bad)
dec
in
test
in
mov
rcr
adc
sar
call
int3
and
inc
stos
add
lods
lods
je
pop
int3
sbb
jg
test
add
push
outs
pop
nop
inc
mov
shl
lods
jae
jae
imul
(bad)
inc
inc
jmp
enter
das
mov
xchg
push
dec
mov
stc
xor
fptan
stos
mov
push
cmp
mov
imul
pop
adc
aas
push
mov
cwde
xchg
mov
jo
into
xchg
in
jo
sti
in
popf
inc
int
out
xchg
jge
mov
adc
fs
(bad)
iret
cmps
bound
mov
scas
jae
mov
fmul
lods
xchg
das
fcomp
inc
(bad)
xchg
leave
rol
and
test
or
add
and
aas
cmp
shl
push
shl
mov
hlt
mov
mov
shl
jmp
cmc
adc
sub
dec
ficomp
std
mov
pop
mov
jl
add
push
mov
pop
xor
cld
js
cmc
dec
jb
cmps
push
imul
popf
jge
in
stc
retf
test
mov
ss
in
test
mov
(bad)
das
loope
dec
arpl
std
push
mov
lea
jae
loop
pop
adc
(bad)
push
dec
dec
jnp
sub
inc
cmp
ins
not
rol
pop
scas
xchg
pop
sbb
nop
ret
(bad)
jne
mov
(bad)
cmc
push
mov
xchg
xchg
inc
outs
xor
jmp
inc
sub
mov
mov
pop
lock
and
push
iret
sub
ins
sub
loop
fcom
jne
rcr
stc
cmps
hlt
int3
lds
sbb
sbb
dec
icebp
jp
and
adc
cld
pop
data16
in
mov
sti
ds
fld
xchg
mov
inc
loope
cmp
add
outs
pop
leave
test
and
cmp
out
mov
adc
jp
pop
adc
iret
scas
test
sub
stc
push
pop
out
dec
or
and
sar
push
(bad)
neg
push
les
addr16
mov
dec
adc
into
inc
int3
jge
ret
cmp
cmp
sbb
lods
and
mov
(bad)
arpl
mov
je
mov
add
push
ins
mov
cs
jmp
mov
push
adc
xchg
ficom
fs
pop
test
mov
mov
dec
in
inc
and
xor
in
(bad)
call
mov
int
xchg
mov
dec
jae
jmp
push
xchg
enter
fs
add
stos
and
push
pop
push
cmp
repnz
mov
sbb
iret
add
mov
fstp
int3
add
mov
push
retf
adc
pop
sbb
jecxz
and
in
imul
scas
xchg
out
jo
sar
inc
jno
cmp
pushf
mov
mov
and
cs
or
dec
sub
je
jecxz
mov
(bad)
mov
cwde
mov
cmp
pop
cs
fsubr
lea
aas
xchg
dec
inc
jbe
sub
jg
ins
and
icebp
xchg
jle
cmp
pop
pop
dec
(bad)
mov
loopne
(bad)
mul
dec
jne
dec
ret
(bad)
jns
ja
test
addr16
sbb
neg
in
gs
cmps
mov
imul
or
cmc
xchg
jl
dec
sahf
or
fcmovbe
test
out
ins
(bad)
icebp
or
and
jl
(bad)
jne
aas
test
clc
cwde
lds
mov
lahf
push
mov
mov
mov
xor
cmp
stos
dec
jmp
das
lds
sub
daa
xor
pop
jmp
sub
stos
jne
push
jno
psllw
dec
jno
push
jg
xchg
cdq
fcom
mov
sbb
dec
mov
push
sti
mov
pop
mov
retf
add
fiadd
xchg
or
loope
push
adc
fs
cmp
pop
out
mov
jo
dec
and
and
sbb
xchg
and
add
and
test
mov
repz
mov
push
xchg
sub
xchg
sbb
sar
jno
push
push
int
je
rcr
mov
push
or
outs
xchg
jbe
xchg
and
repnz
dec
dec
or
jne
outs
sub
out
adc
shr
mov
cmps
mov
or
sub
adc
scas
mov
add
xor
xchg
mov
sub
fcomp
popa
xchg
push
dec
adc
fmul
inc
jns
enter
or
retf
lahf
xor
cmp
pop
dec
fild
int
xchg
sbb
in
cmp
ret
inc
xchg
adc
adc
sti
lds
adc
xor
out
adc
hlt
pushf
loope
mov
xor
movs
inc
outs
int3
add
retf
fistp
mov
dec
jecxz
jb
xor
pushf
ret
rol
ret
xchg
stos
ja
mov
test
aaa
rol
in
(bad)
mov
movs
mov
shr
sbb
gs
movs
dec
jo
jo
add
adc
jo
push
outs
shl
(bad)
fnsave
sub
xor
or
xchg
ja
aad
clc
mov
push
mov
test
(bad)
mov
mov
pushf
shl
push
push
dec
jne
mov
jo
(bad)
ror
mov
mov
dec
dec
cmc
mov
dec
inc
shr
imul
pop
loope
cli
mov
mov
pop
xor
loopne
jne
popf
lock
outs
sbb
jnp
int
enter
and
push
sub
jb
adc
adc
(bad)
push
enter
push
bound
pop
(bad)
xor
lock
inc
lods
loope
(bad)
mov
lds
jg
sub
(bad)
int3
pop
out
mov
mov
dec
sbb
dec
aaa
(bad)
mov
fldenv
cmp
arpl
dec
pop
mov
push
push
and
sbb
adc
and
pop
cmp
cmc
imul
gs
sbb
movs
test
dec
mov
stos
(bad)
dec
cmp
test
inc
mov
pushf
xchg
mov
dec
mov
(bad)
mov
ret
ds
fs
jecxz
add
(bad)
inc
sti
xchg
pop
push
mov
jno
arpl
outs
sub
jg
out
cwde
sub
into
cs
push
repz
dec
mov
cwde
xchg
stos
or
adc
mov
stos
aad
mov
imul
call
adc
cld
mov
push
push
xor
stos
add
cmp
pop
mov
adc
enter
pop
mov
pop
lea
int3
jg
jle
inc
sahf
push
xor
imul
mov
sub
lock
pop
(bad)
pop
imul
jg
push
push
xor
pop
cli
cs
inc
sub
ja
gs
daa
js
push
in
pop
dec
scas
pop
test
mov
test
pop
sbb
push
lods
mov
mov
push
lods
jnp
and
sbb
fstp
and
in
sar
in
cdq
mov
mov
ja
dec
rol
mov
js
pop
test
loope
adc
mov
xchg
dec
lds
jmp
adc
adc
mov
jmp
sbb
jp
and
scas
in
(bad)
sbb
ret
fwait
or
sub
aad
pop
stos
pop
mov
mov
xor
push
aam
and
mov
clc
(bad)
fbstp
icebp
fld
movs
xchg
push
outs
add
add
lock
stos
cld
out
xchg
std
(bad)
popf
sub
cli
inc
add
mov
xchg
pushf
fiadd
dec
sbb
jmp
sti
data16
lds
hlt
js
retf
push
pop
cli
mov
fisub
and
into
mov
sbb
push
mov
outs
dec
test
cmp
movs
or
add
test
or
sbb
ins
hlt
adc
jg
pop
mov
adc
pop
cmp
lods
mov
jl
dec
daa
mov
addr16
mov
fld
mov
jns
jp
fwait
inc
int3
not
and
retf
aaa
js
jbe
cdq
lea
jbe
lock
scas
mov
pop
ds
arpl
and
(bad)
out
(bad)
bound
push
or
psllq
push
mov
dec
mov
outs
out
xchg
pop
std
(bad)
push
xchg
mov
pusha
dec
mov
xchg
aas
fistp
dec
lods
mov
fnstcw
out
and
push
daa
ins
or
push
in
dec
sbb
sbb
aam
push
and
stos
mov
cld
xor
xchg
ja
inc
out
mov
in
xor
out
xchg
jae
cwde
cwde
jns
mov
xchg
xchg
retf
cs
sbb
xchg
jle
xor
or
cld
xor
mov
cld
addr16
data16
jg
or
das
or
sbb
jae
push
mov
dec
movs
inc
and
dec
cdq
inc
ror
adc
rcr
sub
add
pop
xchg
retf
retf
(bad)
stos
hlt
mov
pop
in
scas
(bad)
stos
rcr
stos
jo
js
add
or
mov
xor
test
pushf
add
enter
dec
loop
neg
(bad)
test
sar
or
sbb
xchg
and
arpl
outs
push
ret
xor
pop
or
and
cmp
jb
out
xchg
and
xor
or
stc
enter
fnsave
aam
cwde
in
or
fdiv
movs
pop
xor
sub
and
in
dec
out
js
in
push
mov
xchg
dec
dec
mov
or
mov
push
sar
scas
stc
push
dec
shl
frstor
sbb
add
mov
loopne
dec
adc
sar
in
fdivr
mov
cmp
mov
push
mov
mov
in
sahf
in
sar
add
jb
lock
mov
jae
dec
out
add
movs
or
pusha
popa
mov
adc
aaa
rol
sbb
outs
rcr
in
pop
leave
(bad)
jbe
dec
mov
xchg
std
dec
adc
test
mul
sbb
adc
vpshad
sub
lock
push
pusha
call
aam
or
cli
jmp
retf
pop
push
mov
hlt
cmp
push
int
rcl
and
push
push
in
inc
mov
cwde
ds
ror
jle
retf
nop
pop
sbb
rcr
fild
pushf
dec
fadd
and
jmp
add
fmul
cli
loop
out
pop
or
or
mov
ret
jle
cmp
dec
icebp
or
test
sub
retf
jae
inc
xchg
test
out
fsubr
cli
push
mov
mov
cmp
sar
rsm
std
push
add
or
lds
fldenv
dec
lock
jbe
mov
cli
test
popa
pop
inc
sar
push
cmp
or
mov
add
lock
push
addr16
ss
(bad)
iret
das
push
push
(bad)
mov
xchg
or
in
ins
push
add
mov
jns
loopne
test
jl
retf
jae
cs
mov
imul
xchg
outs
mov
fs
div
inc
pop
cmp
(bad)
adc
xor
sbb
test
sar
es
jle
push
ins
outs
out
sahf
cmp
aad
(bad)
push
rcr
inc
aad
std
xchg
in
mov
(bad)
mov
out
data16
shr
je
repz
mov
or
hlt
retf
pusha
call
jmp
push
and
cmp
into
cmps
(bad)
sub
(bad)
and
test
std
retf
xor
scas
movs
jecxz
dec
sub
imul
pop
adc
add
out
loop
fisubr
js
inc
mov
retf
dec
call
iret
retf
int3
sbb
jns
jb
xlat
int
outs
mov
adc
jo
or
adc
or
mov
sbb
xchg
nop
jo
out
mov
sbb
in
es
cli
les
dec
mov
add
loope
fisubr
sar
sub
mov
into
(bad)
sbb
push
push
sbb
mov
xchg
pop
adc
sbb
mov
or
ins
ror
shl
retf
lahf
push
popf
mov
sub
sub
leave
out
add
js
(bad)
aam
sub
jns
xchg
pop
movs
add
push
mov
mov
jne
push
(bad)
dec
ss
lds
inc
hlt
pop
and
jle
es
jmp
dec
push
aad
sub
mov
sahf
fsubr
out
jae
test
and
lock
(bad)
gs
ror
sbb
shl
fcom
pop
mov
loop
stos
imul
fs
ds
pop
add
mov
jmp
jo
imul
(bad)
push
ja
jb
mov
or
or
ror
add
sub
jecxz
aam
loopne
or
mul
mov
lods
push
fwait
imul
fwait
mov
scas
ins
imul
xor
sahf
fdivr
fnstenv
jbe
dec
sub
scas
shl
das
out
sub
retf
dec
lea
cli
ins
in
popf
and
ds
pop
daa
and
adc
mov
cwde
inc
add
inc
cmps
loop
out
mov
dec
sub
dec
push
adc
pop
adc
std
pop
pop
mov
inc
fnstsw
mov
mov
add
push
add
idiv
add
push
adc
(bad)
adc
mov
push
shr
jg
pop
in
movs
scas
cmp
jge
shl
test
adc
pop
inc
icebp
mov
iret
daa
pop
jge
dec
(bad)
mov
add
jl
jmp
test
jne
adc
outs
in
cwde
sub
mov
fistp
pop
add
mov
push
xchg
pop
gs
cmps
jge
ds
shl
mov
(bad)
pop
(bad)
xor
push
dec
leave
mov
pop
fisttp
push
add
fmulp
xor
inc
xchg
repnz
jecxz
push
and
test
xor
iret
mov
stos
pop
lods
and
pop
out
call
movs
cdq
fild
or
jbe
adc
xor
inc
push
mov
inc
es
adc
lods
push
cdq
sub
ja
retf
ficomp
sub
dec
arpl
pop
aaa
movs
add
mov
jne
arpl
fwait
aaa
cmp
outs
and
push
sar
shl
inc
fsubr
adc
ret
mov
leave
xchg
or
xchg
test
dec
nop
clc
mov
fcomp
and
sbb
fsub
cmp
pusha
aad
cdq
xor
cmc
les
add
inc
push
mov
shl
jae
add
stos
adc
ja
test
mov
sub
adc
cmp
call
fisttp
arpl
daa
nop
mov
xor
jae
sar
nop
lods
xchg
adc
not
jnp
sbb
mov
adc
mov
push
inc
gs
test
push
push
in
mov
or
sub
sub
arpl
int3
cmp
pusha
mov
mov
mov
push
sub
fisubr
inc
in
stc
cmps
pop
test
cmps
inc
fstp
push
into
cmps
pop
test
or
test
scas
push
(bad)
sbb
xlat
or
test
dec
mov
scas
xor
dec
fstp
xchg
jo
sbb
mov
dec
inc
cmp
mov
(bad)
fsub
push
les
xor
test
mov
mov
inc
add
and
test
dec
fcomi
adc
aas
cmp
mov
pop
mov
retf
mov
in
mul
fwait
repz
ins
cmp
repnz
out
mov
out
cmp
(bad)
in
int
inc
(bad)
sbb
shr
repnz
out
scas
sub
jmp
adc
cmp
dec
push
stos
mov
imul
les
(bad)
(bad)
inc
lods
mov
fisub
xchg
dec
pop
inc
inc
movs
test
jmp
ins
and
or
dec
outs
jp
int3
test
add
push
jge
xor
movs
sub
ins
maxps
std
mov
fcomp
jp
push
dec
and
nop
sbb
lods
icebp
lahf
out
repnz
in
mov
je
jge
hlt
mov
ret
xor
es
cwde
es
mov
pop
ja
cmps
jns
pop
in
into
stc
mov
add
xchg
mov
cld
cmps
mov
dec
pand
lods
jl
cmps
push
dec
mov
arpl
jo
jnp
pop
rol
jae
fdivr
mov
addr16
cmp
popf
loop
ss
arpl
das
push
nop
xor
jmp
sbb
or
mov
adc
push
dec
and
scas
push
push
inc
cmp
jnp
pop
addr16
popa
shl
shr
fstp
repnz
test
sub
cmp
push
cmp
dec
sar
sbb
(bad)
jle
cmps
mov
xchg
repnz
jns
fabs
ja
sbb
cwde
and
pop
ins
in
mov
stc
cs
mov
push
inc
test
jno
test
fsubr
and
xchg
mul
call
rol
(bad)
cmp
fisttp
in
cmp
es
inc
loopne
push
cmovb
(bad)
pop
(bad)
cmc
stos
dec
movs
add
pop
or
cmp
mov
pop
sbb
mov
pop
push
lea
mov
mov
outs
mov
pop
aam
and
fadd
sbb
loopne
xor
stc
mov
add
inc
sbb
sub
dec
xchg
cmp
inc
push
ret
push
dec
cmc
pop
sbb
stc
add
ret
push
fild
add
push
sub
shl
or
push
mov
sbb
jbe
sub
cmps
dec
popf
(bad)
xor
icebp
jge
in
in
and
xor
rcr
rcr
mov
push
lods
or
idiv
in
dec
(bad)
lea
dec
mov
adc
enter
pop
ja
push
test
das
xor
je
pop
sub
pop
fs
stc
xor
std
cmps
jg
and
sbb
jno
sbb
pop
aam
sbb
dec
dec
stc
sub
dec
in
loop
jnp
sub
repnz
inc
pop
sub
pop
inc
jecxz
ja
rcl
enter
imul
xor
inc
fcom
cdq
fisubr
pop
sub
arpl
fisubr
std
push
neg
call
cmp
mov
sub
inc
aad
cmp
cmp
xor
sbb
sub
clc
sub
jo
shl
movs
cmp
jne
repz
sahf
jg
int
push
pop
inc
fst
add
xor
popa
add
popa
shl
aam
dec
ficom
lods
retf
fwait
adc
jmp
data16
dec
in
sbb
cmp
push
aaa
mov
mov
mov
aaa
aad
sbb
shl
lods
aaa
add
mov
imul
call
bound
leave
jl
ss
(bad)
mov
jnp
push
xor
inc
scas
dec
xchg
push
outs
lods
add
movs
xor
loop
jg
xor
loope
sbb
dec
add
(bad)
fcom
push
add
and
out
xchg
jne
mov
inc
arpl
add
inc
xor
pushf
push
aas
scas
mov
fsub
loop
and
adc
add
inc
mov
xchg
jno
push
pop
jecxz
and
mov
xlat
int
pusha
js
push
lods
pinsrw
and
jp
pop
mov
pop
jmp
cli
jp
ss
dec
or
push
test
cmp
xchg
cdq
xchg
and
xchg
xchg
retf
loopne
bound
fnsave
cmp
mov
pop
into
inc
or
cmc
scas
and
test
sub
addr16
mov
out
cmp
xchg
pusha
mov
data16
cli
lds
out
push
dec
lock
fcomp
cmp
jmp
xchg
test
mov
hlt
mov
add
push
nop
into
in
stc
dec
enter
sbb
ss
xor
fild
(bad)
and
inc
inc
psubd
frstor
or
pop
inc
inc
jb
and
call
das
retf
mov
jecxz
shl
jge
sub
stc
in
(bad)
sahf
sbb
out
cmps
loop
xchg
sbb
and
jl
adc
inc
outs
jle
adc
xor
or
add
test
and
leave
cwde
fdivr
icebp
push
or
cmps
or
pop
retf
(bad)
inc
lea
cmps
push
das
jle
push
nop
repz
or
mov
test
mov
out
mov
mov
cli
push
jp
cmp
addr16
fs
cdq
xchg
shl
pop
pusha
mov
jae
push
test
bound
sub
lahf
ror
and
(bad)
dec
sbb
inc
sbb
imul
fmul
clc
les
pop
outs
sti
mov
leave
add
imul
jb
pop
mov
addr16
mov
in
xchg
test
dec
xchg
mov
ss
fadd
xchg
movs
scas
or
push
lock
sbb
lds
jge
inc
fwait
mov
sbb
dec
fnstsw
leave
loop
sbb
in
cs
mov
jmp
add
jl
clc
adc
out
ins
pop
movs
pushf
fst
push
sub
adc
shr
fiadd
dec
push
inc
sbb
mov
stos
mov
adc
ins
cli
add
pusha
mov
(bad)
mov
inc
mov
or
jl
pop
inc
stos
mov
push
pop
ins
aam
jp
xchg
pop
and
jg
sub
adc
int3
lods
(bad)
(bad)
sbb
bound
mov
pop
mov
push
jbe
les
cmp
push
mov
popa
pop
repz
(bad)
jp
data16
push
mov
or
xlat
test
mov
push
sbb
ins
iret
stc
cwde
aas
stc
out
test
lds
push
cmc
xchg
cwde
sub
sub
shr
sbb
sti
pop
mov
out
into
popa
fcomp
sbb
pop
adc
add
loope
xor
loopne
pmulhuw
jmp
fs
or
aam
push
mov
adc
mov
cmc
je
pop
addr16
aaa
mov
(bad)
pop
or
out
ins
lods
and
mov
jbe
fs
add
shr
fwait
jl
adc
fild
test
push
scas
xchg
inc
call
xor
push
push
ja
frstor
mov
pop
add
mov
scas
xchg
out
jns
int3
rcl
inc
adc
mov
mov
fiadd
sbb
xlat
xor
add
xor
or
xor
addr16
repnz
in
ss
shl
inc
(bad)
cs
jmp
stc
and
aam
inc
sbb
jmp
icebp
adc
pop
jp
jae
loop
int3
cmp
sub
shl
shl
pcmpeqw
rol
jge
adc
jecxz
mov
ja
lahf
jns
(bad)
xchg
cdq
fst
pop
xchg
bswap
mov
cdq
inc
test
cld
or
or
jl
xor
jmp
xor
(bad)
clc
dec
fst
es
xor
pop
push
movs
mov
push
movs
in
xchg
shl
xchg
cmc
push
xchg
xlat
xchg
test
xor
mov
push
mov
popa
ins
xchg
mov
pop
mov
out
sbb
outs
xor
jmp
push
outs
add
sbb
sbb
or
fldenv
cs
xor
loope
cmp
repz
sar
repz
mov
and
jl
xor
mov
daa
xor
leave
mov
hlt
pop
push
jns
dec
call
ja
loopne
push
sbb
das
inc
inc
mov
int
mov
imul
dec
sbb
jnp
cmp
add
in
ds
sti
lods
pushf
cld
xchg
(bad)
adc
sbb
inc
mov
adc
jo
xchg
xchg
add
jp
push
(bad)
xor
pop
cdq
loope
mov
aas
fwait
daa
fwait
xor
imul
ror
inc
pop
jmp
push
jo
dec
rcr
icebp
loopne
ss
sahf
or
(bad)
movs
jnp
adc
cwde
jmp
adc
jb
and
(bad)
dec
sub
out
cli
sub
fisubr
adc
mov
xor
arpl
pushf
popa
pop
push
aaa
pop
into
mov
xchg
nop
dec
cwd
clc
jb
lock
add
add
aad
fldenv
xor
sbb
movs
cmp
out
push
inc
call
jmp
nop
or
icebp
add
div
(bad)
jle
ret
cmp
(bad)
fidiv
scas
cmps
fs
pop
int3
into
gs
or
xchg
in
repz
push
leave
xor
(bad)
je
jnp
push
xchg
les
mov
sub
std
lods
sbb
sub
pop
call
mov
push
jecxz
jmp
inc
fs
loop
stos
repz
movs
out
dec
jp
fmulp
ret
(bad)
jo
cmc
das
test
shr
sbb
scas
cmp
dec
sub
outs
and
adc
mov
repnz
sbb
imul
sbb
pusha
push
xchg
and
pop
mov
add
(bad)
in
xor
aad
movs
repnz
fcomp
push
add
dec
pop
dec
cmps
retf
jne
icebp
sbb
lods
xchg
mov
dec
pop
scas
sar
cdq
cmp
rcl
and
call
mov
(bad)
push
pusha
xor
cdq
(bad)
fstp
imul
sbb
xchg
xchg
push
out
loop
test
outs
cmp
retf
jg
sbb
(bad)
dec
ror
jbe
mov
xchg
fadd
dec
or
xor
out
lock
dec
dec
into
pop
xor
xor
mov
jmp
bound
jle
mov
pop
pusha
jp
pop
add
inc
dec
or
leave
loopne
into
or
enter
outs
inc
add
out
pop
and
cs
fldcw
jnp
movs
mov
dec
pop
retf
enter
adc
not
push
pop
mov
ficomp
stc
inc
sahf
(bad)
(bad)
lods
mov
mov
jp
rol
inc
adc
xor
lock
xor
sub
xor
sub
pop
sbb
fmul
mov
sti
icebp
out
jb
mov
and
pop
mov
mov
and
add
sbb
inc
adc
xchg
mov
in
xchg
cmp
mov
xchg
pop
dec
push
mov
dec
test
movs
push
out
icebp
sub
ret
add
(bad)
addr16
les
inc
jl
into
cmp
fild
fnsave
dec
pop
mov
dec
or
sub
loope
scas
inc
in
sub
mov
scas
scas
add
std
out
test
sbb
retf
inc
mov
ins
dec
push
xor
add
sti
mov
sbb
cmp
bound
mov
sub
movs
enter
hlt
or
test
jo
rcr
pop
into
jl
mov
fst
pop
std
xor
popf
mov
and
test
mov
cmp
test
in
test
add
cmp
cmp
xor
add
sub
or
push
xchg
and
adc
call
inc
ficomp
xlat
repnz
push
nop
inc
fsubrp
push
stos
cmp
ins
test
jmp
cdq
jle
sbb
cmp
mov
lahf
dec
iret
lods
dec
repz
shr
xchg
ss
hlt
push
sti
icebp
push
aad
xchg
rcr
mov
xchg
pop
jmp
imul
mov
adc
push
push
push
(bad)
repnz
cmc
push
push
pop
fmul
mov
xchg
ret
aam
add
popa
fild
in
call
ds
ja
adc
popa
mov
cmp
ret
pusha
mov
mov
mov
sub
ss
sti
xchg
xchg
mov
jmp
jb
sub
cmp
pushf
inc
sti
push
push
add
es
sbb
add
bound
ss
or
imul
adc
inc
dec
dec
stos
out
sub
jle
push
call
dec
pop
(bad)
ins
arpl
mov
in
fnstenv
mov
push
call
into
in
jo
movs
inc
dec
add
inc
icebp
fcmovbe
pop
add
jle
imul
push
lods
sub
cs
loope
scas
clc
xor
mov
sub
rcl
sub
xor
mov
mov
in
in
xchg
mov
mov
mov
or
adc
shl
fistp
pop
sub
cmp
mov
pop
dec
lods
fimul
pop
sub
pop
dec
(bad)
iret
mov
inc
adc
mov
and
and
jno
lods
imul
and
test
jne
cli
add
cwde
bound
push
ins
(bad)
add
ret
std
or
movs
mov
cmps
lods
mov
inc
jb
pop
push
jg
sub
dec
pop
mov
shl
fs
xor
sbb
stos
dec
loopne
stos
fistp
pop
xor
adc
sub
jg
mov
in
mov
ret
xor
mov
mov
clc
pop
call
mov
std
popa
mov
xlat
jecxz
sbb
push
xchg
mov
ins
jbe
nop
lods
inc
cli
and
mov
mov
jecxz
(bad)
dec
ins
hlt
pusha
ins
dec
cwde
jp
movs
scas
jbe
and
mov
neg
sub
add
test
add
lfs
repnz
push
fwait
in
cmp
xchg
retf
mov
cmp
leave
jle
nop
adc
xor
mov
repz
stos
test
(bad)
jns
daa
ficom
and
cdq
mov
not
dec
push
xor
sub
iret
fwait
and
inc
pop
mov
outs
sub
xor
cwde
dec
pop
jns
cmp
stos
inc
repz
ins
sbb
ret
jecxz
pop
cli
xchg
lock
mov
clc
std
scas
idiv
sub
push
outs
sbb
jno
sbb
lock
into
out
out
popf
(bad)
ds
or
inc
sbb
out
cmp
hlt
aam
push
sbb
loop
push
aaa
cmps
xchg
lea
fsub
pop
ss
retf
je
fstp
inc
add
dec
cs
push
movs
les
dec
rol
and
mov
cmovg
and
js
repz
iret
mov
in
pop
xchg
cmp
or
cmp
jne
addr16
sti
hlt
bnd
adc
adc
(bad)
out
xchg
out
jge
sub
pop
pop
mov
in
ret
cdq
aam
pop
outs
nop
xchg
push
cld
(bad)
push
shl
(bad)
xlat
fsubrp
xor
cmps
call
ret
fwait
mov
adc
or
jg
arpl
pop
jno
gs
pusha
imul
aad
popa
cwde
inc
mov
cmp
ficomp
add
pop
sbb
or
cwde
mov
sar
jmp
push
push
lods
in
mov
push
inc
push
fstp
xchg
or
mov
je
mov
inc
out
iret
jae
sbb
or
adc
push
mov
div
scas
mov
call
xor
loopne
pop
mov
mov
cmp
xchg
dec
dec
jmp
mov
ja
xchg
rol
imul
(bad)
sti
mov
push
cmps
pop
js
loopne
ins
xchg
scas
pop
or
cmp
icebp
aaa
ins
jnp
aam
into
pop
cmp
sbb
int
das
movs
in
or
ds
das
mov
pop
mov
and
daa
aaa
push
sub
cmp
ret
xor
in
mov
mov
(bad)
fstp
dec
mov
jns
in
lahf
in
ins
sub
cmp
add
out
cmp
sahf
fistp
adc
and
jmp
sti
int
inc
push
cmp
pop
stos
xchg
xor
dec
enter
mov
pop
lock
mov
cmp
mov
sbb
inc
(bad)
ror
cli
(bad)
inc
clc
cmp
sbb
test
addr16
pop
inc
test
ins
or
ja
or
loop
and
call
jne
mov
cmp
fist
stos
push
ds
xchg
gs
pop
or
add
mov
xchg
lea
adc
add
add
and
test
ja
jecxz
pop
push
sub
pusha
push
cwde
scas
push
fldcw
fidivr
mov
into
popa
adc
dec
push
mov
lods
les
push
mov
cld
iret
std
push
aas
scas
jo
pop
js
lock
sub
mov
inc
mov
push
jbe
xor
cwde
int3
outs
and
pop
fwait
mov
adc
lds
pop
or
scas
mov
jbe
push
xor
mov
cmp
in
jne
rcl
int
dec
test
adc
xchg
retf
inc
dec
sub
les
mov
jmp
push
adc
sar
or
xchg
push
aad
jg
enter
retf
xor
sar
cdq
and
mov
gs
push
ror
cld
mov
adc
jg
fstp
pop
inc
mov
lds
repnz
pop
mov
pop
push
ss
xor
push
popa
add
outs
stc
pop
cwde
scas
enter
mov
mov
inc
mov
loop
mov
mov
mov
gs
add
lock
retf
and
sti
mov
jno
out
movs
cmp
lahf
jp
add
and
out
push
push
fucomi
shl
inc
cmps
inc
and
enter
or
xchg
test
lock
dec
pop
outs
ror
and
pop
pop
scas
inc
in
jno
sub
(bad)
jbe
mov
add
stc
call
ds
dec
in
scas
dec
stc
push
mov
mov
popf
ret
xchg
adc
pop
sub
add
cld
lahf
xlat
jg
inc
in
pushf
in
fidivr
stc
add
ins
into
cli
push
leave
adc
aad
sub
std
jmp
jne
js
pop
nop
sub
fwait
aaa
mov
shl
add
ret
dec
jecxz
mov
inc
add
adc
dec
cld
aam
mov
frstor
and
mov
mov
mov
cmc
arpl
es
mov
jl
sahf
pop
jnp
jne
iret
cmp
mov
pushf
pop
cmp
shl
inc
into
adc
mov
sub
add
push
cs
or
mov
test
push
shr
ret
test
mov
lods
ror
xchg
sbb
mov
adc
ds
call
xor
jmp
pop
mov
scas
fstp
push
dec
fdiv
lods
mov
int
in
hlt
push
mov
xchg
cdq
and
jne
movs
cdq
xchg
cmps
or
lock
jp
shl
xchg
lds
dec
stos
enter
cld
(bad)
clc
repz
cmp
sti
(bad)
arpl
hlt
cld
cwde
cmp
retf
leave
jecxz
lahf
nop
jmp
xor
mov
push
cmp
in
sub
xor
mov
inc
mov
lahf
in
fidivr
push
jl
icebp
adc
add
xchg
shl
aad
ficomp
into
push
push
xchg
mov
and
or
xchg
add
fisub
and
mov
mov
pop
xor
repz
dec
adc
hlt
retf
sub
lods
bound
cs
pop
in
xlat
jle
ret
jmp
and
and
add
sahf
ret
test
and
(bad)
pop
cmp
daa
in
push
out
jb
or
cmp
(bad)
repz
bound
cli
je
(bad)
jbe
ret
(bad)
in
cmp
int3
leave
lods
push
lods
sub
pop
push
lea
into
(bad)
cmc
fsub
dec
imul
xor
hlt
lds
std
jmp
sub
dec
es
fist
jbe
out
jno
sub
xchg
fild
test
mov
popf
rcr
ja
jle
scas
pop
stos
bound
ja
mov
inc
dec
clc
enter
xor
sub
inc
push
xchg
pop
mov
xlat
dec
retf
inc
pinsrw
out
into
mov
ret
ror
(bad)
mov
mov
dec
jge
mov
and
sub
not
icebp
jo
pushf
dec
mov
scas
jle
aaa
push
xor
not
xor
fisub
xchg
add
push
jbe
movs
icebp
xchg
out
xor
arpl
enter
lds
js
scas
add
(bad)
add
fsub
inc
pop
test
or
inc
popa
cli
adc
enter
rol
idiv
inc
ret
aad
xchg
sbb
and
movs
ror
shr
ds
test
movs
aaa
pusha
stos
in
cmp
rol
xor
mov
mov
daa
jge
and
pcmpeqb
adc
jmp
sbb
and
sahf
enter
or
pusha
dec
push
loopne
out
loopne
shr
(bad)
pop
pop
scas
add
int3
cmp
clc
fld
cld
mov
scas
adc
pop
rcr
ficomp
nop
cmp
mov
sbb
ss
mov
data16
cmc
cmps
imul
cmovb
jl
push
shl
pop
out
out
retf
jp
call
lock
sub
adc
pop
mov
idiv
pop
dec
cmc
mov
mov
cwde
aaa
aad
dec
jae
stc
adc
jmp
mov
imul
mov
cmp
(bad)
add
inc
icebp
inc
mov
sub
mov
jnp
or
pop
sbb
and
out
lock
aaa
pop
cmp
push
adc
jle
fiadd
out
mov
add
inc
jl
add
lods
stc
inc
fild
ss
dec
and
jecxz
push
and
pop
fdivr
lea
inc
call
xor
stc
retf
in
ret
stc
popf
adc
push
(bad)
out
retf
xor
(bad)
ins
cmp
jmp
rcr
mov
sub
hlt
pop
ja
jae
(bad)
movs
out
sub
cmps
lock
jo
lods
div
sahf
and
add
punpcklwd
xchg
lods
pop
and
or
push
mov
dec
stc
call
ins
shl
jmp
jmp
fidiv
jns
jle
inc
sar
adc
repz
bound
mov
out
sbb
pop
xchg
movs
pop
sbb
jg
sub
cmp
jbe
loop
mov
bound
adc
lods
jle
inc
xor
sti
cld
scas
mov
sar
jo
sub
pop
(bad)
xor
sub
mov
push
sub
enter
ficomp
jle
cmp
test
out
in
(bad)
or
cld
icebp
mov
inc
fistp
out
repnz
retf
jl
in
mov
in
fld
test
lds
ror
lahf
popa
les
pusha
cmps
loop
into
pop
pop
fidiv
and
mov
sub
mov
cmp
mov
add
fsubrp
add
jns
rol
push
repz
test
jno
in
retf
jp
cld
or
imul
fwait
mov
jne
adc
dec
jo
mov
loope
adc
imul
ret
fimul
test
sbb
ret
xchg
or
(bad)
push
and
loope
lds
jno
sub
rcl
call
mov
mov
jne
iret
add
jecxz
mul
or
adc
mov
test
mov
or
popa
seta
pusha
inc
fiadd
mov
jle
jae
inc
xchg
mov
inc
xchg
dec
push
fild
sahf
lea
(bad)
fstp
in
pop
jbe
push
sbb
fs
mov
add
adc
add
and
xlat
movs
ja
xchg
push
pop
int3
das
jge
mov
and
jbe
and
rol
mov
mov
and
sbb
hlt
add
sahf
sbb
stos
mov
mov
addr16
sbb
ret
xchg
es
mov
mov
mov
loopne
out
cmp
inc
mov
arpl
push
cmp
inc
clc
(bad)
push
mov
push
xchg
in
popf
out
xor
iret
mov
and
jp
jmp
sbb
imul
mov
fst
emms
inc
test
sahf
push
push
mov
sub
inc
xchg
sub
lds
xor
and
push
ret
or
xchg
mov
inc
jno
inc
leave
inc
jecxz
xchg
jnp
adc
cmp
pop
ror
push
into
ins
cmp
clc
or
pop
xchg
mov
outs
push
jg
sbb
out
jp
mov
mov
in
push
loope
jnp
not
xlat
adc
arpl
adc
cmc
xor
adc
pushf
mov
mov
inc
sub
not
mov
test
shr
jmp
mov
mov
pushf
outs
cmc
arpl
stos
dec
push
xchg
jl
mov
mov
lahf
pop
cmp
mov
add
inc
adc
bound
or
or
mov
shl
jp
and
cwde
std
aas
call
sbb
dec
sahf
push
push
sti
montmul
cmps
les
std
sub
fistp
repz
dec
pop
pop
xchg
jns
aam
arpl
inc
out
dec
enter
int3
stos
mov
jb
sub
(bad)
repnz
sub
(bad)
ror
sbb
out
pop
mov
jmp
mov
ficom
sahf
sbb
dec
out
sbb
ficom
ss
xchg
jno
fistp
push
mov
jns
and
test
js
push
jmp
jae
fldcw
mov
xor
dec
push
xor
iret
xchg
jb
xor
inc
and
scas
hlt
and
call
mov
sbb
dec
call
stos
daa
fnstsw
popa
and
aam
sbb
sar
inc
adc
cmp
daa
call
ds
mov
mov
xchg
fidivr
xor
les
scas
fiadd
fnsave
xor
mov
sti
sbb
in
dec
mov
push
push
mov
push
aaa
out
mov
rol
fisttp
(bad)
into
mov
add
in
mov
lods
fdiv
mov
sub
inc
repz
shr
jg
out
cmp
jmp
xor
push
dec
jmp
dec
ins
daa
into
push
test
jbe
call
and
xor
pop
adc
int
xor
mov
imul
and
push
and
fwait
sub
pop
aad
sar
cmp
cmp
scas
xor
das
sub
or
lods
cmps
ror
xchg
test
push
jg
aam
jne
xchg
repz
leave
fs
push
ins
shl
mov
shl
mov
mov
sbb
(bad)
aad
aaa
jmp
xor
jnp
mov
nop
lods
in
mov
dec
cmp
imul
xor
inc
retf
call
sbb
and
jmp
xor
pop
jg
or
sbb
in
sub
xchg
sub
jmp
ret
das
lds
xchg
sbb
mov
mov
inc
and
mov
call
add
mov
mov
push
shl
cmps
xor
mov
or
call
rol
mov
in
iret
mov
cs
jne
enter
js
mov
pop
push
push
ja
vpminsw
push
xor
ja
ss
mov
icebp
or
out
lahf
mov
(bad)
mov
std
pop
jle
dec
call
data16
sub
cdq
adc
xchg
mov
dec
cmp
mov
mov
mov
sbb
sbb
loop
test
(bad)
je
push
add
hlt
inc
jmp
add
call
add
not
(bad)
jge
sbb
inc
mov
fild
jle
push
pop
pop
mov
xchg
mov
(bad)
sbb
movs
adc
enter
inc
push
imul
xchg
jge
pop
sub
data16
sub
mov
neg
lods
xor
popa
sub
sub
jne
stos
push
jb
jmp
mov
shl
ins
sahf
inc
inc
pop
inc
dec
(bad)
xor
pusha
and
and
iret
je
and
stc
test
jmp
mov
push
jge
out
pop
arpl
dec
loopne
aam
dec
enter
jmp
into
mov
xchg
xor
cli
popf
(bad)
xor
xlat
inc
gs
jmp
and
lods
mov
jo
inc
xchg
sbb
xchg
lods
jne
popa
mov
imul
and
add
sub
inc
pop
and
out
xlat
xchg
in
ss
shl
mov
sbb
loopne
cmp
push
(bad)
ret
sar
sbb
jp
pop
adc
xor
cli
sbb
push
adc
fcmovne
jle
and
mov
retf
movs
jnp
icebp
imul
mov
xor
dec
xor
mov
pop
sub
into
test
sti
popa
push
mov
dec
ret
idiv
mov
imul
push
leave
add
inc
adc
add
push
lods
mov
cmp
lds
(bad)
xchg
addr16
xchg
aam
sbb
mov
test
jmp
dec
retf
arpl
(bad)
fs
std
adc
push
cmc
mov
(bad)
jge
mov
push
les
aaa
lods
pop
xchg
movs
sbb
loope
cmp
test
scas
or
push
stos
outs
ds
vpunpckhqdq
test
jb
cmp
jge
add
daa
xchg
adc
mov
adc
lods
push
pop
es
cli
in
adc
xor
pop
sti
pop
dec
jmp
adc
pop
std
mov
lds
xchg
in
lods
cmp
xchg
ins
xchg
(bad)
xchg
cdq
out
cmp
pop
push
inc
inc
and
cmp
jmp
shl
stos
lods
mov
clc
fisttp
lea
retf
inc
mov
ret
fld
mov
mov
enter
pop
pop
popf
jns
fisubr
adc
mov
lea
mov
dec
test
out
xchg
out
inc
and
mov
jb
pop
dec
push
or
daa
inc
mov
inc
int
xor
pop
dec
jg
cmp
push
pushf
scas
add
inc
in
xchg
xchg
add
mov
cmp
mov
mov
div
sub
jp
dec
xlat
ins
inc
cdq
shl
sub
lea
aam
dec
mov
sbb
sub
in
xchg
push
mov
aad
sbb
add
dec
int3
sub
scas
call
stos
enter
or
rcl
int3
sub
adc
add
mov
and
xchg
idiv
in
(bad)
push
adc
sub
nop
xchg
das
jns
jle
arpl
repnz
or
loope
push
push
sbb
mov
(bad)
shl
xchg
(bad)
test
loopne
fimul
adc
cmp
add
fdecstp
add
(bad)
lods
out
pop
mov
mov
sbb
(bad)
pop
pop
js
outs
ins
mov
or
rcr
push
cmp
movs
jb
ret
and
inc
sbb
stc
and
inc
call
enter
push
shl
dec
dec
sbb
aam
(bad)
dec
pop
push
popf
mov
or
mov
loop
push
and
jg
fidiv
cmp
(bad)
repnz
sub
dec
(bad)
loope
dec
add
das
and
out
xor
daa
loopne
mov
or
dec
std
cli
dec
sbb
out
dec
pop
das
setae
mov
dec
(bad)
adc
xlat
lahf
or
jle
mov
icebp
call
idiv
xchg
lahf
sbb
xchg
cmps
div
imul
nop
jnp
leave
call
adc
aad
dec
inc
xchg
cmp
lea
sub
scas
sbb
repz
fld
xchg
push
cmp
xchg
and
sub
or
dec
sahf
das
int3
jp
test
inc
and
daa
sub
cmp
push
out
pop
out
rcl
jno
movs
dec
sub
jnp
push
scas
mov
clc
or
scas
(bad)
xor
xor
mov
jae
add
sbb
inc
ja
xor
cdq
xor
dec
cmp
add
dec
cmps
push
(bad)
mov
jns
inc
sub
mov
sahf
repz
cmps
dec
adc
jae
sbb
add
fdiv
fiadd
inc
jl
push
dec
and
iret
mov
mov
mov
retf
push
hlt
addr16
pop
(bad)
(bad)
outs
add
and
in
imul
mov
cmp
cld
movs
test
push
or
out
jb
and
lahf
push
int3
adc
popf
dec
ins
mov
call
cbw
stos
loopne
and
xor
aad
dec
jp
cmp
add
cmp
mov
push
mov
std
jb
lock
int3
(bad)
lea
cld
sub
xchg
lahf
nop
sub
fucomp
test
es
push
in
cmp
adc
xchg
xchg
loop
ficom
sbb
add
dec
pushf
xor
test
bound
in
ds
adc
ret
xor
or
mov
icebp
jecxz
jecxz
lock
iret
inc
jp
scas
sbb
cld
mov
arpl
push
jb
(bad)
mov
aaa
stos
loop
and
inc
adc
jae
pop
enter
hlt
sub
stos
hlt
sub
or
adc
cld
test
(bad)
shl
mov
(bad)
jnp
lds
adc
int
hlt
adc
jle
out
test
jb
xor
cmp
adc
mov
lds
ins
js
push
in
bnd
xor
sbb
sti
inc
inc
mov
dec
xor
push
int3
xchg
pop
inc
cmps
fucomi
sbb
pop
cdq
ret
loop
cmps
push
lock
push
inc
inc
and
aad
out
sahf
mov
std
pushf
mov
xchg
cmp
imul
test
popf
mov
cdq
xor
fimul
es
(bad)
popa
hlt
cs
mov
pop
(bad)
(bad)
test
sbb
addr16
pop
or
and
mov
hlt
mov
ss
push
sub
xor
scas
aam
jmp
pop
dec
jecxz
push
test
sbb
xchg
mov
lods
not
inc
cmps
adc
out
xchg
and
push
and
xchg
in
cli
stc
cwde
dec
aas
sbb
dec
sub
retf
jmp
sbb
inc
test
iret
add
scas
ret
add
mov
add
xchg
neg
mov
out
add
mov
sub
jl
ud0
xchg
and
lods
push
inc
cmps
mov
mul
in
ja
jmp
shl
out
pop
mov
out
fwait
xor
add
xchg
xchg
in
sub
cmp
in
inc
stos
aaa
jae
jbe
imul
push
repz
or
mov
push
mov
ins
add
push
icebp
retf
mov
imul
aad
mov
setbe
cmp
pusha
jge
jp
inc
loopne
ins
push
jae
dec
pop
test
sub
sar
mov
jno
ret
call
(bad)
push
adc
fadd
pop
push
sbb
pmaxsw
hlt
fild
xchg
push
mov
sbb
cmp
fmul
xchg
mov
aaa
cmps
mov
jnp
cmp
mov
loop
dec
or
push
scas
sub
push
ins
mov
sti
call
lods
xor
inc
daa
pop
ja
pushf
iret
cmp
or
or
add
je
shl
adc
cmp
ret
iret
jne
lahf
add
xchg
jg
sbb
xchg
gs
dec
repz
xor
and
imul
inc
jo
pop
in
and
adc
cdq
leave
lods
mov
add
adc
sub
in
inc
(bad)
shl
outs
pop
int
loop
stos
mov
bound
lods
mov
sbb
outs
pop
xchg
js
cdq
or
xor
icebp
lock
dec
fwait
and
bound
sbb
lods
add
push
jnp
bound
mov
inc
xor
ds
in
aad
dec
dec
sahf
or
add
push
dec
(bad)
cmps
jp
push
aad
bound
and
hlt
lock
dec
imul
cli
pop
xor
jge
xchg
sbb
aaa
cli
fiadd
pop
and
adc
imul
sbb
mov
gs
add
cmc
loop
fwait
jnp
pushf
(bad)
popa
jmp
jmp
fst
mov
repz
stos
aad
retf
je
sbb
or
stos
popf
stos
es
adc
push
not
out
adc
inc
scas
ret
add
sbb
(bad)
sub
ret
test
ins
mov
inc
push
xchg
gs
pushf
sbb
pop
cli
stc
sub
out
(bad)
out
call
pop
dec
add
stc
or
dec
dec
xor
add
push
(bad)
ror
nop
retf
(bad)
push
fbstp
addr16
xchg
and
das
jnp
pop
cmp
out
adc
stc
stc
inc
xor
(bad)
fisttp
ss
rdmsr
inc
repz
repnz
push
shr
mov
mov
arpl
test
push
je
repz
xor
icebp
call
mov
mov
std
adc
sub
ins
xor
cmp
adc
daa
mov
mov
adc
jo
stos
(bad)
cmp
ss
lahf
cmp
inc
int
in
push
rol
mov
mov
mov
in
push
add
xchg
sti
xchg
or
retf
pop
inc
mov
jo
fst
mov
mov
jo
mov
mov
int3
jmp
mov
push
inc
add
xchg
mov
or
sbb
push
push
mov
pop
jge
retf
jns
jle
cld
aad
cdq
mov
jge
in
xchg
outs
popa
in
mov
retf
ret
pop
add
mov
lods
push
outs
sub
xor
fisubr
dec
or
sbb
sub
inc
mov
lds
adc
mov
jl
cwde
stos
icebp
inc
ins
imul
inc
xor
ror
cmp
fscale
sub
inc
sbb
pop
or
ror
sbb
add
retf
xlat
dec
ret
into
sti
ins
jmp
(bad)
rcr
xor
pop
hlt
dec
ret
in
bound
inc
xor
mov
jmp
mov
cmp
sub
xor
enter
pop
fidivr
adc
test
data16
inc
push
jbe
mov
int3
into
arpl
jns
loope
fisttp
cmp
retf
cwde
mov
ja
jmp
das
loop
mov
push
ret
add
mov
(bad)
das
sahf
shl
cmps
sbb
push
dec
pop
pop
iret
clc
add
mov
loope
ins
push
jmp
cs
xor
aam
add
mov
mov
cld
(bad)
scas
test
int3
fs
cmovge
mov
add
fs
add
mov
mov
adc
jnp
jnp
xor
xor
sbb
sbb
inc
push
cmp
mov
movs
in
xlat
jp
fsqrt
mov
sub
push
push
push
popa
loope
out
dec
lea
pop
cwde
mov
jo
shl
sti
adc
lahf
fcom
push
fsubr
ins
push
retf
xchg
cli
cmp
push
sub
inc
jns
cmps
mov
rcr
dec
(bad)
pop
les
push
stos
sub
sbb
pushf
or
jae
frstor
out
fidivr
ja
enter
push
pop
and
mov
repnz
cmp
fdiv
je
retf
xor
pextrw
lods
cli
movs
aam
jmp
outs
pop
in
ret
push
(bad)
pushf
dec
or
cmp
ss
bound
shl
and
xor
mov
mov
inc
pop
std
idiv
sbb
sub
pop
fbstp
fadd
mov
mov
mov
cmc
inc
stc
pushf
mov
or
mov
daa
fst
jnp
xchg
repnz
jae
jle
sbb
dec
pop
int3
mov
and
pop
outs
das
ss
cmp
jle
inc
pop
sub
ficom
add
out
repz
loop
loope
add
xchg
mov
and
xchg
push
dec
popf
mov
cwde
fidivr
xchg
inc
mov
call
add
and
movs
ins
js
out
gs
int
push
jmp
inc
add
loopne
and
int
fwait
pop
rol
mov
(bad)
pushf
test
test
cwde
test
inc
mov
pop
mov
pop
mov
inc
mov
outs
pop
mov
(bad)
ins
test
dec
xchg
push
ins
pop
push
xchg
jno
jbe
je
lock
xor
inc
inc
and
stos
call
and
and
scas
and
sbb
inc
loope
jo
stos
test
shr
cwde
jbe
sbb
inc
nop
push
out
mov
ret
mov
nop
cli
mov
pop
pop
lea
adc
sbb
mov
inc
inc
push
popf
icebp
out
clc
lods
xchg
test
retf
pop
mov
push
pop
inc
pop
mov
fucomi
sbb
adc
nop
aas
inc
dec
sbb
pop
test
std
pop
test
fild
call
int3
in
dec
add
xchg
mov
inc
inc
pop
ja
cmc
sub
mov
lea
sbb
mov
dec
or
jmp
or
stc
sub
add
sbb
sbb
cmp
fisttp
gs
mov
mov
pop
pop
ret
aaa
ret
push
mul
es
(bad)
push
fwait
xchg
outs
sbb
xor
push
mov
fiadd
xchg
xchg
outs
pop
scas
xlat
or
push
mov
xchg
push
hlt
aad
shl
jne
pop
aaa
outs
pusha
mov
push
outs
xchg
adc
repz
clc
mov
outs
call
pop
cwde
int3
inc
push
sub
fsub
mov
mov
clc
std
and
jbe
or
pop
pop
shl
mov
cmp
loopne
fdivr
outs
adc
out
rcr
jb
sub
add
mov
lock
xchg
fistp
push
pushf
mov
adc
ficomp
ins
test
into
and
rol
adc
test
jmp
cmps
adc
adc
push
lock
mov
ss
pushf
adc
out
cmp
fld
dec
out
inc
jae
test
jno
in
or
(bad)
sti
lock
out
fwait
rcr
push
movs
test
and
std
call
cmp
jae
xor
jbe
jmp
lods
sub
scas
push
pop
out
or
push
cmp
mov
mov
out
jmp
push
push
xchg
sahf
push
pop
js
mov
sbb
fcomp
jle
(bad)
xchg
je
aad
sub
je
mov
sub
into
(bad)
inc
stc
int3
xchg
mov
mov
sub
in
movs
jmp
pop
call
jne
adc
fsubr
dec
push
lds
cmp
outs
xchg
and
jp
fldenv
fbstp
mov
aaa
pop
repz
inc
mov
xchg
mov
retf
adc
jge
(bad)
sbb
push
out
stos
ja
mov
mov
lock
jle
out
inc
or
retf
int3
jg
mov
pop
stos
push
ss
(bad)
movs
popf
mov
mov
lahf
dec
jp
(bad)
mov
mov
pop
dec
inc
jmp
mov
(bad)
pop
fstp
and
pop
adc
adc
ins
rcr
outs
pop
cmp
push
movs
loopne
or
les
int3
add
add
hlt
int3
push
adc
mov
lock
sbb
xchg
into
div
xor
or
fimul
mov
xchg
dec
jno
cmps
in
push
das
cmp
dec
dec
fistp
and
repnz
arpl
sub
or
inc
lods
jle
adc
or
jg
adc
mov
lea
stc
and
jmp
push
add
test
dec
mov
cld
sti
mov
adc
and
mov
(bad)
in
sbb
jmp
pop
ds
mov
ret
(bad)
into
ror
jecxz
pop
mov
add
ins
fdivr
jne
push
retf
jecxz
cmp
jns
or
(bad)
xor
in
add
ret
sahf
and
rcl
movs
fsubr
fdivr
shr
hlt
nop
fist
test
and
add
or
outs
mov
dec
mov
cmc
push
mov
push
sbb
mov
rcr
movs
mov
shl
int3
clc
jg
arpl
cwde
ins
loope
jne
jmp
out
xor
mov
ret
out
add
xchg
xor
mov
dec
sti
outs
aaa
adc
jecxz
mov
xchg
sub
and
adc
inc
add
test
in
adc
aam
add
inc
retf
(bad)
bound
call
test
push
lds
repnz
stos
ror
shl
or
mov
fscale
mov
aam
scas
cmps
mov
repz
into
pop
(bad)
daa
mov
imul
add
sti
icebp
imul
data16
(bad)
cwde
bound
cdq
dec
imul
es
pmullw
xor
sbb
dec
fstp
not
pop
daa
add
dec
aas
je
mov
jnp
xor
cli
cli
sbb
test
ins
mov
jno
pop
push
out
jmp
repz
daa
(bad)
dec
loopne
mov
add
movs
mov
pop
mov
pusha
mov
jo
daa
lock
xchg
mov
in
test
push
jae
scas
fwait
inc
cmp
enter
mov
mov
xchg
das
cmc
and
pop
xchg
mov
fxch
xchg
int3
icebp
sar
das
xchg
lock
int
xlat
adc
(bad)
push
sbb
mov
push
and
cdq
(bad)
ret
and
sbb
fs
mov
adc
notrack
call
inc
mov
mov
inc
push
jno
shr
push
adc
shr
rol
add
ret
retf
and
mov
mov
loopne
and
jne
jg
outs
repnz
out
ret
pop
pusha
push
sahf
(bad)
test
mov
sbb
sub
inc
push
push
sbb
sbb
pop
add
dec
add
or
push
pushf
dec
mov
(bad)
pop
add
out
xchg
xor
fsubr
pusha
jmp
jb
mov
out
mul
adc
(bad)
test
mov
or
adc
or
xor
arpl
or
xchg
cmp
pop
adc
inc
mov
repz
enter
cmps
mov
jb
jl
imul
cmp
add
and
push
mov
addr16
sbb
(bad)
aad
mov
mov
xchg
jno
pop
mov
popa
stc
adc
imul
outs
gs
sar
pop
ins
into
not
fadd
arpl
fwait
cwde
div
cld
add
mov
inc
fdiv
(bad)
xor
mov
pop
(bad)
std
inc
dec
xor
jmp
jg
jmp
fistp
pop
adc
jl
in
call
shld
movs
pop
icebp
xor
sti
rol
call
sbb
mov
int3
fcos
sahf
out
xchg
in
mov
bound
lea
int
push
cli
pusha
in
cmp
and
push
enter
or
daa
jp
push
jns
fmul
call
ret
xor
stc
lock
jge
xor
iret
lahf
in
aad
call
push
ins
into
ror
jmp
shl
pop
cmp
pushf
movs
xor
aad
inc
aaa
push
mov
aas
(bad)
pushf
cmps
jge
scas
push
mul
cli
push
clc
jg
mov
fnstcw
jbe
cmp
jae
pop
test
jg
sahf
adc
push
rcr
push
lea
(bad)
inc
rol
shr
mov
(bad)
loope
stc
jb
out
test
adc
jbe
or
push
push
sbb
dec
mov
stos
xchg
xchg
div
test
pop
mov
out
rol
lahf
enter
mov
cmps
lea
jb
xor
mov
mov
enter
loop
mov
push
out
or
dec
inc
(bad)
xchg
retf
call
ret
xor
dec
movs
sbb
enter
xchg
lock
lods
pop
sbb
mov
call
leave
ficom
xchg
into
inc
das
jp
cmp
addr16
sbb
pop
adc
push
jecxz
ja
push
adc
iret
call
aam
adc
popf
cmc
fadd
jno
cmp
imul
bound
fwait
push
cmp
loope
xor
xchg
xor
dec
push
pusha
cmp
call
fistp
mov
mov
das
mov
pusha
sbb
ret
fwait
lock
jns
cli
push
(bad)
(bad)
xchg
xchg
cmp
xlat
jmp
add
xchg
xchg
repz
mov
push
pop
mov
sbb
add
ror
cmps
jl
sbb
scas
mov
enter
dec
(bad)
int3
loop
dec
ret
(bad)
xchg
push
ss
shl
adc
ret
xor
ss
add
data16
rol
popf
push
psubq
mov
inc
jbe
add
mov
addr16
jmp
mov
(bad)
(bad)
icebp
daa
js
fnstsw
mov
les
dec
jb
adc
ss
popa
jo
into
movs
jo
xchg
adc
mov
fcmovnbe
sbb
sub
mov
mov
or
jbe
outs
xor
mov
mov
lock
xor
icebp
sbb
cwde
dec
pusha
aaa
and
mov
cmps
enter
fcmovne
cmps
lods
icebp
add
jo
sbb
int3
pop
push
cli
ror
fwait
xor
push
int3
push
mov
mov
push
pop
loopne
fidiv
sti
sbb
dec
inc
retf
aaa
je
adc
pop
loopne
ss
pushf
sub
sbb
call
cld
int3
and
inc
mov
sub
jno
mov
clc
div
(bad)
loope
mov
outs
std
xchg
and
ficomp
test
xor
xor
xchg
int3
rol
pop
loopne
lods
cwde
dec
cwde
sti
stos
and
out
or
lds
add
test
pusha
push
mov
mov
xor
(bad)
pop
mov
push
jb
mov
cmp
imul
jecxz
mov
popf
sar
int3
add
in
shl
es
and
aad
mov
mov
mov
sti
arpl
jge
out
daa
dec
dec
int
jb
adc
cmp
pop
add
call
sbb
or
jl
sub
dec
nop
es
jp
ins
cli
js
push
jno
push
jmp
into
sti
add
pusha
cmp
sahf
ins
iret
xchg
aas
jns
mov
jae
and
mov
loopne
scas
xor
jge
das
mov
loopne
jp
push
dec
adc
inc
in
and
pop
mov
jge
adc
inc
stos
std
sti
fstp
add
pop
mov
add
out
loop
push
cmp
pop
nop
xchg
push
push
imul
lea
fsubr
int
and
or
mov
inc
nop
scas
xchg
sub
push
lahf
std
(bad)
xchg
inc
pop
mov
repz
mov
int3
fwait
push
fwait
das
cmp
cwde
arpl
sar
mov
stc
and
push
push
or
xchg
add
imul
pop
pop
xchg
xor
cmps
in
inc
in
mov
sti
sahf
outs
mov
or
xor
cmp
inc
mov
aas
mov
mov
and
inc
lahf
outs
fld
dec
(bad)
push
fcmovnu
cmp
pop
inc
fadd
bound
aam
lea
jbe
sub
cmps
shl
sti
sub
(bad)
fnstsw
(bad)
cli
push
pop
xor
gs
mov
inc
xor
cs
xlat
jae
mov
fsubp
test
les
dec
in
(bad)
ret
pop
call
xchg
mov
cld
(bad)
std
jns
std
pop
push
adc
push
add
(bad)
icebp
fnstenv
int
es
inc
aam
je
inc
pop
in
call
leave
cmc
(bad)
sub
addr16
imul
iret
into
xchg
push
call
dec
arpl
or
sub
sbb
in
dec
mov
lock
loopne
push
daa
mov
xor
in
xchg
mov
mov
add
jge
jg
test
ins
cli
mov
stos
push
pop
ins
cmp
leave
sbb
out
push
pop
dec
mov
cwde
ret
xchg
adc
jl
nop
sbb
lahf
pop
test
dec
add
adc
adc
add
xchg
push
js
imul
rol
icebp
adc
add
aas
sti
gs
or
mov
jge
or
xchg
dec
outs
fld
pop
dec
jae
call
mov
lahf
push
xor
fisttp
dec
mov
xor
imul
in
lods
ins
and
push
adc
cwde
nop
xor
sahf
fidivr
dec
pop
adc
aam
js
addr16
cmp
or
xor
sbb
jae
aas
fwait
mov
popa
loope
jge
add
adc
mov
imul
add
retf
xchg
dec
mov
sar
xchg
fisttp
pop
jp
and
loope
shr
adc
call
fnstcw
adc
or
test
addr16
stos
pushf
popf
xchg
pushf
jo
pop
div
adc
add
push
push
scas
push
loopne
imul
xchg
out
out
in
adc
dec
iret
and
xlat
lahf
adc
out
fisttp
and
mov
fsubr
xor
ds
jp
js
daa
add
xor
shr
push
lds
mov
je
arpl
mov
js
fcmove
mov
sahf
sub
cmp
and
push
arpl
xor
jmp
outs
hlt
test
cmp
xchg
dec
outs
sbb
pop
outs
jg
clc
sbb
add
out
popa
push
mov
xor
ss
push
loop
xchg
int
pop
push
mov
pop
jmp
inc
cld
sbb
mov
out
sub
mov
pop
mov
mov
fwait
sub
adc
test
outs
movs
fimul
jnp
es
icebp
repz
rol
repnz
adc
cdq
mov
push
sub
mov
ret
sbb
add
adc
xor
mov
sar
xchg
retf
out
pop
loopne
sub
mov
sbb
loopne
mov
push
(bad)
hlt
fist
xor
loop
inc
adc
xchg
pop
push
lea
xchg
inc
(bad)
or
sbb
jecxz
lea
cli
mov
retf
xor
mov
lods
mov
xor
iret
ja
dec
jmp
test
hlt
sub
sub
lahf
test
sbb
mov
mov
and
repnz
xchg
pop
ss
popf
ss
test
out
sbb
in
jno
dec
and
inc
or
popa
shr
out
test
in
push
fimul
clts
int
retf
cld
xchg
aas
add
frstor
outs
xchg
mov
call
cwde
mov
fwait
jl
push
mov
mov
mov
dec
push
inc
mov
mov
jne
push
inc
cmp
dec
aad
add
std
fst
add
ins
inc
iret
out
fstp
mov
bound
aas
push
in
lds
push
push
sbb
dec
lods
adc
mov
sbb
and
loop
xchg
cmp
mov
std
push
and
and
test
mov
sti
jne
inc
sbb
aam
mov
retf
mov
dec
test
or
jp
out
xchg
lock
test
sahf
xor
dec
pusha
arpl
and
mov
mov
retf
in
(bad)
dec
or
ret
pop
aad
lods
scas
jbe
stos
iret
stos
call
outs
sar
push
or
dec
cld
xor
adc
jle
repnz
cmp
pop
cmp
add
jns
sub
inc
sbb
imul
mov
mov
sbb
js
cmp
enter
clc
in
inc
mov
sti
mov
ffreep
add
adc
dec
jmp
add
and
(bad)
add
nop
test
jl
mov
xor
(bad)
mov
push
(bad)
and
cmp
(bad)
add
sti
or
and
retf
sti
dec
jmp
icebp
popf
inc
add
jmp
mov
mov
movs
fbld
sub
sub
add
mov
int
or
mov
pop
jge
xchg
mov
pmulhw
and
pop
push
pusha
(bad)
push
pop
leave
add
(bad)
rcr
xchg
pop
xchg
mov
repnz
daa
cmps
or
pop
pop
jg
ret
sahf
dec
clc
popf
das
adc
ret
inc
ret
fild
cmp
outs
shr
test
dec
cmp
mov
stos
lock
addr16
fiadd
add
cmp
in
aam
inc
in
inc
or
cmp
fs
retf
mov
push
mov
cwde
inc
or
push
xor
jmp
in
loope
dec
std
inc
retf
es
jns
mov
mov
mov
xchg
push
fcmovne
xor
(bad)
adc
fdivr
adc
(bad)
and
push
(bad)
loopne
stos
jno
ltr
(bad)
repnz
jb
mov
add
add
stos
adc
sub
xchg
push
pop
mov
dec
mov
clc
xchg
or
repz
mov
cs
sbb
and
inc
push
sub
pop
push
push
iret
sbb
mov
fdivr
push
pushf
or
(bad)
cmps
mov
push
mov
int3
sub
out
(bad)
cmp
push
cmp
pushf
stos
pop
mov
dec
mov
push
sbb
pop
scas
jmp
(bad)
ins
leave
and
sub
jne
add
push
xchg
imul
(bad)
ds
xchg
test
pop
mov
add
mov
(bad)
loop
sbb
cmc
xchg
pop
rol
test
mov
dec
iret
cmp
in
out
cmp
aas
in
cmp
call
sub
sub
lods
push
mov
jl
jle
xor
xchg
daa
dec
add
clc
mov
aaa
hlt
xchg
lods
fidiv
push
iret
aad
sar
sbb
or
jne
and
aad
jo
stos
sub
cs
jmp
push
addr16
cmp
out
fisub
adc
in
mov
nop
movs
call
inc
(bad)
fild
jle
scas
add
adc
or
sbb
jle
je
xchg
daa
retf
lods
xor
sub
ja
cmp
xor
dec
pop
rol
(bad)
cdq
ret
mov
sub
div
mov
daa
mov
rol
xlat
pop
imul
adc
push
mov
ins
xor
xchg
xchg
jmp
dec
push
lss
or
sub
adc
test
sbb
and
inc
lods
outs
out
cld
aad
xor
jge
cs
dec
push
push
lahf
out
arpl
inc
or
add
bnd
mov
and
dec
call
jae
dec
and
push
pop
mov
mov
mov
fbstp
repnz
hlt
or
xchg
bound
sti
(bad)
jo
cmc
cmps
pop
xor
push
mov
xor
mov
mov
cdq
in
cdq
call
test
cmps
add
cmp
int
ins
in
out
lods
out
rcl
push
push
adc
cmp
or
inc
out
push
movs
js
xor
or
fld
imul
sbb
inc
mov
test
mov
inc
add
pop
movs
sbb
popf
test
mov
push
cmp
mov
call
ret
push
push
out
and
and
mov
outs
dec
push
ror
sbb
cld
sub
in
push
dec
jmp
jb
(bad)
fcomp
push
mov
xchg
xchg
inc
out
adc
sbb
and
or
mov
mov
nop
jp
std
imul
cmp
mov
stos
mul
mov
sub
mov
cs
jg
jmp
mov
xor
aam
mov
aad
dec
std
popf
mov
movs
adc
pop
gs
dec
test
sbb
sbb
add
adc
int
inc
dec
cwde
push
dec
cmps
fwait
call
sbb
sub
add
mov
sub
jns
scas
inc
mov
in
in
lds
xchg
neg
shl
xchg
xor
mov
stos
pop
push
fst
push
push
cmp
adc
js
adc
sbb
jmp
cwde
dec
out
lea
fisttp
addr16
mov
jno
jb
xchg
fsub
fidivr
fnsave
gs
into
in
mov
mov
push
adc
sbb
(bad)
outs
in
out
add
or
leave
xchg
outs
out
outs
adc
sub
hlt
inc
xor
daa
(bad)
pop
sub
outs
or
ret
test
add
test
adc
push
xchg
sub
lds
sti
xor
dec
mov
jle
cs
xchg
sbb
sub
lock
push
mov
scas
inc
ret
sub
imul
add
(bad)
mov
test
mov
pop
rcl
inc
xchg
and
ds
fild
add
mov
pop
fwait
and
jmp
jbe
test
pop
mov
je
rcr
call
punpckhwd
out
pop
and
call
xlat
mov
xor
repnz
(bad)
ins
(bad)
or
(bad)
sbb
xor
call
mov
stc
and
mul
jne
mov
sbb
push
dec
icebp
mov
daa
out
xchg
ins
inc
out
inc
hlt
rcr
jl
push
fs
sahf
jbe
aas
cmp
enter
lock
jb
mov
out
sbb
shl
div
jmp
dec
add
sahf
inc
sti
jno
test
sbb
and
ror
pop
fs
sbb
xchg
stos
es
mov
jg
jbe
and
stos
xchg
int3
mov
repz
push
inc
xchg
mov
leave
ds
popa
and
inc
popf
leave
out
imul
inc
dec
push
xchg
gs
(bad)
pusha
jg
ins
or
xor
hlt
in
dec
hlt
pop
inc
push
data16
gs
dec
push
mov
fstp
cld
sub
lods
bound
mov
jg
xchg
cmp
pushf
lock
stos
pop
cmp
std
lods
outs
mov
lahf
add
sbb
sbb
jnp
push
imul
inc
mov
inc
push
pop
add
fnstsw
sub
mov
fmulp
mov
add
scas
mov
and
pop
lea
ds
hlt
(bad)
out
jecxz
or
cmps
or
loopne
arpl
sbb
pop
jmp
add
cmp
ss
call
sbb
arpl
out
rol
xor
jns
sar
adc
mov
mov
push
(bad)
out
fistp
ret
push
mov
data16
cs
cmps
dec
cwde
out
xor
mov
and
xchg
adc
rcr
xor
pop
xchg
aad
aam
xor
scas
xchg
mov
jmp
hlt
mov
les
sar
test
sub
jmp
xchg
das
into
and
in
adc
xor
mov
loope
(bad)
into
xor
pop
xchg
jne
jl
repnz
sub
dec
arpl
pop
inc
cmp
(bad)
mov
mov
jecxz
mov
scas
cmp
add
mov
lds
dec
push
xchg
pop
call
repz
mov
mov
movs
inc
adc
and
pop
adc
sbb
push
mov
mov
stos
cdq
ins
jg
mov
scas
xlat
outs
lods
and
sbb
push
lods
mov
ds
sahf
push
inc
lods
out
mov
adc
adc
arpl
inc
mov
(bad)
dec
ins
imul
adc
in
loopne
push
mov
push
cmp
das
cmp
rcr
cli
sbb
shl
es
call
or
fsub
or
and
add
inc
mov
loopne
retf
cmp
mov
cmp
test
pop
fistp
add
ja
aam
mov
(bad)
fwait
jmp
iret
sub
fst
mov
(bad)
fisub
mov
repnz
sub
scas
retf
xchg
dec
jns
mov
cld
movs
mov
dec
sbb
cmp
(bad)
test
sbb
clc
pop
jb
jle
dec
fistp
jmp
inc
enter
sbb
aam
mov
push
mov
int
push
mov
adc
sub
push
js
dec
cli
pop
arpl
ins
cmps
jbe
clc
push
push
push
aam
mov
cli
xor
movs
int3
test
je
(bad)
ror
fwait
cdq
push
mov
add
(bad)
bound
xchg
push
xlat
les
xor
mov
xchg
mov
jbe
push
cmp
(bad)
mov
cmp
repz
dec
add
cmp
sbb
ins
and
xchg
test
add
pop
xchg
sbb
mov
retf
fwait
and
call
fld
out
imul
mov
pusha
mov
dec
add
push
iret
mov
inc
inc
sub
setl
pop
test
cmps
and
mov
push
dec
loop
cmc
mov
test
cmp
aam
jl
mov
nop
scas
clc
loope
test
sahf
mov
jnp
xchg
sbb
mov
mov
push
or
repz
dec
lods
pop
xor
pop
scas
sahf
aad
hlt
sub
cmp
int3
mov
mov
sub
xor
cdq
xor
inc
mov
cmps
mov
sub
cwde
dec
(bad)
add
shl
movs
mov
call
sbb
mov
lea
in
ror
ins
pop
loop
add
jg
dec
pop
jmp
sti
js
jmp
mov
lods
cmp
add
jo
jo
cdq
lds
xchg
or
and
jmp
hlt
pavgb
cs
jne
add
add
cdq
xchg
pop
pop
repz
jmp
add
fcomp
and
push
push
push
fldcw
rol
stc
loop
ss
mov
(bad)
aas
mov
mov
ret
and
jecxz
cmp
jle
adc
or
sar
adc
iret
cmp
xchg
sbb
int3
inc
aaa
sub
enter
pop
pop
cmp
pop
mov
mov
aad
xor
and
add
add
mov
jb
mov
nop
shl
aaa
dec
je
add
test
add
daa
xchg
sbb
push
fiadd
pushf
inc
add
push
sahf
sbb
or
out
data16
sub
rcl
rcl
adc
push
mov
inc
push
and
dec
adc
jo
lods
xchg
mov
lds
(bad)
mov
into
pop
arpl
pusha
cmp
push
scas
es
not
inc
fs
mov
mov
int3
and
mov
aaa
retf
fld
push
sub
lods
jno
jge
jmp
cmp
pop
(bad)
push
xor
and
add
ja
mov
les
adc
mov
imul
(bad)
mov
or
sub
ja
or
lds
pop
shr
call
dec
sti
aas
xor
push
push
sar
into
out
sbb
adc
ins
mov
je
ja
xchg
fs
inc
jle
imul
test
jmp
retf
sub
cmp
clc
pop
pop
jb
pop
mov
or
stos
lahf
push
jl
es
jle
dec
loop
push
shl
fistp
xchg
rol
nop
ret
inc
out
sub
pop
push
fwait
add
mov
mov
rcl
and
push
popa
mov
sub
or
(bad)
jecxz
ja
dec
sub
xchg
dec
out
dec
sbb
mov
aaa
out
jno
mov
ret
ja
or
mov
sub
push
out
int3
mov
and
xchg
enter
push
retf
in
popf
mov
movs
out
out
cmps
inc
inc
imul
js
mov
dec
sbb
aad
cwde
dec
push
call
test
sub
fs
pop
push
fldenv
rol
ror
sbb
arpl
clc
loope
cmp
dec
out
pushf
outs
in
xchg
pop
pop
icebp
pop
outs
test
shl
fucomp
push
mov
mov
add
or
hlt
push
mov
leave
xchg
lahf
aas
pop
cmp
jle
adc
test
push
imul
push
(bad)
fwait
bound
jmp
push
cs
mov
mov
xlat
inc
mov
sub
retf
sbb
sbb
jmp
mov
loope
rcr
ja
sub
xchg
cmp
loopne
xor
clc
xchg
xchg
aad
movs
sbb
mov
xlat
adc
ins
xchg
adc
(bad)
mov
fsub
adc
pusha
and
out
out
jmp
mov
lods
inc
call
inc
pop
icebp
jbe
lods
pop
jo
sub
pop
dec
jbe
scas
nop
int3
mov
mov
leave
aam
mov
inc
fiadd
cmc
xor
cmc
in
push
pop
lds
sub
pop
mov
jmp
(bad)
(bad)
push
dec
in
push
ror
je
or
xor
cli
add
hlt
mov
lods
dec
in
ret
test
adc
sbb
pop
jae
adc
dec
jecxz
(bad)
mov
mov
add
stos
inc
bound
xor
(bad)
jmp
dec
repnz
jg
imul
and
in
arpl
mov
mov
jge
fld
pushf
cmp
pop
pop
cmps
ret
shl
imul
pop
xlat
daa
mov
push
cmp
xor
sub
and
mov
mov
pop
pop
aaa
inc
mov
cwde
jecxz
outs
mov
xor
mov
mov
push
adc
mov
push
scas
push
cwde
daa
(bad)
sub
nop
fwait
dec
inc
sub
jecxz
std
in
adc
push
test
sbb
ins
shl
ja
or
adc
adc
cmc
pop
pop
rcr
rcr
dec
cmc
sbb
std
xor
call
call
push
adc
pop
mov
xchg
into
das
jns
neg
mov
and
adc
xchg
in
push
xor
repz
mov
inc
add
stos
xchg
lods
jns
jae
(bad)
(bad)
jmp
aad
in
rcl
repz
sahf
mov
sub
push
lods
push
repz
daa
sub
icebp
fiadd
bound
aas
retf
mov
ficomp
sub
mov
cmp
pop
jns
inc
pop
aam
jbe
scas
sub
loop
pusha
mov
pushf
aaa
pop
out
(bad)
call
lahf
or
sub
add
jmp
sbb
pop
and
inc
ret
mov
jecxz
push
addr16
push
and
ss
push
lahf
cs
lods
sbb
dec
jecxz
mov
mov
xchg
and
mov
inc
test
imul
sti
iret
xor
pop
stos
lahf
adc
dec
daa
icebp
fwait
sbb
fcmovnbe
push
ss
sub
xchg
call
jmp
test
or
(bad)
sbb
sub
push
js
ins
pop
lea
or
mov
jnp
sub
in
dec
retf
push
ret
stos
neg
jnp
pop
das
in
add
mov
pop
hlt
mov
shl
enter
sbb
inc
fldcw
cwde
iret
arpl
push
sbb
cmp
out
push
mov
xchg
in
nop
inc
sub
int3
lock
rcl
xchg
lods
mov
es
add
sti
fdiv
cs
dec
xchg
jae
ins
jl
ss
add
jo
sbb
stc
test
and
cs
div
and
xor
adc
fld
adc
jnp
bnd
in
imul
daa
out
pushf
cmp
bnd
cld
movs
cmp
sbb
inc
cmp
(bad)
pop
xor
inc
daa
add
cmp
sub
add
(bad)
pop
jp
je
push
mov
xchg
test
aaa
xchg
and
popf
push
cld
or
call
dec
dec
mov
shl
movs
push
dec
imul
push
pop
fwait
push
stos
dec
sti
jle
in
rol
mov
mov
and
(bad)
(bad)
(bad)
out
les
mov
popf
cdq
jmp
inc
out
mov
mov
rcr
fiadd
xlat
xchg
inc
or
mov
mov
paddsb
jno
xchg
es
add
inc
dec
pop
jecxz
adc
mov
dec
out
int3
adc
sub
test
pop
fisub
jne
adc
gs
inc
push
cmp
inc
(bad)
aad
call
sbb
jmp
xchg
dec
imul
mov
pop
sbb
xchg
das
retf
cdq
jno
jmp
arpl
pop
sbb
repz
loopne
loope
int3
rol
and
jnp
pop
aad
movs
in
inc
ficom
test
add
or
inc
ficom
cmp
movs
lods
cmp
scas
sbb
sub
jmp
jmp
sahf
repnz
popf
push
dec
imul
adc
xchg
adc
fnstsw
xlat
mov
iret
push
or
xchg
retf
pop
jge
pop
and
xchg
sub
(bad)
scas
adc
mov
cpuid
mov
mov
add
and
fwait
add
push
add
or
cmp
leave
xor
ficom
mov
pop
inc
cld
mov
por
fimul
enter
gs
mov
sbb
inc
jecxz
scas
sti
movs
cli
out
sub
cs
cmc
adc
mov
add
jno
mov
mov
loope
mov
shl
push
push
pusha
fidiv
dec
loop
and
mov
fadd
inc
daa
inc
test
cld
mov
js
cld
and
dec
or
xor
popf
jle
xchg
adc
fisubr
jge
push
xchg
dec
pop
jmp
xor
sub
or
dec
add
mov
jge
push
or
ss
mov
(bad)
stos
push
add
mov
inc
dec
cmp
cmp
arpl
jmp
arpl
lds
ins
mov
retf
shr
add
xchg
fcomp
adc
adc
test
fwait
movs
mov
and
push
sbb
das
pop
imul
mov
push
sub
imul
scas
fild
mov
mov
mov
jmp
or
mov
mov
sub
std
mov
enter
loop
pop
and
movs
(bad)
jne
cmps
lods
pop
xor
add
adc
cmps
push
dec
dec
repnz
add
add
js
cmp
xchg
jp
fst
fsub
ja
add
jmp
addr16
shl
sub
cmp
retf
xor
add
fnstenv
xchg
fsubr
pcmpgtw
clc
pushf
ss
push
dec
mov
aam
add
mov
sti
sbb
mov
and
jecxz
mov
xchg
int
sub
push
jecxz
cmp
fiadd
dec
fiadd
and
retw
aaa
xor
(bad)
xor
and
sbb
push
or
pop
dec
enter
jne
lahf
loope
test
mov
shl
and
push
push
retf
xchg
jnp
(bad)
std
push
pushf
inc
or
push
inc
test
push
ret
mov
xor
into
sbb
jno
push
jg
into
mov
popf
call
jl
ins
ficomp
(bad)
mov
rcl
addr16
sbb
pop
inc
clc
add
cwde
mov
jl
shl
jmp
xor
mov
and
mov
cli
inc
push
push
test
mov
cmp
xor
mov
cs
aam
rsqrtps
fdiv
aad
adc
jae
dec
icebp
popa
test
pop
std
pop
or
repnz
sub
mov
push
xor
mov
pushf
jl
aam
out
push
push
mov
push
cwde
cmc
pop
(bad)
cmp
pop
mov
push
ret
sbb
int
pop
data16
pop
jg
adc
imul
and
sahf
and
out
pusha
pop
call
ins
test
pop
adc
pop
das
ror
and
das
sub
mov
cli
pop
popa
stos
jbe
xchg
xor
jae
xchg
inc
push
enter
mov
gs
lock
mov
fcom
int
mul
push
mov
rol
(bad)
(bad)
mov
jne
loope
mov
loope
aam
dec
out
dec
cmp
pop
stos
and
add
dec
xrelease
xchg
or
ror
icebp
adc
pop
mov
aaa
xor
fs
adc
in
dec
cmp
xor
pushf
sbb
shl
fisttp
fld
ja
cld
jg
(bad)
fwait
(bad)
out
jae
pop
or
inc
adc
in
repz
stos
mov
and
xchg
xchg
add
mov
pop
jno
add
push
ins
xor
lds
mov
push
and
adc
enter
aaa
mov
mov
imul
in
ret
test
sti
pop
mov
and
addr16
mov
add
shr
bswap
sub
jae
push
or
inc
mov
iret
jnp
adc
inc
xchg
repz
pop
clc
leave
rcr
arpl
jne
outs
outs
dec
mov
mov
pop
and
cli
or
jg
add
jae
pushf
ret
or
mov
popf
sub
mov
loopne
xlat
int3
xchg
ds
sub
mov
adc
int
nop
push
bnd
loope
xchg
xchg
mov
cmps
ret
outs
mov
mov
dec
cmp
inc
ror
jg
int3
or
sbb
cld
ds
fld
add
in
std
jl
push
mov
dec
mov
pop
outs
(bad)
push
loope
or
js
xchg
addr16
inc
lahf
rcr
(bad)
xor
jae
or
out
clc
es
xchg
mov
enter
movs
loop
(bad)
xor
jb
jge
clc
cmps
mov
pop
fisttp
xchg
mov
xor
rcr
and
test
ror
push
loope
push
jne
mov
dec
mov
sbb
push
pop
mov
push
xchg
fdivr
das
inc
mov
mov
mov
int
xor
xchg
popa
sub
pop
xchg
xchg
or
pop
sub
xor
nop
ss
xlat
adc
sub
out
push
fisub
xchg
fwait
add
or
test
mov
xlat
mov
pop
pop
fwait
push
mov
push
stc
xchg
clc
adc
mov
cmp
in
mov
data16
dec
(bad)
shl
stc
mov
test
mov
jnp
jmp
imul
(bad)
ror
and
dec
ins
das
rcl
adc
cmp
imul
sbb
out
retf
int3
mov
xchg
pop
lods
mov
fcomp
(bad)
(bad)
jbe
push
test
jae
fistp
ror
retf
loop
mov
ss
or
mov
imul
or
ss
jp
(bad)
mov
les
jg
scas
sbb
rcl
lock
popa
adc
cmp
rcr
fs
mov
int
sub
pop
fild
movs
out
push
movs
inc
sub
push
out
push
loop
or
add
loop
mov
shl
xchg
and
test
sub
lods
pushf
addr16
xor
imul
add
push
pop
mov
cmps
xor
cmps
in
or
int3
(bad)
push
into
fst
sar
ret
daa
in
movs
daa
cmps
shl
mov
sub
lea
cld
aam
fwait
sub
and
push
pop
test
test
push
sub
pop
mov
sbb
in
push
jo
dec
int3
imul
pop
pop
fdiv
mov
stos
mov
popa
call
jno
mov
sti
xchg
xchg
pushf
out
jo
mov
mov
icebp
inc
ds
dec
pop
ds
mov
pop
cmp
xchg
mov
cwde
or
cwde
push
sysret
out
mov
and
jecxz
mov
(bad)
xchg
pop
js
fdivr
inc
and
idiv
int
mov
xchg
push
jne
test
cdq
inc
adc
push
or
adc
cmp
(bad)
jb
es
mov
outs
cmc
push
fdivr
adc
pushf
xchg
cmp
lock
into
(bad)
jmp
imul
into
xchg
dec
mov
inc
daa
or
ss
and
shl
push
scas
push
jb
and
std
or
pop
lds
iret
popa
icebp
js
(bad)
xor
mov
mov
imul
mov
cmp
mov
xchg
repnz
cwde
sub
repnz
xchg
pop
or
sbb
fs
xchg
or
or
pusha
jae
jmp
and
sbb
out
cld
cwde
push
or
xor
gs
fistp
mov
dec
push
call
xchg
jg
int3
hlt
stos
sbb
jne
cmp
dec
or
ins
mov
xor
pop
lea
and
sbb
jmp
mov
repz
or
out
popf
ret
jb
xor
and
sub
and
cdq
loope
out
(bad)
fist
in
add
cli
mov
sbb
call
ss
sub
sar
call
xchg
push
dec
jns
loopne
sahf
mov
inc
and
test
popa
int
jnp
sub
adc
push
mov
push
popf
out
in
xchg
inc
test
fcomp
lods
or
scas
add
rol
or
clc
jbe
pop
inc
add
mov
sub
mov
addr16
mul
dec
mov
inc
mul
cdq
ret
dec
sar
or
mov
cmp
xchg
dec
call
dec
call
or
daa
xor
leave
cli
movs
not
or
add
cwde
mov
adc
out
mov
bnd
int3
fisttp
xchg
pop
push
cs
pop
inc
lock
jle
sbb
fadd
mov
mov
scas
test
lahf
and
xor
sbb
ins
repnz
rol
pop
repz
fidivr
lock
dec
mov
ins
push
dec
jmp
icebp
adc
ins
dec
pop
into
ja
inc
push
(bad)
inc
mov
movs
add
add
test
int
aas
mov
push
bound
dec
call
xlat
bswap
xchg
pop
fwait
fwait
push
or
push
cmp
sub
iret
sub
or
sub
sub
ret
fsub
inc
mov
mov
adc
(bad)
cmp
mov
cld
push
stc
and
mov
in
jp
adc
mov
push
std
push
push
adc
or
pop
mov
(bad)
hlt
and
jp
je
inc
rol
or
mov
or
repz
mov
inc
test
pop
mov
push
in
iret
pop
mov
cmp
pop
add
pop
je
retfw
popf
loop
sahf
je
xor
inc
pop
and
push
int
cdq
lods
add
ins
add
xor
jge
repz
and
cmps
mov
push
aam
jmp
std
dec
xchg
lock
in
pop
cmp
dec
push
push
ja
ret
movs
inc
int
repz
jmp
repz
sbb
jno
push
mov
test
pop
xchg
lods
outs
fsubr
cld
cdq
call
xlat
add
sti
shr
pop
dec
jbe
push
loope
push
mov
scas
aad
cmp
jnp
dec
and
jmp
xor
cmps
mov
push
inc
ja
xchg
inc
pop
inc
stos
mov
(bad)
cmps
imul
adc
out
adc
iret
fwait
mov
jb
movs
out
and
popf
les
or
adc
jle
sbb
and
or
adc
ror
dec
pop
push
rol
xlat
jne
es
push
scas
enter
call
pop
cmps
sub
push
mov
outs
adc
(bad)
retf
cwde
inc
and
pop
inc
inc
loope
fwait
sbb
xchg
lock
sub
mov
push
pop
loopne
xchg
pop
mov
fwait
pop
lock
or
aam
aam
mov
xor
push
data16
fs
shl
adc
imul
imul
jmp
in
iret
adc
and
inc
or
push
dec
dec
add
inc
xchg
cld
in
int3
lods
pop
inc
push
mov
les
push
scas
or
adc
xor
out
jmp
fadd
jl
adc
lock
call
cmp
and
idiv
adc
inc
jl
js
ficomp
aas
idiv
xchg
(bad)
int
ja
aaa
cs
ror
icebp
jnp
sahf
rol
loopne
(bad)
pop
out
sbb
push
js
iret
psrlw
into
xchg
cmp
mov
jne
cmp
xchg
mov
jmp
mov
cdq
mov
repz
imul
fnstenv
xlat
ficomp
lea
ror
jns
fdivr
rcl
in
add
retf
push
idiv
(bad)
mov
popf
scas
mov
push
cmp
aas
mov
xor
pop
push
push
xchg
jecxz
push
push
out
sbb
ret
ds
push
lahf
jmp
into
stc
mov
mov
movs
jo
pop
xor
xor
xchg
inc
fidivr
inc
out
mov
jb
into
jno
adc
(bad)
mov
mov
mov
inc
fcomp
inc
clc
xchg
push
fnstcw
mov
cld
ins
mov
pop
stos
scas
mov
jb
jmp
xchg
sub
ret
lods
push
push
cmp
aad
fist
or
(bad)
rcl
cli
scas
mov
xor
fbstp
cmp
inc
mov
loope
movs
movs
fcmovbe
xchg
push
mov
push
sbb
sub
xlat
(bad)
mov
cmp
ss
arpl
jge
xchg
lock
xor
mov
lods
(bad)
cmps
scas
mov
ror
mov
call
retf
fdiv
test
jb
out
mov
into
sbb
pop
out
mov
inc
aad
bound
gs
sbb
test
mov
jbe
adc
dec
xlat
and
sbb
inc
(bad)
sti
paddusw
in
adc
divps
add
ss
dec
xor
cmps
(bad)
lock
xchg
popf
aas
jnp
es
xchg
test
mov
mov
loopne
in
fst
daa
add
arpl
dec
jecxz
mov
aad
push
dec
mov
popa
jnp
lahf
and
ds
push
adc
xor
dec
je
cmp
sbb
inc
cmp
int
lds
sbb
rol
xchg
loope
aam
dec
out
mov
enter
into
mov
push
out
sub
scas
jmp
sub
shl
add
xchg
sbb
pushf
mov
repnz
jmp
in
frstor
pop
inc
xor
or
(bad)
aad
je
cwde
add
(bad)
push
jnp
cmp
xor
mov
jl
loopne
dec
cmc
and
repnz
fimul
jno
retf
push
movs
popa
pop
inc
cs
mov
sub
sbb
mov
dec
into
mov
aad
or
sbb
push
enter
(bad)
mov
or
femms
and
fwait
and
push
sar
(bad)
lock
int3
push
mov
(bad)
dec
mov
pop
or
lds
imul
retf
fwait
xchg
mov
jo
pop
adc
test
(bad)
test
fidiv
mov
push
mov
push
mov
add
enter
sub
out
jae
cwde
(bad)
loop
push
add
popf
lods
lds
out
sar
sub
out
outs
lock
jns
push
sar
cmps
mov
std
cs
fmul
out
xchg
ins
retf
jne
sbb
mov
loope
push
movs
aad
xchg
es
add
mov
cmc
xchg
test
mov
mov
popa
and
test
xchg
and
lahf
ret
in
ja
test
push
shl
lods
mov
rcr
movs
dec
gs
xchg
rcl
xchg
clc
lods
xor
dec
mov
jl
and
je
jecxz
aaa
push
xchg
add
mov
adc
sbb
dec
in
ret
jbe
mov
push
cwde
addr16
add
xchg
push
mov
cmp
sti
xchg
xor
pop
sahf
in
ret
mov
add
jno
in
sti
sub
mov
movs
dec
sbb
add
adc
mov
sub
xchg
and
mov
test
daa
add
pop
jbe
lds
mov
add
adc
fdiv
push
nop
adc
mov
mov
rol
xlat
jg
shl
add
xor
rcl
cmp
lahf
cmp
push
int
repz
xchg
mov
and
stos
fstp
xor
ror
mov
mov
cwde
shl
lds
mov
ficom
mov
jne
movs
(bad)
mov
dec
jnp
push
pop
neg
cs
sar
dec
mov
(bad)
push
mov
sbb
call
mov
xchg
or
lods
xchg
icebp
fidivr
add
call
popa
cmp
jne
xor
cld
xchg
movs
jmp
push
and
pushf
ficomp
mov
or
jmp
inc
cmp
pop
lods
dec
js
pop
mov
add
mov
mov
and
movs
stos
fld
add
dec
add
xchg
inc
ins
inc
push
rcr
mov
icebp
cmc
enter
inc
clc
ins
or
sti
out
sub
add
adc
sbb
(bad)
push
dec
and
aad
push
into
sub
bound
push
mov
jns
call
out
les
mov
(bad)
(bad)
or
leave
popf
jb
mov
lods
add
lds
push
ds
cs
inc
loop
sbb
bswap
jbe
xchg
sbb
ja
mov
aam
or
add
nop
enter
out
sbb
fnstsw
int
mov
xlat
adc
inc
or
fs
inc
mov
adc
jmp
push
inc
retf
dec
mov
mov
xchg
inc
dec
sub
add
rol
nop
inc
mov
pop
stos
fdiv
sbb
and
fs
rcl
clc
stos
std
fs
jg
scas
dec
mov
mov
addr16
je
xchg
dec
dec
(bad)
xor
out
(bad)
in
pop
repz
out
cdq
movs
jl
mov
out
mov
jecxz
pop
clc
cwde
inc
push
sub
xchg
fcomp
jmp
popf
cld
movs
sar
cmc
test
pusha
dec
sbb
sti
and
std
jne
sahf
mov
dec
cmps
mov
dec
cdq
push
call
stos
ret
lods
loop
mov
xchg
(bad)
fucomp
pop
cli
leave
inc
out
add
in
mov
add
jg
sbb
dec
ds
mov
push
adc
pop
or
mov
jge
cmp
fldenv
retf
out
inc
loopne
mov
mov
mov
je
icebp
dec
cmp
jb
lods
xchg
das
cmps
pop
iret
aas
repz
sbb
sbb
mov
nop
xchg
dec
pop
pop
sbb
or
pusha
mov
push
inc
sbb
mov
nop
das
call
xor
fsubp
shr
aad
jne
adc
out
es
jne
gs
and
js
in
and
aaa
pop
sar
das
and
cwde
mov
retf
in
or
in
fidivr
in
lock
lds
test
inc
shl
and
cmp
loop
dec
sub
das
push
mov
in
imul
fwait
jl
std
sahf
(bad)
test
pusha
leave
mov
lods
inc
inc
xor
xor
mov
jmp
adc
imul
xor
loop
aaa
mov
ret
sbb
(bad)
jno
or
sub
push
push
jnp
xchg
pop
jg
mov
aam
mov
cmps
mov
mov
mov
fdivrp
pop
or
and
retf
and
mov
hlt
mov
adc
ja
dec
mov
out
pop
(bad)
fdiv
lahf
(bad)
xchg
stc
xor
gs
push
setle
xor
test
clc
stos
adc
outs
push
jge
sub
int3
lea
cmps
fcomp
mov
xor
mov
(bad)
cmp
call
test
jmp
arpl
cmp
mov
dec
test
sub
mov
and
push
xchg
bnd
test
jae
clc
push
xchg
(bad)
std
test
popf
xchg
xchg
daa
(bad)
mov
shl
push
xor
xchg
lea
aas
mov
xchg
fs
push
hlt
mov
pop
retf
sbb
mov
in
les
push
add
mov
mov
cwde
mov
or
push
xchg
mov
cmps
test
pop
cmps
inc
inc
stos
retf
sbb
xor
mov
sub
(bad)
fsub
call
sub
test
hlt
jbe
add
xchg
inc
aad
push
inc
ins
clc
test
inc
mov
push
mov
fbld
(bad)
in
pop
rcl
jb
push
push
nop
cmps
out
add
movs
adc
push
pushf
aam
xor
and
test
fisub
or
arpl
sub
push
add
dec
in
lea
add
leave
test
mov
in
sbb
mov
mov
mov
push
ins
cmp
cmp
jb
sub
mov
nop
in
and
jmp
out
dec
sti
jnp
dec
pop
icebp
add
pop
stos
jne
fisubr
stos
xor
xor
ja
adc
cs
nop
push
(bad)
xchg
popa
movs
cmp
add
sbb
jg
mov
lods
cmp
aas
in
ror
push
jbe
not
pusha
jmp
mov
cmp
add
test
jae
sub
mov
sbb
movs
cwde
(bad)
push
popa
and
xor
imul
add
pop
shl
mov
or
push
mov
xchg
nop
jnp
pop
pop
fsub
push
xchg
xor
mov
cwde
add
mov
bound
mov
fistp
mov
mov
call
scas
and
imul
fst
push
retf
inc
(bad)
test
jne
dec
fs
sub
les
push
mov
icebp
cmp
popa
mov
jne
xor
mov
daa
mov
sub
and
(bad)
(bad)
mov
pop
jmp
das
and
mov
sbb
push
add
jle
sbb
push
into
cmp
pop
out
test
add
jp
xor
(bad)
jmp
cmp
setb
mov
idiv
shr
jmp
mov
mov
push
pop
(bad)
imul
clc
push
popa
pushf
in
nop
mov
nop
mov
pop
fdiv
hlt
out
outs
xchg
mov
pop
lods
ficom
cdq
daa
inc
lods
ret
xor
jb
sub
aam
jge
mov
ds
push
mov
mov
push
addr16
sbb
cmps
pop
es
sbb
pop
pop
mov
(bad)
jae
and
fisubr
add
dec
push
cmc
call
and
loope
add
pop
cli
mov
mov
test
pop
mov
dec
aad
jo
icebp
mov
call
mov
neg
ret
fs
les
xor
in
cmc
push
or
push
sbb
dec
sub
add
hlt
test
pop
loope
push
xchg
cmp
xchg
in
out
and
dec
neg
xor
cli
cmp
in
sub
push
cld
movs
adc
sbb
xchg
shl
je
pushf
test
pop
es
cmp
jge
mov
scas
icebp
test
jne
hlt
jnp
and
jnp
shl
mov
(bad)
xchg
(bad)
xor
call
push
(bad)
lock
popf
cmps
xchg
xor
sbb
sub
pop
mov
(bad)
fsub
xor
inc
xchg
ret
or
pop
aaa
pop
adc
rcl
dec
mov
pushf
in
sbb
pop
mov
push
lods
out
cmp
sbb
lods
lods
(bad)
rol
inc
ja
rcr
mov
pusha
cwde
mov
mov
jbe
lods
or
mov
fdiv
cs
call
call
int3
and
jg
or
xchg
xchg
xor
(bad)
ins
loope
out
aas
cmc
mov
adc
ret
jne
mov
fs
xor
xlat
and
adc
fistp
mov
cmc
test
test
dec
rcl
dec
bound
mov
push
mov
dec
and
(bad)
fild
fld
rol
test
inc
outs
mov
pop
mov
adc
out
or
pop
lods
test
loopne
cld
add
in
test
fcom
sbb
push
cmp
pop
mov
leave
aam
stos
loop
jle
cmps
xor
rcr
stos
(bad)
xor
jno
pop
neg
push
jl
pushf
sbb
xor
jmp
or
jns
sbb
dec
(bad)
dec
stos
leave
les
gs
das
rcr
stc
pop
mov
add
cli
gs
adc
pop
movs
or
(bad)
mov
cli
retf
push
xchg
cmp
stos
js
mov
mov
mov
aad
add
push
hlt
xchg
xor
loopne
aaa
ins
jl
js
sbb
add
lods
es
sub
cs
lods
cwde
mov
cmps
adc
fistp
in
ds
mov
mov
in
mov
mov
sbb
ret
adc
gs
jecxz
mov
mov
(bad)
icebp
sldt
popf
push
dec
sbb
cmps
add
inc
in
inc
push
repnz
fdivr
xor
jb
mov
jmp
cmp
cli
dec
shl
pop
push
mov
call
add
movs
bswap
xchg
js
dec
mov
mov
mov
fdiv
mov
cmp
adc
out
call
ret
sbb
ret
push
shr
fucomip
mov
sti
stc
(bad)
rcr
fnstcw
sub
and
push
ins
lods
mov
fstp
and
xor
ret
stc
outs
pop
repnz
(bad)
mov
mov
sub
jne
or
inc
loop
out
mov
lods
fsub
add
or
pop
movs
les
pop
adc
popa
mov
not
adc
call
inc
retf
mov
and
ret
mov
pop
in
ins
leave
mov
pcmpgtb
pop
xchg
jae
leave
int3
out
out
jle
add
fisttp
sbb
jb
pop
popa
gs
outs
xor
lds
aas
xchg
mov
pop
test
push
inc
adc
push
push
mov
or
scas
sbb
xchg
cmc
push
mov
cmp
shl
fidivr
sar
xchg
or
pop
or
bound
movs
push
out
dec
(bad)
mov
dec
hlt
repz
cli
jbe
retf
adc
xchg
leave
div
hlt
in
mov
jnp
mov
mov
add
sub
adc
outs
fsin
imul
lock
or
xchg
mov
lds
mov
fstp
mov
arpl
fs
cmp
lea
xor
cmc
test
mov
jge
mov
inc
lea
dec
inc
shl
mov
cmp
sbb
mov
sub
sbb
push
cli
retf
inc
cli
fsubr
adc
(bad)
cmp
mov
data16
xor
cmp
sbb
aad
add
movs
fisttp
cwde
push
push
scas
je
cmps
into
pop
call
hlt
mov
clc
enter
adc
xor
ja
int3
jns
mov
std
clc
in
jnp
(bad)
sbb
xchg
std
lahf
inc
add
push
push
adc
cli
add
jo
inc
mov
inc
mov
mov
jl
adc
leave
aam
in
jp
mov
ror
push
aam
retf
pushf
das
jp
or
xchg
mov
call
sbb
cmps
mov
outs
rcl
rol
push
xor
(bad)
xor
add
test
xchg
and
cmp
loop
out
inc
xchg
push
push
cli
mov
cmps
and
add
call
jne
mov
jle
cmps
inc
or
test
inc
mov
out
mov
or
xor
scas
pop
cmp
std
or
jo
retw
push
frstor
(bad)
xor
mov
inc
or
cmp
jmp
out
(bad)
mov
sbb
retf
mov
call
jg
push
xchg
ret
in
(bad)
jg
cmp
mov
into
xor
pop
popf
cmp
and
or
stos
iret
xchg
add
cmp
clc
mov
sbb
xchg
ret
sub
ror
push
xor
push
mov
ss
push
push
mov
inc
fs
cmc
jle
inc
mov
ins
div
cmp
call
dec
ds
leave
enter
std
pop
pop
lods
(bad)
les
sub
call
push
jp
lods
data16
xchg
loopne
nop
dec
std
call
retf
ret
(bad)
fistp
jl
inc
outs
retf
pop
xor
adc
and
jbe
sbb
and
mov
pop
ss
cmp
sub
mov
push
addr16
push
sub
xchg
sub
mov
aas
les
ss
loop
jge
jno
adc
cdq
ret
mul
jle
imul
xor
push
shr
ja
xor
pop
cmc
jae
lea
pop
xchg
cwde
je
jb
js
out
inc
fbld
rcr
das
jp
sub
pop
lods
loopne
and
(bad)
pop
fs
lds
lods
dec
jo
mov
retf
add
add
sar
xchg
add
inc
pushf
mov
scas
push
cld
repz
mov
stos
cmp
sbb
outs
xor
mov
push
inc
adc
mov
push
lahf
jp
arpl
adc
jp
push
movs
jnp
push
mov
pop
inc
in
add
push
and
fwait
sbb
loopne
inc
mov
neg
cmp
stc
jmp
fucomi
mov
mov
clc
adc
push
shr
sub
xchg
test
inc
mov
inc
jns
cdq
cwde
cdq
cld
jne
mov
xchg
out
fs
popa
push
xchg
xchg
inc
push
jmp
cmp
sub
and
xor
pop
push
in
stos
es
dec
or
cmp
pushf
shl
les
sub
aad
rol
fnstsw
int3
sub
and
jmp
add
jmp
jae
cmp
jmp
outs
jne
retf
mov
xchg
rcr
sub
dec
aaa
fdivr
popa
loop
push
mov
sub
jo
and
mov
ret
push
outs
lea
imul
adc
xchg
test
jge
mov
mov
das
into
cmp
loop
xchg
loop
xchg
mov
sbb
pop
inc
out
ins
push
pop
daa
das
aas
stc
lds
dec
jp
push
ins
call
xchg
add
cmps
mov
ret
popf
inc
scas
pop
mov
jmp
imul
leave
(bad)
retf
push
cwde
shl
(bad)
into
pop
inc
adc
sbb
adc
mov
push
retf
mov
sahf
mov
pop
cdq
in
imul
push
xchg
and
rcl
push
sub
inc
lods
inc
cwde
adc
push
dec
xor
out
adc
mov
mov
mov
inc
mov
mov
int
je
mov
fnstsw
xchg
mov
jge
sub
pop
pop
aam
pop
movs
mov
fwait
rol
imul
ret
sub
ret
jmp
add
call
or
clc
popf
pop
ret
fist
ds
xor
dec
or
in
mov
sbb
sub
xchg
pop
sub
movs
ret
rcr
iret
cmp
ja
dec
inc
or
mov
bound
ret
adc
(bad)
mov
pusha
mov
and
pop
cmc
and
pop
mov
jns
cs
inc
repnz
shl
cmp
aas
jno
gs
mov
retf
xchg
sbb
xchg
xchg
das
jae
movs
int
aas
ret
loop
pop
call
bswap
cmp
icebp
adc
push
inc
test
adc
pop
xor
add
or
mov
xchg
dec
or
push
popa
xchg
dec
adc
dec
es
sub
adc
mov
test
pop
popf
sbb
push
xor
push
jne
ficomp
jg
pop
outs
jmp
stc
fst
mov
scas
retf
movs
enter
jmp
and
out
fs
xchg
mov
xor
out
jecxz
sbb
mov
mov
test
enter
stos
out
jg
mov
push
out
pop
test
cwde
fwait
xchg
stos
xchg
fadd
xor
mov
scas
call
mov
mov
fisub
mov
jmp
add
nop
test
cmp
aas
mov
cmp
call
xor
push
cmp
and
stos
cwde
cmp
fldcw
push
call
xchg
loop
int3
enter
mov
repnz
pop
xchg
and
and
sub
add
mov
jns
dec
jo
call
cwde
popa
cmps
mov
imul
inc
not
sub
int
add
mov
pop
je
mov
addr16
fild
push
or
jae
xchg
lods
sbb
mov
daa
test
mov
aam
sti
dec
mov
inc
shr
shl
popf
test
mov
fwait
int
in
ret
shl
mov
cld
fist
xchg
mov
fcmovnb
(bad)
mov
mov
loopne
and
pusha
and
xor
(bad)
jmp
jp
fisttp
push
jmp
shl
push
cmp
push
sbb
inc
inc
int
imul
xor
mov
jg
mov
adc
je
fidiv
xchg
(bad)
outs
sbb
adc
loope
(bad)
cmp
cld
mov
jl
aaa
clc
(bad)
or
dec
pop
out
call
je
mov
add
mov
(bad)
jb
adc
ret
retf
nop
sbb
cwde
push
pop
dec
aam
mov
and
push
lock
inc
test
mov
mov
mov
cld
in
loopne
mov
or
lahf
pop
enter
cmp
push
inc
mov
mov
retf
pop
ins
and
adc
(bad)
test
mov
xchg
movs
aaa
sbb
idiv
pop
jno
aas
out
mov
xchg
in
mov
push
outs
mov
or
popf
int
sbb
or
pop
cmp
fcmovnbe
into
jo
cmp
jmp
pushf
es
mov
int3
mov
das
push
nop
push
fwait
xor
dec
mov
cmp
fmul
repnz
lea
mov
jge
imul
cwde
neg
ins
xor
jp
mov
std
sahf
aam
jmp
ja
pop
adc
push
push
out
push
or
test
mov
data16
sti
shr
inc
inc
ret
lods
mov
loopne
jns
stc
mov
repnz
jbe
pop
push
mov
out
stos
cmp
jmp
test
pop
and
dec
cmps
pop
loop
loopne
or
fisubr
movs
pop
aad
ret
and
sbb
ja
xchg
push
outs
cmc
cli
inc
cmp
xchg
sahf
pop
in
(bad)
xor
add
add
cwde
nop
outs
mov
add
pop
jns
or
sbb
popa
add
xchg
ret
sbb
loope
test
fwait
push
or
push
(bad)
(bad)
scas
(bad)
jle
or
loopne
push
rcl
std
fwait
test
aad
and
stos
and
aas
adc
cld
pop
push
xchg
jo
push
pop
push
in
repz
jnp
ror
cdq
fcmovb
jle
loop
pop
movs
mov
dec
push
ja
das
scas
movs
push
mov
es
add
dec
stos
inc
lds
push
mov
cmp
dec
pop
pop
or
ror
sbb
push
stos
mov
sub
popa
mov
push
xor
ja
pop
jmp
mov
jg
stos
sbb
repz
add
daa
and
xchg
int3
fs
and
not
loope
xor
mov
rcr
add
pop
push
mov
adc
jo
pushf
pop
mov
(bad)
stos
fstp
xchg
enter
rcl
cld
int3
aas
lahf
repz
gs
nop
jecxz
xchg
push
push
cmp
mov
mov
daa
mov
adc
inc
dec
pusha
xchg
and
pop
cmp
adc
sahf
jp
jmp
je
mov
xor
enter
sub
out
out
xor
push
fs
adc
push
lock
sub
imul
add
test
jne
cdq
pop
xor
test
mov
adc
cmps
scas
dec
push
adc
dec
sbb
inc
inc
push
jmp
or
rcl
mov
fnstsw
das
stc
lock
mov
pop
aam
mov
xor
and
stos
cmp
push
test
jge
xor
mov
adc
dec
mov
pop
xchg
(bad)
cmp
mov
push
stos
and
jno
movs
ins
scas
xchg
add
retf
ss
add
cdq
sahf
stos
imul
or
mov
(bad)
and
adc
sti
inc
cli
shl
inc
ins
nop
sub
jp
pop
out
pop
icebp
push
(bad)
call
scas
push
daa
and
push
icebp
lea
cmp
out
sbb
das
xchg
je
aaa
into
cmp
pop
into
mov
pop
pushf
in
cdq
inc
out
bound
clc
mov
mov
and
das
xlat
lea
or
enter
pushfw
aam
cmp
and
pop
out
pop
xor
out
lea
ja
out
sbb
sub
pop
cwde
cmc
cs
ror
dec
imul
rcl
in
fld
(bad)
mov
pop
add
push
mov
cmp
loop
adc
cmp
mov
jle
xor
cli
jle
lods
scas
sahf
shl
stos
dec
test
lds
clc
jnp
fistp
fdiv
mov
or
pop
movs
jg
push
sar
pop
mov
test
cmp
repz
adc
leave
ror
or
mov
adc
aad
clc
jno
mov
scas
jno
mov
dec
lock
out
mov
data16
xlat
ins
or
push
nop
xchg
aas
test
sbb
xlat
mov
jge
cmp
lock
test
add
mov
hlt
xor
inc
ret
test
push
leave
or
sti
pop
(bad)
sar
sbb
inc
mov
pop
xchg
addr16
or
jno
mov
adc
(bad)
cmp
dec
idiv
push
dec
and
push
mov
daa
popf
xchg
arpl
aaa
out
add
mov
mov
pop
push
in
pop
hlt
sbb
adc
out
aam
jae
jecxz
dec
(bad)
mov
ja
mov
pop
mov
js
mov
push
fdiv
sbb
in
and
mov
mov
or
pop
push
add
push
push
call
mov
or
ds
(bad)
icebp
aaa
push
mov
std
data16
cdq
xor
lods
repz
sbb
aam
(bad)
adc
sbb
push
ins
xor
inc
push
push
push
test
unpckhps
xchg
test
jne
sti
sbb
sub
dec
jg
mov
fist
out
dec
adc
sbb
jae
pop
aas
adc
inc
ins
and
data16
ficom
mov
fld
pop
sbb
or
sub
cdq
fistp
mov
cmovl
push
mov
pop
mov
js
and
imul
mov
pusha
test
daa
pop
jbe
inc
sbb
push
push
pop
mov
aaa
ja
cmp
mov
jb
mov
fdivr
movs
lods
sub
es
lahf
inc
lds
int3
push
loopne
adc
(bad)
and
mov
gs
xlat
leave
sub
leave
lods
nop
mov
lods
outs
out
sbb
movs
leave
sbb
and
xchg
(bad)
adc
int3
js
jmp
push
cmp
mov
mov
xchg
imul
test
test
movlhps
adc
xchg
push
xchg
test
xor
mov
shl
mov
and
pop
mov
sti
mov
fisub
or
cmp
pop
ud0
icebp
sbb
scas
mov
push
mov
mov
add
inc
(bad)
xchg
(bad)
into
adc
mov
push
fwait
rcr
pop
mov
sti
es
dec
mov
js
mov
int3
cwde
inc
ret
and
add
or
in
data16
retf
sub
dec
sbb
cld
xor
scas
push
push
lods
movs
jne
stos
das
lea
mov
pop
(bad)
mov
sbb
or
cmp
adc
add
add
pop
addr16
mov
mov
(bad)
(bad)
add
xchg
bound
jmp
and
mov
pop
lahf
jae
call
mov
xor
sub
aad
cmp
mov
jno
mov
fld
add
adc
loope
sbb
sub
mov
adc
pusha
imul
xor
add
lods
cmp
nop
stos
or
mov
mov
pusha
sub
dec
jbe
(bad)
retf
xor
jmp
cmp
(bad)
push
pop
test
int3
adc
cli
add
test
outs
fs
pop
lods
fs
aam
(bad)
or
dec
cmp
or
sub
push
or
mov
or
mov
rcr
xor
ret
jmp
xchg
jecxz
add
dec
lds
jae
retf
cld
in
fcomi
mov
and
retf
aam
std
(bad)
sti
sti
lds
shl
cli
mov
pusha
leave
add
pop
in
cs
pop
addr16
jno
retf
dec
lods
mov
mov
cmp
pop
add
jno
rcl
mov
lahf
not
sar
inc
shl
js
out
sti
lahf
aam
mov
adc
pushf
neg
dec
out
iret
hlt
push
call
pop
loope
jmp
mov
push
out
cli
mov
retf
xor
sub
imul
cmc
jl
mov
into
pop
dec
push
jb
sbb
fdiv
gs
mov
aam
mov
js
in
idiv
sub
les
push
cmp
and
jle
inc
js
sbb
repnz
into
ret
pop
add
ds
push
push
inc
cmp
mov
cdq
icebp
pop
in
scas
mov
adc
inc
xor
inc
sbb
fisubr
sub
or
in
sar
fwait
inc
sub
sub
dec
popa
push
retf
sar
ret
(bad)
into
xchg
movs
or
lods
add
push
jbe
in
mov
xchg
ss
loop
in
add
xor
add
popf
mov
jne
and
icebp
lods
and
call
pusha
popa
cmp
cmc
or
dec
retf
out
popa
mov
fs
and
adc
mov
fbld
gs
lods
cmp
sahf
xlat
fsub
cdq
cdq
add
pusha
cmps
icebp
xlat
data16
mov
fwait
(bad)
shl
xchg
aam
xchg
mov
and
mov
sahf
shl
ja
push
daa
cmp
mov
push
fisttp
cmc
pop
add
jg
outs
mov
push
pusha
hlt
fidiv
cdq
cdq
popf
sar
and
mov
scas
jnp
and
xlat
jl
and
push
jo
or
pop
xchg
aaa
cmps
push
int3
fnsave
xor
sbb
or
movs
mov
cmp
jmp
xor
xor
repnz
cmp
(bad)
pop
js
sbb
loope
mov
jmp
and
push
xchg
cmp
enter
jne
popa
xor
les
sbb
adc
(bad)
mov
fisttp
sbb
inc
sahf
push
and
cwde
fs
daa
pop
dec
imul
ins
ss
(bad)
fdiv
sbb
pop
add
bswap
cmp
inc
mov
pop
xor
xchg
fidivr
mov
stc
cmc
popa
add
fisubr
ja
stos
mov
shl
out
mov
repz
sahf
mov
xor
push
adc
sub
pop
sub
xor
dec
rol
es
dec
or
jb
cmp
stos
cmp
jbe
cwde
push
mov
in
(bad)
clc
cmp
sub
mov
push
mov
jae
rcr
test
inc
ja
push
retf
jbe
cmps
mov
add
pextrw
and
mov
mov
xchg
jno
test
sub
mov
xchg
cmps
jae
push
adc
sar
out
dec
or
or
loop
shr
or
rcl
sub
mov
mov
shl
xchg
dec
push
jne
fs
loop
fiadd
cmp
cwde
popf
cmp
push
(bad)
sar
dec
push
or
sahf
inc
mov
or
jne
cmp
xchg
sub
addr16
add
push
call
stos
jae
add
xlat
sbb
and
mov
shr
mov
out
jns
cmps
push
push
mov
or
outs
call
or
mov
jmp
outs
jb
and
int3
mov
cmps
out
nop
jle
push
push
int3
dec
popf
inc
mov
mov
mov
xchg
cmp
push
outs
jno
xor
inc
fcom
rol
mov
sbb
push
call
cmp
mov
xor
sub
jnp
stos
mov
jae
sub
sub
mov
inc
mov
std
enter
mov
jne
enter
push
inc
push
push
rcl
cmp
add
adc
xor
mov
ss
aaa
stc
in
scas
inc
loop
pushf
ret
outs
stos
mov
or
cmc
xchg
fistp
jns
and
in
jbe
add
xor
addr16
sbb
fmul
xchg
mov
adc
sbb
inc
push
jl
pushf
in
adc
xor
push
dec
mov
in
mov
push
sti
in
add
imul
xlat
dec
mov
mov
imul
pushf
cmps
call
sahf
stc
jns
js
mov
sub
js
pop
aad
loope
jg
sbb
outs
mov
add
cmp
inc
jle
pop
retf
jge
(bad)
jle
xchg
dec
aam
int
cmc
sub
mov
test
and
mov
lds
movs
call
inc
push
xor
jp
daa
push
loope
adc
add
sti
mov
pusha
lds
adc
inc
out
cmp
pop
mov
aam
mov
popf
dec
ins
loopne
and
loope
icebp
fsub
(bad)
lds
(bad)
mov
dec
sbb
jg
(bad)
dec
adc
cmp
xor
lods
call
push
mov
push
adc
rcr
jnp
out
cmp
ins
sub
xchg
push
mov
scas
dec
ins
call
xor
pop
test
bound
lea
cdq
ja
xchg
jmp
xchg
icebp
out
push
sub
out
mov
jb
ins
cmp
bound
and
(bad)
sub
or
addr16
mov
cwde
shr
mov
ret
arpl
and
push
mov
sub
xor
cmc
mov
pop
hlt
aaa
icebp
jb
(bad)
pusha
in
arpl
push
les
adc
mov
sbb
cli
inc
cmp
adc
nop
int3
cmps
loope
xor
xlat
dec
inc
es
and
fs
and
cmps
xor
js
call
inc
aad
cdq
dec
aad
int3
inc
xchg
xchg
out
push
inc
(bad)
sbb
fwait
mov
jp
fnstsw
mov
lahf
shl
inc
cdq
mov
and
repnz
arpl
inc
sbb
pop
sub
dec
nop
push
out
sbb
(bad)
icebp
xchg
jge
nop
xor
retf
fdivr
lods
jb
mov
push
daa
popf
test
rcl
daa
mov
pop
mov
leave
push
mov
out
fdivr
inc
jmp
pop
test
test
test
pushf
and
adc
fistp
sub
ins
jl
int3
in
aaa
sbb
jmp
fcmove
jecxz
mov
fs
inc
mov
push
sbb
icebp
mov
mov
jg
(bad)
arpl
mov
adc
sahf
ds
fucomip
iret
dec
jns
mov
mov
test
sbb
and
lea
xchg
aam
ja
mov
xchg
into
mov
and
sbb
push
push
addr16
inc
push
pop
dec
or
mov
js
jge
push
adc
out
mov
lea
out
fdivr
push
and
jmp
cmps
lds
in
(bad)
aad
and
add
repz
sbb
ss
inc
add
jg
mov
jp
xchg
imul
cmp
dec
test
push
sub
cwde
xor
xchg
outs
cdq
sar
lods
pop
mov
or
adc
push
sar
aad
out
cmp
inc
xchg
retf
ss
lods
xchg
push
leave
or
xchg
(bad)
mov
adc
cmp
int
mov
jl
fisub
cmp
bound
cmps
adc
sti
inc
lods
ins
xor
sub
cmc
in
enter
xor
out
movs
pop
xchg
mov
adc
adc
loope
rcr
mov
pop
and
fcomp
out
cmc
mov
scas
or
or
(bad)
jns
into
idiv
mov
outs
retf
iret
add
movs
lods
or
repz
stos
cld
test
xchg
jg
pop
mov
xchg
or
inc
outs
inc
mov
inc
cmp
call
add
jo
mov
test
cmp
cmps
dec
lock
outs
rcl
cmp
rcl
mov
cmp
add
sub
and
fwait
or
xchg
xor
movs
mov
sar
lahf
cmp
arpl
xchg
aas
sti
cmps
dec
shr
aaa
in
stos
je
popa
sti
outs
lods
je
lds
inc
sbb
outs
fistp
push
(bad)
pop
add
leave
or
jb
out
push
fld
push
fcom
sar
xor
and
fwait
call
or
jmp
mov
inc
cli
in
mov
jge
mov
call
ins
jge
aam
aas
enter
pushf
cld
mov
dec
lock
jle
fisttp
adc
int
movs
jbe
shl
outs
cs
sbb
sbb
test
sahf
mov
jbe
sub
xchg
div
dec
into
call
dec
pop
push
pusha
add
mov
add
(bad)
rcl
and
and
imul
rol
sbb
and
out
push
cmp
movs
bound
xchg
jne
(bad)
sar
js
push
mov
(bad)
hlt
pop
jle
daa
hlt
cmc
mov
push
dec
loope
inc
imul
into
ret
xor
xchg
popa
cmps
inc
outs
mov
(bad)
popa
shr
outs
outs
shl
sbb
mov
aas
jp
arpl
mov
mov
ins
cld
lock
fnstsw
fcmovb
jmp
jecxz
or
cmp
dec
(bad)
jmp
je
imul
pop
adc
hlt
shr
dec
jne
call
cwde
in
shr
mov
call
mov
or
stos
(bad)
popf
add
mov
mov
bound
hlt
xchg
fnsave
fadd
adc
pop
(bad)
adc
jns
inc
mov
jns
fist
nop
rcl
xlat
or
shl
mov
(bad)
push
mov
leave
adc
rcl
mov
call
jne
jge
push
fwait
test
hlt
into
cmp
pop
mov
add
movs
cmp
jle
push
push
mov
sub
retf
jg
xchg
sbb
xchg
int
sahf
std
push
loop
into
cmp
gs
jecxz
and
and
adc
inc
(bad)
int3
sub
and
jnp
mov
push
and
daa
pop
dec
arpl
repz
dec
add
rep
inc
fwait
xor
aad
and
das
xor
in
inc
or
push
inc
stc
lods
inc
xchg
and
aad
not
or
nop
les
pop
loop
and
sbb
(bad)
cmps
or
sub
mov
add
or
ins
mov
lahf
xor
add
std
pushf
cwde
jb
shl
mov
retf
jbe
cmp
xor
shl
mov
sub
call
pop
pop
in
inc
sti
stc
sub
cmc
dec
mov
pushf
out
test
dec
mov
loopne
dec
adc
mov
stos
out
es
mov
mov
mov
jecxz
mov
icebp
xchg
(bad)
ds
(bad)
adc
pop
outs
(bad)
aas
sbb
mov
ror
cs
xchg
fdivr
clc
jl
gs
int3
out
jne
cmps
stos
lea
out
ficomp
xchg
jge
ret
fist
test
inc
stos
mov
push
jecxz
inc
call
jmp
outs
xor
inc
enter
or
daa
enter
xor
mov
mov
icebp
xchg
les
in
jnp
xor
aaa
rcl
add
rep
sbb
cmc
cs
test
add
push
and
sbb
add
mov
out
mov
repnz
lea
leave
adc
push
or
mov
aas
xor
pop
adc
imul
clc
xor
fiadd
and
repz
mov
daa
stos
and
pusha
aad
dec
mov
ss
fwait
loopne
mov
rcl
push
icebp
mov
mov
in
ror
das
cmp
int
xchg
push
cwde
mov
cld
mov
add
adc
test
jno
push
(bad)
faddp
inc
push
ins
mov
mov
pop
frstor
out
dec
mov
or
je
pop
mov
(bad)
jge
push
pusha
out
gs
sub
ins
inc
(bad)
sahf
ins
call
es
and
fstp
in
psllw
jb
call
sbb
xor
ret
int
leave
sub
movs
pushf
icebp
test
push
in
jns
ds
sub
pop
cmp
or
xor
mov
dec
jp
sbb
test
push
mov
push
repnz
scas
jl
es
pop
or
clc
out
sub
xlat
leave
movs
(bad)
pop
xchg
outs
test
ss
sar
sub
cmps
cmps
ins
or
inc
inc
or
stc
dec
sbb
test
push
jl
leave
into
inc
retf
dec
adc
sub
imul
sub
in
mov
das
mov
sbb
pop
pop
mov
and
fisub
movs
lock
es
cwde
and
sti
into
in
ds
sahf
add
hlt
dec
fiadd
mov
pop
rcl
push
mov
shl
jge
ss
js
inc
dec
out
fdiv
and
push
cs
into
ins
mov
inc
pop
cld
out
into
add
in
sbb
sti
mov
jno
push
pop
mov
ret
(bad)
out
cmp
sub
fnstsw
(bad)
mov
push
cdq
cmc
scas
lock
mov
pushf
sahf
xchg
adc
psubusw
inc
popa
mov
mov
cld
xchg
repz
xor
or
or
stos
jle
in
pop
or
add
push
and
sahf
inc
dec
inc
sub
xor
scas
sbb
push
sbb
xlat
fdivr
jge
neg
out
shl
sub
fs
call
mov
jo
or
mov
movs
push
xor
fmul
dec
stc
adc
in
imul
or
pop
mov
or
fidivr
jbe
and
mov
pop
mov
les
aaa
adc
sbb
retf
in
jmp
fisub
xor
mov
call
in
out
bound
call
rol
dec
mov
inc
imul
jge
call
lods
dec
fwait
shr
mov
out
pop
(bad)
cmps
pop
inc
pop
in
xchg
jg
xor
inc
or
cld
popf
push
adc
mov
imul
add
mov
pop
mov
fadd
adc
adc
dec
test
lds
lods
push
fisubr
pop
pop
ss
rol
pop
fcom
add
dec
mov
sar
popa
xchg
jl
xor
push
test
aam
pop
mov
xchg
imul
adc
loope
push
jge
adc
neg
dec
mov
lock
xchg
jo
fsincos
sbb
pop
hlt
jl
dec
and
dec
adc
add
xlat
outs
cli
mov
imul
sub
cmps
rcl
out
test
inc
data16
lahf
ret
gs
push
ficomp
push
pop
mov
inc
mov
and
call
fucomi
(bad)
loopne
inc
stc
mov
cld
dec
out
pop
fist
stos
or
out
pop
mov
mov
hlt
out
xor
into
add
loope
mov
pop
enter
data16
inc
inc
sar
xchg
sti
ja
dec
jo
js
cdq
sti
push
test
in
and
mov
fbld
dec
jnp
mov
popa
push
sub
int3
je
ja
in
repnz
xor
fwait
aam
shl
xchg
into
cmc
outs
cmc
aad
jns
pop
sar
pop
sub
std
iret
and
movs
mov
in
repnz
adc
ins
sbb
fst
repnz
retf
clc
outs
fld
pusha
into
jnp
out
int3
in
popf
mov
repnz
test
jo
test
pop
movs
pop
cmp
movs
jo
daa
dec
retf
add
mov
jmp
repnz
jge
out
mov
bound
repz
adc
push
pop
test
mov
mov
xchg
test
jmp
push
mov
xchg
dec
cli
shr
int
out
mov
ds
jb
shl
inc
popf
xchg
out
adc
sbb
(bad)
call
into
neg
sbb
xchg
inc
pushf
jle
aas
(bad)
lods
xor
inc
je
gs
xchg
xor
addr16
cdq
(bad)
xchg
push
movs
mov
scas
pop
xor
dec
mov
cmc
mov
std
leave
add
jl
adc
inc
movs
inc
lods
adc
retf
adc
mov
mov
push
or
pop
into
(bad)
rcl
in
pop
sbb
sbb
dec
mov
lods
adc
jae
imul
cmovb
dec
call
inc
xor
cmp
sub
movs
mov
iret
cmps
mov
imul
xchg
pop
rol
and
sub
aas
cmp
pop
enter
je
rcl
cdq
sub
cmp
scas
mov
cmp
pop
push
sbb
inc
push
int
fwait
retf
sub
mov
pop
jns
xchg
in
pop
fstp
jae
movs
add
lods
gs
ins
mov
jnp
es
mov
cmps
inc
jge
shr
pop
js
jmp
cmp
mov
mov
adc
sub
clc
popf
xchg
mov
cwde
pop
push
push
jno
xchg
cmps
adc
daa
rcr
sub
lds
jbe
inc
mov
cli
into
push
jns
cmp
out
jbe
and
lea
dec
ja
in
neg
mov
gs
ins
scas
imul
jb
mov
int
dec
mov
dec
iret
cmps
jmp
xlat
sahf
test
mov
sahf
nop
xchg
mov
push
sub
and
call
push
jo
cmps
sub
ret
and
stos
mov
mov
es
sbb
push
dec
adc
shl
fnstenv
cmp
xchg
add
jle
jno
cmp
cmp
lock
fwait
test
(bad)
rol
jecxz
push
iret
aas
inc
cmp
push
fcomp
call
sbb
shl
(bad)
shl
xchg
ja
frstor
xchg
aam
out
in
in
sub
and
cmp
inc
retf
aas
cmp
in
stc
js
sbb
inc
outs
pop
mov
mov
pcmpeqd
lods
sub
xor
test
lea
and
je
scas
outs
dec
xor
test
xor
cld
lock
mov
aam
dec
dec
mov
adc
retf
mov
sbb
pop
into
arpl
jmp
pop
shl
cmp
mov
shr
dec
lds
inc
ja
lahf
lock
test
adc
retf
add
je
ret
add
enter
fisttp
(bad)
std
aas
pop
rol
movs
mov
call
mov
jp
mov
leave
sbb
pop
imul
cld
xlat
inc
or
jbe
jmp
mov
pusha
aad
push
sub
ror
ja
xchg
in
(bad)
scas
pushf
aas
xor
out
arpl
ss
(bad)
std
rol
sbb
and
movs
in
sbb
adc
clc
ror
pop
inc
retf
fwait
adc
test
inc
mov
sbb
cli
leave
bnd
and
movs
aam
or
mov
aas
ins
fistp
inc
(bad)
fisub
cmps
and
outs
ss
push
cs
inc
cs
gs
jmp
sub
arpl
xchg
fndisi(8087
cmp
xlat
cmp
stc
movs
(bad)
les
pop
inc
add
mov
not
lods
mov
out
push
pmaddwd
mov
mov
lahf
repz
adc
imul
dec
addr16
gs
in
cld
jno
ret
pop
jb
xlat
(bad)
jo
ins
cmp
add
cmp
mov
cdq
test
cmp
ss
sar
mov
and
sub
inc
leave
fdiv
inc
dec
rcr
and
ins
retf
loopne
xor
inc
loope
enter
daa
push
mov
sub
ret
mov
sub
lahf
mov
mov
pushf
mov
stos
fcom
mov
mov
mov
or
sbb
mov
gs
or
cmc
int
retf
sahf
cmp
fisttp
sub
jbe
sbb
jmp
cmp
jb
iret
mov
add
adc
cld
push
add
fstp
or
dec
rcl
sbb
and
inc
or
mov
pusha
mov
mov
sbb
pop
push
mov
pop
push
xlat
stos
add
inc
and
js
fld
adc
mov
jg
lea
mov
test
mov
mov
jge
jle
lock
iret
mov
inc
jae
stc
dec
xchg
scas
mov
pop
retf
inc
dec
mov
cs
test
addr16
dec
call
cmc
jg
jg
es
enter
scas
(bad)
xor
jge
or
ins
jmp
daa
push
retf
sub
xchg
loop
add
in
push
jmp
pop
adc
cmp
push
retf
inc
cli
imul
add
popa
xor
ss
or
addr16
jg
pop
in
js
ret
pop
mov
mov
add
fwait
loop
iret
mov
jnp
scas
pop
bound
sbb
or
out
neg
jmp
inc
fwait
inc
ins
pop
dec
fidivr
sbb
(bad)
push
mov
and
aaa
fnstsw
test
mov
or
je
out
pop
mov
xlat
stc
retf
sbb
push
add
faddp
leave
std
or
mov
push
jns
aad
push
sub
in
jg
mov
jl
or
popf
mov
mov
daa
cld
or
sbb
fimul
sbb
push
aam
int
aad
nop
jns
or
lods
jmp
sahf
cs
mov
in
cmps
pop
bound
mov
cmp
mov
aam
mov
daa
xchg
pop
pusha
and
std
in
sti
repnz
rol
add
mov
jnp
nop
les
mov
mov
jmp
jns
xchg
xchg
pop
loopne
out
clc
or
adc
sbb
xlat
inc
ja
push
ret
lock
popa
push
adc
sti
xlat
cld
and
cmc
test
out
jae
and
stos
jg
hlt
xor
fcomi
and
mov
add
icebp
sub
outs
cmp
add
inc
add
(bad)
dec
mov
adc
xchg
ja
repnz
mov
xchg
retf
fs
sbb
enter
xor
cmps
lds
hlt
xor
shl
sti
inc
retf
or
mov
inc
sbb
mov
sub
sbb
mov
dec
cmps
fs
mov
outs
pushf
push
test
out
adc
mov
rol
xchg
imul
lods
les
out
sub
jne
inc
or
call
xchg
sub
cmp
jmp
jne
not
pop
xchg
xchg
arpl
inc
cs
xor
cwde
or
cmp
mov
cwde
xchg
mov
dec
hlt
add
mov
mov
std
outs
fwait
lods
imul
scas
out
jg
push
cmp
(bad)
dec
mov
adc
inc
fwait
fs
aaa
addr16
lock
mov
into
or
imul
pop
cdq
sbb
sub
and
fmul
addr16
mov
xlat
pop
mov
mov
push
repnz
retf
xor
cmp
retf
addr16
jb
mov
hlt
sub
jb
cmp
mov
arpl
out
fdiv
jae
fmul
jp
cmc
or
jae
icebp
and
push
pop
icebp
push
ds
pop
xor
int
loope
nop
xor
aad
add
out
adc
xchg
clc
test
sbb
mov
aaa
pusha
loope
out
js
pop
test
xor
inc
pop
jbe
pusha
push
dec
push
loop
(bad)
or
mov
sar
scas
mov
cmp
cmp
ja
adc
and
fstp
repz
push
add
jp
pop
dec
pop
jge
sbb
cld
mov
pop
cs
sub
or
mov
jcxz
jl
and
(bad)
aam
in
dec
and
mov
fldcw
jecxz
data16
and
jne
icebp
cwde
loope
dec
sub
adc
sub
or
(bad)
in
js
enter
xor
xor
rdpmc
mov
cmp
add
sbb
or
nop
cli
les
pop
and
aaa
fist
cmps
imul
or
inc
cmc
xor
bound
add
adc
iret
push
xchg
or
bound
ds
mov
add
sub
enter
and
test
jno
pusha
push
pop
jmp
inc
or
mov
mov
enter
test
not
and
cwde
add
dec
ss
frstor
mov
fist
xor
jmp
push
jl
xchg
rol
xor
adc
mov
pushf
mov
push
test
pushf
out
push
call
push
mov
mov
jp
lods
jle
or
mov
rcr
inc
xor
adc
sahf
hlt
lds
mov
retf
mov
fdiv
sbb
jno
or
repnz
stos
mov
jp
call
adc
sbb
jbe
push
pop
xchg
fwait
cmp
mov
xor
pop
inc
xchg
add
jg
pusha
jp
push
xor
cmp
pop
add
and
inc
dec
push
popa
push
sub
adc
add
stos
mov
cmps
mov
push
dec
cmp
lock
inc
out
sbb
inc
jp
or
mov
mov
xchg
mov
or
test
jne
inc
lock
ss
pushf
and
sub
lahf
out
jl
or
(bad)
out
cld
je
jb
sub
add
mov
mov
imul
call
push
bnd
aam
ret
lds
add
add
push
das
xchg
jle
inc
inc
adc
sub
push
shl
sub
fstp
sbb
sbb
jo
inc
jb
sar
xor
xor
ret
inc
mov
sub
retf
dec
mov
dec
pusha
into
aas
rep
stos
test
neg
sbb
or
hlt
cmp
pop
in
movs
sub
mov
lods
daa
mov
push
cmp
in
mov
adc
bound
xchg
inc
jp
enter
mov
push
call
into
fucomip
jp
or
daa
jbe
cmp
jo
inc
ret
adc
ds
mov
(bad)
pop
ficom
stos
sbb
aad
rcl
shl
pusha
cmp
scas
stc
(bad)
mov
sbb
mov
(bad)
jo
pusha
jb
aaa
mov
jnp
jno
sub
push
jb
daa
xor
add
scas
or
out
fist
mov
cwde
and
std
outs
mov
and
add
test
jne
(bad)
push
in
neg
inc
jo
dec
dec
(bad)
pop
push
lahf
cs
add
in
jbe
push
movs
ror
inc
in
add
sub
mov
xchg
aaa
xchg
js
out
lahf
push
and
xchg
jno
or
sub
ret
adc
xchg
int3
pop
js
ds
mov
fsub
xchg
(bad)
pop
loop
push
cli
xchg
pop
stos
fisttp
out
cmp
mov
pop
mov
ss
dec
les
jne
jge
ja
js
inc
fsubr
and
or
xor
mov
cmp
or
movzx
test
pop
xchg
xchg
cmovo
in
loope
and
mov
jne
fdivr
aam
xchg
(bad)
sar
and
add
cwde
jp
sub
jl
and
movs
fcom
arpl
or
js
xchg
push
leave
or
or
sub
ror
stos
xchg
cmp
cwde
jb
jmp
(bad)
aam
repnz
cmp
leave
cmps
pushw
dec
jne
mov
pop
mov
jecxz
push
jne
imul
add
inc
mov
inc
(bad)
popf
outs
mov
ror
xchg
sbb
jns
add
push
pop
fcmovne
in
pop
add
out
shr
mov
stc
jne
mov
jbe
pop
rcl
push
jbe
jg
ins
test
xor
cmp
adc
jecxz
jne
sbb
test
or
sub
std
pop
adc
ins
sub
pop
dec
mov
ins
mov
jp
dec
cmp
popa
pop
fwait
mov
repz
add
or
je
lds
xor
cli
dec
adc
je
retf
jns
mov
loopne
test
jno
cmp
mov
pop
add
rcl
neg
inc
bound
and
adc
push
sub
stc
cmp
data16
and
sar
scas
and
sbb
and
add
adc
retf
mov
cmps
scas
out
jecxz
mov
sub
in
stos
inc
adc
pop
pop
sbb
jnp
jne
or
inc
mov
outs
push
mov
mov
rcl
repz
sbb
fdiv
xchg
daa
out
jp
movs
pushf
inc
dec
push
pushw
retf
(bad)
sbb
and
ret
xor
and
hlt
ficom
movs
nop
cld
mov
jbe
sub
or
dec
test
lods
add
movs
jae
stc
ins
jo
call
jne
and
fidivr
adc
daa
ins
(bad)
mov
mov
adc
add
ror
bound
fstp
popa
push
pop
cwde
cld
sub
retf
xchg
jmp
xor
add
fwait
mov
mov
std
dec
fcomp
test
pop
call
push
pop
inc
add
je
mov
cmp
outs
int
lods
sbb
sbb
jae
ds
and
mov
adc
les
cld
iret
mov
mul
out
dec
pop
test
mov
sub
out
loop
or
jmp
push
pop
mov
xchg
out
jae
push
mov
(bad)
cmp
mov
retf
xchg
push
sub
add
xchg
push
(bad)
shr
adc
nop
cld
test
pusha
js
retf
popa
loopne
xor
not
sahf
jb
jns
fmul
add
ins
sbb
stos
sub
inc
push
ret
call
sub
xor
aas
sahf
pop
jne
sub
outs
outs
out
(bad)
push
icebp
mov
push
iret
dec
or
in
cdq
cmp
dec
inc
ficomp
mov
mov
scas
inc
daa
mov
ficom
mov
xchg
int
xchg
cli
js
(bad)
int
mov
xor
mov
popf
rcr
fadd
in
adc
or
mov
pop
mov
lods
xor
test
mov
sahf
gs
pop
shl
fsincos
jge
mov
dec
ja
imul
fisubr
jno
xor
jmp
imul
add
mov
aaa
mov
adc
mov
sbb
mov
inc
push
das
push
add
imul
xor
retf
or
sub
sub
sbb
call
adc
in
and
ror
cmp
mov
fidiv
out
xchg
adc
jl
or
daa
lods
shl
cmc
dec
cdq
dec
add
test
pop
add
cld
jno
and
rcr
in
pop
out
cmps
stc
xor
adc
sahf
enter
(bad)
jmp
sub
jo
or
push
loopne
xor
in
test
xor
scas
hlt
cdq
nop
inc
inc
sub
cld
arpl
xor
in
sub
repnz
jmp
lds
push
mov
jecxz
div
outs
ret
shl
xchg
pop
mov
popf
outs
pop
call
sbb
cmp
or
stos
ret
push
call
push
fsubr
jmp
pop
aad
inc
ret
xchg
aas
in
xlat
imul
pop
ja
addr16
(bad)
(bad)
test
jmp
int3
(bad)
cmc
mov
icebp
cmp
sqrtps
dec
xor
push
fist
idiv
inc
imul
xlat
jnp
or
scas
mov
dec
dec
inc
in
dec
imul
std
push
rcr
inc
xchg
jmp
xor
loope
pop
ins
mov
pop
test
test
pop
mov
call
adc
mov
bound
or
enter
mov
inc
fimul
pop
daa
mov
inc
or
rcl
fistp
mov
mov
jge
adc
sti
or
push
cmp
push
fsub
sub
cmp
ret
shl
(bad)
pusha
mov
and
(bad)
rol
mov
icebp
xor
cli
xor
xor
xchg
jb
ds
push
mov
jecxz
inc
add
imul
aam
xchg
xor
jno
bound
(bad)
(bad)
mov
fs
sbb
pop
xchg
xchg
lods
test
mov
inc
pop
daa
sub
rcl
push
dec
mov
mov
arpl
cli
inc
int
or
add
std
or
mov
adc
loope
pop
xchg
jle
mov
outs
adc
or
jl
and
cs
xchg
xchg
mov
jge
dec
sbb
(bad)
cmp
hlt
enter
std
imul
jo
mov
cmp
loopne
lahf
pusha
mov
hlt
xor
cmp
or
push
ror
shr
cwde
bound
xchg
jbe
cld
ds
ret
mov
xor
js
(bad)
(bad)
stos
shr
lahf
mov
cdq
(bad)
dec
sbb
mov
rcl
ja
jmp
dec
shr
(bad)
xchg
sub
ficomp
dec
dec
mov
call
int
and
sub
or
mov
pop
pop
mov
jo
pop
les
adc
pop
std
in
mov
scas
mov
pushw
rcl
int3
iret
imul
retf
pop
push
cli
lds
stc
shl
into
cli
xchg
leave
(bad)
and
or
xor
add
pop
mov
int3
lea
int
sbb
test
shl
int
jbe
shl
adc
adc
mov
cmps
jns
push
aas
sar
push
test
jbe
dec
je
fadd
or
int
push
sti
es
lods
leave
mov
jb
aad
stc
loop
sahf
jbe
xor
mov
adc
mov
push
xchg
fwait
ret
test
imul
mov
les
pop
xor
jl
je
sub
mov
jnp
push
ror
mov
sub
gs
xchg
ror
mov
out
mov
lds
fcmove
mov
enter
dec
adc
fimul
xchg
int
jp
dec
cld
test
mov
loop
sbb
mov
mov
jmp
push
push
jno
gs
mov
adc
jp
les
and
or
outs
push
stos
and
xor
dec
mov
imul
ins
xor
push
push
sar
mov
cmps
lds
(bad)
push
imul
int3
lods
(bad)
out
mov
fdivrp
xor
mov
mov
dec
out
mov
pop
push
sub
shl
ins
or
mov
pop
xor
icebp
pop
jmp
ja
fld1
test
cld
xchg
repnz
pop
pop
push
jne
sar
mov
mov
add
ret
sbb
push
jp
mov
jmp
jmp
into
mov
das
add
xchg
jmp
inc
sbb
popa
cmp
xor
adc
clc
add
sub
mov
cmp
into
sti
into
addr16
and
xchg
popf
(bad)
xor
lds
je
sbb
push
lock
(bad)
pop
cli
mov
xor
sub
dec
repnz
dec
xlat
hlt
cmp
ret
xor
jne
aad
or
mov
sub
daa
ror
addr16
inc
aaa
or
mov
cmc
dec
stc
jns
and
pop
jle
loopne
test
inc
loop
jbe
jmp
lahf
or
or
xor
stos
loopne
nop
and
jg
into
stos
add
lahf
cwde
mov
aam
or
out
xchg
inc
cmps
xchg
mov
loopne
push
or
add
xor
or
fldcw
int
sbb
mov
xor
repnz
in
stos
outs
es
xor
xchg
mov
xor
aas
dec
pop
mov
lock
sar
push
shl
call
movs
cmp
data16
or
test
mov
add
cmp
ss
jg
push
push
icebp
jb
test
shl
(bad)
mov
jmp
or
push
mov
lods
mov
sbb
dec
(bad)
dec
loope
xor
pop
fistp
loope
xchg
mov
mov
and
(bad)
arpl
adc
jp
jns
aas
call
mov
retf
jnp
jle
in
pop
adc
fld
xchg
mov
ret
repz
loopne
add
sar
dec
aas
push
mov
push
sbb
shr
(bad)
sbb
(bad)
add
add
loope
mov
out
add
xchg
jns
es
ins
stos
dec
mov
dec
in
call
jl
repz
pop
test
in
aas
and
push
bound
mov
daa
add
or
and
aam
lock
icebp
lds
mov
imul
js
enter
inc
test
pop
or
inc
add
cmp
scas
cs
iret
adc
movs
sub
cmp
repz
nop
and
xchg
data16
adc
ss
aam
inc
mov
js
cld
inc
mov
lea
add
lods
pop
mov
mov
(bad)
in
mov
pop
adc
je
adc
sar
jae
add
aad
push
inc
idiv
jne
adc
and
(bad)
xchg
clc
pop
fnstcw
fild
mov
aas
fstp
lods
mov
in
cmp
mov
lock
iret
mov
je
popa
push
adc
in
mov
xor
test
arpl
ds
test
mov
pop
jle
push
adc
xor
out
in
jl
mul
pop
fistp
pusha
leave
(bad)
ins
stos
out
cmp
push
cmp
push
mov
cld
int
or
jp
das
mov
imul
mov
pop
hlt
jge
call
gs
fsubr
mov
push
lods
xchg
lock
in
movs
stc
sub
jg
adc
or
imul
test
xlat
sti
fs
cmp
cmp
add
inc
jb
in
je
push
xor
pop
jno
sub
jmp
sub
lods
popa
lea
shl
mov
inc
scas
arpl
inc
xor
bound
add
dec
or
sbb
pushf
lea
loope
out
xor
add
pop
jl
inc
popf
push
jb
ficom
fbstp
shr
jp
cmp
dec
add
ins
rcr
sub
push
and
scas
inc
xchg
leave
(bad)
and
int
sbb
cmp
cli
inc
lock
or
and
fldenv
jl
jp
xor
nop
lahf
xchg
mov
xchg
cmp
pop
test
xor
sub
sub
mul
loopne
adc
inc
mov
xchg
ror
mov
loop
xchg
stos
fisttp
add
jge
or
adc
inc
inc
add
(bad)
xor
mov
xor
mov
adc
inc
mov
pop
fwait
out
call
js
inc
imul
sbb
push
mov
(bad)
outs
push
mov
pop
jns
pop
mov
test
add
mov
(bad)
cs
xchg
mov
sbb
in
jmp
adc
inc
sbb
pop
clc
dec
inc
sbb
scas
out
(bad)
loop
aaa
stc
pop
pop
or
push
test
inc
jecxz
inc
(bad)
pop
cmp
fisttp
and
iret
scas
mov
mov
aas
cmp
push
or
enter
bound
push
nop
mov
movs
aad
repnz
fnstsw
adc
bound
mov
pop
jle
test
dec
sbb
ins
movs
jo
test
lds
(bad)
jmp
out
jge
cld
cmps
nop
cmp
jmp
sub
out
mov
mov
add
in
mov
xor
sbb
push
add
je
xor
call
dec
icebp
test
inc
jl
push
dec
retf
push
cmp
and
pop
push
call
mov
dec
mov
cwde
fidiv
popa
pop
rep
dec
mov
and
xor
dec
mov
das
retf
in
or
inc
rcl
mov
inc
std
ds
rcl
call
sub
dec
and
add
icebp
sub
imul
push
call
inc
jecxz
xchg
or
cmps
cmp
inc
mov
inc
(bad)
scas
mov
sbb
mov
dec
add
outs
nop
mov
sbb
shr
adc
(bad)
call
dec
push
fimul
repnz
xchg
in
xchg
stos
sbb
js
xadd
and
out
add
xchg
sti
add
outs
or
cdq
leave
aam
jp
mov
mov
push
(bad)
and
fldcw
and
(bad)
adc
fnsave
call
dec
mov
dec
add
stos
mov
inc
out
xchg
mov
and
push
xchg
lods
and
jns
retf
popa
sbb
sub
cmp
xchg
or
cmp
push
jo
and
mov
(bad)
adc
daa
pop
push
hlt
sub
ins
mov
lods
aam
cmc
mov
xor
sub
cdq
jmp
mov
jne
das
adc
xchg
or
mov
lods
adc
mov
adc
icebp
pop
lahf
mov
xor
sub
sub
pop
fdivp
out
adc
cmps
repnz
into
sub
jg
mov
ins
push
je
sbb
cmp
sub
push
ins
mov
jno
xlat
inc
pop
ror
push
push
das
nop
mov
pushf
xlat
loope
cmp
ins
lahf
xchg
push
dec
mov
push
mov
or
lock
push
loope
das
sbb
and
sub
(bad)
(bad)
out
jp
pop
lahf
mov
shl
mov
mov
push
mov
in
sbb
push
out
out
mov
cmp
sub
das
pop
and
jmp
cmp
jmp
jno
ret
repz
ret
mov
push
push
stc
inc
adc
dec
aas
int3
jo
sub
retf
cmp
mov
mov
lods
cmp
rcl
xchg
ficom
and
inc
test
add
sbb
loopne
icebp
xchg
ficom
mov
inc
out
js
in
jle
pop
test
test
and
rcr
aad
cmps
pushf
pop
inc
xchg
call
jae
adc
mov
pop
mov
ror
fwait
lahf
mov
and
and
pop
mov
out
imul
aas
inc
mov
outs
iret
aaa
(bad)
fstp
pop
and
ds
xchg
cmp
fidiv
pusha
(bad)
add
addr16
int3
adc
lock
pushf
add
in
lea
pop
add
mov
mov
adc
mov
adc
mov
inc
jae
xor
sti
adc
addr16
icebp
xor
adc
mov
call
movs
pop
jns
xchg
and
mov
(bad)
push
jp
and
sar
push
aaa
fimul
outs
rcr
jns
out
pop
out
mov
bound
mov
or
cmp
mov
enter
aam
xor
inc
jne
shl
int3
or
div
dec
aad
and
mov
inc
out
or
ret
cmps
dec
cmp
les
jo
add
outs
pop
cmp
les
add
dec
test
bound
sub
xor
fwait
movs
push
in
scas
les
xor
mov
mov
loopne
test
cdq
jbe
jmp
inc
and
cmp
mov
cmp
dec
pop
pop
push
or
push
push
jnp
or
mov
out
fnstenv
add
mov
lds
lods
xor
mov
dec
jmp
push
pop
cmp
mov
or
mov
pop
in
pop
lock
add
call
push
xlat
rcl
outs
xchg
xor
(bad)
(bad)
stos
sub
mov
jnp
ficomp
(bad)
rol
movs
jne
xor
ja
fidivr
mov
sub
stos
(bad)
pop
cli
test
popf
es
pop
call
ja
cli
inc
fisttp
or
pop
int
ret
push
aad
jmp
jmp
sar
outs
pop
xchg
mov
xchg
sbb
push
mov
xor
test
xor
out
xchg
clc
in
sbb
sahf
and
pop
pop
mov
pushf
sub
xchg
mov
sbb
lock
loope
mov
jno
dec
mov
mov
xchg
cs
loope
inc
cmp
stc
mov
fnstenv
sub
add
xchg
(bad)
std
mov
adc
pop
inc
clc
xchg
int3
push
mov
pop
int3
sub
add
in
adc
push
loope
icebp
leave
scas
iret
xchg
mov
jmp
stos
hlt
aaa
dec
jmp
aas
xor
in
xchg
test
and
stos
or
das
enter
jl
inc
(bad)
cmp
push
sbb
push
shl
out
rcr
jns
(bad)
pop
push
std
ja
shl
adc
cmps
test
push
ret
mov
pop
in
outs
pop
call
cmp
movs
(bad)
xor
xchg
mov
cld
das
ins
neg
jmp
sbb
push
das
mov
repz
mov
inc
sbb
sub
adc
sar
add
push
xchg
lods
dec
mov
push
adc
outs
lods
dec
push
sub
scas
fwait
sbb
inc
jmp
adc
push
cld
push
or
pop
mov
adc
retf
shr
and
adc
push
leave
push
and
retf
or
mov
xchg
gs
imul
push
fs
mov
dec
aam
inc
fisttp
mov
pop
push
jo
icebp
icebp
fucomi
mov
adc
into
xchg
inc
add
fnstenv
and
icebp
push
fstp
and
or
mov
lahf
sub
jb
push
loope
jle
enter
in
dec
push
ja
sub
sbb
cwde
jb
js
jns
xchg
xor
xchg
hlt
icebp
das
or
push
fcomp
cmps
push
(bad)
or
push
mov
add
fild
mov
xchg
movs
movs
data16
push
mov
ret
mov
icebp
nop
nop
rol
sbb
jge
sete
mov
je
ins
mov
inc
fisttp
pop
jae
je
mov
retf
cmc
mov
and
mov
lock
cmps
cmp
jae
jg
dec
gs
jo
fsubr
jno
lock
jle
xchg
pop
or
es
pop
retf
leave
(bad)
retf
jbe
adc
pop
push
cmp
cmc
les
adc
movs
jle
(bad)
mov
(bad)
(bad)
sub
std
pop
mov
mov
leave
push
mov
mov
movs
jle
stc
jmp
add
push
dec
out
adc
loopne
inc
out
push
out
pop
pop
and
mov
sbb
inc
push
jl
push
sbb
or
addr16
popa
icebp
pop
dec
int
scas
xchg
stos
dec
out
xchg
cmp
lea
xchg
xchg
scas
xchg
jns
push
ret
sbb
fst
out
loopne
retf
mov
add
in
ins
mov
test
pusha
adc
sbb
outs
or
daa
cld
enter
sbb
jl
and
jge
sub
inc
dec
je
sbb
xor
xor
in
imul
out
aaa
xchg
dec
mov
shr
xchg
mov
fs
add
std
sar
inc
bnd
loopne
xchg
pop
push
mov
in
(bad)
push
jo
loope
xor
or
xor
push
and
adc
inc
in
jb
movs
cld
xchg
out
test
mov
inc
lods
int3
loop
out
mov
repnz
out
arpl
cmps
adc
dec
sbb
out
fstp
push
jge
add
mov
arpl
cs
ret
out
sub
in
xchg
(bad)
cmp
xchg
(bad)
scas
add
cmp
mov
(bad)
pop
mov
cmps
adc
mov
inc
aaa
mov
cli
pop
sti
jg
cmp
gs
push
xchg
stc
cmps
data16
fistp
or
sub
lahf
xor
mov
or
add
lock
enter
mov
test
rcr
gs
jae
pushf
data16
pop
dec
sbb
(bad)
push
aas
mov
popa
(bad)
ins
and
jo
pop
xchg
cmp
pop
movs
popa
shl
add
jns
and
mov
fimul
into
jnp
add
lahf
cwde
mov
ficomp
push
mov
mov
adc
fdiv
out
mov
movq
jns
test
cmc
xlat
adc
adc
xchg
je
hlt
daa
jl
loopne
in
push
xor
xchg
mov
repnz
add
repz
pop
fidiv
imul
add
mov
mov
jns
stos
jne
jge
psubq
iret
imul
mov
(bad)
jns
adc
mov
fmul
idiv
inc
mov
xchg
mov
pop
shr
add
fcom
pop
outs
mov
pop
shr
xor
sub
add
inc
enter
jl
cmps
cmps
xlat
inc
in
call
fwait
xchg
cmp
mov
sbb
push
adc
adc
ror
iret
sbb
xchg
mov
pop
int3
movs
les
int
add
xor
sti
or
sub
push
clc
lods
mov
cmps
sub
inc
call
shl
call
cmp
test
xor
shr
or
adc
js
push
and
xchg
cmp
xchg
adc
mov
cdq
or
inc
jl
rcr
je
push
xchg
cmps
je
mov
rcr
dec
or
fcom
mov
inc
xor
push
loope
push
ret
adc
mov
sbb
cmp
es
or
(bad)
adc
daa
(bad)
jl
aam
pop
repnz
addr16
or
pcmpeqd
push
aad
sbb
(bad)
rcl
and
cmp
int
icebp
and
pop
cli
mov
xchg
or
call
ret
pushf
ins
aad
xor
jmp
in
pop
add
cmp
inc
nop
fbstp
retf
adc
cs
(bad)
mov
gs
pop
jp
mov
mov
mov
outs
call
cli
jmp
(bad)
jno
addr16
inc
xor
xor
ss
iret
cmc
pop
mov
xchg
xchg
rcl
mov
mov
(bad)
cmp
fisttp
xchg
loop
sub
ss
pop
bound
sub
pavgw
sbb
ins
pop
dec
and
dec
(bad)
inc
sub
std
shl
cmp
jae
dec
mov
movs
iret
cwde
or
cmp
nop
je
fsubrp
add
(bad)
sbb
inc
jbe
daa
(bad)
or
(bad)
jmp
ret
adc
movs
mov
fimul
shr
sbb
dec
in
pop
cli
sub
test
arpl
loop
test
retf
mov
clc
fcomi
jae
xor
not
(bad)
xchg
out
fs
imul
mov
movs
xchg
es
push
dec
adc
inc
sub
cdq
sub
mov
scas
fdiv
and
or
sub
jnp
mov
shr
or
bound
(bad)
nop
iret
int
repnz
fnstsw
sub
out
push
sub
push
out
out
dec
in
icebp
daa
or
in
cmp
outs
fwait
sub
add
hlt
inc
dec
inc
push
in
lahf
and
jae
into
add
dec
inc
ret
jb
fwait
and
pushf
push
mov
lods
jmp
pop
push
call
push
push
cmp
cmp
push
dec
(bad)
jne
in
out
jle
jne
cmp
jne
fs
xchg
imul
jb
xlat
jl
dec
xchg
cmc
pop
xchg
fwait
mov
mov
mov
gs
loope
rcr
movs
jmp
fs
sub
stos
jnp
and
pop
pop
adc
test
sub
mov
lds
sub
retf
cmc
xor
rep
add
sub
lods
loope
inc
icebp
dec
mov
and
mov
call
fwait
xchg
pushf
icebp
jge
mov
test
sub
les
fidiv
out
(bad)
pop
(bad)
inc
(bad)
jmp
mov
clc
cmp
dec
(bad)
loopne
aaa
push
ins
lds
cmp
(bad)
fstp
sub
cdq
idiv
test
pop
mov
sub
dec
cwde
fcmovb
adc
cmc
adc
and
xchg
push
inc
mov
dec
movs
and
xor
icebp
sbb
and
out
push
repnz
fadd
xor
lods
jle
das
(bad)
call
mul
out
cmps
adc
push
sahf
and
push
xor
lods
pusha
jge
or
ins
pop
pop
adc
lods
mov
stos
sub
add
cmp
and
je
aam
sub
int
imul
xor
xchg
loope
loope
fmul
sbb
sub
sbb
mov
pop
dec
ja
and
xchg
mov
pop
dec
sub
fsubr
or
test
outs
push
daa
sti
or
stc
ja
(bad)
pop
mov
mov
jmp
xchg
add
sbb
test
adc
test
xchg
xchg
jnp
je
pop
pop
loope
sbb
push
jns
or
jb
push
mov
fild
sbb
pop
mov
fwait
in
mov
pop
pop
adc
xchg
(bad)
pop
movs
xor
and
jns
pop
std
mov
in
jo
stc
dec
pushw
sahf
(bad)
dec
push
in
xchg
sub
jae
fwait
and
ins
sbb
sub
pop
sub
rol
rcr
add
jecxz
adc
and
mov
dec
xchg
je
pop
das
lods
in
mov
je
pop
(bad)
pop
scas
mov
mov
test
inc
dec
iret
fidiv
mov
test
out
jmp
cdq
sti
cmp
aam
fdivr
sahf
fist
ret
pop
inc
pop
mov
mov
cmps
and
mov
lahf
sub
cwde
sub
stc
lea
xchg
fisttp
and
scas
jo
jne
pop
pop
jnp
fwait
repnz
xor
lds
inc
push
xor
mov
or
xor
std
arpl
js
popa
mov
add
out
adc
ret
xchg
or
sbb
sbb
mov
mov
ins
leave
or
scas
inc
mov
sar
or
mov
movs
mov
jne
int3
dec
push
mov
data16
aad
mov
ret
loope
adc
jge
scas
push
(bad)
mov
outs
dec
push
jmp
adc
or
out
ins
mov
or
mov
mov
ins
lock
aad
ss
pop
leave
(bad)
aad
pop
mov
xchg
arpl
mov
scas
pop
jg
pop
leave
inc
inc
push
xchg
xor
mov
dec
rcr
icebp
mov
dec
mov
ins
xchg
add
loope
leave
or
adc
mov
xchg
test
(bad)
xor
hlt
push
dec
call
lock
inc
sub
idiv
cli
jmp
popf
sub
cmp
inc
or
xor
pop
mov
lods
adc
dec
dec
inc
scas
adc
push
sahf
add
daa
jp
xchg
inc
cli
cmp
mov
adc
dec
pusha
pop
jb
cmp
mov
mov
inc
mov
(bad)
dec
cld
stos
imul
mov
repnz
fsub
mov
rcr
mov
jle
clc
dec
sahf
dec
cmp
fadd
test
mov
sbb
out
mov
pop
cmc
dec
dec
add
int
loop
push
mov
sbb
out
cmps
lods
std
xor
xchg
push
pusha
in
mov
mov
aad
cmp
shr
in
stos
sub
test
mov
mov
xchg
lock
rcr
call
cmp
add
xor
ja
imul
dec
dec
xlat
in
xchg
mov
dec
jmp
xlat
test
mov
fdivrp
sub
out
lods
pop
add
inc
lds
lock
fst
sbb
lea
fadd
lahf
jmp
hlt
adc
frstor
jbe
push
pop
scas
out
sbb
adc
test
lahf
add
push
add
into
in
inc
(bad)
lock
xchg
repz
fstp
pop
xchg
mov
pop
sub
ds
mov
adc
xor
push
aaa
inc
jno
lods
mov
retf
lods
adc
xchg
sub
push
push
in
movs
adc
out
test
rol
xor
enter
and
cmp
jmp
jg
or
stos
xor
add
jmp
popf
out
ficom
mov
add
test
dec
ja
out
dec
mov
or
into
dec
dec
cli
pop
stos
ret
push
push
fisub
cwde
fild
mov
dec
cmp
xlat
lds
retf
and
and
mov
popf
sbb
ds
loop
mov
mov
mov
inc
stos
xchg
add
and
push
fbld
int
and
fcomp
ins
dec
(bad)
cld
dec
popf
lds
dec
les
dec
jmp
inc
mov
jp
mov
mov
add
test
sub
test
fnsave
std
in
(bad)
(bad)
pop
repz
movs
fisttp
mov
xor
mov
ins
inc
cld
mov
inc
pop
xchg
cmp
(bad)
xor
sbb
fistp
pop
xor
and
gs
retf
inc
xor
daa
lods
in
repz
arpl
jnp
imul
push
dec
loopne
mov
(bad)
sbb
sar
aam
bound
icebp
movs
mov
or
xlat
bound
ds
mov
aaa
lods
add
daa
mov
mov
out
adc
mov
call
and
and
inc
inc
jnp
int3
dec
xchg
scas
mov
mov
sub
jne
inc
loop
xor
ins
imul
mov
push
cmp
mov
(bad)
out
push
xchg
stos
xlat
(bad)
int3
fcom
push
test
lea
es
in
mov
and
ja
stos
push
loopne
add
xchg
adc
mov
cmp
stc
add
imul
bound
cmp
cmc
sub
cld
stc
nop
xchg
pop
ins
repnz
sbb
lock
dec
pusha
out
sub
or
sub
add
pop
sub
xchg
pop
cmp
mov
mov
xchg
add
sub
mov
mov
(bad)
cli
test
enter
idiv
jae
fist
out
adc
jecxz
inc
mov
add
bound
add
pop
loopne
jle
cmp
xor
mov
pop
ror
pusha
mov
lea
les
sar
int3
les
scas
sub
mov
clc
out
lahf
mov
stos
mov
outs
(bad)
ins
add
clc
add
dec
xor
in
shrd
shl
into
jbe
cmp
mov
xchg
inc
(bad)
mov
mov
mov
stos
inc
push
out
xchg
dec
je
retf
ins
push
inc
(bad)
pop
aad
inc
add
xchg
jp
test
sahf
fsubr
pop
mov
(bad)
loop
mov
jl
adc
sbb
sub
jbe
das
pop
in
dec
lock
imul
xchg
imul
shl
xchg
push
bound
ret
call
lods
sbb
sbb
cmp
dec
icebp
dec
lods
fs
dec
mov
sbb
sbb
xchg
out
loopne
jg
ins
mov
dec
mov
inc
sub
test
and
or
mov
cli
icebp
push
loopne
ficomp
in
or
cmp
inc
inc
dec
fs
(bad)
leave
retf
data16
jp
imul
aaa
(bad)
mov
push
fisttp
push
add
test
add
scas
jno
mov
ror
aaa
bound
bound
pop
inc
cld
call
movs
dec
ror
into
in
std
add
call
int3
popf
xor
sbb
enter
cmp
pop
mov
dec
cmps
and
adc
sar
out
mul
or
mov
push
(bad)
int3
lods
mov
stos
adc
cmps
xchg
pusha
out
pop
cld
clc
pop
jne
jno
push
cmp
jp
mov
push
cmp
(bad)
hlt
inc
jns
xchg
dec
stos
add
push
mov
fdivr
push
mov
sub
sbb
(bad)
fcomi
or
out
cmp
or
push
loope
jecxz
add
fild
or
xchg
inc
mov
ret
in
xchg
pop
bound
(bad)
fcmovnb
lea
mov
dec
cli
aaa
and
push
ret
jns
push
ffreep
mov
sbb
out
dec
nop
outs
xor
mov
sub
cmp
jo
scas
inc
movs
rol
and
pop
jns
fstp
je
pop
mov
pop
add
pop
pop
neg
cwde
mov
jge
push
mov
mov
xchg
dec
xor
adc
das
scas
jle
sub
arpl
ret
rcr
xor
test
repnz
shl
ror
hlt
push
test
sbb
loopne
lods
mov
shl
rcl
std
out
int3
gs
rcr
ds
and
retf
out
popa
nop
add
push
cmps
cdq
push
leave
movs
loopne
ror
div
push
std
rcr
in
std
inc
outs
add
fdiv
push
popf
les
or
mov
mov
mov
movs
dec
int3
test
repz
jbe
(bad)
(bad)
cli
jmp
cld
xlat
xor
mov
icebp
jnp
ja
dec
loopne
xchg
adc
inc
xchg
leave
mov
into
mov
dec
jmp
add
sbb
inc
cs
jge
pop
dec
push
loop
pop
push
or
pop
cld
dec
outs
xchg
enter
stc
out
sar
inc
inc
call
mov
xor
sar
jl
out
inc
cmp
pop
cmp
cld
(bad)
inc
sub
jne
inc
jecxz
push
cmp
push
loope
lods
jmp
dec
and
cmps
mov
mov
mov
dec
div
jae
jp
cmps
adc
mov
js
mov
test
push
mov
out
arpl
(bad)
gs
pop
mov
outs
jmp
sub
mov
sub
push
jb
push
stos
sbb
jo
push
mov
adc
iret
mov
aam
in
loope
outs
push
scas
mov
pop
lods
pusha
mov
aad
cli
inc
mov
inc
sub
rcr
push
scas
lods
sbb
(bad)
jbe
cmc
push
sub
ror
pop
stc
fs
clc
leave
repnz
out
mov
je
cmps
push
cmp
repz
mov
mov
lods
fistp
push
das
xor
jecxz
mov
pushf
repnz
mov
lds
callw
aad
ds
in
mov
cdq
dec
call
jo
jne
outs
push
push
mov
sub
adc
dec
mov
(bad)
pop
or
jb
ror
push
and
pusha
cmp
retf
jmp
lds
stos
cmps
cmp
add
test
pop
frstor
fucom
pop
xchg
mov
mov
ja
sbb
call
dec
stc
inc
pop
mov
adc
fidivr
call
jecxz
ins
dec
addr16
mov
shl
dec
sbb
fdiv
add
jmp
pop
(bad)
pop
jne
mov
xchg
sub
or
inc
inc
ins
sub
arpl
lahf
les
mov
inc
add
dec
inc
xchg
mov
xor
or
or
jmp
movs
enter
sahf
cld
ds
mov
jge
cwde
pop
imul
and
vmulpd
jmp
xchg
test
sub
cmp
and
add
jge
jecxz
out
adc
hlt
je
sub
push
mov
pushf
arpl
scas
pop
aaa
cmp
push
dec
xchg
ret
cmp
daa
push
lods
test
cmps
or
int3
loop
or
mov
pop
xchg
sbb
sbb
gs
adc
jb
mov
jnp
test
jb
repnz
or
mov
mov
inc
imul
shr
inc
mov
retfw
lods
jno
push
mov
test
loop
out
mov
xor
mov
push
repnz
fmul
out
test
dec
rcl
xlat
stc
xor
js
xor
jbe
rol
and
mov
pop
ret
outs
adc
dec
or
cmp
iret
xor
sti
inc
sbb
fstp
sbb
push
xor
push
or
cli
rcr
imul
push
xor
mov
sub
xor
xor
pop
shr
sar
pop
lods
das
push
ss
out
push
xor
xchg
stos
jp
int
mov
dec
sub
jp
dec
ja
or
out
cdq
shl
mov
cmc
aad
nop
dec
push
movs
fstp
ins
cdq
sbb
xor
loop
data16
data16
fcmovnbe
sub
dec
pop
and
dec
popa
jl
cmps
jno
jmp
fst
adc
and
or
outs
nop
into
pop
adc
or
je
or
inc
jns
pop
mov
fiadd
mov
push
ins
inc
jb
movs
or
pop
fidivr
outs
adc
out
sub
retf
fist
sub
retf
addr16
and
mov
fidiv
imul
or
dec
add
add
mov
iret
dec
in
stos
mov
pop
stos
pushf
mov
pop
ins
or
daa
add
inc
adc
jecxz
in
jnp
lahf
dec
es
test
fadd
pusha
xlat
mov
xchg
mov
add
scas
xchg
sbb
xchg
(bad)
inc
sub
push
pop
movs
push
dec
xchg
pop
cmc
add
test
inc
pop
scas
outs
push
pop
ficom
push
adc
fist
(bad)
ds
pop
daa
mov
mov
and
out
arpl
loope
aad
adc
fmul
stc
dec
dec
mov
std
imul
or
sbb
cmp
push
gs
push
or
inc
mov
jl
push
mov
neg
mov
fnstcw
xlat
jo
cmps
pop
xchg
mov
repz
and
imul
fnstsw
dec
std
adc
add
mov
sbb
cdq
or
xchg
jp
push
lock
cwde
jle
adc
add
ficom
loop
push
gs
aaa
pop
push
adc
mov
ss
xor
mov
js
pop
test
xor
shr
shr
call
pushf
mov
add
shl
push
sbb
push
cmc
bound
mov
scas
bound
test
out
js
sbb
push
lock
fwait
add
push
movs
cmpxchg
enter
int3
jle
and
sbb
outs
out
retf
popa
mov
sti
(bad)
cld
les
stc
jnp
sbb
cmp
call
mov
ins
loop
inc
imul
test
out
adc
loopne
push
mov
adc
dec
ret
test
or
test
clc
outs
aam
lods
or
inc
les
dec
mov
popa
push
lock
push
std
push
pop
imul
out
shl
movs
xchg
loopne
in
or
nop
xor
pop
cmps
add
sbb
enter
cwde
jg
imul
(bad)
dec
push
je
icebp
mov
inc
aas
sbb
inc
outs
pop
jg
outs
xor
jbe
push
out
ror
movs
adc
packssdw
mov
addr16
xchg
sbb
push
shr
repz
fcom
mov
and
cdq
mov
pop
adc
sbb
fnstcw
pop
outs
inc
fisub
pop
xchg
aas
add
idiv
add
arpl
mov
adc
xor
adc
fwait
inc
mov
pusha
ja
push
xor
fidiv
pop
add
xor
push
retf
clc
xor
fild
xchg
addr16
mul
rcr
shl
jecxz
fs
xor
mov
jp
mov
jnp
int
or
xor
stc
and
imul
add
inc
xchg
ds
sub
xor
stc
sub
jmp
fild
ror
mov
cmp
inc
jae
add
mov
add
arpl
cwde
out
loopne
cmp
sub
hlt
cmp
sahf
daa
fistp
retf
mov
or
xchg
rcr
data16
xchg
hlt
push
dec
jmp
inc
add
xor
mov
xchg
pushf
cld
sbb
xchg
push
arpl
cli
ins
pop
sahf
jbe
jmp
loop
cmp
pop
cmp
cmp
mov
(bad)
or
cmp
jmp
ins
cli
pusha
pop
pop
sub
mov
dec
sbb
push
xor
sbb
push
mov
pop
xlat
mov
adc
movs
jb
jmp
jns
outs
and
xchg
sbb
imul
outs
out
cdq
scas
sub
mov
adc
addr16
dec
aam
add
repnz
hlt
(bad)
jbe
ret
xor
out
cmp
jmp
shr
neg
iret
mov
mov
or
out
fwait
(bad)
fist
push
rol
clc
push
and
jl
test
inc
sub
imul
addr16
xlat
mov
out
(bad)
fadd
jb
dec
adc
mov
shl
adc
adc
test
jnp
xchg
mov
rcr
lds
ins
sti
sbb
xchg
lods
fiadd
nop
ret
sub
test
jae
push
mov
rcl
or
mov
jle
jae
sub
arpl
retf
pop
lea
les
pop
jae
xchg
sbb
push
push
mov
xchg
push
fsubr
push
pusha
sub
jl
fisub
in
out
lock
test
das
jns
pop
add
fwait
mov
popf
in
sub
mov
and
dec
es
mov
xor
cmp
sbb
adc
in
test
aad
jg
lds
inc
jecxz
pop
adc
pop
scas
fs
xor
push
in
sbb
popf
mov
and
jne
jno
lahf
xchg
popf
(bad)
fisub
fdiv
int
loop
pop
int
xchg
cmp
mov
jmp
push
fisttp
ror
repz
inc
gs
sbb
jo
pop
pop
mov
mov
ss
mov
cmp
popa
out
push
jl
xor
push
sub
xchg
outs
xchg
mov
xor
adc
sub
push
bndstx
xor
outs
dec
push
xor
mov
jge
mov
das
mov
nop
mov
sub
dec
push
cmp
mov
ins
mov
add
loope
or
sahf
fdiv
xor
dec
mov
fld
ja
mov
mov
cld
sar
push
pop
ins
mov
popa
pushf
or
aad
or
movs
(bad)
aad
add
loopne
ror
xchg
jmp
and
fisubr
arpl
dec
pop
pop
or
inc
adc
lods
nop
sbb
add
ss
adc
ss
pushf
inc
push
dec
jle
xor
jo
ret
scas
lock
pop
test
inc
pop
shl
add
cdq
pop
push
rcr
in
outs
sbb
mov
fadd
xlat
mov
mov
out
add
adc
adc
(bad)
call
xor
lock
push
out
shl
fdivr
(bad)
fisub
sbb
xor
mov
aad
adc
sub
sahf
aas
inc
sbb
retf
jl
push
pop
(bad)
(bad)
mov
push
sbb
push
out
std
pop
inc
fidiv
mov
gs
stos
xor
scas
mov
cdq
or
hlt
inc
les
stc
push
clc
or
repnz
imul
mov
add
cld
and
sub
sbb
xchg
(bad)
out
repnz
stos
sbb
inc
ss
sbb
xchg
add
cmp
add
mov
push
sbb
ss
cli
and
jmp
aam
mov
sbb
jae
cmp
in
ins
cmps
nop
and
cmps
js
repz
(bad)
in
std
xchg
mov
fs
jmp
sbb
mov
xchg
push
xchg
outs
cmps
adc
adc
rcr
mov
outs
inc
repnz
mov
outs
adc
sbb
pop
int3
pop
add
jbe
push
inc
call
pop
mov
call
cs
mov
test
gs
pop
jb
sub
fstp
sub
jae
sar
stos
adc
adc
adc
mov
jmp
push
push
jmp
cmps
pop
and
scas
sbb
adc
(bad)
mov
lods
lahf
popf
push
xchg
jl
das
int3
push
lds
push
das
mov
sahf
cld
xchg
test
mov
rcl
sbb
and
int3
jno
inc
xchg
clc
movs
cmps
fmul
shl
xor
and
cmp
xor
xor
movs
xchg
ror
inc
dec
aas
(bad)
sub
stos
std
adc
pop
mov
icebp
push
mov
mov
ins
hlt
(bad)
bound
repz
or
and
add
or
jl
sbb
inc
shl
fcomp
fsubr
jno
adc
sub
scas
push
mov
pop
aad
in
inc
xor
les
push
sub
mov
aam
adc
jg
int
mov
pop
inc
out
fidivr
pop
test
add
sbb
div
push
jp
sahf
repz
and
shl
pop
jnp
jo
add
mov
xor
push
mov
repnz
cwde
cmp
inc
cmp
in
sti
mov
loop
cli
xchg
sbb
loopne
sub
jae
inc
inc
mov
stc
dec
(bad)
xchg
punpckhdq
addr16
mov
jne
dec
xchg
in
mov
inc
stos
sbb
pop
adc
gs
aad
aas
sub
inc
imul
shl
cli
sub
xor
ss
adc
popf
inc
ss
ficomp
jl
dec
pop
mov
sbb
add
push
ss
xchg
jae
or
add
mov
and
jle
sub
cmp
inc
sahf
test
mov
addr16
push
scas
dec
jae
dec
in
xchg
sub
sbb
sar
cmc
xor
mov
cmp
push
out
mov
(bad)
cmps
ficom
pop
xchg
xlat
fwait
popf
sbb
fisub
adc
jg
dec
adc
ds
xor
cli
xchg
push
jg
les
mov
sbb
dec
push
mov
pop
ror
in
test
adc
pop
jnp
xor
ins
stos
stc
(bad)
movs
jmp
sahf
cdq
fcom
int3
ins
inc
gs
imul
pop
and
stos
xchg
sbb
ror
cmp
pop
ret
aas
and
add
stc
loope
fisttp
add
int
pop
test
sub
xor
inc
scas
test
sbb
cdq
jnp
sbb
pop
push
cmp
mov
ins
stos
stos
stc
div
adc
outs
jae
mov
push
xor
pop
mov
sub
xor
mov
test
movs
sbb
inc
or
daa
cmp
adc
jmp
xor
pop
pop
sub
xchg
int
sbb
cmp
xor
cmp
cmp
ins
xlat
ret
stc
push
(bad)
pop
rcl
into
jge
jle
sbb
or
aam
aam
and
data16
mov
xchg
cmp
pop
ins
xor
jp
jbe
inc
and
dec
dec
push
xor
nop
adc
repnz
inc
pop
xchg
addr16
sti
lea
retf
aam
scas
fmul
retf
xor
adc
(bad)
call
stos
arpl
xchg
sub
hlt
lods
cld
shl
mov
cwde
push
mov
cmp
cmc
and
(bad)
cld
xchg
(bad)
out
cld
mov
nop
data16
push
add
popa
call
fdiv
outs
xrelease
mov
pushf
dec
or
outs
mov
xchg
xor
jle
loopne
js
cmps
adc
fisttp
xor
inc
fnstenv
dec
mov
push
jmp
adc
movs
xchg
or
pop
jg
popf
mov
mov
test
fiadd
stos
aam
imul
ret
sti
push
ss
xchg
dec
ror
dec
(bad)
sbb
xchg
pop
add
xor
mov
pop
add
dec
and
add
or
inc
or
jae
call
cmp
pop
loopne
repz
dec
push
mov
cmp
xor
xlat
pop
mov
jae
retf
or
adc
sbb
jns
adc
push
add
gs
test
push
call
ds
ret
test
pop
enter
call
inc
inc
mov
(bad)
call
xchg
lods
fsub
sub
(bad)
sub
dec
call
or
(bad)
frstor
ins
enter
xchg
popf
xor
sub
das
xchg
(bad)
stc
iret
ds
das
fimul
(bad)
add
mov
lods
in
cmp
ret
xor
repz
fistp
aam
add
(bad)
and
clc
push
sti
adc
test
outs
mov
movs
rcr
fistp
mov
sub
clc
jae
mov
cmp
push
mov
mov
jecxz
sub
xlat
sub
pop
jb
xor
sbb
push
into
aad
(bad)
xchg
aas
out
loope
sbb
in
aas
dec
repnz
xor
ret
arpl
sub
sbb
scas
rcl
push
sbb
sbb
sbb
movs
sbb
adc
clc
call
cmovnp
lods
xor
inc
cmp
gs
pop
pop
xlat
xchg
repz
test
cmp
mov
jbe
add
sub
mov
inc
inc
xchg
mov
xchg
out
mov
mov
iret
mov
sub
leave
movs
mov
loope
out
stc
test
into
and
dec
dec
add
and
sbb
jecxz
push
ret
jb
pop
loopne
jo
(bad)
dec
mov
mov
mov
fld
cdq
sbb
movs
ret
movs
movs
fwait
or
mov
or
shl
xchg
aam
or
test
adc
or
test
and
xlat
or
out
in
in
pusha
jg
adc
jmp
sbb
push
and
mov
inc
adc
dec
(bad)
jecxz
fucomip
pop
add
cmp
enter
xor
add
repz
pop
test
ja
fcmovnb
xchg
into
addr16
cmp
hlt
stc
or
sbb
inc
push
push
fidiv
mov
je
fadd
stc
push
out
cmps
adc
cli
cmp
mov
aam
sbb
sbb
pop
or
je
xchg
sub
mov
mov
enter
fwait
cmp
inc
push
cld
sbb
test
sub
xchg
xor
mov
and
imul
add
gs
fld
aaa
or
out
loopne
mov
ret
into
mov
adc
rcr
sbb
bound
loop
int3
adc
out
mov
retf
mov
out
cmp
popf
and
test
pushf
mov
shl
push
push
imul
mov
inc
dec
mov
dec
leave
imul
fmul
add
imul
fs
stos
mov
mov
push
mul
cdq
loope
add
stc
inc
fldcw
xchg
push
ja
adc
or
and
mov
mov
mov
mov
out
cdq
push
and
ret
jge
inc
jecxz
jmp
cmp
inc
add
or
mov
sub
loop
pop
adc
(bad)
sbb
adc
xchg
xchg
inc
jmp
cdq
cmp
movs
mov
pop
add
dec
mov
gs
scas
repz
scas
push
je
iret
out
lods
pop
push
xlat
xor
out
jecxz
dec
sub
imul
ja
sbb
ss
mov
ret
arpl
pop
add
ja
test
or
mov
(bad)
in
stos
cmc
xor
(bad)
lock
or
mov
jg
into
or
inc
fs
adc
fimul
jb
not
rcl
int3
jecxz
xchg
scas
scas
push
inc
icebp
sbb
mov
adc
sub
clc
gs
sbb
pushf
adc
inc
aad
rdmsr
mov
sub
or
in
test
sub
stos
in
jmp
arpl
dec
(bad)
push
cmps
loopne
cli
push
in
and
ficomp
jne
outs
pop
idiv
test
js
sahf
jl
inc
xchg
jg
pop
popa
pop
out
test
int
pop
adc
sub
rcl
adc
xor
inc
jmp
(bad)
shl
aam
adc
jae
test
pushf
test
clc
sub
pushf
lock
xor
pop
push
scas
ja
dec
aam
clc
cmps
dec
pop
dec
inc
ds
fbstp
rcr
cli
push
xchg
in
shl
js
xor
jmp
xchg
pop
lods
outs
popa
das
inc
push
mov
scas
inc
stos
dec
pop
jge
mov
xchg
jbe
leave
xchg
mov
cmp
les
mov
jmp
pop
pop
adc
lods
psubq
fst
mov
call
pop
jbe
repz
inc
fucomp
ds
push
aam
xchg
jns
pop
aad
mov
adc
scas
fcom
and
add
fwait
push
shl
pop
scas
into
aad
mov
pop
bound
xchg
push
sbb
cmc
daa
push
inc
mov
push
inc
push
test
fcmove
mov
fwait
xor
imul
xor
js
xchg
outs
jg
ins
(bad)
cmp
sar
add
and
cld
sti
adc
adc
je
stos
inc
xchg
gs
popf
add
mov
jae
jbe
push
ins
cmc
cld
mov
sahf
in
xchg
sbb
jnp
ins
or
lds
lahf
xchg
push
add
jns
int3
pushf
cld
loopne
jae
ins
(bad)
retf
in
dec
sar
lahf
(bad)
xor
cwde
or
call
leave
sbb
add
add
(bad)
push
iret
dec
pop
cmp
daa
or
or
and
enter
cld
mul
mov
mov
push
pop
dec
cmp
cdq
inc
fdivr
popa
cs
push
add
ror
jl
mov
pushf
lock
popa
aaa
ins
fstp
out
imul
icebp
adc
fmul
lahf
jno
cmps
jnp
out
les
mov
add
pop
jbe
push
add
xchg
cdq
pop
jg
jg
test
sbb
and
les
out
adc
mov
jbe
sti
mov
fisubr
pusha
cld
sbb
ds
xchg
pop
jecxz
mov
sbb
shl
jb
div
jb
cmps
sub
imul
sub
xchg
mov
cld
cli
jo
xchg
mov
cmp
push
daa
cwde
xor
push
mov
dec
jl
inc
pop
ret
xor
jns
cmp
retf
pop
loopne
xchg
int3
jbe
in
mov
mov
das
test
popf
mov
sti
jp
scas
add
xor
int
pop
icebp
(bad)
push
out
xchg
xchg
cmps
add
call
movs
jle
rcl
pop
jns
mov
inc
jg
outs
sub
sub
mov
mov
cdq
mov
dec
test
les
and
pop
arpl
mov
mov
inc
dec
and
leave
inc
pop
push
xchg
popf
aas
push
mov
das
repz
call
(bad)
xlat
jl
in
repz
sub
push
push
mov
add
or
loopne
int3
js
dec
pop
mov
cmp
pop
xor
xor
jno
jno
je
ja
pushf
data16
pop
jle
outs
(bad)
jge
inc
jge
xor
lahf
jecxz
call
add
push
fidivr
dec
(bad)
or
xor
sub
test
stos
pop
or
out
int3
fld
cld
aam
xchg
(bad)
or
ja
mov
inc
div
sbb
adc
nop
dec
sbb
and
in
jecxz
xchg
stc
stos
xchg
inc
pop
or
mov
xchg
mov
cmp
data16
sub
mov
jae
shr
int3
adc
and
xor
and
int3
out
test
jb
pop
mov
sbb
fs
test
push
mov
shl
cmp
mov
pop
test
dec
int3
pop
adc
pop
daa
jp
aad
clc
and
dec
and
push
pop
mov
fnsave
fcmovb
cmp
pop
mov
or
mov
jg
sub
jecxz
std
(bad)
dec
in
jp
stc
mov
fdivr
(bad)
in
les
int3
xor
cmp
lods
jmp
xchg
xchg
xor
rol
stos
or
movs
in
pop
sbb
xor
shl
repnz
fld
push
jne
sbb
je
aaa
push
xor
test
fld
cmp
cmp
mov
add
stos
push
cmp
push
sub
movs
fist
push
je
mov
pop
push
dec
cmp
(bad)
popf
aad
clc
push
test
cs
retf
xchg
or
mov
jb
es
mov
(bad)
adc
daa
imul
mov
cs
out
and
dec
cmp
sbb
and
rcl
xchg
push
and
les
ret
test
out
sbb
jbe
xchg
dec
(bad)
loop
adc
xchg
movs
mov
(bad)
xor
or
push
push
ins
mov
sbb
xor
jl
xor
add
shr
pop
mov
push
mov
jne
aad
lea
pop
push
pop
hlt
in
add
(bad)
cwde
and
mov
xor
mov
xchg
fcom
out
pop
clc
cli
repnz
adc
inc
xchg
div
popf
mov
adc
(bad)
leave
cmp
test
inc
jl
test
mov
shr
pop
inc
das
fdivr
sub
cmps
cmps
mov
fimul
popa
bound
pop
sbb
mov
out
push
sbb
mov
push
fmul
out
cmp
mov
jle
aam
mov
xor
xor
jmp
jb
mov
push
movs
or
push
test
inc
push
daa
jg
inc
add
mov
and
jg
cmp
lock
stos
sub
stos
mov
pop
dec
rol
inc
cmps
jne
mov
and
fnstsw
mov
and
mov
out
out
into
mov
push
or
test
ins
add
add
sahf
cmps
dec
repz
aad
movs
jno
and
retf
adc
push
inc
arpl
pop
rol
ss
xchg
das
pusha
aas
push
mov
mov
pop
inc
addr16
add
int
push
(bad)
std
xchg
aad
daa
xor
outs
and
xchg
push
fistp
aas
jl
(bad)
out
aam
shr
ins
stc
nop
(bad)
sbb
inc
mov
icebp
or
jl
dec
inc
mov
pop
jae
push
aaa
call
cmp
mov
sar
lahf
mov
cwde
sbb
add
(bad)
push
add
sbb
push
push
test
aam
add
jmp
cmp
call
add
dec
push
test
sbb
ins
jg
in
cmp
aad
xchg
into
jno
cwde
dec
aas
mov
inc
jmp
mov
jbe
sti
mov
mov
ds
add
imul
mov
adc
sbb
ffree
push
cwde
or
push
in
pop
mov
std
mov
fnstenv
mov
cmp
arpl
loop
jnp
test
cmp
and
(bad)
std
jmp
iret
mov
jmp
mov
repnz
sbb
push
xchg
int3
or
dec
daa
mov
xchg
retf
mov
adc
push
jno
sbb
aaa
pop
mov
add
mov
mov
in
mov
nop
mov
inc
fdiv
and
cld
jl
test
push
xchg
sbb
push
xor
dec
or
xchg
call
sbb
adc
ins
inc
shl
sub
lock
add
dec
pop
jae
or
push
inc
cmc
jnp
adc
cwde
xchg
psllq
(bad)
mov
mov
sbb
sahf
dec
das
faddp
loope
pop
dec
push
in
inc
push
lock
mov
cwd
sub
stos
pop
dec
mov
add
sbb
jecxz
inc
cli
sbb
mov
std
jnp
dec
pop
sbb
cwde
sub
add
add
in
adc
sti
mov
push
mov
pop
bnd
or
je
or
pop
xlat
ins
cwde
sub
aam
add
xchg
mov
(bad)
imul
or
stos
fisttp
add
fidivr
test
je
ror
gs
sbb
push
cmp
(bad)
std
and
xchg
pusha
jne
xchg
stc
and
repz
int
and
pop
mov
movs
or
loopne
dec
fidiv
ds
cmova
div
out
sub
adc
or
dec
sub
adc
mov
mov
pop
xchg
jecxz
ror
sbb
es
adc
xchg
jl
jmp
les
inc
fisttp
mov
xchg
sbb
push
imul
neg
cmp
dec
dec
(bad)
sar
shl
inc
fimul
mov
pop
jo
or
int
in
inc
xor
out
lds
dec
lods
out
push
inc
jno
mov
push
pop
mov
adc
push
push
xchg
(bad)
mov
mov
mul
add
add
sbb
ss
rol
leave
inc
(bad)
xor
aad
test
xchg
aas
jb
push
dec
pop
dec
jne
dec
lds
pushf
sbb
cmps
add
jecxz
jnp
cmp
adc
cwde
pop
shl
out
repnz
mov
in
test
mov
jg
repnz
(bad)
xor
push
add
test
(bad)
mov
push
in
mov
out
aam
jae
cmps
icebp
add
rcr
aaa
add
dec
inc
call
jle
femms
pop
add
retf
outs
vmovsd
mov
and
xor
out
pop
ja
sub
addr16
shl
or
dec
popf
mov
out
pop
das
shl
jg
(bad)
(bad)
into
pop
mov
mov
adc
nop
mov
ror
pusha
cmp
dec
shl
push
mov
cmp
rol
xlat
std
sbb
jns
mov
(bad)
frstor
jmp
push
ret
movs
call
jle
lods
into
and
mov
test
sbb
inc
mov
xchg
mov
(bad)
in
dec
inc
jle
mov
repz
mov
lods
pusha
xor
shr
pop
or
jbe
fwait
and
sub
idiv
aaa
sbb
xor
and
iret
rcl
test
push
and
scas
popa
jb
js
into
scas
mov
idiv
cmps
jmp
adc
inc
movs
aam
pusha
pushf
enter
pop
ror
mov
jae
popf
fstp
cs
ficomp
jno
fidiv
xor
and
adc
xchg
arpl
mov
dec
and
out
lea
jle
mov
pop
xchg
nop
sub
xor
lds
add
mov
xchg
out
hlt
cmp
test
imul
aas
dec
push
into
jle
int
ins
jno
aam
sbb
arpl
inc
push
and
xor
mov
mov
cmp
sub
cld
test
rol
hlt
adc
pop
and
adc
cmc
xchg
ins
movs
and
pusha
call
sub
push
retf
and
sub
sub
mov
or
add
adc
mov
adc
lock
ss
ret
mov
push
stc
or
icebp
xchg
or
in
mov
sub
lods
push
cmp
push
cmp
mov
sbb
sub
mov
cmp
out
in
fdivr
out
dec
pop
xor
out
mov
fs
mov
push
mov
add
jns
ss
adc
inc
rcr
fld
pop
dec
mov
adc
fdiv
ja
xor
into
dec
shr
sub
lods
aad
daa
jno
out
dec
ja
push
inc
icebp
cmp
push
popf
xor
jecxz
(bad)
lock
je
nop
sbb
test
jg
cld
in
aaa
sub
ret
dec
pop
cmp
pop
in
sub
mov
pushf
std
mov
(bad)
retf
in
shl
pop
nop
popf
das
pop
dec
push
call
pop
mov
cmp
test
add
inc
mov
xchg
mul
and
inc
sbb
lahf
sub
leave
mov
dec
mov
mov
fbstp
popf
(bad)
mov
(bad)
xchg
push
sbb
mov
push
call
vmovsd
adc
pop
leave
rol
lahf
sbb
sbb
push
aas
int3
cdq
jecxz
jns
js
loop
fld
cmp
aam
or
mov
retf
mov
iret
pop
js
cmps
(bad)
sbb
cmp
stos
pop
ins
(bad)
sbb
mov
repz
sub
test
pop
pop
xchg
adc
inc
add
sub
out
aad
pop
repz
mov
jmp
pop
jmp
push
retf
pop
mov
xor
jbe
dec
fistp
lahf
dec
pop
push
pop
(bad)
in
or
pusha
adc
sbb
pop
dec
scas
mov
mov
sbb
repz
imul
adc
fisub
mov
adc
push
std
cmps
and
test
cmp
mov
clc
lock
jp
add
pop
bound
imul
es
or
jmp
xchg
sbb
imul
xor
and
call
sbb
adc
loop
movs
sbb
hlt
in
cmp
inc
push
dec
in
stos
ins
dec
xlat
ds
jns
sar
sub
and
call
sub
stos
nop
and
out
int3
adc
aad
and
xor
jle
adc
sub
dec
leave
xchg
jle
dec
mov
(bad)
in
add
out
or
ins
inc
les
outs
div
push
cld
or
aam
lock
aam
jns
ss
bound
dec
out
mov
lods
lds
data16
scas
xor
sub
popa
jno
or
seta
iret
stc
pop
mov
mov
iret
add
cmc
(bad)
shr
into
push
pusha
movs
cmp
sub
lods
xlat
shl
std
repnz
sub
mov
loopne
scas
icebp
mov
jbe
test
in
lahf
add
mov
push
adc
mov
and
cmp
cld
add
rcr
fsub
test
or
repnz
(bad)
fbstp
push
(bad)
lods
outs
in
sub
add
adc
add
or
dec
js
call
pop
movs
ins
ret
add
shl
popf
shr
lds
mov
sub
(bad)
add
retf
test
jnp
jbe
retf
and
dec
push
call
inc
jmp
outs
push
stc
fwait
adc
addr16
sbb
std
cmp
inc
movs
fst
das
mov
inc
pop
or
arpl
retf
cmps
mov
mov
add
(bad)
cmp
push
pusha
out
or
sub
jno
lds
clc
inc
dec
je
inc
inc
mov
cmp
xor
dec
xor
jl
fsub
pop
or
stos
mov
repnz
pop
mov
mov
lods
push
lahf
sub
aam
sbb
push
mov
xchg
jp
mov
xor
mov
call
pop
out
cmp
push
jmp
dec
inc
mov
gs
or
popa
repnz
nop
mov
lock
fild
cmps
mov
xchg
loop
jg
nop
sub
in
imul
mov
cld
repnz
test
cmp
imul
mov
dec
cmp
leave
push
gs
jbe
pop
mov
repz
(bad)
imul
cmps
outs
and
jns
fimul
push
std
movs
dec
ja
cwde
cmp
sti
jae
fcom
or
mov
inc
retf
jg
std
cld
mov
addr16
jns
pop
icebp
bsf
ja
mov
jns
or
mov
fdiv
pop
pusha
out
fcom
fisubr
jp
mov
cli
xchg
ficom
xchg
sub
push
ja
mov
shl
sbb
daa
loop
mov
loope
cwde
sti
sbb
cmp
pop
pop
push
rol
push
scas
mov
ins
test
pop
(bad)
adc
addr16
xor
sar
mov
pop
enter
lahf
movs
into
mov
inc
adc
push
popa
retf
icebp
clc
jg
pop
pusha
mov
aas
jmp
mov
int
cmp
mov
gs
sbb
adc
lock
loop
push
push
cmp
xchg
mov
icebp
pop
jg
ficomp
(bad)
std
jg
push
mov
sub
cmp
int3
xchg
push
ffreep
add
cwde
stos
clc
cli
jmp
dec
xchg
iret
pop
stos
push
mov
leave
jg
jecxz
jb
mov
mov
imul
sub
fwait
adc
lock
mov
jmp
in
inc
cmovne
sub
addr16
neg
int
retf
and
mov
pop
cmp
stc
inc
push
and
or
loop
mov
xchg
xchg
sahf
imul
mov
leave
dec
sub
jbe
xchg
mov
adc
cmps
pushf
pushf
cli
mov
out
ins
pop
push
imul
out
mov
inc
sub
mov
cdq
pop
jmp
add
jg
fwait
retf
jno
xchg
cmc
jbe
retf
(bad)
repnz
push
lock
xchg
mov
cdq
ja
dec
mov
lea
mov
ins
jge
(bad)
and
jb
cdq
mov
mov
(bad)
fcom
dec
xchg
sbb
jg
and
pop
loopne
icebp
loopne
jle
push
add
aam
and
nop
shl
pop
rcr
inc
(bad)
in
xchg
loop
inc
mov
ja
push
adc
sub
aam
enter
jno
rol
xchg
lock
js
or
neg
fbld
xor
jp
ins
push
sar
test
rcr
outs
add
xchg
inc
cmp
imul
(bad)
sub
mov
mov
nop
mov
fwait
mov
xchg
vpaddb
xlat
inc
pop
lods
addr16
lahf
and
sbb
outs
rol
daa
dec
adc
sbb
aas
cmp
or
xchg
and
loope
sub
fsub
or
out
out
popf
(bad)
xlat
and
rcr
into
or
daa
mov
int
mul
test
or
stos
dec
ret
ret
mov
sub
cmc
dec
mov
cmp
push
add
add
push
fst
mov
or
inc
pop
push
dec
cmp
je
inc
stc
mov
adc
retf
mov
int
ins
mov
enter
inc
in
mov
jp
push
dec
xchg
cmp
mov
xor
mov
cld
loop
stos
mov
mov
test
cs
add
add
shr
fistp
cmp
mov
fmul
add
jle
jecxz
sbb
mov
adc
sub
pop
jge
pop
mov
imul
in
imul
mov
and
(bad)
or
pop
and
and
nop
imul
mov
mov
mov
stc
mov
lahf
add
jb
add
rcr
popa
out
pop
mov
aam
pop
jo
pop
sub
dec
pop
pop
push
adc
mov
ficomp
mov
jae
xchg
xor
pop
and
std
popf
mov
push
out
push
cmp
push
(bad)
(bad)
out
add
xlat
or
faddp
mov
mov
or
in
aas
adc
out
jne
push
sub
add
xor
sub
jae
sub
out
adc
pop
mov
mov
pushf
jae
shl
scas
hlt
mov
clc
inc
(bad)
jp
dec
je
xor
std
and
adc
mov
xor
xchg
movs
sbb
xchg
inc
push
stos
rol
lods
leave
cli
retf
mov
cmc
mov
in
mov
stc
mov
cmps
outs
fwait
ins
gs
dec
outs
outs
and
sbb
fiadd
sbb
outs
add
hlt
mov
outs
addr16
jmp
or
dec
dec
xchg
fs
sub
fs
ins
mov
test
xlat
cmp
add
fild
out
outs
and
es
adc
xor
(bad)
adc
sti
add
shl
jecxz
pop
and
add
aad
pop
daa
pop
stc
retf
jno
loope
sub
mov
ins
push
pop
inc
mov
jp
es
xor
add
and
icebp
dec
push
mov
xor
out
add
(bad)
daa
and
pop
jg
push
jp
jo
hlt
pusha
loop
inc
scas
call
outs
jbe
pop
data16
iret
mov
imul
sbb
pop
jecxz
or
out
jnp
aam
sbb
test
inc
jnp
hlt
dec
adc
cwde
fwait
sbb
sub
ret
push
pmulhw
enter
std
xor
cli
bound
push
or
and
add
sahf
cmc
jp
pushf
pop
or
mov
inc
cwde
cmp
mov
sub
and
pop
lds
outs
push
retf
fwait
jnp
test
xchg
iret
aad
dec
pop
xor
and
(bad)
cli
ret
aaa
call
adc
jns
sub
add
mov
mov
and
dec
add
rcr
mov
xchg
mov
call
loop
cmp
xor
mov
cmp
test
push
and
movs
jbe
sbb
xchg
in
cmp
jbe
das
scas
add
pop
cmp
add
pop
cmp
movs
int
aaa
inc
imul
mov
mov
loop
rol
mul
sbb
sti
or
test
inc
loop
adc
sbb
inc
pop
mov
fist
imul
add
dec
sbb
mov
pop
pop
push
fadd
pop
aas
and
sub
jmp
mov
add
mov
shl
fistp
sahf
cli
sub
push
jg
adc
jle
pop
mov
push
dec
mov
popf
retf
xor
xchg
neg
inc
or
mov
add
inc
dec
fistp
movs
xchg
pop
mov
out
push
cli
aam
pop
or
pop
dec
add
inc
mov
repnz
lgs
cmp
mov
mov
mov
inc
lahf
shl
jg
test
cmp
ficom
shr
or
xchg
inc
leavew
popa
rcr
in
dec
div
xchg
test
cmp
pop
jo
sbb
inc
jnp
dec
xlat
pop
rol
cmps
daa
outs
test
bound
(bad)
lock
retf
or
dec
sar
cmp
shr
push
pop
mov
dec
test
mov
xchg
xor
stc
adc
or
lock
dec
leave
or
iret
(bad)
stos
cld
lock
mov
lock
int
ins
dec
pop
jl
cli
(bad)
jno
lods
gs
add
xchg
lsl
repnz
outs
dec
or
fwait
sbb
mov
inc
test
jb
jle
or
mov
repz
int
and
push
retf
fldenv
push
adc
cld
(bad)
std
dec
add
and
in
or
sbb
nop
popa
mov
(bad)
adc
lods
int
(bad)
or
or
lock
jmp
pop
fs
outs
pusha
outs
adc
mov
iret
xor
cmp
test
sbb
in
shl
mov
sub
dec
and
fs
test
lds
fisubr
cli
and
and
movs
add
mov
or
cmc
stos
push
out
inc
fcomp
enter
or
stc
mov
inc
xchg
adc
sbb
cmp
mov
test
bound
mov
adc
add
add
push
mov
enter
mov
xor
fimul
xchg
stos
pop
aaa
adc
sar
push
enter
cld
fs
xchg
std
aas
test
sbb
jno
cmps
sub
lds
bnd
mov
jge
int3
outs
inc
sub
mov
cmps
shr
pop
sub
xchg
mov
xchg
pop
xlat
mov
pop
and
pop
adc
aas
call
or
call
cmp
xchg
pop
aas
cmp
sbb
jmp
hlt
jno
sbb
sub
mov
dec
jae
xchg
jo
loope
sahf
push
adc
or
sahf
gs
repnz
push
aas
or
(bad)
adc
or
sub
jnp
xchg
or
int3
mov
push
or
xor
in
xor
(bad)
stos
adc
cld
outs
mov
xor
inc
inc
jnp
int3
jo
xlat
data16
into
mov
leave
fs
pop
stos
sbb
stos
mov
ret
inc
cmps
imul
sbb
cmps
inc
jae
add
mov
adc
cmp
shl
(bad)
pop
and
adc
fnstenv
daa
adc
(bad)
adc
shl
imul
jl
xchg
dec
fcmovnbe
push
mov
rol
rol
cmp
movs
pusha
aas
push
mov
jns
mov
mov
pop
push
(bad)
shl
ret
sbb
cli
das
xor
(bad)
in
dec
cmp
outs
(bad)
push
dec
mov
into
ret
sbb
inc
shr
jmp
mov
xor
cmp
jg
jp
xchg
ss
xchg
fs
aad
mov
mov
fwait
adc
or
mov
fwait
jecxz
sub
jb
fisttp
inc
mov
(bad)
mov
sahf
sub
push
push
pop
push
and
out
dec
fwait
pop
jae
hlt
pop
rol
xor
(bad)
push
inc
rcl
mov
adc
out
mov
(bad)
push
or
mov
icebp
imul
aas
lods
add
nop
cwde
push
push
inc
inc
xchg
dec
lods
jns
cmp
sbb
clc
gs
cmp
adc
pop
pop
cwde
out
jnp
in
sub
(bad)
out
dec
(bad)
ss
shr
pushf
dec
pop
mov
jl
gs
jmp
jnp
(bad)
retf
repnz
xor
jmp
sti
add
or
push
jg
jnp
jge
add
xchg
jl
adc
outs
aaa
sbb
push
jmp
scas
cmc
push
sub
xor
mov
add
(bad)
ss
push
adc
mov
ja
pop
jno
mov
cs
push
sub
dec
pop
into
jns
aad
fisttp
sub
fdiv
cmp
pop
test
es
xchg
jg
je
mov
ins
adc
in
fist
(bad)
mov
xor
pop
fsubr
sub
mov
icebp
dec
es
jg
popa
push
ret
js
or
sti
mov
push
sub
jb
aaa
xor
retf
hlt
mov
add
mov
xchg
mov
cmp
pop
mov
cli
sti
ret
mov
cmc
mov
leave
pop
fistp
xchg
push
mov
in
xchg
scas
cmps
fcomp
jmp
ins
pop
mov
loopne
(bad)
scas
adc
js
sbb
mov
les
sbb
fs
or
add
das
fadd
sub
dec
test
aaa
pop
fs
mov
fadd
aaa
aaa
inc
cli
mov
std
inc
fcom
les
(bad)
int
ret
pop
fdiv
popf
and
dec
inc
mov
rol
pop
ficomp
mov
push
daa
xor
loopne
sti
loop
in
(bad)
mov
or
inc
mov
out
loope
push
xchg
imul
aaa
dec
mov
and
iret
xlat
leave
xchg
mov
mov
nop
push
leave
sahf
gs
aas
xchg
xchg
(bad)
and
mov
dec
imul
xor
rcr
mov
pusha
nop
test
inc
int
cmp
stos
dec
jmp
cmp
push
fwait
lock
loopne
dec
sub
bound
sub
call
and
lods
enter
in
repnz
pop
sub
ret
ss
push
xor
call
jbe
sbb
not
(bad)
mov
xchg
mov
addr16
or
inc
aas
adc
mov
inc
les
call
sar
cmp
in
mov
sub
fs
lock
sub
rol
sub
pop
test
jle
dec
fild
or
sbb
adc
test
movs
clc
and
and
test
loopne
iret
sbb
mov
jmp
or
loop
and
cmc
in
jmp
iret
or
pop
push
xchg
inc
test
jle
shl
push
inc
jne
cld
xor
pop
xchg
nop
xor
mov
imul
ja
add
jns
mov
mov
mov
daa
jp
daa
shl
std
dec
push
xchg
enter
xchg
popf
inc
add
mov
sahf
and
push
cmp
jbe
dec
addr16
ret
jle
push
lods
xchg
inc
ror
xchg
xor
sbb
jg
sar
cmp
cmps
mov
(bad)
adc
mov
jmp
cmp
je
ins
cmp
xchg
pop
mov
xor
loop
cli
(bad)
pop
mov
ss
inc
mov
adc
jnp
inc
mov
mov
loop
cdq
dec
jge
push
shr
test
loop
cmp
pop
fs
jmp
mov
rol
inc
hlt
mov
cmp
call
pushf
push
lds
aas
dec
mov
lea
leave
mov
sub
mov
add
xlat
mov
cmp
js
push
cmp
and
jae
dec
ins
test
out
loope
popa
test
lods
ins
je
call
pop
outs
push
popf
pop
add
scas
loope
shr
repnz
sbb
mov
dec
cwde
je
xchg
xchg
dec
mov
xor
retf
jp
mov
scas
mov
cdq
daa
imul
mov
dec
adc
popf
fnsave
inc
mov
jbe
inc
mov
in
inc
sub
jo
xchg
loopne
or
cs
mov
add
sbb
repz
movs
mov
inc
rcl
cli
adc
mov
mov
xor
xlat
rol
cwde
add
pop
jae
shl
push
imul
add
cmp
ret
movs
sub
in
push
and
xchg
jmp
loope
mov
xchg
xor
stc
add
aas
pop
test
inc
stos
popf
aad
dec
aam
int3
call
inc
cwde
(bad)
out
pop
loopne
aam
adc
and
retf
scas
xchg
stos
adc
jmp
fimul
push
push
and
xor
pop
jg
(bad)
gs
imul
dec
mov
cmps
push
fsub
mov
popf
cs
rol
(bad)
sbb
sub
sahf
mov
pop
in
int3
mov
cmp
xlat
sub
popw
test
jne
int
push
mov
ja
test
pop
adc
call
in
sub
fistp
xchg
sub
retf
and
out
fimul
jae
jne
and
mov
jmp
ret
gs
scas
and
push
xchg
fmul
add
add
repz
loope
outs
popa
fisub
dec
scas
mov
mov
or
mul
xchg
stos
inc
xchg
mov
push
cmps
add
xchg
xchg
mov
(bad)
push
sbb
icebp
mov
cdq
cmc
xlat
mov
cdq
repnz
sbb
jbe
les
and
and
outs
dec
into
add
loopne
pop
adc
mov
data16
mov
jp
inc
ins
mov
push
mov
ins
out
icebp
cmp
jns
xlat
and
fild
mov
mov
dec
xchg
hlt
mov
popf
mov
fidivr
jnp
and
and
shl
(bad)
xor
and
cmp
mov
sbb
cmps
outs
or
cmp
mov
test
lods
imul
outs
out
jnp
mov
or
test
fstp
mov
push
std
mov
jb
imul
dec
or
adc
(bad)
lock
push
mov
dec
adc
or
retf
int3
retf
(bad)
sahf
data16
mov
pop
mov
mov
stos
add
repnz
adc
and
lods
xchg
mov
nop
in
xor
rcr
dec
mov
pop
and
push
pop
mov
aas
enter
cmovo
les
sbb
outs
inc
mov
pop
mov
sbb
xor
inc
mov
push
or
push
xchg
sub
pop
aam
in
loop
pop
clc
(bad)
lea
jg
pop
mov
add
stos
retf
push
jmp
jge
les
add
push
pavgw
jns
xor
and
pop
push
scas
xor
push
outs
mov
in
xchg
mov
into
out
dec
sbb
enter
sub
pusha
mov
adc
xor
sbb
int
adc
out
bound
aas
push
into
fsubr
dec
mov
mov
and
nop
xor
inc
pop
mov
inc
shl
or
or
imul
push
xor
imul
retf
push
xor
inc
or
adc
cmp
inc
call
cmp
dec
xlat
movs
xor
cwd
cdq
call
inc
xor
lahf
pop
call
icebp
ds
icebp
pusha
imul
dec
fstp
jmp
cmp
out
add
dec
scas
and
stos
je
cmps
add
add
or
out
into
push
sub
sar
add
loop
cmp
in
imul
mov
repnz
pop
mov
inc
push
scas
add
sbb
and
fidivr
xchg
push
lods
and
push
stc
setno
sbb
ror
test
push
push
rcl
jo
imul
das
sub
pop
dec
cmp
inc
dec
pusha
sbb
movs
inc
rcl
ret
mov
pop
stos
and
mov
mov
jecxz
test
pusha
sbb
dec
pop
push
mov
lods
push
mov
and
cmc
out
inc
in
sub
call
xchg
mov
(bad)
sub
das
addr16
and
cmp
jo
xor
push
sub
xchg
lock
je
sub
repz
daa
iret
pop
push
ss
movs
pop
cdq
aas
or
dec
daa
inc
rcr
movs
adc
arpl
push
in
xor
dec
shr
adc
loopne
imul
push
pop
cmc
cmc
jae
mov
mov
and
rcl
dec
inc
aad
adc
test
test
ds
jecxz
inc
sti
adc
inc
mov
pop
das
(bad)
cmp
dec
imul
scas
test
loopne
jb
cmc
dec
cmp
loop
js
jb
repnz
pop
sub
int
cdq
mov
cwde
pop
cmp
addr16
sbb
adc
test
ins
clc
mov
pop
push
push
lock
pop
mov
(bad)
xchg
pop
rcr
cld
mov
sbb
xchg
mov
repz
inc
mov
retf
inc
rol
sub
and
jne
adc
aas
add
ins
lea
cmp
lods
sbb
push
add
xchg
mov
pop
push
xchg
fsubr
mov
jle
sub
xor
push
fidiv
xlat
cmp
xchg
mov
mov
(bad)
xor
jecxz
mov
or
cmp
jl
cld
popa
sbb
mov
mov
data16
sbb
cmp
into
int3
mov
cmps
jbe
outs
sbb
cmc
ret
(bad)
push
push
mov
pop
inc
fsub
fcmovnb
das
das
ficom
jne
dec
add
call
test
out
ins
mov
rcl
lock
lods
sbb
xor
jbe
jns
aaa
retf
adc
fwait
add
sbb
test
cmp
inc
rcr
jl
stos
mov
iret
fidivr
and
out
sub
pop
scas
push
jae
enter
sahf
xlat
inc
dec
sar
clc
dec
or
repz
int
dec
mov
test
movs
test
pop
push
sub
iret
scas
sbb
mov
rcl
pop
cmp
es
pause
pop
pop
or
sti
sahf
mov
mov
mov
sbb
adc
scas
arpl
into
dec
pop
mov
mov
xchg
scas
mov
lods
aad
rol
pop
sub
mov
pop
fwait
push
xchg
fsubr
add
retf
fwait
pop
outs
shr
mov
jns
adc
xor
add
jnp
push
icebp
sbb
ror
dec
sbb
cmp
sbb
call
fisttp
push
outs
lock
sbb
sti
movs
(bad)
add
push
sti
ret
mov
push
arpl
add
fdivr
icebp
daa
rcl
std
fs
pushf
sub
(bad)
cmp
stos
stc
inc
jmp
inc
loope
xchg
clc
bound
mov
push
test
test
xchg
mov
div
lock
(bad)
jp
mov
and
add
js
mov
push
outs
addr16
sar
ins
mov
ret
push
scas
xor
sub
jle
in
fcomp
push
(bad)
(bad)
cmps
xchg
jmp
dec
inc
lock
or
xor
push
jnp
mov
or
loope
in
das
nop
rcl
push
ja
fisttp
or
xor
dec
xchg
mov
push
mov
or
cmp
add
ins
pop
in
int3
mov
mov
test
es
ret
jne
push
push
dec
sti
jmp
(bad)
(bad)
repz
mov
cdq
inc
adc
aaa
mov
dec
popf
rcr
dec
mov
(bad)
aaa
xchg
xchg
std
cmp
daa
add
adc
or
mov
push
jg
je
push
shl
push
or
sbb
(bad)
mov
mov
add
xchg
sub
sbb
cmp
adc
inc
call
xor
enter
cwde
jl
mov
push
cs
xchg
es
sbb
xchg
stc
sahf
sub
sti
jmp
pop
jecxz
into
iret
dec
adc
cmp
push
sbb
ret
xchg
rcr
dec
xor
std
or
dec
and
(bad)
loope
cdq
rol
dec
icebp
jmp
out
leave
push
cli
sub
cmps
sbb
inc
cli
xor
jmp
inc
aad
push
mov
outs
push
mov
and
movs
scas
stos
sub
pop
icebp
xor
xchg
inc
or
mov
mov
xchg
mov
adc
xor
dec
pop
xchg
cs
leave
aas
outs
in
push
out
mov
mov
dec
pop
mov
add
hlt
(bad)
cmp
and
mov
jmp
push
xor
jmp
push
(bad)
adc
jp
into
pop
dec
clc
mov
jbe
test
jmp
mov
sub
cwde
dec
pop
cmps
xchg
lods
pop
cld
clc
push
pop
ror
push
pop
sahf
icebp
or
test
lds
fadd
adc
pop
mov
xchg
fadd
out
jge
or
gs
or
ins
xor
pop
(bad)
enter
mov
push
cmp
das
xor
mov
sbb
loop
bound
jnp
jae
lods
shl
ins
pop
test
mov
ins
pop
xlat
imul
sar
idiv
or
test
je
adc
stc
call
fwait
inc
sti
jno
inc
mov
sahf
cmp
pop
pop
bound
cmp
arpl
std
test
pushf
push
outs
fld
mov
inc
mov
gs
inc
es
sub
mov
cmp
sti
jb
test
pop
in
push
sbb
dec
out
pop
mov
dec
fnstcw
push
sub
push
cmp
ret
imul
imul
or
(bad)
push
in
dec
fstp
shl
xchg
sti
or
daa
pop
pusha
jge
cmps
leave
push
or
sbb
iret
nop
call
data16
shl
mov
cmp
(bad)
inc
sbb
xor
inc
cmp
loopne
(bad)
cwde
pop
int3
pushf
cli
cmp
sub
jb
test
sar
enter
fs
frstor
popf
pop
pop
popa
(bad)
int
mov
ds
into
nop
xor
mov
inc
rcr
pop
cs
call
push
mov
inc
into
cld
(bad)
fbld
shl
jl
cmc
pusha
outs
add
les
out
jbe
and
or
mov
ror
sub
add
outs
aad
fs
pop
sub
in
ficomp
outs
dec
daa
mov
mov
mov
cwde
popf
push
fld
out
xchg
pop
xlat
push
es
mov
nop
(bad)
aas
cmp
sbb
mov
mov
or
sub
xchg
adc
rsm
inc
push
inc
leave
mov
push
cs
loope
dec
ret
shl
test
or
int
mov
aad
sub
and
cmp
jg
sbb
icebp
out
or
test
pop
(bad)
jmp
sub
mov
add
sahf
test
in
jo
add
out
inc
jl
movs
mov
mov
add
call
xor
push
fidiv
out
(bad)
push
popa
in
cld
mov
jmp
or
mov
jmp
mov
shr
popf
jecxz
in
cmp
into
mov
cmps
dec
iret
jmp
or
aaa
add
popa
int3
push
xchg
cmp
adc
inc
call
and
pop
repnz
call
imul
shl
js
cmp
push
jne
push
sti
xor
xor
mov
adc
fldcw
push
fsub
inc
out
call
mov
sub
mov
cmp
cld
ret
jmp
dec
and
inc
or
inc
outs
mov
and
movs
ror
push
test
std
push
hlt
cmp
jo
pushf
shl
out
sub
pop
shr
sbb
out
push
xchg
mov
pop
dec
inc
xchg
inc
retf
xchg
jne
mov
or
leave
mov
test
std
pop
out
sahf
ja
lahf
mov
mov
ins
retf
cdq
push
cmp
jmp
lock
cmc
lods
fmulp
nop
pop
gs
dec
and
inc
ds
adc
jge
cmp
sub
xchg
sbb
nop
rcr
xchg
or
dec
int3
loop
jmp
sti
jmp
mov
cmp
cmp
test
mov
mov
xor
lock
mov
out
out
push
cmp
jb
sub
adc
enter
jg
sbb
cdq
pop
jne
rcl
cli
pop
jge
mov
and
cli
or
es
outs
pop
and
and
jnp
sbb
sub
movs
mov
(bad)
rol
pusha
out
(bad)
ins
jecxz
inc
or
mov
xor
dec
loop
mov
lahf
lds
xchg
repnz
inc
inc
mov
addr16
fwait
push
mov
ror
sbb
sbb
sar
leave
popf
adc
pop
or
lods
cmp
and
enter
cmp
loop
mov
fnclex
fcom
or
out
sar
mov
mov
jl
mov
mov
jp
pop
iret
jne
aas
aam
mov
cld
pop
stos
rcl
sbb
sbb
xor
pop
test
dec
clc
xor
or
mov
sub
mov
jb
mov
mov
adc
add
cwde
nop
clc
or
add
cmp
push
jbe
sub
mov
and
stc
jo
push
shr
stc
mov
pushf
arpl
sub
test
cmp
cmp
adc
shl
and
outs
push
mov
in
push
cmp
adc
adc
leave
sbb
sub
cdq
mov
out
cmp
sub
mov
mov
test
pushf
fcomi
sbb
outs
mov
lea
push
scas
pop
nop
xchg
push
aam
and
jg
ja
pop
hlt
sbb
shr
inc
and
pop
xchg
xor
and
test
aas
mov
in
rol
cmp
aad
mov
add
mov
fstp
mov
and
jmp
push
sub
push
addr16
mov
add
lods
xchg
clc
outs
aas
dec
jne
pushf
scas
cmp
scas
add
jle
stos
jmp
jle
popa
push
sti
rcl
fnstcw
dec
jmp
aad
inc
mov
inc
xchg
mov
sbb
je
pop
scas
xchg
ret
sahf
in
jmp
(bad)
jae
mov
jmp
inc
sub
jmp
xchg
outs
pop
mov
cmps
sahf
add
sahf
pusha
imul
mov
mov
popa
adc
addr16
js
das
push
clc
lods
(bad)
sub
jge
jmp
pusha
jmp
inc
and
sub
and
mov
inc
ficomp
or
(bad)
call
imul
push
sbb
sbb
lock
leave
or
inc
jo
div
push
lods
inc
pop
stos
ins
cli
jl
rol
ins
push
mov
pop
mov
(bad)
ret
std
jmp
push
gs
ja
pop
and
xor
fs
mov
pop
dec
cmp
inc
jb
shr
(bad)
or
and
(bad)
mov
aam
test
adc
fild
adc
aam
mov
ins
adc
xchg
es
mov
add
dec
test
dec
and
pop
cmp
sbb
push
(bad)
and
push
push
add
in
add
call
addr16
and
or
dec
sub
(bad)
out
enter
int3
pop
js
add
push
jmp
push
jl
scas
push
sti
or
mov
inc
cmp
or
push
pop
or
out
(bad)
xchg
fild
mov
mov
aad
outs
cwde
scas
mov
sbb
inc
push
lahf
push
jo
in
stc
jge
xchg
and
jl
or
cld
shl
xlat
call
xchg
adc
jmp
xchg
push
push
jge
ret
xchg
or
retf
push
scas
pushf
adc
mov
or
xchg
(bad)
into
jne
scas
dec
das
jle
mov
aam
push
imul
std
pop
xchg
adc
pop
aaa
cdq
sahf
outs
dec
scas
push
xchg
jne
fdivr
jb
sbb
aad
pop
hlt
dec
nop
movs
push
sar
pop
mov
aam
push
push
mov
sub
es
lock
or
sub
outs
pop
movs
jg
or
push
int3
stc
push
mov
test
mov
or
mov
psubb
sub
(bad)
dec
inc
cmps
jl
pop
adc
mov
pop
rcr
inc
mov
hlt
loope
pop
dec
adc
pop
enter
mov
pop
xchg
inc
sub
jmp
sub
jmp
out
call
shr
inc
enter
out
inc
xchg
jo
data16
ins
shl
dec
mov
inc
aad
pushf
pop
stc
and
test
(bad)
inc
jg
test
fild
bound
or
inc
mov
aam
xchg
cmp
adc
in
inc
mov
cmc
stos
jmp
xlat
jmp
cdq
and
hlt
jg
fcmovnu
jmp
cwde
lods
cmp
into
outs
sbb
sub
dec
xchg
ret
jo
cmovg
sub
je
popf
cmp
mov
mov
inc
dec
shr
mov
mov
jmp
stos
pop
adc
inc
add
sbb
mov
test
cmp
xchg
js
fs
jnp
and
cs
inc
(bad)
aad
in
ret
push
gs
mov
or
in
or
push
cwde
dec
cmovg
pushf
sbb
dec
loope
enter
aas
call
hlt
push
add
push
call
popf
xchg
inc
jb
enter
pop
push
ins
xor
mov
mov
sbb
retf
cmc
pop
or
or
add
jp
pop
enter
fdiv
cwde
jnp
xor
push
cmp
imul
add
imul
aas
pop
nop
and
mov
and
outs
(bad)
bound
jle
cmp
rcr
sti
outs
ds
aad
jmp
pop
xchg
push
adc
enter
dec
jno
call
or
dec
push
int3
rol
rol
cmp
cs
xchg
inc
xchg
(bad)
out
pop
push
xchg
mov
icebp
movs
fs
sti
jp
fisub
pavgusb
imul
fbld
outs
lods
pop
ins
or
or
jmp
test
je
xor
inc
mov
cld
daa
push
jae
out
daa
je
outs
xor
push
hlt
aam
or
fcomp
fcmovnbe
push
fcomp
pop
shl
(bad)
add
ret
ret
adc
fldenv
leave
rol
xchg
rcl
sbb
scas
dec
and
ret
test
test
pop
push
hlt
shr
xchg
das
or
cwde
xor
movs
push
shl
call
and
push
adc
cld
std
in
xchg
jmp
ins
and
cmp
pop
ins
push
dec
idiv
(bad)
xchg
push
ret
movs
push
jnp
pop
adc
mov
stos
pop
cwde
stos
pop
in
in
in
out
push
fucomip
sbb
dec
out
cmp
add
push
mov
adc
ins
sti
cmp
sbb
ret
mov
sub
xlat
jmp
pop
sbb
stos
or
or
addr16
pop
dec
cmp
(bad)
sbb
in
push
ds
xchg
push
idiv
leave
inc
aas
add
dec
mov
or
scas
lods
nop
pop
(bad)
inc
ficom
mov
xchg
stos
fadd
jle
ins
pop
add
dec
arpl
jne
in
daa
jge
fbstp
(bad)
xor
sbb
(bad)
enter
dec
cmc
fdivp
es
in
hlt
pop
adc
shr
dec
in
pop
scas
lock
mov
xor
push
fist
movs
xor
inc
add
inc
pusha
mov
sbb
int
sti
xor
jnp
imul
lock
sub
push
jmp
test
repnz
inc
fsub
and
inc
pop
or
jb
cmp
stos
inc
mov
fild
push
in
sub
fcomp
lahf
stc
mov
test
(bad)
pop
loope
jg
sbb
fwait
dec
pop
fstp
adc
mov
xor
xlat
mov
push
es
imul
pop
mov
push
push
fild
mov
retf
push
jns
fdiv
inc
xor
xor
pop
ror
xchg
adc
jo
sub
dec
inc
gs
frstor
loope
dec
(bad)
mul
rcr
inc
pop
inc
xor
add
in
icebp
clc
in
das
retf
cwde
pop
adc
ins
jo
loopne
cmp
mov
sti
addr16
add
daa
adc
adc
push
lahf
call
jmp
iret
fbstp
adc
jle
pop
in
loopne
and
fst
aas
dec
cmp
pop
or
(bad)
xor
addr16
ss
jg
dec
add
in
adc
jne
inc
cmp
xchg
cmp
stos
retf
fld
test
addr16
(bad)
in
fwait
aam
sbb
repz
sbb
mov
movs
(bad)
sbb
gs
jnp
adc
xchg
in
adc
sbb
cwde
push
cmp
dec
cmp
pop
adc
stos
arpl
jo
ins
mov
repnz
xchg
repnz
iret
cld
cmp
mov
inc
sahf
mov
and
call
sti
cld
pop
xchg
popa
jle
cmps
sbb
mov
ret
mov
sub
mov
out
cmp
repz
jb
popa
or
xchg
push
adc
(bad)
fcom
mov
sub
pop
pop
xchg
hlt
in
les
pop
push
mov
mov
ins
fldenv
retf
in
ins
fstp
test
bound
aad
lea
imul
xor
sub
(bad)
mov
repnz
das
mov
pop
add
ja
inc
popf
imul
mov
inc
je
test
jns
arpl
jmp
call
loopne
xor
scas
vpsubsb
int
mov
dec
add
aad
xor
(bad)
add
pop
mov
dec
and
imul
xchg
fmul
fimul
int3
adc
xchg
cld
push
dec
mov
jmp
mov
mov
or
mov
gs
jl
and
jbe
dec
fucomip
iret
mov
mov
cmc
fdiv
xchg
dec
pop
push
mov
pop
call
test
add
push
mov
dec
stos
push
cmp
enter
sti
retf
mov
sbb
loope
nop
jno
mov
(bad)
(bad)
daa
jnp
ja
add
xchg
das
dec
pop
cdq
loope
cmc
inc
cmovb
mov
pop
arpl
adc
mov
into
and
test
dec
pop
iret
inc
mov
leave
retf
retf
sub
int
add
popa
(bad)
cwde
loop
in
cli
outs
jecxz
arpl
xor
or
rol
jnp
xor
xor
movs
adc
pop
popa
mov
test
fistp
or
adc
pushf
out
pop
pop
pushf
repnz
jp
mov
retf
ret
inc
push
sbb
inc
xor
cmps
mov
push
mov
ret
jae
mov
xchg
mov
xchg
popa
inc
jbe
test
iret
mov
out
aaa
mov
rcl
xchg
push
out
fld
out
and
jb
xchg
sub
push
sbb
xor
xchg
xor
imul
loope
push
push
call
adc
push
xchg
ins
cmps
inc
xchg
ficomp
jle
imul
and
inc
rcl
scas
leave
or
lea
sbb
pop
shr
push
nop
cld
add
test
fdiv
inc
jbe
retf
inc
(bad)
mov
or
clc
jbe
test
jle
sbb
pop
dec
pop
jge
dec
add
pop
loope
push
cmp
movs
dec
xor
inc
jno
cld
and
ffreep
mov
push
adc
xor
add
adc
mov
sbb
pop
bound
cmp
xor
jp
(bad)
clc
shl
call
sbb
push
imul
retf
stc
cmp
loopne
add
scas
lahf
bound
sbb
add
or
push
mov
mov
or
jmp
mov
jns
sub
push
fcmovb
mov
dec
lods
fadd
ss
push
fisttp
jmp
mov
js
movs
ds
mov
or
loope
popa
mov
aas
jnp
mov
inc
or
dec
sub
clc
push
cwde
xchg
ss
aad
ss
in
ins
std
push
int3
jae
call
lods
mov
xlat
adc
stos
shl
mov
dec
cmp
mov
popf
aaa
aam
lahf
(bad)
mov
fmul
or
mov
adc
test
xor
and
and
mov
stos
(bad)
sbb
jecxz
repz
stos
lea
inc
imul
and
push
adc
sub
clc
stc
dec
jno
mov
imul
es
jbe
mov
add
sbb
div
popf
(bad)
jmp
aam
inc
ins
call
xor
(bad)
mov
push
test
jg
or
fdiv
outs
lock
mov
sbb
cmc
push
or
fwait
and
cmps
loope
xchg
arpl
imul
movs
mov
js
fld
(bad)
idiv
aam
sub
jle
pop
les
mov
ins
push
inc
rcr
mov
jp
xchg
sub
icebp
jno
dec
pop
shl
mov
or
retf
mov
dec
das
mov
xchg
xchg
adc
mov
xor
retf
lea
mov
in
add
jmp
add
fisttp
data16
xchg
dec
xor
test
adc
scas
stos
pop
push
popf
pop
fnstenv
(bad)
xor
arpl
add
sub
div
add
push
cdq
mov
pop
cmp
mov
pop
push
pop
popw
hlt
enter
jae
and
or
mov
inc
leave
xchg
call
adc
mov
ror
aad
push
adc
je
aam
dec
add
(bad)
aas
dec
pop
ret
cli
sub
xchg
jp
xor
jmp
xor
ins
cld
lds
mov
dec
in
sahf
inc
xor
and
adc
jl
cdq
rcl
mov
int
and
adc
jmp
dec
(bad)
imul
xor
add
cmp
rol
scas
cmp
cmp
sbb
mov
cmps
test
push
push
mov
dec
mov
loope
cmc
or
cmp
retf
dec
and
adc
repz
xchg
mov
mov
sar
xchg
push
aaa
ds
push
pop
mov
dec
xor
inc
idiv
adc
fiadd
mov
cmp
(bad)
popa
out
ss
xchg
adc
dec
and
clc
xchg
ins
fadd
add
clc
imul
int3
js
adc
push
sub
shr
cmp
repz
bound
ret
mov
rdmsr
and
int3
push
aam
push
dec
jno
test
cld
test
pop
and
(bad)
js
stos
push
pop
loopne
inc
loope
call
sub
mov
ficom
jnp
sbb
icebp
(bad)
(bad)
mov
in
fadd
cmp
push
or
push
sbb
pop
sti
jp
mov
or
pop
push
out
adc
std
mov
adc
pop
fisub
push
popa
adc
(bad)
lea
sbb
jb
je
adc
sti
mov
push
stc
mov
cmp
test
mov
mov
outs
sbb
call
and
ss
dec
adc
add
nop
dec
loope
(bad)
mov
adc
jno
pop
xor
mov
mov
aas
push
(bad)
dec
cmp
xor
jo
pop
lea
xchg
nop
push
mov
ins
and
push
popf
jo
(bad)
mov
mov
fild
dec
or
jne
mov
or
test
into
(bad)
jge
pop
icebp
pushf
cmp
gs
mov
or
lahf
dec
jle
jmp
daa
mov
xchg
mov
fsubr
mov
les
stos
push
vcvtss2si
xor
mov
and
(bad)
rol
inc
sub
imul
fs
aas
mov
or
int
sub
mov
cmp
mov
movs
dec
fwait
inc
imul
test
jp
lock
popf
inc
movs
adc
repnz
daa
es
pop
and
xor
jnp
test
fwait
jge
sub
je
call
dec
push
aaa
es
aaa
dec
retf
mov
stos
dec
jp
mov
push
mov
shl
in
lds
sti
rcr
popa
or
cmp
daa
sbb
xchg
(bad)
jmp
push
mov
aam
mov
sti
or
test
cdq
(bad)
arpl
bound
test
(bad)
aaa
dec
or
mov
add
sbb
cmps
mov
sub
add
mov
mov
jae
dec
dec
stc
lahf
inc
cmc
xchg
and
mov
inc
fwait
sub
test
pop
scas
cmp
fnsave
push
int
pop
inc
repz
mov
out
push
ins
fbld
jge
adc
cmp
pop
out
mov
and
jmp
mov
sub
inc
xor
je
dec
in
enter
imul
xchg
jl
not
bound
dec
push
adc
in
lods
cmc
rcr
pushf
inc
ret
xor
fisttp
int3
mov
jg
fistp
aam
ins
int3
lds
cmp
mov
mov
xchg
into
movs
into
mov
inc
sbb
mov
push
inc
adc
xchg
cli
cmps
enter
add
lahf
ins
pusha
sub
push
or
mov
push
mov
mov
stos
imul
and
jge
outs
mov
pusha
xchg
jle
arpl
cmp
aaa
pop
xor
aam
xlat
and
adc
pop
bound
push
fwait
sbb
daa
hlt
loop
je
cmc
stos
mov
test
out
(bad)
repz
push
push
pop
lods
movs
shr
cli
push
jecxz
stc
loopne
call
stos
lods
and
ret
dec
push
xlat
cmps
out
inc
or
add
cmp
(bad)
mov
pop
push
add
shl
inc
fsubr
adc
xlat
fld
jns
sahf
or
xor
aaa
je
cmp
or
adc
sbb
sbb
jns
in
or
adc
aad
and
push
or
int
cmps
jb
push
xor
or
mov
push
push
movs
dec
xor
cmovno
pop
adc
and
cmp
test
inc
or
sti
pop
gs
dec
arpl
(bad)
sbb
or
pusha
sar
push
rcr
jo
xchg
push
ins
cmp
fidiv
or
dec
call
xchg
push
sub
adc
add
je
jge
mov
add
fsubr
sub
movs
int
popf
out
jno
pop
or
add
or
jns
rol
cwde
inc
add
aas
inc
pop
clc
fcmovne
inc
int
iret
(bad)
sub
or
xor
adc
xchg
mov
daa
cmps
dec
adc
retf
mov
mov
(bad)
in
xor
test
sub
mov
xchg
add
popa
pop
sbb
or
lds
push
fldenv
cli
pop
pop
sti
xchg
pop
add
fstp
inc
jecxz
sbb
fsubr
sar
(bad)
mov
in
jg
mov
dec
adc
stos
adc
outs
xchg
scas
push
arpl
push
mov
inc
add
js
mov
(bad)
xchg
jno
cmp
pop
into
in
mov
int3
mov
cmp
je
rcl
jmp
outs
data16
or
add
inc
fsub
xor
ret
sar
lahf
inc
xor
jns
pop
xchg
movs
mov
add
in
jmp
mov
push
mov
and
pop
lods
mov
push
add
repz
xor
adc
cli
out
cwde
lahf
xchg
scas
data16
mov
in
mov
loop
xchg
inc
jnp
cmc
adc
repz
push
dec
outs
pop
jbe
add
adc
xchg
inc
jp
mov
stos
mov
mov
add
cmp
in
jo
iret
mov
and
(bad)
pop
aas
movs
iret
dec
pop
dec
test
pop
xchg
scas
add
cmps
popa
and
ficom
jb
jmp
test
ins
in
add
scas
mov
and
mov
mov
pop
popf
mov
ds
and
inc
fiadd
sub
mov
daa
adc
mov
lds
push
sbb
out
fcomp
(bad)
call
and
push
xlat
xchg
push
mov
push
int
shl
stos
mov
scas
lods
or
cli
mov
into
mov
pop
les
jle
xor
add
cli
repnz
data16
sub
xor
enter
adc
jns
ins
jbe
popa
in
jne
int
jg
jl
dec
lahf
or
js
test
pop
pop
or
cmp
out
int3
stos
lds
test
addr16
push
xchg
repz
adc
mov
push
lods
(bad)
outs
out
inc
add
jno
out
jnp
pop
mov
mov
dec
xchg
jmp
js
jo
ss
in
cmp
jmp
aad
dec
inc
aam
int
or
clc
jle
hlt
adc
add
(bad)
lods
mov
sbb
lods
mov
lods
sbb
jno
add
xchg
ins
mov
inc
add
xchg
cwde
ds
in
in
stos
rol
xchg
call
frstor
je
mov
mov
mov
adc
pushf
and
scas
sbb
mov
call
sysret
mov
js
or
mov
sti
bound
cmp
mov
push
mov
pusha
iret
jg
arpl
sbb
out
xchg
cmps
xor
push
popa
pop
mul
or
fimul
stos
inc
bound
movs
jb
into
fist
repnz
lds
inc
mov
adc
rcl
(bad)
pop
retf
jl
lock
daa
mov
dec
jnp
scas
cs
xor
int
jo
out
retf
xor
bound
push
aas
sbb
ins
jmp
mov
sbb
ins
jns
ror
push
jle
mov
push
and
cmp
fnsave
fbld
inc
add
push
mov
fmul
retf
loop
or
push
adc
sbb
sbb
jecxz
xor
cmp
call
nop
mov
cld
sub
mov
mov
add
imul
cmp
jne
popf
xchg
and
lea
adc
mov
xor
and
cmp
jmp
or
push
mov
enter
jno
inc
and
hlt
mov
jle
iret
clc
sar
mov
sbb
jo
and
stos
cwde
addr16
mov
pop
mov
mov
and
in
adc
jp
int
or
add
cmp
xor
inc
cmc
add
xchg
ret
xor
sub
call
mov
rcl
into
push
shr
sub
test
sbb
stc
cmp
adc
xchg
in
ds
and
pusha
or
mov
or
adc
mov
rcl
shl
test
xor
pop
int
movs
mov
rcl
mov
addr16
jecxz
push
outs
inc
sub
daa
clc
cmps
je
fdivr
mov
pusha
jp
hlt
jae
daa
cmp
cmps
cmp
hlt
fcomp
mov
bound
popf
es
xchg
fwait
hlt
cwde
std
mov
push
ins
push
sub
(bad)
sahf
mov
ins
push
jle
push
shl
mov
pop
stc
leave
sahf
out
mov
push
push
inc
sub
or
addr16
test
inc
adc
dec
imul
sub
scas
push
lds
jb
dec
or
jae
dec
dec
aam
xor
mov
mov
repnz
clc
pop
dec
jle
or
shl
pop
xor
inc
push
sub
cmp
push
push
repnz
mov
ds
clc
and
xchg
fadd
stos
out
inc
bound
mov
add
xchg
(bad)
jmp
jg
sbb
cmp
int3
xchg
lods
pushf
mov
lock
pop
push
ror
adc
xor
sbb
popf
or
fadd
inc
xor
sub
aaa
gs
xchg
mov
pop
add
leave
(bad)
int
and
hlt
xchg
jg
test
sbb
mov
xchg
imul
push
ret
mov
mov
or
push
adc
gs
dec
aad
int
sar
mov
in
pop
std
lock
jecxz
pusha
out
and
xlat
jge
jecxz
call
push
or
fdiv
jnp
inc
or
pop
mov
ss
ins
mov
sbb
iret
jle
arpl
pop
push
push
xchg
cld
add
shl
clc
ins
push
fidivr
or
and
and
xor
(bad)
and
adc
jecxz
shl
mov
cli
movs
ja
shl
cmps
ins
dec
enter
out
mov
add
xchg
enter
ja
push
xchg
and
retf
pop
adc
bound
sar
inc
adc
hlt
jae
adc
sbb
mov
leave
lds
test
xchg
push
mov
setge
mov
scas
rcr
dec
xor
pop
and
xchg
inc
(bad)
jno
mov
mov
test
add
cs
dec
add
cwde
push
cmp
test
scas
pop
xchg
mov
add
xchg
add
lds
jns
sub
and
add
ret
std
in
in
rcl
shr
iret
rol
je
js
in
or
mov
adc
sbb
jo
retf
aad
pop
hlt
pop
mov
aaa
in
mov
xor
xchg
xor
add
shl
stos
out
jge
iret
shl
push
lods
clc
lea
or
mov
inc
shr
nop
pushf
jle
jbe
jl
mov
inc
retf
dec
pop
movs
and
mov
add
aad
pop
ja
add
mov
mov
mov
ret
ins
imul
fucomi
sub
jecxz
xor
adc
rcl
ins
mov
arpl
inc
sbb
iret
mov
inc
mov
(bad)
add
sub
push
pop
push
cmp
outs
mov
loop
movs
mov
add
jo
stc
fcomi
lds
dec
push
sub
xchg
shl
addr16
int
push
dec
push
clc
(bad)
inc
jle
outs
inc
dec
lods
add
push
in
stos
ret
xor
icebp
(bad)
mov
loop
mov
adc
test
lods
cmp
mov
icebp
adc
jecxz
push
dec
adc
cmp
fst
push
ror
jg
(bad)
push
or
xlat
lods
aam
add
and
cmp
or
inc
push
sub
mov
xchg
test
xchg
cs
and
fsub
pop
xchg
cmps
jno
lock
inc
fisttp
sbb
pop
mov
int
mov
pcmpgtd
mov
push
loope
les
jne
mov
(bad)
lods
or
js
pop
rcl
pusha
mov
adc
adc
(bad)
jno
call
mov
jge
popf
cmp
mov
xor
inc
jecxz
mov
add
pusha
or
in
pop
push
in
sbb
jge
std
fs
xor
dec
push
push
jecxz
dec
push
repnz
jl
sbb
add
mov
fwait
mov
or
mov
cmp
mov
mov
mov
or
(bad)
shl
mov
dec
cmp
in
mov
and
jne
cmps
or
repz
imul
or
or
jg
fadd
fwait
aad
ins
mov
shrd
lahf
add
fcomp
inc
mov
push
loopne
mov
ds
push
mov
mov
adc
cs
push
sahf
retf
leave
or
rol
add
mov
sbb
jno
mov
in
lods
jp
cmp
xchg
mov
mov
add
je
pop
inc
cmp
push
push
loope
sar
imul
std
push
shr
pop
push
or
clc
(bad)
dec
jmp
shr
dec
hlt
jg
mov
aam
inc
sub
fidiv
movs
cdq
test
fsubr
and
inc
and
xchg
inc
popf
aad
jmp
ss
pop
mul
ret
call
cmp
or
cmp
or
inc
test
int
popf
or
dec
cmp
call
push
xchg
adc
pop
mov
stos
dec
xor
outs
sbb
jns
(bad)
sub
jge
jbe
shr
xor
xchg
mov
or
idiv
xor
ret
jle
mov
out
sti
jb
fwait
out
mov
lahf
mov
imul
sub
or
push
loop
adc
add
jge
jno
clc
xchg
js
mov
das
(bad)
or
sbb
dec
inc
push
ss
or
mov
or
outs
xchg
or
inc
mov
sub
mov
mov
jns
stos
popf
push
loopne
xor
stos
xacquire
mov
dec
shr
cmp
push
pop
sbb
scas
jecxz
adc
add
fwait
cmp
xor
imul
lahf
aaa
mov
cwde
(bad)
bnd
push
ret
mov
xchg
or
mov
mov
cmp
dec
dec
adc
(bad)
cmp
dec
mov
je
mov
out
data16
mov
adc
cmp
xchg
sbb
nop
jno
inc
popa
test
adc
push
shr
mov
gs
aad
mul
(bad)
jmp
cmp
add
push
xchg
arpl
cwde
and
push
dec
mov
push
hlt
int3
iret
mov
addr16
cmps
scas
mov
jo
clc
dec
jecxz
jg
(bad)
mov
mov
loope
in
test
mov
xchg
jae
scas
cwde
inc
jp
push
jo
jno
jno
jge
hlt
xor
mov
inc
bound
sbb
dec
push
outs
rcl
ret
cmp
xchg
lock
pop
daa
lods
xor
sbb
(bad)
lods
sub
push
retf
mov
loope
mov
inc
mov
mov
mov
idiv
sbb
push
sbb
ror
xchg
int3
leave
mov
bound
mov
inc
mov
aam
xor
pop
lods
ror
cmp
repz
adc
jnp
leave
pop
ficom
or
ds
sub
retf
xchg
dec
xor
daa
adc
jg
nop
das
mov
(bad)
jge
jl
cmp
push
shl
outs
mov
test
aad
cmp
pop
ficom
jbe
jae
mov
xchg
sbb
xchg
int
(bad)
push
movs
ja
pop
(bad)
ficom
xor
push
and
mov
sbb
or
fmulp
sbb
push
mov
cli
pop
push
je
pusha
mov
adc
lahf
and
ds
adc
imul
fisubr
jne
js
cld
mov
xchg
mov
pop
iret
mov
mov
adc
pushf
ins
repz
mov
les
push
jmp
cmc
arpl
inc
daa
and
sar
jne
jmp
dec
lods
fild
dec
leave
mov
push
nop
mov
ins
mov
xchg
mov
mov
fcom
adc
inc
sub
out
iret
mov
je
push
ja
mov
mov
retf
outs
mov
mov
pop
adc
mov
cmp
lds
and
call
js
sub
jbe
sahf
pushf
test
add
mov
add
sar
add
stos
nop
test
loope
pop
aam
adc
ret
adc
outs
mov
jmp
add
mov
cmp
inc
mov
sub
sub
mov
(bad)
xchg
and
test
outs
mov
and
sahf
mov
mov
dec
inc
xchg
cdq
add
inc
test
popa
lahf
mov
inc
jmp
adc
pop
cmp
inc
inc
loope
iret
sahf
jo
(bad)
sti
lds
arpl
mov
xor
dec
pop
cdq
dec
sub
xchg
(bad)
iret
outs
rol
rcl
fnstenv
add
sub
xchg
inc
push
pop
outs
or
adc
adc
addr16
rol
sub
imul
add
stos
pop
push
xor
mov
xchg
or
retf
inc
mov
nop
mov
mov
out
mov
xchg
sbb
mov
je
dec
and
and
call
jo
dec
jmp
jle
adc
mov
call
mov
push
sbb
jp
pop
stos
pop
and
sbb
cmps
movs
jle
je
mov
repnz
sbb
fcomp
jg
out
mov
or
mov
adc
dec
(bad)
mov
add
fisub
pop
pop
sbb
add
nop
out
add
pop
fsub
push
dec
in
pop
adc
inc
xchg
sbb
fs
int3
inc
cld
gs
mov
inc
pop
inc
push
sahf
test
cli
mov
ror
jo
pusha
(bad)
mov
mov
aaa
je
xor
js
test
cld
pop
mov
jecxz
cmp
inc
into
fstp
inc
loope
loope
adc
mov
in
stos
rcr
push
shr
enter
xchg
sub
and
test
ins
xchg
adc
(bad)
in
cs
ss
ret
mov
xchg
arpl
sbb
cmp
push
xchg
je
retf
dec
faddp
test
sbb
repz
addr16
rol
test
jecxz
retf
sahf
pslld
jae
pusha
ret
iret
mov
lods
xor
icebp
and
pop
push
jge
push
mov
inc
in
and
cmc
mov
inc
sahf
mov
fs
mov
(bad)
(bad)
int3
adc
add
test
loop
or
dec
fbld
out
cmp
and
stc
inc
test
dec
push
jno
lahf
push
or
out
dec
and
xor
xchg
(bad)
sub
mov
mov
outs
xor
scas
rol
pop
mov
mov
test
imul
cmp
enter
and
dec
retf
fsub
add
mov
xchg
push
fcomp
or
pop
mov
pop
mov
pushf
adc
fs
jp
shl
int
stc
sbb
push
in
pop
xchg
fmul
inc
sbb
mov
mov
scas
sbb
adc
xchg
(bad)
and
or
shr
scas
movs
add
sub
sub
sbb
out
aaa
inc
jmp
mov
cwde
jle
and
jge
int
sub
and
ret
(bad)
fmul
mov
ins
fiadd
call
mov
lock
push
mov
nop
stos
jne
mov
sbb
sub
sar
lds
xor
pop
sub
xor
mov
mov
call
leave
gs
push
adc
arpl
ficomp
iret
aas
push
pop
scas
arpl
cli
pop
add
jae
call
sub
aaa
adc
popa
xor
lods
add
pusha
or
inc
imul
adc
fbstp
lahf
sub
pop
jmp
and
inc
and
xor
xlat
jno
and
lock
adc
push
cmp
jle
push
xor
mov
xchg
pop
out
mov
xor
sub
dec
mov
aas
stc
les
(bad)
pushf
xchg
test
aas
sbb
jg
ins
and
xchg
aam
push
push
loopne
shl
mov
sub
sub
xchg
icebp
test
scas
or
sub
or
sar
sahf
in
add
stos
and
jo
mov
adc
test
xchg
or
pusha
not
sub
mov
add
loop
ror
jmp
fnstenv
cmps
(bad)
aam
das
in
addr16
jmp
push
xchg
push
movs
mov
inc
sub
int3
sub
jno
sbb
sbb
add
jno
out
pop
lea
iret
sbb
cwde
or
popf
pop
mov
lock
push
and
pushf
inc
call
push
push
nop
cmp
aaa
not
js
sbb
xchg
ret
dec
lds
movs
sbb
data16
pop
mov
sbb
repnz
or
scas
mov
inc
ret
dec
addr16
sbb
sti
jns
in
cli
sub
xchg
ror
cld
inc
inc
xchg
push
mov
stc
add
js
mov
pop
add
shr
mov
xor
sub
rcr
inc
jo
out
sahf
(bad)
in
and
mov
pusha
xor
mov
rcl
jge
pop
dec
or
shl
mov
lock
jo
adc
mov
in
call
push
div
imul
mov
push
loopne
dec
in
push
xlat
(bad)
call
fmul
mov
aad
(bad)
into
ss
or
mov
lods
xchg
mov
xchg
repz
scas
in
sar
jp
imul
ret
scas
stos
adc
mov
fisttp
sub
or
push
inc
dec
inc
add
mov
xlat
or
shr
retf
sar
adc
and
jmp
cs
pop
sar
mov
jb
je
fst
std
sbb
outs
jmp
popa
(bad)
out
retf
mov
or
adc
mov
jb
mov
push
jmp
xchg
lods
add
pop
ins
loope
xchg
mov
push
cmp
mov
int3
std
push
inc
jge
xchg
add
sbb
(bad)
mov
xchg
fstp
sub
mov
mov
dec
scas
arpl
sub
dec
mov
fistp
jnp
(bad)
xlat
daa
ror
sbb
jbe
add
outs
xchg
fs
adc
cs
enter
mov
outs
xchg
adc
loope
mov
retf
cdq
and
cmp
pop
(bad)
mov
and
shr
out
and
fwait
ja
fiadd
mov
inc
dec
jge
ror
dec
jo
clc
fmul
jle
sub
cmp
bound
and
jl
sahf
sar
lods
push
push
mov
into
sbb
add
cmp
fwait
loopne
push
std
push
dec
sub
adc
cmp
fidiv
pop
adc
fdiv
xchg
pushf
adc
mov
jecxz
jo
xor
loop
dec
jecxz
scas
xor
push
add
adc
js
push
test
jmp
xlat
pop
add
push
fisub
mov
pop
(bad)
mov
mov
sbb
and
inc
jge
add
adc
jo
mov
lods
fcom
cdq
leave
gs
dec
inc
fs
mov
outs
aam
mov
ins
mov
fs
pushf
mov
push
retf
cmova
outs
out
adc
mov
jg
(bad)
scas
inc
push
and
sbb
stos
sar
(bad)
sub
retf
(bad)
arpl
into
or
std
rcr
scas
mov
inc
lds
dec
out
xchg
out
dec
ins
sbb
stos
add
dec
jbe
push
inc
repz
push
fnstcw
inc
mov
ret
xor
cmp
fiadd
mov
dec
pop
push
cdq
lea
lock
leave
mov
test
dec
jg
xlat
and
add
mov
mov
or
xchg
out
mov
pop
mov
popf
in
call
inc
outs
cwde
jno
ja
int3
adc
sbb
jno
sbb
arpl
mov
std
out
jmp
xchg
mov
xchg
fcomp
xor
idiv
sbb
push
je
fs
mov
mov
jae
fnsave
(bad)
push
and
retf
icebp
arpl
pusha
push
adc
xchg
pop
je
add
cdq
pop
movs
aaa
adc
ss
(bad)
psubd
adc
out
mov
aad
dec
cld
adc
dec
cmps
adc
ret
mov
mov
ds
in
xchg
sub
in
jnp
aas
fs
mov
jo
les
add
lods
ret
pushf
mov
inc
mov
dec
jle
sub
xchg
jge
movs
dec
popf
add
gs
test
adc
xchg
and
sbb
add
mov
ret
inc
mov
push
mov
(bad)
ins
mov
aaa
es
fld
sbb
pop
push
pop
dec
fucomp
adc
adc
test
xor
mov
iret
push
and
mov
xor
test
sbb
fcom
scas
inc
and
dec
cmp
mov
div
jne
mov
jbe
test
jecxz
adc
adc
or
xor
cmp
and
lea
adc
idiv
data16
mov
pop
mov
push
jne
fs
xchg
push
lahf
cs
sti
movs
sbb
pop
or
fsub
add
ret
push
sbb
ss
adc
movs
sbb
push
enter
mov
push
(bad)
aas
dec
(bad)
push
mov
mov
push
aaa
inc
(bad)
jno
cmc
out
mov
call
inc
fdivp
stos
mov
inc
aaa
pop
ret
leave
adc
mov
push
pop
fucomp
jle
push
jmp
mov
mov
sbb
aaa
xchg
jnp
mov
dec
jecxz
xchg
sub
or
push
jl
add
lods
call
lahf
mov
(bad)
cmc
test
adc
inc
aad
fucomip
and
sub
aad
fidiv
mov
dec
jmp
leave
mov
iret
pop
dec
sbb
xor
movs
cmps
jbe
pop
mov
mov
lods
sahf
push
pushf
iret
xor
sub
jg
and
xchg
xchg
lahf
xor
inc
push
push
mov
xlat
out
sbb
pop
pop
pop
lea
jmp
in
int3
mov
inc
inc
cmp
mov
cmc
call
js
xor
push
xor
push
mov
jae
retf
dec
sub
adc
imul
xor
cmp
loope
movs
mov
xchg
jp
pop
(bad)
push
popf
jbe
or
enter
jg
and
push
enter
retf
jae
rcr
xor
(bad)
stc
jmp
rcl
std
notrack
scas
jmp
push
in
lds
push
lock
psubd
dec
fnstcw
xchg
xor
add
inc
jno
dec
leave
es
test
xchg
shr
test
lock
jbe
mov
xor
dec
out
movs
pop
in
cwde
push
sbb
ret
call
fadd
pop
push
lock
jb
xchg
ror
xor
mov
jg
xchg
and
or
push
aad
add
and
fimul
fisttp
ss
cmp
inc
movs
sub
push
push
inc
mov
adc
xor
adc
jmp
in
shl
leave
les
iret
jo
pop
sub
xchg
scas
or
jnp
and
mov
call
cmp
xor
pop
out
(bad)
push
inc
push
lock
jecxz
push
xor
xchg
fcomp
add
das
or
ret
daa
jge
sbb
cli
(bad)
fisub
movs
out
rcr
neg
dec
ret
loop
add
push
sub
pushf
jmp
add
les
xchg
(bad)
mov
sub
pop
ucomiss
in
sub
or
ins
mov
fcom
leave
jo
pop
push
fild
xor
xlat
adc
mov
pushf
mov
icebp
hlt
test
mov
cmp
std
pop
lock
in
pop
lods
dec
sub
jmp
and
cmc
jmp
out
js
bnd
sub
pop
cmp
mov
sbb
inc
pop
xor
dec
push
push
or
pop
jg
jg
inc
jb
sub
mov
xchg
dec
(bad)
daa
push
jp
mov
push
cld
xchg
dec
adc
cwde
or
pop
in
shr
daa
pop
inc
pop
jg
fidiv
push
pop
cmp
xlat
and
test
sub
adc
and
pop
cmc
pop
mov
pop
cmp
mov
add
jb
cmps
sbb
sbb
sahf
xlat
dec
in
test
lods
mov
enter
add
(bad)
push
jl
cmps
call
inc
push
push
fistp
fisub
scas
iret
mov
stos
jecxz
les
test
mov
leave
cld
pop
inc
mov
in
jp
stos
mov
sub
fwait
cmc
shl
test
sahf
and
xor
xchg
and
test
add
rcl
sar
mov
shl
jae
push
ins
cmp
xor
xlat
xchg
sub
imul
jmp
mov
push
jne
jmp
xchg
add
pop
mov
imul
loopne
dec
popf
mov
sbb
(bad)
add
bnd
dec
fist
setb
sti
(bad)
aad
adc
jno
(bad)
shl
sub
data16
fwait
ror
inc
loope
jmp
mov
fcom
xor
add
mov
mov
out
test
pushf
xor
call
push
sti
dec
cmp
xchg
push
push
and
mov
push
sub
mov
popf
dec
movs
call
test
jno
dec
push
(bad)
pop
pop
fisubr
dec
dec
jge
dec
push
bound
lods
xor
nop
int
movs
cmps
jne
dec
in
inc
sbb
movs
jle
in
push
add
mov
(bad)
cmps
or
iret
mov
jno
out
ret
fcomp
fucom
ins
cld
mov
retf
pop
std
imul
mov
push
jecxz
ret
sbb
cmps
loopne
fs
mov
adc
fild
(bad)
leave
loope
adc
mov
add
inc
fstp
pop
fisub
pop
scas
rol
xchg
in
les
xchg
call
jg
mov
mul
scas
aad
outs
pop
mov
std
gs
scas
imul
xchg
sub
cmc
jmp
sub
add
xor
cmc
sub
xor
aad
loopne
dec
cld
shl
cs
inc
stos
jecxz
inc
dec
test
push
pop
mov
jnp
sbb
stc
jae
mov
dec
rol
and
pop
dec
fisttp
std
mov
and
add
push
xor
mov
jl
sar
xchg
or
cli
push
sub
repz
adc
sub
shl
fsubr
cmps
cmps
retf
mov
fwait
mov
je
dec
dec
ja
inc
mov
mov
cwde
call
stos
or
retf
push
arpl
retf
sahf
repnz
cmc
cmp
pop
push
into
inc
(bad)
xor
pop
and
fmul
aas
stos
jnp
mov
mov
jmp
int3
xlat
xchg
and
mov
(bad)
in
rcr
es
fisub
out
cmp
fst
add
repz
push
sbb
inc
cmp
dec
or
push
lock
cmp
out
jae
lods
sub
add
test
popa
xchg
cmp
xchg
shl
mov
lahf
aaa
add
in
and
fisubr
stos
mov
out
fbstp
loop
idiv
jnp
js
jle
dec
lahf
ret
gs
add
in
sub
inc
out
pop
idiv
iret
rol
xchg
cmp
ss
data16
fisubr
push
mov
mov
inc
retf
fbld
dec
mov
sti
jne
sub
mov
or
imul
cwde
lahf
cmp
mov
ret
bound
fcomp
add
popf
mov
jmp
jns
inc
push
data16
dec
cmp
mov
add
push
clc
js
pop
rcl
cmps
push
ficom
imul
into
addr16
(bad)
mov
ret
inc
icebp
xchg
add
(bad)
nop
in
push
ror
sub
push
int
sub
or
jno
xchg
retf
ror
jo
and
sub
addr16
adc
(bad)
sub
aas
das
sub
(bad)
std
cmc
in
test
imul
cmps
mov
mov
call
enter
retf
fbld
imul
retf
sub
in
imul
sub
mov
add
mov
dec
loop
popf
(bad)
(bad)
mov
in
cmp
lahf
jmp
fnsave
(bad)
outs
xlat
pop
mov
jg
test
sub
sub
sbb
xor
test
cwde
out
mov
xchg
xor
pop
xchg
xlat
into
dec
xor
mov
inc
imul
sub
ret
stc
or
fmul
jnp
jp
retf
(bad)
fdivr
cwde
mov
pop
sub
test
inc
mov
movs
pop
xlat
mov
inc
fld
retf
and
pop
jge
adc
sbb
loop
test
and
loopne
pop
rcl
call
fild
call
xchg
test
pop
jg
xchg
mov
cwde
das
and
xchg
ret
dec
mov
add
sbb
or
std
in
adc
rcl
push
pop
std
xchg
pop
add
xor
and
out
sub
(bad)
adc
mov
shl
cmp
xchg
cmp
xor
and
sbb
enter
cmp
dec
(bad)
(bad)
xchg
pushf
imul
inc
mov
push
mov
or
mov
mov
ja
adc
sub
mov
xor
iret
(bad)
dec
in
stos
fnsave
out
mov
int
mov
xor
or
mov
dec
push
mov
nop
inc
addr16
loope
lods
out
shl
push
push
and
sub
adc
mov
call
(bad)
in
dec
fsin
mov
lea
(bad)
outs
xchg
(bad)
mov
psraw
and
dec
cwde
into
in
in
ja
scas
rcl
aad
fist
inc
aaa
cs
retf
ins
and
nop
xor
in
lods
(bad)
int
or
cdq
cmps
sub
dec
jae
or
popa
in
sub
fldcw
retf
cmps
imul
rcr
sbb
xchg
shl
inc
retf
and
push
sub
arpl
dec
inc
add
jecxz
gs
(bad)
int
dec
xor
imul
scas
cld
or
les
jno
loop
dec
xor
lods
jbe
adc
icebp
cdq
movs
ss
sahf
pop
(bad)
fisub
mov
(bad)
jmp
and
loop
shl
pop
push
mov
mov
mov
mov
mov
cdq
dec
call
icebp
cmp
cmps
es
cmp
inc
aas
rol
gs
cld
fcom
inc
sbb
sbb
arpl
repz
das
repnz
cmp
jbe
pushf
inc
pop
mov
mov
rcr
inc
pop
aam
add
(bad)
stc
in
mov
jge
cmp
repz
and
int
ds
jle
pop
add
data16
pop
sbb
out
out
clc
cld
cmp
std
arpl
jl
retf
mov
mov
add
pop
push
mov
jmp
jne
rol
stos
clc
inc
je
dec
ret
or
into
test
clc
or
fwait
add
inc
mov
xor
cli
jmp
and
and
add
in
(bad)
out
arpl
adc
mov
sbb
mov
mov
test
xor
loopne
das
outs
jmp
scas
add
push
(bad)
adc
fst
jp
mov
adc
inc
fadd
ins
jno
mov
dec
popf
pushf
push
(bad)
cmp
retf
mov
cs
ja
xchg
xor
std
pop
mov
and
cmp
out
add
jmp
jb
cmp
cmp
js
icebp
(bad)
out
cmps
mov
jne
test
seta
xchg
test
add
movs
dec
jmp
daa
and
mov
jge
jmp
adc
pop
fistp
mov
add
sub
dec
push
xchg
in
icebp
cld
jl
sbb
inc
mov
retf
popa
ss
loope
fdiv
loop
and
(bad)
int3
and
push
sub
xchg
sbb
outs
mov
nop
bound
xchg
xor
lods
jle
loope
cwde
mov
mov
pop
aas
loop
cmp
mov
jl
shl
fld
jno
scas
not
jb
dec
ss
dec
xchg
loope
dec
jge
xchg
xor
add
and
shl
pop
push
push
movs
xor
cmc
inc
mov
(bad)
retf
into
xor
push
call
test
mov
mov
or
in
repz
cmp
pop
shl
cmps
inc
mov
(bad)
jg
(bad)
mov
push
xor
jbe
inc
dec
stc
and
mov
mov
fst
fnstsw
jl
mov
xchg
adc
xor
lahf
and
(bad)
movs
sub
adc
into
dec
adc
nop
and
sbb
je
mov
aad
imul
sub
jle
iret
pop
and
call
xor
mov
ret
pop
and
test
sub
ficom
inc
xchg
pop
lea
xchg
add
mov
popf
and
add
call
jae
daa
jne
adc
mov
movs
outs
sub
mov
add
jecxz
inc
out
sub
push
imul
add
push
pop
and
retf
retf
inc
add
in
sbb
pop
arpl
sti
sub
fdivr
jmp
mov
cmp
in
in
push
out
adc
add
lock
xchg
pop
dec
xchg
adc
inc
cmp
add
or
popf
stc
retf
xchg
(bad)
mov
ins
ins
sar
jb
and
pop
arpl
jno
mov
sbb
cmp
jmp
in
mov
cmp
jmp
mov
shr
sub
xchg
inc
mov
adc
or
and
lahf
repnz
xchg
mov
mov
je
mov
sbb
adc
sti
mov
ret
sub
and
add
std
iret
ins
pop
in
bound
shr
bnd
jp
test
jb
pop
mov
sub
push
add
mov
adc
push
dec
loopne
mov
inc
iret
push
nop
mov
mov
out
inc
jbe
xor
pushf
jmp
fsub
hlt
jmp
retf
adc
arpl
mov
jnp
xchg
pop
arpl
dec
push
ror
pop
pop
hlt
ds
xlat
sbb
inc
les
repz
push
movs
bound
jbe
int3
into
push
repnz
pop
mov
mov
add
xor
sti
cmps
mov
cmp
test
pop
ret
es
(bad)
nop
stos
sbb
sbb
or
int3
jb
cwde
int
aas
and
scas
in
and
add
(bad)
nop
mov
mov
(bad)
sti
imul
mov
adc
jbe
inc
ja
mov
mov
aas
xchg
push
mov
mov
gs
pop
inc
xor
stos
pop
out
fwait
jmp
dec
mov
stos
and
loope
xchg
pop
(bad)
xchg
scas
cli
(bad)
xchg
and
jp
and
in
jl
jge
pop
dec
push
adc
sub
stc
lds
cwde
xor
xor
mov
xor
repz
add
dec
rcr
div
scas
int3
cmps
cmc
cmps
stos
pop
cdq
mov
ret
das
sti
or
std
and
xor
cmc
test
leave
lds
add
les
push
push
and
outs
ds
cmp
addr16
sbb
cmp
sub
adc
into
sbb
retf
scas
and
mov
inc
push
movs
(bad)
in
aaa
in
cvtps2pd
jge
out
xchg
ins
or
xlat
dec
jecxz
not
cdq
jmp
adc
mov
int
in
repnz
(bad)
inc
cwde
mov
out
xchg
jg
pushf
adc
sub
outs
pop
sti
int3
sub
xchg
fadd
data16
arpl
mov
dec
mov
adc
cmp
inc
push
test
rcl
lahf
cmp
faddp
or
mov
adc
ins
shl
lahf
in
push
mov
push
jbe
pop
push
ja
pop
xchg
in
mov
ins
in
xchg
ss
sub
mov
cmp
test
xor
sub
mov
pop
retf
les
mov
sar
mov
adc
fs
cs
mov
xor
movs
pop
sbb
inc
ret
adc
movs
not
loope
test
jmp
iret
jno
jl
pop
cmp
jne
das
sbb
xchg
push
test
scas
xchg
sub
xchg
in
iret
into
jbe
add
sbb
mov
push
cmp
jno
xor
push
mov
adc
fdivrp
sub
jp
out
or
jae
cmp
mov
cld
dec
enter
lods
cs
xchg
add
lods
jo
adc
mov
push
cli
aaa
icebp
or
push
sbb
dec
jecxz
leave
(bad)
(bad)
cmp
sbb
(bad)
les
or
push
(bad)
loope
fwait
push
inc
ja
call
loope
jl
push
movs
jmp
add
push
cmp
sti
push
mov
sub
enter
mov
pop
in
arpl
scas
(bad)
sbb
xchg
sti
pmullw
ret
fidiv
rol
push
cmp
lock
xchg
(bad)
adc
cmps
mov
adc
jae
std
(bad)
aaa
add
cmp
adc
loopne
xor
mov
jns
dec
and
fld
sub
iret
dec
dec
ja
cmp
inc
cld
stos
jg
imul
xchg
(bad)
imul
stos
es
loope
dec
add
sti
xchg
cmp
inc
or
push
out
test
js
loop
lahf
jle
std
push
xlat
(bad)
loop
stc
dec
push
adc
inc
xchg
pop
dec
(bad)
mov
cs
push
xor
and
jge
clc
push
std
nop
fs
movs
(bad)
cli
jne
imul
ficomp
pop
clc
out
pop
or
or
mov
ret
ret
adc
sbb
jmp
inc
xor
mov
adc
fcomp
popa
sbb
dec
daa
jmp
or
ficomp
sub
jae
cmp
mov
jmp
adc
sbb
int3
lds
xchg
jne
inc
pop
lahf
and
shl
mov
test
cmp
mov
pop
push
push
or
shr
outs
or
sbb
or
xchg
push
or
cmp
mov
nop
sub
add
iret
mov
adc
nop
sub
mov
inc
and
outs
ret
outs
and
xor
data16
in
jbe
cmp
iret
loopne
(bad)
mov
mov
aad
dec
xor
rcr
outs
popa
xor
or
xor
fnstsw
sub
cmp
fwait
pop
movs
(bad)
popf
or
scas
xor
aam
fxch
fisubr
cdq
ds
push
cli
leave
cli
jecxz
fs
rol
gs
aam
call
stos
in
mov
or
cmc
dec
es
push
cwde
and
int
fld
mov
cmp
aas
dec
scas
mov
adc
pushf
mov
lea
into
inc
test
std
mov
loop
out
retf
retf
push
lds
int
adc
adc
test
jmp
stos
fcos
lods
sbb
xchg
xor
dec
hlt
stc
sbb
(bad)
adc
icebp
(bad)
dec
add
inc
or
xor
push
jno
movs
pop
add
or
mov
or
das
(bad)
mov
push
mov
aam
test
fsub
xor
iret
aam
jne
inc
and
inc
adc
addr16
sbb
pop
and
lds
add
into
jmp
call
xchg
xor
inc
sub
fsubr
(bad)
retf
jp
clc
jbe
pop
fisubr
inc
retf
aad
sub
(bad)
pushf
test
ins
xlat
dec
mov
sbb
rcl
ja
lea
dec
push
mov
(bad)
mov
into
cli
and
inc
jbe
and
clc
loopne
scas
cmp
lahf
sahf
js
jb
dec
push
xor
pusha
mov
gs
rol
pop
and
inc
iret
and
test
xchg
and
push
jno
pop
adc
mov
adc
sbb
cmp
int
cmp
stc
inc
pop
jecxz
mov
test
jbe
hlt
xchg
or
popf
jo
stos
cdq
mov
inc
xchg
jb
jmp
arpl
sbb
sub
hlt
cmps
cmc
add
je
jge
retf
mov
mov
fwait
mov
shl
stos
std
ins
pop
and
leave
sbb
pop
int3
retf
jo
stos
ret
(bad)
repz
test
add
pop
mov
test
movlps
call
movs
jo
xlat
adc
jl
mov
rcr
scas
jl
shl
mov
mov
and
xchg
push
adc
mov
sbb
into
sahf
xor
lahf
xchg
cmp
push
das
sbb
aad
jmp
xor
cmps
push
jnp
aaa
jno
lds
int
fnstsw
jne
movs
push
ret
sar
push
xchg
stc
inc
pop
mov
clc
xor
cwde
aas
push
test
and
mov
test
add
push
and
stc
imul
fld
mov
xchg
jns
movs
pop
fs
sub
(bad)
pop
mov
imul
and
sub
mov
ins
popf
mov
cld
dec
xchg
(bad)
retf
femms
(bad)
xchg
xchg
loope
xchg
aaa
push
push
jp
mov
pop
cmps
repnz
sub
or
ficom
jae
pop
sub
jg
out
out
pop
inc
ret
fcomi
adc
mov
inc
jg
or
or
aas
icebp
pop
pop
and
xchg
jl
hlt
repz
mov
fistp
xor
adc
test
cdq
or
jnp
or
pop
cmc
inc
cmp
in
ins
sub
in
fstp
push
nop
retf
jl
or
popf
adc
add
sub
je
and
push
mov
adc
xchg
ds
inc
xchg
jg
std
ss
cdq
neg
std
outs
cmp
ret
push
lods
pop
sub
out
mov
rcr
mov
scas
arpl
call
jae
add
jb
(bad)
repz
jp
dec
fdivr
cmp
cmp
outs
fstp
and
stc
loop
mov
inc
sti
lea
test
mov
push
sbb
xchg
or
push
pop
or
jge
call
aad
punpcklwd
xchg
in
mov
fistp
leave
pop
outs
mov
xchg
ficom
ss
repnz
into
jmp
push
(bad)
push
push
pop
cmp
fisub
cmp
add
inc
aad
(bad)
sti
(bad)
bound
adc
jg
mov
pusha
icebp
addr16
es
xlat
cmp
pop
pop
cmps
add
neg
mov
pushf
or
leave
loop
inc
std
js
imul
mov
and
or
ret
push
xor
xchg
shl
icebp
je
pop
mov
fistp
pop
test
cmps
xlat
hlt
ins
mov
data16
cmc
sub
jo
mov
and
sub
ret
xor
mov
call
mov
ins
call
stos
rcr
add
xchg
adc
sub
arpl
lahf
push
imul
xor
jnp
sbb
pusha
mov
dec
fucom
cld
(bad)
mov
mov
aam
sar
in
xlat
push
push
pop
dec
mov
dec
fcompp
ins
add
repnz
cmp
ins
mov
iret
int3
inc
xchg
dec
bnd
retf
adc
xchg
inc
popa
sub
(bad)
push
test
pop
stc
adc
repz
aas
les
dec
jecxz
adc
adc
or
mov
repz
in
adc
cmp
cli
sub
ret
rol
pop
lea
(bad)
mov
mov
dec
mov
cmp
iret
hlt
shl
xchg
(bad)
test
data16
adc
test
popf
push
jmp
mov
push
fld
leave
add
test
fisubr
stc
scas
push
in
sub
adc
into
pop
dec
test
fcomp
cmp
pop
adc
sub
test
retf
loopne
push
cmc
cs
pop
enter
icebp
adc
sbb
leave
pop
loopne
fwait
mov
(bad)
mov
addr16
sbb
fs
sahf
stos
out
or
jnp
call
out
xlat
push
popf
fnsave
cli
hlt
xchg
ss
ss
cmc
lods
adc
xlat
pop
call
aam
sub
dec
pop
enter
xor
xor
cmp
test
or
retf
bound
mov
inc
sti
jne
jecxz
pushf
mov
cmps
(bad)
(bad)
cmc
mov
aas
in
sub
adc
dec
add
and
inc
push
out
mov
xchg
inc
inc
outs
mov
(bad)
cmp
inc
push
push
mov
rol
out
mov
mov
(bad)
dec
imul
js
stos
cmp
mov
cwde
xchg
push
adc
inc
stos
pop
xchg
dec
call
push
ret
xchg
out
cmp
sub
and
pop
sub
push
push
push
inc
xor
cmp
mov
or
cmp
sbb
mov
clc
jle
dec
fwait
adc
fld
mov
outs
jb
xor
xor
es
in
mov
cmp
fcmovnu
nop
push
and
js
jecxz
push
cmc
mov
js
in
xchg
test
repz
stos
sub
mov
mov
xor
ficom
int
xchg
fstp
and
mov
jl
mov
mov
nop
out
push
retf
(bad)
daa
mov
pop
cmp
shr
out
jmp
cmp
push
and
and
call
add
(bad)
mov
and
inc
sbb
test
stos
mov
adc
stc
add
mov
stos
inc
adc
push
xchg
mov
push
cld
push
inc
add
fild
or
push
pop
sub
jge
jne
(bad)
std
out
mov
pop
loope
mov
jmp
mov
push
dec
xchg
jecxz
call
cli
xchg
add
mov
push
jmp
push
inc
sbb
fdivr
dec
pop
out
sbb
data16
pushf
mov
inc
fsubr
adc
sub
std
dec
add
js
popa
push
xchg
push
ror
(bad)
(bad)
mov
cmps
rcr
xor
ins
mov
movq
repz
ds
mov
sub
fistp
scas
sbb
pop
fsubr
xchg
jecxz
xchg
xchg
jecxz
test
into
and
shl
bound
popa
rcr
daa
setge
jle
cmp
aas
cmp
repnz
xor
inc
aas
(bad)
cmps
mov
lods
dec
mov
sti
jmp
loop
mov
aas
xchg
sti
pop
add
adc
pusha
xor
mov
add
mov
ret
mov
fadd
ds
cmps
fs
sub
fistp
fisttp
aas
jmp
pop
repz
shl
add
mov
cdq
cmp
loop
retf
jmp
push
vmwrite
pop
das
xor
dec
(bad)
iret
fnstsw
mov
jg
jmp
sub
out
jno
jb
mov
js
add
mov
not
and
(bad)
push
push
ficom
int
sbb
stos
and
inc
retf
xchg
aas
(bad)
ror
icebp
div
cld
mov
mov
fisttp
dec
adc
cli
stc
imul
xchg
lods
push
out
movs
push
cmp
dec
xchg
shr
out
or
fcomp
stc
mov
mov
call
call
into
cmp
push
sub
add
scas
in
cs
xchg
mov
push
(bad)
mov
ins
pop
pop
adc
jecxz
jae
xor
dec
out
push
stos
cld
dec
pop
into
or
sbb
rcl
sbb
fucomp
leave
(bad)
popf
push
push
xor
ret
jns
test
ror
out
cli
aas
ins
clc
cdq
les
loopne
push
mov
pop
cwde
pop
(bad)
jmp
push
fnstenv
jno
test
adc
sti
rcr
add
inc
js
mov
jb
test
jmp
push
mov
add
rol
shl
mov
in
sbb
mov
mov
xor
mov
call
fsubp
xchg
ins
pop
cmp
push
mov
in
pop
mov
sub
and
movs
dec
sub
push
adc
test
movs
dec
push
jno
in
dec
dec
rol
add
dec
sub
stc
mov
test
fstp
and
mov
in
in
jo
mov
pop
imul
cmp
aad
pushf
pop
scas
fstp
int
dec
mov
loopne
inc
mov
inc
sbb
leave
xor
call
les
ja
fst
in
mov
pop
popf
addr16
push
xor
iret
imul
and
or
mov
mov
fist
retf
pop
mov
stc
jle
pop
lods
inc
adc
push
aam
mov
iret
ins
je
rep
and
aaa
test
jnp
iret
mov
push
fwait
push
retf
cmp
data16
add
cmps
rcl
pop
sbb
xlat
ins
dec
push
lods
sbb
into
and
jmp
xor
dec
and
lahf
pop
sub
xor
arpl
push
push
sub
and
dec
sub
jb
mov
bound
cdq
jl
push
outs
ret
inc
int
pushf
scas
(bad)
je
push
push
sub
stos
push
shl
mov
fld
pop
loopne
mov
sbb
loopne
xchg
movs
call
js
sbb
mov
jmp
stc
cwde
adc
add
aas
adc
jle
xchg
repz
sub
pushf
sub
mov
sub
xor
lods
sub
(bad)
loop
sub
and
xchg
xchg
jb
mov
cmp
mov
or
jae
xchg
mov
pop
inc
sub
push
cli
inc
(bad)
std
js
test
mov
adc
or
fs
pop
mov
fst
arpl
movs
fisub
xchg
outs
push
xchg
bound
pop
in
jnp
data16
xor
xchg
ds
fwait
cli
mov
mov
movs
mov
fbld
and
cmps
fsub
sub
jno
test
addr16
hlt
inc
cwde
mov
shr
jp
mov
add
in
push
repnz
add
enter
(bad)
stos
pop
pop
mov
jmp
jmp
inc
jne
xchg
jbe
(bad)
mov
jmp
out
cs
ja
mov
sub
icebp
daa
iret
adc
cld
ds
or
popa
sbb
add
dec
inc
lods
imul
fnstcw
pop
jo
jl
jg
ficomp
leave
es
sbb
outs
aaa
adc
pop
cmps
mov
rol
nop
fmul
xchg
sbb
adc
cmp
arpl
mov
cmp
cld
call
out
pushf
push
mov
jns
sbb
adc
push
lods
pop
gs
jle
pop
nop
pcmpgtd
out
mov
test
mov
lea
push
add
or
fwait
pushf
gs
mov
repz
lea
enter
jl
imul
test
bound
xor
and
xchg
or
push
call
jecxz
fbstp
dec
adc
cmp
(bad)
es
test
ror
inc
pcmpgtd
aas
xchg
mov
add
aas
cmp
enter
and
(bad)
(bad)
loopne
cmp
push
ds
popa
rcl
dec
lahf
in
mov
inc
cmps
mov
pop
inc
js
mov
dec
sbb
push
push
inc
or
and
push
push
sub
pusha
dec
sbb
stos
dec
inc
sbb
int
(bad)
pop
jp
shrd
out
aad
mov
(bad)
mov
fcmovb
lock
mov
jb
cli
pop
and
pusha
sbb
xchg
(bad)
sub
and
push
and
push
loopne
mov
(bad)
std
aaa
or
pusha
inc
aas
xchg
and
das
mov
scas
mov
mov
(bad)
pop
test
into
inc
add
and
xchg
and
fist
ja
std
test
or
inc
mov
push
cmps
add
shl
aad
icebp
out
jge
pop
pmaxub
lahf
jbe
rol
lahf
sbb
(bad)
dec
dec
pushf
inc
mov
out
pop
inc
(bad)
pop
mov
jmp
adc
jnp
mov
jno
adc
add
add
sbb
addr16
fbld
ja
out
xchg
sbb
fbstp
not
dec
pop
and
retf
hlt
ins
jg
mov
bound
mov
sub
inc
or
add
outs
mov
sbb
in
xchg
push
and
scas
imul
fdiv
arpl
add
(bad)
push
fisttp
jecxz
ins
shl
jb
in
pop
js
imul
xor
rcl
dec
mov
inc
cs
lock
dec
push
jp
xchg
lea
mov
xor
ja
popf
ret
call
push
sub
mov
xchg
nop
sbb
mov
push
ret
add
icebp
sbb
inc
std
jp
ret
jmp
loopne
ror
lea
mov
ds
ins
xchg
xlat
jle
repz
lods
pop
jb
dec
mov
stos
push
push
inc
stos
addr16
int3
shl
or
lds
sahf
mov
rcl
outs
pop
push
or
inc
out
inc
pop
lods
sbb
mov
stos
in
ja
mov
xchg
cmc
jo
inc
aam
pop
sbb
jle
sbb
dec
dec
jmp
call
pop
stos
jmp
adc
and
xlat
fistp
retf
sar
sub
ficomp
dec
jns
mov
test
adc
jmp
push
sbb
jne
je
adc
mov
add
cmc
addr16
xor
sbb
xchg
adc
xchg
xor
test
mov
pop
mov
jae
xchg
pushw
repz
pop
(bad)
mov
mov
ror
aas
sub
(bad)
stc
jae
mov
fcmovbe
mov
es
lods
iret
test
xchg
iret
mov
pop
(bad)
mov
pusha
lods
dec
or
lods
cmps
div
cmp
sbb
movs
int3
ret
(bad)
aas
ds
std
sub
push
add
mov
and
jmp
jo
pop
in
mov
dec
fdivr
or
pop
iret
adc
and
shl
mov
rol
pusha
dec
mov
movs
lods
mov
call
adc
out
stc
loope
test
push
cmp
retf
xchg
mov
cmp
push
mov
jmp
and
dec
jle
pop
mov
sub
xor
inc
jae
add
lods
jns
push
mov
rcr
call
push
loop
cs
cmps
rol
stos
int
inc
leave
mov
or
sbb
add
mov
add
mov
cmp
lahf
cmp
and
bound
xor
pop
xchg
lock
rol
mov
in
xchg
fs
mov
iret
sub
mov
rsqrtps
inc
mov
addr16
cmp
mov
lea
shl
mul
adc
jno
push
inc
cmc
and
push
fiadd
mov
sti
arpl
mov
ror
neg
lahf
std
fs
fist
xchg
aas
xor
arpl
xchg
adc
xlat
bt
mov
xor
out
or
enter
xor
clc
mov
dec
jo
mov
push
outs
mov
push
nop
xor
lods
ja
into
in
stos
sub
fs
cdq
mov
sub
rcr
xor
ins
pop
xchg
inc
jge
mov
and
mov
not
stos
scas
sbb
inc
aas
movs
add
xchg
sbb
xchg
inc
in
xchg
daa
pop
cwde
mul
jp
outs
mov
or
cmp
add
fist
popa
pop
retf
jecxz
pop
stc
mov
ret
popf
jb
cmp
add
test
adc
jmp
call
(bad)
cs
out
add
call
scas
pop
out
ins
iret
ins
add
adc
sahf
push
inc
leave
outs
lea
push
ret
rcl
das
adc
or
lods
inc
loope
xor
push
mov
or
push
test
sti
stc
mov
movs
xor
push
mov
xor
rol
je
pop
push
inc
pop
ret
scas
and
mov
pop
inc
xchg
(bad)
lock
pop
scas
(bad)
sahf
mov
inc
add
inc
pusha
sbb
adc
jbe
fild
xor
xchg
(bad)
jg
xor
jo
retf
or
and
sub
mov
dec
bound
and
dec
or
and
ja
test
in
mov
cld
jp
jne
out
xchg
sbb
retf
out
cmp
inc
inc
inc
fs
popf
inc
mov
jb
aaa
(bad)
mov
pop
cmp
ss
and
dec
dec
pop
and
inc
shl
inc
inc
mov
pusha
jge
push
in
sbb
cmc
ret
lock
jno
outs
out
jns
int
sbb
jne
ss
sbb
jge
jo
idiv
movs
jns
xor
leave
or
xchg
mov
out
icebp
dec
cdq
pop
cmps
jb
test
add
icebp
aad
mov
adc
or
outs
imul
push
dec
dec
xlat
into
(bad)
(bad)
in
sbb
dec
lods
shl
pxor
mov
cmp
and
and
sub
mov
std
enter
int3
icebp
dec
pop
xchg
shr
pop
outs
aam
pop
stos
bound
das
in
sub
icebp
push
arpl
in
test
or
dec
into
mov
and
xchg
fst
cli
sub
lods
addr16
mov
icebp
test
popw
imul
mov
test
dec
test
imul
test
jg
lahf
and
or
push
jmp
cmps
mov
mov
pusha
out
fbld
mov
out
enter
test
adc
xor
mov
jbe
(bad)
or
xor
dec
stos
xchg
inc
(bad)
aad
ret
xchg
add
jle
aam
mov
int
pusha
ret
adc
xor
mov
jecxz
fsubr
and
mov
aaa
ins
movs
fisttp
jns
xchg
test
not
xchg
add
or
int
movs
xchg
cmp
xchg
sahf
xchg
inc
or
dec
out
add
out
out
jle
xor
or
clc
scas
loope
pop
add
sbb
mov
in
and
retf
sahf
or
shr
pop
xchg
push
dec
rol
adc
out
mov
mov
push
clc
push
cmps
jne
stos
dec
test
sar
out
or
push
jae
cmp
push
test
loope
loopne
push
add
cmp
lds
test
das
and
xlat
push
push
and
idiv
out
les
pop
gs
aas
lods
je
ds
std
loope
dec
add
hlt
or
jb
mov
scas
xor
and
jo
rcr
test
push
imul
or
jmp
call
out
push
mov
cmps
pop
cwde
dec
inc
jmp
aad
xchg
xchg
xchg
fisubr
or
jno
shl
sar
cs
adc
cmp
mov
sbb
pushf
or
in
dec
xchg
mov
cmp
sub
push
in
pop
mov
push
inc
mov
hlt
call
and
pop
stos
jbe
sbb
imul
push
xchg
add
inc
and
enter
int3
xchg
xor
pop
lds
mov
and
cs
imul
adc
lods
lds
repnz
lds
mov
xor
mov
and
adc
sti
out
test
ss
cdq
cs
jmp
mov
sub
movs
mov
pop
or
test
push
repz
inc
rcr
dec
mov
cmp
out
fwait
retf
mov
xchg
mov
fwait
jbe
mov
icebp
and
pop
push
setae
pusha
aas
mov
dec
jnp
stos
adc
ins
ds
in
inc
shr
cmp
xchg
add
pusha
or
mov
xor
inc
jg
xlat
lock
xor
mov
and
stos
adc
retf
arpl
dec
sub
(bad)
mov
sub
sub
pop
ja
xlat
or
lds
test
les
neg
jne
hlt
int3
out
or
xor
dec
push
mov
dec
retf
inc
lds
push
fisttp
xchg
and
imul
jne
jle
and
fbstp
std
ins
jge
(bad)
jecxz
mov
mov
icebp
jecxz
inc
push
les
jae
sub
xchg
pop
ins
sti
push
(bad)
sbb
xchg
inc
fnstsw
call
loop
loopne
xchg
mov
dec
jecxz
lds
ret
xor
movs
pop
lods
sar
in
push
push
xchg
and
add
sbb
mov
cmp
sbb
push
jb
push
sub
lahf
seta
lods
dec
mov
mov
jle
inc
jp
cmp
adc
jnp
jp
rcr
mov
pop
xchg
sub
(bad)
or
mov
leave
ins
outs
push
lahf
js
push
dec
cmp
inc
jle
and
xchg
mov
pop
pop
pop
sbb
out
add
xchg
and
mov
inc
ret
in
fsin
out
ins
pop
cmp
mov
and
xor
jne
adc
loope
aas
adc
inc
(bad)
jnp
or
sbb
test
sbb
pop
test
mov
dec
(bad)
jmp
jo
fnop
lock
ins
adc
push
sub
lea
cmp
inc
adc
cmp
adc
dec
push
call
fs
lds
mov
test
movs
mov
jmp
cwde
mov
rol
gs
fst
out
test
jne
jecxz
shl
jp
pop
jmp
imul
mov
rcr
retf
mov
inc
xchg
mov
add
scas
inc
push
lods
adc
stc
dec
push
lock
pminub
add
imul
fcmovnbe
jge
or
iret
sub
js
pop
jmp
mov
mov
push
fldcw
mov
sub
cmp
in
dec
test
adc
cmp
ja
or
pop
mov
aas
movs
iret
cdq
movs
cmps
mov
popf
pop
jecxz
or
mov
(bad)
adc
dec
test
(bad)
gs
aam
arpl
stc
xchg
mov
push
and
dec
retf
scas
add
out
add
inc
and
xchg
pop
rol
sbb
pop
(bad)
mov
xor
lods
xchg
mov
dec
mov
adc
sub
mov
inc
mov
sbb
dec
xchg
ja
movs
and
sahf
fwait
out
sbb
sub
jl
movs
fcmove
aad
pop
inc
xchg
int3
dec
mov
(bad)
retf
sahf
clc
popa
mov
std
xchg
jmp
and
push
cmp
mov
(bad)
fwait
mov
int
fild
movs
in
movs
into
jp
icebp
add
xchg
cmp
inc
aaa
aas
das
(bad)
je
add
and
mov
xor
xchg
push
and
jmp
xchg
imul
mov
sub
adc
ds
int3
dec
fcom
sub
jmp
xchg
push
push
xchg
cmp
inc
add
mov
das
call
test
popa
and
sub
add
sub
movs
pop
inc
enter
or
sbb
aam
test
xlat
push
cld
lahf
mov
cmps
cs
aaa
dec
add
mov
pushf
test
ds
xor
ds
(bad)
jecxz
test
inc
arpl
aad
xor
push
or
add
movs
push
aam
test
sub
loop
rol
in
inc
gs
adc
xor
mov
in
dec
sbb
pop
inc
cmps
xchg
dec
popf
dec
cld
cmp
in
enter
jae
pop
fmul
fwait
sub
pop
add
push
xchg
push
js
mov
fdiv
push
fcmovnbe
aam
push
shr
movs
dec
mov
loop
aas
jbe
imul
mov
fadd
mov
xor
inc
mov
repz
add
repz
loopne
div
cmps
push
pop
jnp
scas
jle
aas
pusha
mov
add
test
xchg
cs
push
out
adc
std
mov
int3
jp
cmp
shr
call
pop
pop
cdq
mov
mov
push
add
inc
call
xor
xchg
mov
lahf
mov
cmp
daa
inc
push
into
add
mov
loopne
jns
(bad)
lock
out
lahf
sti
xor
mov
loope
mov
int
and
jae
fsubr
jl
mov
jge
and
push
in
lock
dec
sbb
into
ds
addr16
lea
or
(bad)
adc
retf
jmp
xor
lods
mov
in
pop
jl
dec
gs
mov
push
mov
out
push
jae
push
xor
cmp
test
mov
aas
imul
into
cmp
cmp
mov
cmp
inc
mov
add
dec
jae
pop
mov
imul
inc
push
mov
mov
jb
loope
sub
or
xor
aas
cmp
lock
cmps
(bad)
mov
sub
pop
add
scas
in
outs
pop
push
jmp
jno
(bad)
aad
stos
jmp
and
inc
ficomp
sbb
sub
dec
pop
xlat
or
sub
ret
pop
inc
scas
imul
movs
fbld
and
leave
int3
jns
rcl
pop
mov
add
mov
les
stos
ror
add
dec
mov
mov
fist
sbb
fwait
push
outs
fucomp
xchg
push
into
mov
shl
mov
xor
imul
inc
xlat
mov
add
sub
cmc
rcr
and
popf
retf
loope
inc
clc
cmp
add
dec
mov
mov
inc
repz
leave
ja
sub
or
in
jno
adc
ror
in
adc
mov
cmp
xor
mov
jbe
cdq
pop
cmp
or
adc
xchg
dec
scas
retf
and
into
dec
in
ficom
or
test
fnstsw
inc
xlat
sub
push
jecxz
pop
inc
jmp
jl
shl
mov
xchg
xor
xchg
cmc
pop
ds
mov
jae
and
dec
jmp
retf
loopne
and
or
imul
pop
cmp
mov
out
xor
push
je
inc
inc
mov
jne
dec
adc
repnz
xor
gs
push
mov
xchg
jnp
inc
xchg
out
adc
adc
sub
neg
cmp
ret
mov
inc
dec
sbb
cli
jns
inc
outs
push
pop
jae
loopne
pop
mov
mov
mov
and
in
push
js
adc
pop
xlat
repnz
loope
sub
xchg
or
call
cmp
push
lock
cmps
stc
ds
ins
inc
and
cmp
sub
push
pop
jnp
xchg
adc
data16
test
fs
shr
jns
push
adc
mov
or
jg
mov
jne
in
push
out
call
adc
les
cmp
int
jns
pop
lods
push
sub
push
scas
jge
movs
movs
jns
push
pop
enter
xchg
adc
out
sub
fcom
stc
repz
inc
mov
xchg
xchg
arpl
aad
sbb
nop
ror
push
(bad)
adc
lea
aas
loop
sub
mov
sbb
out
inc
jge
test
test
es
mov
and
add
shl
xor
out
popf
retf
clc
mov
push
test
sbb
sub
ret
repnz
not
bound
push
jmp
xchg
and
add
xchg
jle
sahf
xlat
push
sbb
arpl
iret
movs
mov
mov
mov
fild
je
call
jb
sbb
jmp
ss
inc
dec
jns
(bad)
ror
je
shr
in
pusha
daa
imul
jne
cmp
xor
xchg
jo
js
pop
sub
mov
add
xchg
inc
mov
pop
xor
int3
(bad)
aaa
bound
in
shr
sti
in
jb
dec
clc
xchg
fdivr
fisubr
fs
dec
sbb
test
jle
imul
jo
sbb
(bad)
ss
imul
mov
mov
fbstp
add
cmp
xor
mov
pop
movs
pop
pop
jg
mov
pop
test
and
push
cli
lock
rol
mov
(bad)
daa
mov
in
add
pop
push
int3
push
xchg
or
adc
xor
ja
call
push
xchg
or
add
test
jns
xor
xchg
pop
cmps
fdiv
inc
sbb
jg
jmp
adc
push
mov
ret
out
xchg
push
outs
pop
arpl
mov
nop
add
push
adc
adc
retf
dec
das
retf
xchg
fcomp
out
addr16
jmp
mov
inc
(bad)
pop
ss
xchg
xor
inc
mov
jp
xchg
dec
mov
sbb
jns
sbb
jge
aaa
xor
pusha
int3
fnstsw
push
dec
call
jnp
mov
dec
repnz
sbb
nop
xchg
sub
out
xchg
pop
sbb
scas
push
jnp
push
pop
adc
and
jecxz
sub
bnd
push
xchg
mov
cmp
and
mov
sbb
repz
mov
and
cmp
call
add
popa
push
ret
idiv
lock
add
jne
in
push
das
out
movs
xchg
push
and
push
sbb
(bad)
scas
adc
cmp
call
lahf
dec
pop
retf
push
es
push
int3
icebp
mov
shr
call
sub
push
mov
mov
(bad)
dec
xchg
jecxz
in
ffree
arpl
push
xchg
arpl
push
pop
xor
cmp
shl
sar
in
into
je
inc
mov
push
idiv
cmps
push
inc
cwde
sahf
cmp
stos
js
mov
sbb
aam
cld
repz
popa
lds
test
cmps
pop
fucomip
inc
add
mov
rcl
jle
and
out
rcr
ret
or
ret
outs
retf
cmps
inc
sbb
sub
int3
call
lahf
xchg
imul
lods
ror
das
mov
sbb
xlat
and
ret
mov
int
xchg
pop
cdq
mov
inc
pop
loope
push
push
out
xchg
jle
mov
pop
pushf
push
mov
shl
ret
cmp
aad
sar
dec
pop
clc
xchg
std
sti
sub
push
fidiv
mov
scas
cmp
leave
push
mov
inc
add
pop
cmp
jmp
iret
xchg
add
aas
dec
or
scas
mov
in
cdq
ror
xor
stos
cwde
movs
jno
arpl
and
mov
inc
cmc
mov
enter
clc
out
and
cmp
arpl
dec
mov
sbb
jmp
stos
sbb
cmps
pop
and
xor
shl
sar
mov
aas
test
mov
jae
into
dec
push
jg
or
sbb
cmp
xchg
mov
xor
stos
push
dec
cmp
xchg
sub
fmul
imul
mov
mov
es
aam
loope
pop
push
inc
std
sub
cmc
cmp
mov
outs
mov
or
pushf
sbb
pop
fnsave
ins
cmp
xchg
movs
in
cmp
pop
jg
lahf
bound
push
pusha
test
mov
adc
xchg
push
lods
jp
inc
shr
stc
es
ret
mov
add
aam
mov
inc
sbb
test
jecxz
adc
call
pop
pop
pushf
out
in
fucomip
sahf
mov
xchg
jg
ja
rcl
shl
add
add
sbb
scas
in
hlt
or
sar
pop
fisttp
mov
mov
(bad)
outs
pop
pop
mov
pop
pop
out
jae
mov
cli
dec
push
stos
and
sbb
cs
ror
fs
push
lahf
fld
loopne
cmp
(bad)
out
fldenv
cmp
cwde
or
cwde
and
dec
outs
out
fist
mov
jns
mov
jg
xchg
je
or
adc
ins
cli
or
rcr
hlt
outs
lods
or
clc
mov
pop
mov
sti
icebp
popa
or
xlat
mov
scas
xor
shl
mov
sti
cwde
aas
aad
pusha
cmc
test
adc
xchg
ja
adc
mov
dec
nop
xchg
mov
std
pop
inc
jno
pop
into
add
outs
mov
push
mov
cdq
jmp
ror
sbb
or
stc
or
mov
dec
shl
js
mov
das
dec
mov
pop
(bad)
leave
aaa
sub
xchg
fwait
push
ficom
das
xor
pop
and
or
pop
xchg
jnp
mov
mov
push
sub
ret
and
push
movs
std
pusha
add
js
or
int
rcl
xchg
pop
lea
stos
outs
enter
xor
fild
mov
lods
push
clc
outs
jmp
repz
push
sub
dec
and
ret
pop
add
dec
pushf
lahf
hlt
es
pusha
ror
frndint
retf
push
and
sub
aaa
add
mov
and
mov
and
sub
stos
loopne
push
mov
jne
push
jb
aas
test
xchg
fsubrp
or
cmps
mov
xor
push
mov
add
pop
mov
or
sub
sbb
jge
pop
out
int
push
ja
inc
jg
cli
fld
bound
xchg
fwait
lea
scas
mov
call
lods
rcl
mov
cli
scas
push
popa
add
daa
inc
sub
dec
dec
xchg
cmp
loop
cmp
clc
jns
cmp
jmp
dec
or
or
into
cmps
int
cmp
mul
adc
inc
mov
jae
pop
add
test
call
fisubr
xor
or
sub
movs
sti
mov
cmp
fwait
mov
xchg
outs
dec
in
adc
str
mov
retf
pop
in
in
cmc
inc
push
mov
push
(bad)
fcomp
fs
loope
dec
xlat
shl
xor
add
add
push
sub
imul
push
inc
mov
imul
mov
add
fwait
mov
pushf
sub
jnp
or
mov
jns
scas
dec
(bad)
fisttp
bound
cmp
push
jecxz
outs
rol
pop
lock
test
stos
jbe
stc
and
imul
ins
add
add
or
call
mov
sub
call
pop
cmc
in
in
mov
inc
mov
and
sti
pop
ins
pusha
pushf
cmp
dec
mov
adc
cs
ds
mov
stos
dec
fs
adc
stos
or
dec
lods
stc
mov
jl
add
call
dec
dec
xor
fld
(bad)
cld
ins
inc
mov
xchg
ins
std
sub
xchg
ror
fcom
cmp
pusha
mov
push
jbe
mov
int3
in
cmps
pop
cmps
push
fiadd
je
sar
mov
fisttp
scas
cmc
jg
mov
sub
scas
mov
pop
ja
les
stc
(bad)
ss
enter
out
xchg
aam
and
or
xlat
add
or
xor
lds
jge
jmp
dec
aaa
sbb
addr16
cmp
adc
cmp
jecxz
sti
jg
scas
mov
jge
mov
fs
clc
jbe
int3
cld
outs
scas
bound
imul
sbb
neg
aam
ret
pop
pop
or
repz
push
push
test
in
mov
mov
out
dec
fst
cwde
mov
xor
fs
dec
jns
or
les
aaa
mov
jo
push
fadd
xchg
jp
or
sti
movs
add
lds
pop
shl
imul
and
loopne
jnp
mov
(bad)
rcl
repnz
cmp
clc
sar
cmp
sahf
push
inc
cld
bound
xor
inc
push
sbb
mov
inc
cs
dec
sbb
icebp
ins
mov
push
jae
dec
iret
sbb
aam
xchg
stos
mov
xor
aam
lahf
ret
or
mov
gs
ins
adc
jg
add
jno
adc
pusha
repz
fidivr
push
in
xchg
data16
leave
mov
xor
fsubrp
es
retf
int3
inc
pop
mov
sbb
stos
imul
in
adc
cmp
hlt
cmp
and
dec
in
mov
jb
stc
jo
mov
add
aad
sub
pop
push
dec
add
clc
test
pop
frstor
hlt
das
xchg
xlat
or
mov
out
ins
sub
mov
pop
out
mov
outs
jp
xchg
adc
sbb
jle
adc
(bad)
in
cmps
mov
rcl
repz
sub
popa
ins
sahf
adc
sub
ds
popf
lock
fst
cli
jno
and
mov
es
pop
inc
fpatan
jge
ret
sub
and
cdq
loopne
jnp
(bad)
or
and
xor
sahf
mov
stos
aaa
cmp
dec
je
fchs
test
std
repnz
(bad)
inc
clc
fst
xor
test
fsub
sbb
and
dec
dec
call
hlt
sub
mov
sbb
imul
out
mov
push
mov
push
add
fsub
pop
jno
addr16
mov
sbb
inc
mov
fisttp
push
mov
repnz
mov
adc
jp
leave
sbb
test
in
enter
popf
mov
add
mov
jae
pop
pop
lds
or
push
xor
cwde
sbb
es
xor
jo
xor
ds
dec
pop
leave
pop
lock
movs
call
rcl
mov
sbb
leave
ins
mov
addr16
stos
pushf
cs
frstor
scas
pop
pop
adc
jg
pop
stos
jge
mov
shl
repnz
xchg
sub
jmp
rcr
call
xchg
mov
dec
pop
movs
pop
pop
dec
mov
pop
sbb
or
mov
mov
adc
mov
xchg
mov
adc
mov
mov
mov
add
fcom
lock
and
(bad)
leave
mov
pop
adc
inc
push
sbb
cmp
lahf
scas
mov
shr
jmp
jbe
cmc
cwde
or
fisttp
fsub
mov
ss
jb
outs
in
fcomp
sub
imul
adc
cmps
xchg
xchg
das
jo
push
shl
push
dec
dec
retf
mov
je
pop
push
stos
xchg
or
dec
cmc
pusha
lea
(bad)
cs
div
(bad)
aaa
jnp
jne
add
adc
ret
ins
sbb
mov
cs
das
outs
ret
add
mov
adc
out
mov
out
es
loopne
and
scas
mov
push
inc
mov
mov
imul
mov
mov
push
sub
inc
aas
inc
mov
popa
mov
pop
das
xchg
rcl
push
mov
pop
outs
mov
mov
out
es
adc
in
mov
xchg
inc
sub
test
adc
cld
loopne
loop
test
xchg
int
shl
int
inc
ret
push
test
(bad)
sub
jge
test
push
dec
mov
or
add
repnz
ds
mov
pop
inc
cld
pop
addr16
ret
out
mov
sub
cmc
adc
sub
cld
dec
enter
sub
aam
ds
dec
pop
sub
div
jp
add
cmps
fwait
push
xchg
retf
ror
push
mov
pop
add
sub
iret
push
repnz
out
mov
icebp
push
(bad)
and
add
xor
sbb
xchg
mov
adc
es
adc
dec
jmp
jns
test
pop
fisub
test
jae
xor
ret
push
es
lahf
xor
(bad)
mov
les
shr
pop
and
jl
cwde
stos
mov
sbb
inc
in
imul
clc
mov
sub
xchg
pop
sar
sahf
push
add
ins
mov
jmp
dec
jmp
or
pushf
or
and
mov
cli
jecxz
loopne
(bad)
xchg
repnz
in
cmp
leave
xchg
add
hlt
dec
(bad)
shr
stc
outs
ror
daa
inc
scas
or
adc
call
mov
shr
rcl
enter
ins
jge
cmp
jno
mov
mov
sbb
mov
xchg
pop
jp
lea
mov
mov
stos
cmp
xchg
pop
dec
repz
mov
xlat
or
iret
fcmovbe
fisttp
idiv
and
retf
nop
mov
cmp
push
pop
sbb
pop
mov
or
xor
(bad)
jge
rol
ret
lods
jmp
sbb
lock
repnz
shl
and
ret
int
xor
cmp
daa
and
mov
ss
imul
adc
stos
and
mov
rol
and
push
xchg
imul
xchg
fadd
mov
jge
xchg
scas
or
test
inc
sub
xor
cmp
push
in
arpl
in
add
xor
jmp
or
outs
sti
out
or
retf
lods
xchg
sub
(bad)
pop
mov
test
aad
mov
and
adc
and
jl
into
(bad)
enter
sub
cdq
mov
push
dec
nop
(bad)
inc
hlt
cmp
lock
std
(bad)
mov
cmp
mov
popf
retf
xlat
jb
sub
push
dec
aad
mov
jno
mov
or
mov
and
call
fwait
out
adc
mov
fld
push
jnp
adc
mov
sti
lods
xchg
xchg
sub
or
sbb
jo
push
inc
ja
das
push
into
cmp
xchg
mov
push
sub
adc
(bad)
mov
retf
and
int
add
cmps
popa
or
repnz
mov
in
xchg
ja
out
out
mov
fsubr
mov
cmp
push
push
jbe
mov
sbb
mov
and
inc
rcr
into
push
or
mov
jmp
xor
mov
jl
adc
retf
jb
add
pop
cdq
gs
mov
inc
adc
fstp
xchg
adc
sub
mov
adc
cmp
mov
rcl
addr16
retf
fdiv
pushf
outs
push
jbe
and
push
mov
and
sbb
lods
(bad)
sub
cmp
mov
cmp
and
xchg
call
pop
cmp
and
jnp
(bad)
ja
push
and
nop
add
cld
ds
cmp
in
movs
pop
rcl
imul
mov
out
push
ja
mov
add
rol
xor
(bad)
not
sbb
loopne
pusha
mov
cmp
loop
ret
daa
pusha
mov
push
dec
out
dec
sbb
pop
xchg
inc
add
adc
ss
xor
push
sub
sub
(bad)
int3
pop
arpl
js
aam
push
ret
sub
mov
out
inc
fisub
jmp
add
ss
xchg
push
aas
cmp
rcr
ins
adc
pop
inc
mov
pop
xchg
inc
jmp
aas
ret
ret
int3
fwait
(bad)
fwait
push
rol
mov
outs
push
ficom
jmp
xor
cli
sbb
mov
cmp
xor
leave
mov
jne
aad
xchg
cmp
jae
dec
dec
xchg
lods
pushf
(bad)
lahf
(bad)
mov
mov
and
movs
pop
xchg
ror
(bad)
cmp
std
or
and
aaa
rol
fwait
popf
jns
pop
jo
pushf
sub
push
dec
scas
nop
lock
test
hlt
push
mov
test
add
and
pop
sub
jge
in
fisub
gs
inc
popa
pop
mov
mov
(bad)
xchg
imul
data16
add
out
ret
add
jo
sub
push
or
push
je
pop
xor
mov
sahf
fwait
int3
push
jne
mov
mov
lock
iret
xor
lods
in
inc
(bad)
and
pop
dec
or
sub
xchg
inc
out
mov
call
mov
sbb
jae
fstp
dec
xor
cmps
ror
mov
dec
gs
dec
(bad)
cmp
out
xor
xor
cmp
pop
push
push
aad
ret
call
outs
dec
cmp
inc
lahf
ins
aas
inc
es
leave
mov
sbb
or
sub
jno
sbb
cld
out
cwde
loopne
rcr
(bad)
jb
bound
or
cmp
push
cli
xchg
lds
dec
lods
or
repnz
sub
jbe
ins
scas
lods
mov
lock
out
stos
sub
jmp
pop
inc
shl
push
lahf
or
aaa
inc
scas
xchg
popf
push
test
loope
cmp
cmps
sub
sbb
pop
cmp
into
mov
test
dec
pushf
icebp
add
cmp
in
dec
push
outs
add
sbb
rsm
inc
cmp
cmps
out
fwait
out
movs
and
push
iret
loop
add
lods
gs
adc
out
cmps
clc
push
push
out
in
dec
push
sbb
inc
mov
jp
jns
adc
push
adc
sub
(bad)
inc
lods
mov
(bad)
cmp
std
sar
shl
and
aam
mov
ret
cmps
stos
lds
cdq
dec
or
mov
fucomp
das
mov
mov
out
rcr
in
ds
sub
add
sbb
stos
inc
push
add
imul
sub
mov
add
mov
pop
and
cmp
fisubr
ret
push
jnp
xor
cmc
out
lods
xchg
es
xchg
sahf
cmp
add
adc
xor
dec
stc
cwde
pop
pop
imul
ret
rcl
mov
ds
jns
rdtsc
dec
cmc
xor
or
iret
push
and
mov
push
sub
not
or
js
test
mov
cmc
cmps
cdq
add
mov
es
mov
(bad)
imul
jge
popf
adc
sub
mov
jno
mov
imul
xlat
leavew
aad
mov
push
dec
dec
jmp
jmp
jp
jb
fstp
stos
push
lahf
pop
pop
cmps
repnz
pusha
neg
sub
push
lods
es
xchg
cmp
pop
sbb
hlt
pushf
into
add
call
(bad)
je
aas
call
mov
repz
cwde
mov
adc
xchg
(bad)
jecxz
mov
jns
sub
in
rep
aam
shr
sbb
mov
inc
adc
(bad)
or
and
cmp
jmp
sbb
imul
xor
inc
je
mov
push
mov
out
add
or
pop
mov
fcom
cdq
mov
sub
or
gs
retf
inc
inc
mov
lods
push
ss
push
dec
xor
jecxz
scas
arpl
ret
xor
xchg
cmps
test
xchg
ins
aaa
pop
sbb
jb
pop
scas
xor
inc
sub
das
sbb
rcl
cs
and
xchg
stos
inc
sub
ror
mov
scas
(bad)
or
push
or
pop
fisttp
sti
addr16
mov
xchg
pop
stc
jmp
popf
loop
mov
adc
dec
das
cmp
xchg
pop
and
leave
test
imul
sub
imul
or
sub
arpl
pop
and
push
xchg
xor
test
mov
inc
jmp
sub
xchg
in
xchg
arpl
call
inc
out
out
and
sbb
xor
jo
leave
dec
call
pop
xor
(bad)
push
shr
xchg
cli
je
mov
ss
ja
dec
mov
xlat
pop
call
xor
mov
xor
jo
push
adc
sub
push
adc
(bad)
jmp
mov
call
push
into
(bad)
sahf
aad
jmp
pop
jl
push
pop
ret
ror
adc
push
sbb
outs
xchg
add
jg
xor
daa
in
fcmove
inc
push
mov
ja
rcr
push
sub
cli
loopne
mov
sub
sub
jno
ss
ins
dec
sub
sbb
aaa
(bad)
in
stos
aad
xlat
ret
xchg
cli
jns
dec
mov
mov
je
cmps
in
fist
push
dec
adc
icebp
xchg
mov
bound
mov
mov
xchg
adc
retf
jmp
add
mov
xor
mov
rcl
stos
xchg
(bad)
fisub
movs
sbb
(bad)
pop
jle
inc
cmp
repz
popa
push
jo
lock
pop
xchg
mov
pop
xor
cmps
xchg
or
rol
sub
test
out
and
test
retf
jge
inc
xchg
lock
gs
repz
xor
dec
sub
push
inc
cld
cmp
imul
sub
mov
jb
pop
mov
add
xor
shl
mov
imul
ss
dec
mov
add
cdq
pop
pusha
call
inc
je
std
cmp
js
mov
mov
mov
jb
add
jb
(bad)
ffreep
gs
inc
int3
adc
and
sbb
add
call
and
addr16
(bad)
push
dec
lds
or
mov
add
add
xor
shr
xor
dec
add
push
loopne
in
jnp
mov
(bad)
cwde
mov
and
test
into
dec
fcmovb
xor
cmp
mov
or
hlt
sub
xchg
arpl
mov
lea
and
gs
jnp
mov
(bad)
xchg
push
and
aad
int3
sbb
cmp
mov
int3
xor
gs
pop
push
fnstenv
mov
movs
dec
repnz
xchg
dec
das
cmp
fisub
push
jge
int
lds
xchg
jmp
mov
mov
(bad)
xchg
(bad)
mov
aad
loop
jnp
xor
mov
shl
inc
xchg
in
sub
mov
push
inc
mov
mov
pop
xchg
movs
rcl
std
mov
les
pop
mov
test
xchg
sar
mov
cmps
(bad)
arpl
icebp
ds
sub
mov
cmps
scas
outs
inc
mov
aas
inc
aad
xchg
inc
repz
mov
iret
or
dec
and
arpl
sbb
pop
cmc
in
(bad)
int3
mov
cmp
push
inc
stos
ret
jbe
cmp
pop
int3
jmp
jp
(bad)
jg
cmp
push
push
mov
jecxz
mov
dec
in
std
or
inc
movs
xchg
test
mov
push
call
or
xchg
out
fstp
jne
sbb
pop
cmp
and
or
pop
push
dec
inc
xchg
mov
call
icebp
les
clc
dec
sub
mov
cdq
fnstenv
aaa
sahf
push
fild
inc
fucomip
outs
xor
enter
dec
out
adc
inc
dec
rol
push
mov
push
popf
xor
mov
fs
test
adc
scas
js
(bad)
loop
js
jmp
mov
mov
aas
(bad)
call
(bad)
or
hlt
sub
mov
jmp
(bad)
in
mov
xor
jmp
mov
cdq
das
test
or
pop
or
out
cmp
xchg
inc
jle
lahf
dec
mov
arpl
cwde
in
jbe
jb
daa
div
cmp
sbb
and
cdq
pop
fs
test
xchg
pusha
and
jg
xor
ret
aam
mov
dec
ficom
fwait
imul
xor
dec
add
stc
and
pop
add
pop
fadd
jmp
inc
stos
mov
mov
lahf
sub
ret
inc
aaa
mov
repz
jae
ins
sub
pop
mov
mov
mov
test
jbe
loop
sbb
jbe
and
fsubr
js
dec
mov
dec
mov
sub
mov
cmp
test
jbe
cdq
xor
jge
sbb
sbb
jo
std
adc
loope
xchg
and
iret
cwde
xor
rol
fistp
xor
call
jge
(bad)
hlt
sub
add
jecxz
jo
mov
(bad)
xor
inc
rcl
mov
add
mov
outs
push
jmp
call
test
call
cli
push
mov
call
jo
pop
cs
out
pop
in
outs
mov
sub
mov
xor
push
jns
pop
jecxz
and
pop
add
retf
sbb
cdq
imul
or
(bad)
push
xchg
cmp
push
sbb
mov
push
loop
mov
ins
sbb
xlat
adc
dec
sahf
or
imul
sbb
call
or
jl
jno
xor
dec
movs
loop
add
cmp
nop
xchg
xchg
cmp
cmc
lods
sub
aaa
nop
and
jae
cld
fcmovnbe
push
mov
fs
rol
dec
movs
enter
cmps
or
iret
xchg
xchg
in
jge
scas
jg
movs
mov
add
push
mov
cmp
jmp
mov
mov
xor
inc
sbb
cmp
adc
rol
mov
ja
sbb
sub
mov
sub
popa
enter
mov
jecxz
outs
idiv
sbb
out
push
clc
mov
or
inc
push
adc
into
mov
sahf
pop
repz
jmp
pop
add
movs
fcmovnu
jecxz
or
xchg
ret
push
mov
xor
addr16
xchg
or
enter
retf
(bad)
or
mov
xor
clc
into
shr
retf
xor
xor
ss
pop
push
mov
enter
ja
movs
in
push
xchg
lods
dec
jp
outs
push
nop
sar
mov
outs
push
jle
or
mov
cwde
xor
(bad)
in
push
adc
pop
fiadd
in
mov
jmp
sbb
dec
xlat
jb
(bad)
mov
int
arpl
sahf
or
jg
(bad)
mov
sbb
daa
cmps
cmc
sub
clc
enter
ror
add
cli
pop
sbb
loop
aad
adc
mov
pop
mov
out
jne
dec
retf
ds
pop
mov
xchg
and
je
pop
push
aad
sahf
popa
inc
cmp
cwde
xchg
enter
sub
(bad)
push
cmps
xor
arpl
xor
inc
aas
add
add
push
int3
les
shr
out
mov
inc
pop
pop
lods
sbb
jae
pop
adc
mov
into
mov
mov
sbb
clc
rcr
jg
xchg
sbb
rol
xchg
push
mov
out
ss
enter
xor
xlat
push
scas
fdivr
xchg
xor
bound
pop
sub
mov
sub
mov
pop
mov
mov
mov
lock
and
ja
xor
jno
add
dec
daa
call
or
test
or
std
cmc
test
xor
and
rcr
or
inc
test
inc
stos
mov
iret
or
dec
add
jge
xor
xchg
jae
test
sbb
jne
mov
cli
jno
sub
jecxz
jb
pop
gs
xchg
outs
pop
sbb
ret
xor
or
popf
mov
jo
push
sbb
sbb
sbb
mov
(bad)
jmp
stos
sub
sub
(bad)
jb
retf
inc
xor
es
call
ins
xchg
movs
cmp
xlat
dec
xor
jo
jmp
dec
daa
sar
add
and
shl
mov
daa
xchg
xchg
cwde
ds
ja
mov
jmp
iret
inc
jbe
ror
data16
xchg
lldt
into
pop
add
ret
out
lahf
movs
cmps
or
mov
out
and
and
or
test
in
test
and
add
jnp
cwde
outs
adc
imul
push
lods
ins
push
xchg
pusha
dec
sub
ret
and
push
loopne
repz
into
mov
xchg
cmps
xchg
out
mov
jb
jns
(bad)
mov
xchg
adc
jnp
aaa
loop
or
test
loopne
scas
sahf
out
cld
and
xchg
jae
inc
mov
jbe
push
jo
retf
mov
in
adc
div
add
(bad)
push
cmovae
neg
aad
int
jecxz
mov
push
xchg
sbb
sbb
fnsave
mov
not
pop
hlt
test
mov
jmp
jno
mov
js
ja
add
out
jge
and
ins
add
jo
push
pop
pusha
in
mov
std
cmp
jmp
aam
cli
ss
push
aas
std
lea
mov
sub
fisttp
xchg
stos
in
dec
inc
and
jmp
sti
rcr
(bad)
shr
lahf
mov
inc
xchg
shr
sub
mov
mov
mov
and
jb
int
or
mov
sti
and
sti
cmp
jle
mov
jle
fs
test
mov
add
cwde
sbb
sbb
mov
cmc
ret
fld
movs
pop
adc
dec
or
xor
fs
rol
ret
cmp
jmp
sahf
fwait
jae
dec
lods
movs
shl
out
loopne
lds
ret
add
adc
imul
mov
add
pop
mov
clc
cs
mov
ins
jmp
stc
iret
add
rcr
sbb
xor
cmp
movs
dec
out
xchg
mov
inc
movs
mov
imul
clc
movs
mov
or
dec
loop
les
mov
retf
mov
pop
or
mov
and
pop
aaa
mov
sub
out
cli
push
outs
push
push
scas
rol
mov
mov
lahf
repz
sub
fs
mov
pop
inc
test
sbb
push
pop
jg
adc
cmc
fidivr
dec
xor
sar
jbe
xchg
sub
mov
loop
into
loope
cmp
inc
jle
test
int
xchg
xor
pop
outs
scas
lock
mov
in
add
mov
adc
mov
dec
dec
add
or
sbb
sub
lock
sbb
lock
movs
ins
jb
(bad)
xchg
sub
or
cmp
aam
jle
inc
jo
jp
or
ror
imul
and
jne
sar
xchg
stos
or
mov
sbb
adc
arpl
or
pop
or
mov
clc
adc
mov
adc
add
jns
cmp
aam
mov
mov
mov
hlt
push
add
mov
ja
(bad)
(bad)
push
fabs
and
xchg
cwde
xchg
and
add
lods
pop
(bad)
inc
je
jecxz
fist
ins
cdq
mov
mov
and
push
test
pop
out
or
mov
sbb
aad
xchg
mov
push
mov
dec
xchg
xor
sub
adc
(bad)
ins
lds
pusha
int
call
and
in
mov
xchg
aam
xor
dec
fbld
rol
pop
pop
jmp
cld
xor
call
jg
jmp
lea
xchg
pop
dec
(bad)
fdivr
inc
sub
jg
mov
pop
imul
int3
pop
ret
push
aam
outs
test
add
inc
push
xchg
mov
cwde
xor
js
aad
cwde
push
aaa
lahf
int3
or
into
sub
sub
mov
call
retf
rcr
test
test
icebp
mov
pop
mov
jge
lahf
out
inc
inc
ret
test
popa
test
stos
mov
dec
add
lods
dec
dec
je
sbb
fcomp
inc
shl
mov
lods
xchg
sbb
add
(bad)
jge
(bad)
mov
movs
les
push
mov
data16
lds
xor
out
shl
dec
leave
gs
jne
xchg
pop
pop
or
les
(bad)
sub
loopne
(bad)
retf
push
cmp
in
int3
jno
sub
ja
mov
inc
jl
in
call
xchg
test
sahf
and
mov
push
lahf
xchg
(bad)
push
adc
sbb
cld
scas
cmps
ins
mov
fisttp
jge
cwde
icebp
mov
imul
or
and
leave
or
sbb
push
inc
mov
xlat
add
(bad)
int3
push
mov
ja
adc
mov
and
cmc
mov
pop
lds
lock
shr
mov
icebp
xor
popa
pop
in
in
or
sbb
mov
pop
movs
mov
jle
ret
xor
mov
ret
std
ret
lea
xchg
cmp
or
int
or
push
nop
add
pop
or
xor
mov
mov
jb
outs
jnp
xchg
movs
mov
mov
sub
(bad)
call
jmp
aam
sbb
scas
fucomi
mov
xor
jl
sbb
lea
movs
adc
cmp
mov
bound
sub
call
test
mov
retf
iret
xchg
push
or
popf
jbe
into
cmp
cmp
pop
jl
mul
pop
mov
mov
mov
mov
in
test
cmp
jbe
int
neg
jb
cdq
sub
mov
les
int3
or
out
lock
aam
movs
jno
add
push
popa
movs
push
and
mov
pusha
clc
fdivr
call
hlt
jbe
inc
xchg
(bad)
popa
xor
(bad)
dec
icebp
mov
fbstp
pop
cwde
sahf
adc
(bad)
add
int3
ins
adc
and
xchg
or
jmp
sbb
xchg
mov
into
(bad)
iret
xchg
cmp
mov
movs
inc
and
xchg
jge
out
jl
sbb
inc
ret
arpl
sbb
ror
xor
or
fstcw
mov
movs
cdq
sub
aad
popa
ss
ins
dec
xchg
loop
retf
sbb
pop
stos
add
jo
js
imul
xor
pop
inc
mov
inc
adc
fsubp
lds
(bad)
ret
bound
xchg
adc
fsubrp
mov
or
add
ficom
call
iret
clc
out
dec
retf
jp
in
ss
scas
jp
(bad)
aam
js
inc
in
mov
mov
into
mov
add
out
pushf
jmp
xor
add
push
xchg
les
sbb
lods
mov
mov
test
mov
shl
or
sbb
mov
enter
jle
fmul
jg
test
adc
xchg
test
retf
jo
sub
and
out
lods
out
popf
fnsave
pop
jle
cmps
test
jp
clc
cwde
mov
or
and
loop
sub
sub
xor
cmp
fst
jp
js
inc
mov
mov
adc
sbb
mov
sub
mov
xchg
cmp
or
and
jno
(bad)
test
data16
into
sti
pop
(bad)
jno
cld
cmps
fsub
push
xor
xor
add
shl
sbb
mov
mov
(bad)
inc
mov
cld
jge
hlt
(bad)
pop
mov
jge
inc
or
(bad)
movs
int
and
dec
cwde
push
std
call
pop
cwde
inc
dec
out
movzx
cmp
mov
cld
sbb
daa
or
into
push
sar
enter
xor
xor
dec
aam
jbe
cld
and
retf
xor
test
into
dec
cmp
data16
pop
or
sbb
call
adc
push
ins
mov
pusha
xchg
jle
xor
mov
loope
popf
pop
loop
push
jmp
lahf
mov
adc
sub
fcmovbe
daa
pop
mov
sbb
ins
xchg
dec
leave
dec
mov
outs
data16
mov
sub
das
xchg
(bad)
call
stos
ret
sti
in
(bad)
sub
imul
push
xor
add
jge
adc
ret
mov
jae
mov
pop
(bad)
cli
mov
xchg
add
out
inc
pop
mov
jae
cmp
pop
fwait
push
push
sub
cli
inc
enter
cmp
lods
sti
sbb
sub
jp
mov
aaa
rol
adc
mov
mov
imul
mov
add
mov
mov
ins
xchg
shl
cmc
adc
es
outs
repz
jg
ins
sub
push
enter
ret
lea
cs
addr16
mov
sub
fsub
dec
aas
(bad)
fadd
icebp
js
pop
ss
sti
in
dec
ret
(bad)
adc
push
inc
xor
gs
add
bswap
lods
pop
or
sub
je
or
retf
push
clc
shr
das
xchg
mov
mov
sahf
or
test
add
mov
shl
sbb
push
div
repz
in
push
and
stos
retf
(bad)
jl
jmp
mov
adc
repnz
mov
jmp
out
popa
arpl
mov
int
jmp
in
fidivr
lea
push
mov
adc
pop
jmp
pop
dec
outs
aaa
out
add
and
push
dec
or
jge
and
pop
jmp
dec
xchg
int
cmp
mov
js
cmp
xchg
(bad)
loopne
(bad)
and
pushf
out
mov
out
nop
add
(bad)
scas
je
ss
rol
ret
outs
dec
stos
jge
or
rol
pop
rcr
jl
test
cli
or
ret
popf
mov
stos
push
pop
pop
or
and
mov
sub
outs
clc
stos
mov
in
mov
ins
test
xchg
push
into
call
fwait
rol
push
jno
in
xchg
or
sbb
push
push
or
jp
stc
in
aad
and
mov
jecxz
inc
je
je
outs
mov
pop
js
mov
je
lds
sti
ficom
and
pop
imul
sub
cmp
and
out
ror
inc
dec
adc
inc
loope
loope
push
pop
sbb
repz
pop
jle
xchg
adc
and
fldenv
iret
sub
(bad)
call
out
test
mov
icebp
js
scas
(bad)
ror
fwait
cmp
daa
adc
out
enter
xor
dec
add
test
scas
pop
lahf
test
adc
test
xor
test
or
adc
xchg
call
test
xor
popf
cmps
mov
mov
cmp
data16
cmp
mov
les
push
xchg
push
sbb
pop
jg
push
or
jmp
xor
inc
push
lods
fs
mov
pop
lahf
mov
(bad)
retf
daa
and
pop
cwde
enter
dec
add
aad
xchg
ja
or
ds
mov
es
nop
(bad)
popf
pop
jge
jne
ret
sbb
dec
sbb
das
ficomp
cmps
sbb
ins
mov
xchg
add
mov
xor
test
cmp
movs
and
test
out
sbb
sbb
sti
lahf
outs
adc
lock
xor
test
mov
dec
out
push
sbb
jp
xchg
mov
mov
stos
xchg
cmps
and
add
jmp
shr
and
push
fisttp
sti
dec
loop
mov
mov
adc
mov
aad
test
cs
adc
pop
call
lea
sbb
add
xchg
inc
mov
idiv
jb
ja
or
lods
adc
mov
pop
stc
dec
cwde
xor
nop
cmp
lea
ret
repz
ss
or
xchg
(bad)
shr
rol
adc
test
pop
cdq
into
hlt
sbb
add
jo
repz
and
mov
push
lahf
push
es
inc
dec
fsubr
ror
cmp
aas
sbb
ins
popf
jbe
in
xor
dec
mov
imul
pop
xor
cwde
mov
ret
pop
jl
sub
mov
pushf
jmp
inc
stc
loop
das
adc
inc
lahf
and
rcr
shr
xor
fbstp
inc
mov
fwait
test
call
push
mov
mov
test
mov
push
shl
ret
lock
test
scas
iret
inc
pusha
push
jmp
mov
lea
dec
(bad)
idiv
retf
js
jmp
mov
inc
cmp
repz
iret
ins
fild
ret
test
inc
cmp
mov
stos
mov
jbe
ss
and
add
arpl
test
and
retf
sub
sbb
cmp
and
int
sbb
inc
cmps
pop
jmp
repnz
cmp
in
sbb
scas
pop
sub
sub
xor
push
inc
mov
adc
push
mov
push
(bad)
jb
mov
jbe
pminsw
sbb
ficom
mov
xchg
xchg
loope
push
sbb
jecxz
and
dec
mov
jo
ins
sub
push
(bad)
(bad)
lods
fdivr
push
enter
dec
push
cmps
into
pop
or
test
mov
cmp
or
nop
inc
mov
mov
in
push
sbb
fs
xor
xchg
cs
inc
add
xor
pusha
lods
cmp
test
shl
mov
push
ds
icebp
movs
jb
jp
sbb
mov
arpl
aas
pop
cli
fistp
xchg
xor
push
xchg
jne
mov
mov
fsubr
jns
or
fs
sub
push
adc
cmc
mov
or
in
mov
push
in
hlt
and
xchg
test
arpl
or
fisubr
leave
cs
rcl
idiv
add
dec
mov
out
mov
dec
fst
push
mov
out
pop
xor
adc
mov
pop
adc
sti
outs
fsub
mov
bound
pop
adc
xchg
add
xor
mov
test
ss
ja
fstp
in
pop
push
sti
cmp
movs
clc
fnstenv
cwde
icebp
lahf
pop
push
cmp
imul
sub
dec
ret
ret
push
(bad)
out
push
repnz
pop
outs
imul
popa
out
sub
sbb
ins
cmp
fcomp
cmp
and
push
(bad)
popa
sbb
pushf
jae
(bad)
jmp
mov
ds
lock
cmp
pop
das
pop
push
aam
pop
div
adc
daa
or
pop
shr
push
cmp
js
push
(bad)
mov
(bad)
mov
xor
pop
mov
call
fisubr
adc
and
adc
popf
cmp
sti
leave
xor
jns
xchg
inc
or
cmp
mov
mov
aaa
stos
jbe
push
sbb
outs
repnz
mov
loopne
xchg
fcomp
out
pop
lds
jns
mov
xchg
dec
ret
xchg
xlat
btc
cmp
mov
repz
and
out
test
xchg
ret
fisubr
repz
push
into
movntps
stc
int3
xchg
test
ret
pop
pusha
mov
pop
pmuludq
cmp
push
inc
mov
out
pop
stc
inc
xor
div
inc
loope
sbb
cmp
rcl
add
aaa
add
les
ss
cld
(bad)
xor
dec
push
pop
sub
mov
mov
pop
sbb
aas
setg
pop
xrelease
or
mov
test
adc
rcl
retf
adc
jle
ror
in
int
out
xchg
out
fisub
xor
fwait
jmp
out
aad
ins
add
or
push
or
lahf
fisub
and
jecxz
xor
int3
push
out
cmp
mov
dec
daa
or
pop
fadd
jae
inc
(bad)
mov
push
loope
arpl
inc
pop
retf
ret
fiadd
xchg
hlt
adc
xchg
and
pop
sub
jle
sub
adc
and
ss
cmp
test
lods
cmp
xor
mov
cmp
cmps
outs
xchg
jmp
pop
sbb
sti
iret
xor
sbb
pop
xchg
repz
jp
sub
fdivr
xchg
lds
adc
sbb
and
cmps
sahf
std
ds
cmp
ficom
mov
por
sbb
fnsave
and
xor
mov
fwait
or
pop
inc
cmps
mov
retf
lock
fld
cmps
sub
cmp
pop
cmc
nop
aas
lods
adc
push
mov
fcomp
pop
adc
(bad)
xor
xchg
mov
and
xchg
push
pop
loope
rep
xlat
jb
and
xchg
sub
shl
daa
dec
add
(bad)
out
cmp
xchg
pop
cwde
xchg
lock
sub
jne
pop
daa
outs
mov
rcl
out
div
sbb
pop
int3
push
in
mov
int
pop
adc
inc
dec
lods
shl
cmp
mov
in
stos
sub
cs
push
pop
fadd
ror
shr
sbb
cs
call
mov
ror
sub
or
aas
shl
xchg
jae
enter
aas
ins
cli
loop
mov
stc
mov
aaa
movs
mov
xchg
js
cmp
dec
and
iret
imul
push
test
imul
cmp
xchg
and
xchg
mov
ret
ja
or
push
fs
fmul
clc
or
rcr
test
iret
stos
adc
and
out
xchg
cli
lods
pop
jo
cdq
push
adc
sbb
repz
push
mov
invd
(bad)
out
inc
movs
mov
xchg
xor
jo
(bad)
shr
adc
test
xor
push
mul
jb
jge
neg
aam
out
pop
clc
and
mov
sbb
imul
cld
and
xchg
scas
and
mov
sahf
pop
ins
out
and
aam
and
xchg
jne
mov
(bad)
cwde
(bad)
mov
sbb
test
dec
mov
movs
int
sbb
push
dec
popa
adc
push
pop
push
cwde
cmp
(bad)
addr16
cmovnp
ror
mov
cmp
push
test
aam
popf
in
sub
or
dec
sbb
mov
dec
jno
dec
push
das
xor
push
xor
mov
mov
repnz
in
pushf
inc
mov
popf
aad
stos
pop
jmp
scas
hlt
lock
fdivr
outs
sbb
mov
gs
rol
mov
sbb
jg
inc
popf
pop
push
mov
pop
dec
mov
hlt
daa
xor
call
fimul
clc
mov
aam
shl
rcr
cli
aas
fxch
ja
pop
loop
pop
popf
sahf
outs
bound
ja
mov
push
jns
les
lds
ret
and
mov
jo
ret
(bad)
popf
cld
mov
scas
inc
in
mov
popf
jg
jecxz
gs
shr
and
js
or
hlt
pushf
retf
rol
mov
repnz
pop
sahf
in
dec
add
mov
cmps
pop
ret
daa
lods
sub
in
xchg
add
rcr
or
dec
fisttp
sar
mov
js
mov
outs
es
(bad)
xor
sbb
aaa
and
imul
cs
xor
cdq
add
mov
sub
in
adc
dec
imul
into
mov
stos
dec
fst
xchg
push
pop
mov
lock
out
mov
and
push
mov
cmp
sub
fcomp
retf
into
xlat
(bad)
mul
pushf
adc
ds
int
test
mov
mov
sub
(bad)
xchg
addr16
(bad)
fwait
pop
sahf
int
sub
jns
fsubr
ror
adc
mov
imul
xor
push
es
int3
or
push
lods
cmc
pop
aaa
test
pop
fidivr
ret
dec
in
enter
daa
retf
(bad)
push
sar
dec
add
(bad)
imul
ror
nop
dec
fdiv
cld
sub
inc
mov
into
test
push
fild
inc
ins
call
mov
inc
addr16
(bad)
mov
and
scas
sub
jae
and
mov
pop
mov
jns
jae
sub
pop
stos
mov
pop
and
inc
push
shl
jecxz
ins
fidiv
jecxz
mov
gs
cmp
mov
out
jmp
inc
cwde
daa
enter
jmp
mov
mov
adc
push
shl
popa
fcmovb
push
sbb
adc
xor
arpl
xor
rcl
mov
idiv
hlt
fs
nop
lahf
fstp
cmp
or
int3
loope
pop
cmp
ficom
or
push
loopne
cdq
pop
sbb
push
xchg
jb
mov
adc
popf
mov
out
popf
pop
xchg
jp
xor
aad
aas
into
xor
repz
das
retf
imul
mov
mov
xchg
call
sar
cli
repz
mov
std
xor
outs
pop
mov
push
shl
inc
cmp
sbb
ror
mov
hlt
fcom
js
push
xchg
mov
dec
jmp
cli
lods
inc
sti
xor
in
shl
jg
mov
icebp
popf
jne
xchg
mov
(bad)
cmc
jecxz
movs
add
push
retf
popf
es
nop
inc
neg
pop
fs
and
jne
sbb
mul
push
clc
imul
outs
ins
jmp
and
call
div
inc
loopne
cmp
xchg
xchg
out
mov
out
mov
pushf
loope
stc
push
lahf
push
inc
xor
dec
jnp
pop
cmps
adc
mov
icebp
sbb
jne
mov
hlt
cmp
mov
mov
aad
push
jmp
and
test
or
hlt
push
sahf
scas
cdq
cmc
in
sbb
stc
ret
mov
sbb
dec
mov
stos
push
push
stos
mov
bnd
dec
loope
es
xor
loopne
sti
repnz
repz
and
inc
pusha
(bad)
sbb
ds
inc
jnp
inc
inc
sti
jo
push
or
dec
and
test
imul
mov
ins
dec
repz
cmp
sub
and
movs
mov
add
test
inc
xchg
retf
add
mov
adc
and
sbb
mov
push
hlt
mov
push
fwait
cmp
fdiv
fnstenv
repnz
mov
mov
inc
xor
sub
mov
call
ss
pop
cmps
sbb
jl
movs
fld
push
and
inc
pop
and
mov
mov
ss
xchg
test
daa
je
outs
fisubr
jecxz
inc
and
or
mov
in
stos
movs
leave
movs
loope
stos
mov
mov
(bad)
psubd
ins
outs
icebp
and
push
pop
loopne
rcr
ds
and
sub
adc
lods
and
mov
pop
sbb
sbb
stos
sbb
clc
sbb
stos
and
mov
out
cmp
(bad)
sub
sti
ds
test
sbb
mov
push
ret
test
icebp
xchg
and
mov
out
add
mov
into
inc
sti
add
icebp
cmp
mov
daa
mov
jb
imul
fdiv
push
(bad)
mov
aaa
add
inc
push
fwait
bound
xchg
push
retf
push
dec
ds
(bad)
fadd
jp
dec
jo
xor
push
int3
jg
xor
mov
jecxz
cmc
outs
psrld
out
adc
pusha
clc
xor
dec
enter
je
push
dec
push
sbb
aad
data16
or
and
cmps
stc
cmp
sub
dec
or
inc
int3
mov
aas
(bad)
cmp
mov
pop
sub
jge
(bad)
mov
push
shl
sar
lahf
xchg
add
outs
ins
dec
mov
add
cmps
fmulp
xlat
test
in
xor
jp
lahf
or
add
xchg
xchg
add
jnp
cld
repz
xor
mov
out
pextrw
stos
dec
cmp
out
pop
call
movs
enter
sbb
mov
out
mov
and
sbb
rol
lahf
rol
and
and
inc
call
cmps
mov
ins
cs
ins
xchg
adc
mov
test
imul
or
stc
out
adc
nop
not
jle
imul
pop
push
mov
loopne
sbb
xchg
jge
inc
xor
add
xor
xchg
jnp
pop
jo
cmps
pusha
xor
sub
xchg
sti
xchg
cdq
adc
jbe
pop
jl
hlt
mov
add
mov
sub
cmps
sbb
xor
add
scas
shl
mov
add
fwait
mov
sbb
sbb
jecxz
dec
fbld
or
fsubr
adc
pop
add
adc
xchg
pop
fnsave
bound
clc
mov
mov
dec
pop
mov
int3
addr16
aaa
into
lahf
pop
ins
cdq
push
ficomp
int
int
xor
and
pop
adc
push
jmp
dec
adc
pop
rol
mov
out
in
adc
in
mov
out
lock
pop
scas
jmp
or
mov
stos
push
mov
mov
(bad)
ret
xchg
stos
cmps
cdq
cmc
cli
mov
shl
mov
inc
or
mov
ja
mov
shl
jbe
std
lods
aaa
or
and
cmp
xchg
clc
mov
push
icebp
or
fst
dec
into
jnp
xor
xor
and
inc
jns
or
shr
pop
sbb
popa
xchg
shl
out
imul
into
cwde
(bad)
imul
inc
xchg
mov
adc
xchg
inc
(bad)
dec
dec
in
pop
shl
mov
sbb
sbb
xor
outs
xchg
fild
add
ror
aam
je
ins
call
(bad)
(bad)
das
out
clc
cmp
add
stc
sub
call
sbb
adc
or
hlt
retf
xor
movs
popa
mov
out
cmp
adc
push
add
push
sub
fisub
mov
mov
(bad)
mov
sbb
jge
imul
push
push
mov
sbb
and
cs
jne
push
aad
mov
sar
or
mov
pop
add
sbb
mov
ds
push
test
cmp
loope
adc
mov
ins
scas
rcr
enter
push
es
out
les
and
add
fistp
push
sbb
add
int
xlat
(bad)
ja
xchg
xchg
xchg
jnp
cmp
lahf
push
scas
test
adc
inc
cli
mov
fistp
js
adc
mov
outs
rol
dec
xchg
xchg
mov
cli
jmp
mov
repz
mov
xchg
dec
add
mov
push
push
enter
mov
pop
das
ror
sub
in
dec
pop
aaa
scas
add
dec
push
sbb
inc
or
jmp
aas
lea
ret
nop
sbb
leave
inc
out
int3
div
outs
lds
sar
add
jecxz
int
xor
mov
mov
mov
dec
and
pop
cmc
out
lods
js
(bad)
icebp
sbb
sub
add
hlt
mov
je
xchg
aas
pop
jl
ins
out
push
sbb
(bad)
dec
jae
(bad)
hlt
out
les
pop
ins
cmp
enter
pop
inc
push
fwait
sub
and
aaa
and
lods
jle
pushf
(bad)
ror
or
push
out
not
push
pop
cmps
add
adc
test
push
jmp
sahf
leave
or
adc
fldcw
rcr
retf
movs
xchg
out
cdq
popf
pop
xor
xor
add
fld
dec
inc
inc
cmp
call
sti
(bad)
adc
cmp
inc
jnp
ds
(bad)
cwde
sub
stos
cmc
fistp
xor
out
sub
lds
dec
test
sahf
iret
aad
inc
dec
aaa
aam
jmp
push
push
or
xchg
fdivr
movs
add
push
iret
dec
pop
mov
js
add
push
jecxz
in
rcr
sub
or
outs
mov
mov
sbb
adc
adc
xchg
mov
hlt
imul
fsub
movs
mov
ss
jge
or
inc
inc
xchg
and
push
and
rcl
imul
(bad)
in
cdq
shl
call
outs
or
or
fsubr
push
enter
mov
repnz
dec
cwde
bnd
mov
or
pop
in
mov
repz
dec
mul
xchg
xchg
add
test
pop
sub
(bad)
in
mov
xchg
and
pop
nop
retf
std
cmps
jp
push
aaa
mov
lahf
or
addr16
popf
cmp
(bad)
dec
fdiv
rcr
into
into
in
cdq
sub
inc
xor
sbb
dec
cmp
pop
cmp
call
shr
cmp
daa
repz
jns
sbb
mov
xor
xor
cdq
or
inc
aad
xchg
das
int
movs
xlat
dec
push
cwde
mov
lahf
dec
nop
jl
inc
push
fnstsw
popa
sub
sahf
test
adc
adc
push
add
(bad)
sahf
and
xchg
mov
sbb
mov
leave
xchg
xchg
bound
dec
push
xchg
popf
lods
mov
sub
aam
cmp
jp
and
jl
or
mov
gs
adc
cmps
(bad)
cmp
dec
mov
mov
or
mov
mov
pandn
xchg
mov
movs
and
mov
aam
sbb
mov
sbb
clc
cld
push
fstp
iret
int
lods
(bad)
cmp
add
pop
ffreep
ficomp
adc
lea
rcl
cwde
pop
sub
xchg
test
mov
dec
repz
icebp
pop
and
and
push
pop
sub
inc
cmp
mov
xchg
cli
sub
or
xchg
aaa
adc
inc
hlt
mov
jns
mov
mov
mov
movs
mov
and
sbb
jae
xchg
arpl
cld
cmp
(bad)
repnz
movs
dec
test
and
out
mov
sub
pop
jbe
inc
in
mov
out
sub
or
shl
outs
and
mov
adc
stc
arpl
cli
icebp
add
jae
inc
xchg
push
dec
outs
pop
push
int
jl
mov
call
pop
xor
gs
out
or
outs
pop
clc
and
loop
add
lods
or
cwde
lahf
gs
lods
mov
dec
pop
xchg
(bad)
fstp
cwde
outs
adc
xchg
(bad)
(bad)
stos
cmps
push
ins
xor
sub
bound
mov
pop
or
mov
nop
cmp
pop
pop
lahf
inc
dec
lods
scas
imul
mov
imul
mov
inc
xchg
fld
scas
fidivr
leave
cmp
mov
sar
xchg
aaa
jae
leave
sbb
sub
stos
data16
mov
jmp
test
and
inc
(bad)
push
leave
ins
push
or
adc
or
adc
cdq
test
xor
jg
scas
or
push
xor
dec
mov
imul
ss
add
xor
pop
loop
es
mov
mov
movs
push
ret
dec
pushf
shl
mov
div
mov
je
jne
lods
retf
mov
mov
mov
mov
test
cmp
seta
xchg
jg
rcr
ret
add
stc
dec
pop
mov
push
mov
push
cmps
sub
adc
ss
rol
push
(bad)
int3
int
mov
jae
push
loop
ficomp
pop
mov
xchg
mov
daa
pop
xchg
or
xchg
inc
pusha
xor
push
repz
(bad)
fdivr
push
lock
scas
mov
push
cmc
js
jp
enter
es
xor
in
outs
mov
cmp
outs
add
sbb
jbe
pop
or
popa
xchg
ret
lea
cdq
stos
jbe
sub
and
shl
or
outs
call
sub
cmp
dec
lods
mov
aas
lahf
sbb
push
push
mov
in
bound
sub
dec
fldcw
push
xchg
dec
cmp
hlt
mov
inc
sbb
enter
and
push
fcom
cmc
and
pop
adc
adc
stc
sbb
in
outs
mov
aam
fisub
aas
jnp
call
xchg
lods
adc
out
jge
imul
adc
dec
mov
cmp
imul
mov
jmp
neg
pop
push
ins
test
push
mov
pop
daa
mov
and
lds
or
mov
call
dec
and
ss
mov
pushw
sub
neg
in
push
xchg
mov
test
hlt
mov
not
xor
adc
pop
and
jle
(bad)
je
clc
fidiv
xor
shl
shl
ja
imul
test
cmp
xchg
sbb
xor
fnstenv
adc
add
jmp
inc
out
xchg
pop
shr
jecxz
sbb
cmps
retf
inc
sub
pop
dec
(bad)
imul
mov
and
bound
sbb
into
(bad)
out
sub
addr16
out
pop
pusha
shl
test
syscall
lods
std
or
int3
and
and
std
jl
jo
xor
sbb
push
xor
dec
push
test
mov
inc
mov
or
rol
out
inc
popf
push
and
out
jmp
icebp
add
jb
sti
cmps
fdiv
sti
jae
dec
xchg
sti
ja
or
or
ins
jmp
add
pop
adc
stc
mov
fistp
or
mov
aaa
cmp
in
popa
bound
add
ds
mov
cwde
lds
out
sbb
fsubrp
ins
mov
or
mov
xchg
ds
add
xor
pop
dec
cld
or
inc
in
sub
add
mov
paddq
test
lock
and
mov
dec
xlat
sub
push
pop
inc
dec
cmps
jmp
pop
jge
xor
xchg
inc
test
retf
mov
dec
rcr
mov
and
ja
push
or
bndstx
rcr
neg
sub
push
add
je
xchg
jnp
in
mov
imul
dec
or
and
mov
xchg
mov
sbb
push
cmp
rol
dec
cmc
cmps
loopne
lods
mov
xchg
int
pop
jmp
fisttp
mov
push
jecxz
push
mov
pop
xchg
fsubp
fidiv
ret
cdq
mov
repz
popf
pop
mov
adc
push
lods
(bad)
hlt
add
out
dec
xchg
xchg
(bad)
test
out
(bad)
stc
ss
nop
lahf
call
les
push
test
push
ins
in
ficomp
stc
lods
clc
inc
lds
dec
push
iret
fs
and
es
adc
mov
push
jmp
daa
pop
push
test
imul
pop
mov
or
fsubrp
mov
mov
leave
rol
cmps
jge
sub
aaa
cdq
cmps
jo
jmp
push
inc
mov
inc
xor
test
push
out
mov
push
xor
xchg
pushf
cmp
jbe
add
lods
jae
xor
jmp
repnz
push
inc
xchg
jg
(bad)
mov
push
dec
in
sti
xchg
and
stos
pop
inc
cmps
xchg
fidivr
inc
or
mov
jne
lods
mov
xchg
mov
or
clc
ficomp
test
or
mov
adc
movs
adc
and
mov
add
cwde
jb
add
arpl
stc
cwde
push
daa
xchg
inc
fadd
fcmovne
fiadd
cld
(bad)
xor
dec
or
jns
les
out
imul
cdq
sbb
mov
call
or
sub
outs
sbb
inc
cmp
imul
mov
and
out
aas
cmp
into
call
(bad)
fwait
outs
ss
cmp
popf
movs
aam
hlt
outs
neg
test
sbb
push
jle
inc
add
es
pop
imul
aaa
mov
in
mov
xor
pop
dec
sub
popa
mov
jbe
jmp
push
stc
cmp
aaa
cld
retf
add
imul
(bad)
icebp
push
outs
aam
ja
lock
retf
out
sub
mov
sar
nop
scas
add
pop
jecxz
and
mov
mov
fsub
ja
out
mov
shl
imul
cld
icebp
in
xchg
js
(bad)
scas
in
ffreep
adc
cmp
(bad)
pop
jo
ret
jno
xor
pop
js
les
or
push
fstp
sbb
or
test
push
loope
inc
sbb
mov
(bad)
fild
test
inc
stos
dec
sbb
xchg
jae
push
in
out
daa
jb
nop
dec
jb
inc
cdq
enter
pusha
cmc
popa
or
jg
mov
call
lds
neg
xchg
pusha
shr
dec
and
jbe
mov
loope
out
iret
pop
push
int3
jge
mov
lahf
mul
xchg
fidiv
mov
sub
enter
xor
lods
test
dec
xor
ret
loope
xchg
mov
or
repnz
enter
dec
mov
push
jnp
ss
fcmove
sub
pop
idiv
jbe
dec
dec
cmp
imul
fadd
in
dec
pop
out
cmps
sub
imul
mov
mov
or
push
pop
mov
push
xchg
lods
sbb
xor
or
mov
add
xlat
addr16
sbb
mov
sub
jle
or
jp
fistp
pop
out
xchg
sbb
rcl
sti
test
push
xor
dec
test
push
cmp
fwait
xchg
sbb
aaa
sbb
pop
and
outs
mov
jo
(bad)
inc
jecxz
adc
cmp
repz
dec
cmp
sbb
cmp
cmp
xchg
xor
dec
dec
dec
movs
cmps
dec
inc
mov
int
es
in
shr
cmp
scas
das
ret
out
mov
xchg
ins
ret
push
inc
dec
into
mov
out
jmp
(bad)
pop
enter
cmp
sbb
fmul
dec
pop
pop
imul
mov
jg
pop
cli
adc
hlt
xchg
xchg
mov
sbb
dec
(bad)
imul
xor
dec
loop
lods
(bad)
and
ins
pop
fwait
lock
jae
cmp
fisttp
add
xor
cdq
mov
add
sbb
lock
outs
call
push
imul
sub
add
xor
dec
mov
jl
pop
pop
mov
fisubr
iret
push
cmc
mov
hlt
wbinvd
fsub
pop
dec
mov
mov
test
and
leave
sub
loop
push
ret
(bad)
or
imul
popa
xchg
leave
pop
adc
gs
adc
fsubp
js
push
jb
ds
xchg
leave
test
dec
sub
cmps
xchg
ins
ret
or
in
aam
pop
mov
scas
pop
sbb
fs
sbb
sub
out
xor
xchg
push
pop
push
sar
aam
dec
fidiv
bound
cwde
mov
xor
int3
ins
int
lea
push
arpl
scas
aam
pop
nop
mov
ret
rol
add
fcmove
data16
inc
inc
and
rcl
xchg
mov
test
stc
inc
cmp
test
xchg
xbegin
imul
xchg
sub
cmp
jl
cmc
in
stos
in
sbb
jmp
shl
int3
fsubr
hlt
hlt
inc
mov
jb
pop
mov
pusha
scas
mov
mov
movs
inc
adc
loop
lea
mov
jns
stc
cli
sub
jbe
inc
(bad)
shl
loop
xor
out
retf
adc
pop
push
out
in
hlt
xor
fsubr
mov
pusha
mov
mov
nop
aam
mov
xchg
outs
in
mov
and
adc
push
xlat
push
xchg
mov
sbb
fmulp
sbb
adc
cmp
or
arpl
push
xor
retf
sbb
xor
sub
adc
or
test
push
nop
push
(bad)
jge
add
dec
popa
sbb
shl
cld
(bad)
sti
cwde
and
jmp
cmc
out
pusha
scas
setae
xchg
fsub
fstp
arpl
mov
lock
xchg
sub
aaa
jecxz
mov
add
iret
cwde
in
stos
jmp
enter
ret
(bad)
sbb
and
fld
cmp
mov
and
cmp
and
mov
in
es
mov
fisttp
mov
inc
mov
and
mov
ret
pop
stos
retf
xchg
lea
mov
lods
in
push
add
xchg
dec
(bad)
call
or
fnsave
inc
sbb
outs
aad
adc
xor
retf
cmp
in
lds
bound
xor
stos
or
xchg
arpl
jb
xor
ficom
or
imul
dec
adc
xchg
inc
mov
icebp
pusha
(bad)
jmp
xor
mov
mov
sub
jmp
lds
data16
sub
sar
bound
int3
fld
pop
jp
enter
outs
ja
sbb
movs
mov
jns
shr
pushf
out
inc
mov
nop
add
jno
jg
push
add
xchg
(bad)
div
and
dec
jns
gs
pusha
das
adc
cmp
pop
dec
(bad)
rcl
and
jl
repnz
int
sahf
mov
movs
pop
mov
sar
imul
mov
mov
loopne
adc
in
jecxz
outs
pop
and
fst
fldcw
jnp
xor
jecxz
inc
(bad)
daa
push
or
and
mov
call
imul
or
repnz
adc
lods
sub
push
sbb
js
jns
fstp
lahf
push
sub
jo
cli
mov
out
jbe
mul
stc
ja
cmp
inc
in
not
inc
movs
in
mov
and
jmp
xchg
jbe
jl
movsx
out
dec
rcr
mov
jo
xchg
sub
fldenv
push
lods
fs
(bad)
push
sbb
ja
dec
out
fisttp
adc
outs
pop
pop
das
iret
bound
mov
gs
(bad)
and
jbe
sub
stos
in
jp
or
mov
(bad)
mov
movq
adc
outs
jns
lods
fwait
adc
out
test
inc
ss
repz
mov
hlt
sub
test
xor
push
mov
adc
out
cs
icebp
cmp
mov
xchg
push
outs
push
daa
fwait
or
mov
ja
push
push
ins
jne
add
cmps
jmp
sub
movs
jno
and
bound
xor
push
pop
sub
shl
cmp
addr16
hlt
retf
pop
das
das
loope
out
ja
gs
js
jmp
push
inc
lea
inc
inc
mov
inc
ret
mov
pop
jle
adc
pop
jb
ror
fstp
xor
jmp
or
movs
mov
ror
pop
pop
push
fnstenv
adc
xchg
sub
and
in
(bad)
jl
mov
adc
fucom
maskmovq
dec
xor
xchg
cmp
add
rcr
mov
cdq
mov
add
cdq
adc
sub
xor
or
fsubr
and
adc
or
xor
sar
pop
pop
jl
pusha
xchg
fstp
popa
dec
jge
cmp
mov
dec
pop
mov
dec
stc
in
(bad)
leave
jg
in
xor
cmp
outs
mov
jns
pop
mov
mov
sub
stos
cli
mov
xor
push
lods
retf
xchg
sbb
imul
push
dec
fidivr
or
add
imul
ret
sbb
out
icebp
aad
fwait
popa
adc
imul
les
cld
into
push
sbb
aad
adc
(bad)
in
stos
jne
mov
xor
in
sti
jae
jo
sbb
push
inc
and
cmp
daa
dec
movs
inc
xor
hlt
add
fsubr
std
pushf
push
mov
and
bound
pushf
cmp
mov
and
popf
mov
mov
jns
mov
fisub
fimul
in
xor
lahf
imul
dec
js
aas
dec
push
pop
xlat
mov
and
pop
mov
or
shl
mov
jns
dec
xchg
das
cs
retf
add
test
leave
aam
mov
test
clc
dec
push
fadd
inc
ret
mov
inc
icebp
mov
xchg
or
out
dec
sbb
pusha
push
jno
cmp
fisttp
jp
lods
lods
adc
sbb
ins
and
call
mov
out
loop
outs
adc
xchg
outs
inc
jbe
adc
bound
loopne
jmp
stos
pusha
ror
or
call
cli
inc
fdiv
retf
std
and
mov
xchg
inc
push
xchg
jle
push
daa
shr
scas
xlat
inc
mov
iret
mov
sub
sub
jp
stos
xchg
imul
enter
add
imul
jle
stc
mov
aam
mov
jmp
loopne
mov
xor
shr
lods
test
jg
mov
outs
enter
adc
mov
cmps
and
rcl
push
lods
jmp
sbb
cmp
loope
loopne
mov
popa
jmp
stc
push
call
ja
or
aas
daa
retf
test
xchg
mov
push
jecxz
mov
pop
adc
jmp
jo
add
(bad)
(bad)
push
out
dec
sbb
(bad)
mov
dec
push
adc
push
test
add
lods
push
pop
inc
lahf
ins
jbe
push
xor
sbb
outs
jo
and
jg
inc
xchg
cmps
add
js
mov
pmuludq
dec
cld
stc
sar
stc
or
mov
adc
js
add
clc
xor
xor
mov
xchg
aas
xlat
fsub
mov
ja
push
mov
sbb
jmp
inc
shl
push
sbb
imul
loopne
rol
and
enter
jne
fdivr
loopne
sahf
or
cld
adc
lods
xchg
xchg
sbb
fs
cmps
and
add
loop
int
xor
sar
sub
pop
sahf
xor
stos
out
pop
fucomi
pop
js
mov
retf
xor
jg
sbb
neg
add
jbe
add
jg
mov
xor
repnz
fisttp
jge
xchg
and
jne
or
xchg
iret
push
stos
xor
call
call
shr
mov
inc
into
sub
ror
cmp
mov
xchg
sar
(bad)
inc
cmc
or
popf
sbb
mov
mov
(bad)
mov
cmp
mov
ret
inc
shr
add
or
pop
rcl
jl
xor
jecxz
(bad)
jl
sub
das
je
stc
adc
ja
in
pop
in
das
ss
dec
push
mov
ficom
sbb
pop
ja
xchg
pop
bound
push
mov
xor
sbb
sub
sbb
fcomp
adc
retf
jns
dec
pop
inc
sbb
aad
mov
xor
repnz
pop
sub
pop
jno
sub
pusha
popf
xchg
fldcw
push
ja
add
hlt
fist
aam
xchg
jmp
or
push
adc
ins
push
jb
xlat
inc
leave
jns
or
repz
pop
in
je
mov
sbb
ret
or
nop
addr16
movs
jl
out
mov
retf
push
mov
jp
int3
sub
test
pop
fidiv
out
push
gs
std
lea
pop
cs
stos
xchg
push
aad
add
mov
lods
adc
popa
lds
retf
jg
cmp
push
cdq
imul
cmp
test
loope
je
test
scas
mov
xchg
mov
push
push
fs
movs
or
push
mov
sub
imul
in
sbb
and
pop
mov
and
xchg
dec
xor
bound
repnz
inc
mov
mov
(bad)
icebp
cmp
cld
pop
dec
dec
mov
pop
xchg
(bad)
dec
retf
inc
adc
push
ffree
cld
popf
mov
jbe
fisttp
mov
pop
add
aad
jge
dec
fiadd
or
cmp
xor
int3
test
jecxz
xor
lods
jmp
mov
sar
xchg
mov
inc
in
mov
and
cs
aam
jmp
or
mov
in
int3
(bad)
out
repz
xor
loope
shl
mov
mov
jl
jno
movs
sahf
jmp
push
jecxz
rol
jnp
jmp
lahf
push
and
dec
pop
mov
inc
cli
bound
or
and
jo
cmps
or
js
sar
pushf
mov
sub
jno
das
add
fst
xchg
xor
mov
ja
xor
jae
mov
pop
inc
inc
adc
mov
cmps
jae
shl
aam
stos
pop
or
push
sub
mov
shl
popf
movs
fidiv
mov
mov
out
lahf
out
xor
pusha
scas
push
scas
push
mov
dec
mov
adc
out
fdivr
ret
sub
cmps
(bad)
pop
fist
outs
aam
(bad)
fstp
das
fsubr
leave
mov
dec
add
add
pop
mov
jnp
cwde
adc
jg
out
inc
xchg
sub
jb
retf
fadd
inc
frstor
fcmovu
(bad)
in
cmps
inc
fadd
fidiv
dec
out
cmp
inc
cld
in
enter
xchg
cs
data16
sbb
mov
or
jb
cld
fnsave
mov
ja
cmp
shl
mov
std
fisubr
sub
mov
sub
cmc
scas
inc
pop
add
call
and
cmc
push
fnstsw
or
popa
adc
or
push
xchg
icebp
push
sub
adc
retf
mov
mov
sbb
iret
cmc
push
push
mov
dec
xor
inc
out
sbb
cli
cmp
dec
stos
mov
stos
inc
div
xchg
push
lock
(bad)
fild
mov
xor
retf
shl
push
pop
ins
dec
xchg
stos
loopne
punpcklwd
sbb
ret
loop
in
cs
push
imul
push
sbb
hlt
dec
icebp
cli
mov
in
retf
repz
imul
(bad)
test
and
call
lahf
mov
jmp
sub
add
or
loop
mul
ret
inc
fwait
jnp
mov
jp
push
xchg
(bad)
out
jg
jb
aaa
call
jle
std
xlat
icebp
push
xchg
(bad)
in
loope
adc
ret
fwait
js
repnz
fdiv
test
gs
push
mov
xchg
cmp
inc
rol
mov
sbb
inc
mov
(bad)
cmp
test
ins
call
ins
outs
imul
adc
sbb
call
aam
fs
xchg
cmp
stos
das
lahf
clc
push
sbb
or
(bad)
pop
ret
test
and
mov
stos
ret
mov
cmp
push
inc
into
(bad)
mov
jbe
sub
sbb
mov
cmps
ficom
inc
sbb
inc
or
and
test
jne
dec
xchg
push
mov
or
push
repz
fimul
call
aad
mov
cmp
sbb
jp
dec
movs
mov
jge
add
(bad)
pop
neg
idiv
dec
out
lock
add
xor
cmp
out
jmp
stc
or
ins
bound
push
and
adc
pop
inc
cmp
rcr
retf
enter
push
sub
or
call
xchg
enter
icebp
scas
jb
cs
adc
arpl
stos
rol
dec
push
mov
add
test
cdq
inc
jae
pop
jmp
xor
clc
mov
mov
popa
aad
ret
xchg
push
jae
mov
adc
or
add
(bad)
xchg
lahf
lock
add
mov
xor
outs
test
xchg
or
mov
das
mov
imul
ror
add
sub
xlat
(bad)
loopne
mov
pop
call
out
xor
mov
push
pop
jp
mov
popa
loop
or
inc
pop
in
iret
out
in
and
in
xlat
and
inc
pop
sub
movs
fild
jmp
inc
cmps
scas
lods
jnp
daa
or
pop
loopne
ret
sub
lds
sbb
ins
ds
xor
pop
pop
movs
addr16
xor
mov
push
ret
add
lods
mov
mov
pop
jo
mov
inc
inc
(bad)
fldl2t
jb
(bad)
jno
dec
(bad)
mov
sbb
xor
fwait
iret
jbe
retf
(bad)
in
in
pop
sbb
popf
scas
add
in
pushf
shl
mov
and
and
jno
imul
inc
pop
stos
sbb
adc
aaa
in
iret
jle
loope
push
xchg
inc
add
adc
out
fild
jbe
(bad)
mov
xchg
ins
ss
adc
mov
mov
sub
fisub
jno
add
out
push
loopne
repnz
out
mov
mov
cmps
mov
(bad)
mov
push
test
mov
ja
jle
iret
pop
mov
iret
lods
pop
scas
xchg
lds
test
in
(bad)
arpl
mov
xor
add
inc
(bad)
imul
ret
arpl
dec
pop
mov
lds
sub
stos
cmc
mov
sbb
(bad)
adc
mov
and
sti
cs
mov
cmp
jg
xor
lahf
scas
mov
(bad)
cmps
or
ficomp
sbb
or
arpl
clc
adc
ret
lods
xor
or
fstp
jb
jle
mov
mov
fld
lds
loop
jmp
add
mov
ret
adc
adc
pushf
push
cwde
inc
mov
inc
in
das
in
shl
popf
jmp
cmps
jp
imul
cs
movs
repnz
jle
push
sub
sub
repnz
xor
je
fstp
loope
push
je
clc
mov
popa
adc
or
push
add
pop
mov
push
jae
(bad)
outs
test
lea
hlt
mov
daa
xchg
push
mov
ins
inc
adc
and
xchg
jns
sysret
jae
mov
pop
out
adc
outs
gs
sar
jne
jp
sub
shr
loope
mov
in
jmp
(bad)
mov
and
rcr
retf
inc
clc
adc
inc
push
loop
mov
xchg
mov
mov
lahf
iret
rcl
fcomip
dec
sbb
lods
sbb
add
test
popf
adc
test
(bad)
mul
xor
aam
(bad)
popa
fidivr
mov
loope
sub
ret
lock
mov
cmp
xchg
ror
stos
jmp
ret
popf
inc
outs
and
pop
push
aam
jg
pop
push
cmp
mov
loope
inc
cli
dec
(bad)
(bad)
lock
pop
aam
cmp
mov
scas
sub
enter
mov
sbb
test
leave
cmps
adc
lahf
dec
mov
mov
sbb
int3
cmp
call
fild
dec
fst
sub
inc
sahf
mov
mov
push
call
or
or
lods
call
int
adc
push
scas
mov
ret
(bad)
pusha
or
sub
sub
and
and
mov
pop
dec
loopne
add
mov
fadd
adc
test
outs
(bad)
and
sbb
jno
mov
arpl
outs
popa
mov
cmc
aaa
sub
mov
jnp
cmps
inc
adc
je
movs
leave
push
push
or
stos
mov
popa
sbb
into
pusha
pop
out
jb
xor
fcomp
mov
adc
mov
xchg
ss
repz
js
sub
xor
jne
fs
xchg
icebp
inc
sub
xchg
lods
popa
out
in
aad
inc
adc
jg
xor
xchg
mov
aam
dec
jmp
jne
fnstsw
or
mov
clc
push
sbb
das
mov
adc
or
mov
mov
icebp
lods
sub
repnz
outs
mov
mov
mov
jp
pop
data16
xchg
inc
push
(bad)
jmp
pop
and
pushf
sbb
fiadd
pushf
dec
mov
inc
xchg
xor
xor
inc
outs
gs
sar
pop
cmps
inc
aas
stos
inc
test
repnz
or
enter
imul
mov
aaa
cmp
pop
push
jecxz
add
mov
in
lea
add
cmps
lds
rol
out
or
add
inc
pop
dec
sub
ins
mov
push
cdq
push
data16
shl
(bad)
sbb
cmp
adc
pop
stc
aas
xlat
xlat
neg
cmp
xchg
sub
push
cs
aaa
inc
test
gs
push
inc
cli
cld
and
out
clc
inc
or
fst
jp
rcl
inc
sbb
mov
not
inc
aas
jp
in
push
push
push
cmps
mov
retf
cwde
push
test
or
popa
fld
outs
and
xor
or
and
cmc
dec
jge
dec
sub
mov
sub
xor
aas
nop
jl
mov
fdivr
and
sbb
pop
shl
in
push
jae
sub
and
and
imul
push
sub
jo
mov
neg
ja
pop
mov
clc
mov
arpl
pop
out
imul
loopne
(bad)
fcmovb
jmp
loopne
scas
and
and
sbb
mov
mov
or
cmp
add
jne
sbb
out
fs
xchg
jmp
sbb
stos
call
lea
movs
(bad)
aam
mov
loope
pop
jne
aam
push
mov
cmp
inc
iret
repz
jne
movs
mov
(bad)
jle
lea
cwde
cmp
or
jl
mov
jg
call
cmp
mov
das
inc
mov
pop
lea
mov
not
push
mov
jne
jne
sbb
jg
iret
inc
stos
pop
test
(bad)
out
sbb
xchg
cmp
test
aam
in
je
les
cmp
xchg
(bad)
push
pop
inc
loop
movups
fild
xlat
gs
int
in
mov
enter
mov
(bad)
and
jmp
xlat
or
imul
jp
test
ds
add
dec
(bad)
pop
inc
fsub
mov
add
or
(bad)
sub
xchg
jbe
repz
push
mov
xchg
sbb
push
scas
inc
xchg
jl
dec
inc
sbb
sbb
icebp
ror
(bad)
mov
mov
das
inc
aaa
xor
jecxz
jbe
mov
sbb
xor
cmp
shl
pop
pop
daa
jnp
movs
imul
test
(bad)
loope
inc
mul
xor
inc
xor
cmp
mov
adc
(bad)
or
scas
fld
shr
stc
fbstp
bound
les
into
or
rcr
xchg
lods
inc
out
xchg
jns
icebp
inc
rcl
lahf
sub
mov
retf
movs
jge
popa
push
pop
mov
push
add
ret
fld
add
ins
push
pop
mov
scas
xchg
push
fidivr
sar
sar
fisttp
cmps
js
pop
nop
cmc
jmp
pxor
xchg
and
mov
mov
sahf
push
mov
cs
pushf
pop
ss
inc
jecxz
and
xor
or
int
pop
fcmovbe
rcr
data16
lds
call
js
cmp
outs
and
pop
outs
sub
xor
je
(bad)
pop
adc
and
stos
fild
jnp
inc
or
sbb
bound
popf
fisttp
inc
mov
call
data16
push
mov
xchg
rcr
fstp
xor
xchg
int
sbb
lods
cmps
add
add
mov
mov
inc
iret
pusha
or
jmp
mov
(bad)
aaa
(bad)
gs
jne
adc
add
jl
pop
sub
or
int3
mov
retf
retf
xchg
aam
jmp
pop
mov
pusha
jl
enter
inc
repnz
inc
pop
es
sbb
aam
ret
fld
xchg
dec
push
scas
loopne
jae
pop
mov
loop
hlt
mov
out
jno
rcl
fst
pop
inc
adc
pop
in
les
nop
xchg
test
and
xor
stos
push
jno
jl
pop
push
add
pop
sbb
jl
add
cwde
stc
sub
bnd
dec
mov
pop
pop
push
dec
int
cli
retf
and
dec
test
aas
push
mov
dec
mov
push
in
leave
sbb
pusha
or
nop
and
cdq
lods
pop
data16
nop
mov
push
mov
inc
sub
call
jb
repnz
std
inc
cmp
sbb
rol
xchg
ins
inc
and
sbb
loopne
ins
xor
pop
and
and
add
mov
out
inc
dec
jne
sahf
jne
and
cmp
mov
inc
sti
sub
and
push
(bad)
mov
shl
xchg
(bad)
inc
repnz
ret
scas
idiv
xchg
cli
jge
ss
out
out
(bad)
cwde
popa
dec
fisubr
popa
mov
mov
jecxz
sbb
adc
or
cmp
pop
xlat
jge
test
and
(bad)
repnz
sbb
fs
cli
jb
xchg
mov
add
dec
popa
mov
sbb
stc
std
sbb
jo
out
fcmovne
and
or
stos
jp
push
push
cmp
jo
push
add
xor
dec
mov
repnz
mov
mov
shl
push
in
push
xchg
sbb
or
jmp
iret
pop
out
push
adc
mov
or
sbb
cli
xor
rep
jge
push
pushf
repnz
adc
cmp
lods
out
aaa
pop
push
sti
xchg
or
sub
mov
push
or
cmp
mov
icebp
dec
retf
(bad)
sar
pop
cmc
jecxz
cmp
xchg
rcr
daa
outs
push
or
inc
test
and
dec
inc
jb
push
jecxz
push
frstor
jge
jnp
lahf
test
(bad)
sbb
cwde
cmp
jmp
call
inc
adc
inc
shl
cmp
add
sbb
gs
fsubrp
pop
int
pusha
mov
pop
sub
mov
into
sub
das
mov
push
mov
sbb
push
or
inc
cmc
inc
loopne
mov
mov
retf
(bad)
sbb
(bad)
pop
aas
(bad)
mov
pop
in
(bad)
iret
fdivrp
aad
sub
sbb
jns
mov
or
adc
ja
dec
pop
(bad)
push
adc
adc
repz
stos
call
mov
pop
mov
leave
dec
je
ret
push
cmps
nop
in
xchg
pop
movs
push
add
sbb
popa
aad
fild
mov
out
jne
add
outs
ins
mov
stc
mov
das
iret
out
mov
adc
mov
inc
ds
lds
xchg
cs
pop
fwait
xchg
inc
pop
pop
sbb
in
retf
push
pusha
and
aaa
sar
pop
test
mov
mov
fistp
es
sbb
inc
mov
or
add
movs
ja
jo
inc
mov
pusha
fdivr
xor
lds
jl
(bad)
cmps
sbb
cmps
movs
push
sub
(bad)
loope
mov
scas
add
dec
jg
add
or
jge
cmp
fidivr
xor
outs
adc
dec
daa
std
mov
adc
sub
jl
dec
dec
mov
call
mov
inc
adc
and
ror
add
clc
inc
and
cld
jo
stc
jno
das
mov
clc
adc
sbb
iret
and
je
mov
adc
or
pop
shl
pop
jge
lods
addr16
lock
adc
pop
int3
jl
cmps
repz
jae
or
mov
mov
sbb
mov
sbb
sub
es
pop
js
daa
xchg
(bad)
pop
jbe
inc
xchg
(bad)
shl
xchg
loop
pop
push
nop
icebp
cmps
rcl
lods
mov
ret
test
and
cdq
push
jb
aad
jp
dec
lods
jp
sub
mov
(bad)
(bad)
sub
add
rcl
or
mov
(bad)
and
mov
loopne
fcmovnbe
jbe
mov
or
jo
push
mov
in
cmps
retf
sbb
xor
jae
loopne
clc
or
popa
sub
sbb
xor
fcom
mov
mov
jno
jno
shr
xchg
pop
in
ret
popa
rcl
adc
add
xor
xchg
mov
xchg
and
xchg
mov
and
pop
sar
adc
sbb
mov
mov
pop
(bad)
mov
es
mov
xor
mov
push
ds
or
pop
and
pop
clc
(bad)
daa
mov
jae
pop
inc
test
loop
cs
xor
add
test
adc
xor
inc
add
cmp
popf
push
inc
sbb
mov
jbe
dec
loope
sub
fbstp
ror
les
lahf
out
sahf
xlat
stos
and
push
xchg
sbb
out
jbe
rcl
or
or
(bad)
pusha
mov
mov
or
add
clc
jp
dec
fld
rcl
sbb
cli
int
lods
(bad)
xlat
push
xor
mov
mov
ja
sub
hlt
cld
pop
shl
in
jb
and
aam
pop
stos
jl
je
mov
add
jmp
mov
mov
es
es
test
call
(bad)
ins
push
and
(bad)
call
push
sbb
iret
out
pop
sbb
mov
or
adc
inc
stos
mov
add
push
push
xor
push
xchg
cmps
xchg
pushf
mov
ffree
into
add
inc
adc
mov
aad
jmp
jnp
inc
enter
cmp
push
xor
sbb
sub
pop
push
in
pop
pop
and
popa
mov
cmc
pop
mov
(bad)
mov
in
inc
jle
div
inc
aas
inc
lock
imul
sahf
inc
shr
ins
not
pop
out
repz
jmp
mov
cdq
lock
lods
stc
pop
js
sbb
jl
scas
sbb
adc
das
sbb
inc
pop
xchg
cmp
xor
fnstsw
mov
fwait
mov
add
test
pop
mov
jl
ss
pusha
jo
adc
jno
stos
jnp
enter
xor
aam
iret
ficom
adc
xchg
sub
xlat
lods
in
fs
retf
mov
and
(bad)
push
repz
push
ja
dec
xchg
mov
lock
xlat
sub
dec
pop
sub
sub
mov
inc
pop
aas
xlat
sbb
pop
in
dec
or
fnstenv
daa
push
mov
adc
pop
sub
imul
xchg
mov
xor
mov
ss
sar
dec
xor
lock
jecxz
loope
mov
dec
mov
aaa
mov
fstp
lds
cmp
lea
xchg
xchg
cs
dec
dec
and
pop
cmps
and
jns
push
add
das
test
inc
retf
imul
fsub
out
int
retf
call
shr
test
movs
push
imul
jne
ds
cmp
or
sahf
add
lea
pop
add
xchg
xor
jecxz
mov
push
jle
dec
test
sub
das
(bad)
jmp
in
jo
mov
data16
mov
inc
movs
pop
lahf
into
or
xor
rcr
ds
sbb
dec
mov
add
inc
leave
cmp
mov
sbb
daa
fidiv
xchg
cmps
cmps
int3
std
lods
cmp
mov
pusha
sti
sbb
add
(bad)
inc
xchg
xchg
into
pop
sbb
fcomp
mov
enter
out
push
mov
xor
or
jmp
xor
pop
cmps
lock
xor
aas
sub
adc
mov
or
sub
inc
cmp
dec
mov
(bad)
pushf
xchg
and
ret
xchg
jg
gs
pop
shl
cdq
push
lahf
dec
inc
dec
pop
and
add
jge
mov
xchg
cmc
dec
inc
(bad)
xchg
jp
xor
sub
nop
mov
mov
pop
sub
add
popa
cmp
inc
ret
cmp
std
jl
mov
pop
test
loopne
inc
mov
imul
push
iret
cdq
(bad)
aam
popf
cmps
and
fild
sub
push
or
dec
or
xchg
inc
out
adc
data16
test
(bad)
loope
adc
retf
mov
in
sar
cmps
hlt
cmp
sub
sbb
je
dec
mov
icebp
mov
jge
xlat
ins
lea
push
(bad)
lock
and
cmc
ins
in
cmp
mov
sar
mov
test
lahf
jecxz
loope
xchg
push
popa
pop
loope
and
pop
mov
sub
jp
psubusw
and
mov
mov
test
mov
adc
lea
(bad)
add
dec
in
ror
xchg
pop
pop
add
and
fidivr
xchg
cmp
dec
mov
(bad)
out
(bad)
movs
test
call
loopne
or
inc
(bad)
jecxz
ds
repnz
mov
mov
or
mov
es
dec
jo
inc
les
test
inc
mov
dec
mov
sub
mov
xor
mov
mov
inc
movs
pop
mov
inc
ds
int3
adc
push
bound
mov
pop
push
xchg
lock
mov
xor
cmp
cmc
dec
mov
retf
mov
dec
sbb
inc
dec
popf
jecxz
in
jmp
xchg
shl
mov
outs
push
inc
pop
lods
xchg
int3
lock
xchg
not
dec
lods
jmp
sbb
xchg
xor
lods
rol
add
push
loop
and
fs
adc
and
jmp
ins
cmp
stc
pop
stc
pop
aas
cmc
retf
and
inc
loope
lods
popa
bound
aad
ins
pop
push
lock
(bad)
cmp
mov
aad
lea
sub
clc
mov
mov
std
mov
data16
mov
in
mov
iret
xor
(bad)
cli
adc
daa
iret
xor
xor
in
shl
repnz
add
dec
push
mov
es
pop
sar
les
mov
fidiv
cmc
into
xor
pop
jae
retfw
frndint
cli
int3
je
sub
push
xchg
retf
jmp
mov
es
loop
jnp
jnp
jb
test
inc
dec
adc
pop
mov
je
xor
cs
sub
lahf
pop
cmc
mov
pop
lock
and
jne
adc
shl
call
fld
cmp
es
ret
imul
mov
stc
int3
mov
xchg
add
jb
xchg
jb
inc
and
test
cld
xlat
pop
mov
les
push
outs
cld
(bad)
mov
inc
mov
inc
imul
inc
leave
mov
sbb
lea
sub
jae
inc
push
dec
adc
in
dec
enter
outs
pop
jae
les
push
fild
add
or
add
or
ins
retw
cld
jns
in
sub
add
stc
cmp
popf
jg
adc
ss
int3
out
outs
xchg
jl
push
xchg
scas
sbb
jp
popa
push
sbb
test
sub
ds
sahf
popa
in
out
cmp
push
sahf
and
inc
mov
mov
lock
mov
mov
sub
shr
xchg
mov
xor
ins
cwde
xor
mov
xor
popf
nop
pushf
scas
icebp
movs
xchg
mov
or
loope
ret
mov
sub
add
movs
pop
sub
jae
cmp
dec
mov
dec
stc
fisubr
ficom
mov
out
mov
mov
jl
xor
cli
test
cdq
retf
ds
inc
ret
mov
jno
adc
push
mov
sub
dec
mov
xchg
in
xor
fucomp
inc
pop
sbb
mov
arpl
pushf
mov
cli
mov
ror
sub
test
movs
cmp
cmp
sahf
dec
sbb
call
mov
add
aas
jne
adc
mov
loope
xor
not
xor
sti
icebp
push
jno
out
add
cvtps2pd
shr
jmp
adc
inc
neg
mov
jg
pop
(bad)
(bad)
lods
jg
imul
jg
test
sbb
mov
xchg
mov
rcl
inc
jl
add
or
hlt
mov
inc
dec
mov
or
pop
mov
in
push
jmp
sub
cmp
jmp
cmc
cmp
sahf
add
adc
loopne
or
inc
pop
neg
jecxz
ins
pop
pop
lds
sbb
scas
fidivr
adc
sbb
test
push
mov
add
fbstp
in
dec
repz
aas
ret
adc
xchg
frstor
jae
and
popaw
or
call
fwait
mov
dec
movs
ror
dec
in
pop
ror
fdivrp
gs
loope
test
mov
jns
xchg
ret
test
sbb
pop
ficomp
mov
push
adc
iret
inc
mov
or
and
inc
pop
fadd
outs
add
lods
mov
dec
mov
retf
sti
jnp
lods
jl
xor
neg
mov
(bad)
mov
mov
mov
shl
dec
sahf
jmp
push
fidivr
mov
fidiv
sub
mov
push
sbb
out
cmp
or
call
popa
sbb
into
inc
sti
jmp
xor
int
or
pushf
cmp
push
and
repnz
ins
es
out
mov
cmps
shl
out
idiv
adc
xchg
loop
push
inc
or
adc
and
mov
mov
pop
aaa
cmp
jp
ins
jl
out
nop
jl
sbb
ins
inc
stos
pop
cmp
hlt
inc
pushf
pop
fbstp
int
fs
aad
mov
je
shl
gs
mov
stos
inc
mov
and
adc
sub
or
and
inc
push
psubusw
retf
xchg
js
lea
xchg
movs
push
jnp
dec
in
inc
add
out
jg
not
jae
add
repz
fld
fadd
fwait
xor
daa
in
test
ret
jge
push
cmp
xor
cmp
lds
mov
cmp
into
mov
lock
mov
fiadd
xor
jbe
sbb
mov
mov
mov
cwde
xor
lock
or
stc
cmp
push
adc
hlt
ss
add
jae
scas
and
call
dec
shr
mov
xchg
xchg
cmp
inc
xchg
lds
test
sbb
jns
xchg
int3
outs
mov
cmp
repz
shr
icebp
mov
das
xor
cmp
and
(bad)
out
ins
sbb
ss
enter
inc
push
mov
shl
out
scas
xchg
xor
imul
inc
das
mov
out
mov
mov
inc
xor
test
add
lds
lods
fisttp
rcr
add
icebp
sub
sbb
(bad)
pop
lds
sti
add
push
inc
das
pop
dec
pop
mul
jge
lea
outs
inc
mov
outs
cmc
adc
jmp
adc
repnz
loop
mov
or
mov
hlt
push
out
add
loop
sub
sti
popa
or
sub
mov
iret
and
and
call
inc
cmp
mov
xchg
retf
adc
push
repnz
mov
int3
call
jp
pop
(bad)
pop
dec
push
test
stos
adc
adc
std
and
sbb
sub
jecxz
and
sbb
pop
adc
or
or
xchg
aas
(bad)
aaa
xor
(bad)
popa
xor
mov
xor
push
sbb
fdivr
jmp
pushf
push
clc
jmp
out
popf
daa
loopne
cmp
adc
frstor
ds
loop
dec
gs
and
(bad)
out
adc
xor
xchg
pop
(bad)
jnp
add
(bad)
fcom
shl
lods
mov
add
fsubr
pop
imul
push
xlat
cmps
sbb
adc
into
mov
clc
jl
or
popf
push
ss
push
jg
ret
stos
leave
add
xor
or
js
test
(bad)
xchg
jmp
push
lock
xor
adc
dec
pop
pop
out
or
and
ret
xor
jb
mov
pop
mov
stos
aas
nop/reserved
pop
cdq
add
jmp
(bad)
lds
mul
nop
or
pop
shl
lods
fcom
cwde
pushf
pop
adc
sbb
push
in
push
jae
dec
(bad)
xor
add
sub
imul
not
je
vpcmpeqb
or
pop
cmps
sahf
dec
das
inc
mov
jb
dec
push
int3
or
dec
dec
jmp
mov
mul
cmc
daa
mov
xchg
mov
pop
imul
inc
xchg
aad
push
cs
mov
pop
push
mov
stos
pusha
retf
sahf
cmp
and
mov
repz
sbb
sbb
mov
push
push
mov
cli
pop
or
mov
dec
shl
shl
push
inc
adc
aaa
inc
xor
adc
add
scas
repnz
dec
or
dec
sub
cmp
add
hlt
test
sub
das
sbb
adc
jo
sub
fmul
std
mov
stos
cmp
sub
sbb
aas
adc
scas
mov
movs
imul
xor
cli
retf
repz
out
jno
and
cmp
sti
xchg
sbb
iret
jle
adc
push
jle
pop
pop
adc
ins
mov
adc
in
mov
mov
mov
jg
jmp
mov
pop
mov
or
cmp
and
dec
iret
(bad)
or
ret
popa
loope
and
stc
adc
paddq
clc
in
call
in
xchg
icebp
mov
es
add
jge
cli
ins
dec
mov
xchg
push
imul
mov
into
push
fmul
aaa
xchg
lock
sbb
popf
jo
dec
cmps
test
and
mov
add
es
rcl
pop
imul
push
leave
mov
stos
fimul
popf
lods
mov
push
call
int3
xor
iret
inc
(bad)
outs
call
add
adc
out
xlat
xor
add
int3
lock
rcl
sub
fwait
outs
inc
add
addr16
sub
jmp
mov
out
cmps
test
imul
xor
in
mov
jo
sub
and
mov
jno
imul
add
push
xchg
int
(bad)
dec
add
(bad)
div
dec
mov
jo
xchg
mov
imul
test
in
outs
cmp
jno
jnp
cmps
imul
push
loope
push
jb
outs
repnz
sub
repz
in
jnp
push
and
call
mov
in
stos
repz
jno
cmp
pop
fdiv
lods
dec
imul
outs
int
lock
iret
and
mov
push
and
out
jb
mov
sahf
and
jbe
pop
shr
xor
sbb
loope
in
pop
pusha
add
out
push
test
lahf
lea
rcr
jp
jbe
(bad)
mul
(bad)
fwait
push
popa
mov
inc
xlat
loopne
out
adc
add
leave
jecxz
mov
lods
xor
in
int
or
fs
jns
or
push
sbb
dec
cli
push
or
bound
scas
jmp
adc
scas
cmc
xor
xor
int3
call
and
xor
jae
js
push
pop
ret
ins
ins
jno
test
outs
mov
mov
mov
adc
bound
mov
sub
test
xchg
cmp
mov
aam
pushf
test
call
sti
scas
xchg
popf
stos
les
adc
pop
shl
mov
(bad)
stos
push
inc
(bad)
aam
sub
sar
lods
xchg
iret
clc
retf
inc
fisub
and
std
jmp
dec
retf
xor
sbb
out
inc
jp
push
mov
les
jne
sbb
enter
imul
lods
loope
xchg
sbb
pop
jmp
mov
mov
xchg
xor
xchg
mov
xchg
push
daa
in
xor
jmp
fadd
inc
lods
push
test
xor
jg
ret
mov
inc
repnz
push
xor
test
in
inc
inc
mov
pop
(bad)
jae
aad
sbb
push
sub
cmps
mov
cmps
mov
nop
dec
push
cmps
gs
push
retf
cwde
sbb
in
mov
mov
cdq
nop
(bad)
mov
addr16
stos
pop
mov
lods
cmp
mov
aad
mov
mov
inc
cs
shl
jecxz
(bad)
jns
stc
xor
adc
mov
fsubr
dec
jmp
sub
xchg
mov
mov
xchg
dec
inc
imul
dec
out
fwait
cmp
xor
mov
addr16
cmc
gs
shr
pop
adc
mov
add
hlt
mov
(bad)
hlt
shl
sbb
xchg
ins
les
xor
add
mov
inc
cli
mov
movs
jecxz
and
push
pusha
imul
push
idiv
dec
xchg
in
retf
mov
cmps
retf
test
add
adc
out
xchg
add
imul
mov
inc
or
push
xor
retf
clc
push
sbb
or
jnp
scas
jb
adc
mov
sub
jle
inc
xchg
rcl
shr
fistp
pop
aam
jecxz
mov
cmp
mov
mov
jecxz
neg
add
adc
test
lea
dec
sbb
daa
ins
(bad)
mov
dec
adc
dec
ja
retf
repz
ret
add
pop
xacquire
fidiv
scas
dec
fwait
pushf
inc
les
lds
inc
lahf
jb
aas
or
call
cmps
aas
inc
inc
xchg
push
cwde
(bad)
sub
add
mov
arpl
retf
add
rcr
push
pop
mov
adc
cmps
cld
movs
xor
outs
add
aam
push
popa
and
mov
addr16
xor
hlt
retf
or
cmp
mov
sti
pop
clc
jnp
enter
fcomp
adc
ins
xor
push
jb
test
xchg
dec
sub
adc
mov
rcr
sahf
push
inc
mov
xchg
(bad)
jns
dec
test
sahf
paddb
or
adc
mov
sbb
iret
dec
cwde
mov
movs
or
adc
retf
aam
sbb
inc
mov
out
xor
push
dec
std
mov
push
outs
or
mov
pop
xchg
xchg
pop
push
inc
mov
fxch
pop
popf
mov
xor
xor
jmp
mov
push
or
mov
cmps
mov
pop
sbb
fsubr
push
mov
add
inc
mov
mov
aaa
pop
retf
rol
addr16
inc
cmp
lock
pop
fs
loop
xchg
jmp
sub
jg
stos
popa
inc
xchg
mov
test
(bad)
ds
mov
push
nop
movs
popa
sub
in
ficomp
xor
and
cwde
pop
sar
sub
jge
call
jmp
mov
scas
faddp
js
push
aad
sub
dec
cs
lods
int3
mov
inc
mov
(bad)
int3
les
jmp
fmul
outs
sub
mov
out
repz
dec
add
push
pop
mov
and
jns
loop
jo
mov
xor
jmp
sti
xchg
js
sbb
mov
int3
clc
pop
pushf
xlat
cmp
xor
jp
mov
sbb
mov
lods
outs
inc
dec
xor
pop
enter
call
push
fwait
push
les
jl
mov
mov
lock
mov
push
push
and
out
fild
dec
push
(bad)
mov
push
inc
fld
(bad)
(bad)
mov
jle
(bad)
ss
xor
xor
pop
aam
cli
aaa
mov
les
popf
add
mov
cdq
in
xchg
adc
push
adc
inc
push
out
icebp
movs
sbb
mov
mov
mov
xchg
loope
repnz
inc
xor
or
gs
mov
lea
cwde
sub
or
lods
xchg
arpl
fcomip
jno
xor
ss
mov
inc
mov
xor
add
adc
or
(bad)
aad
push
das
mov
mov
ds
aad
(bad)
dec
in
push
test
push
scas
test
ss
mov
mov
test
jmp
stos
adc
xor
loop
sub
xchg
push
dec
mov
(bad)
mov
and
ror
sbb
neg
scas
sbb
test
(bad)
cdq
inc
das
rol
data16
aam
xchg
or
aam
ins
fdivr
add
sub
aaa
or
add
pop
scas
fsubr
mov
jno
dec
in
std
test
xchg
ss
xchg
pop
dec
hlt
or
inc
pop
loopne
test
int
sti
add
mov
pop
and
hlt
inc
enter
xchg
and
into
push
cdq
repnz
xchg
lea
jg
xchg
movs
push
push
cli
cmp
rol
cmp
fdiv
and
push
jmp
sbb
repz
test
cmps
mov
movs
in
xchg
out
jmp
and
add
inc
xor
stos
inc
std
cmp
and
pop
xor
(bad)
(bad)
mov
mov
not
dec
(bad)
movs
arpl
or
mov
dec
dec
popf
mov
adc
push
leavew
lock
not
hlt
nop
cmp
es
pushf
lds
mov
xor
pop
pop
popa
lods
(bad)
sbb
icebp
addr16
mov
mov
scas
cld
xor
icebp
stos
test
mov
test
pusha
retf
xchg
mov
cdq
adc
xor
ss
jmp
mov
mov
mov
push
mov
mov
dec
cmp
mov
cmps
adc
stc
sbb
out
or
out
dec
enter
loope
jge
and
out
in
dec
outs
out
nop
loop
xor
popa
cmp
pop
push
sub
dec
or
fs
inc
and
mov
std
pusha
cdq
fsub
cdq
pop
imul
das
mov
test
(bad)
retf
les
sar
dec
cld
sub
movs
stos
jnp
cdq
neg
adc
jecxz
dec
xchg
pop
add
xor
leave
fistp
push
fbstp
test
push
ins
mov
rcr
sub
loope
xor
mov
mov
add
das
and
add
int
jle
jae
jp
mov
and
in
mul
dec
jo
outs
jl
aam
pop
adc
sbb
mov
mov
stc
mov
mov
inc
pop
arpl
cmp
mov
imul
or
addr16
xor
loopne
sub
jge
jno
sti
lea
ja
cmp
xor
dec
out
sbb
add
call
ret
xchg
sub
mov
(bad)
jb
test
inc
ror
add
mov
sub
xchg
repz
cmp
sti
(bad)
stc
adc
sbb
pusha
mov
outs
sti
inc
xchg
ficomp
cs
adc
pop
stos
push
jp
mov
pusha
add
mov
(bad)
scas
movs
sbb
mov
icebp
mov
pop
mov
jae
out
adc
fidiv
dec
mov
scas
mov
mov
out
and
add
mov
cmp
sub
rol
mov
rol
mov
sub
fcom
or
jne
adc
push
fst
ds
inc
xor
inc
retf
push
imul
pop
pop
push
scas
dec
push
int3
(bad)
ror
push
or
cmp
test
imul
imul
or
(bad)
loopne
and
call
or
mov
neg
in
jp
pop
out
or
ss
and
in
adc
xlat
cmp
pop
mov
mov
out
fxch
cmp
out
push
xor
xchg
idiv
repz
daa
push
push
mov
(bad)
mov
jle
inc
or
hlt
dec
mov
add
mov
sbb
xchg
adc
not
sbb
fnstsw
lahf
add
aam
nop
jmp
push
and
lahf
inc
mov
mov
mov
cmp
mov
in
retf
jo
add
mov
lock
cmp
(bad)
ja
ror
lock
mov
adc
or
or
xor
xchg
retf
out
cmp
inc
mov
dec
inc
aaa
pop
xchg
dec
mov
xlat
jmp
inc
push
dec
xchg
and
daa
out
xchg
mov
xchg
mov
out
add
pop
inc
jae
push
call
jne
jb
mov
dec
fwait
lahf
xor
imul
ror
mov
jno
std
mov
add
scas
mov
retf
fcom
cmp
mov
xor
sub
mov
neg
adc
xlat
out
pop
cs
das
hlt
jl
mov
mov
pop
and
test
or
out
sbb
xchg
mov
repz
jg
lock
mov
sub
pop
stos
sub
gs
dec
pop
daa
adc
cmp
mov
xor
scas
push
test
les
outs
sub
pop
or
dec
lods
iret
add
pop
sti
add
or
out
fs
popf
xchg
rcr
test
push
add
fisubr
xor
into
mov
mov
aaa
ja
je
lock
cdq
repz
push
dec
loopne
push
aad
and
stos
add
dec
popa
push
icebp
cdq
sub
test
out
or
aaa
inc
retf
les
cmps
jl
pop
and
jb
sbb
cld
popa
out
retf
sub
daa
inc
jmp
jns
jae
aad
das
ficomp
add
mov
(bad)
xor
jmp
jge
test
test
mov
(bad)
pop
mov
xchg
cmp
mov
addr16
sahf
stc
fcmovnbe
cwde
push
adc
fs
(bad)
rcr
(bad)
cmps
not
ins
pop
mov
push
repnz
pop
dec
sbb
cmp
and
rcl
das
inc
ds
or
push
das
lods
adc
adc
shl
lods
out
shl
mov
pop
mov
daa
mov
mov
pop
and
nop
pop
xchg
jns
frstor
add
bound
mov
mov
rcr
push
out
or
retf
xchg
pop
test
cwde
jmp
mov
es
mov
ins
or
sbb
sbb
sub
push
sbb
dec
sub
cmps
inc
ret
jo
loope
xchg
jg
mov
scas
aad
or
xor
cmp
cmps
jbe
fwait
jnp
mov
ss
aam
sbb
mov
cmc
(bad)
cmps
jmp
jle
daa
sbb
test
add
div
sahf
xchg
sub
sti
ds
add
popf
fistp
ss
mov
retf
mov
mov
in
jmp
dec
(bad)
mov
jae
jo
fidivr
fbld
mov
dec
xchg
adc
movs
xor
xlat
add
stc
scas
and
lea
jmp
pop
xchg
jmp
or
mov
lds
shl
cmp
mov
xor
pop
sub
jge
in
pop
xchg
test
into
xor
pop
or
sub
test
push
adc
xor
lds
out
jge
clc
sub
stc
not
mov
into
mov
shl
nop
inc
fbstp
add
or
loope
xor
sbb
cmp
or
loop
push
fild
bound
xchg
mov
dec
test
ins
in
jo
pop
sahf
adc
inc
retf
pop
aad
test
cmp
les
imul
pop
pop
jne
sbb
push
add
jle
dec
ds
and
dec
xchg
mov
call
pop
add
cmp
hlt
jmp
jmp
jl
daa
outs
test
sbb
mov
mov
(bad)
in
cmp
shl
in
rcr
fidiv
in
cmps
int
fs
(bad)
ret
add
aad
popf
push
call
add
adc
movs
jmp
das
mov
shr
or
loop
mov
xor
sub
les
imul
hlt
pop
es
outs
les
stos
(bad)
imul
xchg
ja
cmc
xchg
push
jb
inc
inc
push
outs
sbb
adc
dec
call
shl
and
adc
push
inc
shr
cwde
jl
mov
(bad)
sub
and
in
xchg
gs
push
mov
aas
mov
add
xchg
into
and
jecxz
cld
add
xor
sbb
and
add
mov
mov
sbb
jg
int3
add
fiadd
cmp
stos
mov
sub
mov
dec
mov
xchg
(bad)
out
and
jnp
data16
in
imul
push
cli
push
call
lds
mov
mov
jmp
dec
and
loopne
push
mov
dec
imul
scas
sbb
inc
fwait
push
cmp
add
(bad)
fdivr
mov
push
(bad)
rol
lock
jmp
loop
mov
iret
and
scas
fs
push
fwait
shr
jmp
jne
psllw
sub
cmp
jae
mov
sar
not
sub
test
pop
rcr
ins
shl
pop
xor
pop
ins
cli
sub
mov
push
int3
in
mov
addr16
in
xchg
dec
xchg
mov
jl
adc
pop
push
sbb
mov
lock
jno
inc
ds
cwde
pop
cmps
outs
push
and
cmp
lahf
daa
fs
mov
mov
stos
or
out
test
adc
inc
fild
stos
and
adc
out
ss
test
scas
xchg
and
pop
cdq
int3
inc
lock
inc
dec
pop
jge
test
js
stos
or
(bad)
cmp
push
inc
xchg
cld
jmp
jnp
dec
mov
and
pop
jo
jge
mov
pushf
fisttp
mov
stos
push
ja
lea
cmp
ja
mov
and
and
dec
adc
sti
sbb
test
pop
mov
adc
sar
push
outs
push
imul
adc
clc
out
adc
or
and
and
mov
cwde
lds
ret
add
cwde
out
xchg
(bad)
jle
imul
jbe
mov
push
imul
mov
jecxz
mov
in
pushf
scas
rcl
das
pop
in
int3
cli
aas
inc
jns
out
les
in
imul
add
or
jmp
ds
jno
outs
push
daa
pop
mov
and
int3
and
scas
jb
and
out
imul
mov
shr
retf
jecxz
rol
xchg
push
inc
ds
sti
imul
lods
xor
inc
xchg
in
and
in
into
pop
cmp
mov
sub
dec
mov
adc
push
add
call
fist
pop
aas
fisub
imul
scas
or
push
mov
sti
enter
dec
push
mov
sbb
xchg
pop
push
js
ret
movs
dec
adc
xchg
sbb
or
pop
daa
rol
pop
pop
shl
je
rcr
lds
rcr
mov
and
aaa
mov
cmp
sbb
ret
(bad)
push
inc
sub
iret
loop
dec
pop
dec
shl
das
sub
jb
daa
je
add
mov
nop
mov
mov
pop
push
jne
ja
arpl
and
xlat
push
ret
adc
inc
adc
and
sub
xor
sub
pop
push
cli
je
lea
in
inc
js
(bad)
add
adc
mov
loop
xor
repz
sbb
push
push
ret
xor
dec
sub
mov
push
sub
cld
sbb
sbb
xor
sbb
aad
jmp
je
lock
or
xchg
test
xchg
dec
adc
sti
call
cmp
ror
loopne
mov
mov
out
or
jno
inc
mov
in
retf
dec
mov
stc
inc
repz
xchg
dec
ss
lock
(bad)
jecxz
iret
mov
into
imul
fldenv
and
out
call
cmp
repz
leave
ret
push
(bad)
sbb
push
mov
outs
ror
scas
cmp
(bad)
dec
jp
ret
mov
xor
iret
or
pusha
imul
int
paddsw
ror
add
jle
and
repz
test
in
cmp
(bad)
sub
pop
das
into
cli
pop
pop
jne
mov
bound
mov
ds
xchg
mov
xor
mov
xchg
dec
mov
pop
or
xor
jmp
jne
lods
jno
popa
aaa
inc
mov
xor
cwde
sar
and
sbb
stos
aam
aas
pop
mov
inc
add
aas
and
and
xlat
jns
je
push
xchg
mov
inc
sbb
mov
clc
imul
mov
and
outs
fidivr
sub
repz
adc
mov
das
iret
test
xor
jmp
cmp
add
ret
cmps
fld
cmp
lahf
pop
fbld
sar
mov
cmc
and
dec
cmp
psubb
xor
aad
ins
xchg
or
mov
jle
bnd
mov
push
push
cdq
push
fcmove
data16
es
lods
push
(bad)
mov
xlat
cld
(bad)
je
fidivr
out
jecxz
mov
or
dec
add
push
adc
in
aaa
stc
sub
scas
pusha
mov
ja
aad
ds
and
or
xor
inc
dec
jns
bound
bound
aas
pop
test
inc
or
xor
xchg
test
jl
mov
mov
jbe
iret
dec
clc
imul
mov
pop
pop
mov
mov
dec
fild
or
jge
sbb
jle
mov
xor
mov
push
mov
add
pushf
sbb
jle
nop
cmp
loopne
cmp
sbb
or
pusha
es
xchg
shl
sbb
js
scas
sub
cmp
push
imul
or
mov
in
enter
mov
call
jp
pop
cmp
or
jmp
push
mov
in
imul
in
outs
mov
jmp
sub
loope
sub
out
mov
or
dec
(bad)
pop
pop
or
jp
jmp
retf
popf
lock
(bad)
(bad)
pop
or
mov
das
jne
push
in
jg
rol
xchg
cli
stos
add
enter
mov
xchg
shr
sub
test
repz
cmc
mov
jmp
dec
mov
addr16
adc
inc
sbb
pop
push
inc
sub
dec
sub
push
lea
ror
into
aaa
js
add
int
sbb
xchg
pushf
inc
ss
adc
or
mov
sub
retf
sti
push
adc
into
xchg
call
in
xlat
inc
adc
and
xchg
cmps
mov
jl
sub
and
xchg
dec
sub
mov
xor
pop
clc
dec
sbb
push
fisttp
movs
dec
mov
push
data16
outs
sahf
mov
cmp
pop
pop
add
mov
sub
sar
jge
xor
shr
ror
outs
fidiv
mov
adc
mov
and
ins
arpl
mov
xor
fld
inc
push
es
lods
jne
(bad)
mov
bound
jb
ud2
push
gs
mov
sbb
stos
mov
(bad)
rol
dec
add
sbb
sbb
jae
inc
add
shl
cli
add
jnp
mov
popa
push
addr16
ret
cmc
xchg
hlt
jb
cmc
ret
cmps
and
inc
retf
sub
adc
mov
sub
lahf
cmp
cmp
sub
bnd
push
push
shl
cmps
sub
in
cmp
push
test
and
push
push
or
scas
and
pusha
sub
daa
into
aad
push
xchg
sbb
cmp
ds
jecxz
rcl
mov
neg
mov
adc
movs
mov
stc
adc
(bad)
or
lds
into
sbb
jmp
push
xor
outs
and
outs
mov
pop
push
sbb
inc
mov
adc
ins
jnp
sub
inc
push
adc
ret
xchg
sahf
fcmovnbe
leave
loopne
pusha
pop
mov
mov
jbe
shl
dec
mov
cmp
pop
mov
inc
stos
ror
jb
cmp
add
adc
clc
cmp
repnz
repz
cwde
cmps
mov
push
adc
int3
ret
pop
cmps
sar
add
and
mov
(bad)
(bad)
sbb
cdq
(bad)
xor
xchg
mov
cmp
jbe
xchg
(bad)
out
jbe
add
jo
inc
arpl
or
push
add
inc
mov
jg
fwait
ja
dec
test
push
lahf
pop
pusha
dec
dec
push
xchg
jecxz
addr16
out
cmc
std
dec
test
aam
pop
mov
inc
inc
cmps
pop
scas
pushf
jmp
push
loope
mov
push
jb
push
sahf
(bad)
mov
iret
shrd
retf
fs
aad
add
and
sub
(bad)
aaa
test
inc
daa
cmp
mov
(bad)
mov
mov
jbe
ror
popa
xchg
shl
ret
loopne
or
pop
sub
mov
ja
add
lock
mov
sub
push
inc
cmp
mov
jmp
scas
ja
xor
fwait
sub
push
cmps
(bad)
movs
jmp
ins
call
sub
pushf
pushf
and
xchg
icebp
jne
jmp
sti
mov
jae
xlat
repz
aaa
mov
sub
cmp
retf
inc
jnp
sub
or
out
ret
out
mov
pop
add
das
add
cmp
pop
gs
fistp
pop
scas
xlat
les
shl
lea
cmp
add
leave
add
ror
jp
test
test
xor
inc
stos
push
sub
dec
aad
ins
add
pop
cmp
pop
mov
fs
push
inc
mov
sbb
sahf
or
sbb
fadd
dec
sbb
jmp
inc
sbb
cmp
lods
fidivr
sbb
add
xlat
dec
mov
(bad)
fdivr
sbb
xlat
xor
cmp
add
ss
mov
ins
je
mov
popfw
sbb
nop
inc
sahf
out
push
pop
adc
(bad)
add
dec
inc
mov
push
push
sahf
lock
push
ret
ret
sar
mov
and
in
add
arpl
push
aas
push
xchg
sbb
pop
sbb
pop
cld
mov
test
xchg
dec
pop
pop
sub
xlat
mov
adc
xor
outs
push
inc
lock
inc
(bad)
(bad)
outs
jge
jg
pop
dec
out
cmp
jns
mov
cmp
gs
call
adc
das
(bad)
mov
aad
cmp
in
(bad)
out
jo
jo
mov
mov
and
mov
retf
mov
jmp
jp
idiv
and
mov
repz
or
(bad)
aas
nop
fdivr
(bad)
xlat
and
sub
adc
or
sbb
xchg
les
mov
call
pop
hlt
aam
addr16
jge
popf
fwait
(bad)
mov
jo
sahf
out
xor
cmp
push
(bad)
leave
jae
mov
xchg
arpl
loopne
xor
dec
test
div
adc
mov
stos
test
jbe
(bad)
mov
push
pop
adc
test
loope
push
cmp
cmp
push
mov
xor
ror
movs
inc
call
retf
int3
mov
test
pop
in
inc
mov
sbb
add
lea
adc
ficom
fcom
inc
inc
mov
retf
dec
push
dec
div
retf
in
add
xchg
inc
test
dec
jbe
mov
xchg
xor
xchg
mov
lds
fwait
cmp
sbb
fwait
and
pusha
pop
jmp
push
call
mov
test
xchg
xor
test
adc
enter
std
int
inc
sub
sar
and
mov
scas
sti
in
aaa
leave
scas
jno
inc
lahf
movs
idiv
dec
clc
into
div
js
mov
and
mov
ins
mov
hlt
fist
test
push
or
sub
cmp
test
sti
scas
xchg
mov
mov
xchg
dec
adc
cld
or
cli
jl
or
aas
push
push
mov
adc
fsubr
mov
xor
scas
sti
pop
jb
imul
mov
sahf
add
jne
out
xchg
aas
arpl
ins
mov
mov
iret
dec
fs
popa
or
jmp
pop
push
sbb
xor
xchg
(bad)
(bad)
scas
loope
sti
pusha
jecxz
arpl
mov
pop
xor
xchg
into
pop
ins
pop
in
retf
cmc
sbb
push
loop
pop
mov
push
aad
js
fwait
push
test
mov
out
gs
out
sbb
pop
test
inc
push
aaa
test
jl
repnz
int
lock
cmp
mov
loopne
(bad)
in
cdq
cs
sub
mov
and
inc
js
(bad)
fsub
sar
push
int
push
scas
rcr
arpl
ins
je
pushf
push
adc
xor
mov
xchg
jnp
aam
sti
mov
inc
test
xchg
pop
dec
addr16
nop
add
(bad)
jmp
push
stos
dec
or
leave
cmp
out
mov
and
outs
fbstp
mov
push
clc
or
sbb
push
popf
mov
dec
dec
fild
enter
neg
or
out
sub
jne
mov
repz
enter
jmp
cmp
lods
iret
dec
retf
push
fdivrp
adc
add
pop
mov
cmp
rol
aad
mov
mov
dec
daa
pop
inc
pop
jmp
cmps
sub
fisttp
pop
fucomi
ins
out
icebp
retf
je
xchg
xor
(bad)
fst
adc
inc
arpl
cmp
xor
out
adc
and
add
sti
aas
fidivr
fdiv
mov
std
xchg
out
xchg
ror
jo
std
data16
mov
xor
add
sbb
iret
popf
cmp
mov
enter
addr16
(bad)
(bad)
out
daa
mov
arpl
push
jo
aaa
fwait
js
mov
inc
mov
mov
lea
cdq
dec
push
dec
(bad)
mov
cmp
fs
or
fwait
sbb
retf
mov
ds
mov
int
stos
imul
jecxz
jmp
or
mov
movs
into
cmp
sub
test
ret
ror
mov
inc
int
out
shl
adc
xchg
inc
dec
jge
xchg
jmp
enter
in
movs
xchg
xchg
adc
inc
outs
cmp
xchg
pop
daa
outs
pop
test
and
adc
mov
fbstp
pop
or
bound
(bad)
neg
mov
sbb
loop
aas
push
pop
retf
icebp
enter
adc
add
clc
add
xor
xor
cmp
cwde
stc
push
push
sub
sbb
and
pop
xchg
inc
mov
enter
xchg
int
add
in
popf
mov
test
xlat
dec
add
jmp
lock
call
shl
add
pop
cmp
loope
dec
ds
jae
fst
mov
pop
ds
inc
fwait
vpsllq
daa
pop
pop
rol
(bad)
push
nop
cmp
rcr
push
jle
in
fcomp
rol
mov
jne
jg
adc
mov
pop
jns
xor
fbld
cdq
push
clc
int3
dec
aam
ror
lods
test
ret
mov
mov
dec
in
sbb
jge
and
and
mov
mov
pop
rol
jge
std
sub
inc
mov
aaa
pop
pop
pop
pop
mov
test
pop
stos
xchg
popa
enter
aam
cmp
xlat
movs
fbstp
sbb
xor
mov
push
(bad)
lahf
outs
in
mov
sbb
inc
data16
adc
and
jecxz
mov
xor
jge
popf
icebp
mov
mov
sub
imul
rcr
sbb
mov
mov
or
lods
ror
pop
cmp
and
aaa
xlat
inc
jge
push
enter
push
inc
mov
in
and
out
xor
xchg
or
xchg
mov
xchg
pushf
jb
pause
jge
xchg
jb
mov
or
pop
sbb
scas
imul
or
and
and
(bad)
jmp
ret
popf
or
or
mov
shr
mov
stc
mov
out
mov
adc
adc
test
cs
test
(bad)
jp
jle
stos
adc
(bad)
sti
xchg
and
mov
repnz
loopne
sbb
jmp
sub
icebp
retf
das
pop
sti
mov
fldcw
mov
ret
or
mov
cmp
outs
sub
cwde
neg
adc
mov
push
das
xor
pop
lock
mov
loopne
mov
sbb
popf
jg
adc
mov
fidivr
xchg
gs
shl
rcr
sbb
mov
mov
shr
test
push
sbb
mov
icebp
mov
mov
and
pop
jmp
repnz
sub
lea
clc
in
movs
test
push
test
dec
adc
sbb
sub
jne
rcl
mov
or
cli
and
jnp
dec
push
loop
dec
mov
arpl
jl
(bad)
or
loop
jne
or
cmps
cwde
dec
addr16
fidiv
lea
icebp
dec
mov
ds
(bad)
stos
retf
scas
xor
mov
lock
jecxz
push
sbb
push
mov
add
call
cmp
jle
ror
mov
dec
jo
push
sbb
sbb
push
xor
mov
inc
sub
pop
mov
pop
dec
clc
ficom
mov
xchg
sub
leave
out
adc
shl
cmp
or
popf
lods
mov
(bad)
jmp
jae
outs
ret
ss
inc
lods
std
mov
pop
inc
stos
or
popf
test
xor
outs
pop
in
xchg
cmps
iret
mov
cmc
or
movzx
xchg
fmul
pop
outs
out
cli
jp
mov
pop
dec
xchg
push
add
rcl
fwait
rcl
int3
stos
je
pop
(bad)
test
pop
jp
jecxz
imul
scas
cmps
jns
movs
jne
mov
outs
(bad)
pop
and
popa
sub
mov
xor
inc
push
ror
test
imul
std
jp
mov
lods
data16
push
adc
push
add
fs
fwait
or
pushf
sub
push
test
sbb
gs
(bad)
out
xor
cld
xor
inc
push
push
jb
out
das
in
wrmsr
and
inc
and
xlat
leave
(bad)
dec
inc
sbb
aad
push
pop
sahf
adc
mov
iret
scas
cmps
movs
cmp
scas
push
lahf
dec
data16
(bad)
shl
push
cld
cli
push
sar
mov
daa
das
sbb
pushf
je
call
push
(bad)
in
hlt
cli
mov
es
jns
cwde
and
sti
stc
sbb
jl
mov
int3
ret
fsubr
sbb
les
out
cmp
ins
sbb
ja
loope
out
mov
(bad)
sub
jmp
cld
or
data16
push
fs
stos
pop
loopne
cmps
loopne
out
jmp
lods
rcr
mov
xchg
pop
mov
push
pop
out
xchg
jne
dec
ds
cld
icebp
or
and
fidiv
sbb
rol
out
mov
sbb
dec
stos
push
ss
in
cmp
push
mov
aad
test
push
fs
outs
jbe
sub
push
neg
cmp
or
and
sbb
fidiv
pushf
jns
enter
lea
es
fidiv
std
in
cmp
cdq
mov
adc
dec
mov
dec
cmp
or
sbb
out
jge
sbb
pop
out
push
aam
repnz
jae
out
xor
cmps
cmc
xor
sub
jb
mov
dec
test
or
and
rcl
(bad)
out
rcr
js
xchg
adc
and
enter
movs
cli
mov
dec
clc
fadd
xchg
(bad)
fmul
pop
scas
iret
(bad)
cmc
push
mov
int3
(bad)
aas
ror
mov
pop
cdq
add
lock
and
mov
mov
ins
rol
cmp
call
shl
popf
push
mov
sar
mov
push
imul
rol
pop
and
and
je
adc
arpl
shl
lea
pop
fwait
imul
and
or
jle
adc
pop
daa
out
mov
jo
adc
pusha
or
fist
jb
test
call
loope
ror
jge
call
xor
push
adc
imul
add
cmp
outs
or
pop
popf
xor
or
sbb
pop
mov
push
dec
lahf
or
dec
adc
sbb
pop
xchg
(bad)
mov
mov
xchg
push
xchg
sub
jge
shl
into
dec
or
jb
jge
into
sub
nop
scas
cmp
cli
and
xor
or
std
cmps
xchg
loope
(bad)
(bad)
add
pop
or
pusha
fs
xchg
fidiv
mov
outs
jg
lahf
jne
shl
add
and
addr16
fimul
inc
fadd
imul
jmp
inc
jnp
stos
lods
loopne
leave
push
aas
(bad)
fdiv
aad
ss
xchg
cmp
adc
aad
(bad)
ud0
push
cmp
and
adc
and
push
(bad)
jg
test
loopne
add
pop
cdq
aad
inc
gs
loopne
ss
stos
mov
xchg
or
push
outs
add
xor
stos
ss
(bad)
sbb
clc
inc
inc
arpl
mov
dec
stc
ins
and
test
sub
cmp
mov
and
mov
dec
mov
sub
cwde
je
sbb
pop
sub
iret
call
and
test
fidiv
xchg
out
fcom
ins
sub
mov
cld
adc
out
jb
iret
sti
outs
ror
rcl
xor
mov
pushf
or
out
mov
push
loopne
pop
adc
leave
test
push
push
push
in
cmps
inc
mov
xor
adc
or
(bad)
sub
fstp
dec
cli
jne
or
lods
mov
bound
ds
call
retf
xchg
lahf
scas
shl
mov
outs
aad
pop
cs
fnstsw
aas
mov
(bad)
push
xchg
jbe
fcomp
pop
call
jns
cmp
movs
loop
pop
fs
sub
sub
hlt
or
xchg
mov
(bad)
inc
adc
mov
stos
lock
les
cld
inc
jp
test
fucomp
nop
fadd
jle
and
pop
loopne
fs
and
mov
outs
mov
ins
fisub
sahf
cmp
ins
sub
imul
fwait
retf
mov
add
jmp
xor
cmc
data16
into
lods
sub
fisubr
std
enter
inc
rcl
pop
pushf
mov
stc
and
jo
fisttp
imul
xor
das
pop
cwde
nop
lea
scas
pusha
aad
inc
aas
mov
mov
int3
mov
xchg
mov
xchg
(bad)
mov
(bad)
cmps
popf
out
icebp
adc
push
call
inc
or
fwait
cwde
loope
pop
ror
shl
xor
ins
fistp
mov
xchg
push
dec
inc
xchg
mov
xor
xchg
xchg
test
dec
ja
(bad)
idiv
lods
std
push
pop
dec
out
mov
(bad)
mov
in
pusha
mov
sub
sbb
push
mov
pop
fdiv
push
fcmovnbe
nop
nop
out
mov
in
jns
xchg
shl
dec
or
pop
fwait
bound
jo
popf
inc
and
inc
shr
(bad)
cmp
(bad)
in
int
pop
arpl
stos
mov
iret
sbb
sbb
repnz
jmp
rcl
fidivr
les
mov
cmps
sbb
lock
pop
jp
xchg
in
and
cmc
sub
movs
mov
mov
ja
jb
ds
test
jmp
and
mov
mov
shr
hlt
pop
nop
sbb
es
scas
loope
inc
adc
data16
sub
push
bound
cwde
shr
(bad)
rcl
or
mov
cmps
add
scas
add
out
in
dec
xchg
scas
jne
inc
xor
inc
das
ret
les
ja
jbe
fsub
repnz
pop
and
test
mov
cli
lock
es
inc
mov
imul
cmp
push
lahf
sub
stc
test
mov
xchg
arpl
nop
sbb
jne
mov
adc
mov
cmc
je
inc
push
(bad)
sub
sar
int3
fwait
push
adc
call
mov
in
mov
add
mov
add
add
cmp
sbb
cmp
mov
add
sbb
pushf
cmps
xor
out
jp
sbb
scas
jmp
push
lods
mov
out
sub
stos
mov
call
int
retf
xor
(bad)
cli
dec
sar
sub
mov
adc
ss
mov
dec
and
call
dec
jne
les
test
push
pop
mov
cmp
sar
clc
mov
lock
stos
xchg
and
sub
pop
jae
or
dec
sbb
out
adc
(bad)
(bad)
clc
inc
(bad)
fs
cmps
inc
jnp
lock
stos
jnp
(bad)
loope
test
add
cmc
mov
and
sbb
xor
retf
lods
mov
leave
in
xchg
push
scas
and
out
xor
pop
cli
push
push
pop
out
jns
imul
sub
jecxz
sub
push
sahf
dec
push
jbe
lahf
mov
into
pop
pop
mov
adc
push
push
inc
fsubp
xor
xchg
out
adc
add
out
lods
sar
jmp
sub
fldcw
cld
es
loop
test
jle
push
repz
jb
sub
sbb
std
push
hlt
pop
push
xor
lods
push
inc
xchg
pop
jnp
loopne
inc
cmc
sbb
xchg
int
loopne
dec
sti
mov
pop
push
or
push
test
repnz
into
neg
sbb
(bad)
enter
fistp
pop
std
xlat
popa
jbe
in
xchg
inc
xchg
(bad)
push
and
cmp
out
out
pop
hlt
arpl
adc
shr
jp
jmp
ret
stc
sub
dec
fsub
pop
enter
jno
stc
cmc
mov
(bad)
adc
push
push
xchg
dec
das
call
cmp
jecxz
movs
(bad)
push
mov
repnz
sub
in
out
sbb
jg
imul
outs
imul
ror
push
xchg
jnp
mov
lds
loop
push
push
xchg
add
ret
mov
mov
int
dec
jle
pop
xchg
jmp
stc
jmp
mov
retf
repz
lods
out
dec
pop
add
pop
xor
sub
and
push
pop
inc
adc
(bad)
mov
in
push
sbb
pusha
adc
pop
jecxz
(bad)
jo
pusha
shl
mov
pop
mov
add
xchg
lock
lds
push
test
mov
add
pop
lods
push
xchg
cs
lahf
das
dec
pop
ins
fsubr
xor
inc
cmp
loopne
daa
lods
rcl
test
sub
je
dec
hlt
dec
sub
jns
retf
scas
es
test
mov
push
push
pop
inc
inc
add
(bad)
sbb
loopne
mov
push
mov
ret
or
sbb
in
cmp
push
xor
retf
xchg
pop
jne
ins
xor
pusha
and
dec
xchg
outs
ficomp
mov
int
ret
xchg
pop
jmp
and
(bad)
rcl
mov
cld
sub
add
gs
scas
xor
jp
mov
sbb
adc
or
int
push
mov
cwde
sahf
sbb
add
push
jne
hlt
adc
imul
push
push
retf
cmp
xor
leave
sar
scas
hlt
(bad)
js
movs
mov
pop
cmp
scas
inc
inc
push
inc
mov
dec
push
adc
mov
out
sahf
cmp
idiv
or
push
out
cmp
les
jecxz
pop
xchg
jnp
dec
pop
and
(bad)
and
nop
pop
mov
pop
push
xor
movs
cmps
fbstp
lds
jge
sub
adc
int
ret
add
jmp
(bad)
add
test
nop
scas
jp
cwde
in
je
add
loop
xlat
shr
mov
movs
pop
ret
inc
les
aas
call
loopne
add
fdiv
push
add
adc
pop
shl
and
mov
adc
adc
push
es
or
and
mov
xchg
inc
cmc
push
idiv
fadd
xchg
inc
mov
and
or
and
jo
mov
or
or
lds
int
int
test
retf
jbe
hlt
dec
ror
sbb
mov
mov
in
dec
ret
pop
pushf
adc
mov
mov
cs
sub
sub
pop
dec
mov
lods
jl
xchg
lods
in
xchg
jp
in
inc
cmc
sar
call
in
cmp
or
ss
fstp
add
xchg
test
pop
dec
in
aaa
jle
sub
pop
mov
cmpnleps
mov
xchg
mov
mov
and
pop
mov
into
mov
mov
mov
ds
test
mov
repnz
sti
mov
inc
bound
dec
fist
out
not
add
movs
cmps
lods
xchg
stos
push
aam
jns
sar
dec
cmp
loop
add
mov
in
fs
xchg
and
fdivr
mov
add
mov
xor
arpl
std
mov
in
sub
or
into
je
repz
inc
cmp
or
mov
push
(bad)
mov
or
jge
pushf
lock
mov
inc
in
rcr
jg
(bad)
dec
sub
lods
xchg
cmp
xor
jle
xchg
jl
mov
test
aam
ins
and
push
ror
ror
sub
std
mov
sbb
std
push
fwait
scas
jmp
dec
pop
mov
sub
idiv
mov
js
cld
ud1
stc
fwait
mov
test
ds
sar
pop
(bad)
addr16
xor
jnp
mov
xchg
cmp
sar
cmp
push
xchg
fmul
jp
or
xchg
and
das
ret
call
and
movs
loopne
dec
cmp
adc
pushf
xor
or
dec
fbstp
add
shl
xchg
(bad)
pusha
mov
mov
sub
adc
(bad)
cli
stc
jecxz
loope
mov
dec
add
adc
push
xor
mov
adc
imul
xchg
or
mov
mov
inc
jne
and
fsubp
cmp
(bad)
and
or
dec
addr16
push
sbb
adc
xchg
push
xor
dec
and
addr16
into
std
ret
aaa
sbb
push
or
xor
leave
mov
mov
dec
push
fidivr
cmp
iret
add
and
pop
sub
cli
(bad)
mul
mov
int3
xor
or
ins
jbe
or
into
xchg
inc
xchg
call
(bad)
ds
je
not
or
cwde
mov
test
mov
clc
aas
ds
push
add
cmps
out
mov
push
fist
mul
sbb
retf
les
mov
mov
push
ja
mov
mov
mov
add
pushf
dec
retf
pushf
mov
std
xor
cdq
test
jbe
stos
adc
lds
bound
cmp
xchg
jge
mov
fld
shl
fdivr
sub
xchg
adc
fcmovnb
mov
test
pusha
(bad)
cmps
pop
stos
int
nop
into
or
scas
iret
push
add
mov
or
xchg
pushf
in
jmp
fist
or
add
call
pop
xchg
and
push
gs
jmp
stos
(bad)
fs
mov
xchg
inc
test
pushf
sbb
outs
mov
test
push
fsubr
pusha
pop
sbb
icebp
inc
mov
mov
sbb
leave
into
gs
xor
fistp
mov
cld
mov
cmps
test
or
xor
(bad)
dec
in
fucomp
dec
add
enter
push
addr16
adc
je
movs
fdivr
shl
push
dec
sbb
(bad)
es
fldcw
jmp
int
call
mov
adc
add
jg
movs
repz
push
pop
pusha
cmps
xor
sar
shl
xor
xchg
vmread
push
pop
mov
sub
ja
outs
popa
push
into
adc
cmp
pop
pop
aad
sbb
nop
fidivr
pop
push
push
cmps
(bad)
(bad)
jo
(bad)
push
push
cmps
retf
mov
sahf
fistp
push
xchg
js
cmp
dec
imul
cmp
stos
mov
cmp
push
imul
or
push
popa
ror
or
cmc
fadd
popf
test
xchg
xor
jle
push
shl
dec
in
mov
xor
cwde
cmp
sub
or
cs
and
xchg
imul
add
pushf
jmp
scas
in
mov
outs
aaa
div
(bad)
dec
cwde
mov
jg
and
push
push
xchg
das
nop
(bad)
test
sbb
aaa
pop
fwait
push
inc
inc
and
stos
ret
jg
test
sub
dec
pop
mov
sar
stos
mov
in
jecxz
adc
mov
add
mov
test
push
rcl
iret
mov
adc
or
enter
lods
xor
xchg
push
test
and
inc
pop
ror
mov
pusha
push
and
inc
xchg
pop
inc
mov
sbb
and
adc
push
inc
cmp
clc
pushf
mov
fdiv
es
imul
adc
jae
fsub
mov
and
mov
cmp
addr16
call
call
add
push
cmp
mov
sbb
add
outs
mov
jp
or
cmc
rcl
dec
dec
call
mov
mov
mov
pop
retf
pop
sbb
ss
mov
call
jmp
and
jnp
cmps
dec
in
and
popa
jp
dec
pop
popa
pop
sbb
mov
outs
fs
jbe
sbb
dec
xchg
push
ret
ja
sub
leave
jmp
aam
(bad)
jno
mov
sbb
popa
mov
jmp
das
arpl
inc
pushf
xchg
aas
in
gs
(bad)
mov
iret
scas
mov
jge
hlt
ds
popa
rcl
pop
outs
mov
ficomp
sub
mov
std
sahf
add
xor
pop
xchg
jne
fadd
stc
cmps
inc
push
jp
xor
sub
push
movs
xchg
rcl
push
icebp
jl
mov
aad
mov
or
mov
stc
in
jns
aaa
or
or
jno
cmp
sbb
pop
lods
or
jecxz
sbb
es
mov
hlt
cmp
jo
popf
sbb
inc
sbb
inc
(bad)
sub
imul
push
or
loopne
inc
sbb
movs
pop
shr
mov
sar
cmp
jmp
nop
rcr
and
xchg
xlat
mov
mov
sub
ins
jbe
dec
seto
push
sub
dec
pop
ss
xchg
add
dec
loop
das
fisubr
adc
out
jmp
pop
push
sub
out
lock
icebp
mov
jae
cmps
inc
enter
push
pop
xchg
rcr
ss
sub
sbb
jg
jmp
sub
enter
push
push
inc
cld
ss
and
pushf
in
aad
dec
dec
repnz
xor
pusha
cmp
or
js
mov
push
adc
je
int3
dec
push
in
dec
int3
sub
jae
pop
aam
cmps
sar
add
mov
xchg
je
pop
jecxz
(bad)
ja
lds
mov
push
cld
and
cli
mov
and
push
out
pop
mov
sub
mov
ja
mov
xor
push
cld
cmp
sbb
cmp
pop
es
sub
cli
sub
cld
mov
data16
out
inc
call
fdivrp
inc
jecxz
iret
into
fsub
xor
into
aaa
cs
jp
cmps
sti
push
arpl
mov
movs
mov
out
enter
push
add
imul
mov
adc
and
inc
push
shr
rol
push
xor
pusha
jno
inc
adc
add
scas
fs
fst
fmul
or
inc
mov
jp
shl
adc
ss
nop
adc
pop
dec
cli
dec
es
adc
pop
adc
adc
sahf
adc
push
fwait
(bad)
ror
rol
fist
call
lahf
lods
mov
ror
dec
pop
cmc
sbb
cmps
adc
fld
xor
mov
adc
sub
arpl
out
dec
push
cmp
in
adc
shl
fwait
xchg
mov
lds
mov
push
pop
xlat
retf
icebp
adc
mov
outs
mov
lock
rcr
das
dec
push
scas
dec
inc
repnz
mov
cmc
mul
cmps
retf
or
inc
push
cli
inc
mov
ins
ret
loope
mov
jecxz
jmp
sti
repz
mov
sub
movs
xchg
ds
adc
and
lds
aam
xor
pop
packssdw
mov
outs
or
xor
sub
test
mov
and
out
fsub
iret
push
rol
inc
and
push
popa
sbb
mov
jne
add
(bad)
sub
xor
ret
je
lods
mov
movs
add
pop
mov
lods
retf
xchg
jmp
(bad)
arpl
(bad)
fcmovu
mov
sub
mov
pushf
jne
js
mov
add
addr16
ds
bound
xchg
bound
mov
outs
adc
dec
sbb
inc
pop
mov
mov
rcl
add
pop
inc
rcl
in
call
jmp
retf
cmp
inc
test
mov
fisubr
in
out
dec
pop
xchg
push
sbb
inc
fild
mov
or
aad
adc
je
leave
std
add
ds
add
push
ins
sub
enter
mov
or
dec
repnz
pop
ds
adc
adc
or
pop
push
(bad)
movs
out
sbb
ds
nop
and
mov
(bad)
int
out
into
pop
push
jmp
popa
xor
pop
adc
mul
xor
das
xor
push
gs
nop
adc
in
and
mov
jb
jg
pop
mov
mov
sub
and
push
and
fwait
lods
sub
and
mov
add
sti
xlat
shr
push
cmps
pop
sbb
retf
push
add
sub
test
pushf
sub
xor
cmps
int3
in
cmp
jne
jle
pusha
mov
and
(bad)
retf
std
mov
pop
dec
push
or
add
int3
cmp
jp
mov
push
add
mov
pop
add
xchg
imul
sbb
sub
retf
aas
pop
scas
xlat
mov
fadd
xchg
pop
ins
cmps
add
nop
sahf
(bad)
aas
cmp
into
jmp
pop
sub
mov
and
dec
loope
(bad)
push
push
or
fld
mov
jg
push
enter
movs
outs
mov
aam
movs
nop
cmps
retf
sbb
cmps
push
lods
pop
jne
mov
jle
rol
mov
dec
jmp
(bad)
stc
arpl
jbe
dec
(bad)
xlat
imul
fiadd
dec
and
pop
add
imul
push
jge
dec
dec
loopne
xchg
(bad)
xor
(bad)
call
enter
jns
inc
xchg
popa
imul
mov
push
adc
adc
aas
jmp
stos
fdivr
xchg
test
push
dec
lock
jge
inc
inc
jae
dec
icebp
and
(bad)
gs
pop
jae
iret
jbe
jne
xor
rcl
jbe
scas
repz
bound
sbb
push
scas
and
mov
jmp
or
clc
mov
fcomp
fimul
jg
jmp
jbe
push
out
adc
lds
xchg
(bad)
(bad)
outs
mov
aaa
fsubr
das
sbb
ins
popa
pop
aad
mov
cmp
stc
mov
movs
out
pop
sbb
popa
push
cmp
and
dec
call
(bad)
retf
adc
xchg
pop
out
pop
pop
fcos
jmp
add
sub
cmps
imul
mov
xchg
ret
mov
inc
pop
push
lea
xor
pop
sub
leave
add
fsub
outs
(bad)
aad
push
(bad)
ins
mov
movs
out
pusha
into
(bad)
pop
or
scas
(bad)
cmp
adc
xor
pop
nop
sahf
fisubr
mov
sbb
add
jbe
pop
sahf
daa
adc
jbe
dec
dec
push
test
mov
ds
push
xor
ficomp
inc
les
mov
iret
sahf
and
mov
iret
jge
or
scas
push
imul
in
mov
cli
push
(bad)
lock
out
(bad)
leave
scas
pop
cmp
inc
push
out
jp
inc
scas
es
(bad)
into
outs
pop
mov
mov
pop
cmc
arpl
add
xor
mov
fnstcw
ss
mov
push
(bad)
cs
sbb
arpl
aad
inc
dec
pop
and
cli
cmc
shl
or
das
arpl
or
adc
jge
movs
push
shl
retf
int3
div
mov
mov
aaa
adc
add
stc
iret
test
popf
fisttp
and
fdivr
cli
mov
lods
repz
add
(bad)
arpl
pusha
shr
int3
fdecstp
adc
cdq
add
(bad)
mov
test
mov
mov
fs
fwait
mov
mov
push
(bad)
jnp
sar
in
and
ror
dec
mov
retf
push
loopne
mov
mov
fld
xor
inc
add
inc
test
xor
dec
pushf
nop
sbb
sbb
pop
movs
push
repz
cmp
scas
retf
jp
inc
popf
mov
inc
jo
jnp
sbb
mov
not
push
mov
repz
add
and
dec
in
test
shl
hlt
and
loop
mov
shl
imul
or
sahf
push
fcomp
add
mov
mov
leave
and
push
test
int3
pop
mov
xor
call
rcr
out
pop
mov
scas
cmp
cmps
in
ret
jmp
fwait
aam
aam
icebp
dec
xlat
xchg
inc
adc
mov
in
mov
fstp
pop
mov
test
xor
cs
ret
cdq
xchg
sbb
cs
imul
clc
(bad)
stos
lds
not
ss
inc
ret
test
jbe
gs
aas
fcomp
shl
pop
out
and
scas
test
dec
xchg
cmp
stos
jae
ja
jmp
add
push
std
dec
push
mov
sbb
xchg
adc
or
and
loopne
adc
aad
arpl
lods
pop
adc
std
(bad)
imul
(bad)
push
mov
mov
xchg
mov
dec
stos
imul
xchg
sub
mov
data16
int3
fidivr
mov
mov
scas
and
mov
lea
sub
inc
icebp
push
cmp
ret
iret
rcr
cmp
xor
or
xchg
xor
cmp
movs
fst
out
cmp
or
lahf
pop
in
les
push
dec
ins
sbb
pop
(bad)
lods
jecxz
and
clc
lods
jno
cwde
hlt
clc
xchg
daa
lods
mov
sub
jg
sub
fs
fdiv
scas
ror
outs
or
cmc
add
xor
jle
cmp
fidiv
xchg
icebp
shr
sub
pop
rcl
out
push
imul
pushf
int
aam
cmp
in
mov
push
xchg
mov
es
or
int3
scas
mov
inc
pusha
add
(bad)
sahf
pop
adc
test
dec
es
sti
mov
adc
mov
push
fild
(bad)
cmp
dec
imul
jp
mov
xchg
push
ror
retf
pop
push
fistp
out
mov
pop
dec
lahf
in
fdivr
dec
pcmpgtb
sbb
xlat
adc
inc
cli
repnz
cmps
jo
jno
sub
or
imul
xor
or
test
je
sub
scas
call
(bad)
fstp
cli
rol
rol
pusha
push
rcr
out
push
in
mov
jle
cld
pop
sbb
push
add
nop
cs
mov
jns
outs
scas
sbb
add
jne
fist
int
and
xchg
or
pop
fimul
test
push
or
movs
(bad)
mov
jbe
test
xor
mov
(bad)
aas
fisubr
cmp
mov
push
mov
les
fldcw
adc
outs
idiv
cs
dec
pop
test
ss
sbb
adc
cmp
cmp
aas
repnz
xlat
mov
adc
fdivr
setne
sbb
or
cs
jl
gs
test
ret
mov
movs
or
in
pop
ror
sbb
scas
inc
(bad)
and
fsubr
ja
cwde
add
mov
and
push
repnz
sub
addr16
aas
loopne
(bad)
ror
mov
pop
and
cs
out
or
and
addr16
xchg
xor
adc
dec
sbb
(bad)
fldenv
dec
lods
fsub
jmp
fmul
jge
arpl
xchg
loopne
stos
add
fild
xor
outs
xor
or
iret
jbe
shl
shl
dec
dec
or
jl
lods
ins
out
xor
or
adc
sub
in
dec
adc
cmp
mov
inc
jge
push
add
cmp
pmulhw
add
movs
jns
add
jle
call
enter
jmp
push
push
cmp
lods
add
pop
push
pusha
mov
cdq
and
add
adc
lods
mov
(bad)
loopne
sub
mov
fwait
inc
push
lahf
gs
mov
es
in
add
push
stc
stos
mov
mov
xchg
mov
scas
cmps
pop
loop
cs
push
pop
fwait
xor
push
int3
inc
xor
ins
sbb
(bad)
jmp
iret
sbb
sbb
mov
ret
pop
cmp
cs
add
push
add
clc
xchg
test
in
ds
sub
or
pop
outs
ins
push
xchg
mov
test
push
adc
rcl
ds
in
ins
sbb
(bad)
mov
jp
loop
xor
mov
dec
mov
cwde
sbb
add
test
mov
pop
cmp
pop
sbb
mov
mov
jg
pop
xchg
cs
and
cmp
xlat
add
aad
push
pop
xchg
sbb
jp
lahf
out
adc
(bad)
jno
xchg
movs
fadd
adc
dec
sahf
xchg
or
inc
push
sbb
sub
(bad)
fnsave
stc
aaa
pop
retf
jmp
mov
ds
mul
push
or
aam
cmps
lods
xchg
mov
pop
xchg
mov
xor
or
lea
ja
push
jbe
retf
xchg
(bad)
repnz
push
test
in
add
add
inc
ret
loope
sbb
fcomp
push
scas
enter
retf
test
fs
bsr
jmp
xor
push
movs
xchg
int
pop
dec
bound
repz
scas
mov
hlt
retf
jmp
and
ds
mov
idiv
add
inc
loopne
repnz
dec
bound
ret
sub
sub
fsubrp
sahf
fld
icebp
das
mov
sub
loop
xor
xchg
(bad)
fisub
sub
dec
xor
mov
and
inc
fstp
jecxz
jmp
mov
push
aaa
pop
inc
cmp
sub
cld
loopne
sub
dec
pop
xchg
retf
(bad)
xor
cmp
jmp
retf
xchg
or
fimul
pop
(bad)
xchg
dec
jle
into
ret
xchg
adc
xor
cmc
mov
jecxz
mov
icebp
push
mov
gs
test
call
and
in
rol
push
mov
cmp
test
cmp
mov
mov
(bad)
cmp
xchg
loope
jns
je
sub
mov
into
mov
or
cmp
test
ror
add
pop
sub
xchg
jecxz
leave
les
outs
xlat
jnp
xsaveopt
dec
movs
adc
in
inc
cmps
adc
iret
aam
jnp
les
mov
pop
iret
mov
adc
xchg
jle
(bad)
in
ja
shr
inc
imul
pop
and
shl
leave
xchg
ret
gs
xchg
cmc
inc
sar
mov
cwde
or
mov
and
push
cmc
or
adc
ficomp
(bad)
sub
jge
jmp
dec
adc
mov
mov
rol
clc
push
cmps
stc
add
add
inc
imul
(bad)
pop
inc
push
sub
mov
mov
jmp
popa
sti
dec
sub
jge
xchg
mov
mov
sub
ds
inc
push
lods
nop
xor
icebp
(bad)
xor
(bad)
mov
push
xor
mov
add
adc
adc
cdq
cs
adc
fstp
and
push
and
and
fldenv
sub
push
jns
adc
js
stos
inc
cmp
nop
repz
stos
pop
xchg
lods
enter
push
sub
pop
lds
inc
pop
mov
out
sahf
fstp
xchg
adc
pop
push
jge
pop
pop
fwait
xor
cs
dec
jl
mov
(bad)
inc
or
push
cmp
xchg
add
mov
and
aad
or
mov
and
mov
jmp
popf
add
lock
and
jl
cmp
hlt
mov
xchg
mul
movs
popa
sbb
js
rep
in
lock
mov
(bad)
into
scas
push
sub
mov
cmps
shl
jl
mov
lds
lods
test
or
xchg
push
or
xor
popf
stc
retf
lock
push
sbb
add
xlat
fldcw
dec
in
xor
lock
jnp
jmp
adc
mov
dec
out
iret
(bad)
adc
jecxz
lahf
mov
pop
ss
iret
test
jns
push
mov
lock
or
add
iret
out
in
mov
jbe
or
jns
mov
(bad)
mov
mov
push
rep
cmps
and
loope
dec
pusha
(bad)
mov
call
adc
nop
mov
push
repz
lods
jne
push
ja
cmp
not
and
in
retf
sbb
scas
mov
pushf
data16
or
rcr
sti
out
icebp
(bad)
xchg
sbb
push
dec
fstp
call
test
lods
mov
adc
fiadd
arpl
mov
mov
sbb
push
sub
sbb
xchg
fbld
aaa
clc
inc
sub
jmp
cmp
fdivr
dec
mov
mov
and
add
lahf
sar
fist
mov
pop
cmp
(bad)
fcom
fdivr
cld
dec
lods
mov
shl
jns
adc
shl
test
cli
cmp
arpl
adc
dec
push
xchg
cmc
test
sub
popf
fwait
and
int
adc
xchg
pusha
dec
cld
dec
and
leave
test
into
and
cmp
arpl
or
push
mov
fisubr
outs
adc
xchg
stc
cs
and
(bad)
push
xchg
test
fisttp
pop
inc
jns
addr16
psrlw
lahf
fwait
lods
sbb
bswap
into
or
repz
inc
fmul
and
pop
add
mul
add
mov
call
loop
add
adc
std
test
rol
xor
test
cld
inc
add
adc
dec
xchg
push
xlat
jle
fstp
popf
rep
sub
and
xchg
daa
pop
xchg
push
xor
scas
push
fwait
pop
jecxz
shl
sti
add
inc
sub
sar
in
iret
loop
(bad)
pop
popf
test
dec
jo
dec
aas
add
xchg
push
fdiv
xor
aaa
mov
sub
inc
add
add
pop
(bad)
aas
lds
in
addr16
cmps
leave
mov
or
sbb
add
int
mov
sbb
arpl
into
xchg
xchg
mov
mov
dec
cld
icebp
cli
pop
mov
inc
scas
xlat
or
push
xchg
inc
loop
and
xlat
scas
sub
or
xor
fist
gs
push
jno
sub
cmp
push
jmp
mov
pop
scas
fidivr
ds
loop
popf
lods
add
pop
daa
pop
mov
cs
stos
xor
pop
jmp
xchg
adc
outs
div
adc
pop
test
sahf
pushf
leave
rcl
xchg
es
ror
addr16
push
jp
jge
test
or
and
add
adc
(bad)
(bad)
xor
ja
cmp
xor
pop
cmp
mov
neg
es
loop
nop
or
xor
dec
aam
mov
mov
adc
inc
addr16
add
add
push
stc
clc
int3
jnp
nop
test
xlat
sub
rcl
ror
neg
xor
pushf
or
xchg
popf
mov
test
nop
add
jle
stos
(bad)
and
cdq
adc
sub
fst
adc
xchg
movs
jo
and
xchg
xchg
sbb
pop
sahf
idiv
leave
cmc
mov
xor
pop
dec
xchg
imul
jo
jle
push
int3
cmp
push
mov
sub
jbe
jbe
add
push
sti
mov
sub
lahf
repnz
xchg
jbe
clc
call
jnp
add
adc
and
ja
std
cmp
dec
ins
fbstp
into
mov
scas
dec
jb
mov
add
add
sbb
pmaxub
or
repz
dec
or
sub
inc
push
jecxz
push
fmul
enter
push
fild
pop
sbb
mov
repnz
test
or
adc
dec
inc
push
inc
mov
mov
call
bound
xchg
push
aas
inc
out
push
mov
lods
mov
xor
cmc
jno
loop
enter
cli
xchg
xor
inc
pop
stos
js
pop
js
adc
fcomp
in
dec
mov
xor
cli
inc
dec
fild
inc
and
inc
add
and
sub
mov
pop
jns
or
or
and
in
xchg
sbb
jge
into
loop
in
cwde
into
mov
(bad)
xor
inc
mov
adc
lods
mov
lea
ret
leave
jmp
xchg
scas
push
rol
dec
jae
in
outs
inc
sub
retf
or
jns
pop
mov
dec
and
lods
lea
addr16
adc
mov
xchg
xlat
imul
inc
leave
push
das
xor
dec
jo
jae
add
pop
ins
test
cdq
adc
bound
jmp
ins
xlat
mov
das
ds
push
mov
mov
and
out
or
scas
stc
jle
xor
sbb
cs
fisub
adc
ds
sub
cwde
mov
inc
(bad)
jbe
cdq
adc
adc
add
jo
daa
out
dec
sahf
dec
and
or
repz
ins
mov
sti
xchg
out
or
ret
adc
push
jnp
scas
out
(bad)
push
pop
mov
fistp
(bad)
repnz
sub
lods
mov
cmp
push
xor
loopne
sahf
cld
ins
dec
or
add
(bad)
idiv
jbe
jmp
mov
sub
or
in
(bad)
xchg
outs
cmp
test
out
mov
mov
lahf
pop
or
cmp
pop
inc
test
sti
inc
sub
cmc
cmc
hlt
xor
add
mov
fst
repnz
movs
cli
test
neg
mov
shl
sub
cdq
xor
mov
fbstp
stos
fs
adc
mov
ss
mov
inc
xor
xor
pop
xor
pop
addr16
or
adc
xchg
and
xchg
adc
pop
and
cmp
pop
or
sbb
adc
jns
ss
cmps
mov
into
imul
ss
mov
fisttp
jge
outs
push
in
push
sbb
push
xor
inc
test
jo
mov
pop
sbb
xor
pop
mov
push
or
loopne
cmp
or
pop
add
imul
xchg
xor
outs
arpl
pop
push
pop
dec
fstp
out
sti
mov
xor
hlt
dec
push
ss
dec
xchg
mov
pop
pop
add
loop
test
mov
inc
inc
shr
or
jg
(bad)
cmp
cs
and
dec
jb
jne
aaa
mov
push
cmp
xchg
out
or
pushf
push
out
stos
pop
mov
inc
das
jmp
push
xor
xor
jge
mov
mov
lahf
ror
fs
push
shl
lock
lods
dec
lock
dec
leave
dec
adc
jb
stos
stos
mov
adc
xchg
push
mov
jge
jno
sub
jecxz
xor
dec
add
out
mov
fdiv
pusha
test
out
sub
inc
cli
repz
mov
dec
(bad)
mov
ins
mov
mov
dec
jmp
or
xchg
push
lods
add
gs
fsubr
add
inc
mov
movs
dec
dec
push
xor
jmp
and
test
pop
test
mov
add
mov
jb
push
xchg
push
(bad)
out
mov
clc
repz
cdq
mov
jbe
inc
jno
mov
cmc
mov
push
push
mov
inc
pusha
lahf
sbb
rcl
es
dec
lds
fs
add
or
pop
aas
sub
out
jnp
xor
stos
push
repz
dec
repnz
cwde
ret
js
add
pop
sbb
inc
and
sub
(bad)
mov
in
jmp
add
stc
fisttp
or
mov
bound
in
ret
jg
inc
daa
cli
je
test
push
mov
mov
aaa
add
fidiv
mov
cmc
in
pop
dec
aaa
or
call
push
sub
xchg
cwde
in
(bad)
shl
jmp
cmp
mov
sub
lods
mov
dec
push
iret
and
sahf
fsubr
sti
loop
js
or
pop
push
(bad)
jge
add
(bad)
out
xchg
daa
cdq
aad
dec
in
fnstcw
lock
push
and
retf
test
adc
pop
call
ja
cmp
idiv
or
outs
aas
out
mov
adc
sub
arpl
ss
cmp
js
push
data16
stos
push
lahf
pushf
adc
fwait
lea
push
jb
stc
push
fdiv
arpl
xor
(bad)
sbb
mov
call
stc
in
sbb
mul
xchg
pop
les
mov
mov
stc
adc
xor
test
push
movs
dec
or
call
lds
lock
ret
shl
out
aas
rol
jecxz
imul
repz
popf
push
xor
mov
mov
sbb
pusha
movs
sub
pop
or
mov
xor
xchg
pop
in
sub
xchg
loope
pop
sub
add
inc
lods
xchg
or
pop
jmp
push
int
and
inc
jp
and
xchg
lods
add
fisttp
pop
push
jmp
repz
ss
pushf
jb
jbe
cwde
push
sbb
mov
ja
divps
add
rol
mov
aam
call
clc
movs
test
sub
mov
imul
add
lock
sub
aam
mov
jns
ins
xor
mul
push
add
dec
sub
lods
enter
sbb
xchg
dec
stos
lahf
sbb
mov
dec
fnsave
mov
push
mov
mov
jmp
test
(bad)
aaa
shl
xor
push
gs
aam
pop
retf
out
rcr
and
xchg
stos
stos
outs
dec
or
mov
out
ret
repz
cmp
mov
test
push
loop
pop
or
scas
mov
inc
in
jle
xchg
es
outs
mov
or
ins
fs
(bad)
cmp
jl
cdq
dec
in
sbb
mov
push
iret
cmp
lods
pop
(bad)
out
mov
bound
sar
(bad)
out
jge
push
cmp
je
xchg
jle
inc
mul
clc
ret
stos
ds
pop
dec
adc
and
push
xchg
frstor
ins
add
repz
mov
jb
inc
or
mov
hlt
sub
mov
mov
scas
xor
cmps
in
jg
aad
js
aam
or
retf
push
(bad)
int3
mov
in
daa
es
mov
mov
ret
xor
iret
add
or
ss
into
and
(bad)
daa
aam
inc
daa
dec
push
sbb
cmp
push
lods
sub
xor
ins
int3
and
imul
push
fdiv
mov
dec
adc
pop
aas
add
es
sbb
fcmove
dec
push
pusha
push
inc
ds
sub
ss
stos
ret
rol
push
ja
jbe
sub
or
(bad)
push
adc
and
dec
or
mov
repnz
push
movs
int
sbb
daa
call
icebp
inc
popf
shr
pop
mov
mov
int3
idiv
cld
cmp
jmp
out
dec
xchg
(bad)
mov
pushf
push
aam
fwait
add
retf
shr
movs
xlat
inc
jp
mov
fsubr
pop
dec
sti
xchg
jb
xchg
(bad)
les
cmps
sbb
push
push
nop
int3
sbb
dec
fimul
mov
(bad)
(bad)
int3
inc
inc
ret
clc
fnsave
ds
shr
add
pushf
push
mov
mov
das
(bad)
lock
or
in
or
mov
or
fnstenv
sub
clc
mov
add
jecxz
pop
jns
sbb
scas
ds
adc
fisttp
push
or
frstor
xchg
test
fidivr
jo
out
push
mov
jl
ret
cmp
xor
aam
xor
gs
imul
into
arpl
adc
and
mov
loopne
(bad)
call
sti
add
mov
(bad)
dec
shl
cli
inc
imul
mov
mov
loopne
dec
fsub
gs
out
ds
push
bound
scas
xlat
lods
stos
mov
cmp
add
mov
xlat
mov
push
ins
out
scas
or
jecxz
into
mul
movs
add
jecxz
inc
in
std
or
out
daa
popf
mov
add
xchg
sub
jmp
out
(bad)
int3
and
popf
inc
fsubr
jge
inc
adc
jbe
sub
popa
cmps
dec
push
loopne
rcr
push
ficom
jmp
lahf
inc
mov
es
jno
lock
loope
in
mov
retf
pop
aaa
jle
cmps
xlat
mov
dec
repnz
jno
arpl
jmp
xor
jecxz
(bad)
outs
(bad)
cdq
cmps
add
call
stos
sbb
cmp
in
loope
add
and
mov
stos
pop
and
aaa
or
aaa
cmps
adc
aaa
outs
or
adc
lea
aas
jmp
lods
ss
pop
test
pop
jae
jge
hlt
adc
add
xchg
push
fbstp
das
push
js
fisub
pop
dec
pop
shl
call
xchg
adc
repnz
jl
mov
xchg
cmps
sbb
push
mov
outs
rcl
adc
ret
adc
test
cmp
xchg
aad
addr16
int3
in
adc
inc
dec
les
push
mov
arpl
ret
cdq
push
pop
cli
fsubp
outs
cmp
retf
nop
ret
shl
inc
jge
outs
lahf
mov
popa
(bad)
sub
retf
cs
xchg
mov
nop
push
or
test
scas
cmp
scas
pop
popa
xlat
int3
aam
xchg
(bad)
xchg
outs
stos
iret
call
movs
neg
ds
call
jp
xlat
sub
jge
out
sbb
sar
lock
jno
stos
xchg
inc
fcom
int3
adc
pop
stc
ins
sbb
add
sub
xor
xlat
mov
mov
adc
outs
jb
sub
or
lds
(bad)
sub
push
mov
sbb
dec
ret
xchg
rcl
sti
jns
mov
cmp
fadd
cwde
and
inc
mov
or
sub
xor
out
loop
sbb
sbb
loop
inc
sti
sbb
popf
sbb
or
mov
xchg
xor
inc
not
xchg
sub
cwde
push
jmp
stc
out
sub
fabs
lods
mov
cs
mov
imul
jnp
sub
cmp
mov
data16
cmp
mov
test
dec
jns
(bad)
out
xchg
cdq
pop
pop
pop
or
fwait
movs
jbe
push
(bad)
or
idiv
cmp
or
pop
mov
lock
call
outs
mov
adc
push
dec
(bad)
pusha
xor
pop
int
pop
inc
dec
xor
dec
shl
xchg
test
mul
push
dec
inc
fldenv
(bad)
sar
xchg
fld
xchg
sbb
pushf
pushf
pop
mov
xchg
push
retf
xor
shl
je
or
inc
sti
(bad)
int
test
aas
jp
fdivr
or
data16
push
cmps
cmp
jg
adc
fisubr
dec
mov
and
mov
aaa
jge
out
cdq
xlat
int3
push
sub
xchg
bound
scas
push
push
es
sub
and
dec
push
out
in
push
ss
retf
movs
add
adc
mov
jbe
pop
jp
dec
jp
fs
push
jg
and
stc
idiv
arpl
fsubr
js
and
jmp
leave
xor
sub
sbb
div
mov
cdq
mov
ins
in
sbb
outs
dec
stos
xor
scas
xor
aas
or
das
nop
pop
sti
xor
data16
sbb
dec
hlt
pop
xor
aad
nop
cs
aas
dec
sbb
jmp
nop
jecxz
and
or
loopne
push
xor
sbb
inc
mov
mov
jge
dec
jns
mov
and
in
(bad)
out
push
ss
lea
push
pop
ret
adc
and
mov
cmp
int3
scas
mov
push
jmp
cmp
in
mov
xchg
push
lods
inc
jb
ror
xlat
add
xchg
xor
xor
icebp
mov
les
sar
push
stos
pop
pop
mov
out
sti
dec
movs
add
xor
push
call
jecxz
jns
inc
pushw
push
xchg
ins
jl
inc
gs
inc
xchg
mov
push
push
sahf
jge
inc
ret
jno
push
dec
icebp
inc
push
inc
xor
stos
sbb
loop
out
fs
inc
les
or
retf
and
push
out
pop
addr16
retf
dec
and
cli
popa
xor
rol
aaa
add
xchg
inc
mov
xor
and
mov
push
push
add
cmp
js
cdq
and
jp
push
cdq
rcl
imul
and
iret
(bad)
cld
adc
mov
(bad)
out
addr16
push
aaa
mov
cmp
dec
cmp
pop
sbb
add
ror
out
imul
cld
test
fs
xchg
mov
lea
repz
jae
and
adc
push
mov
sub
jmp
sbb
push
jle
mov
data16
ss
mov
stc
les
adc
jle
in
in
icebp
imul
not
add
pop
push
pop
or
test
loopne
push
cs
jle
jne
int
fdiv
push
fadd
outs
and
in
lods
lea
and
xchg
xor
xchg
add
xchg
es
shr
push
retf
in
mov
mov
inc
cdq
jbe
xor
push
adc
mov
xlat
loope
jmp
or
sbb
lods
sbb
or
repnz
int3
clc
pop
fdiv
jmp
pop
and
sub
push
xchg
(bad)
xchg
popa
ds
stc
cmp
add
mov
mov
jb
push
xchg
adc
scas
push
loop
adc
out
arpl
adc
pop
les
jne
jnp
sbb
cmp
dec
jl
jnp
aaa
ja
mov
loop
rcr
(bad)
push
push
iret
mov
or
pop
push
loopne
dec
dec
xchg
mov
or
mov
pop
test
loopne
xor
and
sub
mov
iret
in
test
push
add
dec
js
dec
xchg
inc
ficomp
push
pushf
test
fsubr
jp
popf
inc
sub
push
lods
jb
sub
ja
cmp
push
sub
stc
mov
mov
mov
dec
inc
daa
mov
sub
sbb
out
movs
sbb
pop
fsub
mov
dec
das
shl
imul
or
pop
jl
xchg
pusha
or
mov
xor
sbb
xor
sub
fcomp
dec
push
or
addr16
mov
in
je
inc
sub
outs
lods
in
push
sub
mov
push
pop
mov
out
sub
xor
mov
inc
sbb
ret
mov
dec
sbb
ret
pop
rcpps
xlat
and
add
mov
jmp
outs
movs
sbb
into
pop
mov
xchg
hlt
push
inc
mov
or
push
sbb
je
mov
cdq
mov
ins
pop
rcr
mov
nop
test
mov
dec
sbb
mul
ret
(bad)
lea
ss
jg
movs
sbb
jl
and
cmp
xlat
adc
inc
mov
les
lahf
popf
(bad)
(bad)
mov
int
and
std
shr
into
cmp
lock
pop
xchg
and
data16
int
test
xchg
ds
adc
mov
add
mov
and
cmp
fisub
scas
or
push
sbb
mov
aaa
call
pop
lea
je
aas
jbe
mov
hlt
pop
adc
inc
ret
test
dec
mov
das
push
push
je
mov
in
lods
dec
pop
cmc
in
leave
pop
push
(bad)
cmp
xchg
daa
lahf
into
nop
push
inc
aaa
inc
in
jne
inc
jmp
pop
mov
mov
in
mov
mov
dec
push
pushf
cmp
adc
add
add
fsubr
pop
(bad)
sub
scas
gs
aas
sub
and
js
fucomip
adc
xor
hlt
call
sar
rcr
or
outs
movs
push
pushf
popf
jmp
add
scas
pushf
scas
sub
cmc
sub
shr
es
in
cld
outs
popf
xlat
and
mov
call
lahf
or
inc
dec
sti
ss
inc
adc
mov
sbb
js
mov
cmps
lock
cs
das
les
lods
or
mov
cmp
ret
lahf
mov
mov
cmps
push
fld
ret
sbb
jbe
mov
cmp
jg
out
gs
ds
outs
out
mov
cmc
jl
leave
test
repnz
fst
pop
int3
loop
shl
jle
jne
mov
fs
popf
lods
call
sbb
aas
fwait
mov
dec
in
in
push
or
sar
jmp
int
int3
fnstcw
repnz
sbb
fcomp
and
add
neg
aam
cmp
pop
and
sub
cwde
mov
add
aas
push
repnz
or
sbb
popf
push
(bad)
fdiv
stos
or
xchg
inc
cmp
imul
xchg
lds
cmp
xor
adc
xlat
ret
pop
push
mov
ins
push
call
mov
in
loopne
or
dec
jge
in
pushf
out
sbb
(bad)
dec
int
retf
cmp
adc
push
es
sbb
fcomp
pop
mov
mov
(bad)
iret
sahf
add
jae
cli
fs
xor
jmp
in
dec
sbb
fld
das
sub
call
lahf
jo
into
jbe
int3
adc
adc
shl
jae
test
cmps
add
lock
add
pusha
jmp
shl
push
jle
inc
dec
or
sbb
mov
jmp
cwde
pop
popf
and
adc
ja
or
les
mov
daa
call
push
(bad)
bound
mov
movs
or
int
jg
punpcklbw
out
fisub
mov
or
leave
stos
jmp
fldcw
pop
sub
push
jecxz
in
mov
aam
cmps
and
hlt
pop
adc
in
cmc
loop
jecxz
enter
stos
jecxz
repz
mov
sbb
push
ins
and
pop
jmp
mov
cli
bound
or
mov
ins
jb
inc
mov
call
mov
pushf
clc
repz
adc
and
test
data16
lahf
in
mov
add
mov
out
das
aaa
xchg
and
mov
mov
sub
les
pop
movs
mov
lods
loopne
in
and
adc
inc
ret
cmp
fdivp
std
jle
xor
es
fdiv
and
jae
cmp
xchg
(bad)
add
popf
pushf
or
mov
or
cs
or
or
stos
xchg
cmps
into
pop
push
mov
sub
mov
shl
gs
push
jmp
leave
out
inc
add
cmp
xor
out
mov
dec
push
mov
inc
adc
mov
int
and
mov
push
add
add
push
popa
mov
dec
push
pop
pop
push
push
pop
mov
cmp
xchg
repz
(bad)
repz
rcl
jl
cmc
fnsave
inc
sbb
mov
pop
data16
pop
imul
outs
and
adc
cmp
outs
sbb
leave
rcr
mov
pop
pusha
out
mov
scas
dec
sub
in
cli
into
mov
fdivr
inc
cld
add
mov
imul
fsubp
mov
retf
lods
outs
or
add
outs
mov
cli
push
sahf
xchg
and
mov
rcr
lock
nop
into
(bad)
enter
int
push
cmp
push
mov
dec
stos
pop
bound
fldenv
adc
xchg
fiadd
(bad)
pop
mov
dec
mov
cs
adc
xchg
into
cmps
popf
xor
inc
lea
test
dec
pop
outs
sbb
push
add
jg
pop
data16
push
out
pusha
repz
xor
enter
aam
adc
imul
mov
lods
jae
and
out
hlt
fstp
fist
repz
inc
cwde
jo
push
pop
dec
scas
pusha
(bad)
sar
push
inc
outs
das
or
ins
jecxz
xor
sub
jae
jb
mov
pop
inc
ret
mov
xchg
sub
test
adc
pop
xor
movs
js
(bad)
out
mov
dec
adc
mov
mov
mov
data16
aas
and
push
mov
mov
call
stos
add
cmps
aaa
jne
fist
add
fst
(bad)
mov
stc
sub
inc
cwde
(bad)
push
imul
push
in
test
adc
ds
into
pop
inc
jg
mov
mov
mov
cli
add
pop
int3
mov
cmp
mov
cmp
mov
js
xchg
push
mov
inc
mov
mov
test
push
nop
cld
std
inc
popf
mov
and
dec
mul
lods
daa
stos
mov
fdivr
cmp
popf
ds
jp
lods
xchg
mov
js
sbb
xchg
aas
jbe
imul
(bad)
pop
pop
and
mov
stc
push
pop
js
xor
cmp
cmp
ss
dec
pop
inc
in
aas
xor
fs
push
or
pop
(bad)
or
(bad)
cmc
add
cmc
nop
mov
or
mov
jge
call
fcmovbe
and
(bad)
xchg
out
outs
(bad)
cmp
mov
pop
nop
adc
pop
xor
sbb
shl
push
pop
or
pop
cmp
in
mov
jb
(bad)
cmp
int3
bsr
dec
adc
add
inc
in
xor
in
popf
inc
movs
popa
pop
or
and
and
and
sbb
into
scas
xchg
retf
add
and
push
sub
jbe
jp
aam
jmp
push
sbb
in
jle
cmc
push
adc
xor
push
movs
loopne
sbb
adc
adc
jge
cmp
loope
or
test
mov
test
lahf
xchg
jnp
not
out
mov
lock
adc
inc
test
(bad)
add
jo
mov
push
jp
sub
(bad)
out
pop
push
add
icebp
je
pop
dec
jge
ror
out
(bad)
addr16
out
(bad)
iret
fld
hlt
std
or
js
or
cmp
call
xor
imul
les
sbb
jb
sub
pop
add
sbb
inc
xor
inc
dec
cli
sub
fidivr
fiadd
fild
mov
call
mov
shl
mov
mov
call
dec
lds
nop
sub
mov
daa
es
in
cmc
cmp
xor
mov
jno
push
adc
js
xchg
out
jg
lahf
xor
gs
add
inc
loop
adc
sub
adc
mov
es
stc
cli
jo
loopne
push
psrlw
push
or
mov
pop
dec
adc
xor
push
scas
cwde
inc
pop
and
jo
inc
or
and
movzx
add
fbld
pop
jno
fisttp
mov
cmp
jecxz
rol
sahf
sar
cmp
jl
cli
outs
mov
pop
repnz
cmps
sbb
or
or
out
addr16
jl
iret
aaa
icebp
cwde
xor
jb
aad
fwait
outs
retf
cmp
and
in
fbstp
scas
jp
and
out
and
sbb
dec
pop
mov
shl
not
call
outs
jae
aaa
sub
inc
gs
lods
sbb
or
or
loopne
adc
mov
add
pop
daa
in
fwait
mov
mov
dec
pop
push
cmps
fs
ins
fs
dec
sbb
test
add
mov
mov
and
jo
std
push
sahf
loop
fwait
ror
pop
mov
mov
outs
jmp
sub
(bad)
mov
cmp
mov
sar
jle
mov
repnz
cs
and
and
ds
jne
xchg
mov
inc
sub
adc
popf
dec
outs
inc
loope
mov
pop
jnp
or
sbb
int3
fisubr
mov
dec
jbe
outs
jmp
sbb
dec
(bad)
mov
ror
out
hlt
or
in
sar
xor
mov
shl
dec
popa
jb
xchg
push
and
clc
jmp
or
scas
or
mov
sub
call
xor
loop
cmp
stos
adc
aaa
in
les
or
loop
fnstsw
pop
sub
das
sbb
das
fsub
sub
mov
push
lods
dec
and
sbb
mov
mov
push
mov
rcl
mov
pop
or
mov
mov
es
cs
leave
out
enter
outs
mov
sub
aas
aam
in
retf
fwait
ins
and
pop
xor
jmp
xor
fstp
cwde
cmp
icebp
gs
lahf
clc
xchg
jl
and
xchg
pop
out
call
jg
clc
push
ins
aas
sar
mov
repz
mov
cmps
out
jl
test
mov
pop
sbb
jg
mov
mov
stos
pop
and
pop
outs
leave
sbb
cmc
addr16
enter
xlat
inc
inc
pop
add
retf
pop
xchg
inc
and
push
xchg
retf
sub
inc
jo
std
je
shr
and
cld
jle
add
mov
scas
mov
jbe
jbe
test
fidiv
add
cmp
cdq
and
sti
mov
push
jmp
fcom
xchg
adc
movs
push
push
pop
les
retf
add
rcr
jge
imul
iret
inc
or
sbb
jno
pop
out
push
cmc
inc
test
cmp
pxor
cmp
icebp
jp
out
mov
adc
enter
jno
call
sub
cmp
out
mov
sub
jnp
jle
mov
xor
mov
out
push
sbb
scas
ins
adc
retf
sbb
mov
adc
mov
add
mov
out
outs
cdq
jmp
lods
xchg
loopne
jecxz
popf
scas
gs
xor
adc
test
out
xchg
dec
xchg
xor
repnz
outs
jp
test
add
xchg
icebp
mov
in
dec
cld
inc
int
pop
imul
fdivr
mov
xchg
shl
lea
loopne
call
pop
fild
aas
fdivr
xor
push
pop
push
pop
jae
or
push
or
jecxz
xor
loopne
inc
cmp
dec
inc
xchg
rcr
push
(bad)
jbe
cmps
and
loopne
fldenv
cmp
in
xchg
mov
outs
xor
(bad)
fcomp
xor
sti
or
add
mov
xor
data16
jp
push
shl
adc
imul
xor
push
(bad)
aam
scas
sbb
jb
aas
scas
int3
daa
jno
adc
or
or
adc
xchg
push
mov
pop
sbb
adc
dec
shl
cwde
(bad)
mov
pushf
in
push
xor
cdq
jbe
mov
dec
leave
push
or
hlt
ret
sub
mov
mov
in
xchg
bnd
dec
sahf
call
push
add
cld
mov
sahf
pushf
cmps
aas
mov
add
cld
add
popa
and
div
xor
pushw
adc
sub
and
hlt
or
lock
in
dec
out
inc
(bad)
adc
jmp
cmp
lock
fisttp
pop
outs
cmp
fiadd
imul
retf
add
js
mov
sti
mov
je
pop
fs
iret
sbb
sahf
push
sbb
das
sti
jp
stos
fdiv
jmp
dec
jo
(bad)
mov
push
cwde
mov
repz
lds
lds
jbe
push
mov
in
ret
push
and
mov
and
fdivr
or
sbb
push
pop
adc
popa
int3
cmp
inc
push
sub
loop
fcom
pop
daa
or
addr16
test
mov
cmp
xchg
sbb
sbb
or
push
dec
or
enter
adc
or
dec
cmp
ss
push
add
mov
dec
call
das
aam
fimul
stos
inc
jo
cmp
jnp
mov
sahf
fisubr
cmp
dec
std
sbb
dec
push
js
outs
jge
daa
out
pop
pushf
cwde
jge
mov
dec
xor
cmp
cdq
lahf
popa
xor
mov
std
and
jns
mov
inc
or
mov
icebp
jae
jo
(bad)
(bad)
leave
push
nop
stos
dec
out
sbb
dec
addr16
sub
dec
inc
data16
fldenv
inc
pusha
dec
out
rcr
sub
mov
ficomp
xor
push
cmp
mov
sbb
in
jae
loope
mov
xchg
enter
adc
jns
test
fucomi
xchg
and
xor
mov
add
iret
imul
les
enter
jb
push
mov
mov
std
inc
push
xchg
sbb
jo
lods
call
cmp
sbb
push
add
and
and
test
fwait
scas
pop
xchg
ja
sbb
pop
sbb
addr16
sub
cmps
mov
movs
loop
pop
lea
aas
jle
and
lods
ins
lds
jl
pop
sti
push
daa
xor
dec
(bad)
pop
mov
jge
lods
test
fdivr
mov
out
call
imul
es
rcr
mov
fadd
in
push
jle
lds
test
inc
xlat
dec
pop
dec
or
xor
xor
aad
call
lods
add
xchg
test
das
(bad)
sub
lea
xor
push
pusha
adc
jmpw
bswap
call
imul
stos
mov
cmp
nop
out
iret
fiadd
ds
push
pop
dec
cdq
std
xchg
loope
mov
mov
in
rcr
xchg
mov
addr16
xchg
shr
je
sbb
inc
jle
mov
cmp
mul
ret
push
and
repz
fwait
pop
dec
push
mov
fbstp
or
cwde
inc
cmp
scas
adc
adc
call
(bad)
test
fcmovnb
sub
adc
enter
ret
jp
adc
loop
or
add
sar
sub
test
out
mov
add
int
popf
adc
int3
imul
xor
hlt
mov
leave
dec
jbe
mov
sbb
inc
pop
stos
loop
bound
stos
xchg
or
stos
outs
pop
clc
ss
js
adc
push
iret
jle
rcl
xchg
fidivr
jo
jg
sar
adc
mov
add
daa
pop
cmp
lock
adc
or
cmp
jbe
std
ret
(bad)
sub
adc
fwait
dec
(bad)
out
aam
push
retf
call
cmp
stc
mov
fidiv
sahf
or
adc
add
add
sbb
sub
cmp
aas
leave
jg
xor
xor
fnstsw
daa
push
cmp
fwait
push
leave
aam
ret
outs
mov
scas
int
iret
not
mov
dec
sub
dec
aaa
lahf
jo
and
ret
(bad)
xor
cli
jo
cmp
nop
jne
imul
mov
adc
cbw
in
pop
(bad)
es
push
mov
dec
scas
xor
mov
or
or
and
test
pop
xchg
lea
xchg
sub
mov
out
das
mov
push
mov
(bad)
mov
iret
in
and
jp
cli
and
push
aam
jae
inc
lods
cs
mov
loop
cwde
mov
pop
hlt
pop
test
sar
cmp
inc
and
jmp
lods
inc
mov
sti
int
cmp
pop
jecxz
loope
stos
cld
cmc
shl
stos
outs
(bad)
(bad)
sub
popa
pop
ret
lock
pmaxub
xchg
shl
dec
lods
xchg
xor
stos
mov
inc
addr16
lds
xchg
les
cmc
je
aas
or
add
cwde
inc
cmp
adc
not
sti
lods
retf
rcr
outs
clc
iret
das
jb
mov
inc
into
iret
jecxz
scas
popf
lods
sbb
inc
retf
mov
jp
int
shr
xor
mov
cmp
jo
cmp
(bad)
push
jle
jle
and
pushf
out
mov
aaa
or
jne
inc
fisttp
enter
pop
sbb
or
jbe
jle
test
mov
xor
in
push
jne
ficomp
movs
icebp
iret
pop
fiadd
test
cmps
adc
jp
push
gs
jg
mov
mov
mov
leave
and
xchg
aam
inc
sbb
add
push
push
daa
loope
inc
push
adc
push
push
cmc
sbb
(bad)
push
add
cmps
mov
sbb
jmp
adc
shl
test
add
cmc
or
ss
out
cmp
push
or
or
mul
mov
push
cmp
dec
sbb
cdq
pushf
hlt
sub
xchg
sub
or
sub
mov
adc
mov
xor
adc
fxam
jmp
imul
lahf
ret
(bad)
or
pop
jl
push
add
push
scas
xchg
out
or
aas
cld
call
leave
push
scas
sbb
xor
movs
aam
icebp
push
sub
mov
cwde
xchg
push
adc
adc
(bad)
aam
leave
dec
outs
daa
pusha
aaa
sbb
adc
push
das
stc
shl
mov
(bad)
mov
mov
fstp
icebp
cs
sub
js
into
cld
jns
ret
add
dec
aaa
inc
jae
stos
or
es
mov
(bad)
cmp
aaa
inc
mov
adc
test
cld
ret
dec
imul
cmp
div
leave
sbb
mov
loopne
or
push
mov
enter
call
pop
in
imul
push
sbb
xchg
in
mov
scas
nop
xchg
rol
jmp
sub
pop
(bad)
fcmovu
rol
adc
imul
jae
mov
popa
sbb
sub
pop
add
push
fs
mov
mov
aad
das
sti
xor
out
mov
push
pop
or
das
sub
sub
mov
movs
popf
push
jns
mov
sahf
int3
mov
mov
fstp
dec
or
sti
gs
push
jge
(bad)
out
xchg
fstp
sbb
xor
push
xchg
jp
jo
push
sub
pop
fs
cs
jns
mov
xor
out
mov
movs
xor
js
(bad)
scas
push
(bad)
cmps
xor
cmp
xchg
or
mov
push
movs
mov
xchg
mov
add
nop
pushf
add
and
pop
shr
cmp
retf
cwde
pop
mov
sub
sar
jb
les
iret
jno
pop
mov
icebp
pop
ja
xchg
test
push
in
cmp
shr
stc
xor
jo
mov
inc
add
loope
repz
out
sub
test
push
imul
pushfw
js
sbb
cmp
ja
js
adc
bound
test
push
xlat
and
clc
xchg
inc
jecxz
and
cld
or
loopne
inc
add
xchg
xor
inc
xchg
out
jno
sub
repnz
add
dec
out
sub
or
xchg
enter
mov
xchg
sbb
sbb
sub
cli
cmc
dec
stos
test
outs
xchg
stc
push
(bad)
scas
jl
mov
outs
mul
pop
shl
push
xor
xchg
mov
(bad)
idiv
test
mov
cmp
je
push
push
movs
or
pop
mov
lds
add
xchg
or
sbb
xor
inc
lds
in
(bad)
dec
ja
pop
cmp
pop
shl
mov
pop
sbb
aam
mov
sbb
(bad)
and
retf
cmp
nop
or
xor
mov
std
loop
das
cmp
shl
and
repz
out
ds
test
mov
or
mov
pop
mov
cmp
icebp
fidiv
dec
dec
sbb
jl
push
sbb
and
and
push
dec
xor
push
fild
push
test
jmp
test
pop
and
leave
push
push
fs
retf
test
data16
push
cdq
jecxz
adc
pop
frstor
xlat
fild
je
jo
pop
push
imul
pop
xchg
jp
icebp
movs
popa
and
int3
cdq
xchg
jecxz
imul
ds
inc
mov
push
xchg
hlt
push
sub
or
dec
(bad)
xchg
and
adc
jno
mov
push
retf
lods
push
jne
dec
cld
adc
fldcw
test
mov
jmp
bound
hlt
lock
jne
jmp
mov
xchg
outs
loop
pop
push
outs
jbe
je
sar
retf
xchg
push
hlt
stos
lds
cs
arpl
inc
mov
push
int
xor
jecxz
stc
adc
jg
cmp
pop
movs
dec
out
(bad)
(bad)
cmp
cmp
adc
mov
xchg
push
add
push
cmp
push
pusha
jo
sbb
lea
ds
and
bound
xor
scas
jmp
(bad)
div
fs
sub
shr
inc
or
stc
sub
dec
aaa
jp
repz
loop
xchg
jne
sbb
arpl
xor
dec
xchg
jmp
xchg
test
or
(bad)
pop
rol
fwait
sbb
enter
xchg
les
xlat
(bad)
jge
cli
retf
mov
clc
cli
iret
xchg
adc
or
(bad)
(bad)
out
lods
jecxz
out
test
push
into
stos
adc
cmp
fisttp
inc
lahf
sbb
out
jmp
fldcw
xchg
das
int
cmp
and
xor
push
setbe
loope
lods
lock
dec
mov
ret
push
fmulp
inc
lahf
mov
push
dec
sbb
popf
xchg
adc
ins
icebp
and
call
mov
test
jbe
sbb
jmp
outs
ds
add
call
leave
or
mov
or
add
mov
jmp
xchg
mov
scas
xor
cmp
jo
test
jb
fimul
mov
mov
add
inc
retf
mov
(bad)
adc
jge
in
(bad)
cmp
or
cmc
es
lds
or
es
(bad)
fsub
mov
in
cmps
mov
and
les
fist
(bad)
addr16
mov
cdq
ficom
inc
aad
mov
push
mov
cli
(bad)
not
js
cmp
cdq
ins
mov
sbb
fsubr
inc
aad
or
push
ins
js
xchg
ins
sbb
push
cmp
jge
cdq
fisubr
movs
cld
inc
int3
(bad)
in
cmp
jne
jns
jmp
bound
dec
repnz
in
adc
stc
jmp
pusha
xchg
xchg
mov
mov
cmp
int3
push
shl
lock
sub
xor
jmp
mov
push
mov
cli
cmp
scas
mov
shr
sbb
jnp
push
mov
push
imul
pop
lds
(bad)
mov
test
push
and
dec
pusha
call
pop
and
pop
fs
scas
movs
push
in
xchg
js
loop
js
xor
mov
mov
fidivr
mov
adc
adc
shr
outs
aad
imul
jg
popa
out
or
in
cmp
cs
mov
lods
js
enter
repnz
push
loopne
push
pop
mov
dec
es
xor
mov
aad
imul
lods
pop
or
mov
jp
sub
nop
adc
push
inc
lahf
and
sbb
xchg
nop
call
(bad)
push
mov
dec
cmp
or
mov
adc
cmps
out
iret
cwde
mov
or
xor
sub
xor
call
clc
push
ja
adc
imul
shl
sub
rcl
test
es
(bad)
xchg
push
and
sti
scas
inc
sub
pop
add
xchg
mov
ss
xor
fbstp
jge
cmp
jo
pop
jbe
rcr
cmp
dec
jmp
pop
call
add
add
mov
jle
gs
lahf
xor
push
add
pop
mov
loope
xchg
lods
shl
or
in
std
lods
inc
call
push
xchg
xor
inc
pop
out
mov
js
popa
dec
retf
mov
pop
mov
ror
jns
movs
(bad)
out
mov
xor
fs
jns
sbb
xor
out
sbb
xlat
and
xchg
add
mov
or
call
js
int3
mov
fnsavew
fstp
dec
(bad)
clc
cli
icebp
mov
hlt
ja
retf
std
aad
mov
jno
xchg
pop
cmc
jecxz
pushf
(bad)
push
mov
dec
sub
push
icebp
jb
hlt
(bad)
xor
xor
movs
cmp
imul
call
outs
fst
inc
push
sbb
ret
retf
xor
pushf
out
cli
xchg
pushf
lea
mov
sbb
cmps
sbb
jge
jb
mov
inc
mov
and
sbb
in
inc
mov
aam
fwait
xchg
xor
mov
out
scas
int
(bad)
cmp
gs
sub
(bad)
adc
stos
mov
ret
icebp
es
cmc
je
fwait
sbb
jno
pop
sahf
mov
jae
movs
test
dec
sub
adc
ds
mov
cmps
lods
imul
xor
mov
nop
pop
cmp
jl
xlat
hlt
xchg
fcmovu
xor
add
lahf
das
mov
lea
xchg
inc
(bad)
jl
test
ret
sbb
outs
in
call
dec
mov
jp
xchg
xchg
test
cmp
inc
test
fs
inc
mov
or
xchg
shr
jbe
ret
jg
in
lds
ror
xchg
jo
in
outs
pop
pop
cmp
in
cmc
inc
ret
push
das
and
ins
popa
xchg
dec
push
lods
and
xor
sar
(bad)
ins
cmp
std
add
mov
mov
sbb
push
cmps
cmps
push
push
pop
ret
inc
dec
fs
cmp
arpl
(bad)
in
enter
pop
(bad)
mov
arpl
call
or
ja
cld
pop
cmp
mov
ret
(bad)
pop
sar
int3
lea
mov
test
add
xchg
mov
xchg
js
daa
xor
in
pop
adc
test
push
fidivr
jge
sub
lahf
ins
jmp
es
out
push
cmp
das
cli
and
popf
hlt
popa
icebp
xchg
aas
les
add
and
push
out
clc
jb
sti
mov
dec
xchg
jae
jp
cmp
mov
add
scas
adc
or
std
cmp
test
fwait
xlat
or
cmp
jmp
jg
sub
scas
ret
push
lods
addr16
dec
push
arpl
jg
lods
inc
xlat
loopne
add
dec
inc
aam
stos
jle
leave
adc
mov
pop
sub
icebp
adc
mov
and
enter
or
sar
data16
and
pop
mov
adc
jns
xchg
mov
mov
je
adc
nop
sub
lods
data16
into
fwait
pop
pop
sbb
cli
enter
pusha
fmul
inc
stos
mov
dec
mov
scas
inc
les
shr
test
jp
jmp
mov
out
jg
jmp
(bad)
(bad)
sahf
cmp
in
data16
ret
(bad)
(bad)
cmovs
nop
clc
mov
xchg
enter
pop
pop
icebp
cwde
(bad)
in
fidivr
pop
in
cmps
ja
fstp
fwait
ret
(bad)
(bad)
sbb
sbb
in
(bad)
mov
xor
mov
pop
in
sti
lea
push
sar
xor
xor
arpl
xchg
stos
pop
lods
clc
not
or
cs
retf
or
xor
mov
and
ret
lds
loope
push
add
dec
mov
lock
or
mov
jle
mov
mov
mov
out
xchg
repz
jbe
and
xor
ret
shr
lock
enter
push
pop
not
ins
test
push
mov
adc
mov
test
pop
sub
dec
mov
pop
arpl
stos
adc
imul
jb
mov
adc
pop
retf
xor
mov
mov
push
sub
jne
movs
cmp
popa
sbb
dec
pusha
mov
push
jge
fdivp
inc
mov
retf
scas
jg
jmp
jne
daa
loopne
cmp
jle
adc
cmc
add
shl
je
icebp
dec
call
cmp
movs
outs
rol
repz
jge
sub
pop
(bad)
not
lods
dec
shl
mov
ds
ja
cmps
rcr
cmps
mov
fiadd
jl
daa
adc
lock
push
push
in
add
xchg
icebp
stos
in
cmp
adc
jns
icebp
imul
cmp
loope
push
or
push
xchg
inc
aam
aam
mov
and
jae
(bad)
retf
icebp
sub
adc
mov
mov
add
fsub
popa
fadd
cmp
or
call
iret
add
jne
dec
lahf
test
push
dec
hlt
into
pop
adc
ins
and
and
inc
not
cld
inc
loope
cmp
xor
mov
out
int
icebp
and
sub
outs
pop
inc
pop
push
imul
cmc
xor
mov
es
jno
ret
mov
mov
jb
scas
fsubr
arpl
jmp
push
cmp
movs
aad
xchg
push
shl
(bad)
jp
cmp
xor
mov
ins
fist
outs
test
scas
inc
pop
test
sbb
mov
aam
movs
sbb
jns
xor
arpl
clc
fdivrp
sub
push
retf
pop
pushf
aaa
jne
mov
pusha
ins
mov
std
and
popf
sub
xchg
push
sbb
pop
div
rcr
xor
popa
and
(bad)
xor
mov
sbb
sbb
clc
sar
mov
mov
mov
mov
jl
dec
mov
in
mov
es
dec
sub
test
and
icebp
(bad)
xor
sbb
in
cdq
mov
outs
shr
into
sti
jl
and
jmp
inc
test
sahf
jo
fadd
pushf
das
ss
popf
fidivr
ins
mov
jae
data16
add
lods
outs
(bad)
sar
ja
movs
outs
test
xor
out
xchg
xor
ja
ss
loop
aaa
inc
outs
sti
sbb
jne
(bad)
fisttp
push
jbe
xor
jmp
xchg
jb
bound
and
out
cmp
pop
test
add
push
in
rcl
sbb
rcl
sub
lahf
test
in
popf
rol
mov
aas
data16
jb
into
ror
sbb
dec
es
popa
adc
sbb
out
pop
nop
in
push
test
inc
jle
xor
push
mov
cmp
jg
call
fucomip
push
fst
xor
push
or
lods
mov
sub
mov
fucomp
scas
jl
fisub
jae
popa
rcr
das
out
xchg
test
outs
shl
pop
retf
mov
pop
aas
xor
pop
ror
xchg
cmp
mov
jo
cmovp
jp
cwde
(bad)
cmp
add
jle
push
stos
ret
cdq
pop
fsub
(bad)
jbe
sbb
nop
cld
les
cwde
push
adc
(bad)
adc
cmps
xchg
repnz
xchg
and
jmp
mov
pop
movs
lahf
push
inc
cs
push
repz
push
fld
(bad)
push
lods
enter
bound
scas
and
fwait
dec
arpl
retf
ds
(bad)
nop
adc
test
adc
mov
movnti
jge
lock
les
sbb
test
mov
es
ficom
cmps
btc
pop
retf
(bad)
mov
mov
scas
lahf
icebp
add
pop
adc
xchg
sub
or
jae
or
dec
pop
mov
sbb
into
mov
pop
push
ins
inc
pop
out
call
imul
jo
jg
cs
jl
jmp
sub
out
lds
iret
fst
mov
or
stos
das
add
(bad)
in
jb
and
jbe
(bad)
push
popa
xchg
outs
call
dec
add
gs
loop
fsub
sbb
rcr
test
(bad)
adc
inc
call
retf
cld
fld
inc
mov
sbb
aam
inc
cli
xchg
addr16
mov
out
pop
inc
and
loopne
imul
jbe
gs
sub
ror
data16
(bad)
stos
and
inc
jge
fist
cmps
cmp
mov
mov
jmp
popf
out
inc
mov
leave
adc
adc
mov
pop
test
mov
xor
mov
icebp
sbb
xchg
dec
push
popa
repnz
add
jno
in
fs
bound
sub
jb
cs
cmp
jle
add
pop
out
mov
inc
inc
pop
mov
adc
and
fidivr
xchg
daa
daa
in
iret
mov
movs
push
arpl
scas
mov
sbb
sbb
push
cmp
and
ret
jl
out
push
jmp
or
jmp
inc
xor
sti
aad
xchg
cmp
imul
push
mov
xchg
retf
xchg
pop
or
and
mov
mov
pop
sub
in
(bad)
lods
mov
or
push
fdiv
retf
add
(bad)
push
and
retf
ret
jle
jno
and
(bad)
mov
push
sahf
test
pop
or
shr
add
add
push
sbb
mov
fidiv
lds
movs
es
sbb
or
fdivr
or
xor
adc
leave
and
inc
in
push
xchg
add
adc
and
mov
shr
xor
fnstcw
lods
data16
or
mov
mov
inc
cmp
rol
loopne
inc
cmps
cmp
ja
lods
jnp
repnz
inc
imul
mov
(bad)
pop
js
imul
xchg
add
out
and
jno
inc
pop
push
scas
mov
or
cmps
inc
cwde
sub
dec
mov
adc
arpl
lods
add
xchg
call
mov
stc
and
(bad)
rol
push
fisttp
out
mov
xchg
rcl
sub
dec
addr16
xor
scas
ret
or
test
mov
fidiv
cmp
mov
push
movs
push
jge
in
mov
adc
jge
sub
mov
repz
mov
dec
ret
jns
rcr
movs
aaa
scas
push
clc
out
xchg
inc
fdiv
stos
ror
div
(bad)
pop
loope
repnz
xor
mov
iret
adc
scas
pop
sbb
dec
cmps
cmp
shl
test
mov
or
not
mov
retf
sbb
mov
stos
sub
adc
mov
test
mov
enter
jg
imul
sub
(bad)
(bad)
and
push
mov
ins
das
cmps
(bad)
xchg
je
xor
in
sbb
addr16
and
sub
push
inc
imul
mov
mov
mov
cmc
lea
iret
sti
jb
or
sub
test
inc
sbb
dec
inc
call
mov
aad
xchg
dec
fdiv
jp
or
test
movs
dec
mov
adc
inc
pusha
mov
jne
imul
gs
mov
test
add
std
or
imul
retf
jmp
or
retf
add
mov
clc
outs
xor
scas
icebp
push
jb
dec
call
sbb
int
addr16
jl
mov
xchg
xor
dec
xor
out
jne
lock
clc
mov
popa
jl
aam
shl
fmul
sbb
mov
jge
push
div
mov
push
pop
test
outs
mov
sbb
dec
pop
cmp
aas
out
adc
inc
cmp
test
sahf
ds
int3
cmps
or
mov
jp
push
push
les
ds
ret
fild
and
xor
in
cmp
in
jle
add
outs
mov
ret
movs
adc
out
mov
lds
ficomp
(bad)
sub
iret
imul
outs
pop
test
xchg
pop
sti
cmp
fcmove
sub
enter
mov
movs
loop
call
cmp
lahf
mov
fld
sti
aas
cli
ficom
fmul
add
or
xor
clc
loope
mov
jle
lods
inc
mov
inc
mov
ins
ret
push
fnstsw
scas
or
mov
rcl
mov
mov
aam
sbb
cmp
lahf
cmp
das
cmp
pusha
call
out
or
xchg
add
movs
dec
je
sub
in
rol
fbstp
cmp
sub
loopne
sub
mov
stos
and
pop
es
and
arpl
test
lock
imul
and
lahf
lea
mov
mov
adc
lods
daa
xor
cmp
shl
outs
push
dec
pop
mov
add
xchg
loope
rcr
dec
ss
mov
fisubr
push
xchg
adc
xlat
or
add
mov
loop
push
mov
aad
in
cmp
icebp
pop
rep
cmps
fwait
rcl
jae
in
xor
popf
(bad)
jmp
push
add
(bad)
into
cmp
xchg
mov
pop
cmps
imul
mov
das
(bad)
and
xchg
imul
fdiv
or
pushf
jmp
jmp
fs
and
(bad)
jg
lock
loop
and
sub
iret
jl
inc
nop
ja
shl
retf
sahf
push
push
hlt
(bad)
or
ret
push
cmp
adc
jno
aad
clc
cmp
dec
retf
and
push
loop
mov
je
neg
and
setp
add
pop
in
pop
xor
in
lods
xchg
jmp
sub
xor
int
xor
in
retf
enter
sbb
outs
js
test
xchg
dec
mov
xchg
add
jl
outs
rep
and
lea
mov
push
push
into
inc
inc
ror
test
mov
je
lea
pop
mov
jb
push
jbe
nop
mov
xchg
fsubr
pop
pusha
outs
push
dec
pop
jbe
jp
mov
mov
mov
cli
iret
pusha
push
push
fisub
inc
and
or
pop
jae
mov
xor
adc
fbstp
fld
addr16
xor
ss
mov
(bad)
mov
popf
ror
and
mov
mov
dec
push
xchg
push
stc
adc
fisub
inc
cmc
adc
mov
in
pop
dec
xchg
imul
movs
add
sub
push
xor
test
jb
ins
mov
pop
xor
dec
or
mov
jecxz
mov
mov
faddp
jae
jo
sbb
xor
ss
(bad)
sar
push
mov
push
and
xor
pop
das
add
adc
(bad)
and
inc
inc
cli
fs
aad
mov
dec
addr16
fbstp
mov
(bad)
les
dec
add
add
in
div
jge
mov
int
cmp
and
stc
jne
add
shl
cmp
adc
stc
lahf
std
dec
cmp
gs
and
or
int3
lods
jnp
rol
shr
(bad)
(bad)
xor
and
popa
out
jmp
cmps
sti
ins
out
mov
adc
push
mov
sar
mov
fcmovnu
(bad)
icebp
push
popf
ror
jno
adc
in
mov
xor
fst
mov
adc
xor
ret
jns
popf
ds
inc
inc
mov
sbb
dec
cmp
pop
xor
xor
dec
cmp
mov
sbb
movs
dec
jns
pop
mov
xchg
ret
dec
jbe
es
loopne
stc
and
popa
repz
bound
cmp
lds
mov
adc
iret
int3
shl
xchg
or
int3
pop
fstp
sti
adc
add
fsub
sar
ret
push
mov
mov
xor
xchg
xor
mov
push
nop
mov
mov
add
add
push
pop
fdivr
mov
es
int3
lea
out
scas
jmp
xor
adc
sub
push
sbb
test
xor
enter
cmp
stc
in
dec
inc
inc
icebp
loop
test
jmp
in
add
add
gs
daa
adc
fwait
dec
and
loope
sbb
pop
ret
jecxz
iret
mov
or
test
icebp
pop
sbb
dec
rcr
or
mov
sbb
out
xor
fidiv
pop
and
lea
push
jb
sti
in
fisubr
pop
mov
shl
int
out
push
arpl
mov
and
dec
jle
gs
ins
mov
call
mov
enter
hlt
push
(bad)
les
cmp
hlt
cwde
ds
cli
pop
cmp
xchg
xchg
sub
mov
sbb
aad
loope
scas
cli
push
sbb
cmc
dec
aad
imul
mov
jmp
push
icebp
mov
fstp
mov
outs
push
gs
retf
movs
xor
(bad)
ret
sbb
fidivr
push
add
pushf
sbb
repnz
dec
push
push
xlat
loop
lds
add
pusha
int3
cmp
xchg
mov
jns
ins
push
rcl
mov
mov
leave
mov
cmp
push
fnstenv
sub
cmp
inc
idiv
das
xchg
mov
lea
mov
sbb
cmp
in
xor
lock
dec
popf
mov
pop
out
add
cmp
jnp
sbb
cwde
out
mov
call
es
jae
cmp
outs
outs
stc
cmp
gs
in
push
stos
dec
ja
shl
push
jge
or
dec
dec
movs
test
nop
add
mov
sbb
mov
mov
in
ret
iret
cdq
fwait
mov
ins
jbe
sub
mov
mov
jge
push
dec
shl
fimul
(bad)
imul
and
mov
push
ret
loopne
sbb
(bad)
push
scas
pop
add
out
inc
repnz
lock
xchg
adc
mov
div
enter
sub
xor
(bad)
popf
xchg
sbb
sbb
aas
mov
push
ret
jne
retf
mov
xchg
fsubr
sub
jg
in
(bad)
sbb
mov
fcom
mov
(bad)
dec
hlt
fist
jl
retf
and
xchg
jp
fs
jne
or
jecxz
xchg
pop
inc
dec
fld
xor
(bad)
aam
and
imul
(bad)
jl
mov
cld
cmp
dec
cdq
neg
jecxz
aad
leave
and
mov
ret
xchg
pop
push
jbe
inc
test
stos
dec
ret
pop
shl
out
pusha
dec
jge
das
test
fs
or
push
sbb
inc
(bad)
cmp
lea
pop
aas
enter
fmul
mov
jns
in
cdq
jnp
addr16
push
jge
cwde
dec
cdq
xor
dec
movs
xor
mov
inc
and
mov
cli
push
inc
push
inc
mov
jnp
mov
test
addr16
test
mov
jg
gs
mov
mov
cmp
jne
mov
aam
sar
popf
mov
in
add
pop
ret
stc
sbb
mov
xchg
lea
pop
in
mov
lods
push
int
mov
test
mov
xchg
and
stc
sub
pop
out
out
jbe
aas
fwait
popa
aas
into
repnz
lods
bound
test
sub
ja
(bad)
lods
xor
call
push
add
aas
inc
push
lahf
test
(bad)
or
pop
xchg
xor
and
cmps
into
sar
in
cmps
inc
mov
test
outs
ja
(bad)
or
adc
cmps
or
mov
xchg
fwait
and
sub
icebp
sbb
jp
mov
pop
push
imul
inc
sbb
scas
test
es
pop
ror
(bad)
push
fsub
clc
cmp
aad
mov
mov
aaa
xor
pop
jne
(bad)
call
dec
pop
xor
fnsave
dec
jno
in
into
pusha
ja
add
jmp
fimul
sbb
inc
lods
add
dec
mov
and
pop
(bad)
mov
les
inc
add
ins
dec
repnz
mov
jge
inc
inc
cmps
adc
sahf
jmp
sbb
sbb
gs
or
jecxz
shr
loop
jae
add
and
out
into
xor
jg
mov
dec
push
(bad)
mov
fdivr
sahf
xor
fist
scas
or
mov
jge
(bad)
fstp
adc
xor
gs
mov
mov
cmps
xor
fbld
lods
cmp
dec
clc
inc
je
jbe
cmp
cmp
inc
lock
fnstenv
xlat
cmc
xchg
shl
pop
jbe
or
add
inc
xor
test
call
outs
jb
add
stos
and
stos
test
data16
retf
inc
addr16
or
mov
xor
sahf
xchg
data16
inc
push
(bad)
(bad)
cmp
push
mov
test
push
in
mov
call
rcr
cld
movsx
push
bound
dec
ds
test
es
add
inc
stc
enter
sub
adc
mov
xor
or
cmovp
enter
dec
retfw
scas
mov
push
and
and
outs
dec
sub
jmp
jbe
cli
in
jp
inc
lds
cmp
mov
shl
push
not
xchg
mov
stos
push
xlat
sbb
in
mov
jno
ins
retf
sti
js
mov
mov
cmps
rol
jmp
repnz
nop
femms
pop
loop
and
int
jg
and
push
add
ins
in
sub
arpl
push
inc
dec
lahf
mov
cmp
out
(bad)
ds
xor
cmp
aas
or
(bad)
inc
xchg
std
mov
sub
xchg
scas
and
shr
daa
shl
xchg
or
push
div
mov
mov
xchg
add
test
pushf
push
jmp
fwait
sbb
loop
xchg
into
mov
retf
pop
push
je
xchg
push
inc
fs
mov
popa
ss
xor
xchg
push
imul
add
xor
pop
mov
adc
mov
cmp
inc
xchg
sbb
jnp
or
pop
adc
dec
iret
jnp
fimul
pop
fsub
fcom
cmps
mov
lahf
mov
xchg
sub
sar
fld
sub
or
sbb
stos
cli
pop
push
cmp
add
inc
mov
shl
test
das
cmp
push
mov
mov
pop
fisubr
dec
imul
(bad)
fiadd
xchg
pop
test
gs
cdq
(bad)
mov
repz
rcr
scas
push
and
cmps
cmp
mov
cmps
xchg
ss
pop
shr
adc
dec
jecxz
sahf
shr
fnstcw
dec
push
xlat
cmp
pop
inc
pop
mov
shr
mov
pop
(bad)
mov
imul
and
and
inc
into
mov
(bad)
push
inc
push
and
pop
shl
or
stos
push
xor
dec
cdq
pop
inc
mov
cs
int
(bad)
jg
pop
push
clc
fild
adc
jne
push
mov
shl
cmps
jnp
xor
add
loope
and
inc
mov
add
sub
mov
mov
dec
mov
inc
das
stc
enter
add
jle
jge
dec
mov
sub
and
cmp
inc
js
sbb
retf
mov
nop
test
out
cmp
adc
sub
mov
jnp
fadd
into
ds
cmp
in
arpl
mov
mov
and
fwait
xchg
inc
int
mov
dec
jne
neg
int3
scas
push
adc
push
mov
es
ins
pop
je
mov
adc
lods
sbb
xlat
pop
(bad)
loope
aad
int
mov
mov
mov
sub
dec
push
or
shr
sub
jmp
pop
mov
mov
retf
pop
fsub
je
fbstp
into
or
dec
inc
shl
out
popf
test
push
and
test
lods
fwait
xor
es
std
in
pushf
pop
cli
ret
pushf
imul
add
mov
dec
icebp
fwait
and
jp
inc
into
add
fstp
out
stos
or
popf
ret
ror
out
inc
lds
sbb
rcl
in
test
scas
(bad)
jne
xchg
xchg
dec
mov
dec
lahf
enter
mov
xlat
jmp
add
xchg
data16
pop
inc
inc
xchg
xchg
es
cli
mov
xchg
movs
cmp
pusha
std
mov
and
les
dec
fld
push
sbb
in
int
out
mov
ror
test
xchg
iret
sub
pop
cmc
fisubr
inc
jmp
add
push
sub
stos
mov
clc
addr16
clc
adc
imul
rol
lahf
fcmovnu
loop
repz
pushf
leave
or
sbb
pop
dec
inc
mov
jmp
js
mov
cmp
pop
ds
lds
jns
xor
pop
stos
and
or
sub
pop
xor
ds
out
pop
pop
ror
lods
(bad)
das
ja
repnz
push
fwait
sub
addr16
dec
cmp
fcmovne
shl
stos
cmp
inc
(bad)
retf
ret
mov
scas
jne
jne
add
sbb
mov
dec
fsubr
ins
or
jo
imul
repnz
mov
xchg
mov
pop
ds
neg
jge
adc
nop
ror
jl
dec
and
ret
lock
jo
mov
jmp
xchg
or
dec
cmp
es
add
fisttp
jmp
push
xchg
aaa
or
or
and
cmps
mov
fcomi
sar
lea
addr16
pop
ret
lea
pop
int
mov
pop
leave
sub
lods
pop
fwait
push
and
loope
add
sbb
data16
sbb
(bad)
mov
adc
inc
add
repz
xchg
push
push
inc
xchg
cmps
pop
mov
cwde
or
adc
mov
mov
cmova
push
fcomp
out
mov
or
scas
pop
sub
cmps
loop
inc
out
clc
lock
sbb
push
mov
in
in
mov
(bad)
aad
or
call
pusha
mov
bound
pop
leave
push
fiadd
adc
cs
imul
loope
mov
imul
aam
and
outs
ret
jbe
in
sar
add
test
mov
data16
push
pop
test
cmc
fs
cmc
cmp
leave
push
jecxz
push
std
xchg
dec
pop
loope
pop
mov
sub
adc
sbb
rcl
push
aas
lea
or
sub
(bad)
or
loope
jmp
pop
adc
stc
adc
lock
jl
shl
mov
and
test
pop
pop
fisub
sub
add
out
aaa
iret
cli
sahf
or
mov
push
sahf
jbe
fcom
shl
sub
adc
jmp
in
(bad)
mov
pop
js
dec
mov
pop
and
sbb
data16
adc
xchg
or
push
out
mov
sub
mov
inc
fwait
imul
push
xchg
add
adc
cmp
xchg
mov
movs
out
fistp
rcr
stos
and
ins
inc
mov
sbb
sahf
sub
fsubr
or
ret
enter
jmp
ins
add
jb
jb
inc
ret
enter
sub
mov
jns
push
call
jg
outs
jb
or
sbb
inc
repz
dec
push
add
or
mov
(bad)
cld
sti
add
loop
js
pop
outs
mov
xchg
sbb
jnp
stos
push
add
test
sbb
std
push
stos
push
mov
pop
cli
pop
stos
fcomip
shr
scas
test
lahf
stos
dec
adc
shl
pop
xlat
pop
dec
adc
dec
out
push
mov
jmp
mov
add
and
and
sbb
(bad)
xor
inc
pop
mov
and
enter
int
shl
(bad)
push
mov
inc
mov
pushf
enter
stos
shl
push
xor
lds
cmps
retf
(bad)
repz
jg
cmps
jle
leave
pop
pop
mov
inc
dec
adc
push
pop
mov
xchg
out
mov
add
or
fisubr
adc
dec
or
xor
lea
dec
test
xor
scas
add
sub
xor
es
jbe
jno
leave
jg
(bad)
pop
cdq
(bad)
jno
xchg
inc
mov
(bad)
je
aad
sub
cmc
xchg
xchg
rol
(bad)
jecxz
cmp
push
jae
mov
jecxz
fs
cld
cs
pop
test
mov
xor
dec
in
sbb
mov
push
sub
mov
out
push
sbb
inc
or
test
outs
fcomp
std
movs
neg
gs
imul
pop
sbb
inc
dec
loope
test
in
jl
mov
and
dec
add
jno
jmp
inc
lea
mov
jno
mov
mov
(bad)
adc
sti
mov
mov
fst
push
add
cmp
dec
xor
sub
hlt
push
das
xchg
dec
mov
stos
imul
leave
pusha
shl
pop
icebp
or
leave
xor
pop
daa
sub
loopne
adc
cld
add
jle
or
imul
dec
jo
stos
mov
cmp
mov
push
ret
mov
mov
mov
ret
xchg
mov
lock
mov
push
xchg
out
and
sub
es
sub
popa
cmp
push
out
rcr
jmp
cmps
push
out
cmps
in
addr16
sti
lods
ins
and
aad
jns
ja
xchg
mov
leave
push
jg
cmps
and
add
lods
pop
sbb
pop
cmc
in
dec
jg
sar
lods
push
mov
push
sub
jmp
cwde
dec
jbe
and
test
scas
mov
jbe
(bad)
adc
fstp
sahf
neg
sbb
xchg
in
inc
mov
adc
lock
sub
and
xor
add
lods
jnp
out
fsub
push
jmp
mov
int
or
mov
xor
cmps
and
xchg
stos
bound
mov
adc
aad
mov
jbe
mov
(bad)
push
test
adc
push
in
mov
in
pop
test
call
xchg
aas
mov
(bad)
sub
movs
scas
mov
xchg
das
cmp
mov
nop
mov
adc
pop
lods
jno
xchg
fcomp
jns
call
xor
inc
inc
test
pop
push
xor
fcmove
mov
and
scas
adc
cdq
mov
outs
daa
mov
inc
push
adc
cmp
movs
cmp
sub
pop
dec
bnd
jmp
mov
cmp
sub
int
nop
sbb
(bad)
(bad)
and
movs
out
lahf
xor
rcr
das
push
sbb
outs
(bad)
xchg
mov
bound
call
(bad)
and
ins
(bad)
xor
push
test
push
jae
and
dec
inc
icebp
mov
xchg
ins
mov
ret
inc
stc
cmp
xchg
add
add
cmps
loope
cmp
adc
jo
xlat
mov
in
push
pop
hlt
xchg
cmp
mov
sbb
lods
push
or
das
in
pop
jae
outs
je
push
leave
sub
sub
fisubr
xor
cs
sbb
sub
cmp
push
push
adc
xchg
mov
outs
fsub
lahf
bound
test
das
repnz
pushf
cmp
jb
jnp
rol
mov
aas
sbb
in
popa
dec
aam
fsubr
sbb
cli
push
sti
xchg
test
outs
xchg
cs
enter
cmp
dec
jmp
loopne
jbe
ins
daa
cs
add
mov
sahf
cmp
fisub
jmp
cmp
cli
sbb
push
add
(bad)
jmp
mov
sbb
cmp
loope
adc
inc
jne
and
cs
push
inc
popa
xchg
mov
pop
(bad)
ret
xor
rcr
pop
mov
mov
ret
into
jno
rol
cmp
cmps
mov
int3
jno
fwait
xor
sbb
xchg
cmp
out
mov
rcr
and
xchg
enter
mov
cs
mov
and
pop
shl
push
test
or
(bad)
adc
or
imul
out
push
xlat
mov
adc
movs
mov
ror
loopne
sbb
mov
repnz
js
inc
daa
sub
out
sar
stc
xor
mov
les
mov
movs
jle
repz
imul
cs
pop
aas
(bad)
(bad)
cli
lock
xchg
in
cwde
daa
push
xor
inc
movs
outs
in
fwait
scas
and
inc
xchg
push
pop
cmp
cmp
rcl
mov
(bad)
sbb
inc
xchg
or
fwait
retf
push
and
sub
imul
sbb
and
vcmpsd
xchg
(bad)
mov
mov
arpl
jge
inc
adc
push
xchg
sbb
adc
sbb
repz
ror
cmc
adc
js
xchg
jne
pop
mov
xchg
mov
ret
lea
inc
aas
mov
xor
bound
test
xor
shr
cmp
inc
pop
and
or
(bad)
into
mov
mov
leave
mov
xor
addr16
cmps
jne
push
xchg
test
test
mov
in
pop
js
mov
int3
psubsw
xor
fidivr
add
inc
xchg
cmps
jmp
jp
ds
rcl
ret
fld
mov
xchg
push
jl
xchg
xchg
imul
dec
int
and
xchg
and
mov
cmp
sbb
mov
add
and
ss
ret
outs
loopne
into
stos
fidivr
sbb
adc
cmp
aam
cli
nop
sbb
dec
(bad)
pusha
inc
pop
mov
call
cmp
fs
xchg
dec
and
cmps
addr16
cmc
add
loop
xchg
add
add
jl
and
push
sub
jmp
and
mov
mov
sub
in
shr
retf
jno
mov
rol
aad
xor
xor
lds
sbb
jl
outs
(bad)
fcomi
xor
xchg
mov
mov
ficomp
test
scas
aam
mov
add
and
mov
mov
loop
mov
mov
adc
mov
enter
and
stos
stos
fnstsw
cmp
in
add
mov
adc
fsubp
xor
inc
cmp
clc
js
pop
gs
push
xchg
add
es
mov
(bad)
fcomp
stc
pusha
in
sub
jmp
xor
mov
cmc
jmp
mov
mov
xchg
sti
sbb
loop
cld
sbb
nop
jg
shl
jo
xor
das
mov
push
mov
inc
pop
repnz
inc
pop
dec
(bad)
outs
xor
call
sbb
inc
outs
rol
enter
sub
clc
in
(bad)
into
push
inc
xchg
repnz
and
(bad)
mov
(bad)
inc
adc
outs
mov
loopne
push
(bad)
sbb
or
pushf
imul
div
fwait
mov
stos
ins
iret
mov
sti
lds
stos
xor
push
scas
dec
cmps
or
cmc
fwait
and
push
test
dec
mov
in
add
in
mov
aam
push
pop
lods
sbb
push
add
jmp
push
or
mov
in
nop
cmp
movs
adc
pmaxsw
sub
sahf
(bad)
cmps
mov
cli
cli
push
mov
pop
jmp
jno
fwait
je
xchg
pop
or
fwait
adc
popf
sbb
nop
cwde
add
add
aaa
lds
dec
int3
js
xchg
inc
pop
adc
inc
adc
or
inc
mov
shl
push
lahf
or
aad
or
mov
push
pop
fcomp
jb
pop
sub
jno
ror
jecxz
fcom
and
stc
mov
adc
test
jmp
out
bound
popa
pusha
adc
xor
xchg
ja
cld
cwde
fcomp
out
xor
inc
cld
sbb
and
sub
xchg
sar
je
and
cmp
mov
inc
adc
fcmovb
ret
lods
dec
push
mov
mov
addr16
sub
imul
jo
pextrw
aaa
dec
pop
pop
stc
push
jp
fwait
scas
mov
sub
add
mov
imul
add
(bad)
mov
pop
ins
rcr
mov
pop
lods
xor
xchg
cli
je
sub
pop
imul
retf
cmp
mov
inc
into
push
mov
mov
cmc
push
call
lock
push
out
arpl
pop
xor
cmc
jg
(bad)
cwde
pop
int3
out
sbb
(bad)
cli
shr
test
sbb
xchg
push
daa
xchg
sbb
sub
enter
js
test
(bad)
add
add
mov
mov
mov
xor
or
retf
cli
jb
cli
sbb
stc
out
in
repz
mov
hlt
fs
cmp
jae
aam
pop
adc
xor
mov
cmps
icebp
push
out
sbb
cdq
adc
or
aad
cmc
out
cmp
sbb
movs
mov
sub
xchg
xchg
and
sub
dec
inc
cmp
push
mov
inc
push
loop
jle
bound
ficom
fldenv
push
sbb
repnz
call
daa
outs
cmp
adc
add
cmp
mov
pop
adc
pop
fwait
retf
je
xchg
rcr
jne
add
rcl
cwde
cmp
mov
mov
out
xchg
imul
dec
addr16
fcomp
pop
xor
cs
xor
jle
ins
ins
push
sub
pop
push
mov
and
inc
(bad)
xor
ins
stc
lahf
outs
cmp
mov
mov
mov
push
fisub
cli
in
push
call
repnz
test
rcl
loop
and
imul
jmp
mov
test
daa
push
and
faddp
popa
imul
daa
fadd
pop
arpl
and
pop
mov
neg
or
(bad)
cmps
test
or
mov
pop
movs
mov
add
stc
mov
aaa
jnp
sub
aas
cmp
cmp
adc
icebp
fcom
sub
push
repnz
fimul
in
sub
mov
sbb
sbb
and
test
dec
or
jge
cmp
mov
add
dec
inc
repnz
sub
pop
xchg
(bad)
(bad)
sbb
(bad)
push
lock
das
mov
bound
out
loop
fimul
loopne
cwde
cmps
(bad)
addr16
ins
and
mov
les
ret
es
dec
mov
mov
xor
mov
fldenv
cmp
ja
aas
cwde
fwait
or
adc
dec
adc
pop
sub
enter
mov
repz
es
enter
sbb
outs
fs
loope
outs
inc
push
addr16
cmp
pusha
test
cmp
mov
pusha
test
fwait
daa
data16
inc
das
jne
jl
xchg
retf
cmp
jl
xchg
ja
mov
mov
pop
xor
mov
xor
(bad)
in
leave
pop
pop
cmps
cld
fmulp
cld
lods
popf
or
dec
je
pop
lahf
mov
sbb
movs
dec
not
push
mov
mov
pop
and
ins
cmc
mov
add
jl
hlt
and
repnz
repz
xor
and
pop
das
shl
loope
test
ret
mov
sbb
sbb
adc
rol
push
cmp
pop
and
vmaxps
dec
xor
(bad)
aas
dec
pushf
fmul
cmp
(bad)
jno
cs
lds
inc
jmp
mov
sbb
inc
sbb
cmps
lahf
pop
xlat
cmp
bound
cmp
loopne
push
cld
add
mov
adc
into
iret
or
xchg
lds
pop
push
jb
push
pop
lods
sti
inc
imul
les
xchg
sahf
jle
cmps
push
pop
loopne
std
shr
scas
les
xchg
cmps
xchg
cmp
fwait
mov
dec
loop
xor
cmps
mov
add
xchg
adc
cli
call
dec
or
pop
push
sti
mov
call
mov
adc
add
dec
addr16
and
pop
pushf
clc
mov
mov
(bad)
jno
push
push
(bad)
popa
inc
icebp
add
mov
add
or
jnp
mov
popf
sbb
out
scas
cmp
mov
test
lock
mov
dec
cmp
loope
(bad)
imul
ins
(bad)
xchg
enter
mov
cmc
repz
dec
xor
or
nop
jo
pop
pop
or
imul
inc
sub
mov
and
mov
cmp
mov
inc
aas
pop
xchg
push
and
leave
inc
push
fst
xchg
ds
xchg
(bad)
or
sbb
test
loopne
mov
add
jecxz
popa
pop
mov
div
sub
push
jne
out
mov
fisub
icebp
(bad)
cld
jne
and
fstp
mov
in
data16
ret
dec
int3
mov
ret
cmp
in
pop
sbb
fimul
mov
xlat
push
push
mov
xchg
test
cli
xor
ficomp
out
add
jl
rcr
inc
xchg
jecxz
(bad)
pop
cmp
lea
jnp
movs
push
and
nop
(bad)
sar
sti
xchg
xor
call
add
mov
xor
cmp
pop
jl
fsubp
gs
mov
dec
imul
rcr
mov
push
cmp
loope
loopne
shl
stos
xchg
jl
xor
retf
push
js
shl
ins
jno
cld
mul
or
enter
mov
pusha
stos
jge
mov
sbb
pop
pop
mov
pop
sahf
cmps
dec
sbb
out
aam
loopne
inc
ret
mov
out
adc
jecxz
and
xor
mov
push
inc
iret
jl
adc
dec
cmc
ret
pop
into
and
fiadd
push
pop
mov
xchg
sub
pushf
xor
lahf
mov
xchg
mov
or
aad
cmp
dec
int
aaa
mov
repz
sbb
mov
gs
ins
and
cmp
dec
pop
cli
retf
pop
push
xor
push
movs
cmps
jbe
xor
add
(bad)
jmp
sbb
mov
inc
push
inc
cmp
add
outs
icebp
lods
and
idiv
push
sti
dec
add
xchg
(bad)
dec
push
bound
dec
popa
cmp
fisttp
es
shr
xor
test
mov
call
jns
stos
das
inc
and
inc
xchg
xor
call
jecxz
inc
mov
gs
test
icebp
jae
test
retf
bound
jb
inc
lea
cmps
inc
cmp
push
pop
sbb
ins
push
sahf
popa
pop
push
push
adc
loopne
cmps
fwait
icebp
nop
adc
(bad)
and
ss
add
retf
out
or
inc
cli
pop
fild
cs
and
stc
in
test
out
out
dec
cmpps
shl
sbb
add
lahf
mov
adc
mov
mov
add
push
add
jle
and
xor
dec
mov
and
xchg
call
xor
cld
xchg
out
js
push
ins
test
movs
pop
out
mov
test
mov
test
sbb
cmp
rol
xor
adc
or
mov
adc
mov
xchg
in
movs
js
out
inc
jmp
in
clc
nop
jbe
jnp
iret
ret
push
lock
or
out
test
or
or
push
(bad)
inc
(bad)
(bad)
push
mov
push
hlt
xor
jecxz
in
hlt
cmp
cmp
jnp
push
add
add
frstor
jl
stos
cmps
movs
xor
push
into
idiv
jge
add
mov
and
fild
inc
je
push
inc
loope
xchg
mov
cmp
nop
sbb
cmp
leave
outs
mov
xchg
aam
stos
jmp
addr16
enter
arpl
cli
jo
leave
scas
adc
je
enter
xor
scas
cli
xchg
lock
jmp
push
in
mov
retf
xlat
pop
ins
addr16
xchg
add
stc
jle
mov
clc
mov
fisubr
pop
cwde
mov
sub
adc
adc
sub
sbb
cmps
lods
mov
out
test
aas
shl
mov
add
out
mov
fsubr
bound
cli
mov
retf
test
nop
dec
push
rcl
cld
inc
pop
or
mov
pop
xor
nop
out
ror
jle
xor
cmp
iret
stos
add
inc
jae
scas
and
jb
popa
mov
arpl
mov
fsubr
adc
(bad)
or
mov
js
jle
repnz
mov
cmc
bound
popa
jle
out
sub
(bad)
ja
pop
or
xchg
push
cld
mov
lds
mov
out
es
mov
lods
push
fwait
adc
imul
ror
xchg
xor
in
push
scas
adc
aad
js
mov
pop
out
jns
fs
push
jmp
ins
xor
mov
mov
dec
dec
(bad)
test
or
mov
xor
leave
int
ja
dec
mov
iret
call
(bad)
mov
ret
sbb
jp
mov
movs
ror
and
movs
pop
or
sub
sub
mov
lahf
mov
cld
(bad)
outs
imul
xchg
push
fimul
out
pop
pop
cmp
int3
jnp
or
push
add
lahf
mov
push
jns
push
push
sub
retf
test
fisttp
outs
pop
test
sahf
pop
pop
and
stos
jge
icebp
sbb
xchg
ret
mov
in
sbb
pop
stc
out
test
outs
test
mov
cmp
cmps
in
cwde
push
ins
mov
adc
dec
and
push
(bad)
int
aas
and
or
and
jo
out
lahf
jo
ins
ss
mov
pop
fist
jg
ins
movs
loop
pop
mov
int3
cmc
lea
mov
push
pop
not
call
jae
inc
out
repnz
(bad)
outs
xchg
cmc
iret
pop
pop
sbb
leave
mov
push
outs
or
in
bound
pop
jl
pop
add
jl
or
jmp
les
mov
mov
mov
aam
cmp
push
(bad)
sti
or
outs
or
jmp
(bad)
repz
sar
out
add
xor
aad
mov
data16
fs
xor
adc
adc
enter
jle
test
aam
fdivr
mov
in
mov
addr16
push
and
in
sbb
jbe
mov
fdivr
pop
push
enter
mov
jno
and
add
in
add
out
pop
jg
push
push
add
mov
mov
jnp
leave
gs
repz
sbb
mov
rol
adc
cmps
and
cmps
dec
out
mov
xor
bound
nop
inc
and
cmps
xor
xchg
jbe
sub
sti
mov
call
out
push
pop
and
(bad)
xchg
pusha
outs
xchg
dec
sub
fst
int3
fdivr
retf
retf
add
xchg
fs
jp
movs
push
jle
lahf
arpl
arpl
mov
dec
cmp
or
or
push
(bad)
aam
rcl
jnp
std
cwde
and
or
and
dec
fcmovu
jmp
rcr
sbb
hlt
pop
mov
add
jnp
adc
xchg
and
ret
push
shr
stos
mov
jle
js
sbb
arpl
(bad)
push
xor
push
bound
repz
dec
or
ret
jl
ret
bound
scas
xchg
mov
cmp
xlat
inc
sar
push
push
push
arpl
xchg
xor
call
and
xlat
inc
out
imul
loope
jb
push
sbb
fild
push
cli
add
xchg
pop
mov
push
(bad)
jno
std
dec
push
stos
repnz
and
loope
xchg
mov
mov
bound
and
lods
jl
in
int3
and
and
ins
push
mov
push
in
mov
lods
mov
test
xor
pushf
out
and
jo
les
std
xchg
stos
sub
xlat
inc
mov
sbb
dec
out
sub
sub
mov
sbb
cmps
leave
dec
sub
and
pop
pop
(bad)
rcl
push
adc
movs
div
pushf
push
jno
je
mov
fidiv
das
mov
mov
leave
mov
mov
cmps
xor
popw
mov
outs
pushf
enter
adc
dec
dec
cmp
mov
sar
and
and
jnp
(bad)
dec
(bad)
pop
fs
xchg
loopne
loop
xchg
rcl
popf
call
cs
call
fcmovnb
in
div
push
mov
jnp
ret
hlt
xchg
cli
in
hlt
js
mov
(bad)
stos
out
or
or
lods
lock
fdiv
xchg
stos
inc
icebp
add
es
rcr
into
mov
adc
mov
rcl
pop
cmps
inc
mov
adc
fsub
call
dec
mov
or
mov
jge
int
pop
dec
rcr
or
pop
test
sbb
neg
mov
test
cmp
mov
push
lock
push
and
pop
movs
sub
call
mov
mov
scas
push
adc
rol
int3
add
mov
jno
cmp
jp
or
dec
mov
(bad)
push
lahf
push
test
hlt
sbb
arpl
cld
(bad)
out
pushf
fcom
xchg
ret
push
cmps
std
mov
fimul
jno
sbb
inc
mov
imul
and
loop
mov
ins
fcmovnb
push
dec
xor
lahf
and
mov
call
mov
mov
loop
mov
loope
inc
lock
push
addr16
daa
pop
test
mov
(bad)
retf
(bad)
jle
pop
and
or
addr16
mov
psadbw
add
push
test
sbb
or
(bad)
jbe
ret
ror
fsub
add
xor
push
(bad)
push
pusha
ret
cwde
ror
and
scas
or
cmp
dec
ins
das
mov
jno
mov
push
inc
(bad)
xchg
lods
adc
das
neg
daa
dec
add
sub
xor
fs
in
clc
add
add
jns
ins
cmp
cs
inc
test
sub
shl
xor
xchg
add
aam
cmp
pop
xchg
icebp
lds
into
mov
adc
pop
xchg
xor
push
xchg
jb
test
jge
sahf
mov
mov
push
xchg
pop
(bad)
(bad)
movs
mov
adc
mov
lds
clc
xor
jae
dec
ficomp
xchg
pop
loopne
mov
psubw
xor
retf
push
and
mov
pop
shld
out
inc
enter
int3
mov
sbb
mov
mov
fnclex
aas
arpl
pop
lock
mov
jg
lds
(bad)
mov
sub
jae
or
dec
ret
inc
mov
mov
xchg
fstp
aaa
es
aaa
fs
push
gs
mov
jno
scas
pop
cmp
test
adc
aaa
imul
jbe
jae
mov
and
adc
sub
je
in
(bad)
retf
xor
pop
ja
out
xor
add
cli
fiadd
int3
cmp
lods
stos
jns
adc
in
movs
mov
aaa
push
fsubr
add
int
je
(bad)
push
xchg
adc
fldenv
in
sbb
fadd
mov
mov
xor
gs
mov
sbb
xor
and
cmp
sahf
into
icebp
fnstsw
rol
mov
mov
or
in
out
push
mov
mov
dec
dec
jno
pop
jmp
fmul
mov
pop
aaa
and
int
lods
movs
cmp
scas
inc
ficomp
pop
call
push
outs
mov
jmp
inc
aas
(bad)
movs
into
xor
jb
dec
ret
xchg
je
pusha
jnp
push
push
push
dec
daa
or
neg
in
ret
out
sub
jne
test
sbb
les
daa
ficomp
xor
lods
push
and
and
not
out
cmp
inc
pop
rcr
dec
jg
add
mov
jg
icebp
and
les
mov
lock
mov
adc
xchg
xchg
push
xchg
push
lock
(bad)
call
fild
cwde
test
fwait
hlt
jg
inc
repz
pushf
xchg
or
dec
pop
mov
xor
sahf
call
test
pop
jns
popw
push
lds
mov
mov
out
mov
sbb
fisub
outs
aam
mov
push
ss
xor
and
mov
scas
shl
ficomp
aas
fcom
sbb
push
aas
push
adc
shl
xchg
jns
dec
mov
sub
cmp
cmps
xchg
mov
jbe
sub
and
clc
in
div
mov
call
push
imul
push
ja
pop
mov
mov
ja
imul
sbb
scas
sub
clc
and
dec
sahf
or
push
(bad)
arpl
and
xchg
ja
and
(bad)
dec
nop
pop
setle
dec
lahf
fadd
imul
sbb
mov
mov
and
aad
or
or
loop
jb
mov
aam
xor
jmp
pop
add
push
movs
mov
or
xchg
ror
daa
dec
clc
in
(bad)
push
and
mov
add
mov
dec
pop
push
cmp
nop
sub
cmc
adc
dec
int3
sti
push
xor
dec
ja
cs
add
stos
push
jb
ins
xchg
loopne
or
hlt
and
pop
movs
mov
jae
push
icebp
mov
dec
inc
fdivr
jp
sub
call
cld
sbb
pop
dec
sahf
pop
mov
mov
sbb
push
dec
in
push
adc
arpl
push
hlt
and
std
or
or
ret
rol
hlt
push
outs
mov
outs
adc
or
add
mov
fisttp
fdiv
adc
(bad)
(bad)
scas
and
pop
aas
sahf
std
lahf
clc
sbb
sbb
scas
xchg
fsubr
pop
aad
out
mov
mov
scas
push
imul
sub
daa
dec
fadd
repz
loope
adc
adc
mov
xor
push
cli
clc
in
and
icebp
jno
push
sub
and
out
pop
call
bnd
in
popf
jp
cmp
dec
xor
jne
jle
js
test
leave
adc
pop
repnz
cmps
sub
arpl
pop
out
mov
or
shr
nop
lds
stos
mov
dec
inc
aaa
(bad)
mov
cmp
pop
jg
adc
clc
mov
and
mov
movs
or
mov
adc
aaa
dec
mov
cs
out
repz
pusha
push
mov
enter
or
fist
cli
jmp
js
out
mov
mov
daa
std
and
and
mov
andnps
das
dec
nop
jb
ds
in
inc
rol
pusha
dec
jp
jmp
xchg
pushf
add
mov
push
retf
push
stos
addr16
push
sahf
fst
mov
out
ins
pop
rcr
jnp
shrd
mov
xor
cmp
movs
ins
ja
ror
movs
repz
adc
push
in
xor
jns
sbb
jmp
es
(bad)
repnz
cwde
pop
cmc
imul
imul
rol
clc
imul
stos
addr16
test
ins
lods
mov
ffreep
jecxz
ja
aas
pop
jae
jp
push
cmp
mov
cdq
(bad)
mov
or
cld
mov
loope
out
ret
pop
push
pop
and
push
out
mov
pop
xor
and
cmp
jne
dec
pop
addr16
push
fcomp
icebp
push
sbb
data16
mov
adc
jmp
mov
mov
push
sub
or
and
xlat
repnz
loopne
push
test
or
popf
stos
(bad)
jns
inc
rcl
cli
rcl
sbb
mov
arpl
dec
aam
call
cmp
xor
sub
and
les
ret
mov
popa
ror
inc
fldcw
push
xchg
cmc
call
mov
aad
out
push
jl
push
cmps
jbe
pop
jb
mov
and
cmp
mov
inc
xchg
mov
in
cmp
pushf
mov
loopne
push
shl
mov
adc
(bad)
fld
adc
inc
lods
mov
and
fidivr
sar
sbb
mov
loopne
pusha
setle
rcr
aam
popa
add
inc
lahf
jp
mov
sub
dec
add
(bad)
jecxz
jg
pop
cmp
mov
daa
iret
inc
push
outs
je
ins
rol
mov
imul
aam
jp
and
ss
cld
cmp
mov
fild
data16
xchg
mov
add
xlat
push
clc
pop
push
rcr
sbb
arpl
out
mov
mov
inc
pop
jp
(bad)
jl
cmp
inc
std
xor
mov
cmp
in
add
xor
dec
add
je
aaa
jbe
add
push
or
xor
cmps
push
sub
pop
repz
addr16
dec
imul
or
ret
push
jne
mov
pop
cmp
rcl
jmp
stos
repz
mov
cmc
cmps
xchg
rcr
scas
outs
pop
and
sbb
mov
pop
jne
jo
adc
mov
pop
cli
stc
push
inc
jge
call
cmp
out
push
ins
inc
xchg
add
xchg
movs
xchg
(bad)
jle
mov
push
mov
idiv
ror
lock
test
jno
and
ret
dec
mov
push
fidivr
inc
enter
cs
sbb
or
fmulp
push
loop
aam
or
dec
imul
sub
xor
pop
fdivr
mov
xlat
adc
cs
data16
push
mov
stos
adc
rcl
aad
scas
mov
mov
outs
mov
adc
stc
inc
daa
push
sub
call
and
scas
pop
popf
inc
xchg
adc
pop
movs
fld
jb
lods
(bad)
cmp
jl
mov
repz
jge
nop
iret
jmp
sbb
scas
cmovle
cmp
sti
mov
mov
and
rcl
fnstenv
fist
inc
mov
fld
test
sub
sti
jbe
bnd
neg
pop
arpl
icebp
dec
mov
dec
call
je
les
idiv
pop
add
stc
shr
jecxz
or
xor
push
mov
or
pop
stos
dec
dec
jmp
jmp
xor
fwait
and
mov
jo
pop
(bad)
jp
stc
sub
push
lea
loopne
stos
outs
xlat
aam
xlat
mov
and
sbb
mov
jne
cmp
fsub
adc
rol
xor
call
movs
leave
rcr
movs
in
lods
xchg
xchg
out
push
sar
addr16
imul
aas
mov
mov
jne
and
ret
popa
mov
iret
fs
xor
fwait
xchg
(bad)
not
scas
jo
inc
cld
jno
(bad)
jg
imul
push
ins
dec
push
adc
in
mov
dec
test
outs
mov
ret
mov
in
mov
mov
mov
in
ins
add
xlat
or
sub
dec
or
outs
inc
in
in
dec
inc
mov
sub
jecxz
sbb
outs
pop
repz
daa
mov
call
repz
(bad)
sbb
push
iret
in
and
out
add
fs
mov
int
scas
retf
or
pop
lss
jne
push
aam
js
enter
push
mov
mov
or
repnz
jbe
or
mov
fwait
mov
or
add
jb
ficom
add
retf
push
aaa
xchg
pop
(bad)
fisttp
enter
push
add
(bad)
mov
mov
mov
add
pop
ins
xchg
daa
sub
adc
scas
mov
popf
jg
sub
push
(bad)
jns
add
xchg
mov
cmp
jbe
and
gs
pusha
mov
and
aas
in
aam
shl
add
inc
loopne
mov
jge
push
std
add
jge
loop
sub
popa
and
adc
or
push
fs
js
(bad)
push
into
stos
xchg
cld
sbb
cmps
mov
jb
xchg
mov
lods
sbb
sbb
xor
inc
and
sub
cmc
mov
mov
cmp
fisttp
mov
das
and
dec
std
or
lahf
fucomip
adc
cmc
imul
mov
shl
mov
dec
pusha
push
or
sub
retf
loope
(bad)
xlat
push
fidivr
inc
and
aad
push
add
mov
mov
mov
nop
xor
jae
femms
js
xor
popa
sti
add
in
jnp
adc
jbe
xor
mov
dec
push
sbb
push
es
push
adc
mov
nop
shl
ins
push
jecxz
pop
inc
mov
clc
test
push
push
fdivr
push
pusha
dec
(bad)
nop
clc
push
aam
push
inc
ds
in
push
push
and
repz
lock
lock
lahf
cmp
imul
fisubr
xchg
popf
jg
sbb
mov
jmp
outs
iret
test
cmps
popf
dec
in
fdivr
mov
(bad)
xchg
fwait
pop
call
aaa
and
cld
dec
test
cmp
or
pop
xor
(bad)
inc
mov
neg
ret
mov
jmp
dec
mov
xor
mov
into
sbb
popf
jne
pushf
movs
cmp
or
and
test
into
leave
mov
push
jnp
mov
retf
mov
adc
(bad)
iret
cmp
stos
inc
(bad)
mov
mov
out
in
sar
pop
lea
and
jge
dec
cmp
sbb
bound
fst
call
loope
mov
pop
int3
sbb
dec
adc
or
stos
xor
cmp
call
in
jmp
and
cdq
shr
ffree
cli
cmp
dec
xlat
mov
xor
and
push
xor
aad
pop
push
jns
les
lods
xor
sub
mov
xor
sar
push
mov
mov
gs
mov
loope
lock
push
sub
cwde
shl
add
fcomp
mov
ins
jb
arpl
data16
add
adc
jae
add
cmp
mov
inc
ss
jmp
loop
xor
jae
dec
sub
dec
and
lds
push
jno
fwait
xor
jmp
stc
mov
in
lahf
test
jbe
jnp
adc
retf
(bad)
aam
sub
enter
add
scas
adc
test
(bad)
ins
cdq
psubd
es
pop
in
mov
jle
fstp
xor
fcomp
mov
dec
leave
pusha
les
xchg
test
pop
cld
cmp
sahf
call
daa
pop
xchg
sub
retf
mov
or
addr16
ficom
scas
call
cmp
test
sbb
sbb
in
not
dec
loop
mov
arpl
rcl
js
pusha
ins
out
dec
out
mov
dec
add
out
sbb
in
cmp
mov
cmp
pop
(bad)
mov
sub
sbb
sar
test
sbb
adc
aam
mov
std
sub
mov
int
mov
lods
std
fs
dec
pop
or
das
cmps
fld
xchg
xor
mov
cld
mov
stos
das
test
dec
das
xor
or
jo
or
ret
hlt
and
jmp
ja
xchg
call
aas
pop
repnz
mov
add
std
xchg
pop
icebp
pop
jge
add
xlat
mov
mov
push
sub
mov
jns
and
xchg
mov
shr
mov
cmp
mov
pop
aad
mov
push
mov
jecxz
sub
jmp
mov
shl
aam
out
mov
and
cli
movs
mov
test
sub
stos
sub
jmp
inc
xor
into
mov
test
fptan
sub
iret
cmps
fprem
icebp
pop
pop
jmp
mov
and
pushf
jp
xlat
jbe
xlat
sub
mov
pop
pushf
std
out
repz
dec
mov
and
and
mov
sub
dec
mov
xchg
jecxz
test
pushf
fwait
sbb
ja
pop
push
stc
fcomp
out
fs
xchg
fbstp
fcmovnb
test
(bad)
gs
and
mov
in
fstp
mov
push
iret
inc
fwait
xchg
cmps
les
sub
xor
mov
add
imul
mov
iret
outs
rol
or
aam
pop
ja
inc
adc
retf
(bad)
loop
stos
and
add
bound
cli
mov
push
or
sub
ins
mov
inc
clc
sbb
sbb
popa
xor
sub
aas
shr
in
fstp
(bad)
in
xor
mov
scas
pop
pop
stc
cmps
imul
xlat
ret
jmp
jno
adc
cli
cmps
inc
xlat
jl
call
push
sbb
mov
mov
xor
les
adc
div
cmps
hlt
fnsave
mov
in
pop
ret
and
ret
mov
cmp
jne
push
jbe
fldenv
(bad)
int
push
adc
frstor
lea
dec
mov
mov
inc
inc
xor
inc
je
sub
xor
stos
(bad)
fwait
je
push
std
les
and
mov
je
mov
push
sbb
mov
inc
ss
inc
idiv
push
mov
ret
sar
push
pop
sbb
outs
inc
loop
cmp
not
or
push
stos
stos
push
jmp
jbe
xor
imul
pusha
movs
inc
je
gs
cwde
dec
mov
movs
aam
pop
pop
jbe
sbb
jmp
add
rcr
mov
adc
inc
(bad)
adc
cmp
cmp
mov
ins
pop
push
mov
jge
js
mov
mov
add
mov
push
mov
sub
mov
inc
daa
and
lods
pop
sub
retf
outs
add
out
add
stos
jne
sbb
outs
ret
lods
fist
mov
retf
and
mov
jl
jle
dec
fs
pop
mov
sub
mov
xor
test
aam
mov
iret
push
cs
outs
xor
inc
sbb
out
jns
out
pop
or
push
mov
add
jo
adc
arpl
pop
mov
jb
fmul
sub
sub
adc
lahf
bound
xchg
or
(bad)
popa
fcomp
xor
pop
mov
mov
and
add
lea
fnstenv
(bad)
dec
in
sbb
shl
jge
inc
int
call
mov
out
leave
mov
and
movs
and
cmp
mov
and
retf
sub
fiadd
push
adc
stc
dec
mov
std
hlt
daa
sbb
mov
inc
push
icebp
adc
mov
and
xor
pop
xor
xchg
jmp
imul
pop
bound
enter
cwde
and
jae
retf
arpl
cmp
fild
(bad)
pop
(bad)
mov
xchg
cmovne
pop
pusha
adc
mov
icebp
jmp
movs
aad
mov
les
push
arpl
repz
adc
(bad)
push
dec
adc
mov
push
pop
jg
push
pmaxub
shl
cmps
mov
jb
cmp
(bad)
jl
mov
rcl
cdq
push
xlat
shl
dec
lahf
lea
and
sahf
test
retf
dec
push
jg
jne
inc
sub
stos
je
cmp
test
je
(bad)
std
aam
mov
mov
jg
(bad)
adc
pop
pop
ins
cmp
jmp
bound
imul
adc
aas
push
in
or
jae
pop
and
or
loop
mov
or
jle
fcomp
xchg
adc
fcmovnu
mov
jnp
aad
bound
mov
dec
call
sbb
inc
dec
add
into
fst
cmp
pop
movs
xor
popa
and
mov
sub
out
in
int3
push
leave
mov
imul
inc
and
das
int
sub
sbb
adc
movs
das
int3
test
mov
mov
jp
js
lea
add
mov
shr
push
sub
ins
mov
jp
int3
sub
mov
sub
cmps
mov
rcr
lds
pop
inc
mov
mov
rcr
(bad)
fmul
push
xlat
ss
out
inc
aad
or
daa
dec
push
inc
imul
pop
inc
jge
cmp
sub
adc
adc
inc
pusha
sub
mov
shl
es
iret
es
dec
mov
jns
cmps
push
pop
fst
cmp
mov
push
mov
pop
in
jnp
mov
test
enter
inc
pop
mov
sbb
pop
add
in
cmp
xor
loope
aad
or
adc
aaa
scas
les
sbb
rcr
push
add
out
das
push
retf
dec
dec
out
fmul
cld
push
jmp
sub
pop
in
fnstenv
and
cmps
push
repz
outs
xchg
pop
sbb
add
xchg
adc
xchg
xchg
outs
jo
out
push
mov
push
and
jmp
push
sbb
arpl
jb
mov
mov
sahf
dec
mov
sbb
mov
xor
adc
or
pushf
xchg
es
xor
xchg
xor
sbb
jmp
imul
std
out
xchg
lods
lahf
add
mov
pop
adc
pop
mov
aaa
mov
pop
dec
loop
cwde
sti
pop
sbb
div
pop
pop
add
fidivr
or
cmp
inc
jmp
cs
jmp
mov
(bad)
hlt
pop
push
ins
leave
int3
mov
add
fcomip
mov
pusha
fisubr
mov
std
pop
std
jg
loop
out
or
xchg
add
rol
outs
mov
xchg
add
aas
imul
int
sbb
dec
gs
pop
popa
xchg
cmp
sub
call
sbb
ds
push
mov
push
stos
sbb
xchg
jno
xchg
push
mov
int
scas
sti
sub
in
add
mov
or
sub
inc
jbe
sub
mov
sbb
fs
int
add
fld
sbb
fmul
or
(bad)
inc
pop
xor
bound
mov
jl
sub
les
pop
sbb
mov
mov
sahf
test
jne
pop
mov
(bad)
cmp
nop
jl
stos
xchg
lods
xor
scas
loop
adc
sub
cmp
xor
cmps
xchg
xor
mov
sbb
fbstp
jg
and
fwait
push
nop
dec
fcomp
mov
push
adc
pop
cli
sti
pop
sbb
jge
test
inc
mov
mov
mov
std
lock
fdiv
pop
mov
or
sbb
pop
outs
sti
pop
mov
loope
inc
icebp
adc
dec
sbb
xchg
xor
fs
jbe
or
ins
mov
xchg
cmc
mov
test
call
aaa
add
push
retf
mov
mov
in
push
sub
push
jno
outs
and
ret
data16
repnz
das
mov
out
xchg
lods
sub
push
stos
call
icebp
add
aas
cld
sub
xor
pushf
jge
lods
sbb
and
rol
bound
movs
pop
iret
jecxz
mov
push
pop
imul
and
xor
arpl
int3
fist
pop
in
hlt
and
not
pop
adc
mov
cmps
push
fimul
dec
fnstenv
jg
mov
dec
jae
or
int
jb
into
scas
xchg
test
rcr
inc
in
mov
outs
fiadd
xchg
inc
pop
mov
or
pop
test
push
scas
mov
push
pop
xor
mov
out
addr16
call
mov
push
js
aas
inc
mov
cmp
jne
shrd
(bad)
pop
dec
inc
stc
or
sbb
(bad)
jno
mov
add
mov
jl
cmp
sub
ss
jmp
xor
push
mov
jbe
fmulp
in
retf
sub
jle
dec
(bad)
pop
sub
ds
push
(bad)
mov
lods
arpl
clc
fsubr
fcomp
aas
mov
mov
stc
mov
and
fdivrp
add
int
sahf
push
add
jmp
push
in
push
adc
mov
test
fmul
(bad)
xor
out
jbe
call
loope
mov
test
fs
mov
into
cmp
sub
or
in
xchg
xor
sub
test
iret
in
jb
mov
cmp
push
je
pop
ret
pop
js
sub
and
add
push
test
pop
xor
mov
dec
stos
mov
loop
adc
je
inc
ret
stc
pop
scas
aad
ret
faddp
inc
pusha
xchg
js
aad
mov
xlat
test
in
mov
or
jno
and
pop
not
hlt
or
mov
popf
clc
shl
sbb
cld
mov
(bad)
iret
out
pop
adc
mov
inc
test
pop
rcl
out
lds
cmp
adc
shr
aam
out
loopne
mov
or
sbb
lahf
adc
sahf
push
or
xor
(bad)
xchg
xchg
gs
jb
pop
clc
mov
popf
or
inc
push
mov
mov
push
sbb
push
sub
inc
jno
push
xchg
dec
mov
fistp
jbe
xor
xchg
bound
add
lods
arpl
mov
(bad)
(bad)
addr16
shl
and
out
cmp
shl
sbb
mov
shr
cmp
jo
and
push
and
loope
ss
in
and
out
(bad)
cmps
out
jmp
clc
cld
test
push
mov
adc
data16
ins
(bad)
hlt
jne
jne
adc
and
ss
add
jle
std
push
pop
mov
adc
xchg
test
leave
push
push
mov
pop
adc
popf
mov
imul
dec
sub
inc
lods
push
fcom
mov
push
mov
ja
inc
sbb
enter
aam
cld
test
test
cld
xchg
mov
(bad)
fist
(bad)
(bad)
pusha
mov
test
repz
and
test
mov
out
xchg
stos
fdivr
jb
xor
shr
adc
mov
loope
dec
lds
dec
add
out
adc
jbe
(bad)
jb
xor
gs
std
ss
test
jp
push
fild
pop
mov
retf
lds
iret
pop
(bad)
out
cli
(bad)
pop
inc
dec
rcr
push
(bad)
push
add
or
call
xchg
jnp
loop
add
pop
int3
mov
push
pop
xor
arpl
shl
adc
mov
mov
lea
(bad)
iret
pop
cmp
sbb
out
xchg
jnp
pop
addr16
ret
scas
and
mov
(bad)
fdiv
jmp
xor
ret
lods
push
ins
mov
movs
stos
dec
adc
into
dec
mov
mov
stos
sub
pop
mov
test
jg
jae
repnz
or
xchg
sbb
cwde
push
push
loop
sbb
xchg
pop
mov
add
shr
sbb
repnz
stos
inc
in
call
fbstp
cdq
cmp
popf
sub
dec
push
jl
sbb
fwait
data16
jnp
jbe
outs
in
iret
mov
(bad)
gs
dec
test
push
imul
xor
std
pop
inc
xor
in
dec
pop
ret
in
ret
mov
push
icebp
inc
add
push
in
scas
dec
and
push
sbb
cmp
jbe
sar
cmp
mov
pop
cmp
movs
inc
stos
mov
lods
repz
cwde
mov
inc
mov
iret
outs
jge
dec
(bad)
adc
adc
sub
mov
in
movs
jno
mov
movs
in
xor
fldcw
sahf
(bad)
mov
retf
add
mov
add
mov
mov
stos
pushf
aam
sub
and
mov
(bad)
aaa
mov
sbb
ins
cld
out
cmp
adc
out
retf
add
ret
pop
mov
(bad)
in
pop
stos
in
and
iret
arpl
das
into
sub
cmp
popf
pop
mov
call
cmp
cs
sub
in
xchg
cmp
nop
js
movs
cmp
dec
ja
into
sbb
ins
mov
loopne
movs
or
mov
test
scas
dec
ins
inc
ins
pushf
int
imul
inc
call
fistp
push
add
pop
imul
cs
xchg
and
and
int3
adc
push
push
les
fisttp
sub
mov
jae
nop
pop
mov
cld
je
mov
pusha
fidivr
adc
cmps
mov
or
xchg
xor
push
popa
sub
push
push
sbb
loopne
xchg
and
fsubr
cmp
inc
shl
jmp
lahf
jmp
(bad)
cmp
adc
or
cmps
stc
es
js
sahf
cmp
(bad)
loopne
rcl
dec
rep
jl
xchg
arpl
int
sub
dec
xchg
add
int
mov
push
push
ss
mov
test
adc
ja
cmp
lock
inc
xchg
add
ret
not
ret
mov
mov
jg
ins
lds
sub
ins
jmp
fcom
stc
jne
loopne
and
test
mov
or
pop
or
sahf
rol
xchg
mov
pop
pop
fwait
aam
or
sub
cs
mov
aam
js
or
push
sar
adc
out
dec
dec
mov
call
mov
mov
stos
xor
cwde
gs
(bad)
(bad)
in
scas
dec
xchg
cli
sbb
lods
lods
mov
jmp
loop
sbb
das
jmp
xor
fs
dec
mov
leave
sbb
xchg
push
push
retf
(bad)
and
cmp
out
cmp
jae
pop
cmc
cli
mov
sub
pop
mov
loopne
cmp
jge
sti
sub
(bad)
mov
clc
xchg
sbb
jbe
adc
add
add
cmp
mov
jo
cmp
pop
pop
out
sbb
cdq
fcomp
jp
loope
dec
xchg
push
ds
cmps
or
add
cdq
xchg
dec
mov
and
dec
or
cmp
retf
div
dec
mov
dec
pop
xchg
add
dec
out
fwait
sbb
movs
sub
and
sub
jne
inc
or
hlt
cmp
pushf
cmp
and
aam
repz
push
cmps
popa
cmovle
fdiv
xchg
leave
loope
cdq
fimul
inc
inc
sub
mov
fwait
loop
or
jo
call
movs
call
xchg
or
cli
add
cli
clc
add
mov
movs
mov
ja
popa
push
mov
cli
mov
movs
adc
sbb
jns
xchg
jmp
and
mov
dec
inc
pop
mov
inc
jmp
inc
fwait
(bad)
jmp
les
js
fwait
push
pop
sbb
add
xor
dec
pop
movs
mov
mov
mov
call
and
dec
lahf
sahf
jne
inc
test
mov
repnz
sub
inc
xlat
loopne
aad
xchg
mov
mov
inc
aas
sbb
gs
xlat
mov
add
in
test
ins
in
inc
and
or
in
loope
(bad)
dec
adc
loopne
fs
lock
and
sub
call
lahf
jg
push
fist
jmp
ins
(bad)
gs
lahf
lahf
sub
pop
sub
in
loope
add
push
or
cmp
gs
mov
inc
xchg
cmp
sub
cmp
cwde
out
out
(bad)
pop
jg
fnstenv
adc
mov
fcom
aad
dec
sub
push
adc
and
xchg
jg
call
xchg
dec
out
mov
out
outs
js
fnsave
xchg
jne
jg
xlat
push
lds
adc
mov
push
fdiv
ror
ds
pop
test
mov
inc
mov
push
xchg
or
imul
add
mov
adc
sub
cbw
repz
dec
jbe
lods
(bad)
lods
cmp
and
dec
(bad)
dec
in
fmul
repnz
mov
test
pop
sub
(bad)
sbb
icebp
jp
mov
or
or
les
sub
pop
jnp
push
jb
ret
xchg
xor
xor
inc
adc
retf
xchg
scas
sub
mov
fdiv
(bad)
push
repnz
fst
fcmovnbe
add
push
mov
loop
inc
mov
adc
xchg
cmp
stos
xchg
sbb
es
and
sbb
jle
xor
and
xchg
hlt
mov
outs
mov
outs
mov
das
mov
inc
xor
cs
xchg
push
ss
cld
mov
(bad)
aam
cmp
sar
ret
das
cs
test
sbb
jbe
cmp
dec
shl
inc
add
or
je
sub
dec
mov
into
cmp
sub
mov
xchg
retf
popf
cmp
mov
js
jge
pop
push
sub
mov
or
jae
adc
sahf
jnp
in
leave
sbb
ror
aas
test
test
(bad)
lea
xor
push
cmp
xchg
push
(bad)
mov
stos
inc
xor
pusha
popa
pop
xchg
rol
sub
out
pop
mov
loope
nop
mov
or
out
call
repz
and
add
out
jp
mov
jo
jmp
js
jle
shl
ret
hlt
push
jne
xor
ins
stc
in
jl
fcmovnu
inc
loop
in
cmps
xor
cld
inc
dec
mov
pusha
movs
imul
mov
mov
pop
push
rcl
pop
xchg
sbb
sbb
sahf
mov
cld
mov
dec
adc
imul
test
jp
jg
ficomp
cld
ja
jp
push
popa
and
or
xor
ja
out
adc
arpl
inc
push
outs
pop
add
fldenv
rcr
cmp
dec
pushf
mov
mov
loope
push
enter
pop
push
fisttp
test
out
sbb
push
jne
jnp
push
xor
adc
data16
xchg
mov
adc
outs
popf
in
push
mov
and
mov
sbb
and
sub
mov
pop
push
fcmovnb
rcr
sub
aaa
cwde
(bad)
loopne
sub
cmp
mov
xchg
jg
sbb
or
loope
out
adc
lods
ins
or
adc
pop
out
mov
retf
fistp
xor
mov
mov
xchg
and
and
push
dec
mov
xor
pushf
pushf
mov
stos
cwde
xor
ins
push
inc
shl
fdivr
push
fiadd
push
pop
pop
pop
xor
jnp
pcmpeqw
mov
sub
xor
mov
shr
popf
fdivrp
xchg
xor
scas
add
cmp
aam
stos
adc
das
pop
mov
xchg
fcomp
mov
pop
out
push
sub
jmp
xchg
push
and
pop
sbb
mov
retf
inc
jmp
mov
mov
jbe
pop
das
jno
cmp
or
movs
dec
std
mov
mov
(bad)
dec
call
push
lds
xor
(bad)
ins
mov
adc
or
jne
push
test
jg
ret
enter
sbb
pop
fild
fmul
imul
pop
pop
xchg
inc
jg
xor
(bad)
imul
mov
loope
(bad)
sbb
mov
imul
push
mov
mov
shl
aas
or
push
mov
sub
push
fwait
cmp
push
movs
mov
inc
push
out
sbb
push
adc
xor
ror
pop
add
stos
xor
test
add
mov
(bad)
out
pop
cs
add
arpl
xadd
mov
out
jnp
mov
sbb
mov
loop
push
jae
fcom
aas
in
push
adc
xor
jb
sbb
mov
fwait
adc
or
jmp
inc
int3
ret
sub
(bad)
fcomp
std
sub
fistp
ror
dec
push
xchg
cld
or
(bad)
jp
pusha
int3
push
jmp
mov
retf
dec
(bad)
or
sbb
mov
into
pop
xor
pop
loope
or
js
ds
movs
mov
movs
loopne
jmp
out
and
daa
sbb
stos
in
lahf
inc
and
cmp
std
lock
test
icebp
outs
jmp
cmc
aam
pop
clc
pop
xchg
popf
aaa
fsub
cli
sbb
ror
and
inc
and
(bad)
jne
xchg
push
pop
push
jns
imul
dec
fidiv
mov
adc
enter
fwait
cmp
not
push
sbb
ja
call
dec
mov
stos
loope
jns
or
sub
add
xchg
call
push
jne
add
call
xchg
add
mov
jecxz
movs
adc
mov
lods
imul
jecxz
push
pop
sub
mov
call
add
dec
add
push
dec
mov
jle
ss
jae
jnp
add
fcomp
push
das
adc
add
xchg
xchg
in
jno
adc
pop
cmp
xchg
adc
mov
push
push
ds
jg
call
sub
cmc
call
mov
sar
and
mov
cmps
pop
repz
pop
add
cmp
add
jo
mov
mov
daa
pop
cmp
test
pop
in
fadd
xor
push
mov
fwait
cmp
(bad)
jb
fs
(bad)
xlat
or
test
inc
or
inc
ret
inc
test
xchg
hlt
enter
cmp
inc
repnz
pop
dec
jb
mov
ja
push
rcr
dec
out
loopne
fnstsw
and
mov
push
mov
push
lahf
stos
mov
mov
mov
fist
and
cmp
mov
jmp
(bad)
jge
outs
cmc
mov
adc
add
enter
and
es
shr
test
push
xor
call
inc
je
push
fdivr
std
rcr
sahf
xadd
cmp
lods
cmc
pop
test
jbe
popf
test
test
in
jle
ins
fmul
(bad)
sti
push
movs
jbe
mov
fwait
sbb
into
mov
popf
ret
cmp
push
cmps
cli
imul
fmul
pushfw
gs
mov
(bad)
ror
xor
scas
ins
jl
cli
imul
shl
push
stos
fsubr
jmp
in
ins
xlat
fnstenv
addr16
dec
addr16
jo
pop
mov
sahf
xchg
lahf
xlat
jmp
(bad)
out
int3
sbb
stc
adc
mov
xchg
ror
push
hlt
aam
ja
xlat
push
mov
jae
out
sahf
dec
pop
mov
imul
scas
pop
xor
sbb
sub
xor
ins
push
push
outs
jp
inc
dec
sbb
jmp
jo
imul
arpl
add
mov
pop
daa
rcr
mov
stc
jecxz
mov
fst
cdq
xor
enter
inc
cld
xor
jmp
and
ror
in
enter
enter
inc
dec
mov
sub
(bad)
icebp
mov
adc
jne
ins
sub
loop
mov
push
or
xor
mov
push
sbb
imul
jb
and
sub
inc
push
mov
cs
lock
adc
push
test
enter
or
xchg
xor
scas
loop
adc
ficom
ja
stos
sti
ins
fadd
mov
into
mov
mov
(bad)
repz
inc
sbb
sbb
call
dec
push
ins
xor
outs
pop
xchg
mov
(bad)
mov
outs
clc
mov
pmulhuw
data16
push
sub
sub
pop
dec
mov
out
and
ret
xchg
ror
dec
jb
outs
retf
ins
ja
and
call
loopne
les
(bad)
out
jae
rcl
gs
add
jbe
pusha
or
push
mov
stc
rol
pop
imul
and
xor
outs
mov
add
cld
xchg
and
xchg
pop
xchg
add
adc
call
xchg
fsubr
daa
retf
faddp
and
out
lods
adc
dec
mov
xor
idiv
jae
retf
cs
push
ret
sbb
xor
push
mov
mul
push
sbb
ss
push
mov
cmps
mov
sbb
inc
mov
sbb
(bad)
test
data16
add
xchg
push
cdq
jb
int
sub
ds
iret
aad
pop
outs
xor
pop
cdq
fld
into
cli
push
(bad)
or
shl
punpckhwd
adc
(bad)
out
stos
jo
je
xor
xchg
scas
adc
and
mov
or
out
ret
inc
das
loope
stos
and
call
add
dec
neg
push
xor
sub
push
stos
les
pusha
mov
in
cld
inc
aas
inc
xchg
out
xchg
sti
setb
pushf
movs
mov
scas
mov
scas
(bad)
jnp
test
mov
shr
in
jecxz
and
sbb
icebp
aam
and
imul
jnp
es
lock
mov
cdq
xchg
jl
arpl
jle
mov
mov
mov
or
fbld
jmp
(bad)
sbb
xchg
fs
repnz
mov
jmp
gs
mov
retf
pop
sbb
pop
fmul
xor
fld
add
dec
(bad)
lahf
retf
mov
xchg
xor
repnz
(bad)
pop
nop
sbb
mov
ret
aam
push
xchg
and
xchg
mov
call
aam
fisttp
jne
out
xlat
xor
sbb
in
sar
sub
push
aaa
inc
js
retf
cmp
add
sbb
(bad)
mov
or
nop
cmps
mov
inc
rcl
xor
adc
jmp
add
xchg
cld
hlt
out
jns
xchg
add
out
(bad)
aaa
dec
ins
outs
mov
repnz
ds
sbb
inc
sbb
cmp
pop
mov
mov
jecxz
jmp
outs
ds
aas
gs
icebp
and
xchg
or
ret
stos
stos
sub
jae
shl
pop
push
xchg
rcr
add
pop
xchg
sub
iret
xchg
stos
xchg
fs
mov
pusha
mov
sti
xchg
cmp
or
jmp
and
imul
push
mov
punpckhbw
push
dec
mov
inc
add
daa
mov
jb
lock
ret
push
push
scas
or
pop
xchg
arpl
or
test
shl
ret
inc
jnp
adc
dec
std
into
push
push
mov
(bad)
cmp
fild
push
pop
stos
shr
add
ret
sub
sub
adc
push
mov
mov
mov
xchg
xor
cdq
lea
fmul
lea
fild
std
dec
jg
push
loopne
or
pop
jg
dec
sahf
ins
xchg
pop
imul
mov
and
pop
mov
in
jb
adc
aad
jl
push
leave
dec
repnz
jl
mov
test
int
adc
imul
outs
popa
fisubr
lods
aam
xchg
cmp
mov
fisttp
into
mov
or
add
xchg
dec
into
scas
mov
mov
mov
sub
jbe
mov
xchg
je
mov
addr16
inc
mov
aas
pop
jne
cwde
push
movs
mov
push
test
mov
scas
pop
les
outs
std
mov
and
cmps
add
mov
sti
mov
jmp
mov
pushf
pop
pushf
push
or
hlt
push
daa
push
nop
bound
test
add
imul
add
in
mov
push
popf
ret
(bad)
sbb
push
stos
mov
xchg
retf
pavgb
(bad)
ins
xor
(bad)
or
imul
je
(bad)
push
cld
mov
(bad)
sub
push
in
cmps
jb
xchg
sbb
clc
add
jno
jg
dec
mov
hlt
xchg
shr
fs
in
pushf
(bad)
adc
lahf
sbb
inc
push
jnp
shl
xchg
lds
es
mov
retf
mov
scas
fcmovne
retf
jae
repz
add
dec
inc
cmc
out
pop
adc
call
mov
sub
test
dec
not
int
shr
(bad)
fild
(bad)
pop
lock
sub
mov
or
movs
pop
int
loope
add
hlt
movs
push
and
add
inc
outs
lods
cmps
shr
addr16
adc
mov
nop
jge
rcl
sti
hlt
(bad)
jae
(bad)
in
add
out
mul
fldenv
mov
test
sahf
call
push
mov
xor
js
add
mov
movs
popf
mov
cmps
jns
add
mov
in
sub
push
xchg
jb
ret
jno
jmp
and
jle
sbb
lods
push
mov
jg
data16
pusha
xor
or
mov
bnd
sbb
pop
dec
and
dec
mov
cdq
push
sub
jle
dec
jns
jbe
(bad)
xchg
daa
adc
xchg
fisub
pop
xor
je
shl
jg
mov
mov
aam
fcom
aad
jecxz
cs
sub
(bad)
out
pop
aas
dec
push
mov
aam
mov
sub
cli
xchg
ret
mov
or
neg
inc
outs
jmp
mov
(bad)
cmp
aam
mov
push
enter
or
add
pop
movs
sub
dec
and
cs
xor
cwde
mov
shl
sub
(bad)
(bad)
cli
jmp
rcr
mov
jge
repnz
push
cmp
inc
cmp
mov
int
out
daa
leave
mov
push
mov
mov
in
je
bound
mov
icebp
out
jbe
sar
pop
fist
stos
loopne
xchg
shl
adc
sbb
cmp
and
(bad)
pop
cmp
rcr
sub
cmp
int
xchg
jns
stos
dec
pop
mov
mov
(bad)
push
jns
jle
or
cwde
pop
fdivr
(bad)
aam
imul
push
push
or
inc
test
(bad)
mov
test
or
push
icebp
push
and
mov
adc
pop
mov
sbb
xlat
test
xbegin
movs
aas
dec
xlat
fwait
cmp
cmp
mul
popa
hlt
mov
in
lds
out
pusha
jo
cdq
popa
push
mov
cmp
imul
and
imul
push
xor
push
fdivrp
rol
ins
and
aaa
add
leave
xor
ror
outs
jg
imul
jb
mov
xchg
mov
aas
pop
pop
outs
sbb
and
xchg
cmps
xchg
jmp
cmc
push
jbe
dec
dec
mov
rcr
mov
pop
stos
inc
push
jae
add
mov
shr
sbb
imul
mov
adc
push
pop
sub
repz
cmp
adc
ffreep
xchg
in
adc
dec
jle
cmc
cld
mov
(bad)
xor
jp
jb
jp
fisub
lods
push
sbb
push
loop
ror
int
push
mov
dec
xchg
ss
lea
mov
(bad)
(bad)
rcr
in
aaa
in
and
xchg
ins
add
sub
dec
loope
push
add
cdq
fwait
pop
leave
jnp
addr16
imul
push
pop
push
xlat
(bad)
cmp
push
jecxz
test
jb
pop
sub
push
rol
outs
inc
jmp
dec
ss
sti
fist
ja
in
lods
and
xchg
mov
retf
sbb
push
add
ret
cmp
(bad)
outs
rcr
sahf
jle
loopne
loop
(bad)
push
mov
or
sbb
div
cwde
retf
xchg
les
fsub
rol
pushf
or
into
mov
pop
mov
std
jno
jle
adc
les
fcmovnbe
retf
retf
push
enter
inc
sbb
repz
add
jmp
add
fdivr
sbb
cmps
mov
outs
sub
repnz
mov
imul
leave
sub
std
loop
or
jne
xchg
and
inc
out
dec
test
scas
cmps
out
mov
ins
pop
(bad)
call
push
mov
jmp
xor
jae
xor
das
repnz
repz
rol
add
test
or
shr
not
mov
lods
xor
push
jle
into
repnz
xchg
dec
(bad)
loopne
pop
(bad)
sub
mov
jp
inc
je
mov
pop
or
gs
pop
sbb
(bad)
call
repnz
cmps
cdq
out
pop
lds
xor
leave
imul
fwait
mov
and
pop
mov
or
inc
sbb
jmp
nop
push
out
cmp
push
sub
(bad)
gs
mov
push
fldcw
es
aam
shl
je
cli
jnp
jl
inc
sar
push
push
push
jge
mov
add
clc
(bad)
fs
sbb
cmps
xchg
pop
xchg
popa
cmps
out
mov
xor
push
popf
push
pop
daa
xchg
aad
add
lods
and
sbb
or
cmps
adc
ret
mov
fwait
lahf
cmp
daa
out
stos
jns
ds
and
mov
popf
push
push
hlt
outs
or
mov
xor
cmps
xor
fisubr
cwde
inc
push
dec
inc
add
pusha
sub
stos
add
cdq
push
inc
and
mov
jg
sub
(bad)
adc
push
pop
shl
mov
xchg
data16
push
fist
pop
and
push
add
adc
js
pop
mov
imul
sub
jl
fstp
jne
mov
fldenv
jg
test
cli
sub
lods
xor
or
sbb
sub
adc
je
mov
iret
push
or
retf
fisttp
cdq
pop
cli
mov
xchg
mov
or
mov
mov
inc
sbb
loope
pop
cmps
push
sbb
inc
sbb
dec
stos
fbstp
scas
jb
loope
push
cdq
int
push
jmp
data16
inc
cmp
lock
cdq
rol
icebp
out
or
adc
lahf
jmp
add
inc
dec
pop
ss
stos
movs
jb
jge
in
jno
adc
inc
push
repz
sbb
stc
mov
movs
cmp
ret
fist
xchg
mov
mov
clc
lock
outs
mov
sbb
jnp
int3
pop
aas
adc
je
fistp
mov
xchg
sub
pop
stos
sub
jle
scas
cli
mov
in
cld
sbb
sub
adc
push
push
repnz
int
outs
mov
ret
dec
sub
daa
punpcklwd
sbb
cmp
test
movs
iret
cmp
outs
mov
in
push
test
jg
pop
ins
adc
mov
gs
mov
pop
(bad)
jns
in
dec
bound
out
arpl
mov
jbe
mov
pop
out
ret
les
nop
jmp
retf
call
enter
out
repnz
mov
shl
dec
es
mov
shl
xchg
out
sbb
sub
adc
fisubr
aad
out
mov
dec
test
ds
add
add
cld
dec
popa
xchg
or
sbb
and
push
enter
retf
dec
xor
outs
sbb
cmp
sbb
dec
test
arpl
adc
sahf
imul
addr16
push
xor
jmp
jns
inc
fsubr
sub
jnp
cli
xchg
add
xchg
mov
ffree
jnp
loope
mov
loopne
or
in
jle
jg
add
div
int3
out
sar
inc
imul
sbb
jmp
(bad)
jecxz
sbb
sbb
inc
fidivr
jecxz
stc
mov
repnz
addr16
adc
and
pop
sbb
test
mov
mov
ret
dec
cmps
or
push
in
pop
out
mov
or
sti
mov
js
js
mov
add
sbb
retf
es
loopne
lock
fdiv
lock
cld
fwait
or
mov
(bad)
outs
(bad)
push
ja
mov
cmp
sub
cmp
outs
add
pushf
mov
or
mov
retf
and
fwait
inc
daa
movs
mov
or
out
not
jbe
xlat
scas
out
lock
bound
mov
test
imul
mov
dec
cmp
push
outs
push
ror
adc
push
nop
push
(bad)
push
mov
xchg
(bad)
push
das
xchg
sbb
cwde
sub
lock
jns
lahf
pop
lods
jbe
sahf
push
mov
fs
lods
dec
and
lods
cmp
inc
add
mov
das
push
repz
push
(bad)
rcl
sti
sahf
push
in
fs
aam
scas
mov
pop
dec
or
ins
push
dec
xchg
jmp
dec
xor
mov
cwde
jl
aaa
dec
push
fstp
mov
push
push
or
mov
aam
jle
fldcw
xor
push
inc
dec
jnp
sbb
dec
leave
push
mov
out
adc
mov
cmp
das
mov
inc
sbb
push
in
mov
adc
ret
add
arpl
movs
inc
sbb
mov
jp
pop
dec
sub
pop
scas
push
cs
test
sbb
xor
pop
push
and
dec
jo
out
jbe
cwde
inc
xchg
or
das
stos
and
pop
xor
add
mov
add
cmps
cmp
iret
jnp
jg
lods
mov
loope
xlat
imul
dec
cs
repz
lahf
std
cmp
xor
mov
push
pop
pop
js
xor
push
and
fwait
es
pushf
out
mov
fnsave
cmp
inc
xchg
out
sub
sbb
mov
scas
xor
cmp
xchg
neg
push
or
jnp
pop
sbb
push
mov
outs
push
fwait
push
sub
mov
sbb
dec
mov
add
push
mov
push
jbe
aas
out
push
or
push
push
dec
add
stc
shl
mov
mov
call
pop
inc
jae
imul
movs
fwait
mov
call
add
std
out
push
stos
and
pusha
and
jg
pop
jl
imul
pop
push
nop
sub
add
fldcw
mov
xor
data16
cld
adc
cmp
xor
jno
aas
es
and
or
fsubr
inc
mov
hlt
add
sub
aaa
pop
popa
addr16
daa
jbe
xlat
push
push
cs
daa
in
cmp
(bad)
mov
sbb
cmp
or
mov
jae
sub
aam
adc
(bad)
xor
sub
xlat
add
popf
test
add
mov
mov
add
stos
push
inc
cwde
sub
cmp
lds
mov
cdq
aaa
mov
adc
push
and
ja
nop
sbb
xor
push
add
mov
pop
pop
adc
or
xchg
fisub
imul
sub
inc
ds
sar
cmp
sub
outs
out
add
cmps
cmp
jb
test
test
push
add
jns
mov
add
in
or
rcr
mov
xchg
xor
fnstsw
xor
fwait
cmp
jecxz
sub
je
xor
mov
pop
mov
fcmovnu
add
sbb
pop
retf
cmp
add
xchg
xor
dec
iret
pop
push
scas
mov
out
lock
lea
sti
repz
sahf
jmp
(bad)
cmp
push
inc
jb
cli
out
push
xor
(bad)
retf
xchg
mov
(bad)
xchg
(bad)
push
ds
cwde
int
sub
pop
sbb
rol
int3
mov
pop
mov
loope
cmps
inc
xor
sti
jae
xchg
sbb
mov
xchg
dec
stos
cld
adc
in
xchg
and
mov
ret
loope
add
call
dec
xchg
cmps
in
std
into
in
daa
mov
add
dec
lea
mov
mov
push
inc
adc
(bad)
jo
fs
imul
dec
add
mov
pushf
les
(bad)
cmps
add
mov
dec
jno
idiv
in
test
push
pop
adc
push
das
(bad)
adc
cmp
mov
dec
aad
fadd
push
ds
lock
mov
push
test
mov
out
pop
pop
fcom
mov
ja
sbb
movs
scas
jle
dec
fcomp
cmps
hlt
sub
shl
push
mov
mov
fadd
les
push
bound
call
or
jb
(bad)
fs
sub
enter
mov
ret
inc
das
out
xor
fild
movs
mov
or
arpl
mov
push
test
repz
mov
xchg
sub
ffree
cmc
loop
cmp
iret
gs
adc
aam
mov
inc
dec
push
stos
(bad)
pusha
es
xor
ins
mov
lods
jae
dec
addr16
fmul
fcomip
and
sub
inc
inc
scas
int
fdiv
shr
out
pop
jle
(bad)
mov
mov
les
sbb
pop
fbstp
sub
sar
push
enter
sub
pop
cmps
mov
nop
setl
outs
fadd
dec
push
mov
mov
sahf
and
in
pop
push
xlat
cmova
shl
(bad)
cmp
xchg
jg
cmps
cmp
in
lods
stos
out
ficom
outs
out
or
push
cld
sahf
pop
ffree
lods
push
xor
das
pop
mov
mov
shl
retf
mov
jne
addr16
cmps
xlat
xor
dec
mov
retf
push
jle
fwait
cli
jmp
out
mov
fwait
cli
xchg
cld
mov
push
je
lahf
xchg
jnp
pop
mov
jp
sbb
jbe
test
xchg
or
retf
mov
or
pop
xor
sbb
sub
sbb
xchg
sub
cmp
jno
mov
mov
fimul
dec
pop
pop
fcmovnb
dec
mov
cmp
jns
push
rcr
pop
inc
out
jnp
in
sub
push
xchg
mov
mov
pop
movups
push
pop
push
sbb
and
ret
ror
mov
sub
inc
xor
and
clc
xor
ret
nop
sbb
and
xchg
mov
pop
nop
xchg
outs
fldenv
pushf
lods
cmp
ds
in
push
mov
loopne
jne
pop
pop
iret
aaa
or
rcr
aam
jo
shr
dec
imul
jle
into
cmp
mov
addr16
into
adc
mov
ss
mov
enter
pusha
pop
push
into
sub
cmp
cmp
pop
fiadd
cmp
sbb
mov
jecxz
iret
lods
cmp
int3
xchg
cmp
jns
adc
fsubr
jne
add
push
cmp
mov
xchg
xor
fistp
scas
xchg
in
test
lods
sub
xchg
imul
into
stc
mov
cmps
jne
jmp
push
xlat
cmp
int
cdq
jns
test
fdiv
mov
cmps
xchg
jge
int3
fst
pusha
pavgb
mov
sbb
fiadd
mov
mov
cmp
ss
mov
add
retf
ja
and
imul
jbe
add
push
jnp
scas
ds
lea
mov
xor
cmp
pop
or
cmp
or
push
out
xchg
fucomip
loope
loope
dec
or
pop
std
out
enter
mov
mov
sbb
or
dec
push
inc
or
add
mov
dec
cmp
xor
xor
cmps
je
pop
rcr
movs
push
dec
mov
fwait
pop
xor
sbb
add
iret
xchg
push
pushf
add
sub
jle
pop
rol
xchg
xlat
stos
(bad)
cdq
adc
loop
xchg
xor
imul
push
sahf
inc
in
xchg
repz
icebp
das
fcom
push
rcl
jb
lahf
xchg
and
sbb
inc
push
aad
call
out
inc
cmp
mov
stc
repnz
and
jo
in
in
push
div
jge
xchg
and
movs
dec
adc
adc
std
shl
mov
and
sbb
leave
or
std
lock
cmc
push
fadd
cmps
daa
pop
imul
push
xchg
aaa
sahf
repnz
jl
cmp
jge
jmp
daa
repz
and
jae
ror
out
sbb
dec
pop
push
jb
shr
add
mov
inc
xchg
dec
lods
dec
stc
mov
mov
cmp
adc
in
mov
jp
mov
mov
cmp
mov
push
sbb
push
jno
lea
dec
loopne
and
push
hlt
mov
aas
ror
(bad)
mov
(bad)
jmp
aas
shl
leave
xchg
ficom
and
std
dec
jecxz
mov
sbb
add
std
rcl
or
mov
jl
dec
sbb
pusha
xor
ins
mov
or
pusha
int
addr16
(bad)
and
and
add
jl
mov
fisub
cmp
mov
sub
popf
sub
(bad)
cmc
es
jmp
inc
mov
mov
push
dec
inc
and
xor
xchg
xchg
out
loope
dec
jnp
inc
mov
adc
aad
pop
or
call
push
fidivr
loope
fsubrp
dec
mov
repz
push
mov
test
adc
pop
idiv
xchg
dec
xchg
stc
aam
pop
sub
sbb
xchg
in
xor
aas
jmp
adc
hlt
(bad)
call
sub
dec
xchg
jmp
int3
not
cmc
sub
mov
push
pushw
adc
loop
adc
scas
in
inc
inc
xchg
ja
lahf
adc
push
add
dec
mov
gs
stc
jp
daa
and
adc
stos
mov
xchg
or
pop
inc
dec
mov
mov
pop
xchg
ret
dec
fstp
das
cmps
and
dec
add
jp
adc
pop
pop
sbb
push
das
mov
mov
xchg
rcr
repnz
cmp
jns
push
sub
movs
hlt
dec
mov
mov
pop
jecxz
add
xor
and
pop
outs
cwde
dec
fwait
cld
call
loop
push
mov
sbb
add
add
mov
bound
lahf
fs
push
(bad)
arpl
fs
mov
lds
(bad)
in
ret
mov
mov
loope
adc
(bad)
lea
jmp
test
dec
adc
icebp
imul
call
mov
ins
ds
mov
test
sub
ds
or
sbb
ins
(bad)
jns
inc
or
pop
xchg
dec
cmc
das
cwde
mov
imul
mov
mov
jle
sbb
xchg
ins
cmovs
mov
mov
ins
inc
shl
call
dec
mov
xchg
int3
mov
inc
psubq
rcr
out
cdq
adc
aam
mov
leave
outs
add
or
jl
pop
pop
push
aaa
ins
or
(bad)
movs
pop
push
out
mov
jg
cdq
xor
xchg
pop
into
jne
loop
stc
(bad)
mov
add
in
fwait
cmc
jne
add
inc
nop
test
bound
cmp
outs
jmp
and
and
cmps
push
sub
pop
mov
ror
ds
call
fld
ja
jb
add
adc
jp
std
push
mov
or
xor
adc
pop
movs
add
imul
mov
sub
ja
arpl
movs
(bad)
mov
inc
movs
mov
jecxz
mov
push
out
xchg
loopne
push
inc
push
mov
mov
stos
jecxz
rol
imul
push
cmp
or
not
mov
add
pop
mov
test
dec
pop
cmp
xchg
pop
fmul
add
xor
jg
jg
popf
aad
adc
bound
shr
mov
push
aas
or
and
xchg
add
mov
cmp
mov
pop
xchg
dec
sbb
movs
hlt
cmp
neg
aas
dec
push
pop
fcomp
mov
ins
loope
and
adc
inc
mov
pop
std
add
lock
popf
std
outs
and
popf
xchg
xchg
dec
and
repz
jne
pusha
shr
dec
lock
ins
fwait
pop
and
data16
mov
mov
fs
sub
mov
sub
pop
lods
mov
imul
push
into
inc
push
test
inc
or
sub
push
inc
xor
mov
pop
fidivr
rcr
pushf
inc
sbb
popf
mov
or
retf
mov
sbb
popa
xchg
jmp
mov
ja
daa
cld
sahf
ss
add
nop
into
add
jge
mov
imul
xchg
jbe
(bad)
push
xor
inc
mov
test
aas
jmp
xchg
mov
pop
mov
call
loope
jo
jne
push
ret
dec
in
fld
xor
gs
lods
xor
shr
cmps
fwait
jno
shl
in
jle
cmp
pop
mov
cmp
je
popa
sbb
call
and
xlat
(bad)
(bad)
rcl
sub
imul
mov
inc
(bad)
cld
std
cmp
add
xor
dec
mov
outs
addr16
cmps
mov
inc
repnz
dec
popf
push
mov
rcl
into
mov
loope
xchg
xchg
pop
mov
mov
xchg
out
fdivr
mov
mov
test
enter
stos
sbb
jnp
mov
dec
mov
inc
sbb
push
xchg
push
xchg
xor
out
rol
jmp
loopne
nop
jne
ins
out
mov
imul
loopne
jl
out
cmp
out
out
or
xchg
sbb
pop
and
int3
outs
pop
inc
mov
mov
sbb
or
xlat
sbb
or
push
inc
sbb
in
mov
dec
push
test
sub
pusha
stos
jmp
jmp
scas
jmp
stos
lock
sbb
ffree
cld
cmp
dec
lds
mov
and
ins
loopne
dec
mov
(bad)
fs
daa
and
sub
rcr
mov
sub
mov
mov
or
aad
adc
mov
data16
xchg
cmp
cld
inc
adc
adc
sbb
push
sub
and
xor
or
sub
daa
call
add
fbld
out
sbb
mov
mov
lds
pushf
adc
lds
and
xchg
dec
in
sar
test
sbb
jns
repnz
popf
add
jns
jo
push
pop
cli
dec
sbb
ror
div
sbb
int
add
cmp
scas
leave
hlt
call
cs
sbb
sbb
(bad)
jnp
loopne
sub
sahf
scas
sub
cmp
adc
cld
out
mov
mov
xor
cmp
ja
popf
mov
out
clc
popf
in
jmp
xor
dec
jno
repz
clc
lock
push
dec
ret
clc
iret
xchg
push
jno
cmp
and
pop
adc
sub
or
call
mov
loopne
gs
cmp
pop
mov
loope
in
lds
les
dec
dec
hlt
fs
xchg
lods
out
sub
mov
mov
ins
push
movs
lock
add
xor
and
inc
shl
xchg
cmps
repz
push
mov
sti
lods
xor
sbb
cmp
inc
ret
xchg
out
iret
pop
inc
fadd
mov
push
cmp
ins
xor
cmp
ja
iret
clc
fucom
jmp
mov
jg
jecxz
cmps
(bad)
and
cmc
sub
sbb
pusha
inc
dec
sti
lods
cmp
inc
jmp
pop
xchg
mov
xchg
sbb
popf
aaa
nop
and
fld
(bad)
frstor
movs
pop
pusha
and
cmp
in
les
and
cmps
mov
and
popa
xchg
stos
inc
pop
or
adc
inc
mov
ret
cmp
add
(bad)
sbb
mov
mov
pop
imul
and
movs
and
ins
jno
imul
xlat
shr
lea
dec
jne
jbe
cmps
imul
push
xor
jno
rcr
dec
push
out
xor
ins
imul
and
add
xchg
cmp
or
mov
fs
xchg
mov
add
outs
xchg
mov
mov
and
pop
cmp
or
cld
cld
adc
scas
sbb
ins
adc
daa
and
cdq
test
push
dec
and
add
neg
xor
sub
or
test
into
fdivr
add
lods
pop
ja
stc
icebp
pop
push
jmp
jns
adc
jns
ja
ins
and
int3
mov
shl
out
scas
imul
mov
hlt
(bad)
shl
rol
pop
or
call
cdq
jno
cmp
cmp
int
inc
mov
cmp
cdq
push
pop
pusha
lds
lock
and
cs
push
cmps
shr
ret
mov
pushf
inc
mov
imul
call
xor
fidivr
test
jbe
add
dec
xchg
sbb
mov
hlt
scas
push
pushf
add
cmp
push
sub
hlt
(bad)
popf
das
jo
mov
dec
retf
es
mov
sbb
jno
movs
or
call
cmp
jne
push
inc
test
adc
adc
vpsubsw
mov
adc
(bad)
adc
stos
repnz
cmp
jle
xchg
mov
sub
repz
aad
mov
leave
scas
call
mov
imul
aam
icebp
jnp
movs
(bad)
jmp
mov
test
ja
in
ret
adc
pop
pop
mov
data16
mov
or
cmp
dec
rcr
mov
pop
mov
jecxz
fcmove
inc
jne
shl
mov
mov
cmps
inc
mov
xlat
movq
push
dec
jl
cmps
xor
inc
and
dec
inc
sbb
(bad)
or
mov
fld
add
rcr
ja
jns
jnp
aas
mov
inc
sub
inc
in
and
retf
shr
jns
rcr
test
cmp
jg
aaa
(bad)
jl
xlat
and
int3
xchg
outs
not
dec
push
imul
lock
retf
nop
dec
in
jge
loope
and
jg
pusha
and
or
call
xor
test
push
xor
in
arpl
and
outs
mov
push
adc
dec
cmp
sub
mov
int
fild
fwait
iret
push
sbb
fmul
dec
retf
ds
push
xchg
jge
pop
in
xor
mov
shr
pop
enter
loope
mov
das
mov
mov
xchg
jl
int
adc
cmp
xchg
and
xor
cmp
rsm
ret
push
mov
xchg
sbb
push
aad
sbb
mov
(bad)
shl
leave
jmp
push
sub
retw
(bad)
rcr
or
movs
adc
lea
adc
push
fld
scas
sub
cmp
es
(bad)
iret
loopne
stc
cmps
loopne
aad
push
xor
push
nop
add
jmp
cmp
and
mov
pop
outs
or
jecxz
xchg
nop
sbb
enter
adc
fstp
jp
or
ret
mov
sbb
pop
adc
inc
mov
ins
sahf
ffree
jl
mov
xchg
call
mov
or
je
ror
xor
fist
pop
adc
push
xor
pop
xor
sar
test
(bad)
lods
gs
adc
mov
sbb
xor
aas
or
rcl
shl
fdivr
ror
xchg
cmp
cmp
dec
add
sbb
in
jns
inc
add
popa
pop
cmp
inc
inc
loopne
fcom
adc
rol
cdq
mov
fldcw
jb
pop
mov
and
(bad)
jmp
cld
xchg
in
sub
or
xor
cmp
xchg
cvttps2pi
loope
pop
inc
pop
xchg
xchg
outs
scas
xor
jmp
lods
cmp
push
mov
loopne
fisub
jge
(bad)
retf
sar
das
sbb
ja
adc
adc
ror
(bad)
outs
dec
cmp
retf
pop
adc
mov
jl
jbe
mov
fdivrp
push
out
es
das
sbb
cdq
adc
and
jnp
mov
test
inc
push
lods
push
neg
add
add
jmp
(bad)
out
cld
mov
jl
mov
dec
stc
sub
out
sbb
xor
pop
push
mov
call
inc
jo
dec
retf
push
fsub
nop
fcomp
stos
pop
(bad)
fmul
scas
inc
iret
fist
sub
(bad)
mov
aam
jb
int
jge
sbb
iret
scas
pop
rol
dec
lods
jmp
adc
push
fistp
push
xor
das
fistp
mov
int
inc
cmp
inc
dec
ins
mov
inc
cld
sub
(bad)
ds
sub
mov
cwde
cwde
and
xor
cmp
inc
inc
out
push
sbb
inc
xchg
inc
pop
mov
loope
dec
fs
nop
cmc
mov
ds
sti
dec
adc
aas
daa
cmps
push
call
pop
das
mov
call
outs
jp
xor
add
ret
movs
fstp
or
out
jne
jle
push
ffreep
sub
sbb
and
ret
loopne
fidivr
rcl
mov
mov
mov
sahf
test
push
add
sub
shr
pop
outs
cmp
popa
sahf
jle
outs
adc
push
dec
xchg
call
out
add
sahf
ins
xlat
sar
xchg
push
rcr
pop
push
das
jp
xor
ins
(bad)
push
push
test
jmp
dec
shl
mov
adc
jecxz
xor
dec
push
(bad)
and
dec
jg
jl
sub
add
cmc
jae
out
jle
retf
sub
scas
push
js
xlat
push
mov
and
push
icebp
daa
sub
mov
les
inc
imul
cmp
mov
mov
pusha
mov
cmp
sub
push
repz
push
mov
or
pop
les
add
ret
fs
xor
add
repnz
mov
xor
and
push
jb
pop
push
retf
arpl
fild
dec
mov
mov
retf
sub
sub
xor
repnz
frstor
cmp
mov
div
popa
ror
js
lods
jecxz
lods
push
rcl
dec
cmp
int3
xor
cmp
mov
push
sbb
jnp
mov
xor
push
adc
mov
cmp
push
dec
arpl
jmp
retf
dec
scas
movs
in
iret
out
add
cwde
or
push
xchg
rcl
ins
das
adc
enter
mov
aaa
es
dec
stc
pop
push
lahf
add
pop
stos
stc
mov
mov
stos
push
cli
xor
cmp
add
mov
push
sub
ins
and
cld
mov
bnd
inc
in
in
arpl
scas
in
ja
add
mov
xor
dec
jmp
daa
mov
mov
(bad)
sbb
aad
jbe
adc
adc
lock
clc
adc
and
(bad)
xrstors
and
out
inc
inc
mov
sbb
shr
mov
adc
jne
and
push
test
xor
scas
dec
mov
fld
stos
dec
sbb
aas
fadd
jp
hlt
push
mov
mov
div
in
bound
cmc
sub
cmp
outs
cmp
adc
and
ret
sbb
daa
push
addr16
jns
mov
cmc
mov
pop
mov
dec
arpl
mov
in
fs
inc
mov
jo
cli
rcr
sbb
repnz
popa
je
push
dec
dec
cld
out
cmp
dec
mov
mov
lds
sub
popf
enter
retf
leave
(bad)
pop
or
fwait
push
jle
pop
mov
je
mov
fldcw
or
cmp
sbb
aam
jmp
adc
das
mov
add
out
jmp
fistp
pop
mov
pop
dec
lds
cdq
or
sar
ror
repz
sub
mov
jl
push
in
pop
xchg
sbb
xchg
sub
pop
adc
stc
push
dec
or
fild
(bad)
mov
sbb
jae
(bad)
or
inc
std
and
xor
push
push
cld
jp
mov
jecxz
sar
jp
mov
xchg
mov
enter
lea
fdiv
xchg
cmp
jb
xchg
jb
jmp
sub
cmp
stc
sbb
sbb
cmp
adc
cmp
(bad)
and
adc
jne
ins
sar
mov
push
xlat
popa
mov
mov
jb
sbb
and
sub
dec
movs
pusha
jno
pop
inc
fisttp
jp
pop
jmp
add
mov
adc
inc
test
scas
fisubr
push
dec
loope
dec
add
int
lods
push
inc
cmp
stc
iret
sbb
xor
jecxz
mov
loopne
add
mov
pushf
sub
pushf
outs
dec
retf
into
cmp
ror
sub
or
or
lds
aaa
mov
pop
pushf
push
mov
dec
push
sub
xchg
jbe
hlt
inc
retf
pop
sbb
loop
in
scas
aad
sub
xchg
sub
pop
pop
jb
stc
test
push
mov
fnstcw
dec
ret
xchg
sub
sahf
sar
and
out
cmp
out
call
(bad)
(bad)
das
arpl
add
retf
inc
jmp
aam
lahf
and
adc
jo
cmp
aad
xchg
jb
mov
dec
mov
fidivr
aad
mov
into
cmp
xor
leave
out
sub
mov
sbb
les
push
jo
sub
test
mov
jb
mov
bound
inc
fwait
mov
dec
mov
aas
ins
shr
lahf
mov
imul
jne
stos
ret
sbb
or
cmps
stc
daa
rcr
cmp
retf
jmp
ins
mov
jle
iret
pmaxsw
inc
pop
sub
shr
mov
sbb
sbb
xor
mov
cmp
sub
ins
loope
push
(bad)
jnp
pop
push
and
iret
cmc
pop
xor
push
popf
test
arpl
push
pop
mov
mov
add
ins
or
lea
pmaddwd
and
(bad)
dec
push
dec
mov
je
imul
popf
rcr
dec
bound
pop
mov
xchg
sub
retf
or
cmp
lahf
pop
mov
pushf
push
jmp
aas
or
lea
adc
stc
jne
hlt
push
jmp
jmp
sub
test
jecxz
imul
stos
loop
test
or
and
pop
sub
std
pop
in
dec
mov
sbb
fdiv
cmp
loope
sub
jae
mov
push
or
out
xchg
in
pusha
jge
xchg
cwde
dec
scas
sub
sub
dec
iret
xchg
cs
mov
xchg
push
(bad)
cld
iret
and
scas
dec
(bad)
cli
xlat
(bad)
and
jns
adc
sti
sbb
mov
mov
jge
pop
(bad)
imul
dec
push
jo
shr
sub
xchg
loop
outs
cmp
jle
xor
aam
jae
push
sub
call
sub
mov
cwde
movs
xchg
sub
stos
add
lods
mov
mov
jnp
cmps
retf
popf
push
pop
fwait
(bad)
and
dec
hlt
mov
push
dec
mov
arpl
mov
loopne
and
mov
mov
xor
adc
mov
scas
mov
(bad)
repz
rcl
xchg
icebp
pushf
pop
jp
adc
cs
mov
xor
fcom
enter
cmps
retf
ins
dec
mov
mov
sahf
clc
fisub
xchg
popa
jecxz
xchg
imul
popa
sub
shl
out
cmps
sub
jmp
cmps
iret
(bad)
ja
lds
cmps
outs
daa
add
mov
dec
pop
pop
mov
stos
in
jns
xor
sti
into
mov
imul
cmp
push
sub
and
ja
mov
dec
cmps
inc
inc
inc
mov
ficom
imul
xor
ss
push
sub
or
sti
jne
or
arpl
pop
mov
call
mov
xchg
int3
popf
cmp
or
clc
mov
or
addr16
imul
inc
test
xchg
and
cwde
inc
push
dec
sbb
jl
or
(bad)
retf
mov
dec
mov
in
outs
rol
pop
lods
loopne
push
jmp
arpl
dec
(bad)
mov
push
adc
inc
mov
mov
lock
int3
test
cmc
mov
pop
push
and
mov
add
je
adc
sti
pop
cmp
test
mov
inc
jae
pop
sbb
mov
pop
in
aas
imul
call
sub
shl
mov
call
clc
cmp
fmul
pop
outs
mov
sbb
pop
out
sub
(bad)
ds
imul
fst
iret
fstp
dec
mov
mov
sbb
ss
inc
in
push
cmp
push
enter
cmp
hlt
outs
adc
ficom
scas
frstor
xlat
pop
lock
jge
jae
jp
and
adc
and
sub
jge
cmp
mov
movs
stos
inc
push
loop
mov
push
fcomp
mov
xor
pop
mov
push
or
scas
div
xor
or
and
stos
jne
retf
adc
push
loopne
adc
mov
(bad)
ret
push
dec
and
test
test
mov
pop
jae
push
ficom
jmp
dec
mov
pop
adc
ss
adc
(bad)
shl
cli
push
repnz
jnp
mov
ins
pop
sbb
adc
enter
retfw
je
sahf
loope
(bad)
push
push
inc
sub
not
popa
add
mov
test
push
sbb
cmp
icebp
(bad)
or
cmp
sub
sti
pusha
je
iret
sti
ins
(bad)
mov
mov
jg
out
and
fwait
sub
push
dec
cmp
outs
sbb
call
add
(bad)
movs
adc
shr
cmps
call
jg
test
scas
js
push
mov
xchg
and
mov
lods
sub
fcmove
out
cmp
or
idiv
xchg
pop
ins
mov
jl
cmp
jle
mov
cmps
arpl
sbb
mov
cmp
mov
daa
inc
loopne
jmp
fcomp
mov
sar
mov
mov
mul
cdq
xor
clc
(bad)
sahf
out
add
push
aaa
and
je
jns
mov
inc
and
push
lea
cmp
es
fiadd
sar
in
xchg
mov
xor
mov
adc
loopne
pop
or
movs
and
loop
fcomp
adc
mov
cli
mov
mov
mov
retf
add
call
daa
sub
adc
or
gs
aas
stos
ficom
fdivr
out
imul
movs
loop
jnp
mov
jno
in
sbb
push
sbb
mov
cmps
rcr
pop
scas
jb
int
add
icebp
push
(bad)
cmc
jmp
xlat
cmps
ficom
jo
push
mov
gs
adc
ror
pop
ret
mov
fsub
scas
cld
enter
mov
push
sub
mov
pop
push
jbe
int
ja
and
rcr
sbb
ror
adc
dec
ja
je
inc
mov
mov
pusha
xchg
sbb
push
aaa
aad
fstp
pop
or
(bad)
jmp
rcl
dec
sbb
fldz
mov
test
mov
inc
adc
iret
ins
cmp
cmc
mov
mov
adc
sub
add
xchg
hlt
and
clc
push
push
jmp
inc
or
out
(bad)
adc
push
mov
ret
mov
mov
cmp
sub
call
shl
out
push
loop
jns
mov
test
cmp
ror
(bad)
push
pusha
das
xor
mov
jl
xor
adc
ds
adc
outs
mov
dec
inc
sub
les
pop
mov
dec
out
push
jno
cmp
adc
mov
jecxz
out
mov
mov
push
movs
or
xlat
loopne
cmc
icebp
test
inc
pop
and
add
aad
jg
jno
test
lahf
fwait
inc
neg
(bad)
xor
and
push
cmp
pop
enter
mov
push
jo
(bad)
mov
xor
dec
adc
leave
pop
inc
pop
add
xchg
cmp
push
pop
jo
mov
inc
cmp
mov
rol
inc
and
je
or
xor
pop
(bad)
mov
pushf
int
and
popa
push
xchg
jne
ret
in
mul
aas
mov
ins
repz
lods
(bad)
inc
mov
cmp
inc
sbb
scas
mov
icebp
xor
cs
stc
mov
mov
cs
mov
dec
pusha
scas
sub
and
ret
xchg
xor
scas
dec
pop
adc
imul
fild
inc
push
(bad)
repz
push
popf
push
ret
xchg
fcomp
push
dec
in
or
pop
enter
mov
inc
xor
xchg
dec
aad
jge
xchg
mov
scas
inc
movs
retf
stc
xchg
xor
pushf
inc
xchg
jae
frstor
pop
mov
in
sub
int3
and
sbb
int
and
call
popf
sbb
xchg
mov
mov
iret
(bad)
xchg
fwait
in
jmp
les
dec
mov
mov
cmp
pusha
ins
stc
sub
pop
call
fstp
sahf
xor
push
push
in
iret
jl
dec
and
mov
inc
mov
retf
mov
sbb
scas
push
je
xor
and
adc
adc
aas
xor
imul
pop
pusha
stos
mov
push
sahf
fisub
iret
push
cmp
mov
or
mov
dec
out
arpl
mov
xchg
sbb
in
mov
cdq
test
xor
scas
mov
adc
mov
test
iret
mov
mov
pop
ds
fwait
mov
mul
gs
pushf
pop
fmul
xchg
mov
test
mov
test
pop
jns
int
shr
xchg
and
push
xor
jnp
push
test
and
inc
inc
inc
lahf
push
inc
jl
idiv
int3
scas
and
loope
std
clc
dec
lods
mov
gs
scas
sub
mov
sbb
lock
mov
fsubr
outs
push
and
mov
pop
sub
xchg
mov
pop
out
out
sbb
xchg
stos
xchg
pop
shl
stc
fsubrp
popa
lock
repz
addr16
test
arpl
(bad)
clc
loop
lock
fnstsw
icebp
pop
outs
mov
aaa
popa
js
xchg
jmp
add
push
lock
pop
and
jae
add
inc
call
outs
scas
or
adc
add
test
jb
mov
retf
dec
push
imul
jl
mov
test
lds
dec
out
icebp
mov
ret
in
scas
test
cld
mov
fwait
shl
mov
aad
neg
xchg
or
movs
inc
cdq
push
in
sub
cld
mov
scas
sbb
inc
inc
mov
pop
(bad)
repnz
xor
out
or
cmp
call
in
or
cmp
push
pop
xchg
jae
nop
xchg
mov
or
mov
dec
sar
mov
mov
inc
ds
adc
mov
cmp
cmc
mov
mov
call
push
add
aad
sub
cmp
inc
movs
shl
jle
sar
push
loope
push
push
dec
and
cli
dec
inc
xchg
sbb
(bad)
pop
aas
fisttp
pop
outs
mov
nop
adc
push
jae
leave
adc
gs
ret
inc
cmp
enter
les
inc
stos
stos
add
jecxz
pop
xchg
inc
sbb
xor
sub
mov
add
into
sysret
sbb
jecxz
dec
andps
arpl
xchg
inc
pop
sbb
ret
mov
sbb
fild
mov
repz
dec
sbb
sub
cmp
fsub
bound
call
and
cmp
or
mov
cmp
sub
add
loopne
pop
retf
daa
nop
repnz
outs
loope
pop
mov
sahf
pop
jge
dec
xchg
addr16
dec
add
xchg
mov
outs
cmp
xchg
add
cs
mov
cmps
(bad)
in
xchg
cs
sbb
xor
hlt
movs
iret
cmps
mov
sub
call
mov
dec
mov
test
lahf
daa
xor
leave
xchg
xor
jo
push
pop
mov
mov
jae
cmp
jnp
jmp
rcl
pop
mov
inc
inc
ret
rcr
lds
repz
outs
dec
xchg
stos
sti
enter
mov
pop
mov
ret
push
pusha
(bad)
stc
in
idiv
repz
sbb
nop
in
mov
add
cmps
sub
fwait
push
push
cwde
sar
fistp
sahf
add
cld
lods
xor
js
pop
fdivr
pop
mov
cmp
in
mov
test
out
out
mov
or
(bad)
cmp
scas
cmp
pop
hlt
enter
jmp
movs
call
and
mov
call
bound
ret
inc
rol
mov
sbb
sbb
cmp
pop
adc
aam
mov
retf
loope
jns
inc
das
shl
adc
aaa
lock
(bad)
lahf
mov
shr
inc
or
retf
fstp
sbb
iret
mov
js
icebp
mov
cli
mov
ss
add
xlat
jae
stos
clc
out
test
call
mov
mov
scas
xchg
test
out
jb
je
sbb
test
xor
push
aas
lods
mov
mov
dec
or
xchg
inc
jno
in
dec
or
iret
push
inc
or
add
(bad)
stos
mov
push
in
cmp
adc
push
in
mov
out
mov
in
cmp
fidivr
cmps
inc
cmp
inc
fbstp
nop
bound
ss
jge
in
xor
add
cmp
shl
cmp
test
jae
fistp
xchg
cli
xlat
clc
iret
inc
jnp
rcr
cwde
pop
add
ret
inc
inc
nop
stc
test
(bad)
call
mov
or
add
hlt
cmps
cdq
in
or
jmp
cwde
mov
pop
jbe
divpd
sbb
jle
and
push
jg
std
mov
je
jne
retf
popf
in
xchg
or
(bad)
mov
test
lods
fcom
mov
les
movs
fwait
sub
xchg
jae
cmps
lds
lahf
sub
pop
std
addr16
cmp
push
add
mov
mov
pop
sub
retf
xor
sub
std
sahf
loope
idiv
mov
fchs
cs
pop
movs
push
mov
cld
and
repz
test
mov
dec
out
out
ret
sbb
clc
dec
push
add
addr16
cmp
fstp
cmp
xchg
mov
fist
iret
fimul
push
or
call
call
xor
cmc
lds
jbe
or
lods
xchg
sbb
and
dec
mov
fcomp
imul
mov
jg
cmps
lfs
mov
pop
test
mov
and
jl
xchg
pop
repnz
pop
push
lea
push
jmp
jb
aam
and
mov
pop
dec
out
icebp
data16
and
and
cwde
call
nop
gs
fs
mov
or
stos
aaa
lods
(bad)
call
fs
les
dec
mov
pop
mov
pusha
jno
mov
imul
mov
sar
cwde
in
fstp
sub
out
jo
push
jmp
jbe
scas
sbb
pop
repz
mov
int
and
xchg
sar
pop
out
cmp
add
dec
or
dec
sbb
push
and
sbb
add
retf
mov
pop
jmp
pop
pop
adc
sti
hlt
nop
and
push
enter
adc
jmp
(bad)
bound
cmp
xchg
popa
push
xor
in
arpl
jb
xor
js
add
icebp
retf
nop
push
cmp
cwde
push
lods
xchg
mov
outs
sbb
(bad)
fsubr
pusha
rol
das
test
fst
xor
xlat
int
inc
mov
pcmpgtw
out
out
fstp
(bad)
sti
stc
xor
leave
imul
(bad)
cmp
enter
or
mov
add
mov
ins
mov
mov
clc
(bad)
sar
mov
out
movs
or
enter
inc
sti
xor
wrmsr
pop
jb
out
loopne
imul
adc
xlat
aam
pop
scas
mov
push
jno
inc
and
xor
retf
cmp
or
pop
push
pop
loop
mov
pop
dec
sbb
lea
inc
mov
fild
sub
inc
mov
pop
test
rcr
or
jge
pop
mov
dec
ret
jne
dec
inc
(bad)
or
mov
in
pop
jns
or
stos
cmp
div
push
(bad)
daa
pop
add
mov
cmps
nop
(bad)
pusha
frstor
dec
cwde
push
in
push
inc
and
jmp
pop
je
push
push
cmc
inc
push
aam
or
popa
aas
mov
cmp
retf
xchg
pop
xchg
cs
stc
mov
or
jo
dec
mov
adc
clc
cmps
mov
and
(bad)
jmp
or
aam
sub
push
inc
sub
sub
jb
or
push
jle
and
sahf
into
add
pop
jo
dec
mov
popf
es
in
inc
add
outs
(bad)
jp
dec
push
mov
mov
or
js
jmp
pop
mov
in
xor
rcl
mov
nop
xchg
push
gs
mov
push
xor
aas
push
cli
(bad)
jg
pop
pop
jae
push
(bad)
cmps
int3
movs
mov
mov
in
outs
cwde
les
cmp
ficomp
loopne
adc
pop
repz
(bad)
and
retf
aam
hlt
mov
mov
pop
inc
jl
or
jg
inc
inc
mov
push
sti
add
shr
sti
lods
jne
mov
bound
and
aas
or
jl
loope
mov
les
add
mov
and
mul
sti
jnp
and
pop
ins
ret
add
enter
dec
leave
mov
inc
test
cmps
stos
ds
inc
imul
test
gs
dec
scas
fxch
aaa
dec
pop
ins
cmp
mov
push
out
pop
clc
pop
inc
je
push
jno
or
shl
leave
mov
or
daa
lahf
and
rcl
adc
push
sub
mov
mov
jg
jne
popa
shl
and
pusha
jo
cmp
mov
mov
sub
mov
sbb
sub
outs
fidiv
lods
cmp
adc
inc
and
inc
jmp
inc
sbb
int
mov
stos
arpl
loopne
xchg
pop
adc
test
xchg
inc
or
sbb
mov
repz
adc
enter
out
or
pop
outs
xchg
add
and
addr16
jbe
les
(bad)
cwde
mov
mov
jmp
rcl
ins
mov
or
dec
packsswb
jmp
aas
pop
mov
mov
scas
(bad)
aas
(bad)
or
dec
test
icebp
cdq
xor
sbb
out
xchg
neg
retf
sub
out
clc
xor
ret
cmps
mov
xor
shr
dec
leave
xor
aam
inc
xchg
xlat
pop
movs
repnz
lea
dec
js
lods
outs
adc
push
outs
dec
enter
mov
cmps
mov
cmp
and
push
pop
sti
push
cld
sub
idiv
xor
or
pop
shr
outs
outs
add
mov
movs
cwde
pop
sar
inc
and
inc
in
rcr
inc
rcr
inc
pop
fs
aas
dec
out
cmp
and
cld
and
jmp
jae
ror
fwait
mov
cmp
jl
shl
and
mov
adc
out
push
pop
sbb
aam
sub
in
scas
jo
scas
xor
rcl
(bad)
xchg
jecxz
add
test
add
sti
repnz
dec
lea
out
lods
imul
mov
add
xor
inc
mov
or
(bad)
jg
jg
sub
lds
push
xchg
sub
test
and
and
cmc
add
or
scas
div
push
cmps
cdq
stc
sbb
mov
xchg
dec
les
mov
loop
jl
aam
jne
out
fwait
sub
mul
js
sar
sub
dec
jae
inc
add
sar
cmc
pushf
inc
nop
pop
jmp
scas
jnp
mov
bound
add
add
push
pop
ds
sub
dec
mov
mov
add
mov
adc
std
aad
jl
mov
mov
add
jg
(bad)
or
xchg
sbb
in
add
cmps
cmps
stc
repz
stc
xor
xchg
test
sub
repz
out
movs
fdiv
jl
jp
enter
sub
jne
mov
test
fcom
pop
lock
pop
sub
inc
and
(bad)
aas
push
bound
lea
jno
xchg
inc
xchg
das
push
inc
mov
in
mov
lods
add
xor
add
xchg
push
pop
jbe
call
inc
add
pusha
mov
and
lds
jecxz
popf
mov
mov
int
inc
sub
add
lods
(bad)
adc
arpl
imul
jp
pop
pop
jae
sti
imul
pop
call
cmp
dec
push
mov
clc
ja
loope
sub
xor
xlat
mov
mov
fcom
push
popf
test
mov
jb
out
test
inc
shr
pushf
test
push
inc
sbb
xor
xor
(bad)
ret
lods
dec
mov
mov
stos
into
sbb
xchg
fisubr
adc
(bad)
fisubr
loopne
in
rol
cdq
inc
mov
stos
popf
adc
and
sub
xchg
ficom
sbb
call
outs
aad
jge
repnz
mov
lds
ret
push
add
jns
(bad)
jle
xchg
mov
push
inc
out
cmp
push
test
sahf
push
arpl
xor
(bad)
jo
pusha
and
dec
jecxz
or
mov
clc
bound
pop
lea
sub
jl
or
retf
cs
hlt
or
aas
pop
jl
sahf
and
sub
cmps
dec
shr
xor
ja
mov
repnz
and
(bad)
shl
cmp
xchg
jne
jl
popa
neg
pop
int
(bad)
(bad)
(bad)
mul
or
mov
push
hlt
(bad)
out
mov
sub
cli
sbb
sub
jb
pushf
hlt
test
or
nop
jno
pop
fdiv
mov
ret
mov
mov
retf
xchg
in
adc
movs
aas
stos
jecxz
shl
ror
aas
popa
xchg
popf
xchg
mov
lahf
adc
ins
ds
jle
pop
cli
ins
ins
hlt
lahf
sub
addr16
es
arpl
stos
cmps
ror
jge
mov
dec
cmp
mov
pop
pop
mov
repnz
sti
into
mov
ror
adc
pop
lea
dec
cmp
inc
mov
outs
movs
sbb
out
jne
out
fisubr
xlat
push
mov
mov
movs
xchg
out
sahf
push
fiadd
call
mov
jb
jg
(bad)
int3
mov
test
inc
and
jmp
dec
jg
cmp
lds
mov
mov
push
out
scas
inc
call
loopne
push
sub
jle
je
les
ins
fist
pushf
sub
cmp
adc
push
aam
or
inc
adc
out
adc
fcomp
adc
shl
stc
fbld
out
in
les
add
dec
cmp
jo
call
dec
jmp
push
mov
out
jno
das
ds
cmc
sub
ss
dec
xor
in
scas
ret
mov
or
inc
enter
pop
das
iret
mov
inc
mov
call
pop
jecxz
pop
push
repnz
shl
repz
sbb
push
or
pop
je
out
test
inc
xchg
jle
dec
push
inc
int3
adc
and
js
cdq
neg
pop
fucomi
mov
int
xor
lods
les
xchg
xchg
cmp
fild
int3
mov
mov
fdiv
jne
and
mov
and
movs
push
outs
cmp
mov
cli
pop
ret
sub
test
mov
ret
sar
retf
mov
out
fisubr
movs
pop
jg
mov
gs
add
aad
mov
sub
fisubr
mov
xchg
dec
daa
jecxz
pop
push
sbb
push
nop
aaa
and
mov
push
and
jecxz
addr16
mov
out
test
mov
dec
xchg
mov
inc
jns
test
std
push
retf
int3
fist
jmp
push
aas
test
pop
cmc
fcomp
mov
data16
ss
cmp
xor
and
pushf
les
cmp
repnz
sub
pop
shl
sbb
mov
aad
sahf
pop
sbb
mov
mov
adc
xchg
add
push
mov
push
cmp
inc
cmp
(bad)
mov
jmp
cld
inc
cmp
dec
jns
push
adc
jae
int
pop
and
int3
xor
aam
std
or
mov
xchg
fldcw
mov
outs
inc
pushf
(bad)
test
pop
mov
sbb
push
pop
gs
arpl
jg
push
mov
push
ins
(bad)
xor
dec
push
pop
lds
ins
xchg
jns
stos
sti
(bad)
scas
sbb
sbb
mov
and
fwait
or
pop
mov
nop
push
pop
cmp
lds
mov
aad
push
fdiv
popa
mov
loop
jns
mov
jge
push
dec
sahf
cld
mov
into
fucomip
clc
into
cdq
add
push
pushf
sbb
jns
das
shr
and
jns
pop
test
jmp
pushf
cs
ja
xor
adc
loopne
in
mov
inc
ret
dec
and
cmp
and
add
jbe
cmps
lahf
mov
mov
psrlw
xchg
push
idiv
push
pusha
xchg
lock
xor
pop
cmp
shr
test
ret
xchg
xor
bound
lods
push
mov
cmp
nop
push
dec
mov
mov
xchg
scas
mov
inc
jbe
push
in
xor
cmp
mov
jnp
cmp
sub
mov
mov
pop
cmc
icebp
bound
cdq
jmp
mov
int
fidivr
mov
cmovs
mov
rcl
mov
xor
jb
ret
fcmovnb
cmp
sub
mov
ret
in
leave
imul
rcl
mov
cmc
imul
dec
sti
fmul
lods
cmp
xchg
and
shr
lea
fdiv
inc
stos
pop
jge
jns
je
mov
(bad)
sbb
xchg
sbb
jo
retf
(bad)
and
dec
gs
shr
fdiv
into
lahf
in
push
pop
fs
out
scas
outs
out
push
inc
and
hlt
or
or
sar
inc
out
jno
xchg
scas
rcr
mov
out
ins
inc
cld
mov
repnz
pusha
outs
cmp
add
xchg
sahf
xlat
and
inc
sbb
jae
test
scas
int3
mov
cmps
pop
int
jle
or
enter
out
xor
xor
clc
cmp
nop
bound
sbb
leave
fisubr
ins
adc
xlat
add
inc
out
(bad)
aad
xor
ja
cdq
pop
pop
imul
fsub
dec
xchg
das
adc
arpl
xchg
test
pop
ret
sti
js
sub
jecxz
xor
cmps
or
sub
mov
pop
ret
jae
repz
cmp
mov
jg
scas
mov
int3
aad
in
adc
jmp
retf
fdivr
fidiv
adc
pop
pop
in
xor
enter
pop
cdq
rcr
or
sub
add
jae
lock
dec
outs
pop
push
jmp
repz
add
sub
mov
push
imul
in
(bad)
sub
and
and
cmp
cmps
lds
add
pusha
sbb
dec
dec
push
loope
jg
test
inc
pop
sbb
lods
mov
fld
xor
push
cmp
pop
inc
pop
pushf
stos
and
bound
mov
sbb
mov
arpl
in
sbb
loopne
xor
ror
cmp
std
adc
cwde
push
movs
aam
mov
mov
and
sub
or
push
aas
pop
push
shl
sti
push
jne
ret
or
cwde
enter
test
js
dec
(bad)
jne
call
inc
inc
sub
cdq
fwait
aas
jl
adc
dec
test
sub
data16
repz
pop
mov
dec
mov
add
xor
rcr
mov
lods
add
mov
gs
cli
push
shl
mov
mov
mov
push
int3
push
sub
clc
movs
lods
js
xchg
rcr
jno
call
bound
rcr
pop
cmp
(bad)
cld
mov
jecxz
sbb
pop
fidivr
jmp
pop
pop
loopne
mov
pushf
int3
xor
es
pop
sub
sub
ds
mov
mov
adc
jo
jge
fild
xor
je
bound
fst
dec
xchg
xchg
add
adc
mov
fst
neg
mov
push
dec
mov
adc
daa
inc
or
xor
loop
pop
cmp
and
cmp
and
pop
arpl
jmp
jp
retf
jecxz
push
pop
adc
push
add
ins
or
and
or
fcomp
xchg
iret
push
jbe
daa
dec
mov
std
popa
dec
push
(bad)
repnz
push
icebp
pop
sub
(bad)
inc
lea
retf
jae
adc
ss
push
mov
int3
mov
mov
add
cmp
les
repnz
scas
movs
cwde
jp
test
rep
dec
push
jne
pop
sbb
add
imul
mov
dec
fs
adc
call
push
stc
jp
stos
inc
hlt
ret
jns
xchg
out
pop
cmp
mov
and
shl
ds
jl
clc
mov
call
xor
in
push
mov
shr
inc
movs
mov
or
xor
cmp
cmc
daa
mov
addr16
inc
add
enter
xor
sub
fisubr
in
mov
sti
push
cld
jns
fisttp
dec
inc
inc
xchg
test
int
and
dec
mov
mov
rol
ficom
adc
dec
iret
push
cmp
adc
popf
and
int3
push
cmp
out
xchg
add
pushf
pusha
jmp
mov
imul
in
jo
pop
mul
sbb
sub
(bad)
mov
and
cdq
lock
push
jp
mov
lea
fiadd
call
mov
xor
inc
cli
les
mov
dec
vpcmpgtb
adc
mov
rcl
adc
(bad)
cmp
mov
mov
mov
test
fsub
add
or
iret
adc
gs
movs
lods
ins
lahf
mov
fiadd
jo
mov
cdq
(bad)
js
inc
sbb
aad
ds
rcr
dec
lock
lds
inc
inc
jnp
xlat
xor
push
xchg
cmp
enter
cmp
and
xor
push
add
dec
mov
add
mov
sahf
add
add
ret
mov
push
and
jmp
test
daa
outs
jecxz
ja
stc
inc
fdiv
sbb
ror
jns
stos
sbb
sbb
enter
sar
mov
xor
push
jo
fsub
(bad)
int3
test
xlat
fstp
(bad)
adc
jo
sahf
and
push
stc
rcl
jnp
xchg
sub
add
imul
cmp
mov
inc
mov
cwde
sub
cli
and
ss
fmul
fs
in
mov
jecxz
cmc
enter
cmp
and
cmp
mov
inc
inc
call
in
xor
je
jle
xchg
in
fidiv
imul
cmp
fs
jle
outs
int3
leave
mov
mov
mov
ins
fwait
dec
ror
dec
std
add
in
neg
cwde
test
int
(bad)
cmps
jge
xor
(bad)
cld
cmp
out
adc
aas
and
inc
(bad)
jb
ins
mov
inc
jge
test
fs
cli
in
mov
shl
call
mov
sahf
and
aas
movs
mov
retf
stos
stos
imul
mov
pop
out
mov
fadd
or
jnp
xchg
outs
adc
(bad)
pop
or
and
push
pop
jnp
jmp
js
aad
push
jno
mov
repz
push
sahf
cmp
xor
and
fwait
add
inc
sub
call
jb
daa
(bad)
cmc
in
xchg
gs
push
adc
repz
pop
push
pop
ja
icebp
out
cmp
pushf
push
pushf
cmp
mov
xor
pushf
dec
loopne
and
rol
cwde
stc
out
sbb
ror
inc
cld
push
stos
test
movs
pusha
mov
and
daa
xchg
cld
enter
(bad)
pop
pushw
lahf
aas
mov
int
sub
mov
xchg
stos
addr16
xchg
mov
cmp
sub
and
inc
and
in
or
enter
or
jae
sbb
enter
loopne
ror
out
outs
dec
lds
pop
je
div
aaa
sbb
sub
inc
pusha
add
push
fsub
mov
xor
loop
sti
shr
sub
lds
sub
fstp
xor
mov
xchg
lock
mov
push
dec
push
adc
dec
sbb
push
push
pop
pushf
not
inc
icebp
cmps
cmp
sub
jl
outs
arpl
aam
shl
add
push
ja
mov
sbb
std
sbb
mov
mov
mov
(bad)
jbe
cmp
inc
sahf
xor
pop
mov
inc
mov
jo
or
inc
in
aas
push
mov
clc
imul
lods
into
cmp
stc
mov
scas
mov
pusha
lahf
adc
in
mov
sbb
mov
cmp
addps
add
xor
mov
sub
jecxz
aad
jle
clc
inc
rol
fild
jbe
outs
jae
jo
call
adc
mov
jne
stos
repnz
mov
push
fldcw
icebp
bound
jb
pop
sahf
add
test
dec
mov
cmp
repnz
stc
retf
sbb
sbb
fimul
nop
mov
lfs
cmp
ror
mov
shr
shl
stos
cmp
ror
jmp
xor
inc
or
mov
in
jl
jns
int3
(bad)
jns
(bad)
xchg
daa
es
bswap
int3
stos
setb
pop
ss
lock
push
aaa
fisttp
mov
jmp
jne
cmp
jbe
jns
push
outs
push
or
xor
jp
out
cmc
ret
ror
ror
addr16
mov
(bad)
add
dec
mov
shl
repnz
inc
xchg
adc
ror
ds
push
inc
mov
or
mov
not
hlt
push
jo
and
test
or
mov
into
lea
mov
push
imul
pusha
adc
xchg
xchg
cmp
(bad)
pop
sbb
jge
and
ja
sub
inc
out
and
mov
cmps
adc
xlat
clc
dec
and
fadd
shl
xchg
mov
sbb
xchg
lods
fs
into
pop
lods
rep
fisttp
cmc
sbb
inc
rol
jg
dec
pop
daa
push
sub
popa
std
in
hlt
rol
push
adc
pop
or
retf
pop
pop
mov
test
mov
jmp
sbb
push
int
mov
cs
(bad)
jne
inc
clc
dec
and
jae
(bad)
out
adc
in
xchg
popf
xor
fsub
std
mov
and
lds
push
dec
jp
int
sbb
xor
inc
pop
push
cli
fadd
test
neg
jno
rcr
sbb
test
adc
cmp
stos
dec
out
inc
and
inc
movs
mov
jnp
pop
sbb
xor
mov
jecxz
into
mov
mov
out
sahf
call
inc
sub
dec
movs
jo
repnz
push
fcomp
repz
pop
jecxz
and
ins
pop
mov
push
jmp
xlat
dec
cmp
ret
bound
or
cmp
pop
loope
push
fcos
sub
or
push
pop
lods
test
pop
pop
pop
das
out
lods
push
outs
dec
enter
xchg
push
sbb
pop
xchg
imul
jno
dec
dec
jl
call
push
add
push
mov
xor
or
lahf
cdq
cmc
or
scas
xor
sbb
test
std
jae
(bad)
jecxz
pop
adc
xchg
jge
add
mov
ds
sbb
enter
sti
xchg
or
xchg
xor
stc
out
dec
aaa
cmp
out
and
inc
pop
sbb
push
cmp
lods
ins
sub
scas
retf
push
ror
outs
sbb
aam
inc
mov
aad
or
xor
test
xchg
and
mov
adc
mov
jo
int
rcr
or
xor
out
mov
jnp
add
mov
mov
rol
inc
mov
and
mov
cld
sub
cmc
fdivr
lods
gs
adc
add
sar
cmc
fmul
cmps
lods
mov
fs
push
out
lods
mov
dec
xchg
pop
and
and
sbb
inc
xor
fst
ret
sub
jle
adc
and
in
mov
retf
loop
ins
jns
mov
out
(bad)
mov
hlt
sar
jbe
cmc
adc
push
lds
push
fcomi
cmp
popf
mov
mov
or
cmc
and
fisttp
int3
fisttp
daa
mov
loop
mov
jp
retf
stc
xor
push
pop
mov
test
pop
retf
mov
mov
xchg
xchg
js
add
sbb
inc
mov
or
ffree
xchg
pop
(bad)
mov
outs
dec
loope
push
loopne
xchg
ss
rcl
sahf
das
movs
ret
pop
jno
stc
push
mov
sub
xor
(bad)
mov
ds
sbb
sahf
fidiv
jne
out
dec
fadd
mov
ret
js
lea
mov
inc
add
aaa
out
test
call
push
daa
mov
mov
sub
cdq
or
or
imul
pushf
jo
xchg
aas
popf
test
xor
and
fwait
mov
and
out
iret
fcomip
or
cld
xchg
jo
ror
sbb
and
test
inc
pop
pop
dec
adc
(bad)
xchg
mov
dec
fidivr
pop
aas
retf
and
push
jmp
aam
fyl2xp1
(bad)
push
inc
add
inc
adc
jns
(bad)
ror
mov
aad
test
mov
jae
or
mov
pop
push
add
mov
addr16
(bad)
repnz
add
pushf
xor
jl
lods
cdq
shl
popf
push
or
pop
shl
dec
xchg
out
call
movs
shr
xor
or
sbb
mov
lods
hlt
das
mov
je
and
iret
mov
cwde
rol
cmp
add
leave
lods
or
(bad)
test
mov
test
xchg
sbb
xchg
leave
xchg
and
mov
int3
ret
jle
mov
imul
add
ret
cwde
shl
ins
jecxz
inc
int
sahf
ins
(bad)
cmp
aas
scas
fidivr
and
xchg
sub
dec
sub
fs
movs
pop
inc
fsub
rcl
hlt
outs
test
movs
sub
xchg
and
cmp
xchg
add
rol
(bad)
out
loop
mov
dec
(bad)
addr16
(bad)
sar
pop
push
mov
jno
repnz
lock
cmp
mov
pop
xor
in
fsubr
jecxz
movs
mov
cs
lods
ja
or
fwait
mov
ins
and
inc
push
and
adc
adc
mov
scas
les
leave
inc
or
es
aaa
pop
inc
xor
jecxz
cmps
in
xor
je
ret
jp
stos
addr16
pushf
dec
xchg
repz
cmp
cmpps
sub
mov
ficom
outs
sbb
mov
enter
in
fwait
aad
xor
dec
xor
dec
mov
fstp
fs
ss
popf
lods
xchg
inc
imul
pop
leave
pcmpgtb
aaa
test
cmp
(bad)
push
push
xchg
cld
xchg
jg
push
xchg
mov
repnz
add
mov
or
mov
jle
jns
in
int
push
sbb
and
sub
icebp
jmp
xchg
add
mov
or
inc
jge
dec
imul
jle
and
push
mov
std
dec
dec
int
repnz
jno
imul
inc
add
jnp
jmp
fwait
pop
add
push
bound
add
cmp
cmp
dec
or
adc
sbb
in
dec
push
jle
retf
add
xchg
cmc
int3
inc
shl
add
pop
push
nop
pop
(bad)
jmp
mov
xchg
stos
jne
shl
jge
pop
add
push
mov
add
sub
frstor
inc
add
pop
mov
sbb
jg
ja
mov
cli
push
and
cli
shl
jnp
push
sbb
out
fisttp
cld
imul
xchg
cs
push
dec
mov
pusha
or
mov
inc
fild
push
xchg
ret
arpl
rcl
ss
adc
jo
ins
test
mov
mov
push
stos
ja
lahf
mov
and
daa
xor
mov
adc
mov
clc
ins
xchg
push
adc
pop
dec
pusha
cmps
sbb
hlt
dec
or
call
test
popa
or
adc
and
xor
cmps
push
aam
ss
jg
adc
cmp
inc
mov
dec
inc
outs
(bad)
pop
xor
jo
add
cdq
je
pop
out
jmp
lea
jb
pop
out
fiadd
mov
shr
and
ds
cmps
mov
bound
std
cli
jmp
sub
aas
int3
jno
fcom
xchg
std
movs
(bad)
cmovb
mov
xlat
dec
es
ret
adc
dec
sub
pop
adc
inc
and
xor
test
inc
pop
cld
(bad)
ds
(bad)
fnstenv
or
jge
mov
js
cmp
mov
mov
(bad)
retf
sbb
push
clc
or
xor
push
(bad)
jle
loope
mov
jl
and
fiadd
outs
call
stos
pop
in
mov
repnz
push
mov
fwait
or
sbb
imul
lods
xchg
mov
or
jl
add
pop
inc
cmp
cmp
adc
repz
test
sub
(bad)
mov
push
add
jno
xor
push
ja
cld
push
cmp
icebp
adc
fld
inc
enter
pop
mov
jne
mov
(bad)
punpckhdq
repz
mov
jb
(bad)
lods
or
(bad)
or
inc
or
push
xor
add
lods
out
xor
push
adc
add
dec
nop
jne
push
cld
adc
fldcw
lods
and
push
popf
mov
and
dec
push
push
cmps
(bad)
test
push
inc
adc
adc
repnz
jbe
int
cmp
pop
sbb
xor
js
xlat
xchg
imul
jb
mov
xchg
stc
out
call
xlat
push
(bad)
dec
lods
mov
dec
mov
sbb
pop
mov
xor
pop
into
cmp
in
lods
sbb
and
dec
adc
repnz
out
add
aad
ins
sbb
enter
lahf
cmps
xchg
fisub
or
add
mov
mov
sbb
push
mov
mov
loope
and
je
xchg
ret
out
or
push
sub
jns
add
pushf
and
cs
mov
xchg
outs
sar
jne
mov
sar
mov
ins
xor
stos
inc
stos
pop
jbe
sub
push
cmp
test
and
pop
and
sub
test
pop
cld
shl
test
dec
sbb
stos
cmp
adc
push
push
pop
adc
push
dec
test
dec
push
inc
add
xor
sbb
xor
adc
ret
adc
mov
sbb
dec
js
fisubr
test
fadd
jmp
scas
jbe
mov
dec
push
jecxz
and
retf
dec
add
sbb
inc
xlat
pop
jae
pop
fnstenv
rcl
mov
push
out
loopne
rol
mov
push
scas
sbb
fidivr
cdq
ror
cmps
sar
mov
sub
fisubr
jmp
mov
pop
daa
(bad)
enter
cmp
call
stos
fild
shl
mov
movs
(bad)
push
jns
js
and
pusha
xor
stos
rol
or
int
addr16
xor
out
fnstcw
adc
(bad)
mov
ins
lds
or
out
test
cmp
mov
xchg
scas
push
adc
lods
xchg
sar
jecxz
xchg
retf
push
jno
inc
and
sti
mov
push
xor
fisttp
jle
int3
xor
xchg
mov
das
dec
xor
add
mov
in
xor
xchg
out
jne
stos
fwait
mov
(bad)
cli
dec
inc
mov
jno
imul
cmp
jle
cwde
sub
test
adc
adc
pop
dec
push
test
lods
dec
dec
xchg
dec
loopne
stos
ficom
in
pop
bound
xchg
add
pop
loope
or
pop
mulps
sub
fs
loop
push
xor
leave
cld
adc
ror
push
xchg
icebp
or
xor
inc
nop
repnz
xchg
jns
sbb
mov
mov
push
pusha
sub
push
push
pop
adc
mov
fwait
mov
pop
add
mov
add
mov
outs
in
mov
sbb
ret
sbb
fist
jmp
pushf
adc
test
sbb
xor
call
adc
lods
into
scas
aas
fadd
mov
and
sbb
out
in
push
mov
imul
sub
cli
arpl
mov
mov
or
fcmove
mov
je
ins
sub
inc
lods
xchg
adc
dec
in
push
adc
ret
inc
xchg
mov
mov
jb
arpl
dec
add
dec
dec
xor
movs
mov
push
popf
dec
mov
add
retf
and
mov
stc
adc
sub
js
sbb
clc
xor
(bad)
outs
mov
mov
and
sbb
sub
sbb
mov
jb
sar
mov
in
or
scas
jl
mov
inc
xor
xor
lahf
call
test
imul
inc
dec
xor
int
pop
jmp
inc
neg
inc
sub
aam
call
adc
push
mov
and
bound
sbb
jo
(bad)
jmp
imul
cmp
jns
aam
cmc
iret
mov
dec
repz
jle
cmp
call
push
loop
test
or
sbb
int
mov
repnz
pop
scas
sti
push
push
pop
push
(bad)
scas
xor
ja
sbb
sbb
sti
(bad)
pop
dec
(bad)
cmpps
adc
xchg
xor
adc
cmc
push
xchg
adc
pop
fisttp
xor
xor
mov
mov
sub
nop
sub
add
xor
cwde
mov
std
das
(bad)
call
mov
mov
(bad)
cmc
jmp
sub
pop
ins
cs
test
in
pop
out
fstp
clc
enter
pop
retf
int3
rcr
sbb
dec
rcr
jl
stc
push
inc
mov
repz
mov
jp
mov
push
and
inc
lds
and
mov
jne
inc
push
or
arpl
retf
sbb
jmp
mov
imul
js
data16
clc
loope
popa
push
scas
enter
push
xchg
pop
into
loop
lods
loopne
pop
stos
jno
aad
push
cwde
pop
jp
arpl
ffree
jns
or
(bad)
mov
sub
test
xor
ret
call
std
xchg
and
cmp
fsubr
(bad)
movs
xor
scas
sub
test
xchg
mov
inc
sub
and
popa
leave
or
xor
xchg
or
(bad)
push
sub
push
arpl
bnd
stc
outs
mov
and
add
jmp
scas
sti
fdiv
test
cmp
cmp
add
inc
push
jge
push
jle
dec
rcr
and
mov
adc
and
addps
dec
dec
push
lea
and
mov
pop
xchg
mov
xchg
mov
int3
xchg
jne
jae
adc
out
mov
cmp
out
and
stos
sbb
mov
xchg
das
daa
leave
dec
xor
int3
bound
mov
mov
pop
or
cmps
xchg
mov
jmp
sbb
enter
ja
stos
inc
jbe
push
mov
mov
inc
sbb
hlt
mov
push
xchg
rol
inc
ja
js
mov
inc
inc
repz
sbb
mov
stos
cld
popf
mov
jbe
scas
loope
cdq
xor
jle
cmp
in
fxch
push
out
ja
pop
(bad)
(bad)
sub
mov
push
sti
dec
test
mov
or
add
shr
xchg
mov
push
enter
xor
lods
add
dec
call
clc
repnz
lods
xor
stos
xor
mov
hlt
fadd
pop
mov
mov
scas
jns
call
adc
mov
jne
or
out
int3
mov
pop
leave
pop
push
icebp
repz
mov
xor
add
dec
ret
sbb
or
mov
fild
jp
or
shl
nop
push
jns
test
add
and
jle
xchg
bnd
or
test
and
cvttps2pi
cmp
loopne
inc
fadd
mov
cli
dec
mov
mov
mov
out
arpl
xchg
adc
or
ret
adc
inc
cmp
cmp
mov
test
jns
sub
adc
repz
rcr
cmp
dec
icebp
add
movs
das
xor
push
mov
lds
stos
xor
repz
inc
push
int
inc
pop
dec
push
inc
jg
dec
jg
or
jle
pop
ficom
retf
adc
repnz
adc
fldenv
mov
sbb
les
jno
lods
lods
imul
mov
test
adc
(bad)
or
(bad)
ss
ja
out
add
xchg
jb
push
jo
jne
adc
inc
mov
mov
pop
cmp
ret
mov
jmp
iret
mov
or
inc
fwait
jnp
mov
std
sub
adc
ss
mov
lods
in
jns
addr16
and
adc
popa
mov
test
dec
fist
add
hlt
in
les
(bad)
out
das
lds
ret
jge
cmp
mov
xchg
xchg
push
xchg
sub
push
or
xor
lea
push
out
sbb
push
loopne
push
sub
cdq
or
popa
aad
inc
adc
inc
inc
sbb
adc
sbb
push
mov
or
movs
dec
dec
sbb
outs
cdq
and
inc
lea
mov
arpl
push
pusha
outs
push
sub
jle
and
dec
pop
jle
dec
cmps
jge
jl
(bad)
out
mov
push
mov
dec
clc
pop
stos
xlat
lods
jbe
add
mov
mov
push
sbb
gs
push
sub
cmp
push
aam
(bad)
imul
xchg
ins
mov
inc
stc
sub
dec
ja
sub
sbb
xchg
cmp
lock
retf
dec
xor
mov
dec
add
ins
test
ret
fstp
lahf
lods
jmp
push
sti
sbb
lahf
pop
jmp
cdq
dec
xchg
ja
fisub
repnz
addr16
pop
push
or
cli
out
arpl
leave
sub
pop
dec
mov
pusha
fadd
pop
dec
push
or
(bad)
repz
cmp
inc
jmp
add
int
sub
push
outs
sub
and
sti
xchg
movs
pop
push
inc
xchg
sti
mov
push
adc
in
dec
rcr
call
inc
and
pop
or
push
jno
loop
jle
mov
daa
jl
jl
pop
aad
leave
mov
jp
(bad)
cwde
outs
push
jae
or
mov
ins
lods
lds
jg
lods
ss
mov
or
jbe
cmc
cmp
bound
fwait
mov
cwde
xchg
adc
loopne
daa
adc
mov
xchg
dec
xchg
shl
in
popf
fisubr
dec
fs
cwde
push
sbb
mov
fsubr
sahf
mov
aaa
into
(bad)
stc
push
aaa
sbb
lds
pop
out
xchg
cmps
shl
sti
add
dec
or
dec
test
xchg
pop
push
xchg
xchg
add
fs
(bad)
ins
or
sub
jb
std
dec
cdq
inc
add
push
fisub
pusha
sbb
xor
stc
pop
cmp
sub
mov
push
adc
push
jge
mov
ret
rcr
xchg
adc
pop
lods
push
neg
jo
sbb
mov
pop
adc
mov
jecxz
mov
mov
xchg
outs
cmp
push
cs
push
cmc
enter
pop
(bad)
out
cmp
(bad)
aam
sbb
add
mov
dec
leave
sbb
int
jo
dec
mov
les
cmps
fucomp
jle
jne
or
mov
and
inc
test
call
mov
fisttp
ja
inc
test
cmps
cld
fisttp
stos
jo
addr16
jecxz
mov
stos
sahf
mov
xor
cmp
or
std
cmp
add
mov
xor
push
push
dec
sbb
or
mov
clc
cs
sti
or
ficom
add
call
inc
in
loope
ja
fdiv
xchg
pop
dec
stos
sub
pop
adc
mov
(bad)
or
fs
pop
mov
shr
js
aam
aas
dec
aam
dec
jl
test
fs
mov
and
inc
add
mov
jecxz
mov
inc
(bad)
cmc
mov
data16
pop
cmp
jae
gs
and
or
sti
cmc
mov
adc
nop
xchg
inc
push
mov
and
inc
enter
pop
mov
jge
fldln2
mov
es
jmp
cmps
mov
cmps
or
mov
mov
addr16
xor
jg
retf
fwait
pop
int3
jo
mov
pop
rcr
adc
sbb
and
js
jnp
sar
mov
push
adc
xor
stos
rcr
dec
daa
dec
out
and
add
idiv
pop
xor
mov
nop
sbb
lahf
push
push
test
push
call
mov
scas
mov
xlat
bound
faddp
add
ret
call
mov
movs
xor
test
test
outs
sub
cmp
inc
in
push
inc
sub
jae
push
out
inc
dec
pop
inc
in
test
lock
pop
inc
in
mov
gs
mov
enter
shl
inc
ficom
dec
xor
jbe
inc
mov
mov
adc
stos
push
pop
push
cmp
ss
push
sub
inc
and
add
xchg
inc
cmps
fs
add
or
and
sbb
sbb
(bad)
aad
dec
pop
fmul
cmp
mov
sbb
jmp
lahf
mov
movs
mov
inc
jle
fild
push
clc
cmp
jg
push
pusha
mov
in
dec
xchg
cmps
(bad)
sbb
hlt
adc
xor
push
add
xchg
add
fcom
push
pop
mov
and
loop
sbb
push
icebp
and
retf
lods
jmp
sahf
inc
movs
pop
mov
xor
in
lods
mov
or
xor
sub
scas
and
mov
enter
mov
and
xchg
lock
sub
adc
dec
mov
call
rcr
sbb
int
and
retf
ror
test
retf
dec
imul
xlat
sbb
fcmovb
data16
lods
ficom
lar
mov
add
jmp
clc
cmp
sbb
test
xor
sbb
push
sbb
xor
aas
and
inc
mov
jmp
(bad)
iret
data16
lea
push
push
lahf
mov
adc
mov
(bad)
loope
jo
sahf
loop
xor
arpl
call
inc
ins
jmp
dec
movs
gs
jle
cld
jne
pop
add
inc
dec
push
xchg
dec
out
jp
cmp
or
mov
jbe
outs
xor
popa
cmp
adc
dec
jp
sahf
rol
mov
adc
mov
pop
aad
rep
mov
int3
adc
xor
ret
jae
jno
add
out
sub
cmp
fmul
(bad)
loopne
les
jbe
pop
mov
pop
sub
sub
pop
sub
and
(bad)
mov
mov
cmp
adc
cmp
hlt
jnp
icebp
jecxz
push
rol
xchg
or
stos
mov
lds
neg
test
fistp
rol
mov
dec
imul
jno
xchg
iret
inc
mov
jnp
lods
or
int
int
push
adc
in
sbb
mov
fwait
mov
das
sbb
xor
fldenv
adc
cmps
mov
maskmovq
idiv
lds
(bad)
mov
fld
and
call
gs
or
(bad)
cli
cdq
cmc
mov
loop
(bad)
adc
psubw
lds
stc
pop
add
cmc
mov
xor
icebp
or
gs
in
mov
jbe
mov
xchg
add
mov
xor
scas
icebp
and
jb
fst
and
push
mov
aas
lods
dec
retf
retf
lea
cwde
xchg
xor
imul
sbb
test
ror
or
div
or
jmp
mov
and
bound
outs
pusha
inc
movs
pop
clc
mov
jno
push
and
jle
out
mov
xchg
inc
push
aas
out
pop
shl
push
push
pop
mov
mov
xor
sub
jmp
cmps
push
mov
fs
xchg
test
enter
pop
dec
mov
and
sti
popf
sub
ins
adc
mov
pop
xchg
shl
or
jle
stos
je
lods
ret
adc
ror
pop
(bad)
cmps
sub
mov
les
inc
push
push
stos
push
inc
test
lock
cs
retf
mov
xlat
mov
les
mov
(bad)
fs
stc
push
adc
dec
cli
shl
dec
movs
mov
inc
shl
fwait
pop
pushf
shl
test
ret
cmp
or
aaa
pop
mov
stos
or
and
std
fsubr
aaa
cmps
int3
ins
icebp
adc
adc
aas
add
cmps
fadd
pop
or
sbb
sub
sbb
ret
sbb
pop
mov
xor
cmp
xchg
test
int
pop
in
lods
daa
pop
ror
cmp
je
les
arpl
push
mov
ss
out
push
jl
shl
aas
add
mov
pop
sbb
es
cmp
xchg
xor
adc
and
fisttp
mov
movs
mov
nop
fcom
ins
xchg
int
jns
mov
outs
mov
bound
inc
(bad)
dec
adc
gs
inc
loop
daa
outs
add
mov
popf
push
lds
ins
aam
mov
pop
ret
and
push
xor
cdq
jmp
jle
ins
mov
and
mov
sub
in
pusha
jg
jne
dec
sub
mov
pop
xor
push
push
jno
and
ficomp
or
arpl
inc
adc
popa
mov
lds
in
jmp
test
in
das
les
mov
movs
lds
pop
mov
push
pop
sbb
ror
or
jb
popf
je
mov
out
mov
sete
adc
ins
xchg
cmp
das
sub
ret
xlat
jle
dec
mov
sub
cmp
add
add
mov
scas
frstor
adc
out
out
in
nop
out
push
mov
fs
icebp
movs
int3
jnp
je
movs
popa
mov
cmps
out
fnsave
xchg
xchg
outs
int
inc
into
jbe
repz
xchg
jnp
sub
mov
call
jo
repnz
push
or
xor
mov
leave
and
and
stc
adc
jg
inc
xchg
in
jo
pop
xor
sbb
ret
je
mov
sbb
pop
cmp
and
lahf
push
cmp
cmp
mov
sbb
pop
mov
add
pushf
mov
rcl
or
mov
sbb
or
movs
sbb
or
dec
mov
inc
out
aas
retf
add
sbb
out
outs
bound
jb
icebp
mov
jb
dec
jo
ins
xlat
fmul
or
out
cmp
dec
sbb
ja
mov
fadd
mov
scas
repnz
out
pop
cmp
mov
fst
xor
mov
retf
ins
aam
outs
aad
into
or
jl
sub
adc
ret
mov
bswap
(bad)
mov
sub
xor
push
xchg
mov
xor
leave
test
add
outs
inc
in
sbb
and
dec
hlt
loopne
jmp
mov
scas
and
jo
mov
or
js
ror
inc
sub
pop
xor
xchg
sbb
jecxz
cdq
test
cli
pop
in
jno
jbe
and
mov
rcr
out
test
mov
jae
sub
add
aaa
mov
in
xchg
aaa
pusha
aad
jbe
in
test
scas
ins
lds
test
and
ret
ins
jnp
push
addr16
push
fisttp
cmp
dec
dec
ins
mov
push
push
mov
mov
je
xchg
jbe
pop
(bad)
mov
mov
pop
sbb
cmp
mov
fbld
xchg
push
and
call
sub
ret
lods
gs
sbb
leave
or
push
mov
xchg
(bad)
adc
pop
xor
sar
ret
std
jns
add
jae
in
jb
nop
and
add
sti
mov
les
ret
inc
ins
daa
xor
cmp
push
stos
jnp
retf
cmp
pusha
cs
lods
fiadd
popfw
ja
data16
lods
xchg
mov
test
jb
add
lea
cwde
pop
push
(bad)
xor
xlat
cli
cmps
ret
loopne
and
sbb
pop
lods
or
aad
dec
sbb
fidiv
cli
cs
dec
jmp
cmps
test
push
fnstenv
pop
(bad)
fld
lock
cmp
sub
sbb
and
sub
pop
rol
mov
aam
cmp
int
iret
cmps
cld
aam
push
aad
push
mov
push
pop
test
push
hlt
cmp
jge
in
push
dec
push
ss
inc
mov
ja
mov
daa
inc
je
test
push
not
out
push
out
mov
cmc
dec
ds
mov
mov
inc
and
mov
sub
ror
and
fst
(bad)
in
test
in
iret
xor
jp
cli
or
lahf
ins
xlat
push
xchg
cdq
mov
push
int3
stos
push
std
pop
pop
not
cmp
repz
ret
or
pop
jecxz
mov
jae
mov
loop
sbb
sbb
inc
bound
sub
sub
jecxz
or
cmp
and
xchg
and
jo
cmp
imul
lods
inc
mov
or
add
pop
jnp
mov
neg
inc
stos
ins
xchg
sub
pop
mov
in
cmp
mov
jbe
shl
shr
dec
inc
push
cmp
mov
or
mov
sub
inc
adc
cmps
sub
mov
rcl
cwde
lods
hlt
sbb
lock
jge
mov
iret
mov
push
pop
cmps
sbb
xor
out
das
int
imul
in
push
and
cmp
mov
test
pop
data16
cmps
cmps
jg
mov
mov
loopne
xchg
xchg
push
(bad)
ja
les
rol
in
ins
mov
movs
jno
jge
add
xlat
scas
dec
in
jno
cmp
fadd
and
mov
ficom
movs
push
ror
fimul
(bad)
arpl
stos
mov
pop
fadd
out
mov
gs
inc
es
sbb
iret
retf
aad
push
mov
mov
fisttp
mov
xchg
mov
gs
int3
fidivr
jg
fstp
mov
pusha
lods
push
loope
fdiv
jecxz
fidiv
sahf
popa
dec
jle
push
fbstp
test
sbb
test
pusha
push
data16
ins
adc
mov
xor
movs
dec
lock
popf
outs
out
clc
test
ja
push
jns
cld
call
je
inc
movs
mov
fcomp
add
dec
loope
lds
pop
xchg
mov
mov
inc
loopne
je
push
test
shr
mov
sahf
movs
and
ins
sar
lahf
mov
pop
push
frstor
enter
xchg
push
pop
sbb
retf
mov
add
hlt
inc
inc
pop
sub
or
sub
pop
cmp
and
int
sub
ds
push
xchg
pop
xchg
cwde
leave
stos
dec
test
cmp
and
dec
dec
adc
mov
or
(bad)
fcomi
dec
xor
adc
mov
iret
scas
jg
lds
xchg
mov
mov
mov
movs
nop
and
adc
cdq
xor
mov
push
and
xchg
and
shl
retf
fistp
fisub
test
das
cmp
loope
adc
fsub
ja
xor
out
push
(bad)
pop
inc
in
pop
std
jp
call
cmp
aad
ja
or
sbb
lahf
out
jbe
lods
stos
mov
aas
bound
dec
cmp
call
int3
xchg
cmc
dec
jp
mov
ret
dec
sub
xchg
in
mov
mov
out
adc
cmp
xchg
jge
ret
xor
dec
adc
cmc
cwde
retf
xor
xchg
pop
dec
leave
sub
jmp
sbb
mov
imul
push
ja
push
mov
pop
out
dec
pop
pop
jae
dec
and
mov
jae
jge
xor
fisubr
clc
mov
push
test
std
adc
inc
sbb
icebp
movs
push
lods
js
pop
xlat
ret
mov
sti
push
jle
mov
stos
jecxz
sbb
jns
add
pop
and
out
jecxz
ret
test
retf
lea
jb
enter
jg
jg
mov
adc
adc
mov
fist
aas
pop
xor
fdiv
mov
mov
xchg
xchg
adc
(bad)
pop
push
cmp
fld
or
iret
in
pop
out
and
addr16
xchg
popa
push
and
jg
aas
sub
and
adc
fimul
ds
nop
lock
xor
mov
xor
(bad)
pusha
pop
pusha
leave
push
imul
or
shl
adc
hlt
movs
mov
mov
xchg
sar
sbb
push
ins
xlat
invd
jbe
xchg
mov
add
add
mov
aam
xor
fild
popf
shl
xor
in
iret
ins
lods
pop
repz
mov
in
leave
out
push
jl
stc
push
into
adc
outs
icebp
xchg
push
sub
and
pop
and
cmp
xlat
dec
xor
ret
es
inc
sbb
rcr
hlt
pop
add
xlat
mov
cld
loop
mov
fs
in
sar
ror
jbe
daa
ja
ds
push
test
push
pop
jmp
mov
in
inc
fwait
inc
stc
xchg
rol
sub
mov
mov
dec
jmp
out
hlt
cmp
mov
sbb
and
sahf
push
mov
xor
dec
inc
jmp
jo
sub
aaa
jae
fcmove
js
stc
jmp
pop
push
pop
jbe
and
add
add
lods
xor
out
sbb
push
or
fld
push
push
bound
dec
adc
adc
gs
clc
shl
out
adc
push
jg
adc
arpl
int
add
das
out
fcom
or
int3
fwait
ja
mov
loope
call
mov
and
bound
ins
ror
lock
int3
in
data16
pop
lds
sub
and
ret
xchg
push
add
or
mov
pusha
rol
sub
call
push
mov
lock
aad
or
mov
mov
cmp
sbb
or
or
pop
xchg
push
imul
rcr
aas
and
jnp
cmp
cmc
mul
inc
xor
pop
mov
idiv
movs
add
jbe
jmp
lock
pusha
(bad)
lea
jne
xor
(bad)
not
ficom
dec
mov
test
mov
aam
std
rcl
sbb
dec
push
mov
push
cmps
pop
(bad)
data16
cdq
xchg
jo
je
imul
xor
aaa
jns
daa
mov
dec
test
or
test
imul
jl
and
sub
xchg
mov
and
pop
xor
cmps
jl
lock
psubd
test
inc
out
adc
mov
hlt
mov
and
dec
popf
(bad)
or
(bad)
jae
add
jb
(bad)
outs
mov
outs
nop
jo
scas
add
inc
lea
mov
pop
imul
test
jbe
int
(bad)
xchg
add
jp
clc
and
data16
scas
aas
pop
bound
adc
fs
test
jge
xchg
(bad)
ficom
inc
and
cmp
icebp
loop
stos
aas
push
pop
or
adc
stc
cmp
scas
in
jp
test
call
pop
push
mul
inc
ret
mov
aam
sub
or
out
push
std
jle
sbb
jp
mov
jae
ret
jmp
int
hlt
or
cmp
lods
sbb
mov
out
cmp
add
sub
xor
xchg
push
data16
inc
push
stos
and
les
fstp
data16
or
arpl
movs
fstp
ins
jp
stc
cmps
jo
int
add
sar
jmp
stos
mov
add
(bad)
fstp
pusha
lea
(bad)
test
jg
rcl
mov
pop
xor
es
call
push
jo
jmp
jmp
bound
or
ret
mov
mov
sub
mov
mov
movs
cdq
stos
mov
mov
inc
mov
dec
out
jo
xchg
xchg
adc
fs
mov
xchg
inc
sbb
xchg
xchg
lods
dec
inc
mov
push
push
jns
and
mov
dec
ja
pop
outs
push
in
inc
and
cmps
pop
xchg
or
out
mov
les
sub
add
frstor
leave
mov
fstp
scas
lds
mov
cwde
mov
(bad)
mov
xor
xchg
pop
lods
aam
ja
jnp
jp
shl
dec
div
cmps
ins
pop
cmc
xchg
pushf
sbb
mov
jmp
data16
push
in
test
push
jae
inc
mov
jno
push
inc
mov
leave
jl
cld
lods
(bad)
xchg
mov
and
mov
mov
cmps
and
pushf
in
inc
pusha
jmp
out
pop
cmp
or
mov
xor
or
dec
ror
jae
test
xchg
fisub
dec
mov
mov
dec
inc
fcmovnbe
inc
mov
adc
sub
push
ss
daa
call
cmp
sbb
cmps
fstp
cmp
push
mov
xchg
nop
bound
jg
inc
es
retf
xchg
mov
imul
aad
pop
(bad)
fadd
sbb
mov
inc
loopne
cld
xor
sti
add
sub
dec
imul
mov
in
pop
loope
mov
sbb
rcr
in
dec
sti
dec
or
pop
push
std
and
push
and
enter
jbe
and
enter
ror
lea
cld
sub
sbb
out
call
xchg
xchg
cs
retf
outs
mov
enter
mov
and
scas
push
stos
pop
dec
not
ret
or
sbb
sub
aam
dec
dec
jge
and
outs
(bad)
pop
xchg
mov
xor
pop
jmp
push
xor
stos
and
in
(bad)
(bad)
movs
jg
(bad)
sbb
fimul
rep
add
int3
stos
(bad)
leave
mov
dec
out
js
retf
pop
loop
aaa
mov
sub
xchg
pop
jbe
jg
outs
shl
mov
or
fisub
mov
shl
leave
sub
jns
imul
mov
shl
add
stos
bound
fcomp
xor
test
es
mov
aaa
shl
test
jnp
mov
(bad)
mov
adc
imul
and
mov
mov
mov
out
cmp
addr16
inc
lea
pop
xchg
aad
mov
push
dec
retf
mov
adc
jl
xchg
dec
mov
jno
idiv
lahf
cli
mov
shl
dec
xor
movs
(bad)
repnz
xor
scas
rcl
in
jl
jns
jle
cwde
push
or
or
movs
cmp
xlat
ja
lods
xchg
xchg
lods
inc
inc
mov
pusha
xchg
push
pop
bound
test
ins
pop
lods
ror
lods
clc
fmul
lds
inc
mov
scas
jnp
nop
inc
push
data16
or
out
in
xchg
ins
call
popa
and
mov
fcomp
outs
sbb
xchg
mov
outs
sar
inc
sbb
fld
ja
dec
jae
lock
cmc
xlat
push
nop
mov
in
leave
xor
retf
cmc
fwait
xchg
sbb
int
cdq
rcl
and
xchg
out
lock
out
fsub
fmul
out
pusha
clc
outs
int
xchg
in
stos
adc
aas
xor
sub
xor
addr16
sbb
ret
retf
rcl
cmp
movs
or
mov
or
fadd
xchg
inc
add
add
fucom
hlt
sub
sbb
div
cwde
pop
xlat
stos
cmp
popa
xchg
fucomi
daa
loop
mov
icebp
and
push
inc
imul
mov
call
idiv
mov
pop
or
xchg
add
mov
ja
jnp
ss
ja
push
mov
adc
jle
cmp
clc
adc
mov
xor
ret
inc
repnz
ins
sbb
or
xchg
jmp
mov
push
stos
fcomp
jns
xchg
iret
loope
rcl
mov
jmp
repz
xor
movs
and
scas
xlat
sub
xchg
rol
lahf
leave
sub
dec
(bad)
mov
scas
push
test
test
cli
xchg
pop
imul
dec
fs
jge
call
adc
fsubr
xchg
mov
std
leave
adc
pop
(bad)
sti
out
icebp
cmps
imul
mov
movs
jl
sbb
dec
adc
or
adc
push
sbb
out
sbb
xchg
fadd
rep
test
mov
sbb
fdivr
cld
inc
mov
sub
ror
dec
adc
ficomp
inc
push
pop
call
cdq
jne
mov
pop
retf
inc
lods
fstp
cs
xchg
jo
jecxz
loope
adc
imul
mov
cmc
pop
dec
mov
push
mov
scas
shr
or
arpl
add
sbb
ins
sub
repnz
jl
(bad)
out
addr16
sbb
add
outs
jmp
jmp
ss
and
les
vmwrite
dec
add
imul
mov
dec
ret
jp
sub
and
lds
mov
mov
push
adc
mov
imul
pop
aaa
out
add
inc
mov
imul
lds
or
test
test
pop
adc
jmp
stos
xor
sbb
push
shr
arpl
push
(bad)
in
jbe
cli
(bad)
xchg
push
enter
pop
pop
sub
xchg
and
and
xchg
cld
cmp
dec
jno
jle
mov
pop
inc
and
xchg
xchg
pop
push
sbb
mov
lahf
shl
push
sub
fs
cmc
cmps
imul
stos
pop
ins
lea
jp
fcom
imul
call
adc
nop
pop
retf
pop
xchg
push
and
imul
icebp
xchg
loop
pop
xchg
or
cmp
pusha
jecxz
out
pop
and
and
or
hlt
sbb
fldenv
add
out
ja
in
pop
jle
adc
aaa
loop
add
push
ss
and
fimul
cmp
lds
movs
xchg
out
lea
sub
in
jmp
or
mov
iret
das
mov
cmp
ficom
cmp
scas
enter
test
sub
pop
pop
bound
imul
adc
pop
popa
cli
push
sub
paddusw
mov
mov
jmp
mov
jns
xlat
xor
movs
aad
mov
xchg
fxch
mov
out
jae
ja
pop
lock
scas
popa
ret
mov
dec
xchg
jg
lock
mov
int3
xlat
movs
ja
das
add
dec
jo
jl
or
(bad)
jmp
and
ins
aam
xchg
(bad)
push
dec
push
rol
sbb
pop
sub
outs
sbb
rcr
sub
xchg
nop
cli
icebp
test
jnp
popf
jp
pop
inc
mov
out
int
loop
pop
pop
test
sub
popa
mov
(bad)
inc
in
dec
rol
pop
movs
cmps
adc
shr
add
aaa
and
push
jnp
in
cmp
mov
mov
aas
fisttp
addr16
xchg
cld
pop
dec
repz
fst
int3
push
in
jmp
outs
call
(bad)
jno
jge
fwait
jo
or
int3
daa
push
mov
ds
shr
xor
gs
rcl
mov
or
push
rcl
bound
hlt
repz
jle
sbb
ja
push
movs
test
xor
movs
pop
stos
or
retf
adc
jnp
cmps
nop
in
push
mov
mov
or
add
(bad)
shl
sbb
movs
int3
push
mov
ins
loopne
in
in
push
sbb
imul
cmc
pop
mov
scas
outs
outs
bound
xchg
daa
cmc
out
mov
mov
mov
or
popf
cmp
fistp
cmp
in
hlt
aam
popa
xor
sub
sub
cmp
fidiv
push
das
jp
daa
fadd
dec
cmps
cmps
test
xor
imul
call
jge
out
mov
mov
cmp
dec
jmp
pusha
fst
cmps
mov
sbb
mov
cmp
mov
mov
aas
lods
jge
iret
add
pop
icebp
mov
add
cmps
jmp
inc
jl
xchg
ja
stos
add
call
cld
jg
fs
stc
xor
mov
dec
pop
ja
repz
sti
push
inc
test
sbb
outs
pop
add
xchg
int3
test
fnstcw
sar
sub
movs
push
adc
add
push
in
and
mov
cmp
call
shr
mov
pusha
add
mov
(bad)
pop
ins
push
sub
xor
into
aaa
pop
leavew
push
adc
data16
sbb
xchg
aaa
xor
mov
leave
jae
repz
sub
mov
xchg
daa
pop
or
inc
(bad)
fcomp
cdq
xchg
mov
jmp
rcl
xchg
stos
jmp
or
add
mov
mov
or
dec
dec
mov
test
in
cmp
adc
mov
xchg
hlt
imul
shr
xchg
icebp
mov
sahf
dec
and
xchg
(bad)
iret
ins
jmp
cmp
xchg
xchg
add
or
int3
(bad)
pop
mov
sbb
cs
sub
xchg
cmp
int3
mov
pushf
mov
mov
or
les
stc
mov
mov
gs
hlt
outs
daa
imul
lahf
ja
out
outs
loope
lahf
into
iret
cmps
xchg
add
loop
pusha
pop
aad
sbb
aad
jbe
mov
das
retf
xor
aad
setl
(bad)
lds
bound
test
hlt
popa
xchg
jl
call
lods
xor
loopne
or
shr
mov
(bad)
inc
cmps
pusha
les
jecxz
mov
jns
sbb
inc
cmp
or
add
jg
rol
bswap
fld
loopne
adc
retf
aam
or
and
push
mov
inc
mov
repnz
sbb
pop
cld
out
mov
push
adc
ss
jo
lods
out
xor
inc
call
mov
lods
(bad)
fadd
in
push
mov
iret
mov
xor
in
shl
inc
(bad)
test
mov
mov
sbb
out
cmp
rcl
jne
push
nop
icebp
je
sbb
fistp
das
cmps
repz
mov
xchg
jne
mov
and
(bad)
popf
xor
dec
lods
sbb
xor
outs
mov
mov
mov
lahf
push
push
jge
retf
fcomp
mov
imul
dec
mov
loope
jo
test
mov
enter
test
std
cmps
and
movs
ret
mov
xchg
dec
mov
lea
mov
dec
push
add
pop
mov
jmp
stos
adc
in
and
push
cmp
aas
and
lds
mov
rol
fst
dec
xchg
pop
fs
add
jb
xchg
pop
push
out
js
jns
mov
fcom
add
bound
dec
or
out
xlat
sahf
inc
and
lahf
idiv
and
cmp
dec
mul
repnz
test
cmp
call
call
push
(bad)
(bad)
sahf
add
shl
stc
cs
push
xchg
out
ins
inc
das
cmc
imul
aaa
jb
mov
leave
and
mov
jg
mov
xchg
div
mov
cmp
jo
mov
xchg
mov
or
jp
mov
retf
mov
inc
loopne
and
adc
xor
and
aas
sub
push
xor
lock
mov
lock
pop
je
xchg
jmp
adc
xor
xchg
mov
dec
aad
(bad)
push
and
movs
dec
bound
xchg
test
sub
cwde
mov
movs
repnz
push
in
(bad)
push
pop
ret
mov
retf
mov
inc
clc
ret
jnp
cmp
dec
dec
xor
xchg
imul
adc
ror
pop
(bad)
out
out
jp
pop
ins
loop
push
push
sbb
push
mov
loop
popa
mov
pop
sbb
lock
or
pop
pop
pop
ja
in
sbb
xchg
add
dec
push
loop
mov
jae
out
inc
mov
pop
mov
cmp
adc
push
sbb
cdq
fisubr
sti
push
and
mov
xor
pop
fdiv
mov
call
cmp
out
icebp
dec
mov
mul
fistp
mov
rol
jnp
out
and
enter
mov
bt
sar
ja
mov
sbb
mov
cdq
(bad)
ror
xor
lds
push
mov
arpl
push
xchg
xchg
jmp
mov
ret
and
ror
inc
mov
cmp
jnp
daa
sbb
mov
ja
dec
inc
and
and
mov
or
inc
jge
mov
sbb
lahf
dec
popf
sti
mov
push
adc
adc
nop
lea
mov
xchg
les
arpl
mov
popf
and
arpl
ret
aas
enter
fdiv
sti
jp
cmp
lea
push
dec
sub
sahf
fisttp
mov
mov
repz
and
xchg
cs
retf
mov
pop
jmp
retf
lock
pop
cmps
inc
ss
and
pop
mov
mov
mov
iret
inc
sbb
in
cmp
push
pop
xchg
sub
or
aad
adc
scas
or
xchg
mov
xchg
aas
cmp
jge
lock
dec
je
loop
out
int3
dec
jg
cmp
mov
(bad)
iret
add
xor
push
repz
xor
in
repz
sbb
mov
cli
ins
scas
je
sub
mov
in
mov
(bad)
aam
adc
sbb
in
popa
pop
dec
sti
push
sub
mov
fdivr
mov
pushf
mov
inc
pop
sahf
push
out
xchg
mov
inc
(bad)
or
pop
sub
or
ja
pop
retf
pushf
jge
out
cmp
push
mov
pop
fisttp
iret
pop
(bad)
outs
cli
xchg
adc
not
(bad)
pop
jmp
jb
(bad)
dec
lods
mov
sbb
adc
aam
and
mov
mov
push
clc
int
jle
xor
mov
cmp
outs
pop
mov
dec
dec
dec
xchg
mov
ror
outs
ss
cmp
push
cs
sbb
inc
pusha
cmps
add
pop
xchg
sbb
push
sub
popa
adc
and
jbe
daa
mov
test
jb
sti
cmp
popa
enter
or
xchg
arpl
(bad)
mov
std
sar
jb
jl
xchg
rcr
or
cmc
jp
push
les
inc
jecxz
dec
cld
js
or
mov
movs
fistp
(bad)
jno
daa
jo
pop
xlat
test
inc
sbb
push
test
or
es
jne
mov
repz
adc
xchg
adc
xchg
cmp
clc
pusha
arpl
popf
(bad)
icebp
jno
jmp
rol
movs
sahf
hlt
mov
scas
adc
add
add
retf
int3
mov
aad
ins
push
pop
inc
adc
mov
rol
mov
out
inc
mov
sub
sbb
adc
js
sti
pushf
mov
shr
je
xchg
popa
dec
ds
mov
ja
dec
or
xlat
pop
mov
push
and
(bad)
mov
leave
jo
sbb
adc
or
jmp
mov
mov
inc
adc
retf
and
and
out
out
inc
mov
aaa
inc
sub
pusha
pusha
inc
and
ror
inc
dec
repnz
inc
sbb
xor
mov
lahf
inc
push
rol
or
xchg
lds
xchg
sbb
push
sub
cli
adc
sub
pop
adc
daa
push
mov
inc
xchg
bound
dec
and
push
data16
test
add
jns
inc
les
in
aaa
sbb
xor
outs
jp
or
ins
loop
jbe
call
jb
test
pop
movs
ds
cs
xor
jno
outs
xlat
retf
mov
iret
jmp
rol
stos
dec
mov
lea
cmps
or
push
retf
sar
cmp
lahf
mov
mov
js
cdq
(bad)
xor
sub
dec
repnz
pushw
sub
fwait
inc
or
dec
cmp
add
lea
ret
cdq
push
push
scas
sbb
mov
cmp
das
std
pop
in
fidiv
aad
fild
xor
sub
adc
or
mov
ss
sub
push
js
lock
icebp
sub
adc
stc
inc
sub
dec
and
push
mov
inc
call
std
(bad)
popa
mov
ffree
lock
dec
cld
daa
mov
shl
scas
push
cmp
xchg
out
jmp
xor
cmp
fild
xor
ds
mov
pop
add
lahf
jl
push
cmp
xor
jge
xchg
pop
ret
jle
dec
enter
sub
loop
clc
int3
sub
lahf
lock
and
add
cdq
mov
lahf
fstp
or
outs
and
xchg
mov
xchg
shr
jmp
(bad)
or
and
mov
dec
cmps
outs
jne
push
frstor
jmp
js
xchg
out
adc
mov
sysenter
push
xchg
push
and
hlt
pop
push
test
or
jo
(bad)
(bad)
(bad)
cmps
nop
dec
adc
popa
mov
inc
or
dec
xor
fs
push
sbb
cmp
push
add
mov
push
fs
and
movs
sbb
in
and
jmp
and
pop
dec
sbb
jmp
lahf
dec
inc
fnsave
bound
mov
iret
sbb
cmps
mov
pop
push
dec
loop
cmp
cdq
test
addr16
xor
fwait
cmp
out
lods
dec
test
dec
dec
jge
ret
cli
xchg
sbb
inc
cmp
adc
dec
clc
out
push
popf
fisubr
xlat
jbe
in
inc
dec
test
popa
(bad)
lods
or
nop
push
push
or
jno
aad
repz
in
mov
add
call
aad
sub
sti
fisub
fs
retf
std
push
aaa
jg
push
push
or
adc
push
jge
or
push
dec
inc
adc
iret
dec
jp
dec
add
xchg
movs
mov
or
sbb
mov
jb
cmp
pop
ret
inc
repnz
mov
xchg
popf
and
cmovno
ror
pushf
retf
call
xor
push
jecxz
mov
sub
sbb
cmc
or
mov
push
test
bound
fwait
mov
mov
sbb
cli
cmp
sbb
int3
cmp
push
adc
jb
xor
sbb
lldt
push
out
xchg
adc
in
inc
xchg
lods
pop
or
mov
scas
fsubr
mov
push
fldcw
(bad)
cmp
sbb
mov
dec
sub
sub
xor
loope
imul
push
add
ja
fdivr
and
pop
and
fld
pop
lock
loop
mov
test
xchg
inc
pop
outs
push
ret
push
sub
mov
addr16
adc
(bad)
adc
xchg
mov
push
pop
shl
test
std
clc
ficom
stos
and
ss
or
dec
call
mov
lods
jmp
fs
sbb
fbld
lods
iret
mov
div
sub
sub
or
lahf
pop
add
and
cld
push
fiadd
inc
test
push
adc
mov
lahf
jb
sub
fcmovnu
xchg
xor
xor
push
add
mov
ret
in
pop
sub
ins
dec
jg
mov
xchg
jl
ss
xlat
fcmovu
pop
inc
add
xor
mov
mov
dec
xchg
retf
push
mov
rcl
lds
out
push
nop
sahf
mov
movzx
sbb
mov
mov
xchg
into
das
mov
inc
inc
dec
imul
mov
fcomp
xchg
xor
or
sub
ins
addr16
mov
sbb
mov
cs
rcr
pop
or
mov
aad
add
dec
mov
mov
jecxz
cmc
dec
or
test
shl
adc
xor
xchg
pushf
add
mov
push
or
mov
(bad)
add
xor
mov
xor
mov
aaa
stos
jg
addr16
into
mov
jl
push
sar
mov
inc
push
outs
xor
out
fnsave
dec
or
push
pop
pop
icebp
and
mov
mov
es
pop
lock
fdivr
mov
adc
mov
pusha
aam
outs
mov
cmps
(bad)
cmc
adc
xchg
and
or
call
or
arpl
fwait
or
xchg
push
push
or
repnz
rol
add
adc
test
int3
adc
or
push
push
ror
sahf
loopne
or
(bad)
sbb
stos
jae
xor
jno
sbb
or
sub
push
into
mov
mov
mov
or
pushf
or
ret
or
dec
int3
cmps
inc
dec
mov
popa
jmp
mov
gs
push
jle
call
test
cmp
jecxz
add
push
(bad)
xchg
arpl
(bad)
mov
jp
mov
mov
pushf
outs
xchg
nop
dec
add
pop
cdq
jle
addr16
movs
push
loope
stc
test
or
mov
cld
jge
js
push
mov
and
cmp
or
ds
push
nop
or
ds
mov
mov
jp
pushf
test
push
fdivp
adc
dec
in
retf
sub
xchg
repz
dec
loopne
aad
sti
rcr
daa
(bad)
cmp
adc
push
out
inc
inc
sub
dec
(bad)
loope
xor
adc
mov
sahf
rol
pusha
sbb
enter
retf
xlat
jo
mov
push
xor
push
clc
jmp
aad
push
cmp
add
or
cmp
inc
add
lods
jecxz
loope
mov
xchg
data16
xchg
mov
popa
and
sbb
repz
pop
enter
sbb
dec
xchg
dec
sub
pop
adc
idiv
mov
mov
dec
(bad)
mov
or
mul
daa
jl
xchg
cmp
sub
cmps
shl
xchg
test
jmp
dec
mov
adc
test
aad
pop
dec
add
fwait
or
pop
loope
(bad)
or
(bad)
shr
in
and
xchg
push
cmp
fmul
mov
(bad)
and
xchg
lock
jae
retf
jecxz
sub
loop
shr
cmp
fwait
sub
dec
fbld
or
jge
ja
or
je
sbb
bound
imul
adc
cmp
dec
dec
mov
sbb
retf
mov
push
jno
scas
lock
push
fmul
push
cmp
cmp
jnp
sbb
dec
mov
pop
push
jns
imul
mov
imul
pop
ficomp
xchg
shr
repnz
cmc
lock
jno
(bad)
std
in
mov
test
jge
adc
dec
hlt
and
loope
or
aad
jno
inc
sbb
mov
push
adc
outs
jle
and
mov
fwait
add
xchg
push
out
mov
out
or
xchg
adc
sbb
pop
rol
pop
jbe
sub
dec
cmp
int
fsub
cmp
mov
xchg
cmp
inc
clc
outs
sub
jne
mov
jecxz
rcr
out
jl
dec
imul
pusha
fiadd
ins
repnz
sahf
jns
xlat
pop
shl
stos
jmp
test
fild
inc
loope
frndint
in
jle
stos
sahf
adc
mov
or
(bad)
sahf
adc
js
in
push
inc
add
xchg
sub
push
es
adc
call
test
adc
rcl
push
adc
aad
retf
into
inc
xchg
data16
dec
or
or
out
xchg
jmp
aad
adc
jmp
ins
daa
test
xchg
pop
and
cmps
fdivr
ret
je
jecxz
mov
or
sar
lods
cmp
cmp
scas
adc
pop
movs
(bad)
aad
bound
leave
adc
push
in
mov
add
in
(bad)
sbb
shl
xor
push
mov
push
pushf
js
push
adc
inc
iret
fadd
(bad)
popa
mov
pop
or
sbb
mov
mov
push
ins
and
cmps
or
and
xchg
adc
push
enter
int3
dec
xchg
lea
(bad)
push
mov
cmp
cmp
movs
jo
repnz
in
(bad)
inc
sahf
sbb
adc
inc
adc
or
aaa
scas
ss
mov
fnstcw
cmps
(bad)
fcom
lea
dec
call
ins
std
neg
cmp
popf
push
movs
out
sbb
scas
sbb
push
xlat
ds
scas
inc
adc
pop
push
xchg
fnstsw
into
inc
adc
push
cmps
cmp
mov
aad
cli
mov
xchg
jnp
mov
cmp
mov
cdq
aas
hlt
cdq
push
xchg
ja
pop
xchg
(bad)
shr
notrack
call
dec
cs
push
jb
mov
pop
dec
xchg
dec
jbe
daa
or
xchg
nop
xor
push
push
pusha
call
add
pop
sub
push
xchg
pop
mov
test
pop
adc
or
xor
mov
jae
nop
or
add
jmp
(bad)
mov
jbe
inc
jp
mov
test
mov
add
ror
add
mov
imul
call
shl
stos
pop
rcr
sub
adc
jbe
and
fstp
push
cmc
out
and
ins
loopne
lock
cmp
mov
and
xchg
sbb
sbb
or
into
or
ret
jg
cmps
ret
pop
and
int
dec
push
loop
and
lods
idiv
inc
mov
dec
xor
mov
ins
dec
cmp
icebp
pop
cld
cli
loopne
xchg
push
or
push
imul
and
aam
or
adc
fisttp
in
lock
ja
std
hlt
sub
in
shr
out
data16
pop
mov
xchg
fnstsw
hlt
adc
arpl
gs
dec
xor
inc
adc
out
into
aaa
fld
sub
jo
pusha
inc
inc
cmp
jmp
imul
enter
out
inc
mov
pop
xchg
fstp
out
and
pop
jb
sahf
or
inc
ret
scas
jne
pop
push
cmp
cmp
scas
mov
xlat
(bad)
out
cmp
inc
mov
in
outs
push
mov
lods
retf
xchg
lock
sub
aam
xchg
out
out
lea
mov
xchg
mov
ds
push
test
sub
fcom
jp
popf
dec
mov
inc
loopne
das
call
cmp
es
sti
movs
rol
movs
out
out
xlat
xchg
sti
cmp
add
(bad)
mov
and
xlat
mov
add
sub
rcl
inc
add
shr
mov
loope
push
add
push
sbb
pop
push
int
retf
sub
and
daa
jle
addr16
loop
pushf
loope
fstp
retf
jg
cli
cwde
test
push
xchg
out
or
mov
dec
retf
sbb
popf
xor
repnz
inc
std
add
or
cmps
jo
call
add
int
(bad)
pop
fst
lds
cmps
repnz
inc
jl
pop
fmul
cmp
sub
cmp
jnp
or
mov
scas
add
or
leave
jle
lock
mov
popa
mov
call
push
mov
pop
pop
jg
scas
push
out
xchg
sub
push
movs
in
rcl
inc
mov
es
push
dec
adc
inc
je
loope
fmul
lds
jge
imul
iret
lock
int3
xchg
mov
push
nop
dec
mov
or
pop
or
or
hlt
push
ret
call
cli
loope
gs
jle
fild
xacquire
or
repz
xchg
jl
jp
adc
sbb
xor
and
cmps
ds
jnp
push
test
scas
popa
retf
sahf
(bad)
or
loopne
mov
ror
ds
sub
or
inc
xchg
in
fwait
mov
mov
cmp
dec
xchg
int3
add
pop
or
push
mov
fistp
push
mov
push
add
pop
fnstsw
sub
(bad)
xchg
lods
add
mov
cmp
mov
or
dec
enter
mov
or
jbe
dec
js
mov
sahf
in
popf
jae
iret
in
push
pop
lahf
repz
xor
out
jp
or
(bad)
in
test
sub
je
pop
mov
(bad)
sbb
xchg
imul
lock
cmp
mov
lock
shl
inc
jle
je
sbb
int3
add
cmp
pop
mov
idiv
stos
jp
icebp
push
jmp
pop
ds
sub
hlt
inc
in
hlt
xchg
adc
and
test
xor
in
and
pusha
shl
movs
dec
and
push
mov
fs
xor
inc
(bad)
lock
xchg
mov
mov
stc
repnz
idiv
icebp
sub
adc
cmp
jnp
imul
xchg
fwait
out
jmp
pushf
popa
and
pop
xchg
mov
add
bound
hlt
sbb
cmp
int
aas
stc
xchg
jp
pop
inc
mov
daa
test
mov
jno
shr
or
fldenv
icebp
cmovle
lods
or
ret
retf
popf
dec
inc
add
xchg
add
pop
jecxz
dec
mov
in
xchg
sub
or
inc
les
add
mov
pushf
push
push
adc
ret
in
and
and
push
ins
mov
pop
pop
cmp
jl
clc
cmp
cmp
outs
addr16
add
add
int3
pop
mov
adc
mov
lock
inc
push
shr
in
aas
ficom
(bad)
pop
and
fstp
push
mov
cmp
fucom
xlat
loope
cmc
mov
xchg
ds
add
or
adc
add
mov
add
jne
daa
sar
sub
xor
push
push
sbb
sbb
movs
mov
scas
ret
xor
jmp
movs
sbb
xchg
jmp
push
scas
push
lea
xchg
mov
rol
shl
cmps
int
(bad)
scas
lods
test
stos
inc
into
sbb
push
jne
test
adc
dec
lock
lock
mov
rcl
cwde
retf
jo
push
jmp
add
xor
out
or
cwde
sub
lods
ss
rcr
outs
sti
add
out
and
or
mov
pop
scas
repz
(bad)
nop
hlt
addr16
jmp
inc
shl
mov
je
and
pop
or
sbb
xor
cli
mov
ins
sub
cmc
pop
mov
loopne
push
cli
or
aad
fist
jns
pop
in
gs
lods
sub
push
push
sbb
test
jge
aaa
xor
and
sbb
(bad)
clc
add
xor
shr
enter
scas
jbe
sub
pop
shl
jne
push
add
pop
jne
inc
pop
jo
aas
mov
add
jl
xchg
push
pop
in
cmc
loope
mov
pop
jns
adc
push
jns
mov
cld
xchg
mov
or
mov
push
adc
(bad)
cmp
dec
push
xchg
pop
pop
aam
imul
adc
cmc
ror
mov
loopne
sub
jo
sub
dec
push
into
push
xor
jg
xchg
test
in
sbb
inc
dec
mov
mov
pop
gs
adc
das
pop
cdq
cmp
adc
pusha
call
jnp
xor
rcr
push
pmaxsw
sbb
imul
fstp
out
(bad)
or
pop
loop
add
add
pop
mov
mov
scas
sub
inc
cwde
or
(bad)
dec
(bad)
sbb
or
adc
adc
cmc
out
sbb
xor
add
aam
xor
xor
sub
aaa
sbb
push
xchg
xor
lods
mov
mov
xchg
arpl
movs
jmp
jmp
int3
cmp
in
loopne
jmp
add
cmp
mov
rcr
cdq
inc
cmp
aaa
adc
mov
add
xor
adc
fdiv
gs
adc
mov
sub
xchg
or
push
xor
add
fdivr
sbb
pop
in
data16
mov
loope
jp
(bad)
xchg
fadd
mov
fiadd
sub
jge
mov
mov
test
jl
(bad)
cld
(bad)
push
ja
(bad)
push
jnp
and
dec
nop
mov
or
enter
aas
sbb
shl
push
pop
shl
push
stos
cmp
mov
cli
lods
pop
ins
ror
add
fisub
mov
(bad)
and
mov
add
sti
adc
xchg
loopne
or
xchg
pop
cmp
bts
add
add
icebp
inc
jb
push
leave
sub
fmul
xor
push
icebp
lock
jle
or
push
pop
add
arpl
arpl
sti
dec
mov
aaa
jns
fimul
mov
jmp
adc
jmp
(bad)
or
lods
cmc
dec
in
arpl
ds
push
cli
fsubr
push
jl
lahf
jno
cmp
jnp
dec
lods
add
adc
inc
mov
in
test
or
adc
mov
mov
test
sub
pop
cmp
fucomi
fld
movs
xor
call
and
inc
mov
dec
adc
cmp
jle
aaa
inc
call
fimul
mov
std
aas
mov
mov
in
xor
mov
mov
shl
mov
adc
pop
xor
cli
daa
aad
fcmovu
push
push
push
push
fimul
jno
push
xlat
stos
test
test
cli
bnd
sub
inc
std
pop
or
imul
mov
aas
ins
outs
fucomp
je
fld
js
jnp
cmps
and
sbb
hlt
ss
imul
mov
arpl
mov
fadd
ins
(bad)
stos
push
rcl
loopne
xchg
or
jae
dec
and
lods
into
inc
sbb
ins
rcr
mov
les
inc
shl
push
lods
xor
and
dec
sar
mov
dec
xor
pop
lock
cmp
inc
inc
push
fs
mov
ss
sbb
sub
je
jg
and
pop
loope
jb
xor
mov
xor
mov
inc
cmp
stos
inc
lods
bound
mov
adc
push
psrlq
or
mov
mov
(bad)
pop
xor
sub
call
mov
pop
jle
lods
retf
(bad)
sub
dec
test
and
mov
out
add
or
out
(bad)
sbb
and
mov
repz
(bad)
repz
daa
xor
jl
inc
xchg
pop
adc
scas
in
lods
jbe
cmp
retf
xchg
in
(bad)
lock
test
jnp
ja
add
cli
clc
bound
dec
test
bound
gs
out
cmp
dec
ror
(bad)
xor
mov
movs
cmc
or
mov
xor
(bad)
fcom
jge
inc
aaa
add
add
inc
and
test
ror
cmp
jo
dec
ds
add
add
push
inc
movs
mov
sar
push
and
fisttp
add
ins
adc
inc
retf
jae
mov
enter
rol
bound
call
or
mov
(bad)
es
push
pop
or
jecxz
push
adc
aam
in
mov
sub
test
es
and
mov
imul
xchg
int3
into
xor
add
cmps
inc
dec
out
imul
and
or
sub
lods
imul
rep
jmp
add
mov
or
ins
mov
shr
fbstp
mov
call
cmp
popa
iret
adc
xchg
adc
pop
lods
dec
xor
jo
sbb
mov
cli
add
cli
inc
xchg
push
xor
pop
pop
mov
inc
mov
cmp
jb
sub
scas
jmp
xlat
aad
lods
dec
sub
test
lea
push
jmp
clc
loope
or
outs
mov
add
aam
sub
mov
leave
scas
push
movs
or
daa
dec
sahf
(bad)
lock
xchg
clc
sub
mov
ds
mov
jno
pop
lds
cmp
lea
(bad)
adc
movs
rcl
mov
iret
or
fnstsw
stc
push
add
mov
mov
inc
dec
popa
mov
xchg
sbb
aam
in
push
mov
pop
add
in
sub
mov
in
mov
jle
mov
jmp
mov
mov
sbb
stos
movs
pop
xor
jb
pop
mov
push
mov
cmp
pop
lea
lods
fldenv
les
fist
jne
jmp
mov
ja
mov
mov
pop
inc
pop
popf
arpl
rcr
and
or
fnstenv
inc
icebp
jae
aaa
inc
cs
ins
and
xchg
pop
fnsave
and
sub
xor
lock
xchg
push
xor
pop
retf
pop
push
xchg
or
scas
or
dec
mov
pop
sbb
push
imul
data16
mov
or
fcmovnb
clc
cmp
shr
or
nop
shl
ins
ins
add
add
nop
and
stos
pop
icebp
mov
lahf
xchg
push
mov
test
pusha
imul
pop
mov
in
xchg
jp
jmp
in
and
jnp
out
push
pop
test
in
push
test
fsubr
fld
scas
loop
xchg
adc
icebp
cmp
adc
xchg
push
pop
push
dec
mov
repnz
repnz
test
add
jbe
jg
or
xchg
cdq
push
and
sahf
les
cmc
hlt
mov
inc
cli
sub
das
or
sub
call
ror
mov
mov
test
ror
sub
pushf
pop
sub
cmp
mov
in
scas
cwde
or
sbb
xchg
mov
cmc
jns
icebp
sbb
movs
mov
sahf
icebp
or
sub
(bad)
(bad)
popa
sbb
sbb
add
fidiv
mov
icebp
outs
sbb
ins
sbb
jns
mov
push
push
pop
mov
jnp
push
ret
mov
inc
add
and
fs
rcl
fs
mov
cld
fdivr
movs
div
ss
nop
(bad)
mov
mov
pop
pop
cmp
jb
test
idiv
mov
cmps
(bad)
mov
aam
int3
out
pop
mov
lahf
in
adc
rcr
mov
pushf
mov
xchg
sub
das
inc
inc
pusha
cmp
fs
movs
add
stos
pop
movd
into
aaa
mov
shl
jecxz
push
ret
dec
das
push
cmp
xchg
call
pop
or
sub
je
xchg
pop
jl
pop
dec
pop
(bad)
je
mov
pop
pop
adc
sbb
sar
mov
or
sbb
xchg
dec
iret
mov
in
jno
mov
jae
mov
fsub
sar
mov
fcom
lea
mov
adc
mov
stos
jo
fwait
pop
loope
lea
cmp
xchg
js
push
rcl
popa
je
pop
inc
nop
mov
mov
repnz
dec
test
dec
ret
ret
cmp
push
je
inc
xlat
xor
mov
shr
and
lahf
out
pop
xlat
mov
lea
test
pop
adc
jnp
push
or
loopne
sar
xor
inc
mov
xchg
jo
loope
ins
shl
hlt
xor
sub
ins
cdq
in
icebp
icebp
jb
mov
js
movs
adc
dec
scas
imul
fabs
inc
test
dec
cmp
scas
jmp
fabs
pop
outs
das
rcr
inc
pop
mov
lds
leave
sbb
mov
mov
mov
fiadd
in
cwde
je
xchg
pop
cwde
mov
daa
(bad)
pop
jge
fwait
mov
fidiv
jmp
or
data16
mov
adc
clc
lahf
icebp
out
mov
sbb
aad
enter
outs
ficomp
xchg
cmc
in
fdivr
bsf
fcomp
or
outs
pop
test
and
(bad)
dec
jmp
sub
mov
ins
jo
mov
sbb
(bad)
push
movs
fist
sbb
out
cs
(bad)
jmp
sbb
dec
loope
ins
xor
lahf
jns
js
movs
add
and
mov
nop
outs
pusha
or
ds
icebp
leave
xchg
pop
mov
call
xchg
cwde
stos
inc
dec
pop
lods
(bad)
push
push
fmul
dec
shr
int
cmc
mov
inc
mov
retf
jp
je
(bad)
pop
call
inc
hlt
das
mov
dec
pop
stos
dec
mov
pop
cdq
mov
cmp
cdq
pop
sbb
scas
sbb
movs
cmps
in
xchg
(bad)
repnz
jg
(bad)
and
leave
es
xor
and
inc
addr16
sti
jne
cmp
inc
bswap
cmp
clc
dec
in
mov
push
cmp
xchg
repz
cwde
jb
or
add
repz
ja
jle
pop
in
not
add
jge
call
xor
mov
jno
mov
sub
push
pushf
push
sub
out
cmp
xchg
mov
fistp
jbe
ret
in
loop
mov
rcr
xor
mov
in
xchg
das
sbb
not
sbb
ja
add
addr16
pop
das
dec
(bad)
mov
inc
rol
in
cld
outs
dec
icebp
xchg
sub
retf
sub
jo
xor
and
jge
inc
inc
sar
xchg
jne
loop
push
dec
push
xor
in
mov
sahf
xchg
push
(bad)
xchg
cmp
add
(bad)
neg
mov
xchg
out
mov
mov
retf
adc
in
aam
add
ds
cmp
mov
push
enter
popa
idiv
nop
add
dec
call
mul
fnsave
inc
sub
or
xchg
cmp
int3
repnz
jb
(bad)
pop
pop
jecxz
push
sub
add
int3
test
add
jecxz
cmp
pusha
shl
stos
je
cmp
mov
loope
adc
sbb
imul
mov
out
push
loop
push
scas
in
xchg
call
cdq
movs
xor
mov
mov
(bad)
jecxz
dec
mov
std
jecxz
fnstenv
scas
shr
clc
lock
cmp
out
cmp
sti
stc
scas
jge
mov
adc
xchg
add
sub
sbb
test
jbe
xchg
scas
add
xchg
test
in
dec
sti
retf
adc
pop
addr16
jnp
out
int3
inc
dec
pushf
pop
adc
(bad)
cli
dec
je
sbb
movs
jo
and
stos
mov
xchg
cmps
mov
outs
mov
push
(bad)
push
gs
or
call
fidiv
in
(bad)
push
cmp
fadd
sub
pop
js
inc
mov
call
pushf
xor
fs
xor
add
scas
ins
sub
cli
mov
out
xchg
pop
mov
scas
or
or
sbb
sub
and
sub
loope
xchg
mov
xchg
mov
mov
or
fcom
fstp
enter
adc
jo
ins
movs
loope
dec
test
pop
aaa
jbe
xchg
xchg
imul
shr
call
pop
and
loop
movs
dec
dec
scas
lods
scas
lock
std
ins
cli
add
cmp
mov
fst
gs
or
lods
push
add
inc
bound
sbb
and
xchg
call
aad
push
add
inc
rol
fadd
or
xor
ror
out
mov
mov
xchg
fcmovbe
push
mov
loope
addr16
dec
(bad)
pop
xor
loop
stc
dec
sbb
jbe
push
imul
pop
les
pushf
adc
push
mov
cmp
into
cld
call
push
cmp
and
or
test
pop
xchg
add
mov
cmp
les
in
dec
and
(bad)
daa
mov
movs
add
dec
(bad)
mov
xor
sub
fcom
out
pop
and
pusha
sar
cmp
ret
jbe
mov
add
mov
mov
or
test
outs
mov
lods
ret
scas
xchg
jecxz
dec
push
daa
jns
sti
cmp
push
cmp
mov
ins
mov
jl
sub
test
or
and
fst
into
adc
ins
sar
xchg
jnp
icebp
rol
push
rcr
arpl
rcl
dec
xor
ins
lahf
fbstp
add
(bad)
aas
inc
pop
mov
cwde
ret
sbb
mov
or
out
sahf
retf
fcmovbe
push
fisub
sub
(bad)
sbb
out
shl
ffreep
loope
in
mov
fcom
dec
dec
mov
ror
or
rcl
xchg
jmp
mov
int
ret
mov
mov
fistp
retf
cld
jmp
pop
sbb
push
add
call
sti
jle
cs
sbb
pusha
jmp
sar
dec
xchg
inc
call
xchg
fcomp
and
and
outs
aam
sbb
xor
sbb
(bad)
adc
loop
jl
pop
jmp
ins
xchg
mov
pop
jno
in
idiv
adc
mov
fidivr
pop
leave
add
add
dec
mov
cvtps2pd
fsubr
hlt
xchg
push
xor
loop
xchg
push
cmp
add
leave
leave
cwde
add
test
add
int3
stc
sbb
ret
xchg
shl
sub
sub
jmp
(bad)
cmps
mov
sbb
lea
sbb
repz
cmps
adc
stos
mul
inc
gs
retf
les
movs
or
test
adc
xchg
jae
js
imul
xchg
lahf
sub
xchg
(bad)
js
mov
mov
xchg
pop
jbe
std
sbb
mov
setg
xchg
daa
lea
inc
inc
jp
or
scas
xor
inc
xchg
out
sub
and
je
xor
fidivr
xlat
mov
popf
shr
inc
(bad)
sbb
dec
add
stc
pop
fwait
cmp
arpl
clc
adc
pop
cmp
(bad)
rcl
(bad)
jb
mov
scas
and
xor
imul
ret
cmp
dec
dec
inc
push
or
and
repnz
jp
mov
xchg
mov
cmp
popa
jnp
cmp
fucomip
shr
jns
or
adc
mov
shl
(bad)
out
xchg
xor
out
out
dec
jecxz
adc
xor
cmp
int
(bad)
adc
sub
cwde
mov
outs
fadd
xchg
int3
stos
or
sbb
jg
and
add
jne
(bad)
mov
cmps
dec
xor
pop
ror
stos
cmps
pop
xchg
lods
in
add
loope
add
add
(bad)
nop
pop
fs
jp
retf
mov
out
inc
xor
cli
jmp
jge
dec
lock
inc
inc
jae
push
div
mov
xor
and
out
arpl
xchg
sbb
mov
pop
dec
outs
adc
(bad)
and
inc
test
adc
xor
jbe
cmp
(bad)
cdq
or
inc
push
push
call
stos
or
mov
sbb
adc
loop
sub
or
push
sub
ror
bswap
dec
js
cld
pop
dec
xchg
stos
cmps
jmp
lock
out
lahf
adc
or
jp
xor
rcl
mov
adc
adc
fwait
mov
aad
cmp
loopne
sar
jle
call
fwait
pusha
dec
loop
lods
add
loope
retf
dec
hlt
push
mov
pushf
mov
(bad)
jo
cli
sahf
jne
sbb
ss
cwde
scas
imul
aaa
call
or
shl
mov
cmp
mov
es
rcr
ret
cdq
test
jmp
into
mov
and
sbb
fucom
aaa
in
stc
(bad)
and
cmp
add
sar
add
mov
int
sbb
sbb
es
cmp
(bad)
das
mov
inc
test
mov
jne
(bad)
push
(bad)
cli
adc
shl
adc
in
mov
or
into
mov
jo
xor
fs
jecxz
mov
ds
fwait
or
fimul
xchg
adc
sbb
sbb
cmp
les
xchg
loope
mov
fmulp
inc
xor
in
cwde
mov
loop
and
jecxz
adc
in
(bad)
jae
add
cmc
int3
out
lock
adc
std
inc
mov
push
stos
mov
jmp
outs
mov
clc
jg
out
sub
ret
out
sbb
lds
int3
mov
and
cmp
and
movs
push
cli
int3
jmp
or
sub
xor
sahf
nop
fsubr
and
repnz
mov
fsubr
mul
xor
imul
(bad)
stc
mov
push
xchg
jmp
inc
gs
sbb
jo
mov
mov
fmul
mov
call
jmpw
xchg
mov
jns
cli
xchg
add
test
pusha
mov
(bad)
js
(bad)
jns
sub
(bad)
mov
outs
xor
push
or
das
in
scas
ins
call
fs
add
inc
fs
mov
jecxz
jbe
mov
inc
sub
cld
jg
sub
rol
pop
xchg
pop
jg
or
out
push
fmul
push
movs
nop
cmp
mov
add
pop
xlat
mov
push
xchg
bound
xor
mov
aaa
ret
inc
and
sub
jnp
mov
push
sahf
jbe
fmul
push
fadd
lock
inc
adc
sub
clc
and
xchg
or
daa
adc
pop
adc
xchg
cs
xor
add
jns
mov
loopne
jne
mov
lock
mov
mov
adc
pop
and
and
test
jge
xchg
adc
nop
dec
adc
lahf
xor
xchg
mov
bswap
cld
out
sar
je
jae
cli
mov
or
pop
aas
test
dec
dec
mov
cs
push
mov
test
ss
outs
inc
mov
push
mov
adc
test
test
pop
xor
imul
or
inc
imul
es
push
adc
(bad)
cmp
out
outs
(bad)
xor
pop
jno
adc
cmp
adc
lock
icebp
cmps
loope
in
and
dec
cs
inc
(bad)
call
es
jp
ja
lahf
dec
jne
or
cmp
push
adc
dec
aas
push
outs
add
stos
lahf
in
pushf
xchg
jbe
test
fdivr
mov
push
mov
xor
push
loop
sub
sbb
sub
(bad)
push
inc
push
test
lods
xchg
jle
jl
mov
ja
repnz
sahf
push
sti
jb
dec
pop
lods
cmp
xchg
cmp
mov
mov
scas
idiv
mov
sub
mov
xlat
sub
movs
xchg
xor
cmps
stos
jp
jo
mov
and
push
push
push
mov
sub
iret
mov
jnp
aam
mov
mov
arpl
outs
popa
lods
xlat
or
cmps
cdq
adc
imul
pop
lods
mov
xacquire
jg
push
int3
fisubr
lods
inc
imul
pushf
adc
jecxz
cwde
movs
jae
cmc
jns
in
popf
(bad)
jmp
(bad)
arpl
outs
adc
aas
cmp
(bad)
mov
jle
aaa
jl
scas
and
rol
stos
out
add
xchg
push
sub
fimul
lock
push
pop
mov
pop
out
outs
push
std
cmp
fwait
jb
xchg
adc
adc
hlt
sub
jp
dec
pushf
adc
and
cmps
(bad)
mov
jns
aaa
daa
mov
xchg
std
dec
dec
(bad)
and
out
mov
mov
hlt
sub
push
js
mov
ins
mov
push
shr
ret
dec
push
dec
mov
xchg
sub
adc
lods
dec
pop
out
sar
std
iret
jnp
mov
enter
inc
mov
stos
sub
dec
pop
fild
push
cmps
out
vshufpd
shl
data16
mov
xorps
mov
jnp
add
push
or
xchg
jl
gs
fsubr
cmp
push
cmps
call
in
push
and
xchg
pop
jb
or
jae
jg
sbb
adc
pop
sub
sbb
push
std
xchg
sbb
mov
sti
xor
mov
inc
lock
lahf
aam
test
xor
add
fldenv
not
imul
add
push
jb
out
cmps
pop
jmp
push
outs
adc
test
push
push
mov
retf
daa
jle
xor
push
mov
inc
cs
lods
mov
dec
or
pop
push
xor
hlt
scas
das
lds
(bad)
jp
push
popa
pop
mov
shl
jecxz
push
out
jo
(bad)
stc
mov
test
pop
mov
out
jp
mov
rcl
enter
or
rol
lea
call
gs
pop
stos
dec
push
mov
and
cmp
enter
adc
sbb
inc
push
clc
mov
shl
loope
ficom
ins
xlat
mov
in
push
ins
ss
push
ror
retf
push
or
dec
lock
mov
nop
mov
retf
ins
test
mov
push
push
nop
mov
sub
pop
test
dec
jg
gs
ficomp
cli
sbb
movs
mov
dec
les
pop
mov
test
jne
daa
push
sub
push
rol
inc
xor
ficom
mov
cmp
mov
out
clc
pop
jns
xlat
add
cmps
dec
xor
push
mov
jp
sub
add
mov
adc
scas
shl
loopne
ror
xor
sub
inc
pop
pop
lds
or
sahf
out
sub
mov
sbb
cli
adc
scas
add
mov
out
push
(bad)
mov
mov
xor
fsub
xchg
jne
xor
cmp
repnz
jae
fwait
inc
pop
push
fst
stc
mov
push
mov
inc
pop
out
fsubp
or
enter
mov
aaa
jmp
int3
lock
cmps
dec
fisubr
mov
cmps
mov
mov
dec
stos
xor
mov
mov
in
jmp
sbb
test
enter
sbb
in
jns
sahf
js
cmp
mov
out
fsubr
push
sub
dec
outs
cmp
jecxz
and
leave
cmp
lahf
movlps
xchg
jmp
sar
add
lock
xor
sub
popf
and
imul
pop
inc
jmp
push
xchg
xchg
iret
ror
aaa
das
pop
movs
das
arpl
pop
or
scas
call
sbb
xchg
jecxz
jmp
jmp
or
adc
inc
xlat
jns
xchg
hlt
xchg
rol
cmp
cs
push
ins
mov
mov
mov
jnp
imul
gs
fwait
adc
and
out
cmps
xchg
(bad)
int3
aad
rcl
push
mov
jns
xchg
retf
das
jnp
cmp
jle
retf
iret
pop
add
sub
ret
push
fnstenv
dec
mov
retf
jne
call
data16
(bad)
cld
mov
mov
bswap
jbe
in
inc
and
rol
sbb
sub
aaa
sar
dec
test
mov
cmc
fsubr
mul
(bad)
shl
push
add
cdq
mov
mov
cmp
push
jbe
outs
adc
dec
sbb
ret
cli
aad
sub
sbb
ins
xchg
dec
stos
inc
inc
xchg
inc
mov
jle
loopne
push
jle
push
pop
sbb
nop
shl
int
fisub
cmp
adc
inc
jno
movs
movs
cmc
sbb
mov
(bad)
mov
dec
ds
fnstcw
xchg
pusha
jne
inc
cli
lods
cmp
imul
mov
icebp
fsubrp
es
xchg
fs
mov
nop
mov
push
cwde
sbb
or
pop
push
push
fsincos
mov
mov
push
jg
int3
jne
pusha
(bad)
frstor
nop
ja
out
xor
adc
popa
addr16
dec
(bad)
mov
and
rcl
shr
add
fwait
jbe
fist
dec
pop
es
and
cmc
into
adc
jne
or
bnd
cmps
cmc
add
add
mov
and
add
rol
cmp
in
ror
repz
into
dec
enter
icebp
test
aam
xor
aam
sub
add
push
mov
add
cmp
add
leave
sti
shr
mov
out
jno
stos
mov
mov
mov
cdq
cwde
aad
loopne
jo
mov
inc
mov
or
bound
ins
inc
jb
aam
pop
(bad)
cmp
xor
in
inc
adc
imul
jge
ins
les
cmps
mov
cmp
(bad)
mov
jb
repz
into
dec
fcmovnbe
mov
mov
lds
jo
ds
test
add
adc
into
adc
les
fs
jo
stos
cmc
sub
add
xor
and
pop
retf
rcl
mov
out
nop
dec
pop
jecxz
jle
out
lahf
jne
xor
add
adc
sub
xchg
add
ret
or
sub
sub
push
xchg
inc
add
je
fwait
sub
inc
clc
cmp
inc
sbb
(bad)
rcr
mov
mov
mov
movs
xchg
fwait
into
lahf
mov
inc
std
out
add
repnz
sbb
mov
jnp
inc
cmp
bound
adc
sub
iret
imul
test
test
jmp
push
sub
(bad)
call
out
leave
ror
sub
mov
xor
out
lds
adc
clc
push
mov
or
push
push
xlat
(bad)
fwait
xlat
inc
daa
and
bound
or
push
data16
mov
sub
(bad)
sbb
les
je
cmc
mov
pop
out
enter
and
mov
ss
adc
rcr
xor
lock
jnp
sbb
xchg
movs
cwde
jns
push
jmp
xchg
shr
fs
push
es
sti
retf
mov
sahf
sbb
(bad)
stc
jo
jo
imul
out
ret
jmp
fistp
imul
call
jo
les
adc
shl
mov
mov
fdivr
pop
cli
xor
clc
or
mov
xchg
nop
ins
mov
xor
xor
inc
repz
xchg
sti
test
and
add
test
mov
mov
cwde
loopne
mov
cmp
xchg
jns
lods
or
cmp
fnstsw
mov
fwait
outs
fcom
dec
xor
mov
fmul
test
sahf
or
les
retf
mov
sub
xchg
xor
pop
popa
sub
mov
or
rcr
icebp
cdq
inc
es
outs
ins
(bad)
cmp
es
adc
movs
adc
and
mov
fst
pop
stos
dec
xchg
jg
lock
xchg
icebp
sub
fistp
sahf
test
or
mov
mov
in
loop
js
sbb
adc
mov
in
mov
arpl
jo
stc
xlat
movs
or
inc
inc
jge
div
in
lahf
mov
imul
pop
pop
icebp
and
rcl
jne
cmp
fild
cmp
enter
xchg
pop
push
push
addr16
sahf
push
test
add
fisub
ins
and
repnz
ds
cmp
push
mov
lea
pop
mov
push
xlat
xor
sahf
(bad)
jl
xchg
mov
scas
pop
dec
(bad)
std
push
push
shr
mov
ret
cld
gs
inc
scas
call
sbb
jle
fucomi
popf
add
pop
or
call
mov
or
sbb
cmp
mov
test
mov
dec
sbb
ins
fcmovnb
inc
mov
mov
(bad)
adc
fst
inc
fcom
sub
xchg
dec
ficom
mov
mov
or
jecxz
cmp
mov
out
into
jno
or
push
pop
loope
call
(bad)
pop
out
mov
xlat
arpl
cmc
retf
ret
fsub
ret
push
sbb
xchg
aaa
sbb
and
pop
nop
or
adc
jg
add
cmc
jmp
(bad)
jg
lahf
out
shl
adc
imul
push
sbb
sbb
cli
aaa
xchg
push
out
leave
push
mov
into
inc
scas
adc
or
cmp
in
cdq
and
add
pop
test
pop
add
outs
inc
xchg
aaa
jnp
addr16
stos
test
shl
mov
mov
int
jmp
in
aaa
push
dec
dec
dec
call
popa
mov
sub
das
ficom
cmp
sbb
(bad)
lods
xchg
sub
imul
outs
xchg
addr16
mov
std
sub
adc
xchg
ins
pusha
out
inc
sbb
or
cmps
in
cmp
pop
in
in
stc
add
sub
push
sti
call
shr
push
dec
cmp
jmp
xor
inc
sbb
movs
out
pop
pop
test
dec
enter
mov
pop
(bad)
std
add
stos
imul
stos
call
jge
add
popf
jge
and
mov
mov
jo
sti
imul
add
add
stc
fisttp
test
add
inc
fwait
lea
fisub
push
push
add
sub
mov
mov
sub
fiadd
mov
(bad)
gs
cmp
or
or
jne
jb
jo
dec
xchg
dec
ficomp
arpl
xchg
lods
pop
xchg
cs
loope
clc
dec
cmp
stos
mov
pop
jo
dec
pop
cmps
xor
inc
fild
push
or
push
xchg
sub
sub
sub
sti
or
mov
and
mov
jnp
ret
xor
mov
out
and
pop
fild
jmp
jle
in
movs
push
mov
dec
clc
jp
sbb
std
fdiv
pop
loopne
test
dec
add
fimul
dec
mov
mov
imul
or
ja
rcpps
cmps
cmp
jle
cmc
adc
jg
cmp
aaa
mov
hlt
rcr
and
pop
clc
movs
xchg
test
rcl
aaa
sar
divps
and
cdq
test
aaa
movhps
mov
ror
out
mov
push
ins
pop
fdiv
fbld
push
rcr
outs
cmp
pop
inc
dec
push
pop
sub
call
dec
inc
movs
add
inc
and
add
int
aas
data16
sbb
mov
pop
leave
sbb
stc
xor
sbb
and
es
mov
or
out
add
hlt
std
sbb
mov
inc
sbb
and
and
xchg
in
loop
jns
hlt
sbb
imul
pop
or
aas
mov
push
jecxz
jns
jmp
sub
dec
lahf
rcl
iret
bound
sar
jge
mov
pop
lock
mov
retf
fdiv
sbb
fs
xor
sub
push
jle
call
xchg
xchg
push
dec
mov
mov
jno
cmp
sbb
dec
pop
lea
pop
into
(bad)
xchg
(bad)
jge
idiv
ins
mov
adc
add
sbb
inc
jge
jae
cmp
dec
xchg
inc
lock
dec
shl
or
cmp
pop
cwde
icebp
xchg
cmp
mov
xor
sbb
int
or
lea
inc
int
hlt
pop
dec
fcom
cmc
pusha
jge
sub
out
mov
xchg
clc
pop
pushf
or
mov
arpl
lods
ret
sbb
pop
cwde
cmp
push
push
mov
and
dec
sub
jne
popf
shl
mov
dec
and
dec
loop
xor
mov
mov
out
sub
pop
cmps
or
inc
cmc
push
sub
push
add
(bad)
push
cli
xchg
cmp
sbb
into
in
cmp
cwde
out
xchg
sub
mul
pop
call
push
adc
push
cdq
xchg
lds
xor
rcl
and
mov
nop
(bad)
gs
or
and
pop
call
xchg
or
lds
pop
popa
or
xchg
mov
loop
xor
js
sti
ds
pop
adc
pop
lods
sub
dec
push
jae
stos
adc
jmp
daa
and
mov
or
les
jns
push
iret
inc
loopne
push
mov
mov
add
and
mov
add
out
test
ret
into
pushf
test
nop
stos
mov
add
mov
ret
int
scas
fcomp
in
test
mov
pop
xchg
lods
lods
and
lods
enter
(bad)
test
imul
in
mov
mov
or
or
pushf
movs
nop
xchg
push
lock
fsubr
imul
jb
or
mov
mov
les
out
jcxz
cmps
movs
or
dec
clc
jbe
retf
dec
mov
inc
mov
fwait
xchg
pusha
mov
sahf
leave
lock
data16
sub
push
mov
rdmsr
not
jae
jg
test
fnsave
int
push
add
jb
jg
inc
push
jnp
cmp
jmp
sbb
xchg
out
hlt
cmp
retf
cmp
dec
adc
jo
in
adc
xchg
jle
and
inc
mov
xchg
mov
jp
push
enter
ins
and
fstp
inc
test
jnp
mov
sub
mov
push
bound
jnp
mov
cmc
push
into
jl
fadd
retf
ficomp
sub
lahf
dec
or
(bad)
out
dec
inc
inc
push
lea
loop
ins
das
mov
lds
fisttp
mov
out
imul
mov
mov
mov
push
mov
mov
and
pusha
mov
xchg
mov
in
mov
and
lds
outs
bound
push
and
mov
cmp
inc
out
ret
sbb
xchg
inc
mov
out
jo
les
arpl
mov
sbb
scas
out
lea
mov
icebp
xor
jmp
dec
dec
dec
pop
push
jbe
jmp
xchg
ins
jmp
mov
xor
add
scas
fstp
mov
and
cmps
xchg
jnp
popf
test
cmc
dec
fimul
popf
jmp
mov
stc
pop
sub
mov
mov
jp
mul
xor
repnz
mov
push
les
mov
and
xchg
dec
mov
mov
cmps
mov
out
and
adc
call
or
adc
fnstsw
cmp
cs
in
adc
cmp
add
add
mov
into
iret
(bad)
outs
les
xchg
(bad)
mov
and
xchg
xchg
dec
call
adc
push
mov
rol
adc
mov
dec
rcl
xor
jno
pop
xchg
inc
int3
jge
jnp
push
or
ror
push
retf
inc
xor
das
test
or
out
cmp
lods
(bad)
lods
rcr
dec
sub
cmps
imul
jge
mov
cmps
in
inc
jg
data16
dec
pop
out
xchg
sahf
pusha
rcl
aas
cmp
cmp
mov
push
jns
push
mov
(bad)
test
mov
rol
cdq
and
inc
pop
out
clc
out
jg
or
call
mov
jbe
pop
adc
mov
cmps
sub
mov
movs
call
mov
icebp
add
xchg
pop
cmp
adc
imul
aam
mov
outs
cmp
sbb
pop
push
fmul
mov
mov
xchg
sub
push
dec
movs
shl
test
add
xor
lds
mov
test
loop
mov
inc
test
pop
jge
scas
push
mov
popa
lahf
(bad)
inc
(bad)
iret
inc
pop
xlat
add
(bad)
jl
test
push
mov
les
int3
dec
add
gs
outs
imul
cmps
fcmovne
stos
pop
push
imul
push
xchg
mov
bswap
sbb
push
shl
push
cmp
adc
and
cmovg
push
or
xor
pop
push
adc
scas
or
ror
imul
sub
or
fwait
not
inc
jecxz
movs
leave
sub
gs
(bad)
inc
int3
div
fadd
cmp
fcomp
xchg
ror
sar
stos
(bad)
int
es
out
pop
or
pop
jbe
jae
bound
dec
xor
push
inc
push
in
in
mov
add
cs
hlt
jae
dec
mov
jg
xchg
inc
cmp
lods
pop
pop
inc
ret
retf
xchg
cdq
shl
enter
cmp
movs
sbb
or
rcr
and
sbb
inc
dec
test
inc
outs
sub
cmp
and
aas
cmp
jb
mov
mov
sub
in
xchg
xor
inc
lea
loop
jb
(bad)
xchg
ret
daa
sub
out
xchg
mov
mov
cdq
or
mov
pop
call
iret
ror
xor
push
leave
dec
int3
add
xchg
mov
adc
movs
inc
aaa
push
jns
or
jp
push
retf
in
aaa
jle
mov
in
push
or
hlt
or
dec
xor
mov
ins
or
push
push
jbe
jbe
call
mov
pop
adc
lock
mov
mov
cwde
and
adc
pop
ss
nop
mov
pop
ins
add
sub
inc
(bad)
aad
or
jg
jmp
xor
pop
rcl
shr
sub
mov
pusha
push
inc
xor
(bad)
test
mov
and
add
jb
aad
and
cmp
cdq
neg
pop
(bad)
pop
cmp
leave
mov
xchg
pop
pusha
stos
enter
es
test
jmp
mov
pop
mov
leave
ror
fmul
int3
rcl
jae
jae
ins
xor
jae
loope
aas
xor
and
std
pop
xchg
in
inc
in
xchg
out
add
fprem1
push
cdq
out
adc
aaa
mov
jmp
out
xchg
pop
sti
xor
fidivr
(bad)
loop
jg
jbe
data16
lods
cmps
inc
sub
mov
fadd
pusha
aas
xor
pop
scas
repz
rol
and
pop
dec
mov
or
pop
pop
push
jmp
sti
es
fs
xor
std
(bad)
cmps
in
cmp
cmp
jb
mov
repz
mov
popa
mov
sub
(bad)
sub
int
push
sub
sbb
adc
ret
sbb
push
scas
pop
jae
in
cmp
xlat
repz
imul
jp
inc
mov
test
and
mov
daa
jp
dec
fs
jecxz
and
cmp
ins
loopne
xchg
clc
jne
mov
inc
jae
dec
xchg
pop
out
addr16
pop
popf
sbb
add
and
mov
push
into
sub
xchg
ret
adc
sub
add
test
jp
cmp
(bad)
std
imul
rcl
jbe
push
or
repz
js
pushf
mov
adc
jp
(bad)
push
aad
ds
mov
xchg
scas
inc
pop
sbb
call
lds
mov
icebp
push
push
mov
xor
sub
adc
mov
pop
push
rcl
pop
scas
and
or
adc
out
jns
xchg
jl
nop
push
mov
xor
out
mov
test
dec
mov
push
lock
mov
pop
sub
xchg
test
push
ss
mov
aad
adc
sbb
push
sbb
fdivr
popf
iret
pop
fwait
rol
fstp
repz
aas
fwait
pop
bound
rcl
push
repnz
scas
enterw
lods
cmp
dec
xor
adc
and
scas
add
shl
ins
fdiv
push
xchg
dec
retf
push
add
or
sub
call
and
ds
pop
fdivr
xor
sahf
mov
push
jmp
cmp
push
add
dec
cmps
push
dec
mov
xchg
adc
add
add
add
jg
bound
mov
sar
cmc
pop
aas
repz
xor
adc
dec
cmp
sbb
xor
and
outs
mov
in
ins
mov
in
jbe
leave
dec
mov
pop
in
pop
xchg
push
ss
cmps
xchg
popa
adc
int
loopne
dec
adc
dec
cmp
or
mov
es
cs
mov
jmp
arpl
(bad)
cmc
out
sub
sahf
cmp
aas
sub
xchg
jmp
imul
cld
xor
cmps
push
mov
jge
cmps
cmp
iret
scas
cmp
mov
test
adc
cmps
add
jmp
lods
mov
movs
rcl
add
dec
dec
xchg
ror
pop
pop
jp
xchg
pop
mov
xchg
(bad)
push
ins
stos
dec
mov
gs
ret
outs
xchg
mov
sahf
xor
loopne
cmps
or
push
or
mov
push
out
mov
and
cld
(bad)
push
inc
mov
dec
fcmovb
fcom
call
cli
inc
adc
pop
cli
test
in
sub
aaa
aam
mov
cmc
stos
mov
xlat
rcl
xor
inc
and
lods
and
or
adc
ss
push
inc
out
aaa
addr16
inc
mov
and
push
inc
or
and
mov
sbb
cmp
icebp
add
test
adc
mov
loopne
js
sbb
outs
out
pusha
cs
inc
scas
sbb
mov
fwait
jmp
int3
std
sbb
jb
ret
ss
lds
add
hlt
push
push
fmul
outs
xchg
add
mov
mov
sbb
mov
out
inc
cmps
xor
mov
mov
arpl
lahf
jae
dec
mov
mov
out
cmp
pop
iret
jge
call
adc
loop
cli
ins
stos
fmulp
jo
cmps
into
push
ror
lock
xchg
cmps
mov
xor
icebp
sub
in
dec
pop
out
call
cmps
add
mov
or
outs
mov
add
je
mov
xchg
cld
stos
mov
pop
fist
(bad)
int
cld
int3
test
pop
fild
and
ja
jns
add
mov
push
mov
popf
jg
out
push
aas
lock
mov
cmp
enter
int
push
pop
test
cmp
out
fimul
lods
pop
pop
ds
mov
aad
xor
das
mov
data16
repz
pop
int
movs
pop
xchg
jo
push
scas
push
mov
cmps
xchg
frstor
add
sub
vmovaps
sub
xor
je
test
ret
les
fxch
ja
jno
push
fs
lods
int3
push
lods
xor
mov
cmps
or
arpl
lock
daa
leave
mov
mov
nop
mov
in
and
dec
mov
retf
or
outs
es
(bad)
mov
(bad)
ja
sbb
inc
ret
jmp
rcr
sub
ins
or
dec
in
cmp
cmps
and
dec
pop
shl
mov
mov
mov
dec
ins
dec
and
fsubrp
pop
and
shr
lds
sbb
dec
dec
cmp
ret
adc
mov
or
mov
push
adc
fsubr
(bad)
in
push
loop
stc
imul
popa
enter
dec
sub
sub
les
out
dec
dec
mov
sbb
retf
mov
pop
pop
imul
jecxz
cs
in
aad
imul
pusha
or
mov
sub
mov
into
loopne
cmp
out
push
ret
inc
mov
imul
pop
cmp
jno
cld
jno
jne
dec
xor
push
imul
nop
fimul
cwde
cmovs
femms
(bad)
clc
xchg
push
into
inc
inc
pop
inc
sti
add
fwait
mov
sbb
pop
push
mov
xor
idiv
adc
push
fistp
scas
inc
fadd
dec
mov
call
pop
pop
lahf
pusha
ins
movs
inc
xchg
jle
push
and
ret
retf
out
lods
inc
cdq
(bad)
dec
js
jmp
or
xchg
ja
cmp
cmp
(bad)
ds
loop
pop
inc
test
mov
sbb
movs
adc
jp
jp
and
aaa
fst
test
mov
sub
into
mov
push
call
gs
push
mov
push
or
imul
xchg
jae
pop
fs
cdq
inc
push
test
cwde
mov
mov
xchg
pusha
pushf
inc
outs
in
adc
fcomp
sbb
xchg
sbb
mov
movs
test
mov
iret
xlat
aas
arpl
and
loop
jmp
and
sbb
jl
xor
in
movs
xchg
sub
add
and
ins
mov
mov
sbb
mov
arpl
or
mov
dec
or
cmp
mov
or
out
mov
fsubrp
imul
addr16
mov
jmp
adc
aam
(bad)
pusha
scas
adc
fisubr
jle
repnz
ror
rcr
(bad)
inc
jp
dec
cmc
push
lahf
adc
leave
lods
push
xor
jae
mov
dec
xor
cmc
mov
test
rcl
or
cmp
pop
test
iret
out
inc
sub
test
sub
push
or
scas
fcmovne
mov
push
out
mov
stos
std
fcom
cwde
inc
cwde
add
inc
mov
call
test
sbb
std
out
inc
mov
dec
cdq
mov
push
icebp
sub
pop
call
add
int3
outs
in
mov
movs
xchg
jo
adc
in
cmp
sub
add
cdq
sbb
mov
shl
mov
rcr
and
vmaxss
xor
in
call
imul
push
retf
fild
pusha
add
jge
test
gs
pop
xchg
sub
mov
test
aaa
push
sub
jbe
xor
and
jle
add
jg
pop
adc
adc
dec
cmc
ret
pop
jmp
push
shl
test
arpl
lock
stc
jecxz
fadd
mov
ret
out
xchg
or
add
or
mov
ret
jb
inc
lods
add
inc
mov
nop
jb
mov
xchg
dec
fisttp
and
leave
inc
jae
dec
jne
aam
fadd
sahf
mov
push
repnz
jg
xlat
xchg
arpl
jge
xchg
call
call
xor
jns
jae
pop
je
not
int3
fadd
mov
pop
sub
push
cdq
lahf
das
test
jns
jp
jge
pop
cmp
repnz
xchg
cmc
or
lock
mov
sub
jmp
out
push
sbb
nop
push
jbe
add
in
push
sbb
mov
mov
mov
sbb
cmp
jbe
lea
adc
retf
fild
pop
call
sbb
fs
rcr
sar
and
mov
lea
pushf
pop
push
sbb
in
nop
int3
xchg
enter
jb
jne
test
adc
fmul
sub
dec
mov
jmp
inc
out
lds
jbe
mov
imul
push
ror
cmp
lds
sbb
lea
aam
les
push
cmp
jnp
inc
dec
cs
sbb
pusha
mov
mov
inc
pop
mov
and
ret
loop
push
mov
dec
sbb
ficomp
inc
into
test
aad
push
fnstenv
sbb
lea
in
push
inc
mov
jmp
aad
cwde
mov
jnp
lds
loop
mov
(bad)
jg
div
les
push
sub
mov
or
inc
pushf
fsub
or
pop
pop
fidiv
push
lods
fisttp
dec
or
shl
aas
dec
xchg
xchg
xchg
test
cdq
sub
sbb
pop
or
and
data16
mov
and
sbb
stos
push
jg
mov
mov
ins
add
and
out
jge
sti
jns
aam
pop
(bad)
inc
arpl
xor
jbe
inc
cmp
(bad)
call
sub
cmc
int
stc
inc
lods
lea
mov
and
sbb
sub
stos
out
push
add
cdq
ins
fstp
add
cmp
bound
test
loopne
dec
cmps
mov
push
shl
dec
xchg
(bad)
mov
pop
inc
jns
add
jp
add
add
(bad)
cdq
out
jne
xchg
stos
sub
movs
push
pop
(bad)
popf
dec
sbb
wrmsr
mov
leave
in
fs
shr
and
rcr
jp
mov
and
xchg
mov
xchg
pop
cmp
pop
ja
pop
mov
fnstcw
cwde
or
imul
push
mov
daa
sar
push
jnp
or
cmp
jp
mov
jb
pop
push
stos
mov
sar
fimul
stos
pop
iret
adc
xor
pop
xchg
mov
pop
mov
mov
cs
mov
test
ins
xchg
cdq
sbb
fld
jl
or
leave
out
test
sbb
pop
xlat
inc
add
adc
mov
xchg
call
push
jbe
dec
push
mov
(bad)
mov
adc
outs
bound
fiadd
push
je
or
pop
dec
jo
push
iret
push
mov
jmp
mov
jl
call
dec
aam
lea
and
(bad)
inc
mov
mov
mov
inc
dec
cdq
arpl
data16
jmp
mov
sub
pop
push
mov
pop
fwait
popf
movs
jmp
ffreep
cs
xor
stc
repnz
xlat
xchg
push
mov
push
std
cmp
out
fs
xchg
repnz
pop
adc
push
sahf
jmp
push
inc
stos
mov
adc
cmps
mov
push
mov
fcmove
sbb
movs
inc
nop
mov
cwde
sub
sub
add
call
adc
(bad)
cmp
pop
imul
cmp
clc
inc
(bad)
test
adc
mov
jbe
adc
xor
scas
jmp
cmc
add
mov
sti
sub
pop
dec
pop
xchg
and
inc
xlat
push
pop
jo
jnp
daa
aad
xor
(bad)
js
call
pop
sbb
pusha
mov
adc
push
pop
cmp
xor
pop
push
sbb
ins
lods
push
mov
push
dec
xchg
call
imul
call
xchg
push
mov
xchg
test
imul
mov
sub
out
and
pop
jbe
and
jl
add
scas
loop
cwde
sbb
mov
scas
jne
push
in
lock
aam
out
push
pop
xchg
call
popa
and
fimul
lods
mov
push
stc
call
lds
enter
lods
out
mov
adc
xchg
fnstsw
ja
or
jecxz
push
pop
xchg
adc
xchg
in
jmp
sbb
xchg
push
push
test
push
pop
inc
mov
(bad)
cld
xor
mov
cmps
loop
cwde
adc
cmc
sub
xchg
shr
mov
mov
add
add
pop
fst
or
movs
cli
sub
sbb
mov
adc
ins
or
xor
inc
jg
or
gs
nop
fisub
xchg
mov
pop
bound
fsubr
push
lods
jmp
mov
sbb
mov
(bad)
sbb
and
jp
lds
cdq
shr
movs
stc
add
jmp
add
bound
stc
and
leave
adc
and
xor
push
sbb
push
inc
sub
ja
mov
ja
bound
ret
mov
sub
je
out
jge
mov
jbe
cmp
pop
gs
test
ins
in
es
jne
inc
mov
and
test
(bad)
push
fnstenv
xchg
push
iret
add
push
and
xchg
(bad)
(bad)
retf
push
adc
inc
(bad)
in
ret
stc
jbe
push
push
(bad)
(bad)
out
add
cmp
retf
sbb
fnstenv
std
sub
sbb
jge
cmp
cmp
test
shr
lods
mov
lahf
fs
pop
push
jge
pop
outs
ds
adc
lahf
jbe
popf
clc
sbb
mov
shl
and
cmp
and
call
adc
push
mov
stc
iret
stc
jmp
inc
push
sbb
cmps
mov
sbb
push
pop
fst
inc
retf
aas
pop
push
and
push
clc
cwde
repz
stos
sbb
jae
iret
xor
loopne
push
test
das
mov
or
clc
mov
and
sbb
push
push
cmp
mov
add
js
(bad)
pop
retf
movs
test
rcr
lea
popf
xchg
iret
repnz
lods
add
mov
dec
and
xor
mov
jne
scas
ss
push
jmp
push
cld
jecxz
vmovlps
test
xadd
cmc
inc
out
out
xor
xchg
add
cmp
add
repnz
ins
out
ds
test
pop
pop
jecxz
stos
mov
pop
lods
pop
add
mov
es
dec
jnp
xor
(bad)
fs
ficomp
scas
leave
jae
jp
cmp
mov
xor
lods
call
add
in
mov
sub
cdq
lock
dec
xchg
ins
fwait
loope
(bad)
out
test
cmp
jmp
and
sbb
hlt
imul
shr
neg
inc
xor
cdq
cs
sub
(bad)
fild
xchg
mov
xchg
(bad)
cmp
or
fld
xchg
jp
shl
test
sub
pushf
mov
imul
or
nop
in
aaa
es
int
xor
shl
cmps
sub
(bad)
dec
dec
into
in
mov
stc
xchg
rcl
cmps
lods
nop
sar
push
dec
add
jp
push
push
cmps
dec
loop
sbb
sbb
lods
outs
test
inc
pop
sbb
(bad)
aam
(bad)
mov
cli
add
ins
rol
shl
test
setge
sub
push
bnd
in
daa
dec
(bad)
mov
dec
das
cli
jae
push
sbb
pop
xchg
(bad)
lods
loop
jecxz
dec
test
xor
and
es
nop
sub
mov
inc
imul
mov
pop
push
cmp
daa
(bad)
pusha
retf
dec
and
cmp
mov
aad
pop
sahf
daa
repz
rcr
ja
cmp
dec
cmps
imul
jecxz
pop
mov
jecxz
out
xchg
xlat
jl
cmp
add
(bad)
stos
adc
clc
(bad)
loope
es
outs
aad
lods
mov
add
jae
mov
fld
stos
sbb
stos
dec
(bad)
ss
inc
(bad)
repz
aas
fucomip
jae
add
mov
push
mov
mov
jecxz
cli
cmp
push
push
mov
rol
int3
shr
cmps
sbb
fsubr
or
and
mov
int
push
mov
lea
out
cmp
rol
or
and
cmp
mov
(bad)
cdq
xchg
(bad)
leave
mov
xor
ss
dec
jo
leave
loope
inc
std
cld
adc
sbb
push
xchg
jg
cmps
pop
push
fldenv
inc
fistp
hlt
dec
arpl
jle
ficom
aas
cmp
mov
cmp
dec
sbb
into
les
ja
push
int3
xor
add
and
popa
fcom
inc
add
push
(bad)
popf
sub
fadd
repz
int3
dec
cmp
and
sbb
sar
inc
fcomp
cmps
repnz
movs
mov
stos
popf
in
push
outs
aas
push
(bad)
cli
sti
jno
pop
fcomp
add
xor
repnz
push
xchg
sti
and
push
retf
stos
push
int
dec
sbb
sub
cdq
mov
dec
pop
pop
(bad)
out
imul
jmp
sar
pop
xchg
inc
shl
mov
adc
ficomp
pop
ds
pop
enter
mov
test
adc
(bad)
mov
ins
int
js
nop
push
adc
popa
adc
pop
sbb
and
cmp
dec
bound
xchg
lods
cmps
mov
jl
in
fstp
out
mov
ror
in
lods
in
push
sbb
scas
dec
jl
test
or
sub
popa
xchg
stos
sti
test
(bad)
fstp
xor
lahf
inc
add
sbb
es
xchg
call
add
cmp
jmp
bound
fwait
in
jae
sbb
mov
xor
sub
test
inc
push
mov
xchg
test
repnz
sbb
shl
pop
and
in
les
loopne
inc
aas
dec
clc
pop
repz
jp
xor
les
fcom
cmc
data16
lds
rcr
inc
pushf
loope
ins
mov
xchg
es
popf
movs
pop
in
push
pushf
jno
pusha
mov
pop
or
cmp
test
aaa
data16
jmp
xchg
push
shl
cmp
jl
sahf
cld
mov
and
xor
neg
jmp
inc
pop
cmp
stos
pushw
mov
(bad)
imul
cmp
mov
imul
add
adc
(bad)
mov
cli
mov
mov
scas
jmp
data16
cmp
inc
leave
dec
cli
popa
in
clc
(bad)
add
lock
inc
cmp
fdivr
leave
stc
sahf
mov
xor
mov
adc
cmp
sbb
jae
mov
mov
or
cmps
pop
cmc
cmp
std
xchg
sahf
push
pusha
jp
jmp
mov
mov
retf
aad
xchg
loop
inc
jl
clc
mov
push
cmp
(bad)
jge
push
jno
mov
das
pop
adc
enter
icebp
jo
cld
ror
mov
mov
daa
pushf
ret
out
push
or
add
mov
mov
jae
add
outs
or
mov
pop
shl
ds
jmp
pushf
arpl
nop
in
and
(bad)
sbb
add
lods
repz
int3
xchg
mov
mov
hlt
mov
out
mov
dec
inc
in
mov
stc
xor
mov
lea
int
popa
xor
je
int3
rol
pop
and
shl
dec
push
repnz
icebp
mov
mov
loop
mov
pop
aam
fsubr
sbb
xchg
imul
sub
(bad)
es
movs
cmps
cmp
xchg
mov
jmp
inc
pop
daa
hlt
das
cdq
mov
xchg
bound
pop
ds
fiadd
arpl
stos
adc
jle
jecxz
in
arpl
cmovbe
xor
xchg
fadd
push
add
sbb
in
add
push
gs
cli
ss
and
jecxz
aaa
pop
test
ficom
inc
fimul
mov
or
xchg
iret
xchg
test
sbb
in
int
push
pop
fnstsw
imul
fst
adc
(bad)
test
stos
aas
ret
stos
es
int
push
xchg
sub
aam
outs
les
es
xlat
jp
popa
xchg
push
sbb
jnp
daa
fs
repnz
fidiv
loopne
mov
ja
repnz
jg
mov
inc
nop
dec
pop
ret
(bad)
aaa
cmps
rol
aas
shr
mov
rol
das
aam
fwait
ret
nop
mov
test
xor
pop
ins
inc
in
sub
cli
add
push
sbb
push
mov
aaa
enter
ds
repnz
cmps
push
jg
scas
scas
jl
jle
mov
into
out
xlat
mov
fidiv
call
stos
push
mov
cmp
inc
stc
and
(bad)
bound
xchg
inc
sbb
mov
inc
stos
icebp
dec
(bad)
pop
pop
call
sub
cmps
inc
inc
push
pushf
push
push
adc
mov
sub
out
add
sub
rcr
xor
xchg
rep
pop
lea
adc
jne
cmc
xor
scas
jecxz
test
push
mov
lods
pop
fbstp
daa
jne
pop
scas
enter
repnz
jne
cmc
(bad)
inc
repnz
jbe
cdq
cmp
or
ss
loopne
or
lea
mov
call
nop
mov
mov
aam
pop
add
sub
cld
add
push
push
sub
push
lock
push
loope
pop
in
jg
lods
rol
cwde
sar
stc
sbb
lds
inc
fst
das
sbb
stc
xor
dec
mov
xchg
ja
xor
push
and
xor
xchg
dec
dec
pop
sbb
adc
sub
inc
imul
(bad)
(bad)
and
pop
lock
idiv
mov
fmulp
and
out
push
sub
xlat
fild
mov
movs
(bad)
mov
test
cmp
push
mov
or
movs
and
test
adc
fwait
jle
push
push
mov
push
adc
int3
xor
loope
int
and
inc
mov
iret
sub
cmps
xchg
or
test
pop
add
xchg
mov
xchg
jo
clc
adc
stos
(bad)
(bad)
in
ds
pop
mov
pusha
and
cmps
fwait
int
jnp
les
rcl
mov
xor
and
outs
sbb
jo
push
inc
test
fwait
rcr
jne
pushf
sub
mov
push
or
(bad)
(bad)
and
xchg
in
fucomip
test
test
cmp
xchg
loop
scas
in
sbb
lods
sbb
mov
(bad)
xchg
lock
inc
and
dec
xchg
call
sub
pop
or
movs
ins
arpl
out
(bad)
dec
jo
stos
and
and
jl
std
mov
inc
pop
mov
test
push
xor
sbb
fwait
xchg
dec
lea
sbb
je
ins
in
xor
pop
inc
mov
dec
sar
pop
pop
jl
sub
inc
pop
je
add
pop
icebp
movs
cmp
cld
movs
lahf
xor
neg
and
jecxz
cmp
inc
icebp
div
cmps
call
fmul
clc
and
mov
xor
push
(bad)
sahf
sub
mov
or
sbb
cmp
test
push
jge
int3
jno
push
(bad)
das
cmp
je
jno
push
xchg
sbb
in
push
adc
xchg
movs
mov
arpl
inc
push
and
fwait
sbb
repnz
addr16
rcl
sub
push
xchg
scas
xchg
push
dec
cmp
or
js
or
in
mov
das
and
(bad)
es
sbb
sbb
or
jp
out
add
mov
aaa
mov
and
xchg
push
sbb
enter
mov
sub
cmps
adc
sbb
or
pop
cmc
loop
inc
add
xlat
das
xor
in
call
push
(bad)
rcr
ret
dec
das
fidivr
xlat
fld
int3
call
retf
add
add
in
xadd
mov
add
imul
cmp
add
popa
add
sub
mov
cmps
inc
mov
dec
jno
pop
pmuludq
pop
mov
xchg
jp
sub
and
mov
jne
cmp
dec
jmp
and
sub
mov
jecxz
or
sbb
gs
xchg
xlat
xor
cwde
add
fdiv
or
in
mov
popf
xor
sub
push
mov
push
push
fst
test
les
sbb
enter
(bad)
popa
mul
add
pushf
stos
jge
mov
cli
sub
sti
scas
inc
mov
or
and
ins
hlt
retf
xrelease
adc
add
ds
mov
stos
push
mov
jg
add
es
js
daa
inc
sub
xlat
inc
inc
sti
popf
sbb
push
call
xchg
lahf
cld
inc
xor
inc
stc
adc
push
or
into
fdiv
scas
dec
pop
mov
xor
cmp
mov
xchg
mov
enter
dec
shl
retf
add
inc
xchg
adc
(bad)
mov
jne
push
sbb
cdq
dec
sub
push
loope
sbb
call
sub
sub
dec
add
jmp
and
xlat
popa
jg
icebp
ds
pop
xchg
into
test
jnp
clc
out
dec
js
mov
aad
(bad)
pop
stc
outs
fsubr
xchg
xlat
lock
mov
lea
add
sbb
and
and
psadbw
xor
repz
fsub
fcom
imul
push
in
push
pop
xchg
mov
std
test
jg
fdivr
and
mov
add
into
dec
sbb
sbb
fsubr
and
mov
push
rcl
repz
shl
rol
dec
(bad)
or
fistp
mov
adc
repnz
cmp
lea
repz
aaa
pushf
scas
pushf
xchg
pushf
int
in
add
sub
pop
call
movs
or
pop
fcomi
adc
jae
ror
sub
pop
lahf
xor
dec
cdq
adc
aas
mov
dec
push
pop
dec
cmp
loope
dec
ins
sub
ja
shr
popf
jmp
out
mov
jmp
ja
sub
adc
imul
out
sbb
and
cmp
xor
mov
rcr
cmc
xchg
mov
cmp
sbb
add
cdq
xchg
ins
popa
cmp
out
mov
out
push
add
lock
je
add
or
pop
xor
sbb
fadd
les
ja
sbb
sub
fild
sbb
out
dec
shl
hlt
cmp
xor
xor
xchg
test
mov
pop
lahf
sub
dec
push
dec
repnz
jl
inc
test
adc
movs
popf
cmps
xchg
sbb
mov
and
call
pushf
xor
or
inc
nop
adc
rcr
shl
xchg
fs
adc
mov
std
std
stos
std
jns
inc
mov
mov
lds
jl
ja
retf
dec
in
in
adc
xchg
cli
cdq
ss
mov
test
push
dec
call
popa
fisttp
fsubr
test
xchg
dec
in
push
repnz
lods
xor
stos
movs
pop
inc
fs
int
sub
push
ficom
cmp
out
mov
mov
xchg
stc
push
inc
and
jnp
cmp
lods
imul
cld
int3
inc
aas
pop
or
xchg
and
mov
jbe
push
popa
outs
adc
hlt
inc
es
call
or
push
mov
(bad)
ja
(bad)
ja
data16
into
scas
addr16
jbe
out
cdq
sbb
outs
pop
aam
inc
mov
mov
inc
mov
mov
xchg
dec
lock
in
movs
dec
or
retf
adc
ins
mov
dec
mov
test
sbb
xchg
add
sub
in
mov
pop
fstp
call
inc
adc
xlat
movntps
movs
inc
jno
mov
inc
pop
pop
inc
cmps
dec
es
in
out
and
xor
mov
pop
pop
lods
push
ds
loope
adc
bound
and
inc
mov
arpl
cli
outs
mov
mov
int
xlat
int
ins
inc
cdq
mov
fsub
jnp
xor
inc
xchg
lds
movs
es
mov
lods
adc
cmp
hlt
dec
jbe
into
ror
cld
jg
cmp
mov
add
call
stos
movs
sbb
sbb
in
mov
test
sub
ss
add
xchg
inc
add
jecxz
add
jb
fsubr
lock
test
rol
stos
jle
mov
mov
mov
xlat
(bad)
call
jge
push
sub
mov
loopne
add
adc
inc
mov
test
jp
cmp
shl
dec
xchg
into
hlt
pop
and
jecxz
std
inc
push
sbb
or
and
stc
push
cwde
js
int3
mov
mov
sbb
shl
mov
mov
clc
leave
lods
adc
and
xchg
mov
sti
pop
push
pop
dec
jecxz
sti
ss
test
mov
jg
(bad)
daa
cs
retf
loop
clc
jae
fisttp
loop
repz
pop
pop
call
(bad)
lods
xchg
ss
int
call
dec
les
xor
or
lds
push
stc
or
mov
ret
jno
fnstenv
dec
jl
and
mov
push
inc
mov
push
xchg
pop
inc
and
adc
js
xor
ins
and
cmps
pop
mov
test
push
mov
sbb
das
leave
sub
mov
xchg
lahf
cmps
pop
jge
out
out
jno
(bad)
sbb
lods
cmps
fmul
mov
mov
xchg
sub
repz
pop
mov
mov
mov
xchg
pop
mov
mov
xchg
pop
xchg
stos
mov
add
popf
inc
loop
sub
sub
dec
aas
push
cmps
stos
sub
inc
sbb
add
scas
add
cmp
cmp
or
jg
in
dec
inc
cdq
or
mov
dec
daa
jle
(bad)
fldcw
pushf
pop
push
aas
movs
inc
xchg
inc
jns
push
imul
mov
das
jnp
xchg
cdq
ror
xor
cmp
fwait
pop
mov
out
pop
sbb
push
stos
nop
icebp
xchg
lods
mov
scas
sbb
sbb
add
jl
sub
imul
popa
or
mov
xchg
push
mov
push
mov
xchg
fcom
sbb
mov
cmp
sbb
mov
jg
mov
cwde
ss
cmps
push
add
add
push
or
lods
bnd
cwde
jl
dec
push
mov
xor
jecxz
lods
repz
retf
mov
inc
pop
mov
das
je
shl
popa
or
nop
icebp
int
dec
scas
cmp
adc
neg
js
call
loope
pop
sub
cld
nop
add
push
xchg
xchg
test
jo
adc
test
int
mov
int3
xchg
ror
push
mov
aas
rcr
jns
mov
or
mov
cmp
pop
dec
mov
mov
pop
mov
mov
add
dec
pop
mov
shl
dec
into
aaa
dec
aam
lods
jbe
aam
(bad)
cwde
add
fidivr
add
cs
loop
pushf
xchg
inc
sub
popa
inc
(bad)
outs
xor
aaa
mov
lods
shl
and
xor
out
mov
call
mov
pop
mov
enter
leave
les
sbb
cmc
imul
inc
pop
rol
xor
lods
test
mov
pop
sar
imul
ret
xchg
loope
cld
pop
out
stos
fs
push
in
mov
cdq
pop
push
mov
lds
neg
iret
xlat
call
aam
cmp
and
xchg
pop
ds
push
inc
jo
repz
repz
mov
and
cmp
sub
cs
sar
fnstsw
inc
adc
mov
test
and
imul
push
sbb
scas
push
pop
adc
xor
push
mov
lock
cmp
daa
push
mov
daa
ror
or
cmp
dec
sbb
inc
sub
sbb
or
pop
popf
scas
mov
inc
sub
(bad)
call
je
pushf
popf
inc
pop
mov
xchg
in
adc
adc
add
push
fmul
bound
cs
mov
jle
fdiv
jae
aas
mov
mov
outs
mov
sahf
lock
push
shl
aas
stc
jbe
or
movs
push
loope
int3
ret
sub
pop
inc
mov
outs
sar
xchg
mov
xor
mov
fisub
or
mov
push
(bad)
dec
mov
aas
xchg
dec
fidivr
jno
push
pop
call
cmps
es
mov
xor
scas
sahf
or
xchg
xor
mov
mov
or
iret
jle
rol
sbb
inc
ins
mov
sbb
mov
sub
je
movs
aad
pushf
sub
out
jnp
(bad)
hlt
jo
es
ins
call
ror
push
sbb
inc
xchg
iret
mov
pop
test
inc
loopne
sub
cwde
sub
es
xor
push
xor
loop
movs
dec
jno
cmovo
dec
es
jo
bound
sub
push
cmc
or
ins
in
cmp
rcl
cs
arpl
dec
mov
aad
xchg
lods
loope
jecxz
cld
and
mov
dec
sti
outs
inc
test
ja
dec
cdq
ins
inc
xchg
inc
mov
cmc
mov
imul
add
in
cmps
call
jmp
push
aaa
les
pop
aad
fdiv
inc
test
int
push
pop
ss
in
add
xchg
(bad)
mov
fs
adc
mov
stos
cmovnp
(bad)
xor
(bad)
(bad)
dec
loop
mov
mov
(bad)
add
iret
js
mov
push
inc
xchg
and
movs
data16
out
inc
jns
sub
xor
inc
mov
fwait
xor
cmps
scas
cmps
fnstsw
push
leave
fisttp
iret
loopne
cld
adc
cmp
and
punpckhdq
pop
dec
mov
fs
pusha
jg
mov
xchg
mov
call
pop
cwde
sub
hlt
loopne
jp
test
ins
xor
mov
cli
sub
push
lods
retf
xor
cmps
or
inc
imul
cmc
out
mov
repz
test
cmp
adc
std
shr
lahf
iret
(bad)
mov
and
xlat
cs
imul
jmp
mov
iret
push
or
pusha
xor
jmp
test
inc
aad
cmova
(bad)
jp
or
cmps
js
sbb
push
mov
cmp
es
jg
cwde
setb
mov
adc
enter
movs
ror
and
or
jg
or
je
(bad)
ss
(bad)
xchg
and
ins
inc
push
cmp
mov
es
jmp
in
(bad)
cld
cmp
loop
loopne
dec
scas
xchg
les
lods
cmp
jne
imul
or
cld
das
sbb
push
jge
nop
shr
pop
xchg
scas
xor
lds
lods
sahf
sbb
mov
mov
xchg
xchg
jnp
call
hlt
inc
pop
sub
shr
je
pop
jbe
inc
push
call
inc
sbb
fist
jns
push
and
and
mov
xor
jmp
pushf
adc
jecxz
rcl
sti
inc
dec
stc
or
js
mov
mov
mov
arpl
jp
jmp
sub
aam
mov
aas
rcl
in
wbinvd
div
xchg
jns
les
xor
mov
loopne
popa
loopne
mov
movs
mov
add
pop
fisttp
sbb
out
sti
stc
inc
fwait
in
ficomp
xchg
cwde
scas
or
aad
cli
jae
sbb
sar
or
loopne
push
xchg
mov
ja
inc
dec
cmc
leave
je
leave
pusha
in
sbb
cli
cmp
xor
imul
cmp
inc
adc
mov
retf
inc
mov
xor
xchg
lds
jo
test
jmp
mov
sbb
stos
pop
mov
jmp
pop
add
std
mov
aas
ret
rcl
cmp
inc
mov
out
pusha
xchg
sbb
push
int
sbb
cs
xor
pop
mov
xchg
out
test
pop
sub
in
push
cmp
repnz
mov
loopne
dec
mov
(bad)
enter
mov
jmp
fistp
jmp
xchg
or
pop
ret
sub
es
fcom
scas
int
lods
(bad)
xor
repz
xchg
daa
imul
dec
xchg
push
in
movs
loope
mov
sar
dec
inc
pushw
mov
call
out
pushf
out
das
push
fsubr
rcr
scas
stc
dec
fld
jecxz
sbb
ins
adc
adc
loope
ror
mov
pop
call
pop
retf
outs
mov
jae
ret
fwait
mov
inc
inc
cmp
fs
dec
shr
in
push
dec
xchg
jae
pop
into
ret
mov
sub
cli
push
add
ficom
std
or
mov
sub
add
int
push
dec
cs
xchg
jnp
jae
fist
aad
icebp
mov
movs
cmps
adc
dec
adc
std
mov
mov
retf
mov
inc
mov
mov
sbb
outs
or
cdq
loope
ds
test
shl
jno
sub
cmp
mov
mov
aam
pop
daa
scas
inc
aas
mov
sti
pop
jno
push
sbb
xor
inc
arpl
nop
mov
xchg
cmps
or
icebp
mov
leave
dec
js
or
mov
stos
jno
mov
out
xor
xchg
inc
sub
xchg
jg
aam
jnp
push
js
push
es
inc
stc
pop
sub
call
mov
cwde
(bad)
pop
dec
mov
xchg
int
cmp
das
cmp
outs
js
jbe
test
stos
in
jae
adc
btr
mul
mov
cmp
jecxz
stos
(bad)
mov
rcl
xchg
mov
dec
out
mov
fs
add
inc
push
js
int
push
mul
adc
dec
dec
jbe
add
add
sub
sub
adc
add
neg
mov
adc
dec
mov
and
mul
ins
int
mov
mov
iret
push
(bad)
sar
xlat
lahf
pop
cdq
mov
cdq
inc
lods
pop
sahf
test
pop
fsubrp
mov
mov
dec
movbe
xor
sbb
sbb
enter
cli
mov
dec
int3
in
mov
add
scas
inc
scas
ror
clc
adc
in
sub
push
add
outs
dec
xor
sbb
jb
adc
shl
jo
mov
retf
fist
jnp
aas
xchg
or
cld
repnz
stos
cmp
xor
mov
jb
lods
inc
into
push
pop
call
sub
test
mov
jno
stos
xor
jmp
add
repnz
add
mov
or
je
in
dec
inc
mov
dec
les
jge
jb
mov
jb
lfs
imul
neg
add
popa
jg
les
xor
pop
mov
mov
mov
mov
jmp
mov
aam
xor
addr16
cmp
add
arpl
cmp
jae
sub
(bad)
adc
test
mov
pop
xor
sub
lahf
xor
adc
ja
jecxz
icebp
movs
repz
jl
(bad)
in
ds
dec
jmp
add
mov
push
enter
data16
loop
loop
(bad)
adc
push
(bad)
xor
pop
hlt
mov
enter
cmp
cmp
mov
lds
dec
dec
cmc
dec
ficomp
stos
bound
xor
aam
pusha
loopne
ret
imul
cdq
mov
xchg
mov
ins
retf
xchg
iret
push
mov
xchg
lods
cmps
(bad)
mov
add
sub
cmp
movs
jl
xchg
fdiv
sub
xlat
mul
lea
scas
sahf
pop
int
iret
rcl
(bad)
les
ret
shl
shl
xchg
and
shl
mov
dec
int
hlt
retf
mov
lods
enter
movs
icebp
cmc
xchg
jg
outs
addr16
jp
daa
stos
xor
movs
fst
and
cwde
(bad)
push
push
cmps
aas
jl
in
cs
outs
sbb
loope
sbb
or
in
adc
fistp
sbb
mov
pop
push
mov
mov
call
jbe
inc
mov
jbe
add
pop
test
inc
push
and
ja
xchg
shr
out
dec
repz
pop
mov
xchg
xor
push
jl
sub
aam
ss
inc
das
test
loope
push
ret
or
cmc
xchg
cld
rol
push
ja
and
jmp
xor
mov
pop
in
data16
pop
fcom
cmp
pcmpeqb
mov
call
push
aam
out
dec
ins
sbb
mov
xlat
jmp
jecxz
sbb
int
xor
adc
xor
or
movs
jecxz
jmp
xchg
mov
ds
ret
test
data16
fistp
pop
inc
out
lds
out
jl
pop
adc
nop
push
mov
jecxz
add
pop
add
ja
jno
sub
fistp
movs
mov
test
sbb
xchg
imul
xlat
in
sahf
jl
sti
jb
hlt
jp
push
mov
jno
dec
or
cmp
pop
fs
sbb
add
test
adc
in
hlt
fcomp
ins
sar
pop
xchg
xor
inc
fisttp
push
cmc
sub
rol
scas
lea
xor
daa
leave
xchg
mov
jg
dec
out
call
push
into
adc
cmp
or
add
adc
rcr
mov
movs
mov
add
lods
mov
xchg
aad
and
adc
int
lds
ds
xor
and
fwait
add
sahf
cdq
add
sbb
dec
retf
sub
adc
shl
mov
mov
mov
jl
push
lods
jns
add
icebp
add
test
xor
iret
scas
fstp
push
jnp
icebp
cld
or
lahf
jno
mov
mov
mov
sahf
addr16
jnp
sbb
mov
ins
shl
popa
xlat
movs
mov
call
add
dec
and
fistp
inc
pop
sbb
stos
and
sub
push
dec
fidiv
shl
retf
ret
and
push
adc
fistp
out
adc
jae
dec
ds
jp
repnz
pop
jecxz
sbb
addr16
fisub
cwde
les
shl
sahf
sbb
popa
ds
out
push
sbb
out
data16
shl
iret
daa
in
push
xor
jmp
aam
(bad)
dec
push
dec
push
pusha
les
ins
sub
in
gs
imul
dec
mov
push
out
sub
xor
jecxz
dec
mov
mov
xchg
imul
mov
mov
(bad)
adc
inc
sbb
mov
or
mov
dec
mov
ja
mov
push
mov
iret
call
(bad)
jle
cmp
jl
and
sub
push
and
stos
and
out
jl
hlt
adc
add
mov
pop
jmp
pusha
xchg
inc
fwait
je
loopne
ja
adc
xchg
cmp
data16
jnp
ja
fmul
mov
xchg
xlat
mov
jbe
(bad)
jo
jae
mov
retf
aad
fsub
cld
inc
mov
jmp
je
push
jno
add
cmps
sub
(bad)
sahf
mov
push
add
imul
xlat
and
dec
jo
cs
mov
ror
add
mov
jmp
rol
cld
in
and
sbb
or
(bad)
cmps
cmp
mov
fstp
and
jne
xor
sbb
jne
nop
jecxz
or
cld
out
js
in
push
lea
neg
(bad)
je
inc
push
and
pop
in
adc
mov
jmp
test
mov
ins
div
aad
sub
(bad)
scas
inc
sbb
sbb
dec
mov
movs
mov
cmp
inc
sbb
retf
sbb
push
in
sub
(bad)
lahf
stos
add
loop
or
clc
shr
sbb
ret
jmp
leave
cs
xlat
das
cdq
or
aam
idiv
(bad)
ja
(bad)
push
xchg
icebp
pop
add
ja
clc
mov
push
fmul
out
das
ss
inc
fwait
mov
mov
(bad)
scas
iret
sub
shr
sbb
add
repnz
inc
dec
pop
nop
ret
dec
and
inc
imul
neg
mov
xor
mov
dec
addr16
in
adc
repz
stos
sub
jge
repnz
cmp
ss
jns
push
cdq
dec
repnz
pop
lock
sti
inc
and
push
outs
loopne
mov
int
arpl
ja
inc
adc
add
pusha
es
adc
cli
xchg
sbb
cmp
je
push
pop
pop
xchg
loope
xor
iret
fistp
and
aaa
add
rcr
movs
pop
jns
cmp
nop
lods
inc
lahf
mov
out
adc
stos
pop
jae
cmps
sub
js
add
fisub
int
lods
imul
jle
xchg
ror
mov
and
rcl
ins
(bad)
aas
mov
mov
mov
scas
sub
fbstp
int3
push
xchg
fild
mov
jne
ins
xchg
adc
add
outs
mov
cmps
cli
and
arpl
lock
pop
dec
mov
add
in
inc
mov
mov
pop
adc
add
call
dec
mov
ret
aas
or
dec
sub
adc
mov
push
jge
sbb
mov
fnstcw
lds
xor
push
in
cmp
cmp
fwait
sub
pop
cmp
xchg
repz
int
push
sti
dec
mov
ins
push
shl
jno
lock
cmp
(bad)
xor
and
adc
sub
pop
jmp
popa
push
or
push
fdiv
stos
scas
fwait
(bad)
sbb
in
repnz
in
push
lahf
or
mov
jnp
push
sub
mov
scas
std
popa
jecxz
jmp
popa
jp
sahf
or
push
lahf
jl
std
push
aaa
adc
inc
in
pop
inc
mov
mov
repnz
nop
outs
fs
xor
sbb
pop
cmc
out
sub
add
jp
push
daa
and
addr16
pop
mov
xor
pop
test
fs
inc
(bad)
mov
int3
xor
jno
and
into
jae
out
outs
test
jmp
sbb
in
sub
jmp
iret
add
aaa
pop
and
dec
enter
lea
mov
sub
sub
ss
push
stos
aas
cmp
adc
pop
pop
xor
(bad)
ror
jnp
xor
and
jb
dec
pop
inc
jno
(bad)
retf
addr16
or
scas
scas
and
in
jp
loopne
jno
inc
mov
mov
(bad)
fs
js
fwait
xor
xchg
mov
pop
int3
push
inc
sub
dec
pop
out
fwait
mov
pop
cli
repnz
call
and
xchg
dec
(bad)
test
pop
dec
mov
sbb
(bad)
xchg
xchg
add
jecxz
ret
rcl
in
out
jnp
ins
sub
xor
out
jbe
mov
jge
push
dec
sbb
and
dec
xchg
clc
aaa
inc
(bad)
cmp
xor
cmps
xor
sub
popa
dec
into
pop
out
bound
dec
jg
int
push
rol
add
scas
test
mov
popf
push
aas
popa
aas
loope
pop
cmp
xor
and
adc
mov
int3
dec
jmp
aas
add
(bad)
ins
pop
pushf
(bad)
or
mov
xchg
mov
or
inc
adc
ret
imul
movs
sbb
popa
inc
mov
icebp
call
pop
test
jl
loope
adc
and
mov
pushf
and
loopne
mov
nop
mov
mov
sar
popf
or
inc
xor
int3
pop
xchg
ss
cmp
test
jge
inc
fadd
test
dec
sbb
cli
mov
mov
push
mov
fild
sbb
mov
data16
dec
fdiv
in
jge
xor
or
test
clc
push
inc
dec
mov
cwde
inc
dec
add
out
jno
stc
inc
sbb
shr
mov
gs
(bad)
cmp
in
sub
loop
sbb
pop
xchg
and
fsub
les
addr16
pushf
scas
aad
push
sub
lods
stos
sub
or
dec
cmp
cwde
movs
mov
mov
leave
test
cwde
xchg
xor
(bad)
ins
(bad)
xlat
scas
cmp
mov
pushf
push
pusha
fist
sub
pop
sbb
sub
or
xor
add
mov
imul
js
push
arpl
or
inc
cmps
mul
retf
rcr
mov
shr
js
pop
cdq
jae
bound
scas
stc
mov
push
int3
adc
lock
lods
icebp
mov
mov
sbb
lea
inc
lds
dec
call
fidivr
lgs
mov
out
adc
dec
cld
or
fwait
lods
sbb
out
ror
cmp
ds
adc
sub
test
mov
(bad)
daa
add
mov
lea
mov
pop
fld
or
push
nop
xchg
push
jge
sbb
adc
inc
gs
push
lods
xor
and
adc
dec
mov
cmp
sbb
mov
dec
scas
ror
movs
cwde
and
cmp
aaa
ss
lds
push
loope
mov
js
push
pop
add
xor
push
pushf
and
xor
inc
mov
pop
and
push
nop
or
repz
cmp
shl
into
xchg
imul
cld
shl
xchg
xchg
sbb
jbe
aam
repnz
adc
popa
lahf
cmp
mov
mov
sbb
imul
add
push
push
push
les
lods
adc
mov
popa
mov
xchg
jmp
mov
movs
inc
sub
sti
aam
popa
out
xchg
retf
and
imul
and
adc
(bad)
jmp
mov
movs
clc
mov
fs
cmps
fstp
rcr
jg
adc
popf
jae
mov
icebp
jne
das
cmp
cmp
mov
push
add
push
mov
sbb
shl
push
xchg
adc
adc
sar
add
movs
and
jns
xlat
cmp
icebp
mov
push
mov
stos
test
stos
jb
jecxz
dec
mov
pop
ins
adc
arpl
fst
xlat
cmp
push
test
jge
stos
scas
jbe
add
adc
loopne
nop
mov
and
out
fwait
mov
jge
aaa
lock
nop
push
jne
pop
jno
xchg
call
retf
sti
mov
sub
repnz
push
loopne
movs
push
jmp
mov
or
adc
fmul
sub
mov
xor
push
jg
mov
jmp
test
inc
dec
inc
jb
pop
adc
xor
out
jno
inc
(bad)
fld
mov
retf
lock
dec
rol
adc
repnz
mov
fdivr
outs
or
enter
sub
mov
xchg
ins
push
pop
jbe
dec
dec
or
dec
dec
add
(bad)
push
jno
mov
out
jecxz
(bad)
cmc
push
jl
or
or
push
cmp
mov
inc
fild
xor
mov
or
xor
xchg
fstp
push
std
adc
scas
ficom
mov
adc
dec
adc
fisub
fs
test
ss
lahf
mov
stos
inc
adc
shr
mul
push
add
addr16
iret
sub
dec
push
cmp
lods
sub
out
mov
je
ror
sub
mov
fisubr
stos
addr16
ja
or
inc
xor
xchg
repnz
dec
repnz
std
jp
cdq
sbb
cmp
sbb
and
outs
popa
enter
lods
push
dec
test
fwait
xchg
into
xchg
mov
xor
fimul
xchg
cmp
shl
jo
inc
adc
fiadd
dec
imul
cmp
lahf
xchg
dec
xlat
or
dec
data16
bound
mov
or
rcl
cmps
in
outs
shl
jl
and
repnz
(bad)
mov
and
pushf
fcmovu
ds
sub
xor
push
loop
lea
cdq
rol
xchg
mov
cdq
lods
test
pop
fs
ror
out
pop
cmp
bound
xchg
addr16
bound
inc
lods
test
xor
sbb
inc
imul
aam
iret
jns
cmc
pop
mov
jg
fld
mov
rcr
das
test
fdivr
sbb
retf
(bad)
cli
cmps
ins
push
or
add
or
sahf
mov
repnz
cld
aaa
stc
xchg
imul
push
lds
cmp
xchg
xchg
loopne
call
cmps
mov
push
push
sub
mov
adc
add
inc
in
jne
push
jae
loope
rol
jns
call
inc
lea
mov
loope
dec
pop
clc
xor
(bad)
adc
and
scas
inc
arpl
es
imul
add
loopne
(bad)
sbb
push
pop
mul
mov
repz
pop
sub
sub
les
pop
adc
jge
add
xor
(bad)
jb
xchg
gs
out
add
es
js
mov
sub
adc
jmp
mov
sub
std
xor
mov
cdq
lods
or
mov
mov
cmp
ret
push
sti
into
das
and
xlat
sbb
xlat
push
daa
in
jae
cs
(bad)
xor
and
repnz
aad
push
xchg
out
mov
aad
loope
hlt
mov
inc
inc
(bad)
jl
lahf
dec
push
movs
pop
pop
mov
loopne
scas
hlt
push
xchg
les
(bad)
jns
lea
fidiv
pushw
repz
push
adc
aas
lods
push
pop
sub
jmp
fcom
dec
xchg
aaa
cli
out
pop
icebp
mov
adc
jmp
mov
jbe
push
and
pusha
sub
fdivr
jp
mov
mov
movs
push
xchg
outs
cmps
cmp
jg
jecxz
popa
inc
inc
push
ss
xchg
test
xchg
cdq
fadd
adc
xchg
les
mov
inc
sbb
sti
cmps
adc
sub
adc
mov
push
inc
scas
push
cmp
out
or
fxch
out
out
daa
xchg
pop
dec
inc
mov
jge
loop
mov
fnstsw
loopne
xor
jle
jg
and
inc
dec
into
xor
pop
aam
mov
xchg
sub
out
je
push
adc
mov
in
mov
pop
push
xor
ret
fsub
inc
ss
in
xchg
mov
mov
inc
fwait
rcl
jb
mov
bound
movs
lahf
sbb
add
pop
inc
cmp
pop
xchg
imul
xchg
call
xor
in
pop
movs
mov
jle
sbb
fist
fdivr
cmp
fwait
inc
jb
(bad)
sti
shl
jo
ret
cmp
in
xor
aam
pop
push
mov
and
or
mov
and
adc
sub
fcom
packssdw
stos
outs
dec
aad
jg
jg
(bad)
or
mov
mov
in
(bad)
cld
dec
pop
shr
mov
pushf
jmp
jmp
push
(bad)
mov
repnz
popa
ins
adc
(bad)
in
inc
push
sub
sbb
shr
fnstsw
and
es
jmp
inc
jnp
popf
nop
jae
mov
jae
mov
ret
dec
sar
cs
sbb
outs
push
shl
arpl
pop
and
outs
xor
add
mov
das
aad
xor
(bad)
xlat
out
xchg
mov
jae
xchg
xchg
lods
sbb
dec
xchg
xor
sbb
inc
lock
loopne
test
mov
pop
inc
les
inc
xor
push
lods
icebp
pop
ins
ret
addr16
clc
repnz
or
jg
ds
test
jno
les
stc
dec
or
jb
mov
fsubr
ins
inc
mov
push
bound
add
loopne
push
inc
pop
shr
mov
daa
int3
sbb
and
adc
jae
push
jns
cli
jmp
add
fisubr
test
retf
(bad)
pop
jle
lock
mov
cmps
jb
mov
dec
in
popf
mov
mov
dec
mov
push
nop
shr
push
and
lds
sti
push
and
test
fisub
or
lea
out
pop
int3
xor
jl
neg
adc
xor
scas
jle
ret
cmp
xchg
jecxz
cmp
push
mov
int
pushf
xchg
dec
pop
stos
xchg
in
add
(bad)
ja
pop
outs
mov
or
fs
int3
imul
push
adc
imul
lods
in
sahf
inc
lahf
cmc
call
lods
and
pushf
adc
icebp
sub
mov
xchg
or
sar
xchg
(bad)
fild
xchg
jbe
fwait
adc
adc
or
jg
adc
stc
push
xchg
mov
inc
rcl
ins
mov
mov
sub
cwde
xor
xchg
sbb
mov
sahf
clc
(bad)
(bad)
mov
rol
xchg
daa
and
aas
dec
push
daa
jnp
or
add
fs
mov
mov
in
adc
dec
mov
or
leave
imul
sbb
xchg
fadd
enter
dec
mov
cs
rcr
std
repz
jno
call
sti
and
mov
(bad)
cmps
sbb
mov
mov
pop
pop
or
add
test
out
je
call
repnz
push
aaa
hlt
cmp
dec
mov
in
stos
pop
ret
lea
pop
sbb
cmps
pop
xor
or
daa
xchg
push
lock
in
cmp
das
pop
and
call
mov
pop
mov
xchg
call
int3
(bad)
dec
jl
stos
rol
or
jo
jge
in
push
xchg
sub
xchg
mov
push
cmps
repnz
or
pop
sti
(bad)
push
test
cmp
imul
shr
jb
push
fdivr
out
cs
daa
xchg
es
js
pushf
mov
and
(bad)
xor
mov
fwait
mov
sub
repnz
and
cmp
int
mov
xor
pop
test
mov
xor
(bad)
gs
imul
(bad)
jmp
aaa
ja
std
pop
dec
mov
nop
out
stc
movs
push
xor
jecxz
add
push
xchg
pusha
movq
adc
mov
mov
adc
sti
mov
outs
stos
adc
inc
mov
mov
clc
pop
and
pop
dec
mov
add
fdiv
int
pop
lods
fadd
daa
bnd
adc
hlt
dec
push
inc
out
mov
or
out
sbb
sub
stc
push
or
repnz
inc
jbe
adc
mov
aaa
movs
pop
sub
add
or
add
test
fisubr
dec
cmp
pop
inc
cmps
mov
adc
aas
or
ret
out
lea
cmp
jae
inc
std
leave
jg
jne
xlat
pushf
mov
cs
test
add
xchg
fs
jb
nop
cmp
mov
ret
loope
stos
je
test
sbb
je
pop
push
icebp
or
aaa
in
or
and
(bad)
dec
push
adc
push
scas
gs
addr16
loopne
hlt
mov
repz
shl
xlat
mov
fcomp
aam
xor
and
mov
jae
cmps
aam
into
jbe
mov
aas
cmp
in
sbb
sbb
jge
out
xchg
mov
push
mov
sub
mov
and
mov
ds
scas
iret
je
call
lods
and
cli
test
mov
mov
push
mov
xor
jp
fisub
(bad)
movs
outs
push
cwde
sahf
pop
add
jle
pushf
cmp
jl
in
ins
pop
xchg
add
stos
mov
and
lods
cmps
and
fdivr
jo
xlat
mov
jae
ins
mov
into
ja
dec
cli
dec
jle
and
loope
in
inc
int
cwde
std
ror
adc
cmps
cld
les
movs
jle
leave
xor
jecxz
pop
push
call
inc
mov
ins
cmp
adc
out
and
jmp
loop
or
fidivr
mov
call
sahf
jno
fdiv
fnsave
repz
aas
popf
ror
mov
and
daa
sbb
inc
test
inc
cmp
xchg
dec
cs
jmp
push
ja
aaa
pop
mov
jecxz
(bad)
cld
xchg
shr
iret
data16
ins
nop
sbb
add
fwait
push
cmp
add
loopne
or
pop
push
repnz
movs
mov
adc
fmul
mov
mov
bound
sbb
mov
push
jnp
ja
aas
xchg
mov
xchg
xchg
jle
out
outs
hlt
(bad)
stos
or
sahf
das
xchg
jmp
int3
je
(bad)
xor
hlt
retf
popf
jo
mov
popa
xchg
sub
and
into
mov
(bad)
out
cmc
mov
sbb
fcomp
in
sbb
xlat
test
pushf
movs
dec
mov
cmp
imul
sub
add
es
push
adc
jb
aaa
mov
jp
mov
aam
jb
mov
lods
xchg
mov
adc
cmp
or
jg
cmp
inc
je
adc
adc
retf
bound
popf
adc
ja
cmp
pop
sub
mov
mov
and
adc
ror
cdq
jp
std
xchg
add
lock
(bad)
ror
test
shr
imul
lahf
cmp
inc
jno
fbstp
adc
retf
or
mov
xchg
sub
inc
pop
sbb
push
mov
nop
rcr
mov
mov
sbb
jne
mov
das
xor
lods
xchg
and
jge
scas
sti
or
test
(bad)
mul
and
ret
ja
adc
fmulp
fwait
dec
movs
mov
ficomp
call
xlat
mov
jl
(bad)
sbb
jle
xchg
or
and
push
push
(bad)
jnp
vpmacsdqh
push
repz
push
mov
mov
mov
jg
lods
jmp
mov
mov
loope
or
sbb
cmps
ds
mov
push
sub
icebp
call
sti
cmp
imul
in
inc
inc
push
(bad)
lahf
hlt
sub
loopne
mov
xor
add
out
mov
popf
jge
jne
xor
push
iret
outs
retf
cmps
pop
cmp
mov
inc
xor
hlt
stc
fbstp
sub
cmp
(bad)
dec
movs
lahf
aam
mov
fiadd
(bad)
pop
mov
or
and
fld
out
(bad)
loope
popa
repnz
imul
fistp
jbe
inc
iret
push
pop
leave
inc
loopne
add
push
cmps
retf
or
repz
je
ja
shl
pushf
mov
and
mov
xor
sbb
xor
sub
ins
xor
aas
call
push
stos
pop
je
push
xor
into
ret
pop
inc
mov
lds
mov
adc
sbb
(bad)
iret
dec
jg
loop
pusha
mov
popa
imul
mov
sbb
pop
out
mov
into
pop
push
lods
stos
fs
std
jle
or
xchg
pop
enter
(bad)
mov
cmp
int3
mov
sbb
sub
in
fisttp
pop
jae
sbb
xor
xor
ret
lahf
sbb
xor
cwde
dec
xchg
int3
cmps
cmp
xor
ss
mov
mov
jmp
or
xchg
ss
adc
mov
sub
stos
lea
sbb
jnp
or
push
pusha
dec
icebp
jns
rcr
mov
das
cmp
pop
int
sbb
add
pop
loop
pop
cmp
mov
arpl
leave
sbb
daa
adc
out
adc
stos
sar
cdq
lock
xchg
ins
xchg
pop
adc
mov
test
aam
push
dec
lahf
or
cli
ret
mov
leave
jg
jno
cs
cmp
in
mov
add
mov
push
pop
and
sub
test
dec
adc
int3
jmp
popf
jl
mov
addr16
jno
aad
pushf
ja
xlat
lock
shr
add
adc
icebp
test
enter
pushf
mov
jl
xchg
movs
add
xchg
shl
jmp
into
pop
jae
push
movs
xchg
stos
cmp
and
imul
mov
add
lahf
shr
data16
clc
pop
aam
outs
das
inc
cwde
nop
rcl
es
jge
pop
pop
xor
and
mov
mov
mov
in
test
pop
repnz
ror
(bad)
lods
xchg
ins
pop
divps
mov
mov
sbb
xchg
movs
add
popa
mov
ret
inc
scas
pop
jno
(bad)
fdivr
iret
imul
sbb
out
sahf
test
xchg
imul
ins
push
pop
(bad)
leave
out
dec
or
push
xchg
mov
sub
pop
dec
xlat
leave
cdq
and
out
mov
cmps
push
xlat
or
sar
push
les
inc
lds
test
(bad)
jno
pop
dec
repnz
mov
adc
dec
hlt
jns
sub
jmp
adc
or
test
push
sub
fistp
out
retf
add
loope
jno
(bad)
jmp
fdivr
daa
or
and
mov
add
mov
or
xor
sub
js
xchg
and
inc
lahf
scas
and
loopne
shl
and
cmp
out
cmp
dec
cli
lock
ds
xor
inc
or
cmps
dec
fs
call
and
jge
mov
loope
jecxz
xor
cmp
bound
shr
cdq
jae
push
fnstenv
in
inc
xor
cs
mov
pop
sub
pop
aas
int3
(bad)
cdq
inc
retf
or
daa
out
dec
ja
jmp
jb
pop
mov
test
mov
fucomip
pusha
mov
clc
dec
std
mov
sub
xchg
stos
in
sub
cmps
(bad)
repz
add
push
jns
or
push
out
mov
adc
fist
addr16
jae
jg
(bad)
dec
jne
retf
movs
xor
mov
pop
cmp
jp
rol
jns
cdq
mov
movs
add
pusha
cmps
mov
jns
mov
daa
retf
cmp
pop
adc
ins
fiadd
fwait
ins
retf
aam
xchg
mov
lahf
push
mov
test
sbb
popf
inc
push
cmps
lods
mov
mov
and
daa
adc
inc
repz
pop
sub
cmp
ficomp
mov
add
or
cmps
test
and
dec
push
cmp
mov
popf
sbb
jmp
xor
fwait
mov
jge
pop
addr16
aas
nop
(bad)
shl
aas
aas
and
and
mov
nop
mov
ret
push
arpl
push
jle
and
pop
in
ins
jmp
pop
ins
loopne
std
(bad)
scas
xchg
mov
pop
cli
imul
sbb
xchg
pop
outs
jle
inc
in
dec
sbb
mov
(bad)
imul
xor
jns
push
add
mov
(bad)
pop
ret
movs
outs
fcomi
xlat
out
cmp
leave
adc
adc
xor
test
adc
push
or
jl
sub
lahf
ret
fdiv
sbb
xor
add
sbb
sub
(bad)
and
cmc
std
movs
push
xchg
call
das
cmc
mov
pop
das
mov
jecxz
not
sub
fistp
cmps
imul
sbb
pushf
mov
jae
xchg
add
cmp
push
repz
inc
clc
rol
xlat
test
imul
cli
fwait
jg
inc
and
cmp
jb
arpl
inc
sbb
mov
inc
shl
jno
cwde
cdq
fiadd
pop
push
fs
cmps
test
jmp
sti
pop
mov
push
loop
xchg
data16
xchg
jl
int
ret
lods
dec
mov
mov
push
and
clc
pop
mov
mov
mov
leave
div
ret
clc
sbb
je
cdq
push
mov
jecxz
pop
lods
mov
and
nop
pop
out
popf
mov
ds
fld
loope
out
fsub
fstp
ror
lods
mov
ret
pop
es
popa
popf
cmp
fcompp
pop
pop
sti
out
mov
lea
sub
inc
enter
pop
xor
aam
fistp
or
shr
ficom
ror
dec
cs
jge
and
and
retf
stos
add
es
mov
shl
(bad)
ins
dec
mov
add
int3
ror
xchg
popa
mov
int
int
cmc
jo
dec
jmp
pop
mov
repz
adc
ret
push
mov
hlt
mov
jns
mov
aam
or
fwait
and
add
xor
mov
lods
ds
mov
dec
pop
leave
inc
mov
push
cmp
mov
stos
mov
xor
pop
fist
mov
or
adc
test
mov
fwait
sub
pop
pmaxub
mov
or
adc
mov
popa
fst
adc
dec
jmp
stc
daa
retf
xchg
mov
xchg
and
jbe
sbb
int
jle
ins
xchg
stos
jo
stos
ds
mov
shl
jns
jl
sbb
ins
push
dec
push
dec
in
cmps
adc
(bad)
xor
xchg
inc
aaa
mov
stos
or
jecxz
outs
dec
mov
xchg
je
push
cmps
bound
(bad)
jo
pop
in
jno
(bad)
repz
mov
inc
xchg
fimul
aad
jmp
rcl
jmp
retf
xor
mov
enter
cmp
call
sar
pop
sbb
aad
loope
pop
adc
movs
xchg
lds
and
int
add
cli
sar
and
or
das
out
popf
dec
push
pop
cmp
pop
push
inc
lahf
aas
cdq
les
xchg
lea
mov
mov
cwde
mov
aad
cld
shr
dec
cmp
cmp
sar
ret
ret
ja
dec
cld
inc
inc
stc
call
mov
push
add
neg
mov
pop
sub
loop
frstor
xchg
pop
jg
das
sti
in
mov
ret
inc
jmp
jp
fwait
push
(bad)
(bad)
sub
imul
mov
ja
ficomp
iret
pop
out
adc
mov
push
push
mov
mov
push
lahf
jns
(bad)
push
popa
xchg
push
lds
xchg
inc
out
jl
xchg
and
dec
pop
and
pop
fimul
xor
sbb
jo
iret
arpl
dec
enter
das
stc
jo
mov
inc
repnz
jnp
push
imul
fst
jmp
ret
jl
lar
jbe
cmp
mov
jne
or
mov
inc
icebp
clc
adc
fwait
outs
dec
stos
xchg
sbb
mov
loopne
push
cwde
js
vorps
retf
cmp
stos
dec
shl
jecxz
jnp
(bad)
push
gs
adc
mov
outs
ret
stos
push
outs
repz
mov
pop
rcr
sbb
sub
xchg
rcl
loope
cmp
dec
and
pop
dec
std
and
mov
mov
push
sbb
pop
mov
jae
pop
xchg
fld
cmc
mov
push
jl
dec
add
and
fwait
mov
push
cmp
add
rcl
aaa
inc
pop
xchg
stos
stos
xchg
xor
test
loope
mov
or
jp
xor
hlt
push
stos
mov
outs
sahf
mov
dec
loope
add
add
xor
das
push
mov
dec
push
leave
push
or
int3
pop
dec
pop
stos
mov
add
mov
cmp
daa
push
(bad)
or
lods
mov
sbb
arpl
jns
push
sbb
in
mov
pop
ss
xchg
repz
jl
and
out
pop
pop
and
out
mov
cs
dec
push
fs
in
sbb
cmp
adc
mov
xchg
dec
and
adc
pop
cmps
das
push
das
mov
lods
mov
mov
add
pushf
(bad)
mov
gs
jp
cmp
les
fsubr
and
sub
mov
into
inc
inc
adc
push
xor
xor
stc
(bad)
jo
mov
lea
fistp
inc
popf
dec
cmp
mov
mov
test
enter
int
mov
add
mov
test
ror
test
inc
nop
pop
rcl
cmp
ins
push
(bad)
or
add
xchg
mov
or
ja
imul
pop
movups
mov
xchg
add
jp
je
mov
jge
sub
cwde
mov
popa
outs
mov
test
vpsubb
inc
inc
cmp
fs
popf
arpl
cmc
cmp
sub
retf
clc
je
dec
(bad)
lock
xchg
xchg
jge
sbb
mov
push
or
ret
sti
out
fstp
(bad)
into
in
jne
xchg
in
sub
lods
xchg
and
jecxz
cld
mov
cmp
jg
xchg
aaa
inc
lock
mov
jle
mov
adc
iret
and
jbe
in
imul
pop
imul
fsubr
add
inc
(bad)
cmovo
adc
fcom
loop
imul
inc
dec
mov
mov
mov
(bad)
ret
loope
jb
xor
mov
imul
dec
scas
aaa
lods
mov
mov
mov
dec
bound
pusha
xchg
mov
stc
cwde
mov
push
loope
in
stc
in
out
jb
push
clc
int3
add
(bad)
pop
mov
repnz
jns
dec
rcl
mov
or
sar
push
rcr
inc
repnz
dec
fucomp
mov
xor
call
jnp
adc
push
xchg
mov
mov
lock
mov
dec
xchg
lea
adc
push
inc
rcr
aaa
popa
das
fidivr
aaa
pop
imul
pop
push
inc
add
jb
inc
sbb
xor
fild
sub
loop
adc
inc
push
jg
je
popa
mov
mov
int
scas
clc
mov
mov
adc
div
mov
repnz
jno
dec
leave
add
(bad)
xlat
mov
rol
add
pop
and
ja
popf
adc
jnp
hlt
aaa
xor
stos
inc
jp
fwait
fwait
xchg
call
and
mov
xor
mov
ins
pop
(bad)
(bad)
xchg
(bad)
imul
jmp
leave
jge
lods
dec
xchg
jle
es
test
add
mov
jmp
sbb
ficomp
push
and
paddb
clc
jmp
push
aam
push
mov
dec
cdq
cs
ror
dec
fdivrp
daa
pop
xchg
push
xor
fsubr
pop
aad
add
xor
dec
pop
int
add
pushf
or
dec
jb
adc
sbb
add
sar
xor
push
inc
mov
and
fmul
xchg
inc
jmp
hlt
test
add
imul
mov
or
mov
out
jle
push
and
(bad)
retf
jg
fwait
bound
mov
push
(bad)
fs
adc
and
je
mov
aad
out
adc
add
scas
sub
inc
pop
je
dec
push
and
sbb
mov
test
pushf
mov
add
cmp
dec
movs
lods
movs
lock
or
sbb
or
cwde
fwait
sub
dec
lock
pop
rol
fild
mov
leave
les
ret
dec
or
or
sar
rcl
leave
or
mov
mov
pop
add
and
push
adc
pop
sbb
aad
push
sti
mov
icebp
pop
dec
jb
adc
je
cmp
repnz
xchg
daa
sbb
(bad)
xor
cld
imul
fcom
push
out
add
and
add
cli
dec
sub
inc
fstp
xor
aas
mov
push
loope
cld
cld
inc
lea
push
pop
cmp
add
call
pop
mov
int3
pop
pop
test
lods
inc
out
jnp
jp
sub
idiv
ds
adc
outs
repnz
imul
mov
sub
sti
jns
pop
cdq
(bad)
add
mov
inc
or
fistp
and
neg
loope
sub
pusha
popf
sbb
fcom
xchg
push
cs
dec
and
xor
fstp
or
retf
add
adc
enter
inc
mov
in
ins
or
xchg
es
(bad)
test
mov
sti
mov
je
inc
sub
push
add
sbb
mov
inc
push
or
adc
test
mov
sar
out
pop
push
cmps
add
stc
push
xchg
hlt
add
repz
jns
inc
mov
jle
mov
ror
in
iret
jmp
push
jmp
jmp
sub
in
xor
(bad)
or
cmps
loop
lods
std
ins
(bad)
(bad)
ds
pop
add
mov
push
test
mov
stc
pop
outs
mov
cmp
mov
rol
and
sub
clc
mov
inc
mov
outs
ds
aaa
dec
xchg
test
or
out
out
inc
cs
dec
mov
or
inc
pop
pop
jmp
cmp
or
inc
dec
mov
xor
fmulp
cmp
cli
stos
sbb
mov
xchg
retf
inc
mov
test
mov
mov
jecxz
and
add
fmul
xor
retf
lahf
stc
pop
(bad)
lahf
dec
cmps
add
enter
jle
mov
shr
pop
adc
sbb
ins
xor
imul
sbb
loopne
jl
cdq
pop
pop
fwait
jne
inc
lock
mov
mov
not
cdq
pop
aaa
cs
(bad)
stc
ret
dec
pop
jo
mov
retf
xchg
push
mov
adc
xchg
in
cs
lds
dec
jae
jb
mov
repnz
sub
inc
add
test
jnp
push
jo
mov
add
mov
(bad)
stos
iret
inc
xor
dec
and
hlt
mov
arpl
cs
data16
popf
sbb
add
cmp
add
pop
xchg
fimul
dec
ins
out
ret
push
mov
inc
daa
adc
repnz
sbb
xor
mov
cmc
(bad)
sbb
or
push
mov
imul
sbb
ret
ja
into
cli
cmps
lahf
ret
(bad)
stos
popf
pusha
shl
push
loop
lock
fild
xor
jp
test
mov
int3
push
std
mov
aaa
mov
ds
xchg
jl
jmp
add
loope
mov
pop
mov
ins
jle
mov
hlt
mov
pop
fadd
bound
push
sub
mov
(bad)
cmps
sbb
mov
lea
pushf
adc
ja
fadd
cmc
jle
lahf
sbb
iret
jle
test
ja
dec
push
movs
xlat
cmp
(bad)
lds
loopne
test
mov
sub
icebp
xchg
clc
cmp
inc
ss
cmps
outs
push
cli
xchg
dec
inc
adc
lahf
mov
sti
sub
push
scas
fwait
or
aam
add
call
inc
in
int3
add
pop
sub
jno
inc
mov
outs
pop
aaa
mov
xor
retf
icebp
cmp
cmp
xor
add
adc
xor
sub
test
std
sub
js
mov
out
fld
std
sbb
or
jo
fs
out
or
aam
fucomip
jb
inc
sub
pop
(bad)
adc
out
xor
push
jns
pop
dec
mov
mov
and
mov
pavgb
out
pop
imul
mov
and
es
or
sahf
imul
std
cld
jb
popf
mov
push
pop
pop
ret
cmovns
jo
xor
movq
xor
(bad)
enter
(bad)
mov
int
fnstsw
enter
das
dec
in
sub
xchg
iret
dec
or
cmp
fisub
xchg
dec
shr
jo
loope
jns
cs
loop
test
in
clc
mov
shl
lods
inc
mov
mov
mov
in
int3
loop
call
pop
inc
or
push
sti
imul
lock
sub
arpl
enter
push
test
xchg
jno
cmp
xor
push
mov
add
and
pop
aad
mov
repnz
inc
fsubr
ins
ss
cdq
xchg
in
arpl
sbb
inc
cmp
cs
inc
clc
int3
xor
mov
push
jmp
and
sbb
mov
xchg
stos
leave
xor
cmps
push
adc
and
mov
mov
nop
(bad)
pop
dec
(bad)
inc
leave
mov
les
add
outs
sar
not
mov
sub
pop
adc
repnz
addr16
mov
inc
cmp
cmc
mov
xor
test
bound
cmp
das
pop
fsub
sub
push
int3
sub
seta
inc
outs
nop
push
mov
pop
mov
xor
clc
fst
sahf
xor
pop
not
cwde
adc
ss
xor
into
(bad)
retf
xchg
js
addr16
mov
cld
mov
scas
jmp
mov
cmps
clc
mov
out
mov
push
inc
push
retf
pop
mov
xchg
sar
fcmovbe
pop
push
div
push
(bad)
movs
inc
jp
xor
mov
scas
sbb
sbb
div
rcl
sub
imul
inc
and
push
jge
xor
adc
inc
es
je
and
jl
dec
popf
mov
add
out
(bad)
in
popf
fidivr
mov
ficomp
into
xchg
xlat
nop
and
mov
push
in
pusha
sahf
pop
retf
inc
cmp
bound
out
cmp
stc
or
(bad)
push
int
pop
pusha
rcr
lods
(bad)
jge
mov
cmp
mov
push
mov
icebp
mov
or
mov
jno
xchg
xchg
shl
mov
mov
sub
jb
mov
jnp
adc
xchg
lods
jge
dec
jmp
imul
jle
inc
push
je
movs
adc
shl
xor
jl
mov
pop
mov
aam
bound
(bad)
push
dec
dec
call
out
xor
push
int
inc
and
sbb
fcomp
ins
xor
out
mov
test
int3
(bad)
sbb
cmp
lods
movs
scas
add
sub
push
inc
jmp
push
inc
mov
add
outs
push
retf
sbb
dec
pop
inc
xchg
cmp
mov
pop
popa
hlt
and
in
push
jecxz
jbe
xchg
pop
nop
push
out
mov
fdivp
ret
sub
dec
stc
push
or
add
push
pop
push
inc
in
push
rcl
push
jnp
jge
(bad)
loopne
jo
in
xchg
iret
adc
mov
rol
mov
pop
push
test
fmul
out
add
loopne
xor
mov
mov
xchg
pop
outs
jmp
xchg
cmovge
mov
shr
mov
test
rol
int
push
and
jne
xor
test
stos
(bad)
mov
pop
inc
ss
in
pop
mov
sub
bound
push
sbb
arpl
xchg
adc
or
add
out
and
cmp
xchg
aaa
dec
mov
xchg
jle
mov
jnp
or
dec
test
pop
rol
mov
mov
push
sub
push
mov
out
int
aam
mov
jo
sub
aas
addr16
pop
ja
inc
lods
out
stc
das
ins
clc
repz
es
mov
lea
or
iret
inc
in
(bad)
sti
jo
div
into
mov
stc
xchg
add
mov
add
xchg
outs
sbb
xor
sti
mov
fisttp
popa
fs
sahf
push
stc
cmp
dec
arpl
cld
mov
adc
mov
hlt
inc
pop
jmp
in
bound
(bad)
xor
call
jns
dec
cmp
jp
adc
mov
std
or
adc
and
fisub
dec
mov
(bad)
mov
add
lock
push
fiadd
in
inc
cmp
js
dec
stos
lds
dec
aas
pusha
or
(bad)
ds
xchg
fmul
jecxz
pop
push
xor
repnz
and
push
mov
mov
xlat
mov
xchg
call
sbb
pop
and
pop
mov
adc
fucomp
or
pop
xchg
jae
push
sbb
in
cmp
inc
fidiv
aaa
adc
movs
ja
jmp
jg
data16
les
dec
cmp
inc
mov
mov
and
les
and
push
into
sbb
mov
aas
pop
test
repz
repnz
mov
sub
inc
(bad)
jb
leave
imul
mov
bound
mov
dec
(bad)
cmp
inc
es
inc
xchg
icebp
sbb
loopne
sub
jnp
fst
sub
or
push
fild
inc
push
xchg
mov
stos
mov
sub
xchg
in
xor
cmp
sbb
shr
dec
dec
mov
mov
or
xlat
pop
mov
add
dec
mov
sub
xchg
dec
rol
ss
loop
das
lahf
mov
xchg
out
test
push
inc
sbb
and
imul
push
loope
and
jg
div
push
jno
retw
mov
cmp
dec
dec
ja
pushf
fst
adc
clc
mov
sub
fcomip
fdivr
xor
mov
pop
rcr
mov
sbb
out
mov
sub
mov
jb
add
mov
push
pop
ds
rcr
es
mov
sbb
and
adc
xor
sbb
int3
aad
stc
popf
xor
jne
popa
bound
imul
push
pop
xchg
int
out
and
inc
popf
iret
jl
hlt
push
cmps
(bad)
xor
xchg
ja
and
js
push
and
clc
push
pop
and
data16
add
mov
ss
xor
fist
hlt
mov
mov
mov
pop
cmp
aam
mov
in
stos
push
add
ins
mov
inc
jmp
pop
test
retf
jp
sbb
push
popa
lds
sbb
out
pop
ja
push
sbb
aas
push
mov
or
cs
mov
les
push
mov
inc
xlat
mov
push
das
add
mov
add
adc
jp
mov
jge
inc
push
fsubr
mov
daa
or
out
jmp
es
adc
or
sub
mov
xor
loope
rcl
xchg
inc
jge
xchg
push
femms
js
xchg
mov
mov
xor
mov
mov
call
dec
ins
lahf
cdq
mov
pop
ins
imul
mov
(bad)
jmp
dec
rep
add
xor
adc
out
dec
cmp
xlat
add
(bad)
fwait
std
cmp
cmp
in
cmp
sub
xlat
inc
inc
adc
xor
(bad)
mov
sub
cmps
xlat
mov
cmp
sub
or
adc
shl
movaps
xchg
repz
xor
dec
sti
mov
std
jb
(bad)
int3
jno
(bad)
and
dec
pop
mov
inc
or
and
mov
push
mov
sub
jbe
xor
jmp
xor
xlat
imul
mov
inc
sub
imul
sbb
cdq
inc
imul
dec
fcom
push
dec
loopne
sbb
shl
adc
add
out
or
pop
jge
pop
sbb
cmp
fdivr
pop
pop
sub
inc
retf
cwde
xor
(bad)
fsubrp
xor
mov
mov
fsubr
or
and
ins
mov
lods
rcl
mov
push
add
cli
into
int
cli
sar
daa
mov
xor
mov
mov
aas
and
mov
aad
je
mov
adc
lods
jne
sub
rol
jae
jns
xchg
jne
add
sub
popa
lock
je
xchg
out
ss
sub
ret
lods
lea
fbstp
mov
das
sub
scas
repnz
cmp
(bad)
xor
cmp
and
push
mov
push
jnp
push
push
push
mov
sub
pop
pop
add
mov
rcl
mov
mov
jmp
cmp
mov
les
dec
shl
mov
rol
xchg
stc
adc
or
sub
dec
neg
ins
jle
loope
or
repz
rcr
sub
adc
cmp
iret
mov
shl
sub
or
fwait
(bad)
xchg
cmp
adc
mov
pop
hlt
ret
cs
retf
xchg
push
jae
addr16
mov
push
pop
push
cmp
mov
jnp
leave
inc
das
pop
imul
call
test
mov
(bad)
ss
icebp
xor
jns
stos
out
js
lock
fistp
jnp
push
and
and
cmp
adc
ins
pusha
pop
sub
cmp
mov
pop
dec
aaa
or
fstp
mov
xor
dec
inc
scas
xchg
and
or
sbb
push
idiv
mov
adc
cmc
aam
outs
pop
jmp
push
push
inc
mov
pop
fcomi
cmc
xchg
dec
jmp
stos
or
xchg
pop
sti
mov
repz
or
ret
test
sbb
xchg
and
rol
ja
lods
adc
cmp
pop
push
jb
shl
pop
mov
push
hlt
test
(bad)
jnp
dec
mov
int3
adc
jne
dec
xor
ret
sbb
dec
xchg
jmp
aaa
xchg
pop
dec
jnp
mov
pushw
test
dec
and
push
fdivr
adc
mov
mov
cmp
scas
inc
mov
stos
scas
aaa
mov
mov
popa
jb
popf
ja
je
xchg
jge
int3
hlt
in
stos
sub
add
pop
jmp
jp
daa
push
lss
fist
sbb
adc
(bad)
std
add
mov
inc
sbb
dec
call
dec
ds
dec
or
adc
rcl
stc
les
sub
jns
call
sub
cdq
stc
and
jmp
dec
jo
adc
add
mov
stos
push
add
adc
add
dec
jge
sahf
movs
call
shr
jo
addr16
mov
xchg
sbb
and
mov
je
add
adc
xchg
sub
push
pop
pop
scas
fnstsw
sub
push
out
iret
retf
iret
jo
sub
cwde
cmc
jge
ins
in
mov
adc
jp
mov
mov
mov
jg
stos
mov
repnz
sbb
dec
outs
scas
adc
shl
cmp
imul
pop
xchg
sbb
lea
pop
and
or
sar
mov
inc
fistp
data16
and
add
jnp
lods
popa
cld
cmp
loop
(bad)
jns
xchg
xchg
pop
ds
push
add
ja
fwait
stc
push
ss
(bad)
mov
fstp
push
int3
popf
jl
cmps
push
adc
sub
mov
into
mov
xor
sub
outs
popa
dec
aad
jmp
sti
jmp
inc
lds
jecxz
inc
xchg
js
hlt
mov
adc
mov
cs
dec
popa
push
loop
xchg
sub
std
push
fsubr
or
loopne
push
in
inc
sub
mov
std
mov
iret
inc
das
mov
sub
scas
push
jecxz
mov
xchg
lods
jl
cld
sub
xor
fadd
shr
iret
ds
jno
aad
adc
mov
je
jp
mov
repnz
into
dec
call
(bad)
pop
mov
push
dec
push
cld
aam
lea
mov
mov
(bad)
mov
outs
jo
ret
cld
ret
cmps
rol
emms
inc
fadd
movs
scas
cmps
pop
and
fwait
sub
ja
mov
mov
xchg
popa
dec
mov
movs
jb
or
sti
adc
jmp
retf
shr
data16
cmp
mov
ins
sbb
push
and
fcomp
pop
sbb
push
jge
add
sub
cmp
sbb
jbe
add
popf
lds
test
out
es
xchg
sub
dec
inc
sub
arpl
in
inc
push
xchg
and
push
ds
jne
push
pusha
call
or
push
cli
popa
jmp
cmp
(bad)
mov
aam
mov
mov
stc
cmp
ja
pop
push
outs
mov
into
sbb
or
data16
sar
dec
or
(bad)
mov
jb
dec
mov
push
fsubr
xchg
(bad)
jmp
push
lods
rol
cmp
mov
add
out
scas
xchg
mov
and
cs
repz
jecxz
popa
ja
xor
jne
xchg
nop
inc
mov
iret
fst
xlat
mov
mov
xor
aad
pop
sub
add
js
dec
push
sub
cmp
test
cdq
jle
dec
xor
mov
pushf
mov
xchg
fidivr
mov
xchg
pop
pushw
mov
aas
addr16
(bad)
or
mov
and
pushf
sub
mov
sub
neg
test
mov
jp
inc
sub
xchg
push
leave
cmp
sub
stc
adc
js
shl
sbb
call
movs
push
xor
pop
stos
retf
push
mov
ds
mov
jb
jo
or
fmul
mov
push
sbb
mov
inc
inc
jb
aam
mov
xor
xchg
dec
jbe
pop
js
sbb
mov
aaa
clc
hlt
into
push
cmp
les
dec
dec
mov
jmp
pop
arpl
mov
popf
inc
dec
(bad)
out
mov
cmps
push
push
sbb
add
sbb
in
sub
pop
(bad)
cmp
movq
cs
outs
in
cld
xor
cwde
xor
inc
stos
cmp
push
mov
mov
lahf
cmp
idiv
stos
pop
cmp
lock
nop
ins
call
xor
push
mov
std
pop
jo
fistp
outs
pop
hlt
sub
cs
add
pusha
mov
fidivr
pop
dec
cmp
dec
dec
mov
push
cs
jecxz
pop
pop
mov
adc
arpl
inc
dec
or
cld
sbb
fdivr
outs
dec
lea
loopne
and
xor
jmp
inc
std
mov
cmp
sbb
fwait
adc
test
mov
jecxz
aaa
xor
int3
dec
sti
sub
mov
push
mov
add
mov
sbb
inc
or
mov
sub
pop
inc
aas
push
jle
leave
ins
sbb
xor
mov
aas
retf
pop
sti
scas
lahf
add
mov
in
sub
pushf
outs
jmp
jne
lods
inc
mov
enter
call
jb
mov
mov
add
jmp
inc
add
jne
mov
mov
or
sar
je
sti
dec
pop
(bad)
out
jns
xchg
sbb
pushf
mov
pop
and
pop
das
stc
std
arpl
mov
or
stc
out
shl
and
loopne
in
adc
sub
push
dec
es
jmp
rcl
adc
push
lods
ins
fidivr
xchg
ret
leave
and
jl
jne
or
fadd
sub
jns
ret
dec
leave
pop
stc
shl
in
and
aam
repnz
xchg
mov
sub
popf
out
mov
sbb
daa
dec
call
mov
test
push
mov
repnz
dec
add
stos
jl
in
call
dec
mov
test
jle
fnsave
nop
cmps
push
fmul
fdivr
fsubr
gs
retf
popf
mov
scas
ins
aam
and
std
mov
add
jmp
lock
bsr
cmc
and
retf
cmps
mov
inc
mov
pop
shl
mov
jg
mov
out
fnsave
jmp
out
mov
stos
sti
inc
mov
repnz
inc
out
sub
and
pop
mov
(bad)
maxps
lock
rcl
fsub
in
scas
inc
or
jne
add
push
add
jnp
ret
scas
cwde
mov
push
in
popf
enter
xchg
inc
sub
mov
fbld
xlat
mov
or
sbb
adc
jns
inc
mov
pop
push
push
mov
imul
cdq
jae
jae
sub
stos
cmp
pop
clc
popa
or
les
jmp
dec
xor
sbb
mov
pusha
es
or
xchg
in
int
mov
lahf
aas
cmps
fnstenv
jle
push
test
sub
push
push
into
out
iret
pop
xchg
cli
jl
sub
add
adc
(bad)
movs
ret
jne
cmps
dec
mov
les
dec
jbe
pusha
jmp
sbb
mov
inc
ret
push
adc
shr
mov
dec
retf
pop
add
sub
out
les
sbb
sbb
dec
ins
sbb
cmp
mov
mov
dec
push
xchg
ja
(bad)
cld
test
fimul
xor
xchg
add
pop
sub
popa
ret
sbb
mov
(bad)
mov
call
and
push
ja
and
mov
scas
jp
pusha
mov
or
(bad)
add
push
dec
push
stos
mov
jb
not
aaa
lea
in
sti
dec
mov
scas
adc
inc
pop
enter
xlat
cmc
xchg
scas
nop
cmp
ror
inc
pusha
int3
pusha
cmp
lods
fst
rcr
pop
test
dec
push
pop
mov
adc
dec
(bad)
gs
js
je
fsub
sub
mov
clc
movs
aas
adc
cmp
pusha
and
out
aad
mov
test
fs
jmp
push
pop
mul
jge
out
or
movs
xchg
and
repz
shr
cmp
loop
inc
lea
div
xor
imul
and
jne
mov
mov
and
and
jno
jl
call
inc
ss
(bad)
jge
cmp
adc
ins
pop
sti
enter
fwait
into
xchg
push
imul
xchg
fst
pop
dec
fisub
dec
mov
mov
ss
sbb
in
dec
loopne
push
pop
jbe
mov
mov
jmp
jg
aaa
scas
jge
mov
call
jno
adc
ss
cmps
dec
push
(bad)
sub
xchg
mov
test
xor
lods
inc
jno
xor
movs
lods
mov
test
das
mov
add
xchg
retf
aad
or
mov
cmps
outs
xchg
jle
out
lock
das
add
push
mov
push
adc
mov
sub
and
jo
js
push
cmp
and
not
je
xor
or
repnz
cmps
outs
fsubr
mov
call
imul
aam
mov
(bad)
jg
inc
sbb
sbb
std
mov
sbb
and
mov
fwait
inc
cmp
jns
les
push
or
add
mov
retf
gs
out
mov
(bad)
in
loopne
xor
retf
adc
dec
jl
(bad)
push
cmp
scas
jae
jns
xor
add
xor
loop
cmp
sbb
daa
and
pop
in
lock
ficom
inc
inc
adc
lahf
fs
jno
cdq
mov
std
frndint
cmp
imul
mov
jmp
outs
or
stc
dec
aam
shr
popa
push
xchg
lahf
fsub
pop
sub
jns
add
aaa
shr
div
inc
aas
test
and
scas
xchg
dec
cmps
into
add
icebp
mov
fstp
cli
jge
js
mov
fist
cdq
adc
lahf
sub
dec
loop
jle
cld
push
mul
lods
pop
mov
inc
push
test
inc
dec
adc
sti
clc
sub
add
mov
add
mov
sbb
push
sub
das
sub
fcomp
pop
cmc
add
cmovne
add
ror
pushf
or
imul
stos
inc
xor
int
cmc
mov
and
dec
inc
ret
mov
inc
xchg
sbb
repz
mov
mov
and
dec
out
int3
pop
imul
dec
icebp
push
shl
pop
add
push
adc
stos
cmps
call
jne
test
dec
pop
lock
lock
sti
adc
inc
stos
nop
jns
fistp
or
fstp
fnstsw
xor
sub
inc
loope
stos
mov
nop
mov
stos
add
jmp
sbb
cmps
cmc
jno
fs
jmp
cmp
sbb
fadd
jg
sahf
xor
mov
mov
std
sti
leave
lods
mov
test
push
mov
dec
test
pop
les
sar
cmp
adc
xchg
movs
icebp
addr16
push
movs
or
lea
and
cmp
popa
add
idiv
jmp
inc
je
jle
mov
push
and
adc
add
loop
add
mov
call
(bad)
loope
mov
not
stos
inc
fstp
cmps
inc
aaa
les
mov
enter
cmps
add
or
(bad)
ja
sub
push
fdivr
add
stos
pop
xchg
dec
and
jle
xchg
dec
(bad)
idiv
xchg
and
ja
test
(bad)
enter
mov
pop
add
retf
xchg
push
jle
shr
cmp
fistp
xchg
adc
and
and
lahf
aad
dec
cmc
sbb
push
in
mov
out
mov
loopne
hlt
retf
adc
push
mov
loopne
inc
shl
(bad)
out
fcom
pop
pushf
daa
sbb
xchg
xor
ins
push
xor
pop
fcomp
xchg
cmps
and
scas
sub
fcmovne
fst
(bad)
clc
neg
cld
pop
stos
inc
in
jb
mov
sub
sub
lods
mov
aad
ror
push
scas
imul
push
and
pop
cs
sbb
adc
dec
mov
stc
sbb
repnz
cdq
dec
repnz
jno
jno
clc
sbb
mov
cs
add
rcr
out
lahf
(bad)
jo
push
int
out
ins
(bad)
push
or
scas
aaa
repz
imul
inc
inc
repz
mov
js
sbb
aad
xor
or
pop
or
cmc
mov
fwait
inc
mov
mov
aaa
mov
movs
div
mov
dec
ja
iret
xchg
jl
xor
inc
or
test
sahf
sub
js
lds
jne
out
mov
rcl
cs
(bad)
push
aaa
popa
sahf
jnp
xchg
or
jb
aam
lods
sbb
dec
pop
fwait
dec
rcr
mov
adc
fs
and
std
loope
mov
mov
stos
(bad)
mov
ins
and
mov
xchg
aam
loope
xor
mov
fisub
lock
test
lods
cmps
xchg
pop
sub
sub
add
fimul
jbe
push
mov
dec
mov
imul
cmp
jb
and
xchg
dec
in
fbld
shl
inc
and
cmp
cmps
not
fcom
dec
jge
das
xor
add
pop
cmp
adc
shl
ss
cmp
test
push
mov
sbb
daa
cmc
push
clc
xchg
push
ins
setns
jnp
and
sub
or
sbb
sahf
out
adc
mov
test
dec
push
lock
jle
sti
push
mov
in
sbb
rcl
ror
not
mov
adc
xor
lahf
fdiv
mov
push
and
nop
out
(bad)
sbb
out
push
cld
data16
xchg
popf
and
pop
das
jmp
dec
cmp
pushf
cmp
(bad)
jge
dec
dec
and
in
cmps
mov
repz
mov
test
xchg
xor
call
test
xchg
imul
mov
sub
inc
inc
mov
mov
ds
and
test
pop
xchg
dec
jbe
pop
inc
in
in
push
out
int
stc
adc
mov
test
ss
pop
jmp
std
sub
mul
repz
fs
xor
or
cmp
mov
adc
sub
jne
pop
iret
stc
cmc
loop
adc
int3
xor
cmp
sti
icebp
jecxz
cs
fwait
mov
jb
xor
das
clc
cmp
ret
mov
jmp
test
outs
out
sub
dec
movs
mov
mov
clc
fld
fcom
xor
sbb
mov
sbb
cmc
dec
or
mov
out
sbb
scas
loop
popa
jge
fiadd
push
sar
outs
pop
mov
xchg
sbb
loop
jno
dec
mov
lahf
out
mov
in
and
mov
test
out
fnstenv
ds
dec
mov
mov
add
pop
and
pop
inc
add
adc
dec
cmp
imul
mov
ret
jns
out
adc
ret
jmp
out
xor
imul
scas
cwde
mov
test
rcr
inc
push
xchg
or
fwait
and
in
jne
dec
fcmovnb
jp
lea
cmps
shl
xchg
sar
(bad)
loope
loop
nop
fidiv
inc
mov
stc
inc
jp
jmp
xor
adc
cmp
cli
movzx
mov
dec
cmp
mov
test
jne
mov
jmp
leave
jns
jl
mov
jecxz
cli
push
into
leave
and
iret
jg
sub
dec
call
xchg
in
daa
call
dec
push
or
std
shl
stc
sbb
add
jmp
dec
add
push
push
jb
addr16
push
cdq
inc
xchg
arpl
mov
jno
push
xchg
addr16
or
je
retf
mov
cmp
(bad)
scas
pop
mov
mov
push
imul
movs
jp
loop
(bad)
adc
inc
in
push
scas
mov
or
mov
lods
ins
stc
inc
cmps
cmp
repnz
xor
jne
mov
mov
stos
cmps
jae
rol
xchg
test
inc
sbb
cmp
fiadd
mov
call
dec
inc
inc
lea
shl
lea
jp
mov
lods
push
aas
dec
push
pop
lahf
jmp
adc
int3
xchg
mov
fiadd
aaa
lods
pop
aam
xor
mov
and
pusha
or
or
jmp
ss
xor
or
aaa
pop
adc
pushf
ror
mov
mov
imul
test
ins
ins
jns
lock
dec
pushf
jl
shr
pop
repz
lahf
xchg
mov
in
out
ret
fstp
xor
pop
ja
cmp
lahf
adc
adc
es
cmp
sub
lea
adc
leave
sub
aas
adc
xchg
ins
mov
or
pop
inc
ds
bound
inc
fidivr
bound
in
cmps
cs
sub
in
(bad)
mov
xlat
mov
adc
mov
xor
pop
xor
enter
ins
xor
movd
clc
xor
ror
jg
cmp
or
cld
push
imul
xchg
in
test
int3
mov
fnstcw
add
daa
sbb
(bad)
fdiv
dec
xchg
cmp
gs
or
mov
add
sti
sahf
and
lahf
or
dec
push
pop
hlt
gs
and
mov
dec
pop
sub
and
jp
cmp
cmp
fsubr
dec
(bad)
cmp
das
inc
mov
xor
jl
mov
or
shl
sub
test
pop
adc
(bad)
xchg
xor
enter
or
sar
enter
(bad)
push
retf
ror
mov
scas
add
and
mov
int3
adc
mov
ficom
pushf
inc
test
mov
sar
movs
es
test
fidivr
xchg
cli
hlt
mov
adc
mov
xor
adc
inc
adc
push
stc
out
outs
jns
out
push
data16
xchg
js
hlt
pop
push
shr
std
arpl
pop
mov
lea
adc
push
xchg
out
mov
nop
into
xchg
jmp
pop
jmp
xor
push
mov
add
pop
aad
and
hlt
mov
daa
sahf
jmp
pop
sub
push
fcmovnbe
fistp
test
dec
popf
mov
lods
mov
das
in
mov
pop
(bad)
jl
pop
retf
sbb
and
int
jmp
sbb
fs
push
or
push
sbb
dec
add
inc
sbb
je
jmp
push
mov
adc
cdq
mov
adc
shl
retf
cmp
pop
arpl
mov
ficomp
jnp
movs
fidivr
rcr
lock
fistp
xchg
shl
gs
dec
sti
leave
jg
fnsave
push
sbb
jae
jmp
int3
outs
cmp
sbb
repz
inc
sbb
sbb
add
and
enter
lods
sub
js
or
jbe
pop
inc
push
xlat
pop
cwde
div
add
(bad)
jmp
xor
outs
dec
retf
mov
(bad)
jmp
lods
or
enter
sub
or
xchg
addr16
push
dec
lea
push
mov
or
mov
jle
sub
mov
push
pop
xlat
(bad)
std
xor
jb
shl
shl
jbe
mov
sti
mov
rcr
xor
push
mov
push
mov
pop
or
outs
pop
fs
inc
ret
ins
data16
xchg
test
leave
mov
test
xchg
push
ins
xchg
rcl
ror
(bad)
adc
pop
sbb
pusha
lock
jl
xor
inc
mov
pop
cmp
inc
test
gs
dec
cmp
(bad)
sub
push
inc
cs
mov
or
jne
or
pop
mov
in
sub
lock
mov
icebp
xor
popf
pop
mov
jp
fistp
les
jecxz
dec
aam
pop
adc
push
movhlps
mov
mov
lods
jecxz
test
sbb
es
xchg
xor
daa
lea
loopne
pop
aas
xchg
mov
retf
in
cmps
loop
jns
push
jge
mov
pop
push
jge
pusha
imul
sbb
adc
inc
int3
cdq
pusha
lea
outs
dec
mov
xor
mov
dec
les
xchg
ins
cmp
inc
hlt
daa
and
xor
movs
in
sbb
aam
and
fld
push
(bad)
cmp
mov
rcr
xchg
mov
push
rol
test
stc
test
mov
cmps
xor
adc
call
adc
(bad)
sub
dec
loope
sub
sbb
daa
fwait
imul
lds
dec
xchg
adc
mov
cmp
and
xor
pop
lea
(bad)
shl
push
push
xor
mov
rcr
das
and
cs
lahf
sub
daa
mov
add
dec
push
mov
xchg
outs
and
repnz
lock
and
leave
ja
fld
adc
mov
pushf
xchg
and
mov
data16
xchg
mov
adc
lock
arpl
out
mov
dec
dec
adc
lods
and
faddp
fldenv
sbb
add
test
dec
sub
pop
jecxz
cdq
jp
into
iret
in
(bad)
sub
stos
add
push
shl
sbb
into
clc
mov
cmp
push
outs
cmp
fst
test
sbb
mov
outs
popa
sub
movs
stos
ja
cmp
jno
sub
mov
inc
cdq
add
pop
mov
hlt
push
rol
rcr
pop
and
movs
(bad)
cld
or
repz
add
xchg
push
and
mov
fisttp
retf
data16
stos
lock
cmc
outs
cmp
fistp
mov
cwde
call
cmp
push
test
div
push
sbb
cmc
adc
test
push
test
je
call
pop
(bad)
sub
addr16
inc
pop
cmp
cmp
in
jne
nop
dec
mov
pusha
dec
retf
mov
and
popf
xchg
std
fnsave
out
push
shr
push
push
pop
pop
mov
jns
es
stc
sub
and
inc
push
test
xchg
cld
stos
in
jp
test
mov
fwait
cli
leave
stc
pop
dec
ss
aaa
movs
mov
or
(bad)
xor
jp
les
nop
popf
and
nop
int
(bad)
out
mov
sbb
fcmovb
ds
and
pop
ret
xor
sub
mov
push
pop
or
nop
ss
mov
push
push
dec
stc
fistp
mov
jo
aas
xchg
xor
cmc
in
inc
in
dec
jbe
bound
inc
hlt
mov
cmp
xor
cmps
push
ret
jmp
leave
or
ja
nop
outs
push
lods
inc
popf
in
pop
iret
xchg
mov
mov
pop
ins
jmp
xor
adc
add
je
stos
and
movs
clc
aad
mov
xor
lods
mov
push
pop
mov
sbb
inc
push
lea
loop
into
dec
xchg
cmps
cmp
nop
xchg
fisubr
xchg
jmp
loop
idiv
jb
pop
shl
cmp
dec
push
sar
(bad)
cmp
and
retf
xchg
js
call
mov
test
test
fnsave
repz
sar
hlt
js
nop
(bad)
and
scas
sub
cmps
pop
mov
cmps
jge
int
cmp
mov
mov
or
adc
loopne
js
jp
es
sar
mov
cmp
jg
lods
mov
jmp
std
sbb
jmp
movs
imul
jmp
cmp
mov
mov
ja
stos
fcom
xor
test
add
push
mov
adc
push
ror
fisub
and
and
mov
in
sbb
lods
jno
sti
xchg
int
dec
xor
sub
in
xor
aam
(bad)
outs
mov
sbb
pusha
outs
fisubr
push
in
xor
mov
daa
sbb
daa
mov
aam
lock
lods
mov
mov
nop
inc
leave
inc
jecxz
mov
icebp
out
dec
loopne
retf
shr
dec
inc
fdivr
les
and
and
and
cmc
test
inc
stc
sub
inc
out
arpl
loop
call
test
jae
in
movntps
pusha
les
cmps
into
out
iret
loopne
mov
shr
call
in
sub
cmps
sub
cmps
pop
jo
out
xchg
dec
or
movs
mov
mov
mov
adc
xor
fmul
daa
scas
arpl
aad
in
push
shl
fld
ret
or
sbb
mov
jg
sbb
imul
inc
fwait
into
xor
jmp
jp
enter
imul
aaa
cmp
xor
cmp
sbb
(bad)
mov
adc
sub
sub
ret
xor
add
sub
stos
adc
movs
invd
in
(bad)
mov
popf
out
pop
dec
out
xor
(bad)
sar
push
in
pop
call
loopne
fadd
sar
or
xor
std
xchg
push
sbb
mov
iret
jecxz
ins
into
mov
pop
rcr
xor
dec
or
mov
aaa
mov
(bad)
out
jmp
lods
movq
and
loopne
mov
loop
xchg
cwde
jnp
xchg
cmp
xlat
aam
adc
addr16
retf
mov
sahf
xor
xor
jmp
xor
mov
call
out
push
sar
inc
ins
retf
scas
mov
or
popa
jge
jmp
pop
repnz
pusha
loop
inc
paddsw
ret
lea
cmp
in
and
popf
mov
bound
sbb
or
cmp
out
jp
ss
mul
add
aaa
mov
dec
ficom
enter
dec
jnp
mov
gs
ret
loope
in
stos
jl
sbb
shr
xor
jle
and
movs
bound
mov
adc
jo
mov
pop
sub
mov
jmp
retf
lods
inc
mov
dec
(bad)
cmp
push
dec
repnz
jns
jae
pop
mov
pop
jecxz
jb
cmp
mov
jge
mov
fcom
and
sub
push
add
dec
cld
add
and
mov
ret
or
fs
cdq
cmp
dec
popa
jb
aad
iret
or
into
pushf
pop
cmp
fistp
pop
ret
add
test
cmp
pop
bound
mov
or
mov
(bad)
lds
and
aad
add
cmps
sahf
popa
(bad)
fwait
sub
test
xchg
and
mov
mov
and
dec
inc
adc
add
inc
mov
fnstenv
mov
(bad)
(bad)
(bad)
ss
add
loopne
add
rcl
(bad)
cwde
jb
into
pusha
fdivr
mov
or
push
mov
mov
pop
rcr
lock
add
mov
xchg
out
mov
and
out
ret
enter
mov
daa
loopne
push
push
mov
clc
xchg
cmp
pop
cmp
bound
dec
xor
adc
std
or
add
push
and
jb
adc
sti
xchg
and
and
adc
adc
cld
hlt
push
cmp
loope
add
sbb
xchg
mov
jnp
push
xchg
adc
xor
in
jb
or
fmul
call
sub
dec
scas
in
mov
dec
cmps
sbb
cld
pusha
mov
movs
push
call
mov
sbb
pop
sub
in
hlt
jmp
adc
mov
add
push
cdq
push
add
ins
jns
ss
test
push
jae
sbb
inc
movs
in
stos
sahf
pop
pop
es
sbb
(bad)
aaa
retf
sbb
out
(bad)
fisubr
lods
adc
fisttp
jmp
ss
xchg
push
and
sbb
mov
sub
adc
mov
fimul
dec
push
or
xor
push
add
and
jg
fnstcw
shr
mul
push
ins
inc
jl
(bad)
mov
sbb
cmp
daa
mov
lock
fsub
sub
neg
pop
sub
fdivr
or
les
dec
or
pop
mov
add
dec
pop
mov
mov
jnp
ret
push
ss
(bad)
div
add
jno
mov
retf
ins
or
push
lahf
or
push
fisubr
aaa
xor
test
int
xchg
pusha
inc
cmp
jb
mov
mov
mov
push
ffreep
sub
inc
into
push
cs
mul
scas
add
(bad)
cmp
or
mov
pop
ja
neg
iret
push
stos
cld
gs
cmp
push
in
out
dec
cwde
cmps
sub
mov
push
mov
popa
xor
scas
fidivr
repnz
sub
and
sub
sti
test
pop
addr16
fst
mov
push
into
int
stos
(bad)
lds
enter
xor
cmps
fistp
inc
push
and
loope
sub
inc
repz
sub
pop
mov
sub
mov
sbb
rcr
adc
xor
dec
xchg
sbb
dec
aas
add
and
mov
cmp
dec
and
add
cwde
fwait
mov
mov
inc
lock
sub
std
pop
jecxz
pop
rdtsc
lds
sti
fwait
or
fadd
sahf
or
aaa
fwait
clc
add
call
aaa
push
(bad)
mov
inc
test
test
rcl
mov
pop
dec
(bad)
xor
pop
pop
std
and
xchg
xchg
pop
fist
ja
jns
xlat
outs
cmp
daa
jmp
jg
fwait
push
in
(bad)
xlat
inc
sub
xchg
dec
fisubr
sbb
ins
inc
test
jbe
(bad)
adc
mov
jecxz
ins
fwait
cmp
inc
cmps
fidivr
mov
jbe
frstor
xor
jmp
call
add
dec
bound
xchg
pushf
dec
inc
clc
push
iret
gs
imul
mov
jmp
dec
xchg
mov
jns
(bad)
stos
jbe
jns
cli
jne
inc
loopne
fwait
cld
and
fstp
pop
fdiv
mov
inc
bound
jno
xor
mov
std
cld
sub
stos
fild
imul
xchg
jl
retf
mov
push
dec
add
loope
and
stc
xor
sbb
dec
lods
ret
rcr
out
xor
lahf
sbb
fcmovnb
mov
lock
enter
pop
stc
xchg
ret
mov
push
and
lods
mov
pop
mov
inc
jne
pop
sti
cmps
gs
dec
dec
or
jo
fiadd
(bad)
and
dec
bound
mov
cmc
push
jae
inc
dec
push
cmps
test
and
cmc
out
ja
in
pop
sar
fdivr
mov
dec
mov
js
shl
outs
push
jl
mov
lahf
mov
and
jle
pop
inc
jno
and
push
cmp
cmps
xchg
sbb
sub
or
popa
mov
(bad)
cmp
in
fwait
lods
dec
adc
jg
and
cli
or
jmp
mov
nop
hlt
mov
daa
xor
call
xor
jge
mov
xor
jmp
xor
wrmsr
pop
out
or
inc
fidivr
lods
retf
xor
xchg
cmps
inc
fmul
or
out
push
add
stc
pop
dec
push
lods
clc
adc
mov
xchg
mov
scas
add
addr16
loop
cmp
test
rol
outs
ins
dec
imul
push
sbb
add
call
fstp
sbb
mov
pop
iret
test
inc
mov
or
xor
add
xchg
push
pusha
js
and
dec
or
psllw
inc
mov
and
shl
xchg
aad
pand
sbb
jmp
idiv
mov
cmc
mov
lahf
cmp
mov
cwde
in
mov
mov
jnp
or
pop
mov
outs
in
call
push
fdiv
dec
call
fisttp
cdq
and
fcmovbe
leave
hlt
ret
pushf
jne
movs
scas
xor
mov
in
push
fwait
cmps
leave
in
jmp
cmp
xchg
enter
ror
sar
pop
je
wrmsr
push
push
sub
mov
jmp
mov
lock
jnp
xchg
adc
lds
fdiv
mov
cmp
jmp
test
push
rol
psrad
aad
(bad)
jl
cmps
imul
popa
inc
lods
and
lods
lds
int
inc
into
mov
dec
sub
add
fcomp
mov
arpl
hlt
in
sub
fld
push
scas
mov
jg
int
fiadd
cld
arpl
mov
and
jo
es
push
fsubr
xchg
(bad)
es
jae
fisubr
out
jl
sub
or
fidiv
int3
mov
jne
repz
es
fwait
adc
into
rcr
retf
mov
in
xor
in
mov
iret
cld
std
lds
jbe
sub
and
sub
pop
mov
push
loopne
into
xlat
dec
cmp
push
(bad)
add
xor
pushf
pop
push
fnsave
inc
arpl
push
xor
add
sti
pusha
popf
add
pop
mov
pop
and
pushf
xchg
xor
call
mov
ret
push
sar
ins
xor
ret
push
push
ret
imul
sub
(bad)
push
pop
call
mov
call
sub
mov
and
xor
retf
xlat
inc
mov
into
fcomp
les
or
inc
push
adc
jp
pop
add
push
fisttp
dec
mov
sbb
dec
mov
bound
fwait
sbb
pop
cs
xor
aad
retf
push
mov
loope
or
inc
push
imul
dec
jae
aas
int3
jnp
sub
leave
das
sub
dec
int
jge
bound
(bad)
imul
fbld
xor
xchg
xlat
push
ss
pop
fwait
sub
jg
stos
shl
and
sbb
retf
jl
addr16
xor
pop
mov
inc
dec
mov
ins
in
pop
pop
retf
pop
addr16
pushf
mov
loop
sub
xchg
sbb
sub
fiadd
out
mov
jbe
les
add
test
xchg
cmp
popf
mov
retf
aaa
imul
adc
clc
out
push
fstp
cli
mov
cmp
push
mov
cld
or
repz
jle
mov
jecxz
in
imul
xchg
add
iret
mov
(bad)
push
test
std
jnp
cmc
dec
inc
jecxz
mul
in
sbb
inc
jle
pop
addr16
inc
mov
ret
cld
fs
or
push
fs
div
xchg
ret
or
popf
sbb
in
jns
movs
sbb
cmp
cmp
bound
jge
add
outs
inc
int3
movs
dec
pusha
out
xchg
jl
stc
mov
sub
ret
pushf
fisttp
dec
inc
or
mov
test
cmp
xor
js
adc
scas
repz
lahf
loop
sbb
cwde
pop
xchg
inc
jl
test
jo
lahf
xor
push
push
ins
pop
push
fcom
stc
(bad)
nop
pop
push
adc
inc
adc
mov
jns
push
mov
(bad)
pop
out
jnp
pop
(bad)
jae
push
and
repnz
pop
xchg
mov
pop
in
mov
sub
lahf
ret
pop
inc
sbb
ds
xor
adc
push
jnp
xor
enter
mov
mov
and
pusha
cdq
adc
jae
xor
jae
push
lahf
in
jo
push
call
dec
std
or
jnp
mov
inc
stos
les
dec
lds
sub
sar
or
mov
loop
jae
sahf
sub
and
iret
in
test
cmps
dec
in
and
(bad)
nop
mov
fcomip
cmp
ins
icebp
lods
jmp
imul
or
outs
popf
inc
lds
shl
push
push
push
dec
inc
jp
retf
jns
inc
out
or
sub
push
cmp
test
cmps
sbb
ins
pop
int
or
adc
(bad)
popf
pop
or
mov
shr
movs
inc
movs
push
icebp
mov
scas
mov
loopne
loop
adc
daa
dec
cs
push
nop
cmp
xor
cdq
sahf
adc
inc
xchg
dec
xchg
push
movs
push
daa
outs
das
cli
dec
mov
(bad)
push
shr
jmp
(bad)
pop
push
jo
pop
push
mov
inc
lock
dec
inc
stos
mov
ins
dec
sub
xchg
mov
dec
or
jbe
jmp
jnp
mov
sbb
and
nop
stos
loop
push
inc
popf
or
fild
push
repz
js
mov
push
dec
push
dec
fiadd
adc
fs
std
loop
outs
xchg
das
sub
jmp
dec
pop
push
inc
or
popf
xchg
lock
mov
mov
adc
jae
rol
mov
push
jne
sbb
add
pop
pushf
cmp
push
ds
sbb
addr16
adc
mov
ds
std
pop
push
mov
adc
push
pop
int
mov
icebp
fucom
inc
and
or
popf
pop
daa
or
mov
repz
stos
pop
dec
xchg
xchg
adc
loopne
iret
adc
cmp
xchg
cmp
xchg
loop
jmp
ret
jp
test
cs
in
cmp
pop
push
retf
mov
movs
lods
scas
pop
sbb
and
addr16
loope
into
nop
in
cwde
lock
cmps
out
cmp
repnz
mov
dec
inc
adc
lahf
out
sub
jmp
push
lods
inc
mov
loope
dec
jo
cwde
mov
loope
enter
cwde
ins
dec
(bad)
sub
stos
mov
ins
cmp
push
sbb
jne
pop
cld
xchg
test
mov
sub
push
jbe
xlat
xor
test
or
xor
in
push
stos
sbb
ins
mov
(bad)
sub
cmps
call
adc
jmp
xlat
dec
sub
add
mov
push
out
sahf
outs
push
inc
cmp
jl
and
inc
add
jmp
cmp
test
es
fbld
lods
pusha
jne
push
call
out
repnz
(bad)
adc
xor
sub
xchg
jae
icebp
jne
adc
lea
(bad)
fist
ins
mov
pop
pop
cmp
inc
leave
fbstp
dec
mov
cmp
and
sbb
jp
jne
adc
dec
xor
xor
pop
push
ds
scas
push
jmp
or
xchg
cmp
xchg
mov
imul
cld
adc
xchg
mov
retf
es
cli
retf
ins
ja
mov
mov
mov
adc
xor
das
sbb
sbb
scas
and
repz
mov
out
dec
sar
jle
pop
inc
mov
call
popa
addr16
inc
inc
(bad)
xor
sbb
mov
add
or
or
ror
xchg
(bad)
cmc
cmp
mov
je
cld
cmc
(bad)
loope
pop
(bad)
rcl
ret
mov
add
mov
lock
push
pop
and
mov
cdq
jae
int3
(bad)
cli
jnp
pop
ret
shl
xchg
or
cmp
jl
stc
ds
data16
xor
cwde
add
ins
adc
sahf
cli
jo
mov
outs
push
mov
pop
test
call
mov
(bad)
mov
jnp
pop
jb
pop
mov
xchg
xchg
arpl
mov
ds
shr
les
fmul
xchg
hlt
pop
jmp
and
jmp
mov
inc
fidivr
mov
gs
pop
cli
mov
push
mov
retf
aaa
rol
add
push
cs
cmp
dec
adc
sbb
cmp
add
out
test
mov
push
hlt
mov
and
fs
xchg
out
push
add
pop
loop
pop
xchg
ror
arpl
(bad)
jo
fiadd
(bad)
(bad)
jmp
(bad)
mov
outs
mov
mov
cli
sbb
push
int3
sti
dec
xor
mov
jnp
mov
nop
mov
rcr
push
out
ja
cwde
add
jb
sub
add
call
ss
xor
test
pop
push
pushf
push
mov
mov
scas
stos
mov
and
pop
and
and
pop
mov
or
cmps
sub
add
jne
mov
jecxz
xchg
ds
cmp
fxch
ret
or
call
push
frstor
out
aad
loope
jge
dec
sbb
shl
jmp
fistp
push
or
push
cmps
sbb
mov
or
movs
out
xor
add
or
(bad)
icebp
movs
jle
nop
mov
cld
mov
sbb
iret
jl
addr16
es
icebp
add
push
jecxz
les
mov
xor
ins
outs
mov
call
adc
(bad)
popa
sub
cmp
leave
fnstcw
out
cld
aad
sbb
and
xor
xlat
fadd
sbb
adc
or
lods
outs
sbb
repnz
pop
loop
xchg
push
scas
js
imul
ja
das
jmp
retf
mul
dec
aad
xor
ja
enter
xchg
xor
pop
mov
imul
xchg
(bad)
push
loop
sbb
jne
or
std
rol
sbb
jmp
inc
mov
jmp
or
ret
test
(bad)
out
xchg
(bad)
mov
repnz
cld
pop
stos
cmps
dec
ds
adc
in
pop
xchg
mov
out
mov
arpl
out
mov
push
leave
add
mov
push
cmc
inc
repnz
and
or
sub
dec
movs
fld
xor
clc
jmp
popa
xor
sub
fisttp
int
and
or
sub
fiadd
aad
cdq
sbb
dec
lds
inc
rol
scas
inc
mov
jns
call
sbb
in
adc
mov
scas
mov
pop
add
aad
push
in
test
cmp
pushf
push
lds
push
nop
mov
mov
pop
pop
mov
jle
dec
mov
fucomi
rcl
jbe
(bad)
aam
pop
dec
sub
or
call
in
inc
jmp
ss
cmp
out
popf
enter
push
xor
idiv
out
nop
jmp
sbb
sahf
(bad)
call
jl
xor
jmp
push
pushf
cmp
dec
pop
dec
movs
mov
scas
mov
pop
mov
movs
adc
loope
dec
pop
or
test
rol
jecxz
inc
sub
xor
loop
popf
mov
loopne
pop
orps
push
loope
adc
aad
(bad)
clc
mov
fistp
jne
mov
(bad)
imul
test
mov
std
fldcw
arpl
pop
push
and
std
sbb
jmp
xchg
ins
js
sub
lods
out
inc
and
cmps
jg
sub
ror
retf
cs
jl
shr
test
and
sahf
pop
out
and
adc
inc
push
mov
xchg
out
sub
fimul
ja
test
stc
std
ret
cmp
not
push
repnz
inc
dec
mov
mov
mov
pop
jge
ret
xor
sbb
popf
sbb
xor
std
movs
out
lock
jnp
(bad)
pop
call
mov
or
lock
fwait
xchg
lock
inc
fidivr
inc
sub
add
lea
mov
sub
adc
sub
sub
int3
pop
fist
les
push
retf
bound
pop
jo
pop
pop
aam
inc
rcl
cld
out
push
and
out
mov
jmp
iret
out
(bad)
hlt
dec
int
out
xchg
mov
lock
adc
inc
jmp
lahf
retf
mov
lds
imul
dec
add
loopne
les
scas
mov
xchg
xor
aaa
icebp
not
leave
aam
jge
(bad)
mov
jbe
inc
xor
push
leave
xor
inc
out
and
mov
push
sahf
or
(bad)
sbb
movs
or
pop
cmps
mov
dec
mov
test
popf
(bad)
jne
pop
jno
xor
dec
xor
jno
jbe
mov
jmp
lock
inc
sahf
stos
xchg
loopne
pop
cmp
xor
pop
cmc
nop
push
push
cs
(bad)
(bad)
out
out
mov
scas
inc
mov
jecxz
xor
mov
add
pop
enter
pop
shr
pop
mov
loope
inc
dec
pushf
mov
mov
mov
inc
stos
dec
pop
dec
xor
out
pushf
xor
jmp
ja
scas
bound
add
ins
movs
dec
push
pop
popf
int
inc
push
add
es
test
dec
retf
cmp
inc
iret
adc
adc
sbb
xlat
push
mov
cs
xlat
add
pop
xchg
mov
test
jbe
fs
jnp
jb
mov
bnd
mov
aaa
ret
inc
cs
(bad)
xor
fidivr
(bad)
daa
add
stos
pushf
dec
push
inc
pop
hlt
mov
pop
imul
xchg
dec
push
imul
mov
(bad)
push
or
or
mov
popf
and
adc
aaa
hlt
int3
std
dec
inc
lock
push
dec
cmp
(bad)
xor
or
and
lods
outs
inc
or
fld
mov
ror
into
cmp
xor
in
arpl
mov
retf
jno
mov
inc
sub
jbe
dec
jno
jmp
mov
pop
movs
loop
dec
pop
cmc
lea
sbb
rcl
stc
repz
xchg
xor
das
test
lock
sti
pop
test
out
jbe
xchg
xchg
mov
mov
push
ret
dec
rcl
clc
sbb
fild
mov
(bad)
push
gs
fs
pop
in
pusha
test
aas
mov
pop
pop
daa
and
fsubp
enter
sub
out
jns
mov
sbb
mov
aad
in
mov
mov
loopne
dec
das
push
lea
xlat
jmp
or
push
out
cmp
scas
adc
cmp
jb
jnp
stos
ja
aam
add
xor
inc
es
xor
mov
sub
je
xor
pop
xchg
repnz
out
scas
daa
je
push
rcr
adc
es
fsub
std
jmp
inc
push
sub
dec
cld
gs
ja
movs
das
pop
inc
sbb
add
xlat
(bad)
sti
bound
enter
shl
out
sub
cdq
jg
retf
out
push
jnp
pop
lock
cmp
dec
pop
add
and
or
inc
retf
mov
sbb
das
pop
add
jo
add
int3
fiadd
loopne
push
sbb
retf
cmps
rol
xchg
jmp
sub
push
adc
xor
inc
sub
in
loope
ffree
sub
(bad)
mov
dec
ins
cli
lds
std
jl
cmp
sbb
adc
pop
jae
out
adc
ins
repnz
fwait
inc
xchg
(bad)
sub
xchg
test
mov
sti
add
out
dec
(bad)
or
mov
loop
scas
push
cmp
shr
jno
and
mov
cmps
test
fcomip
(bad)
jae
xlat
mov
je
sub
fcmove
ins
lods
lahf
mov
adc
stc
js
rcl
adc
and
mov
push
ficom
imul
test
mov
cmps
push
dec
inc
xchg
nop
ror
dec
pop
fwait
xchg
ret
push
and
mov
xchg
(bad)
scas
xchg
ret
mov
mov
cmp
imul
sub
and
dec
psubq
adc
mov
imul
out
les
popa
in
jno
loope
hlt
stc
jmp
std
push
mov
ror
shl
enter
push
and
pop
out
jo
ins
pop
xchg
test
pop
jp
(bad)
pop
jmp
idiv
push
lock
(bad)
and
lods
adc
xor
out
test
adc
pop
pop
daa
ret
mov
dec
sbb
loop
cmp
das
dec
shl
ss
movs
add
cmp
imul
xlat
mov
and
xchg
in
es
push
sub
add
adc
leave
rol
jmp
cmps
cmp
addr16
jle
inc
lock
pop
sbb
mov
adc
xchg
js
out
test
mov
xor
push
mov
or
cdq
mov
pop
mov
mov
call
mov
mov
scas
imul
pop
fsubr
mov
inc
into
xchg
loope
fadd
ror
lods
les
or
jb
push
scas
inc
add
sbb
jns
pop
xor
or
adc
stos
ds
xor
dec
push
or
sub
add
jbe
cmp
fdivr
mov
shl
add
enter
(bad)
cmps
cwde
sahf
movs
out
inc
push
cmc
sbb
push
pop
shr
repnz
iret
dec
add
neg
test
cmp
mov
jl
in
movs
push
jge
and
imul
and
and
and
cmp
xor
cld
adc
jbe
xor
sbb
push
in
jb
sbb
xor
cli
jmp
inc
das
js
aas
in
cs
jnp
fidivr
(bad)
es
clc
scas
pushf
xor
xor
pop
push
cwde
(bad)
mov
out
out
dec
rol
popf
and
jb
add
push
test
gs
pop
add
xchg
aas
outs
or
xor
je
cmp
sub
call
mov
aaa
jne
hlt
add
or
jg
lods
pop
in
mov
mov
mov
(bad)
(bad)
call
push
xchg
into
int3
xlat
sbb
je
jne
icebp
mov
mov
int
fmul
in
cmp
jae
(bad)
fnstsw
lahf
push
lock
fld
ret
and
test
xor
inc
(bad)
push
cdq
jecxz
adc
adc
mov
aas
popf
(bad)
fstp
je
mov
and
cli
stc
scas
je
jnp
jmp
int
shr
adc
sbb
mov
loope
sahf
xor
int3
jb
hlt
cdq
xor
mov
push
cwde
fmul
pop
pop
fcmovb
repz
fsub
adc
mov
test
in
aad
iret
(bad)
push
mov
shl
dec
pop
adc
out
cmps
add
and
dec
pushf
shl
mov
test
jnp
call
and
jl
and
and
js
inc
in
mov
dec
jae
xchg
pop
cli
lahf
cmp
pop
(bad)
scas
cmp
in
ins
fbstp
and
out
add
ss
and
das
outs
iret
inc
jmp
mov
add
aad
ds
out
cmp
es
jno
pop
retf
pop
stos
test
mov
sub
movs
nop
das
or
cmps
scas
jl
pop
inc
call
cmps
or
mov
inc
dec
add
imul
or
dec
(bad)
cmp
(bad)
dec
pop
push
aam
popf
adc
push
fld
inc
ja
pop
cmp
dec
add
dec
cli
sub
sbb
cwde
aas
mov
stc
push
mov
sahf
pop
scas
mov
ret
(bad)
js
push
inc
outs
push
lahf
and
jl
popw
popfw
cmp
jmp
retf
test
xor
adc
add
sar
xchg
stos
xchg
sbb
or
cmp
retf
push
mov
lds
sbb
adc
ror
xchg
lods
xor
cmp
pusha
nop
lods
(bad)
aam
cmp
(bad)
mov
inc
xchg
or
fld
cwde
push
and
retf
xchg
mov
aas
or
adc
inc
loopne
ror
shl
stos
mov
into
dec
jg
dec
ins
sub
imul
pop
or
xor
movs
vmovdqu
xlat
sbb
xchg
sbb
cmp
dec
leave
xchg
xchg
inc
dec
hlt
sbb
(bad)
mov
pushf
inc
xor
ins
jb
(bad)
repz
test
dec
pop
lahf
(bad)
sub
les
jmp
mov
jnp
jne
(bad)
bound
pop
pop
pop
imul
daa
aaa
leave
jp
mov
cmp
mov
xchg
lods
and
out
leave
adc
pavgb
mov
mov
imul
iret
popf
sbb
jb
mov
movs
add
add
jo
adc
sbb
cli
push
in
(bad)
fst
ins
loop
mov
mov
test
and
jnp
jmp
add
xlat
imul
xor
(bad)
push
ficom
push
mov
call
popf
ficom
sub
popf
jg
pop
inc
jae
ss
push
dec
xchg
jp
enter
mov
mov
(bad)
fs
pop
ret
push
mov
xchg
pop
sbb
jmp
cld
cmps
push
popa
or
js
ror
jecxz
cmp
(bad)
pop
inc
mov
dec
mov
cmp
push
mov
sbb
mov
mov
sbb
repz
addr16
jmp
sub
mov
call
pop
stos
inc
mov
jb
dec
cmc
pop
push
sbb
lods
sahf
xchg
mov
imul
and
sub
int3
cmps
ds
(bad)
test
or
push
lods
and
addr16
retf
hlt
fcom
mov
push
mov
clc
cmps
into
aad
and
(bad)
fcomp
cmp
in
gs
sub
xchg
mov
push
(bad)
cli
cli
hlt
loop
scas
xchg
(bad)
(bad)
dec
rcr
mov
and
mov
push
pushf
dec
mov
ret
enter
mov
inc
pop
cmc
in
push
or
push
ret
scas
ds
int3
in
dec
xchg
adc
cmp
(bad)
pop
sahf
mov
xor
sub
(bad)
mov
cmp
je
jb
fsubr
jbe
mov
xor
xchg
cmp
jns
push
xor
sub
jne
fdivrp
mov
push
push
add
std
and
retf
xor
jmp
inc
mov
dec
and
enter
adc
xor
mov
dec
xor
repnz
mov
or
inc
or
adc
shr
test
cmp
nop
and
push
sbb
push
mov
lds
loope
test
push
test
sbb
clc
xchg
bound
and
bnd
pop
push
or
fwait
mov
and
dec
push
(bad)
mov
mov
sbb
test
xchg
(bad)
fstp
aaa
aas
in
or
stc
push
out
gs
mov
bswap
xor
or
adc
inc
push
gs
(bad)
sbb
inc
xor
stc
push
jb
mov
pop
fwait
sub
or
sbb
jb
fst
int3
jecxz
stos
enter
mov
loope
cmp
push
jnp
addr16
push
sbb
leave
neg
jmp
xor
out
daa
dec
into
adc
popf
xchg
sbb
jmp
mov
adc
les
inc
add
call
jo
or
not
inc
jp
call
and
cmp
test
adc
mov
sub
push
xchg
jnp
sub
nop
jg
leave
ficom
movs
jge
mov
mov
add
pusha
mov
mov
mov
mov
icebp
cmps
cmp
div
sahf
repnz
sar
call
clc
fld
leave
mov
xchg
aas
pop
cmp
inc
inc
sub
and
bound
pop
sbb
sub
mov
and
fwait
mov
int
sahf
inc
movs
aad
rcr
sbb
jge
jg
xchg
aam
out
adc
aas
dec
pop
jns
repz
pop
cmp
mov
or
sar
jl
sahf
ror
xlat
dec
push
(bad)
and
repz
int
ss
cdq
jo
sub
mov
retf
pop
push
call
jg
test
xlat
xchg
lahf
cmps
mov
add
push
retf
sub
in
push
out
cmps
jo
jno
stc
sti
(bad)
test
xor
mov
fisub
and
in
or
movs
repnz
int3
pop
sbb
outs
pop
dec
mov
sub
add
lea
pushf
(bad)
std
jmp
test
sbb
sub
mov
and
mov
sub
sub
fst
mov
mov
jmp
mov
out
scas
cmp
(bad)
and
retf
out
or
sbb
push
data16
inc
or
int3
pop
sub
mov
sar
push
es
outs
pop
inc
into
mov
sbb
jg
bound
shl
inc
arpl
scas
xchg
xor
mov
sub
cmp
movs
mov
scas
inc
inc
out
ret
add
fdivr
pop
xchg
fist
add
retf
cmp
popf
pop
sbb
add
enter
fsubp
jge
sbb
shl
sbb
push
inc
(bad)
dec
gs
adc
fldenv
mov
and
repnz
arpl
fwait
sbb
or
dec
and
and
sbb
(bad)
xchg
std
pop
imul
rcr
out
inc
cmp
hlt
adc
dec
xor
mul
scas
sbb
daa
call
push
out
sub
shr
mov
xchg
cmp
out
and
xor
mov
fcomp
fisttp
sub
sbb
jg
inc
retf
mov
ins
retf
lea
stos
and
call
aam
mov
out
pop
push
dec
xchg
mov
test
pop
pushf
cdq
mov
int3
or
dec
shl
pop
leave
int
sub
sub
aam
xor
(bad)
xor
inc
adc
pusha
inc
jge
adc
add
mov
ja
jle
add
mov
mov
addr16
sub
dec
out
test
fadd
cdq
fstp
icebp
and
shr
pop
pop
sbb
adc
push
inc
mov
xchg
pusha
jo
mov
pop
sar
jp
add
aas
add
scas
test
dec
aam
dec
jp
push
hlt
push
aam
sbb
sti
stc
(bad)
jp
mov
scas
push
mov
pop
lds
mov
jb
fld
jnp
mov
sub
cmp
and
jl
lahf
inc
fisubr
rol
inc
inc
outs
mul
fist
iret
ins
stos
ret
repnz
jne
dec
mov
dec
push
jecxz
adc
dec
jg
xor
or
mov
(bad)
push
jns
(bad)
fidivr
lahf
xor
in
not
aam
sub
dec
test
lfs
pop
mov
adc
es
xor
mov
pop
shl
test
rcl
adc
jp
rcl
lea
retf
arpl
sub
lods
jno
pushf
xor
inc
imul
jge
xchg
aas
cmp
sbb
cwde
push
loope
repnz
int3
test
sub
mov
add
inc
movs
xor
jne
sahf
pop
mov
adc
gs
imul
cmp
cmp
jecxz
ret
or
push
pop
mov
popa
pushf
std
mov
sub
cmps
into
mov
sti
call
pushf
fdiv
ins
mov
pop
imul
lods
call
mov
js
call
pop
lods
shl
lahf
dec
outs
aad
cmps
sbb
xor
mov
pushf
call
jg
(bad)
push
mov
out
adc
cmp
inc
daa
out
inc
loop
rcr
daa
dec
xchg
fdivr
sub
sub
ror
mul
fidiv
jg
ins
jae
test
sbb
dec
cmps
fwait
test
stos
mov
push
inc
(bad)
jne
and
push
out
fs
adc
movs
mov
or
mov
call
rcl
int
lea
(bad)
sub
mov
jno
and
test
inc
jmp
out
test
aam
adc
dec
mov
mov
movs
ja
retf
push
popf
test
inc
ins
add
xchg
inc
push
inc
adc
sub
cmc
out
(bad)
in
lahf
inc
mov
js
test
push
(bad)
pop
pop
inc
xlat
push
sub
scas
scas
cmp
xlat
stc
or
mul
popf
mov
movs
cmps
sub
ins
outs
jnp
push
cld
test
cli
dec
dec
retf
jg
mov
mov
and
jb
not
lock
in
rcr
jle
cdq
cmp
push
xor
sar
enter
rol
jnp
sub
mov
dec
xchg
push
lods
sbb
out
sbb
sti
out
mov
add
and
lahf
leave
int3
imul
cmp
aam
mov
rcl
ss
dec
mov
dec
rcl
and
out
ins
pop
repz
xchg
(bad)
sbb
adc
out
dec
pushf
cdq
not
and
dec
lahf
test
int
test
xor
xchg
pop
in
or
sub
fucomi
dec
sub
(bad)
retf
in
jbe
push
jb
aaa
(bad)
jno
jmp
test
repz
stc
sbb
pusha
cmp
ins
stc
out
aam
cmp
add
cmps
out
(bad)
fstp
jb
xchg
push
jb
arpl
addr16
in
enter
jp
push
outs
cli
adc
and
mov
dec
push
out
fadd
test
or
push
aam
push
inc
sub
mov
(bad)
sub
arpl
outs
sub
inc
jle
mov
push
int
cmp
hlt
fdivp
repz
jo
pop
loope
popa
mov
int
jmp
nop
add
sbb
les
dec
mov
cmp
jmp
pop
icebp
jnp
fisttp
xchg
push
lods
test
imul
jle
ror
mov
or
cmp
mov
lahf
rcr
ss
cmps
adc
loopne
addr16
or
adc
inc
bound
mov
hlt
mov
mov
push
fadd
leave
mov
push
stc
push
xor
push
pop
fld
and
add
xchg
inc
jbe
dec
sbb
jge
jmp
mov
outs
clc
xor
call
or
push
out
imul
scas
gs
cmp
scas
push
push
cwde
test
jb
pop
adc
mov
inc
mov
xchg
ins
icebp
jg
jb
jle
movs
test
cmp
sub
cwde
jmp
inc
das
dec
mov
lods
js
pop
fsub
iret
rol
xchg
jnp
aad
daa
pop
mov
add
push
icebp
(bad)
mov
jg
jg
ficomp
push
scas
mov
push
push
fsubr
xor
xor
dec
xchg
aas
nop
jle
mov
xor
aaa
(bad)
outs
dec
inc
mul
jp
rcl
outs
retf
outs
push
mov
cmps
das
jae
bswap
out
clc
ja
xchg
sub
fwait
lods
push
movs
sbb
adc
ja
iret
hlt
lods
add
loop
mov
xchg
or
sbb
arpl
mov
or
push
in
sbb
ss
or
prefetch
and
sub
inc
rcr
(bad)
jmp
xchg
imul
test
add
mov
ins
loope
mov
dec
jb
xor
sbb
dec
jl
pop
sbb
mov
out
sbb
cmp
cmp
pop
lea
ret
ja
cld
into
inc
mov
das
jbe
push
sub
(bad)
loopne
mov
dec
inc
scas
ds
mov
and
mov
rcl
cld
xchg
adc
fwait
(bad)
fst
daa
adc
xchg
ins
loop
mov
fidiv
ja
stos
and
test
sub
in
cli
mov
pop
push
mov
pop
xor
aad
xor
sbb
cmp
cmps
xchg
mov
pop
and
ds
loopne
fdivrp
cmp
push
xchg
aad
(bad)
xor
in
test
mov
outs
mov
mov
jge
lahf
(bad)
in
xchg
ins
push
pop
adc
mov
aam
imul
mov
(bad)
ds
daa
push
repnz
aas
adc
mov
push
mov
es
iretw
retf
sbb
inc
mov
aad
in
xlat
xchg
mov
outs
pop
and
sbb
imul
lock
mov
pop
pop
mov
(bad)
mov
push
mov
lock
mov
loopne
mov
out
xor
xor
sub
rcr
add
inc
bound
sub
jmp
sbb
pop
add
popf
sub
icebp
mov
call
jle
movs
lahf
cs
mov
xor
and
sub
or
add
in
mov
mov
pop
xchg
retf
rcl
jo
mov
or
and
inc
jo
jne
adc
inc
pop
add
pushf
add
enter
stos
dec
xchg
pop
(bad)
out
jb
jb
fnstenv
mov
mov
std
sbb
loope
adc
imul
jo
imul
jae
into
or
cwde
cmp
jp
div
and
cmp
fcmovnb
dec
jmp
cmp
mov
lahf
stc
ss
movs
adc
je
xor
test
pop
mov
sar
jo
xchg
pop
pop
inc
loop
fld
addr16
aad
dec
xor
add
bnd
adc
std
mov
aam
rcr
mov
repnz
mov
pop
adc
and
call
mov
fstp
sti
pusha
cmps
push
jl
xlat
fmul
sub
test
push
pop
iret
in
outs
push
sbb
rcr
scas
push
ja
lods
mov
mov
mov
cmp
mov
inc
pop
jecxz
lds
in
jge
inc
mov
jg
ds
xor
add
xchg
sub
sbb
adc
xor
pop
pop
ins
or
call
dec
cmp
daa
adc
loope
sbb
scas
inc
sub
shr
das
ja
cmp
lods
lock
daa
adc
mov
or
mov
pop
loope
add
jg
mov
iret
cmp
mov
sbb
in
(bad)
adc
aam
sub
mov
inc
in
clc
pushf
out
xchg
lock
mov
les
adc
call
imul
not
je
jmp
lock
mov
or
dec
or
mov
pusha
leave
aad
dec
cdq
retf
bound
cmp
inc
cmp
(bad)
jmp
cmp
lahf
xchg
fdiv
pop
cli
dec
mov
and
ds
mov
lods
nop
jbe
(bad)
out
out
xchg
movs
les
push
jle
mov
fbld
and
data16
popa
ror
or
bound
dec
loop
mov
test
adc
inc
jl
mov
adc
jnp
les
iret
repz
(bad)
arpl
mov
mov
push
inc
shr
outs
lock
shl
iret
push
jmp
jno
inc
imul
sub
mov
jbe
mov
mov
add
and
fwait
mov
stos
stos
call
cmps
cmp
jno
push
ret
sub
out
fadd
outs
push
bnd
add
and
mov
pop
stos
test
ret
mov
sub
cmp
stc
ficomp
fst
(bad)
pop
ja
or
aaa
lods
fwait
pop
inc
outs
mov
xor
ss
retf
mov
pop
sub
arpl
mov
shl
cmp
int
adc
dec
add
outs
xlat
mov
jne
and
xchg
(bad)
aad
das
cmp
jne
dec
and
pop
xchg
aas
lods
push
and
pop
ss
neg
mov
sbb
inc
xchg
xlat
jge
mov
and
add
imul
add
sbb
xor
fucom
test
sahf
sub
lea
xor
add
aas
jmp
arpl
jo
push
add
mov
popa
fcomp
aaa
cmp
inc
inc
push
mov
jne
xor
add
add
in
mov
dec
mov
out
test
aaa
jmp
xchg
jmp
sub
or
movs
xor
and
and
test
mov
mov
ja
imul
inc
dec
xchg
out
cdq
outs
jns
in
mov
jecxz
cmovb
aam
stos
mov
popa
pusha
shl
fnstenv
dec
cs
scas
adc
cmp
popf
xchg
mov
adc
pusha
inc
adc
push
xor
(bad)
clc
xor
int
js
fucomip
xlat
sbb
std
je
jge
stc
sbb
lahf
imul
mov
mov
popf
jl
jmp
sbb
std
aam
cli
sub
mov
fsubr
xor
(bad)
js
dec
cdq
mov
pop
mov
enter
xor
(bad)
adc
test
mov
mov
dec
stos
sbb
xor
idiv
jge
daa
xchg
and
(bad)
call
popa
push
add
in
(bad)
rol
dec
mov
nop
jg
imul
into
sub
lds
inc
pop
push
fnstsw
lds
(bad)
out
ja
iret
jae
sbb
in
aam
dec
push
mov
xchg
js
mov
arpl
jl
lods
enter
mov
cwde
fldcw
push
push
aas
sub
inc
and
shl
lock
dec
(bad)
shl
rcl
adc
jg
clc
pop
sbb
mov
cmp
jbe
sar
shr
repz
inc
enter
adc
mov
add
fcomp
mov
jl
pushf
in
je
out
ret
leave
push
fdivr
stos
sbb
push
addr16
xor
imul
mov
dec
(bad)
sub
rcl
mov
jle
out
jnp
inc
sub
mov
cmp
ja
iret
ins
(bad)
lock
shr
xor
aaa
test
arpl
push
outs
lods
int3
repz
dec
imul
push
retf
clc
dec
stos
loope
nop
pop
sar
xor
fisubr
nop
call
stos
sub
fwait
std
in
imul
addr16
pop
dec
stos
adc
xlat
push
dec
js
mov
mov
cwde
daa
sbb
fcom
push
in
or
mov
and
mov
loopne
xchg
or
jnp
sub
imul
enter
call
sub
(bad)
mov
movhps
pop
imul
test
pop
add
shr
and
mov
imul
jp
div
push
sub
outs
jmp
ja
push
loope
into
mov
imul
cmp
mov
adc
lahf
cld
ins
inc
mov
xchg
pusha
jecxz
into
retf
sbb
jbe
adc
adc
pusha
jg
mov
xchg
(bad)
das
push
and
inc
das
pop
(bad)
stc
jne
and
adc
or
es
jo
mov
loopne
icebp
fsub
push
xchg
leave
dec
lods
stos
inc
aad
fldenv
sbb
and
into
or
sbb
movs
mov
or
and
fwait
mov
jbe
mul
lods
popa
les
fmul
(bad)
sub
popf
int
add
pop
add
mov
stos
jmp
sub
mov
push
je
retf
loope
inc
cmc
jns
add
imul
popa
cmp
test
lahf
mov
add
out
rcr
pop
xor
sbb
(bad)
sbb
pop
push
inc
popf
leave
rcr
mov
mov
mov
stos
outs
jo
imul
movs
int3
mov
(bad)
sti
and
xor
or
sub
adc
or
iret
sahf
sub
stos
popf
xlat
dec
call
dec
or
add
dec
xchg
push
cmps
or
xchg
ins
sbb
ret
pop
test
cmp
mov
movs
ror
and
add
cmps
mov
stos
push
mov
dec
and
(bad)
out
retf
sete
cmc
loop
mov
and
not
mov
in
inc
adc
mov
(bad)
cmp
in
push
shr
fcmovne
int
ja
xor
inc
retf
cld
mov
cdq
cmps
push
mov
or
leave
inc
stos
mul
daa
jo
pop
xchg
(bad)
je
adc
stc
mov
out
add
scas
mov
int3
fs
jns
cmps
add
xchg
fwait
sbb
push
mov
cmps
jmp
mul
cdq
sbb
pop
sbb
mov
xor
pop
imul
cdq
jne
and
mov
aad
add
and
and
and
xchg
rol
adc
jge
lods
(bad)
repnz
outs
add
dec
ret
inc
inc
retf
hlt
call
or
mov
je
(bad)
je
js
outs
ret
mov
xchg
pop
leave
cmp
rcl
in
and
xchg
sti
mov
jns
stos
call
test
cld
cmps
xlat
das
icebp
pushf
scas
cmps
jmp
ds
in
ins
mov
adc
add
js
lods
adc
jnp
or
mov
cmp
lods
jl
or
pop
add
daa
mov
clc
fisttp
int3
in
adc
out
inc
lods
xlat
das
sbb
data16
test
not
cdq
dec
out
pop
fwait
inc
cwde
push
into
sub
repz
or
lds
stc
popf
(bad)
retf
into
add
dec
mov
(bad)
xlat
xchg
pop
(bad)
mov
pop
xor
jmp
pushf
cmp
jecxz
adc
out
aas
addr16
xlat
popa
jne
call
ins
fstp
sub
clc
sti
int3
mov
in
leave
xchg
stos
pop
mov
je
stos
ins
add
pop
cld
hlt
daa
xchg
sbb
add
sbb
pop
lods
adc
movs
dec
jmp
sbb
(bad)
sub
sub
imul
fisttp
xlat
movs
dec
inc
xor
xchg
xchg
inc
adc
pop
icebp
push
(bad)
out
adc
sbb
xor
or
outs
add
test
push
or
in
mov
xchg
jae
aas
movs
ins
mov
adc
push
das
daa
dec
mov
adc
cmp
xor
push
ja
std
pop
sbb
mov
mov
xchg
fmulp
mul
mov
push
in
mov
and
cmp
push
jle
xchg
in
sbb
movs
sub
test
and
loopne
xchg
in
add
add
sti
pop
rcr
leave
in
shl
adc
movs
scas
inc
lods
dec
sbb
or
mov
fwait
scas
popf
mov
stos
popf
cmp
inc
in
add
fwait
aas
jae
mov
dec
in
bound
push
mov
fild
fs
inc
(bad)
mov
icebp
and
push
pusha
cdq
mov
push
cmps
pop
push
repnz
ja
test
test
inc
cmp
fs
(bad)
fs
cli
mov
add
inc
xor
or
add
jnp
rcr
ja
pop
or
movs
add
mov
pop
adc
out
xchg
lahf
add
dec
or
rcl
int
dec
push
rcl
push
dec
jge
jno
mov
dec
fidivr
mov
repnz
or
sub
in
lock
cmp
bswap
test
clc
xchg
retf
call
shl
lods
(bad)
push
pop
sti
jmp
pusha
adc
pop
(bad)
fwait
mov
pop
scas
loop
sub
ss
popf
xchg
push
(bad)
jg
stos
mov
and
sar
sahf
mov
in
mov
pop
jl
mov
lods
or
mov
dec
cli
out
push
bound
push
jbe
loop
scas
add
push
icebp
lods
push
fs
jle
xchg
(bad)
pusha
add
cld
icebp
mov
jmp
jae
jns
repz
mov
mov
test
mov
add
jge
jmp
push
jne
pop
and
cmps
test
outs
fisubr
stc
push
cmps
call
pop
mov
cmc
cwde
cwde
jbe
sub
pop
adc
iret
mov
shr
pop
pop
test
nop
jg
xor
sub
or
push
gs
jmp
or
mov
mov
les
jp
mov
xor
int
outs
xchg
inc
adc
jae
mov
popf
xchg
mov
shr
stos
add
inc
fnstenv
push
sbb
jns
(bad)
mov
test
push
add
pop
or
inc
xor
mov
retf
not
dec
adc
jl
in
loop
clc
out
test
jle
inc
sub
mov
adc
and
push
sbb
out
in
pushf
push
sbb
xchg
mov
(bad)
sbb
in
pop
cwde
inc
or
adc
pop
lock
pushf
test
xchg
lea
into
test
pop
scas
lods
sub
push
(bad)
or
aad
adc
test
mov
int3
(bad)
sar
int3
call
and
jne
movs
adc
sub
loop
add
nop
push
dec
lea
into
imul
push
data16
add
ret
xchg
lahf
out
inc
mov
push
dec
add
js
retf
ret
ds
ins
cld
cs
and
(bad)
into
cmp
push
inc
aad
push
sub
sbb
fisub
jge
(bad)
out
cmp
in
sub
and
adc
frstor
ret
sar
jae
test
scas
loop
cmp
mov
dec
pop
adc
pop
jo
bound
dec
jmp
mov
pop
jmp
not
cmc
js
xchg
cmp
jbe
sub
jp
sbb
jns
pop
mov
push
jge
test
mov
loope
adc
lods
pusha
lahf
mov
push
ret
(bad)
popa
sbb
pop
pop
inc
pop
add
stc
push
ins
jno
sar
aas
push
sbb
cwde
or
int3
fcmovb
ret
repnz
mov
mov
fwait
retf
jnp
div
mov
mov
or
dec
push
adc
mov
xchg
ror
xchg
mov
rol
add
and
or
stos
pop
pushf
popa
sub
outs
xchg
sbb
loop
mov
cmp
dec
pushf
lods
pop
sub
rcr
dec
retf
lods
mov
push
aas
push
mov
sub
jmp
or
stos
fistp
push
and
push
cld
nop
lea
dec
(bad)
jg
daa
xchg
lock
jo
and
mov
inc
or
xlat
sahf
imul
add
push
mov
rcl
sub
xor
mov
dec
xchg
add
xor
cld
cmp
add
call
push
mov
add
ss
mov
mov
ins
push
fst
fmul
jbe
cdq
pop
sti
repnz
hlt
sar
sbb
fidiv
fnstsw
jle
or
or
dec
aas
mov
inc
jmp
add
sbb
leave
jmp
in
xor
xor
movs
enter
(bad)
cdq
jb
xor
inc
test
jmp
js
mov
inc
int
jp
daa
adc
ret
imul
cmp
mov
mov
or
hlt
cmp
pushf
lock
test
cmps
aaa
cmc
push
ss
retf
imul
imul
mov
adc
es
inc
adc
lods
push
ja
push
mov
popf
xlat
fs
idiv
xchg
push
mov
mov
dec
ror
or
(bad)
fcmovnu
xchg
movs
ret
cmp
adc
test
jo
rcr
outs
cmp
jmp
xor
sbb
test
retf
lea
dec
or
pop
pop
stos
pop
pop
mov
add
inc
pushf
in
movs
(bad)
mov
int
dec
lahf
mov
lea
xlat
icebp
push
jmp
adc
or
call
xchg
pop
add
push
popa
xor
retf
imul
das
nop
aad
add
cmp
sahf
push
ss
jmp
adc
ficomp
mov
jno
pop
cmp
arpl
inc
or
pushf
or
mov
test
jo
inc
xchg
fiadd
sub
push
ja
sub
mov
pop
pop
cmp
out
dec
add
and
add
inc
cwde
adc
fild
imul
daa
mov
cmps
dec
cwde
push
das
mov
xlat
adc
outs
jb
loop
aam
mov
xchg
push
adc
jg
sbb
jmp
pop
(bad)
rol
xor
xchg
outs
or
sbb
cmp
leave
sub
jmp
lahf
popf
jo
mov
lahf
pop
(bad)
mov
inc
push
and
or
adc
int
mov
pusha
rol
inc
int
jp
pop
inc
sbb
pop
imul
mov
(bad)
mov
out
sub
mov
gs
adc
mov
cmp
test
jmp
jge
hlt
mov
dec
dec
mov
xchg
push
cmp
loop
add
adc
pop
dec
ret
dec
cmp
loop
ss
dec
xlat
push
dec
dec
test
xchg
jne
sbb
or
sbb
push
sub
stos
bswap
mov
es
xor
xlat
pop
fldcw
pop
and
or
and
xor
cmps
dec
xchg
inc
inc
and
inc
movs
push
jg
scas
leave
and
push
dec
inc
fmul
test
sbb
push
mov
sbb
push
push
xor
imul
aaa
les
add
jg
in
ja
out
dec
sub
cmc
add
add
ret
shl
ret
enter
mov
inc
mov
cdq
jecxz
inc
ror
pop
push
dec
test
out
aaa
mov
inc
inc
jb
adc
sub
imul
xchg
retf
sbb
fidivr
mov
xor
push
neg
fnstenv
inc
inc
stos
mov
cmc
pop
sahf
xor
xor
imul
dec
xchg
mov
mov
fisttp
mov
cmps
jmp
arpl
add
movs
test
scas
aaa
jmp
ja
fnsave
push
in
(bad)
cmp
or
iret
xor
mov
jl
rcr
call
loop
mov
(bad)
fidiv
xchg
les
stos
test
(bad)
loopne
loopne
sbb
or
pop
mov
add
retf
push
pop
out
pop
loop
(bad)
ss
adc
and
lods
sbb
es
ja
pushf
das
sbb
push
es
add
mov
out
imul
ret
xchg
jmp
lods
mov
mov
nop
in
popf
and
fnstsw
div
clc
add
stos
xchg
push
xchg
push
push
sti
mov
test
dec
push
movs
jle
mov
(bad)
sub
outs
cmp
push
(bad)
xor
hlt
mov
cld
retf
xor
out
jae
fisttp
inc
cmp
dec
sbb
retf
inc
fadd
mov
cdq
not
adc
pop
mov
inc
repnz
mov
test
fstp
rcr
xchg
adc
jl
sbb
sbb
dec
data16
leave
push
xchg
jmp
ret
pop
jle
mov
mov
cmp
out
lods
sub
pop
out
push
dec
add
(bad)
outs
fwait
sub
jno
stc
and
cmp
mov
(bad)
jge
(bad)
inc
imul
and
(bad)
pop
sti
cmp
xchg
xchg
imul
or
daa
and
or
jbe
(bad)
lea
jo
jne
(bad)
in
bound
lock
push
adc
push
xchg
ja
pop
leave
imul
adc
retf
imul
mov
cwde
xlat
and
bound
inc
push
loop
push
or
pop
into
xlat
inc
dec
mov
outs
sbb
mov
dec
push
and
add
loopne
mov
mov
sbb
lods
stc
mov
xor
jo
adc
mov
adc
inc
aas
test
and
push
pop
mov
xchg
jae
pushf
stos
mov
std
stos
inc
adc
loope
xchg
sub
adc
(bad)
in
push
push
cmp
sub
mov
mov
lahf
mov
dec
popa
jo
outs
pop
pusha
jl
mov
inc
sbb
movs
or
enter
in
(bad)
out
ins
sbb
inc
jo
sub
add
jne
push
in
cmp
enter
mov
ficomp
lahf
and
lahf
xlat
loop
xor
arpl
cmp
push
mov
xchg
sub
or
dec
mov
jmp
inc
lods
call
js
dec
sbb
push
add
add
jge
cmp
push
stos
mov
pop
jecxz
iret
mov
mov
push
adc
inc
mov
lock
int
fstp
shl
(bad)
(bad)
aad
jo
outs
fisub
ror
jmp
ror
cmp
out
dec
mov
jnp
cwde
xchg
movs
jmp
and
bound
test
(bad)
repnz
mov
mov
aad
mov
sbb
mov
mov
adc
pop
add
xchg
add
retf
in
pop
cli
pop
js
lea
jge
mov
test
sbb
sbb
xor
nop
cld
imul
mov
paddsb
fisttp
sbb
in
jg
and
xchg
mov
es
jp
pop
push
mov
dec
push
push
push
cmp
add
fwait
mov
add
pop
push
jmp
jbe
jae
scas
repz
outs
mov
test
add
into
mov
xchg
pusha
jnp
cmps
xor
lock
aam
cmp
jns
daa
inc
xchg
mov
jno
ins
ret
test
mov
xor
arpl
add
js
xchg
adc
inc
fldcw
xor
xor
test
add
sbb
mov
jb
sahf
add
sbb
xlat
xchg
bound
fistp
int3
add
loopne
neg
mov
fist
or
(bad)
in
pushf
sbb
jne
xchg
out
cmp
test
mov
jmp
xor
outs
or
repz
push
ficomp
stc
mov
xchg
imul
test
xor
mov
cmp
outs
loop
call
jno
(bad)
push
pop
movs
outs
rcl
jecxz
aaa
pop
xchg
lods
aaa
mov
outs
mov
cmp
xchg
pop
inc
and
pop
je
jge
loopne
lea
push
mov
dec
mov
mov
or
loopne
daa
pop
push
cmc
mov
xor
mov
ret
mov
(bad)
loopne
fcomp
ins
jmp
lods
mov
enter
xor
addr16
ss
adc
mov
xchg
or
inc
xchg
mov
std
cmp
pop
dec
ret
arpl
rol
leave
outs
add
popf
dec
fwait
adc
icebp
mov
push
out
push
adc
in
jp
leave
in
jg
lods
call
cmp
cdq
stos
push
xor
sbb
pop
pop
(bad)
daa
sub
jecxz
inc
sub
sti
out
data16
retf
test
adc
mov
cmps
sub
mov
jbe
xor
and
push
jecxz
cmp
or
in
and
pop
es
sbb
or
xchg
push
adc
(bad)
pop
pop
pop
fisttp
bt
dec
bound
pop
sbb
sar
sahf
mov
loop
jo
sar
adc
stc
mov
int3
or
es
pop
cmc
ret
jl
rcl
pop
xor
and
stos
pop
or
or
addr16
(bad)
or
dec
cmp
icebp
mov
into
jae
sub
adc
jl
fadd
fwait
jl
dec
mov
lock
dec
xchg
imul
sub
xchg
push
jmp
mov
add
outs
popa
add
popf
js
jno
jo
or
fild
jns
pop
push
scas
pushf
sahf
jo
cmp
adc
mov
mov
je
pop
push
out
mov
sti
xor
push
int
mov
hlt
imul
cmps
jg
dec
xchg
fscale
sub
inc
dec
xchg
das
mov
add
idiv
outs
movs
int3
std
xor
lods
inc
jl
mov
call
mov
leave
fisubr
clc
cli
aam
mov
pop
cmp
push
jbe
and
dec
push
sbb
lods
dec
iret
(bad)
call
movs
cs
sbb
lock
dec
adc
(bad)
in
in
xor
jp
push
out
or
loop
sahf
mov
out
call
aaa
ins
adc
aas
not
(bad)
ror
not
xor
add
shl
sbb
jmp
push
xor
pop
ret
push
int3
push
(bad)
push
repnz
inc
into
mov
jge
xchg
mov
sub
cwde
push
fld
push
pop
cld
cmp
mov
ret
icebp
lahf
mov
xor
mov
pop
es
fsub
mov
mov
sub
clc
add
push
std
loope
push
xchg
jg
jmp
hlt
and
cwde
sbb
cmp
sbb
imul
rcr
inc
dec
aad
shl
int
cli
adc
push
out
bound
scas
add
sub
push
out
(bad)
xor
in
push
sbb
mov
enter
push
dec
push
cmp
mov
pop
movs
xor
fwait
call
int
test
cs
nop
push
test
xchg
imul
jbe
mov
xor
(bad)
cmps
fistp
and
pop
cmps
mov
cmps
cmp
pop
ret
xchg
xchg
xchg
push
jb
aaa
xchg
sar
jo
arpl
jno
xlat
mov
mov
cdq
jns
call
retf
cmc
gs
dec
mov
jmp
int
enter
xchg
mov
sbb
ret
(bad)
sub
repnz
repnz
rol
idiv
add
or
scas
pop
mov
inc
call
out
add
jmp
loope
fild
mov
push
mov
aam
in
loopne
stos
in
retf
inc
xchg
movs
cmps
ror
and
xchg
mov
jle
and
stc
repnz
pop
in
xchg
push
lds
push
pop
shl
fld
pop
ja
xor
adc
stc
jb
mov
loopne
and
xchg
in
jno
mov
cmp
retf
and
xor
fidiv
es
and
pusha
sbb
aam
das
rsqrtps
xchg
xor
sbb
rcl
int
jp
and
int
push
xchg
rol
push
movs
fisttp
sbb
dec
cmp
imul
jmp
sbb
ja
fisubr
add
shr
(bad)
pushf
pop
out
pop
in
aam
and
add
scas
hlt
push
sar
cli
ficom
test
push
test
mov
sahf
icebp
cmp
mov
mov
mov
inc
add
ins
xchg
pop
(bad)
(bad)
cmp
mov
pop
xor
out
inc
enter
mov
popf
push
aad
mov
push
cmp
(bad)
lahf
loope
jnp
push
fwait
(bad)
das
sub
adc
dec
rcr
and
fcmovbe
ja
fadd
pop
xchg
sahf
fist
xor
xchg
hlt
and
int
or
enter
cmp
or
bound
mov
test
pop
mov
mov
movs
ficomp
cmp
fistp
and
mov
out
cli
inc
popa
jmp
cli
lock
aam
test
xor
jno
push
sub
repz
mov
mov
adc
outs
xchg
loopne
pop
cmp
rep
bound
test
dec
push
mov
stc
or
mov
dec
stos
and
inc
pushf
mov
mov
jno
mov
mul
push
xor
dec
ss
js
fs
push
xor
jb
xor
mov
fcmovnbe
aaa
fcom
int3
xchg
xchg
inc
adc
ror
pop
push
pop
fbstp
mov
out
xor
cwde
xor
pushf
or
jo
je
pop
inc
in
xchg
scas
xor
ds
push
test
xlat
out
cdq
mov
stos
sti
fwait
or
pop
add
ret
jb
test
cmp
push
retf
popf
movs
sub
popa
idiv
mov
js
cmp
repnz
out
loop
xor
inc
dec
push
jae
aaa
mov
or
push
cs
iret
(bad)
jnp
jo
mov
daa
js
mov
movs
aas
aas
int
das
popf
add
mov
movs
mov
push
das
push
loop
test
imul
lods
stos
jbe
push
sub
sub
cmc
call
mov
lds
adc
mov
out
or
mov
test
cmc
mov
sub
push
popa
arpl
push
(bad)
add
(bad)
test
xchg
ins
and
jmp
stc
jb
cmps
bound
and
adc
pusha
and
mov
mov
fwait
xor
ret
add
add
sub
cmp
lea
jb
dec
jmp
lods
pop
stos
test
rcr
xchg
mov
pop
movs
bound
push
enter
add
mov
adc
sub
das
dec
aad
sahf
add
dec
inc
cwde
call
and
adc
push
and
mov
mov
and
jge
and
mov
xor
xchg
cwde
mov
inc
(bad)
mov
mov
sbb
jnp
jp
dec
enter
xchg
call
add
jae
xlat
lea
inc
out
call
int3
jle
pop
and
frstpm(287
ror
pop
dec
mov
jecxz
sbb
jg
(bad)
aaa
xlat
arpl
ins
shl
pop
or
in
jb
(bad)
iret
fcomip
jno
and
clc
adc
mov
sti
push
mov
or
inc
jbe
aaa
shl
pop
inc
jmp
and
mov
mov
test
retf
xchg
imul
pop
ret
fcom
pop
movs
into
fimul
(bad)
xchg
push
ins
repz
or
and
mov
adc
into
fs
fisttp
repz
mov
popf
(bad)
xor
sbb
sub
xchg
js
jae
hlt
inc
neg
sub
stos
sbb
mov
cmp
push
and
inc
mov
enter
jnp
rcr
push
imul
and
pop
es
fnstcw
mov
sbb
scas
add
pop
adc
pop
mov
pushf
xor
xor
sbb
pop
bnd
or
xchg
mov
push
pop
inc
sbb
xchg
mov
ret
lds
or
retf
retf
cmps
push
stc
rol
sbb
dec
mov
fimul
jns
xor
loop
dec
popa
pop
ins
xor
mov
icebp
out
dec
fdiv
sbb
adc
(bad)
sub
push
xchg
or
les
fidivr
shl
push
and
cs
das
retf
sbb
es
sbb
or
adc
fdivp
sbb
mov
sub
add
nop
loopne
(bad)
push
test
loop
and
and
aas
pop
out
add
add
mov
xchg
xor
iret
les
cmp
icebp
jb
pop
fiadd
xor
enter
cs
imul
repz
sub
leave
scas
mov
jne
pop
imul
movs
push
or
xor
retf
sahf
nop
lods
dec
(bad)
retf
cmp
push
fdivr
out
mov
test
and
dec
or
fsubp
mov
test
fstp
xor
lock
and
or
out
bound
and
popf
addr16
sub
enter
(bad)
fisttp
and
in
cmps
cld
xchg
fs
fcomp
(bad)
cli
add
dec
inc
jecxz
push
add
iret
and
mov
aam
test
inc
loopne
add
das
(bad)
adc
cmps
push
push
mov
inc
jl
fcom
inc
(bad)
push
scas
fimul
mov
(bad)
cld
xchg
adc
int
sub
xlat
data16
fisubr
add
or
mov
cs
fwait
mov
and
sub
es
fstp
mov
jae
adc
push
jmp
jbe
cmp
xor
jo
sub
sbb
test
lods
and
bound
jge
not
push
in
cmps
nop
or
adc
pop
add
aas
scas
sub
mov
cli
pop
adc
and
mov
adc
cmp
push
and
sub
push
xor
and
pop
jl
cs
jb
add
cwde
push
jmp
and
jge
and
iret
(bad)
adc
ret
mov
lods
add
cdq
pop
xor
ja
sbb
add
jae
leave
xchg
dec
mov
dec
mov
inc
pop
ss
cdq
jbe
jl
xchg
lock
mov
fdivr
(bad)
ins
xchg
movs
jnp
mov
fcmove
sub
ds
cmp
jne
dec
fs
cs
test
pop
fisttp
xor
dec
test
(bad)
sti
stos
out
daa
(bad)
shr
ja
cld
jecxz
dec
sbb
pop
movs
sbb
dec
jbe
jae
popa
jg
sub
push
sbb
jno
cs
js
jl
pop
fisubr
and
pop
stos
pusha
mov
inc
(bad)
push
xor
outs
mov
fisub
repz
jp
popa
xchg
dec
adc
sar
iret
popf
push
jmp
mov
cmps
sbb
clc
js
(bad)
rol
inc
inc
mov
lods
cmp
inc
mov
hlt
leave
jle
mov
mov
and
in
out
iret
in
xchg
in
(bad)
adc
mov
jp
add
sahf
pop
pop
mov
or
ins
mov
lock
xor
adc
cmc
cmps
cmp
popf
jp
push
std
push
xor
cmps
push
cmp
dec
and
push
and
popf
fld
or
iret
imul
push
sti
pop
scas
call
cwde
jge
inc
imul
cmc
aaa
in
fstp
int
cmp
xchg
int3
dec
mov
push
mov
jle
sahf
into
jp
mov
retf
pop
stc
adc
xor
pop
daa
push
pop
outs
sub
push
mov
(bad)
jecxz
mul
jno
test
int3
lods
popa
cwde
xchg
jle
jg
push
dec
fcmovbe
inc
mov
clc
xchg
rcr
lahf
mov
jbe
cs
stc
inc
sbb
fild
and
shl
sbb
xchg
jnp
mov
mov
xchg
imul
js
mov
push
pop
ffreep
lahf
addr16
xchg
xor
push
fild
pop
mov
sbb
add
and
stc
xchg
dec
pop
out
dec
or
outs
mov
adc
shl
popf
pop
stos
dec
inc
pushf
repnz
arpl
das
xchg
enter
loop
xchg
stos
push
add
mov
xor
lock
popf
(bad)
cmp
(bad)
cmp
push
pop
ins
sbb
lds
and
aam
mov
or
fimul
push
ss
inc
ins
ins
pop
cdq
sub
sub
or
dec
movs
popa
out
pop
fst
mov
je
inc
rcr
add
aad
xchg
loop
loope
mov
mov
dec
lds
push
mov
cmp
push
stos
cmp
xchg
push
pop
xor
out
inc
ja
(bad)
push
mov
loope
sti
out
imul
jne
cmp
pusha
inc
mov
rsqrtps
in
rol
cs
or
pop
cmp
push
inc
inc
dec
pop
popf
shl
in
inc
cmc
sahf
(bad)
or
(bad)
sahf
and
push
mov
pop
mov
ss
call
mov
add
xchg
cmp
jl
xchg
arpl
sbb
sub
(bad)
ffreep
lock
inc
or
dec
inc
and
out
push
jb
clc
mov
pop
ret
jae
(bad)
xor
push
dec
lahf
(bad)
or
pop
xchg
mov
jno
ja
jmp
rcr
dec
stos
sbb
addr16
mov
sbb
mov
xor
shr
adc
test
mov
in
xchg
add
movs
outs
(bad)
jge
jl
cmp
outs
fisubr
pop
aas
popa
jb
retf
add
bound
retf
sbb
lods
loop
popf
aas
call
jnp
sahf
adc
fst
leave
pop
cli
push
(bad)
push
xchg
xchg
mov
mov
shl
mov
fdivr
aas
lods
lods
pop
mov
jle
ret
lods
mov
lds
sahf
repnz
adc
repz
stc
iret
mov
dec
dec
pop
fcmovnb
dec
adc
or
loope
add
pop
or
pop
fsubr
and
mov
into
mov
or
stos
jge
lods
test
jns
xor
shr
pop
adc
loopne
cli
mov
adc
daa
test
dec
jo
ins
rol
mov
mov
add
mov
jle
mov
cmp
in
sub
xchg
enter
(bad)
add
ins
inc
mov
jae
sbb
(bad)
push
(bad)
jb
nop
mov
dec
mov
and
rcr
fst
js
pop
xchg
popa
shr
jl
xchg
sbb
sbb
int
retf
scas
test
xor
dec
fcmove
ins
push
fld
ret
mov
sbb
in
or
ret
xor
test
xor
xor
jns
adc
loope
hlt
inc
and
xor
sub
out
loop
sbb
(bad)
and
cmp
loop
mov
sbb
sub
idiv
push
jl
mov
dec
jo
pop
cmp
or
test
ror
jmp
movs
jns
je
push
scas
ror
xor
xor
jle
jmp
mov
fld
mov
sahf
pop
in
es
add
xchg
pop
enter
(bad)
repnz
or
repz
mov
cmp
cmc
std
popa
test
pop
rcr
push
lea
push
dec
mov
cmp
jmp
push
rcl
sbb
push
xchg
out
in
retf
repz
fsubr
adc
out
jle
test
ja
xchg
sbb
stos
loope
(bad)
push
popa
mov
repnz
sbb
jns
mov
dec
sbb
and
mov
mov
out
sar
enter
out
jl
dec
jne
add
fldenv
out
mov
scas
xchg
mov
lahf
cdq
retfw
shr
jb
mov
jae
push
imul
in
or
jmp
sbb
iret
sahf
pop
ja
ret
and
pop
push
out
mov
shr
sub
call
mul
add
scas
popa
aaa
pop
stos
ins
cmp
mov
ret
jp
pop
sub
or
xchg
sbb
push
push
xchg
ja
jno
xchg
sbb
inc
push
push
mov
jne
mov
ret
mov
push
sub
bound
retf
jo
bound
or
(bad)
ja
addr16
(bad)
jmp
cmps
arpl
or
cmp
cli
shld
sbb
adc
cld
movs
push
cmp
int
add
mov
(bad)
rol
pop
jbe
sahf
and
dec
(bad)
cmc
pop
ins
(bad)
mov
adc
enter
add
ds
adc
xchg
mov
inc
mov
or
dec
loope
push
aam
sub
push
iret
pop
add
mov
adc
in
push
xchg
ror
ins
xchg
xchg
mov
(bad)
jecxz
stos
aad
or
or
cmp
cmp
push
pop
and
mov
fadd
es
jb
xchg
add
aad
call
repnz
inc
push
adc
and
dec
inc
and
loop
into
adc
mov
mov
add
adc
xchg
or
es
sub
aaa
std
mov
inc
xor
sbb
mov
mov
ret
mov
jnp
hlt
mov
dec
jp
and
mov
sbb
mov
pop
inc
cwde
or
es
int
cmp
cs
jnp
aam
mov
dec
mov
popa
lock
xor
ficom
sbb
addr16
xlat
daa
rcl
cmp
scas
push
int
mov
cld
repz
pop
jg
out
nop
jnp
add
fdiv
mov
shr
sub
out
push
jp
push
mov
int3
ror
les
jle
sbb
call
scas
mov
xchg
mov
loop
and
and
rol
push
ja
inc
sahf
ret
test
cmp
xchg
jge
push
sbb
mov
cmp
int3
imul
mov
pop
or
test
je
sub
push
mov
pop
aam
cmp
inc
cli
jb
push
xchg
enter
mov
cmc
jp
fs
fldcw
add
cmc
push
mov
cli
pop
jge
mov
jbe
ret
ds
ret
fwait
aam
pop
dec
imul
or
xor
mov
test
jbe
mov
fidivr
cwde
xchg
aaa
call
mov
call
add
lahf
sub
inc
cmp
sbb
in
in
cmp
and
add
aas
dec
jg
pop
mov
addr16
nop
or
dec
cmp
cwde
xor
fld
dec
add
mov
shl
stos
lahf
jmp
xor
push
cmp
adc
sub
add
call
fwait
cmp
mov
ss
scas
das
xchg
adc
and
test
jnp
sti
fdiv
mov
fadd
das
repnz
stc
pop
sbb
das
sub
ins
cmp
ja
std
out
(bad)
cmp
xor
push
popa
int3
or
sub
dec
jmp
xchg
mov
mov
(bad)
push
stc
das
cmp
ja
dec
out
icebp
push
mov
jb
retf
or
fld
adc
pop
dec
scas
mov
adc
scas
adc
lock
cs
or
mov
push
(bad)
out
jnp
jl
pop
or
xor
inc
sbb
leave
xchg
xchg
push
ins
xor
data16
test
push
add
shl
ds
sbb
jmp
shl
inc
push
cmp
daa
mov
xchg
xchg
cwde
mov
sbb
sbb
or
stos
pop
cwde
sub
iret
add
mov
jne
(bad)
push
inc
sar
adc
and
xor
pop
addr16
rcr
pop
das
xor
aam
push
retf
div
stos
ror
movs
imul
mov
mov
mov
cmps
ds
(bad)
xor
ret
cld
xchg
movs
adc
jp
scas
mov
adc
ins
jns
inc
loop
pusha
jecxz
(bad)
push
nop
std
add
and
(bad)
inc
in
mov
out
xor
add
xchg
lea
xchg
push
push
push
sbb
sar
mov
jo
push
cmp
jmp
xor
call
pop
cmp
inc
mov
mov
shr
dec
repnz
adc
fdivr
fadd
std
imul
into
and
ds
fwait
test
inc
mov
lods
mov
sbb
sub
scas
ins
sbb
mov
or
dec
sub
leave
and
loope
sbb
and
je
dec
imul
push
sahf
jl
lods
aas
pushf
and
inc
popa
mov
ret
fmul
mov
scas
or
test
outs
(bad)
into
jmp
or
call
dec
dec
mov
jns
add
cmp
mov
sbb
or
fadd
bound
imul
or
in
jg
mov
ins
pop
push
and
in
pop
stos
test
pop
mov
fcomp
sub
std
inc
nop
and
ja
das
ss
call
inc
adc
jbe
inc
jbe
cwde
pusha
push
lea
mov
and
fld
push
mov
push
sub
cmp
xlat
or
mov
pop
js
and
int3
cmp
sub
outs
cmps
out
cmc
dec
ins
repz
nop
or
comiss
outs
outs
or
stos
inc
ins
push
ins
mov
call
stos
ret
ss
out
xchg
or
hlt
ins
mov
nop
inc
or
sahf
add
je
xchg
std
inc
sahf
nop
(bad)
jb
call
mov
mov
dec
aas
or
(bad)
outs
stos
mov
shr
xor
loopne
adc
pop
pop
retf
psrlq
xor
rol
xor
es
cli
jmp
adc
add
or
sar
(bad)
loop
inc
imul
jge
lea
mov
sbb
lds
mov
mov
test
lock
or
arpl
inc
or
int3
push
les
cdq
xor
test
in
and
test
jge
clc
jg
stc
js
loopne
mov
cs
jle
or
inc
xchg
mov
jmp
(bad)
cli
dec
fwait
pop
scas
in
in
xchg
push
mov
xadd
xor
aas
add
xor
js
add
jo
and
xor
hlt
jle
jb
sub
(bad)
fistp
cmp
es
std
loop
mov
adc
mov
pop
jb
js
or
and
rcl
pop
jmp
sbb
sub
xor
and
cs
sar
mov
pop
neg
in
in
(bad)
xchg
pop
pop
leave
mov
xchg
sub
inc
sub
aaa
cwde
and
jnp
repz
stos
push
sbb
repz
arpl
xchg
push
and
and
jbe
mov
or
add
int
call
cmp
lahf
rcr
cld
call
and
pop
aam
out
retf
icebp
mov
imul
bound
retf
pop
inc
hlt
fwait
test
adc
shl
add
push
aam
inc
add
repz
sbb
cld
and
scas
pop
sub
push
retf
arpl
shr
xchg
add
mov
call
sub
fst
mov
dec
jle
pop
mov
sub
aas
mov
inc
xchg
add
pop
mov
bound
cwde
mov
sbb
and
mov
fwait
arpl
mov
fidivr
xchg
sub
sub
inc
cli
add
out
mov
xchg
sub
hlt
sbb
int
mov
(bad)
(bad)
scas
imul
lds
pop
xor
mov
push
inc
ds
aaa
rol
(bad)
adc
stos
sbb
(bad)
cs
mov
jae
add
movs
push
outs
repnz
sbb
sbb
sbb
xchg
jmp
sub
xchg
loope
dec
inc
sbb
sbb
add
cmp
and
xor
ror
adc
mov
icebp
adc
sahf
sbb
jmp
bound
ins
cld
fsubr
stos
addr16
pop
stos
xor
xor
sub
pop
into
and
push
retf
inc
and
cmc
aas
xlat
addr16
nop
mov
jmp
sub
cmps
mov
cmc
mov
mov
mov
lods
pushf
jge
mov
inc
xchg
test
fild
cs
jge
sub
mov
aam
cmps
fadd
iret
ror
dec
retf
pop
ret
mov
popf
mov
in
pop
cmp
or
arpl
test
ret
or
out
push
out
inc
enter
movs
imul
inc
retf
lock
arpl
(bad)
aaa
jae
xchg
xchg
and
fbstp
stc
inc
int
inc
scas
cwde
movs
dec
lods
jge
ret
push
aas
mov
pop
sbb
(bad)
repnz
mov
or
pop
dec
sar
mov
mov
mov
scas
dec
sub
in
or
clc
pushf
mov
push
add
sbb
cmps
mov
lock
dec
pop
add
imul
pop
mov
add
add
sbb
je
pop
loope
imul
cld
(bad)
and
cmps
inc
dec
neg
add
mov
add
mov
and
mov
xchg
rcl
push
dec
aad
sar
adc
dec
les
lock
and
es
leave
add
pop
pop
rcr
sbb
in
dec
mov
push
lods
dec
data16
xchg
pop
pop
cmc
cmp
aad
add
fdivr
outs
add
jnp
(bad)
cmp
lea
sub
jp
aad
inc
cmp
xor
(bad)
out
outs
scas
adc
dec
call
adc
(bad)
jo
sub
inc
es
ja
and
test
out
(bad)
cmp
xchg
xchg
sub
xchg
aas
xor
leave
dec
mov
dec
cmps
(bad)
call
pusha
ja
mov
ins
in
push
enter
or
imul
push
aas
dec
push
(bad)
je
mov
mov
into
data16
mov
div
xor
mov
and
movhps
xchg
mov
call
iret
enter
or
xchg
xor
gs
push
sub
xchg
arpl
int3
xor
adc
lea
je
adc
fs
inc
in
repz
inc
das
aas
(bad)
jmp
call
adc
ja
sbb
rol
dec
jno
sbb
lahf
mov
xchg
pushf
imul
dec
fisttp
ds
push
lods
stos
cmp
dec
inc
fs
jne
cmp
or
inc
test
sbb
xchg
movs
and
scas
stos
addr16
mov
rcl
or
or
std
(bad)
mov
popa
add
inc
movs
popa
(bad)
pusha
add
inc
jo
push
aas
fiadd
popa
pop
cli
sbb
cmp
sub
mov
sub
jle
sahf
cmp
out
sahf
pushf
dec
in
clc
mov
ss
test
scas
cmps
jo
or
arpl
inc
pop
hlt
or
clc
test
jae
outs
jecxz
pop
repz
dec
sub
mov
shr
in
jl
stc
pop
inc
hlt
scas
jb
push
push
sbb
jbe
cmp
push
call
add
or
xchg
repz
loopne
addr16
cmp
sub
mov
jp
inc
mov
dec
ret
in
pop
jge
xchg
rep
sub
cmps
push
std
mov
dec
mov
gs
xor
inc
push
stos
dec
xor
xor
pop
add
cwde
or
and
jge
jnp
ins
cli
push
sti
sbb
add
into
sub
mov
into
pop
loopne
dec
fstp
pop
sub
cdq
retf
jmp
imul
cmp
cmp
dec
mov
xlat
sbb
ds
mov
scas
loope
adc
adc
stos
sub
adc
jnp
ins
jle
mov
sub
data16
retfw
jno
rol
mov
dec
scas
(bad)
movs
mov
imul
and
shr
imul
mov
aaa
adc
(bad)
jmp
outs
sub
rol
mov
ficom
sub
push
dec
mov
pop
in
rol
outs
add
jno
xor
pop
stos
or
pop
mov
jl
js
xor
sub
mov
popa
mov
jl
shr
pop
sub
and
ret
cmp
cld
fisub
and
pusha
sbb
mov
dec
mov
jne
xchg
lds
lds
fisubr
jb
and
dec
out
push
stos
mov
repnz
lock
or
pop
cwde
jp
inc
or
cmp
int
lea
cmp
loopne
xchg
adc
mov
pop
fld
mov
sti
cwde
sahf
mov
sbb
add
pop
js
pop
dec
jo
xchg
xchg
add
xchg
sub
push
test
and
stos
cmp
lods
dec
fadd
mov
cmp
cmps
fstp
cmp
test
or
xchg
scas
inc
and
mov
cmc
mov
pop
mov
push
movq
adc
mov
adc
mov
jne
adc
mov
push
mov
mov
jp
add
jg
inc
int3
movs
les
ja
ss
stos
pop
mov
adc
or
fdiv
jg
repnz
(bad)
cwde
push
xor
jp
xor
stos
fimul
(bad)
stos
cs
pop
je
ficomp
cmps
and
aam
push
mov
ret
push
int
cmp
cwde
lahf
(bad)
(bad)
sbb
mov
nop
xchg
and
jl
and
pop
pop
movs
out
das
push
or
xor
push
mov
es
fist
xor
adc
arpl
lock
push
mov
jo
push
scas
push
adc
sahf
jmp
pop
jbe
sub
push
pop
rol
aad
nop
sub
sbb
cmp
bound
pop
leave
cmp
cmps
pop
xchg
sbb
mov
pop
lods
js
mov
mov
aad
lea
jb
aam
hlt
fsub
jmp
xor
pop
dec
push
add
xor
jle
sti
scas
je
(bad)
dec
call
adc
xor
xchg
adc
xchg
mov
push
mov
xchg
retf
lock
pop
imul
mov
dec
xchg
repnz
int
int
mov
out
inc
pop
mov
jmp
adc
jne
nop
repz
xor
retf
jae
(bad)
outs
nop
jg
jns
js
ins
xchg
dec
push
movs
mov
xor
xchg
jo
push
mov
xchg
mov
ins
xor
fs
repnz
cdq
push
jecxz
mov
mov
imul
adc
push
rol
gs
push
jb
neg
mov
add
jae
aaa
pushw
xor
inc
jae
mov
movs
push
stos
jo
inc
cmps
fbstp
int3
bound
mov
xchg
jo
adc
scas
and
scas
adc
fidiv
dec
movs
cmps
sbb
movs
loop
mov
xchg
cmp
in
add
out
scas
aas
bound
dec
retf
adc
mov
pop
mov
push
fistp
mov
or
ins
outs
dec
stc
fucomp
adc
cmc
(bad)
call
js
leave
pop
dec
or
xchg
or
or
mov
(bad)
retf
iret
(bad)
sti
hlt
(bad)
jmp
adc
mov
imul
mov
enter
pop
fstp
mov
push
sbb
icebp
and
xor
sub
dec
in
cmp
leave
lds
push
cwde
lahf
test
xlat
xchg
jl
push
push
jge
mov
add
cdq
into
lods
retf
retf
push
adc
mov
inc
in
dec
pop
jg
das
jp
loopne
shl
inc
inc
test
dec
inc
test
xchg
(bad)
(bad)
loope
adc
push
pop
mov
push
mov
xchg
loope
jg
xor
(bad)
ds
jns
enter
push
dec
jl
cmp
lods
ud1
xor
adc
ja
mov
test
dec
inc
inc
add
pop
xchg
xor
xchg
loopne
stos
push
das
jbe
lods
jmp
add
mov
dec
(bad)
scas
sub
xlat
xchg
out
jmp
jo
lahf
js
pop
int
xchg
jns
mov
inc
sub
lds
test
jecxz
jbe
fs
push
sub
loope
cmp
inc
fwait
loop
ds
or
retf
les
adc
ja
xor
sub
stc
or
and
fld
test
imul
stos
das
jle
inc
jne
std
rcl
push
xor
xor
lahf
cwde
shr
stos
into
mov
add
ret
push
cmp
fst
das
repz
lods
jns
fs
clc
ret
(bad)
mov
xchg
int
sbb
mov
pop
xchg
nop
scas
xchg
fmul
not
stc
and
enter
add
aas
fimul
jg
pop
mov
cmp
sub
xor
out
rcl
bound
(bad)
xchg
aam
enter
dec
iret
mov
xor
xchg
mov
mov
test
call
inc
gs
loopne
data16
int
xchg
mov
pop
push
ja
es
je
(bad)
mov
lods
cmc
pop
cwde
retf
call
je
inc
ss
sub
test
and
sahf
or
cmp
cwde
sti
mov
push
lock
add
(bad)
std
stos
test
ins
sub
dec
call
nop
xlat
pop
pop
shl
push
sahf
fdiv
push
jl
xchg
loop
adc
push
mov
fmul
fldenv
xchg
jb
sub
pop
mov
jg
lods
lods
aaa
jmp
xchg
push
jbe
dec
les
mov
stos
in
mov
push
ja
cwde
adc
cmp
jbe
das
retf
daa
and
aam
scas
or
cmps
add
mov
imul
mov
jnp
pop
pop
or
mov
cmp
dec
dec
out
aaa
test
cdq
loopne
dec
pusha
and
loope
lock
stc
retf
je
sar
push
pop
cli
popf
mov
adc
inc
sub
xor
mov
(bad)
mov
sub
mov
lods
or
out
jmp
stos
test
mov
xor
mov
ffreep
int
xor
mov
nop
ins
xchg
pop
mov
adc
dec
addr16
rcl
popa
test
cmp
jae
aam
std
xor
popa
xchg
popf
adc
neg
dec
and
push
cs
out
loop
outs
adc
fwait
sub
push
or
inc
or
test
iret
js
push
xlat
cwde
mov
in
mov
xor
xchg
ja
adc
popa
stos
pop
mov
enter
mov
xchg
mov
adc
push
xchg
outs
push
ret
ss
aaa
out
jle
push
sbb
cdq
inc
fs
xchg
scas
and
and
fidivr
dec
mov
sar
call
stos
arpl
adc
or
inc
pop
pop
pop
push
mov
lahf
mov
sahf
add
test
jle
inc
mov
enter
stos
dec
inc
test
jg
or
jno
mov
or
adc
mov
jo
test
inc
call
aas
mov
rol
test
or
ficom
add
and
xor
inc
mov
push
and
jmp
test
nop
ret
test
stos
pop
push
cwde
mov
dec
fwait
cwde
hlt
pop
mov
ss
(bad)
cmps
xchg
sub
xchg
and
lods
jge
ss
pop
and
pop
or
inc
jl
mov
jge
rcr
sub
mov
cmp
cmc
dec
mov
xchg
or
add
xchg
xchg
mov
sbb
cmp
inc
pop
pop
fs
out
bound
and
mov
dec
lods
jecxz
test
sbb
sti
cmp
add
adc
xlat
scas
in
imul
mov
or
mov
pushf
js
daa
add
fnstsw
push
aam
or
ins
pop
jns
out
cmp
or
cmp
sbb
add
cmp
jp
daa
push
repz
xchg
retf
sbb
mov
push
cdq
adc
sbb
sbb
aad
bound
or
ins
and
add
out
mov
repnz
inc
push
icebp
shl
mov
push
pop
inc
inc
mov
jne
je
cli
daa
sar
or
xchg
int
ss
in
cld
adc
hlt
sub
scas
cwde
jg
outs
fwait
stos
test
ret
cmps
adc
or
dec
arpl
push
adc
mov
cmp
into
call
dec
(bad)
pop
mov
dec
dec
outs
or
or
mov
and
arpl
push
jge
scas
xchg
in
scas
push
(bad)
in
xchg
mov
mov
daa
test
test
cli
gs
into
subps
inc
sub
pop
adc
dec
adc
icebp
pop
cmp
loopne
mov
jg
xor
cmp
gs
fwait
push
cmp
pop
pop
adc
outs
jp
mov
xchg
stos
cmp
mov
in
mov
fisubr
and
xor
add
ret
mov
shl
lock
repnz
pop
inc
leave
mov
addr16
call
cmp
dec
xor
add
xchg
inc
icebp
mov
cli
iret
fstp
push
mov
retf
arpl
hlt
adc
in
(bad)
xchg
sub
ret
pop
movs
out
loope
int3
mov
xor
pop
cmp
aad
lea
js
cmps
xorps
arpl
inc
xlat
pop
mov
sti
mov
dec
lods
sub
in
inc
xor
mov
adc
out
mov
ins
sub
xor
sub
pop
jge
lock
jg
pop
je
xchg
mov
dec
(bad)
mov
(bad)
sub
in
mov
loopne
sub
mov
int3
pushf
test
xchg
xchg
push
cmps
(bad)
sub
in
scas
xchg
fld
sub
mov
cld
je
push
inc
lods
lods
jp
daa
loopne
jb
enter
xor
cwde
jp
add
leave
movs
lds
test
cmps
in
sub
add
ins
call
fist
cmc
mov
ins
scas
and
(bad)
int
inc
add
sub
push
xor
inc
xor
jo
xor
xchg
and
movs
loop
add
repz
out
test
sti
popa
and
cs
shr
ficom
cdq
pop
in
popa
ds
cdq
fisub
push
movs
inc
js
lds
fistp
push
outs
leave
mov
(bad)
ds
fyl2xp1
popf
aaa
jne
xor
adc
out
and
fst
pop
xlat
xor
sbb
call
inc
jmp
mov
and
movs
pop
xor
xchg
inc
lds
dec
xor
sub
mov
out
add
xor
mov
fs
sub
dec
clc
adc
je
jge
fadd
cdq
sbb
inc
lds
std
pushf
pop
pop
pop
and
je
or
pop
pushf
mov
or
jp
mov
or
cwde
inc
add
aas
dec
xor
dec
retf
leave
movs
jb
inc
scas
inc
aam
enter
int3
fcom
mov
rcl
leave
or
lods
lods
mov
in
cmp
out
push
cmp
push
cmc
loop
jmp
lea
(bad)
add
mov
or
loope
icebp
int
add
sub
aam
mov
int
inc
mov
cs
cmp
repnz
xchg
fldcw
push
sub
or
cmp
in
push
cmp
and
jo
xchg
arpl
sub
ins
pop
adc
(bad)
(bad)
xchg
mov
xchg
sbb
repnz
call
shr
mov
xchg
jbe
dec
cmps
mov
push
mov
punpcklbw
daa
jle
xor
jno
(bad)
xor
daa
pusha
enter
push
dec
cmps
inc
jns
imul
in
cmps
lods
ret
push
int
xor
dec
cmp
repz
mov
add
js
out
mov
scas
push
(bad)
mov
imul
adc
popf
or
and
and
into
sub
push
imul
xlat
adc
xchg
jmp
or
pop
or
jae
rcl
scas
inc
scas
popf
add
(bad)
mov
pop
cmp
mov
mov
pushfw
or
outs
and
add
pop
mov
push
and
stos
test
arpl
fldenv
mov
pop
mov
add
inc
inc
out
ss
xor
repnz
call
jns
outs
sub
lock
cmps
cld
and
ins
repnz
mov
or
add
inc
pop
(bad)
mov
push
or
loope
jb
mov
dec
xor
popf
aas
jo
xor
cli
stos
or
push
cmp
push
and
je
push
fbld
mov
mov
enter
outs
push
xchg
xchg
push
out
std
adc
cli
jg
cdq
inc
js
hlt
mov
or
xchg
retf
ss
jmp
ficom
in
pop
dec
(bad)
bound
mov
(bad)
lods
sbb
or
add
(bad)
fucomip
xor
cwde
xor
xchg
dec
or
dec
xchg
jmp
pusha
mov
(bad)
fcom
das
stos
push
movs
dec
cmps
in
nop
pop
or
nop
pop
popf
dec
mov
dec
and
sbb
inc
dec
xor
jmp
cs
das
mov
mov
arpl
popf
vgetexpss
jno
inc
and
adc
or
inc
call
push
inc
jns
in
pop
push
js
cmp
push
inc
nop
fldenv
add
sub
ins
and
lods
(bad)
or
fld
not
movs
div
mov
or
inc
loop
push
sbb
data16
inc
icebp
cmc
jb
sbb
add
imul
xor
mov
aam
xor
(bad)
pop
stc
movs
or
out
or
leave
ja
push
mov
or
fdivr
mov
cld
popf
imul
outs
cmp
into
fldenv
cmps
cmps
ja
or
inc
or
out
mov
jmp
sbb
xchg
cmp
arpl
sub
lahf
xchg
jmp
inc
call
and
push
ins
xor
ds
in
(bad)
adc
inc
xor
(bad)
jns
mov
lea
js
and
data16
movs
xor
jmp
sub
popa
mov
rol
push
dec
je
cs
xchg
retf
lds
xchg
mov
mov
fwait
imul
mov
dec
jge
push
mov
int3
repnz
and
retf
inc
in
add
pop
cld
xlat
fimul
jb
iret
jnp
(bad)
mov
inc
mov
shl
jge
jmp
scas
cmp
lea
fwait
pop
pop
out
xchg
mov
cmp
cmp
sbb
adc
fidiv
or
(bad)
out
mov
jb
xchg
adc
(bad)
(bad)
jb
repz
mov
cmp
push
dec
call
ror
int
repz
ret
(bad)
jecxz
lock
inc
jle
mov
int3
lahf
leave
add
xor
enter
add
sbb
mov
dec
fsub
test
push
sbb
and
sahf
leave
jo
or
cmp
es
xchg
fidiv
(bad)
and
shr
adc
cli
fs
jae
call
pop
(bad)
(bad)
fldcw
mov
pushf
jnp
sub
sbb
jmp
or
ror
pop
imul
pop
push
xor
into
(bad)
lea
(bad)
ficomp
pop
jno
test
or
cmp
lods
push
mov
sbb
sub
add
add
jl
cld
nop
movs
mov
into
(bad)
push
das
movs
xchg
pop
pusha
std
or
ins
in
and
ins
imul
push
xchg
pop
mov
lock
xchg
outs
adc
xor
jecxz
jo
lods
cmp
pop
inc
pop
stos
sbb
inc
push
and
jp
jns
or
and
jbe
loopne
xor
jno
std
cmp
mov
and
mov
inc
int
sub
call
stos
xchg
mov
sti
jge
add
xor
push
xchg
pushf
ja
cmp
scas
add
addr16
inc
outs
pop
das
xchg
fucomi
fwait
call
test
sbb
sbb
mov
adc
fisttp
cdq
cmp
ja
ins
xchg
push
sbb
mov
pop
fs
and
sbb
mov
add
or
lds
movs
lock
scas
cmp
adc
cli
xor
bound
lds
sbb
xchg
xchg
xchg
(bad)
rcr
nop
dec
clc
rol
push
js
test
(bad)
loope
cmps
sub
mov
movs
mov
dec
mov
fild
add
loop
cmp
mov
sub
push
pop
fidiv
sahf
mov
jo
gs
sbb
ss
cmp
jbe
loopne
sbb
mov
fdiv
cmp
pusha
popf
test
pop
and
lods
cmps
mov
inc
data16
and
jmp
test
std
push
out
dec
repnz
outs
ins
mov
arpl
cmp
sbb
xchg
mov
ins
rol
hlt
mov
and
add
mov
sar
pop
mov
inc
sub
or
and
lods
in
jne
aaa
adc
(bad)
leave
push
aaa
scas
xor
inc
pop
sub
sbb
adc
sub
or
push
cmp
cmp
in
add
or
std
ds
test
mov
in
mov
mov
or
push
xor
setb
cld
xor
daa
fcom
pusha
dec
call
cmp
outs
and
mov
inc
mov
jecxz
mov
leave
test
xchg
and
(bad)
aam
push
int3
repnz
in
int
mov
sti
pop
jl
sbb
ins
cmp
test
cmp
ficomp
in
rcl
test
jno
test
enter
sbb
ret
fnsave
js
sahf
add
jp
cld
mov
jl
das
sub
stos
out
shr
inc
mov
mov
fwait
adc
repz
call
cmp
repz
into
mov
(bad)
outs
cmp
inc
out
imul
lock
add
jecxz
sar
jmp
rcr
push
pop
sbb
shl
imul
pop
out
sbb
je
xchg
out
pop
jo
stos
pop
mov
stc
cmps
pop
mov
and
movs
retf
ja
lds
std
cld
push
and
sbb
aad
fst
es
(bad)
mov
sub
mov
(bad)
test
xchg
and
mov
lea
dec
pusha
push
add
ss
mov
xchg
imul
mov
jo
sbb
mov
cmps
sbb
mov
jmp
mov
test
cld
cmp
mov
fdiv
lds
retf
xor
push
dec
and
adc
jg
mov
pop
push
imul
loopne
mov
xchg
das
rol
jno
fsubr
jo
in
xchg
ficom
and
jnp
jg
rcr
ror
mov
cs
inc
fdivr
test
test
loopne
adc
fisub
in
repz
pop
movs
add
ds
add
dec
add
outs
cmps
ret
inc
repz
inc
cdq
popa
xor
xor
sti
add
adc
pop
lahf
bound
in
sub
popf
mov
sub
push
aad
mov
nop
adc
jno
push
sahf
out
sbb
push
jbe
(bad)
in
in
push
mov
fldcw
ins
ficom
mov
jns
ret
pop
data16
loopne
push
das
add
sbb
cmc
fs
shr
jbe
ret
add
xchg
loop
cmps
xlat
mov
test
xor
adc
je
mov
dec
fimul
pop
loope
jae
clc
add
add
dec
or
xor
push
inc
test
nop
repnz
sub
icebp
into
in
adc
fst
ins
jo
xor
cmc
or
add
aaa
add
push
push
push
mov
xchg
in
jp
rol
ins
ss
in
xor
xchg
sub
or
test
xor
mov
stos
push
push
out
or
add
or
std
cmp
mov
xor
arpl
test
(bad)
not
cmp
xchg
je
lahf
sub
(bad)
and
nop
ror
sbb
js
jne
lods
mov
push
out
add
pop
pop
cmp
(bad)
mov
or
pusha
push
jo
mov
pusha
add
sbb
lea
mov
jmp
loope
sbb
stos
test
mov
retf
xchg
ss
mov
sbb
jo
idiv
adc
fadd
(bad)
shl
pop
test
(bad)
adc
pusha
aad
icebp
icebp
mov
sbb
das
in
scas
jmp
pop
inc
and
jecxz
sbb
and
lods
or
out
pop
retf
inc
fcmovbe
in
xchg
mov
popf
(bad)
es
mov
fsubr
jne
sti
clc
dec
fsubr
leave
stos
xor
xchg
cld
pop
data16
or
push
into
scas
aam
mov
adc
mov
retf
loopne
mov
xchg
jns
ins
js
mov
test
sub
pushf
test
sub
rcr
dec
jmp
xor
jae
movs
pop
mov
sbb
cmp
xor
and
mov
in
push
xchg
jbe
xchg
test
inc
pop
les
jmp
pop
inc
inc
mov
dec
loope
cmc
scas
lea
inc
outs
loopne
jbe
cmp
jge
xlat
adc
retf
sti
inc
inc
cli
inc
jg
(bad)
sbb
(bad)
stc
das
jno
idiv
dec
sub
call
or
jns
adc
mov
sbb
xor
push
jecxz
cmp
arpl
pop
leave
je
push
cmp
push
add
sbb
or
das
fidiv
adc
icebp
push
ins
ins
test
test
rol
ins
test
fstp
mov
das
push
mov
dec
leave
or
test
out
sbb
cs
hlt
fistp
mov
out
int
push
js
(bad)
push
test
test
addr16
push
sbb
push
in
lahf
dec
adc
in
pop
adc
(bad)
mov
daa
adc
add
movs
repnz
xchg
imul
mov
dec
in
jecxz
(bad)
fwait
aad
jmp
cmp
mov
and
lods
push
int3
xchg
pop
sbb
cld
test
xchg
xchg
cmp
sub
push
push
xor
jns
adc
adc
jne
push
or
adc
inc
cmp
dec
or
mov
test
sbb
les
push
or
mov
pop
mov
mov
sub
cwde
ret
mov
shl
mov
sbb
nop
xor
out
push
pushf
ret
inc
jae
dec
lock
mov
outs
(bad)
and
das
enter
adc
(bad)
jle
mov
je
inc
leave
dec
mov
or
push
into
pop
xchg
dec
clc
inc
cmps
test
out
dec
dec
dec
movs
fbstp
scas
mul
pop
stc
xlat
cmp
xlat
inc
fs
mov
mov
retf
mov
xchg
pop
xor
mov
cmp
inc
mov
adc
lods
aas
lock
pop
jnp
fidiv
add
sub
jge
hlt
int
jns
scas
sbb
ja
arpl
and
(bad)
movs
jb
fiadd
pop
bound
rcr
mov
pop
(bad)
pop
sub
jmp
fs
retf
es
pop
fild
gs
cmp
dec
cs
data16
add
add
mov
mov
ja
clc
jbe
ror
mov
adc
(bad)
jge
mov
test
mov
dec
push
movs
(bad)
sub
sbb
jns
push
push
push
xchg
(bad)
into
outs
sub
mov
jne
sti
inc
idiv
dec
xor
dec
fsubr
push
cdq
lds
imul
mov
inc
popf
dec
aas
aam
lods
(bad)
mov
jmp
inc
cmps
lock
cmp
ss
imul
pusha
addr16
jne
push
in
pop
repz
sub
adc
mov
mov
push
rol
ret
mov
sbb
clc
cmp
fstp
pop
add
cld
lea
mov
sahf
inc
hlt
std
dec
cmc
xchg
pop
mov
xchg
or
and
sbb
jmp
inc
retf
cmps
push
(bad)
xchg
and
mov
or
aas
lods
lods
retf
xor
gs
sbb
scas
hlt
dec
mov
push
retf
fild
ds
or
sub
or
sti
rol
jno
out
and
dec
mov
cmp
pop
js
and
xchg
sbb
ds
in
pop
xchg
js
aas
repnz
sbb
stos
mov
fcom
mov
xor
mov
sti
sahf
cmps
mov
xchg
int3
fiadd
popf
push
jmp
es
daa
pop
jl
mov
not
imul
cmps
imul
fldcw
mov
mov
fs
add
ror
xchg
mov
jne
shr
dec
cmps
mov
mov
or
jne
mov
pop
stos
or
jg
hlt
stos
jecxz
cmc
popf
mov
or
sar
pop
fnsave
mov
retf
arpl
xchg
mov
call
and
cwde
ds
add
aas
jg
push
pop
loop
aas
fxch
xor
add
sub
outs
dec
mov
dec
aam
fwait
mov
mov
cmp
sti
and
into
fsubr
lods
popa
xchg
push
xor
push
mov
nop
adc
ins
ins
int
and
mov
add
std
adc
xor
imul
jnp
jecxz
les
iret
pushf
nop
arpl
imul
mov
dec
(bad)
call
mov
sahf
iret
pop
push
sub
jo
loope
jmp
leave
inc
sahf
in
mov
pop
shl
sub
psubw
int3
mov
test
fdiv
xor
cmp
popf
or
jle
adc
push
fidivr
dec
out
mov
fwait
outs
(bad)
enter
cld
xor
in
and
inc
inc
mov
mov
xor
in
mov
cmp
or
in
sti
les
add
sbb
rol
sbb
fisttp
and
ret
ret
fsubr
imul
inc
pop
sahf
mov
lods
stos
xchg
mov
push
jnp
fs
mov
and
mov
repz
rcr
mov
and
les
hlt
dec
or
jecxz
or
add
std
test
or
popf
and
pop
mov
push
sbb
push
mov
lea
inc
js
and
lahf
aad
or
cmp
pop
inc
mov
or
mov
repz
ffree
sbb
stc
out
adc
cmp
jge
jecxz
sar
loope
lea
mov
sti
sub
sti
jno
popf
test
repz
xchg
adc
or
dec
and
add
lock
cmp
cmp
loopne
sub
out
pop
lahf
es
test
outs
sub
cmps
out
rol
das
call
sub
sbb
(bad)
xor
test
dec
xor
sub
out
pop
in
sbb
sbb
mov
test
jbe
aas
(bad)
js
test
in
(bad)
sub
inc
(bad)
ret
into
imul
xor
add
mov
xchg
sar
and
xchg
data16
ss
mov
data16
lahf
dec
int3
clc
mov
int
cmp
push
in
clc
push
cmp
popf
jle
stc
jecxz
test
mov
jo
ins
hlt
xlat
pop
stc
mov
sbb
inc
push
xchg
movsx
mov
cmp
cmps
clc
pop
enter
in
fwait
push
jo
clc
repnz
cmp
inc
and
test
clc
jne
and
mov
adc
inc
add
pop
repz
sub
push
add
js
and
int
mov
mov
test
jno
pop
mov
rcr
aaa
aam
(bad)
sbb
ds
push
push
or
sbb
mov
cwde
and
adc
mov
out
clc
retf
dec
rol
push
fisubr
aas
leave
stos
lods
cmp
scas
jb
pusha
int3
jae
adc
xchg
pop
test
int3
cmp
mov
mov
aas
push
lods
popf
pop
pop
mov
or
mov
out
scas
fnstcw
inc
push
jbe
inc
jle
sub
nop
cmp
xchg
add
xchg
ret
pop
outs
(bad)
iret
push
and
stos
adc
mov
test
idiv
mov
icebp
xor
fs
jg
sti
stc
hlt
call
or
test
aam
sub
xor
adc
cmps
xchg
cmp
cwde
mov
adc
mov
or
repnz
bound
test
jo
call
or
xchg
in
jnp
lods
adc
inc
or
push
retf
call
ficom
jecxz
scas
imul
pusha
inc
xor
enter
ins
(bad)
adc
lahf
movs
cmp
pushf
lods
cmp
cmp
mov
mov
add
or
sbb
cmps
cmp
mov
sub
jmp
aam
sti
lahf
(bad)
push
inc
jp
sbb
lock
add
pop
ja
mov
out
xor
jnp
xchg
push
lods
dec
add
cmp
movs
inc
lahf
lahf
pop
rcl
push
rcl
cs
cmp
jbe
outs
pop
lods
mov
inc
(bad)
and
push
out
out
cld
push
mov
xlat
and
stos
movs
jns
das
cmp
sub
sub
xchg
repnz
sub
or
sub
cli
retf
(bad)
clc
gs
and
adc
ss
out
movs
inc
mov
push
repz
loope
imul
mov
(bad)
cmp
lods
or
das
out
fsubr
xor
pushf
sub
je
inc
xchg
dec
sbb
lds
jo
popa
ret
sbb
sub
scas
adc
fidivr
arpl
sub
loop
int
test
dec
mov
add
and
xor
loopne
jae
sub
jg
mov
aas
std
stos
cmc
pop
shl
ja
inc
cdq
fwait
pop
pop
aaa
sbb
pop
mov
cmps
lods
inc
shl
les
inc
scas
adc
sub
aas
test
cmp
or
or
mov
fdivr
push
aaa
ror
mov
adc
sar
inc
push
fidiv
pop
(bad)
call
sbb
mov
(bad)
rol
inc
or
adc
sbb
popa
and
cld
rol
xchg
out
into
lock
pop
adc
sub
mov
dec
cmp
inc
mov
scas
scas
mov
shr
enter
mov
sbb
xchg
dec
sub
out
sub
stos
fstp
test
jmp
xor
cmp
jnp
pop
repnz
mov
int
cmp
fst
mov
fcmovne
retf
or
pop
lea
sub
loop
movs
xor
jmp
mov
or
xor
push
fcom
pushf
and
js
retf
jge
mov
mov
ins
js
adc
cdq
push
stos
ins
aaa
add
das
retf
test
stos
dec
aam
xor
jle
xor
cdq
test
jno
pop
pop
mov
fs
inc
repz
or
mov
mov
into
jnp
pop
push
lods
jg
icebp
out
gs
jecxz
xchg
cmp
xchg
add
das
push
fs
adc
mov
inc
shl
dec
fwait
ja
jbe
pop
sbb
xchg
cmp
add
das
sub
cmc
fcom
ret
or
stc
repnz
movs
out
push
(bad)
gs
outs
fwait
mov
outs
nop
test
cmps
scas
xchg
dec
ret
inc
arpl
xor
push
adc
(bad)
aam
pop
pop
fdivr
cmp
push
nop
je
mov
(bad)
push
xor
push
inc
mov
hlt
inc
fisub
in
cmps
dec
mov
sahf
mov
add
std
add
loopne
pop
lock
or
push
in
mov
gs
mov
daa
fisub
stc
sbb
mov
hlt
or
fs
pop
lods
loop
out
mov
call
sar
jle
add
jne
mov
pop
popa
pop
add
fild
push
retf
cmp
push
push
popf
xchg
mov
pop
leave
jecxz
jge
pusha
nop
cdq
xor
sub
in
xchg
repz
push
test
in
mov
jmp
cmp
pop
xor
(bad)
cld
jg
test
icebp
call
jmp
int3
cwde
jnp
popf
stos
je
loope
cdq
or
fs
xor
adc
xchg
pusha
jmp
xchg
or
icebp
loop
push
fcmovb
push
mov
add
in
mov
mov
int3
aad
clc
xchg
inc
mov
push
sbb
clc
sub
push
repnz
dec
dec
xor
jbe
sub
inc
jnp
pop
pop
add
jmp
xchg
lahf
in
in
lds
adc
add
(bad)
ret
jns
add
mov
lods
repnz
cli
jae
cmps
popa
outs
idiv
or
stc
push
mov
xchg
imul
cmps
cmp
rcr
dec
jnp
and
cdq
pop
xchg
mov
(bad)
leave
in
and
mov
fdiv
dec
push
cld
mov
pop
loop
mov
stos
fisubr
pop
lea
es
pop
call
cmc
mov
movs
xchg
pop
pop
xchg
popf
(bad)
push
jg
test
mov
outs
add
pushf
sbb
das
cmc
pop
fld
rol
and
repnz
inc
fidiv
cmp
popf
enter
mov
addr16
cmp
dec
popf
fs
bound
xor
(bad)
outs
inc
enter
scas
retf
xchg
inc
ins
rcl
jl
out
sti
push
push
js
jne
inc
lock
mov
(bad)
add
adc
pop
push
cld
xlat
push
cwde
repz
mov
adc
add
jp
push
inc
sar
inc
jp
movs
jp
call
push
xchg
fcmovbe
push
out
push
dec
jg
cmp
add
inc
mov
std
push
inc
mov
repnz
or
push
or
(bad)
fimul
and
sub
sahf
cmp
iret
outs
movs
dec
shl
or
out
leave
sbb
ja
dec
sbb
pusha
sbb
jmp
push
xor
jmp
test
repz
push
icebp
pop
xor
jge
nop
inc
add
sete
pusha
and
pop
adc
cmp
stos
int
sub
hlt
hlt
pushf
pop
mov
xchg
xchg
and
stos
jmp
out
cmps
inc
call
les
sub
and
pop
pop
cmp
mov
xchg
sub
mul
not
dec
mov
pop
daa
sub
lds
dec
mov
sti
push
xor
pop
js
mov
push
daa
push
movs
mov
loope
cli
popf
movs
adc
mov
outs
dec
aam
pop
dec
repz
fidiv
arpl
neg
aam
and
ss
nop
stc
sbb
fimul
mov
cmp
mov
sahf
cs
pop
adc
or
repz
(bad)
or
adc
push
jecxz
in
gs
cwde
pop
dec
stc
mov
push
dec
mov
cmp
and
or
cmp
dec
xchg
xor
pop
mov
pop
xchg
pand
dec
and
pop
pop
push
outs
xor
aaa
call
loope
stos
test
daa
pop
dec
sti
adc
out
js
mov
cmp
mov
imul
sub
mov
es
cdq
jnp
(bad)
arpl
ds
mov
xchg
lods
lds
mov
or
xchg
sbb
mov
data16
xchg
scas
sub
mov
inc
leave
mov
jmp
adc
rol
xchg
icebp
lock
mov
(bad)
repz
jo
and
adc
rcl
jne
or
out
gs
cmp
jo
cmp
push
add
mov
repz
js
mov
aam
ret
xchg
imul
pusha
scas
or
mov
lods
pop
mov
jp
dec
mov
jno
cmp
mov
aad
mov
inc
pop
(bad)
add
js
dec
sbb
adc
out
xor
or
cdq
add
jae
xlat
scas
adc
cmc
daa
ret
mov
and
jmp
cmc
int
mov
loopne
pop
js
mov
fbstp
dec
ins
jmp
mov
push
mov
ret
(bad)
xchg
ss
daa
loop
test
movs
out
das
add
stos
xchg
fnstcw
mov
push
inc
aad
jnp
push
ss
push
mov
sbb
push
cmp
push
sti
sbb
and
pop
sub
dec
mov
mov
add
jp
jbe
cdq
push
fsubp
xchg
xor
xor
je
sar
mov
mov
fnstenv
mov
(bad)
cmp
jecxz
pop
(bad)
sti
pop
jl
push
test
or
fwait
in
push
cwde
in
ins
jae
pop
add
dec
outs
arpl
push
in
dec
clc
aaa
add
in
adc
mov
mov
inc
mov
push
shl
jmp
(bad)
xchg
mov
or
mov
sysenter
aam
ds
pop
fidivr
test
adc
clc
xchg
(bad)
jp
and
jmp
adc
xor
call
mov
addr16
mov
loope
or
pop
or
sar
jo
add
pushf
neg
int
cmp
jae
dec
shl
push
out
call
lds
and
mov
inc
stos
test
sbb
sub
pushf
jle
iret
inc
jmp
test
dec
data16
add
ficomp
and
xchg
cmp
and
cmp
enter
adc
pop
fimul
stos
push
lahf
(bad)
loopne
les
mov
or
(bad)
test
inc
lods
jbe
call
in
push
in
dec
mov
sub
cli
dec
sub
dec
xchg
push
cmp
and
enter
jle
dec
arpl
shr
jg
ss
xor
aaa
iret
cwde
inc
(bad)
ins
(bad)
div
dec
pop
mov
dec
ror
jp
nop
fistp
cdq
daa
(bad)
mov
mov
inc
push
icebp
inc
push
mov
fwait
xchg
mov
(bad)
call
dec
push
fld
jb
dec
test
pop
push
and
adc
add
ror
xchg
mov
addr16
sbb
add
ror
daa
(bad)
lahf
gs
jno
fsub
mov
out
nop
mov
mov
sub
movs
push
or
xchg
lea
adc
mov
jne
lock
loopne
xchg
cwde
or
mov
in
mov
push
sub
icebp
mov
adc
and
loopne
pop
scas
sub
push
clc
shl
cmps
imul
ffree
jle
ret
sbb
inc
jno
stos
in
dec
inc
add
mov
jns
call
jl
(bad)
xor
sbb
fdiv
push
mov
sahf
inc
mov
mov
int3
xchg
cmps
stc
fnstsw
test
fstp
cmp
sar
jae
fbstp
test
movs
inc
out
adc
jp
xlat
lahf
stc
aaa
hlt
push
mov
xor
cmps
dec
mov
idiv
(bad)
cwde
lock
loope
and
or
aaa
out
jnp
inc
inc
dec
push
jbe
jg
adc
jns
std
pop
inc
xchg
push
andps
lods
lock
lea
mov
jl
fisubr
pop
add
test
mov
outs
addr16
adc
mov
dec
sub
out
ds
mov
inc
lods
jnp
dec
movs
xor
sbb
call
es
mov
fnstenv
in
adc
add
mov
(bad)
icebp
test
push
(bad)
jb
pushf
ficomp
jne
into
or
mov
clc
mov
fs
xchg
ins
shl
fiadd
sti
sub
pop
sub
rol
or
push
ror
repz
nop
mov
mov
inc
mov
pop
or
loopne
adc
sbb
rol
jae
sbb
scas
sti
mov
jmp
dec
dec
lds
adc
stc
inc
push
and
shr
adc
inc
int
int
(bad)
pop
cmp
data16
iret
add
call
iret
in
pop
psubq
sbb
gs
or
sbb
ss
enter
and
(bad)
mov
ja
cmp
cmp
aad
cli
iret
inc
mov
lock
push
inc
xchg
fcom
nop
xchg
imul
cwde
jmp
fdiv
lea
iret
rol
lods
jp
ret
mov
mov
ret
xlat
bound
add
int
fadd
push
inc
mov
inc
and
cmp
movs
loopne
xor
shr
test
lds
push
sub
or
pop
les
int3
pop
jmp
je
fidiv
es
or
iret
lods
fisub
std
test
in
pop
retf
xor
add
data16
cmp
xor
bound
retf
or
cwde
add
test
mov
dec
outs
(bad)
out
imul
lahf
lahf
(bad)
cmps
cmp
fild
dec
leave
mov
adc
and
js
call
jp
and
rcl
rcl
pop
(bad)
iret
mov
mov
xor
pop
mov
sub
(bad)
mov
ret
ss
imul
outs
cli
pop
repnz
cmp
mov
loope
(bad)
int3
(bad)
sti
jl
cli
and
cli
retf
push
inc
mov
xchg
add
pop
xchg
mov
cmp
pusha
inc
and
dec
stc
mov
loopne
ss
in
cmp
arpl
jl
jecxz
je
fdivr
(bad)
push
add
aaa
push
adc
jle
jmp
sub
mov
sub
mov
cmc
and
mov
mov
das
out
adc
das
push
retf
jae
mov
mov
mov
mov
shl
jbe
and
inc
mov
mov
push
jnp
push
aad
mov
dec
jmp
ret
mov
fiadd
sti
std
fwait
call
ret
or
shr
and
jecxz
xor
stos
pop
iret
pop
out
shl
jo
mov
cmp
mov
lock
mov
sbb
test
popf
xor
xor
sbb
jp
je
(bad)
jmp
cs
loope
sti
jae
cmp
push
cmp
out
aas
(bad)
add
mov
dec
and
enter
lods
mov
(bad)
fisub
inc
jp
push
cli
add
call
pushf
lds
pushf
lods
ret
mov
mul
ja
jp
in
rcl
jmp
pop
ins
mov
jno
sbb
aad
ret
(bad)
hlt
int
mov
cmps
inc
fidivr
jle
popf
call
pop
ret
loopne
ret
enter
movs
mov
mov
in
imul
outs
rcr
sub
and
mov
cli
cmc
push
xor
push
xor
adc
sti
adc
or
test
retf
push
pop
pop
or
repz
inc
jne
pop
add
scas
push
sbb
inc
test
and
inc
mov
pop
jbe
mov
lods
xchg
push
push
mov
ret
(bad)
movs
fsub
mov
adc
loop
inc
and
stos
leave
push
jge
and
adc
sbb
and
mov
xchg
and
or
add
inc
and
daa
pop
call
mov
fnstcw
sub
lahf
push
push
icebp
mov
cwde
lea
(bad)
std
js
sbb
(bad)
mov
push
outs
sbb
xor
inc
aad
mov
cwde
(bad)
jns
ss
mov
push
dec
jg
dec
fisttp
fs
inc
jnp
mov
scas
arpl
sti
stos
hlt
outs
call
or
sub
jmp
dec
inc
lods
jecxz
add
ins
mov
shr
mov
mov
cmc
int
push
movs
pop
add
adc
pop
out
or
daa
xor
mov
push
cmc
ins
mov
adc
cld
out
fwait
arpl
iret
add
ds
stc
out
fild
xor
scas
xor
out
mov
pop
mov
jno
cmp
mov
jae
iret
lods
mov
and
gs
xor
pop
cmc
pop
mov
fst
or
imul
sbb
pop
sbb
jle
pop
call
movs
out
scas
ins
inc
jmp
push
pop
cld
call
pop
adc
fadd
movs
add
aas
jno
jbe
(bad)
lods
add
test
lods
nop
dec
sub
cmp
mov
pop
cmps
add
adc
mov
stc
setne
sbb
push
call
cmp
je
je
mov
fist
jge
pop
in
cmc
iret
retf
test
scas
mov
in
cmc
jno
scas
inc
and
clc
xor
retf
js
clc
mov
adc
leave
sub
jne
push
add
lods
push
outs
cvtps2pd
lock
jle
sub
xor
fbld
cmp
mov
inc
cmps
or
jecxz
mov
xor
xor
or
jmp
mov
out
(bad)
loope
push
or
rcl
je
xchg
shl
adc
dec
jbe
dec
retf
jecxz
popa
(bad)
fcomp
(bad)
call
add
push
ds
lods
mov
aad
(bad)
cmps
mov
out
mov
add
movaps
pop
mov
inc
mov
cwde
and
and
push
and
into
xor
xor
test
jae
or
sub
dec
push
sub
mov
push
test
jnp
push
push
lods
and
add
cmc
xor
or
into
mov
ja
push
add
cld
jmp
int3
and
jb
in
add
retf
mov
fisub
das
retf
add
cmp
pusha
add
mov
jmp
call
retf
jmp
jno
xchg
fnstenv
mov
or
stos
stc
xor
xor
xchg
movs
jo
scas
cmps
mov
daa
cmc
lods
mov
icebp
ins
neg
and
push
sub
in
leave
add
cs
jnp
xchg
cs
dec
mov
es
and
or
adc
mov
xor
ins
sub
int
ins
mov
xor
push
sar
jp
xchg
jg
sub
cmps
leave
leave
test
xchg
pop
stos
jb
cli
xor
cmps
outs
test
cmp
aad
call
cmp
aam
mov
pop
mov
sti
add
or
xor
pop
stos
lods
js
jecxz
jbe
pop
pop
xchg
in
(bad)
jp
loope
jne
mov
xchg
pop
sbb
loopne
mov
cmp
enter
adc
add
cmc
fdivr
sub
(bad)
test
call
ror
ins
fs
sbb
or
ins
aas
mov
cmp
jmp
add
ret
adc
mov
or
and
into
jbe
xor
(bad)
or
mov
ja
in
sub
sub
pop
outs
or
mov
add
outs
cld
jle
js
popa
push
aas
push
dec
pop
jmp
push
xor
mov
xor
cli
je
sub
call
add
retf
inc
inc
add
movs
or
cmp
popf
test
mov
xor
icebp
jecxz
xchg
rcr
cwde
mov
mov
and
adc
lods
mov
loop
ja
fist
ret
mov
xor
in
push
nop
jecxz
aam
cs
push
cmps
pop
nop
sbb
outs
fsub
mov
add
es
jmp
add
jle
xchg
xor
push
pop
mov
pop
in
add
and
mov
retf
sbb
push
push
dec
push
dec
cmc
mul
lea
pop
inc
sbb
mov
and
aad
push
(bad)
pop
popf
push
rcr
adc
pop
or
or
fwait
enter
sbb
loopne
mov
shl
js
and
mov
int3
mov
pusha
jnp
retf
sub
mov
mov
(bad)
pop
add
retf
fsub
or
jmp
cmc
jb
pop
outs
or
push
in
pop
push
mov
pop
push
pop
inc
loop
sbb
add
dec
mov
add
pop
xchg
test
sub
adc
sub
jne
lea
dec
lds
imul
xor
aaa
xor
fisubr
sbb
xchg
or
push
jmp
cbw
push
xchg
repz
bound
retf
data16
mov
mov
loop
mov
mov
pop
push
adc
cld
aad
adc
arpl
test
aaa
fwait
sbb
int
xor
aaa
pop
xor
fldenv
mov
add
adc
das
mov
jne
ret
clc
mov
aaa
cwde
add
outs
ja
add
jbe
fcomp
dec
iret
stc
mov
mov
bound
mov
mov
inc
or
lock
shl
mov
ja
das
and
mov
dec
(bad)
out
(bad)
push
jp
add
cmps
push
ins
pop
lea
xor
sub
xlat
pop
add
mov
push
sub
add
in
push
stos
mov
push
(bad)
push
cli
pop
mov
sbb
retf
xor
enter
stos
mov
jle
mov
sub
mov
push
fcmovb
enter
lds
xchg
push
lea
mov
lock
and
adc
sub
clc
pushf
mov
(bad)
mov
inc
lea
out
les
and
xor
shr
xor
and
scas
mov
test
retf
pusha
ja
cld
int3
shl
jle
bound
mov
mov
lock
imul
push
scas
and
push
sbb
ficom
cmc
push
div
movs
xor
dec
out
pop
cs
add
adc
mov
jb
push
xchg
aad
push
pop
or
jmp
movs
call
repnz
call
inc
mov
daa
lea
xchg
imul
xchg
and
mov
pushf
push
aas
add
icebp
sub
dec
jo
gs
sbb
xchg
int
je
ret
dec
dec
jo
pop
sbb
push
sub
out
adc
sub
xor
push
out
popa
mov
test
xor
jbe
mov
fs
adc
push
mov
lods
adc
pop
sub
mov
out
arpl
test
mov
push
adc
lds
call
icebp
repz
add
inc
mov
lea
ret
retf
leave
test
and
inc
jo
fwait
loopne
mov
add
stos
out
es
or
cs
mov
pop
cmps
pushf
or
adc
jbe
sub
cld
push
jmp
jne
in
push
int3
or
jge
pop
lock
cmps
out
mov
dec
inc
sar
icebp
push
lahf
cmp
fmul
pop
lahf
fisubr
scas
in
mov
adc
cmp
cmp
mov
or
mov
cld
xchg
pop
sbb
jbe
push
call
jns
xchg
stos
xor
ins
mov
shl
cdq
mov
out
pusha
dec
dec
mov
xchg
and
stc
inc
(bad)
xor
push
jecxz
fld
mov
add
aas
adc
test
push
push
pushf
jbe
xchg
add
mov
fisttp
out
mov
cwde
mov
in
xor
adc
mov
ret
enter
outs
mov
dec
in
pushf
sbb
shr
mov
stos
adc
pop
sub
mov
ins
sub
push
in
inc
cmp
xchg
xchg
cmp
mov
(bad)
imul
ret
rol
mov
xor
jle
jecxz
sub
out
icebp
pop
inc
add
and
inc
sar
call
pop
lock
cmp
dec
loope
or
pusha
fdiv
(bad)
push
xchg
inc
gs
add
popf
call
cmp
rcl
stc
dec
mov
pop
mov
aam
inc
dec
out
adc
rol
(bad)
les
pop
adc
mov
jl
sbb
or
mov
push
mov
push
push
push
mov
xchg
lea
cmps
bound
clc
(bad)
xchg
mul
rcl
loopne
jne
mov
shr
xor
push
fcomp
push
fldenv
sti
shl
mov
xor
out
bound
mov
or
pusha
ss
stos
sti
lahf
not
xor
fild
xor
mov
mov
das
lahf
sbb
popa
and
mov
cmp
imul
or
adc
xor
and
pop
(bad)
in
mov
(bad)
out
mov
outs
push
out
sahf
clc
and
mov
pop
or
ja
xchg
cs
add
xchg
cmps
or
xchg
sbb
leave
dec
clc
jns
ds
fsubr
aas
mov
movs
mov
mov
icebp
sub
xchg
push
jo
cmp
les
sbb
aad
fbstp
stos
lahf
mov
adc
daa
ins
pop
outs
aam
popa
add
(bad)
in
clc
sbb
fcom
add
cs
pop
mov
mov
lods
fld
fidivr
loope
push
inc
bound
or
mov
ja
iret
xchg
and
into
xor
or
arpl
mov
push
in
sbb
dec
sub
ja
pop
xor
mov
pop
add
stos
aad
jg
or
imul
movs
fdiv
jecxz
cmp
pop
jns
lock
push
outs
mov
(bad)
data16
mov
xor
push
std
fsubp
adc
into
jmp
pslld
and
push
out
leave
or
aad
fdivr
mov
cli
add
sub
push
mov
add
outs
jb
push
or
xchg
in
call
sub
cmc
lea
xchg
fdivr
shl
cmp
adc
loop
rcr
test
rcr
repnz
test
aad
fucomi
movs
neg
adc
push
js
jmp
xor
(bad)
push
mov
in
sub
movs
loopne
iret
push
mov
daa
out
cli
scas
sbb
cwde
jmp
loop
mov
jb
add
xchg
or
sti
je
sbb
push
lods
call
push
retf
(bad)
call
xchg
mov
dec
mov
mov
jb
bound
xor
xor
outs
sub
scas
mov
cwde
lea
jne
inc
jns
jb
xor
dec
fstp
add
and
test
aas
mov
sub
loop
sub
out
or
add
push
icebp
adc
cld
inc
aad
inc
mov
test
outs
jmp
pop
setbe
(bad)
aaa
jnp
repnz
cs
test
repnz
std
scas
sbb
add
mov
mov
int
fs
test
or
aad
ja
std
cs
cmps
jbe
bound
or
fs
es
fistp
imul
stos
outs
into
clc
jecxz
and
mov
lods
inc
inc
inc
cs
fmul
push
or
mov
or
icebp
add
cmp
cwde
xchg
scas
fsub
cwde
xchg
cbw
movs
out
pop
cwde
test
cs
mov
fdivrp
cmps
jmp
sbb
cmp
pop
cmp
mov
div
jo
pusha
scas
shl
xchg
jbe
push
mov
call
push
cld
les
ins
mov
pop
js
pushf
icebp
jmp
mov
mov
mov
adc
fdiv
mov
call
pop
mov
cmps
scas
test
(bad)
and
(bad)
pushf
pop
inc
fwait
or
ins
and
cmp
xchg
mov
imul
or
or
sub
jnp
ins
in
push
mov
movs
dec
jb
xchg
push
and
xbegin
jg
jmp
cmc
ret
pop
pop
cmps
daa
in
jbe
iret
push
psrlw
jl
ret
mov
sub
jne
jnp
call
cmp
popf
inc
xchg
dec
(bad)
jnp
mov
in
inc
push
sub
shr
in
stos
mov
shr
xchg
clc
mov
sub
pop
cmp
xchg
sub
idiv
lahf
pop
popf
push
jge
shl
(bad)
out
sti
xor
jg
dec
mov
aad
enter
js
add
mov
adc
outs
sub
mov
je
lahf
and
retf
rcl
sbb
mov
pop
mov
cmp
cwde
lahf
ja
loop
push
iret
(bad)
(bad)
(bad)
or
addr16
clc
push
xchg
sub
sbb
imul
push
sbb
fist
push
(bad)
out
add
inc
or
into
dec
gs
pop
and
cmp
mov
cmp
pop
pop
adc
into
imul
dec
xor
hlt
lock
(bad)
aaa
clc
jmp
cmp
rcl
push
std
cmp
push
imul
sbb
inc
test
fild
out
outs
mov
cmp
push
pop
lds
jns
fldcw
mov
test
pop
mov
cs
and
test
fdivr
adc
scas
pop
cwde
sub
ret
mov
outs
test
loop
adc
and
mov
lea
pop
cs
std
jl
cmc
push
xchg
into
mov
out
cld
or
sub
cmp
mov
and
lds
dec
dec
addps
and
xor
imul
js
dec
push
xchg
mov
or
mov
lock
stc
loope
(bad)
sti
xor
or
aaa
nop
push
fistp
fldenv
add
pop
dec
push
aad
sbb
ja
dec
push
sar
ret
xchg
sbb
jmp
test
jecxz
mov
fstp
and
jb
sub
push
or
(bad)
cmp
cmps
mov
in
sub
xchg
add
(bad)
mov
mov
sbb
pop
add
xchg
int3
test
(bad)
dec
xor
push
sar
inc
sbb
add
mov
dec
pop
push
retf
and
dec
add
or
jecxz
out
push
repnz
cmp
in
mov
ins
aaa
inc
push
ja
pop
jnp
xor
push
in
ficomp
fwait
enter
dec
jns
adc
add
dec
pop
ja
sti
xor
mov
mov
cmp
(bad)
stos
out
fisttp
jmp
in
push
bound
sub
jnp
jo
nop
sub
inc
aad
enter
rol
fwait
mov
cmps
dec
in
jns
ret
mov
retf
leave
dec
(bad)
mov
push
pop
cmp
out
in
fs
cwde
adc
push
push
sub
add
dec
js
call
dec
int3
je
lea
mov
mov
scas
gs
adc
fistp
fidivr
mov
sub
jb
call
or
mov
pusha
icebp
jmp
jnp
or
ret
cmp
pushf
jle
dec
hlt
jns
mov
sbb
enter
adc
fistp
imul
(bad)
push
mov
adc
fwait
sbb
jmp
push
frstor
clc
pop
jecxz
jmp
mov
mov
(bad)
mov
jns
es
push
and
mov
mov
sub
add
neg
or
sbb
shl
dec
mov
pop
add
test
js
(bad)
mov
push
call
sbb
ins
jae
ror
test
outs
test
(bad)
jns
mov
and
pop
fistp
or
dec
dec
pop
add
mov
retf
dec
inc
lods
add
retf
aas
addr16
fwait
and
sbb
ins
ins
pushf
popa
mov
fild
sub
fild
adc
xchg
cmp
xchg
inc
mov
cmc
jns
jl
sbb
sbb
cwde
jmp
jae
loope
popa
shl
ret
nop
pop
call
fs
out
add
jmp
xchg
push
test
push
fsub
xor
ins
test
imul
fisttp
int3
sub
je
fxch
cmp
mov
inc
ds
lods
ret
cs
jns
ss
cmps
mov
(bad)
sbb
xchg
jmp
adc
sub
or
lahf
push
ret
mov
or
jmp
call
mov
(bad)
retf
enter
adc
(bad)
out
inc
mov
mov
loope
shr
test
outs
push
jno
popa
xchg
in
sub
jo
scas
add
repnz
fcomp
add
cmc
mov
or
in
push
test
xor
mov
inc
dec
jns
cmp
imul
xchg
pusha
jle
iret
adc
and
xchg
cmp
inc
inc
xchg
in
push
aas
mov
(bad)
add
push
das
imul
pop
out
popa
push
inc
in
jno
dec
or
lahf
xor
in
xchg
lahf
repnz
add
test
mov
test
jp
test
fld
cdq
jo
test
push
adc
xor
mov
jbe
sbb
ret
push
sub
pop
xor
fadd
mov
js
pushf
in
fcom
sar
fisttp
clc
cmp
ins
mov
mov
ror
dec
ret
fiadd
inc
pop
xchg
aad
inc
(bad)
mov
hlt
rol
aam
aas
iret
sar
mov
mov
mov
mov
add
out
sub
bnd
cmc
call
pop
jge
xor
jp
jo
jge
gs
(bad)
pushf
push
jge
adc
mov
push
xchg
and
jne
ins
mov
and
aaa
les
push
inc
or
inc
inc
dec
adc
inc
cs
jge
push
rol
jae
cmp
mov
rol
cmp
inc
retf
pushf
xor
pop
cmp
data16
ret
inc
jae
aad
call
or
inc
out
push
sbb
aam
outs
jb
cmps
test
out
sub
cmp
call
cmp
jl
out
jg
dec
cmc
outs
cld
dec
cmp
add
int3
pop
sbb
shl
mov
jl
adc
mov
jne
jmp
push
leave
cmp
mov
das
imul
push
retf
pop
fstp
xor
mov
xchg
iret
lods
(bad)
adc
in
fs
into
sub
test
dec
fcomp
pusha
dec
scas
and
pop
push
jnp
xor
mov
or
dec
cld
mov
rol
push
(bad)
ror
cmps
ret
outs
inc
pop
xor
add
fs
neg
and
loopne
mov
outs
cvttps2pi
repnz
lods
xor
cmp
ja
and
adc
jl
int
jmp
adc
push
loop
xor
jbe
adc
(bad)
out
inc
push
(bad)
icebp
(bad)
cmp
cmp
test
mov
icebp
scas
jl
ins
inc
xor
cmp
(bad)
push
(bad)
sbb
in
xchg
push
in
xchg
inc
cld
sbb
inc
out
jle
gs
aad
dec
addr16
popf
inc
ss
imul
push
xor
sbb
mov
or
mov
dec
inc
push
ja
lods
(bad)
ja
cmp
in
rol
xor
jnp
bound
inc
pop
out
push
out
cmp
xchg
jae
or
push
(bad)
mov
add
inc
pop
inc
aad
stc
daa
pop
push
xor
lea
rol
lods
and
fwait
push
pusha
jmp
sbb
cmp
clc
pop
push
dec
pop
jb
xlat
cmc
mov
or
jb
inc
gs
cmp
jae
push
dec
or
bound
retf
sub
adc
ds
push
cmp
xadd
xchg
add
fwait
jns
les
mov
fcomp
call
or
and
xchg
mov
loopne
push
stc
and
mov
push
dec
mov
pusha
aam
fdiv
sub
mov
mov
popa
lods
inc
jns
xchg
mov
push
mov
sub
jmp
aaa
adc
(bad)
fisttp
fnstenv
sub
adc
mov
outs
ins
add
xchg
mul
iret
or
or
or
adc
inc
rcl
ins
adc
mov
and
(bad)
clc
inc
push
jg
mov
mov
loopne
adc
xor
sbb
stos
mov
and
xor
fstp
aad
mov
leave
jbe
sub
add
push
or
or
mov
sbb
(bad)
fmul
outs
lds
jg
mov
jle
jmp
xor
jno
gs
hlt
push
pop
dec
popa
inc
dec
call
cwde
pushf
pusha
imul
aas
xor
adc
xchg
xor
mov
mov
movs
ret
push
mov
xor
jecxz
inc
lahf
fprem
(bad)
loope
cmps
inc
jg
das
lock
test
xchg
mov
jg
sbb
loop
mov
mov
stos
xchg
stos
push
gs
addr16
popa
adc
push
pusha
leave
mov
fisttp
xchg
mov
sub
shl
sub
(bad)
mov
dec
ja
cmps
mov
push
add
cmps
add
add
pop
(bad)
shl
adc
mov
push
les
mov
jl
jne
add
mov
les
mov
jmp
inc
adc
pop
fld
cmps
sub
(bad)
jmp
pop
jae
add
mov
sti
jne
push
lods
xchg
cmps
xchg
loop
push
inc
push
scas
pop
xor
and
inc
dec
or
sbb
jmp
ds
mov
stos
cmp
cmc
and
xchg
cmp
shl
mov
cmp
dec
aad
sub
xor
popa
fistp
mov
push
imul
pop
mov
sbb
xchg
jns
retf
repnz
cmps
lods
push
xor
sbb
ss
add
jns
stos
or
dec
jno
jge
sbb
cmp
push
pop
mov
shr
retf
mov
inc
iret
daa
fs
pop
leave
in
ss
cmp
mov
or
and
fistp
in
mov
bound
pop
add
bound
sub
enter
jne
mov
nop
jl
push
out
push
adc
jmp
mov
push
xor
cwde
cwde
push
pop
retf
pusha
push
cmp
inc
add
jp
movups
push
in
fs
aas
adc
pop
xchg
fdivr
cmc
(bad)
inc
jle
div
outs
ins
fs
sub
pushf
jo
mov
sbb
xor
adc
enter
adc
dec
sub
jne
pop
fs
loop
imul
pop
mov
sub
mul
xchg
xchg
push
inc
mov
fcom
in
jmp
pop
arpl
inc
stos
or
cmp
sbb
sub
outs
pop
mov
outs
arpl
jmp
dec
xor
pop
pop
mov
cmp
push
and
(bad)
or
inc
adc
adc
lds
sub
sub
fisub
adc
xor
push
xchg
out
pop
mov
inc
lea
stos
loopne
loopne
jo
adc
or
and
sahf
xchg
nop
sub
test
pop
pop
pop
loopne
shl
cmps
push
xlat
and
mov
hlt
sahf
(bad)
icebp
sbb
mov
sub
fucomp
xor
in
clc
xchg
ss
imul
pop
sub
scas
sbb
xor
jae
pop
mov
(bad)
jae
pop
mov
(bad)
dec
jle
inc
cmp
cmps
enter
scas
into
sbb
jno
mov
(bad)
mov
mov
push
pop
ss
pop
int3
add
dec
ss
cwde
pop
lahf
shr
inc
xor
cdq
out
arpl
xor
inc
or
mov
adc
xchg
scas
iret
xchg
lock
stos
stos
jnp
fs
std
or
push
inc
fidivr
adc
ret
jge
in
xchg
and
je
cs
mov
push
in
sub
arpl
ds
stos
add
push
or
sbb
dec
mov
out
cmp
jecxz
(bad)
fbstp
ss
cmp
outs
ds
pop
or
and
push
cmps
mov
mov
addr16
push
int3
idiv
add
hlt
ja
fiadd
fs
fs
pushf
xchg
jne
push
adc
das
addr16
mov
fldenv
lods
inc
fldpi
mov
lods
sub
dec
add
call
dec
adc
jb
mov
xchg
out
mov
jnp
pop
pop
int
int
pusha
call
clc
cmp
adc
cmp
stos
adc
popf
int
repz
mov
int3
mov
push
ds
and
jle
jno
scas
fsub
out
out
cmps
ins
out
das
xchg
jb
sbb
jp
test
gs
mov
leave
fwait
pop
shl
push
imul
retf
(bad)
pop
es
or
jle
cdq
leave
or
lea
idiv
sub
popa
jmp
add
aaa
ret
jmp
and
xchg
into
into
push
addr16
repz
or
or
in
mov
xchg
in
fidivr
cmp
add
scas
pop
in
scas
mov
mov
push
ss
push
loope
sub
dec
lds
xchg
cdq
xor
xchg
sub
test
mov
rol
sbb
mov
imul
pop
mov
push
sub
in
rcr
fcomp
mov
rcl
inc
call
movs
inc
arpl
nop
xor
mov
sti
adc
jmp
pushf
mov
xchg
dec
(bad)
js
aas
imul
pop
add
mov
retf
xchg
aam
lods
push
dec
xchg
test
std
fld
test
in
dec
arpl
or
or
jl
mov
and
loope
push
adc
mov
dec
xchg
push
ret
sub
icebp
push
mov
xchg
inc
in
push
sub
mov
sub
push
fst
outs
mov
mov
test
retf
mov
shl
and
rcr
adc
leave
push
jbe
xor
add
mov
adc
fsub
mov
enter
ds
jl
push
rcr
push
test
sbb
jecxz
out
mov
dec
mov
push
lods
or
ss
adc
aad
loopne
mov
(bad)
pop
jae
out
and
iret
sub
xor
icebp
dec
idiv
mov
jno
outs
jne
xor
xor
adc
(bad)
fadd
rcl
fs
or
shl
xor
mov
fisttp
in
and
dec
(bad)
dec
mov
sbb
or
mov
out
pop
inc
cdq
hlt
nop
xchg
push
mov
inc
sub
(bad)
sbb
cld
jne
and
pop
daa
fwait
cmp
jp
bound
aad
out
and
out
mov
dec
push
xlat
cmps
and
pop
out
sahf
sub
rcr
shr
and
sar
cmc
call
shl
mov
jns
mov
xlat
cmps
fadd
mov
or
inc
xchg
(bad)
xor
lea
dec
inc
mov
mov
add
mov
int
add
mov
ins
and
mov
outs
popf
popf
add
mul
fsubr
xor
push
xor
arpl
dec
mov
mov
dec
dec
sbb
or
jge
xchg
or
and
test
pushf
lock
mov
mov
sbb
cdq
dec
xchg
sahf
notrack
push
fmul
cli
cli
imul
jecxz
mov
mov
pmulhuw
jl
das
jb
inc
inc
cmp
dec
aad
mov
es
jmp
mov
in
jp
leave
arpl
ins
aaa
xor
arpl
retf
mov
mov
mov
mov
ins
(bad)
(bad)
nop
retf
dec
inc
in
cmp
fidiv
sbb
fucom
add
shl
leave
gs
aaa
pop
dec
sub
push
and
jp
mov
lahf
ins
xchg
and
xchg
sti
pop
das
ret
pop
cld
push
rcr
stc
jmp
sbb
hlt
shl
cli
or
mov
mov
sub
add
mov
int3
inc
jge
sub
jns
adc
call
ins
xor
and
or
daa
das
out
and
sbb
int3
xlat
jmp
sbb
(bad)
pop
test
jo
aad
cmc
push
jae
(bad)
mov
sbb
test
inc
vprotq
or
retf
aad
jmp
lea
sbb
sahf
test
jno
sti
out
sbb
inc
adc
and
aaa
xor
xor
add
(bad)
jmp
xor
outs
jg
out
sub
jbe
ins
icebp
adc
cmp
dec
xchg
mov
inc
icebp
int
pop
xchg
aam
pop
std
jg
adc
(bad)
jo
jae
mov
into
xchg
adc
xor
loopne
add
ficom
(bad)
cmp
mov
in
add
jle
dec
cmp
dec
addr16
popa
sbb
nop
bound
mov
and
add
lock
ja
xor
lea
jmp
popa
sbb
rol
jge
inc
std
dec
fwait
xor
pop
bswap
das
fwait
add
mov
or
outs
pop
cmp
ja
pop
push
inc
and
aas
loop
outs
sub
pusha
sub
or
(bad)
sbb
dec
fs
dec
jp
sahf
loop
jmp
sbb
bound
adc
pop
pop
in
jb
ret
mov
pop
(bad)
push
dec
stc
cs
jle
jno
shr
pop
ins
mov
mov
mov
adc
mov
out
mov
or
jae
bound
push
mov
repz
lds
and
cmp
push
icebp
and
dec
in
pop
mov
hlt
mov
movs
mov
in
push
rcr
mov
out
sub
es
out
mul
pop
push
imul
ss
and
pop
aaa
je
test
es
shl
(bad)
in
ins
sar
cmp
pop
mov
push
popf
inc
mov
mov
add
int
mov
xchg
push
push
or
pop
jne
and
jmp
push
aam
mov
psrad
int3
xor
inc
(bad)
inc
sbb
mov
pop
cmps
jnp
mov
int
retf
jp
pop
mov
jmp
xchg
jbe
or
mov
push
adc
cs
sub
std
das
fucom
push
test
mov
test
sub
mov
inc
scas
mov
jle
clc
pushf
stos
mov
cmp
repz
neg
test
mov
xchg
or
arpl
cmp
inc
fild
adc
mov
in
popa
xor
jg
shr
mov
mov
psllw
push
out
imul
cs
aad
cwde
adc
or
loop
pop
(bad)
push
(bad)
lahf
loopne
lods
jecxz
popf
ds
inc
adc
shr
int3
dec
std
mov
aaa
fmul
jno
push
ins
int3
ds
(bad)
mov
xlat
mov
or
popf
dec
xlat
inc
push
sbb
std
mov
outs
mov
sbb
loope
mov
stc
and
fwait
(bad)
(bad)
mov
cdq
ret
add
retf
push
in
xor
retf
pop
movs
cmp
int3
fsub
stc
jg
fsubrp
repz
(bad)
retf
adc
stc
iret
ret
jp
push
pop
lods
jg
xor
mov
pop
ret
sub
mov
pushf
cmps
(bad)
fwait
sbb
jns
dec
das
test
xchg
push
loope
(bad)
aas
pop
mov
mov
sub
stos
fiadd
mov
push
mov
jge
jns
mov
test
les
fs
jb
fcomip
jmp
fwait
leave
xchg
inc
and
pop
icebp
cmps
imul
adc
cmps
dec
nop
test
mov
cli
cli
sar
xchg
xchg
(bad)
lea
je
sub
addr16
daa
dec
aam
ret
push
sbb
or
hlt
and
aas
push
scas
push
rol
out
xlat
adc
test
fcom
xor
adc
test
mov
shr
retf
cmp
(bad)
add
out
mov
mov
xor
aad
or
dec
fldcw
xchg
bound
lahf
mov
aad
cmps
push
inc
xchg
mov
mov
mov
(bad)
repz
popf
dec
dec
mov
lods
loop
sub
sub
push
add
sub
or
jmp
push
mov
jmp
push
hlt
mov
mov
mov
in
sar
inc
cmp
and
adc
or
mov
loope
add
and
mov
sahf
loope
out
cli
ss
inc
jno
inc
xor
into
adc
xor
retf
sub
dec
(bad)
in
xor
dec
xor
(bad)
inc
add
fxch
jo
leave
pop
adc
aam
sub
cli
add
push
adc
xor
out
inc
clc
cmp
xchg
fild
shl
inc
dec
add
out
fwait
or
xchg
dec
iret
test
and
leave
inc
xchg
and
xor
mov
inc
jmp
shl
xchg
(bad)
leave
pop
cmp
sub
dec
imul
out
sub
and
(bad)
mov
rcr
ret
repnz
(bad)
test
mov
adc
cdq
pop
mov
popf
jle
fwait
dec
or
mov
xor
cs
jp
bound
jno
pop
out
out
lock
mov
fist
retf
std
hlt
pop
jne
jp
jo
adc
lock
les
es
cli
test
mov
mov
fistp
cmp
push
loop
lea
stos
push
jb
jmp
retf
test
fiadd
aad
mov
adc
test
fild
(bad)
int3
add
mov
jmp
mov
(bad)
jae
(bad)
cdq
mov
push
shl
(bad)
adc
out
out
add
mov
jp
sti
mov
ret
cmp
and
(bad)
pop
dec
pop
rcr
push
gs
xchg
lock
xchg
daa
imul
cdq
push
push
int3
cmp
adc
fcom
adc
xchg
cmp
and
cld
dec
and
mov
fisttp
mov
shl
sub
mov
addr16
cmps
out
test
xor
inc
in
mov
cmp
aas
jp
hlt
pop
pop
jmp
push
leave
ins
int3
stc
cmp
jle
add
mov
repz
mov
imul
mov
inc
push
jmp
mov
push
stc
stos
sbb
dec
dec
in
out
mov
call
aaa
cmp
clc
inc
xchg
cmp
sar
xchg
gs
xor
sahf
push
stos
sbb
inc
jns
pop
ror
inc
sub
jle
fwait
xchg
aam
inc
mov
inc
sahf
cli
call
mov
pop
lock
(bad)
in
ret
outs
jne
call
loope
xor
xchg
shr
mov
xor
dec
adc
xor
sar
shl
outs
leave
loop
inc
ror
loopne
pusha
inc
jecxz
cmp
sub
loope
aaa
adc
aad
mov
xchg
dec
sbb
(bad)
jne
sar
test
mov
or
(bad)
stc
mov
inc
pop
int
inc
push
ss
mov
outs
mov
(bad)
pusha
mov
repnz
test
out
xor
adc
sub
inc
dec
add
or
sub
adc
ret
push
je
in
xchg
sbb
or
(bad)
retf
shr
xor
xchg
fmul
dec
les
(bad)
sub
mov
ss
cld
int
cmp
jg
das
dec
dec
inc
cmps
or
push
neg
mov
and
sub
icebp
pop
pop
call
jns
out
fstp
mov
cmp
dec
call
mov
(bad)
push
cdq
dec
adc
call
push
xor
leave
jne
shl
addr16
dec
push
and
pop
jg
dec
pop
in
xchg
dec
push
mov
lock
push
mov
gs
retf
dec
sbb
inc
or
mov
add
add
iret
push
xor
test
mov
xchg
fwait
pop
test
(bad)
repnz
fadd
ja
out
mov
mov
jmp
iret
mov
adc
sti
xchg
push
mov
das
call
mov
imul
inc
ja
(bad)
in
cmp
cmc
cs
cmc
test
lahf
cmp
cmp
or
add
adc
dec
sbb
dec
test
les
push
dec
leave
sar
dec
pop
cmp
loope
or
xlat
in
xor
stos
aad
leave
inc
ret
pop
inc
or
or
jmp
lahf
mov
mov
sub
rcl
mov
mul
cmc
dec
jmp
and
es
mov
dec
rcr
mov
jmp
inc
push
sbb
shl
jmp
mov
test
xchg
xor
jge
mov
rcl
dec
push
out
push
inc
and
shl
sub
push
or
cmps
loop
pop
pop
mov
std
sbb
loop
pop
data16
jmp
pop
int
add
inc
mov
jge
or
or
mov
(bad)
jecxz
pop
inc
jae
aam
stos
add
mov
ss
cmp
ins
mov
fs
sbb
pop
loop
bound
dec
push
call
movs
pop
adc
mov
retf
scas
or
in
or
mov
(bad)
inc
cdq
push
test
push
fcmovu
movs
gs
ins
out
inc
sub
push
pop
int
int3
add
xlat
movs
cmp
mov
enter
or
sub
jno
cmp
xchg
fs
call
add
jne
mov
dec
sub
test
jmp
lahf
mov
cmc
jp
dec
cmps
das
xlat
jmp
retf
scas
push
movs
arpl
sbb
in
lock
xchg
sub
xor
imul
in
std
pop
cli
push
hlt
aam
jbe
fisttp
out
jbe
das
push
mov
lock
mov
pusha
push
sti
aam
fstp
addr16
fcom
ja
loope
mov
sbb
cmp
jnp
(bad)
(bad)
out
sub
les
shr
jmp
xchg
scas
neg
(bad)
push
xchg
repz
push
push
or
jp
pop
inc
mov
jno
jns
pop
mov
dec
jo
int3
ror
test
jmp
inc
(bad)
movs
sar
ins
mov
fst
test
imul
retf
scas
mov
jecxz
mov
inc
mov
(bad)
mov
xor
jp
cli
xchg
add
aaa
das
mov
sar
mov
adc
retf
js
jg
cdq
sti
sar
outs
cli
sub
dec
fiadd
mov
jae
sub
popa
sbb
in
jecxz
inc
add
sbb
std
test
push
xchg
loopne
inc
ja
enter
xchg
shl
xor
pop
cmp
mov
cwde
scas
sti
sub
lds
mov
xor
fwait
dec
pop
stc
sbb
imul
movs
sbb
or
jnp
adc
lods
xchg
lds
pusha
dec
push
jno
movs
xchg
mov
pop
sub
pop
jns
fs
cdq
jmp
push
dec
jp
mov
popf
enter
movs
cmp
js
popa
cwde
jg
jg
lea
add
jne
sahf
test
lods
or
imul
mov
test
or
xchg
js
mov
sbb
ins
xchg
fwait
lods
ds
mov
sar
mov
leave
sahf
mov
stos
adc
jmp
into
cld
in
retf
push
inc
fiadd
fmul
inc
icebp
mov
sub
sub
inc
jmp
push
or
cmps
cld
inc
rcr
sub
lock
cld
and
mov
jle
call
in
repnz
mov
jnp
mov
lods
pop
outs
les
repnz
out
jb
inc
in
jp
or
inc
add
bound
mov
nop
jns
sbb
in
out
push
push
sbb
test
push
push
mov
adc
jle
hlt
icebp
mov
(bad)
mov
dec
mov
jb
jns
pushf
fdiv
xchg
repnz
idiv
push
mov
inc
add
and
ret
stos
push
stos
cmp
jp
dec
aaa
sub
cdq
ror
mov
xchg
dec
rcl
fsubr
mov
sbb
xor
(bad)
aas
pop
and
sbb
jns
add
(bad)
int3
or
xor
jecxz
cmc
popa
in
xchg
pop
repz
mov
inc
jbe
fwait
mov
ja
icebp
mov
cmp
mov
xor
cmp
pushf
push
jno
jl
jae
adc
rol
(bad)
mov
je
outs
or
xor
or
ficomp
(bad)
call
pop
adc
sbb
mov
inc
out
pop
in
mov
mov
in
jnp
mov
push
xchg
mov
fldenv
ds
jno
out
xchg
inc
stos
push
test
out
es
add
jae
inc
jno
cmps
mov
pop
push
dec
push
sbb
out
ss
(bad)
cmc
test
mov
inc
rol
xor
ja
ja
call
fimul
in
(bad)
test
mov
inc
into
nop
push
xchg
hlt
jge
ret
aaa
int3
mov
jnp
fs
or
retf
cwde
jnp
out
in
jae
jnp
test
loop
dec
xchg
jmp
cmc
pop
call
in
in
push
mov
adc
mov
mov
aam
add
test
add
xor
(bad)
inc
add
xchg
fcomp
fs
fidiv
inc
sbb
fimul
ss
test
mov
stos
dec
xchg
scas
test
bnd
and
cmp
jge
add
pop
inc
mov
and
inc
xchg
xchg
nop
xchg
loop
jp
cwde
clc
rcl
pop
and
jp
push
mov
push
cmps
xor
mov
push
lds
mov
icebp
jmp
neg
shl
fadd
daa
inc
test
sar
fisub
jle
out
(bad)
sti
les
out
aad
(bad)
das
xor
mov
into
cld
(bad)
hlt
imul
sub
jne
not
cld
imul
xchg
push
adc
fs
dec
xchg
pop
dec
(bad)
push
or
sahf
retf
jnp
inc
cmps
push
xlat
push
jmp
add
out
push
push
inc
call
push
dec
adc
jg
cmps
mov
pop
(bad)
adc
jae
push
xchg
or
or
leave
jnp
pop
xor
dec
push
imul
out
cs
mov
mov
into
out
adc
push
imul
mov
sub
lea
xchg
inc
mov
and
shl
mov
adc
xchg
xor
nop
xchg
and
push
test
lea
hlt
mov
or
data16
mov
in
call
call
in
loop
sbb
not
and
fadd
xchg
ror
das
adc
xchg
jmp
stc
xchg
xor
pop
mov
cdq
rcr
sbb
leave
and
mov
sbb
js
adc
inc
aaa
test
or
mov
inc
cmp
xor
cmps
cs
pusha
retf
xchg
push
push
fst
adc
pop
add
xchg
fcomi
scas
scas
rcl
dec
mov
or
lea
inc
aam
add
mov
xor
or
xor
xchg
dec
aad
or
or
push
(bad)
cmp
sbb
push
inc
sub
shl
mov
movs
leave
jne
push
xchg
sbb
push
mov
push
jg
jbe
fsubr
cdq
jnp
test
xchg
push
jne
add
xlat
loop
mov
xchg
pop
xor
js
stos
adc
xor
mov
xor
shr
(bad)
sbb
cmp
mov
and
xchg
sbb
scas
push
mov
push
test
jo
adc
leave
rcr
ds
out
cmps
arpl
xor
sub
leave
add
iret
(bad)
cmps
sti
jno
xor
out
bswap
popf
outs
cwde
and
mov
jne
es
jnp
xor
jno
jge
lods
adc
ret
aaa
jbe
pop
(bad)
cld
in
sbb
ja
lock
cs
call
and
retf
outs
cwde
nop
and
arpl
xchg
popf
mov
sbb
in
(bad)
test
mov
stos
out
aam
xchg
stc
ja
xor
jbe
push
jl
das
xor
add
aad
mov
mov
add
adc
inc
ret
in
cmp
mov
jp
or
nop
mov
daa
gs
call
mov
outs
jg
push
test
std
inc
das
std
sahf
cmps
pusha
in
mov
xor
push
dec
std
iret
dec
push
aas
into
fcmovnb
inc
or
add
cmp
test
mov
ins
dec
arpl
mov
call
push
out
jae
mov
xor
rcl
adc
sub
fild
je
fsub
int
in
or
fnsave
cmp
xlat
cmc
cmp
in
jnp
or
push
dec
adc
pop
and
stos
ja
cmp
jb
dec
and
data16
and
xor
pop
pop
gs
inc
lds
lahf
mov
mov
inc
mov
scas
aam
outs
shr
lods
xchg
or
mov
out
lock
or
nop
mov
dec
sbb
jo
lds
mov
mov
inc
mov
xchg
sbb
iret
loop
add
jl
pop
imul
xchg
stos
pop
xchg
out
mov
or
test
xchg
dec
ss
retf
(bad)
mov
mov
jbe
and
int3
mov
mov
and
push
aaa
jmp
aad
je
cmp
fmul
mov
(bad)
and
loope
out
pop
stc
mov
mov
pop
add
jnp
cli
sbb
sub
push
movs
nop
jg
(bad)
inc
pushf
sub
xchg
sub
sahf
call
(bad)
stc
pop
shl
ds
mov
adc
cmp
cmp
mov
inc
imul
leave
pop
out
das
cmp
js
test
out
div
or
add
out
retf
js
mov
xor
sub
sub
or
cld
loopne
std
xchg
fidivr
sub
cli
mov
fiadd
dec
push
dec
adc
outs
xor
push
xor
setae
sbb
adc
loope
jge
fistp
ins
pushf
mov
dec
imul
retf
loope
xchg
jnp
sbb
sub
cld
sub
or
call
lods
repz
cmp
mov
aaa
or
idiv
cs
int3
stos
push
je
cmp
push
dec
inc
jl
outs
adc
scas
and
xchg
scas
pop
std
sbb
test
lock
cmp
imul
sub
xchg
nop
in
mov
inc
jae
cmp
pop
mov
add
push
push
jns
sbb
xchg
xchg
movs
inc
mov
mov
movs
inc
not
mov
add
sbb
push
sub
push
dec
add
fs
fxch
stc
in
ret
sub
xchg
fiadd
sub
mov
sbb
and
test
retf
or
imul
dec
sbb
stos
xchg
daa
cmc
movs
jbe
jbe
push
ds
popa
inc
push
dec
jp
xchg
sbb
jge
fimul
and
and
cmp
sbb
int3
aaa
(bad)
and
pop
adc
cmc
xchg
rcl
or
add
dec
js
xchg
or
cmp
adc
or
pop
sbb
loopne
dec
jae
test
pop
sahf
cmp
sbb
nop
or
aas
cmp
pop
jns
pop
ret
test
daa
xchg
mov
or
jo
sbb
pop
push
in
sbb
push
mov
or
sub
add
xchg
cmp
add
arpl
(bad)
mov
loope
inc
cmp
jae
lods
(bad)
pusha
test
mov
xor
xchg
jmp
xchg
xlat
inc
xor
xchg
(bad)
iret
fsubp
clc
push
push
mov
cmp
add
ins
retf
ucomiss
push
jns
fidiv
jnp
sahf
data16
ret
enter
sbb
int
aaa
hlt
fidiv
push
out
xchg
or
loop
mov
sbb
xchg
pop
(bad)
fild
cmp
fistp
shl
(bad)
scas
sahf
bound
push
jne
adc
adc
xchg
xor
mov
jp
rcl
ror
cli
sahf
pushf
adc
or
or
sub
xor
scas
push
in
cli
cwde
(bad)
retf
movs
test
and
xchg
sbb
mov
jne
adc
mov
inc
js
shr
fs
mov
pop
inc
xchg
add
xchg
sar
jecxz
call
push
test
cmps
jecxz
xchg
dec
ss
(bad)
(bad)
jns
mov
jle
popf
into
xor
adc
jae
jb
pop
iret
daa
add
sub
mov
sar
pop
xchg
or
cdq
(bad)
mov
xchg
sub
je
aam
adc
es
iret
ins
push
push
jmp
cmp
js
and
xor
ins
sub
ins
jno
cs
ret
(bad)
imul
lahf
pushf
mov
sti
cmp
pop
adc
mov
pop
adc
pushf
fcom
jle
mov
inc
(bad)
in
lods
sbb
leave
or
jle
outs
aam
push
stos
cld
cmps
leave
cld
jns
das
out
jbe
clc
mov
das
stos
mov
(bad)
mov
(bad)
outs
ja
xor
dec
pop
dec
mov
pop
push
retf
xor
leave
adc
pop
xchg
(bad)
and
mov
outs
rcr
mov
mov
(bad)
test
sub
jns
dec
inc
pop
sbb
mov
sahf
jbe
lock
pop
and
add
popa
or
xor
xchg
shl
aam
xor
lds
mov
test
fsub
pop
in
sub
js
push
push
int3
mov
jmp
mov
lds
(bad)
jge
(bad)
sbb
(bad)
push
push
pop
test
into
dec
push
xchg
or
push
add
in
cld
and
popf
in
int3
xor
push
stos
push
scas
scas
xor
(bad)
nop
int3
out
push
pop
jo
sbb
fs
aas
push
pop
adc
mov
cmp
xchg
pop
cwde
aas
lahf
div
aad
sbb
pop
aas
retf
mov
and
add
dec
push
push
push
dec
mov
fstp
xor
inc
pop
mov
(bad)
push
xor
mov
sbb
sbb
out
sub
mov
push
dec
mov
xor
pop
repz
jno
dec
dec
jl
sbb
test
fdiv
mov
pop
mov
or
in
sub
adc
jecxz
test
shl
inc
test
mov
ror
mov
aaa
jmp
out
mov
or
dec
mov
test
sbb
xchg
mov
ret
push
pop
xor
lods
retf
xchg
fidivr
(bad)
cmp
adc
xchg
mov
mov
dec
xor
movs
mov
fimul
pop
js
jb
div
movs
and
mov
sub
dec
cwde
out
mov
fwait
or
jge
jmp
cmc
stos
fwait
cmc
addr16
repnz
inc
pop
iret
test
jnp
outs
dec
cmp
mul
aam
int
in
xor
mov
dec
movs
fild
std
xchg
adc
shr
inc
cmp
dec
pop
mov
xchg
adc
mov
data16
pop
ja
adc
popf
cmp
mov
inc
leave
aam
ins
and
(bad)
mov
jne
pop
adc
xor
xchg
loopne
jl
jge
in
add
imul
cmc
and
push
cmps
jns
cmp
call
inc
loope
sub
dec
inc
jle
pop
popf
sub
adc
xor
jbe
cld
(bad)
sub
leave
rcl
or
call
aad
retf
ret
cmps
call
mov
cmp
xchg
adc
in
jle
ret
adc
adc
imul
jmp
inc
cdq
cwde
mov
test
aaa
scas
push
sbb
lods
in
rcl
loop
cdq
push
jp
mov
mov
push
cli
outs
mov
adc
sbb
cmp
iret
adc
fs
out
popa
jmp
(bad)
das
pop
loop
mov
hlt
sti
cs
mov
and
call
jmp
xor
sub
(bad)
fsubp
xor
push
repz
pop
or
or
js
xor
push
inc
sbb
cmp
xor
daa
mov
jecxz
push
push
ret
popf
mov
adc
cwde
pop
jb
xchg
ins
jno
sahf
mov
enter
add
mov
and
adc
outs
jno
and
xlat
cmp
jb
ins
and
sub
mov
repnz
sbb
push
call
dec
sbb
fcomp
inc
xchg
adc
pop
push
pop
push
ret
(bad)
in
sub
fisub
imul
add
scas
ins
pop
adc
lods
push
or
repnz
cli
gs
xor
cmp
aas
ins
(bad)
pushf
dec
jae
push
xor
inc
push
adc
call
mov
aaa
shl
sub
call
mov
adc
fcomp
xlat
test
adc
in
inc
xchg
xor
pop
stc
dec
sti
cwde
scas
mov
dec
retf
in
loopne
sbb
inc
xor
xchg
rcr
and
push
jae
gs
pop
(bad)
leave
jbe
mov
push
out
div
call
pop
je
inc
cdq
mov
dec
mov
mov
pusha
inc
fstp
fs
(bad)
call
adc
(bad)
push
or
ror
push
aaa
push
imul
and
dec
inc
imul
fwait
sar
ret
cmp
ja
fs
test
and
or
aas
jae
sbb
jae
inc
cmp
fcom
push
xchg
or
sub
lahf
or
mov
adc
fimul
lds
push
push
mov
sbb
mov
out
pop
pusha
jmp
or
sahf
jnp
retf
mov
and
or
in
ret
test
and
retf
push
xchg
aaa
fcmovb
cmps
cmp
xlat
adc
adc
jmp
mov
sub
imul
inc
ins
inc
clc
xor
int3
inc
pop
sbb
or
or
sub
cmps
sub
int
xor
jp
(bad)
jno
jl
pop
lods
dec
mov
dec
cmps
xor
push
or
cwde
fcomp
pop
aad
adc
mov
inc
push
push
xchg
and
sbb
add
les
jmp
sub
aam
cmp
test
test
dec
mov
and
xor
pop
push
push
pop
add
aam
xchg
xor
loopne
cmc
dec
and
lods
retf
mov
sub
pushf
lock
into
mov
add
xchg
repz
sub
dec
jnp
mov
(bad)
shl
pushf
in
adc
sub
push
mov
sbb
push
add
int
lahf
mov
cmp
arpl
pop
xchg
inc
les
mov
dec
out
cwde
adc
push
je
ins
leave
adc
aaa
movs
fld
js
pop
out
mov
mov
pusha
mov
jb
mov
enter
cmp
call
inc
retf
xor
add
inc
repz
jecxz
jmp
mov
movs
jbe
ja
das
dec
mov
(bad)
out
ss
push
cmp
mov
add
cmp
js
mov
inc
loope
in
call
sbb
int
ins
or
pusha
mov
pop
mov
imul
push
imul
es
jp
ds
and
mov
(bad)
aam
jnp
pop
leave
popa
push
int3
add
sub
pop
popf
shl
pushf
sbb
leave
ss
dec
jo
inc
cmp
jecxz
es
dec
dec
sahf
(bad)
jmp
push
pop
bound
or
jecxz
test
mov
ds
out
pop
sbb
mov
sbb
xor
inc
daa
stc
loope
inc
movs
pop
xchg
pushf
mov
mov
cmp
xlat
movs
mov
ja
mov
jle
push
xchg
mov
lea
xchg
jmp
jnp
ret
fdivrp
pop
cld
aad
and
loop
dec
fwait
jne
inc
or
out
pop
sbb
or
mov
in
repnz
pop
mov
pop
dec
push
and
xchg
cmp
repz
es
rol
rcl
cwde
hlt
dec
push
cmc
cmp
or
retf
xor
lea
and
jmp
idiv
adc
lods
xchg
mov
lahf
jne
mov
mov
and
jle
ret
retf
jno
or
sti
sub
jbe
mov
adc
out
enter
outs
sbb
xchg
pop
push
loope
scas
cs
in
jnp
pop
pusha
outs
cmps
push
hlt
adc
pop
shl
test
(bad)
xchg
idiv
and
call
mov
jg
xor
idiv
sar
sub
shl
ficomp
mov
cmp
xor
jmp
cmp
or
mov
pop
mov
pop
add
xchg
inc
daa
mov
int3
mov
xchg
rcl
leave
add
dec
mul
in
cdq
push
sbb
enter
nop
mov
adc
aad
outs
pop
sbb
pop
jnp
add
mov
add
fnstenv
jge
aas
sbb
aad
sub
mov
jo
mov
popa
bound
rcr
sub
(bad)
jle
es
dec
push
pop
movs
dec
pop
jae
pop
and
fdiv
mov
jno
adc
enter
or
test
or
imul
jne
js
sar
sti
xchg
rol
adc
xor
add
clc
and
mov
int
lock
scas
in
dec
ret
xor
idiv
add
mov
movs
xchg
ret
mov
mov
fisttp
pop
jle
cwde
xor
jg
push
mov
and
sub
inc
mov
dec
and
int3
push
push
stos
inc
push
pop
cmp
cmp
test
mov
(bad)
outs
mov
inc
and
xlat
test
test
arpl
fwait
imul
and
add
mov
inc
(bad)
pop
jmp
outs
mov
dec
pop
mov
stc
and
mov
dec
xor
rol
jno
mov
in
xor
xchg
xchg
xor
stos
leave
scas
dec
dec
xor
shr
mov
(bad)
or
outs
push
lock
leave
int3
mov
(bad)
xchg
loopne
in
test
sub
xor
lock
mov
xor
jg
ret
mov
mov
popa
jmp
stos
mov
out
mov
add
pop
jnp
adc
xchg
out
mov
cmp
and
jmp
mov
call
or
aaa
xor
enter
push
xchg
add
adc
mov
pop
inc
stc
ins
data16
push
sub
adc
shl
adc
test
dec
(bad)
imul
js
dec
je
jnp
mov
pusha
adc
icebp
mov
jno
mov
arpl
cld
sub
cdq
cmp
outs
sbb
call
sti
ja
dec
sub
inc
sbb
mov
and
mov
arpl
repz
call
cmps
push
test
(bad)
fwait
(bad)
movs
pop
mov
fisubr
or
adc
in
push
into
inc
sbb
in
pop
and
(bad)
out
xchg
mov
or
pushf
in
pushf
mov
repz
xor
mov
mov
test
rcl
pushf
gs
call
push
mov
mov
mov
sbb
push
jecxz
ss
xchg
mov
mov
mov
cmc
test
outs
jnp
cmp
dec
jne
mov
xchg
dec
ins
sbb
cmc
jbe
das
dec
xchg
sbb
rcr
in
aad
fisttp
push
adc
repz
inc
mov
into
sub
das
scas
jnp
jo
(bad)
jp
gs
lods
mov
test
movs
jb
in
div
(bad)
sub
xchg
add
icebp
pop
adc
call
adc
and
mov
fsubr
out
les
adc
ret
dec
daa
add
jmp
pop
movs
sub
les
inc
jbe
mov
fsub
or
outs
std
mov
xor
dec
aaa
mov
jmp
(bad)
(bad)
pop
cmp
lods
ret
push
ret
or
pusha
mov
jnp
test
xchg
jg
pop
inc
pop
xor
jmp
xchg
out
push
add
xchg
stos
dec
mov
jnp
inc
out
rcl
jne
mov
push
rcr
shl
gs
nop
sar
dec
popf
enter
rcr
lods
sub
push
dec
add
pop
(bad)
push
mov
sbb
les
div
jg
or
pop
pop
mov
data16
and
sbb
dec
mov
cmp
sub
mov
(bad)
in
scas
inc
aaa
xchg
mov
aam
sbb
xchg
rcl
stos
mov
and
mov
out
in
push
dec
inc
push
out
dec
sbb
fwait
dec
sbb
mov
shl
mov
sbb
in
mov
adc
mov
pop
mov
out
aam
jns
dec
pop
inc
pop
fcom
and
mov
and
mov
sbb
push
data16
test
pop
loope
push
sub
or
push
sub
dec
and
ret
clc
jp
push
xchg
das
push
xchg
mov
sti
je
fwait
outs
push
out
push
iret
fs
xor
push
retf
cli
cli
cmp
loope
cs
mov
dec
cwde
rcr
je
mov
dec
mov
jl
push
test
stos
push
jmp
xchg
nop
in
and
loope
jbe
mov
retf
sbb
dec
and
mov
scas
push
(bad)
pop
outs
pop
inc
mov
xlat
pop
and
add
sbb
mov
gs
daa
inc
stos
inc
fbld
dec
mov
inc
bound
inc
inc
mov
sub
xlat
dec
jno
pop
xchg
jle
out
jbe
das
movs
pop
and
test
(bad)
imul
aaa
xor
cli
adc
cmp
adc
cld
pop
out
lock
mov
or
movs
or
inc
adc
imul
inc
mov
pop
clc
jns
dec
sbb
out
shr
mov
mov
adc
out
aas
and
cwde
imul
jp
das
jl
mov
in
dec
(bad)
into
shl
push
retf
jmp
cmp
xchg
push
fisttp
or
bswap
fild
mov
mov
mov
mov
dec
lods
dec
push
hlt
inc
cmp
stos
test
pop
inc
loopne
lahf
or
movs
or
not
sub
or
xchg
mov
imul
fisubr
mov
xlat
jle
ja
fnstcw
retf
iret
enter
mov
mov
dec
xchg
mov
mov
add
xor
jne
adc
outs
dec
dec
push
xchg
gs
mov
sbb
pop
fwait
mov
loop
das
test
jmp
popf
push
int3
in
iret
push
adc
sahf
add
js
push
xchg
pop
or
add
cmp
xchg
pushf
stos
pop
xor
jae
ds
repz
imul
sbb
mov
push
addr16
cmps
inc
pop
add
mov
iret
pushf
lock
(bad)
and
into
add
stos
or
pop
sub
es
add
cld
dec
jmp
mov
ret
cmps
sub
adc
mul
call
inc
in
add
mov
mov
xchg
dec
push
jae
xchg
jge
std
imul
leave
test
dec
in
push
cli
dec
ins
rcl
push
adc
test
bound
mov
push
add
fsub
jnp
sbb
arpl
shl
xlat
outs
outs
dec
bnd
inc
push
pop
out
nop
ficom
(bad)
pop
les
(bad)
dec
mov
les
bound
ror
cmp
lods
adc
or
repnz
(bad)
mov
push
fcom
inc
sub
mov
sbb
and
cmc
dec
test
jb
add
(bad)
add
inc
mov
lods
test
dec
cmps
outs
push
ret
or
sbb
out
add
dec
add
cmp
leave
xor
push
jmp
jo
mov
pop
mov
das
inc
adc
(bad)
mov
lock
stos
dec
add
inc
jg
call
shr
xchg
mov
xchg
mov
inc
jmp
jl
inc
mov
jns
cmc
mov
(bad)
outs
test
loopne
mov
dec
pop
popa
popf
or
gs
push
mov
(bad)
out
repz
ret
inc
lods
cmc
jnp
dec
loopne
aam
lods
sbb
adc
mov
jmp
inc
xor
lods
xor
daa
sub
mov
pop
mov
js
int3
out
xlat
pop
add
push
xor
cmps
sub
jecxz
fs
cmp
dec
mov
nop
mov
dec
enter
test
dec
loope
pop
pushf
int
fwait
call
xchg
jo
dec
lea
icebp
into
imul
call
jmp
lods
pusha
inc
jecxz
sbb
push
xor
clc
nop
int3
xchg
sub
inc
xchg
test
call
mov
push
push
(bad)
mov
push
dec
dec
lods
inc
cmc
cwde
mov
pushf
ins
aas
or
not
mov
jmp
pop
sbb
sahf
imul
xchg
cmp
pop
sbb
fs
adc
jp
push
cmp
scas
outs
or
inc
lods
pop
cld
les
or
fs
cmps
lahf
and
fcom
loope
add
xor
rcl
add
out
dec
add
pop
inc
dec
leave
inc
scas
pop
and
jo
imul
retf
xchg
ja
add
and
push
fwait
push
inc
and
jp
mov
lahf
inc
xor
mov
xor
mov
les
xchg
popa
cs
adc
cli
icebp
popf
xchg
in
sbb
xor
sbb
pop
lahf
aas
sbb
mov
cmp
inc
push
push
icebp
and
pop
enter
inc
mov
test
xchg
ins
add
scas
push
xor
hlt
shr
xchg
cmp
jp
pop
stc
les
add
xor
(bad)
iret
mov
das
dec
lods
jl
dec
mov
jecxz
pop
icebp
(bad)
neg
out
inc
jnp
pusha
test
or
loopne
test
daa
das
leave
retf
arpl
lock
inc
sbb
in
mov
xor
icebp
mov
fst
leave
mov
div
inc
pushf
mov
je
sar
or
test
or
xchg
pop
leave
clc
mov
or
cmp
mov
(bad)
data16
cmp
push
xor
bound
xchg
xchg
bnd
pop
ror
sub
add
out
imul
(bad)
push
data16
lods
xchg
mov
pop
ss
dec
cmp
inc
sbb
jge
xchg
cmp
fisub
or
pushf
cmp
out
icebp
mov
jmp
xchg
clc
fsub
push
add
aas
loopne
pop
xchg
xlat
and
lods
les
pop
shr
call
mov
pop
xchg
shr
movs
aaa
es
xchg
test
xor
dec
adc
cmps
fisttp
and
xchg
add
call
mov
adc
push
and
sbb
call
(bad)
hlt
(bad)
sub
repnz
mov
lods
cmp
loop
nop
test
js
out
pop
loop
adc
rcl
pop
fisub
scas
push
mov
push
jecxz
test
sub
hlt
sub
adc
jnp
or
fidivr
nop
daa
cwde
loop
sub
aas
int3
sub
out
fadd
mov
add
pop
cmc
jmp
cmp
add
dec
loopne
out
pop
add
push
sub
inc
retf
xor
dec
retf
enter
mov
je
mov
cmp
inc
sbb
fdivr
lods
(bad)
fcomp
std
lods
iret
pop
jbe
and
xchg
mov
xor
(bad)
xchg
dec
and
push
lock
sub
cmp
push
sbb
shr
push
jmp
push
popa
pop
and
in
jecxz
clc
mov
div
and
or
push
sub
shr
jle
mov
mov
cs
fidivr
rcl
lahf
or
mov
daa
shr
hlt
shl
sbb
jnp
pop
mov
push
dec
in
cmp
ds
cmp
and
mov
mov
inc
xor
ucomiss
shr
mov
addr16
push
mov
mov
dec
jg
call
aad
jb
ret
sti
outs
mov
mov
push
(bad)
sub
retf
dec
push
scas
xor
xlat
addr16
cmp
xor
or
push
add
push
xor
cmp
mov
or
cmp
cmps
jge
ret
adc
fwait
test
pop
hlt
(bad)
(bad)
js
fmul
out
xchg
and
mov
mul
mov
jne
ds
sbb
dec
mov
sub
mov
or
mov
(bad)
mov
xchg
mov
icebp
xchg
adc
std
pop
mov
cwde
dec
add
push
std
push
cld
out
sbb
scas
jmp
in
inc
jno
inc
imul
call
push
jae
adc
mov
or
inc
das
push
lahf
push
ret
ret
adc
pop
or
mov
(bad)
frstor
pop
pop
jl
loop
push
mov
xor
fucomip
xchg
jbe
and
inc
xor
mov
push
shl
repz
jle
add
lahf
arpl
jge
adc
add
mov
sti
clc
lods
in
mov
loopne
adc
cmp
adc
aad
xchg
jno
mov
mov
jmp
fstp
xor
jb
repz
call
or
test
cmc
jmp
in
add
xchg
sbb
add
mov
das
(bad)
std
js
pop
add
sub
ins
in
daa
mov
pop
push
jbe
out
push
(bad)
repz
add
and
and
(bad)
loopne
pop
lds
xchg
pushf
scas
rcr
(bad)
lds
xchg
mov
sbb
stos
jne
fcmovb
mov
mov
jnp
sub
cmp
jecxz
(bad)
stc
inc
mov
mov
sub
cmp
sub
fwait
mov
out
fcmovnu
xor
out
test
or
sub
ds
mov
fisubr
sbb
cmp
scas
test
cmp
jns
add
fmul
ins
ret
rol
jns
out
or
add
in
(bad)
add
adc
fidiv
repz
addr16
int3
mov
pop
mov
push
ss
mov
xchg
push
xor
cmps
add
sbb
ja
ja
cli
jg
push
int
stc
sbb
xor
sbb
leave
pop
ret
into
std
(bad)
aam
pushf
lahf
cmp
shl
sbb
cld
jnp
push
xchg
sub
in
enter
outs
cmp
push
and
loopne
add
pop
dec
pusha
mov
and
dec
stc
fistp
lods
test
(bad)
xor
mov
dec
cdq
jne
out
jg
cmps
in
sbb
sbb
fld
and
sub
sti
scas
cmps
dec
add
inc
retf
add
jl
pop
adc
jge
(bad)
mov
cmp
sub
js
mov
ldmxcsr
jne
jbe
pop
movd
sahf
or
ror
push
frndint
jnp
cwde
das
inc
jno
push
mov
and
pusha
mov
lock
push
mov
pop
hlt
and
and
sbb
inc
cmc
(bad)
jecxz
xor
or
and
push
leave
inc
mov
jp
push
sub
inc
mov
fisub
xchg
mov
push
mul
stos
mov
sahf
jbe
push
fidivr
imul
xor
cli
icebp
ss
ret
daa
icebp
pusha
cmp
clc
cmps
dec
ficom
push
cmp
mov
pop
jne
add
aaa
xchg
jno
jmp
cmp
sub
sbb
into
mov
jo
nop
pusha
rol
into
push
push
repz
ret
ror
jl
test
rcl
or
arpl
mov
aam
es
mov
or
push
repz
pop
sar
aam
xchg
outs
jbe
sahf
lods
inc
pop
lahf
lds
aad
and
dec
shl
fisttp
sbb
aaa
sbb
addr16
in
rcr
jecxz
xor
aam
xchg
leave
mov
and
mov
fwait
add
(bad)
ficomp
sub
imul
push
mov
jp
shl
out
jmp
fbld
shl
cmp
and
cmc
cmps
add
dec
push
fs
hlt
mov
sub
movs
dec
push
shr
imul
mov
sub
out
dec
push
pop
daa
ss
pop
push
lahf
cmp
out
dec
retf
mov
in
adc
push
xor
fist
mov
in
jecxz
inc
out
mov
sub
sbb
pop
clc
lds
add
enter
arpl
clc
in
dec
pop
pop
jno
je
repz
test
inc
and
sub
sub
fist
sbb
or
outs
outs
add
test
or
(bad)
(bad)
add
push
jo
lods
sbb
mov
daa
sbb
and
stos
retf
push
sub
adc
pop
ret
repz
mov
mov
push
add
add
push
sub
mov
jmp
or
in
pop
sbb
xchg
scas
pop
mov
xchg
mov
add
outs
rcr
xor
test
xor
int
mov
sbb
inc
cwde
pop
sub
mov
or
out
je
in
fdivr
or
stc
fstp
cmps
sbb
sub
shl
adc
sbb
dec
xor
dec
stc
test
mov
xchg
push
mov
ins
pop
jno
imul
cdq
mov
and
fcmovnb
or
cmp
fwait
jnp
or
dec
repz
push
mov
out
repz
jp
inc
(bad)
fbld
xor
inc
or
sub
lods
in
pop
sub
cmc
and
aad
lods
lea
pushf
out
xchg
inc
sub
add
into
pop
jge
iret
xor
and
(bad)
jae
rol
rcr
sbb
imul
fst
dec
and
fwait
xor
fisubr
xchg
outs
mov
sub
test
mov
retf
repnz
fisttp
push
outs
cmp
mov
or
out
ins
pop
mov
aad
js
fstp
mov
xlat
mov
push
frstor
and
push
add
rcl
ret
mov
mov
jno
inc
fpatan
cmp
arpl
push
pop
mov
lock
out
jg
aas
(bad)
loop
shl
jg
cwde
pop
dec
jmp
sub
dec
enter
xor
dec
xchg
jae
sbb
fild
mul
pop
push
int3
fcmovbe
xor
fcmove
adc
xlat
xchg
or
inc
jno
vhsubpd
pop
(bad)
int3
xor
pushf
es
dec
int3
xchg
sbb
mov
mov
sbb
jle
xchg
dec
xchg
xor
scas
mov
mov
sub
cmp
fwait
mov
push
int3
xchg
mov
or
aad
add
fcomp
scas
inc
scas
and
into
repz
pop
(bad)
mov
push
or
movs
lahf
mov
fnsave
push
mov
or
and
lea
scas
(bad)
retf
enter
push
data16
rol
mov
push
pop
js
ins
daa
and
dec
xor
push
in
or
jo
shr
jmp
mov
xchg
dec
push
xor
outs
bound
sahf
xchg
inc
pop
pop
jns
std
test
sub
movs
(bad)
into
icebp
mov
mov
jp
leave
xchg
rcr
(bad)
arpl
or
push
push
jmp
cld
or
and
cmc
or
in
jns
xchg
stos
ffree
xchg
inc
jp
xchg
js
fs
sub
mov
cmp
sub
fild
popf
(bad)
or
pop
sub
shr
cmp
ret
jnp
add
arpl
mov
jmp
inc
inc
test
test
sbb
push
mov
sub
(bad)
je
sti
inc
test
mov
test
jle
ins
test
out
out
popf
mov
xor
cs
jae
(bad)
xchg
iret
lahf
dec
xchg
mov
data16
les
and
mov
addr16
sub
sub
mov
mov
inc
mov
adc
push
adc
adc
sbb
add
mov
int
repnz
rol
inc
dec
xchg
mov
pushf
xchg
pop
xchg
lahf
les
add
xchg
jle
jp
push
add
xor
mov
(bad)
sbb
loop
inc
sti
sub
popa
jge
inc
shl
pop
and
int
repnz
fs
ss
pop
add
int3
add
stc
dec
cwde
push
cdq
aam
test
sub
outs
mov
mov
adc
xor
stc
and
sbb
movs
retf
ins
jg
icebp
cmp
imul
adc
push
sahf
or
push
mov
xor
sbb
enter
or
add
mov
gs
test
push
pop
mov
cmp
(bad)
aam
movs
call
mov
jae
inc
out
mov
push
and
pop
imul
ret
(bad)
pop
sar
sub
adc
movs
cmc
inc
xor
sub
jns
cmp
in
ins
sbb
mov
sub
or
lea
pop
ret
adc
mov
and
neg
fcom
test
jle
call
push
mov
push
enter
pop
adc
imul
outs
mov
mov
xor
ret
dec
gs
pop
cli
push
cmps
out
loopne
xchg
xor
mov
mov
std
inc
pop
dec
mov
inc
std
mov
out
mov
das
in
loope
sbb
hlt
stos
cwde
sar
mov
shr
out
leave
in
sub
and
sahf
cmp
add
mov
sbb
call
fstp
in
dec
jmp
retf
mov
aam
(bad)
jbe
push
jae
repnz
sti
stc
leave
inc
xor
cmp
fdivrp
stos
lods
aam
jns
sub
push
jmp
inc
fs
jnp
sbb
cmc
add
sub
ret
icebp
retf
xor
or
into
jo
div
cld
aad
jns
sbb
ja
jg
jne
push
mov
fiadd
out
fwait
mov
aas
jp
cmovb
push
(bad)
xor
out
loope
sbb
pop
and
retf
jle
xchg
adc
inc
cmp
dec
xor
sbb
cmp
xchg
pop
test
retf
adc
call
shl
add
mov
dec
push
cmps
jge
or
in
push
out
jbe
mov
xor
icebp
dec
jbe
ret
(bad)
aad
fld
jns
mov
(bad)
mov
mov
ins
sbb
mov
cwde
fdiv
scas
mov
(bad)
int
mov
mov
in
test
outs
sbb
lock
inc
adc
mov
cmp
jns
push
sbb
jl
retf
sysenter
or
ror
dec
cwde
ss
xchg
or
push
push
mov
out
imul
mov
push
js
mov
test
cld
fcomp
(bad)
daa
dec
jb
enter
pop
push
pop
cld
cmp
dec
push
loop
retf
xchg
jl
ds
sbb
push
leave
scas
inc
inc
out
out
and
adc
push
jmp
mov
and
sbb
or
pop
sub
jp
mov
push
xor
dec
xchg
xchg
test
jmp
das
aam
adc
rcl
mov
cs
les
or
push
sbb
call
sbb
add
out
retf
xor
ins
cmc
gs
fst
lahf
or
and
add
inc
xor
repz
add
or
cwde
out
cwde
cmp
jns
add
loop
aam
mov
jl
mov
mov
repz
dec
fild
imul
inc
scas
loope
mov
cli
or
dec
cli
fcomp
xchg
mov
add
inc
sti
cmp
or
repnz
iret
mov
xchg
dec
inc
(bad)
fbld
sar
gs
mov
in
mov
mov
fstp
test
ds
ds
(bad)
adc
xlat
push
inc
mov
pop
stos
push
cmp
mov
fst
mov
pop
dec
push
cdq
mov
ror
(bad)
scas
push
scas
sub
stc
xor
add
sbb
rcl
mov
mov
imul
out
neg
sbb
sbb
sahf
imul
rcr
(bad)
push
ins
push
adc
push
rol
popf
cwde
mov
mov
pusha
dec
cmps
ins
or
and
adc
jae
xchg
push
xor
daa
sub
ror
xchg
or
cwde
mov
lea
hlt
stos
inc
mov
in
scas
pop
outs
rcl
xlat
xchg
pop
cmc
test
jge
stos
sbb
jmp
scas
icebp
test
es
cld
loopne
aad
push
cmps
xor
jge
xchg
dec
inc
cmp
push
mov
icebp
inc
adc
adc
jecxz
adc
popf
jne
jg
dec
lods
jge
mov
ss
add
mov
mov
xchg
sbb
les
jb
jae
push
mov
xchg
call
ss
jmp
or
xchg
mov
push
mov
push
ret
test
or
jecxz
jg
enter
jle
(bad)
enter
mov
arpl
out
cmp
test
cld
sub
ror
out
and
cwde
ds
sub
mov
mov
xchg
out
xchg
pop
cmps
(bad)
adc
xchg
mov
das
in
mov
daa
push
stos
icebp
jnp
sahf
ds
push
xchg
fs
stc
mov
mov
sbb
fcom
dec
cld
pop
fmulp
std
mov
jle
call
fisubr
pop
or
or
sub
fwait
jmp
sahf
(bad)
add
retf
clc
fdivr
ret
retf
cmp
xor
mov
div
dec
jbe
imul
mov
pop
pop
fcomp
pop
scas
mov
adc
rcr
aad
mov
aas
lea
adc
fiadd
and
inc
out
aas
cs
retf
sub
cmp
sbb
mov
addr16
fcomp
and
outs
jp
fnstsw
push
xchg
test
aam
(bad)
into
vmaskmovpd
out
mov
retf
clc
fdiv
push
mov
dec
add
adc
sar
pcmpeqd
cmp
mov
or
pushf
pop
mov
call
mov
jmp
addps
test
pop
lea
push
add
xchg
sbb
sub
not
outs
adc
(bad)
jb
(bad)
mov
sub
cmps
or
cs
ins
cld
adc
daa
add
inc
mov
pusha
mov
cmp
cli
xlat
ins
aam
mov
adc
mov
adc
and
cmp
test
fmul
mov
jecxz
add
push
or
mov
xchg
jl
jg
push
sti
xchg
cld
adc
lahf
and
inc
ins
loope
add
push
sahf
mov
jns
xor
icebp
dec
or
adc
loopne
lock
push
mov
cmp
(bad)
movs
mov
inc
pop
clc
loope
push
rcr
mov
cmp
out
push
cmp
mov
movs
loopne
mov
inc
shrd
or
fcmovbe
dec
add
sbb
out
stos
inc
mov
mul
mov
je
fwait
cdq
sbb
xchg
mov
add
loope
push
mov
and
fbstp
mov
ret
cmp
shl
shl
loop
pop
xor
jns
cmps
(bad)
rol
(bad)
pop
lods
pop
in
popa
cmp
mov
out
(bad)
inc
sub
aaa
fwait
add
xchg
and
cs
add
dec
mov
fs
ds
retf
cmp
test
stc
loopne
xchg
cwde
cmp
js
and
fild
arpl
dec
sbb
cmp
stos
sub
mov
dec
sbb
cmp
push
push
enter
cmp
ins
jecxz
xor
push
xor
sahf
(bad)
mov
dec
xlat
mov
fwait
pop
adc
jg
push
or
mov
add
popa
jns
dec
jae
push
dec
xchg
sub
inc
push
fimul
scas
push
lock
add
fcmovbe
(bad)
in
pop
fisubr
pop
int
icebp
inc
mov
loopne
mov
js
stc
and
retf
xchg
repz
dec
xor
(bad)
pop
(bad)
adc
cmp
pop
cmp
mov
fsub
retf
fldenv
cwde
cmps
mov
push
add
retf
sub
inc
imul
inc
pushf
icebp
push
mov
addr16
call
int
popf
cwde
pop
(bad)
je
mov
mov
stc
jne
test
(bad)
xlat
mov
enter
dec
fwait
stc
inc
loopne
and
jle
(bad)
mov
push
fcmovnbe
dec
nop
push
into
lds
data16
pop
movs
les
nop
xor
loope
lods
popf
cmps
dec
fst
cmp
adc
pop
sbb
aas
mov
pusha
or
or
mov
test
pop
inc
(bad)
and
push
fbstp
lock
xor
(bad)
cmc
aad
adc
icebp
pop
jmp
xchg
push
imul
fisttp
sbb
dec
pusha
gs
pop
add
inc
call
loop
mov
ret
cdq
xchg
aam
or
lea
push
repz
aas
(bad)
repz
lea
and
push
ins
sub
outs
test
push
repnz
ret
out
mov
push
jae
dec
stc
dec
mov
xchg
loop
push
add
mov
int
mov
mov
mov
or
std
mov
adc
(bad)
jmp
sub
jmp
ja
mov
lds
popf
imul
cmp
call
stc
call
xchg
aam
sar
mov
loope
aaa
icebp
jmp
push
out
leave
pop
sub
push
mov
das
dec
and
dec
(bad)
in
lods
dec
(bad)
cmp
xchg
add
lahf
cmp
lods
and
es
pop
cmps
stos
mov
cmp
(bad)
mov
mov
mov
lea
pop
or
leave
je
test
adc
in
cmc
cdq
cli
dec
lods
jl
dec
mov
loop
dec
push
xor
mov
cld
ss
imul
es
scas
push
shl
(bad)
addr16
adc
xor
or
int3
xchg
xor
test
mov
mov
out
test
out
test
leave
lahf
xchg
xchg
fild
cli
jbe
or
pop
cmp
jl
sbb
loope
mov
and
inc
jmp
call
or
push
test
and
mov
adc
out
les
jmp
clc
std
mov
pop
fdiv
adc
jb
mov
fisttp
or
out
movs
dec
ret
call
pop
adc
scas
fldenv
sub
dec
test
(bad)
or
gs
leave
xor
pop
mov
adc
mov
stos
xchg
popa
jg
outs
sbb
cmp
(bad)
jg
or
loopne
pop
aas
icebp
scas
cmp
inc
jae
movs
lahf
dec
mov
push
retf
in
inc
add
jbe
cmp
or
cdq
int3
cdq
ins
and
adc
adc
push
xchg
adc
mul
xlat
clts
mov
mov
fldcw
aam
out
sub
mov
or
xchg
lds
mov
or
xor
push
repz
jecxz
stos
jl
repz
fidivr
into
test
dec
inc
mov
jo
imul
in
fs
(bad)
xor
sbb
ja
scas
jl
push
(bad)
ja
add
push
mov
pop
je
in
and
jp
dec
shl
push
div
push
pop
sub
push
add
(bad)
mov
in
dec
icebp
ret
mov
cs
pop
sub
stos
sbb
sub
push
daa
test
fnsave
js
iret
neg
repnz
dec
fs
or
outs
shl
lds
es
cmp
inc
das
clc
jp
dec
loop
sub
out
add
mov
cmp
es
(bad)
push
in
push
(bad)
les
hlt
out
sub
shr
fimul
jb
add
fs
out
rol
xchg
pop
push
jbe
(bad)
cwde
cmp
(bad)
adc
and
repz
cmp
scas
lods
inc
mov
loop
dec
lock
mov
mov
jp
scas
mov
ins
dec
jb
cli
add
or
mov
xlat
mov
shl
pop
push
mov
js
aad
jo
jae
add
lea
test
add
xor
fs
xor
pop
mov
xor
pop
fnsave
inc
jge
clc
ss
test
xor
add
mov
sbb
ins
mov
dec
call
xor
fst
ins
push
pop
mov
pusha
not
imul
xor
and
push
iret
mov
sbb
mov
fisub
and
ds
clc
push
mov
xlat
sub
xlat
cmp
mov
xor
mov
adc
rcr
add
test
fmul
or
push
xchg
mov
sbb
mov
idiv
retf
sub
shl
pop
retf
retf
and
inc
jmp
jne
scas
arpl
test
fwait
rcr
pop
ds
dec
sbb
mov
in
jns
stc
(bad)
cmp
sub
mov
mov
(bad)
mov
pop
adc
sbb
leave
cdq
ins
dec
mov
outs
ins
jmp
cmp
dec
stc
jmp
or
push
out
xrstor
push
inc
add
call
push
ret
xchg
xchg
xor
fnstenv
xlat
call
mov
inc
add
sbb
std
push
cmp
jle
or
push
fsub
dec
and
and
bound
xchg
idiv
xchg
mov
push
or
xchg
mov
call
inc
sub
jp
out
cmp
test
int
mov
popf
or
pushw
lock
xor
sub
lock
jns
icebp
popf
sbb
loop
push
test
xchg
jmp
mov
dec
rol
jmp
inc
inc
mov
push
cmp
icebp
ret
sub
out
ret
in
and
cmp
in
shrd
add
cmc
fucomi
mov
popa
je
lahf
mov
cs
xor
mov
test
pop
xor
pushf
mov
loopne
xor
pop
add
dec
dec
cdq
adc
mov
out
loope
cmps
jae
sub
sbb
xchg
popf
int
clc
mov
dec
mov
pop
xor
lods
inc
sbb
shl
mov
push
lock
jecxz
loopne
xchg
xor
popa
stc
shl
sub
lods
sbb
push
clc
mov
jmp
mov
pop
js
push
push
cmp
inc
pop
inc
cmp
fidiv
fisubr
test
into
arpl
loope
mov
test
sub
outs
je
push
push
cs
int
mov
sub
mov
movs
pop
or
sub
sbb
jbe
adc
add
fnstsw
in
push
fabs
aaa
xlat
add
sub
adc
int
mov
dec
add
pop
ror
fmul
cmps
cld
pop
pop
add
clc
test
mov
loop
sbb
iret
xchg
stos
mov
fbld
leave
bound
cdq
sbb
nop
aaa
mov
xor
icebp
push
mov
mov
jp
inc
xchg
loop
int
sub
cwde
inc
jge
push
inc
ret
sbb
lea
dec
jns
repnz
cmp
pusha
inc
dec
in
xchg
idiv
mov
adc
sub
push
xchg
jmp
retf
xchg
nop
xchg
(bad)
mov
ds
ins
les
inc
adc
les
loope
(bad)
push
rol
cwde
das
iret
retf
xlat
dec
mov
inc
cmp
xlat
mov
mov
pop
cdq
gs
sbb
jmp
cld
and
push
stos
mov
cmp
movs
mov
cmp
mov
and
sahf
call
rcl
movs
sti
xchg
pop
fstp
cwde
mov
gs
pushf
mov
les
sti
dec
push
xchg
outs
jmp
(bad)
mov
fst
xchg
icebp
add
lea
pop
inc
mov
jmp
sub
psubd
add
push
fistp
push
ja
push
mov
clc
ins
and
fld1
test
push
movs
push
shl
adc
cmps
dec
mov
rcl
mov
jge
scas
jecxz
ret
push
sbb
call
retf
test
scas
sub
clc
int
pusha
mov
dec
lock
mov
test
(bad)
loope
in
mov
mov
out
fmul
dec
in
xchg
lods
and
cmc
cmps
js
cs
imul
inc
jmp
(bad)
cmc
pop
jne
push
or
bound
jge
int
loopne
loopne
test
(bad)
enter
jmp
fild
xor
cmp
xor
jmp
xor
cmp
mov
pop
jmp
int3
jo
imul
inc
jnp
in
ja
cmp
fstp
inc
lods
fistp
jbe
dec
push
mov
int
ret
fisttp
int
jge
jmp
(bad)
or
push
lock
enter
push
sub
es
ret
xor
shr
mov
test
jnp
sub
push
outs
sbb
xor
cs
dec
mov
push
add
mov
sub
sar
cdq
cmp
pop
add
cwde
imul
and
mov
push
xchg
push
inc
retf
sub
pop
jo
pushf
cdq
call
pop
push
std
xchg
pop
push
ins
cld
jle
rcr
mov
dec
inc
daa
mov
je
cli
mov
cmps
jmp
out
nop
jmp
cld
mov
sbb
dec
lock
mov
mul
in
push
cmps
shl
xchg
pop
mov
lahf
shr
adc
xlat
mov
popa
loopne
fidivr
cmp
(bad)
js
int
inc
call
jmp
je
jo
mov
clc
cmp
daa
cld
inc
push
das
repnz
and
out
mov
loope
pop
and
aad
enter
sbb
dec
mov
loope
dec
test
adc
popa
data16
mov
sub
aaa
std
sahf
mov
ror
mov
add
ss
jmp
pop
jp
sar
movs
or
xchg
cmps
jno
test
outs
loop
mov
mov
shl
or
(bad)
mov
push
stos
mov
je
data16
pop
das
push
inc
jg
(bad)
in
sbb
xlat
cmps
stos
ins
cli
mov
push
ret
or
jb
ins
xor
sbb
xchg
pop
lock
mov
test
out
rcr
(bad)
push
fsub
fldenv
and
in
pop
sub
fsubr
mov
sti
mov
inc
xor
icebp
std
pop
pop
stc
fcom
xchg
in
lea
jle
jmp
ds
ficomp
jle
cmp
pop
and
int3
inc
je
movs
std
push
dec
cmp
push
arpl
repz
icebp
sti
push
shr
xor
adc
push
mov
clc
cdq
add
out
mov
(bad)
repz
sbb
aaa
retf
sbb
inc
sub
outs
jbe
xor
inc
jge
test
jmp
push
xchg
xor
mov
or
sahf
lahf
xchg
loop
pusha
mov
lds
xor
mov
cmp
push
mov
sahf
pop
and
gs
adc
icebp
push
test
add
fstp
push
xor
xchg
sbb
xor
leave
(bad)
pop
pop
dec
jecxz
mov
sub
clc
ss
push
pop
or
adc
push
hlt
(bad)
jp
cmp
sub
sbb
in
dec
addr16
repz
push
pop
jle
xchg
push
pop
int3
or
scas
enter
ror
es
add
add
icebp
mov
sbb
mov
mov
pop
inc
loop
test
xchg
lods
xchg
out
(bad)
jne
add
stos
aaa
scas
pop
mov
mov
pusha
xor
pusha
mov
mov
cmp
mov
loop
es
cld
pop
cdq
lahf
(bad)
adc
mov
inc
jmp
jl
out
cmp
cs
mov
pop
lahf
pop
sbb
ret
in
cli
ins
imul
cmp
dec
(bad)
ja
ret
mov
rcr
sti
push
icebp
and
jmp
adc
mov
loope
cwde
fcmovb
dec
xor
mov
mov
xchg
mov
(bad)
push
inc
iret
popa
sbb
inc
ret
adc
sub
repnz
jno
cdq
sub
lods
cmp
pop
gs
addr16
scas
stos
mov
mov
adc
jmp
push
out
ins
out
lods
sub
push
or
xlat
or
sahf
cmp
inc
mov
cld
push
dec
sub
std
lods
dec
fiadd
gs
cwde
mov
sub
das
jecxz
cmp
mov
cld
(bad)
jns
jb
js
sbb
in
adc
cmp
jne
cli
inc
int3
pop
ins
dec
mov
jecxz
mov
and
mov
enter
mov
call
repz
push
mov
or
out
mov
adc
test
fidivr
int
cmc
xchg
out
(bad)
jmp
xor
cmp
jne
aad
out
jbe
neg
mov
aam
in
mov
mov
idiv
imul
adc
(bad)
repz
or
ins
shr
repz
fadd
cmp
pop
xchg
adc
fwait
mov
mov
ins
adc
cli
mov
jle
call
imul
test
mov
loop
test
imul
jmp
inc
(bad)
cld
ficom
mov
add
cs
jmp
fcmovbe
popa
xchg
outs
pusha
pop
frstor
push
dec
dec
mov
inc
(bad)
int
push
cli
add
retf
jbe
push
aas
dec
or
xchg
cdq
iret
jae
cmps
repnz
cmps
xor
jmp
repz
outs
int
or
adc
cli
sbb
clc
mov
(bad)
repnz
xchg
ffreep
xor
adc
daa
lahf
iret
mov
or
jge
sbb
in
jmp
test
mov
sub
loopne
lea
or
ins
jne
ss
pop
hlt
cmp
ins
inc
(bad)
stos
cmc
ins
adc
lahf
fisttp
dec
repz
jle
imul
stos
ret
jne
jb
and
and
in
icebp
mov
sahf
xchg
inc
mov
leave
inc
and
pop
pop
pop
cmps
mov
add
lods
rcr
test
jge
push
push
fdiv
call
iret
jg
mov
sub
mov
inc
daa
sahf
jno
push
test
inc
(bad)
xchg
xchg
dec
leave
jle
enter
sbb
adc
jmp
fld
rol
fst
pop
cmp
sbb
add
outs
mov
cmps
stc
(bad)
mov
call
out
push
leave
ins
add
fdivr
stos
or
hlt
sbb
pop
and
loope
sub
add
lods
in
je
add
fidiv
dec
ret
icebp
stos
mov
cmp
mov
bound
xchg
jge
icebp
aas
bound
in
or
jnp
pop
cmp
xchg
xchg
push
lods
cmps
jmp
mov
popf
rcl
lsl
push
and
sub
cmp
cs
or
push
sbb
pop
daa
jg
je
push
push
in
pop
mov
mov
xchg
out
pop
test
sbb
cmp
or
add
dec
popf
xlat
hlt
jbe
jae
dec
add
xchg
pop
retf
test
(bad)
jge
mov
lods
or
sub
mov
cmc
cli
sbb
movs
sbb
bound
push
mov
sub
je
dec
cmp
popa
outs
mov
pop
push
sub
xor
sbb
lods
fild
gs
jb
adc
dec
jno
jnp
fmul
jne
cmp
sbb
dec
sbb
arpl
das
jae
shl
iret
push
and
stos
scas
add
inc
sbb
fnsave
sti
movs
mov
add
inc
xlat
inc
adc
cmp
rcr
ret
jb
xor
pop
sbb
sub
lds
mov
lahf
cmp
mov
push
lahf
ror
mov
jge
test
mov
cmp
mov
pusha
ss
or
es
call
mov
sar
mov
arpl
inc
pop
enter
les
adc
fcomp
and
inc
xor
mov
call
jecxz
cli
add
cs
inc
add
ins
mov
cmp
call
js
xor
retf
sar
or
mov
cmp
fcom
ret
or
into
inc
cmc
stc
cs
dec
into
dec
call
jns
std
push
sub
push
(bad)
mov
shl
xchg
push
and
mov
or
push
and
mov
mov
clc
xor
repz
mov
push
out
xor
pop
jne
xchg
lahf
pop
lock
xchg
ficomp
mov
iret
rcl
pop
inc
mov
push
test
retf
sub
stos
stc
mov
movs
pop
int
test
pop
and
dec
repz
dec
jbe
call
push
neg
loop
dec
(bad)
(bad)
xor
pop
mov
push
cdq
(bad)
cmp
mov
into
push
(bad)
xchg
dec
(bad)
loopne
adc
add
arpl
push
aam
in
and
adc
jge
test
dec
mov
popf
cmps
(bad)
popa
xor
ins
nop
mov
repnz
leave
stos
mov
popf
movs
leave
mov
test
mov
mov
adc
mov
dec
icebp
es
dec
xchg
in
mov
jl
jne
cwde
ror
xor
sbb
push
pop
pop
sbb
loopne
mov
jp
(bad)
inc
into
cld
jne
cwde
push
fisttp
push
jp
movs
mov
sbb
jge
fs
sub
adc
cmp
mov
pop
pop
mov
push
in
leave
cmp
aas
sub
jle
div
mov
test
add
out
jns
or
push
in
xchg
pop
inc
(bad)
lahf
jge
in
sub
xchg
cmc
inc
add
push
(bad)
or
fdivp
hlt
lods
rcl
out
sbb
scas
sbb
(bad)
in
xor
shr
out
cmp
adc
retfw
sub
mov
aas
fsub
in
jae
(bad)
adc
jecxz
out
fs
mov
inc
sbb
hlt
retf
inc
and
adc
in
or
pop
fcmovnb
xor
pop
test
imul
retf
sbb
mov
fcomp
je
retf
sar
call
std
pop
test
into
inc
ins
mov
sti
or
add
xor
movs
je
or
jle
(bad)
mov
cmp
and
aad
imul
scas
jg
popf
or
pop
icebp
adc
fs
or
adc
repnz
sbb
jmp
or
sbb
push
mov
cmp
sub
adc
xor
add
std
aaa
out
outs
lea
add
jne
pop
lahf
out
clc
(bad)
fs
mov
jp
es
adc
jns
(bad)
out
mov
sbb
jl
jns
mov
fstp
out
mov
push
mov
push
ret
dec
or
scas
jmp
push
in
(bad)
mov
ret
not
daa
(bad)
pop
sub
jnp
push
push
jo
hlt
sbb
cmp
adc
scas
mov
retf
push
fbld
lock
int3
in
push
mov
scas
and
pop
jle
jg
clc
add
jl
sbb
jg
jae
mov
xchg
dec
jmp
jecxz
stc
nop
mov
sub
inc
or
sub
mov
adc
mov
leave
mov
test
mov
and
bound
mov
stos
push
idiv
jg
cmc
pop
movs
mov
dec
add
sbb
aad
retf
or
xor
imul
cmp
push
add
nop
push
fld
mov
pop
or
retf
mul
aad
adc
shl
test
aad
inc
sahf
pop
div
(bad)
cs
sbb
enter
mov
add
xchg
cmps
xchg
inc
(bad)
stos
push
sbb
out
addr16
scas
imul
lea
dec
lahf
fimul
push
es
popa
xchg
jecxz
sbb
mov
xchg
cmp
imul
addr16
sbb
(bad)
mov
mov
cmp
dec
fstp
outs
mov
mov
mov
or
jo
sbb
mov
push
iret
push
iret
and
pop
sub
aaa
mov
jle
pop
in
mov
lods
aad
std
mov
test
inc
xor
xchg
dec
xor
push
mov
jle
and
repz
popf
sbb
sub
xor
mov
xchg
jp
stos
ss
test
clc
inc
stos
mov
repnz
mov
pop
aas
dec
jns
test
pop
dec
iret
adc
(bad)
clc
repnz
push
and
jmp
pop
ret
aam
and
je
scas
rol
lock
out
retf
mov
pop
or
fisttp
nop
cmp
pop
inc
fwait
ds
enter
(bad)
leave
jnp
xor
retf
fidivr
enter
sbb
es
adc
mov
dec
test
cld
sar
dec
xchg
jns
sub
imul
mov
enter
jno
cmp
or
out
sub
nop
call
ja
pop
cmps
mov
test
stc
push
pusha
jge
ror
lods
pop
lahf
repnz
inc
aad
pop
fcomp
loopne
cli
clc
int
test
push
pop
lods
cmps
into
icebp
not
mov
inc
dec
jge
adc
dec
imul
sbb
lods
das
mov
cmp
je
jmp
add
mov
or
jecxz
xchg
jne
fld
inc
inc
shl
icebp
mov
pop
stc
xor
jo
push
mov
xor
fild
dec
mov
cld
clc
inc
mov
dec
sar
xor
and
cmp
dec
call
jns
dec
into
movs
push
or
adc
data16
adc
jno
add
push
mov
outs
je
data16
add
push
aad
scas
jmp
cmp
pop
cs
sti
in
outs
inc
nop
dec
adc
dec
push
(bad)
outs
in
fsub
test
xchg
mov
repnz
xor
push
cli
inc
or
xor
cs
(bad)
in
sub
mov
jne
inc
ret
pop
rol
jmp
pop
adc
shl
cld
dec
test
test
and
sbb
lea
iret
mov
loopne
mov
ins
iret
xor
xchg
cmp
cmp
adc
int
mov
dec
leave
push
jbe
mov
out
sbb
int
mov
popa
inc
pop
jl
fist
push
cli
in
mov
pop
dec
mov
imul
push
sbb
in
or
adc
fdivr
dec
lods
ret
aam
sbb
and
sub
das
jns
sub
mov
xor
or
mov
fisttp
jnp
dec
add
sub
ja
aaa
cli
scas
lds
cmps
cdq
xor
pop
stos
xor
lea
popa
mov
dec
fwait
test
out
aas
and
popf
push
pop
inc
outs
and
aas
es
sub
imul
adc
js
push
pop
pop
sub
lods
pop
fs
movs
mov
cmp
cwde
jecxz
and
out
lods
dec
push
inc
cmp
call
ficom
pop
call
idiv
xlat
hlt
mov
popf
test
sbb
(bad)
cmc
jp
in
mov
sti
sub
lock
enter
xchg
mov
xchg
jae
or
fild
mov
sub
xor
imul
out
jae
inc
(bad)
fstp
or
push
pusha
loope
sub
pop
mov
lea
jns
rcl
int3
pop
pop
inc
mov
test
adc
push
je
jge
mov
sub
inc
xchg
mov
jno
mul
xchg
add
push
in
cmps
sbb
add
add
push
jne
test
leave
test
mov
ror
xchg
mov
mov
shr
in
dec
dec
mov
jmp
push
inc
mov
xchg
sahf
stos
(bad)
ds
popa
and
aas
inc
mov
lods
or
test
movs
mov
lock
jae
scas
sub
mov
fcom
loopne
jbe
push
mov
in
push
jl
push
sti
push
adc
sbb
push
pushf
ret
clc
ret
test
push
retf
sub
push
clc
(bad)
popf
pop
(bad)
mov
push
push
aas
xchg
or
fidiv
les
jb
jmp
sub
retf
add
mov
xchg
xchg
ret
rcl
sub
push
mov
xchg
cmps
call
pop
cmps
(bad)
int3
xchg
pop
mov
aad
sub
out
stos
es
fwait
repz
jno
loope
xchg
xchg
sub
push
(bad)
xlat
cmps
or
sbb
imul
mov
int3
mul
stos
mov
loop
adc
mov
inc
jmp
stc
mov
xchg
adc
ins
rcr
cli
add
int3
int3
addr16
imul
and
sub
jo
sub
sub
aam
mov
fcom
inc
icebp
mov
sub
or
(bad)
jge
stos
jl
cld
cdq
jle
arpl
dec
dec
iret
push
(bad)
push
iret
repnz
cli
push
cdq
cmps
mov
jle
fld
gs
pop
stc
mov
fsubr
inc
lahf
push
ret
scas
movs
call
push
cld
outs
add
test
cmp
icebp
push
dec
cmp
jo
or
shr
out
pop
sbb
aad
test
mov
mov
and
lods
pop
mov
xchg
inc
leave
(bad)
mov
pop
sar
add
mov
jb
push
int3
add
push
add
xchg
xchg
push
fcom
cmp
jecxz
inc
cld
jge
dec
xchg
adc
sub
loopne
xchg
out
mov
xchg
sub
pop
scas
push
sbb
mov
cmp
push
in
ins
sbb
sub
inc
cmp
jae
sbb
mov
xor
int
or
frstor
jns
pop
(bad)
or
repz
les
mov
scas
jno
sub
dec
movs
dec
les
jmp
mov
add
fucom
mov
adc
mov
add
xor
arpl
dec
cmps
in
pop
test
das
sti
sar
ins
push
loope
das
or
inc
frstor
outs
jp
add
push
xor
cmp
dec
shr
loopne
fdivr
sbb
(bad)
stc
das
adc
inc
mov
cmp
cdq
push
jg
lock
inc
pop
cwde
sbb
xchg
bound
jb
push
(bad)
jmp
daa
test
xchg
gs
aaa
push
push
sahf
xchg
cli
ret
lods
mov
das
push
out
ret
xchg
cmps
test
int
add
test
add
arpl
mov
stos
dec
inc
cdq
push
(bad)
cli
loope
push
inc
inc
mov
(bad)
mov
or
(bad)
stc
out
dec
jmp
adc
lods
cmp
sti
in
js
sub
in
addr16
cmp
js
pop
gs
dec
xchg
repnz
adc
adc
je
mov
adc
pop
inc
in
cwde
loope
cs
jb
dec
ds
pusha
repnz
iret
out
loopne
lods
add
aad
shl
ins
popf
aas
test
pop
jno
or
(bad)
(bad)
enter
xchg
aad
addr16
dec
lock
mov
add
cwde
cli
data16
js
or
adc
mov
pusha
and
cli
push
cmp
xor
hlt
sbb
sub
das
stos
shr
imul
pop
xchg
imul
mov
loopne
aaa
xor
outs
fimul
pop
shl
gs
stc
xchg
mov
add
(bad)
call
or
fnstcw
out
mov
cmps
ror
out
sub
mov
add
sahf
jmp
lods
addr16
add
mov
sbb
push
or
pop
addr16
dec
icebp
inc
xchg
cmp
arpl
rcl
shl
push
mov
je
sbb
loop
push
add
xchg
or
shl
sbb
loop
jp
xchg
pop
jmp
mov
dec
sub
fsubr
ins
mov
pop
pop
sbb
xchg
(bad)
popf
xor
std
fistp
out
ins
inc
rcr
xor
or
sbb
jnp
xchg
lea
jbe
adc
mov
cmps
es
nop
stos
hlt
bound
mov
sub
sar
loopne
pusha
test
or
shr
push
push
xchg
pop
push
es
rol
scas
(bad)
inc
arpl
mov
sbb
push
neg
xchg
repnz
dec
pop
addr16
mov
call
push
lahf
or
mov
mov
call
mov
mov
jecxz
lods
add
daa
test
adc
mov
add
jnp
idiv
fistp
jb
aad
sbb
push
pop
stos
mov
arpl
add
fdiv
or
out
test
call
cwde
and
imul
call
add
loopne
mov
out
xor
jbe
ror
mov
xrelease
scas
xchg
mov
xchg
adc
mov
mov
sub
sub
push
and
xchg
mov
mov
not
push
or
add
xchg
or
pop
xchg
mov
imul
lods
call
into
ds
repz
mov
pusha
cmps
sbb
nop
push
loopne
les
dec
push
stos
xchg
stos
xchg
add
sub
xchg
out
pop
add
daa
fsubr
fbld
add
pushf
lahf
jo
clc
xlat
mov
retf
inc
ja
xor
daa
movs
mov
fadd
call
aam
int3
fwait
lods
sbb
ret
xlat
pop
sub
jnp
jno
dec
aas
dec
adc
push
mov
imul
pop
mov
jo
ss
daa
adc
in
in
push
and
sbb
add
lahf
shl
lods
test
and
or
neg
or
aaa
xor
jb
fnstenv
or
fs
bound
movs
inc
sub
jmp
or
add
jnp
mov
pop
inc
js
xchg
ja
and
mov
sub
mov
out
xor
jbe
xchg
pop
cdq
push
cmp
xchg
and
pushf
cs
mov
je
pop
mov
loop
mov
dec
(bad)
sub
aad
std
or
loop
xor
in
in
repz
adc
mov
test
or
icebp
ds
xchg
adc
add
inc
sti
and
mov
jge
ja
rcr
xor
jg
cmps
and
xchg
gs
jns
je
mov
push
aas
xor
sbb
mov
inc
scas
xor
int
std
pushf
add
enter
cmc
movs
(bad)
test
pop
mov
(bad)
pushf
push
push
(bad)
jbe
sbb
rcr
push
inc
sub
sub
inc
scas
ins
imul
stos
xchg
cmp
jg
pop
(bad)
mov
pop
mov
xor
or
jmp
dec
and
sub
sti
js
xor
and
xchg
fs
inc
lods
pop
iret
fucomi
(bad)
(bad)
(bad)
inc
mov
test
or
jb
pop
jle
pop
std
aad
xor
jp
test
add
arpl
(bad)
pop
ror
inc
jae
push
rcl
mov
sub
mov
test
ret
(bad)
mov
xchg
sbb
pop
iret
inc
mov
adc
jnp
imul
cmc
jp
add
cmp
add
outs
sbb
mov
add
push
(bad)
out
xor
imul
gs
in
push
inc
cmp
call
std
dec
xor
mov
fstp
fimul
outs
mov
lahf
dec
bound
xchg
aad
mov
dec
push
iret
mov
pop
out
std
mov
inc
mov
cmp
rol
push
adc
jno
sbb
mov
cwde
movs
cwde
add
sub
arpl
in
inc
fistp
and
or
ret
jno
inc
mov
fimul
pop
iret
cmp
(bad)
xchg
scas
jp
pcmpeqd
pop
popf
pop
jnp
mov
arpl
imul
(bad)
jg
mov
mov
cdq
lock
aas
sbb
int
cld
lods
mov
pop
add
in
outs
daa
and
pop
fsub
adc
mov
xchg
inc
push
out
push
mov
lods
sbb
mov
jae
or
fisubr
mov
mov
cmc
into
cmc
test
ins
out
call
push
out
xchg
rol
sbb
inc
jmp
xchg
call
ss
jmp
rol
(bad)
jbe
adc
push
clc
out
add
imul
div
jg
xchg
pop
pop
add
ss
sub
ret
jnp
rcr
jno
xchg
inc
das
(bad)
into
pop
cwde
and
daa
loope
(bad)
fdivr
or
pop
cmp
pop
stos
xchg
daa
cli
shl
fisub
push
adc
adc
push
sar
pop
push
std
dec
xchg
retf
and
mov
aad
add
mov
jg
adc
test
cwde
cmp
fadd
loopne
loopne
lock
cmps
iret
fistp
push
out
or
mov
mov
es
aas
push
adc
pusha
fdiv
shr
jle
sub
sub
aam
rol
(bad)
lock
pop
sub
cmp
repz
xchg
xchg
fild
test
mov
clc
vdivps
mov
lods
hlt
mov
jge
(bad)
rcl
fs
xor
push
into
loop
or
pushf
cmp
push
clc
loope
daa
mov
xor
pop
ins
mov
jl
stos
mov
dec
popa
xor
iret
xor
(bad)
lods
outs
fst
xchg
dec
jnp
stos
mov
mov
iret
dec
ins
push
pop
out
rol
mov
(bad)
fimul
ret
jne
jno
push
jecxz
ret
dec
mov
adc
imul
sbb
pushf
xor
jmp
fmul
ja
jmp
mov
les
rcr
jg
loop
sbb
dec
jecxz
int3
cmc
leave
stos
jmp
int
and
call
pusha
pop
gs
(bad)
stos
push
ret
ret
jg
xchg
xchg
jb
(bad)
sub
adc
pop
repnz
jb
xor
add
xchg
outs
(bad)
stos
cwde
sbb
adc
rcl
fst
xor
(bad)
gs
add
fstp
sub
push
and
packssdw
loop
jp
scas
pop
iret
cmp
pushf
and
das
cmps
pop
mov
jge
in
(bad)
pop
jle
and
rol
call
dec
imul
xchg
mov
enter
mov
add
jb
cmp
mov
push
(bad)
xor
push
sbb
(bad)
(bad)
fcomip
cmc
out
sub
inc
loope
jns
jns
mov
xlat
sub
retf
fldenv
cmp
out
xor
mov
push
test
cwde
out
jmp
jb
hlt
lods
cmps
inc
outs
inc
add
call
sub
sbb
add
fwait
or
lea
push
jmp
cmp
jl
pop
enter
mov
mov
mov
popa
dec
and
ds
mov
pop
xchg
rol
jl
push
test
cmps
pop
dec
xchg
not
push
and
(bad)
sar
push
(bad)
dec
(bad)
xor
ficomp
xchg
jno
jmp
xchg
adc
mov
jmp
push
in
jae
js
sbb
sub
lock
xor
not
xor
retf
and
mov
cld
aaa
lea
and
jbe
nop
sub
jo
lahf
xlat
dec
mov
mov
mov
loope
retf
ds
mov
addr16
mov
mov
outs
pop
es
stos
push
stos
cmc
(bad)
jge
test
cmps
jb
mov
mov
jne
lds
xor
adc
stos
ins
(bad)
mov
push
xor
sbb
xor
dec
pop
call
jg
mov
add
jae
inc
pop
pop
inc
add
pop
push
cmp
outs
sbb
imul
imul
lahf
push
xchg
aad
nop
stc
neg
stos
mov
cmp
xchg
dec
push
mov
xchg
mov
push
inc
stos
(bad)
pop
push
jno
xlat
push
lahf
(bad)
mov
push
sbb
outs
std
and
ja
adc
push
es
jnp
or
xor
stc
arpl
dec
aam
sar
cmp
xchg
shl
clc
push
push
jnp
mov
jmp
outs
dec
outs
aas
xor
lods
jl
mov
not
je
cmp
call
inc
sbb
ss
div
push
inc
dec
and
pop
hlt
push
test
adc
test
(bad)
xchg
dec
lods
adc
stos
cmp
add
jecxz
xor
adc
xor
jg
pop
mov
mov
pop
scas
pop
fadd
mov
ret
pop
push
loop
into
(bad)
ins
sbb
jle
push
mov
or
in
retf
cmps
hlt
dec
fistp
xchg
hlt
outs
rcr
inc
clc
cwde
dec
pop
leave
ret
cmps
and
sub
inc
hlt
xor
mov
jo
dec
test
in
sbb
cmp
dec
fist
jle
arpl
movs
aas
push
scas
enter
pop
loopne
sar
mov
cmp
and
xlat
pop
sub
in
adc
xlat
cmp
fstp
or
cmp
adc
mov
jg
pop
imul
pop
sbb
cmp
cs
and
gs
mov
jle
popf
imul
push
fidivr
call
int3
add
xlat
mov
ret
inc
ja
scas
aad
aas
stos
add
ffree
call
cmp
dec
cmp
cmp
jbe
jle
xchg
cmp
retf
sub
out
scas
test
dec
repz
stos
inc
xchg
stos
and
call
mov
xor
mov
cmp
daa
and
cmp
xchg
loope
retf
jl
(bad)
push
in
fwait
jns
xor
test
pop
sar
and
push
les
dec
aaa
outs
popf
(bad)
int3
clc
add
and
aas
out
mov
repnz
mov
mov
mov
inc
into
xor
mov
fmul
mov
mov
adc
mov
or
or
add
push
push
clc
fst
mov
je
mov
in
ror
out
add
jg
push
pop
sub
mov
leave
enter
stos
mov
cwde
jae
jp
add
mov
cmps
lods
sbb
cmp
push
cmp
jbe
mov
push
or
pop
pop
shl
inc
push
es
addr16
pushf
fistp
lea
sbb
imul
loope
mov
bound
adc
sbb
pop
call
nop
std
mov
jmp
fsubr
or
js
icebp
(bad)
and
cwde
mov
or
xlat
pop
push
into
xor
es
test
sbb
popa
mov
inc
data16
and
das
and
mov
out
jae
push
cmps
loope
mov
jae
aas
add
ror
je
aad
xchg
jl
mov
inc
stos
jge
mov
(bad)
mov
sub
or
jne
sbb
add
cmp
inc
ds
jne
enter
jb
in
idiv
mov
sahf
xor
fidiv
jo
mov
cmp
jmp
add
jmp
cli
cmp
sar
pop
mov
sbb
mov
mov
inc
mov
mov
scas
adc
inc
adc
adc
daa
xchg
ds
fstp
add
cmp
push
out
fdiv
mov
imul
lds
lea
or
ss
jnp
popa
sbb
and
sbb
add
stc
ss
adc
test
jmp
pusha
idiv
adc
ficomp
iret
cmp
test
out
or
sub
lods
bswap
mov
sbb
cwde
into
in
mov
fisubr
and
jbe
arpl
sahf
movs
out
mov
in
push
rol
or
xchg
cwde
jl
aad
dec
inc
and
imul
or
outs
mov
or
ja
call
mov
or
push
test
(bad)
dec
xor
cmp
sahf
movs
push
test
pop
imul
jno
ss
popa
fist
dec
add
dec
and
in
pop
sub
sbb
inc
jge
pop
xchg
lods
imul
jns
int3
mov
and
cs
sub
xchg
mov
gs
iret
xor
ror
gs
sahf
loopne
xchg
int3
test
jmp
xor
mov
or
gs
or
xchg
in
imul
std
test
mov
dec
cmp
fmul
jns
cmp
jno
cmp
sub
shr
cmp
icebp
sar
mov
popf
jle
test
iret
add
and
into
lahf
or
cmp
cmp
in
jecxz
aad
fs
add
nop
add
dec
mov
fisubr
mov
cmp
lds
xchg
aad
loope
or
ins
loope
into
movs
inc
mov
int3
in
loopne
test
or
(bad)
cmc
retf
or
xor
call
rol
call
icebp
sub
ins
xor
repz
lods
jbe
ret
ins
in
mov
mov
jle
mov
fs
push
push
push
sub
dec
fs
retf
stos
adc
pop
jb
cdq
movd
jmp
jmp
jnp
push
std
dec
inc
jb
pop
mov
jbe
xor
cmc
enter
cwde
inc
mov
pusha
ins
scas
and
aaa
in
xor
dec
and
sub
push
les
add
in
cmc
add
xchg
jae
call
scas
loopne
pop
jns
and
mov
(bad)
call
into
lods
xor
jle
mov
xor
pop
loop
pop
inc
cmc
cmp
inc
call
or
in
cmps
arpl
pop
pop
shr
shl
push
cmp
inc
cdq
and
shr
mov
add
movs
cmp
(bad)
add
cmp
nop
pop
adc
push
or
scas
mul
add
(bad)
xor
push
sbb
xchg
enter
xchg
or
pop
xchg
or
cwde
dec
jns
mov
shr
(bad)
jge
cdq
cmc
mov
sub
add
sbb
mov
stos
ds
addr16
sbb
adc
adc
fisubr
push
sub
clc
push
sbb
ss
dec
fbstp
fisttp
(bad)
mov
test
ds
sahf
adc
repz
fcmovnbe
jg
dec
idiv
cmc
jb
xchg
sub
(bad)
or
and
cmc
dec
mov
adc
pop
cmps
sub
mov
and
rol
nop
push
jmp
cli
xor
add
aad
sbb
mov
mov
ins
inc
data16
cmp
fst
test
sar
rol
lds
aas
mov
sbb
xor
enter
test
jmp
test
inc
and
jae
or
in
jp
mov
neg
test
add
adc
call
je
xchg
iret
out
and
fdivr
cmps
imul
jno
out
sbb
ins
(bad)
int3
fcomip
push
repz
neg
sahf
out
mov
mov
call
mov
scas
jmp
shr
(bad)
call
xchg
out
mov
test
in
jge
hlt
out
mov
and
cmp
cmp
imul
scas
fwait
or
cmps
js
xchg
ins
test
jecxz
mov
lods
adc
scas
int
add
pop
cmp
pop
pusha
sub
or
jge
fnstenv
add
mov
and
push
inc
sub
dec
jae
std
dec
ficom
push
loop
aad
hlt
xchg
imul
je
inc
jo
in
fmul
mov
movs
loop
xlat
(bad)
or
aaa
and
mov
mov
mov
inc
sbb
shl
jecxz
pusha
je
call
ja
fcom
pusha
inc
into
in
shl
ret
dec
adc
enter
fisttp
mov
dec
xor
add
pop
je
icebp
xor
cmp
jbe
pop
xor
pop
sbb
ja
jbe
dec
pop
gs
inc
fadd
daa
out
data16
(bad)
imul
shl
sub
xchg
sub
sbb
js
push
sbb
mov
nop
sti
xchg
sub
scas
out
xor
pop
cmp
cmp
cmp
xchg
dec
mov
in
ins
imul
out
inc
pop
call
or
pusha
jne
xchg
cmp
sti
add
sti
inc
cmp
stos
mov
stos
dec
int3
sub
mov
ins
fwait
js
nop
jbe
push
xchg
ret
jae
into
les
pop
inc
scas
push
mov
outs
jo
stc
xlat
ds
cld
and
jp
shl
xor
sub
ss
xor
out
lsl
pop
xor
les
dec
lods
sub
cmp
rcl
es
das
(bad)
mov
or
clc
inc
inc
sub
(bad)
lea
fst
ret
cmp
imul
dec
mov
xchg
in
xchg
test
jne
jno
cwde
mov
int
or
into
cmp
popf
jp
rcl
sbb
sub
xchg
and
mov
dec
mov
mov
pop
jecxz
test
fiadd
stc
lock
sub
enter
rcr
ins
gs
loop
fsubr
aad
dec
jmp
xchg
les
xchg
(bad)
fcmovbe
out
fwait
cmps
push
sub
cmps
lds
test
in
movs
test
rcr
push
iret
inc
rol
mov
and
mov
retf
cs
popa
(bad)
push
sbb
mov
jno
lods
retf
add
mov
cmp
out
cld
test
call
xor
push
js
cmp
mov
jb
shr
test
fcom
cmc
pop
mov
cs
or
mov
mov
pop
ins
mov
sbb
sti
sub
pop
pop
pop
pop
xchg
(bad)
je
fnstsw
(bad)
icebp
and
repnz
sbb
inc
push
mov
xor
mov
ret
xchg
popa
je
rcl
mov
or
inc
adc
sbb
fwait
mov
pop
cmp
shr
mov
jg
add
sub
ss
dec
xor
cld
cmp
in
push
js
lea
mov
lahf
std
add
imul
inc
and
out
es
out
sbb
fdivr
(bad)
in
jg
lock
add
(bad)
xchg
out
pop
cld
idiv
push
idiv
inc
js
and
mov
lahf
mov
fist
mov
enter
sahf
xchg
pop
mov
repz
xchg
jbe
rcr
cld
push
cmp
out
in
daa
in
pop
pop
mov
mov
push
fisub
xor
add
mov
or
pusha
or
add
rcl
popa
adc
mov
pop
dec
push
ret
xchg
adc
xor
arpl
xor
sub
out
std
inc
xor
adc
mov
inc
jle
mov
push
jo
sub
inc
scas
(bad)
scas
pusha
aad
sub
mov
mov
cmp
stc
cmp
pop
ja
push
icebp
lahf
or
div
sub
pop
and
loopne
aas
jle
rcl
sbb
cmps
mov
ret
test
shl
mov
add
loope
push
fnstenv
das
dec
mov
xchg
cmp
test
fcom
fmul
push
mov
jb
hlt
mov
lock
scas
pop
adc
xchg
inc
test
je
movs
test
push
mov
jb
xchg
sbb
jb
dec
repnz
dec
pop
movs
push
sbb
cld
xchg
loope
mov
clc
mov
in
cmps
call
mov
call
xchg
adc
repnz
mov
call
in
xor
jno
loop
ficom
sti
mov
adc
jae
sbb
icebp
push
add
mov
(bad)
loop
mov
push
pop
cdq
inc
mov
jmp
fisubr
repnz
loope
fcmovbe
pop
add
cld
(bad)
mov
repnz
lahf
mov
cmovp
xor
push
icebp
imul
mov
(bad)
lds
mov
lods
stos
nop
movs
ficom
mov
jno
(bad)
mov
(bad)
std
(bad)
sub
retf
repnz
repnz
loop
dec
push
inc
jle
mov
mov
mov
movs
idiv
pop
enter
jns
pop
sub
xchg
inc
test
adc
inc
push
jl
jno
inc
movs
cmp
call
push
mov
or
outs
inc
pop
inc
cmp
call
and
pop
aam
test
clc
mov
shr
xor
vorps
sar
test
push
mov
cvttps2pi
(bad)
pop
mov
jmp
jbe
xchg
mov
xor
mov
(bad)
out
xor
push
retf
stc
lahf
add
pop
out
in
pop
and
nop
loope
out
xchg
jmp
push
xor
lds
mov
out
scas
push
arpl
push
in
xchg
lds
or
jle
ror
adc
mov
fstp
jbe
pop
test
push
mov
ja
test
push
jno
jg
or
icebp
and
fptan
mov
loopne
fwait
dec
push
cmp
jmp
fnsave
retf
popa
sub
xchg
cld
dec
gs
cs
mov
cwde
bnd
mov
fst
or
inc
imul
sub
xor
int3
cdq
mov
daa
xchg
rcr
je
movs
xchg
movs
mov
outs
adc
xor
lock
push
(bad)
ret
popf
sti
pop
xor
imul
cmp
not
and
pop
cmp
ins
jmp
mov
(bad)
sbb
in
test
push
pop
dec
jb
enter
ins
pop
or
jl
(bad)
test
cmp
adc
dec
mov
xchg
cli
jle
or
(bad)
call
cs
dec
and
mov
xlat
xchg
inc
jle
cmp
and
gs
dec
daa
stos
inc
cmp
xchg
scas
idiv
xchg
stc
xor
xchg
xor
push
out
or
cmp
int3
add
repz
mov
mov
pop
sub
ss
mov
dec
push
and
rol
arpl
cmp
push
jno
sbb
mov
adc
mov
shl
xchg
xor
test
pop
jg
cmps
or
ds
pop
repz
scas
xor
fimul
xchg
sub
stos
mov
sbb
ficom
add
inc
push
dec
das
jmp
push
cmps
stos
sub
outs
pop
mov
cld
lods
xchg
adc
test
xor
pop
(bad)
mov
stos
xor
in
pop
repnz
xor
sahf
sbb
pop
in
xchg
jle
and
dec
adc
mov
xor
ins
out
dec
arpl
loope
sub
jo
jo
pop
sub
outs
xchg
pushf
jo
dec
jle
xchg
dec
adc
bound
push
fsubr
push
fld
xchg
fldcw
lds
fldcw
or
repnz
sbb
pop
pop
pop
jmp
add
xchg
sar
mov
daa
sub
sbb
(bad)
into
jmp
test
mov
inc
cmp
leave
repnz
popa
scas
lea
shl
ja
adc
movs
add
ret
xchg
out
stos
push
(bad)
mov
push
sbb
outs
xchg
sti
je
or
lea
xor
or
add
jne
fcom
or
repz
xchg
mov
cdq
rcl
mov
inc
and
inc
cld
adc
pop
aas
inc
lea
sub
aaa
aam
retf
push
nop
stos
cmc
out
sbb
xchg
aas
movs
nop
jecxz
mov
aaa
or
aaa
push
(bad)
ins
shr
out
mov
mov
and
std
mov
pop
sti
scas
push
repz
xchg
popa
add
out
cmp
cmp
dec
jne
out
xor
sbb
popf
dec
sub
sbb
xlat
repz
ins
shl
xchg
mov
movs
nop
aad
mov
(bad)
jns
push
test
add
adc
push
and
push
mov
out
mov
jp
loope
adc
cmp
adc
(bad)
lods
in
out
out
pop
mov
lods
pop
mov
add
jne
(bad)
xor
scas
(bad)
push
ds
mov
mov
repz
jmp
fwait
pop
pushf
jle
lds
xor
dec
addr16
jecxz
xchg
push
add
xchg
cmp
mov
fsubrp
push
pop
(bad)
mov
add
dec
rcl
cmc
sbb
ret
sti
sbb
fnstcw
loopne
lods
and
jmp
pop
es
out
popf
daa
nop
dec
das
(bad)
or
adc
jp
push
add
clc
(bad)
push
jae
mov
mov
cmp
int3
and
pushf
cs
test
aas
repz
pop
ret
and
cmp
dec
sub
(bad)
sub
aaa
fnstcw
push
xor
cld
jnp
pop
std
push
pop
add
push
into
clc
cmp
scas
xor
mov
or
test
loop
jle
cmps
mov
xchg
jg
aad
add
(bad)
mov
shl
or
cmp
sub
dec
retf
ror
pusha
test
mov
adc
js
ds
push
fisub
push
jae
xlat
int3
ret
das
frstor
push
pop
mov
arpl
cmp
pop
inc
push
fbld
pop
pop
adc
sbb
xor
adc
mov
outs
push
mov
xchg
(bad)
jmp
or
dec
xchg
iret
xchg
xchg
mov
test
pusha
xlat
js
mov
push
mov
cmc
bound
fst
mov
xchg
mov
mov
retf
jns
dec
sbb
inc
out
mov
out
jns
movs
stc
adc
sbb
adc
stos
push
push
inc
iret
es
gs
xlat
xor
daa
push
mov
xchg
fwait
adc
stc
cdq
sbb
mov
mov
pop
mul
outs
cmc
or
int
fld
call
hlt
shr
repnz
cmps
inc
sahf
pop
cmp
or
or
push
fs
pop
imul
sub
adc
dec
dec
and
jne
dec
dec
shr
js
jmp
adc
mov
ins
mov
cmp
add
int3
xchg
popa
sahf
add
mov
stc
outs
in
adc
mov
dec
sbb
mov
outs
mov
mov
jmp
push
mov
nop
stos
lahf
test
cmp
cmp
pusha
ins
pop
outs
repz
rcl
out
arpl
stc
xor
(bad)
das
add
arpl
inc
mov
inc
or
cs
movs
mov
cmp
jmp
das
sti
xor
and
mov
ins
mov
jmp
retf
push
push
mov
out
in
xor
jae
out
or
inc
dec
jmp
ret
jp
xor
push
cmp
and
ja
mov
fwait
retf
sub
inc
sub
cmps
mov
es
add
xor
mov
xchg
test
mov
dec
scas
imul
push
mov
xor
into
dec
leave
or
cmp
push
mov
add
and
movs
mov
push
loopne
hlt
inc
and
stc
xchg
fstp
lock
addr16
mov
(bad)
cli
adc
lahf
sub
ror
fild
test
mov
push
aaa
or
in
xor
jecxz
cmp
(bad)
ret
xor
cmp
mov
cmp
sahf
dec
test
lods
mov
mov
sub
or
cli
jae
push
dec
add
add
repnz
jp
rcl
ja
sub
mov
mov
cwde
mov
aaa
pop
jne
cwde
out
ror
mov
fs
sbb
imul
stos
loop
(bad)
loop
dec
mov
xchg
dec
je
add
jns
xchg
cmp
dec
adc
jp
addr16
js
frstor
call
cmp
icebp
fisubr
mov
jmp
shr
inc
xor
sbb
push
sub
or
add
sahf
pop
call
call
sbb
sub
cdq
jg
pop
cmp
out
xor
(bad)
in
or
dec
inc
out
fidiv
push
pop
fst
inc
pop
shl
ret
cmc
(bad)
mov
add
jo
jge
and
stos
xchg
and
cmps
push
cmp
add
(bad)
data16
add
add
ret
sar
xor
lahf
and
cmp
sub
jne
or
stc
cmc
and
or
lahf
inc
and
push
neg
js
aam
stc
out
inc
and
loopne
xchg
loope
aad
dec
cmps
cli
mov
stos
aam
cmp
mov
dec
movs
xchg
std
xchg
test
lods
loop
(bad)
push
xchg
call
out
or
pop
pop
add
popf
je
movs
mov
inc
ins
sub
sub
cmp
mov
adc
add
lods
cmps
push
xor
xor
sub
rcr
rcl
fiadd
fcom
shr
pop
aas
mov
push
arpl
int3
sar
or
jecxz
stos
sub
ret
jne
test
add
xor
xor
cmc
lods
sahf
sub
adc
repnz
sahf
xchg
stos
in
test
or
xchg
mov
retf
loop
push
inc
sub
dec
xchg
movs
or
inc
scas
ret
mov
xchg
or
mov
mov
sar
out
or
mov
addr16
add
dec
cld
cs
mov
xchg
adc
jmp
ret
and
mov
or
js
inc
mov
sbb
jmp
dec
daa
xor
jns
jns
rcr
in
mov
fld
sub
jbe
aaa
sti
xor
nop
aaa
cmp
loope
lods
push
inc
cmp
xor
inc
in
sbb
cmps
(bad)
cmp
ficomp
(bad)
adc
sbb
test
in
in
push
test
sub
mov
add
lahf
sub
mov
and
mov
pop
sahf
out
popa
js
inc
outs
cmova
loope
stos
dec
and
or
retf
dec
sub
sbb
push
movs
xchg
out
mov
cmp
push
sub
lock
icebp
pop
leave
mov
jns
outs
(bad)
cmc
mov
fs
or
pusha
mov
(bad)
cld
dec
in
or
mov
ss
xor
test
sbb
je
jecxz
inc
int
inc
outs
not
push
iret
sbb
ds
pop
div
mov
inc
lock
shl
push
xchg
xchg
push
adc
xchg
mov
cmc
(bad)
and
mov
mov
cmp
inc
movs
push
and
mov
pop
mov
lods
movs
test
ins
cs
pop
push
lds
jge
sub
loop
and
adc
sbb
shl
or
push
and
call
pop
xchg
pop
in
cmp
mov
adc
cmp
pop
xchg
inc
movs
sub
lahf
stos
mov
loop
cs
loop
xchg
pop
xchg
ins
in
icebp
xchg
mov
inc
daa
mov
aad
sbb
fnstcw
fld
push
add
lea
hlt
outs
inc
test
pusha
fwait
ret
mov
test
fdivr
adc
xor
jmp
cmp
test
mov
jnp
fbld
les
sub
repz
mov
mov
bound
dec
cmp
mov
mov
mov
or
sahf
mov
cmps
cld
mov
bound
shr
int3
push
pop
sbb
aad
mov
data16
mov
and
out
in
pop
adc
xlat
mov
add
ret
(bad)
and
or
clc
jae
mov
in
sbb
and
mul
call
ficomp
in
jg
addr16
and
mov
inc
inc
ins
cmp
or
mov
xchg
add
jmp
movs
pop
and
push
loope
sub
sbb
arpl
in
mov
bound
mov
sbb
cmps
shl
(bad)
iret
int
lea
js
xchg
adc
(bad)
aam
push
push
fbstp
mov
jmp
outs
dec
movs
mov
pop
fcom
sub
mov
jns
loopne
pop
test
hlt
(bad)
dec
xchg
bound
imul
jne
sahf
aaa
ins
xchg
pop
add
outs
pop
xor
ds
(bad)
mov
cmc
fadd
arpl
je
sub
retf
test
cmp
sbb
pop
cmp
aam
xchg
cmp
jnp
adc
xor
jp
or
mov
in
push
sbb
inc
js
cmp
and
pop
repz
dec
shl
lds
push
sti
xchg
pop
daa
sbb
add
push
test
lods
mov
int3
jae
int3
sti
mov
and
sahf
inc
pushf
ficom
inc
xchg
sub
mov
cmp
xchg
stos
pop
aad
sub
jns
inc
js
dec
mov
pop
xchg
xor
ins
mov
enter
cld
lahf
mov
in
jge
mov
push
movs
jne
movs
fwait
sbb
arpl
ret
imul
sbb
inc
cmps
mov
pop
xchg
sub
mov
dec
lock
xchg
les
(bad)
ins
inc
fldenv
xor
test
add
xchg
ds
jno
pop
rcl
sub
push
rol
inc
cmp
add
pop
mov
jb
rcl
stos
ins
aaa
inc
pop
fs
in
mov
outs
adc
sub
aaa
dec
adc
dec
jl
(bad)
fcomi
sub
pop
xchg
sbb
xchg
pushf
cmp
push
sar
(bad)
out
cmps
fdivr
jge
enter
xor
enter
arpl
mov
retf
es
xchg
mov
sub
imul
xor
out
add
mov
inc
adc
ret
movs
jbe
lahf
jb
jnp
push
pop
inc
jnp
(bad)
(bad)
hlt
repz
mov
mov
add
int
xor
cmps
push
jecxz
xchg
fyl2x
pop
and
jle
cwde
mov
test
push
inc
mov
sbb
adc
and
test
leave
rcr
add
mov
cwde
std
sub
repz
ds
or
out
movs
inc
inc
add
inc
cmc
sbb
leave
movs
out
or
sub
int
sbb
fisttp
das
ins
add
inc
push
or
shl
xor
pop
jb
loope
sbb
gs
push
inc
jecxz
mov
push
inc
imul
loop
pushf
mov
scas
mov
pop
inc
shl
(bad)
stc
jg
ins
test
adc
retf
mov
cmps
adc
push
int
push
fdivr
xchg
test
jo
(bad)
push
cdq
dec
adc
adc
aas
jge
jge
loopne
in
in
in
clc
jae
hlt
jae
xchg
jl
fnstenv
mov
ins
repnz
mov
add
out
ds
pop
xor
fidivr
pop
jns
xor
push
lods
mov
adc
ds
jge
sbb
retf
mov
mov
repnz
ret
mov
in
adc
jno
push
pop
sub
imul
sar
push
test
mov
xchg
icebp
nop
add
outs
pop
push
idiv
cmp
xchg
xchg
xor
mov
jge
sbb
push
jg
dec
adc
test
or
repz
mov
in
outs
imul
bound
add
movs
cmps
mov
arpl
jge
mov
jo
sbb
idiv
jo
lods
and
scas
and
mov
aam
dec
xchg
stc
(bad)
bnd
and
add
xchg
jg
and
lods
add
popf
sbb
movs
jmp
mov
das
call
scas
sbb
bound
dec
out
sub
movs
xchg
test
call
push
(bad)
xor
adc
xchg
ja
inc
dec
outs
add
sbb
sti
inc
mov
mov
jae
mov
mov
rol
fcom
js
and
aas
mov
(bad)
fbld
xchg
lahf
push
and
(bad)
mov
fcmovnu
sub
fidivr
mov
das
jmp
rol
lods
mov
pop
jno
jecxz
movs
fidivr
adc
sbb
inc
xor
nop
mov
arpl
pop
push
and
(bad)
dec
repnz
int
jae
fdivr
inc
xchg
xor
mov
adc
cs
cs
stc
mov
mov
fidivr
xchg
lea
loopne
jnp
pop
pusha
jle
lods
jae
or
pop
test
daa
std
pop
push
xchg
and
aaa
out
in
push
fs
(bad)
push
add
test
lahf
mov
dec
test
jecxz
call
pop
ds
stos
lock
mov
not
pop
cld
dec
stos
sub
jo
inc
mov
fnsave
(bad)
neg
add
sti
mov
mov
fwait
jae
and
test
mul
mov
ret
leave
ss
xor
mov
cwde
pop
xchg
cmps
mov
adc
aaa
out
pop
add
cmp
stc
push
xchg
or
out
cdq
mov
iret
dec
adc
sar
sbb
mov
adc
adc
test
jg
lock
cli
mov
test
push
leave
jo
xor
mov
jge
push
jl
je
rcl
jo
dec
pusha
sbb
repnz
test
mov
sub
dec
mov
inc
call
fcos
in
cmps
(bad)
xchg
sti
jg
sbb
dec
cmc
repz
mov
add
push
mov
aad
ins
cmp
add
dec
lods
sub
(bad)
xchg
nop
mov
or
stc
jp
pop
lods
xor
inc
push
xchg
jne
mov
mov
out
pop
gs
inc
inc
inc
jmp
sbb
pusha
or
adc
dec
ds
push
lahf
jecxz
movs
arpl
jb
std
into
xchg
xor
mov
jae
es
pop
outs
imul
sub
cld
std
stc
mov
mov
and
and
dec
in
int
cmps
cld
loop
test
or
push
jmp
bound
out
stc
sbb
mov
fnstsw
fst
mov
dec
xor
es
or
loop
sbb
fidiv
cmp
mov
push
rol
sbb
aam
sbb
jb
dec
pop
jmp
inc
sbb
idiv
cwde
ins
fimul
mov
shl
outs
push
jle
mov
pop
pusha
push
sbb
add
outs
sub
or
pop
or
jb
ds
dec
add
mov
add
push
pusha
data16
cs
jo
scas
cmc
(bad)
out
iret
add
or
fisttp
cmc
(bad)
(bad)
std
dec
pusha
lahf
pop
dec
sti
and
xlat
ret
inc
loope
arpl
adc
mov
cmp
lea
test
mov
fstp
push
jmp
fmul
pop
xchg
or
jb
test
in
in
(bad)
push
inc
inc
jge
ja
popf
mov
popa
test
pusha
mov
add
mov
clc
mov
xor
fimul
mov
xor
repnz
ficomp
mov
push
push
sbb
sbb
jno
fadd
js
cmp
push
mov
or
stos
loopne
arpl
or
mov
adc
adc
cdq
retf
pop
mov
dec
mov
jmp
inc
(bad)
pushf
call
mov
mov
or
test
enter
xchg
ja
iret
sub
xchg
push
mov
jae
outs
push
je
ins
pop
rcl
js
not
xor
pushf
mov
and
stos
je
pop
jno
dec
push
and
outs
push
(bad)
xor
shl
mov
mov
mov
js
mov
lods
repnz
pop
mov
into
cmp
cmp
push
(bad)
daa
nop
inc
add
cs
adc
add
jecxz
(bad)
and
lock
out
out
sbb
fsubr
test
aas
sahf
mov
xchg
int3
loop
inc
scas
adc
hlt
xor
(bad)
out
adc
test
popf
aam
fisub
pop
jl
aas
mov
hlt
push
data16
mov
jo
xchg
mov
pop
adc
mov
cmps
pop
mov
ins
sbb
xor
sbb
xor
mov
push
cmps
stc
jnp
data16
out
ja
inc
dec
in
ret
cmc
jmp
mov
sbb
pop
in
aad
arpl
cmp
sbb
loop
jge
sub
sbb
shr
cwde
call
rol
fidiv
mov
das
adc
jle
mov
lods
fwait
jo
call
dec
dec
call
and
sub
xor
popa
jns
scas
or
and
inc
sbb
pop
sbb
push
ret
add
cmp
rcr
enter
add
(bad)
jp
cmc
and
or
jae
adc
(bad)
retf
cmc
cmps
mul
addr16
or
xchg
sub
shr
push
xchg
out
sbb
repz
fistp
out
and
(bad)
xchg
(bad)
xchg
xchg
inc
mov
jl
(bad)
lods
xchg
out
xchg
addr16
push
shl
push
in
out
and
push
in
and
jmp
lahf
bound
mov
pop
ja
dec
ja
test
adc
xchg
push
shl
jle
jl
jno
daa
mov
pop
dec
sbb
push
adc
push
sbb
loopne
xor
cmps
add
dec
int3
scas
dec
(bad)
(bad)
push
xchg
fs
xchg
popf
jg
fsubr
xchg
test
rcr
fyl2x
adc
xor
pop
dec
jbe
sub
push
adc
movs
call
sbb
xchg
cmps
adc
(bad)
pusha
add
or
pop
sub
xor
xchg
ins
add
add
ds
pop
cdq
fild
imul
sub
xor
out
pop
push
inc
jo
sti
jb
in
push
ret
pop
popa
aam
mov
xchg
mov
in
ja
pop
retf
pop
call
stos
hlt
ja
bnd
das
shl
xor
jne
ja
movs
icebp
sbb
rcl
mov
adc
adc
inc
cli
dec
pop
pop
mov
xchg
aad
loopne
adc
mov
and
adc
loope
cmp
dec
rcr
(bad)
stc
mov
fs
je
cmps
es
cdq
stos
hlt
std
into
mov
ins
retf
test
or
sbb
aam
in
mov
daa
xacquire
les
inc
pop
xchg
adc
mov
enter
push
jg
out
fist
add
call
xor
pop
mov
push
test
sar
sub
mov
loopne
mov
xchg
int3
lds
push
in
stos
push
sub
ins
cmp
mov
lods
sahf
xor
jecxz
xchg
xor
mov
push
sub
test
scas
and
push
adc
sub
daa
fisub
lea
fstp
popf
sar
lock
add
in
into
adc
(bad)
aam
or
js
or
cs
xchg
mov
out
xchg
mov
xor
les
popa
or
cmp
cwde
std
mov
cmp
push
or
xor
(bad)
ficomp
sbb
scas
jle
jmp
jge
and
call
sub
scas
loopne
mov
and
mov
addr16
jb
cmp
dec
sub
or
out
mov
icebp
inc
mov
mov
xchg
xchg
dec
in
sub
xchg
xchg
xchg
ror
daa
gs
ficomp
xor
cdq
out
cmps
jae
mov
push
xor
dec
jle
imul
jge
rol
aam
test
sub
icebp
inc
adc
in
dec
inc
lods
mov
add
mov
js
lahf
mov
mov
call
lods
cmp
es
mov
xchg
jmp
jne
jge
push
int3
cli
push
cmps
mov
cmc
xor
retf
cmp
or
leave
pop
aaa
rcr
or
push
call
jmp
repnz
fs
retf
cli
mov
out
aad
div
mov
inc
lock
xor
mov
iret
xchg
cmp
in
iret
mov
das
js
call
out
sbb
push
dec
xchg
jbe
out
ror
(bad)
jmp
ficom
nop
xchg
inc
lods
lea
dec
jmp
cmps
adc
sub
je
mov
pop
fistp
dec
dec
icebp
in
fcomp
dec
clc
mov
cmp
maxps
dec
std
js
outs
test
mov
movs
dec
push
dec
jl
in
js
(bad)
cmovp
cs
pop
push
ds
mov
xchg
push
mov
sbb
mov
daa
int3
xchg
jbe
add
rcr
inc
mov
repnz
fst
loop
and
mov
not
enter
or
or
push
inc
and
and
into
(bad)
nop
aas
xchg
pushf
sbb
mov
push
and
adc
call
pushf
jle
mov
pop
out
adc
push
repz
mov
inc
xlat
jmp
popf
xor
shl
das
inc
out
xchg
jnp
ret
and
or
ret
aam
mov
sti
dec
mov
push
sbb
mov
test
lods
in
pusha
hlt
jl
xor
scas
push
int
or
jle
jg
dec
popf
loopne
sub
pop
and
fidiv
mov
and
pop
test
icebp
push
call
or
(bad)
stos
mov
inc
cmp
int3
xchg
movs
pop
add
repz
repz
out
xchg
mov
and
add
ins
or
fidiv
push
mov
cld
pop
repz
mov
es
ins
and
inc
pop
ja
mov
in
pop
imul
jecxz
cmp
les
mov
jb
sbb
pop
leave
add
push
pop
movs
and
push
sub
ss
mov
add
and
xor
add
repz
(bad)
test
adc
sbb
mov
mov
call
stos
and
out
inc
and
inc
je
repnz
adc
mov
fstp
xchg
mov
adc
sub
loopne
pop
sahf
xor
movs
cld
and
outs
inc
ret
pop
add
out
test
mov
pushf
jno
(bad)
mov
push
ins
ror
pop
out
je
xchg
test
int3
ins
jno
retf
cwde
(bad)
sub
xchg
mov
ins
sub
fmul
cmp
mov
mov
mov
in
push
mov
add
add
inc
mov
movs
dec
fcomp
movs
lods
(bad)
imul
or
aam
lahf
addr16
jae
imul
sti
pusha
in
sbb
in
jp
cwde
fadd
inc
and
adc
mov
stos
nop
aas
f2xm1
mov
sbb
iret
enter
and
test
add
adc
stos
adc
popf
mov
out
int3
cmp
xchg
pop
pop
add
jns
stc
or
(bad)
jnp
dec
add
cli
clc
ja
jbe
cdq
retf
and
enter
inc
popa
loop
ror
outs
lods
je
nop
in
jb
test
mov
in
add
lods
and
ins
add
fsub
push
mov
pusha
out
jns
xchg
movs
cmp
push
dec
add
and
nop
cmp
and
jg
std
jno
dec
xchg
cmp
inc
jns
and
jmp
stos
dec
sbb
fiadd
pop
adc
xor
mov
xchg
xchg
cmp
jg
cmp
shr
loop
or
pop
cmps
ds
stos
sbb
pop
dec
sub
cmp
cmp
aam
jecxz
popa
lahf
pop
mov
cmp
cwde
div
sahf
push
xor
ja
(bad)
mov
int3
mov
lea
mov
fisttp
mov
xchg
movs
arpl
push
jnp
add
jo
retf
push
neg
cwde
pop
sbb
jge
ss
retf
aaa
call
pushf
call
dec
fwait
or
sub
repz
mov
add
les
add
push
test
ins
mov
jecxz
mov
mov
jmp
test
jb
and
inc
push
xlat
(bad)
aad
xor
lahf
mov
out
xor
add
sub
cmp
jbe
push
(bad)
jl
lea
movs
cwde
rcr
les
mov
add
and
pop
pop
fiadd
cmps
inc
(bad)
mov
xor
lods
repz
aas
sub
push
cwde
leave
pop
repnz
cmp
in
jb
xchg
pop
push
mov
out
sbb
lods
ret
xchg
jge
loope
rol
pushf
ins
mov
std
call
dec
into
sbb
aam
fwait
ins
(bad)
pop
stos
pop
dec
mov
sub
ins
aad
dec
retf
jns
cmp
inc
xor
mov
mov
int3
lods
add
cmp
shl
fdivp
mov
push
pop
sub
dec
stos
jo
arpl
push
or
shl
cmp
sbb
or
xor
xchg
(bad)
mov
cmp
mov
jmp
es
jmp
mov
pusha
and
pop
jne
es
sar
inc
jge
mov
ficom
mov
stc
xor
movs
jp
fild
or
cmp
pop
mov
and
dec
adc
mov
idiv
js
pop
inc
fwait
mov
arpl
pop
in
xchg
xlat
stc
test
mov
or
out
mov
lds
imul
arpl
aaa
lahf
loop
jge
(bad)
popf
mov
cld
ret
mov
xor
xor
push
push
leave
mul
lds
jp
pop
in
retf
cli
pop
dec
jb
int3
lds
leave
jle
ret
xchg
out
cmp
jae
je
mov
sbb
pop
mov
dec
xchg
dec
loop
nop
out
call
repz
ret
jecxz
cmp
inc
jae
push
adc
shr
or
adc
leave
add
sub
dec
push
or
sbb
(bad)
or
out
loop
sub
shl
rcl
jle
int3
pushf
jns
sar
jnp
mov
(bad)
dec
fst
adc
rol
cmp
push
pop
into
(bad)
push
adc
out
outs
xor
outs
out
pop
xor
or
(bad)
packuswb
or
pop
pop
rol
cmp
xor
push
xor
xlat
ret
mov
into
mov
or
fmul
in
outs
push
clc
fs
aaa
mov
outs
ds
cld
mov
nop
pop
dec
mov
sbb
clc
cwde
xchg
inc
jbe
out
cmp
mov
aaa
mov
in
mov
pop
enter
fnstcw
ins
add
xor
sub
push
shr
gs
pop
add
inc
xchg
pop
fdivr
adc
fsubr
xchg
mov
and
jecxz
sbb
test
xchg
mov
inc
fiadd
idiv
jnp
imul
and
lods
xchg
call
jge
in
mov
push
mov
inc
ret
dec
bound
inc
in
adc
jmp
and
push
pop
aad
and
jns
push
clc
push
adc
mov
cmc
mov
sub
mov
imul
add
push
dec
inc
adc
mov
js
into
rol
in
jo
es
adc
mov
enter
popf
pop
sahf
inc
push
jae
fldenv
dec
(bad)
stc
inc
adc
mov
out
sub
(bad)
jnp
rol
lea
and
fs
loopne
cmp
inc
mov
pop
scas
mov
and
shl
loop
rcl
xchg
push
jbe
repnz
arpl
in
aam
lock
cli
call
cmp
xchg
push
inc
mov
pop
xor
xlat
cmp
imul
mov
out
sti
sbb
jl
mov
inc
xchg
dec
jmp
lods
add
(bad)
pushf
mov
cwde
pop
outs
or
mov
push
mov
sbb
fwait
mov
addr16
add
mov
cli
icebp
mov
outs
daa
push
clc
into
inc
jbe
mov
rol
jp
lea
xor
fisttp
sbb
imul
rol
js
push
inc
cmps
or
out
test
pop
shr
shl
out
lock
mov
pop
aam
enter
adc
pop
(bad)
mov
retf
rcl
cmps
scas
sbb
scas
out
sbb
push
lds
xchg
test
rol
in
xor
push
cmps
repz
jno
mov
and
cld
jnp
stos
pushf
(bad)
fist
dec
jb
mov
mov
mov
dec
xor
push
popa
pop
stos
int3
xlat
mov
mov
cli
mov
mov
fmul
mov
sub
xchg
add
fwait
loop
jb
in
sti
outs
push
aas
sahf
test
mov
pop
ret
pop
les
inc
in
pop
cmp
mov
and
sub
fisub
cli
in
mov
fsubr
xor
sub
jns
into
lock
rcr
icebp
data16
adc
inc
jmp
dec
(bad)
xor
adc
sub
ss
aad
inc
jl
addr16
jne
push
push
fwait
retf
xchg
cwde
ins
aad
jne
xchg
movs
mov
mov
movs
mov
adc
into
jge
pop
in
sub
in
sbb
or
call
(bad)
cwde
rcl
xor
scas
fdiv
std
and
and
inc
inc
jbe
fdiv
es
movs
jns
mov
pop
lds
dec
jmp
int3
sub
adc
sbb
(bad)
or
or
adc
ins
jnp
loop
(bad)
dec
xor
les
ins
fimul
dec
push
pop
outs
test
mov
shl
outs
das
sti
mov
lods
in
jns
loope
dec
sub
mov
and
packssdw
neg
call
das
pop
ins
out
popa
cdq
mov
imul
mov
mov
xchg
jmp
pop
xorps
inc
ret
div
in
cld
adc
and
mov
cmp
sub
dec
push
pop
inc
xchg
(bad)
mov
lahf
xchg
ss
add
dec
cmp
test
lods
cld
lock
ss
pop
jmp
or
test
ds
aaa
sub
mov
scas
ja
dec
mov
add
in
fucomi
push
dec
cmp
fild
jp
and
adc
mov
adc
jns
ins
or
inc
dec
cmc
shl
cmps
into
cmps
stc
inc
lea
ins
idiv
(bad)
mov
cmp
mov
sub
adc
xchg
mov
bound
test
mov
leave
loopne
add
pushf
jle
push
aam
adc
cli
adc
xchg
mov
dec
xor
pop
push
xor
lahf
mov
movs
ja
add
pop
mov
das
ins
mov
bound
jae
fdivr
dec
xor
adc
sti
dec
and
jl
push
dec
push
ins
stos
call
add
lods
mov
pop
inc
cmps
xchg
and
in
xor
call
ds
sbb
inc
ret
dec
movs
xchg
aam
or
add
cli
aaa
or
imul
div
out
leave
dec
inc
mov
hlt
mov
adc
mov
adc
out
loopne
je
lea
fnsave
jle
sub
and
clc
pop
dec
jg
fsub
(bad)
inc
jle
inc
mov
xchg
outs
push
in
adc
push
push
in
fnstsw
imul
jle
and
outs
and
iret
rcr
call
ror
jg
mov
xchg
inc
clc
cmc
sbb
pusha
test
sar
mov
mov
mov
push
jno
clc
rcl
pop
sar
ins
dec
mov
cmp
cvtps2pd
lds
cmps
mov
cwde
jle
push
mov
inc
imul
hlt
jg
fwait
mov
movs
xlat
inc
add
jl
or
push
pop
ins
jg
ret
mov
jmp
pop
cmp
(bad)
push
pop
lahf
fdivr
inc
or
jmp
outs
jnp
in
push
or
pop
or
xchg
lock
lahf
in
fs
jmp
test
in
xor
xchg
dec
retf
cli
lods
les
sub
push
inc
cmp
clflush
xor
retf
int3
mov
stos
adc
into
les
out
fidivr
mov
or
fs
outs
leave
dec
iret
mov
loope
mov
xchg
aam
(bad)
ins
mov
popf
lahf
cmp
xor
stc
fsubr
ja
pop
cmps
push
and
cmp
sub
(bad)
mov
inc
jmp
inc
(bad)
shl
scas
xor
mov
shr
inc
push
cmp
fstp
jnp
push
pop
jno
sub
daa
pop
aad
fdiv
test
cmp
add
xchg
cs
or
cmc
mul
push
adc
(bad)
mov
dec
jbe
mov
fidiv
adc
(bad)
out
mov
out
sub
xchg
dec
and
in
jge
adc
xchg
mov
sbb
jg
sbb
jne
dec
jle
call
xchg
(bad)
jmp
scas
xor
data16
xchg
xchg
jno
aad
call
lea
mov
ror
and
cli
xchg
mov
popf
adc
je
jbe
retf
je
pop
push
push
sbb
or
mov
lds
push
cmp
les
ins
nop
(bad)
pcmpeqw
test
aam
xor
mov
stos
jecxz
call
inc
or
dec
movs
pop
adc
fidiv
sub
fs
dec
inc
movs
mov
cmp
fmul
cmp
xlat
mov
xchg
dec
cmp
shl
jecxz
adc
stos
cmps
clc
popa
popf
shl
cdq
cmps
ja
and
les
cmps
cmp
test
stos
mov
and
xchg
ror
xchg
retf
lds
mov
push
les
push
add
sub
mov
sub
fwait
mov
fdiv
jo
popf
(bad)
xchg
aam
add
popa
push
adc
add
sub
adc
lds
iret
mov
sahf
lea
xchg
idiv
(bad)
push
in
cmp
cmp
pop
pop
sbb
cmp
pop
sub
(bad)
and
ja
mov
sub
cld
ss
xor
mov
dec
mov
mov
stc
pushf
jbe
push
stos
out
into
sub
cmc
in
xor
imul
pop
test
jb
sub
mov
ins
sub
add
mov
in
dec
mov
sub
pop
gs
xor
test
je
adc
pusha
cmp
mov
fistp
mov
in
into
retf
jae
xchg
outs
push
jmp
(bad)
cs
xor
adc
and
add
jmp
jmp
int
push
iret
lods
lahf
dec
sbb
cs
mov
call
push
ins
lods
popa
gs
mov
call
data16
stos
pop
fst
aaa
sbb
mov
cmp
fidivr
sahf
(bad)
adc
dec
out
mov
(bad)
pop
fdiv
test
and
outs
(bad)
sbb
nop
call
push
pusha
inc
sbb
loopne
mov
cdq
icebp
aas
data16
mov
(bad)
fwait
push
and
aaa
call
je
inc
ror
add
icebp
add
add
outs
bound
ds
je
pop
push
jmp
fwait
xchg
(bad)
adc
sub
push
mov
mov
dec
mov
or
idiv
stos
dec
aaa
push
shl
frstor
retf
xchg
jecxz
cmp
jmp
push
(bad)
mov
push
sbb
jnp
and
mov
fs
add
sub
xlat
mov
popf
xchg
sub
mov
ret
dec
xchg
sub
ror
fsub
sub
xor
mov
imul
aaa
dec
cmp
ss
push
test
outs
pop
inc
out
and
shl
call
lahf
mov
aaa
(bad)
ss
fldenv
out
mov
test
in
out
ficomp
pop
mov
inc
or
inc
rcl
mov
and
mul
add
ss
xchg
popa
inc
adc
daa
sbb
jle
mov
lahf
pop
jnp
mov
mov
pop
in
push
dec
add
and
mov
sbb
call
inc
js
cs
daa
dec
xor
and
add
inc
imul
push
mov
hlt
je
mov
jle
test
xchg
aad
ins
imul
ins
enter
inc
outs
das
ret
mov
out
xlat
mov
scas
mov
call
sar
pop
sub
pop
in
sbb
and
push
cli
imul
dec
aaa
push
repz
(bad)
(bad)
sub
xor
xor
sbb
dec
adc
(bad)
neg
mov
test
clc
mov
int3
and
push
ins
cmps
adc
ret
mov
in
push
(bad)
or
mov
das
pop
into
aaa
fs
imul
cwde
out
stos
push
sar
pop
or
or
mov
retf
mov
mov
mov
dec
xchg
pop
rol
in
xor
cs
mov
dec
xchg
inc
pop
mov
out
enter
test
in
jmp
mov
inc
div
sub
mov
mov
and
mov
cdq
cmp
(bad)
in
mov
jg
mov
pop
add
popa
iret
sahf
mov
mul
sbb
imul
popf
lds
jmp
lods
stos
jae
sahf
fstp
rol
(bad)
cld
adc
dec
push
cmp
out
and
jle
sbb
mov
shr
pop
(bad)
fcmovu
or
add
aas
in
or
call
mov
(bad)
je
imul
icebp
frstpm(287
shr
fnstenv
mov
push
xor
pop
sbb
test
mov
rol
sub
mov
or
cmp
xchg
repz
or
mov
sub
out
xor
push
mov
push
pushf
aam
mov
push
fsubp
mov
cmps
push
int3
cwde
hlt
push
popa
pushf
ins
movs
aaa
inc
and
loop
sub
aas
push
pop
ret
shr
loopne
arpl
mov
shl
call
test
dec
push
retf
fwait
xlat
std
mov
pop
xchg
adc
mov
hlt
jns
mov
cmp
sbb
out
add
inc
inc
and
ret
push
fild
and
inc
aas
out
jo
call
push
add
dec
sbb
dec
mov
sbb
jg
imul
icebp
push
test
test
add
outs
js
push
and
xlat
repnz
rol
xchg
in
push
or
mov
outs
inc
(bad)
stos
sbb
push
loop
dec
outs
jb
dec
sbb
xchg
out
aas
dec
cmp
mov
pop
lods
aam
pop
loop
add
dec
jecxz
jge
xor
mov
mov
or
sbb
xchg
inc
cdq
call
(bad)
sub
pusha
and
loope
es
imul
aam
xlat
sbb
enter
jecxz
add
sub
cs
enter
inc
mov
cli
add
push
sti
pop
mov
jge
or
cmps
push
fdiv
jmp
cmp
int3
retf
scas
mov
jmp
inc
inc
lds
xor
dec
jecxz
xlat
inc
pushf
scas
xchg
mov
rcl
test
dec
enter
int3
dec
and
mov
clc
iret
mov
pop
inc
iret
adc
in
bswap
gs
and
inc
(bad)
dec
cmp
mov
pop
mov
lods
push
repz
imul
hlt
push
adc
fabs
sub
and
xchg
cdq
loopne
out
mov
sbb
ins
pop
test
sbb
inc
fs
xchg
dec
adc
fistp
jbe
mov
into
call
int
add
push
cdq
cs
movs
xor
lahf
arpl
cmp
ja
or
jmp
sar
aas
cmp
in
inc
and
out
ins
xchg
cmp
add
xor
xchg
jne
pusha
and
call
jge
cmc
inc
stos
pop
and
jp
es
shr
sub
dec
popa
mov
sbb
sbb
cmc
test
xor
add
popf
dec
xor
cmps
xchg
movs
adc
cmps
jne
push
mov
pop
mov
jle
mov
aas
jo
in
test
pop
dec
out
add
pop
(bad)
rol
mov
push
cmp
in
pop
pop
test
(bad)
ror
and
fdiv
out
call
stos
add
jae
dec
add
retf
and
mov
enter
shl
or
sar
xchg
inc
or
inc
pop
jge
aas
stos
out
dec
ss
bound
cdq
mov
push
push
push
add
or
lods
dec
mov
je
repnz
std
retf
aam
pop
mov
scas
cs
xchg
fbstp
xlat
mov
and
mov
mov
xor
xchg
iret
sub
cmps
test
dec
inc
inc
(bad)
jns
les
sbb
ret
retf
repnz
push
stos
cmp
ret
jecxz
adc
lds
xor
shl
call
xchg
mov
inc
mov
hlt
inc
xlat
(bad)
aad
jne
mov
jns
test
sub
xor
stos
jns
push
mov
adc
in
outs
add
mov
in
rcl
mov
xchg
xor
inc
adc
aas
push
mov
aaa
out
mov
int3
aas
ss
cmp
adc
pop
cmp
ins
stos
mov
dec
push
jno
pop
(bad)
fnsave
push
xchg
sub
inc
mov
add
inc
popa
ret
jb
pop
sub
and
fdiv
(bad)
dec
add
stos
(bad)
inc
pop
and
or
cmp
mov
xchg
scas
mov
lock
mov
adc
jb
aas
fs
cmps
pop
iret
xor
sub
xlat
mov
ret
(bad)
adc
test
test
outs
cmps
jecxz
jno
mov
add
jbe
mov
xor
inc
jae
mov
test
movs
arpl
ja
test
push
leave
out
mov
in
movs
mov
or
test
pop
popf
cmp
fs
lock
pusha
outs
inc
jo
ror
aam
int
enter
fisub
pop
push
(bad)
fldenv
jecxz
jns
mov
or
(bad)
mov
test
xor
fwait
int3
iret
test
cdq
xchg
leave
lahf
jmp
sub
sahf
jg
pop
lock
fcompp
rcl
arpl
stos
mov
cmp
pop
cmc
jb
xor
lds
push
xchg
test
push
pop
int
js
cmp
cs
jp
sub
js
stos
sbb
(bad)
pusha
jge
mov
repnz
(bad)
mov
icebp
pop
es
sti
xchg
sub
mov
and
sar
mov
loope
jo
stc
jecxz
jbe
outs
int
cs
cli
xchg
add
sti
sbb
xor
add
sbb
out
jmp
push
adc
push
(bad)
cmps
stos
push
dec
mov
sub
mov
mov
dec
aas
call
push
xor
(bad)
mov
add
popf
mov
cmps
push
and
not
fdiv
adc
add
jge
lahf
movs
fcmovne
aas
mov
fwait
sbb
push
out
jmp
scas
loope
in
aaa
jge
dec
xor
aaa
in
sub
pop
mov
inc
adc
popf
jns
(bad)
sar
mov
out
popa
lods
sbb
inc
inc
test
test
jmp
jne
jg
popa
(bad)
arpl
out
dec
popf
jmp
hlt
and
inc
dec
or
xchg
inc
mov
xchg
adc
pusha
pop
cmp
out
jp
fwait
inc
sti
out
add
mov
test
sbb
jno
fist
aaa
pop
shl
bound
scas
(bad)
(bad)
adc
outs
pushf
sbb
scas
jne
mov
xchg
cmp
jae
and
loopne
and
mov
iret
repz
jmp
(bad)
loope
dec
xchg
in
out
mov
and
(bad)
or
mov
ret
ja
movs
inc
sub
sbb
or
push
xor
ds
mov
xor
neg
imul
cmp
cmps
jmp
stos
pop
lods
and
(bad)
or
inc
jns
cli
cmp
js
push
das
inc
iret
adc
and
idiv
fs
xor
or
sbb
(bad)
fdivr
push
dec
ror
sbb
or
fidivr
pusha
push
and
in
push
out
xor
mov
int
and
sub
inc
xlat
pop
and
loopne
int
aad
mov
lahf
adc
xor
ror
sbb
lahf
xchg
pop
aaa
and
push
pop
nop
push
addr16
jne
stos
test
sbb
ja
enter
dec
cmp
rcl
ss
adc
stc
sahf
stos
icebp
(bad)
sub
and
adc
mov
xor
xchg
sbb
sub
mov
mov
bound
mov
cmp
movs
mov
(bad)
mov
dec
push
push
push
inc
outs
jno
in
mov
nop
xchg
xchg
mov
jae
or
dec
inc
dec
cmps
je
in
adc
push
(bad)
jmp
push
lea
inc
aas
add
mov
stos
push
mov
daa
cmp
jno
xchg
gs
inc
adc
cmp
add
ins
jmp
mov
loopne
enter
ja
sub
cmovbe
into
jae
push
xchg
xor
es
mov
test
xchg
and
sti
push
out
xor
es
lea
jb
fmulp
in
ds
fwait
rcl
cwde
mov
retf
pop
mov
inc
fs
push
jg
jg
adc
add
jns
pop
pop
fisttp
cmp
loopne
aas
jae
mov
(bad)
jno
shl
xchg
stc
pop
imul
retf
out
sub
pusha
sti
out
add
mov
xchg
and
sbb
nop
pop
dec
dec
pop
add
and
sbb
aaa
add
adc
sub
test
mov
adc
pop
enter
addr16
ja
cmp
xor
sbb
(bad)
jle
inc
push
sbb
add
pop
shl
xchg
jns
xor
sub
int
cmp
cmc
mov
add
dec
nop
push
cmps
std
cli
int
mov
movzx
jae
cmps
dec
mov
pop
in
mov
xor
xchg
stc
add
lock
mov
shr
and
and
test
adc
push
mov
push
cmp
dec
call
pop
push
idiv
lods
sub
jl
lea
add
inc
inc
and
mov
mov
lds
call
lock
popf
jnp
pop
sar
lock
hlt
jmp
fbstp
clc
push
pop
add
nop
sti
js
rsm
jae
jae
test
sbb
adc
push
dec
lods
jns
test
(bad)
ficom
cli
mov
in
cmp
test
bound
leave
mov
xchg
movs
pusha
cmp
dec
xchg
ja
mov
mov
push
jno
movs
popa
hlt
stos
(bad)
addr16
neg
cs
sub
pop
js
mov
xor
and
sahf
shl
fiadd
fs
cdq
mov
mov
inc
test
leave
mov
or
bound
sbb
stc
into
sar
(bad)
and
mov
pop
repz
ret
js
leave
cmp
dec
push
mov
pop
scas
rcl
mov
icebp
int
sub
jns
sbb
push
sti
inc
inc
sbb
std
pop
mov
xor
and
adc
jno
ret
push
daa
jae
mov
retf
inc
push
popf
sub
sbb
fmul
mov
rol
jge
mov
jmp
mov
mov
sbb
pop
mov
daa
stos
sub
inc
mov
fwait
add
test
pop
xor
push
add
push
mov
(bad)
sar
jle
test
xlat
(bad)
in
(bad)
push
adc
outs
push
sar
push
add
mov
jnp
dec
ror
or
pop
ret
clc
or
out
cmp
mov
repnz
and
or
hlt
popa
dec
and
push
mov
fdiv
lods
(bad)
cli
sbb
pop
pop
pop
jae
mov
mov
data16
fsub
xor
dec
mov
fidiv
inc
xor
arpl
mov
push
scas
shl
xchg
jp
in
clc
ins
or
retf
sbb
sub
push
shr
or
enter
lea
jns
jp
inc
sub
jle
sbb
jns
add
xchg
lods
xchg
pop
jnp
pop
and
xor
enter
jno
pop
xor
xchg
mov
imul
sbb
(bad)
ins
sub
imul
or
jno
dec
sub
push
inc
sti
iret
popa
pop
cdq
dec
mov
fisttp
(bad)
cs
dec
mov
les
in
imul
push
into
mov
js
out
test
loopne
or
popa
and
in
test
mov
lahf
mov
dec
jno
mov
stc
pop
sub
adc
js
mov
jnp
push
xor
mov
mov
add
mov
xor
xchg
xor
xor
mov
sbb
pop
mov
repz
mov
fadd
lahf
in
cmp
push
fcmovbe
inc
(bad)
fild
in
sub
retf
xchg
test
mov
mov
and
pop
xchg
sub
test
dec
push
pop
fwait
sbb
sub
jb
stc
sar
pop
and
inc
ret
lds
cmps
in
push
xor
mov
leave
scas
xchg
inc
sahf
fisubr
mov
outs
outs
sub
push
mov
adc
mov
xor
xchg
xor
jmp
mov
ja
mov
adc
imul
sbb
add
shl
mov
cmp
not
movs
not
add
mov
mov
shl
mov
mov
in
imul
mov
xchg
or
test
test
xor
push
dec
in
jno
pusha
sub
rep
movs
pop
std
jp
aam
repz
sbb
stos
and
pop
jle
hlt
cmp
loop
stc
sbb
pushf
outs
fs
cmp
mov
adc
cmc
lahf
inc
push
inc
in
adc
cmp
jb
and
loope
mov
pop
popa
movs
cmp
add
dec
(bad)
jle
lahf
test
mov
inc
or
ret
(bad)
cmp
mov
loop
jb
loope
aad
je
xchg
push
fidivr
test
push
push
cdq
loopne
popf
mov
stos
pop
add
retf
fstp
sub
push
adc
cmp
and
pusha
mov
shl
inc
nop
std
in
mov
test
adc
add
(bad)
ins
cld
sar
aas
add
dec
mov
jecxz
(bad)
fsub
pop
in
or
test
push
ficomp
fucomip
add
cmp
cli
sub
ret
inc
push
jo
ins
int3
cld
(bad)
push
pop
adc
inc
xor
inc
out
jecxz
pop
fwait
cdq
pop
sbb
pop
setae
xchg
loopne
lods
shr
dec
pop
shl
cmc
sbb
cld
(bad)
jmp
xor
shl
dec
cwde
out
pop
xchg
mov
cmp
lea
mov
(bad)
mov
push
icebp
or
loop
test
scas
les
push
pop
push
fdivr
inc
out
pop
sbb
repz
pop
mov
mov
adc
aaa
or
ins
daa
es
in
(bad)
xchg
hlt
cli
mov
inc
jns
addr16
mov
push
pop
(bad)
sbb
push
rol
jbe
adc
add
sub
dec
inc
xchg
dec
or
sub
jecxz
leave
mov
(bad)
loop
sbb
hlt
sub
pop
add
jbe
aam
sar
push
sbb
movs
mov
adc
xor
loope
dec
cmc
pop
adc
mov
dec
or
mov
aas
lods
lods
and
adc
sbb
pop
mov
xor
ret
pushf
fsub
mov
jo
jns
ret
loopne
mov
leave
xchg
inc
int
fs
repz
ins
add
xchg
rol
cld
adc
hlt
xor
sub
scas
rcr
adc
aas
sbb
test
or
push
mov
sbb
xchg
mov
sbb
mov
arpl
sub
push
mov
in
pop
push
mov
jno
pop
pop
xchg
pop
das
aam
outs
and
rcl
jecxz
cmp
xbegin
cmp
mov
loope
push
push
push
xlat
sub
fisubr
push
push
jmp
jecxz
pop
pop
(bad)
ds
mov
es
fnstsw
xchg
test
sahf
mov
xchg
sub
mov
inc
adc
push
push
test
popf
test
fs
cli
xchg
jmp
call
imul
push
mov
sub
cwde
mov
shr
ret
fwait
and
in
pop
mov
shl
retf
cmps
sbb
mov
or
js
add
je
jmp
lahf
push
scas
push
push
push
test
sub
shl
out
test
(bad)
cwde
adc
int
pop
mov
hlt
pop
add
repnz
push
mov
rcr
(bad)
xchg
jno
(bad)
cmp
xor
dec
add
pop
lods
addr16
cmps
int
jo
sbb
mov
adc
adc
jge
xor
adc
push
div
scas
das
mov
dec
push
and
jp
iret
inc
lock
into
push
jno
movs
leave
mov
sub
add
outs
rcl
aaa
xor
rcl
or
or
mov
pop
mov
inc
inc
sub
or
(bad)
pop
cwde
inc
sub
bswap
pop
repz
fcomp
dec
arpl
scas
pop
jmp
jp
in
int3
pop
leave
xchg
xor
jae
sub
stc
adc
add
or
inc
xlat
loop
leave
mov
mov
mov
and
xor
into
inc
popa
rol
jge
test
jmp
ins
mov
hlt
in
cmps
mov
pop
or
bound
js
fxch
addr16
fcom
cmp
lahf
and
lods
shl
dec
sbb
aas
pushf
stos
inc
cmp
push
dec
inc
gs
push
inc
inc
inc
mov
fs
jae
and
adc
js
sub
push
es
(bad)
sub
inc
cmp
mov
mov
imul
pop
pop
test
cmp
out
cmp
psrad
xchg
jecxz
dec
mov
and
mov
push
scas
mov
shl
mov
sub
sti
inc
lds
icebp
test
sub
inc
push
out
in
rcl
pop
mov
clc
mov
(bad)
sub
sbb
push
dec
inc
adc
sbb
mov
jb
outs
mov
stos
xchg
fisub
adc
movs
or
push
xchg
loopne
inc
mov
sbb
ins
cmp
xor
aas
sbb
out
mov
xlat
pop
test
cmp
ds
or
cmp
pop
pusha
adc
jbe
jp
jae
rcl
and
pop
leave
fild
fld
and
mov
(bad)
idiv
jns
jecxz
adc
pop
aaa
mov
lods
mov
xchg
jp
xor
jmp
jle
iret
pop
scas
js
inc
fisub
jecxz
ds
retf
cmp
mov
jne
fwait
cdq
ja
(bad)
ja
xor
repnz
xchg
iret
and
mov
popa
xor
dec
sub
sbb
pop
int3
leave
jb
cwde
clc
arpl
bnd
or
mov
jno
pusha
or
sub
popa
mov
cmp
scas
iret
nop
mov
xor
lods
in
sub
jnp
sahf
pop
dec
jl
popf
add
inc
out
push
rcl
mov
pop
gs
adc
xor
fcmove
not
ins
repz
mov
out
arpl
pusha
jmp
mov
out
ins
inc
sahf
das
aam
pop
loope
imul
les
pop
mov
(bad)
xchg
xor
push
xchg
add
test
push
pop
pop
(bad)
pop
pop
jmp
sub
push
mov
test
push
gs
in
enter
or
jecxz
mov
int3
in
cmp
dec
cmp
call
lods
and
iret
mov
and
add
jmp
push
test
jecxz
adc
movs
test
(bad)
xchg
shl
push
jle
fsubr
fcom
and
sbb
push
sar
or
out
fs
or
stc
and
jnp
ins
sbb
rcl
sub
loop
shl
imul
das
mov
enter
sbb
rcl
aam
arpl
xor
sbb
pop
pop
jle
das
xor
inc
cld
cvtps2pi
dec
cmc
jb
scas
imul
sub
mov
cmp
lods
outs
jp
test
adc
ins
fwait
outs
scas
and
sbb
inc
daa
rcr
mov
je
adc
jbe
mov
cmp
mov
out
push
repnz
pop
sub
(bad)
cmps
stc
or
add
push
shr
cwde
push
mov
cs
cmps
xchg
popf
dec
jne
mov
jl
push
or
int3
xor
cmp
repnz
pop
mov
inc
push
call
imul
cmp
push
mov
dec
nop
fs
test
mov
jae
dec
rcr
xor
test
out
push
aas
icebp
sbb
add
add
jno
lock
jle
cmps
jecxz
sbb
lahf
sti
es
mov
xchg
adc
and
pusha
push
imul
cmp
idiv
mov
sub
test
cmps
loop
mov
mov
sbb
jmp
lods
and
mov
ret
mov
loope
shl
sbb
jno
int
push
test
pop
ja
in
add
pushf
in
sub
int
addr16
cmp
push
cmps
add
pop
xor
movs
out
test
inc
lahf
mov
rcl
fimul
call
and
gs
add
aam
and
mul
popf
push
cmps
xchg
push
fbld
mov
and
cmp
inc
(bad)
push
mov
les
push
xchg
push
shr
in
mov
(bad)
mov
out
test
mov
and
and
inc
dec
neg
sbb
jl
xchg
test
test
dec
jno
push
ins
cli
into
rcr
or
sbb
jge
push
fwait
in
cmc
(bad)
loope
cmp
leave
jbe
jbe
pop
imul
int3
into
adc
sbb
(bad)
mov
inc
sbb
cwde
loopne
jmp
or
jo
in
pop
push
int
rcr
lfs
jnp
aas
aad
cmp
or
jg
sbb
imul
and
jmp
data16
cmp
mov
fmul
sar
lods
rol
mov
mov
xchg
jne
mov
mov
push
push
jnp
push
iret
addr16
outs
add
into
and
shr
iret
aam
and
push
add
xchg
in
test
sub
mul
sub
push
js
data16
jl
adc
mov
sti
mov
ret
(bad)
xchg
mov
adc
mov
scas
cwde
les
xchg
pop
jbe
xor
cmp
stos
out
int3
sahf
or
push
push
sar
jecxz
out
nop
jmp
js
mov
mov
sub
inc
test
loop
ins
fisub
xchg
xor
adc
or
adc
inc
std
dec
and
nop
pop
outs
mov
cmp
pop
popa
hlt
xchg
xor
aaa
and
out
mov
loope
or
inc
inc
lds
in
xchg
or
shl
mov
data16
and
sbb
push
pop
int3
add
cmp
outs
pop
imul
(bad)
cli
daa
loopne
sbb
vpmadcsswd
movs
mov
(bad)
mov
mov
jno
jbe
popa
pop
mov
scas
cmp
and
(bad)
cmp
pop
ret
cmc
outs
loope
aas
or
mov
rcl
and
or
stos
jmp
neg
sar
outs
mov
js
inc
adc
lahf
cmp
aas
xor
loope
(bad)
and
mov
cmp
in
cmp
jae
mov
pop
cmp
jmp
mov
sub
in
sar
pop
mov
retf
ins
in
pop
mov
xor
dec
mov
fwait
int3
or
(bad)
into
sbb
pop
pop
aaa
pop
lods
sub
bound
call
dec
popa
cs
(bad)
(bad)
mov
test
imul
pop
and
mov
mov
push
xchg
iret
xchg
(bad)
out
cld
sbb
adc
mov
test
adc
mov
lock
cwde
jno
cwde
mov
sbb
mov
lea
loop
mov
hlt
push
clc
fsub
pop
ss
lds
sahf
adc
cmp
sbb
popf
fucomi
sub
cmc
repz
loop
test
mov
push
ins
lds
mov
adc
ss
pop
push
mov
out
sbb
add
adc
test
mov
add
(bad)
sbb
hlt
jg
test
in
mov
cmp
movs
(bad)
fimul
and
mov
std
imul
mov
popf
dec
daa
dec
stos
aaa
xor
or
fnstcw
cmp
stc
hlt
inc
imul
mov
stc
test
cmp
pop
xor
push
push
arpl
leave
call
xchg
dec
cli
sahf
mov
xor
pop
mov
ins
retf
into
rcl
mov
das
lea
jmp
mov
mov
xlat
jp
pop
cli
fucom
add
or
xlat
bnd
(bad)
xchg
clc
fsub
hlt
inc
push
scas
or
les
sbb
shl
or
jne
add
sbb
es
stc
iret
data16
inc
arpl
inc
pop
enter
jmp
dec
mov
push
ja
cmp
rol
jl
inc
mov
lock
jae
stos
aas
adc
sub
sti
mov
push
jne
sbb
popa
and
test
pop
dec
cmp
ficomp
or
sub
jle
sbb
pop
pop
cmp
mov
add
mov
add
pop
cmps
push
in
je
adc
jl
cwde
ret
loop
scas
in
inc
rol
call
scas
xchg
push
mov
and
addr16
fisub
in
cld
imul
jecxz
inc
gs
and
xchg
in
es
lea
stos
push
add
sar
inc
fimul
pop
stc
popa
inc
cmp
ds
cli
test
mov
adc
xor
inc
jp
or
int3
inc
push
arpl
add
jl
rcl
out
push
add
adc
jne
sub
push
loopne
adc
cmp
jne
ss
sbb
push
aad
mov
lds
fwait
mov
ret
test
sub
and
aam
adc
imul
push
fs
das
ins
jecxz
add
xchg
stos
enter
mov
test
enter
les
sbb
sub
jns
mov
repz
or
push
add
dec
push
mov
imul
movs
scas
pop
add
(bad)
mov
mov
(bad)
mov
xchg
jmp
nop
push
inc
pop
pop
cmp
or
xchg
jb
pop
add
leave
sub
(bad)
loopne
pop
dec
cs
xor
or
or
pushf
rcr
xor
test
fnstcw
fisttp
sub
sub
mov
jmp
jge
das
cmp
fadd
retfw
mov
out
aam
cwde
pop
pop
xor
or
or
dec
sub
ret
or
mov
mov
mov
push
jne
aad
and
jge
les
jge
mov
cmps
sbb
stos
dec
mov
pop
pusha
sbb
out
sub
shr
mov
adc
fstp
push
loop
cmp
retf
fwait
pop
lods
xor
push
xchg
out
retf
jae
mov
sbb
repz
pop
dec
rol
mov
and
jecxz
sbb
pop
(bad)
push
fwait
rcr
lds
cmc
cmp
aam
loope
sub
fidiv
aas
sub
imul
jno
mov
(bad)
es
movs
or
mov
push
inc
inc
add
pop
pop
lea
pop
add
xor
mov
cli
pop
jecxz
push
xor
or
pop
cmp
in
imul
(bad)
cmp
jl
xor
add
popf
push
sbb
jmp
xchg
cmps
dec
jnp
add
and
xchg
arpl
sub
xchg
cmp
int
lock
push
inc
jb
pop
sar
loope
mov
dec
push
jnp
fild
cli
sbb
push
add
cmp
fidiv
xchg
push
sub
xchg
xchg
enter
lock
(bad)
push
add
movs
add
mov
cmp
or
movs
aad
push
or
fcmovnu
sbb
(bad)
xchg
pop
fsub
jb
mov
jns
sub
sahf
ds
cmps
out
aaa
push
pop
jl
cli
cli
mov
dec
jae
ret
and
leave
mov
mov
nop
adc
push
push
inc
rcl
add
push
loopne
not
imul
sbb
cld
mov
(bad)
fmul
loop
inc
shl
adc
inc
xlat
xchg
sar
xor
cmp
outs
arpl
test
inc
fadd
inc
mov
not
loope
(bad)
mov
sub
movs
pop
ret
in
jge
or
aad
push
sub
sar
clc
cmp
retf
mov
sbb
fdivr
stos
xor
sti
cmp
outs
mov
adc
fist
adc
xchg
neg
or
mov
sub
mov
(bad)
adc
in
lea
cmp
mov
ret
mov
(bad)
sub
in
jle
sub
movmskps
call
pusha
paddd
inc
cmp
mov
sti
stc
loopne
push
test
cmp
mov
fnstsw
popa
in
(bad)
adc
pop
sar
jo
add
int
adc
cmp
out
jnp
cmp
xor
dec
test
je
mov
aad
cmps
pop
cmc
and
sub
xchg
stos
sub
xor
mov
cmps
clc
xor
xchg
mov
pop
jns
jge
dec
int
clc
dec
pop
and
scas
sub
call
mov
dec
xchg
btr
pop
xlat
scas
xor
push
pop
test
mov
and
sahf
aam
pop
jae
fmul
fmul
jmp
lahf
rol
jmp
adc
rcl
mov
adc
dec
lea
mov
jl
imul
and
cwde
cmp
loop
add
jae
adc
adc
push
out
addr16
ds
sahf
out
inc
pop
outs
stos
inc
inc
je
add
inc
xor
cmp
enter
cmc
es
mov
or
sub
pop
mov
cmovo
sub
imul
sar
in
sbb
inc
pop
adc
cmp
xor
pop
das
mov
mov
jle
sbb
mov
iret
and
pop
inc
xchg
test
or
adc
stos
add
cli
mov
sub
cmps
mov
cmp
cli
mov
enter
push
lahf
sbb
pop
repz
add
xor
mov
dec
sub
clc
or
ret
xlat
test
fidiv
add
jg
dec
lods
mov
sbb
jno
mov
adc
add
rcl
js
xor
xchg
jecxz
idiv
push
cmp
cmp
inc
scas
dec
ds
outs
push
xor
cmp
in
jb
cmp
xchg
mov
jmp
call
iret
sbb
sbb
adc
or
pop
in
rol
or
inc
ja
push
scas
mov
loopne
repz
cmp
mov
lahf
inc
mov
je
push
and
outs
sub
scas
push
inc
dec
jb
loopne
call
mov
imul
mov
jne
addr16
enter
cmp
sbb
push
or
adc
xchg
ins
movs
push
dec
jg
ja
imul
je
cmc
es
fs
hlt
sub
movs
ret
loopne
inc
or
pop
lea
xchg
int3
jne
fidiv
xor
inc
test
(bad)
mov
mov
shl
shr
mov
mov
push
rcl
call
xor
jbe
lahf
sub
inc
aas
jl
and
enter
retf
aad
push
hlt
ret
fdiv
lahf
xor
push
lea
mov
adc
inc
scas
loope
imul
add
or
add
or
jmp
mov
adc
lods
aam
mov
sub
rcr
sar
ins
add
out
xchg
push
cmps
stc
das
in
or
test
shl
js
daa
cmp
adc
mov
mov
in
cmps
idiv
push
out
lds
adc
xchg
xchg
jne
mov
mov
lahf
int3
adc
add
pop
sub
and
int
cdq
ret
movs
sbb
(bad)
call
mov
pop
aas
xchg
mov
add
mov
(bad)
(bad)
imul
nop
jb
sub
or
pop
inc
sub
adc
cdq
inc
xchg
mov
mov
mov
mov
jp
(bad)
aas
mov
cmps
sbb
ror
pop
test
jge
or
stos
das
or
out
daa
push
sbb
shr
sbb
pop
popa
cs
dec
sahf
(bad)
xor
xchg
and
stc
je
mov
and
push
and
(bad)
inc
jmp
jbe
pop
mov
cld
mov
(bad)
call
jge
lds
das
push
lds
adc
sbb
inc
dec
dec
and
aad
js
mov
pop
aas
mov
jo
lea
sub
mov
lfs
das
cmp
popf
pop
sbb
push
inc
mov
aaa
push
push
push
pop
and
jle
(bad)
fwait
adc
fsubr
cmp
inc
enter
add
mov
stc
jns
mov
ds
cwde
adc
sub
cmp
or
ins
lods
cmp
pop
cmp
pop
repz
sbb
movs
sbb
data16
push
out
mov
fstp
pop
movs
mov
scas
add
mov
xchg
sub
pop
xor
sub
mov
dec
adc
mov
ret
push
inc
les
pop
in
xlat
push
adc
jmp
mov
pop
fbstp
sar
(bad)
mov
cmp
add
cmp
cmp
inc
mov
dec
lods
lds
test
test
loopne
dec
ins
aaa
mov
xchg
cmps
outs
mov
or
sub
mov
mov
pop
pop
ins
popa
dec
inc
jmp
or
in
(bad)
enter
dec
xor
mov
jo
and
movs
scas
jns
mov
fwait
xor
loope
pushf
sbb
call
pop
push
push
xchg
je
pop
out
mov
aam
dec
cmc
je
jg
int
xchg
mov
es
outs
or
or
ss
inc
sub
cmp
cmp
clc
movs
out
mul
sub
adc
add
push
xor
sti
push
sub
aaa
and
(bad)
or
sar
movs
xor
call
adc
pop
cld
test
stos
ror
adc
mov
push
mov
scas
loope
fwait
jmp
test
or
es
out
mov
ins
mov
rcr
mov
adc
add
fwait
push
mov
loopne
cmp
or
int3
mov
xor
fidivr
inc
clc
ja
hlt
shl
(bad)
mov
ret
(bad)
in
pop
lea
jae
xchg
into
jno
test
cmc
inc
push
push
mov
pop
or
sub
adc
cdq
pop
sub
das
pop
add
inc
cmp
lods
dec
pop
cmp
add
jg
jge
shl
xchg
xor
inc
int
xchg
sub
test
push
sti
sbb
neg
sub
xchg
aam
pop
dec
lods
pop
mov
xchg
mov
nop
cmp
(bad)
icebp
inc
cld
xcrypt-ctr
cmps
fwait
mov
or
hlt
sbb
adc
mov
xor
mov
pop
and
mov
aas
(bad)
movs
test
lds
or
pop
push
stos
adc
into
push
int
sub
cmp
in
cmp
movs
out
add
or
jge
sbb
fidiv
sbb
into
lock
sub
ds
and
sbb
ja
lods
pop
hlt
jl
jmp
cmp
inc
cwde
jb
data16
ret
dec
jne
sub
inc
cwde
repz
sub
mov
xchg
or
cmp
inc
xor
sbb
adc
and
sahf
shr
dec
mov
pop
cmps
add
jb
test
sub
sub
inc
clc
mov
lahf
pop
js
cmp
dec
sbb
jle
stos
sbb
dec
add
jge
adc
movs
xchg
std
ror
dec
jb
call
mov
or
leave
jge
dec
adc
jl
lahf
stos
popf
jne
push
adc
into
neg
and
inc
pop
shr
and
adc
icebp
sti
add
lods
dec
adc
adc
or
js
popf
sub
pop
xor
(bad)
ds
xchg
inc
xchg
data16
mov
jnp
or
pop
leave
ss
jne
xchg
fcom
fidiv
out
dec
sar
add
movs
and
dec
outs
adc
add
inc
add
inc
cs
mov
dec
xor
xor
sbb
out
inc
repnz
bound
push
mov
add
add
nop
xchg
stos
fcmove
add
cli
movs
or
test
int
pop
idiv
pop
repnz
push
xor
cmp
adc
cld
pop
cmp
aas
pushf
push
lahf
push
jns
lea
lea
hlt
popf
jb
jl
jns
jb
adc
add
ss
lods
lods
mov
xchg
lahf
movs
push
clc
jle
in
jecxz
pop
mov
cld
and
pop
leave
push
test
nop
dec
popf
push
push
inc
xchg
dec
dec
inc
and
or
jo
adc
iret
mov
test
mov
push
cmp
mov
fidivr
inc
push
jns
sbb
fnstcw
push
(bad)
clc
or
push
cmp
and
xor
mov
rol
push
loope
xlat
adc
cmps
push
clc
xor
inc
sahf
sub
call
xor
pop
(bad)
mov
loopne
inc
outs
or
inc
jno
iret
daa
xor
push
scas
mov
pop
jg
test
cmp
call
xor
in
jno
and
dec
or
jae
add
sub
out
icebp
pop
xchg
inc
mov
retf
jbe
shl
(bad)
dec
lods
add
out
lock
inc
and
movs
loopne
clc
bound
pop
jbe
ja
les
mov
cld
jae
ret
dec
lds
jbe
out
xchg
daa
xchg
xchg
mov
rcl
test
push
test
je
in
lahf
or
inc
dec
test
sti
mov
sub
fidivr
mov
into
bnd
mov
jp
push
cmp
lods
jo
jl
dec
adc
sub
jl
sbb
gs
add
sbb
retf
in
cmp
frstor
or
or
int
mov
neg
xor
shl
push
add
adc
inc
push
cdq
and
sbb
into
jns
inc
repz
lock
pusha
ret
or
adc
enter
inc
xchg
rol
or
xchg
mov
adc
adc
imul
(bad)
(bad)
cld
ds
pop
sbb
rcl
xlat
push
(bad)
mov
dec
fs
or
pop
rcl
cmp
lods
mov
jo
xchg
inc
pop
hlt
jne
gs
loopne
dec
shl
pop
cs
in
pop
push
sub
mov
sbb
adc
imul
push
and
addr16
add
lds
das
(bad)
jne
scas
icebp
(bad)
lods
xchg
and
xor
adc
mov
mov
or
adc
call
sbb
call
cmp
cwde
dec
sbb
cld
inc
js
xor
sti
rep
neg
inc
push
cmp
pop
cmp
stc
dec
add
pop
(bad)
repz
dec
test
pop
xor
jmp
sti
dec
fadd
fstp
mov
icebp
sbb
dec
jb
in
popa
pop
aas
push
push
(bad)
lock
sbb
call
rcl
outs
iret
jo
mov
or
fwait
rol
xor
dec
icebp
xchg
neg
test
mov
rcl
jecxz
add
nop
mov
lea
jecxz
sub
sbb
push
in
jbe
stos
cmp
xor
jp
mov
jno
lods
daa
imul
push
mov
mov
jns
sub
or
fsub
outs
mov
mov
push
push
icebp
push
inc
cmp
movs
cmps
loopne
int
sub
mov
(bad)
sub
loope
push
cmps
or
not
mov
xchg
and
xchg
dec
or
gs
shl
push
xchg
mov
call
mov
mov
and
cmp
loope
call
cmp
out
not
adc
push
mov
push
mov
loope
sub
movs
pop
jge
mov
in
jp
mov
cmp
std
fldcw
scas
shr
dec
sbb
je
jno
cmp
jb
aaa
jno
add
sbb
adc
stos
std
pop
jmp
xor
popa
xor
mov
scas
xchg
popf
fwait
xchg
ja
jl
cmp
pop
dec
pop
cmps
loope
arpl
or
(bad)
xor
imul
(bad)
xchg
lahf
mov
push
fcomp
lock
or
jecxz
je
idiv
add
lods
jb
shl
and
sbb
mov
push
dec
sbb
and
mov
sub
js
jno
xor
call
(bad)
inc
pop
add
dec
xor
mov
div
pop
jp
push
sbb
push
xor
add
inc
and
repz
shl
test
add
pop
mov
fnstenv
inc
nop
mov
cmp
nop
sub
inc
xor
shl
test
push
shl
xchg
cmp
test
xchg
cmps
cmp
leave
pop
out
(bad)
into
mov
fwait
xchg
xchg
daa
jne
xchg
ret
popf
dec
push
xchg
or
retf
xchg
mov
cmp
clc
push
ins
stc
stos
pop
inc
jb
jmp
cwde
jns
rcr
test
out
fdivr
clc
jo
rcl
jmp
js
adc
(bad)
stos
mov
jge
and
dec
sub
or
(bad)
mov
sbb
repz
test
and
mov
dec
and
jge
dec
or
movs
fcomi
push
jmp
and
enter
loope
fisub
cmps
cmp
adc
or
ins
inc
and
mov
imul
mov
jle
fadd
stos
cld
stos
loop
clc
pop
clc
xchg
nop
jb
cld
sti
fs
add
adc
or
ficom
fdiv
or
add
mov
rcr
and
lock
or
push
stc
pop
and
inc
aaa
mov
in
sti
js
jbe
fsub
(bad)
pop
test
and
mov
nop
mov
or
in
sbb
into
or
mov
xchg
ss
adc
sbb
mov
or
fcmovb
jns
jnp
jns
cmps
cmp
and
es
(bad)
je
push
and
lods
sub
push
cwde
dec
(bad)
cli
xchg
out
fidiv
jb
xor
sbb
pop
sub
mov
dec
sbb
inc
sbb
jle
jecxz
mov
arpl
or
sbb
sahf
sub
sbb
dec
scas
cmps
loop
cmp
mov
pop
pop
mul
(bad)
sti
movs
inc
lds
add
mov
inc
in
cmp
mov
mov
or
lods
or
cmp
mov
sahf
push
jne
and
push
cmp
pop
sbb
add
xor
xchg
sti
(bad)
xchg
fcom
jnp
shl
xor
sub
lods
cmp
dec
aam
cmp
test
or
xchg
scas
xchg
inc
jge
ret
push
sbb
jne
jmp
hlt
aaa
enter
sbb
les
xchg
jnp
sub
addr16
loop
mov
or
gs
cmp
fiadd
and
sub
in
idiv
aas
mov
mov
xor
mov
sub
movs
xchg
dec
call
xchg
repz
dec
cmp
into
in
xchg
or
xchg
mov
sub
dec
fcom
in
push
ins
daa
mov
retf
mov
push
adc
pop
(bad)
icebp
push
sbb
mov
fld
std
ror
inc
test
mov
sbb
out
xor
push
xor
loopne
fmul
or
pop
sti
mov
add
test
ds
push
adc
add
add
inc
fistp
call
(bad)
not
pushf
mov
xchg
dec
jbe
inc
stc
ret
push
in
pusha
cdq
xor
pop
mov
or
in
(bad)
mov
aas
pop
les
out
cmps
jo
add
addr16
lods
and
shl
out
je
add
jae
test
addr16
sbb
mov
xchg
pop
pop
mov
jbe
js
lds
mov
inc
and
pop
jle
retf
sbb
pop
nop
fidiv
outs
dec
mov
adc
fcom
popa
mov
sbb
(bad)
mov
jmp
cdq
pop
push
sub
(bad)
mov
sahf
sbb
call
adc
scas
mov
jge
mov
xchg
sbb
sbb
(bad)
sub
cli
lods
add
push
imul
popa
add
sub
cwde
popa
shl
fisttp
ficomp
loope
out
jb
repnz
mov
pop
inc
cmp
inc
data16
jb
cld
push
pop
push
jmp
cmp
xor
xchg
pop
mov
push
repz
into
icebp
mov
push
out
fs
xor
in
inc
ret
sbb
(bad)
and
or
pop
push
test
lock
and
clc
in
fsub
sbb
mov
xchg
test
ret
xchg
or
mov
arpl
cmp
xlat
mov
scas
add
ror
stos
jg
es
mov
hlt
push
xchg
jmp
std
sbb
mov
jl
stc
in
stos
add
gs
adc
mov
(bad)
jbe
jo
call
es
mov
add
jge
sti
dec
add
iret
jmp
xchg
popf
jmp
pop
loop
push
ret
pop
add
addr16
setne
jb
cmc
lods
and
lods
ror
xor
mov
fild
pop
xchg
scas
popa
int
ror
jmp
test
and
je
ret
out
in
xor
jbe
aaa
xor
shl
add
sub
es
std
pop
adc
sub
cmp
dec
icebp
imul
xor
adc
inc
dec
sahf
inc
push
repz
ins
push
shl
shl
adc
jge
inc
int3
jbe
jno
mov
mov
adc
push
sub
dec
out
popf
sbb
dec
push
lods
(bad)
xchg
stos
dec
aaa
sti
lock
dec
pusha
cmps
ja
jmp
jle
jecxz
adc
clc
cld
std
jmp
or
and
shl
retf
mov
aas
jb
sub
add
(bad)
cmp
sub
mov
add
mov
adc
jo
jmp
add
iret
adc
test
push
add
lahf
push
mov
cmps
xor
jno
pushf
ret
fiadd
data16
pop
xchg
cmp
stos
or
(bad)
mov
mov
jmp
es
mov
xor
or
ret
jge
pop
sub
jl
nop
dec
cmps
ins
js
sbb
jl
mov
xor
and
adc
push
pop
sbb
fsub
out
xchg
adc
pop
repnz
pop
js
push
mov
xor
inc
fisubr
dec
mov
push
aaa
mov
inc
ins
sar
call
cmp
sub
sub
jge
add
jo
xchg
xchg
push
mov
sub
es
loopne
inc
sbb
imul
or
fistp
lock
jbe
jp
gs
dec
mov
jae
push
not
push
outs
jo
xchg
int3
dec
dec
jl
inc
ret
inc
daa
dec
outs
cwde
out
(bad)
xor
add
push
xchg
adc
test
sar
ret
mov
cdq
adc
ja
iret
dec
movs
xor
or
mul
add
xchg
sub
inc
fidiv
mov
stos
lods
ret
ss
stos
fistp
repz
mov
cmps
out
xchg
imul
push
movs
xchg
jnp
pop
inc
lods
mov
and
jmp
fistp
loop
mov
in
inc
out
add
xchg
ds
aad
cmp
inc
shl
or
out
xchg
loop
sbb
adc
ficomp
mov
pop
cmps
outs
pop
sub
jno
lahf
aaa
es
fs
add
ja
nop
push
rcr
scas
xor
cs
push
mov
mov
fistp
adc
daa
mov
mov
adc
repz
dec
dec
cmp
push
jo
dec
aad
mov
mov
or
popa
mov
(bad)
repz
aad
imul
xchg
jmp
sti
jg
mov
imul
js
adc
div
dec
ja
jnp
mov
shr
jmp
cli
add
sahf
clc
xor
sbb
xor
(bad)
push
sbb
pushf
arpl
mov
xlat
jnp
push
mov
pop
loop
in
pop
adc
mov
rcl
ja
xchg
push
and
ins
jmp
sbb
cmps
jp
dec
pusha
ror
ins
out
adc
xor
inc
mov
ret
dec
xchg
aaa
daa
mov
daa
and
or
add
add
adc
sbb
adc
cmp
jae
and
mov
adc
push
add
sub
or
loope
fstp
test
dec
cmp
dec
and
push
dec
dec
pop
imul
jne
cmp
jbe
test
imul
jmp
push
aad
inc
adc
mov
xor
mov
std
sbb
adc
or
xchg
mov
adc
pop
call
and
jmp
stos
into
ins
daa
pop
xchg
cmc
fnstcw
cli
popf
xchg
xor
push
jp
mov
fidivr
mul
pusha
and
push
cwde
outs
jns
in
pop
inc
test
loope
icebp
lea
sub
jg
cmp
std
pop
loopne
(bad)
xchg
pop
inc
cmp
gs
dec
push
shl
mov
dec
jmp
test
mov
scas
ficom
ss
in
aas
hlt
push
mov
or
sub
inc
push
mov
push
jp
imul
sahf
sub
xchg
sbb
sbb
xchg
dec
lods
test
lea
ret
sahf
mov
dec
pop
hlt
in
mov
mov
or
mov
add
add
inc
push
jmp
out
jge
(bad)
lods
mov
test
dec
test
mov
adc
push
dec
xlat
pop
jg
xchg
jp
imul
or
jno
push
or
imul
sbb
enter
and
dec
retf
dec
outs
xor
js
mov
das
in
das
jmp
sbb
daa
in
icebp
xchg
arpl
out
xchg
or
(bad)
imul
xchg
pop
and
mov
lds
push
sub
fnstenv
or
in
imul
lock
in
sbb
pushf
cmp
jmp
cmps
add
jle
jae
pusha
(bad)
adc
and
cmps
gs
jmp
or
arpl
add
pop
jmp
mov
icebp
jmp
mov
addr16
or
ins
movs
into
mov
call
(bad)
mov
nop
jmp
inc
aam
gs
jl
or
mov
add
lods
movs
in
jb
test
movs
outs
cmc
mov
lods
and
jg
es
pushf
mov
inc
add
fdiv
mov
inc
mov
je
xor
xchg
cmp
ret
int
jl
in
xlat
sub
push
fisubr
and
call
or
push
cs
xor
sar
add
pusha
into
and
pop
sar
pop
jmp
data16
inc
loope
pop
jns
jb
ins
inc
popf
lea
push
bound
call
dec
cld
adc
cmp
rol
shl
and
mov
mov
adc
and
jmp
mov
scas
iret
push
mul
xor
lea
push
mov
pusha
push
test
idiv
(bad)
adc
sahf
mov
sbb
mov
loopne
cld
fidiv
(bad)
call
aaa
jno
jne
push
lds
iret
push
mov
dec
push
pop
add
mov
adc
hlt
dec
in
dec
jnp
cld
mov
and
arpl
sti
rol
adc
dec
pop
push
out
add
add
cdq
(bad)
xchg
lods
sahf
sahf
(bad)
div
imul
push
mov
and
push
fld
outs
fild
repz
aad
jle
inc
repnz
push
jp
xor
xchg
jp
inc
lea
rcl
mov
test
jno
dec
(bad)
loop
or
xlat
bound
mov
pop
pop
dec
and
xchg
and
popa
outs
pop
sub
or
test
dec
sbb
popa
(bad)
cmp
sub
sbb
mov
repz
adc
xlat
nop
cld
int
out
imul
dec
or
(bad)
out
fld
fstp
dec
je
js
xor
rcr
mov
cld
movs
sub
psadbw
js
in
(bad)
loope
(bad)
data16
push
shl
scas
fstp
jne
fisubr
popf
mov
mov
adc
fcom
bts
sub
out
add
fwait
jg
xor
(bad)
pop
dec
jg
jne
daa
pop
xchg
or
int
lea
sub
adc
lods
fist
inc
adc
xchg
movs
or
ja
lods
and
test
mov
mov
leave
popf
in
push
add
sbb
rcr
push
sub
mov
loop
sbb
imul
push
loope
adc
shl
push
in
nop
fist
ret
mov
jl
dec
scas
dec
and
sub
(bad)
xlat
mov
add
aad
les
sub
arpl
pop
ror
scas
enter
mov
adc
jmp
addr16
cmps
call
imul
push
das
mov
out
mov
ror
sub
xor
cs
xchg
mov
push
and
outs
mov
retf
cld
cmp
shr
xchg
ss
hlt
xchg
aas
mov
or
nop
jne
mov
dec
dec
inc
adc
int3
xabort
inc
lods
icebp
sbb
inc
xor
rcl
push
mov
push
inc
xchg
xchg
push
or
mov
rol
push
dec
xor
je
in
pop
les
in
fidiv
pop
jg
fisttp
or
iret
test
pop
fistp
movs
jmp
ins
mov
mov
sti
stc
fild
les
jnp
lea
inc
fdiv
outs
xlat
fbstp
sub
add
imul
pop
out
shr
sub
out
xchg
es
in
out
(bad)
stos
mov
and
fistp
out
out
fs
mov
push
cmps
pop
mov
push
xlat
jg
sub
(bad)
out
ins
data16
sbb
cmp
xchg
jno
dec
inc
add
leave
bound
(bad)
xchg
pushf
cmps
in
and
dec
cwde
popa
jnp
in
cmp
sbb
cmps
push
push
cli
sbb
(bad)
sbb
pop
stos
sub
(bad)
dec
xchg
cmps
add
lods
push
ror
je
fnstcw
and
pop
call
ret
icebp
add
repz
cmp
push
(bad)
or
mov
mov
cmp
adc
int
ins
test
(bad)
jmp
pop
sub
and
ret
cs
ror
aam
lock
addr16
shr
mov
jecxz
jecxz
mov
iret
xchg
push
jge
push
inc
mov
xchg
xor
(bad)
jns
lods
jbe
retf
and
mov
mov
test
bound
pop
int3
or
aas
xor
in
dec
mov
addr16
cmp
ss
pushf
(bad)
or
mov
mov
sbb
xchg
xchg
push
jmp
pushf
jl
sub
outs
ror
aaa
or
addr16
enter
fwait
xlat
jne
lock
enter
jns
pop
and
int3
jae
adc
jge
mov
repnz
dec
repz
inc
jnp
outs
dec
or
sub
imul
jle
and
adc
arpl
aaa
cdq
popf
adc
jmp
rcl
xor
xchg
cmp
sar
jmp
enter
mov
xchg
inc
rcr
jnp
mov
out
inc
push
xor
push
test
call
pop
lock
stos
pusha
in
popa
jge
fcom
adc
mov
lods
hlt
daa
paddb
rol
in
push
fnstenv
push
sar
push
int3
loop
ficom
sub
cmp
jmp
pushf
cmp
lds
sbb
push
mov
leave
fst
loop
mov
ucomiss
push
cmp
mov
bound
fwait
dec
fdivr
dec
xchg
sysret
fcmovne
add
out
jno
sub
shr
fsubr
sub
dec
psubsb
cli
out
(bad)
mov
cmp
adc
ja
lods
and
jecxz
jle
pop
push
je
and
rol
sbb
imul
sti
test
aad
ffree
jle
xchg
mov
inc
cli
push
pop
lods
push
or
jne
fistp
xchg
adc
ins
jb
inc
loopne
retf
daa
test
mov
out
sbb
addr16
fimul
push
jmp
stc
pop
ss
imul
jmp
test
add
xchg
enter
imul
(bad)
sbb
sbb
loopne
push
repnz
mov
mov
jmp
test
cmps
inc
cld
sub
jmp
ret
xchg
(bad)
stos
rcr
xchg
outs
mov
mov
js
adc
pusha
loop
loop
push
pop
and
and
aad
cs
sub
shl
xchg
ins
mov
push
cmp
std
or
jp
pop
inc
and
repz
es
loopne
pushf
cmp
add
inc
inc
scas
dec
inc
fwait
mul
mov
dec
fwait
mul
inc
mov
cs
popf
enter
cmp
pop
ja
xor
sti
jmp
sahf
in
in
jecxz
daa
retf
fcomp
fcmovnbe
sahf
sub
mov
xchg
mov
adc
call
sahf
dec
aad
ins
pop
js
push
ret
mov
dec
and
xchg
(bad)
sub
fmul
enter
mov
retf
mov
or
lods
sbb
aad
mov
mov
in
jno
adc
test
xlat
xor
or
xchg
pop
fwait
mov
sbb
xchg
jae
movs
sub
lods
outs
fisttp
loopne
bound
aaa
loopne
int3
ds
aaa
leave
in
fld
jmp
sbb
sub
pmullw
dec
inc
loopne
in
mul
mov
(bad)
ret
js
aam
mov
in
push
xor
pop
sbb
ins
mov
mov
out
dec
xor
test
xchg
leave
(bad)
outs
mov
pop
or
add
jg
ins
inc
jns
xor
pushf
cmp
div
int
sub
push
ror
rcl
cdq
mov
or
imul
and
fwait
inc
mov
xchg
shl
mov
mov
jl
mov
(bad)
jne
scas
(bad)
int3
mov
push
mov
cld
jecxz
popf
xchg
retf
out
inc
punpcklwd
fucom
pop
rol
aam
loope
pop
pop
fwait
out
push
inc
arpl
xor
inc
nop
sub
sub
jmp
out
inc
jb
cwde
cmc
shl
cmc
cwde
or
rcl
push
pop
std
leave
fwait
icebp
add
sbb
inc
jno
and
(bad)
adc
cli
ret
popf
add
retf
fs
mov
mov
test
popf
pop
ret
xor
pop
cmps
push
dec
cmps
out
and
pushw
or
lock
scas
mov
cmp
pop
push
bound
adc
(bad)
cmp
and
cmc
mov
pop
into
xchg
fidivr
xchg
and
in
ret
or
hlt
jbe
jl
ja
jae
popf
sub
call
cmc
mov
popa
sub
data16
daa
icebp
sbb
scas
mov
movs
in
adc
push
scas
jb
push
xor
inc
mov
mov
shl
xchg
jne
(bad)
pop
xchg
imul
pop
retf
out
iret
idiv
push
adc
and
dec
imul
jno
loope
adc
xchg
clc
cli
aaa
pop
mov
inc
popf
or
fidivr
dec
lds
xchg
mov
dec
(bad)
not
int
inc
mov
clc
xor
jmp
pop
or
mov
rol
jns
push
mov
clc
pop
xor
cwde
inc
dec
jg
mov
out
icebp
not
inc
aaa
ja
jg
mov
add
aad
sub
test
mov
mov
call
jmp
stos
inc
xchg
(bad)
sub
cmp
arpl
dec
iretw
imul
dec
lea
sub
xor
mov
cmp
xchg
ss
aas
mov
fmul
or
rcl
xchg
adc
xor
sbb
adc
jle
enter
and
pop
or
or
in
inc
das
xchg
add
(bad)
in
test
pop
std
inc
mov
(bad)
dec
push
and
test
jno
push
or
jnp
movs
popf
mov
ret
in
(bad)
dec
sbb
pop
stos
dec
xor
fwait
les
sub
(bad)
xchg
jb
mov
int
mov
dec
aaa
mov
ins
mov
or
xchg
xchg
leave
add
mov
sahf
jle
sub
cmp
sub
jg
in
es
xor
and
div
and
cld
sti
(bad)
fidivr
sub
idiv
pop
cmp
movs
into
(bad)
loope
(bad)
(bad)
sahf
ins
xchg
repnz
cli
mov
adc
test
adc
add
fsubr
shl
out
sub
push
fwait
pop
in
imul
lods
xchg
sbb
or
pop
daa
addr16
lods
bound
adc
push
cmps
lods
das
inc
inc
movs
popa
scas
loopne
gs
jb
fisttp
cmp
mov
mov
sti
xchg
test
test
jle
das
mov
popa
inc
mov
cmp
inc
(bad)
js
cld
mov
clc
(bad)
cdq
jge
enter
jmp
rcl
retf
pusha
xor
dec
mov
lds
pop
loopne
and
cmp
(bad)
cmps
int
ret
dec
push
rcr
mov
icebp
movzx
push
inc
int3
stos
sub
lea
daa
popf
mov
in
in
jmp
xchg
inc
dec
sub
(bad)
adc
xchg
pop
dec
repz
xlat
cld
arpl
shr
sub
sar
mov
cmp
or
xchg
push
sub
(bad)
dec
cmp
popf
in
lahf
jecxz
pop
mov
jne
lock
push
(bad)
stos
dec
fstp
mov
ret
dec
int
repz
sbb
push
and
popf
retf
or
cmps
mov
dec
jmp
outs
fnstcw
cmps
pop
inc
mov
jg
pop
(bad)
std
ret
push
std
dec
jo
mov
cmp
xor
lods
aas
(bad)
mov
das
rcr
push
daa
sbb
adc
pop
lods
add
aad
rcr
xchg
test
fild
mov
rcl
inc
cwde
adc
enter
inc
inc
mov
out
les
js
aaa
dec
pushf
mov
fdiv
mov
mov
repz
fidiv
fs
in
adc
aas
rcr
cmp
fild
inc
mov
mov
inc
retf
mov
xchg
fmul
test
add
mov
test
movs
mov
popf
xchg
inc
nop
xor
out
push
pusha
jbe
sub
adc
push
icebp
(bad)
mov
outs
add
aad
aam
fld
adc
sbb
stos
xchg
sahf
sar
cmps
rcl
xor
xor
mov
aas
mov
mov
cmp
scas
repnz
int
mov
mov
pop
rcl
xchg
cld
mov
scas
fldcw
xchg
lods
lds
cmp
sub
xchg
jecxz
adc
rcr
xchg
mov
ficomp
push
leave
ss
lock
xlat
mov
inc
cmps
out
cld
sbb
imul
fiadd
push
adc
push
and
iret
lahf
popa
or
aas
push
jmp
mov
sbb
mov
sub
(bad)
sbb
and
jle
push
in
pop
jno
ror
cmps
sub
out
and
scas
ds
lahf
scas
lods
pop
loop
clc
retf
push
sbb
and
sbb
inc
fdiv
push
dec
mov
mov
pop
rol
sub
rcr
out
cdq
rcl
mov
ja
pop
sub
xor
push
or
das
aad
int
sub
add
fnstenv
cmp
mov
(bad)
ins
mov
shr
cmp
pop
xor
xchg
add
out
arpl
sbb
inc
popw
imul
add
jae
jns
mov
cwde
xor
push
add
jo
ficomp
dec
cld
je
popf
std
push
jmp
inc
jb
aas
and
(bad)
mov
push
lea
sbb
dec
add
(bad)
stc
pop
addr16
mov
ret
loopne
jmp
and
in
fisubr
sub
pop
stos
inc
sbb
lods
lahf
stc
inc
lods
push
mov
pop
jle
(bad)
mov
lds
lods
cmp
sub
jp
inc
push
dec
lahf
inc
xlat
cli
lods
fiadd
nop
mov
sbb
and
push
sub
stc
fdivr
cmp
data16
sub
or
in
jle
and
dec
sub
popf
out
out
xchg
sti
or
ror
leave
mov
movs
adc
jge
mov
cmps
add
dec
imul
and
pop
sbb
mov
out
adc
bound
mov
dec
add
adc
mov
cmp
cmp
jb
jmp
into
rol
arpl
push
dec
fadd
sub
gs
repz
and
repnz
ss
pop
push
arpl
push
mov
and
movs
cmp
dec
fwait
dec
mov
inc
mov
fnstcw
sub
lea
int
clc
add
xor
(bad)
mov
enter
bnd
imul
fdiv
in
pop
sbb
xchg
loope
gs
(bad)
jecxz
lods
push
retf
jb
xor
jl
sub
mov
or
mov
std
js
cdq
mov
adc
faddp
ins
icebp
push
cmp
aaa
stos
jecxz
fnstcw
sbb
out
dec
bound
dec
mov
mov
js
jae
cmp
aam
and
cmp
sar
inc
adc
pop
je
sub
rcr
xchg
sbb
pop
fld
mov
sub
sub
adc
pop
mov
cmp
or
sub
cmps
xchg
int3
mov
call
sub
ret
call
mov
mov
or
ror
lods
shl
push
push
inc
add
stos
adc
adc
aam
outs
mov
adc
dec
(bad)
stc
mov
sub
sbb
fisub
arpl
sub
jecxz
pop
jae
popa
jno
cwde
sub
aad
sub
rol
and
mov
pop
sub
mov
push
sub
cmps
mul
push
dec
mov
or
pextrw
retf
jmp
test
shl
pop
out
push
ins
outs
and
mov
push
shl
rol
rcr
test
je
adc
sub
mov
sub
jne
sbb
dec
lahf
or
push
(bad)
dec
leave
ss
and
sub
rcr
and
cmp
sahf
mov
stos
into
pop
ins
aas
das
pusha
pop
or
mov
and
dec
xor
jnp
arpl
aad
sbb
test
enter
and
inc
mov
mov
cmps
js
popf
test
(bad)
adc
add
fwait
push
(bad)
enter
cmp
aad
add
ja
sub
test
loope
adc
cs
mov
stos
jp
jb
je
or
add
imul
movs
cdq
adc
sub
std
push
adc
int
or
inc
jl
out
addr16
cmp
rol
sbb
add
mov
in
mov
xchg
dec
cmc
xor
imul
es
dec
ja
sbb
outs
push
and
sub
mov
mov
nop
push
out
mov
xlat
test
scas
aas
pop
and
inc
push
mov
xchg
add
xor
sbb
mov
inc
jle
(bad)
jmp
inc
lea
push
sbb
mov
retf
movs
out
add
add
int
or
push
dec
jns
inc
jmp
pop
gs
cli
jmp
cdq
icebp
mov
dec
mov
cmp
mov
push
sbb
pop
sub
and
pop
cwde
push
adc
jmp
(bad)
mov
ret
or
pushf
inc
pop
(bad)
jo
loope
and
ret
div
(bad)
imul
loop
pop
ss
pop
pop
mov
out
fild
pushf
xchg
mov
jle
mov
js
dec
add
outs
mov
adc
std
popa
adc
fwait
xchg
retf
cmp
bound
repz
movs
inc
mov
xchg
jecxz
mov
inc
sbb
add
push
push
ret
xchg
(bad)
mov
pop
cmp
dec
test
shr
clc
pop
adc
repnz
aam
lods
mov
and
push
push
sbb
sub
pop
jmp
mov
cmps
mov
jae
sub
mov
inc
mov
test
sub
push
xchg
pop
dec
retf
movs
mov
leave
je
push
mov
sub
lock
arpl
test
adc
push
jg
arpl
pop
push
mov
xor
sbb
shl
repz
loope
clc
jne
push
adc
xchg
icebp
jno
push
jl
pop
mov
bound
fs
mov
dec
mov
sti
loopne
sbb
not
push
mov
sbb
xchg
iret
mov
outs
(bad)
sub
(bad)
daa
lea
arpl
sbb
or
xor
cmp
inc
xchg
and
mov
dec
xchg
mov
call
ret
mov
sub
and
pushf
loope
dec
push
mov
xor
in
out
jge
les
fdivr
mov
sub
add
push
bound
test
call
sub
retf
mov
js
ja
jb
pop
rol
dec
mov
jo
sbb
mov
jns
pop
mov
mov
fld
inc
gs
mov
bound
dec
xchg
in
sub
call
cmc
mov
in
movs
imul
push
add
mov
or
test
loop
dec
sahf
popa
cs
pop
mov
gs
(bad)
std
in
and
mov
mov
mov
pop
pop
xor
add
xor
add
in
sbb
inc
pop
shl
loop
pop
scas
out
stos
scas
lahf
xchg
aas
loope
movs
fmul
mov
xchg
int
enter
sub
ss
lods
push
xchg
dec
push
shufps
leave
add
sub
rol
enter
dec
repz
or
mov
push
retf
mov
popf
adc
cmp
mov
xchg
loop
ret
mov
addr16
pushf
mov
sbb
sbb
inc
clc
pop
xlat
mov
push
xor
mov
or
inc
and
aaa
and
test
iret
mov
add
sbb
jne
cmp
mov
sbb
and
int
pop
pop
cmp
stc
dec
cs
jmp
push
pop
sahf
pop
aad
test
push
add
or
aas
fxch
pop
je
push
cld
jns
int
and
inc
inc
imul
jbe
jne
inc
arpl
inc
or
sub
fs
xor
addr16
mov
xchg
sub
fisubr
push
adc
pop
jmp
mov
pop
enter
xchg
pop
and
arpl
push
outs
cmp
arpl
retf
je
idiv
sbb
xor
nop
xchg
push
clc
push
sbb
fbld
retf
inc
cmp
(bad)
mov
add
cmp
cli
sbb
cld
cmp
cmp
mov
leave
sahf
jo
cmp
xlat
shr
or
xchg
in
lahf
stc
mov
adc
mov
sub
cmp
arpl
inc
mov
mov
jbe
fsubr
pushf
jle
mov
jecxz
add
adc
or
sbb
sub
add
cli
lahf
and
mov
push
fistp
mov
frstor
cwde
(bad)
(bad)
cmp
mov
sar
dec
aas
or
sbb
iret
jmp
xor
(bad)
cmps
pushf
out
(bad)
mov
retf
int3
movs
stos
inc
hlt
popf
cmp
cmp
icebp
out
out
push
jo
push
pop
out
mov
xor
xchg
adc
inc
pusha
div
mov
enter
lock
xchg
mov
inc
shl
adc
mov
mov
jge
mov
fild
push
scas
daa
and
clc
pop
rol
cwde
loope
add
(bad)
and
lods
rol
jp
jmp
ins
inc
movs
mov
mov
ret
imul
aaa
out
imul
or
popf
adc
dec
(bad)
ds
push
movs
movs
or
pop
adc
lea
aad
jl
std
test
shl
xor
adc
pop
enter
shl
mov
popa
das
push
imul
psubsb
jg
pop
mov
aad
loope
sbb
pop
shl
adc
cs
repnz
jnp
out
pop
fs
jno
dec
out
lock
push
test
stc
mov
mov
leave
jl
sub
(bad)
pushf
ficom
mul
fisubr
dec
aad
lea
fsubp
mov
push
xchg
xor
inc
pop
shl
retf
mov
shl
xchg
xchg
adc
es
mov
test
pop
xchg
scas
push
inc
mov
jnp
jmp
push
add
push
and
in
aam
sar
xchg
jne
adc
xchg
test
xlat
les
pop
sbb
mov
or
sub
stc
mov
jb
and
test
pop
nop
imul
dec
lods
sub
dec
scas
das
dec
mov
add
aaa
je
rcr
sti
sub
mov
xchg
retf
ja
mov
sbb
dec
lock
add
test
inc
or
imul
add
xchg
cmp
xchg
ss
sub
mov
pop
pop
stc
mov
neg
ret
push
xor
and
arpl
out
mov
push
test
ja
or
clc
inc
test
sub
fcom
inc
fcomp
sbb
pop
add
inc
dec
clc
cmp
inc
pusha
adc
lods
pusha
sub
ret
add
movs
xchg
in
add
sbb
outs
in
jmp
lahf
scas
shl
or
in
je
and
lea
mov
xchg
mov
xor
sub
(bad)
mov
mov
ins
dec
pop
lds
cmc
and
test
mov
lahf
in
add
mov
sbb
push
pop
xor
sub
sub
mov
movs
mov
lahf
or
xor
jns
mov
ins
or
jnp
sbb
inc
jp
ds
lock
mov
mov
mov
ins
sub
(bad)
ret
enter
pop
dec
out
(bad)
cmp
fist
out
inc
nop
pop
cmps
inc
push
das
repnz
xlat
outs
push
sub
mov
and
repnz
(bad)
js
push
cmp
inc
int
out
call
jg
push
shl
loope
cmps
and
ja
mov
aam
lea
ret
shl
or
jne
mov
mov
int3
enter
inc
(bad)
into
jmp
movs
or
push
push
shl
xchg
xchg
add
add
mov
xor
pop
mov
out
ss
rol
mov
jl
adc
mov
addr16
cli
cmp
jmp
mov
jecxz
mov
or
stos
sbb
jne
xchg
cdq
pushf
lods
ins
je
arpl
pop
and
lods
mov
xor
stos
out
dec
xchg
sub
fild
in
pop
jp
push
push
push
or
push
mov
cld
lods
push
pop
ins
mov
arpl
push
xor
fimul
mov
mov
and
jle
mov
push
or
and
push
add
xor
cmp
mov
xchg
sbb
arpl
call
sbb
loope
movs
into
fmul
retf
xchg
dec
out
aas
loopne
addr16
and
sbb
lock
mov
mov
adc
imul
pop
mov
in
sub
xchg
popa
xchg
or
imul
sbb
xchg
mov
mov
xchg
out
ss
cli
inc
pop
arpl
push
add
xchg
mov
rol
jns
scas
iret
ret
mov
in
pop
sbb
call
test
test
sub
out
mov
cmp
jp
jns
push
aam
outs
add
rcl
aaa
outs
jmp
gs
data16
fisub
mov
sub
sbb
cs
dec
and
jle
(bad)
sub
mul
inc
das
mov
cmps
aam
retf
xchg
lock
retf
(bad)
fwait
lea
imul
(bad)
mov
inc
jg
push
dec
loopne
and
sub
and
cmps
addr16
out
cwde
sahf
out
adc
dec
or
pop
and
in
fwait
mov
add
or
or
fcmove
lahf
xchg
xor
mov
mov
mov
xchg
fisttp
xchg
cwde
pop
xchg
cmp
push
aam
sub
dec
cmps
xchg
frstor
cmp
push
clc
std
popf
add
inc
cmps
shl
imul
lods
push
mov
retf
lea
mov
cmp
in
push
(bad)
rcl
fst
cmp
or
fdiv
jmp
inc
fistp
call
into
and
inc
adc
fwait
cs
xchg
add
int
mov
mov
xor
adc
rcl
mov
js
xchg
inc
std
icebp
cmps
fbstp
inc
sbb
mov
rcl
pop
sbb
test
pop
(bad)
cmp
in
mov
xlat
pushf
sar
dec
out
pusha
and
xor
push
mov
aad
js
out
jmp
mov
ss
xchg
out
pop
pop
cld
jle
pop
mov
push
and
rcr
fcomip
and
xlat
jo
pop
cmp
mov
ds
icebp
xchg
inc
pop
xchg
xor
idiv
mov
enter
push
loope
lods
fnstsw
adc
mov
sub
xchg
rol
dec
leave
shl
imul
xchg
test
std
sub
cmps
jmp
dec
repz
pushf
mov
bound
dec
jmp
hlt
pusha
xchg
ficomp
dec
outs
and
xchg
sbb
xor
in
arpl
icebp
dec
cmc
mov
loop
dec
(bad)
dec
xchg
cmp
inc
xchg
pop
iret
aad
pushf
adc
out
lods
push
mov
cwde
fist
sbb
stos
jp
call
int
sti
leave
test
sub
arpl
bound
ins
mov
xor
mov
fs
mov
ror
pcmpgtw
jp
imul
cmp
xchg
lods
jnp
addr16
test
sbb
adc
loope
leave
(bad)
call
lods
imul
push
adc
xchg
mov
jge
xchg
push
pushf
and
mov
xchg
scas
pop
add
mov
sar
sbb
or
in
and
mov
lahf
fwait
aas
ret
jae
cmps
push
sub
lds
add
adc
mov
stos
fbstp
(bad)
retf
data16
and
shl
imul
jns
pop
add
jmp
jle
jae
cmp
jne
mov
movs
jno
add
adc
mov
cmps
or
jmp
scas
dec
sbb
inc
dec
push
fisttp
imul
xor
fdivr
in
dec
test
test
cmp
jecxz
aaa
dec
inc
xor
dec
adc
je
sbb
inc
lods
test
mov
sbb
jmp
icebp
movs
mov
ret
and
adc
pusha
cmps
iret
frstor
or
test
add
mov
popa
iret
xchg
(bad)
pop
es
ret
adc
jbe
dec
pop
or
mov
cmp
loop
scas
jbe
jae
mov
lods
loop
test
xor
ins
imul
mov
cmps
adc
mov
ret
add
sbb
aad
or
cmp
push
cld
or
mov
das
mov
and
mov
loopne
test
mov
xchg
jp
jg
(bad)
cmp
je
sar
stos
dec
ret
push
xor
xchg
rol
adc
push
imul
push
das
dec
clc
pushf
shrd
pop
mov
pop
xchg
pushf
sub
sub
lods
and
arpl
test
mov
inc
xor
lock
jns
add
popf
cmp
(bad)
fiadd
lds
mov
mov
ins
adc
shr
fwait
aas
jo
(bad)
adc
imul
jbe
and
aas
and
or
scas
es
les
aaa
stc
fist
fstp
push
(bad)
push
fcomi
xor
cld
push
jnp
add
fwait
jne
leave
jp
test
mov
test
rol
pop
es
mov
clc
pop
loop
mov
sub
xor
jo
jg
lods
cmc
jmp
mov
sub
dec
inc
xchg
xor
dec
mov
or
stos
add
mov
cmp
in
inc
loopne
mov
in
mov
mov
jno
add
xchg
adc
push
or
mov
fstp
movs
mov
sub
stc
test
xor
mov
adc
gs
sbb
dec
push
push
adc
call
(bad)
mov
stos
and
cmc
std
(bad)
mov
(bad)
popa
test
rol
cmps
lea
fidiv
push
inc
cmp
xchg
adc
ja
mov
push
dec
shl
out
inc
call
mov
cwde
jo
in
lods
push
jo
jbe
add
pusha
sbb
pop
pop
dec
or
lea
popf
mov
fxch
jnp
mov
xchg
sbb
mov
iret
jecxz
xor
push
adc
or
ins
push
mov
jae
test
cli
inc
push
aas
movs
aam
cmp
pop
cmps
iret
fild
push
adc
nop
cmps
fsubr
sbb
add
mov
iret
sub
mov
push
dec
add
jo
stos
xlat
jmp
loope
add
and
frstor
adc
call
mov
nop
movs
das
rol
and
inc
sti
ds
enter
mov
shl
stos
push
arpl
cmc
xchg
mov
rol
xchg
ret
jmp
inc
loop
push
div
and
out
mov
mov
in
jb
mov
inc
ds
mov
stos
ror
ret
popf
je
out
add
jmp
or
outs
bound
ret
lods
cmp
(bad)
lock
and
jbe
rcr
and
push
sub
xor
push
push
xor
ret
and
adc
das
pop
in
mov
loope
sub
xchg
clc
out
and
test
jg
or
add
pusha
pop
xchg
bound
and
mov
scas
std
xor
aam
add
mov
sub
mov
loope
(bad)
out
in
repnz
cmp
pop
jmp
pusha
add
mov
(bad)
out
aad
popa
out
pop
imul
cdq
jge
dec
(bad)
aad
fnstcw
mov
pop
mov
mov
jne
test
outs
hlt
dec
leave
xor
pop
mov
jo
pop
ja
lods
pop
add
test
adc
add
aaa
ins
test
add
mov
movs
cmp
inc
loop
sbb
(bad)
and
inc
dec
sbb
popf
lock
sub
loopne
ins
sub
cmps
js
sbb
call
xchg
pop
mov
out
mov
repnz
jmp
into
sbb
ret
stc
int
outs
jo
add
pushf
mov
and
jg
retf
mov
push
push
iret
wbinvd
xor
stos
sub
xchg
scas
jae
cmc
iret
jp
cs
in
jns
mov
push
sub
push
dec
out
inc
test
push
xchg
mov
ins
or
lock
shl
jae
push
pop
movs
mov
sub
movs
and
sbb
dec
in
in
push
or
cmp
pop
js
sbb
mov
je
pop
jo
aam
mov
mov
xchg
and
inc
push
and
dec
xchg
sar
fwait
push
or
pop
int
jno
into
cli
je
sub
cmps
cmp
push
jecxz
and
leave
and
jmp
fsubr
js
out
push
push
add
fdivr
sub
je
xchg
mul
test
in
mov
pop
and
jl
enter
shr
and
mov
and
pop
inc
dec
lahf
or
and
in
cmp
call
lds
cwde
test
or
ret
push
aad
sti
mov
and
pop
sub
aad
arpl
jg
inc
addr16
cmps
lods
mov
scas
ret
xor
cmp
xchg
and
in
aam
sbb
shr
fadd
mov
inc
shl
(bad)
xor
scas
xor
lds
inc
dec
adc
cmp
jl
adc
sbb
mov
rol
mov
out
loope
dec
stos
dec
push
pushf
inc
into
jg
jb
sub
sbb
cmp
shl
arpl
xchg
sbb
mov
jnp
fisub
add
pop
mov
mov
jae
jp
mov
mov
aaa
das
dec
mov
cmps
addr16
aad
adc
adc
stc
fdiv
mov
mov
(bad)
(bad)
std
mov
xchg
retf
mov
lahf
aam
push
push
pusha
aam
and
shl
xchg
retf
mov
mov
test
sbb
xchg
(bad)
push
(bad)
in
in
rol
daa
mov
inc
mov
and
(bad)
(bad)
mov
cmp
xchg
arpl
jno
shl
bnd
retf
sar
int
jbe
mov
mov
jp
fdiv
dec
(bad)
retf
add
add
jbe
jo
(bad)
push
adc
adc
mov
std
and
jecxz
inc
dec
sub
cmps
(bad)
cmp
ret
sbb
movs
xor
mov
inc
xchg
push
adc
sub
xchg
jbe
add
das
outs
mov
out
mov
inc
jp
sub
cs
push
imul
int3
fstp
push
pop
repz
cdq
enter
fnstcw
jns
pop
lock
shl
leave
push
clc
or
cmps
mov
ss
ins
repnz
shl
cmp
xchg
call
or
mov
out
mov
stos
sub
jno
std
cli
and
or
repz
xlat
inc
pop
in
repz
(bad)
(bad)
xchg
sub
and
or
mov
iret
mov
call
adc
cmp
lods
bnd
in
jmp
imul
jle
out
lea
mov
xchg
in
adc
xor
jne
(bad)
ins
fst
dec
inc
iret
(bad)
mov
add
test
cmp
xchg
xchg
jmp
cmp
adc
fiadd
jge
ins
cld
xchg
mov
call
mov
mov
scas
lock
sbb
or
sbb
jno
xchg
or
inc
mov
xchg
jns
imul
fwait
push
jmp
lods
ja
daa
sub
mov
gs
inc
or
stc
mov
pop
scas
rcl
push
stos
int3
(bad)
mov
mov
jae
mov
mov
stos
push
retf
out
cmp
das
pop
lds
in
ins
(bad)
dec
cmp
mov
dec
iret
sub
imul
or
les
jmp
dec
jbe
push
imul
cmp
sbb
inc
sub
out
add
sub
pop
outs
lea
lods
pop
int
scas
push
push
bound
pop
xchg
pop
xchg
pop
mov
(bad)
loop
arpl
in
push
cmp
mov
and
jo
sub
mov
mov
les
sub
push
and
push
and
xor
sub
and
lods
jmp
(bad)
jo
add
cwde
add
cmp
pushf
sahf
aaa
jmp
loope
js
sub
cmp
ret
gs
or
pushf
cmp
mov
imul
cmp
cmp
sub
dec
jmp
cwde
push
dec
das
mov
mov
or
push
mov
pop
shr
mov
cmp
icebp
inc
loop
or
mov
inc
add
xor
and
gs
stc
pusha
jbe
sbb
call
xchg
or
jno
mov
enter
adc
adc
scas
cld
mov
xchg
cmps
hlt
jg
pop
rol
outs
pop
and
mov
ficom
push
out
mov
jno
xchg
and
sub
or
mov
pop
imul
gs
xor
mov
loope
je
mov
out
outs
adc
movs
sub
lea
or
enter
retf
std
into
dec
loopne
xchg
fsub
cmp
mov
stos
pushf
jge
xor
lgs
xchg
xchg
pop
pop
fwait
sahf
loopne
dec
or
xchg
xor
test
dec
lods
sbb
jg
test
sub
fcomp
xor
sub
int
clc
rol
jb
cmp
(bad)
pop
xchg
les
stos
mov
and
or
and
push
aam
add
cmp
shl
aad
sub
lds
push
pop
mov
xlat
dec
jmp
cs
xor
std
test
push
dec
mov
mov
or
jnp
fcom
and
dec
fsubr
push
inc
cs
fstp
test
jnp
loope
pop
push
idiv
icebp
or
jecxz
fadd
pop
std
cdq
jl
or
push
ja
cmp
test
sbb
in
pop
add
sbb
inc
aam
mov
sbb
sbb
aaa
add
fild
xchg
add
or
sub
mov
outs
xchg
(bad)
push
cmp
push
loopne
nop
fst
sub
xchg
jnp
lods
jbe
in
repz
scas
call
dec
and
(bad)
add
or
xor
movs
inc
pop
or
dec
sub
mov
jmp
lds
cmp
cmp
outs
int3
out
(bad)
(bad)
cmp
push
push
shl
mov
pop
adc
jno
loope
pop
jo
mov
cmp
fcmovb
test
pop
loop
jge
dec
call
cmps
ret
scas
int3
repnz
es
es
fimul
shrd
pop
loope
dec
cmp
or
popa
sbb
js
or
cmp
jo
sbb
push
cmp
cs
lods
sbb
loope
mov
and
pop
inc
adc
xchg
retf
lods
test
shr
ss
xchg
or
ret
loop
push
push
xchg
jl
mov
pop
cmp
es
outs
jle
and
in
xchg
xchg
dec
lds
sbb
fcmovb
pop
pop
aad
mov
fwait
jg
rol
cmp
xchg
xchg
in
aad
aam
push
mul
(bad)
mov
dec
mov
repnz
cdq
jle
loop
or
arpl
mov
(bad)
mov
inc
inc
cmp
ds
cmp
retf
mov
mov
pusha
(bad)
lahf
jg
cmp
lds
outs
push
in
inc
lods
dec
mov
xor
test
sub
std
int3
jge
mov
inc
int3
ds
test
mov
jo
idiv
add
imul
and
push
cli
jbe
outs
dec
lock
xchg
mov
(bad)
cmp
push
jb
mov
iret
rcl
movs
in
inc
mov
inc
aad
dec
and
ror
mov
fmul
mov
imul
add
inc
cmp
movs
loope
hlt
pop
xor
jecxz
ja
loop
adc
or
pusha
inc
xor
das
mov
sbb
mov
aas
stc
arpl
mov
(bad)
retf
push
loopne
fsubp
or
je
and
jge
out
test
jle
in
mov
fsubp
push
cmp
stc
sbb
mov
mov
or
imul
cmp
(bad)
lea
mov
sbb
mov
popa
mov
push
and
add
(bad)
cld
sar
xor
jns
and
iret
sbb
scas
pop
cmp
out
sub
in
inc
mov
push
cld
push
repz
sub
push
xchg
stos
imul
int3
xor
push
sbb
jg
xor
dec
push
aad
dec
add
(bad)
cdq
cmc
xchg
test
repnz
out
fwait
add
cmp
push
sbb
sub
call
outs
sbb
and
xchg
mov
adc
mov
dec
xor
mov
sbb
jo
mov
enter
cmp
in
cld
idiv
shr
xchg
cld
loopne
or
adc
pushf
xchg
rcl
xchg
retf
in
bound
cmp
dec
retf
stos
clc
ret
test
pusha
cmp
mov
mov
adc
mov
xor
sbb
mov
fdivr
sbb
xor
add
pop
xor
inc
icebp
movs
mov
inc
push
pop
bound
xor
xchg
inc
jmp
retf
fidivr
pop
lods
mov
cmp
fdivr
xor
and
and
xor
repz
arpl
pop
cmp
out
aam
retf
repz
(bad)
call
pop
dec
out
pusha
(bad)
push
add
pushf
out
rcr
icebp
jge
xchg
pcmpeqw
aam
dec
jl
mov
xor
jbe
jmp
test
out
push
loope
xchg
adc
mov
add
adc
(bad)
fisttp
scas
call
jg
fs
pop
or
jns
dec
mov
lods
cmp
lea
mov
test
ja
add
mov
lock
jmp
(bad)
jmp
lods
psubw
pop
rcl
jmp
sub
or
mov
fs
jno
ror
call
mov
fwait
je
mov
mov
xchg
push
xor
cmc
adc
nop
dec
cmp
and
xor
xchg
out
and
cmc
loopne
mov
inc
pop
adc
jnp
add
iret
cmp
clc
lahf
enter
ficom
xchg
mov
ret
fwait
mov
outs
inc
mov
push
pop
pop
mov
cld
aas
fadd
repz
xor
dec
inc
xchg
loop
mov
fld
mov
ins
clc
(bad)
in
jge
push
push
inc
(bad)
jnp
pop
mov
mov
into
enter
into
push
iret
dec
fldenv
or
mov
leave
(bad)
xor
ror
in
mov
add
imul
hlt
mov
(bad)
(bad)
js
push
add
fld
xor
dec
and
lods
xor
fild
mov
sbb
push
adc
jns
lock
mov
jno
fild
or
sub
in
pop
iret
dec
shl
movs
rcl
or
cs
xor
out
add
push
ret
mov
addr16
ins
clc
enter
aaa
ds
in
mov
push
xchg
jl
hlt
in
aaa
test
repnz
sbb
js
xchg
add
adc
sub
push
js
adc
mov
or
jb
cs
das
pop
out
or
jo
push
popa
les
jge
sar
push
ins
(bad)
pusha
xchg
cwde
inc
cmp
and
ret
mov
cmp
adc
push
push
xor
mov
cli
pop
fst
adc
pop
call
adc
pop
mov
pop
push
out
push
sbb
jmp
sub
das
cmps
jmp
out
les
cmp
in
inc
inc
int
mov
test
addr16
sub
and
or
loope
out
xchg
bound
add
adc
mov
xor
std
lahf
mov
cwde
scas
sbb
aaa
jl
mov
inc
shl
pop
cdq
inc
mov
sub
retf
test
xor
sub
je
pop
aad
fdiv
cmp
ret
pop
(bad)
push
jb
mov
jle
sti
push
(bad)
cli
xor
lds
xchg
mov
into
int
adc
test
aam
gs
sub
jmp
lds
pusha
jmp
pop
xor
sub
stc
mov
cmp
pop
in
sub
mov
and
in
leave
inc
push
fs
dec
loop
or
inc
mov
inc
or
push
sbb
fstp
xor
push
fpatan
cmp
cmp
lods
inc
cmp
dec
inc
mov
stos
ins
mov
xchg
jl
xor
sbb
pop
mov
or
call
cmps
popf
cs
push
iret
jne
cs
retf
dec
popa
aam
add
cmp
jecxz
and
out
xor
(bad)
jbe
mov
or
sbb
push
sub
xchg
xchg
or
add
mov
mov
adc
mov
sub
mov
stos
inc
in
add
inc
push
sti
adc
fcomp
std
sbb
lea
pop
mov
gs
dec
out
cs
(bad)
mov
out
cmp
or
sbb
inc
push
cvtps2pd
outs
(bad)
mov
push
xchg
sbb
jge
arpl
(bad)
xchg
jbe
mov
xor
inc
in
and
gs
std
in
mov
jo
jp
xchg
adc
out
ror
push
das
mov
xchg
push
or
shl
loopne
mov
in
leave
aad
in
enter
mov
lods
test
cwde
sub
mov
push
mov
mov
pop
loope
mov
push
aad
cdq
nop
xor
jp
sbb
jmp
cld
stc
int
dec
push
pusha
or
into
pop
xor
and
popf
inc
push
mov
push
sti
scas
addr16
mov
sti
dec
aas
and
jbe
mov
in
pop
mov
arpl
nop
cmp
adc
stc
retf
push
or
pop
std
mov
sbb
ret
cmp
cmp
pop
pop
rcl
imul
inc
or
cmp
shl
aas
sti
lds
cwde
call
sub
dec
adc
jecxz
mov
in
mov
movs
xchg
mov
push
ins
retf
(bad)
mov
pushf
gs
movs
jmp
je
cmc
sti
lea
mov
jne
add
mov
(bad)
repnz
iret
mov
mov
lock
push
mov
mov
iret
aas
mov
xor
mov
or
add
jbe
adc
jbe
or
mov
lock
lds
bound
jl
and
xchg
cmp
jle
das
lods
inc
ret
retf
pop
mov
out
cmc
sbb
inc
fist
fadd
pop
test
leave
icebp
gs
jmp
imul
adc
add
inc
and
pop
(bad)
lods
adc
mov
mov
das
addr16
cmp
int3
data16
jo
push
ds
fist
inc
jno
cli
loopne
leave
shl
inc
jnp
nop
lods
test
enterw
xor
sbb
dec
adc
nop
xchg
repnz
std
sar
jne
leave
xor
test
and
xor
mov
enter
test
sub
xor
mov
xchg
push
cmp
xchg
jmp
mov
(bad)
lock
pop
sub
sub
popf
cdq
and
mov
cld
loopne
in
mov
inc
mov
add
repz
xchg
dec
xchg
push
jo
or
mov
xchg
mov
dec
cli
xor
mov
and
cmp
mov
cmp
xchg
mov
(bad)
cmp
adc
retf
jge
push
cld
mov
sbb
inc
inc
movs
xchg
cli
and
or
repz
shl
jbe
adc
call
fidivr
ins
sahf
or
ins
cld
push
cmp
sub
inc
add
sub
inc
mov
ret
sub
out
ror
add
fimul
add
mov
rol
loop
outs
jne
scas
ret
loopne
addr16
out
push
jg
(bad)
imul
daa
(bad)
ja
sbb
push
xchg
pop
adc
repz
daa
and
mov
aas
je
test
icebp
jge
jmp
jns
dec
xchg
lds
out
inc
mov
mov
mov
or
xchg
mov
int
xchg
in
mov
push
sbb
xchg
shr
jbe
sub
xchg
popf
inc
jbe
cmp
jmp
sub
call
push
movs
mov
or
jl
mov
mov
mov
int
repnz
movs
xchg
xchg
pop
retf
sbb
jp
scas
cmps
pop
jae
inc
jl
ins
push
cdq
int
mov
adc
bound
(bad)
fstp
cs
dec
xchg
mov
mov
push
fwait
daa
xor
xor
push
test
mov
nop
xchg
sbb
xchg
arpl
jo
ror
pop
mov
mov
cmp
mov
or
push
and
idiv
ss
outs
imul
mov
mov
sar
xchg
pushf
jle
scas
leave
adc
jle
cmp
inc
imul
in
icebp
loop
dec
add
ror
mov
lea
mov
dec
sub
aaa
cmp
xor
adc
ds
xchg
jae
adc
stc
imul
sti
iret
jmp
cmc
jnp
add
and
les
cwde
pop
call
shr
mov
mov
mov
scas
lds
pop
ret
mov
fiadd
fcomp
mov
cmp
sti
adc
repnz
stc
sahf
add
out
cmps
dec
mov
movs
ret
inc
dec
fldenv
enter
xchg
lods
xlat
jg
div
add
bound
jnp
jmp
mov
pop
jmp
xchg
out
gs
psubusb
and
lods
jge
ret
xor
mov
jno
shr
repnz
pushf
sub
or
push
mov
mov
scas
pusha
ss
push
(bad)
mov
push
mov
mov
adc
or
mov
cmps
xor
jo
dec
fcom
jle
cdq
mov
jae
adc
popf
aad
push
outs
push
and
jb
daa
jo
push
dec
adc
add
inc
iret
dec
loop
stos
pop
in
mov
shl
sti
sbb
jl
inc
xchg
(bad)
pop
or
call
push
jo
stos
add
pop
sbb
add
xchg
int3
loop
adc
aad
in
imul
je
mov
sahf
jecxz
clc
mov
xchg
(bad)
(bad)
test
xchg
addr16
addr16
inc
jns
adc
data16
les
dec
sub
test
xchg
test
mov
mov
pop
jne
test
retf
jl
add
mov
cmp
loop
fcomp
movs
and
push
push
mov
sub
add
mov
rcr
xchg
push
cmp
daa
add
dec
pop
jge
mov
stos
fadd
sar
(bad)
imul
sbb
pop
ret
xor
cmp
call
test
dec
or
adc
inc
cmp
xor
push
hlt
imul
(bad)
push
add
mov
clc
or
adc
(bad)
sub
pop
xchg
and
pop
inc
push
jns
and
jle
ins
sbb
jl
pop
rcr
xor
mov
inc
jl
out
lea
movs
in
mov
sbb
cmp
int3
jne
jae
push
jp
int3
push
and
icebp
mov
retf
stos
mov
xchg
movs
outs
mov
jns
jp
pop
mov
inc
mov
push
mov
jge
lock
pop
hlt
popa
ror
push
js
sbb
mov
fwait
sbb
dec
and
ins
iret
add
xchg
jmp
push
stc
sbb
repz
pusha
arpl
push
adc
(bad)
aad
mov
xchg
jo
mov
stos
sbb
cmp
popf
aaa
or
mov
xchg
mov
(bad)
adc
inc
(bad)
call
xor
mov
add
test
cmp
aaa
sub
mov
xor
int3
or
(bad)
xlat
in
mov
xchg
push
mov
xor
fisub
retf
pop
test
add
lds
mov
aas
dec
mov
ficom
xchg
push
int
mul
in
mov
inc
xchg
retf
sub
inc
mov
sbb
push
in
sub
stos
repnz
xor
add
pop
into
arpl
jmp
mov
push
cld
aam
mov
jmp
dec
adc
loopne
shr
sub
imul
div
mov
and
std
movs
jae
mov
cli
cmps
repz
push
ss
ret
push
xchg
rcl
outs
aaa
test
mov
mov
mov
mov
fistp
mov
cli
mov
dec
neg
mov
pop
and
fisub
lods
imul
test
xchg
sbb
and
pushf
popf
xlat
out
popf
cmp
dec
ja
jmp
mov
rol
mov
mov
mov
(bad)
mov
inc
adc
pop
inc
loopne
mov
rcl
mov
sbb
pop
xchg
pop
mov
xor
clc
push
mov
or
ins
imul
or
rcr
xor
dec
xor
xchg
in
outs
stc
mov
sbb
jmp
arpl
into
inc
dec
add
fiadd
xor
xor
jp
leave
retf
xor
(bad)
iret
and
and
adc
lods
bound
mov
push
fnstenv
jns
lock
xchg
repnz
(bad)
sbb
cmc
dec
pop
enter
jecxz
fcomp
push
jne
cmp
push
xor
out
repz
mov
into
sahf
xchg
imul
or
jo
lods
repnz
pop
popf
inc
outs
inc
cmps
mov
cmp
or
dec
sbb
hlt
sub
xchg
div
inc
leave
sbb
mov
cwde
sbb
sbb
movs
fadd
sbb
pop
mov
cmp
test
shr
aas
clc
xor
dec
sbb
xchg
into
mov
and
mov
xchg
sbb
xchg
out
dec
push
jne
xchg
jmp
mov
mov
xchg
mov
movs
call
data16
or
mov
test
mov
push
sbb
sti
cld
cmps
push
inc
adc
xor
push
(bad)
dec
pusha
js
mov
cmp
push
sub
out
arpl
stc
jb
sub
jno
lea
fld
cmp
xor
xlat
cmp
enter
sahf
mov
les
ror
mov
enter
or
cmp
xor
jle
jnp
pop
xor
cwde
mov
and
les
shr
loope
clc
iret
imul
dec
cmps
push
or
int3
push
or
fwait
jae
dec
inc
push
daa
shl
std
test
pop
push
sub
or
push
push
loopne
aad
sbb
push
bound
call
add
sub
jl
mov
add
imul
mov
add
dec
pusha
sbb
loopne
sub
pushf
enter
(bad)
aad
and
fidivr
inc
inc
jmp
aad
or
ja
loop
jbe
push
xchg
es
add
sub
xchg
out
xor
xchg
dec
bound
pop
scas
out
dec
cld
jmp
dec
mov
fsubr
test
push
test
je
and
and
mov
iret
pop
shl
pop
pop
jnp
call
sbb
cmp
mov
mov
adc
add
mov
adc
pop
mov
movs
add
call
in
(bad)
in
cmp
fucomp
clc
xor
pop
cmp
xor
mov
and
sub
cli
mov
add
xchg
dec
mov
cmp
sbb
call
mov
xor
cmp
retf
pusha
mov
aaa
out
cmp
ins
je
adc
das
pop
ret
and
or
ins
adc
syscall
xchg
dec
jecxz
test
pop
sub
mov
repnz
jb
mov
stc
inc
cwde
stos
jo
fcom
imul
icebp
imul
jo
cmp
jno
fdivr
inc
push
push
daa
sahf
jecxz
icebp
enter
sti
sbb
add
push
cmps
adc
and
pop
imul
mov
push
ja
movs
(bad)
inc
push
jne
xchg
aam
movs
test
mov
jo
ja
fmul
addr16
add
add
fidiv
lds
test
rcl
fisubr
and
push
sub
sub
jmp
pushf
addr16
nop
mov
sbb
loopne
mov
mov
frstor
icebp
fld
loop
inc
cmp
fisubr
sbb
mov
cmps
fidiv
test
sub
jb
jo
mov
sbb
lods
or
xor
aam
lods
stos
das
cmp
call
ret
sbb
push
mov
test
stos
or
inc
push
add
pop
mov
in
(bad)
lahf
pop
cli
test
cmp
sti
inc
inc
add
jg
es
and
std
shl
mov
test
ret
pushf
jmp
je
and
xchg
fisttp
cld
sub
mov
add
sahf
or
daa
test
or
adc
xchg
or
not
add
in
in
stos
push
sti
push
out
add
xchg
imul
pop
sbb
jno
fs
xchg
in
sbb
inc
xor
jg
dec
inc
(bad)
mov
push
in
cmp
push
pop
pop
pop
fldcw
mov
pop
daa
out
rol
jnp
into
aaa
or
sti
aaa
aad
je
aam
iret
push
cmp
adc
(bad)
out
int
mov
mov
test
inc
ins
push
scas
std
das
inc
pop
popa
and
sub
movs
call
mov
sub
add
mov
mov
mov
pop
jno
jge
(bad)
lods
je
dec
push
and
adc
bound
xchg
hlt
ret
leave
sbb
(bad)
repz
cmps
call
jmp
(bad)
mov
xchg
and
lods
jns
loopne
sahf
mov
ins
(bad)
daa
xlat
sub
jne
sti
dec
pushf
mov
push
inc
in
sbb
inc
and
jbe
sub
ss
sub
ds
retf
mov
jmp
cmp
cs
mov
jg
jnp
sub
xchg
mov
pusha
cdq
push
shl
jl
hlt
jmp
out
jae
xchg
imul
pop
test
mov
pop
sti
test
jle
scas
push
mov
xor
cmp
jp
mov
icebp
popf
adc
adc
aam
pusha
outs
movs
push
sar
popf
or
mov
xchg
and
adc
arpl
(bad)
and
iretw
mov
ja
dec
mov
mov
push
call
daa
mov
sets
movs
sub
push
aas
mov
jmp
pop
cmp
dec
jo
pop
mov
pop
jg
retf
cmps
jno
fldenv
movs
iret
push
adc
xchg
cmp
mov
adc
neg
mov
sub
xor
adc
jmp
push
aad
jne
pop
push
test
out
xchg
iret
jns
das
inc
push
lods
dec
mov
mov
pop
jle
and
(bad)
pop
fwait
outs
repz
cdq
and
cs
cmovg
retf
xor
adc
pop
repz
(bad)
pop
xchg
cmps
movs
inc
dec
and
dec
retf
adc
cmp
ret
jmp
inc
cmp
cmp
imul
enter
aam
xchg
cs
adc
ret
add
and
stc
aam
data16
js
sub
mov
sub
js
pop
jp
out
pusha
(bad)
nop
nop
and
mov
jle
jg
sbb
and
push
in
or
mov
mov
cdq
(bad)
mov
repnz
add
mov
lods
test
xor
retf
std
ja
push
sbb
jnp
push
call
stc
leave
adc
pop
aas
push
xchg
imul
aaa
ret
push
inc
sbb
cmp
add
jmp
inc
sub
shl
aaa
sub
inc
sub
xor
aas
jge
aaa
shr
in
mov
jl
gs
cdq
lods
cli
retf
fnstcw
(bad)
pop
imul
pop
jle
jecxz
pop
fnstsw
movs
gs
sbb
mov
lahf
int3
jo
push
jecxz
repz
mov
sbb
ficomp
xchg
ss
push
jle
mov
outs
or
out
mov
ret
in
arpl
add
push
cmp
xchg
(bad)
jmp
fdivr
test
mov
pop
cli
mov
or
inc
js
or
cmc
test
or
add
loopne
mov
retf
xchg
xor
(bad)
adc
pop
xchg
std
adc
or
xchg
pop
mov
xchg
out
xor
loopne
lods
jnp
mov
mov
add
cli
leave
mov
inc
pop
test
sti
jl
les
or
sub
repz
xor
or
gs
fndisi(8087
out
loopne
jae
xor
out
aad
pop
ss
int3
xor
adc
cmp
(bad)
(bad)
retf
jbe
jp
jmp
aaa
fdiv
cmps
clc
jmp
ja
stc
add
sbb
xor
cs
mov
pop
(bad)
push
xchg
je
ins
mov
xchg
mov
and
lods
xor
inc
mov
jge
in
fadd
sar
adc
push
push
popa
xor
adc
inc
jae
(bad)
lods
test
test
in
cmps
pop
cmp
xchg
xor
mov
bound
cs
retf
push
sbb
pop
push
inc
mov
and
add
popa
mov
push
or
xor
xchg
in
pop
cs
loope
mov
je
rcl
test
leave
xchg
ins
movs
std
push
mov
popf
adc
test
cdq
jl
and
call
or
sbb
mov
xchg
adc
ret
mov
xchg
pop
and
pop
sbb
mov
sbb
mov
cli
rcl
nop
fwait
lahf
jge
xor
mov
or
imul
sub
add
cld
lock
xchg
(bad)
dec
and
jp
test
push
fst
mov
xchg
js
popa
cld
in
mov
hlt
dec
sub
sub
inc
sbb
pop
test
daa
sbb
mov
mov
arpl
popa
out
or
shr
xor
xchg
ja
dec
adc
in
popa
adc
xchg
ja
mov
clc
out
dec
and
fwait
into
mov
jo
inc
or
dec
(bad)
push
icebp
xchg
out
inc
test
sub
mov
les
xchg
mov
test
rcr
stos
adc
jp
rol
cmp
xor
push
dec
mov
xchg
bnd
push
fdiv
out
sbb
shl
xchg
dec
fcmovne
imul
cmc
mov
jg
dec
test
cmc
test
jmp
push
cmp
sub
inc
retf
xchg
or
enter
ret
dec
xlat
(bad)
fbld
xchg
xor
imul
and
mov
cmp
in
iret
(bad)
hlt
cld
sti
mov
xor
out
xchg
jge
into
jp
(bad)
int3
jp
das
cld
popa
pop
adc
arpl
and
in
xor
mov
in
icebp
rol
cmp
aam
sub
jl
lahf
sub
fist
cmps
in
pop
inc
or
adc
jp
inc
jmp
(bad)
popfw
push
stos
sub
xchg
or
jmp
jo
into
fldcw
push
in
mov
sbb
xor
mov
sbb
fcomp
cmc
mov
hlt
loope
jge
pop
lods
jbe
xor
jl
test
push
cmp
out
push
add
or
xchg
les
int3
imul
adc
jmp
cmp
movs
or
xor
push
pop
mov
out
sahf
mov
aam
mov
mov
in
xor
into
mov
mov
pop
xor
sub
sub
xor
push
dec
ror
fadd
jmp
cdq
sub
pushf
nop
inc
push
mov
iret
lock
mov
push
stos
pop
movs
sub
xor
xchg
fst
pop
mov
sub
jnp
ror
pop
loope
lahf
out
outs
shl
fimul
pop
push
(bad)
das
pushf
push
xor
aaa
xor
leave
in
daa
sti
mov
adc
pop
mov
iret
bound
sbb
pop
mov
pop
sbb
cmps
and
and
lods
mov
push
js
out
mov
pushf
shl
mov
out
inc
fsubr
lahf
jl
loop
call
ret
and
push
mov
xchg
fsub
and
pop
mov
mov
out
cs
inc
xor
ror
ins
pop
jp
mov
jae
sub
out
(bad)
test
in
stc
and
test
lock
bound
fidivr
or
sub
adc
mov
jo
ret
fimul
jp
add
xor
push
loopne
cli
sahf
xlat
dec
fadd
pop
and
or
sbb
pop
pop
mov
xchg
sub
neg
cmp
mov
imul
fist
lds
mov
scas
loop
test
in
xchg
std
cmp
xchg
jmp
movntq
push
pop
xor
je
add
sub
cmp
adc
push
call
jo
retf
xchg
cmp
mov
movs
data16
out
xlat
(bad)
jle
xchg
cld
push
jecxz
and
repz
loope
test
sub
dec
push
dec
daa
mov
dec
ret
push
adc
adc
popa
mov
retf
pop
and
push
lea
aas
(bad)
xor
mov
inc
shr
sbb
ret
mov
cmp
mov
mov
loop
repnz
mov
or
dec
push
shr
sub
das
jo
lds
pop
lods
arpl
arpl
mov
push
out
je
retf
dec
cmp
xchg
enter
jno
(bad)
cdq
enter
test
xor
test
push
adc
push
test
pop
cmp
mov
addr16
adc
fnstsw
jb
xor
loopne
sub
stos
mov
gs
sbb
and
repnz
sbb
addr16
or
jno
xchg
test
jge
cmp
adc
add
inc
inc
dec
(bad)
sar
es
cwde
push
(bad)
icebp
jmp
adc
inc
mov
in
bound
xor
mov
add
fstp
push
ret
in
in
arpl
ds
mov
lahf
ss
xchg
mov
pop
jle
dec
or
imul
sub
in
fs
(bad)
pushf
sbb
ficom
jg
mov
dec
xor
mov
xor
add
leave
mov
sub
push
xor
mov
cdq
mov
add
sub
movs
push
enter
mov
iret
(bad)
and
retf
and
sub
scas
push
in
mov
mov
(bad)
(bad)
outs
add
pop
popa
jne
scas
add
cmp
sub
jnp
rol
lock
inc
aad
scas
outs
lods
pop
scas
out
shl
dec
loope
imul
mov
push
sbb
sbb
sbb
jle
push
icebp
bsf
outs
ret
out
pop
adc
inc
int
dec
retf
and
loop
(bad)
enter
dec
mov
mov
mov
adc
cmp
lea
jp
sub
jecxz
mov
daa
mov
inc
mov
(bad)
pop
add
arpl
in
mov
xchg
ret
fsubrp
icebp
jbe
inc
sub
xchg
stos
sub
(bad)
mov
jae
xor
mov
test
push
test
gs
jecxz
pop
add
pop
shr
(bad)
push
xchg
xchg
in
jbe
xchg
popa
loope
cmp
xchg
mov
sub
call
loope
fdivr
push
push
int3
sub
xor
or
xor
mov
dec
sbb
es
mov
imul
loope
xchg
add
clc
ins
popa
ds
xchg
ds
xor
retf
dec
jno
mov
pop
mov
and
mov
mov
pushf
adc
inc
ficomp
js
or
test
sub
xor
gs
jmp
push
das
lahf
adc
sbb
xchg
mov
ror
cmp
inc
and
dec
adc
xchg
and
mov
add
push
(bad)
sub
enter
inc
stc
adc
fcom
pusha
fisttp
shl
mov
xchg
mov
fld
addr16
push
(bad)
lock
mov
push
sub
pop
ret
adc
test
imul
and
and
xor
fadd
xchg
je
ins
call
sahf
rcr
and
div
arpl
data16
les
xchg
popf
out
scas
mov
add
leave
imul
mov
out
jecxz
test
xchg
outs
jne
mov
retf
cmp
mov
retf
add
ficomp
or
iret
aad
ret
dec
sar
(bad)
test
test
sub
jg
lods
inc
imul
pop
inc
jbe
mul
and
jb
xchg
mov
outs
leave
and
adc
push
ja
dec
and
cmps
pop
clc
add
pop
mov
push
jno
(bad)
cli
dec
push
in
xchg
neg
lock
jne
xlat
stc
lods
inc
add
push
jnp
push
push
bound
enter
cld
ret
out
loope
dec
jg
pusha
sbb
sti
lods
pop
pop
cmc
mov
es
ret
sub
xor
ins
out
push
ins
or
sub
jns
clc
cmps
xchg
scas
xor
push
jae
pop
stc
cdq
jnp
fcmovnb
imul
cmps
repnz
ret
cmp
pop
cmp
aaa
jns
push
push
js
and
jno
mov
mov
shl
dec
mov
inc
icebp
xor
mov
inc
sbb
pop
or
(bad)
jb
gs
push
xchg
loope
jnp
fidivr
adc
push
xchg
sub
mov
(bad)
add
push
js
xchg
fadd
cmp
(bad)
mov
outs
xor
outs
movs
push
jae
daa
test
fs
jns
xchg
loop
mov
xor
or
lahf
pop
and
adc
and
mov
mov
xchg
fs
mov
xor
xor
stos
cs
fdivr
imul
ss
cmps
mul
cmp
push
sbb
and
iret
dec
jmp
or
stos
mov
lahf
cmp
push
pop
jp
mov
cdq
mov
add
pop
adc
and
jmp
es
push
loopne
in
push
pop
cvttps2pi
(bad)
jbe
sub
test
jnp
pop
pop
pop
loopne
xor
adc
mul
cmp
adc
fwait
jnp
jae
and
mov
and
ins
push
into
arpl
jmp
test
xor
jmp
popf
aaa
inc
imul
inc
test
pop
sbb
cmp
mov
jae
stc
push
adc
mov
push
clc
mov
jp
sbb
in
cmp
jg
pushf
lahf
aas
lea
(bad)
mov
inc
aad
test
pop
in
in
iret
(bad)
lods
test
test
mov
sti
repnz
mov
(bad)
jge
add
jle
jmp
in
aas
aam
loop
add
mov
jmp
idiv
add
or
movs
mov
data16
loop
outs
lds
jns
lea
into
fdiv
and
jns
dec
push
aaa
mov
aam
outs
jecxz
outs
add
pop
xor
pop
mov
jo
je
mov
xchg
fimul
retf
jb
aad
shr
xchg
adc
enter
addr16
lahf
shl
int
lods
mov
push
(bad)
pushf
mov
add
push
aaa
jmp
mov
sti
jo
sbb
lock
sbb
loope
pop
adc
dec
pushf
sub
shr
pop
sbb
shl
out
cli
inc
mov
or
push
inc
inc
and
fimul
pop
and
inc
mov
inc
fwait
pop
xchg
mov
sub
cpuid
scas
mov
repz
mov
jns
or
sub
inc
or
cmp
mov
lods
adc
daa
cmp
sbb
push
out
cmp
and
enter
test
pop
aas
adc
aas
repz
out
ret
stc
shl
pop
pop
dec
shr
addr16
rcr
pop
nop
ja
pop
mov
and
popf
fst
or
jo
sbb
mov
push
adc
push
mov
ja
jno
jae
pop
sbb
out
ret
fsub
cmp
pop
xor
dec
push
mov
inc
xor
adc
sub
pop
xor
lods
push
adc
pop
mov
stos
cmp
repz
jae
or
lods
jg
test
jne
sahf
jb
dec
add
ja
push
jne
fistp
adc
jmp
inc
push
cmp
scas
or
jno
std
mov
mov
ins
jmp
sbb
ror
mov
xor
(bad)
xchg
and
sub
xchg
(bad)
pop
mov
push
xchg
and
pop
fstp
and
push
sbb
(bad)
retf
jbe
push
add
jg
add
stos
xor
shr
xchg
cli
int3
(bad)
in
or
add
dec
icebp
dec
mov
inc
add
jns
fbld
jmp
stos
adc
jle
icebp
pmulhw
outs
sbb
jle
add
imul
sbb
cmp
ret
pop
xor
movs
push
xor
ret
inc
enter
jno
xor
jg
push
mov
gs
std
dec
int3
mov
dec
mov
test
push
mov
mov
cmp
lods
adc
mov
in
std
mov
popf
sub
dec
and
sub
ror
fst
sbb
add
add
and
adc
or
jp
addr16
pop
ror
(bad)
adc
mov
cmp
jne
ss
cmp
sbb
pop
int
(bad)
loopne
out
imul
xchg
inc
rol
sub
dec
(bad)
xor
inc
das
adc
inc
sub
mov
fwait
lds
inc
aaa
sbb
mov
xchg
loope
pop
(bad)
dec
mov
clc
or
xchg
jmp
ins
cmp
sbb
push
pop
cdq
mov
sub
ins
daa
or
(bad)
repnz
inc
jb
jp
test
stos
jmp
mov
mov
mov
jae
pop
fisttp
inc
adc
push
adc
push
sub
or
mov
pop
push
pop
rol
js
fisttp
stos
or
sub
ja
test
sbb
movs
dec
mov
mov
mov
dec
and
ss
outs
stos
sub
add
add
test
retf
inc
lahf
pop
out
in
movs
xor
xor
shr
xchg
xchg
and
loopne
pop
sub
in
jmp
inc
leave
aam
sub
sub
fadd
inc
int3
jge
inc
mov
ja
lahf
(bad)
(bad)
popfw
out
cmp
loopne
les
repnz
jg
dec
pop
sub
inc
mov
repz
pushf
cmc
add
jne
loope
(bad)
fidivr
ins
dec
sub
xor
sub
(bad)
or
fild
imul
stc
nop
test
add
arpl
adc
ds
out
xchg
pop
inc
out
xor
push
mov
xchg
xor
sbb
mov
and
fadd
ss
loopne
out
sbb
(bad)
mov
inc
or
iret
ret
lods
mov
sahf
cmp
push
mov
pusha
movs
ins
mov
pop
ss
icebp
xor
ret
xchg
in
dec
jp
dec
dec
sub
push
ret
xor
pusha
sbb
xchg
mov
lea
(bad)
adc
jl
cdq
mov
call
rol
out
inc
and
outs
mov
sbb
mov
pop
xor
idiv
lock
cmp
xchg
data16
jmp
cmp
cmps
ret
aad
test
adc
scas
in
adc
rcl
xor
cmp
ror
dec
jp
addr16
loop
repz
inc
jns
bound
and
aas
and
mov
pop
(bad)
not
out
mov
sar
push
ins
jbe
ins
lock
jl
sbb
bound
shl
movs
shl
mov
lods
and
push
ret
ror
push
mov
mov
daa
pop
inc
inc
jno
fstp
sti
pop
push
jp
sub
repz
pushf
adc
jle
fbld
jl
adc
cmp
jo
das
test
xchg
xor
cdq
pop
adc
pop
fcom
push
mov
jno
push
out
push
les
add
push
pop
mov
xor
movs
jp
(bad)
push
adc
std
push
xor
cmp
lods
mov
and
xor
or
(bad)
ins
les
in
sahf
xchg
add
mov
inc
and
iret
jp
inc
aam
jno
stos
inc
xchg
aaa
loope
mov
cmps
adc
pop
sti
xor
lods
fsub
cmp
and
dec
in
(bad)
jp
adc
cmp
inc
xchg
sbb
imul
ffree
jmp
xchg
mov
js
stos
int
jecxz
ins
push
imul
mov
or
loop
pop
imul
(bad)
into
(bad)
dec
mov
es
or
sbb
pop
test
push
mov
inc
loop
fdiv
pop
jecxz
mov
fisttp
mov
fisttp
adc
repz
fcmovu
mov
mov
pop
mov
jg
in
and
ret
adc
ret
add
ja
loop
mov
(bad)
cmps
lea
jb
test
push
and
mov
add
lods
xor
ja
movs
dec
in
mov
xchg
int3
sub
sbb
mov
mov
mov
mov
pop
cmovg
stc
(bad)
lods
jl
and
xchg
cmc
imul
fnstenv
sar
mov
add
adc
push
popa
into
lea
mov
call
or
lds
adc
mov
gs
stos
jno
mov
xchg
stc
fistp
aad
add
or
push
hlt
and
sub
ss
lea
fimul
je
ret
sbb
int3
add
adc
sahf
lods
push
ret
xor
popf
loope
sub
inc
jmp
jo
shr
pop
xor
sbb
mov
ror
mov
and
test
push
push
fxch
jmp
mov
in
sub
sbb
pop
sahf
mov
test
sub
fsubr
pop
test
out
and
add
mov
mov
dec
sbb
pop
hlt
and
jl
and
add
xlat
adc
icebp
ins
mov
mov
mov
xchg
inc
out
fwait
in
xor
jl
mov
cmp
adc
push
pushf
adc
dec
popf
jg
cmp
fwait
xchg
sub
in
mov
mov
jl
pop
mov
mov
cwde
in
push
inc
lock
sahf
fcom
pushf
pop
in
fcomi
or
push
jb
retf
dec
fs
mov
call
mov
in
sbb
dec
lds
pop
jmp
cmp
int3
xor
call
xor
push
jmp
je
push
mov
pop
add
lds
push
lahf
aaa
cdq
push
cli
push
jae
push
jge
sbb
jns
out
imul
repz
cmp
mov
in
push
sbb
je
ja
mov
inc
jbe
sbb
cmp
mov
rcr
mov
into
or
test
sub
mov
mul
or
fsubp
jbe
popa
dec
xor
jo
jb
les
pop
lock
xchg
cs
(bad)
mov
out
fs
test
jecxz
(bad)
addr16
push
stos
ja
mov
fwait
dec
leave
loope
jle
sub
sbb
inc
or
les
pushf
push
cld
inc
int3
add
stos
push
fwait
shl
outs
inc
stc
(bad)
movs
cmp
ins
or
jp
repz
enter
data16
pop
nop
rol
sub
xor
cdq
icebp
pop
fwait
mov
addr16
setbe
mov
loope
bound
out
sub
sbb
imul
mov
mov
mov
retf
pop
cmps
xchg
(bad)
adc
scas
cs
in
mov
in
add
hlt
mov
jge
pop
mov
cmps
xlat
(bad)
pop
add
int3
and
fs
adc
push
xor
pop
fldcw
fxch
pop
lea
add
mov
xchg
(bad)
in
and
in
les
fdivr
test
sahf
and
retf
lds
int3
mov
pop
out
or
sahf
leave
sub
xor
mov
repnz
int
add
and
push
cmps
(bad)
movs
add
movs
imul
mov
(bad)
rcl
mov
mov
test
div
mov
cmp
add
les
aad
or
cmp
fdivrp
mov
push
or
pop
push
or
inc
jl
mov
sahf
mov
ja
xchg
dec
pop
mov
jge
mov
xor
enter
pop
xor
xor
pop
in
jl
mov
icebp
add
fisub
pop
xor
gs
jne
push
lds
arpl
lahf
push
(bad)
xor
push
push
aam
inc
data16
stc
loop
xchg
xor
mov
add
add
or
shl
jno
push
mov
jne
lea
(bad)
data16
lock
pop
popa
inc
aad
in
pop
push
pop
jp
popf
movs
sbb
jnp
sub
mov
fsubrp
add
cmp
mov
call
inc
out
jae
out
aas
sub
popa
(bad)
cmp
shl
bound
mov
in
mov
xchg
and
xor
popa
pop
retf
int3
xor
fnstsw
jb
(bad)
fiadd
stc
sbb
jmp
repnz
hlt
mov
mov
jns
rol
pop
sahf
aaa
out
xchg
aad
loop
mov
in
fnstsw
mov
je
test
inc
mov
jg
sbb
into
xor
or
stos
sbb
mov
push
retf
retf
xchg
movs
enter
lods
leave
cmp
rcr
aam
jg
xor
loopne
jne
aam
arpl
inc
hlt
neg
pop
mov
mov
jb
mov
sbb
mov
cld
xchg
push
das
xchg
inc
ins
rcl
cmp
push
stc
test
gs
imul
jno
push
int
push
mov
inc
xor
daa
outs
sbb
loop
fs
inc
dec
jnp
push
jne
retf
in
mov
pop
jnp
add
fldenv
imul
fild
stc
stos
scas
lahf
cmp
xor
mov
cmp
imul
mov
cmps
dec
sahf
or
inc
cmp
dec
push
int3
pop
inc
test
cmp
fidivr
lahf
mov
jns
and
mov
sbb
lea
loopne
mov
idiv
push
rcl
(bad)
mov
mov
mov
add
cmp
jmp
add
or
mov
(bad)
neg
pop
sub
xchg
adc
vmulps
inc
popa
arpl
call
cmps
jge
or
pop
jp
add
jmp
mov
jl
dec
sbb
mov
cmp
jb
inc
xor
es
imul
push
loope
fwait
mov
push
out
mov
hlt
ficomp
fnstenv
je
mov
outs
push
cmps
addr16
push
xchg
dec
movs
dec
in
lods
dec
movs
ds
pop
add
scas
daa
and
mov
(bad)
sar
loop
int3
xor
jo
lds
xor
or
jle
lods
iret
add
cwde
adc
call
inc
fdivr
jns
inc
inc
sbb
es
lods
jle
cmp
cdq
xor
das
lods
xlat
in
cmp
scas
test
ja
jecxz
and
pop
popf
or
cmps
repnz
hlt
cs
mov
rcl
lahf
push
sbb
aad
inc
gs
fninit
dec
inc
mov
sti
aad
loop
aas
addr16
push
inc
imul
lds
mov
out
pushf
pop
je
fisub
ja
(bad)
ror
inc
jmp
mov
dec
je
repz
aam
xor
in
test
pop
into
adc
mov
das
dec
mov
je
(bad)
inc
jno
int
mov
fistp
arpl
and
pusha
sar
loope
fistp
pop
ret
lods
xor
pop
outs
cmp
mov
dec
jns
aas
aam
loopne
pop
inc
cdq
fwait
dec
push
lea
pop
ficom
mov
pop
test
(bad)
push
(bad)
or
push
sub
mov
cmp
ins
ins
test
test
sub
inc
and
sub
enter
std
sahf
mov
mov
fcom
xor
out
stc
outs
jp
mov
xor
sbb
jne
inc
lea
sbb
pop
push
add
icebp
movs
sub
out
sbb
mov
push
cmps
adc
fs
stos
push
push
in
cs
lahf
sbb
xchg
push
sbb
std
push
dec
jg
(bad)
(bad)
pop
xchg
shr
mov
mov
or
sub
add
inc
xchg
sbb
xor
icebp
push
or
push
dec
jl
int3
(bad)
jo
mov
cmp
fidiv
push
xchg
fsubr
call
adc
xor
dec
push
ficomp
jl
sti
in
cdq
mov
daa
pop
cli
pop
inc
es
retf
add
adc
sub
add
mov
mov
mov
jmp
(bad)
fisttp
mov
lock
not
lods
scas
retf
ss
add
adc
cli
push
pop
xor
es
adc
gs
clc
jae
pop
fbld
push
add
push
mov
call
mov
(bad)
not
ror
(bad)
mov
aam
(bad)
xchg
xchg
pop
not
cmc
adc
and
std
ret
lea
cmp
push
div
push
and
inc
cwde
cmp
xchg
es
leave
scas
lods
pop
test
xor
cmp
test
aas
push
test
mov
xor
adc
or
inc
sub
mov
inc
mov
cli
icebp
cdq
sub
cmps
dec
dec
mov
inc
lea
les
sbb
mov
cmp
dec
cmp
retf
and
inc
xor
jg
pop
stos
cmp
xchg
inc
inc
cmp
mov
not
mov
inc
jp
cdq
mov
push
lods
sub
mov
add
movs
push
aam
outs
jae
pop
mov
xchg
outs
xchg
adc
or
dec
(bad)
sbb
xor
jnp
leave
jnp
clc
jnp
cmc
mov
mov
and
cmps
xchg
mov
fcmovbe
test
mov
mov
jl
aam
xor
imul
in
lods
xchg
push
mov
inc
adc
lock
addr16
mov
jl
mov
sub
sbb
lods
repz
xchg
jge
int
dec
jbe
mov
adc
loop
push
add
ins
retf
or
rcr
push
dec
push
pusha
(bad)
xlat
psubq
cmps
push
(bad)
sbb
out
pop
mov
push
pop
mov
push
cmp
shl
aam
pop
les
shl
add
mov
sbb
in
and
push
out
xor
cmp
hlt
cmp
push
fdiv
and
inc
(bad)
cwde
mov
lods
enter
repnz
call
into
loopne
push
xchg
mov
shl
push
jmp
sbb
pop
pop
add
popf
int3
or
sbb
mov
shl
out
lahf
outs
ins
adc
adc
pop
int
sub
movmskps
or
push
dec
sbb
test
cmp
jb
ds
xchg
fwait
mov
pop
and
push
inc
cmps
dec
adc
loop
hlt
cmp
pop
mov
(bad)
or
sahf
xchg
outs
sub
aaa
sbb
das
movs
iret
jb
mov
adc
fcomp
test
gs
push
(bad)
fdivp
clc
sub
sub
add
sahf
out
lea
or
mov
xchg
stos
int
sub
xchg
sahf
idiv
int3
leave
retf
xor
into
cs
inc
jge
mov
pop
cmp
mov
sbb
mov
or
mov
inc
cwde
or
scas
lock
cmp
dec
leave
xchg
mov
mov
dec
cmp
push
sub
mov
stos
push
sar
fwait
test
add
push
rcl
add
push
mov
call
gs
mov
sub
int3
xchg
add
sub
dec
enter
fadd
jne
adc
in
lds
cwde
cli
push
xchg
xor
inc
push
enter
outs
add
push
push
call
jmp
add
sub
fsub
fs
sub
fstp
sub
lods
pop
push
dec
and
enter
jae
rcr
inc
lds
mov
sahf
dec
test
adc
xor
es
dec
popa
adc
scas
or
rol
(bad)
and
xor
adc
ret
push
adc
xchg
add
ror
outs
test
addr16
adc
loopne
adc
or
stos
int3
xor
sbb
pop
or
xchg
mov
lds
mov
sbb
pop
enter
into
mov
inc
dec
pop
push
ja
aas
and
jmp
in
sti
xchg
es
outs
mov
xchg
pusha
xorps
test
add
cmp
cdq
and
lock
(bad)
mov
jae
leave
out
sub
ds
dec
stos
jl
not
sub
dec
ret
daa
dec
dec
fs
add
xchg
sbb
cs
fs
mov
jnp
mov
out
fdivrp
xchg
stc
(bad)
out
(bad)
cmps
ret
ret
enter
sub
leave
sbb
repnz
out
sahf
add
iret
std
test
test
push
clc
mov
mov
mov
addr16
(bad)
div
add
into
lds
mov
cmps
fdivr
mov
mov
mov
test
aas
fisub
clc
pop
imul
jno
(bad)
mov
mov
fcmovbe
popa
stos
push
addr16
add
and
xchg
xor
add
into
out
pop
mov
jmp
sbb
xchg
push
pop
mov
jnp
pop
xchg
in
in
bound
loop
mov
xor
and
lahf
mov
add
adc
test
dec
and
push
mov
mov
(bad)
(bad)
fldenv
xor
in
retf
adc
fdiv
dec
cdq
arpl
mov
inc
(bad)
jno
ins
jge
and
add
jg
mov
(bad)
xchg
push
test
addr16
dec
arpl
mov
inc
mov
inc
retf
dec
gs
inc
and
clc
daa
lods
movs
mov
in
mov
pusha
stc
mov
les
adc
cmp
add
sbb
add
pop
test
sbb
mov
add
xlat
movs
push
mov
loop
sbb
pop
add
pushf
mov
push
pop
fwait
out
daa
adc
mov
fist
pop
pop
out
pop
xchg
pop
push
sti
popa
call
sbb
clc
movs
dec
jmp
popf
retf
inc
inc
scas
push
int
mov
mov
cmp
fisubr
jp
adc
add
and
mov
outs
retf
rol
mov
sbb
jns
or
test
pop
mov
data16
repz
jnp
push
pop
pusha
pushf
enter
pop
push
mov
cmc
fcmove
and
cmp
push
es
rol
ret
stos
push
xchg
jbe
call
pop
push
mov
outs
fwait
dec
pop
dec
stos
jb
loope
inc
retf
sub
sbb
cmp
cmp
fdiv
scas
lds
cmc
mul
push
arpl
pop
mov
xchg
int
sahf
dec
adc
fwait
sub
enter
push
xor
cld
push
aaa
hlt
push
cmp
jnp
lds
lods
adc
push
aas
sar
adc
or
dec
movs
out
dec
rep
and
lea
shl
dec
jae
nop
pop
out
push
cmps
xchg
fdivp
push
lahf
jle
xchg
xlat
dec
dec
adc
call
mov
jne
hlt
push
dec
xchg
stos
pop
int
pop
push
aaa
mov
in
adc
das
cmp
test
sar
mov
push
mov
shr
fsubr
mov
jmp
scas
ins
lds
adc
push
jg
sub
mul
retf
scas
shl
or
push
mov
test
xchg
or
aas
sub
pop
call
pop
or
pop
fisttp
mov
push
mov
jb
jmp
cmp
ins
add
and
cmp
cmp
xchg
call
stos
sub
js
dec
pop
out
rep
jge
fdivrp
sub
mov
nop
fmul
sub
ror
out
out
push
test
loope
mov
rcl
movlps
adc
xchg
jnp
(bad)
int
cmps
in
xor
sahf
ins
mov
pushf
repz
lahf
mov
jne
ds
xchg
je
sub
jo
iret
push
in
push
pop
adc
xor
and
pushf
fiadd
push
loopne
movs
add
jno
das
pop
repz
inc
in
out
jbe
cmp
jne
mov
(bad)
lods
inc
in
mov
mov
in
cs
aad
sub
jb
xchg
pop
hlt
aas
cdq
xor
test
or
push
and
cli
mov
imul
jae
push
(bad)
cmc
repz
push
pushf
adc
fnstenv
fistp
sbb
cmp
test
inc
pop
rol
inc
xor
push
and
push
jns
xchg
push
jecxz
test
sub
daa
add
daa
xchg
test
test
fild
push
nop
leave
jne
inc
icebp
xchg
call
outs
xchg
stos
jnp
inc
fidiv
cmp
cmps
xor
nop
or
cmp
push
push
cmp
std
ror
sub
lahf
pop
push
xor
jbe
push
push
push
dec
in
fnstsw
popa
and
dec
mov
push
xor
jb
rol
cmp
sbb
jmp
pop
jmp
or
(bad)
(bad)
and
sar
shl
fabs
pop
fsubrp
lods
repnz
jp
sub
fmul
dec
mov
js
addr16
fcmovnbe
adc
xlat
pop
or
jmp
fild
ins
ret
(bad)
mov
pop
or
adc
retf
pop
dec
mov
in
push
es
inc
push
sbb
(bad)
jne
gs
cli
(bad)
mov
cdq
sbb
jp
dec
mov
sti
ins
repnz
cmp
sub
sbb
dec
das
pop
popf
mov
mov
dec
not
cmp
cmps
mov
and
push
popf
mov
mov
les
inc
outs
mov
out
xchg
sahf
jg
lea
add
xchg
in
test
aam
inc
imul
cwde
ret
cmp
dec
jmp
out
add
xor
iret
jge
mov
jae
retf
pop
out
inc
xchg
mov
cs
rcr
in
add
mov
aam
mov
test
call
adc
(bad)
rol
es
repz
arpl
(bad)
sub
test
out
fsubp
inc
or
outs
xchg
cmp
jge
jecxz
jno
rol
into
cmp
pop
rcl
mov
loop
fisubr
aam
push
xchg
out
ins
xchg
adc
jge
adc
push
fistp
fwait
ss
jbe
pop
int3
jb
scas
sub
nop
test
cmp
and
(bad)
mov
jnp
std
in
pop
gs
mov
in
das
push
mov
jp
(bad)
xchg
das
xchg
add
jecxz
retf
test
repnz
mov
test
sbb
arpl
mov
aas
and
add
dec
out
shl
xchg
outs
push
outs
std
repz
aaa
ja
cmp
or
enter
pop
push
cmp
add
(bad)
retf
leave
xacquire
fild
inc
dec
sbb
xchg
shr
and
dec
ja
sub
xor
dec
cmp
scas
add
pop
daa
and
jl
add
adc
test
add
out
movs
into
mov
iretw
jmp
and
sbb
sbb
sbb
mov
shl
adc
push
sub
ja
and
or
mul
mov
cmp
rol
aad
loope
push
mov
sbb
push
cmp
sbb
adc
and
mov
movs
dec
xlat
test
aaa
cwde
xchg
sahf
hlt
stc
and
les
jecxz
mov
out
jno
mov
pop
mov
mov
push
mov
hlt
neg
or
xlat
mov
ror
in
and
es
and
fsubr
mov
jecxz
imul
xor
mov
pop
jmp
add
push
lods
test
les
(bad)
push
cmp
or
and
sub
cmps
sbb
sti
es
push
xchg
jecxz
in
sar
shl
outs
sub
icebp
std
mov
fisttp
sub
jmp
stos
add
mov
jne
or
mov
(bad)
in
jmp
push
dec
jl
push
lock
(bad)
mov
adc
or
scas
ss
loopne
aaa
mov
imul
in
mov
mov
cmp
out
push
retf
or
stc
dec
push
dec
rol
sub
or
mov
lods
fidiv
mov
and
(bad)
ss
sbb
inc
jmp
jl
iret
inc
mov
adc
push
popf
sahf
jb
mov
call
scas
cmc
inc
fsubr
jb
add
imul
sub
pop
movs
lods
popa
or
call
inc
mov
mov
outs
push
or
das
fsubrp
or
pop
int
(bad)
repz
adc
inc
sbb
push
inc
ret
sub
mov
xchg
das
retf
iret
ret
mov
jge
fwait
scas
aam
hlt
dec
mov
shl
hlt
(bad)
out
in
sbb
xor
test
or
adc
test
pop
aas
(bad)
jo
or
leave
push
loopne
push
pop
(bad)
stc
jmp
out
std
push
sbb
rcr
mov
add
jae
add
cmp
rol
stos
dec
stc
xor
dec
dec
adc
pop
mov
scas
fadd
js
pop
dec
jge
loopne
je
or
cmps
cld
lods
mov
popf
jnp
popa
push
(bad)
ins
pop
jecxz
out
retf
mov
inc
cwde
repz
scas
mov
addr16
mov
aas
jle
sub
mov
icebp
je
pop
popf
cmps
pop
jge
aas
jge
add
or
in
pushf
push
lds
sub
ret
add
fisub
push
adc
push
mov
mov
mov
jnp
jb
ret
into
and
mov
mov
dec
dec
(bad)
bound
sahf
stos
dec
in
and
repz
sbb
or
adc
ja
imul
lock
aam
push
lahf
or
or
xchg
(bad)
sbb
jb
loopne
lock
push
movs
mov
sub
nop
sub
mov
and
sub
sub
lock
pop
lods
mov
mov
imul
xor
into
outs
iret
xor
(bad)
aaa
cmc
and
push
inc
ss
test
cmp
ins
ins
fimul
pusha
enter
push
movs
inc
or
mov
dec
out
(bad)
push
arpl
xor
ja
shl
rcr
cmp
or
push
fcom
std
jns
pop
or
js
cli
iret
scas
cmp
xchg
mov
retf
ds
call
xor
pop
int3
jae
jne
cmp
pop
pushw
test
mov
cmp
adc
cmc
push
xchg
pop
cld
xchg
mov
adc
ret
movs
and
fimul
js
jo
fcomp
stc
scas
ficom
mov
shr
pop
mov
shr
ret
shr
fld
jo
shl
pop
(bad)
and
sbb
std
push
ins
scas
and
aad
sub
mov
cdq
xchg
loopne
dec
push
and
ret
xor
xor
cld
retf
push
dec
retf
stos
mov
scas
add
sahf
sub
or
mov
int3
and
mov
adc
aam
stc
or
call
jecxz
push
ins
dec
push
int3
or
sub
cmps
movs
ins
imul
dec
ins
xor
or
mov
mov
rcl
inc
and
test
add
cmps
bound
dec
(bad)
sbb
adc
sbb
shr
mov
or
add
test
frstor
add
mov
pop
test
sar
cmp
xchg
fdiv
lahf
fisttp
mov
mov
fdivr
outs
jl
jp
stos
add
fistp
aas
fs
or
push
stos
fldcw
add
int
jle
push
sub
in
mov
sub
push
lock
jmp
mov
into
adc
pop
or
stos
test
bound
arpl
and
lock
fild
out
retf
sti
fxch
xchg
lods
or
imul
stc
or
xor
sbb
mov
cdq
cmp
imul
jb
xor
test
popa
inc
push
push
adc
cld
idiv
outs
shr
cdq
and
ret
cmp
adc
mov
int
div
push
nop
push
stc
lahf
and
mov
les
jle
adc
cmps
mov
fdiv
xchg
fiadd
push
push
xchg
(bad)
dec
scas
adc
push
push
lds
jl
pop
adc
mov
push
(bad)
or
es
jp
popf
pop
pop
(bad)
adc
fdivr
mov
mov
and
mov
int3
pop
inc
sti
ss
sub
call
mov
arpl
lods
mov
mov
adc
cmp
ins
pop
scas
cmp
ds
scas
iret
jb
mov
(bad)
lods
dec
push
outs
dec
mov
test
fild
cwde
pop
aam
or
mov
mov
or
cwde
mov
sub
icebp
adc
push
xchg
dec
and
xchg
js
dec
fnsave
lar
and
jb
mov
jno
sbb
dec
mov
shl
xacquire
xchg
inc
into
(bad)
jno
daa
aas
mov
test
ficomp
or
popf
popa
adc
adc
sbb
ins
cli
adc
mov
pop
inc
ret
xchg
aaa
and
add
sti
push
dec
out
add
arpl
shl
pop
imul
jae
scas
or
dec
inc
ja
dec
xchg
jbe
scas
inc
lds
popa
xor
xchg
sahf
mov
and
fdivr
fwait
push
mov
push
cmps
mov
(bad)
fdiv
mov
and
(bad)
cmp
call
out
repnz
out
js
or
push
(bad)
aam
stc
jmp
out
jb
aad
xchg
xor
jg
ds
cmc
mov
jnp
or
(bad)
mov
xlat
jo
ss
out
adc
cmp
adc
push
push
ds
push
xor
mov
jg
lods
jp
cmps
das
push
cwde
jnp
inc
jmp
fdiv
mov
xor
mov
xchg
in
xor
adc
les
repnz
ret
cmp
sub
push
test
es
cwde
jle
mov
fadd
or
stos
inc
cmp
dec
mov
in
or
pop
shl
bound
and
movs
pop
popa
push
or
jge
pop
xor
cmp
test
in
xor
iret
mov
pop
loope
addr16
pop
out
mov
mov
ds
int
cmp
and
out
mov
jo
lds
lahf
std
into
rcl
sub
jle
fistp
sbb
out
cwde
adc
imul
fdivrp
out
jae
cmp
je
xchg
scas
lods
push
ins
aam
imul
movs
xor
les
cmc
test
scas
cmps
aaa
scas
dec
les
or
mov
sbb
fwait
inc
test
(bad)
lea
mov
fisttp
push
push
mov
(bad)
out
out
test
ja
out
clc
or
mov
mov
in
mov
ss
clc
ret
jo
pop
pop
mov
fwait
adc
pusha
shl
in
sub
inc
sub
movs
push
out
gs
xchg
xchg
push
and
popf
retf
push
test
jmp
outs
fsubr
ret
jmp
pop
shl
movs
data16
xor
ficom
pop
hlt
xchg
test
xchg
sahf
dec
dec
pop
div
test
cs
sub
popa
push
mov
popa
xchg
xchg
and
mov
adc
hlt
dec
push
cmp
pop
cmps
cmps
and
std
test
adc
mov
cwde
mov
ins
mov
mov
xchg
pop
repz
mov
adc
(bad)
pop
loop
pop
hlt
jl
xchg
out
std
data16
mov
add
scas
icebp
hlt
push
mov
adc
inc
mov
retf
and
pusha
aad
jns
imul
sahf
sub
mov
jle
adc
pop
push
int3
mov
mov
mov
xlat
push
movs
add
fwait
nop
push
fidiv
aas
mov
outs
sti
add
inc
sbb
lods
sar
add
push
inc
sahf
(bad)
pushf
mov
(bad)
xchg
and
pop
out
movs
movs
(bad)
ja
leave
repnz
ficom
push
mov
aam
sub
push
ja
add
jno
movs
mov
cmps
jns
retf
xor
cmps
adc
add
rol
dec
inc
jge
dec
(bad)
mov
cmp
js
into
jb
cli
test
cmps
out
loop
into
cmp
inc
dec
stc
int3
sbb
dec
nop
push
sbb
sub
dec
inc
pop
pop
pop
call
fstp
clc
pop
jl
xchg
ds
in
div
and
or
or
adc
or
out
lds
mov
or
lock
mov
outs
mov
repnz
xchg
mov
aaa
call
fmul
in
dec
les
mov
int3
dec
daa
in
(bad)
(bad)
pushf
push
movs
das
pop
mov
jae
sbb
gs
pop
xchg
scas
outs
test
push
jne
mov
adc
pop
mov
sub
jbe
cs
mov
sbb
into
lahf
add
and
repz
cmp
and
bound
shl
sahf
std
in
adc
xchg
fbld
fisttp
int
in
cmp
(bad)
in
xor
pop
dec
and
pushf
test
push
cmp
dec
fnstenv
clc
xor
mov
jge
sti
adc
or
loopne
mov
inc
sbb
sub
mov
std
adc
inc
fisubr
dec
cli
ror
pop
push
mov
aam
inc
fistp
pop
xchg
inc
or
dec
dec
(bad)
call
sbb
js
dec
jbe
push
mov
mov
iret
inc
sbb
xor
pusha
stos
cmp
and
push
mov
sar
xchg
or
jmp
sbb
icebp
jmp
cmps
es
aaa
push
hlt
or
int3
push
popa
cld
push
ja
adc
cmp
je
add
sub
cwde
sub
push
imul
mov
mov
sbb
or
cwde
pop
enter
inc
jns
sbb
cld
xor
fdivr
push
sub
jg
lds
mov
cmp
pop
ss
gs
push
fidivr
sahf
xor
cmc
(bad)
dec
sbb
lods
int
sahf
mov
jne
add
test
dec
aas
packuswb
push
scas
pop
fdiv
gs
push
adc
out
ror
and
mov
fdivr
ret
dec
mov
inc
ret
xchg
add
cdq
rol
dec
out
sub
push
pop
outs
arpl
push
std
in
adc
rcl
push
vpsllw
jmp
in
adc
cdq
retf
retf
rol
mov
aas
arpl
aas
sbb
clc
or
das
mov
xchg
mov
dec
nop
repz
inc
ret
jge
inc
fwait
xchg
cmp
or
inc
in
xor
mov
push
es
jg
xchg
mov
or
jmp
sub
push
int
scas
adc
ja
add
sar
cmp
mov
mov
pop
sbb
and
sbb
mov
shl
dec
inc
int
call
mov
inc
lock
ja
aas
lock
shl
mov
xor
mov
push
xor
ins
xor
xor
xchg
cmps
mov
xor
movs
push
sub
adc
sub
lods
mov
out
xor
popa
push
(bad)
imul
(bad)
pop
clc
popa
push
push
lods
cmps
repnz
loope
cmp
sbb
retf
jg
data16
inc
test
cmps
repnz
push
loop
jmp
ffreep
popf
daa
js
sub
add
ror
cmp
jg
(bad)
in
jmp
sub
sar
jb
(bad)
rol
addr16
or
xchg
ror
push
or
and
add
mov
sub
dec
adc
fsub
addr16
pop
mov
jp
mov
dec
ja
pop
sbb
loop
inc
aad
call
mov
or
shr
xor
out
int3
inc
fisttp
xor
xchg
pop
cmps
add
mov
in
faddp
adc
mov
dec
cmc
mov
shl
xchg
push
mov
scas
in
pop
(bad)
dec
fldcw
ja
cdq
fist
sub
pop
cld
lds
jg
(bad)
stc
lock
aad
pop
ret
xor
ins
cs
ror
cmp
(bad)
out
stos
fsubr
and
sahf
dec
dec
push
xor
pop
arpl
int3
push
jle
jno
sub
aas
(bad)
pop
lods
and
mov
cmp
retf
sbb
push
xor
sub
dec
mov
fs
ins
or
push
ja
clc
test
aaa
and
sahf
sbb
into
xor
lahf
mov
push
loopne
fwait
sbb
loope
jle
push
pop
test
inc
rcr
stos
dec
call
xchg
xor
xchg
mov
in
and
jbe
enter
mov
hlt
mov
in
dec
pop
movs
movq
and
jnp
stos
cmps
jbe
ins
cld
sub
clc
ror
xchg
fcom
or
push
hlt
xchg
and
cmp
xchg
xor
dec
ins
bound
push
loop
lds
imul
xchg
ds
jmp
jl
add
imul
rol
ret
mov
sbb
sar
sub
pop
popw
cmp
dec
imul
popf
xor
mov
int
jns
xor
or
movs
jecxz
cmp
xchg
aam
pop
xchg
sar
sub
out
xchg
sub
xlat
idiv
sub
mov
les
pop
sti
fwait
imul
or
xor
inc
js
cwde
ss
jecxz
rcl
or
mov
xchg
xchg
cmp
add
pushf
aam
mov
jno
dec
push
inc
push
jnp
cmp
and
inc
stc
jnp
jle
shl
dec
icebp
fiadd
mov
inc
jl
movs
jo
(bad)
fdivr
mov
xchg
mov
jb
imul
cmp
inc
cld
xor
dec
(bad)
pop
popf
mov
cmc
adc
xor
test
loopne
fnstcw
pop
fisttp
sbb
je
test
jmp
sub
mov
mov
cmp
pop
inc
adc
jno
add
add
(bad)
fwait
call
xchg
jmp
push
or
mov
test
add
data16
int
sbb
loope
fistp
(bad)
nop
call
xchg
outs
and
or
(bad)
sbb
cmp
push
sti
stos
cmp
enter
(bad)
dec
mov
cmp
and
stos
mov
pop
jecxz
mov
rcl
push
into
rcr
jno
jmp
out
lahf
push
push
in
cmp
cmp
xchg
call
push
adc
imul
stos
jo
add
adc
(bad)
pop
pop
xchg
(bad)
mov
test
cld
cmc
dec
lahf
or
fidivr
ret
ret
or
pop
or
jmp
add
adc
in
dec
adc
jns
call
push
retf
addr16
into
stos
adc
into
js
cmc
and
and
ret
hlt
dec
add
lods
or
call
sti
inc
and
and
mov
mov
dec
fbstp
pop
fcomp
pop
mov
ret
(bad)
dec
pop
dec
pop
in
cmp
adc
jns
test
popa
fnstcw
mov
cld
ja
out
mov
push
jnp
aas
xor
out
and
jae
repz
or
arpl
outs
inc
ins
jb
mov
(bad)
out
(bad)
clc
mov
jno
les
cld
pop
cdq
jmp
lahf
push
arpl
jno
adc
das
sbb
push
push
xchg
pop
sub
les
add
addr16
pop
pop
add
dec
jl
mov
test
inc
call
jbe
mov
cmp
shl
xchg
outs
enter
mov
push
sub
pusha
cmp
push
shl
out
inc
in
dec
mul
jae
jb
xchg
jmp
sbb
or
dec
add
pop
cmp
xor
jge
imul
inc
ins
ror
fsubr
jmp
pop
mov
shr
mov
sbb
mov
or
add
repnz
je
nop
jo
pop
mov
outs
inc
sbb
mov
(bad)
fsubr
mov
test
loopne
adc
push
inc
rcr
adc
in
jmp
(bad)
jecxz
lock
imul
jno
xchg
dec
addr16
sbb
cmc
xor
xor
stos
pop
aad
push
cli
aas
into
das
ja
movs
popf
cld
jnp
jns
mov
or
xor
leave
shl
sub
scas
xor
mov
mov
push
test
push
or
aaa
and
div
xchg
dec
scas
pop
pop
jo
ror
push
(bad)
retf
cmp
sub
not
inc
mov
mov
movs
jae
lods
inc
dec
sub
jle
in
mov
and
in
ficomp
jp
mov
ret
add
fwait
sub
jg
leave
pop
xchg
mov
mov
push
mov
mov
push
push
mov
ins
and
pop
test
ins
push
ret
or
out
mov
(bad)
push
dec
int3
dec
push
rcl
or
cmp
addr16
inc
stos
sub
lahf
(bad)
push
add
mov
mov
mov
or
push
outs
adc
js
cmp
and
and
sub
(bad)
mov
(bad)
das
addr16
loop
add
xchg
mov
jbe
and
mov
jg
mov
mov
xchg
adc
pop
fcmovu
je
mov
in
pop
inc
sub
or
xor
ins
inc
ror
pop
iret
fsubr
das
push
xlat
dec
icebp
or
popa
les
sbb
fldcw
mov
cmp
hlt
mov
xor
inc
outs
repz
xchg
mov
in
sub
push
pop
dec
scas
push
adc
arpl
push
mov
pusha
fist
mov
daa
push
sub
stos
cmp
and
scas
and
and
cmp
test
pop
test
(bad)
jb
fwait
mov
cld
out
mov
addr16
xchg
push
cmp
push
mov
mov
out
outs
cmp
icebp
xchg
sub
mov
scas
sbb
xchg
imul
sub
lods
lock
xor
sub
es
push
xor
loopne
cdq
fdivr
xor
in
sub
(bad)
sub
movs
call
test
cmps
mov
add
cmc
mov
jl
imul
pop
sbb
cwde
add
imul
fild
sub
push
xchg
push
std
inc
and
add
push
jmp
add
adc
shl
inc
adc
test
aaa
cmc
in
push
cmps
cld
repnz
jmp
adc
(bad)
(bad)
pop
(bad)
nop
loop
shr
push
pushf
(bad)
outs
inc
sbb
sub
iret
ficom
push
enter
addr16
cdq
pop
push
cmp
push
cld
sub
jmp
fdivr
fisubr
and
stos
call
dec
in
in
iretw
push
sbb
stos
icebp
lods
lods
add
call
sub
cmp
xor
mov
dec
(bad)
jmp
add
leave
into
xchg
out
fld
fwait
sub
repz
inc
dec
outs
lahf
cmc
or
es
ins
adc
or
mov
mov
xor
sub
or
imul
ret
cmps
dec
and
in
inc
addr16
inc
jbe
or
push
inc
fcmovu
popa
mov
dec
push
xor
aad
fstp
cmp
sbb
sbb
addr16
out
add
cmp
sbb
inc
lahf
scas
mov
mov
sub
mov
push
ficom
mov
mov
push
xchg
loopne
jmp
outs
mov
jle
jg
es
imul
cwde
jge
aam
leave
mov
jnp
stc
mov
cs
jle
arpl
(bad)
push
out
cwde
dec
rol
mov
push
mov
pop
dec
lds
and
or
(bad)
fisttp
stos
shl
inc
lods
movs
arpl
movs
jbe
jmp
mov
adc
lds
inc
ficom
adc
call
xchg
(bad)
imul
and
scas
push
sbb
xor
mov
ins
test
xchg
push
les
mov
mov
leave
mov
bnd
js
xchg
sbb
xlat
cdq
mov
sar
xlat
pop
jae
mov
clc
xor
cmc
add
sub
popa
inc
fsub
adc
arpl
jo
xchg
clc
fcomp
mov
fs
push
loop
inc
inc
cmps
push
dec
or
dec
mov
lds
adc
addr16
sub
(bad)
cdq
loope
lea
inc
stos
sub
ins
mov
loopne
mov
lock
pop
icebp
and
mov
shr
ror
mov
fs
xor
out
push
not
or
retf
and
test
pop
test
dec
mov
lods
in
dec
add
pop
xchg
js
pop
or
jg
xchg
ret
inc
ja
shl
jmp
cmc
aam
cmp
(bad)
call
retf
fldcw
enter
fsubr
aad
retf
jecxz
mov
out
sbb
add
dec
push
mov
sub
sahf
lods
lock
ins
mov
push
inc
dec
call
sbb
gs
mov
iret
mov
icebp
pop
lahf
and
dec
mov
dec
adc
mov
add
mov
shl
mov
mov
retf
out
out
(bad)
xor
inc
mov
and
mov
sbb
es
cmp
hlt
dec
nop
add
mov
push
and
mov
pop
pop
call
or
inc
stc
inc
mov
fbld
retf
sbb
fsubr
in
sbb
jns
in
ret
jae
mov
sbb
inc
add
xchg
test
ffree
int3
imul
neg
sbb
pop
sub
sbb
sub
and
rdtsc
mov
pop
mov
mov
repnz
fwait
ret
enter
add
and
sbb
xchg
dec
ror
mul
lock
cld
call
add
push
frstor
ret
jecxz
fs
cld
mov
sbb
pop
jge
in
bound
hlt
sbb
pop
fidiv
xor
jmp
rol
test
cmp
and
lock
leave
push
mov
and
mov
daa
(bad)
(bad)
or
fld
std
sub
fdivrp
jo
pop
push
sbb
inc
mov
push
arpl
fs
in
ret
xchg
in
fisttp
jmp
aad
(bad)
jle
bound
mov
pop
leave
aam
or
leave
jae
push
cld
inc
call
and
int
add
mov
aam
push
adc
xchg
adc
aas
add
retf
in
pop
mov
jne
dec
mov
sti
inc
inc
iret
sub
nop
add
loope
test
jnp
xchg
add
out
mov
inc
cmp
mov
test
cmps
push
cmp
mov
sub
xor
aaa
ret
cmps
fst
call
cmp
mov
popa
push
add
xor
pop
jnp
cmp
ret
(bad)
lods
dec
sar
cwde
retf
cmp
arpl
or
cmp
sar
ret
fisub
or
stos
sub
aad
cmc
lahf
cmps
lahf
sbb
mov
aam
int3
xor
mov
dec
inc
gs
dec
stos
addr16
retf
jo
repz
lock
mov
or
cmp
pusha
cmp
and
scas
cwde
fmul
cmp
dec
scas
outs
(bad)
xor
push
xchg
sbb
dec
inc
das
mov
(bad)
mov
push
mov
je
and
test
sbb
xlat
mov
aas
neg
jle
dec
pop
jl
mov
data16
hlt
mov
in
loope
rcl
ret
add
fwait
bnd
push
xchg
stos
mov
fimul
xchg
shl
push
add
jmp
enter
xchg
xchg
and
and
dec
add
(bad)
aas
ficomp
adc
bound
mov
mov
mov
ins
xchg
fadd
cs
or
mov
imul
ficomp
adc
lods
xlat
nop
ja
cwde
or
rcr
fistp
or
sub
fsubrp
aas
fscale
jno
shl
mov
mov
mov
push
mov
int
push
shr
jp
add
sbb
aad
leave
ja
mov
pop
pop
xchg
mov
scas
test
or
lea
or
icebp
and
inc
jo
inc
ror
mov
nop
mov
push
mov
leave
loop
xor
loopne
xor
aaa
mov
fsubr
cmp
or
xor
jmp
push
dec
imul
mov
or
test
out
or
sub
mov
add
aad
not
add
mov
fcmovne
js
xor
jns
repz
sbb
sbb
xor
pop
push
xchg
adc
clc
stos
push
pop
pop
addr16
mov
gs
jge
push
mov
xchg
sbb
xor
fisub
push
dec
xor
xchg
cmp
xor
outs
mov
ds
test
dec
cmp
mul
sub
sti
imul
inc
dec
dec
mov
rcr
(bad)
sbb
cli
xchg
in
cmp
pop
jmp
fnstsw
aaa
scas
jecxz
aad
sub
(bad)
jmp
sbb
xor
sahf
call
popa
or
mov
inc
mov
test
mov
cmp
push
lock
jl
mov
or
adc
inc
jmp
sar
jg
inc
push
pop
je
or
shr
push
shl
stos
fdiv
or
outs
icebp
jl
sbb
xchg
jmp
push
js
sbb
add
pop
add
jge
mov
aas
lock
push
jg
push
aas
out
gs
push
jmp
xchg
aad
in
inc
sbb
je
inc
std
push
fst
pusha
fcmovu
mov
dec
sub
enter
push
nop
jl
inc
gs
daa
gs
in
fst
and
nop
int
dec
xchg
mov
je
fs
fimul
jmp
(bad)
sub
add
xor
mov
sbb
jp
xor
adc
stos
or
sub
int3
xchg
std
xor
inc
mov
aad
leave
cwde
dec
jb
int
mov
out
push
stc
mov
mov
mov
mov
mov
repz
jne
add
jo
lahf
shl
aad
push
push
ds
mov
imul
dec
in
nop
aaa
sub
bound
mov
and
jmp
add
loop
xchg
xlat
sbb
fisttp
test
in
lahf
sub
jne
sbb
fsubr
pop
cmp
loopne
repz
pop
enter
adc
xchg
(bad)
push
(bad)
sub
in
lock
call
sub
cmp
cwde
(bad)
stos
mov
jle
or
mov
cwde
popa
cmps
lods
lea
pop
into
sbb
xor
shl
inc
fst
push
sub
lds
inc
ror
in
stc
mov
stc
adc
mov
jo
cld
cmp
push
jecxz
mov
packssdw
mov
enter
push
les
mov
add
hlt
inc
in
sti
jmp
lods
adc
outs
stc
mov
jae
mov
enter
(bad)
ins
mov
lods
clc
or
in
lahf
xor
fist
lods
clc
inc
clc
(bad)
jnp
add
call
arpl
push
ins
sbb
xchg
pusha
clc
xchg
sbb
mov
test
arpl
mov
test
out
lods
aaa
(bad)
ror
xchg
pushf
or
leave
sub
mov
ret
mov
xor
mov
ret
aaa
jo
cmp
adc
or
push
and
cwde
shr
xchg
ja
mov
inc
xor
ret
and
in
test
enter
scas
into
outs
js
cmp
ss
cmp
fst
js
mov
cmps
mov
mov
and
xchg
or
imul
es
xchg
mov
inc
cmp
fist
(bad)
cmp
push
ret
gs
das
bound
cld
jmp
cmps
movs
push
sbb
jp
xor
fisubr
mov
pop
add
stos
neg
popa
xchg
sbb
in
test
clc
daa
shl
xchg
cmp
lock
dec
xlat
dec
stos
or
push
mov
addr16
jmp
jg
mov
dec
cmps
jg
ds
mov
mov
cli
aaa
xchg
stos
lods
and
sub
in
push
movs
test
mov
dec
mov
addr16
jge
cmc
stc
dec
cmps
fldenv
jb
push
fsubr
dec
mov
inc
out
mov
adc
leave
fldcw
test
jne
and
je
lahf
inc
cmps
data16
add
mov
sbb
add
push
lods
dec
sbb
call
jno
stos
dec
and
fmul
cmp
dec
ins
push
xchg
pop
icebp
xor
mov
jmp
xchg
or
inc
hlt
cmp
or
push
test
mov
or
in
out
ins
call
cmps
fisttp
push
or
fidiv
push
push
mov
(bad)
(bad)
clc
lods
jg
mov
xchg
dec
rcl
dec
(bad)
lds
add
mov
movs
fist
cmp
out
jo
push
add
sub
and
push
dec
sbb
lea
cmovb
jns
jge
mov
pop
push
repz
adc
je
push
xchg
adc
mov
sar
sub
js
scas
data16
fist
pop
adc
cmp
jle
add
or
dec
push
repz
or
popa
and
add
xchg
inc
imul
pop
mov
and
push
scas
loop
in
xor
adc
bound
ins
addr16
out
pop
sahf
out
or
loope
inc
sub
sbb
and
inc
xchg
mov
dec
push
jp
adc
hlt
leave
lods
icebp
inc
scas
hlt
scas
xchg
pushf
xchg
arpl
in
sbb
pop
inc
jmp
inc
add
loope
jne
and
in
dec
jb
gs
adc
dec
or
sub
repnz
jns
jmp
xlat
inc
arpl
jae
and
add
add
icebp
js
(bad)
fld
dec
mov
xchg
add
ds
mov
(bad)
and
jmp
test
mov
adc
sahf
mov
out
jecxz
rcr
aad
cmp
pop
adc
or
stc
jmp
push
inc
push
sub
fistp
ficomp
inc
(bad)
nop
ins
fldenv
ins
adc
xchg
push
mov
sub
mov
cs
ins
mov
cmp
rol
inc
mov
or
add
jle
adc
aas
mov
in
pop
sbb
xor
sahf
xor
popa
mov
and
jge
repnz
jl
cmp
fbld
pop
ds
mov
pop
mov
sbb
imul
lods
add
push
or
pop
out
xor
aaa
push
adc
adc
sbb
jl
jge
mov
xchg
mov
cmp
imul
in
mov
es
cmps
jae
xchg
jecxz
inc
add
mov
stc
push
imul
xchg
mov
shl
sti
rcl
test
call
inc
inc
retf
cdq
jae
icebp
call
or
mov
retf
dec
(bad)
out
pop
sbb
mov
push
in
inc
mov
scas
fcom
(bad)
jmp
lea
push
or
jmp
add
fucomip
scas
mov
sbb
ret
ror
or
mov
icebp
cmp
adc
fisub
jo
adc
cld
iret
cmc
enter
cdq
(bad)
ss
push
jg
in
xchg
das
pop
sbb
mov
int
dec
pop
mov
int
sahf
iret
fcmovne
jnp
sbb
mov
push
jle
push
fbld
xor
push
popa
push
pusha
out
xor
imul
push
dec
ss
sti
(bad)
pop
dec
add
jae
pop
or
out
xor
inc
jno
jmp
popf
add
aad
mov
popa
lods
dec
sbb
mov
push
fisubr
stos
in
push
jne
xchg
sub
cmp
scas
add
push
cmp
and
mov
cmp
icebp
dec
fs
mov
inc
cmp
or
or
mov
cmovns
xchg
lods
jnp
push
mov
lea
cmp
jo
xor
xchg
xor
out
(bad)
cmp
push
cmps
mov
jecxz
jl
fidiv
call
loopne
ins
push
(bad)
les
mov
sbb
repnz
push
out
into
fist
jnp
test
jmp
xor
mov
lahf
js
call
inc
push
push
fild
adc
mov
loopne
cld
(bad)
cmps
cli
div
cmps
sbb
lods
movs
pop
sub
ret
clc
adc
add
push
jne
mov
fucomi
in
pop
cs
mov
pop
pop
mov
push
in
xor
xchg
cmp
leave
and
xchg
push
movs
clc
sbb
pop
loopne
out
fst
aas
out
add
sub
xor
mov
and
cs
lods
loopne
and
lahf
aaa
sbb
cmp
repz
pop
jmp
cld
xor
xchg
dec
inc
imul
or
pusha
pop
pop
fst
ror
pop
or
repnz
xor
adc
das
loop
in
and
mov
in
mov
movs
jae
cmp
jle
test
sub
push
lds
inc
and
das
cs
mov
dec
test
and
jg
add
and
inc
inc
cs
dec
sbb
out
and
jmp
xchg
cmp
js
imul
es
sub
iret
loopne
xchg
push
rol
jle
repz
pop
cmps
pop
out
dec
xlat
lods
loop
test
les
jnp
in
stos
imul
or
daa
or
jecxz
cmp
pop
or
fisub
mov
add
(bad)
call
jl
loop
push
icebp
jbe
jno
and
or
mov
push
cmp
fimul
cmps
adc
lahf
pop
jle
scas
and
inc
pop
mov
jecxz
mov
jge
stos
lock
inc
sbb
pop
mov
xchg
sub
and
std
fistp
scas
xor
mov
mov
sti
xchg
das
(bad)
xchg
aam
je
xchg
cwde
and
in
stos
adc
gs
dec
sub
pop
mov
lahf
xor
ja
popf
mov
xor
mov
daa
dec
jg
(bad)
mov
cmp
retf
loopne
add
mov
jl
jle
sub
outs
sti
(bad)
retf
adc
fsubr
aas
xchg
sbb
test
or
cwde
das
(bad)
daa
movs
das
nop
mov
loop
mov
sub
jbe
xor
add
inc
fisubr
mov
imul
out
aad
div
sti
jmp
rcl
pop
das
mov
ror
jg
ins
rcl
popa
(bad)
cmp
sar
ja
aaa
mov
dec
into
inc
dec
cmp
mov
(bad)
xor
stos
(bad)
out
dec
cmc
adc
inc
std
std
mov
xchg
lods
hlt
lea
cmps
xor
mov
test
jecxz
jno
lods
inc
mov
add
(bad)
out
xor
xchg
aad
xor
mov
imul
jne
and
js
pop
stos
or
cli
mov
mov
mov
or
xchg
pushf
sbb
ret
xchg
mov
test
push
xor
inc
xor
inc
and
sbb
into
mov
icebp
movs
in
fs
sbb
loope
test
add
icebp
cmp
gs
cld
scas
mov
and
outs
sbb
hlt
push
jle
lods
lea
adc
adc
cmp
popa
jl
dec
xchg
or
mov
xchg
lock
test
rcl
imul
sbb
sbb
shl
sub
mov
mov
mov
gs
ja
icebp
shl
popa
gs
dec
jp
imul
call
or
fisub
pop
mov
(bad)
out
das
and
cli
pushf
mov
jae
jl
bnd
jno
js
iret
daa
mov
sub
test
or
nop/reserved
mov
shl
mov
clc
popa
leave
mov
enter
jmp
mov
clc
cwde
je
lods
ins
jl
bound
not
stos
sbb
(bad)
arpl
neg
lds
push
jae
pop
push
lock
sub
fmulp
jbe
jnp
push
mov
add
lock
jae
mov
pusha
sub
test
sub
mov
and
push
gs
pusha
pushf
fcom
cwde
repnz
pmaxub
loope
sub
xchg
idiv
fcmovbe
sbb
or
jne
adc
push
mov
mov
fldenv
cmc
fst
jo
mov
in
pop
mov
or
out
arpl
retf
or
add
rcl
aam
dec
or
push
mov
aaa
cmps
adc
cmp
jae
cmps
push
mov
jb
push
sbb
in
inc
(bad)
test
test
arpl
mov
xchg
jnp
and
xchg
imul
mov
fwait
sbb
hlt
cmp
pop
jnp
fwait
mov
or
pop
add
loope
jbe
jb
ins
test
stos
add
or
jno
test
and
push
sbb
push
xor
add
push
jmp
neg
cmp
adc
mov
xchg
jge
pop
retf
imul
fbstp
fst
xor
sbb
cwde
ja
jno
mov
stos
in
das
popa
outs
sbb
jae
push
xor
sub
cmp
push
lods
ins
jno
lds
call
mov
push
pop
add
mov
test
(bad)
adc
(bad)
or
and
int3
stos
in
js
shl
dec
js
add
loop
inc
mov
cli
xchg
sahf
pushf
push
adc
sub
push
pop
loopne
mov
mov
loope
xor
add
jne
push
sbb
adc
movs
gs
jmp
rol
mov
add
jno
in
cmp
jo
and
je
xor
gs
test
aad
jecxz
mov
or
dec
push
add
mov
data16
jg
or
call
in
dec
rcl
dec
push
movs
hlt
fcomp
arpl
jae
sbb
(bad)
je
mov
gs
dec
add
shr
sub
es
push
in
scas
and
sbb
xlat
ss
mov
loope
and
xchg
div
add
xchg
jg
out
dec
call
(bad)
retf
pop
je
xchg
xchg
add
and
retf
cmp
sub
xchg
mov
inc
adc
push
and
ins
popf
mov
xor
push
jle
mov
push
mov
(bad)
out
mov
bnd
cmps
sbb
sub
adc
xchg
lods
cdq
add
cmp
cmp
lods
mov
adc
or
dec
inc
mov
addr16
or
jle
xor
into
inc
mov
inc
jmp
les
cwde
mul
imul
xchg
inc
mov
jb
sbb
fwait
pop
push
clc
aam
imul
sar
popa
out
cli
cld
repnz
push
inc
fs
mov
add
imul
dec
movs
mov
jle
xchg
sbb
mov
loopne
adc
sbb
xchg
push
(bad)
pop
enter
(bad)
pop
add
xchg
jge
xchg
lahf
not
das
mov
out
pop
retf
ja
ret
hlt
xor
dec
or
adc
dec
sub
inc
test
aas
xchg
mov
adc
inc
aad
add
int3
out
push
sub
cmp
repnz
loop
cmps
xlat
pop
fisttp
repz
fadd
and
fisub
and
mov
sbb
rcr
inc
mov
adc
fcomp
addr16
ret
and
add
and
hlt
ret
(bad)
sub
push
pop
mov
mov
mov
(bad)
jno
lods
or
xchg
cmp
xchg
addr16
or
sub
shr
jg
imul
inc
(bad)
adc
ret
jb
sbb
mov
movs
rol
fs
add
xor
mov
inc
ret
out
jle
xor
xchg
push
inc
sub
jle
sbb
jae
repnz
mov
sub
js
shl
(bad)
loope
scas
addr16
js
mov
call
xchg
push
adc
push
in
in
pop
inc
or
call
ficom
or
pop
jl
sub
scas
adc
jbe
xor
lock
or
jbe
ds
outs
inc
mov
xchg
inc
(bad)
cmps
cmp
iret
int
mov
arpl
mov
lahf
sar
push
aad
cli
or
lds
scas
sub
mov
repnz
movs
inc
scas
retf
jne
pushf
lea
int
and
inc
hlt
jle
clc
xor
call
pop
dec
nop
in
out
push
sbb
dec
mov
mov
fldenv
cdq
mov
inc
jae
sti
fwait
mov
(bad)
mov
clc
out
outs
lea
or
push
cmp
mov
lahf
test
rcr
dec
popa
inc
(bad)
div
fs
test
push
push
jge
out
jns
mov
adc
push
lahf
and
loop
js
dec
mov
add
(bad)
mov
mov
daa
jbe
out
sbb
adc
adc
aad
ja
and
or
cmp
ins
mov
pop
jo
xchg
imul
repz
push
ins
nop
daa
stos
cwde
add
(bad)
mov
push
jge
bndldx
js
sbb
jmp
mov
cli
fnstcw
lahf
fdivrp
imul
add
retf
fwait
mov
ja
dec
mov
lahf
outs
or
repz
pop
retf
fcmove
fild
sub
xchg
mov
mov
jae
fidiv
and
pusha
mov
cmp
jecxz
scas
in
ds
(bad)
jg
cmp
push
mov
mov
fistp
dec
adc
or
scas
xchg
add
movs
dec
js
stc
in
or
test
cwde
jne
jle
nop
(bad)
pop
ds
xor
pop
mov
lds
loope
imul
jmp
mov
jns
dec
fistp
ror
inc
dec
(bad)
cmp
mov
or
ss
imul
push
inc
mov
add
cmps
test
add
mov
push
adc
bnd
stos
jbe
jnp
fisubr
pop
nop
push
mov
(bad)
dec
dec
pop
inc
int3
xchg
pop
fwait
out
jns
int
inc
in
(bad)
jp
xor
loope
into
jmp
cmp
adc
add
jle
mov
test
pusha
jo
sub
add
xchg
xor
mov
jb
test
fsubr
stc
je
dec
arpl
test
cmp
pop
enter
cmc
xor
(bad)
sub
cli
cli
stos
sbb
je
out
in
push
nop
or
push
mov
(bad)
retf
dec
or
add
add
ss
mov
mov
mov
xor
aaa
mov
jmp
add
test
inc
add
movs
mov
sub
sti
inc
or
clc
pop
xlat
adc
data16
cmc
push
mov
sbb
adc
cld
test
push
dec
adc
loope
and
jb
int3
cmp
bndstx
ret
inc
mov
push
fnstenv
mov
and
sbb
add
mov
inc
lods
xlat
mov
push
stos
xor
sbb
ds
and
ds
clc
dec
lahf
jnp
out
dec
int3
rol
fcom
push
popa
es
lods
les
push
pop
adc
push
xchg
loop
popf
loop
cmps
jle
outs
leave
shr
mov
and
(bad)
jbe
sti
ss
imul
mov
xor
sbb
pop
jecxz
shrd
or
scas
mov
push
jl
shl
jle
enter
and
sbb
xor
arpl
lds
fimul
stos
jmp
fiadd
mov
or
imul
xchg
retf
cwde
xlat
and
in
repnz
aaa
outs
gs
mov
in
aaa
sub
add
and
cmp
jb
adc
jbe
mov
xor
cmp
call
pop
and
add
pop
ins
mov
cmp
sti
adc
fwait
loope
dec
ins
iret
inc
pushf
mov
jns
test
xchg
cmp
jl
int
mov
mov
shl
imul
pop
test
cmp
repz
mov
sbb
dec
dec
adc
shl
xchg
popf
test
retf
mov
push
jo
pop
add
cmp
fbstp
jg
adc
into
push
jmp
gs
fld
mov
mov
inc
jb
fisttp
push
jb
dec
push
adc
mov
ins
cmps
dec
sub
not
fs
scas
pop
xor
add
adc
xor
test
jae
ds
push
push
stc
or
bound
data16
pop
jge
fild
aas
fstp
fucomi
push
jo
jmp
ret
add
jmp
and
ja
xchg
adc
aam
loop
or
loope
cmp
pop
idiv
out
bound
add
add
mov
sub
adc
xor
leave
(bad)
retf
outs
xor
(bad)
mov
xchg
jmp
xor
cmp
loop
sbb
mov
loope
jno
pop
scas
jecxz
retf
xor
dec
fs
je
shl
popf
jge
(bad)
pop
repnz
dec
lahf
mov
pop
(bad)
ss
mov
not
(bad)
in
repz
test
add
cmp
or
fld
add
sahf
fwait
outs
es
out
sbb
in
push
cdq
aad
add
fidivr
dec
aam
sbb
fdivrp
daa
cmp
jmp
daa
sbb
es
mov
(bad)
aaa
inc
test
call
fstp
fdivrp
push
retf
dec
ins
retf
(bad)
xlat
dec
jl
cmps
out
xchg
in
test
and
cmp
shl
mov
leave
je
scas
pop
sbb
bound
cmps
movs
add
jno
jb
jo
pop
leave
movs
xchg
test
and
cmp
mov
ss
pop
loope
ja
mov
daa
sub
and
or
rcr
je
dec
jmp
sub
mov
xchg
push
sbb
out
ret
sbb
loop
pusha
sub
push
(bad)
xchg
ins
(bad)
nop
jne
mov
mov
mov
test
ss
imul
mov
mov
rol
dec
and
dec
pop
push
out
sbb
add
in
mov
int
test
push
outs
scas
dec
hlt
jmp
rcr
test
imul
dec
inc
push
fist
dec
fadd
xchg
ret
retf
jb
leave
cmp
ret
clc
add
xor
mov
add
ret
or
loope
inc
cmps
xchg
icebp
sbb
xlat
call
mov
mov
dec
jae
fisub
int
jle
in
lods
push
inc
mov
mov
iret
jl
xchg
(bad)
cmps
xor
xlat
pop
hlt
jnp
loopne
fisubr
jno
dec
in
cs
cmp
sub
and
mov
in
int3
daa
jmp
call
add
add
lea
inc
pop
ret
cmc
outs
and
shl
fwait
add
dec
mov
shl
icebp
mov
cmp
pop
test
fwait
scas
dec
add
or
mov
jae
out
lods
(bad)
adc
jl
jp
clc
test
fsubr
add
mov
call
jmp
test
imul
mov
and
out
and
rcl
(bad)
stc
mov
and
push
popa
add
jns
xor
jecxz
xor
inc
test
xchg
loopne
bound
jnp
sti
push
inc
out
lock
adc
pop
add
cmp
or
imul
add
xor
(bad)
lods
lods
rcr
(bad)
(bad)
aaa
rcr
push
jmp
fnstsw
int3
(bad)
ins
arpl
mov
idiv
pop
(bad)
lds
and
adc
enter
fsubr
cmp
outs
or
fisttp
jmp
mov
stos
mov
test
push
repnz
lahf
ret
rcl
pop
xchg
cmp
add
call
or
test
in
mov
push
mov
and
mul
sahf
cmp
xor
(bad)
pop
cld
xor
aam
shl
ds
test
add
bound
mov
xchg
inc
sbb
psubsw
cld
mov
xchg
push
xor
sub
loop
(bad)
enter
mov
out
adc
pop
jns
push
pushf
mov
inc
and
add
xor
cmp
aam
test
mov
mov
outs
js
sub
shl
rcl
and
push
adc
out
movs
mov
in
mov
cmps
pusha
cmp
mov
or
inc
xor
dec
sbb
mov
lock
xchg
test
mov
cmp
stos
aad
mov
call
dec
stos
std
fwait
mov
mov
fs
test
mov
xor
int3
sub
sti
test
gs
cwde
lahf
cdq
das
mov
in
ret
int3
mov
xchg
ss
cmp
mov
push
dec
fild
stc
retf
sahf
inc
retf
sub
movs
or
mov
add
retf
in
imul
adc
push
ror
adc
or
sub
int
xchg
sahf
sub
rol
inc
nop
gs
rcl
fsubr
cs
jne
jecxz
arpl
test
fld
cmp
rcl
pop
mov
xchg
cmp
mov
movs
sub
push
push
cmp
test
gs
add
test
stos
and
inc
ins
int
mov
and
add
mov
int3
stos
sbb
nop
jle
jmp
dec
and
inc
test
sbb
iret
retf
fcmovb
mov
dec
mov
pop
or
add
jae
sub
sub
mov
xchg
or
js
inc
sbb
mov
dec
(bad)
jae
or
jg
mov
out
mov
dec
inc
sahf
sub
xchg
xor
gs
sub
dec
pop
cmps
and
popf
pop
mov
mov
or
jmp
ret
popa
xor
and
cld
(bad)
mov
repz
mov
jo
sub
add
clc
xor
sbb
cli
gs
mov
shl
sti
jns
pop
add
add
ins
sahf
push
dec
pop
mov
lea
sbb
dec
xor
inc
pop
hlt
scas
add
cmp
dec
pusha
mov
fiadd
repnz
movs
ret
loope
add
adc
push
inc
sti
jno
add
loop
push
stos
fdivr
cmps
sub
fistp
inc
cmc
xchg
outs
sub
popa
dec
pop
xchg
add
nop
hlt
xchg
call
lahf
push
clc
cwde
in
push
xor
frstor
ret
jne
mov
sbb
pushf
movs
jg
imul
xchg
push
les
push
dec
pop
adc
shl
test
sub
enter
pop
adc
push
inc
and
mov
int3
jns
cwde
jae
mov
cwde
shl
add
dec
popf
imul
lock
adc
mov
mov
daa
add
mov
ja
aaa
ja
ret
mov
ds
mov
mov
pop
sbb
add
(bad)
out
(bad)
or
cmp
dec
xchg
cmp
arpl
xor
and
xor
into
adc
test
es
pop
in
xchg
imul
inc
inc
mov
xchg
mov
push
mul
sub
xchg
cmp
sub
cmps
push
out
xor
or
inc
add
xor
lds
fstp
aas
call
and
icebp
mov
cmp
sub
fisubr
std
push
ja
mov
cmp
fistp
aaa
and
mov
mov
outs
clc
jmp
mov
push
push
adc
rcr
arpl
cmp
mov
or
popf
sub
sub
(bad)
xor
mov
mov
mov
cwde
mov
shl
add
jge
cmps
push
xchg
mov
xlat
pop
fstp
xchg
mov
xor
leave
mov
dec
ficomp
jno
fwait
js
cmp
cmp
xchg
call
cmp
idiv
lods
xor
jmp
loop
pop
mov
xchg
push
stos
mov
arpl
loope
push
neg
pushf
mov
rcl
add
inc
test
mov
cmp
icebp
mov
addr16
mov
cmp
push
in
gs
lock
daa
add
in
movs
outs
imul
ss
add
ins
movs
(bad)
aas
(bad)
arpl
outs
mov
cmp
iret
gs
outs
mov
movs
inc
std
enter
scas
shl
dec
and
vpmulhuw
out
mov
sub
xor
jg
add
pop
pop
mov
outs
or
pop
mov
or
or
out
js
gs
test
mov
jp
loope
jge
jmp
mov
or
fisub
adc
add
stc
xchg
dec
fdiv
cwde
sub
inc
cmp
inc
nop
mov
xchg
adc
out
rol
xchg
retf
pop
pusha
stos
jmp
dec
mov
cmc
xor
mov
and
imul
xchg
out
mov
movs
mov
mov
outs
cs
sbb
jno
push
rcl
cmp
jns
xchg
outs
gs
std
sub
out
pop
loopne
pop
leave
sbb
mov
mov
lods
movs
repz
repnz
outs
test
ins
sti
cmp
adc
je
sbb
aaa
dec
pop
out
sbb
or
addr16
add
lds
jge
rcr
push
clc
ffreep
repnz
inc
hlt
cld
sub
je
mov
adc
test
jbe
push
push
mov
das
push
cwde
push
inc
shl
out
push
pop
mov
adc
(bad)
push
sub
mov
hlt
pop
in
sbb
into
outs
repnz
sub
sub
add
fidiv
mov
out
mov
mov
gs
(bad)
fisttp
inc
enter
test
push
sti
aas
ficomp
mov
enter
or
adc
(bad)
out
push
lods
jne
sar
push
xor
jno
add
ficomp
lahf
in
shr
sbb
cld
add
shl
mov
jns
arpl
js
push
dec
dec
mov
mov
out
xchg
dec
mov
test
aaa
pop
je
sbb
jecxz
xor
adc
pop
pop
adc
or
push
xlat
cmp
or
mov
xor
mov
iret
jmp
mov
push
inc
add
cli
arpl
shr
adc
pop
and
lea
(bad)
jecxz
dec
popf
fs
outs
or
mov
out
mov
(bad)
cmps
jbe
mov
mov
mov
shl
adc
fsubr
and
sub
xlat
pop
icebp
ins
pop
popa
cmps
dec
cwde
cdq
aaa
mov
xor
ins
cmp
call
ins
and
lods
iret
bound
mov
es
jl
call
xlat
cli
out
movq
ds
xor
or
dec
jmp
inc
aas
inc
fwait
sub
and
push
int
(bad)
aad
js
jmp
xor
pop
or
cmp
stos
sbb
fs
jnp
mov
inc
mov
(bad)
sahf
sub
xlat
jnp
fisub
cmp
imul
jbe
scas
adc
mov
mov
imul
mov
imul
std
sbb
cli
xchg
stos
test
push
call
sti
cmp
fistp
mov
cs
jmp
push
mov
addr16
in
xchg
pop
pop
outs
fsubr
aad
retf
mov
add
ret
mov
or
lds
bound
push
jl
pop
pop
push
mov
outs
xor
and
popf
in
or
int
(bad)
mul
call
cmc
inc
pushf
and
jecxz
aas
jg
push
mov
inc
xchg
rol
leave
popa
pop
je
cdq
bound
or
and
jl
int
call
pop
(bad)
add
mov
mov
cmp
mov
xchg
jmp
xchg
(bad)
jmp
add
bound
sti
jno
adc
inc
push
call
out
jp
lds
je
or
std
cmps
cmp
and
and
ret
mov
call
jns
or
cs
(bad)
mov
pop
stos
mov
or
push
retf
lods
pop
dec
loop
jb
(bad)
sub
jmp
add
jnp
(bad)
mov
movs
test
in
xchg
sahf
shr
xchg
clc
push
test
or
pushf
adc
fwait
stos
cdq
or
mov
iret
fs
ds
sahf
mov
cld
out
add
ror
add
push
fdivp
xor
mov
inc
cmc
out
rcr
ins
(bad)
inc
xor
lods
sub
mov
xor
xchg
mov
movs
jne
mov
mov
mov
inc
jl
pop
ss
movs
loop
iret
fwait
push
(bad)
icebp
adc
das
sbb
cmps
jmp
sub
test
push
pop
mov
pop
and
test
loopne
loopne
mov
inc
sahf
pusha
lea
scas
lods
inc
xchg
mov
in
push
mov
fmul
cmp
popf
xor
mov
frstpm(287
inc
pop
fsub
or
xchg
int
inc
into
sbb
inc
jne
mov
sub
adc
inc
movs
mov
dec
mov
or
out
test
imul
retf
pop
popf
push
lods
cmp
push
and
cmp
in
xchg
out
(bad)
sbb
inc
pop
stos
scas
xor
ja
test
sub
xor
(bad)
inc
shr
xchg
mov
inc
jnp
adc
fild
adc
jb
push
pop
fidivr
in
jae
lods
mov
sti
cs
mov
fisub
lds
pop
aas
mov
(bad)
lods
mov
or
xor
cli
in
xchg
and
test
out
jno
fimul
push
loopne
ret
loope
push
cmp
test
jbe
sbb
sbb
jmp
pusha
xchg
push
test
out
mov
mov
daa
jmp
pop
jbe
sub
lea
sub
add
adc
arpl
sti
push
call
push
(bad)
and
jns
and
fisttp
or
bound
pushf
mov
std
xlat
scas
aad
push
jbe
jmp
inc
icebp
gs
sub
sar
std
mov
xor
mov
push
mov
repz
fwait
jae
in
mov
fdivr
push
test
aad
inc
xor
mov
ins
push
jecxz
outs
cmps
stos
jnp
mov
call
cld
daa
cmps
push
sbb
mov
test
call
in
push
into
inc
inc
jo
push
mov
pop
or
mov
dec
inc
mov
and
dec
pop
mov
add
imul
cmp
mov
inc
in
mov
and
jecxz
add
or
test
cmp
jo
sbb
sbb
pop
xchg
std
mov
mov
pop
push
scas
pop
in
sub
enter
mov
je
push
popf
push
dec
bound
mov
neg
ins
ins
sbb
repnz
sbb
pop
cli
jl
icebp
mov
xchg
in
out
mov
and
mov
fild
xor
push
lea
sub
cli
push
outs
or
sub
iret
sub
mov
xchg
cwde
dec
pop
shr
inc
dec
adc
and
jbe
je
mov
cmps
jmp
inc
aas
aas
sbb
fnsave
imul
prefetchwt1
fimul
ret
pop
ja
out
(bad)
sub
sbb
cli
sub
cmp
add
into
dec
leave
pop
mov
pop
jnp
push
push
xchg
or
sbb
add
shr
fs
xchg
(bad)
repnz
adc
push
aas
push
xchg
lahf
dec
or
rol
sbb
data16
mov
sahf
or
loope
jnp
nop
push
out
cmp
hlt
mov
cwde
cmp
lods
test
jbe
std
lods
dec
repz
adc
popf
int3
xor
icebp
je
cmp
retf
and
mov
stos
add
sub
nop
jg
xchg
dec
xchg
sub
cmp
mov
pop
(bad)
leave
loope
inc
or
jecxz
add
xchg
inc
(bad)
mov
add
(bad)
and
cmp
fcmovnbe
mov
(bad)
jecxz
js
and
aaa
pushf
and
xchg
movs
ror
mov
sub
xor
aad
cdq
data16
dec
sahf
movs
(bad)
dec
cld
mov
mov
inc
es
push
rol
inc
jecxz
pop
sbb
int
ds
mov
scas
xchg
ja
int3
dec
mov
inc
mov
sub
es
mov
sub
pop
xchg
je
popf
iret
jge
and
sub
mov
push
inc
mov
scas
mov
cs
and
cli
xchg
leave
in
add
xchg
in
loopne
push
in
out
push
movs
int3
cwde
push
inc
(bad)
ins
push
shl
icebp
sbb
das
add
fild
loope
cmps
ds
ins
sbb
adc
ja
dec
dec
jl
fcomp
jp
push
push
jo
pop
push
jno
iret
hlt
into
movs
pop
inc
push
inc
sub
lds
movs
jp
es
cwde
inc
mov
popa
cwde
aad
stos
xor
pop
add
adc
fs
xchg
in
iret
pop
xchg
adc
pop
pop
push
les
(bad)
int3
xor
int
push
mov
test
fwait
out
or
pop
or
cmp
lea
xor
push
inc
arpl
loope
and
inc
pop
call
xor
dec
xor
pop
jl
cmc
mov
cmp
popf
sbb
in
sub
lods
gs
inc
in
jg
push
sbb
jmp
mov
in
aam
xchg
sti
movs
mov
push
jb
bound
(bad)
push
test
cwde
jmp
jne
fild
int3
jnp
ins
sub
btr
sub
ja
mov
push
inc
retf
jmp
add
mov
(bad)
and
fsub
jmp
mov
ins
lods
mov
test
movs
or
sahf
jle
pop
pop
ficomp
lahf
push
xchg
mov
dec
jge
imul
jmp
dec
fidiv
daa
inc
imul
jb
cmp
in
rol
mov
mov
fisubr
stos
in
add
dec
lea
stc
rcr
sbb
lea
cmp
(bad)
and
xchg
lods
cmps
imul
mov
jg
push
mov
or
mov
leave
jno
popf
mov
inc
test
cdq
sbb
ins
pop
int
xor
inc
popa
xor
push
std
ins
jns
stc
and
movs
outs
dec
and
adc
ja
mov
ds
sbb
movs
jg
aaa
das
int
(bad)
mov
pop
loop
pop
sub
leave
cmp
cmp
cwde
inc
int3
(bad)
mov
mov
and
pop
repnz
aad
mov
mov
ins
sub
xor
xchg
fldcw
outs
push
xchg
xchg
mov
cld
xchg
(bad)
stc
sub
out
or
cwde
enter
clc
and
push
ja
inc
jnp
mov
and
push
stos
fwait
mov
add
push
sbb
clc
xchg
xor
out
mov
sti
std
mov
ins
pop
xchg
lea
enter
je
inc
ins
imul
cwde
inc
aad
push
jmpw
pushf
call
out
adc
repnz
fiadd
push
mov
scas
adc
mov
sub
div
inc
jbe
cmp
sub
scas
aam
rol
add
jp
cdq
add
push
repz
rcl
push
test
aaa
fdivr
sub
test
push
(bad)
enter
js
out
imul
ds
adc
dec
sbb
and
int3
idiv
enter
xlat
inc
cmp
rol
dec
jmp
sbb
push
pop
loopne
rol
and
sbb
dec
fwait
pop
cmp
push
or
popa
popa
sahf
fmul
sbb
iret
jno
call
push
xchg
push
pop
outs
lds
sbb
push
mov
out
jo
aaa
cmp
movs
shr
mov
push
pusha
rcr
(bad)
aaa
test
xor
loope
jo
in
push
test
mov
push
into
cmp
stc
test
in
mov
scas
fstp
mov
aam
test
sub
sahf
dec
fnstcw
ds
cmp
loopne
inc
fadd
inc
cmc
(bad)
lods
stos
in
xor
stos
aas
push
add
sbb
movs
push
cmp
push
imul
fdivp
out
test
sbb
jle
jne
pusha
stos
push
test
pusha
sahf
xor
push
mov
test
sbb
or
dec
adc
lods
inc
ret
sub
jmp
std
adc
or
cmp
or
daa
fnstcw
fst
xor
test
movs
xlat
fisub
lahf
inc
inc
int
pop
scas
cwde
add
add
sub
rol
outs
mov
in
sub
xchg
inc
lahf
push
jnp
inc
dec
jp
movs
inc
(bad)
lock
sbb
mov
fstp
and
jp
push
or
pop
xchg
dec
loop
js
faddp
aam
push
jnp
scas
jno
adc
inc
cmp
pop
jg
push
aaa
popf
push
xchg
cmp
stc
cs
test
retf
mov
cld
leave
not
mov
leave
dec
inc
out
and
pusha
pop
icebp
scas
bnd
sub
sub
inc
jb
cmp
mov
inc
or
xor
inc
in
mov
loop
loopne
dec
mov
jecxz
enter
cli
aad
and
cmp
xchg
hlt
mov
das
shl
xor
jg
(bad)
sub
rol
lods
sub
loope
sbb
dec
daa
fimul
dec
sar
into
jbe
rcr
cmp
nop
mov
test
sar
cmp
and
push
mov
cmp
jns
push
dec
test
imul
sbb
mov
inc
leave
rcl
sahf
imul
sub
out
cmps
xchg
push
mov
out
popa
sub
int
das
mov
aaa
sub
and
jg
push
pop
inc
mov
mov
shl
mov
movs
sub
push
adc
sbb
loope
loop
popa
loope
inc
mov
js
sub
jp
mov
push
jl
or
repnz
mov
pop
rcl
jle
mov
cld
in
shl
xchg
in
mov
shl
ss
or
and
pop
mov
mov
bound
clc
popa
sbb
cmp
out
push
push
nop
fisttp
jg
sub
sbb
es
out
shr
(bad)
pop
mov
pushf
sbb
sbb
xchg
cmp
add
push
or
jmp
aas
les
push
outs
outs
lods
repz
inc
jne
mov
jge
imul
js
icebp
stos
xchg
cmc
sbb
fist
shl
add
dec
scas
test
aam
and
in
inc
ror
movs
xchg
cmps
test
rol
pop
mov
test
daa
inc
mov
aas
and
or
sub
aas
pop
push
lock
cmp
cs
test
push
je
add
ja
int
xor
rcl
neg
stos
add
in
mov
push
jnp
inc
test
xor
xlat
add
push
and
fnsave
sub
mov
push
sub
icebp
mov
push
(bad)
scas
sub
stos
dec
popf
sbb
outs
cmp
xlat
dec
cld
mov
mov
jo
pop
or
or
jbe
call
mov
xchg
retf
(bad)
pop
lds
push
das
sar
adc
mov
lods
mov
(bad)
icebp
mov
repz
icebp
xor
mov
aas
push
into
retf
add
xchg
out
outs
or
(bad)
inc
not
or
xor
sbb
pop
aaa
mov
neg
sti
ja
int3
inc
mov
sbb
(bad)
or
jg
push
push
cmps
xor
iret
pop
or
aas
ret
mov
stos
out
pop
push
into
pop
xor
in
mov
cld
mov
leave
mov
sub
jecxz
shl
fwait
dec
mov
mov
in
rcr
cmp
mov
shr
sbb
inc
lea
cli
pop
or
jnp
shl
lods
push
jne
and
int3
cmps
bswap
pmaxsw
out
bound
sar
jle
inc
ja
push
and
pop
cdq
hlt
jl
or
in
adc
fmul
dec
jp
out
pusha
pop
iret
scas
mov
inc
test
push
dec
and
or
adc
loope
mov
xchg
in
je
mov
cmps
(bad)
adc
xor
xchg
xor
add
xlat
imul
and
repnz
xchg
lea
xchg
daa
out
mov
xchg
and
sbb
pop
test
stc
test
pop
pop
push
pop
inc
push
loope
jecxz
repz
adc
mov
lods
adc
fadd
js
aam
sti
fwait
(bad)
aas
sahf
in
cmp
int
sub
dec
je
shl
mov
mov
movs
lds
xor
fisubr
inc
add
and
fidiv
shl
dec
jl
(bad)
jge
xor
out
lods
mov
out
daa
pop
retf
pop
sbb
stc
add
mov
mov
jl
dec
aaa
mov
cli
scas
mov
pop
pop
dec
xor
sbb
dec
mov
test
dec
les
aas
out
pop
pop
pop
icebp
js
jb
sbb
loopne
cmc
pop
or
leave
ret
shl
in
push
rol
and
cmp
push
cmp
jno
mov
mov
push
loopne
jmp
(bad)
aas
pop
ss
and
icebp
mov
mov
add
jb
cmp
nop
fcmovbe
or
push
mov
data16
dec
dec
jecxz
pop
mov
retf
aad
or
or
push
neg
mov
pop
xor
inc
pop
pusha
mov
shr
mov
jb
sti
and
mov
stc
lock
test
push
cmp
daa
fsub
shr
test
jp
enter
sbb
ror
cmp
lds
dec
clc
xor
mov
jnp
mov
jmp
adc
sub
or
add
add
sbb
sbb
xchg
xchg
aaa
push
dec
push
lahf
iret
test
aam
int3
cdq
mov
call
test
(bad)
jl
add
add
cmps
or
xchg
or
pop
and
sahf
lds
adc
in
add
repz
jg
inc
sbb
push
das
mov
jmp
sub
mov
repz
push
xor
dec
cmps
sub
cmp
dec
xchg
and
cdq
mov
sub
sub
jl
in
mov
mov
cli
push
lods
adc
jmp
xchg
bound
test
sbb
sub
mov
dec
sbb
jno
dec
push
(bad)
fistp
mov
ret
cmp
mov
(bad)
fbld
inc
int3
ret
mov
retf
fsub
shr
(bad)
dec
in
push
loope
cmp
ret
pop
sub
(bad)
xor
rol
outs
call
add
ret
or
jp
(bad)
idiv
inc
mov
es
mov
mov
inc
cld
inc
pop
fistp
push
add
stos
pop
int3
adc
xchg
js
fsubr
test
add
xor
bound
sti
mov
retf
cmp
(bad)
in
xor
(bad)
es
push
fcomp
xor
xor
aas
scas
enter
jns
push
dec
adc
test
retf
jmp
aas
xchg
fstp
pop
add
imul
adc
mov
pop
xor
pop
in
ins
outs
pop
or
test
shl
int3
in
ret
aam
dec
push
add
repz
stos
rol
rcl
das
leave
retf
add
and
mov
add
sbb
retf
mov
pop
(bad)
cmp
retf
cmps
mov
cmp
jb
nop
leave
jbe
ds
ins
xlat
into
test
pop
jle
fwait
jo
xor
mov
fist
mov
sub
mov
cmp
(bad)
shr
push
in
cld
cld
loope
into
out
cmp
and
push
cmps
hlt
loope
xchg
push
setl
test
xchg
mov
xor
xchg
push
sbb
push
adc
out
jmp
push
sbb
repz
add
repnz
fstp
(bad)
aad
push
xchg
mov
and
mov
inc
or
adc
and
mov
cmp
cmps
loop
or
xchg
cmp
mov
ror
cmp
or
lods
sub
adc
ds
mov
or
ds
fimul
call
mov
jns
mov
nop
jl
add
mov
xchg
push
pop
mov
xor
into
add
stos
ficomp
jecxz
lds
ss
dec
ja
xchg
loop
sbb
push
sub
(bad)
cmp
mov
and
dec
nop
mov
in
outs
test
add
(bad)
xor
add
into
pushf
mov
loope
movs
dec
mov
test
(bad)
inc
gs
xchg
js
rol
mov
mov
mov
push
imul
mov
mul
inc
ret
xor
xchg
mov
xchg
rol
imul
jmp
dec
mov
sub
cdq
and
repz
pop
push
outs
mov
fsub
cmp
in
sub
adc
ja
idiv
inc
sar
fiadd
popf
std
xchg
in
jg
gs
enter
mov
sub
in
and
ins
adc
add
out
fld
add
xchg
mov
cmp
test
shr
das
movs
push
(bad)
cmp
dec
sub
in
mov
retf
inc
inc
mov
sub
inc
add
cmp
popa
scas
ja
push
sub
add
lods
repz
dec
aam
adc
or
mov
enter
shl
aas
inc
pop
mov
mov
mov
int3
sub
sub
mov
inc
cmovb
add
pop
mov
sbb
and
and
data16
popf
xchg
push
std
push
inc
jae
fnstsw
(bad)
retf
and
sbb
push
lea
xchg
adc
mov
or
jl
xor
cmp
data16
inc
sar
or
sahf
cmp
cmp
cmp
aam
(bad)
call
mov
mov
inc
sbb
loop
jge
xchg
xor
pop
inc
or
cs
arpl
pop
in
aad
cmp
push
sbb
cli
popf
fnstsw
out
mov
or
nop
mov
or
cmp
xchg
mov
out
stos
cmc
lea
push
adc
pop
mov
enter
xchg
mov
aaa
mov
bound
out
mov
mov
sbb
add
xor
mov
jg
cmp
mul
inc
dec
add
loope
or
cmp
cmps
fstp
int
(bad)
(bad)
push
into
inc
(bad)
dec
push
jbe
push
loopne
aas
push
fdivr
ds
inc
shl
stos
out
ins
dec
inc
add
jne
xchg
inc
jmp
xor
inc
hlt
stos
cmp
xchg
es
xor
adc
es
lea
fld
test
test
jmp
test
push
xchg
mov
xchg
and
or
sbb
std
pop
scas
js
test
adc
sbb
cmp
mov
retf
mov
jecxz
sbb
ins
dec
lea
mov
es
adc
retf
rcl
repz
xor
pop
call
imul
(bad)
lods
or
pusha
inc
mov
fisttp
jmp
jle
jle
push
test
call
mov
aam
sub
mov
push
inc
adc
out
enter
inc
xchg
and
(bad)
(bad)
repz
push
cmp
push
inc
(bad)
or
jnp
jno
pop
or
mov
test
call
loop
mov
pop
pop
xor
retf
mov
leave
add
adc
ret
jnp
stos
fwait
(bad)
pop
fisubr
cld
imul
fs
sub
jo
add
mov
xchg
or
dec
inc
lea
daa
pop
cmp
cmp
xchg
in
xor
dec
sub
mov
scas
ja
dec
or
mov
pop
outs
push
mov
xchg
lock
outs
mov
fs
lea
mov
mov
or
cmp
pop
call
mov
aaa
pop
add
mov
out
aas
push
call
push
stos
imul
dec
nop
loopne
scas
aam
(bad)
mov
jns
inc
lahf
mov
jmp
mov
movs
sbb
mov
sahf
adc
retf
aad
mov
mov
lahf
push
or
rol
add
mov
inc
cs
int3
pusha
aas
mov
pusha
sub
push
(bad)
mov
call
fsubp
imul
push
mov
mov
dec
lods
pop
retf
or
xor
mov
fs
mov
(bad)
outs
push
ja
sbb
scas
das
aad
or
mov
lods
jl
mov
in
push
aas
sub
push
arpl
adc
sbb
dec
pop
jl
ret
div
(bad)
and
jp
mov
iret
addr16
or
lock
push
inc
xchg
jnp
scas
mov
(bad)
rol
dec
sub
movs
aam
daa
sub
stos
es
movs
mov
sbb
xchg
arpl
jnp
mov
adc
mov
shr
inc
cmps
nop
jle
loopne
call
popa
scas
mov
sub
stos
mov
mov
repz
or
jbe
mov
xor
out
stos
inc
fild
xchg
retf
sub
mov
jmp
adc
std
shl
pop
mov
fucomip
fstp
adc
jns
jno
add
in
xchg
ror
ss
out
ret
test
test
vunpcklps
pop
jmp
(bad)
cs
push
cmp
cld
push
pop
(bad)
dec
ror
mov
les
daa
mov
add
jge
xor
out
xchg
(bad)
jl
adc
jg
ins
les
jp
or
jbe
stc
repz
add
imul
push
sbb
cmovo
mov
mov
adc
or
bound
(bad)
out
mov
mov
add
out
dec
outs
out
xchg
jg
sahf
cmps
into
pop
jmp
jns
jge
(bad)
mov
lods
mov
arpl
lock
fiadd
fdivp
addr16
adc
pushf
sub
jnp
pusha
aaa
int3
mov
pop
push
and
mov
jmp
pop
ret
inc
jns
mov
shl
push
jne
jle
lock
add
mov
cmc
and
adc
adc
sbb
dec
inc
and
sub
call
sbb
neg
jmp
xor
jp
add
cmp
cdq
pop
cmp
ret
jmp
adc
xchg
adc
fwait
xchg
in
sub
pop
jnp
add
ror
test
popf
jmp
sbb
jbe
(bad)
mov
pop
stos
xchg
mov
daa
xchg
jl
inc
(bad)
push
inc
hlt
xchg
pop
outs
sbb
push
stos
call
sub
sbb
fs
ret
lock
scas
mov
jge
fs
jne
test
cmc
jnp
nop
xchg
imul
(bad)
ss
pop
jge
dec
mov
mov
dec
loop
outs
inc
cmp
jmp
addr16
pop
cli
jecxz
aas
inc
adc
cmps
adc
js
aam
cld
jns
leave
mov
or
pop
pop
repz
mov
movs
dec
cmps
sub
in
jl
in
bound
cmp
jne
push
xor
das
lods
neg
outs
fst
sub
mov
(bad)
mov
inc
xor
xor
in
inc
push
out
shl
out
scas
data16
sub
popf
xor
sub
rcl
aaa
ja
test
lds
hlt
cmp
cld
mov
jmp
arpl
cmp
push
mov
and
adc
data16
subss
pop
stos
inc
out
mov
repz
ja
aas
or
outs
sti
jge
pop
repnz
jge
loope
mov
sub
cmps
test
mov
add
mov
xchg
imul
dec
push
(bad)
hlt
movs
or
cdq
ins
es
hlt
imul
pusha
in
stc
je
jbe
mov
cmc
ss
movs
int3
je
xor
out
mov
into
push
cmps
sti
jmp
and
outs
sahf
clc
xor
mov
jmp
adc
sbb
mov
xchg
das
ds
aad
fist
push
call
sub
(bad)
mov
or
int3
movs
(bad)
push
jg
call
adc
(bad)
inc
call
add
add
popa
aaa
icebp
sub
dec
das
ret
cwde
outs
stos
pop
cmp
inc
sbb
out
nop
push
jno
mov
push
retf
in
daa
fcomp
cmp
jo
sub
mov
adc
ins
mov
sahf
add
aas
outs
cdq
fstp
inc
pusha
mov
push
mov
xor
push
mov
sub
mov
icebp
test
(bad)
dec
inc
sub
lods
jmp
cmc
mov
sub
lahf
cli
mov
sub
fs
mov
ret
pop
ret
sbb
call
fadd
jb
gs
or
cld
call
sbb
xchg
cmp
je
clc
jle
mov
inc
mov
sbb
stc
imul
inc
mov
mov
cmps
dec
outs
jo
or
in
xor
(bad)
push
mov
sub
pop
dec
nop
xchg
and
cmp
ja
dec
mov
mov
inc
outs
and
aas
jbe
leave
or
(bad)
in
jmp
sahf
adc
das
xchg
aas
les
jmp
cli
push
out
xor
repnz
pop
jmp
je
sub
rcl
mov
and
fcmovne
sbb
dec
and
cmp
rdmsr
xor
sbb
add
adc
cli
aaa
xchg
jbe
and
rol
or
loop
mov
adc
and
test
dec
es
adc
xchg
mov
dec
sub
add
(bad)
dec
xor
dec
fmulp
retf
dec
fistp
push
mov
shl
mov
jno
add
fcmovbe
mov
push
neg
mov
sbb
jno
std
outs
push
mov
xchg
int3
mov
ins
fidivr
or
add
(bad)
xlat
and
loop
in
fcomp
(bad)
repnz
dec
cmc
jnp
jmp
outs
and
lea
hlt
xchg
retf
add
retf
pushf
jmp
iret
mov
dec
sub
inc
daa
in
pop
out
or
in
fild
pop
jmp
inc
cld
sub
fdiv
or
sub
out
mov
sti
push
(bad)
mov
call
scas
inc
xchg
push
xor
sahf
cdq
dec
cs
movs
les
cmp
sbb
jne
mov
das
jbe
inc
mov
or
fdiv
and
pop
std
pop
test
sub
scas
loopne
mov
aad
mov
push
aaa
mov
rcr
outs
sbb
cmps
mov
jg
stos
mov
dec
pop
mov
bswap
shr
repz
ss
ucomiss
clc
mov
adc
jne
mov
(bad)
mov
or
jo
lds
cmpxchg
cld
clc
mov
not
cmp
aam
or
iret
inc
mov
pop
jecxz
(bad)
mov
cs
dec
cmp
mov
push
jae
mov
cmp
cdq
lods
popf
lahf
fild
sbb
sbb
lock
das
sub
jno
sbb
cmp
jae
shr
js
(bad)
pusha
hlt
xor
or
loop
and
imul
and
data16
cmp
les
inc
sbb
iret
pop
xor
out
gs
jbe
lods
sub
dec
retf
push
inc
js
imul
(bad)
rcl
pop
lods
xchg
retf
push
(bad)
dec
lahf
arpl
xor
popf
lea
xchg
push
ja
je
pop
fisubr
and
mov
cmps
sub
mov
rcl
lods
inc
push
mov
imul
or
mov
mov
xchg
or
or
mov
je
stc
aam
nop
js
pusha
fsub
add
mov
xchg
sbb
into
mov
ds
arpl
and
movs
cdq
iret
cmp
rcl
gs
adc
mov
sbb
call
xchg
mov
clc
in
push
xor
cwde
pushf
lock
fsub
sbb
xchg
retf
idiv
or
js
sbb
jecxz
or
(bad)
mov
loopne
sbb
mov
push
(bad)
test
mov
adc
cwde
jge
repz
dec
pop
sbb
inc
sub
movs
xchg
lahf
push
add
popw
outs
pop
sub
in
stos
sub
pop
xor
ins
cld
cmps
mov
call
jmp
ins
push
es
cld
(bad)
in
js
test
fcom
inc
(bad)
jmp
pop
bnd
loope
fwait
in
mov
lds
cld
sub
inc
fwait
ins
cmp
(bad)
jno
mov
add
pushf
enter
sbb
mov
imul
or
and
sub
(bad)
mov
cmp
shl
mov
rcl
pushf
push
jmp
fidivr
jge
aam
ds
leave
dec
mov
movd
repnz
rol
sbb
and
icebp
cdq
rcl
or
sbb
hlt
and
mov
cmp
jbe
inc
or
fiadd
adc
cmp
rol
icebp
mov
fld
int3
or
mov
lods
cmc
in
push
lea
imul
mov
pushf
sbb
sbb
test
or
inc
mov
inc
fild
adc
adc
lods
push
out
push
lods
in
adc
mov
mov
add
and
xchg
fild
xchg
loope
rcl
cmp
or
out
cs
dec
je
inc
jecxz
aas
ds
sub
mov
mov
xchg
div
or
jecxz
inc
inc
inc
cmp
jecxz
mov
in
(bad)
(bad)
call
call
out
inc
sub
add
daa
push
cli
shl
dec
rol
pop
adc
push
call
hlt
push
aaa
dec
xchg
xor
pop
ja
adc
add
or
pop
adc
mov
mov
je
and
dec
cld
or
pop
pop
cmp
cmps
lahf
jmp
inc
jl
in
add
cld
inc
fstp
stos
out
fs
xor
mov
push
call
out
repnz
dec
dec
clc
xchg
xchg
daa
push
dec
sbb
add
bound
xchg
or
hlt
cs
and
mov
ins
adc
push
cmc
mov
fld
daa
test
mov
jns
loopne
test
stc
sbb
cmp
inc
sub
gs
pusha
inc
inc
and
cmps
repz
retf
imul
adc
cmp
jmp
mov
dec
cs
mov
or
cs
adc
dec
ror
div
ja
stos
cmp
daa
scas
xor
loop
nop
push
inc
shl
push
push
repnz
sbb
jmp
mov
sbb
stc
fsub
cli
inc
jg
mov
test
leave
sar
(bad)
xor
aam
mov
repnz
retf
adc
sahf
mov
xor
les
mov
repz
sahf
mov
pmullw
adc
add
or
nop
test
fdiv
xchg
out
es
cmc
shrd
mov
pop
fwait
retf
call
cwde
pop
xor
sub
xchg
dec
pop
rol
fisub
jbe
out
les
cmc
test
push
cdq
aam
into
ins
jmp
vmovss
retf
sbb
imul
arpl
test
mov
loop
stc
dec
fwait
or
iret
or
pop
jg
sbb
and
in
xchg
stos
dec
and
jae
dec
arpl
test
test
sbb
inc
and
adc
cmp
jo
mov
push
sbb
adc
cmps
jbe
dec
jl
adc
pop
test
mov
cmp
movs
lods
stc
leave
(bad)
cmp
mov
pop
cmps
xchg
inc
daa
lahf
push
out
push
mov
push
and
cdq
sub
xchg
(bad)
arpl
test
je
cmp
and
mov
mov
lock
movs
shl
mov
dec
cmps
push
int
inc
std
cmp
push
fstp
add
ins
rol
fs
fisttp
inc
jmp
lea
mov
sbb
push
mov
xor
std
lahf
loopne
xchg
sbb
sbb
or
inc
imul
lds
and
mov
(bad)
adc
sahf
fbld
stc
inc
add
sbb
and
cmp
mov
jb
dec
leave
aas
mov
fs
xchg
pop
dec
fisub
inc
mov
cld
jns
and
mov
xchg
cmpxchg
ins
jb
not
cmc
fidiv
out
into
mov
push
mov
add
xchg
das
sbb
loope
test
and
rol
xor
mov
adc
mov
mov
(bad)
out
cld
pop
sbb
(bad)
jp
jp
(bad)
stos
scas
push
fidivr
movs
cmp
cwde
or
sahf
jmp
xlat
sbb
cmp
and
inc
js
inc
sub
inc
or
shr
ja
push
dec
fnstenv
aad
dec
mov
je
inc
pop
push
arpl
loop
lods
fsubrp
ret
jo
mov
inc
dec
call
mov
push
xchg
je
sub
mov
pop
and
shl
and
sbb
or
sbb
mov
(bad)
cmp
sub
sbb
(bad)
cmps
test
lahf
cmp
jae
dec
jg
inc
fmul
arpl
das
mov
jg
jp
adc
inc
test
hlt
and
jle
sbb
bound
call
test
enter
ds
xchg
mov
lea
xchg
mov
sbb
xlat
xchg
pop
jb
fs
int
into
dec
ror
push
mov
pop
(bad)
bnd
dec
fucomip
(bad)
in
sbb
dec
call
addr16
sub
pop
sbb
inc
sub
loop
or
dec
and
(bad)
xlat
scas
mov
retf
cmp
call
jg
sub
mov
sub
in
ss
test
retf
sub
pop
xor
lds
mov
lea
mov
push
lahf
jmp
pop
adc
xchg
icebp
xchg
dec
shr
cmp
mov
int
and
fmul
pusha
dec
(bad)
(bad)
push
add
jnp
mov
pop
xchg
add
aaa
rcr
bnd
stos
sub
movs
sar
aaa
xchg
les
xchg
cmp
aaa
sbb
mov
data16
ins
cmp
mov
sub
cmp
inc
pop
adc
nop
gs
js
aaa
(bad)
lods
mov
push
cwde
(bad)
retf
mov
sub
dec
shr
jns
and
inc
sahf
dec
adc
and
das
out
movs
adc
out
popf
push
cmps
and
into
inc
pop
xchg
cld
cmp
dec
(bad)
push
addr16
stc
(bad)
ror
(bad)
pop
push
ss
mov
cmps
std
jg
(bad)
push
lea
(bad)
mov
add
inc
shl
xchg
cmp
aaa
lock
pop
pop
call
mov
mov
jecxz
icebp
sbb
and
frstor
gs
push
lds
lea
sbb
dec
push
(bad)
repnz
cmp
mov
pop
jno
lea
jmp
push
adc
jns
pop
xchg
outs
out
cmp
arpl
cmp
sbb
mov
xchg
mov
test
push
pop
or
sub
add
fs
aad
fadd
cmp
loope
(bad)
push
movs
call
add
ja
mov
mov
mov
lods
mov
test
in
xchg
sti
mov
ficomp
cs
inc
inc
test
cld
ja
jne
xchg
jg
lds
and
adc
leave
mov
dec
adc
out
adc
dec
mov
mov
pop
adc
sbb
push
pop
(bad)
mov
inc
fiadd
adc
cdq
stos
or
rol
fdiv
shl
cmp
push
jmp
dec
sti
push
in
gs
mov
ret
repz
adc
xchg
push
test
aam
xchg
sub
push
scas
(bad)
jle
jb
daa
cmp
pop
inc
jmp
ins
or
xchg
cdq
add
cwde
mov
cmps
or
repz
iret
mov
or
in
mov
inc
pusha
push
inc
(bad)
xchg
movs
jo
movs
jl
push
sbb
div
jno
jl
adc
adc
daa
jbe
mov
mov
add
lock
stos
inc
int3
aaa
bound
mov
ds
fbstp
retf
push
dec
test
fnstcw
outs
xchg
mov
test
pop
jne
rol
cmp
push
mov
adc
cli
jmp
arpl
adc
adc
(bad)
aad
aad
jne
inc
mov
ins
out
push
jmp
(bad)
dec
into
cmp
call
jo
clc
fwait
cwde
or
jge
mov
movs
call
inc
add
inc
push
(bad)
sub
mov
stos
mov
xchg
xchg
sti
sti
mov
pop
in
dec
icebp
ss
push
clc
scas
test
scas
popa
gs
daa
pusha
xor
fneni(8087
mov
popa
out
dec
int
call
jae
test
and
xor
mov
adc
jmp
pop
sbb
xlat
adc
xchg
xor
bound
je
bound
inc
xchg
leave
cli
pop
jmp
jno
stos
and
aam
rol
imul
daa
mov
mov
rcr
cld
fisubr
js
xchg
xchg
pop
xchg
loope
push
cmp
and
add
jb
xor
inc
not
push
adc
(bad)
icebp
jnp
sub
inc
ins
enter
out
mov
mov
loopne
repnz
xchg
retf
stos
outs
(bad)
fisttp
cmp
jbe
or
sbb
scas
inc
mov
mov
ror
xor
cdq
or
int3
aaa
mov
pop
test
or
add
das
ret
in
cmp
and
pop
outs
fadd
cld
mov
push
aad
xlat
fnclex
and
xchg
dec
ret
(bad)
imul
pop
or
or
jge
int
sbb
pop
test
cdq
mov
test
shl
(bad)
xlat
sbb
es
inc
pop
mov
pop
xor
pop
sub
inc
mov
in
and
into
add
add
jae
inc
pop
jno
push
aaa
cmp
aaa
bound
das
lock
push
or
(bad)
or
xchg
aad
fwait
inc
xchg
into
mov
aad
xor
pop
cli
mov
xlat
jne
div
fld
ror
(bad)
frstor
sub
adc
in
ret
out
sbb
lahf
jo
or
jns
xor
mov
jmp
nop
call
das
adc
sbb
cmp
movs
(bad)
outs
sbb
lea
pop
cmc
popa
iret
dec
jne
mov
push
dec
out
out
loop
sar
fiadd
lea
ins
cli
fisub
inc
rol
adc
jmp
mov
jo
lods
adc
and
test
adc
jno
sub
xchg
cdq
push
scas
or
es
adc
cld
lea
aad
xor
int
retf
mov
or
outs
add
mov
add
mov
sbb
(bad)
sbb
es
ret
mov
push
sub
outs
push
stos
adc
pop
adc
cld
in
into
push
push
sbb
mov
or
adc
mov
push
jl
cmp
mov
push
mov
and
dec
jnp
fs
push
sub
pop
mov
xchg
rcl
add
dec
shl
jb
xchg
outs
or
jge
ja
mov
aaa
or
xor
pop
or
cwde
popa
sub
fmul
leave
jp
loopne
cmp
add
pusha
jnp
pop
jmp
mov
into
stc
imul
test
and
rcl
je
add
pop
cmps
xchg
xor
sbb
mov
mov
js
popf
pop
ret
xchg
add
addr16
aas
repnz
xor
mov
(bad)
mov
adc
pop
outs
ds
mov
(bad)
daa
icebp
add
xlat
mov
dec
jmp
pop
lock
add
push
pop
and
popa
or
ds
xchg
pop
fstp
jbe
or
(bad)
dec
rcl
ret
dec
jle
pop
sub
adc
sbb
mov
scas
and
xchg
jns
fwait
lock
mov
clc
xchg
jle
push
adc
and
jae
or
les
outs
pop
mov
inc
call
adc
stos
sbb
mov
in
dec
jb
add
sub
sub
fist
in
pop
addr16
push
in
clc
push
push
and
aas
call
mov
xor
mov
jp
xor
fcom
lea
(bad)
sbb
adc
and
pop
push
inc
sub
retf
movs
ins
xchg
loop
and
js
xchg
jmp
ja
les
xchg
mov
adc
inc
pop
jbe
xor
ins
and
push
mov
push
loop
push
pop
pop
sahf
scas
inc
jecxz
jp
(bad)
out
cdq
int
xor
mov
jl
and
imul
paddw
or
lds
neg
and
pop
adc
shl
jmp
mov
mov
repz
add
or
loope
mov
js
repnz
add
das
lds
popf
mov
and
pop
jecxz
adc
or
push
fsubp
test
test
inc
dec
sub
mov
xlat
lods
jl
dec
(bad)
sahf
inc
rcl
jno
xor
sub
ins
out
ret
xor
mov
daa
jno
daa
aas
cmps
and
inc
adc
in
jp
pop
cld
pop
out
xor
add
xchg
push
jl
mov
xchg
mov
gs
add
out
jbe
test
fstp
mov
call
sbb
leave
test
stos
scas
cmps
outs
jo
pop
mov
es
mov
out
xchg
mov
outs
add
scas
inc
(bad)
(bad)
jecxz
retf
pop
std
dec
pop
cs
adc
mov
push
xor
daa
jno
push
outs
dec
xchg
mov
aaa
mov
xchg
stos
cmp
(bad)
pop
jo
test
push
jnp
cmc
out
pop
les
mov
adc
dec
cwde
mov
add
pop
mov
mov
cmp
sbb
dec
jae
int3
rcl
add
xchg
mov
xor
ins
sub
jmp
push
aas
push
ret
add
ins
jmp
imul
ins
je
mov
mov
pop
iret
call
sbb
xchg
push
(bad)
dec
lock
mov
or
ds
push
jns
jno
dec
fstp
js
ret
mov
int3
lods
lock
cmps
or
cmp
or
xor
cmp
out
push
add
in
or
stos
dec
cmp
shl
or
fwait
mov
sbb
sub
push
xchg
pop
retf
add
sub
mov
mov
mov
dec
lods
je
dec
shl
sbb
movs
pop
shl
xchg
xchg
out
jl
fcmovb
mov
repz
jns
and
out
sbb
out
cmp
add
lods
mov
fistp
jno
jbe
addr16
cld
and
pop
les
dec
sub
fs
push
stos
push
sub
daa
(bad)
jmp
js
cmp
nop
(bad)
movs
mov
pushf
and
pop
adc
dec
and
adc
push
or
arpl
mov
xchg
mov
scas
mov
adc
adc
jo
loope
clc
and
jae
dec
lock
jp
inc
cdq
or
lods
test
mov
and
loop
mov
stos
push
gs
push
or
je
inc
mov
fwait
out
cmps
or
repz
and
push
out
imul
and
pop
sub
inc
push
pop
movs
lods
inc
lea
in
lahf
repz
ret
cld
xor
adc
xor
cwde
mov
cmps
sub
fwait
inc
sub
addr16
mov
ins
pop
mov
sahf
test
push
arpl
leave
or
ret
xchg
or
pop
icebp
jb
inc
xchg
push
and
xor
fadd
lods
mov
inc
fbstp
adc
cmps
inc
lds
call
int
shl
cwde
jmp
pop
pop
adc
sbb
xchg
aad
ins
repz
mov
(bad)
ss
lea
(bad)
xchg
xor
repz
(bad)
loop
jbe
outs
add
add
inc
jne
mov
xlat
push
inc
in
mov
xor
jge
stc
lahf
fstp
push
jge
data16
jo
add
push
shr
and
cli
enterw
jge
idiv
stos
and
inc
pop
addr16
js
fsubp
dec
das
vunpckhpd
stos
mov
sub
popf
mov
add
cs
ds
loop
fimul
cmp
das
mov
pop
(bad)
jmp
mov
add
loop
mov
addr16
sub
ret
jg
sar
sbb
xchg
cmps
into
arpl
jo
xchg
and
mov
retf
lods
cmc
inc
fimul
cmp
dec
push
or
popf
test
scas
xchg
pop
mov
jns
sbb
mov
rol
into
cmps
test
xor
xchg
rcr
fld
xchg
xor
call
outs
mov
ja
out
ret
cdq
lods
or
dec
lds
inc
cs
iret
popa
jbe
mov
mov
movs
out
xchg
adc
xor
repz
in
and
inc
out
pop
scas
sbb
in
mov
push
mov
pop
push
add
into
mov
sahf
inc
mov
lods
fiadd
xchg
popf
pop
movs
ret
ret
mov
clc
jge
dec
sar
int
adc
mov
mov
ins
mov
inc
fsub
loopne
mov
js
icebp
into
xor
sbb
scas
pushf
int
sbb
clc
pop
(bad)
fidivr
das
call
xchg
data16
inc
cmp
repnz
loopne
dec
mov
je
nop
or
inc
cmps
sbb
ret
test
aas
pop
not
(bad)
pop
in
sbb
in
idiv
push
int
jnp
sub
pop
xor
jb
outs
clc
inc
in
jmp
xchg
mov
cmp
sub
vpextrw
lds
inc
push
add
and
lock
or
icebp
leave
out
test
arpl
jge
ret
call
mov
stos
lods
add
jae
sar
outs
push
fcomip
call
stc
outs
outs
fstp
cwde
leave
addr16
call
mov
push
mov
pop
pop
retf
(bad)
pop
jmp
mov
push
cmp
jo
jle
outs
lahf
inc
pop
pop
fxch
mov
(bad)
jnp
pop
shr
fst
push
int
mov
outs
les
ficom
mov
or
mov
adc
pop
mov
pop
add
(bad)
xchg
cli
outs
add
xor
(bad)
sbb
test
xchg
cmps
pop
out
bound
aad
jmp
int3
sahf
mov
jno
add
test
pop
and
xlat
ficomp
mov
jecxz
sbb
cmps
xchg
jp
xchg
rcl
in
in
mov
das
les
inc
test
ret
adc
call
fwait
xchg
jbe
inc
and
jbe
popa
sbb
xor
bound
inc
les
adc
inc
jae
rcl
rol
popa
pop
add
and
pushf
push
push
push
jns
retf
xor
push
out
iret
fidivr
or
cs
out
fs
popf
dec
ror
sbb
retf
jmp
pop
mov
mov
ror
and
cmps
mov
push
maskmovq
idiv
mov
pop
cmp
fsubr
mov
push
addr16
cmp
dec
fdiv
fld
push
ret
daa
xchg
lea
mov
jns
xor
sbb
int
mov
pop
dec
out
cs
cmp
data16
mov
xlat
test
adc
push
ins
lea
loop
cwde
test
dec
jp
push
fld
push
clc
loopne
es
popa
imul
fnstsw
fisttp
pop
loope
dec
add
ins
hlt
cdq
lods
xor
mov
rcl
jle
fs
shr
lods
mov
inc
cmp
les
sbb
jb
push
mov
mov
mov
inc
jb
dec
xor
sub
ja
pop
sub
(bad)
(bad)
stos
xchg
xchg
rcl
test
rcr
sub
mov
je
lock
lods
xchg
(bad)
in
pop
in
pop
inc
shr
call
sub
or
cmp
fs
loopne
outs
fs
stos
cmc
fs
test
sahf
mov
xor
(bad)
retf
mov
add
mov
repz
aam
aam
xchg
in
inc
sar
jg
gs
sahf
daa
mov
fild
ins
mov
push
cld
pop
adc
mov
sbb
sahf
in
mov
or
repz
xchg
int
sub
fisub
out
mov
xchg
dec
dec
sbb
xchg
xchg
fnstenv
mov
and
sbb
(bad)
sub
aad
mov
cmp
mov
push
dec
clc
jle
cmps
test
mov
cmp
outs
je
mov
add
mov
pop
cmps
das
outs
hlt
psrlq
adc
lds
cmps
sub
xchg
dec
mov
mov
mov
es
dec
jnp
rol
out
popa
dec
(bad)
shl
stos
aam
xchg
inc
push
dec
icebp
retf
and
inc
nop
mov
adc
(bad)
into
xor
in
popf
inc
sbb
data16
jmp
repnz
lods
fldl2t
and
mov
rol
stc
outs
neg
not
mov
jp
sbb
test
ja
aad
sahf
aaa
mov
test
lods
pop
scas
into
enter
fild
test
inc
sbb
imul
jb
int
in
loop
jae
adc
popf
fs
popa
pop
pop
cmp
je
sub
stos
test
icebp
mov
mov
dec
aad
movs
sub
test
or
sub
iret
inc
stos
fwait
inc
or
in
xor
mov
jmp
outs
ss
shr
pop
(bad)
aas
add
pop
mov
mov
loopne
lahf
cli
ds
hlt
push
ins
daa
iret
daa
loopne
and
push
cmp
pop
adc
pop
loope
and
popa
inc
sar
pop
outs
pop
push
pop
outs
cmp
jmp
adc
pop
push
leave
mov
cmp
inc
push
fcos
lods
cmp
int3
inc
loopne
(bad)
cld
aas
and
sar
jl
jge
std
bound
sahf
mov
outs
shl
fistp
pop
pop
stos
fstp
inc
cmp
jle
pop
cwde
shl
popa
cmp
add
and
sar
fstp
(bad)
jne
pop
pop
fstp
stos
cmp
sahf
push
jmp
out
jo
dec
inc
aam
inc
inc
adc
lds
mov
mov
mov
jns
repnz
aam
jmp
pusha
add
shr
fcomp
and
dec
xor
gs
loope
cmp
mov
ret
pop
dec
mov
sbb
xchg
lahf
jmp
jl
adc
xchg
xchg
out
mov
fadd
les
cs
or
jo
inc
clc
es
test
sbb
ins
xor
outs
aas
loopne
and
or
test
shl
add
loopne
cwde
dec
icebp
je
mov
sub
(bad)
or
dec
cdq
mov
xchg
in
aas
mov
xlat
iret
adc
xor
outs
xchg
aad
rcr
sbb
pop
or
call
in
iret
out
sub
xchg
mov
mov
xchg
je
sbb
mov
popf
sub
pop
push
scas
clc
lods
outs
xchg
mov
pop
mov
dec
lahf
pusha
retf
adc
mov
xor
or
ret
popf
jmp
pop
aas
xchg
and
push
adc
xor
cmp
pop
jg
iret
pop
stos
nop
adc
or
in
dec
rcl
push
or
aas
and
punpckldq
js
fcmovbe
pop
pop
outs
fwait
imul
into
sub
push
jp
rcl
or
push
xchg
mov
aad
test
dec
loopne
mov
xchg
adc
mov
cmp
data16
out
es
xchg
cld
sub
call
ins
jl
(bad)
iret
les
dec
test
xor
mov
iret
xchg
sub
cmp
dec
jmp
or
pop
cmps
inc
sub
inc
into
in
test
test
mov
dec
mov
movs
scas
mov
push
sub
add
shl
stos
dec
xchg
mov
gs
sub
pushf
loope
sti
aaa
push
dec
retf
test
mov
lock
test
sar
rol
test
inc
shl
sbb
adc
test
mul
retf
in
inc
sub
or
test
mov
push
(bad)
in
inc
mov
jb
rcl
ss
call
adc
aaa
imul
bound
cmc
call
pop
in
popf
mov
pop
and
fs
cmp
outs
int
ror
mov
mov
jne
iret
pop
vsubpd
dec
adc
sub
adc
mov
pop
mov
xchg
call
or
gs
and
cmp
mov
jmp
fld
add
adc
adc
and
ret
aas
rol
mov
fdivr
mov
fst
loopne
or
(bad)
mov
mov
xor
repnz
gs
xlat
repnz
imul
add
jae
and
xchg
outs
push
lds
pop
test
cdq
jl
mov
dec
push
and
scas
mov
push
enter
bound
sar
mov
imul
das
clc
jp
fmul
push
adc
test
pop
pushf
add
mov
and
cli
mov
jno
pop
fld
pop
cmp
pop
xchg
pop
xor
aad
sbb
aad
cmp
mov
or
aam
mov
test
retf
mov
fs
repnz
push
cmp
xchg
pop
ficom
movs
frndint
cwde
adc
jg
jnp
stos
push
mov
jns
scas
jno
mov
inc
in
fidivr
fild
scas
loop
aam
shr
jae
ds
adc
aaa
push
mov
aas
(bad)
cmp
repnz
les
dec
xchg
and
test
mov
xchg
iret
push
in
xchg
(bad)
push
lds
call
ret
sbb
and
mov
daa
mov
loope
jp
push
pop
punpcklwd
leave
and
jae
arpl
mov
mov
lds
fdiv
xchg
jno
xor
lods
mov
jne
dec
js
mov
mov
popa
ins
js
rol
cmp
ins
in
movs
je
mov
arpl
sbb
add
cs
cwde
stos
cmp
jno
adc
or
mov
frstor
sbb
inc
xchg
loop
sbb
pop
je
and
addr16
inc
movs
xlat
pop
ret
xor
popa
adc
fadd
nop
cdq
pop
jmp
push
rcl
loope
out
lahf
ja
inc
inc
test
inc
adc
sbb
pop
sbb
inc
enter
dec
bnd
nop
adc
xchg
in
in
and
mov
lea
pop
xchg
into
push
add
sub
cmp
test
repnz
in
xor
outs
xor
or
pop
xchg
gs
dec
jo
shl
xor
pop
retf
mov
jne
mov
cmp
fist
paddw
into
stos
mov
test
sbb
loope
xchg
jle
popf
add
xchg
lods
enter
jg
lods
mov
lahf
lea
sbb
pushf
jbe
cmp
into
ss
and
mov
inc
mov
mov
and
je
bnd
pop
mov
pop
(bad)
adc
popf
test
(bad)
jmp
xor
add
ins
mov
pop
or
js
pop
aad
sbb
xchg
iret
in
or
dec
xchg
aas
test
arpl
cwde
lock
lea
add
scas
inc
fisttp
into
adc
bound
hlt
in
pushf
cmps
loop
or
sbb
dec
pop
cmp
(bad)
sar
out
xchg
les
inc
test
mov
ins
dec
sub
ds
mov
adc
sahf
popa
pushf
jne
(bad)
fwait
xchg
popa
inc
mov
dec
into
fsubr
fsub
leave
jecxz
jmp
sar
das
faddp
mov
(bad)
in
outs
sbb
pop
pusha
and
std
dec
clc
and
inc
mov
jno
js
jmp
fcomp
pushf
pop
xchg
pop
xlat
loopne
cmp
mov
push
retf
ds
test
ss
cmp
cld
(bad)
xlat
sub
jns
adc
sbb
fwait
loop
test
es
shr
jae
pop
cdq
sbb
dec
outs
adc
enter
lea
pop
sub
nop
out
das
scas
stos
pushf
ret
es
dec
mov
out
(bad)
cmp
mov
xchg
arpl
adc
or
xchg
lahf
jle
or
jb
(bad)
loopne
sbb
lock
lods
lahf
inc
adc
xor
sbb
(bad)
sub
call
je
outs
adc
mov
cdq
aaa
ss
repnz
aas
add
sub
loopne
mov
ret
lea
xchg
pop
jmp
pop
fs
push
test
imul
push
int
das
add
nop
xchg
or
out
lods
dec
jns
jae
xchg
pop
loopne
loopne
scas
pusha
ja
inc
ds
dec
jbe
call
inc
retf
and
into
popa
aas
mov
mov
xchg
inc
xchg
nop
mov
movs
ret
pusha
xchg
jne
mov
sbb
ret
inc
mov
pop
mov
pop
cmp
es
test
retf
cmps
aam
and
arpl
nop
fs
mov
cs
pop
dec
cmp
mov
adc
test
and
idiv
jmp
pop
mov
pop
and
jb
retf
dec
imul
inc
mov
mov
or
push
cmp
rcr
mov
daa
test
inc
cmps
jl
xor
xchg
jns
out
sub
or
or
cmp
pop
out
mov
xor
sbb
xor
xchg
xchg
ja
lods
int3
push
push
inc
cmp
mov
pop
mov
cmp
call
jmp
pop
xchg
ins
push
inc
stos
sar
cmp
sbb
shl
clc
xor
xor
rcr
push
pop
fstp
pop
daa
cli
add
(bad)
mul
test
int3
sub
icebp
fld
mov
cmp
mov
(bad)
in
pop
jbe
xchg
std
xchg
adc
and
add
sbb
sub
mov
push
popa
mov
sub
pop
mov
(bad)
or
(bad)
stc
adc
and
or
imul
ja
push
adc
inc
xchg
rep
jecxz
or
sub
mov
push
sbb
stc
mov
mov
daa
pop
aaa
pop
fmul
pop
inc
lods
inc
repz
pop
test
mov
fistp
adc
pop
in
push
shl
dec
fisub
test
mov
push
ret
sbb
(bad)
and
mov
or
cmps
shl
daa
ror
add
aad
sub
not
arpl
cmp
inc
xchg
add
or
add
cmc
mov
jmp
lds
aam
and
dec
push
fwait
dec
fmulp
dec
cmc
mov
in
mov
xor
or
imul
inc
push
fmul
sti
inc
jo
push
push
cmp
add
or
out
in
adc
xchg
sub
es
inc
mov
jmp
jmp
jmp
cli
scas
mov
test
cmps
mov
lock
cs
cmp
or
mov
test
push
retf
stos
retf
inc
cmc
icebp
cmps
mov
xor
adc
jno
xchg
mov
mov
scas
pushf
mov
fs
mov
push
idiv
ss
or
sub
mov
sub
jo
arpl
or
cdq
inc
push
inc
mov
push
mov
adc
push
in
jg
in
in
enter
jae
mov
mov
aad
jo
mov
neg
xchg
out
jl
push
jecxz
cmp
test
enter
jmp
sbb
in
mov
cmp
xchg
pop
cld
mov
out
sub
mov
jmp
gs
das
test
loop
imul
cmp
mov
xor
dec
mov
mov
jle
mov
push
xchg
pop
mov
cmp
sbb
fs
dec
sar
cdq
mov
call
push
mov
js
mov
aam
ret
iret
add
fldcw
daa
dec
and
ins
mov
push
push
pushf
jnp
xor
out
repz
setg
arpl
dec
das
pop
and
jle
lods
int3
into
out
(bad)
imul
(bad)
popf
mov
scas
jmp
xor
push
out
mov
pop
stos
sub
push
pop
test
xor
retf
stos
or
pop
sbb
sbb
xor
gs
jmp
push
jae
cmc
stos
cmps
jle
push
(bad)
outs
stos
or
push
xchg
jns
out
frstor
sub
fidivr
ja
(bad)
sbb
pop
cs
jle
cmp
into
popf
out
sbb
push
adc
movs
dec
push
test
sbb
icebp
cdq
jae
lods
cmps
retf
in
call
xchg
xchg
xlat
xchg
in
shl
inc
inc
mov
clc
mov
fist
xchg
stos
push
lahf
ss
mov
adc
sbb
mov
push
mov
cmp
sbb
stc
mov
fsub
retf
sbb
sti
adc
mov
hlt
call
dec
push
jb
pop
daa
add
call
pop
dec
push
mov
(bad)
cmp
cdq
mov
mov
shl
dec
mov
mov
push
mov
aam
adc
es
xchg
xor
mov
cli
cmp
sbb
test
dec
aas
stos
jmp
imul
movs
and
add
sbb
sub
(bad)
clc
and
test
adc
cdq
inc
cmp
push
mov
adc
and
ret
adc
repz
xchg
adc
outs
fstp
pop
or
jb
sti
mov
in
mov
gs
xor
xor
int3
call
fstp
addr16
push
mov
pusha
out
pop
adc
(bad)
imul
cmp
xor
inc
adc
mov
inc
cmp
mov
(bad)
fs
pop
xor
lahf
inc
jae
dec
add
push
int3
std
sbb
lods
jmp
test
cmp
pop
push
push
das
cmps
stc
and
into
into
shl
cmps
test
push
pop
mov
mov
je
pslld
(bad)
scas
push
inc
hlt
dec
loop
and
push
cs
icebp
jle
push
je
mov
jmp
movs
mov
jnp
inc
sbb
mov
jne
xor
jno
push
xlat
fwait
inc
cmp
or
jecxz
movs
cwde
ds
rol
jbe
sbb
xchg
jmp
or
imul
clc
and
and
std
outs
sahf
lods
enter
mov
cmps
and
push
enter
test
add
mov
jo
repz
(bad)
jns
mov
into
fbstp
test
outs
sbb
(bad)
out
add
imul
ins
mov
test
mov
sub
stos
loop
xchg
retf
retf
xchg
or
push
sbb
rcr
cdq
iret
cli
pop
cld
mov
and
sbb
or
xchg
cmp
mov
dec
mov
call
jge
mov
adc
ret
mov
mov
xchg
push
dec
pop
ficomp
loopne
pop
inc
and
pop
out
pop
jo
xchg
sub
stc
sub
xchg
lea
sbb
dec
and
bound
mov
and
jae
dec
xor
cmp
je
inc
mov
xchg
or
jb
pushf
jp
fsubr
sbb
cmp
pop
int
sub
(bad)
cmps
jbe
add
out
mov
aam
scas
nop
adc
scas
pop
mov
sub
out
sbb
daa
out
jl
inc
xor
mov
pop
dec
jae
jmp
sub
inc
jg
fidiv
sahf
(bad)
sar
in
or
xchg
movs
push
push
(bad)
call
fist
xchg
sahf
jbe
and
ja
mov
sbb
sub
lods
xor
or
cmp
shl
popf
push
xchg
or
add
test
inc
ins
mov
cmps
cmp
push
add
ret
dec
pop
push
imul
fstp
test
cwde
inc
aaa
sbb
in
mov
test
(bad)
inc
cmp
stos
mov
mov
push
mov
popa
sub
mov
loop
aad
icebp
add
jge
push
or
loop
jo
ficomp
dec
jle
sub
in
sti
pcmpeqb
dec
mov
push
and
or
shl
ds
push
xchg
sub
jge
cmp
mov
mov
arpl
stc
mov
mov
in
out
ret
enter
xchg
fist
shl
aad
cmp
out
adc
jb
scas
test
pop
cmp
aas
mov
idiv
pop
push
fwait
push
pop
popa
jmp
in
lahf
loope
shr
xor
push
dec
dec
pop
fwait
aam
xchg
cdq
int
inc
xchg
rcr
aad
sbb
add
mov
(bad)
loope
sbb
xor
(bad)
in
jge
dec
and
mov
cmp
dec
mov
inc
add
xchg
jne
dec
sbb
jne
(bad)
mov
scas
bound
add
or
cmp
movs
jecxz
add
lods
(bad)
mov
jbe
rcr
(bad)
std
lods
test
jl
iret
movs
hlt
lahf
sub
daa
or
dec
and
fldenv
adc
mov
mov
jns
or
in
sub
loope
outs
mov
test
jecxz
fisubr
and
inc
hlt
or
ror
pushf
pop
mov
push
sti
inc
dec
je
jp
jne
addr16
lods
cli
pusha
cld
inc
mov
fcomp
mov
push
cmc
fidiv
inc
mov
out
mov
ret
mov
nop
ss
inc
and
(bad)
gs
fild
gs
jle
shr
movs
clc
ret
pop
xlat
cmp
jl
fild
mov
jle
call
pop
adc
or
outs
or
or
xor
stos
mov
in
out
enter
dec
mov
int3
jo
stos
fsub
mov
inc
(bad)
aad
and
(bad)
aad
jne
pop
mov
mov
int3
scas
push
mov
sub
adc
adc
stos
(bad)
mov
mov
inc
push
sub
clc
dec
or
icebp
dec
paddw
xchg
xor
mov
xor
sti
stc
mov
into
sbb
sub
test
retf
add
ja
xchg
or
fldcw
add
inc
sub
xor
loopne
sti
loopne
loop
ins
stc
or
or
test
xchg
(bad)
jo
add
mov
jecxz
push
cld
sub
mov
popf
push
adc
adc
push
jb
adc
jne
lods
or
cld
mov
pop
dec
xlat
mov
or
in
inc
and
clc
clc
mov
retf
enter
mov
xchg
pop
or
xchg
mov
and
(bad)
mov
xchg
mov
inc
fsubr
pushf
push
inc
or
out
mov
and
sbb
stos
pop
call
(bad)
jge
aaa
adc
cmps
fdivp
sahf
ja
outs
arpl
adc
inc
cmc
mov
cmp
imul
es
mov
js
xor
(bad)
jmp
das
lea
jge
shl
movs
je
xchg
add
and
cmps
clc
int
shl
fsub
xor
dec
(bad)
add
or
sahf
mov
mov
(bad)
sbb
out
pop
lfs
or
loope
test
or
fs
repz
push
mov
pop
sub
popf
pop
(bad)
sbb
fisubr
sbb
push
xor
lds
fcomp
loope
frstor
cmps
ret
xor
imul
fisub
fwait
pop
sbb
xchg
stos
mov
lods
mov
mov
lods
xlat
mov
mov
cdq
jp
sbb
jae
out
loop
mov
xchg
adc
pusha
arpl
or
mov
add
xchg
adc
rcl
in
movs
xor
cmc
in
dec
ja
sbb
inc
mov
jns
in
aas
sub
scas
or
mov
addr16
lahf
scas
push
dec
in
stos
lods
inc
cmp
and
adc
pop
fsin
push
call
imul
test
stos
stc
out
mov
nop
pop
iret
adc
fs
dec
test
add
movs
sub
pop
test
xchg
fwait
mov
jmp
add
pop
push
mov
fsubr
push
mov
push
ins
add
daa
fisub
stos
mov
movs
mov
sbb
pop
mov
test
push
and
loope
xor
mov
out
dec
push
push
hlt
arpl
mov
ret
mov
cwde
mov
or
xchg
js
jae
nop
loopne
cmp
mov
hlt
enter
cld
fnstsw
outs
loope
pop
xor
xchg
and
outs
int
pop
pop
fcom
(bad)
out
pop
jecxz
rcr
adc
call
mov
in
scas
(bad)
xchg
lods
stos
push
mov
addr16
ins
jge
loope
jne
jecxz
push
jp
ficomp
lods
mov
cmp
das
les
xor
fsub
icebp
mov
fwait
and
dec
push
stos
mov
popf
cli
cmp
or
push
or
mov
push
icebp
push
ss
pushf
xor
call
mov
dec
mov
nop
xor
push
xor
jecxz
mov
(bad)
(bad)
and
dec
sub
pop
mov
jl
dec
push
call
mov
test
mov
cmp
ins
pushf
lods
clc
or
cmp
out
scas
popf
scas
xchg
cli
jo
(bad)
loopne
inc
jno
mov
jmp
mov
(bad)
and
and
pusha
out
iret
pop
cwde
retf
mov
mov
sbb
out
mov
adc
pop
mov
add
sbb
ret
push
xchg
call
rcl
or
das
cmp
add
mov
outs
add
dec
sahf
mov
mov
push
xor
(bad)
fdiv
add
imul
scas
fwait
or
jo
(bad)
xor
ja
xchg
leave
in
sbb
in
aam
int
in
jle
dec
rcr
stc
clc
dec
xor
arpl
or
mov
pop
mov
and
dec
jne
mov
xchg
cmp
sub
ror
add
pop
jl
xor
add
mov
jb
jns
mov
(bad)
shl
adc
push
idiv
sti
loope
add
rcr
mov
loopne
not
or
adc
mov
jle
lahf
mov
jp
ret
lods
ja
adc
sahf
add
push
xchg
xor
push
enter
jle
call
int3
nop
cmps
and
(bad)
sub
xor
cwde
std
inc
xchg
adc
aad
rcl
iret
xchg
fisttp
mov
dec
jo
push
movs
mov
jne
push
out
je
push
fstp
dec
std
and
out
sub
in
inc
fcmovnb
push
and
cmps
sbb
bound
shl
imul
retf
adc
mov
pop
sub
mov
cmp
and
xchg
xor
xchg
icebp
lahf
sbb
pop
test
(bad)
loopne
arpl
std
int
cld
ret
push
cmp
xor
in
dec
sbb
aam
or
sbb
xlat
cmc
hlt
jge
sbb
cmps
and
push
cmp
mov
jnp
outs
pop
adc
inc
idiv
and
sub
leave
xchg
pop
pop
stos
into
clc
aas
mov
sub
addr16
test
adc
icebp
test
call
cdq
ins
dec
xor
xor
retf
enter
pop
bound
ins
inc
inc
inc
dec
mul
outs
dec
pop
mov
fld
sbb
fst
lods
mov
ds
xlat
inc
inc
sar
push
mov
sub
imul
sub
aaa
icebp
pop
inc
mov
movs
inc
push
test
and
push
mov
sub
imul
dec
sbb
jle
dec
mov
sti
sbb
cld
push
push
cmp
inc
pop
mov
jo
scas
mov
cmp
movs
call
aaa
das
icebp
mov
dec
(bad)
xor
leave
jg
inc
push
pop
movs
pop
cdq
push
lock
inc
iret
(bad)
jg
call
mov
imul
ins
movs
out
jmp
imul
cdq
cmp
outs
inc
fs
int3
sub
mov
inc
pop
test
inc
mov
dec
jg
popw
fstp
daa
add
fisubr
and
neg
xlat
sbb
scas
enter
jl
enter
mov
imul
out
aas
adc
aad
dec
mov
fadd
das
adc
out
js
adc
inc
popf
loope
push
jecxz
push
dec
mov
dec
sar
push
sbb
fistp
jbe
sub
repz
adc
adc
fstp
test
and
mov
mov
mov
pop
sahf
mov
pop
sub
push
dec
pop
cmc
mov
jecxz
adc
dec
cmp
shl
fwait
dec
or
dec
xor
adc
push
xchg
cmp
adc
or
sub
cs
ss
adc
mov
pop
test
(bad)
popa
inc
ror
ficom
add
out
in
movs
fistp
fst
jg
sbb
ds
xor
mov
pop
mov
or
aam
bound
add
add
adc
xor
add
imul
pushf
rol
sub
or
icebp
int
push
sub
aaa
xchg
mov
loopne
dec
cmp
mov
loop
cmp
jmp
inc
retf
pop
call
sub
int
xchg
cwde
in
pop
inc
cmp
mov
(bad)
and
dec
fst
add
add
out
hlt
push
in
xchg
jle
dec
jp
ins
push
add
not
mov
pop
and
inc
cwde
mov
jno
and
stos
fs
and
sub
fs
xor
mov
sub
js
dec
dec
dec
dec
push
inc
or
out
cli
ins
jp
xchg
sub
loope
sub
sub
xor
push
mov
cmp
inc
xchg
repz
movs
push
jmp
data16
pop
out
and
test
sbb
ins
cmp
(bad)
cmp
sub
sbb
dec
rcl
xchg
inc
inc
and
cmp
add
jmp
and
(bad)
in
xchg
mov
imul
out
add
scas
es
jmp
inc
mov
ins
xchg
out
mov
fcmovnbe
fidivr
das
rcl
stos
sti
mov
lods
push
xchg
push
pop
sti
scas
adc
lahf
adc
pop
out
fwait
add
jb
pop
retf
shl
mov
popa
adc
xchg
mov
cmp
adc
addr16
push
mov
dec
sub
iret
mov
cmps
lds
in
mov
mov
pop
or
mov
test
repnz
outs
and
push
inc
out
adc
inc
mov
pop
sub
mov
or
enter
inc
sub
mov
adc
mov
leave
outs
cli
mov
push
ds
je
and
pop
bound
jl
jno
push
fild
push
mov
add
push
mov
std
scas
in
inc
xchg
mov
or
fcmovnu
int
int
dec
jle
gs
inc
addr16
stos
int3
pop
inc
mov
pop
sub
dec
aaa
mov
xor
push
in
sub
test
stos
fmulp
out
jmp
retf
aas
test
inc
xor
adc
jge
and
outs
xor
aam
xchg
mov
mov
popa
xchg
xchg
jmp
fcomp
(bad)
sbb
into
popf
sbb
dec
push
sbb
adc
add
(bad)
mov
stos
pop
jno
push
daa
outs
mov
pusha
fdiv
pop
cdq
sub
sbb
sbb
add
fldl2e
mov
jns
mov
xlat
call
push
push
and
add
push
leave
shl
call
jmp
lahf
test
mov
push
add
mov
xor
mov
mov
and
or
imul
xchg
or
addr16
cld
aas
popa
in
xchg
jg
inc
pop
ds
xor
add
ror
ss
mov
ds
in
addr16
arpl
lods
ret
mov
push
or
loope
push
fimul
stos
inc
sar
enter
cmc
add
adc
dec
dec
add
xor
inc
iret
jg
push
in
cmp
sub
mov
mov
fstp
mov
add
loop
mov
sub
aam
(bad)
xchg
scas
int
fimul
fisubr
jbe
enter
imul
enter
push
in
repz
cmc
pop
sub
dec
ds
mov
mov
out
or
cmps
xchg
and
shr
mov
cld
cmp
xor
sbb
mov
test
stc
push
mov
push
inc
mov
mov
(bad)
and
fist
mov
dec
idiv
js
data16
movs
cld
and
(bad)
cmp
pop
movs
push
mov
pop
pop
imul
mov
push
dec
call
mov
sti
adc
add
cmps
ins
adc
dec
add
xchg
neg
inc
or
add
cwde
jge
xchg
sbb
or
sbb
sbb
int3
into
ja
(bad)
pop
fmul
imul
popa
xchg
mov
test
cmp
adc
mov
(bad)
ret
and
mov
outs
mov
or
mov
outs
or
rol
mov
mov
xor
pop
jmp
(bad)
sbb
jns
jo
pusha
rol
les
jne
xchg
xor
stos
inc
jl
(bad)
imul
push
fstp
or
push
sub
ret
clc
nop
and
pop
mov
pop
lahf
sti
adc
sub
in
mov
sub
fsub
mov
add
repnz
push
bound
leave
adc
push
fcomp
mov
push
push
xlat
sbb
add
les
fadd
das
out
mov
add
sub
ins
out
adc
cmp
push
lahf
pushf
xchg
int
stos
mov
adc
fadd
dec
xchg
sub
outs
loopne
or
js
mov
out
retf
aam
rcr
adc
iret
xchg
adc
pop
mov
cld
jns
add
lods
loop
ss
cmps
fidiv
jmp
mov
imul
xor
mov
xor
ret
lods
xchg
jp
pop
fwait
stc
add
shl
pop
mov
cmp
(bad)
mov
clc
add
inc
adc
jmp
(bad)
stc
ins
aam
test
cli
jl
or
jnp
cld
sbb
fld
pusha
dec
jmp
sub
jecxz
retf
lods
les
fnstcw
sub
xchg
cdq
cmp
aas
add
rol
add
sbb
stos
bound
fisub
dec
cmp
jmp
mov
outs
mov
dec
inc
pop
and
adc
repnz
fnstenv
mov
fistp
adc
int3
(bad)
fldcw
jb
repnz
add
mov
xchg
sbb
rol
rcl
inc
pop
xor
jb
jne
not
in
jg
movs
pop
ins
fisttp
lods
bnd
rol
pop
into
pop
push
jge
or
fstp
test
sub
and
mov
add
cmp
cmp
scas
daa
mov
jae
push
pop
movs
clc
cmp
fsub
les
mov
call
inc
push
jl
pop
adc
cld
mov
xchg
adc
int
mov
dec
dec
scas
dec
fsubrp
stos
mov
pop
adc
xchg
or
vpshlq
(bad)
cmp
ret
xchg
mov
pushf
mov
or
iret
xchg
cdq
pop
popa
dec
out
mov
sub
not
test
fisub
cmp
iret
mov
inc
xchg
jae
fs
cmp
add
lods
lds
(bad)
pop
into
outs
inc
or
mov
sub
push
xchg
mov
ror
cmp
add
stc
mov
in
cmp
outs
pop
popa
div
(bad)
cli
fidiv
push
jb
mov
outs
shl
std
jmp
mov
cli
dec
adc
mov
or
mov
push
out
addr16
int
jb
mov
sbb
imul
stc
fidivr
(bad)
addr16
jmp
xlat
add
mov
sub
nop
dec
lods
repnz
xchg
adc
mov
loope
ret
(bad)
jnp
sub
aaa
mov
dec
rol
rol
lds
jo
scas
jmp
outs
inc
push
jmp
rcl
dec
mov
retf
dec
fild
xchg
in
adc
jg
pusha
imul
enter
ja
dec
and
mov
mov
xor
cmps
cmp
inc
dec
pop
push
stos
clc
lahf
dec
ret
scas
add
jnp
retf
inc
xor
fnstsw
in
jg
adc
jge
out
mov
rcr
pop
and
outs
lahf
out
sbb
pop
movsx
push
jge
xlat
mov
xchg
mov
cmp
movs
or
jmp
sti
xor
es
sbb
adc
addr16
cdq
sar
inc
mov
xor
mov
popf
mov
cmp
js
adc
bound
and
retf
cmp
jg
sbb
pop
and
neg
sub
ror
xor
lea
enter
pop
pop
pop
inc
outs
aad
int3
sub
inc
(bad)
or
leave
cmpxchg
xor
arpl
push
leave
xor
xor
fs
push
es
mov
jb
push
popw
ficomp
je
xchg
mov
je
ins
in
cmp
mov
mov
and
test
pop
in
(bad)
dec
in
mov
push
inc
lea
add
nop
mov
mov
adc
lea
adc
jmp
pop
ret
ins
ror
pop
test
adc
mov
mov
lods
sbb
arpl
sub
outs
xchg
add
retf
(bad)
cmp
jmp
adc
ret
inc
shl
mov
mov
(bad)
aad
pop
mov
mov
in
mov
inc
jo
mov
mov
fisttp
imul
lea
lea
out
inc
out
and
add
jae
inc
jle
loop
mov
push
jecxz
fistp
inc
je
jne
jecxz
or
mov
sub
or
mov
xchg
retf
sbb
leave
aaa
cmp
inc
adc
lods
pop
jmp
pop
cld
pop
xor
cli
xor
lock
push
rol
inc
fsub
test
xor
jg
dec
repz
push
inc
cmp
and
shl
inc
(bad)
cmp
xchg
jae
or
inc
xor
xchg
in
test
dec
in
or
push
mov
lahf
xor
sub
jmp
mov
pop
add
sub
mov
retf
jnp
sub
or
dec
test
mov
out
add
shr
xor
xor
add
cmc
enter
xchg
xchg
and
jge
jbe
adc
pop
dec
mov
mov
ret
push
mov
dec
mov
mov
(bad)
mov
adc
xchg
inc
pop
jae
repz
and
mov
mov
das
aaa
pop
scas
test
fld
ss
ja
mov
out
pop
rol
jg
stc
outs
lods
lods
jno
fild
pushw
mov
pop
icebp
repnz
cwde
mov
cmps
cmp
add
mov
int3
xchg
cli
dec
push
push
push
lahf
jecxz
ins
cwde
mov
mov
aad
dec
inc
add
xlat
nop
addr16
pop
test
inc
jno
mov
mov
in
cwde
and
lods
push
push
mov
push
icebp
rcr
push
mov
leave
stos
out
dec
fwait
popf
jg
fcmovnu
popf
pop
pop
jl
inc
push
xchg
push
cmc
add
mov
xor
out
push
fs
mov
push
push
xor
jge
push
pushf
fsubrp
mov
movs
out
xor
inc
int
mov
stos
mov
(bad)
pop
ds
xchg
call
in
ja
out
xchg
pop
les
sahf
xor
sti
jg
dec
and
bound
cmp
sbb
push
sbb
push
inc
das
jo
adc
cli
pop
push
sub
dec
mov
mov
retf
mov
scas
fcompp
outs
(bad)
or
and
jg
imul
cmp
dec
xlat
cmc
(bad)
(bad)
cli
jnp
xchg
les
(bad)
mov
pop
inc
cld
retf
lods
fwait
jp
mov
adc
in
fidivr
push
mov
in
inc
sti
xor
pop
fidivr
dec
and
retf
push
je
test
jo
xlat
ret
aas
inc
not
jmp
push
je
lock
(bad)
xchg
loope
mov
in
pop
xor
push
repz
jne
mov
(bad)
int3
mov
sub
retf
dec
pop
not
retf
(bad)
cmp
mov
(bad)
mov
cdq
xchg
les
stc
ins
(bad)
xor
hlt
imul
push
sub
fst
inc
lock
or
cmps
jmp
jg
xchg
push
add
adc
push
(bad)
cmp
cli
mov
mov
cmps
ret
mov
test
in
add
aad
adc
dec
stos
mov
add
sbb
in
shr
pop
push
xchg
or
push
cmp
pop
sub
inc
or
mov
mov
jmp
stos
pop
cmps
sahf
out
loopne
aad
push
push
repz
push
dec
mov
pop
int
(bad)
adc
not
sbb
pop
dec
imul
sbb
std
aam
pop
je
sub
nop
test
call
pop
pop
rcl
loope
int
retf
pop
icebp
loopne
cwde
aas
cmp
xor
fbstp
cmp
xchg
fstp
addr16
jmp
and
jno
xor
pop
ins
ret
lds
adc
aad
jno
retf
loope
enter
or
mov
repz
(bad)
in
xchg
xchg
xchg
lods
mov
mov
cwde
sub
fild
dec
jle
jo
mov
jnp
jb
mov
mov
cmp
in
mov
jge
jb
jno
loopne
mov
les
adc
dec
je
mov
jmp
cmps
xchg
loopne
lds
sti
cmp
out
mov
add
lahf
or
dec
fisubr
xchg
xchg
cli
(bad)
in
push
shr
dec
cmp
or
and
sub
fistp
hlt
adc
je
jl
hlt
dec
fcomp
repz
aaa
fwait
out
fwait
jbe
push
ja
fisttp
inc
jmp
sub
ins
inc
ret
ds
cmp
mov
arpl
mov
call
int
ins
fsub
dec
ja
loopne
movs
push
fs
xlat
push
jmp
jb
shl
push
daa
std
or
lock
jmp
call
(bad)
or
ins
inc
mov
push
outs
lock
push
icebp
mov
jmp
test
fist
call
xor
fisttp
fmul
pop
ins
test
sahf
mov
aas
fadd
pop
outs
inc
pushf
xchg
pop
adc
xchg
xchg
sub
mov
out
clc
and
mov
sub
inc
int
lock
fadd
sub
mov
jle
std
mov
ins
mov
cld
lahf
cmc
push
movs
adc
into
leave
ret
add
inc
xchg
cwde
adc
and
out
xchg
push
ret
fild
dec
mov
popa
push
sub
test
clc
fsub
push
inc
inc
mov
les
rcl
(bad)
sub
sbb
mov
mov
stos
jnp
fwait
or
sbb
outs
lods
cmps
xchg
adc
(bad)
adc
push
inc
in
jnp
cmp
push
jbe
xor
xchg
icebp
cmc
sub
adc
js
dec
dec
enter
je
into
push
test
mov
test
in
inc
fs
xor
aam
inc
inc
adc
test
(bad)
scas
jmp
rcl
stos
out
in
iret
ret
cmp
jmp
in
loopne
sti
sbb
push
mov
std
iret
dec
and
dec
pushf
in
repz
add
mov
stos
jp
and
xchg
cdq
mov
xchg
data16
jle
test
loope
bnd
dec
sbb
push
jge
jno
rol
mov
call
stc
arpl
les
repnz
data16
sti
lods
test
inc
xchg
cmp
jl
(bad)
xor
(bad)
jge
mov
cmp
add
xchg
ins
and
inc
mov
hlt
inc
ja
or
mov
mov
mov
xchg
popf
in
xchg
cmp
test
push
inc
sar
scas
xchg
inc
mov
xor
xor
das
mov
loopne
sub
(bad)
lods
in
add
inc
js
aad
jmp
(bad)
sbb
or
fsubp
inc
fwait
cmp
cwde
(bad)
int3
cdq
imul
mov
arpl
cdq
push
dec
dec
jmp
pop
lods
xor
dec
pop
mov
mov
pop
mov
dec
ret
mov
rcl
dec
les
sub
xchg
add
adc
out
sar
scas
dec
popf
int
sti
add
mov
mov
out
push
int3
(bad)
out
sti
ins
jae
in
mov
sub
ds
mov
pop
push
das
mov
mov
mov
ja
sbb
add
outs
icebp
(bad)
xchg
xchg
icebp
cli
or
rol
add
inc
or
or
retf
cmp
ds
xor
fwait
pop
test
icebp
add
dec
iret
adc
call
push
test
sub
cmp
push
in
in
sete
jge
aad
(bad)
adc
stos
outs
sub
jmp
and
pop
adc
ins
out
repz
mul
jmp
xchg
loop
test
xchg
push
aaa
or
call
in
sbb
in
rcr
xchg
xlat
lods
or
sub
sbb
loopne
scas
or
inc
icebp
icebp
dec
or
cld
or
or
mov
ins
mov
pop
mov
mov
add
dec
cmp
cmp
pop
mov
push
retf
mov
fsub
fucomp
push
pusha
ret
adc
dec
mov
jmp
adc
icebp
mov
jo
dec
loopne
jge
fbld
or
push
xchg
pushf
and
rol
je
dec
xchg
lods
xor
xor
sbb
rol
cmp
hlt
mov
cmp
xor
push
xchg
push
ss
jge
sbb
rol
push
push
inc
mov
fisttp
loope
movs
sub
or
dec
sub
in
js
cmps
xchg
mov
mov
jne
movs
stc
dec
popf
jmp
mov
inc
hlt
dec
sbb
sub
mov
pop
ret
cmp
mov
or
cld
or
or
xor
mov
push
pusha
pop
push
in
xchg
ret
stos
mov
sbb
add
ffree
add
movs
adc
in
and
push
pusha
mov
mov
cmp
sub
adc
leave
pop
pop
retf
cwde
sbb
jmp
dec
mov
sub
push
arpl
xchg
push
cmp
out
les
mov
inc
je
push
sbb
shl
mov
ss
leave
ja
inc
jle
std
cwde
pop
dec
movs
dec
ins
in
lods
mov
rol
enter
dec
and
push
cmp
jmp
and
mov
pop
mov
fsub
stos
les
pop
les
iret
mov
cmp
cmc
sbb
mov
adc
or
sub
adc
imul
out
sti
mov
cld
push
mov
pushf
push
iret
loope
xchg
add
fs
xchg
scas
aaa
xchg
scas
in
ret
xchg
adc
addr16
out
add
fisubr
dec
sti
stc
test
popa
call
and
xchg
and
adc
pop
(bad)
das
outs
inc
add
gs
xor
mov
(bad)
mov
dec
retf
dec
clc
xchg
mov
inc
imul
imul
cli
push
jmp
mov
stos
scas
dec
push
cmp
stc
ror
xor
imul
sub
hlt
cwde
pop
les
xchg
jl
(bad)
aaa
(bad)
lahf
loopne
dec
cwde
ds
inc
add
test
pop
jmp
or
jo
push
fadd
retf
push
fild
push
hlt
mov
ja
iret
xchg
adc
inc
in
sbb
scas
std
dec
mov
dec
jge
out
add
test
pop
push
cs
sub
jb
mov
mov
xor
sti
cmc
outs
je
sub
jmp
pop
addr16
and
lock
fld
sub
sbb
call
xchg
into
ins
clc
(bad)
cmp
out
call
bound
rol
pusha
mov
into
into
dec
mov
mov
and
and
cmp
mov
(bad)
mov
not
aaa
outs
or
pusha
(bad)
scas
cmp
fisttp
push
inc
(bad)
sub
jle
sub
fisttp
int
xchg
mov
cs
jmp
sbb
xor
sbb
xchg
mov
stos
fwait
outs
stos
sbb
repnz
sbb
sahf
arpl
ror
cmp
mov
jns
mov
js
mov
std
inc
ret
and
add
ret
push
pushf
sbb
std
pop
cmps
inc
jmp
sub
jle
and
(bad)
xor
sbb
in
fwait
cdq
sahf
cmps
sub
push
xor
pop
cwde
dec
sub
mov
(bad)
push
mov
fdiv
test
cmp
mov
push
lods
test
cmp
sbb
data16
repz
into
into
jmp
int3
jne
lods
leave
mov
dec
add
out
mov
and
and
jmp
dec
mov
mov
enter
jl
jno
or
xchg
jnp
push
mov
addr16
ins
jnp
dec
jmp
add
dec
jecxz
(bad)
and
fldenv
sub
daa
into
in
xor
sahf
out
js
outs
ss
add
jl
call
xchg
xchg
sub
icebp
mov
mov
retf
in
ja
mov
aad
out
pop
je
shr
arpl
sub
dec
lds
shl
lds
xchg
sub
push
adc
jge
loopne
push
mov
(bad)
sti
shl
cmp
retf
push
xlat
adc
loop
(bad)
mov
std
inc
push
pushf
cmp
dec
sub
mov
fsubr
jno
(bad)
pop
xor
sbb
inc
popf
arpl
dec
sub
int3
mov
addr16
(bad)
pop
mov
scas
das
aam
iret
out
push
loop
leave
(bad)
pop
inc
xchg
in
mov
push
outs
ss
imul
std
repnz
push
and
in
aam
mov
cmp
dec
or
jb
pop
push
or
xchg
movs
add
adc
inc
mov
dec
push
push
test
cmp
aaa
jp
out
dec
les
mov
outs
adc
cs
jg
sbb
ins
mov
push
in
jge
(bad)
cs
aaa
imul
mov
pop
js
cmp
into
sub
cmc
es
sub
mov
push
jl
test
adc
cmp
jecxz
mov
mov
push
cmp
inc
cs
out
(bad)
dec
(bad)
retf
repz
and
jp
mov
pop
or
lahf
and
mov
out
sub
sub
fisttp
sbb
mov
aad
dec
rol
popa
or
addr16
mov
mov
inc
mov
xor
mov
arpl
adc
stos
and
jge
push
rol
sbb
aad
fldcw
xlat
pop
std
dec
inc
fistp
push
es
imul
cmp
dec
or
xchg
sbb
adc
sub
ins
data16
or
popa
adc
in
popa
repz
cld
(bad)
repnz
retf
sub
ds
sub
cmp
add
mov
inc
xchg
or
mov
retf
js
jl
(bad)
cmp
sub
mov
mov
fidivr
adc
mov
loopne
stos
xor
stos
ret
call
add
dec
push
xchg
jbe
xchg
push
add
clc
scas
xchg
mov
sub
jno
mov
jmp
mov
lods
stos
mov
mov
ret
es
add
movzx
(bad)
cmp
pop
ins
not
mov
jg
xchg
dec
retf
test
aam
fs
sar
add
shr
cmp
xchg
adc
ret
pop
scas
imul
test
sbb
fcom
call
xchg
adc
and
jo
and
in
sub
daa
mov
xchg
(bad)
mov
adc
or
cmp
rcl
adc
jmp
movs
cdq
loope
jle
dec
retf
call
cmp
lea
and
sbb
mov
push
sub
mov
jecxz
sti
add
ss
mov
adc
inc
out
xlat
cdq
xchg
and
add
sub
push
inc
and
lahf
mov
xor
pop
inc
sahf
jb
movs
fist
cmp
and
dec
lahf
ins
jbe
imul
mov
push
cmps
pop
ror
xchg
fs
mov
adc
adc
fsub
mov
mov
mov
(bad)
movs
int
cs
shr
inc
xchg
jle
mov
xchg
pop
jl
mov
xor
xchg
outs
cmp
jmp
dec
push
or
pop
mov
cli
out
shl
clc
loope
fwait
out
and
popa
push
pop
mov
shl
fs
retf
ret
jae
ins
aaa
(bad)
xchg
lds
sub
xor
adc
push
iret
cmp
scas
push
(bad)
inc
push
stos
sbb
ds
xor
mov
push
dec
mov
mov
push
ret
jle
inc
mov
pop
pop
adc
cmp
or
jno
mov
sub
inc
or
jnp
xor
pop
or
jb
(bad)
(bad)
cwde
ror
btc
inc
xchg
mov
icebp
das
xor
mov
sub
or
repnz
aas
lods
jae
sub
adc
add
fnstenvw
cmp
jnp
or
pop
retf
sbb
leave
cwde
sbb
loope
pop
sbb
sbb
dec
fbld
lds
mov
call
retf
std
and
sub
outs
mov
test
adc
lock
fxch
inc
inc
mov
cmp
add
jae
fild
xor
(bad)
push
xchg
push
sbb
scas
xchg
inc
cdq
cwde
mov
sub
shl
push
fimul
jle
mov
sti
rol
lahf
in
jp
lods
mov
add
test
or
adc
hlt
aad
and
outs
cs
mov
push
or
adc
inc
mov
jp
fwait
xchg
lock
mov
dec
push
jb
push
mov
mov
(bad)
cwde
pop
sub
lahf
sub
jecxz
jge
rol
leave
mov
cld
mov
cmp
jmp
inc
daa
jo
mov
xor
adc
cmc
cmp
in
adc
push
push
aaa
hlt
cmp
movs
pop
push
mov
cdq
jbe
cmc
imul
(bad)
leave
add
pop
xchg
fisub
nop
or
pop
call
xchg
aas
and
dec
inc
(bad)
jle
sub
movs
sbb
bound
fcomp
xchg
mov
test
test
or
mov
jb
sub
retf
retf
rol
adc
cmps
jo
mov
pop
call
pop
fwait
inc
and
mov
ja
adc
push
(bad)
sbb
mov
pop
mov
(bad)
aam
fstp
push
out
std
and
add
mov
mov
push
xchg
shl
mov
cli
test
or
cmp
xchg
(bad)
xchg
fsubr
mov
cmp
mov
sub
push
mov
dec
aas
into
pop
mov
in
xchg
mov
mov
aad
mov
pop
out
mov
outs
aad
out
(bad)
popa
cmp
xor
xchg
jl
fs
dec
ficomp
bnd
push
jb
es
ins
sahf
mov
in
test
adc
dec
int
jle
mov
dec
cmp
push
pop
stos
pop
loop
mov
fadd
cdq
movs
outs
arpl
shr
aam
fwait
sbb
or
push
jmp
mov
outs
or
adc
ret
mov
dec
jge
push
push
jmp
jge
test
jno
stos
mov
cmp
inc
sub
lds
mov
adc
cdq
push
arpl
push
add
jg
test
(bad)
outs
mov
inc
mov
xchg
cmp
pop
scas
xlat
xchg
adc
nop
je
loope
mov
jno
mov
cmp
in
cwde
data16
cld
sub
fadd
jbe
push
popf
xor
int3
push
int
pushf
icebp
pushf
mov
imul
sahf
adc
dec
shl
movs
(bad)
jge
outs
inc
outs
pcmpeqw
mov
mov
xchg
add
dec
jo
inc
and
jmp
in
push
cli
dec
(bad)
cmps
test
(bad)
inc
xor
fcomp
xchg
sbb
sub
mov
jecxz
xlat
stos
out
in
out
out
cwde
sub
dec
lea
das
push
pushf
inc
fndisi(8087
push
int3
dec
aam
adc
mov
adc
adc
arpl
mov
ja
or
adc
sbb
loop
(bad)
in
(bad)
lds
pusha
mov
fild
xchg
push
aam
push
clc
push
push
or
inc
mov
inc
ss
mov
inc
or
inc
xchg
sbb
mov
out
pop
out
clc
rcr
and
clc
bound
mov
jle
aaa
jmp
dec
call
enter
mov
inc
xchg
inc
push
popa
dec
mov
into
fdivr
call
dec
add
aas
repz
aaa
pop
adc
iret
xchg
cli
mov
rcl
mov
ins
xor
pusha
mov
arpl
sbb
mov
idiv
test
sub
cld
sub
(bad)
repz
cmp
bound
js
fimul
stos
in
out
aaa
pop
push
lods
(bad)
jb
jmp
(bad)
jne
movs
cmp
scas
lea
pop
adc
dec
cwde
dec
xchg
stos
dec
sub
loope
loop
mov
mov
iret
mov
push
lock
jmp
sub
cmc
cmp
sbb
packsswb
sbb
sub
repz
nop
icebp
repz
ss
in
mov
xor
neg
lock
out
imul
test
ins
mov
dec
dec
dec
jmp
dec
add
enter
adc
hlt
sub
das
push
inc
dec
and
pop
push
dec
pop
jo
sub
or
ss
fmul
push
lods
add
xor
ins
(bad)
cld
test
(bad)
loope
xchg
and
shl
cmp
mov
sti
lods
ret
shl
out
cwde
arpl
cmps
sub
adc
es
rcl
mov
repnz
jae
ins
(bad)
inc
movs
std
mov
test
int
pop
push
or
cmps
adc
retf
mov
pop
sub
imul
jle
popf
and
pop
inc
sub
xchg
jg
cld
sbb
push
mov
fiadd
imul
test
inc
mov
daa
shl
js
add
pop
dec
in
mov
mov
mov
push
nop
cmp
mov
dec
iret
(bad)
aad
jb
add
push
jo
sbb
xchg
mov
add
(bad)
ss
dec
push
daa
cwde
mov
push
xchg
(bad)
jno
and
mov
and
or
adc
lods
lock
mov
cmps
pop
adc
dec
mov
sbb
and
(bad)
mov
mov
push
stc
fs
or
mov
dec
repz
imul
adc
lea
inc
leave
and
and
arpl
mov
shl
ja
cwde
adc
aaa
sar
aas
pop
rol
sub
fcmove
or
mov
adc
pop
cmc
stos
jg
xchg
dec
xchg
addr16
cmp
and
jno
mov
push
cwde
cmp
adc
add
les
in
dec
movs
pop
adc
adc
repnz
out
fwait
stc
(bad)
daa
and
xchg
ret
push
push
cmp
xchg
iret
pusha
and
and
pusha
ret
xchg
mov
icebp
sub
adc
aas
std
xor
mov
jmp
xor
fsub
in
into
xchg
mov
dec
cli
jae
sbb
je
xor
cmc
sbb
pop
movs
retf
mov
movs
jnp
loopne
xor
mov
lods
in
into
(bad)
fwait
adc
mov
add
mov
pop
(bad)
repnz
imul
dec
xor
bound
inc
(bad)
out
sti
or
(bad)
push
(bad)
repz
mov
out
dec
aas
imul
mov
dec
mov
push
sub
popf
xchg
data16
xor
sbb
add
aas
int3
xor
adc
icebp
scas
xchg
adc
sbb
mov
sbb
jo
inc
test
mov
xchg
sbb
push
jge
in
mov
mov
pop
inc
iret
rcl
loop
pop
push
push
pop
shl
jecxz
fs
mov
cmp
sbb
fidiv
add
sti
inc
test
dec
repnz
out
and
jmp
add
data16
test
jae
add
lock
sti
imul
push
inc
xchg
lds
mov
pop
ficom
int
fidivr
xor
sub
call
mov
sub
pop
adc
rcr
mov
lds
and
outs
stos
test
mov
clc
xlat
xchg
xchg
jns
mov
inc
or
retf
push
push
cmps
sub
pushf
sub
imul
inc
jl
inc
pop
sar
xchg
test
xchg
xor
out
rcr
test
inc
push
dec
or
dec
fwait
call
xchg
bound
mov
dec
je
and
and
mov
xchg
dec
xchg
mov
pop
jne
sahf
cmp
push
and
stos
gs
fstp
mov
cdq
mov
xor
ja
fwait
push
out
fstp
xor
inc
rcl
or
loopne
mov
pop
mov
adc
add
sbb
xor
cld
jp
(bad)
cdq
jle
enter
xor
push
shl
loopne
and
imul
xor
xchg
pop
(bad)
lahf
call
xlat
pop
sbb
and
imul
xor
cwde
stc
xchg
lds
sub
outs
aaa
xchg
mov
cmps
add
sub
fbld
sub
callw
cli
pop
xchg
mov
out
adc
mov
(bad)
mov
repnz
xchg
leave
mov
aad
ins
and
xlat
outs
test
into
lods
lahf
out
retf
inc
fstp
xor
cld
adc
setae
ja
jno
cdq
mov
adc
mov
js
lock
dec
cmp
xchg
aad
xchg
mov
push
out
adc
mov
jne
scas
fdivr
adc
enter
mov
pop
mov
fstp
inc
fistp
cmc
fsub
push
adc
fwait
rcl
or
jmp
nop
pusha
cli
cmp
adc
inc
add
js
adc
sahf
push
repz
jo
mov
lahf
hlt
pop
xor
push
xor
jl
mov
js
xor
mov
adc
dec
xchg
(bad)
dec
lahf
xchg
call
adc
retf
mov
test
adc
test
push
mov
retf
xor
das
call
and
sub
pop
mov
cmc
rcl
cs
dec
add
pushf
inc
fidiv
test
pop
popa
push
jl
xchg
cmps
sub
stos
jmp
inc
jecxz
sub
in
inc
(bad)
dec
pop
mov
jle
add
sbb
arpl
stos
(bad)
rcl
sbb
rcr
and
inc
lea
ret
cli
stos
jle
push
sbb
sbb
test
and
(bad)
sbb
jge
push
xor
jp
jne
mov
mov
outs
jl
dec
xchg
mov
jg
push
test
cmp
cmp
dec
ss
or
in
adc
mov
and
pop
jbe
lea
iret
add
inc
js
push
icebp
or
icebp
into
push
push
repnz
push
mov
or
ret
scas
mov
jae
loop
imul
adc
aaa
xchg
inc
bound
push
cmc
fcom
ret
enter
out
pop
repz
jo
mov
fucomip
sbb
daa
add
xor
inc
mov
sub
out
std
(bad)
sbb
or
je
push
jne
xchg
cs
push
xchg
iret
mov
sbb
adc
jbe
fcmovne
bound
xor
add
cwde
fisub
sbb
xor
push
jg
jo
out
loop
call
std
add
shr
jle
popf
aas
dec
in
ret
(bad)
bound
dec
jb
sub
inc
xchg
cmp
ins
or
fstp
pop
popf
js
das
mov
jb
mov
ss
repz
add
pop
pop
cmp
sub
leave
mov
sbb
stos
sub
lahf
mov
lods
jae
adc
sub
mov
xor
inc
in
(bad)
push
push
mov
sti
int
ins
mov
test
jb
dec
sub
add
arpl
mov
movs
inc
cmps
repnz
mov
repz
neg
sub
nop
pop
mov
pop
inc
adc
cwde
push
ja
push
test
inc
inc
stos
pop
pop
jno
fist
pop
mov
mov
jo
dec
cmp
sub
pop
xchg
and
push
inc
call
jb
xor
mov
mov
and
clc
pop
andnps
mov
or
mov
xor
arpl
adc
fwait
mov
adc
mov
movs
xchg
inc
cld
(bad)
and
pop
dec
fwait
inc
mov
out
pop
retf
dec
int
sbb
and
jmp
ficomp
dec
mov
aad
retf
inc
xlat
in
mov
nop
fistp
xchg
mov
out
outs
or
xor
cli
cdq
mov
adc
pushf
sub
fist
adc
xor
loope
lods
dec
xchg
xchg
mov
xor
jg
es
push
fadd
sub
dec
outs
(bad)
xor
xchg
mov
in
mov
imul
inc
jecxz
aas
daa
ret
and
xor
stc
jp
and
sub
in
mov
dec
es
cdq
fisubr
jns
add
sti
mov
(bad)
in
xor
shl
push
jle
fcomp
ins
aas
std
and
cmps
push
dec
scas
mov
push
js
sbb
jns
mov
xchg
cs
sbb
test
mov
mov
lock
push
stos
aad
dec
in
pushf
xor
lahf
sub
sbb
setle
fdiv
xor
add
test
xor
call
dec
call
(bad)
clc
jl
repnz
fisttp
in
pop
push
mov
push
push
xor
pop
push
sbb
repz
dec
pop
lods
sbb
and
adc
push
xchg
sbb
pushf
js
sub
cwde
push
sbb
pop
repnz
push
jge
fwait
pop
jecxz
int3
fstp
fstp
mov
loopne
sub
mov
mov
fsub
shl
enter
enter
push
dec
sub
dec
dec
ficomp
push
xchg
or
xor
push
cli
cld
jl
sti
daa
movs
(bad)
cld
inc
les
jnp
add
cmp
cmp
popf
inc
sub
xchg
popf
and
add
shl
jb
or
xchg
pop
xor
jecxz
adc
mov
out
icebp
inc
cmp
ins
lods
pop
fimul
lock
push
leave
mov
pop
jne
mul
daa
sbb
repz
ds
pop
inc
xor
sbb
mov
inc
js
push
adc
jns
mov
mov
leave
mov
nop
aaa
outs
mov
stos
jmp
mov
imul
mov
gs
push
addr16
mul
iret
sub
ror
xor
jnp
dec
pusha
retf
outs
sbb
jp
fwait
dec
lods
mov
mov
outs
mov
push
lahf
inc
inc
pusha
xor
ins
push
push
inc
xchg
add
mov
outs
(bad)
mov
js
and
mov
sbb
es
cdq
repz
sar
xchg
mov
cmp
addr16
fdiv
mov
xchg
cli
imul
jo
mov
bound
cli
ds
mov
or
cmp
dec
push
add
cs
push
dec
push
push
lea
iret
and
push
mov
lods
imul
add
jnp
xor
cli
xchg
test
sbb
cmp
loope
sub
stos
jbe
adc
or
hlt
int3
add
fisub
pop
std
dec
scas
pop
fiadd
cmp
jge
add
sub
jmp
dec
sbb
or
movs
sahf
or
out
mov
movs
inc
outs
movs
cmp
pop
mov
daa
adc
cmps
mov
cmp
or
dec
out
or
pop
mov
imul
jnp
add
or
(bad)
jmp
lea
pusha
xchg
nop
mov
adc
pop
pop
inc
mov
mov
ins
mov
test
in
xor
(bad)
cmp
cwde
push
dec
stc
sub
scas
(bad)
adc
call
pop
cdq
sbb
or
lahf
ins
popf
daa
hlt
ret
and
xor
adc
enter
dec
iret
inc
mov
add
jge
mov
xchg
inc
fdivr
enter
out
stos
push
jb
ins
or
cmp
cmc
push
xchg
add
push
aaa
adc
mov
sbb
sub
fsub
in
or
add
loop
loope
and
and
sar
mov
ret
stos
int
(bad)
fidivr
jmp
jo
cwde
lea
call
dec
and
mov
jmp
cmp
xchg
bound
adc
dec
xor
cmp
(bad)
pop
addr16
push
push
in
in
ss
xor
ins
and
fimul
fcom
jl
(bad)
pop
fisttp
retf
rcl
pusha
std
into
pop
es
idiv
inc
mov
mov
xchg
inc
push
and
test
push
and
push
mov
test
jge
repnz
sbb
mov
and
sbb
cld
jg
adc
frstor
sub
popa
xor
push
loope
ret
js
sar
push
clc
repnz
xchg
inc
scas
xchg
xor
dec
mov
xchg
icebp
mov
std
arpl
arpl
popa
sub
mov
or
xchg
ud0
jb
dec
out
retf
lods
sar
cmc
int
es
fild
cmp
rol
push
mov
es
scas
aas
stos
das
retf
push
popa
and
pop
(bad)
push
mov
hlt
aaa
test
pop
add
in
sub
cmp
das
xchg
sbb
inc
inc
(bad)
adc
lahf
jmp
sbb
add
lock
or
xchg
sahf
add
mov
xchg
std
mov
pop
mul
scas
rcr
jmp
outs
bound
or
stos
xchg
in
dec
ins
bnd
fcmovne
inc
jno
shr
rol
shl
nop
pop
call
das
xchg
jp
adc
std
mov
add
sbb
jb
pop
popa
push
or
adc
sbb
cmp
cmps
retf
ret
add
mov
sbb
add
jmp
pusha
xor
xor
cmps
push
int
pop
ds
mov
test
repnz
iret
(bad)
jmp
push
mov
jae
jmp
gs
sub
shr
add
repnz
std
call
pop
add
mov
pop
mov
int3
push
and
fnstsw
adc
mov
and
out
or
adc
push
inc
cmp
dec
popf
mov
xor
int
push
mov
jg
adc
shr
jge
rcl
sub
add
lods
or
push
dec
push
xchg
xor
or
push
jae
inc
ret
xchg
cmp
mov
inc
ret
iret
mov
stos
call
loope
or
xchg
pop
fld
ficomp
push
outs
pop
(bad)
pusha
jne
outs
sub
call
daa
inc
add
cwde
es
cs
(bad)
lods
inc
adc
rcr
pop
cld
cmp
jmp
mov
pop
jno
test
or
arpl
mov
adc
aas
ret
movd
jnp
add
sbb
push
movs
jo
aas
div
bnd
mov
shl
fwait
push
dec
xchg
inc
(bad)
in
nop
add
loopne
xlat
mov
js
xchg
aam
add
adc
dec
or
ins
pushf
xor
lods
fscale
pop
movs
cmps
(bad)
inc
inc
call
add
sbb
pop
mov
xchg
cld
loop
push
jne
push
(bad)
or
not
bound
inc
xchg
adc
fs
bound
pop
inc
cmp
push
(bad)
(bad)
xor
retf
stos
fimul
add
xlat
loope
add
cmps
mov
pop
fmulp
mov
pop
scas
iret
cmc
xchg
dec
or
daa
mov
out
adc
cwde
aad
call
dec
stc
sub
sahf
imul
test
sahf
jl
test
shl
push
push
inc
iret
das
inc
enter
pop
arpl
sbb
lods
xchg
push
cmp
nop
pop
and
outs
sbb
add
xor
jnp
repnz
sbb
fsubr
pop
sbb
cmps
je
sub
mov
out
mov
fadd
dec
adc
fiadd
dec
mov
stc
adc
pop
retf
add
push
dec
push
mov
ret
mov
add
div
fs
jno
or
dec
sub
lock
cmps
imul
out
jnp
adc
std
in
jle
fadd
pop
loope
cmp
fcom
inc
aam
dec
push
inc
nop
inc
sub
mov
xor
xchg
mov
dec
nop
cdq
loope
mov
xchg
or
sub
outs
je
(bad)
icebp
icebp
pop
xlat
xchg
sti
je
mov
mov
and
aaa
fimul
and
jns
mov
push
and
arpl
pop
jb
xchg
jl
mov
sti
fst
jae
push
push
adc
ds
mov
inc
mov
mov
repnz
cmp
clc
mov
or
and
jmp
dec
or
(bad)
xchg
push
dec
add
mov
lods
repnz
pop
xlat
movs
mov
nop
rol
outs
cmps
xlat
add
outs
shr
stos
arpl
mov
(bad)
ror
leave
xchg
movs
jle
dec
call
mov
je
inc
sub
and
mov
test
call
mov
push
aaa
or
mov
sub
es
test
pop
add
push
jle
cld
dec
push
cdq
retf
mov
(bad)
(bad)
imul
adc
mov
repz
fiadd
xor
icebp
xchg
and
adc
and
push
es
push
mov
iret
inc
cli
add
(bad)
in
pop
xchg
icebp
mov
pop
mov
sar
ins
(bad)
out
hlt
out
rcl
xchg
rol
lods
adc
dec
(bad)
pop
stos
lahf
inc
inc
push
pop
or
movs
xlat
jg
das
hlt
pop
(bad)
js
rol
stc
shl
mov
les
test
pop
ss
(bad)
popf
cwde
jne
adc
(bad)
xchg
push
adc
jbe
adc
repnz
(bad)
daa
rol
jmp
mov
or
dec
dec
xchg
xor
shl
mov
fsubr
dec
mov
xchg
scas
add
sar
lock
outs
pop
(bad)
mov
cmp
sub
cwde
or
push
ficomp
gs
fwait
mov
sbb
pop
pushf
mov
sbb
dec
push
mov
mov
sub
xor
push
dec
loop
arpl
jbe
les
sub
inc
inc
add
rol
jbe
cmps
inc
or
ds
dec
clc
loop
xor
mov
xlat
fdivr
dec
sub
or
ins
xchg
in
imul
and
ds
es
popf
adc
push
cmp
jmp
outs
xor
mov
lods
jle
arpl
xor
pop
xchg
(bad)
xchg
(bad)
cmp
push
in
pop
fcmovne
addr16
xor
xor
sahf
sbb
hlt
dec
and
mov
cmp
repnz
retf
inc
push
movs
mov
aam
aam
inc
mov
pop
jge
ror
xchg
daa
fcomp
mov
les
add
push
adc
jp
lock
bound
xor
xchg
adc
mov
std
lods
xchg
and
int
jbe
adc
mov
add
dec
adc
cmc
cmp
xor
or
movs
cmp
in
in
repz
dec
fwait
adc
clc
jb
mov
int3
cmp
fucom
(bad)
fisubr
mov
addr16
mov
aas
test
push
adc
pop
mov
fidiv
adc
and
lea
jb
fisub
retf
dec
cmp
cli
or
mov
cmps
movs
add
xchg
sahf
lds
les
in
aad
test
pop
test
inc
stos
push
and
stos
outs
sti
xchg
ret
add
mov
pop
push
stc
iret
pusha
loope
retf
int3
add
mov
out
retf
shr
jl
dec
jecxz
xor
call
push
jb
mov
push
(bad)
push
js
sbb
shr
lea
sub
out
jg
in
arpl
xchg
rcl
in
shr
hlt
mov
push
clc
sbb
inc
xlat
adc
pop
mov
addr16
stos
mov
add
lds
lahf
out
loop
mov
(bad)
push
sahf
ins
lods
cmp
xchg
jg
aam
fisttp
test
dec
dec
xchg
adc
sbb
int
and
into
add
scas
pop
out
adc
add
inc
les
push
xchg
ficom
in
mov
ins
popf
nop
sbb
icebp
or
loop
repz
out
mov
sub
lock
ss
fnstsw
icebp
jae
outs
xchg
xchg
push
mov
ror
push
scas
aam
mov
jno
cli
fsubr
movs
std
stos
xchg
daa
test
out
jp
jnp
push
mov
push
dec
mov
cmc
repnz
sti
cwde
fild
(bad)
ss
sar
retf
jae
stc
and
add
test
test
xor
aaa
pop
jb
mov
(bad)
enter
call
movs
and
cmp
mov
dec
xor
mov
pop
push
cwde
mov
dec
sbb
dec
ror
jg
dec
icebp
into
int
add
mov
add
cmc
shl
out
(bad)
fstp
fsubr
fnsave
into
arpl
dec
dec
aas
xor
adc
and
out
out
add
rcr
jge
add
xor
adc
in
jb
fcmovu
movs
mov
popa
cmp
outs
(bad)
cmp
jno
retf
xchg
rol
pop
into
repnz
xor
stos
das
jl
add
aas
gs
fbstp
(bad)
out
push
fisttp
or
imul
daa
cld
call
cmps
inc
addr16
ret
push
xchg
cmp
rol
cmp
push
adc
pop
jne
push
and
or
xchg
fisubr
cmp
dec
sub
jmp
lods
sub
push
inc
fbstp
aas
jnp
scas
adc
into
outs
cmp
mov
sbb
out
mov
or
movs
scas
les
dec
lds
xor
ret
and
inc
xchg
jmp
xor
jbe
ficom
lods
xlat
fmulp
inc
and
mov
push
lea
lods
mov
jecxz
loopne
xchg
in
dec
xchg
sub
jg
cmp
inc
dec
out
jecxz
aaa
and
(bad)
lock
scas
xor
jae
shl
add
dec
pusha
jp
mov
push
fld
mov
outs
sub
adc
mov
adc
cmc
fwait
pop
ds
popf
mov
loope
add
lods
sti
xchg
cmp
cmps
jmp
out
ds
sub
or
loop
ror
in
stos
mov
mov
lods
gs
sbb
imul
fist
ss
ficom
jbe
and
aad
cs
xchg
pop
fidiv
mov
fwait
ret
jge
ret
call
lods
mov
js
jne
pop
aas
test
mov
mov
inc
cmps
in
iret
aam
bound
scas
shl
lods
hlt
mov
pop
jns
pop
sbb
jge
pop
inc
ss
mov
(bad)
sbb
add
sbb
cmp
jbe
xor
inc
int
inc
sub
dec
adc
fcmovbe
sar
repz
lahf
and
xor
sbb
inc
sbb
pop
scas
in
fs
adc
rcr
adc
cli
mov
xor
fwait
dec
je
pushf
and
movs
sbb
sub
(bad)
adc
les
lahf
je
pop
jmp
adc
xchg
imul
dec
and
and
adc
aaa
adc
jmp
and
mov
pusha
(bad)
gs
mov
xchg
lea
cs
mov
dec
(bad)
outs
out
jg
jmp
fiadd
retf
sub
arpl
xor
stos
mov
mov
js
xor
cmp
outs
add
lods
xchg
dec
pop
sahf
and
push
clc
loope
adc
jmp
xchg
xchg
dec
sti
fmulp
sub
and
mov
lock
ret
mov
ss
test
inc
mov
out
mov
(bad)
push
jecxz
sbb
inc
dec
loop
sub
int3
lods
popf
or
movs
pop
push
ficom
cmps
sahf
jg
cmp
pop
(bad)
lods
mov
fistp
mov
rcr
pop
out
and
cmp
xchg
inc
fild
sahf
add
mov
in
and
or
cmps
sbb
outs
fsub
jge
inc
push
fisub
in
daa
mov
mov
test
sbb
pop
mov
call
fldenv
push
or
jo
les
mov
in
in
sahf
ficom
in
mov
add
jno
(bad)
sbb
mov
mov
mov
xor
pushf
inc
aad
add
mov
repnz
cmps
out
xor
bnd
add
push
icebp
add
jg
lock
mov
leave
sbb
inc
mov
int
jmp
mov
rol
jg
adc
fs
int3
scas
and
es
rol
adc
jns
xor
or
(bad)
mov
add
sar
pop
dec
scas
hlt
dec
stos
sbb
add
mov
dec
or
ftst
aas
loop
in
out
adc
xor
adc
pop
ds
pop
cwde
jmp
std
fld
std
lock
rcl
movs
enter
jmp
(bad)
sahf
jnp
xor
xchg
pop
bnd
sbb
push
test
cmp
cld
out
cld
aaa
push
arpl
fcomp
sbb
inc
leave
dec
add
dec
fst
call
add
shr
jp
and
pop
dec
movs
sub
dec
(bad)
pop
add
xchg
fild
rol
mov
outs
in
mov
repz
mov
scas
and
in
test
xor
cmp
push
mov
cmps
dec
sub
mov
test
push
push
repz
mov
or
std
(bad)
std
dec
mov
jb
outs
clc
(bad)
retf
adc
jbe
mov
add
fimul
push
jmp
aas
fistp
mov
(bad)
test
js
test
jbe
sahf
pop
aas
sbb
cmc
mov
push
xchg
mov
rcl
pop
in
clc
mov
jns
pop
cmp
mov
cs
and
in
sub
js
(bad)
cmp
push
out
call
shl
mov
xor
jecxz
fneni(8087
mov
je
fldcw
rol
or
test
mov
cmp
and
test
sahf
std
ror
pop
out
jns
mov
mov
sbb
cmc
in
or
mov
sbb
cmps
or
stc
xor
pop
mov
sbb
inc
int3
icebp
loop
sub
mov
test
inc
cwde
mov
retf
repz
(bad)
jge
dec
retf
xchg
jle
dec
and
call
pop
push
mov
nop
xlat
cmps
addr16
push
push
push
lock
mov
jmp
out
stos
adc
mov
cmp
outs
fsubr
bound
push
mov
int
ja
xor
repz
mov
out
xor
lds
daa
in
iret
in
push
pop
xchg
inc
add
and
iret
or
rcl
or
fld
cmc
iret
out
inc
mov
push
mov
xchg
mov
jmp
movs
cmp
or
mov
or
mov
mov
outs
cwde
push
add
jmp
aad
jg
ret
(bad)
mov
mov
cmp
dec
cmp
sti
cmps
xchg
loope
push
ret
or
or
loopne
loopne
cmc
mov
out
pusha
cmp
js
enter
lock
jbe
and
cwde
das
popa
loope
inc
test
ds
mov
sbb
push
sub
shr
adc
sahf
sub
jmp
inc
movs
sub
xchg
js
jo
xor
sub
jns
test
retf
xchg
inc
repz
sahf
jo
xor
mov
repz
mov
pushf
int3
mov
pop
daa
fincstp
fild
push
mov
out
stos
out
mov
adc
ror
call
mov
ja
lods
leave
push
adc
sub
adc
mov
push
push
mov
xchg
mov
(bad)
mov
test
jo
in
out
jl
cmp
jge
sbb
ds
xor
loop
add
adc
xchg
aad
jmp
dec
sub
sar
sub
test
inc
and
movs
test
pop
fild
out
jb
cdq
nop
mov
adc
cwde
mov
mov
jecxz
mov
jl
mov
jmp
ins
and
dec
pop
lea
fwait
sbb
scas
outs
push
jmp
nop
push
mov
xor
pop
sbb
mov
xor
in
cvtpi2ps
jl
ret
push
push
mov
cmps
mov
mov
mov
aad
sub
cli
sbb
nop
jp
mov
sbb
out
xor
xchg
mov
cmp
jmp
inc
js
pusha
add
fbld
shr
jb
adc
imul
ds
mov
inc
sbb
xor
pop
loopne
add
lahf
mov
repz
and
or
daa
dec
pop
cmp
push
sahf
mov
jae
jae
add
in
ret
cmps
jg
add
xchg
dec
or
lods
lods
mov
inc
pop
movs
sbb
cmp
sub
mov
pop
lock
pop
xor
push
jg
add
sahf
adc
xchg
(bad)
test
and
add
call
cdq
adc
pop
repz
lods
fmulp
dec
int
nop
das
mov
or
enter
and
(bad)
and
dec
(bad)
jmp
lahf
inc
js
movs
pop
retf
int
cmp
test
ins
pushf
scas
mov
push
(bad)
(bad)
loopne
repz
dec
std
inc
iret
lods
jo
(bad)
adc
sbb
into
mov
cmp
lds
int3
xbegin
add
out
mov
sar
mov
ja
cmps
add
mov
pop
push
rcl
test
and
out
(bad)
jp
push
push
pop
lock
sbb
xchg
xchg
test
mov
jno
hlt
stc
sub
adc
mov
pop
inc
jl
loop
and
loop
ret
jmp
out
into
mov
xor
sahf
fcom
call
js
stos
(bad)
out
addr16
dec
add
inc
cmp
fld
push
adc
scas
and
add
pop
fnsave
adc
shr
jp
xor
push
pop
call
scas
arpl
retf
inc
sub
ja
(bad)
es
lahf
cmp
loop
dec
nop
(bad)
cld
imul
test
rol
xsha256
cmps
adc
sbb
pop
pop
pop
repnz
scas
mov
ss
call
ss
mov
mov
pop
mov
pop
sbb
cmc
scas
leave
das
ss
push
sub
inc
cli
lods
jmp
mov
pusha
adc
cmc
fs
js
cmp
cmps
or
ror
data16
test
addr16
xchg
inc
or
repz
cli
xor
mov
sahf
ins
adc
add
xchg
dec
pop
add
and
mov
fld
bound
pop
or
xor
cdq
sahf
pop
(bad)
or
sbb
retf
pop
mov
cmp
pop
xor
ins
in
mov
div
lock
mov
cmp
ret
(bad)
loope
adc
xchg
pop
out
or
cld
add
icebp
xor
inc
add
repnz
mov
out
pop
mov
inc
dec
sub
dec
cmps
or
pusha
dec
fiadd
jl
in
mov
or
scas
ja
shl
inc
jne
cmps
xor
xchg
mov
movs
push
je
dec
fld
cmp
call
cwde
jg
cwde
shl
icebp
mov
sbb
cmc
and
or
bound
dec
jecxz
and
(bad)
mov
dec
xchg
outs
push
adc
xchg
(bad)
stos
mov
loope
or
or
jne
ins
call
xor
ret
ins
hlt
ja
push
and
and
sbb
ret
push
cmc
ret
stc
ss
retf
cmps
adc
sbb
mov
leave
cmp
mov
or
repnz
sti
add
push
cmp
test
js
mov
daa
(bad)
lock
es
addr16
les
adc
in
(bad)
in
mov
cmp
jg
test
rcr
pop
clc
in
pop
(bad)
gs
sti
jae
mov
cmc
add
dec
cmp
mov
ds
inc
repnz
adc
arpl
xor
pop
cmp
sbb
lds
lahf
jno
dec
or
mov
mov
jae
vpaddb
imul
pop
neg
(bad)
mov
outs
push
inc
add
xlat
and
stos
outs
in
jmp
rcl
dec
stos
mov
mov
fild
inc
sub
sub
int3
out
adc
test
jbe
jne
mov
movs
jne
cwde
fsubr
cmp
jns
(bad)
dec
sub
cdq
call
imul
dec
not
push
mov
inc
adc
retf
mov
push
add
stc
daa
jge
scas
out
pop
xchg
fwait
loop
sbb
hlt
pop
out
pushf
fs
shl
hlt
sub
xor
xlat
mov
clc
xchg
sbb
push
xchg
fdivr
sub
sti
icebp
or
(bad)
sbb
xchg
sub
cli
pop
lock
cmc
sbb
xchg
mov
mov
mov
repz
mov
fs
lahf
shl
retf
fbstp
adc
push
aaa
inc
stos
popf
in
sub
test
mov
inc
(bad)
cmp
(bad)
inc
cmps
sbb
sti
(bad)
in
pop
gs
das
stos
adc
ror
nop
and
imul
movs
test
add
mov
loopne
xor
jo
icebp
add
(bad)
sub
lea
jno
fdiv
es
dec
repz
jae
and
(bad)
imul
aaa
test
fs
mov
mov
lahf
nop
mov
jae
push
(bad)
movs
cmp
out
sahf
mov
imul
test
inc
jecxz
scas
dec
cli
in
lock
mov
or
stos
fadd
mov
neg
div
shr
sahf
dec
push
addr16
jb
adc
mov
aad
jmp
(bad)
hlt
ins
pop
xor
mov
enter
jne
lods
loopne
xchg
stos
lock
aaa
pop
lods
nop
jnp
(bad)
xchg
cmp
inc
lods
adc
loope
sbb
xchg
jmp
mov
push
and
scas
fnsave
pop
adc
xor
dec
das
lods
adc
in
addr16
imul
std
and
fimul
xlat
lahf
(bad)
outs
stos
xchg
xchg
dec
xchg
lahf
mov
inc
fdivr
push
(bad)
push
int3
cs
stos
movs
push
imul
pop
mov
push
movs
sub
sub
jg
test
or
jmp
pushf
not
add
call
test
dec
outs
ret
mov
and
outs
inc
cmp
shl
pop
sbb
adc
pop
in
pop
push
adc
xor
std
test
push
clc
cmp
(bad)
movs
push
mov
sbb
jmp
sub
mov
xor
dec
sub
clc
add
pop
xchg
(bad)
jp
lock
aaa
es
ficomp
xor
adc
int
adc
nop
mov
cmp
inc
mov
stos
sub
bound
ss
jb
push
cmp
mov
sub
push
jle
rol
or
jle
jmp
jl
imul
xor
stc
adc
stos
mov
movs
cli
rcl
sbb
int
mov
jns
or
inc
xor
in
in
loope
lods
xor
ins
repz
push
test
push
or
mov
push
adc
sbb
and
in
sub
call
and
and
add
movs
xchg
add
xor
pop
aas
push
fidiv
loopne
lock
std
adc
cmc
test
push
fcomp
out
leave
loopne
popa
or
imul
push
rcl
cmp
xor
cmps
out
movs
ret
ins
mov
inc
jge
mov
(bad)
daa
add
jl
dec
mov
psubsb
test
jo
push
stc
retf
(bad)
cmp
xlat
sti
cmp
hlt
jmp
daa
mov
retf
test
jmp
sub
xchg
sar
add
jns
and
popf
shl
xchg
scas
dec
je
mov
adc
dec
je
repz
rol
mov
mov
cdq
jo
sbb
xchg
jecxz
add
sbb
dec
ror
cmp
sar
cmps
ror
inc
fsub
sbb
je
jnp
je
ret
cmp
xor
ja
mov
jecxz
pusha
lea
faddp
cmp
clc
lods
jg
jecxz
adc
cmp
cmp
fucomip
xchg
pop
inc
scas
das
push
arpl
sub
dec
das
adc
pop
ds
cli
mov
adc
mov
sbb
cmp
xchg
retf
or
mov
adc
call
mov
ficomp
xor
inc
adc
adc
or
cmp
add
sti
ds
fsub
hlt
jmp
int3
xchg
cmp
jo
les
pop
or
cmps
cmps
add
mov
add
sub
das
stc
out
cmp
cmps
add
outs
loopne
add
xor
(bad)
jmp
or
xchg
mov
in
loop
sbb
xchg
scas
and
ret
inc
fimul
jb
mov
ins
ret
lock
outs
cmp
cmp
in
push
cmp
popf
mov
mov
and
push
std
jno
dec
rol
dec
cld
and
push
das
inc
imul
icebp
xlat
cmp
or
push
jne
fwait
add
cmp
punpckldq
xor
fist
jno
sub
mov
aam
jb
cwde
lock
mov
adc
mov
aas
or
gs
dec
aaa
adc
cmp
into
popa
adc
aas
add
pop
dec
cs
add
or
jno
imul
mov
sbb
popf
cmc
mov
mov
lahf
inc
push
and
adc
pop
ret
push
cmc
jg
bound
or
and
int3
test
push
sbb
js
xchg
pop
dec
dec
test
adc
cs
ret
int3
mov
jmp
jle
(bad)
in
push
push
movs
add
push
adc
(bad)
cmp
adc
icebp
rcl
xchg
outs
push
mov
scas
xor
sbb
call
adc
in
hlt
lock
inc
lar
xchg
mov
daa
movs
cmps
cmc
shl
stos
sbb
iret
ja
pop
(bad)
jmp
outs
cmps
or
ficom
cmp
sar
or
fadd
jmp
scas
ficomp
dec
aad
(bad)
jp
xor
aam
adc
aas
pop
in
push
push
jb
imul
adc
mov
adc
stos
stos
fwait
rol
pop
in
mov
mov
pop
das
jecxz
mov
or
push
inc
inc
sbb
adc
mov
mov
fcomp
(bad)
ins
push
outs
retf
or
lahf
fstp
and
push
call
and
lods
ret
fisubr
dec
xchg
(bad)
and
fbstp
cmp
jmp
inc
push
loopne
adc
dec
popf
test
mov
lods
aas
cld
pushf
or
sbb
mov
imul
dec
inc
cli
orps
xchg
or
inc
fld
aad
xchg
cmp
lock
stc
gs
jno
push
aam
xchg
mov
mov
and
das
dec
imul
lds
repnz
cmp
jge
sub
gs
adc
jmp
jb
stc
je
push
std
outs
cmp
lock
clc
repnz
cs
jb
test
mov
retf
test
je
xchg
xchg
pop
stc
jmp
daa
add
leave
in
rol
aam
cwde
stos
aad
loope
inc
bswap
aad
daa
scas
movs
mov
ret
jp
mov
inc
vaesdeclast
push
adc
jb
cld
jecxz
icebp
add
pop
in
(bad)
fisubr
mov
inc
aad
adc
iret
enter
jecxz
cmp
fwait
leave
in
sti
cmp
cmpxchg
call
jns
rcr
test
or
mov
xor
cmps
jp
mov
sub
xchg
pop
or
dec
gs
pushf
sbb
pop
lahf
mov
les
or
fidiv
(bad)
test
sub
pop
sbb
push
push
adc
xor
nop
jl
adc
sub
rol
or
hlt
mov
dec
add
mov
mov
call
push
cmp
and
push
xchg
sbb
adc
int3
mov
pop
pop
mov
pop
movs
mov
inc
mov
mov
jmp
jae
iret
fwait
or
or
mov
push
xor
inc
pop
push
rcl
loop
push
jo
popa
repz
pop
and
push
or
test
js
imul
mov
or
push
adc
add
pop
inc
push
push
(bad)
xor
test
aas
mov
stc
cs
(bad)
and
outs
cmp
cmps
dec
iret
or
cmp
jmp
inc
xor
jb
add
arpl
ins
cmp
scas
jmp
cmp
retf
inc
test
jae
movs
push
jbe
and
icebp
jmp
push
xor
and
test
jno
push
ror
out
xor
dec
stc
or
push
sbb
pushf
(bad)
add
loope
xchg
mov
mov
inc
cmp
add
lods
ret
or
rcr
aas
dec
(bad)
lods
xor
xchg
dec
push
fucomi
and
cmp
dec
mov
idiv
ret
retf
lds
mov
pop
hlt
cmc
dec
nop
inc
repnz
dec
aaa
pushf
addr16
(bad)
jns
cmp
push
push
daa
mov
(bad)
imul
rol
pop
leave
in
sub
mov
test
cmps
jp
cmp
inc
xor
xchg
add
or
aam
pop
pop
imul
push
div
sbb
call
cmp
rol
push
push
pop
sub
int
dec
jb
push
jo
rol
cmp
and
jne
jb
mov
xchg
(bad)
fisub
xchg
push
mov
xor
mov
pop
fwait
adc
imul
push
and
add
aad
mov
in
fbstp
xchg
data16
cmc
xchg
cmc
arpl
popa
cmps
xlat
movs
xchg
push
call
pop
clc
mov
cmc
inc
cs
or
mov
xlat
inc
(bad)
les
inc
pop
xchg
inc
and
movs
mov
add
add
sahf
push
fdiv
fs
or
mov
pop
dec
sahf
push
sbb
mov
inc
cdq
(bad)
idiv
out
test
stos
ja
mov
xchg
dec
jle
adc
idiv
dec
dec
fbstp
mov
push
stos
cli
dec
mov
hlt
or
sub
jns
imul
and
int
jns
stc
out
xchg
mov
mov
cmp
mov
rcr
div
push
repnz
das
sbb
sahf
xlat
adc
not
cmp
fs
je
stos
push
in
push
fst
js
popf
outs
pop
jmp
cmp
fstp
inc
jbe
mov
jae
add
add
jmp
jae
(bad)
jecxz
lahf
rcl
add
repnz
push
add
pop
fisub
xchg
les
loop
or
pop
movs
out
(bad)
mov
adc
test
scas
enter
dec
mov
fld
mov
xchg
sbb
push
mov
sub
pop
mov
jae
movs
js
jbe
inc
pop
(bad)
push
out
mov
iret
mov
xor
in
push
jne
jno
stos
push
pusha
(bad)
xlat
int
cmps
pop
cmp
std
mov
xor
sbb
dec
fisub
pop
mov
stc
jmp
dec
xor
pushf
mov
adc
fiadd
mov
mov
sub
adc
loopne
lods
fnsave
mov
sti
push
data16
or
leave
test
js
ficom
pop
push
adc
pop
mul
sbb
cmp
inc
dec
sbb
movs
shl
pop
int
loop
dec
addr16
inc
or
sub
sbb
int3
fwait
push
pushf
dec
call
movs
push
les
mov
cmp
inc
test
aaa
js
jge
imul
lods
jg
add
stos
enter
mov
cmc
test
mov
jns
xor
mov
and
mov
push
sbb
xor
stos
inc
(bad)
push
rcr
add
(bad)
cmp
loope
mov
scas
das
push
jns
jecxz
jg
jno
stos
retf
das
mov
dec
xlat
in
int3
call
idiv
idiv
pop
ja
pop
pxor
xor
cli
pop
xchg
mov
sbb
mov
jmp
hlt
ffreep
jns
xchg
jbe
pop
mov
(bad)
adc
out
les
loope
mov
sub
idiv
pop
ds
aad
ins
sub
pusha
sub
hlt
cmp
icebp
dec
ficomp
cmp
rol
repnz
ficom
call
adc
push
xchg
or
jecxz
scas
pop
movs
es
rol
cmps
pop
pop
vpandn
or
or
pop
jb
push
enter
aam
dec
inc
cmp
clc
mov
and
mov
aas
aad
mov
pop
push
inc
neg
push
xchg
shl
test
mov
and
fild
xor
in
mov
mov
inc
(bad)
jecxz
sbb
out
mov
sbb
mov
xor
(bad)
mov
out
or
aaa
leave
mov
popa
popa
mov
sub
xor
in
test
imul
inc
fs
loope
jb
jb
inc
xor
(bad)
mov
fsub
and
stc
nop
pop
cmp
js
popa
fstp
lods
out
or
iret
xor
push
mov
pop
popa
fwait
in
mov
jbe
movs
push
call
rol
hlt
in
leave
pop
mov
lock
dec
call
cmps
ror
xor
mov
or
fstp
fisub
cld
rcr
sub
adc
cmp
add
sar
push
xchg
stos
cld
lahf
xor
addr16
jp
dec
out
xchg
push
mov
sub
cdq
call
and
push
sub
ins
xor
jb
inc
cmp
and
or
mov
jg
pshufw
xor
(bad)
push
ds
push
mov
ins
or
call
and
repz
stos
push
arpl
jmp
and
clc
cmp
adc
mov
cli
mov
add
sub
ja
mov
mov
iret
aaa
std
inc
lods
fnstsw
mov
nop
scas
sub
aam
into
and
inc
sub
test
inc
or
pusha
imul
pop
jecxz
sahf
mov
test
push
call
xchg
lods
mov
bound
and
ss
xchg
sub
ror
shl
idiv
cmp
adc
mov
xchg
lahf
in
aaa
or
loopne
sbb
test
mov
lahf
fstp
pop
sub
mov
pushf
push
and
enter
cs
xor
mul
add
fmul
test
inc
sub
outs
int
xor
into
push
nop
add
jns
dec
sahf
movs
in
dec
add
sub
sbb
fs
adc
(bad)
stos
pop
cmp
dec
cdq
or
mov
jmp
loope
sbb
sub
mov
push
call
add
xchg
inc
mov
pop
inc
outs
cmp
jbe
mov
or
mul
push
mov
cmps
dec
mov
sub
lock
movlps
mov
clc
imul
pop
jo
mov
lock
pop
aam
out
dec
xchg
pop
not
fmul
test
dec
pop
pop
shr
or
push
and
add
xchg
or
mov
adc
add
xor
sub
icebp
push
fnstenv
mov
cmp
cmp
sahf
jle
(bad)
xchg
fwait
jbe
es
cmp
mov
aas
sahf
xchg
or
aad
push
sub
sar
wrmsr
push
scas
dec
push
fxch
sub
sbb
dec
ret
push
xor
lock
ret
mov
or
push
nop
sub
jo
rcl
pop
mov
int3
add
jge
retf
jecxz
mov
mov
mov
lock
xor
sbb
fdiv
mov
and
xlat
push
jecxz
push
sub
dec
jns
jns
shl
(bad)
sbb
loope
adc
fld
stos
and
adc
mov
dec
pop
pop
push
addr16
cmc
mov
push
lods
inc
adc
aaa
mov
test
imul
jno
lahf
mov
loope
(bad)
pushf
and
cli
or
int
fdiv
mov
push
scas
inc
stos
mov
push
scas
loope
jl
or
retf
adc
add
imul
sub
pop
mov
ds
retf
jge
xor
or
imul
push
loope
cld
xor
dec
push
iret
outs
das
inc
mov
cmc
add
(bad)
xor
mov
dec
out
hlt
mov
ss
cmp
lods
movs
call
jle
push
mov
rol
call
popf
mov
dec
ss
sti
xchg
movs
mov
lods
mov
int
outs
sahf
pop
dec
mov
mov
call
push
dec
imul
aas
cwd
cmps
jbe
fistp
nop
ror
pusha
in
imul
mov
lds
mov
mov
cmp
pop
and
rcr
adc
xchg
in
push
and
mov
xor
inc
jae
xor
mov
adc
test
gs
mov
dec
sti
stos
xchg
outs
lahf
mov
cmp
adc
mov
cmps
stos
jnp
(bad)
in
mov
(bad)
call
cmovp
out
add
and
in
cmp
jae
movs
sti
outs
push
test
ror
dec
cmp
mov
cmp
push
xor
pop
mov
add
sub
ret
imul
stos
sub
push
xchg
leave
push
push
cmp
out
scas
add
push
fstp
push
(bad)
xor
mov
jle
xor
and
mov
mov
adc
mov
jnp
pop
repnz
mov
and
bound
dec
dec
mov
mov
mov
lea
int
push
popa
and
and
into
cwde
add
cli
scas
mov
push
pushf
xor
sbb
sub
ins
add
stc
push
or
xchg
fild
pop
inc
mov
push
idiv
jmp
adc
aas
adc
inc
sub
jp
fnstsw
mov
or
jb
inc
or
mov
fwait
adc
cmp
retf
inc
mov
(bad)
cmp
inc
loopne
stos
sbb
jmp
neg
pop
mov
in
das
xor
clc
cmps
inc
clc
clc
jbe
test
cmps
(bad)
mov
mov
(bad)
stos
dec
xor
cld
inc
xor
xor
mov
js
test
(bad)
adc
imul
mov
leave
cmps
aas
mov
mov
adc
xchg
jmp
pushf
xchg
ret
add
mov
sub
xchg
jg
push
not
jg
fnstsw
(bad)
sub
sub
popa
xor
xor
push
das
rcr
test
or
inc
sub
push
ret
dec
jp
ss
aam
mov
aaa
pop
and
mov
ss
adc
pop
xchg
push
aad
(bad)
(bad)
arpl
and
jmp
lock
adc
xor
inc
add
pop
popa
pop
jmp
mov
out
adc
pop
push
mov
aad
push
sahf
sub
jb
fst
adc
sub
addr16
sbb
lds
cld
sbb
inc
in
rcl
jno
add
iret
inc
mov
test
nop
test
call
cmp
leave
push
lods
dec
movs
pop
jae
ins
stc
adc
jmp
fidivr
es
mov
add
cdq
push
mov
sbb
dec
xlat
gs
aas
call
add
add
cmps
scas
push
aam
pop
cld
dec
lds
pusha
dec
and
push
fidivr
adc
outs
or
and
xor
movs
scas
pop
add
aas
cmc
ret
sub
repz
lods
xor
mov
inc
ds
pop
or
cwde
pop
jb
pusha
mov
mov
jmp
push
fisubr
jbe
jmp
inc
cli
or
add
cmp
mov
lahf
cmp
add
into
mov
xlat
pop
push
and
shl
jo
jmp
fist
fisub
fimul
das
(bad)
jmp
jg
xchg
movs
loop
pop
cmp
pop
xchg
cmps
shr
and
or
not
dec
push
sbb
jle
sub
mov
arpl
xor
leave
mov
inc
and
sub
scas
cmp
push
daa
iret
mov
sbb
push
inc
adc
mov
pushf
int
shr
xor
fcomp
mov
adc
loope
xor
add
jae
sbb
push
or
sahf
jno
fucomi
cmp
rol
pusha
jbe
and
xor
add
ss
inc
es
sub
cmp
fisttp
icebp
cpuid
bound
lea
adc
test
dec
sub
rcpps
test
xor
sub
fs
sbb
and
sub
call
stos
call
pop
adc
dec
and
lahf
sbb
cmp
es
fist
cmps
mov
clc
pop
sbb
movs
aaa
aam
ret
fmul
out
jl
pushf
mov
mov
push
and
xlat
mov
daa
mov
jge
sbb
ja
test
add
and
scas
jmp
imul
inc
xchg
xor
(bad)
xchg
sbb
jmp
in
ins
pop
(bad)
sbb
lods
mov
jae
adc
retf
aam
cmp
shr
xchg
sbb
nop
jae
lds
sbb
retf
inc
pop
dec
mov
push
enter
jns
aas
fstp
push
subps
inc
ret
nop
nop
xchg
push
adc
not
push
push
ins
jbe
adc
inc
fcmovu
rol
movs
xor
aad
xchg
jmp
(bad)
push
pushf
adc
cmp
outs
pop
mov
jne
xchg
sub
ror
xor
call
mov
outs
fmul
mov
jmp
jbe
popf
repz
mov
mov
pop
mov
out
inc
jne
xor
and
rcl
out
mov
push
stos
cwde
stc
xlat
mov
clc
jmp
or
dec
fsub
push
or
js
sbb
and
imul
js
mov
aaa
push
xlat
inc
loopne
(bad)
dec
(bad)
adc
sub
or
adc
aam
fistp
ret
mov
imul
je
sub
mov
jb
jecxz
xor
pop
addr16
mov
mov
inc
lods
gs
pop
fbld
or
test
dec
es
pop
xchg
repz
pop
adc
test
mov
mov
sti
fdiv
pop
add
adc
sub
or
in
in
leave
xchg
rcl
xor
fst
sub
pop
in
retf
pop
scas
cmp
in
pop
pop
popa
idiv
xchg
or
repnz
mov
add
enter
ins
cwde
push
daa
push
sub
and
cli
pusha
mov
(bad)
sbb
sub
iret
icebp
jne
mov
mov
cwde
sub
ins
dec
mov
mov
inc
hlt
mov
xor
mov
sub
inc
(bad)
cld
inc
popa
and
jmp
mov
jle
dec
retf
push
add
(bad)
xchg
xor
out
xchg
jl
dec
pop
fcmovnu
sar
or
loope
sub
jmp
xlat
stos
das
jb
(bad)
sub
repz
test
scas
sbb
pop
shr
and
mov
lds
pop
out
or
add
fprem
inc
adc
in
call
ds
ins
js
mov
xor
cmp
leave
and
stos
mov
jbe
popw
pop
mov
cmp
cmp
push
stc
lods
pop
stos
adc
dec
or
loope
add
push
aas
mov
mov
pop
push
imul
sbb
xchg
bound
loope
mov
add
and
cld
mov
clc
js
or
jo
mov
and
mov
shr
xchg
mov
stos
rcr
adc
inc
cmp
icebp
jg
int3
aad
dec
std
mov
jnp
lock
adc
sbb
fild
xor
loope
xor
pop
jnp
cmps
sub
pop
test
push
dec
xchg
and
cmps
inc
sub
mov
add
and
test
test
sbb
iret
mov
out
arpl
gs
and
or
jle
mov
test
mov
es
je
cmp
push
lahf
inc
rcl
ffree
int3
sti
mov
xchg
in
xor
xchg
shr
add
xchg
leave
lahf
test
jnp
shr
out
sbb
shl
pop
ret
stos
dec
pop
das
inc
popa
aaa
jno
mov
retf
fcom
retf
sub
call
pop
jne
nop
or
mov
jl
inc
xchg
sbb
mov
jg
mov
mov
inc
call
ss
push
pop
mov
and
and
(bad)
call
adc
adc
jl
push
mov
pushf
pop
adc
sub
ins
mov
mov
pop
jp
inc
pushf
out
adc
mov
jl
or
jl
ror
aaa
addr16
pop
sub
in
ret
sub
xor
cmps
mov
mov
sahf
mov
call
jle
cmp
hlt
add
mov
sar
pop
and
adc
jmp
adc
test
aas
cs
cmps
jo
mov
sub
loope
sub
mov
jmp
outs
push
sub
adc
out
push
data16
sti
cs
fwait
sbb
mov
push
imul
stos
jge
inc
pminub
push
fwait
push
stos
xchg
jb
jecxz
xor
popa
inc
inc
stc
mov
xchg
and
fwait
(bad)
or
pushf
add
test
or
rol
js
pop
mov
xchg
mov
sub
xchg
cmp
gs
cwde
cmp
sub
push
shr
jno
sbb
nop
sub
jecxz
cdq
test
push
add
mov
jge
add
add
push
push
aaa
outs
and
push
test
aam
fist
mov
stc
movs
pop
xor
imul
iret
mov
(bad)
sbb
(bad)
add
icebp
outs
push
sub
jmp
xor
scas
shl
dec
inc
dec
cmp
jbe
retf
sub
jo
scas
push
in
jge
push
mov
mov
jge
(bad)
mov
inc
mov
cmp
jno
mov
jnp
xor
mov
push
and
lods
test
cli
or
inc
xor
adc
ja
sub
xchg
aam
loope
and
sub
sub
xor
lock
push
gs
inc
adc
fcomp
inc
out
sbb
mov
ds
adc
pop
mov
stc
vmwrite
(bad)
mov
test
pop
nop
inc
inc
fiadd
sti
pop
jae
or
cmps
out
scas
cmp
push
and
jnp
inc
add
jae
out
outs
sub
into
jne
mov
cs
int3
repz
push
or
sbb
ins
pop
enter
mov
ss
xchg
out
jb
out
dec
cmps
in
dec
clc
je
adc
cmp
sbb
arpl
adc
jecxz
jge
outs
mov
aad
ds
add
and
mov
xchg
push
icebp
add
loopne
rol
shl
addr16
hlt
ss
inc
enter
ins
lea
(bad)
retf
jle
xor
mov
sub
aam
int3
jge
pop
inc
sti
call
es
bound
ficom
pop
mov
icebp
cmp
push
pop
sub
xchg
xchg
bound
and
daa
push
jmp
pop
in
jmp
inc
hlt
pusha
fidiv
cwde
sti
inc
imul
add
mov
div
push
cli
jb
rcr
add
aaa
mov
inc
mov
sbb
mov
std
ss
inc
out
adc
pop
mov
push
jae
xchg
fidivr
push
add
pop
(bad)
movs
ficom
test
test
jmp
iret
in
pop
lock
cmp
push
jle
or
jnp
jo
mov
add
jns
repz
scas
rol
clc
imul
adc
sub
jb
sub
imul
cmc
sbb
inc
mov
repnz
mov
int
add
mov
mov
jbe
push
dec
cmp
mov
shl
pop
sub
movs
data16
ds
mov
xchg
stos
ret
sahf
sub
movs
js
and
push
xor
adc
jp
push
or
mov
jne
dec
cmps
cmp
lahf
xchg
int3
out
das
pop
(bad)
or
jg
lods
dec
out
jmp
cmp
dec
imul
add
cmp
dec
mov
mov
mov
mov
jp
fdivr
jmp
call
add
movs
sbb
dec
icebp
je
pop
leave
cwde
jae
aas
jp
jle
scas
int3
push
xchg
push
cwde
jne
sti
test
sbb
cdq
mov
aad
jl
mov
mov
inc
dec
pop
(bad)
dec
mov
or
xchg
add
sub
test
js
in
std
inc
pop
in
pop
jle
inc
add
jl
push
add
mov
inc
into
int3
aas
arpl
or
or
jmp
fnstcw
add
popf
adc
lds
mov
pop
retf
sbb
stc
jbe
inc
js
push
rol
cmps
cmp
fiadd
data16
test
pop
fsubr
rcr
jnp
imul
or
jno
into
ret
push
sbb
mov
or
xor
jne
imul
ins
xlat
sbb
icebp
mov
mov
lock
dec
push
imul
mov
mov
adc
imul
dec
enter
lds
sub
cdq
jg
xor
add
mov
dec
repz
jns
sahf
pop
mov
push
sub
xlat
mov
int3
jnp
dec
and
sub
aad
int3
les
cli
lahf
mov
movs
sahf
add
fs
ds
xchg
jl
sub
call
nop
cli
mov
movs
push
icebp
pusha
loop
mov
cmps
push
xor
sub
sahf
aad
mov
retf
icebp
mov
cs
(bad)
mov
xor
sar
jne
dec
pop
xchg
jo
popf
mov
call
cdq
popf
cmp
out
mov
(bad)
mov
add
loopne
scas
and
or
adc
push
arpl
outs
cmps
xchg
stos
add
ja
loope
in
xchg
js
sbb
mov
call
(bad)
xor
bound
addr16
ins
loope
(bad)
(bad)
out
gs
out
xor
adc
sar
(bad)
or
clc
xlat
push
(bad)
sub
addr16
or
(bad)
cld
je
or
aas
adc
js
test
stos
cmps
mov
mov
adc
xchg
jp
mov
adc
popa
or
xor
ror
fs
inc
cdq
xor
das
xor
push
fdivr
outs
mov
test
mov
leave
test
add
push
and
mov
and
cmp
movs
shr
mov
sahf
cwde
(bad)
dec
add
push
ja
jmp
push
outs
and
sub
in
adc
retf
mov
sub
adc
inc
add
ret
sbb
arpl
mov
or
jp
data16
jmp
pop
(bad)
adc
mov
pop
jg
adc
jb
and
je
ins
mov
movs
xchg
jl
adc
rcr
inc
and
icebp
mov
cmp
sti
in
icebp
scas
mov
repnz
mov
ins
xor
mov
inc
data16
je
clc
sub
jecxz
mov
lock
(bad)
mov
push
stc
dec
ftst
inc
and
jmp
ss
push
test
das
mov
dec
mov
or
adc
call
adc
jg
sbb
push
rcl
nop
dec
fwait
popf
pop
cmp
dec
ror
and
ja
neg
sub
xor
mov
add
int
push
addr16
rcr
inc
dec
mov
adc
jle
add
push
scas
and
ins
mov
jnp
sub
inc
pop
sar
adc
test
cdq
cmc
cmp
into
cld
clc
in
pop
mov
and
add
and
int
dec
test
sbb
inc
push
sub
push
cmc
inc
or
mov
push
data16
out
scas
fneni(8087
pop
stos
loope
add
xor
shl
or
les
sub
xor
stc
cdq
dec
jae
lods
iret
mov
xor
cmps
sbb
jmp
popa
repz
mov
push
and
inc
fdivr
(bad)
pusha
cwde
sbb
scas
dec
loop
or
hlt
mov
push
iret
lahf
scas
mov
jno
xchg
xchg
mov
adc
test
bswap
mov
jmp
push
in
add
sbb
femms
mov
ins
push
ins
jecxz
cmp
pop
call
pop
mov
cld
push
push
sbb
dec
cmp
adc
push
es
mov
ins
in
cmp
jns
movs
repnz
pushf
add
cdq
pop
cmp
jmp
cmps
out
cmp
mov
cmp
inc
or
push
inc
dec
dec
adc
xchg
inc
test
aaa
cmc
pop
xchg
(bad)
iret
or
push
or
sahf
or
and
cdq
mov
(bad)
jp
lock
imul
mov
stc
fist
or
xchg
iret
adc
jge
dec
in
inc
sub
inc
push
push
jmp
stc
mov
imul
adc
or
call
outs
ins
inc
jne
call
push
sti
adc
mov
movs
retf
repz
jno
jmp
popa
mov
pop
pop
int3
imul
in
mov
cld
sti
jb
inc
cmp
dec
hlt
dec
xchg
mov
pusha
bound
mov
iret
int3
mov
fist
mov
xchg
mov
fdiv
ficom
mov
lods
or
jl
pop
addr16
and
shl
cld
imul
retf
dec
mov
jmp
cmp
cmp
call
sub
in
pop
fst
adc
ret
rol
cdq
clc
adc
sub
mov
ins
xchg
(bad)
int
movs
sub
mov
ret
fs
arpl
retf
push
(bad)
add
outs
or
mov
xor
shl
mov
push
jge
lock
sub
pop
lods
pop
mov
add
cmps
mov
(bad)
lds
mov
(bad)
push
xchg
repz
jp
jp
xor
mov
sbb
sbb
push
inc
mov
cmc
outs
nop
adc
ins
cdq
loopne
pop
pop
and
cs
dec
jecxz
xchg
sub
rcl
adc
sub
jmp
imul
pop
sub
fstp
(bad)
out
cmps
aaa
jne
clc
(bad)
mov
jmp
sub
imul
into
outs
pop
hlt
mov
sbb
out
mov
call
test
fs
jmp
cmps
out
(bad)
jmp
mov
sbb
jle
dec
fst
test
push
rcr
cmp
movs
pop
xchg
and
std
cmp
stos
aaa
jge
in
mov
sbb
jns
mov
pop
inc
add
iret
repz
xchg
sar
cmp
ret
mov
mov
pusha
mov
pusha
fsub
(bad)
jo
dec
icebp
inc
mov
jmp
pop
xor
mov
xor
jae
xchg
inc
cs
xor
data16
aas
mov
loope
or
xor
xchg
rcl
out
sub
pop
mov
movs
lds
push
xchg
lds
ret
not
lahf
(bad)
(bad)
add
push
movs
(bad)
pop
xchg
jb
test
ja
dec
fld
pop
leave
es
pop
add
(bad)
xor
outs
repnz
inc
ja
mov
xlat
iret
xchg
adc
mov
dec
xor
add
add
aas
(bad)
dec
adc
test
cmp
std
sbb
push
test
mov
stc
add
jl
retf
xor
cmc
inc
outs
out
add
pop
test
mov
xchg
inc
inc
call
scas
mov
xchg
ja
(bad)
add
sbb
pop
xor
sub
jo
movs
out
test
mov
das
sub
clc
pop
(bad)
add
jns
mov
mov
cmp
and
sbb
cmc
jmp
xchg
adc
lods
and
pop
fbld
inc
jl
fild
dec
movs
les
sbb
aad
mov
fsubr
xor
rol
fwait
xchg
xchg
jo
pop
xor
inc
(bad)
xor
jecxz
pushf
adc
xchg
add
push
cwde
pushf
inc
in
scas
inc
std
add
jne
mov
and
push
jo
ins
mov
adc
daa
repnz
call
and
xor
mov
shl
or
in
in
ins
xor
(bad)
jae
int
jb
outs
and
mov
iret
dec
scas
push
pusha
adc
add
xchg
leave
mov
push
cwde
aam
mov
test
fwait
stos
imul
xlat
pop
dec
loope
cmc
out
fs
mov
inc
shl
cmp
movs
outs
pop
dec
xor
mov
retf
jmp
jae
pop
adc
push
rcr
ret
jp
repnz
loope
outs
adc
mov
cmp
adc
sbb
retf
mov
dec
cmp
xor
mov
xor
add
mov
jle
retf
sbb
icebp
mov
mov
add
stos
jmp
call
xchg
(bad)
pop
jo
in
mov
movs
mov
pop
xchg
inc
push
adc
in
mov
repz
jmp
cmp
(bad)
adc
imul
sbb
stc
imul
sub
shr
push
jg
cli
test
mov
in
cli
mov
bound
shl
add
or
out
lods
in
and
aad
iret
jmp
jbe
jmp
jno
xor
sbb
sub
rcr
pop
mov
neg
mov
clc
push
cmc
xchg
mov
add
std
pop
rcr
rcr
daa
mov
push
push
hlt
stos
cmp
push
cmp
or
leave
jmp
sub
mov
in
jmp
cs
mov
outs
or
cmps
add
push
mov
jo
popa
sbb
inc
inc
add
cdq
mov
mov
mov
jns
cmc
stc
enter
mov
sti
cmc
lahf
data16
popf
out
montmul
cmps
or
mov
jecxz
cmc
loop
sbb
into
in
fmul
inc
xchg
xor
dec
sbb
pop
pop
(bad)
out
jp
imul
repnz
fcmovnbe
lods
mov
fnstsw
(bad)
out
and
mov
dec
stos
adc
test
xlat
test
mov
or
fs
int
test
fldcw
mov
fst
hlt
mov
xor
push
rcr
xchg
mov
aas
adc
test
inc
sbb
xchg
(bad)
pop
push
mov
clc
pop
sbb
jp
call
add
movs
sahf
cmps
mul
jno
inc
cmc
mov
jge
jno
mov
dec
test
loopne
fwait
jmp
xor
inc
xchg
scas
bound
sub
sub
xchg
ret
jmp
loope
(bad)
aam
bound
dec
mov
xor
dec
js
mov
cmc
dec
mov
xor
(bad)
(bad)
(bad)
xchg
test
imul
mov
jne
out
jmp
sub
inc
cmp
scas
pop
and
shl
mov
bound
movs
mov
mov
pop
mov
test
add
lds
mov
pushf
aaa
rol
ss
inc
dec
adc
pop
call
ja
xor
and
push
sbb
pop
and
and
sti
push
mov
mov
adc
leave
sahf
in
scas
push
icebp
jp
dec
std
imul
rcr
aad
mov
mov
scas
jmp
pop
mov
cmp
bound
hlt
enter
and
adc
mov
jle
push
or
add
pop
loopne
mov
jmp
dec
sbb
lahf
and
cmp
pop
push
out
repz
imul
imul
push
popa
int3
pop
xchg
adc
jp
or
out
jnp
loope
pushf
push
push
push
or
fsubr
mov
sub
push
daa
mov
loope
pop
out
movs
lods
mov
add
mov
mov
xchg
pop
xlat
fistp
xchg
xchg
and
jmp
and
outs
inc
add
leave
jb
popf
adc
fwait
mov
addr16
cmp
les
fisub
xchg
adc
outs
pop
rcl
add
bound
inc
dec
sar
mov
dec
dec
jmp
or
push
pop
push
cmp
fdivrp
sub
mov
adc
mov
stc
imul
pop
jb
xlat
shl
shr
lea
dec
inc
mov
dec
add
xchg
(bad)
aaa
fstp
mov
adc
lahf
add
sbb
jmp
dec
pop
sahf
mov
cwde
add
sbb
call
sbb
push
pop
xor
push
ins
lods
sub
movs
or
push
mov
mov
shr
es
xchg
dec
pushf
adc
jo
aam
sub
shl
jnp
scas
mov
sar
push
sub
into
int
cld
data16
mul
inc
inc
xor
fdivr
mov
jne
jne
xchg
fsub
add
ror
inc
jo
into
std
sub
xor
mov
add
inc
jecxz
int3
je
mov
sbb
lea
mov
lock
cmp
ins
stc
scas
and
ins
ds
inc
add
jbe
nop
sub
xchg
fldenv
retf
jmp
mov
dec
leave
cmp
fxch
pop
mov
fcomp
cmp
out
in
jmp
jmp
int3
inc
xchg
pushf
fsubr
adc
push
mov
xchg
fwait
call
(bad)
xor
xor
push
xchg
pop
int3
repnz
pop
mov
fcomp
js
cmps
js
or
into
pop
pop
cmp
ins
data16
lods
jecxz
push
repnz
xor
lods
jbe
mov
mov
rol
jg
ret
daa
and
mov
jb
clc
inc
adc
arpl
inc
daa
loopne
mov
retf
(bad)
dec
out
mov
pop
ja
fdivr
movs
int
sub
sub
repnz
sub
xchg
jbe
mov
popa
fwait
clc
je
enter
ret
cmp
jbe
mov
mov
imul
popf
aam
push
mov
into
sbb
stos
mov
into
daa
sbb
inc
int3
cli
push
mov
movs
neg
push
test
xchg
cdq
fmul
jns
lea
pop
sub
push
loopne
aam
mov
adc
int3
mov
ror
aas
outs
mov
xchg
sbb
fs
lahf
out
outs
jae
sar
outs
sub
cmp
pop
or
shr
cmps
outs
aam
dec
inc
mov
cli
les
pop
and
push
popf
mov
aaa
shr
push
jo
call
fwait
cmp
mov
les
xchg
in
lahf
sub
call
pop
cmp
loop
cmp
inc
cmp
mov
jbe
(bad)
lahf
nop
sbb
cld
aad
xor
(bad)
out
sub
sti
pop
add
std
iret
or
xchg
dec
idiv
stos
loopne
stos
mov
jo
fwait
mov
cmps
ds
popa
fwait
pop
mov
inc
jo
daa
ins
mov
mov
test
dec
and
cmp
ret
sti
ins
imul
out
loope
and
pop
cld
xchg
aad
push
stos
aad
push
sbb
cmp
loope
inc
xchg
and
lock
mov
sbb
call
add
and
fisttp
xchg
lahf
ins
or
sub
popa
pop
enter
(bad)
out
cmp
push
rol
fs
xor
shl
call
mov
inc
mov
xor
xor
daa
push
cmp
repz
(bad)
sub
sub
cmc
mov
cmp
xchg
mov
popa
or
sbb
dec
cmp
movs
cmp
add
aam
call
and
jo
sbb
push
add
xchg
ret
inc
addr16
dec
inc
xchg
mov
xchg
cs
das
icebp
movs
loopne
pop
sar
and
loope
ja
in
push
sub
movs
xchg
ins
inc
xchg
mov
mov
push
pop
pop
jns
retf
scas
xchg
mov
cwde
adc
xor
shl
stc
mov
jno
jmp
dec
mov
sbb
cwde
std
les
dec
cmps
mov
push
cdq
jp
jae
pop
lahf
xor
jno
daa
jbe
int3
mov
sbb
push
inc
sub
popa
cmc
aam
ins
xchg
jo
ja
sbb
pusha
xchg
imul
push
sahf
push
push
fbld
pusha
sbb
pop
imul
nop
popa
adc
mov
das
sub
imul
ins
adc
lock
stc
lods
fiadd
cs
pop
jmp
or
in
shl
nop
test
jne
adc
(bad)
push
retf
sbb
addr16
adc
push
lds
jmp
pop
mov
inc
cmps
dec
test
xor
frstor
sub
repz
inc
push
mov
push
movs
aaa
dec
jecxz
xchg
mov
in
mov
inc
aad
pop
jne
push
das
stc
jmp
clc
xor
sahf
sub
repnz
xchg
mov
mov
je
xor
xchg
inc
push
and
sbb
or
je
mul
mov
cmp
mov
icebp
push
mov
popf
push
cmps
xchg
adc
test
div
mov
loope
push
fldcw
mul
aaa
jmp
fbstp
jmp
aad
inc
inc
outs
cmp
sub
cmp
lds
cwde
push
inc
fcmovbe
xor
sub
fldcw
sbb
add
and
push
dec
jae
popa
cmc
scas
fbstp
popf
cmp
fild
retf
js
(bad)
enter
or
mov
push
xor
mov
push
jbe
push
pop
or
mov
stc
mov
jle
pop
psrld
neg
jge
js
lods
and
lods
sbb
shr
xchg
test
mov
sbb
push
add
into
mov
xor
jle
sbb
addr16
add
les
cmp
push
jnp
cli
sbb
ins
ds
jmp
and
mov
(bad)
call
out
pop
xor
mov
xchg
(bad)
xchg
add
mov
cmp
rcl
and
inc
push
ins
shl
cmp
fild
into
mov
mov
cmp
lods
push
out
dec
push
fcom
shl
bound
mov
push
adc
xchg
jl
pop
or
fld
je
ins
sbb
ds
nop
sahf
mov
mov
mov
sub
inc
sbb
fistp
fst
mov
add
push
adc
jne
(bad)
xor
loop
sbb
or
cmp
call
push
test
in
mov
pop
mov
adc
cmp
sub
test
sub
ins
cmp
add
cmp
loope
push
add
test
data16
je
ins
add
mov
push
stos
je
pop
aaa
or
dec
mov
jne
xchg
sbb
movs
out
aad
test
movs
and
sub
xchg
call
pop
push
add
inc
jp
test
sbb
leave
jl
mov
pop
int3
neg
ror
mov
shl
adc
ret
push
xchg
call
leave
scas
mov
push
cmp
push
xchg
test
mov
mov
cmp
(bad)
push
push
cmps
inc
neg
loope
sbb
xchg
fwait
pop
cmc
outs
sub
jmp
sti
cmc
or
bound
cmp
pop
fs
cmp
adc
es
movs
jp
mov
popa
(bad)
rcl
inc
pop
loopne
ret
push
and
pop
cld
inc
adc
jmp
adc
in
mov
shl
leave
xlat
pop
jmp
pop
dec
enter
jae
and
mov
jne
mov
inc
cmp
inc
dec
imul
mov
cmc
adc
jbe
call
mov
dec
ja
or
out
cmp
out
ret
out
sub
fnsave
dec
imul
out
cmp
outs
push
cmps
jg
and
inc
and
xor
dec
mov
test
add
push
xchg
cmp
dec
push
cld
ja
jge
cli
gs
hlt
xchg
dec
add
add
in
add
pop
mov
mov
cmps
xchg
and
pusha
aaa
sub
jns
stos
jae
test
push
aam
mov
xor
je
jno
mov
cwde
mov
ins
add
push
movs
dec
cmps
xchg
push
xchg
in
ret
(bad)
mov
mov
test
repnz
xchg
ja
sar
in
jg
movs
and
imul
pop
xor
mov
xchg
add
mov
(bad)
int
nop
data16
or
xchg
sbb
jb
out
ss
push
xor
add
and
cmps
popf
cmp
mov
sub
test
push
or
mov
jno
aad
lahf
call
mov
adc
jmp
loope
dec
jp
inc
xor
shr
into
dec
sti
lds
add
jb
pop
ins
out
jle
sub
iret
jo
mov
or
jmp
stos
pushf
cmc
xchg
(bad)
add
pop
xor
leave
cmp
xchg
pop
call
jmp
cdq
je
jle
dec
in
cs
test
loope
(bad)
std
xchg
retf
rcr
and
iret
ins
mov
hlt
adc
xor
push
and
pushf
out
jp
adc
sbb
retf
sar
stos
jmp
cmps
or
pop
xor
into
pop
jb
jns
fmul
into
push
cld
jns
idiv
icebp
fisubr
dec
aam
add
out
sbb
xor
hlt
xor
lock
sbb
push
sub
jge
dec
cmc
dec
test
add
(bad)
mov
stc
or
iret
push
jecxz
push
push
mov
sbb
dec
xchg
mov
aad
pop
xor
jp
retf
push
cmp
and
dec
jge
cmp
jp
xor
aam
scas
movs
aas
test
mov
push
hlt
data16
push
mov
out
pusha
or
mov
bound
sub
and
and
mov
(bad)
out
sar
retf
inc
ss
fs
jge
xchg
sbb
xor
cli
cmp
dec
test
mov
test
out
inc
in
push
push
mov
fstp
cmp
rcr
retf
out
enter
loope
rol
lods
adc
mov
ficom
(bad)
call
xor
push
pop
adc
fsubr
sar
imul
jecxz
dec
mov
jno
(bad)
mov
mov
loope
sbb
int3
out
push
outs
mov
jno
jno
cli
xor
mov
inc
cmp
jg
or
movs
fwait
pop
lods
jae
push
push
mov
sbb
icebp
dec
push
in
mov
sub
dec
into
xchg
lds
jns
jo
popf
adc
ss
retf
loopne
mov
jmp
dec
test
fild
call
ret
jecxz
aaa
ds
xchg
push
sbb
xor
mov
jle
jbe
shl
(bad)
cmp
sbb
imul
or
xor
push
jb
test
in
sbb
pusha
aas
mov
adc
mov
adc
ss
xchg
(bad)
ficom
arpl
push
jmp
test
xchg
lods
jmp
mov
ds
xchg
fiadd
add
jno
cwde
dec
(bad)
mov
repz
dec
je
mov
cmp
(bad)
mov
ins
and
scas
cs
sub
lods
jo
or
das
not
jo
ret
cmp
push
ja
mov
xchg
into
fadd
js
dec
mov
lods
cdq
inc
adc
ss
push
add
ret
xchg
sbb
(bad)
clc
pop
adc
pop
ror
bound
rcl
push
xchg
mov
les
mov
lock
std
inc
shr
pop
sbb
jne
rol
stos
in
stos
or
jbe
jle
ins
lods
mov
sub
cdq
das
lods
sub
sar
outs
out
stos
jmp
xor
int
in
jae
xor
xor
inc
ror
sub
jecxz
inc
fwait
(bad)
leave
pop
add
jo
adc
fmul
out
int3
fwait
(bad)
mov
inc
jmp
arpl
jnp
and
push
jbe
data16
lds
xlat
dec
rcl
push
xor
cmc
cmp
push
dec
aas
sar
out
xchg
inc
int
and
xor
jle
imul
add
or
push
lds
jo
sub
jae
int
sub
ret
mov
mov
stos
ret
cld
fmul
das
cmp
push
out
popf
or
sub
jle
ds
sub
pop
loope
jge
iret
retf
cmps
or
rcl
retf
and
mov
jno
into
add
pop
jo
add
fwait
xor
test
adc
sti
sbb
adc
sbb
test
mov
push
cmps
(bad)
(bad)
(bad)
dec
retf
jge
add
add
push
jae
sbb
pusha
or
mov
in
scas
ins
or
test
ins
dec
out
add
xor
rcl
add
cmp
sbb
test
scas
movs
stos
cmp
pop
nop
add
movs
dec
(bad)
daa
test
push
(bad)
cmp
or
xor
mov
es
ret
stos
aaa
push
lods
sub
and
dec
sahf
and
in
nop
jmp
js
call
push
push
inc
sub
mov
xchg
sub
ret
lds
neg
mov
push
lods
imul
retf
cmp
cwde
sub
jae
xchg
mov
fld
adc
jnp
data16
in
clc
lock
adc
arpl
fwait
(bad)
xchg
sub
jb
leave
sahf
xchg
inc
clc
or
sbb
shr
jo
dec
mov
mov
icebp
stos
sbb
and
inc
xor
pusha
int3
xor
mov
or
and
sbb
mov
loop
cmp
scas
adc
sbb
scas
lahf
sub
mov
push
sub
adc
test
jbe
pop
or
aaa
push
or
ss
fmul
cmc
push
lock
mov
push
mov
test
pop
ret
add
and
xchg
xor
ret
out
retf
or
and
cdq
pop
je
adc
outs
xor
std
xor
and
fadd
leave
mov
repz
add
arpl
imul
or
sti
xchg
or
popa
adc
mov
push
dec
(bad)
xchg
ja
inc
ins
dec
pushf
mov
imul
neg
ins
es
mov
clc
sbb
jb
loopne
mov
aaa
push
push
bound
mul
mov
sub
imul
pop
popf
loopne
cmps
cwde
(bad)
ins
add
cmps
out
add
test
(bad)
adc
xchg
push
mul
jp
lahf
xlat
test
cmp
push
mov
psadbw
mov
hlt
mov
lods
add
inc
push
dec
push
jl
dec
or
add
adc
push
inc
inc
xor
(bad)
fidivr
xor
pop
into
push
repz
adc
sbb
fwait
dec
add
stos
mov
sbb
js
stos
or
xchg
cmp
push
jne
xchg
pop
imul
jmp
lock
xchg
fimul
sti
ins
stos
or
sub
icebp
sti
jo
cmp
dec
loop
mov
sub
mov
or
test
jl
iret
scas
enter
mov
and
mov
repnz
nop
xchg
mov
sub
movs
gs
jl
leave
mov
pop
in
mov
pop
lods
mov
js
mov
and
pop
adc
and
cli
outs
sub
mov
pop
add
or
jmp
sahf
hlt
aas
aaa
cmp
push
dec
inc
jl
loopne
or
clc
pop
xchg
popf
cld
mov
daa
rol
in
sbb
popa
repnz
pop
fs
inc
inc
test
idiv
xor
dec
add
mov
int3
jmp
push
lods
imul
sbb
sub
popa
rcr
aad
not
sbb
sbb
sub
mov
pop
out
cmp
mov
sbb
cmp
sub
cmps
inc
xchg
adc
fstp
inc
or
and
or
nop
fadd
mov
leave
or
push
sub
ss
xor
aad
or
and
inc
jle
retf
enter
scas
mov
les
cdq
and
adc
out
mov
test
std
inc
jnp
jecxz
enter
push
stc
add
(bad)
fisttp
(bad)
lods
mov
loope
mov
mov
push
or
shl
fnstsw
push
cmp
sub
mov
pop
mov
and
jg
sbb
and
into
rcr
jge
imul
push
repnz
int
mov
es
aad
cmps
push
jge
push
dec
mov
test
add
fild
push
adc
popf
sub
xchg
shr
mov
cmp
pop
les
aam
fisttp
jo
fild
cwde
adc
pop
and
xchg
push
inc
cmps
xchg
pop
sub
ins
movs
xchg
push
pop
in
mov
cmps
sbb
outs
pop
xor
cmp
cmp
ins
push
xchg
inc
leave
out
mov
inc
in
inc
pusha
repnz
cmc
je
pop
or
jno
xchg
ds
and
sub
adc
add
xor
or
(bad)
mov
or
push
lea
inc
cmp
out
icebp
sbb
fadd
and
das
aaa
push
hlt
addr16
mov
retf
dec
(bad)
cli
bound
into
mov
dec
sbb
mov
mov
mov
and
pop
repnz
dec
xchg
gs
or
test
xchg
inc
inc
and
jl
nop
mov
loop
xor
push
adc
ror
adc
mov
push
mov
clc
push
pop
sti
pop
and
faddp
out
test
xchg
ror
aad
(bad)
add
mov
xchg
cmc
int
push
lock
(bad)
mov
cmps
xor
push
lods
(bad)
(bad)
ja
das
ret
jne
xchg
loop
loope
in
xchg
or
shl
mov
fbstp
pop
jle
iret
popf
lods
xchg
iret
das
test
(bad)
fiadd
rol
jp
jns
xor
shl
in
dec
sub
mov
pusha
(bad)
mov
mov
cli
sbb
not
adc
stc
lea
dec
jae
test
mov
jns
dec
pop
(bad)
ja
fld
mov
or
int3
mov
sbb
jo
inc
mov
stos
lahf
ins
cmp
push
cmp
imul
and
add
and
sbb
jne
adc
sub
int3
test
sub
test
mov
addr16
or
xor
ins
cwde
nop
fdivr
pop
add
cmp
or
mov
mov
enter
pop
mov
(bad)
xor
xchg
aad
push
mov
out
push
and
call
out
lds
sbb
mov
imul
mov
or
mov
addr16
in
leave
sbb
ins
or
std
inc
loop
pop
cmp
ja
and
fdiv
jg
sub
xchg
(bad)
sbb
adc
scas
xchg
mov
unpcklps
ja
outs
or
push
jmp
inc
xchg
sbb
xor
pop
test
pop
rcr
cli
idiv
popa
in
cmc
arpl
dec
mov
add
out
xchg
les
mov
sbb
imul
and
fdivr
mov
xor
(bad)
(bad)
and
or
daa
mov
dec
ins
xchg
pop
in
pop
or
cmp
ret
mov
test
jle
rcl
or
loopne
stc
fidiv
xchg
jns
add
scas
addr16
(bad)
aad
mov
xor
sar
jmp
xchg
inc
dec
sbb
mov
xor
outs
sub
xchg
inc
dec
out
scas
adc
inc
xchg
lds
dec
out
es
ins
or
inc
pop
mov
loope
dec
push
inc
dec
sub
es
fs
add
mov
mov
movs
jp
xor
mov
add
pop
iret
push
push
clc
inc
(bad)
adc
push
xor
hlt
daa
xchg
es
inc
mov
bound
ins
pusha
xor
xchg
out
xlat
div
scas
inc
pop
fadd
sbb
shl
ret
neg
shl
inc
push
in
push
addr16
out
neg
dec
and
push
sub
in
jo
adc
cmps
outs
and
and
cmp
cdq
mov
add
sbb
mov
daa
jg
sahf
stos
jmp
fstp
sub
(bad)
daa
jo
fwait
int
pop
sbb
jl
add
out
fsubr
in
mov
dec
push
cpuid
pop
ja
jb
xchg
add
cld
popf
das
mov
sub
movs
inc
out
pop
jecxz
(bad)
xchg
(bad)
fisubr
xor
fisttp
cmp
fidivr
push
adc
out
push
push
cmp
lock
stos
out
and
pop
xchg
std
imul
mov
dec
rcr
cwde
sub
cmp
inc
repz
xchg
pop
clc
test
cmp
neg
lods
add
ror
add
jecxz
sub
mov
inc
out
int
lea
lods
in
mov
cmps
repnz
push
pop
pop
stos
pop
add
mov
cmps
xchg
push
lahf
ror
cmps
int
add
xchg
daa
fxch
xchg
xor
or
jno
hlt
or
je
add
xor
xchg
ins
cmp
hlt
dec
or
push
dec
mov
in
jg
push
pop
jb
adc
call
mul
and
test
jae
jno
fidiv
mov
mov
fsubr
add
stos
adc
push
sub
(bad)
sbb
ds
mov
xchg
push
sub
add
xchg
sbb
popf
cmps
ror
shr
test
adc
push
sbb
hlt
mov
repz
inc
sbb
aad
test
out
adc
add
mov
mov
sub
dec
test
je
popf
xchg
dec
mov
push
movs
test
daa
(bad)
mov
sbb
call
js
(bad)
xchg
cmp
rcl
mov
(bad)
add
xchg
inc
push
in
out
xor
mov
fs
das
out
jp
mov
test
outs
cmp
cwde
jae
or
out
fmul
adc
lahf
or
das
dec
cmp
mov
loopne
mov
sbb
or
mov
mov
lock
cmp
jmp
cmps
test
jb
push
test
pop
(bad)
icebp
fist
into
cdq
xchg
jg
int
hlt
(bad)
push
mov
inc
jp
xor
fnstcw
jo
xchg
add
pop
sbb
mov
je
adc
jo
jecxz
jge
es
inc
mov
cmp
add
aad
cld
arpl
or
rcr
sqrtps
inc
adc
in
and
retf
aaa
cli
arpl
push
fld
dec
and
mov
add
xor
cwde
sbb
lock
fnstcw
mov
inc
int
mov
sar
repz
pop
mov
addr16
aaa
stos
test
inc
push
enter
dec
scas
push
aad
test
call
jecxz
ror
sub
dec
mov
cmps
sahf
pop
ret
jecxz
loop
cwde
loope
adc
(bad)
push
xor
in
push
xchg
dec
pop
ins
push
inc
mov
xor
popf
add
jnp
shl
lds
push
mov
ss
push
jbe
pop
scas
sub
push
rcr
enter
sub
loopne
adc
jno
les
sub
sbb
jge
pop
push
sub
dec
iret
(bad)
int3
adc
inc
adc
push
or
hlt
ficomp
cmc
cdq
das
mov
sub
add
and
inc
add
ds
jmp
jp
repnz
inc
es
push
xchg
sub
repnz
test
arpl
test
(bad)
sub
clc
ret
sbb
ja
ins
xor
inc
mov
dec
sahf
lods
in
add
call
fucomip
xchg
sbb
(bad)
rol
push
out
xchg
and
test
test
div
fcomp
pop
(bad)
retf
aam
call
mov
sti
xchg
pop
jg
sbb
cmps
cmp
add
xchg
and
ret
sub
fidiv
aad
inc
push
movs
call
push
outs
xchg
das
shr
div
js
lock
fist
rcr
mov
add
pop
int3
add
call
(bad)
mov
add
cmps
test
fistp
push
retf
cmc
dec
push
adc
add
jns
inc
stc
test
xchg
mov
inc
(bad)
(bad)
pop
and
in
add
sub
clc
mov
out
lock
arpl
xchg
fdiv
jbe
(bad)
test
cmp
dec
enter
jne
out
cmp
xchg
sub
dec
int
(bad)
sar
iret
jb
cmp
adc
and
scas
mov
pushf
jg
int
int
xor
push
iret
cdq
fs
pop
js
and
loop
stos
inc
popf
ficom
mov
movs
jge
push
fcmovne
je
(bad)
mov
dec
ds
mov
sti
xchg
mov
jbe
clc
jae
mov
or
popa
push
lea
push
lods
sbb
cmps
movs
nop
fwait
bsr
mov
stos
xchg
jnp
test
and
test
adc
cmps
add
pop
ins
out
out
push
pop
cld
(bad)
ins
jg
cmps
push
ja
pop
les
sub
aaa
imul
mov
repnz
stos
push
in
into
out
rcr
mov
pushf
cmp
jbe
pop
or
xchg
inc
push
dec
and
dec
dec
add
loopne
mov
test
scas
cmp
jge
xchg
cmps
leave
mov
adc
inc
imul
outs
adc
sahf
and
daa
lods
pushf
xchg
mov
aam
mov
mov
js
dec
inc
mov
jb
loopne
push
arpl
sub
push
lahf
jp
push
sbb
jmp
mov
ror
mov
mov
movs
mov
inc
cmps
cdq
shr
in
mov
mov
aas
movs
je
cmp
mov
lds
int3
mov
imul
and
cmp
cmp
xor
fmul
mov
mov
cld
adc
sub
xchg
(bad)
xor
loope
or
cmc
push
jg
sbb
inc
cmps
outs
jge
fwait
sbb
loopne
bound
sti
inc
xchg
std
mov
icebp
movs
xor
or
(bad)
adc
adc
xchg
xchg
cmp
test
mov
popf
shl
jp
pop
into
cli
and
daa
xchg
cmps
cs
call
xor
pusha
xchg
dec
mov
call
mov
add
sti
adc
daa
(bad)
gs
(bad)
inc
test
jb
push
mov
inc
mov
adc
pop
xor
ficom
in
pop
pop
(bad)
call
enter
cmp
jecxz
test
push
and
mov
pop
out
xor
dec
shl
add
or
fdiv
sub
mov
ins
repnz
xchg
mov
enter
xor
jb
mov
push
xchg
ins
push
dec
mov
or
jbe
fs
shl
(bad)
loop
mov
scas
je
call
pop
push
inc
adc
mov
pop
jl
xchg
dec
push
fwait
int3
cdq
push
jnp
addr16
add
ret
out
cmp
pop
or
sar
mov
test
imul
sti
inc
sahf
mov
mov
(bad)
xchg
or
inc
stos
mov
mov
fild
dec
mov
loop
cwde
adc
sub
out
inc
inc
jle
add
ds
into
dec
pop
fisttp
shl
mov
mov
cwde
xlat
cli
push
daa
adc
pop
scas
mov
popa
(bad)
jp
cdq
mov
fmul
push
and
rcr
sub
mov
fist
ss
js
out
in
div
test
adc
cmp
fmul
fcmovnb
push
addr16
out
in
xchg
sub
dec
mov
retf
add
hlt
call
mov
sbb
int3
and
sbb
cmps
scas
std
or
dec
fdivr
out
jp
pop
cmp
cmp
push
dec
mov
les
jecxz
in
pop
pop
inc
movs
dec
stos
mov
rol
jns
das
dec
mov
in
ja
sbb
out
and
push
pop
pop
add
iret
push
fcmovnu
retf
push
out
add
adc
ret
mov
cmp
lea
xchg
mov
lahf
inc
enter
inc
xchg
(bad)
adc
in
int
lea
in
retf
mov
sbb
inc
jne
ror
adc
cdq
and
pop
dec
and
cmp
inc
push
call
jp
lds
mov
lock
adc
dec
sbb
das
out
or
push
fisub
pop
ins
sub
push
jg
or
and
and
inc
push
sub
nop
sub
pop
dec
cld
jmp
pop
fimul
ror
mov
xchg
jle
xchg
ret
cmp
mov
inc
ror
or
pop
xor
adc
xchg
pop
bound
push
mov
popf
push
imul
out
add
in
rdmsr
dec
fs
pop
mov
lahf
ds
test
mov
jge
inc
pop
dec
stc
push
mov
test
sub
mov
sbb
shl
push
ficom
xor
push
mov
fcom
in
xlat
imul
ret
sahf
inc
inc
xchg
lea
fcmovnu
scas
mov
and
sub
pop
cmp
ret
outs
inc
inc
fdiv
sub
in
enter
sbb
in
push
repz
cmp
(bad)
enter
in
ss
sbb
(bad)
ins
add
mov
or
inc
imul
mov
loopne
inc
sbb
imul
shl
cmp
adc
adc
cmps
jge
sub
loope
(bad)
xor
movs
and
dec
int
popf
dec
(bad)
mov
sbb
push
cmp
in
sbb
or
xchg
scas
mov
pop
cmc
xchg
mov
in
(bad)
js
or
or
std
fucomip
xchg
inc
cwde
xor
mov
xchg
bnd
shr
ret
xor
pop
(bad)
pushf
cmc
mov
inc
in
rcr
popa
sub
outs
xchg
fsub
push
cld
cbw
pop
fs
xor
iret
popf
jl
xchg
mov
ret
mov
scas
mul
test
int3
test
retf
movs
sub
sbb
jmp
jg
fst
xchg
sub
mov
push
inc
int
jae
jmp
popf
mov
call
add
outs
ret
into
dec
dec
inc
cmp
cmp
cdq
pop
(bad)
mov
push
cwde
push
cmps
mov
test
mul
inc
rcr
in
inc
icebp
jns
adc
or
fnstsw
frstor
sub
pop
inc
lock
or
sub
mov
pop
push
rol
mov
test
pop
pop
sbb
mov
outs
jg
out
scas
or
or
inc
pop
fisub
pop
push
loopne
scas
out
add
popf
jle
(bad)
shl
and
sbb
es
jbe
adc
cmp
push
mov
xor
jb
sbb
mov
mov
cmp
repnz
das
and
sbb
data16
stos
mov
mov
call
arpl
jge
aaa
adc
repnz
lds
in
sbb
sbb
nop
mov
mov
cmps
js
stos
adc
aad
je
ffree
pop
je
sbb
enter
cwde
xchg
jbe
mov
repnz
sub
push
out
inc
push
pop
(bad)
pop
outs
fld
xlat
mov
lahf
pop
add
stc
and
ins
rcl
pop
or
cmp
inc
rcl
jge
and
sbb
pop
dec
mov
sub
sar
rcl
ret
or
sbb
hlt
sbb
aad
add
or
hlt
mov
xchg
in
stc
inc
sbb
xchg
mov
div
cmps
sub
imul
js
mov
ffree
or
lahf
bound
pop
shl
mov
push
mov
shr
nop
test
and
jns
(bad)
inc
sub
enter
mov
ror
mov
adc
pop
ins
and
ficomp
jno
pop
lds
pop
add
push
mov
xor
loop
test
mov
retf
mov
mov
mov
jo
hlt
mov
fs
and
mov
mov
fiadd
pop
mov
cmp
loop
jp
add
test
lahf
or
retf
les
repnz
cmps
mov
push
jb
jp
mov
mov
add
jmp
es
inc
mov
pop
or
(bad)
ja
push
addr16
and
mov
imul
and
adc
mov
popa
xchg
(bad)
out
add
fdiv
mov
jle
loopne
cs
mov
movs
mov
jae
lahf
dec
jmp
adc
mov
jge
fs
mov
int3
ror
fisub
jbe
jns
mov
dec
pop
fistp
in
add
leave
les
movs
jns
(bad)
div
mov
shr
sbb
fidiv
sub
push
cmp
pushf
mov
cs
retf
mov
xor
ja
pushf
pop
aad
dec
sbb
fdiv
pop
pop
and
jecxz
push
add
dec
add
jp
sub
cmp
lods
xchg
cs
sbb
fcomip
bnd
mov
rol
imul
and
rol
out
mov
imul
cmp
push
sysret
dec
xlat
aas
sar
xchg
or
(bad)
lods
ins
cli
enter
ins
dec
sub
ror
xor
cmp
scas
sti
pop
pusha
lods
push
jmp
rcl
pop
(bad)
fnstsw
mov
btr
movs
sar
lds
sbb
jo
mov
adc
xchg
xor
mov
and
mov
shr
push
sahf
adc
cmp
jno
int
cmp
sbb
aad
mov
sub
sbb
test
pop
fadd
out
cmp
sti
xchg
mov
test
fwait
adc
jl
push
retf
mov
sbb
mov
dec
scas
add
pop
add
push
mov
mov
pushf
and
jbe
xchg
mov
test
mov
adc
lahf
or
enter
jmp
or
(bad)
xchg
xchg
lods
and
mov
push
repnz
adc
pop
adc
adc
dec
mul
mov
jle
inc
icebp
cmp
daa
xchg
shr
jmp
mov
popf
packuswb
nop
xchg
and
pop
mov
adc
cld
or
dec
lods
mov
push
pop
mov
dec
or
dec
inc
mov
rcl
(bad)
and
shr
stc
mov
or
push
popf
sub
adc
mov
into
sti
mov
pavgb
js
mov
in
jg
inc
mov
push
mov
and
loopne
cmp
fdiv
push
jmp
push
xchg
cmc
jp
fist
jo
lea
pop
jns
cmps
lock
inc
push
lds
cmp
pop
imul
out
cmp
out
cmp
sahf
leave
xlat
xor
mov
xor
or
ret
sbb
loop
cmp
mov
daa
pop
xchg
cmps
mov
inc
jns
jb
jnp
popf
mov
mov
or
sub
cmp
aad
pop
adc
add
xor
inc
pop
sbb
xchg
add
mov
ins
sub
das
xor
(bad)
jb
daa
nop
loope
push
ds
jbe
std
xor
in
call
into
daa
outs
test
mov
in
or
icebp
test
push
push
pop
iret
nop
test
cmps
push
xor
and
jns
popf
(bad)
ins
adc
test
je
pusha
and
jp
outs
fnstsw
enter
pop
jbe
icebp
sbb
(bad)
pop
sub
pop
jg
sar
in
and
adc
xchg
sbb
sbb
jnp
pop
bound
aam
adc
xchg
pop
out
fst
cs
(bad)
lahf
push
hlt
mov
cli
std
retf
dec
cmp
std
lods
bnd
mov
lahf
ss
mov
loopne
pushf
push
dec
sbb
xchg
mov
cmovbe
sub
mov
retf
jmp
mov
sub
mov
scas
mov
fwait
pop
and
push
adc
int
xlat
xchg
xchg
popf
sbb
in
das
pop
int3
lock
cmp
in
aad
inc
(bad)
pop
add
xor
(bad)
in
mov
mov
das
pop
inc
jle
hlt
outs
or
ds
and
xlat
add
jmp
jae
sub
sbb
push
mov
scas
fist
out
sbb
mov
mov
push
mov
packsswb
adc
sti
jb
arpl
mov
jmp
push
in
dec
inc
sub
mov
xor
retf
leave
mov
xchg
imul
pop
sahf
jns
lahf
adc
jmp
push
or
and
sbb
mov
pop
sahf
ret
loop
jl
mov
(bad)
jns
fwait
add
sar
cmp
mov
inc
lods
imul
test
pushf
xor
loop
mov
inc
pop
inc
mov
aad
leave
push
xchg
popf
loop
scas
ror
xor
sub
daa
cmp
aas
mov
push
lods
es
mov
pop
adc
vmwrite
movs
dec
mov
mov
sbb
sub
inc
mov
sub
push
loope
dec
clc
test
mov
dec
(bad)
int
dec
outs
test
push
mov
jg
xchg
fmul
inc
pusha
retf
and
or
jg
jge
dec
dec
add
repz
xor
aaa
pop
fwait
int3
xchg
jmp
xor
jae
mov
sub
lods
dec
mov
hlt
mov
xchg
icebp
mov
sbb
sti
cmp
pop
call
push
rol
mov
mov
mov
sahf
push
jae
adc
push
inc
imul
clc
sbb
and
cdq
push
cmp
fwait
inc
cmp
jp
jge
adc
add
cmp
adc
or
sbb
sub
and
pop
fistp
adc
mov
jno
xor
xor
clc
hlt
xor
add
mov
push
jge
cli
out
push
bound
test
add
stos
loope
int3
fstp
addr16
push
push
aaa
or
adc
das
sub
pop
fcomip
and
or
sub
push
ret
mov
and
or
push
pop
sbb
test
popf
mov
sub
mov
push
cmp
jl
ror
cmp
shr
out
push
jmp
cmps
fsub
adc
pop
dec
inc
stos
fs
push
pop
cmps
mov
xchg
ret
lods
(bad)
dec
pop
xchg
jge
mov
ja
call
sub
das
sub
loopne
sub
dec
xor
inc
inc
sbb
mov
hlt
daa
jb
lods
out
test
sti
das
push
lds
push
sub
dec
(bad)
es
inc
cld
aaa
jbe
add
mov
xchg
pop
xchg
add
add
xor
stos
jnp
in
sbb
cmc
sti
mov
shl
retf
dec
mov
xchg
dec
in
rol
mov
adc
xor
inc
mov
es
cmp
lods
daa
dec
mov
inc
sbb
jns
jbe
fwait
sbb
and
fisttp
mov
sbb
les
jmp
xchg
icebp
inc
and
inc
ss
lods
fucomip
pop
ja
ret
ins
xor
sub
push
dec
rcr
hlt
inc
icebp
sbb
lods
mov
cmps
lahf
mov
popf
sbb
xchg
and
lds
loopne
icebp
mov
mov
xor
mov
vmulpd
cmp
(bad)
pop
and
xchg
(bad)
fisttp
mov
mov
popf
out
div
adc
retf
and
xchg
sbb
pop
ror
mov
sbb
sbb
add
(bad)
out
dec
add
mov
stos
popa
inc
ins
mov
stc
pusha
push
dec
mov
xchg
arpl
lds
xor
and
inc
dec
mov
pop
fisubr
fmul
loope
dec
jo
mov
inc
data16
arpl
xor
lock
gs
test
mul
nop
add
gs
sbb
jmp
jno
repnz
adc
dec
xchg
jns
jecxz
xchg
add
push
test
cdq
pop
es
inc
fmul
iret
mov
inc
sub
xchg
add
jg
cmp
cmps
cmp
xor
(bad)
test
and
dec
pop
(bad)
movs
jecxz
push
sub
jg
(bad)
icebp
mov
dec
pop
xchg
xchg
cmp
sbb
mov
(bad)
mov
push
hlt
retf
scas
fadd
inc
push
popa
xchg
mov
call
pop
popf
dec
aas
push
fidivr
sub
mov
stc
mov
push
mov
ror
into
push
push
mov
sub
out
clc
adc
loopne
idiv
stos
push
retf
int
bnd
push
add
hlt
push
xor
icebp
pop
xor
in
ins
enter
sbb
inc
and
adc
arpl
mov
add
adc
ins
add
jmp
mov
or
(bad)
cmp
scas
jp
cmp
xchg
adc
fimul
push
xchg
push
stos
mov
mov
nop
inc
pop
push
movs
dec
movs
enter
retf
adc
popf
test
and
pop
cld
and
sbb
add
pop
retf
std
xchg
es
and
push
and
outs
adc
and
pop
stos
mov
jge
outs
sbb
scas
sahf
jge
sar
lahf
xchg
jle
mov
jp
(bad)
out
xor
retf
xchg
popa
arpl
mov
xor
repnz
and
jp
cli
xlat
pop
dec
arpl
sub
xor
pop
xchg
mov
inc
mov
loope
sbb
fldcw
mov
mov
pop
dec
inc
or
mov
lods
loope
pop
pop
xor
mov
mov
dec
push
aas
mov
inc
xor
jmp
jp
mov
inc
not
fidivr
xor
lea
imul
mov
push
shl
je
int
sub
aad
lock
aam
pop
lds
push
fs
pushf
mov
inc
rcl
stc
or
and
ins
dec
xchg
in
jmp
mov
(bad)
inc
js
stc
jmp
dec
xlat
std
mov
jbe
push
or
sbb
lods
jp
das
jns
das
fs
mov
mov
test
(bad)
xchg
xchg
shl
push
push
jns
add
jae
lds
or
xchg
adc
mul
mov
adc
sub
push
push
stos
test
ds
into
(bad)
or
adc
int3
cmps
ins
mov
push
mov
in
out
jl
sbb
dec
(bad)
dec
mov
stc
idiv
fadd
add
fwait
mov
lods
xchg
pusha
lahf
fisttp
pop
jl
stc
fwait
push
cmps
jle
push
mov
addr16
cmp
inc
mov
mov
cmp
into
pop
cmp
cmp
push
mov
mov
(bad)
dec
or
pop
scas
clc
inc
js
retf
retf
ins
pop
dec
daa
loopne
fdiv
out
lea
popa
lahf
fcomp
loope
pusha
out
js
cmp
mov
daa
int
(bad)
and
hlt
mov
xor
pop
fdivrp
mov
idiv
xor
dec
mov
jmp
sbb
rol
push
imul
sahf
xor
inc
xor
sbb
add
test
and
rol
cmp
imul
cmp
stos
mov
outs
and
jns
or
lods
inc
sbb
cmp
sahf
mov
lahf
cli
pop
nop
rcl
(bad)
push
pop
push
xchg
sub
inc
ds
mov
sub
imul
loope
in
ss
mov
xchg
aam
add
sbb
or
in
inc
in
icebp
mov
sub
add
jg
and
loope
(bad)
jbe
sub
shl
ins
dec
mov
lods
dec
shl
inc
out
icebp
jecxz
ins
sub
popf
adc
ja
(bad)
dec
sub
cli
in
push
adc
push
dec
mov
shr
jmp
sbb
add
push
mov
push
push
jbe
mov
add
add
call
dec
adc
and
es
push
xor
jne
enter
xor
and
popf
xor
xchg
xchg
push
mov
stc
push
popf
push
ja
jge
sbb
pop
mov
fs
fsub
inc
ret
sbb
inc
dec
inc
in
fs
loopne
push
retf
cmp
mov
enter
xchg
push
add
dec
inc
adc
sub
jmp
jp
dec
bound
lods
inc
dec
daa
jle
popf
loopne
fmul
mov
pop
push
push
sar
fst
jbe
or
jge
pusha
push
fstp
loope
push
pushf
or
gs
pusha
(bad)
dec
cs
fistp
fcom
sahf
pop
sahf
pop
mov
add
dec
mov
scas
xor
xor
mov
aam
xor
aaa
cmp
imul
push
in
and
lea
mov
adc
mov
sub
push
xchg
mov
or
mov
jge
mov
xchg
dec
pop
mov
pop
mov
faddp
cwde
jmp
test
add
push
movs
sub
mov
test
shl
jmp
gs
sub
not
sbb
fist
(bad)
ret
test
test
xor
sbb
push
out
mov
int3
in
sti
and
aaa
inc
hlt
fucomp
stos
rcr
wbinvd
and
aam
imul
int
sbb
imul
jg
fstp
or
pushf
inc
in
je
fidiv
ror
sub
js
(bad)
sbb
xchg
jnp
and
sbb
das
leave
add
mov
mov
xchg
mov
ret
sbb
push
pop
lods
shr
bound
xor
xlat
mov
lds
pop
xchg
or
jno
xlat
mov
push
ins
outs
dec
or
mov
mov
fiadd
jae
arpl
mov
xor
xchg
sbb
mov
xchg
pop
and
pop
cmp
inc
icebp
test
mov
xor
jae
sbb
mov
cs
aam
inc
data16
adc
(bad)
pushf
xchg
sub
add
stos
popf
or
mov
xchg
pop
call
and
mov
nop
xchg
xor
inc
xor
sub
lds
imul
sub
lds
xchg
sub
push
push
ret
mov
mov
push
(bad)
imul
aaa
cmp
data16
popa
adc
ins
mov
or
mov
jne
inc
lods
popa
jp
mov
loope
inc
imul
addr16
nop
sti
mov
or
out
outs
xlat
mov
(bad)
mul
cwde
mov
mov
bnd
ret
jmp
sub
popa
or
mov
inc
xchg
pop
cmp
sbb
sub
sbb
cmp
dec
push
(bad)
in
push
ds
inc
in
dec
push
imul
(bad)
movs
sbb
repnz
and
test
cmp
sbb
xchg
jg
adc
scas
loope
sbb
mov
push
ds
inc
test
dec
pop
ins
addr16
je
cmp
ds
call
out
hlt
lock
sbb
dec
inc
mov
adc
aad
sub
stos
jl
in
movs
pop
ins
cs
aaa
or
sbb
imul
gs
pop
rcl
stos
or
shr
mov
or
xchg
clc
pop
into
cmp
ror
jl
(bad)
loopne
out
dec
mov
mov
cmps
lahf
bnd
lea
mov
jae
imul
dec
std
out
imul
mov
push
xchg
retf
jb
stos
inc
pop
shr
xor
pop
imul
inc
pop
rcl
lods
mov
fs
cmp
mov
stos
test
cwde
je
mov
ins
aas
in
pop
lock
xchg
sub
in
sub
and
stc
stos
je
mov
pusha
sub
retf
fst
xlat
jb
xlat
jmp
mov
mov
imul
imul
mov
sti
pop
ret
inc
mov
mov
cmp
lods
enter
mov
test
mov
dec
jmp
jge
sbb
push
pop
adc
adc
jbe
cld
push
add
ins
cmps
(bad)
sbb
mov
gs
stc
push
push
test
or
jb
push
movs
addr16
inc
sbb
pop
not
jecxz
or
dec
addr16
inc
inc
pop
sub
adc
ja
gs
xchg
cmps
fwait
push
enter
inc
mov
inc
xor
(bad)
mov
xchg
arpl
rcl
mov
mul
pop
push
push
jne
in
push
sub
nop
mov
imul
loope
push
push
stos
fmul
xchg
inc
hlt
xchg
adc
sahf
hlt
test
rcr
and
sbb
ins
movs
cli
adc
lods
fdiv
pop
shl
mov
std
pop
ins
mov
adc
in
loopne
cmps
adc
es
mov
retf
fistp
imul
xchg
sbb
jb
sub
lahf
ret
add
imul
mov
mov
ins
les
mov
pop
jnp
mov
into
lods
jae
mov
xor
ret
iret
loop
dec
sbb
pusha
mov
mov
cmc
lods
jle
add
and
mov
fist
movs
pop
xchg
xchg
fstp
test
aad
push
and
scas
add
add
jns
or
aad
dec
push
or
cmp
(bad)
push
inc
push
adc
pop
push
jne
fadd
les
js
aad
adc
push
pop
repz
ficomp
add
enter
sub
dec
mov
jno
adc
jle
adc
cmp
jmp
mov
out
mov
sub
into
push
das
xchg
and
jmp
and
fmul
sub
je
xchg
dec
inc
mov
outs
test
jg
or
mov
dec
cmp
setno
push
jno
nop
es
or
shl
cli
fstp
enter
cmc
cdq
push
(bad)
aad
add
sub
enter
jecxz
ret
cld
dec
js
adc
xchg
or
cmp
adc
ins
dec
into
aad
sub
jp
sbb
push
ja
in
xchg
mov
xchg
pop
icebp
xchg
jbe
push
or
shl
adc
pop
(bad)
and
and
mov
adc
jecxz
iret
or
and
ss
pop
cmp
sbb
cmps
cmps
sbb
push
fwait
(bad)
mov
add
dec
mov
loop
retf
cmc
(bad)
sub
icebp
lods
fwait
mov
cmp
push
aam
(bad)
gs
mov
jecxz
mov
imul
add
les
xchg
lahf
dec
or
mov
lock
in
push
jne
inc
adc
popf
jle
and
imul
scas
adc
fist
mov
cmp
ins
mov
out
or
dec
ja
pop
push
xor
int3
and
jno
outs
arpl
mov
mov
fs
std
adc
add
sub
jb
push
inc
mov
or
xor
inc
in
or
(bad)
sti
sbb
idiv
push
push
or
xchg
ret
inc
test
data16
inc
ror
dec
test
inc
into
push
dec
(bad)
fnsave
into
push
rcr
xchg
and
sub
inc
jge
ret
aad
pop
shl
gs
push
jmp
jno
cmp
js
mov
mov
adc
repnz
mov
test
push
neg
sub
adc
sub
and
ins
mov
cmps
(bad)
pop
jbe
test
xchg
cmps
cmps
jge
lods
or
inc
add
mov
mov
cmps
lock
jbe
scas
dec
xchg
and
hlt
and
rcl
or
mov
pusha
xchg
xor
pop
jne
xor
sub
stos
ret
out
movs
pop
in
sub
pop
adc
(bad)
pop
adc
inc
aaa
test
out
sbb
mov
push
sub
dec
dec
push
loopne
or
fcmovb
aas
popf
fld
inc
jmp
sti
retf
inc
pop
add
cld
jb
jbe
sar
or
ss
jmp
rol
(bad)
daa
scas
loope
push
cmp
sti
xchg
in
xchg
pop
jno
repz
aaa
gs
ret
sbb
inc
inc
pushf
out
pop
adc
add
xor
pop
aam
hlt
imul
and
inc
nop
mov
call
inc
xor
push
and
mov
xchg
hlt
outs
push
sahf
xchg
mov
jne
popf
pop
xchg
stos
test
arpl
sub
add
dec
pop
sub
(bad)
pop
xor
inc
popf
sbb
add
ror
inc
cmp
and
xchg
daa
and
dec
mov
in
sbb
xor
imul
or
pop
lahf
or
mov
cmps
inc
mov
push
daa
xor
cmps
mov
call
into
inc
xor
xor
arpl
jl
jno
dec
in
xor
and
push
dec
pop
scas
pop
fsub
fbld
in
and
adc
or
pop
add
mov
dec
xchg
les
ss
out
jge
ja
pop
imul
xchg
or
or
inc
jae
addr16
arpl
das
push
mov
or
xor
mov
ss
jmp
call
xchg
popa
xchg
fmul
fld
test
jnp
aam
imul
fdiv
sub
mov
outs
outs
test
pop
aas
stc
xchg
ja
aam
in
sbb
inc
sbb
or
inc
pop
inc
push
shr
or
loopne
test
adc
pop
shr
cdq
dec
enter
cmp
cmp
out
mov
pop
dec
fcomp
inc
mov
jno
retf
retf
(bad)
shl
int3
dec
ins
mov
movs
ret
mov
adc
jecxz
jne
cs
call
push
lods
faddp
scas
dec
push
data16
loop
out
mov
int3
cld
jno
push
dec
xlat
stos
int
ja
xchg
cmp
push
ss
cmp
lods
cmp
fidivr
scas
sbb
add
sbb
mov
mov
popa
adc
fisttp
pop
fisubr
or
jnp
dec
dec
mov
les
loop
rcl
aam
daa
sbb
in
std
mov
or
sub
rcl
cwde
arpl
or
mov
dec
call
ja
je
jae
(bad)
shl
jae
aam
(bad)
jmp
dec
hlt
or
(bad)
packsswb
test
push
mov
lds
shl
cmps
sub
out
fisttp
shl
fimul
adc
cld
repz
fs
sbb
sub
cmp
mov
test
add
hlt
xor
cmps
pop
xchg
push
add
stos
mov
pop
jge
jns
scas
fcomip
mov
add
cmp
pop
push
xor
icebp
imul
sub
ret
add
add
and
mov
pusha
cmp
aas
adc
mov
inc
inc
pop
jmp
out
in
inc
cmp
and
jp
sbb
and
jp
ins
shl
mov
jl
or
add
repz
mov
cmps
jno
out
mov
mov
loop
mov
adc
js
rol
addr16
or
mov
imul
push
inc
lea
imul
test
and
or
cmp
fld
adc
xchg
ror
jmp
rcl
lahf
sbb
xor
sub
test
dec
stos
test
ss
ja
inc
int3
adc
in
or
add
xchg
and
rcl
mov
sar
ret
test
fucom
rcl
jno
cld
mov
push
bound
add
push
or
fmul
mov
sub
mov
call
or
cld
jle
stos
lods
push
cmp
test
xchg
std
outs
cmp
inc
mov
or
scas
inc
(bad)
push
push
and
popa
xor
inc
cdq
test
adc
mov
lods
movs
mov
inc
jp
std
push
repz
xor
mov
jp
dec
sub
hlt
xor
retf
fadd
or
push
out
sbb
sub
fiadd
call
xchg
inc
push
fdivrp
cmp
pop
stos
xchg
mov
push
push
iret
cmp
jns
and
cmps
leave
cmp
xor
cwde
mov
or
xor
add
out
ja
cmp
sub
dec
mov
cmps
push
jae
test
(bad)
and
dec
xchg
dec
scas
cmp
out
in
inc
xchg
mov
in
dec
movs
xchg
dec
retf
push
sbb
jae
cmp
stos
fist
dec
repz
outs
or
(bad)
cmps
dec
sti
pop
test
loop
or
mov
mov
pop
jae
rcr
xor
sub
and
call
(bad)
sub
sahf
ins
mov
jecxz
xor
sbb
sbb
adc
xor
lock
call
push
push
inc
stos
aad
js
cwde
ins
retf
lods
enter
or
mov
mov
cmps
push
pop
aaa
sti
cmp
gs
mov
adc
fisttp
cmp
mov
repnz
jp
arpl
push
adc
into
enter
cli
or
jmp
or
jge
pop
dec
mov
pop
int
xchg
test
xchg
fs
lahf
in
jle
dec
addr16
nop
mov
fisttp
aad
jmp
in
push
fnstsw
pop
retf
and
and
push
outs
mov
icebp
mov
push
fst
mov
dec
jecxz
mov
(bad)
mov
aas
cmp
(bad)
mov
fisubr
sbb
add
mov
cmps
mov
mov
cwde
cmp
dec
psubb
or
repnz
outs
xor
pop
lods
dec
movs
sbb
jl
sub
dec
sbb
adc
push
mov
ss
fisttp
in
xchg
dec
mov
add
jp
sahf
in
ds
cmps
jge
jle
shl
inc
inc
dec
cmps
xor
adc
imul
hlt
inc
mov
sahf
mov
inc
cmp
aaa
and
cli
sbb
adc
cmp
pop
push
idiv
test
or
hlt
push
cmp
inc
xor
int3
icebp
ret
repnz
or
inc
or
and
cmps
inc
xchg
pushf
jmp
daa
imul
adc
mov
xchg
cmp
daa
test
pcmpgtb
jg
pop
sub
adc
dec
sbb
retf
ret
cmp
cwde
add
das
add
repz
jl
nop
xlat
stc
leave
sbb
jecxz
in
push
leave
lods
mov
mov
cmp
sbb
adc
add
stos
sub
pop
inc
popf
sbb
and
jg
mov
leave
xchg
sbb
or
fldenv
sbb
xor
sub
jae
out
mov
imul
sub
pop
mov
int3
cdq
push
jne
cs
cwde
shr
mov
and
sub
xor
outs
mov
fisubr
out
mov
imul
mov
cmp
jle
cmp
ins
jl
ds
shl
sub
mov
adc
xchg
cwde
lahf
or
mov
hlt
hlt
ins
iret
int3
sbb
sbb
sub
ss
hlt
int3
jb
test
jge
cmp
push
cmp
scas
pop
imul
loopne
ja
idiv
fnstsw
in
pop
lahf
stc
lods
ret
mov
mov
inc
fwait
add
in
sti
sbb
cmp
xor
lods
aad
mov
adc
jo
sub
gs
sahf
aam
out
(bad)
and
fcomi
addr16
movs
ret
xor
push
jne
ja
pop
xor
(bad)
jmp
lock
sahf
je
xlat
cdq
mov
adc
jnp
int
clc
jo
mov
int
jnp
adc
std
pop
pop
call
gs
inc
mov
cmp
sbb
nop
push
jmp
fs
fwait
mov
adc
jne
add
hlt
dec
jns
xchg
loope
push
inc
mov
enter
sbb
pop
out
(bad)
outs
jns
xchg
and
ins
mov
mov
arpl
outs
add
jge
mov
add
movs
inc
movs
push
lods
outs
retf
daa
outs
jno
jmp
das
mov
test
push
mov
xchg
push
sbb
add
mov
mov
pop
mov
dec
pop
dec
int
sbb
mov
mov
or
neg
scas
hlt
or
faddp
mov
jle
repnz
int3
or
(bad)
xor
aad
fmul
cmps
sbb
xchg
mul
(bad)
xor
lds
jns
cmps
sbb
in
sti
inc
pop
retw
xor
cmp
je
cmp
pop
movs
pop
out
sbb
icebp
popf
jns
scas
cli
daa
push
push
sub
sbb
and
jle
dec
jl
mov
fisub
mov
push
add
je
dec
push
ss
cmp
movs
pop
jbe
mov
inc
mov
rcl
lahf
jne
xlat
or
mov
push
repnz
ret
adc
sub
dec
into
imul
or
push
or
aam
sub
imul
rol
dec
adc
add
shl
out
fmul
in
xchg
lock
clc
ins
aam
adc
inc
pop
cmp
add
dec
(bad)
push
ins
push
push
xchg
ins
dec
mov
in
pop
mov
dec
xor
inc
lds
ret
retf
jmp
aaa
sar
xchg
(bad)
mov
(bad)
jns
sbb
iret
xchg
push
inc
loop
add
adc
out
sub
pop
adc
pop
push
sar
cwde
adc
jmp
mul
lea
push
and
dec
ja
ret
ret
jno
push
mov
loop
loope
cmp
pop
xor
repnz
adc
in
and
jns
mov
adc
jp
adc
sbb
fidivr
ja
dec
mov
cmp
push
int
outs
or
loope
shl
repnz
in
add
adc
mov
sub
sub
inc
out
xchg
pop
xchg
enter
ja
dec
rol
mov
stos
pop
and
ret
xor
shl
fiadd
ss
mov
jnp
in
repz
add
pusha
rcl
lahf
xchg
popf
stos
es
mov
repz
pop
mov
cdq
sahf
mov
mov
xchg
dec
add
fwait
inc
fiadd
shl
jmp
sub
lahf
dec
sbb
push
dec
cmc
in
jecxz
push
and
pusha
sbb
mov
mov
or
inc
mov
stos
and
scas
jmp
xor
mov
je
(bad)
fist
mov
xchg
push
outs
movs
imul
jl
and
cmp
dec
pusha
pop
xchg
push
test
dec
cwde
mov
lock
jmp
mov
cmp
add
inc
sbb
or
enter
sahf
js
mov
dec
pop
pop
shr
mov
je
pushf
add
in
sub
aam
mov
pop
std
sbb
sub
sbb
inc
add
ror
adc
mov
adc
es
xor
push
sar
push
adc
into
xchg
call
mov
lods
(bad)
xor
out
out
mov
call
xchg
xor
sbb
repnz
jl
add
mov
dec
fistp
or
pop
aaa
(bad)
xchg
xchg
(bad)
dec
clc
cmc
lods
pop
lods
jp
in
aas
pusha
imul
push
pop
jno
inc
in
shl
adc
mov
sub
or
sar
(bad)
inc
or
ins
outs
mov
stos
pop
ss
push
sbb
mov
retf
jmp
dec
(bad)
mov
inc
xchg
cmp
push
sbb
jo
xor
jp
sbb
adc
jb
mov
inc
push
push
adc
out
inc
out
mov
test
mov
inc
cmp
or
xchg
shl
ds
rcl
data16
dec
pop
xchg
shr
mov
dec
xor
retf
int3
xchg
xor
ins
out
shl
cmp
lock
push
jl
push
call
sbb
or
cld
cmp
adc
popf
xor
pop
cs
ror
or
mov
frstor
or
mov
rol
push
arpl
ror
xor
jno
popf
lock
adc
pop
jl
push
xchg
push
repnz
ja
push
xchg
ds
mov
imul
mov
out
mov
mov
cmps
mov
xchg
daa
mov
in
cmps
xchg
or
rcr
imul
mov
ja
sbb
loopne
es
push
outs
sub
movs
inc
sub
(bad)
fstp
and
test
out
ret
fistp
int
lea
xchg
(bad)
mov
add
js
jmp
(bad)
into
retf
mov
rol
ss
movs
jno
adc
adc
outs
in
fs
cmp
cmc
retf
push
inc
mov
sub
icebp
retf
repz
cmps
pop
(bad)
adc
or
mov
test
mov
jl
mov
jb
pop
jp
(bad)
mov
push
stos
popa
test
xor
xor
stc
inc
cmp
xchg
dec
in
adc
rcr
or
out
mov
lock
fsub
jns
out
stc
inc
sub
pop
mov
adc
or
and
imul
ja
retf
sub
arpl
lock
rcr
xchg
loop
push
mov
imul
scas
and
lahf
inc
jno
mov
mov
arpl
test
(bad)
int3
inc
sbb
shl
inc
push
xor
push
xchg
cld
sar
inc
xlat
cs
jne
jno
jne
inc
test
sbb
sbb
dec
test
retf
jno
addr16
inc
sub
lods
or
pop
xlat
adc
imul
stc
mov
inc
repz
shr
js
fstp
pop
push
pop
xor
lahf
push
mov
sub
jle
ss
or
fisttp
addr16
into
lea
fwait
cmp
and
das
sahf
into
imul
mov
push
jo
inc
(bad)
mov
out
je
mov
mov
out
add
loopne
mov
aam
cs
(bad)
sub
or
adc
sbb
cwde
and
add
sahf
push
fldz
fstp
adc
leave
inc
hlt
fdivrp
sar
sub
and
add
push
push
(bad)
mov
pop
pop
sbb
push
inc
and
cdq
add
movs
rcl
repz
(bad)
mov
xor
movs
imul
leave
lock
mov
sti
push
leave
sbb
es
gs
mov
mov
cmps
into
mov
jge
push
ror
iret
mov
inc
dec
addr16
(bad)
sub
pop
cdq
and
push
or
push
add
cmp
mov
aaa
mov
xchg
xor
cli
leave
test
jmp
mov
scas
pusha
push
(bad)
xchg
dec
scas
push
ja
inc
arpl
sbb
movs
int
data16
push
jmp
mov
icebp
add
jmp
loop
pop
arpl
test
jmp
stos
inc
mov
or
cmps
dec
xor
daa
or
add
js
add
cmp
xor
add
or
pop
repnz
mov
je
adc
inc
ss
jno
iret
inc
and
add
rcr
mov
arpl
retf
mov
iret
xchg
ss
fsubp
frstor
pop
adc
ror
inc
xor
dec
cwde
movs
pushf
pusha
stos
inc
leave
shl
jne
mov
fwait
jnp
jp
and
in
sub
(bad)
and
inc
adc
dec
jmp
test
jmp
inc
js
xchg
cmp
mov
cmp
mov
daa
retf
pop
ds
pop
nop
in
cli
inc
aad
fsub
in
push
and
int
xchg
add
call
dec
ins
pop
xchg
pcmpeqd
inc
lds
cli
ficom
lods
das
push
aam
xchg
adc
xlat
aam
lods
cli
shl
sti
inc
(bad)
xlat
inc
call
(bad)
mov
imul
sbb
mov
lea
sbb
cmps
fistp
out
repz
mov
fmul
mov
fst
mov
mov
jne
jne
jns
and
ins
loop
mov
lock
aam
test
(bad)
neg
outs
sbb
(bad)
pusha
sbb
pop
(bad)
pop
xor
xor
rol
bound
mov
ja
jmp
imul
fcom
popf
(bad)
addr16
shr
xchg
jmp
xor
imul
ins
int3
jmp
cs
rcr
mov
mov
push
ss
retf
mov
mov
xor
sti
sub
xchg
cmps
imul
xchg
mov
neg
jmp
and
int3
mov
and
aas
mov
(bad)
xchg
mov
cmps
cmp
stos
(bad)
out
ss
jmp
mov
jae
push
sbb
push
xchg
movs
push
push
mov
bound
mov
repz
fist
mov
xchg
sar
pop
and
loopne
adc
mov
arpl
and
xchg
clc
sti
cmp
stc
iret
mov
stos
push
bound
nop
(bad)
mov
add
jle
cli
gs
or
sub
repz
sbb
mov
sahf
das
cmp
or
and
stos
push
ss
add
push
pop
mov
fadd
icebp
mov
push
popa
fwait
xor
out
data16
adc
mov
scas
int3
out
dec
pop
cmps
jl
(bad)
fisubr
push
out
loop
sub
xor
jb
dec
shl
or
push
sbb
mov
jb
or
xor
mov
inc
test
xchg
call
(bad)
stos
pop
push
jge
rep
jnp
xchg
pop
jmp
xlat
pop
pop
pop
fisubr
aas
mov
jecxz
stos
mov
mov
sub
push
and
xchg
pop
sti
out
dec
xor
test
mov
push
cmp
xor
cmp
dec
shl
mov
add
sahf
arpl
data16
mov
xchg
(bad)
lahf
std
shr
jb
or
mov
mov
mov
or
mov
cmp
stos
dec
daa
inc
cmp
and
jmp
cwde
mov
push
xchg
inc
cmp
cmp
lds
push
cmp
inc
mov
xchg
mov
(bad)
jnp
mov
ja
stos
mov
fsub
daa
push
imul
aas
retf
int3
mov
cs
push
cwde
adc
aaa
push
jns
ins
ror
jb
mov
xor
mov
or
out
mov
xchg
push
xchg
imul
data16
and
jge
stos
lahf
shl
test
scas
ret
scas
div
add
repz
sub
out
imul
sbb
call
adc
dec
cwde
mov
sar
lahf
cmps
inc
popf
jmp
cmps
xchg
xor
xchg
mov
jo
and
pop
sbb
jle
(bad)
pop
call
jecxz
dec
jbe
std
cs
js
mov
jne
xlat
xchg
mov
xchg
test
cmc
rcr
lea
mov
inc
icebp
cmps
ror
adc
fstp
sbb
lahf
jns
push
adc
loope
stos
adc
mov
and
(bad)
mov
sbb
popf
pop
aam
outs
out
xchg
aad
xlat
xor
push
xor
push
shl
push
xor
cdq
pop
adc
sbb
ret
loope
(bad)
test
idiv
pop
(bad)
sub
pop
(bad)
aad
int
jp
add
inc
jo
rep
ret
sub
scas
adc
sub
fisub
jns
in
lods
(bad)
dec
loopne
jmp
je
aad
sbb
in
xor
push
test
or
jns
imul
ss
pop
mov
in
or
mov
ret
dec
(bad)
mov
cwde
pop
xchg
xchg
or
ja
jae
jp
cmp
rcr
push
ror
in
hlt
aaa
push
movs
xchg
imul
daa
pop
cmp
repz
add
test
out
mov
cmps
push
fxch
and
push
popf
dec
push
call
cmc
adc
pop
into
sbb
ja
retf
call
mov
jnp
dec
out
imul
dec
push
inc
dec
ja
stos
ins
or
movs
mov
inc
or
mov
inc
mov
mov
stc
push
aaa
adc
cmp
adc
icebp
cmp
loopne
jae
iret
popa
or
jl
(bad)
sub
dec
in
js
arpl
xchg
push
add
adc
or
dec
(bad)
mul
in
cmp
sub
mov
sbb
cmp
pop
cmp
inc
and
outs
icebp
lods
push
bound
xor
and
into
xchg
(bad)
movs
ds
jge
enter
xchg
fiadd
sar
mov
xor
sbb
ds
mov
loop
test
jnp
aaa
mov
clc
shr
sahf
mov
out
xor
adc
mov
add
js
mov
mov
repnz
dec
popa
outs
push
cmp
jmp
add
lods
sub
in
sar
pop
daa
fwait
or
or
mov
and
jo
push
jge
ret
sbb
std
and
in
(bad)
mov
repnz
imul
mov
mov
(bad)
cmp
je
xchg
stc
lods
dec
push
iret
(bad)
test
xchg
mov
push
pop
pop
(bad)
fstp
mov
jmp
lods
ror
stos
push
ss
(bad)
sub
sub
xchg
popa
jmp
xor
and
mov
popf
lods
or
pop
cmp
shl
enter
sbb
je
test
into
mov
es
call
xlat
in
adc
daa
dec
xchg
jb
stc
pop
pop
pop
dec
and
or
mov
mov
and
adc
ja
(bad)
cmp
fistp
(bad)
xchg
and
xor
and
imul
rol
inc
adc
jle
jl
je
cli
or
adc
in
lods
mov
ins
or
cli
ror
int
cli
leave
fdiv
pop
(bad)
das
out
cli
mov
xchg
popf
stos
enter
fisubr
mov
inc
ror
lods
mov
ss
(bad)
call
add
cmc
jo
mov
test
jge
jmp
sbb
xchg
xchg
sub
test
(bad)
iret
inc
stc
bound
xchg
push
cdq
lods
pop
shr
repz
lods
cmp
fs
iret
icebp
scas
cmp
jo
adc
mov
js
mov
push
dec
sub
cmp
or
addr16
mov
jl
enter
push
inc
mov
or
mov
sub
cs
xchg
pop
push
shl
jmp
mov
fs
pop
inc
icebp
jns
shl
outs
(bad)
movs
cmp
stos
call
xor
jp
adc
ds
or
jp
ret
jno
lods
cs
push
lahf
mov
scas
mov
in
or
or
mov
pop
(bad)
sbb
sub
cmp
and
add
test
sub
xchg
mov
out
add
in
fmul
test
dec
cmp
pop
xor
stos
fimul
popa
push
or
shl
adc
dec
sbb
in
mov
test
adc
sbb
lods
fwait
bnd
outs
(bad)
sar
adc
xor
push
dec
out
cli
sbb
and
rcr
push
int3
push
dec
mov
fxam
push
daa
push
cmp
hlt
push
mov
inc
es
jle
jl
add
push
iret
and
sub
mov
jbe
xlat
push
cmp
push
sbb
dec
cs
xor
push
jne
xor
jbe
jno
xor
and
sub
mov
mov
dec
std
cmp
movs
xchg
xchg
into
ins
xlat
sbb
dec
mov
pushf
pop
inc
xchg
pop
inc
retf
mov
stos
mov
cmp
xor
(bad)
cmp
add
dec
cli
scas
popf
(bad)
push
and
xchg
and
aad
sti
push
push
xor
loopne
in
mov
aam
mov
call
jnp
xchg
movs
sbb
push
xlat
arpl
js
xor
loope
out
popa
jnp
lea
xchg
pop
push
xchg
push
inc
or
sub
rcl
lods
call
mov
jmp
popf
mov
xchg
ja
pop
sub
aas
add
push
ret
inc
cwde
in
xor
ss
and
stos
sub
mov
push
pop
cmp
js
mov
std
mov
movs
push
cmp
push
dec
cdq
mov
adc
(bad)
fwait
iret
test
inc
xchg
inc
inc
xchg
jge
and
movs
loop
ja
jl
jge
xor
call
retf
xchg
imul
and
clc
js
cmp
jge
outs
push
repz
in
xchg
jne
xor
vpsubusw
jl
popf
in
dec
imul
lock
stc
inc
xor
stos
sub
in
pop
xor
sub
ret
es
sar
enter
xchg
gs
test
jnp
mov
arpl
sbb
js
sbb
mov
add
sub
retf
xchg
sbb
(bad)
dec
in
mov
sbb
jmp
jge
jle
std
mov
xor
dec
sbb
les
mov
mov
(bad)
jmp
mov
cmps
mov
mov
arpl
test
push
mov
mov
mov
jle
dec
test
les
rcl
cli
mov
xchg
movs
push
imul
(bad)
movs
push
mov
test
inc
mov
imul
pop
stc
pop
rcr
dec
dec
imul
xchg
fist
lea
pop
stos
or
xor
fisub
paddusb
push
outs
dec
push
and
(bad)
cmp
cmp
xchg
xchg
xor
fcmovnbe
push
repnz
push
jmp
sbb
popa
in
fst
dec
pop
and
(bad)
addr16
stc
les
cld
xor
in
push
dec
aad
sub
shr
loop
jb
or
pop
dec
ja
cli
fdiv
(bad)
outs
mov
(bad)
jle
xor
cmp
movs
mov
lock
push
mov
push
cmp
add
inc
les
out
sbb
xor
call
mov
jb
mov
push
rcr
into
fwait
lods
mov
add
pop
pop
push
das
int
loope
outs
das
fdivr
and
pop
pop
pop
mov
in
loop
cmp
pop
(bad)
sbb
and
stc
push
loope
or
les
sahf
ss
xchg
mov
outs
jno
aas
jecxz
mov
jmp
int3
popf
in
mov
xchg
sub
cmp
rcl
xchg
(bad)
xor
imul
data16
push
pop
push
addr16
adc
pushf
leave
addr16
cmp
push
cli
mov
dec
mov
shufps
jecxz
jecxz
out
mov
mov
rcl
push
xchg
hlt
xor
call
and
adc
push
jge
fs
loopne
(bad)
push
dec
push
pop
fst
xor
push
popa
mov
rol
sahf
add
icebp
mov
adc
jmp
loope
int
add
imul
ins
mov
push
push
imul
push
mov
xchg
iret
adc
dec
test
jae
mov
test
rep
cmp
lock
lahf
cmp
push
xor
test
aam
std
sub
test
cmps
mov
test
stos
push
mov
shr
and
aaa
or
sub
gs
jb
lea
shl
cld
push
leave
int3
ret
pop
xchg
xchg
popa
hlt
push
or
cmp
fmul
nop
mov
outs
cdq
aam
shl
jle
repz
dec
adc
clc
dec
dec
test
and
fisub
cmp
out
mov
xor
movs
or
mov
leave
push
inc
sbb
xchg
fisubr
sub
cmp
movs
jle
dec
jns
cmp
in
mov
pop
dec
ins
add
cld
outs
xor
out
fdiv
gs
or
cmp
xchg
inc
xchg
lea
mov
push
das
loope
and
sahf
and
pop
aam
out
xlat
sbb
mov
mov
adc
sbb
sub
mov
(bad)
sahf
add
pop
adc
jge
je
add
out
ja
jle
(bad)
imul
inc
and
fmul
jb
das
push
fcomp
pop
dec
popa
cli
and
into
mov
inc
fadd
mov
repz
call
pop
sub
cmp
xor
xor
dec
push
ror
(bad)
push
sahf
or
sub
cmp
jg
je
push
mov
mov
inc
not
cmp
fild
jmp
push
pushf
fild
push
sub
stos
clc
ret
mov
sbb
gs
adc
xchg
push
test
jne
stos
dec
pop
cwde
mov
adc
rol
mov
mov
cmps
push
daa
mov
outs
xchg
iret
adc
mov
mov
int3
pop
sbb
jecxz
jb
cmp
jecxz
imul
adc
mov
jo
inc
(bad)
jp
out
adc
cmp
je
mov
nop
mov
bound
sbb
pop
daa
pop
sub
add
add
mov
call
aas
cmp
mov
das
stos
fcmovnbe
and
push
ins
jl
xlat
pop
jno
inc
mov
jle
inc
mov
shl
jecxz
xor
pop
inc
pop
int3
hlt
mov
out
cmps
push
mov
stos
dec
stos
repnz
xor
popf
int
iret
xor
pop
aam
cmps
pop
dec
pushf
leave
stos
cmc
jle
push
fcomp
dec
cmps
and
push
push
aam
cs
push
adc
jg
je
mov
xchg
and
adc
call
fwait
aaa
mov
push
fcmovnbe
mov
ds
iret
fist
enter
xchg
cmp
cs
aaa
mov
ret
aam
(bad)
ss
adc
xor
xor
repz
cmp
imul
dec
push
imul
and
push
sbb
outs
outs
inc
rol
push
xchg
xor
and
stos
mov
mov
data16
sub
sub
fld
aas
movs
(bad)
out
add
out
ss
rcl
sar
fstp
js
and
dec
shl
jp
mov
push
jmp
push
fs
adc
or
aas
pop
cmp
xchg
cwde
adc
shr
adc
mov
add
mov
pop
jae
inc
sub
movs
dec
pop
sahf
out
lods
add
push
mov
(bad)
sar
xor
jg
mov
hlt
xor
iret
dec
mov
call
cs
retf
jecxz
fisub
push
add
clc
js
in
aas
jg
aad
cmp
lahf
mov
fisub
enter
mov
cwde
sbb
inc
push
sub
sub
frstor
push
sub
inc
jae
mov
add
jo
popf
out
xchg
jae
(bad)
or
cs
sub
outs
cmp
rcr
or
mov
and
sar
dec
mov
stos
std
cs
mov
lea
bound
add
fucom
nop
cs
scas
cmp
stc
arpl
sbb
enter
push
ret
outs
shr
movs
daa
std
jecxz
mov
mov
mov
pop
fstp
jle
mov
pop
xchg
push
outs
mov
jnp
mov
ds
sub
xchg
inc
dec
mov
and
retf
aad
xor
rcr
(bad)
or
fmul
push
lds
jmp
sbb
out
cmp
scas
mov
pop
adc
push
sbb
cmps
push
xor
data16
jae
popa
and
cwde
cmps
mov
jnp
mov
test
cli
xchg
hlt
mov
int3
cmc
lds
retf
jle
cmps
sbb
pop
mov
fcom
fcom
fst
pushf
test
lods
and
push
and
sbb
cmp
repnz
inc
sub
outs
jle
xchg
test
cmp
xchg
jg
jne
je
punpckhbw
cmp
test
pop
xchg
les
xchg
and
outs
scas
loope
cdq
push
movs
and
pushf
cmps
dec
(bad)
pusha
mov
add
xchg
sbb
imul
mov
xchg
xor
mov
inc
add
sbb
xor
and
dec
sbb
js
movs
push
lahf
leave
push
jl
adc
xor
mov
daa
mov
sub
and
and
jecxz
fisub
loopne
pop
fs
add
int3
or
pop
sbb
std
imul
xchg
push
pop
rcl
xchg
popf
sbb
(bad)
test
adc
imul
ins
xlat
aam
out
add
cmp
mov
mov
in
(bad)
icebp
and
cld
iret
adc
xchg
xor
stc
or
mov
fisttp
in
or
out
cdq
js
inc
and
push
xchg
sub
push
sub
inc
arpl
lock
xor
lods
cmp
push
arpl
test
sar
ins
sbb
mov
retf
arpl
adc
or
xchg
ja
in
ret
mov
add
stos
push
mov
mov
inc
mov
dec
mov
ja
xor
shl
push
push
mov
test
jmp
xchg
mov
cmp
and
ds
mov
call
mov
mov
pop
(bad)
push
inc
push
cmps
int
add
mov
sbb
lea
cmp
mov
and
xor
mov
es
(bad)
nop
xor
jbe
daa
add
adc
ja
out
sub
out
hlt
pop
(bad)
dec
test
(bad)
nop
and
mov
jge
fnsave
jb
sbb
mov
loopne
loop
adc
jle
xor
mov
jge
test
ins
test
sub
out
sub
and
cli
adc
mov
and
push
and
and
jne
jge
imul
int3
rcl
jbe
mov
cmp
mov
adc
int3
loope
push
js
xchg
into
mov
jle
jbe
arpl
sub
retf
lock
movs
jae
xor
fadd
xchg
sbb
add
push
cmp
jbe
adc
jb
test
sbb
add
adc
jne
aad
xchg
or
jb
std
add
inc
cmps
pop
ror
shr
mov
mov
sahf
xor
pop
push
or
cs
jmp
and
pop
mov
mov
sbb
jmp
adc
xchg
mov
xchg
sahf
mov
sbb
push
fidivr
sub
mov
mov
retf
inc
and
inc
jnp
arpl
fdivr
adc
pop
inc
sbb
pop
sub
jmp
mov
into
test
cmps
leave
les
mov
push
xchg
leave
rep
(bad)
outs
test
test
jno
jmp
push
ins
pop
push
test
mov
fcmovbe
imul
jne
sar
adc
iret
cld
jne
out
and
inc
push
sbb
xor
sbb
aas
adc
cld
or
xor
fdivr
inc
arpl
cs
(bad)
sti
mov
mov
es
lods
push
mov
add
fld
push
jmp
jnp
rol
repz
fcomp
test
rcl
retf
test
addr16
jne
or
mov
scas
scas
stos
jl
addr16
lods
mov
and
and
pusha
jae
inc
addr16
pop
push
push
push
pop
popf
cwde
cmp
dec
mov
jmp
jle
jbe
or
shl
add
cmp
jmp
mov
retf
pop
mov
sub
fs
jnp
test
lods
sbb
hlt
sbb
fisub
lds
jmp
lahf
add
sub
fucom
pop
mov
sub
ins
aas
lea
or
push
dec
mov
push
push
mov
ret
jne
fsubp
sub
adc
cwde
std
adc
jg
and
dec
add
xchg
call
sub
adc
xchg
shl
inc
push
adc
mov
cld
xchg
hlt
in
add
ss
cmp
mov
sub
add
jp
repz
cli
popa
jne
int
outs
mov
cdq
jne
pusha
mov
mov
loope
mov
jg
lock
ins
xchg
pop
test
push
pushf
mov
add
repnz
xor
aaa
pushf
scas
sub
adc
adc
jmp
ficom
push
retf
inc
fist
nop
xchg
adc
xchg
xor
pop
add
xor
jnp
mov
fidiv
mov
mov
pusha
out
mov
add
retf
gs
mov
xor
and
add
xlat
outs
sbb
dec
imul
mov
retf
clc
add
ins
add
sub
and
test
pusha
or
mov
fcmovne
ss
cmp
or
xchg
xlat
leave
test
dec
into
outs
shr
mov
inc
pop
push
in
jbe
fidiv
outs
push
arpl
jne
rcr
(bad)
jo
bound
xor
mov
lods
jge
mov
mov
dec
stos
ror
mov
ins
(bad)
repnz
cli
mov
sbb
je
repz
in
cmp
mov
ret
mov
xchg
cmp
pop
rcl
mov
rcr
mov
sbb
push
ss
xor
dec
pushf
push
jne
sahf
mov
pop
cmp
test
out
inc
pop
xlat
rcr
mov
or
imul
fidivr
jbe
mov
push
loopne
loop
imul
retf
dec
cmp
or
pop
data16
test
rol
mov
mov
push
scas
aad
sti
les
clc
sbb
cmp
pop
sar
push
mov
push
xchg
sbb
xlat
pop
fsubr
in
loope
dec
aam
cmp
(bad)
fsub
dec
nop
mov
or
out
pop
add
mov
adc
(bad)
mov
xor
mov
jbe
std
arpl
dec
mov
xor
mov
sbb
and
cs
mov
nop
div
xor
imul
xchg
movs
and
test
nop
cmps
(bad)
out
push
fwait
push
loopne
mov
sub
pushf
mov
inc
popf
adc
ds
loope
dec
xor
sti
ins
call
jle
xor
add
je
push
add
push
nop
leave
aas
cld
xchg
xor
fwait
cli
mov
rcr
add
or
mov
pop
shl
add
jmp
dec
stc
out
das
in
out
cli
dec
ja
rcl
outs
adc
cmp
cmp
or
loop
sub
pop
mov
mov
pop
imul
push
test
repnz
pop
push
movs
xor
leave
adc
in
push
cmc
aaa
push
and
cld
push
sub
into
pop
test
stos
fisttp
mov
push
mov
fdiv
jp
inc
(bad)
mov
call
mov
test
jge
movs
inc
and
jo
clc
inc
(bad)
ja
or
retf
push
and
adc
xor
jmp
push
push
test
lahf
pop
cmc
add
out
sub
pop
ja
xor
adc
jle
sub
call
push
jbe
xor
inc
loopne
push
shr
pop
jbe
and
push
gs
pop
mov
sbb
in
pop
icebp
cwde
mov
pop
push
into
push
or
cwde
pop
rol
mul
addr16
retf
es
xor
push
pop
mov
je
cmp
in
in
pop
inc
shr
das
or
in
or
int
sbb
data16
jmp
push
ret
dec
ins
inc
jle
(bad)
data16
pop
stc
fnstsw
js
nop
mov
jmp
in
dec
inc
les
pop
call
fnstsw
pop
sub
mov
sbb
ror
jg
pop
push
shl
mov
xor
sbb
into
test
(bad)
sti
mov
xor
rcr
push
pop
popa
dec
or
(bad)
int
popf
mov
xor
ret
test
stc
mov
fsub
(bad)
sti
bound
sub
sar
pop
aam
sbb
xchg
xchg
push
xor
xor
xchg
lods
int
sahf
out
scas
retf
pop
or
rcpps
fisttp
or
ja
cmp
ja
es
(bad)
sub
xor
aas
xadd
sub
outs
fadd
jo
mov
xor
sub
int
or
cwde
sub
mov
and
int
adc
int3
adc
mov
sub
dec
or
mov
cmp
mov
mov
mov
(bad)
xor
add
sub
ds
stos
aad
add
nop
mov
daa
mov
std
cmp
movs
push
sbb
sub
push
fidivr
dec
test
jae
mov
push
jecxz
ins
loopne
(bad)
cli
arpl
pop
fisub
xor
xchg
out
mov
outs
out
pop
out
call
lds
retf
inc
ja
test
sbb
xchg
sub
lahf
mov
ret
cli
out
js
cld
hlt
push
sub
cmp
fistp
and
inc
add
pop
xchg
(bad)
scas
sub
jmp
cmp
retf
fnstcw
pop
or
out
mov
inc
push
mov
gs
fimul
ja
aam
pop
movs
xor
movs
loop
cmp
or
dec
frstor
cmc
(bad)
das
xor
psrlq
in
rol
mov
out
inc
ror
out
and
pop
leave
mov
xor
sub
or
and
jne
inc
dec
jno
stos
add
outs
test
mov
dec
mov
mov
scas
add
mov
sub
(bad)
jb
dec
call
pop
xchg
push
fisubr
sub
mov
sar
sbb
enter
fbstp
xchg
mov
mov
sbb
sub
xor
xor
sbb
(bad)
xchg
mov
xchg
dec
mov
push
ja
scas
jl
mov
loope
inc
shr
adc
mov
cmc
std
xchg
cmp
adc
xchg
mov
cmc
sti
jbe
scas
popf
xchg
inc
bnd
cs
mov
push
loop
lods
or
or
or
mov
movs
mov
add
and
inc
mov
cld
cmp
dec
mov
stc
or
mov
cdq
movs
iret
fdivp
sbb
sub
xchg
cmps
mov
jo
mov
ja
test
xlat
loope
xor
adc
inc
mov
repnz
xor
or
lsl
call
add
xor
(bad)
shl
pop
xor
adc
xrstor
sar
ffree
sub
lods
imul
(bad)
and
or
rol
push
inc
cdq
mov
loop
or
adc
jnp
(bad)
into
arpl
into
test
(bad)
pop
das
jno
inc
inc
xchg
mov
fucomp
push
cmp
inc
in
and
xor
pusha
jle
or
sub
imul
sbb
xchg
loop
mov
sub
add
daa
fnstenv
out
push
xchg
test
push
je
mov
leave
sbb
jmp
enter
out
mov
rcl
popf
or
repnz
jmp
push
ja
inc
mov
inc
outs
loopne
iret
out
jnp
fcom
push
aam
push
sti
sub
ins
sbb
jle
(bad)
fistp
cmp
push
xor
adc
add
mul
mov
adc
jl
mov
hlt
jnp
add
call
fmul
xchg
mov
in
out
jl
jle
loop
cdq
push
sub
cmp
(bad)
push
shr
inc
pop
sbb
xchg
ja
push
outs
fwait
scas
xchg
cmp
mov
(bad)
sbb
movs
mov
fild
movs
push
shl
adc
or
sbb
add
add
out
lea
aas
push
add
dec
push
shl
jle
leave
jnp
jge
arpl
and
(bad)
adc
mul
in
sub
fisttp
in
sub
fldenv
jns
cmp
mov
call
xchg
sahf
mov
add
repnz
adc
das
xlat
mov
(bad)
ins
mov
mov
add
sbb
mov
fadd
mov
mov
or
les
sub
jnp
fadd
sub
sub
sub
out
fstp
movs
(bad)
xor
push
adc
xor
gs
inc
aad
es
loopne
add
jae
mov
test
cmp
stos
out
push
shl
loopne
push
mov
cmp
cs
dec
sbb
jo
gs
fistp
jg
ret
dec
(bad)
out
stc
pusha
fmul
mov
ret
xor
stc
adc
add
(bad)
gs
repz
cmp
jo
mov
xor
add
cmp
jb
(bad)
push
xchg
mov
loope
rcl
ins
enter
ds
cmc
psrad
ror
out
adc
xchg
sti
in
loop
call
mov
cmp
xchg
scas
frstor
jb
shr
sti
outs
imul
cmps
xor
or
jnp
sub
(bad)
pop
jg
dec
mov
sbb
jle
out
pop
inc
clc
hlt
outs
mov
les
jge
mov
test
mov
sub
mov
add
and
pop
ss
jmp
dec
hlt
adc
push
repnz
cmp
adc
js
sub
retf
test
(bad)
lock
push
sub
sub
aad
lahf
cmp
pop
sub
inc
in
inc
and
cmp
mov
daa
pop
and
and
(bad)
sub
aam
cld
out
fild
xchg
mov
shr
imul
repz
jo
cmp
or
cs
cmc
cmp
adc
push
sbb
sub
test
scas
icebp
js
sbb
scas
js
(bad)
shr
repnz
scas
stos
jns
daa
jno
mov
ds
ins
push
addr16
stos
push
cmp
xor
mov
or
outs
in
jp
and
dec
popf
mov
popa
xor
mov
inc
cmps
push
(bad)
pop
cs
pop
test
pop
loope
repnz
sub
and
push
test
scas
(bad)
arpl
popf
and
mov
mov
sub
(bad)
movs
cli
adc
movs
aam
je
sti
sbb
rcr
pop
sbb
mov
xchg
ins
out
mov
and
xor
inc
and
adc
ds
or
cmp
dec
mov
cmp
pop
in
cwde
jg
ss
xor
mov
jns
clc
test
pop
leave
lock
inc
jne
outs
cmp
pusha
mov
lods
icebp
pop
mov
cdq
push
inc
mov
jno
aad
jns
test
push
sbb
cmp
cwde
data16
nop
(bad)
pop
cmps
sub
or
xor
add
mov
pop
xchg
xor
jmp
jecxz
outs
nop
xor
add
dec
nop
les
sbb
and
dec
outs
jle
ins
(bad)
pop
xor
scas
(bad)
outs
fidiv
retf
mov
jle
mov
push
and
(bad)
mov
push
sub
sbb
loop
pop
dec
enter
pusha
ret
jno
dec
xchg
or
pop
or
inc
adc
fwait
ror
mov
push
add
xchg
adc
push
in
test
jno
and
and
jmp
jb
adc
xchg
mov
jle
jmp
sbb
inc
xor
or
ins
sub
inc
(bad)
push
lds
mov
inc
loop
xchg
shl
outs
sbb
xor
into
or
adc
xchg
mov
xchg
push
out
pop
dec
push
in
jecxz
jp
push
xor
mov
xchg
mov
sti
(bad)
inc
dec
ja
test
dec
mov
or
or
xchg
es
or
sbb
in
lods
mov
stos
xchg
pop
(bad)
dec
clc
xchg
les
loop
cmp
(bad)
sbb
int3
daa
das
sub
lds
add
(bad)
and
push
imul
(bad)
sti
aam
int
das
add
aam
mov
push
mov
jecxz
mov
test
popf
xchg
(bad)
mov
pop
sub
leave
into
mov
mov
inc
aaa
xor
cmps
ret
(bad)
js
(bad)
loopne
imul
ins
push
jns
out
imul
cmp
out
dec
icebp
mov
inc
adc
adc
pop
add
mov
lods
jo
and
push
clc
sar
scas
mov
xchg
and
push
jae
outs
pop
jns
and
fwait
jbe
and
loopne
jns
not
inc
loop
and
mov
xor
pusha
in
adc
clc
imul
sar
xor
adc
rcr
dec
dec
cmps
fwait
xor
das
or
icebp
es
(bad)
cmps
addr16
gs
je
adc
cmp
sub
pushf
and
mov
xchg
xor
(bad)
movs
jns
out
movs
push
adc
xchg
jo
and
dec
push
mov
push
(bad)
outs
sub
sbb
(bad)
cmps
mov
inc
lahf
add
xor
mov
aad
lock
nop
aam
stc
jne
mov
sub
shl
push
cvtps2pd
(bad)
jno
and
pop
sbb
dec
xchg
mov
cwde
rcr
(bad)
dec
cmp
lods
add
les
and
and
adc
mul
dec
or
outs
sbb
push
aaa
call
loope
aad
cmps
nop
or
fdivr
jp
xchg
sub
ins
cmp
fs
push
retf
in
out
add
pop
sbb
jge
adc
ins
call
adc
push
iret
sub
test
(bad)
adc
out
pop
idiv
or
(bad)
enter
(bad)
or
jl
loop
imul
mov
xor
and
inc
xchg
mov
and
std
mov
jo
mov
(bad)
pushf
jecxz
les
adc
gs
popw
ds
fdivr
imul
add
add
jo
jp
pop
sbb
test
aad
cmc
jmp
stos
test
out
mov
pop
sub
mov
into
mov
mov
retf
xchg
out
bound
xor
ins
add
sahf
xor
jno
push
retf
mov
es
jae
push
dec
inc
mov
dec
sbb
js
add
mov
add
lods
aam
mul
scas
dec
sbb
sar
push
sbb
rol
arpl
sti
jecxz
sbb
jle
daa
jle
in
aaa
ret
xchg
retf
add
jnp
inc
add
jle
mov
or
fidiv
mov
mov
xchg
sti
int3
inc
setge
push
div
imul
mov
in
cmp
call
mov
inc
jmp
jmp
pop
out
idiv
adc
dec
mov
loope
inc
stc
stos
fcomp
lea
call
pop
mov
pop
cmp
in
daa
shr
pop
mov
ss
ret
(bad)
push
mov
dec
lock
fisttp
icebp
mov
fist
cmc
lea
out
pop
inc
fisubr
jmp
and
mov
jb
fcomp
mov
das
push
jns
std
rcl
stc
retf
retf
in
fwait
int
xor
push
xchg
enter
jmp
jle
inc
pop
lahf
in
xor
adc
scas
into
jb
dec
repnz
jnp
and
dec
and
fadd
ror
outs
out
lds
sbb
pop
aas
pop
lar
fld
fs
mov
ja
mov
lods
repnz
into
mov
dec
sbb
icebp
and
mov
cs
gs
popa
and
cdq
mov
aad
push
push
test
loop
add
lods
stc
fcom
test
test
push
add
jge
push
add
jb
jns
ds
stos
frstor
xchg
mov
inc
jb
shl
cmp
or
add
xchg
adc
and
adc
and
pop
mov
adc
push
and
bound
out
popa
pop
pop
out
xor
(bad)
mov
cmp
sub
jmp
push
fisubr
fidivr
(bad)
imul
push
les
pusha
xchg
cmp
aam
pop
sar
inc
stos
cmp
repnz
(bad)
into
frstor
sbb
sub
ret
sub
js
not
mov
and
ret
daa
repnz
in
aad
push
adc
adc
xchg
outs
pop
aad
xor
xchg
push
cmc
arpl
jp
adc
mov
loope
fnstenv
scas
fist
das
outs
xor
dec
outs
popa
call
inc
pop
call
arpl
add
adc
out
ret
pusha
aad
xor
dec
and
mov
add
ja
daa
xor
pop
or
or
sub
ins
cli
jmp
sub
push
add
lea
nop
in
and
adc
and
sub
and
repz
push
dec
(bad)
scas
retf
add
pop
call
inc
ins
xchg
(bad)
sub
iret
mov
jae
test
rcl
inc
(bad)
sbb
mov
test
mov
dec
jns
xchg
cs
ret
xchg
dec
loope
adc
dec
and
xlat
adc
pop
sub
sbb
xlat
mov
mul
hlt
jae
test
mov
dec
addr16
mov
popf
call
cmp
cli
cmps
aad
mov
mov
fcomp
into
jo
inc
icebp
xor
adc
enter
outs
or
enter
or
push
xchg
dec
or
push
jbe
jp
add
push
out
inc
push
lds
fldcw
push
mov
xor
pop
jg
mov
and
xor
js
test
xchg
loop
sbb
xor
pushf
stc
js
gs
repnz
and
sti
int
in
cmc
fidivr
in
mov
jle
test
dec
pop
(bad)
jne
adc
lahf
mov
xchg
movs
mov
mov
pop
shl
mov
and
jg
xchg
add
mov
aas
dec
jnp
scas
sbb
adc
ret
in
push
js
aaa
std
dec
pop
jb
cmps
jbe
jo
stc
pop
sub
cmp
(bad)
mov
or
mov
pop
and
shl
jmp
shr
xchg
jb
and
cmp
lods
ret
ins
dec
movs
std
add
xchg
retw
adc
pusha
outs
je
inc
and
and
in
ss
add
sub
jmp
sub
xor
stos
into
mov
or
jl
jae
loop
js
xchg
add
cmp
jb
jmp
das
sbb
push
cmp
popa
movs
xor
inc
push
idiv
rcr
test
cwde
es
fcomp
or
arpl
xor
and
mov
cli
rcr
cwde
jg
cmp
cmp
cld
pop
pop
rcr
cmp
xchg
inc
popa
cmps
and
xlat
js
(bad)
popa
outs
mov
rcr
dec
cwde
push
in
inc
int3
sub
mov
add
dec
or
(bad)
cs
ins
popa
call
(bad)
adc
mov
add
inc
fdivp
dec
pop
or
jb
aaa
shl
mov
adc
movs
jmp
mov
popf
scas
mov
mov
rcr
call
fucomp
je
inc
in
jbe
cs
fisttp
iret
mov
jns
ret
dec
test
pop
jnp
add
pop
sub
clc
inc
xchg
inc
(bad)
cdq
addr16
adc
loop
cmp
fcom
cs
jecxz
adc
mov
imul
jl
out
xchg
movs
dec
fnsave
fnstsw
push
hlt
adc
fbld
sub
jae
and
jnp
loopne
and
push
xor
jle
mov
jno
push
shr
xchg
sbb
test
repz
pop
stc
jne
inc
push
xor
scas
or
lahf
lock
mov
mov
loop
shl
xchg
das
fnstenv
imul
shl
aas
psraw
push
movs
hlt
sti
repnz
xor
ins
movs
(bad)
mov
pop
mov
bound
fcmovu
jg
pop
or
lea
mov
ss
sub
xchg
ficomp
add
or
(bad)
jbe
leave
sbb
mov
loopne
dec
es
(bad)
retf
je
cmc
gs
push
pusha
jmp
push
push
and
dec
lods
dec
inc
dec
fisubr
or
push
or
and
push
rcr
popa
sub
sahf
dec
xchg
shl
inc
push
imul
dec
mov
inc
mov
stos
dec
fdiv
call
fstp
into
push
test
add
jmp
into
and
inc
sbb
jp
push
loopne
inc
and
leave
mul
pop
push
in
cmp
aaa
inc
jbe
mov
adc
pusha
lods
sub
jae
jmp
mov
push
push
outs
loop
mov
inc
ja
jmp
sub
out
movs
push
int3
jl
sbb
jl
xchg
ds
pusha
pop
bound
sbb
mul
(bad)
sub
xchg
mov
xchg
and
pop
rcl
test
gs
es
xchg
sbb
push
push
push
popf
mov
inc
rcr
mov
mov
mov
retf
xor
lahf
aam
inc
dec
cmp
jmp
test
out
div
retf
xor
out
mov
pop
sbb
pusha
pop
fstp
fcom
sub
or
nop
imul
fiadd
pop
shr
test
add
inc
add
es
mov
xchg
ss
jg
xchg
(bad)
daa
bound
jb
repnz
or
cmp
jle
dec
push
fsubr
xchg
push
je
hlt
jmp
cmp
mov
mov
(bad)
xor
mov
cmp
ss
movs
jno
clc
(bad)
scas
lahf
xor
int3
xlat
(bad)
push
xor
pop
dec
dec
movs
mov
xchg
inc
sbb
push
iret
cmp
outs
push
das
cmp
(bad)
jl
dec
fs
xchg
in
mov
(bad)
neg
inc
loopne
xor
xchg
ja
jne
scas
sete
loop
adc
int
cwde
inc
and
and
jl
xchg
mov
addr16
retf
or
out
or
mov
mov
jae
lahf
scas
mov
lds
pop
inc
cmps
arpl
jge
inc
xchg
int3
pop
nop
movs
xchg
shr
jmp
jae
mov
or
pop
xchg
jo
pop
stos
add
ret
and
xor
scas
jnp
sbb
and
jae
fsubr
xlat
xchg
cmc
std
cmp
push
xchg
inc
(bad)
retf
sbb
or
push
push
add
xor
(bad)
cmp
test
leave
sub
imul
nop
mov
sub
mov
adc
mov
ja
push
ss
in
test
and
bound
and
hlt
in
mov
loop
xchg
test
sbb
addr16
add
adc
jb
in
xchg
or
repnz
(bad)
fstp
adc
jmp
outs
cld
enter
xor
shl
popa
add
movs
scas
xchg
ds
push
les
push
ja
sbb
cmc
(bad)
pop
fnstenv
inc
dec
fdiv
jno
sbb
mov
repnz
pop
ret
jecxz
fist
aas
iret
(bad)
xlat
clc
mov
ret
test
pushf
mov
out
pop
ret
pusha
push
std
and
ins
dec
add
dec
je
mov
cld
pop
test
xchg
pop
inc
mov
sub
and
mov
int
xchg
stos
xor
hlt
inc
dec
std
xor
leave
repz
ror
jbe
stos
sub
cmp
shl
cmp
std
push
gs
pop
test
pop
cmp
inc
lahf
lahf
pop
sub
popa
inc
pop
or
push
push
jae
aas
in
into
add
addr16
push
das
ror
sar
push
fdivp
dec
cmp
sub
imul
repnz
icebp
jp
push
aaa
cmp
dec
push
xor
sbb
mov
cmp
sub
enter
add
sub
mov
fisub
ins
pop
test
xchg
lods
mov
loopne
stos
jae
int
add
dec
aaa
jbe
je
outs
repz
adc
mov
arpl
jmp
out
or
sti
push
pusha
sub
(bad)
in
and
int
or
fistp
mov
aas
fisttp
sbb
jmp
xor
enter
push
mov
repnz
call
dec
test
(bad)
daa
add
xor
test
lock
pop
aam
and
rcl
cld
push
inc
mov
sub
ja
cmp
ficomp
mov
lods
(bad)
mov
mov
(bad)
xlat
mov
dec
(bad)
pop
jl
cmp
xlat
not
dec
jl
movs
fmul
xchg
popf
jmp
jmp
jbe
push
xor
and
fcmovb
(bad)
pop
push
and
xor
lods
imul
int3
call
movs
ds
mov
push
repnz
xchg
fld
les
pop
outs
fld
(bad)
fcomp
jb
fs
push
mov
adc
imul
mov
mov
mov
sub
push
in
(bad)
push
ror
mov
cmp
je
jle
and
enter
call
popf
in
sub
push
stc
ds
jge
inc
jo
sub
pop
mov
cmc
cli
int3
mov
ins
xchg
sbb
jmp
pop
cmps
push
in
loope
mov
cmp
mov
inc
fstp
mov
mov
dec
xchg
sbb
cmps
dec
mov
ret
ficomp
cmp
and
shr
(bad)
fiadd
push
ds
int
imul
mov
xchg
rcr
mov
xlat
add
retf
xor
adc
cld
das
out
repnz
test
pop
jmp
pusha
arpl
jg
and
fstp
call
xor
nop
pop
dec
xor
xchg
outs
fnstsw
call
dec
pop
sub
xchg
mov
test
imul
aad
loop
out
cmp
xchg
fisubr
sub
scas
sahf
fnsave
cdq
out
shr
xor
and
shr
call
or
inc
outs
mov
loop
sub
push
ficomp
adc
loop
and
je
mov
loop
mov
pop
mov
xchg
shl
int
cmp
jge
fidivr
mov
jmp
aam
test
imul
lods
sahf
pop
or
retf
in
(bad)
movs
jmp
push
jne
gs
dec
ret
xor
enter
or
mov
push
inc
xor
mov
jbe
mov
test
cmp
rol
inc
nop
dec
jle
stos
cmp
xchg
sub
inc
jl
lods
cmp
sahf
or
pop
adc
mov
ds
inc
ret
arpl
push
push
iret
or
scas
lds
call
xchg
mov
scas
imul
jb
adc
sbb
ds
mov
jno
sbb
or
push
dec
shr
mov
fs
int3
sti
inc
cdq
mov
data16
xlat
sub
adc
pop
add
mov
mov
sub
and
jbe
popf
mov
push
into
leave
mov
daa
fs
ja
xor
and
in
sbb
mov
add
sub
xor
xchg
gs
push
sbb
in
adc
or
xor
cmp
cmp
push
aas
stos
repz
sar
adc
mov
sub
inc
dec
into
pop
sbb
inc
addr16
movs
jecxz
shl
or
jmp
pop
in
sbb
xchg
addr16
add
pop
adc
jge
scas
xchg
fild
in
test
jno
sub
std
cmp
fistp
push
cdq
ja
(bad)
and
mov
pop
jno
sbb
cmp
fisub
xchg
mov
rcl
xor
jecxz
mov
jl
and
outs
daa
leave
adc
cmps
aaa
sbb
into
inc
dec
aas
idiv
push
mov
test
cmp
jg
pop
xor
ret
in
(bad)
cmp
push
sbb
push
pop
in
cmp
rcr
and
das
fs
or
out
jmp
adc
test
pop
mov
outs
jp
pop
or
sub
cmp
cmp
test
mov
adc
scas
push
xchg
or
outs
jae
cwde
push
int
mov
mov
mov
xchg
pusha
cmp
adc
inc
fisttp
fst
in
iret
sbb
sub
outs
bound
(bad)
scas
or
pop
mov
jne
in
push
dec
(bad)
jmp
pushf
adc
push
fnstsw
int
sub
add
push
mov
(bad)
loope
jmp
xchg
test
fmul
das
fcomi
popa
add
xchg
call
push
and
push
fdiv
cmps
mov
call
push
test
fs
inc
aaa
cmp
ja
cmps
dec
sub
loopne
jg
pop
stos
mov
dec
pop
push
or
ja
or
jae
jmp
add
pop
cmp
(bad)
out
std
push
jp
aam
cmp
hlt
mov
data16
mov
pop
daa
ins
(bad)
in
xor
cli
pusha
int
and
call
enter
scas
leave
fidivr
cld
sbb
call
cmp
or
in
dec
and
fwait
pop
fidiv
pushf
sar
fwait
mov
loop
lods
push
and
pop
mov
or
dec
fistp
inc
mov
sbb
fcomp
or
fs
retf
pop
jmp
sub
cwde
lods
xor
(bad)
clc
fdiv
loope
or
mov
daa
shl
add
je
inc
cmp
sbb
adc
out
pop
popa
cmp
popf
dec
mov
adc
mov
jnp
es
imul
mov
lea
push
std
lods
push
loopne
aad
hlt
(bad)
xor
loopne
lods
inc
xchg
push
lock
mov
cmps
in
xchg
jge
jo
xchg
cli
or
jns
add
scas
cli
mov
aaa
xchg
loope
(bad)
stc
arpl
ins
sub
cmp
xor
add
lock
inc
ins
cmp
in
cmp
jle
adc
je
call
jge
or
pop
rcr
sbb
pop
and
inc
push
mov
out
mov
ror
mul
movs
push
sub
push
fstp
cmps
push
cld
js
fisub
pop
pop
inc
imul
adc
es
or
lea
retf
das
call
sahf
hlt
sti
nop
adc
pop
inc
nop
mov
dec
push
loope
adc
stos
mov
retf
sbb
int
loopne
ror
jne
xchg
call
inc
xchg
pop
pop
je
ror
push
(bad)
sahf
cmp
add
movs
sub
sbb
(bad)
pop
pop
push
mov
cwde
adc
and
fs
(bad)
cmps
lds
sub
fisttp
test
or
fsubr
lods
mov
sbb
inc
jg
sub
movs
aad
xor
ins
push
(bad)
mov
fs
stos
lods
push
cmps
mov
fmul
aas
adc
push
xchg
jmp
(bad)
mov
sbb
jmp
push
lock
xchg
sbb
lods
push
loope
fdivr
lock
pop
in
mov
loop
push
cmc
mov
mov
imul
hlt
sbb
call
adc
sbb
xchg
fstp
jecxz
xchg
adc
fsubr
jnp
test
mov
adc
(bad)
cmp
test
sbb
hlt
pop
repnz
cld
mov
inc
pop
test
jbe
retf
fwait
dec
call
inc
jno
cmc
mov
(bad)
add
mov
outs
sbb
imul
pop
push
lods
ja
xchg
mov
jno
mov
icebp
inc
retf
xchg
aad
loop
push
mov
fs
fcmovu
nop
add
out
icebp
xor
icebp
shr
in
ret
pop
inc
(bad)
aaa
and
ja
inc
push
dec
sub
cmp
in
fidiv
inc
pop
jp
mov
mov
push
adc
jae
stc
push
js
cmps
dec
adc
(bad)
xor
fs
aas
fs
mov
mov
retf
sbb
mov
ret
mov
xchg
imul
pop
es
jg
or
adc
cmps
jno
mov
bound
push
adc
mov
out
out
jno
sub
cmp
retf
not
std
sti
jno
inc
xchg
mov
xor
xor
rcl
mov
(bad)
push
cmps
xchg
sub
xchg
mov
mov
das
xor
adc
dec
mov
into
xor
pop
cmc
ret
jecxz
pop
jns
cld
and
mov
loopne
or
jbe
inc
leave
loope
xchg
pop
cs
push
xchg
ror
jae
int3
mov
into
adc
out
adc
cmc
mov
sahf
scas
cwde
iret
in
icebp
and
outs
dec
push
pop
pop
sub
icebp
push
cli
clc
sbb
sbb
push
mov
inc
bound
shl
xchg
pop
xor
sahf
dec
add
sahf
or
xor
ins
push
pop
xchg
pop
das
shl
sbb
inc
mov
lods
ret
daa
push
frstor
retf
cld
xor
aad
push
in
mov
xor
imul
xor
shr
jne
outs
or
push
not
test
out
inc
inc
es
xchg
add
xchg
cmps
sub
mov
mov
xchg
xor
cs
mov
add
cmp
test
jae
loope
xor
icebp
sbb
es
mov
xchg
nop
in
hlt
shr
sbb
stos
dec
(bad)
adc
push
in
jns
in
aas
mov
ins
pop
mov
cwde
cmc
xor
aam
xchg
add
inc
push
mov
or
jae
stos
dec
adc
push
dec
xor
xchg
rcl
(bad)
jge
dec
jnp
push
mov
aam
pop
clc
adc
sti
jmp
cmps
push
xlat
aad
fcomp
loope
jb
lds
fs
pop
and
repz
icebp
mov
cmc
lea
push
repnz
mov
add
or
test
fstp
sub
data16
jmp
push
movs
(bad)
jl
inc
pop
jns
iret
fld
in
pop
imul
cmovs
jle
mov
mov
movs
add
outs
movs
pusha
cld
cmp
adc
(bad)
les
mov
lea
cs
mov
pop
xor
test
xchg
push
push
sub
and
dec
sub
jge
push
mov
shl
sahf
push
pop
xchg
xchg
stc
pop
sbb
in
xlat
pop
and
add
rol
mov
int
mov
pop
psrlw
pop
xchg
xchg
pop
push
pop
sub
xor
sti
xchg
jp
push
jb
sbb
fs
mov
adc
rcr
fwait
repz
fdivr
data16
inc
test
cmp
pop
push
cmp
hlt
sub
fsub
fstp
pop
leave
mov
dec
add
(bad)
out
out
pop
ror
movs
add
int
fbstp
dec
sbb
icebp
mov
add
xchg
fisttp
ja
jb
sbb
mov
les
jg
mov
xor
into
mov
into
jge
add
or
loop
aas
lds
cmp
icebp
jmp
mov
dec
and
(bad)
scas
mov
mov
or
call
mov
cmp
cmp
data16
test
stos
into
scas
test
ds
mov
retf
stc
mov
rol
jb
jle
mov
sti
xor
jg
fild
lds
adc
lock
pushf
mov
pop
jo
cmp
add
(bad)
test
sub
cmps
pop
and
das
or
sub
pop
inc
das
inc
xchg
sbb
mov
adc
push
inc
cmp
cmp
repz
cmp
int3
and
sahf
popw
xchg
jmp
pop
(bad)
fld
push
stos
mul
inc
call
cli
sbb
inc
inc
pop
adc
pop
cld
mov
add
push
jne
add
aaa
jo
xor
add
adc
or
xchg
mov
scas
outs
and
fcomp
dec
ror
add
lods
jne
xchg
ds
stos
xor
adc
cmp
pusha
mov
sti
test
jbe
lock
cwde
call
cli
push
jnp
mov
fistp
int
cmp
gs
pushf
aas
test
inc
mov
and
adc
ja
(bad)
push
pop
jne
add
fcom
cmp
xor
cmp
mov
sbb
mov
cwde
xchg
push
and
test
imul
mov
aas
xchg
scas
mov
push
xor
ins
fnstcw
xor
sbb
cmp
inc
(bad)
je
sbb
aaa
sbb
mov
mov
sbb
push
inc
movs
jmp
xchg
cmp
inc
cmps
xchg
leave
push
push
pop
push
sar
sahf
push
lock
js
sahf
std
xor
mov
out
xchg
hlt
popa
pop
je
push
test
loopne
neg
je
rcl
call
pop
xor
mov
push
es
cwde
and
jnp
es
cli
cmp
ja
fs
shr
idiv
mov
add
rcl
ficom
xor
fdivr
push
adc
cmp
push
and
push
adc
jnp
dec
cld
icebp
sub
jno
push
aas
xchg
add
lock
push
test
xchg
sbb
adc
sub
stos
retf
xchg
or
stos
arpl
xchg
les
jbe
fdiv
aad
mov
out
sub
mov
out
lods
out
xchg
shl
stc
fmul
adc
xor
pop
addr16
and
pop
mov
mov
(bad)
(bad)
lock
xchg
stc
aam
inc
adc
(bad)
or
sub
leave
and
push
sub
xchg
mov
xlat
jg
or
dec
or
rcl
or
fdiv
mov
jmp
arpl
test
sti
out
cli
fdiv
daa
stos
stc
xchg
data16
dec
pop
ins
(bad)
add
loop
adc
push
out
inc
and
mov
inc
mov
sar
or
sbb
xchg
xchg
std
xchg
cmp
xor
xchg
in
aas
cmc
int3
sbb
(bad)
ret
mov
jne
mov
loop
ja
push
bound
js
icebp
dec
mov
movs
mov
jge
movs
repnz
icebp
ret
push
es
and
scas
add
mov
sub
sbb
leave
pshufw
add
movs
(bad)
imul
nop
jmp
adc
pop
inc
sahf
add
popf
out
out
jmp
xchg
outs
int3
pop
cld
push
pop
lods
loope
adc
jno
jp
xchg
inc
mov
xor
and
test
push
push
sar
inc
sub
cmp
ret
xor
xchg
xchg
int3
pop
sbb
mov
and
retf
je
jp
gs
inc
pop
add
gs
cmp
dec
scas
push
inc
test
mov
addr16
mov
fcomp
add
dec
mov
shr
outs
or
in
jno
mov
dec
fwait
out
cli
icebp
and
sub
(bad)
xchg
dec
mov
mul
int3
sti
push
mov
add
neg
push
or
or
sar
sub
outs
mov
repz
mov
inc
js
push
lea
pop
jb
mov
sbb
stos
retf
adc
gs
inc
cmps
lea
lods
sub
jbe
inc
sahf
faddp
push
push
adc
and
(bad)
pop
call
adc
(bad)
loop
xchg
movs
ds
lds
icebp
mov
cdq
or
inc
outs
adc
sub
ret
mov
and
or
mov
sar
push
mov
movs
das
bound
fld
mov
mov
(bad)
rol
test
lahf
sub
mov
mov
cdq
out
and
add
repz
dec
enter
imul
mov
lahf
jmp
sub
jle
mov
add
dec
xor
(bad)
call
add
and
out
cli
xor
cdq
xor
inc
iret
xor
and
aam
jno
jo
and
push
sahf
test
mov
iret
sbb
pop
into
push
mov
adc
mov
jp
push
call
call
xchg
and
pop
cmp
push
pop
xchg
aaa
mov
push
stos
in
(bad)
xlat
jb
addr16
scas
pop
test
push
fsub
lock
iret
fistp
in
aaa
jg
sbb
sti
loope
pop
arpl
lods
dec
xchg
pop
mov
pop
(bad)
cmc
push
mov
mov
pop
in
mov
(bad)
xchg
push
ss
outs
xor
inc
lods
aam
xchg
jns
nop
cmps
stos
cmc
loop
cmp
es
rcl
jne
dec
fs
(bad)
ja
(bad)
int3
lahf
mov
add
in
dec
sahf
popa
clc
aas
fucom
or
pop
add
xor
mov
add
aad
leave
out
add
push
xchg
es
or
inc
add
inc
xchg
and
out
movs
ins
out
xchg
dec
inc
(bad)
rcl
mov
add
or
xchg
aam
and
loopne
leave
bnd
dec
sbb
add
hlt
and
inc
rol
mov
add
ja
inc
push
jnp
fstp
pop
ds
popa
lods
lahf
pop
int
or
inc
add
mov
add
dec
outs
jp
push
scas
adc
ror
push
inc
aad
out
sar
adc
sbb
jmp
and
rcl
jmp
xchg
xchg
pushf
pop
mov
popf
call
jge
iret
cli
jmp
movs
mov
das
xor
pop
rol
loope
test
and
or
icebp
inc
(bad)
jmp
iret
fmul
sub
imul
ss
sub
dec
sbb
sti
jo
xor
add
repnz
mov
jb
outs
movs
or
out
std
adc
mov
test
popa
mov
daa
jl
and
bound
ins
fdivp
call
loope
cld
inc
(bad)
xor
(bad)
pop
mov
sub
mov
iret
xchg
movs
inc
call
cmps
fiadd
ins
dec
mov
clc
cmps
mov
push
pop
ins
xor
ss
add
xchg
adc
inc
push
into
sbb
mov
and
sub
cmps
fbstp
jp
cwde
mov
mov
mov
icebp
out
push
aad
add
mov
outs
or
int
je
sbb
or
lods
cld
inc
mov
cwde
cli
jl
(bad)
cdq
adc
in
mov
pusha
dec
xor
add
addr16
(bad)
ffreep
aad
hlt
lahf
dec
mov
stos
cdq
jb
xor
and
ret
in
test
sahf
pop
fst
pop
cmp
ucomiss
cmp
out
adc
xchg
xlat
leave
int
movs
pop
inc
pop
std
daa
(bad)
cmc
add
addr16
push
jne
adc
stos
aam
add
mov
cmp
push
cmp
mov
(bad)
jmp
(bad)
fs
out
adc
stc
sub
les
and
push
shl
mov
and
sub
push
mov
push
sbb
mov
ins
sti
inc
outs
xor
mov
mov
icebp
lds
cmp
inc
push
mov
pop
bound
test
mov
stc
mov
sub
scas
div
push
sub
mov
inc
or
and
and
lock
arpl
mov
out
call
data16
addr16
cmp
sbb
xor
dec
push
icebp
mov
jg
xchg
add
call
push
mov
adc
dec
fadd
add
mov
scas
jno
cmp
mov
sbb
sbb
and
mov
inc
loop
cwde
sub
jecxz
mov
movs
rol
in
adc
shr
cmp
dec
add
jae
lods
push
xchg
aam
arpl
daa
sahf
mov
pusha
xchg
fwait
jg
add
push
sbb
push
add
leave
imul
mov
push
jge
rcl
gs
fnstcw
lds
aad
dec
pop
mov
adc
mov
test
iret
outs
popf
mov
sbb
inc
jmp
cmp
push
jne
mov
xchg
cwde
repz
sub
push
jne
mov
mov
cmp
stos
cld
mov
fmul
sti
stos
ret
cmp
inc
cmp
aaa
arpl
ins
loopne
or
enter
push
ja
xor
rcr
mov
mov
push
popf
and
adc
or
xchg
add
clc
xlat
gs
jmp
cdq
mov
mov
mov
or
sbb
ins
push
or
cwde
mov
jg
pop
mov
push
int3
mov
jmp
sti
stc
jmp
push
push
inc
push
mov
pop
lea
(bad)
addr16
push
lods
das
cs
mov
fdiv
js
cmps
push
pusha
icebp
adc
jbe
jg
inc
xor
sub
js
inc
jecxz
push
lods
jbe
inc
call
mov
ss
and
cdq
push
cmp
ret
in
leave
sbb
arpl
call
ins
push
int3
mov
lock
xchg
add
adc
and
or
leave
pusha
mov
loope
mov
(bad)
std
jg
xchg
or
fwait
pop
dec
or
je
inc
in
shr
outs
ins
(bad)
fwait
xchg
daa
(bad)
xchg
adc
jp
or
lahf
iret
fadd
jo
int
jnp
lock
mov
iret
xlat
mov
in
push
rcr
rcr
add
aaa
arpl
pop
cmp
jg
outs
adc
ds
and
adc
inc
mov
out
cmp
xchg
sbb
sub
lods
xor
movs
sti
dec
ds
imul
aam
lock
mov
jnp
push
ins
jmp
retf
pop
addr16
test
inc
mov
sub
ret
add
inc
cmc
dec
mov
mov
popf
xchg
mov
cmp
xchg
stos
sbb
or
add
repz
mov
mov
and
xchg
mov
rcl
ja
fidiv
clc
ss
ficomp
shl
adc
retf
and
ret
popa
adc
push
fs
test
mov
movs
imul
scas
pusha
xor
mov
shl
int
imul
inc
ja
outs
pusha
mov
test
cwde
pop
or
aas
retf
mov
rep
movs
(bad)
pusha
jg
enter
int3
and
or
or
in
sub
sub
bound
mov
pop
int
push
aam
into
jmp
add
fdiv
mov
xchg
ror
imul
push
xor
push
pop
sbb
or
(bad)
mov
mov
cmp
adc
iret
pusha
add
cs
pop
enter
dec
pop
xchg
in
lahf
loopne
out
and
clc
es
pop
xchg
push
lds
test
cmp
mov
retf
jmp
jns
xchg
fnstsw
cmps
push
pop
fist
xchg
add
test
push
outs
xchg
ins
fnstsw
jae
retf
add
icebp
mov
dec
mov
shr
dec
mov
daa
mov
lock
xor
dec
fst
add
iret
inc
adc
(bad)
dec
ins
and
mov
sbb
and
fwait
daa
mov
lods
or
enter
sahf
or
repz
jg
adc
or
icebp
cmp
cwde
jo
aaa
xchg
dec
clc
mov
dec
add
add
fwait
ret
dec
popf
int3
out
and
loop
xchg
jns
icebp
xlat
aam
rcl
sbb
jo
repz
pop
cmp
rcl
sar
cmp
ds
pop
in
mov
out
cmps
call
add
push
xchg
mov
jle
ins
or
mov
ja
cdq
int3
stc
adc
add
sbb
and
cmps
stc
loop
push
outs
adc
xor
cmp
ror
adc
mov
fisubr
adc
jnp
scas
stos
ins
shl
in
and
enter
clc
xor
imul
xchg
movs
add
int
sbb
and
sti
jne
sbb
mov
popf
mov
(bad)
pop
adc
pop
jnp
push
gs
jbe
and
clc
cmp
into
dec
aaa
mov
push
dec
pop
leave
inc
retf
icebp
into
sbb
jb
push
ds
jae
and
ret
pop
or
lods
jg
dec
and
lahf
jp
mov
dec
pop
les
test
cmps
push
mov
sub
adc
retf
sbb
bound
fwait
push
pop
adc
rcr
dec
xchg
and
int
add
mov
xchg
loop
retf
push
call
xchg
lahf
mov
xchg
mov
ins
mov
mov
pop
dec
and
in
in
jmp
adc
fidivr
mov
cs
std
fisttp
retf
xchg
sbb
or
aad
add
pushf
jge
ja
or
es
aaa
inc
mov
movs
xchg
xchg
or
test
sti
stos
(bad)
fiadd
retf
or
jo
add
test
lods
in
and
stc
dec
sub
test
jp
outs
or
mov
movs
xchg
push
mov
call
jp
pop
sbb
gs
cmp
adc
jl
sub
data16
adc
pop
push
mov
or
mov
shl
xchg
(bad)
fiadd
repnz
mov
mov
cmp
cmp
ja
pop
pop
(bad)
and
jg
rol
push
xchg
add
and
pop
es
rcl
sub
dec
jns
add
mov
mov
fstp
aad
mov
(bad)
push
pop
outs
sub
push
in
pusha
xor
mov
cmps
imul
cmc
sbb
sub
mov
pop
scas
call
ds
or
shr
rcl
daa
jle
cli
cwde
popa
stos
into
push
pop
mov
popf
sahf
(bad)
inc
mov
fidiv
sbb
popa
xcrypt-cfb
cmps
in
popa
test
popa
xor
dec
adc
fmul
push
int
fdiv
(bad)
push
push
push
popa
pop
sbb
or
xchg
xchg
stc
jbe
addr16
and
repz
push
pop
jge
push
sbb
lods
shl
aas
arpl
loope
dec
in
ss
(bad)
mov
mov
push
add
xchg
out
sub
out
sub
icebp
pushf
pop
out
in
mov
pop
cmc
out
pushf
(bad)
push
mov
ss
arpl
aaa
out
xor
add
loopne
xchg
test
and
cmps
(bad)
fsub
xchg
push
adc
jg
ins
inc
pop
cmp
inc
mov
xchg
enter
gs
sub
lods
(bad)
pushw
sahf
bound
out
adc
hlt
push
bound
inc
and
ins
adc
test
cwde
fidivr
mov
pop
fwait
mov
jne
sbb
fst
icebp
mov
xchg
cmp
xchg
mov
mov
sub
(bad)
add
mov
shl
jp
retf
gs
mov
sub
aam
popf
popf
jmp
loopne
inc
daa
sub
mov
mov
test
adc
lods
push
mov
mov
mov
jns
mov
sbb
xchg
mov
movs
fs
jl
push
stc
jae
outs
bound
jno
ins
dec
scas
and
sub
aad
lock
dec
jmp
fs
and
test
xor
aas
xchg
jp
dec
and
or
mov
or
push
pop
into
push
sahf
xlat
or
lock
fist
sbb
mov
mov
shl
(bad)
jne
push
sbb
mov
fadd
retf
and
call
das
push
xchg
adc
and
ret
xor
es
ins
lods
icebp
mov
add
mov
add
icebp
(bad)
pop
(bad)
jl
mov
xor
ds
xchg
sub
fwait
out
js
jle
fist
sti
sbb
dec
xor
xchg
cmc
inc
aas
push
fnstsw
repnz
loop
mov
adc
test
sar
pushw
lock
aam
test
sbb
arpl
adc
or
inc
sbb
mov
and
ret
retf
and
jbe
out
cld
mov
cmc
jle
(bad)
in
jnp
sti
mov
jno
outs
ret
pop
or
scas
xchg
mov
loop
dec
(bad)
ins
xlat
scas
outs
mov
outs
jo
pop
xor
mov
dec
inc
push
cld
and
jg
fnstcw
pop
push
(bad)
idiv
cmp
adc
std
pop
xchg
inc
iret
js
test
frndint
sbb
inc
pop
pop
fimul
lds
sbb
dec
jae
mov
test
repz
cmp
push
jp
shl
jg
in
sti
and
test
out
mov
xchg
rcl
add
pop
test
jmp
inc
push
mov
and
and
dec
int
dec
fdiv
outs
sub
mov
push
mov
ja
shl
int
mov
std
xor
sahf
and
jmp
push
loope
stos
mov
mov
xchg
cmp
sbb
dec
adc
jo
push
je
addr16
cs
out
xor
push
add
outs
xor
cmps
xor
adc
adc
(bad)
es
and
add
jmp
ins
sahf
fisubr
jbe
push
pop
cmp
push
mov
inc
xor
xor
sbb
adc
pushf
mov
inc
pop
push
and
xor
mov
jmp
rcr
inc
out
call
retf
mov
jbe
jns
mov
adc
scas
jno
sub
xlat
sub
or
shld
xchg
scas
inc
int
jno
sub
mov
icebp
movs
pop
mov
push
jecxz
repnz
adc
inc
test
loop
ins
in
sub
cdq
xchg
xchg
addr16
mov
jp
test
xor
xchg
mov
push
test
jl
cmp
pop
dec
jae
jmp
mov
sbb
lods
mov
sbb
sub
and
ds
and
jp
repnz
fidivr
pop
fisttp
and
nop
sub
(bad)
mov
mov
movs
call
inc
adc
gs
fldenv
or
je
fisubr
sbb
test
inc
mov
xchg
mov
mov
or
rcr
sub
(bad)
xchg
iret
mov
dec
mov
pop
test
mov
dec
push
popf
jno
push
shr
popa
sub
ja
mov
(bad)
lock
adc
sbb
mov
int3
out
jle
stos
mov
fild
jnp
or
jmp
ret
les
stos
addr16
mov
outs
stos
and
adc
(bad)
cmp
jae
fwait
add
cmps
or
popf
mov
push
and
daa
bound
cmp
fisubr
jb
adc
and
push
mov
scas
(bad)
in
push
outs
sbb
mov
cmp
aam
sbb
aas
test
out
xor
sar
addr16
push
fild
in
push
out
fnstcw
hlt
pop
push
mov
outs
push
push
mov
(bad)
mov
and
data16
or
inc
add
loopne
sbb
daa
loop
pop
(bad)
and
mov
ret
idiv
push
shr
fdivr
shl
push
daa
add
data16
pop
add
sbb
sbb
mov
mov
push
mov
xor
fstp
pop
mov
cmp
test
fucomi
cmps
pop
mov
push
add
and
loope
jmp
(bad)
int3
cmc
xor
adc
adc
mov
dec
iret
inc
or
adc
sbb
pop
cmps
dec
jecxz
das
fld
mov
sub
ret
cmc
stc
dec
sbb
jb
std
mov
mov
test
jb
sub
cmc
loope
das
scas
call
jbe
xchg
pop
imul
call
fs
adc
iret
cdq
in
call
xor
aaa
fcomi
aas
sbb
add
cmp
in
pop
jp
xor
lods
movs
jns
mov
inc
cmp
test
push
lods
stos
fadd
lea
test
push
jle
repz
mov
(bad)
fsubr
popf
or
es
lahf
xor
xchg
out
dec
loope
jmp
jl
scas
sub
jae
stos
ret
pop
rol
test
(bad)
and
out
aad
out
sbb
mov
mov
xchg
repz
mov
outs
cmps
jo
push
cdq
add
jle
cmp
mov
pusha
leave
push
bound
jp
dec
(bad)
ss
add
(bad)
(bad)
inc
in
or
in
sbb
pop
jo
jge
jmp
lds
cli
fcomi
xchg
push
cmp
sbb
fstp
xor
fild
in
addr16
xlat
fcomp
pop
sub
or
add
dec
xchg
cmp
mov
int3
cmp
fdivr
xchg
dec
adc
js
in
jo
clc
out
pop
popa
mov
xchg
mov
(bad)
mov
ret
test
in
fsub
(bad)
sti
pop
pop
jne
sahf
dec
cwde
out
or
add
int
inc
mov
add
dec
ret
ins
addr16
xchg
stos
and
arpl
enter
pop
xor
jg
dec
jae
rcr
push
fisub
push
test
lea
fisubr
icebp
shl
or
inc
push
scas
outs
int
stos
push
mov
movs
aam
pop
mov
xchg
and
fsubr
ja
cmps
ror
je
popf
mov
jne
dec
push
mov
jbe
sahf
imul
(bad)
int
shr
pusha
add
xchg
fistp
mov
fstp
or
repz
pop
aam
mov
call
or
sbb
cs
mov
inc
sub
fimul
dec
std
adc
dec
fisttp
or
lds
cmp
and
adc
div
les
dec
jbe
pop
cs
shr
shl
mov
or
jae
cmp
xchg
cmp
jmp
bound
push
cdq
les
adc
out
aas
jp
mov
ss
add
mov
inc
imul
sbb
js
dec
shr
jle
adc
push
adc
shr
stos
mov
pop
push
and
mov
mov
push
aad
cdq
retf
mov
push
in
xchg
pop
adc
add
cdq
les
mov
outs
sbb
test
jns
dec
out
test
in
and
sar
add
sbb
add
add
mov
shr
cmps
loope
stos
movs
push
add
fucomi
cmps
xchg
aaa
mov
jmp
push
adc
sbb
xchg
aad
sbb
jmp
xor
ficom
ret
and
mov
inc
out
cdq
push
xor
push
and
inc
push
(bad)
lea
(bad)
push
pop
jae
jbe
lahf
je
inc
mov
mov
mov
jecxz
fcom
cdq
pop
adc
pop
hlt
stc
(bad)
mov
(bad)
jnp
jmp
adc
gs
ds
xchg
push
in
fsubr
into
cmps
loopne
ins
outs
ja
loop
push
leave
loop
aas
into
imul
or
add
mov
shl
inc
repz
test
mov
dec
retf
xor
mov
jnp
or
jecxz
data16
js
jp
xor
jno
or
ret
fs
jle
std
pop
daa
pop
xchg
(bad)
mov
fcomp
aaa
adc
enter
or
adc
sar
rcl
mov
push
fwait
das
cmp
jno
out
pop
cmp
ja
ja
sti
push
and
retf
mov
mov
loop
jno
fcomp
ret
lds
mov
popa
fild
test
pushf
movs
inc
es
arpl
adc
mov
in
mov
cwde
adc
ss
(bad)
cmps
pop
mov
xchg
xchg
mov
push
out
stos
in
stos
pop
fstp
jle
push
mov
sbb
cmp
leave
es
(bad)
js
out
jp
jmp
les
out
xlat
push
fwait
or
cmp
ins
push
test
mov
imul
ror
cmp
ror
test
lods
add
aaa
pop
fsub
adc
call
out
scas
inc
cmp
push
or
and
pop
xchg
in
enter
loope
sbb
rol
pop
dec
out
push
out
mov
clc
xchg
pop
sbb
and
cwde
ror
fist
(bad)
fsub
xchg
ds
jge
ss
xchg
(bad)
sub
test
pop
jge
pushf
push
sub
ins
mov
jecxz
fwait
pop
jl
iret
cs
adc
mov
enter
pop
push
mov
mov
hlt
mov
mov
jl
div
pop
lods
jecxz
iret
add
addr16
jo
leave
lods
loopne
mov
and
push
(bad)
jmp
es
inc
jg
inc
sbb
cli
xchg
sbb
inc
push
add
inc
sbb
sbb
fwait
inc
sub
(bad)
fild
ror
cmc
mov
mov
pop
pop
clc
retf
jecxz
jmp
movs
loopne
out
dec
clc
xchg
(bad)
xchg
mov
jnp
mov
cmp
dec
push
push
push
addr16
pop
mov
aam
jg
dec
mov
fdiv
ins
je
push
push
out
xor
push
sub
scas
jg
int
ds
es
pop
mov
inc
inc
add
imul
popf
and
push
push
and
shl
repz
mov
inc
sbb
test
push
adc
jmp
adc
xor
jle
sub
mov
daa
and
xchg
inc
push
jo
clc
sbb
xchg
mov
sub
inc
pop
mov
jecxz
enter
jnp
push
adc
sbb
aaa
(bad)
in
retf
out
mov
add
mov
iret
xor
scas
ficom
mov
idiv
or
fcom
cld
ss
loop
mov
push
mov
aad
push
movs
jl
outs
or
sub
rol
nop
pop
popa
xchg
add
popa
jae
int
ds
xor
cmp
movs
pop
cs
test
push
push
leave
and
cld
addr16
mov
mov
mov
jmp
out
push
mov
hlt
repnz
push
cmp
dec
mov
cmp
aam
jns
mov
call
mov
dec
and
popf
ja
addr16
sti
sub
lahf
cmp
(bad)
jne
push
xchg
inc
dec
arpl
aas
dec
or
adc
es
jmp
addr16
jmp
adc
ss
ss
f2xm1
jne
mov
jmp
in
aam
jo
push
dec
(bad)
stos
adc
out
sub
add
pop
cmp
scas
lods
xchg
scas
sub
in
push
jae
ror
jnp
loop
lds
pop
push
push
adc
(bad)
jmp
sub
loop
inc
push
or
loope
out
or
fxch
sub
popa
rcl
fidiv
call
push
pop
adc
sub
cmp
mov
inc
mov
cdq
fild
pop
push
jno
push
ret
sbb
cmp
int
adc
(bad)
dec
and
and
test
div
add
sahf
in
add
mov
sbb
imul
loopne
mov
xor
lea
cmp
xchg
sbb
into
mov
(bad)
lahf
pop
xchg
sbb
repz
movs
xor
out
call
test
mov
inc
mov
sahf
std
mov
call
or
inc
sahf
add
inc
xchg
cmps
jno
cmps
iret
stos
adc
xor
cmp
aaa
cmp
dec
push
sahf
ds
lea
sub
xchg
test
or
inc
in
pop
jns
push
pop
loopne
call
sbb
mov
xor
xor
adc
pop
rol
repnz
and
pop
cmp
adc
inc
(bad)
adc
test
pop
adc
sti
xchg
inc
add
cdq
jp
pop
add
adc
pop
std
popf
retf
imul
or
(bad)
cmps
mov
aad
pop
ret
sbb
pop
inc
fincstp
lods
add
out
mov
lods
mov
cmps
ds
lock
xchg
enter
ret
loop
jne
outs
mov
idiv
add
sbb
or
jmp
mov
adc
(bad)
into
pop
sbb
sub
iret
or
cmps
mov
stc
scas
dec
mov
(bad)
sti
fild
mov
ror
sbb
enter
enter
push
xor
ja
retfw
inc
adc
push
fild
idiv
cmp
sub
test
repz
js
xor
in
or
jne
stc
repnz
jmp
test
mov
rcl
cs
cdq
xchg
mov
and
loopne
int
cmps
or
cmps
jno
leave
mov
popf
adc
gs
lea
rcl
jnp
cmps
pop
inc
mov
call
das
sub
lahf
enter
(bad)
jl
rcr
shl
sub
sub
icebp
push
outs
or
lods
(bad)
jo
dec
ss
inc
fucom
cld
dec
aas
xchg
inc
rol
mov
cmps
mov
dec
pop
push
sub
rol
push
sbb
or
stos
xchg
push
movs
out
mov
bnd
mov
push
popa
stc
cmp
dec
mov
retf
mov
cwde
jns
jmp
pop
mov
adc
fadd
aaa
xor
inc
or
push
mov
or
mov
fcmovne
loope
adc
scas
sti
push
jmp
mov
xchg
inc
or
xchg
pop
cmp
stos
mov
and
inc
cld
or
xchg
adc
xchg
(bad)
fcomp
scas
jno
lods
mov
dec
lock
aas
or
mov
jp
xor
inc
retf
jge
inc
rcr
cli
loopne
stos
out
pop
or
call
sub
inc
int
in
retf
jg
sar
mov
inc
ret
stos
jnp
clc
(bad)
bswap
arpl
jae
int
cmp
cmp
jge
ins
ret
fldcw
gs
das
stos
push
pusha
mov
mov
mov
jno
xor
fst
sub
fs
icebp
lods
xor
adc
clc
iret
dec
repnz
fs
(bad)
popa
test
push
aaa
mov
ins
dec
aam
push
scas
push
xchg
rcl
and
mov
mov
dec
loop
test
mov
cmps
push
mov
cmp
fldcw
mov
pop
jmp
dec
imul
push
sbb
js
jb
jne
jp
cmps
jg
in
mov
mov
pop
xor
jne
cmp
sbb
in
test
es
sahf
xor
add
add
dec
sbb
pop
xchg
add
fdivr
bswap
push
clc
add
int
add
jae
call
or
int3
push
push
mov
xchg
mov
mov
pop
push
inc
jp
out
dec
int3
pop
pop
xchg
nop
xchg
data16
fsubrp
cld
mov
call
mov
iret
adc
xchg
pop
or
cdq
mov
fisubr
aas
aaa
popf
fiadd
mov
jmp
mov
cmps
popf
mov
aad
mov
inc
fstp
mov
gs
rcl
fisub
push
out
in
das
out
shr
inc
mov
sbb
nop
sti
pop
xchg
xchg
(bad)
int3
mov
mov
jns
mov
pop
sub
cmp
dec
lock
(bad)
movs
xchg
jne
dec
pop
mov
add
pop
and
aam
dec
les
mov
jle
(bad)
push
ss
push
cmp
out
mov
pop
cs
loopne
mov
dec
mov
xchg
xor
xor
push
xchg
test
(bad)
call
(bad)
cwde
push
dec
push
pusha
arpl
xchg
not
jg
in
sub
retf
sub
push
or
xor
aad
or
not
and
jb
push
mov
and
or
xor
push
ins
pop
and
mov
sar
inc
push
pusha
jns
ins
mov
out
addr16
fcom
xor
dec
xchg
jmp
pusha
cmc
nop
(bad)
adc
jo
lods
xchg
sub
pop
cmp
cli
addr16
neg
out
sbb
adc
loopne
mov
stc
in
pop
and
ins
push
mov
jge
dec
mov
xor
cld
std
mov
cli
push
sub
(bad)
stc
jle
cdq
inc
jge
mov
fidiv
lahf
mov
leave
lods
push
xor
rcl
test
sbb
nop
mov
(bad)
cli
shr
pop
xchg
inc
adc
call
and
(bad)
shr
(bad)
mov
or
inc
add
push
cmps
mov
push
retf
sahf
aam
jne
mov
push
addr16
push
das
test
fidivr
xor
pop
mov
in
cwde
out
xor
or
jmp
aaa
call
int3
out
in
out
pusha
xchg
(bad)
call
fdivr
ror
aaa
sbb
adc
add
in
test
xor
dec
and
lea
push
test
push
loope
jo
push
push
push
or
pop
inc
xor
add
dec
das
mov
mov
xor
(bad)
in
sub
nop
dec
pop
icebp
mov
scas
push
xchg
inc
mov
dec
sbb
mov
loopne
jae
mov
inc
pop
es
hlt
clc
pop
jmp
cmp
or
cs
ret
push
lds
mul
scas
jmp
sub
xchg
jp
pop
int
inc
out
and
xchg
pop
aad
shr
sti
mov
mov
out
mov
or
test
mov
and
test
push
jns
jo
mov
addr16
nop
inc
adc
into
xor
fst
add
push
pop
push
sub
test
jmp
or
dec
pop
std
pop
repz
mov
pop
iret
sub
fistp
mov
aas
sbb
sub
and
add
call
xchg
sub
movs
loope
lds
add
jnp
adc
mov
shl
fstp
popa
and
mov
dec
daa
mov
xchg
mov
jmp
aas
cmp
cmp
dec
cmc
out
or
in
cmp
jno
cmps
pop
cmps
fld
pop
pop
mov
in
and
xor
shr
je
add
pop
add
or
xacquire
pop
add
ret
push
arpl
es
test
movs
mov
push
jl
loope
jbe
mov
adc
xor
and
movs
cdq
call
cmps
adc
mov
adc
mov
repnz
adc
mov
jp
in
(bad)
cmp
xor
cs
add
sbb
sti
test
add
out
cmovno
mov
jecxz
sbb
aaa
aad
jl
add
loope
lahf
xlat
jecxz
cmp
ficom
jge
adc
push
vmovhps
dec
xchg
xor
mov
frstor
(bad)
pop
fwait
(bad)
jae
sahf
ret
mov
sub
pop
jmp
inc
push
test
inc
iret
ror
xor
frndint
mov
mov
push
sbb
aad
fwait
cmp
jno
pushf
mov
int3
fdiv
lds
js
outs
lods
jnp
mov
pop
es
pop
adc
or
leave
push
fdiv
ret
call
xchg
ins
mov
je
cmps
adc
push
(bad)
fisttp
add
inc
sub
in
mov
ss
ds
adc
mov
imul
mov
into
dec
cli
push
ret
adc
cmp
mov
inc
int
data16
xchg
jo
mov
int3
es
lock
loop
inc
ficom
(bad)
call
add
mov
or
xor
push
cmps
sbb
pushf
jecxz
out
adc
adc
dec
test
adc
pusha
sbb
loope
jmp
mov
jo
fld
mov
test
pusha
or
cs
rol
cli
mov
push
add
aam
mov
in
jo
mov
cmp
push
daa
outs
xor
and
pop
(bad)
mov
lea
inc
pop
jnp
cmp
xchg
test
push
in
outs
scas
and
mov
scas
or
sbb
cmp
mov
test
dec
adc
add
sbb
or
int
sbb
add
pop
inc
inc
or
pushf
ins
popf
hlt
push
dec
add
xchg
cmp
call
push
sar
subps
sbb
jp
ds
push
sub
cmp
push
cmc
dec
mov
mov
hlt
fldenv
ror
push
stos
dec
loope
shl
in
fild
push
adc
jp
test
cli
jno
sahf
idiv
in
sbb
adc
fcom
mov
or
cvttps2pi
pop
imul
xor
inc
pop
cdq
jmp
and
(bad)
mov
call
jecxz
jle
mov
and
dec
mov
int
test
ins
popf
mov
(bad)
cld
push
add
xchg
inc
and
stos
mov
add
(bad)
jmp
cmc
fisub
add
jo
or
cld
fist
jge
shl
ins
cmp
or
push
push
lods
mov
or
xchg
cmp
dec
mov
xor
(bad)
jmp
push
stos
lea
fcmovnbe
or
sub
xor
icebp
mov
shr
push
cmp
fiadd
sbb
adc
push
test
dec
inc
scas
sub
rcr
arpl
sti
pop
dec
pop
jge
in
bound
pop
test
xchg
jl
jmp
aas
push
xchg
(bad)
ficomp
test
and
mov
into
pop
sbb
inc
cmp
pop
xchg
xor
or
ret
movhps
adc
sbb
call
pop
xor
test
pop
sub
mov
jno
test
and
cmp
sub
xchg
dec
push
adc
test
call
mov
or
in
or
outs
jg
push
int3
push
(bad)
mov
shl
cmp
mov
loopne
dec
ins
rcl
mov
fwait
enter
mov
or
inc
les
xor
jae
out
sbb
push
add
stos
sar
(bad)
and
aas
movs
das
fsubr
xchg
add
cwde
and
adc
loope
xchg
add
push
mov
out
inc
xor
dec
jp
push
mov
xchg
addr16
out
fimul
scas
sti
add
lahf
push
pop
call
test
and
pop
pusha
fist
jecxz
and
add
or
mov
cs
ret
test
test
mov
mov
mov
sbb
dec
push
outs
in
mov
cdq
mov
cmp
pop
movs
jl
lock
adc
mov
mov
lock
pop
mov
stc
xchg
je
xchg
sub
pop
xor
sbb
or
mov
fcmovu
mov
xchg
pop
inc
mov
add
rcr
stos
sbb
call
cdq
data16
test
fsubr
jo
lahf
xchg
mov
lods
pop
xlat
mov
ret
aas
jne
movs
dec
xor
dec
jecxz
movs
sbb
inc
lea
cld
ror
xor
inc
pop
adc
adc
and
inc
mov
pop
iret
out
add
stos
pusha
pop
or
sbb
mov
pop
sub
pop
push
xchg
mov
sub
ss
push
sub
mov
div
out
inc
neg
push
mov
retf
ins
xchg
push
in
fld
stc
hlt
test
idiv
push
inc
iret
jns
or
xor
retf
mov
(bad)
fsub
loopne
fmul
cmp
ss
pop
mov
jg
mov
push
div
adc
in
dec
sar
mov
push
aad
repz
jae
mov
add
ja
popf
mov
aad
call
push
enter
ficom
mov
popf
stos
xor
ss
or
cwde
mov
dec
mov
hlt
hlt
sbb
(bad)
cmp
or
scas
and
jo
mov
push
push
push
pop
xor
inc
les
sahf
push
pop
push
dec
stos
pop
mov
push
cmps
test
stos
movs
dec
mov
push
sub
xchg
xor
jno
fcmovnbe
ret
lods
in
jp
loope
(bad)
push
fild
xchg
add
xchg
push
mov
pushf
cmp
jns
mov
sbb
mov
add
xchg
jle
scas
popa
ficomp
push
shr
jo
jb
inc
into
mov
fdivr
xor
icebp
enter
jmp
inc
fnsave
push
dec
xchg
scas
sub
jns
and
xor
mov
and
push
add
or
xchg
cdq
pop
mov
xchg
push
or
mov
test
push
mov
jmp
idiv
mov
dec
inc
cmp
je
mov
dec
pop
dec
cmp
sar
mov
jle
push
addr16
pop
dec
mov
ret
jg
add
pushf
dec
cmp
mov
es
shl
or
dec
shr
mov
dec
push
mov
pop
inc
popa
stos
test
mov
enter
sbb
data16
cmp
pop
sar
dec
pop
xchg
jl
inc
outs
fsubr
xor
cmp
cdq
jo
bound
arpl
out
jnp
xchg
jge
in
sti
dec
pushf
sti
lods
push
sahf
jne
push
pop
aam
cs
or
movs
jge
push
das
or
sub
add
and
aas
fdivr
test
pusha
inc
pop
stos
test
stc
in
rcr
or
test
push
fcmove
(bad)
rol
cwde
xchg
push
pop
or
sbb
jle
adc
dec
jecxz
(bad)
retf
dec
sub
mov
xor
mov
rcr
fld
mov
adc
push
ror
or
popa
out
or
addr16
or
push
lahf
test
mov
inc
add
pop
cmp
mov
aas
jmp
daa
pushf
cmps
mov
and
int
scas
or
push
mov
imul
ret
push
sti
or
aad
dec
xor
jo
fistp
fld
icebp
sub
jne
jecxz
add
mov
addr16
sub
ins
call
cmps
mov
jmp
imul
jns
adc
jo
mov
ror
mov
dec
jmp
and
xchg
add
sbb
pop
test
cmp
sub
adc
pop
cwde
gs
ins
dec
xchg
sub
out
je
(bad)
fdiv
test
ret
cmp
push
cld
hlt
mov
retf
(bad)
(bad)
cdq
add
push
jge
loope
sti
jmp
xchg
daa
das
pop
cmp
xor
xor
addr16
dec
mov
sub
dec
or
pop
adc
in
jno
out
pop
sub
dec
loop
xchg
(bad)
push
cmps
mov
imul
(bad)
push
fldcw
mov
jb
stc
sahf
cmp
mov
rcl
pop
test
cmp
loopne
mov
bound
into
or
mov
pop
loop
jbe
pop
popa
adc
adc
sbb
loop
jb
add
outs
in
push
mov
and
int3
cld
jno
xchg
add
movs
enter
pop
cmp
xchg
outs
sar
int
lds
xor
adc
sub
sbb
clc
in
add
cdq
jle
shr
xor
push
into
xor
stos
popa
bound
das
jle
test
es
iret
jne
pop
mov
mov
sbb
ret
ror
mov
dec
inc
sar
clc
dec
inc
out
dec
or
dec
loopne
and
adc
xor
(bad)
mov
and
push
push
mov
addr16
lock
iret
aam
sbb
xchg
jo
cmp
mov
jp
ficomp
sahf
jmp
dec
scas
outs
fistp
xchg
inc
jne
or
out
popa
std
ret
add
hlt
jb
or
(bad)
adc
jecxz
pop
and
es
cmp
pop
sbb
sub
rol
out
cmp
xchg
cmp
sub
xor
dec
push
in
es
lods
pop
jge
adc
(bad)
test
xcrypt-ecb
cmps
dec
dec
sub
ds
jb
xor
inc
sar
(bad)
mov
ss
xlat
mov
adc
or
xchg
xor
lea
inc
xchg
inc
out
popf
shr
scas
loop
and
mov
in
adc
jae
aad
cmps
push
mov
mov
lock
xor
add
xchg
or
cmp
inc
pop
mov
(bad)
mov
adc
std
push
aaa
or
cmp
cmp
adc
sbb
popf
sub
out
dec
push
sub
imul
mov
(bad)
lock
loop
daa
xchg
xchg
lods
adc
xor
sub
xchg
mov
cmp
add
add
push
shl
sub
fdiv
dec
pop
dec
scas
repz
jmp
es
xor
and
xchg
ficom
imul
jmp
inc
jp
mov
jns
scas
ins
repz
jle
mov
push
pop
ret
outs
retf
push
pop
push
loopne
inc
pop
jg
add
cmp
ret
fst
xchg
retf
(bad)
in
push
ret
aaa
xor
pop
inc
mov
adc
xchg
popa
sahf
sbb
(bad)
(bad)
jmp
into
nop
lea
lock
cmp
cmc
hlt
test
call
das
fs
sbb
fxch
dec
and
pop
jp
push
mov
mov
jge
neg
cmp
shl
push
in
xor
push
bound
cmps
mov
sbb
mov
mov
add
fsubr
mov
cwde
inc
or
js
fwait
and
mov
pop
pop
push
inc
aaa
rcl
fisttp
shl
cli
lahf
and
arpl
(bad)
repnz
enter
test
int
adc
(bad)
loopne
add
dec
ds
sbb
(bad)
inc
inc
push
in
add
jae
xor
cmps
fcomp
cdq
mov
inc
ins
add
in
push
nop
jo
pop
mov
or
jno
or
je
mov
ds
jg
and
xchg
and
jecxz
xor
dec
scas
rol
arpl
call
(bad)
in
jae
enter
movs
fnstenv
js
inc
scas
sub
fld
cmp
mov
icebp
es
xchg
jge
sub
push
mov
mov
pop
jl
stc
add
push
bound
lock
enter
(bad)
mov
stos
jnp
push
cs
bound
xchg
(bad)
(bad)
sti
push
cmp
cmp
xchg
leave
in
xor
sbb
or
cdq
(bad)
std
xor
and
jnp
loop
adc
add
fisubr
ds
(bad)
cli
add
fwait
dec
sbb
mov
pop
push
dec
into
(bad)
push
add
push
jge
int
pop
sub
ja
loope
adc
and
cdq
outs
xor
(bad)
fs
mov
mov
sbb
mov
adc
cmc
cmps
sbb
pop
out
fs
mov
scas
fwait
test
mov
mov
xor
xlat
pop
mov
sub
push
gs
add
push
lds
mov
out
rcl
ss
add
adc
pop
sub
call
or
(bad)
mov
xor
pop
xor
shl
xchg
aas
int3
push
and
mov
(bad)
mov
jnp
sub
mov
cs
nop
xrelease
test
add
jne
mul
xor
cwde
imul
xchg
sub
adc
adc
mov
adc
push
ds
or
ins
outs
clc
(bad)
and
sbb
adc
jne
adc
ret
xchg
dec
sbb
dec
and
cmp
enter
or
enter
std
gs
add
sbb
xchg
push
add
push
bound
into
cmp
pop
cmps
inc
mov
cmc
imul
add
data16
in
mov
adc
shr
adc
mov
shl
xchg
(bad)
pop
iret
popf
xor
sar
mov
jns
inc
mov
push
sub
mov
dec
fmulp
outs
shl
std
push
daa
popf
mov
jecxz
sub
(bad)
movs
jmp
push
push
sub
stos
mov
jecxz
xlat
(bad)
dec
enter
aam
and
or
ss
dec
(bad)
iret
add
push
jmp
mov
mov
cmp
jne
dec
repz
fcmovb
cmp
movs
es
(bad)
dec
in
lds
outs
test
lods
cdq
outs
je
push
cmp
xchg
dec
mov
sub
fstp
imul
mov
je
push
fmul
xlat
sar
in
xchg
js
repnz
(bad)
or
test
int3
sub
pop
push
popa
dec
sti
push
xor
adc
lds
dec
movs
std
jmp
mov
pusha
sub
push
aas
adc
mov
or
mov
bnd
xchg
cmps
cdq
xor
sti
and
adc
(bad)
movq
xchg
stc
dec
and
pop
add
cmp
int3
cmp
xchg
out
lods
pop
imul
in
mov
mov
fld
das
pop
lock
sub
jg
adc
shl
sbb
stc
push
jl
repz
jns
pop
out
pop
std
cli
pop
add
sbb
mov
fist
lods
jp
mov
aad
pop
push
inc
enter
loopne
xor
int
and
cmp
jns
push
pop
adc
bound
or
gs
fsubr
fisttp
or
addr16
fstp
mov
or
xchg
sub
mov
inc
mov
out
mov
inc
imul
call
scas
lahf
(bad)
mov
xchg
jbe
repz
xchg
sbb
sbb
inc
adc
pop
mov
div
pop
icebp
leave
sti
inc
ror
mov
into
jae
sub
loope
and
jne
adc
in
mov
push
xor
and
mov
mov
aad
addr16
xchg
dec
aam
aam
fmul
mov
gs
jge
cmp
dec
mov
inc
ror
jo
xchg
dec
dec
push
out
jbe
xchg
xchg
aas
pop
add
in
jo
jmp
call
cmc
xchg
test
push
ret
ret
das
add
rdpmc
mov
or
and
dec
ds
aad
inc
outs
sar
sub
aad
xchg
in
test
(bad)
push
cwde
mov
cmp
shl
sbb
cs
sbb
mov
repnz
dec
lods
adc
loop
ins
push
loopne
std
mov
cli
xor
fwait
mov
rol
pop
ret
inc
out
icebp
imul
sbb
xchg
pushf
icebp
lahf
cmps
xor
mov
jne
loop
scas
pop
inc
sahf
add
inc
xchg
mov
cdq
je
cmp
sbb
adc
mov
scas
into
scas
lea
pinsrw
popa
pop
pop
clc
fidivr
push
pop
cmc
fst
jbe
test
and
xlat
or
push
call
adc
ret
test
shl
xchg
sbb
dec
retf
and
xchg
cwde
dec
and
fisubr
shl
lods
push
(bad)
pop
inc
xchg
mov
dec
dec
in
lock
ffree
dec
jne
xor
movs
sub
movs
sbb
mov
cmp
loope
sbb
ret
outs
clc
mov
aam
cld
or
test
ret
pop
sar
mov
sbb
mov
jnp
jg
cld
inc
ret
call
push
inc
test
das
inc
mov
ss
mov
and
out
push
pushf
(bad)
call
mov
push
push
xchg
adc
xchg
add
loop
pop
mov
ss
stos
test
fwait
push
out
mov
xor
popf
xor
ss
xor
dec
ins
mov
adc
stos
dec
je
shl
cmc
mov
pop
push
scas
pop
in
sar
inc
mov
outs
shl
dec
into
fldenv
or
or
jl
(bad)
lds
add
sahf
stos
mov
pop
cld
jb
pop
std
xchg
inc
sub
call
push
xor
xor
push
rcl
add
fldcw
dec
push
push
cwde
sub
mov
xor
cmp
mov
rcr
out
pop
inc
test
pop
or
xor
xchg
in
leave
or
pop
mov
push
mov
(bad)
das
fwait
or
xchg
rcl
fcom
sub
and
popf
fld
push
(bad)
sub
push
jg
mov
inc
in
or
aaa
je
test
scas
push
pushf
frstor
push
sbb
ror
nop
mov
mov
pop
lahf
push
pop
cmp
jbe
or
lea
or
push
xor
dec
stos
mov
mov
sbb
mov
or
pusha
jge
in
mov
fs
xor
popa
neg
push
jmp
inc
ret
mov
dec
nop
pushf
out
and
push
inc
movs
stos
cmps
mov
mov
rcr
sti
dec
add
shr
fs
lahf
sar
cmp
iret
dec
adc
aas
call
sub
push
push
sub
ins
jae
rol
add
add
sahf
mov
aam
jbe
data16
test
xchg
mov
(bad)
fisttp
and
and
or
mov
xchg
cmp
push
repz
ds
adc
gs
pop
shl
pop
mov
outs
outs
movs
xor
or
cmp
retf
inc
mov
leave
movs
mov
mov
mov
dec
clc
ret
mov
in
pop
fst
or
mov
cmp
cwde
dec
or
sub
sbb
add
and
push
mov
mov
xor
mov
std
jmp
mov
sub
rol
rcl
loop
fwait
in
lds
mul
mov
lods
repz
je
xchg
call
jae
sbb
dec
lock
mov
loopne
nop
or
and
add
(bad)
push
xchg
cmc
call
jmp
retf
dec
into
cmp
fidiv
or
add
ds
jb
out
cmp
xlat
push
icebp
sar
imul
dec
pop
ja
xchg
repz
pop
pop
test
repnz
leave
out
cmps
stos
push
mov
out
rcl
in
data16
and
out
sti
pop
xor
pop
fucomip
loop
test
lods
fisttp
outs
adc
ds
add
pop
hlt
das
enter
mov
or
in
in
pop
xchg
pop
hlt
cmps
xor
sub
cmp
into
in
mov
call
mov
fild
jmp
data16
(bad)
mov
sbb
pop
mov
inc
(bad)
in
push
jg
sub
(bad)
mov
xchg
ds
rcl
xor
jmp
or
and
mov
jmp
mov
push
arpl
add
jmp
mov
xor
mov
out
pusha
idiv
jae
fndisi(8087
dec
fistp
xchg
popa
ret
je
xchg
adc
mov
loope
mov
push
(bad)
mov
xchg
call
int
pop
es
cmps
mov
push
adc
aad
icebp
jle
mov
mov
push
aaa
mov
mov
rol
pusha
(bad)
out
pop
fwait
and
ss
scas
outs
icebp
lea
in
sbb
push
cld
xor
cmp
arpl
hlt
jo
cwde
dec
rcl
pop
in
addr16
bnd
sbb
inc
xchg
push
mov
in
faddp
inc
(bad)
push
inc
out
pop
lods
dec
mov
rcr
dec
sbb
push
fstp
xchg
add
sar
in
mov
dec
sbb
push
mov
mov
push
mov
cmps
mov
imul
pop
ror
test
clc
xor
xchg
aaa
je
mov
push
adc
jns
sti
jb
lock
mov
pusha
imul
outs
sbb
jge
mov
lods
addr16
in
push
call
cmps
push
adc
icebp
cmps
push
sbb
jno
mov
out
mov
repnz
sub
popa
push
jmp
dec
mov
fimul
js
and
inc
inc
scas
push
sbb
jp
les
enter
daa
sbb
je
push
js
js
mov
mov
adc
mov
push
cdq
adc
dec
adc
cmp
out
sbb
xor
popa
stos
cmp
test
sub
mov
std
push
pop
sbb
xor
aaa
mov
clc
test
mov
mov
cs
mov
stos
(bad)
dec
gs
(bad)
dec
lods
push
scas
jbe
addr16
movs
xlat
dec
jo
mov
mov
movs
clc
xchg
adc
pop
adc
push
jns
clc
lea
inc
retf
mov
inc
imul
gs
jb
mov
inc
mov
je
arpl
xlat
mov
jg
adc
mov
pop
nop
pop
stos
jp
leave
sbb
int3
ficom
sbb
add
jmp
mov
xchg
xor
cdq
je
pusha
jo
or
aaa
mov
loope
sub
jbe
movs
lods
in
mov
cs
out
fsubr
sbb
or
mov
sbb
mov
imul
scas
mov
xchg
fistp
les
pop
push
std
dec
add
call
mov
ja
xchg
loopne
add
jne
push
jb
sub
pushf
jmp
adc
xor
scas
cmp
xlat
fisttp
dec
(bad)
xlat
and
retf
(bad)
jbe
adc
ror
inc
sbb
lock
jmp
cli
jae
xchg
out
inc
mov
push
je
out
jmp
cmp
fstp
dec
iret
sbb
fld
out
bound
mov
cmp
pop
dec
ja
cmp
push
xor
leave
inc
xor
cmps
test
rol
stc
aad
inc
cmp
(bad)
sub
dec
test
push
pushf
loope
sbb
daa
pop
rcr
les
and
inc
call
lea
je
scas
clc
adc
stc
enter
js
jo
out
adc
or
add
adc
loopne
inc
outs
lods
test
jg
enter
inc
xchg
test
rcl
imul
mov
fmulp
es
mov
pop
mov
mov
cmps
jmp
fstp
pop
mov
pop
push
sub
sbb
xchg
repnz
xchg
xchg
push
(bad)
inc
scas
xchg
movs
sbb
add
outs
cli
mov
dec
loopne
fcom
sub
daa
jo
popa
lods
jg
cmp
inc
cmps
retf
bound
sbb
mov
pop
jmp
xor
mov
cmp
test
popf
mov
inc
frstor
sbb
js
pop
push
cmp
ret
adc
pop
into
or
popf
mul
or
arpl
pop
inc
sub
in
cli
fucomi
ret
mov
mov
popf
stc
adc
and
nop
cli
xor
sbb
jle
rcr
pop
fild
sub
jns
aam
test
sbb
xor
xchg
test
jp
in
jmp
mov
xchg
xlat
push
cmp
xchg
jne
arpl
daa
sahf
adc
fcomp
mov
adc
fsubr
idiv
cmp
mov
inc
pusha
push
lea
out
xor
aaa
pop
xchg
pop
xchg
pop
xlat
fistp
fsubr
fcom
and
pop
out
adc
sbb
shl
pop
sub
xor
lahf
das
push
scas
je
adc
mov
sub
arpl
adc
push
(bad)
loop
popf
push
sti
outs
fbstp
and
jmp
mov
cmp
xchg
fcomp
cmps
lea
mov
ret
add
inc
sbb
cmc
popf
push
dec
pusha
or
cwde
mov
adc
xor
rcr
push
cmp
loopne
shl
call
(bad)
(bad)
mov
sbb
mov
cmp
push
test
aas
out
xchg
bound
inc
fdivr
fisub
jae
nop
mov
call
jg
lods
in
add
jg
in
test
gs
out
fisubr
dec
mov
(bad)
jbe
cmp
pop
(bad)
int3
mov
adc
add
sahf
sub
dec
in
or
fld
push
dec
and
jg
test
not
loopne
and
hlt
es
xchg
sbb
ret
test
sbb
cdq
jle
and
das
jl
in
and
jmp
or
pop
xor
jle
movs
stos
push
xor
std
outs
push
push
push
dec
mov
push
cmp
pop
sti
fwait
mov
fcom
sub
(bad)
fisub
or
push
inc
sub
lods
dec
mov
mov
sbb
ja
cmps
xchg
mov
vunpcklps
xchg
add
mov
call
and
push
xchg
or
loop
ds
(bad)
sub
adc
xchg
aas
pop
sbb
mov
imul
and
dec
or
mov
mov
(bad)
lods
pop
daa
inc
jb
mov
repz
dec
mov
test
jle
loop
xchg
lds
xor
xchg
jl
and
pop
push
mov
add
outs
cdq
cli
xchg
xchg
clc
push
nop
jo
fwait
lock
test
leave
jp
scas
inc
jmp
je
jmp
xor
pushf
clc
fdivr
sub
mov
rcr
mov
xchg
mov
icebp
pushf
stos
push
lock
inc
dec
mov
inc
jbe
and
push
in
loop
xchg
call
dec
inc
push
sub
movs
int
mov
dec
ret
cli
fsubrp
popa
sti
scas
in
jo
loopne
inc
mov
cmc
lea
push
pop
sub
pop
fs
(bad)
stc
xor
cmp
repz
mov
test
adc
pop
inc
ja
mov
push
jl
inc
je
sub
and
jae
xchg
mov
idiv
or
sub
fcomp
inc
dec
std
xchg
(bad)
ss
mov
ret
inc
inc
enter
inc
push
mov
adc
movs
cmps
out
jns
repnz
scas
mov
aam
and
adc
push
cld
icebp
es
jmp
repz
mov
xlat
xor
data16
(bad)
cmp
call
mov
xchg
sub
das
inc
cld
clc
add
and
jmp
(bad)
aad
sti
pop
cli
in
movs
lods
aad
retf
and
inc
fistp
scas
rcr
mov
sub
popa
jbe
mov
mov
or
or
cmp
dec
mov
or
shr
bound
cmp
pop
test
dec
add
fs
dec
push
cmc
sub
outs
lock
cmp
add
bound
cdq
xchg
cld
imul
pop
mov
es
and
cmp
jo
mov
add
dec
cmp
pop
pop
out
jg
and
in
stc
fucomi
pop
(bad)
stc
or
xchg
in
cmp
jg
pop
mov
lahf
sbb
das
mov
xchg
cmc
data16
lahf
mov
xor
and
or
sbb
adc
jne
jecxz
sbb
cli
pusha
arpl
or
stc
jle
inc
xchg
jp
xchg
jb
outs
jmp
mov
and
fwait
(bad)
cld
aam
dec
into
in
mov
fwait
pop
shl
pop
jbe
xchg
mov
inc
outs
jne
sbb
push
dec
add
fidiv
shr
cs
out
pop
mov
push
repz
mov
iret
nop
jne
shr
pop
outs
pushf
adc
xchg
lock
aaa
jmp
ja
push
mov
push
mov
xor
jp
in
inc
sbb
pop
fcomp
imul
mov
and
comiss
add
mov
loop
adc
shr
daa
xchg
xchg
scas
sub
xlat
sbb
mov
push
or
jp
aaa
add
mov
inc
js
and
push
jnp
add
imul
out
or
call
mov
dec
inc
adc
sub
and
fisttp
and
dec
jne
sub
mov
or
mov
or
mov
inc
out
mov
popf
int
cwde
stos
push
aad
lock
addr16
mov
mov
xor
adc
xlat
inc
mov
(bad)
(bad)
data16
iret
dec
mov
mov
mov
push
cwde
or
mov
mov
or
sti
or
push
cmp
dec
and
xchg
sahf
pop
add
sbb
ds
sbb
lea
jmp
jbe
xor
cmp
clc
jnp
sar
retf
scas
push
sub
jmp
mov
mov
aam
or
xchg
mov
into
dec
popa
aam
cwde
xor
in
pop
push
popa
nop
sbb
push
out
enter
cmps
movs
sbb
pushf
push
out
push
xchg
sahf
cmc
inc
push
or
test
dec
push
dec
cmp
mov
(bad)
arpl
mov
and
int
fwait
loop
(bad)
fucomi
inc
pushf
adc
in
call
xor
xlat
outs
inc
cmps
in
loope
dec
and
dec
(bad)
adc
mov
out
enter
dec
sbb
sub
xchg
add
call
xchg
call
scas
sbb
int3
mov
scas
(bad)
cmp
fist
adc
cmp
outs
movs
xchg
ficom
out
lock
shr
call
push
lods
lods
int3
sub
ins
dec
xor
cwde
in
and
rol
cdq
pop
or
fadd
jg
pop
add
mov
enter
push
cmps
mov
cli
sub
out
in
cmp
nop
or
shl
ja
push
in
icebp
outs
mov
je
dec
push
ins
jecxz
stos
adc
call
lds
out
xchg
not
push
stc
aam
ror
pop
xchg
int3
scas
cmps
and
add
xchg
mov
iret
mov
scas
fsubr
lahf
gs
pop
adc
imul
sub
std
pop
in
push
sar
mov
mov
adc
push
pop
push
mov
fwait
jns
inc
fimul
mov
(bad)
pop
test
out
popa
sub
inc
xchg
ds
int3
cmp
clc
mov
repnz
sub
xchg
xor
pop
mov
(bad)
xor
mov
pop
add
xor
pop
xchg
retf
xor
or
or
sub
jbe
cmp
repz
imul
sahf
inc
shl
mov
(bad)
(bad)
mov
outs
push
das
mov
sub
and
fdiv
adc
outs
cmp
pop
inc
shl
or
arpl
add
xor
ins
jge
or
mov
mov
or
sbb
fcomp
push
in
jle
les
fild
mov
mov
nop
sar
and
mov
add
adc
pushf
out
js
dec
push
das
inc
xlat
rcr
push
call
ds
dec
inc
pop
or
sbb
jle
out
jns
push
inc
sub
(bad)
push
in
mov
cmps
sub
add
enter
or
mov
xchg
lea
lea
inc
mov
mov
les
add
sub
nop
test
push
xchg
jbe
mov
mov
aam
push
es
fmul
push
lods
int
ja
mov
cmp
clc
inc
int3
ror
push
xchg
or
cmp
daa
rcr
mov
(bad)
mov
sbb
and
aaa
loopne
cwde
push
sbb
push
dec
jle
movs
jecxz
(bad)
jp
adc
loop
or
mov
pop
js
pop
xor
jbe
cmp
outs
imul
xchg
ss
aas
leave
(bad)
jmp
test
add
sbb
add
pop
in
ret
cmp
inc
jp
les
add
loope
pop
push
or
ror
cmps
cwde
lds
aas
lods
mov
shl
xchg
mov
and
shl
cmp
jl
sti
dec
jge
add
retf
sub
hlt
je
and
dec
sub
inc
xchg
test
push
mov
and
lea
sub
xchg
and
cmc
(bad)
ss
mov
pusha
inc
ret
scas
add
sbb
and
mov
jmp
mov
outs
push
inc
mov
mov
inc
nop
scas
into
mov
push
(bad)
jg
lock
je
test
pop
test
ror
mov
repnz
jns
sub
dec
jl
cmp
in
out
xchg
fwait
jmp
inc
mov
mov
bound
mov
test
hlt
jbe
sti
add
or
push
std
out
mov
mov
jecxz
outs
es
sbb
jge
enter
out
cmp
inc
fs
das
adc
or
jae
cmp
jg
js
add
cs
mov
fcomp
sahf
xor
repnz
jno
xchg
int
dec
inc
stos
cmp
add
sub
aas
das
sub
pop
add
xchg
cmp
sbb
stc
dec
and
mov
mov
xor
stos
cdq
shl
adc
dec
fwait
adc
rcl
(bad)
inc
jmp
xchg
in
mov
or
popf
call
inc
into
aad
shl
pop
shl
std
mov
ja
gs
sub
call
or
and
pop
mov
add
or
add
or
dec
leave
add
pop
sub
add
movs
jnp
jo
add
inc
inc
adc
(bad)
jmp
dec
je
(bad)
sbb
pushaw
ss
jbe
or
pop
out
fsub
or
or
mov
mov
sbb
mov
mov
sub
(bad)
call
jb
in
(bad)
jle
sahf
pop
js
lahf
jb
mov
jecxz
(bad)
mov
lods
pop
lock
xor
inc
out
arpl
fs
aad
imul
fidiv
pop
add
test
pop
movs
je
and
pop
cmps
mov
jg
(bad)
push
cs
xchg
cmps
xchg
inc
sub
dec
xchg
into
mov
mov
fdivrp
push
push
fwait
call
adc
test
jmp
scas
sbb
scas
das
shl
out
pop
push
cmc
icebp
push
cmp
pop
sahf
mov
ins
mov
outs
jb
repnz
mov
ins
loop
(bad)
xor
loop
test
adc
xchg
xlat
int3
push
cdq
inc
int
cmp
mov
stos
fiadd
push
scas
aaa
push
aam
cld
shl
outs
test
es
push
inc
push
or
hlt
outs
mov
pop
dec
mov
mov
jle
test
in
inc
sbb
jp
arpl
cli
cld
imul
(bad)
in
retf
lds
test
scas
xor
push
ins
fidiv
inc
xor
mov
sub
cmp
jmp
clc
mov
xor
cmc
popf
add
inc
(bad)
sti
shr
pusha
xor
add
call
xchg
sub
xor
mov
dec
retf
leave
sbb
xor
cmp
and
je
sbb
mov
mov
test
add
aaa
jns
jo
adc
pop
lock
repz
cmp
sub
mov
stos
scas
imul
or
mov
mov
std
inc
dec
lds
inc
sbb
xor
push
xor
adc
ins
pop
or
xchg
xor
ja
mov
cmps
enter
xchg
xor
repnz
sub
xchg
push
lods
inc
in
les
and
xor
pop
adc
lds
in
and
mov
icebp
in
aaa
mov
ret
and
sbb
ds
sub
(bad)
xchg
dec
daa
cmp
push
and
jb
cli
sbb
mov
test
movs
pop
lods
aad
dec
pop
popa
out
scas
inc
inc
test
push
jle
das
xor
clc
pop
(bad)
aad
outs
and
hlt
in
scas
adc
push
fdiv
push
adc
into
pop
xor
cwde
mov
repz
sbb
retf
push
adc
iret
push
pop
je
jo
or
imul
aam
icebp
movs
or
sbb
rol
xchg
in
shl
dec
in
push
out
mov
daa
mov
in
cld
mov
dec
loope
ins
fsub
icebp
or
push
sbb
sahf
fidiv
test
aaa
ret
rcr
je
je
movs
and
fsub
in
imul
retf
xchg
hlt
xchg
cmps
sar
pop
push
dec
mul
fwait
add
rcl
movaps
rcr
or
mov
in
dec
daa
popf
in
bound
pop
mov
sbb
adc
pusha
or
into
cli
js
push
mov
cmp
jmp
bound
adc
lock
ret
xor
sbb
movs
sub
fadd
cli
pop
jbe
leave
jo
push
enter
mov
jmp
mov
jae
fsub
mov
mov
aaa
pusha
fsub
or
push
je
scas
and
mov
fdivr
and
or
in
pusha
mov
adc
xor
jmp
mov
inc
aaa
imul
xchg
lods
push
mov
sbb
cli
daa
aaa
pop
mov
jbe
ret
pop
sbb
jbe
push
scas
lods
pop
cmps
in
push
pusha
sub
adc
xchg
pop
fist
push
xchg
mov
mov
xor
jns
xchg
jge
fsub
cmp
dec
stos
lahf
stos
jmp
mov
fsubr
xlat
push
dec
fld
movs
sbb
jns
jle
sub
fwait
xchg
mov
into
cmp
mov
mov
sahf
stc
jle
sti
daa
inc
push
repnz
std
out
push
nop
sahf
daa
xchg
test
adc
fmul
in
xchg
or
pop
jne
push
xchg
adc
and
ds
je
mov
fdivr
aad
jmp
imul
das
out
adc
cdq
inc
repz
fimul
popf
imul
inc
add
call
sbb
std
lds
cmps
adc
inc
out
push
stos
aas
ret
mov
jns
out
jmp
cmp
sub
out
(bad)
jae
hlt
inc
ds
adc
movs
iret
sbb
mov
cld
push
iret
and
nop
inc
aad
ret
in
xchg
add
cwde
dec
push
xlat
movs
daa
add
inc
mov
pusha
mov
push
inc
sbb
sub
inc
xchg
adc
pop
or
cmp
mov
jne
enter
sbb
retf
popa
xchg
fsubr
popf
xchg
jp
or
adc
adc
sahf
inc
lahf
cs
add
or
adc
movaps
push
inc
jmp
stos
add
loopne
(bad)
(bad)
in
sub
sbb
ja
inc
pop
jmp
js
icebp
out
daa
call
ror
test
pop
call
cmp
pop
(bad)
cmp
test
xlat
fidivr
or
add
jg
mov
scas
loope
or
sub
das
(bad)
xor
pop
rcr
rcl
lods
shr
movs
cmp
lods
mov
adc
enter
add
mov
xchg
sti
push
cmp
adc
xor
cmps
adc
mov
nop
ror
daa
jl
mov
push
cmps
cmp
adc
xchg
push
or
sahf
cmps
dec
xor
jne
out
jnp
ror
in
in
pop
shr
fstp
movs
call
dec
jo
dec
cmc
test
xchg
adc
sub
add
push
dec
int
jmp
out
adc
push
mov
sbb
sub
lods
ds
or
in
sar
push
clc
rcr
push
or
or
fdiv
pop
icebp
test
inc
pop
aas
scas
jle
neg
inc
repnz
sub
jle
xchg
fldenv
int3
inc
scas
push
test
std
add
les
pop
pop
retf
pop
arpl
adc
adc
fadd
mov
test
pop
repz
cli
aaa
and
inc
mov
mov
jl
and
ins
add
cmp
inc
cmps
popf
cmp
lods
inc
mov
pop
jecxz
jbe
xor
ret
jns
mov
xor
fbld
dec
lea
lds
fld
ins
icebp
shr
into
cmp
arpl
call
jo
cmc
and
out
movs
pop
les
retf
ja
test
mov
loop
mov
pop
stos
iret
adc
and
xchg
mov
xchg
movs
fistp
xchg
(bad)
xchg
movs
mov
and
ror
test
sti
scas
call
sar
inc
int3
cdq
or
cld
mov
stos
jb
bound
outs
pop
jbe
imul
pushf
test
cmp
add
inc
jle
addr16
inc
push
fcomi
iret
shl
and
out
cwde
mov
pop
icebp
push
mov
shr
pop
fs
or
ss
mov
xchg
ror
pop
sahf
cmp
int
test
mov
xor
inc
dec
retw
test
(bad)
ret
push
dec
das
loope
aad
dec
sbb
lods
ja
sbb
popf
mov
and
and
(bad)
dec
and
dec
inc
stos
call
xor
add
sub
mov
push
pop
dec
xchg
xchg
xor
ror
mov
imul
push
push
xchg
dec
jns
clc
push
ins
les
test
movs
loopne
add
das
in
aas
popa
(bad)
ds
xor
and
cmc
xchg
mov
inc
mov
in
lods
dec
fstp
not
pop
pop
pop
out
out
push
pop
retf
test
jecxz
or
cmp
push
mov
lock
outs
out
fnstcw
loope
pop
mov
and
test
xlat
add
mov
es
add
loope
add
xchg
clc
mov
sub
jno
shl
lock
in
add
pop
stos
cmp
sbb
sbb
add
xchg
(bad)
xor
in
xchg
popa
hlt
sbb
and
mov
cli
adc
mov
repnz
ss
aad
jmp
nop
add
(bad)
shr
daa
outs
(bad)
inc
(bad)
and
pushf
pop
nop
jbe
adc
add
add
pushf
sub
shr
daa
jg
bnd
gs
pop
push
dec
fld
ret
cmp
lds
jns
clc
test
(bad)
mov
mov
stos
cmc
cmps
and
lods
test
test
pushf
scas
ins
imul
inc
or
les
test
xchg
jmp
daa
xor
inc
movs
jp
mov
mov
dec
sbb
pop
mov
xchg
int3
dec
pop
mov
or
fucomp
idiv
adc
outs
jg
xchg
stc
sbb
das
xor
aam
mov
cld
adc
shl
dec
or
sub
xchg
mov
dec
and
ror
dec
in
cmps
cdq
out
push
add
inc
fld
mov
inc
fidivr
fsub
jo
into
mov
je
inc
mov
xchg
push
inc
mov
daa
jns
(bad)
popa
pop
pop
leave
jl
pusha
pop
femms
loop
in
mov
jb
sub
pop
dec
push
xor
test
mov
jmp
jae
and
aad
idiv
cmp
dec
xchg
cmps
xchg
mov
call
lods
xor
ja
mov
loope
stos
mov
popf
jbe
imul
xchg
add
retf
jns
push
cmps
outs
icebp
push
fsub
in
repz
adc
mov
(bad)
cld
xor
mov
nop
sbb
daa
jbe
test
sbb
out
cmps
sbb
and
imul
popf
cmp
fstp
mov
std
lods
pop
cvtps2pi
cmp
and
rcl
test
ja
fld
cwde
adc
cmps
int3
inc
mov
pushf
cli
ret
push
dec
jmp
inc
mov
jle
pop
aam
adc
mov
shr
imul
arpl
xor
mov
jl
dec
pop
xchg
(bad)
retf
cmp
std
adc
test
fidivr
sti
sbb
mov
push
push
cwde
out
sbb
pushf
push
fiadd
cmp
loope
scas
sub
cs
fwait
je
sub
mov
jmp
gs
adc
mov
mov
sbb
and
imul
sbb
pushf
pop
push
sbb
in
or
popf
add
fbld
pushf
add
jge
(bad)
imul
inc
inc
stos
xchg
ret
mov
sub
(bad)
jno
(bad)
lock
retf
sbb
jo
imul
inc
push
fild
sub
fmul
sbb
std
and
(bad)
nop
iret
sbb
jge
test
lds
xor
mov
repz
jb
mov
or
push
or
mov
retf
add
mov
add
and
add
jmp
ror
push
sbb
in
jne
pop
fwait
inc
in
in
dec
adc
inc
and
xchg
shl
and
mov
jge
inc
mov
rcl
sub
cli
push
mov
mov
sub
ffree
mov
daa
pusha
xchg
jmp
aam
cmps
jp
xchg
add
sub
adc
mov
test
loop
push
adc
in
jl
jg
mov
mov
out
packssdw
ret
loopne
arpl
cmc
push
add
adc
sub
fdivp
jnp
mov
fs
clc
pusha
and
repnz
xchg
popa
inc
fisub
jbe
mov
or
xlat
sbb
pop
add
stc
and
sti
push
stos
mov
les
sub
lea
sbb
mov
adc
pushw
mov
dec
sbb
push
cmp
in
inc
adc
and
mov
xchg
pop
or
mov
retf
fld
int
test
pop
sub
hlt
imul
adc
or
mov
icebp
scas
jecxz
ins
dec
mov
cld
adc
cwde
inc
sbb
dec
or
movs
mov
sbb
pop
mul
stc
mov
jecxz
fst
sti
ss
(bad)
dec
pop
addr16
cmps
sub
xchg
jg
cs
call
dec
jb
cld
sbb
xchg
out
add
push
std
scas
into
test
pop
jno
fs
ret
sbb
sbb
call
outs
xor
jb
jo
cmp
(bad)
test
popa
mov
jbe
dec
xor
pop
adc
xor
into
inc
cmp
ja
sbb
xchg
dec
sbb
pop
dec
push
retf
ins
je
xchg
mov
add
loopne
lods
out
add
adc
mov
jne
adc
inc
push
dec
and
mov
mov
adc
pushf
imul
pop
pop
and
xchg
(bad)
pop
mov
retf
jmp
icebp
leave
inc
js
jno
xor
cmp
cmps
jg
popf
pop
ror
push
xchg
xor
adc
ret
into
push
jae
or
stos
mov
inc
popf
push
(bad)
std
stc
or
gs
add
sbb
inc
in
not
test
out
sbb
jno
js
sahf
and
xor
outs
sbb
cmp
mov
(bad)
dec
es
jge
push
push
cmps
shl
cdq
dec
xchg
cwde
jle
mov
lock
cmc
out
jge
(bad)
pop
fild
rcl
in
icebp
bound
data16
xchg
and
cdq
jne
xchg
clc
mov
aaa
pop
sahf
or
push
pop
test
aam
jp
inc
ins
repnz
jmp
and
mov
add
mov
xchg
pushf
jno
cmp
mov
mov
test
ds
xor
jg
dec
mov
xchg
inc
inc
movs
mov
ja
or
mov
in
add
mov
fidiv
sti
dec
das
sbb
loop
cmp
(bad)
cdq
or
int3
test
cmc
inc
cmc
xor
lods
add
adc
frstor
outs
stos
iret
adc
out
sahf
and
xor
mov
cmp
ret
adc
daa
adc
das
(bad)
jmp
mov
cli
mov
pop
call
adc
jb
add
and
stos
gs
cmp
stos
imul
fist
retf
arpl
add
call
arpl
mov
xchg
pop
pop
push
daa
xor
repz
mov
cdq
(bad)
jecxz
jne
fdivr
es
nop
sti
imul
daa
dec
jns
retf
shr
aam
mov
pop
cmps
push
or
scas
adc
sub
lds
dec
icebp
retf
jp
(bad)
pop
dec
push
jno
out
push
stos
imul
mov
pop
push
sub
and
cmp
xchg
xchg
xchg
ins
hlt
push
mov
ret
ss
pop
stos
in
mov
pop
jl
fadd
mov
cmps
mov
push
cmp
repz
stos
dec
cdq
in
push
nop
mov
sbb
rcr
aad
loopne
or
xor
jecxz
int
data16
fcomp
mov
repnz
mov
or
in
dec
jle
lods
jo
pop
adc
(bad)
out
pushfw
pop
cwde
cmp
cmp
out
lds
addr16
xchg
xor
cmp
test
mov
sbb
in
ret
test
lods
or
popa
popa
sub
mov
mov
add
cmp
outs
fsubr
movs
cli
jmp
add
or
add
popa
js
fcomp
shl
inc
and
inc
lahf
jmp
dec
shl
sub
fldcw
ror
jne
test
sbb
mov
repz
mov
mov
and
mov
push
or
xchg
mov
jmp
in
dec
mov
lock
hlt
xor
fisttp
push
lods
retf
push
sub
test
fist
sbb
push
int
retf
fldcw
cs
jl
leave
lods
test
out
dec
cmp
and
xor
xor
(bad)
(bad)
cld
icebp
cmp
fiadd
xchg
mov
jae
movs
and
mov
popf
push
mov
jmp
xor
push
pop
dec
les
inc
jns
fnstsw
xchg
hlt
setp
cmp
je
push
(bad)
push
pop
xor
rcr
enter
mov
xor
sahf
xchg
out
outs
outs
hlt
add
inc
pop
(bad)
out
sbb
pop
mov
fs
adc
je
repnz
cmp
(bad)
int
sub
cs
jbe
mov
inc
mov
fist
es
xor
aad
inc
mov
pop
ret
call
adc
mov
pusha
sbb
push
adc
leave
push
mov
shl
movs
sbb
js
stos
add
jns
in
mov
xor
cmp
jmp
int3
jmp
std
pop
mov
out
sbb
mov
add
jg
rol
or
ins
ins
mov
fist
(bad)
(bad)
aas
in
cmps
xchg
mov
pop
cmp
cmps
aam
xor
cld
or
arpl
xlat
and
mov
sub
mov
fwait
out
dec
nop
mov
sbb
sbb
and
cmp
popa
sub
or
lock
outs
add
xor
leave
outs
xlat
cmp
adc
add
push
enter
in
sti
lahf
push
test
adc
pop
dec
xor
or
mov
cmp
or
mov
pushf
xor
jmp
js
adc
fst
outs
mov
mov
aam
gs
(bad)
dec
xchg
in
(bad)
aas
and
and
mov
cmp
mov
add
(bad)
cmps
cli
fstp
jno
mov
shl
arpl
movs
jae
ins
leave
xchg
cmp
and
iret
inc
dec
ja
enter
cmps
or
rcr
adc
clc
sar
push
adc
iret
popa
fdivr
int3
mov
jo
retf
and
mov
nop
je
pusha
scas
es
pop
push
hlt
push
call
cmp
mov
mov
lea
bound
and
xchg
dec
mov
fs
ror
loopne
dec
fst
cmps
push
shl
jecxz
push
mov
mov
popf
imul
pop
aad
clc
cli
in
cmp
jmp
sub
cmp
push
(bad)
dec
xchg
push
cmp
fldenv
icebp
mov
add
sub
ins
sbb
push
ret
mov
or
loopne
fisub
xlat
rcl
cmc
pop
dec
std
(bad)
sti
test
jge
jg
jl
sub
xchg
(bad)
cld
sbb
test
sbb
(bad)
out
push
mov
mov
pushf
and
lock
mov
lock
adc
clc
mov
call
or
and
cwde
inc
mov
ss
cmp
jge
lock
pop
cwde
leave
out
out
aad
sahf
xor
inc
jae
(bad)
std
push
(bad)
ror
jne
sahf
or
rep
rol
out
fistp
scas
dec
das
sub
xchg
ds
fstp
push
mov
ret
cwde
rol
scas
xchg
pop
jecxz
jecxz
dec
jecxz
dec
adc
add
popf
mov
inc
rol
call
mov
rol
scas
rcl
jmp
push
adc
hlt
clc
mov
jo
mov
sti
jnp
out
loope
mov
ret
out
mov
jl
jp
inc
scas
push
xchg
inc
rol
mov
push
imul
mov
mov
jns
int
push
stos
loope
dec
cmp
sub
aas
bound
dec
bound
mov
cmps
dec
sbb
jg
jg
dec
sahf
ret
out
adc
sbb
imul
xchg
push
scas
stos
xchg
mov
in
cmps
push
xchg
add
leave
or
push
inc
mov
jne
dec
jo
out
test
lods
and
iret
jecxz
fidivr
add
dec
ins
je
xchg
stos
xor
cdq
sub
push
push
mov
ja
out
xchg
pop
jb
add
pop
adc
push
mov
sbb
sbb
aad
pop
cmp
push
fcomi
loop
ret
icebp
xchg
imul
cli
call
ins
dec
or
and
(bad)
jmp
cmp
hlt
outs
ret
cmps
push
cmp
sbb
aas
shr
and
test
cmc
cwde
xor
pop
dec
sahf
sbb
cmp
cmp
repnz
inc
(bad)
jne
xor
inc
sbb
ss
inc
inc
xchg
mov
jne
mov
or
test
repz
pop
sub
int3
stos
repz
data16
es
jo
sub
daa
fwait
loope
pop
mov
pop
sbb
xor
dec
pop
xchg
ins
pop
and
ja
cmps
fnsave
pushf
dec
js
ret
adc
mov
or
iret
ss
push
dec
sub
or
movs
sub
stc
pop
jmp
lea
test
sub
jle
pop
pop
adc
push
mov
loop
or
js
push
mov
rcl
mov
mov
sub
xchg
and
inc
pop
pop
push
mov
push
mov
and
pop
scas
cmp
int
mov
xchg
loopne
shr
imul
jmp
and
and
cmc
and
fucomi
pop
(bad)
sub
mov
ds
inc
xchg
stos
popf
dec
sar
movs
aas
or
jae
sbb
dec
dec
cmp
pushf
mov
stc
sbb
or
sub
shl
ss
inc
in
scas
ds
mov
repz
sub
mov
mov
cwde
xlat
mov
mov
pop
mov
fdivr
cli
inc
sub
xchg
or
mov
pop
or
cmp
pop
mov
loopne
stos
test
ss
and
push
xchg
pop
mov
push
(bad)
xor
or
mov
int
sbb
lods
sub
push
pop
pop
and
(bad)
dec
pushf
lahf
and
pop
leave
cmps
xchg
push
sub
sub
bnd
scas
mov
dec
or
cmp
(bad)
in
sar
adc
adc
pop
aam
outs
add
adc
xchg
cmp
push
fnstcw
and
aam
jmp
aad
mov
rcr
sub
cdq
jmp
xchg
mov
dec
jb
adc
mov
inc
xchg
test
xchg
push
into
aad
adc
addr16
shr
cmp
mov
cmp
mov
test
cmp
ss
push
mov
iret
sub
pop
dec
add
or
jb
jne
bound
rcr
stos
adc
aas
not
ja
inc
js
xor
jle
(bad)
adc
pop
daa
mov
arpl
push
nop
les
mov
or
shl
dec
jecxz
adc
adc
mov
div
popf
aaa
rol
xchg
std
xchg
les
popf
cmp
mov
push
ja
push
mov
add
(bad)
imul
mov
(bad)
sbb
pop
dec
adc
(bad)
(bad)
pop
cli
idiv
pop
add
mov
aad
cmp
mov
(bad)
aam
dec
in
cmp
xor
xor
popa
sub
int3
mov
cmps
js
xchg
push
cli
mov
cmps
mov
xor
add
lahf
sbb
pop
test
inc
add
test
xor
xor
dec
pusha
dec
mov
mov
loope
xor
dec
xor
mov
lock
xor
sbb
js
retf
jno
pop
pop
aam
mov
sub
retf
hlt
pavgb
imul
sub
add
call
loop
not
pop
loop
xor
scas
or
mov
arpl
pop
push
int3
sbb
mov
push
lea
cli
addr16
arpl
addr16
clc
sbb
(bad)
nop
adc
movs
push
fisubr
(bad)
fsubr
in
or
cmp
retf
add
addr16
ror
cmp
cmp
pop
sar
addr16
push
mov
fiadd
repnz
fisubr
int3
jmp
loope
lea
push
and
(bad)
xchg
shr
push
adc
pop
xchg
mov
(bad)
jne
nop
ss
inc
inc
repnz
sub
adc
pop
(bad)
mov
pushf
movs
xor
adc
xor
iret
shr
cmp
std
mov
lahf
push
adc
dec
xor
push
pop
lock
adc
jns
mov
into
xchg
sbb
shl
loopne
loope
test
xor
(bad)
sub
push
es
pop
fs
sbb
loopne
out
jg
(bad)
xlat
dec
push
jae
imul
jp
movs
aad
pop
push
loopne
test
xor
mov
inc
push
mov
rcr
movs
dec
jp
jmp
mov
(bad)
data16
adc
push
dec
xchg
outs
cmps
adc
addr16
movs
cdq
jl
mov
jl
mov
(bad)
or
and
xchg
jp
mov
push
iret
lock
aaa
cmp
jns
mov
out
lea
ins
jns
pushf
out
scas
aas
xor
call
shl
push
sub
pop
fstp
mov
arpl
cmp
(bad)
pop
pop
pop
lds
inc
ja
mul
mov
lahf
data16
mov
add
jno
jmp
ds
dec
mov
pop
scas
xchg
push
int
jb
cli
jb
popf
arpl
ds
hlt
dec
push
mov
adc
push
mov
cmp
popa
loop
movs
sub
sbb
or
mov
and
hlt
stc
mov
push
dec
mov
fninit
dec
push
and
cvtdq2ps
sbb
cld
jno
out
pushf
movs
cs
bound
pop
loope
out
(bad)
fisub
pop
or
push
cmp
inc
es
shr
push
dec
fst
adc
out
rcr
sub
mov
jmp
in
sub
ror
cmps
cmc
int3
xor
enter
or
aam
lea
sub
clc
enterw
int
ffreep
adc
daa
cmp
jmp
dec
mov
xchg
in
dec
inc
mov
stos
xor
mov
popa
xchg
inc
and
add
pop
jb
mov
cmps
mov
xor
retf
jg
inc
shr
push
(bad)
cli
mov
stos
cmp
or
sub
cmp
push
push
sub
imul
inc
(bad)
fnstenv
test
ror
xchg
fiadd
mov
loopne
aaa
sbb
mul
retf
and
arpl
sub
pusha
gs
cmp
dec
mov
jle
or
jmp
jb
add
xchg
rcl
dec
push
mov
sub
pop
mov
imul
mov
add
sbb
bnd
pushf
cmp
adc
popa
jg
adc
cmps
or
not
test
es
jbe
add
push
in
inc
dec
dec
add
add
sbb
scas
popf
inc
xor
test
cmp
hlt
mov
rcr
sub
call
cdq
cmp
xchg
pop
mov
lds
jp
fwait
iret
ins
inc
mov
jmp
hlt
ss
lahf
pop
dec
mov
sti
sub
imul
xchg
pop
mov
aaa
dec
scas
ds
pop
jmp
cmps
fs
jecxz
mov
xchg
jo
cmps
xor
adc
cld
lahf
adc
sti
ins
dec
sbb
jne
cmps
dec
aad
cmps
mov
ret
jge
mov
push
leave
sbb
adc
out
cmp
cmc
jmp
nop
out
xchg
inc
(bad)
test
pop
movs
mov
jg
shl
mov
mov
xor
pop
mov
and
mov
call
pop
xor
mov
add
out
or
jns
cmc
inc
out
scas
mov
xor
div
adc
and
inc
pop
jbe
pop
fisttp
push
mov
mov
es
add
clc
enter
dec
fdivp
add
jge
xor
sub
retf
inc
xor
dec
stc
pop
fs
sub
add
nop
fwait
xor
jge
cmc
and
and
(bad)
cmp
mov
fs
adc
and
out
arpl
scas
es
outs
in
xchg
shr
add
adc
mov
jae
jle
sbb
sbb
cdq
mov
and
(bad)
call
adc
or
mov
mov
jp
pop
sbb
gs
outs
gs
jae
mov
add
or
movs
pop
and
lock
gs
in
(bad)
or
imul
sub
fnstsw
sbb
push
dec
test
(bad)
stos
xchg
pop
and
lds
stos
cmp
test
pop
rol
cdq
xor
mov
stos
shl
pop
xchg
rol
mov
(bad)
lock
mov
sbb
jmp
sub
adc
cmovs
push
add
stos
aaa
rol
mov
repz
loope
xor
adc
sub
clc
cmp
scas
fdivrp
adc
pop
pop
jns
out
fldenv
call
jne
in
iret
or
dec
stos
or
repz
je
inc
into
clc
adc
das
mov
imul
xchg
ror
adc
je
sub
leave
jne
push
mov
xchg
cdq
push
pop
std
lahf
int3
inc
xor
mov
fdiv
push
pand
pop
mov
xchg
jae
adc
push
mov
push
loope
(bad)
popf
sub
or
sbb
and
cmps
es
rcr
movs
dec
test
inc
(bad)
and
fsub
icebp
and
clc
or
add
ds
xchg
mov
fist
jmp
fisubr
push
mov
pop
out
dec
push
inc
popa
adc
loopne
lods
clc
in
or
dec
inc
clc
cmc
in
dec
inc
xchg
pop
or
jp
mov
push
out
push
mov
pushf
into
pop
movs
imul
cmp
and
out
sahf
neg
dec
xchg
(bad)
call
sbb
dec
inc
call
cwde
test
sub
sbb
cmp
fidiv
mov
jmp
inc
jp
add
fild
daa
cmc
sbb
(bad)
push
ins
test
sahf
movs
ins
outs
mov
and
push
mov
mov
icebp
cmp
pop
cld
pop
ins
movntq
jmp
enter
aas
or
and
repz
adc
mov
bound
jge
cdq
test
xor
or
jo
ficom
icebp
mov
ss
jecxz
(bad)
rcr
push
xor
mov
bound
cs
(bad)
stc
add
inc
ins
mov
adc
into
(bad)
sbb
or
sub
jmp
push
jle
xchg
out
adc
(bad)
pop
and
gs
test
adc
xor
inc
jno
sub
hlt
movs
mov
loop
mov
push
mov
adc
cmp
jae
jmp
inc
sti
mov
(bad)
clc
push
pushf
into
(bad)
iret
sub
sbb
in
outs
jmp
or
mov
push
int3
ss
sahf
fdivr
cmp
sbb
adc
add
pushf
jle
mov
mov
es
jb
fisttp
xchg
shr
or
inc
mov
js
call
imul
jl
cmps
out
aad
mov
or
std
jne
xor
adc
call
xchg
into
(bad)
std
push
pop
or
cmc
enter
adc
bnd
scas
jns
sbb
fdiv
mov
nop
fcom
mov
movs
rol
mov
push
addr16
inc
add
shr
rcl
out
xlat
mov
sbb
inc
push
sbb
mov
test
into
or
dec
push
ror
movs
and
pop
mov
outs
sub
adc
jb
fild
fbstp
push
mov
jecxz
inc
sub
and
xor
pop
psllq
arpl
sbb
in
pusha
jmp
jb
sub
cmp
ins
test
rcr
mov
mov
jmp
jb
ror
jge
xchg
and
mov
out
loop
cmp
es
lods
jbe
adc
cmp
jbe
mov
imul
mov
add
jecxz
jmp
jbe
mov
push
fistp
clc
jno
push
xor
jmp
and
aad
gs
out
xor
jae
mov
in
pop
xor
dec
sbb
fild
or
mov
mov
shr
ins
test
cmp
cmp
test
enter
and
repnz
retf
push
sub
cmp
aad
(bad)
cmp
xchg
or
pop
inc
sahf
lock
push
out
sbb
sub
cdq
xchg
nop
pop
imul
xor
adc
mov
xor
fnstenv
pop
sbb
xchg
aas
push
dec
loopne
mov
inc
cmp
or
nop
xor
das
repz
int3
mov
mov
jle
addr16
or
test
xchg
xchg
push
ret
pop
idiv
sbb
push
sub
lahf
adc
sbb
into
xchg
fs
jg
xchg
lock
inc
pop
(bad)
jp
loopne
add
cmp
ret
test
pop
pop
dec
pop
lea
shr
dec
sub
out
lea
rcr
mov
add
and
or
nop
out
dec
inc
xchg
cmps
dec
shr
sbb
inc
sub
sbb
and
in
dec
sbb
jp
mov
mov
xor
cmp
(bad)
rcl
inc
pop
repnz
cmp
(bad)
out
mov
mov
and
sub
fcom
and
jo
aam
icebp
dec
push
xor
shr
push
adc
sbb
xor
sub
call
mov
jl
xchg
rol
mov
push
mov
push
pop
lds
dec
jnp
mov
scas
xor
sar
mov
ret
push
mov
call
repz
add
dec
sub
mov
xchg
in
dec
cmp
sbb
push
shr
mov
test
cdq
pop
ret
add
sbb
mov
cmp
xor
popf
adc
cmps
dec
sar
or
bound
xor
iret
inc
mov
std
in
out
xor
sub
shl
xor
imul
int3
pop
xor
popa
inc
(bad)
repnz
fs
and
jo
jae
inc
movs
lock
mov
cmp
mov
jmp
mov
mov
pop
inc
fcom
jae
mov
sar
cmc
sbb
dec
shl
mov
cmp
mov
push
mov
stc
outs
enter
mov
outs
fwait
in
jp
pop
push
dec
xchg
cli
jmp
lea
movs
std
add
sub
cld
aam
mov
stos
adc
cmp
adc
ret
ins
jae
scas
movs
dec
icebp
retf
test
(bad)
adc
fwait
shl
in
mov
adc
rol
and
xor
outs
mov
ins
ds
sub
test
jge
mov
adc
pop
fdiv
call
fwait
lock
adc
ret
inc
loope
jmp
xor
mov
gs
mov
pusha
jbe
xor
pushaw
addr16
mov
push
add
mov
pushf
aad
push
dec
outs
xor
ficom
rcl
adc
or
inc
shl
dec
fiadd
xadd
rcl
(bad)
and
xor
jg
movs
aaa
sub
dec
fstp
inc
mov
add
and
aas
test
and
(bad)
(bad)
mov
shr
clc
push
adc
xchg
jo
adc
into
test
sbb
pushf
xchg
stos
xchg
add
add
inc
fimul
mov
popa
lock
mov
push
cli
(bad)
stos
push
inc
sbb
or
add
sbb
mov
sub
(bad)
mov
sbb
movs
mov
fisttp
add
mov
in
and
es
sub
xchg
mov
push
xchg
mov
stos
pop
mov
popf
sbb
mov
retf
or
into
mov
or
sub
push
imul
sbb
hlt
mov
xchg
jge
out
movs
movs
inc
fwait
xor
sahf
push
sahf
mov
mov
push
dec
jmp
cwde
dec
dec
cmp
nop
xchg
push
mov
add
dec
mov
mov
mov
push
add
pop
lahf
or
cli
fadd
fwait
and
cmc
fwait
(bad)
or
mov
xor
sub
push
xor
out
call
mov
ins
fdivr
pop
cmc
mov
mov
mov
ins
sub
sbb
lods
xor
xor
(bad)
call
std
sub
inc
add
jle
cs
add
add
dec
or
fwait
jns
movs
jo
cmps
push
or
jo
out
cdq
div
push
pop
int3
xlat
out
(bad)
aad
mov
enter
or
into
int
and
retw
ds
int
mov
cmp
ror
sub
data16
jns
xor
out
xor
out
dec
sar
fstp
test
(bad)
nop
sbb
aaa
and
xchg
into
adc
mov
jb
cmp
in
mov
xchg
fsub
and
mov
add
jl
jo
rcl
ja
retf
sub
loope
stc
add
mov
push
add
mov
mov
cmp
movs
rol
push
adc
mov
mov
sub
jecxz
lock
cmps
or
fnstenv
cmp
mov
adc
loope
rcr
dec
cmp
push
ret
and
push
das
imul
pusha
repnz
outs
retf
sbb
xor
es
push
hlt
jp
push
fwait
cs
loop
stos
div
sbb
jbe
lock
push
adc
lods
into
jl
icebp
movs
or
inc
pop
retf
inc
sub
std
mov
adc
aaa
or
push
stc
clc
lods
outs
mov
inc
inc
(bad)
div
jecxz
jbe
sub
adc
mov
or
and
pop
xor
fld
repnz
cmp
xor
mov
iret
sbb
mov
mov
mov
je
push
adc
jge
jge
mov
mov
call
adc
xchg
std
sub
out
sub
lea
loope
push
ret
push
mov
jg
(bad)
mov
sbb
xor
leave
or
push
mov
mov
jb
dec
xchg
jno
dec
push
dec
jae
push
cmp
push
mov
mov
pushf
movs
scas
xor
jge
adc
enter
jb
dec
pop
sbb
fs
retf
or
jecxz
push
cmp
cli
dec
scas
aaa
cmc
pop
cmp
(bad)
out
stc
mov
pop
imul
arpl
pop
and
(bad)
in
mov
stos
ret
das
adc
cmp
mov
arpl
inc
mov
mov
mov
test
push
stos
cmp
iret
hlt
sub
cmps
lods
dec
data16
sahf
int3
shl
popf
mov
or
push
das
inc
(bad)
sbb
outs
loope
pop
sub
or
ins
dec
fstp
repnz
lock
stos
jnp
mov
xchg
jne
rcl
mov
int3
xor
jnp
mov
cmps
ja
xor
jge
push
adc
mov
in
and
jo
add
hlt
lods
inc
les
adc
push
in
jge
mov
aad
or
cmp
mov
push
add
fsubp
mov
inc
sti
jns
fcomp
pop
mov
cmp
xchg
pop
sub
sbb
arpl
ins
lods
dec
(bad)
out
hlt
div
push
mov
push
fwait
daa
pop
sbb
loop
ja
test
push
repz
mov
ffree
adc
xlat
(bad)
out
jl
pusha
inc
(bad)
adc
mov
lock
adc
sbb
cwde
add
shl
sti
jp
sub
cmp
jns
sbb
mov
int
pop
jge
(bad)
enter
jae
push
push
mov
daa
aam
and
adc
loop
sbb
fdiv
dec
(bad)
ja
jecxz
cmp
div
or
mov
out
in
out
pop
out
adc
hlt
ins
jle
mov
push
dec
imul
fistp
test
sub
dec
(bad)
push
mov
int
mov
push
ja
push
add
sub
inc
mov
xor
lods
data16
aam
ficom
icebp
shr
in
(bad)
mov
dec
bswap
(bad)
xor
inc
test
cmp
aaa
je
xor
je
jae
not
cli
mov
xor
test
sub
inc
ficomp
xchg
ret
sub
inc
and
mov
out
dec
adc
fistp
pop
jns
sub
lea
sbb
retf
jbe
test
loope
mov
lea
or
icebp
dec
scas
shr
in
push
jle
adc
enter
pop
hlt
xor
add
mov
pop
scas
inc
inc
lds
inc
lock
xchg
cmp
sbb
cmps
mov
and
or
mov
sahf
ficomp
mov
repnz
dec
mov
ds
mov
repnz
mov
inc
pop
sub
push
and
add
and
xchg
fimul
pop
mov
jne
xchg
mov
push
out
test
xor
dec
sub
fsubr
movs
in
mov
(bad)
sbb
cmp
mov
xchg
sub
ret
jmp
fdiv
out
xlat
push
outs
clc
mov
add
inc
loop
jecxz
cmp
jecxz
fcmovnu
mov
rcr
sbb
dec
test
icebp
and
mov
push
es
mov
xchg
or
dec
sbb
mov
in
mov
pop
std
pop
and
shr
mov
mov
jns
aam
retf
aad
fsub
out
movs
push
mov
aad
jno
cwde
add
in
outs
sbb
xchg
xor
rcl
fidivr
xlat
jg
mov
pop
xchg
fist
xchg
fdivrp
mov
jmp
repz
jnp
inc
das
pop
mov
mov
sbb
outs
sbb
(bad)
loopne
sbb
adc
ficomp
inc
in
and
mov
xor
xchg
arpl
pop
xor
lods
rcr
jle
jecxz
sub
ins
sbb
mov
cld
pop
dec
ficom
mov
test
stos
cli
jbe
jg
mov
pop
fcomp
sbb
sub
leave
jo
enter
in
idiv
sti
pushf
xchg
shl
push
sub
(bad)
enter
xchg
and
test
aam
and
and
mov
vmovaps
aas
dec
jle
loope
push
dec
addr16
stos
sub
mov
or
scas
and
cmps
mov
enter
pop
jp
pop
add
dec
pop
pop
(bad)
call
pushw
or
add
and
test
popa
pop
(bad)
icebp
mov
retf
arpl
pusha
adc
sbb
push
mov
popf
cld
je
add
fst
imul
retf
cmp
test
fistp
cmp
and
shl
fimul
mov
sub
lock
jmp
push
mov
mov
stos
ret
xchg
dec
jns
loope
jmp
xlat
push
retf
aad
mov
(bad)
lock
daa
xchg
popa
mov
push
mov
scas
mul
retf
outs
test
inc
mov
outs
sbb
cwde
mov
xchg
ins
jle
jecxz
std
and
pop
fisttp
mov
xor
(bad)
loopne
jb
cmp
inc
xor
ss
inc
dec
rcr
clc
mov
lea
sub
mov
les
jmp
jmp
mov
add
je
add
cmps
cli
mov
inc
sar
in
aad
push
sbb
stos
lods
test
pop
fisttp
test
hlt
adc
mov
jmp
es
and
lahf
pop
ins
jmp
jne
mov
lea
mov
jne
cmp
icebp
imul
mov
je
ret
adc
push
ficom
sub
mov
push
fadd
cmc
inc
dec
rcl
into
sbb
sub
xchg
emms
dec
data16
cs
neg
call
jae
and
mul
add
gs
bound
xor
hlt
call
jns
clc
or
test
dec
xlat
inc
xor
mov
sub
mov
mov
or
sub
and
mov
mov
jns
mov
pop
out
sti
aaa
jmp
icebp
mov
mov
call
pop
pushf
add
jp
icebp
jno
inc
adc
mov
call
into
sahf
adc
add
dec
(bad)
jecxz
div
and
jnp
dec
fwait
mov
xor
pop
jae
jne
out
sbb
mov
icebp
mov
jp
dec
pop
push
test
pop
xor
std
xor
ror
pop
jle
jg
add
mov
out
cld
fbld
retf
ror
je
lock
(bad)
inc
leave
and
sub
test
jne
cmp
mov
in
xchg
dec
push
xor
mov
fwait
outs
ds
sbb
mov
push
xchg
xchg
sub
jns
cmp
jle
jl
push
sbb
mov
xor
push
fdiv
inc
and
sub
in
push
retf
push
cmps
lds
sti
sbb
mov
outs
call
and
ins
dec
and
retf
mov
das
pop
loope
pop
(bad)
push
or
dec
jne
in
mov
jg
push
pop
iret
jae
shl
xchg
fmul
xor
jns
scas
sbb
fadd
jp
mov
retf
cmps
mov
jmp
test
inc
fidivr
xor
sub
jmp
rcr
jns
daa
inc
xchg
cwde
xchg
sbb
adc
lahf
and
fnstcw
add
mov
add
mov
mov
idiv
lock
adc
mov
test
xchg
icebp
add
shr
xchg
sbb
inc
mov
fiadd
mov
mov
adc
inc
ss
movs
in
jae
test
shl
xor
ja
iret
cmc
mov
sub
pop
enter
scas
push
sbb
dec
gs
adc
(bad)
mov
movs
push
(bad)
out
mov
movs
xchg
pop
pop
(bad)
aam
jnp
xor
sti
fstp
and
ret
pop
(bad)
imul
dec
(bad)
stos
gs
cmps
fsubr
sbb
jb
cs
neg
movs
rcl
fwait
sub
sbb
sbb
scas
out
rcr
jp
mov
push
jns
cmp
or
ret
movs
mov
mov
cmc
pop
ret
adc
mov
dec
out
clc
in
mov
sbb
pop
in
enter
jg
xor
bswap
hlt
and
dec
repz
ret
ror
sbb
pop
and
cmp
inc
lods
push
dec
mov
pusha
sub
retf
or
and
ret
and
fsubrp
mov
sbb
lods
test
push
push
mov
jge
(bad)
sub
dec
cld
outs
add
das
addr16
dec
mov
and
xlat
fsub
mov
dec
jb
bound
test
cld
and
pop
inc
out
inc
mov
fist
in
or
sub
cmps
and
cmp
test
cdq
aam
aas
fadd
test
cdq
mov
ret
mov
cmps
mov
clc
push
dec
daa
jmp
adc
and
(bad)
fld
ret
sti
mov
in
nop
ja
add
outs
repnz
cdq
pop
adc
clc
leave
xor
or
clc
dec
cs
cmc
mov
dec
inc
pop
retf
cdq
in
or
punpckhwd
and
inc
xor
adc
jmp
xchg
icebp
jp
fwait
ror
mov
jle
and
dec
lock
push
and
cmp
mov
loop
adc
or
shr
jmp
das
sar
inc
fsub
stos
call
sub
pushf
int
jnp
add
xchg
xchg
test
cdq
sbb
sti
sub
push
pop
sbb
pop
mov
in
cmp
add
in
xor
out
pushf
in
cmp
es
add
mov
aad
inc
es
fs
xchg
les
sub
and
xchg
lahf
pop
push
scas
fdiv
and
mov
les
jp
loope
shl
adc
mov
cmp
xchg
setbe
inc
das
fcomp
pop
xchg
mov
inc
cdq
dec
jg
outs
mov
push
and
cmps
xchg
repz
cld
add
es
jmp
loope
cmc
or
push
inc
push
push
jge
pop
frndint
add
cmps
repz
push
aad
daa
aad
mov
or
sub
add
mov
int3
pop
scas
pop
xchg
mov
fild
ds
mov
xlat
popf
push
mov
and
imul
and
xor
or
sbb
adc
jo
jle
repnz
enter
dec
push
(bad)
adc
imul
jnp
rcl
pop
jecxz
ret
push
out
fsubrp
stos
sbb
pushf
fimul
es
jae
hlt
ins
cmc
xlat
xlat
cmp
retf
ret
les
icebp
or
lahf
and
sub
das
jle
inc
pop
in
mov
shr
les
push
add
neg
addr16
ins
js
jne
cmp
rcr
mov
enter
jns
xchg
fisub
gs
mov
daa
push
clc
bound
in
xchg
xchg
imul
mov
and
push
push
in
rol
ret
movs
fsubr
stc
inc
sar
mov
imul
(bad)
xchg
jns
inc
adc
add
mov
mul
ret
cli
sub
fild
loop
outs
or
test
push
mov
js
fisttp
add
push
jge
shl
aam
sub
mov
or
dec
mov
xchg
add
fsubp
minps
sbb
iret
mov
xchg
sbb
push
jp
sahf
jecxz
pop
retf
shl
mov
or
pop
shl
aad
mov
and
lea
cmp
idiv
push
sbb
movs
(bad)
shl
test
push
mov
and
jmp
pop
outs
stc
dec
push
or
xor
retf
cmp
inc
mov
fcmovne
out
cs
pop
(bad)
mov
inc
sub
ins
mov
mov
outs
les
add
clc
sub
cwde
jecxz
popa
fcomp
and
add
jg
sub
stc
mov
lods
shl
xchg
sub
arpl
inc
pop
iret
es
dec
push
icebp
pop
jle
push
jno
shl
out
cwde
ds
cmp
(bad)
push
lea
xchg
rcl
and
iret
fnstsw
mov
fwait
aam
stc
test
dec
imul
mov
enter
pop
aaa
cmp
mov
pop
jbe
rol
imul
jns
sub
mov
push
push
adc
test
sar
(bad)
pop
lods
jg
inc
pop
fist
inc
or
jp
jecxz
outs
mov
ret
xlat
aad
pushf
lods
push
and
iret
xchg
add
mov
mov
aaa
out
xchg
shl
lods
movs
dec
sub
ret
out
out
fisub
rcr
add
outs
push
retf
xchg
aaa
adc
cmc
das
pop
and
ds
jo
lea
inc
mov
mov
jno
es
mov
nop
xchg
adc
outs
lock
(bad)
js
fmul
jmp
es
es
in
add
jecxz
cmps
mov
jb
or
cmp
and
xchg
add
pop
mov
mov
cmp
jbe
and
setbe
xor
jb
je
cdq
mov
pop
shl
push
mov
mov
xchg
mov
inc
(bad)
xor
push
inc
scas
mov
daa
xor
icebp
xchg
jmp
int
adc
push
ja
mov
sti
mov
retf
cmps
aaa
ffree
test
xchg
sahf
in
sbb
pop
or
test
sbb
dec
push
push
stc
ret
mov
rol
jp
push
out
ds
imul
and
pop
xor
shr
cmc
in
fnstenv
out
xchg
sahf
dec
pop
clc
mov
fcomp
inc
mov
sbb
hlt
jne
sahf
mov
sub
adc
dec
retf
xor
addr16
inc
push
jne
out
jle
inc
arpl
mov
push
xor
xchg
std
loop
sub
push
fst
scas
movs
sub
outs
jg
inc
lea
dec
push
mov
out
inc
mov
sahf
sbb
inc
inc
loopne
fucom
out
and
(bad)
pusha
(bad)
retf
push
xchg
push
in
jmp
fsubr
sbb
and
(bad)
mov
sub
lock
das
cmc
bound
sbb
add
loope
jno
jecxz
inc
cmc
iret
and
adc
cmc
fimul
add
into
hlt
inc
sub
xchg
add
xchg
xor
retf
xchg
inc
add
ret
imul
jl
mov
dec
cs
mov
mov
inc
push
clc
dec
pop
xchg
jae
js
mov
pushf
ret
add
pop
jns
lahf
or
mov
data16
pop
daa
test
into
dec
fwait
scas
test
js
test
adc
or
mov
aad
jp
add
out
fsubr
jns
push
push
push
jecxz
mov
fldcw
add
xchg
aad
lea
xlat
pop
loop
pop
repz
jb
jmp
sub
jnp
nop
and
xlat
call
aas
(bad)
sub
sbb
daa
adc
mov
adc
int
inc
shl
mov
fstp
stos
jp
adc
dec
xchg
pop
sub
aad
div
push
les
out
div
pop
mov
pop
cmc
xor
cmp
sub
pop
mov
add
(bad)
adc
je
out
popf
cmps
mov
cmp
mov
repz
in
les
(bad)
in
loope
sbb
cmp
mov
push
mov
data16
pop
aaa
xchg
repnz
das
fnstcw
inc
pushf
neg
inc
sbb
xchg
push
test
in
ss
mov
xor
mov
cs
pop
mov
mov
cmp
mov
sub
adc
outs
(bad)
(bad)
mov
adc
movs
mov
in
in
push
sub
jmp
push
adc
pop
cld
and
push
(bad)
adc
test
dec
sub
sbb
dec
adc
jp
mov
lods
xlat
or
je
cmc
jmp
add
push
mov
mov
adc
sub
mov
add
adc
test
dec
xor
imul
push
stc
fwait
call
test
push
dec
sub
outs
push
outs
pusha
dec
mov
jne
(bad)
clc
xchg
mov
clc
imul
movs
jo
test
push
inc
(bad)
jnp
adc
sub
pop
pop
shl
ss
or
js
inc
push
xchg
and
pop
mov
das
sbb
xlat
mov
xchg
cmp
push
xor
es
dec
jp
mov
xor
add
inc
jb
stos
shl
mov
out
adc
dec
retf
push
and
or
sar
ret
movs
push
pushf
outs
mov
xchg
idiv
stc
or
pop
push
or
add
inc
and
out
jno
shl
jle
mov
mov
mov
mov
popa
movs
mov
inc
adc
psrlq
ss
fild
stos
push
shr
(bad)
dec
stos
and
call
es
sub
mov
add
test
mov
xor
or
sub
xor
dec
sbb
ffreep
inc
cli
xor
sbb
push
xchg
movs
sbb
jne
push
call
fsubr
pop
add
cmps
inc
pop
mov
fmul
fwait
mov
adc
sub
in
xor
pop
mov
mov
push
jecxz
xchg
inc
pusha
outs
sub
in
push
hlt
cld
fucomi
(bad)
in
fstp
jp
repnz
push
pop
xor
in
jb
fsubr
pusha
sbb
out
test
sbb
enter
stos
scas
ror
int3
test
mov
or
add
stos
mov
fistp
fldz
clc
loop
test
and
(bad)
das
iret
test
fbstp
and
aad
packssdw
sub
cmp
jecxz
and
mov
retf
retf
mov
retf
adc
fcom
cdq
dec
xchg
dec
stos
jne
dec
mov
mov
out
pusha
scas
or
inc
(bad)
mov
idiv
xor
jo
mov
aad
test
or
inc
pop
ror
scas
lock
sbb
xchg
(bad)
lock
adc
adc
mov
std
add
test
push
je
pushf
xchg
xchg
ret
push
(bad)
sar
ret
ja
mov
mov
pop
jnp
add
mov
loope
push
(bad)
and
fld
pop
ficomp
popa
mov
pop
push
jmp
sub
mov
pop
cdq
cmp
sub
(bad)
jb
adc
test
jbe
pop
dec
leave
cmps
cmps
jmp
repnz
outs
outs
mov
push
mov
ins
and
and
loopne
sbb
xchg
jp
cmp
(bad)
xchg
mov
xchg
and
cs
pop
sub
aad
xor
mov
and
jmp
and
cld
js
cmp
mov
inc
xchg
sub
sub
dec
inc
clc
adc
ror
cs
fwait
xor
mov
and
(bad)
mov
mov
mov
mov
add
add
dec
and
cwde
adc
sub
daa
or
outs
xchg
mov
jae
xor
in
clc
cmova
cmps
das
and
jle
jmp
adc
out
(bad)
xor
mov
adc
fcom
sub
sub
stos
lods
or
xor
ret
and
cli
and
dec
aad
lods
les
xchg
jbe
ja
call
fisub
adc
dec
mov
mov
movs
mov
push
vphaddbw
outs
push
retf
pop
in
pusha
add
lds
adc
xor
mov
(bad)
jl
pop
jmp
ret
lahf
jo
loopne
adc
push
jp
push
dec
aad
shl
leave
adc
xor
aas
addr16
dec
loopne
aad
leave
inc
adc
or
or
adc
xchg
xchg
mov
jo
inc
mov
aam
jbe
call
sti
stc
test
xor
inc
test
aad
gs
inc
int3
jp
dec
mov
mul
stos
pop
push
sbb
addr16
adc
(bad)
cmps
or
mov
jno
cmp
mov
push
add
test
add
fisub
hlt
dec
cmp
inc
pop
js
push
inc
mov
jl
mov
xchg
inc
jns
pop
jg
es
mov
pop
rcl
push
cmps
add
enter
stos
jp
fdiv
fs
pushf
pop
jbe
inc
mov
imul
movs
movs
sub
mov
fidivr
push
inc
adc
sub
pop
xchg
dec
pop
inc
ins
lods
in
les
loopne
inc
in
xchg
sbb
les
rcr
pop
ret
das
ja
push
xchg
cmp
mov
pop
fbstp
in
or
push
push
pushf
mov
add
sbb
sub
dec
cmp
aaa
div
loopne
and
inc
ror
mov
in
mov
das
push
push
jmp
js
jno
(bad)
or
cld
scas
mov
sbb
(bad)
jge
push
rol
mov
lods
call
mov
mov
jge
mov
jl
cmp
inc
shl
and
or
inc
cs
push
jp
lahf
les
sbb
add
cmps
(bad)
fucom
movs
ins
cmp
push
fs
or
mov
dec
lods
popf
mov
dec
pandn
test
pop
pusha
int3
stos
lods
ret
pop
cli
mov
stos
jb
add
repz
cmp
addr16
mov
xor
fcomp
pop
cld
mov
xchg
adc
inc
push
push
out
cdq
xchg
xchg
rcr
out
popf
test
xchg
nop
dec
and
jnp
mov
jnp
sbb
xor
int
aas
rcl
fist
arpl
data16
fisubr
loope
rcl
call
jbe
ficom
ret
jmp
add
push
(bad)
sub
mov
jmp
xchg
ret
ud2
sub
je
frstor
push
xchg
dec
and
pop
stos
cli
add
lods
call
aam
aam
jge
push
push
add
hlt
xor
push
pop
ret
xchg
fist
ja
fmul
(bad)
loopne
xchg
or
mov
outs
popf
outs
cmps
mov
and
(bad)
fdivr
pop
bnd
mov
mov
sub
xchg
pop
jno
ret
rcr
xchg
push
mov
xor
mov
shr
popa
lods
pop
adc
sub
lea
scas
iret
cdq
or
aad
and
adc
sbb
dec
push
cmps
imul
lods
gs
inc
imul
out
cmp
xchg
push
jecxz
dec
jo
imul
sbb
push
or
scas
cmovae
and
ja
push
push
hlt
pusha
mov
les
mov
icebp
adc
cwde
sbb
add
cmps
jmp
inc
pop
pushf
lock
movs
or
test
sar
mov
(bad)
jecxz
and
xchg
mov
(bad)
leave
cmc
dec
ins
arpl
inc
xchg
punpckhbw
mov
(bad)
xor
sahf
mov
xchg
aam
icebp
xchg
jno
push
mov
xor
repz
inc
sub
mov
add
pusha
jnp
and
add
in
test
inc
add
rcr
or
jno
mov
mov
(bad)
pop
inc
aaa
sti
(bad)
jp
xchg
dec
test
xchg
ja
sub
pop
push
dec
imul
out
mov
cmp
les
pop
dec
outs
lock
push
xor
xor
(bad)
mov
ja
mov
xor
mov
(bad)
aad
pop
cmps
scas
push
into
out
mov
iret
add
leave
pop
in
add
xlat
inc
test
retf
inc
jle
test
xchg
xchg
(bad)
mov
scas
mov
pop
lods
jb
mov
fcomp
loopne
dec
push
aad
or
pop
cmps
jmp
push
push
mov
sub
inc
mov
add
sbb
and
imul
aam
icebp
repnz
ss
mov
les
pop
push
icebp
xor
sub
fcmovnu
cli
mov
js
fcomip
or
dec
lahf
mov
push
cdq
mov
pop
pop
ja
popf
push
mov
je
or
add
cmp
int3
pop
std
(bad)
push
cmp
pop
cmp
jecxz
sbb
sbb
jnp
ret
dec
in
shr
mov
or
push
and
cwde
xchg
aaa
inc
cmp
(bad)
movs
or
inc
xchg
push
mov
sar
sbb
cmp
sbb
(bad)
call
sbb
or
imul
jno
popf
cmps
fs
loopne
pop
inc
repz
push
xor
mov
bound
pop
aaa
or
cld
mov
ds
push
jmp
in
gs
ds
mov
(bad)
xchg
add
jge
mov
inc
add
int3
shl
mov
and
daa
mov
pop
push
outs
push
inc
xchg
xchg
out
imul
xor
mov
pop
outs
or
(bad)
stc
and
jne
sub
jmp
cmp
out
add
pand
mov
jl
rcr
or
scas
add
lods
ins
(bad)
aad
sbb
and
dec
into
stos
xchg
xlat
je
or
mov
xlat
mov
sbb
icebp
imul
adc
shl
ret
ror
jnp
jl
in
xor
jno
popf
mov
icebp
loope
jecxz
outs
sahf
mov
cmp
mov
jmp
movs
aaa
xor
dec
lahf
adc
rcr
rcl
repnz
add
cld
sub
add
xor
jb
xchg
ds
or
sar
lds
das
mov
in
inc
sub
jb
out
mov
adc
test
xor
mov
adc
sahf
lahf
push
sub
mov
or
cwde
and
or
cmovne
dec
sbb
pop
xchg
stos
repz
jno
pop
cmps
js
test
push
hlt
mov
movs
and
adc
xor
push
enter
outs
pop
mov
wbinvd
add
pop
into
movs
inc
fwait
mov
jg
xor
into
push
or
pop
inc
ret
mov
pop
mov
dec
xchg
aad
int
icebp
cmc
add
add
or
(bad)
leave
pop
adc
aaa
mov
cmps
cdq
fstp
pop
fiadd
xor
cmc
sbb
cli
out
lods
outs
fist
cmp
or
lds
mov
sbb
jmp
xchg
in
add
out
imul
push
mov
mov
ja
fnstcw
bound
(bad)
mov
inc
mov
test
pop
xor
inc
add
adc
cmp
pop
push
inc
test
sbb
movs
mov
sub
add
jne
dec
xchg
sbb
push
sub
jnp
std
mov
jns
add
pop
das
mov
mov
jnp
les
xchg
mov
sahf
dec
call
jmp
out
ss
pop
adc
jb
and
push
xchg
iret
mov
mov
mov
lea
cwde
and
mov
inc
pop
mov
int
adc
dec
cmp
ret
shr
inc
es
shl
cs
in
sub
dec
jle
clc
or
addr16
call
fidivr
fiadd
stos
dec
shl
or
pop
and
enter
in
stos
test
dec
dec
sub
sbb
pop
into
fucomi
jo
lds
dec
aad
mov
rcr
or
dec
mov
push
add
add
out
inc
ds
hlt
inc
ror
sub
pop
lahf
pop
jnp
call
movs
scas
daa
inc
xor
jmp
mov
dec
mov
xor
pop
sbb
inc
cs
inc
sbb
fbld
push
sub
sub
call
imul
int3
mov
pop
js
lahf
pop
jl
jnp
mov
mov
retf
rol
xchg
ins
aad
pop
jbe
and
(bad)
push
pop
fbld
and
enter
not
in
inc
push
pop
dec
cmc
mov
cld
cmp
clc
shl
data16
(bad)
dec
pop
and
push
jne
rol
fs
or
lods
sub
mov
mov
test
pusha
in
jg
inc
stos
and
retf
scas
mov
ds
cmp
scas
imul
lahf
arpl
fbld
sub
popf
adc
push
xor
cmp
aaa
fst
add
mov
sub
popf
xchg
sbb
cmp
push
cmp
push
mov
js
xchg
inc
test
sbb
test
nop
cmp
cmp
dec
sub
jp
cdq
out
loope
fsubrp
pop
adc
pushf
enter
jge
sbb
sahf
push
test
jecxz
je
jae
and
xchg
add
lds
mov
rol
and
call
lock
xor
or
shl
dec
jb
dec
mov
mov
cvtps2pd
mov
inc
mov
cs
add
test
rcl
jge
push
jmp
add
sub
pop
daa
push
sub
clc
jp
(bad)
jle
enter
lahf
xchg
push
or
les
dec
push
jbe
and
ins
dec
mov
shl
outs
rcl
mov
(bad)
int3
(bad)
repz
je
push
lahf
hlt
mov
push
mov
ds
jl
xor
ins
jnp
mov
cld
push
jb
cmp
pop
into
pop
sar
cmps
ret
loope
mov
or
sar
fisub
or
xor
dec
ret
mov
add
pop
ins
xor
ret
and
fsubr
cmc
retf
or
push
les
shl
inc
cmps
xchg
mov
repnz
or
mov
(bad)
or
test
jb
or
int3
and
jnp
adc
inc
not
add
pop
xchg
pop
and
cmp
pop
mov
loope
mov
lahf
(bad)
push
dec
pop
mov
bound
lods
mov
jno
imul
call
outs
adc
mov
mov
mov
(bad)
cli
push
arpl
nop
mov
xchg
mov
xchg
cmps
and
ds
leave
or
in
es
aam
out
je
xor
and
paddw
and
pop
outs
dec
pop
ins
cmps
dec
or
xor
bound
lock
dec
fstp
ins
jne
fnstcw
int3
push
rol
pop
cmp
loope
cs
adc
xor
mov
dec
pop
test
pop
sbb
test
ficomp
xor
stos
shr
outs
mov
mov
xor
aas
cli
andnps
das
push
fdiv
stc
or
xchg
repnz
and
(bad)
pushf
jg
jg
(bad)
pop
cmp
into
adc
mov
add
sar
lods
icebp
pop
sahf
push
(bad)
inc
xchg
aam
test
fiadd
rol
sbb
add
pop
stos
es
add
out
mov
and
(bad)
data16
jmp
(bad)
dec
pop
lock
or
mov
mov
dec
xlat
std
pop
cmp
mov
popa
pop
rcl
retf
out
push
add
loopne
cmp
mov
inc
push
push
sub
aaa
or
mov
dec
into
pop
jg
outs
lds
push
push
shl
push
cdq
sub
xor
(bad)
dec
cwde
push
jmp
les
add
and
jecxz
xor
retf
pop
mov
sub
arpl
pop
out
movs
jle
sbb
shr
(bad)
out
fild
mov
fsubr
les
mov
lods
outs
xchg
cld
xchg
lock
mov
in
adc
cmp
dec
dec
je
fild
daa
mov
leave
sub
fcmovbe
xor
sti
dec
enter
fdivr
movs
cmps
clc
out
lods
pusha
cli
(bad)
jmp
adc
les
push
imul
imul
xchg
xchg
xor
lea
mov
jo
mov
mov
mov
call
mov
nop
jns
push
add
fwait
jge
inc
fsub
mov
xor
push
jp
test
pop
aaa
pop
jne
jecxz
xchg
mov
or
stc
mov
fst
pop
cmp
vlddqu
cmc
out
loop
es
mov
ds
sub
sub
mov
or
cmp
ds
test
iret
hlt
out
push
cdq
lds
ficom
scas
pop
mov
std
sti
pop
cmp
sub
xchg
inc
int
mov
mov
cmp
push
ffree
pop
hlt
xchg
movs
and
cmp
add
scas
cwde
sti
mov
out
sahf
mov
pushf
out
inc
outs
ja
pop
test
dec
and
loope
in
mov
or
inc
daa
sbb
or
sub
ret
jle
jmp
pop
rol
out
add
mov
mov
inc
in
outs
sub
dec
arpl
mov
in
pop
mov
sub
cmp
xlat
add
imul
mov
arpl
xchg
and
cmove
call
mov
and
mov
les
bnd
and
and
and
fdivr
inc
jmp
or
xchg
mov
mov
inc
jns
ret
out
test
dec
ds
test
or
adc
xchg
push
xor
retf
jle
mov
inc
je
jns
std
add
inc
xchg
outs
cmp
scas
mov
(bad)
js
sub
mov
dec
xchg
push
inc
hlt
push
push
or
int3
cmps
sbb
in
pop
or
ds
enter
pop
add
es
mov
gs
add
inc
shr
mov
lahf
into
jns
pop
cmp
lods
xor
pop
in
(bad)
xlat
lock
dec
inc
add
xor
inc
out
hlt
jmp
adc
cmp
(bad)
dec
call
(bad)
iret
lahf
dec
push
(bad)
inc
or
adc
jge
(bad)
rol
sbb
mov
call
imul
jmp
dec
repnz
shl
das
pop
mov
in
xchg
data16
imul
dec
das
femms
mov
push
mov
int
jcxz
movs
cld
retf
pop
test
dec
ja
sub
cmp
cmp
push
add
arpl
jae
(bad)
adc
dec
imul
mov
lea
stos
jns
out
scas
push
xchg
fisubr
pandn
mov
sbb
in
repnz
ret
rol
or
jbe
(bad)
adc
rcr
and
in
loop
imul
out
xlat
mov
cmp
jo
mov
dec
outs
je
addr16
stc
bound
and
push
lea
dec
jge
popf
cli
aam
pop
pop
fbstp
(bad)
xchg
test
xchg
sar
add
sub
or
inc
into
test
mov
cmp
and
inc
test
jnp
sub
xor
dec
sbb
mov
mov
cmp
or
inc
fsubr
xor
ret
cmp
mov
inc
stos
and
cmp
adc
test
pop
mov
and
test
cmp
inc
and
adc
push
mov
mov
cld
fldenv
xchg
daa
outs
stc
pop
sbb
outs
popf
push
xchg
pop
push
cmp
in
mov
jo
arpl
xor
mov
sub
test
adc
mov
aam
inc
aam
jmp
rcr
mov
xlat
inc
jmp
mov
pusha
add
or
and
sbb
pop
lea
mov
push
fstp
push
les
pop
or
adc
outs
jmp
dec
jp
inc
stos
jp
outs
xor
cli
shl
js
mov
enter
dec
sbb
(bad)
mov
xor
pop
std
int3
xor
out
cmps
ret
icebp
jae
jle
jb
push
test
aam
test
pusha
aad
jae
retf
retf
xor
movs
in
rol
mov
inc
lahf
adc
xchg
inc
or
xor
fwait
jmp
ja
aaa
cmp
mov
sub
pusha
mov
sub
mov
call
dec
add
shl
stos
das
pop
dec
lods
fwait
cmp
xchg
pushf
inc
call
dec
out
jno
mov
stos
arpl
mov
imul
add
and
push
xor
loopne
call
and
ja
mov
neg
mov
or
add
jb
cmp
add
jmp
cmc
rcl
gs
cli
cmp
xor
push
sub
rol
popf
add
test
or
pop
sbb
push
jge
jmp
jmp
push
jne
test
movs
repz
lods
idiv
loop
mov
rcl
ds
and
xchg
(bad)
lock
ss
mov
push
movs
add
or
jno
sub
add
mov
sub
and
pop
jno
out
or
in
mov
inc
dec
pop
jb
retf
icebp
pop
xchg
(bad)
not
push
imul
fldenv
pop
ret
adc
(bad)
fld
push
pop
push
pop
ss
ret
ins
mov
sub
inc
or
adc
data16
imul
retf
fs
or
call
jle
jbe
jg
mov
int
or
pop
in
cli
aad
aam
jae
imul
cdq
bound
popa
push
in
mov
jge
sbb
push
cmp
adc
mov
inc
stos
sbb
jb
enter
pop
out
out
inc
fucom
add
out
cli
or
sbb
les
fld
repnz
(bad)
cmp
xchg
daa
cwde
jmp
(bad)
aas
sbb
(bad)
repnz
mov
repnz
pop
fbstp
jbe
jae
popf
jne
or
and
dec
popa
jecxz
sahf
or
cmp
bound
add
and
mov
es
loopne
xlat
push
pop
int3
adc
shl
mov
mov
xor
lods
in
jb
pop
dec
inc
std
cmp
nop
das
or
out
mov
std
loop
sahf
std
dec
mov
xchg
dec
and
movs
mov
es
movs
xadd
int
and
dec
rcr
rol
or
retf
js
in
ins
mov
movs
scas
fneni(8087
sbb
cmps
out
jb
fs
and
or
add
add
cli
fs
nop
pushf
jecxz
jp
jbe
mov
mov
repz
fimul
arpl
adc
(bad)
fisubr
scas
outs
dec
sbb
xor
push
dec
shl
out
popf
aad
outs
xor
iret
add
ss
pop
mov
sub
int
or
in
fsqrt
(bad)
sub
push
push
dec
fidiv
lods
sti
out
adc
cmc
stos
jmp
test
int
jg
(bad)
cmp
test
jge
sti
and
pop
or
test
push
mov
clc
jo
stos
int3
mov
adc
or
mov
lock
(bad)
jnp
fs
add
fld
add
add
test
es
retf
mov
aas
sbb
sbb
out
hlt
sub
push
int
mov
inc
popa
(bad)
and
mov
adc
mov
cmps
cmps
xor
cmp
mov
scas
pop
lea
(bad)
or
jg
fwait
je
and
sub
ficom
ret
xchg
jp
push
xor
lea
arpl
cld
sti
push
jae
aas
cmp
xchg
or
inc
cmp
int3
dec
mov
inc
int
or
imul
jg
pop
xor
add
ins
bound
enter
push
scas
jl
mov
inc
(bad)
jmp
and
shl
push
lea
rcr
aam
(bad)
ins
sbb
ret
test
inc
cwde
aam
cmps
pop
jecxz
mov
push
popf
adc
mov
push
pop
or
dec
dec
pop
xchg
mov
adc
dec
adc
mov
mov
lods
test
movs
dec
cmc
or
test
cmp
jnp
xor
pop
js
mov
imul
sub
cld
inc
sub
xchg
adc
cld
(bad)
inc
imul
jnp
out
retf
mov
jecxz
ss
add
mov
xor
clc
mov
mov
push
push
idiv
shl
push
pop
cld
mov
data16
jecxz
xlat
movs
retf
outs
iret
jne
aad
outs
mov
ror
lds
jbe
les
popf
call
sbb
push
cwde
bound
sub
mov
jmp
cdq
test
pop
pop
popf
pop
cmp
adc
loopne
stos
hlt
xor
dec
stos
adc
mov
xor
nop
in
scas
std
faddp
ftst
push
idiv
and
lahf
(bad)
sar
stos
add
or
add
icebp
in
frstor
xor
ror
pop
dec
cmp
cmps
xchg
rcl
mov
sti
daa
ds
xor
div
xchg
mov
add
lds
mov
shr
mov
loop
pop
inc
sahf
xor
shl
test
add
hlt
daa
push
aaa
movs
and
push
xchg
cs
xor
in
fisub
jl
mov
and
jge
cmp
adc
push
mov
int
push
mov
sub
sub
frstor
test
pop
imul
lea
aaa
sbb
repz
out
xor
test
add
inc
jo
or
imul
adc
sbb
xor
dec
stos
dec
xchg
aaa
fild
gs
enter
lahf
cmc
mov
fimul
pop
retf
cs
das
xchg
jns
pop
scas
mov
push
out
fwait
loop
jmp
cli
xor
mov
adc
ins
out
add
xchg
mov
movs
je
mov
xchg
jecxz
xor
inc
ins
mov
test
mov
or
lock
adc
leave
adc
lock
in
test
jmp
inc
mov
sbb
pop
push
movs
ror
cs
(bad)
jmp
mov
ins
outs
cmp
add
jl
movs
xor
pop
dec
xchg
test
cmp
in
retf
and
mov
cmc
dec
jg
xchg
sub
dec
out
int
out
sub
sti
cmp
sahf
mov
adc
add
or
and
xchg
adc
and
jle
popa
sub
nop
sbb
xchg
std
push
sbb
and
cmp
jg
ret
inc
jbe
sbb
retf
sbb
pop
sbb
test
push
ret
push
cmps
jbe
mov
inc
inc
adc
out
icebp
adc
test
mov
js
imul
pminsw
adc
mul
mov
repnz
mul
sub
adc
int
cdq
mov
lea
mov
lods
xchg
retf
jle
cmp
dec
jne
movs
add
icebp
lock
scas
mov
movs
daa
retf
lahf
test
je
lea
push
popa
repnz
xor
icebp
shr
fist
and
cmps
cmp
xor
pop
fistp
mov
xchg
fidivr
adc
xchg
cli
fidivr
retf
std
sub
xor
sbb
lods
pop
jg
jnp
sbb
inc
bound
les
jns
cli
ins
mov
dec
sub
ret
jg
pop
cmp
jne
mov
(bad)
push
adc
xchg
test
repz
data16
jnp
outs
jmp
cwde
gs
xlat
scas
scas
rcl
mov
mov
sub
retf
sub
test
je
ins
xor
sbb
cmc
add
and
pop
fwait
inc
loope
mov
(bad)
push
icebp
mov
push
cmp
push
dec
imul
mov
sbb
repnz
cmp
cs
push
aam
dec
sahf
adc
mov
xor
jmp
inc
cli
adc
fstp
xor
mov
lahf
mov
out
push
pusha
outs
add
out
mov
mov
dec
jl
jmp
mov
pop
movs
data16
fucomip
xor
popf
and
ret
xor
xchg
ins
mov
aas
je
or
lahf
adc
jo
inc
xchg
rcr
pop
movs
adc
lock
idiv
mov
pop
ins
inc
int3
out
mov
inc
add
lods
jns
lods
mov
and
push
test
(bad)
cmp
je
cmps
stos
js
nop
cmp
pop
xor
jp
pop
imul
les
aam
xor
(bad)
xor
or
inc
sub
xchg
retf
mov
test
repnz
cmp
adc
adc
daa
mov
clc
jmp
jecxz
ror
es
mov
mov
dec
call
fwait
sub
jns
mov
sub
fnstcw
inc
and
aas
iret
jbe
sbb
dec
test
enter
daa
(bad)
mov
daa
jl
jbe
fst
test
sbb
arpl
clc
push
mov
imul
dec
jne
jne
call
xchg
push
les
jne
(bad)
push
fild
or
mov
repnz
sahf
dec
add
ins
in
sbb
out
inc
sub
push
add
cmc
cmp
(bad)
enter
dec
push
call
xchg
mov
dec
dec
enter
add
sbb
loopne
push
add
sbb
inc
add
enter
mov
call
add
fimul
and
inc
sahf
clc
jle
mov
inc
outs
fs
push
push
lods
inc
cmp
jne
xchg
in
ds
pop
sbb
test
dec
jle
out
inc
or
inc
mov
das
sub
sbb
sbb
mov
xor
into
bnd
clc
dec
xlat
push
iret
xor
jb
xchg
jecxz
call
or
push
daa
retf
adc
jl
scas
push
sbb
sbb
stos
jl
sbb
call
push
sub
in
aam
mov
or
out
jle
pop
mov
pop
inc
push
(bad)
test
sbb
sub
popf
pop
pop
lahf
mov
adc
sub
add
mov
pop
fwait
pop
push
cwde
dec
mov
sbb
into
xor
jo
in
ret
push
loopne
sub
add
fsubr
sub
ret
cmp
int
repz
xchg
mov
mov
or
cmp
sub
dec
jge
xlat
daa
enter
jb
pop
cli
loop
mov
enter
or
mov
dec
fstp
or
pop
push
das
cmp
mov
push
(bad)
lea
sbb
xchg
pop
and
push
xchg
test
pop
mov
stos
pusha
movs
int
mov
out
xchg
pop
xchg
clc
xchg
add
jmp
icebp
ror
les
pop
popf
jae
jl
hlt
jae
inc
rol
xor
jne
push
movs
dec
aas
leave
push
ficomp
pop
ss
ins
dec
and
hlt
int
movs
call
xchg
scas
loop
jns
push
loope
leave
cmp
jo
add
jb
std
push
pop
outs
div
xchg
aam
xor
fwait
pop
jle
mov
movs
cwde
cmp
sbb
fiadd
xchg
in
aam
stc
and
out
push
test
mov
imul
inc
arpl
rcl
iret
(bad)
add
cmp
cwde
shl
movs
inc
inc
pop
sbb
jl
call
fnstenv
inc
call
mov
lods
pextrw
cdq
pop
inc
dec
imul
in
je
xor
xchg
repz
add
xchg
inc
mov
dec
gs
cwde
inc
les
retf
xchg
fdivr
adc
aas
loop
fmul
mov
jae
and
cli
jmp
(bad)
xlat
loopne
movs
mov
pop
leave
add
dec
test
loopne
rcr
adc
cmp
xchg
(bad)
mov
mov
bound
in
pop
cmps
mov
ds
inc
(bad)
popa
xchg
pusha
aaa
fs
ror
xor
aas
sub
inc
fst
lahf
cs
sbb
(bad)
inc
dec
lods
cmp
aad
xchg
movntq
enter
ficom
in
push
add
dec
push
add
sub
xchg
arpl
sahf
cmp
test
pop
stc
cmp
push
add
ins
mov
or
fdivp
push
adc
xchg
test
mul
cmps
fcomp
fnsave
xor
xor
inc
mul
xchg
mov
sub
push
push
pop
jbe
mov
mov
rol
mov
cld
imul
aad
jnp
cmp
sub
imul
and
sub
push
pop
mov
(bad)
adc
jp
pop
ins
cli
push
inc
xchg
inc
scas
xor
and
sub
fdiv
or
xor
jb
mov
test
pop
dec
nop
push
mov
cmp
cmp
mov
cs
jbe
sbb
add
sahf
enter
add
push
aaa
ret
mov
push
push
mov
stos
xchg
mov
out
or
push
in
xchg
int3
xchg
and
imul
shr
push
dec
adc
fist
outs
cmp
lahf
jb
das
or
iret
sbb
in
mov
inc
dec
lock
call
jb
push
xor
xor
clc
ror
xlat
xor
ret
xchg
rol
jbe
xor
jbe
repz
call
xchg
sqrtps
sbb
lds
cli
and
rol
jo
das
push
leave
dec
sbb
dec
jg
clc
mov
scas
scas
mov
sbb
sub
sbb
shr
aam
repnz
sbb
jl
inc
xchg
xor
mov
or
test
out
inc
push
pop
out
jae
scas
lods
mov
pushf
jb
sti
ins
and
aaa
xor
and
rep
cmp
or
push
mov
jne
pop
mov
sbb
push
xchg
iret
pop
fidivr
je
fld
inc
test
xchg
mov
nop
push
cmc
push
xchg
repz
sbb
scas
cmp
cmp
push
ins
in
inc
leave
(bad)
sub
in
push
cmp
in
ret
push
shl
push
mov
xor
xor
ds
jno
and
movs
test
dec
aaa
adc
jecxz
mov
ss
imul
or
mov
int3
push
in
ins
adc
(bad)
fistp
lock
and
mov
and
loope
and
stos
fsubr
test
dec
sub
push
pop
pop
mov
int3
test
mov
mov
xchg
jp
push
push
stos
mov
test
das
mov
jmp
cmp
mov
loopne
xor
arpl
add
ror
add
out
or
mov
test
inc
xchg
mov
test
sbb
enter
jo
adc
and
loop
dec
fld
sub
sub
jns
dec
push
mov
mov
dec
mov
xor
jnp
mov
mov
(bad)
mov
mov
add
dec
pop
daa
xchg
imul
cmps
mov
test
adc
or
mov
add
cwde
test
sub
cmp
outs
and
dec
(bad)
jmp
mov
das
push
(bad)
jne
imul
push
mov
mov
mov
or
inc
gs
aas
aaa
pop
inc
loop
cmc
xor
xor
push
jle
inc
push
stos
xchg
pop
stc
xor
and
gs
imul
sbb
xor
inc
pop
test
cmp
fidivr
scas
jge
cmp
(bad)
out
and
xor
js
stos
retf
mov
icebp
loope
sub
mov
push
xlat
iret
neg
mov
sub
lahf
arpl
or
in
cmp
(bad)
push
mov
push
pop
test
push
adc
ja
fwait
push
hlt
mov
ss
mov
mov
into
push
pop
sub
inc
fwait
pop
nop
lahf
frstor
pop
add
test
movs
and
sbb
push
xor
push
push
pop
sbb
adc
add
popa
add
jle
and
fisttp
jmp
or
mov
or
mov
xor
(bad)
xlat
in
mov
add
push
dec
test
bound
ja
ds
aam
aad
daa
fstp
lss
(bad)
out
adc
push
test
je
sbb
movs
imul
xchg
call
aas
mov
mov
mov
mov
mov
add
sbb
fwait
and
mov
sub
mov
(bad)
sbb
fcmovbe
jnp
mov
ins
add
mov
xchg
cmp
test
lods
test
mov
fldcw
cmp
call
add
pop
mov
bound
movs
mov
cmp
fist
dec
push
cmps
loope
add
stos
push
(bad)
sti
push
pop
cmps
in
cmp
xchg
mov
jmp
in
mov
cmp
out
fld
scas
mov
test
das
or
jno
pop
shl
mov
test
aam
test
xor
adc
dec
jno
sub
mov
ror
jno
mov
int
cmp
jl
enter
add
sbb
and
push
ss
jl
pushf
xor
fcom
js
lods
pop
jecxz
test
lahf
shr
(bad)
cmps
cmc
in
adc
lahf
sbb
sub
inc
xchg
ja
mov
mov
sbb
cmps
in
(bad)
dec
ffree
mov
imul
sub
jnp
add
mov
retf
clc
fstp
mov
mov
cld
aaa
mov
push
jae
xor
dec
sbb
pop
(bad)
sub
int
(bad)
movs
or
mov
inc
sar
outs
frstor
cmp
cdq
and
jae
pop
mov
cli
mov
xchg
loopne
mov
aaa
adc
popa
sub
adc
(bad)
aam
dec
adc
xchg
push
adc
ins
mov
sub
out
mov
ret
jecxz
int
je
add
outs
les
and
outs
es
cwde
or
mov
(bad)
retf
std
mov
ins
adc
test
and
sub
xchg
inc
test
mov
retf
sbb
loop
or
xchg
test
int3
lock
jmp
mov
repz
inc
sbb
(bad)
push
lock
sti
dec
mov
into
and
pop
push
mov
leave
jge
push
xor
aad
mov
and
or
adc
xor
inc
aas
mov
lods
cmc
pusha
inc
xchg
rcl
out
(bad)
stos
cmps
es
cmps
call
fisub
arpl
pop
push
push
std
fiadd
ins
cmp
jg
in
test
stc
adc
add
inc
ret
sub
fistp
push
xor
cmp
inc
jmp
loope
movs
mov
(bad)
retf
push
dec
fld
xchg
imul
inc
xor
rcr
pop
pop
and
test
inc
jns
push
mov
jnp
leave
cmp
rcr
loopne
cmp
loop
sbb
les
test
stos
int
out
imul
hlt
shl
jbe
sub
shl
adc
and
or
sbb
push
fyl2xp1
int3
mov
dec
stos
or
bswap
xor
jae
test
cli
add
mov
popa
inc
mov
mov
and
jo
mov
dec
outs
and
retf
(bad)
cld
in
ffreep
push
lea
fucomi
rep
or
aad
sub
sahf
lea
aad
jno
mov
xor
xchg
add
adc
cs
cmove
mov
je
ret
mov
imul
sbb
push
movs
lods
out
sti
cdq
mov
adc
popf
mov
xchg
mov
jbe
jae
pop
test
hlt
pop
xchg
mov
sub
shr
cli
mov
cwde
mov
dec
cli
fs
cmp
sub
js
aad
ss
outs
lock
out
loop
inc
adc
inc
sbb
dec
or
mov
push
xchg
repz
sbb
sbb
data16
pop
jge
or
shr
mov
fs
mov
add
adc
lock
daa
and
sbb
into
(bad)
xor
mov
call
aas
mov
das
sti
jns
fistp
sbb
xchg
and
leave
mov
adc
mov
mov
mov
mov
mov
xchg
xor
test
dec
lds
mov
mov
in
outs
mov
mov
pop
push
xor
call
out
ss
cmp
lea
inc
repz
pop
stos
xchg
shl
fild
loope
cs
xchg
retf
dec
sub
inc
dec
jl
pop
movs
xchg
call
pop
and
jg
mov
out
outs
dec
cmp
jecxz
shl
lods
xchg
fxch
and
outs
push
stc
popf
out
and
int
push
xchg
xchg
xor
mov
push
fcom
sbb
inc
ss
add
jp
mov
and
fisttp
sbb
and
out
imul
add
test
jns
ficom
cmp
bound
add
pop
in
add
or
loop
(bad)
xchg
adc
movs
fs
lsl
xchg
movs
inc
ret
leave
xor
sar
add
mov
mov
cdq
xchg
popf
mov
xor
cld
bound
loope
es
ins
add
pop
xor
(bad)
imul
(bad)
xor
sub
(bad)
loopne
repnz
test
sahf
cmps
fs
and
pushf
or
mov
int3
shl
sub
or
sbb
ss
sahf
mov
ja
lods
rol
cmp
pusha
xor
outs
pop
in
sbb
adc
jmp
pop
loop
(bad)
sbb
or
xor
jl
lods
out
retf
in
dec
xchg
retf
imul
lods
mov
not
xor
adc
push
daa
rcr
add
aad
sub
inc
out
mov
xchg
cmp
add
and
push
xor
cmp
inc
imul
sti
stc
sub
data16
xchg
fsub
fisubr
enter
sbb
adc
mov
jns
xchg
cli
cmp
lods
push
cwde
imul
call
test
test
cmp
fdiv
imul
in
mov
aad
add
popa
(bad)
or
clc
scas
daa
dec
sahf
imul
bound
nop
stos
aad
and
inc
sbb
imul
inc
movs
retf
lahf
jno
arpl
push
and
mov
pop
retf
rcl
adc
ins
sbb
sbb
and
leave
idiv
hlt
fdivr
inc
xor
sub
in
test
pusha
jg
jne
push
adc
bound
mov
repz
dec
xchg
xchg
mov
mov
inc
push
test
add
mov
add
fimul
scas
lea
lods
inc
fistp
cmp
and
dec
aam
js
and
lds
dec
sbb
mov
add
loop
stos
inc
push
adc
mov
movs
mov
cmp
mov
push
adc
test
sub
pop
xlat
lock
and
repz
int3
sub
cmp
inc
outs
hlt
jns
shl
in
jnp
addr16
cmps
mov
pushf
std
(bad)
sub
imul
repnz
cmps
lods
leave
test
mov
int
enter
daa
je
(bad)
inc
outs
inc
call
into
push
ja
xor
outs
pop
out
sbb
movzx
outs
mov
test
inc
or
sbb
cmp
sub
pop
inc
inc
jg
lods
jo
add
and
inc
xlat
sub
jno
pushf
cmp
xchg
lods
mov
sbb
xchg
inc
jge
out
in
xor
mov
fnstcw
or
jge
jno
dec
mov
iret
inc
inc
rcr
mov
ret
sub
fist
and
or
xchg
xchg
or
sub
xor
push
dec
icebp
ss
rep
out
jns
daa
xchg
scas
adc
jmp
cmp
sub
sar
adc
jle
mov
loop
adc
imul
xor
adc
mov
mov
adc
or
or
mov
adc
(bad)
xor
inc
pop
dec
sub
pop
rcr
outs
sub
adc
mov
ja
jp
inc
jmp
retf
jle
inc
inc
mov
out
sbb
push
cmc
pop
push
repnz
fdiv
xchg
fdiv
pop
retf
push
les
lea
xor
dec
cmps
in
mov
and
mov
push
jnp
das
xchg
pop
das
inc
in
adc
rcr
mov
pop
fdiv
outs
pop
add
pop
mov
and
lea
adc
imul
repnz
test
call
rol
aad
pop
sbb
adc
sbb
dec
das
jge
sbb
icebp
les
ss
xchg
lea
cmps
fist
inc
out
fnstcw
je
pop
(bad)
fs
in
adc
sub
rcl
dec
sub
xor
call
inc
xchg
dec
das
inc
jmp
(bad)
mov
xchg
scas
jg
pop
lods
mov
and
int
mov
outs
aam
or
lods
add
shl
jmp
test
push
cmp
sbb
leave
or
and
aad
or
ins
or
fmulp
stos
int3
pop
xor
into
ins
jmp
xor
mov
stos
mov
xor
add
lock
or
mov
test
test
and
mov
fisubr
jmp
outs
les
cmp
into
ins
adc
push
in
or
jo
movs
cld
repz
(bad)
int
movs
ja
pop
inc
mov
jbe
push
js
into
adc
repz
add
dec
repnz
jb
push
gs
pop
pop
cdq
sti
mov
sbb
(bad)
dec
aam
push
das
adc
aad
xor
outs
scas
retf
pop
mov
out
mov
push
xor
jmp
stc
nop
fwait
dec
ins
dec
jl
lods
ins
dec
out
push
push
std
scas
dec
push
adc
adc
cmp
xor
dec
cdq
rcl
and
addr16
mov
mov
int3
sbb
cmp
inc
imul
cmps
jge
mov
push
add
out
in
pop
inc
sbb
push
ja
cwde
add
push
int3
loope
sub
pop
dec
sub
xlat
repz
movs
pop
or
xchg
jl
retf
mov
outs
mov
mov
jae
retf
or
out
out
jg
and
popa
fcomp
and
lods
jg
mov
mov
mov
inc
lds
inc
cmc
push
popf
pop
enter
xchg
mov
mov
sub
into
xchg
in
cmp
mov
push
add
rcr
iret
aam
pop
sbb
jmp
inc
int3
sti
or
loope
xchg
out
and
dec
es
jmp
mov
push
sbb
sbb
idiv
dec
movs
cli
dec
inc
(bad)
in
dec
(bad)
pop
dec
mov
dec
fwait
cmps
xchg
mov
xchg
mov
stc
cwde
sar
push
lods
add
sub
mov
cmc
jmp
test
mov
(bad)
les
xor
xor
fstp
rcr
cmp
repnz
add
adc
aas
pop
fstp
jg
mov
jne
sub
fdivr
(bad)
mov
mov
mov
and
fidivr
push
clc
data16
xchg
retf
sbb
retf
clc
dec
xchg
out
imul
std
stos
xlat
sub
call
add
or
ins
jge
in
jecxz
movs
jmp
fnstcw
add
jno
rep
add
mov
sbb
dec
xchg
js
mov
mov
pop
std
icebp
mov
cmp
push
pop
call
xchg
mov
jge
(bad)
cdq
push
adc
std
add
mov
mov
sub
bound
ss
fistp
clc
xchg
push
sbb
cmp
std
ja
push
fidiv
xor
push
icebp
out
addr16
mov
and
add
jne
inc
add
ins
ja
push
cdq
retf
stos
sbb
lock
cs
retf
mov
mov
and
push
call
or
stos
push
and
les
fwait
dec
jne
push
sub
or
or
push
cwde
push
jns
sub
push
jge
mov
adc
in
fcom
rol
push
mov
xor
inc
(bad)
mov
jmp
add
mov
inc
scas
adc
and
push
cmp
add
imul
and
ss
iret
sar
aaa
pop
push
or
dec
or
mov
mov
pop
mov
div
test
mov
push
sbb
cmp
test
push
loope
mov
loope
pop
test
mov
outs
mov
lahf
and
das
mov
std
int3
mov
shl
(bad)
loopne
pop
cmp
jae
int3
in
mov
test
mov
imul
and
dec
mov
outs
(bad)
or
jae
push
and
xchg
mov
bound
les
cmp
mov
(bad)
or
and
mov
imul
lds
pop
push
mov
outs
xor
sbb
add
and
xchg
mov
mov
lock
mov
out
push
and
mov
mov
(bad)
or
(bad)
clc
sar
xor
test
jnp
ret
dec
push
int3
jp
leave
test
shl
je
add
and
mov
aam
cmp
(bad)
sub
sbb
lock
mov
mov
pushf
in
idiv
fild
push
adc
or
push
imul
out
aas
daa
rcl
sti
ror
ins
ds
jnp
sbb
fs
xlat
(bad)
hlt
rcl
in
mov
int
or
mov
push
add
loopne
xchg
fcomp
inc
and
cmp
cmp
inc
jbe
cli
clc
or
jo
xor
cmps
jg
xor
fs
sub
fsub
xchg
push
mov
jo
cmp
mov
jnp
imul
cmc
jg
pop
loop
add
shl
mov
(bad)
mov
je
loopne
push
lods
in
loope
mov
adc
pushf
inc
mov
mov
mov
(bad)
scas
sahf
clc
dec
pop
cmp
pop
inc
jbe
add
and
mov
and
or
lock
mov
lods
xchg
mov
pop
mov
ret
dec
mov
mov
sub
mov
cmps
cli
movs
or
cmp
mov
popf
mov
pushf
xor
shl
pop
loop
jecxz
mov
or
xor
or
dec
ret
push
cmp
mov
ror
ds
popa
pusha
outs
and
push
adc
fisttp
(bad)
loop
sub
outs
dec
fst
sub
jecxz
stc
fiadd
jle
loop
jl
sub
mov
sbb
repnz
push
popa
xchg
cmps
pop
push
mov
nop
mov
hlt
jecxz
jae
in
inc
jbe
pop
call
mov
inc
loopne
test
fisttp
or
dec
je
movs
aaa
aad
mov
mov
pop
pop
adc
sub
push
sbb
pushf
mov
mov
ins
mov
std
mov
push
push
cli
stc
js
mov
cmc
sbb
mov
std
popf
out
pop
adc
mov
in
popf
mov
mov
jge
mov
aaa
mov
popa
mov
lahf
inc
mov
ja
jb
pop
pop
add
push
sbb
and
fidivr
or
dec
push
ss
stc
xor
xchg
or
les
adc
jge
push
xor
mov
sbb
pop
repz
mov
push
inc
test
aaa
pop
sub
(bad)
int3
cmp
push
add
inc
stos
pop
xchg
xchg
sbb
sub
aas
xor
mov
rcr
lods
jge
mov
pop
repnz
inc
sbb
jo
sub
inc
daa
pusha
ss
add
or
pop
push
in
stc
jne
(bad)
pushf
pop
jecxz
rcr
pop
mov
cmp
mov
dec
ss
sub
adc
cmp
fstp
jae
dec
loopne
sbb
in
jl
inc
push
call
inc
mov
lock
xchg
enter
mov
pop
shr
xor
jmp
movs
or
xchg
cmp
jae
xchg
ds
cmp
xchg
cmp
sbb
jns
mov
add
js
jmp
xchg
icebp
iret
adc
mov
cmp
fdiv
xor
hlt
je
xor
inc
pop
in
dec
(bad)
and
add
mov
jne
loopne
ja
adc
add
pop
repnz
cdq
sahf
push
popa
sbb
test
test
or
xor
mov
(bad)
jg
sub
or
jg
aaa
cmc
mov
stc
lods
imul
fsubr
mov
jg
js
sbb
inc
repnz
ja
mov
fs
scas
call
xor
xchg
fidivr
stos
dec
jle
lods
cs
sbb
daa
xor
gs
lock
mov
jp
cdq
add
bound
adc
imul
cwde
scas
inc
push
jecxz
fs
xor
cmc
xor
popa
mov
ins
test
pop
cmps
sahf
(bad)
xor
mov
sbb
aas
popa
not
ins
pop
fdivr
and
mov
int
jae
xor
popa
sbb
jne
mov
in
sub
inc
add
push
sbb
ficom
inc
mov
push
pop
sub
mov
jns
retf
mov
inc
jl
sub
pop
mov
jmp
loop
test
icebp
je
mov
dec
add
retf
jge
sub
xor
mov
mov
xor
mov
clc
cmp
and
pop
and
rcr
dec
push
mov
mov
fadd
cld
sti
(bad)
jnp
pop
es
outs
jns
add
fiadd
jg
xchg
xor
aam
mov
loope
lea
ss
out
cs
fs
div
pop
test
xor
jb
(bad)
hlt
iret
xor
jmp
dec
xchg
stos
and
cmp
pop
mov
addr16
rcl
add
xchg
jae
xor
js
mov
cmp
mov
rol
jo
fs
shl
pop
sbb
mov
mov
out
aam
aaa
xchg
jle
ins
inc
xchg
adc
in
push
jmp
and
push
xlat
xchg
shl
pop
cmps
mov
or
dec
mov
xor
push
mov
dec
lock
jmp
clc
std
jle
push
sbb
mov
jne
mov
cmp
movs
call
loop
(bad)
hlt
pop
xchg
pop
enter
ds
mov
push
mov
push
(bad)
out
pop
imul
xchg
(bad)
cmp
xor
or
imul
and
leave
xchg
cwde
xchg
stos
cdq
add
mov
mov
loope
punpcklbw
popf
ja
cmp
fs
cs
popf
mov
mul
xor
aad
adc
pop
sbb
xlat
adc
mov
adc
dec
pop
call
mov
jecxz
and
mov
mov
cwde
or
or
enter
mov
inc
fld
pop
sbb
dec
xchg
in
pop
adc
mov
movs
addr16
shl
shl
xchg
call
mov
mov
aad
test
sub
inc
mov
cmps
imul
adc
add
jecxz
nop
movs
cmp
enter
xor
pushf
arpl
mov
or
jmp
fbld
mov
xchg
aaa
sub
jmp
(bad)
fistp
push
fisttp
adc
cmps
xchg
cmps
mov
and
(bad)
iret
jae
repz
cld
call
xchg
jg
test
inc
mov
(bad)
test
xor
enter
out
pop
jne
xor
inc
sub
jp
add
fldcw
pop
(bad)
call
mov
xchg
aam
push
cmp
shr
daa
cmc
imul
(bad)
popf
push
mov
add
cmp
sub
adc
mov
in
adc
dec
xor
xor
out
retf
xchg
and
xor
push
dec
or
xchg
and
fcmovnb
xchg
icebp
cmps
push
or
ret
pop
or
push
js
pusha
mov
outs
add
fs
idiv
ror
xor
cmp
jle
les
test
popa
sar
(bad)
sub
pop
stc
pop
loope
adc
pop
and
cmps
mov
mov
xchg
dec
cmp
dec
xchg
ret
xchg
shl
add
ret
test
push
ret
pop
js
sub
stos
sub
movs
xlat
cmp
push
test
mov
xor
push
jnp
not
mov
lds
dec
push
rcr
adc
dec
std
(bad)
out
sub
fdiv
and
cwde
(bad)
dec
push
or
xor
frstor
dec
(bad)
mov
aam
fs
clc
sbb
je
push
(bad)
jle
cmps
scas
in
loopne
aad
out
xchg
hlt
or
pop
in
xor
xor
mov
jb
xlat
lods
or
ds
in
jae
mov
ja
xchg
inc
or
popf
daa
test
ret
cmp
xchg
mov
adc
and
mov
retf
dec
cmps
loopne
cmps
ror
cwde
dec
bound
inc
fyl2x
jae
test
sub
retf
and
lods
push
daa
mov
(bad)
pop
adc
inc
jmp
dec
pop
jle
jb
adc
fsub
pushf
mov
aad
addr16
lea
pop
mov
stc
test
cmps
mov
xchg
sub
div
fisubr
and
mov
(bad)
test
in
and
scas
jno
mov
push
sahf
add
mov
je
and
xchg
sahf
or
inc
jo
pushf
and
add
jmp
mov
jge
ja
enter
jge
cmp
pop
mov
xor
cmps
xchg
inc
push
or
jno
in
mov
ror
push
pop
xlat
xor
mov
cmp
ret
ror
xor
es
mov
test
mov
inc
dec
push
loop
jo
adc
rcl
xor
sub
sub
sbb
sub
xchg
lods
imul
jnp
js
fwait
outs
sub
iret
xchg
repz
add
sub
aam
or
into
or
shl
cmp
cmps
(bad)
loope
test
outs
inc
xchg
push
retf
mov
les
xchg
sub
(bad)
xor
idiv
leave
sbb
fsub
lods
xchg
jmp
inc
aad
dec
call
icebp
dec
pop
repnz
(bad)
adc
dec
cld
xor
xchg
lods
sti
movs
inc
and
pop
fwait
int
add
jle
push
jo
fbld
pop
push
add
lock
repz
xchg
dec
mov
imul
pushf
popa
push
inc
mov
sub
sub
add
inc
and
jnp
mov
repz
mov
push
mov
imul
dec
out
ret
dec
int3
mov
pop
sar
pop
adc
or
stos
fsubr
(bad)
les
in
iret
ficomp
stc
push
or
rcl
movs
pop
aam
sbb
das
clc
xchg
cmc
dec
mov
pop
inc
push
ja
pop
retf
cmc
inc
lock
daa
cmp
aad
xor
sbb
adc
cmc
push
push
popf
xor
adc
push
sar
xchg
push
mov
arpl
popf
jg
(bad)
mov
mov
aad
leave
cdq
push
or
jmp
pop
scas
mov
clc
test
imul
ret
mov
pop
or
fidivr
sahf
jne
and
or
cmc
cmps
mov
fnstcw
mov
retf
jmp
retf
pusha
mov
add
mov
mov
inc
cwde
sbb
aam
adc
(bad)
ja
mov
stc
push
push
push
ds
and
ret
cwde
dec
dec
mov
stos
xor
repz
sub
(bad)
sub
pop
mov
mov
add
xor
into
lods
xor
rcr
aaa
lock
xchg
sbb
xor
and
mov
mov
imul
arpl
xchg
lds
xchg
ins
xchg
dec
(bad)
(bad)
sub
idiv
dec
stos
popa
scas
(bad)
(bad)
movs
jg
(bad)
inc
fimul
mov
mov
ss
lea
cmp
stos
fld
jae
mov
xor
mov
jge
sbb
ins
into
jecxz
je
fimul
loopne
dec
fs
push
and
dec
mov
pop
ss
push
xlat
(bad)
jnp
lea
ins
repnz
loop
xchg
dec
lds
leave
ret
xlat
pushf
xchg
push
outs
xchg
out
xchg
mov
inc
repz
lea
pop
out
mov
rcr
pop
in
adc
nop
push
jb
scas
mov
push
pop
rol
dec
mov
pop
xor
dec
out
imul
ins
mov
ds
dec
test
movs
push
fisubr
pop
mov
call
xor
sub
mov
and
fdiv
ins
xchg
mov
or
pop
xchg
mov
fs
ins
ds
dec
cmps
push
mov
jno
ficomp
test
gs
ret
in
jno
push
stos
xor
push
mov
mov
adc
dec
mov
xchg
inc
add
sub
les
(bad)
jmp
nop
mov
mov
data16
adc
dec
ss
pushf
adc
dec
ss
repz
jo
enter
int3
test
das
mov
sub
lahf
shl
jmp
ins
in
jle
pop
out
call
dec
test
bound
shl
jo
mov
addr16
pop
in
stos
adc
add
mov
arpl
cmc
push
dec
mov
(bad)
hlt
inc
loope
cdq
or
aas
sbb
iret
sar
sub
rcl
int3
icebp
xor
scas
xchg
add
or
pop
aam
bound
jo
xor
imul
dec
inc
jns
fst
out
pop
shl
dec
cmp
sbb
mov
outs
iret
retf
fnstsw
xchg
out
xor
aam
outs
iret
scas
xor
mov
jmp
not
(bad)
enter
adc
push
adc
mov
xor
les
enter
jbe
(bad)
cld
mov
dec
jl
sbb
jp
aas
cmp
hlt
les
or
pop
cwde
dec
push
repz
dec
mov
push
cmp
pop
xchg
(bad)
rcl
shl
push
push
sub
int3
mov
mov
push
dec
jp
xor
add
adc
pop
fnstenv
shr
sbb
sbb
xlat
out
cmp
jmp
in
sub
dec
add
lods
push
xchg
cmp
rcr
and
mov
sahf
outs
sbb
scas
(bad)
and
cmp
test
aad
retf
mov
arpl
stos
dec
xchg
mov
mov
xor
or
outs
and
imul
movs
inc
pop
mov
jmp
movs
xlat
mov
enter
jmp
shl
pop
ins
js
pop
dec
xchg
sbb
jns
movs
lds
push
hlt
xchg
fdiv
and
jp
jae
push
adc
add
and
inc
pop
iret
cmp
imul
push
jae
mov
repnz
fimul
cli
mov
ret
jae
cmp
jns
cmps
pop
icebp
ja
mov
fst
and
(bad)
(bad)
mov
adc
mov
mov
pop
imul
ror
xor
mov
movs
maskmovq
idiv
push
inc
retf
xor
mov
movs
xor
icebp
mov
sbb
fs
in
mov
dec
scas
and
mov
jne
xor
inc
retf
mov
cmp
in
xchg
push
dec
pop
inc
fwait
pop
sbb
or
adc
mov
xchg
imul
sub
add
mov
(bad)
dec
dec
int
js
outs
ja
sub
fcom
mov
and
data16
or
xor
mov
pusha
ja
inc
mov
loop
mov
jecxz
jle
pushf
and
pop
rcr
sub
or
frstor
xchg
pusha
xor
xor
mov
push
mov
std
sub
out
into
cs
repz
inc
push
push
loop
jo
push
cmp
sbb
or
jle
push
pop
(bad)
cmp
dec
adc
xchg
dec
xor
sbb
out
lods
or
mov
dec
adc
cwde
push
xor
pop
pop
push
dec
jl
and
(bad)
cwde
repnz
test
sub
shr
cmps
sbb
push
pop
sub
scas
push
and
imul
pop
xor
nop
nop
or
xchg
push
xor
arpl
dec
sbb
inc
pop
cmp
test
repnz
es
daa
sbb
inc
adc
movs
adc
int3
call
sahf
loop
repz
sbb
pop
ja
dec
cdq
mov
sub
ds
sbb
jle
xor
rcr
mov
ret
pop
rol
and
mov
jb
fstp
fcomp
fwait
push
mov
mov
mov
daa
mov
pop
cwde
test
test
pop
stos
jecxz
ins
mov
add
dec
push
inc
sar
mov
mov
mov
or
sbb
xor
(bad)
pushf
add
ror
dec
cmp
test
inc
pandn
push
call
out
cmp
je
jg
or
aam
push
clc
add
mov
loopne
sub
jae
xlat
inc
fldenv
adc
and
mov
sbb
cs
add
stos
out
cmp
mov
inc
and
push
and
push
jnp
into
call
aas
inc
call
scas
sbb
cmp
push
mov
out
xor
mov
mov
sar
and
ds
mov
xor
cli
adc
sahf
and
xchg
or
inc
fist
shl
cmp
jns
fcom
mov
aad
gs
or
add
lods
fs
aam
pop
sti
or
xchg
pop
cmp
xor
xor
stos
pop
and
jne
jb
mov
(bad)
pop
xchg
jmp
popa
push
inc
mov
dec
jo
imul
mov
jl
cmp
outs
sub
repnz
pop
mov
jbe
ret
pop
jmp
loopne
sti
loopne
sub
aad
and
cs
pop
xor
cmp
jne
cld
popf
shr
lahf
adc
outs
outs
loop
sbb
pop
fwait
mov
mov
popf
cmp
nop
sbb
mov
inc
std
xchg
mov
sub
xchg
and
mov
cld
adc
cmp
dec
cmp
fs
push
mov
sbb
xor
(bad)
adc
push
cmp
cwde
jnp
sar
xor
jns
hlt
pop
cmp
mov
dec
cmc
les
push
shr
pusha
test
push
sbb
mov
add
inc
jmp
loopne
sahf
push
cwde
mov
lahf
out
jae
inc
cmp
addr16
push
adc
je
in
xchg
rol
inc
add
sub
dec
imul
fidiv
lock
xor
xor
in
imul
jbe
jnp
lea
icebp
(bad)
fldenv
adc
jge
pop
mov
dec
jg
movs
or
pop
(bad)
adc
sbb
aas
pop
shl
repnz
mov
(bad)
fbld
out
jne
int
push
or
pop
mov
pop
movs
in
adc
shl
cdq
xchg
fucomp
mov
and
cmp
inc
sbb
cwde
push
mov
popf
mov
ret
dec
sbb
sub
not
or
inc
(bad)
xor
cmp
mov
lock
dec
push
cmp
adc
fisttp
push
and
xchg
cmp
jl
cmps
sub
jbe
xchg
mov
data16
push
es
test
arpl
cmc
jo
cmp
cmc
add
add
inc
push
xor
loopne
lds
sti
push
mov
leave
dec
fstp
stc
cmps
popa
add
(bad)
ror
in
cmp
ins
push
fadd
and
sar
push
mov
test
mov
fst
(bad)
(bad)
ss
(bad)
mov
xor
daa
adc
jb
push
iret
cwde
mov
cmp
pop
fwait
sub
or
mov
repnz
fnstsw
js
add
inc
in
dec
push
dec
fcomi
fs
cmps
and
repnz
jl
dec
bsf
cmc
int
aas
and
imul
loopne
cdq
jecxz
push
std
neg
adc
daa
stc
int3
pop
fs
in
pop
repnz
ss
std
or
ja
cmps
mov
lods
and
jbe
add
and
jnp
xor
mov
inc
loope
shl
xor
fprem
cmp
dec
push
mov
jecxz
retf
dec
(bad)
mov
ret
xor
cdq
retf
ss
mov
ffree
(bad)
aaa
inc
loopne
clc
std
test
xor
pop
pop
call
test
repz
retf
pop
dec
test
sub
mov
sahf
aad
cdq
inc
(bad)
push
mov
retf
adc
sbb
gs
inc
add
gs
call
aaa
pop
and
xchg
(bad)
loopne
aas
mov
sbb
mov
shl
ds
aam
mov
and
sub
push
repnz
push
outs
lds
test
pop
dec
cmp
cmps
lock
cmc
mov
in
enter
int3
mov
jmp
stos
jne
in
dec
cdq
les
fidivr
loope
lods
out
(bad)
fidivr
pop
iret
cmp
into
mov
mov
(bad)
push
fdivr
loop
and
aas
retf
ret
ja
lods
mov
lahf
iret
xor
xor
xor
xchg
lods
push
dec
aas
movs
push
sub
rol
rcl
test
sbb
mov
loop
cld
adc
nop
and
add
jp
cmp
and
mov
sub
xchg
push
lahf
xchg
(bad)
xor
cmp
mov
dec
mov
push
jno
scas
jnp
mov
xchg
call
mov
retf
sahf
(bad)
stos
sbb
push
pushf
ins
in
push
enter
daa
cmp
ret
jg
scas
daa
ins
lods
pop
pop
into
(bad)
leave
cwde
mov
mov
fbstp
cmp
push
aas
mov
pop
icebp
retf
xor
dec
add
mov
dec
mov
es
inc
jnp
dec
cmp
pop
push
mov
inc
outs
cwde
push
mov
xchg
and
push
neg
js
and
add
cli
enter
inc
fisub
popf
and
push
js
or
and
inc
inc
jmp
(bad)
out
mov
push
ins
loopne
imul
loopne
jnp
and
aaa
lods
mov
pusha
js
loopne
mov
cwde
mov
daa
dec
fisub
sub
std
call
cmps
or
icebp
pextrw
inc
das
les
jns
jge
rol
add
mov
sbb
xor
repnz
(bad)
clc
and
sub
xchg
div
push
mov
cmps
ins
std
jnp
cs
bound
sub
not
or
popw
in
stos
push
jp
mov
pop
push
aaa
mov
sar
mov
push
rcl
cmp
jo
and
pop
rcr
sbb
cld
pop
xchg
push
fs
div
ret
mov
mov
xor
je
repnz
movs
(bad)
jbe
lods
jne
sbb
and
imul
fwait
icebp
mov
ret
adc
ss
jb
aas
mov
mov
je
in
mov
add
popf
mov
out
push
mov
mov
popa
xor
pop
jl
or
add
loope
lock
push
fdiv
fsub
inc
popa
sbb
jp
jge
xchg
and
dec
cmp
sub
and
bound
mov
repz
leave
outs
ins
mov
pop
movs
mov
test
inc
call
jp
or
sub
and
repz
retf
data16
test
bound
xchg
cmp
or
bound
jnp
ror
sbb
retf
test
mov
adc
out
pushf
mov
nop
mov
cmp
sub
sub
add
lea
push
adc
aad
(bad)
shl
xchg
pop
or
fwait
inc
jle
enter
pop
mov
xor
sbb
mov
cmp
mov
div
popf
jl
inc
adc
xor
jmp
inc
mov
nop
sbb
push
inc
lahf
fidivr
sbb
mov
popf
test
xor
pop
or
retf
dec
pop
xchg
enter
and
pop
rcr
aaa
fist
outs
mov
(bad)
inc
add
cld
mov
mov
scas
jae
dec
mov
add
dec
xchg
test
jmp
mov
xchg
les
adc
push
mov
pop
les
and
loopne
and
adc
fistp
mov
push
jg
mov
popf
repnz
int3
fucomip
shl
mov
pop
push
mov
cmp
push
retf
aam
popf
inc
stc
cld
enter
stc
ja
cld
adc
mov
mov
add
cmp
ins
xor
jle
push
xor
inc
and
mov
in
movs
sti
rcr
inc
retf
lock
dec
add
shl
cdq
retf
out
sahf
inc
fstp
imul
dec
pop
sbb
call
jp
icebp
sub
cmps
lea
movs
je
sar
xchg
data16
jo
inc
js
sbb
mov
mov
sahf
or
sub
cmp
cmps
sub
mov
je
jae
lahf
loope
xlat
retf
test
inc
sub
pop
into
sbb
push
loope
xor
push
pop
mov
shl
jle
sub
jl
sahf
retf
pop
sbb
pushf
cmp
pop
pop
ror
pop
imul
shl
scas
jp
sbb
push
bound
imul
mov
adc
fisttp
imul
scas
cdq
mov
jp
lods
dec
xor
cli
mov
push
pushf
sub
rcr
cs
mov
and
xchg
sub
fistp
push
jae
mov
shr
jns
and
fadd
stc
push
repz
xchg
jmp
inc
push
in
xchg
fadd
mov
mov
(bad)
jmp
dec
jmp
ss
and
aaa
out
lods
inc
data16
(bad)
packuswb
cld
adc
push
iret
leave
inc
mov
out
xor
movs
pop
jno
xor
sbb
add
ss
data16
ins
aas
div
add
xchg
mov
inc
add
mov
les
repz
mov
arpl
mov
out
inc
mov
in
xlat
or
adc
pop
and
cmp
sbb
jge
out
inc
pop
lds
mov
std
pop
mov
retf
shl
shr
(bad)
ins
int3
push
call
xchg
sbb
call
ss
inc
ins
mov
std
or
jns
call
sub
sahf
xchg
jne
mov
fdivr
(bad)
(bad)
(bad)
sbb
jbe
mov
fwait
xor
sti
pop
retf
and
cmp
inc
jmp
test
loopne
mov
push
cmp
jl
mov
cmps
repnz
ds
jmp
stc
sub
imul
stc
sbb
mov
pop
adc
(bad)
out
xor
sub
iret
ret
sub
in
fbld
movs
lahf
daa
enter
pop
outs
jo
inc
pop
push
xor
mov
lea
lods
xchg
and
bound
mov
dec
scas
into
daa
test
sub
pop
xor
fadd
mov
(bad)
cmps
retf
les
xchg
pop
cs
fimul
sahf
xor
fs
mov
jb
leave
mov
mov
xlat
mov
(bad)
je
jmp
xor
rol
dec
sar
dec
inc
rcr
mov
fisubr
iret
jae
push
push
sbb
or
movs
push
fadd
out
jg
pushf
rcr
jb
cmp
jb
cmp
jae
into
js
aas
jbe
lock
push
fs
inc
xor
dec
gs
mov
mov
leave
psubusb
and
push
sub
jns
stc
jnp
(bad)
popf
stos
es
das
cld
dec
jl
icebp
lahf
sbb
or
movs
jp
pop
dec
lds
fisub
sub
out
xchg
jo
in
or
and
pop
test
dec
retf
dec
cmp
nop
sub
mov
mov
js
ins
or
xchg
stos
(bad)
jnp
and
inc
aad
push
sbb
pop
mov
or
push
icebp
outs
and
push
xchg
sub
sub
dec
mov
cmps
and
mov
popf
das
mov
iret
and
and
pop
movs
dec
popa
stos
dec
push
mov
add
mov
out
addr16
int
fdivr
sbb
inc
push
mov
iret
popa
add
mov
pop
mov
test
out
xchg
test
fisttp
jmp
pop
mov
xchg
add
aam
scas
js
mov
popa
dec
rcl
or
iret
dec
repnz
mov
or
add
or
scas
hlt
and
sar
push
push
out
arpl
into
out
call
pushf
out
mov
inc
hlt
mul
stc
adc
sub
inc
jmp
mov
pop
movs
daa
mov
into
test
mov
mov
ror
mov
cwde
test
and
dec
and
pop
js
or
repnz
movs
xchg
xor
lahf
outs
xchg
jae
adc
dec
mov
push
pop
and
pop
aaa
jge
cmp
neg
push
push
(bad)
out
aas
adc
xchg
ins
call
ret
pushfw
mov
dec
icebp
stos
jae
cmp
fiadd
adc
xchg
imul
retf
dec
cld
push
adc
mov
mov
fs
or
cli
jno
lahf
dec
push
inc
fist
cmps
mov
cwde
lods
cmp
inc
lods
call
inc
adc
xlat
xchg
fstp
ror
loope
pop
mov
call
fwait
cld
pop
mov
xor
cmp
push
adc
inc
adc
push
mov
xor
cld
or
add
mov
int3
pop
repz
mov
popa
push
jae
loopne
rol
outs
pusha
lds
fcomp
push
jae
gs
out
cld
xchg
(bad)
out
(bad)
or
mov
add
push
fisub
xchg
sar
mov
or
add
mov
adc
sahf
enter
das
aad
icebp
xchg
xor
scas
xor
leave
adc
pusha
pop
inc
jg
push
test
sahf
(bad)
jb
xor
pop
out
push
shl
pop
sub
in
movs
sbb
(bad)
es
aaa
pop
dec
in
popf
inc
loop
fnstsw
scas
cmp
xchg
cmp
cmp
arpl
dec
mov
mov
mov
dec
xchg
mov
sub
or
cs
scas
dec
mov
xchg
sub
pop
jmp
jp
mov
call
mov
leave
add
adc
fisttp
dec
add
ficom
inc
sub
mov
sar
out
and
(bad)
dec
adc
sahf
ins
sbb
jge
mov
xor
or
mov
and
movs
inc
cwde
xor
into
xor
hlt
sub
adc
mov
scas
outs
vcmpeqps
add
fadd
jmp
cdq
iret
pop
xchg
jl
xchg
mov
inc
fwait
div
push
push
and
or
mov
mov
jmp
bound
inc
sbb
into
test
test
add
aam
dec
push
pop
repnz
mov
inc
pop
outs
popa
add
data16
cmp
cdq
popf
repnz
arpl
lods
adc
fimul
and
and
cli
addr16
cmc
jae
loop
push
pop
rol
pop
add
gs
lds
fmul
cmps
push
xchg
xchg
mov
movs
sub
and
enter
popa
pushf
xchg
pop
dec
pop
int3
inc
xchg
mov
mov
or
(bad)
arpl
lods
mov
inc
mov
call
fwait
inc
rcr
in
shr
sub
sbb
(bad)
pop
mov
dec
aad
je
pushf
pop
lds
jecxz
cwde
cdq
sbb
inc
add
imul
cmp
fist
and
inc
lods
inc
fistp
shl
mov
or
inc
push
into
add
or
out
fbld
aas
fsub
pop
pop
call
pop
pop
or
or
ins
jmp
inc
js
js
mov
xchg
mov
rcl
xor
into
adc
xor
pop
xor
xchg
pushf
loope
xor
loop
or
pop
fcomp
mov
jp
sbb
call
mov
jecxz
retf
xchg
jl
cmp
icebp
cs
push
ins
clc
sub
mov
arpl
in
and
call
push
lea
movs
nop
test
push
mov
retf
dec
and
fist
jl
mov
adc
ret
mov
or
je
in
jbe
xchg
imul
test
repz
pushf
pop
fs
ds
(bad)
jnp
daa
inc
mov
pop
inc
rol
leave
and
das
ja
push
mov
fwait
sub
outs
das
stos
push
inc
out
ds
pop
xor
jecxz
mov
out
mov
das
xor
mov
mov
arpl
loop
pop
dec
xor
fsubr
in
cmp
lock
cmp
dec
xchg
pop
bt
mov
movs
and
fist
jo
xchg
stos
and
pop
cmp
xchg
movs
and
fnstsw
cmp
nop
div
(bad)
inc
outs
jecxz
fld
or
cmp
jmp
mov
push
idiv
adc
int
shl
or
pop
dec
mov
daa
mov
iret
and
ror
js
cwde
mov
pop
xlat
(bad)
fisttp
pop
pop
jp
adc
jmp
or
pop
pop
inc
and
sub
shl
fidiv
mov
shl
xor
daa
fisttp
fnsave
(bad)
daa
xchg
ret
aad
inc
pop
xor
xor
push
loop
ds
pop
call
jbe
cmc
mov
shr
xor
stc
push
cli
dec
add
adc
adc
pop
sub
inc
mov
test
lea
ss
frstor
xor
loope
xchg
adc
or
mov
scas
lods
sub
ins
int3
push
jae
dec
ror
sub
outs
adc
outs
sbb
or
mov
scas
adc
fsubr
push
adc
pop
xor
add
movaps
cwde
mov
mov
dec
inc
mov
and
jge
or
out
lods
ins
movs
mov
pop
out
lea
push
fidivr
hlt
mov
adc
std
mov
fild
jae
dec
rcl
arpl
fsubr
sub
and
cmp
add
shl
mov
pop
movs
adc
or
mov
sti
xor
sub
jne
icebp
icebp
ret
mov
or
dec
(bad)
xor
xchg
xor
pop
(bad)
das
sbb
hlt
(bad)
push
cmps
sbb
mov
dec
cwde
(bad)
hlt
mov
cmp
jo
jo
cmp
add
mov
dec
test
or
mov
xchg
mov
jns
movs
(bad)
daa
fisubr
shl
pop
loope
pop
push
xchg
lahf
fs
fcmovnb
fild
(bad)
jmp
imul
scas
shl
in
jne
jmp
jbe
xchg
fistp
repz
in
dec
cmc
in
or
add
call
ds
sbb
pop
int3
xlat
test
jp
out
call
pusha
inc
cli
imul
clc
iret
cmp
not
mov
sbb
bswap
cwde
xor
out
fst
adc
push
jecxz
(bad)
out
mov
cmp
push
cdq
hlt
push
loop
xchg
scas
je
push
xchg
jae
xchg
es
popa
or
hlt
add
dec
stos
push
fidiv
jle
sub
lods
mov
test
ja
cld
sbb
call
push
inc
mov
aam
mov
outs
cmps
cmps
adc
test
stc
push
jg
jle
push
call
sbb
cs
movs
mov
or
ds
push
cmp
rcr
std
inc
sar
cdq
and
dec
inc
(bad)
call
fisttp
fstp
adc
xlat
xchg
call
into
mov
jo
push
std
mov
push
stos
push
xor
ret
popa
add
je
pop
nop
ins
ds
popf
pop
and
les
jne
jge
pop
sbb
ds
mov
into
test
daa
xchg
pop
sbb
jae
aad
loop
xchg
cdq
and
loopne
sbb
jns
xchg
aaa
aas
push
dec
sub
fidiv
ins
ds
xchg
mov
lea
test
popa
ror
pop
pop
jno
and
mov
fld
cmps
ret
sti
sub
jmp
push
loopne
in
or
ins
jb
fwait
cmps
mov
mov
or
mov
in
mov
daa
inc
and
add
cli
cmp
and
test
or
push
mov
dec
stos
test
mov
push
mov
dec
pop
or
sahf
mov
xor
stos
popa
jge
ins
add
nop
mov
and
test
call
stos
push
(bad)
xchg
xchg
pushf
(bad)
sbb
mov
push
xlat
fimul
xchg
rol
(bad)
cmps
adc
xorps
mov
in
fadd
cwde
test
sbb
push
jp
cmp
and
stc
sbb
adc
xchg
xchg
jmp
mov
cdq
add
and
dec
xor
retf
lock
ficom
arpl
xchg
(bad)
and
in
iret
mov
sub
movs
or
lods
imul
xchg
pop
sbb
cmps
out
jb
pop
ret
vpmaddwd
mov
shl
or
test
int3
pop
das
mov
sbb
mov
popf
lods
shr
cli
adc
xchg
dec
ret
mov
daa
rcr
xchg
inc
jb
sahf
jmp
jne
mov
test
push
fdivr
arpl
(bad)
mov
mov
xor
pop
aas
and
out
xor
mov
inc
cmp
orps
add
jb
sub
fstp
and
inc
pop
lods
loope
movs
je
fadd
dec
retf
push
mov
loopne
and
ret
nop
ja
xchg
movs
push
fdiv
in
mov
mov
xor
jno
mov
pop
sbb
xchg
fiadd
pop
pusha
stos
fsub
push
std
push
sbb
test
sub
mov
rcr
rcl
pop
pop
push
fwait
loope
xlat
out
(bad)
dec
adc
mov
xchg
repz
inc
xor
jnp
call
xchg
mov
icebp
add
add
daa
dec
pop
cmp
fldcw
movs
or
jno
(bad)
ret
sbb
cmp
push
cmp
outs
adc
inc
aam
pop
shr
mov
(bad)
mov
inc
nop
mov
stc
gs
test
cmps
jmp
repnz
sub
xchg
imul
mov
cs
(bad)
out
leave
mov
adc
xor
loop
sub
and
out
inc
mov
cmps
pop
mov
cmp
sbb
ins
sbb
fs
adc
lahf
retf
nop
sti
fs
or
cmps
loop
stos
scas
sbb
sbb
mov
test
dec
push
or
jge
mov
shl
(bad)
cld
lea
xor
imul
imul
inc
mov
rcl
loopne
jns
sbb
push
fild
xchg
sbb
pop
(bad)
call
(bad)
cwde
stos
pop
(bad)
cmps
cld
jns
repz
adc
mov
in
int
stc
dec
outs
mov
push
movs
sub
xor
inc
jle
test
daa
cmp
outs
mov
retf
movs
push
sahf
fwait
mov
(bad)
or
(bad)
mov
jecxz
mov
xchg
jge
out
scas
pop
shl
cdq
imul
out
push
fnstsw
fdiv
xchg
jb
cwde
or
stc
imul
icebp
cmp
mov
ins
adc
push
jbe
inc
xchg
sub
je
enter
xor
ret
cmp
cdq
pop
xor
in
js
popf
inc
and
or
sub
inc
dec
dec
ror
mov
je
ins
mov
je
das
scas
stos
mov
cwde
or
outs
pop
jne
mov
xor
jne
imul
pop
cwde
add
inc
and
add
push
mul
nop
pop
push
cmc
sub
inc
inc
xor
aad
add
cmp
bnd
mov
push
or
push
mov
adc
pusha
sti
pop
imul
mov
jne
mov
sub
push
dec
lods
mov
push
xchg
jp
xchg
inc
inc
retf
ins
fs
out
sar
popf
cmc
stos
xlat
and
dec
aad
(bad)
imul
sub
sbb
pop
jno
dec
mov
add
push
push
xor
dec
add
push
outs
aam
cmps
push
imul
jg
sti
xchg
hlt
out
cmp
retf
push
int3
pushf
mov
jg
dec
scas
test
sub
hlt
mov
mov
or
je
dec
cmp
or
cmc
sub
(bad)
jmp
div
out
dec
lds
movs
cld
sub
adc
ins
mov
fisttp
push
add
jge
gs
loop
sbb
cdq
test
or
jmp
jge
jle
pop
imul
movs
mov
sbb
sub
push
fistp
xchg
gs
jl
dec
pop
je
xchg
sbb
dec
cmps
dec
or
xor
es
dec
in
sub
arpl
inc
mov
in
call
jmp
jnp
loope
pop
inc
popf
into
(bad)
aaa
jbe
(bad)
mov
je
sti
aad
(bad)
pop
das
mov
ja
int
xlat
call
pop
cmp
mov
cs
xor
pop
out
mov
sbb
jmp
nop
pushf
jno
jne
mov
shr
and
cwde
jge
mov
mov
push
jae
jl
cwde
icebp
outs
pushf
and
in
mov
mov
sbb
nop
or
xchg
adc
mov
jmp
cmp
xchg
cmp
movs
std
in
inc
sub
sub
xchg
add
imul
cmp
test
sar
in
dec
sub
push
jae
dec
mov
stos
cmp
jo
mov
dec
hlt
cli
xchg
fistp
sub
fwait
adc
dec
mov
fwait
idiv
mov
xchg
sub
out
mov
xchg
mov
leave
hlt
jae
leave
or
add
jle
push
jmp
push
mov
stc
dec
push
mov
fild
jno
mov
dec
in
rcl
ret
aad
retf
push
aas
sbb
call
stc
sub
xor
ficom
push
or
cmp
aad
je
ins
xchg
adc
fdiv
gs
xchg
fcmovnb
mov
sub
nop
repnz
imul
inc
je
xor
test
jl
push
enter
out
in
adc
dec
xchg
sub
movs
movs
daa
inc
mov
push
in
dec
cli
aam
loopne
add
std
push
ins
ja
call
cld
in
jl
in
jle
push
mov
add
lahf
pusha
clc
adc
popf
stos
inc
mov
cmp
ins
ror
add
dec
dec
add
or
fsubr
in
jbe
adc
jge
mov
pop
fcmovnu
push
mov
ret
call
sub
jecxz
xlat
xchg
ins
cwde
push
jbe
repz
inc
inc
inc
lods
push
clc
cpuid
out
jmp
xor
cmp
imul
mov
clc
dec
or
into
call
(bad)
pop
xor
mov
cmc
icebp
popa
jnp
sub
cld
(bad)
daa
int
ins
push
jo
xor
mov
sbb
jp
jl
lds
push
repnz
xor
mov
xchg
xor
stos
pop
out
add
push
hlt
and
mov
jne
push
cmps
and
shl
cdq
pop
push
push
rcr
xchg
aas
sbb
xchg
and
outs
mov
pop
in
test
(bad)
out
dec
inc
xor
xchg
jne
pop
enter
jle
iret
aad
mov
addr16
mov
adc
cld
mov
enter
stc
test
sub
mov
in
outs
movs
or
stos
cmp
lea
bound
int3
jle
mov
lods
cld
cdq
dec
sbb
add
jno
sbb
lds
daa
ss
test
cmp
retf
jl
outs
sahf
adc
pop
loopne
repnz
enter
leave
ret
ja
test
arpl
call
imul
(bad)
shl
imul
add
cmp
rcl
lods
xor
and
xor
pop
or
jb
sub
mov
cmc
jp
cli
sub
fwait
das
push
gs
scas
stos
mov
leave
mov
pop
sub
mov
out
sub
and
jge
es
dec
lahf
imul
fwait
int
adc
sbb
retf
shl
mov
push
cmp
cmc
fild
imul
(bad)
repz
mov
adc
xor
sbb
outs
call
pop
call
loop
pop
je
cmp
in
in
dec
cmp
mov
inc
stc
ins
cdq
push
dec
in
test
sahf
mov
mov
mov
ins
inc
xchg
jp
sar
lea
rcr
or
add
iret
cli
loope
xchg
xor
jge
xlat
push
retf
jle
(bad)
mov
popf
retf
jmp
cmp
ins
les
sub
fdivr
dec
mov
js
push
sbb
jge
add
dec
jmp
xchg
imul
sbb
fxch
sub
test
add
and
repnz
add
jg
xor
dec
inc
xor
aas
loop
xor
push
scas
adc
in
mov
cdq
cmp
cmc
pop
and
xchg
in
mov
call
cmove
jecxz
fdivr
gs
dec
adc
fild
test
aaa
(bad)
sbb
out
or
xchg
mov
xchg
pop
cmc
scas
mov
rcr
adc
or
mov
js
inc
pop
cmp
shl
repnz
sti
movhps
sbb
inc
or
pop
and
sqrtps
stos
mov
(bad)
push
mov
es
test
xchg
mov
stos
or
jae
xchg
and
push
cs
repz
(bad)
mov
pusha
jge
add
out
test
dec
(bad)
lods
or
in
and
add
je
daa
push
adc
int
test
loopne
xor
mov
imul
leave
out
push
aas
sti
sub
daa
mov
lds
xchg
and
cmps
cmps
jle
inc
popa
xor
mov
mov
dec
test
cs
pop
lods
rcpps
stos
push
mov
pop
(bad)
cmps
inc
sbb
popa
adc
adc
cmp
xchg
xchg
scas
inc
sbb
xor
inc
sahf
sti
(bad)
push
or
jnp
mov
sub
inc
mov
or
test
aas
cmp
jmp
jne
in
and
ins
shr
push
adc
adc
pop
inc
repnz
xlat
jecxz
jl
dec
lock
aas
(bad)
rcr
adc
aam
(bad)
sub
hlt
inc
fistp
loopne
js
xlat
mul
mov
imul
dec
cmps
sbb
mov
pop
getsec
add
call
sbb
bound
and
cwde
or
(bad)
js
pop
jl
lock
push
mov
jbe
jg
mov
adc
pusha
jp
fwait
dec
push
popf
cmp
adc
in
imul
xchg
lods
aas
cmp
gs
ret
bound
ret
jl
mov
hlt
fstp
leave
je
mov
lds
sub
adc
call
mov
pusha
jo
in
sub
retf
sbb
adc
mov
rcr
xchg
and
ja
ds
ins
jns
ss
cmp
pusha
int
dec
adc
test
sub
mov
out
ins
inc
xchg
rcl
mov
mov
xchg
shl
jo
fild
xor
inc
sub
js
aad
in
call
pop
or
gs
pop
mov
cli
out
push
xchg
aad
ja
mov
dec
pop
popf
mov
push
push
xchg
jne
stos
dec
cmps
rcr
js
jmp
enter
pop
in
cmp
ja
retf
and
pop
stc
retf
shl
mov
pop
in
push
xchg
mov
inc
repnz
jne
push
jmp
sbb
es
sub
leave
sbb
cmp
(bad)
inc
das
add
mov
cmp
ficom
aaa
jno
jp
mov
stos
push
addr16
or
frstpm(287
movs
aas
scas
call
sub
retf
test
and
test
fstp
scas
sbb
aad
int3
push
cmp
mov
or
in
or
xchg
sbb
pop
lahf
jg
loop
and
push
push
sbb
rol
scas
xchg
pop
stos
test
mov
mov
cld
dec
push
inc
sbb
or
xor
jl
movs
and
sbb
dec
test
or
in
push
pop
movs
push
pop
mov
mov
nop
sbb
push
adc
mov
(bad)
mov
lods
mov
mov
jae
jnp
mov
inc
rcl
fidivr
(bad)
enter
adc
out
stos
popf
fild
nop
jae
cmp
sbb
jmp
and
retf
cld
mov
(bad)
or
inc
jl
inc
dec
mov
jnp
push
out
dec
dec
cli
adc
dec
pop
popa
or
arpl
pop
and
push
shl
jle
cwd
aas
sub
sub
adc
out
in
and
ins
xor
pushf
daa
icebp
add
das
jno
lods
(bad)
jg
ret
xchg
sub
scas
(bad)
(bad)
(bad)
lahf
stos
popa
and
std
repz
(bad)
ret
aas
jecxz
and
stos
iret
or
mov
pop
ja
(bad)
or
leave
or
mov
pusha
mov
shl
pop
mov
xchg
sub
mov
leave
pop
and
adc
mov
cmp
hlt
repnz
sbb
popf
add
(bad)
in
(bad)
sub
mov
sahf
cmp
rcl
addr16
jmp
gs
std
data16
and
jp
cmp
push
push
cmp
pop
jl
mov
fnstsw
ds
push
or
mov
push
jne
sub
nop
jne
pop
dec
imul
and
jecxz
jo
scas
mov
cmp
pop
mov
test
jns
xchg
sub
push
or
push
enter
shr
xor
mov
lea
jne
jl
fisttp
add
jns
call
(bad)
je
adc
repz
or
leave
push
jmp
scas
push
mov
adc
repnz
jmp
call
jge
inc
mov
fmulp
xor
xor
xchg
pop
retf
sub
sbb
and
out
xor
mov
imul
int3
test
sar
mov
cmp
push
xor
test
ret
popf
ins
in
push
sahf
pop
and
jmp
cmp
dec
xor
test
pop
mov
mov
imul
jecxz
sub
mov
jmp
jno
fld
stos
sub
add
movs
and
mul
push
pop
test
jnp
add
inc
pop
xchg
sbb
xchg
and
lea
push
xchg
sbb
pop
icebp
mov
aaa
jmp
(bad)
pop
ja
in
or
add
mov
and
sbb
in
stos
add
inc
push
adc
mov
pop
rcl
stc
sbb
add
cmp
call
shl
pop
int3
cld
xor
pop
test
call
lods
pop
push
movs
aas
mov
and
pop
xchg
adc
mov
jle
or
fwait
ds
stos
fs
rol
js
in
mov
xor
in
jle
mov
mov
push
(bad)
pop
sahf
dec
add
sbb
gs
xor
dec
(bad)
pop
push
(bad)
jle
pop
push
cdq
into
popf
std
adc
pop
push
repz
push
or
in
adc
scas
mov
sbb
xor
icebp
(bad)
push
add
dec
ret
xor
in
ins
outs
psrlq
add
in
mov
outs
inc
enter
mov
lea
lahf
push
ins
hlt
(bad)
or
cmps
jecxz
les
addr16
out
int3
retf
imul
pop
cs
jo
icebp
push
push
lods
lods
jnp
loop
loope
out
test
push
adc
push
movs
push
test
or
push
xor
or
cmp
push
fsub
push
jmp
xor
dec
pusha
cmp
idiv
fdiv
and
lock
jb
call
pushf
(bad)
nop
push
cmp
setnp
mov
adc
cmc
mov
mov
hlt
mov
jo
sti
fsub
(bad)
and
das
mov
aad
add
loope
in
pop
or
int3
lock
aam
sbb
cmps
or
jae
je
pop
jmp
pop
add
adc
pop
sub
scas
push
hlt
jl
scas
push
je
test
rcl
hlt
lahf
arpl
addr16
jae
ins
push
mov
sahf
pop
ja
pop
mov
sub
add
push
(bad)
jnp
and
push
mov
mov
push
imul
gs
jb
sti
cld
xor
mov
push
and
and
add
push
(bad)
mov
popf
js
mov
xchg
add
pop
dec
es
popa
(bad)
push
test
xor
sub
mov
and
adc
outs
pop
out
(bad)
fcom
pop
int
and
mov
jb
je
mov
aaa
push
jmp
jmp
dec
pop
push
xchg
dec
cmps
or
lds
push
or
nop
int3
xchg
mov
xchg
adc
xchg
mov
jns
xchg
shl
pop
dec
imul
scas
je
dec
pop
jbe
xchg
outs
sub
pop
adc
sub
mov
cli
jl
xor
sub
gs
pop
(bad)
and
push
pop
test
out
jle
add
cmp
cmp
adc
les
cmp
xchg
xor
or
nop
stc
fist
xchg
outs
adc
add
lock
mov
mov
movs
adc
adc
out
addr16
addr16
ds
mov
inc
dec
nop
nop
sbb
xchg
push
xlat
hlt
pop
xor
movaps
mov
std
lahf
cld
call
cdq
cmp
mov
jnp
int3
in
sub
jmp
test
jmp
cmp
ror
xchg
push
push
(bad)
popa
retf
aam
stc
icebp
pop
cli
rcl
fadd
scas
hlt
clc
lea
push
jl
and
or
nop
out
xchg
rcl
fst
leave
cs
pop
jle
daa
cmp
imul
aad
adc
aaa
add
xor
xchg
bound
mov
jmp
and
xor
push
mov
ss
outs
mov
xor
jae
loop
outs
fisub
outs
adc
and
push
ins
cmp
dec
out
clc
mov
inc
or
mov
cmc
jle
jbe
dec
xchg
ja
sub
mov
mov
shl
dec
xchg
mov
lds
push
mov
cmp
ficom
test
sub
jo
loopne
mov
inc
ins
jle
mov
and
pop
inc
xor
arpl
fild
inc
cmp
jnp
dec
xchg
adc
mov
lea
push
out
and
aad
push
test
jbe
xchg
xchg
jl
mov
sub
adc
das
cld
xchg
cmp
bound
inc
sbb
xchg
and
test
out
loop
(bad)
and
loop
or
sbb
jno
aad
hlt
(bad)
(bad)
(bad)
je
dec
sub
scas
sub
shr
push
inc
ret
test
std
jl
inc
xchg
aas
pop
xor
nop
retf
add
into
(bad)
inc
out
xchg
cli
mov
popa
adc
outs
adc
inc
jnp
cld
in
sub
(bad)
lea
push
sbb
test
mov
mov
sahf
popa
jae
adc
push
sub
add
imul
mov
jo
pop
cmovs
and
push
add
jne
fcom
jle
lods
test
mov
mov
jns
mov
stos
nop
mov
xchg
and
xlat
push
mov
xchg
and
mov
jns
lock
enter
stc
gs
js
dec
aad
cmp
mov
cmps
xor
enter
(bad)
out
cmp
xor
mov
sub
mov
xor
jae
jb
xchg
or
daa
and
jb
scas
or
push
pusha
push
stos
movs
cmp
xchg
or
sbb
mov
xchg
add
and
mov
dec
and
pushf
clc
lods
sbb
pop
sbb
popa
pop
inc
pushf
mov
out
aaa
jp
icebp
in
adc
sub
push
and
push
dec
mov
adc
stos
popa
xchg
push
xchg
jp
cmp
cli
scas
aaa
sbb
xor
jmp
sbb
js
icebp
(bad)
mov
xor
sbb
scas
mov
mov
loopne
fsubr
mov
xor
in
push
inc
xchg
retf
mov
sub
mov
inc
popa
in
mov
xchg
push
movs
js
push
xchg
sahf
inc
mov
rcr
mov
int
xor
xchg
push
mov
xor
in
or
sub
cmp
sbb
call
leave
daa
pusha
ret
cwde
idiv
cmps
int
add
mov
inc
rol
xchg
pop
or
(bad)
in
out
mov
cmp
hlt
push
hlt
out
mov
aas
jnp
cmp
in
or
push
das
ficom
mov
fcomp
arpl
fimul
stos
imul
push
jmp
aas
xor
mov
repz
enter
test
cmp
outs
sbb
mov
push
(bad)
mov
pusha
jb
pop
repnz
cmps
cmc
shl
repnz
dec
out
sbb
jecxz
sub
sub
xchg
pop
mov
or
inc
jle
push
ror
and
ins
xor
fidiv
adc
stos
pop
popa
fcomip
adc
push
mov
fldenv
mov
or
adc
dec
retf
sub
test
sti
and
push
std
xor
loopne
out
arpl
or
pop
lds
and
ret
xchg
adc
loopne
xor
dec
retf
or
xchg
push
lds
xchg
(bad)
or
sbb
add
mov
cmp
call
inc
fdecstp
mov
gs
jno
xor
inc
test
in
test
pop
or
sub
inc
in
mov
stos
cmp
xchg
mov
retf
ins
cld
dec
add
xchg
inc
jae
into
and
lahf
xor
inc
test
repnz
pop
mov
pop
cmp
cmp
jne
xor
retf
dec
jne
cs
dec
cwde
nop
fcomp
sbb
mov
add
pop
push
fbld
push
in
scas
mov
cmc
mov
lock
pop
mov
cmp
fcom
mov
add
push
xlat
sub
push
loop
call
call
mov
pop
xor
pusha
jl
sbb
mov
push
into
inc
add
(bad)
dec
aad
mov
adc
xor
mov
mov
out
or
test
call
cld
mov
or
adc
ins
ret
fwait
mov
rcl
push
inc
aad
stc
sub
(bad)
outs
add
push
movs
push
test
call
int3
xchg
jl
and
pop
iret
imul
outs
addr16
ret
or
xor
xor
pop
jne
mov
call
dec
jbe
iret
mov
stc
jnp
inc
dec
fisub
cmp
dec
and
retf
fnstcw
pop
push
out
sub
mov
addr16
mov
lock
(bad)
nop
push
imul
add
push
ins
out
pop
sub
mov
push
test
xor
js
or
repz
dec
aam
jp
ret
adc
or
ret
es
or
add
inc
mov
mov
js
jns
pop
arpl
sti
add
pop
push
stos
cmps
daa
mov
mov
push
das
cmc
mov
xor
xor
mov
mov
mov
pushw
ret
pop
dec
xchg
ja
mov
xchg
es
das
or
cli
lods
in
cmp
jne
ss
jo
xchg
cmp
icebp
adc
sbb
shr
cmp
jp
or
js
out
es
push
xchg
scas
or
xor
sar
cwde
xchg
xor
pop
into
mov
push
test
push
mov
mov
retf
push
cmp
xchg
or
push
jmp
adc
mov
and
leave
jmp
mov
mov
out
mov
fs
cmp
jg
lods
stc
fdivr
lods
mov
cs
xor
test
inc
pop
push
retf
jno
cs
add
cdq
(bad)
shl
jo
imul
(bad)
int3
outs
xor
pushf
add
call
in
sub
stos
test
adc
pop
xor
(bad)
test
test
adc
adc
jne
xchg
mov
gs
rcr
std
addr16
je
xchg
xor
pop
shl
das
call
cmp
test
rcl
mov
(bad)
mov
xor
daa
aad
int3
neg
push
mov
aas
ror
add
test
(bad)
lods
fcom
push
sub
out
jg
fidivr
mov
xlat
xor
jae
jns
mov
adc
ror
fld
js
sbb
fcomp
imul
jl
mov
scas
jo
or
mov
mov
aas
cwde
jo
retf
(bad)
aaa
xchg
enter
mov
cmp
add
add
xor
(bad)
repnz
mov
mov
or
daa
and
cmc
cli
mov
xlat
fdivr
rol
fmul
dec
mov
and
arpl
sbb
mov
push
xlat
push
and
push
js
shl
push
sbb
addr16
sub
iret
push
(bad)
hlt
xchg
mov
push
hlt
mov
fst
push
cmp
fstp
cld
ds
dec
bound
cmp
add
fucom
jecxz
push
cli
sbb
ss
sti
lock
imul
test
fist
dec
jnp
mov
fld
stos
es
cmps
and
es
sbb
jae
retw
mov
mov
shr
jmp
cmp
mov
(bad)
push
xchg
push
pop
neg
(bad)
add
dec
xchg
dec
and
iret
or
(bad)
movs
cwde
push
pop
pop
add
in
loopne
icebp
ftst
mov
jbe
sahf
fs
scas
mov
nop
int3
movs
jge
ret
pop
jnp
pop
xor
outs
xchg
mov
cmps
mov
int
in
mov
sub
dec
outs
adc
sbb
js
imul
ins
mov
clc
dec
or
cmp
test
xchg
imul
push
jae
in
pop
fucomi
push
inc
cmp
pop
aaa
xchg
xchg
mov
sti
mov
sub
popf
(bad)
movs
dec
scas
mov
in
jne
sbb
add
out
xor
fst
icebp
push
cmp
adc
aaa
fldcw
inc
mov
xor
xor
das
dec
xchg
cmp
sti
sub
jbe
sub
test
xchg
(bad)
aad
add
dec
daa
ficomp
xchg
call
lods
xor
sub
leave
mov
sub
cwde
sar
xor
enter
add
ficom
fsubr
test
sbb
cmps
and
mov
or
pop
adc
push
gs
ins
test
nop
jle
cmp
push
add
lods
lods
imul
pop
int
mov
pop
adc
(bad)
int
dec
outs
mov
mov
aam
aas
repz
imul
call
in
nop
ror
enter
pop
call
sub
and
adc
(bad)
sar
cmps
dec
jg
jne
mov
inc
add
mov
pop
jmp
mov
dec
mov
inc
jns
jmp
jnp
stos
xchg
xor
dec
jmp
fdivr
ins
dec
retf
stos
in
sub
out
sbb
in
push
pop
pop
imul
and
adc
jb
jle
cmc
mov
(bad)
inc
cmp
add
rcr
push
daa
sub
jl
dec
ror
lahf
mov
rcl
add
pop
test
add
mov
mov
shr
cmp
test
inc
(bad)
pop
sub
push
mov
mov
cmp
dec
inc
and
aad
pusha
cli
pop
inc
jo
in
pusha
retf
movs
jbe
data16
les
xor
dec
std
jp
push
pop
jmp
fcomi
mov
dec
adc
xor
and
jno
add
pop
mov
dec
cwde
sbb
cwde
add
das
ds
out
test
fs
mov
sub
repz
sub
add
pop
in
xor
imul
mov
push
jmp
cmovp
popf
cmp
push
mov
add
pop
test
add
test
or
or
nop/reserved
repnz
pop
sub
neg
out
mov
xchg
and
mov
fdiv
cwde
sub
les
xor
and
jne
lock
mov
adc
call
hlt
jae
test
cmp
mov
je
xor
inc
sub
mul
push
dec
(bad)
out
int3
pushf
xor
cmps
test
pop
sub
int
mov
rcr
arpl
in
sub
inc
adc
outs
test
mov
sub
push
popf
xor
ret
and
mov
push
and
xor
xchg
jbe
mov
or
pop
imul
mov
jb
aad
jp
dec
(bad)
mov
push
fcomp
hlt
cld
scas
add
add
lds
jmp
adc
js
fisubr
outs
xlat
mov
pop
pop
out
push
push
aas
fnstcw
push
sbb
(bad)
stc
rcl
sbb
ins
sbb
jns
inc
jb
push
aam
sahf
and
sahf
add
ds
dec
cmps
out
mul
(bad)
xchg
loop
sub
jne
jmp
xor
out
cmp
sub
call
jmp
push
call
mov
xor
fwait
xlat
adc
or
push
sbb
imul
arpl
mov
bound
pop
dec
clc
fst
repz
je
pop
stos
cli
cwde
or
sub
xor
and
rcr
nop
push
pop
xchg
sub
ds
or
add
add
or
(bad)
pop
xor
pop
and
cmp
mov
push
cmc
cmps
enter
lods
jmp
xchg
push
push
fs
repnz
mov
sti
pop
push
cmc
and
dec
retf
xor
aam
out
or
sbb
sub
ficom
mov
push
adc
aas
clc
outs
mov
add
push
out
push
jecxz
push
dec
adc
and
xor
and
push
sub
xchg
mov
out
push
jp
ficomp
idiv
xchg
popf
xchg
repz
fidivr
cmp
pop
ret
test
mov
xor
iret
aad
mov
xor
lds
push
je
loop
lahf
aaa
js
cmp
mov
jmp
cmp
mov
push
sub
pop
mov
jnp
sub
adc
repz
ja
movs
jp
sub
jbe
stc
mov
aas
push
les
fsub
in
or
push
xchg
dec
pop
mov
mov
paddq
out
jb
fwait
cmc
add
ret
outs
adc
mov
inc
je
adc
hlt
sbb
fisub
adc
inc
stc
mov
cdq
inc
ret
jne
loop
or
idiv
jmp
xlat
push
loopne
push
cmp
gs
pop
retf
mov
mov
push
shl
test
lods
pop
sbb
xchg
mov
loope
out
sub
mov
inc
pop
sub
inc
mov
mov
xchg
sub
in
cmp
lea
and
not
pop
mov
xor
sub
movs
scas
pop
pop
push
call
jge
stc
loope
pop
cmc
cmp
cmps
xchg
aam
push
imul
push
inc
sub
cs
retf
adc
add
ja
cs
cmp
sub
mov
stos
mov
aaa
icebp
mul
stos
push
sub
mov
sub
add
stos
xchg
scas
daa
xchg
pop
je
sub
imul
jp
cmc
mov
push
jmp
xor
sti
jle
cdq
add
inc
aaa
aad
pop
ud0
push
jmp
and
sub
icebp
mov
xchg
cmps
dec
dec
outs
sbb
(bad)
push
xor
jle
push
jne
out
sub
xchg
xor
add
imul
lahf
pop
call
movs
in
idiv
mov
out
mov
push
pop
jmp
jl
mov
fcmovnb
cmovle
(bad)
ins
sub
out
sbb
push
mov
pop
fsubr
or
mov
ss
and
mov
jp
xchg
(bad)
jnp
mov
imul
(bad)
popf
out
cmp
sub
daa
add
dec
inc
outs
adc
pop
push
cmp
jl
sbb
sbb
mov
call
pop
jmp
call
add
sar
aad
nop
jns
pop
int
outs
fcmovb
test
cmp
jne
pop
jns
cmp
jbe
jl
mov
sub
in
mov
outs
inc
xor
sub
inc
pop
add
pop
push
sbb
aam
lahf
xchg
rcr
pushf
mov
ret
btc
fucom
push
and
push
mov
lahf
push
je
cdq
loopne
mov
loope
add
push
jmp
lock
(bad)
out
pop
fs
not
lods
xchg
dec
jae
sub
in
dec
test
jb
sbb
inc
inc
pop
aas
xor
repz
(bad)
repz
add
in
xchg
mov
mov
jo
mov
mov
(bad)
fiadd
mov
mov
mov
or
sub
inc
ins
jmp
cli
sar
nop
fild
xor
or
out
mov
sbb
iret
fisttp
cmc
les
or
loop
aaa
dec
ficomp
sbb
jb
pop
adc
jmp
pop
dec
in
mov
lods
pop
sub
mov
xchg
pop
mov
shr
idiv
jp
dec
enter
int
fadd
popf
jb
mov
stos
add
cmc
nop
lods
fdivr
sti
inc
jne
mov
call
push
xchg
adc
xchg
ret
adc
adc
sub
mov
loop
sbb
add
cmps
and
pop
xor
faddp
or
data16
rcr
repnz
hlt
mov
jmp
lahf
add
pusha
in
imul
clc
test
popa
ret
out
data16
xchg
pop
adc
popf
(bad)
dec
jmp
xor
cmps
ins
mov
push
push
icebp
push
lfs
adc
in
inc
loop
sub
mov
loopne
xor
xor
xor
movs
xchg
xor
inc
vmovups
xchg
mul
bound
iret
add
jecxz
add
dec
cmp
dec
mov
mov
jmp
jg
pushf
fwait
mov
mov
push
inc
xrelease
neg
clc
pop
sub
mov
jg
cmp
sub
(bad)
(bad)
push
(bad)
sub
fmul
and
xor
out
in
mov
xlat
mov
ret
and
in
adc
cmps
sub
loop
mov
fwait
add
je
mov
neg
imul
imul
mov
pop
pop
dec
jno
push
mov
(bad)
test
cmps
iret
(bad)
cmp
pop
outs
fwait
pop
cdq
push
sahf
mov
(bad)
mov
inc
pop
call
test
jle
or
xor
jae
add
inc
pop
sub
xchg
push
cmps
nop
xchg
stc
rcr
repz
mov
dec
pop
fiadd
adc
sub
inc
stos
cmp
pop
jbe
or
mov
mov
(bad)
imul
scas
push
gs
jle
sub
aas
shl
adc
push
dec
fsub
leave
cmp
es
(bad)
ror
cs
or
inc
or
dec
test
clc
xor
jecxz
lea
pop
inc
repz
enter
scas
mov
outs
es
cmc
add
adc
gs
ins
mov
mov
stos
sahf
inc
stc
xchg
(bad)
mov
dec
das
setno
jl
pop
add
cwde
das
lahf
sbb
ja
dec
cmp
cdq
movs
xchg
xor
iret
cdq
pop
jmp
push
hlt
inc
out
mov
gs
cli
sbb
push
nop
movs
call
add
inc
pop
sbb
inc
lds
movs
cld
mov
mov
shl
jae
cmp
pusha
out
jmp
jns
or
or
nop
inc
jl
pop
rcl
aam
mov
dec
mov
jne
mov
jae
outs
inc
push
mov
cmc
outs
cwde
int
or
aam
mov
or
xor
adc
les
jecxz
shl
xor
fs
mov
outs
pop
sub
dec
mov
inc
jae
jno
mov
pusha
and
cmc
sub
dec
adc
sub
into
ror
xlat
pop
or
in
xor
dec
mov
idiv
mov
mov
jp
loop
in
jle
cdq
pushf
or
jns
js
je
mov
sbb
push
mov
dec
push
stos
xor
into
icebp
cwde
scas
stos
push
sbb
sti
and
cmp
push
mov
bound
add
jnp
shr
jmp
cdq
push
push
xchg
cld
inc
mov
inc
cmps
or
fnstenv
mov
pop
pop
ret
mov
mov
ficom
repnz
mov
mov
add
mov
not
in
sbb
stc
arpl
pop
cmp
test
mov
adc
(bad)
imul
retf
pop
inc
out
shl
data16
xchg
pop
daa
cmp
sub
mov
dec
addr16
stos
mov
and
mov
(bad)
fcomp
adc
cmp
shl
sbb
lock
shl
or
adc
stc
call
or
fsqrt
add
pop
push
sbb
aas
cld
jo
cli
imul
aad
js
imul
movs
pop
sub
mov
psubusw
(bad)
sub
xchg
int3
dec
out
rcl
test
dec
rcr
retf
inc
aam
mov
test
scas
pop
cmp
adc
add
mov
repnz
jle
inc
add
ret
push
sbb
int3
call
(bad)
sbb
inc
lods
in
cmp
shl
aaa
xchg
out
fs
jmp
loopne
into
(bad)
loope
cdq
sub
mov
add
dec
(bad)
xchg
loopne
xor
xchg
pop
push
or
repz
stc
movs
leave
out
adc
xor
cli
push
adc
add
xor
icebp
sbb
les
shl
loope
icebp
mov
sbb
aaa
pop
jns
outs
mov
dec
cmp
push
sbb
dec
call
loopne
movs
cmp
dec
inc
jne
ret
and
xchg
xchg
scas
or
xor
retf
call
cmp
mov
mov
pop
mov
icebp
nop
and
pop
sub
dec
imul
xor
jae
sub
xchg
xchg
sub
or
cmp
mov
xor
push
cwde
xchg
mov
xor
pop
jle
mov
xchg
(bad)
fldenv
bound
adc
fwait
mov
xchg
repnz
jle
arpl
lods
push
inc
adc
std
test
mov
shr
mul
mov
retf
retf
push
(bad)
jno
mov
inc
outs
xor
stos
jb
(bad)
loop
xchg
out
adc
bound
or
adc
and
push
mov
fadd
dec
and
jno
add
cmp
jb
(bad)
dec
xchg
mov
icebp
mov
das
out
cmp
cmp
fnstcw
add
sbb
mov
dec
mov
sbb
arpl
scas
mov
mov
div
push
jae
cmp
jg
jbe
idiv
scas
stos
push
push
or
ficomp
jne
test
inc
and
ja
sbb
and
aad
(bad)
loop
jecxz
add
inc
in
push
retf
fstp
or
xchg
movs
cdq
(bad)
sub
sub
cld
stos
shl
jmp
sub
das
pop
shr
mov
jl
loope
fnstenv
dec
push
cmp
mov
sub
mov
addr16
or
mov
or
mov
mov
fild
pushf
popa
mov
mov
mov
mov
rol
jmp
(bad)
sub
test
inc
sbb
test
jae
in
push
scas
ins
inc
lods
push
aam
lds
call
repnz
movs
pop
and
cmp
and
(bad)
cmps
jbe
cld
aaa
outs
call
jo
push
mov
cmps
add
hlt
cdq
lods
add
dec
not
adc
mov
jecxz
(bad)
fst
mov
bound
clc
jbe
cld
call
jae
push
cmp
push
lods
aam
stos
push
ss
ja
dec
in
xchg
aad
les
inc
and
das
arpl
push
mov
mov
sti
add
clc
add
jo
(bad)
retf
mov
out
xchg
inc
cli
lods
sbb
xor
xchg
xor
cs
in
es
mov
adc
scas
fild
cmp
ss
pop
jbe
les
dec
dec
stos
jmp
int3
pop
adc
sub
loopne
xchg
xor
bnd
inc
icebp
ins
mul
sub
je
xor
cmovno
stc
icebp
xchg
add
add
out
xchg
scas
fisubr
(bad)
cmp
jno
dec
clc
loopne
and
int3
jbe
adc
call
loopne
mul
movs
and
es
sub
dec
pop
xor
imul
clc
lahf
addr16
in
hlt
mov
shl
daa
add
into
stos
push
out
push
lea
pop
in
push
dec
or
cmp
add
js
out
iret
xor
rcl
data16
test
mov
sahf
fs
push
pop
mov
pusha
jge
aaa
pop
fldln2
inc
cwde
cmp
imul
std
leave
test
pop
movs
(bad)
mov
loop
cli
popa
cli
mov
sbb
pushf
popa
xchg
jg
fidiv
jae
xchg
inc
pop
push
(bad)
sub
pop
dec
xlat
and
shl
mov
lahf
push
enter
iret
in
loope
paddsw
adc
fcmovb
mov
mov
lea
pop
push
aad
xor
(bad)
jnp
retf
out
ret
xchg
rol
psubd
add
sbb
icebp
test
fsubr
adc
addr16
dec
cdq
dec
sbb
test
sti
imul
js
mov
out
cmps
(bad)
std
xchg
out
pushw
aaa
fistp
or
xchg
sti
loopne
fidivr
lahf
sub
outs
jae
sbb
fucom
or
in
adc
add
(bad)
ss
cmc
loop
ret
or
pushf
xor
pushf
popf
push
sub
leave
push
cdq
and
mov
push
popf
mov
cmc
sub
pop
lods
adc
or
mov
cdq
(bad)
in
aad
add
fs
pop
push
pop
pop
aad
rcl
sub
not
test
cmps
(bad)
or
ds
pop
push
mov
out
mov
sub
cmc
sahf
cmc
pop
fwait
and
pop
imul
and
lods
push
sub
das
aam
(bad)
enter
cmp
or
dec
xor
ror
sar
add
push
gs
add
mov
push
lods
dec
daa
push
xchg
and
ror
dec
sub
ja
pop
mov
js
int
add
cmp
adc
sti
inc
ret
inc
aas
pop
ss
scas
and
mov
mov
pop
xor
mov
les
mov
pop
icebp
adc
retf
inc
dec
sub
std
adc
push
sub
ret
cs
mov
jl
test
cmp
and
(bad)
jmp
pop
call
fiadd
ds
sbb
adc
mov
adc
(bad)
cmc
hlt
scas
push
dec
shr
cmp
hlt
jl
push
cmp
scas
cmps
mov
pop
mov
in
xor
inc
in
popf
(bad)
retf
cmps
push
push
sub
mov
call
add
gs
out
fdiv
cmp
fiadd
sbb
mov
mov
fwait
mov
retf
and
(bad)
(bad)
out
cmps
pop
jg
lods
out
out
(bad)
mov
loope
sahf
das
push
sbb
mul
in
jnp
push
sub
retf
inc
jae
es
das
into
dec
sbb
jmp
ins
or
mov
(bad)
(bad)
test
jns
call
xor
es
push
repz
jge
ss
jl
mov
pop
push
xlat
mov
aad
sub
jge
icebp
into
(bad)
out
fisttp
mov
cld
xor
aam
cmps
shl
adc
sbb
ror
mov
cmps
cmp
add
rcl
inc
pop
gs
push
out
stos
out
mov
add
loopne
fwait
pop
fcomp
ror
mov
sti
loopne
ror
push
es
jg
(bad)
xchg
xchg
ror
pop
push
jae
out
mov
dec
cmp
inc
popa
pop
int
cld
(bad)
pop
mov
sbb
outs
pushf
popf
ss
scas
ror
cmp
sbb
add
xor
cmovb
mov
pop
aas
jmp
test
and
mov
xchg
(bad)
sbb
fsubrp
inc
jge
(bad)
out
sbb
jg
cs
xor
cld
mov
adc
lock
lods
retf
jmp
push
jle
mov
js
push
cmp
or
test
pop
mov
leave
das
shr
movs
mov
and
push
mov
outs
movs
sub
push
or
mov
int
test
pop
shl
out
sbb
mov
sub
jne
inc
fwait
ss
cmp
dec
cmp
inc
test
ins
jnp
xor
sub
mov
xchg
sub
jnp
push
mov
xor
sub
and
push
mov
dec
mov
xchg
mov
in
int3
adc
cwde
fdiv
test
popf
and
(bad)
outs
add
out
add
lock
(bad)
mov
cmp
push
mov
rol
xchg
pushf
jno
inc
sti
dec
cld
sub
pusha
mov
icebp
icebp
in
jecxz
cmc
adc
add
faddp
out
mov
xor
aam
mov
xor
sub
inc
das
mov
and
dec
fisttp
jo
aaa
or
mov
adc
retf
cmp
sub
cli
sar
jne
in
test
in
adc
xchg
xchg
jno
sbb
mov
mov
outs
mov
mov
aaa
test
mov
and
rol
pop
inc
(bad)
retf
test
dec
sub
jl
sub
ja
(bad)
lock
sbb
scas
fdivr
pop
adc
and
sub
mov
in
inc
lea
test
or
mov
scas
(bad)
repz
xlat
mov
jle
lahf
fidivr
outs
scas
clc
neg
jno
test
and
push
mov
out
clc
dec
data16
pop
mov
movd
je
js
xchg
pop
sbb
jo
mov
stos
xlat
mov
push
xor
adc
xor
add
push
sbb
xchg
push
mov
dec
fisub
add
enter
jo
dec
in
movs
aam
xor
or
aas
cmc
jnp
sbb
lahf
cmp
sbb
je
fmul
mov
in
sbb
or
out
sbb
mov
sbb
(bad)
shl
and
push
xchg
dec
hlt
mov
shr
mov
mov
add
push
shl
xlat
lea
and
inc
xchg
in
pop
xor
mov
fadd
(bad)
imul
sub
xchg
mov
lods
sub
cmps
cmp
jecxz
jo
sub
fwait
dec
xor
add
or
cmp
imul
test
(bad)
mov
jae
mov
repnz
ja
mov
dec
loope
jmp
jp
sub
mov
pop
pusha
push
mov
out
call
cwde
xor
xchg
ja
mov
mov
jmp
repnz
imul
xor
fisttp
xor
inc
adc
fcom
adc
stos
mov
push
mov
lock
into
ret
pop
inc
cmp
sub
test
push
jbe
dec
xor
sub
lock
pushf
mov
mov
stos
jle
cmp
mov
lea
push
nop
sub
pop
xchg
iret
dec
push
or
xor
sbb
mov
dec
inc
push
pop
sbb
jmp
mov
lea
cdq
cwde
out
sahf
inc
loope
mov
dec
inc
daa
lahf
push
pop
and
hlt
jp
(bad)
add
hlt
cld
call
leave
aaa
cmps
les
push
hlt
or
dec
sub
stc
jmp
lods
ret
push
daa
inc
inc
iret
jmp
popf
icebp
xor
push
adc
lock
jo
mov
inc
pop
ret
xchg
sbb
push
inc
jp
mov
ret
xchg
(bad)
and
ds
cwde
(bad)
scas
call
data16
ds
aaa
dec
push
aaa
leave
or
pop
mov
loope
xor
adc
popa
fstp
(bad)
stos
sub
pop
dec
dec
xor
push
jp
repnz
sti
cli
pusha
dec
mov
scas
xchg
xor
idiv
jl
mov
or
xor
xor
shr
push
jle
fst
mov
pop
in
leave
xchg
icebp
jbe
mov
mov
dec
mov
and
test
fwait
movs
ins
cdq
xchg
int3
adc
and
aad
dec
mov
out
lods
jle
test
xchg
cmps
mov
arpl
jg
mov
jecxz
mov
push
adc
ret
sub
fs
push
aam
sbb
mov
mov
and
sub
hlt
push
push
adc
cmp
lods
adc
mov
popa
push
enter
arpl
pop
add
inc
sub
repnz
cmp
adc
idiv
ins
jno
sti
mov
test
ret
in
lods
jo
ins
idiv
and
jns
adc
jg
inc
mov
mov
pusha
or
pop
pop
xchg
mov
je
arpl
movs
and
and
jns
xor
out
inc
imul
rcr
push
loop
lods
push
arpl
sbb
push
add
adc
sub
imul
in
aas
and
aaa
ins
dec
cmp
cmps
test
jecxz
std
add
or
in
push
jns
aas
loope
dec
push
xchg
cmps
lods
std
pop
and
push
lds
dec
popf
cmp
adc
clc
push
jecxz
ret
sti
outs
fcomp
pop
xchg
stos
outs
mov
cmp
out
and
cwde
lods
push
hlt
jmp
or
in
sti
in
inc
rcr
sub
in
jmp
sahf
jb
test
and
sbb
and
or
rcl
push
push
ds
stos
mov
sub
ja
cmc
mov
shr
push
je
xchg
in
adc
aad
cmp
and
push
loopne
push
jo
push
mov
sbb
fadd
jmp
pop
mov
mov
xchg
push
imul
mov
pop
stos
das
repnz
mov
fucomp
mov
arpl
inc
xchg
dec
jp
pop
jg
inc
repz
test
and
mov
js
xor
lods
inc
sub
ret
adc
ret
dec
xor
sahf
xor
add
sbb
nop
scas
stos
xchg
call
icebp
inc
iret
lock
sub
stos
fcmove
cmps
fcmovbe
push
stos
in
cmp
inc
pop
lods
push
cmp
xchg
outs
lods
push
mov
hlt
dec
(bad)
pop
cld
rcr
fsubr
adc
xchg
mov
dec
(bad)
jno
cmp
dec
mov
sub
add
sub
add
mov
movs
pop
inc
xor
pop
sub
jae
push
pop
(bad)
mov
dec
cwde
sbb
fisttp
xor
pop
sti
(bad)
pop
retf
cmps
test
mov
xchg
test
jg
push
mov
retf
sbb
sub
outs
lods
lea
mov
sub
push
cwde
cmp
xor
fxtract
sub
dec
pop
mov
aaa
and
out
mov
xor
out
dec
sahf
jle
scas
push
ins
je
lock
gs
pop
sbb
or
stos
cmc
sahf
lods
leave
cmps
fbstp
in
ins
mov
dec
call
push
ror
aam
pop
mov
xchg
lea
into
out
xor
mov
(bad)
and
adc
xlat
xlat
stos
adc
cmp
or
shr
inc
pavgw
sub
jg
cmp
mov
popa
jo
std
pop
xor
push
mov
pop
pushf
(bad)
sahf
data16
jl
jmp
hlt
hlt
popf
adc
test
(bad)
cld
push
inc
xchg
rcr
out
nop
or
sbb
adc
cmps
test
shl
pop
into
(bad)
cmps
jge
dec
inc
sbb
mov
push
jbe
push
ror
pop
das
call
mov
shl
ror
(bad)
stos
push
mov
add
sub
daa
xor
push
mov
mov
adc
hlt
mov
scas
iret
mov
sbb
pop
dec
(bad)
js
push
sub
into
and
sub
dec
and
fistp
clc
jecxz
mov
enter
mov
cmc
push
jae
sub
add
cmps
mov
retf
push
inc
inc
test
ret
sbb
shl
jno
push
pop
outs
xchg
mov
in
mov
lods
dec
es
mov
in
aas
sub
in
data16
xchg
test
dec
mov
inc
mov
std
mov
push
sbb
(bad)
adc
in
lds
pop
jl
and
out
inc
stc
aas
ins
scas
(bad)
test
test
loope
push
lea
ins
aad
push
test
mov
push
cmps
inc
in
shr
rol
xchg
xchg
mov
push
jl
dec
inc
cmp
jg
stos
(bad)
stc
mul
cmp
sti
sbb
inc
out
in
test
fcomp
(bad)
in
test
ret
pop
push
pop
xchg
xlat
adc
cwde
cmp
(bad)
arpl
jl
inc
fsub
push
pop
maskmovq
test
add
jg
imul
sbb
push
mov
cmp
popa
lock
in
retf
jae
and
das
rcl
aas
adc
mov
fbld
repnz
rol
jbe
arpl
nop
mov
push
ds
mov
unpcklps
push
retf
dec
imul
ret
mov
(bad)
push
test
bound
aaa
jle
xchg
xchg
sti
mov
into
les
cmp
fs
and
jb
imul
or
fwait
cmc
push
retf
pop
fimul
fisttp
or
pusha
rol
arpl
sbb
sbb
xor
mov
je
mov
jecxz
and
imul
cmp
or
push
xor
sbb
mov
in
div
imul
inc
call
lea
retf
je
movs
push
adc
test
cmps
int
sub
push
jl
movs
inc
mov
ret
push
add
add
lods
(bad)
arpl
test
and
sahf
jo
cmp
int
jnp
test
push
les
ficomp
sar
mov
das
xor
aad
call
mov
xor
enter
push
iret
mov
sub
mov
pop
mov
xchg
mov
mov
aaa
nop
or
ror
xor
outs
jle
lods
add
call
inc
and
dec
ror
retf
ja
scas
mov
das
sub
retf
or
and
scas
add
xor
clc
fsin
jno
fst
in
and
mov
pop
mov
lahf
aam
adc
cld
sbb
repz
push
cmp
es
in
add
adc
fstp
outs
xchg
es
add
add
stos
sar
pop
ds
xchg
jp
xor
xchg
ficomp
push
push
or
cmp
int3
popa
or
cmp
frstor
push
jno
mov
sub
inc
add
es
icebp
repnz
sub
movs
push
test
pop
adc
mov
test
mov
sbb
dec
repnz
(bad)
ja
xor
jb
push
out
inc
rcl
iret
out
fs
sub
mov
hlt
fld
sub
mov
sub
loope
or
inc
lea
out
(bad)
test
mov
push
fcomp
fnstcw
sub
pop
outs
add
pop
leave
jl
cmp
js
jmp
les
and
cmps
imul
retf
(bad)
out
mov
push
sub
outs
hlt
push
idiv
out
jb
repz
ins
xchg
outs
cmc
js
sbb
jg
lahf
pop
mov
retf
aaa
mov
in
add
and
push
test
call
xor
(bad)
sub
cmp
stc
aad
jo
adc
daa
pop
fisttp
pop
mov
aad
(bad)
dec
inc
mov
jb
pop
cmc
xchg
scas
sar
sub
adc
loopne
jmp
in
shl
frstor
mov
cmp
setl
mov
cli
int3
clc
push
add
xchg
div
ror
or
cmps
sbb
cmp
jmp
push
pop
jnp
mov
pop
sub
ret
and
dec
mov
repnz
aas
mov
call
and
loope
enter
push
mov
or
jns
jge
data16
xchg
cmp
fmul
arpl
jne
dec
xchg
adc
jmp
mov
adc
push
inc
push
xchg
jno
push
daa
int
fwait
inc
and
and
xlat
jmp
pop
xchg
sbb
cmps
mov
mov
and
or
dec
jo
lock
fwait
hlt
icebp
ss
dec
(bad)
sub
pop
sbb
out
fwait
mov
call
add
adc
cwde
stc
test
push
xor
call
jbe
jmp
jg
out
test
add
call
pop
push
int
xor
mov
sbb
mov
lea
mul
sbb
retf
outs
mov
repz
or
sub
jbe
test
stos
jne
inc
retf
dec
sahf
inc
fdivr
mov
cmp
dec
push
fwait
pop
int3
adc
dec
jg
add
jae
pushf
mov
jbe
mov
in
and
mov
mov
je
fwait
jno
ins
scas
mov
pop
push
out
loopne
cmp
idiv
shl
jmp
(bad)
sub
mov
jns
mov
jp
cmovo
mov
sub
(bad)
arpl
xchg
mov
std
pop
int
mov
or
addr16
call
or
pop
loope
mov
int3
mov
pop
sbb
or
movs
fbstp
outs
jnp
jp
jecxz
loop
pusha
pusha
loop
daa
and
or
jmp
mov
lock
daa
and
test
jb
movs
sbb
mov
or
test
cmp
idiv
push
pop
movs
jl
xor
es
ds
in
fld
jb
adc
fcom
inc
jge
inc
mov
stos
mov
outs
xlat
dec
adc
aad
pop
das
retf
(bad)
sub
pop
dec
cmovne
push
inc
sti
mov
push
pop
ins
xor
push
jno
std
pop
enter
push
sbb
je
or
(bad)
int3
pop
or
inc
pop
sub
out
pop
or
or
nop
mov
rol
mov
xor
sub
test
imul
xor
mul
push
or
mov
cmp
cmp
test
movs
jge
mov
les
outs
and
not
stc
cmp
mov
mov
outs
(bad)
pop
loope
inc
add
pushf
test
outs
icebp
cli
imul
rcr
mov
(bad)
sbb
mov
cwde
or
push
jp
cmps
call
jb
xchg
mov
sub
inc
arpl
push
mov
jl
sub
pop
je
(bad)
imul
loopne
in
xchg
push
xchg
and
mov
xchg
sbb
imul
xchg
not
push
xor
jecxz
adc
test
dec
leave
push
or
mov
mov
mov
fdivp
sbb
xchg
jb
mov
rcl
loop
xchg
mov
(bad)
out
cmp
xchg
pop
push
push
push
sbb
(bad)
dec
cmp
ja
dec
and
fisttp
xchg
(bad)
push
mov
ss
jg
jecxz
xor
or
ja
ds
outs
adc
adc
adc
popf
push
adc
lods
ins
ss
sbb
push
idiv
fidiv
mov
or
and
retf
out
mov
jp
not
push
fcom
push
popa
adc
jmp
in
pop
and
or
int3
and
mov
daa
test
mov
sbb
das
not
pop
aaa
push
int3
adc
inc
sbb
mov
jns
or
neg
mov
mov
inc
push
add
jg
xchg
mov
rcr
lahf
push
test
(bad)
fsub
inc
add
xchg
cmc
mov
pop
xor
fstp
outs
xor
or
stos
arpl
ss
jmp
in
(bad)
mov
pop
pop
adc
mov
fcmovnbe
arpl
mov
dec
gs
jg
xchg
jae
sub
xchg
jle
cmc
and
cmp
jne
(bad)
cmp
mov
(bad)
(bad)
mov
fsubr
or
(bad)
loop
push
dec
inc
fist
xchg
push
lods
mov
and
push
xor
sub
test
mov
hlt
jbe
rcr
pop
cli
retf
int3
sbb
jmp
cmps
js
sbb
jae
sti
or
scas
sbb
retf
imul
sub
ds
push
and
push
mov
int
push
cmp
scas
inc
outs
sti
adc
lds
or
mov
adc
mov
aad
ins
jns
movs
jecxz
jg
xchg
mov
pop
hlt
rol
xchg
bound
outs
dec
pop
mov
push
clc
push
jae
pusha
stos
mov
mov
fimul
fcomp
into
sbb
mov
lea
fadd
aaa
adc
imul
xchg
add
add
sub
adc
arpl
inc
sbb
add
call
dec
or
jle
mov
mov
cwde
mov
jne
adc
cmp
jp
(bad)
into
push
fincstp
mov
push
leave
adc
loopne
mov
jecxz
cli
(bad)
sbb
outs
aam
sbb
sbb
cmp
daa
(bad)
fnstsw
cmps
lea
xlat
xchg
push
adc
je
mov
inc
push
outs
mov
fst
scas
out
lahf
les
cmps
sub
mov
sub
and
call
or
outs
inc
jns
or
int
add
sub
jns
(bad)
cdq
pop
push
jmp
jo
push
mov
es
mov
xor
call
test
pop
cmp
sbb
retf
lahf
loope
sti
cmps
xchg
adc
xor
je
xor
(bad)
lds
pop
or
addr16
fcom
push
popf
push
push
xlat
movs
lds
lds
jmp
adc
(bad)
or
enter
jbe
add
cld
aas
add
inc
movs
and
jmp
ffree
in
leave
adc
mov
pop
ret
daa
jmp
mov
jns
adc
jle
loop
mov
test
(bad)
lods
cmp
mov
outs
or
inc
inc
and
ins
xor
pop
mov
pop
test
inc
inc
imul
fadd
stos
out
test
ror
bound
push
call
fcom
pop
retf
or
pop
sbb
or
adc
retf
xchg
sbb
test
pop
pop
and
pop
lods
lds
or
push
mov
leave
push
push
push
lods
dec
or
sbb
clc
mov
jae
data16
sbb
xor
dec
lahf
into
dec
call
mov
retf
cmp
mov
fldenv
aaa
fstp
daa
ins
push
jnp
shr
cli
mov
imul
cmp
stos
pop
out
xchg
adc
nop
les
mov
cmps
out
xchg
cmps
add
js
mov
cld
or
sahf
xlat
sbb
dec
fnstenv
mov
mov
pop
inc
sbb
out
xchg
fnstenv
xchg
adc
xor
xor
std
and
dec
repnz
out
iret
retf
imul
mov
bound
scas
mov
out
hlt
jge
or
mov
sar
repz
jns
in
pop
sub
ja
push
aas
sub
repz
inc
mov
sub
mov
fdiv
add
pushf
enter
into
sbb
push
inc
or
push
push
ins
cmp
popa
out
retfw
inc
xchg
xor
mov
loope
lods
retf
retf
rol
xchg
and
js
in
or
inc
lods
ins
jne
push
(bad)
out
retf
popa
xor
outs
add
scas
dec
xchg
jmp
pop
jns
sbb
add
lea
ror
push
cmp
cmc
ins
mov
mov
test
das
mov
jne
js
cmps
je
enter
add
test
ret
jp
call
out
push
sub
aaa
leave
push
mov
int
call
test
mov
retf
js
cmp
and
push
fstp
sti
popf
out
xchg
not
mov
les
std
out
push
popf
xor
sub
or
push
push
neg
mov
add
(bad)
js
pushf
cmp
ds
cmp
adc
mov
pop
loope
jmp
lea
lock
int
rcl
cmp
jns
pop
sub
leave
xor
inc
(bad)
xor
cmp
es
jb
inc
mov
cmp
pop
pop
cs
xor
sahf
push
iret
push
cs
jp
pop
mov
cld
aad
push
pop
adc
sub
and
mov
and
mov
repnz
pusha
in
or
or
(bad)
ja
mov
into
icebp
outs
push
cdq
cdq
sti
bts
pop
loopne
stc
(bad)
pop
mov
mov
mov
or
push
imul
(bad)
jmp
addr16
mov
xchg
mov
ss
mov
lds
cmp
xchg
into
int
mov
xchg
dec
cmps
jne
rol
call
mov
inc
repnz
fwait
sahf
aam
and
jnp
push
xchg
pop
shr
popf
and
cld
cmp
(bad)
stos
jl
cld
call
out
jle
sahf
loopne
xor
pop
outs
(bad)
std
add
xchg
adc
inc
sbb
sti
es
xor
aaa
xchg
test
or
ss
jmp
mov
push
mov
and
pop
(bad)
mov
pop
icebp
push
adc
jg
retf
es
and
in
push
jne
inc
sub
and
inc
in
mov
ins
es
sbb
jl
mov
mov
pop
cs
xchg
in
mov
ds
sub
push
and
mov
mov
leave
cs
dec
mov
or
mov
out
inc
nop
push
cdq
sbb
pop
cli
inc
ins
out
mov
nop
movs
repz
in
scas
mov
dec
data16
xchg
(bad)
fnstenv
mov
xchg
aad
jns
test
mov
jecxz
sbb
stos
add
add
ret
mov
mov
les
inc
std
push
add
cld
jmp
jae
hlt
or
jno
aam
das
fst
xlat
mov
dec
cmp
aam
mov
push
sub
push
pop
sbb
or
xchg
loop
push
std
call
cli
leave
jg
int3
xor
enter
gs
mov
xchg
mov
mov
dec
cmc
in
loope
xchg
pop
(bad)
sar
pop
shl
(bad)
mov
call
movs
dec
xchg
fwait
loop
pop
push
xchg
push
aaa
inc
mov
or
fst
cmp
cmp
bound
xor
push
xor
dec
lods
hlt
xchg
shl
jns
xchg
(bad)
out
std
push
xchg
outs
and
cmc
inc
xchg
and
jmp
cmc
loopne
and
(bad)
pop
pop
cmp
jb
sbb
adc
not
loop
pop
cwde
test
add
(bad)
adc
mov
inc
leave
mov
arpl
inc
pop
mov
add
add
and
adc
mov
scas
sbb
xchg
sbb
pop
mov
xchg
mov
icebp
jo
in
in
xchg
lahf
jbe
dec
cmp
adc
aad
into
idiv
dec
cli
(bad)
movs
retf
add
cs
sbb
or
or
out
std
dec
sub
xor
out
mov
xchg
push
jbe
popa
loopne
mov
gs
pop
nop
pop
aaa
aad
push
arpl
mov
sbb
sti
pop
cmp
pusha
gs
mov
outs
lea
sbb
rcr
mov
xchg
cmp
xor
mov
shl
pop
sub
push
xor
mov
pop
adc
cmps
imul
fdivr
ins
mov
push
adc
int
mov
cwde
mov
imul
int3
scas
adc
test
pop
pop
out
pop
adc
scas
enter
inc
pop
adc
inc
cmps
aam
sub
aam
inc
fsubr
dec
jmp
retf
popa
xor
xor
and
jb
adc
iret
fsubr
jmp
int
add
not
(bad)
xchg
retf
xchg
inc
clc
in
arpl
test
nop
and
jbe
xor
stos
popa
cmc
dec
bswap
inc
push
lods
xchg
xlat
sub
jle
enter
stos
fldenv
mov
(bad)
and
cwde
loopne
dec
mov
fnstsw
retf
mov
adc
lods
fdivrp
adc
aaa
push
cmc
xchg
add
enter
mov
dec
or
enter
mov
mov
repz
mov
js
inc
pop
adc
ret
mov
aaa
ficom
sahf
ss
ins
xchg
sub
cmp
push
ret
(bad)
(bad)
push
aad
imul
xor
pop
(bad)
in
mov
outs
xor
lods
push
or
into
mov
fwait
loope
cli
loopne
idiv
xchg
in
dec
mov
jmp
cs
test
inc
mov
mov
adc
js
xchg
aaa
add
mov
sahf
inc
and
pushf
jae
cmp
stos
(bad)
sti
out
cmp
xlat
pushw
adc
pushf
or
inc
arpl
cli
arpl
enter
fisubr
mov
push
dec
dec
pop
xchg
add
lea
adc
pop
addr16
mov
xor
fwait
stos
jecxz
adc
or
mov
push
ret
xchg
sub
mov
and
cmp
mov
xchg
adc
(bad)
loopne
cmp
sub
dec
loop
sbb
dec
imul
push
aaa
push
add
mov
and
mov
inc
mov
mov
mov
sbb
lea
dec
cmps
jmp
sbb
mov
ret
xor
mov
js
out
shr
xchg
neg
movs
(bad)
rcr
dec
outs
imul
outs
cmps
push
jnp
fs
xchg
frstor
mov
jge
test
dec
mov
(bad)
(bad)
rol
xchg
cs
stos
popf
push
call
inc
stos
icebp
fld
xchg
dec
xchg
mov
mov
gs
and
adc
mov
push
(bad)
into
push
ja
lea
sar
jo
bound
pop
pop
fadd
push
fs
pop
pop
sahf
out
mov
call
fwait
loop
loop
jg
inc
inc
cld
data16
adc
sahf
push
inc
xchg
shr
arpl
sbb
into
stos
popf
xchg
sti
cmps
ss
(bad)
sbb
push
xchg
jno
jne
fidiv
(bad)
ins
ds
pop
pushf
aas
out
mov
dec
icebp
lock
popf
cmp
xchg
rcr
rcl
pop
shl
cs
pop
xor
sbb
(bad)
mov
add
movs
fidivr
jmp
cmc
xor
adc
xor
add
stos
mov
inc
ja
ins
or
adc
and
scas
xchg
movs
or
mov
sub
idiv
mov
retf
outs
jecxz
dec
sub
addr16
dec
xlat
mov
mov
mov
push
aam
shl
sbb
stos
mov
in
pop
xchg
icebp
rcl
fild
add
xlat
xor
xchg
xchg
cmp
pop
or
jne
cld
shr
in
retf
mov
call
fwait
dec
mov
mov
jo
or
sbb
push
inc
xor
xchg
arpl
xor
sbb
xchg
out
mov
sbb
mov
mov
into
lahf
pusha
nop
xchg
out
lods
mov
neg
lock
push
cmp
bound
mov
outs
mov
iret
adc
push
enter
test
imul
dec
(bad)
loopne
stos
sub
dec
imul
sbb
mov
les
xlat
retf
jg
std
xor
shl
enter
int3
daa
and
leave
aad
lds
mov
push
xchg
jecxz
jg
sub
cmp
dec
mov
pop
mov
xchg
xchg
dec
push
mov
aaa
jecxz
mov
jmp
sub
pop
or
call
div
dec
or
sbb
lea
lahf
push
int
inc
push
call
jns
adc
mov
inc
fisttp
push
push
adc
repz
add
imul
retf
or
nop
cmp
xor
ror
es
inc
inc
xor
das
and
xchg
jno
dec
and
sub
sar
or
stos
rcl
pop
or
jno
int
inc
adc
jne
ins
fld
es
or
repnz
ret
ret
(bad)
and
xchg
sbb
outs
into
mov
not
xchg
xor
pusha
(bad)
adc
mov
ja
int
push
cmps
test
shl
call
adc
mov
repnz
aam
into
mov
repz
scas
pop
push
dec
test
(bad)
call
cmps
pop
gs
in
cmps
or
jno
lds
push
call
mov
mov
fldenv
push
in
(bad)
mov
xchg
gs
push
std
cmps
xchg
pop
pop
and
retf
mov
(bad)
scas
ret
mov
inc
cli
pushf
mov
push
mov
fldenv
ret
jmp
repz
loopne
xor
dec
mov
rol
or
or
cli
push
sbb
(bad)
repz
lock
jae
and
daa
dec
mov
loop
jnp
pop
mov
push
xchg
not
leave
iret
outs
xchg
(bad)
rcl
add
add
sbb
push
out
add
push
mov
pop
ja
fild
scas
scas
repnz
push
dec
xchg
jmp
sti
or
push
arpl
cli
dec
fs
dec
add
out
or
add
in
test
outs
pop
imul
xchg
mov
cmp
inc
mov
rol
xor
jns
jg
or
or
push
jo
lahf
test
inc
or
or
mov
inc
sar
hlt
neg
popf
xchg
xchg
xchg
rcr
mov
inc
es
jb
leave
and
mov
sub
sub
or
push
cmp
jb
and
or
call
sbb
repz
push
fsub
adc
sub
pushf
cdq
xchg
aam
push
dec
push
loopne
dec
mov
lahf
dec
test
dec
pop
lahf
rol
mov
jnp
and
mov
loope
inc
test
jnp
enter
mov
mov
xchg
lock
push
hlt
inc
lds
pop
mov
fwait
pop
test
add
sub
mov
shl
sub
cmps
in
adc
or
test
cmp
aaa
cmp
sub
repnz
mov
jb
or
adc
icebp
out
cdq
enter
cmp
mov
add
cmps
add
out
enter
mov
mov
xchg
cmp
stos
ror
push
add
into
jp
push
cmp
popa
push
int3
push
and
jbe
repnz
mov
shl
dec
jmp
mov
stos
dec
jns
clc
std
xchg
es
es
or
mov
movs
into
ret
pop
repz
push
push
ror
jge
ret
push
dec
xor
xor
cmp
ret
inc
(bad)
mov
dec
fcomp
mov
mov
stc
dec
sbb
cmp
sar
test
leave
mov
adc
xchg
stos
or
dec
jp
clc
(bad)
sub
or
loope
repz
jb
mov
iret
pop
add
ss
stos
add
retf
jae
jl
jecxz
iret
pushf
shl
or
or
jmp
and
inc
pop
pushf
aas
inc
fist
ret
ins
pop
xchg
dec
adc
(bad)
stc
sahf
movs
jo
aas
aas
xchg
test
(bad)
pop
xor
lahf
mov
and
retf
jmp
jp
aas
or
dec
xchg
pop
adc
std
mov
inc
ja
lds
pop
mov
jnp
lods
cmp
and
loop
cld
gs
cmp
sub
ins
icebp
test
jbe
and
inc
mov
shl
into
fisub
fimul
mov
pop
test
mov
imul
sub
xor
fwait
call
jp
xor
fisub
add
xchg
sbb
mov
mov
jne
ss
xchg
mov
push
out
jmp
daa
in
das
sbb
pusha
movs
and
les
sub
popf
inc
and
loop
dec
aad
stc
dec
cmp
push
sub
out
cmp
dec
jbe
ret
and
push
xor
loop
not
pushf
mov
or
push
xchg
mov
test
push
and
pop
aas
popf
mov
xchg
mov
xchg
jmp
sahf
pop
es
mov
inc
shl
push
mov
adc
xchg
psrlq
clc
imul
jge
rcl
pop
sahf
stos
xchg
push
(bad)
sub
fild
(bad)
clc
pop
mov
ins
outs
std
mul
mov
or
push
mov
adc
pop
push
xor
jae
call
xor
jecxz
sahf
xchg
jo
jmp
xchg
(bad)
ins
imul
sbb
into
lea
icebp
mov
stc
inc
sbb
sar
test
pusha
mov
ffreep
lock
scas
xor
mov
je
and
mov
cli
cmp
addr16
scas
cmp
xchg
(bad)
sbb
test
sub
cmps
mov
mov
dec
xor
cmp
cmp
cmp
mov
pop
or
mov
or
sti
lock
call
dec
call
das
sub
mov
and
sbb
sub
hlt
push
and
ror
adc
lock
mov
nop
out
out
push
imul
push
inc
shr
rcr
aad
adc
or
adc
add
mov
rol
xor
xchg
ins
int3
push
scas
mov
test
cdq
js
and
inc
cmp
xchg
inc
dec
or
pop
or
xchg
fisubr
ret
push
or
jl
(bad)
xchg
and
mov
cmc
jae
add
cmp
cmp
jp
es
fidiv
pop
sbb
test
push
sub
sbb
inc
sbb
fdivr
nop
jl
repz
xchg
push
xchg
sub
out
push
stc
xor
lea
xlat
push
test
popf
dec
lahf
sahf
cmp
faddp
dec
dec
push
jle
push
retf
add
mov
mul
mov
jno
not
lods
in
scas
(bad)
and
mov
popf
adc
cmc
push
call
mov
xlat
mov
lods
icebp
push
sbb
xchg
leave
jmp
retf
lock
cmp
les
or
mov
leave
and
sahf
sub
cmps
mov
movs
enter
mov
sub
popa
jne
jbe
lock
or
dec
dec
jns
mov
sbb
xchg
push
cmps
and
push
adc
and
(bad)
jae
neg
xor
aam
mov
retf
stc
pop
add
imul
loopne
dec
dec
pop
mov
scas
xchg
or
js
fadd
repz
popa
icebp
xor
dec
add
sbb
jle
sbb
pop
jl
add
int
sahf
sbb
mov
push
xchg
sub
mov
mov
pusha
xchg
cdq
imul
dec
ret
lods
or
hlt
stc
push
lds
out
loopne
push
pop
pop
data16
mov
mov
enter
mov
popf
mov
push
outs
dec
inc
(bad)
and
adc
xchg
pop
scas
jp
mov
push
xchg
call
mov
pop
popa
push
sub
jne
fldcw
mov
pop
jbe
in
jg
data16
out
loopne
pop
nop
mov
mov
fimul
and
scas
lods
mov
pop
and
je
push
daa
mov
icebp
sar
call
shl
dec
push
pushf
mov
cmp
jbe
adc
mov
push
mov
cmps
and
pop
push
iret
enter
add
xor
jmp
neg
ficom
rcl
jmp
in
mov
dec
add
into
push
pop
out
int3
add
xchg
lea
mov
mov
dec
mov
adc
cmp
popf
into
adc
sbb
or
out
cmp
mov
fs
mov
mov
xchg
mov
out
test
sti
retf
pop
mul
scas
and
imul
inc
and
pop
lahf
xchg
xor
add
scas
sar
cmp
scas
jno
jns
out
mov
gs
aam
push
imul
(bad)
jp
loope
xchg
adc
sub
push
scas
and
retf
or
into
in
hlt
sar
mov
loope
mov
mul
or
xchg
sahf
mov
mov
sbb
and
add
mov
adc
test
xor
adc
adc
dec
outs
push
dec
int
mov
stos
push
cmp
inc
dec
cmp
cmps
jp
ss
mov
sub
es
(bad)
adc
dec
push
add
imul
lock
pop
shr
pop
add
lods
push
push
in
mov
ins
movs
sti
push
add
inc
mov
dec
ins
or
icebp
jg
ds
aam
outs
jmp
inc
loope
imul
hlt
mov
xchg
and
stc
push
inc
mov
add
cmp
mov
popf
push
push
sub
mov
rcl
lahf
daa
cmps
mov
dec
fld
pop
aas
rcr
aam
cld
nop
pop
lds
add
fwait
lea
test
inc
jge
je
or
cld
xchg
aad
out
xor
push
xchg
les
push
rcl
or
data16
leave
inc
dec
scas
mov
xor
je
sbb
out
mov
cmc
xchg
pushf
and
sbb
je
push
lahf
dec
in
nop
mov
ret
int
daa
ins
cmp
add
sub
and
into
pop
scas
fucom
mov
jg
push
adc
pop
sets
lods
mov
inc
dec
push
push
mov
jp
stc
jnp
pop
data16
jae
in
adc
mov
sbb
adc
cli
mov
or
lock
xchg
outs
dec
mov
xchg
sbb
ror
(bad)
in
add
adc
mov
add
mov
cmp
mov
mov
push
inc
aam
inc
in
nop
lods
jg
iret
mov
rol
jge
push
jp
daa
pop
es
rcr
mov
add
mov
data16
jmp
pop
or
sbb
rol
xlat
jecxz
fadd
cld
ret
(bad)
mov
ret
sub
call
adc
sbb
sbb
test
fstp
cmp
xchg
inc
and
jbe
push
lods
cli
push
mov
xor
mov
nop
in
mov
in
cmp
icebp
call
lods
sbb
call
and
jo
push
add
in
jae
sub
jmp
xlat
ins
out
xchg
jp
rdtsc
and
shl
bound
xor
(bad)
dec
out
pop
sbb
mov
data16
idiv
mov
loopne
push
cmc
push
rol
ss
adc
int
jmp
sub
ror
xchg
sbb
sbb
xchg
retf
xchg
popa
xor
mov
pop
push
inc
das
xchg
mov
dec
xor
and
sub
mov
xor
imul
(bad)
xchg
scas
jbe
and
xor
lock
(bad)
and
xchg
jns
push
std
ins
or
cdq
cmps
dec
fist
scas
cwde
xchg
xor
repz
(bad)
ret
enter
pop
cwde
dec
aaa
push
and
jns
mov
and
gs
jp
les
jnp
or
inc
mov
scas
mov
and
push
jmp
arpl
fistp
jnp
xchg
or
adc
scas
or
sub
inc
mov
(bad)
mov
sbb
add
call
adc
pop
jge
cdq
sbb
outs
leave
adc
bound
adc
mov
add
jns
sar
dec
inc
data16
dec
mov
pop
(bad)
neg
or
and
daa
jno
and
and
lods
mov
mov
mov
jmp
jbe
(bad)
ror
jns
xchg
out
sub
push
ret
sbb
cdq
mov
mov
or
cmps
cmp
out
dec
test
pop
mov
push
imul
or
jbe
jae
daa
inc
cmp
mov
xor
inc
cli
and
pop
inc
mov
xor
cmps
pop
mov
mov
mov
jmp
loop
mov
repz
hlt
jnp
sbb
push
ins
push
lods
fimul
test
cmp
fstp
leave
loop
jne
lds
jle
ins
xchg
ret
jbe
push
aas
sub
iret
adc
daa
sub
lea
aam
in
or
and
arpl
aad
xor
xor
mov
outs
mov
mov
cmps
aaa
or
loop
test
and
(bad)
jne
sar
jmp
adc
xchg
jbe
adc
mov
mov
push
test
mov
fidiv
lea
push
scas
lea
call
imul
movs
lahf
inc
in
mov
pop
rol
add
sub
scas
mov
jns
mov
loopne
add
(bad)
mov
add
jo
jl
fidiv
jp
pop
push
jp
cmp
xchg
adc
xchg
and
push
pop
mov
ret
outs
outs
test
pop
popf
cmp
outs
mov
and
xchg
mov
and
(bad)
es
inc
mov
cmp
mov
sbb
mov
sbb
retf
sbb
sar
jae
mov
test
pushf
fdiv
retf
and
push
and
inc
adc
pop
adc
pop
jmp
jl
xchg
retf
mov
shl
mov
mov
and
add
lock
(bad)
pop
scas
adc
dec
adc
push
cmps
rcr
mov
add
cmc
jmp
movs
mov
jmp
sbb
dec
sub
(bad)
mov
jmp
dec
xlat
jmp
test
std
add
jne
in
and
out
aam
es
inc
test
test
dec
test
jnp
cmp
cmps
ror
adc
cmp
into
scas
lds
fstp
mov
jb
scas
pop
fs
shl
mov
in
xor
rol
sub
(bad)
jne
pop
loopne
pop
mov
adc
adc
cmp
test
outs
aad
lds
sub
sub
xchg
push
repz
lods
stos
int3
mov
pop
int3
mov
xor
mov
cwde
sbb
aaa
sub
dec
ret
mov
mov
lahf
inc
loopne
jp
call
scas
daa
sti
imul
sbb
ret
(bad)
idiv
pop
cmps
mov
and
stos
ins
cmps
add
cmps
mov
ds
jmp
sbb
sahf
ret
jecxz
popf
add
fisttp
hlt
mov
rcl
cmp
mov
cli
ss
sub
std
inc
push
or
mov
push
or
pop
lods
jl
add
adc
ficomp
push
cmp
popa
gs
pushf
mov
fwait
adc
mov
inc
xor
sub
jge
sahf
push
pop
cmp
sub
(bad)
jecxz
dec
pushf
les
jns
cmp
retf
add
scas
seta
sbb
cmp
movs
adc
cmp
mov
ret
imul
jbe
into
bound
pop
mov
or
jae
cmp
push
cmps
les
push
mov
pop
fnsave
int
jae
and
loopne
loop
data16
idiv
mov
xchg
jl
sbb
std
ins
pop
cmp
rol
or
inc
sub
fs
mov
in
shl
jne
out
push
shl
xor
ins
pop
pop
dec
mov
popf
adc
fistp
or
pop
or
test
add
add
xor
bound
mov
and
mov
mov
outs
push
fsubrp
std
es
call
mov
sub
data16
out
sbb
or
add
std
or
push
jae
in
xlat
xchg
xor
ss
xchg
in
cmp
into
cmp
jg
dec
jns
out
push
loop
cwde
outs
lea
jecxz
int
dec
mov
ja
mov
outs
stos
cdq
lds
fidivr
xor
mov
mov
sub
dec
stos
dec
ss
push
xchg
arpl
test
adc
loop
std
inc
ja
sar
cmp
aad
jb
movs
test
pop
xor
xchg
out
lock
out
pop
lods
dec
out
gs
mov
xor
ss
dec
jbe
in
test
call
add
inc
xchg
in
int3
out
enter
call
retf
xor
arpl
add
xor
and
or
stos
dec
pop
in
cli
xchg
mov
fisub
adc
jo
ja
jb
pop
adc
pop
and
gs
into
pop
call
cmps
pop
mov
jge
popa
out
jae
mul
movs
ja
leave
and
or
sub
jns
aam
jmp
cld
xlat
cmps
adc
lds
xor
dec
movs
sub
imul
out
or
mov
loope
and
pop
sub
movs
scas
mov
inc
mov
pop
aaa
push
bound
mov
mov
xchg
fst
push
jge
inc
inc
lea
inc
ret
das
rol
xor
push
loopne
sbb
xchg
or
ins
xchg
sbb
jle
sbb
unpckhps
mov
sbb
js
loopne
clc
inc
jg
sub
arpl
in
cdq
mov
push
fadd
aam
mov
jae
sti
mov
jle
(bad)
xlat
and
push
xchg
pop
jbe
int3
icebp
lock
add
jb
out
(bad)
cwde
out
adc
or
pop
shl
sar
push
cld
fild
rol
aaa
jp
(bad)
pop
lahf
xchg
test
xchg
mov
fnstcw
mov
sub
pop
retf
inc
jo
ret
ds
(bad)
icebp
data16
cmc
call
out
mov
retf
and
add
jno
or
shl
(bad)
cdq
pop
inc
adc
dec
xchg
popf
jne
dec
inc
or
sub
xchg
jne
mov
xchg
pop
sub
xchg
inc
mov
xchg
and
and
jns
inc
into
cwde
leave
cmc
mov
xchg
in
iret
jle
imul
mov
(bad)
mov
push
cwde
out
push
mov
repnz
xchg
sub
cwde
and
mov
in
pop
sti
adc
pop
mov
cld
xlat
das
fidivr
pop
mov
jle
sbb
outs
cli
jmp
(bad)
call
lods
rcr
out
in
mov
in
es
fisttp
pop
ins
pop
int
pop
sub
das
into
icebp
and
xchg
xchg
pusha
(bad)
inc
mov
push
int
cmp
std
int3
addr16
fisubr
(bad)
dec
arpl
mov
les
push
in
iret
and
xor
push
pop
inc
xor
add
lock
sar
inc
iret
inc
popf
jge
mov
clc
jb
enter
xchg
mov
or
push
mov
or
retf
test
(bad)
jg
clc
inc
jb
in
sti
mov
inc
icebp
mov
pop
fcmovb
imul
fbld
push
pop
fimul
loop
int3
mov
xlat
std
aad
in
mov
pop
test
mov
jp
push
pop
mov
stos
xchg
scas
ror
scas
sar
mov
jbe
(bad)
sub
xchg
and
(bad)
retf
lahf
and
movs
xchg
sbb
xchg
into
sbb
push
cmp
mov
aad
inc
mov
lea
out
mov
cmp
movs
cmp
out
push
jmp
sub
ss
test
stos
cdq
xchg
jmp
(bad)
jmp
sti
mov
inc
pop
cmp
cmp
mov
sbb
cmps
or
mov
mov
push
inc
pop
inc
popa
add
aam
retf
fisttp
psubusw
cdq
and
inc
sub
inc
xor
cdq
mov
loop
test
pop
(bad)
push
xchg
call
adc
pop
cwde
(bad)
imul
cmp
cdq
pop
pop
popa
and
mov
fidivr
dec
out
test
lods
sbb
jb
dec
outs
aas
push
and
cmp
and
ret
into
ror
and
xchg
retf
in
outs
pop
jbe
mov
mov
mov
cmps
mov
jp
inc
pop
xchg
cmps
rcl
ins
dec
outs
mov
jns
arpl
(bad)
and
out
add
pop
in
sbb
cmps
cmp
outs
xor
addr16
sub
movs
jne
add
push
cmp
in
mov
jmp
mov
mov
push
ret
loopne
pusha
inc
sbb
ud1
pushf
sub
out
or
shl
sar
adc
mov
and
mov
shl
or
stc
inc
mov
xor
sub
daa
pop
jmp
pop
xor
and
icebp
mov
add
clc
inc
ror
sub
(bad)
into
adc
lea
jbe
xchg
cmp
or
cmp
push
adc
rol
add
adc
xchg
ret
verr
arpl
cmp
mov
loop
icebp
mov
dec
in
xchg
or
sbb
std
inc
push
cmps
push
dec
push
std
fdivr
or
hlt
retf
sub
dec
js
jnp
(bad)
retf
enter
pop
fld
test
ret
dec
cmp
push
call
cmp
loopne
mov
push
sub
aam
(bad)
(bad)
add
mov
sub
mov
ficomp
inc
mov
add
retf
cli
cmp
mov
inc
fsub
jmp
test
hlt
adc
sub
cli
mov
push
jmp
sbb
or
push
(bad)
push
push
jp
cmp
es
outs
gs
xor
ds
xor
in
or
mov
jle
mov
inc
imul
mov
push
int
scas
jmp
aam
loope
sub
aas
and
(bad)
push
hlt
cmp
loop
mov
pop
adc
sbb
and
call
loopne
xchg
sub
lods
mov
push
aaa
and
xor
pop
(bad)
mov
sub
sub
push
add
icebp
gs
mov
jno
into
clc
(bad)
call
arpl
nop
fdiv
pusha
mov
xor
jmp
ds
fist
mov
jp
lock
cmovl
xchg
xchg
inc
fwait
fwait
sbb
stc
in
shr
popf
mov
in
pop
xor
adc
push
push
or
push
inc
out
int3
dec
mov
sahf
push
pop
pop
pushf
mov
sti
inc
icebp
mov
daa
js
pushf
repz
and
cmp
pop
dec
test
pushf
mov
mov
lahf
gs
xchg
gs
xor
ret
or
mov
or
dec
mov
push
call
retf
adc
in
scas
dec
mov
test
inc
jb
in
test
dec
jmp
jb
in
loope
fidivr
jae
daa
cmps
aaa
pusha
cmp
out
movs
into
mov
jns
outs
dec
jb
rcr
push
jo
mov
daa
adc
push
xor
imul
adc
mov
mov
pop
xor
jle
push
pushf
mov
sbb
sub
mov
shr
cli
(bad)
cmps
repz
xchg
adc
js
add
and
gs
test
xchg
ret
add
add
vmwrite
jnp
inc
jnp
push
pop
pop
adc
popf
push
int3
outs
and
mov
push
outs
and
inc
pop
arpl
sbb
inc
iret
jb
jns
jnp
ds
xor
xor
dec
pop
pop
xchg
xor
add
sub
adc
stos
arpl
fidivr
dec
jl
fldenv
pop
xchg
dec
and
lds
int
call
je
sub
jg
sub
dec
dec
sti
mov
(bad)
mov
loopne
iret
xor
dec
cmp
aam
cdq
pop
adc
out
jmp
or
ins
clc
repz
les
lods
jbe
in
jg
push
mov
pop
jl
mov
stos
out
arpl
sahf
inc
sbb
shl
lahf
retf
mov
sahf
mov
pop
push
xchg
cmp
(bad)
retf
stos
xor
mov
rcr
pop
push
enter
imul
ins
stos
mov
fs
inc
jg
push
add
fs
sahf
ins
rcr
inc
in
dec
movs
sub
cs
or
and
push
xor
ss
(bad)
(bad)
jmp
mov
add
mov
push
fdivr
adc
imul
stos
call
and
test
sahf
and
jecxz
jp
je
xor
out
mov
xchg
adc
ja
jmp
or
or
jg
sbb
adc
dec
sbb
sbb
std
movs
fstp
cmp
jmp
inc
mov
pop
xlat
xor
xchg
mov
pusha
mov
addr16
push
jns
sti
or
pop
mov
mov
mov
lock
das
sub
fwait
inc
pop
sbb
push
fimul
mul
imul
or
adc
pop
lds
outs
lahf
cmp
call
adc
retf
in
test
rol
stos
stc
adc
cmp
push
jbe
sub
or
mov
jb
xor
adc
ja
lock
test
cmp
inc
out
and
stos
lods
sbb
fistp
ins
fs
fdivr
jae
mov
pop
div
enter
mov
and
lds
mov
fcom
arpl
rep
data16
daa
ror
ret
sti
idiv
je
adc
xor
es
fwait
mov
cmc
dec
sub
dec
jo
out
stos
iret
mov
jnp
mov
adc
test
and
lahf
std
or
mov
adc
call
loopne
lahf
ja
loope
call
popf
pop
out
je
xor
bound
mov
cmp
test
push
ss
pop
sar
test
mov
push
into
add
and
cwde
xor
mov
inc
adc
pop
mov
std
mov
mov
push
ss
add
imul
test
loope
and
idiv
cmc
fsubr
gs
into
pusha
xchg
out
sahf
pop
jmp
in
cs
add
(bad)
sti
and
pop
jl
pop
rcr
sbb
xlat
cmp
add
(bad)
xor
lock
push
int3
(bad)
or
js
inc
and
xchg
outs
cmp
push
fadd
jle
inc
or
inc
adc
mov
xchg
sub
xchg
xchg
or
mov
sub
cmp
add
rol
test
bound
mov
clc
add
push
in
push
jae
adc
pop
mov
xor
outs
pop
sbb
jl
mov
nop
test
lods
and
xor
test
movs
sbb
dec
xlat
adc
sub
push
push
mov
push
jae
pop
pop
mov
mov
and
lahf
imul
add
lahf
scas
in
mov
jl
jmp
jg
test
add
sbb
and
pop
bound
in
cmps
icebp
add
out
jecxz
inc
cmp
retf
(bad)
pop
sub
push
std
pop
sbb
in
jl
add
mov
(bad)
adc
jp
test
jae
cmp
ficomp
popa
pop
pop
xchg
cli
cmps
sub
ror
push
(bad)
movs
xchg
jne
retf
movs
test
inc
xor
(bad)
pop
imul
cwde
in
xor
dec
push
inc
shl
pop
in
push
xchg
or
jb
mov
push
repz
mov
std
pop
sub
gs
sbb
adc
ins
push
dec
sub
inc
js
xor
add
movs
xchg
push
sti
jnp
mov
lds
add
mov
scas
xchg
test
sahf
movq
stos
cmc
imul
sbb
jae
addr16
stos
adc
shl
sub
add
arpl
aaa
mov
(bad)
shr
adc
mov
dec
dec
inc
pop
jl
in
gs
dec
sub
or
xchg
das
xor
outs
inc
cmps
add
idiv
(bad)
dec
jbe
mov
sub
test
fiadd
sar
push
mov
stc
cmp
sbb
pusha
(bad)
push
xor
aas
or
gs
movsx
cmp
lds
xor
and
inc
mov
je
xor
loopne
std
jns
push
lahf
dec
mov
mov
dec
cmp
jo
inc
std
pop
cmp
inc
mov
cli
jo
test
add
push
mov
loopne
stos
icebp
xor
add
inc
dec
loop
je
mov
shl
je
sub
xchg
in
jecxz
sub
mov
outs
cwde
fbld
add
jno
lods
pop
jns
add
mov
and
fisttp
lods
in
jl
jb
xchg
or
mov
sub
push
jge
cld
sbb
mov
inc
int3
cmp
cwde
aaa
and
cmps
movs
call
xchg
aas
xchg
push
test
test
ret
adc
into
fidiv
popf
in
mov
sub
loopne
in
out
pop
mov
mov
mov
emms
rcl
mov
xchg
add
inc
das
imul
pop
not
fmul
mov
sbb
sbb
push
dec
push
or
pop
and
ret
(bad)
jge
fcmovu
fimul
add
adc
loop
mov
jae
scas
or
test
cmp
ins
jbe
je
cli
sbb
lea
jmp
sbb
rcr
cwde
pop
scas
aas
mov
push
jmp
aad
movs
lds
dec
fst
stos
mov
jmp
es
xchg
jmp
mov
mov
cmp
hlt
out
iret
icebp
nop
sub
inc
loop
dec
push
mov
push
dec
ins
les
add
cmps
stos
or
les
sub
sub
xor
xchg
nop
push
pop
in
clc
stos
fstp
sbb
xchg
outs
sub
cmp
scas
inc
ret
xor
call
das
mov
inc
test
out
push
out
stc
pop
push
inc
pop
dec
loop
sub
les
inc
pop
dec
cld
fs
loope
fmul
pop
sbb
(bad)
inc
daa
mov
jle
(bad)
sbb
xchg
jg
mov
lods
aaa
push
outs
cmp
add
div
cmp
ret
cmp
and
pop
inc
fwait
aad
out
pop
pop
leave
mov
pop
daa
sub
ja
jp
mov
ins
cmp
loope
mov
clc
fdiv
cmc
ret
jnp
sbb
jg
outs
jno
jg
dec
pushf
fisttp
out
ins
jne
dec
test
into
push
cmp
add
int
bnd
pop
ror
sbb
cmp
call
sub
jno
sub
cmps
aas
and
inc
mov
sub
cs
xchg
cmp
push
or
add
cmp
adc
hlt
push
mov
pop
lds
arpl
xchg
dec
icebp
or
movntps
loope
pop
pushf
dec
fldenv
ins
mov
mov
and
pushf
(bad)
test
inc
jno
xor
stos
jnp
jmp
pop
shl
lds
cmp
and
fimul
sar
stc
test
pop
ds
sub
pop
fs
mov
pop
test
dec
js
sub
fcmovnu
sub
push
sbb
cmp
adc
pop
and
adc
add
popf
das
fstp
inc
pop
push
add
add
jmp
(bad)
adc
push
dec
out
cwde
or
pop
adc
jmp
jmp
dec
or
fs
inc
and
xor
js
(bad)
and
dec
mov
ins
std
nop
xchg
aas
jo
xchg
arpl
pop
mov
xchg
sub
pop
mov
adc
jnp
sub
pop
iret
out
scas
dec
fidiv
stos
mov
rol
hlt
sub
ss
bound
mov
xor
les
mov
sub
in
mov
jnp
jl
xchg
arpl
cdq
push
fsubp
push
imul
aam
sbb
or
out
mov
cmp
ja
push
fsub
xchg
dec
sahf
jmp
gs
imul
and
int3
cmps
pop
mov
mov
int
cmp
and
std
cmp
inc
pop
push
or
fwait
sbb
loop
jno
push
adc
(bad)
fld
push
push
and
sbb
inc
out
(bad)
push
push
add
jnp
sbb
leave
jp
dec
stos
push
lds
je
les
dec
jge
sub
push
jae
retf
fnstcw
cmp
pop
enter
cmps
(bad)
(bad)
dec
lahf
push
push
sbb
stc
and
and
push
cmps
inc
mov
jbe
push
cld
cs
mov
sub
in
xchg
push
sbb
aaa
cmp
mov
lea
dec
push
dec
mov
movs
mov
pusha
inc
aad
stos
int
xchg
pop
xor
xchg
or
adc
xlat
xchg
mul
(bad)
cmp
imul
(bad)
out
lea
test
push
inc
stc
fwait
test
dec
adc
cmc
sbb
mov
iret
dec
imul
mov
out
mov
outs
mov
out
(bad)
clc
cmp
shr
pop
outs
movs
arpl
fdiv
cmps
cmp
lds
dec
sub
sbb
jl
imul
xor
test
push
test
pop
fs
stc
xor
movs
sar
iret
js
add
jae
lods
fs
(bad)
inc
out
inc
adc
loope
and
stos
xchg
repz
xor
inc
pushf
xor
or
mov
jns
(bad)
xor
pop
es
(bad)
pop
inc
adc
sbb
dec
xor
fisubr
dec
jno
pop
mov
js
repz
mov
and
fdivr
ror
pop
(bad)
test
imul
sbb
fmul
mov
sub
rcr
pushf
xchg
pop
inc
sbb
out
pushf
cld
rcl
ja
(bad)
sub
iret
movs
mov
test
in
xor
test
mov
outs
idiv
stos
jbe
jg
rcr
lds
cmp
outs
imul
je
inc
outs
fisttp
push
loopne
sar
mov
shr
pop
and
jecxz
jle
movs
push
mov
sahf
lock
jbe
ja
ds
cmp
adc
les
gs
mov
imul
adc
xchg
out
int
mov
daa
ret
inc
cld
nop
push
xlat
mov
cmp
popf
inc
std
jno
bound
jp
(bad)
idiv
jl
adc
and
sbb
jo
aas
cld
mov
mov
mov
mov
or
xchg
mov
out
shl
push
and
jno
mov
sbb
pusha
xor
push
push
push
das
mov
dec
test
jmp
pop
dec
test
mov
cdq
imul
push
pop
mov
inc
clc
push
mov
call
test
mov
dec
les
pop
fcom
mov
scas
fdivr
arpl
xor
sub
inc
push
rol
pop
or
dec
outs
xlat
(bad)
xor
repnz
scas
mov
out
stc
je
inc
adc
xchg
jbe
enter
mov
fstp
sahf
dec
aam
cmp
adc
mov
bound
das
jge
sub
jo
test
out
sar
call
shl
mov
pop
scas
cmps
ret
pop
cmps
inc
pop
xchg
stc
jl
push
xchg
pop
int
fsubr
ins
or
xlat
adc
or
or
icebp
imul
lock
push
imul
sbb
xchg
jno
or
or
pop
fimul
retf
call
and
jmp
sti
fsub
aaa
push
cmp
mov
push
or
cld
jmp
cmp
stos
mov
dec
inc
jb
cli
push
(bad)
out
add
(bad)
lods
jae
loop
jmp
jmp
retf
popf
pop
(bad)
pop
or
mov
jmp
dec
jl
movs
repnz
stos
fldcw
ins
fldenv
adc
mov
jnp
fmul
enter
test
pop
retf
into
in
xchg
and
out
and
pop
push
gs
xor
dec
aad
push
cmp
sti
jns
push
sbb
dec
dec
mov
movs
xchg
paddsw
sub
mov
in
out
outs
sub
ss
and
dec
out
leave
cmp
movs
cs
gs
sbb
enter
dec
mov
dec
cmp
aaa
aad
mov
out
jnp
add
popa
xor
sti
xchg
and
rcl
adc
test
xchg
dec
mov
mov
out
loope
add
loopne
add
jg
pop
xor
stos
cdq
add
addr16
cwde
in
cmp
or
adc
sbb
mov
adc
pop
mov
sbb
popf
(bad)
push
(bad)
fadd
pop
pop
add
pop
loopne
test
push
push
(bad)
inc
or
inc
out
inc
add
mov
lds
outs
imul
mov
(bad)
in
scas
dec
in
push
js
mov
jecxz
dec
dec
xchg
jne
imul
mov
pop
out
jb
(bad)
ds
aad
lds
inc
or
test
sbb
xor
popa
jne
movs
dec
es
imul
fdiv
cmp
je
mov
int
sub
ss
out
sar
pop
add
aam
mov
xor
jp
cmp
push
aaa
jnp
cmps
fwait
mov
sahf
daa
dec
jmp
mov
add
sbb
pop
lods
inc
shl
mov
(bad)
jns
call
loope
cmp
cmps
pop
and
lods
xchg
fnsave
pop
sbb
sub
sbb
jg
cli
mov
dec
loopne
js
sub
frstor
ja
cmp
lods
test
outs
mov
xchg
int
mov
add
adc
pop
mov
add
dec
fnsave
jae
push
sbb
jne
mov
push
push
test
pusha
popf
adc
mov
fcomp
mov
ins
clc
(bad)
and
popf
mov
sub
int
lods
xchg
ror
cdq
jp
icebp
inc
aaa
push
pop
pop
ss
sub
clc
sub
cmp
and
adc
out
(bad)
jmp
int3
and
movs
mul
lds
add
jb
dec
add
jmp
mov
sub
mov
add
cmp
lods
cmp
ja
and
xchg
mov
movs
fwait
test
sbb
dec
retf
test
mov
jmp
push
mov
inc
mov
in
xchg
jle
ret
xor
or
icebp
loop
pop
fwait
sar
add
sub
lock
push
sbb
inc
push
test
rol
sbb
push
sub
ret
lds
lea
sqrtps
loopne
jge
sub
fs
cmc
mov
cld
inc
or
xchg
dec
mov
xchg
xchg
lods
and
or
sbb
push
jl
sbb
scas
repnz
ror
es
mov
xor
pop
cmp
xchg
mov
mov
aaa
add
loope
pop
sbb
cmp
call
repnz
add
je
lods
jno
pcmpgtw
je
aas
aas
nop
xchg
and
aas
loopne
popa
xor
push
xchg
clc
aad
rol
lods
mov
stc
mov
cmps
cmp
mov
cdq
in
movs
jmp
fidiv
lock
cli
(bad)
pop
sbb
mov
jae
sar
ret
xchg
add
pop
imul
xchg
push
add
push
sub
push
lahf
xor
dec
fcmovnb
inc
sbb
add
shl
movs
js
inc
nop
fucom
cld
pop
sbb
dec
data16
cs
push
fild
outs
jnp
movs
ins
mov
sar
scas
in
scas
xchg
adc
shl
stos
sbb
push
sar
out
mov
rol
mov
repnz
xchg
sbb
(bad)
shld
dec
mov
into
daa
arpl
jl
lock
(bad)
imul
cmp
cvtpi2ps
jno
jge
or
(bad)
mov
scas
mov
dec
xor
dec
pop
(bad)
(bad)
mov
inc
test
aaa
lahf
mov
loop
lods
lea
push
add
xchg
repnz
cli
inc
and
mov
pop
jl
data16
lods
aas
push
lods
ins
int
int3
pop
cmps
or
mov
iret
inc
xchg
ds
mov
adc
fdivr
cmp
fnsave
cli
adc
into
mov
fcom
pop
retf
loopne
or
cli
xchg
int
add
sbb
ja
jle
sar
popa
in
xchg
sti
jg
loope
inc
enter
lods
outs
cli
and
outs
xchg
popf
out
pop
imul
jl
xor
xor
or
cmp
pop
jl
imul
push
shl
mov
icebp
adc
jecxz
fs
mov
push
(bad)
les
jmp
ss
js
sub
rcl
sbb
clc
xchg
push
bnd
mov
pop
sbb
outs
adc
push
ss
mov
jle
sbb
dec
lods
inc
dec
xchg
into
sbb
in
adc
pusha
pop
das
lods
inc
mov
jmp
fwait
call
push
jnp
mov
(bad)
cdq
frstor
cs
add
pop
and
(bad)
cmp
jae
int
stos
sbb
mov
rol
push
xor
inc
add
mov
or
mov
push
xchg
adc
push
push
xor
xchg
mov
push
cdq
xchg
mov
mov
mov
outs
pop
loope
jle
ss
jmp
mov
mov
out
jl
fdiv
and
test
mov
xor
xchg
mov
scas
jge
dec
je
adc
dec
push
xor
in
push
(bad)
mov
fst
adc
mov
cmp
retf
mov
mov
push
(bad)
xlat
xor
adc
dec
or
xchg
lods
mov
mov
pop
xchg
cmps
mov
cs
call
jle
inc
loope
inc
adc
sub
mov
push
or
outs
push
pop
dec
dec
in
dec
nop
sbb
jl
in
cli
pop
sub
ror
sub
cwde
jg
or
cmp
add
pop
aas
inc
xchg
bound
push
dec
jle
in
bound
mov
es
ds
outs
push
cmp
push
jge
add
and
nop
scas
adc
adc
push
dec
cld
imul
(bad)
retf
inc
loopne
imul
adc
xchg
pop
pop
call
jp
lahf
sbb
in
pushf
cmc
pop
jecxz
mov
add
or
shl
lahf
shl
pop
mov
or
mov
jmp
cmp
fsubp
jp
ds
test
cmc
xor
jns
fnstsw
mov
stc
stc
jg
ds
fwait
mov
cmp
or
fisttp
xchg
xor
mov
dec
mov
imul
inc
push
imul
fmul
sub
and
jns
and
test
inc
adc
adc
xchg
adc
jne
xor
cdq
(bad)
cmp
jle
inc
imul
out
rcl
add
push
add
dec
arpl
dec
js
push
cmp
popa
add
sbb
sub
call
mov
lahf
cmp
push
and
fcmovbe
cmp
pop
fild
(bad)
or
stos
push
sbb
mov
mov
cmp
cmp
shl
call
outs
ret
lds
pop
fadd
sbb
in
ficomp
push
repnz
push
and
iret
xor
xor
shl
xchg
arpl
rcl
retf
rcl
lds
cdq
xchg
sti
ror
movs
cmps
dec
call
push
inc
ins
push
in
jne
xor
scas
outs
dec
cmps
mov
jmp
and
out
add
loopne
jecxz
jnp
mov
sbb
fsubp
sti
hlt
pop
dec
inc
sub
xor
adc
out
mov
add
rcr
jne
loopne
sub
les
mov
dec
dec
jo
add
retf
stos
dec
jmp
jmp
pop
cmp
movs
xchg
mov
inc
mov
addr16
xchg
sti
inc
dec
inc
pop
inc
sbb
sub
mov
aam
mov
pop
dec
retf
call
(bad)
cmp
lock
pop
(bad)
movs
sar
call
lods
es
jno
pop
xchg
jae
mov
neg
xchg
call
jbe
pop
push
pop
cmp
test
arpl
xlat
scas
pop
popf
jge
jne
jl
inc
inc
adc
fiadd
fwait
inc
(bad)
aas
stos
pop
fcomi
sub
mov
mov
jecxz
sti
cmps
cmp
fiadd
out
stos
pop
adc
add
ja
adc
ins
outs
xchg
sbb
pop
clc
arpl
pop
add
mov
popf
mov
sbb
test
pop
xchg
retf
xchg
adc
or
std
std
les
sbb
(bad)
hlt
retf
out
jp
pop
ja
jbe
pop
into
clc
xor
cmp
imul
fucomp
loopne
mov
fstp
dec
inc
adc
inc
xor
shl
mov
sub
enter
inc
out
mov
(bad)
dec
and
std
fdiv
arpl
out
sysret
les
jmp
xchg
mov
loop
mov
xchg
push
mov
sbb
in
cwde
add
adc
(bad)
call
les
ins
and
mov
call
xor
dec
sbb
sub
mov
pop
cmp
mov
scas
bound
call
sar
jbe
xchg
cmc
sub
or
xchg
lock
xor
and
clc
gs
bound
or
imul
and
call
xchg
retf
push
mov
call
push
xchg
adc
mov
dec
jmp
add
jmp
mov
imul
sbb
push
mov
in
mov
mov
mov
inc
mov
or
(bad)
mov
cmp
sbb
pop
inc
cs
jl
jl
mov
mov
shl
mov
pop
sbb
and
mov
mov
add
xor
or
mov
adc
(bad)
xor
retf
jne
jg
xor
aaa
mov
or
fwait
iret
sbb
or
int
stos
xchg
rol
sbb
mov
and
cmp
imul
push
adc
inc
retf
bnd
jno
push
xor
mov
cmp
cmps
jmp
push
push
sub
mov
fisubr
rcr
and
fstp
rcr
nop
xlat
es
and
sub
jl
js
add
or
jge
movs
add
add
mov
adc
movs
in
sbb
rol
mov
xchg
add
ja
xchg
hlt
push
daa
int3
int3
push
cmp
push
push
jle
into
push
and
ja
loope
je
cs
jmp
cmp
cmp
jb
inc
push
sbb
adc
hlt
leave
ds
jb
ja
jmp
inc
jmp
and
loopne
bound
das
gs
mov
mov
icebp
stc
push
out
cmps
jo
xchg
leave
push
stc
fisttp
loopne
xchg
call
out
xor
out
sbb
sti
lods
xor
int
movs
inc
leave
sbb
cmps
push
sbb
push
cmps
push
push
sbb
dec
mov
call
pop
out
fcomp
push
daa
or
movs
fmul
sub
out
inc
cli
(bad)
std
enter
or
adc
xor
dec
push
or
jae
mov
xchg
out
sub
sbb
xor
sbb
int
lahf
xchg
ss
retf
add
lahf
xchg
enter
xor
xchg
es
fs
fs
and
fisubr
ins
out
cmp
std
hlt
sub
sub
loop
pop
add
shl
push
xor
push
jge
adc
pushf
adc
scas
bound
jae
hlt
fld
addr16
sbb
xor
mov
jl
not
inc
icebp
(bad)
mov
add
pop
and
sub
mov
pusha
ja
dec
ds
mov
push
sbb
xchg
dec
lods
push
shl
or
pop
xchg
fbstp
push
push
push
jecxz
dec
clc
retf
aad
les
cdq
push
cmp
outs
js
inc
cs
jno
lds
push
dec
mov
sbb
ret
mov
outs
test
or
fld
push
arpl
int
test
cmp
sbb
out
xor
stos
inc
sti
adc
not
mov
cmp
fmul
cmps
jbe
popa
inc
dec
inc
jne
(bad)
jnp
push
not
sub
scas
clc
jae
daa
adc
push
je
fs
inc
cld
out
loop
sub
pop
and
sub
mov
pushf
add
sbb
bnd
jbe
call
sbb
out
jno
cmp
outs
xor
repnz
xchg
push
mov
rcr
xor
xchg
mov
add
les
mov
and
movs
mov
(bad)
js
dec
pop
push
sub
imul
push
add
add
jp
pop
jmp
push
push
mov
and
enter
pop
iret
add
and
ss
jno
lahf
iret
and
fs
lods
push
cmp
cmp
cmp
in
push
xchg
lea
ror
pop
clc
fiadd
pop
sbb
mov
fisub
xchg
add
adc
idiv
cmps
call
inc
adc
jnp
dec
sahf
jbe
sbb
mov
add
or
sub
push
pop
sbb
adc
mov
cmps
or
test
popa
push
daa
mov
(bad)
xchg
pop
mov
(bad)
popa
xchg
test
je
mov
sub
pop
test
inc
mov
movsx
push
pop
and
imul
shl
aas
je
ret
fdiv
xor
fnstenv
and
pushf
clc
fiadd
push
ss
sbb
subps
dec
inc
mov
add
dec
add
addr16
std
aas
ins
mov
ja
and
pop
mov
call
push
ret
jo
sbb
push
inc
mov
and
and
fsub
pop
in
adc
sbb
sti
dec
mov
test
js
test
stc
xchg
jg
mov
idiv
push
ds
sahf
inc
push
fild
jae
jne
mov
adc
retf
dec
dec
mov
dec
mov
mov
mov
imul
inc
sahf
clc
retf
sar
loopne
aas
inc
add
and
(bad)
jae
popa
dec
(bad)
inc
in
or
jecxz
std
sbb
add
or
pusha
jg
out
push
jge
jmp
dec
mov
das
fnstcw
jmp
leave
inc
test
das
cmp
jmp
sub
pop
cmp
test
sub
int
iret
push
pop
retf
rcl
push
aas
popf
out
xor
fs
xchg
and
xlat
data16
(bad)
pop
sbb
dec
add
and
jnp
les
cli
pop
jmp
xchg
and
dec
pop
(bad)
jbe
sbb
or
cmp
mov
push
je
rol
sub
loope
out
lods
cmp
jl
rol
out
mov
mul
(bad)
mov
jo
lods
jge
pavgb
fwait
int
mov
(bad)
pop
jge
xor
push
cmp
and
xor
xor
lock
call
rcl
lock
test
jmp
(bad)
call
xchg
nop
sar
stc
ins
pop
sub
lods
xchg
mov
and
mov
and
and
je
movs
nop
add
repz
icebp
sub
sbb
cdq
add
stos
jnp
arpl
ins
jne
and
or
sbb
inc
dec
jae
dec
cmp
pop
iret
stos
outs
and
xlat
and
xchg
sbb
cmc
(bad)
push
lds
pusha
(bad)
jne
mov
pop
je
jmp
movs
xchg
or
imul
addr16
sti
ds
outs
pop
xor
imul
mov
dec
ror
mov
add
sbb
add
fisubr
jb
cmp
adc
mov
jb
pop
sbb
xchg
mov
mov
sub
scas
xchg
cmps
push
leave
cmps
int
push
ja
mov
shl
inc
leave
dec
leave
pop
xchg
dec
jo
sbb
adc
sbb
data16
mov
push
cdq
das
(bad)
bound
and
call
div
add
xor
mov
repz
scas
cmp
sbb
popa
adc
and
(bad)
lds
fwait
cld
or
imul
pop
mov
mov
add
dec
jns
sbb
sbb
test
cmp
push
push
inc
adc
jb
stos
out
fnstsw
xor
xchg
daa
adc
imul
and
cwde
and
test
dec
push
push
xor
sub
test
xor
sar
inc
push
sub
jle
xchg
sbb
fldenv
cld
xchg
inc
push
retf
rcr
int3
shl
rol
jg
cmps
mov
mov
test
jg
ja
pop
data16
ret
clc
aam
sub
cld
jae
push
je
mov
outs
or
fmul
sbb
cld
adc
xor
in
pop
loop
jg
mov
stos
jno
mov
mov
mov
into
out
cmp
addr16
xlat
and
pop
ret
jns
and
adc
retf
test
jb
daa
cwde
jae
pop
jle
sbb
bound
(bad)
mov
sub
ficomp
and
retf
test
inc
(bad)
mov
les
mov
stos
pop
in
arpl
sub
arpl
(bad)
scas
arpl
aam
mov
push
mov
sar
adc
or
enter
add
loop
pop
sahf
add
stos
repz
or
daa
jnp
sub
inc
imul
mov
jb
(bad)
xor
jb
gs
out
mov
add
in
nop
hlt
(bad)
pop
cs
lock
lahf
jmpw
mov
and
dec
repz
and
sub
in
sub
hlt
cmp
retf
lahf
inc
fld
loope
ss
jmp
pop
lea
sub
and
lods
(bad)
mov
movs
xor
ffree
mov
aas
shl
sbb
icebp
add
jmp
xchg
xor
mov
fld
loop
loop
add
cmp
cmc
in
mov
imul
repz
mov
rcl
sub
rol
adc
enter
pop
into
sub
push
pop
out
cmp
adc
push
cmp
xor
mov
ja
jle
je
loope
push
cld
out
xchg
clc
add
mov
push
add
pop
bound
shl
scas
fucomi
mov
and
lahf
push
adc
fistp
test
repz
push
(bad)
aad
cli
scas
inc
mov
push
daa
jmp
push
pop
mov
retf
xchg
icebp
pop
mov
aam
xchg
loop
jb
mov
cdq
or
mov
sbb
mov
jno
outs
pop
lea
pusha
mov
lock
cmps
in
jns
ja
outs
xchg
cs
ins
xchg
xchg
jl
data16
adc
movs
scas
(bad)
sbb
pushf
mov
ins
add
xor
mov
stos
or
scas
(bad)
enter
inc
mov
jmp
outs
and
xchg
not
gs
arpl
(bad)
enter
pop
push
mov
rcr
lahf
in
and
or
sahf
or
retf
shr
fisub
(bad)
push
out
test
mov
aam
jno
sbb
cmp
retf
jo
and
test
aas
xchg
adc
xchg
test
popa
das
mov
mov
sub
loopne
add
mov
rcl
jae
mov
pop
int
adc
movs
call
dec
js
push
push
push
xchg
mov
pop
popf
fldcw
inc
cdq
ins
sub
inc
inc
xor
adc
cmp
lods
cmc
je
outs
test
add
push
stos
add
mov
enter
or
push
adc
pop
sti
(bad)
pop
je
mov
push
mov
mov
arpl
mov
xchg
or
inc
sub
or
repz
pop
rcr
das
iret
inc
xchg
mov
cli
lds
mov
fnstenv
sti
mov
out
fild
jmp
mov
imul
inc
stos
cs
inc
mov
or
int
mov
mov
or
jae
out
fiadd
sub
sbb
jle
dec
jl
dec
dec
mov
enter
and
jo
outs
test
std
loopne
ret
fld
fst
sbb
jecxz
push
gs
out
in
out
inc
retf
add
mov
jbe
sti
xchg
xor
loop
jg
cwde
xchg
inc
inc
movs
adc
les
mov
ror
sahf
push
xchg
push
shl
sti
sbb
inc
test
jge
aam
jg
stos
daa
sbb
mov
cmp
inc
xor
movd
pop
adc
ins
jge
push
sub
mov
or
test
ds
mov
rol
enter
int3
xor
mov
and
mov
lock
pop
pusha
(bad)
lea
xchg
popf
cs
or
imul
xor
add
pusha
pop
jp
lahf
enter
adc
aam
sbb
(bad)
and
fxch
shr
push
call
pop
cmc
arpl
sub
jmp
fldenv
out
pop
jecxz
and
fst
outs
aaa
jns
jbe
addr16
jo
sbb
mov
repnz
push
inc
inc
repnz
add
inc
(bad)
fcmovbe
and
or
mov
cmc
inc
jnp
repnz
pop
add
adc
mov
fsubp
jnp
sar
fmul
xor
lods
xor
mov
cli
xchg
fnstsw
ja
das
mov
aaa
pop
mov
push
mov
mov
sub
ficom
jge
stos
scas
into
adc
sub
sbb
xor
hlt
out
inc
push
test
add
mov
or
jl
stos
movs
sbb
adc
lods
dec
or
popf
jmp
add
or
std
adc
pop
sub
jno
test
add
cmp
push
sti
retf
xlat
aad
fwait
cmc
cmp
mov
sub
mov
pop
test
mov
shr
sbb
cs
and
xlat
cwde
scas
ret
loop
aaa
sahf
mov
xchg
or
repnz
gs
jmp
mov
retf
push
push
loop
test
or
push
cdq
pusha
sub
pop
and
cmp
push
(bad)
add
(bad)
dec
mov
xchg
fiadd
or
(bad)
cmp
jp
arpl
xchg
mov
add
call
mov
mov
or
push
mov
jno
xor
mov
in
pusha
dec
pushf
inc
aad
mov
or
dec
xlat
movs
(bad)
cs
fst
inc
jno
bound
mov
call
das
clc
loope
cmp
jno
retf
aad
mov
inc
out
loope
dec
inc
retf
and
sub
jmp
mov
lock
jae
xor
add
dec
shr
ins
xor
out
xor
pop
fild
sbb
push
pop
mov
xchg
stos
sbb
sti
and
mov
sahf
test
add
mov
cmc
xor
push
mov
push
pusha
leave
lahf
add
lock
fimul
lock
pop
or
adc
test
or
idiv
mov
aas
mov
sub
jge
xchg
pushf
shl
push
adc
lahf
int3
nop
mov
adc
in
sub
pop
lods
mov
arpl
xlat
push
movs
xor
push
dec
or
push
test
(bad)
and
inc
pusha
fwait
xor
fmulp
div
into
std
cmp
push
jg
xchg
pop
sbb
inc
cs
xchg
cmp
mov
xchg
imul
clc
cs
adc
popf
adc
rcl
jecxz
cli
test
inc
push
sbb
or
fdivr
or
mov
jb
repz
imul
sub
push
add
or
jle
and
sbb
(bad)
pop
shl
cmp
push
mov
mov
inc
stos
fsub
pop
add
aad
int
dec
(bad)
scas
cmp
ficomp
js
adc
jge
xor
sahf
cmp
and
(bad)
dec
cld
or
sub
cmps
sbb
int
cmp
mov
and
mov
cmps
push
pop
xlat
or
mov
and
ror
add
repz
inc
mov
xor
sbb
pop
xchg
out
ror
cmps
cmp
adc
pop
or
(bad)
jae
push
mov
push
mov
dec
loopne
ja
pop
mov
jmp
std
jb
or
(bad)
divps
sbb
mov
pusha
dec
pop
or
jecxz
mov
mov
xor
or
or
in
das
fst
outs
xor
dec
cmps
sbb
sbb
dec
fidivr
cmp
sub
dec
jns
nop
xor
xchg
or
cmp
ins
pop
xchg
fs
mov
cmps
imul
movs
sbb
out
inc
or
push
adc
out
les
cmp
cmc
retf
fldcw
cmp
sub
and
into
jbe
nop
fiadd
mov
dec
or
int
rol
cli
inc
xor
mov
and
mov
stc
push
out
loop
add
ins
jae
xlat
test
pop
pop
cmp
ret
into
popf
and
mov
arpl
ret
pop
aad
push
jmp
scas
sbb
loopne
popa
xor
stc
stos
fld
data16
sub
cwde
lahf
xchg
cbw
cmp
pop
outs
add
arpl
ins
mov
test
fldcw
pop
push
push
scas
das
dec
mov
adc
dec
mov
fdiv
leave
pop
dec
in
sbb
sbb
dec
mov
or
cmps
movs
jns
in
in
mov
nop
int
adc
(bad)
dec
mov
pop
mov
test
nop
sbb
lea
loopne
scas
(bad)
sbb
sub
stos
js
xchg
mov
lods
lods
popa
daa
ret
mov
test
push
(bad)
inc
adc
fidiv
mov
retf
sub
ins
fsubr
cmp
icebp
sbb
hlt
add
dec
aas
jmp
sbb
mov
jnp
mov
mov
push
jnp
and
adc
test
cwde
jmp
addr16
enter
jb
jecxz
fs
sbb
pusha
pushf
pop
fnstcw
repz
hlt
mov
(bad)
jge
(bad)
jo
loopne
out
ficom
inc
dec
nop
xchg
ins
mov
lahf
cmp
loopne
fbstp
add
in
jle
sahf
sub
rcr
test
ds
je
mov
repz
xor
adc
lock
mov
cmp
push
dec
inc
pusha
arpl
adc
cmp
mov
push
xor
sbb
xchg
mov
sub
jp
cmp
call
hlt
fucomip
pusha
mov
jae
mov
mov
mov
xchg
data16
mov
test
jnp
jle
inc
mov
outs
and
mov
add
mov
cwde
stc
sbb
inc
add
cmp
pop
dec
jge
inc
sahf
jo
pop
mov
das
xchg
xchg
mov
sbb
fdiv
push
(bad)
xchg
sbb
retf
and
mov
jo
icebp
data16
or
hlt
dec
mov
jne
push
or
stc
lea
push
push
or
test
xchg
and
lds
bound
(bad)
push
pop
test
iret
scas
mov
xor
cmp
mov
pop
dec
push
(bad)
aad
call
cmp
(bad)
cmp
movs
and
jnp
cdq
mov
adc
cmps
or
push
adc
jecxz
mov
push
jne
sahf
dec
std
adc
ret
shr
pusha
and
ins
xchg
add
xchg
out
add
aad
shl
mov
adc
mov
imul
dec
rcl
push
jle
repnz
pop
mov
cwde
cmp
inc
xor
inc
fnstenv
or
add
dec
xor
cld
fs
sub
aad
or
pop
add
jmp
daa
std
adc
mov
(bad)
mov
test
inc
xor
cmps
jne
push
scas
fidiv
xor
cmp
sub
cli
xlat
sti
push
xlat
ds
stos
jno
inc
mov
fld
pop
in
inc
jp
xor
and
or
xchg
(bad)
je
push
jae
push
mov
test
fld
sbb
scas
in
addr16
shl
push
adc
mov
cmc
and
push
push
mov
mov
adc
mov
adc
lods
adc
xor
and
mov
add
sbb
int3
mov
in
fimul
stos
mov
push
stc
or
js
ror
mov
add
outs
ins
xor
jle
xchg
cmp
xchg
shl
in
(bad)
jge
adc
sahf
sti
add
inc
sub
jmp
push
popf
aaa
xlat
pop
and
add
pop
and
xor
(bad)
inc
call
mov
inc
ret
das
add
imul
jb
ficomp
cmp
ds
mov
sbb
sti
clc
jne
sahf
bound
scas
aam
push
pop
jbe
test
cs
fnstcw
stos
xlat
inc
mov
out
and
jno
and
dec
jo
push
aas
into
sbb
push
add
xchg
dec
pop
cmp
jmp
xchg
mov
(bad)
jecxz
mov
inc
add
(bad)
ds
arpl
pop
loopne
and
and
iret
aaa
cmp
cmp
add
push
nop
int3
and
adc
xchg
ja
outs
lods
mov
lea
call
sbb
mov
fwait
fwait
push
enter
inc
jmp
push
daa
xrelease
jo
dec
pushf
push
inc
jae
push
mov
enter
mov
sub
aam
sbb
movs
fldcw
imul
adc
sar
(bad)
ins
jp
sub
fidivr
mov
ret
mov
aam
sbb
movs
jl
clc
or
add
and
mov
cmp
repz
and
adc
or
icebp
xor
jo
loopne
(bad)
aas
sbb
inc
dec
jge
std
mov
pop
pop
jb
xchg
xor
mov
popf
jle
sub
jg
retf
sbb
(bad)
xchg
sbb
mov
and
mov
dec
test
shl
aaa
scas
sub
movs
bound
jno
push
iret
mov
jg
xor
push
popa
dec
push
mov
aam
inc
das
inc
jl
(bad)
fiadd
das
mov
mov
jmp
jbe
jge
fiadd
inc
ins
jne
int
lds
setp
in
pusha
stos
mov
sbb
jmp
imul
dec
call
pop
jle
stc
lea
leave
mov
aad
push
fistp
and
or
push
push
lds
inc
outs
pop
shr
xchg
push
out
sub
gs
pop
cli
test
jbe
or
rcl
gs
push
cmp
push
fistp
mov
cmps
xor
xchg
sub
xchg
sbb
cmp
add
jbe
cmp
out
xor
mov
mov
push
leave
dec
cmp
hlt
outs
and
inc
popf
pop
fimul
jns
cmp
mov
sub
push
pop
pop
sbb
pop
sbb
in
mov
add
or
inc
ins
mov
add
sub
sub
pop
dec
int
mov
mov
pop
pop
imul
cmp
shl
popa
push
jnp
mov
test
and
mov
mov
cwde
scas
cs
outs
(bad)
cmp
ror
inc
fcom
pop
xchg
fstp
cld
xchg
sbb
(bad)
in
shl
call
cmp
adc
jle
sbb
jle
jno
jae
cdq
xchg
leave
das
loop
test
in
sar
add
inc
test
push
je
or
dec
std
clc
push
or
mov
repz
loope
dec
fcomp
movs
in
stc
adc
nop
fmul
push
push
xlat
cmp
lahf
pop
mov
rcl
je
sub
and
hlt
cmp
int
xchg
imul
rcl
(bad)
xchg
jmp
nop
jb
push
pop
aaa
icebp
and
pop
jb
fmul
sub
pop
jno
sti
jno
sbb
mov
icebp
lds
aam
jno
pushf
inc
and
lahf
jmp
aas
(bad)
int
push
push
dec
loope
cmp
xor
inc
call
and
loop
sbb
cmp
stos
cmp
adc
ret
and
push
aas
and
and
(bad)
jnp
pop
dec
std
cdq
xlat
cmp
mov
dec
sub
add
out
mov
popf
(bad)
mov
dec
push
dec
or
xlat
shl
add
arpl
daa
addr16
ss
(bad)
or
jecxz
aaa
inc
loope
dec
scas
or
(bad)
push
and
adc
icebp
popa
mov
sub
cmp
mov
ret
cmp
arpl
daa
add
jge
ja
add
sub
mov
int
shr
mov
pop
and
outs
and
jp
lods
repnz
(bad)
dec
mov
enter
xor
stos
imul
push
xchg
stos
call
mov
mov
xchg
int
adc
in
in
sub
sub
cmp
xchg
add
xor
and
and
push
sbb
xchg
lods
in
mov
xchg
xor
fadd
push
add
sbb
std
(bad)
aas
(bad)
sbb
jl
or
inc
retf
mov
add
ret
push
add
adc
pop
into
sbb
stc
aad
je
xor
add
cld
fistp
mov
inc
fist
mul
pusha
in
sub
push
inc
inc
dec
out
aaa
js
in
push
xchg
xor
movs
aad
lea
repz
pop
jmp
and
je
adc
cmp
add
je
and
dec
cmp
movs
add
stos
imul
(bad)
pop
out
push
call
fist
mov
sti
arpl
aas
mov
in
jo
pop
inc
xor
(bad)
sbb
xor
jle
jnp
aad
add
inc
in
movs
(bad)
int
popf
sbb
movs
and
sbb
in
scas
dec
cdq
sub
add
adc
lods
add
sub
push
dec
dec
mov
jl
rcl
outs
push
das
and
fbld
sbb
loope
std
enter
push
dec
mov
mov
push
mov
mov
test
mov
rcl
leave
fwait
jl
and
std
loopne
inc
cmp
add
dec
cmp
push
jno
pop
imul
mov
in
jns
xchg
xchg
fiadd
scas
aas
cmps
je
inc
(bad)
push
and
int3
mov
and
cmp
ret
ror
(bad)
xor
cmp
inc
mov
stos
sub
push
or
mov
aam
xchg
aam
and
dec
sti
ins
or
mov
sub
add
lods
cs
and
retf
cmps
push
(bad)
cdq
jno
pop
xor
shl
mov
xlat
call
or
fld
adc
pop
clc
inc
and
jae
pop
xor
data16
enter
mov
mov
sbb
jnp
sbb
and
push
jbe
adc
repnz
sahf
arpl
push
hlt
jne
ins
push
mov
inc
call
sbb
daa
mov
les
mov
jmp
bound
cmp
pop
dec
adc
sbb
xor
popa
cmp
add
ins
cmp
mov
dec
add
xor
int
sub
inc
cli
shl
and
loopne
cmp
lock
das
dec
xchg
push
fwait
retf
or
xor
retf
in
sub
cmp
adc
int3
inc
mov
rcl
sub
and
mov
outs
pop
fimul
and
popf
nop
pop
mov
getsec
push
cmps
cmp
fnsetpm(287
(bad)
lods
pop
fwait
mov
in
jbe
push
je
test
or
ins
inc
inc
loopne
fidivr
jbe
mov
lds
fst
inc
mov
sub
cmp
cli
push
lods
sub
mov
sbb
adc
and
pop
out
(bad)
lods
(bad)
and
ror
mov
sti
repz
push
cmc
cwde
jne
clc
outs
jbe
xchg
inc
in
mov
add
sbb
imul
retf
cld
or
mov
mov
test
in
lea
mov
sti
lods
ror
into
test
in
mov
les
inc
lahf
inc
adc
xor
gs
(bad)
sbb
sbb
sub
cmps
test
out
xor
out
mov
inc
mov
adc
lock
pop
les
mov
and
movs
out
push
push
and
mov
aad
adc
loopne
xchg
sbb
int3
out
retf
retf
pop
mov
lahf
mov
mov
add
vmread
push
fwait
xor
pop
sbb
push
sub
pop
sbb
and
dec
xchg
pusha
std
pop
sub
cmp
pop
stc
leave
into
(bad)
jmp
jle
xlat
les
adc
push
leave
js
shl
cwde
dec
sahf
(bad)
loope
leave
push
jnp
movs
mov
add
add
out
mov
xchg
call
xor
fadd
mov
jne
fmul
(bad)
loopne
xor
mul
jle
(bad)
add
loopne
sub
mov
ja
mov
outs
pop
sub
mov
ret
je
pop
xchg
pop
jmp
mov
fwait
retf
sbb
data16
(bad)
rcl
lods
jne
nop
hlt
inc
or
mov
push
inc
test
cmp
sub
hlt
stc
push
add
outs
add
popa
jbe
pop
jns
out
iret
lea
jge
imul
xchg
or
or
push
adc
ins
inc
ins
xor
cmp
xchg
sub
pop
adc
mov
pop
mov
sub
(bad)
pop
sub
push
mov
inc
shl
addr16
lock
(bad)
mov
jg
daa
mov
repnz
out
or
xor
call
inc
sub
inc
and
inc
icebp
jae
movs
or
dec
xor
pop
inc
push
cmp
(bad)
fdivr
mov
sti
dec
sbb
cmps
rol
call
mov
rcl
or
jb
dec
rcr
jae
pop
push
sbb
(bad)
pop
imul
arpl
sar
call
movs
xchg
scas
outs
fdivrp
cdq
xchg
add
sbb
pop
or
cdq
call
mov
ss
jmp
mov
jae
or
cmp
sbb
sub
daa
xchg
fwait
xor
sub
call
(bad)
in
int3
jg
loopne
fistp
add
adc
adc
lea
sbb
mov
lahf
add
scas
and
xchg
or
sti
loop
xchg
sahf
pushf
mov
inc
sar
mov
pop
xor
xor
(bad)
idiv
adc
aas
cmp
push
pushf
lds
dec
or
xchg
jge
(bad)
adc
movs
xchg
ffreep
or
cmp
and
mov
jno
jge
xchg
(bad)
bnd
jle
imul
mov
cdq
xor
dec
adc
xchg
jmp
sub
shl
out
fcom
out
lods
inc
test
mov
test
lahf
movs
hlt
or
mov
les
in
sbb
les
pop
out
iret
dec
clc
jnp
(bad)
jae
xchg
movs
rcl
sub
mov
inc
xchg
cmc
xchg
jo
sti
push
fnstsw
and
std
fld
dec
sahf
push
pop
and
push
fist
inc
aam
add
call
dec
loopne
mov
inc
shl
pop
add
pop
mov
and
test
gs
test
xchg
push
pop
fdivp
or
push
sbb
test
xor
adc
out
dec
inc
mov
xor
stc
cmp
xchg
xor
xchg
int
xor
movs
pop
fxch
mov
in
icebp
bound
lods
push
xchg
push
ss
mov
fistp
mov
in
cmp
dec
dec
dec
aaa
fmul
or
cld
mov
stos
jecxz
retf
push
test
and
pushf
sahf
pusha
ror
and
into
hlt
mov
div
or
pop
cmps
or
pop
inc
adc
mov
scas
inc
mov
xor
out
or
cmp
xor
pop
sbb
(bad)
dec
pop
dec
imul
int3
xchg
movs
nop
out
add
movs
mov
lds
sub
jb
mov
mov
cmp
call
ins
and
dec
jmp
jmp
ins
fidiv
aam
in
scas
xchg
pop
cmp
and
pop
sti
out
(bad)
jge
jge
add
aaa
xchg
dec
cwde
retf
(bad)
add
cmc
jnp
inc
jge
loopne
inc
jmp
repz
cmps
mov
hlt
cld
mov
push
mov
mov
popf
xchg
push
jmp
rol
jb
mov
sar
scas
ret
add
pop
cwde
sar
ds
pushf
dec
add
jle
mov
cmps
mov
hlt
out
mov
scas
adc
push
pop
pop
jne
lock
add
test
xor
gs
mov
out
or
clc
and
aam
aad
mov
adc
push
call
int3
jg
pop
test
mov
fnstsw
mov
sbb
cmp
loope
jae
(bad)
mov
sbb
inc
pushf
or
out
pop
dec
jns
xlat
stos
cmp
sahf
enter
pop
test
mov
cmp
xchg
js
mov
sub
jle
js
fisttp
jl
outs
inc
cdq
in
xor
push
and
mov
popa
nop
fcomp
dec
mov
je
div
add
jl
call
fld
push
in
push
sbb
and
js
(bad)
and
pop
adc
jmp
out
hlt
ins
add
nop
jae
xor
sbb
shl
stos
addr16
cmp
push
cld
cmp
in
sub
sub
mov
fisubr
imul
test
inc
enter
bound
xor
mov
(bad)
fiadd
retf
out
rol
add
mov
xor
outs
cmp
inc
jg
mov
(bad)
sub
sbb
push
fwait
sub
fbld
cmp
xchg
push
sti
push
mov
pop
inc
jge
push
retf
cmps
jp
lea
sbb
and
(bad)
fwait
sub
mov
push
push
add
xchg
aam
sbb
inc
or
cmp
aaa
mov
add
push
and
sub
repz
xor
dec
pop
fnsave
ja
loop
repnz
push
leave
(bad)
sbb
in
inc
je
sbb
popf
or
enter
xchg
repnz
and
fs
inc
movs
add
and
clc
pop
sahf
jl
pop
push
outs
mov
fstp
lds
inc
jmp
jle
les
mov
and
mov
mov
sbb
daa
enter
inc
imul
shr
shl
repnz
lods
call
push
mov
xor
cmps
jb
xchg
dec
cmp
dec
and
add
imul
inc
mov
jle
sub
mov
icebp
fsubr
and
inc
loope
fisubr
dec
and
dec
sbb
or
repnz
js
dec
sub
stc
mov
dec
xchg
dec
pop
sub
jmp
cmp
aas
xlat
ret
cwde
sub
push
aad
and
cld
ficomp
pop
pusha
adc
fmul
sub
aam
rol
enter
leave
xor
call
push
jmp
jnp
adc
and
add
out
cld
repz
fild
mov
jo
or
dec
cmc
cmp
adc
jno
jo
pop
mov
sbb
(bad)
add
out
neg
dec
rcr
int
inc
inc
or
jnp
fsubr
lods
pushf
mov
ja
xchg
mov
std
repz
movs
retf
daa
or
xchg
inc
aaa
adc
pop
mov
jne
ss
jne
push
lds
int3
mov
dec
test
pusha
xchg
xchg
dec
mov
mov
dec
sbb
les
mov
inc
add
fstp
fcomp
lds
out
xor
push
aad
ror
pop
in
xchg
daa
dec
pop
lds
jae
lea
rcr
adc
cli
pop
sub
jne
push
call
push
or
retf
or
xor
mov
(bad)
sbb
fst
fwait
movs
jmp
xor
fidivr
mov
cmp
ins
pop
out
fwait
mov
or
mov
nop
stos
outs
sub
sbb
sub
(bad)
sti
or
ret
js
rcl
rcl
xor
and
aad
jb
fsub
imul
pop
call
pop
dec
pop
pushf
xor
xor
push
scas
mov
xor
mov
and
je
adc
out
sbb
add
jmp
mov
pop
(bad)
js
cli
mov
xchg
shr
mov
stos
push
pop
outs
push
les
shr
push
data16
dec
push
adc
cwde
fdivr
push
out
stos
cmp
ret
dec
dec
jne
mov
pop
sub
or
dec
inc
inc
or
sub
xchg
test
shl
push
mov
(bad)
mov
movs
adc
xchg
cmp
pop
out
add
outs
jb
mov
jne
push
loopne
aam
mov
xchg
adc
sub
jne
and
fcomi
call
icebp
sbb
or
in
shl
aad
mul
iret
pop
adc
stos
fcmovnbe
mov
cmc
rol
pop
mov
loopne
inc
(bad)
movs
pop
jbe
repz
push
movs
ret
in
sub
(bad)
fcomp
dec
imul
mov
pop
or
xchg
test
mov
cmp
jmp
jmp
push
sub
push
leave
add
cmps
rcr
mov
jmp
repnz
retf
das
mov
push
(bad)
cmp
jns
xchg
lds
inc
sbb
test
mov
xor
fs
jmp
imul
int3
aam
rcr
dec
jns
mov
std
mov
mov
xlat
dec
dec
and
jb
xchg
mov
lahf
jbe
inc
jge
xchg
jno
pushf
push
xchg
fisub
cs
clc
dec
loopne
shl
jae
out
aam
jecxz
sbb
call
out
sbb
imul
mov
push
rcr
adc
hlt
or
je
dec
loopne
sub
pop
loope
inc
test
xor
outs
cdq
or
cmps
mul
xchg
mov
inc
sub
sbb
lods
stos
mov
std
adc
add
stos
mov
inc
stos
fwait
enter
jno
scas
retf
pop
jb
mov
add
inc
adc
dec
rol
or
repnz
pop
out
mov
xor
mov
push
loope
push
lods
inc
cdq
pop
out
dec
fs
div
imul
std
add
retf
sub
add
fistp
add
xor
pop
and
push
push
sbb
div
pop
jp
lock
js
test
add
paddsw
sub
mov
icebp
and
je
sar
addr16
enter
xchg
mov
fild
arpl
pop
sub
add
(bad)
jecxz
je
(bad)
cmp
push
inc
adc
std
xor
cmp
dec
in
nop
inc
pop
or
adc
push
aaa
push
rcr
mov
jl
cmc
jns
cmps
dec
and
into
adc
fcomi
cmp
fmul
jno
cmp
mov
nop
cli
test
daa
push
sub
jle
xor
jo
xor
pop
fisttp
movs
and
arpl
lea
nop
cmp
add
out
sub
je
fsub
mov
movs
mov
(bad)
test
inc
add
xchg
das
sub
jns
xchg
enter
and
pop
sar
leave
push
add
xchg
xchg
jb
mov
or
aad
dec
or
(bad)
rcr
das
lock
out
daa
int
or
mov
lods
std
mov
cmp
sub
bound
xor
push
lock
xchg
sbb
imul
pop
inc
sahf
rcr
sbb
cmps
je
std
ins
cld
push
xor
sub
and
ja
xor
adc
inc
pop
fs
pop
mov
cmp
mov
imul
stos
data16
xor
xor
inc
or
mov
cmp
je
or
jb
and
movs
jecxz
fidivr
imul
std
xchg
psubq
lock
jne
fild
jge
pop
ins
xchg
rcr
and
sar
in
pop
int3
mov
dec
arpl
push
xchg
add
sbb
std
push
dec
jmp
enter
mov
sub
fmul
cmc
xor
fbld
outs
xchg
jg
push
mov
cmps
push
repnz
out
sbb
stos
ret
or
rol
movs
ja
cwde
retf
push
mov
cmp
jb
jle
movs
sbb
or
sub
mov
push
sbb
je
pop
sbb
jae
dec
mov
(bad)
aam
add
scas
ficomp
and
int
adc
fs
jl
mov
mov
push
fsubr
mov
lds
cmp
ffreep
js
lahf
xor
movs
xchg
mov
pop
stos
and
in
cmps
cmp
(bad)
fnstenv
inc
mov
push
call
das
and
sub
shl
and
aaa
mov
mov
(bad)
mov
shl
jp
pop
ds
rcr
add
call
inc
test
repz
aam
jg
adc
(bad)
fsubr
mov
mov
rol
xchg
sbb
mov
call
push
adc
xchg
and
jle
into
in
or
inc
xchg
les
ds
pop
cmc
inc
add
lahf
sbb
push
fwait
jnp
scas
dec
or
leave
add
push
in
pop
fs
loopne
and
cld
xchg
pop
(bad)
mov
sub
sbb
push
imul
xor
cmps
out
push
aas
sbb
add
dec
xchg
pop
lock
pop
shl
sbb
cld
mov
scas
xor
xchg
inc
pop
mov
test
xchg
loopne
push
sub
sub
jns
fmul
and
imul
scas
push
ds
xchg
mov
cs
push
fwait
popf
std
mov
xor
std
daa
stos
ret
mov
fisubr
add
xchg
js
enter
mov
mov
add
sub
mov
imul
cs
stos
or
test
push
inc
inc
sbb
out
dec
mov
test
loope
xor
push
ins
mov
ror
(bad)
xlat
or
mov
call
(bad)
and
rcr
fnsave
jp
or
cli
das
inc
push
inc
pop
(bad)
cmp
cdq
mov
inc
scas
sahf
cmp
mov
movs
retf
sbb
jmp
ror
mov
cmp
(bad)
cmp
ja
call
mov
aad
inc
popa
aaa
dec
xchg
out
addr16
and
or
pop
dec
xchg
jbe
je
shl
test
(bad)
in
fwait
adc
push
mov
mov
inc
repnz
push
shl
xchg
pushf
dec
jmp
cmc
(bad)
mov
data16
clc
js
aam
sbb
out
pop
stc
and
add
push
push
push
jg
lds
push
fcmovbe
jo
bound
fmul
pop
sahf
mov
loop
or
ja
add
cmp
loopne
xor
pop
(bad)
test
bnd
xlat
lds
nop
pushf
dec
sub
pusha
or
jns
adc
bound
push
dec
or
inc
mov
sub
sti
iret
rcr
jl
pusha
xor
rcl
nop
in
in
repz
add
imul
xchg
es
sti
jbe
xchg
pop
push
xchg
lods
mov
cwde
dec
out
inc
dec
(bad)
inc
mov
movs
push
xchg
daa
out
and
aad
mov
ficomp
jmp
in
js
addr16
leave
cs
stos
aas
dec
sub
inc
mov
adc
retf
(bad)
lods
inc
test
rcl
xchg
mov
adc
pop
jo
call
push
mov
push
jns
imul
popa
dec
fistp
pop
dec
cmp
iret
mov
pusha
aas
mov
jge
push
sar
adc
or
add
inc
sbb
and
inc
imul
mov
data16
sub
pop
aas
dec
add
mov
mov
push
cmp
mov
aam
int3
or
pusha
xchg
dec
xchg
sub
fwait
sbb
xchg
adc
mov
or
and
adc
(bad)
fbstp
sub
pop
xchg
xchg
dec
jecxz
arpl
fs
mov
sbb
inc
call
(bad)
ror
cmp
aam
inc
test
dec
dec
test
mov
repz
push
adc
int3
fdivr
add
mov
cmp
or
sub
inc
rcr
pop
cmp
shr
push
and
outs
sub
jmp
ds
mov
loopne
jmp
mov
push
shl
in
mov
add
push
push
lods
push
out
lock
out
push
std
retf
push
outs
and
jle
add
pop
adc
pop
test
sub
cdq
pop
popf
push
pushf
mov
mov
push
add
enter
push
out
shr
mov
pushf
lods
cmp
mov
shl
pop
fwait
and
jb
mov
mov
sbb
loopne
stos
add
(bad)
int
movs
in
inc
rcl
pop
call
ret
cmp
retf
mov
loopne
xchg
popa
lock
xchg
(bad)
xlat
ins
push
sbb
(bad)
mov
test
scas
jo
adc
mov
repz
and
cli
stos
sub
inc
(bad)
fs
into
cmc
sbb
retf
dec
lahf
out
sub
imul
data16
imul
sub
mov
loope
cmps
in
lods
xchg
pop
adc
push
xchg
(bad)
mov
jecxz
mov
inc
(bad)
fisubr
jmp
fidivr
mov
xor
cwde
je
and
adc
push
sbb
or
pop
adc
je
push
mov
xor
mov
jmp
out
loop
ja
ins
mov
and
in
mov
div
pop
ret
test
lods
dec
jns
in
bound
pop
seta
push
fcmovbe
mov
or
cli
(bad)
dec
cmps
sbb
xor
jmp
xor
sar
jmp
(bad)
cld
push
sti
or
adc
or
ds
daa
movs
mov
fisttp
fwait
in
(bad)
jp
push
frstor
stos
repnz
loop
in
movs
xchg
bnd
dec
lds
cmp
shl
pop
adc
cs
data16
(bad)
cmp
xor
ja
mov
ret
jns
or
mov
lods
jmp
(bad)
dec
test
rcl
inc
loop
jmp
in
leave
int3
cwde
mov
xchg
mov
xchg
retf
adc
hlt
adc
inc
adc
lea
sub
jbe
callw
inc
retf
movs
dec
pop
mov
test
xchg
push
mov
ja
pop
push
stos
xor
push
xor
test
loope
xchg
inc
pop
fwait
mov
xor
push
or
imul
aaa
mov
ret
inc
leave
clc
fistp
(bad)
shr
cmp
outs
pop
push
cmp
jmp
(bad)
fcmovnb
pop
sbb
or
clc
call
xchg
enter
xchg
mov
pop
movs
push
aas
arpl
jne
int3
sub
jae
ret
push
popa
xchg
cmc
xchg
cmps
cmp
cli
sar
push
ins
scas
in
(bad)
int
fisub
jle
clc
or
outs
movs
daa
jns
mov
mov
hlt
mov
fwait
adc
ds
(bad)
hlt
iret
xor
sti
push
mov
or
xor
sbb
sub
shl
mov
add
mov
sbb
sub
std
mov
sbb
jmp
xchg
and
mov
add
(bad)
push
gs
inc
jp
mov
in
pop
fcom
sbb
shl
mov
js
push
out
xchg
cmps
retf
push
jge
or
fcomp
push
ror
mov
lea
mov
mov
pop
inc
jmp
shl
mov
and
repz
inc
les
xor
std
pop
mov
xor
int3
jbe
cmc
retf
or
stos
jge
test
push
ret
push
xbegin
(bad)
lods
ins
jecxz
cs
icebp
xor
(bad)
retf
ror
cmp
or
es
ret
ror
mov
(bad)
ror
popf
and
es
mov
jmp
inc
and
out
loopne
dec
xor
jnp
xchg
dec
sub
(bad)
in
cli
inc
test
lock
add
scas
mov
lock
inc
pusha
call
push
movs
jae
cmp
mov
xchg
leave
stos
sbb
imul
push
push
mov
js
nop
sar
sbb
xchg
ins
repnz
dec
jg
pop
mov
mov
dec
xchg
sub
jle
push
mov
(bad)
mov
pop
je
ins
and
emms
lgs
dec
ds
inc
mov
jne
inc
retf
push
mov
lock
mov
cmp
fldcw
mov
add
xor
outs
mov
jl
and
mov
fs
pop
daa
xor
mov
daa
dec
jno
les
inc
dec
mov
lods
sbb
popf
mov
push
sbb
rcr
push
cmp
sub
xor
ja
adc
mov
je
jns
pop
add
imul
or
mov
shrd
sub
xchg
test
pusha
cmp
lds
xchg
hlt
push
mov
mov
pushf
sti
adc
push
(bad)
adc
lods
icebp
jmp
stos
add
jecxz
mov
js
add
scas
ja
sub
xor
cmp
call
xchg
(bad)
jecxz
mov
imul
pop
sbb
leave
jge
sbb
jl
cmps
in
stc
pop
dec
push
mov
mov
adc
mov
hlt
rol
inc
lds
ja
dec
mov
jo
cmc
push
or
push
scas
add
ins
pop
arpl
into
dec
cmp
je
out
mov
daa
out
nop
and
shr
std
pop
and
add
dec
cs
fsubp
jns
js
sub
(bad)
call
je
(bad)
sub
push
not
scas
pop
mov
ss
out
and
mov
xor
cmps
and
into
push
int3
push
push
push
pop
shl
add
icebp
arpl
cmc
mov
cdq
ss
jle
xchg
push
xchg
or
adc
mov
jmp
jp
loopne
(bad)
sub
jns
aas
lds
into
push
push
dec
push
sub
mov
push
lds
mov
fmul
in
pop
ror
sahf
cli
xchg
dec
push
sbb
sub
or
inc
sbb
outs
add
add
xor
cdq
mov
xchg
sub
inc
push
cwde
aam
pushf
pop
aad
aas
sahf
and
ret
cld
pop
test
dec
dec
sub
push
inc
arpl
(bad)
push
(bad)
fistp
xchg
(bad)
mov
add
int
jne
mov
sub
jae
lock
or
inc
std
and
fist
sbb
or
xor
fstp
fadd
pop
lea
outs
adc
nop
outs
les
xor
push
fwait
ret
mov
rcl
call
cli
std
mov
jns
and
pushf
sbb
test
add
retf
xor
shl
rcr
repnz
sbb
aaa
arpl
je
bound
aad
dec
aas
mov
mov
pop
iret
das
js
clc
icebp
fiadd
movups
lea
outs
jle
push
mov
adc
sbb
pop
mov
test
push
sbb
fcmove
test
sub
and
sub
movs
xor
pop
gs
(bad)
xchg
cmps
in
mov
push
mov
cld
int
(bad)
adc
hlt
jge
cmp
pop
xchg
retf
jnp
pusha
and
jns
cmp
pop
push
js
adc
stc
xchg
bound
jg
sub
mov
loopne
cmp
es
mul
add
xlat
test
mov
es
cmp
xlat
in
(bad)
iret
lea
xchg
xchg
ss
mov
cmp
inc
xchg
and
mov
jge
test
mov
add
sub
pop
jge
xor
out
leave
cwde
rol
lods
aas
(bad)
fcom
mov
push
lds
mov
pop
sbb
iret
sbb
fs
out
cmp
cdq
xor
fucomi
test
addr16
push
mov
cmps
leave
inc
pop
aad
or
inc
dec
mov
jmp
into
sbb
pop
ret
sub
adc
and
out
inc
(bad)
xor
inc
idiv
jmp
outs
in
jnp
inc
lods
and
dec
fist
shl
jl
neg
xor
lods
fcomp
stos
xchg
cmp
loopne
add
mov
xchg
inc
mov
clc
or
rcl
scas
xchg
or
and
dec
xor
xlat
mov
pop
add
cmp
es
icebp
dec
jmp
out
sub
xchg
or
in
mov
xchg
or
sub
movs
pop
dec
retf
repnz
out
retf
daa
mov
add
pop
cmps
push
ret
pop
or
clc
xor
into
sti
ror
test
gs
mov
add
mov
and
lahf
xchg
mov
pop
push
in
ret
pop
add
inc
mov
stos
xchg
int
push
xchg
fptan
push
pop
(bad)
(bad)
fstp
dec
(bad)
ds
rcr
enter
xchg
addr16
loopne
xchg
popf
mov
add
inc
jl
cmps
add
addr16
push
or
enter
call
out
mov
leave
jo
das
and
or
jmp
shl
add
(bad)
xlat
inc
icebp
mov
cmp
call
mov
xor
mov
cmps
jne
pop
push
add
sbb
sub
aad
sub
test
mov
adc
cmp
(bad)
pop
sub
cmp
push
mov
inc
adc
jge
mov
jae
push
aad
dec
pop
repz
dec
inc
mov
or
in
sub
sti
aam
daa
pop
or
mov
or
repz
sub
mov
mov
ja
mov
inc
(bad)
mov
adc
xlat
push
push
mov
sahf
call
mov
mov
cdq
data16
(bad)
daa
xchg
xchg
mov
sbb
lahf
and
xchg
pop
push
xor
mov
mov
daa
pop
push
pop
iret
inc
cwde
cmp
sbb
pop
or
out
test
xchg
or
cmp
mov
imul
mov
cmc
fcmovb
adc
lds
jo
add
xchg
ja
mov
mov
mov
jp
mov
int
ja
retf
movs
popa
cmps
int3
pop
test
retf
mov
jns
retf
mov
add
ret
xchg
jno
dec
cmps
int3
cli
mov
sub
bound
in
jp
cvttps2pi
aad
ffree
fsqrt
cmp
cmc
pop
cmp
out
and
retf
fldenvw
push
ror
mov
sahf
add
xor
(bad)
call
add
push
jne
dec
jecxz
add
shr
mov
jp
sub
out
jmp
jbe
pop
xchg
pop
push
aas
jmp
mul
sar
daa
jo
inc
aad
adc
cs
or
sti
adc
fwait
cdq
fstp
call
test
rcr
out
adc
mov
ins
fdivr
push
rcl
mov
test
shr
mov
and
sbb
dec
xor
outs
push
cmp
xchg
push
loop
inc
mov
bound
sbb
imul
scas
popa
inc
fucom
int3
in
ins
pop
loope
push
popf
pop
dec
jnp
pushf
mov
fs
push
call
xchg
retf
cmp
push
fiadd
js
xor
xchg
nop
dec
pop
das
adc
lock
jno
push
lods
mov
int3
(bad)
mov
sub
dec
lea
xor
push
add
mov
aaa
inc
push
(bad)
push
(bad)
or
js
push
jo
cmps
pushf
loope
or
pop
push
popa
fidivr
scas
addr16
jnp
mov
jno
lock
stos
cwde
jle
mov
int3
pop
movs
sub
inc
imul
push
int
repnz
xchg
jns
ret
aas
lods
jns
mov
and
int3
rcr
vmovntps
sahf
mov
popa
inc
in
add
nop
cwde
aaa
inc
xchg
xor
xor
sub
aam
icebp
cmp
int3
mov
icebp
mov
call
lods
out
mov
xor
jmp
test
sub
out
mov
xor
in
imul
xchg
aaa
mov
retf
(bad)
sub
inc
aas
in
xchg
mov
loop
lods
or
out
and
dec
movs
jp
int3
rcr
sub
and
mov
push
adc
in
jg
in
mov
sub
adc
fadd
mov
sub
jae
jmp
mov
xor
mov
int
mov
(bad)
aam
out
pop
adc
loop
inc
enter
cli
cmovl
or
dec
or
cli
xor
daa
push
sbb
and
push
pop
std
nop
add
dec
jecxz
loop
mov
lea
adc
pop
retf
cmp
push
xor
mov
add
loope
js
fistp
outs
dec
outs
xchg
push
cmp
mov
mov
sar
mov
sbb
jmp
pop
neg
inc
jg
aam
repz
lds
mov
jb
jb
sub
xchg
or
js
(bad)
push
(bad)
fcmovnu
data16
xchg
or
into
pop
xor
and
push
and
mov
sbb
cwde
pop
xchg
rol
icebp
stos
mov
sub
adc
rcl
mov
ffree
icebp
mov
cmps
int3
sbb
add
sub
sub
adc
dec
pop
or
inc
mov
add
(bad)
in
clc
out
shr
outs
fpatan
xchg
(bad)
out
jb
mov
sbb
adc
mov
xchg
push
das
jl
add
xor
repz
aas
push
lods
cmps
pop
inc
les
fisubr
ds
(bad)
retf
pop
mov
movs
dec
pop
dec
int3
sub
mov
xor
mov
pop
iret
xor
sub
xor
inc
(bad)
iret
inc
int
leave
push
adc
jg
mov
xlat
push
pop
mov
shl
mov
add
adc
xchg
iret
adc
cwde
je
popa
(bad)
jo
adc
rol
xchg
aaa
inc
mov
das
ja
mov
ins
clc
mov
jle
or
(bad)
not
jno
lods
mov
inc
icebp
stos
xchg
mov
lods
(bad)
popf
ret
cs
xchg
rol
aad
xchg
mov
sbb
pusha
mov
fstp
xchg
xor
das
push
clc
xchg
pop
dec
call
addr16
push
scas
push
outs
sbb
jno
push
pushf
add
shl
movs
fisub
(bad)
test
sub
dec
mov
lds
ror
dec
mov
pop
cmps
in
cmc
rcl
inc
pop
xor
and
iret
xor
dec
lods
ret
call
aam
mov
dec
pop
lahf
mov
inc
icebp
mov
push
outs
hlt
in
xchg
mov
test
adc
add
js
pop
mov
scas
or
cmp
leave
mov
push
push
adc
std
cld
in
jo
fnstcw
dec
loop
jp
and
aam
sti
sub
mov
pop
jae
xor
repz
test
mov
cld
mov
pop
sbb
mov
or
pop
(bad)
fdiv
pop
repz
(bad)
int3
inc
mov
pop
loopne
sub
sbb
inc
push
popf
in
sti
out
icebp
pop
adc
ins
cmp
out
ins
(bad)
or
shr
mov
ficomp
cmp
dec
or
jmp
push
ins
mov
mov
repnz
(bad)
pop
in
das
push
jbe
stos
daa
ja
sbb
pop
call
(bad)
xchg
pop
fimul
cdq
test
or
and
loop
lds
pop
cmp
std
pop
push
retf
inc
rcl
mov
mov
sub
xchg
aam
xor
add
nop
sub
push
addr16
jo
aaa
rsm
push
lods
or
adc
jns
pop
xchg
jle
mov
pop
inc
(bad)
or
cdq
fwait
xchg
(bad)
frndint
iret
aaa
lock
mov
repz
sbb
sbb
imul
inc
iret
xchg
in
jne
leave
test
xor
pop
xchg
scas
mov
mov
mov
std
lods
pop
lods
cwde
iret
retf
outs
xor
pusha
mov
test
mov
adc
test
jae
mov
jo
das
push
ins
mov
movs
test
sbb
nop
jl
xchg
sbb
popf
das
add
jne
leave
or
ss
push
jnp
int
fs
call
lea
js
xchg
jo
mov
jns
int3
mov
(bad)
test
push
ss
and
adc
dec
adc
retf
sbb
rcr
inc
in
test
(bad)
jle
or
mov
pop
outs
add
xchg
pop
or
push
dec
pop
ds
pop
mov
jae
add
push
add
shl
push
xchg
rol
test
jle
fsub
mov
dec
mov
push
movs
inc
in
push
jb
or
add
mov
push
out
imul
push
sbb
jae
mov
add
clc
or
push
xchg
scas
int3
das
mov
push
adc
pop
fsub
fst
xlat
lock
mov
xlat
in
arpl
sbb
mov
or
into
mov
push
mov
stc
push
(bad)
in
mov
mov
or
inc
loop
inc
lds
repz
int
daa
adc
test
xchg
add
inc
cli
inc
stos
retf
dec
push
mov
(bad)
mov
fcom
adc
(bad)
hlt
mov
rcl
push
arpl
dec
test
dec
retf
fneni(8087
mov
in
out
mov
(bad)
rcl
mov
cmps
(bad)
fild
xchg
sbb
mov
jb
jg
xchg
movs
cwde
sub
xchg
repz
sub
sub
pop
iret
cmp
and
cdq
outs
test
cmp
dec
enter
outs
or
and
mov
stc
gs
scas
retf
add
fmul
mov
aas
sub
cmp
(bad)
mov
mov
fbstp
or
sub
dec
(bad)
or
ins
outs
(bad)
jbe
push
cmp
jno
pushf
(bad)
(bad)
cmps
xchg
sub
adc
cwde
dec
(bad)
inc
sbb
xchg
fwait
bound
inc
cmps
inc
fld
jle
test
xchg
xor
pushf
in
ret
outs
inc
fsub
clc
or
fistp
cmp
and
jo
jno
outs
mov
add
mov
sahf
pop
lods
retf
fdivr
sub
inc
in
imul
pop
pushf
mov
push
inc
lock
cmp
mov
push
movs
pop
shr
into
cwde
xchg
test
idiv
adc
jnp
test
mov
jne
push
push
ss
enter
ror
outs
lock
ret
clc
dec
pop
or
or
adc
pop
cwde
and
cwde
retf
push
push
pop
mov
popa
inc
push
xchg
xor
lds
sub
retf
mov
mov
lods
rcl
sti
aas
ja
shl
cmps
mov
dec
gs
push
xchg
adc
fsubp
mov
loopne
lahf
jae
es
sub
in
cmps
movs
or
adc
xor
sub
or
jmp
dec
xlat
add
adc
sti
pop
shr
shr
aam
fcmovnb
sbb
jecxz
fiadd
int
dec
or
mov
mov
pusha
not
jecxz
sbb
mov
push
ja
bound
xor
xchg
sub
je
pop
rcl
push
jnp
cmp
daa
outs
inc
add
adc
push
daa
loope
loope
pop
fisttp
sub
jge
dec
(bad)
daa
test
adc
jecxz
nop
int
mov
mov
imul
cmc
gs
adc
mov
retf
neg
sub
dec
sahf
nop
push
lea
sub
sub
mov
test
mov
jb
push
mov
xchg
dec
fwait
mov
xchg
je
push
mov
dec
xor
sub
scas
repz
mov
fistp
mov
lods
ror
loope
call
mov
hlt
adc
add
or
popa
js
mov
lea
cdq
loope
(bad)
xchg
outs
(bad)
push
das
loope
int3
je
mov
pop
sub
adc
mov
in
inc
lods
fs
loope
sbb
xor
inc
inc
push
aas
test
and
pushf
inc
sbb
push
cdq
repz
bound
adc
inc
inc
cmps
push
pop
sbb
sbb
jae
scas
inc
adc
stc
in
loope
adc
cwde
jmp
jmp
inc
fnstenv
iret
cwde
sub
adc
and
push
out
mov
bound
push
daa
sbb
and
outs
mov
sbb
retf
stos
scas
call
adc
xchg
ja
call
jne
(bad)
and
in
and
push
outs
mov
in
popa
fmul
dec
push
sbb
int
mov
imul
xchg
in
rol
cmp
push
sti
xchg
idiv
xchg
add
movs
gs
push
xchg
mov
and
add
std
cmps
es
mov
inc
into
es
test
cmovae
cmps
(bad)
jo
ror
int
retf
inc
ret
sub
ror
sbb
shl
call
popa
inc
int
loop
mov
movs
push
push
popa
inc
xchg
repz
sbb
fdivr
mov
pop
fbld
cmc
push
jae
xor
aad
lahf
imul
and
pushf
ret
jmp
scas
pop
mov
push
stos
pusha
stos
lds
cmp
into
call
cdq
adc
aam
dec
push
inc
mov
aaa
das
mov
or
jns
dec
cs
xchg
sbb
ins
mov
sbb
std
xchg
or
add
and
daa
bound
jmp
inc
xchg
push
xlat
adc
mov
xchg
stos
popa
cmp
sub
and
push
and
mov
sub
or
jnp
pop
ficomp
dec
or
cmp
push
xchg
mov
fsub
pop
cmc
and
adc
xor
dec
dec
call
cwde
jl
push
pop
and
push
cmps
cmp
adc
fdiv
xor
cmp
add
out
gs
stos
push
fimul
lods
xlat
xchg
push
push
ds
mov
mov
arpl
daa
stos
add
push
cmp
ds
fnsave
test
movs
stc
lock
push
jno
test
inc
fs
popf
xchg
xor
jae
rcl
arpl
adc
js
cmp
nop
cmps
pusha
pop
and
dec
dec
pop
shl
fistp
lods
pop
fcom
ret
mov
mov
scas
or
mov
mov
and
stc
or
iret
or
adc
daa
sub
mov
inc
test
or
leave
pop
dec
pop
aas
jb
pop
out
stos
stos
(bad)
cs
mov
mov
or
pop
and
add
pop
call
sub
das
mov
xchg
movs
das
in
daa
ja
into
nop
repz
in
jmp
jb
jnp
mov
call
iret
movs
ins
icebp
stos
(bad)
dec
mov
sub
add
ins
fsqrt
sub
add
adc
out
sub
pushf
push
sub
into
ss
loope
aad
cld
xor
ja
and
add
jns
sbb
mov
nop
pop
inc
jge
lds
test
ret
sub
sub
push
lock
mov
call
lods
push
icebp
ds
repz
(bad)
dec
xor
repz
in
xor
sbb
out
(bad)
test
loop
sub
and
jmp
out
out
pop
call
ins
sbb
mov
cmp
xchg
xchg
gs
mov
inc
ja
jb
cmp
out
or
jmp
push
movs
cmp
jae
bound
dec
mul
jb
cmc
loopne
les
pop
mov
outs
(bad)
out
push
jne
imul
inc
push
cmp
inc
hlt
rcr
retf
sub
sar
cmp
jb
bound
sbb
add
punpckhdq
jo
hlt
cmp
adc
sahf
cmp
dec
add
(bad)
mov
fs
jp
ja
retf
lods
neg
sar
or
cmp
add
hlt
jle
mov
call
es
cmps
adc
ror
sub
jb
sub
jmp
pop
push
mov
imul
cwde
xor
cmc
int
add
mov
lods
call
stos
and
stc
add
rcl
movs
movs
test
rcl
imul
adc
aaa
rol
in
or
sbb
fbld
nop
xchg
das
adc
add
gs
imul
out
push
cmp
in
sti
xchg
pop
sti
(bad)
test
(bad)
or
add
scas
or
inc
jp
outs
dec
inc
popa
adc
ret
and
pop
jge
xchg
adc
and
inc
inc
lahf
fsubr
add
mov
sbb
ret
jne
inc
cld
cmc
add
ss
pop
pop
fs
add
xchg
fs
bound
outs
dec
xchg
fbstp
pop
je
add
push
sbb
and
cmp
jns
iret
dec
(bad)
test
in
sbb
cmp
inc
(bad)
mov
push
add
shr
lods
cmps
mov
mov
pop
rcr
cmps
jg
gs
pop
jns
imul
or
push
movs
push
mov
loopne
jae
xor
mov
sahf
sbb
shl
retf
jle
int3
cmp
leave
sub
iret
scas
jno
mov
jmp
pop
mov
cmc
dec
out
mov
adc
sbb
adc
sti
dec
pop
xor
loopne
or
test
push
stos
imul
fld
movs
cmp
cmp
mov
sub
leave
sbb
bound
cwde
dec
mov
scas
mov
inc
lods
les
retf
mov
icebp
dec
ja
xor
push
mov
sbb
lock
pop
xchg
pop
int3
mov
jle
xchg
call
ss
xor
fcomp
xchg
leave
xchg
inc
mov
push
stc
fs
lock
fldcw
je
xchg
into
mov
xchg
push
lea
mov
jp
cmps
sahf
out
push
imul
sub
movs
nop
nop
out
add
xchg
mov
scas
pusha
adc
add
inc
ds
adc
popa
je
or
ret
test
pop
sbb
xor
lahf
(bad)
repnz
lock
in
mov
push
out
pushf
repz
test
jmp
mov
inc
cmp
cmp
mov
push
mul
cmp
jae
icebp
(bad)
jle
in
sbb
call
mov
mov
adc
adc
add
out
bound
sub
adc
sub
inc
xor
mov
push
inc
neg
out
jne
jmp
xor
and
pop
push
out
out
bnd
fwait
in
fisubr
and
dec
stos
idiv
bswap
push
inc
jmp
mov
test
pop
mov
inc
sahf
push
mov
inc
mov
xlat
push
(bad)
call
pop
push
sub
adc
outs
mov
cdq
push
push
xor
cs
jnp
mov
ret
imul
out
icebp
daa
adc
(bad)
pop
push
fimul
(bad)
stos
test
repz
sbb
adc
mov
mov
popf
(bad)
xchg
lock
(bad)
mov
shr
jo
and
and
push
or
(bad)
and
out
cmps
mov
adc
ins
movs
(bad)
sub
jae
mov
rol
sbb
sbb
hlt
pop
pop
enter
jmp
add
pop
iret
lds
iret
(bad)
and
(bad)
sbb
test
and
neg
xchg
loopne
and
xlat
jbe
sbb
sbb
jne
ins
stos
shr
mov
push
not
leave
push
xchg
ja
pop
pcmpeqb
jmp
mov
(bad)
shl
jo
xor
adc
mov
push
add
sub
retf
or
adc
jecxz
fwait
adc
ss
jmp
lahf
test
repz
push
leave
adc
adc
movs
xchg
out
enter
pop
neg
lock
pop
lods
cmps
push
ja
xchg
hlt
inc
jb
inc
fmul
jbe
fwait
movs
pop
or
mov
imul
stos
ins
jno
test
shr
(bad)
in
pop
jmp
inc
push
sbb
xor
xlat
cs
inc
icebp
fsubr
sbb
or
xchg
cmp
xchg
scas
iret
std
(bad)
sub
in
xchg
rol
sub
xchg
sub
jge
lods
scas
cli
xor
pusha
sbb
xor
pop
int3
enter
bound
mov
xor
mov
std
push
inc
or
fiadd
xchg
nop
pop
rcr
(bad)
outs
dec
outs
inc
retf
fist
add
jno
jmp
inc
js
shr
rcr
scas
push
push
inc
sti
dec
inc
mov
mov
push
sar
fldcw
inc
movs
out
xor
fsub
xchg
jb
dec
cs
aas
xchg
adc
scas
pop
sbb
mov
xchg
sub
mov
mov
or
push
js
(bad)
fsubrp
nop
mov
dec
arpl
les
into
or
lahf
xor
sbb
test
jns
loope
sbb
jo
pop
push
in
rcr
sub
push
neg
mov
lock
movs
iret
mov
cli
and
call
movs
pop
mov
movs
jne
cmps
add
jle
mov
repnz
daa
inc
push
xor
shl
lods
sbb
sub
in
mov
mov
adc
lds
push
clc
mov
lods
into
stos
dec
add
rcr
popa
scas
pop
dec
inc
neg
retf
adc
add
jo
rol
test
inc
cmp
cmc
fistp
dec
dec
sbb
sub
mov
es
sbb
dec
retf
mov
rcr
rcr
jmp
loopne
mov
xchg
out
xor
cmps
xchg
mov
pop
pop
cmps
add
lock
xlat
cli
lods
dec
fnstenv
ja
push
mov
mov
jmp
test
pop
outs
(bad)
sub
icebp
xor
dec
jl
syscall
and
aam
and
lock
xchg
or
or
push
js
mov
movs
sbb
sub
outs
adc
adc
movs
in
in
pop
(bad)
mov
mov
shr
cdq
push
or
xchg
aas
mov
ds
jo
out
ds
sub
inc
mov
call
pop
mov
jns
sub
jbe
ss
cmc
push
in
cmps
test
hlt
rcl
push
cli
out
xchg
sar
imul
add
mov
rcr
outs
sahf
mov
push
pusha
fstp
xor
jle
std
sub
jp
jbe
jae
in
pop
mov
gs
ror
stos
ret
push
mov
rcr
jnp
jl
inc
and
rol
int3
jmp
mov
shl
fwait
pop
mov
aam
loope
icebp
jecxz
je
lds
adc
dec
sub
sub
inc
jle
int3
inc
ja
movs
rcl
adc
xor
test
mov
adc
xor
sub
dec
repz
stc
mov
mov
fld
cmp
(bad)
mov
add
adc
cmp
mov
adc
(bad)
dec
jmp
ja
loopne
(bad)
dec
inc
or
out
out
push
outs
test
aaa
test
add
(bad)
movs
scas
and
popf
or
ja
xchg
int
push
(bad)
leave
ret
add
mov
jge
sub
in
call
mov
imul
pop
mov
cmp
(bad)
jp
adc
gs
mov
(bad)
mov
mov
and
push
dec
adc
out
popf
lea
mov
xchg
test
loopne
in
jno
aad
dec
sbb
clc
je
mov
cmc
movs
popa
sub
repnz
in
and
sub
inc
arpl
lock
jae
inc
aaa
and
jb
adc
retf
mov
sbb
pushf
adc
xchg
bound
push
adc
pusha
js
retf
and
xchg
cdq
inc
mov
loop
out
addr16
mov
and
mov
stos
in
push
fisubr
clc
stos
ins
pop
and
push
adc
xlat
rcr
sub
mov
or
add
mov
push
mov
clc
or
pop
(bad)
dec
repnz
sub
mov
shr
inc
mov
mov
adc
addr16
push
movs
push
mov
xor
repnz
sbb
mov
in
pushf
mov
or
xchg
iret
cmp
data16
aas
bound
jne
adc
in
imul
xor
and
repnz
push
lds
fs
sub
das
fistp
push
mov
pusha
in
sbb
in
dec
xchg
xchg
pop
outs
mov
jmp
ins
loope
retf
outs
inc
xchg
data16
jno
ffreep
jmp
movs
popf
int
sahf
(bad)
ins
xchg
xchg
fucom
mov
dec
(bad)
enter
je
out
call
xchg
mov
lea
int3
or
addr16
imul
cdq
loope
jae
int
loop
lock
sbb
or
mov
xchg
js
mov
test
push
clc
lsl
push
pop
mov
stos
sahf
pop
pop
pop
inc
(bad)
sti
cmps
pop
and
jno
(bad)
enter
cwde
or
mov
mov
fisub
cdq
jb
sub
add
xchg
mov
out
(bad)
mov
ja
adc
ret
inc
adc
jns
pop
sub
xchg
sar
cdq
cmp
cmps
mov
inc
clc
sti
pop
scas
jae
cmp
cmps
in
jmp
das
inc
daa
mov
outs
push
xor
mov
or
push
pushf
nop
adc
sub
push
push
adc
jecxz
lods
adc
int
cld
rcl
or
and
sti
and
in
mov
push
push
add
jae
aas
mov
fdivr
dec
dec
pop
xor
mov
arpl
retfw
and
inc
icebp
xor
cmp
int3
shl
shl
mov
or
es
in
sahf
sbb
mov
xchg
movs
add
or
loope
sub
bound
jns
mov
inc
bts
xor
push
xchg
dec
ret
enter
lea
ret
iret
jo
into
mov
(bad)
mov
push
adc
neg
mov
mov
stc
fcmovne
push
mov
jecxz
and
(bad)
xor
(bad)
sub
movs
jl
inc
xlat
cmp
dec
cmp
test
jmp
mov
fs
fcomp
in
out
neg
retf
sbb
lea
adc
out
sub
cmp
add
in
push
shr
and
movs
lods
iret
mov
ins
cdq
test
inc
icebp
add
pop
jbe
int3
cmp
mov
jmp
int
call
pusha
jb
mov
test
std
cli
mov
xchg
imul
cmps
lods
mov
(bad)
loopne
div
add
push
dec
jle
sbb
(bad)
cmps
test
xchg
cwde
sbb
dec
(bad)
shr
je
and
test
icebp
and
add
adc
push
stos
popf
sbb
cmp
stos
adc
(bad)
sti
pop
rcr
xor
movs
jle
sar
xchg
mov
fld
lock
je
popf
enter
je
pop
aaa
dec
aam
sub
adc
jp
imul
shl
push
neg
movs
dec
inc
add
add
ud1
mov
mov
xchg
addr16
push
mov
dec
cli
stos
pop
dec
inc
add
ret
xchg
xor
jp
inc
xor
xchg
pop
outs
xor
fnsave
and
into
xor
xchg
ss
mov
jp
call
mov
dec
cli
cmp
enter
and
or
inc
push
mov
and
jo
retf
adc
and
retf
add
scas
inc
cli
jmp
xor
inc
aam
frstor
or
popw
adc
test
mov
adc
pop
sti
stc
mov
jo
enter
add
cld
ins
jmp
inc
xor
sti
nop
adc
sub
mov
adc
mov
and
xchg
les
dec
xchg
push
fucomip
xor
rol
sahf
mov
xlat
mov
add
outs
fld
add
push
test
fcomp
xchg
jl
dec
ds
outs
pminub
push
loope
sub
cs
mov
cmps
xchg
cmps
xchg
push
(bad)
cld
cmc
and
in
lock
xor
sbb
mov
sti
and
jb
nop
push
lea
sub
loope
push
jmp
into
pushf
and
sbb
call
in
ds
xor
sub
rcl
retf
and
adc
aas
push
fcmovnu
inc
jo
cwde
(bad)
fisub
out
mov
(bad)
aad
sbb
xchg
push
mov
sahf
ja
dec
sbb
nop
xor
sti
jp
or
jp
rcl
sub
push
pop
(bad)
sti
and
dec
xor
nop
pop
lock
push
stc
sub
xor
repnz
(bad)
gs
mov
lds
sahf
sbb
je
shl
mov
cmps
xor
shl
jmp
gs
cld
sbb
dec
cmp
ja
mov
add
push
xchg
adc
test
out
jmp
ins
(bad)
push
retf
xor
ss
jne
call
xor
mov
shl
cmp
popa
or
lds
jo
in
ins
jl
inc
(bad)
movs
jne
pop
popa
pop
push
cmp
jmp
sub
arpl
idiv
pop
push
or
xor
push
mov
xchg
scas
out
pop
int
pop
inc
or
or
jmp
or
stos
cmp
clc
out
ss
icebp
(bad)
push
(bad)
adc
cmp
cmp
std
das
out
or
cdq
jb
sbb
adc
jnp
aad
movs
pop
jl
push
inc
enter
push
jp
sub
add
lea
push
(bad)
inc
and
shl
je
and
xlat
lock
inc
jae
int
pop
dec
into
scas
aas
ins
dec
stc
outs
push
xchg
cmp
test
xchg
jmp
cmp
or
xchg
add
ret
movs
fdivr
fcomp
adc
outs
xchg
push
mov
shr
outs
inc
out
push
jne
push
test
arpl
ret
fadd
int3
ror
sub
outs
fdiv
and
push
cmps
mov
pusha
inc
dec
adc
sbb
js
or
inc
lods
and
repnz
pop
adc
fnstenv
and
jp
dec
xchg
dec
sbb
xchg
ds
xor
call
test
(bad)
(bad)
call
leave
loopne
xor
in
jg
fcom
bound
ret
pop
sbb
lahf
mov
push
arpl
xlat
pop
add
add
ins
es
xchg
xor
mov
std
xor
sub
xchg
mov
xor
mov
mov
ins
shl
dec
adc
movs
fist
imul
xor
or
push
mov
repnz
test
push
lods
cmp
mov
jge
ss
or
jb
icebp
push
cli
(bad)
stos
push
dec
and
lods
xor
xchg
and
or
fistp
mov
jnp
push
jb
test
in
ss
loop
je
in
jnp
push
cmp
mov
push
not
inc
pop
xchg
popf
das
mov
ja
xchg
outs
inc
adc
adc
mov
add
jecxz
sub
imul
lahf
je
(bad)
dec
sub
inc
sub
imul
jb
test
sar
stc
inc
push
inc
inc
pop
pop
arpl
sub
in
iret
out
xchg
movs
adc
and
pop
ins
add
adc
mov
push
sti
adc
xor
repnz
iret
cmp
or
push
and
pop
mov
out
xchg
fldenv
movs
push
ror
xchg
call
jno
cwde
cli
sub
xchg
inc
or
dec
pop
pop
mov
cld
loop
inc
enter
das
adc
bound
pop
imul
js
mov
cmps
xor
in
sbb
xchg
mov
sbb
popa
mov
xor
push
adc
add
data16
rcl
or
lods
movs
outs
out
mov
sahf
inc
mov
out
stos
ds
and
(bad)
std
mov
jb
cmps
popa
inc
in
cmp
aaa
jge
ins
add
jae
mov
repnz
cmp
popf
(bad)
in
xchg
(bad)
repnz
jg
push
inc
mov
ins
cmp
stos
add
lahf
test
movs
ins
addr16
cs
adc
pop
dec
fmul
jmp
dec
aas
push
shl
inc
jg
js
in
retf
rcl
out
mov
das
cli
loopne
aad
mov
mov
out
pop
and
sbb
pop
inc
retf
sbb
sub
inc
sar
pop
mov
(bad)
(bad)
mov
sbb
xor
cdq
shl
mov
sbb
inc
in
arpl
cmp
or
int3
mov
ins
jne
cmp
mov
cs
xor
mov
fild
mov
push
lods
idiv
dec
pop
and
mov
sar
je
mov
add
data16
inc
adc
mov
aas
(bad)
mov
call
(bad)
call
xchg
adc
stos
ss
jne
es
jae
loopne
mov
hlt
arpl
and
rcl
cmp
mul
lods
pop
mov
add
nop
add
(bad)
and
not
xor
loop
sub
xchg
addr16
sbb
enter
mov
repz
cmc
fs
loopne
jecxz
dec
adc
mov
dec
add
pop
std
int
pop
pop
dec
fcmovbe
adc
stc
mov
ret
ins
cmp
das
aas
and
and
mov
inc
xchg
inc
or
cs
in
xor
int3
scas
movs
in
arpl
and
sahf
fldcw
adc
mov
and
call
add
sar
xchg
push
push
xor
in
push
sbb
ja
inc
ins
icebp
jne
dec
mov
add
jg
jecxz
jl
mov
fistp
add
out
ss
js
adc
pushf
add
loop
pop
and
stc
stos
xchg
(bad)
xor
lods
out
out
sub
call
shl
xor
ret
je
inc
sub
and
in
pop
das
add
sahf
data16
arpl
pop
push
mov
or
cld
hlt
mov
push
jne
push
cs
and
xchg
xor
mov
push
sub
aaa
jle
iret
test
shl
pop
jno
lods
or
call
xor
retf
inc
cmps
jge
jl
inc
mov
ficom
xchg
adc
adc
arpl
fs
lods
gs
mov
jo
outs
test
pusha
jno
cmp
sub
jne
arpl
dec
cmp
or
mov
aaa
call
(bad)
aad
bound
sbb
inc
sub
add
enter
sub
jns
mov
lds
rcl
lahf
xlat
(bad)
jle
xor
push
aas
adc
aam
and
aad
fcomp
repnz
inc
ins
psubsb
lahf
xor
movs
je
sub
(bad)
and
sub
not
add
dec
je
mov
ret
adc
int
adc
jns
loopne
je
mov
xor
dec
enter
in
pop
movs
adc
int3
fbld
push
xchg
retf
int
fdivr
es
rcl
xor
jmp
xchg
fdivr
sbb
xchg
mov
jle
in
inc
leave
mul
ins
daa
js
cmp
pop
cmps
imul
neg
cmps
test
sub
retf
dec
popa
ret
adc
jae
jp
lds
and
add
and
out
or
xchg
lea
sub
jae
call
and
pop
dec
(bad)
std
cmp
xchg
push
fisttp
scas
pop
jge
ss
xchg
jo
mov
pop
bound
push
adc
fwait
into
mov
fcmovnbe
fst
aas
loope
fs
popf
outs
pop
inc
cwde
call
cmp
nop
into
push
jmp
fwait
dec
xlat
pop
mov
popf
pop
pushf
js
fisubr
jo
push
lods
sbb
mov
(bad)
mov
pop
and
push
outs
push
dec
sub
jae
jae
enter
push
inc
xchg
aam
mov
(bad)
dec
inc
pop
xchg
pushf
mov
jmp
adc
and
cmp
cdq
or
aam
(bad)
cmp
inc
cmp
adc
adc
into
cli
adc
aam
in
pop
ins
movs
jg
pop
enter
mov
adc
adc
or
cwde
movs
jp
pop
sub
mov
pop
lods
dec
adc
mov
jge
sar
cmp
loope
push
pop
push
push
mov
lods
mov
hlt
pop
ror
cli
hlt
test
pop
sahf
pop
retf
xchg
push
sub
jmp
mov
add
je
add
jg
fild
fdivr
mov
loopne
and
into
mov
enter
dec
test
push
outs
jmp
fidiv
cmp
add
adc
arpl
retf
movs
fucom
daa
pop
ja
das
fwait
xor
mov
in
aad
loopne
mov
fld
xor
mov
loopne
stos
jmp
xchg
pushf
adc
iret
inc
jne
cmp
xor
(bad)
shl
push
int3
cmps
test
aas
fld
in
pop
scas
dec
jne
pop
jb
or
icebp
xor
and
or
sub
xchg
ret
call
jge
push
and
fst
rcl
or
xor
dec
and
in
mov
push
je
xchg
outs
or
jns
push
adc
pop
(bad)
mov
xchg
push
xor
(bad)
jns
popa
clc
inc
movs
sbb
(bad)
js
push
fimul
fs
dec
inc
out
add
inc
xchg
cs
jecxz
out
ror
add
mov
pop
dec
dec
test
sbb
sub
nop
loop
shl
xchg
nop
and
push
mov
jle
loope
test
test
in
dec
jl
or
in
dec
out
test
mul
dec
mov
test
popa
neg
xor
inc
mov
(bad)
icebp
in
in
stos
push
fidivr
dec
fist
lods
mov
hlt
lods
or
sub
aam
mov
sub
xchg
in
mov
jmp
movs
mov
dec
jbe
sbb
and
xor
fadd
or
pop
das
xchg
hlt
or
pop
shr
add
pop
xchg
jmp
icebp
and
test
jle
aas
add
into
pop
fdiv
add
sbb
or
and
imul
arpl
fldenv
inc
or
ret
add
inc
sbb
adc
pop
fistp
cmc
addr16
cmp
ds
jae
imul
jge
ja
int
xor
push
cmp
loope
or
ret
cmps
sbb
fldcw
sahf
popf
jge
(bad)
jmp
repnz
dec
and
xchg
mov
pop
ins
add
mov
xchg
nop
pop
arpl
add
out
jb
mov
pop
adc
adc
xor
fcomp
pop
loop
mov
in
retf
pop
or
(bad)
mov
pop
jmp
(bad)
in
xchg
daa
scas
mov
adc
cmp
test
loop
sar
ins
xor
int3
cmp
test
add
sub
xchg
lods
inc
pop
sbb
add
icebp
mov
(bad)
or
out
sub
add
push
movs
mov
sahf
cmp
out
(bad)
mov
push
fisttp
adc
jle
ds
je
cmp
jp
mov
xor
pop
fwait
jb
inc
cs
mov
clc
out
int3
jp
ins
and
mov
jmp
iret
mov
test
js
mov
bound
or
mov
mov
in
push
mov
div
xor
sub
jmp
retf
push
loopne
mov
inc
popf
inc
add
stc
pop
fst
mov
cwde
int3
loopne
int3
ficom
(bad)
(bad)
dec
jle
mov
ins
jmp
div
xchg
mov
adc
and
jb
jo
inc
and
je
sahf
ss
push
shl
loopne
mov
push
stc
out
adc
mov
mov
xor
rcr
out
sub
mov
sub
dec
jb
push
lods
movs
bound
popfw
sti
and
loopne
lock
xor
push
shl
pop
gs
sti
ja
out
adc
shl
lahf
sbb
xor
pop
push
sub
mov
mov
xchg
sbb
out
icebp
push
(bad)
in
dec
jbe
push
add
fstp
(bad)
(bad)
iret
fistp
xchg
mov
enter
xlat
cwde
imul
icebp
sub
mov
repnz
dec
xor
bswap
xor
lock
and
out
aam
jmp
dec
cli
jg
inc
test
mov
pop
mov
mov
mov
inc
xor
out
adc
push
adc
cmp
jae
or
lahf
call
push
sbb
xchg
inc
xor
mov
int
iret
ror
in
(bad)
fist
dec
nop
idiv
xchg
hlt
(bad)
adc
fnstcw
pop
cmps
popf
or
mov
sbb
in
imul
xchg
iret
std
je
retf
adc
dec
push
jbe
jnp
mov
lock
outs
js
pushf
sbb
leave
inc
nop
xchg
cwde
stos
out
add
stos
and
push
mov
call
jecxz
xchg
out
or
and
sub
mov
jb
neg
sti
out
sahf
inc
scas
xor
xchg
in
cmps
inc
ret
cmp
mov
push
sbb
or
xchg
rol
cmps
inc
lock
mov
daa
ret
nop
stc
imul
xor
aad
(bad)
in
in
jmp
retf
cmp
aaa
lock
jb
inc
xchg
call
pop
pop
mov
xchg
mov
fistp
push
add
xchg
pusha
mov
xchg
sub
push
push
xchg
xor
(bad)
das
jmp
lods
andnps
ins
push
push
inc
test
nop
push
and
or
mov
push
aas
mov
push
pop
xor
mov
sub
fcom
xchg
push
dec
jae
imul
cld
clc
movs
idiv
inc
movs
and
push
gs
pop
sub
jno
xlat
xchg
mov
pop
lahf
push
out
dec
lods
pop
out
sbb
push
ds
push
or
adc
inc
imul
push
pop
in
pop
sub
jl
in
pop
pop
push
addr16
cmp
repnz
adc
cmp
cdq
or
arpl
pop
ins
mov
fisub
in
push
(bad)
inc
mov
pop
and
dec
jle
sbb
inc
pop
aam
sbb
sub
xchg
mov
data16
stc
xchg
add
sar
mov
movs
xchg
hlt
sbb
cmps
sbb
es
jge
std
mov
inc
jbe
ret
pop
out
scas
call
ja
push
sub
ins
xor
and
adc
jle
dec
xor
stc
test
cmp
enter
dec
jmp
outs
scas
cmp
stc
es
repz
stc
lods
outs
cmc
cwde
(bad)
outs
xchg
in
retf
mov
sti
jl
icebp
aas
add
and
xchg
lahf
stc
push
or
iret
xchg
in
and
jb
xor
sahf
or
inc
jle
aas
mov
push
mov
test
call
fbld
(bad)
cmp
jp
and
ds
dec
lea
mov
jmp
sub
sbb
cld
xchg
inc
ss
(bad)
fiadd
mov
xchg
sbb
(bad)
fld
adc
push
sbb
das
mov
(bad)
mov
xchg
mov
ss
xlat
push
mov
(bad)
repnz
sti
popa
jge
jmp
in
mov
dec
inc
sbb
mov
div
rol
cmp
xchg
stos
ret
frstor
fbld
lds
mov
lds
jecxz
lahf
popa
loope
jg
loope
out
cmc
cmc
ins
movs
sbb
jnp
in
sub
adc
mov
aad
jnp
push
fld
push
cmp
stc
sub
lock
loope
or
sub
pop
clc
(bad)
dec
push
push
push
loopne
and
lods
dec
mov
fnstenv
and
and
bound
and
and
pop
pop
stc
pop
sub
jge
pusha
push
iret
pop
test
mov
repz
in
popa
mov
movs
xor
repz
loope
loope
cdq
mov
sbb
or
in
dec
mov
mov
mov
mov
jmp
jg
sbb
test
and
dec
je
cmps
rcr
push
jge
cmc
ret
cdq
or
cmp
fwait
mov
stos
retf
dec
in
dec
ds
clc
sub
cmp
xor
js
sub
(bad)
jle
add
pop
aaa
sub
sbb
cmp
ins
pop
cmp
pop
mov
out
movs
sbb
sbb
inc
jle
mov
out
xor
clc
xor
popa
push
xchg
mov
sub
sbb
add
ret
ins
lods
pop
loope
out
repz
in
dec
dec
mov
mov
cmps
cmps
mov
scas
sub
retf
xchg
repnz
adc
adc
movs
aas
inc
and
rcl
aaa
popa
adc
js
mov
int
stos
mov
sub
leave
into
fcmove
mov
jmp
cmp
pop
mov
push
sub
shl
mov
loop
pop
xchg
jb
push
sbb
lea
fwait
jno
in
test
aad
mov
adc
xor
jmp
out
data16
sbb
adc
push
pop
fist
xchg
stos
mov
jecxz
xchg
dec
mov
inc
imul
xor
addr16
(bad)
cli
retf
push
inc
add
clc
in
ret
cmp
fadd
cmp
pop
jmp
bound
cli
adc
pop
inc
xchg
repnz
mov
mov
out
test
bound
sbb
into
sbb
or
jae
sub
push
test
pop
repz
sub
lahf
jne
or
and
and
pop
cmps
hlt
sar
inc
jg
adc
lods
shr
nop
rol
jmp
pop
mov
add
cli
add
push
push
and
push
jle
imul
pop
leave
mov
inc
push
or
mov
dec
in
popf
dec
jno
mov
or
pop
adc
inc
pop
les
addr16
stos
cmp
cdq
jae
or
imul
outs
xchg
(bad)
in
push
sbb
jns
outs
iret
movs
mov
jecxz
stc
and
js
jno
mov
pop
add
mov
sbb
clc
sub
cwde
sbb
push
cli
outs
sub
enter
mov
leave
test
retf
xchg
inc
lea
rcr
out
mov
ja
movs
je
cmp
jp
mov
(bad)
pop
pop
call
and
xlat
pop
fwait
mov
call
mov
mov
int3
or
push
sub
push
fistp
sar
jmp
cmp
adc
int
jmp
mov
xchg
mov
xchg
out
icebp
outs
mov
and
mov
movs
cmps
mov
and
repnz
lds
push
sub
or
cdq
ret
xor
xor
xor
sbb
test
or
dec
(bad)
xchg
dec
ins
scas
les
push
fidivr
push
ret
clc
repnz
fwait
shl
push
inc
rcr
ds
les
inc
dec
cmp
jle
mov
fadd
cmp
sub
push
pop
(bad)
mov
mov
mov
hlt
out
cmp
jno
int
enter
sbb
cli
jb
(bad)
shl
test
xchg
rcl
retf
dec
or
ret
lea
sbb
and
mov
dec
in
dec
mov
push
dec
fcom
fadd
cmps
je
iret
xchg
inc
mov
jmp
fdiv
rcr
mov
sub
and
lods
retf
mov
add
pop
out
js
sbb
add
sar
inc
mov
cmps
pop
imul
sub
mov
retf
jo
mov
mov
pop
or
or
push
lock
daa
xor
mov
or
mov
out
(bad)
jns
mov
test
push
test
call
addr16
aad
inc
repnz
or
neg
mul
fldcw
sbb
in
ds
(bad)
cmp
pop
into
push
xor
sub
jl
in
xor
mov
(bad)
enter
adc
push
in
jmp
inc
mov
xchg
inc
jl
div
pop
out
cli
inc
sub
sub
adc
mov
and
scas
xchg
(bad)
jns
mov
mov
retf
xchg
rol
pushf
cmps
rcr
push
rol
sub
fwait
add
sti
rol
add
jle
pop
gs
shr
sub
cmp
jl
inc
data16
adc
dec
mov
imul
repnz
mov
dec
or
aad
or
inc
sub
pop
mov
mov
pop
pop
or
xor
dec
push
sub
jg
sbb
inc
inc
ror
jg
xlat
outs
mov
xor
ds
mov
cwde
and
pop
add
jnp
cmp
xor
repnz
sbb
fld
je
test
mov
test
and
mov
mov
push
(bad)
clc
mov
mov
cli
cmp
mov
adc
sbb
imul
xchg
add
dec
push
mov
aaa
sub
push
add
cmp
rcr
stos
(bad)
lahf
loop
pop
jp
(bad)
repnz
pop
mov
iret
mov
sbb
movs
sub
sub
bound
xor
and
pop
adc
inc
pop
mov
gs
mov
adc
jbe
inc
xchg
cs
sbb
adc
pop
add
xchg
ins
popa
add
movs
mov
or
imul
imul
loopne
xchg
sar
inc
mov
imul
xor
in
jle
ret
sub
mov
add
(bad)
and
adc
push
rcl
movs
nop
fcmovnb
ficom
cs
jno
cmp
xor
jecxz
xor
add
call
nop
pop
ins
adc
ficom
pushf
js
lock
cs
pop
ret
aam
mov
into
mov
addr16
fmul
inc
test
dec
loope
clc
scas
aas
or
mov
lahf
icebp
cmps
mov
mov
sub
(bad)
stos
mov
xchg
das
(bad)
arpl
int
jle
shl
push
popa
aad
loopne
mov
out
pop
in
mov
or
mov
pop
sahf
xchg
xor
ror
(bad)
out
jne
loopne
jne
pop
add
je
push
sbb
scas
cmp
out
mov
sbb
jmp
scas
rcl
(bad)
xor
iret
pushf
mov
pop
or
xchg
fs
pop
and
mov
jmp
sbb
or
dec
xchg
inc
stos
(bad)
cmp
jmp
out
les
(bad)
jl
test
xor
ins
retf
cmp
pmullw
lea
jmp
aam
scas
dec
aaa
sahf
sar
outs
fimul
dec
sub
fwait
mov
or
jnp
push
int
jge
dec
scas
sub
mov
dec
(bad)
iret
repz
sub
pop
inc
and
sub
rcr
das
xchg
mov
add
scas
or
mov
cmp
(bad)
mov
pop
xchg
mov
jbe
loope
add
add
fwait
jne
pop
mov
lahf
(bad)
sti
push
jne
dec
inc
int
sub
push
mov
test
(bad)
arpl
xchg
bound
push
sub
mov
loop
retf
pop
idiv
ins
popf
cmp
mov
imul
or
cmp
jecxz
icebp
ror
mov
gs
add
mov
mov
jl
mov
scas
push
push
or
fwait
sub
dec
das
in
fs
sbb
movs
cmp
mov
mov
out
push
jle
push
sar
stos
dec
hlt
aas
sahf
movs
call
sub
jae
push
mov
inc
das
xlat
adc
xchg
retf
add
dec
xor
mov
and
xchg
jmp
in
xchg
dec
add
sahf
mov
fcomp
es
xor
clc
aad
das
mov
imul
rep
jg
cmp
pop
imul
sub
cmc
pop
iret
test
xlat
or
xchg
sub
movs
and
or
mov
ds
shr
into
adc
add
lock
mov
mov
es
jnp
inc
aad
pop
or
xor
cmpps
enter
cmp
dec
popa
inc
nop
ss
mov
xchg
adc
or
xchg
xchg
mov
int
cmc
cmps
pop
out
(bad)
pushfw
cmps
ins
imul
pusha
out
popf
xchg
or
nop
hlt
mov
cli
adc
shl
ins
rcr
adc
mov
push
xor
xchg
aad
fldcw
add
mov
(bad)
sbb
cdq
and
call
xchg
sbb
leave
dec
add
arpl
dec
(bad)
mov
ins
xchg
jp
sub
jns
jns
mov
jmp
shr
inc
inc
call
pop
jnp
loopne
pop
call
push
and
or
js
into
es
fcomp
lods
pop
je
lock
pop
mov
pop
xchg
xchg
mov
lods
inc
in
sub
xor
in
adc
popf
data16
push
and
mov
aaa
add
int
call
sub
push
xor
dec
int3
and
inc
jmp
ja
imul
xchg
push
shl
push
sub
push
mov
cli
aad
fst
pop
add
and
jnp
std
pop
dec
aam
mov
mov
jno
fdecstp
dec
rcl
adc
jno
cmp
stos
fdiv
into
xchg
xchg
nop
cmp
test
pop
xchg
mov
rol
ret
movs
xor
das
jmp
jle
or
inc
mov
or
inc
inc
ss
dec
sbb
lahf
xor
cmp
jge
aam
test
ds
iret
(bad)
cld
mov
shrd
jl
dec
into
sub
(bad)
and
test
es
and
or
popf
mov
add
scas
(bad)
sti
cli
mov
fs
jg
nop
call
pop
jno
or
(bad)
xchg
or
inc
jl
jns
mov
inc
sub
pop
mov
xchg
mov
jns
mov
push
mov
int3
sub
inc
fs
fs
or
les
mov
loopne
add
call
and
cmp
adc
push
sar
rcr
mov
cwde
jmp
out
inc
ret
mov
aam
add
fsub
xchg
jecxz
push
pop
sub
lods
es
or
jno
fcomp
mov
lds
inc
out
jl
xor
dec
and
fs
push
inc
cli
inc
sbb
adc
adc
stos
jmp
mov
pop
pop
or
rol
pop
cmp
shl
pop
in
xchg
cmp
jmp
je
std
adc
add
icebp
(bad)
cmp
xor
mov
inc
sub
sub
icebp
nop
mov
xor
jmp
retf
mov
pusha
popa
jl
cdq
mov
jecxz
fcmovnb
inc
lea
pop
call
sti
xor
xor
sbb
cdq
hlt
mov
loope
rcr
js
xchg
cmp
jecxz
cmp
aad
xor
cmp
jl
cmc
and
pop
mov
out
sub
push
add
in
pop
sub
rcr
into
jnp
repnz
sbb
pop
aaa
cwde
inc
cmp
xchg
addr16
outs
add
xchg
and
cmps
(bad)
mov
daa
jbe
mov
data16
aas
jecxz
test
mov
and
shl
sbb
pop
std
jg
enter
mov
mov
inc
mov
call
mov
jae
addr16
push
cld
sahf
(bad)
(bad)
mov
daa
jg
mov
stos
(bad)
jo
imul
cmc
mov
mov
pop
into
dec
mov
jo
fstp
mov
clc
inc
ins
mov
add
cwde
xor
jmp
and
outs
ja
cwde
cmp
sbb
fisub
int
adc
imul
hlt
(bad)
fimul
inc
push
imul
and
inc
outs
adc
pushf
aas
loop
adc
pop
nop
add
lods
ja
or
div
fild
cmp
xchg
mov
stos
adc
lahf
pop
jnp
call
mov
loop
push
and
sbb
enter
out
xchg
pop
xor
mov
ja
cld
push
or
int3
fstp
mov
pop
mov
xchg
stos
fimul
jg
int
adc
cmps
mov
add
mov
data16
adc
jb
movs
jp
cmps
sbb
jns
inc
sahf
jmp
(bad)
(bad)
sbb
push
push
sub
shl
sbb
in
ret
das
jge
xchg
arpl
sub
cmps
das
hlt
push
lock
jbe
in
out
push
jns
cs
pusha
mov
stos
and
loope
cdq
dec
jno
(bad)
sbb
mov
adc
sub
out
aam
xchg
(bad)
pop
cmp
or
in
hlt
pop
ret
xchg
push
int3
jns
sub
(bad)
out
call
mov
repnz
dec
sbb
pop
aas
fldenv
dec
push
cmp
pop
popa
aad
fs
in
jns
push
test
shl
pop
add
xor
adc
fisttp
cmp
push
shr
cmps
mov
scas
dec
movs
add
xchg
les
inc
rcl
adc
pop
int
xlat
and
clc
jae
(bad)
pop
push
sbb
call
retf
push
push
mov
arpl
mov
scas
jg
push
mov
scas
stos
jmp
pop
call
cmp
scas
stos
adc
adc
(bad)
and
xchg
call
iret
outs
out
nop
push
adc
mov
jmp
jmp
mov
mov
ret
fwait
push
outs
mov
add
xor
test
icebp
cmp
nop
jl
ret
sbb
(bad)
(bad)
push
inc
add
sbb
ret
push
push
lock
jnp
lahf
pop
push
dec
cmc
add
mov
dec
mov
(bad)
mov
sti
pop
pop
pop
xchg
stos
mov
mov
add
push
inc
outs
inc
dec
push
jb
fdivrp
sub
ja
jb
mov
xchg
out
inc
adc
repz
icebp
xor
and
das
hlt
ficom
dec
pop
xor
in
xchg
sub
fsub
mov
test
out
mov
ret
add
xchg
pop
jnp
imul
push
xor
movs
call
jo
dec
xchg
push
dec
outs
push
scas
pop
push
mov
push
mov
sbb
sub
cmp
push
ret
mov
sti
jecxz
jae
retf
xor
jb
jmp
adc
xor
sub
fnstcw
sbb
inc
inc
adc
or
(bad)
push
imul
retf
sti
xchg
scas
push
mov
mov
stos
or
lods
int
mov
pop
xchg
pop
je
push
pop
dec
jg
cmp
sbb
loop
mov
dec
xor
sti
jp
push
in
cwde
scas
xor
lea
loope
mov
enter
xlat
dec
div
in
neg
repnz
mov
mov
xchg
mov
and
sti
out
fcmovne
ficomp
push
cmp
mov
dec
or
daa
add
pop
inc
call
ficom
inc
mov
cdq
lods
pop
fist
mov
imul
(bad)
shl
mov
sub
sub
inc
imul
xchg
mov
int
inc
lea
je
jp
int
std
jle
jmp
mov
daa
das
mov
js
ret
clc
test
xchg
lea
lods
in
or
sti
mov
(bad)
mov
int
add
cmp
jmp
push
fs
sub
lock
push
int
sbb
dec
jle
icebp
into
call
jb
cmp
comiss
imul
cld
in
mov
fwait
ds
push
in
pop
add
dec
jge
add
(bad)
push
ficom
push
xchg
mov
pop
adc
shl
movs
inc
ret
dec
ins
daa
mov
ret
popa
xchg
dec
mov
mov
pop
or
sub
aaa
dec
dec
adc
scas
jl
push
in
add
std
push
ss
or
and
xchg
iret
cmp
pop
adc
or
daa
push
or
shl
mov
push
push
adc
gs
ret
sbb
push
sti
xor
stos
aad
jnp
xor
pop
or
pop
mov
ret
add
jle
xchg
jge
ins
pop
jo
ficom
xchg
xlat
ins
xchg
push
add
mov
mov
je
jl
pop
ins
cmp
cld
lahf
out
test
fisub
(bad)
add
pop
and
jle
arpl
or
pop
inc
test
movs
jnp
jnp
mov
xor
popa
lahf
int3
push
and
ins
fdivr
mul
out
lods
hlt
jo
or
es
jle
or
cdq
ret
pushf
jl
repz
out
cmp
arpl
adc
arpl
scas
and
stos
ss
ret
popa
sbb
inc
das
mov
ret
cmp
push
sar
lods
sub
or
dec
std
xchg
and
arpl
xor
mov
pop
fnstcw
jns
dec
(bad)
mov
pop
push
daa
fcmovne
sbb
ffree
loop
(bad)
mov
imul
aaa
inc
add
cld
test
les
pop
mov
ins
add
repnz
xor
mov
dec
cmp
loop
or
cmps
push
xor
lahf
div
repz
jle
gs
jnp
prefetch
or
mov
mov
popf
int
sti
repz
cmps
pusha
(bad)
repnz
and
adc
fbld
into
push
repnz
mov
clc
in
pop
xlat
mov
fwait
ret
add
js
cld
jo
add
jbe
test
inc
rol
loope
pushf
or
retf
sub
add
aam
dec
push
adc
xor
inc
pushf
mov
jg
jg
mov
push
sti
push
mov
xchg
loopne
pop
std
aad
cmp
inc
retf
inc
lods
mov
or
arpl
das
adc
icebp
popf
inc
inc
dec
(bad)
into
popa
into
js
mov
jle
out
addr16
and
shl
loope
int
sub
adc
lods
imul
pushf
jne
mov
popf
xor
out
inc
lods
ins
sti
shr
jbe
pop
fucomip
sub
jo
add
dec
jmp
or
dec
inc
sbb
test
dec
cmp
sub
xchg
mov
bound
arpl
ret
movs
imul
push
out
popa
int3
ss
out
icebp
fnstsw
sub
loopne
fidivr
pop
fwait
popa
cmp
mov
mov
mov
scas
loopne
iret
scas
mov
ror
out
dec
hlt
sti
cmp
jle
ja
shld
loop
in
mov
(bad)
push
xchg
js
mov
dec
xor
les
adc
xor
mov
jmp
cmp
test
mov
xor
int
add
das
rcl
jp
xchg
pop
push
cli
fidivr
sub
in
stos
dec
outs
cmc
add
std
sub
or
ror
sti
inc
out
push
fsub
xchg
retf
jg
(bad)
sbb
pop
and
pop
mov
jl
pop
push
jne
cmps
dec
sbb
fdivr
dec
adc
add
clc
cmp
cmp
adc
cdq
xor
rcl
mov
add
pop
lods
xor
shl
in
lds
stos
repnz
jl
inc
retf
jmp
inc
data16
and
inc
gs
inc
mov
addr16
dec
in
push
or
out
push
dec
repz
popa
cmp
pop
nop
mov
inc
adc
(bad)
xor
es
mov
stos
or
outs
fistp
mov
or
mov
sbb
sti
adc
and
sbb
inc
fcom
inc
stos
cmp
push
fwait
adc
mov
(bad)
add
stc
test
add
int
ins
dec
pop
xchg
xchg
cli
lahf
push
(bad)
loopne
push
inc
movzx
(bad)
neg
out
out
nop
pop
ret
mov
adc
mov
rcl
push
dec
pop
retf
adc
stos
mov
sbb
popa
jl
and
cmp
inc
cld
and
aas
pushf
sti
dec
cld
xor
repnz
mov
add
cmps
push
dec
aam
fs
push
out
xchg
es
mov
not
leave
retf
inc
xor
cli
add
xor
cmp
dec
mov
mov
aad
mov
stos
inc
mov
xchg
dec
inc
mov
(bad)
sub
or
je
push
or
aas
sbb
jo
pop
sbb
sti
(bad)
aaa
ds
das
mov
cmp
gs
mov
mov
cwde
xchg
lock
ins
inc
div
inc
mov
sbb
sbb
popf
push
nop
inc
mov
pop
sub
pop
push
test
mov
hlt
ror
rcl
test
gs
nop
sbb
pushf
sahf
ficomp
aaa
loop
xlat
scas
add
cmps
das
and
pusha
xchg
je
loop
gs
mov
cld
nop
mov
or
push
inc
xor
inc
adc
jne
aad
daa
mov
stc
and
pop
js
pop
push
mov
cld
mov
hlt
sbb
xor
jmp
lods
daa
(bad)
bound
sbb
stc
outs
mov
fisub
adc
imul
cmp
(bad)
imul
xchg
sub
repnz
inc
stos
test
imul
movs
repnz
(bad)
mov
int3
dec
pusha
retf
or
ficom
mov
mov
dec
mov
fdivrp
ror
sbb
xchg
ret
push
rsm
pusha
sar
inc
inc
push
fcmove
push
les
pop
sub
pop
das
pop
sahf
imul
je
test
xchg
shl
adc
daa
mov
push
frstor
dec
xchg
inc
cmps
fcomp
xor
je
mov
ret
add
sar
pop
lds
dec
push
aad
arpl
jp
cmp
or
outs
jo
sub
mov
pop
ss
mov
addr16
out
xchg
add
and
idiv
(bad)
sti
mov
adc
ret
cld
div
and
or
stc
push
xor
xchg
sti
pop
hlt
xchg
mov
imul
dec
pop
inc
ret
mov
push
ins
sbb
iret
aaa
jns
xor
es
push
xchg
pop
aaa
cmc
mov
mov
push
aas
mov
mov
leave
cli
push
outs
jno
xor
cmp
pop
dec
mov
add
neg
pop
add
cld
sbb
rol
test
sar
adc
or
add
cmp
(bad)
sub
das
dec
mov
and
ret
xor
in
jge
adc
jns
jp
cmps
(bad)
fidiv
and
(bad)
lahf
sub
pop
in
out
jns
frstor
jnp
addr16
dec
in
cwde
push
jmp
and
lods
jne
or
jl
adc
in
mov
xlat
mov
xchg
pop
hlt
movs
repnz
jnp
push
xchg
add
dec
jno
mov
or
icebp
and
cmp
ins
out
test
add
repnz
cmp
inc
pop
(bad)
(bad)
retf
inc
iret
inc
test
xor
aam
jmp
lock
sub
pop
cwde
or
cmp
xchg
lea
jbe
push
push
and
xchg
into
stos
int3
rcr
jecxz
pop
mov
idiv
sub
dec
ins
xor
clc
jmp
mov
jmp
cld
push
test
adc
arpl
pop
jae
inc
or
lahf
mov
xchg
pop
jle
dec
push
mov
mov
sub
nop
cmp
fidivr
dec
xlat
mov
(bad)
mov
lods
cmp
call
and
retf
jmp
cdq
jge
jmp
pop
or
jl
xchg
add
cmps
xchg
jo
mov
gs
xchg
jne
in
call
jle
push
mov
cmp
xchg
cwde
mov
push
mov
push
cwde
mov
xchg
adc
inc
outs
ss
stc
cli
cwde
test
div
cmp
ss
(bad)
je
jno
sahf
lea
or
call
loopne
or
mov
fs
aad
adc
clc
sahf
mov
inc
or
fild
in
mov
xchg
icebp
mov
addr16
adc
pop
mov
add
pop
shl
leave
clc
mov
mov
sub
aam
xchg
push
mov
xor
jae
or
sbb
and
mov
dec
nop
hlt
push
pop
pop
pop
xchg
mov
int
add
aas
sbb
ret
push
push
es
xchg
push
loop
js
ins
inc
fsubrp
aad
ins
inc
push
mov
lds
pop
retf
popf
(bad)
repz
in
fimul
push
mov
(bad)
jne
ret
(bad)
outs
xor
push
and
or
or
sbb
inc
jmp
push
es
push
lds
call
ins
cdq
out
pop
add
ins
out
or
pop
test
sub
cmp
xor
int3
xor
je
pop
or
cwde
and
rcr
pushf
pop
mov
push
sub
sbb
(bad)
sahf
xchg
inc
xchg
mov
or
shl
imul
cmp
inc
mov
mov
fist
rcl
mov
leave
xor
outs
aam
fmul
int
dec
mov
fcmovb
cmp
dec
xor
jbe
lahf
neg
mov
loopne
jg
aad
les
fimul
jmp
outs
and
sahf
mov
jmp
pop
fs
inc
fsubr
jns
and
and
ror
sti
dec
test
stos
dec
ins
jmp
popf
jle
aas
pop
(bad)
ficom
or
dec
iret
add
sub
nop
mov
loope
popa
shl
nop
(bad)
jo
mov
inc
sbb
es
mov
xchg
into
into
stos
fidivr
repz
mov
xchg
mov
adc
retf
lahf
dec
jle
hlt
dec
push
es
sar
into
jbe
xchg
or
jle
mov
mov
ret
fnstenv
jmp
repz
pop
jmp
pop
push
imul
adc
shl
dec
enter
push
push
cld
sub
leave
pop
in
dec
add
rcl
(bad)
fwait
out
or
jae
stc
and
jmp
cmp
mov
cmp
push
mov
(bad)
jne
pop
retf
pop
pop
inc
std
(bad)
dec
xor
(bad)
fist
fs
mov
jb
sbb
comiss
lods
in
xchg
dec
ret
fs
test
in
mov
js
scas
xlat
mov
xchg
push
jo
push
fld
xchg
xchg
xlat
mov
int3
jmp
sub
cmp
jmp
sbb
mov
xchg
xor
cli
jne
popf
xchg
in
sbb
gs
add
pop
jno
lea
rcr
jae
ja
inc
inc
jg
push
push
or
data16
aas
pop
mov
dec
into
sar
ins
jecxz
popf
outs
push
pop
dec
pushf
retf
out
xchg
cmp
xchg
lahf
les
sbb
ja
adc
jmp
pop
mov
mov
lods
(bad)
push
xchg
sbb
(bad)
ror
cmps
test
mov
xchg
outs
xor
cmp
mov
inc
or
push
cmp
out
jge
loop
cmp
sbb
ds
ret
jecxz
xor
mov
add
or
(bad)
mov
(bad)
out
mov
dec
(bad)
aas
(bad)
sti
sbb
loopne
mov
imul
scas
stos
xchg
test
les
icebp
push
repnz
pop
inc
and
fwait
int
in
push
dec
jae
add
mov
call
lds
clc
dec
pushf
adc
cmp
fistp
pop
pop
and
mov
je
xor
popf
adc
clc
imul
rcr
sahf
pushf
call
icebp
aaa
push
jb
fdiv
push
inc
push
jl
mov
pop
rcl
ds
push
jno
cmp
ret
movs
aas
shr
adc
shl
pop
cmp
shr
(bad)
addr16
outs
lahf
cld
add
adc
sbb
daa
test
mov
int
dec
test
lea
(bad)
inc
inc
mov
sub
xchg
aaa
adc
in
stos
or
arpl
jp
popa
stos
adc
outs
hlt
aas
mov
and
jmp
dec
or
in
es
into
sub
mov
push
lahf
or
pop
mov
dec
and
mov
sbb
bound
cs
mov
leave
jno
popf
pop
ret
nop
(bad)
pop
rol
imul
scas
cmp
nop
enter
cmc
movs
or
stc
cmp
add
push
jmp
loop
add
sbb
std
div
add
retf
hlt
mov
mov
mov
cmp
cmp
int3
cwde
out
mov
xchg
jae
mov
ins
call
std
mov
and
js
pop
xchg
cli
retf
mov
adc
jmp
leave
inc
push
mov
add
push
jle
mov
out
inc
hlt
popf
cmp
xchg
lock
xchg
push
push
ror
mov
cmp
mov
mov
pop
out
pushf
aaa
fwait
xlat
sbb
jle
mov
ins
dec
in
add
inc
mov
pop
fwait
mov
xlat
adc
cmps
bound
add
push
rol
sub
fcomi
mov
sub
xchg
pushf
loope
pop
mov
cmps
pop
mov
push
mov
loope
push
out
retf
fwait
jmp
rcr
inc
push
mov
mov
leave
xor
adc
and
movs
xor
test
jmp
xchg
dec
xor
or
in
lods
jae
jo
scas
popf
call
sahf
mov
popa
inc
add
pop
mov
cmps
std
jl
xchg
ret
sub
push
sub
jp
sar
inc
mov
or
sti
mov
sbb
push
ss
vptest
add
jle
push
xor
sbb
out
dec
add
xor
pop
gs
ds
xchg
cmps
retf
push
sub
push
lods
and
push
xor
inc
add
mov
scas
inc
inc
mov
(bad)
clc
(bad)
scas
daa
mov
inc
retf
xchg
jl
sbb
push
shl
enter
mov
test
repnz
fcom
mov
out
gs
xlat
hlt
pop
dec
sbb
sbb
mov
cmp
sahf
aas
push
rcr
scas
push
jmp
popf
fisub
pop
jmp
dec
lea
call
jbe
in
sahf
out
pop
in
add
dec
ret
mov
add
jle
jge
or
add
mov
fsub
(bad)
cwde
add
sub
mov
xor
daa
fdiv
jne
cmp
rcr
rcr
pop
jo
test
inc
les
xlat
int
icebp
cmp
cmp
and
or
xchg
xchg
add
xchg
fucomip
adc
dec
imul
pushf
jmp
cwde
jmp
dec
loope
sti
mov
add
test
mov
dec
sub
mov
pop
in
fs
lods
add
mov
(bad)
adc
ds
pop
loope
mov
and
hlt
jbe
sbb
mov
xchg
cmps
dec
cmp
data16
pop
and
jmp
dec
mov
cmp
(bad)
daa
xchg
and
(bad)
in
scas
push
cld
or
fs
mov
pop
sub
mov
inc
(bad)
pop
mov
scas
out
pop
fnsave
xchg
scas
addr16
sar
mov
dec
aad
dec
std
xchg
pop
push
adc
push
int
dec
in
sbb
ds
dec
and
jg
sub
out
je
(bad)
cmps
or
cmp
nop
cmp
addr16
mov
mov
test
fwait
(bad)
adc
add
jge
inc
xchg
mov
mov
repnz
inc
enter
mov
cmc
add
mov
xchg
xor
push
dec
outs
fwait
in
pop
movs
push
bound
stos
add
xor
stos
jmp
(bad)
and
and
xchg
xor
cdq
adc
mov
inc
jne
scas
push
test
fs
dec
ds
popf
mov
mov
ret
ins
sub
in
mov
bound
sub
inc
scas
je
pop
gs
aad
loop
jmp
daa
and
scas
imul
rcr
fadd
fisttp
pushf
fst
sti
sbb
inc
cmp
dec
je
pop
adc
loope
jmp
cmps
idiv
pop
push
movs
adc
cs
jge
(bad)
sbb
pushf
call
(bad)
daa
jae
pusha
cwde
xor
mov
xchg
scas
adc
hlt
sbb
inc
mov
pop
std
mov
mov
cmp
int3
popf
xor
add
fild
or
add
cwde
movs
iret
dec
push
dec
ins
pop
lds
test
xchg
pop
cdq
xchg
cmp
ja
loop
inc
test
mov
pop
mov
pop
call
sub
loop
retf
ds
lock
cmp
bound
adc
scas
mov
(bad)
icebp
push
xchg
fbstp
out
or
sbb
mov
and
jne
adc
xor
jle
push
hlt
and
add
sub
dec
add
xchg
sbb
aaa
xor
adc
mov
cmps
sub
and
or
sub
and
mov
sti
ins
and
pop
mov
or
loope
into
es
push
call
adc
cdq
xchg
cs
cld
jl
mov
lahf
into
xor
inc
jb
mov
pop
and
pop
jge
(bad)
sub
fs
dec
sbb
add
jg
xor
mov
loopne
inc
nop
mov
fmulp
mov
and
(bad)
mov
mov
sub
repz
push
fist
pushf
ret
(bad)
ficomp
cmps
add
sti
cli
(bad)
in
test
jo
add
(bad)
cdq
xchg
(bad)
ror
fnstsw
int
in
retf
mov
add
jecxz
mov
jo
fimul
push
in
into
aam
(bad)
lods
cld
dec
push
dec
shl
mov
aam
daa
(bad)
dec
add
push
lds
outs
iret
sub
loopne
mov
sbb
xchg
repnz
sar
repz
out
and
add
inc
and
ror
idiv
fs
sbb
push
(bad)
sbb
push
fs
xor
lahf
and
push
loopne
mov
stc
pop
mov
cmc
push
cdq
push
test
dec
jecxz
jl
xchg
ret
and
aam
or
pushf
and
and
mov
shl
stos
shr
dec
bound
popa
js
push
repz
dec
cmp
xor
(bad)
adc
or
xor
sbb
sub
xchg
and
push
add
push
neg
rcl
or
aam
jno
sbb
jns
xor
inc
fcom
ds
xchg
mov
sub
fwait
lea
js
inc
mov
repnz
add
add
(bad)
pop
std
call
push
ss
scas
jnp
xchg
cdq
cli
int3
mov
out
mov
and
or
sbb
sahf
fsub
enter
jg
xchg
leave
loop
daa
jns
jmp
lahf
adc
call
ja
mov
or
out
lock
mov
jb
fsubr
loope
adc
mov
cld
xor
pop
mov
out
js
(bad)
in
cli
or
push
push
fst
sbb
xor
sub
mov
call
dec
push
jmp
jno
(bad)
sti
hlt
ror
sub
mov
(bad)
jmp
stc
jp
inc
jnp
call
pop
add
push
and
ret
fist
jne
sbb
fnstenv
jl
dec
pop
jne
or
repz
leave
repnz
inc
or
jno
jmp
outs
(bad)
lock
and
(bad)
cmps
and
dec
cmp
add
(bad)
pushf
scas
sbb
jmp
mov
out
pop
mov
fadd
jmp
test
lea
push
push
fstp
ret
movs
xor
inc
push
shr
pop
in
call
fsubr
ja
sub
je
imul
neg
outs
cwde
rcr
aas
and
push
sub
out
inc
out
or
call
lods
fldenv
mov
add
lock
pop
(bad)
bound
pop
xchg
in
fcom
int3
sbb
pop
jnp
mov
and
lods
jge
leave
fcomp
xor
aas
out
(bad)
call
and
arpl
(bad)
fcomp
and
mov
xchg
sub
idiv
je
sub
jbe
sahf
mov
aaa
mov
fcom
add
es
stos
out
and
and
xor
inc
cmp
pushf
dec
mov
push
or
ret
movs
adc
push
sub
xchg
fwait
xor
mov
pop
xchg
xor
(bad)
dec
push
pop
or
fimul
repnz
dec
shr
leave
or
out
and
push
and
mov
ret
lods
(bad)
aam
iret
ins
cmps
mov
arpl
xchg
mov
jmp
cmp
mov
in
mov
sbb
adc
xor
cmp
(bad)
sar
mov
or
xchg
out
sub
mov
mov
ins
add
fisub
pop
(bad)
jne
aad
inc
mov
cmc
xor
imul
lds
aam
shr
xchg
lahf
xor
sub
dec
cmp
or
ja
mov
mov
addr16
dec
xchg
cmc
adc
out
jne
sbb
jbe
jnp
loope
add
(bad)
jo
adc
pop
inc
jg
mov
sub
sbb
inc
jbe
not
out
dec
jge
or
ret
mov
imul
fadd
xchg
call
push
movs
push
xchg
or
adc
sar
(bad)
mov
mov
ret
fild
xor
call
sub
mov
pop
mov
add
pop
call
push
(bad)
sub
pop
add
jge
push
xchg
adc
cmp
cmps
pop
pop
test
clc
push
dec
xor
stc
shr
inc
out
int3
out
inc
jp
cmp
ja
jne
jle
or
pop
cli
arpl
xlat
inc
xchg
mov
std
into
or
or
pushf
pop
fs
loopne
nop
rol
pop
mov
push
cmp
in
jl
and
push
or
jmp
and
push
mov
inc
ja
add
or
cmp
pop
test
push
or
push
fld
fistp
out
movs
sbb
test
loop
loop
ret
pop
out
rcl
test
aad
(bad)
push
sbb
mov
jo
dec
arpl
imul
adc
adc
inc
jmp
ins
popa
idiv
cmp
out
loop
sbb
retf
(bad)
cmc
xor
adc
in
outs
sub
inc
stc
xor
int3
inc
loope
daa
xor
nop
cdq
addr16
lock
mov
outs
push
call
xor
and
(bad)
pop
stc
repnz
ret
inc
xor
fnstcw
rol
mov
push
add
push
stc
imul
xchg
inc
inc
lfs
ror
retf
cmp
outs
(bad)
adc
jo
mov
iret
out
test
fimul
out
test
mov
or
xor
mov
xlat
pop
lahf
ds
hlt
sbb
mov
scas
mov
jmp
ret
fdiv
retf
cmp
mov
or
pushf
dec
cmp
jae
dec
jp
fs
mov
(bad)
fwait
(bad)
dec
sar
js
loopne
nop
jns
push
mov
repz
jmp
pop
aas
xor
or
out
loope
mov
out
mov
js
and
pop
adc
lea
xchg
mov
call
fdiv
rcl
xor
out
cmp
loopne
xor
int
sbb
scas
pop
sbb
test
inc
(bad)
push
add
hlt
or
ins
push
jmp
push
js
shr
push
es
mov
push
mov
cmp
jae
(bad)
and
call
fwait
ins
push
push
enter
pop
mov
out
mov
jmp
fwait
aas
mov
dec
mov
int3
in
loop
push
les
sub
mov
out
mov
inc
sub
fs
mov
sub
dec
pop
pop
pusha
daa
pop
push
mov
rol
out
mov
test
dec
test
jns
mov
mov
sub
xchg
pop
ins
fdiv
(bad)
neg
adc
mov
fldenv
add
sti
daa
repnz
stc
cmp
clc
mov
dec
scas
pop
inc
mov
jmp
popa
or
inc
inc
out
xor
xor
pop
sbb
test
jns
retf
stos
xchg
aas
imul
sub
add
jo
loop
inc
dec
call
push
mov
inc
jmp
or
mov
fdiv
rol
sar
mov
ins
add
enter
mov
cli
xor
movs
ins
add
push
ror
or
jl
mov
push
mov
jmp
pop
adc
push
(bad)
cmp
in
push
and
pusha
ins
int
inc
inc
pusha
and
aad
and
lahf
cmp
mov
and
enter
scas
imul
dec
ja
push
lods
mov
lods
adc
out
fwait
mov
aam
fcom
jb
xchg
xor
hlt
lods
inc
mov
sbb
fidiv
retf
pop
movs
pop
ds
rcr
rol
or
ss
xchg
and
cmc
and
push
inc
dec
push
cmp
xchg
push
rol
push
or
or
jmp
dec
dec
adc
add
mov
inc
je
jmp
sub
inc
and
push
repnz
nop
xchg
ins
or
xor
dec
or
xchg
mov
gs
xor
fbstp
add
push
ret
inc
mov
std
xor
mov
jmp
loope
jecxz
mov
inc
add
adc
sub
pop
adc
sbb
sbb
push
xlat
cmp
push
dec
jbe
enter
stos
push
pop
nop
dec
loop
in
cmp
call
xchg
pop
or
retf
mov
fst
xchg
jmp
xlat
pusha
mov
pop
bt
adc
mov
iret
loop
les
add
imul
push
icebp
push
or
mov
push
mov
call
aad
xchg
enter
xchg
sti
out
sub
push
fnstsw
push
and
in
aad
pop
mov
loop
pop
xor
mov
lds
cmp
arpl
mov
rcr
test
inc
bound
fs
nop
hlt
or
mov
(bad)
pop
adc
pop
popa
adc
popa
adc
dec
mov
xchg
test
xchg
hlt
push
sbb
cmps
ds
jns
xchg
or
ins
sbb
ja
ds
gs
cmps
mov
cmps
jg
dec
arpl
cdq
adc
xchg
mov
addr16
imul
dec
arpl
add
inc
(bad)
jmp
test
jp
sub
xor
hlt
mov
cmp
movs
rcl
pop
pop
movs
das
pop
movs
cwde
mov
lahf
mov
push
iret
sbb
loop
mov
and
outs
int3
data16
das
push
jns
or
pop
mov
outs
pop
pop
add
lahf
inc
sahf
pop
jge
and
mov
mov
dec
cmps
mov
ss
cs
xchg
dec
mov
or
lods
pushf
cmp
int
push
mov
add
scas
mov
inc
cmps
xchg
out
mov
in
pop
push
jae
aam
test
push
push
sbb
ret
cmp
or
add
dec
jle
dec
sbb
and
cmp
add
popf
jnp
pop
les
mov
mov
add
push
in
dec
retf
icebp
mov
or
cmp
lods
xchg
shr
enter
xor
jmp
int3
(bad)
inc
ds
sub
cli
add
adc
xchg
sub
mov
sub
adc
adc
cmps
push
movs
cli
stos
addr16
or
adc
in
push
inc
push
out
pop
mov
jge
test
repnz
pop
and
xlat
arpl
add
inc
repz
dec
mov
mov
push
enter
sub
das
adc
ror
loop
sub
xrelease
div
mov
stos
test
jp
hlt
movs
jmp
gs
sbb
mov
out
cmp
fcomp
sti
add
mov
outs
lods
repnz
mov
push
ret
mov
outs
inc
fidiv
js
fs
call
je
loopne
sub
out
in
outs
loope
xchg
sbb
mov
sbb
fisttp
jmp
lahf
neg
sub
add
(bad)
pop
fdivr
add
fcmove
pop
xlat
pusha
xchg
addr16
push
js
sub
das
mov
xlat
push
mov
lock
fcom
ja
nop
adc
les
das
cmp
ds
xor
xor
lods
mov
xchg
jl
dec
jge
jnp
push
adc
cmc
aas
sbb
mov
mov
and
jne
mov
xchg
dec
leave
fdiv
push
ja
loope
sti
icebp
jmp
cmps
les
stos
push
mov
mov
push
das
push
hlt
sub
sub
cli
sti
mov
xor
xchg
mov
mov
cmps
mov
repz
jmp
inc
push
jbe
add
mov
ins
jle
mov
and
movs
fs
mov
out
ja
rol
mov
retf
les
dec
mov
push
mov
pop
out
inc
pop
jne
cmp
addr16
add
aas
xchg
cmp
retf
mov
ss
lds
mov
xor
aas
jp
inc
cmp
stos
ret
sub
scas
repnz
mov
imul
and
sbb
adc
rcr
adc
mov
stc
xor
push
cmp
mov
out
loop
stc
outs
shl
out
scas
leave
jo
ret
jl
inc
shr
shl
push
pop
mov
jno
push
aam
fdiv
and
mov
mov
nop
xchg
in
push
xor
add
jbe
scas
scas
mov
xchg
jne
icebp
adc
ja
outs
and
xchg
repnz
daa
rcr
aas
mov
pusha
push
js
inc
ret
scas
div
or
dec
pop
and
or
pop
daa
data16
jge
push
call
das
imul
jmp
out
pop
fmul
repnz
test
mov
ret
cdq
mov
dec
push
mov
shr
repz
outs
mov
pop
dec
xlat
push
test
and
sub
popf
push
repnz
je
pop
xchg
inc
and
pop
xchg
or
xor
mov
out
cwde
adc
addr16
xchg
clc
push
mov
add
or
mov
jae
ficomp
mov
dec
inc
jle
rol
shl
sti
xchg
mov
outs
test
outs
mov
out
call
push
mov
jns
inc
pop
pusha
cmp
dec
mov
sahf
mov
das
cdq
jo
retf
mov
push
pop
mov
aaa
sbb
unpcklps
mov
push
push
test
(bad)
aam
rcr
pop
loope
inc
prefetch
pop
rol
inc
xor
imul
dec
(bad)
test
lds
add
mov
cdq
pop
pusha
jae
shl
xchg
sub
clc
jno
cmps
xchg
rcl
jl
call
or
push
mov
sub
jae
movs
add
out
shl
xchg
pop
or
add
and
pop
addr16
mov
dec
cmp
jns
daa
in
jno
push
(bad)
and
push
xor
(bad)
pusha
ds
imul
add
popa
xchg
or
xchg
cdq
cmp
adc
push
imul
fiadd
mov
sub
in
cli
call
test
lds
or
scas
pop
xchg
(bad)
ror
xor
push
shl
mov
adc
adc
or
cmp
or
stos
enter
imul
fdiv
mov
pushf
shl
xor
ins
(bad)
cmp
sub
mov
inc
(bad)
int3
mov
in
je
sub
mov
into
pop
bound
mov
jl
mov
into
imul
pop
stc
cmc
or
xor
int3
outs
cli
dec
and
ss
(bad)
aas
stos
test
push
popf
jecxz
sub
inc
inc
or
add
test
dec
ror
mov
cmp
popf
sbb
(bad)
mov
ficom
push
sub
push
jge
adc
fdiv
sahf
xchg
mov
fstp
(bad)
mov
outs
lock
adc
jno
ins
(bad)
and
sbb
xor
enter
daa
retf
or
or
iret
std
inc
pop
pop
imul
stc
mov
scas
sub
int
lea
jge
xchg
aam
imul
fstp
pop
push
jl
or
pop
in
add
int
jmp
aas
(bad)
out
mov
loopne
pop
pop
call
ja
in
dec
mov
mov
mov
mov
jg
pop
lods
jb
sub
inc
jle
xchg
jle
sti
push
mov
sbb
xchg
jbe
in
cmps
inc
ret
xlat
enter
and
sbb
xor
repz
sbb
fstp
movs
mov
xchg
sub
inc
outs
fdivr
sub
dec
adc
jns
cmp
cmp
repz
cmp
cmps
fisubr
jmp
cli
mov
retf
std
xor
(bad)
stos
aam
push
jbe
or
lahf
cmp
shl
mov
or
adc
sar
adc
fwait
dec
imul
pop
sahf
lahf
test
retf
js
repnz
je
and
lock
nop
aad
add
dec
mov
daa
stos
movs
lea
stc
(bad)
sub
jbe
shl
retf
test
jne
mov
out
fldl2t
arpl
js
js
push
sub
lds
sbb
add
lahf
mov
mov
test
dec
mov
fistp
aaa
or
sbb
movs
adc
xchg
inc
push
pop
sub
movs
mov
imul
sub
add
mov
jno
dec
adc
ss
retf
sub
add
xor
xchg
sbb
and
lock
call
sbb
lea
sub
inc
jmp
lahf
cmp
sub
dec
aam
jbe
stos
ret
mov
sub
ret
cli
mov
push
mov
ins
cmp
cs
scas
and
jp
stc
and
mov
lock
imul
xchg
shl
add
aaa
lods
shl
add
addr16
jnp
inc
push
xchg
cmp
jo
push
mov
lods
test
ins
mov
and
xor
sub
js
mov
or
ror
test
add
(bad)
call
mov
add
push
mov
les
jo
xchg
test
int
stos
and
push
inc
mov
in
mov
add
les
cmp
sbb
(bad)
ins
mov
lods
jbe
cmp
mov
pop
ins
mov
je
ror
cmc
lock
push
jmp
jo
inc
add
adc
rcl
inc
inc
(bad)
test
enter
mov
pop
mov
push
adc
fnstenv
gs
sar
imul
cmp
sub
or
out
cmp
or
xchg
jnp
cmp
mov
adc
xchg
push
jmp
ds
in
sub
int
pop
pop
inc
mov
sub
jle
or
mov
out
adc
xchg
inc
push
or
inc
xor
outs
sub
iret
or
iret
(bad)
hlt
rcr
sub
ds
mov
push
adc
fld
mov
sbb
mov
icebp
pusha
sub
ds
fs
or
cmp
arpl
stos
in
add
xchg
fmul
test
push
cld
ins
cmp
fldenv
jmp
cmp
(bad)
cmps
scas
and
ror
std
sub
(bad)
shr
and
movs
je
arpl
fst
out
outs
cs
xlat
pop
mov
(bad)
cmc
repnz
retf
xchg
test
ss
imul
cs
rol
(bad)
div
cmp
sti
stos
aad
push
fistp
add
fmul
cdq
iret
adc
xchg
aad
jmp
xchg
(bad)
jge
dec
cmp
mov
ds
in
mov
jecxz
movs
mov
add
pop
xchg
inc
push
in
adc
(bad)
xchg
sbb
rcr
cmp
mov
push
ud0
sbb
stc
sahf
jge
loope
movs
adc
movs
jp
into
xchg
pusha
lahf
je
adc
push
pop
cdq
sbb
or
pop
cmovb
bound
push
jns
mov
pop
movaps
dec
add
push
push
cmp
ret
aas
ja
movs
(bad)
mov
pop
jge
mov
fild
mov
or
jp
fdiv
pop
mov
clc
pop
jbe
xlat
test
inc
in
clc
and
pop
ss
and
xor
mov
ins
adc
fs
sti
adc
loope
call
in
pop
inc
out
or
pop
clc
int3
jg
lea
inc
push
lds
xchg
daa
push
jmp
inc
mov
xor
dec
pusha
out
dec
in
jp
sbb
dec
and
out
push
stos
loope
mov
iret
call
inc
cmp
outs
sbb
enter
mov
xchg
aaa
add
and
dec
pop
xchg
push
sub
sbb
or
mov
arpl
rol
aad
ins
or
je
push
jmp
or
mov
mov
mov
cmp
xlat
daa
mov
(bad)
out
push
mov
add
cmp
mov
adc
aam
add
pop
pop
pop
das
lds
xor
jbe
movs
imul
mov
mov
aas
dec
jnp
jno
sbb
fcmovnu
fnstenv
mov
push
add
fcom
xor
addr16
hlt
pop
das
lock
sahf
push
int
xlat
sti
imul
push
push
xchg
jo
dec
ficomp
ss
aam
sub
fdivr
je
jg
ss
lods
(bad)
sub
inc
popf
mov
dec
movs
iret
push
cmp
xor
aam
retf
movs
mov
arpl
add
retf
pushf
mov
dec
mov
dec
pusha
push
popa
nop
mov
lods
push
aas
ins
mov
scas
loopne
arpl
push
adc
scas
cmp
sar
std
shr
ss
push
push
js
aad
jl
xor
jo
mov
fdiv
aam
pop
jo
hlt
std
add
jae
mov
dec
mov
jne
fst
lods
ret
inc
or
in
cmp
cmp
les
push
push
push
pusha
call
and
fimul
xchg
and
or
mov
or
arpl
dec
mov
mov
hlt
or
call
push
mov
sbb
sbb
push
dec
ds
jae
(bad)
adc
in
xchg
cmp
stos
shr
push
out
adc
sbb
imul
jo
arpl
add
lods
stos
jo
add
mov
mov
rcl
lock
pusha
sbb
mov
out
add
and
and
push
xchg
jno
data16
fld
pushf
sub
int
mov
inc
sbb
les
cmp
pop
cmp
cld
(bad)
pcmpeqd
cmp
inc
xchg
sub
into
jecxz
shl
sbb
sbb
push
mov
imul
movs
sub
cmp
std
ins
mov
aaa
xchg
enter
mov
fnstcw
dec
ins
cmp
mov
mov
mov
rol
fdivp
push
cmp
iret
call
aam
jae
push
mov
jp
xor
sti
push
push
add
je
xor
push
popa
je
mov
jae
sahf
mov
sbb
imul
pop
mov
outs
xor
pop
bound
cwde
fadd
or
mov
sub
mov
enter
pop
push
je
fcmovbe
pop
popa
and
mov
ds
dec
adc
cmc
sti
push
in
xchg
inc
inc
ss
fistp
loop
popa
enter
xchg
cmps
xor
push
dec
add
xlat
repz
sti
add
mov
mov
shr
mov
mul
mov
addr16
jg
sub
jecxz
std
jo
inc
or
push
or
cmp
jle
in
or
or
xor
cmp
mov
inc
xchg
xchg
popf
xchg
jnp
loopne
addr16
or
inc
test
cmp
frstor
data16
xor
mov
sbb
and
imul
mov
les
cmc
sub
(bad)
int
push
sbb
rcr
cmp
sub
dec
lods
mov
fist
(bad)
aam
or
out
test
dec
jmp
mov
mov
push
add
jno
in
loopne
(bad)
js
mov
mov
test
pop
jne
push
ins
leave
add
clc
jns
cmps
mov
cli
mov
pop
mov
push
lock
ja
adc
(bad)
dec
sbb
(bad)
sbb
stc
and
call
je
adc
js
cmp
pop
pop
fucomi
cmp
dec
sbb
aas
sbb
cmp
in
stos
push
(bad)
(bad)
mov
pop
shr
or
add
sbb
lahf
pop
add
push
sbb
mov
lock
daa
cli
std
xchg
addr16
lock
(bad)
aad
rol
jg
push
push
leave
aas
mov
lods
test
sub
jnp
inc
sbb
call
mov
adc
xor
ss
int
xor
push
add
jmp
fs
movs
mov
(bad)
xchg
movs
in
jmp
mov
and
pop
jb
push
jne
adc
pop
jno
push
xchg
test
xor
inc
cwde
push
ss
mov
cmp
adc
or
xor
pop
cwde
sbb
in
cs
adc
rcl
add
scas
int3
and
inc
jae
out
ficomp
es
or
jnp
int3
push
cmp
mov
sbb
push
push
out
xor
(bad)
mov
out
int3
jae
pop
(bad)
or
in
xor
sub
fisubr
rcl
loopne
or
out
adc
in
xchg
arpl
mov
cmp
popa
in
(bad)
int
out
adc
mov
into
call
shl
mov
add
pop
(bad)
repnz
xchg
stc
ffree
or
push
std
lock
repz
and
or
and
cmp
mov
mov
in
sub
and
cwde
add
pop
loope
xor
imul
bound
xlat
pop
dec
push
mov
jle
sub
dec
xchg
fadd
xchg
leave
es
pop
jp
push
cmp
movs
pop
in
shr
gs
sahf
xor
jnp
and
pop
into
cmc
js
jg
sti
dec
jmp
xchg
mov
mov
in
jge
enter
jp
gs
cld
aam
(bad)
lods
add
or
fbld
add
sub
loopne
das
movs
in
lods
jnp
mov
mov
xchg
sbb
sbb
xor
loop
inc
xor
jne
fcomp
int3
fidivr
loopne
xchg
mov
jp
pop
and
jb
cmps
xchg
adc
cs
sub
cli
outs
loopne
call
ins
icebp
jb
test
call
cli
mov
mov
sbb
ds
jbe
mov
push
dec
mov
test
loope
mov
and
out
sub
mov
std
xchg
push
sbb
push
int3
stos
or
push
xor
je
jb
fwait
inc
cmps
pop
mov
sbb
and
clc
sub
call
sti
ss
aas
mov
push
jecxz
test
(bad)
xchg
xchg
das
adc
cwde
fsubr
sbb
cs
iret
sti
and
mov
jge
xchg
in
and
ss
mov
and
pop
push
mov
lods
cmps
ds
sbb
adc
xchg
gs
mov
pop
fld
cmp
enter
add
loop
sbb
(bad)
mov
retf
mov
pop
cli
and
mov
cwde
inc
adc
(bad)
enter
sub
out
dec
cmp
imul
add
loopne
test
in
inc
adc
mov
loope
mov
mov
mov
pop
fprem1
cmp
shl
jle
cmp
mov
ins
lea
sbb
gs
pusha
ficomp
dec
aaa
mov
xor
sub
inc
inc
fldenv
sub
mov
push
jmp
mov
imul
pushf
and
in
sbb
stos
jecxz
and
mov
fsubr
mul
push
sahf
(bad)
push
mov
pop
cmc
sti
add
sti
pop
sahf
inc
lock
xchg
dec
or
cli
std
jle
push
mov
lahf
std
cmc
add
jne
inc
sbb
add
js
jb
or
arpl
cmps
xchg
popa
xchg
cmp
scas
int
fadd
int3
push
ret
cmp
inc
jmp
xchg
sbb
pop
out
ja
and
mov
dec
ins
cmps
pop
xor
inc
dec
sbb
imul
setge
std
icebp
sub
mov
inc
std
add
ins
mov
lahf
outs
dec
sar
dec
inc
mov
inc
xchg
dec
loop
sti
inc
xchg
xor
pop
xchg
inc
fld
aaa
out
hlt
push
jne
cmp
xchg
arpl
jae
lods
xchg
xor
jg
sub
push
ret
fcomi
pop
mov
mov
xchg
dec
or
or
pop
icebp
sub
cmps
(bad)
adc
les
outs
add
pop
cmp
sub
xor
or
ror
mov
jg
movs
jo
bound
call
xor
inc
sbb
pop
add
adc
ins
stos
add
outs
and
mov
mov
into
les
sbb
push
mov
in
sbb
data16
jno
retf
cld
xor
mov
sbb
test
jg
adc
push
retf
leave
xor
(bad)
sub
cmp
stos
(bad)
jp
in
push
adc
cdq
mov
pushf
push
imul
lods
xor
rol
std
push
in
lods
xchg
sar
push
jo
xor
js
jns
mov
or
pop
jle
or
stos
sub
xor
inc
sbb
(bad)
bnd
push
pushf
dec
sbb
mov
or
jo
sub
imul
cmp
hlt
pop
cmp
loopne
mov
xchg
jae
adc
ss
iret
lds
or
je
pop
sbb
and
les
mov
imul
sub
aas
sub
jno
repz
mov
lea
jg
enter
mov
dec
mov
cmp
cdq
icebp
iret
push
cmp
loop
std
xlat
dec
add
cld
ret
mov
adc
mov
addr16
pop
mov
sar
call
jle
aad
adc
mov
jmp
push
xor
add
jae
xor
test
jmp
(bad)
rcr
cmp
sbb
dec
das
(bad)
xor
(bad)
int3
inc
xlat
ins
push
out
xlat
outs
and
call
sub
cwde
mov
int
and
jmp
add
clc
xchg
mov
mov
or
xchg
test
loopne
enter
mov
cmp
test
xchg
pop
inc
mov
bnd
daa
push
hlt
in
fdivr
jno
sub
push
rol
mov
push
push
jne
sbb
repnz
pop
sbb
mov
in
pop
jle
jp
data16
xchg
xlat
imul
mov
sub
fadd
leave
push
pop
clc
sbb
xor
mov
or
push
inc
rol
and
loop
mov
dec
test
sbb
sub
jle
pop
pop
and
or
cmp
inc
idiv
pop
and
call
popf
add
sub
mov
mov
cmp
cmp
fcomp
and
and
mov
xor
or
inc
sbb
mov
fild
popw
or
add
scas
loopne
ja
mov
scas
fcomp
cmc
rcl
push
lods
test
xor
hlt
aam
mov
(bad)
cmp
jb
sub
xchg
inc
xlat
idiv
and
jne
sar
cdq
call
or
fist
xor
popa
xor
mov
cmp
stc
inc
iret
shl
in
push
mov
fwait
jo
mov
sahf
xchg
pop
fstp
sub
pop
(bad)
movs
ins
mov
sbb
push
mov
mov
push
jecxz
test
dec
pop
xchg
ins
outs
movs
inc
cmp
je
je
retf
mov
mov
loopne
out
fimul
mov
jmp
adc
inc
add
scas
mov
dec
pop
call
fs
and
dec
inc
jae
dec
sbb
int
sbb
adc
out
shl
add
icebp
ficomp
cmp
mov
or
mov
inc
jbe
cmp
retf
mov
push
mov
xchg
cdq
pop
xchg
jge
and
xchg
mov
inc
in
enter
ret
sbb
xor
aas
add
aam
out
inc
daa
push
mov
sbb
ss
jle
inc
sti
mov
adc
into
mov
add
aad
add
pop
mov
js
sub
popf
ins
xor
jnp
dec
and
adc
sbb
xchg
jp
sub
and
push
mov
cdq
sbb
xor
stos
sub
stos
adc
add
sbb
(bad)
adc
jbe
mov
out
lea
scas
stos
repnz
add
sbb
dec
int
xchg
push
pop
nop
loop
in
push
add
pop
ret
or
or
bound
add
sbb
ins
xchg
or
in
mov
push
jmp
jbe
pop
jge
dec
sbb
mov
stos
adc
jmp
cli
cld
sbb
mov
xor
push
or
ss
lahf
sbb
sar
mov
inc
jecxz
arpl
ret
daa
cmp
or
popa
ss
rcl
mov
fcom
(bad)
icebp
in
jp
xchg
sub
shl
inc
dec
mov
mov
mov
test
imul
fnsave
in
add
mov
add
test
inc
or
pusha
fs
add
into
pop
adc
pop
sbb
aaa
lods
and
cmp
pusha
movs
iret
cmc
jo
test
xchg
xchg
jne
mov
imul
arpl
xor
rcr
or
pop
ins
and
sub
rcl
mov
adc
sub
(bad)
not
push
rcr
jo
xchg
leave
push
scas
shl
mov
push
add
fst
or
les
sub
idiv
or
ja
pushf
imul
sbb
pop
jg
(bad)
pop
cmps
pop
gs
fsub
test
ja
lock
inc
pop
and
cmp
stos
out
pop
js
das
dec
push
xor
sub
pop
adc
jmp
add
scas
sbb
pop
or
aam
or
jge
push
or
push
mov
mov
push
cmps
in
push
in
jecxz
dec
mov
fcomp
and
or
mov
inc
mov
(bad)
aad
mov
push
(bad)
cdq
adc
pop
lahf
mov
popf
(bad)
sub
add
rcr
adc
arpl
xlat
mov
(bad)
adc
(bad)
movs
push
fdivr
cmp
call
stos
xor
out
xchg
retf
dec
dec
inc
(bad)
aad
fstp
out
jecxz
jge
or
jb
push
mov
mov
cwde
aaa
jae
mov
and
pop
adc
outs
(bad)
in
jns
mov
stos
fld
and
lods
add
adc
in
scas
pop
adc
sbb
cs
mov
outs
jge
(bad)
aam
jp
repz
adc
pop
imul
xchg
push
maxps
xor
push
jae
aas
mov
int
lods
sti
adc
or
pop
and
and
jo
jnp
xchg
xor
dec
ins
(bad)
in
xchg
rcr
sbb
int
inc
arpl
gs
int
and
pop
fcom
sub
mov
dec
add
mov
push
pop
rcr
xor
ds
call
xchg
in
sbb
inc
mov
inc
push
mov
lock
sbb
ret
test
adc
and
icebp
ficom
mov
adc
fxch
inc
(bad)
cmps
add
xchg
ss
inc
sahf
mov
sub
movs
loopne
xor
mov
pop
adc
cmp
add
and
jl
pshufw
sub
mov
jo
aam
pop
int3
pop
shl
push
mov
(bad)
jmp
movs
pop
cmp
add
pop
inc
push
mov
add
js
test
(bad)
fisubr
pop
scas
mov
out
cmps
mov
test
or
popa
dec
push
stos
sub
retf
pop
mov
sahf
sub
pop
pop
xchg
pop
js
xor
pop
jg
push
(bad)
jbe
mov
aaa
out
sub
inc
lds
sbb
and
aaa
lea
xlat
into
sbb
sbb
ret
jb
pop
fimul
(bad)
dec
movs
push
mov
je
mov
or
pop
and
loope
adc
addr16
xor
mov
pop
mov
jns
je
scas
push
repnz
pop
rcl
push
and
xchg
mov
int3
lods
into
aas
ficom
movs
jns
add
pusha
xor
scas
inc
test
push
scas
jno
mov
lahf
stos
test
and
scas
test
loop
xchg
test
scas
imul
in
adc
mov
fwait
xlat
ret
dec
icebp
and
clc
enter
jmp
(bad)
dec
mov
inc
sub
inc
mov
or
inc
or
mov
push
and
shr
push
inc
icebp
jnp
and
dec
out
fmul
leave
out
arpl
lea
dec
fwait
retf
mov
mov
inc
fwait
pop
jge
push
xor
shl
push
sub
cwde
xchg
mov
cmc
mov
sbb
sbb
sbb
lds
ss
and
mov
jp
or
mov
sbb
mov
jmp
inc
inc
mov
in
mov
aaa
rcl
(bad)
div
imul
lds
stos
lods
inc
int3
xchg
sbb
pop
(bad)
sahf
cmp
inc
dec
mov
aam
out
or
(bad)
sti
jmp
sub
cwde
(bad)
out
jmp
adc
jge
mov
fdiv
scas
retf
jmp
jmp
hlt
mov
adc
aam
pop
into
gs
push
cmp
aam
loopne
prefetcht2
jns
cmp
jb
das
loop
add
aam
cmps
das
inc
je
cmp
mov
jge
jb
shr
mov
adc
adc
mov
nop
mov
jo
(bad)
jbe
in
add
pop
and
or
jmp
js
add
je
fdivr
cs
mov
fsub
sub
pop
rol
aad
les
lea
fs
scas
lock
popf
movs
mov
or
mov
div
inc
cmp
xchg
aad
stos
pop
xor
xchg
inc
push
jo
or
dec
in
inc
rcr
std
dec
inc
sub
cmps
push
push
loope
retf
dec
nop
(bad)
cmp
test
paddusb
sub
jb
pop
in
mov
shl
xchg
push
call
pop
mov
pop
(bad)
(bad)
dec
push
(bad)
push
pop
or
or
popf
loopne
cmp
push
jae
bound
sar
outs
int
js
fs
retf
cwde
jb
xchg
sti
ja
mov
ficom
test
iret
neg
scas
add
test
test
icebp
xchg
pop
shl
adc
push
aaa
mov
mov
lahf
test
fidivr
dec
mov
imul
clc
rcr
xchg
arpl
and
out
pop
shr
imul
mov
xor
mov
popa
int3
call
inc
mov
push
mov
jmp
mov
ret
lds
sahf
outs
mov
aad
ins
mov
scas
mov
hlt
cmp
ret
adc
dec
jecxz
jae
and
push
fsubr
xor
pop
int
push
jo
xor
sti
test
div
adc
shl
les
cld
mov
cmps
aas
es
lods
xor
adc
dec
mov
mul
inc
das
push
dec
into
mov
in
jl
shl
adc
sbb
pop
in
fdivrp
ds
scas
push
mov
ds
loop
mul
jb
bound
mov
pop
push
and
test
repz
dec
mov
adc
out
fsubr
popf
jo
test
sar
jo
sbb
xchg
push
ss
data16
add
(bad)
adc
lock
rol
test
popa
jnp
xchg
xor
(bad)
or
das
out
mov
shl
xchg
xchg
pop
enter
jecxz
ins
imul
cdq
sbb
jle
stos
mov
dec
push
aas
xchg
lahf
ss
dec
cmps
outs
test
cmp
rcl
lock
mov
sbb
stos
scas
out
and
push
or
sbb
dec
sub
js
push
xchg
les
xor
sub
rol
ja
push
out
cmp
(bad)
cli
and
jmp
lea
adc
cdq
or
shl
js
cli
mov
sub
ins
in
sub
(bad)
leave
mov
lods
test
mov
cwde
inc
dec
mov
dec
data16
xor
mov
mov
div
(bad)
adc
mov
cmp
cmps
sbb
inc
add
cmp
sti
sbb
pop
sbb
cmp
xor
push
inc
dec
int
ret
xor
nop
jae
sbb
push
mov
je
push
hlt
sub
popf
sub
xchg
cdq
cli
out
dec
xchg
mov
jno
xor
adc
pushf
inc
mov
movs
mov
cwde
mov
xlat
mov
popf
imul
call
jnp
lods
int3
mov
shr
std
xor
fimul
not
cs
jle
push
outs
adc
xor
sbb
mov
xor
mov
pop
cmc
imul
lods
push
stos
ret
mov
mov
xor
inc
sub
cmp
or
jge
jp
lahf
mov
loop
xchg
and
push
sub
ins
sbb
and
pop
ret
adc
sub
call
hlt
test
inc
sbb
xor
pushf
sbb
mov
cmp
mov
mov
xor
ins
sar
nop
out
or
sbb
retf
xor
and
sbb
adc
enter
cmovs
xor
mov
jg
xchg
inc
setno
into
jmp
sbb
push
das
stos
test
sub
leave
(bad)
movs
mul
jnp
cmc
inc
mov
sub
jmp
ds
retf
cmp
jmp
fs
and
nop
stc
fisttp
pop
push
call
xchg
out
cdq
sub
retf
inc
outs
jns
int
sbb
jg
cli
cmp
mov
retf
repz
xor
inc
(bad)
sahf
jge
adc
enter
cdq
jl
mov
mov
sub
(bad)
mov
ficomp
push
fcmovu
cdq
gs
pop
data16
ret
rol
mov
fs
push
daa
or
pop
ret
adc
mov
push
pushf
mov
pop
ret
inc
xor
icebp
ret
mov
cmps
mov
jns
mov
mov
mov
jg
xchg
push
mov
or
jl
inc
retf
packsswb
sub
les
movs
add
ins
or
dec
test
lods
fstp
mov
int3
pop
dec
stos
inc
ins
imul
daa
(bad)
in
clc
fwait
icebp
pop
inc
mov
and
mov
ret
fdivr
xchg
adc
pop
cmp
pop
fiadd
xor
or
fimul
mul
and
add
inc
fcomip
sbb
(bad)
call
pushf
adc
retf
push
lods
pop
dec
add
repz
sub
xchg
rol
mov
pop
ins
mov
std
jbe
xchg
repnz
inc
in
xchg
out
dec
sub
sub
jle
jno
mov
push
aam
les
inc
inc
or
shr
add
push
sub
jno
repnz
push
pop
mov
dec
mov
in
addr16
jmp
stos
repz
pushf
pop
arpl
add
add
cmp
sti
mov
mov
push
push
and
xor
xchg
dec
pop
pusha
test
stos
test
inc
jmp
icebp
mov
xlat
add
xchg
test
loop
xchg
cmp
int
push
fld
aaa
idiv
fcmovnu
aaa
popf
jmp
sti
retf
jno
xchg
mov
aaa
dec
inc
sbb
loopne
rcr
adc
mov
sbb
and
ret
loop
cmps
fnsave
repnz
pushf
jb
lock
sub
cmp
adc
loop
(bad)
sbb
test
cli
cmp
mov
retf
adc
and
pusha
sub
xchg
sar
cmp
jno
jnp
(bad)
lock
push
mov
shl
push
mov
dec
(bad)
es
movs
shl
rcl
jne
es
xchg
jl
scas
sbb
leave
(bad)
rol
push
xchg
fst
lds
dec
(bad)
fisttp
ja
or
icebp
sahf
cmovs
cmp
dec
pop
sbb
(bad)
sub
mov
and
mov
lahf
out
xchg
ja
das
cmp
mov
nop
jmp
or
add
ret
test
mov
call
lods
pop
mov
mov
push
in
stos
int3
je
mov
and
aam
and
pop
outs
push
cmp
jg
in
mov
movs
add
jne
lods
sub
out
inc
mov
jge
xchg
adc
mov
imul
mov
adc
xchg
sub
or
or
shl
scas
add
sbb
pop
ret
fsub
xlat
pushf
stos
pusha
popa
ins
cmp
xchg
out
inc
cmc
leave
into
pop
sbb
xor
je
mov
repz
xor
cmp
inc
xor
fdivr
lods
add
movs
movs
fs
push
mov
imul
movs
dec
mov
(bad)
rol
daa
xor
push
std
fdivr
hlt
sub
cdq
push
xchg
fistp
sub
in
push
mov
push
jmp
xchg
push
cli
ja
fwait
or
gs
or
inc
dec
fnstenv
jb
int
or
dec
pop
jl
stos
add
stos
(bad)
movs
cmp
and
ret
inc
cdq
pop
and
popa
lea
fisub
jmp
push
and
adc
daa
cmp
nop
shl
xchg
inc
cli
jnp
int3
data16
xchg
ins
sub
leave
sar
jp
je
test
xor
outs
dec
cmp
shr
adc
imul
outs
mov
ds
sub
sub
and
push
mov
fwait
push
lds
mov
adc
adc
cmp
add
shr
add
push
and
inc
jmp
popf
int
mov
inc
test
mov
(bad)
fs
xchg
fiadd
in
adc
das
xor
xchg
gs
scas
lods
mov
retf
mov
mov
aaa
test
jle
xchg
pop
jecxz
enter
jmp
and
cmp
jnp
adc
arpl
pop
pop
mov
adc
xor
mov
push
mov
pop
mov
inc
shl
cli
sbb
mov
imul
inc
mov
mov
cmp
jbe
nop
push
cmp
push
in
bound
jl
add
addr16
xor
xor
push
loopne
push
mov
nop
jno
(bad)
cld
(bad)
aaa
mov
ins
sbb
out
cmp
fdiv
stc
push
icebp
xlat
pushf
ja
jp
xchg
jge
mov
jnp
mov
test
xor
scas
xor
xor
lea
mov
add
xchg
dec
ror
pop
or
push
sbb
mov
sbb
sti
popf
inc
sbb
lods
sbb
xchg
sub
mov
fwait
add
pushf
or
std
mov
push
(bad)
or
jle
xchg
jle
test
pop
cli
cmp
into
mov
push
(bad)
movs
stos
pop
jecxz
mov
pusha
out
add
push
push
bound
xchg
pop
ins
cmp
or
push
push
xchg
pusha
or
pop
xchg
push
dec
rcr
mov
ret
sub
mov
and
sti
loopne
jle
cmp
cmp
inc
sahf
mov
push
and
cli
mov
inc
fs
xchg
ja
adc
jg
jnp
cwde
inc
sti
and
scas
and
ja
enter
xchg
cmp
inc
and
mov
cmp
or
imul
movs
imul
imul
retf
stos
icebp
jno
out
xor
inc
jno
mov
dec
xchg
mov
push
mov
mov
rol
out
pop
shl
in
lahf
jne
mov
(bad)
cmp
or
xchg
xchg
imul
movs
sub
or
inc
int3
and
(bad)
cs
dec
pop
outs
dec
or
lods
mov
xor
and
and
adc
push
or
pop
cmp
loopne
ds
cmp
mov
ins
inc
fs
nop
dec
jle
jl
enter
rcl
inc
(bad)
in
cmc
push
adc
into
jne
xchg
mov
mov
sub
dec
add
mov
(bad)
pushf
dec
daa
imul
pop
xor
aam
lock
(bad)
jns
add
push
cmp
aad
lods
dec
ret
push
jns
mov
pusha
jle
pop
sub
push
rcl
add
lea
dec
adc
push
ins
fwait
mov
into
sbb
xchg
push
lar
(bad)
mov
mov
imul
xor
call
sbb
das
es
xchg
push
pop
xchg
dec
jno
cs
sbb
loopne
nop
aas
sub
sub
jmp
xchg
push
into
push
cmp
and
ins
fidiv
outs
pop
aaa
ror
ds
sti
lds
jge
lock
call
or
push
sub
icebp
xor
jmp
adc
rol
mov
jmp
push
(bad)
out
mov
mov
mov
sub
mov
push
add
shl
xor
mov
in
jo
ins
cdq
aad
int3
inc
js
and
nop
pop
sahf
push
add
mov
sbb
div
jmp
cmp
(bad)
in
sbb
or
cmps
mov
dec
and
xchg
into
inc
xor
mov
sbb
loope
jg
xchg
sti
cmp
adc
inc
sbb
pop
outs
out
(bad)
mov
frstor
xor
xor
ins
adc
lock
and
out
mov
in
mov
fadd
dec
cvtps2pd
loop
adc
lock
stc
pop
ret
mov
mov
test
int3
cmp
pop
retf
or
hlt
rcl
push
or
jle
stc
mov
test
adc
xchg
(bad)
jne
test
dec
stos
stos
add
mov
add
in
jg
adc
test
xor
pushw
dec
rol
addr16
jns
push
shl
dec
lds
inc
ja
in
(bad)
add
jae
or
adc
test
cmp
add
mov
out
push
out
mov
inc
push
mov
push
aaa
or
xchg
sbb
or
(bad)
cwde
retf
sub
aaa
or
fst
adc
add
pusha
jl
push
push
push
dec
fcmovu
cwde
sub
out
add
(bad)
cld
aas
test
jl
jle
adc
movs
dec
je
adc
mov
(bad)
cli
mov
xor
xchg
lods
xchg
pushf
fcomp
dec
sbb
cmp
lods
pop
(bad)
jo
push
cmp
ret
lods
xchg
jno
pop
lds
xor
sti
enter
sbb
addr16
mov
adc
lods
and
mov
ror
add
mov
mov
neg
xchg
daa
jns
mov
jae
or
popf
mov
xor
dec
mov
fst
mov
cmp
sub
retf
mov
sbb
sub
lods
daa
or
mov
bound
mov
dec
jecxz
imul
push
out
xchg
adc
fucomip
fs
or
sub
stos
mov
jg
dec
ja
push
neg
and
xchg
inc
inc
jle
add
pop
pop
mov
shl
or
into
cwde
out
out
call
std
push
inc
xchg
push
xor
test
les
(bad)
mov
mov
inc
inc
pop
arpl
push
movs
jge
cmps
retf
push
xor
je
or
test
add
adc
into
adc
inc
push
js
(bad)
je
or
imul
or
xor
mov
mov
dec
out
xor
add
xor
jb
mov
mov
and
jge
loope
cmp
cdq
imul
fwait
lds
add
ret
std
xchg
and
icebp
div
jns
retf
push
dec
push
repz
aam
pop
add
xlat
cmc
mov
jo
mov
push
jmp
xchg
cmp
sub
test
sbb
pop
pop
mov
fiadd
and
or
xchg
shl
cld
loopne
xor
push
pop
cmp
popf
ds
adc
nop
cdq
mov
pop
dec
inc
mov
hlt
sbb
push
idiv
arpl
sub
and
xor
(bad)
iret
scas
dec
xor
inc
(bad)
xchg
(bad)
loopne
ja
inc
mov
fwait
jge
or
and
int
js
bound
test
jp
mov
jmp
xchg
ds
ja
aas
fdiv
and
mov
jbe
xchg
leave
loope
xlat
mov
pop
add
scas
out
pop
xchg
dec
call
outs
sub
add
fld
or
add
adc
icebp
sahf
sub
ss
rol
stos
in
inc
mov
(bad)
jecxz
xor
or
es
pop
jg
jmp
(bad)
xor
xor
int
out
fcomip
jge
inc
inc
mov
mov
repnz
mov
mul
(bad)
pop
push
mov
or
mov
push
dec
call
add
(bad)
jecxz
pop
aas
fnsave
call
scas
shl
fcom
cmps
xchg
fst
inc
in
push
lods
xchg
pop
enter
cmp
aas
rol
pop
mov
or
call
mov
in
rol
scas
(bad)
scas
pop
push
int
xlat
push
mov
or
clc
data16
sbb
sub
jge
jmp
push
xchg
stos
sbb
hlt
inc
sbb
sbb
sub
mov
sub
cld
mov
arpl
sub
scas
scas
sub
fwait
jl
out
or
jns
loop
repnz
int
in
pushf
mov
push
adc
js
pusha
or
mov
leave
xchg
(bad)
(bad)
in
and
xor
mov
sbb
sahf
xor
xchg
adc
cmp
aam
cdq
xchg
das
loope
(bad)
lock
out
loopne
jne
inc
sbb
cmp
into
out
inc
mov
pushf
sub
cmc
bnd
test
data16
jmp
sub
push
std
repz
adc
sbb
cmps
icebp
mov
arpl
mov
push
sar
jp
sti
mov
leave
dec
xchg
xchg
imul
int
sub
ja
daa
xchg
mov
loope
and
xchg
xchg
dec
leave
push
je
jae
(bad)
div
xor
cmp
mov
imul
sub
inc
and
imul
imul
add
push
pop
dec
icebp
ror
cmp
js
ss
aaa
ror
pop
or
cmp
in
mov
jle
or
adc
out
retf
neg
and
adc
bound
mov
xor
loope
mov
mov
sar
popf
hlt
int3
cwde
cmp
mul
inc
ins
cmp
dec
adc
ror
adc
or
rcl
xor
jo
lds
mov
xchg
xor
push
ret
mov
js
shr
cmp
in
adc
hlt
sbb
inc
xor
pop
sub
dec
jnp
fsub
mov
mov
pop
lods
mov
aas
xor
in
mov
fs
jmp
daa
or
sub
adc
ffreep
sbb
cvtdq2ps
or
stos
jae
inc
dec
sahf
jbe
shl
mov
cdq
out
fwait
out
es
mov
sub
ffreep
lods
mov
xchg
cmp
dec
xlat
xchg
pop
std
(bad)
es
mov
cwde
loopne
aas
inc
leave
mov
mov
and
inc
mov
mov
mov
mov
cdq
pop
sub
psubusw
cld
lock
mov
ret
cmp
leave
bound
mov
cld
sub
jl
in
mov
xchg
dec
pop
sbb
xchg
mov
sbb
cli
je
jnp
adc
repnz
addr16
neg
out
xchg
(bad)
cmp
xchg
inc
in
inc
pop
or
sbb
ja
jl
shl
stos
pop
jnp
or
cs
aad
cmp
mov
(bad)
lahf
outs
add
push
mov
jno
neg
cmp
ror
push
sub
test
or
dec
retf
sub
or
push
jl
add
out
fbstp
and
in
arpl
leave
lock
imul
xor
leave
jb
aam
push
and
jbe
sub
xchg
ja
cli
repnz
inc
int3
add
cli
adc
and
jmp
fidiv
fstp
mov
ss
dec
push
pusha
imul
popf
xor
cdq
bswap
in
xor
daa
jo
mov
sub
xchg
inc
adc
push
ds
dec
dec
enter
xor
ins
add
or
push
in
mov
or
gs
mov
aaa
push
retf
cmp
and
or
outs
xchg
cmp
add
pushf
xor
push
pop
jg
xor
fcom
mov
lahf
int
jge
addr16
pop
movs
or
es
test
mov
fcom
scas
mov
aaa
pushf
sub
sub
xchg
outs
imul
fcomp
xor
lds
mov
cmps
loop
dec
out
in
pushf
jns
mov
dec
mov
sbb
jne
dec
push
imul
and
cwde
jge
push
adc
jecxz
(bad)
pop
pop
jg
xlat
aad
push
cmps
mov
das
ret
scas
mov
cmps
aad
xchg
mov
(bad)
xor
add
mov
cmps
push
in
fild
mov
lock
arpl
cdq
aad
repnz
mov
cmc
outs
iret
cmc
inc
in
cmp
inc
inc
inc
movs
dec
or
ja
dec
(bad)
je
ins
stos
mov
or
jnp
lock
mov
in
(bad)
aas
nop
cmps
out
jge
lea
neg
movs
inc
outs
inc
adc
or
push
fbstp
sbb
mov
push
cdq
xchg
es
jge
or
mov
mov
adc
mov
call
int3
sbb
push
jecxz
inc
inc
(bad)
push
lea
jne
leave
test
mov
push
jecxz
inc
jl
jne
int3
ja
jne
pop
out
pop
xor
mov
aad
ins
add
mov
adc
bnd
ins
sti
imul
xchg
push
fcom
lods
adc
sub
inc
push
sti
mov
add
(bad)
outs
popa
xchg
lock
mov
in
dec
push
dec
sub
jb
jg
(bad)
iret
pop
sahf
inc
pusha
lahf
fdiv
jge
xor
cmp
sbb
out
into
in
data16
push
xchg
fnstenv
addr16
mov
(bad)
mov
add
in
sbb
out
push
movs
mov
stos
add
es
mov
retf
out
xor
mov
sahf
aas
mov
es
mov
push
ret
(bad)
retf
dec
push
test
call
and
scas
gs
enter
dec
xor
mov
jns
aaa
or
mov
fmul
mov
inc
out
imul
pop
sub
mov
bound
pusha
push
push
ss
mov
jns
cld
jmp
adc
sbb
dec
fbstp
test
(bad)
push
in
jae
scas
and
fild
jo
lea
push
mov
dec
xchg
stc
fcmovnbe
mov
rcl
(bad)
adc
jo
pop
jg
sub
aas
(bad)
std
push
xchg
out
pop
(bad)
scas
ror
add
fild
mov
ror
(bad)
push
add
movs
xchg
dec
inc
pop
add
jne
test
sub
int
js
dec
fistp
cmps
es
scas
lods
sbb
adc
dec
xlat
mov
cmp
sbb
sbb
push
rcl
sub
or
inc
xor
adc
cld
sbb
pop
test
dec
push
mov
das
mov
ja
arpl
into
sahf
in
(bad)
repz
in
jno
int3
fwait
sub
mov
repz
(bad)
bound
or
or
aas
test
js
mov
dec
icebp
xchg
push
je
(bad)
stos
xor
and
xor
add
ss
lock
add
cmp
and
fwait
out
jge
and
loopne
pop
jmp
cmc
cwde
retf
xchg
push
stc
push
ds
mov
nop
sub
fstp
outs
int3
jmp
pusha
rol
xor
ret
xchg
push
arpl
cmc
mov
mov
or
dec
jge
and
pop
jg
pop
icebp
mov
retf
daa
shl
jno
imul
ss
sbb
add
int3
and
push
mov
pop
jmp
push
jno
lahf
mov
or
shl
mov
pop
sub
enter
xchg
in
adc
push
in
xor
pop
scas
iret
jae
stos
out
mov
mov
cwde
xchg
jge
xor
lss
adc
les
jg
fwait
loop
not
xor
sbb
cmps
pop
inc
mov
retf
outs
push
enter
js
xchg
scas
(bad)
add
xlat
mov
int3
xlat
jle
test
inc
gs
dec
dec
outs
aam
fs
sbb
cwde
cmps
test
cmp
jo
cmp
loope
or
ret
adc
sbb
mov
test
rol
adc
gs
push
push
jle
sbb
xchg
push
daa
mov
adc
outs
(bad)
xchg
cwde
xchg
xchg
out
in
sbb
and
pop
into
cmps
mov
fist
in
or
pop
add
jae
or
sub
push
mov
dec
das
call
aas
mov
cdq
xchg
jbe
jmp
neg
(bad)
pop
push
pop
mov
popf
popf
pop
sub
pop
mov
cmp
pushw
sbb
ins
mov
repz
fwait
or
xor
in
mov
icebp
movs
mov
push
xchg
pop
arpl
rcl
cmp
mov
sar
xor
movs
stos
out
mov
push
rcr
test
bound
push
mov
and
loopne
iret
xor
mov
inc
xchg
sbb
ror
repz
pop
xor
outs
adc
loop
pop
std
mov
inc
jb
icebp
(bad)
mov
add
leave
retf
add
lock
push
cmp
push
imul
or
sahf
sti
add
test
pop
js
push
push
out
sub
leave
mov
mov
or
jl
dec
adc
and
lahf
xchg
movs
shl
adc
mov
popa
call
add
jl
xchg
sbb
ror
(bad)
mov
and
pop
popa
adc
clc
inc
xchg
cdq
inc
retf
shr
outs
cli
out
jp
jmp
aas
cmp
and
mov
pushf
rcl
punpckldq
sub
dec
das
lock
jb
dec
mov
stc
pop
cmc
and
pop
ja
mov
add
lahf
rcl
arpl
icebp
enter
int
scas
adc
(bad)
repz
cwde
add
lea
popf
pop
sub
sbb
add
ins
add
inc
jl
mov
add
lahf
sub
xchg
push
xor
scas
shl
dec
fcom
jns
cmp
pop
mov
clc
mov
addr16
cmps
fidiv
popf
xchg
or
push
scas
inc
nop
ja
inc
add
xlat
jge
retf
and
xchg
lock
mov
ret
add
ret
jecxz
bound
ror
push
mov
mov
stos
inc
lahf
imul
fst
loop
mov
xchg
mov
scas
push
mov
jge
loopne
xchg
out
test
in
adc
jb
adc
cmp
xchg
sub
enter
or
and
push
xchg
dec
pop
mov
dec
dec
es
cs
dec
fsubr
enter
mov
xchg
shl
vpaddusw
out
cmp
fcomp
(bad)
xchg
jbe
add
(bad)
fwait
inc
or
push
adc
outs
test
inc
aas
fiadd
push
or
jecxz
aad
jl
add
xor
lods
fcom
push
dec
inc
out
cmp
mov
mov
jecxz
xchg
add
add
imul
outs
xor
jge
or
sbb
cmp
mov
xchg
mov
in
aam
cmp
and
and
cmc
aas
mov
sbb
call
add
xor
int
ror
mov
arpl
cli
cmp
out
sub
add
stc
dec
mov
je
inc
in
xor
rcl
dec
or
fs
js
call
jbe
xchg
mov
or
mov
pop
dec
or
loop
(bad)
adc
stos
adc
inc
push
dec
and
jl
movs
test
and
mov
lods
fbld
call
sbb
push
dec
xchg
adc
mov
inc
mov
cmp
ds
jle
dec
xchg
ins
jmp
xor
mov
test
retf
fs
pop
sbb
sti
mov
dec
xor
ret
adc
jo
cmp
sbb
pushf
bnd
call
icebp
int3
test
push
or
aad
jle
inc
add
mov
add
ret
jmp
jae
pop
mov
arpl
xlat
sbb
jnp
add
inc
sub
xchg
adc
cmps
jmp
xchg
aad
jmp
das
pop
fldcw
pop
push
pop
fiadd
std
cdq
push
push
jns
repnz
imul
(bad)
jne
cmp
lock
(bad)
pushf
arpl
stos
mov
(bad)
push
(bad)
mov
jg
push
stc
xlat
(bad)
arpl
jbe
scas
fnstcw
mov
inc
out
out
sub
push
or
(bad)
clc
push
repz
in
shl
xor
ins
daa
jmp
pop
inc
cs
xchg
adc
mov
mov
add
out
mov
popa
jp
scas
inc
mov
adc
jo
das
or
push
adc
mov
and
lahf
test
pusha
jmp
mov
movs
pop
inc
into
xor
xor
xor
jecxz
push
push
inc
xchg
xor
sub
pop
mov
mov
popf
dec
std
push
test
xor
(bad)
repnz
push
out
icebp
xor
xchg
cmp
(bad)
sbb
inc
jb
sub
sbb
out
inc
sbb
cmp
aaa
lahf
imul
dec
and
iret
or
xor
push
aam
ja
call
std
mul
pop
pushf
pop
lods
cmps
mov
sti
in
push
sbb
push
mov
jae
imul
stos
pop
and
xchg
mov
jg
mov
sub
pop
clc
jno
add
push
cmp
add
sar
ret
shr
sub
aaa
rcr
jl
in
clc
lds
(bad)
imul
outs
add
add
add
outs
pop
test
clc
xchg
fucomi
mov
pop
sub
mov
loop
sbb
fcmovb
xor
cmps
or
push
test
out
retf
cmp
into
jmp
dec
xlat
int3
and
pop
xchg
fbld
(bad)
pushf
xchg
xchg
cmp
scas
jmp
rcr
loopne
(bad)
jb
aam
and
jmp
mov
sub
pop
mov
mov
lods
jno
xor
mov
data16
push
inc
or
push
fiadd
and
sahf
or
jle
retf
stos
(bad)
out
xacquire
rcr
jnp
ss
or
pop
arpl
cmp
push
and
dec
push
inc
mov
mov
push
xlat
jecxz
and
or
fisub
psubusb
add
in
in
xchg
fcomp
pop
gs
jo
push
dec
or
pop
inc
inc
mov
(bad)
into
inc
pop
fsubr
dec
retf
fbld
jg
dec
neg
(bad)
nop
adc
xor
and
idiv
or
jno
hlt
and
aas
enter
dec
xchg
call
cmpxchg
mov
mov
jmp
push
loope
inc
mov
lds
cmps
test
pop
arpl
das
ss
cmc
fistp
pop
push
pop
(bad)
ss
dec
js
stos
inc
cmp
lds
sub
inc
jle
pop
jecxz
stc
ret
call
dec
cmp
or
push
ret
mov
sahf
sbb
inc
inc
xor
and
sar
loopne
loope
mov
pop
xchg
mov
lods
ret
xchg
fild
xor
pushf
mov
push
pop
jnp
cwde
mov
fst
adc
out
mov
mov
or
push
jae
mov
ror
sbb
jns
fsubr
mov
inc
jno
xor
jb
fimul
xor
cmp
push
ss
loop
cdq
loope
(bad)
test
into
fnsave
and
mov
adc
fmul
test
mov
jg
sub
mov
lahf
pxor
stc
jp
jmp
mov
sbb
jmp
jmp
mov
test
mov
pop
jmp
or
(bad)
sti
push
aas
or
pop
or
out
pop
mov
adc
push
fldl2e
or
push
mov
cld
jmp
shl
cmps
aad
lock
das
adc
sbb
pop
mov
inc
rol
arpl
xor
or
es
paddusw
mov
xlat
aad
push
jl
fld
sbb
mov
xchg
adc
mov
jmp
rcl
add
dec
out
jmp
push
and
dec
push
(bad)
nop
(bad)
popa
jmp
jp
inc
out
dec
mov
cld
test
test
dec
mov
cmc
sub
jo
rep
hlt
jle
pop
jge
loope
sbb
xor
out
pop
jmp
push
mov
xor
add
xor
test
stos
pop
jge
sbb
mov
mov
jmp
fnstcw
stos
imul
or
inc
pop
push
mov
fstp
sbb
mov
test
push
(bad)
lea
jle
sub
ja
cmp
push
or
sbb
xor
outs
repz
push
pop
xor
arpl
stos
or
inc
push
lea
cmp
(bad)
sub
test
cwde
in
(bad)
mov
adc
pop
or
mov
in
jmp
push
jne
not
adc
sub
int3
fcomip
add
test
mov
fadd
add
call
mov
mov
sahf
push
inc
jbe
push
jmp
test
xor
dec
xchg
scas
push
ds
pop
and
mov
imul
mov
or
mov
mov
pop
pop
fcomip
inc
mov
sbb
pusha
outs
inc
lds
mov
adc
test
lods
jge
fmul
mov
mov
nop
sub
mov
scas
out
and
mov
into
inc
lods
mul
pop
xchg
fwait
pop
psubusw
xor
cwde
out
adc
pop
hlt
(bad)
cmc
movs
sahf
cdq
mov
adc
dec
rcl
xchg
push
pop
mov
xchg
icebp
test
outs
sbb
pop
jge
in
ds
loopne
mov
sbb
pop
xchg
repz
pop
mov
(bad)
dec
jg
jecxz
inc
mov
cmp
push
xchg
adc
stc
div
sub
mov
add
enter
xchg
xchg
inc
repnz
push
repnz
mov
xchg
sbb
ja
xchg
sahf
je
dec
movs
fmulp
sti
xlat
sub
sbb
ret
stos
enter
aas
jle
sub
add
xrelease
add
test
inc
jbe
xchg
ficom
movs
imul
mov
pop
and
pop
rcl
imul
(bad)
push
add
xchg
(bad)
pop
test
add
and
sub
out
dec
cld
imul
out
mov
dec
xor
mov
sub
cs
inc
inc
dec
sub
retf
cmp
loope
add
and
jne
sub
adc
jb
dec
sub
inc
sbb
mov
mov
inc
xchg
jg
cmp
std
js
pcmpeqw
mov
int
mov
pop
pop
neg
mov
jl
dec
pusha
retf
inc
loop
mov
xor
sar
hlt
aas
cmc
pop
inc
aaa
sub
fwait
test
dec
jnp
les
push
repnz
mov
mov
mov
jmp
pop
inc
cmc
xor
daa
and
pop
in
ds
test
inc
aaa
cmp
fdiv
jecxz
fidivr
js
hlt
icebp
or
pop
arpl
test
mul
add
pop
mov
neg
call
repz
sbb
mov
sbb
inc
outs
pop
push
movs
pop
popf
test
mov
push
scas
rol
aas
fwait
shl
xchg
sbb
and
bound
call
imul
cmps
jl
or
je
out
jnp
and
and
add
jb
inc
and
cmp
loope
pop
and
xchg
shr
outs
(bad)
lds
in
adc
push
jge
dec
stc
into
cli
inc
into
dec
ficom
daa
hlt
int3
loope
fisub
adc
test
movs
fld
loope
lods
xor
lods
retf
shl
sahf
scas
adc
mov
lahf
clc
cmps
mul
sub
pop
jb
sti
into
in
xchg
out
out
mov
fsub
scas
icebp
lods
jo
out
xor
push
dec
inc
adc
ds
fdiv
ficom
cwde
fst
and
xchg
mov
jne
and
cdq
and
xor
xor
mov
sub
adc
ret
enter
mov
outs
sub
call
neg
fdiv
popf
inc
lods
in
out
jle
pop
sbb
fsub
jmp
xor
sti
out
pop
pop
xchg
push
cmps
movs
xor
inc
retf
jl
fnstsw
cmp
push
sub
retf
xor
repz
jecxz
rcl
shr
int3
jle
and
pop
(bad)
dec
mov
xchg
xor
cld
test
clc
sub
push
test
sub
pushf
pop
retf
xchg
fist
cmps
mov
shl
mov
test
jo
loopne
xchg
fwait
pushf
or
nop
mov
or
add
fcmovu
jno
out
mov
neg
jns
sbb
cld
xor
push
adc
dec
mov
enter
and
imul
pop
cmps
(bad)
dec
mov
aad
add
pop
call
arpl
sub
dec
ins
les
(bad)
push
adc
inc
cmp
jo
stc
push
test
sub
aad
int
cmp
(bad)
call
and
(bad)
xor
sbb
out
div
fsub
ins
lock
push
pop
or
push
xchg
shl
inc
cs
push
scas
mov
test
aas
retf
ret
leave
sar
cmps
xchg
dec
mov
mov
and
pop
scas
and
jo
inc
and
iret
mov
daa
inc
mov
mov
xor
sbb
cwde
add
aas
test
push
stos
popa
cmp
push
xlat
push
push
xchg
pop
int3
int3
lock
idiv
mov
(bad)
fadd
inc
not
sbb
jmp
add
pop
mul
xor
imul
movs
jge
fcom
dec
sbb
mov
or
fwait
aas
in
jae
xchg
push
test
or
jmp
call
mov
pop
out
ins
add
mov
mov
fwait
addr16
nop
add
fcom
and
adc
jb
mov
sub
pop
loope
lods
loopne
mov
imul
xchg
(bad)
arpl
addr16
or
xchg
ret
sahf
push
xchg
scas
sbb
movsx
(bad)
pop
call
(bad)
and
inc
ret
fimul
add
cmp
(bad)
dec
xchg
mov
mov
repz
jecxz
and
cs
jmp
cmp
in
int3
or
sub
mov
das
hlt
pop
and
mov
jbe
xchg
or
adc
sub
xor
add
fisubr
pop
mov
pop
mov
xchg
pop
fnstsw
push
int3
repnz
mov
jmp
sti
ins
rcr
adc
in
enter
ins
xchg
pop
cmc
scas
dec
sub
ficomp
push
dec
mov
imul
je
aad
(bad)
mov
jp
test
mov
jbe
cmp
xchg
test
and
dec
dec
cmps
dec
inc
push
popa
mov
loope
cdq
ja
lock
dec
retf
adc
popf
jp
sbb
dec
scas
ret
jmp
mov
sti
pop
or
(bad)
stc
pop
inc
pop
pop
push
fcmovnb
pop
fsubr
popf
(bad)
sbb
rcr
add
mov
xor
cmps
push
call
mov
scas
je
sub
cwde
in
outs
mov
sub
rcr
mov
cmp
imul
fnsave
iret
cs
(bad)
shl
sub
into
jnp
in
es
cwde
xchg
cdq
mov
or
cmc
add
popa
jnp
push
mov
mov
mov
cmp
or
mov
fs
cmp
inc
lods
dec
dec
push
out
repz
popa
xor
pop
sbb
mov
fstp
repz
into
sbb
into
int3
cmps
mov
push
mov
or
outs
cwde
mov
xchg
jecxz
dec
push
and
pop
cmp
mov
(bad)
lock
ja
outs
pop
inc
inc
xchg
fwait
jmp
jae
mov
push
sub
jecxz
(bad)
in
pushf
(bad)
int3
push
jge
push
pop
outs
repnz
xor
mov
jmp
pusha
adc
pop
push
fiadd
cmp
int
js
xor
adc
jo
les
mov
cdq
lds
mov
mov
inc
pop
lods
mov
xchg
imul
test
popa
dec
iret
jmp
sub
bound
xor
mov
movs
pop
aas
(bad)
div
jbe
repz
vunpcklps
push
popa
lahf
push
loopne
retf
sbb
std
idiv
icebp
adc
cmp
lahf
popa
xchg
jo
mov
jns
stc
pop
scas
mov
or
adc
jl
loope
test
ins
out
sbb
shl
lods
push
pop
or
jl
jne
adc
(bad)
int3
mov
dec
cmp
shl
or
xchg
loopne
push
loope
bound
aas
cmp
xor
mov
push
jle
xor
fdivr
sbb
in
(bad)
paddd
in
bts
cmc
jg
pop
push
retf
mov
mov
add
add
pop
addr16
adc
enter
adc
jae
sahf
mov
out
stos
dec
enter
mov
cdq
push
jne
out
jecxz
adc
cmp
cld
jb
test
mov
inc
dec
jmp
aaa
ss
ins
sub
aad
imul
mov
dec
push
add
mov
sub
(bad)
cmp
movs
and
inc
sbb
push
dec
clc
stos
inc
clc
add
loop
pop
sahf
call
imul
mov
idiv
add
mov
jbe
jg
pop
dec
outs
push
fcomi
iret
pop
and
add
jmp
push
repnz
in
sti
lock
inc
mov
sub
scas
mov
mov
xchg
and
mov
xor
jg
xchg
inc
sbb
nop
xchg
sub
test
dec
mov
outs
cmp
push
or
cmps
and
int
sbb
sub
cmps
(bad)
outs
jnp
loope
mov
jmp
shld
xchg
test
pop
jmp
push
xchg
add
dec
movs
int
(bad)
js
push
jne
mov
aad
out
les
and
daa
add
cli
adc
iret
adc
in
pop
mov
push
xor
sub
or
add
sbb
cmp
sub
mov
jle
nop
movs
pop
push
fstp
jl
mov
add
inc
or
xor
sub
sahf
ss
sbb
out
push
jns
mov
and
jbe
inc
jbe
sbb
adc
stos
jmp
dec
push
call
arpl
mov
inc
push
ins
pop
jmp
aad
push
and
sub
mov
leave
push
retf
fsub
lahf
push
cmp
fisttp
jmp
stos
sbb
in
les
jae
sar
pop
inc
push
cmp
adc
(bad)
jp
imul
cmps
idiv
fidivr
jle
adc
sub
pop
rol
mov
add
lea
add
xchg
int
mov
mov
clc
hlt
jne
test
dec
add
in
mov
mov
imul
cmp
mov
jo
aad
(bad)
adc
rcl
sbb
push
add
xor
das
pusha
adc
inc
lea
cmps
fdiv
push
jmp
sub
movs
in
sub
jmp
fisttp
fidivr
ins
test
mov
fs
sbb
push
push
ffree
nop
sub
inc
mov
outs
movs
frstor
out
mov
mov
iret
mov
aam
mov
stos
xchg
jecxz
cmps
sub
stc
out
push
jns
cdq
add
and
push
(bad)
icebp
aam
cmps
repz
shl
sub
lea
addr16
sbb
xchg
lea
xchg
xchg
repnz
ins
adc
adc
jae
ins
and
jmp
jnp
and
iret
(bad)
lock
jge
ror
jecxz
(bad)
inc
fwait
sbb
jo
jmp
sub
inc
xor
and
outs
out
loope
movzx
xor
sub
in
xor
or
rcr
(bad)
fdiv
or
xlat
sub
scas
jno
lods
cs
jmp
jns
jle
jae
or
jle
stc
mov
push
das
in
ficomp
and
leave
(bad)
lea
or
js
and
bound
loopne
sbb
jne
lods
je
pop
retf
xchg
fisttp
loop
je
pop
jb
or
cmc
push
jne
xchg
popa
adc
adc
mov
jae
jne
aas
movs
retf
mov
out
shl
mov
sbb
mov
repz
jnp
retf
mov
or
call
cmc
and
cs
sub
mov
test
xor
or
xchg
pusha
cld
xchg
mov
mov
cmp
in
xor
sbb
xchg
in
xchg
cmp
pushf
xchg
pop
fwait
push
push
inc
aad
scas
pop
aad
jmp
xchg
js
xlat
mov
jae
arpl
jne
(bad)
mov
add
test
adc
cdq
cwde
xchg
pop
and
adc
out
fs
cmp
jno
adc
cmps
ins
mov
pop
sub
push
cld
jg
jg
add
xchg
xchg
mov
jg
push
fisttp
jno
je
dec
mov
arpl
mov
rep
fsub
dec
ror
or
in
movs
aas
loop
inc
into
or
mov
xor
mov
imul
inc
dec
add
xor
aam
xor
call
xchg
scas
cmps
jp
jae
dec
dec
inc
dec
inc
rcr
gs
popf
lahf
mov
ins
retf
fistp
dec
cmps
out
sbb
dec
push
sub
mov
sub
fs
cmc
jg
and
or
call
js
xor
mov
cmp
pop
pop
pop
pop
loop
cmps
mov
pushf
das
sub
and
mov
imul
int3
fist
xor
push
lock
sub
dec
mov
ja
sar
jge
sub
je
jmp
push
mov
or
jge
rcr
sbb
std
stos
jbe
(bad)
mov
cmp
(bad)
movs
xchg
jb
fld
and
enter
cmp
adc
scas
popa
fsub
in
shr
mov
and
fstp
sbb
adc
fisttp
push
retf
jne
scas
aaa
xor
fdivp
sbb
mov
inc
mov
lods
outs
dec
addr16
xchg
and
inc
daa
pop
pusha
pushf
cmp
xor
fwait
fwait
std
mov
pop
xchg
scas
adc
xchg
jp
sub
dec
int
clc
sub
xor
fild
adc
loope
aaa
(bad)
pushf
pop
call
(bad)
aad
xchg
imul
outs
(bad)
clc
ja
adc
fadd
or
jge
add
adc
xor
dec
xor
cmps
mov
push
ret
in
mov
leave
loope
stc
test
sub
lock
int3
xchg
aas
mov
sbb
sbb
xchg
push
xor
out
sbb
add
mov
iret
push
mov
daa
mov
sub
and
bound
push
out
ret
xor
test
inc
pop
ins
or
mov
das
inc
mov
dec
dec
es
mov
arpl
rcl
xor
sahf
cmp
cmps
sub
dec
xchg
add
mov
(bad)
je
jb
mov
mov
setae
int3
fcmove
shr
int
sub
jecxz
pop
xchg
inc
and
fwait
imul
mov
push
in
pop
ss
mov
adc
lock
ds
xchg
pop
xchg
cwde
cmp
push
jns
push
xchg
pop
jo
inc
or
loop
aad
hlt
mov
sub
scas
pop
in
std
lds
aam
inc
cmp
repnz
mov
outs
push
das
jo
lahf
or
bound
and
adc
(bad)
sub
pop
cs
jg
call
mov
pop
push
and
xchg
(bad)
pop
jmp
ja
test
jg
and
outs
mul
xor
jb
pusha
ret
and
das
cs
fild
(bad)
frstor
mov
dec
lods
cs
mov
test
cmp
dec
sub
outs
dec
mov
fdiv
push
data16
outs
sbb
ds
or
into
and
mov
push
mov
aas
add
pop
stos
jmp
sbb
inc
cmp
xchg
sub
mov
imul
popa
mov
pop
jmp
mov
or
mov
inc
mov
stos
mov
mov
retf
pop
inc
(bad)
test
fnstsw
lea
dec
pop
scas
jnp
std
daa
mov
scas
mov
dec
jmp
dec
dec
fisttp
icebp
pop
add
ret
mov
fdiv
cli
gs
popa
push
dec
mov
arpl
sub
xor
mov
push
xor
dec
sub
mov
mov
fld
adc
sbb
sub
sbb
pop
gs
add
mov
mov
cld
cmps
nop
imul
xchg
xor
(bad)
fimul
or
cdq
stos
movs
push
int3
sub
jl
hlt
sub
add
ret
loop
imul
retf
sbb
push
mov
mov
sub
(bad)
cld
adc
sbb
js
pushf
in
(bad)
push
sub
xrelease
xchg
sub
and
mov
push
adc
mov
pop
sbb
inc
fdiv
lods
dec
pop
jl
addr16
pop
in
sub
pop
aad
lods
bound
addr16
data16
jmp
ds
cmp
sub
repz
loopne
xor
adc
movs
stos
retf
mov
add
(bad)
cmc
pop
xchg
mov
push
and
loopne
push
stc
mov
dec
ret
mov
pop
sub
ret
(bad)
pusha
int
retf
push
add
mov
dec
not
jmp
in
fild
pand
mov
or
adc
xor
cmps
sti
jae
retf
loopne
out
js
xchg
retf
in
xchg
jmp
movs
repz
cmp
inc
mov
cmp
push
mov
push
or
rcr
jle
repnz
fld
pop
cmp
or
rcr
push
xor
mov
pop
(bad)
mov
retf
out
sti
pop
sub
adc
aas
jmp
mov
add
loopne
sti
imul
cmp
mov
(bad)
dec
cs
add
cmc
std
push
pop
sub
loope
mov
jbe
or
scas
dec
mov
lock
retf
in
cmp
push
mov
push
pop
jne
daa
lahf
unpckhps
or
lds
inc
popf
loopne
cdq
test
push
in
in
pop
in
lahf
icebp
cmp
ret
loope
(bad)
lods
mov
sti
sub
punpcklbw
addr16
sbb
je
jl
mov
test
es
pop
add
cli
sbb
mov
rcr
jb
lods
pop
jmp
daa
(bad)
pop
or
push
cmps
jns
jb
fwait
mov
ds
adc
jmp
dec
pop
inc
sbb
push
std
lds
xor
fmul
add
jmp
retf
cmps
in
mov
sti
out
inc
push
dec
cmps
and
cmps
pop
jecxz
retf
push
(bad)
fld
loop
aaa
dec
xor
inc
push
stos
adc
pop
sbb
jno
out
inc
mov
or
and
jmp
jmp
mov
fldcw
mov
dec
call
mov
xlat
or
test
mov
clc
rcr
(bad)
fdiv
aas
fisubr
mov
add
(bad)
cmp
xor
inc
adc
icebp
les
push
mov
mov
retf
outs
stc
ret
stc
mov
mov
mov
sbb
and
ds
movs
xor
leave
pop
sub
dec
inc
outs
push
sub
mov
pop
sub
das
fdiv
lock
retf
cmp
xor
test
stos
push
pop
or
ror
push
add
inc
addr16
(bad)
push
adc
dec
jae
sub
push
ret
jb
mov
inc
aam
nop
push
test
fwait
pop
sbb
scas
and
inc
xlat
mov
dec
call
adc
cmp
and
dec
mov
cmp
inc
cmp
movs
mov
imul
cmp
mov
or
int3
pop
test
cmps
scas
sahf
pusha
adc
test
push
mov
ins
inc
push
lds
jmp
aas
popf
and
rcl
cdq
aas
xchg
pushf
add
adc
hlt
scas
pushf
(bad)
fnstenv
add
repnz
push
mov
inc
cmp
dec
adc
lahf
jecxz
dec
movs
popf
mov
xor
or
inc
and
dec
push
or
sti
mov
xchg
shl
jbe
or
fstp
lock
stos
dec
adc
mov
test
mov
cmps
mov
enter
js
dec
xchg
ret
fwait
sub
push
lods
jge
lods
jge
fcom
push
or
sbb
lea
rcr
popf
(bad)
stos
dec
mov
mov
adc
ss
or
not
cli
stos
cmp
nop
les
leave
or
popa
retf
adc
and
test
fwait
pop
lahf
leave
pop
mov
or
pushf
movs
imul
cmp
out
sbb
sub
push
or
mov
in
out
xor
push
mov
add
jno
sub
mov
inc
into
inc
ss
lds
cmp
imul
test
ins
pop
add
push
enter
scas
mov
push
(bad)
push
mov
mov
add
jb
fldenv
xchg
add
cmovs
jp
dec
jl
xchg
icebp
cwde
imul
mov
push
push
jnp
pop
and
mov
stc
imul
jg
or
bnd
lea
call
push
pop
pop
or
rcr
pop
dec
inc
dec
icebp
sti
dec
jmp
dec
jp
lods
test
jno
mov
ficom
adc
fisttp
xchg
outs
gs
fld
movd
icebp
rol
adc
cmp
mov
xor
cmp
or
dec
in
ins
mov
loopne
outs
adc
push
(bad)
fdiv
sbb
sahf
mov
or
jp
aad
(bad)
push
icebp
sti
pop
cs
sbb
stos
loope
sti
mov
or
lods
push
(bad)
out
dec
inc
fimul
cmp
pop
fidiv
cld
je
jmp
jmp
outs
jecxz
mov
repz
stos
cmp
jle
shr
movs
jns
lea
xchg
pop
in
jne
and
cmp
lods
jge
xor
ret
test
pop
lahf
and
fdiv
loope
lods
inc
rcl
ins
and
mov
mov
outs
call
addr16
gs
push
pop
add
scas
adc
pop
mov
xchg
mov
and
out
leave
aas
xlat
leave
and
aaa
cmps
js
rcl
ins
fcom
push
pop
mov
in
sbb
push
cmp
sbb
push
in
sbb
sti
lock
lock
or
sbb
mov
repnz
icebp
ins
xchg
lods
fwait
jmp
xchg
pop
lods
fs
jo
pop
in
inc
sti
and
xor
imul
fisttp
jnp
dec
cmc
std
and
sti
cmp
std
mov
pop
pop
das
scas
inc
sbb
mov
scas
xlat
scas
mov
cmp
ja
mov
movups
push
mov
(bad)
dec
mov
inc
(bad)
stos
dec
fbstp
adc
mov
pop
lock
mov
nop
(bad)
fnstenv
jnp
sbb
jns
add
data16
cli
push
push
xor
fmulp
jmp
mov
add
jmp
sub
fisttp
dec
jmp
out
mov
and
push
rcr
or
add
inc
int3
out
in
cmps
call
fs
(bad)
lods
cs
in
pop
push
inc
mov
iret
iret
mov
jne
adc
bound
pushf
retf
mov
dec
push
or
dec
bnd
mov
adc
mov
je
les
or
in
mov
outs
pop
gs
sbb
fwait
loope
xor
jmp
mov
pushf
ds
jmp
pop
sbb
jl
shl
mov
jnp
aaa
sbb
(bad)
push
push
jmp
aas
dec
imul
fimul
mov
sub
sbb
xor
fcmovbe
in
xchg
leave
test
sbb
aas
xor
arpl
dec
outs
push
lods
ror
jge
adc
sti
inc
or
pop
fcmovb
jmp
xor
dec
jb
pop
scas
jl
(bad)
mov
popa
hlt
xor
xor
adc
and
jmp
add
icebp
test
mov
cmp
or
or
in
(bad)
nop
dec
call
shl
stos
add
pop
mov
sbb
xchg
mov
js
cmp
add
dec
cld
mov
or
rol
gs
jo
stos
test
dec
lahf
cmc
lahf
xor
rol
jbe
inc
add
ret
mov
fs
dec
mov
retf
inc
clc
sub
mov
push
jne
fimul
bound
mov
repnz
into
sub
xchg
scas
test
mov
fadd
test
ins
jb
inc
xor
popf
pushf
(bad)
pop
iret
jmp
gs
cmc
cld
daa
sar
pop
ins
sar
fidivr
mov
mov
lock
sub
jmp
js
and
jns
xchg
gs
scas
jo
lds
xchg
push
inc
mov
mov
lock
mov
into
cdq
mov
cmp
cmp
ins
rcr
ss
mov
call
pop
mov
push
mov
aas
lds
ja
retf
fstp
push
dec
js
clc
sub
cmps
shl
shl
inc
sub
mov
mov
les
or
sbb
movs
es
mov
cmp
movsx
sti
ins
idiv
push
std
add
or
sub
and
in
sbb
psrad
jno
xlat
popf
lea
(bad)
mov
jnp
stc
sbb
sbb
sar
dec
xchg
xchg
pop
sbb
test
jle
mov
(bad)
dec
lock
icebp
adc
sub
fcomip
iret
(bad)
mov
and
dec
push
cmp
repnz
add
in
jmp
das
call
pop
fsubr
sti
pop
pop
sub
fdiv
das
mov
xor
scas
jae
stc
mov
aaa
retf
in
fwait
loopne
xchg
or
cmp
pop
aad
rcr
cmp
adc
fwait
push
cli
mov
(bad)
dec
mov
out
rol
add
dec
mov
or
push
mov
fucom
sub
outs
xchg
sub
ins
clc
cmp
pop
jl
jb
mov
in
loope
sub
loope
imul
pop
jmp
outs
es
fadd
or
or
push
pop
(bad)
call
fcomp
inc
push
xor
cli
nop
cmp
sub
scas
outs
or
sar
lahf
add
push
push
pop
cmp
add
mov
xor
sub
xor
gs
mov
inc
mov
shl
int
std
push
jo
mov
(bad)
cmp
cdq
hlt
mov
mov
pop
sbb
fisttp
pop
add
scas
nop
test
leave
or
sub
mov
and
adc
or
adc
jnp
xchg
push
xchg
inc
lea
hlt
(bad)
mov
ror
pop
xor
outs
push
out
scas
xchg
adc
(bad)
ins
popf
push
sbb
adc
push
(bad)
stos
jg
sbb
cmp
dec
add
out
cmps
cmp
ss
imul
xor
pop
(bad)
cmp
and
dec
test
push
mov
hlt
fnstenv
or
fimul
daa
xchg
std
mov
push
mov
and
(bad)
jmp
or
sub
dec
test
sar
jbe
ret
push
push
data16
ret
stos
cmp
cmp
xor
or
xchg
jl
adc
retf
xor
scas
lea
mov
push
inc
leavew
mov
lods
mov
push
mov
(bad)
jmp
mov
mov
lock
sub
push
mov
sub
ficomp
cmp
icebp
loop
mov
lods
pop
sbb
hlt
inc
and
cmps
popa
push
movs
loopne
dec
xchg
dec
fidiv
fld
pushf
pop
in
jne
xor
outs
test
imul
(bad)
fld
aam
and
std
cmp
je
or
mov
cs
cld
fisubr
call
xchg
inc
lock
jmp
data16
sub
dec
sbb
retf
cdq
(bad)
cwde
scas
dec
repnz
ret
jl
jns
fisub
data16
jecxz
sbb
icebp
sbb
or
ret
jecxz
jecxz
jl
addr16
ss
sub
pop
mov
test
movs
jae
push
inc
sbb
cmp
xchg
icebp
inc
loope
repnz
sbb
jbe
repz
adc
ret
or
add
shl
pop
inc
mov
jnp
clc
in
mov
out
loopne
pop
xchg
lods
adc
(bad)
std
push
clc
mov
mov
pop
loope
lds
mov
inc
retf
ret
add
mov
aaa
inc
jnp
pop
jbe
push
out
cmp
adc
mov
cmps
cmp
imul
loop
push
dec
and
xchg
or
iret
out
gs
ret
outs
dec
push
sub
jecxz
pop
les
mov
jl
cwde
xor
gs
push
mov
cli
xchg
jns
sbb
or
loopne
add
cmps
out
out
rcl
mov
dec
mov
jmp
sbb
lahf
pop
cwde
xor
jle
ss
hlt
fidivr
test
scas
cmc
cmp
imul
xor
jle
(bad)
adc
stos
cdq
cmp
push
lds
sub
icebp
jno
mov
call
mov
and
push
mov
repz
jmp
scas
pop
ins
adc
xor
pop
and
int3
add
sbb
popf
enter
lds
xchg
fcomi
cdq
neg
sbb
mov
std
sub
sbb
divps
int3
mov
aam
loope
or
sbb
into
mov
mov
arpl
test
mov
mov
and
mov
mov
dec
(bad)
repz
sub
lds
or
inc
loop
(bad)
fisttp
cmp
cmp
or
stos
pop
(bad)
enter
and
fistp
jmp
int
and
xor
mov
pop
pop
xchg
int3
(bad)
adc
sbb
sub
int
(bad)
les
lea
dec
int
jo
fst
cmp
jo
push
aam
fbstp
jmp
dec
(bad)
into
xchg
mov
sti
mov
pop
mov
ja
mov
arpl
cmps
inc
xor
fist
(bad)
mov
cmps
and
inc
xchg
fidiv
pop
lahf
add
popa
xchg
fstp
cmp
jmp
push
fs
std
js
adc
lods
outs
mov
gs
aas
sbb
sar
pusha
xor
xchg
jl
(bad)
mov
adc
xchg
out
add
cmp
mov
pop
repnz
push
mov
pop
pop
inc
hlt
adc
pop
inc
push
js
add
repnz
and
aam
stos
jbe
xchg
push
je
fcomi
std
xor
and
inc
das
jns
out
jmp
rol
test
test
mov
sbb
pop
push
loop
dec
adc
jno
into
ins
setg
push
xchg
xor
inc
lds
dec
sbb
push
mov
test
call
inc
cmps
repnz
sub
(bad)
cmp
push
test
outs
mov
iret
lea
in
dec
sub
enter
pusha
xor
cwde
mov
dec
jl
or
xchg
fiadd
sbb
lds
pop
jae
retf
push
inc
cmp
call
inc
sub
mov
xchg
and
dec
scas
gs
sub
jb
pop
(bad)
cli
retf
sbb
in
fsubr
xchg
outs
ins
jecxz
loop
and
mov
loop
mov
enter
fs
lea
stos
shl
ret
hlt
push
xor
jge
ret
pop
adc
xchg
in
sbb
leave
push
ja
inc
fisttp
or
xchg
rol
ror
(bad)
test
fstp
pop
pop
jp
and
cmc
inc
stc
repnz
mov
ror
pop
sub
mov
mov
cmp
mov
call
leave
dec
pop
ja
loopne
and
retf
lods
int3
stos
ret
inc
dec
in
add
pop
xchg
and
(bad)
push
ror
test
inc
sub
std
xchg
icebp
cmp
mov
stc
add
int
fcomp
inc
push
test
push
push
aas
div
dec
in
jnp
xchg
call
mov
fcomp
les
(bad)
jecxz
outs
rcr
js
sub
mov
mov
ja
sub
add
dec
jge
and
push
repnz
xchg
and
adc
popf
rcr
push
mov
mov
js
out
jmp
jmp
add
inc
inc
repnz
or
pop
xchg
lods
stos
or
and
jmp
jl
add
out
jmp
and
js
ret
mov
enter
outs
add
inc
int3
xchg
sub
jmp
fdivp
push
ja
sti
xor
leave
movs
mov
pop
mov
mov
and
cmp
sub
aad
mov
xchg
dec
jne
xlat
(bad)
push
call
push
cli
stos
retf
jl
mov
mov
loop
and
sbb
xlat
and
lods
sbb
jmp
jl
cmp
sbb
push
inc
je
call
xchg
stc
movs
fwait
add
lea
or
test
mov
add
pop
inc
mov
outs
mov
fwait
dec
and
pop
ins
aad
vcmpss
in
adc
xbegin
(bad)
and
xor
push
scas
pop
(bad)
movs
jecxz
pop
dec
pop
and
outs
push
xor
arpl
sub
mov
js
push
xchg
inc
retf
mov
xor
call
fadd
outs
iret
loope
cdq
sar
rcr
loop
push
mov
or
or
jb
mov
jmp
fisttp
mov
inc
mov
add
adc
pusha
add
jbe
jbe
test
loop
xchg
pusha
inc
jnp
cmp
ror
sbb
jnp
imul
add
inc
add
mov
sbb
movs
push
xchg
xchg
sbb
fidiv
xchg
sub
lds
outs
pop
leave
imul
(bad)
(bad)
nop
pop
sbb
and
leave
fld
cli
aad
xchg
adc
retf
mov
ja
xor
add
dec
fdivr
jnp
cmp
inc
cld
retf
or
add
pop
call
(bad)
jae
into
jbe
jnp
fwait
jmp
cmp
or
mov
mov
mov
lods
mov
jb
imul
mov
in
loop
bound
(bad)
cmps
daa
push
idiv
or
push
mov
dec
arpl
outs
cmps
cmp
dec
jmp
pop
pushf
(bad)
out
mov
xchg
test
hlt
mov
shl
in
mov
int3
cld
sti
jns
je
lds
sahf
fimul
mov
ds
inc
mov
jecxz
mov
hlt
inc
jl
fsub
lods
jecxz
fnstenv
inc
jo
push
es
scas
lds
loope
adc
movs
mov
call
dec
add
mul
pop
mov
frstor
iret
xchg
jg
pop
xchg
pop
out
inc
popf
stos
jecxz
movs
enter
mov
mov
clc
retf
push
pusha
call
dec
ror
push
cmps
movs
adc
sub
mov
rcr
les
pop
je
jmp
inc
movs
test
push
cdq
jg
pop
mov
cld
rol
mov
lds
jmp
xchg
and
outs
push
inc
jecxz
popf
pop
push
retf
data16
fnsave
dec
and
or
not
cdq
xor
and
cmc
and
adc
add
pop
(bad)
(bad)
bound
(bad)
mov
out
mov
cmc
cwde
lods
adc
test
mov
dec
or
into
sbb
pop
push
or
and
lods
sub
arpl
cmp
in
push
jle
dec
adc
rcl
adc
sub
inc
or
mov
sbb
mov
mov
(bad)
shr
and
jns
dec
pop
popf
out
push
pop
fwait
and
add
in
cmp
sti
sar
cmp
jae
loop
pop
cmp
popf
sbb
in
mov
push
or
cmp
add
cs
mov
add
sub
es
pop
mov
pop
test
add
add
ret
rcl
push
and
sub
enter
stc
dec
test
iret
test
add
dec
jg
enter
mov
mov
push
add
push
clc
cmp
adc
cmps
push
pushf
clc
mov
std
dec
in
hlt
fnstcw
push
push
ins
ret
stos
fadd
dec
and
jp
cmps
pop
dec
mov
jecxz
pusha
in
xchg
fist
mov
(bad)
xor
jmp
stos
sbb
scas
pop
not
add
and
mov
int3
sub
sub
stos
test
mov
push
jb
aad
in
icebp
std
xor
inc
les
ins
mov
pop
mov
lar
inc
push
mov
xor
jne
push
mov
xchg
xor
inc
mov
mov
pop
sub
clc
sub
cmp
and
imul
xor
imul
jle
adc
or
in
sbb
mov
mov
sbb
ss
hlt
inc
xor
xchg
out
retf
loop
cli
inc
mov
or
xor
fmul
inc
xchg
aas
cdq
retf
mov
mov
loopne
bndldx
clc
sbb
cmp
fisubr
in
sub
jecxz
and
inc
mov
add
pop
mov
adc
jnp
fnsave
push
or
daa
mov
retf
jns
push
ds
sti
cmp
add
ins
sub
xchg
dec
mov
inc
jb
(bad)
test
jb
or
sbb
sub
lahf
and
iret
(bad)
mov
ror
cwde
fbld
ja
out
cmps
xor
xor
push
mov
mov
cmp
mov
inc
je
push
loope
mov
in
aam
test
fst
hlt
(bad)
movs
loope
jmp
mov
pop
push
mov
push
dec
int
push
dec
cmp
sbb
jp
fsubrp
adc
jns
and
(bad)
in
cmp
imul
xor
(bad)
or
imul
ret
fldenv
loop
repz
les
ds
jge
push
pop
in
lods
stc
xchg
dec
pushf
push
stos
or
das
dec
mov
je
and
test
xchg
fwait
add
sahf
addr16
fs
inc
push
(bad)
lds
xor
mov
(bad)
in
and
pop
and
rcl
imul
rcr
into
adc
and
sub
fistp
and
xor
call
sbb
push
rol
das
xor
repz
mov
xor
cmp
xor
out
sbb
addr16
mov
movs
pop
cli
dec
jno
(bad)
xchg
int
mov
pop
ret
mov
or
out
xor
enter
xchg
cld
mov
cmp
ss
data16
sahf
pop
fild
ja
add
sar
repz
adc
lea
and
(bad)
prefetch
cdq
xor
jl
mov
sub
push
lock
sub
jmp
add
pop
(bad)
cmp
mov
or
ins
push
cmps
movhps
arpl
mov
xchg
mov
mov
sbb
sub
mov
loop
call
cmp
pop
mov
outs
push
lea
dec
mov
xchg
ret
ins
mov
es
inc
ret
out
push
cmp
xchg
xchg
mov
xchg
xor
pop
mov
lahf
(bad)
not
fldcw
icebp
push
sbb
jmp
dec
shl
push
in
bound
jl
dec
ds
ror
stos
mov
push
jmp
dec
test
dec
ins
hlt
fst
stos
icebp
in
inc
lahf
add
or
xchg
das
pop
mov
cmps
outs
sbb
shl
sbb
aad
inc
mov
vphaddbd
xchg
std
inc
fimul
lock
jmp
jle
mov
pusha
push
push
cmps
je
in
or
outs
xchg
popf
bound
pop
xor
pushf
and
sahf
in
push
jg
jo
in
pop
leave
cmp
iret
aad
out
loopne
xor
jnp
push
xchg
test
add
jne
mov
xchg
adc
mov
cmp
pop
rol
and
or
mov
mov
ins
shr
cmp
jl
xor
retf
fcmovnu
fisttp
loope
mov
loop
cmps
neg
retf
stos
ja
push
xor
sbb
mov
xor
or
bound
shl
pushf
leave
adc
dec
jnp
jmp
inc
loop
scas
sbb
shl
push
test
loop
pushf
or
mov
mov
push
daa
cld
rcl
push
mov
(bad)
cmc
bound
fld
dec
xor
cwde
aad
pop
je
cmp
pslld
fwait
push
sbb
sbb
dec
mov
mov
(bad)
call
hlt
cmp
cmp
xor
cmp
fwait
jno
lods
xchg
sbb
clc
repz
test
outs
push
dec
aas
mov
cmc
movs
cmc
call
dec
movs
enter
pop
or
pop
add
shl
loopne
push
inc
jnp
dec
push
cs
mov
dec
lods
mov
pop
(bad)
xchg
and
adc
je
pop
ror
ja
jl
int3
and
jb
gs
lods
jmp
dec
fwait
xor
push
add
jl
mov
lods
cmp
rol
dec
mov
sbb
div
enter
sub
cmp
push
setg
jp
dec
cmp
sahf
(bad)
data16
out
jo
adc
pop
iret
mov
fst
xor
or
mov
xlat
cdq
dec
or
cs
push
aad
or
rol
int3
sub
dec
cmp
xchg
push
ret
and
xor
ficomp
mov
cmp
pop
test
adc
adc
lahf
loop
ins
inc
pop
dec
aad
push
test
js
adc
push
arpl
cs
push
cs
cmp
ror
mov
sahf
cmp
jp
fldenv
or
retf
cmp
repnz
icebp
outs
sahf
mov
push
pop
sbb
inc
mov
push
xchg
or
aad
sub
sysenter
xlat
jmp
xchg
xchg
mov
cwde
sbb
lods
push
neg
dec
imul
test
mov
add
stos
stos
lock
jmp
ins
mov
sahf
mov
mov
or
movs
lock
ret
pop
pop
cmp
mov
movs
lock
stc
sbb
inc
aas
xor
or
push
call
xchg
cmp
jbe
xchg
push
pop
inc
jb
stc
mov
sti
mov
push
xchg
aas
shr
retf
dec
pop
xor
pop
jge
push
fs
cs
cmp
aad
cmp
mov
outs
outs
mov
arpl
push
push
xchg
push
sbb
sub
mov
aaa
daa
jmp
cmps
mov
jo
in
popf
sub
xchg
mov
popf
jns
push
pushf
ret
cmp
xchg
cmp
ins
aam
cmp
out
imul
jns
test
xchg
xchg
mov
mov
into
rol
das
mov
xor
pop
stc
inc
(bad)
pop
inc
or
aaa
imul
inc
(bad)
aaa
add
std
das
dec
repz
lea
mov
push
ret
stos
mov
pop
push
or
lods
cmp
popa
push
push
cmp
cmp
sar
mov
mov
dec
loope
movs
popa
mov
push
fucomip
jge
imul
pop
jmp
xor
cmovp
jl
push
fimul
xchg
(bad)
repz
imul
scas
cs
fild
cmps
push
icebp
ins
and
mov
daa
gs
shr
daa
xchg
int3
imul
cmp
dec
outs
jle
pop
and
add
dec
sub
ret
dec
add
call
xor
mov
cmps
(bad)
icebp
mov
adc
ret
add
cmps
call
jl
ret
jbe
js
lods
fild
icebp
sbb
jns
push
sahf
neg
in
(bad)
or
cmp
pop
arpl
adc
cdq
pop
test
mov
jge
mov
xchg
jnp
or
xor
cld
inc
es
jmp
test
cld
pop
and
jo
sar
test
(bad)
pop
pop
sbb
adc
sub
push
jns
pop
nop
sub
mov
dec
cmp
das
dec
out
inc
out
mov
pop
enter
js
add
adc
xor
cmp
mov
jne
dec
test
mov
mov
mov
iret
sbb
sbb
aas
repnz
popa
hlt
dec
mov
mov
scas
clc
in
push
dec
mov
mov
pop
xchg
gs
into
adc
jp
inc
xor
push
iret
jo
cwde
xchg
(bad)
dec
push
loop
sbb
inc
ins
push
loopne
sti
loopne
jmp
mov
push
mov
mov
mov
push
jp
imul
(bad)
mov
pop
cli
rcr
lea
(bad)
out
sahf
sbb
imul
jl
das
fcomp
sar
imul
and
add
jmp
add
cmp
nop
mov
pop
daa
mov
int3
aad
icebp
adc
sti
mov
or
push
mov
or
push
popf
jnp
das
or
inc
push
stos
or
ja
adc
aas
adc
adc
aas
fdivr
add
adc
xchg
push
push
cli
clc
rcl
jl
or
xor
xlat
mov
sbb
pop
xchg
or
mov
xchg
jge
sbb
push
fistp
(bad)
loope
in
(bad)
mov
scas
lds
inc
imul
aas
das
mov
xchg
lods
push
arpl
mov
lods
inc
push
push
cmp
or
pop
mov
xor
retf
pusha
pop
cmps
and
stc
mov
push
(bad)
and
lock
mov
or
shr
sbb
daa
push
or
and
mov
pusha
sub
or
jns
pop
fild
xchg
int
pop
xchg
dec
cs
(bad)
je
sbb
pop
and
dec
adc
inc
mov
mov
mov
sub
sar
cmp
xchg
pop
pop
jmp
dec
add
jno
out
clc
test
push
add
adc
xor
dec
cmp
test
xor
sbb
test
pop
aas
pop
xor
outs
or
add
jns
pop
sbb
jno
lea
push
mov
das
push
hlt
jmp
aad
nop
xlat
pusha
(bad)
sbb
sbb
or
add
pop
rol
movs
pushf
mov
sbb
icebp
cdq
pusha
scas
bound
mov
fsub
inc
mov
xor
xchg
das
mov
cmc
sti
enter
xchg
sbb
int
xchg
fldenv
scas
pop
adc
pop
pop
cwde
xlat
fldcw
push
(bad)
popa
scas
dec
enter
pop
test
and
push
adc
mov
pushf
adc
and
lods
sub
dec
je
sub
shr
stc
mov
inc
sub
loopne
sub
cmps
loopne
shl
(bad)
xchg
sbb
mov
loop
dec
sbb
mov
pop
mov
and
dec
cmps
mov
shl
fcmovb
jle
add
pusha
inc
xor
sbb
fwait
or
xor
sub
cli
jb
push
jecxz
pusha
xor
nop
hlt
retf
dec
add
jne
shl
xor
sbb
cmp
test
or
push
pop
lods
dec
js
mov
in
jge
call
mov
lock
fcmovnu
push
mov
popa
add
iret
xchg
retf
mov
jnp
cs
add
enter
enter
in
and
enter
ss
test
jb
add
push
jo
xor
call
cs
fiadd
mov
test
cmp
jb
shr
mov
jns
ret
sti
cmps
push
add
sbb
ror
outs
sub
(bad)
je
xchg
enter
xor
mov
sbb
sahf
push
sar
(bad)
dec
gs
ds
cmp
addr16
lock
jecxz
and
mov
sar
cmp
sub
repz
sar
cmp
jo
int
xor
xchg
push
xor
(bad)
and
in
stc
xor
call
xor
scas
mov
out
and
shr
call
xor
dec
push
adc
xchg
fldl2t
fidiv
sub
xchg
(bad)
cmc
out
out
out
xchg
sub
push
jg
sbb
push
sbb
mov
mov
in
mov
aaa
adc
adc
mov
(bad)
inc
hlt
sbb
(bad)
push
pop
add
data16
cmp
push
es
mov
adc
inc
xor
int
jo
sar
mov
push
test
call
dec
(bad)
out
test
cmp
push
push
clc
and
dec
jmp
cmp
in
popa
(bad)
cmp
hlt
lahf
je
ret
in
sub
xchg
sbb
add
mov
(bad)
lahf
loope
xchg
xchg
mov
pop
xchg
cli
push
neg
fisttp
inc
pop
or
dec
dec
outs
repz
push
push
xchg
jno
jbe
jp
adc
scas
mov
adc
sub
xor
adc
dec
add
xchg
jbe
xchg
js
and
pop
enter
inc
mov
(bad)
not
push
rol
push
pop
loop
in
das
adc
lock
jbe
aas
cmp
lds
sbb
xchg
mov
and
mov
mov
in
(bad)
stos
push
hlt
ret
dec
dec
stos
jno
(bad)
sbb
xchg
inc
(bad)
loop
add
mov
jb
xchg
xchg
inc
pop
test
es
cmp
adc
test
pop
cmc
cs
sub
dec
aam
fs
cld
pop
pop
cmpxchg
jae
sbb
xor
(bad)
adc
push
add
mov
movs
ds
adc
mov
int
ins
movs
out
ficomp
sbb
sub
not
(bad)
push
mov
cmp
enter
push
dec
mov
loopne
xor
nop
lds
or
dec
je
js
(bad)
lahf
clc
xchg
out
mov
xchg
pop
xor
cwde
(bad)
mov
add
daa
leave
or
and
jp
cmps
push
mov
nop
pop
in
or
stos
lahf
add
enter
cmp
sub
xchg
sub
rcl
fld
retf
push
out
sub
pop
sbb
fs
call
xor
jge
(bad)
pop
or
add
cmp
dec
leave
js
xor
mov
inc
fdiv
xor
lahf
(bad)
shr
push
fcom
mov
xchg
xchg
push
mov
pop
js
or
test
lahf
dec
mov
pop
pop
or
test
add
lea
cmc
daa
fs
jmp
into
jne
enter
xlat
std
cmp
mov
xchg
pop
cmp
xor
nop
pop
mov
stos
push
inc
cmps
scas
gs
scas
in
sti
sbb
div
mov
sahf
jmp
add
fistp
and
dec
mov
xor
and
es
outs
data16
in
neg
lods
mov
imul
dec
add
out
shl
push
adc
adc
jns
pop
xlat
jl
pop
cmp
pushf
adc
nop
cli
mov
push
jge
mov
aad
pop
cmps
ret
dec
inc
mov
call
jle
add
je
popa
test
push
adc
inc
daa
mov
xchg
cmps
mov
fidivr
jno
movs
test
xor
int3
inc
mov
nop
add
inc
lock
test
in
lds
sub
shl
sub
std
xchg
jne
cmp
cmc
sbb
rcl
xor
adc
out
aas
lock
sub
push
out
mov
ds
push
push
cmp
xor
lea
dec
fild
inc
rcl
lock
das
data16
push
or
movs
outs
pop
gs
arpl
inc
xchg
fsubr
add
jo
xchg
adc
lods
sbb
jmp
xchg
scas
cdq
fs
icebp
sub
xor
mov
ret
inc
aad
mov
aaa
ds
ins
stos
fsubr
and
mov
(bad)
enter
fdiv
fsubr
jnp
sbb
popa
pusha
jo
mov
lods
in
fild
dec
imul
jmp
jl
dec
imul
out
push
add
(bad)
pop
sbb
in
add
sbb
ret
sti
ror
mov
push
jmp
in
icebp
xor
test
and
cdq
rcr
cld
(bad)
test
out
mov
push
addr16
aas
arpl
mov
loope
push
inc
dec
in
repnz
push
xchg
and
jns
ss
jecxz
fsub
cmp
lods
jae
inc
or
jno
call
test
das
not
mov
sub
add
out
mov
cld
rcr
mov
int3
adc
scas
mov
les
jg
test
adc
mov
mov
xchg
jle
push
outs
int
daa
fisttp
xlat
inc
out
pusha
mov
xchg
fwait
jg
push
jo
out
xlat
sub
dec
add
retf
jo
mov
js
jg
mov
fcomp
scas
pop
hlt
mov
jg
icebp
stos
inc
adc
sub
rol
xchg
shl
pop
in
ficomp
lahf
shl
cmp
out
pushf
jecxz
(bad)
and
movs
iret
movs
xchg
aam
cmps
xchg
movs
and
pop
push
inc
movs
sub
movs
inc
out
ja
fadd
and
call
arpl
jnp
jmp
std
cmp
clc
(bad)
sbb
sahf
xor
out
out
adc
xchg
pop
cwde
(bad)
iret
call
sbb
jno
je
outs
scas
cmp
(bad)
repnz
cwde
mov
push
pop
retf
imul
les
into
scas
push
in
loop
jo
mov
add
arpl
adc
jle
popa
mov
retf
int3
mov
in
in
pop
mov
cmp
aam
push
sbb
in
fild
pop
in
ins
pop
mov
inc
mov
and
push
jb
aas
gs
add
(bad)
jbe
mov
lea
mov
sub
xchg
and
jecxz
mov
cmp
int3
scas
add
loop
inc
add
(bad)
mov
loopne
idiv
jb
stos
movs
imul
mov
xchg
push
mov
fcmovbe
add
xchg
xchg
cmp
test
mov
sub
push
sub
in
leave
repnz
fstp
dec
push
push
retf
add
push
add
jae
mov
dec
jnp
sub
push
fistp
outs
sbb
or
jbe
aam
xor
leave
inc
retf
cmovbe
mov
test
mov
pop
push
sbb
or
dec
leave
mov
popa
xor
(bad)
out
in
inc
mov
or
add
and
sub
jl
sar
test
arpl
jbe
pusha
adc
mov
jge
xchg
test
adc
sbb
xchg
movs
retf
and
pop
adc
inc
mov
into
push
scas
aaa
pop
xlat
cdq
fcomip
mov
int
or
xchg
enter
xor
sbb
xor
sub
sbb
mov
push
inc
retf
loop
jnp
retf
out
inc
push
test
sbb
sahf
inc
nop
out
retf
out
sbb
push
xchg
repnz
and
lods
out
xchg
sbb
sub
cld
scas
(bad)
shl
ss
iret
mov
jne
(bad)
(bad)
stos
or
dec
ror
lods
mov
mov
movs
push
pop
xchg
mov
xchg
(bad)
cmp
sbb
pop
sub
dec
pop
dec
mov
mov
int3
push
es
cdq
jg
push
push
xchg
push
idiv
fcomp
inc
sbb
int3
pop
(bad)
cmp
mov
add
mov
mov
mov
sub
adc
loop
in
int3
scas
es
retf
loop
(bad)
adc
iret
fcom
iret
mov
daa
aas
shl
int3
jmp
leave
nop
sub
loope
shr
pop
dec
(bad)
and
cmp
jmp
rcl
dec
mov
out
inc
mov
mov
push
repnz
mov
hlt
sbb
repnz
aaa
loopne
lock
fcmovnu
pushf
arpl
cmp
enter
loop
test
fs
jo
adc
neg
xchg
imul
push
cmps
(bad)
into
in
dec
push
lea
pop
jg
es
jg
add
retf
call
or
loopne
push
push
mov
cli
ror
repz
pop
jbe
fcmovne
cmp
add
mov
cmp
inc
les
outs
test
in
cmc
push
fstp
sub
cmp
xor
pop
mov
xchg
sub
xchg
in
xchg
js
lods
(bad)
call
popa
fistp
jge
sbb
ins
pop
test
inc
push
jae
cld
call
div
test
adc
sub
iret
fidivr
ret
push
jge
dec
adc
push
mov
call
fnstsw
xor
mov
or
stos
aas
dec
sbb
pop
verr
push
sti
lods
das
stc
sbb
mul
and
inc
jle
jle
imul
sub
xor
loop
aaa
dec
(bad)
fistp
dec
popa
jecxz
sub
loop
push
mov
fsubr
or
repnz
xchg
ss
mov
mov
jmp
dec
ret
push
mov
cmp
dec
ins
dec
cdq
test
lahf
sbb
jp
std
div
mov
ins
loopne
into
dec
js
adc
add
sti
pop
sub
jae
lock
mov
and
inc
(bad)
icebp
dec
sbb
xor
into
pop
lock
push
xor
mov
dec
fs
or
arpl
dec
retf
stos
(bad)
xchg
or
mov
fisubr
mov
jnp
sbb
push
or
mov
adc
ins
les
sbb
aad
xchg
cmp
test
push
shl
test
stos
or
mov
sub
sbb
cwde
dec
imul
mov
mov
fwait
gs
cmp
or
popa
bound
inc
xor
aaa
lods
inc
enter
sub
movs
(bad)
jmp
mov
add
popa
sbb
mov
mov
iret
inc
int
jecxz
xlat
mov
mov
(bad)
fsub
mov
add
loop
lahf
xchg
mov
(bad)
push
call
cmps
ret
mov
or
sahf
inc
and
adc
mov
movs
mov
inc
push
call
cmc
inc
inc
sbb
lock
mov
push
push
sbb
shl
cmp
mov
jns
mov
icebp
retf
mov
addr16
mov
out
add
sbb
and
loope
hlt
test
cmc
fldz
stos
popa
fwait
add
sbb
dec
and
adc
ins
mov
sub
push
xor
inc
rcr
pusha
pop
jge
out
mov
ficom
int
loopne
mov
hlt
adc
aas
push
ja
jmp
pusha
imul
push
add
ficom
jne
dec
ins
push
int3
cwde
rcr
adc
fistp
mov
mov
or
ret
es
dec
pop
mov
and
in
or
mov
pop
into
pop
iret
sahf
xchg
mov
in
lds
fdiv
jge
call
popa
xchg
push
xchg
js
stc
push
jmp
sub
mov
sbb
cs
mov
mov
add
pop
push
ins
xchg
(bad)
scas
cmps
dec
les
enter
add
fmulp
arpl
push
and
addr16
(bad)
hlt
jle
aam
mov
jp
pusha
dec
mov
xchg
xlat
mov
call
sub
in
(bad)
movs
push
and
clc
(bad)
(bad)
dec
xchg
lods
repnz
stos
mov
xchg
adc
xor
sub
dec
aam
adc
stc
mov
or
cwde
dec
imul
pop
lea
into
sahf
cwde
mov
cmp
adc
sbb
cmps
clc
jae
es
mov
push
add
iret
call
sbb
(bad)
call
pop
cwde
lods
adc
stos
test
push
cwde
cwde
scas
mov
xlat
cmp
stc
mov
dec
popa
jne
aam
test
inc
push
not
dec
dec
fistp
popf
jns
stc
fadd
cmp
out
push
jl
retf
inc
nop
cmps
jnp
dec
mov
add
or
call
inc
or
mov
mov
enter
jmp
(bad)
clc
mov
push
push
into
push
push
aad
daa
add
jmp
cs
mov
sti
(bad)
dec
jnp
pop
loop
fdivr
mov
push
in
xchg
repnz
rcl
cmp
nop
(bad)
in
mov
sbb
push
add
lock
or
je
out
test
dec
jne
jb
mov
das
pop
adc
xchg
rcl
inc
stos
add
dec
jle
xor
mov
or
out
repz
sub
xor
add
xor
int3
in
rol
rol
loopne
xor
mov
push
ins
cmps
mov
call
push
jnp
sbb
dec
push
imul
out
icebp
fist
sbb
add
retf
out
jge
adc
test
icebp
int
mov
jo
adc
in
sahf
mov
dec
mov
xor
add
jb
adc
xchg
ret
fmul
pushf
xor
pop
mov
sub
xlat
jno
dec
mov
pop
mov
sbb
jl
cmc
jmp
sbb
enter
dec
jg
pop
pop
jbe
and
xchg
sahf
aaa
in
push
add
xchg
jmp
not
fist
mov
and
xor
or
ss
xor
test
push
inc
push
gs
shl
out
push
dec
push
lds
inc
nop
jb
xchg
jae
mov
and
or
mov
sub
cmp
cmps
mov
add
jnp
ins
jb
sbb
imul
mov
sbb
mov
push
cmp
xlat
sub
xor
inc
push
mov
pop
scas
push
daa
into
xchg
jmp
mov
std
lock
shl
mov
int3
mov
fild
xchg
or
jg
cmp
shl
loope
sub
(bad)
sub
cmp
mov
or
test
es
xchg
push
int
xchg
outs
loop
mul
dec
mov
sbb
cwde
lods
stc
in
test
rol
mov
jae
scas
js
imul
mul
jecxz
xchg
arpl
xor
push
mov
inc
cmp
mov
rol
adc
cmps
cmp
ja
(bad)
jmp
enter
mov
xchg
xor
aas
xchg
push
cmp
(bad)
movs
mov
or
call
pop
mov
addr16
push
out
pusha
sbb
test
xchg
push
fidiv
mov
or
cmp
or
leave
cmp
xor
mov
jne
sub
sub
hlt
pushf
push
mov
aam
jb
push
lock
and
sbb
cmp
xor
or
or
test
adc
sbb
in
test
aaa
pop
ficomp
xchg
xlat
outs
adc
adc
lahf
jmp
adc
es
inc
popf
dec
test
pop
loope
sub
push
outs
fnstenv
push
xchg
xchg
repnz
mov
lods
pop
push
and
mov
mov
dec
pop
xchg
les
mov
cwde
bound
ret
push
ins
push
inc
mov
sbb
(bad)
aam
mov
std
sub
jne
inc
in
dec
ret
aaa
sbb
lods
aad
cmp
pop
mov
std
sub
or
xor
cmp
mov
mov
ins
(bad)
icebp
int3
jle
mov
out
repz
mov
ror
xchg
xchg
jmp
bound
or
lods
in
icebp
icebp
sbb
retf
imul
pop
ss
xchg
pop
push
mov
sar
test
inc
and
jb
retf
popf
adc
or
mov
add
adc
push
lds
adc
lock
sub
adc
push
ds
or
mov
inc
pop
xor
xchg
mov
loop
or
shl
add
pushf
mov
sar
xchg
mov
pop
dec
stc
aad
cwde
sbb
stc
jno
inc
xor
lods
test
mov
cmp
dec
fcomp
nop
stos
sbb
sub
ja
loopne
fmul
xor
xor
aam
jmp
stc
test
test
inc
xor
mov
inc
les
adc
mov
jns
jp
or
call
mov
or
in
pop
ja
add
pop
mov
adc
es
rol
sbb
xchg
fadd
scas
sub
aas
in
push
add
cmps
(bad)
xlat
cld
xchg
or
pop
hlt
pop
in
sbb
mov
push
pop
shl
aas
dec
mov
fistp
cmps
push
stc
sbb
add
loop
cmp
stos
ror
(bad)
retf
jmp
test
mov
or
hlt
xlat
pop
cmc
out
loopne
lahf
sub
test
sub
or
mov
inc
cmps
mov
push
out
adc
jae
push
xor
add
shr
es
jle
add
lods
icebp
pusha
into
ret
or
adc
push
and
inc
inc
lea
cmp
jp
push
scas
stos
(bad)
mov
fdivr
push
(bad)
mov
shl
xor
sub
jmp
cmp
jo
fadd
pushf
mov
xchg
and
xchg
addr16
mov
mov
dec
mov
scas
xchg
jp
push
stc
test
stos
sub
or
jne
or
dec
mov
sbb
aas
es
push
jo
push
mov
test
jbe
xor
retf
std
xchg
out
inc
in
outs
(bad)
(bad)
xor
ror
pop
cmps
xchg
inc
mov
and
adc
es
pop
les
jg
retf
jl
fild
pusha
mov
and
jns
mov
xchg
inc
jb
retf
xchg
sar
pop
mov
aas
inc
inc
(bad)
sub
ja
test
sbb
push
push
inc
jo
mov
inc
cmp
icebp
push
add
scas
out
scas
jae
adc
pusha
add
pop
cwde
outs
stos
mov
sbb
pop
jl
jg
pop
out
pop
adc
jnp
or
call
stc
push
and
push
sbb
jp
add
and
adc
mov
fabs
dec
mov
(bad)
mov
jbe
data16
adc
div
fidivr
ds
ret
out
outs
arpl
mov
jnp
loope
or
add
adc
enter
or
mov
inc
repnz
jmp
cdq
ja
repnz
sub
retf
or
fwait
add
rcr
xchg
mov
sbb
in
stos
out
or
xchg
popa
mov
xchg
nop
popf
mov
jne
stc
icebp
shl
aas
sub
push
cld
sbb
test
mov
nop
mov
sub
inc
sar
mov
push
out
and
cdq
cmps
int3
popa
pop
popf
jne
test
cmps
add
or
sub
aaa
and
dec
mov
push
mov
mov
daa
arpl
or
push
out
jo
(bad)
pusha
sub
pop
mov
sti
mov
sub
adc
sbb
(bad)
std
fiadd
inc
mov
lea
fcmove
jnp
or
mov
das
pushf
das
xor
sub
fs
push
shl
lods
inc
inc
js
fwait
call
pushf
mov
pop
imul
xchg
out
cmp
dec
les
sbb
sub
lods
iret
jp
xor
cmps
xchg
jb
pop
inc
(bad)
xchg
(bad)
(bad)
retf
xchg
adc
and
jge
dec
mov
push
push
shl
push
jne
cli
add
ja
mov
stc
out
cmp
pop
push
rol
sub
stc
push
push
add
(bad)
adc
aas
cld
xchg
adc
push
cld
cmp
mov
scas
push
fiadd
inc
jle
pop
inc
into
stc
arpl
mov
leave
stos
pop
push
dec
retf
mov
mov
dec
xor
test
jbe
dec
das
jl
push
ror
dec
call
ja
push
push
stc
fnstsw
fidiv
or
mov
sbb
lods
push
loopne
cmp
clc
jle
pop
add
push
mov
les
and
gs
cdq
mov
fnsave
pop
test
leave
lods
repnz
call
push
or
outs
popa
dec
dec
push
mov
jae
xlat
fstp
sub
cmp
or
xchg
lock
xor
xor
add
xchg
pop
xor
popf
repz
std
div
pop
jno
and
pop
test
ins
sub
not
cmps
data16
call
aam
or
dec
popf
push
pop
cld
imul
out
les
ds
mov
inc
mov
mov
fisub
mov
and
jns
cmp
aas
push
das
mov
daa
add
push
mov
repz
aad
fimul
aad
xor
adc
xchg
inc
retf
push
mov
in
push
cmp
out
inc
mov
mov
inc
dec
or
or
push
inc
lods
jmp
cmp
xor
das
cmc
call
cmp
dec
jge
add
push
in
cmps
fcmovb
inc
sti
push
std
jne
mov
ret
popa
pop
mov
(bad)
cli
movs
add
fst
into
in
call
lods
cmps
push
sar
cmp
dec
adc
push
outs
or
sbb
bnd
push
xchg
mov
cmp
sbb
pop
pushf
sub
lock
and
sub
rcl
jb
jb
add
cmps
clc
xor
(bad)
jmp
aam
in
fadd
pop
cmp
cli
push
mov
gs
retf
aad
jno
jbe
scas
push
adc
lods
mov
repz
aaa
cmp
lea
dec
xor
or
sub
imul
jl
jae
dec
mov
pop
mov
adc
pop
call
cs
aas
jp
test
cmps
out
xchg
je
sub
(bad)
push
out
imul
pop
leave
jmp
inc
xor
imul
pushf
int
loop
jbe
jp
add
sub
or
push
cmc
or
sbb
xchg
mov
xchg
in
popf
cmc
push
adc
movs
(bad)
xor
xor
(bad)
cmp
pop
ret
mov
pop
sbb
pop
outs
mov
lock
push
inc
mov
lahf
xchg
jg
and
je
aam
data16
fdiv
jmp
rcl
xor
in
pusha
aam
push
in
call
and
mov
push
push
je
icebp
outs
dec
test
mov
sti
js
push
mov
push
fiadd
pop
sub
add
pop
inc
sub
stos
out
or
test
xlat
push
ret
sub
leave
(bad)
lahf
jmp
sti
stos
fwait
pop
pop
xlat
enter
adc
stos
mov
dec
(bad)
jno
mov
dec
dec
and
and
test
inc
sbb
xchg
mov
ja
or
sbb
mov
test
mov
pop
fsubr
sbb
jmp
fwait
scas
mov
aam
sub
out
mov
mul
into
pusha
jecxz
or
push
outs
pop
arpl
fwait
cmp
fiadd
mov
fsub
cmps
and
ins
ret
ret
in
dec
mov
leave
xchg
mov
jno
mov
mov
sbb
sti
mov
das
pushf
gs
(bad)
mov
and
mov
dec
xchg
and
pop
cdq
add
daa
sahf
arpl
mov
(bad)
out
into
jns
push
pusha
jge
popf
add
mov
pop
pop
inc
mul
daa
mov
ss
push
or
outs
in
and
inc
imul
pop
push
rcl
hlt
sub
or
fcomp
js
add
jp
outs
sar
add
popf
and
sub
cmps
shr
in
pop
(bad)
ds
or
or
pop
push
jnp
pop
cmp
mov
xchg
fstp
mov
xor
movs
jmp
into
pop
std
jl
imul
mul
mov
repnz
in
sbb
das
mov
outs
imul
ins
push
clc
pushf
sub
stc
sahf
and
dec
and
into
xchg
mov
and
cmp
sti
pop
pop
or
ins
(bad)
xlat
mov
inc
ss
add
out
add
jp
fs
int
mov
inc
rcr
adc
and
cdq
inc
cmps
sti
cdq
push
lea
and
xchg
mov
add
adc
(bad)
ficom
imul
retf
fwait
sti
mov
sar
rol
and
repz
inc
lahf
lods
cmp
int
sti
jno
dec
daa
adc
(bad)
iret
outs
or
xor
sub
es
cs
mov
(bad)
xor
test
adc
xor
cs
mov
pop
test
mov
fwait
enter
push
push
push
jmp
shl
mov
cld
nop
lahf
call
mov
sbb
xchg
xor
ins
scas
(bad)
xchg
ret
xchg
out
mov
push
jne
pusha
adc
pop
enter
ds
jnp
cmp
call
mov
pop
fisub
out
sahf
sbb
push
sbb
mov
out
arpl
sbb
mov
fld
mov
xchg
call
mov
mov
out
pop
imul
dec
jge
xchg
out
mov
xlat
imul
movs
mov
push
das
inc
jno
jmp
in
cmp
inc
xor
pusha
int3
clc
aad
stos
sar
inc
push
mov
jo
out
inc
popf
mov
jbe
sbb
mov
mov
lahf
xchg
scas
rcr
and
mov
mov
xor
push
inc
mov
outs
push
(bad)
xor
cmp
repz
mov
mov
lahf
push
cmp
xor
in
dec
and
loopne
lock
cmps
jno
cmps
mov
jnp
dec
mov
shl
mov
add
mov
ret
or
pop
ds
xor
lods
inc
mov
xchg
xchg
and
gs
add
nop
lods
lea
jnp
cwde
js
lds
inc
mov
ins
movs
adc
or
mov
out
(bad)
in
stos
test
adc
cwde
mov
xor
cli
movs
and
xchg
lods
push
adc
adc
mov
inc
std
push
mov
and
mov
push
push
xor
ret
add
jno
push
sub
or
and
(bad)
lock
sub
mov
mov
sbb
fld
cld
cmp
add
inc
lods
sub
mov
mov
push
inc
imul
or
daa
(bad)
mov
mov
mov
imul
inc
nop
movs
push
push
inc
push
(bad)
push
sbb
pop
pop
and
jne
inc
sti
enter
cmp
add
jg
cs
pusha
mov
dec
adc
and
mov
daa
add
mov
mov
pop
retf
arpl
mov
jecxz
mov
sub
ror
cmp
ret
hlt
mov
fbstp
leave
aad
xchg
shl
ja
sub
test
add
shl
mov
(bad)
shl
cli
lock
aad
xchg
adc
aam
pusha
inc
or
bound
mov
cli
mov
push
in
lahf
jmp
cmp
test
inc
nop
pop
pushf
imul
fdivr
sub
movs
push
adc
(bad)
xrelease
int
push
sbb
rcl
cmps
pop
test
dec
out
hlt
add
sbb
mov
shr
repz
jge
shl
jmp
add
xor
fdivp
add
push
movs
xchg
mov
pushf
and
loop
pop
ds
mov
adc
cs
out
sbb
addr16
ins
pushf
(bad)
addr16
(bad)
call
in
leave
out
das
movs
not
jmp
int3
push
sub
sub
sub
test
fcomip
adc
cmp
and
fcomp
or
or
push
out
xchg
add
push
inc
jecxz
stos
jp
aam
iret
push
inc
cmp
push
pop
cwde
pushf
jbe
add
mov
sub
mov
jmp
int
cld
inc
pop
xor
and
fmul
adc
inc
fdivr
mov
or
popf
out
hlt
mov
dec
xchg
jmp
test
and
inc
xor
test
ins
enter
add
pusha
aam
pop
dec
popf
ror
xor
push
dec
stc
xchg
inc
push
fucom
mov
mov
xlat
and
mov
in
sbb
ficom
icebp
fcmovnbe
fisttp
daa
call
dec
adc
test
test
test
push
fs
push
lods
xchg
cmp
adc
pop
shl
std
xchg
xchg
add
mov
test
adc
out
add
ja
aas
lds
call
and
hlt
sar
push
int
or
mov
sub
jl
mov
shr
push
xchg
leave
adc
iret
outs
repnz
xor
add
clc
mov
inc
xchg
xor
ret
imul
clc
jns
(bad)
les
xchg
jae
pushf
stc
loop
mov
ret
retf
clc
ficomp
sbb
das
lock
dec
dec
int3
jg
dec
mov
call
jl
mov
jle
ret
pop
int3
add
inc
mov
mov
push
(bad)
int3
xlat
fucomi
cmc
mov
cwde
xchg
cmp
es
xor
cmp
cwde
mov
je
mov
push
xchg
loopne
and
imul
xchg
cmp
popf
cmps
sbb
push
fsub
(bad)
call
and
dec
jge
mov
iret
pop
imul
push
les
push
mov
iret
jle
(bad)
repz
cmp
push
mov
push
shl
cwde
fist
clc
pop
cli
aam
movs
or
mov
(bad)
retf
mov
loop
shl
in
sub
cli
(bad)
xchg
retf
add
retf
icebp
sub
ror
fisttp
mov
mov
xor
push
sbb
bound
retf
add
mov
or
(bad)
into
xor
add
loope
xor
sbb
icebp
psrad
ret
jbe
sbb
mov
push
div
sbb
push
or
sub
xlat
scas
in
add
lods
sbb
test
push
jmp
jb
sub
pop
aaa
cmp
jecxz
mov
pop
xchg
cs
int
sbb
xor
cmps
int3
xor
or
sar
scas
fisttp
aas
jmp
test
repz
dec
adc
retf
pop
ror
cdq
adc
out
adc
sahf
and
mov
call
sub
dec
leave
sbb
sti
in
mov
int3
movs
inc
outs
idiv
bound
aam
aas
mov
push
mov
or
js
mov
xlat
dec
outs
and
mov
adc
mov
jo
jae
lock
mov
jbe
sti
dec
and
les
add
adc
std
pop
jle
adc
mov
daa
mov
data16
imul
into
loopne
jecxz
jnp
push
gs
sub
std
dec
movs
ret
jo
pop
adc
(bad)
(bad)
imul
jmp
xor
and
sbb
mov
pop
xchg
push
popa
push
(bad)
or
dec
sbb
pop
xor
(bad)
or
push
cli
nop
dec
imul
leave
sub
mov
(bad)
stos
call
and
or
mov
fisttp
aad
cmovno
lods
xor
or
cmp
jg
mov
mov
push
scas
test
cmp
jbe
mov
pushf
(bad)
push
jo
mov
icebp
in
inc
pop
inc
ins
mov
mov
add
push
or
cmc
jb
push
rcl
mov
fisubr
mov
push
sub
push
(bad)
sub
js
aam
dec
cld
jmp
adc
push
je
cli
push
aad
imul
sar
mov
cmp
jge
loopne
(bad)
sti
es
or
aad
push
sub
pusha
dec
xor
(bad)
sub
mov
fdiv
xchg
enter
cmp
cld
xchg
call
or
ficom
cdq
inc
xchg
mov
xor
je
mov
and
mov
test
jle
pop
idiv
or
imul
jbe
loope
cmp
test
aas
out
sbb
addr16
xchg
fucomi
add
addr16
mov
xchg
adc
inc
mov
inc
std
xchg
push
and
xchg
push
gs
rcr
ret
mov
and
sbb
adc
jmp
inc
les
movs
data16
fcomp
adc
test
and
stos
popa
push
in
cmp
js
arpl
inc
dec
and
(bad)
pop
or
movs
xchg
int3
xor
cwde
das
loopne
adc
sbb
sub
dec
nop
mov
adc
outs
jns
ror
aas
xor
add
outs
mov
scas
leave
sar
sbb
or
cmps
dec
ins
xchg
dec
or
xchg
inc
lods
mov
cmps
or
in
fild
lock
or
sbb
(bad)
sbb
es
and
lods
xchg
ror
loop
or
clc
rol
adc
cwde
push
(bad)
sub
jnp
clc
test
add
inc
mov
and
mov
retf
xlat
out
inc
gs
jns
in
dec
dec
mov
aad
jg
and
enter
dec
fistp
aaa
add
retfw
mov
jle
out
pop
cs
(bad)
rep
repnz
sbb
dec
push
sub
inc
pop
stos
test
rcl
xor
(bad)
cmp
xor
call
mov
add
jbe
sub
mov
repnz
imul
cmp
xor
data16
ins
loop
stc
xchg
cmp
adc
movs
or
mov
xchg
adc
test
mov
lea
jo
jb
ins
mov
and
jae
test
jle
push
ja
stos
jne
jno
inc
inc
and
inc
aad
pop
pop
adc
mov
cmc
mov
stos
retf
or
sbb
or
sbb
retf
jge
push
mul
popf
cmp
adc
int3
dec
mov
jns
retf
sbb
push
aam
out
mov
mov
in
push
int3
push
popa
pop
std
movs
pusha
or
xlat
add
repz
loope
push
xchg
dec
mov
mov
rcr
mov
mov
push
mov
lds
rcr
ret
(bad)
jae
dec
cmp
ss
pusha
sbb
inc
mov
jb
inc
outs
mov
loop
xor
(bad)
xchg
jg
aas
push
repz
xchg
popa
or
mov
outs
(bad)
into
adc
sbb
movs
outs
push
add
mov
push
and
mov
call
out
cli
in
ins
test
cld
test
jno
sub
lods
outs
stos
add
mov
and
rcl
jae
fist
test
test
cdq
mov
pop
jo
push
sti
mov
xor
lahf
in
fucompp
jae
jl
mov
mov
inc
push
test
cs
sbb
nop
dec
cmc
out
nop
or
ja
pop
cmp
mov
lahf
inc
push
xor
jl
xchg
inc
into
add
fidivr
mov
push
aaa
jp
mov
jno
push
scas
out
je
mov
rcr
jbe
mov
(bad)
pop
pop
xchg
cmp
sbb
lods
sbb
adc
stos
cmp
add
push
sti
dec
nop
ret
mov
leave
and
xor
pop
out
sar
inc
int3
call
stc
and
inc
jmp
xchg
push
jb
ds
popf
mov
push
mov
jmp
xor
mov
jmp
lea
cdq
push
leave
jmp
jle
pop
mov
add
data16
(bad)
jnp
mov
mov
mov
add
pusha
jle
jb
movs
cmc
jne
ret
pusha
pop
inc
mov
xor
and
push
sub
in
call
sbb
mov
ja
call
outs
pop
push
push
pop
not
shr
push
jnp
arpl
sbb
test
dec
aam
test
and
aaa
mov
rcl
pop
cwde
sub
test
pop
xchg
jl
mov
mov
push
stos
ins
xor
(bad)
xchg
aas
lea
jp
mov
cdq
adc
jbe
or
cmp
sbb
jnp
shl
loopne
ret
test
mov
push
bnd
scas
popf
push
mov
ror
call
jns
mov
cmp
loop
push
nop
fisub
in
test
push
jle
bound
jp
mov
xor
js
or
ss
sahf
test
mov
retf
pop
xchg
gs
fyl2x
fs
mov
add
cmp
lds
add
mov
jle
ins
aam
push
aas
adc
(bad)
mov
scas
and
inc
xchg
call
(bad)
xor
cmp
leave
or
jns
into
dec
js
stc
mov
xchg
stos
cmp
dec
iret
jbe
jb
and
(bad)
inc
test
cmps
cmp
leave
add
add
inc
ds
aaa
les
inc
add
stc
push
lahf
jmp
out
mov
lds
sub
stos
jge
inc
adc
push
jg
xor
cwde
mov
mov
or
rol
inc
fxch
adc
fmulp
or
mov
shl
imul
xlat
or
xor
aas
and
adc
cld
jge
push
repz
sub
mov
outs
je
dec
aaa
xchg
pusha
xor
pop
jae
cli
jmp
mov
adc
dec
out
rol
jmp
inc
adc
ja
push
(bad)
out
add
add
jp
bound
and
call
xchg
cmp
imul
lds
dec
pop
fbld
add
fmul
pop
test
fidiv
fwait
jns
aam
adc
in
inc
push
dec
dec
ret
or
add
loop
xor
(bad)
repz
in
cmc
in
inc
scas
jl
xchg
xlat
pop
pop
or
pop
fild
les
test
inc
jnp
dec
ins
in
pushf
(bad)
in
xor
and
or
movs
sub
inc
lds
mov
mov
xor
xchg
imul
pop
inc
push
xchg
mov
sub
xor
cmc
aaa
je
or
rep
push
inc
sub
cmp
cmp
mov
ficomp
ror
stc
fs
dec
pop
int3
movs
jbe
mov
dec
inc
sbb
sar
in
xchg
rol
lods
cli
arpl
dec
xor
xchg
fstp
or
mov
mov
adc
in
cmp
jae
pushf
fmulp
mov
jmp
or
imul
arpl
xor
shl
movs
fisttp
ins
lds
sbb
je
pop
mov
pusha
xor
xchg
xor
call
adc
in
aad
inc
dec
fcomip
jb
mov
add
aam
scas
test
adc
pop
fisubr
push
xor
pop
sbb
lods
dec
arpl
add
mov
mov
imul
les
arpl
adc
jle
jno
jmp
push
dec
ds
pop
or
lods
push
mov
cmp
fild
(bad)
jno
and
mov
add
cmp
lods
inc
dec
jns
pop
mov
or
xor
cmp
pop
sahf
cmp
mov
fimul
out
neg
cwde
xor
dec
aaa
sar
pop
pusha
pusha
or
pop
pop
(bad)
mul
icebp
dec
mov
or
sub
xchg
aam
mov
add
and
stos
pop
(bad)
jb
cmp
mov
and
out
rcr
push
fst
push
imul
and
mov
lea
sub
enter
dec
mov
inc
mov
sbb
jp
and
js
dec
dec
xchg
cmp
lock
ss
sub
out
or
scas
ret
sar
stc
fcmovnb
test
sahf
mov
dec
test
xchg
push
xor
jo
inc
xchg
es
lods
push
sti
int3
sub
aad
std
cmps
test
add
inc
leave
cli
loope
jb
loop
in
pop
and
sbb
mov
push
dec
fimul
(bad)
repnz
jne
push
sbb
imul
pusha
add
push
mov
adc
test
push
(bad)
pop
pop
sub
jo
xor
xor
inc
popf
imul
pop
int
lock
enter
sub
call
lock
int
aas
sub
shl
daa
or
scas
movs
outs
jbe
out
retf
enter
adc
pop
adc
iret
inc
jne
jge
nop
icebp
adc
jno
push
shr
movs
inc
adc
cwde
bound
dec
sbb
and
neg
mov
push
stos
test
and
popa
add
or
dec
sub
call
stos
cwde
xor
add
arpl
(bad)
retf
hlt
loop
pop
pop
add
in
pop
and
neg
cmp
test
retf
in
rcl
sub
rcl
sbb
scas
repz
xor
mov
or
push
sbb
cld
dec
jl
push
retf
in
pop
leave
les
mov
test
mov
stos
xchg
fiadd
mov
xlat
in
scas
mov
fwait
and
sbb
mov
pop
pusha
add
out
call
call
(bad)
cmp
test
loop
call
push
lahf
mov
stc
movs
mov
mov
repz
cmp
shr
out
jl
push
push
movs
inc
add
retf
dec
rcl
jne
xchg
mov
sbb
sti
fidiv
fidiv
add
add
pop
dec
cdq
(bad)
scas
lods
sub
mov
and
dec
inc
in
cmp
inc
ficomp
xchg
addr16
in
enter
mov
ins
data16
and
adc
in
pusha
inc
cmp
push
in
shl
stc
aaa
inc
cmp
sti
fld
sub
test
pop
inc
mul
rol
cdq
xlat
sbb
dec
mov
sar
jno
xchg
adc
inc
cmps
xchg
(bad)
jmp
out
mov
(bad)
xchg
cmp
leave
mov
jle
les
sub
mov
jp
sbb
pop
add
jmp
loop
(bad)
push
or
jnp
les
loope
stos
xor
pop
stos
test
adc
popf
cmp
pop
ins
xchg
ret
rcr
xor
lods
je
outs
hlt
js
movs
not
push
stos
js
div
cmp
outs
loop
mov
xchg
into
dec
retf
sub
fstp
mov
sub
sub
sbb
aad
clc
inc
aam
mov
xchg
fisttp
add
cmp
jnp
add
imul
(bad)
push
cs
dec
in
retf
adc
sbb
test
sbb
lods
scas
fwait
jne
dec
lock
stc
sbb
popa
inc
xlat
jo
jns
add
ins
push
pop
add
pop
lds
pop
icebp
or
xchg
jne
fsubr
sub
(bad)
mov
mov
inc
add
mov
pop
jb
dec
aam
aaa
loopne
lods
inc
mov
sar
xchg
sub
call
mov
add
aas
iret
(bad)
pop
sbb
call
adc
cmp
ds
xchg
xor
xchg
mov
hlt
ins
test
in
adc
cli
jg
into
push
adc
dec
aam
sahf
and
jl
dec
sbb
das
mov
push
inc
xor
movs
dec
mov
and
sub
add
(bad)
jmp
and
les
cmp
lahf
test
pop
in
or
sti
sahf
push
jno
sbb
mov
mov
push
pop
add
cwde
cs
je
xchg
aas
push
ret
nop
jl
fnsave
lods
es
sbb
pop
jae
mov
ret
jmp
or
xchg
test
mov
scas
aas
nop
push
push
dec
mov
hlt
adc
popf
pop
mov
dec
or
adc
xlat
cmps
rep
mov
ss
and
icebp
jb
lahf
sbb
mov
scas
call
(bad)
fild
add
mov
outs
adc
mov
jecxz
jbe
mov
jmp
and
sahf
daa
dec
iret
imul
mov
loop
inc
shl
mov
inc
cmps
push
dec
leave
sysenter
(bad)
out
sub
je
mov
jb
xchg
adc
cmp
mov
daa
cdq
vmovntps
out
ret
and
jg
ret
adc
push
pop
sbb
push
sar
mov
jmp
and
fild
in
inc
and
xchg
addr16
movs
aaa
in
sar
iret
leave
inc
inc
adc
cmp
cdq
push
out
lahf
mov
(bad)
jmp
jne
jecxz
ins
lods
dec
mov
es
out
dec
mov
ds
test
mov
dec
outs
jl
cmp
xor
les
push
jecxz
nop
and
lods
dec
sbb
xor
mov
movs
(bad)
adc
dec
ins
loopne
dec
dec
outs
sub
jmp
cdq
sbb
jb
or
add
ja
loopne
mov
jmp
ins
sub
sub
and
mov
mov
hlt
jb
cld
inc
out
fisttp
out
sub
aas
inc
or
test
jae
out
rcl
pop
mov
ins
pop
xchg
fnstenv
sbb
ds
in
fwait
inc
div
scas
xor
xor
das
sti
fdivr
iret
mov
fidiv
adc
cmps
bound
adc
stos
and
sub
in
adc
pop
test
retf
mov
push
jo
leave
dec
jbe
dec
pop
xor
adc
cmp
xchg
pop
xchg
dec
adc
loope
add
and
outs
inc
pop
mov
retf
in
push
jne
sbb
int
in
loop
push
std
push
jns
icebp
add
rcr
dec
sbb
sar
inc
das
xchg
or
les
repnz
xlat
sti
pop
xchg
jno
sahf
test
mov
clc
cmp
jnp
inc
rcr
(bad)
lods
push
mov
push
popf
arpl
(bad)
outs
inc
test
outs
(bad)
xchg
lea
in
mov
mov
icebp
dec
cli
out
rol
fdivr
es
es
pushf
pop
mov
jl
test
mov
clc
(bad)
mov
fdiv
mov
adc
mov
test
aam
sbb
setae
sub
fstp
push
push
retf
or
aaa
inc
fisub
jnp
call
imul
push
std
sub
outs
in
mov
adc
scas
push
sub
(bad)
jp
std
enter
mov
or
dec
mov
mov
nop
cli
test
mov
std
repnz
mov
fisttp
icebp
mov
out
add
sahf
sti
push
sbb
fdiv
xor
fisubr
int
test
fldcw
cli
fnstenv
jecxz
xor
mov
xchg
jmp
cmp
mov
lock
in
scas
cld
pop
div
sub
jnp
sub
es
mov
(bad)
rol
test
hlt
jno
dec
inc
bound
xchg
pop
adc
xor
fiadd
adc
mov
sar
hlt
scas
mov
shr
sar
arpl
stos
call
retf
sbb
jnp
xor
sub
and
in
sub
mov
ret
gs
test
mov
std
std
daa
mov
dec
cli
loopne
mov
push
shl
ret
(bad)
cmc
bound
add
dec
pop
sbb
mov
mov
pushf
inc
fisub
jecxz
(bad)
cmps
jmp
or
ins
sahf
and
sahf
out
(bad)
(bad)
fisttp
sbb
push
sub
jo
mov
cs
and
sahf
jno
mov
add
rcl
inc
adc
(bad)
retf
pop
sahf
or
sbb
call
out
fs
mov
inc
xor
(bad)
dec
mov
lahf
jno
int3
fwait
mov
mov
xchg
sti
mov
cmp
aad
pusha
dec
lods
adc
popa
add
or
xchg
jg
cmp
xor
ss
lods
rcr
pop
fbstp
int3
inc
pop
or
adc
jnp
push
daa
xor
stc
pop
jp
dec
inc
popa
fld
adc
and
dec
sbb
ret
out
jno
ret
xor
stc
inc
mov
mov
loopne
test
in
fistp
scas
lods
dec
sar
mov
cmp
fwait
aaa
pop
mov
jmp
push
int3
adc
repz
xchg
into
adc
pop
mov
mov
stos
mov
pop
pop
xchg
fwait
pop
fwait
inc
xchg
jno
mov
clc
imul
mov
xchg
cmp
push
call
rcr
stos
xor
cmp
outs
fistp
imul
fsub
dec
push
push
(bad)
sbb
out
neg
and
fs
aam
imul
(bad)
shl
sbb
inc
xor
mov
mov
pop
int3
aas
jmp
popa
jns
scas
jnp
mov
test
bound
dec
test
mov
cld
scas
ja
repz
and
ja
xchg
jmp
retf
enter
(bad)
in
jb
xlat
cmc
mov
inc
repnz
cmc
fucomi
scas
cmc
mov
xor
add
sub
pushf
pop
enter
cmp
cmps
popw
mov
cmps
cmps
xor
inc
adc
leave
inc
cwde
pop
jne
xchg
mov
mov
adc
(bad)
cmp
or
xor
xchg
adc
add
jmp
pop
sbb
push
sbb
push
fsub
xor
fnsave
rcl
addr16
xchg
cmp
xchg
imul
in
inc
mov
dec
sub
dec
sbb
rol
pop
jae
iret
xor
mov
cli
inc
cmp
jb
into
mov
jl
and
arpl
sbb
ins
sar
pop
repnz
outs
daa
dec
or
lock
jl
mov
or
out
sub
fiadd
inc
xlat
ret
js
dec
jl
das
push
cmc
and
or
mov
je
aas
ss
ret
mov
or
jl
lahf
sbb
mov
add
test
stos
or
jns
pop
imul
call
lods
or
in
(bad)
sub
fisub
mov
cmp
call
loop
lods
adc
and
sub
aad
mov
mov
ss
sbb
dec
lahf
sbb
xchg
or
leave
popa
sub
aas
sub
adc
aam
pop
cld
fdivr
cmps
jns
mov
js
shr
in
sti
(bad)
and
cmp
repz
jecxz
add
xchg
addr16
fbld
in
and
mov
mov
movs
cli
xchg
dec
adc
mov
mov
dec
dec
jne
repz
fisub
mov
movs
xor
cmp
in
mov
sbb
add
fnstenv
ror
repz
pop
add
movs
in
or
xor
inc
loop
push
inc
or
inc
dec
fdivp
cmp
add
call
ins
outs
push
push
lods
das
fisttp
xchg
adc
sbb
outs
xor
xchg
imul
sbb
popf
push
mov
jno
lds
lahf
push
and
mov
push
dec
add
or
stc
add
pushf
neg
nop
xlat
mov
outs
sub
or
repz
sbb
int
sub
mov
mov
xor
movs
scas
rcr
add
outs
test
mov
neg
cmp
sbb
sbb
dec
ja
sti
gs
int3
ret
leave
pop
inc
clc
push
add
(bad)
enter
jge
test
and
cmp
stos
aad
neg
xchg
stos
pushf
jl
jne
push
and
cs
pop
xchg
jno
sbb
inc
or
cmp
sub
jmp
cmp
adc
sahf
scas
cwde
add
icebp
mov
in
mov
iret
cmp
fisubr
call
rcl
not
cmc
test
jno
outs
push
adc
xchg
add
ss
mov
pop
repz
ror
mov
sahf
imul
icebp
arpl
jb
fstp
pusha
addr16
cdq
retf
mov
shl
xchg
(bad)
adc
ja
fdivr
mov
dec
fsub
inc
pop
push
cmp
mov
jae
cmc
cwde
or
dec
add
adc
sub
pushf
(bad)
or
loope
daa
jbe
rcr
aam
addr16
jns
test
push
ss
scas
test
push
push
fdiv
out
cld
pop
jnp
aad
inc
mov
popf
repz
jmp
outs
pop
jo
push
mov
enter
push
ror
inc
xchg
adc
js
stc
cdq
push
sbb
cmp
mov
jg
dec
inc
inc
inc
add
dec
jp
fnstcw
idiv
mov
ret
lods
fs
push
fadd
mov
rcl
pop
dec
sub
and
add
test
inc
or
aaa
fild
jle
icebp
dec
fmul
jge
sbb
sbb
cmp
(bad)
dec
add
cs
cli
ror
lods
ins
add
inc
ficomp
adc
ins
adc
mov
cdq
test
sub
cwde
jp
xchg
mov
arpl
fnsave
sahf
pop
pop
xor
pop
pop
sub
mov
mov
in
div
out
adc
aaa
mov
stos
or
sbb
cld
push
jnp
and
lahf
cmps
mov
inc
pop
loop
xchg
xchg
push
std
loop
adc
rcr
inc
test
push
data16
jl
mov
(bad)
in
bound
hlt
adc
sub
call
loope
xchg
sub
call
inc
sub
xchg
test
int
push
fisubr
loope
jl
push
jg
mov
ss
dec
sbb
sub
dec
mov
add
sbb
push
mov
sub
mov
inc
sub
xor
imul
loop
in
retf
icebp
add
mov
xor
fcmovu
or
mov
stos
dec
inc
pop
jp
cs
mov
sub
pop
stos
fcomp
aad
repnz
add
jmp
sub
mov
xchg
data16
cmp
pop
pop
outs
jns
cmp
sbb
retf
loopne
dec
xchg
fiadd
cmc
pop
dec
inc
push
fisubr
jg
push
iret
in
mov
int
shl
cmps
xor
inc
dec
jb
cmp
call
xor
(bad)
fnstcw
loope
inc
cmp
fwait
push
pop
dec
mov
mov
sbb
xchg
pop
push
sub
and
xchg
mov
dec
adc
(bad)
out
add
jbe
ds
cmp
push
out
xchg
xor
pop
mov
ins
je
mov
jge
and
adc
cmps
stc
jne
lahf
in
inc
or
mov
pop
sbb
xor
xchg
test
cli
enter
mov
jno
inc
das
aaa
or
add
leave
sub
pop
ja
dec
outs
pop
jnp
push
push
dec
nop
nop
sub
cmp
mov
fstp
sub
ins
and
and
and
clc
retf
aad
fistp
sub
push
mov
mov
adc
cdq
fcomi
mov
cmps
inc
push
stc
clc
push
dec
push
ret
lock
jg
das
cmp
cwde
ror
jmp
fdiv
add
jns
sub
dec
rcl
addr16
mov
xchg
push
and
mov
push
sbb
and
imul
iret
sbb
adc
dec
jg
stc
out
push
retf
xchg
mov
adc
imul
ret
cmp
mov
push
loopne
stos
shl
dec
and
test
adc
out
sti
(bad)
pushf
push
cmc
fidiv
xchg
ret
lahf
lds
mov
mov
sbb
xchg
sub
push
dec
movs
fist
xor
idiv
cs
add
cmp
aam
dec
daa
mov
mov
push
jl
add
dec
jg
jge
outs
fsubp
lahf
pusha
pusha
loope
adc
mov
mov
sar
jno
daa
aad
jbe
cld
dec
pop
adc
add
mov
push
pop
das
pop
mov
add
sub
adc
cwde
es
pop
data16
add
in
push
jnp
es
sub
movs
xchg
mov
test
mov
sahf
adc
nop
sub
mov
mov
aas
lods
imul
repnz
shr
popa
(bad)
out
in
lods
jo
jae
sbb
jmp
push
adc
cs
(bad)
cs
mov
jae
test
mov
xor
ds
cmp
adc
add
add
mov
jno
push
retf
fnstcw
push
mov
scas
xchg
mov
xlat
out
das
jno
iret
add
add
pop
inc
inc
out
test
jmp
sub
sti
leave
fcomp
fdivr
add
sbb
mov
jo
xchg
pop
pop
sar
std
dec
mov
jnp
xor
cs
movs
fbld
or
xchg
out
(bad)
lock
sbb
and
sub
imul
push
das
mov
in
xor
repz
aad
clc
outs
sti
xchg
fbstp
loopne
jbe
pop
and
test
scas
(bad)
or
sbb
push
mov
jmp
sbb
pop
sub
mov
out
ret
jl
push
dec
sbb
stos
xor
and
pop
adc
xchg
(bad)
lods
test
jnp
pop
jbe
sub
sub
jno
repz
push
clc
ret
ins
cmps
gs
fucom
jg
cmps
test
jo
mov
mov
mov
ins
cmp
pop
sbb
hlt
div
mov
add
loope
xchg
fwait
mov
pop
clc
fstp
retf
pop
jb
and
xchg
jbe
mov
retf
sbb
dec
add
cwde
cmp
shr
jecxz
fwait
(bad)
mov
xchg
fist
stc
or
ja
push
(bad)
mov
mov
cmps
sub
mov
addr16
jne
xor
lds
lahf
hlt
lahf
repz
jno
jae
(bad)
dec
mov
adc
xor
ins
popa
add
and
or
ja
int
xchg
pop
imul
pop
adc
test
icebp
cmc
scas
sar
xchg
inc
mov
push
out
pop
mov
mov
mov
(bad)
clc
adc
popa
add
aaa
sbb
jmp
xor
out
cmp
retf
sub
mov
sub
add
mul
es
or
scas
add
(bad)
stos
xlat
ret
sbb
push
stc
in
pop
push
test
pop
and
ss
ja
test
adc
movs
xchg
loop
push
sbb
xor
cli
cmps
call
fcom
fsubr
add
cmp
xchg
ins
sub
sub
cdq
sbb
imul
and
push
and
xor
and
fstp
mov
mov
cwde
dec
xor
addr16
push
aam
ret
mov
cmp
lahf
lods
test
test
les
dec
lock
nop
add
cmp
inc
pop
adc
sub
out
push
push
push
add
gs
mov
mov
jp
push
nop
sbb
das
cmps
mov
stc
push
and
add
inc
push
add
push
movs
fsub
xor
shl
xchg
xor
add
xchg
and
add
dec
adc
and
repnz
add
sbb
sbb
sub
sbb
clc
add
jg
dec
movs
(bad)
leave
sub
test
(bad)
stos
stc
and
mov
dec
jge
mov
cmp
lock
mov
jl
inc
jns
mov
cli
clc
xor
pop
js
jbe
dec
ror
mov
mov
aaa
push
xchg
and
imul
in
sub
out
in
loopne
pop
aam
xor
mov
outs
push
movs
(bad)
out
fucomi
dec
sbb
cmps
jo
icebp
and
cwde
push
or
ins
fidiv
nop
jecxz
inc
or
scas
pop
cmps
mov
inc
pop
xor
out
mul
sub
jbe
mov
lock
repnz
inc
sbb
clc
mov
test
adc
cli
shl
pop
shl
cmc
and
mov
int
retf
add
leave
sahf
sub
std
(bad)
jmp
cli
jecxz
xchg
mov
repnz
mov
les
mov
xlat
sub
pop
sbb
xchg
or
jb
into
xor
add
call
pop
xchg
popa
and
sub
jno
sbb
add
add
push
sets
div
cmp
fisttp
imul
ror
mov
mov
lock
stos
mov
call
push
jo
lock
sti
pop
rol
jp
adc
xor
addr16
cmp
jo
call
inc
into
cmp
ja
pop
in
jne
xchg
arpl
in
stc
je
dec
lods
(bad)
int
add
push
sub
(bad)
jnp
sub
mov
xchg
dec
mov
in
inc
push
jno
adc
fstp
(bad)
or
push
or
inc
xor
cli
xchg
sub
shl
push
in
xor
mov
shl
sub
mov
cmc
fmul
test
dec
call
aad
fwait
xchg
ret
enter
ficomp
ds
int3
fbld
sahf
shl
mov
aam
xor
xchg
mov
popf
repz
lock
ss
or
daa
cmps
push
jnp
sub
inc
inc
icebp
repnz
scas
push
pop
mov
or
mov
add
inc
setnp
sbb
loope
sahf
add
daa
mov
repz
pusha
mov
(bad)
clc
xchg
and
mov
lds
xchg
dec
cmp
push
lds
pop
mov
sub
lea
std
in
test
cmp
es
add
loop
add
mov
jp
std
push
mov
clc
movs
fisub
sub
jecxz
aam
fiadd
loopne
(bad)
imul
xlat
(bad)
mov
and
jne
loope
sahf
pop
imul
xor
dec
fiadd
pushf
inc
adc
jno
adc
(bad)
or
pop
mov
sbb
je
rcl
sbb
cmp
adc
ins
cli
xchg
mov
push
pop
push
xor
stos
jbe
in
mov
fiadd
mov
sub
xlat
ret
call
and
fs
xchg
dec
fild
mov
std
mov
pop
mov
stos
leave
mov
jle
hlt
dec
js
xor
test
add
stos
xchg
inc
cmps
fdiv
clc
scas
iret
sahf
sbb
ins
fild
inc
adc
pop
or
gs
pop
or
movs
mov
in
fcmovu
cmc
mov
sbb
std
fisttp
mov
mov
sub
mov
(bad)
jg
into
mov
jmp
dec
jnp
ret
jne
das
sbb
das
xchg
cmp
cmp
add
rol
arpl
fptan
xchg
(bad)
test
dec
mov
jge
mov
and
mov
cmp
jle
adc
(bad)
sti
in
mov
shl
leave
jae
icebp
pop
push
push
lds
jae
xor
pop
(bad)
mov
jo
jl
pop
mov
or
(bad)
adc
popf
adc
mov
or
test
mov
mov
jne
inc
fidivr
lods
cmp
retf
les
sbb
jg
push
jbe
pop
mov
popf
push
lods
jmp
and
js
xchg
xchg
sub
sbb
mov
(bad)
or
fisub
sub
aad
or
outs
mov
and
bound
scas
pmaddwd
mov
arpl
dec
sti
pop
and
push
cld
aad
mov
mov
pop
movs
lock
xor
or
mov
mov
(bad)
repz
nop
sub
push
sti
xor
push
pop
data16
inc
lea
cmc
sub
xor
rcr
dec
or
(bad)
mov
inc
adc
mov
add
add
sbb
mov
xchg
sub
mov
push
cmp
int3
cwde
mov
int
jg
mov
out
in
jae
jg
cmp
jmp
jb
cs
pop
loope
pusha
call
pop
mov
pop
cmp
jg
sub
and
xor
adc
std
sub
cmp
out
es
ror
mov
dec
iret
mov
enter
push
cmp
mov
aaa
int
inc
scas
in
stos
test
test
repz
cli
jmp
fadd
sub
in
call
rol
int
add
adc
xchg
inc
mov
adc
bnd
imul
rcr
adc
or
add
fwait
xchg
sub
out
xchg
mov
std
inc
adc
int3
mov
adc
cdq
push
jmp
mov
jo
jno
jge
movs
add
push
pop
xor
lahf
jae
sub
ds
adc
jl
out
jmp
sbb
(bad)
movs
xchg
idiv
ret
adc
add
xor
xor
adc
xor
push
mov
sti
xchg
pop
call
jp
lods
popf
fadd
inc
push
dec
lods
mov
cwde
jge
shr
or
cmp
sbb
int3
jns
test
inc
fs
sub
inc
(bad)
out
lea
(bad)
mov
push
mov
jmp
push
jecxz
por
(bad)
test
xor
movsx
jmp
push
and
outs
jle
out
into
call
aaa
jnp
push
jge
imul
std
sub
inc
cmp
cmp
mov
pushf
cmc
stos
mov
call
nop
jno
gs
aaa
out
in
adc
dec
in
cmp
jmp
push
pop
out
das
das
xor
repz
mov
dec
mov
and
repz
cmp
fistp
or
sub
lods
xor
data16
adc
icebp
jns
loop
test
adc
(bad)
mov
pop
int
icebp
mov
push
mov
stc
aaa
xor
pop
int3
enter
pop
mov
dec
neg
std
pop
lds
adc
dec
xor
leave
xor
xchg
daa
and
sbb
sti
dec
mov
dec
ja
cmp
data16
js
mov
aam
sub
movs
shr
aad
push
mov
or
out
push
lods
shr
iret
fnstenv
pop
push
retf
cmp
xor
cmp
into
cwde
lock
leave
mov
stc
dec
aaa
es
ds
pop
and
push
ret
jnp
lods
pop
cld
xchg
cli
cmps
dec
stos
sahf
sbb
rol
shl
repz
call
out
xor
test
sub
adc
into
aad
retf
imul
sub
je
ret
sbb
cmps
push
pop
(bad)
pop
pop
clc
arpl
sub
test
mov
test
pop
stos
leave
std
out
inc
pop
scas
ss
outs
push
scas
inc
xor
xlat
jns
mov
pop
sub
pop
fprem1
jno
add
(bad)
jl
dec
repnz
push
jmp
mov
call
cs
fsub
imul
mov
rcr
shl
add
jge
(bad)
push
inc
or
jne
icebp
in
fs
mov
pop
inc
lea
cmp
or
or
push
int
push
sbb
stos
add
sahf
and
xor
lods
sbb
pop
xor
push
pop
and
dec
push
cs
fxch
mov
ja
inc
xchg
aaa
popf
sahf
fidiv
sbb
push
outs
xchg
call
daa
push
mov
imul
xchg
pop
in
cmps
lock
jne
sbb
ficomp
lods
daa
sbb
mov
add
mov
sbb
sub
xlat
xor
outs
jae
loopne
test
in
stos
inc
fcomp
icebp
inc
jmp
fs
sub
xor
neg
lea
ins
and
pop
jmp
stos
sbb
jno
mov
push
mov
lods
cld
ret
jge
pop
push
xchg
mov
mov
cmp
xchg
cmc
push
push
call
dec
and
xor
ins
dec
add
fwait
adc
xchg
push
push
cmp
repz
loop
jnp
cmp
jno
popa
sahf
or
fdiv
(bad)
dec
inc
popa
mov
mov
movs
and
and
test
or
adc
dec
cmp
xchg
push
daa
scas
xlat
aad
sub
mov
xchg
clc
mov
dec
push
(bad)
sub
icebp
stos
lock
and
call
pushf
inc
mov
shr
out
pushf
cwde
dec
imul
repnz
mov
out
in
adc
push
and
mov
das
inc
(bad)
imul
mov
clc
cmps
inc
dec
dec
pop
sar
xor
scas
mov
add
mov
xchg
iret
sub
mov
stc
out
sar
jo
push
mov
sub
lahf
fist
loopne
es
nop
outs
(bad)
dec
cmp
ret
cmp
mov
jo
enter
inc
add
and
push
(bad)
mov
add
and
mov
add
jmp
movs
pop
add
jnp
arpl
xor
jno
icebp
push
outs
mov
jge
or
jo
jg
stc
jecxz
xor
xor
pop
xchg
fidiv
lea
je
inc
mov
and
inc
aad
cmps
and
jae
rol
retf
pop
adc
mov
push
mov
mov
push
and
cmc
sub
test
xchg
xor
pop
xor
leave
retf
outs
mov
mov
test
sbb
dec
imul
dec
xchg
(bad)
into
fwait
mov
mov
xor
push
xor
std
in
(bad)
jl
in
outs
int3
test
jg
mov
movs
pop
stos
dec
or
sbb
mov
adc
mov
ins
(bad)
pop
not
icebp
sti
mov
pop
scas
mov
test
xor
push
(bad)
pop
repz
mov
scas
jecxz
repz
popa
in
dec
mov
xor
sub
mov
push
sbb
mov
fsubr
fidivr
mov
std
(bad)
ins
leave
cmc
xchg
push
fild
bound
sbb
clc
mov
enter
xchg
dec
dec
neg
add
mov
pushf
inc
cmp
je
cmps
ret
or
ds
addr16
inc
hlt
cwde
fst
xor
div
jne
cdq
push
pusha
cld
fwait
jo
add
xchg
jb
mov
call
in
jno
xor
xchg
fs
dec
jae
out
inc
ds
dec
cmp
(bad)
jecxz
cli
add
mov
stc
mov
inc
loope
mov
xchg
sub
and
sub
jne
xchg
xor
cmps
adc
mov
(bad)
jmp
aad
push
cmps
addr16
add
(bad)
jmp
inc
add
inc
xchg
fistp
sbb
jbe
pop
std
call
lock
or
fstp
data16
mov
push
in
adc
sub
adc
(bad)
pop
pop
sub
push
mov
shr
jle
jmp
or
movs
popa
imul
mov
imul
iret
pop
cmp
ja
inc
mov
fstp
mov
sbb
jge
cmps
jmp
lea
psubusb
stos
pop
(bad)
aad
idiv
adc
ret
shl
imul
cli
fld
cld
cmc
into
es
and
es
adc
mov
dec
add
mov
cmp
cmps
adc
lock
and
inc
and
push
mov
dec
dec
(bad)
ret
scas
mov
ror
mov
neg
mov
jecxz
fistp
in
jnp
adc
mov
in
movs
cmp
xor
xchg
pusha
aaa
test
aad
jmp
ins
aad
jecxz
addr16
(bad)
pop
xor
jne
jmp
adc
dec
rcl
lods
ins
xor
aam
xor
or
jp
out
ins
aad
pop
aaa
(bad)
cmp
jae
sti
cld
sbb
push
fisttp
jmp
fucomip
push
call
push
mov
movs
cmps
sbb
and
mov
dec
add
test
sahf
sbb
xchg
cmps
adc
rol
pushf
lods
mov
mov
mov
mov
dec
outs
imul
or
pushf
push
lock
push
test
cmp
mov
jno
in
sbb
push
cmps
adc
cmp
dec
add
fist
jle
fiadd
inc
repz
addr16
pop
sbb
mov
test
or
loope
inc
cdq
xor
sub
sahf
adc
jle
or
ja
jecxz
xor
cmp
inc
xchg
push
inc
mov
jecxz
and
xchg
inc
sbb
add
push
pop
iret
sbb
ds
mov
xor
out
js
popa
jbe
pop
inc
xor
pusha
out
ds
cmp
imul
mov
cwde
cmc
cmp
add
movs
gs
(bad)
mov
dec
xchg
or
and
bound
pusha
movs
imul
xchg
dec
test
mov
bound
fadd
add
std
out
push
mov
out
dec
repnz
movs
fiadd
cmp
scas
movs
cmps
mov
aad
xchg
lea
or
test
cmps
mov
out
into
dec
dec
xchg
int3
mov
push
cmp
fisubr
nop
shr
test
aaa
aad
cmc
dec
popw
leave
stos
or
loope
in
test
out
jmp
les
dec
jnp
cmc
cmp
int3
je
repnz
inc
and
or
or
xor
retf
arpl
pop
(bad)
cmc
mov
cld
(bad)
leave
(bad)
push
cmc
inc
mov
add
dec
sub
push
ret
mov
loopne
hlt
push
add
sar
nop
pop
cmps
div
rcr
push
out
or
pop
dec
leave
cmc
mov
div
adc
xchg
pop
dec
idiv
stos
shl
int3
jg
jno
dec
push
push
(bad)
lea
in
fild
dec
and
push
sub
sbb
mov
loop
inc
adc
add
je
iret
sahf
or
das
mov
cdq
inc
(bad)
cmc
mov
test
xor
bound
sub
retf
scas
mov
mov
lods
inc
jecxz
repnz
jp
jnp
call
push
mov
(bad)
cmp
js
sbb
and
mov
(bad)
cmc
add
xchg
pop
cli
mov
cmp
push
leave
cmovbe
or
sub
push
mov
mov
adc
mov
fidiv
cmp
scas
inc
sub
mov
xor
cmp
int
add
ja
retf
add
mov
mov
lods
and
mov
addr16
or
fcompp
ins
test
xchg
push
es
(bad)
sar
sbb
call
pop
and
mov
fsub
mov
dec
iret
push
(bad)
mov
arpl
jbe
pop
lds
mov
les
xor
mov
jb
inc
(bad)
lea
cmp
cmps
out
int3
mov
icebp
ffreep
cli
or
cdq
out
movs
fdivr
es
push
lods
cld
int3
jg
clc
bound
adc
mov
mov
pop
popf
pop
sub
out
jmp
push
adc
push
push
in
sahf
ror
add
sbb
mov
test
inc
mov
iret
or
popa
out
lods
dec
jg
lock
sub
and
mov
mov
sub
les
push
push
ins
retf
rcr
dec
je
ror
setbe
mov
ds
(bad)
push
cmp
sbb
bound
jb
movs
or
test
sbb
xchg
pop
cmps
fistp
and
xchg
in
icebp
out
aad
es
jnp
add
and
(bad)
cmc
ins
pop
mov
int3
mov
cmp
xlat
xor
daa
jbe
inc
sub
dec
test
std
(bad)
loop
icebp
mov
cmps
call
ds
outs
jecxz
cmp
scas
mov
stos
arpl
sub
push
sub
mov
dec
dec
and
sbb
pop
es
outs
mov
mov
mov
dec
add
cli
mov
jbe
es
xor
popa
movs
jge
mov
(bad)
push
adc
dec
test
xor
mov
sbb
neg
mov
dec
jb
mov
sbb
inc
jae
xor
outs
out
dec
mov
popa
or
ins
adc
jmp
hlt
and
mov
stc
scas
mov
js
(bad)
dec
inc
pusha
movs
adc
cmps
call
xchg
xor
add
xchg
mov
mul
xchg
das
int3
out
retf
xchg
cmp
outs
int
imul
sar
jg
mov
in
fsub
and
repnz
ss
stos
mov
sbb
lock
in
mov
dec
sbb
fadd
rol
jmp
push
adc
nop
inc
pushf
sub
xor
dec
movs
jmp
outs
push
sub
arpl
push
inc
mov
aad
add
push
cmp
sbb
cmp
inc
mov
mov
inc
loopne
mov
xlat
call
push
ret
xor
int
js
outs
sbb
cmp
jge
test
bound
(bad)
add
sahf
sbb
imul
adc
lock
out
mov
fisub
cmp
xchg
jne
iret
pop
fistp
or
or
add
(bad)
loopne
(bad)
sub
test
pcmpgtb
addr16
sahf
idiv
sub
add
adc
xchg
mov
inc
test
(bad)
shr
pop
mov
das
clc
push
ret
jne
or
jecxz
xchg
pop
add
cmc
sbb
push
into
sbb
mov
je
enter
sbb
es
sub
dec
mov
es
dec
push
push
rcr
adc
lods
call
adc
lahf
or
test
(bad)
cmps
sub
or
mov
mov
ret
jge
xchg
sub
hlt
inc
in
adc
push
cwde
(bad)
call
rcr
int3
add
iret
mov
add
jne
sub
lock
sub
jmp
imul
cmps
jp
xor
jns
(bad)
stos
fistp
jmp
out
sahf
ret
fs
dec
das
cmp
rol
out
or
push
sbb
jg
inc
addr16
xchg
push
ss
in
les
mov
or
inc
mov
out
(bad)
jmp
mov
mov
jp
ja
sti
or
pop
in
cmc
push
pop
adc
arpl
movlps
jbe
pop
and
jp
lea
xor
xchg
int
lods
cmp
es
inc
out
mov
jb
fwait
out
add
aam
mov
pop
imul
fisttp
mov
mov
lods
jb
adc
cmps
stos
pop
cwde
xor
adc
mov
das
lock
add
rcr
sub
mov
sbb
dec
mov
mov
iret
and
outs
sbb
adc
pop
jbe
rcr
push
ss
pop
out
inc
add
or
mov
(bad)
(bad)
gs
mov
sbb
ins
inc
jg
push
inc
retf
lds
xor
or
mov
inc
in
mov
cmps
sti
shl
out
test
adc
sbb
xchg
and
inc
xor
or
inc
leave
jp
iret
dec
cmp
add
cdq
jne
inc
into
rcl
daa
xor
pop
cmps
pop
dec
aad
fistp
or
mov
xor
cmp
cwde
xchg
push
cmp
std
rol
inc
mov
dec
pushf
adc
inc
adc
(bad)
push
inc
fcomp
xor
mov
cmp
in
scas
scas
push
es
push
aaa
hlt
mov
sbb
and
das
(bad)
pop
std
iret
mov
inc
push
test
and
jl
and
aam
sahf
mov
push
sbb
push
sbb
push
jno
pop
push
stc
out
mov
out
adc
add
cmps
mov
out
loope
aas
out
cld
test
pop
rcr
addr16
imul
mov
stos
inc
jg
shr
mov
in
mov
in
or
ror
xor
ret
inc
pop
aad
repz
xchg
push
xchg
sar
push
inc
inc
retf
jne
inc
clc
mov
dec
mov
pop
mov
jge
jne
retf
and
mov
mov
inc
mov
push
inc
sbb
lods
adc
aad
(bad)
push
sbb
dec
mov
push
lods
cs
out
pusha
cmp
call
ins
adc
adc
stc
shl
iret
in
mov
daa
jns
adc
pop
outs
aam
xchg
add
jl
xchg
iret
cmp
mov
ss
adc
adc
call
fidivr
ss
mov
mov
test
xor
and
in
add
and
xor
sub
iret
retf
inc
sbb
sti
cmp
or
(bad)
cmp
mov
sar
dec
xor
bound
lods
fsub
jle
and
ss
popa
test
enter
push
fld
cwde
inc
cmp
hlt
pop
hlt
(bad)
or
or
(bad)
out
xor
shl
adc
push
popa
adc
jl
xor
dec
ins
jb
(bad)
fmul
push
mov
xor
and
aaa
ds
(bad)
add
in
fidivr
push
and
push
and
mov
pop
cmc
addr16
pusha
jl
xor
jno
mov
dec
push
inc
mov
mov
mov
outs
lds
ss
jnp
sbb
jecxz
jp
adc
nop
test
int3
cmp
aam
pop
cwde
movs
mov
fisubr
jmp
pop
iret
mul
call
inc
adc
dec
(bad)
pusha
add
retf
out
ins
xchg
xor
push
mov
inc
sbb
das
es
fldenv
push
xchg
adc
pop
out
add
sub
test
push
and
movs
inc
nop
clc
adc
mov
sbb
pop
imul
mov
clc
(bad)
pop
jg
adc
into
in
cmc
jge
loopne
int3
test
addr16
or
inc
data16
and
(bad)
pushf
sbb
xlat
mov
push
loop
jl
sbb
dec
sbb
sub
inc
pop
xor
or
inc
jle
clc
movs
dec
xor
ret
jge
daa
or
inc
add
out
mov
imul
dec
push
push
(bad)
jne
mov
push
and
icebp
mov
outs
cdq
jmp
fisub
out
ficomp
(bad)
js
mov
retf
pop
mov
cmc
gs
xchg
scas
stos
push
xchg
fscale
push
jns
je
fdivrp
movs
pop
sar
xchg
pop
xlat
jbe
stos
iret
sar
loope
cs
push
iret
fnstenv
in
or
sub
lds
adc
xor
adc
push
mov
sbb
nop
popf
inc
push
lods
cmps
sbb
jmp
movs
mov
xor
sar
out
mov
jle
mov
and
ror
cmp
inc
sbb
add
outs
inc
adc
mov
inc
jg
cmp
mov
jg
xchg
iret
pop
pop
mov
fadd
add
pusha
push
adc
mov
fsubr
rcr
pop
int3
ins
jle
pop
scas
inc
and
clc
mov
pop
mov
mov
das
sbb
dec
icebp
sbb
fwait
mul
mov
aaa
mov
stos
into
fnsave
repnz
lock
addr16
shr
in
push
xchg
jno
xchg
cmp
pop
fisub
adc
repnz
mov
jb
pop
push
arpl
inc
pop
mov
dec
hlt
leave
retf
mov
rcl
out
data16
dec
cmp
pop
sbb
imul
or
xchg
and
ret
sbb
mov
imul
sub
push
lock
or
jb
imul
sbb
and
test
mov
adc
jg
inc
leave
pusha
fst
xchg
and
mul
imul
(bad)
jbe
mov
lds
cld
sub
inc
jl
cmp
loope
ins
and
adc
repnz
mov
push
test
and
push
fcomp
adc
ja
cmp
mov
call
fsubr
movs
xchg
xor
clc
dec
fs
cmp
push
mov
icebp
pop
mov
pop
xchg
xchg
mov
call
mov
fmul
cs
push
out
and
xor
sub
dec
hlt
pop
jae
add
inc
loope
int3
or
mov
movs
pushf
jge
daa
(bad)
mov
or
(bad)
add
movs
or
lahf
aam
dec
aam
stos
cwde
lods
outs
xchg
in
mov
(bad)
call
fnstcw
lods
cdq
pop
dec
push
les
push
push
ds
aaa
inc
adc
jb
and
loop
xchg
lods
jmp
sub
dec
pop
arpl
pop
clc
pop
mov
cmps
retf
(bad)
push
mov
loope
das
pop
inc
aaa
(bad)
push
(bad)
retf
pushf
mov
mov
dec
pop
sbb
les
adc
dec
ret
mov
stos
jmp
cmc
add
add
bound
lahf
dec
cld
in
xchg
pop
enter
bound
in
mov
or
fwait
into
ins
inc
pop
outs
out
push
sahf
and
rcr
sti
(bad)
push
mov
out
daa
xor
sub
ret
mov
or
xor
stc
mov
cmps
out
(bad)
int
in
mov
pusha
fst
mov
aaa
test
and
lods
sti
jns
stos
push
stc
pop
dec
cmp
xor
xlat
push
xor
mov
sub
jmp
clc
jmp
adc
push
lods
rcl
ficomp
push
mov
xchg
ja
xor
scas
push
and
stos
fst
(bad)
and
dec
ja
push
outs
mov
retf
cs
mov
mov
adc
push
fiadd
push
sahf
aaa
ficom
retf
pop
(bad)
mov
xchg
lock
jecxz
mov
xor
or
dec
sbb
cmps
dec
pop
out
inc
cwde
or
outs
fs
int
minps
push
adc
(bad)
out
sub
in
mov
aad
outs
push
push
das
pusha
sti
mov
scas
push
popa
popf
test
imul
iret
leave
jo
(bad)
fsubr
pop
sub
imul
push
sub
bound
stc
mov
xor
mov
(bad)
in
and
xor
pop
xor
(bad)
ret
push
add
in
jbe
arpl
fdivr
fld
gs
xchg
aaa
nop
aas
pop
sahf
fnsave
adc
xor
aad
push
mov
vmwrite
jb
inc
or
popa
fs
in
scas
jno
enter
jns
inc
inc
adc
cmps
mov
cmc
mov
or
mov
cmp
imul
mov
aaa
mov
mov
scas
pop
jb
dec
sbb
pushf
fcmovne
call
jno
mov
imul
pusha
pop
ret
mov
xchg
adc
sbb
pop
jnp
nop
xchg
adc
test
pop
je
and
cdq
adc
aam
call
ret
pop
cmc
xlat
mov
pop
nop
inc
sbb
daa
fsubr
xchg
inc
pushf
addr16
enter
shr
xor
sti
je
xchg
lock
sahf
pop
ja
les
jne
pop
dec
xchg
es
in
in
mov
or
mov
and
fadd
scas
es
add
xor
and
in
sbb
mov
mov
mov
enter
and
pop
arpl
xor
scas
mov
mov
and
je
out
mov
fidivr
xchg
outs
pop
pop
adc
inc
call
das
cmp
and
mov
pop
adc
jmp
cs
ds
push
dec
test
sbb
push
sub
pop
sahf
mov
test
mov
fild
cwde
xor
sbb
clc
(bad)
mov
in
sbb
push
sub
push
xchg
inc
sar
xor
mov
test
cmc
stc
pusha
inc
mov
(bad)
icebp
sub
(bad)
repz
xchg
add
cmp
into
xor
pushf
sub
test
or
aad
(bad)
pushf
dec
das
les
bound
or
(bad)
xor
psubsb
adc
icebp
cdq
and
sub
pusha
mov
das
jnp
outs
jge
xor
leave
pop
cmps
scas
mov
jp
adc
movs
mov
loopne
xchg
sub
into
hlt
push
(bad)
cmp
adc
add
dec
or
(bad)
mov
pushf
ret
aas
mov
jae
jno
ror
dec
repz
xor
jne
xchg
mov
cmc
ds
fwait
ja
neg
xchg
enter
fwait
(bad)
sub
and
sub
les
sub
into
sti
lods
clc
pop
pop
pop
mov
sub
mov
or
jns
retf
adc
fwait
outs
ja
mov
xlat
(bad)
sahf
test
xchg
pop
sti
mov
dec
or
inc
xor
outs
cmps
pop
sbb
add
pushf
into
inc
dec
sbb
mov
out
dec
cmc
fwait
str
pusha
sahf
fistp
push
xchg
pop
mov
push
out
mov
sub
call
iret
and
push
repz
outs
call
xor
mov
dec
mov
sahf
jle
mov
mov
sbb
push
(bad)
in
js
ins
mov
fwait
ret
pop
or
fidivr
inc
inc
stos
retf
rcr
lea
fst
pushf
cmp
and
hlt
test
out
cmp
cmp
fcomp
lahf
in
icebp
fs
xchg
cmp
push
mov
fadd
pop
test
loope
mov
(bad)
fadd
sbb
mov
xor
mov
and
push
icebp
sbb
dec
ffreep
fstp
(bad)
(bad)
fstp
mov
xor
jg
sbb
sub
into
adc
into
jecxz
jnp
pslld
xchg
loop
jne
push
(bad)
push
aaa
adc
dec
out
sbb
inc
jle
inc
xor
mov
xlat
add
add
cmps
(bad)
(bad)
fwait
and
xchg
inc
ins
push
(bad)
mov
push
xor
jne
xor
xlat
sub
pop
scas
jmp
sub
adc
repnz
jmp
adc
jmp
jb
xchg
nop
ins
add
xchg
addr16
push
sub
popf
sub
push
mov
popa
mov
push
or
in
inc
loopne
jns
pusha
ss
lahf
cwde
je
cs
ss
mov
sbb
dec
cs
jns
mov
inc
mov
sbb
mov
fldcw
mov
pusha
sar
mov
push
rol
jp
int
or
lahf
je
jp
les
jbe
add
mov
movs
pop
mov
imul
or
or
aam
rcr
fist
xor
or
(bad)
push
and
and
push
js
inc
lock
adc
and
inc
(bad)
cmp
std
and
adc
add
mov
pusha
in
jg
mov
dec
mov
and
das
rcr
jmp
cmp
call
inc
push
paddd
mov
in
or
ds
cld
mov
dec
add
xor
xor
fnstenv
and
xchg
fld
push
or
jmp
imul
inc
ficom
push
jmp
push
in
sbb
and
icebp
scas
pop
in
jbe
cmp
sub
and
(bad)
cmc
sbb
sbb
xor
cwde
mov
push
jne
or
jge
jno
xor
inc
mov
or
inc
pop
pop
fild
xor
lock
int
jne
aas
lods
pop
ins
lock
jae
xor
mov
lods
sahf
lock
ror
xor
or
sub
or
imul
into
test
cmp
scas
in
add
jae
sbb
add
lea
icebp
mov
pop
je
enter
leave
outs
sub
mov
xchg
popa
sar
cmp
add
repz
ja
mov
jne
ja
sub
std
and
mov
cmc
cmc
sbb
lods
mov
outs
xor
lea
xor
scas
das
and
jns
imul
push
xchg
int3
iret
mov
mov
xchg
shl
jecxz
repz
dec
sbb
jle
mov
clc
and
adc
push
adc
push
jb
int3
mov
push
inc
out
enter
movs
dec
loop
(bad)
jae
ret
clc
xlat
inc
js
adc
xchg
leave
jns
arpl
mov
fist
fs
add
les
xchg
pop
adc
mov
fldenv
dec
push
aam
call
mov
push
sbb
mov
adc
test
pop
push
imul
imul
inc
cmp
push
out
sbb
dec
fucom
adc
dec
fs
mov
pop
jne
and
aad
sub
lods
or
cmp
aas
mov
outs
mov
xchg
and
jb
mov
push
pop
sti
mov
std
stos
ja
inc
xchg
(bad)
sti
jp
js
(bad)
aaa
xchg
dec
gs
out
(bad)
xor
ss
rcl
loopne
xchg
retf
pop
and
xchg
cli
jecxz
aas
clc
(bad)
(bad)
or
fmul
xchg
inc
and
add
lds
iret
sbb
(bad)
mov
hlt
(bad)
scas
test
xor
aaa
pop
sysenter
je
mov
xlat
(bad)
push
jle
(bad)
cmps
stos
sahf
popa
xchg
xor
add
cmp
inc
mov
adc
xor
mov
jle
fstp
and
dec
sahf
shl
jge
xor
sub
data16
popa
adc
fwait
sbb
xor
out
(bad)
in
mov
jecxz
cmp
imul
pop
pop
jno
mov
fld
push
xchg
adc
aaa
add
xor
dec
data16
outs
out
mov
xor
cmc
jp
push
xor
fnstsw
mov
sub
loop
repnz
out
or
retf
mov
out
mov
pop
fwait
inc
adc
inc
js
jmp
xor
inc
outs
mov
and
cli
div
pop
sub
rcl
mov
out
out
and
inc
(bad)
loopne
jnp
jecxz
mov
push
adc
mov
ds
retf
das
xchg
stos
cmp
sub
push
imul
std
aam
lods
xchg
jl
int3
fdivp
in
inc
push
pusha
mov
mov
and
outs
add
lds
in
inc
mov
and
adc
push
xor
dec
push
mov
repz
data16
shl
call
je
inc
clc
pop
and
add
adc
push
xor
cmp
aas
ror
pop
dec
rcr
or
or
mov
pop
cmps
test
inc
xor
popf
jmp
mul
inc
out
cmc
sub
loopne
dec
push
mov
adc
ss
cmc
call
xchg
jmp
mov
or
xchg
add
push
jnp
push
sbb
aam
push
add
adc
aam
or
mov
addr16
sub
adc
call
int
outs
gs
nop
adc
xor
push
pop
mov
mov
and
(bad)
push
std
pop
pushf
outs
cmc
sbb
adc
or
mov
push
ja
adc
jmp
nop
fninit
xor
test
mov
mov
rol
test
out
into
test
inc
lds
xor
aaa
mov
mov
call
les
cmps
xor
(bad)
jb
or
push
nop
call
call
dec
fwait
aas
mov
jecxz
jl
mov
movs
sbb
cli
jmp
std
sub
mov
jnp
add
mov
sub
repnz
sahf
mov
das
clc
jmp
pop
xchg
int3
pop
lock
(bad)
mov
imul
push
das
inc
fcomi
dec
dec
int
ds
mov
es
retf
sub
push
adc
xchg
and
(bad)
jge
mov
lods
dec
xor
sub
jo
ds
sbb
jmp
xchg
jecxz
sbb
stc
dec
stos
stos
aaa
and
xchg
cli
in
mov
cmp
xor
lods
out
sbb
add
fdiv
xchg
pusha
rcr
(bad)
dec
stc
out
pop
jmp
xor
inc
adc
in
sub
add
imul
into
xchg
add
dec
js
dec
(bad)
div
xchg
and
sar
movs
int3
fdivr
adc
bnd
test
cmp
dec
fist
push
bound
int
sub
mov
shl
push
pop
sbb
cmp
mov
cmps
dec
dec
inc
gs
ret
jg
sub
sub
sbb
hlt
adc
je
push
jp
mov
ds
inc
mov
rol
(bad)
and
aaa
xor
std
loope
outs
shr
adc
adc
cmp
xlat
sub
xor
les
fnstenv
sub
popf
push
mov
pop
loope
inc
stos
cmps
add
fnstsw
mov
xchg
retf
xor
cmps
jbe
inc
addr16
add
or
addr16
mov
jg
test
mov
cmp
push
ins
shl
pop
inc
je
mov
jnp
stos
je
nop
(bad)
movs
jo
or
mov
je
push
adc
rcr
push
xchg
mov
dec
shl
sar
inc
daa
ret
in
das
shr
jae
mov
ror
ds
mov
repnz
dec
push
out
idiv
les
ror
fnstcw
fmulp
jl
and
cwde
mov
sub
adc
leave
dec
xchg
sbb
sub
xlat
bound
dec
int
out
mov
adc
fiadd
sbb
mov
sub
and
cwde
mov
outs
arpl
push
jmp
daa
lods
mov
ins
(bad)
test
iret
mov
icebp
cmp
jg
movs
cmp
mov
dec
cs
sbb
ins
adc
or
xchg
or
mov
push
pop
or
daa
pop
test
push
rcr
shr
mov
xchg
test
push
inc
push
das
sub
pushf
jp
xchg
adc
sub
push
cmps
and
data16
retf
cmp
shl
dec
pop
loope
cmp
push
sub
call
(bad)
sbb
fnstsw
push
jmp
xchg
xchg
lods
ret
mov
fnstcw
dec
mov
ret
mov
pop
or
push
push
call
lods
mov
outs
jp
data16
or
xor
cmp
test
fidivr
fisttp
jg
jb
popa
mov
mov
sbb
cdq
enter
pushf
js
out
xchg
add
jbe
call
cmp
mov
mov
xchg
jns
mov
cmp
inc
repz
jl
mov
adc
dec
call
cmc
idiv
mov
repnz
or
pop
push
xlat
aad
movs
cmp
xlat
out
popf
test
sub
daa
mov
loop
mov
icebp
hlt
(bad)
jl
cmp
sub
xchg
jbe
sbb
lahf
(bad)
mov
push
jb
rcl
gs
sbb
fst
push
out
cmps
inc
fbstp
imul
cld
sub
ds
fwait
pop
cs
and
pop
scas
test
stos
and
dec
push
aas
push
dec
div
call
arpl
sbb
ds
(bad)
mov
movs
and
mov
mov
mov
dec
data16
sbb
clc
jle
shl
out
push
mov
ret
retf
and
sub
(bad)
imul
call
or
pop
shl
pop
mov
push
nop
out
sub
push
aad
mov
mov
aad
into
int3
(bad)
repz
mov
xchg
pop
mov
adc
mov
jge
lea
xchg
cmps
dec
push
jo
lahf
ds
aas
cmp
xchg
(bad)
popf
jmp
int
xchg
jbe
cli
imul
or
push
xchg
aaa
and
sbb
dec
lods
test
jnp
lahf
rcl
ret
retf
retf
call
outs
shl
dec
xchg
jmp
fmul
dec
pushf
dec
out
xchg
cmp
popa
adc
test
add
sub
sahf
fldenv
stos
pop
icebp
repnz
pop
repz
lods
cmp
pop
inc
pop
loop
and
aaa
jb
outs
out
lea
sbb
lods
loopne
jg
mov
mov
popa
dec
pop
or
jnp
daa
xlat
sbb
cmp
inc
inc
cmc
(bad)
mov
or
js
or
mov
jmp
(bad)
je
imul
xlat
inc
shr
xchg
dec
repnz
je
add
inc
adc
mov
dec
mov
imul
push
cdq
xlat
repz
pop
jecxz
or
mov
sbb
fstp
cmps
sub
addr16
mov
wrmsr
jno
add
pop
jae
mov
sbb
push
outs
jne
jbe
xor
sub
in
mov
fcomp
xor
pop
mov
mov
dec
mov
jns
push
movs
les
in
(bad)
xor
retf
outs
mov
inc
(bad)
retf
adc
mov
ins
leave
fbstp
xor
lods
mov
mov
push
adc
add
popf
push
mov
mov
call
(bad)
shr
nop
outs
(bad)
cmp
mov
cmp
jns
stc
iret
jl
pop
jp
push
or
mov
push
jle
xchg
xchg
adc
cmp
test
push
call
mov
xchg
dec
or
sbb
adc
adc
lods
and
cmp
sti
pop
fwait
jmp
hlt
test
push
bound
mov
loop
cmps
jb
xor
dec
cmps
jb
adc
gs
fisubr
inc
lds
mov
pop
dec
enter
test
mov
jecxz
jbe
fcmovbe
and
cmp
sub
sahf
je
stc
jl
cmps
jl
and
or
push
jae
inc
push
loopne
(bad)
sub
xor
and
sbb
pop
jge
cmp
xchg
and
inc
int3
push
cmp
mov
xor
or
cmp
mov
(bad)
sbb
xor
pusha
enter
test
lods
rcr
std
and
adc
dec
pop
ds
pop
add
inc
aaa
sbb
cmp
ret
out
push
jmp
std
inc
ss
mov
or
call
push
push
addr16
nop
loop
mov
jmp
pop
dec
push
pop
xchg
shr
imul
jae
faddp
in
jmp
mov
pop
(bad)
jge
sub
pop
xchg
in
mov
ret
jp
sbb
jmp
mov
mov
repnz
into
mov
xchg
cdq
daa
cli
sub
fstp
neg
das
jecxz
outs
icebp
add
pop
and
dec
jb
(bad)
gs
inc
js
ret
cmc
sbb
mov
sbb
test
mov
stc
rcl
daa
imul
rdpmc
stos
movs
sub
mov
mov
in
pop
pop
cmp
dec
lea
adc
mov
pop
mov
xor
add
les
fcom
push
xchg
mov
stos
mov
add
jnp
ret
les
pop
icebp
dec
jle
mov
scas
push
clc
adc
popf
nop
fisttp
push
xor
add
add
mov
iret
pusha
int
cmp
cmp
cmp
sbb
test
mov
cmc
das
dec
mov
jns
jno
fistp
adc
fwait
add
sub
push
pop
inc
push
push
inc
test
out
scas
lahf
daa
mov
stc
push
dec
xchg
xchg
mov
pushf
and
test
push
cmp
or
int
cmp
inc
data16
in
imul
xchg
ret
in
je
sub
jmp
mov
mov
ins
push
push
rcr
sti
cmps
idiv
cmps
repz
(bad)
pop
jge
add
push
cmps
pushf
retf
sub
inc
movs
cmp
data16
xor
mov
sbb
push
scas
cmp
add
inc
inc
jo
fisub
aaa
push
cwde
jne
je
push
pop
xchg
add
jp
jnp
sbb
das
push
sbb
fistp
inc
shl
jmp
cwde
sbb
(bad)
loop
shl
test
xchg
pusha
leave
xchg
xor
test
xchg
lahf
(bad)
cmps
outs
call
push
mov
push
aad
cs
xchg
push
lock
inc
cdq
repz
test
push
xchg
or
cmp
iret
mov
xchg
cmp
jl
scas
jmp
fdiv
inc
cmps
lea
cmp
stos
and
rol
mov
fisttp
mov
js
push
and
mov
and
or
mov
int
stos
into
mov
bound
mov
pop
cmp
arpl
ficom
mov
sbb
fcmovnu
xchg
and
push
and
sbb
cmps
mov
cli
fdivr
or
adc
jb
mov
mov
fidivr
loopne
xlat
nop
lods
xchg
jns
pop
pop
sar
inc
cmp
adc
js
fbstp
test
jne
adc
sbb
add
mov
mov
or
and
out
and
scas
jb
adc
repz
movs
sub
mov
mov
lods
adc
mov
push
xor
pop
pop
mov
std
mov
xchg
ja
jecxz
ds
sar
enter
pop
scas
imul
icebp
mov
test
mov
sub
pop
sub
xor
cmp
cmp
push
inc
pop
fwait
pop
rcr
push
daa
jne
and
dec
sar
mov
dec
dec
dec
cmp
ja
mov
cmp
sub
sub
movs
push
icebp
pop
shl
sub
and
mov
outs
mov
retf
ins
jne
arpl
pop
dec
mov
mov
jecxz
addr16
pusha
pop
adc
mov
mov
retf
aad
sbb
cmp
das
inc
(bad)
iret
cmc
and
sbb
jmp
iret
mov
inc
mov
js
scas
fwait
push
jecxz
test
or
xchg
pop
mov
test
mov
sbb
mov
fdiv
cmp
jle
aam
fiadd
push
mov
stos
push
ja
pop
call
xchg
loope
cs
ret
add
push
jg
push
jle
jnp
and
fld
shr
push
shr
std
push
or
ins
fisttp
shr
xor
pcmpgtb
inc
cmps
aaa
mov
cmps
xlat
pop
shr
cmp
sbb
(bad)
scas
xbegin
push
arpl
cmp
aam
jns
lock
xchg
fadd
cmp
push
iret
add
ret
mov
xchg
pop
or
push
in
push
cmc
pop
add
and
rol
inc
xor
mov
and
sub
(bad)
inc
test
daa
ffreep
jmp
shl
stos
jmp
mov
ret
xor
in
add
adc
jmp
hlt
imul
call
add
ror
ret
clc
and
stos
inc
inc
in
(bad)
cmp
jp
dec
mov
test
popf
retf
push
aas
cmp
pop
mov
adc
cdq
pop
pop
jecxz
gs
stos
push
std
lahf
pop
in
fidivr
jbe
popf
mov
sbb
inc
mov
sbb
adc
mov
or
adc
push
mov
sub
mov
imul
xchg
addr16
das
mov
test
scas
aas
push
or
sti
cmp
pop
daa
enter
jge
and
mov
ins
movs
pop
stos
enter
iret
add
push
jecxz
cmp
xor
pop
inc
out
hlt
lea
mov
fs
inc
mov
push
sub
fstp
fdiv
and
sar
sbb
or
fmul
cdq
push
lds
xor
cmp
fwait
sub
out
int3
sbb
xchg
shl
call
lock
jl
mov
pushf
int
call
lods
dec
data16
shr
add
xor
int
and
pusha
fnstsw
ss
jg
call
cmps
dec
push
xor
ins
jmp
sub
sti
push
jmp
mov
or
es
pop
pop
std
sbb
jle
jle
pop
lods
mov
xchg
movs
mov
leave
addr16
test
jae
enter
ret
jne
scas
neg
outs
fnstcw
imul
outs
sub
fdivrp
and
adc
dec
mov
and
pop
mov
xor
call
cmp
int
xor
xor
cmps
fwait
pop
ins
psraw
aad
jle
sahf
je
mov
xor
movs
test
cmp
sbb
cld
(bad)
push
clc
in
shl
sahf
xchg
cmps
into
jle
jg
mov
(bad)
cmps
les
retf
sbb
ret
dec
rcr
adc
push
rol
into
ret
mov
lds
scas
int
jmp
mov
mov
xchg
es
pop
mov
mov
leave
dec
xrelease
lahf
add
imul
fwait
dec
mov
stos
lods
pop
and
leave
rol
scas
in
(bad)
cmp
movs
loopne
and
jno
cmp
(bad)
popf
pop
popf
popa
push
nop
xcrypt-cfb
cmps
and
dec
in
lock
out
push
sbb
pop
xlat
cs
mov
je
daa
push
fcmovu
xchg
cmc
xor
push
in
in
les
repz
sbb
daa
push
mov
pusha
pusha
adc
nop
retf
(bad)
add
test
dec
imul
mov
lock
mov
aas
(bad)
xor
and
int3
pop
jne
test
xchg
cmp
pop
mov
imul
icebp
add
adc
out
pusha
popf
jno
or
sti
call
test
test
test
data16
jne
sti
lods
sub
cmp
fimul
cmps
repnz
outs
jno
or
cmp
ret
dec
test
les
add
jle
pop
xor
loope
xor
ss
icebp
xchg
dec
retf
pop
inc
lock
dec
mov
or
test
xchg
dec
add
mov
inc
mov
cwde
ss
xchg
in
mov
out
outs
(bad)
dec
shl
cmp
xchg
dec
loopne
push
retf
das
ret
xchg
jno
(bad)
xchg
test
imul
sbb
push
iret
adc
sbb
mov
fs
push
mov
push
loope
xor
and
xchg
daa
ins
das
jnp
sahf
adc
dec
prefetch
or
sub
repz
gs
data16
bound
fwait
imul
outs
sub
cli
mov
js
mov
in
jns
ins
push
cmp
add
inc
push
dec
xor
xor
enter
pop
fwait
cmps
mov
pop
ror
jb
or
or
sbb
mov
pop
pop
retf
jmp
nop
ror
push
call
push
cmp
adc
sub
add
jp
xlat
push
dec
ins
out
xor
mov
rcl
xlat
sub
jle
hlt
add
icebp
sbb
pop
jno
xchg
dec
push
pop
les
push
sbb
dec
mov
push
ret
int3
sub
jae
jns
jmp
sbb
inc
dec
inc
xor
ret
push
xchg
xor
neg
mov
push
pop
adc
or
imul
mov
ror
cmp
fucomip
push
push
jge
fwait
and
mov
jecxz
and
dec
call
paddusw
call
dec
fwait
xchg
mov
push
sub
aaa
sbb
mov
cld
lods
icebp
xchg
push
out
movs
inc
aad
mov
pusha
cmc
icebp
pop
or
sbb
xchg
push
jmp
add
movs
movs
cli
sbb
mov
iret
xor
fnsave
and
fistp
icebp
call
aad
pop
and
js
(bad)
ss
int3
push
lods
out
sbb
cmp
dec
mov
movs
push
lods
cmp
sti
or
les
and
fild
jnp
jecxz
push
rol
xchg
iret
sbb
inc
mov
retf
call
push
popf
stos
push
mov
cld
xor
jns
add
xchg
cmps
push
loopne
jae
loop
js
fnstcw
shl
fwait
shl
icebp
test
add
xchg
scas
cmps
pushf
push
cmp
stos
aas
je
lods
push
fwait
ret
jo
jnp
call
es
shl
pop
repz
lock
jg
ja
out
lahf
add
rcl
adc
test
test
dec
scas
and
inc
mov
xor
push
mov
mov
popf
das
shr
jns
int3
call
not
or
test
or
popa
lahf
or
adc
sbb
pop
test
mov
xchg
xchg
mov
mov
mov
cmp
cwde
pop
hlt
sbb
mov
test
gs
into
nop
rcr
jle
enter
and
pop
inc
(bad)
pop
(bad)
cmc
jmp
aaa
ds
fidiv
sbb
stc
push
xor
gs
aas
fs
push
movs
scas
ss
fadd
inc
push
sub
hlt
sbb
mov
idiv
ret
int3
cmc
mov
in
xor
int3
or
aad
dec
mov
mov
iret
dec
mov
push
cld
mov
mov
adc
push
xlat
sub
fnsave
dec
out
leave
xchg
call
je
cmp
jecxz
cs
ret
fist
fadd
and
and
push
and
cli
test
mov
mov
out
stc
mov
or
clc
lods
and
push
xor
inc
add
inc
movs
xchg
lds
cmp
fs
push
ds
jnp
int
xor
inc
sahf
pop
out
mov
lods
ret
std
repnz
add
or
popf
ins
iret
shl
push
ds
scas
adc
inc
inc
aam
or
cwde
into
cdq
icebp
popa
xor
xchg
mov
lods
movs
(bad)
push
cmp
je
int3
test
jmp
xchg
and
push
adc
idiv
pop
mov
mov
loop
lea
xchg
sbb
call
mov
pop
call
mov
inc
ins
je
test
mov
aas
push
rcr
je
scas
pop
adc
aaa
int3
dec
push
lds
test
icebp
repnz
push
(bad)
(bad)
or
cmps
retf
pop
js
daa
jnp
aaa
cmp
scas
(bad)
dec
or
push
into
dec
push
mov
mov
icebp
cmps
cmp
imul
inc
inc
adc
jg
sbb
cdq
das
adc
or
shl
xchg
sar
sbb
push
pop
mov
mov
add
cdq
add
and
loopne
enter
mov
movs
jp
sub
or
push
adc
jae
rcr
or
sbb
jo
icebp
shl
dec
nop
mov
retf
clc
jne
test
xchg
pop
pop
cmps
call
pop
mov
ffree
test
and
in
addr16
data16
inc
call
sbb
mov
mov
pop
mov
sbb
stc
(bad)
fidivr
fdiv
pop
mov
ins
pop
pusha
retf
jbe
push
dec
shl
shr
adc
fisttp
daa
outs
(bad)
dec
inc
in
fwait
pop
test
lea
adc
movs
push
imul
cmp
xor
dec
test
add
xor
mov
push
jecxz
dec
mov
add
mov
cwde
fisub
jmp
(bad)
clc
imul
sub
push
xor
inc
xor
jno
in
in
std
dec
test
dec
mov
adc
and
mov
loopne
hlt
test
mov
add
adc
xlat
cmps
fisubr
test
retf
cli
sbb
cwde
xchg
iret
or
or
xor
inc
movs
sbb
jle
cld
aaa
mov
push
lahf
adc
pop
mov
mov
out
movs
dec
daa
pop
mov
push
je
and
(bad)
(bad)
or
add
xor
popf
push
daa
xor
or
jne
iret
adc
pusha
fdivr
push
jp
gs
dec
adc
sbb
dec
sar
clc
je
or
and
fnsave
(bad)
jg
out
retf
sub
and
xor
fst
(bad)
xchg
cwde
shl
ss
and
pop
repz
or
inc
stos
and
mov
jae
fld
call
inc
(bad)
imul
adc
mov
lods
test
push
test
dec
hlt
arpl
or
lahf
test
pop
add
loop
inc
pusha
mov
cli
movs
mov
sahf
mov
shr
adc
mov
in
cmps
or
jecxz
inc
test
add
mov
mov
sbb
xchg
lods
and
mov
(bad)
and
call
xlat
or
aas
jge
popa
mov
pop
add
adc
lea
mov
push
mov
dec
cs
out
es
cmp
pop
pop
pushf
push
mov
fwait
adc
xor
mov
clc
add
dec
jp
mov
fild
xchg
inc
inc
cmp
sub
inc
sti
jmp
add
call
add
and
xchg
fs
xor
mov
pusha
in
cmc
push
fcom
(bad)
and
mov
mov
mov
(bad)
sbb
push
xchg
dec
jmp
mov
pop
cdq
jbe
fidiv
std
inc
pop
into
stc
add
xchg
adc
push
les
inc
jmp
jmp
mov
sbb
sbb
xchg
cmps
inc
xchg
jp
dec
sub
mov
pop
fdiv
(bad)
push
call
call
sub
(bad)
push
inc
scas
inc
jp
xchg
jns
lea
xchg
(bad)
push
push
aas
cmp
retf
inc
and
and
jmp
xlat
push
inc
daa
pop
sbb
movs
nop
cmc
jl
ins
stos
fwait
test
push
mov
lahf
outs
fistp
mov
pop
inc
out
in
jmp
pop
or
(bad)
ins
push
sbb
aam
inc
jns
fist
cmp
dec
fld1
outs
mov
jmp
sub
pop
int
mov
push
xor
imul
mov
xchg
sub
cmp
(bad)
pop
dec
outs
and
and
test
xchg
xor
shr
sar
ins
fld
push
push
js
fistp
mov
jmp
fimul
dec
xchg
lods
sti
daa
and
push
movs
lods
ds
scas
int3
inc
fcmovbe
into
pushf
xor
nop
out
call
xor
cmps
xchg
call
add
cmp
inc
dec
xor
inc
jae
fwait
jmp
xchg
dec
cmp
mov
shl
mov
mov
xor
mov
pop
sahf
sbb
inc
jno
and
outs
or
nop
test
inc
xor
in
push
ja
pusha
sbb
pop
loop
call
xor
ret
ds
sub
rcr
fnstsw
stos
sub
sbb
sub
pop
cld
std
jb
jo
xor
sbb
mov
push
lahf
dec
jae
xor
ret
xor
or
inc
or
sbb
dec
lods
jmp
pop
xor
dec
(bad)
movs
rol
mov
lea
ret
push
fld
xchg
xor
ds
out
inc
in
gs
pusha
sub
xchg
mov
jb
call
inc
pushf
jmp
(bad)
mov
jo
popa
jmp
nop
xchg
push
jge
push
(bad)
mov
mov
jmp
cmp
xor
adc
mov
pop
xlat
xor
inc
dec
pop
lods
scas
icebp
pop
gs
add
sti
imul
push
xchg
loopne
loop
push
mov
adc
cmps
cmp
dec
mov
lock
jbe
push
adc
cdq
cmc
cs
cli
add
stc
lahf
push
xchg
pop
test
out
cmc
daa
cmp
inc
dec
in
mov
pop
movs
mov
cmp
test
cmp
pop
scas
(bad)
or
mov
dec
pop
push
xchg
and
cmp
icebp
adc
cmp
xor
ret
jmp
sbb
dec
push
add
push
pop
push
shl
jno
inc
(bad)
inc
mov
inc
in
xchg
push
movs
cmp
shl
or
mov
pop
shr
push
xor
or
aaa
xchg
push
js
fcom
xor
popf
leave
xor
cmc
enter
retf
jae
imul
jo
lahf
retf
or
push
popf
pusha
mov
cli
aam
ror
inc
mov
xchg
aam
icebp
sbb
jne
pop
daa
mov
sub
push
jle
scas
pop
movs
sar
daa
xor
mov
nop
and
fucomip
or
mov
call
xchg
jb
les
daa
xor
add
jnp
sbb
pop
movs
xor
mov
aam
sub
shl
(bad)
push
in
daa
test
test
sbb
sub
xchg
mov
mov
jb
xlat
cmp
lods
sbb
loop
jp
inc
arpl
mov
pop
gs
movs
scas
(bad)
jge
popf
test
sbb
push
out
add
xchg
push
int
scas
jo
mov
or
xor
cmp
mov
icebp
cmps
jmp
sbb
aaa
sub
cmp
pop
pop
xchg
ror
icebp
inc
ror
adc
adc
push
loopne
mov
aam
push
out
outs
pop
inc
mov
dec
sub
or
loopne
movs
es
leave
out
push
std
sub
(bad)
fistp
test
mov
push
push
retf
out
pop
and
sar
inc
mov
cdq
loopne
xchg
xor
dec
rol
sbb
cli
(bad)
or
push
inc
cmp
add
and
xchg
dec
into
aas
sub
mov
ins
xor
fimul
cmp
mov
cmp
in
xchg
test
xchg
push
add
sti
in
add
lods
mov
shl
scas
mov
fwait
aam
mov
mov
add
mov
popa
cmp
clc
test
jo
and
dec
mul
or
in
arpl
pop
mov
sbb
cwde
dec
ss
iret
push
in
xlat
ins
out
pop
and
mov
cmp
and
repnz
jo
jae
mov
cli
inc
mov
jge
int
sbb
pop
mov
jne
xor
cld
gs
add
mov
ins
loop
loopne
mov
xlat
loop
jo
adc
push
outs
fstp
add
xchg
push
neg
sub
mov
add
pop
mov
lock
add
out
xchg
mov
leave
jl
aaa
sbb
sub
neg
out
pusha
(bad)
fwait
xchg
pop
jns
and
aaa
inc
push
cld
and
pop
shr
les
popf
adc
adc
push
cli
push
mov
pop
or
or
in
dec
cmp
test
mov
mov
jg
fcom
unpcklps
sti
scas
or
jb
mov
daa
xchg
adc
add
and
repnz
pop
test
pop
sti
imul
mov
xchg
aad
xor
test
retf
xor
pushf
push
and
push
cmp
imul
addr16
add
inc
outs
mov
pushf
neg
and
mov
xchg
(bad)
or
popa
shl
and
jb
call
jne
imul
call
mov
xor
loope
pop
adc
in
mov
mul
xlat
sub
mov
sbb
js
xor
or
loopne
mov
xchg
fsub
mov
dec
mov
jge
cdq
inc
sti
push
mov
lahf
jecxz
xor
xchg
pusha
mov
mov
push
pop
loop
xchg
out
add
push
sahf
xchg
inc
into
add
xchg
(bad)
adc
push
or
not
pop
xchg
xchg
or
add
jns
cmps
ins
lock
sub
fist
mov
test
push
(bad)
repnz
daa
jns
pop
xchg
(bad)
fimul
push
lock
popf
loop
dec
sbb
ret
adc
cs
push
loopne
popa
jl
aam
dec
mov
not
scas
sbb
add
enter
mov
sub
fs
ss
scas
ficomp
fisttp
lods
sahf
inc
mov
add
test
retf
das
(bad)
js
rcl
sub
ret
sbb
mov
xchg
cmp
jmp
sti
cmc
movs
mov
push
(bad)
(bad)
in
xor
in
jnp
call
in
jge
int3
cmp
sub
scas
popa
jae
inc
mov
stos
sub
shr
fadd
stc
mov
sbb
cdq
xchg
loopne
xchg
adc
xor
and
inc
adc
cmp
test
fdiv
js
push
xchg
cmc
ret
push
sbb
int
push
lahf
and
dec
sbb
and
test
pop
in
cs
call
inc
add
inc
inc
nop
jle
sbb
sbb
stos
mov
cli
imul
(bad)
mov
jmp
push
inc
fcomp
in
mov
jmp
fldenv
sahf
das
push
adc
imul
add
in
arpl
push
leave
xor
cld
cwde
jmp
js
cs
jl
push
das
call
nop
adc
xlat
sub
inc
mov
and
or
cmp
popa
ja
fnstcw
inc
enter
mov
and
(bad)
or
ret
cli
dec
xchg
sbb
sbb
out
ret
ins
mov
cwde
cli
sub
into
fild
shl
dec
ret
movs
pushf
(bad)
out
mov
cs
mov
clc
dec
test
in
stos
loopne
mov
fst
outs
in
aam
push
xor
call
jae
jns
push
xchg
lock
and
sub
shl
pop
adc
call
cld
or
push
dec
shr
idiv
retf
mov
jle
inc
jno
in
pop
fsubr
push
mov
push
mov
add
push
xchg
clc
retf
in
(bad)
jne
cmp
inc
sahf
clc
cmp
push
in
dec
sub
(bad)
inc
and
std
popfw
mov
(bad)
or
inc
dec
(bad)
shl
ss
sbb
retf
mov
jns
cwde
jae
in
add
es
dec
jecxz
test
leave
jno
rcl
cli
sub
test
xchg
hlt
aad
mov
xchg
pop
std
repz
add
push
dec
mov
vdivps
adc
push
pop
into
sbb
jecxz
inc
scas
mov
(bad)
(bad)
jge
call
inc
std
sub
mov
into
(bad)
out
push
aad
icebp
inc
xor
outs
out
pushf
(bad)
xchg
outs
jno
dec
mov
das
add
pop
add
jne
mov
mov
or
fs
ja
sub
ins
xchg
sbb
mov
xchg
inc
cmp
mov
push
jb
loop
pop
loope
push
fadd
xchg
add
dec
mov
add
cdq
or
mov
lods
int
mov
sub
ins
cmp
lea
pushf
lock
jb
add
test
bnd
ins
ss
ret
ins
dec
test
leave
dec
icebp
int3
fist
nop
adc
shl
adc
jnp
int3
add
inc
aas
mov
sar
std
sub
imul
cmp
pop
add
pop
sub
and
adc
dec
and
push
xor
sbb
nop
adc
inc
fwait
addr16
jae
or
dec
cmp
dec
push
and
icebp
mov
sbb
scas
mov
(bad)
imul
sub
pop
dec
outs
inc
mov
cwde
icebp
loop
sbb
stc
sbb
dec
add
lods
cdq
fs
repnz
imul
inc
popf
addr16
push
cmps
test
pop
jbe
pop
mov
das
das
sub
pop
sbb
daa
enter
cmp
dec
leave
xchg
sub
nop
xor
push
jae
daa
inc
ret
(bad)
aad
xor
loopne
or
arpl
fisubr
(bad)
xchg
dec
jge
cmp
retf
mov
or
and
push
(bad)
xchg
push
fmulp
sbb
ffree
leave
xor
outs
bound
pop
mov
arpl
jno
pop
pop
dec
pop
ins
ror
int3
adc
movs
and
pop
push
(bad)
hlt
pop
out
sbb
pop
std
outs
mov
pop
jecxz
fptan
jo
loop
xchg
mov
stos
pop
into
call
ret
movs
xchg
xlat
jb
fwait
sti
fisttp
ja
imul
out
push
ins
inc
xchg
pop
push
xchg
cmp
cs
test
fcom
inc
(bad)
xchg
cmps
mov
stos
jmp
or
jo
mov
aas
out
jg
push
mov
mov
add
popw
pop
ja
shl
das
and
pop
dec
gs
pop
shl
push
lahf
aam
push
mov
cmp
push
test
and
pop
cmps
xor
jb
pushf
and
leave
enter
scas
pushf
mov
mov
xor
cmps
test
sar
jle
xor
sbb
fld
mov
xchg
test
fild
sbb
inc
mov
dec
cmps
js
xchg
sub
outs
xchg
or
push
mov
into
pop
lods
push
add
push
mov
ins
jbe
test
js
pop
sub
sahf
lock
hlt
inc
arpl
mov
inc
ds
pusha
and
fidiv
jnp
sub
jo
enter
fisttp
pop
jg
mov
fwait
cld
in
push
(bad)
dec
inc
clc
add
pop
pop
in
cld
dec
test
push
in
push
xchg
paddsw
and
lods
push
and
fmul
imul
cmc
in
inc
aad
sbb
mov
setnp
dec
jg
std
cmps
xor
fiadd
iret
jp
loope
push
sub
addr16
sub
jl
repz
jp
adc
xchg
imul
leave
loope
cmp
(bad)
in
inc
jnp
sbb
ss
mov
xchg
mov
mov
in
cmovo
sbb
call
fstp
fidivr
clc
icebp
(bad)
sbb
jle
jmp
daa
sub
push
pop
repnz
inc
jle
inc
push
les
mov
adc
adc
dec
fcmovnbe
adc
dec
or
cs
cli
cmp
leave
sar
mov
scas
int
movs
pushw
or
stos
or
out
xor
stos
test
pushf
dec
mov
inc
out
xor
stos
ins
fdiv
mov
cli
shr
pop
mov
addr16
enter
cmp
imul
sbb
(bad)
cmps
lds
lock
loop
pushf
fcmovne
enter
push
in
and
mov
pop
cmp
jae
dec
sahf
pushf
inc
dec
(bad)
xchg
xchg
aam
ret
lock
outs
repz
push
mov
and
xor
lahf
aad
jnp
retf
mov
pop
jno
mov
mov
call
loope
mov
dec
hlt
stos
mov
retf
outs
mov
imul
inc
aaa
daa
jmp
jo
add
pop
je
lahf
or
loop
or
aad
shl
xchg
aam
xchg
adc
push
adc
mov
sbb
cvttps2pi
shr
mov
ret
cs
cmps
mov
lods
mov
ds
lock
gs
movs
xchg
sti
aad
es
test
add
and
pop
nop
mov
xchg
mov
or
pop
je
pop
sahf
paddusb
jo
push
jae
sub
je
pusha
xor
adc
das
leave
jge
or
mov
ja
loop
mov
bound
out
mov
ror
or
dec
push
cmc
mov
sub
fmul
push
xchg
int
jp
into
scas
das
jo
fadd
add
(bad)
mov
sbb
in
xor
aam
popf
call
xchg
jnp
fist
pop
into
mov
(bad)
mov
ins
jb
sub
mov
dec
hlt
dec
rol
dec
dec
addr16
aaa
sub
sbb
dec
inc
xchg
test
push
sub
loope
fmul
mov
cvtdq2ps
retf
and
push
xchg
mov
js
daa
icebp
jnp
jne
imul
popf
cwde
mov
inc
xor
mov
and
adc
mul
cli
imul
shl
das
inc
pop
retf
add
cdq
adc
call
movs
or
hlt
inc
sub
scas
pop
lods
cmp
add
outs
xlat
xor
jp
pop
mov
inc
push
push
jmp
pop
cld
data16
outs
sub
loope
retf
xchg
or
inc
neg
popf
push
sbb
mov
ds
mov
pop
or
sbb
icebp
stos
out
in
cmp
aas
xor
jnp
dec
loopne
ss
xor
cmp
mov
(bad)
adc
repz
jnp
add
ds
fadd
clc
add
push
repz
mov
jmp
iret
dec
and
imul
lock
sbb
ss
dec
push
stos
xor
sbb
cwde
mov
push
and
xor
push
mov
dec
aam
lods
das
sahf
mov
ss
pop
rcr
or
(bad)
(bad)
(bad)
mov
ins
retf
sbb
adc
push
pop
add
add
cli
cs
addr16
je
fstp
and
mov
push
sbb
xor
fcomp
mov
outs
inc
mov
sbb
xchg
push
mov
das
push
bnd
sub
int
enter
ret
mov
outs
push
sbb
mov
dec
and
mov
data16
sbb
xchg
cdq
stc
shr
movs
mov
call
sub
fistp
into
addr16
movs
pop
or
out
stc
push
mov
xchg
xchg
cs
sbb
push
ds
gs
imul
(bad)
sbb
int3
sub
ins
xchg
or
fsubr
push
ret
inc
cmps
jno
test
jg
in
out
retf
jecxz
pop
xchg
or
daa
sti
push
adc
xor
in
jle
das
dec
sar
xchg
inc
ja
test
(bad)
cmp
jge
xchg
xor
and
push
push
mov
mov
clc
pop
ss
mov
inc
xchg
push
push
shl
push
xor
mov
stc
retf
bound
cmp
ficom
push
scas
les
outs
data16
cli
mov
int
cmp
push
lock
(bad)
mov
loopne
scas
sbb
mov
mov
pop
cwde
jmp
and
ror
mov
int3
push
scas
sub
cld
aaa
and
and
hlt
imul
inc
xor
hlt
inc
push
cmp
push
cmps
xlat
cmc
mov
mov
popf
neg
test
sub
int3
mov
imul
xlat
stc
sbb
addr16
les
jl
mov
test
xchg
jp
dec
pop
push
and
loope
add
outs
in
push
and
cmp
lods
(bad)
(bad)
into
cdq
call
ins
lds
sub
(bad)
movs
dec
xchg
or
xchg
xor
outs
fdivr
pop
push
push
push
les
cmp
mov
jle
push
(bad)
loope
pop
fidiv
push
mov
jns
mov
sub
cmp
ret
stos
mov
cmp
xlat
sub
stos
retf
pop
fsubrp
or
and
rol
jmp
shr
jns
test
sbb
mov
(bad)
mov
cmp
jmp
retf
mov
xor
sub
adc
rcr
stos
adc
dec
imul
adc
adc
add
xchg
in
dec
mov
out
pusha
shr
mov
pop
clc
clc
mov
pop
lds
xchg
dec
call
test
pop
cmp
xor
es
test
das
mov
and
mov
dec
pusha
add
or
ret
push
add
lea
and
adc
leave
inc
mov
adc
xchg
fimul
mov
in
ffree
xchg
pop
mov
test
pop
jg
and
mov
jecxz
repz
sbb
and
xor
call
leave
movs
ficomp
pop
mov
push
xor
xchg
(bad)
(bad)
fdiv
clc
dec
add
sbb
adc
adc
xor
xchg
call
cmp
pop
and
nop
add
mov
in
call
inc
push
push
sbb
sbb
loopne
adc
add
inc
fistp
mov
push
inc
pop
adc
jecxz
rcl
ins
ins
repnz
pop
pop
fs
faddp
inc
sub
cld
xlat
dec
push
add
outs
cmp
pop
in
jg
inc
mov
xor
add
or
popf
mov
dec
retf
push
adc
fsub
adc
sbb
movs
jbe
imul
ret
data16
xchg
inc
sbb
adc
lods
bound
adc
lea
sbb
les
jns
fs
xor
push
(bad)
dec
mov
stc
lock
je
leave
cs
and
jl
push
mov
(bad)
std
das
gs
retf
jne
outs
inc
mov
inc
xor
mov
call
in
cdq
es
mov
dec
test
popf
xor
fcomi
inc
ds
jb
add
xor
mov
or
xchg
call
jle
mov
loopne
leave
fist
mov
cmc
pop
adc
xor
(bad)
retf
int3
pop
mov
pop
push
daa
fcmove
fisttp
sub
fdiv
mov
xchg
cmp
pop
cmc
inc
mov
(bad)
call
mov
push
inc
pop
inc
scas
xchg
adc
in
mov
in
js
clc
or
imul
enter
in
shl
sti
xchg
(bad)
dec
push
xchg
ja
xchg
fldenv
punpcklbw
sar
nop
int
ja
mov
dec
aad
mov
xchg
clc
push
in
and
cmp
js
pop
in
push
adc
xlat
xchg
add
icebp
test
pusha
and
adc
inc
fwait
add
mov
cmp
mov
and
pop
xchg
cmp
or
jmp
inc
addr16
cld
jp
cmp
(bad)
icebp
fwait
xchg
sbb
sbb
fbstp
mov
pusha
ret
aam
adc
clc
sub
jo
adc
data16
pop
mov
cs
jecxz
lea
xchg
popf
stc
inc
cmp
jp
and
call
cmp
lock
sub
pop
jp
inc
out
(bad)
adc
xchg
pop
movs
out
out
scas
cld
sbb
nop
mov
mov
push
xchg
push
or
jo
jmp
cmp
es
sar
xor
sbb
out
or
xchg
addr16
test
adc
cmp
and
xlat
pop
dec
cmp
js
mov
jno
and
rol
(bad)
ficom
sbb
ins
add
shr
adc
xchg
lods
es
shl
jmp
fwait
ds
dec
scas
dec
mov
xchg
and
iret
mov
lea
div
retf
les
outs
call
sbb
lods
das
dec
sub
mov
xchg
aad
mov
pop
push
retf
or
sbb
add
out
and
data16
xor
jns
arpl
xchg
cwde
or
out
push
push
les
sbb
sbb
adc
mov
fadd
test
dec
pop
int3
outs
xor
inc
mov
(bad)
cmp
loop
cli
inc
jne
pop
xchg
mov
cmc
fnsave
ins
cli
ret
inc
sbb
hlt
test
dec
adc
add
sbb
sbb
mov
adc
fld
in
push
or
fcmovnb
xor
inc
push
sti
lock
fnstenv
push
mov
push
ror
ja
inc
sub
mov
in
lahf
push
call
pushf
(bad)
and
mov
fwait
xlat
arpl
stos
psrlq
xor
push
sbb
inc
and
(bad)
jmp
and
mov
add
fsub
push
jp
popf
and
idiv
and
cmp
shr
push
test
push
sti
into
jp
fsubr
push
inc
fnsave
lds
in
sub
mov
sbb
adc
xlat
scas
mov
xchg
xor
stos
jg
sbb
imul
adc
mov
in
adc
sbb
cli
(bad)
adc
popf
jmp
cmp
fld
bnd
rcr
add
push
iret
sub
outs
sar
and
scas
aaa
scas
push
int
sbb
sub
es
mov
mov
enter
imul
cmp
mov
cmp
mov
out
imul
aam
ror
popf
inc
sti
lds
jno
pop
push
add
push
push
repz
out
xor
push
pop
inc
push
ins
lock
push
sbb
test
out
push
push
add
or
cmp
sub
add
mov
adc
es
stos
fs
ds
dec
icebp
push
nop
sbb
xchg
sbb
sbb
repz
fisttp
bt
aad
mov
ror
and
into
(bad)
out
jmp
xlat
outs
outs
nop
imul
sub
fdivr
push
mov
bound
xchg
mov
out
fidiv
adc
or
aaa
aaa
outs
test
int
lods
out
xor
push
mov
dec
jl
pop
xor
div
xchg
dec
inc
sub
pop
add
mov
xchg
leave
aas
stos
(bad)
inc
pusha
push
adc
inc
adc
cs
stc
int3
push
cmps
mov
cmp
imul
xchg
dec
dec
push
jns
inc
fisub
mov
arpl
repnz
push
out
pop
inc
or
xchg
ret
mov
mov
shr
(bad)
lahf
imul
inc
jno
fldenv
add
xor
popf
loop
nop
sbb
pop
stos
push
nop
je
sub
div
sub
and
dec
push
push
scas
xchg
ret
sti
addr16
repnz
out
shr
pop
add
adc
dec
test
into
xchg
ja
jmp
xchg
movs
(bad)
sbb
xor
or
(bad)
out
enter
xchg
mov
inc
mov
scas
cmp
stc
and
dec
jb
ins
in
mov
call
fs
adc
ins
push
lock
xor
mov
push
cmps
rol
push
adc
popa
bnd
xchg
jb
add
push
or
inc
pushf
mov
retf
fild
adc
sub
jo
in
idiv
and
xchg
mov
inc
icebp
sub
jno
and
popa
shl
inc
mov
aad
loop
adc
cmp
jle
les
jae
jmp
xor
mov
movs
and
inc
hlt
adc
dec
xchg
sar
jno
and
(bad)
data16
fwait
cmps
sti
aad
and
jecxz
ror
fmul
rcr
fiadd
push
ins
xor
cmps
or
stc
jmp
iret
add
cmp
pop
mov
not
lock
cs
and
mul
out
test
arpl
popa
mov
popa
jnp
jmp
mov
sbb
sbb
adc
sub
js
mov
sbb
les
ds
test
shl
lahf
shl
cs
cmp
sbb
push
lock
xor
mov
das
out
ror
imul
mov
lea
mov
out
sti
mov
sbb
inc
or
mov
jle
push
imul
xor
xchg
add
lahf
jle
adc
mov
pop
not
cmp
add
adc
(bad)
inc
daa
(bad)
cmps
leave
aad
cmp
dec
fld
dec
pusha
call
popf
pusha
rol
jns
div
mov
pop
push
aas
imul
ret
inc
scas
xor
movs
add
xor
dec
sbb
repnz
mov
fdiv
lods
(bad)
popf
mov
mov
gs
out
lds
sbb
xor
adc
fidivr
inc
repz
jmp
cmps
out
ds
sub
sub
mov
aam
pop
shl
loope
push
scas
push
push
or
(bad)
dec
xor
cli
xor
ins
retf
xchg
jnp
dec
(bad)
pop
(bad)
std
ror
sahf
aad
out
jns
jno
push
sub
jae
(bad)
sar
enter
movs
push
push
jb
sub
(bad)
xor
mov
xchg
push
call
ins
loopne
lds
addr16
inc
(bad)
repz
xchg
retf
cmp
sub
mov
push
mov
xchg
bound
xchg
jno
aaa
ins
inc
clc
(bad)
sti
jp
pushf
leave
xor
adc
les
push
into
mov
dec
sbb
pusha
xchg
cs
push
fdivr
imul
scas
add
mov
push
scas
xchg
arpl
xor
push
or
adc
add
loop
and
and
lock
jge
ss
cmps
add
add
sahf
fsubr
jmp
ror
push
fimul
js
sbb
add
leave
aaa
mov
adc
aad
pop
rsqrtps
dec
or
adc
mov
leave
out
xor
dec
das
mov
jle
sub
mov
cmc
daa
inc
jns
dec
aad
jmp
in
shl
and
pop
inc
cwde
das
mov
xor
xchg
add
fnsave
push
or
push
rol
sbb
sub
std
jg
jmp
sbb
cmp
cmps
dec
std
adc
iret
test
imul
ja
xchg
in
fcmovb
rol
scas
push
push
mov
inc
std
push
cmp
mov
sahf
or
mov
cmps
jge
add
rcl
adc
mov
mov
sub
xchg
movs
not
inc
jle
enter
repz
ds
cmps
push
inc
in
imul
mov
test
neg
jg
push
mov
jl
sar
push
cdq
loope
mov
xor
pop
add
jge
fistp
cmp
add
data16
xchg
push
outs
dec
cmp
test
or
or
scas
(bad)
xor
repnz
mov
loope
das
in
sbb
sub
jno
ror
mov
retf
ret
repnz
xor
xchg
in
adc
aad
pop
sub
sar
and
ret
inc
add
mov
jnp
leave
add
add
mov
adc
adc
loopne
push
rcl
inc
addr16
int3
push
xor
rcr
retf
adc
cli
shr
jl
pop
adc
retf
js
inc
sbb
mov
fsub
xor
mov
ds
pushf
test
push
das
(bad)
xor
fisubr
mov
dec
push
mov
pop
cs
pop
push
jecxz
push
out
inc
push
jnp
repnz
lods
pop
and
mov
mov
mov
aas
shr
ror
mov
mov
and
mov
leave
shl
lea
push
test
enter
jl
xor
in
sahf
jno
or
in
mov
sbb
mov
mov
and
sti
pop
dec
inc
int
loope
and
sbb
pop
mov
jnp
movs
imul
adc
test
jp
jb
mov
clc
out
int
cdq
push
sub
inc
mov
jno
fxch
adc
mov
lahf
mov
cmps
sbb
clc
mov
data16
jnp
aad
or
or
xchg
jp
jnp
mov
and
inc
lock
xchg
and
pop
ret
repz
jns
(bad)
icebp
push
and
xor
xor
mov
jno
adc
xchg
(bad)
mov
pop
fucom
xchg
adc
mov
sub
out
xor
jmp
out
mov
test
sahf
inc
push
push
fisttp
xchg
sub
pop
push
xchg
outs
add
xchg
ins
jb
sbb
push
nop
sub
mov
pop
cmp
sbb
ret
scas
cs
jl
dec
xchg
dec
retf
or
mov
sbb
retf
and
inc
hlt
sbb
in
push
and
adc
aad
out
call
lahf
sbb
pop
arpl
hlt
mov
inc
mov
fwait
sub
jno
lahf
cmc
jno
push
test
xchg
cmp
mov
sbb
cmps
sbb
icebp
shr
scas
xchg
cwde
add
test
dec
idiv
sar
pop
int3
pop
push
in
aas
adc
adc
push
std
sub
cwde
pop
fucomip
jmp
push
into
repnz
jne
cmp
fidiv
mov
mov
hlt
leave
dec
and
adc
in
xor
jo
aas
(bad)
jp
movs
mov
cdq
(bad)
sub
adc
cmp
xor
nop
and
dec
scas
jno
les
pop
inc
inc
sbb
pop
outs
bound
sub
inc
or
les
cmps
pop
into
repnz
xchg
xchg
and
xchg
pop
dec
xchg
hlt
xchg
fs
sub
sti
cmp
je
(bad)
xor
mov
cmps
test
je
mov
xchg
xchg
mov
stc
fsubr
sbb
mov
repz
out
fnsave
add
push
sbb
mov
in
cwde
out
push
xlat
ja
inc
mov
and
mov
retf
pop
adc
and
add
lods
add
ret
faddp
pushf
mov
imul
xor
push
jp
fild
ret
inc
mov
fnstenv
(bad)
in
xchg
inc
jle
addr16
nop
jg
bts
dec
shr
jg
jb
mov
shr
movs
adc
hlt
scas
sbb
lods
sbb
pop
mov
jae
(bad)
cli
icebp
jl
jle
lock
xlat
outs
aad
and
and
push
arpl
xchg
and
dec
clc
pusha
fwait
aaa
sbb
mov
pop
mov
sbb
or
fcmovne
sub
jecxz
or
xor
scas
sbb
int
ja
aam
adc
lock
jecxz
inc
das
or
sub
push
popf
cmp
cs
in
out
push
xchg
jb
ins
icebp
in
sti
and
daa
test
sbb
loopne
mov
jmp
push
mov
fcomp
ins
ins
div
lea
fs
mov
dec
shr
xchg
out
and
push
pop
out
dec
mov
lahf
lea
sbb
and
push
cmp
call
mov
std
and
daa
pusha
clc
xchg
xor
call
daa
lahf
fwait
cmp
rcr
aaa
jne
ror
dec
dec
add
ins
int3
cmp
lods
lock
pop
neg
pushf
(bad)
in
es
loop
adc
fnstenv
sti
inc
in
jge
bound
test
xor
jg
and
inc
pop
movs
xchg
leave
(bad)
mov
sbb
dec
sub
repnz
mov
stos
xchg
mov
xor
xor
mov
push
mov
or
cmp
or
pushf
outs
mov
(bad)
les
sbb
mov
in
int3
(bad)
call
cld
fsubrp
sub
out
ffree
mov
fnstenv
js
jo
adc
xchg
loopne
mov
or
mov
xchg
xlat
rol
mov
cmps
sti
outs
mov
sbb
pop
cdq
dec
addr16
mov
dec
inc
mov
push
repz
mul
cmps
jnp
retf
(bad)
mov
ficomp
dec
pop
push
mul
inc
jmp
mov
adc
jg
sar
pop
test
or
jbe
pop
pop
not
in
lods
(bad)
fisubr
cmp
jno
push
(bad)
arpl
in
loopne
mov
repz
ins
ror
mov
(bad)
test
xor
cmp
mov
and
test
cmps
fucomip
test
shr
loope
lods
add
mov
cmp
xchg
or
dec
mov
pop
pop
xchg
or
xor
fcom
iret
fdiv
dec
cld
inc
jne
sbb
loope
mov
jge
in
jl
and
mov
push
sbb
outs
jmp
mov
in
mov
push
jmp
jmp
(bad)
stc
xchg
mov
pop
test
fwait
mov
cmp
xchg
ds
icebp
in
aad
lea
or
push
ins
test
adc
ins
jns
fnstcw
scas
stos
icebp
xlat
test
cmp
inc
dec
mov
scas
test
pcmpeqw
hlt
and
cdq
adc
retf
xor
push
arpl
cmp
jo
in
retf
dec
ret
xlat
add
adc
mov
inc
pop
stos
xor
sbb
lods
sub
push
inc
jl
test
retf
mov
mov
mov
mov
push
cmp
addr16
in
cmps
jmp
adc
loop
into
xchg
je
jno
inc
mov
sub
cmp
cmp
ret
es
lods
xchg
aas
iret
add
mov
mov
push
(bad)
mov
xor
inc
pop
jo
or
xor
enter
lahf
or
add
sub
mov
ds
and
ja
daa
in
adc
sub
dec
fst
sbb
sar
je
into
and
mov
pop
jecxz
push
cmc
xor
data16
sbb
dec
mov
jb
dec
addr16
dec
sbb
cwde
outs
mov
xor
xor
pop
retf
push
(bad)
addr16
shr
cmp
pop
mov
ss
int
mov
mov
inc
das
cmp
call
and
repz
subps
and
pop
and
cdq
and
adc
arpl
add
and
retf
(bad)
sbb
sub
hlt
jns
repz
dec
sub
mov
mov
scas
dec
pusha
shl
pop
sahf
(bad)
lock
stc
add
(bad)
jmp
clc
xchg
pop
iret
test
or
xor
leave
xor
bnd
(bad)
fucomi
mov
(bad)
out
sub
push
scas
test
shl
imul
cmp
shl
push
cmps
push
sbb
std
mov
out
add
pop
in
mov
xor
push
rcl
out
cmps
push
pop
sbb
dec
dec
add
scas
xor
inc
pop
xor
pop
(bad)
xlat
mov
call
and
sub
popa
lea
adc
or
sub
aas
mov
ins
xchg
bound
aaa
or
call
sub
addr16
mov
and
fistp
mov
xchg
and
xor
loopne
adc
outs
jns
push
stos
pop
bound
loop
stc
inc
jle
sub
xlat
nop
xchg
mov
out
xor
push
nop
xlat
sub
xlat
xchg
and
mov
lds
dec
dec
outs
cmp
popf
in
repz
sub
fwait
outs
jg
mov
sub
inc
sub
inc
and
mov
mov
or
sub
jle
aad
sub
fcmovb
sbb
sbb
repnz
push
aas
pop
aam
jle
outs
mov
xchg
ja
sti
icebp
cmp
jno
daa
mov
inc
les
pop
cmp
fnstsw
jns
xor
sbb
and
iret
mov
pop
xor
loope
fucom
test
xchg
rol
test
das
adc
cli
ret
clc
push
push
retf
push
push
jge
test
or
dec
jnp
and
or
jns
cmc
jl
test
push
xor
test
push
dec
loope
(bad)
add
aas
push
or
push
out
retf
sti
inc
cdq
sub
outs
mov
pop
adc
mov
pop
push
test
pop
out
iret
add
mov
test
mov
aad
rol
jle
dec
mov
sbb
pop
imul
loope
cmp
dec
scas
in
cmp
je
push
sub
sub
and
mov
jmp
(bad)
lock
(bad)
jl
jnp
jmp
aam
sbb
jo
lods
cwde
inc
gs
dec
mov
push
aas
retf
pop
sbb
cld
mov
icebp
mov
and
push
(bad)
push
test
mov
aad
push
push
mov
jnp
push
shl
adc
loopne
or
(bad)
jae
push
pusha
mov
loop
xchg
adc
daa
sar
test
rcl
pop
sahf
cmps
int
xchg
sbb
(bad)
dec
jle
movzx
sar
mov
fisub
push
dec
dec
imul
aam
call
mov
or
jg
cmc
jns
cmps
dec
aam
mov
jno
push
jns
es
or
pop
pop
lods
les
xchg
jns
fbld
mov
aad
jle
jae
jb
cdq
sbb
pusha
add
sub
mov
aas
cmps
arpl
aaa
push
scas
sub
sbb
push
xor
bound
call
push
rcl
push
mov
in
push
sar
loope
popf
sbb
xchg
jmp
jnp
adc
lahf
pop
imul
inc
(bad)
adc
dec
inc
and
xchg
outs
jae
addr16
sbb
xlat
stc
bound
enter
jl
das
stos
lahf
out
xchg
(bad)
push
mov
xlat
adc
loope
mov
lods
(bad)
lock
mov
xchg
pop
jb
mov
adc
cmps
(bad)
push
xor
inc
sub
(bad)
xor
and
mov
ss
mov
mov
lds
adc
push
and
xor
rcr
inc
nop
daa
ror
cwde
fnstenv
sub
and
jae
and
lahf
mov
shl
or
cmps
call
(bad)
cld
xchg
stos
enter
dec
loope
aam
imul
out
outs
and
in
in
js
mov
xor
xchg
xchg
loope
ret
out
mov
sbb
mov
ins
mov
nop
xor
loop
pop
lods
and
mov
call
and
cmp
sbb
mov
retf
and
and
mov
adc
and
fmulp
(bad)
les
xchg
pop
jb
jp
data16
sti
shl
test
pop
movs
movs
sti
ins
mov
jl
and
rcl
jl
retf
mov
xlat
cli
adc
pop
sbb
or
jb
add
repz
test
cmps
aam
outs
inc
push
xchg
scas
test
xchg
int
ret
and
inc
sub
mov
push
stos
mov
and
fs
sahf
sub
mov
ficomp
lods
pop
rol
jne
cmp
mov
cmp
inc
cli
sub
mov
xor
mov
mov
lods
add
shl
inc
ds
dec
test
add
mov
pop
pop
stc
lods
adc
jg
or
mov
lock
test
push
adc
mov
dec
sub
call
iret
stos
clc
pushf
mov
cmc
adc
lods
popf
mov
cld
arpl
mov
inc
aas
test
dec
jns
scas
das
inc
mov
mov
imul
pusha
cs
xchg
jle
sub
jmp
fsub
push
pusha
es
out
xor
int3
pop
xchg
sbb
outs
iret
mov
mov
fstp
and
mov
ficom
iret
dec
ins
sbb
cmp
stos
dec
into
mov
stos
std
imul
mov
push
jne
fsubr
jnp
xor
imul
adc
in
push
dec
add
jnp
adc
mov
inc
imul
outs
jb
neg
hlt
add
imul
mov
leave
jae
jg
aaa
movs
cli
ja
push
les
or
test
ins
sbb
or
fcom
and
mov
xor
pop
mov
xchg
xchg
and
cmp
sti
out
into
push
or
shr
bound
in
or
and
jmp
push
test
add
mov
fcmovb
ret
clc
or
mul
dec
imul
rol
fisub
mov
mov
push
pop
mov
xor
lahf
sub
jp
arpl
dec
sti
add
sahf
xchg
fsubr
jmp
mov
pop
addr16
jl
rol
push
add
ins
int3
cdq
inc
fiadd
fsub
test
jns
dec
inc
loope
lea
dec
dec
adc
xchg
mov
adc
jns
jbe
repz
stos
adc
dec
cmps
std
stos
in
addr16
rcr
(bad)
cmp
iret
and
and
adc
int
xor
xor
lahf
jnp
add
sbb
sbb
or
dec
xchg
movs
pop
mov
stc
xchg
out
ret
mov
sbb
sbb
inc
je
cdq
push
lods
sbb
jae
push
sbb
push
jo
xchg
in
push
cwde
or
aam
sbb
pop
jb
xor
dec
pushf
(bad)
pop
adc
adc
not
call
popaw
pop
call
cmps
and
push
out
mov
adc
gs
arpl
lea
jle
(bad)
jno
shr
outs
mov
shr
xchg
and
sub
imul
(bad)
outs
ss
popf
test
ficomp
add
dec
das
loope
pop
mov
jge
fcmove
mov
jl
adc
fcom
adc
stos
xor
adc
push
xchg
pop
je
hlt
ins
sbb
jae
push
lea
mov
or
add
data16
shl
lods
daa
jmp
push
ficom
mov
or
mov
data16
inc
cmps
jnp
and
ja
xchg
xchg
loope
xchg
ins
add
xchg
add
sbb
and
inc
xchg
(bad)
xchg
mul
push
fadd
mov
sahf
loope
push
aas
jmp
sahf
popf
jae
cdq
sub
push
mov
push
ja
lock
imul
clc
xchg
sub
repnz
imul
sahf
cmc
mov
clc
ss
jno
adc
mov
and
xchg
sar
cmp
jmp
mov
adc
and
mov
pop
cli
test
pop
int
dec
cmps
pop
shl
cwde
in
sub
cs
adc
or
cmp
fwait
jb
jg
jmp
or
outs
or
sbb
stos
and
xchg
adc
div
and
cs
in
add
adc
movs
mul
adc
push
ja
lds
inc
dec
pop
out
mov
cmp
daa
xchg
in
fstp
push
mov
xor
jmp
mov
loop
fisub
fmul
jle
inc
cmps
outs
pushf
push
test
mov
out
das
and
cdq
cmp
rol
sub
jmp
arpl
pop
mov
cmp
xchg
mov
inc
loopne
das
mov
mov
and
es
cs
xchg
adc
or
in
sub
in
(bad)
pop
xor
push
push
mov
scas
call
shl
or
inc
add
shl
jmp
xlat
ds
test
or
daa
and
push
jge
and
or
and
xlat
fidivr
inc
sub
out
xor
shr
movs
or
sbb
lds
test
icebp
pop
cs
mov
test
pop
jl
inc
pushf
fmulp
xchg
ss
xchg
ror
or
cli
mov
out
clc
lods
push
jecxz
xchg
iret
int
xor
jbe
mov
outs
mov
(bad)
out
cwde
(bad)
cmp
call
imul
(bad)
or
shl
pop
mov
mov
dec
xor
dec
pop
cmp
adc
push
jns
or
mov
or
outs
ret
dec
mov
pop
jbe
push
pop
adc
dec
ror
push
cmp
in
inc
div
es
or
inc
int3
sar
sbb
test
xchg
xchg
inc
xchg
mov
xor
test
(bad)
adc
stos
pop
and
jmp
test
loopne
into
in
ds
fsubr
popa
dec
rcr
xlat
or
icebp
aas
push
and
(bad)
in
inc
jl
mov
pop
and
mov
lods
mov
and
ret
push
jp
or
add
jecxz
dec
clc
or
aas
push
jb
or
mov
je
loope
pusha
mov
xor
mov
xchg
test
in
fnstsw
jmp
cs
lahf
and
inc
inc
in
popa
or
data16
xor
dec
scas
or
xchg
aaa
pop
pusha
loope
cwde
xchg
pop
idiv
sbb
cmps
(bad)
push
rcr
in
loop
daa
add
ror
or
xor
data16
shr
pop
mov
(bad)
imul
ror
and
aas
pop
inc
push
adc
std
mov
cmp
adc
add
sub
popa
out
inc
xor
dec
pop
hlt
(bad)
dec
add
mov
stos
(bad)
rcr
mov
loop
ja
call
jmp
data16
fwait
popf
loopne
bound
sar
fwait
gs
ret
xor
leave
int
cmp
shl
jmp
mov
(bad)
pop
retf
sar
mov
test
movs
lea
mov
test
test
(bad)
pusha
push
mov
push
mov
push
shl
and
dec
xchg
push
mov
and
inc
adc
hlt
fs
fisttp
xchg
or
retf
pusha
ret
ret
enter
mov
clc
adc
xor
pop
dec
in
ins
sub
fsubrp
pop
sub
pop
push
mov
mov
adc
out
stos
test
mov
ja
sub
shl
xchg
dec
sub
ror
test
fsubr
mov
mov
fisttp
(bad)
in
cmp
xchg
out
xor
lods
or
dec
pop
mov
leave
pop
rep
cmps
cdq
fs
pushf
sub
sub
ja
or
retf
mov
bound
xchg
adc
push
cld
sub
and
sbb
in
jno
jae
dec
sbb
arpl
jns
rcr
xor
sub
ret
sbb
mov
mov
xlat
int3
or
jp
stc
icebp
push
mov
jle
or
(bad)
mov
fisub
stc
push
into
fs
out
js
xchg
stc
and
and
and
addr16
dec
cld
dec
mov
sbb
pop
cmp
lea
or
push
(bad)
ret
div
xrelease
(bad)
ins
movs
and
(bad)
ins
push
aaa
cmp
mov
psubd
jns
pop
dec
cmp
xchg
dec
(bad)
mov
idiv
mov
ror
push
test
jns
jmp
stc
adc
cli
fs
fcmovbe
cmp
daa
stos
or
sub
stc
push
rcl
cmp
mov
sti
xlat
sbb
ss
js
pop
fwait
or
int
ret
mov
mov
mov
sbb
ja
rol
gs
pop
sub
mov
cmp
loope
and
adc
mov
xor
ficom
in
pusha
fcmovnb
inc
mov
add
push
dec
or
xchg
(bad)
jo
test
data16
xchg
mov
push
int3
pop
adc
pop
xchg
add
fst
stos
pop
mov
add
and
push
outs
cmc
hlt
rcl
xchg
xor
jne
outs
iret
inc
fldcw
xchg
cmps
inc
xchg
jae
nop
popa
jo
not
(bad)
pop
or
xchg
retf
mov
xor
cmps
outs
xor
push
inc
xor
scas
ficomp
call
push
lea
inc
mov
dec
out
fwait
out
les
and
sti
sar
push
(bad)
ror
mov
mov
iret
mov
cld
adc
sar
(bad)
std
loop
stc
(bad)
loope
cmp
shl
fwait
or
lods
dec
mov
mov
dec
sub
jge
dec
mov
fbstp
jno
mov
arpl
cmovg
repnz
push
push
mov
xor
lock
pop
cmp
sub
pop
push
add
mov
int3
out
cdq
fisub
or
call
test
jmp
test
call
outs
in
or
neg
loope
jnp
jp
add
xchg
or
stos
in
add
iret
mov
push
mov
out
in
mov
push
ret
fist
fstp
popf
movs
das
cmp
sub
mov
dec
fnstenv
push
jmp
loop
pushf
mov
ror
(bad)
leave
icebp
dec
dec
dec
sbb
sbb
hlt
dec
push
sbb
sbb
xor
or
mov
sti
push
int3
icebp
or
mov
ja
xchg
in
xchg
xchg
(bad)
jmp
ror
je
xchg
jle
(bad)
cmp
dec
out
fstp
mov
pop
jmp
pop
xor
mov
sub
xchg
das
adc
(bad)
fisubr
int
sub
test
sub
xchg
inc
(bad)
xor
jb
jp
sahf
adc
icebp
(bad)
adc
outs
adc
push
mov
sbb
inc
cmps
ror
rol
push
mov
dec
xchg
sti
add
push
idiv
scas
xor
adc
pop
mov
stos
jo
std
outs
rcl
mov
cmp
and
pop
es
clc
outs
lods
xlat
and
jmp
dec
gs
mov
stos
repnz
cs
dec
sbb
push
dec
aam
cmp
inc
call
lock
mov
add
repnz
cmp
add
fnstenv
push
push
xor
dec
fldenv
dec
cld
stos
int
inc
cmp
cmp
cdq
bswap
pop
and
xchg
leave
cli
mov
jmp
jge
pushf
mov
push
in
and
stos
mov
mov
pop
in
push
(bad)
in
mov
leave
cmp
jnp
or
jno
int3
jb
xlat
(bad)
ja
mov
push
(bad)
and
in
push
dec
and
mov
push
pop
push
jnp
sub
and
(bad)
cmp
mov
push
pop
jmp
lods
add
sbb
pop
or
test
mov
icebp
fwait
push
idiv
jb
fsub
out
movq
outs
pop
mov
imul
scas
ret
inc
aas
xchg
xor
sub
sti
sbb
jns
sub
dec
retf
jne
out
popa
repz
push
aad
dec
xchg
mov
clc
scas
test
shl
push
scas
test
mov
dec
pop
inc
xor
mov
jns
mov
add
jmp
mov
fwait
repz
fstp
scas
cli
pop
lahf
mov
jge
aas
inc
push
lods
jns
data16
cmp
(bad)
jg
fist
xchg
mov
scas
jecxz
aam
mov
push
sub
and
pop
aad
loope
out
xor
pop
(bad)
cld
dec
push
mov
xchg
and
pusha
test
inc
mov
(bad)
cli
orps
dec
shr
daa
ja
dec
pop
aas
xor
bound
or
jp
xchg
imul
mov
dec
sub
in
daa
leave
out
add
cmc
or
add
fdiv
mov
inc
mov
sub
js
pop
ret
test
(bad)
imul
je
jmp
test
ins
sub
(bad)
out
mov
mov
and
addr16
xchg
mov
fsub
and
cmc
popf
ret
aad
xchg
aas
sub
ss
inc
(bad)
fistp
cmp
dec
sub
mov
pop
in
fsub
in
scas
xchg
jle
inc
pop
and
pop
or
dec
jp
outs
les
aam
pop
ror
push
push
sbb
leave
push
loopne
cmps
std
sbb
dec
add
xchg
retf
mov
adc
test
movs
icebp
into
int3
leave
mov
xor
pop
loop
bound
in
(bad)
push
jmp
xchg
loopne
push
inc
dec
or
fsubr
mov
jb
js
test
push
ret
aam
out
aaa
mov
stc
enter
fcom
jmp
(bad)
popf
mov
dec
and
je
sub
lods
mov
push
repnz
in
mov
aad
jne
jnp
dec
out
(bad)
repnz
xchg
or
dec
dec
int3
pop
inc
aaa
push
push
pop
sub
add
lods
dec
pop
and
aaa
push
jge
(bad)
idiv
mov
(bad)
outs
jne
mov
mov
jmp
aaa
or
(bad)
push
shl
repz
push
jae
adc
(bad)
fldenv
aaa
imul
jmp
sub
mov
add
bound
jge
ins
and
adc
imul
fistp
or
(bad)
mov
pop
mov
sub
inc
mov
fwait
add
call
push
cmp
(bad)
jae
out
xchg
aad
outs
mov
mov
cmp
dec
xor
xchg
pop
repnz
ins
outs
sbb
and
and
sbb
pop
dec
push
xchg
mov
stos
jns
sahf
sbb
adc
nop
popf
clc
(bad)
movs
or
les
hlt
push
(bad)
int3
out
bound
inc
adc
sbb
dec
mov
outs
xchg
push
xor
inc
sub
retf
stos
mov
stos
inc
sar
and
push
(bad)
dec
(bad)
(bad)
push
jne
fwait
adc
std
mov
in
xchg
xchg
icebp
mov
sti
and
add
jmp
cdq
cmp
inc
scas
xor
push
and
retf
add
jbe
push
nop
icebp
test
mov
mov
xlat
cmps
and
push
stc
imul
push
push
ret
retf
mov
push
add
fs
dec
es
std
dec
push
adc
dec
icebp
mov
lods
fs
xor
or
mov
shl
push
jmp
xchg
ins
loopne
push
retf
ror
adc
retf
les
jo
push
add
cmp
fucomip
mov
(bad)
mov
mov
push
xchg
mov
add
mov
jo
pop
ror
and
mov
cli
out
test
nop
mul
fucomp
scas
sbb
push
and
ins
xchg
gs
sbb
cmp
adc
fisub
xchg
mov
or
fmul
xchg
jge
mov
ficomp
das
mov
jg
and
cmp
jno
rol
in
jnp
cmp
dec
jnp
out
in
ins
sbb
stos
or
mov
ins
add
xchg
es
call
push
in
icebp
fsubrp
adc
xor
adc
in
clc
outs
mov
sub
mov
ss
outs
out
movs
add
je
pop
in
push
sar
jb
push
rcr
retf
mov
dec
into
inc
add
push
mov
adc
popa
cmp
sub
pop
add
das
int
sbb
cmp
mov
repz
add
add
ds
adc
call
inc
push
xor
out
jo
dec
test
lods
add
pop
mov
leave
scas
cmp
int3
jecxz
pop
xchg
imul
xor
xor
scas
mov
loopne
gs
jmp
cmp
inc
sub
cwde
sbb
add
repz
in
sbb
sub
int
fstp
cwde
int
adc
les
inc
sub
fcomp
mov
cmp
out
pop
and
cmp
rol
xor
sub
cmp
pop
or
mov
sbb
add
or
sahf
js
xchg
jecxz
repnz
ret
out
test
rol
push
frstor
out
in
aas
xor
mov
adc
jne
ret
(bad)
push
sbb
rol
xchg
imul
mov
mov
into
mov
fdivp
mov
dec
mov
xor
mov
inc
pushf
loopne
movs
mov
ja
cdq
movs
pop
inc
dec
addr16
cmp
mov
sub
in
push
mov
dec
mov
inc
dec
out
xor
inc
inc
test
adc
sub
in
lock
cdq
and
leave
test
cmc
(bad)
mov
mov
leave
das
cmc
sub
jmp
push
inc
(bad)
and
pop
cmps
popf
xor
aad
cmp
fdiv
pop
or
push
sbb
dec
inc
mov
pushf
shl
fadd
imul
in
mov
mov
pusha
(bad)
div
or
les
or
in
jo
addr16
sub
fild
sub
mov
stos
movs
or
mov
call
inc
cmp
clc
cmp
lahf
stos
push
(bad)
nop
xor
cmp
retf
pushf
int3
les
jl
add
and
inc
inc
lods
rol
movs
add
pop
cli
push
sub
or
test
shl
sbb
in
mul
xor
out
push
push
inc
(bad)
fs
hlt
out
dec
clc
mov
adc
cmp
inc
and
sub
sahf
enter
mov
fist
jmp
mov
mov
stc
clc
push
adc
cmp
push
fisub
addr16
mov
and
mov
hlt
clc
int3
in
test
add
and
fist
int3
sahf
sahf
aas
sub
xchg
in
pop
jl
mov
jno
push
cmps
push
xor
dec
and
out
rcl
(bad)
xchg
mov
push
hlt
fldenv
and
mov
fisubr
mov
ins
scas
xor
mov
mov
mov
dec
or
cmp
cmc
ret
or
neg
adc
mov
sub
mov
loopne
lea
dec
sbb
adc
fwait
dec
mov
add
ret
push
lea
or
out
push
xor
sbb
jns
cmp
dec
aaa
sub
in
fstp
js
add
sbb
pop
pushf
fcom
xchg
or
sahf
imul
jecxz
addr16
dec
push
outs
or
or
dec
retf
aaa
inc
aaa
adc
jnp
out
xor
dec
dec
pop
mov
sbb
push
rcr
xchg
inc
push
mov
cmc
push
aaa
dec
dec
jo
and
xchg
and
test
scas
and
mov
inc
inc
retf
inc
xchg
aad
in
and
dec
xchg
mov
dec
mov
popa
out
xchg
rcr
push
cwde
push
dec
nop
push
bound
mov
aad
loopne
xchg
out
out
imul
xchg
cwde
pop
hlt
adc
lods
add
sbb
(bad)
mov
lds
mov
imul
pop
xor
sub
jb
cmp
(bad)
xor
ret
lock
int
in
iret
mov
xchg
mov
inc
outs
mov
pushf
sub
cmc
jecxz
jne
add
pop
mov
mov
(bad)
into
jmp
out
leave
fiadd
js
dec
ja
jmp
clc
jno
push
mov
add
mov
mov
pop
xchg
push
(bad)
cwde
sbb
imul
retf
pop
xor
inc
xor
adc
int
frstor
mov
pop
mov
inc
dec
ds
cmp
mov
jmp
pop
pop
xchg
fist
jecxz
pushf
xor
fld
retf
int
movs
mov
sbb
xchg
xchg
xchg
outs
inc
sahf
sub
pop
xor
push
mov
mov
retf
sub
call
jne
push
push
loop
inc
and
or
(bad)
(bad)
cmps
or
xor
push
pop
fstp
sar
arpl
std
adc
mov
mov
xchg
fsubr
out
sbb
shl
cwde
scas
jp
retf
add
sub
mov
jbe
inc
dec
pop
fist
(bad)
popa
xor
and
mov
ja
fs
test
sub
pop
push
lods
test
scas
fdivr
jmp
mov
pop
or
add
fisttp
fmul
mov
lock
add
inc
int3
aaa
call
call
fs
ja
dec
inc
nop
lods
push
sahf
push
out
xchg
out
mov
inc
xor
lods
adc
call
adc
mov
cmp
out
add
xchg
cli
fdivrp
stos
stos
popf
mov
inc
pop
leave
je
test
sbb
mov
inc
arpl
dec
add
add
popf
jmp
mov
out
aaa
jl
pop
aaa
ja
dec
inc
or
fnsave
xor
loopne
adc
mov
sub
retf
jb
test
loopne
push
aaa
mov
and
shl
sti
fld
cmps
mov
ret
in
pop
add
inc
mov
push
push
sar
outs
hlt
adc
push
les
(bad)
push
push
jle
out
cli
xor
sub
mov
adc
fistp
repnz
cmp
inc
sub
jmp
and
cmp
mov
push
dec
test
int3
popa
cmp
inc
add
ficomp
mov
inc
mov
xchg
push
fisubr
aad
sar
fcmove
pop
aam
add
ret
(bad)
add
add
ror
add
add
mov
movs
inc
jmp
pop
mov
mov
and
push
inc
xor
push
push
nop
in
push
mov
pop
enter
mov
mov
xchg
pop
idiv
js
loope
sub
jmp
sar
(bad)
cwde
jmp
and
xchg
test
push
aam
dec
iret
(bad)
and
push
into
adc
xor
push
inc
out
or
pushf
inc
push
fnsave
xchg
in
jmp
nop
or
fnsave
push
pop
mov
mov
inc
or
gs
aas
or
jnp
xchg
inc
inc
and
add
repnz
inc
(bad)
push
sti
and
movs
and
push
pop
xchg
pop
cmps
mov
jb
jae
ret
je
out
cdq
and
sbb
pop
fadd
jne
or
mov
and
das
push
xchg
mov
push
cmps
mov
push
clc
bsr
ficom
xchg
push
retf
aad
adc
mov
xchg
adc
xchg
jb
lods
and
cmp
inc
ss
ja
jmp
hlt
cs
jle
xchg
int3
(bad)
cmp
jae
xchg
cli
cmp
lea
add
xlat
outs
adc
xor
in
sbb
js
rcr
popf
xor
int3
stc
loope
imul
fild
scas
sahf
lods
add
xchg
ror
ins
fnstsw
mov
add
add
xchg
jns
inc
fs
fisub
mov
fnsave
shl
or
dec
fxam
jae
sbb
sbb
and
out
stos
inc
nop
cmp
mov
xchg
mov
out
out
mov
retf
loopne
jmp
mov
inc
inc
fisub
xor
fimul
push
cs
jp
fwait
(bad)
cmps
iret
sbb
and
mov
sahf
idiv
scas
imul
cld
sbb
jbe
mov
ret
(bad)
pushf
lods
mov
inc
nop
pusha
mov
cmp
jnp
lea
in
fsub
pop
mov
aaa
lods
dec
adc
inc
ins
imul
out
mov
xor
test
and
lahf
sub
mov
mov
add
in
dec
add
jmp
jb
cld
adc
pop
clc
stos
popa
fnstenv
xchg
cs
icebp
in
daa
or
or
pop
in
and
or
jae
mov
inc
mov
das
or
icebp
ret
dec
in
adc
jp
addr16
ficomp
lods
push
dec
out
hlt
imul
fwait
pop
pop
sub
addr16
jnp
dec
loopne
xchg
scas
jns
push
mov
xor
adc
or
pop
and
shr
pop
inc
enter
ja
popa
stos
adc
lods
sub
(bad)
fdiv
add
daa
ror
mov
clc
adc
push
mov
aam
cwde
lds
ficomp
sbb
jae
inc
pushf
and
dec
test
shr
iret
das
imul
outs
shr
adc
fst
imul
cmp
mov
dec
lahf
pop
jg
pop
jne
mov
xchg
lods
(bad)
(bad)
lods
sub
jno
ins
bound
iret
cmp
jl
jne
jmp
xlat
pop
imul
imul
inc
xchg
and
rcl
sbb
push
movs
adc
mov
movs
bound
xlat
test
das
pop
ds
ss
into
pop
test
xchg
or
xor
scas
jg
sub
mov
sbb
jl
add
jle
ret
(bad)
sar
stc
pop
and
sbb
cwde
stos
xchg
add
xor
xlat
(bad)
div
xor
cmp
cmps
mov
cmp
in
fbstp
jo
ror
retf
neg
popa
lock
stc
(bad)
pop
cld
lock
cwde
daa
mov
retf
enter
iret
shl
cmp
mov
cld
(bad)
mov
xchg
call
or
imul
leave
mov
shl
icebp
pop
mov
jecxz
dec
sbb
sub
enter
les
inc
xchg
jae
or
push
xor
xchg
jae
inc
mov
stos
cmp
pushf
loopne
gs
into
dec
loop
call
pushf
out
mov
lods
repz
out
mov
sbb
inc
xor
loopne
rcr
ins
addr16
jge
lods
popf
(bad)
aas
inc
inc
cmp
pop
dec
ret
in
sar
mov
mov
or
fbld
mov
xchg
gs
add
jb
xchg
or
in
jg
xor
xchg
push
clc
adc
add
pop
call
jb
mov
lahf
jp
idiv
dec
adc
sbb
xchg
mov
movs
ins
outs
add
(bad)
not
aam
rcl
fiadd
and
cmp
jmp
ds
gs
pop
int3
test
ror
cs
ret
xchg
daa
ret
cmps
push
aam
ins
jmp
jl
addr16
sbb
(bad)
dec
push
rcl
sub
jb
inc
mov
pushf
add
ins
lock
mov
pop
xor
xor
adc
push
adc
arpl
pop
fs
test
lds
aas
(bad)
enter
fwait
inc
sbb
test
jno
movs
sub
inc
imul
mov
shl
int3
je
scas
ret
movs
das
xchg
jne
mov
add
rcr
sti
addr16
xchg
push
push
mov
dec
aaa
cmp
not
mov
adc
sbb
pop
push
inc
inc
packuswb
out
in
arpl
loopne
xchg
adc
push
push
leave
adc
mov
dec
or
jl
enter
adc
cmp
lahf
pop
xchg
inc
mov
(bad)
dec
dec
xchg
ret
movs
xchg
pop
pop
nop
(bad)
addr16
add
dec
cmps
cmps
mov
mov
xor
add
frstor
pop
mov
mov
jnp
call
add
iret
outs
test
movs
mov
adc
rcl
mov
mov
(bad)
adc
xchg
pop
push
inc
mov
push
jns
or
repz
inc
xchg
ins
push
inc
sbb
sbb
out
adc
loope
aad
pop
or
(bad)
mov
mov
inc
fcom
jb
push
cld
adc
cli
cmp
dec
mov
jne
sub
dec
push
adc
add
bsf
adc
inc
dec
cmp
ret
jbe
mov
push
popa
hlt
nop
pop
hlt
fiadd
or
push
scas
in
movlps
mov
add
add
sbb
mov
and
sub
or
pushf
sub
dec
inc
or
fld
push
arpl
stc
jecxz
div
imul
mov
or
ss
scas
fdiv
mov
inc
(bad)
shr
fistp
push
inc
sahf
inc
mov
push
bound
push
mov
add
xchg
adc
call
fdivp
out
scas
jmp
leave
push
jg
lods
cmp
movs
add
fistp
mov
ss
ds
mov
cmp
add
xchg
pop
jmp
dec
push
dec
in
and
sbb
add
pop
sbb
dec
pusha
sub
sub
add
div
jo
pop
sahf
sbb
test
mov
out
cmp
mov
push
or
popa
jl
sbb
push
adc
jns
inc
xchg
and
push
popf
mov
jg
jmp
repnz
les
lea
adc
aam
jl
cmp
fwait
xchg
ss
sub
jnp
iret
lds
xchg
das
sub
mov
mov
ss
repnz
jo
or
adc
out
mov
sbb
mov
test
js
push
xchg
mov
rcr
and
lahf
mov
jo
ds
xchg
sub
out
ret
push
cmp
inc
loopne
pusha
jnp
jo
fnstsw
popf
cwde
push
movs
std
imul
jp
fwait
shr
push
movs
cld
and
loopne
outs
push
fs
cwde
in
es
add
cmp
push
cmp
dec
xor
(bad)
clc
mov
xchg
push
pop
sub
add
push
sub
jl
adc
bswap
clc
sub
jp
add
xchg
jnp
es
add
shr
shr
je
cmp
push
ficomp
leave
adc
ror
adc
pop
das
leave
mov
(bad)
xor
sub
mov
outs
push
(bad)
adc
xor
rcl
fs
xchg
test
or
inc
popf
es
and
rcl
pop
ret
repz
dec
fisubr
and
cwde
or
adc
adc
hlt
(bad)
jmp
xchg
data16
(bad)
loope
push
xor
xchg
enter
jecxz
xor
mov
mov
jmp
ja
inc
dec
das
mov
xor
ret
leave
in
imul
mov
retf
mov
aaa
retf
(bad)
out
data16
cmp
jo
xchg
fidiv
std
mov
out
(bad)
and
push
fcomp
inc
and
test
jecxz
movs
pop
sub
leave
dec
add
lods
(bad)
call
cmp
adc
push
call
fiadd
mov
sub
fild
in
iret
stos
push
mov
push
stos
push
pushf
stc
std
mov
mov
mov
sbb
jle
inc
loop
out
xor
sub
dec
inc
je
loop
out
mov
mov
xchg
lahf
pop
mov
or
jg
sbb
iret
outs
shl
and
xor
hlt
or
dec
enter
jne
cmp
loopne
xchg
gs
gs
addr16
pop
sbb
or
pop
movs
aas
sti
popa
xor
xchg
and
xchg
ret
pushf
in
push
sahf
mov
adc
dec
sahf
xchg
pop
imul
or
sbb
dec
pop
dec
xchg
jne
aad
cmps
clc
sbb
fiadd
(bad)
push
into
mov
or
fldcw
or
dec
sub
mov
loope
out
jg
add
mov
or
inc
xor
adc
sub
(bad)
ins
mov
gs
std
(bad)
cmovae
inc
mov
pop
lock
jmp
cs
mov
and
sub
push
pushf
ret
(bad)
loope
jecxz
iret
inc
mov
popf
pop
outs
pop
ins
add
jle
cwde
sbb
idiv
inc
stos
lahf
rcl
out
mov
into
sub
pop
clc
xchg
push
mov
repnz
sti
cli
outs
jb
inc
and
sar
and
fisttp
test
iret
aam
inc
fsincos
dec
mov
jne
pusha
jge
pop
retf
xor
shr
jg
shr
or
ror
push
shl
jns
jmp
add
js
fnstenv
pop
pop
mov
fstp
sbb
je
cli
mov
stos
outs
pop
btc
xchg
stc
mov
jmp
(bad)
and
rol
add
pop
and
mov
in
jp
mov
outs
or
dec
and
repnz
dec
fyl2xp1
xor
retf
inc
mov
push
out
test
lods
lds
nop
fadd
in
jl
mov
in
pop
add
cmps
dec
jge
dec
leave
jae
add
dec
popa
mov
and
sbb
scas
enter
movs
cld
xor
mov
sar
ja
cmps
dec
cld
ds
jl
ret
push
rcl
(bad)
mov
aaa
sbb
aaa
xor
push
ret
daa
xchg
mov
push
cmc
xchg
xor
int
push
(bad)
scas
dec
es
mov
mov
outs
inc
push
xchg
add
add
sub
out
mov
loopne
adc
jb
lods
inc
xor
cld
pop
inc
arpl
cmp
or
out
push
(bad)
mov
shr
mov
out
int3
sbb
adc
and
and
fldenv
mov
jbe
jmp
hlt
mov
cwde
pop
pop
jg
jle
xor
nop
jbe
sahf
mov
xchg
arpl
fs
xchg
pop
dec
add
and
daa
stos
push
data16
(bad)
jns
xlat
jp
fstp
(bad)
jecxz
cwde
fnstenv
fsub
sbb
pop
cmp
fisttp
jae
jecxz
push
sub
repz
sub
retf
lds
mov
in
in
cmp
cmpps
xor
mov
and
inc
cmp
cmp
inc
jbe
cwde
and
xchg
push
adc
pop
ss
movs
bnd
sbb
fimul
retf
movs
jae
or
xor
out
sbb
aas
sar
rol
jne
shl
btr
pop
pop
ficom
adc
mov
sbb
xor
mov
adc
xchg
out
out
jmp
fwait
stos
mov
sbb
push
jnp
in
call
cmp
cmps
add
mov
mov
adc
sbb
iret
and
cwde
in
cmps
pusha
fs
jmp
adc
int
mov
(bad)
mov
ss
inc
sti
lods
and
dec
in
cmps
dec
dec
repz
sar
nop
fcom
push
hlt
mov
inc
inc
jle
sub
push
mov
out
daa
arpl
xor
sub
and
mov
sti
pop
xchg
fnstsw
xlat
ja
xor
add
(bad)
clc
outs
in
mov
aam
es
shr
mov
dec
retf
xor
test
test
je
jo
adc
and
add
push
shl
arpl
fild
jmp
ror
xlat
inc
ret
xor
ds
mov
jo
and
mov
mov
add
dec
xor
pop
std
(bad)
cld
arpl
jl
pushf
pop
rol
pop
and
ins
inc
test
add
pop
in
and
scas
xchg
or
mov
rol
and
int
sub
mov
inc
lea
mov
enter
adc
and
(bad)
in
sbb
mov
mov
cmp
test
jmp
inc
cld
lods
fimul
aas
jle
arpl
cmp
(bad)
fsubp
aam
rcr
les
push
stc
push
scas
lahf
jle
inc
or
sti
sbb
mov
scas
(bad)
into
pop
out
sahf
shr
call
jmp
cmps
pop
inc
leave
mov
stc
psrlq
je
nop
jl
cwde
pop
movs
xchg
mov
mov
mov
test
ror
mov
test
mov
ret
inc
add
fs
mov
xor
sub
mov
aam
outs
shr
pop
aam
loope
(bad)
fcomp
mov
std
dec
outs
fcom
adc
pusha
sahf
adc
(bad)
and
bswap
lahf
inc
push
lahf
jae
daa
scas
cmp
dec
mov
mul
loopne
xlat
enter
mul
ret
in
mov
(bad)
lea
adc
fmul
mov
add
call
adc
in
pop
mov
mov
pop
jmp
outs
sbb
(bad)
cdq
cwde
inc
or
gs
jecxz
and
cwde
xchg
pop
les
pop
add
stc
mov
mov
test
(bad)
repnz
or
or
mov
clc
movs
aas
cdq
push
ret
jge
mov
inc
mov
dec
(bad)
std
xor
jmp
cmp
xchg
inc
pop
loop
loopne
pushf
movs
sbb
daa
push
imul
cmp
pushw
mov
test
dec
ins
sbb
fcomp
loopne
pop
cmp
adc
aaa
fs
mov
les
jns
add
or
xchg
push
in
por
(bad)
out
fabs
int
mov
cmp
movs
sbb
jge
or
add
adc
shl
bound
sar
cmps
dec
js
les
dec
dec
loop
xchg
rol
xchg
jge
shl
sub
call
mov
and
rcr
mov
pop
sub
imul
push
push
call
idiv
push
iret
aaa
mov
pop
div
outs
fsub
jp
sub
cmps
aas
cmp
lea
push
push
je
add
cmp
ins
jnp
in
dec
das
add
mov
push
or
cdq
movs
iret
sahf
and
jecxz
jmp
jno
mov
add
adc
ss
add
jmp
adc
fs
in
lds
idiv
aas
mov
mov
mov
cli
jnp
mov
add
dec
fistp
fsub
cld
arpl
lahf
sahf
in
daa
mov
cld
adc
inc
cmc
neg
cmc
add
mov
ins
adc
and
sub
ds
inc
jmp
push
dec
pusha
jl
mov
aaa
xor
out
sub
xchg
lods
ror
imul
enter
jmp
inc
test
sub
push
jb
push
test
lea
inc
rcr
lock
xor
mov
jb
es
sbb
repz
lea
dec
dec
inc
ret
mov
in
push
shl
sti
shr
int3
cmps
pop
mov
adc
pop
jbe
leave
repnz
clc
adc
jl
jns
ror
ret
inc
and
ds
adc
sub
cmc
nop
mov
pop
lock
out
scas
call
mov
in
or
repz
xor
fist
add
sub
imul
shl
fwait
pop
xchg
mov
jmp
mov
dec
nop
int3
jns
adc
add
cmp
push
inc
(bad)
arpl
sbb
xchg
cmp
jns
mov
addr16
adc
add
mov
pop
xchg
or
and
lds
les
inc
cmp
jp
and
fsubp
xor
iret
mov
sbb
dec
pop
cdq
sub
into
push
nop
xlat
push
adc
fcom
(bad)
daa
and
dec
shl
ins
aas
jl
cdq
cmps
dec
push
addr16
leave
xchg
jecxz
add
add
pop
or
fadd
fwait
bound
pushf
cdq
dec
inc
adc
sub
adc
popa
fwait
push
repz
push
add
lods
and
(bad)
(bad)
test
inc
cli
int
inc
and
aas
pop
int
outs
loope
lods
xchg
pop
mov
jnp
fmul
std
mov
not
push
sub
out
sub
pop
inc
fcom
sub
out
(bad)
clc
mov
data16
jnp
mov
mov
cmps
xor
jb
jp
ds
fdiv
sbb
lea
sub
xchg
push
mov
out
(bad)
(bad)
or
mov
xchg
cld
lahf
pushf
cmp
and
lods
mov
and
pop
outs
jne
jbe
std
and
pop
dec
pop
ret
push
add
repz
mov
sub
xor
fiadd
inc
in
cmp
jne
mov
jecxz
inc
call
inc
enter
(bad)
enter
push
retf
in
push
in
and
sub
jmp
cdq
jns
mov
mov
leave
jo
sub
fiadd
pop
rol
xor
pop
adc
rcl
dec
push
sbb
lahf
sub
sbb
stos
xchg
daa
dec
add
icebp
jl
adc
mov
pop
adc
sub
jecxz
adc
add
inc
add
out
jnp
sub
sbb
ficomp
add
int
mov
ror
repz
pop
pop
(bad)
shl
lock
pop
mov
fsubr
hlt
or
inc
js
movs
call
push
pop
out
mov
pop
jmp
call
sub
or
call
mov
pop
lods
mov
call
shl
mov
jp
add
sar
pop
data16
sbb
shl
scas
dec
dec
add
jg
add
mov
(bad)
sbb
ins
mov
fsubr
pusha
mov
push
cmc
fs
sbb
bound
sub
je
mov
or
cmps
inc
sbb
stc
xor
rcr
jbe
or
mov
sbb
mov
sbb
or
sar
sub
mov
or
sbb
mov
sti
xchg
jge
ja
mov
mov
cli
push
repz
cmp
inc
and
fimul
or
mov
das
or
(bad)
fdivr
cdq
sub
cmp
in
mov
xor
enter
adc
lods
sbb
and
inc
es
int
mov
shl
jno
(bad)
mov
push
sbb
pop
sub
cwde
xor
jae
mov
xor
cmp
sbb
push
push
pop
les
cmps
cmp
lods
fsub
sbb
repnz
or
sub
setl
test
jne
lods
cmc
cmp
inc
push
and
cld
mov
sub
sub
mov
mov
cmps
mov
iret
outs
and
test
les
push
ins
sub
add
test
mov
not
test
test
out
mov
enter
idiv
aaa
mov
sbb
(bad)
jmp
test
in
movs
sub
enter
inc
dec
cmp
stc
sub
in
xor
imul
jl
pop
add
bound
mov
or
fnstenv
mov
ja
lea
xor
int
pop
fistp
xchg
pop
jecxz
xor
mov
es
adc
fcmovne
and
xor
xlat
stos
fcomp
call
xchg
xchg
cmp
xor
mov
ins
mov
sar
push
jl
imul
call
pop
pop
stos
push
jmp
stos
sar
aam
scas
add
mov
mov
bound
xchg
(bad)
call
xor
fld
aad
pop
clc
out
pop
push
pop
jmp
bound
stos
cwde
out
mov
dec
cmps
add
pushf
int3
add
imul
int3
pop
ss
sahf
scas
dec
outs
(bad)
jae
stos
fucomi
nop
jmp
xchg
iret
fs
pop
and
loopne
lds
mov
and
dec
push
mov
pop
xchg
mov
psrlq
jp
dec
pop
sbb
or
ss
test
aas
dec
icebp
addr16
xor
or
out
out
les
push
aad
cmp
cmp
sbb
les
jo
sub
add
add
jne
cs
mov
lahf
sub
adc
inc
sub
lahf
sbb
in
xchg
sub
imul
adc
xor
movs
out
leave
arpl
sbb
jl
aad
mov
std
xchg
(bad)
jl
fdiv
repz
std
data16
js
pop
mov
aam
cwde
xlat
rcr
(bad)
jbe
cs
push
add
int
xchg
adc
inc
dec
jns
fcom
add
dec
cmps
jb
cs
jl
addr16
popf
sub
rcl
in
int3
xor
mov
inc
xchg
push
push
ret
and
je
cmps
ror
inc
sar
arpl
push
xor
push
mov
shr
jle
mov
cld
mov
push
mov
arpl
pop
in
pushf
in
test
fwait
pop
or
ret
jo
fs
xchg
push
or
outs
pop
stc
push
call
sbb
mov
in
cdq
es
mov
push
xor
xor
inc
inc
push
rcl
rcr
int3
loopne
adc
lods
and
dec
es
shr
mov
sbb
dec
shr
leave
pop
and
fwait
sbb
(bad)
out
fst
pop
test
and
xor
iret
ret
mov
inc
inc
dec
adc
lock
adc
or
push
int
push
jne
jecxz
lea
fdivr
pop
adc
pop
add
daa
scas
or
jmp
mov
push
push
or
xchg
and
mov
mov
jae
cmps
lock
jmp
in
lahf
xor
cmp
ret
pop
push
add
pop
mov
add
and
aas
cmp
dec
imul
sub
push
cmps
cld
fs
outs
rcr
inc
jns
(bad)
xchg
int3
adc
sahf
cmps
inc
cmp
fst
into
test
pop
ret
sbb
xchg
mov
arpl
movs
aam
mov
(bad)
out
outs
jb
pop
out
pop
inc
cld
ds
or
out
jecxz
sbb
popf
inc
fist
mov
mov
ds
imul
lods
bnd
enter
pop
cmp
cmc
(bad)
in
loop
or
cli
test
sub
sub
add
jmp
mov
jg
rol
loop
cli
sbb
cdq
sub
mov
and
adc
outs
mov
inc
add
xchg
es
jmp
movs
pusha
sub
push
outs
sub
imul
(bad)
push
cli
cmp
popa
xchg
shl
add
call
rcl
and
jle
fisubr
cld
cmp
loopne
add
add
mov
push
push
xchg
inc
into
or
add
cmp
mov
sti
mov
hlt
nop
sub
iret
sahf
rcr
mov
push
push
mov
fdivr
mov
sub
mov
call
xor
fild
adc
push
loopne
mov
retf
lds
jns
call
ss
loopne
dec
adc
xchg
mov
xchg
and
jp
sbb
ins
dec
add
push
arpl
mov
sbb
xor
sti
test
sub
or
repz
clc
retf
or
mov
sub
cli
mov
ss
or
fadd
cwde
xchg
jns
mov
cli
mov
fmul
pusha
(bad)
test
xor
pop
outs
es
jecxz
sbb
inc
test
ret
fsub
dec
inc
xor
je
(bad)
mov
lods
into
fisubr
add
scas
test
into
clc
push
les
in
enter
mov
mov
xchg
pop
mov
or
je
dec
(bad)
es
clc
stos
or
inc
mov
add
adc
shl
push
jmp
cmp
lods
inc
adc
pop
cmp
test
pop
data16
push
neg
div
lods
fsub
cmps
mov
add
mov
jge
xchg
inc
int3
sti
lahf
cld
shl
sub
sub
adc
test
in
push
and
xchg
jne
out
inc
inc
sub
jge
out
jno
cmp
pushf
sbb
in
daa
fbld
jbe
sbb
cmc
leave
mov
popa
pop
ror
icebp
sahf
imul
and
lods
add
jns
xchg
cmps
push
leave
mov
ja
xor
or
or
les
pop
js
push
cmps
mov
movs
jmp
in
mov
mov
fidivr
mov
imul
sbb
pop
cmc
aas
movs
jp
mov
xor
push
jb
sbb
(bad)
popf
mov
ja
mov
mov
push
scas
lods
mov
push
fisttp
push
sahf
mov
dec
jmp
pop
push
in
xchg
idiv
scas
in
ja
mov
cmp
out
lods
mov
bound
fst
push
test
cmp
movs
imul
into
and
test
or
mov
mov
shl
call
cdq
rcr
sbb
push
jb
push
dec
cmps
xor
jmp
lods
inc
pop
es
sub
int
addr16
pop
mov
mov
xlat
sbb
mov
loop
cmps
xor
push
ins
fistp
inc
imul
cli
and
and
fsubrp
add
jmp
pop
push
sbb
sbb
stos
xchg
imul
dec
pop
mov
cmc
imul
(bad)
pushf
xor
shl
adc
cmp
jg
cwde
sbb
push
inc
sub
fs
jmp
mov
jmp
mov
outs
out
pop
cmp
sahf
push
sub
cdq
inc
push
mov
mov
cmp
fbstp
adc
into
fcomp
scas
cmp
cmp
retf
test
sar
call
pop
es
dec
jecxz
mov
stc
push
and
mov
fsubr
into
sub
mov
aad
adc
shl
sar
into
add
jne
jl
pop
push
addr16
push
ret
xchg
dec
sbb
jnp
dec
mov
pop
mov
shr
les
cli
jg
or
inc
adc
xchg
cmp
sti
add
pop
xor
xor
cli
lea
sbb
sahf
or
popa
and
or
arpl
mov
(bad)
jbe
cmp
pop
dec
repz
mov
mov
out
popa
mov
inc
ss
sbb
repz
mov
add
sub
sub
jno
(bad)
imul
lods
call
das
movs
dec
sahf
out
and
dec
add
stc
mov
data16
jecxz
xchg
nop
fcom
mov
dec
fisub
pop
jp
mov
outs
inc
jno
pop
xchg
mov
mov
aad
fnsave
push
jb
imul
inc
mov
outs
inc
shl
popa
ins
vxorps
ss
sub
push
int3
scas
jp
out
and
mov
xchg
inc
icebp
pop
stc
lea
(bad)
jmp
xchg
pop
fist
xor
sub
lahf
mov
sbb
rol
sbb
es
jmp
xchg
mov
push
add
dec
cdq
clc
dec
or
pop
mov
cmps
or
xor
arpl
sbb
cli
movs
stos
int
mov
jb
ins
mov
fisttp
cmp
in
shl
mov
mov
lods
test
jbe
loop
iret
(bad)
aam
jmp
pop
pusha
mov
jno
xor
das
popf
xchg
popa
cmps
push
fwait
loope
pusha
push
fisubr
mov
movs
xorps
xchg
jns
mov
stc
xchg
scas
fmul
outs
dec
outs
mov
(bad)
cmps
aam
adc
mov
idiv
js
push
fwait
call
inc
(bad)
shr
or
scas
mov
push
lods
call
std
sbb
movs
shr
ret
pop
and
daa
pop
pop
gs
or
mov
ret
sbb
rcr
push
xor
es
or
ins
enter
movs
fcomp
fldcw
inc
fs
imul
sub
pop
cwde
scas
jbe
mov
push
cs
test
int
fld
outs
ins
or
sar
adc
(bad)
mov
mov
mov
jg
inc
xchg
push
daa
xchg
(bad)
stc
arpl
sub
ja
outs
or
push
mov
mov
das
mov
xor
scas
push
mov
movs
dec
push
addr16
add
rcl
mov
repz
xchg
bound
stos
ret
sahf
or
fidiv
jecxz
daa
retf
push
lods
movs
dec
ja
out
mov
adc
pop
push
fcom
mov
xchg
adc
fiadd
pop
push
pop
inc
pop
xor
cmc
ins
inc
(bad)
fs
hlt
xor
push
dec
push
xor
jne
outs
ds
lock
into
stos
push
pop
stos
std
pop
cmps
xchg
fs
push
leave
cmc
pop
out
das
cmp
jmp
fsubp
inc
gs
aam
std
aam
cli
push
xor
mov
repnz
test
xor
adc
sub
sub
cli
sub
sub
mov
sbb
pop
or
xor
aas
ret
les
lahf
mov
lahf
cmp
push
test
(bad)
pop
xor
into
push
inc
mov
jno
repnz
mov
sbb
fcomp
jge
sub
dec
inc
jg
push
ror
xchg
xchg
sbb
les
xor
in
mov
pop
scas
xor
retf
popf
jg
sub
shr
fadd
mov
sbb
out
push
mov
cmp
cmp
cmp
adc
scas
les
arpl
sar
xchg
mov
push
sub
mov
sub
(bad)
cwde
add
popa
mov
push
push
adc
mov
cmps
into
into
xchg
aam
pop
mov
mov
nop
cmps
add
xor
retf
ss
sbb
mov
dec
add
test
ret
lahf
les
sbb
aas
dec
jne
stos
les
xchg
sahf
or
jns
sub
les
jmp
cmp
ds
mov
ror
test
movs
arpl
jp
into
and
out
add
ins
jecxz
pop
inc
xchg
jnp
xor
mov
imul
test
std
mov
add
mov
inc
es
mov
inc
adc
pop
stos
repz
dec
fwait
repnz
popa
xor
cmp
mov
mov
dec
ror
call
(bad)
jle
add
lds
push
shl
ss
cs
dec
inc
push
sbb
push
or
mov
enter
ins
cwde
jmp
mov
popf
mov
loop
dec
div
and
push
cmps
test
mov
(bad)
cmc
push
lea
movs
sti
push
cmp
or
ja
add
mov
pop
int
mov
mov
mov
fild
add
adc
aas
pop
adc
aas
mov
popa
inc
xor
in
je
pop
mov
in
jmp
or
in
mov
xchg
fs
popa
inc
pop
imul
(bad)
cdq
ins
aas
and
jno
(bad)
xor
ret
movs
adc
(bad)
cmp
mov
dec
xchg
pop
push
sti
mov
dec
sbb
inc
jg
xchg
xchg
imul
stc
jp
xchg
or
shl
stos
je
popf
xchg
ret
xchg
adc
xor
sub
jecxz
sti
mov
pop
(bad)
in
imul
inc
inc
hlt
fnstcw
arpl
add
pop
loopne
sysret
movs
jns
xlat
arpl
mov
sub
xor
xchg
push
test
mov
retf
fwait
and
aam
popa
or
les
inc
idiv
push
inc
ja
add
scas
sbb
xor
mov
pushf
xchg
cmp
add
dec
test
(bad)
jns
movs
popa
mov
dec
mov
xor
cli
int
or
das
or
or
jnp
jns
mov
test
aas
cmp
ds
leave
mov
enter
lea
pop
push
ins
lock
push
rol
enter
or
loop
gs
scas
sbb
lock
jmp
rol
out
call
in
data16
iret
push
jp
repnz
push
xchg
pop
out
fidiv
ror
jo
or
ret
ins
loope
int
mov
mov
mov
add
repz
into
inc
xchg
mov
cmp
jmp
mul
adc
(bad)
in
fisttp
mov
jmp
and
dec
out
add
mov
das
xchg
push
add
fbld
int3
ret
sbb
das
(bad)
cmps
cmp
dec
and
xchg
pushw
call
repz
hlt
sti
push
leave
jb
lahf
ss
cmps
or
xchg
addr16
pusha
push
lds
and
and
mov
(bad)
rcr
add
cmp
sbb
mov
and
imul
ins
je
mov
hlt
fcom
dec
lea
inc
xchg
mov
les
mov
retf
jmp
mov
push
mov
stc
mov
push
mul
imul
call
push
shr
leave
rol
dec
fwait
push
imul
out
test
mov
das
mov
lahf
dec
aam
jmp
ss
in
inc
dec
in
pusha
std
(bad)
test
cmc
mul
pop
rcl
test
enter
jle
pop
repnz
dec
hlt
adc
test
neg
jne
and
push
xor
(bad)
pop
les
fdivp
cmps
and
inc
or
lds
adc
outs
fwait
cli
inc
pop
fisub
pop
cmps
aam
jb
repnz
retf
test
sbb
add
je
test
and
out
adc
inc
xchg
push
fld
or
loopne
adc
and
outs
dec
sub
mov
mov
jmp
jge
icebp
pusha
ret
inc
call
cmp
inc
fisttp
fisttp
dec
push
pop
sbb
pop
stos
mov
(bad)
mov
rol
sbb
jmp
inc
jl
mov
sbb
sub
and
fcomp
fs
mov
mov
hlt
mov
mov
movs
in
mov
test
sbb
mov
out
add
mov
test
sub
jbe
cmps
cmc
pusha
arpl
and
sbb
pop
fist
test
xor
mov
clc
sbb
ss
sar
daa
aaa
neg
retf
inc
iret
or
test
sbb
mov
pop
dec
out
(bad)
cmp
inc
es
mov
mov
loop
sahf
mov
sub
inc
add
push
sar
loope
retf
mov
xchg
pop
out
rcr
inc
xor
add
push
js
shl
fnstenv
cmp
leave
(bad)
mov
clc
adc
into
adc
jbe
or
out
gs
sahf
sub
xchg
push
fist
add
sub
cmp
jmp
(bad)
sti
in
mov
vmovdqu
dec
fnstcw
fdiv
xchg
mov
xor
fld
fdivr
sub
sub
cs
int3
jb
stos
rol
bnd
dec
dec
rcr
popa
inc
hlt
repnz
push
out
pop
shl
retf
jmp
popa
stos
mov
inc
dec
clc
and
add
fbld
in
movs
loop
lods
ret
or
dec
dec
jmp
test
cmp
dec
retf
test
dec
push
loop
in
addr16
sbb
call
jg
adc
stos
lods
xor
sub
sbb
out
test
arpl
push
stos
push
sbb
bound
ret
xchg
push
and
sbb
xor
fs
movs
push
push
jnp
or
cmps
add
push
mov
rcr
icebp
sub
and
mov
or
jp
push
adc
pop
inc
ss
push
add
xor
dec
out
pop
scas
dec
loope
xor
cmp
mov
repz
dec
jae
inc
push
inc
mov
jb
lods
lea
je
jg
or
int
call
add
push
mov
lods
jmp
shl
xchg
add
push
cmp
sub
loope
jns
loopne
mov
add
cmp
add
push
sub
mov
xor
call
pop
shl
cmp
scas
pushf
jne
and
sub
cmp
inc
push
mov
jmp
(bad)
int
xchg
lahf
ret
sbb
mov
add
or
iret
int3
pop
add
fstp
hlt
xor
add
js
into
cmp
sahf
xchg
mov
jno
or
or
test
out
retf
jo
in
xor
aad
cmps
scas
stos
push
pushf
leave
jge
aaa
loopne
fcomp
hlt
rcl
adc
sbb
push
add
test
popa
xlat
adc
pop
jbe
adc
dec
pop
cmp
(bad)
retf
scas
leave
mov
stos
mov
repz
test
inc
jno
adc
mov
in
pop
out
xor
cli
(bad)
cli
cld
pop
rcr
pop
mov
adc
xchg
(bad)
sbb
imul
fchs
mov
(bad)
pop
retf
ds
inc
out
cwde
push
(bad)
sbb
sub
mov
frstor
push
sub
retf
addr16
sub
xor
enter
jne
mov
pop
jmp
jg
jo
imul
jns
adc
push
pusha
cmps
or
mov
mov
lahf
stc
adc
inc
ret
sbb
pop
not
or
shl
cmps
xor
es
out
fisubr
push
xor
adc
jle
les
mov
ins
add
lods
scas
xchg
ds
and
out
sti
cmps
xlat
fidivr
cdq
jbe
daa
sub
inc
push
stc
cmps
or
out
(bad)
push
pushf
int3
push
jg
pusha
shl
push
push
ror
mov
jl
add
jns
cli
xor
mov
add
sbb
fdivr
adc
ret
cwde
fptan
cmp
jmp
inc
fld
cs
ret
mov
xor
retf
push
bound
push
sub
cwde
stos
adc
mov
cmp
cmps
(bad)
cmc
or
lock
xchg
sub
inc
dec
repz
mov
mov
scas
icebp
xor
je
aaa
pop
and
ret
xor
inc
fucomip
dec
add
stc
fnsave
aaa
mov
inc
pop
mov
test
and
dec
push
xchg
iret
and
and
or
jg
adc
push
pop
or
mov
xor
mov
cli
mov
sbb
dec
mov
jmp
dec
gs
lock
lds
ret
call
lods
xor
std
shl
pusha
push
or
dec
call
adc
dec
xor
fsubr
jae
in
ss
adc
sbb
mov
movntq
lea
mov
mov
push
setb
mov
fstp
and
push
das
(bad)
dec
rcl
hlt
cmp
sub
jno
nop
loop
sbb
push
aaa
xlat
lea
dec
(bad)
ss
mov
test
push
stos
dec
pop
mov
sbb
punpcklbw
and
xor
mov
dec
adc
aas
aad
and
sar
pop
cmp
fcomp
cmp
mov
jp
sbb
sub
mov
push
inc
addr16
out
fisttp
jmp
out
add
pop
mov
mov
fistp
sub
retf
scas
push
call
push
ja
cmp
dec
dec
and
sub
ds
mov
sbb
in
mov
cmps
es
pop
and
mov
stos
je
retf
add
cmp
nop
rcl
cmp
imul
(bad)
retf
dec
fwait
or
test
sbb
cmc
push
jle
stos
jmp
loop
stos
cmp
xchg
push
adc
mov
fxch
in
mov
xchg
sub
in
(bad)
push
jle
aad
clc
int
aam
fadd
rcr
jle
fdivr
(bad)
jmp
stos
ret
enter
int3
mov
das
add
and
xchg
test
enter
jmp
cmp
(bad)
cmps
shr
sub
cdq
fld
out
mov
xchg
adc
lock
retf
inc
cli
in
sbb
retf
mov
call
inc
leave
inc
(bad)
adc
adc
mov
repnz
pop
call
dec
sub
(bad)
mov
outs
xor
lea
pop
adc
out
pop
push
test
sub
movs
je
lods
xor
push
call
xchg
inc
adc
or
add
dec
sub
add
dec
out
pop
test
mov
cmp
jecxz
cwde
mov
lods
xor
xchg
call
ss
out
xchg
ds
mov
scas
fwait
adc
xchg
inc
ins
mov
pop
aad
(bad)
jecxz
xor
out
push
cwde
cmp
xchg
pop
mov
ror
dec
fstp
sbb
add
or
out
ror
ja
out
cs
mov
inc
fstp
pop
adc
je
adc
stc
test
push
in
repnz
call
xor
fistp
sub
jns
pop
ffreep
push
or
mov
mov
repnz
inc
jp
inc
cmp
lods
aad
enter
ret
(bad)
inc
ficomp
sub
or
fwait
add
retf
leave
xchg
fwait
sahf
iret
jp
ins
sahf
cwde
out
outs
sub
jmp
psrad
addr16
and
nop
pop
jmp
dec
mov
bsr
push
rol
ret
rol
div
pop
adc
and
loope
push
dec
and
push
das
push
xchg
popa
cmp
cmp
shl
aam
or
push
fild
push
sub
inc
ds
stos
jo
es
aam
jae
pop
cld
cmp
xchg
mov
dec
cmps
test
mov
(bad)
fwait
or
movs
outs
leave
jne
fxch
lahf
cmp
in
ud2
frstor
test
mov
ins
xchg
or
add
call
inc
les
push
cmps
jae
mov
mov
imul
mov
sbb
out
test
out
jge
in
pop
or
mov
inc
cdq
not
mov
push
fwait
popa
outs
xor
out
mov
leave
(bad)
shr
mov
xchg
hlt
add
mov
cld
fadd
xchg
cs
inc
lahf
fdiv
jmp
pop
inc
sub
rol
pop
mov
sub
outs
push
jnp
pop
in
enter
or
add
je
ss
gs
adc
xor
mov
jns
inc
pop
and
push
scas
and
or
jno
js
inc
and
sar
dec
jmp
mov
inc
(bad)
mov
ss
and
outs
aam
fmul
cmp
xchg
inc
nop
jle
les
fist
xor
fcomp
(bad)
adc
ja
call
inc
in
push
inc
pushf
dec
xchg
and
adc
lahf
(bad)
push
fist
mov
cmp
inc
pop
push
jb
sbb
dec
cmps
lea
adc
scas
dec
adc
ins
out
je
xor
stos
outs
fisubr
leave
xlat
ds
mov
retf
fwait
mov
lahf
mov
stos
mov
je
push
out
xchg
adc
sbb
fild
das
ja
sti
out
ds
sub
mov
sbb
aaa
mov
mov
sbb
repz
lds
call
push
stc
(bad)
hlt
test
outs
pop
xor
loopne
ret
jbe
out
inc
stos
aaa
ins
ror
mov
push
sbb
imul
xor
mov
adc
xor
std
jb
pop
push
retf
les
pop
pop
mov
mov
push
ror
xor
sub
cmp
leave
mov
pop
out
out
mov
xchg
inc
cmp
mov
aad
pop
pop
rol
or
sbb
movs
inc
xchg
sub
outs
call
and
fdivp
pop
and
mov
sbb
cwde
pop
ins
int
cmp
pop
clc
pop
or
sbb
(bad)
or
fwait
pop
add
mov
pop
pusha
outs
xor
jge
xor
shr
mov
sar
sub
ja
sbb
fs
jp
dec
retf
js
jp
mov
stos
cmp
inc
pop
movs
xchg
jne
sub
xlat
mov
sbb
and
adc
sbb
mov
mov
sub
std
js
adc
shld
std
or
aas
xchg
repz
nop
loopne
and
(bad)
xchg
mov
cmp
dec
jnp
mov
outs
jae
pop
loop
and
loop
xchg
sbb
xchg
mov
(bad)
ins
sahf
js
xor
jb
adc
(bad)
add
shr
imul
fistp
in
popa
cmp
inc
cmc
dec
sar
xor
mov
xor
dec
je
cmp
fist
inc
and
xchg
push
loope
fld
or
xchg
gs
add
mov
jmp
or
dec
inc
repz
mov
(bad)
mov
scas
cmps
clc
inc
add
ficom
pop
pop
ror
cmp
hlt
or
inc
jno
jo
mov
fsub
add
push
aad
push
dec
mov
leave
sti
dec
shr
cld
push
leave
push
xchg
lahf
jb
adc
mov
inc
add
dec
xchg
pop
repnz
mov
dec
jmp
push
(bad)
ror
mov
mov
inc
repz
mov
sub
adc
push
sub
add
out
xlat
call
retf
aad
stc
hlt
(bad)
push
lea
aam
push
ins
and
stc
test
jbe
repz
(bad)
or
cmp
cmp
outs
cld
adc
repz
xlat
loope
cmp
pop
xchg
xchg
xor
gs
inc
push
add
xor
lock
pop
mov
inc
mov
frstor
test
xor
xchg
sbb
cmc
cli
cs
push
stc
xor
pusha
loope
test
jmp
test
xchg
push
xlat
movs
jge
mov
and
fisttp
pop
mov
and
lods
pop
dec
xchg
xor
mov
and
fxch
cmp
call
fnstenv
jecxz
or
mov
cmp
repnz
pop
jg
pop
lahf
cs
or
fstp
(bad)
pop
sahf
cmp
ja
leave
(bad)
fcomp
int3
int
(bad)
adc
push
into
ins
daa
or
pop
pop
mov
jge
push
push
push
adc
aas
inc
out
inc
mov
shr
sbb
jae
ret
cmp
movs
mov
add
loop
mov
push
test
dec
cs
and
js
mov
dec
ss
pop
sar
into
adc
(bad)
pop
push
dec
dec
shl
call
cmp
stc
lock
xchg
(bad)
cmps
jl
jmp
xor
sbb
dec
jmp
(bad)
int
daa
add
inc
xchg
clc
lahf
jmp
gs
pop
dec
mov
mov
ret
jp
or
jno
push
(bad)
ror
mov
mov
cmps
mov
add
aaa
sar
cmp
cdq
or
sbb
dec
mov
fidivr
(bad)
rol
jmp
push
inc
mov
imul
nop
xchg
cli
add
mov
ret
data16
sub
int3
fimul
movs
mov
cli
or
and
mov
ret
out
lahf
shl
int
aam
add
nop
cmps
jle
fsubp
aas
push
sub
hlt
out
add
sbb
jp
adc
dec
cdq
xor
ins
jmp
clc
not
mov
inc
inc
mov
pop
mov
dec
or
popf
in
mov
ret
fimul
enter
xor
outs
cmp
xchg
mov
arpl
sub
mov
mov
loope
movs
pop
fmul
dec
daa
imul
cmps
sbb
nop
mov
mov
jg
sub
cmp
mov
dec
cmp
or
frstor
nop
cmovno
push
adc
dec
xchg
lock
fsub
cwde
scas
mov
pop
jb
popf
sub
das
or
or
cmp
lock
iret
dec
retf
sbb
pop
sbb
mov
push
(bad)
fucomp
jmp
cli
cmc
dec
xor
outs
add
add
cwde
mov
or
sbb
cli
or
pop
into
inc
xor
or
into
call
hlt
sar
sahf
adc
xchg
outs
int
or
retf
mov
sub
aam
pop
cmp
xchg
repz
mov
test
push
ret
test
mov
sahf
add
or
gs
and
jmp
cwde
lea
fmul
pop
outs
popf
aaa
shl
mov
out
cmps
shl
pop
into
xor
(bad)
sbb
push
call
icebp
sahf
jbe
iret
rcl
lds
imul
(bad)
shl
fistp
out
or
cmc
imul
jo
cld
mov
sub
push
push
cmp
jnp
imul
stos
cli
or
xchg
add
cmp
inc
je
xor
cmp
(bad)
xor
push
mov
jae
jmp
cld
and
xchg
mov
adc
scas
icebp
pop
sbb
inc
fwait
sub
movs
jle
std
and
mov
mov
add
xor
rol
inc
xchg
fcmovb
jb
jb
inc
jp
add
call
pop
mov
sar
inc
cmc
xchg
pushf
popa
sbb
stos
sbb
or
push
inc
lock
pop
outs
jb
or
jecxz
in
popf
cmp
sbb
ror
icebp
mov
jb
xor
jle
mov
in
pop
xchg
and
adc
fldenv
mov
push
imul
ss
aas
and
jno
inc
arpl
mov
shr
stos
pop
xchg
push
push
sub
sti
and
xor
out
mov
jns
out
cmp
mov
pop
(bad)
adc
mov
mov
push
test
fsub
cdq
addr16
inc
and
rcr
and
inc
fwait
or
(bad)
aas
dec
cmps
imul
jae
in
jl
sbb
popf
mul
lods
jno
cmp
popa
adc
fs
out
adc
push
in
dec
or
cmp
xor
jecxz
pop
(bad)
sub
inc
and
leave
dec
xor
data16
push
dec
jp
mov
sub
fimul
faddp
xchg
arpl
out
pop
cs
xchg
and
jle
loop
pop
call
adc
sbb
nop
sbb
mov
in
xchg
jl
ret
popf
out
retf
push
xor
ret
call
add
fwait
cmp
dec
aaa
dec
mov
pop
mov
ror
cmp
push
jae
mov
(bad)
fld
arpl
retf
retf
and
mov
cmp
xchg
lods
and
stos
mov
jecxz
add
bound
sbb
int3
mov
xchg
adc
xchg
loop
inc
mov
jmp
shr
sub
push
cmp
inc
in
cmc
retf
out
and
jmp
adc
mov
js
cmp
jge
push
and
or
sete
cmp
inc
push
loopne
sbb
mov
xchg
(bad)
cld
ret
xlat
lahf
jnp
sbb
es
jne
push
sub
lods
ss
and
(bad)
sub
pop
or
cmp
jmp
ins
(bad)
xchg
sbb
lahf
jmp
adc
push
adc
adc
inc
push
lds
xor
or
push
adc
cwde
push
jmp
std
fld
sub
fnsetpm(287
rcl
or
inc
adc
pop
inc
int
pop
sar
lds
jnp
sub
in
cmp
xor
or
xchg
mov
cmp
stc
pop
adc
cmp
xor
and
mov
fist
xchg
in
mov
sub
push
mov
add
or
pminub
jb
or
mov
jg
fs
lahf
cmps
inc
cmps
loop
adc
fcmove
shl
adc
push
pop
in
push
fstp
shl
imul
push
jb
call
in
loope
in
xchg
call
mov
pop
test
outs
popa
push
pop
dec
mov
popa
shl
shl
add
outs
shr
sbb
sub
inc
xor
stos
mov
xchg
popa
loope
add
cmp
xchg
movs
(bad)
adc
xchg
aas
inc
loope
inc
fild
int
xchg
mov
bound
pop
call
out
xchg
jmp
dec
xchg
(bad)
popf
jae
pop
rol
jnp
(bad)
pop
mov
js
repnz
mov
xchg
lds
inc
test
mov
cmp
daa
adc
xor
(bad)
jecxz
lock
xchg
jmp
sbb
fimul
(bad)
add
dec
adc
jmp
sbb
push
pop
add
xor
stos
xchg
cmp
out
stc
or
and
push
mov
add
mov
loopne
ret
push
lds
mov
lahf
dec
mov
je
pmaxsw
dec
sbb
or
js
and
jae
push
and
lods
aas
lods
cli
lods
arpl
mov
adc
imul
(bad)
loopne
iret
sub
xlat
mov
mov
lea
adc
and
xor
je
sbb
popa
sbb
(bad)
lea
sbb
(bad)
jmp
scas
mov
adc
aaa
cmp
stos
lock
mov
dec
sbb
sti
sub
add
push
push
mov
imul
fisttp
scas
scas
and
les
xor
das
hlt
call
mov
jge
mov
add
push
mov
adc
mov
outs
sar
and
add
jo
cmp
mov
mov
xor
pop
and
mov
jmp
fsubr
ud0
int3
pop
pusha
cmc
movs
mov
pop
mov
pop
push
outs
push
ret
call
push
jnp
sar
mov
mov
xor
adc
push
call
sbb
sub
dec
sub
add
pop
adc
pop
inc
xlat
mov
aas
push
adc
mov
gs
and
shl
and
fld
stos
mov
sbb
jbe
xchg
sub
aad
pushf
es
dec
loopne
mov
mov
cdq
add
mov
in
ds
lds
jecxz
sbb
jmp
imul
pop
pop
mov
mov
lock
gs
stos
mov
push
(bad)
ds
clc
or
push
scas
scas
call
out
or
in
in
jecxz
jmp
push
inc
push
inc
test
das
and
add
mov
lock
jmp
cld
xchg
push
(bad)
mov
add
not
lahf
fsub
xchg
jo
loope
inc
pop
movs
data16
dec
mov
repz
push
aaa
mov
test
mov
aas
dec
xchg
mov
xlat
adc
aad
fcomp
fldenv
sub
in
mov
test
push
imul
(bad)
jmp
cld
pop
add
cs
movs
mov
jno
les
(bad)
jb
add
pop
fcmovnb
das
mov
push
xor
and
inc
fldcw
xchg
leave
jp
(bad)
and
lods
(bad)
cs
push
xchg
int
aaa
jbe
enter
fmul
(bad)
xor
inc
pop
fst
push
jns
repnz
(bad)
loope
and
out
(bad)
and
inc
jmp
pop
adc
add
lods
jne
push
shr
push
mov
pop
in
mov
lock
(bad)
and
test
cmps
or
pop
mov
fwait
mov
ins
hlt
inc
ds
lods
mov
stos
fwait
jbe
leave
das
mov
pop
fistp
cmp
outs
and
bound
mov
sub
mov
xchg
pusha
or
loopne
call
pop
pop
push
cmps
or
aad
(bad)
repz
jl
xor
xor
dec
test
loopne
addr16
and
dec
loope
mov
adc
jns
pop
imul
mov
pop
or
xchg
sbb
loope
aam
(bad)
neg
adc
add
jp
rol
loop
into
in
not
out
std
fild
mov
fdivr
psrlq
icebp
in
movs
fstp
ffree
push
int3
das
sub
sar
aaa
cld
aam
icebp
mov
lods
inc
mov
stos
push
fadd
push
mov
ss
inc
push
(bad)
mov
iret
sar
cmp
mov
arpl
int3
and
ret
fcomip
test
push
push
jge
adc
jmp
jle
jns
fisttp
sbb
(bad)
icebp
into
cli
push
outs
ja
xchg
add
(bad)
mov
inc
outs
rol
mov
repz
pushf
test
call
ss
inc
std
xor
push
pop
sub
xchg
sub
pusha
and
cmps
cmp
outs
inc
xchg
aas
(bad)
sbb
cmp
sub
imul
mov
dec
retf
xchg
dec
jmp
cmps
ds
mov
sbb
sbb
daa
dec
call
aam
fdivr
mov
adc
inc
lahf
fild
sbb
xor
repnz
mov
adc
es
(bad)
jns
push
and
aam
dec
ret
rol
cmp
cmp
jmp
mov
lds
enter
sar
cmp
add
sub
pop
data16
ins
das
outs
mov
push
rol
lods
outs
add
sub
shl
cmp
xchg
lahf
mov
push
out
clc
out
push
fadd
enter
mov
sub
popf
daa
pop
lock
jae
jno
xor
call
cmc
cmp
xor
xchg
loope
outs
es
pop
aas
xchg
inc
mov
outs
aam
iret
fwait
aas
nop
popa
arpl
cs
div
fwait
pusha
sub
not
sub
mov
inc
sub
jo
(bad)
mov
inc
sti
mov
aad
or
clc
push
push
jmp
popf
loopne
lds
mov
jecxz
mov
jp
cwde
inc
sub
js
and
cwde
ret
xor
sbb
in
mov
and
scas
jl
dec
push
mov
scas
mov
in
mov
cdq
inc
mov
sub
loopne
cmc
loop
repz
pop
xor
xchg
scas
pop
jg
cwde
push
jl
fsubr
jae
push
mov
jno
jnp
stc
stc
retf
fcom
pop
inc
outs
sbb
dec
call
push
(bad)
fs
lods
call
mov
leave
sbb
jmp
pop
xchg
xor
xchg
fs
dec
popa
jae
mov
xchg
push
js
push
push
xchg
and
shl
test
fcmovnbe
sub
lock
pop
jl
test
ret
call
jae
ja
call
ficomp
lods
cmp
aad
test
sbb
ficom
xor
xor
inc
je
push
mov
ins
push
loopne
enter
or
xchg
mov
mov
int
daa
aaa
inc
fisubr
sbb
es
xchg
pop
and
bound
add
sbb
test
movs
iret
fisubr
cmp
mov
dec
push
jno
push
push
ret
stos
fdivr
call
sbb
adc
xchg
mul
rcl
add
ins
pop
push
in
lea
sbb
(bad)
das
sbb
mov
mov
into
dec
fwait
mov
sahf
js
bound
push
adc
pop
loopne
jns
mov
jmp
fdiv
icebp
add
jns
popa
retf
xor
and
test
add
sbb
rcl
aam
adc
pop
sub
ins
cmp
mov
mov
mov
mov
push
(bad)
xor
add
outs
pushf
dec
clc
or
test
fisttp
shl
cdq
stos
jne
add
jg
cmp
and
jno
(bad)
mov
cmp
lds
jmp
push
test
cmps
ret
ror
mov
out
xor
mov
pop
push
ds
(bad)
(bad)
mov
push
pushf
push
or
sub
xchg
mov
adc
push
rcl
mov
aad
jmp
pop
add
std
aam
adc
pop
add
xor
pushf
imul
ins
lods
add
scas
lahf
add
mov
dec
mov
mov
out
sbb
pushf
add
cs
std
imul
mov
test
cmps
imul
cmp
stos
mov
iret
cdq
pop
mov
enter
shl
sub
fyl2x
scas
xor
cmp
shl
fcomp
test
aaa
adc
sbb
(bad)
and
jo
dec
in
dec
cmp
sbb
jo
sbb
inc
jo
lea
sub
xor
outs
xchg
aad
jmp
popf
(bad)
cmps
dec
or
push
test
imul
dec
xchg
stos
inc
jecxz
inc
jle
ror
and
addr16
loop
mov
mov
mov
call
add
cmp
pop
in
lahf
push
outs
sbb
jns
sub
loope
loop
mov
mov
(bad)
mov
test
pop
mov
xchg
imul
(bad)
sub
xlat
shr
loope
add
sub
scas
cdq
cmp
repz
mov
out
je
jle
dec
arpl
add
and
icebp
mov
push
cs
push
ins
stc
rol
pop
jmp
xchg
sti
lds
imul
inc
jecxz
sbb
xlat
cmp
cmc
mov
mov
hlt
dec
jecxz
sti
mov
mov
sub
or
jle
add
(bad)
ss
jnp
add
jp
dec
ins
xor
fldenv
aam
sbb
ins
sub
inc
mov
lahf
inc
int
cmp
mov
push
cld
call
and
lahf
cmp
xor
and
js
push
sbb
std
shl
mov
jmp
iret
lods
pop
mov
cld
pop
movs
cmp
ja
inc
xchg
pop
(bad)
repnz
sbb
sbb
xor
xchg
fsubr
push
mov
out
adc
inc
xor
cli
sahf
test
ret
ror
mov
sbb
pop
sbb
xor
xchg
add
popf
cdq
(bad)
sub
push
ret
inc
ret
mov
cwde
cmc
jle
(bad)
aam
xor
outs
mov
fwait
adc
(bad)
outs
pop
dec
cmp
xor
xchg
cdq
add
rol
adc
in
ss
mov
sub
xchg
int
int3
stos
add
ja
jmp
mov
loope
stos
cmc
lods
inc
scas
aaa
inc
add
je
add
ss
call
mov
mov
sbb
addr16
pushf
push
and
call
mov
test
dec
jmp
add
cmc
lods
push
mov
lods
es
jo
in
or
sar
bound
xchg
fld
cwde
sub
ss
add
adc
(bad)
jmp
add
xchg
(bad)
or
add
outs
dec
imul
push
mov
call
mov
mov
call
sub
sub
mov
pop
daa
cdq
and
(bad)
iret
ret
xor
leave
jle
nop
hlt
jb
popf
mov
xchg
inc
out
imul
push
enter
les
bound
xchg
xlat
retf
and
jecxz
aas
pop
shr
or
pop
mov
imul
cmp
sub
push
js
xor
movs
xchg
xor
pop
retf
movs
fldcw
outs
and
bound
cmps
je
int3
xchg
gs
inc
or
sub
inc
adc
jg
and
cmps
gs
pusha
in
cs
imul
in
(bad)
bound
lods
sahf
jle
dec
rol
pop
js
scas
repz
pop
inc
outs
inc
imul
and
add
pushf
or
push
aam
bound
cmp
in
push
shl
loopne
add
pop
cmc
mov
fucom
ror
xchg
ror
out
sub
out
xchg
pop
mov
mov
jne
jns
(bad)
dec
cmps
in
lods
dec
fsub
(bad)
xchg
push
movzx
cmps
test
adc
sbb
das
cmp
mov
jbe
aas
leave
jecxz
add
mov
aam
push
(bad)
call
and
inc
das
std
jl
pop
imul
cli
mov
add
mov
add
mov
mov
and
push
cmp
or
fdiv
xor
pusha
out
inc
hlt
mov
scas
imul
xchg
out
xchg
push
add
pop
jb
mov
cmp
jo
pop
icebp
popf
int3
dec
jl
add
in
xor
add
fcmove
(bad)
repz
xor
int
jecxz
jne
out
lock
dec
jne
or
cmp
mov
push
ins
pop
jns
sbb
pop
neg
pop
lods
je
(bad)
mov
xchg
adc
jmp
and
pop
clc
test
add
inc
push
not
das
es
add
mov
mov
loope
jb
rol
adc
adc
jnp
push
or
adc
inc
les
cld
icebp
cmp
out
stos
pusha
leave
mov
aas
jb
add
xor
in
es
outs
iret
test
dec
fcomp
dec
sub
imul
test
call
and
jne
cmp
pop
cmp
mov
dec
mov
mov
cmp
mov
inc
jmp
sub
das
lea
pusha
pop
dec
nop
add
sub
mov
xchg
sub
nop
fnstsw
scas
lea
ret
add
psubsw
shr
push
push
sub
js
jbe
not
call
in
fisttp
cmp
and
ja
ret
fiadd
add
add
imul
pusha
sbb
jnp
mov
pop
add
fwait
nop
pxor
xchg
outs
push
popa
mov
adc
jno
dec
lods
cld
or
int3
sar
push
cwde
mov
lea
ret
inc
fcmovu
jbe
sbb
ja
ds
mov
loop
stos
lea
aam
inc
jmp
rcr
cmp
(bad)
ror
xchg
test
repnz
mov
out
(bad)
sub
sub
into
adc
adc
adc
mul
out
cs
jp
or
mov
es
pop
add
outs
and
les
pusha
loop
mov
jge
call
out
jg
mov
fld
sbb
iret
in
jmp
test
xchg
cmps
sahf
push
icebp
mov
div
xchg
hlt
es
out
cmps
adc
jmp
outs
push
push
mov
fadd
ins
imul
das
cmp
xor
mov
mov
mov
je
xchg
jp
sub
sub
ret
aaa
dec
fistp
mov
arpl
mov
and
sub
fisub
dec
in
imul
xchg
xchg
xchg
rol
and
or
jmp
mov
push
hlt
cs
mov
jg
or
hlt
inc
mov
dec
test
js
pop
mov
push
pop
idiv
aam
icebp
cmp
dec
push
inc
xchg
gs
inc
retf
ficom
pop
lds
or
outs
mov
cmp
int3
cmps
fiadd
mov
cmc
mov
xor
add
addr16
pop
xchg
lds
and
scas
(bad)
repnz
outs
ret
pop
jno
stos
inc
ror
xor
ins
int3
movs
in
movs
loopne
xor
div
push
inc
lahf
mov
xor
(bad)
lock
jge
cmc
xlat
cmp
cmp
aaa
xchg
jmp
(bad)
ror
ins
or
lods
sbb
shr
or
adc
add
ret
retf
out
push
rcl
scas
jg
mov
call
idiv
xor
dec
popf
fild
stos
xor
aas
out
jp
pusha
xchg
dec
cmp
ins
sbb
aad
sub
sub
test
dec
inc
cwde
aaa
jbe
dec
xor
inc
jnp
(bad)
gs
jl
sar
xchg
hlt
inc
cmp
iret
jecxz
or
popf
mov
push
pop
mov
inc
pop
iret
rol
in
icebp
jb
sub
iret
jmp
sub
je
add
mov
sub
in
rcl
das
out
jge
aas
and
mov
adc
pop
mov
aam
(bad)
fwait
xlat
nop
les
sbb
inc
clc
icebp
push
ret
and
sub
out
push
or
pushf
push
mov
retf
dec
data16
inc
lods
lock
xchg
sbb
inc
stos
leave
push
sub
(bad)
ds
mov
retf
jge
scas
inc
mov
ret
retf
outs
dec
mov
ror
sub
repz
xor
into
fidiv
add
stc
imul
repz
xchg
jl
dec
addr16
mov
adc
add
adc
or
xor
test
or
push
lock
pop
stos
and
or
mov
add
xor
jmp
cmp
inc
fbld
lods
cmp
aam
popa
out
xor
cmp
jle
mov
xlat
jp
push
sahf
stos
jo
leavew
ret
jae
sahf
enter
int3
mov
lods
(bad)
mov
xor
mov
dec
lea
js
xchg
inc
jb
pop
test
mov
lds
dec
lock
xchg
ja
cs
jo
call
adc
cs
sbb
jo
rcr
cwde
pop
cmp
shl
push
adc
push
sar
pushf
jge
popa
dec
jb
cdq
(bad)
bound
xchg
stos
mov
cdq
pop
pop
retf
arpl
xor
movs
dec
dec
adc
pop
sub
nop
scas
leave
inc
loopne
fwait
cmp
je
in
cwde
mov
and
push
hlt
fwait
not
scas
mov
push
imul
pop
sub
retf
push
ins
sbb
pop
mov
push
jb
pop
(bad)
rcl
jmp
std
pop
js
sbb
cs
push
push
xchg
je
fiadd
mov
jno
ss
jo
pop
(bad)
ins
out
(bad)
std
ja
test
popa
pop
add
pop
xor
adc
mov
mov
mov
ror
or
icebp
mov
xchg
aad
add
mov
jmp
push
in
mov
push
sub
outs
push
gs
or
popa
aas
daa
sbb
xchg
mov
dec
ins
jne
xchg
fild
inc
push
out
xchg
sub
ficom
xor
in
(bad)
xor
or
sbb
mov
cmc
jp
ror
lea
inc
test
dec
sub
fisub
test
push
mov
cdq
fldcw
sub
sub
mov
aam
ja
cmps
xchg
out
in
imul
sbb
cmps
pop
bound
sub
js
and
inc
int3
push
cmp
xor
movs
iret
push
jb
jl
sti
lea
fsub
outs
rcl
mov
imul
push
out
or
shl
popa
mov
lods
lds
cmp
and
stos
jg
pop
imul
cwde
mov
mov
shr
sbb
lock
ins
mov
push
outs
mov
mov
lods
fidivr
xchg
push
or
mov
pushf
in
xchg
(bad)
scas
lds
inc
inc
mov
push
dec
adc
lods
xor
mov
cmp
(bad)
xor
pop
in
fsubr
sbb
pusha
stos
mov
sub
push
cmp
or
and
cmc
test
sbb
sbb
or
fs
or
cwde
sbb
mov
or
test
jnp
xchg
push
mov
mov
nop
mov
mov
sti
std
movs
nop
cmp
sahf
push
mov
mov
and
stos
div
mov
adc
sub
jmp
xchg
mov
inc
cmp
mov
push
cs
mov
mov
jg
aad
data16
pop
pop
pusha
addr16
pop
jno
adc
jecxz
out
enter
push
pop
bound
mov
(bad)
movs
xchg
inc
icebp
(bad)
loope
cmc
daa
adc
mov
mov
mov
stos
in
rcr
adc
lods
push
jb
retf
dec
ins
xchg
scas
movs
sbb
or
pop
addr16
xchg
in
or
sub
or
or
into
popa
add
repnz
adc
iret
inc
sub
sub
(bad)
or
jo
add
add
cmps
imul
or
pop
jl
movs
mov
ds
sti
fldpi
mov
ins
sub
dec
imul
iret
mov
leave
shl
scas
or
push
or
jmp
(bad)
jns
push
shl
(bad)
ret
sub
mov
ret
pop
dec
jp
adc
and
xchg
fdiv
test
or
dec
or
movs
mov
mov
inc
scas
push
adc
fldenv
mov
sub
sbb
mov
imul
sub
add
loop
jne
push
pusha
dec
ret
rol
dec
cmps
mov
nop
shl
jp
pushf
into
loopne
shld
adc
xor
das
aam
xchg
loope
pop
push
push
fdiv
ja
mov
pop
push
cmp
stos
push
push
loopne
call
or
clc
add
and
mov
push
pop
and
loop
maskmovq
pop
repnz
add
leave
rol
jb
das
in
adc
xchg
jmp
mov
test
pop
jp
adc
fdivrp
inc
push
jmp
lahf
push
sbb
adc
mov
mov
jmp
or
aaa
mov
ss
add
shr
cdq
pop
mov
popa
sbb
cmc
adc
jmp
ds
xchg
(bad)
test
shl
push
lods
jle
pusha
adc
inc
cwde
xchg
mov
out
repnz
fwait
mov
and
push
xor
dec
js
icebp
mov
pop
pop
mov
mov
jns
or
dec
inc
xlat
push
xor
std
cmc
mov
pushf
mov
loope
sahf
scas
out
in
mov
and
adc
iret
loop
mov
cdq
jno
(bad)
cmc
shl
sub
inc
movs
pusha
enter
pop
dec
ins
and
addr16
mov
cmc
test
jno
scas
pop
add
in
dec
adc
or
pop
mov
out
xchg
aaa
sbb
xlat
xor
push
repnz
(bad)
scas
push
(bad)
cmp
repnz
jecxz
mov
mov
cmp
out
mov
push
lods
sub
jae
das
cmp
xchg
sub
pop
push
out
(bad)
stos
fwait
arpl
pop
fdiv
(bad)
cmp
test
sbb
ins
int3
stc
call
enter
retf
sbb
dec
ss
xchg
loope
jno
push
add
lahf
das
je
lahf
sbb
jmp
lods
es
jbe
(bad)
dec
mov
add
mov
jbe
fwait
neg
sbb
mov
cmps
mov
cmp
out
fcmovnbe
adc
sbb
push
push
mov
lods
out
in
push
push
cmp
adc
add
xor
cwde
push
fld
into
sbb
fmul
dec
sbb
dec
loopne
push
sub
and
mov
sub
test
(bad)
je
fcom
mov
inc
mov
dec
fisttp
jmp
les
or
aam
xor
jle
dec
scas
inc
pop
in
sub
leave
xor
xchg
jmp
inc
and
es
or
inc
shr
adc
and
mov
adc
cmp
pop
pop
fisttp
int
fmulp
test
fadd
xchg
pop
jl
popa
xor
test
call
aaa
ficomp
in
lods
push
lods
cs
les
ja
stos
sbb
mov
jnp
pop
enter
movs
pop
jmp
add
push
(bad)
gs
inc
sahf
out
or
jbe
(bad)
pop
adc
repz
test
mov
(bad)
push
and
mov
dec
push
stos
and
ret
xchg
mov
pushf
icebp
outs
push
jae
mov
cmp
push
xor
scas
and
stos
mov
sub
js
ins
sub
jmp
jmp
loope
leave
imul
push
loopne
xor
jo
cmp
mov
inc
test
xlat
nop
mov
lods
mov
inc
add
bound
xor
lods
push
jecxz
mov
daa
fcom
adc
or
xchg
mov
(bad)
in
rcr
sub
retf
inc
retf
push
(bad)
push
xchg
cmps
mov
(bad)
lock
int
movs
dec
jecxz
mov
jo
bound
xor
aad
movs
int
push
scas
or
pop
loope
scas
popf
jb
mov
mov
mov
pop
scas
xor
and
pop
fs
cmps
jno
sbb
push
push
mov
fstp
xor
test
in
mov
add
jmp
adc
cmp
call
cmc
jo
rol
pop
icebp
mov
scas
jmp
and
test
movs
xchg
mov
cmp
das
outs
add
fbld
or
add
outs
js
or
xor
fnstcw
not
(bad)
cmc
fsub
pop
adc
sub
pushf
sub
inc
stos
inc
jbe
mov
ss
or
rcl
mov
adc
aas
in
sbb
ret
mov
and
sar
ds
mov
loop
das
das
and
in
mov
out
pop
cld
dec
(bad)
push
mov
xchg
sbb
mov
imul
std
push
and
mov
add
mov
jmp
lea
ja
or
fcmovu
movs
pop
fnstenv
push
shr
xchg
je
ret
jg
out
movs
xchg
sub
jnp
and
sub
push
jae
ficomp
movs
por
sbb
pop
or
jns
xor
outs
push
cmp
xchg
or
inc
test
mov
aam
dec
add
retf
mov
nop
mov
mov
or
into
inc
div
and
lea
data16
mov
(bad)
mov
mov
aad
push
pop
jno
(bad)
dec
push
and
inc
jb
ins
and
stos
sar
repz
or
mov
dec
pushf
xchg
(bad)
mov
loope
sbb
mov
mov
mov
push
test
cmps
jmp
retf
jg
leave
add
adc
mov
test
mov
repz
outs
and
mov
dec
mov
sar
inc
push
je
xor
movs
jno
or
hlt
loop
lds
fisubr
inc
mov
fsubr
stc
imul
test
mov
add
mov
push
adc
sub
out
xchg
in
in
sub
fiadd
(bad)
fisub
cld
add
call
push
ror
dec
jno
dec
and
shr
push
jno
push
les
jl
pop
and
inc
(bad)
aas
mov
and
jo
dec
cmp
jmp
arpl
cs
mov
outs
bound
aam
loop
gs
mov
pop
and
mov
stos
sub
push
ss
test
xor
(bad)
nop
pop
xchg
les
fisubr
add
shl
xchg
scas
stos
adc
and
jge
repz
jmp
es
adc
mov
ins
sub
aaa
pop
stc
mov
xchg
leave
pop
(bad)
rcl
push
add
adc
mov
pushf
in
fnop
mov
sbb
retf
imul
sar
or
mov
pop
and
pop
inc
retf
popa
or
and
pushf
mov
or
cmc
cmc
inc
popa
mov
mov
xor
pushw
push
fldenv
pop
inc
out
(bad)
dec
mov
dec
fcmovnbe
sub
adc
mov
sbb
jns
icebp
js
aas
repz
and
adc
test
mov
xor
and
cmp
ret
or
xchg
fwait
mov
rcl
mov
nop
fld
sbb
pop
ret
jno
lods
cmp
ret
mov
push
jmp
jns
fs
cli
fcomp
add
dec
jo
sbb
push
mov
sub
aas
dec
mov
xor
addr16
in
or
pop
and
mov
fimul
loope
cmp
jl
fimul
pop
mov
int
(bad)
repnz
js
out
popf
push
inc
dec
dec
inc
je
ret
or
jge
pop
xchg
and
fst
sahf
adc
ret
and
sub
cmp
dec
stc
xchg
jmp
cmp
(bad)
ficom
ss
cmps
pop
mov
xchg
imul
jecxz
jmp
jb
or
rol
or
imul
das
adc
gs
jge
jmp
sbb
add
push
inc
adc
(bad)
jno
sub
xor
(bad)
(bad)
scas
inc
xor
outs
push
lds
jb
in
int3
call
pop
shl
jae
push
sbb
sub
pop
rcr
mov
add
xor
add
dec
rcr
xchg
out
jge
push
inc
jno
add
neg
popa
scas
sbb
pop
xor
xor
call
scas
mov
jmp
in
inc
pop
mov
out
mov
je
adc
mov
jne
mov
cmp
inc
pop
(bad)
dec
and
shr
test
or
push
iret
adc
sub
jmp
addr16
inc
js
cmp
ret
(bad)
inc
or
adc
xor
adc
in
cmps
jne
jecxz
push
cmp
or
mov
test
and
xchg
cmps
pop
test
and
std
sub
mov
lock
sub
and
lods
mov
inc
arpl
mov
xchg
or
inc
jge
add
sbb
sub
data16
lahf
jl
cli
hlt
inc
adc
cmps
mov
sub
lahf
add
hlt
inc
iret
scas
sahf
cmp
adc
dec
mov
or
mov
sbb
push
inc
je
dec
test
sub
lods
lds
into
add
rcl
gs
enter
(bad)
daa
movs
sub
sub
ret
mov
lds
pop
bound
and
bound
pop
xchg
xchg
icebp
das
je
ret
or
dec
movs
lock
mov
and
cmp
mov
jg
cli
mov
sbb
ret
aam
mov
cs
mov
lods
shl
hlt
add
pop
sbb
mov
popf
mov
mov
(bad)
popa
aaa
mov
fld
push
leave
inc
or
push
ds
in
jnp
es
pop
ins
cld
push
mov
sti
adc
pop
mov
pop
xchg
(bad)
fist
mov
xor
sub
and
mov
add
pop
adc
js
out
dec
jecxz
fimul
adc
gs
xchg
xchg
into
mov
mov
ja
cmps
jmp
popa
lds
test
inc
pop
fiadd
iret
rcr
fdivr
in
push
and
inc
add
cmp
pop
mov
dec
(bad)
scas
aaa
data16
sar
adc
retf
sti
xchg
pop
ins
ins
xor
mov
sti
push
jnp
shl
call
(bad)
and
dec
retf
das
mov
or
or
add
aas
call
in
rcr
mov
out
pop
shl
stc
dec
mov
or
dec
jns
push
cdq
rcl
adc
sbb
iret
sti
cmp
movs
stos
and
leave
das
arpl
cmp
mov
push
aas
addr16
sbb
push
outs
mov
stos
sbb
std
xor
dec
push
cmps
cmp
sahf
popf
ror
mov
movs
xchg
xchg
mov
mov
cmp
add
jg
shr
pop
jg
xchg
xor
pop
cmc
mov
jp
jmp
in
out
mov
jg
xor
aad
lock
out
mov
in
adc
mov
and
aas
inc
inc
sar
mov
sub
enter
test
adc
sub
fld
aam
push
cdq
ficomp
(bad)
clc
jbe
lahf
fld
bound
arpl
mov
sub
adc
inc
rcr
and
jmp
mov
and
and
cmp
adc
shr
fs
pusha
dec
cmp
mov
pop
dec
sahf
scas
jae
adc
adc
jb
inc
pusha
mov
adc
nop
fbstp
inc
mov
fstp
sbb
pop
xchg
pop
(bad)
cdq
jmp
xor
out
cmp
stos
dec
jns
mov
adc
es
cs
movs
lods
mov
mov
cmc
cmc
dec
retf
or
cmp
add
pop
sbb
adc
cmp
jbe
test
pop
jmp
add
loop
rol
enter
inc
or
adc
icebp
stc
sub
jnp
dec
out
(bad)
stc
(bad)
fwait
clc
out
fs
jb
dec
cwde
pop
dec
or
dec
cmps
pop
sbb
cs
std
out
pop
mov
repnz
sar
outs
shl
pop
shr
into
and
add
xchg
icebp
sub
aam
cdq
outs
dec
in
shl
mov
push
out
pop
mov
jp
and
stc
add
popa
cmp
cmp
test
adc
and
cmc
cmp
sbb
scas
sub
fdiv
(bad)
xor
into
cdq
lods
pushf
gs
lahf
dec
or
push
push
push
jo
inc
jp
test
adc
retf
mov
leave
jle
adc
or
cmp
outs
and
test
int3
mov
ret
sbb
adc
mov
lods
jbe
in
or
push
pop
inc
stos
xchg
mov
addr16
adc
add
inc
mov
mov
sbb
in
pop
adc
lods
inc
fnstsw
sub
jp
mov
fild
cmc
pop
pop
jbe
loopne
pop
rcr
scas
jmp
mov
popa
push
push
mov
jp
or
or
inc
(bad)
in
sbb
xchg
test
sub
jmp
enter
int3
jno
icebp
out
pushf
call
adc
xor
inc
dec
push
(bad)
push
ds
dec
add
into
sbb
daa
gs
imul
inc
imul
xlat
sbb
je
push
stc
shl
aam
mov
pushf
sbb
sub
call
retf
cmps
mov
fst
sub
dec
sbb
dec
nop
imul
daa
mov
das
call
push
ret
mov
sbb
sahf
cmp
or
mov
std
les
fisttp
pop
push
xor
scas
pop
dec
pop
dec
pop
pusha
outs
or
push
(bad)
(bad)
addr16
in
jg
add
xchg
xchg
mov
lods
arpl
movs
int3
add
mov
push
cs
mov
mov
dec
jge
sub
fiadd
cmp
xchg
mov
sbb
jnp
lods
mov
sub
pop
jl
pop
daa
ss
sbb
add
je
(bad)
push
mov
daa
adc
jmp
jnp
ror
push
sahf
aam
stos
shr
fbld
sub
add
in
or
sbb
mov
rol
jae
popf
pop
out
and
test
sub
mov
pushf
push
fwait
xor
cmp
into
cld
lds
or
(bad)
shl
xchg
pop
ins
movs
(bad)
not
scas
jmp
jg
addr16
leave
popf
out
push
push
jmp
mov
push
push
pusha
dec
mov
or
std
cmps
in
add
ds
mov
xchg
pop
xchg
bound
xchg
sbb
iret
inc
pop
pop
imul
test
into
mov
ret
and
icebp
bound
addr16
xchg
and
scas
pop
mov
icebp
int3
in
test
and
xor
jnp
(bad)
fucomip
ret
push
(bad)
loopne
cmp
enter
cmp
sbb
xor
ret
aam
mov
and
or
xor
fidivr
xchg
out
aas
jmp
gs
inc
xchg
push
or
dec
push
cmp
mov
shl
mov
jg
shl
fld
test
inc
call
in
lods
add
cmps
pop
adc
je
outs
mov
scas
out
not
in
xor
adc
push
sbb
jnp
in
(bad)
jle
lss
lds
mov
cmp
xchg
fs
clc
cmps
cmc
pop
fcomp
cmps
dec
mov
div
xor
cmp
in
aas
dec
jno
out
adc
mov
stos
and
cmp
imul
sbb
daa
xchg
(bad)
xchg
or
lds
jecxz
mov
jge
data16
lods
push
bound
cmp
or
xor
cmps
fsub
mov
or
xchg
inc
fisttp
mov
xchg
fwait
push
cmp
loop
and
cli
setg
sub
adc
sti
mov
mov
mov
pop
pop
fistp
jns
mov
xor
push
and
fild
pop
cli
aas
cdq
popf
mov
sbb
mov
mov
rcl
push
or
add
adc
and
sub
idiv
inc
add
lods
test
add
scas
xchg
fidiv
shr
cmc
aaa
popa
les
lock
int
mov
mov
das
and
outs
pop
loope
ror
push
ja
mov
(bad)
mov
and
fdivr
or
mov
daa
jo
ror
dec
jle
in
mov
out
fwait
rcl
xchg
mov
fwait
aam
icebp
arpl
loope
sub
movs
cmp
enter
cmp
jno
push
xchg
mov
aam
mov
add
pop
push
(bad)
pop
cld
es
cwde
loopne
sar
cmc
dec
fst
pushw
std
std
dec
mov
loope
fstp
push
call
pop
xchg
call
cs
sub
add
outs
call
ficom
cmps
repz
mov
push
or
mov
xchg
outs
popa
sbb
lock
dec
mov
or
lods
or
out
pop
mov
sbb
cmp
pop
pop
and
jmp
or
sub
(bad)
adc
icebp
sbb
cmc
sub
cwde
shr
js
lahf
xlat
inc
xchg
clc
mov
outs
out
scas
cwde
(bad)
cmp
repnz
aad
jnp
mov
add
mov
stos
mov
pop
div
pop
stc
lea
cmps
push
(bad)
cmp
je
or
cmp
add
push
dec
jne
lea
or
cli
popf
cmp
mov
pusha
scas
jmp
out
and
(bad)
shl
jp
cs
sub
shl
jns
pop
push
por
push
sub
outs
xchg
xchg
call
cmps
repz
test
sahf
mov
dec
push
or
int
mov
in
loope
mov
and
ja
in
int
and
into
or
loop
mov
jmp
xchg
mov
push
mov
or
xlat
dec
push
std
nop
ficomp
xchg
(bad)
repnz
ja
inc
bound
ffree
es
jmp
dec
sti
jo
repnz
xor
aam
out
fist
sti
pusha
jl
jmp
mov
rcr
and
or
inc
push
(bad)
pop
mov
es
retf
mov
in
push
sar
jae
ret
imul
mov
ficom
jp
jge
jmp
jnp
sub
cmc
std
jns
or
or
lods
mov
out
fist
fmul
or
pop
pusha
repnz
(bad)
les
retf
lods
push
ins
aaa
jge
or
mov
adc
rcr
sbb
shl
xchg
or
xor
lds
sub
sar
xor
jmp
push
popa
jge
sub
sub
adc
fs
push
xchg
sub
jnp
loope
jg
int3
xchg
fwait
push
cs
inc
xchg
mov
aad
push
xchg
push
and
dec
push
jl
dec
push
pop
xor
sub
test
pop
mov
sub
cs
mov
arpl
xchg
(bad)
add
inc
mov
icebp
enter
pusha
stc
leave
fadd
add
mov
pop
cmps
and
stos
retf
and
xchg
push
xchg
das
xchg
aad
mov
retf
aad
test
pop
jp
add
jge
jl
in
push
(bad)
sub
mov
cmp
in
lea
aad
lods
jnp
inc
xor
inc
xor
inc
and
mov
cwde
push
jge
push
mov
ja
xor
int3
out
retf
pop
sbb
cmp
iret
call
into
mov
aaa
shr
ja
test
add
les
jbe
in
mov
js
loope
jnp
loopne
shl
adc
ficom
or
shl
fmulp
(bad)
xlat
loope
out
test
cmp
out
mov
sbb
mov
sbb
mov
adc
push
dec
shl
nop
sbb
sub
ret
fs
mov
sbb
cwde
retf
lods
push
cmp
int
neg
fmul
xor
ror
sub
push
sub
dec
push
hlt
mov
and
pop
bound
mov
scas
pusha
icebp
mov
add
ret
sbb
xchg
xor
push
retf
and
lea
sbb
sub
mov
out
push
mov
or
sbb
data16
inc
ss
or
jg
add
or
pop
aam
ss
or
mov
pop
inc
loopne
xor
lds
shl
jns
or
into
out
fwait
sti
(bad)
in
push
iret
xchg
mov
jg
jo
fsubp
pop
and
pop
xor
inc
leave
mov
fimul
xchg
cmp
clc
pop
mov
cmp
rcr
std
mov
loope
mov
iret
mov
push
fcomp
jmp
outs
push
pop
hlt
(bad)
shl
cmps
call
cmp
cmp
popf
retf
cmp
(bad)
mov
dec
in
sub
rol
inc
push
mov
shl
lock
jp
or
je
shr
xchg
cmp
(bad)
mov
mov
ins
adc
mov
xchg
les
iret
(bad)
pop
aas
or
int
jle
rcr
int3
addr16
iret
xor
cdq
test
cmps
push
popa
rol
push
add
fimul
repnz
jecxz
sub
mov
and
loop
sub
jnp
xchg
cmp
lds
retf
lods
int3
pop
jecxz
daa
mov
mov
into
mov
(bad)
mov
cld
mov
push
pop
mov
addr16
jle
test
sahf
movs
adc
mov
stos
ins
jg
fnstsw
mov
inc
fcom
xor
pushf
repnz
sub
mov
lock
lds
outs
mov
sbb
(bad)
lods
gs
ss
leave
mov
inc
fsub
adc
lds
pop
sbb
jge
in
xor
sub
std
sbb
aas
xor
aaa
mov
sar
imul
cs
test
inc
and
test
stos
fld
mov
daa
rcl
in
adc
sti
fldenv
sahf
ret
fldenv
dec
and
imul
lods
jns
mov
lahf
leave
adc
mov
pop
push
push
int
and
nop
das
lods
bound
daa
test
jmp
jb
in
loop
inc
pop
(bad)
arpl
sub
jg
cmc
ss
(bad)
test
sbb
leave
pop
aaa
pop
mov
lods
scas
add
xor
rcl
sub
push
int
or
add
pusha
cmp
jne
sahf
xchg
xchg
adc
xlat
jne
and
pop
cld
gs
jge
scas
jmp
push
imul
lea
inc
sbb
inc
add
or
mov
std
push
(bad)
repz
cmp
ins
hlt
data16
popf
(bad)
mov
adc
ins
mov
inc
sub
mov
sahf
xchg
pop
bound
test
add
dec
adc
sar
xchg
pop
xchg
add
dec
push
cmc
xchg
or
cmp
leave
ret
jge
push
xor
and
mov
pop
cmp
jge
jno
jmp
js
dec
(bad)
in
inc
fwait
shl
and
cmp
ins
adc
jae
test
or
ds
imul
sub
inc
js
aam
pop
mul
in
pop
push
or
stos
out
sbb
push
or
add
inc
imul
push
mov
(bad)
mov
add
in
push
jmp
jnp
cmp
or
push
int
pop
jb
xor
sub
xor
popa
mov
sbb
sbb
popa
or
movs
mov
and
dec
mov
popf
call
push
mov
sbb
sbb
or
outs
loope
add
add
pusha
inc
mov
jb
sbb
iret
add
and
neg
mov
mov
out
sar
std
scas
inc
inc
outs
dec
sbb
pop
mov
icebp
pop
popa
or
jmp
mov
push
cmp
xor
std
push
hlt
inc
ss
push
popf
pop
test
or
xchg
cmp
or
scas
push
clc
mov
mov
pop
scas
sub
loope
fbstp
xchg
xchg
pop
ror
outs
xchg
inc
(bad)
and
sub
jne
and
or
sbb
mov
call
add
sbb
inc
push
ret
xlat
mov
dec
outs
daa
jle
cmps
adc
mov
jnp
in
pop
stos
mov
(bad)
in
and
std
mov
xor
mov
(bad)
in
add
scas
dec
pop
and
rol
xor
mov
(bad)
mov
test
cmps
mov
int3
dec
nop
add
add
popf
dec
mov
icebp
dec
push
inc
lods
jmp
mov
sti
enter
cmp
mov
xchg
nop
push
and
pop
cmp
cli
xchg
lods
repz
call
shr
pop
(bad)
sahf
retf
clc
hlt
sub
sbb
xor
add
imul
xchg
mov
jae
rol
mov
pop
pop
push
mov
js
xchg
cwde
shr
rcr
nop
xchg
aad
sbb
jg
jecxz
mov
cmp
movs
lds
push
jae
(bad)
(bad)
sbb
mov
xlat
cmp
leave
sbb
pusha
inc
mov
inc
and
mov
pusha
dec
mov
in
fidiv
retf
movs
jnp
call
stc
jmp
adc
ffreep
and
xlat
adc
xor
xlat
jle
popa
adc
cmp
fld
jle
push
cmp
pop
jnp
sti
sub
jmp
dec
imul
xor
sbb
xor
xchg
jmp
push
fucomp
inc
popf
cdq
sub
xlat
ins
push
dec
adc
mov
cld
cld
loope
push
aaa
push
sub
shr
push
fdivrp
test
mov
dec
mov
xor
das
push
iret
fnstsw
je
movs
push
dec
xlat
stc
add
xor
mov
cli
xchg
mov
hlt
inc
in
cmp
push
leave
minps
in
and
inc
push
mov
stos
das
cs
(bad)
(bad)
test
cmp
fidiv
mov
fbstp
aaa
sub
fnstsw
popf
gs
xchg
popf
xchg
mov
pop
repnz
out
mov
stos
and
sub
and
hlt
mov
fwait
or
rcr
clc
sti
arpl
call
xchg
adc
cdq
xchg
adc
sub
xchg
push
out
inc
mov
push
ror
fistp
inc
add
rcl
dec
push
cmp
lock
xchg
clc
pop
push
clc
push
ins
inc
movs
mov
or
out
xchg
xchg
retf
inc
test
jmp
sub
inc
pop
push
ret
sbb
xchg
and
(bad)
xor
lahf
test
in
xchg
int
movs
mov
jl
icebp
push
xlat
jle
loope
cmp
es
inc
ins
or
imul
adc
in
inc
aaa
mov
sub
sub
mov
inc
adc
movs
out
sar
mov
sar
and
mov
das
or
sbb
jo
loope
pop
mov
cmp
(bad)
and
jge
mov
es
jno
jno
jge
fwait
mov
xor
lods
in
(bad)
dec
cmp
cmp
jmp
cmp
xor
fldcw
mov
call
mov
and
ret
pusha
imul
cmp
jle
pushf
ss
push
sbb
mov
ret
repnz
daa
test
sbb
ins
ja
fs
in
push
inc
xchg
push
push
add
(bad)
inc
adc
jae
sbb
outs
and
or
arpl
mov
inc
lods
jmp
out
dec
fstp
mov
mov
lea
or
fucom
jnp
mov
sub
retf
xor
mov
data16
sub
jge
mov
je
ins
(bad)
and
(bad)
fdivr
push
gs
sub
add
loopne
push
add
jno
jo
sahf
(bad)
jecxz
and
bound
xor
mov
popf
loopne
jle
adc
jge
les
outs
add
mov
out
test
movs
aaa
cs
mov
cld
mov
dec
mov
push
xchg
repnz
jl
or
jae
(bad)
push
pop
mov
cmps
test
stc
stc
mov
adc
fnstcw
inc
mov
mov
and
es
leave
add
iret
mov
cmp
pusha
aaa
mov
call
mov
retf
ror
out
mov
xor
pop
paddsw
jne
cdq
ficom
mov
aam
cmc
ins
mov
enter
add
sub
and
stos
stos
cmp
inc
pushf
xchg
shl
pop
mov
leave
push
mov
mov
icebp
cmp
xchg
call
shl
add
dec
pop
dec
xlat
push
xor
xchg
imul
arpl
fld
pop
jp
sbb
adc
cmp
mov
das
cmps
adc
mov
mov
loope
mov
sbb
stos
pop
fisubr
(bad)
out
out
inc
ffreep
xor
in
mov
adc
dec
(bad)
cmc
and
xchg
(bad)
popa
pop
call
mov
outs
pop
out
in
jmp
push
add
add
imul
push
retf
imul
mov
mov
adc
dec
bswap
pop
sbb
jne
pushf
cmp
aas
int3
mov
arpl
imul
add
push
jno
xor
arpl
call
out
adc
mov
lock
mov
push
or
scas
push
stos
mov
mov
adc
or
(bad)
push
fwait
mov
(bad)
popf
inc
mov
or
push
ror
(bad)
cmp
retf
loope
call
out
or
xor
cwde
iret
adc
sbb
or
scas
mov
mov
cli
rol
aaa
adc
mov
mov
mov
imul
arpl
fidiv
enter
mov
push
scas
sar
(bad)
cdq
cmp
leave
jg
and
into
adc
cmc
push
push
dec
lods
das
aam
lahf
pop
push
imul
hlt
cmp
(bad)
and
or
in
jb
mov
(bad)
adc
pop
inc
xchg
ss
jbe
sbb
daa
paddsb
scas
jle
push
jns
sub
push
jmp
cdq
push
jo
retf
test
xchg
cmp
fwait
jne
xchg
push
jmp
jne
fnstcw
lahf
push
mov
adc
adc
pop
(bad)
adc
das
fisub
xor
into
and
or
stos
pusha
shr
repnz
sbb
mov
daa
cmc
rcr
movs
jb
sti
xor
mov
shl
repz
push
push
and
inc
retf
push
lods
xchg
mov
cli
popa
mov
and
cmp
add
mov
retf
and
mov
test
inc
jae
in
and
xchg
arpl
and
push
add
xchg
pop
nop
xlat
sub
xchg
xchg
outs
ins
scas
or
push
jo
stos
ss
popf
dec
push
cmp
int
pop
sub
adc
mov
adc
push
push
(bad)
cmp
movs
outs
or
rol
xor
jecxz
push
xchg
pushf
lds
mov
or
mov
pop
(bad)
neg
in
or
(bad)
xor
xlat
jno
into
sub
pop
ds
push
sbb
cld
mov
outs
iret
jle
inc
jne
or
ret
xchg
into
dec
fucomi
je
pop
test
and
fs
inc
into
push
mov
scas
add
imul
add
ret
(bad)
arpl
sahf
daa
and
dec
dec
fdiv
push
je
mov
pop
les
aas
fisttp
mov
(bad)
push
pushf
push
cvtdq2ps
(bad)
or
ret
mov
lock
ins
push
cmps
mov
cmp
cmp
add
test
daa
leave
cmp
cdq
mov
pushf
push
in
jb
cmp
aas
xor
pop
jo
int3
push
sub
sbb
pop
cmc
mov
outs
inc
out
fwait
push
pop
cs
push
and
xor
dec
push
arpl
repz
(bad)
sub
push
jp
or
dec
pop
sub
int
or
cmp
and
outs
jle
adc
push
mov
outs
(bad)
stos
test
fsubr
dec
daa
xchg
push
in
ficomp
out
mov
jae
aam
mov
lahf
fs
imul
(bad)
fmul
mov
nop
pop
or
dec
data16
retf
sbb
add
out
js
lds
fsubr
mov
sahf
adc
ins
or
xchg
xchg
addr16
retf
pop
sbb
xchg
mov
push
push
cmp
mov
sub
sub
jns
test
pop
cld
jecxz
frstor
loop
mov
sbb
dec
mov
xor
pop
adc
sub
in
cmp
loop
sbb
adc
inc
mov
mov
repnz
(bad)
ins
call
jne
fcom
lods
sbb
cs
sub
pop
lock
call
sahf
mov
mov
sbb
pop
retf
cdq
add
push
dec
mov
rcl
cmp
jmp
nop
jbe
rep
dec
leave
push
pop
stos
mov
(bad)
xlat
pop
push
and
repz
xchg
lds
fstp
lahf
aas
inc
adc
cmp
lea
popf
or
and
adc
pop
xor
movs
sbb
test
loop
fisttp
mov
jl
and
sbb
scas
(bad)
test
fs
daa
push
inc
mov
xchg
mov
push
pop
cli
xor
push
or
and
inc
shr
enter
cmp
or
mov
dec
pop
or
cli
cmp
xor
pushf
mov
pop
ja
mov
fiadd
les
xchg
mov
jne
mov
xor
es
jb
(bad)
std
retf
and
out
and
ds
push
mov
mov
push
mov
push
push
ja
repnz
test
push
ja
dec
repz
mov
sar
std
pop
push
sub
push
mov
loop
out
pop
mov
and
scas
lock
mov
or
mov
pop
call
out
retf
jb
push
dec
lds
pop
adc
jno
(bad)
or
mov
push
fistp
cdq
sub
inc
arpl
pop
out
or
mov
cld
dec
cld
xchg
push
pop
int3
shl
cmp
xlat
bound
cmp
data16
xchg
test
lock
pop
lods
sub
pop
jae
fst
fld
mov
std
and
lods
mov
xlat
scas
mov
jae
mov
push
inc
inc
js
daa
jae
popa
and
xchg
xchg
dec
inc
js
adc
sub
pop
mov
addr16
jns
mov
and
gs
xchg
stos
dec
cmp
sbb
mov
(bad)
int3
mov
rcl
jnp
cs
popf
sub
inc
add
push
jmp
mov
mov
movs
lods
mov
push
int
pop
mov
jno
shr
jle
fwait
add
cs
sub
jbe
loop
je
pop
mov
loopne
stc
mov
add
pop
xchg
inc
sbb
pop
pop
outs
mov
jnp
mov
dec
pop
jb
in
dec
(bad)
not
mov
add
cwde
int3
add
je
lock
mov
fnstenv
lea
jnp
std
or
mov
and
jb
mov
sahf
stc
xchg
and
mov
and
test
clc
std
xor
add
addr16
jne
jg
loope
mov
ss
(bad)
adc
test
shr
mov
das
les
das
push
stos
push
mov
jns
jbe
mov
jge
xchg
lock
dec
ins
jae
xor
mov
stc
jecxz
cmp
in
mov
add
js
mov
jmp
out
add
sbb
and
xlat
pop
push
movs
setg
mov
cmp
dec
test
hlt
and
mov
test
int
mov
sti
jecxz
sub
xchg
xchg
movs
xchg
repz
(bad)
(bad)
std
mov
pop
clc
in
xor
jae
push
sar
or
sti
out
cmp
mov
loopne
call
(bad)
hlt
mov
cmp
lods
hlt
lock
fadd
mov
mov
aad
es
pop
adc
stos
fadd
aas
jno
scas
push
xchg
stc
push
mov
push
xlat
sub
pop
mov
movs
mov
mov
jp
mov
lock
(bad)
fiadd
mov
xchg
movs
sti
add
jnp
pop
jne
in
(bad)
push
and
(bad)
in
or
and
icebp
out
mov
bound
xor
mov
movs
into
retf
inc
sub
test
and
addr16
mov
addr16
das
xor
push
inc
fidivr
dec
addr16
out
mov
mov
mov
xchg
jecxz
loope
retf
fidiv
push
add
fmul
and
clc
aam
xchg
pop
dec
(bad)
mov
xchg
hlt
xchg
pop
and
push
jg
fdiv
es
jp
mov
pop
fld
mov
fcmovu
jb
hlt
in
mov
dec
push
xchg
out
mov
out
sbb
lods
test
movs
movlhps
out
leave
mov
cmp
push
(bad)
push
ror
push
jmp
push
xchg
loope
xor
dec
mov
mov
aas
rcr
xlat
retf
out
(bad)
rcr
popf
push
xchg
das
cmp
dec
sti
mov
or
rol
pop
xor
out
add
popf
call
inc
rcl
xchg
and
icebp
cmp
mov
mov
int3
xor
retf
add
leave
pop
pop
pop
sub
add
arpl
not
movs
in
in
cmps
pop
call
jnp
inc
add
ins
fnstenv
dec
inc
sbb
mov
jnp
mov
pusha
jl
mov
cmp
dec
das
out
pop
mov
outs
mov
test
inc
mov
inc
ror
(bad)
mov
dec
cmps
sbb
inc
xchg
stc
xchg
out
cmp
xor
pop
imul
repnz
daa
js
aam
sub
mov
hlt
xchg
call
mov
(bad)
sub
fsub
push
jge
fisub
mov
test
addr16
fnstsw
in
out
xchg
jbe
jnp
cli
gs
sbb
daa
jns
ret
or
inc
xlat
ret
or
inc
jp
es
test
jno
or
mov
sbb
jae
cmps
not
mov
mov
fwait
jecxz
push
ret
(bad)
sbb
cmp
cli
xchg
jg
mov
scas
inc
or
fidiv
call
arpl
stos
out
adc
adc
mov
pop
sahf
cmp
cmp
and
fiadd
adc
imul
cmp
xchg
push
nop
mov
stos
inc
inc
and
les
(bad)
stc
call
sbb
xor
stos
sbb
lds
mov
adc
cmp
fsubr
mov
pushf
ins
aaa
dec
mov
inc
mov
pop
push
and
rol
arpl
sbb
and
adc
pcmpeqb
mov
ds
gs
cmp
jecxz
sub
push
arpl
iret
adc
cs
xor
pop
in
cmp
call
ja
fisttp
jo
dec
dec
inc
push
xchg
cmps
push
dec
sub
mov
jb
aam
ret
push
push
pop
ins
inc
(bad)
and
jge
scas
aad
ss
cmc
xchg
xor
dec
mov
sub
mov
lahf
lds
lea
mov
and
jo
icebp
jmp
dec
fs
sahf
jb
and
fstp
pop
cmp
aam
mov
xchg
jbe
mov
xchg
es
xchg
mov
std
loop
push
into
lods
ss
lea
loop
sti
cmp
mov
out
call
lds
cmp
mov
sub
div
xor
adc
mov
pop
int3
or
push
dec
inc
mov
cmps
inc
mov
into
nop
imul
add
aaa
adc
scas
jl
les
sub
mov
(bad)
outs
xadd
movs
cmp
mov
ins
sbb
out
inc
rcr
inc
push
xor
mov
jge
mov
cwde
mov
mov
inc
cld
jg
or
or
cs
sbb
sar
imul
in
and
int3
xchg
daa
ds
xchg
fs
pop
mov
aaa
(bad)
xchg
cmps
cmp
ss
(bad)
aas
push
icebp
jmp
lahf
ins
adc
dec
xor
push
jae
and
add
add
mov
(bad)
or
xchg
xor
push
dec
dec
sbb
int
xchg
frstor
not
add
mov
test
or
fstp
pop
jmp
inc
mov
inc
stc
cmp
cmps
inc
xor
(bad)
sbb
push
mov
inc
repnz
jmp
jno
push
dec
scas
or
retf
fdiv
push
sbb
shl
xchg
rcr
fcomp
xor
(bad)
and
xor
fld
adc
add
pavgb
mov
cld
push
inc
imul
jmp
(bad)
push
cmc
push
aas
ins
aaa
dec
std
data16
daa
jmp
shl
ror
xor
fild
jnp
fwait
push
(bad)
outs
dec
leave
arpl
mov
out
mov
mov
xchg
add
cmc
nop
pop
xor
push
sbb
mov
cmp
pushf
ds
inc
jae
xchg
pop
xchg
out
inc
clc
mov
arpl
adc
xchg
pop
pop
loop
sahf
jns
nop
jnp
out
aas
xchg
jmp
xchg
cmp
sti
cmp
mov
jnp
sbb
daa
sbb
xchg
(bad)
in
push
retf
in
retf
dec
inc
mov
int3
jno
jae
pop
and
push
push
inc
sbb
cmp
jle
push
dec
test
clc
les
inc
imul
loopne
inc
movs
dec
jae
inc
nop
mov
jp
and
retf
xor
pop
adc
xchg
bound
call
and
cmp
sub
aam
jmp
and
sbb
ja
xlat
cmps
sbb
sub
popa
xor
aam
retf
mov
mov
cmps
sub
cs
scas
ja
shr
cmp
or
arpl
cmp
adc
lock
pusha
imul
fs
lock
mov
jo
in
jbe
and
pop
add
inc
pop
test
pop
ret
ins
ins
jne
test
push
pop
neg
retf
adc
imul
test
out
push
in
jmp
xchg
dec
pop
cmps
push
mov
sub
push
adc
jnp
cli
sbb
xor
hlt
lods
jb
cld
sbb
and
out
inc
mov
loop
mov
mov
rcr
and
jmp
push
dec
or
and
mov
mov
inc
adc
iret
pop
push
lock
cld
push
add
xchg
cmc
mov
sub
pushf
cmps
adc
aad
cmp
sub
mov
or
std
test
jns
aaa
pusha
(bad)
add
(bad)
sti
ret
push
sti
sbb
lds
pop
pushf
and
push
jns
fnstenv
stos
sbb
fucom
inc
dec
in
(bad)
pop
cmc
mov
rdtsc
inc
jle
ds
ss
pop
mov
div
ins
aam
add
or
in
rcr
lock
leave
adc
push
mov
lock
pop
out
scas
add
out
mov
and
outs
pop
xchg
cs
lods
shl
movs
pop
loop
fs
mov
imul
repnz
push
sbb
into
mov
sbb
xchg
or
push
scas
outs
test
add
sbb
and
cmp
mov
mov
adc
pop
in
fdiv
or
cmp
pop
inc
sbb
ins
sti
lods
arpl
mov
ins
hlt
jns
arpl
test
cmp
xor
push
mov
xlat
and
push
arpl
adc
clc
inc
push
jbe
loope
int3
sbb
je
sub
mov
add
mov
in
add
jae
xor
mov
sbb
icebp
movs
stos
inc
dec
mov
inc
div
mov
push
and
int
dec
das
add
aam
add
nop
(bad)
call
inc
sub
imul
sub
rol
je
rcl
sub
stos
xchg
out
jno
mov
and
cli
inc
stos
dec
xlat
jecxz
scas
imul
cmp
scas
mov
push
push
mov
xchg
inc
push
xlat
hlt
xchg
test
or
jb
dec
xchg
stc
mov
lods
lods
loope
dec
pop
icebp
push
sub
int3
mov
xchg
(bad)
or
xchg
in
sar
repz
stc
test
into
or
dec
aad
xchg
pop
sbb
jmp
jmp
jae
jae
pop
ss
fsubr
into
push
test
jb
pop
es
stc
jne
sbb
inc
dec
push
add
cmp
mov
sbb
out
sbb
dec
mov
lea
int3
(bad)
call
push
mov
hlt
mov
ja
clc
push
sub
push
popa
stc
inc
fcomp
sub
scas
bound
or
mov
stos
jne
xchg
jmp
lds
jbe
dec
gs
mov
int
leave
push
or
lods
fwait
mov
lock
mov
xchg
mov
cmc
pop
test
cmps
inc
fstp
stos
mov
cmp
mov
xchg
xchg
stc
out
mov
popa
hlt
xchg
xor
fnstcw
shl
neg
arpl
add
dec
stos
xchg
pop
pop
or
inc
fld
ficom
addr16
jo
ins
(bad)
(bad)
inc
imul
sbb
repnz
lds
mov
in
dec
stos
add
cmp
retf
xor
or
sahf
add
mov
push
mov
mov
retf
shl
ret
sbb
popf
mov
mov
popf
adc
xchg
sbb
jbe
dec
mov
leave
(bad)
and
mov
dec
mov
repz
leave
into
lea
in
movs
pop
pop
add
or
lods
daa
push
mov
lds
xchg
lods
test
ret
mov
loope
mov
lods
rcr
or
mov
inc
ss
mov
sbb
repz
loope
fs
pop
fwait
movs
imul
mov
and
jnp
test
and
mov
loop
jnp
jecxz
mov
ds
test
push
jmp
or
adc
stos
xchg
ds
dec
je
xchg
jle
int3
pop
aam
mov
les
or
test
dec
mov
push
sub
add
ror
movs
movs
jg
xchg
jno
sti
fwait
sbb
xor
inc
and
aaa
jno
shl
and
data16
xor
jge
jge
loopne
popa
push
pop
movs
push
xchg
shl
jecxz
pop
xlat
sub
outs
cmp
jno
popf
push
jmp
stos
add
outs
push
jg
stos
shl
or
(bad)
movs
xor
leave
es
stc
push
add
push
rol
sub
jae
loop
adc
sbb
jo
cli
xchg
js
ds
movs
stc
fcom
mov
das
jbe
adc
ins
push
hlt
loope
push
pop
out
mov
out
out
repnz
dec
and
shl
mov
mov
cmp
jb
in
std
sbb
mov
or
xor
inc
push
add
sub
lods
outs
mov
mov
and
cmp
mov
xchg
sub
mov
dec
pop
jle
mov
in
cdq
sub
and
vphsubbw
(bad)
mov
test
cmp
adc
pop
dec
push
clc
cmps
js
push
inc
into
(bad)
and
aaa
fnstenv
push
adc
sub
xchg
sbb
fs
mov
mov
shl
xchg
sub
push
cmp
jmp
mov
ja
mov
jle
mov
sub
or
jno
pushf
fucomi
pusha
and
mov
jp
cmp
cmp
adc
jg
sbb
push
scas
and
mov
mov
dec
loopne
out
sbb
cmc
sbb
add
cld
cli
jmp
and
adc
fcmovnbe
aad
inc
add
ror
adc
mov
loopne
add
test
or
cmp
cmp
out
push
pusha
xor
inc
fidivr
pushf
jmp
mov
fist
mov
out
mov
loope
or
mov
neg
pop
jmp
sub
inc
sti
pop
rol
in
adc
push
pop
pushf
shl
out
pop
int3
dec
push
or
lds
loope
xlat
std
sub
popa
ins
xchg
in
fwait
arpl
cmp
loop
(bad)
mov
test
leave
shr
sub
add
push
add
fnstenv
loope
jo
rol
inc
and
repz
rcr
push
pushf
(bad)
add
dec
lahf
pushf
sbb
jmp
data16
loopne
fwait
cmp
out
cmps
fst
push
jg
test
call
ret
jnp
cmp
daa
sbb
lods
sti
cmp
ja
pop
push
ss
jnp
mov
jl
add
jp
xchg
xchg
mov
push
in
jmp
mov
xchg
jecxz
loop
jb
xchg
in
cmc
mov
aad
xor
dec
imul
mov
push
fimul
mov
cld
aam
push
sub
jmp
fs
xor
call
out
cld
inc
jg
jmp
push
icebp
mov
xor
xchg
gs
sbb
hlt
sbb
mov
mov
inc
xor
or
ins
outs
loop
lock
sar
enter
in
inc
lahf
mov
popa
xchg
data16
xor
mov
icebp
icebp
add
fnstcw
and
lods
test
push
out
js
mov
mov
mov
call
test
cmp
cmp
neg
jge
scas
jnp
hlt
add
dec
pusha
add
inc
add
lahf
push
out
into
in
popa
or
out
push
mov
dec
xor
adc
jmp
lahf
fnstsw
cmp
imul
cdq
sti
(bad)
loopne
mov
and
or
and
fs
sbb
hlt
jmp
mov
sub
xor
dec
rcr
dec
(bad)
std
nop
stos
pop
push
(bad)
rol
and
jl
jmp
das
out
sti
rcr
xchg
xchg
fidiv
xchg
jb
clc
pop
ss
mov
in
pop
not
push
into
aam
push
adc
cmps
jge
jle
int3
jp
and
outs
adc
mov
test
adc
add
push
dec
xor
xor
es
cmp
add
push
pop
pop
in
xchg
hlt
cmps
dec
fadd
enter
arpl
mov
mov
movs
or
pop
mov
sub
adc
push
push
xchg
add
push
inc
retf
mov
inc
lahf
adc
inc
loope
jmp
jmp
pop
stos
shl
lock
add
jnp
lock
lods
mov
aaa
test
adc
inc
popa
adc
rcr
and
test
mov
mov
cmp
sbb
and
and
push
loopne
out
sbb
bsr
mov
pop
xchg
retf
fs
in
add
mov
retf
out
sbb
inc
jp
and
repnz
sub
jae
aam
xchg
mov
mov
xchg
ins
push
push
test
outs
xor
sti
outs
jbe
mov
ins
adc
xchg
xchg
repnz
adc
mov
(bad)
pop
sub
imul
or
mov
daa
sbb
pop
mov
popf
inc
fadd
jae
inc
or
mov
(bad)
jbe
jmp
adc
mov
cwde
mov
ins
sbb
movs
cmps
loopne
icebp
ds
out
ja
call
sahf
mov
jns
and
jle
int3
mov
jmp
jp
push
jmp
sub
stos
inc
(bad)
cdq
movs
mov
inc
lods
sbb
mov
jno
cwde
imul
pushf
cmp
jp
loopne
out
pop
mov
push
cli
jno
(bad)
(bad)
bound
mov
inc
mov
pop
pop
rol
dec
sub
repnz
sub
xchg
data16
push
shl
sub
cmp
inc
cmps
add
hlt
mov
mov
mov
test
pop
push
out
mov
inc
aad
inc
(bad)
pop
nop
mov
out
sbb
inc
imul
je
sar
jne
outs
push
clc
jmp
jp
jl
out
movs
jmp
inc
cli
test
enter
adc
popa
inc
mul
das
push
mov
xor
sub
xlat
ja
not
mov
popa
ret
inc
jo
mov
mov
or
sbb
mov
(bad)
mov
ja
cmp
and
pop
or
or
pop
aad
and
mov
aaa
div
and
and
cmp
mov
mov
inc
fbld
pop
in
mov
out
push
ss
cs
xlat
add
adc
scas
adc
dec
out
fldcw
inc
adc
jnp
fist
mov
es
or
fld
out
mov
adc
inc
mov
(bad)
push
mov
push
and
and
sbb
test
aas
mov
pop
dec
fidiv
jbe
and
sti
sub
adc
movs
bound
push
jg
popf
in
out
adc
mov
xchg
xlat
mov
cmps
jns
mov
mov
test
mov
or
sub
mov
inc
ins
into
mov
mov
enter
dec
sub
push
loop
jns
cmp
push
popf
pop
pop
cs
push
add
jmp
leave
in
dec
sub
leave
and
or
repz
and
xor
push
mov
arpl
aam
cmc
pop
and
and
push
inc
dec
jmp
pop
push
adc
jmp
xchg
xor
lods
pop
or
cdq
(bad)
loope
xor
mov
pop
je
jno
punpckldq
or
xor
rol
sbb
adc
sub
xchg
sbb
clc
mov
xor
xchg
push
stos
cs
adc
fmul
cmp
faddp
or
sahf
xchg
add
xor
push
dec
fcom
fsubr
jle
xor
and
out
cmps
rcr
(bad)
in
cmp
pop
sub
call
inc
sub
xchg
jle
jp
fbld
hlt
xchg
cmps
cmp
mov
aad
push
and
inc
aam
adc
jl
adc
mov
jo
pop
mov
stos
sub
adc
mov
pop
fst
imul
pusha
retf
pop
movs
retf
mov
sbb
pop
shr
mov
dec
retf
fidiv
in
stos
stc
pop
loop
nop
mov
jle
xchg
daa
jae
sbb
mov
xor
jne
pop
mov
xor
outs
add
xor
cmp
gs
cmp
jle
scas
scas
and
inc
lds
push
dec
nop
pop
pop
mov
fidivr
ds
ins
xlat
not
push
es
into
int3
dec
ss
dec
mov
jecxz
je
add
cmp
ror
sbb
add
or
fnsave
pop
sbb
test
sbb
inc
aaa
mov
cmc
xchg
mov
stos
mov
lahf
jae
enter
bts
mov
mov
lds
outs
bound
xchg
in
dec
je
xchg
les
out
adc
xor
stos
mov
arpl
pusha
push
loope
xlat
mov
movs
mov
test
sbb
pushf
jae
jmp
aad
xchg
jnp
sub
push
xchg
push
push
xchg
(bad)
leavew
jmp
push
sti
mov
scas
and
imul
push
lahf
repz
xchg
push
mov
test
pop
test
mov
pop
xchg
xchg
adc
(bad)
jae
mov
clc
jno
(bad)
xchg
scas
cmp
and
das
mov
popa
lods
lods
pop
loope
sbb
pop
scas
cli
or
loopne
xchg
fdivr
or
popa
(bad)
dec
jae
es
mov
mov
test
inc
movs
call
stos
or
and
xor
popf
neg
push
xchg
inc
movs
xchg
dec
inc
fimul
fisttp
adc
ja
sar
jp
and
mov
inc
js
test
gs
enter
cmp
jmp
add
push
xor
jo
jnp
je
mov
movs
cmps
add
hlt
pop
pop
lahf
dec
lods
pop
cmp
cmp
pop
outs
pop
loope
shr
clc
xor
pop
dec
xor
xchg
(bad)
cmp
iret
int3
mov
jge
dec
or
and
movs
out
push
pop
inc
outs
aad
cwde
cmp
add
add
xlat
and
repz
mov
adc
ret
leave
inc
jbe
repnz
xchg
cmc
jp
fnstenv
inc
dec
fcom
inc
sahf
in
or
enter
retf
jle
or
push
shl
pop
adc
pop
aas
mov
xor
dec
(bad)
fisub
jmp
sbb
cli
cmps
xchg
mov
jbe
dec
inc
and
and
or
cmp
sbb
imul
ds
dec
xor
outs
fs
das
shl
cmp
mov
iret
ret
jmp
iret
test
push
std
jg
dec
arpl
or
inc
ins
pop
dec
xor
xchg
scas
or
(bad)
fimul
stos
cmp
mov
jecxz
or
jne
sbb
loopne
fisubr
or
mov
data16
mov
lods
test
mov
and
repz
nop
popa
push
sub
push
mov
outs
fisttp
push
int3
invd
imul
lods
js
adc
hlt
jae
outs
sbb
push
mov
push
adc
(bad)
sbb
fdivr
sub
push
cmps
dec
adc
inc
daa
(bad)
std
dec
stc
cs
lahf
push
jbe
lea
jl
rdpmc
pop
ffree
sbb
jp
sub
sahf
jb
sbb
sbb
and
inc
mov
scas
test
or
in
xor
pop
dec
mov
in
xchg
stc
adc
or
and
xor
jne
adc
dec
xor
mov
ds
addr16
cmc
cmp
fsub
fldenv
and
cld
popa
fdivp
stc
repz
sbb
pop
add
xor
mov
(bad)
in
pop
pop
jl
dec
retf
push
sbb
fst
dec
mov
pop
sub
outs
aam
inc
push
xchg
or
rol
(bad)
ror
in
pop
icebp
int3
push
es
les
mov
sti
dec
sti
or
xchg
(bad)
retf
daa
js
fidiv
(bad)
mov
mov
mov
add
fs
push
retf
mov
mov
adc
idiv
jmp
fnstcw
jle
icebp
sbb
movs
std
xchg
ins
inc
xchg
mov
cmps
sub
mov
sbb
and
xchg
add
nop
mov
out
das
fs
push
aaa
mov
test
jle
xor
outs
shr
ret
and
add
aad
dec
inc
aad
dec
daa
shl
call
retf
mov
pushf
mov
xor
sub
jg
cwde
in
enter
jecxz
iret
or
scas
and
fisubr
in
mov
adc
xchg
and
pop
jg
outs
ret
call
add
(bad)
dec
out
retf
mov
cdq
rcr
push
inc
lahf
sub
or
xor
dec
ror
jno
sbb
mov
ret
call
es
mov
in
int
cmp
add
(bad)
adc
adc
int3
inc
or
mov
loopne
ins
les
(bad)
and
pop
jecxz
pop
mov
and
mov
mov
or
adc
sub
dec
call
enter
test
shl
in
mov
rcl
and
xchg
stc
xor
clc
push
xor
cmp
adc
inc
dec
(bad)
xchg
pop
sub
dec
push
and
or
or
repz
cmp
add
xor
jl
call
rcl
lock
test
scas
pop
xor
sahf
mov
div
cmp
pop
neg
or
push
sub
adc
cwde
mov
cmp
ror
dec
movs
push
push
mov
movs
ins
retf
xor
loop
mov
mov
sub
popf
xchg
sub
push
inc
ins
and
(bad)
push
ret
pop
xchg
ror
xchg
fistp
xchg
(bad)
mov
push
mov
cmps
jmp
or
mov
in
ins
wbinvd
mov
(bad)
jmp
xchg
inc
pop
pop
push
addr16
and
int
(bad)
retf
into
mov
mov
retf
jmp
fcmovne
sub
mov
not
aas
clc
jo
cmp
aad
jno
xchg
push
js
cmps
fistp
fild
xchg
jmp
cmc
cmp
pushw
imul
push
add
pop
test
mov
xchg
dec
push
ins
and
mov
add
xchg
call
adc
out
test
retf
gs
mov
xchg
mov
lea
sub
sub
sbb
jae
pop
jne
aas
push
sbb
push
and
xchg
dec
in
(bad)
out
(bad)
jmp
inc
cmps
dec
loope
or
test
int3
adc
in
cmp
jge
imul
das
mov
dec
clc
stc
movs
mov
outs
push
je
ss
dec
dec
cmp
(bad)
mov
mov
jo
cmp
cli
es
in
mov
mov
in
push
xor
popa
nop
repnz
pusha
mov
cmps
sub
xlat
cmp
add
cmp
call
cmc
xchg
lahf
mov
push
cmc
mov
std
fs
xchg
aad
shl
mov
aas
jle
call
push
mov
cmp
mov
push
cli
dec
call
vmovups
push
or
fcmovnu
mov
jmp
div
popa
mov
in
jmp
cmc
inc
std
jbe
jmp
adc
loopne
sub
push
cmp
sti
nop
std
retf
pushf
nop
sbb
cmp
mov
sbb
cmp
loope
jl
pop
sub
test
jmp
dec
mov
retf
les
xchg
fs
jno
xor
inc
sti
pop
fiadd
loopne
lock
jp
gs
pop
fcomp
hlt
inc
(bad)
push
add
sbb
and
mov
lods
xchg
xchg
ret
repnz
cdq
or
fcmovnu
mov
or
mov
xchg
push
and
cmc
bound
lock
or
inc
scas
mov
mov
or
pop
ret
(bad)
fbstp
or
xchg
outs
out
xlat
scas
adc
int3
scas
inc
iret
mov
sti
jne
loopne
mov
jp
mov
jns
das
bound
lea
ds
repz
adc
jecxz
sar
fwait
or
fwait
push
loopne
xchg
jae
push
imul
call
lods
mov
jg
test
outs
sub
adc
shl
loopne
out
ret
sbb
jge
cmc
fdivr
(bad)
xchg
cdq
loope
push
or
aam
in
xchg
pop
jnp
vandnps
scas
jmp
repnz
mov
xchg
sbb
jmp
bound
cmp
ror
inc
dec
dec
ja
lea
sbb
test
sbb
xor
xlat
pop
push
mov
stos
push
sti
mov
(bad)
std
addr16
mov
or
jmp
aaa
pop
aaa
jb
jmp
sahf
lods
fnstcw
push
jecxz
call
sub
mov
pop
jge
shl
les
aad
cmp
adc
jno
icebp
xchg
push
inc
mov
mov
scas
rcr
pop
jbe
push
scas
push
mov
test
fstp
cdq
fbstp
adc
into
or
bound
fistp
jmp
movs
xor
cmp
pusha
adc
pop
mov
push
sub
in
jp
in
jl
movs
lahf
inc
cs
ins
cmp
shl
(bad)
cwde
cld
(bad)
xrelease
les
into
imul
(bad)
dec
fidiv
scas
jb
mov
gs
(bad)
push
adc
cmp
inc
mov
adc
mov
stos
mov
cmp
xchg
test
sub
out
sti
xor
push
ret
inc
jno
mov
mov
fwait
pop
cdq
repz
push
aam
mov
lods
ss
jle
sbb
mov
sub
dec
fisttp
cmps
push
je
mov
repnz
pop
dec
cmp
dec
scas
ret
push
sub
retf
outs
dec
sti
dec
mov
mov
call
loope
pop
xor
mov
pop
int
push
stc
jecxz
lahf
jns
dec
xchg
mov
mov
bound
mov
ss
xor
clc
cmp
push
jle
idiv
add
pop
jg
push
fnstsw
addr16
or
jle
dec
jno
popa
in
fcmove
ret
inc
mov
int
jbe
lods
jg
into
cmp
jg
pop
int3
cmc
out
adc
in
mov
fst
mov
cli
cmp
mov
mov
mov
into
pop
and
sti
movs
pop
xor
push
mov
sub
xchg
out
imul
adc
ins
pop
fimul
imul
mov
jo
lea
and
jmp
add
popa
and
dec
push
ds
xor
shl
loopne
push
push
mov
rcr
sbb
out
inc
mov
pop
(bad)
das
jp
popa
sbb
ins
bound
rcr
js
popf
test
mov
mov
jbe
hlt
das
jnp
push
les
dec
jb
xchg
aad
fisub
push
push
hlt
aad
or
mov
repnz
stos
ja
xlat
adc
outs
xchg
je
fadd
sbb
shr
rcr
pop
mov
jmp
or
int3
xchg
push
xor
push
rcr
xchg
dec
push
mov
fsqrt
push
(bad)
push
rcl
inc
stc
icebp
fwait
retf
sbb
adc
dec
mov
popa
cdq
cmps
loop
mov
aaa
cmp
pop
xchg
mov
daa
sub
cmp
mov
call
in
adc
out
retf
or
or
adc
mov
push
inc
pop
lahf
or
xlat
or
test
push
imul
xchg
(bad)
mov
dec
ret
mov
cmp
rol
push
jle
xor
xlat
adc
outs
loopne
mov
jnp
hlt
test
popa
ja
mov
rol
and
ja
fyl2xp1
sbb
rol
leave
in
inc
lods
pop
aam
push
(bad)
mov
push
test
sub
int3
push
xlat
je
aam
and
pop
addr16
cli
mov
sbb
int3
sar
lahf
inc
inc
xchg
stos
stos
mov
lods
or
dec
jecxz
pop
push
xor
aad
js
add
lock
cmp
fsubr
mov
or
icebp
adc
mov
enter
push
dec
mov
(bad)
xchg
xchg
xchg
push
(bad)
sahf
jnp
mov
mov
bound
test
scas
and
gs
jp
add
pop
scas
pop
lds
xor
ror
aam
fs
mov
lock
mov
popf
or
mov
jmp
pop
xor
stos
or
into
inc
inc
repnz
mov
sbb
aas
and
(bad)
adc
fwait
jno
cmp
jbe
pop
mov
retf
out
in
push
mov
push
mov
in
pop
cmps
fnsave
pop
mov
in
neg
mov
repnz
dec
jp
xchg
sub
xor
add
or
scas
test
mov
hlt
mov
jecxz
jle
int3
sbb
mov
inc
sub
js
inc
mov
into
pop
mov
sahf
out
inc
xlat
push
cmp
mov
pop
bound
xchg
inc
int3
clc
adc
push
pushf
lahf
sub
test
fdiv
fucomip
sub
call
iret
ror
or
loop
outs
add
and
inc
mov
aam
cmp
cmp
aam
bound
dec
mov
cdq
hlt
pusha
ficom
mov
fld
mov
fwait
jp
mov
leave
mov
jns
std
mov
movs
cmps
mov
fs
scas
sbb
mov
(bad)
fidivr
sbb
sbb
fnsave
pop
inc
add
sbb
add
retf
mov
adc
and
adc
daa
ds
rcr
ss
call
fimul
mov
cdq
cmp
push
adc
hlt
push
cmp
mov
cmp
xor
mov
push
int3
out
dec
inc
push
and
fwait
ror
stc
rcl
movs
jl
mov
mov
push
pusha
gs
fisubr
movs
xchg
fnstenv
cmps
sar
lahf
cmc
sbb
fs
inc
mov
in
xor
jnp
and
and
pushf
xor
push
add
jp
fld
mov
stos
cwde
movs
loope
add
adc
pop
js
push
dec
ds
push
lods
mov
or
mov
iret
cmp
xchg
loopne
sub
sbb
retf
inc
mov
jno
and
inc
jle
adc
fnstsw
rcr
push
dec
adc
sbb
adc
pop
(bad)
bound
imul
mov
or
cmp
fldenv
xor
into
mov
inc
in
xchg
or
mov
sub
add
(bad)
leave
xchg
hlt
push
or
add
lods
sti
cmp
cmp
inc
add
icebp
mov
imul
cs
fisub
pop
test
outs
push
mov
sub
cli
mov
sti
popa
or
iret
xor
sub
mov
aas
or
fucom
stc
and
loope
sub
mov
aas
(bad)
xlat
cs
push
stc
push
arpl
dec
pop
fisub
sub
mov
push
rol
mov
aam
xor
cld
mov
lock
lock
movs
retf
out
dec
and
fld
mov
mov
pop
xchg
push
or
mov
shr
nop
sahf
or
lods
pop
data16
not
out
dec
dec
and
jg
mov
pop
cmp
xor
pop
fdiv
fisubr
mov
sub
jmp
mov
mov
xchg
dec
xor
aam
inc
push
push
push
xchg
xchg
je
xchg
mov
sbb
(bad)
dec
jge
adc
xor
xlat
jl
inc
pop
mov
pop
jmp
fdivr
cld
ss
fidivr
mov
mov
test
je
repz
int
dec
repz
cmp
js
inc
dec
lock
retf
sar
jg
ror
inc
inc
iret
add
sbb
in
mov
cmps
pop
out
imul
jmp
neg
jnp
add
xchg
push
retf
movs
sub
daa
jb
and
fwait
cmps
inc
and
call
and
jmp
cs
mov
into
sbb
and
mov
icebp
and
push
inc
add
fisubr
lahf
fsub
int3
dec
ins
in
mov
nop
and
repnz
cmps
cmp
in
cmc
dec
pop
fcomp
stc
sbb
xchg
pop
or
fisttp
inc
call
fs
adc
(bad)
push
or
cli
cmp
retf
xchg
xor
ds
sbb
add
inc
mov
inc
dec
fst
lahf
cmp
sub
dec
ror
ret
lea
inc
es
sbb
in
outs
adc
sbb
sbb
adc
imul
in
cli
xor
mov
jnp
or
jg
or
dec
mov
leave
sbb
sub
sar
dec
jp
jae
icebp
cmpxchg
loop
stos
mov
mov
lds
add
fistp
cmps
mov
sbb
jp
shl
dec
js
xchg
inc
push
sub
mov
scas
jmp
add
hlt
out
push
(bad)
sahf
pusha
sub
stos
push
sub
or
push
sbb
rol
xchg
dec
xchg
sbb
data16
loopne
mov
les
je
sbb
js
std
push
jne
xchg
or
stos
js
fild
pop
ja
cmp
shl
mov
nop
jmp
push
fsub
or
clc
pusha
jnp
rcl
loopne
pop
(bad)
and
and
xlat
mov
les
leave
adc
jno
cli
shl
mov
mov
shl
pop
or
xchg
cs
test
push
cmp
scas
ds
ret
lods
in
inc
sub
inc
loopne
test
movs
ret
mov
(bad)
hlt
loope
cdq
cmp
inc
lock
sub
sub
imul
fisub
mov
(bad)
cmp
jb
sbb
(bad)
pop
push
cmc
jne
and
sub
cwde
cmp
cmp
repnz
(bad)
and
addr16
nop
push
adc
add
mov
lods
(bad)
cmp
ror
lahf
cdq
cmp
xchg
adc
mov
mov
fdiv
jmp
push
mov
push
xchg
and
int3
jl
daa
(bad)
out
sbb
xchg
call
(bad)
imul
xor
inc
jno
push
shl
mov
mov
pusha
push
add
and
popf
imul
dec
mov
lock
lahf
je
or
inc
fimul
fmul
mov
ins
mov
jns
es
adc
pop
in
and
push
pushf
adc
sbb
or
push
xchg
push
xor
sub
movs
mov
das
sbb
jmp
inc
pop
push
arpl
push
and
inc
sub
cwde
inc
adc
add
ds
cmp
addr16
pop
sbb
cli
pop
xchg
and
xor
jno
sub
shl
jge
aam
enter
xchg
lods
mov
cmc
retf
adc
ins
iret
imul
repnz
push
out
push
nop
push
sbb
adc
or
cmc
push
lea
enter
sub
loope
cs
add
(bad)
mov
push
xchg
lds
ss
hlt
cmp
mov
pop
ret
ins
mov
jae
loope
push
out
push
mov
in
sbb
(bad)
adc
push
mov
data16
loop
icebp
ja
mov
cmp
jae
js
add
xchg
inc
mov
add
cmps
push
loop
sbb
mov
add
out
inc
fdivrp
xchg
push
add
sbb
leave
lea
pushf
fistp
xor
inc
outs
add
ret
int
sub
repz
stos
gs
or
push
sbb
adc
xchg
inc
jmp
add
lods
inc
lea
iret
fmul
add
jne
les
push
fsubrp
mov
std
ja
(bad)
jnp
std
aad
jns
loope
or
test
int
loopne
pop
inc
nop
arpl
in
jns
xchg
loopne
jno
(bad)
jae
sub
mov
lds
retf
outs
movs
sub
scas
or
pop
call
inc
mov
jae
cmp
jnp
ret
cli
clc
out
push
jne
lahf
daa
inc
mov
adc
aaa
and
push
in
loope
neg
xor
sub
or
push
popf
mov
mov
jns
data16
icebp
sbb
das
bound
fldenv
push
or
pop
lock
inc
scas
jnp
add
mov
mul
es
mov
mov
in
inc
cmc
cmp
js
jbe
and
out
jmp
or
sub
call
ins
test
jmp
stc
fwait
lods
out
nop
cmc
mov
push
stc
sbb
cmp
test
out
xchg
pop
(bad)
cmps
movs
xor
xchg
push
jmp
xchg
cmp
ret
stos
mov
adc
push
jmp
xor
lds
add
pop
out
sub
and
imul
out
arpl
fistp
jnp
cmp
xchg
out
hlt
mov
inc
add
or
add
mov
(bad)
stos
jne
jno
sahf
sbb
outs
xor
mov
pushf
xor
mov
xor
daa
fstp
popa
push
movs
jg
xchg
cdq
mov
idiv
xchg
les
sub
and
scas
cmc
pop
test
mov
pop
push
xlat
cli
push
stc
ins
hlt
outs
cmp
and
aas
imul
leave
popa
lahf
ret
jmp
outs
repnz
icebp
add
shl
test
sbb
int
sbb
sbb
pop
pop
rol
adc
pop
pushf
xor
cdq
loope
add
xchg
les
adc
mov
aad
push
fadd
les
loop
lock
dec
mov
(bad)
fbld
adc
jmp
cmp
push
mov
mov
mov
mov
push
cmp
fmul
imul
add
or
push
call
sbb
xor
ins
ficomp
(bad)
jl
jge
mov
fbld
push
sar
or
pop
mov
aam
repz
mov
cwde
inc
xchg
loop
add
and
setb
dec
lods
call
test
cmp
pop
jl
stc
mov
movs
or
adc
pop
neg
and
in
adc
(bad)
arpl
fldenv
lods
clc
mov
xor
xchg
sbb
or
adc
and
jmp
xchg
sbb
jmp
jbe
push
inc
push
fsubrp
pop
adc
mov
inc
or
xchg
cld
lods
jne
cwde
retf
push
ret
xor
mov
jl
out
adc
call
adc
dec
jp
rcl
bound
dec
outs
sbb
ja
add
rol
scas
addr16
push
jg
inc
arpl
xor
in
test
jle
sub
mov
call
pop
push
loopne
cmp
xor
fmul
lods
xchg
rol
xchg
mov
or
push
xor
stos
mov
dec
inc
int3
xor
adc
ret
fild
xor
test
arpl
add
inc
sub
inc
push
in
(bad)
in
lahf
gs
arpl
xchg
sbb
sti
clc
push
inc
mov
pop
inc
mov
sti
add
sbb
leave
cmps
adc
pop
mov
nop
(bad)
mov
or
ins
xchg
fisttp
ins
scas
inc
adc
aam
sar
nop
leave
jle
fcom
pusha
cmp
movhps
js
dec
cdq
mov
ins
inc
cmp
leave
push
jno
push
or
mov
(bad)
jo
mov
or
xor
jo
adc
xor
mov
jno
inc
out
mov
xlat
jmp
and
(bad)
fdiv
sub
fdiv
cli
jae
dec
or
jno
retf
mov
push
dec
dec
or
cmps
xchg
call
in
push
ss
fwait
cli
iret
dec
push
retf
xchg
fimul
pop
or
sub
adc
jno
lea
int3
sti
cdq
test
das
leave
inc
sub
pop
dec
arpl
push
inc
xchg
int
shl
push
dec
push
sub
js
cmps
mov
shr
(bad)
idiv
movs
stc
and
in
iret
es
sbb
fcom
jle
fwait
mov
not
or
lock
xchg
imul
jmp
stos
sbb
mov
pop
ret
jmp
xchg
pop
xchg
js
xor
and
arpl
mov
sub
daa
jp
sub
jecxz
pusha
outs
xchg
movs
test
ret
into
lds
ins
pop
pminsw
call
inc
push
adc
mov
dec
nop
out
test
outs
add
inc
rcl
mov
adc
xchg
fsubr
call
jmp
test
fstp
cmp
(bad)
out
jp
mov
das
add
mov
dec
cmc
mov
sbb
cmp
push
stc
xor
(bad)
retf
mov
push
ds
ror
imul
sbb
adc
cli
stc
xchg
out
lock
(bad)
mov
pusha
in
dec
mov
loope
fsub
arpl
(bad)
repz
jb
mov
pop
hlt
mov
jle
clc
xor
out
jbe
bound
stc
push
sub
popf
xchg
xchg
mov
sub
dec
xchg
vpmaddwd
fs
es
jmp
push
sub
push
ror
mov
in
cdq
lahf
and
jmp
xor
leave
(bad)
ins
sbb
adc
mov
pop
mov
shl
or
sub
push
jae
pushf
mov
xchg
daa
imul
mov
test
std
sub
daa
mov
mov
bound
loope
pop
lods
inc
mov
pop
sub
(bad)
(bad)
push
aad
mov
stos
sub
lods
xchg
cmc
add
cli
repnz
pop
inc
fist
int
inc
enter
scas
cmp
mov
aaa
and
stos
rcr
ret
scas
fsubr
mov
inc
arpl
sub
ret
and
cld
sub
test
ins
mov
sbb
std
dec
sahf
mov
fcomp
jl
loopne
adc
xchg
test
lods
test
das
push
sbb
mov
lea
dec
sub
mov
lock
out
add
fldcw
push
xchg
movs
xchg
dec
aam
test
inc
(bad)
repz
leave
push
and
push
bound
pop
sbb
adc
pop
add
xor
push
and
cmp
cmp
nop
imul
rol
test
mov
mov
fld
xor
push
pop
dec
adc
xchg
icebp
icebp
mov
les
add
cs
mov
adc
dec
jp
cmp
(bad)
enter
or
loopne
jbe
cmps
bound
mov
cmp
daa
jmp
js
icebp
sbb
ja
icebp
js
push
es
inc
imul
lods
pop
out
xchg
aam
dec
(bad)
mov
and
and
jo
and
(bad)
fisttp
add
xchg
mov
aaa
mov
jo
dec
add
add
(bad)
and
pop
ja
ins
jmp
int
mov
into
scas
loopne
inc
repz
gs
mov
ins
add
pop
or
dec
fwait
pop
push
pop
inc
mov
call
or
dec
ret
cli
jp
arpl
test
fsubr
(bad)
jecxz
fstp
outs
mov
loope
mov
sub
cmp
or
aas
inc
dec
sub
int
mov
pop
sbb
ror
inc
mov
popa
call
and
fs
dec
(bad)
push
fadd
idiv
test
mov
inc
xor
dec
mov
xor
cmp
jl
mov
push
xor
cli
sahf
sbb
fild
cmp
push
repnz
mov
xor
gs
jmp
jmp
mov
fnstsw
ss
mov
mov
mov
jecxz
icebp
mov
sbb
ins
and
push
jle
stc
dec
jbe
mov
cmps
jnp
in
sbb
jg
out
mov
xor
adc
push
sbb
repnz
aaa
mov
and
jae
adc
repz
jp
repz
xor
leave
bound
inc
push
pop
add
lds
aas
jns
data16
mov
out
ficomp
fsubr
cmps
add
push
mov
pop
xchg
lds
inc
or
cmc
fs
pop
lock
ja
jle
add
fcom
pop
inc
mov
gs
lods
lea
add
fs
cs
adc
sub
test
loop
mov
imul
xchg
loopne
ds
jno
retf
sbb
fstp
mov
push
cmp
shld
jecxz
sub
jnp
shl
mov
fiadd
inc
xchg
bnd
sbb
gs
lea
pop
outs
arpl
lods
loopne
in
(bad)
adc
dec
fisttp
push
ss
popf
js
push
stos
ret
jb
in
pop
aam
pusha
pop
cmp
int
mov
lods
xchg
mov
(bad)
pop
jmp
push
test
ss
xchg
add
mov
cmp
push
outs
cmps
fwait
shl
fmul
lods
jmp
scas
sub
test
scas
pop
ja
jnp
add
push
fucom
pop
repz
cmps
cmp
(bad)
jecxz
mov
sub
inc
outs
add
add
in
and
ret
aam
add
and
stos
not
push
inc
into
ins
xchg
dec
cld
pop
jg
js
sub
mov
adc
loope
mov
push
and
adc
push
movs
jge
adc
fcomi
add
and
jnp
in
xchg
outs
pop
data16
sub
jno
adc
pop
add
dec
push
cmps
push
into
(bad)
mov
mov
cld
outs
dec
inc
(bad)
xlat
imul
mov
not
lods
data16
jb
mov
mov
push
fcom
loop
pop
out
fld
pusha
mov
imul
sub
ins
pop
mov
jns
scas
daa
jmp
and
in
repz
int3
fcom
sbb
adc
stos
jnp
pop
sbb
sar
or
cmc
adc
or
lock
add
sub
jmp
dec
jae
aaa
ret
xor
adc
pop
inc
cwde
mov
(bad)
push
xor
std
dec
je
bound
cmp
nop
jae
xchg
and
ss
bound
cmp
adc
mov
adc
movs
stc
mov
push
adc
(bad)
nop
movs
shl
or
mov
mov
pop
fidivr
add
loope
nop
mov
pop
outs
mov
test
js
icebp
xor
jnp
ret
sahf
ds
mov
cmp
mov
xor
sub
dec
jge
hlt
add
ja
jmp
mov
jbe
dec
pop
adc
pop
push
sub
inc
inc
xor
test
or
std
push
call
and
outs
adc
xchg
xor
lds
push
mov
cmc
fldenv
inc
nop
xor
lds
fmul
mov
pop
mov
inc
lods
gs
xor
lods
pop
sbb
sub
loope
pop
lahf
dec
sbb
xchg
xchg
mov
outs
sbb
inc
add
mov
lahf
dec
add
loope
outs
mov
and
add
add
adc
xchg
inc
xor
adc
jmp
jb
cmp
clc
add
in
cmp
popf
scas
(bad)
(bad)
xor
or
push
pop
int3
fstp
sub
mov
pop
xchg
and
jge
jb
cmp
sbb
xchg
stc
dec
jle
cmp
repnz
bound
xchg
xor
out
mov
mov
xchg
add
xlat
jg
loope
ins
pop
inc
fistp
jo
jle
jp
movs
stc
push
in
in
dec
sbb
addr16
inc
pop
imul
and
ins
repz
xchg
cwde
cwde
mov
adc
mov
mov
inc
fcom
xlat
push
xchg
dec
sub
daa
movs
xchg
aam
xchg
shl
push
cmp
pop
and
fmul
in
test
rcl
cmp
stc
jne
and
mov
aam
(bad)
or
mov
(bad)
and
pop
sbb
adc
ret
lds
pop
lods
cmp
sub
outs
shl
xor
cmps
pop
mov
pop
pop
ds
cld
lahf
add
adc
stos
xor
in
jo
xor
inc
mov
mov
jno
mov
xchg
mov
cmp
add
ror
js
ss
add
call
or
mov
cmp
mov
and
aaa
xchg
adc
(bad)
mov
sub
mov
outs
repz
sub
aam
(bad)
lock
mov
loope
aad
fs
pop
cs
xor
xchg
clc
je
or
mov
push
xchg
push
mov
outs
push
nop
push
ds
out
push
dec
and
mov
pop
fs
push
add
xor
inc
xchg
and
retf
ja
add
pop
push
mov
lods
sbb
add
sar
pop
or
cmp
jbe
push
add
daa
outs
fld
ds
stos
lahf
and
mov
xchg
pop
shl
out
push
adc
fist
addr16
mov
pop
aas
popa
ds
ins
xchg
or
jbe
inc
icebp
mov
call
dec
xchg
adc
pop
add
shl
sbb
xchg
mov
mov
mov
stos
and
mov
aas
int
cmps
xchg
stos
iret
inc
dec
out
rcl
mov
popf
jl
sub
add
inc
in
mov
jmp
mov
xor
jmp
xchg
mov
and
aad
(bad)
(bad)
std
pushf
mov
mov
mul
inc
ror
cmp
mov
lods
inc
mov
cmp
in
sbb
fadd
jne
je
jg
imul
xchg
outs
out
cmp
lock
(bad)
sub
push
fs
out
or
mov
xlat
ins
pop
and
loop
and
or
mov
sar
in
cwde
popa
mov
xlat
loopne
dec
xchg
(bad)
pop
rcl
stos
inc
or
push
add
or
dec
scas
rcl
leave
xor
add
les
jne
es
je
call
jecxz
loopne
mov
pop
fdivr
ins
shl
call
xor
bound
fild
cmps
shl
push
not
test
(bad)
jne
aam
(bad)
mov
and
xchg
push
jb
lahf
inc
nop
mov
xor
arpl
dec
loop
das
adc
(bad)
popa
mov
(bad)
pushf
sti
lods
jp
(bad)
cmp
push
loopne
nop
sub
xor
cmp
stos
lock
add
in
or
pop
inc
(bad)
jle
dec
add
sub
retf
inc
sbb
mov
dec
jbe
lahf
test
es
sub
cwde
inc
xchg
fs
das
pop
pop
xor
mov
(bad)
ret
mov
xchg
mov
push
int3
or
push
xchg
cmp
lock
int3
ucomiss
and
cdq
mov
fwait
nop
push
cmc
enter
pop
pop
push
jo
loop
stos
sub
cdq
sahf
sub
(bad)
fbld
mov
ror
sbb
mov
aaa
dec
sub
add
mov
(bad)
mov
push
outs
arpl
cmp
or
ss
js
in
xor
out
data16
lock
sub
arpl
inc
pop
push
test
pop
cdq
rol
mov
outs
lock
push
clc
adc
or
add
(bad)
add
mov
mov
pusha
mov
popf
cmp
retf
mov
inc
test
(bad)
pop
jbe
test
imul
in
mov
mov
lods
sti
pop
add
sar
jb
lds
into
imul
or
sub
and
dec
aam
mov
outs
jnp
push
jp
and
xor
adc
shl
fcom
jnp
mov
jmp
leave
xor
mov
jnp
mov
dec
rcr
adc
in
fadd
mov
int
jbe
ret
mov
add
xchg
xchg
aas
std
dec
pop
mov
mov
(bad)
mov
push
icebp
pushf
push
jmp
aas
ja
and
les
jl
clc
fmul
test
mov
mov
popf
mov
cmp
mov
ror
rcr
and
jae
lock
cli
in
addr16
stos
adc
cmc
jnp
push
aad
enter
fld
sbb
xchg
arpl
arpl
mov
or
push
test
ja
mov
adc
into
mov
xor
inc
ds
push
cmp
call
data16
or
jg
test
pop
push
test
daa
mov
iret
xchg
xchg
mov
sbb
pop
bound
jge
add
mov
dec
dec
fisttp
outs
xor
in
mov
sub
or
fbstp
and
ins
xchg
mov
pop
fcom
pop
sahf
xor
mov
xchg
ret
fnsave
mov
and
je
add
pop
rcl
hlt
push
adc
addr16
fsubrp
xchg
sbb
mov
das
mov
push
inc
and
pop
retf
and
cmp
push
or
out
int
adc
cmp
and
sub
pushf
jb
and
and
inc
js
adc
(bad)
fdiv
aam
sbb
in
fmul
dec
push
stos
sbb
mov
mov
inc
adc
sar
aam
mov
stc
ins
dec
adc
mov
cmp
icebp
mov
dec
stos
ret
and
icebp
add
cmp
clc
retf
in
sbb
bound
pop
xor
jecxz
pusha
xchg
nop
movs
jmp
lahf
mov
test
fistp
xchg
or
jns
pusha
and
scas
mov
pop
lock
call
mov
cmps
data16
scas
cmp
dec
pop
and
sub
aas
and
pop
popa
rcl
jns
sub
ret
or
arpl
loop
lods
stc
lahf
mov
adc
call
push
adc
(bad)
ja
push
xor
call
pop
push
mov
sbb
pop
push
xchg
sub
sbb
fwait
xor
dec
das
cmp
pop
outs
out
int
mov
add
pop
test
imul
jno
shl
cmp
mov
ja
int
les
daa
inc
sbb
dec
aas
jg
mov
call
xchg
xchg
dec
dec
fs
or
cmp
bound
jecxz
push
fisub
sbb
mov
sbb
cmp
fwait
cmp
rcl
jle
sub
test
xor
cs
push
in
and
inc
mov
mov
push
mov
js
or
sbb
das
dec
mov
and
or
cdq
sub
js
sbb
xchg
dec
pop
call
fisub
inc
pop
mov
adc
cdq
mov
sbb
repz
inc
addr16
test
cmps
mov
add
push
xchg
push
cmps
in
call
pop
iret
xor
out
aaa
mov
xor
push
inc
fmul
xlat
cmp
cmp
out
cmp
loope
das
icebp
dec
lock
(bad)
adc
pop
mov
cmp
ja
in
cmp
dec
xor
clc
pushf
rcl
jns
addr16
scas
loopne
sbb
adc
fisttp
xchg
add
xchg
les
inc
push
push
arpl
hlt
pop
jle
mov
or
dec
inc
cs
xchg
test
repz
movs
add
push
sub
jg
enter
into
pop
push
scas
mov
inc
mov
adc
and
xor
aad
test
dec
xchg
mov
jp
mov
add
mov
into
test
mov
jge
ret
data16
or
lods
movs
adc
and
mov
adc
scas
popa
outs
les
ss
addr16
xor
mov
sar
dec
jle
pop
jno
lea
out
cdq
sbb
mov
into
xchg
pop
loope
iret
and
lds
gs
fadd
inc
sub
popa
mov
jbe
icebp
stos
rol
(bad)
movs
xor
mov
push
xchg
sar
test
sbb
inc
mov
push
arpl
cmc
dec
js
outs
xlat
cmps
pop
xchg
push
cmc
adc
retf
sub
pop
idiv
adc
ror
addr16
cmp
dec
fmul
mov
scas
inc
push
adc
in
xchg
add
lahf
sahf
lds
jns
jb
mov
pop
inc
cdq
add
mov
mov
pushf
in
push
mov
addr16
sbb
inc
dec
(bad)
push
and
xchg
jecxz
nop
nop
dec
push
sahf
sbb
jae
xlat
sbb
cdq
enter
or
push
leave
popa
scas
push
or
repz
sbb
clc
rcr
push
leave
sbb
fs
add
test
xor
add
rcl
mov
retf
es
loopne
xchg
inc
jo
aaa
ror
scas
sub
sbb
cmps
aaa
dec
xor
fwait
imul
cli
or
stos
or
and
mov
mov
loop
jecxz
fdivr
jp
and
push
loope
xor
lahf
mov
mov
ret
dec
or
imul
jnp
dec
xchg
push
sbb
sbb
pop
lds
ffreep
out
mov
pushf
in
jbe
xchg
cmp
ret
lahf
mul
mov
xchg
mov
mov
outs
shl
data16
fimul
cmps
or
loope
add
scas
mov
aam
mov
add
jl
clc
div
add
push
ja
scas
mov
inc
or
or
inc
mov
jle
outs
dec
inc
ja
or
adc
out
fdivr
shr
or
cmps
(bad)
call
and
(bad)
into
jns
xor
jle
mov
aad
ss
adc
mov
jmp
jo
imul
loope
test
leave
xor
fld
inc
mov
jne
push
and
cwde
push
test
inc
sub
ret
push
leave
mov
(bad)
mov
data16
stos
cwde
mov
add
(bad)
pop
add
push
adc
or
retf
and
push
add
inc
fs
mov
and
pusha
ins
add
jmp
jg
and
bound
es
push
cmc
repz
fbstp
(bad)
rcl
pop
inc
push
add
out
and
iret
sub
fdiv
pop
aaa
add
and
es
movs
or
in
cdq
(bad)
call
xchg
jp
lods
movs
or
arpl
push
push
push
jb
cdq
shr
sub
and
mov
mov
cmp
test
and
shl
int
push
call
ins
xchg
sbb
push
mov
mov
enter
aaa
enter
xor
test
or
sbb
push
and
cmp
jmp
retf
pop
icebp
or
imul
jo
data16
js
shr
in
adc
sti
dec
cld
pop
sbb
dec
sub
rol
mov
clc
push
test
xchg
rol
cmps
ss
stos
inc
xchg
ins
add
in
div
setne
fwait
inc
int3
inc
jg
cdq
xor
cmps
jle
dec
fdiv
add
inc
scas
call
pop
cmps
jmp
xlat
cdq
test
outs
xchg
nop
fnsave
inc
nop
cmp
fmul
inc
(bad)
out
mov
sbb
sub
xchg
or
cdq
mov
imul
sbb
sbb
push
ret
sbb
pop
jnp
sbb
or
fmul
bound
or
mov
sbb
mov
jp
push
dec
mov
fcom
popf
repz
mov
push
sub
test
in
xchg
cmp
fprem1
cmps
cmp
je
add
test
fistp
sbb
call
and
cmp
mov
pop
hlt
adc
nop
in
adc
and
pop
adc
sub
ret
jmp
cmp
push
mov
test
pop
(bad)
lock
pop
add
popf
cmp
std
(bad)
out
cli
int3
sub
and
inc
add
adc
test
fadd
aam
cdq
mov
imul
test
cli
jmp
fwait
jbe
push
popf
mov
popa
mov
dec
repnz
pop
movs
or
vpor
jb
dec
jo
and
nop
xor
ret
out
cmp
das
cmc
mov
ins
mov
adc
xor
test
nop
xor
das
je
sbb
cmpxchg
or
inc
cmc
jo
jno
leave
lock
or
sub
out
cmp
pop
xor
imul
pop
ja
sub
or
stos
add
sub
inc
dec
jbe
mov
aas
mov
cmps
loop
dec
int
xlat
pop
(bad)
mov
cli
mov
dec
dec
ja
xchg
scas
xlat
mov
popf
ins
jge
outs
ret
add
and
icebp
call
mov
xchg
fiadd
dec
fcmovb
movs
jmp
cwde
lds
dec
push
sub
inc
jae
inc
test
pop
add
movs
mov
sti
dec
loope
out
(bad)
cli
mov
mov
popa
daa
add
(bad)
xor
shl
mov
sub
or
sub
jb
push
aam
fcomp
repz
js
xor
das
mov
add
cli
sbb
mov
loop
jge
cmp
ss
loop
adc
pop
test
ds
ja
pop
retfw
or
les
fmul
cmc
add
push
iret
iret
cdq
test
std
cmps
inc
ds
sahf
lock
xlat
push
push
jbe
icebp
cmps
repnz
addr16
add
adc
and
call
inc
aad
pop
(bad)
mov
and
ret
push
pop
in
dec
adc
jmp
fild
ficomp
or
test
cmp
outs
(bad)
in
pop
(bad)
inc
(bad)
push
lods
adc
push
jae
pop
pop
or
lahf
push
sub
or
cld
add
adc
mov
mov
pop
lods
lea
xchg
push
ss
jno
add
(bad)
sub
push
movs
les
and
rcl
jg
and
mov
mov
and
aad
dec
mov
gs
les
movs
loope
jg
inc
lds
clc
call
jp
leave
std
fisub
dec
lea
or
mov
push
xchg
bound
cmp
jne
or
(bad)
jmp
ds
mov
in
add
add
retf
push
leave
(bad)
xchg
inc
nop
jmp
mov
fmul
movs
(bad)
jb
mov
stc
xchg
mov
and
mov
sbb
push
add
dec
or
out
xor
stos
(bad)
ror
add
or
mov
pop
add
mov
ja
xchg
add
shr
pushf
push
arpl
sbb
cmp
sub
jg
in
cmp
jne
fisubr
mov
or
and
jbe
xor
loope
sub
xchg
repz
iret
push
mov
out
push
loopne
lds
pop
add
xor
aas
push
imul
(bad)
retf
push
cdq
sub
push
jb
xor
(bad)
dec
or
sahf
push
test
mov
jg
mov
(bad)
sbb
(bad)
sub
cdq
sub
mov
xlat
icebp
push
pop
cli
push
push
adc
repz
call
pop
sub
(bad)
mov
sbb
shl
call
jecxz
pop
cwde
adc
mov
mov
pop
mov
dec
aas
mov
dec
mov
jbe
cs
call
mov
stos
mov
or
imul
push
mul
push
(bad)
arpl
or
mov
push
mov
jne
ds
xchg
jae
loopne
or
enter
sub
stos
mov
or
mov
sub
ret
pushf
mov
or
sar
mov
aaa
push
add
hlt
dec
pushf
ffree
stos
sbb
push
cmp
pop
inc
gs
and
and
mov
ror
pop
out
push
stos
into
aas
lds
xchg
jo
push
fcomp
in
adc
sub
clc
lods
imul
das
test
movs
mov
push
ss
and
inc
pop
movs
push
adc
lahf
dec
xchg
fadd
mov
or
mov
scas
leave
jl
mov
mov
add
mov
push
mov
repnz
dec
or
adc
jae
mov
jne
and
movs
pop
neg
bound
add
in
mov
adc
icebp
xor
sbb
push
arpl
sbb
adc
leave
mov
in
and
push
cmp
faddp
xor
repz
mov
push
cdq
out
adc
ret
cs
(bad)
shl
adc
hlt
fxtract
xchg
rol
sbb
sbb
mov
fwait
inc
sbb
and
xor
mov
addr16
xchg
and
movs
push
test
inc
jo
in
aas
rcl
xchg
pop
aam
xchg
out
test
ins
add
out
or
fiadd
mov
cmp
cmovo
mov
addr16
pop
jne
jmp
mov
adc
sub
jne
ja
xchg
fs
pop
loope
push
cmps
arpl
inc
pop
xor
dec
mov
sbb
cwde
add
xor
cmp
adc
push
icebp
rol
int3
mov
push
shl
hlt
lods
xchg
jecxz
cmp
push
add
js
adc
leave
push
adc
and
dec
mov
mov
stos
pop
dec
push
xlat
cwde
aas
retf
push
jb
cmp
loop
call
or
jp
and
inc
jl
xchg
adc
dec
rol
mov
loopne
cli
(bad)
into
fcom
out
inc
pop
mov
out
mov
movs
jg
mov
in
pop
pop
cdq
sub
mov
loop
adc
call
movs
sbb
ficom
cmps
push
dec
pop
scas
mov
rcr
(bad)
adc
cli
cmc
mov
and
dec
out
jo
jmp
cmps
arpl
sub
xor
popa
ret
stos
xor
pop
stos
xlat
pop
mov
jmp
rol
fcomp
sbb
mov
mov
xchg
mov
ret
popa
(bad)
mov
jnp
mov
rol
call
in
pop
js
into
pop
(bad)
pop
clc
sbb
xlat
push
test
es
lock
cwde
cmc
mov
jle
mov
push
inc
iret
inc
imul
sahf
inc
sbb
lock
adc
xchg
mov
inc
stc
std
add
cs
inc
mov
xor
sbb
mov
jge
(bad)
std
xor
cmps
dec
jge
(bad)
retf
(bad)
push
es
and
pop
dec
mov
aad
enter
sbb
xor
fbld
jb
es
pop
or
sahf
test
stos
test
add
dec
add
sbb
dec
xchg
or
je
dec
jg
sub
stos
or
mov
mov
push
mov
and
xor
fimul
xlat
iret
pop
loope
jp
fucomp
add
outs
xchg
addr16
dec
cmps
aam
push
pop
(bad)
scas
mov
daa
xchg
push
jns
sub
in
mov
jp
loopne
dec
sar
stos
les
cdq
stc
xor
pop
jbe
jbe
cmp
outs
dec
jmp
fild
push
and
inc
popa
sti
dec
cmps
push
push
into
stos
adc
jb
jp
dec
mov
push
dec
int3
adc
test
icebp
pop
cdq
pop
mov
inc
mov
xchg
xchg
iret
int3
sub
(bad)
fwait
out
and
ficom
fld
cmp
outs
xor
adc
mov
cmc
pop
jmp
in
jno
and
and
gs
aad
(bad)
ss
call
pop
scas
jae
jmp
les
(bad)
mov
mov
nop
mov
and
mov
loopne
dec
dec
mov
(bad)
int3
and
inc
test
mov
xchg
and
xor
sbb
dec
lea
mov
push
xor
or
test
repnz
jae
dec
push
scas
call
loopne
and
push
jmp
sub
cmc
jne
sar
cmp
outs
push
adc
xor
mov
and
cmps
fdivr
stos
jecxz
push
pop
mov
je
cs
dec
(bad)
imul
adc
gs
loope
pop
or
and
cmps
adc
cli
inc
mov
mov
mov
mov
push
retf
push
pushf
push
or
cmp
lods
sbb
scas
xor
loopne
jae
pop
dec
xchg
jge
aam
data16
mov
stos
ret
inc
pusha
dec
xor
in
add
repnz
iret
loopne
xchg
jg
out
sub
stos
bound
add
and
xor
lods
stos
cmp
pop
lods
mov
xor
push
mov
pop
mov
push
push
into
pop
ror
clc
dec
pop
(bad)
adc
dec
les
jne
lds
pop
xchg
cvtpi2ps
dec
push
inc
imul
dec
in
adc
or
sbb
test
and
(bad)
imul
cmc
in
rcl
ins
and
pop
arpl
or
ficom
push
iret
leave
pop
xor
dec
(bad)
dec
scas
(bad)
inc
mov
inc
imul
cld
mov
xchg
out
mov
rol
outs
(bad)
lds
inc
push
outs
loope
idiv
nop
inc
push
mov
dec
cmp
js
stos
out
std
ret
mov
inc
fsubr
loope
and
test
adc
aad
scas
add
push
sti
inc
out
add
enter
push
adc
mov
test
jmp
lahf
in
sub
mov
xor
enter
sbb
pop
mov
jp
jo
or
mov
lods
lea
jg
call
mov
xor
pushf
gs
or
enter
movs
mov
repnz
rcl
sub
fwait
popf
xchg
fcomp
add
sti
out
aam
je
test
in
fmul
shl
stc
mov
fwait
aaa
jg
pop
retf
je
xchg
sahf
push
hlt
xor
xor
loope
rcr
pop
xchg
in
push
iret
sbb
out
test
daa
ja
popa
scas
lea
jae
jle
add
push
inc
push
mov
push
jnp
mov
and
add
mov
retf
dec
jmp
neg
xor
mov
lods
mov
cmps
aam
and
outs
add
ret
mov
mov
fisubr
cld
fwait
cmp
hlt
or
jne
adc
jp
add
pop
xchg
repz
add
mov
sub
xchg
movs
adc
and
fnstcw
xchg
ja
adc
aaa
add
aaa
int
xor
xor
xor
(bad)
pop
mov
jp
nop
mov
aaa
int
add
std
ja
xchg
cmp
mov
aaa
std
add
jo
push
cmc
popa
aas
pop
mov
lods
sbb
add
and
cmp
pop
lods
popa
mov
les
sbb
cmps
xor
xchg
mov
sub
das
pop
icebp
out
push
mov
out
and
or
mov
xchg
push
das
inc
in
pop
addr16
jl
xchg
js
jae
stos
dec
fdivr
es
add
xor
push
jbe
dec
repz
mov
stc
test
pusha
lods
pop
mov
mov
call
mov
(bad)
mov
cmc
pop
in
ret
cmc
or
push
es
jmp
fs
loopne
(bad)
popa
les
inc
mov
sti
and
inc
dec
mov
xchg
jb
in
or
or
add
ret
out
jmp
(bad)
jns
cmp
pusha
scas
in
mov
jae
inc
addr16
std
jne
mov
inc
mov
xlat
xchg
mov
mov
sbb
rol
and
cmps
mov
jmp
sub
cmc
pop
sbb
test
bound
lahf
sbb
fs
ins
(bad)
rcl
mov
mov
ror
push
dec
hlt
or
iret
stos
out
cmp
sub
xor
jg
dec
cmps
adc
mov
pop
jns
pop
inc
out
mov
adc
jo
xchg
test
scas
mov
cmp
pop
adc
std
xlat
inc
jo
fild
xor
and
cmp
ja
dec
mov
addr16
daa
int3
sub
xlat
int3
ins
js
in
les
aas
push
xor
dec
mov
mov
aaa
sbb
pop
int3
pop
repz
loopne
cmp
add
int3
add
push
push
fwait
xchg
shl
inc
fadd
ret
je
fstp
aas
sti
stos
or
aam
pop
add
adc
mov
sbb
push
pop
inc
in
fwait
xchg
sub
pop
js
fdiv
loop
push
sbb
mov
jns
rcl
sbb
xchg
call
xor
fisub
out
lea
xor
loop
lahf
pusha
pop
cmp
xlat
cmc
push
jmp
cdq
jo
mov
shl
dec
cmp
scas
mov
shr
das
(bad)
rep
daa
ja
test
push
xchg
ret
jo
mov
jae
and
pop
xor
mov
and
add
je
scas
cmp
ret
(bad)
cmps
jmp
out
(bad)
xchg
popa
ins
jo
sub
aad
and
and
movs
and
dec
cli
and
push
leave
ins
ins
lahf
test
das
repz
add
adc
cmpps
daa
pusha
leave
mov
loop
lods
dec
retf
sbb
cld
inc
movs
push
stc
ss
inc
push
mov
pop
icebp
enter
rcl
mov
(bad)
ss
sbb
pop
mov
jno
scas
push
(bad)
cld
add
lds
sbb
pusha
jne
pop
rcl
mov
sbb
mov
aam
dec
cmp
hlt
mov
mov
pop
shl
mov
mov
and
call
mov
cmp
cmp
mov
sub
pusha
stos
xchg
jge
test
xchg
lods
or
mov
sub
je
icebp
fcomp
sub
imul
push
int
movs
add
cmp
dec
rcr
push
mov
cdq
outs
cmp
add
push
mov
js
les
fadd
mov
shl
ficom
retf
add
lds
add
inc
or
clc
or
inc
outs
lea
xor
push
cmp
in
pop
mov
scas
int3
in
mov
xchg
and
xchg
pop
mov
inc
jmp
jno
sbb
jo
dec
mov
mov
inc
movs
or
mov
xchg
stos
into
neg
jnp
movntps
fdivr
popf
leave
jmp
cmp
adc
xchg
xor
call
mov
add
or
mov
push
pop
pop
arpl
xchg
ds
xchg
jo
and
cmp
fidivr
in
push
fwait
in
sbb
cmp
(bad)
push
mov
inc
inc
mov
and
jb
ds
les
cmp
aaa
call
enter
xchg
pop
leave
(bad)
mov
jno
cmc
add
bound
aas
adc
mov
ins
mov
in
or
push
aad
jmp
retf
std
add
in
push
out
lea
push
push
add
mov
sub
movs
gs
daa
lods
push
push
pop
and
sub
and
dec
or
mov
pusha
cs
push
xchg
loopne
nop
iret
test
xlat
addr16
ja
test
sub
push
pop
popf
mov
sub
fisub
leave
push
ror
pop
jle
push
or
pop
pushf
sub
pop
xor
xchg
int3
and
int3
or
inc
pop
inc
iret
sub
jmp
sub
sbb
pop
push
add
jmp
fadd
popa
in
data16
data16
sbb
sub
call
jns
test
jl
ret
rol
and
jns
icebp
cmp
neg
sub
enter
clc
mov
into
enter
adc
gs
mov
pop
push
(bad)
loop
xor
add
movs
sti
mov
sti
in
and
mov
mov
fwait
aad
adc
or
fldenv
xor
icebp
lahf
mov
lock
cld
mov
aas
mov
icebp
mov
ja
adc
or
xlat
xchg
loope
dec
fs
mov
rcl
mov
mov
imul
int
imul
mov
inc
aam
mov
inc
mov
cmps
and
adc
aas
icebp
push
clc
xchg
mov
aaa
inc
ja
ss
call
mov
(bad)
mov
push
or
jle
outs
dec
pop
mov
and
popa
push
jno
jns
(bad)
fwait
cmp
lods
push
cli
out
mov
mov
retf
pop
adc
mov
xchg
adc
inc
inc
xchg
jge
mov
jb
fwait
loop
inc
xchg
mov
add
lock
leave
jg
cmp
jo
gs
push
and
dec
stos
retf
sub
adc
or
popa
jmp
xor
jmp
int3
jns
loopne
pop
xor
jns
fnstenv
push
dec
mov
test
inc
xlat
mov
das
jmp
lahf
imul
jecxz
mov
and
lods
jl
mov
dec
(bad)
popf
jo
push
pop
out
jge
test
aaa
fisubr
mov
inc
lds
arpl
and
mov
ins
ror
cmp
(bad)
jo
mov
jmp
jle
loope
in
mov
xor
xor
xchg
inc
in
add
xchg
inc
inc
test
add
shl
ins
ficom
push
and
cld
xchg
dec
mov
dec
pop
add
sub
mov
mov
es
aas
mov
addr16
cli
mov
arpl
hlt
test
or
mov
fist
data16
out
ja
jo
imul
sahf
inc
popa
mov
dec
mov
and
hlt
retf
jbe
dec
dec
jbe
push
inc
std
mov
push
pop
pop
enter
es
scas
mov
int3
xchg
jne
sub
cmps
test
jbe
or
nop
lea
shr
dec
sub
loop
mov
rcl
cmp
mov
jo
xor
out
imul
pop
pop
jecxz
stos
stc
xchg
jmp
cli
jecxz
pop
fsub
test
xchg
sbb
cmps
call
adc
imul
push
add
xchg
out
cmp
sbb
dec
pop
pop
xor
retf
arpl
add
and
cmc
and
sbb
and
mov
repz
pop
sub
fcmovnu
mov
cmp
dec
mov
inc
push
out
ret
js
adc
repnz
sub
xchg
inc
popf
stc
push
int3
addr16
jae
mov
arpl
push
movs
pop
adc
test
mov
int3
xor
dec
mov
int
push
mov
sub
movs
std
mov
add
mov
sub
jmp
test
xchg
ins
mov
cmp
dec
add
and
jle
fs
xchg
gs
out
adc
xor
xor
dec
movs
in
sti
xchg
inc
iret
stos
mov
cld
aad
gs
or
jmp
out
inc
mov
cs
mov
(bad)
(bad)
nop
add
out
sbb
xchg
or
mov
and
retf
or
xchg
in
les
sbb
hlt
mov
dec
xchg
xlat
dec
adc
mov
or
outs
fadd
sbb
into
outs
jmp
mov
jp
sbb
sub
mov
lods
push
cmps
pop
retf
out
pop
out
cmp
(bad)
fcomp
mov
push
pushf
iret
cs
or
mov
xchg
xor
and
popa
popa
dec
push
dec
mov
xchg
mov
cmp
das
out
stc
popa
cwde
movs
or
stos
sub
sub
and
pop
cwde
test
call
in
xchg
fcomi
repz
cs
scas
jge
push
cdq
xor
xor
xchg
push
cmp
sub
inc
pop
out
loopne
rcr
lds
adc
out
or
mov
mov
addr16
fadd
cmps
push
adc
inc
dec
mov
aas
clc
in
mov
sub
retf
shr
aas
mov
adc
add
sbb
aaa
mov
xchg
sahf
sub
imul
push
jge
cmp
scas
jb
fisubr
push
and
dec
sub
sbb
pop
imul
push
sbb
arpl
bound
out
loope
sub
outs
repz
mov
mov
and
test
mov
clc
repnz
shl
(bad)
arpl
adc
cs
pop
dec
mov
mov
add
push
pop
and
and
jne
outs
test
outs
jge
xor
leave
cli
loop
je
iret
jb
lds
jmp
arpl
ins
dec
sbb
sahf
ror
mov
or
mov
imul
mov
mov
push
push
or
pop
add
shl
pop
dec
shl
test
inc
mov
fwait
int3
cmp
fdivr
hlt
xchg
sub
outs
je
cmp
retf
jmp
int3
mov
xlat
clc
pop
stc
cmp
jl
push
sahf
in
jl
fcmovb
jo
imul
cmps
jmp
loope
or
inc
out
test
dec
add
inc
out
(bad)
mov
fld
in
ret
jecxz
mov
les
adc
adc
ins
adc
call
daa
mov
scas
cmp
addr16
add
add
sar
out
sub
ja
or
out
out
jnp
sbb
int
fisubr
adc
push
ins
out
(bad)
pusha
xor
pop
add
push
push
stc
cmp
pop
ret
int3
mov
retf
shr
popa
test
and
movs
out
push
inc
mov
bound
push
xor
pop
out
and
mov
lahf
jecxz
sub
pop
push
mov
aam
retf
xor
test
push
and
jmp
mov
xchg
sbb
fwait
mov
and
bnd
sahf
aas
mov
adc
adc
ss
(bad)
es
fwait
xchg
leave
mov
shl
jbe
sti
in
cdq
ins
les
dec
xchg
push
cmp
rol
xchg
or
pop
jg
mov
mov
and
push
xlat
sbb
loop
xchg
add
movs
adc
sti
sub
and
sahf
lock
add
cmp
iret
arpl
call
push
rcl
pop
mov
push
das
cs
xchg
es
sub
cmps
daa
or
inc
clc
and
xor
ja
outs
clc
push
inc
dec
cld
mov
push
mov
adc
neg
cwde
or
in
pop
out
sub
sub
inc
addr16
dec
ja
call
mov
mov
ficom
xor
inc
xor
add
push
push
call
inc
aas
pop
cld
pop
sbb
out
fild
fsub
push
or
dec
and
enter
mov
and
in
and
and
mov
mov
sub
iret
retf
out
shr
add
push
shl
test
xchg
xchg
xor
inc
inc
xor
aaa
xchg
out
fdivr
mov
scas
xchg
mov
jl
xchg
push
and
pop
xchg
mov
js
fist
das
xchg
mov
dec
iret
mov
push
fs
and
sbb
cmc
adc
dec
fwait
sbb
pop
sub
add
imul
dec
mov
icebp
into
cmps
jle
repz
in
fisub
dec
cwde
fld
in
jns
clc
(bad)
cmp
popa
movs
fcmove
lahf
adc
sub
push
xor
shl
xor
dec
sub
cmp
ror
cmps
shl
sub
lods
aaa
jnp
aam
xor
test
(bad)
mov
movs
repz
(bad)
imul
and
push
jo
sub
fistp
iret
push
adc
and
mov
out
xchg
hlt
cmp
mov
leave
into
retf
idiv
xor
pop
add
aaa
pop
inc
sub
(bad)
mov
add
sub
adc
imul
arpl
hlt
sub
int3
adc
sub
mov
outs
push
add
cwde
cld
out
lods
outs
cmp
(bad)
or
clc
not
in
sub
aaa
ss
lea
mov
inc
pusha
mov
aaa
sbb
das
jns
lahf
cwde
jecxz
fstp
ins
xor
sub
cdq
and
jae
push
loop
das
jne
adc
jne
and
leave
and
xchg
lods
mov
xchg
add
fmul
mov
stos
call
add
cmp
lea
mov
cdq
or
jbe
push
data16
leave
shl
xlat
div
aad
int
cli
cwde
int3
lea
rol
call
das
sahf
int3
fwait
pop
mov
cld
hlt
sbb
mov
jp
mov
inc
imul
jle
test
push
or
cld
ins
dec
aaa
add
push
jl
push
xor
into
mov
jmp
pop
test
dec
stos
imul
je
test
mov
or
adc
cmp
js
inc
scas
scas
call
lds
mov
mov
dec
mov
pop
and
dec
or
(bad)
cmp
add
(bad)
idiv
fwait
and
mov
add
into
test
xchg
pop
sbb
iret
sub
jecxz
in
fcomi
dec
cmp
sub
loopne
in
xor
ins
mov
inc
jmp
je
xor
cmps
sar
mov
cmp
outs
repnz
test
std
(bad)
mov
or
mov
mov
push
fsubr
leave
pop
icebp
rcl
in
clc
(bad)
popa
hlt
in
cld
adc
ficomp
ins
ds
(bad)
sbb
mov
and
sub
sub
nop
xchg
les
cmp
jmp
mov
jb
and
add
rcr
scas
in
ret
or
cs
shl
xor
sbb
(bad)
mov
push
mov
and
call
cmp
pop
fisttp
fucomp
mov
dec
and
push
xchg
add
adc
or
cmp
pop
push
jne
(bad)
ret
and
pushf
pop
sbb
inc
fcmovnbe
out
sub
cli
cmp
imul
or
aam
mul
jmp
push
sub
sub
sbb
scas
xchg
stos
sahf
in
or
push
sbb
and
sbb
(bad)
ja
mov
mov
xor
adc
stos
xchg
cmc
sar
(bad)
jecxz
xchg
sbb
fdivr
les
inc
lods
xchg
or
jne
add
in
stc
xor
lods
xrelease
ins
inc
in
in
jmp
cwde
test
jno
call
and
add
in
adc
fstp
movs
sub
cld
or
mov
leave
push
xor
add
in
cmp
add
shl
jmp
std
into
das
in
std
add
inc
mov
xor
sbb
div
in
scas
xor
bound
xor
and
push
in
pop
imul
mov
aam
pop
or
shl
push
fcmovnu
pop
in
sbb
sub
les
test
pop
pop
and
stos
daa
and
adc
mov
lea
mov
popa
add
add
cld
dec
adc
(bad)
pop
cmp
jmp
call
push
in
in
popa
ja
pushf
lods
lods
and
mov
mov
push
lock
or
leave
sub
out
mov
lahf
cmp
push
adc
xchg
pop
test
jbe
push
xchg
inc
mov
call
out
bound
wrmsr
loope
jne
movntq
fmul
mov
dec
fild
mov
mov
mov
into
and
pop
xchg
int3
inc
lds
cmp
mov
cmps
inc
inc
daa
jno
lods
sti
div
cmp
lea
iret
sbb
mov
jns
icebp
cmp
into
daa
call
movs
in
cmp
rcl
pop
loopne
adc
jecxz
sbb
adc
lds
icebp
or
mov
inc
jmp
pop
cmp
cmc
ins
shl
xchg
nop
inc
add
out
push
jp
inc
test
(bad)
adc
es
inc
lods
mov
(bad)
and
call
dec
cs
jbe
jp
shl
addr16
xchg
mov
add
clc
and
pop
pop
les
imul
les
fmul
aad
adc
push
int3
out
add
mov
and
aaa
aad
adc
scas
sub
std
jmp
xchg
cmps
xchg
dec
mov
arpl
cmp
cmp
shl
test
ins
dec
add
jp
sahf
dec
jae
test
mov
scas
xchg
sti
call
pop
arpl
sbb
ret
mov
les
cmp
retf
cvttps2pi
adc
cmp
mov
pop
or
sub
retf
cmp
and
test
and
sti
mov
xor
mov
mov
jmp
xchg
ds
ret
retf
sbb
sbb
repz
in
and
add
cmp
call
sub
jb
jae
pop
jl
or
aad
into
dec
std
push
(bad)
inc
mov
xor
fcomp
and
mov
sub
pop
jae
adc
stos
or
mov
test
ins
or
out
sahf
frstor
xlat
pop
nop
pop
and
fisttp
cmp
sar
sub
dec
loopne
test
ins
rcl
es
popf
sub
or
pushf
xor
or
es
shr
cmp
fcom
rcl
ror
das
push
jg
push
mov
add
idiv
push
lds
add
pop
inc
outs
cld
jge
mov
xchg
jae
(bad)
mov
pop
cdq
frstor
adc
(bad)
push
xor
fiadd
stos
jnp
pop
loopne
xchg
xchg
jge
int3
ret
inc
fnstcw
out
or
xor
popa
lds
mov
push
imul
jg
out
or
(bad)
push
mov
sub
push
retf
inc
out
or
inc
adc
adc
xchg
jle
xor
ja
adc
mov
mov
inc
dec
xor
sub
movs
mov
jp
jnp
mov
xchg
push
cmp
pop
mov
stc
aas
jne
cmps
popf
mov
fild
test
jae
adc
or
sbb
xlat
mov
gs
jo
sbb
rcl
out
jge
mov
mov
jp
jecxz
jmp
arpl
add
sti
cld
in
dec
rol
inc
shl
movs
lahf
push
or
sub
sbb
mov
inc
clc
xor
mov
sub
test
push
jnp
retf
ins
sub
movs
xchg
stc
sbb
xor
int
mov
or
retf
ins
push
pop
sbb
inc
sub
push
int3
sub
push
daa
sbb
sar
outs
mov
dec
inc
imul
adc
fmulp
leave
dec
push
jo
out
push
outs
loopne
xchg
daa
mov
gs
pop
jg
aas
outs
leave
xor
addr16
aam
pop
mov
ud0
pop
popf
ror
pop
not
adc
mov
aad
push
scas
aam
pusha
pop
cmp
int3
iret
out
inc
and
inc
push
xchg
std
mov
mov
pop
dec
inc
mov
ins
pop
loop
scas
(bad)
jle
mov
cmp
xor
xor
pop
ins
xor
call
and
pop
pop
dec
inc
inc
or
in
call
or
mov
xchg
adc
repnz
push
cmp
imul
sti
jge
(bad)
jae
arpl
mov
jae
fcom
dec
popa
aad
xchg
adc
adc
mov
in
xor
pop
jbe
in
scas
(bad)
push
leave
push
hlt
jg
out
jmp
stc
dec
cmp
add
mov
hlt
enter
xor
lock
add
aad
cmps
call
add
pop
cmp
push
imul
adc
stc
xchg
cmps
ins
test
sbb
add
push
sub
and
xor
push
add
mov
sahf
mov
mov
add
mov
popf
aas
cmps
inc
xchg
ret
or
push
aaa
(bad)
mov
fldenv
inc
sahf
outs
jns
mov
mov
icebp
add
fild
cld
xchg
mov
push
or
sbb
out
mov
jmp
mov
pop
jecxz
fwait
xchg
xor
xor
pop
mov
ds
rcr
call
aad
sub
arpl
dec
std
xchg
mov
dec
shl
xchg
test
sub
dec
hlt
pop
repz
test
sbb
inc
xchg
sbb
xchg
mov
fsub
mov
movs
push
cmp
jns
adc
aad
aas
test
gs
out
adc
data16
cld
fiadd
cmp
fwait
sub
or
xrelease
mov
inc
pop
stos
push
xchg
sub
sub
adc
shl
ja
xor
xchg
lods
pop
inc
les
pushf
fild
bound
je
mov
xchg
sub
inc
addr16
xlat
push
adc
scas
and
les
lds
push
push
stos
les
dec
push
jl
push
or
sbb
(bad)
loopne
call
movs
(bad)
ret
inc
retf
pop
mov
dec
lods
lods
xchg
cmp
popf
push
pop
cmps
not
out
jne
add
ins
adc
mov
inc
xor
mov
nop
sub
dec
mov
add
mov
ins
inc
or
mov
xchg
clc
cdq
cmp
pop
aas
ret
sbb
pop
push
stos
mov
loop
lahf
sbb
xor
fcomp
lods
and
and
push
ret
pushf
ins
bound
popf
inc
sub
les
popf
inc
xor
push
sar
sqrtps
xor
loopne
repz
cld
js
stc
in
push
ins
stc
adc
push
stos
cmps
dec
mov
jge
ror
push
mov
mov
jns
call
xchg
fimul
or
inc
fistp
jb
pop
hlt
jmp
pusha
or
pop
jnp
in
inc
jmp
leave
sbb
out
pop
jno
jmp
jne
les
push
jp
fldcw
adc
and
mov
push
sub
stos
xchg
xor
sbb
sub
or
push
mov
aam
mov
repnz
xchg
cmp
fwait
ret
mov
mov
mov
dec
mov
rcl
fiadd
mov
shl
fsub
(bad)
pop
sub
mov
ror
jecxz
test
(bad)
shl
out
pop
xlat
xor
repnz
cmc
out
add
movs
sub
rcr
push
sbb
mov
dec
cmc
mov
xor
out
cmp
jmp
ss
xchg
mov
in
fcmovbe
shr
fnstenv
repnz
jmp
push
aam
dec
or
and
bound
cmps
in
scas
fwait
addr16
cmc
add
cmp
mov
mov
pusha
push
fld
inc
addr16
daa
sbb
sbb
cwde
imul
push
jns
outs
jbe
sbb
fmul
cmp
add
repnz
out
lods
aam
cwde
inc
mov
(bad)
ins
arpl
pop
sub
stos
psubw
(bad)
lahf
fild
mov
cld
push
sub
pop
out
cmp
add
std
inc
js
lods
imul
ja
adc
xchg
jg
push
sbb
leave
loope
mov
fsub
xchg
sub
in
nop
mov
iret
fst
retf
cmp
test
aaa
call
or
adc
scas
jecxz
dec
push
dec
das
xchg
(bad)
imul
repz
mov
(bad)
sbb
sub
dec
test
mov
or
and
(bad)
shl
xor
sbb
cld
inc
dec
push
mov
outs
or
or
test
cmps
(bad)
push
fiadd
imul
add
sbb
shr
mov
mov
ret
cmp
stos
daa
sub
sbb
jbe
imul
xor
and
jns
call
lock
push
loope
int3
adc
ret
mov
mov
adc
sub
sbb
dec
out
pop
jmp
icebp
repz
movs
xor
fadd
cli
(bad)
or
xchg
je
push
xor
jg
clc
sbb
mov
div
push
cmps
stos
cmps
in
or
inc
daa
rol
adc
dec
dec
aam
jnp
add
add
add
mov
fdiv
push
in
nop
aaa
lds
in
aas
clc
mov
aas
daa
out
cmps
cmp
or
inc
fnsave
push
mov
pop
dec
repz
ins
inc
inc
jb
aas
div
jg
or
(bad)
retf
mov
jnp
lea
or
add
movs
retf
or
inc
sub
mov
push
int
inc
outs
test
test
mov
pop
sar
sahf
call
imul
cwde
(bad)
es
enter
loopne
jbe
hlt
sbb
jns
push
lea
test
inc
push
inc
push
add
sub
pusha
iret
and
shl
and
cmp
sbb
push
in
test
mov
mul
and
mov
cmp
cmp
adc
adc
mov
and
jb
xor
cdq
or
fadd
aaa
sbb
mov
fldcw
sbb
ja
loop
xor
in
out
mov
enter
adc
or
rol
jle
bound
(bad)
rcr
std
fisub
pop
push
inc
arpl
test
imul
icebp
xor
test
and
or
js
jne
add
xchg
hlt
xor
sbb
fstp
ja
push
je
or
addr16
sbb
push
pop
addr16
and
lods
repnz
cs
dec
(bad)
in
mov
and
add
or
sbb
inc
ja
ds
add
in
xor
mov
and
xchg
rcl
int
(bad)
push
sar
xlat
pop
xor
dec
xor
mov
sbb
cwde
adc
jecxz
and
outs
lods
ds
xor
inc
push
pop
mov
loopne
mov
cmp
in
into
lods
add
mov
dec
push
xor
imul
imul
adc
sbb
repz
(bad)
jbe
ss
js
xor
add
dec
adc
pushf
and
fcomp
(bad)
or
xchg
leave
and
mov
xor
fucomi
xor
pop
jne
push
inc
ja
xchg
sub
pushf
inc
dec
or
and
sti
fadd
inc
fcmovb
dec
inc
mov
adc
cmps
jno
and
dec
sub
pop
imul
push
or
fldcw
push
dec
mov
shl
and
fs
xor
je
sbb
jbe
push
jecxz
(bad)
push
cwde
push
jb
dec
pusha
adc
or
jmp
sar
loopne
mov
adc
add
push
and
(bad)
pop
adc
enter
dec
add
icebp
dec
mov
stos
mov
pop
stc
pop
xchg
jbe
(bad)
sub
pop
idiv
push
cmp
xchg
dec
scas
dec
push
mov
sub
int
cmp
(bad)
mov
cli
push
rcl
or
lahf
daa
test
test
leave
and
mov
inc
inc
jae
pop
cld
retf
imul
sub
imul
lock
mov
and
int3
js
xchg
or
jb
mov
rcr
pop
push
xchg
(bad)
aam
cmp
sub
jmp
rcl
loope
mov
lods
pop
cmp
sbb
(bad)
stc
cmps
push
cli
rcr
rcl
adc
adc
xor
in
ds
or
or
out
cmp
fs
pop
pop
and
bound
fnstsw
mov
mov
sti
dec
inc
push
sar
(bad)
jae
mov
mov
pusha
mov
ret
jle
xor
test
xor
(bad)
pop
maxps
loop
sbb
repnz
rol
in
sbb
xor
push
les
add
xchg
cmp
push
pop
lahf
inc
outs
test
mov
adc
in
cmp
mov
inc
les
xor
pop
ss
pop
jb
xchg
call
pop
inc
sar
pop
mov
push
xor
cmps
mov
jae
xor
icebp
fsubr
cmp
rcr
inc
sbb
jecxz
adc
or
pop
scas
lods
mov
movs
nop
rcr
cmp
movs
mov
aas
mov
scas
xchg
mov
fdivr
and
jne
loopne
popa
mov
inc
les
data16
jg
aad
imul
mov
rcl
jg
jbe
lods
jmp
fsub
dec
fmul
cmps
out
dec
jbe
or
in
lahf
sbb
inc
sbb
inc
fist
je
jno
cmps
adc
add
bound
jmp
xor
cmp
(bad)
mov
sub
test
(bad)
(bad)
pop
retf
jns
mov
loopne
add
out
js
loope
and
push
cmp
lds
cmps
mov
popa
ret
sti
fiadd
outs
xchg
cmp
leave
mov
arpl
loope
ror
mov
mov
inc
sti
fdiv
call
sub
aam
inc
sar
sbb
inc
dec
repz
outs
dec
cmps
xor
aas
test
ret
dec
jp
dec
ja
fstp
fadd
and
cmp
jl
pop
arpl
test
popf
mov
js
adc
leave
mov
hlt
pop
shr
xchg
pusha
mov
test
(bad)
lea
sbb
cmp
out
rol
loope
or
push
sbb
xor
stos
cmps
xchg
call
xor
or
cmp
push
dec
add
dec
cmp
or
xchg
ret
std
sub
inc
lods
and
rcr
mov
sbb
push
jmp
xchg
cmp
xor
ret
imul
loopne
dec
push
lahf
and
sti
xchg
cmps
and
or
icebp
leave
cld
jmp
test
inc
and
daa
pop
nop
xchg
les
xlat
jmp
dec
in
jmp
ds
jae
aas
adc
in
ficom
push
mov
xor
ins
mov
mov
enter
daa
dec
fisubr
lock
jp
jbe
mov
adc
mov
lock
adc
sbb
cld
iret
sbb
pop
icebp
push
pop
pusha
les
push
mov
movs
cmp
pop
imul
jns
cmps
pop
push
push
mov
fs
or
sub
push
outs
leave
jno
scas
xor
test
jl
test
movs
in
or
sbb
push
jg
xor
mov
adc
adc
add
and
clc
sbb
popf
jno
ins
add
xchg
xor
cdq
add
idiv
setno
ror
hlt
cmp
xchg
push
in
js
jecxz
jnp
inc
sbb
retf
jecxz
push
push
push
das
mov
out
into
add
scas
pop
daa
jno
mov
dec
repz
pop
cmps
add
fwait
mov
lods
push
dec
adc
in
ins
xchg
sub
jg
ds
dec
inc
int3
mov
dec
daa
retf
fistp
xor
dec
fbld
mov
(bad)
mov
fbstp
pop
movs
das
mov
ins
scas
cmps
pop
es
fild
and
sub
push
sbb
sbb
xor
in
fstp
xchg
mov
mov
rcr
out
mov
xor
adc
and
sbb
imul
repz
adc
dec
xor
(bad)
aaa
out
push
or
xchg
adc
test
in
jl
xchg
loop
jge
adc
sar
mov
sbb
xchg
inc
xor
movs
loope
ja
mov
mov
loope
dec
and
call
push
pop
ror
cmp
(bad)
call
mov
repz
ss
xor
add
jp
jbe
mov
in
je
aaa
les
inc
sbb
inc
cmp
(bad)
jp
mov
inc
jae
lock
idiv
and
xchg
movs
mov
int
bound
mov
aam
jbe
pusha
jae
(bad)
ins
mov
jo
sti
cld
bound
xchg
jo
test
test
clc
xor
js
stos
mov
adc
push
xor
aaa
enter
adc
ret
enter
hlt
add
mov
cmps
scas
jmp
xchg
loop
jmp
cld
add
sti
lock
mov
stc
cli
call
cmps
int
cli
xchg
pop
cli
fwait
or
mov
fbld
mov
rcl
sahf
leave
retf
mov
enter
(bad)
lds
pop
jmp
test
call
xor
and
or
inc
test
xor
add
outs
idiv
dec
in
sub
mov
fld
cmp
lea
out
xchg
push
jbe
in
dec
fsub
pop
mov
mov
add
add
xlat
add
cmp
fist
out
push
inc
adc
adc
sub
xor
cmps
psllq
icebp
push
sahf
push
sub
cmps
add
sub
pop
sar
inc
lods
and
retf
nop
nop
xor
jg
data16
aad
push
mov
sti
popf
retf
or
into
inc
mov
mov
pop
mov
and
mov
jmp
sub
push
dec
inc
xor
das
push
popa
xor
inc
sub
movs
or
pop
or
out
(bad)
enter
enter
dec
push
xor
popf
mov
pop
xchg
movs
pop
clc
or
pop
ja
jge
rcr
bound
dec
xchg
jo
inc
jo
test
and
fisttp
jmp
adc
cmp
jmp
cmps
pop
push
pop
movs
lea
mov
cmc
jle
or
es
dec
mov
jmp
mov
mov
outs
push
dec
cmp
add
(bad)
out
pop
aaa
je
not
shl
in
movs
and
cmp
int3
outs
int3
and
and
test
pop
int
hlt
in
das
shl
(bad)
mov
shl
pop
daa
fmul
inc
daa
in
push
(bad)
fbstp
xchg
sbb
adc
into
setns
enter
xchg
xlat
cdq
pop
nop
inc
stc
pop
pusha
sahf
and
bound
sahf
cmp
(bad)
popa
repnz
popa
imul
mov
inc
inc
loope
outs
js
test
in
hlt
retf
sbb
mov
sbb
mov
mov
les
into
jnp
mov
or
xchg
scas
popf
enter
cmps
adc
or
push
dec
imul
add
inc
pop
add
and
pop
adc
jge
add
jecxz
pop
push
jl
pop
call
add
sub
mov
jae
and
push
(bad)
jle
ins
imul
cmp
inc
inc
xchg
xor
lahf
cs
shr
jo
push
and
push
es
inc
fdiv
rol
cmps
(bad)
inc
adc
ror
rol
push
movs
pop
push
imul
xor
repnz
jns
arpl
sub
(bad)
jbe
clc
dec
inc
dec
rol
cmps
call
aam
adc
stos
movs
ret
or
je
xlat
and
or
pop
add
outs
sub
inc
syscall
fimul
enter
fstp
mov
mov
fstp
ret
add
out
aaa
dec
cdq
and
adc
outs
fwait
inc
ds
int
lock
fs
aad
pop
leave
mov
in
mov
nop
and
mov
pop
(bad)
ins
stos
retf
into
iret
sbb
sbb
lods
loopne
es
fs
ret
icebp
xor
pop
inc
into
push
sub
sbb
aaa
push
in
jle
mov
inc
adc
fmul
xor
repnz
mov
pop
jae
pop
loop
fwait
adc
rcr
mov
call
dec
push
call
jge
bound
leave
mov
push
outs
mov
pop
mov
repz
daa
pop
imul
or
test
aaa
xchg
push
lea
mov
xchg
ret
out
add
add
jno
pop
jnp
fs
mov
fsub
mov
dec
sub
jmp
or
xlat
add
aam
mov
push
(bad)
stos
jecxz
aad
xor
or
jmp
int
xchg
mov
enter
push
inc
aam
mov
push
popf
dec
jbe
(bad)
div
sti
call
loop
retf
mov
mov
in
hlt
sbb
(bad)
mov
mov
and
or
ds
inc
fdiv
test
cmp
mov
push
jnp
test
xchg
sbb
adc
mov
clc
int
fdivr
sar
stos
outs
xlat
clc
push
and
mov
xchg
push
fcomi
mov
add
cmp
mov
sbb
aas
pop
adc
push
popw
dec
sub
pop
or
lock
pusha
out
add
jne
mov
jg
cld
xchg
jbe
add
xchg
xchg
call
add
mov
sub
mov
add
jne
pop
mov
mov
gs
fdiv
mov
fnstsw
push
test
es
ins
mov
dec
addr16
(bad)
pop
lea
das
push
ret
mov
loop
scas
fsub
jg
call
lea
inc
in
mov
or
push
push
adc
nop
jne
push
mov
jl
cwde
push
mov
inc
ret
paddd
pop
mov
sub
and
mov
xchg
mov
fbstp
test
sub
mov
iret
mov
outs
pop
mov
xchg
inc
dec
pop
lahf
ret
pop
aas
or
ds
xchg
inc
sub
in
adc
fist
scas
(bad)
int
in
mov
sub
lods
and
out
mov
jge
and
add
dec
retf
mov
int
jo
rcl
pushf
pop
in
cmp
shl
in
in
(bad)
out
pusha
(bad)
cmp
jb
pushf
lock
dec
(bad)
test
cmp
mov
test
or
ss
and
xchg
rcl
and
stos
xchg
call
stos
fsubr
jp
addr16
test
inc
or
push
sub
pop
(bad)
daa
mov
pop
inc
jo
repz
xchg
sub
cmp
pushf
inc
add
push
repz
xor
sub
adc
sbb
xchg
xchg
xor
shl
add
je
mov
push
mov
inc
dec
pop
add
fcomp
js
les
sbb
call
bound
inc
mov
ret
cmp
mov
aam
icebp
xchg
jns
rep
push
push
sbb
aaa
pop
xchg
jle
js
fwait
xlat
movs
cli
inc
mov
std
dec
adc
pop
idiv
mov
gs
nop
fcmovnb
mov
mov
sub
lahf
fistp
jae
jle
xchg
stc
xchg
xor
jmp
sub
outs
es
dec
pop
sbb
inc
xchg
add
sti
imul
out
jne
outs
iret
mov
call
xlat
dec
fstp
and
push
mov
mov
push
mov
mov
xchg
xor
or
js
and
jae
test
xor
pusha
int3
pop
xor
dec
inc
mov
(bad)
mov
cmp
jns
add
push
mov
add
and
or
inc
fwait
mov
lods
jbe
idiv
pushf
jl
xchg
push
rcl
mov
xor
xlat
dec
jae
adc
sbb
shl
xor
inc
rcl
gs
xchg
retf
push
ds
pop
xchg
test
push
out
or
lahf
in
jge
dec
pop
mov
js
inc
mov
and
sbb
mov
cmp
inc
jbe
add
xchg
adc
fs
cmp
sub
addr16
imul
sbb
nop
or
imul
inc
mov
mov
fiadd
cmp
repnz
mov
jmp
or
lahf
push
dec
mov
inc
sub
fbld
or
inc
push
data16
dec
push
add
sahf
test
ss
ficomp
dec
gs
aam
mov
pop
dec
sub
jne
mov
or
dec
aaa
cdq
inc
or
dec
clc
adc
jns
fisubr
and
add
imul
or
mov
jae
pop
push
push
jmp
(bad)
fisubr
movs
test
cmps
xor
mov
dec
xchg
sub
cwde
push
xor
test
pop
(bad)
sbb
(bad)
int
jns
adc
rcr
pop
mov
lds
not
and
jno
ja
js
dec
daa
jo
scas
push
add
inc
or
cmps
mov
xchg
stos
arpl
es
push
pop
sub
add
ret
stos
int3
push
add
cwde
es
cwde
mov
or
jb
mov
push
daa
push
mov
scas
inc
das
imul
in
inc
jge
xchg
int
pop
inc
cmp
jl
cli
cwde
bswap
sub
dec
xor
clc
into
stc
cmp
sahf
add
sub
cs
push
push
pop
cs
scas
jge
dec
or
into
jbe
jbe
mov
stos
mov
lods
aam
shl
jns
dec
mov
add
stos
test
xor
fist
dec
lahf
pop
sahf
lock
lea
xchg
(bad)
jno
(bad)
std
arpl
sbb
cmc
fwait
or
add
push
pop
imul
push
retf
fnstsw
push
cmp
jg
ret
sti
jl
cwde
inc
out
repnz
jae
xchg
or
fild
rol
test
dec
xor
and
mov
pop
push
mov
sbb
mov
xor
mov
mov
and
xor
(bad)
fist
add
scas
and
mov
or
pop
push
cmp
adc
std
cmps
pop
push
out
aas
ja
xor
in
into
push
lahf
xchg
and
es
lahf
mov
adc
fnsave
jl
loopne
lahf
adc
push
stos
fnsave
jle
xchg
inc
xor
imul
out
test
stos
rcr
dec
xlat
and
ins
in
push
xchg
mov
or
pushf
xchg
mov
or
ja
cmp
inc
mov
scas
mov
out
test
inc
cmc
sub
cwde
sahf
or
sbb
xchg
add
outs
or
arpl
dec
sub
cmps
mov
lds
out
cmps
cli
dec
sub
or
test
adc
lods
xor
cmp
daa
inc
cmp
lods
jg
stos
or
mov
fbstp
add
xor
in
add
sub
lds
pop
mov
mov
mov
retf
stc
mov
jp
pop
mov
jl
retf
xchg
out
mov
xchg
fdivr
add
jae
adc
test
xchg
pop
pop
test
mov
cmps
imul
push
mov
jecxz
or
push
pop
ins
mov
mov
out
inc
inc
adc
xor
repnz
push
arpl
scas
push
neg
adc
mov
push
ret
add
int
sahf
xchg
lar
repz
pop
mov
shl
push
mov
sub
test
test
xchg
in
jne
xlat
mov
sub
int
repz
(bad)
in
cmovl
cmps
xchg
or
xchg
and
in
and
call
pop
jle
(bad)
and
sub
dec
inc
(bad)
mov
sub
pop
sbb
ins
dec
pcmpgtw
popf
aam
push
retf
stc
repnz
aam
fsubr
mov
pop
mov
xchg
pop
xchg
sub
enter
int
dec
jge
enter
pusha
repz
ins
sti
cld
jl
in
fst
cld
ret
mov
and
fsubp
ins
scas
adc
xchg
sbb
in
fsub
sub
and
pop
lds
and
mov
les
xchg
cmc
adc
xchg
loop
mov
add
mov
push
retf
aas
dec
mov
sbb
or
fcom
sbb
push
daa
jg
mov
inc
adc
dec
add
xchg
test
add
xchg
cmps
rcl
jae
push
fstp
shr
loope
mov
popa
sbb
adc
mov
ins
and
inc
and
pop
fist
jb
mov
dec
bound
push
rcl
imul
add
mov
mov
pop
cld
jg
out
jmp
push
std
mov
cmc
push
dec
jnp
ds
cmp
sbb
pop
push
adc
sbb
pop
fucom
cmps
push
sub
jmp
add
stc
xchg
(bad)
mov
nop
movs
or
mov
shl
push
jb
(bad)
(bad)
in
shl
lahf
rcl
(bad)
leave
jge
out
movs
add
(bad)
cmp
test
mov
mov
loop
inc
add
cmp
sub
ins
sub
add
hlt
sub
adc
mov
mov
sbb
add
mov
mov
mov
addr16
test
or
(bad)
adc
or
push
mov
mov
sbb
push
mov
repnz
mov
or
out
sbb
ins
adc
jmp
or
xor
(bad)
xchg
add
int
and
ret
mov
fcom
mov
imul
movs
and
sub
lods
in
sub
movs
out
or
(bad)
mov
cdq
sbb
loopne
ja
scas
push
jbe
jbe
retf
dec
pop
jmp
adc
js
and
cmp
mov
imul
dec
loop
ret
sub
jmp
imul
cs
jg
rol
sbb
dec
jl
ins
xor
inc
lods
stos
jge
mov
adc
loopne
mov
stos
not
pop
std
mov
fild
shl
adc
xchg
test
movs
inc
sub
or
loopne
cmps
jge
(bad)
int
sub
in
mov
sub
arpl
cmp
ficom
leave
std
adc
jns
jbe
push
enter
push
nop
popa
fwait
addr16
pop
sahf
add
add
mov
sar
jae
or
or
xor
pop
jbe
mov
es
xor
mov
inc
(bad)
fld
or
pop
daa
and
push
or
data16
dec
jnp
imul
jmp
out
jecxz
add
pop
jnp
jno
jl
sbb
xchg
cmp
jnp
dec
(bad)
pop
out
inc
sahf
inc
ret
jae
jmp
sbb
push
jns
jbe
or
push
mov
aam
xchg
fidivr
loop
sbb
add
sbb
and
add
pop
xchg
xor
add
call
add
stos
jl
in
inc
or
push
(bad)
push
xor
outs
scas
mov
push
xchg
(bad)
lods
and
sub
dec
test
inc
pop
sbb
push
lahf
inc
adc
lea
adc
jg
and
and
sub
pop
popf
imul
push
ja
nop
sbb
inc
icebp
inc
jne
inc
test
dec
adc
out
lea
fucomip
and
jp
scas
cmp
stos
mov
cs
sub
ins
pop
js
loopne
out
sub
mov
not
lods
movs
jg
inc
push
clc
leave
(bad)
js
mov
mov
daa
jge
sar
jnp
xchg
ja
pop
jmp
mov
adc
out
ret
sbb
sub
fst
mov
mov
jb
loop
pusha
fnstenv
inc
orps
je
inc
div
arpl
bound
and
adc
fst
sbb
loop
scas
fs
mov
jp
les
sbb
mov
shl
jb
inc
mov
mov
push
mov
retf
xchg
rcl
cli
mov
jae
adc
aaa
scas
pop
mov
rol
jmp
call
loope
das
aad
mov
mov
and
scas
jne
aad
inc
mov
mul
imul
xlat
cmp
xchg
mov
xor
repnz
dec
enter
jmp
jecxz
mov
nop
loopne
scas
jne
mov
jecxz
(bad)
mov
out
(bad)
jmp
gs
cmp
sub
inc
call
(bad)
xlat
pop
inc
cmp
(bad)
pop
pop
mov
cmp
pop
loope
lds
xchg
daa
jb
lds
mov
mov
test
repnz
adc
sub
pop
lahf
movs
(bad)
ins
xchg
push
mov
call
pop
add
cmp
retf
pop
dec
loope
shl
pop
add
ds
lds
xor
(bad)
lahf
mov
(bad)
in
out
lds
jmp
shl
inc
int
rcr
mov
cmp
(bad)
dec
cmp
or
or
jp
mov
movs
or
shl
jg
lods
fnstcw
mov
add
mov
pop
pop
pop
pop
cmp
pop
sub
xlat
ins
out
shl
jg
inc
pop
dec
pop
aam
jns
xor
xor
and
push
jo
or
xchg
cld
sub
push
mov
sti
scas
cs
jecxz
pop
or
push
xor
mov
(bad)
stc
mov
fwait
call
pop
sbb
inc
clc
nop
xchg
in
push
mov
stc
add
nop
xor
bound
lds
or
mov
add
lahf
daa
sub
ins
add
sbb
out
inc
out
pop
outs
xchg
mov
loope
lds
jle
test
fbstp
outs
mov
jge
imul
enter
sub
pause
sbb
mov
repz
inc
push
in
retf
mov
imul
add
mov
std
add
inc
jnp
mov
dec
pop
cmp
mov
cmps
jp
in
test
lahf
gs
(bad)
movs
bound
sbb
dec
xchg
not
add
and
or
mov
bound
mov
dec
push
lahf
pusha
into
mov
push
inc
jb
ins
and
mov
inc
mov
int3
cmc
xchg
inc
jl
xchg
les
xor
call
not
sar
cs
aaa
cdq
adc
iret
and
sbb
dec
daa
(bad)
dec
push
out
je
xor
inc
mov
cs
dec
jg
pop
out
pop
std
icebp
mov
div
outs
sub
adc
jg
mov
cmc
mov
in
sti
lods
push
fs
adc
mov
loop
(bad)
xchg
call
ret
xchg
sub
out
jmp
test
or
fld
sub
imul
or
xor
icebp
mov
adc
adc
push
mov
mov
push
fnstenv
inc
stos
in
mov
pop
adc
les
test
sbb
test
ins
jmp
jne
add
or
push
(bad)
icebp
xchg
cmp
adc
and
mov
pushf
call
dec
or
dec
xchg
sar
dec
adc
cli
xor
or
adc
outs
outs
cmp
adc
lods
xchg
sbb
jmp
lds
mov
or
jecxz
xchg
sbb
xchg
and
cld
jmp
cmp
sub
xchg
test
cmc
(bad)
sar
and
cmps
xchg
pop
add
mov
mov
xor
nop
sahf
lock
xor
ss
adc
test
xchg
pop
mov
ins
add
dec
sub
jecxz
cmp
inc
mov
arpl
ds
xor
or
inc
jp
hlt
jp
ffree
ret
sahf
dec
in
daa
dec
sub
mov
xchg
and
fs
repz
mov
jmp
push
sbb
pushf
dec
dec
es
into
in
ss
cmps
jle
cmps
in
lods
jmp
lock
in
scas
sub
scas
ficomp
movs
mov
cs
and
pop
push
in
in
push
out
pop
outs
sub
lds
outs
in
rcr
ins
fucomp
xor
sbb
xchg
push
rcpps
test
xchg
aad
cmp
mov
jle
(bad)
out
cs
inc
jmp
gs
lods
sbb
dec
or
jge
cmp
das
(bad)
repz
test
and
inc
dec
add
mov
imul
mov
out
fwait
push
mov
repnz
xor
data16
std
call
call
add
fst
fsub
xchg
xlat
scas
in
ret
mov
sub
mov
add
mov
mov
lds
mov
jg
mov
mov
gs
adc
loop
and
aas
or
or
popf
(bad)
stc
jle
push
mov
push
xchg
test
imul
jmp
fiadd
jl
and
loopne
bound
push
sti
icebp
dec
xor
repz
or
out
hlt
jl
(bad)
jo
xchg
jecxz
rol
mov
sbb
daa
jne
test
push
sbb
push
sbb
adc
xor
retf
(bad)
jp
mov
or
mov
xor
fisttp
pop
(bad)
rcl
sti
cmp
dec
daa
dec
sub
scas
test
clc
jno
mov
scas
and
and
and
jb
fcmovnu
pop
je
addr16
push
es
sbb
xor
add
sti
hlt
pop
jb
sbb
daa
or
cmp
mov
or
cwde
mov
out
xor
sbb
dec
jb
cwde
aad
and
mov
xor
(bad)
ror
out
pop
out
(bad)
icebp
cdq
push
pushf
js
jge
mov
jmp
lds
sub
ins
dec
sbb
cmp
cmp
cdq
out
xor
pop
les
mov
test
or
inc
dec
adc
movs
cmp
inc
xchg
dec
sbb
ins
in
push
xor
out
pop
outs
retf
jp
in
int3
outs
into
(bad)
rol
jnp
stos
lock
into
and
xchg
pushf
movs
imul
sbb
int3
push
pop
push
ins
in
jg
dec
mov
outs
dec
inc
es
test
popf
clc
push
mov
inc
mov
mov
lahf
xchg
arpl
leave
int3
dec
and
cmp
std
cmp
push
jae
cmps
call
dec
add
shufps
cmp
pop
retf
pop
and
mov
pop
cmp
in
pop
xchg
sub
stos
imul
or
add
lock
inc
cs
aad
punpcklwd
cmp
out
mov
nop
mov
fcomp
cmp
xchg
cld
in
xchg
call
dec
aad
bound
imul
pop
xor
jno
push
adc
dec
jp
in
cld
mov
pop
push
dec
mov
pop
xor
sbb
test
loopne
mov
ds
iret
mov
cmp
ins
mov
test
(bad)
popa
add
lods
push
inc
(bad)
push
mov
nop
in
(bad)
outs
das
pop
pusha
movs
or
call
or
mov
or
xchg
push
push
mov
mov
in
mov
add
call
push
mov
push
add
inc
adc
call
jb
ret
push
and
mov
pop
retf
fcomp
in
or
jg
mov
in
and
(bad)
cmp
or
scas
fnsave
stc
pop
inc
(bad)
dec
jo
and
pop
jmp
or
js
dec
out
add
xor
mov
pop
mov
mov
jb
mov
and
pop
xor
arpl
inc
fwait
and
inc
mov
fsub
bound
jmp
lea
inc
popa
or
jp
jle
ficomp
and
test
cmp
mov
mov
push
jmp
and
int
jo
xchg
iret
aaa
imul
adc
fsubr
xchg
mov
hlt
push
adc
fisubr
mov
add
xchg
dec
sub
jno
mov
mov
inc
push
xchg
pop
pop
mov
add
mov
call
mov
inc
mov
jle
jge
bound
call
xchg
inc
xchg
jp
adc
call
sbb
xor
test
push
mov
and
lods
and
sbb
pop
(bad)
into
cmp
sub
mov
cwde
and
sub
ins
mov
aad
jecxz
in
or
test
or
cli
lods
xchg
xchg
pop
mov
cdq
cmp
inc
pop
cmp
fsubr
sbb
push
stos
and
pop
mov
fidivr
adc
adc
fs
mov
xor
jmp
and
push
mov
jp
stos
imul
pop
dec
and
aas
inc
cs
sbb
adc
cmc
cwde
mov
mov
movs
cmps
sbb
pop
shr
out
std
adc
fsub
sbb
push
jns
cmp
ror
dec
cmp
leave
(bad)
rcl
stos
sti
rcr
in
adc
pushf
mov
outs
loope
sub
fild
xchg
mov
adc
mov
sbb
pusha
adc
pop
(bad)
push
cmp
add
jg
sub
mov
mov
retf
lods
and
pusha
aad
xchg
loopne
call
out
dec
ficom
and
outs
mov
push
test
xchg
cdq
or
inc
xor
fmul
mov
clc
pop
or
loope
jge
popf
mov
xor
es
jns
dec
sti
(bad)
fst
inc
cmp
mov
fs
xchg
mov
arpl
aas
shr
xor
mov
xchg
add
ror
cmps
fst
adc
xor
xchg
mov
xchg
retf
mov
jmp
dec
sbb
and
scas
adc
pop
or
retf
stc
int3
(bad)
and
mov
mov
sub
daa
mov
fwait
(bad)
faddp
fistp
sub
int
pop
sub
adc
stc
rol
(bad)
xchg
push
mov
and
inc
xor
or
add
loope
inc
ret
mov
(bad)
or
cmps
pop
xor
inc
pop
push
jg
mov
inc
push
jne
neg
xlat
xchg
test
jmp
pop
imul
outs
enter
or
(bad)
rcr
daa
aas
int3
icebp
dec
xor
jo
retf
sbb
mov
xor
fmul
ret
and
js
std
dec
dec
xor
lods
scas
xchg
test
add
out
test
and
fwait
xor
sub
pop
in
call
cld
pushf
xchg
jns
ds
push
mov
mov
xor
push
add
aas
sbb
retf
bound
push
addr16
mov
add
retf
fwait
lds
lock
push
hlt
loop
test
popa
das
push
mov
xor
ins
mov
pop
xor
push
in
test
jecxz
mov
stos
push
nop
shr
sub
or
inc
daa
cmp
push
jne
fild
mov
sub
ret
out
sbb
jae
sti
and
push
psubusw
xchg
push
in
sub
sbb
(bad)
mov
jg
xchg
dec
pop
inc
gs
aaa
out
int3
mov
ror
push
lock
popa
and
loop
fwait
and
jmp
mov
and
or
rcr
inc
add
mov
(bad)
imul
inc
lds
push
addr16
cld
pop
lods
pop
iret
pop
mov
mov
sti
popa
adc
xor
mov
in
and
mov
mov
jle
sbb
and
loopne
sti
add
js
dec
xchg
push
jae
std
dec
push
mov
or
jmp
xlat
and
loopne
xor
jb
push
jge
pop
jle
lods
stos
xchg
je
test
pop
loope
aas
sbb
push
jnp
test
sti
xor
cmp
and
pop
jae
jmp
push
(bad)
icebp
add
out
test
test
xchg
add
call
cwde
or
imul
push
xchg
cmc
push
sbb
inc
mov
mov
cmps
cmp
sbb
jp
push
shl
jp
fnstsw
and
add
mov
stc
cmp
movs
add
int3
mov
test
mov
xlat
xchg
cdq
mov
fdiv
lods
je
jns
inc
aas
xchg
(bad)
jecxz
push
cwde
mov
pushf
mov
push
add
pusha
bound
fistp
xlat
sub
enter
jb
lahf
lods
daa
pop
stos
mov
stc
pop
into
in
shl
and
ja
dec
dec
ins
fiadd
jb
imul
fs
enter
test
(bad)
cmps
push
aas
daa
fcmovnbe
jecxz
jmp
loope
pop
gs
aas
mov
jmp
add
mov
xor
outs
cmps
cmp
inc
sti
push
rol
dec
adc
sti
stos
cmp
outs
js
mov
fwait
clc
hlt
add
dec
in
fcmove
popf
les
arpl
jne
inc
or
inc
and
mov
mov
icebp
sbb
nop
inc
gs
mov
mov
outs
sti
mov
ret
mov
and
ja
int
dec
mov
mov
test
push
pop
dec
cmp
cwde
mov
pop
and
mov
cwde
sub
sbb
imul
jg
add
xor
(bad)
cmc
add
cmps
xchg
and
push
mov
(bad)
add
mov
lods
fsub
pop
push
push
xchg
sbb
rol
mov
lds
or
dec
lods
mov
jmp
and
pop
inc
or
dec
test
mov
push
add
mov
push
je
jl
xor
adc
and
dec
leave
mov
inc
js
mov
mov
(bad)
repnz
sbb
div
sub
cwde
aaa
popf
or
adc
lods
out
ret
(bad)
adc
stc
and
inc
xor
rcr
pop
sub
ins
lock
(bad)
xor
les
xchg
dec
sub
retf
or
dec
ja
push
pop
lods
jno
repz
test
fidivr
push
mov
adc
dec
ds
add
cdq
mov
dec
add
add
push
cmovno
ds
out
mov
xor
pop
stos
and
icebp
cdq
nop
or
dec
and
arpl
jo
mov
neg
mov
mov
push
les
inc
jo
pop
xchg
mov
sub
add
(bad)
cmp
cmp
mov
js
sbb
mov
dec
stos
xchg
pop
clc
les
pop
push
mov
test
int3
retf
jb
iret
fnsave
pop
pop
mov
and
push
dec
leave
xor
or
inc
nop
sbb
fistp
in
lea
and
jecxz
sbb
pop
popf
sub
adc
and
(bad)
int
ss
fldcw
ret
fnstsw
xor
stc
push
mov
imul
mov
and
loope
or
(bad)
or
into
xor
lods
jp
push
(bad)
cmps
sbb
sti
pop
mov
int
ins
lock
out
adc
or
mov
(bad)
sahf
dec
push
jno
in
mov
xor
imul
cmps
les
test
mov
aad
cwde
fsubrp
lea
(bad)
sahf
xor
xor
mov
repnz
mov
xchg
pop
ins
call
or
mov
aas
cmp
je
fst
rcr
and
mov
push
mov
mov
add
add
sbb
mov
in
(bad)
das
bound
(bad)
es
mov
xchg
mov
rcl
sub
in
pushf
shld
mov
push
mov
std
stos
je
(bad)
dec
inc
gs
xor
inc
sbb
ror
rol
out
push
leave
cmp
cs
sbb
int
outs
loope
and
jecxz
mov
sbb
fadd
ret
mov
movs
cmp
jnp
xchg
hlt
xchg
sub
lahf
arpl
lahf
push
shr
mov
ret
xchg
jmp
mov
inc
cmovbe
cdq
(bad)
fst
pop
retf
pop
sbb
and
cmps
and
pop
and
dec
or
dec
aad
mov
xor
push
int
adc
xor
jb
lock
adc
test
out
mov
push
mov
xchg
fs
lahf
jnp
aad
xchg
jmp
dec
fsub
movs
pop
xor
in
push
test
xor
ja
dec
out
pop
jbe
cli
daa
jo
sub
or
fxch
(bad)
fs
idiv
pop
pop
rcr
cli
sub
mov
push
div
adc
rcr
fcomp
cmps
dec
cmps
aaa
jo
push
aad
xchg
push
xor
data16
push
jecxz
pop
push
push
ins
push
push
and
aas
ja
mov
int
jno
sub
dec
arpl
sub
cmp
push
xor
sbb
sub
lds
loop
adc
sbb
int3
mov
lods
cmp
and
ret
xlat
ss
push
iret
push
jmp
mov
daa
leave
inc
push
gs
in
add
outs
sbb
fcomp
test
cmp
clc
rol
repnz
lods
gs
rol
push
mov
xor
push
neg
rcr
push
xchg
xchg
cld
iret
cld
mov
push
imul
push
(bad)
xor
fiadd
popa
jbe
inc
mov
adc
jge
(bad)
sbb
push
jne
loop
pop
jo
and
in
shr
je
imul
(bad)
das
lahf
push
xor
shl
xor
jge
cmp
or
jge
and
push
add
fild
(bad)
call
enter
pop
div
inc
fbld
sbb
jle
xchg
popa
sub
inc
xchg
jmp
(bad)
repz
pop
mov
fdivrp
push
sub
fwait
xchg
rcl
aas
(bad)
dec
movs
(bad)
popa
(bad)
mov
add
int
cs
sub
sub
inc
xor
inc
imul
into
dec
retf
mov
fiadd
cmc
aas
and
adc
jns
arpl
xor
movs
jae
sub
cmp
push
in
inc
mov
xchg
mov
add
loopne
dec
cmp
jnp
fwait
xor
fnclex
adc
mov
(bad)
dec
sbb
mov
(bad)
sub
pop
ror
movs
dec
cld
outs
add
jae
fwait
mov
cmc
(bad)
in
pop
sbb
sbb
sti
xchg
push
cmp
(bad)
jns
mov
(bad)
scas
mov
mov
sbb
outs
les
adc
inc
ret
out
shr
push
or
mov
mov
cmp
daa
push
dec
xor
jmp
mov
fsubr
cmp
fsubr
or
daa
dec
push
call
add
pop
test
sub
xchg
loopne
dec
imul
xchg
push
pop
mov
fisubr
cmp
jmp
add
adc
jle
pop
cmp
ins
sbb
mov
jp
dec
sub
jecxz
xchg
out
dec
(bad)
xchg
push
or
adc
data16
and
retf
sub
fwait
icebp
and
arpl
popf
shr
loopne
sbb
out
push
add
daa
pop
or
xchg
jo
adc
push
inc
adc
xchg
xor
dec
cmp
pop
mov
stc
jns
movs
adc
push
jo
shl
pop
les
imul
pop
xlat
jo
push
fiadd
cmp
out
cmp
jg
add
es
jg
inc
sti
pop
push
cmp
jmp
cmp
mov
loopne
mov
es
sbb
xor
dec
xor
movs
nop
jg
sahf
cmp
or
xchg
mov
arpl
pop
cmp
mov
aas
pop
xchg
shl
into
sub
sar
xchg
cmp
jmp
sbb
mov
out
(bad)
cli
adc
cmps
adc
adc
cmc
das
mov
jno
mov
sbb
frstor
bound
popf
rol
pop
mov
cwde
aam
les
cmp
icebp
data16
push
imul
(bad)
cmp
mov
jl
call
les
ror
push
jge
mov
fidiv
sbb
repz
pop
loopne
sub
sub
and
add
ss
cwde
daa
add
and
ins
pop
push
xor
cdq
inc
daa
dec
(bad)
inc
cld
pop
sti
cmc
enter
and
cmp
mov
loope
and
into
sub
clc
jnp
adc
sub
fidivr
and
retf
xchg
push
and
or
ja
mov
(bad)
sbb
xchg
and
loope
test
std
jno
inc
mov
xlat
movs
jbe
inc
scas
das
push
jne
mov
test
(bad)
and
adc
push
scas
cwde
inc
gs
xchg
pop
gs
lahf
aam
mov
mov
sub
xor
push
popf
aaa
hlt
sub
cmp
fwait
es
add
push
arpl
hlt
cmp
out
pushf
jne
fadd
pushf
(bad)
es
outs
sub
sbb
jg
cmp
sbb
add
adc
push
adc
(bad)
mov
je
rcr
dec
sbb
aad
adc
mov
xlat
push
pop
mov
jo
adc
jo
push
aad
cs
das
pop
rcr
jmp
adc
mov
and
cmps
div
into
retf
jae
adc
pop
retf
and
mov
or
pop
xor
push
stos
fucomp
mov
test
sbb
pushf
xchg
or
adc
jne
stos
in
in
out
sub
add
hlt
fs
clc
fidiv
mov
mov
jns
add
leave
not
xchg
rol
vorps
push
xor
mov
pop
scas
xchg
inc
jno
fwait
mov
inc
add
mov
add
js
pop
pop
je
inc
dec
add
mov
mov
push
add
fs
push
jnp
sbb
push
and
pop
fwait
adc
xor
pop
(bad)
or
test
cs
stos
xchg
retf
stos
ins
sbb
rol
enter
out
js
pusha
mov
leave
mov
adc
xchg
outs
inc
mov
inc
cmps
das
cs
xor
out
aam
mov
jnp
push
jno
int
es
sub
std
fild
stc
fsubr
mov
mov
inc
sbb
lea
cs
xchg
mov
lahf
jle
dec
push
xchg
ins
pop
mov
push
sti
data16
adc
test
mov
aaa
jge
sub
(bad)
or
jmp
(bad)
mov
xlat
enter
sub
mov
hlt
icebp
jns
jbe
jg
push
stc
add
(bad)
mov
gs
pop
sbb
jb
and
inc
cmc
jnp
mov
icebp
jmp
popa
out
mov
test
inc
cmp
pop
gs
mov
lahf
pop
push
jecxz
lahf
neg
out
inc
test
jno
in
cwde
ret
pop
inc
ficom
out
jle
cmp
fs
imul
mov
jecxz
addr16
xchg
lods
sbb
mov
repz
mov
ret
aaa
std
mov
sbb
cmp
cmps
dec
in
lods
push
mov
jmp
dec
push
inc
daa
mov
pop
mov
cld
mov
(bad)
xchg
les
pushf
rdtsc
inc
mov
popf
cmp
out
sub
fwait
call
cld
and
aad
xchg
pop
cmp
or
adc
daa
rol
sbb
xchg
movs
jg
jge
sbb
push
ins
ins
pop
mov
stc
push
xor
inc
cdq
push
mov
dec
pop
ret
add
or
push
or
sub
dec
lds
cmp
inc
xor
push
bound
jl
add
leave
mov
mov
fisttp
and
xchg
(bad)
int3
(bad)
pop
lahf
jge
pushf
pushf
mov
dec
sbb
or
gs
xor
push
pop
mov
lods
mov
pop
sub
js
xchg
or
cmps
inc
es
retf
jecxz
xchg
jp
lgs
mov
add
test
add
scas
jecxz
lahf
pop
or
dec
addr16
lea
inc
cmc
xchg
inc
and
xchg
nop
inc
mov
(bad)
and
add
sbb
xchg
jne
gs
mov
and
out
sbb
pop
mov
adc
mov
pop
repnz
mov
push
xchg
shl
mov
push
xlat
mov
jmp
loope
jp
jmp
outs
xor
retf
test
fdiv
xchg
fidivr
cmc
or
outs
sti
mov
fadd
bound
(bad)
add
cld
push
sbb
js
sahf
push
push
add
lds
not
mov
mov
jae
arpl
add
stc
retf
xchg
jbe
push
fmulp
retf
hlt
in
mov
add
sbb
enter
loop
imul
sbb
mov
cld
push
hlt
leave
sub
dec
in
pop
adc
das
fimul
shl
and
sbb
cld
or
jp
inc
mov
shl
mov
mov
dec
(bad)
or
call
push
iret
shr
inc
dec
jns
and
and
dec
fsub
jle
add
les
cmp
pop
js
or
push
sub
fcom
jl
shl
test
jae
retf
rol
cmps
pop
xchg
sub
sbb
jecxz
adc
sti
rol
add
or
repz
inc
add
xchg
lahf
fs
cmp
cmp
neg
jg
inc
dec
aam
push
int3
cmc
cmp
push
lds
outs
push
mov
sub
dec
inc
cmp
xor
dec
mov
fwait
pop
stos
popf
cmc
jne
(bad)
ins
lea
mov
mov
mov
pop
ret
retf
mov
int3
mov
js
inc
popa
xor
dec
das
in
leave
mov
xchg
psubusb
ins
test
add
repnz
lahf
xchg
mov
sbb
mov
cmp
mov
inc
cmp
xchg
xchg
add
sar
dec
add
das
rcl
ins
cmp
xor
addr16
jbe
adc
sahf
fsubr
inc
cmc
mov
ret
sbb
add
call
call
mov
mov
pop
sub
pop
jns
xor
fld
pop
jl
imul
in
cmps
mov
mov
jg
xor
fdiv
cmp
pop
jb
mov
add
shr
push
shl
mov
jmp
pop
bound
sub
fild
out
retf
mov
mov
dec
xchg
loope
bound
or
stos
xchg
leave
cmp
gs
fisub
arpl
sar
dec
xchg
retf
dec
sbb
pop
cmc
scas
xor
push
dec
addr16
fisubr
push
fbld
push
pop
outs
mov
test
fmul
(bad)
mov
aaa
lahf
lds
dec
mov
add
lea
aam
cs
jnp
clc
or
jecxz
(bad)
in
ror
cld
js
push
jmp
push
pusha
mov
stos
in
loopne
sbb
lock
popa
sti
in
xchg
hlt
inc
pop
jge
fwait
pop
leave
mov
mov
ja
adc
jg
sub
gs
push
inc
push
sub
hlt
and
fild
pop
adc
(bad)
out
out
cld
dec
imul
and
mov
call
mov
xor
in
sub
scas
es
outs
inc
or
xchg
hlt
sbb
outs
inc
pop
test
test
call
imul
xor
jb
data16
ds
scas
lods
mov
inc
xchg
je
mov
movs
sub
push
bound
push
addr16
jmp
pop
jae
out
mov
leave
stc
mov
shl
ror
push
out
loope
mov
cmp
sub
addr16
sbb
mov
lods
xchg
xchg
bound
fistp
inc
loope
gs
mov
add
jne
shl
ss
xchg
sbb
jg
fld
mov
(bad)
test
loope
test
pop
sti
or
xchg
jae
xacquire
xor
ja
inc
imul
inc
lea
lods
sbb
push
xchg
push
cmps
adc
sti
fs
and
jl
retf
mov
out
js
into
inc
dec
mov
push
cwde
cmp
mov
sbb
inc
jne
add
xchg
dec
or
and
fwait
std
aaa
sbb
shl
out
mov
fsub
and
push
pusha
jo
int
fdivr
pop
inc
addr16
lods
mov
pop
and
mov
add
pop
xchg
sbb
adc
jle
mov
dec
dec
movs
jecxz
mov
add
leave
lock
xor
hlt
or
cmp
xchg
dec
ror
xchg
or
mov
jno
pop
data16
mov
ins
xor
pop
cmp
and
jbe
(bad)
cmp
leave
xchg
sahf
out
ffree
in
mov
(bad)
andps
mov
nop
mov
sub
fwait
cmps
cmp
repz
and
mov
fbstp
repz
pop
js
mul
cdq
popf
dec
pop
(bad)
fnop
push
in
pop
cld
xlat
dec
sbb
sub
addr16
sub
cdq
pop
xchg
out
dec
dec
popf
je
sbb
fadd
shr
sbb
outs
shl
pop
icebp
mov
pop
in
dec
je
mov
cmps
jae
dec
xor
push
mov
xchg
pop
push
in
push
test
or
int3
rcr
mov
retf
mov
cmp
inc
mov
push
iret
daa
jmp
in
scas
jns
xor
jb
loop
xchg
je
or
clc
ret
loope
cmps
popa
jns
neg
add
mov
and
sub
sbb
aam
std
les
mov
cwde
pop
scas
enter
adc
ds
(bad)
push
lock
jnp
dec
jns
mov
(bad)
adc
mov
xchg
std
es
retf
push
fdivr
mov
movs
(bad)
push
dec
popa
in
movs
out
into
xor
call
jns
dec
out
pop
hlt
push
jp
pop
sbb
add
pop
cmc
sar
mov
repnz
fs
mov
int
hlt
jmp
imul
arpl
jl
push
jo
sub
lods
and
cmc
push
inc
jb
jmp
in
cmp
jmp
jne
sbb
adc
mov
push
div
sub
sub
jge
jp
(bad)
aad
mov
inc
aam
movzx
pop
cli
and
adc
add
pop
adc
addr16
enter
sahf
icebp
push
call
rcr
mov
push
fnstenv
cmp
or
dec
sahf
mov
(bad)
mov
mov
sub
mov
pop
int
push
pop
push
aas
outs
js
mov
mov
sar
or
adc
add
jle
mov
jns
loope
pop
in
rcr
sub
ins
in
mov
jae
call
xor
loope
inc
rol
loope
mov
sar
cmp
sbb
shl
fs
mov
fld
push
fisub
pop
out
mov
push
add
hlt
cwde
dec
daa
cmp
ins
cmp
or
pushf
inc
xor
add
retf
and
les
fiadd
dec
dec
(bad)
rcr
sar
sub
sub
call
add
data16
or
clc
xchg
arpl
es
cmp
gs
cmps
pop
movs
in
cmp
and
push
xchg
mov
mov
mov
and
sbb
cmc
lods
test
(bad)
je
pop
adc
mov
call
fdivr
sbb
xor
inc
in
rcr
out
dec
lea
or
scas
loope
xchg
aad
and
mov
mov
adc
mov
das
sbb
dec
dec
sub
rcl
daa
enter
sahf
(bad)
sub
push
and
gs
xor
(bad)
sub
jne
push
mov
popa
pop
movs
sbb
xor
(bad)
mov
imul
sahf
mov
adc
or
vmovntps
imul
ret
(bad)
and
frstor
push
mov
hlt
daa
pop
add
jmp
pushf
jp
nop
loopne
adc
mov
sub
push
adc
in
cmp
push
jle
xor
ficom
jbe
mov
inc
into
xor
loopne
mov
test
pop
push
xor
mov
jmp
add
mov
adc
add
cmp
xlat
mov
pop
sbb
sbb
clc
push
xchg
mov
jb
outs
push
int3
xor
xor
pop
mov
jo
or
adc
xchg
pop
cmp
inc
xor
fild
mov
mov
pop
dec
lea
pop
jge
test
hlt
in
xchg
movs
inc
pop
pusha
adc
mov
xor
and
jbe
mov
mov
test
pop
dec
add
mov
cmp
mov
sub
pop
adc
add
sbb
xchg
xchg
gs
ins
mov
and
ins
jbe
scas
arpl
and
inc
call
jg
push
xor
xchg
mov
cmp
jg
dec
inc
ds
sbb
pop
arpl
(bad)
retf
dec
dec
add
sahf
jbe
lea
or
rcl
pushf
lock
popf
mov
test
mov
push
repz
cmp
sbb
mov
ret
mov
js
inc
call
popa
xor
pop
repz
repz
add
cmp
mov
inc
push
in
inc
sbb
push
ds
sub
aaa
les
xchg
cs
imul
xor
ins
inc
or
je
jns
mov
mov
in
push
dec
fcomi
out
aad
add
(bad)
iret
(bad)
stos
pushf
push
(bad)
and
lea
movs
add
push
lods
jmp
(bad)
sbb
mov
(bad)
mov
xchg
mov
aaa
clc
and
iret
fwait
imul
test
call
sahf
add
pop
sub
mov
or
movs
xor
push
sti
test
icebp
(bad)
pop
fcom
add
inc
jnp
cld
je
and
pushf
stos
jo
push
cmps
xchg
fbstp
lds
or
or
call
mov
xchg
mov
test
or
bound
sbb
packuswb
jb
outs
push
in
and
mov
mov
aam
fsub
and
cmp
adc
push
in
xor
out
loope
add
stos
test
push
repnz
dec
xchg
and
(bad)
adc
cwde
mov
data16
push
push
ins
xchg
aaa
jp
out
xor
dec
fisttp
aam
mov
std
cmp
(bad)
cwde
imul
imul
stos
fmul
mov
sub
inc
lahf
add
xor
in
mov
pop
push
sar
lahf
sbb
movs
scas
ds
sub
out
test
sub
mov
fimul
or
in
(bad)
fs
icebp
fmul
xchg
push
mov
fidiv
xchg
call
adc
and
sub
adc
or
(bad)
adc
outs
(bad)
shr
inc
hlt
pop
ret
movs
daa
stc
and
int
dec
sub
sbb
adc
or
cmc
push
enter
loopne
loop
popf
dec
sbb
xchg
mov
(bad)
mov
rcl
mov
dec
inc
ss
jl
fcom
movs
mov
arpl
jmp
frstor
add
push
(bad)
repz
and
push
or
or
sbb
je
or
test
mov
cmc
mov
fidivr
push
neg
sbb
ja
dec
scas
and
mov
push
mov
inc
push
aad
jg
jg
jp
and
add
push
popa
cmp
jp
scas
popa
ins
sbb
ror
cli
inc
xchg
jae
fiadd
xchg
sub
in
sbb
xchg
xor
out
mov
inc
movs
mov
ja
mov
fptan
sbb
jae
bound
sub
std
int3
sbb
pop
push
retf
or
or
xchg
mov
xor
jbe
std
cmp
cmps
mov
add
out
cmc
xlat
push
or
xchg
addr16
sub
mov
out
cmp
inc
out
das
jge
dec
sahf
pop
fwait
jno
stc
jb
jge
push
gs
xor
std
cmc
sti
hlt
div
(bad)
call
(bad)
mov
call
dec
mov
outs
or
data16
add
adc
icebp
arpl
inc
mov
xor
jbe
lea
jge
adc
test
hlt
inc
and
call
adc
movs
mov
test
fimul
sbb
sub
push
(bad)
sub
fsubr
arpl
aam
popa
ds
movs
(bad)
retf
jl
mov
jns
jp
dec
mov
adc
fbld
pop
and
loope
dec
mov
jo
idiv
mov
pop
add
pop
ffree
mov
push
jmp
sub
out
(bad)
push
fs
xchg
and
mov
add
sub
loopne
or
cmp
push
push
xor
bound
pop
fimul
push
aam
xchg
or
and
inc
loopne
movs
xchg
push
aaa
sub
xor
cmp
cmp
aaa
mov
shl
pop
ss
loop
aas
mov
adc
jmp
std
out
xor
xchg
lds
xor
add
sub
fisub
fidivr
popa
xor
mov
pop
ss
xor
sbb
call
lahf
and
adc
xchg
cli
xor
sub
mov
call
sub
imul
jo
mov
mov
xchg
mov
xor
inc
fld
xor
ja
sbb
sar
imul
mov
test
push
mov
ss
sti
out
data16
cmps
fdiv
adc
mov
mov
mov
stos
or
pushf
loope
fcmovb
and
pop
mov
mov
iret
outs
loop
fdiv
mov
ins
ins
es
stos
xchg
mov
cmp
sar
pop
sub
int
sbb
sbb
lock
pop
mov
add
pushf
pop
lods
push
popa
pusha
int
loopne
dec
add
dec
out
(bad)
xchg
xchg
pop
xchg
and
cmp
js
lds
sub
(bad)
movs
lea
out
pop
mov
repz
mov
inc
hlt
xlat
call
xor
jae
imul
push
pop
jb
dec
inc
aad
scas
adc
mov
jle
xor
shr
adc
lods
retf
push
push
cmp
ds
jmp
lock
mov
inc
xor
ss
xor
es
mov
sti
push
xchg
icebp
jns
adc
dec
shr
inc
add
and
sti
fwait
cli
mov
call
adc
inc
jo
(bad)
or
sahf
add
mov
icebp
ror
lock
jg
inc
xlat
xor
in
lds
call
cmp
inc
loope
inc
cmp
add
daa
xchg
xlat
cmps
jbe
jo
mov
pop
popa
cmp
ja
std
dec
xor
jnp
dec
leave
nop
ja
scas
out
push
and
add
sbb
add
sbb
pop
adc
cdq
sbb
or
xchg
shr
pop
out
cdq
xor
mov
mov
inc
jmp
add
enter
test
xchg
retf
out
ins
out
xchg
ds
lock
add
shr
fisub
shr
push
push
mov
mov
sub
movs
push
dec
lods
mov
pop
mov
adc
add
mov
stos
cmc
sti
arpl
popf
sub
inc
out
mov
and
rcl
adc
aas
adc
loop
rcl
or
and
push
out
fidiv
in
shl
pop
jmp
popf
mov
outs
ss
repnz
outs
push
cdq
rcr
inc
out
pop
cdq
xchg
outs
sahf
repnz
arpl
sahf
lock
daa
stc
sub
jae
fnsave
xlat
dec
cmc
push
push
lds
or
pop
cmp
jmp
adc
repnz
pop
mov
fbld
mov
push
imul
std
inc
in
and
adc
inc
adc
mov
or
jne
sub
push
cmp
push
(bad)
cmp
in
cs
imul
nop
fidivr
mov
push
cmc
in
test
and
jo
pop
dec
push
mov
xchg
(bad)
movs
or
push
adc
sahf
mov
jmp
cmps
sbb
push
inc
push
xchg
sbb
pop
(bad)
mov
inc
cs
sub
mov
add
or
xchg
adc
leave
movs
jmp
jl
inc
mov
cdq
js
clc
mov
xchg
push
test
xchg
adc
pop
xlat
ins
sbb
and
cld
add
inc
call
add
or
popf
aam
pushf
mov
push
cs
mov
shl
mov
xchg
pop
fist
and
xchg
fidivr
mov
movs
pop
or
jmp
hlt
add
popw
int
mov
mov
or
hlt
add
xchg
cmp
outs
and
inc
outs
xor
cmps
in
inc
clc
ror
aaa
(bad)
jecxz
fstp
or
fcomp
pop
jle
repz
dec
mov
mov
call
clc
ret
mov
cmp
and
ret
jl
imul
jo
scas
ja
test
adc
jb
mov
mov
push
add
test
(bad)
dec
pop
stos
add
xchg
movs
mov
idiv
int3
mov
lock
stos
out
loopne
and
or
mov
xor
hlt
push
xchg
repz
ror
push
cmp
sbb
mov
or
inc
int
pop
jmp
adc
jle
adc
out
das
fadd
iret
(bad)
mov
xchg
lods
in
dec
cdq
and
xor
xchg
mov
inc
adc
xor
aad
std
xchg
pushf
adc
xchg
or
enter
mov
push
or
(bad)
mov
mov
jbe
rol
push
mov
add
xchg
outs
dec
ins
test
adc
pop
call
push
push
(bad)
out
nop
cmp
add
sbb
sub
push
jg
cmp
mov
add
pop
push
push
sub
jl
xchg
inc
sub
jo
mov
dec
cld
push
push
sub
xchg
cmc
jb
out
push
or
outs
pop
jb
dec
imul
add
mov
xchg
js
push
int
add
aad
xor
cmp
jnp
pusha
jne
les
dec
jl
into
cli
outs
pop
inc
inc
jae
in
test
or
adc
scas
add
(bad)
retf
fisub
test
sbb
cmp
or
cli
mov
xchg
scas
lods
hlt
fst
inc
loope
pop
popa
call
mov
ror
push
xor
call
xchg
adc
imul
(bad)
hlt
xor
loopne
pop
aaa
movs
std
jmp
fst
dec
inc
add
xchg
pop
iret
and
jmp
iret
and
sub
mul
mov
and
adc
or
add
es
and
int3
mov
retf
retf
jecxz
ss
(bad)
repnz
cmp
leave
in
ins
and
xor
and
repnz
cmp
sub
push
pop
jo
dec
add
add
and
pop
retf
outs
call
pop
(bad)
inc
into
les
pop
fisubr
popa
hlt
push
xchg
push
cmc
bound
sbb
jg
jmp
arpl
cld
xchg
ds
(bad)
lods
sbb
movs
fs
sub
int3
test
add
jl
imul
adc
gs
iret
add
adc
test
pusha
cmc
dec
or
pop
test
adc
(bad)
push
jg
push
push
(bad)
inc
adc
sti
retf
sahf
fistp
out
jo
and
mov
cmp
jmp
(bad)
out
out
ret
pop
std
push
adc
push
outs
imul
clc
mov
pop
sub
push
dec
retf
cwde
in
int3
lods
or
neg
jbe
dec
pop
outs
shl
movs
add
fs
mov
lds
adc
cwde
mov
movs
pop
jge
xor
das
add
adc
dec
pop
movs
out
mov
call
cmp
jg
je
mov
cmp
add
dec
bound
inc
push
bound
rcl
(bad)
jecxz
cmp
xchg
fstp
aad
fistp
add
cmp
sub
aas
sbb
jge
retf
xor
inc
adc
lods
jno
movs
xor
call
and
jmp
ret
add
icebp
sbb
pusha
stc
inc
loope
rol
(bad)
or
lahf
movs
neg
push
or
std
add
lock
add
test
movs
jnp
and
push
cmp
xchg
cmps
pop
fild
rol
cmps
popf
test
push
cli
xor
ins
mov
add
hlt
cmp
(bad)
pop
mov
pop
sti
xchg
pusha
adc
cld
jne
sub
(bad)
in
jbe
js
jns
(bad)
cs
sub
sbb
pop
cdq
add
pop
push
cmp
cli
mov
lds
mov
xchg
pop
cs
adc
dec
mov
mov
enter
lock
mov
mov
stos
mov
and
jns
mov
mov
mov
out
or
mov
pop
sub
cmp
xor
jecxz
lahf
stos
bound
push
test
aad
int3
mov
inc
inc
inc
jnp
mov
inc
sahf
sahf
stc
mov
loope
cmp
into
sbb
cmc
sbb
je
sub
ja
push
dec
retf
lock
ror
and
ins
mov
sbb
test
or
jo
sbb
call
or
mov
cs
fdivr
or
cs
cmps
jb
xchg
pop
xor
pop
adc
fidivr
cmp
(bad)
jb
int3
(bad)
jno
stos
out
xchg
int3
xchg
dec
fdivr
gs
int
outs
or
or
add
iret
fucomp
mov
cmp
mov
rcr
imul
mov
lods
push
fldcw
(bad)
fadd
cmps
mov
dec
jg
imul
lahf
mov
inc
and
vmaxss
stos
and
inc
fisub
xor
sbb
stc
imul
and
adc
pop
push
int3
dec
push
xchg
mov
pop
bound
sahf
cmp
dec
or
stc
dec
pop
test
add
pop
xchg
out
cmp
inc
mov
or
adc
xchg
sub
scas
mov
pop
lahf
push
into
nop
aas
mov
mov
movs
dec
cmove
pushf
add
mov
gs
aam
int3
mov
xchg
xchg
mov
loope
xor
test
push
or
or
sbb
lods
dec
cli
add
jp
into
push
stos
push
xchg
ja
addr16
dec
pop
inc
mov
jg
cmps
icebp
mov
pop
out
dec
call
mov
sbb
daa
loop
enter
movs
jmp
fnstsw
call
mov
jmp
ret
add
les
adc
fwait
pop
mov
dec
mov
ins
jnp
out
stos
jae
xor
test
ss
repnz
jmp
adc
pop
in
lock
(bad)
or
scas
pop
mov
mov
xchg
inc
xchg
ja
mov
pop
jmp
les
fild
arpl
cmps
pop
mov
daa
inc
inc
icebp
mov
cmc
rol
xchg
rol
lock
stos
xor
sbb
push
mov
or
and
ja
mov
xor
(bad)
fs
dec
cmp
pop
push
imul
pop
and
dec
jb
pop
inc
mov
dec
adc
inc
sbb
js
leave
ja
jo
adc
(bad)
sub
aas
push
push
adc
dec
das
imul
sub
(bad)
cmp
psllq
cmps
scas
and
pop
xlat
xor
fst
mov
dec
mov
adc
or
pop
sbb
push
int3
dec
or
jbe
in
xor
repz
retf
xor
add
dec
ja
push
jg
sub
pop
test
ss
punpckldq
stos
jne
adc
(bad)
(bad)
(bad)
add
jbe
ins
rol
out
cmp
retf
push
leave
outs
and
dec
push
pop
and
mov
dec
bound
sub
push
dec
enter
scas
or
jbe
pop
cli
xchg
neg
xor
shl
mov
stc
inc
mov
pop
(bad)
jmp
in
mov
xchg
fwait
mov
into
pop
ins
mov
stc
adc
(bad)
fyl2xp1
ror
out
mov
scas
jbe
mov
(bad)
add
fld
push
(bad)
mov
(bad)
jmp
dec
(bad)
div
ja
adc
mov
mov
nop
jecxz
xchg
pop
sar
js
add
(bad)
test
push
xchg
mov
arpl
jno
out
lock
(bad)
mov
add
mov
pop
pop
push
ficomp
cmc
cmp
dec
jne
mov
mov
mov
retf
mov
jnp
(bad)
mov
hlt
call
dec
test
pop
cli
ds
enter
xor
cmp
sar
sub
mov
mov
aad
and
or
call
pop
inc
daa
push
push
cmps
ret
cmp
stc
test
std
idiv
data16
in
xchg
inc
dec
cdq
cmp
sbb
jmp
dec
ins
dec
enter
popf
push
pushf
sti
dec
mov
loope
mov
sub
test
pop
pop
jmp
das
jns
sbb
out
js
call
mov
fsub
movs
in
rcl
aad
sub
mov
scas
mov
mov
dec
cmp
jnp
nop
int3
fbstp
inc
pop
push
fidivr
jno
lods
gs
inc
fsubr
xchg
dec
or
jmp
mov
sbb
add
lea
jo
cdq
inc
dec
pop
imul
jl
jmp
xchg
loopne
retf
pop
inc
test
ds
inc
inc
(bad)
enter
test
dec
ins
loopne
lahf
sub
cs
cdq
xlat
inc
sahf
retf
nop
out
mov
push
fcom
stc
add
mov
xchg
adc
push
adc
sti
dec
dec
cli
pop
mov
test
sub
push
pop
or
jae
test
ficom
sbb
addr16
cmc
jmp
outs
fbld
jmp
sub
sbb
call
mov
int
add
enter
movs
mov
loop
dec
into
outs
push
add
mov
or
xor
ss
call
sub
ja
stos
fmul
paddq
ss
mov
and
cwde
pop
xchg
sahf
pop
ficomp
test
aad
cmp
lahf
jl
pop
adc
inc
pop
retf
xor
adc
repnz
shl
test
aaa
mov
popa
(bad)
cli
mov
aas
xchg
sub
in
daa
fidivr
xchg
(bad)
int3
cmps
push
div
mov
xor
pop
pop
in
test
cmps
mov
mul
mov
mov
stos
popf
data16
popf
mov
mov
dec
mov
add
retf
or
inc
push
loopne
jge
js
fwait
jnp
jp
sar
push
idiv
or
dec
push
(bad)
jo
test
cmp
rcr
outs
mov
mov
xor
ficom
mov
mov
lods
(bad)
dec
mov
leave
out
loopne
and
aaa
shl
add
mov
push
or
inc
mov
sar
push
push
and
xchg
or
stos
inc
dec
pop
push
inc
lahf
adc
test
fsubr
jns
ss
mov
dec
push
fcom
adc
retf
mul
jg
cmp
mov
push
jge
mov
push
test
inc
(bad)
test
cmps
push
mov
std
xor
pop
bound
pop
stos
mov
mov
cmps
pop
and
jl
nop
push
and
out
jge
out
cli
push
in
mov
jmp
dec
xchg
adc
outs
xchg
cdq
movs
mov
xchg
mov
stos
rcr
push
and
mov
das
cli
stos
xor
fild
cli
mov
mov
popa
loopne
jle
out
push
shufps
xchg
into
dec
retf
inc
aad
in
(bad)
cs
hlt
add
in
xchg
push
add
cmp
(bad)
adc
mov
xchg
jp
loop
shl
jns
jp
setb
pop
xchg
adc
in
jge
fimul
xor
jnp
mov
pop
mov
ret
jne
add
inc
outs
pop
in
mov
mov
push
cdq
jge
and
xlat
ret
lea
jl
aaa
popf
cmp
pop
aad
call
jb
push
fistp
add
xchg
cmp
and
outs
loop
aaa
jb
mov
dec
mov
jmp
pop
sub
xchg
mov
test
jbe
mov
push
fcomip
dec
test
sti
repnz
xchg
push
jge
into
xlat
push
push
dec
(bad)
repz
inc
sti
dec
cmp
es
dec
sti
aad
loopne
daa
in
das
sub
add
inc
in
sti
dec
pop
xchg
mov
aam
or
shl
ins
test
mov
pusha
(bad)
neg
cmp
sbb
and
sbb
push
rcr
inc
xchg
(bad)
nop
and
push
jne
pop
fstp
push
mov
sbb
adc
movs
stc
mov
out
dec
push
sub
clc
jb
xor
bound
mov
push
add
outs
push
cmp
out
addr16
pop
or
jo
dec
mov
xchg
call
and
fsubr
lds
shl
jb
cmp
(bad)
and
lods
add
mov
in
mov
inc
mov
out
pop
cmp
retf
mov
pushf
mov
dec
jp
movs
test
(bad)
div
das
imul
push
rcl
cmp
or
shr
lods
stos
push
lock
cmp
clc
push
ja
add
pop
mov
stos
test
push
movs
jl
jp
jbe
std
jmp
test
xchg
(bad)
adc
xchg
ret
shr
iret
fiadd
cmp
int
and
mov
shl
(bad)
jle
fcomp
sub
gs
retf
cld
(bad)
stos
fidiv
adc
or
dec
and
cmp
repz
pop
mov
xor
les
ja
fwait
shl
test
cmp
je
push
dec
jle
inc
xchg
in
test
and
movs
xlat
fistp
and
xchg
jp
xchg
ss
jg
xchg
div
add
mov
mov
and
fsubp
fidivr
sbb
in
iret
pop
out
xor
sbb
xchg
in
pop
ret
loop
xor
jne
mov
(bad)
jecxz
sbb
mov
outs
dec
sub
mov
sahf
mov
scas
cmp
arpl
fmulp
cmp
xor
and
mov
dec
call
xchg
add
mov
movzx
cmp
fiadd
je
sahf
cmps
mov
sbb
js
test
adc
jmp
push
imul
scas
ds
imul
fisubr
addr16
xchg
adc
and
movs
or
sub
or
mov
fs
arpl
jbe
fcomp
daa
repz
or
xor
inc
mov
nop
repnz
mov
push
mov
xchg
mov
outs
addr16
xor
leave
stos
outs
xor
dec
(bad)
mov
repz
cmps
and
fisubr
or
lods
aaa
or
movs
and
push
jmp
xchg
dec
in
push
jo
cmp
inc
add
and
pop
sar
test
jne
mov
daa
cmps
ss
pushf
sub
mov
(bad)
js
xchg
xor
mov
fs
inc
and
xchg
ja
jns
inc
mov
jno
icebp
loopne
mov
pop
jne
and
lods
jb
xchg
add
jmp
out
push
ret
shl
stos
nop
xchg
adc
cmc
dec
mov
jl
or
push
cmp
dec
mov
mov
add
aas
adc
ss
mov
jns
stc
fist
inc
dec
inc
jo
xlat
(bad)
sbb
sbb
out
cmp
movs
retf
mov
wrmsr
cvtps2pi
jbe
mov
dec
push
test
fist
hlt
and
in
das
xchg
mov
push
mov
jbe
push
(bad)
test
xchg
ficom
jmp
loop
ins
and
inc
inc
neg
movs
data16
rcr
mov
pop
lods
stos
adc
call
xor
addr16
repnz
dec
and
es
pop
mov
lods
fisub
je
push
mov
xchg
push
mov
sbb
xchg
pop
jmp
int
mov
jnp
ret
inc
or
mov
ins
pop
xchg
lahf
or
xchg
and
mov
mov
jmp
retf
data16
inc
sti
fwait
imul
inc
dec
inc
outs
jo
rcr
dec
retf
cwde
inc
mov
and
xor
call
dec
rcl
test
push
mov
jnp
or
test
ret
lods
int3
xchg
dec
push
mov
addr16
mov
cmc
push
xchg
mov
cmp
push
(bad)
xchg
aad
sbb
xor
push
push
push
arpl
lods
cld
push
add
dec
ret
jns
and
cmp
popf
lods
dec
mov
dec
stc
lea
xchg
ins
pop
in
inc
test
out
(bad)
and
lds
out
sub
xor
rol
inc
fisttp
fcomp
inc
retf
sub
xchg
fcomp
int3
es
cmp
aad
(bad)
push
stos
sub
cmps
stc
push
mov
mov
jg
push
(bad)
aad
jp
xor
pushf
out
rcl
retf
shl
lock
mov
pop
and
int
and
pop
(bad)
and
and
popa
pop
mov
and
stos
(bad)
push
mov
adc
sbb
mov
mov
push
scas
ins
loop
and
cmp
mov
inc
in
cmps
iret
or
inc
dec
ds
mov
not
mov
ret
loop
inc
dec
jmp
jb
or
js
repnz
jmp
jecxz
mov
mov
in
lods
dec
int
pop
and
or
(bad)
sub
xchg
in
stos
pop
sub
xor
push
or
call
shr
ret
test
out
popa
xlat
fwait
inc
je
cmps
aaa
clc
xchg
sbb
inc
and
add
shl
jmp
sbb
xlat
push
nop
jbe
adc
movs
mov
adc
xchg
stos
push
fld
add
int3
call
fsubr
mov
aam
xor
scas
loopne
xlat
dec
jno
cmps
xchg
jb
popf
retf
mov
iret
int3
in
xlat
mov
inc
and
pop
in
call
push
adc
pop
or
or
mov
loopne
inc
popf
(bad)
loop
inc
sbb
(bad)
les
daa
out
mov
xor
retf
mov
js
shl
jbe
jg
ror
jb
or
fidivr
push
mov
mov
cmp
pop
test
sar
mov
fwait
jbe
mov
cwde
push
xchg
cmp
scas
and
fwait
mov
(bad)
xchg
ror
sbb
loopne
push
sub
mov
adc
or
clc
fcmovnb
stc
add
cmp
jne
out
jg
in
or
xchg
out
hlt
test
cmp
ss
retf
pop
mov
aas
xor
jmp
xor
test
xchg
lahf
jbe
push
jb
mov
and
in
or
mov
push
mov
dec
push
sbb
xchg
ficom
jnp
adc
out
retf
idiv
inc
out
nop
sbb
pop
jo
push
mov
sbb
sbb
and
div
mov
pushf
and
mov
sbb
fs
ss
inc
std
lods
pop
cwde
dec
push
dec
shr
xchg
in
rcr
or
icebp
loopne
jb
popa
or
dec
inc
push
adc
retf
(bad)
lods
lock
adc
ror
add
bnd
stos
stos
fcom
pop
mov
loopne
xor
adc
adc
inc
mov
xor
scas
mov
inc
in
mov
sbb
scas
nop
fst
sahf
pusha
aas
int3
xor
stos
dec
in
js
xchg
iret
push
cmp
sub
loope
nop
push
add
inc
loopne
les
mov
out
nop
retf
loope
mov
dec
fistp
mov
jbe
in
icebp
aad
and
mov
fst
cdq
arpl
mov
stos
lods
mov
hlt
xlat
sar
mov
fld
jno
fs
adc
mov
push
cmps
movs
lods
push
xlat
inc
push
pop
out
test
fs
les
lea
lahf
popa
div
push
push
mov
adc
shr
xchg
push
cmps
pusha
(bad)
adc
mov
and
and
pop
adc
sub
out
addr16
ja
stos
outs
cmp
mov
cld
cld
data16
jmp
cmp
retf
dec
sahf
mov
outs
icebp
loop
mov
and
cmps
add
mov
pop
fst
scas
push
adc
push
ins
fld
cld
clc
mov
loopne
cs
das
loop
jmp
inc
(bad)
inc
ret
sub
cmp
jmp
cmp
aam
popa
sbb
sbb
je
pushf
lods
or
mov
outs
adc
xor
jge
xchg
outs
loop
(bad)
int
sbb
push
rol
cmp
mov
shl
(bad)
hlt
loop
mov
(bad)
fistp
or
cmp
push
mov
or
sar
outs
int3
test
imul
push
cmc
jae
sbb
int3
outs
or
sub
bound
les
or
inc
ret
pushw
dec
popf
push
mov
addr16
adc
popa
test
cmp
mov
stos
push
scas
adc
or
mov
scas
cmps
sub
inc
addr16
out
retf
mov
xchg
or
fistp
adc
dec
or
cmp
iret
dec
mov
(bad)
dec
cmp
sub
stos
add
push
pop
adc
or
outs
lods
in
cmp
mov
add
sar
lahf
jbe
enter
mov
dec
jl
fcmovnbe
cmps
stos
retf
sti
es
jmp
xor
sub
sub
(bad)
sub
sub
mov
push
pushf
add
pop
in
movs
mov
sub
inc
es
jb
add
pop
xchg
ins
adc
(bad)
push
cmp
inc
and
and
imul
inc
fist
or
pop
mov
popf
or
jbe
push
rcl
repz
adc
inc
fild
div
test
lock
in
xor
in
inc
in
cs
cwde
jecxz
inc
xchg
fisttp
xchg
dec
fcomp
daa
lock
les
fsub
xor
ret
mov
mov
push
jns
cmp
add
jmp
popf
cwde
in
mov
aam
loopne
push
fprem
xchg
cmp
cmp
fbstp
ja
and
aaa
(bad)
sbb
mov
ins
movs
xor
stc
repz
mov
cmps
in
movs
push
pop
test
arpl
xchg
pop
and
jb
sub
out
loopne
mov
sbb
int
pop
repnz
mov
mov
pop
add
push
mov
hlt
fcom
xchg
test
jnp
and
xor
mov
idiv
add
gs
mov
data16
or
dec
data16
clc
retf
ficomp
push
test
push
fisttp
je
add
inc
test
inc
and
sbb
xor
icebp
sbb
loopne
pop
jne
(bad)
mov
jp
test
mov
jae
cwde
stos
data16
or
xchg
cmp
sbb
cld
jae
sbb
mov
out
scas
push
inc
xor
mov
jns
cmp
mov
xchg
adc
pop
sbb
jne
xor
(bad)
fucom
out
icebp
into
mov
bound
test
aad
mov
push
fnstcw
mov
mov
div
aam
add
mov
xchg
ds
or
jae
je
imul
fucom
and
mov
mov
push
gs
lea
test
xchg
cmp
jae
in
out
mov
iret
mov
imul
xchg
push
sbb
arpl
jbe
mov
ins
and
add
outs
shr
int
ret
(bad)
xchg
push
call
in
ja
jnp
aam
(bad)
in
inc
cmp
bound
es
icebp
(bad)
out
cmc
out
adc
sub
jmp
add
nop
mov
xchg
inc
inc
cmps
and
mov
scas
mov
sbb
mov
out
bound
popa
cmps
cmp
sub
int3
xchg
mov
(bad)
clc
das
add
or
inc
(bad)
jmp
inc
mov
add
pop
ret
add
jg
in
movs
nop
add
and
dec
cmp
cs
mov
xchg
loop
and
fdivr
test
outs
addr16
adc
lahf
aad
pop
adc
jg
(bad)
add
mov
cdq
pop
stc
stos
push
pop
pop
jae
rcr
lods
mov
xchg
mov
push
dec
icebp
xor
arpl
test
stos
xor
imul
pusha
push
call
inc
sbb
dec
fmul
daa
add
push
dec
xchg
je
loopne
jbe
dec
fdivp
and
ss
adc
sar
jge
(bad)
jecxz
cmp
cld
mov
test
push
adc
or
fnstenv
push
pushf
xchg
jbe
jecxz
jnp
lock
mov
adc
lds
pop
sbb
rol
dec
mov
dec
mov
(bad)
fstp
pop
mov
jp
pop
(bad)
wrmsr
mov
aam
or
movs
jae
call
out
jp
xchg
jno
ds
movs
jge
mov
adc
sub
mov
test
inc
inc
pusha
pop
les
iret
adc
fwait
adc
movs
out
mov
inc
xor
pop
jmp
popf
outs
hlt
inc
push
add
dec
loopne
jmp
call
pop
fcmovnbe
xchg
xchg
mov
fwait
cmp
cdq
xor
ja
rdmsr
iret
xchg
jge
ret
pop
xchg
xor
shr
jmp
push
out
pop
in
mov
sub
pop
cdq
pop
cdq
ret
loopne
jno
mov
lea
xchg
dec
cs
lahf
jae
stos
out
push
sbb
cli
rol
sbb
add
ret
mov
call
fadd
xor
adc
mov
mov
jne
addr16
cs
in
rcl
add
add
mov
dec
add
scas
addr16
jle
std
jg
pop
push
ins
scas
pop
adc
jmp
imul
mov
retf
in
push
mul
dec
adc
test
retf
sub
hlt
cmp
fs
call
test
sub
call
jae
mov
inc
add
sbb
ins
ins
jae
or
ja
and
jbe
out
jne
js
add
aad
sub
in
(bad)
xchg
pop
inc
ret
add
bound
(bad)
aas
not
mov
xchg
mov
ud0
or
fcom
xor
int3
jle
(bad)
movs
int
int
(bad)
enter
mov
aas
pop
cmps
dec
mov
bound
mov
mov
push
sub
ja
inc
cmp
xor
or
lea
pop
and
cwde
ds
xor
xchg
jns
and
xchg
icebp
push
jbe
das
(bad)
xor
mov
mov
or
xchg
cmp
xchg
es
or
popa
std
xchg
xor
inc
cmp
mov
or
sahf
jge
jmp
ror
jo
xchg
and
rol
dec
xor
fcom
call
stos
shl
push
nop
out
adc
(bad)
lea
mov
xchg
lock
pop
arpl
scas
push
pextrw
add
cmps
cmp
in
sahf
mov
adc
fwait
inc
pop
lods
sub
cld
ds
adc
scas
push
and
sbb
into
lods
jno
mov
xor
icebp
outs
pop
mov
adc
cdq
push
dec
pop
push
cld
sub
sbb
aam
mov
xchg
jns
mov
into
cmp
call
les
xchg
push
(bad)
push
gs
add
les
inc
mov
dec
xchg
les
and
push
xchg
push
jecxz
sti
cmp
hlt
mov
xor
inc
inc
test
lock
mov
mov
push
retf
add
cmp
xchg
inc
xor
jmp
add
inc
jle
imul
mov
inc
arpl
pop
inc
clc
imul
xlat
lock
enter
add
jge
xchg
repnz
es
(bad)
fcmovbe
push
push
imul
idiv
clc
inc
bound
jo
sub
xchg
jae
cld
pop
mov
sub
mov
jb
sub
jae
adc
mov
enter
mov
push
fist
mov
mov
adc
ins
mov
push
pop
add
inc
loop
cmp
cdq
dec
cwde
(bad)
je
ret
or
xor
pop
and
fisttp
icebp
retf
iret
jmp
push
or
inc
jl
mov
inc
idiv
adc
(bad)
lock
test
jns
not
adc
aaa
add
aaa
jmp
mov
imul
xor
cmp
sub
adc
or
ret
es
add
dec
aam
push
fs
lods
inc
xor
gs
push
test
stos
xlat
cwde
sar
pop
xchg
mov
pop
and
pop
sbb
mov
les
sti
adc
inc
sub
shl
mov
lock
imul
test
cli
js
ins
in
inc
sar
inc
dec
stos
jne
in
pop
enter
dec
mov
push
sub
mov
sti
imul
shl
stos
cmp
movs
pop
push
adc
jmp
and
jns
nop
cmp
mov
out
xchg
pop
cmps
(bad)
popa
std
pop
loop
mov
fisubr
popa
cmp
jl
enter
fnstenv
iret
mov
jo
jno
sbb
xchg
or
sub
scas
or
xor
std
or
mov
push
js
xchg
repz
pop
mov
ds
hlt
sub
shl
mov
xlat
fist
in
popa
repz
dec
lock
outs
xor
lock
mov
stos
sbb
out
fidivr
jb
pop
or
mov
inc
shl
xchg
jecxz
inc
or
lods
mov
(bad)
sub
mov
jcxz
mov
xor
(bad)
dec
sbb
stc
jne
outs
stos
cmps
push
not
cdq
jmp
gs
xlat
cmps
push
stos
in
sbb
cmps
test
scas
pop
fild
sub
push
mov
push
fst
dec
cmc
mov
sbb
dec
dec
mov
sbb
xchg
jbe
sbb
inc
lods
jmp
popf
cmp
xor
push
add
sbb
shr
in
popf
ror
mov
jmp
xchg
pusha
or
movs
out
add
jmp
not
pop
mov
nop
push
jns
test
out
dec
mov
sub
sbb
mov
push
repnz
jge
or
push
xchg
fnstsw
sbb
les
push
mov
pushf
dec
test
in
cmps
imul
pop
leave
xchg
mov
dec
inc
bound
les
mov
pop
jno
jmp
je
(bad)
cmp
stos
inc
push
jns
inc
lea
inc
mov
retf
fld
out
add
les
add
daa
(bad)
mov
in
popa
mov
mov
cmp
das
sub
xchg
cmps
iret
inc
test
pop
sub
cwde
test
int
clc
mov
dec
add
add
leave
xlat
dec
lods
inc
pop
jp
loop
jle
add
jbe
or
imul
dec
mov
or
xor
sub
mov
jbe
(bad)
or
jge
pop
cmp
sub
outs
or
or
adc
pop
cwde
(bad)
sbb
mov
clc
pop
mov
and
(bad)
adc
jle
jne
mov
repnz
push
popf
xchg
movs
jge
jnp
mov
ret
adc
test
loope
add
xor
push
or
enter
xchg
std
ss
ja
cmp
(bad)
cwde
mov
hlt
inc
push
sbb
cmp
adc
js
push
dec
pop
lock
and
xor
add
cdq
in
pop
(bad)
push
bound
sbb
sub
and
jmp
les
cmp
ret
sbb
jo
das
out
pop
and
jge
gs
test
xor
push
loopne
or
retf
inc
out
adc
pusha
mov
sar
jmp
ins
inc
clc
call
hlt
mov
jne
fsub
jae
adc
mov
xchg
xchg
stos
add
test
stc
pop
jecxz
ss
jmp
jae
icebp
xchg
inc
shr
stc
imul
and
cmp
jae
push
dec
aaa
xchg
mov
lahf
aad
cwde
and
mov
test
fdivr
fs
ret
xchg
fistp
aaa
es
inc
ret
or
inc
ins
es
jne
pusha
inc
jcxz
fwait
ins
xor
push
push
dec
xchg
rcl
call
inc
cmp
movs
jnp
sbb
inc
cmp
jp
or
es
mov
jbe
jmp
popa
dec
inc
xor
arpl
push
adc
test
jns
sbb
test
pusha
inc
in
xor
rol
push
jmp
ins
neg
and
hlt
movs
es
jle
inc
mov
and
adc
jns
aaa
sub
mov
xchg
call
jmp
fdivr
jl
lds
jne
mul
gs
sub
mov
jmp
(bad)
out
cmp
movs
xchg
call
mov
and
xchg
jno
push
les
mov
cmc
sub
push
fsub
imul
mov
and
push
push
int
les
clc
pop
xor
vmovdqu
stos
inc
bound
stc
and
adc
fdiv
pop
scas
and
aas
xor
xchg
xchg
arpl
sbb
fadd
cmp
push
inc
inc
popf
adc
jo
xchg
lods
dec
mov
mov
or
mov
sub
test
(bad)
jne
scas
xchg
mov
xchg
test
jnp
clc
addr16
xor
mov
sub
mov
fwait
dec
and
repz
xchg
enter
gs
sahf
mov
scas
jno
test
es
(bad)
lock
popa
mov
add
xor
mov
scas
and
movs
xchg
fistp
shr
scas
test
cmp
or
mov
pop
sbb
ficom
and
mov
xchg
inc
cmp
adc
int
fst
outs
mov
jnp
movs
push
xor
inc
cmp
cli
add
test
fidiv
add
push
inc
jl
rcl
xor
or
pop
jecxz
sub
ins
pusha
and
test
mov
jl
push
push
call
sahf
cmc
push
jl
je
inc
rcl
icebp
(bad)
xor
cmp
imul
mov
out
jle
lea
xchg
and
cmp
push
mov
std
popf
stc
sbb
pop
scas
(bad)
clc
or
and
(bad)
loope
mov
fistp
scas
mov
outs
mov
jns
mov
jle
data16
mov
sub
aaa
inc
mov
dec
icebp
cmps
ror
dec
push
sahf
out
popf
(bad)
sbb
jmp
test
movs
lods
push
fnstenv
cli
icebp
push
retf
mov
jb
ret
sbb
add
add
mov
push
lds
and
inc
dec
or
pop
out
mov
jne
xor
(bad)
or
xchg
push
adc
lock
jb
mov
pop
ror
ins
add
mov
dec
jp
fsubr
mov
ins
mov
sub
jns
(bad)
enter
jp
xor
jge
iret
retf
or
pop
inc
je
call
push
fadd
rcl
das
sub
loope
popf
out
pop
popa
mov
sub
call
cmc
pop
movs
js
movs
xchg
mov
cmp
pop
push
xchg
inc
inc
fsubr
jmp
pop
adc
sub
cmp
xor
loope
mov
stc
fidiv
aas
fcomip
mov
loopne
push
xor
jp
ret
fwait
div
jns
mov
xor
or
fcom
mov
std
shl
add
dec
and
sub
jnp
lds
cmp
dec
xchg
add
add
add
(bad)
push
jnp
push
inc
cmc
in
popa
xchg
nop
repz
sar
dec
cmps
je
(bad)
retf
popa
mov
aas
and
sub
fcmovbe
jecxz
nop
xor
pop
xor
inc
in
sar
jmp
cmp
jb
jp
sbb
es
mov
outs
popa
call
out
xor
pop
pop
jne
cld
mov
cmp
js
pop
mov
pop
out
inc
adc
or
dec
xchg
pop
cmps
ins
and
(bad)
mov
pop
popf
dec
push
fucom
stc
stos
push
sbb
cmp
mov
jo
mov
cmp
jo
and
test
mov
lea
push
mov
lods
and
(bad)
mov
adc
test
imul
fadd
pop
mov
cmp
sub
xor
(bad)
adc
in
scas
out
in
rcr
sub
mov
(bad)
jmp
jmp
sbb
xchg
mov
sar
mov
scas
sahf
mov
mov
inc
clc
cmp
and
icebp
cmp
pushf
das
hlt
sub
jmp
enter
fisttp
inc
jnp
movs
xchg
mov
lods
or
movs
and
cmp
(bad)
xchg
fisub
pop
jp
dec
add
(bad)
jmp
cmp
xor
fisttp
dec
cwde
push
ja
cmc
mov
add
daa
cdq
xchg
push
(bad)
(bad)
pop
add
mov
inc
sbb
pop
push
bound
rcr
nop
dec
xchg
jge
imul
or
push
xor
xchg
movs
mov
call
loope
popa
dec
add
jg
cld
jnp
imul
lds
cmp
fldenv
jne
xchg
test
iret
scas
jge
out
and
pop
mov
mov
inc
scas
and
jl
inc
(bad)
pop
or
mov
ror
bound
push
cli
bound
xchg
imul
add
test
in
pop
outs
inc
int
in
cs
dec
xor
adc
jp
add
mov
dec
(bad)
sub
cmp
ins
add
data16
mov
movs
xlat
pop
test
or
pop
ins
dec
call
outs
or
cwde
xor
stos
cmp
mov
into
in
out
dec
dec
push
sub
push
mov
sub
popa
adc
push
or
cld
push
inc
sbb
add
mov
jae
inc
sub
sar
(bad)
daa
mov
push
jnp
cmc
scas
(bad)
adc
cs
rcr
add
mov
xor
mov
dec
stc
and
sbb
mov
hlt
jl
mov
sub
jmp
(bad)
call
imul
pusha
mov
and
pop
mov
js
(bad)
or
sbb
sbb
jnp
inc
loop
sbb
rcr
push
je
or
ds
add
cld
adc
les
ror
ss
lahf
shl
mov
xchg
sub
adc
adc
xor
pop
mov
jbe
aam
jmp
xor
es
pop
movs
mov
(bad)
nop
(bad)
stc
fwait
(bad)
ds
sub
fwait
mov
pop
mov
retf
jb
ds
in
sub
aas
mov
test
xchg
stc
sbb
mov
(bad)
and
inc
loopne
mov
dec
stos
sbb
cmp
aaa
push
xor
mov
das
das
or
dec
imul
pop
inc
loop
cdq
pop
dec
sub
ds
stc
in
hlt
add
ins
mov
in
test
shl
ja
dec
xchg
jo
lahf
adc
arpl
sbb
sub
cmp
or
add
mov
int
sbb
aam
jle
aad
jae
jmp
(bad)
xor
sbb
cmps
and
lock
jecxz
in
addr16
call
(bad)
fstp
iret
mov
and
add
stos
hlt
jmp
jns
fild
pop
fcomi
and
dec
jno
mov
jb
jae
repz
adc
pushf
repz
cmp
aad
ret
aaa
addr16
and
xchg
xchg
ret
sbb
cs
jl
call
cmp
int
stc
lods
jp
sub
outs
or
clc
ja
shl
push
cld
jle
cs
ja
cmp
test
loop
pop
ins
xchg
fdiv
das
rol
push
loop
rcl
sbb
xor
ror
(bad)
cld
mov
push
and
cmp
fldcw
mov
mov
test
int
fadd
mov
lds
fs
dec
adc
(bad)
leave
xor
push
pop
cmps
and
push
sbb
pop
int
inc
pop
in
or
lods
xchg
push
js
jg
dec
jmp
push
test
sbb
in
fwait
jcxz
push
jp
inc
out
sbb
test
fidiv
push
push
lods
cmp
js
inc
ret
jnp
sbb
pop
cmp
pop
js
addr16
push
(bad)
fild
mov
in
cmp
call
je
icebp
push
push
sbb
and
push
call
xchg
add
pop
cli
dec
and
add
dec
movs
aad
sbb
dec
xor
xlat
or
xor
movs
add
movs
adc
aam
in
dec
mov
add
clc
add
test
jb
leave
movs
(bad)
mov
cli
xchg
pop
pop
sbb
dec
xor
fcom
push
mov
mov
test
mov
retf
or
inc
out
sahf
out
cli
xchg
fisttp
not
dec
test
sbb
pop
xchg
call
mov
push
sub
dec
sbb
sub
mov
pop
(bad)
ficomp
ror
mov
aam
cs
mov
and
sub
pop
lahf
push
cmp
rol
xchg
std
mov
and
scas
int3
push
xchg
lea
gs
pop
or
out
sbb
mov
pop
ficom
cmp
fisttp
pop
ins
mov
mov
add
icebp
and
or
jg
cmp
popa
movs
inc
cli
mov
push
cmp
jle
mov
xlat
(bad)
aad
sub
pop
popf
adc
mov
pop
aad
(bad)
xchg
inc
sahf
movs
sbb
jbe
clc
leave
lods
call
jg
daa
fldl2e
xchg
add
cmp
leave
add
gs
mov
jnp
jns
call
xchg
neg
(bad)
add
cmp
call
jo
push
xchg
xor
inc
ret
call
mov
sbb
cmp
in
addr16
mov
adc
imul
test
stos
loope
xchg
jecxz
cld
fcomp
add
test
les
push
add
adc
enter
(bad)
fld
mov
cli
mov
daa
lods
add
dec
stos
imul
mov
fdiv
mov
mov
mov
pop
dec
mov
xor
and
ins
xchg
fs
dec
rol
sbb
or
xor
cli
xchg
jg
push
cmp
scas
mov
add
loop
(bad)
mov
cmp
jo
aas
xlat
(bad)
rol
add
add
lds
rcl
adc
retf
in
xor
xchg
pop
dec
das
aas
inc
adc
cmc
ja
mov
out
mov
out
mov
stos
pushf
cli
mov
cmp
in
(bad)
ss
icebp
adc
sub
pop
lea
inc
cwde
scas
ds
mov
add
dec
test
adc
and
fldcw
mov
pop
enter
jae
into
or
rol
jmp
outs
rol
mov
mov
shr
mov
dec
push
sub
mov
jle
mov
shl
jno
cmps
inc
mov
mov
lods
mov
ror
mov
or
scas
jno
fldcw
cdq
dec
sbb
jb
jne
push
out
addr16
jl
fidiv
in
mov
xor
fdivr
data16
push
jg
add
sub
movs
xor
push
and
mov
sbb
pop
in
cmp
jecxz
not
mov
lds
cmc
add
(bad)
fst
xor
mov
in
xchg
jnp
xchg
ret
cmps
add
pop
push
jmp
into
mov
das
inc
jmp
dec
push
ds
sar
pusha
mov
sbb
lea
lahf
pop
add
jno
stos
outs
mov
jg
sub
or
push
sbb
and
xchg
test
out
int
dec
shl
lods
adc
retf
xchg
mov
out
pop
sbb
cmp
pop
add
pop
adc
mov
ret
cdq
mov
push
and
push
daa
jae
pop
jecxz
or
ss
shl
fwait
dec
xchg
(bad)
xlat
imul
(bad)
xor
aad
and
loopne
ss
inc
popa
cdq
fst
mov
push
lock
mov
in
mov
call
and
movs
retf
mov
sahf
pop
and
and
fldenv
shl
cli
pop
les
int3
popf
add
rcl
fdiv
mov
idiv
scas
xchg
xor
(bad)
arpl
ds
jl
sbb
cmc
ror
push
fwait
dec
aad
scas
inc
push
adc
(bad)
(bad)
into
pop
adc
push
mov
(bad)
cld
ss
mov
pushf
jecxz
mov
lods
mov
out
neg
add
xor
bnd
xchg
stos
bound
adc
mov
cmp
ret
mov
xchg
addr16
jmp
pushf
or
mov
repz
or
xor
mov
pop
and
std
mov
arpl
dec
pop
int
pop
(bad)
adc
je
fiadd
arpl
and
popf
mov
xor
cmp
fwait
fs
sti
test
mov
mov
xchg
sub
xor
test
or
lods
movs
(bad)
push
fdiv
cli
(bad)
mov
pop
jle
in
lea
xlat
fdiv
fld
add
xchg
jne
and
jbe
(bad)
xor
push
mov
mov
out
mov
mov
cmp
pop
pop
out
sub
cli
pop
sbb
and
es
and
jo
sub
or
mov
mov
pop
imul
xchg
lahf
popa
xor
xor
sbb
retf
cmp
int
cmp
sbb
or
or
xor
cmps
ror
or
sub
icebp
jg
mov
retf
iret
inc
add
push
push
cmp
imul
out
push
hlt
jno
not
rol
xlat
shl
fadd
adc
dec
mov
out
inc
das
jmp
and
inc
retf
sub
fs
sti
adc
popa
imul
imul
movs
jbe
das
cmps
ja
jmp
leave
les
xor
fwait
fs
fdivr
daa
push
fld
std
add
inc
jge
pop
mov
lods
fwait
add
sub
dec
adc
and
jp
and
jle
sub
xor
outs
mov
jno
xchg
hlt
dec
push
cmps
mov
jne
mov
cmp
cmp
mov
jmp
cmp
vcomisd
inc
push
mov
ins
lea
adc
lods
dec
leave
push
stos
lock
xchg
mov
adc
mov
cmps
aam
stos
cmps
fldenv
add
out
arpl
aam
xor
push
retf
adc
push
ret
fstp
stc
std
cmp
mov
test
inc
and
fbld
mov
pop
(bad)
add
mov
aam
inc
out
sub
(bad)
xor
and
arpl
push
lods
sbb
mov
cmp
mov
or
scas
(bad)
cwde
sbb
cld
test
scas
nop
adc
aad
jp
scas
ds
mov
es
inc
inc
sub
sbb
push
scas
dec
aad
dec
cmp
pop
shl
mov
mov
jl
inc
into
out
pop
inc
add
xchg
out
pop
stc
adc
out
push
or
push
imul
imul
fsubrp
fld
popf
pop
inc
jl
sub
cmp
int
push
push
push
cwde
xchg
and
add
or
xor
xlat
mov
loop
sbb
mov
xchg
mov
retf
mov
fcmovbe
or
sub
test
enter
sbb
aad
(bad)
scas
data16
mov
sti
or
aad
push
out
in
jl
add
out
(bad)
pop
(bad)
ret
fs
and
push
cli
rcl
xchg
lds
xor
cmp
adc
inc
leave
out
adc
std
mov
cdq
mov
ret
jns
aad
pop
sbb
sti
inc
shr
jo
mov
push
or
fadd
lods
fsub
je
pop
outs
in
int
aam
mov
add
pop
mov
std
in
fwait
rol
push
in
fnstcw
and
out
out
in
inc
sub
(bad)
daa
mov
pop
aaa
lahf
adc
push
fdivr
inc
imul
sub
lods
ret
jbe
pop
(bad)
jnp
fs
in
cmp
push
mov
mov
fild
(bad)
push
movs
cmps
push
or
pmovmskb
sbb
jnp
push
mov
mov
sar
xor
pushf
add
lods
mov
push
mov
retf
sbb
(bad)
sbb
fild
mov
jo
loope
dec
sbb
pushf
ret
xchg
push
inc
xchg
bound
mov
shl
xchg
popa
call
sbb
(bad)
loope
jge
mov
inc
mov
daa
cmp
cmc
sahf
cs
fld
and
adc
aas
fwait
dec
sub
outs
cwde
xchg
fidiv
(bad)
push
mov
xchg
nop
imul
icebp
into
mov
adc
out
mov
sbb
and
and
call
push
xchg
imul
sbb
clc
imul
retf
jns
imul
lahf
das
enter
push
pop
pop
xchg
iret
push
leave
out
jnp
test
test
aaa
jmp
cs
push
pop
lods
(bad)
jg
jno
imul
ret
jne
adc
loope
sub
neg
mov
mov
pusha
cld
adc
sub
(bad)
fwait
dec
test
dec
dec
ins
mov
popf
jl
gs
arpl
xchg
cld
(bad)
jl
(bad)
adc
add
jnp
gs
les
aas
jmp
(bad)
(bad)
mov
cs
movs
sbb
pop
scas
inc
dec
fwait
push
fdiv
jg
cmp
and
xchg
popw
inc
mov
les
gs
mov
dec
pushf
inc
mov
jmp
adc
mov
cli
inc
cdq
dec
cmp
(bad)
mov
mov
add
(bad)
arpl
xchg
sub
pop
popa
stc
test
lahf
int
xor
push
aaa
iret
mov
and
inc
sbb
mov
push
add
inc
mov
dec
stos
cmc
xor
push
or
and
shl
jns
fist
inc
lds
lahf
sub
cmps
sub
mov
pusha
mov
out
pop
in
add
inc
pop
xor
test
out
push
mov
or
in
fcom
push
xlat
shl
int3
dec
fidiv
arpl
jo
shr
(bad)
out
adc
shr
cs
ins
add
sbb
cld
movs
jmp
push
arpl
xchg
clc
push
or
jmp
jbe
loop
stos
(bad)
pop
lds
(bad)
mov
je
sbb
retf
or
xchg
mov
out
cmp
and
cs
cmps
out
mov
ficom
jno
cmps
jl
or
shl
jl
std
mov
xchg
bound
jbe
adc
ins
xor
mov
sbb
xchg
add
das
mov
xchg
add
push
out
mov
pop
or
xor
(bad)
into
movs
scas
push
adc
inc
adc
push
fiadd
pop
ficomp
(bad)
mov
call
cmps
xchg
xor
xor
out
mov
fcomp
retf
call
shr
xchg
cld
dec
jmp
or
inc
popf
jmp
aam
mov
(bad)
mov
pop
call
nop
imul
add
jnp
mov
gs
mov
loopne
adc
dec
adc
rcl
mov
retf
js
xor
adc
push
cmp
pop
mov
cli
and
lods
or
cmc
in
fld
test
mov
in
push
movs
sbb
icebp
pushf
xor
div
fisttp
pop
mov
cmp
push
adc
sub
(bad)
inc
inc
push
cwde
and
dec
dec
rcl
inc
xchg
jecxz
sbb
inc
in
sahf
iret
push
add
inc
aaa
inc
mov
(bad)
xlat
xor
loopne
fiadd
cmp
outs
jge
add
aam
(bad)
int3
inc
push
adc
jb
jle
stc
sahf
retf
bound
mov
mov
sbb
stos
push
jge
push
arpl
sbb
mov
add
push
adc
mov
jno
and
dec
cmp
je
push
jnp
xor
dec
and
xor
dec
mov
sbb
sub
jns
dec
xor
and
xchg
shl
jp
cmp
mov
shr
sti
or
repz
enter
scas
pusha
dec
dec
scas
std
mov
add
pusha
mov
lea
repnz
mov
call
push
jae
push
jp
dec
push
adc
jae
iret
and
sub
jl
sbb
stos
(bad)
lock
test
jecxz
ficom
dec
add
adc
inc
xchg
mov
js
mov
test
adc
push
push
pusha
xchg
scas
mov
lock
sbb
sbb
adc
data16
xor
cmp
add
sbb
addr16
inc
into
inc
sbb
mov
adc
or
push
cwde
ss
push
outs
es
cli
pop
dec
xor
or
scas
or
lods
pop
in
pushf
out
mov
mov
or
sub
dec
or
mov
ficomp
or
das
jbe
jl
es
sub
mov
in
out
(bad)
sub
pop
jae
xor
ss
xchg
inc
sbb
stos
pop
adc
mov
shufps
test
xchg
sub
pop
inc
mov
jl
outs
dec
xchg
dec
pop
mov
mov
out
sub
cmp
ror
mov
push
add
jmp
loopne
jb
fcmovbe
mov
xor
(bad)
adc
xchg
pop
leave
mov
fs
addr16
jns
rcl
mov
xlat
sti
out
jl
push
jecxz
xor
mov
cli
aaa
enter
lock
ror
test
repnz
adc
pop
icebp
dec
push
popf
adc
cmps
ds
sbb
in
sub
les
inc
into
dec
popa
jmp
scas
jmp
arpl
xor
push
test
fild
mov
push
(bad)
pop
std
out
xchg
loopne
cwde
xor
(bad)
scas
and
test
inc
and
outs
push
pop
and
(bad)
les
cmp
les
sub
or
outs
xor
inc
imul
adc
add
jl
fimul
mov
mov
sbb
jbe
inc
mov
ja
and
in
ds
cmps
xor
(bad)
in
and
popf
bound
jp
xor
add
mul
jg
ins
loop
jb
(bad)
out
push
xchg
mov
or
dec
or
stc
ds
adc
sti
aaa
push
jmp
mov
push
xchg
sbb
mov
jp
and
sbb
xor
nop
jecxz
pop
mov
jmp
dec
lock
mov
xchg
jmp
dec
mov
adc
jo
stc
or
pop
inc
and
mov
sahf
leave
mov
xchg
mov
mov
pusha
call
ja
ins
out
dec
sub
dec
push
cmp
jmp
pop
adc
enter
hlt
test
mov
popa
int
fs
aam
jmp
sbb
shl
clc
shl
cmps
mov
and
jle
add
ds
cmp
or
jae
or
cmp
bound
or
and
aad
mov
inc
outs
paddq
not
(bad)
retf
xchg
out
cmp
test
mov
(bad)
push
lods
jl
aaa
out
push
shl
mov
mov
xor
mov
call
inc
xchg
and
call
movups
pop
retf
xchg
inc
cli
bound
mov
outs
inc
aad
cdq
mov
inc
fisttp
or
cmp
push
adc
retf
fcomp
inc
jns
or
loopne
dec
pop
imul
push
(bad)
clc
in
and
mov
nop
jb
push
pop
hlt
idiv
inc
push
mov
pop
iret
mov
js
adc
imul
cmps
or
(bad)
fadd
jle
int3
mov
je
push
push
jmp
inc
inc
jae
or
mov
fwait
adc
ins
jle
pop
pop
mov
xor
cmc
sbb
call
sbb
mov
push
das
in
shl
rcr
pushf
jg
shr
jno
mov
mov
add
loopne
adc
jecxz
retf
xchg
stc
outs
add
sbb
cmp
adc
or
push
sbb
cs
sbb
adc
jle
je
xlat
(bad)
(bad)
mov
adc
iret
mov
dec
ror
cmp
shr
mov
shr
adc
ja
push
fdivr
fwait
mov
repz
test
sub
sub
mov
or
(bad)
inc
out
adc
dec
test
pop
push
push
out
ret
adc
ss
nop
add
mov
rcr
mov
xchg
ficom
cdq
mov
pushf
aas
imul
pop
sbb
push
push
cmp
cmps
mov
sbb
scas
pop
pop
dec
push
lock
push
add
mov
popf
and
lea
pusha
fucomi
les
movs
imul
add
rol
loopne
cmc
stos
and
mov
test
jge
jns
sbb
sub
or
and
xchg
retf
outs
jge
test
pop
pop
pushf
mov
repnz
(bad)
mov
(bad)
lods
xchg
sbb
stc
mov
dec
out
xchg
mov
je
(bad)
pushf
fst
cmp
dec
push
inc
xchg
pop
stc
popa
jns
xchg
mov
mov
int
push
push
and
push
pop
pop
mov
xchg
push
gs
scas
test
xor
pop
fild
call
jge
cwde
ret
cld
cmp
js
push
in
lahf
stc
xchg
mov
cmp
mov
xor
sti
in
cmp
pusha
pop
(bad)
pusha
mov
xchg
ror
arpl
jbe
xchg
test
shr
mov
test
pop
jg
xchg
shl
inc
jl
mov
loopne
loope
movs
dec
jmp
and
mov
mov
inc
or
inc
(bad)
mov
mov
sub
into
aad
cld
dec
or
jg
dec
xor
and
comiss
retf
in
sbb
mov
mov
mov
pop
test
test
lods
sub
arpl
mov
sub
popa
(bad)
xchg
mov
adc
inc
ret
inc
dec
sub
test
loop
jbe
dec
fdivr
push
pop
and
shr
adc
xor
push
mov
sbb
lods
scas
mov
cli
fs
pop
cmp
loopne
jmp
aaa
xor
repz
aas
shr
clc
nop
jle
inc
sbb
jl
jge
adc
mov
mov
out
bound
stc
aaa
cmp
out
pop
push
push
add
or
in
or
xchg
add
cmps
jp
ficomp
sbb
outs
sbb
mov
mov
cwde
ss
push
lods
mov
add
idiv
test
xchg
pusha
stos
js
jbe
or
pop
sti
push
stos
inc
fnstenv
add
push
fsub
or
sub
mov
mov
and
adc
inc
add
inc
in
add
xor
pop
mov
lods
mov
pop
pushf
dec
xor
inc
push
adc
jnp
adc
(bad)
mov
ret
(bad)
(bad)
push
cmp
inc
cmp
test
test
xor
outs
test
ins
int3
inc
mov
xor
popf
and
out
or
and
mov
xchg
pop
cwde
aad
sub
rol
push
call
(bad)
mov
mov
adc
pusha
and
jae
add
enter
sbb
or
adc
cmp
scas
or
add
loop
push
lds
enter
cmps
loop
sbb
clc
ja
ficom
xlat
and
pop
out
dec
out
lahf
pop
hlt
sub
and
cdq
push
mov
sbb
ficom
jecxz
and
adc
sbb
ss
je
scas
pop
xchg
arpl
gs
or
xor
and
sub
arpl
sbb
(bad)
xchg
cmp
mov
mov
xor
shr
mov
fcomi
cmp
inc
pop
scas
add
dec
lock
lods
popa
outs
inc
arpl
sub
push
fldcw
pop
scas
or
lods
jmp
mov
pop
inc
scas
dec
cmp
adc
lock
add
hlt
fstp
inc
sbb
sbb
or
or
mov
pop
pop
ins
xlat
adc
imul
sub
ror
loop
out
popa
mov
xchg
retf
push
mov
mov
dec
jno
test
jae
pop
mov
cmp
out
sub
xchg
mov
cs
pop
loop
dec
(bad)
sub
jmp
sub
sbb
jb
cmp
fldcw
dec
push
retf
test
dec
mov
lds
sahf
dec
sbb
pop
lahf
out
(bad)
mov
fstp
xchg
xchg
xlat
mov
xor
xchg
inc
outs
cmp
mov
out
sbb
idiv
dec
jne
push
test
jmp
and
cmp
xchg
ja
push
or
scas
in
push
std
jbe
xlat
popf
and
test
scas
repz
inc
cmc
cmp
inc
leave
mov
mov
rcr
loope
mov
or
or
mov
sbb
fisub
adc
fsubr
or
mov
xchg
jb
pop
mov
sbb
mov
dec
dec
in
sbb
int
and
jns
cmp
std
adc
add
fnstcw
stc
mov
(bad)
dec
fsub
push
jp
mov
je
mov
pop
rcl
mov
jmp
cdq
loopne
test
inc
push
pop
sub
mov
fld
dec
jno
retf
dec
rcr
and
push
xor
shl
sbb
repz
test
xchg
dec
in
mov
mov
pop
icebp
and
or
sti
xchg
and
xor
mov
call
jae
shr
int3
jmp
loop
add
adc
cli
aaa
icebp
ret
ss
mov
cmp
adc
fdiv
in
cmp
xor
(bad)
rcl
adc
sub
scas
icebp
jecxz
shr
pop
fadd
mov
and
mov
cmp
inc
add
sahf
mov
rcr
mov
mov
push
(bad)
dec
rol
(bad)
movs
leave
out
xchg
in
(bad)
adc
(bad)
pop
fucom
push
cmps
daa
sub
mov
add
and
cwde
pushf
push
imul
and
push
cmp
dec
loopne
loope
pushf
sahf
ret
add
std
xchg
leave
push
out
mov
cli
div
sub
or
stos
adc
jg
pop
jno
icebp
cld
fld
das
jne
lea
pop
out
out
aaa
cmp
ror
push
fwait
dec
mov
push
out
arpl
xchg
popa
imul
lods
xor
cdq
lahf
into
sub
mov
jb
xchg
fisubr
stos
out
adc
aam
mov
test
(bad)
cmc
clc
(bad)
xor
mov
xor
push
pop
jbe
imul
mov
sub
mov
iret
or
mov
aad
mov
in
stos
lahf
jge
xchg
mov
sbb
cdq
xchg
cmp
pop
push
loopne
inc
mov
push
fisubr
mov
ins
imul
in
add
arpl
into
fwait
loope
ds
xor
mov
sbb
neg
push
push
retf
packsswb
ret
pop
and
inc
mov
cmp
add
mov
add
lods
ret
cwde
pop
es
pusha
test
sahf
movs
jae
sub
sub
out
data16
test
jge
and
sbb
mov
data16
movs
sub
mov
fdivr
test
dec
jge
stc
mov
pop
jg
stos
sbb
arpl
inc
cmp
retf
or
pop
and
cmps
mov
sahf
cmp
sbb
movs
cmp
std
pop
and
movs
cmp
sbb
sub
sub
ror
fist
add
movs
or
sub
aas
push
fisubr
mov
into
pop
xchg
adc
jmp
xlat
jne
std
dec
jo
mov
xor
sub
jno
jns
fwait
pop
in
nop
js
cmp
lds
pop
sub
push
push
mov
sbb
ror
pop
arpl
popf
test
retf
inc
hlt
mov
jno
in
push
mov
mov
(bad)
mov
push
xchg
pusha
aam
mov
push
xor
jl
bswap
lea
movs
mov
mov
cmp
push
push
das
(bad)
pop
ins
pusha
cmp
xor
xor
push
and
add
push
jl
rcl
call
jo
mov
xor
sub
addps
addr16
ror
(bad)
or
das
inc
cmps
xchg
arpl
push
cdq
ret
(bad)
or
lock
push
stc
sub
and
out
das
das
xchg
adc
and
jns
ins
loope
pop
jmp
scas
leave
iret
xor
dec
imul
call
clc
pop
or
not
jne
cmp
cmp
repz
inc
mov
push
out
fld
pop
retf
mov
enter
push
das
sub
pusha
movs
mov
stc
(bad)
xor
retf
and
imul
mov
in
mov
dec
mov
movs
jb
cmp
(bad)
push
mov
pop
and
cld
dec
mov
push
sbb
xchg
inc
stos
int
xor
ins
dec
inc
cld
dec
mov
mov
aam
pop
xchg
cmp
mov
or
push
inc
mov
xchg
lahf
outs
sbb
(bad)
xchg
cmp
jl
fild
inc
enter
push
dec
dec
mov
icebp
ret
mov
jae
rcl
std
data16
sub
cmps
pop
adc
icebp
jle
sub
mov
inc
fmul
xor
jnp
setb
std
fld
(bad)
sbb
sub
jne
mov
shr
pop
loop
repz
push
push
xchg
mov
adc
pop
push
dec
retf
dec
outs
pop
pop
xchg
scas
(bad)
(bad)
loopne
inc
sahf
sub
(bad)
add
repnz
add
addr16
cmp
mov
push
cmp
sub
test
hlt
daa
push
popa
gs
inc
pop
ror
cmc
pop
js
push
stos
hlt
mov
aas
mov
xchg
clc
sbb
xor
retf
mov
fdivr
cmps
arpl
push
rcr
mov
in
jl
mov
sub
cwde
or
call
rol
ss
mov
daa
sbb
inc
dec
pop
js
jbe
cdq
sbb
jb
nop
mov
sbb
fs
in
fstp
sub
xor
pop
stos
jmp
xor
or
int
imul
jns
test
cmp
ins
xor
bound
scas
je
js
or
push
and
das
mov
lods
sar
sub
popf
fmul
mov
cmp
dec
dec
xchg
inc
jl
sub
ins
and
mov
icebp
pop
fwait
mov
xor
jg
sub
xor
mov
xchg
scas
xor
addr16
inc
pushf
cli
or
xor
sahf
inc
aad
ja
fistp
ret
sub
sub
xchg
aad
(bad)
pop
mul
mov
popf
retf
add
cs
fsubr
or
adc
cmp
cli
daa
imul
out
cld
dec
cmp
fwait
out
call
add
aas
mov
aad
clc
cli
imul
mov
xchg
cmps
in
mov
test
or
ret
fild
out
add
rcr
cdq
jne
lods
and
and
mov
inc
dec
lock
stos
imul
mov
aad
enter
test
jae
in
cmp
mov
sub
push
ret
inc
ror
sub
lds
cmp
stos
mov
fild
jge
lds
xchg
jne
fcmovbe
scas
inc
out
shl
and
ret
or
mov
lahf
xor
jae
fld
jmp
xchg
movs
or
mov
cmc
sbb
rol
into
int
test
jg
fsubr
dec
jbe
mov
push
movhps
sub
(bad)
cmc
adc
cmc
into
jecxz
loop
(bad)
mov
inc
mov
cs
iret
add
xchg
lods
dec
mov
pop
pushf
cmps
setno
pop
sub
dec
xchg
imul
adc
lock
in
push
mov
adc
cmp
loopne
popa
add
push
push
aam
call
outs
sbb
iret
loop
int
clc
or
test
dec
outs
out
(bad)
mov
bound
dec
xor
add
mov
out
es
add
call
jns
pop
aad
inc
xchg
cli
push
call
div
jecxz
add
mov
aam
js
xor
jecxz
loop
fadd
sbb
adc
test
mov
aad
mov
enter
call
(bad)
inc
pop
imul
ins
mov
mov
movs
sub
pop
jne
(bad)
mov
mov
outs
rol
cmp
cmp
push
jne
(bad)
imul
or
mov
mov
xchg
in
push
cmp
inc
into
push
aam
ja
xchg
pop
xchg
ss
jmp
cwde
imul
fdiv
stos
cwde
jecxz
xor
mov
xor
enter
fldln2
loope
es
nop
xchg
mov
push
pop
imul
fcomp
mov
xchg
xchg
enter
xor
movs
mov
lods
icebp
fdiv
sysexit
sbb
fcomp
cmp
xchg
cmps
(bad)
sub
cli
jmp
bswap
call
outs
sub
jmp
ja
ds
xchg
stc
mov
(bad)
pop
shr
xor
jno
push
rcr
pop
shr
jns
outs
and
pusha
idiv
sub
push
sub
and
cmp
shl
push
call
mov
mov
ffreep
mov
retf
pusha
mov
inc
rcr
sub
push
sbb
inc
mov
xor
add
sbb
fiadd
into
pop
mov
not
mov
repnz
pop
push
pop
in
jp
nop
add
push
fild
sbb
xchg
xor
xchg
inc
xchg
je
or
js
push
lahf
xchg
repnz
lods
pop
clc
dec
pop
mov
pop
pop
push
cmp
rcl
iret
movs
fwait
popa
scas
add
js
loope
mov
mov
cmp
(bad)
shr
mov
jle
bnd
daa
cld
int
pop
ins
fwait
xchg
jae
popf
retf
inc
add
iret
inc
cmp
shl
pop
test
sub
lock
mov
aaa
dec
and
cmp
and
rcr
and
and
push
pop
mov
jge
pop
sahf
add
clc
mov
push
in
std
mov
inc
or
mov
or
in
stc
pop
in
mov
xchg
sub
xor
xchg
xor
pop
leave
xlat
push
loop
enter
jo
ja
cdq
push
fcomp
pop
push
fistp
jg
ins
pop
cmc
pusha
mov
cwde
cmp
xchg
fcomp
movs
jae
adc
test
movs
(bad)
fdivr
shr
sbb
xor
jnp
sub
test
sbb
xchg
or
xor
dec
jo
adc
jmp
aad
dec
sbb
xchg
mov
rcr
mov
cmc
pop
cmp
mov
cmp
dec
push
sbb
mov
adc
call
ret
lock
add
cmps
push
dec
iret
call
in
mov
(bad)
dec
lahf
adc
in
adc
out
icebp
sub
sbb
push
push
int3
clc
ja
fdivr
aam
xchg
jmp
sbb
mov
loop
sub
fwait
inc
inc
test
jbe
(bad)
rol
add
cmps
xchg
nop
pop
bsf
xchg
outs
adc
pop
fdivr
outs
xchg
add
jae
xor
or
movs
push
push
gs
mov
sub
adc
sar
jmp
gs
les
sbb
cmp
or
pop
in
pop
test
fcomp
sub
(bad)
mov
sub
int3
dec
jo
jae
outs
jnp
sub
clc
fndisi(8087
push
sbb
push
call
push
push
rcl
mov
sub
movs
sti
xchg
rol
and
out
lods
jnp
retf
mov
xor
push
(bad)
std
push
int3
pop
ss
cmps
in
xor
icebp
lock
icebp
jmp
cmc
jns
retf
mov
jbe
mov
and
inc
pop
mov
ss
mov
inc
aaa
fnstenv
add
movs
and
idiv
xor
dec
and
loopne
int3
imul
pop
lods
daa
int3
jns
push
(bad)
shl
and
mov
jecxz
jmp
into
fild
inc
jmp
fmul
or
in
pop
jmp
sbb
dec
mov
sbb
jmp
frstor
mov
(bad)
lahf
sbb
rcl
in
imul
scas
inc
jge
mov
rcr
xor
inc
cld
and
aas
xlat
sub
push
mul
pop
sbb
push
sub
add
fldcw
stc
push
mov
in
xor
adc
jg
sbb
fld
scas
data16
enter
inc
imul
cmp
jl
cmp
adc
xor
fadd
daa
and
add
dec
(bad)
aad
or
(bad)
cdq
sub
sahf
je
cs
cwde
push
inc
jp
mov
fisttp
loopne
push
ja
test
pop
(bad)
pop
loopne
aaa
int
inc
lock
adc
je
push
mov
cwde
clc
mov
inc
xor
sub
imul
push
add
sub
and
arpl
out
mov
inc
pop
pushf
repz
or
dec
shl
mov
arpl
jne
inc
pop
sub
or
sub
cdq
adc
sub
les
xor
xchg
arpl
push
cdq
popf
cld
pop
les
jb
loop
pusha
push
(bad)
sub
xchg
jno
jb
xchg
lea
test
cmps
pop
inc
dec
sub
cmp
push
add
dec
aaa
sub
push
pop
adc
es
fldenv
repz
aam
cs
mov
scas
shl
adc
mov
mov
retf
shr
dec
mov
leave
sub
or
ja
adc
lea
jmp
pop
add
aas
add
dec
(bad)
fistp
jmp
jmp
push
enter
sar
jge
das
pop
and
lds
cdq
gs
mov
je
in
inc
jp
ins
fdiv
or
outs
push
shr
inc
les
push
inc
sbb
mov
inc
lods
(bad)
neg
mov
loopne
inc
mov
jg
sti
cmp
push
mov
xor
int
inc
push
popa
sbb
sahf
inc
mov
inc
xor
stc
ret
adc
imul
xor
scas
xchg
cmps
adc
push
jmp
psubd
mov
dec
imul
fistp
mov
loopne
cmp
xchg
jecxz
and
js
sbb
cmp
ret
cli
pop
adc
lds
pop
or
xor
loop
fs
add
inc
popa
push
push
cmps
popf
xchg
xchg
iret
sub
in
imul
fidiv
add
add
pop
stc
push
rcl
pusha
pop
or
xor
jno
xchg
inc
mov
pop
popf
mov
movs
xor
add
fwait
ret
dec
mov
lock
jecxz
aas
loopne
mov
mov
adc
dec
lds
leave
stos
(bad)
or
fmul
aad
sahf
mov
sub
jecxz
test
push
push
repnz
pop
lock
adc
xchg
loopne
pop
cdq
adc
cmp
fdivr
dec
sbb
sub
push
(bad)
aad
sub
dec
pop
sbb
daa
std
loopne
mov
(bad)
mov
retf
dec
and
jl
jns
pusha
test
je
test
mov
rcr
pusha
pop
stos
lock
loopne
mov
test
add
imul
fimul
(bad)
adc
inc
imul
fst
add
js
xor
ja
scas
mov
xchg
xchg
jo
xor
movlps
fsubrp
leave
xchg
mov
mov
mov
inc
inc
add
lods
in
xor
gs
std
imul
inc
(bad)
pop
xchg
add
adc
xchg
or
icebp
mov
sbb
and
mov
xor
loopne
xlat
clc
scas
mov
mov
ss
mov
or
mov
in
push
ja
aam
add
out
mov
xor
aas
jmp
cmp
lods
adc
push
ret
xor
(bad)
iret
mov
in
cdq
(bad)
stos
mov
outs
mov
shl
mov
test
retf
pop
add
cmps
sub
mov
stos
call
test
add
and
in
push
push
add
retf
or
hlt
ins
push
push
dec
dec
xchg
adc
movs
daa
mov
call
cdq
lock
xor
ja
(bad)
pop
jmp
aam
pop
mov
hlt
enter
jl
cmp
mov
retf
lods
ret
xchg
push
or
and
out
movs
dec
aam
inc
dec
inc
and
jecxz
bound
cmc
leave
xlat
arpl
sub
jmp
test
mov
push
fwait
bswap
adc
sbb
jnp
sub
jle
ret
outs
(bad)
xchg
cmp
int
cmp
test
cmp
je
sbb
data16
das
icebp
in
xchg
inc
xor
add
cmps
add
movs
cdq
dec
mov
ins
sti
gs
push
hlt
js
adc
fwait
in
div
jp
pop
xchg
icebp
jp
sub
ins
sbb
(bad)
fld
enter
(bad)
sar
ds
aas
ins
repz
jb
inc
les
fdivr
push
sub
push
fs
shr
popf
mov
retf
int
clc
es
cmp
jmp
jmp
adc
jg
lods
cmp
int
cmp
sbb
mov
fidiv
xchg
rcl
fs
test
cmp
pop
(bad)
int3
cmp
cmps
mov
out
add
(bad)
push
mov
push
xor
dec
mov
repnz
push
pushf
(bad)
and
(bad)
out
fdiv
clc
xor
stos
scas
(bad)
scas
xor
pusha
je
das
movs
(bad)
retf
outs
out
cmp
inc
popa
test
outs
pop
mov
mov
cmc
cmp
sub
pop
or
xchg
dec
retf
call
sti
xor
jge
add
hlt
push
std
jmp
xlat
mov
repz
sub
pop
jns
sub
ror
call
jle
jae
xor
ror
retf
or
enter
psubsw
cmp
push
arpl
inc
popf
pop
inc
pop
retf
cli
ins
cli
jbe
pusha
jne
repnz
in
pop
mov
or
lahf
push
add
out
in
in
ins
fnsave
dec
push
loop
and
nop
pop
add
rcl
jmp
adc
or
fnstenv
sub
push
int
mov
sub
jbe
pop
mov
imul
sub
fisub
mov
retf
enter
pusha
mov
nop
fcmove
xchg
and
(bad)
pusha
adc
call
pop
jmp
les
xlat
dec
or
sbb
sbb
jmp
movs
xor
jl
add
rcl
cli
movs
xor
cdq
call
sar
dec
and
dec
imul
jbe
outs
mov
jns
fiadd
daa
dec
sub
inc
out
addr16
(bad)
sub
and
jg
push
cmp
xchg
sub
inc
and
leave
sub
or
xchg
cmps
or
setge
(bad)
or
mov
mov
sub
fldcw
add
mov
push
out
xchg
out
sbb
test
les
lahf
pop
imul
or
pop
cmp
mov
idiv
or
cmp
sbb
sub
inc
in
xchg
in
popa
jle
and
cmps
xor
leave
xchg
sbb
inc
ss
and
(bad)
fistp
sub
pop
xchg
ins
idiv
and
mov
pop
or
dec
inc
sbb
cmp
xchg
mov
jns
xchg
jl
dec
add
(bad)
in
mov
js
cmps
cmps
in
jno
mov
push
dec
push
sub
(bad)
cdq
jns
mov
adc
jmp
in
jl
mov
adc
call
aaa
inc
cmps
stc
jge
cmps
hlt
jp
test
jo
neg
push
js
test
lahf
add
xor
(bad)
out
mov
xlat
movs
pop
(bad)
stos
mov
xor
movs
sub
mov
mov
mov
mov
inc
or
dec
and
shl
jle
cmp
int
sbb
loop
fldl2e
popf
(bad)
add
xchg
pop
inc
push
sti
mov
aad
test
in
mov
dec
mov
outs
movs
dec
les
in
mov
mov
sbb
push
xor
dec
test
scas
pop
xchg
add
shrd
imul
int
adc
mov
xchg
sti
nop
cdq
jp
sbb
aas
pop
adc
stos
and
mov
or
push
jmp
rcr
cdq
xchg
dec
in
jbe
enter
pop
inc
mov
out
adc
jnp
rcr
mov
mov
inc
cmp
pop
loope
sub
fmul
mov
test
push
push
pusha
mov
jne
(bad)
push
or
inc
xchg
jle
mov
popf
sub
dec
or
mov
xchg
sbb
jmp
shl
xchg
inc
(bad)
dec
or
aad
dec
dec
pop
fadd
movs
xchg
push
fidivr
or
sbb
pusha
pop
push
ret
mov
les
cmp
shr
mov
mov
add
jle
cld
sbb
ins
pop
sub
inc
xchg
inc
repnz
jecxz
aad
lods
cmp
shl
pop
inc
in
pop
jb
pop
(bad)
(bad)
pop
dec
xor
retf
ins
push
out
rcl
(bad)
cwde
dec
sbb
aam
retf
cmp
add
lea
ret
jmp
stos
add
xchg
mov
aaa
xchg
add
pminsw
jne
and
jecxz
shr
or
test
cld
movs
cdq
outs
mov
add
sub
mov
mov
test
push
push
mov
loop
jg
ror
xchg
call
lods
scas
mov
stos
dec
jp
add
lods
fadd
jbe
and
cwde
test
sbb
add
xchg
in
stc
cs
iret
jbe
out
stos
sar
sub
stos
je
nop
add
mov
and
repnz
sbb
retf
(bad)
mov
sub
out
bound
call
out
add
push
pop
jmp
mov
pusha
jl
pop
les
ds
jge
pop
mov
xchg
jg
call
push
sub
rcl
movs
hlt
inc
and
pop
sub
or
and
(bad)
jp
arpl
jae
jmp
fisttp
test
out
sbb
ret
xchg
hlt
cmc
xor
dec
jmp
or
mov
or
imul
xchg
sar
jbe
cmp
xlat
mov
lock
mov
popa
shl
mov
push
in
div
lock
fisttp
jae
ins
hlt
movs
xchg
(bad)
jbe
(bad)
and
fld
js
cmps
mov
and
mov
mov
pop
leave
jp
sub
loop
repz
add
arpl
ror
enter
inc
jmp
das
xlat
mov
in
inc
inc
repnz
sti
xchg
mov
jle
add
(bad)
xchg
pusha
out
lds
xlat
xchg
gs
in
sbb
clc
popa
clc
push
dec
xchg
call
std
mov
inc
lods
dec
jl
push
cmps
fdiv
retf
mov
(bad)
jae
mov
cmp
fst
cli
fdivr
pop
dec
and
adc
sbb
push
cwde
push
push
xchg
jecxz
cs
in
enter
cmps
mov
fnstsw
(bad)
clc
mov
pop
or
inc
xor
jae
cli
clc
sar
sub
xchg
addr16
repnz
ret
mov
dec
je
lods
mov
repnz
inc
or
and
push
ficom
and
jmp
add
jp
pop
mov
(bad)
js
mov
jl
pop
pop
jle
popa
mov
inc
js
sub
and
in
mov
xchg
popa
pop
pop
jecxz
test
into
test
mov
fidivr
ins
or
in
call
mov
mov
xor
jmp
cwde
xchg
shl
push
sbb
scas
push
adc
and
mov
ins
jecxz
xor
ret
jl
jmp
cld
jp
mov
mov
sub
cdq
addr16
push
inc
jp
fstp
enter
outs
(bad)
mov
adc
shr
sbb
loopne
nop
add
dec
in
jo
into
mov
jge
popf
lahf
xchg
dec
adc
lea
push
mov
pusha
push
aad
sub
jmp
rol
xchg
jne
push
push
scas
xor
or
jns
sub
jae
rcl
out
mov
imul
daa
and
lods
or
ds
add
das
pushf
pop
gs
(bad)
mov
dec
and
jo
test
pop
out
dec
pusha
jge
xlat
mov
frstor
push
push
addr16
mov
xchg
int3
inc
mov
lahf
cmc
mov
out
pusha
out
mov
mov
rcl
inc
push
leave
(bad)
aaa
int3
ins
pop
(bad)
les
mov
lahf
fcmovnbe
mov
dec
mov
ins
mov
add
lds
fst
jnp
call
add
mov
adc
cmp
fdiv
dec
icebp
imul
inc
das
sar
sahf
pop
cmp
sub
les
or
mov
lds
nop
int
stos
cmp
mov
mov
mov
jp
pop
aad
or
inc
addr16
aam
mov
or
out
jbe
or
int3
cmp
rcr
ret
mov
in
xor
xchg
out
inc
jmp
mov
sar
or
aam
bound
fiadd
fst
pop
sub
or
mov
xchg
gs
(bad)
rcl
cdq
sub
push
bound
jle
hlt
push
xor
inc
push
jnp
add
js
dec
call
xchg
popf
retf
push
popa
and
aam
aam
jl
and
rcl
pop
and
retf
aas
xlat
xchg
mov
pop
into
push
and
sbb
je
lods
xor
or
std
pop
icebp
in
or
mov
pop
xor
loopne
arpl
xor
mov
pushf
ss
test
jae
aaa
sbb
ffree
fdivr
inc
mov
inc
scas
jbe
setl
pop
ss
lods
ror
xor
cmps
fs
add
inc
xchg
jae
imul
pop
pop
iret
jb
lods
inc
mov
pop
jb
jne
pop
sbb
movs
or
retf
fistp
add
mov
push
add
xchg
mov
sub
jp
(bad)
mov
jbe
fldcw
loope
in
mov
stc
mov
add
js
fbstp
popf
pop
pop
mov
cmps
mov
call
or
jp
or
gs
dec
mov
inc
or
pop
dec
push
jl
aaa
imul
loop
fld
jnp
sti
push
in
loopne
pusha
xchg
pusha
adc
and
sbb
retf
cmps
int
cld
cmp
adc
xchg
test
jg
pop
push
inc
(bad)
cmps
mov
sub
add
mov
mov
arpl
into
(bad)
js
cmp
inc
outs
push
mov
rcl
jge
add
dec
push
repnz
add
bound
dec
mov
sbb
retf
test
sub
mov
ins
mov
pop
jno
inc
or
xor
(bad)
retf
mov
iret
cmp
xor
xchg
cmp
cwde
fisubr
xor
inc
xchg
xor
clc
mov
jecxz
xor
je
push
sbb
xor
and
dec
push
int
test
push
mov
and
not
jmp
ret
ins
mov
fisubr
idiv
bound
add
pop
imul
pop
jg
sub
(bad)
out
cmp
dec
push
add
dec
imul
test
retf
jg
les
data16
outs
mov
xchg
test
fimul
jne
mov
imul
adc
adc
or
arpl
xor
into
sbb
cmp
pop
sbb
sub
sub
xor
das
jbe
adc
jg
pusha
out
fwait
stos
inc
popa
pop
mov
inc
xor
jecxz
jmp
mov
xchg
cmp
push
scas
inc
popf
or
(bad)
mov
inc
sbb
leave
ds
jmp
lods
fwait
inc
jl
cmp
out
dec
jmp
cmp
or
mov
popf
fsubr
inc
xchg
or
outs
xor
jle
stc
jecxz
jns
mov
sub
mov
aad
pop
or
js
mov
(bad)
cmp
aad
neg
popf
mov
out
ja
mov
add
out
cmp
sub
push
or
stos
push
mov
xchg
fsub
stos
jle
inc
je
cmps
jnp
test
inc
cmp
dec
mov
movs
adc
stos
(bad)
movs
enter
dec
outs
push
push
pop
push
loopne
test
jl
inc
cwde
sbb
xor
cmps
mov
pop
or
inc
push
sub
push
cdq
push
push
cwde
and
ss
adc
lods
cmp
outs
loop
retf
cmp
iret
jg
aad
das
out
nop
(bad)
clc
movs
xchg
push
mov
fiadd
and
mov
sub
adc
sub
mov
popf
mov
and
add
push
xchg
add
mov
aad
jge
(bad)
xor
lods
push
push
shr
(bad)
pop
and
jecxz
test
das
mov
out
outs
or
pop
and
adc
xor
push
cmp
xchg
mov
stc
and
pop
rol
lock
cmps
sahf
jae
and
dec
jns
shr
pop
pusha
test
and
outs
mov
lea
add
lds
repnz
jae
adc
sbb
mov
sti
sbb
lahf
lock
xor
in
dec
sbb
xlat
pop
or
xchg
fwait
mov
jno
ss
enter
pop
(bad)
test
idiv
jne
and
ficomp
sbb
out
leave
adc
mov
in
out
dec
shr
jmp
and
aad
jo
ret
sbb
and
mov
mov
sbb
out
push
(bad)
inc
mov
iret
cs
fldcw
mov
es
xchg
(bad)
xor
mov
addr16
adc
adc
or
aad
ins
sub
in
pop
fcom
xor
pop
rcr
cmp
or
push
inc
mov
jb
in
mov
js
cwde
push
dec
shl
sbb
fldenv
jbe
inc
sbb
jbe
mov
popf
jp
cmc
fsub
or
sbb
xor
sub
sbb
or
iret
out
inc
xor
movs
in
fst
jno
push
mov
jmp
fdivr
ud1
rcl
ret
nop
mov
into
cmp
into
xor
add
imul
adc
(bad)
push
lea
daa
(bad)
jmp
test
fild
or
add
aas
pusha
sbb
mov
int3
xlat
lea
ret
pop
clc
imul
out
cmp
cmp
lds
mov
rol
mov
cmp
inc
pop
daa
push
sub
nop
fadd
push
jns
mul
test
adc
mov
js
adc
add
mov
cld
xchg
in
dec
jle
mov
inc
jno
add
cmp
jmp
mov
ret
jnp
xor
mov
(bad)
adc
(bad)
gs
bound
nop
dec
out
mov
sub
jecxz
dec
(bad)
inc
xchg
ret
arpl
mov
pop
fcomi
jnp
add
xchg
mov
mov
dec
mov
fidiv
xor
adc
jp
sub
sbb
les
shl
push
push
inc
mov
sbb
xor
arpl
or
jmp
xlat
sub
adc
std
mov
mov
xchg
cmp
ins
stos
pop
mov
clc
and
(bad)
cmp
push
pop
pop
mov
stos
into
push
(bad)
sbb
arpl
pop
pop
cmp
cmp
scas
jns
mov
loop
cmp
icebp
out
test
xchg
pop
int
dec
icebp
xor
test
add
mov
adc
std
inc
pop
pushw
int
call
aad
push
add
add
hlt
mov
shl
icebp
outs
jbe
pusha
pop
add
sub
aas
call
dec
adc
mov
aad
inc
jns
cmps
add
add
(bad)
stos
or
shrd
fmul
cdq
inc
push
xchg
aaa
cmp
mov
loopne
retf
pop
je
cmp
xchg
or
add
out
(bad)
rcl
outs
das
arpl
dec
daa
xor
push
sbb
mov
xchg
xor
pop
movs
stc
jne
mov
shl
lahf
std
rcl
popa
dec
in
jge
js
xchg
inc
jne
xor
add
repnz
push
push
adc
call
pop
pusha
fidiv
sbb
fiadd
add
outs
pushf
pop
push
xor
fimul
or
(bad)
repz
sub
iret
inc
repz
ficom
jle
and
inc
cmp
mov
sbb
mov
push
ret
fidiv
mov
xor
ror
lea
jmp
jnp
cdq
mov
mov
or
jle
shl
ins
mov
mov
xor
inc
ds
loope
int
lea
inc
iret
out
pushf
mov
xchg
ja
fnstcw
les
ins
sub
outs
push
lods
imul
cli
sub
and
inc
add
jb
push
dec
pop
(bad)
rcl
mov
in
xor
rcr
inc
shl
pop
mov
inc
xchg
sbb
neg
leave
scas
and
xchg
icebp
inc
lods
add
test
mov
(bad)
adc
jge
js
mov
sbb
sbb
xor
push
push
jg
out
sti
push
mov
lods
call
loop
pop
pop
lock
or
gs
arpl
push
xlat
xchg
jb
push
shr
repnz
rdpmc
jle
imul
fs
xor
mov
or
dec
push
cdq
fimul
push
sub
test
mov
out
scas
add
mov
mov
xor
jg
cmp
mov
jp
pop
stc
out
sbb
cmps
sub
adc
xchg
cmp
iret
(bad)
imul
test
inc
push
push
ins
out
and
retf
mov
imul
xchg
imul
xchg
out
ret
movs
in
imul
jmp
push
jae
cmp
xchg
nop
mov
sub
mov
ds
das
or
xchg
ret
icebp
mov
ret
daa
movs
pop
leave
sbb
cld
adc
push
out
lds
repz
scas
div
pop
enter
rcl
push
fsubr
xchg
psubsb
mov
xchg
out
pop
sbb
inc
aad
inc
loope
xchg
fiadd
cdq
xchg
jns
xor
or
sti
daa
dec
and
movs
sbb
jle
pmullw
mov
jno
ds
scas
mov
test
lahf
out
add
xchg
(bad)
cmps
pop
mov
mov
xor
jno
jbe
jb
lods
jp
movs
nop
adc
jb
cmp
iret
lahf
jmp
mov
aas
mov
ss
outs
mov
popf
mov
pusha
fisttp
aas
add
fdiv
pop
js
cmp
xor
inc
jecxz
mov
mov
ret
loop
pop
cmp
leave
mov
(bad)
hlt
test
(bad)
add
fnstsw
movs
data16
gs
mov
lds
xor
cmp
sub
ret
dec
rcr
inc
imul
dec
xchg
sub
sbb
xor
shr
dec
jno
stos
push
and
(bad)
push
movs
repz
mov
retf
jge
imul
inc
jl
or
or
jecxz
jg
cmp
push
in
pop
in
sub
xor
icebp
out
lahf
mov
xchg
push
sub
mov
xor
jb
push
lods
xchg
imul
push
xabort
dec
add
add
mov
stc
fisttp
in
inc
movs
les
mov
adc
xlat
and
aam
rcl
lods
cli
cli
sbb
mov
adc
jb
pop
sbb
stc
popa
scas
mov
sub
jle
test
out
mov
sub
push
in
(bad)
js
hlt
out
retf
retf
sub
push
(bad)
fidiv
jno
mov
ffreep
sbb
cli
or
mov
add
fild
das
imul
and
call
inc
cld
sub
dec
(bad)
stos
xor
inc
sahf
cdq
mov
daa
cmp
pop
aas
pop
dec
xlat
cmp
je
sar
(bad)
sub
in
push
pop
daa
cmp
(bad)
mov
cli
rol
sub
jae
stos
push
or
push
or
jbe
or
mov
mov
jge
jl
dec
cwde
or
out
push
xchg
push
cmp
sti
ja
xchg
popf
pop
xor
sbb
mov
sub
xor
and
inc
ret
shl
add
test
iret
cmps
inc
cmp
ret
dec
cmps
and
push
and
(bad)
rcr
add
jmp
cmp
addr16
push
std
out
ret
lods
imul
or
push
sbb
mov
popa
mov
hlt
jge
and
cwde
adc
imul
not
jmp
out
in
xor
pusha
ds
jnp
icebp
mov
push
xor
(bad)
jae
sahf
dec
retf
fsub
repnz
mov
cmp
ret
sbb
xor
sub
xchg
push
adc
jae
mov
stos
push
rol
popa
cmp
pop
lea
add
mov
pop
int3
movs
add
aas
leave
cmp
sbb
inc
test
adc
cmp
or
push
and
out
mov
cmp
sub
xor
out
cmp
cwde
xchg
and
jno
popf
iret
mov
mov
iret
cmp
ss
lahf
xor
call
out
sub
(bad)
cld
gs
push
(bad)
(bad)
loop
hlt
push
rcr
fs
in
inc
(bad)
dec
int
(bad)
jl
loop
jnp
das
xchg
call
adc
pop
imul
syscall
mov
mov
pop
adc
jle
push
add
addr16
inc
pop
arpl
cwde
leave
adc
mov
int3
dec
icebp
adc
push
int3
loopne
in
inc
dec
lds
ficomp
sub
sub
mov
sub
jecxz
mov
repz
adc
das
addr16
jnp
adc
inc
mov
leave
cli
jmp
sar
int3
dec
jge
movs
jg
fsubr
inc
mov
pop
push
and
cmp
cmp
mov
pop
retf
mov
or
ss
call
(bad)
cld
inc
pop
dec
mov
and
lock
xchg
mov
and
out
int
sub
sub
out
test
xor
sub
cmp
mov
pushf
jbe
int3
add
adc
stos
rol
loope
lds
push
pop
mov
mov
retf
pop
mov
imul
fiadd
pop
push
jge
mov
inc
jb
jge
cmp
push
test
mov
icebp
rep
fidiv
jge
jo
fs
mov
sbb
jmp
and
(bad)
jmp
pop
mov
fwait
and
adc
adc
xchg
leave
and
pop
inc
mov
test
movs
push
retf
shl
push
ins
rcr
rcr
sub
(bad)
fimul
jmp
jecxz
sub
jl
out
push
pop
fwait
shl
fistp
mov
xchg
loope
scas
stos
push
mov
inc
mov
xchg
stc
adc
add
outs
push
jle
dec
(bad)
imul
addr16
addr16
fbstp
out
sbb
sbb
aaa
xor
jge
mov
sub
sub
jmp
in
or
loope
or
fcmovne
je
push
imul
pop
imul
or
std
mov
aas
fild
pop
inc
xchg
push
mov
inc
test
test
aas
aas
mov
dec
pop
mov
xlat
stc
aaa
out
xchg
sub
es
pop
cwde
dec
mov
(bad)
cmp
pop
js
dec
inc
hlt
push
cdq
ror
jmp
xor
xchg
pop
jg
iret
sbb
sbb
je
jp
movs
dec
arpl
inc
ficomp
int
mov
mov
sub
cmp
cs
imul
push
add
lods
les
pop
ret
retf
pop
mov
cmp
das
fistp
(bad)
fist
pop
pop
sbb
jmp
xchg
mov
pop
mov
stos
shl
mov
ins
pop
and
cli
fwait
mov
inc
loope
call
pushf
repnz
out
and
out
imul
push
pop
pop
scas
mov
pop
mov
retf
scas
xor
arpl
je
xchg
push
xchg
int
or
ja
mov
imul
sbb
cmc
repnz
mov
retf
lea
int
icebp
jno
ins
push
out
sub
stos
shl
or
ret
fucomp
sti
xchg
and
(bad)
sub
cmps
jl
call
dec
sub
imul
push
lods
lods
movs
leave
lock
ss
xchg
adc
icebp
inc
ds
repnz
jl
(bad)
std
or
pop
xor
in
adc
stos
call
(bad)
sub
mov
mov
rol
sub
mov
and
aas
mov
scas
(bad)
sar
cmp
lds
sar
adc
lds
(bad)
test
jle
fst
xchg
hlt
sub
mov
ja
lods
rol
(bad)
aad
hlt
test
xchg
sub
rol
push
or
es
adc
or
popa
push
push
repnz
cld
rcl
mov
pop
push
push
mov
(bad)
pop
adc
dec
fadd
adc
std
xlat
int3
pop
sbb
sbb
ds
cmp
pop
fs
sub
sub
sbb
(bad)
lahf
and
or
jns
pop
pusha
pusha
test
pop
xlat
inc
repnz
sub
ret
gs
in
call
dec
ret
je
inc
push
(bad)
dec
jl
fwait
int3
nop
jne
inc
pop
pop
cmp
inc
sti
jle
add
inc
pop
adc
jmp
(bad)
les
pop
retf
in
sbb
push
sbb
sbb
(bad)
aas
add
repnz
mov
push
sbb
(bad)
xor
repz
xchg
dec
push
in
movntq
out
cmp
xchg
sbb
sub
lds
cmp
pop
mov
into
movs
add
jne
stos
fcmovbe
sub
xor
xor
jno
das
scas
pop
js
repz
daa
das
test
(bad)
lahf
or
sti
nop
aad
int3
jg
leave
dec
jge
in
and
push
cmc
xor
repz
sub
(bad)
cmc
test
lahf
mov
xor
ds
sbb
test
bound
addr16
lahf
call
or
out
lods
retf
pop
mov
jnp
gs
adc
icebp
scas
push
mov
call
sbb
sbb
fwait
mov
dec
and
movs
sbb
lods
inc
xchg
sbb
pusha
jb
cmp
es
cmps
shl
xchg
and
repz
cld
and
fidivr
cmps
mov
pusha
mov
or
fst
into
gs
cld
enter
in
repnz
int
mov
mov
mov
pop
ret
mov
or
fcomp
jge
jecxz
sub
xor
or
popf
xor
pop
xchg
add
mov
retf
sbb
inc
jmp
pop
fs
pop
dec
into
clc
jle
ror
ss
(bad)
(bad)
push
ret
inc
test
add
fistp
push
loope
aaa
sbb
mov
or
scas
xor
ins
mov
dec
adc
xor
jnp
push
scas
aam
pop
xor
push
(bad)
fs
jecxz
pushf
xor
icebp
add
retf
mov
sub
ss
movs
outs
jmp
es
jmp
out
dec
push
test
jae
xor
inc
leave
add
sbb
dec
nop
fistp
ret
je
mov
jo
push
dec
pop
pop
pop
loopne
mov
ret
aaa
call
fild
xchg
lds
jl
(bad)
lahf
pop
stc
int3
test
add
retf
enter
jp
ins
mov
fdivr
out
xor
xor
loop
ins
out
repz
jnp
sub
sub
adc
mov
inc
lock
sub
pop
mov
retf
out
rcr
xor
mov
xchg
neg
test
dec
jp
jg
rcr
loopne
xchg
neg
into
mov
stos
add
dec
rol
xor
pushf
mov
mov
mov
dec
xor
fstp
aaa
addr16
and
cmp
stos
movs
pop
(bad)
fiadd
push
out
fidivr
repnz
fcomp
(bad)
mov
cmp
push
xchg
xor
nop
and
pop
dec
and
push
ins
int3
and
pop
dec
mov
retf
sbb
sub
jmp
in
adc
jae
cmps
sub
nop
cmp
xchg
xchg
cmps
and
inc
jecxz
inc
mov
daa
adc
or
in
dec
lods
mov
loope
xor
or
lds
xchg
xor
add
jno
call
push
popa
mov
outs
push
and
xor
mov
sub
scas
in
mov
lods
cmp
mov
jmp
dec
cs
fucomi
scas
or
xchg
mov
dec
cmp
sub
push
sub
call
add
mov
scas
fadd
adc
dec
mov
xor
fldenv
imul
cld
daa
push
inc
jecxz
sub
and
fimul
add
mov
rcr
push
enter
iret
adc
clc
jmp
push
xchg
push
lahf
(bad)
sub
mov
xchg
loop
xchg
or
into
pop
jns
mov
ret
sahf
fwait
es
sbb
clc
jle
out
fstp
cmps
inc
dec
adc
icebp
adc
inc
xor
xchg
xchg
out
push
adc
adc
mul
or
sub
jnp
ins
je
enter
mov
leave
push
iret
sar
or
adc
cmp
adc
pop
push
int3
adc
adc
xchg
cmc
cmc
adc
jle
arpl
or
and
add
mov
and
mov
or
and
(bad)
inc
adc
adc
and
add
dec
daa
cwde
(bad)
sub
mov
adc
loope
frstor
jne
inc
shr
call
test
dec
jno
mov
test
and
xchg
sbb
jae
test
int
inc
pushf
lods
pushf
shr
or
fsubr
push
or
mov
pop
xor
daa
pop
bound
jbe
(bad)
and
test
dec
loop
jecxz
push
popf
ds
dec
xchg
add
dec
in
adc
dec
mov
sar
push
pop
jg
jmp
jae
scas
(bad)
mov
sahf
xchg
std
inc
nop
and
jae
fdivr
in
adc
inc
mov
(bad)
fyl2xp1
outs
mov
xchg
out
in
mov
push
test
ja
jg
xchg
dec
xor
adc
dec
cmp
mov
add
dec
xor
cmp
push
sub
jae
imul
cs
jno
loope
push
out
aam
aam
leave
add
xor
aad
lock
out
jo
sub
je
ins
push
mov
push
nop
repnz
loope
mov
cmps
mov
jno
fimul
(bad)
push
xor
(bad)
fprem1
xor
push
les
ss
mov
repnz
rcr
test
xchg
scas
imul
xchg
adc
pop
inc
jmp
mov
jb
(bad)
sub
pop
fisttp
xchg
and
xor
inc
add
cmp
sub
nop
xchg
sub
mov
adc
stos
fcomp
dec
add
xchg
sbb
push
cld
fistp
inc
outs
pop
rcr
adc
push
ror
mov
xchg
push
pushf
cmp
adc
(bad)
scas
and
cmp
add
push
cwde
mov
loope
ja
and
and
push
jp
fidivr
xchg
adc
cwde
test
pop
mov
or
cmp
xor
xor
cmp
dec
or
mov
fs
sbb
push
jg
jae
stc
push
icebp
push
enter
enter
cwde
sbb
dec
cmp
in
mov
hlt
jns
cmp
sub
not
fcom
xor
jmp
cmc
adc
cmps
test
inc
add
scas
lods
mov
and
popa
jo
rcr
data16
das
mov
or
jns
pusha
xor
or
jl
leave
js
stos
xchg
xchg
xor
xchg
into
jo
cmp
pop
fs
ins
cmc
jp
push
jb
fnstenv
xchg
aaa
xchg
fwait
in
pop
inc
pop
sar
popa
fs
(bad)
into
imul
popa
inc
jmp
adc
mov
push
mov
ss
mov
pop
shr
xchg
pop
add
cli
(bad)
cmp
in
xor
or
sbb
push
call
and
xor
mov
retf
adc
test
cmp
mov
push
inc
sub
cwde
xor
jge
mov
rcl
xor
dec
mov
adc
das
stc
imul
inc
mov
mov
bound
xor
icebp
fld
mov
adc
xor
lods
cmps
stc
js
mov
aam
test
sub
(bad)
jge
cmp
in
and
inc
rcl
int
es
sub
or
cwde
int
loope
jno
jb
(bad)
cmp
cld
mov
xchg
sub
xor
in
cmp
je
iret
popf
push
jg
mov
xor
out
addr16
sbb
lock
test
sahf
shr
ret
into
jns
pop
and
jae
shl
ins
jecxz
jle
jl
sub
and
imul
mov
push
pop
inc
cmp
cmp
mov
sub
ins
lods
(bad)
mov
pop
and
popa
xchg
retf
pop
inc
mov
dec
in
and
xor
mov
pop
arpl
jmp
cmp
ret
push
das
(bad)
out
fcmovnu
out
hlt
cmp
xor
mov
inc
icebp
in
rol
ror
sbb
stc
addr16
and
hlt
mov
xor
xor
push
dec
pop
retf
loope
pusha
scas
xchg
mov
pop
rcl
(bad)
cwde
retf
(bad)
das
cld
aam
inc
push
bound
push
mov
rep
mov
add
adc
pop
or
mov
mov
sbb
adc
popf
adc
jo
data16
imul
sub
into
adc
jo
dec
clc
adc
nop
push
sub
aaa
inc
rcr
cmp
and
or
(bad)
enter
sar
pop
or
sahf
mov
and
xchg
adc
xlat
inc
and
cmc
xor
mov
cmp
test
or
push
imul
sbb
pop
sbb
inc
es
arpl
dec
add
or
push
sub
enter
test
xlat
aas
sbb
cmp
(bad)
cli
mov
or
scas
inc
xchg
inc
xor
je
adc
clc
pop
push
or
mov
dec
lods
outs
repnz
cmp
cmp
test
dec
jmp
push
xchg
lea
lahf
xchg
repnz
sub
and
xor
xchg
mov
and
lds
psubsw
fcomi
dec
int3
xchg
call
cdq
(bad)
cwde
cdq
scas
add
and
sti
fs
inc
mov
dec
xchg
fwait
push
sub
mov
push
push
jb
imul
mov
pop
pop
or
sahf
add
popa
repz
outs
jae
dec
adc
sub
repz
jl
cmp
loope
xor
js
imul
dec
icebp
test
or
sbb
lea
pop
jp
out
inc
fist
sbb
sub
mov
ins
js
daa
xchg
or
ja
ss
mov
mov
pop
jp
jae
cmc
cld
xor
fadd
test
rol
add
push
pop
(bad)
cdq
daa
pop
and
jmp
xlat
add
mov
cmps
call
ss
scas
das
xchg
out
pop
(bad)
adc
mov
loopne
mov
push
inc
push
icebp
out
cld
nop
and
call
xchg
daa
cmp
or
xchg
gs
test
push
cmc
aas
mov
adc
sbb
jno
push
cmps
je
pushf
call
popf
sub
pop
lea
sub
leave
stc
aaa
sub
ficom
add
lods
mov
lahf
mov
mov
mov
jp
cwde
or
sbb
data16
jmp
cmp
add
mov
jg
mov
les
and
mov
fmul
retf
and
mov
and
out
jmp
push
mov
loopne
xchg
push
mov
xchg
aas
ss
rcl
dec
ror
aad
rcl
xor
mov
pop
daa
div
push
arpl
lahf
jne
lods
mov
fidiv
pop
repnz
push
clc
test
jmp
push
add
add
sub
add
fstp
in
aad
cmp
test
jb
movs
bound
stc
inc
dec
xchg
ror
loopne
mov
or
sbb
push
mov
sti
pushf
xchg
mov
cmps
sbb
jo
adc
sub
xor
stos
out
mov
mov
jmp
mov
cmp
out
or
mov
sub
sbb
xchg
icebp
push
xor
push
in
xor
sub
jmp
test
mov
jnp
or
mov
xchg
cmp
mov
scas
sbb
in
add
in
in
out
mov
add
push
jp
and
idiv
jb
jmp
sbb
jo
lds
retf
and
add
out
fsubr
out
mov
push
ret
xlat
or
mov
pushf
xor
ffree
out
jmp
and
xchg
adc
or
cld
cwde
je
jge
dec
ud2
fadd
out
push
and
jo
aas
xchg
and
mov
or
lahf
clc
mov
inc
loopne
sbb
xchg
or
stos
or
push
shl
ja
test
data16
fcom
cwde
ja
add
cvtps2pi
inc
mov
push
mov
mov
ss
lds
jnp
sbb
or
cmp
jge
xchg
(bad)
into
and
iret
sbb
add
call
xor
sahf
jg
dec
xchg
pop
pusha
adc
jge
fadd
arpl
jecxz
and
mov
dec
lock
xchg
cmp
push
jmp
leave
(bad)
out
hlt
aad
leave
mov
ret
ret
pop
es
dec
nop
push
cs
int3
dec
iret
scas
js
loope
dec
bound
lds
xchg
adc
(bad)
jmp
fist
in
push
jne
xchg
scas
test
fidiv
push
adc
retf
and
mov
fwait
cmp
lods
sbb
aam
add
cli
imul
stos
mov
repz
mov
outs
sbb
mov
bswap
outs
mov
into
lahf
in
int
pop
xchg
test
mov
gs
cmp
fwait
clc
lds
stos
push
in
xchg
cmp
jo
enter
sbb
cmp
xchg
aam
adc
adc
aam
hlt
xchg
jmp
ja
xchg
(bad)
pop
or
mov
dec
jp
icebp
pop
mov
ror
and
sbb
and
std
add
nop
inc
mov
aad
mov
and
push
sar
jmp
aad
clc
ds
shl
xlat
sbb
sbb
int
movs
and
xchg
fld
or
imul
lods
push
mov
clc
jmp
add
lods
pusha
loopne
les
xor
js
dec
mov
nop
cmp
fcomp
ja
inc
jbe
cmp
ret
gs
hlt
cmps
cwde
adc
cli
loop
cmp
jl
sub
push
jmp
mov
pop
xchg
fs
inc
out
inc
cmp
mov
fst
test
xchg
push
pop
imul
inc
ins
pop
xlat
inc
push
call
(bad)
pop
or
inc
sub
xchg
bound
stos
xchg
repz
mov
movs
pusha
mov
sub
push
ror
fimul
ror
(bad)
enter
stc
in
ins
test
pop
mov
cmp
push
jg
call
jle
hlt
pop
movs
jne
xchg
loopne
repz
rol
mov
ficom
jecxz
pop
daa
call
adc
mov
stos
out
pusha
out
fist
into
inc
push
jnp
mov
dec
(bad)
movs
or
inc
inc
add
mov
shl
jbe
pop
dec
imul
mov
scas
jae
mov
add
jecxz
sub
pop
or
mov
stc
push
push
cmp
dec
xor
sbb
mov
push
xchg
sub
int3
dec
or
fcmovb
cli
add
cmp
scas
xor
fadd
ret
pushf
inc
add
arpl
test
fisubr
fsub
cmp
retf
cmp
test
das
xchg
fwait
xchg
lahf
cli
test
jb
pop
clc
mov
jmp
adc
scas
call
xchg
(bad)
mov
jmp
push
not
daa
push
cmps
out
and
xchg
xchg
sahf
sbb
ds
out
bound
adc
(bad)
or
fucomi
daa
push
xchg
dec
enter
sbb
xchg
pop
icebp
cwde
ins
fs
xchg
mov
ss
mov
cld
div
aad
or
inc
jmp
dec
and
aad
shl
pop
inc
(bad)
in
cmp
jmp
mov
or
fisttp
push
test
nop
hlt
or
xchg
sub
fnstsw
test
retf
scas
push
cmp
mov
icebp
sub
test
retf
vpcmpeqd
fadd
lock
or
movs
imul
sub
push
jl
push
xchg
(bad)
gs
xchg
movs
or
fs
dec
int3
jge
sub
sbb
ja
fsubr
push
xchg
dec
outs
arpl
adc
frstor
inc
stos
ret
cs
in
idiv
pusha
in
in
pop
mov
stos
test
sti
ret
inc
loopne
loope
and
loope
add
pop
inc
mov
sbb
call
pop
sbb
or
call
xor
xchg
jbe
sbb
mov
mov
mov
jns
in
fs
daa
mov
loope
mov
mov
dec
call
jb
mov
mov
sbb
dec
mov
xor
add
icebp
push
xor
cdq
pop
dec
rcr
test
(bad)
jg
cli
sub
jns
hlt
mov
xchg
xlat
push
and
jge
sar
push
out
inc
loopne
lock
jne
mov
fs
mov
xor
jge
sub
or
shl
and
data16
ret
into
or
in
push
lods
jae
ret
sub
jg
jo
mov
xor
hlt
sbb
jae
adc
dec
movs
jl
add
mov
inc
cli
sbb
call
mov
jg
retf
inc
repnz
retf
mov
aaa
xchg
fadd
in
add
das
loopne
in
add
sbb
jne
stos
cs
pop
pop
add
jno
dec
xor
xchg
mov
jg
mov
adc
pushf
fs
in
mov
add
pop
gs
div
add
cld
inc
sub
fld
jbe
mov
(bad)
jno
jo
xchg
dec
popf
and
neg
out
ficom
ins
mov
or
push
dec
ficom
pop
and
pop
jmp
pop
push
sub
pop
xor
dec
cmp
sub
scas
and
ja
cmps
jmp
mov
retf
stos
mov
pusha
push
dec
cmp
pushf
cmp
cld
outs
(bad)
repz
jnp
or
arpl
inc
mov
mov
push
stos
ins
pop
push
xchg
mov
jno
clc
dec
add
pop
jno
xchg
xchg
or
addr16
jmp
aaa
outs
fisttp
mov
jmp
dec
dec
sbb
(bad)
pop
cs
mov
jmp
fwait
mov
retf
sahf
jo
adc
call
jg
pop
mov
(bad)
mov
xchg
lahf
mov
jge
jmp
clc
mov
enter
ss
ret
pop
xlat
les
adc
pop
pop
and
jbe
push
pop
test
mov
mov
dec
sub
pop
test
xchg
fisttp
addr16
xchg
jle
fadd
jecxz
outs
test
int
popa
stc
cmps
and
mov
lea
and
xchg
mov
fsubrp
adc
sub
daa
(bad)
lods
pop
shl
jo
inc
imul
out
bnd
cs
sbb
mov
push
mov
shr
dec
sbb
jmp
leave
cmp
push
xor
inc
mov
adc
sbb
popa
stos
jnp
xchg
inc
sbb
test
jmp
in
jle
call
ror
stos
adc
sbb
xor
fdivp
mov
add
adc
not
addr16
loop
popf
sbb
outs
in
out
xor
sub
pop
aaa
inc
sub
int3
sub
mov
loope
mov
push
xchg
ds
mov
test
popf
out
popf
cld
(bad)
sbb
retf
push
aas
outs
loop
scas
test
call
mov
out
imul
jecxz
or
cmp
pop
adc
(bad)
icebp
push
pusha
cmp
aaa
xor
jp
stc
xchg
ja
cdq
xor
xchg
xchg
inc
sub
ret
rcl
mov
pop
call
jmp
pop
(bad)
(bad)
push
aad
push
ds
or
mov
lahf
xor
xchg
fbstp
push
cli
sub
mov
inc
push
jmp
cwde
xor
adc
fcmove
test
fsubr
std
push
cmp
sbb
in
cwde
mov
movs
icebp
enter
or
mov
add
mov
sbb
push
xor
sbb
pop
add
fild
or
ss
pop
fcmovu
pop
int
sti
in
fisttp
push
aas
aam
dec
mov
inc
(bad)
in
dec
rcl
(bad)
push
jno
adc
push
das
es
sub
out
scas
xor
addr16
in
mov
xchg
adc
jo
sub
inc
fidivr
mov
sub
dec
sub
xor
shl
xchg
mov
iret
icebp
imul
addr16
dec
mov
push
fs
mov
inc
sub
and
push
mov
and
popf
mov
(bad)
dec
xchg
cmp
stc
jge
imul
(bad)
test
jne
cmp
lods
hlt
xor
push
clc
and
int
sahf
cmc
std
dec
loop
push
xor
mov
sub
sbb
ror
xlat
(bad)
sub
std
sub
or
jno
fild
fmul
imul
mov
lock
aaa
in
shl
jmp
js
fldenv
mov
add
pop
loop
jns
inc
outs
push
div
iret
sbb
addr16
daa
push
xlat
or
xchg
imul
or
xchg
cmp
repnz
scas
cmps
jnp
loope
push
stos
in
xor
or
xor
xchg
xchg
jg
scas
adc
scas
mov
js
(bad)
ror
mov
sub
in
enter
test
xchg
push
or
test
aas
jecxz
std
repz
mov
es
and
and
jnp
add
mov
push
jl
sub
adc
cmp
mov
push
es
test
add
pop
jmp
call
jno
jp
(bad)
jo
fst
jb
sbb
(bad)
dec
push
bound
fist
xchg
adc
push
scas
cmp
(bad)
aam
mov
xor
push
jnp
xchg
mov
int
inc
fsubr
add
hlt
adc
jecxz
sahf
movs
rcr
xor
inc
loop
mov
lea
jmp
js
popf
jge
jle
cmp
rcl
call
sub
cmp
jmp
and
add
pop
aad
dec
push
or
dec
fidivr
mov
(bad)
pop
push
bound
lods
sbb
cmp
fnstenv
call
xlat
push
sub
xor
(bad)
cmp
pushf
inc
xor
mov
pop
xor
sbb
xor
jae
daa
fidiv
ffree
frstor
leave
scas
or
mov
dec
js
inc
jbe
jmp
pop
int
add
or
mov
enter
sahf
pop
push
sub
xor
imul
xchg
pop
ds
adc
push
ja
loope
jge
test
inc
jae
cmps
mov
sub
and
in
mov
in
cwde
inc
sbb
sbb
call
aad
cld
ds
and
std
jbe
test
mov
jae
push
adc
ds
rol
fcmovnbe
push
and
sbb
(bad)
sbb
aas
into
mov
fcmovnbe
push
lods
test
into
ds
(bad)
adc
mov
mov
xchg
and
jo
or
cmps
ret
push
xor
inc
addr16
call
addr16
sti
mov
fnstenv
xchg
imul
fwait
rcl
rcr
push
inc
inc
jp
xchg
or
cmc
sbb
pusha
push
xchg
sbb
cmps
mov
sbb
ficomp
push
data16
imul
out
ins
mov
jae
lods
mov
aas
mov
(bad)
lahf
out
int
rol
adc
jmp
xor
int
lods
sbb
imul
dec
daa
sub
into
stos
or
jg
push
xor
aad
cmp
nop
jne
(bad)
xchg
ret
cmp
mov
cmc
xchg
repz
stos
(bad)
stc
ja
xchg
dec
out
mov
xlat
retf
cmp
cmp
jmp
retf
idiv
dec
idiv
xchg
mov
adc
lods
push
and
sbb
dec
imul
jae
push
pop
std
lods
es
inc
retf
pop
push
fisub
shl
xchg
out
adc
mov
push
shl
jg
stos
jno
dec
addr16
pop
sbb
mov
imul
das
int
mov
mov
xchg
pop
and
pop
dec
add
push
cmp
cmp
(bad)
xchg
jmp
out
sbb
jb
(bad)
or
out
loop
jns
or
mov
dec
jo
pushf
jle
mov
xlat
or
lods
cmp
inc
dec
loope
out
pop
add
push
test
pop
iret
clc
in
sbb
pusha
leave
cdq
(bad)
in
adc
sub
mov
inc
xchg
ror
mov
pop
inc
iret
sbb
cld
and
cmp
pop
dec
imul
fs
clc
stos
addr16
(bad)
popf
xlat
lahf
jle
rol
dec
add
dec
sbb
and
or
aas
pop
fsubr
movs
addr16
jle
fsub
xor
fmul
ret
cli
add
adc
fcmove
sub
sub
mov
fwait
ss
cmp
es
mov
sbb
call
inc
fsubr
jp
xchg
retf
aad
mov
bound
dec
mov
call
into
sbb
jns
bnd
inc
add
cld
sub
fstp
bound
cwde
movs
fcomp
adc
xchg
lahf
push
pop
cmp
addr16
xor
jns
pop
add
cmp
(bad)
ins
adc
cmp
mov
push
cmp
call
sti
and
xchg
mov
mov
xchg
js
data16
cmp
aas
cmp
aaa
inc
ret
scas
fdiv
push
xchg
add
sbb
mov
cli
push
mov
inc
pusha
adc
leave
imul
jne
shl
cmps
inc
shl
stc
cli
and
adc
dec
xor
ficomp
ds
push
sti
test
ror
mov
and
sahf
sub
cld
sahf
cmp
and
lods
pop
xchg
outs
cld
in
lods
sub
pop
push
idiv
outs
mov
push
mov
fs
sbb
push
test
cmps
pop
mov
fidivr
shl
inc
jb
add
mov
call
inc
retf
adc
outs
lods
std
jne
lods
test
test
popa
or
sahf
(bad)
into
int
jne
in
or
fiadd
and
mov
push
in
sahf
and
repz
dec
pop
fidivr
xor
mov
test
xchg
lods
cmc
mov
lods
es
daa
fs
jno
mov
out
repz
pop
mov
sbb
outs
push
(bad)
or
int3
sub
or
and
xor
cwde
push
nop
pop
or
aas
sbb
test
scas
dec
mov
push
add
jle
popf
pop
jbe
mov
mov
add
xor
push
inc
(bad)
mov
test
daa
loopne
xlat
or
das
jb
and
stos
jne
cmps
pop
in
(bad)
repnz
(bad)
arpl
or
adc
or
mov
ja
repz
aas
mov
sbb
jp
clc
das
(bad)
cmp
aas
fcom
fisubr
mov
cmp
jg
mov
int3
ds
ret
dec
ds
mov
test
push
pop
xchg
cmp
(bad)
xor
fs
or
and
clc
xchg
shr
icebp
aas
aam
sub
sub
rol
sbb
inc
cmp
pop
repnz
mov
icebp
xor
pop
clc
pop
jg
pusha
aad
ss
pop
inc
inc
je
inc
or
and
std
jl
mov
mov
sub
cmc
xchg
loope
inc
dec
rcl
lahf
mov
in
xchg
and
xchg
and
ret
xor
xchg
pop
sbb
adc
ss
pushf
push
outs
push
lods
cwde
inc
(bad)
adc
pop
cmps
dec
sti
std
sbb
nop
inc
sbb
jbe
rcl
js
sahf
test
jae
mov
sbb
xchg
out
stos
jno
bound
jl
xchg
adc
sub
test
jmp
mov
add
cmps
mov
rcr
ret
mov
outs
loopne
mov
(bad)
fst
pop
movs
(bad)
mov
add
icebp
pop
add
pop
leave
js
add
push
lock
into
dec
mov
scas
mov
jo
lods
inc
cwde
push
nop
mov
outs
aas
scas
mov
sbb
mov
lea
mov
imul
int
push
ret
dec
cmp
addr16
in
pop
inc
cmc
jb
mov
test
repnz
rcr
mov
cmp
jle
in
and
xor
outs
xor
(bad)
rol
mov
push
xor
mov
(bad)
in
lock
stos
sub
xchg
sbb
adc
test
pushf
cs
test
xchg
cmp
cmps
cmp
lahf
pusha
pop
jmp
movs
and
mov
push
clc
adc
sbb
mov
ret
or
inc
mov
mov
in
test
aad
imul
xor
scas
repnz
push
es
dec
(bad)
push
ret
mov
push
xor
xlat
sub
out
and
jmp
dec
in
jo
test
xchg
adc
mov
clc
in
cs
daa
call
sub
or
paddd
inc
stos
add
lea
mov
mov
pop
mov
xchg
call
or
sti
xchg
imul
aaa
xchg
adc
out
adc
fnstsw
out
shr
ins
(bad)
icebp
mov
ja
(bad)
les
push
repz
mov
popa
adc
neg
pop
xor
dec
mov
jo
sbb
js
sub
retf
xor
dec
cli
mov
jne
dec
lahf
iret
inc
xor
pushf
xchg
mov
add
adc
fs
aaa
pop
mov
mov
fst
ret
gs
push
add
cmp
cdq
clc
(bad)
neg
clc
or
dec
fmulp
js
jmp
clc
add
pushf
adc
cdq
je
movs
ins
inc
dec
xor
sub
jae
(bad)
(bad)
out
enter
jl
stc
jle
test
adc
add
mov
iret
fxch
out
adc
cmp
jns
jmp
fisubr
lds
ds
in
inc
das
pop
aas
adc
sub
(bad)
jbe
(bad)
fsubr
jmp
cmps
cmp
hlt
mov
inc
push
push
(bad)
jp
xchg
jae
call
ror
(bad)
sub
ja
pop
mov
push
bound
outs
nop
ror
xchg
cmps
push
xor
add
xchg
inc
nop
dec
add
fwait
mov
jno
pop
mov
xchg
int
cmp
add
mov
stos
outs
xlat
and
test
and
xchg
jae
(bad)
xchg
inc
enter
or
xchg
sbb
adc
lods
xchg
dec
jl
mov
dec
push
push
pop
aam
sbb
loopne
add
mov
mov
push
add
(bad)
outs
mov
sti
cs
push
pop
xor
shl
inc
adc
mov
aaa
mov
sbb
popa
dec
or
jnp
mov
aad
test
bound
test
inc
cmps
sub
rcl
mov
icebp
inc
add
xchg
adc
int3
push
out
int
jle
cmp
gs
pop
sub
jne
mov
aas
jge
or
loopne
push
adc
fsubr
in
cmp
pop
inc
mov
dec
sub
cmp
push
xchg
sbb
int
lods
clc
xchg
lds
mul
mov
inc
ins
pop
push
pop
lds
push
addr16
lock
or
xor
or
or
add
pop
pop
aaa
dec
inc
shr
xcrypt-cbc
cmps
push
outs
ds
jle
dec
(bad)
mov
(bad)
in
push
mov
mov
std
jecxz
xchg
xor
fst
pop
jmp
ret
or
mov
movs
imul
scas
imul
and
push
or
mov
push
push
cdq
jo
stc
(bad)
loopne
mov
call
mov
je
scas
rcl
repz
xchg
mov
sbb
jmp
xlat
dec
xor
dec
push
stc
xor
rol
inc
cmp
iret
sub
test
or
xor
mov
adc
cld
imul
fs
push
mov
scas
xor
pop
dec
pop
sub
add
mov
test
push
dec
data16
sub
sub
and
lods
inc
dec
das
pop
sub
pop
lea
pop
fsub
xor
cmps
pop
imul
shl
call
cmp
bound
inc
mov
cdq
jl
sahf
in
xor
out
push
sbb
or
scas
data16
(bad)
sbb
call
mov
jns
sub
dec
fwait
mov
xor
or
sub
and
(bad)
shl
cmps
es
in
aad
or
ret
shl
xchg
es
bound
adc
outs
lea
leave
pop
xchg
(bad)
dec
push
push
(bad)
xor
mov
repz
add
lahf
xor
shl
ss
xchg
cmp
or
add
adc
pusha
dec
or
mov
push
fstp
popa
cmp
retf
jge
and
cli
xor
fmul
lds
sbb
xchg
inc
js
xor
popf
popf
js
mov
nop
out
cmps
sar
sti
int
dec
fadd
jmp
(bad)
(bad)
in
mov
xor
in
popa
test
dec
lods
add
jb
sub
pop
idiv
sub
ror
or
sub
mov
pusha
nop
out
cmp
bound
xchg
sbb
xchg
dec
shl
inc
jo
cdq
add
pop
inc
fucomi
sar
(bad)
jmp
outs
mov
sub
jmp
cmp
call
push
and
mov
xchg
and
dec
gs
lock
mov
dec
sti
ja
leave
mov
push
xor
repnz
jle
inc
or
xchg
leave
push
loop
sbb
mov
dec
stos
cmp
dec
daa
sub
adc
and
cmp
xor
fdivr
mov
mov
ss
(bad)
sbb
(bad)
rcr
cld
iret
lea
push
imul
sbb
das
inc
add
pop
mov
xchg
mov
or
sti
addr16
scas
pop
jno
push
adc
ins
xor
add
into
mov
stos
xor
addr16
mov
or
imul
test
push
jg
pop
dec
(bad)
xor
pop
pop
leave
sbb
mov
mov
dec
test
addr16
ins
sub
sub
and
cmc
mov
and
in
aaa
ins
std
sub
pop
int3
mov
lea
jno
ret
je
xor
inc
add
out
not
push
sub
stos
int3
sub
xor
(bad)
or
adc
pop
cmp
cwde
in
bts
in
push
cmp
imul
outs
lods
add
fcmove
push
push
push
clc
jno
leave
push
out
es
push
inc
scas
into
in
xor
stos
sti
into
cmp
pop
push
push
inc
sub
mov
ret
(bad)
iret
xchg
mov
arpl
lods
not
xchg
ds
shr
or
jno
xlat
sbb
jnp
cli
or
cmp
call
push
jge
jae
cmp
mov
iret
fisub
xchg
sub
xor
push
sar
pop
sbb
dec
cs
push
int
sub
mov
(bad)
push
mov
pop
scas
pop
outs
call
sbb
popf
mov
std
or
inc
ror
xchg
mov
ror
cld
int3
outs
adc
xchg
ins
mov
scas
test
out
ror
cmp
das
mov
pop
and
fild
sub
ficom
outs
(bad)
sti
cmc
pop
pop
jecxz
rol
jnp
cld
inc
iret
inc
mov
(bad)
xchg
bound
cmp
adc
inc
gs
cwde
in
adc
push
fdiv
pop
shl
mov
jle
jecxz
(bad)
xor
hlt
pop
fsubr
mov
push
daa
lds
loop
mov
sbb
or
adc
aad
mov
pop
jmp
pop
jp
ins
jb
mov
pop
mov
jae
mov
addr16
push
add
repnz
imul
in
ja
sbb
test
and
enter
out
mov
inc
push
dec
or
mov
loop
pop
push
jge
in
pushf
push
or
aaa
cmp
jbe
sub
sub
jmp
gs
mov
or
jne
jecxz
push
or
xchg
jp
dec
shl
dec
cmp
loop
outs
and
arpl
adc
jmp
arpl
jbe
xchg
fwait
loope
jbe
push
inc
js
mov
xlat
cmp
(bad)
mov
and
inc
jb
ja
jge
(bad)
sbb
xchg
std
cmp
sub
fcomp
and
jno
fidivr
adc
push
outs
fidiv
int3
and
iret
or
in
mov
repnz
push
and
bound
and
sbb
push
add
jg
add
jno
rol
lods
xchg
xchg
mov
in
stos
add
pop
add
jmp
mov
mov
mov
mov
cdq
js
xchg
(bad)
hlt
push
out
mov
xchg
or
jg
dec
fstp
dec
sbb
aam
lods
jns
adc
fst
pusha
(bad)
ja
jb
retf
int
test
not
pop
dec
fadd
mov
dec
xlat
scas
pusha
xor
mov
jno
mov
pop
imul
aad
jg
push
retf
mov
dec
mov
push
wbinvd
enter
push
add
jb
int3
mov
jns
push
dec
xchg
sbb
inc
lock
add
adc
add
aad
xchg
test
pop
mov
test
xor
add
in
dec
mov
or
dec
add
int3
data16
cli
(bad)
into
test
mov
paddusb
xchg
jmp
adc
cmp
mov
add
mov
jecxz
aad
shl
aas
push
repnz
add
cmps
mov
js
add
ss
adc
jg
xchg
outs
clc
sbb
or
fs
movs
cld
es
xchg
pushf
gs
js
(bad)
push
jle
jle
movs
lahf
clc
stc
pop
sbb
cmps
mov
sub
add
(bad)
fldenv
adc
(bad)
dec
xchg
sub
push
jmp
dec
leave
in
out
jl
sbb
pop
ins
hlt
mov
xchg
outs
cwde
xchg
sub
in
lods
adc
retf
jno
jne
fisttp
mov
test
cmp
loope
scas
rol
pop
ins
enter
adc
not
mov
loop
cwde
or
shr
jnp
jne
sbb
inc
add
xchg
inc
lea
test
jns
jp
ds
test
pop
or
push
xchg
sub
(bad)
jnp
mov
das
(bad)
pushf
cmp
stos
dec
add
mov
mov
stos
inc
pop
fist
lds
out
jge
mov
hlt
mov
test
leave
add
sti
xchg
fmul
xchg
adc
mov
fstp
mov
add
sub
out
out
cs
pop
fld
xchg
repz
int3
dec
dec
test
pop
sub
xlat
inc
lock
inc
jg
sub
das
mov
and
popf
test
lods
mov
test
es
xor
je
pushf
imul
and
imul
test
in
(bad)
dec
push
and
ror
jg
sbb
sub
dec
lock
pusha
sahf
aaa
fld
popa
sub
or
xchg
das
test
enter
cmc
pop
stc
xchg
push
stc
pop
(bad)
push
loop
add
cmp
dec
push
xor
pop
cdq
add
push
popf
aaa
mov
pop
cs
mov
add
push
dec
add
mov
mov
xor
aas
and
out
int
stos
arpl
fucomi
les
xchg
mov
outs
mov
ret
sub
int
mov
pop
jnp
jg
aam
imul
stc
stos
pop
push
mov
add
xchg
dec
mov
xor
xchg
push
bswap
cmp
add
sub
sbb
scas
pushf
and
out
push
add
daa
jp
in
ins
das
lahf
test
pusha
jg
jbe
std
fnstcw
and
in
push
imul
out
add
repnz
in
mov
pop
(bad)
pop
test
ja
inc
je
loopne
pop
mov
xor
dec
pop
scas
push
int3
sbb
lea
(bad)
jecxz
sti
fsub
retf
scas
and
xchg
aaa
div
(bad)
jns
jnp
mov
vpmacsswd
jbe
and
pushf
cs
inc
xchg
cmps
pop
cld
dec
push
div
pop
int
pop
fsub
xchg
jp
mov
(bad)
nop
mov
jb
mov
in
xchg
push
repnz
or
fcmove
push
mov
scas
push
cwde
inc
pop
xchg
jmp
ins
jb
xor
and
cs
sbb
int3
xor
pusha
mov
push
mov
xor
adc
stos
sub
xchg
xor
mov
xor
push
pop
dec
xor
inc
inc
outs
fmul
mov
sbb
fxch
sub
in
in
retf
stos
mov
scas
or
push
dec
ret
push
xlat
inc
push
shr
mov
pop
dec
push
jno
out
std
adc
loope
int3
jne
imul
sbb
lds
movs
dec
adc
nop
or
gs
in
mov
mov
cmp
mov
jns
test
xor
mov
xor
out
das
push
sub
ins
and
loop
cmp
in
clts
loopne
in
jns
shl
dec
sub
outs
lds
push
ds
or
mov
xchg
push
cli
pop
or
repz
std
scas
pop
xor
sbb
mov
int3
js
cmp
add
mov
jp
sbb
mov
fnstsw
clc
mov
lods
sbb
aam
shl
xor
movs
pop
call
(bad)
xor
stc
cmps
xchg
push
pop
sbb
pop
push
inc
mov
mov
imul
out
stos
ror
cmp
scas
and
sti
mov
sub
pop
int3
sub
pop
mov
inc
lahf
daa
mov
mov
jns
fdivr
push
sbb
jbe
jno
mov
push
(bad)
fisttp
lea
jp
scas
mov
push
(bad)
sub
cmp
call
inc
(bad)
ror
outs
fucompp
xchg
jmp
dec
loop
cmc
inc
iret
jg
mov
into
inc
cmp
loopne
ins
fnsave
adc
mov
(bad)
lahf
inc
inc
repnz
sti
xor
cdq
sahf
xchg
loope
fisttp
out
sahf
outs
pop
jge
mov
fmul
add
sbb
(bad)
(bad)
cdq
add
inc
ror
(bad)
int3
neg
leave
arpl
xor
xchg
scas
dec
mov
call
mov
lds
out
in
test
mov
fisttp
push
lds
in
(bad)
sbb
push
dec
cmc
in
or
sbb
add
imul
test
pop
int3
scas
cld
xchg
adc
mov
or
int
sar
imul
sbb
out
mov
push
ja
mov
imul
mul
xor
inc
cld
movs
rcl
mov
jp
xchg
mov
sub
jbe
cmps
mov
fild
repz
cdq
test
shl
sub
leave
mov
push
enter
push
jbe
sahf
ds
mov
repz
or
mul
or
sti
mov
js
les
xchg
pushf
retf
cmc
imul
(bad)
aad
dec
into
push
and
push
and
clc
in
hlt
xor
lods
je
sub
jb
lahf
aam
mov
in
sub
pop
sbb
mov
or
mov
cdq
int
ret
cdq
ficom
mov
sbb
ins
daa
ins
push
mov
ja
call
mov
data16
add
cmc
jns
dec
pop
dec
push
adc
or
xchg
aam
sub
xchg
jo
inc
fcom
jo
push
fistp
or
ret
sub
and
retf
jae
out
mov
aam
jne
or
dec
sbb
pop
aam
aam
clc
loopne
jmp
xchg
mov
pop
rcl
and
test
int
inc
mov
in
lods
pop
pop
mov
mov
sub
ja
or
leave
inc
test
ret
add
aad
push
gs
cld
sub
push
or
ret
xchg
sti
test
scas
push
aaa
push
push
aad
add
adc
push
add
rcl
(bad)
(bad)
push
lahf
ret
fist
sbb
or
arpl
cmp
fistp
enter
int3
aas
out
lahf
jmp
stos
sub
fmul
mov
xor
out
shl
and
out
jae
ds
xor
or
call
or
sbb
mov
adc
mov
dec
inc
sub
out
lahf
xor
or
adc
pop
adc
(bad)
pop
dec
ss
rcl
iret
push
xor
mov
addr16
mov
pop
paddusw
loope
mov
call
imul
sahf
inc
cmp
add
imul
shr
repz
push
adc
adc
inc
scas
rol
cmp
pop
pop
out
rol
mov
xor
mov
(bad)
push
fiadd
cwde
mov
cdq
jle
bound
shr
pop
shl
adc
jnp
inc
gs
pop
jnp
mov
xor
ja
adc
fnstsw
pop
mov
cli
in
loopne
sti
pop
cmp
fwait
mov
ja
(bad)
jbe
aad
xchg
inc
fs
popa
mov
addr16
xchg
stos
dec
xchg
sub
jecxz
mov
sub
in
pop
movs
ds
repz
xor
mov
inc
sbb
jo
sub
xchg
cdq
stc
mov
push
xchg
enter
push
cmps
dec
stc
dec
dec
sbb
ret
cmp
sbb
(bad)
xchg
dec
aad
jne
sbb
repnz
pusha
mov
xchg
ins
dec
scas
js
shr
popa
and
and
mov
ds
std
jmp
jle
(bad)
sub
push
and
push
bound
lea
loopne
push
enter
adc
fsubr
mov
fwait
jg
and
repnz
xchg
mov
int3
in
mov
jge
mov
retf
push
inc
dec
retf
or
dec
stc
ret
sbb
pop
add
or
pop
push
aaa
jg
sbb
rcr
daa
cmp
cld
push
popa
int
or
ins
mov
fld
mov
ror
dec
mov
cli
ja
fldcw
add
jecxz
lock
xchg
gs
loopne
mov
adc
pushf
(bad)
jmp
dec
lds
lds
test
test
out
inc
retf
(bad)
jmp
repnz
mov
xchg
inc
push
test
or
(bad)
(bad)
cld
cmp
pop
and
push
push
ins
push
mov
dec
mov
inc
push
mov
aad
out
xor
add
dec
(bad)
div
dec
push
pop
jp
iret
cmc
outs
dec
loop
sub
pop
mov
cmp
out
cmp
dec
xchg
je
fmul
cmp
lods
and
mov
into
xor
std
scas
cmps
sbb
jg
fidiv
inc
std
shl
rcl
std
nop
pop
repnz
add
dec
and
jae
or
in
sbb
jl
cmp
div
(bad)
sbb
add
cmp
pop
imul
cmp
js
sub
clc
outs
xchg
inc
xlat
jo
leave
movs
xor
lods
in
iret
and
stos
sbb
jl
sbb
pop
aad
(bad)
out
test
push
jmp
xchg
cmp
fadd
mov
xchg
mov
mov
xchg
push
les
xor
cmp
cmp
push
sbb
adc
xor
and
push
inc
gs
sub
sbb
rol
push
cmc
sar
xchg
mov
xchg
mov
jmp
cmps
adc
xchg
sub
pop
hlt
xchg
pop
sub
and
cmp
arpl
pop
push
inc
and
inc
daa
or
xchg
inc
pop
rcr
popf
scas
pop
xor
dec
push
popf
pop
pop
pushf
scas
shr
add
neg
ins
and
ret
sar
imul
aaa
push
pop
mov
mov
fmul
retf
in
inc
mov
cmc
es
xchg
xchg
aam
sub
movs
jl
retf
push
sbb
daa
add
jmp
pop
jecxz
ficom
repnz
xor
ret
fldenv
mov
push
sbb
inc
lods
jne
jae
push
sub
and
(bad)
retf
(bad)
nop
lahf
ret
and
fistp
std
sbb
mov
xlat
mov
jbe
push
dec
leave
lock
cmp
ja
add
sbb
mov
lods
(bad)
int3
inc
enter
push
rcr
xor
cmps
pop
cdq
jl
cmp
sbb
mov
push
sbb
shl
mov
call
aas
test
fs
jge
adc
xchg
and
mov
mov
in
cmc
jg
leave
or
test
pop
jg
bound
inc
dec
jle
gs
ret
mov
out
jmp
repnz
daa
xor
push
das
jg
jp
mov
mov
les
lahf
dec
and
sahf
sbb
jp
in
sti
xchg
rcl
popa
jmp
inc
and
sbb
jg
scas
xchg
sar
push
xor
pop
pushf
aam
lock
icebp
(bad)
jge
mov
mov
jnp
jge
or
fbstp
dec
aad
adc
xor
adc
pop
out
enter
lea
xor
mov
rol
add
stos
fistp
js
addr16
retf
xchg
mov
cmp
mov
jno
dec
mov
sub
cmps
shl
lods
pop
arpl
ret
into
xor
adc
adc
gs
push
dec
xor
xor
adc
outs
shl
stos
loope
mov
sar
add
sub
push
cmc
imul
mov
ja
inc
js
test
pop
xchg
push
and
data16
inc
retf
xor
push
cli
stc
push
or
mov
iret
dec
add
cmp
test
sbb
dec
in
cld
cmp
lea
sub
je
das
enter
jge
test
out
mov
hlt
push
pop
stos
push
adc
movntq
inc
inc
sbb
es
addr16
push
or
xor
ret
add
call
out
lds
aas
add
(bad)
pushf
(bad)
jle
add
mov
mov
inc
packsswb
aaa
dec
imul
scas
mov
mov
(bad)
adc
leave
jae
xchg
jg
(bad)
pop
and
xchg
fmul
sbb
inc
add
push
cld
dec
xor
xlat
rcl
push
and
pop
repnz
ss
xchg
dec
inc
push
(bad)
je
adc
pop
sbb
jmp
(bad)
jns
inc
(bad)
mov
xchg
push
stc
stos
cmp
mov
ja
xchg
jmp
mov
aad
cmp
cmp
jnp
inc
jne
jae
inc
xchg
xchg
and
jp
inc
in
push
or
pmaxub
lds
inc
cli
pop
test
sub
mov
mov
fld
pop
push
dec
push
jecxz
adc
jmp
sub
xchg
cmp
(bad)
cmp
test
cmp
mov
jmp
retf
dec
mov
mov
or
movs
clc
cmps
movs
push
ins
and
ins
stos
jmp
xchg
stos
jae
jge
push
pop
or
cmp
outs
jae
mov
and
xlat
or
cmps
sbb
aaa
sbb
int3
adc
arpl
pop
outs
inc
call
sub
cs
cmp
shl
dec
jnp
(bad)
and
out
mov
xor
add
ret
lahf
call
adc
add
pop
lods
mov
xchg
or
cdq
ins
jg
lods
xchg
dec
jno
add
(bad)
les
cld
cmp
xor
sbb
dec
rol
inc
imul
scas
out
cld
jns
push
mov
mov
dec
xchg
out
cld
jg
mov
ret
pop
jae
mov
fild
inc
les
gs
jno
xor
fwait
pop
hlt
pop
in
jecxz
fst
add
cmp
inc
inc
lahf
sub
inc
nop
push
inc
dec
clc
mov
or
sub
mov
pop
sbb
xor
bound
fstp
xchg
jl
mov
add
jecxz
push
nop
out
fldl2t
cmps
pop
fidiv
adc
pop
add
lock
mov
in
push
sti
jle
jmp
pop
repz
test
mov
jns
out
mov
xor
test
adc
fdiv
cmovo
imul
adc
dec
outs
movs
int
cs
out
push
xchg
lods
sti
aaa
lods
xchg
cwde
mov
jmp
jp
pop
mov
arpl
pushf
xchg
sbb
retf
sbb
ret
or
fmul
push
sbb
cmp
mov
jae
adc
xchg
rcl
cmps
dec
lods
jbe
dec
outs
inc
test
lods
fld
fbld
leave
jge
push
outs
punpckhbw
dec
addr16
ficom
std
xchg
inc
es
aaa
cld
dec
fcomp
jno
sub
loopne
xor
cmp
sbb
mov
dec
ss
jl
mov
mov
inc
ss
stos
inc
mov
jmp
dec
xor
ja
outs
outs
pop
test
xor
inc
rol
arpl
cmps
xchg
jecxz
mov
and
nop
xor
sub
and
arpl
dec
outs
push
loop
rcr
cld
pop
or
xor
mov
lahf
sbb
cs
inc
icebp
popf
jp
adc
mov
mov
inc
sbb
aaa
xchg
xor
fwait
jns
aad
cmps
int
ja
cmp
pop
push
out
aas
inc
or
and
xor
adc
std
jno
push
out
and
sub
mov
aam
lods
ds
aas
ins
dec
dec
movs
mov
xor
cs
add
cmps
int3
gs
ja
iret
push
dec
imul
jb
mov
shl
inc
test
xchg
pop
adc
jb
inc
mov
xchg
mov
inc
cmp
mov
mov
sub
xor
add
mov
or
adc
mov
popa
fsub
inc
adc
shl
and
dec
int3
and
icebp
daa
inc
pop
cmps
sub
sub
pusha
mov
xor
xlat
pop
inc
jbe
push
xchg
enter
sub
ds
loope
push
mov
imul
jl
add
add
inc
dec
mov
daa
int
daa
pop
dec
push
sti
push
loop
js
movzx
add
nop
imul
inc
pop
into
call
push
pop
mov
fistp
cmp
ss
daa
add
pusha
movs
jle
test
mov
mov
push
xchg
ja
rol
sbb
fst
leave
xlat
xchg
mov
js
outs
push
retf
push
test
xlat
(bad)
shl
sub
mov
inc
adc
mov
mov
test
xor
fnstsw
imul
mov
(bad)
and
xor
addr16
push
mov
daa
mov
jbe
shl
adc
(bad)
mov
stos
jo
cmps
adc
pusha
dec
jp
fbstp
and
adc
cmp
fisttp
enter
pop
cmc
sub
adc
jl
sub
xchg
sbb
jecxz
pusha
push
movs
int3
push
sti
addr16
cdq
std
xor
xchg
cwde
adc
daa
mov
jl
dec
adc
movs
xchg
inc
push
xchg
add
cmp
adc
sub
mov
sub
pop
int
in
ss
out
in
sbb
or
sbb
and
jnp
mov
call
out
test
add
dec
outs
inc
retf
test
mov
mov
adc
pop
sub
sar
dec
mov
sbb
sar
ret
in
bound
sbb
div
cld
xor
xor
das
xchg
xchg
das
mov
es
fcomp
dec
(bad)
repz
cmp
fstp
fcomp
push
push
jae
jl
fwait
into
cmp
fst
dec
push
xlat
adc
fs
adc
pop
in
aad
push
adc
sbb
inc
push
je
jecxz
xchg
mov
adc
or
sbb
mov
fild
lods
xor
daa
inc
adc
loop
call
or
ret
jno
sbb
cwde
rep
inc
xlat
ss
cmp
mov
mov
cmps
dec
cwde
xlat
jo
aad
inc
pop
mov
cmc
nop
and
les
push
pop
inc
(bad)
add
rcr
test
inc
scas
dec
sbb
pushf
jb
loope
fwait
or
arpl
jmp
rcr
ins
adc
mov
push
sub
ror
cmps
gs
adc
stos
(bad)
enter
push
fiadd
ja
stc
(bad)
xlat
fmul
cmp
btc
mov
push
jmp
sar
cmps
ret
jmp
popa
pop
dec
push
sbb
ret
ins
pop
push
pop
imul
push
call
stmxcsr
xor
xor
jecxz
repnz
add
js
aam
push
cmps
out
xchg
repnz
dec
xchg
pop
loope
adc
cdq
fmul
mov
sbb
push
in
inc
xor
sub
xor
and
mov
das
or
int
stos
pop
inc
imul
movs
lahf
test
aaa
mov
cwde
or
arpl
xchg
stos
mov
jbe
cmp
adc
cmp
xor
or
in
test
jne
adc
jne
adc
or
mov
cmps
popa
out
xchg
pop
in
xlat
lock
add
cwde
stos
mov
test
xchg
aaa
jb
in
in
jg
adc
outs
sbb
sub
es
push
cwde
mov
je
and
mov
sbb
jmp
xchg
pushf
sub
pusha
aad
js
jle
adc
mov
stos
xchg
pop
xor
dec
aaa
nop
cmc
gs
popa
push
jno
jae
lea
popa
xchg
xchg
xchg
xor
lea
int
xor
push
xchg
sbb
sub
pop
sbb
mov
mov
je
mov
jo
mov
ins
adc
shl
and
push
cmp
push
cmp
dec
pop
mov
rcl
es
aam
out
js
rcl
push
shl
mov
adc
or
jbe
inc
das
ret
test
adc
xor
push
pop
repz
std
sub
push
retf
sar
cmp
bound
cmp
stos
in
inc
or
jo
je
adc
mov
int3
xor
daa
dec
(bad)
xchg
inc
mov
jmp
sub
pop
dec
fcom
stc
inc
leave
push
aas
cmps
mov
jns
or
scas
hlt
or
outs
iret
dec
loop
imul
sub
in
add
inc
cmp
int
test
imul
cmp
or
push
cmc
jle
pop
add
jl
fst
in
sbb
xor
mov
pop
addr16
jae
xchg
stos
loop
cdq
xlat
das
sbb
mov
neg
inc
adc
add
or
add
pop
cmps
stos
dec
push
cmps
push
div
mov
add
movs
push
lahf
cmp
out
mov
inc
std
fwait
test
pop
pop
or
or
lock
std
ss
jg
ja
cmp
test
ja
or
xchg
mov
jge
mov
shl
and
adc
pop
add
shl
sbb
mov
enter
aaa
test
cmp
xchg
daa
arpl
xlat
push
fwait
mov
adc
test
mov
pop
lds
add
mov
pop
fcomp
outs
cmps
jnp
shl
sahf
xchg
fimul
outs
jmp
add
pop
mov
in
mov
cmps
out
mov
loop
mov
call
in
jge
lahf
xor
gs
mov
cmp
dec
mov
mov
clc
and
imul
dec
scas
jb
inc
fucomp
inc
cs
sub
clc
in
pop
mov
mov
and
adc
cmp
ja
sbb
sahf
icebp
xchg
loopne
out
js
mov
loope
mov
xchg
mov
sbb
xor
mov
push
sub
and
aam
les
outs
movs
push
push
loopne
jl
ins
cmp
(bad)
and
push
adc
call
mov
loop
cmc
inc
push
add
test
mov
vxorps
ror
xor
dec
sar
push
pop
movs
retf
and
mov
sub
add
sbb
mov
xchg
inc
stos
cmps
(bad)
daa
mov
hlt
push
pushf
jmp
fidiv
sub
mov
cmp
into
stc
dec
iret
push
dec
(bad)
fadd
push
xchg
mov
lds
rcl
pop
jmp
pop
adc
cmp
in
sbb
in
sbb
jecxz
sub
mov
fwait
inc
mov
sar
dec
xchg
cmps
dec
out
inc
or
popf
mov
adc
mov
fbld
jbe
push
mov
bound
pop
adc
jge
fld
and
out
fldl2e
or
cmc
xchg
jg
add
imul
add
xor
pop
add
adc
test
push
in
fdivr
jo
sub
or
loop
lods
add
and
and
push
push
pop
jae
out
pop
js
call
jne
arpl
sub
enter
pop
addr16
out
popa
shl
or
xor
add
movs
push
mov
lea
push
call
(bad)
dec
test
xor
sub
jbe
adc
xchg
out
push
push
popf
not
mov
sar
into
sub
stc
and
(bad)
outs
addr16
shl
xor
loop
mov
fdivr
mov
fisttp
int
pop
fst
cmp
popa
sub
or
inc
daa
xchg
hlt
xor
pop
popf
xchg
pop
xor
gs
xchg
jns
mov
sbb
out
shl
xor
mov
retf
sub
mov
jns
cmc
sar
lock
sub
das
inc
mul
rcl
rol
push
lods
std
int
or
push
mov
movs
mov
test
cmc
adc
es
repnz
cmps
xchg
push
imul
jl
popa
call
push
cmps
loope
jg
inc
cli
mov
cmp
std
pcmpgtw
fiadd
(bad)
or
lahf
push
retf
push
aas
xor
add
inc
(bad)
and
test
push
mov
sub
push
dec
(bad)
mov
ss
push
push
scas
aam
push
in
jl
cmp
and
or
(bad)
test
not
and
pop
push
iret
cmc
call
add
jb
imul
cli
inc
(bad)
pop
mov
loopne
jmp
popf
mov
shr
pop
pop
mov
jmp
mov
mov
repnz
add
int
int3
or
repnz
scas
(bad)
sti
xchg
out
pop
cmps
mov
enter
jmp
cmp
push
mov
cmp
mov
adc
cmp
cli
pushf
gs
jae
jb
sub
or
mov
loop
imul
mov
call
psubsw
sub
fidiv
sbb
cmp
dec
push
out
cli
pop
pop
mov
ins
push
jno
xor
jmp
std
sbb
ds
or
mov
add
dec
pushf
jb
jns
mov
and
lods
lock
push
adc
jp
xor
cmp
mov
inc
stos
mov
ins
(bad)
or
adc
inc
shl
sub
mov
mov
clc
test
mov
nop
push
and
pop
icebp
stc
mov
inc
aas
ins
int
or
mov
cmp
jno
mov
leave
sbb
pusha
mov
rcr
push
hlt
xor
jae
xor
cmp
movs
popf
adc
mov
pop
mov
ror
pop
pop
sub
das
pop
xor
mov
movs
bound
aam
push
dec
mov
jae
sbb
test
jecxz
push
hlt
push
retf
dec
adc
inc
fwait
push
inc
jl
mov
popf
popa
into
movs
inc
mov
std
retf
out
pop
mov
cmp
xchg
sbb
add
int
mov
rcl
mov
pop
mov
xchg
and
(bad)
cmp
or
js
clc
cld
rol
lods
int3
adc
mov
fadd
mov
xchg
xchg
div
or
mov
jb
pop
(bad)
cli
jge
push
lea
aad
ja
jmp
xchg
fidivr
and
cmp
add
adc
jne
stos
mov
ss
shr
fsubr
cdq
and
xor
mov
add
inc
push
dec
(bad)
dec
loope
leave
pop
pop
push
cmp
and
cs
mov
add
fdivr
pop
pop
outs
fistp
mov
push
adc
sbb
jmp
je
repnz
iret
mov
jne
inc
int
aaa
dec
popf
xchg
sub
dec
test
shl
out
pop
add
sub
loope
adc
fsubr
cmp
out
add
aam
cwde
aam
push
in
mov
jg
sti
jb
mov
xchg
sbb
or
and
out
dec
add
call
jle
data16
jmp
pop
push
adc
icebp
or
adc
inc
push
pop
jmp
push
popa
or
cmp
mov
xlat
jne
into
(bad)
mov
adc
(bad)
imul
jle
push
mov
adc
push
fwait
lods
pop
cmp
into
jecxz
mov
repnz
mov
clc
jb
push
stos
bnd
cmc
ds
add
lock
xor
mov
lock
aam
jae
shl
sbb
and
das
xchg
cs
mov
es
inc
icebp
aaa
push
ins
fsub
ja
cmp
ret
mov
test
push
sbb
adc
cdq
push
popa
push
mov
mov
call
xor
pushf
pop
pop
out
dec
fucomp
mov
cmps
out
(bad)
xor
xor
mov
(bad)
in
mov
adc
ror
adc
rcr
sub
mov
dec
test
dec
shr
push
test
call
mov
fld
test
fdivr
lahf
in
xchg
and
(bad)
or
and
add
shl
cmp
or
or
das
jbe
pop
pop
aad
movs
outs
or
dec
sub
or
or
mov
mov
je
pop
pop
fucom
rol
and
call
xchg
(bad)
rcr
imul
xchg
xchg
(bad)
lods
xchg
sti
pop
xor
sub
retf
cld
and
or
inc
mov
es
jne
pop
int
or
inc
popa
push
in
popf
ins
pop
(bad)
xor
pop
scas
and
inc
pusha
test
cwde
inc
xlat
std
and
daa
jnp
repz
out
fldenv
xor
nop
xchg
cmc
addr16
cmps
and
aaa
mov
add
imul
dec
(bad)
stc
sbb
(bad)
adc
cld
mov
(bad)
les
adc
xchg
fwait
retf
les
xchg
pop
imul
xor
mov
adc
clc
jbe
and
mov
mov
xor
scas
sbb
pop
(bad)
mov
xor
xchg
cmc
(bad)
mov
push
sbb
inc
cmp
test
cmp
sub
retf
rcl
or
lock
fsub
fstp
stos
xchg
cmp
jmp
push
ins
or
cmp
(bad)
jae
std
lea
(bad)
into
inc
jae
ficom
das
jbe
cs
mov
xor
inc
shl
fcmovne
sub
call
jecxz
jecxz
rcr
(bad)
sbb
fistp
pop
push
xchg
push
sar
fsubr
sti
push
out
hlt
int
ja
mov
add
adc
addr16
add
outs
and
pop
mov
sub
add
mov
out
pop
cwde
xlat
sbb
das
mov
aas
mov
fwait
sar
enter
fisttp
ret
lods
fcmovnbe
aas
stos
mov
fs
clc
or
dec
add
pop
cmp
or
lods
sub
test
cwde
cmp
or
mov
pop
mov
pusha
int3
int
mov
in
retf
outs
je
jbe
scas
cmps
jmp
cmc
ss
fstp
xchg
or
clc
pop
or
add
mov
dec
in
mov
mov
pop
std
mov
test
mov
ficom
and
shl
xchg
sbb
ins
jo
mul
cmp
jo
into
aam
cmp
call
mov
add
cmc
repz
(bad)
loop
add
xchg
mov
and
movs
ror
xchg
clc
inc
jmp
cmp
push
jnp
push
pop
icebp
jmp
cld
dec
xor
jp
aaa
mov
hlt
fimul
push
or
shl
sbb
call
jecxz
xor
shr
int
mov
push
call
xchg
xor
push
jae
fs
jg
rol
jnp
je
jo
adc
ins
pop
test
(bad)
and
addr16
add
push
inc
mov
mov
sbb
mov
test
pop
sub
cmps
push
das
scas
xor
(bad)
or
jbe
cmps
mov
xor
ficom
jmp
cld
sahf
mov
out
and
and
mov
ss
js
ins
dec
scas
sbb
jecxz
jbe
stos
enter
jo
cs
xchg
dec
pop
stos
mov
sti
(bad)
cld
mov
imul
add
jp
call
cmp
outs
pop
adc
repz
test
xchg
jl
pop
sbb
or
dec
mov
jle
mov
push
add
dec
pop
dec
inc
repz
mul
sbb
and
not
imul
mov
sub
xchg
imul
cs
pop
pusha
(bad)
maxps
push
mov
shr
mov
mov
iret
mov
pop
pop
sbb
cmp
lods
pop
stc
mov
cli
push
stc
cli
push
adc
test
adc
mov
jge
fcomp
adc
xchg
(bad)
(bad)
sbb
mov
fldenv
jae
lahf
jge
mov
cmps
add
jnp
pop
adc
mov
push
rcl
in
adc
mov
(bad)
(bad)
fld
mov
pop
popa
in
aaa
and
add
mov
(bad)
jbe
jmp
xchg
jnp
push
xlat
xor
int
sub
call
leave
test
or
test
ret
retf
adc
rcl
fild
lods
stos
stos
inc
mov
retf
push
in
mov
pop
jmp
ss
in
pop
shl
inc
sbb
jo
mov
mov
pusha
in
imul
and
test
jecxz
mov
cmp
les
adc
std
arpl
dec
cmp
imul
inc
mov
stos
stos
out
mov
inc
pop
adc
jmp
(bad)
and
xchg
stos
ror
rcr
out
ficom
pop
(bad)
jle
out
mov
into
(bad)
les
push
or
jns
adc
inc
sbb
sahf
jle
pop
js
aaa
pop
cmps
test
lock
inc
mov
mov
push
cmp
into
jmp
jmp
and
mov
fimul
cmp
xor
pop
loope
push
inc
jle
xor
and
in
and
inc
and
mov
push
(bad)
in
(bad)
cmp
rol
xchg
add
test
adc
ret
ins
push
fisub
scas
out
mov
sub
and
(bad)
jp
(bad)
push
ret
sbb
and
mov
ins
retf
mov
cdq
dec
jl
mov
jns
sbb
fsubr
jl
je
ss
xlat
jae
adc
inc
add
jmp
xchg
test
comiss
(bad)
jno
loop
test
inc
jb
mov
add
jmp
fsubr
mov
add
jb
sbb
jo
jle
or
dec
or
fisubr
push
jns
in
or
stc
pop
dec
ins
je
sub
mov
in
fisubr
jns
rcr
mov
call
pop
and
ss
mov
pop
pop
push
sub
lods
data16
mov
ja
mov
iret
pop
retf
shl
popa
jp
sbb
pop
neg
sbb
jle
pushf
xor
hlt
movs
push
adc
pusha
mov
mov
(bad)
into
mov
ss
out
mov
push
nop
stos
jp
cmp
inc
ftst
pop
lea
push
jne
imul
xor
enter
je
pop
nop
mov
into
ror
dec
stos
mov
test
jbe
push
cld
mov
rcr
mov
cmp
icebp
mov
push
xor
xchg
pop
fdivr
mov
shl
dec
scas
push
or
inc
in
lahf
div
(bad)
cmps
sbb
imul
mov
cmp
mov
pusha
(bad)
cvtdq2ps
test
sub
out
inc
ins
add
(bad)
cmp
arpl
xchg
cmp
fild
cmps
mov
push
stos
mov
imul
loope
(bad)
cmp
adc
daa
jmp
push
loope
je
imul
mov
popa
in
adc
pusha
cmp
not
xor
popa
mov
cmp
lds
push
aas
adc
mov
rcr
scas
adc
and
jle
out
stos
out
cmps
lods
lods
cwde
pop
sub
xor
xor
push
or
fisttp
rcl
jbe
mov
push
cmp
pop
stos
push
inc
mov
or
push
mov
and
out
imul
xor
ins
in
mov
jge
stos
sti
movs
scas
shr
test
test
daa
retf
pop
push
pop
loope
vunpckhps
xlat
inc
push
pop
dec
sbb
pop
cld
add
retf
mov
aad
pushf
aam
mov
in
ins
push
shr
dec
sbb
add
pop
or
dec
daa
add
out
push
mov
call
es
or
jbe
mov
xchg
cmp
xchg
dec
stos
test
in
mov
ja
fdiv
popf
inc
outs
cmp
shl
push
nop
(bad)
sbb
adc
xor
dec
mov
lods
es
xlat
hlt
or
inc
pop
aam
cld
sbb
xchg
pop
test
icebp
mov
mov
or
mov
iret
cmp
ror
out
jle
cmp
vcvtpd2ps
sub
mov
loope
jg
adc
and
aas
pop
and
pop
xchg
jns
push
mov
cdq
inc
xchg
pop
(bad)
cmp
add
adc
xchg
test
xchg
outs
cmp
lea
cmps
or
push
cld
sub
out
or
popa
imul
xchg
out
pusha
(bad)
test
mov
or
ss
les
outs
xor
xchg
stc
sub
or
mov
scas
or
mov
lods
jmp
push
add
inc
dec
out
test
inc
cmp
mov
jne
jno
(bad)
add
sbb
out
cmp
fld
or
xchg
sahf
cmp
cmp
jl
or
jmp
jbe
mov
retf
push
xor
xor
pop
inc
nop
mov
inc
call
push
cmp
test
adc
stc
test
rcr
push
pushf
gs
cmp
xor
(bad)
neg
ret
inc
jl
ret
adc
jnp
call
cmp
fucomp
xchg
out
scas
lods
pop
xchg
jns
mov
mov
lods
in
mov
repnz
lods
mov
adc
ffreep
pop
push
push
ret
in
inc
arpl
out
leave
sub
clc
dec
sub
xchg
inc
mov
mov
outs
mov
xchg
mov
arpl
hlt
ds
adc
cmp
push
cmps
cwde
push
and
iret
cwde
mov
push
fmul
cs
mov
mov
bound
(bad)
imul
ja
push
bound
cmp
arpl
xor
popa
jl
dec
lock
psubb
mov
lods
sub
daa
jo
loope
dec
sub
stos
je
sbb
cmp
psubb
inc
xchg
jbe
sub
fs
js
sar
inc
push
in
dec
test
out
sub
sbb
xchg
je
scas
(bad)
fsubr
shl
jmp
sbb
pop
push
or
aam
stos
fwait
pop
fild
inc
push
mov
(bad)
cli
fs
mov
hlt
mov
clc
xor
sti
outs
out
arpl
retf
sbb
xor
inc
loop
stos
xchg
add
mov
dec
add
rcr
push
xor
xchg
out
cli
(bad)
loopne
xor
in
sub
xor
pop
sbb
ds
(bad)
xor
and
jae
lahf
adc
lods
xchg
mov
xor
out
sbb
mov
adc
rcr
jmp
push
xor
dec
pop
enter
loope
scas
mov
jne
fisub
fucomp
dec
pop
arpl
sbb
adc
pop
mov
ds
fsubr
arpl
inc
stos
push
xor
mov
mov
sahf
in
retf
bound
xchg
sahf
jp
add
test
inc
or
inc
and
mov
or
add
or
cmp
movs
ror
sbb
xchg
pop
ja
xchg
inc
shl
jl
jno
in
dec
mov
add
test
sahf
push
loop
call
or
test
aaa
movs
gs
in
push
mov
jae
jmp
adc
sub
push
ficomp
out
xor
repnz
cmp
shl
pop
cwde
je
pop
xor
push
push
push
loope
aad
(bad)
ret
mov
sub
inc
shr
das
bswap
jl
push
push
jecxz
sahf
mov
push
cmp
inc
(bad)
add
leave
je
hlt
mov
(bad)
mov
mov
fcomp
mov
add
push
pop
xchg
cmp
mov
jecxz
cmp
push
xor
cmps
add
lods
mov
dec
or
mov
out
mov
jl
adc
test
jb
mov
jmp
jp
jge
(bad)
jle
test
inc
je
mov
push
sbb
nop
or
xchg
mov
cmp
ins
mov
mov
cli
pop
dec
push
fs
xchg
(bad)
cli
mov
cwde
ret
mov
cli
montmul
cmps
les
fs
sbb
push
mov
mov
sbb
push
mov
enter
jmp
les
jmp
jmp
xor
dec
pop
in
popa
dec
add
cmp
mov
cmp
neg
retf
jmp
out
xchg
and
movs
imul
mov
jbe
xchg
mov
push
retf
or
jae
jbe
pop
popf
test
leave
cmp
mov
xchg
ror
jge
scas
fistp
test
push
call
inc
scas
leave
icebp
xor
std
imul
aad
gs
push
xor
sbb
es
cmc
pop
mov
fidivr
push
sbb
lods
fcomp
xchg
data16
int3
enter
fimul
pop
nop
sbb
pop
adc
or
mov
push
cdq
push
in
sbb
daa
arpl
lock
cmp
sub
jmp
sbb
ror
cmp
iret
mov
sti
push
outs
scas
mov
ds
(bad)
ror
and
popf
div
test
imul
xor
repz
or
(bad)
mov
or
push
mov
mov
icebp
jmp
hlt
pop
or
mov
mov
xchg
in
ret
jae
cmp
test
pop
cwde
(bad)
xor
adc
jecxz
push
and
and
(bad)
xor
xchg
scas
adc
mov
adc
ret
sbb
mov
push
jecxz
push
pop
mov
gs
jbe
lahf
dec
loop
inc
ins
push
sub
jmp
mov
push
cmp
je
mov
xor
sar
clc
or
stos
adc
mov
jb
or
mov
popf
jnp
mov
mov
stos
xchg
mov
test
pop
ins
jp
ins
or
loope
or
sub
fld
shl
ds
lock
xchg
add
dec
xor
add
iret
ror
(bad)
(bad)
cs
and
adc
jle
push
pop
loope
(bad)
push
xor
imul
push
fidivr
std
sbb
mov
jbe
in
mov
call
push
ret
xor
int3
in
shl
xor
inc
in
inc
add
pop
pop
xchg
sub
jl
mov
leave
fwait
lahf
sub
icebp
or
jne
leave
out
out
mov
sbb
not
mov
push
je
les
sub
xchg
cmps
and
mov
jne
jle
mov
cmp
out
or
shl
dec
out
sbb
std
pop
bound
lock
sub
in
cmp
pop
pushf
push
sbb
out
and
rcr
sbb
test
sub
and
daa
mov
mov
mov
loop
movs
fcmovnbe
pop
xchg
xchg
jnp
das
sub
mov
int3
pop
xor
test
mov
(bad)
fwait
outs
cmps
in
dec
pop
mov
jp
das
repz
dec
mov
pop
xchg
and
pop
xchg
push
push
mov
clc
lods
pop
push
int3
(bad)
retf
stos
inc
dec
stos
arpl
hlt
ret
(bad)
pop
push
add
push
pop
gs
jo
je
fs
and
add
movs
xlat
add
mov
jnp
sbb
xchg
dec
stos
nop
xor
in
xor
ds
push
out
dec
sub
aam
test
imul
pop
xor
retf
movs
or
xchg
pop
or
outs
mov
jl
or
pop
cmp
fst
push
in
mov
dec
jnp
inc
sti
push
mov
out
loop
sub
in
sub
xor
loopne
jge
fcomp
mov
mov
or
fnstsw
cmps
inc
stos
jecxz
mov
shl
push
mov
mov
mov
xchg
inc
mov
sbb
push
cdq
xor
mov
jmp
sbb
scas
xor
mov
scas
add
push
fsubr
jge
cmc
aam
mov
(bad)
gs
mov
cld
test
xchg
clc
pushf
mov
and
scas
xchg
stos
into
cmp
pop
(bad)
iret
test
out
stos
lea
xchg
or
sbb
cmp
sub
ss
retf
ins
dec
lods
ror
aad
inc
dec
xchg
jge
aad
add
cmp
pushf
fs
jbe
adc
fmul
jbe
push
imul
xor
(bad)
stos
inc
dec
loope
mov
sub
push
fld
mov
popf
xor
push
in
push
imul
ja
out
fcom
hlt
call
sub
stc
jecxz
mov
ficomp
mov
arpl
inc
xchg
push
mov
sub
cs
loopne
das
data16
ds
mov
loopne
push
adc
repz
ins
(bad)
sub
adc
cmp
mov
adc
add
push
adc
test
hlt
stos
adc
mov
loop
fwait
push
xor
jecxz
mov
out
nop
dec
add
push
or
xor
loope
xchg
cmp
pop
mov
ficom
scas
repnz
pop
iret
cdq
mov
inc
xor
mov
mov
les
fsubr
pushf
sbb
test
ins
cmps
iret
call
and
adc
cld
fist
fs
loop
scas
rcl
xchg
stc
clc
outs
pop
hlt
mov
mov
mov
mov
loopne
mov
idiv
sbb
or
push
lds
in
adc
rcl
dec
scas
pop
pop
adc
cvtps2pd
xchg
pop
shl
jmp
add
leave
or
mov
imul
sub
cmc
mov
neg
idiv
dec
xchg
dec
cmp
jo
mov
(bad)
movs
sub
dec
aam
test
and
xor
cwde
and
adc
sbb
pop
or
xchg
mov
push
adc
(bad)
lea
push
cmc
dec
pop
mov
ret
gs
cld
movs
leave
popa
pop
push
or
cld
jp
xrelease
jo
and
or
push
pop
cmps
in
es
repnz
jmp
lahf
add
jl
js
add
cmps
test
pop
dec
shl
mov
mov
mov
add
lea
ror
lea
les
ficom
shl
xchg
cli
pop
fwait
das
mov
(bad)
adc
jae
pop
mov
dec
or
fmulp
mov
push
cmp
sbb
sahf
aaa
fild
ja
stc
scas
addr16
inc
mov
mov
or
imul
mov
or
loopne
daa
mov
push
out
ss
iret
std
dec
cdq
stos
xor
pop
mov
push
stc
pop
or
inc
adc
add
test
dec
inc
test
pushf
mov
push
arpl
jns
into
lea
push
push
inc
inc
adc
cwde
jmp
sub
movs
ror
mov
stos
(bad)
mov
push
cmp
scas
pop
mov
mov
push
repnz
push
stc
sbb
sbb
div
mov
xor
jmp
test
(bad)
sbb
or
and
xor
adc
es
jns
cwde
nop
or
(bad)
xor
add
retf
scas
(bad)
mov
push
iret
clc
adc
ret
pop
gs
ret
loop
(bad)
jae
mov
lea
out
xor
cwde
call
pop
sub
cmp
or
jb
jle
pop
shr
cmp
out
push
or
inc
fnsave
xchg
inc
xor
xor
mov
in
mov
dec
xor
xchg
stc
cmp
sub
push
push
js
cli
pushf
retf
loopne
test
add
jle
jbe
lock
lock
cmps
arpl
inc
and
ud1
push
and
cmps
mov
xor
mov
mov
fild
ror
pushf
rcr
scas
xchg
inc
push
xchg
xor
test
pop
adc
jbe
jl
adc
jo
ins
and
jecxz
shl
mov
icebp
fcmovnb
enter
aad
enter
shl
inc
ja
fisub
scas
cmp
inc
test
mov
or
shr
ins
mov
fld
push
jb
pop
mov
test
jb
xor
sahf
stos
div
mov
loope
std
xchg
jmp
and
or
loope
ret
test
mov
fdivr
outs
je
jae
out
adc
popa
in
(bad)
cmps
not
sub
ret
add
xor
xchg
cmps
jle
mov
fld
(bad)
nop
mov
jp
jmp
(bad)
(bad)
adc
imul
jg
gs
enter
ss
push
hlt
sub
es
(bad)
dec
out
pop
inc
xor
retf
jne
pop
dec
pushw
ins
pop
sbb
test
retf
dec
adc
pop
mov
pop
mov
loope
mov
movs
sti
xor
not
cmp
xor
clc
cld
test
jge
outs
inc
(bad)
lods
gs
adc
popf
retf
dec
dec
call
(bad)
nop
and
loope
fisttp
cmp
jmp
jp
sbb
mov
mov
jp
jle
mov
adc
pop
or
je
loope
mov
(bad)
out
pop
sub
xchg
test
add
jmp
das
mov
sbb
test
mov
imul
jle
mov
stc
ja
int3
pop
inc
fist
pusha
test
and
out
jg
add
out
lahf
mov
add
nop
test
xor
out
not
stos
inc
lds
pop
inc
add
arpl
mov
cmp
out
sub
xor
dec
cmps
fstp
xchg
push
bound
xlat
pop
jmp
xchg
dec
cmp
jnp
dec
cmp
jg
sti
add
out
push
inc
add
mov
in
push
inc
and
clc
or
jb
xchg
inc
and
jns
mov
hlt
scas
pop
add
dec
dec
mov
jl
push
imul
hlt
inc
arpl
(bad)
lahf
pushf
or
rol
dec
inc
aas
lock
mov
mov
jmp
dec
test
xchg
in
scas
mov
xlat
inc
jbe
jg
lods
mov
cld
rcl
inc
(bad)
cmp
and
push
jb
test
cmc
in
xchg
call
xor
int3
and
(bad)
mov
out
into
and
arpl
retf
jecxz
pop
adc
ja
(bad)
or
js
inc
add
cmp
cmp
in
dec
aad
pop
mov
xchg
jbe
(bad)
clc
aam
popa
ja
add
sbb
inc
or
mov
pop
daa
aas
xchg
(bad)
repnz
mov
xchg
mov
mov
cmp
xor
xchg
xor
push
dec
dec
scas
sub
data16
repz
and
loop
ins
imul
pop
pop
pusha
add
fwait
pop
gs
ins
push
xchg
inc
add
pop
jae
imul
fimul
cvttps2pi
cmp
pop
mov
test
test
test
sub
sbb
mov
test
xlat
xchg
ret
in
sbb
adc
mov
sbb
hlt
and
cli
mov
jmp
xchg
outs
xchg
test
outs
fsubr
loope
push
jge
inc
repz
idiv
out
outs
in
ror
call
xchg
mov
push
pop
fst
and
shl
sub
push
xor
mov
popa
test
add
push
mov
mov
sub
fmul
sbb
cmp
inc
adc
push
fisub
je
jge
push
into
leave
xchg
adc
out
xchg
pop
cmp
dec
add
std
inc
jns
sub
cmps
adc
arpl
adc
call
xchg
aaa
fcmovnbe
hlt
push
js
fld
inc
xor
stos
push
pop
pop
(bad)
push
aas
xor
or
arpl
and
jmp
mov
pop
ret
fs
push
loopne
pop
adc
fwait
inc
out
pop
stc
jg
aas
cmp
adc
inc
push
add
xor
sbb
hlt
retf
mov
mov
in
not
shl
lahf
addr16
aam
leave
movs
stos
in
sbb
mov
fwait
xchg
arpl
dec
out
mov
mov
mov
mov
adc
or
js
sbb
mov
sub
jae
popf
adc
cmp
cmp
pop
pop
aad
xchg
daa
sti
inc
and
std
in
jmp
into
iret
jmp
push
jge
int
mov
outs
adc
inc
sti
push
inc
jmp
(bad)
sti
mov
sti
or
mov
mov
mov
dec
sbb
mov
sub
lahf
scas
pop
pop
xchg
shl
push
mov
mov
hlt
dec
js
sahf
push
xchg
push
lds
cld
pop
cmp
mov
mov
mov
pop
mov
retf
adc
cmp
stos
push
mov
push
add
inc
jbe
add
ja
sbb
movs
call
sbb
dec
mov
pop
repnz
push
loope
push
dec
adc
stos
pop
rcr
dec
xchg
(bad)
xchg
ins
xor
dec
test
bound
into
or
ins
stos
xor
or
loopne
adc
add
jne
dec
gs
mov
shl
loope
ss
xchg
(bad)
or
add
cdq
shl
sub
dec
or
fwait
mov
inc
push
mov
das
mov
mov
pop
push
xlat
cs
sar
push
sti
enter
cmps
xchg
dec
jae
sbb
pop
(bad)
sbb
mov
jo
push
iret
cwde
sahf
mov
sub
sbb
lea
das
sub
mov
in
mov
push
jnp
jmp
or
mov
mov
(bad)
fcmovne
cmp
mov
dec
xor
fild
jg
jmp
stos
fwait
dec
xchg
pop
aam
(bad)
and
in
xor
cmp
adc
and
aaa
lahf
jmp
and
add
jge
cmp
cmp
(bad)
ficom
cmp
lahf
or
lods
mov
jp
in
lods
jns
push
jp
xchg
push
sub
push
movs
repz
popf
pop
jnp
add
jbe
cmc
jne
cli
sar
ss
add
fchs
pop
jg
icebp
jo
dec
push
push
push
inc
jmp
and
push
call
ins
push
adc
inc
jmp
sbb
add
mov
cmps
mov
cdq
sub
test
pop
rcr
ins
hlt
(bad)
xchg
and
test
lock
repnz
adc
rcl
xor
inc
xchg
mov
and
mov
sub
out
mov
call
sub
mov
in
push
test
dec
sub
into
inc
mov
fld
inc
out
(bad)
mov
xchg
movs
mov
ficomp
rcr
(bad)
xor
and
ins
inc
xlat
mov
cs
out
inc
pop
inc
outs
ret
out
jg
jne
outs
sbb
sub
xor
push
inc
or
mov
mov
lea
dec
retf
fsub
(bad)
fnstenv
cdq
xor
inc
jle
dec
pop
pop
leave
loope
leave
fnstenv
repz
adc
add
jnp
sbb
sbb
mov
inc
daa
mov
movs
cmp
jb
add
test
dec
cwde
push
in
adc
and
das
push
aas
retf
retf
sbb
xchg
ds
dec
shl
lahf
push
xchg
mov
mov
sbb
and
xchg
xor
push
push
das
fisubr
or
add
push
enter
cmps
mov
test
cmp
or
xchg
add
stos
es
jb
stos
jle
aam
iret
add
enter
push
add
adc
cmps
pop
pop
xor
jno
push
imul
or
es
or
inc
int3
cmp
jb
sahf
sbb
xlat
cmc
inc
ret
mov
mov
pop
test
jo
imul
scas
xchg
jp
add
data16
es
xchg
sub
inc
sub
cmp
cmps
fidiv
test
xchg
push
pop
rcr
mov
test
fst
outs
inc
int
cmp
pop
movs
sub
sbb
jp
sahf
mov
jbe
repnz
adc
mov
adc
sbb
imul
daa
stc
dec
out
cmps
and
jmp
or
call
jne
call
adc
and
push
xchg
in
fadd
imul
int3
and
mov
in
xchg
lds
xor
nop
int3
cmp
ins
sbb
sbb
mov
cmps
adc
(bad)
in
leave
xchg
(bad)
bound
jno
icebp
in
retf
fwait
call
arpl
mov
lods
inc
cld
inc
adc
clc
mov
aad
lods
movs
je
lds
jp
das
test
push
xchg
retf
mov
ins
and
into
call
std
mov
lock
xor
sbb
bound
jno
lods
jno
ret
dec
aaa
retf
pop
pop
loop
and
mov
int3
jb
ror
in
fld
call
xchg
xor
push
movs
push
retf
pop
icebp
mov
cmps
mov
addr16
jo
xchg
push
mov
fwait
bound
mov
btr
test
inc
or
popf
push
jmp
pause
js
pop
push
or
dec
das
dec
mov
cmps
inc
mul
sub
int
cmps
jmp
sub
dec
cmp
sbb
and
fdivrp
or
test
push
pop
(bad)
daa
neg
xchg
inc
cmp
icebp
test
test
sub
pushf
xchg
mov
cmp
rdmsr
loope
cmp
sub
xlat
repz
in
adc
dec
sbb
jmp
loopne
test
jb
lds
mov
shr
movs
dec
xor
xchg
inc
push
jmp
pop
iret
clc
mov
or
mov
test
call
or
xor
inc
xor
inc
push
cmp
fsub
into
ins
jns
pop
mov
addr16
sbb
les
aas
gs
jecxz
xor
jae
inc
sti
icebp
stos
outs
xor
repz
push
popf
lea
and
xchg
xchg
loopne
inc
dec
jns
jmp
and
imul
adc
fldcw
jb
sub
jmp
push
ins
sbb
adc
mov
es
sti
jae
dec
or
mov
loopne
push
loope
xchg
or
dec
mov
shl
jp
or
sub
not
adc
les
mov
pop
mov
lock
outs
sub
mov
sti
sub
jge
and
std
in
loopne
arpl
adc
out
sbb
sub
sub
xchg
mov
js
stc
cli
cmp
jne
(bad)
not
and
cs
popf
movs
sbb
mov
jo
or
and
pop
jb
inc
pushf
fs
test
sbb
dec
push
mov
(bad)
mov
or
dec
fwait
cmp
repnz
xchg
dec
cmp
out
sbb
add
xor
pop
in
and
dec
or
or
inc
fld
mov
cmp
lahf
movs
fisttp
aas
mov
add
jns
icebp
cmp
sbb
rcl
sbb
rol
rcr
lea
cs
leave
and
push
mov
pop
mov
add
mov
in
push
rcl
mov
sub
inc
dec
and
mov
les
mov
inc
dec
mov
jl
push
jnp
hlt
sti
fld
pop
cmp
sbb
mul
sbb
sbb
pop
cmp
ret
dec
push
or
or
jae
inc
lods
sub
cmp
sti
ss
or
jno
cmp
pop
ds
aad
into
sub
lea
cmp
adc
(bad)
pushf
sahf
jae
mov
jno
xlat
lds
inc
push
neg
loope
jb
mov
mov
sahf
mov
mov
mov
ja
(bad)
jo
sbb
pop
mov
js
and
addr16
enter
ret
ins
int3
test
out
push
imul
hlt
pop
sbb
shl
adc
ret
fst
cmp
sub
dec
xlat
sub
addr16
es
jmp
stos
fwait
dec
loopne
int3
mov
push
xchg
fucomp
mov
jg
and
les
lods
xchg
and
fs
or
add
ret
add
xchg
dec
lods
arpl
loope
addr16
pop
fisubr
xchg
inc
xchg
ror
jne
test
lods
cdq
cld
push
xchg
cs
jmp
mov
mov
stc
inc
mov
pusha
xor
dec
adc
sbb
xchg
sahf
add
jns
xor
jb
adc
mov
add
push
jo
out
enter
(bad)
pusha
dec
lock
xchg
and
sub
jae
sbb
nop
sub
adc
cmps
push
call
push
es
shl
jns
lock
add
aaa
cmp
test
or
arpl
and
pushf
cmp
retf
push
jle
xchg
in
pop
cld
ret
out
dec
adc
and
pop
fisubr
add
and
ret
retf
push
jmp
test
ins
(bad)
lock
in
data16
test
mov
(bad)
test
enter
movs
loope
in
in
fnsave
xchg
mov
lods
scas
adc
add
cli
addr16
popf
jge
in
je
call
cmps
mov
and
xchg
aad
add
sbb
nop
jns
fidiv
addr16
out
aad
into
bound
xchg
fsub
adc
dec
into
in
aam
into
aad
cmp
pop
pop
dec
adc
or
out
lods
retf
cmp
hlt
or
and
adc
sbb
dec
inc
loope
push
or
(bad)
out
inc
mov
call
js
jno
daa
into
mov
xor
das
cwde
push
mov
(bad)
arpl
sti
xchg
test
dec
cmps
cdq
fwait
mov
movs
pop
xchg
loope
cmp
hlt
into
xlat
sub
xlat
sub
mov
mov
pop
cld
lds
xor
dec
jno
dec
pop
pushf
mov
fidiv
stos
add
shl
(bad)
mov
std
cmp
sub
pop
imul
mov
or
rcr
mov
inc
pop
dec
inc
push
mov
imul
pop
sub
sub
icebp
dec
aam
cld
(bad)
dec
push
jmp
mov
out
push
xchg
mov
nop
pop
add
mov
jnp
or
ins
pushf
mov
sbb
xor
dec
mov
mov
xchg
mov
mov
cli
push
add
push
push
mov
and
lods
dec
mov
and
lods
sbb
xchg
(bad)
or
jp
shr
in
cwde
adc
rcr
dec
outs
(bad)
xchg
cmp
inc
fwait
mov
(bad)
lahf
inc
pop
mov
inc
cmp
mov
xor
jge
int
js
mov
push
je
pop
jae
push
(bad)
rol
sub
stc
fs
inc
inc
retf
inc
js
ret
test
shl
fwait
jae
and
inc
(bad)
jnp
in
addr16
or
scas
xlat
and
cdq
and
dec
mov
ins
aam
mov
xlat
jg
fwait
mov
mul
adc
popa
ds
mov
cmps
(bad)
out
mov
inc
mov
bound
inc
stos
cmp
cs
or
arpl
lds
mov
xchg
pushf
add
fadd
mov
sbb
push
punpckhwd
pop
jmp
inc
dec
mov
push
int
(bad)
jbe
adc
xchg
inc
sbb
rol
dec
sub
cmp
jg
sar
push
leave
sbb
adc
ret
pop
scas
fcom
mov
test
imul
repz
add
add
push
int3
and
pop
mov
mov
xchg
outs
out
push
daa
out
pusha
das
inc
xchg
sbb
dec
sar
adc
dec
test
daa
repnz
repnz
popf
enter
das
pushf
mov
nop
mov
data16
or
push
fwait
lea
mov
loope
dec
(bad)
pop
ss
popf
xchg
fmul
popa
push
push
out
in
sbb
dec
popf
fs
push
js
mov
fild
int3
mov
loope
sub
xlat
pop
test
call
pop
or
fild
fisub
mov
or
mov
ret
cs
and
xor
pop
cmp
outs
and
fnstenv
xchg
push
add
push
ins
ud0
hlt
das
xlat
enter
lods
(bad)
cwde
xchg
xor
sub
dec
or
repz
push
pop
and
xchg
leave
retf
add
rcl
pop
add
cmp
gs
cmp
repnz
or
pop
mov
adc
ret
ja
pop
push
cmps
mov
dec
pop
jne
cmps
mov
test
push
fisub
fild
jne
pop
pop
pop
(bad)
data16
cmp
ins
sbb
scas
add
mov
dec
test
aaa
leave
dec
xor
xor
dec
adc
fcmovnbe
jns
dec
sbb
cmp
sub
pop
outs
xchg
in
out
pop
cvttps2pi
outs
sub
dec
xchg
hlt
sti
jae
xlat
pop
jb
mov
cmp
bound
popa
and
loop
or
lods
pop
xor
sbb
mov
aaa
repz
mov
scas
retf
aad
neg
sbb
push
and
dec
mov
mov
xor
dec
inc
xor
add
jg
ffreep
pusha
enter
and
or
scas
adc
pop
(bad)
mov
mov
push
movs
(bad)
js
sbb
dec
les
and
cmp
mov
pop
movs
xchg
adc
retf
jo
loop
leave
cmc
add
dec
jp
cmp
into
(bad)
js
arpl
inc
leave
fdivr
and
scas
xor
in
into
xchg
inc
aas
icebp
jle
push
sbb
call
xchg
mov
je
xlat
test
aaa
fld
or
call
jl
sub
jae
or
sbb
add
pop
adc
mov
in
push
ret
movs
movs
sar
fcomp
fistp
xor
xchg
in
xor
sahf
mov
cmps
scas
sbb
imul
push
pop
movs
add
add
scas
clc
dec
cmp
mov
push
ins
cmp
inc
in
int3
dec
arpl
loop
sbb
dec
and
push
cld
fwait
jp
std
int
iret
fcom
dec
cmp
icebp
addr16
enter
div
xor
(bad)
mov
jp
xchg
inc
test
mov
adc
sti
dec
ucomiss
fnstcw
mov
aam
ins
fsubp
stc
dec
pop
das
je
push
lea
mov
es
aas
jge
ds
inc
sbb
repz
pop
jae
cmp
out
or
rcl
arpl
loopne
mov
inc
rcl
sti
jno
stos
shr
outs
jns
loop
pop
push
xlat
and
xor
mov
push
fsubr
jle
inc
stos
std
inc
push
push
pop
inc
adc
and
inc
scas
js
enter
(bad)
adc
data16
pop
xchg
inc
ret
adc
lahf
data16
jge
xchg
cmp
out
push
jmp
std
mov
mov
fcomp
(bad)
cmp
pop
rol
push
fsub
aam
jo
and
fsubr
mov
data16
push
cdq
sub
dec
and
xchg
and
or
out
or
cmc
mov
std
or
add
or
or
ret
inc
out
icebp
or
inc
xchg
pop
sub
test
in
dec
ss
lds
ja
ins
aas
or
cmp
sbb
std
pop
cmp
jnp
call
hlt
mov
sahf
jae
sti
push
in
and
pop
jmp
adc
aaa
xor
add
push
and
sti
push
leave
and
jmp
mov
movs
ja
push
jmp
mov
pop
add
pop
pop
cmp
mov
(bad)
push
add
mov
fwait
pop
add
and
arpl
jmp
push
jge
sbb
movs
sub
(bad)
sar
push
in
test
mov
(bad)
xor
add
sahf
push
outs
or
or
sti
stc
movs
jae
cmp
je
or
inc
adc
add
dec
mov
mov
mov
(bad)
jno
mov
and
inc
fidivr
mov
loopne
loop
(bad)
push
clc
imul
cld
sub
pop
xlat
inc
push
sbb
loopne
test
movs
or
aaa
mov
xchg
xchg
and
cwde
adc
mov
cs
mov
dec
and
push
cmp
sub
bound
jne
je
retf
lea
lods
or
dec
movs
cmp
sbb
scas
pop
fisubr
test
repz
movs
cmp
jb
jno
cmp
outs
push
or
nop
sbb
(bad)
(bad)
jle
dec
and
mov
mov
(bad)
ins
aaa
call
ret
(bad)
movs
adc
mov
cmp
xor
push
jmp
outs
fs
inc
ins
xor
addr16
sub
mov
enter
push
xor
(bad)
fisub
imul
mov
mov
xor
pop
pop
mov
push
stos
xor
retf
dec
push
jo
push
add
inc
jno
and
mov
add
jge
rcr
outs
inc
pop
mov
xor
jmp
adc
pop
lahf
scas
dec
cmp
push
jbe
in
out
inc
or
cmp
aas
fadd
repz
inc
jno
push
stc
fcom
cli
pop
fdivr
add
push
or
cwde
dec
iret
(bad)
inc
test
out
xlat
test
cli
xor
scas
xor
test
pop
std
pop
fidiv
sbb
sbb
and
imul
fscale
xor
popf
mov
ret
add
pusha
enter
push
xchg
shr
cmp
jmp
test
mov
mov
fdivrp
std
aad
mov
xor
mov
pop
sbb
jecxz
and
arpl
cmps
and
test
xor
mov
sar
cli
int
jg
daa
push
xor
cmp
icebp
adc
(bad)
jo
ja
xor
imul
or
fidivr
jle
arpl
push
xor
ficomp
aas
inc
retf
sub
idiv
repz
call
xor
(bad)
fdivr
lock
inc
sahf
adc
and
in
es
les
std
inc
jmp
lahf
push
je
jnp
push
xor
add
jge
test
loope
mov
jg
and
adc
aam
push
leave
icebp
loope
push
sbb
adc
or
pop
adc
push
jmp
jp
fist
ins
jae
dec
call
push
test
xchg
aaa
jmp
imul
ins
inc
lahf
push
inc
push
mov
out
imul
ins
cmp
test
nop
push
dec
xlat
(bad)
dec
and
xchg
shr
loope
cwde
add
adc
call
inc
cld
mov
addr16
adc
loopne
pop
pop
movs
repz
adc
(bad)
clc
mov
adc
into
ja
dec
int3
or
inc
mov
js
adc
hlt
outs
dec
cmp
cdq
add
fs
jge
gs
mov
push
and
jg
adc
xchg
xchg
inc
shr
das
outs
sub
mov
test
aam
or
cmp
lahf
jmp
inc
xor
xchg
and
int3
mul
mov
inc
call
sbb
repz
and
cmps
lods
dec
rcr
jae
inc
pop
mov
sub
das
pop
add
add
jbe
xor
ficomp
cmp
push
push
test
mov
cmp
add
mov
les
mov
push
lods
push
pop
retf
mov
pop
xlat
cmp
call
cdq
popa
loop
jnp
scas
sub
rcr
rcl
mov
pop
or
cmp
adc
shl
pop
es
jmp
add
loopne
jmp
loopne
mov
inc
sbb
nop
ins
adc
sub
mov
(bad)
fmul
(bad)
mov
and
adc
aaa
test
inc
ja
mov
pop
aam
mov
mov
ins
adc
(bad)
lods
mov
mov
dec
mov
xchg
shl
div
aaa
retf
pop
mov
add
(bad)
scas
cs
imul
mov
or
dec
test
dec
int
out
lods
imul
scas
add
lds
out
pop
pusha
mov
xchg
aas
jne
jmp
fnstenv
push
and
cmp
lock
or
pop
int3
movs
in
je
cmp
jmp
jne
pop
ja
popf
and
mov
mov
jae
inc
xchg
mov
cmp
fld
xlat
std
enter
xchg
cmps
adc
pop
shr
(bad)
repnz
mov
mov
sbb
stc
mov
adc
cwde
imul
jo
sbb
leave
arpl
test
addr16
jnp
or
bound
mov
test
mov
add
pop
rcl
jnp
cdq
mov
enter
mov
or
mov
mov
daa
adc
cmp
mov
push
inc
icebp
cs
iret
sub
mov
mov
cmps
inc
inc
pusha
leave
xor
aad
shr
jle
ret
and
(bad)
lods
or
test
sbb
retf
call
pop
cli
fwait
jns
adc
mov
add
loope
mov
lods
(bad)
jle
out
sbb
test
dec
sbb
sub
(bad)
fsubr
pop
pusha
iret
add
leave
loope
movs
adc
ins
cwde
push
push
xchg
adc
xor
sub
inc
or
inc
inc
jmp
jecxz
jg
test
stc
mov
nop
cmp
push
add
cdq
pop
fwait
xor
std
sbb
and
mov
jg
jns
pop
cmp
ds
sahf
jnp
sahf
pop
retf
mov
sub
push
stc
lock
clc
(bad)
xchg
int
aad
ds
pop
xchg
cmp
aaa
movs
push
gs
faddp
fs
sbb
jge
js
pusha
jge
mov
int
loope
fistp
and
in
les
dec
sbb
jae
and
das
inc
das
shr
test
cmp
pop
jmp
inc
out
aas
xor
xchg
cmp
sub
push
in
lods
sbb
into
iret
push
retf
outs
mov
sbb
div
pop
adc
pop
lock
arpl
xchg
and
lods
xchg
push
push
pop
lock
push
arpl
mov
inc
(bad)
dec
(bad)
les
xchg
mov
xchg
out
adc
test
jle
test
enter
sbb
(bad)
sti
nop
push
mov
inc
ins
mov
nop
sbb
or
xchg
push
adc
jmp
jb
int3
mov
mov
pop
call
mov
scas
pop
sbb
test
jmp
rol
jns
fnstcw
mov
repnz
pop
js
mov
imul
inc
inc
shr
xchg
sbb
shl
test
into
fidiv
sbb
xchg
mov
adc
or
fisttp
mov
xchg
xchg
jae
shr
mov
xor
mov
loop
mov
pop
retf
mov
movs
push
jbe
mov
xlat
jg
mov
and
mov
stos
xchg
stos
out
clc
jmp
mov
pusha
in
push
out
xchg
mov
mov
(bad)
fiadd
pushf
pop
cmp
inc
test
or
cdq
loop
cmp
hlt
addr16
icebp
shl
pushf
inc
rol
dec
fwait
add
test
ret
(bad)
leave
xor
rol
mov
or
dec
arpl
fadd
cwde
sar
ss
pop
bound
adc
adc
sbb
adc
add
ds
add
push
ss
adc
into
add
nop
test
in
pop
aam
and
ds
test
sub
xor
in
pusha
pushaw
scas
sbb
jno
or
inc
mov
hlt
int
scas
adc
mov
enter
add
fbstp
js
dec
jbe
daa
mov
sbb
leave
sub
cdq
out
iret
sbb
add
call
fwait
add
pop
fcmovnu
std
repnz
ret
out
jo
nop
pop
xchg
fistp
adc
into
cdq
mov
js
cmp
inc
mov
mov
retf
sbb
js
or
push
outs
mov
repnz
lock
push
mov
xor
daa
xchg
adc
xor
(bad)
jg
icebp
sti
mov
adc
dec
xchg
ret
adc
or
mov
and
mov
cmps
pop
pop
and
pop
popf
dec
fld
or
jb
out
jbe
cmps
mov
xor
xchg
xlat
inc
shr
pushf
into
js
inc
inc
mov
ss
loopne
mov
or
(bad)
jle
in
aaa
mov
cld
das
sub
jbe
scas
xchg
and
nop
arpl
sub
dec
iret
pop
bound
repnz
gs
fld
and
cmps
mov
sub
shl
ja
sub
inc
push
test
inc
idiv
mov
push
shr
cmps
outs
sbb
inc
cmp
add
scas
and
add
aaa
fiadd
sub
aam
lock
push
test
lods
aad
jle
das
cmp
adc
adc
adc
call
cmp
dec
stos
dec
push
lea
sub
mov
std
fldcw
inc
fcmovu
lea
push
aad
mov
ins
inc
popf
mov
sbb
add
test
jbe
xchg
(bad)
jae
sar
lods
mov
xchg
(bad)
pop
fs
ds
pop
xchg
mov
(bad)
je
add
jns
(bad)
(bad)
pop
sti
sub
cmp
xchg
pushf
dec
fiadd
push
mov
gs
push
sar
test
test
ds
mov
call
cld
fst
jae
adc
cmp
cmps
icebp
gs
jg
stc
sbb
mov
jecxz
adc
inc
jmp
mov
shl
ins
xor
or
jnp
push
out
fldcw
add
adc
ret
(bad)
in
jle
aas
lea
ja
dec
xchg
push
adc
ins
push
mov
xchg
(bad)
aas
hlt
adc
outs
push
dec
loopne
test
add
sahf
fmul
push
push
and
cs
cmp
je
data16
sub
retf
jmp
ret
lahf
and
jne
cmps
aad
retf
mov
jle
cmp
inc
fwait
pop
cmp
jle
ficomp
xor
sub
je
sbb
xchg
into
ins
pushf
mov
push
sub
mov
sub
push
xor
sub
das
jo
cmps
ficomp
xor
test
push
mov
aad
mov
gs
or
inc
pop
push
mov
loopne
(bad)
out
cmp
dec
inc
and
or
cwde
add
icebp
mov
mov
fisub
mov
in
(bad)
jns
js
cmp
jp
retf
leave
mov
mov
repnz
push
shl
pop
les
sub
test
(bad)
sub
(bad)
mul
aas
fstp
or
xchg
sbb
mov
leave
mov
dec
mov
and
lods
pmulhw
cmp
mov
cmp
call
stos
nop
add
xlat
sub
repnz
push
mov
dec
sub
jl
nop
cmps
shl
mov
in
(bad)
and
jbe
push
int3
xchg
icebp
cld
ds
arpl
(bad)
adc
outs
jb
mov
or
push
sbb
pop
cmp
add
out
mov
out
and
idiv
jmp
push
mov
adc
and
retf
add
(bad)
push
xor
popa
je
pop
add
popf
pop
repnz
rep
add
jmp
dec
xor
retf
or
pop
sub
cdq
cmc
test
xlat
and
das
(bad)
imul
aaa
(bad)
pusha
and
mov
fistp
sub
mov
lahf
out
or
popf
je
movs
pop
ret
xchg
mov
popf
scas
cli
ja
pop
fiadd
loopne
jecxz
xchg
in
adc
fadd
push
fdiv
pop
das
pop
call
xchg
pop
cs
shr
out
jle
pop
mov
lods
jge
cmc
imul
mov
mov
shl
sub
mov
jo
push
ror
jae
inc
sub
sub
stos
stos
xor
pop
mov
sub
sbb
xchg
in
sub
popa
rcr
pop
mov
retf
neg
xchg
fwait
bound
(bad)
hlt
in
push
stos
stc
cmp
adc
retf
cwde
mov
jp
and
dec
pusha
not
pop
jne
dec
inc
mov
xor
lds
stos
je
push
dec
ss
iret
xor
(bad)
mov
mov
cli
inc
(bad)
push
xor
ret
and
inc
fisubr
dec
xcrypt-ecb
cmps
lea
mov
ret
fisttp
jo
jmp
inc
out
push
pop
add
push
stos
sub
repz
xor
xchg
(bad)
movs
mov
dec
jg
clc
inc
xchg
ins
inc
xor
ins
call
les
shl
xchg
repnz
clc
sub
pop
lds
aad
fnstsw
in
push
cmp
data16
(bad)
or
(bad)
(bad)
in
add
jae
daa
jge
lahf
aas
jmp
test
mov
inc
and
test
aaa
pushf
in
mov
mov
aad
(bad)
mov
out
or
cmp
test
mov
sub
mov
sar
pop
mov
clc
aas
cmp
push
(bad)
mov
stos
cmps
ret
stc
bswap
mov
mov
jb
jbe
lods
pop
not
and
out
loopne
inc
sub
rep
rcr
sub
jns
xor
xor
dec
(bad)
ss
xchg
int
cwde
dec
cmp
add
sbb
pop
mov
fisubr
push
mov
cmc
jns
push
mov
scas
cmp
mov
ins
inc
push
test
out
mov
mov
leave
dec
loope
xor
push
pusha
sbb
stos
cmp
jmp
imul
(bad)
push
adc
mov
pop
lds
stc
jmp
cli
sbb
xchg
mov
sub
addr16
sbb
xchg
das
fs
jge
sbb
mov
fld
dec
add
fnstsw
adc
int3
lea
push
push
loopne
and
mov
call
lock
std
dec
aam
and
test
test
cld
or
sub
les
jnp
(bad)
adc
aaa
in
in
inc
inc
or
or
loope
pusha
inc
xor
call
fnstenv
jmp
dec
or
loop
shl
cs
jecxz
jmp
(bad)
bound
das
mov
adc
data16
in
cmp
mov
fnsave
aam
mov
int
inc
push
jo
inc
in
fistp
adc
xchg
fs
jno
fisttp
push
mov
nop
dec
inc
imul
lods
gs
mov
or
push
dec
das
adc
xchg
or
addr16
jbe
push
pop
xor
leave
jmp
aam
add
dec
add
inc
mov
iret
and
jno
xchg
mul
pop
ret
sub
test
(bad)
cli
adc
mov
cli
je
mov
ins
inc
push
ss
lds
dec
push
xchg
out
daa
cmps
and
popa
cli
loop
jmp
out
cmps
cwde
cmp
inc
adc
push
lea
push
push
ins
movs
rcr
das
jle
xchg
mov
or
lfs
loope
cmp
inc
mov
or
test
(bad)
iret
push
jmp
out
retf
mov
(bad)
mov
xchg
xor
neg
xor
(bad)
push
cld
dec
cmps
pusha
mov
add
cli
push
mov
loopne
or
and
sti
cmp
cli
mov
test
jbe
adc
cmc
imul
sub
es
jns
loope
sub
cmp
xchg
push
cwde
xor
mov
or
cmc
fist
lds
mov
adc
xchg
dec
jge
or
dec
jmp
js
cmp
call
das
mov
mov
ins
lds
mov
ja
cmp
and
and
ins
xchg
ins
mov
pusha
ins
inc
mov
sub
mov
pop
adc
adc
mov
je
inc
cdq
dec
cmps
mov
cld
mov
jbe
jo
sub
outs
div
cdq
sub
in
dec
ja
in
shr
addr16
ret
mov
xor
mov
stc
jecxz
aam
mov
push
cmp
push
push
sbb
pop
rcl
sbb
cs
cmp
jbe
fstp
xchg
and
movs
dec
or
std
add
mov
jne
aam
push
int
loope
aam
bound
dec
mov
push
out
xor
adc
xor
jg
and
xor
stc
cmp
imul
push
mov
adc
aad
gs
dec
daa
imul
repz
xor
fisttp
stc
pop
xor
jno
sub
fcmovu
xchg
dec
hlt
(bad)
xchg
xor
popf
sbb
push
push
adc
mov
pop
js
retf
aas
in
das
fwait
popf
jle
dec
call
adc
ins
clc
add
jp
dec
push
sub
mov
or
cmp
push
imul
pushf
and
and
data16
daa
dec
jmp
dec
nop/reserved
pop
leave
clc
dec
and
mov
mov
jle
mov
lods
data16
stos
rcr
fucomip
adc
scas
inc
xor
stos
call
call
lea
(bad)
mov
xor
cmp
pop
je
mov
xchg
jb
cmp
(bad)
fmul
mov
out
jp
mov
xchg
inc
xor
inc
add
xor
sahf
mov
scas
icebp
imul
prefetch
iret
fnstcw
dec
dec
call
jnp
hlt
cwde
sub
sti
sbb
(bad)
pop
ret
test
dec
sub
test
cmps
popf
and
jbe
ja
call
ins
fnstcw
mov
jmp
in
shl
mov
xlat
adc
xchg
lods
inc
out
or
adc
lods
cmc
imul
or
lods
pop
pop
daa
out
adc
popf
inc
inc
lock
xchg
std
hlt
jmp
jl
push
cli
(bad)
jge
jp
and
pop
in
in
dec
xchg
test
loopne
pop
aas
imul
shl
les
in
aaa
mov
sub
fsubr
retf
pusha
test
jg
add
jo
arpl
arpl
inc
add
mov
jecxz
dec
lea
xor
or
and
stc
or
mov
push
(bad)
lea
pop
jecxz
push
push
int
fld
in
ja
leave
pop
lods
jb
pop
push
dec
adc
mov
sbb
sub
mov
(bad)
out
dec
xor
mov
movs
jne
push
scas
mov
ds
pop
inc
aaa
inc
out
sub
and
clc
out
and
xchg
lods
push
or
jae
mov
(bad)
je
jbe
sar
dec
loope
sbb
pop
sub
into
dec
shr
cmp
sub
push
cmp
fisub
ret
adc
imul
mov
xor
fiadd
aam
into
jno
xor
mov
sbb
xor
mov
fcomp
imul
test
push
xchg
push
mov
pop
add
fcomp
xor
(bad)
sbb
mov
cdq
jl
mov
xchg
sub
push
fs
fsub
test
xor
mov
mov
sub
mov
jl
popa
push
xchg
mov
sti
(bad)
push
xchg
test
adc
shl
xor
pop
xlat
(bad)
jmp
aas
sub
jle
xor
mov
repz
push
add
in
mov
dec
das
sub
cs
mov
mov
pop
jnp
out
adc
nop
push
aam
(bad)
nop
movs
in
add
inc
sbb
xchg
xor
cmps
sar
fimul
pop
xchg
add
std
mov
dec
jno
xchg
push
push
hlt
repnz
(bad)
pop
cwde
sbb
cmps
adc
cmp
js
pop
dec
out
sahf
(bad)
sbb
loope
int3
ja
push
adc
stos
shl
push
(bad)
sub
mov
sbb
stc
or
jne
es
pushf
inc
mov
movs
fwait
dec
add
and
retf
inc
xor
fadd
cmp
jno
jp
ret
xchg
or
test
jnp
dec
cli
call
sbb
dec
cmps
hlt
mov
clc
jp
inc
out
fidiv
cmp
adc
retf
int3
xchg
ds
xchg
fldenv
je
mul
jmp
add
arpl
scas
lock
out
popa
add
push
(bad)
cmps
jl
inc
jle
mov
mov
mov
mov
inc
xor
pop
and
jmp
or
add
iret
popf
es
push
das
xchg
pop
rcr
xchg
or
xchg
jns
and
js
movs
sub
inc
cmp
xchg
dec
(bad)
mov
cmp
xchg
gs
movs
rcr
sub
test
adc
sub
popf
fmul
arpl
call
shr
shr
fwait
outs
cwde
jge
enter
test
pop
sub
(bad)
xchg
push
inc
ins
frstor
xchg
in
push
cmp
sub
mov
cwde
adc
xor
ja
jle
jne
rol
sbb
add
icebp
mov
and
(bad)
pop
aad
mov
test
push
or
loopne
sti
jb
jne
pop
mov
cdq
imul
fwait
inc
jp
xchg
loopne
xor
ds
scas
push
dec
shr
jl
(bad)
xchg
add
outs
adc
jp
rcl
or
cmp
mov
retf
out
jne
xchg
pop
cmps
inc
cs
iret
jg
jno
jno
cld
fwait
xchg
ins
mov
test
ds
jnp
stos
push
and
movs
into
pop
jmp
cwde
nop
mov
inc
pop
fadd
retf
mov
pop
addr16
and
jl
sbb
mov
cld
adc
clc
not
xchg
cld
inc
xor
inc
sub
call
inc
cli
div
loop
cmp
lock
push
dec
jl
mov
aas
add
sti
xor
popf
mov
jnp
pop
fcom
mov
mov
popf
push
fiadd
inc
xchg
jle
aas
xor
stc
xchg
jbe
add
add
pop
(bad)
fidivr
sti
mov
adc
cmp
jmp
jnp
sbb
pushf
shr
aam
push
cs
int
mov
fsub
stos
inc
xchg
adc
push
lods
xor
mov
sti
ret
pop
test
fild
jmp
icebp
xor
cmp
push
int
mov
cmp
push
je
in
mov
inc
(bad)
pop
add
fwait
pop
into
int
xchg
lods
loop
test
pusha
mov
into
xor
loope
das
dec
adc
repz
and
jno
unpcklps
pop
pop
push
sbb
add
es
xchg
loopne
xor
cmp
test
xchg
mov
cmc
in
jg
repz
lahf
xchg
sar
push
loope
pushf
lods
cli
jbe
jo
inc
test
lock
loope
mov
mov
out
je
into
cmp
and
pushf
pop
jmp
pop
xchg
mov
(bad)
int3
push
mov
xor
repnz
cmp
hlt
pop
bound
shl
enter
loop
out
pop
jae
mov
xor
and
ss
and
clc
sbb
pop
ror
add
lds
xchg
sbb
mov
push
or
mov
aas
retf
cmp
cmp
inc
mov
ja
push
lock
imul
leave
jecxz
jbe
sbb
xchg
sub
les
int3
in
(bad)
xor
jmp
xor
lods
lock
cwde
cdq
or
mov
out
xchg
nop
enter
jecxz
adc
ja
shr
or
aad
push
or
add
sbb
stos
repnz
mov
pushf
lods
int
daa
fidiv
(bad)
test
xor
les
ins
mov
out
int3
imul
fcomp
jne
aas
rcr
aad
mov
mov
inc
mov
mov
add
pop
mov
repz
ins
sub
imul
rol
add
icebp
daa
mov
sub
jnp
add
in
outs
add
(bad)
icebp
and
test
in
push
sbb
mov
pop
call
ret
push
mov
xchg
cmp
sbb
dec
out
in
and
mov
hlt
ret
sub
xor
adc
adc
js
js
fwait
(bad)
mov
pop
in
cmp
push
sub
dec
lea
cwde
mov
int
and
inc
dec
sahf
bound
cmc
aad
sbb
scas
sub
add
bound
sbb
jb
or
sub
call
adc
fdiv
cmp
inc
mov
pusha
js
cmps
and
fwait
cdq
push
or
mov
dec
cmp
call
arpl
push
sar
fdivr
sbb
pop
bnd
(bad)
push
nop
inc
ret
js
sbb
in
int3
lea
xor
shl
xchg
fmul
iret
xchg
cmp
repz
imul
les
(bad)
pop
dec
fist
shr
cmp
push
xchg
aas
jmp
jle
repz
mov
retf
cdq
sub
fdivp
sub
cmp
shl
dec
inc
xchg
hlt
pop
stos
sbb
mov
push
mov
mov
in
cmp
out
ficomp
js
push
mov
and
sbb
fnstsw
loop
popf
dec
jmp
xor
xor
mov
repnz
repnz
adc
mov
pop
jl
sbb
add
pop
cmp
mov
daa
lock
inc
mov
and
mov
add
xchg
ins
nop
dec
push
fisub
nop
les
mov
and
stc
mov
and
test
ins
call
xchg
push
pop
fisttp
sbb
out
outs
xchg
jle
and
in
clc
push
and
fs
adc
jp
rcl
jmp
dec
inc
test
pop
xlat
mov
retf
and
nop
ret
aad
sahf
fmul
mov
rol
sbb
outs
mov
std
and
popf
dec
das
mov
cmp
jns
inc
pop
mov
daa
adc
(bad)
imul
add
jmp
dec
popf
bound
mov
test
pop
pop
jl
in
in
xchg
cmp
(bad)
sti
mov
push
pop
pop
pop
ins
push
push
xor
jmp
mov
imul
jg
inc
fwait
aad
push
jnp
dec
cmp
mov
jg
js
sahf
mov
push
push
mov
pop
shl
ss
adc
sbb
or
test
mov
mov
push
xchg
cmps
dec
jg
mov
sbb
or
push
sbb
shr
jle
and
dec
(bad)
and
pop
lock
mov
inc
in
xor
call
(bad)
pusha
jg
imul
mov
in
xor
retf
icebp
cmps
adc
sahf
mov
shr
push
mov
mov
pop
in
ins
rcl
mov
sbb
clc
inc
or
jp
and
or
push
xor
sbb
mov
sub
aad
and
std
xor
rcr
in
fdivr
enter
movs
push
cdq
shl
sub
xor
sub
jns
push
(bad)
fist
mov
sar
stos
mov
(bad)
enter
jge
xchg
std
adc
sbb
dec
dec
jb
push
inc
(bad)
sar
xor
scas
xchg
and
dec
add
jmp
je
aad
sub
push
pop
push
cmc
pushf
pushf
xchg
outs
jae
pusha
pop
fld
fiadd
cmp
mov
icebp
fsubrp
test
(bad)
jmp
sbb
mov
jl
lahf
not
xchg
cmp
jecxz
sub
in
repnz
fnstenv
mov
in
adc
les
xchg
scas
pop
push
and
loopne
cld
dec
inc
lods
push
xchg
gs
sub
push
push
push
(bad)
or
cmp
fwait
int3
or
repnz
movs
dec
push
mov
jo
adc
jnp
push
jno
(bad)
fisub
cmps
xchg
dec
arpl
pop
loopne
pop
jns
jo
leave
test
icebp
fdivp
adc
mov
movs
mov
push
pop
jecxz
push
ret
in
mov
call
mov
cli
mov
jno
scas
xchg
pop
jb
mov
xor
add
inc
das
mov
dec
dec
stos
rol
fwait
xchg
pop
loop
ja
add
ret
mov
adc
hlt
(bad)
push
in
loopne
movs
pop
xchg
aam
sbb
mov
cmp
push
(bad)
int
inc
push
lods
test
cs
(bad)
pop
pushf
xchg
cmp
(bad)
sbb
in
div
imul
js
or
neg
dec
in
test
out
adc
aas
(bad)
jmp
test
cli
mov
dec
jle
mov
mov
cmc
add
cmp
push
lods
rol
lods
mov
pop
rcl
adc
in
retf
jmp
out
adc
ja
cwde
fcom
(bad)
retf
ds
test
neg
mov
or
mov
xchg
jns
xchg
jg
iret
popf
cmps
mov
mov
dec
cs
jb
or
lods
jge
mov
int3
ret
inc
cmp
std
and
pop
stos
(bad)
lock
ds
mov
mov
retf
push
scas
and
retf
mov
cmp
xchg
or
ret
pushf
clc
pop
repnz
pop
rol
std
sub
xchg
sbb
stos
dec
xchg
cmp
imul
bound
mov
sub
lock
add
js
lea
ds
lea
(bad)
sub
add
aam
and
sbb
xchg
mov
in
in
xchg
adc
ret
sbb
test
pop
xor
ins
and
jns
idiv
pop
sbb
aad
scas
rol
xor
(bad)
or
dec
mov
pop
fwait
mov
popf
and
adc
adc
mov
push
shl
xchg
addr16
pop
not
shl
(bad)
std
adc
inc
in
cmc
cmp
mov
dec
ficomp
sbb
xchg
mov
adc
pusha
sbb
ficom
test
push
in
and
ret
ins
popf
hlt
jle
leave
inc
test
call
push
dec
aaa
jge
out
scas
test
mov
bnd
int
cmps
ror
test
in
stos
loopne
sub
and
xchg
mov
dec
push
jo
ins
pop
sahf
inc
cmp
sub
mov
shl
popa
sbb
fistp
jns
out
scas
pushf
push
dec
or
imul
add
aam
ds
jo
or
leave
and
adc
arpl
and
mov
mov
aad
mov
adc
xchg
cmp
fs
inc
retf
mov
push
cmp
ds
cli
mov
mov
loope
std
fdiv
pop
cs
push
adc
add
mov
pop
shl
stos
pop
xchg
dec
push
jle
out
enter
stc
rcl
sub
nop
sub
loop
fcom
push
ds
xchg
dec
pop
repz
movs
xor
dec
jle
out
int3
outs
pop
jns
scas
jnp
pop
mov
repnz
call
or
out
fsubr
out
(bad)
aam
(bad)
fstp
scas
je
dec
popa
xor
pop
jno
out
cwde
pop
fist
mov
popa
xlat
mov
repz
xchg
outs
out
pop
or
pop
mov
cdq
aad
add
sbb
mov
into
cli
jecxz
mov
movs
or
add
aaa
out
xor
cmps
or
cmp
ds
movs
out
test
ins
repnz
(bad)
shl
inc
test
pusha
and
mov
cmc
ins
cld
ins
push
hlt
cmp
dec
lock
jge
jmp
mov
fcmovb
and
or
cmp
add
popa
mov
dec
sbb
cli
stos
cli
lock
adc
shr
adc
xchg
mov
ret
out
adc
dec
inc
and
scas
cmp
adc
test
sbb
fdiv
push
lahf
repz
inc
ins
ret
int
inc
ja
mov
pop
fisubr
and
fstp
sbb
adc
adc
inc
dec
fadd
ss
mov
and
push
lods
inc
aam
jne
cmovno
sar
jmp
add
xchg
mov
sub
sahf
mov
push
fdiv
add
adc
and
jns
jle
pop
not
call
cmp
push
popa
daa
mov
sbb
test
arpl
std
aas
movs
fldenv
jge
lahf
mov
aaa
pop
lods
std
bound
adc
add
movs
sbb
ins
sbb
xchg
cmp
pop
fsub
sbb
ret
pop
or
pop
pop
(bad)
xor
scas
gs
fidiv
stc
pop
outs
adc
mov
fistp
or
mov
pop
mov
add
inc
dec
in
inc
retf
or
(bad)
mov
imul
jne
stos
mov
leave
jmp
inc
rol
jp
pop
dec
adc
(bad)
add
mov
sbb
push
inc
retf
sub
popa
mov
cmp
fcmove
mov
mov
jo
into
inc
mov
fld
fimul
pop
popf
add
fadd
inc
cmc
cmp
adc
fcom
popa
pop
xchg
clc
js
cmp
ret
mov
push
pop
inc
loopne
shl
cs
mov
sbb
jl
dec
test
xor
imul
cmp
mov
mov
sub
aaa
jge
in
adc
fidivr
jp
dec
inc
adc
fidiv
shl
fwait
sub
jp
pop
int
xor
stos
xchg
data16
cmp
dec
mov
push
jle
pusha
cwde
and
out
stc
int3
loop
sbb
shr
ret
xchg
repnz
dec
push
mov
mov
scas
repnz
mov
mov
pushf
push
xchg
(bad)
mov
call
es
shl
mov
(bad)
adc
jns
sbb
or
mov
mov
inc
or
xor
inc
jne
sub
into
adc
mov
cdq
xchg
push
inc
inc
lods
xlat
dec
loope
xchg
addr16
out
repz
loop
jne
call
push
(bad)
xor
inc
and
rcl
inc
cmp
and
jne
imul
movs
xchg
sbb
xor
adc
clc
test
xor
mov
fcomi
xor
mov
in
mov
or
out
scas
dec
xchg
dec
adc
int3
mov
int
ficomp
cmp
pop
push
hlt
sub
pop
lods
stc
inc
imul
aas
pop
js
push
and
es
movs
adc
cmp
call
into
cmp
aas
xlat
inc
dec
or
mov
mov
imul
xchg
pusha
jo
out
clc
jle
sbb
sbb
pushf
popa
arpl
ds
test
shl
ds
xchg
lea
ret
scas
loop
mov
popf
pop
test
sub
jge
pop
xchg
add
popa
fadd
jns
es
mov
mov
(bad)
lods
mov
retf
push
xor
das
js
pushf
cmp
mov
or
jno
ret
push
or
cdq
dec
aad
adc
fmul
xlat
mov
push
cmp
es
mov
loopne
jmp
fdivr
and
aas
xchg
sub
movs
cmp
test
mov
pop
shl
mov
int
imul
pop
enter
ds
mov
pop
sub
das
xor
jns
in
shl
loope
fcmove
mov
(bad)
lock
cmp
jge
push
pop
clc
xor
cwde
mov
mov
lock
ss
jne
push
sbb
mov
call
inc
cmp
xchg
mov
ja
dec
js
mov
xor
test
mov
pop
xchg
mov
imul
(bad)
cli
ror
pop
cmp
jo
inc
pushf
sbb
adc
pop
mov
sti
push
sub
loop
ret
loop
repnz
sub
es
push
sbb
and
dec
mov
xor
js
cmp
(bad)
jae
stos
dec
fimul
jae
mov
mov
push
jmp
jl
jo
jge
cmp
cmp
cli
mov
or
lahf
enter
mov
out
scas
push
pop
enter
jo
adc
stc
xlat
stc
pusha
mov
cmc
cwde
sub
pop
outs
mov
or
in
push
jle
shl
out
test
jmp
imul
mov
jno
ds
lods
fadd
(bad)
lahf
jge
stc
sbb
mov
mov
lds
shl
and
jg
mov
call
loope
mov
mov
test
jmp
fisttp
fsub
cdq
hlt
pop
sub
daa
mov
sub
test
(bad)
repnz
mov
scas
cld
or
les
sub
pop
xchg
sysexit
cdq
dec
std
stos
not
mov
fist
in
push
lods
loopne
ins
lahf
je
sub
dec
mov
mov
stos
mov
test
mov
jne
pop
repz
sbb
push
adc
cmp
jg
aad
or
cmp
(bad)
aad
test
iret
in
push
fmul
les
mov
sub
iret
fild
ret
out
mov
ficom
ret
paddw
and
or
mov
or
jmp
sub
adc
ja
std
dec
push
jle
jecxz
mov
cmp
sub
mov
in
rol
dec
mov
(bad)
inc
jmp
jne
in
lock
movs
mov
sub
sbb
push
stos
push
xchg
arpl
sahf
popa
test
mov
cmc
and
das
bound
cmc
xor
sub
lock
lods
sbb
fdiv
ins
fdivp
outs
mov
inc
dec
or
sbb
jl
push
out
and
addr16
pop
pop
mov
add
xchg
sbb
lea
or
sbb
pushf
jle
xor
loop
leave
xor
ins
out
cmc
cdq
fs
pop
jbe
pop
out
adc
mov
xor
xchg
(bad)
cwde
mov
loop
push
add
or
(bad)
pop
loop
pop
out
sti
aam
mov
ficom
or
imul
mov
mov
fdivr
sbb
scas
adc
mov
mov
adc
add
hlt
push
ja
xor
add
cmp
cld
jbe
adc
aaa
push
and
adc
mov
adc
aam
dec
idiv
rol
lds
outs
outs
jns
movs
fwait
add
mov
and
(bad)
or
(bad)
clc
(bad)
pushf
inc
xchg
push
js
jge
cmp
fisub
and
fmul
out
pop
cs
fcom
xchg
retf
xor
(bad)
lods
mov
stos
outs
shl
add
imul
pop
jl
push
jno
and
(bad)
jne
inc
xor
fwait
movs
pop
mov
out
push
jle
sbb
psubw
scas
sub
xchg
mov
inc
jg
adc
xor
in
shl
xor
mov
dec
dec
dec
arpl
pop
push
aaa
add
scas
pushf
into
inc
dec
sbb
out
jmp
ss
push
dec
dec
lea
push
mov
inc
enter
sbb
mov
dec
push
mov
idiv
sahf
mov
xchg
repz
jns
retf
ret
aam
xchg
daa
outs
inc
sub
dec
cmp
lahf
mov
push
sar
xchg
add
sub
int
shl
push
mov
loope
ret
int3
xor
in
test
fisubr
call
push
pop
in
sbb
fsub
push
jnp
mov
inc
stc
dec
pop
mov
add
pop
add
xchg
fucomp
mov
popf
pushf
nop
imul
into
add
or
push
fnsave
in
dec
xchg
mov
jmp
jmp
xchg
cwde
push
adc
int3
push
inc
and
and
dec
xor
lea
inc
clc
fidivr
pop
(bad)
mov
inc
les
out
lea
jno
(bad)
adc
inc
scas
fistp
pop
mov
add
mov
pop
nop
pop
out
xchg
inc
sahf
test
dec
cmp
sub
cmp
xchg
clc
and
mov
mov
ficom
mov
and
ds
inc
cmp
loope
adc
adc
sub
(bad)
push
cmp
shr
add
and
popa
es
rol
sub
adc
pop
es
sbb
push
xchg
daa
or
sahf
mov
mov
inc
ficomp
adc
sub
pop
neg
add
mov
(bad)
fisub
xchg
inc
jns
(bad)
mov
into
sbb
xor
jae
lahf
sub
jmp
jmp
or
hlt
and
push
in
test
xchg
sbb
dec
inc
retf
aad
ret
sbb
jmp
je
inc
xchg
fldenv
push
imul
cmp
mov
jno
mov
and
cmps
sbb
lods
jmp
je
in
or
mov
sbb
mov
mov
out
imul
(bad)
xchg
mov
loop
or
test
out
fwait
mov
xor
xchg
adc
pop
mov
push
pop
jge
jp
pop
mov
pop
test
push
pop
jno
xchg
cmp
mov
les
ficom
ret
mov
movs
pop
sbb
(bad)
mov
jae
push
scas
cwde
inc
shl
rcl
cwde
call
retf
mov
(bad)
fnstsw
daa
cdq
les
jno
jno
pop
cli
xor
xchg
leave
dec
mov
loopne
sub
push
out
mov
out
mov
pushf
adc
nop
push
test
lahf
into
icebp
inc
popf
pop
sbb
add
cli
call
mov
mov
test
jmp
scas
sahf
inc
icebp
xor
mov
mov
pushf
jno
jns
frstor
shrd
push
sub
xor
mov
enter
and
inc
cwde
xor
pop
inc
push
adc
push
adc
out
jg
xchg
dec
(bad)
mov
test
mov
pushf
mov
out
(bad)
leave
(bad)
xor
aaa
rcr
push
mov
adc
pop
pop
push
cmc
xchg
cwde
fistp
jno
mov
sub
fisubr
int
bound
mov
sub
cmp
adc
push
fild
(bad)
or
sbb
push
inc
mov
ret
call
xchg
sahf
(bad)
push
mov
mov
in
jecxz
rcl
cdq
inc
fidiv
jb
jno
add
scas
pusha
jo
pusha
push
je
pusha
dec
movs
test
xchg
mov
xchg
in
inc
xchg
int3
add
mov
fadd
mov
lods
in
jmp
das
mov
rcr
scas
addr16
mov
sub
pop
movs
aam
into
xor
ret
sahf
adc
push
repnz
xchg
shl
scas
imul
mov
jb
fsubr
das
add
test
jg
std
adc
inc
and
fidivr
(bad)
gs
ror
ret
sti
setp
cmp
cmps
cld
jnp
adc
or
retf
push
sbb
sub
xchg
jnp
adc
out
inc
or
jmp
cmp
sub
dec
(bad)
in
jp
addr16
xlat
rcl
pusha
retf
ins
mov
repnz
scas
jnp
(bad)
iret
dec
jae
mov
das
mul
xchg
pop
adc
leave
adc
inc
add
es
mov
(bad)
sbb
push
lahf
push
clc
mov
or
rcl
xchg
aad
dec
scas
lds
inc
daa
(bad)
fist
inc
movs
js
imul
adc
push
adc
adc
inc
fs
int3
lods
mov
loop
xchg
stos
inc
into
leave
dec
inc
push
repz
ds
pop
bound
sub
dec
popa
xor
addr16
ja
sbb
call
scas
adc
sbb
es
test
push
shr
pop
fimul
out
jne
jle
push
lock
leave
cld
(bad)
pop
rol
sbb
mov
dec
(bad)
push
loop
imul
push
pushf
inc
sbb
jl
fnstcw
mov
nop
lods
jb
outs
mov
xchg
sub
aaa
xchg
jmp
mov
xchg
cmp
mov
data16
test
push
sbb
lods
mov
pop
pop
pop
mov
jnp
adc
icebp
into
jns
or
aas
push
fisttp
dec
mov
ins
mov
push
loop
pop
push
mov
mov
movs
adc
push
adc
fist
xor
xchg
sbb
ins
sahf
or
cmp
movs
cld
xor
rol
push
lock
lock
sbb
movs
and
sbb
ss
inc
sub
or
test
jl
stos
and
scas
mov
xor
or
sbb
enter
add
mov
xor
cmp
cmp
call
mov
in
lock
cwde
sub
aam
call
jne
inc
push
cs
pusha
push
js
imul
jae
outs
in
ss
les
(bad)
repz
rcr
ror
add
xor
push
cs
inc
enter
add
cmps
sub
xor
mov
out
retf
push
sub
out
mov
(bad)
popa
jb
shr
out
mov
(bad)
xchg
aad
jmp
mov
arpl
in
dec
add
dec
and
mov
aad
push
mov
sub
pop
and
dec
loope
jmp
dec
mov
idiv
lods
scas
cmp
sub
mov
dec
and
add
test
dec
mov
sar
loop
push
aas
inc
and
lds
xchg
fnstenv
mov
popf
mov
cmp
dec
and
hlt
es
add
mov
sub
pop
leave
mov
jecxz
enter
in
sub
or
aaa
jno
in
adc
jns
ret
xchg
fwait
inc
in
lock
xor
mov
sti
adc
outs
cli
pushf
pop
pop
sahf
sub
sub
sub
int
movs
xor
inc
xor
and
adc
or
(bad)
sbb
xchg
(bad)
jle
mov
mov
test
imul
repnz
jmp
adc
test
jae
shl
in
sahf
cmp
mov
cwde
(bad)
jno
enterw
scas
or
cmp
cs
inc
cld
adc
adc
jp
pop
sub
jecxz
or
scas
scas
loope
or
jne
call
test
mov
stos
ret
imul
pop
mov
jb
sbb
dec
lds
jo
cld
xchg
mov
cs
outs
xchg
xchg
test
hlt
gs
push
mov
xor
lock
or
jb
xchg
pop
jp
xor
inc
jo
xor
mov
movs
mov
sub
ret
mov
outs
xor
sbb
lock
imul
and
loope
mov
push
jle
push
popa
and
jnp
scas
sbb
out
push
ja
xor
movs
cli
icebp
lds
sbb
push
mov
sbb
add
inc
call
or
add
movs
adc
mov
xchg
mov
(bad)
call
dec
push
sbb
lds
sar
int
in
sahf
stc
mov
and
rcr
mov
(bad)
add
pop
(bad)
out
jg
xchg
sub
call
retf
addr16
int
dec
lahf
cli
data16
aas
dec
xchg
dec
nop
jne
data16
jecxz
pop
cmp
pop
arpl
xchg
leave
pop
gs
jo
repz
(bad)
ins
pop
mov
js
sbb
dec
and
stc
out
mov
jp
pop
pop
dec
jmp
cli
jno
cld
(bad)
hlt
push
je
inc
xor
pop
jecxz
jne
and
ds
loopne
daa
add
xlat
lods
mov
or
mov
jl
fs
mov
xor
or
push
imul
scas
sub
test
mov
dec
les
xor
in
nop/reserved
mov
or
xchg
aas
and
(bad)
push
test
inc
mov
lods
test
dec
repz
movs
push
sub
shl
xchg
imul
push
es
int
iret
adc
or
fnsave
mov
hlt
lahf
xchg
pop
sub
addr16
xor
xor
daa
mul
and
fs
(bad)
push
das
push
inc
xchg
push
adc
mov
add
pop
enter
das
imul
push
mov
lods
or
xchg
imul
mov
pop
(bad)
std
js
in
mov
and
in
sbb
fsubr
cmc
inc
inc
cli
clc
xor
outs
add
sub
loop
retf
fiadd
xor
bound
and
mov
sub
xchg
push
and
pop
dec
loope
test
xor
std
add
ret
inc
or
and
rcl
das
and
icebp
dec
pop
add
mov
mov
and
dec
add
sbb
lea
stos
mov
ds
adc
out
jmp
adc
jno
mov
ins
fisttp
pop
sbb
mov
sub
stos
mov
pop
call
add
add
cmc
(bad)
es
out
dec
and
sub
sti
fdiv
enter
jae
inc
jmp
mov
fs
adc
out
in
hlt
and
shl
mov
repz
div
push
std
mov
jmp
scas
jo
fwait
stos
es
fild
mov
aas
sub
popf
popa
sti
xchg
pop
push
imul
stc
sbb
xor
jne
dec
or
dec
jns
add
xchg
jne
popa
retf
push
(bad)
push
jns
mov
rol
ins
add
leave
jbe
adc
xor
xchg
mov
xor
sbb
aad
jmp
lea
push
into
jg
dec
mov
and
cmp
or
fdiv
fmul
push
cs
fs
and
xor
fsub
(bad)
dec
pushf
ds
in
sbb
loop
jne
hlt
ret
clc
xchg
inc
fstp
out
xchg
pop
clc
xchg
push
fwait
mov
in
in
xchg
dec
push
push
ss
jmp
bound
fadd
or
aaa
dec
cmps
test
cmp
and
mov
mov
pushf
xchg
bound
fidiv
icebp
popf
leave
imul
(bad)
mov
pop
call
mov
inc
push
popf
push
retf
loopne
div
pop
cwde
inc
xchg
std
pop
hlt
push
in
cmp
fisubr
lods
xchg
ret
dec
adc
xchg
iret
and
repnz
and
pop
mov
jo
cmp
mov
pop
mov
pop
mov
int
sub
and
push
jle
ss
jle
in
cld
mov
das
jbe
inc
fcom
lods
pop
add
pusha
jns
(bad)
aad
jnp
(bad)
xor
je
loope
scas
xor
push
mov
out
mov
and
or
add
cdq
js
push
test
in
cdq
fwait
mov
shl
or
pop
sub
pop
add
xchg
cdq
mov
fs
(bad)
mov
sbb
jle
mov
cmc
test
jne
ror
adc
pop
mov
repz
movs
mov
sbb
add
cmp
cmp
dec
js
js
sbb
cmp
sub
cld
icebp
lea
es
mov
mov
adc
xchg
cmp
mov
mov
outs
pop
loop
mov
and
or
dec
sbb
cmp
dec
loope
hlt
adc
sbb
cwde
lock
(bad)
sti
cmc
popf
and
fisubr
ret
lea
nop
js
pop
inc
mov
retf
xor
aad
xchg
jnp
mov
jno
lahf
jmp
stos
jg
cmp
mov
lds
ins
aad
or
fst
inc
xchg
sbb
dec
data16
jle
rcr
shl
scas
pop
sub
inc
data16
stos
das
(bad)
frstor
call
xchg
jmp
mov
or
mov
adc
lods
retf
(bad)
int3
pop
xor
js
ins
lahf
add
dec
sbb
jmp
ror
mov
into
out
sbb
in
repz
iret
jmp
push
test
loop
mov
cld
or
mov
sub
jecxz
push
jmp
and
jg
enter
xor
push
pushf
retf
mov
xor
pushf
out
aas
and
out
mov
xchg
mov
sub
ffreep
retf
dec
das
fild
inc
mov
or
jb
cmps
je
inc
jmp
arpl
fdivrp
es
lahf
adc
jo
jmp
(bad)
rcl
push
mov
add
fs
mov
call
bound
xlat
ret
mov
cmp
push
dec
data16
lahf
lock
les
mul
fbstp
pop
aaa
sar
cwde
movs
ret
(bad)
aaa
gs
adc
xor
pop
and
fisubr
pop
push
or
xchg
jae
lock
test
mov
sub
jb
je
test
and
dec
sahf
push
mov
add
popa
aam
xchg
cli
lea
mov
in
ins
outs
xchg
mov
hlt
stc
ror
daa
fstp
inc
add
neg
test
stos
leave
imul
outs
pop
mov
inc
into
push
cwde
xlat
push
add
(bad)
xchg
push
inc
push
dec
cmps
xor
fidiv
sbb
(bad)
in
xchg
sub
je
sar
ja
jmp
push
mov
jno
imul
inc
clc
mov
or
cmps
push
call
loop
cmp
fwait
pop
sub
dec
push
cmp
loopne
ds
enter
inc
push
sar
js
stos
retf
adc
sbb
and
xor
out
(bad)
mov
add
dec
aaa
add
pushf
test
movs
por
fnsave
cmp
retf
push
pop
fisub
(bad)
int
ins
aas
scas
jmp
dec
fldenv
fimul
imul
add
mov
mov
daa
les
cmc
xlat
xchg
jo
jp
inc
call
imul
(bad)
shr
lods
inc
cld
or
mov
mov
aam
dec
push
cmps
sub
pop
mov
(bad)
mov
push
push
mov
dec
mov
les
fld
jns
cwde
inc
inc
call
pop
push
lods
jne
sub
cmp
into
mov
in
cwde
lods
or
ins
jge
mov
dec
scas
xchg
mov
or
mov
dec
mov
mov
aas
in
fprem
xor
dec
ret
in
int
mov
inc
hlt
into
das
in
outs
pop
(bad)
inc
test
mov
mov
rcl
pop
loope
jg
pop
pop
or
xchg
and
mov
call
fnop
jo
icebp
and
scas
push
sbb
loop
jnp
and
fwait
xor
imul
into
dec
add
(bad)
mov
hlt
mov
add
pop
jecxz
jp
stc
int
cld
lods
adc
outs
movs
mov
(bad)
cld
stos
addr16
fsubr
aad
dec
mov
ds
pop
(bad)
push
mov
mov
in
pop
int3
std
pop
inc
lea
scas
jmp
mov
pop
push
or
sub
sub
sar
cmp
lods
ror
mov
push
sahf
(bad)
jns
add
cmc
and
mov
frstor
inc
mov
push
retf
les
inc
dec
mul
cmp
xchg
jge
mov
adc
push
je
add
stos
mov
mov
test
mov
sub
sar
scas
frstor
mov
ret
sub
xlat
sbb
add
iret
mov
pop
pop
push
sbb
xor
push
add
jne
jnp
bound
and
adc
in
push
pop
jb
pop
push
adc
xchg
stc
test
pop
stos
cmp
push
jmp
sbb
leave
rcl
sbb
xor
lahf
stos
je
cmps
test
fstp
leave
adc
cs
(bad)
fstp
xchg
scas
repz
mov
sbb
cmp
scas
pusha
sub
add
out
shr
push
pop
adc
inc
mov
sahf
dec
jecxz
dec
or
mov
bound
arpl
adc
cmp
sahf
out
shr
dec
fistp
imul
mov
sbb
int
xchg
iret
sub
ss
dec
and
pop
std
cmp
pop
mov
test
push
and
push
dec
push
popf
test
xor
hlt
xchg
mov
cs
int3
push
cmps
or
loopne
inc
and
out
mov
js
in
rol
sub
and
sbb
add
sahf
mov
jbe
fstp
mov
call
loopne
out
add
lahf
jle
outs
sub
adc
sbb
in
(bad)
mov
test
jo
not
mov
je
call
std
iret
retf
sub
(bad)
fadd
inc
scas
mov
push
or
out
sub
and
sar
in
icebp
mov
xor
cwde
fcomp
imul
test
or
das
shl
jns
xor
das
jmp
push
mov
mov
push
add
out
call
and
mov
and
pop
inc
call
test
cmp
mov
das
hlt
scas
test
mov
jmp
js
fst
imul
sar
cmps
popf
loope
pop
js
mov
cli
lock
pushf
xor
pop
popa
loop
fmul
mov
repnz
mov
jl
dec
adc
vmwrite
gs
cvtps2pd
lods
sub
xor
pop
call
lahf
jle
sbb
xor
lds
outs
jb
pop
dec
and
sbb
sbb
ror
push
and
dec
cmps
and
xchg
mov
and
inc
and
ret
inc
enter
inc
cli
out
outs
mov
out
in
mov
enter
inc
and
retf
outs
cmp
push
sbb
mov
mov
dec
aas
push
dec
icebp
sub
xor
mov
stos
sahf
fdiv
fdivr
jno
sbb
sahf
sub
(bad)
sbb
hlt
vmulpd
pop
pop
add
repnz
add
adc
icebp
sbb
cli
xchg
mov
lahf
loop
cld
dec
enter
icebp
jns
or
(bad)
retf
xchg
jl
mov
xchg
inc
lahf
cmps
add
pop
xlat
push
fwait
int
std
push
or
inc
xchg
mov
gs
xchg
sub
ds
add
mov
inc
mov
jp
jecxz
push
push
enter
loopne
stc
syscall
jmp
movs
jp
mov
or
int3
push
jmp
ins
not
or
lds
mov
or
pop
sbb
(bad)
hlt
fs
shl
mov
adc
sbb
mov
push
cmp
arpl
inc
int
jmp
fucomi
jmp
pop
mov
inc
iret
out
cmp
xchg
jp
xor
ret
push
addr16
sub
inc
jns
xchg
sbb
adc
fwait
rol
push
adc
xchg
test
(bad)
sbb
cli
(bad)
or
fisubr
cli
pop
rep
xchg
in
test
pop
push
out
(bad)
leave
pop
ja
jle
scas
outs
inc
add
sbb
movs
and
mov
jl
jnp
enter
xor
jo
mov
xchg
mov
xor
stos
test
pop
adc
inc
adc
and
push
add
scas
jmp
ja
xor
pop
adc
and
(bad)
out
and
jnp
mov
xor
fs
mov
jp
mov
stos
add
call
inc
arpl
mov
mov
xor
push
js
adc
fnstenv
subps
movs
mov
ja
sbb
mov
push
(bad)
jge
inc
(bad)
aam
sbb
cmp
mov
add
movs
aad
pop
into
xchg
je
push
fisttp
out
retf
dec
fs
jb
mov
and
pop
test
inc
jecxz
and
stos
or
pushf
mov
cli
(bad)
sbb
repnz
cdq
mov
retf
mov
and
push
mov
add
add
dec
daa
jl
add
jnp
sub
mov
mov
xlat
aaa
cli
or
or
xchg
cmp
cmps
dec
(bad)
cdq
pop
movs
imul
mov
or
or
je
xor
lock
adc
sbb
fwait
aaa
inc
xchg
(bad)
bound
pop
push
pushf
add
rcr
aas
add
inc
sti
jmp
popf
movs
sbb
and
or
arpl
movs
pop
xor
jae
pusha
sbb
jmp
mov
xchg
xor
push
enter
xchg
sbb
and
in
pop
sub
fsubr
ins
nop
inc
adc
fwait
sbb
xchg
cmp
push
mov
lock
in
out
lea
add
xchg
or
push
nop
adc
ret
clc
aaa
jl
movs
fild
call
fwait
jmp
jecxz
test
inc
mov
jns
push
pop
aad
cmp
jmp
aad
xchg
int3
xchg
dec
imul
fstp
lock
sub
retf
into
(bad)
push
lds
dec
(bad)
repz
mov
push
jmp
pop
jle
cmc
cdq
or
jg
into
mov
call
mov
mov
data16
pop
retf
xlat
mov
sub
sbb
shl
in
jno
and
jbe
jne
call
repnz
test
jb
cmps
test
jmp
jle
adc
push
inc
dec
jbe
add
jne
xor
xchg
out
inc
fadd
mov
enter
cmp
int
mov
mov
mov
imul
in
test
mov
ja
add
push
xor
jbe
sub
bound
and
aam
mov
cmp
push
sbb
std
fcmove
sub
aam
pop
push
push
pop
fwait
sbb
popa
cmp
mov
mov
pushf
xor
into
clc
or
out
cmp
retf
aad
repz
mov
cld
(bad)
jecxz
or
loopne
out
je
scas
mov
mov
mov
stos
jae
imul
or
jne
dec
lods
in
jns
push
ins
jnp
sar
xor
dec
je
push
stc
sbb
dec
add
lock
xor
jnp
xchg
repz
add
lahf
lahf
and
stos
jns
inc
jae
retf
cmp
(bad)
mov
(bad)
or
sbb
clc
test
stos
rol
std
cmps
pop
pop
add
sbb
stos
mov
sbb
pop
mov
int
cld
fsub
pop
not
mov
int3
or
push
jne
mov
test
fadd
stos
shr
adc
ret
ins
jmp
dec
mov
add
mov
ins
repz
or
aas
cmps
adc
and
jg
add
sahf
or
call
mov
cmp
je
cmps
jns
mov
and
fimul
js
pop
aas
ret
popa
push
add
xor
sub
cmp
inc
inc
cmp
xchg
jmp
mov
stos
inc
je
stos
and
sbb
dec
inc
mov
js
aad
cmps
addr16
cld
dec
je
fist
jbe
jg
jge
aam
cli
outs
inc
not
jle
add
push
xchg
sbb
mov
loop
or
repnz
pop
pop
inc
push
scas
lods
jge
mov
xor
out
jecxz
xchg
mul
or
stos
rcr
imul
dec
inc
rol
iret
(bad)
rcr
push
fist
shl
fisubr
test
ror
cmc
(bad)
sub
js
inc
cmc
outs
or
sbb
jns
and
xor
jmp
cmp
cmps
mov
in
push
jp
cmps
sub
outs
push
jnp
movs
mov
in
adc
and
loop
jl
jmp
add
and
dec
jl
das
sub
pop
xor
cmp
outs
call
lea
gs
xchg
aas
push
or
and
adc
mov
fimul
mov
dec
iret
xchg
gs
aaa
stos
mov
(bad)
xor
mov
jmp
aad
loop
lods
test
fsubr
mov
into
imul
sub
sub
int
push
push
mov
mov
test
jne
xlat
sbb
fwait
data16
xchg
jg
mov
pop
jns
mov
test
xor
int3
dec
inc
jle
fistp
adc
lods
data16
push
popa
jno
repz
mov
and
pop
dec
pop
xchg
cwde
jle
jl
mov
push
or
imul
fstp
mov
mov
stc
pop
xchg
ret
ds
imul
loop
push
xchg
aas
jnp
push
in
add
pop
xor
scas
movs
arpl
sbb
push
mov
add
(bad)
sbb
aad
lahf
inc
mov
lods
mov
jno
inc
mov
mov
mov
mov
mov
push
(bad)
loope
js
dec
call
int3
adc
les
mov
xchg
imul
data16
lods
popa
push
adc
mov
xor
arpl
out
test
or
pop
or
sbb
rcl
hlt
stos
fidivr
inc
jns
xor
cmc
shl
adc
pop
lds
pop
add
mov
daa
or
in
ins
xchg
ret
xor
push
test
jmp
inc
mov
loopne
(bad)
(bad)
std
mov
adc
in
adc
repnz
call
mov
mov
xor
cli
jnp
xchg
out
(bad)
cmp
mov
rcl
rcl
test
int3
mov
pop
pop
neg
push
add
retf
sahf
sar
adc
les
sub
aam
pop
rol
int3
int3
int3
out
jne
push
dec
addr16
jge
jg
sti
hlt
inc
cli
or
pushf
cmp
das
mov
in
adc
push
(bad)
jo
mov
stos
add
aas
jne
mov
cmp
mov
jne
into
mov
shl
sbb
push
inc
sbb
add
or
dec
xchg
nop
push
push
retf
ja
mov
ss
es
push
mov
xchg
sbb
push
and
enter
dec
fild
push
fstp
sbb
loop
push
out
es
fistp
stos
outs
mov
and
movs
popf
xor
scas
les
dec
sub
punpckhbw
jb
mov
sub
pop
pusha
test
(bad)
jle
sbb
inc
fdiv
lea
push
retf
ins
mov
std
and
push
popa
dec
mov
das
push
jo
pop
out
int3
int3
adc
xor
(bad)
out
(bad)
xchg
push
(bad)
das
gs
jmp
imul
lahf
pusha
or
lea
lea
and
mov
sub
cli
cmp
mov
or
gs
sbb
xor
jno
test
push
mov
pop
push
jmp
xchg
iret
nop
inc
push
sbb
enter
bound
imul
xchg
sub
and
rcr
call
cmps
in
jno
pop
sub
cld
jp
add
das
imul
imul
pop
fwait
mov
out
jg
adc
aaa
mov
mov
addr16
shl
in
outs
mov
pop
inc
inc
das
call
out
mov
cmps
cld
je
sti
pushf
inc
mov
mov
mov
sbb
pop
ret
mov
and
jmp
and
arpl
mov
inc
imul
ds
lea
fidivr
es
cmp
mov
jno
call
mov
or
pop
dec
fcmovnb
xchg
daa
jne
lahf
add
das
mov
in
nop
adc
mov
mov
mov
sub
cwde
mov
adc
ret
movs
mov
mov
mov
add
mov
or
cld
cmp
ret
aas
cmp
fstp
xor
in
jo
mov
outs
movsx
ret
cld
mov
ficom
mov
(bad)
shr
mov
xor
lock
push
sbb
pushf
movs
adc
hlt
bound
(bad)
jo
add
and
cli
pop
xchg
mov
loope
ficom
(bad)
mov
jb
mov
(bad)
sbb
sbb
hlt
sti
jo
mov
inc
pushf
sub
ss
cmovle
int
out
lods
test
jl
stos
call
mov
inc
add
(bad)
and
shl
and
fsub
xor
aam
movs
dec
sub
mov
call
cmp
jg
loop
ss
ret
movs
fiadd
dec
clc
xchg
ret
jb
addr16
test
aam
aad
push
xchg
push
mov
cmc
xor
sub
outs
pop
ss
or
push
fild
add
or
cld
add
mov
out
cmc
mov
cmp
jo
dec
add
rol
(bad)
(bad)
bound
cmp
mov
lods
enter
inc
inc
fistp
inc
das
jnp
inc
sbb
je
sti
pop
mov
inc
rol
push
jmp
mov
sub
or
adc
(bad)
movs
cmps
cmp
jnp
mov
push
mov
cwde
adc
call
retf
xor
xor
jle
mov
dec
mov
rol
sbb
test
lods
xchg
push
sbb
inc
(bad)
in
mov
inc
add
adc
push
icebp
jge
std
aaa
test
sbb
inc
in
outs
ins
aas
shr
mov
xor
shr
inc
aam
iret
out
mov
push
push
and
pop
enter
xlat
test
mov
jno
ja
pop
add
adc
jno
aad
push
mov
jecxz
test
lds
add
inc
leave
movs
repnz
rcr
(bad)
nop
(bad)
cmps
mov
call
mov
or
loopne
add
adc
push
lods
xor
mov
jmp
cld
cmp
ret
popa
jae
jl
mov
stos
xchg
and
mov
cmps
dec
xor
inc
mov
fsubr
movs
mov
lock
sub
and
lea
out
ins
or
retf
movq
pop
pop
mov
adc
sbb
lock
aad
push
push
(bad)
push
mov
push
mov
mov
dec
shl
or
outs
enter
jae
call
rol
jno
aam
mov
jno
or
es
xchg
iret
lods
xchg
aaa
mov
pop
sbb
ds
fdivr
test
or
(bad)
ja
icebp
enter
pop
mov
sub
pop
mov
sti
lock
test
test
mov
(bad)
jecxz
sub
dec
mov
call
add
ret
ror
adc
or
add
int3
(bad)
xchg
mov
pop
jp
into
(bad)
mov
fxch
xchg
cdq
push
sub
pusha
inc
setnp
mov
jno
nop
jmp
add
add
(bad)
stc
in
daa
fsub
(bad)
shr
and
or
dec
inc
pop
add
daa
adc
push
popa
loopne
mov
push
jle
shr
sbb
lea
adc
add
sbb
or
push
imul
or
push
(bad)
pop
es
jne
jo
cld
lods
sub
and
(bad)
sub
call
pop
mov
inc
and
or
and
es
add
pop
test
xchg
outs
xchg
(bad)
shl
xor
pavgw
pushf
sti
nop
or
in
sbb
and
retf
jecxz
inc
(bad)
pushf
cdq
push
rol
and
fild
shl
jp
jge
pop
sti
add
xor
clc
pop
jecxz
jmp
out
xchg
push
sub
je
mov
outs
call
dec
pop
(bad)
jg
jo
jnp
or
mov
add
inc
call
inc
jb
ror
lods
(bad)
jmp
jmp
sub
dec
je
jmp
sahf
ficomp
dec
cwde
fimul
jecxz
mov
inc
js
in
dec
loope
fcomp
mov
(bad)
cmp
and
shl
in
push
push
jno
push
jle
mov
movs
int
xchg
mov
mov
pop
xor
inc
adc
outs
push
stos
mov
xor
inc
loop
ins
inc
aaa
adc
xchg
sbb
sub
sub
ret
(bad)
adc
movs
push
add
jnp
mov
out
fcmove
shr
ins
std
sub
int3
call
(bad)
jge
push
imul
dec
pop
pushw
push
mov
xchg
je
mov
push
into
test
lods
xchg
outs
adc
aad
mov
mov
ins
xchg
inc
popf
mov
loope
mov
ins
add
cmp
mov
jo
sub
call
mov
cmps
or
pop
cwde
js
call
pop
arpl
push
mov
add
add
mov
(bad)
out
test
cli
fist
mov
scas
fiadd
mov
fsub
adc
cmp
pop
xchg
adc
xor
mov
je
dec
fcom
lahf
loopne
shl
adc
lahf
sub
inc
or
ds
mov
(bad)
retf
mov
pop
rcl
cwde
leave
imul
push
inc
mov
jp
dec
rcr
mov
addr16
adc
xor
shr
dec
movs
mov
jge
in
xchg
clc
test
mov
mov
mov
push
mov
dec
pop
nop
dec
mov
fucom
add
lock
sub
sub
jge
jl
dec
dec
push
jmp
pushf
sbb
jg
xchg
sbb
lds
das
sub
int
inc
stos
mov
ret
sub
mov
dec
ret
lea
scas
adc
fwait
addr16
sbb
add
and
jge
bound
xchg
xchg
mov
jb
and
cld
cmp
call
sahf
lods
ror
ins
xchg
in
repnz
imul
lea
jmp
add
push
call
pop
xor
dec
ja
cmps
xchg
(bad)
xor
jno
int
or
fidiv
cmp
imul
mov
xor
push
mov
xor
mov
or
pop
sub
sub
dec
stos
repz
jge
mov
adc
jmp
pop
adc
gs
data16
ins
mov
lds
fcomp
icebp
into
sub
mov
xchg
mov
mov
scas
cs
in
sti
call
dec
cli
or
cmps
xchg
loope
xchg
fwait
inc
je
ss
xor
loope
adc
xor
jno
push
sub
xchg
xor
xchg
mov
add
lods
jne
mov
aad
into
(bad)
hlt
jl
ss
adc
arpl
add
sub
xchg
jo
jb
xor
adc
aad
retf
lds
mov
fst
sub
scas
xor
in
sub
lods
iret
lods
lock
arpl
xchg
pop
mov
adc
mov
mov
sub
xor
stos
lea
mov
daa
sar
jmp
xor
fcomp
xor
lods
fidiv
test
(bad)
stos
arpl
xchg
dec
je
or
das
loope
and
mov
add
jmp
push
mov
mov
cmps
test
out
mov
xor
xadd
xchg
xchg
pop
adc
bound
xchg
mov
clc
aam
or
loope
push
push
jnp
jmp
leave
or
in
popa
enter
mov
aam
add
sahf
rcl
push
stos
mov
lds
(bad)
push
ret
scas
shl
and
repz
jmp
push
mov
add
pusha
mov
push
scas
test
mov
mov
arpl
rcr
retf
mov
(bad)
rcl
inc
mov
dec
jae
not
in
outs
(bad)
mov
xor
fs
jg
pop
fld
jmp
and
jno
dec
into
imul
push
ror
aam
mov
sbb
ss
mov
adc
stos
or
pop
inc
push
push
dec
cmps
hlt
xchg
cmp
xor
mov
scas
fld
push
outs
add
loope
adc
jl
lods
sbb
mov
cmps
pop
stos
push
out
xchg
daa
pop
lea
std
push
or
out
test
pop
cmps
dec
lock
push
fisttp
jmp
movs
xlat
leave
cwde
dec
push
pop
fcomp
cmps
mov
jns
dec
call
frstor
mov
test
fucomip
scas
fistp
xchg
enter
shl
pop
fild
lods
inc
mov
loop
push
imul
int3
cdq
mov
push
stos
idiv
push
movs
fcomp
dec
push
fs
in
imul
push
div
cdq
cmps
inc
ins
icebp
into
mov
dec
jmp
dec
shr
repz
pop
pusha
mov
cmp
mov
adc
xchg
xchg
sbb
xlat
int3
or
fs
daa
push
outs
jne
jb
cmp
push
fisttp
lods
fnstenv
lahf
and
int
jo
pop
xor
daa
outs
repz
sti
pop
ret
outs
imul
in
and
xchg
and
xchg
mov
ficom
lahf
inc
adc
push
(bad)
leave
push
mov
(bad)
mov
mov
daa
add
mov
cmc
hlt
mov
cdq
xchg
xor
das
push
in
jle
add
imul
hlt
push
in
fimul
gs
scas
out
mov
call
mov
mov
mov
mov
push
mov
cmp
dec
mov
sub
lea
mov
icebp
rcl
jecxz
mov
daa
idiv
fsub
jle
maxps
push
dec
xchg
(bad)
mov
xchg
bound
jae
sbb
pop
pop
frstor
xchg
fs
mov
push
mov
fchs
fsubr
mov
sbb
xor
std
pop
rcl
jecxz
xchg
les
add
adc
xchg
ss
mov
jp
rcr
fnsave
outs
adc
es
pop
jae
repz
in
in
repz
mov
das
xor
sbb
mov
shl
ins
stos
jmp
js
retf
test
les
mov
add
(bad)
sbb
daa
and
sub
xor
sbb
adc
and
ret
lea
mov
jp
rcl
test
dec
mov
ins
push
mov
xchg
inc
xor
mov
cmp
xchg
fmul
jnp
fwait
lock
jmp
cmp
mov
int
dec
jge
sub
hlt
dec
lds
lock
mov
rcr
xchg
adc
nop
inc
xchg
add
cli
mov
mov
stc
mov
adc
ja
mov
jle
ins
(bad)
dec
dec
hlt
pop
and
and
add
add
cmp
retf
jg
out
jne
ret
sub
push
jp
xchg
stos
mov
in
adc
jle
jecxz
loop
repnz
sub
add
in
imul
lock
call
fld
int3
repnz
or
xchg
push
jne
shl
mov
pop
push
test
fdivr
mov
add
push
pusha
or
push
inc
jmp
jmp
jge
sbb
lods
mov
ret
mov
cdq
aaa
xor
xor
adc
daa
lahf
xchg
iret
das
sti
(bad)
jne
gs
outs
xlat
inc
pop
xchg
stos
in
jne
(bad)
and
retf
jo
bound
push
xchg
inc
neg
jmp
or
stos
in
jae
push
das
mov
cmp
cld
mov
xchg
sbb
retf
mov
jno
pop
int3
inc
mov
out
ret
out
xchg
push
pop
and
stc
sub
mov
cld
add
stc
mov
adc
fsubr
loop
jns
movs
mov
cli
imul
pop
(bad)
es
test
jmp
sbb
adc
add
pushf
shl
add
or
js
out
in
mov
mov
jno
sub
mov
pusha
and
test
and
fisub
xor
inc
adc
lock
repnz
into
pop
movs
xchg
dec
(bad)
stc
mov
adc
mov
cmc
push
mov
pop
push
(bad)
pop
outs
push
ins
stc
xor
jbe
sbb
int3
jle
lods
push
cmp
lods
cli
push
mov
ins
or
inc
jno
fwait
jmp
cmp
xchg
in
test
mov
push
es
pop
outs
push
jmp
xchg
outs
pushf
xchg
scas
add
sub
int3
sbb
push
stc
js
xor
jl
push
call
jae
aas
push
dec
imul
mov
ss
ins
jno
xor
jmp
push
stc
movs
sbb
inc
test
pop
(bad)
xchg
adc
fistp
je
mov
push
stos
jmp
stc
clc
stc
jbe
in
shl
jg
cmp
sbb
mov
mov
cli
sti
(bad)
cmp
adc
not
inc
push
bound
mov
pop
fstp
push
jns
ins
jns
aaa
cmp
mov
push
retf
es
add
push
jo
imul
sub
pop
inc
adc
adc
repz
icebp
into
iret
and
out
in
mov
pushf
rcr
sbb
retf
sub
jns
ss
adc
inc
and
ret
jne
mov
inc
stc
xchg
jle
lock
and
cmp
in
pushf
mov
mov
mov
not
xor
and
fld
fimul
xor
stos
and
sub
dec
jg
inc
test
inc
dec
mov
ins
jg
in
in
or
add
sub
mov
add
sbb
scas
ret
adc
sbb
jo
es
push
dec
in
xchg
bts
push
jns
fmul
cmc
add
enter
push
mov
call
jbe
jg
add
xchg
push
lods
cmc
leave
les
arpl
jnp
call
out
jns
outs
test
mov
pusha
xchg
mov
push
sub
sbb
push
inc
lods
fnstenv
adc
push
sbb
mov
sub
adc
mov
mov
mov
lock
mov
imul
pop
test
shr
(bad)
iret
adc
cmp
mov
clc
stc
cmp
dec
mov
push
fist
push
fwait
add
(bad)
mov
int3
mov
xchg
and
cmp
add
mov
(bad)
push
neg
push
mov
sub
mov
cwde
inc
js
movs
std
punpckhdq
xor
sub
scas
lds
int
adc
jge
mov
cdq
mov
mov
sub
pop
iret
jl
jno
lods
iret
call
pop
in
pop
(bad)
xor
(bad)
dec
mov
ins
pop
xchg
jae
imul
int3
data16
es
adc
inc
inc
jmp
repnz
stos
(bad)
dec
daa
ss
xor
nop
add
outs
(bad)
xlat
stc
inc
sub
mov
stos
sbb
cmp
inc
enter
mov
ds
pop
adc
add
inc
outs
mov
imul
aam
mov
daa
jecxz
jae
and
fwait
jb
sub
inc
mov
mov
shl
sti
into
fwait
(bad)
jp
sbb
xchg
jg
xor
(bad)
adc
inc
xor
hlt
lock
pop
and
inc
repz
and
sbb
outs
dec
(bad)
pop
xchg
jge
mov
xchg
int3
loopne
scas
jmp
cs
and
cmp
inc
or
jle
lods
push
fsub
inc
fldenv
(bad)
push
mov
in
mov
jge
mov
aad
sub
xchg
jae
mov
stos
fmul
outs
sbb
pop
repz
imul
add
push
loop
xchg
jmp
inc
cmp
hlt
or
mov
inc
rol
pop
bound
cmps
cs
cmp
mov
fisttp
xor
mov
stc
cmp
xor
int
into
fdiv
iret
jae
scas
sub
fistp
aam
(bad)
pop
sub
out
in
push
push
enter
ret
mov
(bad)
scas
push
push
mov
cmc
push
or
sub
mov
push
cmp
pop
jecxz
scas
in
test
xchg
jp
jmp
dec
push
out
sub
cmps
fs
loope
or
sbb
retf
call
mov
cld
ins
jne
xchg
sbb
je
in
add
pop
xchg
rcr
js
fstp
xchg
fisttp
or
xor
jmp
fstp
mov
imul
jge
mov
rcl
into
ret
mov
dec
jb
fcomp
pop
out
mov
mov
pushf
not
xor
dec
cli
cmps
rcr
push
cmc
pop
pop
retf
inc
mov
pusha
mov
cmp
or
loop
mov
add
mov
jo
add
js
mov
ds
pop
fisttp
or
jl
aas
mov
xor
fnsave
sub
cmp
data16
mov
movs
stos
pop
scas
inc
shl
mov
mov
retf
es
mov
dec
xchg
imul
shl
mov
mov
cld
fdivr
data16
in
xor
cmc
sbb
adc
mov
es
test
mov
push
adc
daa
sub
and
inc
jge
dec
mov
inc
mov
adc
(bad)
or
ret
cmps
sbb
in
mov
mov
imul
rcl
mov
imul
mov
ss
mov
jg
mov
mov
scas
mov
test
or
bound
scas
add
fs
xor
gs
jge
sub
pop
out
sbb
or
jg
mov
dec
xchg
fild
adc
jns
pusha
xchg
out
mov
dec
inc
popa
bound
dec
mov
xor
test
in
push
mov
xor
mov
push
xchg
outs
ds
xchg
cmp
jg
neg
xor
dec
mov
or
sbb
jmp
sahf
add
out
push
add
retf
mov
fwait
xor
jmp
xor
loop
lods
mov
adc
jmp
pop
(bad)
leave
mov
pop
push
cmps
div
jp
xor
sub
and
jmp
mov
rcl
push
nop
adc
inc
pop
call
addr16
scas
sbb
sahf
or
in
gs
xchg
pop
mov
pop
mov
dec
xlat
xchg
dec
int3
das
pop
add
xor
mov
push
stos
fs
cwde
call
jge
test
out
mov
lock
xor
jmp
jmp
mov
out
lahf
or
adc
clc
pop
add
std
and
repnz
mov
inc
push
mov
add
fdiv
inc
xchg
and
dec
adc
dec
push
add
shl
inc
call
fs
jb
rol
push
(bad)
aad
xor
fimul
gs
pand
mov
sbb
test
sbb
mov
idiv
out
fsubr
retf
push
cwde
mov
push
inc
sub
inc
mov
mov
cmp
shl
movzx
adc
int3
js
popa
xchg
ins
dec
inc
push
mov
pop
fs
scas
daa
jns
cs
and
lods
xchg
lods
pushf
add
fcomip
out
(bad)
jnp
adc
dec
inc
loop
mov
pop
movs
jecxz
int3
xchg
pop
fdivp
mov
push
sbb
cdq
lahf
cdq
xchg
movs
stc
pop
aad
cmp
out
xchg
outs
pop
push
cmp
rcl
pop
mov
jmp
dec
adc
hlt
stos
out
push
inc
push
fnsave
fsubr
xor
nop
push
dec
and
aas
fidivr
rol
jno
ins
mov
retf
loope
mov
test
dec
adc
jo
push
add
adc
jae
nop
test
inc
adc
adc
repnz
adc
xor
jne
aad
into
popa
xchg
jb
add
jns
inc
stos
shl
fmul
xor
hlt
test
aad
enter
mov
dec
shl
(bad)
inc
and
(bad)
adc
int3
fisub
push
retf
addr16
test
sahf
scas
mov
repnz
or
int
xchg
shr
ds
push
(bad)
xlat
cmp
dec
pusha
mov
ficom
arpl
cli
mov
jmp
ret
sbb
mov
cwde
das
mov
sbb
jecxz
mov
jnp
jg
retfw
cld
arpl
inc
repnz
xchg
repz
outs
aaa
call
sub
cmp
cwde
loop
outs
cwde
movs
mov
call
jecxz
stos
ss
push
nop
pop
fild
mov
(bad)
inc
cmp
cmp
js
loope
xor
(bad)
xchg
push
fucomip
jbe
das
mov
mov
dec
jb
xlat
xchg
int
sub
push
cmps
sub
push
jbe
ret
mov
inc
bound
retf
add
lods
pusha
sbb
xchg
retf
xor
fisubr
ficom
aam
daa
mov
ficom
push
and
aad
mov
cmps
stos
adc
cld
pop
shr
div
loop
cli
int
jmp
leave
clc
or
xor
pop
les
scas
push
dec
xchg
lods
scas
pop
dec
scas
sbb
sbb
adc
das
ret
pop
or
mov
xor
lea
add
jecxz
inc
mov
cmp
fbstp
les
(bad)
fcmovnbe
xchg
jne
out
retf
call
and
sub
pop
in
fld
cmp
dec
popa
mov
fmul
pop
fnop
xchg
(bad)
stos
jmp
sbb
mov
push
enter
enter
mov
adc
lea
push
es
push
retf
shl
(bad)
cmp
add
not
cdq
gs
inc
xchg
in
mov
xlat
pop
push
add
dec
inc
je
mov
pusha
add
rcl
cmps
(bad)
stc
rol
and
fstp
add
sub
push
adc
pop
fwait
pop
leave
pop
jp
cmp
enter
into
jae
mul
inc
inc
mov
mov
xchg
imul
ret
cmp
dec
adc
mov
add
out
imul
test
jae
adc
repz
call
fs
jne
mov
sub
jno
xchg
imul
in
pop
test
push
push
mov
popa
xchg
push
das
sbb
push
aad
repnz
mov
push
hlt
frstor
pop
test
or
and
mov
in
xor
push
in
lods
inc
push
dec
adc
pop
cmp
jmp
add
and
popa
leave
ds
mov
std
fucomip
and
gs
pop
shr
sbb
out
fisttp
cmp
fcmovnu
mov
sbb
or
inc
std
mov
push
ret
test
les
inc
cmp
js
fcom
mov
mov
(bad)
out
mov
test
pop
mov
jae
push
test
bound
push
or
and
push
jg
pop
into
retf
fild
dec
arpl
mov
fmul
pop
jp
fdiv
leave
pop
jmp
and
popf
call
sahf
and
and
shr
xchg
data16
call
mov
jecxz
cmp
adc
cmps
movntq
add
xor
jge
movs
dec
dec
push
hlt
xchg
outs
xor
mov
sbb
sub
cmc
dec
(bad)
inc
or
xchg
xlat
adc
xor
lds
jbe
inc
aas
or
cmp
add
add
add
pop
push
pushf
sahf
inc
in
loopne
(bad)
jns
mov
mov
push
inc
add
xor
dec
lock
neg
push
and
ds
into
lds
mov
sub
xor
mov
jmp
add
ret
xor
jp
out
int3
and
(bad)
call
xor
in
gs
fwait
add
pushf
adc
pop
repz
stos
fistp
ror
jecxz
in
pop
call
adc
sub
(bad)
cmp
inc
mov
(bad)
ds
adc
mov
es
rol
pusha
pop
int3
mov
push
push
sub
and
jmp
lods
add
sub
jle
push
jmp
cmc
mov
into
mov
in
stc
add
test
popa
xor
jns
push
inc
out
dec
push
adc
add
movs
or
jmp
sbb
pop
dec
xor
mov
dec
stc
mov
dec
xor
sub
ja
sbb
jns
ins
jp
in
xchg
xchg
hlt
push
jl
xor
add
mov
lock
test
int3
shl
sbb
pop
iret
out
mov
mov
jle
sub
popa
cmc
push
xor
pop
enter
nop
add
dec
push
stos
mov
aaa
in
push
inc
hlt
pop
cmp
(bad)
inc
or
push
outs
pop
cwde
jo
loop
sahf
test
jge
inc
jno
mov
xchg
jmp
call
fwait
cmp
retf
pusha
inc
xor
jg
(bad)
in
shl
out
mov
fcomip
inc
jmp
pop
dec
fsubr
popa
push
pusha
adc
pop
cmp
push
imul
inc
jb
xor
das
outs
enter
and
dec
enter
sub
or
xor
movs
xchg
(bad)
cld
pop
sbb
aaa
dec
mov
mov
jmp
push
and
mov
cdq
cmp
adc
or
ss
lods
ret
fst
xor
aas
adc
inc
lods
mov
(bad)
ja
movs
push
into
mov
and
icebp
xlat
dec
cmp
xor
stc
xchg
aam
movaps
sub
adc
leave
xor
pop
pusha
dec
ins
dec
cmc
int3
mov
stos
push
(bad)
xlat
fisubr
cmp
cmp
sub
aas
fstp
push
lds
aas
cs
xchg
test
jl
cmps
push
jns
out
out
fcomi
icebp
or
fst
push
out
adc
sub
jnp
xchg
test
mov
and
jns
pop
stos
arpl
xchg
xchg
jp
push
aam
les
mov
into
addr16
xor
(bad)
retf
jmp
xor
cli
dec
xchg
xor
test
jecxz
sub
add
ficom
mov
int
jne
pop
sti
js
ins
pop
xchg
daa
dec
dec
cmp
outs
cwde
fwait
adc
mov
inc
iret
cmps
test
daa
test
das
iret
clc
popf
clc
lahf
jge
(bad)
xlat
gs
mov
mov
ror
cmps
inc
add
jbe
rcr
xor
arpl
mov
jne
cld
je
cmps
add
jno
mov
mov
imul
mov
stos
xchg
popf
iret
retf
nop
inc
xchg
movs
rcr
pop
push
fwait
jnp
fs
push
jnp
sub
xchg
int
sbb
push
mov
push
and
or
bswap
fidivr
pop
sahf
fcomp
dec
test
and
mov
push
dec
inc
(bad)
mov
inc
ins
sub
jcxz
inc
iret
xchg
sahf
inc
adc
inc
in
push
mov
xchg
ret
shr
imul
lahf
jns
das
test
cli
cmps
xchg
mov
xlat
adc
fdivp
in
imul
mov
stc
push
(bad)
lock
pop
jl
push
(bad)
push
into
loop
cld
ss
in
icebp
bnd
fbld
call
bound
movs
lock
ins
fwait
shl
and
test
enter
push
jbe
das
or
in
mov
jae
cdq
pop
rcl
mov
scas
dec
icebp
inc
fxch
enter
cmps
pop
dec
fwait
cdq
pop
les
movs
mov
mov
nop
lahf
dec
test
out
sti
add
xchg
scas
bound
cmp
(bad)
and
jecxz
or
ins
fadd
mov
ins
icebp
adc
not
clc
jmp
test
mov
jge
mov
sub
jmp
(bad)
bnd
adc
fdivr
xchg
cmp
push
mov
pushf
mov
sub
add
popa
lahf
icebp
add
(bad)
std
cld
ds
inc
cmp
inc
jmp
ja
std
mov
mov
mov
xlat
mov
inc
std
scas
push
test
push
repnz
inc
xchg
out
cmp
mov
lods
fst
xchg
mov
aaa
cmp
xlat
js
mov
push
in
jg
xor
cdq
adc
and
sbb
clc
dec
jle
xchg
and
pop
push
cmp
xor
ss
and
jb
sahf
lock
add
sub
in
sahf
jp
les
iret
pusha
lahf
jb
out
or
jl
cmps
adc
and
mov
cmp
xor
addr16
(bad)
push
pop
popf
ret
pop
mov
cmp
and
mov
or
and
xor
cmps
and
jno
jnp
stos
outs
cmps
jns
cmps
mov
gs
xor
fxam
pusha
xlat
sbb
push
in
into
fdivp
pop
add
cli
movzx
xchg
clc
push
sbb
shl
add
das
mov
xor
mov
add
ja
dec
in
clc
mov
lods
inc
shl
inc
mov
mov
arpl
dec
js
rol
pushf
sub
jb
scas
fisttp
jg
mov
xchg
shl
jnp
cmp
mov
movs
pop
(bad)
clc
inc
xor
inc
sub
popa
mov
dec
inc
add
mov
mov
movs
iret
xchg
in
push
ss
lock
fstp
or
inc
fldlg2
xchg
mov
mov
xchg
push
clc
mov
cmps
shl
push
inc
popf
aas
mov
add
cmp
movs
fsubrp
cmps
sbb
sub
lods
pop
retf
loopne
jmp
xchg
rcr
int3
dec
mov
lods
inc
cmps
ja
out
push
cmp
sbb
aas
fld
xor
xchg
std
aas
sbb
std
sahf
and
enter
(bad)
mov
dec
mov
shr
or
adc
lea
jno
mov
inc
mov
inc
cmps
jo
mov
and
add
in
fwait
and
mov
adc
fs
sahf
lods
pusha
fwait
push
sub
add
xchg
daa
cmp
cld
sbb
add
(bad)
cmp
mov
push
sar
mov
test
or
inc
scas
dec
arpl
push
sub
pop
clc
mov
add
mov
and
cmp
jne
les
out
mov
mov
pop
add
aad
lahf
aam
ja
shr
sub
out
stos
push
jg
jb
jo
mov
push
inc
add
aaa
enter
xchg
pop
ins
dec
lock
xchg
dec
jnp
dec
xor
mov
inc
and
sbb
push
lods
dec
dec
out
or
test
test
je
enter
push
(bad)
rcr
mov
sahf
mov
xchg
repz
movs
jbe
cmp
xchg
cmp
(bad)
adc
fidiv
mov
inc
push
inc
mov
add
leave
les
mov
add
and
mov
ja
es
sbb
fdivr
xor
ins
dec
mov
jmp
inc
dec
ins
and
inc
or
jmp
lods
inc
leave
(bad)
sti
mov
pop
push
push
out
addr16
shl
or
mov
push
jmp
jl
push
cmp
cdq
lahf
ins
or
dec
jge
add
push
pop
in
pusha
pushf
mov
repz
pop
stos
jo
sbb
push
hlt
push
bound
(bad)
cmp
mov
dec
fs
fidivr
dec
and
mov
retf
je
fldcw
in
leave
cmp
stos
inc
xor
push
or
dec
dec
jbe
fwait
in
rsqrtps
and
mov
fdiv
into
call
pop
mov
imul
mov
sbb
mov
mov
push
mov
sub
jecxz
adc
(bad)
ja
int3
and
adc
cmp
cmp
push
mov
mov
jecxz
addr16
bound
in
stos
(bad)
hlt
adc
dec
pop
mov
mov
sub
lds
mov
push
sbb
cmp
or
jb
mov
cli
gs
mov
fs
test
jno
lods
sub
adc
add
pop
jge
mov
xchg
jne
cmp
in
push
(bad)
mov
adc
mov
std
mov
jnp
xchg
gs
test
mov
stos
add
sub
cdq
and
or
cs
jb
sbb
in
ds
and
and
cwde
mov
ja
add
fwait
sbb
or
pop
bound
mov
jae
push
imul
test
cmp
js
out
sbb
fldenv
sbb
loop
and
xor
shl
sbb
jmp
adc
xor
cli
cmp
repz
out
push
mov
iret
fisubr
fstp
ins
leave
mov
jl
add
pop
outs
mov
dec
mov
fcomp
or
mov
in
jl
sbb
sbb
retf
nop
xor
mov
es
pop
(bad)
lods
jecxz
in
mov
sub
pop
cwde
cli
xchg
cld
and
or
popa
dec
push
out
push
pop
jecxz
cwde
xchg
lds
mov
stos
pop
xor
(bad)
or
push
test
cs
loopne
inc
sub
(bad)
cs
sbb
call
inc
leave
xchg
mov
xchg
mov
in
mov
sbb
dec
mov
stos
mov
jae
xchg
retf
push
shl
xchg
sahf
cdq
mov
in
lods
cmps
cmp
(bad)
or
cli
ret
cmp
or
xor
pop
test
xor
mov
xor
xchg
cmp
sub
lahf
loopne
mov
push
sub
fnstsw
cmp
sbb
adc
inc
daa
push
imul
(bad)
hlt
push
adc
ret
or
fild
sub
div
shl
(bad)
mov
push
(bad)
pushf
xchg
bound
mov
push
cmps
js
dec
(bad)
mov
outs
fnstsw
imul
rol
or
inc
xchg
sub
daa
mov
pop
or
mov
and
dec
cmp
xor
outs
or
pop
outs
test
shl
adc
xor
sbb
lods
out
jno
enter
dec
inc
pop
jne
mov
jne
xor
in
xchg
xchg
mov
repz
sub
xor
lods
arpl
test
jl
push
stos
inc
out
pushf
or
jle
aas
mov
in
aas
pop
mov
pushf
jae
dec
add
or
neg
cmp
daa
inc
mov
push
adc
mov
dec
adc
jne
pop
jmp
add
stc
rol
push
mov
out
sbb
pop
xchg
push
scas
and
movs
pop
mov
adc
sub
cmp
int3
jns
add
inc
pop
or
xchg
pushf
fadd
(bad)
sub
jnp
in
not
add
std
ins
pop
hlt
pushf
sub
fdivr
push
sti
pop
sub
lds
jne
jae
pop
push
ror
inc
(bad)
sahf
mov
(bad)
adc
scas
push
aad
lock
sbb
dec
jbe
aaa
sub
loop
hlt
push
imul
mov
iret
or
call
bound
test
mov
and
dec
retf
cmp
stos
push
xchg
inc
xchg
dec
(bad)
xor
fwait
push
xchg
push
outs
jno
pop
loope
mov
cdq
and
or
enter
xchg
sbb
(bad)
mov
mov
sub
stc
sub
push
or
jb
push
ficomp
fmul
test
out
adc
aam
retf
pop
cmp
add
xor
sbb
popa
gs
and
sbb
add
add
cmp
test
adc
or
mov
jp
or
add
ficom
iret
push
xor
and
cmps
jmp
fstp
inc
adc
lods
and
movs
cmp
add
mov
mov
scas
aam
in
ror
retf
push
cmp
fsubr
sub
push
push
data16
scas
dec
repnz
dec
cmp
pop
imul
retf
push
jge
mov
xchg
cmp
fs
add
movs
dec
mov
(bad)
and
xor
push
retf
ja
cmp
mov
sbb
data16
inc
(bad)
push
imul
(bad)
push
out
aad
out
push
scas
add
mov
call
push
jg
xchg
jg
jno
xor
pop
xlat
mov
mov
(bad)
(bad)
cmp
out
loope
cwde
add
repnz
fucomp
cdq
repnz
sub
jge
ror
jnp
dec
dec
add
cmc
jno
adc
(bad)
cli
add
mov
push
and
or
call
daa
adc
lea
sub
movs
and
push
and
loope
lods
mov
add
push
ret
or
inc
jo
dec
(bad)
cdq
retf
(bad)
jno
mov
shl
xlat
add
xchg
push
pop
xchg
lahf
jmp
pop
repz
or
pop
(bad)
popa
mov
mov
adc
and
jp
xlat
cmp
neg
or
jns
push
lahf
out
sbb
xor
sub
sar
cmp
pop
shl
lods
icebp
retf
xor
adc
and
aaa
dec
stc
jne
cdq
enter
icebp
push
ret
sbb
add
inc
lods
mov
inc
pop
jb
cld
jle
pop
(bad)
inc
sbb
ds
pop
and
jbe
(bad)
push
shl
mov
das
mov
daa
jb
fidiv
dec
or
dec
div
xchg
loopne
xor
movups
rcl
jmp
jle
jmp
sar
retf
sbb
push
adc
mov
ins
out
arpl
(bad)
pop
fwait
sbb
mov
and
loopne
arpl
int3
pop
ficom
ds
xor
loop
pushf
daa
inc
or
xchg
adc
jmp
sbb
xchg
xchg
bound
(bad)
inc
ins
fiadd
or
dec
ja
ror
ins
(bad)
repz
pop
int3
aam
and
popf
or
rol
adc
pop
cmp
bound
xor
xchg
push
in
int3
mov
jae
lock
inc
dec
ja
push
test
sub
jge
cmps
sub
mov
xchg
xchg
push
push
ds
and
inc
mov
test
je
mov
jne
mov
sub
jp
dec
cld
icebp
imul
mov
repnz
sbb
ins
xor
pop
imul
xor
hlt
cwde
sub
xchg
pop
in
outs
test
pop
and
xchg
jns
push
in
repnz
mov
call
ror
pop
mov
or
jmp
mov
aad
sub
(bad)
or
je
xchg
adc
stc
xor
sub
(bad)
pop
fsubr
fwait
cmp
pop
fild
and
mov
mov
dec
and
scas
shl
aaa
cld
dec
gs
xor
mov
mov
loope
pop
(bad)
and
cld
fnstcw
mov
inc
call
add
adc
push
mov
mov
(bad)
sub
mov
(bad)
enter
mov
mov
adc
ja
popa
fcom
pop
mov
les
xor
repnz
out
fld
cmps
jle
dec
cmp
call
fsub
loope
popf
xor
mov
sub
mov
and
mov
outs
pop
mov
es
fimul
movs
aam
adc
mov
scas
cmp
dec
jmp
jo
(bad)
fnstcw
scas
push
arpl
mov
loop
test
je
or
retf
inc
sbb
mov
adc
popa
cmp
stc
jecxz
mov
imul
and
iret
jecxz
adc
arpl
hlt
ja
cmp
cmp
mov
js
jge
fisubr
fld
lods
in
jmp
xchg
ret
or
js
or
or
xchg
or
rcr
call
int3
adc
loopne
(bad)
out
psubb
jmp
paddw
push
or
xchg
mov
sbb
sub
(bad)
fs
adc
fsubp
popf
mov
mov
jle
std
mov
data16
ret
mov
fimul
icebp
enter
enter
cmp
or
pop
xor
xor
inc
stc
or
and
cmps
add
mov
bound
neg
popa
ret
ja
clc
inc
add
add
fadd
cmp
and
push
inc
fcomi
int
cmc
test
pop
jne
adc
das
mov
jmp
push
loope
in
lock
adc
hlt
test
scas
xchg
shl
dec
gs
ja
shl
jnp
ins
pusha
into
ja
jne
push
or
stc
sbb
std
xchg
dec
lods
and
repnz
inc
mov
lgs
and
ins
mov
dec
leave
outs
nop
fisubr
jle
jge
and
pop
movs
lahf
cmp
fwait
in
movs
add
jb
inc
push
in
mov
out
sub
xor
mov
in
pop
xor
in
jo
pop
dec
add
push
std
inc
out
mov
js
pop
push
jmp
imul
movs
lods
jno
(bad)
push
jmp
jne
cwde
dec
xor
dec
imul
sbb
add
ret
movs
or
jle
xor
pop
cmps
push
fst
out
mov
addr16
mov
bswap
jp
shr
jmp
jno
lock
mov
adc
enter
aad
mov
sbb
xchg
inc
movs
cmp
(bad)
pop
out
pop
push
out
jbe
shl
cmps
dec
pop
push
mov
out
popa
bound
imul
stos
mov
xor
or
enter
mov
add
cmp
add
pop
mov
inc
jp
movs
pop
xchg
fnsave
mov
and
out
push
cmp
inc
cmp
lods
(bad)
cmps
pop
sbb
inc
cs
ds
aaa
add
pop
mov
xchg
test
adc
lock
dec
jg
(bad)
enter
imul
and
pop
inc
cmp
lods
clc
out
jae
loopne
cmp
and
mov
mov
mov
push
jmp
sub
addr16
je
aam
mov
xchg
sbb
ins
mov
mov
mov
lods
fimul
(bad)
pusha
jb
imul
movs
fld
xchg
in
mov
pop
sbb
mov
mov
scas
ja
dec
outs
mov
mov
les
popf
das
sbb
ja
add
jne
dec
mov
push
sahf
add
mov
inc
stos
loopne
ror
add
lods
xchg
pop
jmp
mov
jge
gs
jbe
xchg
dec
inc
fldenv
sub
sbb
push
or
xor
sub
inc
aam
or
fdiv
xor
xor
xchg
nop
adc
shr
adc
test
xchg
adc
adc
push
jge
inc
(bad)
push
jmp
inc
(bad)
outs
mov
mov
pop
cld
mov
bound
sub
mov
push
(bad)
hlt
push
arpl
mov
adc
inc
pusha
dec
out
mov
imul
push
enter
mov
lds
push
aaa
or
pop
imul
adc
pop
jns
idiv
(bad)
(bad)
jge
ret
push
call
xor
or
push
out
sub
or
test
mov
ret
out
imul
adc
adc
call
xchg
(bad)
out
fmul
sub
into
inc
mov
add
(bad)
ss
sbb
stos
mov
outs
pop
mov
fs
dec
rol
ret
or
push
dec
or
dec
mov
xchg
fsubr
dec
psllw
add
jmp
call
(bad)
dec
shl
mov
fldcw
sub
fistp
jg
mov
dec
dec
popf
enter
push
sbb
adc
adc
pop
iret
pop
mov
add
add
xchg
popa
mov
popf
pushf
lods
jmp
inc
xor
dec
les
pop
inc
cld
aaa
mov
cmps
loop
pop
popf
or
loop
mov
mov
enter
scas
js
sub
out
(bad)
mov
in
dec
push
inc
mov
mov
cwde
add
push
mov
dec
out
mov
enter
add
les
xlat
or
test
jns
pop
push
cmp
jg
xchg
mov
popa
mov
inc
scas
call
sub
ds
xchg
cs
leave
jle
jns
stos
or
dec
in
cwde
cdq
popa
jo
ins
gs
pop
enter
cs
dec
jmp
and
xrelease
data16
out
xchg
xor
and
xor
or
lahf
dec
cld
in
inc
cmp
outs
push
push
xor
outs
cmp
mov
or
mov
stos
mov
in
ret
jl
(bad)
loopne
push
adc
(bad)
addr16
jne
popa
into
into
imul
mov
ja
push
movs
in
sti
sub
inc
xchg
lds
nop
lahf
pusha
mov
xchg
into
inc
inc
cmp
jg
nop
std
and
daa
jne
mov
mov
push
sti
call
adc
lgs
ja
pop
lea
adc
dec
out
jge
fs
je
push
xchg
ins
cdq
scas
aad
call
daa
or
sbb
int
shl
out
dec
bound
(bad)
ror
mov
lds
push
js
mov
lock
or
es
or
std
jmp
mov
fdiv
push
or
mul
bswap
mov
mov
and
pop
test
mov
repnz
shr
loope
nop
loop
jl
fcmovnb
jl
push
xchg
mov
test
sbb
dec
jmp
push
inc
mov
push
inc
push
mov
dec
or
push
fstp
push
cmp
std
cdq
ja
and
inc
push
push
mov
popa
fwait
out
js
cld
push
lahf
call
arpl
shr
popa
or
xor
push
jecxz
lods
pop
dec
popa
adc
dec
pusha
and
pop
fs
dec
mov
jb
cmp
push
pop
outs
inc
add
int3
rcl
cmp
pop
stc
stc
adc
call
xor
pop
push
imul
outs
mov
sbb
cmp
push
xor
pop
into
stc
stc
inc
pop
push
or
sahf
shr
inc
(bad)
cmp
push
adc
sub
stos
cmp
lods
aam
(bad)
inc
jbe
cmp
int3
leave
mov
neg
mov
mov
mov
in
rcr
xchg
leave
mov
push
pusha
icebp
fild
push
adc
push
pop
mov
rcl
popa
cmps
push
popa
and
outs
cmps
mov
icebp
(bad)
mov
popf
(bad)
dec
mov
sahf
ret
shl
inc
push
addr16
dec
add
xchg
lods
into
aaa
js
scas
jg
mov
(bad)
adc
dec
inc
push
mov
sub
popf
inc
pushf
cmp
pop
inc
mov
sti
cmp
xchg
dec
xor
push
inc
test
lds
sbb
cmps
and
out
fxam
shl
scas
cmp
jns
cmp
xor
movs
shr
sub
out
push
hlt
leave
in
out
mov
xchg
push
sbb
sbb
ja
sub
fsub
or
sbb
add
mov
retf
mov
fldcw
out
mov
adc
retf
dec
nop
(bad)
xchg
or
in
in
jne
and
and
je
call
out
aaa
mov
adc
test
mov
sub
or
das
xor
fisttp
push
test
ret
mov
or
cdq
sub
aas
shl
sub
cmp
adc
adc
jmp
es
(bad)
or
pop
leave
push
xchg
nop
in
sbb
mov
or
pop
pop
cmp
xchg
out
mov
jnp
shr
mov
lea
in
or
rcr
pop
push
inc
shl
mov
dec
adc
inc
test
sahf
(bad)
cwde
xchg
out
xchg
imul
xchg
xchg
test
sti
sbb
in
mov
sti
jle
mov
enter
lock
pop
(bad)
(bad)
cmc
push
cs
xchg
aas
in
stos
pop
mov
sub
mov
and
push
mov
adc
or
imul
loop
mov
inc
inc
frstor
movs
movs
xlat
not
cs
or
movs
test
mov
sbb
xchg
(bad)
cli
dec
adc
xchg
inc
adc
nop
clc
(bad)
pop
hlt
sub
das
pop
mov
mov
mov
fistp
pushf
nop
iret
loope
fld
jo
xchg
addr16
std
jmp
or
push
(bad)
jle
test
xor
push
sub
ret
aad
aaa
frstor
sub
fadd
mov
mov
push
push
jne
mov
aas
add
shr
aam
jl
add
push
inc
(bad)
repnz
sub
dec
hlt
pop
call
sub
shl
repnz
nop
pushf
call
mov
and
push
add
mov
sub
fisubr
int
shl
leave
or
xchg
push
sub
movs
mov
mov
cmps
push
jbe
or
mov
lea
addr16
add
imul
push
or
out
daa
mov
jecxz
sbb
ds
and
push
pop
jns
ror
dec
push
cs
pop
jb
popa
ficom
or
mov
and
push
pop
ins
xlat
popa
loop
(bad)
mov
or
mov
cmp
mov
aam
je
int
push
push
mov
jl
(bad)
out
add
mov
mov
scas
fs
push
sbb
icebp
push
cmp
iret
push
imul
and
or
push
inc
mov
ror
out
pop
mov
ret
bound
xlat
xor
mov
xor
pop
mov
or
mov
fs
push
or
adc
nop
sbb
add
dec
push
mov
sub
inc
dec
jnp
and
jae
pop
clc
daa
and
leave
ins
inc
daa
div
loope
mov
cdq
cmps
rcl
outs
pop
pop
xor
popf
stos
pop
mov
jmp
mov
loopne
cmp
fwait
gs
xor
xchg
cs
cmp
sub
push
shl
lds
mov
push
xor
inc
xchg
cmp
mov
or
test
sbb
inc
jl
sbb
or
jnp
fnstsw
inc
push
dec
mov
jb
(bad)
test
mov
jae
bound
pop
je
mov
mov
adc
lock
(bad)
aas
clc
fild
or
mov
push
sub
sub
idiv
in
fdivr
mov
popa
daa
in
cmp
fidivr
mov
xchg
mov
in
cmp
jmp
push
mov
hlt
ror
mov
and
rcl
ds
leave
call
stos
jb
sbb
aaa
bound
sbb
(bad)
adc
ficomp
mov
push
out
shl
jns
mov
push
and
fidiv
dec
(bad)
pop
sbb
lods
sbb
lods
jae
add
adc
push
aas
(bad)
in
in
in
popf
repz
mov
ds
adc
repnz
add
mov
sub
shl
rcr
cmc
or
mov
aam
pop
mov
sub
xor
inc
test
outs
dec
or
xchg
(bad)
sbb
outs
popf
retf
test
out
pop
sub
pop
and
xor
inc
cli
aad
pop
add
lds
mov
sbb
shl
xchg
lods
pop
pop
fldcw
mov
push
push
imul
mov
into
xor
fstp
imul
pop
push
aaa
or
sar
adc
into
stos
popf
pop
xor
adc
pop
sub
setne
aaa
loopne
push
inc
jmp
or
mov
mov
imul
xor
add
(bad)
cmps
lods
into
pop
cld
sbb
loop
inc
cmp
aaa
sbb
aad
pop
test
add
sub
xchg
adc
lods
ins
xchg
fadd
mov
xor
push
push
nop
ins
sti
(bad)
pop
loop
pop
xor
push
inc
fsub
rcl
jns
ret
or
jbe
int
enter
dec
loope
ins
xchg
add
call
mov
pusha
xor
mov
nop
push
data16
imul
xlat
hlt
call
lds
das
out
ror
daa
inc
lds
adc
in
jmp
arpl
arpl
mov
jb
jecxz
scas
rcl
mov
add
movs
cmp
setle
inc
pop
and
mov
xlat
scas
fs
push
clc
ret
inc
adc
cli
fadd
pop
in
adc
and
adc
mov
mov
cmp
cli
(bad)
pop
inc
mov
addr16
push
mov
pop
jb
sbb
adc
adc
jmp
sbb
sbb
mov
sub
(bad)
jns
sti
mov
pop
push
jg
retf
dec
(bad)
stos
push
retf
das
cmc
mov
aam
cmp
or
cwde
leave
in
pop
aas
push
test
loope
je
push
out
retf
aas
jne
push
mov
pop
mov
pop
xchg
les
jmp
out
add
test
mov
ja
and
cdq
pop
pusha
and
loopne
leave
repz
dec
xchg
pop
cmps
mov
shr
and
cs
push
cmp
call
jae
pop
mul
pop
adc
adc
and
push
xchg
call
pop
int
and
add
xor
das
jp
mov
test
ror
dec
mov
jb
neg
jg
push
call
cmp
outs
mov
push
and
adc
hlt
les
dec
retf
emms
mov
sar
test
add
outs
fldcw
ret
pop
dec
movs
xor
lods
or
adc
jmp
mov
dec
stos
adc
out
add
and
rcr
mov
mov
push
inc
stos
sub
imul
sub
jne
sub
jg
inc
cs
clc
out
push
jmp
mov
or
pop
mov
clc
dec
retf
shl
mov
arpl
and
or
lods
dec
jne
lock
cmps
mov
inc
jns
jmp
jmp
cli
mov
sub
inc
rcl
call
dec
icebp
lahf
mov
mov
push
push
pop
sbb
iret
pop
dec
fld
xor
mov
std
xchg
and
mov
fcom
(bad)
(bad)
movs
test
inc
push
xchg
je
mov
popf
push
xchg
mov
mov
sbb
sub
sti
jg
scas
aas
(bad)
jae
(bad)
adc
ins
pop
leave
sub
add
(bad)
mov
std
inc
and
shl
(bad)
sbb
and
aaa
cli
dec
loopne
mov
cs
jle
cwde
or
mov
gs
mov
(bad)
je
leave
iret
pop
lds
xor
jo
test
lock
div
mov
mov
outs
inc
outs
(bad)
repz
xor
push
in
xor
lods
je
bound
sub
dec
test
leave
iret
ror
mov
inc
mov
les
dec
shrd
(bad)
mov
lahf
mul
into
xlat
or
xlat
and
test
into
push
dec
adc
jle
xchg
xor
mov
inc
xchg
mov
lods
cli
mov
and
lods
mov
jbe
jg
push
addr16
arpl
addr16
call
add
retf
std
aam
loopne
loopne
retf
popa
retf
dec
fisttp
imul
push
daa
sbb
fst
jmp
imul
(bad)
lock
ret
dec
mov
add
sub
jns
or
je
ins
xlat
jl
clc
lahf
sbb
pop
bound
das
adc
and
mov
mov
(bad)
out
push
or
pop
xchg
aas
idiv
pop
cmps
inc
repnz
inc
mov
out
fmul
cmp
rol
inc
pushf
or
sbb
inc
mov
or
xchg
jb
rcr
loopne
movs
push
call
test
fsub
clc
mov
outs
cmpxchg8b
jl
jecxz
dec
inc
mov
mov
sub
int3
scas
inc
nop
and
jl
mov
add
mov
pop
fs
adc
hlt
and
mov
and
scas
jp
ret
push
mov
cs
movs
dec
inc
sbb
movs
mov
stos
clc
fs
iret
repz
(bad)
(bad)
cmp
shl
mov
fs
dec
adc
inc
sahf
into
aad
loop
dec
mov
popa
xchg
test
lods
dec
fld
or
mov
retf
jge
(bad)
mov
mov
inc
dec
fcmovnbe
and
mov
fcomp
mov
push
adc
mul
mov
int3
out
lock
cmp
js
out
pop
js
jecxz
mov
es
fldcw
das
shl
or
stos
add
add
ja
xlat
fwait
xchg
fwait
std
push
push
ss
lea
mov
pop
les
retf
(bad)
xchg
xor
dec
test
mov
ret
pop
clc
outs
jno
mov
push
sub
sbb
jmp
pop
push
mov
fincstp
pop
pop
cmp
mov
out
fmul
adc
ss
push
call
mov
icebp
add
lahf
add
mov
pop
fwait
push
pushf
sti
lds
cmc
mov
out
push
icebp
cld
sub
mov
mov
outs
mov
test
mov
js
mov
sar
and
cmc
mov
dec
(bad)
mov
pop
pop
mov
and
pop
mov
rol
sbb
xchg
sbb
and
adc
std
f2xm1
pop
cwde
imul
jmp
out
mov
repz
bound
pusha
pusha
pop
sbb
mov
jge
and
or
retf
cmp
mov
out
out
mov
jne
mov
mov
and
cmps
xchg
mov
test
pop
mov
jmp
jecxz
retf
aas
fidiv
retf
outs
jns
push
or
retf
dec
inc
(bad)
icebp
mul
test
mov
mov
aad
stos
lock
leave
push
add
and
mov
jns
jl
js
jle
in
cmps
mov
ins
push
outs
mov
sahf
adc
mov
cmc
xchg
push
iret
lock
lahf
in
ins
daa
clc
mov
out
lods
mov
cld
icebp
mov
out
out
mov
mov
xor
(bad)
rol
add
cdq
mov
pop
faddp
xor
jne
stos
jecxz
sub
jae
fstp
fwait
cmc
call
das
push
retf
fwait
add
pop
fstp
push
mov
push
outs
ficom
stos
jl
inc
rcr
xchg
jno
add
sbb
push
in
movs
mov
xchg
fdiv
rol
dec
aam
xor
cmp
xchg
push
lods
and
sqrtps
adc
jae
retf
jmp
dec
ss
jno
add
nop
push
pop
and
enter
test
or
mov
dec
cs
dec
add
jno
ror
add
mov
or
adc
pop
jo
cld
xchg
popf
sbb
repz
(bad)
fisubr
stc
adc
mov
mov
ret
ins
lahf
sbb
adc
jmp
jge
pop
mov
cmp
and
fisubr
xchg
cmp
xor
std
jno
jl
aam
jns
dec
sbb
cmp
mov
push
cmp
adc
in
adc
addr16
aas
push
inc
push
push
daa
pop
cdq
(bad)
shl
data16
test
push
jno
push
pop
jbe
add
dec
mov
sbb
and
js
and
mov
jp
xchg
adc
jb
es
sbb
xchg
scas
(bad)
(bad)
xchg
xchg
push
jg
xchg
jmp
cwde
push
mov
cmp
pop
cmp
ss
jns
dec
sbb
inc
xchg
repnz
lods
mov
dec
call
jne
cmp
adc
aam
aaa
or
jl
xor
sti
xor
in
lods
out
xor
mov
fstp
adc
cmc
out
push
cld
sub
in
test
adc
test
xchg
and
mov
xchg
or
test
enter
lods
hlt
jno
pop
ret
cvttps2pi
add
lods
cwde
mov
sub
cmp
movs
push
call
js
mov
pop
push
stc
dec
outs
(bad)
cmp
xor
sub
push
and
dec
mov
outs
xchg
les
test
nop
xor
cs
xlat
push
in
out
push
push
mov
jl
cmp
xchg
shr
mov
sub
mov
dec
inc
and
leave
cmp
loop
sbb
lea
jns
fucomp
jns
enter
call
nop
inc
cld
jg
scas
sub
pop
test
jbe
cmp
xchg
ret
pop
or
lock
adc
addr16
dec
arpl
jge
inc
stos
fcmovb
mov
add
pop
repnz
cli
movs
add
scas
pop
js
(bad)
xor
into
mov
ficomp
sub
test
test
lock
push
cmps
fstp
add
sar
ucomiss
mov
pop
pop
or
push
cdq
aas
sbb
shl
test
ret
pop
sub
shl
aad
outs
jbe
test
pop
sbb
stc
or
or
test
shr
sets
loop
push
or
push
leave
push
mov
test
push
xchg
xchg
pop
adc
xchg
sub
std
mov
jecxz
mov
sub
sbb
(bad)
jecxz
ficom
(bad)
and
adc
sub
mov
lahf
add
lock
sub
mov
jmp
push
mov
sub
or
icebp
test
jl
adc
sahf
sti
lahf
fisttp
push
(bad)
out
xchg
pop
in
pop
xchg
add
xlat
call
out
hlt
pop
jae
dec
or
xchg
call
dec
sub
jbe
bound
imul
cs
sbb
and
adc
sbb
test
imul
sbb
call
add
inc
push
mov
and
ss
sbb
mov
xchg
xchg
fnstcw
cmps
sub
cmp
mov
or
push
mov
pop
push
je
mov
cmc
and
push
inc
sbb
(bad)
cwde
inc
jbe
add
inc
inc
add
addr16
sti
cmp
cmp
mov
popf
fstp
jle
ret
mov
jecxz
mov
rol
sub
in
xor
sar
arpl
sbb
aaa
xlat
sar
mov
test
adc
sbb
mov
imul
out
fwait
sub
mov
ins
call
sahf
cli
(bad)
mov
(bad)
fcmovbe
cli
pushf
pop
outs
repnz
stos
mov
lds
ins
test
ds
adc
std
js
pop
mov
or
mov
mov
mov
mov
cmp
btr
or
inc
jne
jg
jbe
outs
test
sub
cmp
cwde
loope
and
and
pop
or
arpl
xchg
dec
aad
inc
xchg
cld
jmp
mov
loop
jnp
(bad)
in
add
jo
lahf
add
fld
fisubr
(bad)
sbb
jle
jbe
mov
or
out
xchg
loop
dec
out
sti
mov
mov
imul
hlt
inc
popa
pop
outs
dec
sbb
xchg
ss
stc
test
xchg
push
sti
(bad)
mov
rcr
addr16
ret
mov
mov
ds
and
shl
(bad)
xchg
xor
stos
cmp
divps
mov
test
xor
jns
sbb
pop
imul
lods
clc
mov
stos
mov
test
pushf
mov
jmp
loopne
cmp
cmps
ret
mov
loopne
xchg
push
mov
out
add
sub
xchg
push
jge
popa
enter
cmc
(bad)
push
jb
inc
push
pop
jle
push
nop
jo
xchg
test
fwait
daa
dec
jno
outs
lahf
adc
mov
repz
arpl
scas
dec
mov
inc
jae
hlt
add
repnz
xor
mov
sbb
ins
lods
pminsw
adc
cmp
push
sub
nop
fiadd
hlt
adc
mov
in
push
(bad)
enter
jg
lods
data16
les
push
icebp
jp
and
inc
ror
and
fild
loopne
mov
out
jecxz
pop
xchg
or
mov
mov
pop
leave
xchg
lahf
adc
into
div
enter
sub
push
fimul
inc
xchg
dec
pusha
jno
pop
rol
mov
sbb
ret
test
mov
and
rcl
pushf
or
push
sub
adc
retf
mov
mov
mov
dec
daa
xchg
mov
addr16
push
fcmovbe
sbb
lds
and
(bad)
loopne
pop
hlt
cmp
mov
(bad)
mov
popf
or
sbb
jb
aam
seta
cmp
mov
neg
cdq
push
or
sub
cmc
imul
cmp
push
loop
sub
bound
mov
into
mov
popa
pop
xchg
push
inc
jne
sub
add
mov
mov
push
jno
nop
cmps
rcl
mov
or
icebp
sbb
lock
std
mov
stc
in
adc
adc
ficomp
mov
xor
(bad)
imul
push
mov
mov
sbb
scas
out
inc
jnp
inc
in
movs
mov
or
jl
fdivr
pop
pop
pop
mov
sub
jmp
dec
stos
ror
add
js
lods
mov
out
xchg
test
clc
cli
inc
xchg
sti
sbb
sbb
int3
(bad)
pushf
push
icebp
and
je
mov
call
xchg
fisttp
shl
push
lea
pushf
(bad)
leave
je
pushf
(bad)
inc
stos
pushf
inc
pusha
js
ins
inc
cmp
pop
test
loop
jae
cmp
jnp
push
xor
ins
lahf
rol
jnp
inc
in
jl
scas
(bad)
out
enter
gs
and
xor
inc
dec
add
xlat
jb
sbb
mov
jno
xchg
mov
(bad)
outs
scas
jb
call
div
inc
jns
dec
pop
xchg
cmps
shr
jge
mov
loop
mov
push
not
and
mov
aaa
dec
iret
xchg
xchg
daa
imul
rol
movs
or
rcl
fcmovnb
mov
daa
das
arpl
inc
ins
add
mov
add
loop
in
fwait
mov
cld
mov
xlat
sbb
out
es
xchg
mov
pop
mov
xchg
fist
mov
push
push
push
push
xlat
imul
adc
sbb
inc
mov
jb
add
or
js
mov
pop
stos
(bad)
sub
xchg
jle
std
(bad)
je
jmp
xchg
int
inc
aam
fcmove
mov
fadd
loope
sti
sar
and
in
stos
fnstcw
out
jns
sub
les
loop
pop
int3
mov
lahf
ror
ficom
stc
or
cmp
hlt
mov
mov
xchg
daa
xor
sahf
int
xchg
fcom
sub
jno
call
test
inc
push
sub
sub
dec
jne
inc
repz
sti
xor
int
fdiv
xchg
xchg
lods
int
adc
(bad)
retf
mov
in
dec
mov
pop
in
mov
in
cmc
push
mov
(bad)
daa
test
js
stos
jp
repz
inc
mov
(bad)
xor
movs
(bad)
or
pop
and
cmp
pop
test
cli
jae
and
xchg
inc
mov
scas
cmc
test
sub
shl
push
cmc
call
adc
mov
sub
retf
not
nop
bswap
unpckhps
stc
or
pop
inc
out
xchg
mov
inc
call
jecxz
inc
adc
xor
inc
jno
fwait
int
inc
xor
cmp
push
in
add
pop
pop
lods
shr
cmc
jg
fs
out
movs
jb
mov
(bad)
cmps
xchg
mov
and
or
inc
mov
pinsrw
imul
(bad)
jecxz
rol
pop
lea
pop
jge
push
ins
and
in
mov
inc
sub
pop
mov
mov
repz
cmp
ret
or
ds
js
sbb
dec
push
adc
sub
scas
pop
imul
out
in
scas
pop
jmp
jb
jmp
fdiv
mov
or
mov
xchg
sub
push
mov
cmp
pop
mov
mov
fs
xor
arpl
fs
pop
out
or
pop
mov
int
movs
push
jge
mov
push
mov
cmp
sub
xor
push
add
mov
pop
out
sub
jnp
retf
and
dec
xchg
mov
cmp
sub
(bad)
rcr
sub
movs
sub
int
retf
mov
adc
fnstenv
aaa
test
(bad)
dec
mov
(bad)
push
repz
or
jns
cwde
and
adc
js
pop
sar
jg
mov
mov
les
jg
mov
sar
xor
cmc
inc
cmp
ss
sbb
sub
add
(bad)
push
(bad)
stos
pop
mov
in
and
sar
dec
inc
mov
push
pop
jp
imul
push
scas
pop
test
fisubr
dec
xchg
out
pop
mov
xor
push
cmps
pushf
fcmove
add
in
and
push
movs
ficom
jo
sahf
dec
mov
movs
jecxz
sbb
fimul
enter
jns
pusha
adc
mov
xor
fcmovbe
cmp
rcr
inc
sbb
loope
pop
mov
into
mov
or
pop
inc
aas
xchg
xlat
ja
pop
xor
repz
(bad)
cdq
(bad)
mov
retf
(bad)
add
adc
ins
scas
add
jnp
and
xor
and
aad
xchg
cmp
inc
sahf
imul
iret
dec
das
xchg
int3
and
ret
aaa
cmp
cmp
loope
jbe
aas
mov
dec
in
add
xchg
(bad)
(bad)
sbb
and
mov
or
pusha
jae
jmp
add
mov
and
jns
test
cmp
add
jmp
add
adc
pusha
outs
jno
xchg
inc
sbb
lahf
xchg
sbb
xlat
add
scas
inc
pusha
add
pop
popf
inc
bound
scas
mov
aaa
add
sti
mov
in
mov
cmp
(bad)
test
mov
out
movs
cmp
enter
bound
imul
dec
add
arpl
xlat
mov
xchg
add
cli
fisubr
adc
mov
add
std
retf
dec
aas
mov
sbb
jmp
jecxz
mov
pushf
adc
xor
and
or
pop
xor
test
adc
aam
push
enter
jge
in
ror
mov
imul
push
movs
div
pop
push
xchg
mov
ja
int3
repz
repz
(bad)
cld
cmp
ja
xchg
mov
lock
push
xor
mov
mov
fsubr
lahf
cs
out
sub
or
in
retf
jnp
jmp
mov
clc
mov
jle
xchg
int
cmp
inc
jo
xor
xchg
mov
dec
cwde
xor
fcmovbe
sahf
loop
cmp
jg
push
out
inc
or
and
or
mov
cdq
dec
sub
test
das
cs
clc
mul
in
sbb
movd
les
add
push
movs
arpl
push
sub
xor
cmp
sbb
or
sbb
sbb
and
out
dec
mov
mov
test
into
cmp
mov
int
retf
and
lahf
push
xchg
and
lods
ins
test
nop
dec
cmps
dec
jb
fild
push
and
xor
xor
fst
jno
add
das
adc
mov
xlat
and
add
xor
hlt
mov
cmp
mov
jno
or
push
fs
jecxz
xor
sbb
scas
in
xchg
fist
cli
aad
out
aam
outs
push
mov
ror
lock
sbb
jns
retf
stos
sti
mov
mov
mov
lds
cmp
push
lods
mov
sbb
clc
xor
xchg
into
fild
mov
cmc
add
xor
fmul
cmp
out
loop
movs
push
test
sub
ret
cmps
outs
add
fidiv
or
addr16
and
cld
xchg
mov
xor
or
mov
(bad)
cmp
fucom
sub
xlat
xchg
push
xchg
lods
fisubr
inc
mov
setb
rol
push
mov
xchg
rol
outs
std
and
mov
sub
out
mov
pop
xchg
popf
xchg
and
pop
rcl
xchg
jecxz
and
adc
jb
(bad)
call
jl
fiadd
or
jecxz
std
sub
jb
out
xchg
mov
nop
stc
fstp
pop
xor
test
hlt
mov
mov
jo
jmp
inc
jecxz
mov
dec
mov
fild
add
jne
loope
or
and
popa
and
pusha
push
std
push
pop
sbb
adc
mov
outs
clc
sar
push
xor
xor
sub
or
in
jp
imul
retf
enter
or
and
ret
arpl
push
or
add
hlt
es
rol
cld
lods
xchg
dec
xor
xchg
loope
rcl
jp
xor
arpl
mov
and
jecxz
popf
dec
pop
sbb
xor
fisubr
enter
fs
lahf
pop
xchg
jmp
rcl
scas
rol
int3
mov
test
adc
test
aam
adc
test
out
and
in
int3
or
iret
ret
icebp
or
jmp
xchg
in
mov
mov
pop
push
sub
mov
push
ficomp
dec
mov
xor
and
ret
or
shl
neg
adc
in
dec
mov
movd
cwde
lds
leave
(bad)
mov
cmp
pop
push
mov
adc
push
shr
mov
and
rcl
jno
cmp
retf
pop
fdivr
push
mov
loop
fsub
push
js
call
popf
inc
mov
xlat
cmp
rol
jae
pop
dec
in
enter
outs
sbb
inc
mov
outs
pop
loope
jl
scas
inc
xor
rcl
inc
push
(bad)
in
lds
sub
test
or
jmp
xchg
jbe
lea
(bad)
bound
xor
mov
mov
loopne
push
loop
dec
or
push
inc
mov
mov
lods
pop
sub
cmc
outs
mov
je
rcl
push
aaa
loop
adc
addr16
xchg
push
jmp
and
das
push
jecxz
daa
add
jb
mov
test
jp
jae
add
adc
xchg
cs
jne
scas
clc
scas
aad
inc
cmp
sub
dec
add
icebp
add
cmp
sahf
mov
mul
xchg
add
mov
popa
jbe
and
repz
pop
sub
push
adc
mov
or
cmp
fsub
jnp
adc
xchg
out
fdivr
and
aam
mov
jnp
mov
pop
dec
movs
vandps
mov
lods
jne
sar
xchg
int
out
mov
mov
ins
aaa
add
cmp
adc
rcr
sbb
mov
mov
int3
mov
inc
js
mov
cmp
loope
inc
xor
adc
in
lods
mov
xchg
inc
adc
es
jg
ja
mov
pop
jbe
pop
je
aaa
dec
mov
mov
dec
fld
imul
jmp
cmp
test
into
xchg
(bad)
push
out
lods
enter
repnz
jg
push
ret
loope
xor
test
test
test
inc
jp
pop
retf
sub
mov
fucomip
pusha
jle
sub
inc
(bad)
pop
mov
aad
ds
add
pusha
popa
jmp
(bad)
aam
(bad)
test
sti
test
inc
or
jmp
out
mov
iret
mov
mov
mov
dec
adc
xlat
jmp
push
std
stc
adc
xchg
cmps
push
pop
sbb
jns
push
movs
push
cmovg
iret
cmps
lea
xor
push
(bad)
in
rol
ficom
push
jmp
sub
out
sbb
cmps
push
xchg
sbb
call
mov
push
test
push
dec
pop
or
pop
dec
(bad)
test
call
int
stos
mov
pusha
push
(bad)
clc
mov
int
or
dec
lock
cmp
call
push
enter
(bad)
clc
(bad)
mov
stos
fsub
aam
cld
in
movs
in
aam
adc
daa
cmp
in
adc
push
outs
mov
cmp
popa
imul
adc
pop
and
push
out
je
jle
pushf
pop
add
sub
stos
cmc
mov
loopne
dec
les
loop
pop
adc
icebp
mov
mov
cld
movs
ret
sub
fcom
shr
lahf
sbb
dec
in
mov
mov
dec
sbb
add
cli
and
outs
scas
pop
adc
mov
and
loope
fdiv
cmp
adc
mov
repz
pop
ret
and
mov
bound
jg
mov
xchg
push
test
push
test
cmp
mov
lea
cmp
int
sar
popw
sbb
lahf
jno
or
retf
shl
cdq
dec
scas
sbb
jbe
sbb
rol
fs
test
inc
aaa
lods
mov
jl
int3
mov
fldcw
pop
pop
jns
xchg
add
and
out
jae
or
jp
jge
mov
jns
jns
and
(bad)
add
cli
iret
mov
test
push
test
xchg
dec
lds
repz
loopne
add
add
mov
ret
pop
or
rcr
fdiv
jmp
je
jl
dec
xlat
ins
out
jmp
test
sub
or
sti
adc
jnp
fs
ins
cmc
adc
retf
xlat
push
leave
xor
es
repz
dec
(bad)
lock
cwde
retf
pop
mov
push
adc
lods
mov
add
push
dec
xchg
and
outs
lock
xchg
hlt
or
inc
bound
sahf
mov
rcl
mov
popf
mov
sti
cld
jecxz
test
jmp
fwait
aad
sbb
cmps
int
lahf
adc
ja
stos
dec
lods
les
scas
xchg
adc
ror
js
cmp
(bad)
pop
mov
xchg
cmps
or
in
arpl
dec
addr16
cmp
cmp
and
cmp
and
popa
sub
popa
out
inc
les
les
inc
mov
or
(bad)
iret
dec
xchg
dec
(bad)
jecxz
push
sbb
push
in
fldcw
arpl
xchg
xor
loopne
mov
lahf
in
in
jnp
jg
mov
icebp
clc
jnp
cmp
push
mov
lock
arpl
ror
loope
pop
dec
cmp
inc
mov
mov
out
mov
sub
in
popa
push
jge
adc
sbb
mov
iret
and
test
jo
std
repz
fld
pop
retf
ins
mov
xchg
in
(bad)
test
loope
fsub
push
dec
test
xchg
inc
idiv
push
fdiv
ss
in
push
or
inc
or
adc
mov
loopne
push
jmp
or
sub
call
fs
mov
fs
add
stos
push
add
jmp
adc
sbb
pusha
mov
movs
add
frstor
sub
cmp
push
pop
lock
enter
(bad)
xchg
inc
jns
mov
inc
jbe
dec
leave
into
ds
fdiv
repnz
aam
pusha
mov
ins
inc
scas
jp
(bad)
aam
jmp
lock
jle
and
je
fs
or
cmps
mov
pop
ds
bound
(bad)
jmp
stos
retf
mov
jnp
jl
inc
mov
mov
jmp
or
mov
call
mov
gs
shl
loopne
scas
adc
idiv
lds
push
aam
xchg
movs
and
xchg
jb
popa
pop
push
dec
xchg
sub
std
pusha
cmps
outs
cmp
add
fbstp
inc
popf
xchg
jp
mov
sub
adc
push
les
dec
aam
lods
arpl
mov
cmps
repnz
movs
loop
movs
mov
push
lock
stos
dec
retf
and
(bad)
lods
shl
retf
scas
adc
jmp
sti
push
xor
adc
fld
mov
das
pop
pop
pop
cs
bound
or
mov
mov
xchg
nop
add
iret
ror
clc
xor
retf
add
xor
ror
xor
adc
pop
xor
mov
pop
jge
aad
push
sub
(bad)
adc
popa
(bad)
sbb
outs
add
sahf
loope
imul
pop
mov
in
(bad)
popf
lea
punpckhbw
dec
es
jl
call
or
pop
retf
mov
jae
xor
inc
std
push
(bad)
into
dec
out
je
cmp
ror
stos
sahf
inc
and
and
fld
test
inc
mov
adc
jnp
jns
and
lock
mov
inc
jno
lock
cmps
repnz
xor
xor
je
cli
sub
ins
and
or
lods
js
sti
iret
or
loopne
pop
jno
iret
jge
fs
dec
jb
ret
arpl
mov
push
cmp
jno
pop
mov
dec
cmp
clc
sbb
cmp
mov
pop
mov
sub
or
pop
xor
jl
rol
and
rcl
mov
mov
push
xor
cmp
ret
in
xchg
sti
add
cmp
sahf
(bad)
jns
je
add
cmps
(bad)
jae
jbe
dec
mov
pop
mov
fidiv
xor
add
sub
retf
mov
addr16
cmp
je
fwait
mov
push
cmp
scas
and
popa
arpl
aaa
xor
out
cmp
mov
sar
xor
ror
pop
movs
dec
cld
jns
imul
jno
sar
lahf
dec
repnz
jne
mov
mov
inc
les
push
inc
push
xor
ret
fcomp
sbb
pop
dec
dec
mov
jmp
mov
dec
inc
mov
add
call
cmps
sub
mov
cmp
xor
mov
jge
push
adc
cmps
jmp
xchg
and
pop
retf
cs
jle
fidivr
mov
call
mov
and
dec
jg
cmp
sbb
scas
ret
sub
cdq
int
xchg
push
pop
movs
int3
sbb
mov
sub
add
addr16
outs
inc
inc
aam
ds
xchg
pop
sahf
xchg
jmp
pop
cmc
cmc
scas
xchg
xchg
sti
or
fcomp
ret
sub
cmp
add
mov
sub
stos
cmp
stos
call
jmp
fsub
cmc
loopne
xchg
ss
(bad)
jp
cmp
out
lods
out
test
add
mov
imul
mov
std
sbb
xchg
cmc
mov
call
movs
jns
cmps
fmul
and
in
push
lds
outs
int
cwde
mov
push
sbb
mov
aam
imul
cmp
cmps
adc
jecxz
xchg
jns
sub
fimul
in
call
add
movs
out
mov
enter
mov
call
imul
js
loopne
rcl
jo
sub
outs
ret
ins
daa
xchg
(bad)
jns
mov
scas
mov
std
pop
cmp
addr16
cmp
xor
mov
xchg
and
sbb
cld
(bad)
jns
and
aaa
call
jmp
repz
dec
and
int3
mov
jge
or
(bad)
fnstenv
sub
in
lds
push
out
add
xchg
and
mov
in
push
scas
fmul
jmp
sub
add
jl
mov
push
iret
sahf
jmp
hlt
int3
fcmovnb
xor
jl
ret
stos
cli
arpl
dec
pop
and
jmp
adc
xchg
es
nop
push
mov
mov
pushf
mov
pop
inc
mov
es
push
call
sub
push
out
or
cmc
ficom
mov
rcl
pop
adc
mov
jg
sub
mov
cmp
(bad)
jp
loope
or
and
dec
fcmovnb
xchg
cli
sub
mov
cmps
and
mov
repz
retf
xor
pop
lds
ror
and
jge
xchg
shl
rol
in
dec
and
inc
(bad)
fidivr
xor
pop
fmul
fwait
lea
in
push
or
or
lahf
cdq
popf
mov
sbb
cdq
xchg
push
mov
fadd
stc
xchg
ds
sar
ins
ret
adc
scas
jecxz
fsubr
stos
dec
inc
jg
and
sub
push
inc
cmp
mov
(bad)
(bad)
lahf
push
sub
mov
xor
mov
ficom
pop
iret
inc
or
push
xchg
pop
mov
pop
add
dec
dec
jno
cld
sub
mov
or
sub
add
ins
inc
lods
xchg
dec
inc
iret
fisubr
xlat
jno
cmc
stc
push
ror
stos
xor
jne
mov
rcl
fisubr
sar
dec
push
push
pusha
adc
cmp
sub
pop
int
mov
pop
test
jle
idiv
adc
push
es
test
cli
cld
popf
xor
inc
scas
or
cmps
cli
and
rcl
sti
fnstsw
add
repz
jmp
push
mov
mov
fst
xor
outs
add
mov
pop
mov
xor
mov
xlat
scas
leave
(bad)
js
push
out
call
xor
add
cwde
punpcklwd
int
enter
push
jl
xchg
xchg
cli
aaa
shl
xchg
inc
add
inc
mov
int3
mov
jb
xchg
cmp
jg
dec
fmul
js
mov
je
sbb
jle
js
xchg
sub
movs
xor
push
jmp
xchg
sbb
sub
ds
(bad)
jecxz
lods
pusha
mov
les
cmc
jg
mov
mov
mov
je
push
dec
ret
int
sub
sub
les
dec
mov
out
les
xor
cmp
pop
mov
mov
sub
enter
out
cmps
and
add
mov
fisubr
jmp
loopne
iret
mov
aad
inc
pop
in
jns
pandn
adc
int
je
stos
or
mov
shl
popa
add
and
lahf
ds
mov
fstp
cmps
fidiv
mov
out
push
leave
push
call
xchg
aaa
es
fild
and
rcr
ss
out
pop
out
mov
push
pop
inc
repnz
iret
sbb
(bad)
mov
mov
jl
data16
test
adc
mov
mov
mov
fnstenv
in
pusha
sbb
sub
(bad)
jmp
add
sub
sar
sub
jecxz
jmp
xchg
cld
mov
add
out
test
xchg
daa
push
rol
lahf
pop
in
xchg
jne
imul
cmp
lock
cli
xchg
push
shld
mov
xchg
inc
or
scas
push
imul
adc
scas
(bad)
ins
pusha
sbb
jbe
xchg
xchg
cmp
pmovmskb
push
outs
addr16
xlat
mov
in
jl
jae
mul
stos
mov
popf
icebp
nop
adc
mov
lods
stos
and
out
sbb
push
fiadd
stos
sub
(bad)
popa
ins
push
cmps
add
(bad)
pop
stos
cdq
scas
or
cmp
xchg
sbb
aaa
shr
push
mov
outs
xor
rcr
fwait
push
aaa
xor
ds
dec
(bad)
(bad)
mov
jmp
enter
inc
outs
cdq
pop
lods
out
jnp
add
iret
sar
mov
dec
push
imul
aaa
push
jmp
sbb
xchg
mov
xor
and
and
out
and
jae
dec
and
jecxz
lock
loope
dec
popf
inc
xchg
and
mov
scas
test
cmp
push
repz
outs
mov
ins
pop
sub
push
cld
xor
out
movs
xor
mov
jp
aad
jge
and
adc
pop
pop
mov
stos
stos
test
mov
cmp
jne
popa
add
retf
push
dec
xor
xchg
push
jno
push
mov
sar
(bad)
icebp
add
addr16
sbb
inc
xchg
ror
jp
mov
or
jmp
push
vsubpd
pop
jae
sti
push
shr
int
pop
mov
mov
(bad)
das
pop
outs
mov
out
inc
xchg
movs
pop
push
xor
lods
test
adc
add
imul
push
enter
ret
clc
sub
sbb
mov
(bad)
xchg
cs
xchg
mov
dec
jbe
outs
iret
pop
and
jmp
into
test
(bad)
dec
sbb
call
inc
cmp
mov
adc
and
loopne
inc
cmc
or
and
out
stos
cmp
test
ss
xor
dec
pop
ds
mov
ss
jle
push
xor
pop
sbb
or
add
dec
jns
xor
jmp
push
jp
ins
sti
jno
add
cmp
stc
and
or
cmp
les
nop
xchg
push
repnz
ds
push
and
or
sahf
jmp
rol
pop
mov
sub
ficomp
xchg
or
mov
sub
lahf
pop
xchg
add
sbb
loop
add
jne
pop
outs
or
or
inc
mov
pop
cdq
test
mov
or
lahf
cmp
adc
pop
xchg
lock
pop
daa
push
call
mov
push
lahf
sub
jmp
sbb
nop
and
cmp
fisttp
push
pushf
cmp
inc
jle
aad
test
cmp
push
adc
pop
(bad)
stos
and
jl
out
xchg
xor
pushf
pop
dec
popa
add
popa
mov
in
adc
data16
cdq
sbb
jge
pusha
and
les
imul
push
adc
mov
jb
shl
cli
adc
mov
shl
push
mov
add
outs
popa
ror
in
mov
daa
jg
sbb
(bad)
mov
mov
dec
leave
icebp
mov
es
movs
loop
adc
and
sbb
leave
idiv
mov
xlat
fs
and
and
xchg
cmp
clc
sub
and
hlt
leave
add
xor
sbb
jae
mov
add
push
mov
popf
sub
int3
mov
inc
sub
outs
call
imul
sbb
mov
jmp
popf
adc
pop
jg
mov
mov
imul
mov
mov
inc
xlat
js
push
(bad)
ds
jo
push
test
outs
test
mov
call
mov
lods
frstpm(287
or
test
leave
mov
fisttp
rcl
call
mov
xor
cmp
xor
and
xchg
pushf
or
loope
lods
dec
imul
test
pop
test
or
lahf
test
jb
in
adc
(bad)
cdq
sti
xor
pop
nop
push
mov
les
inc
imul
inc
stos
or
and
xchg
push
mov
push
mov
(bad)
aas
es
sub
into
in
xchg
sbb
mov
inc
outs
and
push
fs
adc
push
jnp
fdivr
pop
dec
iret
inc
mov
pop
jae
stos
scas
mov
ficom
movs
dec
push
inc
arpl
push
mov
lds
lds
jecxz
jl
adc
adc
push
int3
push
adc
jns
mov
div
push
push
cmc
add
ins
std
scas
pop
cli
pop
lods
repz
shl
xor
xor
pop
outs
cmps
pop
mov
test
mov
(bad)
cmp
cmps
jecxz
mov
dec
xor
sbb
push
stos
or
clc
mov
jnp
out
mov
movs
xchg
pop
ds
and
mov
dec
adc
mov
push
rcl
jle
push
lds
int
sub
mov
imul
xchg
xchg
into
push
iret
sti
adc
mov
xchg
leave
lds
or
outs
mov
aaa
outs
rcl
xor
sahf
add
cmp
in
fild
dec
xor
mov
cdq
(bad)
shr
test
cmp
add
lods
cmp
sbb
cmp
and
iret
iret
adc
imul
jp
sar
pop
adc
jne
retf
mov
push
iret
inc
and
call
jecxz
repnz
rol
sub
jg
mov
lods
xor
cmp
icebp
iret
fcmove
mov
mov
lods
xor
cmps
fs
iret
je
scas
add
out
cdq
repnz
ds
stc
shl
lds
out
stc
jle
imul
xor
mov
aam
or
add
mov
out
mov
sub
sti
mov
fst
imul
push
mov
mov
mov
fs
pop
push
retf
ficom
add
sbb
shl
lods
adc
out
pop
xor
xlat
jno
xor
mov
cmp
sub
mov
rol
xchg
lods
inc
adc
xchg
push
xadd
jns
sbb
sub
mov
loopne
(bad)
popa
repz
(bad)
jbe
inc
dec
pusha
cmc
pusha
inc
cmps
cmps
(bad)
mov
sub
xchg
jg
mov
icebp
out
push
retf
retf
dec
ror
(bad)
les
cmp
icebp
repz
inc
cmps
adc
test
cmp
inc
clc
(bad)
jb
aaa
and
clc
xchg
sbb
and
cs
bound
sahf
or
ds
bnd
nop
lahf
hlt
fcomp
adc
mov
fsub
clc
or
mov
or
and
ins
enter
loopne
dec
mov
in
hlt
jge
ret
arpl
mov
in
xchg
push
and
cmp
imul
adc
arpl
cli
sbb
mov
jmp
add
xor
cmp
cmp
ins
stos
jne
pop
pop
test
add
ja
imul
sbb
sub
and
cmp
add
pop
shl
movs
je
xchg
mul
lock
or
xchg
sbb
aam
sbb
iret
xchg
jmp
dec
sbb
(bad)
jg
sahf
mov
mov
cmp
jecxz
jecxz
and
push
cmp
pop
nop
and
pop
jmp
dec
in
mov
and
push
sar
lahf
push
lods
jg
jae
cmc
dec
and
idiv
mov
loop
(bad)
(bad)
add
fild
mov
adc
in
or
shl
fwait
stos
mov
stc
or
jno
xor
lahf
xchg
aas
in
xchg
inc
gs
add
dec
and
sbb
xor
stos
adc
or
push
cmp
imul
adc
xchg
push
repz
or
xor
pusha
push
mov
add
in
ja
xchg
or
fwait
ins
adc
and
shl
jnp
fstp
in
pop
jo
xchg
or
je
inc
pushf
pop
xchg
mov
(bad)
cmp
repz
inc
mov
fucomp
rol
gs
aam
xchg
mov
nop
(bad)
div
xor
mov
bound
jp
inc
pop
(bad)
cli
xchg
push
mov
retf
or
(bad)
mov
sub
repnz
mov
imul
inc
in
push
ss
cli
cmp
jne
mov
xchg
dec
pop
cmps
sbb
push
icebp
dec
add
stos
jp
mov
and
and
jae
adc
add
ret
push
inc
push
fbld
ins
sub
ss
js
in
out
mov
and
jbe
push
sub
pop
sub
les
cld
mov
call
repnz
mov
add
fmul
or
fcmovnbe
jle
push
aad
test
jbe
ror
dec
idiv
into
mov
jecxz
cmp
fs
leave
and
dec
inc
push
cmps
fdivr
lahf
repnz
outs
sub
cli
mov
sahf
xchg
cmp
icebp
push
pop
imul
pushf
adc
rol
mov
nop
popa
xor
xchg
jno
sub
shl
mov
(bad)
cwde
pop
or
push
mov
iret
xor
enter
push
shl
test
in
sar
push
mov
dec
xchg
adc
xor
lock
cdq
jg
pop
pop
pusha
fdiv
jmp
xchg
adc
outs
mov
aaa
xchg
push
cmp
xor
shr
mov
xchg
dec
or
xor
cmp
retf
mov
and
sbb
mov
inc
scas
dec
jbe
fmulp
mov
neg
fst
push
nop
add
pop
in
xor
jecxz
fcom
not
imul
ins
lods
retf
stos
mov
enter
ss
arpl
push
push
or
or
mov
push
test
inc
loopne
loope
(bad)
pop
cld
sar
pop
ja
xchg
scas
jge
adc
stos
mov
cmp
ret
sub
icebp
mov
pop
sahf
and
push
adc
dec
xor
pop
adc
stos
std
dec
popa
cmp
cdq
jbe
popa
out
scas
inc
cwde
mov
movs
cli
aad
addr16
mov
cmp
adc
fidiv
icebp
movs
loope
adc
push
jecxz
dec
test
adc
push
xchg
jae
mov
jb
iret
dec
mov
popa
icebp
mov
pop
mov
jmp
xchg
cmp
ins
clc
hlt
xchg
push
mov
dec
in
push
sar
sub
scas
iret
fisttp
push
xor
cmp
in
mov
cmp
mov
inc
cmp
add
imul
sti
inc
inc
push
jne
sbb
out
and
cld
add
aas
jno
aas
cwde
xchg
loop
jae
push
and
enter
(bad)
sub
pop
push
push
leave
mov
cmp
dec
or
shr
xor
mov
dec
sub
outs
rcl
pop
(bad)
xchg
add
rol
jmp
(bad)
call
mov
pop
gs
iret
les
ret
or
loope
(bad)
or
xor
lock
sbb
mov
cmp
jl
leave
stos
pushf
mov
aad
(bad)
or
in
imul
dec
in
or
test
lods
adc
mov
pop
pop
cmp
fadd
sbb
sub
rcl
movs
inc
ficom
and
test
sbb
sar
add
shl
nop
mov
mov
mov
push
outs
cmp
mov
loopne
push
dec
fidiv
bound
mov
hlt
ret
enter
xchg
test
mov
mov
lds
mov
jnp
sbb
pop
(bad)
aaa
cmp
xor
and
pop
js
adc
shl
mov
pop
scas
mov
cld
cli
fucomi
push
fild
inc
dec
int
aaa
jne
loopne
dec
xchg
pop
cmp
ins
shl
add
pop
jmp
mov
ss
mov
mov
movs
pop
xchg
pop
jb
push
mov
inc
adc
mov
scas
(bad)
mov
mov
scas
dec
cmp
sbb
xor
lods
xchg
inc
int3
dec
aam
add
dec
mov
cmp
test
push
scas
adc
add
icebp
xchg
push
rcr
cmp
ja
lea
mov
add
add
jmp
sbb
(bad)
cmp
fwait
and
lock
adc
ror
test
les
sbb
cli
or
fwait
(bad)
loope
dec
xadd
(bad)
mov
ins
cmps
int
popa
mov
out
ret
outs
loopne
inc
pop
dec
xor
int3
mov
nop
dec
(bad)
js
ins
into
mov
mov
mov
popa
pushf
aaa
loope
pusha
mov
sub
push
sbb
adc
jle
hlt
push
call
dec
shl
xor
jle
aam
lahf
retf
dec
pop
mov
addr16
fs
outs
aam
call
clc
pop
mov
mov
inc
jno
mov
mov
arpl
push
outs
adc
cli
test
push
and
sub
out
mov
jecxz
mov
retf
je
sbb
cld
mov
fld
pop
push
js
cmp
mov
dec
dec
and
ss
or
data16
cmp
aam
ins
aaa
addr16
mov
push
mov
sbb
cmps
inc
push
out
add
cmp
fimul
clc
mov
pop
(bad)
ds
xchg
jecxz
cmp
xor
cmp
pop
adc
and
(bad)
int3
shr
add
sub
popf
push
nop
sbb
pop
rcl
mov
leave
adc
mov
sbb
mov
nop
das
call
out
test
rcl
mov
jmp
or
cs
movs
pop
push
dec
ds
fwait
je
or
sar
mov
add
test
mov
mov
dec
repnz
or
fadd
arpl
mov
(bad)
cmp
sub
inc
mov
shr
sub
clc
cmc
das
push
fadd
mov
rcl
cmps
mov
pop
dec
popf
in
repz
lock
popf
out
movs
add
jne
scas
mov
and
gs
mov
and
icebp
mov
inc
jne
push
dec
pop
xchg
ins
lea
test
mov
enter
xchg
je
mov
iret
loop
jne
fidiv
adc
movs
cmp
xchg
div
adc
mov
mov
leave
aad
outs
cli
addr16
icebp
imul
push
(bad)
ds
ins
ret
fist
jmp
fdiv
inc
sbb
dec
mov
or
pop
pop
fsubr
in
imul
jg
mov
repz
sbb
push
fidiv
inc
push
rcl
dec
add
fs
sbb
xor
jmp
mov
push
sub
push
dec
xchg
cli
arpl
mov
and
add
lahf
iret
jns
and
and
nop
je
xlat
nop
adc
ja
stos
icebp
mov
cmps
lahf
add
ret
mov
ss
fldenv
push
xor
ret
adc
sti
xchg
xor
push
call
sbb
cmp
xor
push
call
sbb
push
add
mov
mov
push
mov
push
std
ret
sub
mov
push
repz
das
and
test
nop
shl
or
adc
lahf
xor
test
fisubr
dec
je
stos
repz
stos
adc
xchg
and
xchg
push
sub
cmp
fistp
ret
enter
or
push
vmptrld
in
mov
xchg
mov
mov
mov
cld
lock
jne
add
jecxz
rdtsc
adc
test
push
outs
sbb
inc
ja
dec
push
pushf
cmps
mov
jnp
adc
adc
add
xlat
shl
push
ucomiss
xor
push
xchg
ret
addr16
aaa
xchg
xor
movs
add
inc
not
dec
adc
js
adc
fidiv
loop
fsub
mov
push
mov
ror
lds
cmc
and
jno
adc
add
lods
xchg
mov
mov
cli
or
mov
mov
call
lahf
add
sar
repz
rcl
lea
retf
or
pop
je
lds
sub
or
mov
inc
push
xor
xchg
(bad)
cli
(bad)
retf
or
xchg
mov
movs
retf
icebp
ficom
inc
sbb
hlt
addr16
test
fwait
pop
es
xor
mov
mov
das
outs
mov
sbb
sbb
ss
sub
outs
hlt
mov
mov
ss
mov
or
cmps
add
repz
hlt
and
dec
inc
mov
loope
cmp
mov
aas
pop
sbb
es
pushf
and
loopne
mov
gs
outs
fisttp
cmp
(bad)
psubsw
adc
and
and
cmps
rol
xchg
jno
call
dec
int
ret
push
dec
dec
nop
(bad)
push
xchg
sbb
rcl
sbb
or
loope
mov
ret
xchg
dec
cs
fnstcw
mov
(bad)
into
shr
jbe
lods
push
es
mov
stc
push
mov
xor
xor
(bad)
ss
jmp
(bad)
mov
push
and
add
pop
xchg
pop
pop
das
lds
test
fcomi
dec
jecxz
test
fisttp
push
(bad)
xor
mov
and
mov
xchg
inc
inc
lds
inc
or
dec
or
repnz
pop
je
push
inc
aad
sbb
loopne
adc
pop
mov
or
jmp
(bad)
aad
repz
in
cvtpi2ps
shl
pop
xchg
test
icebp
pop
add
shr
jns
es
mov
sub
cmps
inc
test
jmp
sar
call
inc
or
mov
cwde
ins
jmp
jl
xchg
xor
sub
fwait
mov
push
xchg
aad
dec
and
mov
jno
cmp
inc
fs
jl
sbb
pop
movs
fild
inc
loop
jns
push
cmp
movs
das
aad
cli
cmps
lahf
mov
outs
sub
sbb
rol
dec
int
or
sti
jmp
imul
lock
std
mov
xchg
loope
mov
(bad)
outs
adc
std
adc
mov
push
add
sub
xor
pop
mov
push
lds
rcr
int3
jmp
mov
out
push
ds
mov
es
(bad)
dec
mov
push
inc
leave
jle
sub
movs
inc
push
push
ins
cmc
jne
inc
sbb
out
inc
ror
jge
stos
jmp
jae
inc
pop
adc
outs
mov
dec
mov
leave
push
out
cld
in
scas
adc
mov
sbb
arpl
cwde
test
(bad)
(bad)
xchg
push
es
push
mov
adc
dec
call
out
jg
rcl
loop
push
inc
jne
gs
les
and
nop
pop
dec
xchg
xor
add
inc
pop
aad
xchg
add
popa
cmc
push
scas
sbb
lock
in
test
add
lock
sahf
jecxz
inc
dec
and
(bad)
jl
sbb
push
jno
loopne
jae
add
rol
pop
ds
cdq
cmp
jmp
mov
sub
mov
or
adc
shl
fdivr
xchg
and
pop
sbb
push
dec
pop
les
sbb
adc
pop
jmp
xlat
add
mov
inc
pop
xchg
push
inc
sbb
sbb
aas
mov
inc
dec
and
dec
out
inc
mov
pop
jbe
sbb
jl
mov
xchg
dec
retf
or
jg
push
aam
(bad)
jge
loope
popa
daa
bound
movs
inc
call
ds
xchg
loopne
add
adc
sub
mov
and
and
add
inc
stos
jmp
js
mov
jns
imul
mov
es
and
hlt
jg
mov
inc
rol
call
test
icebp
push
fldcw
jmp
out
inc
les
in
retf
in
adc
mov
fcmove
je
cdq
xchg
and
test
xor
or
add
shr
inc
(bad)
jp
or
sub
loopne
loopne
push
fadd
loop
mov
out
je
lock
push
sbb
add
enter
cli
cmc
mov
retf
adc
jo
dec
enter
push
push
das
xchg
push
shl
push
shr
xor
loop
ins
sbb
out
mov
dec
pusha
outs
call
mov
sbb
shr
dec
jmp
inc
nop
inc
imul
mov
cmps
jo
or
dec
add
shl
fisubr
fsubp
test
inc
mov
jle
ds
adc
add
bound
inc
ins
xchg
loopne
dec
dec
ins
xchg
push
retf
dec
push
fwait
and
jno
pop
jp
mov
es
xchg
mov
int
adc
pop
adc
or
test
retf
ins
xor
outs
dec
enter
add
pop
xchg
imul
mov
dec
lods
sbb
pop
jns
loope
jne
xor
(bad)
es
push
out
jge
mov
cs
push
mov
out
test
push
xor
call
sub
pop
popf
into
xchg
shr
xor
int3
jns
daa
dec
ficomp
push
jb
(bad)
jnp
scas
jmp
or
jb
(bad)
add
cmps
push
mov
dec
mov
stos
xor
jge
sar
adc
ficomp
xchg
lahf
cmp
cmps
addr16
jmp
xchg
jns
(bad)
pushf
mov
je
pop
cmp
inc
mov
dec
js
cmp
mov
retf
mov
cdq
stos
mov
cmp
jmp
sbb
mov
jns
or
(bad)
inc
test
call
(bad)
out
inc
xor
pop
shr
(bad)
int
out
inc
cmp
jbe
jmp
aaa
repz
es
fmul
popa
lahf
xchg
mov
xor
sub
les
addr16
adc
fisttp
mov
mov
pop
xchg
mov
pop
jae
out
call
jle
push
lods
hlt
mov
or
(bad)
scas
or
add
mov
div
and
or
pop
pop
pop
cwde
shl
sub
adc
test
jmp
js
fistp
dec
pushf
ins
xor
sti
test
(bad)
movs
sahf
cmp
rcr
push
push
adc
pop
es
or
(bad)
dec
push
cli
sub
(bad)
add
xor
cs
push
sub
push
sub
sub
jae
add
cwde
push
stc
mov
lods
cmps
pop
push
add
test
sub
mov
das
in
sbb
gs
add
or
inc
ins
xor
aad
neg
(bad)
mov
cmp
xchg
and
sub
dec
jae
(bad)
cli
sbb
jno
push
in
(bad)
push
mov
sbb
outs
inc
fisubr
dec
mov
mov
data16
jns
push
je
sbb
out
xor
inc
faddp
in
iret
ss
xchg
shl
loope
mov
cmp
sub
imul
add
(bad)
and
adc
xchg
dec
jb
lods
dec
xchg
ret
xchg
loope
int
cli
inc
mov
push
jne
mov
out
jmp
jmp
mov
inc
fdivr
mov
clc
in
jp
push
scas
iret
adc
inc
addr16
pop
out
cwde
nop
xor
into
pop
rcr
nop
xlat
stos
loopne
mov
sub
idiv
push
pushf
popa
mov
leave
in
repz
sub
test
sub
scas
rcr
sbb
mov
mov
or
sbb
jae
scas
iret
stos
mov
adc
mov
icebp
sbb
pop
not
cmps
in
sti
jbe
mov
js
fcmovnbe
inc
sbb
mov
leave
(bad)
outs
movs
push
jecxz
pusha
cmps
in
inc
leave
or
aaa
leave
mov
jecxz
out
fistp
sbb
adc
xchg
mov
fimul
xor
inc
and
outs
xor
adc
pop
sti
sar
neg
imul
outs
cmps
icebp
arpl
sahf
fdivr
xchg
ret
into
add
(bad)
mov
add
out
je
ror
pop
lds
icebp
sbb
test
push
sti
call
cwde
rcr
pop
inc
outs
out
adc
mov
adc
fild
mov
nop
lock
out
fs
enter
sbb
jb
ror
adc
scas
icebp
mov
jnp
and
retf
aas
test
js
pop
in
push
pop
add
les
bound
add
rol
mov
lods
mov
and
jge
mov
and
add
jg
jb
mov
and
inc
jno
ds
fiadd
add
mov
scas
push
xchg
or
sbb
lods
movs
or
xor
cmc
ins
pop
fs
adc
das
pop
retf
mov
mov
jp
xor
push
cmps
push
repnz
inc
sti
mov
ret
shl
mov
jle
sbb
mov
jmp
cmp
mov
imul
jmp
ja
jne
jno
sbb
stos
test
dec
addr16
push
jnp
dec
fsubr
add
dec
aaa
dec
ret
or
dec
stos
add
mov
mov
fstp
mov
lock
xchg
test
outs
push
mov
or
xchg
(bad)
adc
push
leave
jo
(bad)
jne
ret
repz
movs
xchg
rcl
jecxz
or
aaa
dec
sub
sub
push
ins
inc
or
jmp
in
jo
test
inc
aad
inc
and
(bad)
cmp
jle
mov
jno
gs
jle
inc
sbb
mov
std
imul
mov
out
inc
icebp
ss
mov
inc
mov
hlt
std
icebp
repz
xchg
sti
pusha
mov
cmp
stos
loope
cs
cs
mov
xlat
mov
fmul
jle
push
jns
int3
fxch
cmp
in
xchg
lods
jae
popa
push
fidiv
sbb
faddp
lods
enter
push
push
test
(bad)
nop
xchg
inc
in
call
pop
out
push
out
pop
mov
and
scas
cmp
and
and
xor
jge
in
int
fild
loop
repz
rcl
inc
mov
pop
inc
jmp
fst
or
test
ret
cmp
mov
dec
or
mov
sbb
stos
jp
retf
stos
xor
lds
sti
sti
add
div
inc
pop
xchg
(bad)
gs
mov
stos
jmp
iret
int
rcl
push
fld
sbb
cmp
mov
mov
scas
cmp
mov
inc
pop
fdivr
les
jecxz
push
bound
xchg
push
aas
repnz
mov
rcl
arpl
inc
mov
jns
mov
test
lods
je
clc
mov
addr16
mov
add
and
xor
addr16
invd
mov
sub
cmp
xor
lock
fcomp
push
ror
movs
jle
mov
dec
loope
call
jmp
lds
or
popf
push
mov
and
pop
(bad)
dec
xchg
lea
(bad)
loop
sbb
into
adc
inc
dec
aaa
add
sub
movs
test
jbe
movs
imul
ja
es
xor
sub
sub
pop
xor
iret
ins
add
cld
push
stos
push
push
or
mov
xor
jmp
and
faddp
xor
xlat
xor
cmc
scas
lods
cmps
mov
xlat
arpl
(bad)
fnstsw
dec
fdivr
add
enter
jp
mov
test
push
ins
mov
mov
repz
into
and
movs
outs
inc
xor
or
test
inc
pop
pop
lods
jne
sbb
push
mov
rcr
xchg
mov
aaa
pop
dec
xlat
test
mov
add
call
ja
div
push
add
test
bnd
push
pop
test
loope
aas
lods
mov
mov
pop
mov
add
in
xor
ret
adc
cs
fcmovnbe
ss
lahf
mov
leave
pop
lahf
ficom
pop
cs
mov
test
jecxz
in
ins
clc
cmc
dec
mov
dec
pop
mov
push
out
sub
cmps
stos
sub
mov
je
push
cmps
aad
out
(bad)
pop
mov
mov
dec
movs
xchg
mov
sbb
cmp
push
add
jle
xor
rcr
pop
out
inc
nop
das
mov
movs
ja
xor
sti
push
ds
rol
enter
add
popf
jmp
sar
call
dec
adc
xchg
jbe
retf
sub
cld
dec
cmp
dec
push
and
cwde
nop
push
dec
push
or
arpl
push
dec
in
outs
lahf
stc
xchg
les
xor
repz
xchg
cmp
sbb
mov
xchg
mov
pop
sbb
sub
out
dec
sti
(bad)
xchg
leave
out
scas
pop
jbe
mov
sbb
xor
pop
leave
call
lock
push
xchg
stc
lock
movs
ins
clc
and
jnp
mov
mov
xor
xor
cmp
mov
in
sub
aam
xchg
idiv
int3
mov
add
leave
jno
test
popa
xchg
xchg
dec
call
mov
xchg
js
ins
mov
sbb
loop
sbb
ins
scas
int
je
push
ret
int
js
mov
add
inc
inc
loop
inc
fwait
dec
test
jecxz
call
lods
inc
fstp
jno
add
int
das
xchg
mov
aad
lods
stos
in
inc
ror
popa
dec
mov
pop
add
push
scas
push
mov
sub
add
push
mov
jbe
mov
lahf
fmul
aas
pushf
das
add
cmps
adc
mov
bound
xor
inc
call
lods
or
cmp
or
jb
cmp
xchg
sub
call
inc
dec
arpl
inc
test
adc
adc
add
es
iret
sbb
xor
and
mov
adc
mov
adc
mov
aam
adc
jle
add
rcl
in
xchg
adc
dec
enter
sbb
inc
xchg
or
stos
add
xlat
popa
xor
xchg
and
lods
jmp
fild
pop
in
cmps
mov
stc
stc
sub
cwde
mov
mov
mov
xlat
stc
inc
hlt
push
or
test
je
in
ins
call
mov
pop
sub
cdq
(bad)
std
adc
ja
push
and
cwde
addr16
push
mov
dec
pop
loop
leave
popa
adc
fcom
push
push
push
cmp
xor
dec
jl
leave
adc
(bad)
ss
mov
into
into
fs
pop
loope
in
popa
fild
neg
popf
xlat
mov
(bad)
sbb
jmp
loopne
or
clc
inc
ss
push
pusha
sbb
sbb
ret
or
xor
inc
adc
mov
pop
sbb
lods
or
pop
iret
push
cli
fisttp
mov
out
stos
cmc
gs
xchg
outs
pusha
shr
jge
fldln2
pushf
mov
xchg
ror
cmp
test
ja
out
das
in
call
xchg
add
and
xor
je
fdiv
sar
push
add
push
sub
or
addr16
dec
mov
pop
sbb
sub
adc
and
inc
xor
imul
ja
cwde
mov
pushw
jecxz
jmp
sub
mov
xor
push
(bad)
push
movs
call
repz
test
cmp
sbb
cmp
je
mov
add
popa
pop
int3
into
out
jmp
es
mov
clc
or
sbb
icebp
push
es
inc
mov
adc
mov
bound
aam
scas
push
mov
xlat
data16
xor
(bad)
sub
jp
jb
nop
(bad)
sub
iretw
hlt
std
mov
call
ror
mov
and
push
arpl
add
inc
push
or
push
icebp
inc
stc
and
mov
stos
movs
retf
test
pop
sub
push
xor
or
jp
jg
or
aam
ret
ds
xor
sub
mov
jge
push
push
(bad)
ins
movs
lds
je
mov
int3
fcom
mov
xchg
repz
mov
dec
mov
shl
repnz
and
dec
or
loope
fisub
mov
mov
repnz
out
and
ss
aas
clc
shl
sbb
add
mov
pop
loope
test
test
mov
mov
dec
sbb
fdiv
and
paddb
inc
push
push
push
call
jecxz
sub
add
cld
mov
sar
mov
pop
clc
dec
sub
lds
adc
mov
mov
pop
retf
pusha
inc
cmp
test
xor
mov
out
push
js
inc
data16
push
cmps
or
outs
fcomip
jl
mov
aad
xchg
jl
add
mov
inc
retf
push
add
adc
loop
add
jmp
xchg
imul
inc
out
push
jb
cmp
sahf
or
xlat
mov
inc
lods
popf
aaa
pop
cmp
iret
pop
mov
out
mov
outs
jae
xor
not
cmp
pusha
jae
inc
xchg
push
(bad)
and
ror
jbe
cmc
in
sbb
fild
mov
cmps
sbb
inc
ds
xchg
or
sub
dec
jle
scas
sub
cli
popa
cmc
out
and
or
dec
sbb
push
mov
push
mov
(bad)
xor
retf
dec
lea
pop
lahf
mov
push
mov
lods
sbb
call
or
mov
pop
movs
lahf
mov
(bad)
mov
in
adc
movs
jbe
and
clc
mov
jl
push
daa
inc
sub
sbb
xlat
xchg
jnp
jb
adc
idiv
and
into
push
or
pop
and
xchg
lods
pop
js
in
cmp
fiadd
sbb
pop
das
test
(bad)
jmp
xchg
mov
push
jno
mov
fnstsw
outs
sbb
xchg
sti
arpl
retf
out
scas
dec
dec
mov
dec
mov
sub
mov
(bad)
dec
dec
pop
or
out
mov
cmp
pop
daa
shl
adc
mov
mov
inc
push
into
in
je
xchg
cdq
or
fadd
cwde
ret
aaa
adc
and
pushf
test
inc
xor
dec
scas
scas
mov
aad
sbb
outs
ret
cmc
fs
ss
into
fwait
sbb
mov
mov
sahf
adc
jmp
or
fchs
(bad)
scas
sub
pop
dec
pusha
sub
jmp
pop
lock
pop
push
xor
lock
adc
lea
push
jb
push
es
(bad)
ss
icebp
jmp
leave
mov
xchg
loop
or
and
pop
add
mov
adc
adc
neg
bound
mov
in
xchg
int3
cmp
mul
xchg
jno
bound
(bad)
sub
sbb
scas
sbb
push
pop
fst
retf
std
outs
or
mov
lods
push
mov
je
adc
cmp
push
shr
pop
push
ds
fld
ds
xchg
mov
dec
mov
lahf
(bad)
pushf
mul
dec
lahf
ret
seta
ins
add
xchg
cs
lahf
lods
movs
dec
fwait
(bad)
pop
fbld
(bad)
fist
push
ficom
fwait
sbb
cdq
not
cwde
mov
call
test
je
fwait
je
std
fs
push
sbb
sti
out
xchg
call
sbb
int3
mov
sbb
fcom
in
int
pop
pop
jl
je
jmp
xchg
and
jg
sbb
or
ret
mov
out
inc
inc
test
fwait
jne
push
data16
fcomp
add
mov
dec
lahf
out
mov
add
pop
push
add
dec
mov
cs
and
(bad)
repnz
shl
fwait
pop
inc
pusha
scas
dec
mov
mov
(bad)
sub
cmps
cmps
push
loope
loop
fidivr
iret
bound
push
xor
inc
scas
or
fisub
jl
call
daa
mov
into
arpl
mov
ret
mov
test
push
xchg
mov
sbb
(bad)
jg
call
popa
loopne
xor
rol
sahf
pop
int
call
mov
dec
cli
call
and
or
daa
or
dec
sahf
push
mov
into
test
cmp
push
dec
hlt
xchg
mov
(bad)
aas
fidivr
push
push
out
out
xchg
bound
cmps
push
push
sbb
adc
les
jo
les
dec
stos
iret
mov
mov
cli
(bad)
sbb
(bad)
xor
cmp
sub
lahf
inc
inc
call
xchg
sub
je
ret
mov
popa
dec
fld
lock
test
sub
dec
icebp
mov
push
cmp
add
in
sbb
shl
out
(bad)
jl
neg
add
in
pop
sbb
inc
or
inc
cdq
push
loope
aad
gs
loopne
aaa
jo
mov
cwde
push
jmp
(bad)
push
movs
aaa
mov
add
and
shl
scas
dec
cmps
test
out
retf
pop
call
inc
xor
aad
xchg
(bad)
stos
aam
push
sbb
sbb
loope
mov
test
inc
xchg
xchg
sub
les
les
arpl
ret
aam
(bad)
fmul
je
xor
mov
(bad)
in
pushf
push
xor
cli
inc
mov
test
xchg
pop
das
xor
xor
push
sub
sbb
pop
cmps
div
stos
lods
sbb
gs
movs
adc
mov
jmp
push
loope
int3
imul
jne
fs
retf
scas
cmps
jmp
xor
sbb
outs
cmp
sub
cmp
sub
cmp
sub
adc
pop
xchg
xchg
adc
sub
and
neg
imul
pop
or
fld
mov
mov
mov
nop
mov
push
daa
xchg
xchg
push
fs
fyl2xp1
popa
push
sbb
jne
jge
inc
cld
shl
in
call
inc
test
ss
ins
cwde
mov
repnz
test
arpl
cmp
sub
ins
movs
mov
mov
int3
add
loop
pop
sar
nop
into
push
jnp
pop
mov
je
and
sbb
inc
cmps
jae
jns
push
addr16
inc
int3
test
ret
cmc
int3
add
cld
cdq
cdq
push
cmp
retf
dec
sysenter
cdq
adc
scas
xchg
rcr
mov
mov
pop
sub
out
aad
call
adc
loope
pop
inc
add
add
aas
add
xor
add
add
inc
mov
pop
nop
lds
call
push
push
push
pusha
push
ins
dec
in
sbb
into
mov
pushf
in
bound
popa
fwait
pop
pop
xchg
dec
inc
xlat
verw
ret
xchg
popa
ror
jecxz
add
xchg
mov
and
loopne
xor
pop
movs
popa
xchg
rcr
mov
int
inc
retf
test
adc
pop
bound
inc
sub
shl
cs
cmp
ins
aas
js
sbb
mov
xor
sub
ss
or
pop
xor
mov
out
retf
xor
push
push
or
push
mov
mov
loopne
stc
mov
sbb
loopne
mov
je
xchg
pop
push
cmp
ror
jp
inc
xor
or
gs
mov
sti
neg
sub
imul
pop
cmp
xchg
popf
ret
inc
add
mov
push
int3
jle
add
aam
out
pop
add
pop
arpl
(bad)
ds
lods
pop
mov
add
jo
pop
push
adc
push
mov
inc
add
fwait
add
push
js
jns
cmp
sbb
movs
sub
adc
test
or
jecxz
test
rcr
add
loop
mov
mov
mov
pushf
cmp
int
adc
aad
ins
and
stos
and
sub
call
or
dec
fstp
cmp
outs
call
xchg
mov
das
adc
adc
movs
adc
sbb
mov
or
jb
cmc
ret
ret
loope
daa
or
and
(bad)
sti
nop
scas
jecxz
dec
xor
fwait
or
outs
aam
shl
fs
mov
mov
and
cmps
shl
cmp
in
xor
mov
enter
sbb
mov
int3
mov
adc
ret
add
push
jl
sub
dec
jb
dec
inc
(bad)
out
(bad)
shl
xchg
test
jns
jp
or
ret
test
mov
mov
cmp
add
xor
adc
in
xchg
sbb
dec
mov
aaa
into
and
stc
inc
xor
int3
jle
adc
or
test
imul
fsub
cli
cmp
mov
movs
sub
aas
pop
jg
cwde
repz
test
xor
aaa
jmp
push
test
mov
sub
pop
dec
fld
push
inc
dec
frstor
mov
ja
pop
ret
hlt
icebp
jp
or
dec
pop
test
mov
out
pop
adc
int
into
js
jo
mov
pop
sti
into
push
cld
fwait
popa
loope
out
lods
add
mov
push
imul
mul
xchg
mov
cdq
inc
inc
cmp
mov
xor
push
pop
add
xchg
je
dec
aam
push
dec
and
cmc
cwde
aad
push
mov
les
out
aaa
jne
mov
inc
or
jmp
mov
cwde
std
mov
sbb
movs
mov
push
dec
sbb
iret
test
add
jle
repnz
push
mov
call
pusha
int
add
fdivr
inc
and
rol
add
mov
mov
lahf
lea
push
inc
fist
or
push
add
dec
sbb
dec
stos
xchg
sbb
(bad)
int
not
push
push
and
scas
cmps
pop
jnp
mov
or
or
sbb
xchg
push
mov
mov
movs
iret
retf
pushf
jno
inc
mov
stc
call
scas
jb
mov
inc
mov
mov
outs
inc
daa
jl
popf
fcomp
ja
popf
xchg
adc
ret
nop
dec
test
aas
std
and
into
mov
test
call
mov
jbe
leave
push
(bad)
test
add
lods
push
sub
pop
and
inc
enter
push
add
xchg
sbb
sti
aas
xor
scas
and
mov
iret
or
loopne
std
shl
cmp
icebp
repnz
mov
fdivr
int
rcl
int
outs
sahf
fistp
pop
xor
dec
mov
sub
cmp
mov
mov
push
(bad)
mov
sbb
retf
xlat
(bad)
lods
ret
sub
jo
data16
mov
add
push
sar
test
sbb
dec
mov
jge
fdecstp
imul
out
jnp
and
mov
cmp
adc
mov
lea
mov
mov
arpl
add
add
inc
jne
vpaddw
inc
ret
ret
xchg
sub
scas
jns
xor
push
scas
retf
dec
adc
inc
cmc
inc
jl
adc
adc
js
mov
nop
push
out
mov
pop
pushf
retf
jo
adc
(bad)
xor
loop
je
jmp
jns
jecxz
push
cdq
fdiv
or
push
icebp
xchg
mov
movs
sbb
dec
aam
jmp
pop
mov
and
xor
ret
mov
call
addr16
daa
in
adc
repz
sub
mov
jne
pusha
les
fisub
push
and
and
xchg
imul
(bad)
dec
dec
xor
mov
jae
ret
add
inc
fidiv
test
dec
xchg
pusha
fisubr
pop
mov
sti
mov
loop
sub
gs
push
int3
push
je
and
int3
int3
mov
fs
mov
mov
jp
(bad)
call
punpckldq
sbb
in
push
pusha
hlt
xor
shr
adc
mov
stos
cmp
xor
adc
(bad)
mul
shl
xor
mov
and
jnp
and
xchg
or
sbb
mov
xchg
jmp
mul
fld
popa
sbb
inc
ror
adc
into
sbb
les
shl
(bad)
ins
lea
cmp
popf
mov
xor
mov
pusha
or
enter
push
and
jbe
daa
push
mov
mov
inc
dec
ror
add
xor
leave
loopne
mov
lea
jnp
sub
add
fidivr
sbb
imul
shl
inc
gs
sbb
add
adc
dec
retf
fist
cmps
or
mov
outs
pushf
mov
xor
inc
aas
mov
fstp
xchg
lock
ins
lds
push
jecxz
clc
outs
mov
mov
test
and
clc
adc
pop
dec
mul
jle
fldcw
xor
inc
leave
mov
pop
fist
cmps
ja
xor
inc
cs
std
in
or
and
xlat
jl
aad
add
pop
ins
inc
push
mov
outs
push
mov
xor
xchg
add
repnz
cmp
add
push
mov
sbb
sar
cmp
cmps
xchg
push
and
jmp
dec
adc
std
and
add
cmp
mov
test
jecxz
cmp
cld
mov
test
adc
jmp
sub
xchg
xor
(bad)
push
shl
cli
test
mov
mov
jns
inc
cmp
aad
mov
sbb
inc
ss
imul
dec
push
mov
push
cmp
fisttp
add
cmp
xchg
mov
or
leave
sub
pop
cmp
lock
enter
fisub
xor
adc
in
fs
jmp
imul
fidiv
push
stc
stos
jmp
mov
push
test
adc
shr
icebp
fucomp
inc
dec
arpl
into
mov
push
fdiv
enter
sub
int
div
or
imul
adc
ss
xor
pop
push
sbb
cmc
std
stos
arpl
mov
xor
jg
(bad)
mov
adc
push
inc
jg
inc
movs
fst
add
cmp
inc
(bad)
dec
test
ja
push
xchg
jg
jmp
rcl
sbb
fwait
cmp
xor
mov
fwait
ja
mov
mov
pop
sub
jae
loopne
test
dec
xor
mov
int
mov
dec
jno
les
xlat
into
jnp
mov
adc
pop
dec
test
mov
and
dec
mov
dec
shl
add
sub
mov
push
mov
ret
popfw
push
adc
mov
jecxz
out
or
xchg
je
ja
sbb
inc
pop
out
jmp
pop
cmp
movs
iret
pop
pop
rol
call
jne
into
adc
lods
(bad)
cmp
mov
and
adc
jmp
cld
mov
mov
or
mov
sar
add
movs
cs
dec
fisub
push
push
jle
mov
les
mov
sub
mov
jl
adc
dec
call
inc
add
test
addr16
ss
mov
loopne
dec
mov
adc
fst
push
fsubr
lock
jmp
aas
(bad)
rol
lea
cmc
lahf
ins
inc
jmp
cmp
sub
arpl
sbb
adc
xchg
push
sbb
fbstp
neg
mov
rcl
scas
mov
jge
hlt
ins
mov
and
pop
mov
retf
xchg
stc
lods
or
jae
in
std
push
pop
xor
sbb
push
ret
adc
mov
popa
scas
dec
add
fbstp
and
out
enter
pushf
pop
ret
lahf
and
(bad)
xor
mov
stos
in
xchg
lea
jg
je
aas
sbb
cli
int
sahf
rcr
mov
les
xor
or
mov
cmp
mov
xchg
xchg
out
ins
das
(bad)
sar
dec
sub
movs
jae
jecxz
mov
mov
in
mov
stos
mov
jno
in
call
cmp
push
ss
nop
out
sbb
pop
dec
sub
or
cmova
mov
movs
movs
in
mov
inc
mov
inc
inc
test
dec
imul
retf
dec
aas
cld
imul
jne
pop
cmp
pop
aam
int3
fst
or
repz
lock
test
mov
pusha
pop
and
pop
std
in
push
xchg
and
fild
fcmovnb
inc
xlat
and
icebp
xchg
push
loop
mov
sbb
dec
pop
aad
(bad)
es
test
pop
push
in
push
mov
cdq
call
adc
jae
sbb
jb
enter
xchg
sti
mov
inc
lods
and
repnz
and
pop
jmp
xor
out
cmp
(bad)
cld
aas
out
gs
or
dec
jmp
mov
xchg
inc
setno
and
push
daa
mov
out
mov
pop
in
ins
mul
xchg
fild
ret
movs
jmp
pop
dec
xor
mov
and
jle
scas
and
inc
add
shr
mov
and
rcl
jmp
xchg
or
dec
and
scas
xor
xchg
test
and
push
mov
or
and
cmp
cmp
retf
ret
loope
scas
mov
dec
retf
retf
out
test
dec
jbe
sbb
inc
inc
pop
pop
data16
stos
fidiv
shl
ret
fcomp
xlat
cmp
xchg
int
call
(bad)
adc
and
jge
bound
mov
xchg
mov
cmc
xchg
fild
cmp
push
jg
in
or
mov
jae
pop
rol
sub
or
xchg
xchg
mov
add
fwait
pop
mov
imul
ffreep
cmc
dec
adc
cmps
arpl
test
leave
push
inc
push
loop
lods
test
lods
test
mov
in
pop
mov
stos
mov
jl
cld
jmp
inc
lock
push
stos
xchg
xor
mov
je
jb
adc
dec
jnp
mov
mov
sbb
ror
in
dec
popa
out
inc
loope
ret
int
sbb
sar
ins
or
pop
mov
popf
fwait
dec
sbb
adc
mov
rol
retf
sub
pop
call
adc
cmp
fcmovbe
or
jb
and
shr
push
and
out
or
arpl
push
je
adc
loope
cmp
xor
(bad)
and
sahf
jo
mov
inc
aad
fadd
push
ins
pop
mov
lock
sub
push
mov
aaa
mov
test
sub
repnz
sub
jp
mov
sbb
fistp
inc
sbb
or
jge
lock
xor
sahf
sub
retf
mov
push
out
pop
popf
enter
and
push
int
inc
add
cmc
call
stos
fwait
push
adc
sar
or
outs
or
ds
push
imul
dec
test
and
movs
or
aam
out
scas
stos
xchg
xor
jno
pop
nop
sub
int
cmp
or
fld
mov
ret
inc
add
fwait
adc
imul
adc
mov
adc
push
loopne
loope
cld
mov
fstp
mov
aam
cmp
jnp
popa
es
leave
push
iret
test
adc
fisubr
push
cmp
push
push
mov
mov
repnz
xlat
arpl
jno
and
pop
jmp
push
imul
pop
or
repz
test
retf
cli
push
loopne
sti
loope
adc
dec
and
sbb
dec
cmp
cmp
and
push
fidiv
dec
aam
mov
pop
mov
xchg
test
push
inc
js
xor
(bad)
scas
mov
xlat
cmp
jp
push
aad
add
rcl
xor
adc
pop
xchg
test
dec
xchg
push
int
sbb
and
out
loopne
xor
out
and
stc
movs
mov
ret
loopne
inc
push
inc
push
stc
cmp
jno
fs
sub
dec
jmp
loopne
sar
cs
sbb
mov
mov
sbb
aas
cmp
xchg
push
push
mov
rol
stos
sub
sbb
call
mov
pop
push
test
cmc
bnd
pop
push
mov
popf
out
aaa
cmp
fwait
mov
sbb
inc
out
(bad)
xchg
frstor
cmps
rcl
fld
daa
push
xchg
lock
mov
fdiv
inc
dec
add
lds
lods
icebp
jno
es
push
or
pop
cdq
xor
xchg
std
loop
ja
mov
xor
mov
aaa
out
cli
or
xchg
inc
dec
lea
(bad)
fs
dec
sti
lods
hlt
rol
(bad)
sub
adc
xor
dec
cs
cmp
or
call
cmp
add
adc
sbb
push
jbe
ror
lods
dec
scas
dec
pusha
add
arpl
push
bound
sbb
das
icebp
mov
xchg
(bad)
mov
mov
imul
fsubr
xlat
test
mov
stos
rcr
xchg
jmp
xor
ins
mov
inc
hlt
push
adc
jge
push
data16
push
or
jmp
movs
push
addr16
mov
xchg
lods
jp
test
push
call
dec
or
adc
push
xor
push
jmp
mov
mov
sub
loope
push
lock
or
sbb
inc
sahf
adc
loope
jle
and
call
in
push
lock
sub
or
imul
sbb
call
gs
icebp
pop
adc
es
push
sub
cmp
fdiv
add
inc
ins
mov
in
adc
loope
icebp
push
inc
push
push
ins
mov
or
and
mov
pushf
scas
mov
sahf
sbb
stos
hlt
xor
add
cs
jmp
fild
dec
aad
in
int
adc
dec
xor
dec
test
mov
sbb
jmp
and
mov
in
sub
int3
push
call
jns
sub
mov
cmp
xor
aad
xchg
push
dec
in
jae
cmps
pop
retf
mov
in
in
stc
in
push
enter
ja
hlt
sbb
cs
or
or
xor
pop
repz
fidivr
cwde
test
int3
popf
div
lods
sbb
cmps
push
pop
cmc
hlt
or
int
mov
in
scas
push
in
xor
inc
push
cwde
xor
push
imul
inc
xor
pop
lock
mov
dec
dec
lock
push
das
jo
leave
mov
pop
mov
mov
das
jb
imul
inc
cmc
retf
pop
mov
std
rol
(bad)
loopne
mul
sbb
aaa
mov
lods
shr
adc
push
out
xchg
movs
adc
dec
push
mov
or
(bad)
ins
jge
lods
aad
pop
add
sub
int
ja
ja
pop
out
cmp
daa
sbb
inc
push
scas
call
jmp
push
or
gs
fwait
xor
push
out
daa
pop
inc
ins
loop
xchg
or
push
pop
outs
retf
dec
mov
push
or
mov
data16
adc
or
ffreep
scas
pop
add
clc
iret
ret
mov
aas
mov
add
push
xchg
bound
out
add
imul
jo
and
mov
out
icebp
pushf
jg
loopne
fidivr
cmps
jo
add
mov
popf
(bad)
mov
data16
ror
daa
sbb
xor
std
xchg
push
adc
in
pop
xchg
inc
repnz
jne
mov
in
fsub
xor
jp
hlt
jle
(bad)
or
sbb
sti
adc
mov
mov
aad
sub
mov
fisub
xchg
frstor
call
jb
clc
(bad)
mov
jb
pop
push
mov
xchg
pusha
in
pop
fistp
add
jae
shr
icebp
sar
neg
jb
in
stos
inc
xor
out
xchg
fmul
and
stos
or
test
push
rol
cmp
push
sar
das
jecxz
jae
ficomp
jmp
sahf
sbb
in
cdq
mov
jne
push
sub
js
adc
push
sub
daa
and
ss
pop
popa
lods
sbb
out
jae
mov
(bad)
xor
aas
sbb
xor
gs
(bad)
sub
popa
data16
sub
cld
test
sbb
cmp
cmp
push
mov
mov
xor
fwait
(bad)
stc
dec
dec
xchg
out
adc
gs
sbb
idiv
int
jo
jecxz
jns
sahf
cmps
jnp
jb
push
dec
inc
out
lock
add
cmc
jnp
ret
jmp
dec
cmc
lds
push
and
or
pop
pop
fadd
mov
sub
fwait
sub
idiv
(bad)
sub
jno
mov
xchg
test
and
push
and
pop
xchg
movs
leave
mov
and
sub
lods
sub
repnz
mov
es
out
push
dec
inc
(bad)
jp
inc
mov
lea
call
cmp
pop
pop
cmp
(bad)
rcl
jmp
push
fwait
pop
aaa
call
fsubr
dec
(bad)
pop
xchg
jle
xor
add
xor
xor
aaa
mov
jbe
inc
sub
inc
lock
call
mov
arpl
movs
sub
daa
jecxz
add
sbb
jmp
inc
xor
mov
sbb
ret
mov
adc
jb
add
jmp
cwde
cmp
inc
fbld
es
xchg
sbb
cld
fadd
inc
imul
fidivr
data16
xchg
jl
repnz
push
or
iret
outs
jnp
adc
call
retf
jns
xor
jl
clc
cli
data16
and
je
or
dec
dec
imul
cmp
fistp
push
mov
pop
and
dec
inc
mov
mov
mov
xchg
mov
call
sbb
(bad)
jno
sub
xor
call
das
(bad)
fsub
pop
enter
in
ins
adc
sub
mov
mov
aam
ja
(bad)
iret
xchg
adc
pcmpeqd
mov
push
push
loope
mov
clc
jge
and
jmp
in
push
jo
outs
cmp
rcl
adc
(bad)
xcrypt-ofb
cmps
sub
cmps
push
xchg
push
data16
mov
xchg
mov
cmovns
pop
jecxz
int3
call
addr16
inc
aas
dec
xchg
shl
fwait
daa
dec
sub
movq
icebp
jb
xchg
fsub
shr
int3
dec
(bad)
jmp
xchg
mov
mov
out
dec
adc
repnz
cdq
xchg
leave
mov
xor
or
pop
xor
mov
das
pop
mov
jmp
test
je
xchg
mov
lock
loope
loopne
xchg
iret
sti
mov
mov
inc
movs
mov
xor
ins
fisttp
mov
xor
adc
push
addr16
sub
adc
retf
les
stos
test
push
das
repnz
mov
fs
adc
ja
mov
mov
fist
movs
xchg
mov
fwait
sti
mov
popw
mov
fsub
jns
dec
or
mov
jb
pop
mov
sbb
jmp
ins
fsub
cmp
inc
xchg
pop
lea
(bad)
sti
je
je
cld
adc
jne
or
and
pop
or
jmp
mov
push
push
and
sub
or
ret
push
xchg
inc
lahf
dec
inc
push
jp
loope
arpl
mov
es
js
push
test
cdq
inc
add
leave
shr
cmp
lock
loope
retf
adc
and
daa
repnz
cmp
xchg
loopne
inc
arpl
fwait
(bad)
(bad)
jno
cmp
out
dec
pop
add
lods
call
mov
xor
cmc
ins
scas
in
push
jno
mov
mov
(bad)
pop
cmps
inc
lock
or
sti
in
(bad)
ss
inc
jb
std
pop
out
add
addr16
xor
pop
outs
cmp
jns
or
cmp
cmp
sti
sbb
and
xor
xor
mov
add
sti
jge
cs
mov
cmp
retf
xchg
mov
enter
test
dec
neg
cli
into
pop
test
fadd
out
xor
sub
jns
jb
mov
cmp
mov
add
and
pop
inc
or
dec
and
repnz
mov
imul
sub
xchg
in
add
ins
cmps
aaa
test
jecxz
sbb
dec
je
(bad)
cmp
les
fld
fwait
test
mov
out
sbb
and
popf
scas
xor
cmps
pop
pop
outs
mov
iret
clc
push
rcr
xchg
in
(bad)
and
dec
fisttp
ja
pop
sbb
loop
js
cmps
sub
nop
push
xor
jmp
mov
jbe
pop
enter
push
push
hlt
(bad)
call
hlt
pop
lock
mov
nop
loop
mov
cmp
pop
pop
and
into
xchg
int
ret
clc
xchg
inc
sbb
pop
cdq
jae
dec
jg
adc
scas
mov
mov
and
das
cli
mov
leave
pop
cmp
and
data16
sub
shl
in
pop
in
inc
pop
mov
arpl
lock
ds
fwait
cmp
sbb
sbb
out
and
mov
mov
iret
dec
xchg
sar
inc
cmps
xchg
shl
jmp
add
cmps
lods
call
popa
les
add
cmp
push
adc
cmp
mov
pop
jmp
jmp
ins
mov
xchg
pop
rol
std
adc
movs
and
pop
mov
repz
fmul
retf
shr
scas
or
dec
dec
pop
mov
push
mov
and
into
mov
retf
jo
iret
(bad)
scas
sub
mov
repz
jb
icebp
test
mov
popa
jo
fadd
(bad)
adc
xchg
es
outs
dec
ins
icebp
jo
jae
ss
jmp
out
or
popf
xchg
or
popf
inc
pop
jge
inc
cmp
(bad)
retf
mov
aad
ds
(bad)
lds
fstp
mov
mov
shl
cmp
in
rol
pop
push
mov
inc
xchg
ds
add
xchg
mov
push
jg
lods
xor
or
push
cmp
mov
sub
pop
jo
fwait
imul
pop
inc
or
pop
jo
inc
test
mov
in
out
mov
mov
cmp
(bad)
sbb
push
aas
(bad)
pop
mov
sahf
retf
mov
inc
mov
pop
cld
std
scas
data16
cmp
into
test
shl
movs
xor
inc
cmp
add
repnz
xchg
push
adc
cdq
int
je
jl
lds
imul
jae
ss
mov
pop
mov
cdq
loopne
pushf
(bad)
mov
add
jbe
(bad)
cmps
call
pop
sbb
inc
scas
sbb
lods
nop
rcl
div
fsub
mov
data16
leave
dec
bound
jmp
and
rol
dec
out
inc
jle
div
mov
(bad)
ja
pushf
fs
mov
loope
inc
pop
mov
jae
shr
popf
mov
test
lock
xchg
push
pop
loope
std
jecxz
inc
fimul
jmp
enter
and
aaa
scas
xchg
fwait
ret
int3
sub
sub
movs
(bad)
idiv
mov
out
fbstp
loop
movs
inc
sub
jl
aas
ss
fbstp
fsubr
jno
mov
inc
enter
xchg
jg
cwde
mov
jne
and
gs
stos
or
push
mov
sub
retf
mov
hlt
xor
mov
sbb
inc
jp
repz
jmp
jmp
movs
(bad)
aam
pop
mov
xlat
mov
gs
repnz
sbb
in
inc
sub
outs
and
cs
cdq
mov
push
cmp
data16
mov
out
fild
jp
fwait
nop
sbb
fdivr
and
fsub
and
pop
loop
dec
shr
cmps
push
loop
sub
loope
arpl
push
neg
or
dec
sar
inc
xchg
out
mov
cmp
cmp
mov
movups
and
adc
cmp
imul
jmp
movs
and
(bad)
mov
push
int3
xchg
mov
mov
and
xchg
push
retf
je
mov
inc
(bad)
pop
fwait
std
test
mov
dec
pop
cwde
jne
repz
add
in
pusha
jecxz
aas
loopne
pop
movs
mov
stos
in
sbb
dec
pushf
and
mov
test
nop
ss
movs
inc
outs
adc
xor
mov
pop
xor
xchg
loopne
mov
sbb
jb
cmps
pop
aas
loop
sub
loop
adc
xor
xchg
lds
sbb
lock
sub
push
push
mov
xchg
ins
inc
popa
rcl
int3
repz
push
cwde
(bad)
imul
mov
jg
sbb
mov
xlat
push
aam
xchg
or
add
push
jno
daa
scas
out
out
scas
jae
fidivr
movs
sbb
lods
inc
add
jo
mov
cmp
pop
pop
out
or
xchg
sahf
out
lods
add
(bad)
data16
or
and
icebp
mov
mov
mov
add
not
fcom
or
pop
mov
shl
jno
mov
icebp
stos
cmp
add
mov
jb
sub
adc
sub
fcmovnb
dec
js
mov
and
jecxz
pop
push
sti
pop
pop
test
lds
and
std
push
xchg
xlat
and
jnp
sbb
or
addr16
sub
nop
arpl
fcom
lds
jb
retf
inc
pop
push
iret
outs
dec
mov
mov
ds
sbb
mov
js
mov
out
fs
adc
stc
mov
inc
cmp
fistp
mov
dec
sbb
mov
push
jo
rcl
xchg
mov
push
mov
popf
add
retf
adc
ja
(bad)
shr
jno
and
inc
call
pop
add
sbb
lahf
xchg
nop
or
or
dec
outs
and
(bad)
push
(bad)
aad
repz
out
jg
push
inc
adc
pop
dec
or
pop
xor
jmp
adc
nop
out
mov
mov
ret
icebp
leave
cmp
pop
shl
mov
outs
loope
pop
add
test
cmp
rcl
and
pop
in
inc
sub
ret
inc
nop
mov
ret
xchg
out
sub
ficom
and
lar
jns
out
xchg
push
inc
stc
ss
add
into
pop
mov
data16
add
mov
dec
add
sub
not
pop
sub
mov
rcr
repz
add
xchg
sub
or
dec
lods
sub
dec
inc
fld
ja
jg
xchg
add
cmps
jmp
mov
adc
add
clc
sti
dec
sub
jo
leave
or
jmp
imul
lahf
jbe
dec
or
jecxz
dec
push
mov
imul
lahf
shl
test
fst
iret
in
pop
xchg
aas
lahf
pop
cmovle
pushf
adc
dec
ficomp
test
jbe
push
sbb
add
jne
mov
out
out
in
cwde
in
jmp
stc
cs
mov
sub
ja
rcr
imul
sub
dec
push
xlat
(bad)
mov
scas
mov
sbb
sub
call
xchg
pop
mov
jbe
mov
dec
adc
outs
ss
cmp
aad
dec
add
push
or
dec
mov
jecxz
push
dec
and
lods
pusha
(bad)
shl
mov
adc
cld
add
push
push
in
scas
test
jg
and
mov
stc
jg
mov
cwde
jge
lods
fcmovnb
aad
xor
jae
and
and
push
in
mov
mov
sahf
pop
dec
mov
pop
mov
call
inc
scas
xchg
push
and
cmp
cmp
adc
or
mov
push
cmp
out
push
fistp
repz
or
add
(bad)
sbb
pop
xchg
ffreep
nop
call
mov
fs
lock
lods
push
pop
imul
aad
push
pushf
ror
das
shr
mov
cmp
adc
pop
lahf
and
jne
jns
aam
jmp
jp
push
iret
icebp
pop
jmp
out
sbb
test
sbb
int3
adc
test
sub
fst
mov
test
lar
push
xchg
jo
(bad)
cmp
jb
or
jp
xor
lock
xchg
cmp
sub
cmp
(bad)
jp
push
sbb
loopne
cmps
(bad)
xchg
fidivr
push
push
xchg
or
or
pusha
add
sbb
jle
das
jmp
out
lock
and
or
movs
cmp
je
xchg
(bad)
in
and
sub
push
mov
cmp
sub
mov
imul
es
call
pop
ins
pop
push
(bad)
mov
cmp
fcmovnu
sub
in
sub
das
js
lock
jg
or
jl
and
push
inc
lods
pushf
neg
dec
sbb
sub
jo
out
outs
sbb
sbb
sub
cdq
jno
in
dec
xchg
cmp
leave
sbb
xchg
in
or
adc
call
int3
push
cmps
adc
stos
pop
arpl
call
pop
and
xor
dec
popa
adc
sbb
cld
mov
mov
mov
(bad)
ret
inc
outs
call
(bad)
jnp
sub
cmps
stos
inc
icebp
add
sub
lods
adc
push
imul
sbb
xchg
mov
bound
mov
inc
push
pushf
aaa
cmp
fwait
sub
nop
(bad)
lods
cmp
int3
xlat
add
or
movs
cmp
cmp
jb
or
add
sbb
sub
or
xchg
jne
add
mov
mov
retf
fimul
ret
xchg
lahf
sbb
int3
aas
shl
and
out
cmc
dec
sub
(bad)
pop
mov
xor
xor
xor
fwait
ja
xlat
pop
hlt
ret
mov
xchg
inc
icebp
cli
xchg
es
inc
std
repnz
std
dec
aaa
int3
(bad)
xor
icebp
nop
dec
pop
xor
cmc
std
mov
in
inc
aad
bound
pop
lods
mov
dec
or
mov
repz
loopne
push
or
data16
les
mov
ret
stos
inc
cmp
cld
mov
xchg
jns
inc
fstp
inc
sub
cmp
xor
cs
or
or
mov
dec
cmp
test
rol
add
imul
mov
inc
test
xchg
mov
adc
and
xchg
inc
or
and
clc
enter
jecxz
mov
or
add
or
xor
inc
fiadd
or
dec
clc
dec
nop
mov
sub
jb
in
out
adc
scas
add
addr16
or
push
loopne
or
dec
mov
(bad)
out
push
int
imul
leave
stos
xor
adc
and
and
adc
adc
ret
ins
sbb
cld
aaa
dec
xor
test
inc
push
sahf
push
fldcw
push
push
clc
push
out
pop
dec
pop
cmc
inc
push
jno
mov
xchg
(bad)
cmp
push
mov
lock
inc
icebp
mov
cmp
fbstp
cmp
sub
jmp
sbb
outs
sar
scas
rcr
daa
call
push
xchg
inc
sahf
jbe
lock
mov
out
mov
cwde
mov
fiadd
addr16
stc
sbb
test
dec
sub
xor
cmp
out
push
inc
jmp
cmc
add
stc
xor
rol
dec
dec
ficom
pusha
aad
dec
clc
aas
sbb
das
or
outs
fnstsw
inc
mov
push
aam
jg
mov
and
(bad)
ins
xchg
mov
mov
push
shl
jecxz
jns
xchg
(bad)
pop
adc
fwait
sbb
movs
add
(bad)
shr
cmp
pop
jmp
in
cmps
sbb
xchg
mov
pop
push
sbb
add
jmp
or
xchg
lods
div
and
jae
cmp
sub
pop
sbb
out
add
dec
or
jae
arpl
out
mov
jmp
sbb
icebp
add
ss
cmp
and
pop
(bad)
push
mov
popf
cmp
imul
loop
sub
adc
add
add
mov
inc
ret
or
jb
pop
(bad)
jae
out
es
outs
dec
add
xor
mov
add
(bad)
push
xchg
aaa
cld
movs
out
adc
fdivr
fdiv
aas
in
mov
ss
jnp
and
push
int
push
jne
xor
hlt
add
xor
mov
pop
div
or
sbb
not
das
fs
rcr
lds
retf
dec
les
push
sar
lods
call
dec
push
adc
lods
add
sub
or
push
push
mov
loopne
mov
int
mov
cdq
in
cmp
mov
mov
xor
sti
dec
push
or
xchg
jge
movs
mov
pop
sub
pop
pop
push
das
call
stos
and
pusha
mov
push
jns
aaa
dec
ret
fist
data16
lds
dec
mov
sub
adc
pop
into
mov
cdq
das
sbb
outs
pop
int3
cmc
enter
mov
sbb
retf
xchg
cwd
jg
imul
(bad)
aam
jb
sub
xlat
out
cmp
bound
mov
inc
cmp
mov
aad
jge
loopne
sbb
and
pusha
push
push
mov
das
ds
fimul
mov
jg
adc
fwait
ins
sbb
and
mov
adc
inc
hlt
pmullw
adc
xchg
arpl
imul
sub
in
je
fild
or
xchg
call
push
adc
add
adc
cmp
add
dec
jae
adc
cwde
lods
sar
les
ja
and
xchg
cmp
and
(bad)
xchg
out
and
pop
mov
in
xor
jnp
or
mov
mov
stos
mov
push
cmp
aam
test
(bad)
icebp
aas
and
add
jle
imul
sub
push
push
sbb
sub
jecxz
pop
in
cmp
test
out
pusha
mov
lods
gs
pop
push
push
icebp
push
fucomip
outs
add
mov
pusha
inc
and
fs
or
(bad)
hlt
repz
in
sbb
pushf
neg
cdq
out
push
pop
push
and
pop
into
cmp
hlt
sahf
(bad)
les
sbb
movs
cmps
movs
scas
inc
pusha
gs
dec
mov
test
fcomp
(bad)
mov
ficom
pop
pop
pop
pushf
das
hlt
addr16
(bad)
push
xchg
sbb
inc
mov
gs
inc
xchg
dec
mov
aam
ja
xlat
mov
jl
mov
das
imul
mov
jmp
div
or
mov
in
adc
gs
sbb
xchg
and
jne
fabs
inc
es
lea
(bad)
cld
enter
inc
cmps
out
inc
pop
or
mov
inc
aas
daa
xlat
jecxz
sti
into
xor
adc
jns
(bad)
dec
aam
jae
inc
mov
movs
adc
dec
mov
retf
mov
jnp
mov
(bad)
aad
ret
in
mov
push
sbb
das
repz
jmp
add
mov
jmp
dec
mov
and
xchg
pop
cmp
gs
data16
call
mov
mov
repnz
inc
retf
push
push
fdivp
mov
int3
pop
mov
push
std
out
int3
inc
push
out
jb
add
pop
mov
inc
xchg
xchg
fisttp
jg
ret
das
cmp
push
jmp
push
sub
jmp
daa
loope
cs
pusha
into
sub
adc
ror
mov
dec
pusha
clc
adc
mov
mov
or
fwait
and
iret
or
enter
pop
aam
jno
jg
movs
fwait
mov
pop
push
adc
mov
inc
xor
and
xchg
adc
pop
push
mov
jbe
push
mov
push
add
cmp
mov
cmc
pop
stc
inc
and
xchg
ins
iret
cmps
push
mov
in
xchg
jl
mov
mov
jmp
dec
cdq
imul
jg
mov
sahf
and
dec
mov
stc
nop
fldcw
pop
jb
dec
outs
jb
mov
aaa
aas
sub
bound
jb
inc
push
mov
cmp
cli
push
enter
fidiv
(bad)
jmp
xchg
xor
pop
mov
dec
movs
jbe
jmp
cdq
or
adc
dec
add
imul
dec
dec
xor
addr16
and
pop
xchg
mov
fsubp
fld
or
push
push
repnz
jb
sub
out
jecxz
inc
ja
sbb
rep
jge
pop
movs
pusha
lock
daa
hlt
arpl
adc
int
ret
inc
sti
inc
push
or
dec
jbe
sbb
jae
or
jl
inc
and
(bad)
mov
int3
scas
fidivr
mov
push
jnp
dec
cmc
js
and
pop
faddp
cmps
cdq
push
xchg
in
xor
dec
retf
or
sbb
and
inc
xor
inc
mov
pop
scas
cmp
outs
mov
fwait
jmp
cs
retf
mov
(bad)
fs
mov
pop
lods
inc
(bad)
adc
mov
cmp
mov
xchg
mov
pmaddwd
dec
(bad)
adc
(bad)
es
mov
inc
stc
ficomp
adc
fdivr
ss
and
xchg
fabs
in
push
xchg
mov
(bad)
adc
mov
inc
jo
xor
mov
mov
jbe
jno
rol
cmpxchg
push
call
cwde
cmp
scas
push
xchg
and
or
and
and
mov
mov
pop
or
ret
arpl
or
mov
jle
dec
(bad)
outs
in
icebp
inc
dec
mov
fcom
adc
adc
jne
in
cmps
shl
mov
ret
push
xchg
fisttp
imul
movs
fisttp
inc
inc
xlat
mov
jnp
and
mov
xchg
adc
sar
es
fcom
je
dec
cmp
add
push
bound
out
add
rol
into
enter
mov
jbe
aaa
pop
int3
dec
inc
pop
push
sub
pop
jmp
daa
mov
cmps
call
and
out
sbb
ja
arpl
or
setne
lock
jle
stc
add
dec
jl
pop
or
loop
sbb
shl
mov
jmp
push
fnstcw
ins
sub
out
cmp
xor
sub
shr
(bad)
lea
sti
xchg
cmc
or
mov
shr
dec
jns
aam
mov
inc
in
or
xor
mov
inc
ins
mov
xchg
xchg
out
and
fisttp
neg
arpl
movs
out
inc
js
ja
push
cmp
mov
dec
ins
cmp
add
aaa
sub
sub
test
ror
xchg
mov
fwait
and
repz
dec
add
repz
add
(bad)
fdiv
mov
inc
sub
std
lea
pop
push
jmp
dec
aad
or
hlt
push
loopne
or
inc
inc
data16
xchg
mov
dec
pop
xchg
jns
xchg
add
mov
dec
or
lea
scas
test
mov
imul
pop
dec
mov
stos
inc
call
push
mov
call
xchg
dec
mov
xchg
and
jns
jecxz
ror
pop
lds
push
xchg
in
inc
inc
and
add
pop
pop
mov
scas
mov
adc
push
fwait
gs
mov
test
(bad)
movs
sub
icebp
retf
add
aas
mov
sub
dec
mov
daa
sub
loope
dec
ja
scas
and
lahf
test
fwait
xor
mov
cdq
test
scas
bound
mov
stc
stos
xchg
sbb
mov
sbb
mov
call
ss
mov
leave
imul
ret
push
out
cmovs
cwde
sub
or
adc
dec
cs
dec
arpl
test
push
mov
sub
adc
test
in
repz
and
pop
stc
arpl
pop
std
into
and
stc
(bad)
mov
inc
ins
adc
mov
enter
enter
dec
xchg
ss
cmp
out
jl
mov
icebp
retf
inc
cmc
call
mov
jo
sahf
fwait
sub
pushf
outs
in
imul
mov
call
sub
jnp
mul
ins
imul
cmp
imul
sub
jns
(bad)
es
push
pusha
cwde
cmp
jp
aaa
(bad)
or
test
xor
pop
out
cmp
sti
mov
cld
sbb
xchg
icebp
sbb
mov
imul
sub
sbb
xor
(bad)
(bad)
and
mov
fild
aam
push
retfw
and
or
mov
cmp
repnz
xor
pop
xchg
sbb
push
int3
sub
daa
outs
shl
mov
push
add
mov
mov
aaa
stos
add
adc
(bad)
in
pop
xchg
mov
push
sub
adc
inc
xor
and
outs
and
out
and
add
pop
dec
loop
cld
retf
inc
int3
sbb
daa
mov
or
(bad)
xchg
out
mov
pop
push
outs
test
je
cld
les
je
arpl
jbe
dec
sub
push
adc
adc
aas
stc
cdq
jmp
dec
pop
mov
stos
jo
jae
div
mov
mov
cmc
neg
repnz
lahf
mov
push
cmp
fsubp
fcom
xor
jne
hlt
imul
xchg
je
fisub
mov
fsubr
inc
mov
cmp
in
fidivr
aam
jp
adc
out
push
jmp
and
addr16
xor
jmp
mov
mov
xor
mov
es
hlt
fisubr
outs
mov
loope
mov
int
jg
(bad)
repnz
push
push
dec
adc
cdq
add
ficom
xchg
xor
pop
mov
mov
loop
les
mov
call
iret
mov
loop
mov
inc
enter
outs
xor
ficom
and
cdq
xor
call
js
out
push
ja
jecxz
jp
repz
mov
cmp
popf
or
fsubr
jp
pop
xlat
dec
in
jl
fdivr
and
dec
out
call
arpl
sub
loope
aas
(bad)
loop
xchg
push
pop
sub
jl
movs
sar
or
(bad)
ss
cli
pop
or
push
imul
dec
hlt
xor
and
sbb
call
and
mov
push
xchg
stc
daa
sti
stos
sub
fstp
jno
fcmove
movs
cwde
mov
jne
or
les
jle
stos
ret
add
adc
and
xchg
mul
dec
call
pop
test
inc
jb
pop
imul
lea
cmp
jne
mov
(bad)
cli
call
popf
mov
cmc
adc
div
cmp
pop
cmp
push
mov
jno
push
movs
mov
lock
sbb
int3
xchg
fs
popa
cwde
mov
sbb
lds
or
call
mov
(bad)
adc
mov
xchg
mov
xchg
sbb
(bad)
fisttp
pop
sti
arpl
pop
xchg
cwde
or
fidivr
out
jecxz
cmp
jmp
inc
xchg
data16
outs
and
pop
js
in
ins
sub
jne
test
push
lods
ret
jno
inc
and
jmp
or
std
ret
dec
jp
push
in
dec
mov
cwde
push
push
lds
(bad)
jmp
out
cdq
cmp
sub
les
in
jl
cmp
sub
dec
mov
cmp
dec
dec
add
pop
and
sti
xchg
(bad)
movs
or
int
fst
xchg
mov
in
mov
mov
sbb
(bad)
lahf
adc
mov
js
sbb
jns
jb
pop
(bad)
pop
sahf
iret
jge
push
cmc
push
sub
je
mov
fmul
call
(bad)
std
mov
adc
popaw
dec
lock
std
xor
out
jb
adc
cs
and
pop
push
shl
fcom
sub
inc
lea
jmp
shl
pop
sar
ds
fucomp
and
(bad)
fld
mov
repz
popa
mov
cmps
add
xor
(bad)
mov
arpl
dec
retf
ss
mov
dec
int3
pop
(bad)
shr
aad
pop
push
sub
ins
dec
xchg
ins
in
(bad)
add
push
or
loope
mov
into
sub
icebp
and
xchg
(bad)
sub
xchg
sub
push
repz
push
cmp
call
popa
push
imul
cs
inc
out
out
sbb
cmps
ffree
jnp
neg
int3
cs
pop
mov
dec
jae
sub
je
dec
sbb
pop
lods
pusha
jnp
mov
mov
jmp
into
cmp
mov
gs
push
jp
icebp
mov
(bad)
sub
out
mov
dec
fst
adc
fild
sbb
and
sbb
mov
push
jns
pop
mov
dec
inc
add
movs
jno
cmp
ret
xchg
inc
and
loopne
(bad)
mov
add
imul
pop
outs
arpl
mov
outs
adc
sub
xchg
imul
sbb
stc
cmp
in
jne
xchg
sub
fsubr
clc
dec
and
adc
xchg
sub
sbb
jle
sbb
and
(bad)
retf
not
pop
inc
je
push
jb
sahf
leave
stos
ins
xlat
or
push
mov
fmul
or
movs
daa
test
test
fdivr
inc
inc
arpl
and
cmc
lahf
pop
inc
les
push
outs
(bad)
push
sbb
(bad)
out
bound
inc
or
mov
(bad)
loop
mov
retf
test
cmp
in
xchg
lahf
popf
ins
cwde
push
pop
push
out
pop
and
rol
and
sti
ret
(bad)
jno
ds
mov
popa
xor
loop
mov
leave
mov
add
test
pop
out
ret
jns
imul
add
outs
outs
xchg
int
xor
mov
push
pop
cld
or
mov
add
lea
pop
sbb
inc
push
mov
xchg
cs
inc
or
push
test
sbb
mov
push
sub
mov
adc
add
lahf
mov
addr16
jmp
enter
hlt
jmp
shr
nop
in
sub
cmc
jae
xor
stos
dec
jle
es
cdq
mov
(bad)
and
or
cmp
dec
pushf
mov
mov
rol
push
mov
mov
adc
stc
(bad)
aam
rcr
push
lahf
int3
je
push
mov
adc
test
and
repnz
(bad)
mov
fisttp
pop
cmp
(bad)
movs
ret
sar
shl
out
mov
cwde
dec
fs
adc
aas
es
push
inc
test
sti
gs
imul
sub
inc
bound
and
jno
cmp
aas
jecxz
in
jb
ins
push
jl
fcom
cmp
jmp
pushf
sub
sbb
xor
sbb
inc
ja
add
int3
fiadd
loopne
addr16
push
xchg
xchg
mov
xchg
aad
mul
out
dec
dec
pop
jbe
jmp
in
enter
inc
fisttp
in
out
sbb
cmc
popf
sbb
xor
push
(bad)
lods
dec
mov
in
xchg
xchg
add
cld
sub
sti
in
pop
(bad)
mov
inc
sub
dec
in
xor
neg
mov
pop
jl
(bad)
ret
retf
inc
aad
push
pop
icebp
xor
pusha
push
rcr
ins
out
adc
retf
scas
push
popf
mov
cmps
mov
adc
mov
retf
and
mov
xchg
pop
into
mov
xchg
daa
dec
mov
pop
cmp
cmp
pop
mov
cmps
scas
jg
test
dec
mov
(bad)
clc
sahf
xor
inc
xor
sub
sbb
sahf
sbb
jle
pop
xor
icebp
cmc
out
adc
in
out
mov
shl
push
aas
sub
imul
movs
push
lock
jmp
mov
cmp
in
fs
xchg
or
or
add
mov
xchg
push
cdq
xchg
out
push
dec
wbinvd
(bad)
(bad)
in
iret
cdq
adc
rol
stc
sub
int
push
mov
in
mov
movs
mov
bound
xor
or
pop
test
aas
gs
xchg
push
sbb
stc
cmps
push
ja
and
mov
lds
stos
rcl
jo
(bad)
ja
xchg
mov
push
xchg
and
push
push
sub
and
mov
mov
and
sub
sbb
std
jmp
xor
mov
jns
lds
int
movs
out
je
jb
fucom
(bad)
cli
add
(bad)
cmp
cpuid
arpl
test
call
lds
mov
mov
inc
aaa
in
adc
xchg
imul
imul
push
mov
pop
sbb
into
pusha
repnz
push
add
inc
or
xchg
(bad)
jmp
xor
int
retf
push
adc
push
in
push
adc
add
adc
mov
into
pop
les
mov
arpl
mov
mov
test
stc
mov
mov
mov
cmp
rcl
or
pop
mov
xchg
push
sub
sbb
add
cli
rcl
mov
cmp
push
mov
lods
es
dec
loopne
jno
and
pop
int3
fbld
mov
xor
add
push
jns
dec
and
mov
sub
pop
sti
sub
jmp
test
outs
int
mov
sub
adc
push
ss
inc
mov
push
sub
aas
or
mov
(bad)
outs
nop
cmp
mov
daa
pop
and
xchg
jmp
loop
cmp
xchg
ja
test
push
add
test
test
lock
mov
icebp
pop
mov
or
add
out
imul
in
retf
imul
loop
das
aaa
xrelease
mov
push
xor
mov
sbb
or
mov
xchg
push
mov
jg
add
mov
push
cdq
repnz
mov
cmps
fld
fs
pusha
and
mov
push
lds
pop
and
ror
sub
xchg
cmp
push
push
lahf
lahf
jl
aaa
sub
sbb
ret
and
inc
aas
ds
or
and
sbb
frstor
mov
aam
mov
xchg
jne
ret
pop
and
retf
xor
pop
add
inc
xor
mov
pop
push
inc
xlat
addr16
add
call
ret
repnz
jns
retf
pushf
icebp
sidtd
mov
aaa
and
dec
sbb
or
adc
xor
stos
jle
inc
sub
ja
xchg
cmp
ins
fistp
hlt
ins
pusha
fwait
push
push
mov
mov
fadd
pop
(bad)
xchg
mov
(bad)
ins
adc
jmp
push
and
pop
nop
(bad)
jbe
pop
mov
loopne
bound
pushf
mov
mov
sub
mov
pusha
pop
pop
call
stos
ss
neg
cmp
test
enter
es
pop
fist
imul
loopne
push
mov
push
dec
mov
movhps
int
ret
mov
and
outs
push
(bad)
rol
inc
inc
sub
mov
in
xchg
shl
ja
sbb
in
imul
dec
mov
jnp
in
movs
in
inc
shl
(bad)
call
inc
out
iret
adc
sar
stos
popa
cmc
xchg
and
lods
push
xlat
adc
xor
not
cmp
pop
movs
sbb
pop
or
std
popf
stos
inc
and
lahf
mov
popf
cld
pop
jns
inc
xchg
mov
xor
repnz
push
cmp
iret
xchg
xchg
xchg
push
inc
jecxz
sub
push
(bad)
ror
mov
test
lds
xor
shr
arpl
pop
das
inc
mov
push
sti
out
arpl
sub
mov
sbb
push
and
pop
clc
pop
bound
pop
pop
push
test
sub
adc
xchg
xchg
into
sbb
cmc
jmp
div
jne
mov
sbb
adc
scas
inc
movs
retf
mov
hlt
inc
pop
rcr
dec
sub
hlt
adc
and
js
adc
jns
pop
jmp
dec
and
cld
adc
and
mov
xor
or
imul
cwde
cmp
or
or
cmps
push
jne
inc
test
xchg
fisttp
retf
jmp
lds
(bad)
mov
sbb
repnz
push
out
stos
ja
call
mov
pop
cmp
pop
sub
jae
cmps
ror
es
or
lock
and
shl
sbb
mov
xor
or
pop
mov
imul
ror
push
push
push
add
ror
lock
nop
cmps
xor
(bad)
jno
pop
jl
rol
(bad)
jl
pop
in
addr16
cvtpi2ps
mov
mov
inc
retf
out
push
push
(bad)
sub
adc
outs
adc
mov
pop
fwait
xchg
or
pop
or
xor
dec
jbe
out
mov
pop
mov
or
xchg
sub
pop
sbb
scas
imul
stos
push
pop
push
inc
test
and
clc
out
xchg
mov
xchg
pop
(bad)
jl
mov
fwait
cld
and
or
xacquire
sbb
rcl
xchg
add
push
dec
pushf
pop
inc
mov
ins
mov
das
sub
aam
jnp
jmp
cmps
nop
pop
cmps
loope
iret
or
bound
push
mov
nop
push
dec
sbb
xchg
xor
mov
and
jb
lods
cmp
ins
mov
adc
es
cld
add
jp
outs
push
lea
adc
and
into
mov
or
xor
inc
or
jg
inc
nop
leave
push
mov
lods
aaa
cmps
rol
aam
inc
icebp
fwait
sub
pop
inc
jb
or
cwde
data16
int3
outs
(bad)
jmp
jo
sub
icebp
jns
inc
push
sbb
xor
repz
push
outs
les
xchg
push
(bad)
and
inc
retf
xor
mov
dec
pop
mov
popa
stos
pop
ror
mov
cld
dec
push
mov
dec
imul
in
push
jnp
mov
scas
mov
jmp
loop
lds
jnp
jo
int
test
lock
rcl
mov
xor
pop
icebp
and
ins
jns
test
mov
add
shl
sbb
out
in
setp
shl
mov
gs
clc
adc
dec
xchg
scas
rol
xor
adc
pop
sbb
aam
bnd
ss
dec
push
xchg
add
adc
scas
or
das
sti
xchg
fs
add
fwait
in
mov
push
inc
jns
leave
jl
sbb
cmps
jne
stos
mov
int3
xor
xor
fldcw
outs
ror
cmp
stos
in
or
xor
cmp
and
sbb
xchg
lds
jp
mov
dec
out
jns
xor
cmp
mov
cli
(bad)
int
pushf
xor
adc
add
call
xor
and
stc
mov
xor
int3
push
dec
sub
outs
xor
jmp
xchg
xor
sub
cmp
pusha
idiv
call
and
jge
pop
sbb
loopne
aas
xor
sub
jmp
lahf
call
bound
adc
in
shl
shr
fadd
sbb
daa
in
or
sbb
sub
loop
jl
ficom
sahf
and
push
clc
xchg
push
add
loope
dec
jle
es
inc
(bad)
and
es
sub
inc
dec
pop
sub
ja
jmp
inc
jne
sub
das
mov
push
sar
inc
mov
mov
movs
lods
push
test
int3
push
repz
arpl
dec
cmp
out
adc
movs
adc
jg
mov
mov
ins
sub
outs
(bad)
aas
hlt
lds
inc
or
inc
pop
hlt
mov
and
(bad)
inc
fdivr
test
(bad)
lock
(bad)
and
push
call
jae
leave
test
xor
gs
je
inc
cmp
adc
push
mov
jo
ja
mov
les
and
inc
in
or
ins
inc
outs
dec
(bad)
adc
mov
fwait
sbb
jmp
movs
pusha
lock
xlat
adc
ins
and
mov
loop
out
push
clc
fmul
jp
ins
adc
movs
movs
mov
inc
xor
loope
lods
and
gs
aad
in
sbb
xor
xor
xchg
aas
cmp
imul
push
pusha
das
push
std
ja
sub
ret
clc
cmps
stos
jae
ret
ror
retf
mov
imul
push
das
dec
shl
jge
iret
inc
push
call
fwait
push
inc
shr
scas
inc
test
test
xor
jl
jb
and
push
push
push
je
mov
and
mov
inc
mov
(bad)
sbb
adc
push
dec
and
cmps
out
xor
test
in
sub
fld
int
stc
push
push
fwait
hlt
dec
inc
fs
sub
cdq
mov
adc
and
and
and
repz
je
jmp
or
in
mov
pop
xchg
(bad)
adc
mov
leave
std
mov
mov
mov
xchg
jmp
shl
and
(bad)
scas
fnstsw
push
sub
mov
lock
in
add
and
xchg
fwait
cmp
cmp
xchg
xor
call
cmps
jl
mov
sub
sub
add
adc
outs
sbb
xchg
and
lahf
push
sti
rcr
imul
rcr
mov
je
out
push
dec
mov
pop
dec
call
mov
or
mov
js
inc
mov
mov
fsub
hlt
xor
mov
call
movs
cwde
and
aas
mov
cld
rol
rol
out
js
mov
leave
jns
push
push
jp
inc
mov
jle
jge
inc
es
pop
mov
sahf
es
mov
dec
scas
das
js
dec
shl
push
je
rol
hlt
out
mov
jmp
and
inc
sbb
sub
xchg
mov
rol
es
push
xchg
test
add
shr
lea
adc
or
jb
pop
sbb
jg
adc
stos
xor
and
pop
add
dec
addr16
les
sbb
jecxz
sub
dec
inc
repnz
arpl
nop
sahf
cdq
cmps
sbb
xchg
callw
loope
push
cmc
pop
xchg
gs
mov
ins
iret
jno
jo
stos
lods
inc
ret
mov
or
lods
mov
adc
aad
xor
sbb
fwait
inc
ficomp
dec
stc
out
mov
sbb
xchg
mov
or
fistp
adc
dec
add
cmp
fnstenv
(bad)
int
ja
hlt
cs
stos
lods
enter
test
fwait
cwde
push
mov
mov
xchg
add
push
imul
jno
out
dec
jge
cmp
sbb
lea
mov
arpl
cmp
in
fimul
call
test
fiadd
int3
mov
mov
scas
pop
cmps
test
cmc
xor
fldl2e
sbb
push
adc
loop
in
aam
or
push
loope
jmp
xor
xor
dec
xor
shl
mov
sub
ret
jge
push
sbb
adc
sub
in
push
xor
mov
add
enter
xchg
xchg
add
data16
sub
mov
out
adc
loope
mov
mov
lds
sbb
fadd
cwde
(bad)
hlt
pusha
psubb
or
lock
and
add
dec
idiv
or
(bad)
int
push
xor
dec
int
repnz
dec
out
rcl
jbe
adc
sub
(bad)
out
adc
lock
and
pop
(bad)
mov
mov
lods
jb
shr
in
ss
xchg
(bad)
push
push
ficomp
popa
mov
dec
je
add
iret
movs
dec
movs
push
test
retf
cmp
mov
xchg
mov
jecxz
sahf
cpuid
and
nop
scas
mov
sub
pop
push
cdq
mov
hlt
mov
pop
dec
push
call
out
fadd
push
rol
add
popf
aam
push
push
cmp
cmps
add
dec
adc
jbe
or
push
fnstsw
enter
aam
scas
test
stos
add
mov
sbb
and
mov
ins
push
int3
push
inc
lods
push
pop
aam
fsub
push
sbb
mov
daa
or
lods
xchg
dec
imul
or
mov
pop
popa
fnstenv
imul
cmp
lahf
mov
mov
cdq
aad
and
stos
push
mov
jp
(bad)
imul
xor
cmp
fimul
mov
mov
mov
cmp
push
shl
pop
arpl
dec
xchg
pop
and
pop
push
xchg
int
movs
adc
cmp
call
ins
pop
bound
add
pop
mov
mov
sbb
mov
outs
loopne
or
xor
adc
adc
int
xchg
call
mov
(bad)
jecxz
sub
or
jge
mov
inc
wrmsr
or
push
int
adc
call
or
pop
imul
bound
pop
jb
push
inc
cmp
lock
(bad)
pop
pop
sub
out
push
cmc
ins
retf
mov
mov
cdq
mov
xor
adc
cmp
call
jmp
dec
mov
lock
jmp
aam
jle
iret
add
test
repnz
retf
pop
jmp
pushf
and
in
jns
iret
icebp
inc
mov
cmp
add
mov
test
push
pop
sbb
push
leave
int
lds
mov
xchg
test
push
mov
fstp
retf
sub
cmp
add
ja
shl
mov
mov
jle
dec
cmp
mov
into
or
(bad)
(bad)
and
(bad)
mov
daa
xor
addr16
imul
xchg
xchg
mov
lods
(bad)
xchg
mov
mov
retf
pop
ret
push
jl
mov
and
sbb
outs
pop
in
int3
ds
loope
adc
cmps
inc
adc
ins
inc
pop
ror
icebp
fisttp
push
sub
mov
or
mov
jmp
shr
xchg
in
xor
jg
fdivr
mov
call
jp
idiv
mov
sbb
retf
push
fisttp
sbb
jg
or
data16
xor
ja
cli
rcr
cmp
inc
jmp
out
pop
or
retf
pop
(bad)
xor
cmp
jnp
fs
(bad)
int
cmps
dec
imul
pop
cmp
pop
sub
jg
xchg
shl
scas
inc
repz
dec
adc
jae
mov
push
pop
push
popf
cld
push
call
ins
push
mov
scas
and
data16
jl
les
lods
jp
push
loop
dec
rcr
enter
fadd
jb
add
daa
loope
mov
add
(bad)
(bad)
pop
ja
dec
mov
jle
push
adc
xchg
push
icebp
or
cmp
pop
and
fld
pop
sub
lods
xchg
cs
jmp
pop
aad
fild
retf
add
xlat
ja
jae
pop
test
mov
and
sahf
leave
ss
sub
xchg
sbb
imul
jmp
retf
aaa
fmul
mov
xchg
mov
or
in
push
or
retf
jg
(bad)
cmc
test
and
out
cmp
xchg
xor
in
int3
test
sbb
les
sub
mov
sub
add
adc
mov
into
pop
adc
mov
and
or
mov
jmp
or
lock
mov
xor
mov
into
add
xor
and
or
imul
loope
xor
xchg
ins
mov
cmp
sbb
popa
cmp
in
cmp
addr16
inc
aas
xchg
fsub
ret
ret
cdq
imul
fs
push
sahf
jb
rcl
outs
daa
stos
ret
ds
mov
int
jbe
inc
aaa
stc
mov
adc
xor
xor
clc
ins
xlat
sar
in
into
inc
fwait
inc
scas
push
cdq
das
or
cmp
jae
xchg
rcl
push
xchg
nop
add
aam
inc
dec
(bad)
mov
stc
shr
ret
sub
jne
imul
mov
fistp
xor
and
and
jge
aam
das
mov
out
sub
(bad)
in
inc
or
xor
ret
js
inc
xchg
pusha
aaa
cld
dec
jmp
mov
cs
sub
call
xor
or
cli
jbe
sub
jno
nop
fadd
ss
push
call
std
hlt
sub
ss
shr
xchg
dec
add
push
stc
int3
mov
xlat
adc
mov
sub
pop
mov
outs
jl
xchg
mov
mov
pushf
sar
ds
enter
mov
in
sub
lods
add
pop
fwait
push
mov
inc
out
mov
push
xchg
cdq
idiv
pop
sti
fisub
cmps
aad
xor
cdq
xor
(bad)
pop
adc
sar
cwde
push
inc
rcl
lea
js
push
movs
(bad)
pop
jmp
xor
in
jp
js
inc
rcl
lock
or
pop
mov
(bad)
sub
mov
jecxz
or
pop
dec
mov
mov
(bad)
mov
mov
jge
mov
scas
stc
lock
sub
rol
mov
and
xor
not
jae
jno
vmcall
retf
xchg
mov
adc
call
iret
scas
cmp
repz
mov
(bad)
jmp
sbb
mov
dec
mov
jbe
mov
stos
jge
or
stos
fucomi
lods
cmps
add
push
test
mov
mov
sub
fs
inc
cmps
out
mov
fbstp
adc
rol
lldt
ror
cmp
out
aaa
push
jmp
pop
cld
inc
mov
outs
clc
(bad)
adc
aas
inc
lods
daa
ins
movs
clc
inc
icebp
jmp
push
ja
pushf
xor
not
mov
cmp
and
icebp
sahf
popf
mov
sbb
xchg
fild
inc
addr16
call
mov
sbb
jl
push
out
bound
or
(bad)
stos
jmp
add
jge
mov
dec
les
test
pop
pusha
jnp
xchg
int
movs
cmp
in
pop
pop
mov
pop
pop
mov
fldcw
and
cmp
cmp
mov
push
mov
loopne
cmps
(bad)
(bad)
pop
ret
fmul
adc
imul
push
outs
(bad)
out
xor
in
mov
les
ror
mov
hlt
jo
add
jb
cwde
inc
inc
(bad)
pop
ja
inc
sub
es
outs
iret
add
mov
mov
cmp
push
aas
ret
cmp
add
imul
xchg
push
and
cmp
test
xchg
push
push
aas
(bad)
dec
xchg
sbb
shl
cmp
add
jne
jle
(bad)
sti
aad
frstor
fnstcw
sbb
push
stc
mov
push
push
iret
sar
retf
retf
daa
mov
aad
sub
cmps
loopne
push
push
add
fsub
add
sbb
stos
sub
dec
nop
push
leave
mov
pop
inc
xor
aam
xor
call
sub
in
ror
bound
jge
mov
xor
add
pop
sar
shl
jno
std
mov
(bad)
test
mov
sub
call
aad
shl
jge
mov
pop
stos
and
outs
dec
push
stos
push
pop
mov
pop
lods
push
jmp
loope
and
gs
rol
(bad)
out
push
xchg
aad
inc
sbb
xchg
adc
inc
sbb
mov
test
addr16
mov
push
jle
sbb
mov
fld
outs
lea
inc
dec
ret
(bad)
adc
jae
sub
out
outs
scas
add
dec
out
xlat
jp
nop
push
cmp
jmp
mov
adc
mov
push
out
pop
fstp
pushf
and
call
test
jne
adc
sti
mov
lds
fidiv
lods
pusha
mov
adc
and
mov
xchg
sbb
sbb
jns
pop
lods
ins
push
ror
aad
lods
sub
inc
cs
inc
dec
cwde
and
push
push
xor
fwait
lds
shl
xchg
lock
outs
(bad)
jecxz
sahf
mov
mov
jmp
dec
mov
push
gs
add
outs
gs
sbb
cmc
arpl
ss
out
jae
sti
jno
in
pop
jb
sub
pusha
or
aaa
jae
pusha
mov
pop
mov
ins
jle
ret
loopne
cmp
or
lea
mov
repz
or
loope
and
xor
mov
scas
jmp
sbb
xchg
ret
sub
cmc
cld
mov
mov
(bad)
xchg
data16
xchg
mov
call
sub
xchg
imul
adc
int3
sub
add
inc
imul
cld
int3
xor
sahf
xlat
xchg
call
test
sahf
movs
add
add
mov
mov
rcl
aam
xchg
cmps
cmps
jmp
xchg
xor
sbb
and
stc
adc
xor
sbb
stc
retf
(bad)
cmp
stos
jo
push
stc
je
mov
xor
jecxz
sbb
xchg
sbb
and
dec
lea
add
ins
mov
outs
push
jne
pop
sub
push
call
xchg
pop
sub
int3
int
inc
(bad)
xchg
fdiv
in
pop
arpl
cmp
je
mov
out
sbb
ins
scas
cwde
dec
xchg
and
push
daa
les
and
cmp
enter
mov
ret
cmp
sbb
mov
mov
push
fstp
jmp
push
cdq
adc
mov
repnz
jmp
sub
jp
fwait
push
push
dec
or
into
or
ins
pusha
sub
push
xchg
sbb
fidiv
dec
push
adc
daa
fsub
popa
pop
test
fldcw
call
xchg
into
sub
cli
pop
cs
shl
xor
addr16
and
mov
and
ret
mov
aas
dec
test
popf
push
je
mov
push
cmc
cmp
adc
ins
push
sbb
add
movs
xchg
call
xchg
fs
xchg
xlat
mov
pop
movs
lea
mov
cli
aam
mov
inc
(bad)
adc
add
mov
test
xor
and
(bad)
jmp
jns
das
jns
pop
sub
adc
cs
fmul
scas
adc
or
cmp
jmp
jb
(bad)
push
sbb
jno
push
xor
sar
sub
lea
dec
dec
sbb
pop
ins
(bad)
mov
lods
cmp
stc
adc
fwait
outs
fwait
dec
cmp
jnp
xchg
into
dec
pusha
cmps
push
and
jno
jne
push
leave
sbb
or
inc
dec
jmp
push
ds
out
int
lahf
jb
push
leave
daa
or
jbe
jo
ret
mov
mov
(bad)
out
popa
mov
movs
int3
add
inc
dec
push
lea
inc
push
xor
add
xchg
jb
int
dec
das
movs
cmp
add
hlt
lea
xchg
(bad)
(bad)
enter
inc
dec
dec
enter
jmp
mov
ror
retf
pop
and
jp
test
adc
jp
xchg
test
iret
mov
js
movs
cmp
mov
xchg
loope
pop
test
xchg
mov
and
cwde
clc
cmp
daa
and
jno
pop
adc
mov
pop
outs
mov
je
cld
cdq
sub
mov
pop
lahf
xlat
or
ret
in
jae
mov
push
mov
and
push
jl
lods
lea
pushf
inc
das
cmp
in
dec
sbb
push
pop
ror
test
sbb
loope
mov
aad
push
dec
jg
cli
ins
mov
rcl
jnp
xchg
pop
jno
lahf
movs
mov
pop
jbe
ja
xor
ss
call
xor
pop
sbb
dec
push
js
sahf
cmovno
out
jmp
enter
sbb
jno
jmp
xchg
test
cmp
mov
pop
ins
sbb
dec
adc
or
in
test
ins
psrad
sbb
sub
lods
push
data16
and
sar
scas
pushf
sti
lahf
daa
dec
xor
sbb
push
or
jnp
fs
cld
mov
(bad)
bnd
enter
shl
iret
dec
mov
loope
jno
or
(bad)
bnd
cmp
push
jnp
retf
push
add
lock
pop
jle
adc
out
jns
mov
sbb
dec
retf
out
cmps
sbb
and
mov
sub
cmps
mov
push
pushf
add
out
mov
in
push
cmp
cmp
jns
pusha
pushf
or
mov
pop
pop
xchg
cmp
add
(bad)
or
pop
and
je
jmp
fs
nop
cmp
push
retf
jp
or
xchg
lds
cs
add
lahf
lods
loope
jbe
outs
xor
test
jp
and
dec
jne
add
sub
sbb
(bad)
cmps
jo
push
sub
loopne
loop
cmp
xor
sbb
fidiv
pop
daa
xlat
lods
pop
push
lods
mov
pop
lods
and
and
add
daa
cmp
xor
mov
and
or
in
repz
inc
mov
stos
iret
mov
sbb
movs
(bad)
pop
repz
mul
ins
adc
push
pusha
xor
jecxz
mov
frstor
jl
jno
shl
pop
inc
xchg
sub
sahf
dec
rcr
pop
jg
shl
mov
mov
jl
adc
imul
inc
dec
mov
mov
pop
push
loop
jle
rcr
jg
sti
jmp
loop
mov
(bad)
xlat
adc
das
pushf
dec
push
lahf
mov
add
clc
hlt
mov
lahf
loope
jb
stc
out
bound
in
add
xor
loopne
cdq
mov
scas
mov
sub
pop
mov
retf
jg
test
and
call
or
fcom
sbb
push
cld
outs
sbb
add
arpl
mov
pusha
sbb
addr16
(bad)
sahf
push
call
adc
pop
push
shl
leave
adc
(bad)
loopne
sub
fiadd
jge
push
jle
sub
dec
dec
addr16
or
adc
or
xor
rol
ds
push
pop
mov
std
and
push
imul
mov
mov
sub
and
call
or
mov
in
adc
inc
outs
add
xlat
push
jo
sub
out
cmp
or
retf
adc
sbb
cmps
(bad)
pushf
adc
mov
mov
push
mov
push
jnp
data16
sub
and
fld
nop
sbb
xchg
lds
adc
xor
pusha
mov
mov
push
shl
cmps
jmp
adc
push
in
mov
mov
dec
pop
jmp
xor
adc
and
push
mov
sar
pop
jecxz
aas
not
inc
adc
mov
call
cmp
jmp
cmps
xchg
mov
aaa
jp
jb
dec
cwde
and
jnp
mov
lds
mov
(bad)
popa
xor
xchg
cmp
cmp
cmp
clc
mov
pop
mov
mov
inc
sub
shl
adc
xor
shl
xor
fld
fs
cmps
hlt
lock
movs
cmp
cmp
add
in
das
outs
mov
dec
and
mov
push
or
lea
push
xor
fs
xlat
out
into
or
jno
(bad)
in
imul
cmp
xchg
retf
push
enter
fdivr
sahf
inc
mov
dec
fcmovnbe
sahf
leave
fs
enter
call
xor
in
sub
push
mov
mov
dec
cmp
sbb
lds
cmc
ret
jo
adc
out
test
(bad)
mov
jp
aaa
jnp
(bad)
(bad)
pop
movs
cmp
lahf
jo
shr
xor
jae
ja
push
sbb
mov
hlt
add
or
fmul
bound
jecxz
cmc
push
mov
int
push
nop
cmp
data16
pop
(bad)
ja
jp
mov
cmp
mov
bound
imul
ins
imul
mov
daa
lds
(bad)
xor
jg
mov
enter
mov
push
cmc
inc
movs
jl
mov
push
cmp
fimul
out
sub
sub
jb
(bad)
sti
dec
mov
enter
cmps
jns
les
push
fld
std
pop
outs
test
sahf
mov
aaa
or
aas
xor
ss
mov
jns
sar
sar
add
popa
dec
pop
cmps
pop
jo
retf
fmul
xchg
add
xchg
add
or
test
ficom
sahf
fisub
ins
add
loop
mov
mov
(bad)
jno
inc
jle
jmp
mov
icebp
and
lahf
movs
lea
add
cwde
cmps
inc
mov
xchg
jns
cmps
or
cs
test
cmp
div
pop
out
loop
mov
xchg
cmc
mov
sbb
test
cld
je
pop
hlt
(bad)
shr
inc
and
icebp
mov
pop
mov
add
pop
retf
(bad)
pop
cwde
pop
loope
xchg
mov
(bad)
leave
jb
ins
add
sbb
lock
push
push
jmp
das
jbe
xor
test
mov
lds
call
mov
adc
cmovge
lods
push
ret
sbb
push
xchg
and
icebp
and
retf
add
sub
int3
mov
adc
dec
pop
test
sbb
and
xchg
adc
lds
inc
inc
aas
int3
je
push
pop
push
iret
pop
sar
in
mov
mov
mov
add
inc
outs
ja
or
sub
adc
add
fiadd
xor
cwde
pop
lea
sti
cmp
push
push
jae
jae
lds
mov
mov
jae
pop
int3
scas
or
push
and
or
push
mov
(bad)
pop
cs
jmp
je
neg
jae
push
popf
in
sub
rcr
(bad)
loope
jnp
pop
ss
xor
pop
mov
fwait
test
add
pop
sub
mov
inc
popf
jae
cmp
or
rol
les
(bad)
mov
or
xor
add
dec
cmps
jbe
sub
sub
hlt
(bad)
jnp
xchg
push
pusha
mov
mov
das
cs
adc
ins
sbb
nop
mov
push
test
nop
pop
jnp
pop
cmp
mov
std
mov
and
push
ficom
sahf
leave
mov
fisubr
xor
mov
mov
jl
inc
into
es
ficom
test
xchg
and
scas
mov
push
mov
or
(bad)
loop
(bad)
fisubr
mov
and
add
dec
out
ret
jo
outs
xchg
pop
lea
xchg
shl
dec
ds
and
movs
sub
out
mov
mov
stc
pop
add
jnp
hlt
pop
or
in
pop
movs
cs
mov
push
jns
pop
imul
dec
or
xor
dec
jle
popa
(bad)
test
jo
mov
stos
out
pop
(bad)
js
dec
int3
fwait
outs
push
xor
pop
out
cmp
or
outs
ja
push
aam
xor
xchg
adc
dec
pushf
jo
dec
jae
je
sbb
mov
mov
pop
dec
enter
sbb
mov
xor
and
dec
dec
pop
sub
outs
sbb
xchg
mov
test
int
sbb
mov
xchg
aas
dec
pop
(bad)
dec
rcr
mov
in
pop
test
test
xor
xchg
add
call
pop
ins
sub
push
(bad)
cmp
or
retf
jo
das
fcomp
data16
add
sub
out
lods
mov
jb
or
aaa
dec
cmp
push
xchg
fstp
inc
sti
push
shl
sbb
mov
and
xor
mov
icebp
bound
fdiv
cmc
xchg
pop
aas
div
out
mov
jno
das
sub
push
lahf
movs
mov
add
ins
aaa
stc
jge
stos
adc
mov
xchg
popa
dec
leave
mov
stc
mov
jb
push
addr16
push
add
(bad)
cmp
loope
retf
out
sub
jle
jp
psubusw
mov
in
icebp
or
sbb
sub
mov
(bad)
test
mov
(bad)
mov
adc
inc
in
mov
daa
std
int3
cmps
xor
push
sub
xchg
int3
xchg
dec
clc
mov
pop
xchg
das
add
inc
jo
ins
rcr
adc
pop
pop
cwde
xor
bound
jecxz
push
xchg
scas
addr16
jecxz
jecxz
adc
push
(bad)
sbb
lock
fcomp
je
stos
gs
stos
pusha
xor
das
xchg
xor
jae
scas
inc
or
dec
xchg
adc
push
into
aaa
out
jmp
rol
adc
in
cmp
mov
loopne
dec
fwait
stc
outs
outs
xlat
and
mov
rcl
test
mov
mov
cmp
leave
mov
ficomp
addr16
xor
sbb
ret
leave
imul
push
mov
sub
shl
mov
xor
inc
mov
push
loope
pop
nop
popf
adc
pop
sbb
out
call
adc
adc
xchg
aam
out
adc
retf
mov
outs
aam
jns
or
xlat
lods
dec
push
adc
dec
jmp
clc
add
fstp
call
in
xor
int
jp
mov
jg
mov
popa
push
or
retf
retf
das
je
mov
ds
out
fdiv
call
cmc
inc
imul
int3
xchg
dec
xchg
stos
or
jl
mov
mov
aad
cmp
imul
adc
sti
sub
fisubr
je
mov
push
lods
(bad)
cmp
sub
xor
dec
push
out
sbb
mov
sti
std
and
lods
sbb
ror
xor
in
xor
push
pop
lea
xchg
mov
loope
js
dec
ficomp
cld
pop
pop
xchg
dec
pop
cmp
dec
or
out
in
add
into
xchg
push
mov
out
pushf
lods
cmp
jbe
adc
es
popa
push
sub
add
mov
xchg
call
push
pop
adc
push
nop
aas
frstor
fst
cdq
les
ja
inc
push
xor
cwde
mov
retf
mov
sar
ins
pusha
jnp
nop
or
mov
xchg
imul
addr16
fistp
pop
loope
pusha
or
xchg
pop
inc
inc
mov
retf
lods
out
xlat
div
test
push
mov
aad
stos
addr16
push
and
fld1
out
ret
int
xor
ds
aam
cmc
jae
and
and
cmp
shl
repnz
pop
stos
shr
ror
outs
cmp
aas
fdivp
jo
clc
pop
rcr
ja
xor
fiadd
pop
fadd
nop
stos
loopne
jno
mov
cmp
cmp
jmp
jecxz
sbb
inc
inc
sbb
mov
xchg
add
xchg
in
add
ins
sbb
mov
mov
pusha
dec
out
sub
dec
dec
dec
(bad)
xchg
or
push
pop
repz
push
dec
xlat
sti
das
pop
dec
jge
cdq
jo
jmp
sbb
push
xor
push
sar
aam
sbb
inc
xchg
iret
mul
pop
sbb
jnp
shl
push
mov
and
push
mov
ja
shr
fst
push
pushf
dec
mov
add
test
xchg
xor
mov
jbe
test
mov
bound
rcr
dec
repz
aas
mov
xchg
iret
mov
adc
ins
daa
out
sub
outs
and
xor
lea
pop
rol
mov
test
pushf
cmp
fldenv
add
jmp
popf
adc
adc
dec
jb
pop
leave
lahf
adc
inc
mov
xchg
pushf
push
mov
push
aam
mov
pop
cwde
fs
sbb
dec
fsubr
or
dec
dec
jns
js
loop
scas
hlt
aaa
lds
mov
popa
mov
sbb
and
mov
mov
in
push
pop
xor
daa
iret
fs
xchg
mov
push
sbb
icebp
into
push
sbb
push
sbb
cmps
iret
ss
cmp
mov
out
fidiv
sub
lea
and
jne
jae
jg
inc
(bad)
in
mov
and
(bad)
adc
add
inc
lahf
mov
push
xor
jmp
cs
mov
fsubr
ss
xchg
mov
cmp
into
pop
cdq
mov
jne
sbb
cs
dec
inc
test
lods
jo
jp
ins
adc
or
test
push
scas
iret
jbe
lahf
sbb
sbb
jge
int
xor
rcr
jns
dec
fild
cmp
xor
inc
clc
dec
(bad)
sub
sub
dec
pushf
int
nop
add
jbe
sbb
xor
adc
adc
adc
fsubp
rcl
aam
out
test
mov
jnp
sub
inc
jb
and
push
or
js
loopne
mov
jp
pop
adc
ins
push
inc
int
aaa
rol
cmc
and
test
push
mov
jle
out
mov
jp
bound
pop
int
jne
cli
stc
jmp
data16
aam
sub
inc
in
mov
pop
sbb
retf
stc
int3
int3
jo
daa
push
sbb
push
inc
lds
jo
pusha
mov
stos
add
ret
rcr
test
mov
das
(bad)
cmc
ja
or
jnp
pop
or
sub
shr
dec
dec
pop
pop
pop
xor
ins
data16
sahf
pop
push
sbb
jbe
jle
dec
xor
ja
(bad)
fadd
jl
ss
fist
mov
inc
xor
repnz
mov
call
sbb
sahf
push
stos
rcl
js
pop
dec
push
aad
pop
mov
mov
jp
jbe
push
and
jo
inc
cdq
cmp
leave
adc
scas
cs
popa
stc
mov
sti
mov
cmp
mov
mov
pop
es
sub
jge
add
and
xlat
mov
rcr
shl
enter
stos
(bad)
(bad)
(bad)
aas
fadd
fdivr
dec
sbb
sbb
jns
and
stos
or
mov
jge
jecxz
push
ja
xor
inc
mov
(bad)
std
mov
push
xlat
jl
sub
cwde
jp
jg
cmp
cmc
clc
push
retf
add
sti
or
xor
sbb
lahf
js
aaa
out
pop
and
push
sub
mov
mov
data16
jmp
(bad)
aam
pop
lock
push
pop
xor
sub
xchg
xor
push
push
xchg
mov
int
into
jmp
iret
and
pop
aam
or
push
jmp
mov
jo
icebp
sbb
mov
adc
xlat
push
mov
stos
sbb
ret
popa
dec
repnz
mov
test
fld
jbe
pusha
and
das
push
int3
loope
das
into
push
repz
in
cmc
xchg
cld
mov
add
xchg
jecxz
cld
mov
popf
cmp
cmp
and
aad
int3
xchg
pop
jnp
mov
shl
adc
sbb
sbb
jns
mov
enter
push
les
inc
sub
(bad)
sub
inc
fsubr
je
push
push
lea
clc
push
add
jmp
sbb
xor
pop
jnp
cmp
sahf
fucomp
pusha
cmp
adc
cmp
mov
adc
cmp
add
push
pop
sub
mov
jmp
outs
adc
sbb
xchg
adc
mov
loope
lock
sub
test
or
inc
mov
inc
or
mov
or
cmp
push
fdivr
fucomip
mov
test
fmul
test
not
sbb
ja
cli
adc
xor
sti
mov
ret
jno
loop
out
shl
or
adc
inc
(bad)
arpl
(bad)
pop
sub
sub
push
mov
dec
pop
into
xchg
xor
rcl
(bad)
or
retf
dec
je
push
inc
cmp
sub
sar
sahf
in
mov
push
repz
ss
xchg
and
xor
fcom
xchg
movs
std
cmp
out
pop
xor
arpl
fiadd
mov
pop
repz
jmp
sbb
fistp
cmps
fist
pushf
xchg
pop
popf
fs
or
test
lea
cmps
mov
ins
xchg
add
hlt
jns
adc
dec
pop
stos
mov
add
adc
xchg
dec
lods
pop
sub
mov
dec
je
mov
fcmove
into
ins
adc
sbb
cmps
mov
sbb
aaa
popa
dec
jae
adc
push
mov
repz
arpl
arpl
stos
rol
mov
sub
sub
jp
pop
icebp
or
lods
pop
cmp
sub
rcl
std
loop
jecxz
ja
xor
or
imul
mov
dec
jp
sbb
sub
mov
nop
popf
dec
and
push
sub
neg
pop
sub
pop
and
les
lea
(bad)
inc
pop
addr16
add
jp
push
sub
sbb
(bad)
in
lock
dec
mov
and
inc
pop
(bad)
pop
jmp
daa
pop
mov
dec
mov
xchg
fadd
dec
data16
adc
pop
xchg
push
dec
pop
ss
in
(bad)
fisub
pop
or
xor
jle
cmps
ss
iret
ins
push
loop
ins
dec
jo
dec
cmp
ss
mov
mov
jecxz
pop
xchg
push
and
cmp
mov
cmp
cmp
not
sub
sti
push
data16
inc
pusha
jae
inc
scas
shr
add
and
sbb
adc
test
out
xchg
cld
int
lods
data16
and
lods
fisttp
stc
inc
cmp
into
jl
add
shr
mov
out
adc
jmp
xor
fcomp
pushf
std
sub
xlat
adc
mov
xlat
sahf
xchg
fdiv
xchg
mov
jge
out
ins
fisttp
std
pop
rol
popa
retf
rol
jp
rol
push
aam
dec
idiv
add
xchg
es
lods
add
jae
or
cmps
ffree
gs
gs
cmps
mov
outs
in
out
retf
fdiv
aad
(bad)
(bad)
loopne
adc
jle
push
dec
adc
mul
xchg
mov
sahf
sub
inc
gs
or
sti
and
sbb
mov
or
dec
xlat
cmp
inc
cmps
daa
out
cdq
inc
push
fsubr
sbb
bound
mov
cmp
call
mov
icebp
pop
dec
pop
std
loopne
cmp
pop
inc
mov
int
loope
jle
push
mov
cmp
call
adc
call
sahf
mov
pop
cld
repnz
adc
jecxz
push
fxch
push
loope
and
cmp
xor
sbb
lods
push
and
add
and
(bad)
sbb
mov
xor
imul
mov
xor
(bad)
xchg
outs
hlt
(bad)
jmp
pop
xchg
xchg
jb
mov
jno
outs
hlt
ja
mov
push
push
fadd
ret
dec
sbb
push
and
jne
sub
mov
mov
or
sub
sub
shl
ins
mov
dec
xchg
inc
xor
fsubr
pop
adc
fiadd
call
sub
add
sahf
lds
fbstp
mov
push
lock
hlt
mov
mov
shl
std
lea
popf
stos
jle
push
fisttp
cli
fnsave
and
(bad)
adc
out
sub
in
je
cmc
lods
push
xchg
pushf
jbe
cmp
cmp
bound
mov
mov
mov
sub
bound
adc
jae
(bad)
daa
je
fldenv
sbb
jno
popa
mov
std
mov
stc
and
cmp
or
sbb
jecxz
outs
or
mov
xchg
(bad)
shl
push
fcomp
rcr
fistp
jecxz
push
mov
stc
cmp
ins
cwde
mov
scas
and
sub
bnd
ja
bound
cs
push
sub
jl
loop
sub
cld
mov
test
sbb
ror
icebp
call
mov
retf
data16
rol
cmp
xor
movs
sub
adc
add
sub
mov
out
inc
sbb
jle
into
sbb
call
lods
shr
(bad)
cli
int
enter
or
fsub
data16
je
icebp
sbb
mov
mov
test
test
aaa
xchg
scas
in
ret
pop
fs
arpl
popf
add
or
or
pop
mov
pushf
shr
test
test
xor
push
xchg
jae
jae
xchg
ret
and
mov
inc
test
call
pop
jg
(bad)
pop
cmp
aad
(bad)
mov
out
inc
(bad)
mov
xchg
jbe
inc
dec
pop
sub
dec
ins
adc
mov
mov
xchg
mov
dec
sbb
mov
stc
and
add
cmp
call
pusha
dec
daa
loopne
push
add
rol
pop
and
fidiv
cmps
outs
ror
add
xchg
sbb
out
jg
leave
outs
xchg
cmp
fnsave
inc
ja
push
xor
mov
rcr
jecxz
lock
stc
ds
les
mov
xchg
jge
adc
in
inc
aam
mov
add
imul
sbb
push
mov
les
int
hlt
ret
mov
sbb
ja
ret
dec
rcr
xchg
ds
es
cmp
jns
call
rcl
jecxz
xor
cld
repnz
loop
mov
mov
loop
push
(bad)
xor
div
jle
and
pop
mov
imul
jge
jae
and
pushf
retf
ds
outs
sub
mov
jo
sub
popf
push
mov
sub
fisub
int3
xor
fsub
sub
xor
in
jmp
(bad)
aas
daa
mov
scas
jmp
arpl
mov
cmp
sti
jmp
ror
mov
mov
mov
xor
cmc
inc
lds
cmps
nop
inc
out
dec
or
(bad)
iret
xor
rcl
das
ins
xchg
add
shl
ins
dec
in
adc
jae
xor
popa
jae
inc
and
sub
xor
ja
cmp
fnstcw
fcomip
test
mov
xchg
imul
lods
fild
loop
inc
dec
imul
jmp
mov
or
mov
int
int3
repz
add
jns
xlat
push
inc
repnz
loope
out
adc
dec
adc
fsubr
pop
inc
mov
in
aam
(bad)
cmp
mov
dec
aaa
imul
sub
xor
movs
gs
jle
or
inc
scas
out
mov
stos
fwait
rcl
and
sub
push
scas
fistp
push
xor
scas
addr16
movs
in
mov
cmc
or
jo
mov
out
(bad)
retf
push
out
mov
cmp
sti
fcmovnu
push
adc
push
jne
lods
stos
jae
mov
sbb
shr
adc
rcl
mov
mov
(bad)
dec
jle
cli
icebp
pop
pop
xchg
cmp
add
ret
xchg
sub
lea
inc
outs
sub
xor
push
pop
lahf
jmp
fmul
nop
scas
sbb
(bad)
cmp
jbe
retf
into
cmp
mov
out
mov
jns
std
aad
or
out
mov
dec
and
(bad)
push
in
daa
shr
cs
adc
std
mov
jmp
add
shl
mov
sub
loope
mov
push
jbe
ins
sub
jmp
mov
add
imul
cmp
repnz
pushf
shr
xchg
pop
cmp
dec
xchg
ins
adc
jg
lods
pop
retf
bound
cmp
inc
retf
fwait
or
fmul
or
clc
adc
xor
push
mov
neg
jbe
pop
pop
push
scas
hlt
cli
(bad)
inc
shr
test
adc
dec
or
adc
mov
aas
cli
lahf
std
jp
push
jns
add
sub
mov
push
sar
aad
sbb
mov
sub
(bad)
cmps
jg
out
pop
and
inc
xchg
jmp
stc
aaa
sar
retf
addr16
gs
aam
mov
ss
mov
movs
rol
loopne
jbe
mov
push
adc
add
in
mov
cmp
jbe
ja
mov
ror
iret
and
pusha
out
nop
or
pop
cmp
lods
add
mov
and
add
and
xchg
movs
dec
push
mov
into
jp
xchg
add
nop
dec
mov
jb
scas
mov
add
pop
cmp
mov
dec
lahf
pop
jle
sbb
jno
jae
sbb
fcomp
xlat
cmc
inc
lods
mov
add
jmp
leave
cwde
mov
mov
jge
mov
frstor
jmp
call
mov
push
jle
ja
pop
add
test
or
pop
sub
or
ss
add
xchg
rcr
mov
test
sbb
push
xor
xchg
xor
lods
fisub
jb
adc
jo
hlt
enter
gs
in
xlat
mov
sub
sbb
or
dec
dec
setnp
das
popa
sbb
pop
lahf
retf
cmp
shr
inc
movs
or
lahf
(bad)
clc
ror
xchg
outs
out
cmp
xor
dec
fild
and
and
sbb
jecxz
sti
sub
lds
add
push
sub
pcmpeqb
sub
out
or
test
fwait
inc
aam
popa
sub
adc
aad
and
ja
stos
sub
je
aaa
(bad)
stc
daa
jmp
cld
in
fstp
or
fcom
xchg
sbb
sbb
movs
inc
arpl
cdq
mov
adc
mov
fwait
mov
cmps
loope
outs
inc
sar
jmp
jns
outs
out
shr
xor
sahf
pop
(bad)
loope
dec
bound
push
outs
out
movs
xchg
pop
push
les
mov
mov
cmp
dec
int
test
adc
adc
jge
(bad)
cmp
sbb
pusha
mov
lock
dec
adc
test
fwait
xchg
mov
leave
pop
les
dec
sub
mov
mov
psrad
or
call
sbb
pop
inc
pop
push
xchg
and
popa
mov
icebp
sub
lds
popa
xchg
add
iret
inc
xor
mov
shr
into
mov
test
adc
shl
pop
popf
mov
cvtps2pi
call
jno
aaa
pop
ss
stos
inc
mov
fist
fnstsw
mov
or
cmp
pusha
sub
xchg
ins
std
pop
sbb
mov
xor
sti
in
xchg
dec
pusha
xor
cmp
cmp
mov
push
neg
push
out
pop
sbb
or
dec
int3
cwde
sbb
popf
sbb
(bad)
mov
add
dec
xchg
and
ds
rcr
cmps
loopne
(bad)
into
mov
xchg
(bad)
pop
pusha
push
es
pop
shr
or
push
aaa
dec
sbb
data16
xchg
sbb
jmp
pushf
lods
jnp
dec
mov
mov
jns
fld
cmp
aaa
fiadd
xchg
dec
lock
pop
cmp
icebp
lock
ja
inc
retf
xchg
jp
mov
mov
sub
icebp
and
mov
movs
iret
push
sub
adc
out
jae
sbb
inc
fnstcw
sub
inc
mov
nop
test
mov
or
mov
sbb
out
stos
cdq
and
pop
push
ror
js
shl
daa
and
fistp
jo
daa
outs
jle
push
inc
pop
mov
dec
cmps
jl
fs
aaa
out
cmp
sahf
mov
lods
push
lahf
or
push
mul
sar
adc
sbb
repnz
call
daa
pop
call
xor
push
stos
mov
cmps
rol
sub
aam
pusha
test
fisttp
and
xor
fidiv
push
push
aad
jecxz
inc
mov
and
mov
push
or
jno
lea
test
jl
jg
aad
or
shl
lds
xchg
fdivr
xchg
or
lods
or
rcl
call
pop
aam
push
xor
jae
fnstsw
jb
xchg
mov
adc
sahf
mov
jecxz
out
xchg
into
mov
pop
repz
pop
rol
jecxz
push
repnz
dec
sub
mov
in
dec
loopne
sbb
sub
xchg
xor
sti
mov
ins
mov
pop
outs
or
cmc
sub
pusha
test
daa
add
shl
add
dec
stos
adc
mov
adc
jbe
jne
daa
add
enter
ficom
pop
xor
call
fisub
inc
or
xchg
lock
add
jbe
hlt
push
cmps
ss
or
not
push
sar
mov
retf
push
stc
push
mov
dec
jle
mov
ret
lds
pop
sbb
xor
imul
(bad)
movs
push
push
and
dec
fistp
pushf
nop
mov
imul
mov
out
push
outs
test
xor
cmp
push
dec
ins
hlt
inc
(bad)
xor
push
pop
(bad)
mov
ror
jecxz
xor
jp
dec
cwde
ficom
cmps
fistp
add
sar
popa
jmp
scas
dec
inc
inc
outs
lock
ins
push
rcl
xchg
xchg
sbb
imul
push
fsub
dec
pop
frstor
sbb
dec
repz
jp
cdq
mov
aam
call
or
mov
test
ins
mov
xchg
or
mov
and
mov
jno
xchg
fdivr
ror
stc
mov
dec
outs
mov
xor
hlt
into
pop
dec
dec
ret
jge
std
push
and
ins
xlat
and
sbb
cld
sbb
les
sbb
dec
sar
ficomp
and
jb
mov
cmps
scas
sub
fstp
mov
sub
xor
jmp
into
cli
mov
sbb
popa
in
mov
outs
jp
push
add
jae
pop
pop
test
or
or
xor
pop
shl
push
pushf
iret
xchg
sub
adc
call
je
or
dec
dec
loopne
fstp
lods
mov
jne
cmp
mov
pop
cdq
or
sub
out
stc
shl
inc
xchg
inc
cmp
imul
repnz
mov
mov
daa
cdq
ret
dec
dec
mov
fwait
push
xchg
mov
stc
pop
cmp
cmp
and
es
dec
mov
movs
xlat
jb
xchg
movs
mov
clc
mov
retf
cmp
push
xchg
in
iret
movs
inc
jle
movs
mov
xchg
inc
into
pop
cld
loopne
in
jae
sbb
mov
mov
add
sub
push
xor
psubsb
into
xchg
push
adc
pop
popa
xor
pop
popa
retf
test
nop
pop
sub
inc
inc
add
xchg
iret
mov
repnz
cmp
adc
mov
leave
cmps
push
loope
inc
jmp
daa
scas
lea
xchg
push
fld
call
loopne
(bad)
test
mov
popf
movs
jne
scas
dec
enter
movs
lods
jl
fidiv
int3
pop
aam
mov
or
mov
ja
fist
(bad)
mov
push
inc
pop
mov
test
pop
dec
inc
or
sbb
test
ss
inc
ret
aam
jl
dec
rcl
test
mov
loope
in
pop
and
dec
xchg
stos
mov
inc
fdivr
popa
mov
dec
out
push
lahf
mov
adc
adc
push
mov
xchg
lahf
push
inc
dec
mov
addr16
rcr
in
sub
popf
sub
push
xchg
lods
or
mov
fistp
pop
xchg
jle
pop
imul
and
shl
sbb
mov
aad
xor
xor
mov
xchg
or
jae
nop
jo
mov
inc
dec
into
bnd
cmp
js
add
xchg
push
fst
jne
ficom
mov
rcr
sbb
mov
and
(bad)
xor
sbb
mov
fsubr
sub
outs
cmc
cmp
fcomp
jo
push
imul
cmp
cmp
pop
das
push
mov
or
mov
pop
repnz
lods
xor
jns
jno
xor
mov
sub
es
iret
test
addr16
cdq
dec
fcomp
fwait
dec
sbb
inc
pop
adc
pop
or
xor
iret
imul
jo
fidiv
pop
ret
jmp
ficomp
xor
addr16
mov
sub
sub
sub
mov
cmp
retf
loope
or
sbb
test
push
retf
adc
stc
xlat
add
aam
push
mov
xchg
ror
fist
daa
cmp
jae
sub
sbb
jo
adc
imul
cmc
and
pop
cmp
sbb
mov
int
and
xchg
mov
push
lock
mov
sbb
jae
mov
bound
jno
xchg
mov
mov
mov
ins
pop
jle
das
xlat
sub
arpl
xor
jge
hlt
jl
ds
sahf
add
xor
jbe
sbb
sar
cmp
mov
pop
adc
ret
test
mov
sti
cwde
sbb
lahf
rcr
pushf
cs
call
scas
fs
not
repz
fild
ins
scas
pop
mov
je
pop
shl
shr
arpl
pop
or
xor
push
sbb
and
pop
dec
in
or
push
xor
mov
call
inc
pop
pop
stos
inc
ds
scas
retf
daa
rcl
cmp
inc
mov
int
jb
pop
iret
fisubr
inc
or
rep
daa
mov
cmps
cmp
mov
pop
push
dec
jmp
ss
test
sub
dec
jle
inc
dec
mov
out
shl
popf
xchg
popf
les
dec
mov
or
iret
call
test
and
jbe
fdivr
mov
sbb
push
dec
add
mov
jno
jge
mov
mov
mov
jp
xchg
mov
push
jns
sar
repz
push
into
test
lock
pop
or
pop
pop
in
jae
in
test
xchg
stos
pop
sub
jmp
cmp
jno
push
in
ins
scas
fimul
xor
sbb
lock
retf
loope
mov
pop
mov
sbb
add
mov
test
pusha
mov
cmp
dec
loop
lahf
and
xor
(bad)
pushf
mov
popa
cmc
lds
mov
xchg
fstp
inc
push
mov
arpl
inc
fist
mov
out
sub
in
outs
cld
mov
cmp
(bad)
push
shr
add
neg
jmp
sbb
outs
and
(bad)
shr
mov
mov
dec
popa
and
ds
imul
aaa
int
sub
and
xor
add
cli
adc
retf
push
stos
jl
repnz
pop
jge
or
pop
loop
adc
int
xlat
call
inc
jl
cli
dec
out
xchg
test
jecxz
jb
retf
jg
jbe
cwde
jns
jns
fldenv
adc
rep
jne
pop
pop
sbb
mov
mov
push
cdq
or
inc
mov
mov
fs
jns
sub
rol
clc
mov
or
mov
inc
inc
mov
pop
out
into
sbb
pop
rcr
or
test
jg
inc
cmp
inc
add
jle
leave
test
es
lahf
add
in
mov
and
sub
movs
daa
push
cmp
mov
out
dec
push
jae
(bad)
mov
cmp
frstor
mov
dec
das
fwait
movs
mov
sub
jmp
shr
xor
movs
inc
popf
and
fcomp
and
inc
pop
xchg
dec
movs
sbb
sub
push
xor
call
or
cdq
xchg
test
pop
jne
mov
add
mov
cmovns
es
ss
jne
and
xchg
cmp
push
movs
gs
inc
test
pushf
sub
adc
ret
pop
xchg
dec
push
movs
(bad)
sbb
ins
adc
jl
and
call
outs
outs
shr
and
movs
das
push
sub
pop
xchg
aam
repz
xchg
dec
adc
xchg
sbb
mov
mov
jl
sbb
in
in
mov
mov
or
push
push
jnp
pop
lods
dec
lods
lahf
inc
jmp
arpl
dec
repnz
aaa
gs
push
mov
out
fisubr
data16
pushf
or
test
retf
inc
enter
push
popf
xor
pop
dec
shr
xchg
push
sbb
push
(bad)
xchg
cmp
or
movs
call
aad
ja
test
sub
dec
and
jle
dec
inc
(bad)
xor
mov
dec
les
and
rcr
div
test
outs
xchg
jmp
sbb
mov
dec
test
imul
movs
mov
jg
inc
jl
mov
div
scas
mov
or
test
push
je
(bad)
iret
lods
rcr
mov
sub
mov
adc
fmulp
inc
sub
ret
scas
adc
icebp
adc
adc
mov
sbb
data16
lods
addr16
adc
mov
movs
pop
aaa
push
int3
(bad)
cld
jo
sub
or
mov
pusha
fwait
arpl
mov
call
fwait
out
daa
rcl
dec
sub
adc
addr16
sub
hlt
push
push
iret
cmp
and
stc
fist
adc
xchg
adc
outs
jbe
aaa
sbb
inc
push
jp
add
retf
cmp
int3
data16
(bad)
test
ja
les
or
cdq
mov
movs
pop
sti
int3
adc
xchg
icebp
dec
xor
and
call
rcl
xor
outs
mov
ret
jnp
je
or
mov
sub
or
sahf
or
out
dec
bound
mov
sbb
ss
scas
addr16
and
inc
sub
repnz
test
jno
jb
add
loope
movs
lahf
push
test
push
xor
mov
enter
repz
js
cdq
mov
mov
inc
ds
movntps
adc
in
adc
cmp
mov
mov
adc
pop
sub
add
add
sub
dec
adc
daa
sub
out
sbb
out
push
pop
mov
mov
fld
cld
or
(bad)
jecxz
jno
pop
(bad)
cmps
clc
shr
jmp
xor
mov
and
dec
mov
popf
xchg
stc
arpl
pushf
mov
xchg
aam
xchg
outs
xchg
pop
clc
jbe
sbb
or
xor
test
(bad)
jo
call
scas
shr
in
xchg
xchg
int
adc
gs
or
xchg
dec
test
ret
imul
adc
sub
add
je
mov
jmp
or
out
mov
mov
adc
lock
jmp
int3
add
push
mov
iret
test
jmp
out
adc
movs
pop
push
clc
(bad)
das
jnp
sub
add
mov
bsr
jl
xchg
push
and
mov
push
cld
iret
iret
pop
pop
push
or
sbb
pop
mov
cmp
sbb
dec
dec
imul
retf
mov
movs
pop
add
mov
(bad)
fbld
shl
xchg
mov
xchg
sbb
aaa
in
and
pop
push
adc
(bad)
pop
ins
test
push
sub
scas
push
xor
out
out
movs
dec
imul
xchg
push
mov
jle
or
mov
arpl
es
shl
aad
xchg
push
fistp
push
std
repnz
aad
inc
and
fsubr
sbb
imul
loopne
xchg
popa
cmps
push
int3
(bad)
add
(bad)
cwde
push
xor
add
mov
inc
fmul
jne
call
and
imul
sbb
dec
test
mov
mov
mov
jg
ins
inc
sti
sysret
push
(bad)
mov
repz
clc
sbb
or
push
jecxz
mov
mov
push
sahf
or
stos
(bad)
sahf
(bad)
sub
call
int3
mov
mov
sahf
stos
mov
bound
dec
pop
push
stos
xchg
ss
add
mov
ds
mov
jo
aam
mov
inc
cmp
mov
scas
out
push
out
xor
or
sbb
mov
sahf
loopne
xlat
mov
mov
icebp
pop
and
inc
(bad)
cmp
sub
data16
nop
jecxz
ins
jle
leave
(bad)
clc
mov
clc
and
es
adc
aas
clc
and
mov
adc
jle
push
fld
push
xor
test
mov
adc
mov
sub
xchg
mov
inc
cs
(bad)
sbb
xchg
and
sbb
scas
cmc
jnp
push
mov
mul
pushf
popf
cmp
sbb
mov
nop
sub
and
push
add
sbb
fsubr
movs
dec
push
js
fdivr
jbe
push
sbb
nop
pusha
mov
sbb
xor
sub
lahf
ss
xor
loope
mov
adc
scas
into
pushf
fsub
imul
dec
(bad)
dec
sub
jecxz
test
lock
xor
lods
dec
push
mov
push
sbb
or
inc
mov
outs
sbb
and
jl
pop
out
mov
push
fild
pop
(bad)
pusha
cs
cmp
out
mov
jge
cwde
sahf
retf
mov
and
jl
mov
jge
dec
shl
shl
push
adc
(bad)
or
fild
scas
mov
hlt
and
das
push
mov
cmp
add
ins
dec
into
xlat
push
or
mov
outs
xchg
out
ret
aad
movs
cdq
outs
icebp
push
sub
(bad)
cld
jne
mov
loope
(bad)
into
clc
xor
adc
add
mov
adc
ja
sub
sub
(bad)
mov
sbb
mov
out
push
sbb
push
(bad)
js
jmp
rcl
test
dec
aas
pop
sub
cmp
rcl
lahf
lea
in
mov
adc
test
stos
sahf
fs
dec
loop
mov
fld
retf
adc
out
bound
adc
enter
pop
jnp
and
push
pop
xchg
les
in
or
pop
mov
cmp
jge
dec
out
jmp
add
mov
mov
je
mov
in
test
or
xchg
(bad)
out
dec
adc
xchg
je
addr16
call
jns
jo
outs
mov
sbb
pop
shr
add
ins
xchg
out
cmp
jecxz
shr
js
adc
ds
and
mov
fsubr
sti
sbb
leave
mov
adc
jecxz
imul
push
es
clc
aas
shl
push
retf
pop
pop
xor
push
and
leave
cdq
fdiv
push
cmp
aad
repz
not
xor
dec
arpl
aam
ret
add
mov
jmp
mov
mov
repz
push
and
jle
cmp
jmp
and
jge
popf
aaa
jecxz
jle
mov
mov
in
pop
and
xchg
mov
cmc
(bad)
aas
add
movs
imul
nop
mov
xor
(bad)
fadd
jne
jno
test
inc
cmp
jmp
loop
pop
jp
leave
ror
scas
rol
jbe
(bad)
sub
and
xchg
ret
in
aam
cmp
sbb
jne
imul
sbb
mov
fadd
add
clc
fcom
jl
imul
sbb
mov
jno
or
int3
add
push
stc
clc
mov
int
repz
loope
repz
jae
fild
inc
mov
xor
xor
push
mov
push
xchg
push
xor
mov
aad
mov
and
pusha
dec
cmps
mov
loope
cmp
dec
(bad)
nop
push
aaa
and
cmps
sbb
fldenv
fsub
add
inc
loop
sub
push
xlat
jle
sub
loopne
loop
sub
movs
mov
sahf
mov
fst
loop
xchg
jp
je
scas
cmp
cs
xchg
rcl
mov
daa
or
call
cmp
pop
push
icebp
push
fisub
dec
test
cmps
rcr
dec
xlat
sar
jl
call
test
inc
mov
sbb
aas
aas
inc
add
add
sub
pop
xchg
pop
idiv
std
popa
push
or
iret
out
xor
sbb
enter
lods
cmps
add
xchg
inc
fdivr
push
add
(bad)
jnp
dec
pop
sub
mov
jns
mov
in
test
jns
push
daa
jmp
out
(bad)
fld
test
test
or
adc
loop
and
push
fidivr
sti
in
loopne
mov
inc
inc
and
push
pushf
std
fs
jle
sbb
push
dec
in
mov
cmp
or
retf
or
mov
adc
mov
pop
sbb
leave
bound
mov
push
ja
push
or
inc
and
jnp
sbb
and
out
adc
xchg
mov
and
push
out
cmp
cwde
add
ror
mov
adc
sti
cmc
scas
out
iret
inc
pop
add
hlt
movsx
mov
loopne
pusha
mov
jmp
push
das
fldcw
ins
xor
out
dec
mov
inc
mov
xchg
jne
mov
mov
sub
jle
cdq
retf
pop
cmp
xor
pushf
adc
pusha
push
dec
in
stos
fistp
pop
js
mov
test
push
dec
loopne
rcr
(bad)
(bad)
cmps
mov
stos
lahf
test
arpl
xor
cmp
sub
mov
ror
addr16
ins
jge
or
arpl
jns
or
jp
(bad)
aaa
add
pop
sahf
into
pmullw
std
sbb
pop
pop
sbb
jecxz
and
lods
adc
loopne
mov
and
or
lds
icebp
adc
cmp
or
(bad)
push
int3
call
mov
cmp
inc
pop
popa
outs
dec
and
mov
test
jg
jmp
dec
inc
movs
mov
pop
mov
inc
or
fistp
mov
xor
sub
pushf
(bad)
and
push
ja
es
sub
lods
fld
pop
jno
push
xor
repnz
out
ror
das
inc
repz
js
xchg
mov
int3
movs
or
inc
aam
pushf
push
test
(bad)
iret
cmp
(bad)
and
and
in
stc
call
outs
bnd
jb
sub
xchg
(bad)
mov
mov
mov
add
sub
sar
mov
pusha
sahf
mov
call
pop
stos
jecxz
imul
fsub
jmp
daa
mov
mov
sbb
outs
jmp
(bad)
jecxz
(bad)
fadd
mov
mov
adc
cmps
ds
mov
cmps
aad
fs
mov
sti
fwait
jg
mov
sbb
mov
pop
inc
xlat
outs
pusha
jns
add
rol
lea
rcr
imul
loopne
dec
mov
aad
sbb
jmp
mov
popf
mov
bound
js
(bad)
fcom
mov
adc
icebp
jle
sbb
mov
sub
push
mov
pop
sub
adc
inc
xchg
or
retf
cmp
rol
push
adc
dec
mov
in
add
sbb
jbe
loopne
sti
sub
cmps
or
(bad)
test
push
mov
xor
pop
fld
pop
iret
loop
pop
arpl
fcomp
mov
push
push
(bad)
loope
mov
cmc
sar
into
sbb
jmp
sub
push
sub
outs
sub
jne
sub
pop
adc
push
cmp
pop
mov
adc
hlt
dec
pusha
mul
mov
jmp
retf
xor
and
jmp
inc
retf
mov
push
test
sub
dec
and
pop
xor
and
sub
add
ds
rcr
dec
push
cwde
adc
dec
in
or
call
loop
lds
or
sub
je
es
les
cmp
or
dec
in
stc
inc
jmp
inc
xchg
stc
loopne
in
in
sbb
jns
mov
pop
neg
push
xor
sti
adc
adc
rcr
int
xchg
fidivr
in
daa
inc
out
sbb
ret
loop
cmp
xor
lock
xchg
mov
dec
jbe
or
fidivr
data16
inc
jnp
adc
fcom
ret
mov
mov
jbe
push
mov
and
inc
inc
pop
add
aas
sub
push
adc
sar
into
jae
stos
xchg
lahf
popf
mov
sti
and
mov
sti
pop
push
dec
cmps
inc
imul
inc
popa
leave
jae
adc
(bad)
sub
xchg
lods
mov
inc
xor
in
fcomp
mov
jl
outs
sbb
popa
pop
gs
out
or
mov
out
bound
fwait
jge
xor
adc
cli
add
arpl
mov
inc
aas
mov
enter
sub
jb
das
aas
cmp
mov
mov
mov
adc
pop
outs
jae
retf
cmp
outs
jbe
jne
pop
loope
xchg
cdq
out
ja
fdiv
inc
lock
pop
or
bound
pusha
mov
and
ins
fisttp
adc
lods
clc
push
jl
sbb
sub
jnp
addr16
lods
add
mov
test
mov
jge
or
mov
out
mov
repz
int3
lods
xchg
or
push
enter
iret
in
and
sti
pop
add
sub
test
xchg
shr
ins
daa
cli
push
lock
clc
xor
addr16
cwde
cld
lahf
rcl
and
sub
mov
cli
fisttp
mov
add
inc
imul
data16
movs
sbb
fs
icebp
jge
mov
cmps
pop
jg
movs
in
(bad)
ror
sub
adc
push
xor
fidivr
loop
inc
test
mov
fstp
ins
(bad)
ins
adc
add
inc
or
inc
pop
and
push
fild
ret
mov
push
in
out
pop
and
bound
rol
cmp
rcr
mov
ror
jg
daa
ja
pushf
nop
jecxz
jge
(bad)
enter
sbb
mov
inc
add
or
jmp
fld
push
xor
aad
int3
push
mov
aam
mov
fs
es
jb
mov
scas
in
push
xchg
mov
retf
shl
fnstsw
dec
push
cs
sbb
out
mov
loope
mov
in
pushf
push
stc
or
clc
rol
cmp
(bad)
loope
sub
xlat
sub
cwde
sti
mov
mov
pop
xor
fwait
and
xchg
xlat
and
push
sti
retf
add
mov
mov
ins
mov
push
pop
mov
jecxz
mov
sub
pop
mov
push
into
call
push
aas
(bad)
movs
or
aad
std
sub
mov
ficom
ja
ror
loopne
fwait
cmc
sbb
mov
xor
jp
shl
cli
push
std
jmp
shl
adc
ja
xchg
test
add
loope
pop
aam
dec
dec
push
sahf
ror
ror
xchg
xor
fld
jg
mov
adc
popa
push
loope
dec
out
mov
and
aaa
outs
popa
cmps
push
pop
xlat
in
lds
add
sbb
rcl
push
jg
loopne
stos
add
mov
jno
mov
sbb
arpl
data16
shl
mov
ficom
adc
nop
fwait
pop
aam
ds
dec
xlat
jg
inc
xchg
jmp
add
lea
sub
mov
fnstenv
dec
sti
adc
mov
je
repz
sub
and
loopne
inc
jl
bound
xor
je
test
sub
ret
repz
inc
xlat
pop
ss
pop
rcl
add
push
data16
add
dec
jl
cmp
outs
lea
stc
and
fwait
mov
loope
mov
cli
or
push
sar
or
cmp
lds
inc
sbb
mov
dec
leave
inc
mov
jmp
outs
cmp
loope
shl
mov
shl
cmp
repnz
cmp
inc
sub
das
push
xlat
out
mov
add
sub
xchg
sar
call
out
or
dec
and
sbb
cmp
xchg
repz
pusha
into
xor
xor
xchg
fld
int
stc
loop
push
jge
hlt
stc
cwde
lods
(bad)
aas
in
pop
dec
mov
push
mov
jge
adc
push
and
mov
push
pop
and
pop
pusha
push
(bad)
dec
ficom
mov
and
xor
daa
sub
(bad)
mov
retf
jo
mov
xor
or
into
dec
repnz
lods
popf
mov
push
dec
rol
lods
scas
pop
in
cmp
bound
cdq
push
and
js
inc
out
mov
sbb
xor
sbb
cmp
fdiv
outs
pop
or
fild
mov
pop
jne
mov
stos
mov
fcomp
lea
jae
sub
inc
mov
ins
(bad)
lds
fisttp
pop
(bad)
dec
jae
pop
push
add
js
mov
sahf
and
dec
iret
mov
popa
push
or
push
shr
(bad)
mov
jg
outs
xor
ja
out
cli
clc
lds
aas
fwait
movs
loope
jnp
sbb
shl
add
or
int3
xchg
test
mov
inc
push
dec
js
sub
push
cli
in
mov
cmp
mov
loopne
adc
mov
push
sbb
lahf
or
out
sbb
(bad)
ins
out
jnp
cld
std
inc
dec
xor
fisttp
adc
jge
xor
push
call
add
ins
inc
add
call
fild
or
and
or
inc
jae
ss
leave
jl
mov
out
fcom
push
jl
push
mov
call
enter
add
je
stos
(bad)
in
add
sbb
push
stc
mov
and
add
loope
mov
xchg
ja
arpl
int
jo
xchg
dec
mov
inc
add
xor
(bad)
fisttp
jmp
sbb
and
xor
or
push
popf
push
push
and
pop
xchg
rcl
fucom
jg
push
inc
pushf
ja
aad
retf
sbb
(bad)
xchg
paddq
movs
retf
pop
rcl
addr16
or
mov
mov
inc
test
jge
outs
or
mov
sub
push
js
cdq
popaw
push
imul
xor
lahf
mov
sbb
inc
jl
jp
scas
xor
les
popa
dec
out
out
cwde
test
data16
push
jae
nop
jo
cmp
aas
pop
mov
dec
push
mov
inc
outs
lods
cmc
ss
add
jecxz
cs
les
jae
lods
(bad)
xchg
(bad)
push
xchg
dec
dec
mov
aaa
pop
les
and
push
sub
xor
add
outs
aad
frstpm(287
sbb
std
gs
jno
mov
or
loope
xchg
and
pop
enter
outs
test
mov
hlt
push
sar
leave
ins
xchg
mov
pop
sub
jno
js
xchg
mov
mov
push
aaa
push
lock
cmp
add
xchg
dec
imul
dec
mov
mov
out
(bad)
dec
mov
jb
mov
cmp
adc
adc
lock
jmp
(bad)
or
dec
push
jae
xchg
cmp
mov
and
or
or
div
es
inc
inc
mov
movs
and
lock
loopne
push
ds
or
(bad)
and
mov
(bad)
and
sbb
fs
lahf
movs
mov
mov
dec
sbb
xor
mov
mov
mov
mov
aaa
idiv
xchg
retf
mov
(bad)
push
mov
adc
mov
outs
dec
mov
jae
push
xor
jae
mov
shr
mov
add
and
add
xchg
data16
or
dec
mov
je
xor
stos
or
call
scas
gs
int3
fisub
movs
pop
or
lock
inc
ret
mov
cwde
sbb
jmp
jp
loope
popa
and
xchg
jg
add
dec
sub
dec
test
push
out
jo
nop
call
jb
dec
mov
mov
sahf
call
pusha
enter
aaa
add
repz
inc
adc
cmp
mov
pop
fisub
jne
je
lods
mov
out
je
not
call
sub
push
cmp
out
inc
ins
inc
mov
repnz
ins
cmp
je
mov
mov
out
add
ss
jns
and
jge
retf
imul
dec
add
adc
sub
lahf
lds
push
add
sahf
cmp
push
outs
test
fstp
xchg
adc
daa
cld
sub
das
inc
aam
(bad)
pop
push
jo
pop
or
pop
aad
jp
push
cmps
xor
push
cmp
xchg
inc
loopne
int3
push
pusha
add
(bad)
das
ret
ins
jg
dec
push
mov
ror
xor
and
ins
dec
xchg
mov
mov
dec
or
sub
sbb
sbb
lds
(bad)
mov
outs
dec
push
cmp
mov
xor
xchg
out
and
push
into
int
(bad)
pop
call
lahf
aaa
mov
mov
xchg
mov
cmps
pop
sar
sbb
cmp
push
or
jmp
inc
mov
mov
pop
(bad)
sti
fldcw
clc
push
cdq
sub
lea
sub
xor
mov
xchg
ficomp
shl
pop
adc
jbe
adc
(bad)
shr
mov
nop
jae
xor
push
scas
add
mov
test
sti
pop
stos
sub
dec
ret
inc
cmp
inc
mov
gs
imul
mov
mov
test
fst
cmp
ret
cmp
jecxz
imul
pop
pop
ins
push
mov
into
jle
jns
dec
les
es
push
clc
pop
xor
jno
cs
and
xor
push
and
pop
push
mov
popa
xchg
cmp
(bad)
adc
iret
aaa
push
pop
ror
xchg
inc
xor
sub
add
or
dec
mov
mov
dec
test
fst
ins
mov
dec
fs
add
xor
mov
aad
pop
mov
ja
js
std
mov
pop
pop
shr
(bad)
adc
ds
mov
push
jp
dec
movs
jns
bound
out
xchg
into
push
in
fdiv
mov
sbb
jle
cmps
mov
pop
stc
push
and
jbe
lods
xchg
jno
cli
cmp
cmp
shl
jbe
dec
shr
gs
sub
xor
test
adc
dec
dec
loop
in
(bad)
xchg
dec
push
mov
sbb
or
or
ror
push
test
(bad)
nop
inc
call
sub
(bad)
fdivp
xchg
mov
std
sti
test
mov
aad
add
ins
mov
sub
pop
fs
jg
mov
cmps
push
dec
fdiv
popa
and
jnp
xchg
sar
ror
or
fdiv
imul
or
inc
mov
dec
jecxz
retf
adc
or
aaa
xlat
push
push
jge
pop
mov
ss
jno
mov
dec
retf
lods
aaa
retf
pop
call
xor
scas
add
mov
hlt
cdq
push
or
add
mov
add
mov
pop
push
out
mov
or
cli
or
mov
cwde
enter
movs
mov
bound
pop
mov
inc
sbb
fdivp
adc
or
sub
(bad)
fcomi
out
xor
test
dec
or
xor
bound
cmp
outs
stos
loope
xchg
imul
(bad)
fild
mov
mov
je
adc
mov
dec
mov
pushf
out
mov
mov
fcomip
or
cmp
fsubr
xor
adc
lahf
and
fwait
cmc
ficomp
adc
mov
test
ror
dec
out
or
jl
mov
inc
ss
jb
adc
lds
(bad)
cld
out
dec
pop
mov
out
out
inc
(bad)
es
pop
adc
adc
mov
jmp
sbb
sub
jbe
(bad)
mov
and
pop
(bad)
imul
mov
push
pusha
and
mov
(bad)
aas
shl
jbe
cmp
movs
call
repz
sbb
(bad)
mov
into
mov
sub
cmp
scas
scas
sub
adc
jmp
inc
inc
jp
adc
push
movs
push
(bad)
aad
outs
aad
sbb
test
sbb
xchg
fsubr
ds
adc
and
nop
jae
stc
(bad)
nop
ret
mov
and
or
push
and
inc
or
pusha
sbb
arpl
hlt
call
call
inc
and
in
cwde
cmp
mov
lock
lea
mov
cmp
pop
or
adc
add
lahf
mov
mov
cmps
fs
sbb
mov
mov
dec
push
mov
sbb
mov
ins
xlat
pop
mov
lahf
into
lds
in
out
cli
push
cs
lods
mov
sub
jmp
in
pusha
ins
xchg
js
fbld
call
dec
xor
aam
cmp
aas
pop
and
adc
aam
add
jmp
loop
(bad)
out
ret
cld
fstp
(bad)
popa
or
loopne
or
mov
xchg
ins
mov
or
adc
int3
ret
inc
adc
jle
adc
add
jne
jl
or
jnp
jno
jecxz
add
and
fnstenv
mov
mov
sbb
fsub
push
push
int
sub
test
cmp
jae
ja
clc
sub
cli
out
or
cdq
ins
inc
ds
rol
cmp
sub
cld
inc
adc
sub
add
mov
or
jmp
or
mov
and
in
push
out
pop
jae
call
idiv
outs
jecxz
sub
in
sbb
fdivr
add
popa
repnz
sti
cmp
push
push
mov
add
pusha
mov
shl
add
lds
sub
test
jmp
loop
loopne
cmp
mul
inc
mov
inc
mov
enter
int3
and
mov
test
scas
xchg
icebp
aaa
nop
lods
sbb
sbb
jmp
pushf
fimul
js
(bad)
std
mov
and
jo
jmp
xor
add
xchg
fdiv
iret
mov
sbb
mov
imul
push
fdiv
add
in
pusha
(bad)
pop
jnp
das
cmp
or
jp
shl
je
lea
call
fdivr
mov
inc
push
jecxz
retf
xor
mov
into
push
jge
mov
jmp
loope
aaa
imul
ss
cmps
aas
dec
cvtpi2ps
fisttp
imul
dec
test
xor
sub
inc
sub
pushf
pop
inc
clc
add
mov
cmc
sti
es
mov
(bad)
sub
dec
xor
lock
loop
inc
xor
lods
(bad)
ds
xchg
jnp
loopne
mov
jle
stc
sti
add
pop
call
pusha
add
rcr
lds
stc
and
cmps
test
inc
ror
aaa
scas
stos
test
push
xchg
lods
out
push
movs
mov
arpl
xchg
mov
xor
jmp
repnz
je
xor
adc
loopne
stc
test
aam
imul
dec
into
xchg
mov
xor
pop
xlat
dec
pop
pop
lods
test
cmp
adc
mov
mov
inc
js
jg
in
in
push
ins
into
mov
xor
add
gs
(bad)
push
not
sub
sbb
mov
loop
pop
cld
cmp
hlt
or
sub
push
jge
cmc
inc
xor
loop
cld
add
hlt
pusha
es
push
xchg
or
fwait
inc
mov
push
mov
popf
push
jmp
fimul
repnz
in
push
sbb
(bad)
xchg
cdq
sbb
jns
rol
inc
push
(bad)
sbb
xchg
mov
es
imul
add
int3
clc
fild
dec
aad
ja
call
pop
dec
xchg
in
xchg
xchg
inc
pop
ds
or
mov
mov
out
lods
fs
ins
mov
lea
and
mov
sbb
jmp
jae
leave
shr
pop
mov
arpl
fcomp
lods
mov
movs
fs
add
sbb
mov
in
fistp
std
das
adc
add
dec
inc
xor
jb
ins
add
pop
mov
xor
stc
dec
(bad)
retf
ficom
inc
aas
in
stos
lock
lahf
xor
and
add
(bad)
in
int3
scas
xor
mov
inc
xlat
cmp
(bad)
test
enter
mov
ins
(bad)
mov
adc
(bad)
shr
shl
shl
leave
(bad)
sub
stc
jb
lea
mov
and
and
leave
jo
lods
mov
mov
dec
icebp
pop
repz
das
add
in
cmps
icebp
or
mov
aad
mov
mul
dec
mov
push
add
imul
push
pop
stos
cmp
loope
loopne
jne
push
mov
lods
mov
shl
jae
and
cmp
jbe
dec
jp
lods
pop
inc
or
jl
ins
fdivr
loop
push
xchg
ja
mov
mov
pop
hlt
cmps
jno
lock
ins
mov
ret
outs
inc
or
mov
cs
jne
xlat
pop
lea
xchg
mov
pushf
jge
jo
shl
fst
sbb
mov
call
mov
mov
(bad)
xor
pop
aaa
cmp
jb
stc
xor
push
jle
pop
pusha
imul
dec
mov
sub
xor
xor
xor
mov
popa
fistp
sub
mov
cs
out
xchg
cmp
xor
cs
sub
je
push
xor
in
ret
add
push
adc
lock
dec
dec
mov
cmc
inc
mov
add
jae
add
(bad)
push
(bad)
rol
sub
shr
test
outs
int3
and
push
call
shl
pop
nop
sub
out
outs
mov
mov
aam
dec
mov
je
aam
dec
adc
cmps
sbb
fwait
scas
es
mov
cmp
test
out
xor
(bad)
pop
out
add
xchg
daa
in
out
sub
xor
icebp
jae
scas
mov
hlt
stos
push
mov
add
pop
inc
mov
ja
and
or
add
iret
fisttp
in
push
pop
pop
fstp
push
sti
jg
sti
ds
scas
test
inc
aam
or
mov
stos
test
lods
hlt
stos
jge
hlt
adc
rcl
sar
jnp
cmp
or
sar
and
mov
ds
jp
mov
mov
sub
dec
call
neg
jmp
shr
jnp
jmp
nop
mov
loope
les
jle
cmp
pop
push
sbb
mov
in
mov
xor
daa
xor
mov
add
pop
adc
cwde
mov
adc
icebp
push
xchg
repnz
xchg
dec
xor
push
leave
push
inc
jle
inc
and
inc
mov
cmp
shr
ins
push
ss
push
stos
or
push
ss
inc
vprotd
cmp
stos
cmc
jg
lea
test
pushf
mov
(bad)
xor
popa
ja
in
push
retf
hlt
out
das
dec
pop
retf
stc
les
dec
iret
jecxz
outs
cli
(bad)
arpl
jmp
cmp
lods
or
inc
jo
jb
outs
ret
idiv
pop
cmp
pop
(bad)
in
cwde
or
not
in
jae
out
sub
test
loopne
inc
aad
in
popa
fs
push
aam
and
pop
jno
adc
repnz
add
ror
cli
imul
add
push
cmps
push
sbb
dec
adc
movs
clc
in
and
sbb
push
movs
adc
bswap
pop
js
retf
mov
test
sahf
sub
pushf
lds
xchg
or
gs
xchg
ss
(bad)
dec
inc
fld
popa
sub
cmp
cmp
pop
int
rcr
push
jmp
sti
movs
adc
or
sub
or
mov
push
outs
sbb
(bad)
cli
and
jno
aas
pusha
mov
js
inc
dec
idiv
les
and
rol
es
mov
adc
arpl
rcr
stos
mov
push
sbb
ret
rol
push
js
lea
mov
shl
retf
outs
in
push
call
test
xor
jb
pushf
or
sbb
cmp
mov
and
outs
push
imul
in
(bad)
jo
xchg
(bad)
and
loope
shr
inc
sar
inc
mov
fs
jne
adc
out
push
and
or
mov
aam
mov
mov
scas
cs
retf
mov
jmp
ds
call
cmp
pop
pshufw
jmp
mov
lock
jae
xor
lea
out
cmp
out
xor
retf
into
push
add
xor
mov
xor
aas
mov
jmp
ins
sahf
test
gs
clc
add
sar
(bad)
imul
mov
mov
ficomp
test
and
sub
dec
push
je
pop
sub
mov
sub
js
loop
and
mov
jecxz
sub
(bad)
scas
je
xchg
mov
movs
sbb
dec
jno
das
jmp
shl
pop
lea
popf
imul
adc
sub
outs
daa
hlt
pop
push
or
or
cli
push
adc
pop
fcos
push
in
mov
fwait
shl
test
and
and
(bad)
pop
mov
mov
sahf
pop
dec
push
ret
add
push
mov
add
sahf
push
pop
add
xor
sbb
test
sub
(bad)
mov
adc
adc
inc
mov
loope
pop
xchg
ret
(bad)
loope
xor
dec
dec
fwait
in
shl
cmp
jo
fs
push
pop
pop
jnp
pusha
jp
(bad)
cmp
and
push
cli
sbb
mov
mov
dec
rcl
pop
ds
repz
pop
xchg
call
daa
fadd
addr16
jmp
out
xchg
or
jne
and
mov
pop
jb
aaa
jbe
or
xor
add
pop
movs
push
(bad)
dec
dec
clc
dec
and
pop
add
sahf
(bad)
test
mov
aas
jmp
fidivr
jp
je
cmps
sar
push
bound
add
loope
sbb
push
aaa
movs
jecxz
sub
cmc
shl
mov
jge
pop
sub
(bad)
mov
xor
dec
adc
mov
add
inc
cmp
mov
(bad)
test
shl
ret
mov
out
rcl
inc
jmp
cmp
in
add
aas
or
cdq
mov
push
pop
pusha
push
and
xchg
ret
push
fsub
aad
into
lds
xor
das
jbe
sbb
push
cld
mov
or
dec
pop
fdivr
stos
and
push
repz
sbb
push
fadd
xlat
mov
mov
and
xchg
sahf
mov
inc
jmp
sbb
mov
cli
cmp
pcmpgtd
inc
sbb
mov
mov
dec
ss
imul
call
arpl
cmps
imul
or
cmp
add
jnp
test
cmp
dec
hlt
cmp
sub
hlt
jl
push
daa
loop
cmp
jno
mov
aad
ins
pop
jecxz
neg
stos
fistp
push
add
mov
sbb
mov
mov
or
cdq
ins
int3
imul
out
pop
jle
loopne
in
adc
xor
mov
es
sub
xor
scas
adc
dec
cli
data16
retf
pop
movs
adc
xor
or
xlat
cwde
pop
sbb
arpl
ins
jmp
lods
mov
dec
or
daa
mov
push
fldenv
mov
arpl
push
pop
push
lahf
js
dec
jg
inc
or
cmps
(bad)
loopne
lea
dec
into
sub
lock
pop
mov
lock
fld
push
push
(bad)
sar
daa
jns
push
call
and
fimul
fidivr
xchg
adc
jmp
mov
push
sub
adc
sub
rcl
fcmovu
inc
cmp
cmp
push
dec
cmps
iret
scas
cmp
sub
or
jge
sub
jg
rcr
fsub
inc
loopne
ins
mov
fimul
das
fcomp
pop
inc
push
rcl
mov
dec
cmps
ret
mov
fdivr
xchg
mov
xchg
ror
dec
add
mov
mov
repnz
sar
push
dec
jae
mov
dec
fcmovne
dec
aad
mov
lods
xchg
adc
xchg
mov
and
add
dec
add
das
enter
sbb
mov
mov
sub
leave
adc
cli
nop
lahf
pop
shl
das
add
retf
push
pop
push
push
xchg
cmp
ins
imul
fsubr
mov
jle
jp
(bad)
mov
sub
or
and
pop
xor
sub
xor
cmp
mov
popa
or
fisub
retf
movs
push
pop
xchg
gs
dec
adc
pop
pop
jne
fmul
add
mov
jae
cmp
cdq
test
stos
dec
loope
lea
jmp
les
int
cmps
test
jnp
xchg
cli
int3
pop
inc
enter
in
sub
mov
or
mov
push
mov
mov
test
adc
movs
jle
inc
push
imul
pop
movs
jno
icebp
ds
retf
jbe
sbb
cwde
mov
push
push
mov
or
and
or
jg
and
push
inc
nop
loop
outs
addr16
test
xchg
outs
fst
out
adc
xor
add
enter
cmc
add
cmp
retf
add
adc
push
inc
sbb
clc
mov
and
ret
dec
loope
xchg
sar
in
loop
mov
and
enter
mov
xchg
retf
pushf
push
not
mov
cmps
(bad)
push
pop
iret
xor
mov
mov
mov
mov
push
shr
sbb
iret
es
ja
out
xor
in
lock
jne
out
push
sbb
std
mov
loop
inc
xchg
fcomp
push
call
jae
out
mov
pop
enter
hlt
mov
lds
mov
adc
adc
rcl
addr16
(bad)
mov
mov
mov
in
and
xor
inc
or
(bad)
pop
mov
loopne
shl
jl
rcr
mov
jmp
or
add
mov
cmp
adc
into
fidiv
mov
or
sub
mov
sub
xchg
cmp
xchg
sbb
mov
scas
imul
jae
mov
gs
aaa
pusha
adc
mov
fdivr
inc
adc
inc
loope
sbb
inc
lds
adc
push
cwde
out
stos
pop
sbb
mov
aaa
into
mov
inc
push
or
xor
dec
sbb
nop
mov
mov
test
adc
out
add
push
popf
pop
ret
fiadd
stc
inc
addr16
js
inc
jge
test
lahf
or
cli
fimul
neg
sbb
(bad)
aam
fdivr
push
push
minps
clc
rcr
sbb
fwait
icebp
add
lahf
ins
(bad)
lock
xchg
add
mov
pop
pop
ja
popa
int
jb
movs
mov
lods
mov
mov
inc
ja
out
(bad)
shl
mov
inc
jmp
mov
repz
push
adc
inc
sbb
lahf
mov
push
add
pop
xor
(bad)
aaa
jmp
stc
js
adc
cs
loopne
cdq
sahf
xlat
and
int
popa
retf
jmp
push
xor
jae
sub
lods
test
sbb
cmp
xchg
dec
stos
data16
sbb
mov
(bad)
outs
pop
inc
jmp
test
push
mov
mov
xchg
jb
xor
fist
xrelease
xchg
pop
enter
(bad)
mov
fs
jno
push
mov
jmp
ror
mov
inc
add
push
jge
mov
into
fisttp
jl
sbb
in
or
pop
hlt
pusha
(bad)
dec
mov
mov
sti
sub
(bad)
(bad)
aas
icebp
mov
lahf
inc
mov
fbld
fnsetpm(287
jecxz
fstp
xchg
aas
fdivr
mov
repz
push
and
sub
push
sbb
xchg
test
outs
dec
mov
dec
sub
ret
je
cmps
mov
mov
push
adc
dec
out
outs
ror
dec
jge
jnp
lea
sti
in
jo
cdq
or
ret
add
add
sbb
cdq
add
mov
adc
inc
mov
xchg
getsec
(bad)
push
add
sub
cmps
mov
rcl
xchg
cmp
(bad)
mov
xor
jg
fmul
xor
movs
sbb
mov
outs
inc
shl
cmp
sbb
jg
adc
movs
inc
lds
mov
jl
ret
sbb
mov
xchg
jmp
das
fdivr
dec
shl
stos
or
aam
pop
jns
push
arpl
cli
xchg
pop
jg
jbe
add
das
movs
cmps
fidiv
cmp
scas
mov
or
pop
mov
jo
fdivr
pop
and
stos
(bad)
cmp
xchg
push
mov
dec
aad
adc
dec
mov
out
xchg
xor
mov
pushf
pop
rcl
jge
mov
inc
add
and
sbb
push
mov
sahf
out
mov
mov
imul
mov
callw
pop
dec
mov
repnz
fcomp
fisub
xor
push
mov
int
scas
or
mov
fist
mov
cli
push
daa
push
enter
arpl
adc
rcl
aam
mov
adc
jb
cmp
repnz
adc
sub
xchg
add
rcr
lods
jp
fcomp
jmp
shr
jmp
mov
sbb
push
je
aaa
pop
push
mov
jae
aam
fidiv
imul
ret
stos
clc
ja
scas
xchg
fld
adc
jmp
enter
xlat
icebp
add
ss
jbe
jmp
mov
popf
mov
test
cdq
imul
push
add
ss
dec
movs
div
sbb
not
jg
jl
inc
sbb
adc
push
pop
shl
(bad)
cmc
stos
inc
popf
mov
jmp
in
or
repz
and
es
adc
dec
mov
jns
push
sub
lods
clc
adc
rcl
(bad)
and
iret
das
cmps
push
adc
sbb
xchg
adc
fwait
pusha
jp
push
es
in
mov
mov
and
inc
scas
mov
xchg
sbb
mov
(bad)
frstor
int3
(bad)
cld
sbb
outs
mov
les
nop
fidivr
lahf
mov
pop
dec
or
pop
jb
and
or
mov
add
xchg
sub
xchg
test
popf
dec
hlt
add
push
out
mov
add
loopne
pop
fwait
jns
icebp
mov
fcmovnb
jne
pushf
add
gs
ret
mov
test
mov
xchg
add
sub
scas
mov
pop
es
mov
icebp
push
xchg
les
lea
cmc
fistp
xchg
xor
adc
push
retf
(bad)
setae
cmp
pop
push
out
das
(bad)
(bad)
xchg
sahf
arpl
pop
or
into
cmp
imul
stc
pop
mov
dec
mov
pop
(bad)
xchg
or
test
xchg
sub
adc
jnp
xchg
jb
sbb
stc
add
das
mov
lods
inc
enter
movsx
mov
push
inc
cmp
jecxz
add
fcom
popa
adc
fstp
sbb
sti
pop
stc
shr
push
sub
dec
loop
inc
mov
pop
pusha
mov
and
lea
xor
rcl
sahf
ja
xchg
add
aam
cmp
mov
(bad)
rol
sub
daa
xor
pop
call
pop
inc
test
xor
push
sub
in
ins
stos
xor
push
in
les
rcl
std
xor
iret
jbe
and
ficomp
xor
add
sub
and
mov
fidiv
ficom
xchg
cmps
(bad)
cwde
jle
mov
loope
xchg
xchg
adc
out
dec
ss
mov
loop
dec
jmp
sub
test
outs
into
push
jae
jmp
out
shr
add
popa
(bad)
ret
dec
lods
sub
into
adc
mov
sub
sub
cwde
out
sub
sbb
ret
stos
data16
mov
and
fdiv
inc
into
inc
xor
das
ret
ret
cdq
xchg
in
dec
pop
mov
and
jbe
xchg
cli
data16
cmp
stos
into
adc
pop
test
xchg
jns
das
push
mov
int3
iret
bound
lods
popa
js
in
ja
dec
and
pusha
jl
ret
ficomp
push
adc
cmc
jmp
cmp
mov
xor
push
(bad)
cld
cmps
aas
sbb
(bad)
inc
cmps
xchg
int
jmp
(bad)
out
lea
popa
or
sub
(bad)
mov
movs
je
jnp
sbb
(bad)
cmps
jg
mov
xchg
add
(bad)
sub
shl
outs
mov
icebp
adc
adc
xor
bound
push
mov
lods
(bad)
mov
push
dec
dec
xor
out
bound
test
xor
ins
xor
and
out
and
sar
push
mov
bound
mov
mov
rcl
jb
fsubr
xchg
mov
cmps
or
ret
(bad)
repz
movs
pop
xchg
add
pop
cmp
mov
add
xchg
daa
mov
iret
push
lds
sbb
jns
and
sub
(bad)
ds
js
xor
(bad)
mov
cli
dec
movs
pop
push
nop
je
test
shl
ret
mov
dec
sub
or
repz
test
cmc
sar
xchg
dec
fistp
cld
cmp
jecxz
jmp
popf
jmp
fbld
popf
jo
pop
adc
nop
out
test
xor
sahf
cmp
cs
cmp
push
or
pushf
fdivr
pop
div
lods
cli
les
ins
cs
jmp
aam
push
das
imul
pop
jge
mov
adc
inc
call
fdivr
popf
call
cmps
(bad)
push
dec
arpl
cmp
ins
inc
inc
push
xchg
jl
inc
lods
mov
cmc
xor
cmps
enter
mov
or
xor
repz
xor
xchg
and
aaa
and
out
push
loopne
ror
out
popa
adc
cmp
mov
leave
and
jbe
lods
mov
xchg
mov
sbb
popf
push
dec
jmp
sbb
mov
jle
cmps
mov
mov
mov
sub
push
scas
add
gs
mov
imul
or
leave
xchg
mov
and
and
aad
xchg
jae
pop
retf
jb
inc
fmul
jb
or
pop
mov
hlt
cmp
into
and
mov
pushf
mov
ficom
push
add
dec
dec
xor
sahf
sti
pushf
sbb
xchg
sbb
mov
imul
push
and
ret
pop
popf
mov
nop
mov
fstp
pop
retf
add
shr
pusha
out
ret
mov
and
pop
test
cmp
ret
add
add
pop
bound
inc
sahf
movs
xor
int
sub
daa
cmp
inc
jnp
cmp
das
mov
repnz
daa
jnp
clc
jns
pop
xchg
mov
mov
lahf
xor
test
or
xor
inc
xchg
ins
mov
nop
jbe
jg
mov
arpl
pop
mov
adc
lods
cmps
mov
push
push
pop
cwde
retf
sub
data16
sub
push
push
sub
mov
in
iret
sub
or
jb
inc
jge
sti
mov
stos
jne
cmp
scas
rol
pushf
mul
js
pop
sar
adc
mov
shl
dec
cmps
sub
pop
dec
xchg
outs
jne
ins
or
dec
push
pop
dec
mov
jecxz
add
mov
and
adc
stos
fdiv
int
and
inc
push
jg
int
lods
cmp
rcl
push
cmp
pop
dec
and
jnp
xchg
xchg
enter
shl
fsubr
push
mov
lods
cmp
sti
test
mov
add
das
add
mov
ret
sahf
mov
dec
add
cmps
out
cwde
out
jno
cld
inc
inc
in
xlat
rol
push
pop
pmulhw
and
mov
fs
imul
mov
test
fist
dec
push
dec
addr16
pusha
pop
in
sbb
retf
mov
sar
test
dec
scas
in
aad
jecxz
out
mov
sub
or
js
xor
push
xchg
ds
push
ins
std
icebp
add
or
movs
xor
xlat
in
mov
js
(bad)
xor
cmp
cmp
pop
mul
jmp
xchg
pop
retf
mov
cmp
dec
mov
pop
mov
icebp
outs
cmp
out
mov
imul
push
pop
ficomp
or
inc
lahf
adc
jne
xor
inc
cld
test
mov
jle
sbb
das
int3
sbb
mov
fwait
(bad)
lahf
stos
ds
inc
cmp
pop
fimul
repz
stos
mov
iret
inc
dec
scas
push
mov
or
mov
push
mov
cld
push
cmp
rol
clc
jb
inc
sti
sub
or
jbe
push
mov
js
and
xor
dec
push
mov
mov
add
xchg
cmp
inc
stos
push
jo
pusha
fs
rol
loopne
out
arpl
punpcklbw
push
test
das
inc
enter
push
fsubr
inc
add
sub
lea
mov
mov
inc
stos
fucom
add
mov
out
(bad)
mul
inc
ins
mov
jg
cmp
inc
sbb
hlt
inc
(bad)
retf
outs
adc
lods
sub
ds
and
dec
stos
call
jae
int
mov
pop
call
mov
fld
sbb
sbb
push
ins
inc
pop
adc
mov
imul
and
pop
xchg
das
inc
movs
pop
pop
pop
loopne
repnz
movs
inc
pop
out
mov
pop
inc
jge
ret
xor
data16
jbe
(bad)
pop
pushf
je
mov
mov
leave
pop
in
dec
(bad)
cmc
in
jbe
dec
adc
jns
dec
test
dec
cs
xchg
dec
push
mov
adc
cmp
pusha
inc
xor
pop
stc
(bad)
and
cmps
in
sub
lods
fsubr
push
mov
stc
sbb
stos
mov
into
outs
out
hlt
xor
mov
(bad)
push
scas
daa
pop
cdq
shl
lock
push
adc
call
je
jns
xor
mov
mov
call
xlat
loop
ins
sbb
inc
pop
shl
add
sbb
jmp
push
ins
xor
mov
push
inc
and
inc
inc
cli
pop
ds
mov
mov
js
jl
icebp
pop
mov
dec
test
push
push
cmp
cmps
loopne
pop
cmc
xor
jp
hlt
push
scas
in
lods
sub
dec
mov
lock
dec
call
dec
gs
aam
mov
stc
bound
outs
cmps
rcr
jae
cmc
jmp
adc
sbb
ss
pop
mov
(bad)
loopne
sub
cld
lds
jo
js
(bad)
into
repnz
xchg
add
sahf
xor
jnp
xchg
f2xm1
sub
inc
mov
rol
imul
cmps
sub
add
mov
and
scas
pushf
cwde
cmp
loopne
outs
adc
pop
cmp
icebp
cld
mov
inc
sahf
jl
ret
iret
in
nop
shl
jns
fs
shl
inc
xchg
xchg
mov
aam
(bad)
movs
cmps
jb
cmp
push
mov
adc
ffreep
adc
cmps
je
ret
pop
sbb
bound
call
inc
stc
xchg
nop
adc
xchg
lock
ficom
in
hlt
out
pop
aad
push
mov
imul
int
das
or
push
sahf
jno
loop
daa
mov
jns
dec
shl
xor
ss
jp
jnp
sahf
jno
mov
jge
cli
pop
js
jge
out
and
mov
add
xchg
aas
scas
or
sar
imul
fld
xlat
std
push
pop
cwde
fidivr
or
adc
push
lock
mov
and
push
dec
push
rcr
test
jae
rol
rcl
clc
call
scas
push
rcl
in
and
ret
ficomp
fadd
je
jmp
fwait
mov
test
push
rcl
jmp
int3
jmp
inc
stc
(bad)
jmp
(bad)
adc
ja
inc
aad
add
mul
xor
pop
pop
mov
xchg
xor
fmul
push
pop
push
sub
outs
(bad)
dec
rcl
sbb
ja
stos
xor
adc
fadd
push
inc
mov
push
ins
push
push
pop
xor
ins
ss
mov
sti
adc
cmp
mov
sub
add
xor
out
call
shl
mov
(bad)
mov
add
bnd
shl
hlt
in
xor
jecxz
push
sar
or
loope
jne
enter
pop
sbb
cmps
outs
or
pop
cmp
jae
xlat
(bad)
cmps
push
neg
fs
push
sbb
punpcklwd
in
add
(bad)
mov
iret
pop
pop
lock
or
(bad)
(bad)
cmps
cli
cmc
pushf
lods
add
(bad)
mov
xchg
vhsubps
or
jb
ret
sbb
mov
inc
lods
scas
arpl
retf
lahf
sub
add
inc
leave
xlat
int3
jae
xchg
and
mov
(bad)
dec
outs
dec
xor
dec
pop
outs
repnz
das
mov
rol
call
cmps
sbb
xor
fstp
sbb
adc
jmp
add
(bad)
jbe
loope
mov
jl
imul
sbb
(bad)
mov
into
movhps
add
test
mul
lds
mov
fwait
cld
xchg
cmp
retf
imul
pusha
pop
add
(bad)
neg
mov
fadd
scas
dec
clc
test
mov
cmp
pop
jns
pop
and
test
das
sbb
sbb
sbb
push
into
dec
ss
dec
fucomi
xor
sbb
shl
retf
xor
mov
push
aad
adc
stc
xchg
inc
pop
push
xchg
and
xlat
adc
mov
pop
add
jmp
test
fwait
push
mov
les
dec
les
push
mov
mov
sub
cmp
sub
clc
aas
cld
lods
mov
cwde
cwde
sbb
scas
mov
jl
test
inc
pop
(bad)
ins
xchg
int3
cmc
stc
lahf
mov
aad
imul
xchg
mov
test
inc
stos
jle
fs
pop
loop
inc
pop
and
sahf
xchg
sahf
mov
fild
push
mov
xor
jmp
sti
fwait
jbe
or
mov
pop
jge
mov
jp
cmp
dec
xor
into
push
mov
shl
mov
dec
fwait
or
mov
das
cmp
cmp
sbb
push
sbb
mov
or
xor
pop
fdivr
pushf
adc
xchg
xor
ja
mov
add
aas
xchg
dec
sub
cmp
xor
xchg
dec
mov
loope
inc
mov
sub
fsub
jno
jne
int
or
mov
call
cmp
lods
js
repnz
add
and
enter
test
mov
in
inc
dec
xchg
cmc
lahf
mov
mov
jecxz
ins
sti
bound
cmc
jb
xchg
in
xchg
xor
sbb
(bad)
mov
ins
je
test
(bad)
pop
jb
aad
push
sub
test
inc
(bad)
iret
sahf
add
arpl
mov
stos
bound
je
xor
jne
jno
iret
or
dec
lock
xchg
je
xchg
add
xchg
cdq
mov
inc
and
daa
dec
out
test
lods
mov
sub
ja
repz
ror
dec
pop
stos
imul
or
arpl
mov
and
out
pop
cs
pop
dec
dec
mov
push
pop
pop
mov
add
mov
repz
jmp
scas
js
cmp
(bad)
push
(bad)
and
jnp
mov
xchg
push
out
fs
sub
and
(bad)
(bad)
fcomi
jmp
call
add
pushf
and
repz
test
out
fcomp
pop
cwde
push
jle
add
xchg
and
sbb
scas
and
xor
rol
adc
out
bound
inc
push
xchg
mov
hlt
add
xchg
outs
dec
add
test
call
pop
xor
push
in
add
nop
or
pop
scas
stos
test
mov
xor
jmp
dec
mov
loop
mov
test
or
mov
pop
sub
movs
loope
cmp
cmp
fidiv
push
push
jae
dec
in
jae
cmp
pop
sbb
jcxz
sub
bound
pop
push
iret
mov
jo
jge
xor
imul
int3
push
(bad)
fwait
fs
nop
clc
stos
sub
cmp
add
push
imul
push
mov
jle
stos
pop
in
xlat
push
iret
mov
xchg
mov
adc
test
enter
scas
inc
mov
or
aas
outs
push
sub
adc
add
montmul
cmps
sar
xchg
cmp
fldcw
iret
mov
cmp
mov
cli
inc
hlt
push
adc
scas
dec
cmp
pop
add
jge
shl
js
dec
ror
cmp
jne
inc
dec
mov
sbb
ror
dec
out
jbe
jno
loopne
cmp
dec
out
push
pop
call
or
or
in
out
dec
cmp
neg
lea
inc
int3
fdiv
loopne
loopne
jmp
fucomip
fabs
cs
fdiv
inc
popa
pop
out
pop
pop
ins
outs
inc
pop
adc
mov
mov
mov
lea
inc
inc
je
enter
and
cli
pop
mov
lods
jae
mov
mov
push
gs
pushf
push
adc
inc
mov
outs
pop
ret
sub
ja
fistp
cmp
test
dec
sbb
cmp
cmp
fcmovnb
xor
push
jne
jle
push
mov
xor
les
call
push
aad
aad
dec
dec
scas
arpl
ja
ret
inc
retf
cmp
test
dec
ja
jno
test
push
mov
nop
or
(bad)
adc
jp
adc
jo
add
mov
and
xor
les
mov
stos
add
or
cli
sbb
push
ret
or
js
cwde
fnstenv
jns
retf
push
call
ror
dec
cdq
xor
out
jmp
sbb
sub
mov
retf
neg
cmp
loope
mov
pop
jge
mov
jno
jbe
mov
xchg
test
xor
loop
mov
or
int3
adc
xor
cli
sbb
cmp
aam
and
mov
cmp
push
cld
enter
mov
xor
test
loop
pusha
lahf
sbb
(bad)
add
test
jns
bound
ds
ret
sbb
in
xor
popa
pop
mov
push
sbb
push
retf
scas
enter
in
std
jp
adc
or
adc
lods
sahf
aam
cmps
or
fucom
push
dec
ds
xor
dec
fcom
je
ret
sbb
sbb
mov
loope
imul
fistp
mov
xlat
mov
je
loopne
(bad)
hlt
fidiv
push
test
mov
mov
repz
mov
mov
je
jge
imul
push
sar
xor
outs
jge
imul
jns
(bad)
std
daa
test
xchg
movs
cmps
adc
jl
ret
mov
movntps
loopne
enter
stc
mov
test
mov
(bad)
pop
fist
jmp
cmp
dec
popf
pusha
or
xor
aam
mov
jne
push
sti
dec
enter
out
pop
gs
xchg
xor
call
dec
sbb
or
push
(bad)
popa
cmps
push
lds
ret
ds
lea
xor
jmp
jecxz
jb
in
fwait
inc
js
and
cld
stos
and
inc
adc
push
adc
and
mov
xor
push
fsub
cs
scas
ds
push
jmp
or
dec
fs
aas
cld
ja
cmp
(bad)
or
sbb
movs
adc
shl
(bad)
jmp
(bad)
push
nop
test
add
push
jmp
fisub
(bad)
fsubrp
jno
adc
cmp
mov
stc
(bad)
dec
sub
call
mov
gs
pushf
sub
push
or
outs
shl
mov
dec
scas
dec
shl
add
sbb
jge
aad
pop
cmp
mul
leave
add
push
arpl
nop
sbb
cvtps2pd
int
pop
movs
and
and
clc
cs
imul
xor
push
adc
sahf
daa
xchg
sti
or
sti
xor
add
push
inc
dec
adc
sbb
inc
cs
jecxz
push
adc
fwait
repnz
push
shr
ret
out
or
not
xchg
(bad)
cmps
ret
popf
jmp
aam
sbb
mov
jecxz
jno
call
pop
ja
out
pop
jno
and
cwde
clc
and
push
xchg
fs
in
out
and
hlt
(bad)
bound
inc
push
and
jmp
sbb
adc
mov
rol
mov
jmp
or
add
ds
dec
(bad)
fucomp
push
or
jle
push
scas
fstp
rol
add
inc
pop
ficomp
ret
adc
dec
add
dec
inc
pop
mov
cmp
inc
push
cld
fbld
ss
in
fistp
mov
lods
lods
cld
dec
jo
jge
lahf
(bad)
(bad)
loopne
mov
ins
xor
sub
xchg
mov
cli
or
(bad)
adc
into
jne
lds
fidiv
push
and
or
inc
xchg
mov
daa
out
inc
shl
js
mov
pop
dec
neg
aaa
sbb
xchg
cmps
stc
jmp
dec
xor
push
cmp
fs
imul
mov
pop
xlat
push
jp
mov
xor
icebp
les
cmp
sub
xchg
sub
aaa
xor
mov
movs
aam
movs
inc
mov
outs
fxch
imul
or
sub
rcl
jle
and
sbb
in
fadd
iret
or
shl
gs
outs
fs
mov
ja
push
sbb
das
mov
std
das
mov
sub
and
enter
sar
and
pop
rol
sub
sub
cwde
pop
xchg
aas
(bad)
or
xor
pop
neg
shl
inc
test
mov
test
inc
aas
or
inc
adc
adc
xor
lods
cld
push
ror
dec
pop
sub
fst
mov
inc
psubb
sti
ficom
inc
jne
pop
mov
cmp
imul
rol
enter
rol
popf
or
or
lea
or
adc
fist
xor
xchg
mov
(bad)
mov
pusha
arpl
ss
inc
mov
pop
imul
jg
push
pop
aas
imul
push
mov
and
inc
adc
fbstp
dec
stos
ja
lahf
in
pop
das
ja
fs
dec
xor
push
sbb
repnz
or
push
or
mov
or
aam
pop
pop
sub
retf
jbe
ins
jmp
jnp
adc
and
data16
lods
add
or
stc
mov
or
(bad)
and
dec
sbb
outs
jmp
ins
inc
not
shr
push
rcr
fsub
vunpcklps
(bad)
call
or
ret
nop
bound
mov
inc
and
and
ds
pop
in
cmps
test
and
in
stc
mov
pop
in
dec
mov
addr16
out
stos
jl
mov
jo
dec
loop
popa
pop
scas
stos
push
add
ins
pop
fucomi
inc
cwde
cmp
xchg
xchg
add
inc
pop
and
(bad)
test
pop
jmp
ins
sbb
jo
adc
add
fsubr
cdq
push
test
hlt
mov
cli
push
xchg
retf
movs
sbb
cmp
mov
int3
or
outs
das
out
adc
mov
mov
aas
ss
pop
sbb
jp
iret
jle
test
push
cmp
add
or
div
(bad)
jne
jbe
xchg
pop
sbb
pusha
and
cli
pop
push
xchg
sub
mov
test
add
dec
inc
stos
mov
mov
push
adc
push
sub
xchg
pop
and
rcr
mov
icebp
jecxz
xchg
leave
jge
jnp
inc
mov
jmp
repz
(bad)
cmp
dec
push
stos
pushf
inc
xchg
sbb
cmps
mov
xor
jge
shl
sbb
sbb
fimul
pop
push
mov
in
jp
pop
mov
adc
aad
in
add
sub
cmp
inc
push
retf
je
adc
pop
push
sub
jmp
mov
call
loop
mov
jb
sti
gs
fsub
(bad)
lock
jge
push
push
in
jae
stos
jmp
fwait
repnz
mov
es
adc
push
dec
sar
xchg
mov
dec
sbb
cli
test
ss
lods
dec
sahf
es
mov
ds
jp
(bad)
fstp
mov
stos
jns
push
adc
movs
in
sbb
inc
test
push
pop
cmp
adc
mul
sub
out
cmp
jb
add
jmp
bound
call
xor
loope
fistp
sub
inc
shl
rcr
dec
out
cmps
test
aas
and
rol
push
fcomp
jae
leave
arpl
mov
ds
jle
std
ds
adc
idiv
stos
loopne
out
sti
sub
pop
fidivr
in
arpl
mov
ins
add
xor
aam
jbe
out
aad
(bad)
xchg
cmp
in
push
ins
xchg
jecxz
into
gs
ss
test
and
dec
fldcw
xchg
add
xchg
scas
lock
adc
cs
adc
push
jae
jle
jnp
mov
sub
addr16
fisub
mov
enter
fwait
or
stc
add
sub
mov
int
fcom
mov
gs
cmps
ror
scas
inc
arpl
psllw
(bad)
cli
lea
nop
push
cli
dec
jae
test
xchg
sub
sahf
repnz
mov
xchg
cmp
and
push
ja
pop
test
add
fisubr
sti
and
mov
icebp
fmul
enter
enter
leave
popf
mov
popa
push
ret
ja
and
push
and
xchg
bound
fmulp
ja
pop
fs
hlt
das
(bad)
xor
popf
cwde
mov
mul
loop
dec
retf
ja
or
ins
arpl
or
add
shl
dec
jp
or
test
mov
dec
ds
xor
sbb
push
je
js
loop
pop
rcr
js
dec
sbb
repz
inc
dec
inc
inc
xchg
cli
enter
mov
js
dec
cmc
cmp
mov
jecxz
jge
ds
pop
in
and
(bad)
adc
sbb
outs
mov
push
add
ins
stc
jle
cmps
mov
retf
xor
cwde
jb
inc
jmp
inc
dec
cs
test
and
es
pusha
iret
xchg
cmp
adc
fadd
mov
dec
imul
sub
lock
and
cmc
retf
mov
pop
sti
mov
sub
or
stos
adc
fisttp
aam
adc
test
lock
adc
cmp
scas
imul
shl
addr16
xor
repz
mov
daa
pop
mov
or
xchg
sbb
(bad)
in
mov
(bad)
in
mov
fild
out
inc
idiv
cs
lea
push
inc
in
add
dec
and
jno
fisub
fmulp
jecxz
repnz
popa
(bad)
addr16
retf
movs
dec
les
cmp
and
test
loop
inc
daa
lahf
mov
mov
cmp
sub
mov
inc
fsubr
shr
sub
push
cmp
pusha
test
loope
out
mov
cmp
mov
sbb
out
sti
cs
cmc
(bad)
fdiv
sahf
jno
dec
cmps
fwait
icebp
fdivr
mov
test
push
test
mov
out
pop
jg
jb
or
adc
dec
(bad)
arpl
mov
repnz
ret
mov
xor
mov
std
xchg
inc
xlat
out
ins
jo
int
add
sbb
jmp
in
sub
xchg
fld
out
movs
clc
sbb
sbb
push
xchg
lahf
cmps
(bad)
(bad)
add
push
bound
mov
das
add
inc
or
ins
inc
sahf
adc
xchg
dec
enter
add
dec
lods
pop
jae
(bad)
or
push
cli
daa
lea
xchg
xlat
repnz
xchg
and
and
pop
cmp
sub
pop
inc
push
sub
in
xchg
and
cmps
sbb
jbe
mov
push
xor
pop
and
dec
xchg
test
add
shl
dec
cs
lods
aaa
cmp
adc
mov
sbb
and
pop
dec
xor
add
dec
adc
and
call
pop
pop
sub
aas
adc
mov
neg
hlt
and
test
jl
mov
and
dec
xor
pushf
pop
pusha
ret
shl
inc
push
xor
popf
(bad)
xchg
xchg
xchg
or
push
xchg
rol
jge
pusha
stc
(bad)
jns
inc
lea
push
cmp
pop
fsub
dec
lea
in
dec
inc
fwait
mov
xor
sti
popa
xor
pop
jecxz
jno
aam
xor
fs
jno
ss
xchg
pop
les
inc
jg
shl
mov
es
dec
lock
mov
sbb
ss
mov
jmp
xor
mov
mov
jmp
jmp
cmp
sbb
repnz
and
xchg
js
icebp
and
sbb
mov
dec
and
mov
adc
sub
hlt
cmp
lock
loope
ins
popf
(bad)
std
out
ds
push
sub
and
push
xchg
jge
rcl
and
jecxz
aam
pop
mov
test
cmp
push
loop
aam
scas
add
mov
mov
jae
xchg
mov
push
int
jg
mov
sbb
daa
jns
ins
adc
nop
ss
push
shl
clc
mov
mov
clc
mov
xchg
retf
leave
fisttp
fidiv
(bad)
sbb
scas
aad
xchg
std
out
jg
lock
lahf
shr
adc
pusha
or
iret
fadd
mov
mov
es
dec
cs
adc
fnstsw
mov
jp
xchg
iret
mov
push
push
xchg
hlt
jno
mov
dec
xor
out
pop
test
and
scas
mov
push
xor
sbb
addr16
mov
in
mul
movs
sub
scas
mov
mov
push
scas
lea
aam
add
fcmovu
mov
push
pop
and
out
adc
pushf
and
mov
mov
(bad)
imul
in
into
mov
pop
xchg
jmp
mov
jecxz
mov
cdq
outs
sbb
nop
xchg
lea
pop
pop
cmp
inc
xor
movs
or
outs
add
dec
call
movs
sub
call
cmp
cs
addr16
loope
mov
sub
stos
sti
into
mov
mov
sbb
xor
inc
repz
mov
out
int3
icebp
icebp
xor
je
fs
int
pop
stos
popa
jnp
push
push
xor
push
push
add
jbe
xor
pop
fistp
dec
jp
fldcw
test
cli
add
fistp
(bad)
pop
cli
xchg
popa
push
add
stos
or
mov
aaa
pusha
adc
test
mov
(bad)
inc
push
jno
xor
xchg
inc
mov
outs
mov
stos
sub
adc
test
rcr
lds
sub
(bad)
and
push
frstor
movs
(bad)
stc
(bad)
btr
dec
sbb
popf
mov
nop
mov
outs
scas
xlat
sbb
pop
mov
in
test
and
sbb
jle
mov
jb
repz
xor
adc
add
jno
stos
adc
mov
jbe
mov
iret
call
inc
inc
cmc
mov
push
cmp
xchg
or
mov
inc
cmps
mov
aad
mov
int3
mov
mov
fidiv
jmp
dec
in
jns
cmp
inc
fwait
jno
clc
adc
mov
inc
push
inc
daa
aam
xchg
xor
(bad)
mov
in
cwde
fs
mov
push
pop
arpl
loope
lods
aam
outs
ja
jmp
ins
jns
fdiv
mov
push
adc
sub
mov
push
jno
rol
dec
sub
add
arpl
sbb
jecxz
clc
add
fidiv
xchg
add
or
sub
icebp
inc
(bad)
bound
out
jp
xchg
fmul
push
ret
cmp
into
jecxz
xchg
cmp
clc
and
add
rol
fistp
jo
adc
ret
call
or
jg
daa
mov
add
xchg
push
call
test
retf
adc
jbe
popa
mov
jl
add
gs
or
fs
mov
pop
and
jns
pop
ds
add
es
fldenv
clc
test
and
arpl
dec
mov
les
outs
test
ins
test
icebp
(bad)
pushf
sbb
dec
repz
jbe
mov
pushf
or
mul
cmp
cmp
pop
dec
outs
(bad)
or
jmp
jmp
sbb
(bad)
jp
xchg
xlat
loop
loope
inc
jb
sbb
mov
lea
popa
stos
dec
dec
sar
cmp
ss
adc
cmps
push
cli
rcr
and
jb
jge
jns
out
cld
add
pop
add
mov
cmps
js
leave
jecxz
mov
shl
(bad)
fld
ret
loop
fisub
aad
and
aad
jp
loope
jl
loop
dec
inc
adc
ret
add
xor
cmp
mov
mov
sub
enter
xchg
cdq
mov
(bad)
int
int3
hlt
cmc
test
xchg
addr16
fs
jb
cmp
sub
aam
sbb
mov
or
mov
jns
jbe
aas
cmp
add
repnz
dec
stos
cmp
gs
add
outs
push
ret
add
gs
mov
cmp
loop
add
fs
scas
lock
jl
jo
daa
mov
mov
push
nop
push
arpl
stc
mov
sbb
enter
test
jmp
add
into
jmp
das
test
cmp
idiv
mov
push
xor
or
pop
pop
push
fstp
push
arpl
lods
xor
mov
jns
mov
mov
xor
xlat
or
inc
cmp
loop
jg
add
mov
mov
movs
lds
xchg
stos
cmp
(bad)
sahf
ret
jb
push
gs
cmp
scas
mov
and
sbb
lahf
repz
pop
push
loope
mov
mov
adc
add
arpl
or
pusha
adc
adc
xchg
dec
popf
push
or
popf
jl
fcomi
adc
fcomi
cmp
jns
ret
aaa
add
icebp
jecxz
ret
pop
call
mov
xchg
cmp
jg
out
jb
lods
xor
push
inc
pop
dec
fmul
pshufw
xor
(bad)
xchg
aas
call
lods
jno
dec
or
fwait
mov
mov
pop
loopne
mov
mov
repnz
pop
inc
out
arpl
sbb
dec
dec
add
add
lds
push
int3
mov
inc
inc
cmp
sub
sar
xchg
scas
adc
lds
xchg
mov
gs
pop
scas
fidivr
out
ret
nop
(bad)
or
cmp
ret
sbb
sti
or
movs
pop
shl
sub
and
xor
xor
addr16
inc
jns
movs
mov
xchg
test
jge
retf
push
(bad)
pop
push
or
mov
test
push
(bad)
xlat
xor
cli
imul
jmp
xchg
push
mov
pop
retf
mulps
xchg
cld
mov
or
pop
leave
mov
push
add
ret
add
dec
fadd
xor
daa
adc
xor
enter
neg
mov
xor
inc
pop
mov
bound
dec
mov
dec
(bad)
jmp
sbb
nop
pop
inc
ret
push
(bad)
not
xor
sub
jae
xor
push
push
sub
in
jno
(bad)
pop
jl
xchg
repz
inc
jecxz
jmp
inc
ja
call
popa
shr
add
cli
sub
pop
retf
into
inc
pop
push
xchg
sti
lahf
imul
jnp
mov
inc
dec
daa
and
xor
push
mov
mov
xlat
lods
push
and
adc
shl
ficomp
mov
push
out
jo
push
lea
cmp
xor
iret
mov
nop
lock
sahf
mov
addr16
xchg
sub
fdivp
ins
jo
mov
jno
sbb
fwait
sbb
loop
data16
and
push
ret
test
push
fcmovnbe
or
adc
xchg
mov
mov
mov
pop
and
add
and
stos
mov
push
clc
pop
mov
inc
xor
out
add
daa
cmp
sub
xchg
mov
retf
push
push
ss
out
call
adc
fimul
add
xor
mov
fs
add
xchg
call
mov
jae
adc
pop
(bad)
pop
icebp
sub
xor
js
dec
mov
push
push
lods
fcomp
cdq
ins
push
call
inc
test
sub
xchg
movs
push
js
mov
sub
push
push
push
retf
clc
out
mov
adc
pop
cwde
sar
call
das
test
sub
fmul
xchg
and
pusha
rcl
mov
pop
leave
jbe
lahf
lock
bound
arpl
fdivr
mov
mov
push
sub
mov
out
mov
lods
jo
in
push
addr16
pop
retf
mov
les
rcl
adc
adc
push
ret
cmps
sbb
or
add
scas
(bad)
arpl
loop
pop
lea
xchg
add
add
pop
ror
retf
xor
xor
sub
inc
das
(bad)
dec
mov
add
lea
rcr
pop
xchg
dec
push
jno
test
mov
inc
ss
repz
das
pop
jge
jb
or
lods
push
jo
jo
mov
cwde
icebp
mov
jmp
sbb
inc
pop
ret
psubq
loope
sub
xchg
mov
cmp
fisttp
shl
jl
xchg
(bad)
mov
rcl
out
sbb
mov
inc
cdq
jl
adc
stos
psubq
xlat
lods
mov
sub
sbb
xor
add
pop
or
and
mov
jnp
sub
stos
cmp
(bad)
and
sti
aaa
and
mov
mov
imul
dec
jg
cmp
iret
adc
sbb
dec
leave
xchg
pop
retf
mov
mov
mov
push
scas
stos
loopne
(bad)
mov
adc
ins
add
jmp
inc
mov
pop
jg
mov
jg
mov
sbb
jmp
ins
les
push
dec
pop
lods
or
ror
add
jb
push
ds
test
icebp
cdq
fidivr
loop
cmp
and
movs
sar
lea
popf
sbb
not
xchg
add
mov
loopne
sub
not
repnz
adc
repnz
cmc
cs
(bad)
adc
jo
dec
xor
pop
outs
dec
mov
out
add
xlat
xchg
inc
push
ins
mov
dec
(bad)
out
push
xchg
rcr
fs
mov
clc
lock
cmc
mov
icebp
ins
test
mov
das
push
not
dec
sub
cmc
lea
movs
sbb
jae
rol
xchg
xor
sahf
inc
sub
add
cwde
push
cmps
lods
jge
pop
test
icebp
(bad)
xchg
or
arpl
dec
movs
mov
mov
or
and
adc
xchg
(bad)
jge
adc
int3
cld
xor
ror
cdq
pop
aad
adc
xchg
adc
add
inc
movs
pop
push
fdivr
test
fiadd
scas
popa
mov
adc
in
jno
mov
sub
mov
std
cmc
or
sbb
test
and
sbb
ror
in
mov
cmp
pop
mov
cmp
push
retf
(bad)
int
lahf
cmc
inc
bswap
mov
sub
cmp
pop
addr16
imul
ja
jno
lods
retf
movs
or
(bad)
push
jle
in
sbb
pusha
das
jbe
fnstsw
in
mov
fadd
jne
in
(bad)
dec
xchg
out
(bad)
cmp
outs
in
es
push
mov
mov
jle
out
neg
call
test
out
pusha
pop
adc
xor
fisubr
adc
cmp
out
mov
adc
push
daa
stos
add
outs
cmp
cld
(bad)
mov
add
movs
pop
mov
movs
repz
ror
(bad)
mov
mov
scas
and
fcomp
jbe
icebp
mov
call
jno
push
sti
inc
in
shl
js
adc
shl
dec
push
mov
cmp
mov
cmc
cmps
pop
out
mov
mov
cmp
je
jno
pushf
xor
sbb
pop
dec
dec
leave
adc
pop
add
sub
call
pop
xchg
out
xchg
repnz
cmps
sbb
stos
jnp
cld
jp
cs
sbb
outs
mov
lock
lods
jne
cwde
retf
adc
mov
mov
not
out
or
mov
and
hlt
adc
dec
(bad)
fdivr
mov
sar
movs
mov
retf
or
inc
xor
dec
inc
jecxz
xchg
les
fld
mov
cli
stos
loopne
push
mov
push
shr
dec
(bad)
mov
mov
inc
sub
movs
gs
mov
fdiv
stos
jnp
das
call
in
jo
pop
rol
jne
pop
dec
add
stc
shr
xchg
or
jns
add
loopne
push
and
xchg
xchg
add
nop
test
call
test
out
or
inc
cs
loope
fld
cmp
sub
push
clc
shr
aas
stos
shr
dec
loopne
cld
jne
push
sbb
pop
fwait
xor
push
fs
inc
add
retf
out
dec
cmps
mov
xchg
loopne
(bad)
xor
test
call
dec
inc
jbe
es
sub
scas
stos
push
in
imul
pop
aaa
call
push
xor
dec
push
and
retf
mov
xchg
jbe
rol
retf
cmc
mov
sub
jb
mov
test
adc
mov
sub
imul
and
and
jmp
aas
lea
cmps
lds
push
pop
cli
imul
xchg
inc
popf
mov
out
inc
sbb
jge
lock
jne
and
pop
jns
push
loope
sbb
retf
scas
loop
add
rol
or
pop
jbe
mov
repz
inc
push
aaa
sub
sti
mov
ret
add
cmp
adc
jg
and
mov
fstp
push
xor
jp
repnz
dec
sub
pop
sub
fcomp
cmps
xor
test
cwde
imul
mov
mov
push
repz
adc
cmp
dec
scas
mul
jl
cdq
call
je
std
jno
mov
inc
dec
pop
cmp
test
leave
add
mov
jmp
xchg
pushf
mov
fdiv
ret
and
jne
sub
mov
mov
enter
xchg
(bad)
lock
(bad)
icebp
into
test
mov
repz
adc
push
sar
cmps
and
fs
popa
push
inc
adc
leave
lahf
int3
xchg
sub
mov
lods
test
out
ret
scas
das
push
add
loop
inc
(bad)
and
add
pop
mov
test
jge
adc
jb
xchg
adc
jp
adc
int3
mov
xor
mov
imul
mov
jg
test
popa
xchg
out
test
inc
fidivr
in
neg
fisttp
jno
in
addr16
out
cmps
movs
aas
mov
push
and
push
(bad)
rcl
dec
(bad)
jns
or
adc
dec
add
fstp
inc
div
popa
scas
add
(bad)
jmp
out
and
push
imul
cmp
jns
pop
pop
ror
mov
fcom
imul
or
ror
pop
fucomi
sti
outs
pop
mul
je
jo
sub
add
lea
sub
imul
outs
mov
repnz
nop
push
ficom
sub
inc
jg
mov
int
add
xor
out
test
aam
sub
dec
leave
sub
pop
rcr
jb
mov
cmps
clc
xchg
pop
aad
or
xlat
jo
push
icebp
push
xor
scas
pop
xchg
and
dec
pusha
cdq
adc
jne
dec
neg
clc
sub
add
jnp
imul
fisub
jp
js
jg
sbb
inc
iret
mov
fdiv
adc
scas
adc
shl
add
icebp
xor
rol
xchg
icebp
dec
mov
pop
mov
jle
mov
fild
pop
jg
fsub
jnp
sbb
pop
pop
xchg
mov
mov
pop
or
or
arpl
sub
jl
cmp
sahf
mov
in
pop
das
int
inc
and
test
daa
push
rcr
ss
and
out
mov
(bad)
cmp
mov
shl
sbb
dec
out
jno
xor
mov
mov
jno
(bad)
ja
mov
sub
adc
sahf
and
aad
leave
dec
jg
pop
add
or
mov
add
dec
enter
sahf
sub
jb
push
pop
scas
lods
aam
mov
fld
dec
jmp
adc
push
xor
xor
jmp
into
adc
pop
les
pop
or
mov
push
loop
test
fcmove
lea
jg
mov
dec
retf
fwait
xor
aad
bswap
test
mov
retf
inc
push
shl
adc
int3
aam
sub
call
mov
dec
xor
mov
pop
inc
push
imul
neg
call
pop
and
add
cmp
mov
mov
enter
sub
inc
push
dec
xor
fisttp
pop
and
and
sti
xlat
dec
mov
push
sbb
mov
inc
xor
repnz
jle
icebp
add
sbb
or
scas
sub
leave
or
inc
je
pop
push
repnz
pop
(bad)
push
jb
aaa
shld
pop
pushf
mov
(bad)
xor
push
aad
test
into
aas
repnz
adc
pop
sbb
fnstenv
pop
mov
jne
cmp
fild
mov
fisttp
jl
cld
daa
mov
xchg
mov
push
sahf
rcl
mov
mov
push
push
shl
mov
jo
adc
rcr
je
mov
or
js
iret
sbb
test
fsub
pop
ins
mov
jbe
je
mov
ss
xor
out
(bad)
sub
and
mov
push
hlt
adc
or
sub
push
call
fisubr
jg
sub
in
pusha
pop
fucomi
xchg
sbb
arpl
dec
mov
mov
add
add
pop
jo
call
es
cmp
and
mov
movs
mov
xlat
inc
out
or
jns
adc
dec
test
cdq
cmp
int3
(bad)
xor
add
mov
jp
xchg
inc
push
cmp
sahf
(bad)
pop
ins
xlat
call
int
je
in
in
iret
or
rcl
and
iret
jp
cdq
lea
pop
enter
int3
js
jecxz
cmp
cmp
add
test
loop
add
idiv
in
sbb
imul
or
sbb
bound
stc
loop
sbb
shr
gs
sbb
adc
mov
mov
and
addr16
cmp
pusha
and
outs
arpl
je
mov
std
pop
test
enter
pop
shl
mov
nop
movs
in
and
out
pop
pop
js
cmps
fwait
sub
mov
mov
hlt
clc
xlat
pushf
mov
(bad)
sub
(bad)
pop
in
addr16
mov
mov
outs
xchg
addr16
mov
int
fidivr
jge
ins
pop
sti
and
sbb
in
sti
or
sub
mov
adc
fs
push
leave
dec
sbb
jae
fsin
adc
xlat
or
arpl
and
div
dec
mov
add
push
mov
push
movs
or
push
sbb
mov
mov
pop
es
pusha
jmp
or
mov
scas
push
cmp
inc
es
adc
outs
daa
inc
fistp
vmovdqu
push
test
sbb
fwait
retf
out
jnp
in
scas
rcl
push
mov
hlt
sti
push
into
pop
daa
scas
or
(bad)
out
nop
xor
jp
test
cmp
jle
dec
mov
add
fstp
rcr
push
lock
test
dec
pop
stos
ret
fsub
push
retf
sub
jno
xchg
aam
lea
fistp
xchg
cli
cmp
bound
rol
outs
into
cmp
retf
push
std
pusha
push
jle
aam
dec
mov
or
int
push
jno
mov
das
sbb
sbb
xor
jmp
mov
xchg
xor
fs
xor
sub
jno
sub
adc
pop
pop
lods
cmp
nop
loope
popa
rcl
in
test
adc
mov
outs
pop
xchg
xor
pop
(bad)
pop
jg
jle
fsubr
loope
dec
sub
aam
cmps
mov
push
jl
cld
fs
add
dec
xchg
test
sbb
xchg
cmc
adc
jmp
int
mov
xor
outs
mov
pop
in
loope
pop
dec
lock
jae
hlt
lock
mov
pop
sub
sub
pushf
inc
in
sahf
ins
inc
cmp
mov
fistp
push
mov
daa
or
or
inc
and
mov
pop
cld
stos
aad
out
out
(bad)
in
out
fsubr
rcr
retf
out
jge
cwde
jp
push
gs
mov
xchg
aam
cmp
ins
add
rol
xchg
cmp
lds
scas
xor
loopne
push
or
pop
mov
xchg
sub
aaa
dec
std
lods
aad
pop
gs
lock
dec
ins
int3
repz
cmc
fild
or
jecxz
add
pop
repnz
aaa
ss
push
(bad)
outs
jb
pop
push
pop
loop
pop
and
jb
int
shr
cmps
jae
nop
(bad)
mov
lock
jmp
pop
push
mov
inc
xor
sbb
loopne
jge
mov
jbe
jecxz
xor
sar
sbb
fst
pop
imul
dec
out
pop
xchg
test
int3
fisttp
in
mov
xchg
lds
sbb
mov
nop
shl
loope
movs
add
dec
add
shr
pop
in
arpl
add
js
and
pop
test
xor
add
in
call
shl
shl
or
and
add
cmp
enter
cmps
xchg
test
sti
inc
cld
jmp
dec
pop
mov
cmp
sbb
outs
push
cli
out
mov
ret
fs
leave
ja
ret
sti
xor
cwde
rcl
cdq
cdq
(bad)
in
imul
stos
adc
pop
jmp
push
cld
add
push
leave
inc
adc
xor
shl
lods
mov
scas
pusha
cmps
ret
add
adc
adc
mov
arpl
mov
scas
sub
sub
popf
pop
jle
xor
repz
leave
in
pop
les
xchg
adc
rcl
ret
cmp
adc
mov
dec
add
pusha
pop
pop
icebp
adc
add
lock
(bad)
xlat
inc
fstp
dec
or
jmp
xor
jle
and
js
or
clc
(bad)
clc
sbb
in
icebp
stc
cdq
sbb
jb
scas
push
pop
cs
leave
mov
mov
mov
jl
push
pop
mov
lods
pop
mov
xchg
int3
mov
sbb
jl
fidivr
cwde
sbb
push
push
push
out
dec
xchg
push
adc
js
dec
adc
lds
imul
xor
mov
cmp
jmp
mov
pop
sbb
inc
push
add
xor
ss
and
jno
push
pop
mov
mov
in
dec
xchg
push
rcr
add
dec
and
outs
scas
into
xor
fstp
add
inc
rol
mov
out
cwde
and
pop
dec
jb
mov
in
dec
mov
or
sar
xlat
test
mov
push
xchg
jl
jmp
and
jnp
ins
xchg
or
pop
mov
push
retf
pop
shl
in
push
sti
aam
out
jp
xlat
and
push
neg
arpl
adc
repnz
and
dec
loopne
jle
enter
adc
aam
push
mov
mov
xor
arpl
inc
aaa
(bad)
sbb
shl
mov
push
jno
pop
pop
sub
sub
inc
fist
leave
ss
cmp
outs
adc
mov
aad
add
pop
mov
fmulp
pop
push
(bad)
cmps
sbb
sub
pop
xor
sub
cs
jle
push
mov
mov
icebp
jne
sti
push
movs
jnp
mov
aam
clc
sub
mov
rol
ss
maskmovq
div
pop
xchg
pop
aaa
aam
xchg
test
int
aas
push
stc
mov
cmps
popa
cmps
mov
cmp
aam
sbb
sub
loop
inc
popf
rcl
test
push
mov
mov
and
imul
je
popf
jg
mov
pop
add
pop
stc
retf
inc
movs
mov
fist
enter
sti
in
out
mov
jns
mov
fsubrp
mov
hlt
leave
and
mov
fimul
shr
jnp
or
lods
ficomp
outs
sbb
aam
loope
mov
lods
mov
dec
repz
xor
ins
jp
mov
sets
xchg
shl
pop
loop
sbb
adc
xchg
inc
sbb
dec
stos
rol
retf
sar
stos
xlat
daa
out
out
push
xor
push
shl
jns
sub
cs
xchg
sahf
cmc
cmp
repnz
dec
das
and
into
push
inc
sub
and
pop
data16
mov
inc
ds
mov
aas
cdq
pop
cmps
cmps
add
sub
imul
sbb
das
fistp
je
sti
mov
mov
in
pop
cmp
inc
mov
sub
daa
retf
sub
stos
add
repnz
or
daa
mov
sbb
sub
mov
mov
je
dec
jo
gs
add
(bad)
call
xor
imul
(bad)
fwait
add
pop
dec
inc
jg
scas
sub
leave
into
loopne
movs
add
repz
pusha
lods
lods
push
sbb
dec
fs
add
and
icebp
pop
jb
ror
imul
out
bound
jb
call
jp
cli
outs
fsub
sahf
(bad)
dec
or
and
add
xchg
cmps
rcr
in
call
out
sub
cld
dec
int3
(bad)
imul
cmp
cmps
mov
add
cmp
and
jg
push
cmp
mov
add
mov
mov
dec
mov
mov
dec
out
movs
movs
sbb
inc
mov
repnz
repnz
mov
and
je
mov
enter
dec
jo
in
sbb
mov
int3
stos
rcr
repz
idiv
inc
mov
mov
or
jge
jae
(bad)
xchg
out
mov
test
xchg
cmp
cmps
xchg
mov
inc
xor
sub
ss
stos
and
out
mov
sbb
pop
fsincos
out
and
(bad)
push
rcr
xchg
shl
lods
xor
outs
adc
sbb
and
lods
mov
inc
addr16
test
daa
and
xchg
test
ss
or
jecxz
mov
or
sub
not
rcl
push
jno
fsub
iret
adc
mov
dec
pop
mov
cwde
sti
pop
add
add
fadd
mov
in
dec
mov
adc
mov
test
pop
stos
mov
mov
sbb
mov
arpl
pop
mov
inc
aad
pop
jns
int3
gs
cmp
sbb
add
clc
call
scas
retf
add
out
out
mov
test
cld
lods
dec
xchg
adc
int3
jnp
dec
imul
mov
ror
daa
sbb
jg
jp
stc
(bad)
adc
ja
jge
mov
icebp
jp
and
(bad)
adc
push
jo
stos
adc
sbb
imul
fidiv
test
int
mov
rcl
mov
push
loopne
xor
sar
fisttp
repnz
sahf
test
js
nop
out
dec
ror
push
repnz
mov
xlat
mul
ins
iret
je
add
inc
mov
test
test
mov
rol
pop
imul
div
mov
push
scas
ffree
std
int3
mov
pop
xchg
cmps
add
enter
cwde
pop
push
lea
jl
xor
mov
pushf
leave
sbb
pop
out
sub
inc
stc
into
mov
jnp
fdivr
push
sub
pusha
mov
mov
ret
xchg
fistp
int3
cmp
mov
add
sub
call
and
sbb
(bad)
and
fwait
xor
mov
adc
(bad)
and
mov
push
sub
arpl
pop
js
adc
popf
popf
xor
mov
stos
mov
aaa
shl
sub
mov
mov
pop
inc
fs
jne
mov
pusha
std
rol
rcl
les
add
stos
cmp
popa
(bad)
int
xchg
adc
jne
add
out
bound
jb
js
scas
pop
pushf
jbe
cmps
mov
mov
(bad)
in
sub
push
pop
jl
shl
sbb
mov
jp
mov
sub
xchg
inc
test
cld
cmp
imul
mov
lds
jns
out
ficom
sub
adc
pavgb
sbb
pop
cmps
xlat
pop
and
xor
in
and
xor
add
das
pop
(bad)
jns
call
das
gs
in
call
or
mov
and
mov
jnp
jb
mov
out
fld
inc
shr
jae
xor
cmp
push
mov
pop
cli
cwde
(bad)
cmp
daa
and
push
stc
scas
sub
mov
dec
je
xor
push
sbb
mov
test
js
lods
scas
lods
aas
das
jg
jecxz
sub
cmp
mov
adc
jo
rcr
(bad)
or
or
pop
fwait
and
fbld
(bad)
fst
jmp
aas
cli
xor
cdq
xchg
sub
xchg
fs
ret
pop
xchg
inc
sbb
mov
add
imul
mov
pop
retf
sub
icebp
test
addr16
jp
cs
push
mov
add
xor
or
mov
pop
mov
inc
mov
xor
mov
xor
adc
je
sub
cmp
daa
shr
addr16
inc
cmp
mov
(bad)
(bad)
and
mov
sbb
sbb
pop
loope
repnz
in
es
jg
dec
ffree
lods
cli
ficom
cmc
cmc
stc
push
(bad)
aad
add
push
xchg
ror
mov
hlt
stos
popf
pusha
and
fst
int
xchg
and
inc
sub
cmps
into
movs
aas
jb
div
in
(bad)
popa
sub
int3
pop
push
test
push
dec
sbb
ins
rcr
mov
jecxz
lock
pop
jle
das
scas
mov
dec
pop
addr16
xor
lods
jp
inc
xchg
pop
arpl
loope
int3
xor
daa
jb
xchg
stos
pop
fidivr
stos
enter
mov
lea
aas
mov
dec
lods
adc
jae
iret
(bad)
fld
scas
fadd
iret
fsub
push
push
and
mov
lods
test
lods
cmc
jle
ret
iret
sub
cmc
(bad)
mov
xchg
push
(bad)
sahf
daa
or
in
inc
xchg
sbb
sbb
add
mov
shrd
ror
xchg
iret
and
int3
clc
es
mov
fwait
test
nop
(bad)
adc
sbb
je
ins
inc
in
(bad)
out
test
ret
test
pop
cdq
adc
push
call
lods
mov
push
mov
or
ins
xlat
jae
pop
pop
mov
jb
imul
aad
ret
cs
outs
jmp
aad
pop
mov
in
xlat
pop
movs
xor
movs
xchg
stos
mov
dec
push
or
rcl
test
dec
pop
sub
jo
dec
add
jae
dec
xor
push
loopne
stos
push
pop
loopne
or
ins
xchg
push
pcmpgtb
rol
mov
test
pushf
test
jno
xor
or
dec
sub
sti
clc
push
sbb
dec
jae
or
addr16
clc
jb
cmp
lahf
push
dec
(bad)
adc
jne
push
cmp
adc
mov
sbb
sbb
cwde
mov
cmps
popa
fxam
add
ret
fs
and
icebp
xor
repnz
jb
cmp
test
push
push
mov
sbb
or
mov
in
jmp
jne
rcl
retf
pop
sbb
xchg
in
pop
hlt
push
xchg
push
xor
jge
call
dec
cmc
fwait
cmp
push
sbb
jmp
jo
cli
repz
mov
rol
adc
test
cmp
and
out
je
in
cmc
(bad)
or
ins
(bad)
jmp
pushf
(bad)
call
ins
pop
pop
mov
mov
test
push
out
sar
ficomp
fidiv
push
jl
cli
mov
push
aaa
jl
rcr
push
sbb
or
(bad)
sub
dec
adc
xchg
sbb
in
jp
jmp
rcr
and
das
ja
xor
xor
pop
sub
mov
addr16
adc
jbe
test
inc
pop
jb
add
push
sub
cmp
or
mov
jmp
dec
pusha
add
or
adc
push
ror
mov
in
pop
adc
mov
inc
shr
lods
adc
pop
or
xchg
dec
call
mov
bound
and
jle
cmp
pop
(bad)
in
or
rcl
lock
hlt
jb
repz
pop
repz
jae
mov
lock
pop
cmps
adc
dec
add
cdq
cmps
data16
add
cmps
dec
xchg
sahf
add
sub
(bad)
fs
mov
mov
pop
imul
xor
sub
movs
or
ins
pop
mov
inc
loopne
mov
cmp
xor
int
ja
(bad)
pop
ja
mov
inc
pop
ds
xchg
push
cwde
clc
xchg
pushf
dec
xchg
enter
mov
stos
out
das
sub
sub
sub
xchg
or
add
pushf
add
adc
add
xchg
nop
lahf
test
jmp
jbe
and
sub
xor
fmul
xchg
lods
lea
adc
add
inc
xchg
cmp
dec
cmc
adc
retf
repz
mov
inc
and
jo
mov
test
(bad)
sub
xor
shl
dec
movs
push
cs
enter
cmp
mov
xchg
cmps
cli
push
sub
aas
push
shl
movs
mov
xchg
nop
fsub
ja
pop
push
adc
pop
cwde
jmp
or
popa
cmc
jmp
adc
enter
mov
(bad)
scas
bound
and
ss
je
xchg
mov
pop
adc
xchg
ins
pop
mov
out
in
cld
pop
mov
ins
mov
adc
add
rcr
push
jne
call
and
and
add
xor
mov
int3
dec
in
js
retf
jmp
cmp
(bad)
jmp
jb
aam
int
xchg
jg
and
inc
lods
or
adc
mov
das
cmps
or
pop
mov
(bad)
fst
cmp
or
aam
pop
es
loopne
push
cwde
push
je
inc
test
add
fstp
add
mov
aas
mov
loopne
adc
ficomp
mov
xor
(bad)
hlt
cmp
xchg
repnz
mov
pop
mov
inc
or
bound
scas
dec
sbb
push
enter
into
xchg
stos
mov
js
test
cmp
ja
popa
scas
jno
loopne
scas
rcl
pusha
cmp
fucomi
jno
mov
lock
mov
inc
loopne
jl
mov
lods
sub
xchg
and
pop
mov
or
imul
pop
pop
fdivr
bound
jp
jno
fnsave
lods
movs
sub
push
sbb
das
mov
mov
jb
xchg
dec
out
outs
mov
mov
add
(bad)
mov
inc
mov
test
push
shl
and
inc
mov
sub
push
and
cmp
mov
pop
clc
mov
dec
xchg
adc
sti
leave
cmp
cmovg
push
jle
ret
pop
enter
ficom
push
or
push
mov
loop
add
cmp
arpl
test
xchg
test
mov
ins
call
cmc
push
out
push
enter
jl
xor
sbb
icebp
push
mov
sti
lock
test
adc
pop
out
(bad)
or
add
lods
aad
adc
or
and
out
add
inc
ins
dec
out
xor
push
sbb
ins
cmp
ret
or
push
ror
cmp
jns
stos
popa
add
mov
jnp
cwde
test
(bad)
enter
xlat
lods
or
dec
push
cmp
fsub
loope
fdiv
mul
and
jmp
inc
mov
mov
fdivp
pop
pop
test
call
sbb
add
cld
jno
inc
sahf
outs
rol
jecxz
pop
out
(bad)
cdq
mov
fisub
jmp
sbb
xor
aaa
or
dec
loopne
pop
sbb
cmps
(bad)
jo
mov
mov
push
cmp
mov
cmps
xor
mov
movs
pop
fistp
mov
ins
inc
shl
cmp
(bad)
idiv
outs
pop
cli
lea
mov
imul
sbb
sar
cmps
pop
xchg
or
daa
xor
mov
cwde
inc
enter
and
and
popa
jb
(bad)
dec
xchg
cmp
push
stc
mov
retf
adc
lea
or
(bad)
adc
xor
mov
int3
adc
xchg
inc
cmp
adc
pop
gs
xchg
icebp
xor
shr
aam
mov
sbb
push
ja
fwait
and
dec
les
sbb
jmp
(bad)
mov
inc
nop
mov
jle
mov
stc
push
xchg
adc
dec
cmps
jle
js
cmp
sbb
inc
shl
mov
xchg
test
xor
loope
xchg
lea
jl
dec
pop
es
ss
shr
inc
jo
test
jb
mov
test
(bad)
out
iret
(bad)
int
imul
push
inc
cmps
retf
ja
jge
and
sbb
je
int3
(bad)
xor
pop
dec
add
add
(bad)
aaa
xchg
inc
or
mov
mov
cmp
bound
pop
gs
dec
jecxz
pop
xor
cdq
sbb
out
(bad)
cmp
mov
add
cmps
xchg
push
or
fnstenv
cmc
mov
mov
xchg
xor
int3
addr16
xchg
cmp
mov
sbb
stos
inc
push
pop
add
jp
mov
cmp
aaa
jecxz
mov
iret
in
mov
jb
or
cmp
dec
les
leave
jno
popf
mov
and
mov
test
loopne
call
cmp
and
jne
xchg
mov
pop
(bad)
aam
movs
pushf
mov
add
dec
out
lods
inc
sub
pop
retf
xchg
pushf
add
nop
pop
dec
scas
aad
sbb
test
cwde
xlat
inc
and
shr
ins
sbb
cmp
(bad)
dec
lock
cmps
cmp
or
add
dec
loopne
mov
lock
mov
repnz
xchg
stc
push
pushf
js
or
fmul
movs
hlt
lea
or
xor
pop
dec
sub
push
int3
xor
dec
mov
mov
(bad)
fcom
fsub
pop
xchg
pop
xchg
jg
cmp
(bad)
adc
rol
frstor
pop
push
mov
stos
add
repz
fcmovu
adc
jne
or
imul
xor
cmp
lea
jne
sub
ins
lea
or
test
(bad)
mov
pop
and
or
out
mov
ficom
test
icebp
and
mov
sti
repnz
scas
or
inc
mov
pop
inc
sbb
fcomp
stc
dec
adc
xor
jge
cmp
and
(bad)
ja
pop
xor
dec
mov
ss
push
xchg
cmp
jne
std
cmp
adc
(bad)
sub
inc
cmp
pop
xchg
stc
add
mov
cmc
movs
fld
adc
ret
sbb
ret
addr16
out
(bad)
fsub
dec
mov
xor
xchg
xlat
sti
mov
retf
xor
aaa
push
add
jns
fwait
push
imul
inc
xchg
fucomp
mul
and
and
sub
mov
xor
inc
push
mov
sub
xor
mov
jae
shl
data16
mov
pop
mov
pop
sub
inc
or
jno
jp
sbb
jnp
push
cmp
mov
inc
dec
inc
pusha
and
jb
and
and
(bad)
idiv
cdq
pop
jno
aad
or
jae
or
retf
xchg
outs
cmp
dec
jnp
popa
sub
ret
bound
jns
push
hlt
dec
inc
std
mov
leave
xchg
enter
lea
pop
adc
or
(bad)
push
loop
jmp
or
mov
out
push
ss
and
repz
arpl
pop
adc
xor
pusha
rcr
bnd
cmp
call
aas
cmp
daa
dec
inc
mov
out
pop
outs
xchg
adc
lea
and
loopne
and
mov
xchg
xor
fwait
xor
ins
and
add
and
mov
mov
int
mov
and
sbb
push
retf
inc
jae
jno
mov
mov
or
mov
inc
push
fst
adc
lock
sbb
push
ret
xchg
and
ins
out
adc
ror
ret
loope
push
(bad)
mov
mov
mov
dec
push
iret
shl
xor
mov
xchg
aas
lods
pushf
push
mov
jb
mov
aas
imul
mov
inc
sbb
and
out
xchg
(bad)
loop
mov
sbb
(bad)
xchg
shl
popa
ret
cmps
push
push
jmp
stc
and
jg
aad
jne
ret
mov
in
(bad)
iret
imul
cs
outs
hlt
mov
retf
xor
repz
and
fidiv
jecxz
fiadd
mov
vcvtsi2sd
mov
div
dec
dec
daa
push
mov
add
loopne
mov
rcr
in
push
inc
das
aaa
pushf
call
mov
mov
jb
setns
mov
push
call
add
fist
add
scas
sar
cdq
inc
(bad)
stos
pop
lahf
(bad)
or
xchg
cld
xchg
pop
lods
fisubr
mov
arpl
leave
add
cmp
int3
mov
sub
ret
in
test
cmp
retf
pop
pop
call
jae
pusha
sub
loope
pop
pop
repz
xlat
mov
xchg
inc
mov
test
inc
ins
shl
xchg
mov
or
pop
fcomi
add
mov
pop
sub
lods
inc
shl
lahf
aam
push
dec
clc
(bad)
out
jp
sbb
ds
mov
movs
or
push
jae
shl
outs
fldcw
sbb
das
int
nop
mov
push
out
imul
cld
jbe
call
mov
sub
clc
pop
or
sub
iret
sbb
cmc
jmp
retf
pop
leave
cmp
pusha
pop
xchg
mov
push
call
xchg
cmps
aad
mov
inc
icebp
push
in
dec
aam
jle
test
jno
mov
shl
adc
cld
pop
aaa
cs
sahf
and
leave
aam
std
jmp
enter
shl
xor
jo
jp
pushf
dec
fdiv
aas
sbb
dec
imul
stc
jo
adc
mov
add
mov
lahf
jecxz
add
xchg
loope
retf
call
xlat
out
push
push
das
stc
cmp
ins
fist
dec
adc
pop
stc
(bad)
call
(bad)
mov
out
add
pop
movs
das
adc
call
xor
jbe
cmps
mov
stos
or
out
xchg
ins
lds
std
iret
jb
test
and
cmp
inc
cmps
shr
jb
inc
inc
xor
je
lods
push
loope
mov
mov
push
daa
ja
retf
mov
fwait
mov
loopne
xor
add
jns
jae
mov
and
ret
or
gs
mov
repnz
mov
cdq
xor
adc
(bad)
sub
inc
sar
add
lods
cs
xor
mov
(bad)
mov
in
push
loopne
gs
mov
jge
jl
in
inc
js
out
rol
loopne
and
add
adc
rcl
xchg
push
mov
cmp
mov
dec
test
mov
mov
and
mov
movs
scas
sahf
jnp
(bad)
dec
rcl
mov
push
mov
xor
adc
call
repnz
jns
sbb
sbb
nop
rcr
nop
add
popa
push
pop
dec
xor
cmp
cmp
push
mov
dec
dec
inc
movs
jl
pop
stos
pop
jle
mov
(bad)
adc
pop
cmps
sub
inc
push
dec
pop
mov
in
fsqrt
dec
(bad)
fist
or
mov
test
xchg
ds
or
add
aas
xchg
rol
dec
adc
sub
mov
dec
xor
fadd
pop
(bad)
jmp
pop
rep
into
and
fmul
fistp
mov
fild
(bad)
pop
ja
daa
pop
dec
inc
sar
fwait
add
sub
add
dec
sub
push
push
or
out
cli
xchg
xor
or
fcomp
les
dec
mov
xor
xor
enter
(bad)
mov
(bad)
dec
mov
je
xchg
dec
test
mov
jecxz
addr16
xchg
or
cmp
or
jne
inc
jmp
xchg
xchg
cmp
div
cmp
pop
fs
cmp
xchg
popf
sbb
in
or
jecxz
nop
pop
adc
call
pusha
inc
jae
push
push
fimul
jns
jb
and
repnz
cmp
or
sbb
mov
and
bound
adc
cdq
jno
mov
jns
push
out
add
dec
push
outs
(bad)
cs
mov
sbb
sbb
push
push
adc
inc
push
and
mov
and
cmp
bound
sbb
ins
mov
xor
std
ins
add
stc
loope
cdq
add
mov
push
cmp
ror
add
fidiv
mov
shr
inc
mov
int
rep
adc
adc
fimul
inc
fst
xor
in
jle
inc
dec
cwde
jp
jb
and
jnp
xchg
cmps
mov
dec
ret
out
cmp
rcr
fild
jae
test
jno
in
sub
cmc
sbb
in
add
jmp
les
ins
cdq
xchg
or
out
mov
pop
push
sub
popf
in
(bad)
xchg
mov
test
push
aaa
cmp
dec
and
push
xchg
outs
arpl
and
add
pop
daa
or
xchg
out
ins
sub
lods
fs
cmp
scas
adc
sbb
jmp
dec
popa
sti
scas
dec
xchg
daa
enter
adc
icebp
or
retf
test
or
jne
push
push
lods
into
sub
fidiv
or
xchg
and
pusha
cmp
mov
test
ins
sbb
stc
not
pop
dec
mov
push
pop
in
ret
xchg
push
cwde
stos
sti
jno
push
gs
pop
mov
cmps
mov
retf
(bad)
std
mov
push
or
sub
mov
pop
sahf
sub
fs
aam
ficom
fcomp
hlt
xchg
stos
mov
xchg
and
and
sub
xchg
into
mov
(bad)
push
stc
mov
rcr
xchg
push
mov
fcmovnb
push
pop
jbe
mov
lds
push
xor
push
leave
pushf
or
add
enter
loop
mov
adc
imul
jns
data16
mov
jmp
je
fmul
push
sbb
mov
shr
cs
sbb
popa
xchg
sub
mov
push
pushf
xchg
data16
cs
lods
out
add
add
out
and
shr
and
out
dec
fimul
cmp
sbb
sbb
dec
shl
inc
xlat
outs
ins
ret
xchg
mov
mov
inc
leave
sub
fsubr
shl
scas
pop
pushf
xchg
test
fdiv
les
push
jl
mov
mov
nop
jne
sbb
xor
adc
fwait
das
cmps
sbb
nop
add
into
mov
cmp
(bad)
jmp
mov
ins
fstp
bound
jno
rol
test
fnstenv
sub
mov
xor
add
inc
adc
out
loopne
xchg
and
sub
sti
add
xchg
pop
mov
xor
(bad)
out
and
in
adc
cmp
jbe
cmp
ss
fld
pushf
xchg
xor
dec
and
cmps
and
sbb
push
icebp
cmps
xchg
stos
iret
xchg
jae
outs
pushf
lahf
xchg
push
push
fwait
inc
add
loope
ret
rol
fstp
daa
xchg
xchg
lods
test
out
mov
adc
mov
xor
sbb
(bad)
gs
or
add
clc
in
loope
stos
mov
xchg
xchg
imul
lds
cmp
imul
rcl
movs
jle
mov
xor
in
iret
(bad)
out
(bad)
sahf
sbb
into
sub
movs
loope
xor
adc
or
inc
std
fistp
inc
outs
mov
xchg
inc
push
data16
sti
sahf
adc
pop
hlt
imul
fisttp
mov
push
mov
jmp
inc
sti
mov
cmp
(bad)
pop
clc
adc
mov
mov
es
push
xor
pop
movs
push
xor
shl
fild
outs
pop
neg
jge
repz
dec
je
inc
add
iret
test
iret
test
mov
pop
dec
cmp
jbe
mov
in
adc
leave
dec
les
mov
xchg
fdivr
fbld
mov
pop
mov
nop
fidiv
ret
push
loope
fcomip
jo
inc
xor
cs
pop
pop
and
xor
aaa
int3
loopne
sbb
and
mov
pop
inc
mov
outs
int
push
js
inc
xchg
and
sub
xlat
gs
in
fsincos
mov
add
aam
inc
dec
mov
aas
and
pop
iret
xlat
movs
ins
adc
rcr
add
sar
movs
jmp
push
gs
aas
pop
ret
dec
fmul
movs
cmp
push
fsubr
mov
mov
stc
jl
movs
push
ficomp
rcr
add
mov
ja
xchg
stc
pop
rcl
(bad)
or
mov
adc
(bad)
mov
sbb
mov
aam
push
xor
and
pop
add
int
sbb
out
xor
cmps
imul
jl
iret
jo
hlt
cmp
mov
fs
pop
cdq
mov
jecxz
xor
lea
adc
retf
retf
in
(bad)
xchg
enter
retf
call
test
mov
ja
dec
sar
mov
pop
push
and
movs
push
fst
rcr
lea
sub
mov
popf
xchg
jae
xlat
adc
pop
xor
cmps
sbb
push
stc
push
cmps
ins
addr16
js
mov
out
xchg
cld
movs
mov
pop
aaa
xchg
cli
js
xchg
and
push
call
call
je
mov
lahf
dec
test
inc
cmp
xor
dec
cmp
mov
ins
test
mov
push
dec
xor
and
sbb
pop
popf
xchg
xchg
and
stos
mov
inc
daa
adc
nop
in
jbe
mov
enter
fwait
pusha
ror
sahf
ja
inc
outs
aad
aas
adc
ins
icebp
dec
cmp
sub
loopne
add
mov
mov
(bad)
jecxz
aam
add
fist
test
ds
(bad)
ror
stos
mov
cs
das
mov
das
jle
add
nop
push
ror
push
push
ret
inc
cld
xchg
cmp
mov
pushf
push
push
leave
stos
xchg
jg
xchg
pop
sub
jo
retf
ins
lock
mov
inc
movs
adc
imul
stc
add
loopne
nop
inc
or
push
call
out
xchg
push
ins
(bad)
and
push
jnp
test
scas
test
cmp
lahf
sub
pop
adc
xchg
ins
pusha
fistp
lods
cmp
mov
push
xchg
xor
(bad)
or
ins
call
shl
scas
push
icebp
and
aad
add
mov
xchg
cs
fstp
gs
outs
dec
in
enter
cli
lea
or
mov
retf
cmp
mov
(bad)
sar
sbb
adc
popa
inc
mov
mov
push
mov
aad
out
and
cmp
rol
pop
pusha
push
pop
xor
dec
mov
pop
in
push
in
gs
mov
test
jnp
fwait
in
rcr
cmp
sbb
xchg
mov
aas
stos
mov
les
push
movs
(bad)
fidiv
inc
and
mov
inc
sub
js
mov
bound
call
mov
jns
or
or
js
aas
ins
pop
push
pop
mov
mov
pop
stos
pop
mov
xchg
inc
push
adc
imul
das
dec
push
scas
add
adc
outs
sahf
and
jnp
popa
cmc
(bad)
xor
push
mov
mov
pop
dec
movs
ret
xchg
pop
jecxz
shr
and
jle
mov
dec
ja
inc
sub
test
xor
cmps
sbb
(bad)
sub
mov
data16
xacquire
lods
push
pushf
pop
xor
(bad)
in
xlat
es
pop
clc
jns
adc
(bad)
jmp
pop
(bad)
inc
sahf
cmp
cmc
xchg
mov
pusha
jl
or
and
and
add
sbb
or
shl
jecxz
jl
inc
out
fcmovne
mov
add
sub
xchg
retf
jne
call
repnz
cmp
sar
test
int
dec
adc
test
mov
jle
add
inc
inc
adc
add
and
push
repnz
mov
int3
int3
call
jp
(bad)
idiv
int
std
jnp
and
fmul
cmps
lods
jo
fs
sub
dec
aas
popf
les
hlt
mov
xchg
stos
or
imul
sub
jl
and
(bad)
(bad)
int3
cwde
and
jae
xchg
xor
xor
in
mov
test
push
cmp
nop
stos
mov
xchg
aaa
inc
adc
mov
dec
mov
and
fnstsw
jecxz
pop
xor
shr
cmp
(bad)
lods
xchg
popf
pop
ss
and
mov
(bad)
ds
mov
dec
xchg
fcmovnbe
inc
jnp
int
and
pop
inc
add
and
adc
fs
and
mov
mov
pop
jmp
jmp
pop
jne
test
mov
aad
dec
jl
and
dec
inc
inc
outs
out
pop
stc
adc
in
(bad)
sahf
jns
xlat
adc
nop
out
inc
popf
xchg
(bad)
mov
shl
jmp
jmp
xchg
mov
test
enter
jbe
jno
(bad)
and
fidivr
add
xor
xor
add
jo
mov
in
sub
sub
icebp
inc
and
cld
movs
adc
cmp
xlat
mov
test
push
mov
sub
cmps
outs
sbb
mov
xlat
mul
aam
(bad)
cld
dec
cmp
or
pop
cmps
bound
jmp
out
sbb
call
repnz
inc
loop
loopne
rcr
aas
xor
mov
push
add
mov
and
push
xor
fild
fs
sub
mov
push
stos
and
and
lahf
mov
mov
mov
dec
leave
xor
into
dec
jo
popf
jb
dec
data16
dec
push
mov
inc
inc
jg
lea
push
push
mov
test
jle
cmp
inc
out
pop
xchg
mov
out
jns
pusha
(bad)
scas
jecxz
sub
pop
mov
outs
cmp
sub
mov
mov
sub
adc
push
popf
xor
sub
sahf
push
int3
push
ins
mul
mov
pusha
lds
sbb
jg
fsubr
pop
xor
(bad)
or
and
adc
ja
sub
lods
lods
in
outs
lahf
mov
xchg
sar
fcom
ret
add
add
cmp
xor
rcl
mov
stc
xlat
dec
xor
push
test
fmul
dec
cwde
retf
sbb
and
test
pop
mov
or
cmp
ins
inc
push
mov
or
mov
inc
xchg
pushf
inc
js
xchg
adc
rcr
mov
adc
sub
push
sbb
mov
xchg
(bad)
fiadd
aaa
sahf
pop
aas
out
call
push
sub
jmp
test
mov
in
mov
faddp
push
fs
push
or
inc
add
lock
es
ret
add
adc
inc
xchg
mov
out
movs
pushf
mov
xlat
imul
dec
es
jmp
lods
into
je
lea
adc
mov
popf
je
stc
fiadd
ds
adc
jl
in
or
sbb
dec
ret
arpl
cmps
cmps
loop
lahf
jno
test
cwde
mov
jle
lahf
mov
xlat
jmp
fimul
icebp
and
dec
out
ja
mov
dec
cmp
sub
cmp
fisttp
mov
ins
adc
sbb
adc
push
xchg
dec
ja
stos
mov
jne
xor
lods
jo
or
adc
out
fnstenv
in
hlt
mov
pushf
mov
push
out
mov
dec
lods
daa
ins
dec
aam
jmp
je
push
xor
jle
stos
dec
jg
pop
outs
cmp
mov
in
test
int
stos
test
mov
(bad)
cmp
mov
xchg
jl
int
int3
cmp
or
cdq
nop
xor
adc
icebp
inc
jno
ins
xor
xchg
push
dec
xchg
xchg
inc
(bad)
push
movs
inc
lea
add
data16
lahf
int
xchg
enter
out
dec
retf
dec
fmul
mov
scas
clc
sbb
lds
lods
mov
dec
mov
retf
push
(bad)
iret
icebp
scas
clc
add
rcr
sub
shl
add
sub
xor
dec
jo
fdivr
dec
push
jo
mov
and
sbb
pusha
mov
cdq
pushf
fldenv
aas
and
dec
(bad)
pop
sbb
dec
push
ret
pusha
and
mov
test
aam
ror
cmps
pop
cmp
add
test
scas
mov
and
adc
jle
mov
cli
push
adc
add
mov
arpl
push
mov
outs
icebp
mov
push
scas
xor
or
(bad)
sbb
adc
mov
movs
xchg
in
push
pop
sbb
xchg
test
sar
jmp
pop
in
add
mov
imul
xchg
int
mov
call
inc
jbe
mov
push
jg
add
daa
xchg
mov
bound
add
imul
cli
repnz
hlt
xchg
fs
push
(bad)
cmp
ds
dec
push
or
jnp
jmp
popa
in
lock
or
push
dec
outs
aad
dec
jmp
mov
test
mov
add
xchg
jg
clc
inc
leave
jbe
push
cmp
push
mov
retf
cmp
aad
jl
jg
ret
jp
push
retf
xchg
jne
inc
nop
cmc
popa
mov
cmp
or
idiv
cmps
cmc
sysenter
retf
loop
stc
mov
sub
inc
gs
xlat
add
sahf
ret
sbb
jae
(bad)
je
cwde
push
or
fstp
mov
movs
cmp
mov
(bad)
loop
jecxz
movs
push
lahf
das
xchg
(bad)
xor
pop
cmp
push
loopne
jmp
or
loope
sub
int
movs
mov
xchg
test
jle
xchg
pusha
stc
mov
movs
dec
sub
mul
jbe
lahf
(bad)
mov
mov
mov
iret
shl
adc
push
outs
pop
scas
repz
addr16
into
pop
imul
sub
(bad)
(bad)
jmp
pop
pushf
ret
retf
or
inc
pop
out
pop
(bad)
lods
aam
ins
mov
mov
jbe
mov
mov
loopne
hlt
jae
mov
repz
dec
test
(bad)
or
pop
cmc
inc
fwait
inc
sub
es
and
clc
jp
popf
mov
outs
sub
sahf
xor
add
and
cld
push
inc
fcomip
mov
ins
or
jno
(bad)
inc
or
sub
push
test
adc
leave
xchg
les
jnp
test
adc
mov
xchg
dec
mov
pop
ret
mov
cmp
jno
inc
adc
and
sbb
mov
cmps
movs
cli
jnp
cmc
imul
jbe
lds
add
loope
fnstcw
outs
or
bound
push
cmc
jne
loopne
or
jl
loop
and
int
mov
mov
mov
xchg
sbb
hlt
adc
scas
mov
push
das
xor
add
inc
call
in
sub
stos
test
fcmovu
xor
and
jge
stc
sub
dec
pcmpeqb
mov
cmp
fldcw
fcomp
sbb
jb
adc
pushf
shl
or
ja
jl
sub
mov
out
mov
jecxz
add
pop
adc
pusha
jb
call
mov
cmp
push
dec
mov
inc
shl
dec
fcom
pop
scas
xor
test
into
pop
call
mov
test
sbb
adc
cld
xor
sar
push
dec
mov
aam
jl
mov
cmp
clc
sar
mov
sbb
inc
dec
je
mov
pop
retf
cmp
inc
push
shl
test
in
hlt
pushf
xchg
and
ss
movs
mov
(bad)
nop
mov
out
mov
mov
ss
inc
mov
or
sub
(bad)
lock
(bad)
call
adc
add
pop
cmps
mov
(bad)
fistp
or
inc
cmp
and
ins
adc
addr16
ficomp
int3
push
push
in
mov
mov
pop
cmp
psubsw
int
sbb
fsubr
push
iret
push
fist
adc
add
bound
ror
fxch
xchg
push
mov
setb
repnz
aad
lods
push
mov
ins
scas
add
jno
fnstcw
ja
icebp
pop
shr
mov
leave
and
adc
stos
or
mov
add
push
jmp
stos
movs
fstp
call
fdiv
(bad)
lgs
pop
seto
push
jg
ds
aam
movs
test
sub
dec
fstp
shl
cmp
call
pop
pop
jmp
cmc
dec
pop
dec
mov
add
outs
bound
mov
inc
inc
pop
push
dec
mov
cmp
cmp
lar
sub
loope
sbb
scas
xchg
lods
inc
cmp
mov
addr16
mov
xchg
add
xchg
ror
jle
repnz
out
sub
(bad)
push
cmp
xor
lods
lock
push
sub
in
and
fidiv
loopne
sbb
cmp
xchg
push
into
or
test
xor
test
iret
sub
jnp
pop
jmp
retf
shl
icebp
dec
xchg
cmps
xor
cmp
mov
jmp
and
mov
xor
adc
(bad)
add
xor
scas
js
mov
jne
or
jo
add
or
(bad)
cmps
test
scas
lods
ret
bound
adc
movs
sti
jecxz
out
mov
mov
push
jae
jb
xchg
fcom
jae
pop
add
or
pusha
popa
xchg
push
stc
jnp
xchg
mov
add
aaa
or
mov
xchg
push
mov
fstp
dec
mov
add
jo
mov
int3
dec
pop
nop
inc
jp
data16
data16
loop
sahf
or
push
mov
mov
sbb
push
mov
xor
push
xchg
aaa
xchg
fwait
pop
push
and
imul
call
jp
inc
aad
(bad)
outs
xor
push
cwde
dec
push
jnp
test
test
not
into
scas
sbb
jmp
xchg
mov
popf
adc
jae
add
(bad)
jne
pop
mov
inc
pop
sub
test
sub
inc
lock
dec
repz
ret
jg
xchg
or
jmp
sbb
rcl
jae
aam
scas
icebp
add
jle
cmps
fild
push
jmp
jp
std
in
in
pop
sub
ins
lock
ficomp
or
retf
test
jnp
fist
sbb
mov
mov
stc
arpl
mov
xor
lods
cmp
test
xor
pop
xlat
outs
rcl
or
mov
dec
lock
sbb
sub
hlt
mov
js
xchg
mov
jo
inc
shl
das
ins
out
pop
ss
mov
cmp
loop
and
test
test
or
xchg
adc
pop
inc
push
pop
dec
rcl
mov
stc
shl
xchg
mov
mov
ret
xchg
cmps
jge
mov
(bad)
mov
ret
jle
retf
jmp
into
int3
adc
xor
(bad)
lods
aam
xchg
popa
xchg
or
dec
pop
or
leave
es
(bad)
push
or
mov
sbb
test
sub
mov
and
or
add
shl
rcr
xchg
adc
sub
dec
int
add
sahf
xor
idiv
mov
jecxz
dec
out
add
mov
inc
dec
or
jne
loop
hlt
sti
cmp
cmp
jmp
loop
pop
fmul
dec
in
or
loopne
jbe
imul
fcom
sbb
mov
mov
pop
add
aad
or
pushf
jmp
dec
bound
jbe
retf
sbb
out
je
mov
movs
retf
(bad)
aas
scas
(bad)
push
test
pop
xchg
sbb
in
cmp
mov
inc
jge
jmp
xor
stc
hlt
ror
jge
sbb
jae
xor
dec
push
aaa
(bad)
movs
in
adc
inc
std
clc
pop
daa
repz
mov
fcmove
mov
xchg
push
imul
ins
ins
add
inc
fisubr
mov
inc
sub
dec
in
test
cmp
stos
pushf
fimul
mov
int3
sbb
jmp
ja
mov
or
inc
push
lahf
leave
std
xchg
stos
scas
je
inc
or
fwait
add
pop
aaa
pop
and
ret
fld
or
push
adc
push
add
cmp
jg
pop
inc
fstp
sub
in
lods
ins
stos
xchg
jg
sahf
icebp
shl
mov
inc
xor
in
call
(bad)
clc
icebp
push
vpaddusb
jo
mov
pusha
or
push
bound
dec
mov
out
pushf
sar
aam
pop
pop
sar
(bad)
mov
addr16
dec
or
sbb
push
lods
and
push
fcomp
cmp
(bad)
fld
(bad)
imul
inc
out
sub
(bad)
ins
ret
pop
pop
call
icebp
repnz
push
dec
fwait
scas
xlat
call
ficomp
adc
or
outs
(bad)
mov
sbb
div
push
pop
mov
loop
jge
popf
xbegin
push
push
jb
mov
call
sbb
test
push
ret
data16
push
jae
dec
sbb
in
push
adc
add
out
inc
js
out
pop
cwde
(bad)
aaa
(bad)
repnz
cmps
mov
and
js
test
xor
or
pop
in
ror
bswap
shr
aas
fstp
sub
xchg
test
inc
into
dec
inc
cmp
fisttp
jbe
repnz
adc
jmp
cmp
hlt
inc
fsub
add
push
loope
sbb
pop
dec
dec
jns
push
mov
pop
int
mov
add
push
cdq
jae
(bad)
aas
sbb
push
retf
imul
call
mov
inc
ins
ret
xchg
and
push
sti
int3
adc
push
loope
ss
enter
jl
xlat
mov
shl
adc
repnz
sub
cdq
into
test
fcomp
jbe
jmp
mov
leave
das
dec
dec
es
jb
or
sahf
add
adc
inc
loope
or
out
pop
adc
fsubr
imul
scas
div
test
mov
and
enter
aam
icebp
xchg
clc
mov
pop
scas
ss
add
and
mov
data16
and
loopne
cmc
sub
(bad)
(bad)
add
xchg
push
lods
add
scas
icebp
je
xor
jl
rol
int
push
loope
pop
xchg
dec
push
jecxz
pusha
jl
jg
xor
add
xchg
mov
cdq
mov
dec
or
add
or
xor
loope
lds
cmps
loope
sub
inc
in
das
neg
pop
cdq
mov
int3
pushf
xor
sub
mov
clc
inc
das
ror
jle
ret
js
aas
dec
mov
sbb
in
jmp
ins
popf
jae
das
jmp
xlat
lock
xchg
shr
xor
cmp
(bad)
pop
loop
out
test
fcomp
loope
inc
data16
movs
or
imul
ins
sahf
jne
sub
enter
xchg
out
xchg
jg
mov
add
int3
mov
fs
jne
push
and
lahf
and
lock
out
cmp
jbe
std
ret
shl
fdiv
pop
repnz
xor
das
jp
ss
ror
mov
(bad)
stos
in
in
aaa
sbb
int3
pop
xor
sbb
adc
pushf
mov
sub
push
js
xor
ins
retf
xor
dec
sar
lds
in
jno
fistp
jnp
mov
(bad)
cdq
in
pop
shl
nop
jns
jmp
mov
cwde
jne
xchg
dec
es
icebp
push
mov
sbb
or
in
push
push
cwde
pushf
or
and
xchg
xlat
dec
adc
out
sub
fwait
icebp
icebp
les
jne
pop
sub
push
aam
mul
inc
aas
loopne
or
xchg
repnz
pushf
mov
xchg
adc
fs
and
mov
iret
leave
pusha
(bad)
lock
sbb
mov
lods
sub
popa
retf
adc
mov
data16
scas
in
push
mov
sub
hlt
mov
enter
or
popf
aaa
or
push
cmps
jbe
es
ja
xchg
mov
inc
shl
inc
int
div
movs
xchg
xor
push
pop
dec
sub
sbb
aam
mov
call
jno
leave
and
clc
cmps
sbb
jno
xchg
dec
and
push
(bad)
in
xchg
outs
gs
clc
mov
leave
mov
jbe
dec
mov
gs
data16
mov
xchg
add
push
mov
in
cmp
xor
icebp
cmps
sbb
mov
(bad)
std
(bad)
jp
mov
ds
mov
and
mov
jecxz
and
mul
cmp
into
cmp
lds
sbb
mov
mov
repz
inc
clc
fidiv
fcmovu
les
push
mov
pushf
clc
shl
jge
pop
jp
adc
mov
in
jb
and
jne
dec
leave
ret
out
fisttp
cmps
jge
jp
scas
cli
jae
sbb
mov
dec
sbb
into
fidiv
xchg
push
test
mov
sub
int3
mov
outs
out
call
pop
scas
and
dec
mov
xchg
xor
mov
inc
inc
cmp
inc
sub
ret
and
cmp
jno
in
add
cmp
movs
mov
std
jnp
add
adc
fs
ds
(bad)
jno
or
mov
imul
xchg
into
pop
mov
pop
(bad)
(bad)
fs
fs
mov
cmovbe
push
les
mov
push
sti
adc
push
adc
shr
mov
mov
xchg
js
jge
add
or
jmp
push
sar
and
lock
out
and
push
shr
jmp
(bad)
sbb
jmp
mov
std
jmp
daa
sti
mov
or
sti
add
mov
sbb
test
add
popf
add
jo
fidivr
fwait
mov
daa
retf
ret
adc
call
mov
scas
in
mov
mov
cmp
stc
mov
daa
cwde
mov
retf
pusha
int
inc
leave
(bad)
retf
mov
push
ficom
dec
lods
mov
jge
das
aaa
(bad)
xchg
cmps
mov
mov
dec
sub
hlt
mov
sub
ja
mov
dec
xor
add
mov
aas
sub
cmps
ror
mov
out
jno
cmp
inc
lods
aaa
icebp
push
out
xlat
mov
mov
mov
repz
inc
jo
xor
pushw
mov
repz
jle
mov
sub
cmp
retf
cld
popa
xchg
push
iret
aam
ins
cmp
jo
and
adc
cmps
data16
push
jmp
sub
stc
and
sub
jne
outs
sbb
mov
or
jg
inc
xor
test
loopne
add
pop
inc
push
pop
mov
jecxz
or
sbb
outs
sti
adc
stc
ja
push
xchg
in
fldenv
xchg
leave
pop
ds
mov
mov
je
add
push
in
adc
fidivr
adc
cdq
ficomp
adc
mov
and
add
xchg
dec
cld
pop
dec
(bad)
cmp
xor
or
and
sub
sub
mov
mov
jnp
add
dec
or
cmp
std
add
mov
popa
mov
mov
adc
xor
fisubr
mov
lea
xchg
fs
xchg
mov
call
dec
jmp
dec
sbb
add
stc
inc
inc
test
xchg
aad
cld
(bad)
ret
dec
(bad)
xchg
pusha
aas
movs
pushf
jb
ins
cdq
test
dec
or
mov
mov
mov
pop
push
inc
enter
ret
sahf
rcl
mov
in
cmc
ss
xor
adc
cmp
and
adc
das
push
jmp
scas
es
sbb
scas
loop
out
xor
mov
lock
jg
adc
(bad)
ins
or
cdq
rcl
cmps
and
cwde
data16
pushf
adc
cmp
(bad)
add
push
pushf
xchg
das
movs
pushf
ins
cli
out
daa
mov
push
mov
test
push
jo
mov
pop
xlat
loopne
mov
push
scas
imul
les
cmps
out
inc
bound
push
or
push
cmps
dec
cmp
and
loopne
(bad)
repnz
mov
adc
out
cmp
stc
inc
mov
lahf
nop
mov
cwde
clc
mov
mov
(bad)
and
push
jmp
test
int3
outs
test
stc
jmp
stc
mov
enter
or
dec
mov
pop
bound
bound
repnz
adc
cmp
(bad)
std
xor
pop
jg
test
inc
fnstsw
add
lods
pushf
add
fnstsw
jecxz
data16
and
stos
pop
je
sbb
sbb
adc
cli
addr16
xchg
sub
aas
int
cmp
mov
outs
jmp
cmp
adc
or
inc
ficom
inc
movs
(bad)
neg
inc
das
inc
cli
sub
lods
popf
imul
cld
shl
je
dec
add
sub
out
jecxz
movs
cmc
xchg
enter
mov
add
push
mov
pushf
sbb
in
inc
lods
iret
xor
push
mov
sti
jae
xchg
mov
retf
sub
fucomi
cmp
mov
jecxz
and
fimul
je
inc
sbb
data16
popa
(bad)
sbb
out
retf
push
mov
rcr
push
aas
dec
pusha
repnz
add
imul
movs
scas
bound
fwait
cmp
loopne
mov
adc
or
jbe
cmps
xor
shr
push
test
inc
neg
and
xor
jbe
lods
sbb
cmp
sub
icebp
(bad)
fwait
fs
sub
dec
into
pop
fld
iret
sub
gs
xchg
hlt
in
pop
sbb
add
mov
add
repz
xor
pop
nop
xchg
push
mov
xchg
(bad)
xchg
in
mov
mov
jbe
ss
mov
adc
push
nop
sbb
inc
cmp
mov
movs
mov
push
in
je
adc
and
frstor
(bad)
out
pushf
add
jl
or
loop
cmp
mov
or
loop
repz
add
fwait
adc
or
out
dec
sub
(bad)
out
adc
xchg
inc
jmp
mov
stos
or
pop
loopne
push
ret
add
test
lods
ror
es
pop
push
jle
shl
mov
jmp
fcmovne
jno
(bad)
in
int3
adc
std
repnz
push
in
out
call
jmp
cs
into
aad
int
cmps
fwait
stos
mov
iret
cmp
sti
push
retf
scas
lea
cli
sub
test
out
scas
or
jnp
scas
sub
dec
cdq
ins
xlat
nop
sbb
jl
xchg
cwde
mov
or
mov
scas
test
cld
out
movs
out
mov
dec
xchg
dec
retf
push
xlat
sub
ror
adc
push
dec
cmps
call
arpl
pusha
jmp
xor
jmp
not
loope
test
loopne
xchg
cdq
mov
inc
cli
inc
std
(bad)
popa
jnp
bound
mov
xor
jbe
mov
dec
push
jge
iret
and
outs
pop
mov
fistp
fbld
pop
clc
repnz
pop
push
loop
sar
icebp
and
dec
sbb
dec
mov
test
fnstsw
pop
ss
mov
jbe
push
mov
dec
or
or
xchg
data16
ror
(bad)
bound
mov
push
sub
inc
cmps
into
not
sti
jmp
or
test
jo
jecxz
in
stc
and
retf
mov
(bad)
popf
loope
fisub
jle
or
dec
popf
icebp
inc
dec
add
lods
cwde
(bad)
in
sub
pop
jmp
adc
retf
jo
mov
mov
test
mov
cmp
test
mov
fdivr
mov
xchg
jne
adc
retf
push
rcr
(bad)
ja
xor
ja
xlat
adc
call
lds
rcl
mov
push
sub
cmps
sub
or
dec
push
push
mov
loopne
fadd
fsubr
cmp
pop
xchg
shl
mov
adc
fcom
cmps
dec
je
imul
es
xchg
cmp
push
mov
retf
xor
mov
rep
push
and
mov
mov
mov
jnp
mov
out
pushf
in
or
inc
jle
outs
push
shl
pop
sub
shl
inc
call
add
inc
sub
cmps
sbb
sub
xor
jbe
inc
mov
push
popa
and
sti
sar
pop
xchg
jo
test
or
jp
adc
and
js
mov
xor
jnp
clc
xchg
jle
pop
inc
or
ret
xchg
and
jbe
repnz
add
add
ret
mov
rcl
shr
mov
(bad)
sub
bnd
sbb
stc
stc
inc
ss
xor
mov
data16
lds
xchg
scas
dec
add
inc
push
xchg
in
sahf
jecxz
push
xchg
add
jp
cmp
sub
test
pop
pop
pop
outs
sbb
mov
and
sub
out
dec
adc
cli
fcomip
inc
jl
dec
dec
aas
push
push
lods
out
cmp
call
push
and
neg
mov
rcl
xchg
adc
xchg
adc
xor
mov
in
mov
cmp
fisubr
cmp
mov
and
cld
lock
mov
aas
mov
pop
jmp
or
push
loopne
jecxz
repz
cwde
pop
sbb
sbb
xchg
xor
call
and
jg
enter
dec
repz
jp
cwde
push
fs
xchg
mov
(bad)
xor
popf
jl
dec
inc
shl
enter
pop
dec
or
and
dec
pop
stc
mov
adc
inc
dec
iret
test
ss
mov
add
in
stos
aad
pop
ja
hlt
pop
pushf
call
ret
and
mov
mov
idiv
clc
call
xor
fcmovne
popa
mov
or
push
jb
jb
adc
jl
cmc
shl
jg
int
mov
movs
pop
mov
mov
jl
cmp
lods
adc
mov
rcl
jns
sbb
stos
xchg
inc
sub
mov
pop
fnop
lods
nop
retf
popf
mov
xchg
jmp
jge
iret
cmp
inc
sbb
dec
push
icebp
cmc
sub
test
inc
jne
jmp
je
push
jno
cmp
repz
pop
xor
and
jns
ja
sbb
cld
sub
icebp
dec
mov
mov
mov
sahf
or
in
push
inc
fst
out
push
dec
das
sbb
fsubrp
into
xchg
test
cmp
pushf
jbe
sub
or
add
stos
ret
test
popa
push
jns
jne
mov
movs
xchg
add
pop
mov
rol
out
ret
jno
cs
shl
(bad)
and
popa
invd
xor
in
dec
rol
jb
hlt
mov
or
xchg
cmp
pushf
push
ror
out
or
cmp
shl
cwde
xchg
adc
or
mov
mov
jne
sub
out
enter
stos
loope
sub
shl
sub
inc
sti
jmp
(bad)
sub
xchg
pop
(bad)
test
cmps
dec
xor
pinsrw
leave
movs
push
jp
xor
jle
stc
sub
rol
hlt
(bad)
mov
cmp
retf
movs
int
cmp
inc
pop
cdq
scas
or
pusha
(bad)
ins
int3
add
sub
aam
int
cmc
pop
xor
fsubrp
bound
push
push
sub
or
inc
adc
add
out
test
rcr
dec
pop
out
int3
(bad)
lock
sbb
mov
ds
xchg
das
movs
daa
inc
aaa
or
sbb
lahf
jo
cmps
and
fdiv
xchg
in
leave
sub
iret
imul
aas
das
xor
inc
inc
cmc
in
xor
(bad)
mov
dec
aad
xchg
pop
ja
xchg
inc
fisttp
aaa
nop
retf
jg
rol
(bad)
int3
retf
jge
inc
test
(bad)
pop
xor
cmp
fidiv
pop
rcr
int
sub
or
stos
ret
shr
pop
outs
push
mov
jmp
add
pop
les
or
xlat
int3
dec
mov
inc
call
xchg
jnp
cmp
ds
add
mov
inc
fstp
stos
call
clc
fucomi
push
xchg
jns
add
jmp
xchg
stos
test
arpl
mov
dec
call
mov
or
js
mov
dec
mov
cs
jno
fiadd
shl
mov
add
push
jp
lahf
loope
bound
xlat
or
xor
stc
or
int3
push
mov
ret
test
dec
jb
or
cmp
fild
add
jo
popf
dec
arpl
pop
loope
int
sbb
inc
pop
call
fst
jge
jnp
loop
pop
fcmovnbe
sub
inc
in
pop
fisub
pop
push
push
(bad)
cmp
xchg
pushf
sub
cmp
jne
in
and
pop
popf
and
scas
(bad)
mov
cld
out
imul
adc
ins
jecxz
popa
cmp
aam
add
test
shl
push
rcr
dec
mov
xor
scas
fwait
add
mov
pop
jecxz
adc
jo
mov
jg
xor
add
call
jle
lea
xchg
stos
out
daa
push
sbb
sbb
rcr
dec
or
nop
dec
jbe
inc
pop
add
popa
mov
pop
nop
in
adc
sbb
dec
jmp
inc
ss
and
stc
add
out
jb
rcl
jbe
xchg
pop
imul
int3
loopne
frstor
push
add
xchg
ins
fwait
jne
fbld
les
jp
ror
jg
scas
je
lds
lahf
test
scas
out
mov
push
loope
outs
cmp
xor
in
fistp
repz
ret
fnstcw
push
fcom
das
aad
sub
jb
mov
jmp
and
iret
adc
pop
adc
pusha
addr16
jge
jle
mov
hlt
ficomp
or
xchg
leave
fild
mov
fwait
cs
sti
pop
jo
test
mov
ds
xchg
das
shl
lods
jbe
addr16
outs
into
test
jle
cmp
(bad)
sub
sahf
jb
xor
push
mov
js
imul
loope
sbb
fld
leave
inc
sub
xchg
fiadd
inc
ss
dec
(bad)
fild
stos
and
push
push
mov
rcl
cmp
loope
xor
nop
enter
les
push
mov
jp
fimul
inc
aad
test
repnz
sbb
fiadd
xchg
repz
ins
xchg
xchg
mov
icebp
in
aad
lock
outs
mov
fs
mov
js
pop
sar
ins
and
sbb
or
jmp
sahf
mov
jns
ja
push
cwde
cmp
push
jp
jno
and
cdq
lods
(bad)
xor
(bad)
fstp
add
movs
scas
pop
mov
sub
pop
xor
mov
jmp
in
adc
or
or
ds
xchg
cmp
inc
outs
sbb
push
lahf
xor
mov
cmps
cmp
cli
js
jnp
push
pop
mov
push
xor
mov
call
or
retf
and
jmp
mov
out
or
jno
mov
pop
in
sbb
jl
call
or
in
sbb
sbb
aaa
test
movs
out
repnz
push
pop
ss
jle
leave
enter
mov
push
add
fwait
xchg
sbb
adc
lods
sbb
mov
mov
dec
inc
sub
psrlq
jnp
sahf
mov
or
aas
adc
in
or
push
xchg
mov
cmps
add
dec
lahf
fadd
mov
ins
push
lods
pop
mov
arpl
test
into
call
dec
add
xchg
xchg
pop
adc
test
pop
jbe
ja
hlt
outs
inc
fwait
sbb
fwait
movs
cli
dec
push
xor
arpl
(bad)
mov
mov
imul
dec
mov
dec
and
addr16
pop
addr16
imul
add
push
jae
sub
mov
adc
mov
retf
pop
jae
fild
add
imul
fnstenv
rol
aad
int3
rcr
cdq
cmp
outs
cmp
mov
es
push
lock
jp
inc
jbe
(bad)
xchg
jmp
popa
xchg
not
fstp
push
ret
repz
gs
mov
test
adc
lea
test
jns
add
push
mov
fstp
or
sbb
add
xor
adc
mov
rol
scas
pop
in
ins
jl
cmp
and
mov
dec
jnp
dec
xchg
add
xor
lahf
adc
sahf
jg
add
sub
loop
sbb
sub
mov
mov
fdiv
cld
(bad)
mov
je
xchg
nop
push
mov
loopne
retf
jbe
cmps
cld
xor
push
jp
cmp
mov
fbld
repnz
scas
jp
retf
sahf
adc
xor
cli
pop
inc
std
sbb
shl
pop
and
cmp
stos
mov
out
mov
adc
and
das
pop
jae
bound
adc
(bad)
mov
(bad)
fst
adc
sbb
inc
cmp
pop
das
or
int
(bad)
mov
xor
mov
jg
pop
sbb
xchg
cmp
mov
pop
imul
mov
adc
mov
xchg
pop
push
stos
push
icebp
mov
push
or
nop
test
stos
aaa
pusha
adc
inc
pop
pop
mov
mov
pop
test
in
cmovo
test
hlt
(bad)
lahf
or
sbb
(bad)
mov
pushf
fild
enter
push
inc
push
clc
aaa
sub
cwde
xchg
add
push
pop
cmp
je
cmp
arpl
and
fptan
test
xchg
add
jecxz
fld
rol
and
cwde
pop
jp
dec
lods
and
shl
push
adc
mov
iret
push
jmp
mov
cmc
dec
loope
fisubr
pop
sub
jecxz
arpl
ss
push
sbb
icebp
pop
call
aad
nop
arpl
or
cli
aad
hlt
aam
ds
cmp
mov
mov
jns
jle
neg
or
test
lods
gs
sub
loopne
or
pop
ret
and
cld
int
xor
and
push
cmp
dec
sub
retf
xchg
loop
or
dec
xchg
sbb
mov
cmc
data16
into
ss
pop
loop
jb
push
sub
xor
call
aaa
adc
call
mov
cmp
push
adc
sbb
cmps
call
or
call
xor
hlt
jno
les
push
mov
mov
pop
push
inc
sbb
and
xchg
pop
or
mov
dec
bnd
lods
mov
cdq
(bad)
retf
or
jg
ret
jle
es
out
fcomp
adc
xor
(bad)
mov
ins
mov
pop
inc
movs
dec
icebp
cmp
xor
stos
mov
popf
push
(bad)
repz
out
add
mov
push
test
xchg
fldcw
scas
sbb
cmp
popa
mov
bound
in
retf
out
test
adc
cmp
push
call
mov
xchg
push
adc
xor
test
enter
push
jo
fst
fimul
(bad)
adc
cli
xor
mov
or
imul
xor
inc
nop
fnsave
xchg
repz
bound
push
clc
jno
jnp
(bad)
je
test
pop
test
out
inc
into
inc
cdq
inc
movs
js
neg
mov
jecxz
pop
add
mov
pushf
adc
(bad)
sti
daa
ja
loope
xor
and
adc
jecxz
cmp
and
std
idiv
xchg
push
cld
popa
ret
adc
or
ret
xchg
nop
call
pop
pop
xchg
pop
cmc
fsub
mov
jae
adc
mov
jge
and
add
push
lods
dec
mov
adc
adc
pushf
cdq
xor
push
cmp
xor
ret
cld
push
shr
retf
mov
cmp
pushf
ss
imul
add
xchg
push
jb
add
mov
cwde
or
mov
sahf
arpl
xlat
mov
inc
xor
mov
sbb
test
popf
outs
add
ret
(bad)
(bad)
mov
aaa
fwait
retf
sub
in
or
pop
movs
shl
mov
cli
xchg
mov
stos
mov
sbb
arpl
sti
sbb
stc
mov
adc
dec
xchg
fisttp
jg
es
ins
jge
inc
xor
push
push
sub
cli
cmp
sbb
xchg
enter
cmp
cmp
test
dec
cdq
aas
rcl
adc
adc
fstp
outs
cmp
loop
popf
cdq
pop
ds
pop
jns
mov
repz
push
jle
push
mov
pop
repz
mov
cld
cmp
and
or
mov
pop
vcmppd
lods
pop
in
lock
gs
dec
in
push
(bad)
bound
fidiv
pop
out
int
in
xor
sbb
mov
adc
sbb
jmp
sti
jp
sti
sub
je
mov
push
xor
sub
stos
(bad)
mov
jns
into
mov
pop
dec
xor
(bad)
(bad)
das
xlat
adc
sbb
ficomp
or
inc
xchg
jp
neg
(bad)
push
xchg
xchg
retf
jo
std
les
mov
clc
(bad)
sti
mov
sar
pop
out
retf
int
stc
inc
jge
add
and
repnz
ret
sbb
dec
gs
ins
pushf
ss
pop
push
xchg
inc
dec
mov
mov
aad
rol
int3
mov
or
rcr
sbb
jecxz
ret
pushf
jmp
fst
sub
stc
inc
mov
aam
fwait
gs
jbe
ret
std
mov
mov
outs
loopne
fmul
sub
dec
and
dec
loop
aas
jg
and
push
cmp
sbb
clc
jo
or
in
add
nop
or
mov
bndstx
ins
ja
cmp
in
cmps
sbb
dec
mov
in
popf
xor
repnz
lods
cs
xchg
or
sti
pop
fsubr
stos
cmp
or
jecxz
push
mov
mov
cmp
setp
push
call
push
dec
sub
in
ror
ret
add
push
pop
xchg
pushf
(bad)
mov
sub
cmp
pop
or
lods
and
push
xchg
in
inc
xor
fs
mov
xor
add
dec
push
and
movs
aam
nop
inc
aad
je
mov
add
and
and
retf
xlat
jg
sub
lods
hlt
xadd
aaa
mov
out
out
gs
push
or
scas
push
mov
cmc
mov
das
and
imul
or
sbb
and
pushf
sub
push
or
pop
fisttp
inc
inc
dec
fwait
retf
out
pushf
out
add
inc
sub
stc
pop
mov
mov
fsubp
xor
mov
out
mov
jp
or
not
sbb
(bad)
jne
xor
add
pop
jae
jp
das
mov
dec
int3
test
add
xor
bound
and
xor
mov
rcr
push
push
pop
rol
sbb
aad
pop
sub
cmp
out
outs
jb
mov
jmp
mov
das
int3
push
out
sub
ja
pop
cmp
les
cmp
rcr
sbb
pop
test
lea
sub
scas
xchg
aam
mov
out
or
xchg
(bad)
fiadd
xor
fidiv
pop
add
inc
mov
and
pop
ror
lods
xchg
test
sub
sbb
mov
inc
ret
pop
sahf
loop
add
cmps
cs
or
movs
fwait
mov
les
sub
inc
inc
sbb
int3
push
sbb
mov
shr
and
pushf
and
mov
cmp
shl
lods
jecxz
mov
leave
lea
retf
mov
jns
fninit
mov
call
gs
sub
mov
sbb
mov
xchg
sbb
pop
pop
movs
adc
iret
in
and
push
in
push
lahf
inc
pop
xchg
cmp
cmp
sbb
leave
test
adc
test
xchg
xchg
imul
mov
sbb
adc
cmp
fnstcw
sahf
sbb
lea
mov
rcl
out
int
inc
out
or
aaa
int
pop
jmp
jns
jae
and
xor
hlt
es
adc
push
dec
data16
xlat
dec
and
adc
cmc
adc
mov
fld
ins
sub
cmp
popa
push
sbb
psllq
xchg
out
not
adc
xor
cmp
fiadd
add
mov
dec
repz
lea
outs
push
push
mov
pusha
inc
mov
mul
popa
push
push
test
fdiv
adc
stos
fsub
leave
es
jb
dec
pusha
xor
pop
call
add
mov
sbb
cmp
or
mov
pushf
(bad)
sbb
pop
aas
jb
adc
mov
inc
ins
mov
push
(bad)
cwde
fsubr
mov
mov
div
int
and
ficomp
cwde
pop
cmps
test
int
dec
fdivr
jmp
and
pop
daa
sahf
xchg
sbb
push
mov
mov
out
ds
adc
inc
lea
mov
lock
iret
mov
inc
jmp
xor
jns
ss
fbld
or
or
and
scas
sbb
xor
jge
inc
mov
xchg
cdq
maskmovq
test
jno
sbb
sub
movs
pop
xchg
cmp
add
or
or
jne
rcl
rol
inc
(bad)
jp
das
jmp
lods
fist
int3
ror
pushf
jmp
sub
ja
or
mov
aad
clc
mov
xchg
mov
aad
sar
add
xchg
cmp
sub
rcr
adc
jmp
jns
mov
(bad)
movs
adc
sbb
push
pop
or
mov
push
popf
xor
cmp
cmc
mov
int3
or
popa
mov
cmps
cmp
in
dec
or
sbb
add
jecxz
outs
(bad)
ret
sbb
and
cmps
shl
call
mov
mov
test
cmp
xor
test
in
add
xor
aaa
adc
in
fild
jae
call
scas
xchg
pop
jno
jle
mov
xchg
aaa
out
jbe
lods
clc
adc
mov
leave
sbb
pop
sbb
or
cmp
cmc
push
retf
out
xor
dec
push
(bad)
mov
and
jns
and
ss
test
repz
mov
repnz
and
dec
mov
(bad)
call
xor
dec
xor
xchg
retf
mov
(bad)
cs
rcl
(bad)
popa
scas
sbb
rol
fbstp
cmp
dec
ins
out
adc
test
cmc
xchg
arpl
jmp
unpcklps
inc
mov
out
pop
(bad)
daa
call
ret
sbb
sub
mov
in
in
test
retf
fwait
retf
fsub
imul
mov
fsubr
(bad)
pop
clc
out
cmp
push
mov
neg
push
or
jecxz
dec
xchg
sahf
imul
cdq
data16
sbb
pop
push
pop
mov
xchg
sbb
out
jmp
retf
xchg
mov
jmp
adc
std
lea
fdivr
sbb
test
pop
pop
je
frstor
ret
(bad)
sub
adc
jg
test
mov
cs
retf
inc
xchg
mov
dec
imul
push
xchg
cmp
(bad)
mov
push
add
push
call
jmp
mov
sbb
repz
adc
dec
in
push
js
adc
sub
retf
aad
mov
scas
adc
in
add
stc
movs
jbe
push
loop
mov
mov
shl
rcr
imul
lock
test
(bad)
gs
xchg
fst
repnz
lods
popf
inc
into
cwde
scas
mov
(bad)
ins
dec
out
in
and
jmp
movs
add
sub
pusha
nop
in
xchg
fs
lods
(bad)
xor
idiv
in
xchg
stos
mov
enter
scas
repnz
push
cmps
xchg
jb
das
les
jns
pushf
ret
in
test
jno
xchg
int
loopne
mov
push
int
or
jae
mov
jl
div
push
daa
stos
add
push
(bad)
xchg
xchg
(bad)
mov
test
and
les
hlt
jmp
dec
test
mov
sbb
sub
fcomp
inc
outs
out
test
dec
mov
dec
or
mov
js
xor
dec
int
jecxz
cmc
(bad)
sbb
call
fs
test
gs
leave
lahf
push
pop
fsubrp
mov
add
xchg
pop
push
in
loop
jecxz
out
gs
movs
mov
pusha
jo
aad
rcr
push
(bad)
pop
mov
jne
sbb
mov
dec
clc
sub
(bad)
in
pushf
sub
sbb
sbb
mov
jnp
xor
cmp
push
and
bound
add
jno
mov
mov
(bad)
jo
or
gs
imul
jle
cmp
lock
or
sbb
adc
pop
sbb
test
pop
and
ja
mov
mov
das
int
jmp
push
xchg
jae
into
pop
adc
jns
retf
iret
lahf
xor
retf
inc
fwait
lahf
mov
out
mov
lds
jno
xchg
dec
scas
dec
mov
push
cld
test
dec
outs
inc
jae
data16
popf
and
jbe
retf
add
cmpxchg
stos
in
adc
adc
push
rcr
pop
scas
mov
addr16
mov
out
repz
popf
jmp
fisub
lods
cli
fistp
add
jmp
retf
pop
push
loope
jl
xor
lahf
jnp
adc
scas
in
inc
ret
pop
lds
dec
sub
movs
shl
test
mov
inc
pop
stc
popf
int
xchg
xchg
jbe
mov
jnp
add
dec
sahf
cmp
imul
mov
or
loopne
test
sub
xchg
cwde
(bad)
cmp
mov
cmp
imul
fld
mov
cmp
mov
mov
das
adc
cmps
fs
icebp
or
adc
dec
adc
pop
ror
jmp
cmc
inc
push
push
jmp
mov
stos
inc
loopne
add
and
je
push
xchg
fdiv
out
push
pop
cmps
clc
push
xor
or
dec
pop
jl
js
stos
loope
push
cmp
shl
out
cmps
xor
and
xlat
jmp
push
pop
add
jnp
xchg
inc
out
adc
inc
jp
sbb
jmp
cmp
xchg
aam
push
inc
ror
out
pop
lea
jge
outs
mov
call
jae
stos
shr
xor
mov
(bad)
aam
and
xchg
sub
or
mov
push
cmp
xchg
cs
rcl
xor
cmp
mov
and
and
push
adc
pop
int
icebp
or
xor
gs
loopne
inc
(bad)
mov
sti
sub
in
and
call
(bad)
xchg
adc
hlt
movs
inc
sbb
add
adc
dec
and
cmc
push
ins
and
scas
inc
adc
push
jmp
data16
xor
ret
imul
(bad)
sar
fld
pop
jo
mov
inc
or
scas
into
nop
push
ss
(bad)
mov
adc
(bad)
cmp
push
out
cli
dec
dec
and
pushf
rcr
test
mov
(bad)
jb
daa
xlat
dec
clc
mov
jle
in
fdivr
nop
mov
cmp
ret
or
fucom
mov
cs
xlat
cmp
inc
jmp
or
nop
xchg
xsavec
in
xor
inc
sbb
sbb
pushf
add
enter
sbb
scas
mov
or
aas
cmp
jge
data16
retf
je
cs
push
das
adc
scas
js
sti
mov
inc
cld
pop
shr
dec
dec
cmp
mov
xchg
scas
repnz
scas
cld
retf
push
mov
das
int
push
xchg
jmp
frstor
inc
mov
mov
shl
movs
lods
test
dec
xor
xchg
cmp
jp
shr
dec
push
into
mov
jnp
pushf
outs
xor
stos
mov
dec
xchg
hlt
push
lods
push
inc
mov
xchg
and
mov
je
adc
push
in
mov
mov
jnp
inc
cdq
dec
icebp
ror
jmp
stos
dec
(bad)
test
inc
xchg
xor
and
(bad)
ret
mov
lods
fucomi
pop
cli
test
pop
ror
mov
retf
inc
leave
into
mov
pop
(bad)
xor
jmp
(bad)
pop
push
jbe
not
or
ss
ret
(bad)
movs
(bad)
pop
enter
aad
cli
lds
mov
sub
mov
or
mov
pushf
movs
out
push
cmps
jmp
add
add
loope
inc
xor
(bad)
cmp
add
add
arpl
std
pop
dec
popf
xor
xchg
ja
xchg
rol
push
mov
xchg
loopne
iret
xor
and
cwde
adc
mov
cmps
int3
pop
jae
jae
xchg
xor
cmps
mov
jge
inc
cdq
call
fwait
or
xchg
neg
cli
bound
inc
pop
fcomp
js
dec
xor
lahf
aad
test
mov
cmp
scas
jb
out
scas
inc
int3
push
or
cmp
aam
test
add
ins
jo
test
jmp
adc
lea
or
addr16
pop
test
xor
xor
mov
xchg
(bad)
sub
rol
sub
popf
not
aas
mov
(bad)
cwde
repnz
mov
(bad)
mov
dec
cli
into
mov
aam
push
jmp
cli
cdq
mov
cmp
push
jmp
arpl
xchg
dec
cmps
mov
or
pop
ror
imul
sahf
lds
popa
cmp
scas
pop
mov
jp
test
dec
mov
xor
cmp
(bad)
sahf
pop
mov
and
or
imul
jns
in
hlt
mov
imul
push
loop
inc
bound
push
shl
ret
dec
rcl
push
scas
out
dec
cmp
push
mov
call
jmp
pop
mov
push
sar
inc
xor
pop
xchg
(bad)
push
js
scas
in
ins
dec
add
lock
fwait
cld
sbb
sbb
adc
xchg
pop
push
jns
ss
ret
das
out
js
dec
pop
jne
xchg
mov
jns
sbb
mov
aas
js
push
(bad)
add
push
loopne
inc
(bad)
xchg
pop
(bad)
or
pop
mov
shl
rol
std
adc
mov
push
dec
lock
(bad)
ret
idiv
call
les
jnp
add
pop
and
mov
mov
jp
fcomp
fsub
aas
aad
inc
push
test
jg
fsub
and
or
call
hlt
cmp
fwait
sub
cwde
fdiv
jo
ret
mov
popa
push
mov
aad
pop
ins
cs
outs
retf
out
inc
sti
pop
cmp
aaa
in
inc
push
pusha
fcompp
mov
outs
call
sbb
outs
pop
stc
or
sbb
xchg
or
test
nop
jne
inc
xchg
(bad)
std
xchg
shl
(bad)
scas
(bad)
and
dec
xchg
xor
aas
fs
and
pop
add
retf
adc
clc
cmps
mov
sti
ds
adc
push
and
inc
scas
add
and
cli
js
mov
mov
pop
sbb
push
push
lock
push
out
(bad)
gs
xor
mov
jmp
cwde
test
xchg
scas
test
mov
sbb
scas
adc
pop
js
sub
or
or
dec
sbb
pop
push
inc
cmp
push
mov
sti
mov
xchg
pop
jecxz
pop
xchg
mov
retf
imul
dec
in
cmp
pop
loop
dec
ja
(bad)
in
xor
fisub
fdivr
sbb
stos
(bad)
mov
mov
gs
cmp
cmp
popf
xchg
mov
inc
je
lds
and
imul
mov
lods
pop
sbb
sbb
popa
mov
(bad)
adc
out
pop
fst
sbb
jae
aad
ret
jge
inc
jl
or
cmp
inc
in
cs
call
pop
jge
jp
mov
icebp
xchg
ret
pop
add
sub
cmp
clc
mov
leave
cld
test
xchg
aas
cmps
mov
or
dec
imul
enter
mov
enter
adc
dec
dec
test
mov
sbb
dec
mov
pop
dec
pusha
js
int3
cmp
ret
pop
addr16
aad
je
fcmovb
or
(bad)
imul
pop
mov
adc
mov
pop
cld
mov
les
fdivr
xor
sub
pop
icebp
mov
push
inc
test
sub
das
mov
adc
adc
inc
out
adc
or
(bad)
das
iret
xor
pop
pop
or
add
jno
ins
addr16
xchg
fidivr
(bad)
neg
leave
push
pop
jo
sahf
push
rcr
xchg
(bad)
fcmovnb
adc
inc
imul
mov
in
stos
mov
les
inc
xchg
rcr
and
repz
mov
jb
ret
push
popa
cwde
add
mov
fwait
mov
adc
add
xchg
rcr
mov
sub
ret
xchg
ret
pop
ret
jl
push
sbb
sahf
pop
cmps
jnp
in
jle
cmc
add
add
jmp
pop
outs
add
cmp
jecxz
in
xchg
and
xor
pop
sbb
ins
or
or
xor
jle
fistp
lock
aas
cmp
sub
jbe
jp
mov
xchg
xor
sub
mov
scas
mov
jno
xor
test
clc
pop
stos
or
mov
xchg
(bad)
xchg
jo
addr16
inc
sahf
out
push
loope
(bad)
sar
jbe
pop
sub
lods
lahf
mov
fs
and
mov
cmp
loope
sar
inc
xchg
loopne
cli
cmc
mov
add
pop
cmp
ja
retf
cmp
cdq
jne
cmc
or
push
push
xchg
ret
loopne
test
cmovg
stos
and
lods
dec
push
addr16
pop
int
fist
adc
fild
dec
sbb
sti
adc
or
aas
mov
mov
push
(bad)
mov
int3
loope
pop
pop
je
jl
jbe
and
jbe
mov
push
das
inc
fisttp
mov
arpl
les
inc
lods
cdq
shr
test
das
retf
inc
fist
call
ffree
inc
iret
aaa
fnstenv
add
adc
imul
xor
iret
mov
test
xchg
push
cmp
jmp
dec
call
jmp
jb
pushf
pop
adc
xchg
dec
leave
adc
xor
sub
pop
scas
adc
sahf
arpl
cwde
push
xchg
scas
sub
(bad)
gs
and
fsub
push
cli
and
inc
test
mov
mov
xor
sahf
and
ja
imul
or
xor
dec
jmp
leave
aas
inc
pop
cmp
xchg
dec
std
ins
inc
fdivrp
and
leave
xchg
xlat
cli
xchg
xchg
call
pop
cmc
jbe
bnd
ret
or
hlt
int3
je
jg
push
inc
jl
pusha
hlt
push
loopne
dec
ins
clc
xor
sbb
outs
xor
(bad)
dec
inc
and
je
in
add
cmp
je
icebp
test
mov
fld
sub
add
or
imul
push
add
mov
sub
xor
adc
cmp
mov
jle
inc
retf
xchg
mov
test
dec
ret
dec
cld
jno
or
inc
loope
fnsave
nop
loope
stos
sbb
inc
adc
push
popa
pop
je
in
movs
cli
jne
enter
aas
in
jb
cmc
mov
in
or
pushf
ins
imul
and
jecxz
or
cmp
pop
xchg
push
fcomp
mov
inc
inc
aaa
lea
mov
aaa
mov
neg
movs
icebp
es
adc
jl
popa
push
call
aas
repz
imul
cdq
cmc
call
fmul
test
ds
nop
scas
fdivr
add
cld
adc
xor
outs
add
nop
inc
push
xor
dec
aad
mov
(bad)
jg
xor
mov
mov
mov
push
sub
and
xor
push
xlat
lods
inc
out
sbb
adc
jmp
dec
bswap
xchg
fild
jb
push
or
icebp
or
adc
mov
adc
call
stos
popf
pop
jb
jl
out
sbb
pop
enter
xchg
test
dec
sbb
pop
dec
pop
int
retf
jns
push
mov
mov
push
shr
push
mov
cmp
adc
push
test
(bad)
cmp
or
enter
or
add
stc
adc
push
cmp
mov
dec
mov
or
(bad)
and
sub
out
dec
sub
pushf
lods
and
int
cmps
inc
stc
mov
sbb
push
mov
rcl
neg
je
jns
inc
(bad)
paddsb
addr16
push
add
mov
adc
pop
mov
out
in
popa
xor
or
les
inc
cld
jmp
shl
push
out
or
int
je
adc
jle
ja
dec
mov
lea
dec
gs
adc
xchg
call
push
cmps
sub
jle
(bad)
rcl
je
shl
inc
inc
sbb
out
out
push
ret
jne
in
das
pop
dec
mov
jg
dec
ins
(bad)
aaa
push
cmp
fdiv
xor
pop
mov
jecxz
cdq
(bad)
shl
jecxz
es
stos
inc
push
push
add
xchg
xor
test
jo
cmc
pop
stos
adc
ja
icebp
adc
inc
repnz
mov
scas
fs
xchg
dec
jae
js
and
fsubr
sbb
popa
retf
push
add
fnsave
sahf
mov
sti
fwait
pusha
push
imul
push
jae
test
outs
xchg
jg
jne
les
adc
mov
pop
and
mov
jbe
push
hlt
pop
ret
ds
push
pop
push
ret
push
inc
in
adc
push
jnp
cmp
xchg
repz
push
sbb
leave
add
fstp
je
xchg
stos
stos
jbe
out
dec
jne
sahf
pushf
loopne
into
sbb
jecxz
fwait
pop
or
iret
pop
inc
std
and
mov
mov
test
shl
stos
sahf
gs
int3
stos
add
scas
dec
int
aad
int3
cwde
(bad)
into
retf
imul
addr16
bound
popf
loope
stos
push
push
dec
fisub
xchg
lahf
dec
inc
inc
dec
push
ret
stc
js
push
int
inc
repnz
lock
dec
adc
or
pop
aas
cs
je
ret
add
xchg
ja
push
adc
dec
xchg
cmp
loop
xor
xor
std
pop
in
fwait
and
(bad)
jle
cmp
inc
shl
int3
int
lea
xor
outs
loopne
mov
mov
xlat
jmp
jo
data16
shl
stos
ret
pop
jb
lds
pop
sub
xor
in
sbb
mov
mov
loopne
and
test
popa
aad
imul
xor
pop
jnp
stos
sub
aad
cmc
adc
sti
(bad)
xchg
jne
push
mov
dec
jnp
sub
push
jmp
jp
cmp
mov
inc
out
mov
push
xlat
cmps
sbb
(bad)
aaa
jmp
dec
jp
jb
into
sub
and
bound
sub
ficom
add
test
cmp
mov
lea
jno
jge
loop
push
add
push
cld
icebp
push
std
movs
(bad)
pop
std
iret
sbb
or
dec
int3
ret
in
push
xor
repnz
cmps
dec
aaa
mov
enter
lahf
push
mov
sahf
out
retf
int
pop
mov
cld
dec
sar
out
fisub
cmps
imul
push
enter
adc
(bad)
ja
jnp
mov
xchg
push
and
sub
xchg
and
mov
pushf
in
add
gs
inc
lea
adc
enter
test
int3
push
cdq
ins
and
lods
ss
adc
mov
fsub
xchg
loope
mov
mov
imul
setne
sub
pop
cmp
mov
sbb
mov
ins
adc
push
(bad)
pop
push
hlt
(bad)
mov
inc
(bad)
lods
ret
(bad)
and
push
mov
lock
push
sbb
pop
call
imul
sub
inc
mov
ret
ds
imul
repnz
inc
rcl
adc
fldcw
es
xor
in
push
sti
outs
ins
mov
fs
shr
test
mov
pop
fs
push
daa
mov
lods
(bad)
jnp
jle
xchg
test
inc
scas
leave
or
add
push
xchg
pop
js
retf
mov
xor
out
or
sub
scas
aaa
xchg
maxps
les
push
in
ss
imul
and
xor
and
ds
int
sbb
call
loop
call
aaa
inc
clc
adc
xor
sub
das
repz
je
cmp
in
jp
xor
call
aad
dec
rol
or
mov
stos
dec
mov
pop
out
(bad)
fld
xor
push
fnstsw
loope
mov
imul
lds
aad
call
pushf
pop
jmp
sub
xchg
imul
push
dec
outs
sahf
push
xchg
push
push
cmps
mov
in
lods
ins
fistp
fnsave
shl
mov
cmps
xlat
loop
pop
push
loope
stc
pop
cmc
ret
ins
or
fstp
in
add
pop
(bad)
or
test
mov
inc
sar
(bad)
jo
arpl
fldcw
leave
dec
jmp
ffreep
dec
xor
fimul
or
paddd
dec
dec
(bad)
push
das
in
and
pop
mov
mov
push
jmp
add
mov
leave
push
stos
in
ins
retf
std
scas
sub
sub
mov
fst
inc
shl
xchg
cli
jb
xor
and
dec
fdiv
cmc
dec
loope
jmp
xchg
rol
push
push
or
enter
adc
inc
push
cld
or
add
cmp
test
call
(bad)
icebp
xchg
aad
sub
pop
aam
push
sbb
xor
add
(bad)
retf
push
(bad)
cmp
sub
pop
jo
push
out
push
sub
mov
sub
ins
add
mov
xor
add
jne
jl
dec
movs
xchg
adc
mov
cmps
ins
cmp
ret
sub
dec
pop
loope
push
sub
std
int3
xchg
and
hlt
cld
push
push
sbb
icebp
stc
sub
xor
iret
and
jecxz
rcr
inc
cmp
dec
fs
shr
nop
dec
inc
fnop
mov
push
dec
cmp
les
arpl
push
adc
pop
(bad)
jle
sub
loop
outs
fstp
in
push
mov
dec
xchg
fbstp
in
mov
into
into
mov
push
mov
repnz
push
pop
pop
jecxz
jmp
mov
lock
jb
push
outs
dec
jp
gs
(bad)
iret
sbb
div
out
sbb
in
pop
sub
dec
xchg
jmp
js
out
cmp
cdq
daa
retf
cmc
(bad)
imul
mov
sub
add
ins
jle
iret
hlt
data16
jno
jmp
out
dec
push
fmul
js
cmp
mov
jmp
pop
shr
push
dec
shl
push
mul
pop
xchg
add
rcr
xor
pop
xchg
jmp
ins
or
imul
mov
jmp
int
inc
pop
aad
cmp
scas
jmp
sub
cdq
mov
sbb
inc
lods
mov
mov
retf
push
push
mov
adc
scas
cld
sub
mov
mov
fwait
out
push
and
pop
sar
scas
add
xchg
fldcw
push
jne
ret
mov
hlt
push
sub
xor
add
mov
popf
fcom
fsubr
(bad)
cdq
test
ja
cs
inc
mov
test
(bad)
ja
mov
out
cmps
pop
xor
fidiv
add
dec
jb
adc
mov
icebp
inc
iret
out
add
cmp
imul
cmps
jnp
xchg
sbb
mov
(bad)
out
not
stos
in
mov
stos
sbb
stos
pop
cmp
in
cld
out
push
jl
shl
sbb
fwait
jbe
pop
mov
push
pop
jg
mov
add
xchg
repz
cmc
mov
xchg
movs
sub
and
mov
cmp
mov
jmp
cmp
xchg
int
rcr
es
add
icebp
rcl
stos
in
sahf
aad
sahf
lahf
adc
bound
fmulp
clc
inc
adc
into
je
adc
sbb
push
cmp
cmc
sub
sub
and
cld
loope
push
xchg
xlat
fisubr
stos
popf
dec
mov
pop
lds
jecxz
adc
ret
das
mov
idiv
inc
scas
stc
or
imul
push
cmp
xor
aaa
bound
enter
fdiv
fisubr
loop
or
sbb
ja
mov
and
push
stos
(bad)
and
stos
adc
push
inc
cmp
fidiv
js
clc
xchg
into
add
std
ins
xor
xchg
stc
fiadd
xchg
xchg
mov
mul
jecxz
pusha
retf
bound
(bad)
loopne
xlat
cmps
sub
or
(bad)
loop
adc
or
cmp
jecxz
adc
sub
adc
mov
mov
add
xchg
push
loope
inc
stos
sub
adc
lds
nop
imul
dec
imul
das
in
adc
push
inc
jb
jp
sbb
rcl
popa
add
ret
retf
idiv
sbb
inc
inc
mov
add
or
repz
dec
jns
push
jb
test
pusha
ss
ds
jecxz
or
aad
(bad)
std
mov
lock
pop
shr
sar
sti
cmps
or
data16
pop
and
cs
ja
jg
sahf
leave
or
bound
mov
jno
sahf
cmp
add
pop
pop
jae
mov
ja
cmp
lds
and
mov
fnstcw
test
call
and
jecxz
out
inc
jb
popa
cmp
daa
mov
ds
mov
mov
lahf
or
hlt
ret
cli
sbb
mov
and
push
or
std
mov
(bad)
and
push
aas
and
sahf
xchg
xrelease
jge
cmp
sbb
cmp
cmp
push
and
sti
adc
fdiv
xor
(bad)
mov
push
cmps
mov
jo
loop
out
(bad)
pop
xor
fmul
call
mov
ins
aas
aad
mov
push
cdq
push
xor
sti
repz
mov
jmp
movs
popf
or
mov
mov
in
cdq
imul
or
movs
push
(bad)
mov
dec
int3
cmps
pop
and
mov
mov
dec
cmp
gs
scas
jecxz
mov
shl
ds
mov
xor
stc
push
aas
loopne
into
dec
loop
xchg
or
jge
ret
sbb
pop
or
cmp
paddd
pop
dec
(bad)
ficomp
pop
adc
dec
xor
fnstenv
xchg
dec
cmps
sahf
sbb
cmp
shl
out
or
jmp
dec
lods
mov
bound
stos
push
call
cld
pop
out
sbb
out
push
in
neg
dec
add
aas
fisttp
stos
jge
push
ret
pop
or
rcr
fnsave
pop
out
inc
dec
cmp
loop
mov
jg
pop
retf
addr16
fisubr
xchg
mov
mov
das
lea
adc
jne
shl
adc
(bad)
lock
js
jbe
pop
inc
adc
push
ins
dec
mov
pop
add
dec
push
mov
test
faddp
adc
xor
clc
push
clc
inc
hlt
out
in
inc
mov
cwde
je
add
call
out
adc
jmp
fisub
jns
int3
dec
jbe
xchg
or
out
add
xchg
pop
lahf
loop
cmp
popa
push
outs
push
push
in
mov
pop
pop
test
stos
add
adc
out
arpl
lahf
pop
sbb
jne
xor
push
dec
xchg
xor
sbb
cmp
add
adc
ins
shr
mov
mov
xchg
scas
iret
push
xchg
add
pop
test
and
mov
or
inc
push
or
inc
and
inc
pop
xchg
cs
retf
nop
mov
jb
nop
add
mov
out
cmp
ds
sbb
mov
popf
ins
add
mov
xor
mov
sbb
add
dec
test
mov
xor
jg
add
es
jmp
adc
gs
rcl
jns
xor
sbb
inc
call
mov
fs
test
retf
push
ret
adc
mov
push
cld
pop
mov
push
int
fisttp
rol
and
cs
xor
xor
push
mov
and
pop
cmp
test
out
cwde
je
ror
ins
fwait
(bad)
pop
retf
adc
addr16
lahf
adc
retf
ja
shl
and
and
xor
add
xchg
call
dec
cmp
retf
loope
fwait
xchg
pop
xchg
ss
retf
cmp
leave
add
pop
fsubr
dec
(bad)
jno
adc
adc
sbb
in
and
cmp
pop
xor
sbb
adc
mov
jge
sub
jns
xlat
and
pushf
add
jecxz
push
mov
retf
xchg
retf
jns
in
int3
(bad)
xor
int
or
lahf
inc
call
xor
adc
or
mov
inc
sbb
dec
idiv
or
mov
mov
push
jo
and
or
mov
fwait
pop
sbb
cmps
sub
lds
cdq
xchg
push
sbb
into
pop
(bad)
fistp
mov
in
loopne
cmp
push
lods
out
movs
or
jl
addr16
inc
lods
int
mov
sub
das
inc
in
xor
mov
dec
dec
js
lds
mov
add
pushf
sbb
or
adc
jno
jmp
cmp
and
mov
mov
sub
sbb
dec
ins
push
cmp
pusha
sub
adc
sti
arpl
hlt
(bad)
stos
inc
les
mov
pop
es
lahf
cs
jmp
push
mov
mov
mov
retf
call
pop
push
xchg
mov
jge
pop
cld
int3
or
loopne
mov
add
mul
js
aad
nop
test
inc
dec
test
jne
outs
nop
shl
mov
push
pop
cmp
rcr
dec
or
fadd
(bad)
movs
and
inc
jbe
and
mov
inc
call
out
inc
(bad)
pop
lods
movs
(bad)
in
xchg
sti
mov
cmp
(bad)
popf
lahf
and
dec
nop
fdivp
xchg
daa
loop
ja
std
es
in
in
(bad)
loopne
in
or
repz
ds
icebp
sbb
mov
mov
and
dec
add
inc
ss
mov
addr16
push
pop
or
loop
sbb
xor
mov
pushf
into
pop
ds
movs
aam
std
data16
lahf
popf
cdq
adc
mov
sbb
cmps
mov
scas
bnd
dec
lods
aad
cwde
shl
mov
cwde
mov
test
add
ds
int3
jl
(bad)
(bad)
and
popf
push
mov
mov
pop
sbb
adc
mov
inc
inc
inc
adc
dec
dec
inc
adc
mov
fldenv
fnclex
test
adc
fidivr
ret
adc
jae
adc
xor
leave
sub
movs
mov
dec
or
pop
jp
jge
lods
cmps
push
adc
push
call
xchg
sub
cs
mov
je
inc
and
ins
shl
xchg
es
retf
imul
jmp
fcomp
vphaddubw
ja
mov
add
cmp
(bad)
cmp
jb
lahf
xchg
lods
iret
mov
rcr
cs
jp
lods
add
add
fmul
cmps
repnz
xchg
aad
jecxz
retf
fnstenv
(bad)
bound
lods
cmp
shl
jne
dec
push
mov
popf
out
push
dec
push
(bad)
ds
mov
add
sub
jne
adc
and
inc
scas
pop
push
in
int3
inc
push
sti
xor
aas
push
loopne
sub
cmps
and
out
daa
sbb
(bad)
push
repz
cmp
jecxz
fisubr
ret
fcomp
cmp
outs
hlt
dec
push
adc
ret
outs
daa
sub
test
push
xchg
pop
jae
ins
add
in
gs
bound
test
xor
adc
(bad)
pop
inc
jae
mov
pop
fild
lahf
neg
rcr
xlat
aam
push
and
add
fwait
retf
lock
xor
dec
pop
call
fcmovu
push
jne
repz
lock
out
mov
call
and
ror
sbb
or
ins
adc
xchg
mov
xchg
repz
push
mov
cmp
dec
loopne
cld
and
fmul
sar
dec
push
cli
xor
(bad)
cmp
mov
fild
mov
cs
xchg
(bad)
movs
and
das
lds
add
ins
gs
mov
add
test
aas
mov
adc
or
mov
pop
and
pushf
push
mov
fcmovnu
sbb
aas
sub
aaa
mov
dec
scas
inc
add
add
inc
cwde
ret
(bad)
xor
ss
cmps
mov
(bad)
mov
mov
mov
rol
rcl
jbe
(bad)
imul
dec
mov
sbb
fs
and
sahf
test
and
test
in
cwde
inc
in
push
and
fadd
push
push
outs
fs
loop
arpl
pop
retf
mov
push
dec
sub
ror
xor
daa
jns
scas
jo
iret
jmp
cmc
adc
xchg
inc
push
adc
mov
in
scas
dec
mov
jmp
data16
and
(bad)
or
push
cmps
hlt
and
(bad)
dec
test
out
in
(bad)
xlat
add
dec
fldenv
es
shl
adc
(bad)
xor
int
dec
sbb
mov
xchg
mov
sbb
jb
into
int3
mov
imul
jecxz
sbb
push
mov
mov
mov
ins
pop
sub
pusha
xor
cwde
xchg
aad
pop
sbb
pop
inc
pusha
mov
stos
dec
not
cwde
jecxz
sbb
and
dec
fmulp
inc
in
adc
mov
inc
call
jmp
mov
pop
sbb
dec
daa
add
mov
fld
xchg
or
arpl
in
dec
out
mov
cdq
xchg
ficomp
ds
(bad)
xchg
(bad)
mov
cli
imul
inc
mov
(bad)
or
jo
mov
push
mov
repnz
pop
xor
fmul
imul
das
mov
(bad)
mov
cli
repz
add
dec
imul
movs
popf
leave
enter
adc
in
fyl2xp1
bsf
out
sbb
inc
sbb
xor
mov
jbe
daa
movs
pushf
xor
adc
add
cmp
pusha
mov
call
das
mov
retf
fadd
and
popf
add
pop
sti
jne
push
fist
cmp
push
je
sti
repz
(bad)
adc
pop
sub
push
iret
xchg
fsub
fwait
(bad)
pushf
cld
outs
stc
gs
cmc
(bad)
sbb
cmps
sbb
jb
cmp
cli
sahf
out
das
jo
aad
inc
sbb
dec
sahf
aam
mov
pop
repz
dec
mov
xchg
dec
dec
jmp
mov
cmp
xor
dec
lds
pop
retf
dec
mov
mov
push
sbb
out
ror
sub
inc
cs
and
pop
push
ins
jecxz
jo
cli
xor
inc
push
fistp
xchg
nop
mov
push
cld
sub
xlat
pop
sahf
cmp
fs
movs
pop
and
pop
push
cmp
inc
sub
jae
inc
sub
lahf
pop
outs
sbb
mov
fidivr
mov
xor
enter
cmp
jmp
shl
push
shl
loope
and
retf
push
shr
mov
in
out
xor
loopne
cmp
mov
ja
mov
xor
pusha
scas
mov
loop
xor
lea
sub
ins
or
pop
enter
hlt
or
jbe
outs
sbb
cmp
push
lea
mov
add
pusha
mov
cmps
test
push
mov
xchg
mov
dec
nop
test
jmp
push
arpl
or
push
lahf
ss
int
cli
(bad)
and
hlt
pop
stos
mov
into
cwde
sbb
outs
jmp
aad
cmps
mov
hlt
inc
inc
mov
stos
mov
xchg
cmp
pusha
nop
inc
dec
xchg
xor
(bad)
popf
pop
lock
fbstp
inc
fs
pop
inc
adc
outs
mov
inc
repz
inc
push
and
ins
rcr
dec
mov
retf
mov
adc
or
retf
ins
xor
call
dec
shl
loopne
pop
xor
mov
jge
pop
sub
jae
xchg
cwde
daa
popf
pop
dec
ret
fisttp
cmc
sbb
mov
int
add
hlt
mov
dec
stos
shl
pop
out
add
test
loope
mov
iret
(bad)
mov
push
pop
lods
push
adc
ficom
inc
pop
pop
test
sbb
addr16
adc
rcr
std
push
add
int
push
add
retf
cwde
loop
and
jbe
dec
dec
add
lods
les
cmps
in
pop
ffree
loopne
xor
in
mov
push
adc
jle
jmp
data16
mov
outs
pop
(bad)
(bad)
dec
pop
mov
fstp
aad
and
and
and
push
xchg
sub
jmp
in
cwde
adc
loope
in
cmc
xchg
push
jge
scas
mov
lea
jne
sbb
jb
int
xor
ds
pop
push
(bad)
(bad)
movzx
gs
popa
scas
popa
sub
mov
push
pop
mov
ins
and
pop
mov
push
add
inc
xchg
inc
push
lods
pop
fcom
and
arpl
adc
ror
jge
icebp
retf
gs
or
xchg
inc
xchg
push
jl
call
mov
in
rcr
stc
adc
mov
pop
xor
xchg
mov
(bad)
jo
xor
lea
jo
loope
xchg
in
mov
inc
mov
mov
dec
stc
cli
xor
shl
dec
pop
(bad)
stos
(bad)
ficomp
lds
jmp
push
adc
pushf
xchg
lea
imul
add
jo
sbb
add
iret
mov
cmp
ins
leave
inc
addr16
push
mov
shr
cmp
int3
pop
jbe
adc
int
sub
into
sahf
jp
sbb
jmp
xor
mov
push
push
cmp
mov
mov
xchg
repz
pop
movs
imul
sub
repnz
mov
and
or
icebp
outs
jle
and
iret
out
mov
stos
scas
bound
dec
retf
fsqrt
pop
push
push
out
and
lock
jg
sar
jne
and
pop
in
stos
push
sub
pop
jnp
inc
adc
ret
push
out
mov
fimul
add
inc
lahf
pushf
fnstcw
lock
xor
ret
adc
sub
jae
mov
mov
jne
fwait
adc
xor
movd
rcl
cwde
or
cmps
adc
or
outs
xor
mov
or
retf
icebp
retf
arpl
outs
cmps
icebp
repz
cmp
call
retf
sbb
outs
and
sbb
add
mov
push
add
sub
or
dec
xor
sub
mov
or
inc
push
mov
mov
cmp
(bad)
lods
pop
sbb
in
in
stos
ja
pop
data16
in
scas
call
pop
push
pop
loope
aaa
fldenv
sbb
fs
mov
imul
xor
jno
push
shr
jecxz
loopne
pop
psllw
xchg
or
mov
xchg
popf
jp
xor
in
cmp
bound
add
fwait
lock
es
or
mov
xchg
cld
popf
into
out
mov
retf
cmp
repnz
loop
and
cwde
pop
and
ror
dec
add
(bad)
mov
and
pop
sbb
add
push
mov
sub
add
sbb
(bad)
mul
repz
mov
jle
and
ins
mov
dec
jp
pop
dec
lock
push
push
cmp
adc
sbb
jb
(bad)
or
stos
pop
dec
repnz
ss
fs
jle
xchg
or
test
(bad)
jns
mov
push
repnz
inc
mov
fidivr
xor
out
push
add
pop
jne
push
mov
dec
add
ins
leave
outs
call
push
mov
push
push
inc
and
jl
mov
lods
add
dec
cli
pop
ins
jg
and
jns
inc
xchg
mov
(bad)
or
nop
loopne
cs
pop
or
(bad)
into
cmps
shl
pop
push
cmp
pushf
out
push
call
jnp
lea
mov
pop
or
stos
adc
fs
xor
rcl
sar
div
mov
or
clc
pop
push
fwait
cmp
neg
test
sbb
xchg
fmul
mov
mov
leave
mov
mov
stos
mov
call
cmc
jmp
xchg
or
ror
or
pop
xchg
gs
add
pop
push
out
stc
ja
xor
les
(bad)
sbb
inc
dec
shl
push
das
mov
cmc
retf
sub
sbb
and
sbb
xor
jno
shl
cmp
cmp
(bad)
clc
push
inc
inc
xchg
ret
mov
and
inc
jo
movs
sub
xchg
shl
loope
jno
or
test
mov
dec
cwde
jno
or
cwde
cld
xor
fwait
mov
idiv
jecxz
inc
jae
icebp
push
adc
ins
and
jo
fnstsw
push
stos
fstp
ror
pop
add
inc
mov
push
push
inc
sub
cmc
push
fldenv
cmc
ret
clc
aaa
xor
ins
stc
es
ins
sub
push
push
add
(bad)
jb
dec
ja
cmc
(bad)
sbb
sbb
ins
movs
mov
pop
aam
cmps
gs
inc
std
fcmovnb
ror
retf
call
and
mov
push
js
stos
push
add
xor
adc
shl
loopne
(bad)
xchg
movs
and
outs
inc
mov
xchg
fdivp
loope
push
jp
enter
mov
fdivrp
add
scas
sub
mov
and
in
mov
repz
push
or
jnp
push
add
adc
push
daa
xchg
or
das
adc
enter
iret
jbe
sub
or
imul
and
(bad)
fucomi
inc
and
sub
xor
ds
mov
lock
mov
xor
jae
je
stc
ja
mov
cmps
sub
aad
and
jl
ret
mov
mov
in
jnp
test
sbb
mov
test
fistp
xchg
sub
adc
jae
ins
ins
dec
sbb
sbb
scas
ret
in
popf
cmp
cwde
mov
push
mov
adc
jno
cmps
dec
mov
das
pop
loop
pushf
stc
mov
rcl
mov
push
aam
outs
mov
push
inc
add
out
loop
(bad)
jae
ret
aaa
cmps
xchg
mov
jge
lea
int3
xor
retf
mov
push
ja
pop
test
outs
pcmpeqd
pop
lahf
xchg
cld
xchg
popf
adc
aad
mov
inc
imul
pop
sbb
pop
push
(bad)
stc
pushf
ss
dec
xchg
mov
das
ror
iret
lahf
lods
push
rcl
mov
jmp
dec
xchg
ficom
in
dec
lock
out
jno
inc
mov
push
jecxz
(bad)
stos
cli
or
push
stos
das
cmc
xor
clc
and
(bad)
xchg
gs
call
mov
iret
std
jns
js
xor
aam
cmp
les
leave
aam
jb
popa
add
call
js
xchg
pushw
push
xchg
not
sbb
xchg
ins
stos
push
dec
mov
jo
jge
lea
mov
mov
retf
or
data16
jle
adc
outs
dec
adc
pop
sub
dec
je
sub
push
push
test
pop
stc
ss
imul
scas
sbb
iret
mov
and
xor
popa
adc
push
fstp
cmp
cmp
adc
adc
sub
das
sub
jge
sub
std
lds
sub
and
int
out
fsub
fcom
add
xchg
loope
fwait
jno
ret
adc
inc
or
aad
fistp
fsubrp
jl
pop
jmp
jae
lods
pusha
inc
cmps
not
cmp
push
pusha
dec
jl
clc
xchg
jne
jmp
jbe
adc
xor
push
push
jle
jns
xchg
rcr
ret
mov
push
lods
mov
in
jo
xchg
(bad)
dec
dec
xor
add
mov
fdivr
arpl
cmp
outs
imul
or
add
add
push
dec
int3
jb
in
mov
rol
or
mov
mov
shl
jbe
scas
jbe
cmp
mov
inc
jp
mov
leave
mov
ftst
jge
pop
push
or
aaa
cs
rcl
jecxz
push
or
adc
add
pop
push
or
aas
popf
xor
jl
das
sbb
pop
xchg
repnz
sub
sbb
stos
add
inc
pushf
xchg
cmp
and
out
push
push
xchg
ins
add
jmp
out
and
jne
and
ret
je
shl
cmp
(bad)
mov
in
pcmpeqw
push
cmp
jmp
es
push
mov
add
nop
push
retf
mov
push
push
movs
push
adc
jbe
xchg
sub
jno
mov
sbb
aas
outs
mov
dec
mov
push
fwait
and
sbb
shl
je
imul
or
adc
push
in
pop
les
or
jmp
push
cmp
xor
ins
pushf
inc
fstp
pop
cmp
ficom
jmp
pop
or
rol
inc
jo
popf
mov
pop
lods
xchg
clc
call
imul
std
and
xchg
push
movs
xor
retf
jg
out
rcl
ficom
loop
das
mov
movs
ror
sub
int3
scas
or
fisttp
(bad)
cmp
clc
std
test
fldcw
movs
xlat
sub
jns
pushf
jnp
xchg
push
mov
lock
ja
push
jae
add
mov
lds
in
cmp
cdq
imul
test
xchg
push
xor
pop
jge
xchg
test
and
sahf
vmwrite
cmp
aaa
mov
lock
enter
sti
mov
and
enter
inc
add
xor
push
mov
sub
jl
test
add
add
jbe
cmp
icebp
rcr
mov
std
mov
pop
stos
mov
adc
pop
ret
lock
mov
(bad)
fild
xor
push
xor
imul
popa
js
dec
sbb
push
jnp
pop
and
jmp
pushf
outs
jne
push
mov
pop
stc
fmul
mov
imul
jbe
adc
jnp
fadd
sub
add
cwde
xchg
pop
mov
scas
fs
nop
icebp
je
push
in
stos
movs
loop
or
adc
xor
mov
mov
ss
mov
mov
xchg
mov
repz
mov
mov
nop
jo
inc
jl
push
or
mov
cmp
mov
sub
sbb
lock
inc
mov
popf
ds
(bad)
(bad)
retf
das
add
jmp
cli
rol
loop
cmps
push
cdq
adc
mov
dec
add
cdq
ja
stos
mov
add
in
and
punpckhwd
sbb
dec
fnstenv
xor
mov
aam
xlat
ss
mov
xor
loopne
mov
scas
xchg
mov
inc
pop
retf
ins
sub
xor
in
lods
push
sar
add
and
cmp
mov
push
stc
inc
fld
or
cwde
das
mov
mov
xchg
or
push
mov
in
cmps
(bad)
int
test
and
and
mov
push
push
cmp
add
ins
pop
mov
and
mov
neg
aam
pop
out
adc
test
out
repz
into
retf
outs
into
add
sbb
ret
xor
loope
cld
ffreep
mov
pusha
push
dec
stos
aas
pop
cmp
sbb
sbb
dec
pop
mov
(bad)
sub
or
add
xchg
fwait
add
fisttp
inc
call
lods
int
retf
mov
(bad)
aam
xor
adc
xchg
repz
clc
call
cs
arpl
sbb
jp
pop
cwde
and
out
test
mov
out
loope
lea
lock
or
mov
rcr
mov
pop
pop
push
add
mov
shl
jo
call
imul
or
shr
pop
in
call
push
mov
outs
imul
pop
pop
cmp
iret
jmp
xor
cmp
mov
mov
inc
in
push
in
out
out
cmp
cli
ror
aam
and
pop
add
cs
add
add
dec
pop
scas
jbe
add
mov
iret
dec
xchg
xor
mov
jmp
(bad)
mov
or
fcomp
xchg
shl
pop
loope
ins
movs
xlat
mov
das
jecxz
jne
push
jmp
pop
shl
xchg
in
out
jbe
loop
mov
add
mov
cdq
aam
add
(bad)
shl
nop
ret
outs
in
aas
sub
sub
ds
js
jp
or
loop
call
xchg
push
div
ins
sbb
sbb
inc
add
shl
pop
push
adc
xchg
imul
pop
sub
push
adc
xchg
adc
cmp
mov
repz
push
aaa
mov
sbb
inc
mov
xor
and
dec
icebp
xchg
adc
inc
mov
cmps
mov
cmp
push
dec
or
xchg
push
jmp
ins
ficomp
rol
mov
push
cmc
adc
fcom
mov
mov
mov
fcmovb
stc
leave
aad
mov
mov
or
or
in
icebp
jmp
adc
sub
cmp
cmc
sub
add
jecxz
lahf
cmp
dec
fcmovnbe
cld
(bad)
sbb
xchg
dec
pop
cmp
mov
sbb
add
aaa
(bad)
sti
neg
push
(bad)
not
xchg
pushf
scas
push
or
in
pop
jecxz
cmp
hlt
dec
aad
data16
ss
aad
fist
and
dec
pop
test
xchg
lock
call
adc
cwde
pop
push
inc
movs
mov
mov
inc
in
lea
jmp
(bad)
jge
rep
popf
mov
stos
add
aas
lds
and
push
inc
arpl
outs
aad
fwait
push
cli
ja
fcom
scas
data16
ret
inc
add
mov
xor
daa
mov
xchg
shr
jnp
fdivr
pop
scas
call
ins
stos
aad
and
inc
adc
out
cdq
data16
mov
lahf
rcl
shl
data16
jns
(bad)
dec
cmp
add
pop
cmc
dec
pop
push
call
div
mov
sub
out
dec
scas
and
in
add
cmp
push
xor
fisubr
aad
stos
loop
mov
jno
or
pop
mov
mov
adc
iret
xchg
mov
test
adc
mov
xchg
dec
popa
pop
ss
popf
nop
movlps
xchg
leave
ins
push
aas
pushf
out
arpl
inc
sub
in
cmp
fs
out
in
mov
dec
cdq
mov
fs
cmp
cmps
icebp
sbb
shl
inc
cmps
xchg
add
cmp
aad
je
ss
ja
out
int
aad
test
hlt
pop
cld
ret
cs
or
mov
fiadd
addr16
dec
test
movs
adc
add
jl
daa
test
sub
xor
xchg
imul
out
test
movs
pushf
sbb
pop
mov
fsub
int
and
mov
in
cmp
xor
ss
cmps
add
sub
int3
cmps
adc
popf
adc
into
cli
rcl
add
cmp
imul
and
push
mov
fcmovnu
xor
jl
cmp
gs
lods
in
cmp
call
jb
cmp
pushf
pmullw
ret
mov
lds
cmps
and
ss
(bad)
cwde
and
sub
fidivr
pusha
daa
jmp
add
daa
xchg
loope
cmps
int
adc
mov
(bad)
mov
outs
xchg
xchg
inc
out
or
into
pop
mov
cld
dec
ins
xor
pop
mov
rol
sub
cmp
push
mov
js
(bad)
cdq
adc
cdq
das
push
mov
or
stc
addr16
(bad)
jb
mov
xchg
test
sub
arpl
je
jo
sub
aam
push
mov
jne
inc
adc
in
fiadd
dec
or
push
xor
and
or
adc
cmp
mov
pop
push
dec
cld
arpl
mul
retf
je
loop
retf
rcl
dec
icebp
cmp
les
ror
add
push
xor
mov
jmp
ret
stos
shl
adc
pop
push
sbb
cli
pop
inc
inc
adc
sbb
add
pop
mov
pop
mov
xlat
test
cdq
push
std
xor
or
(bad)
mov
or
mov
dec
mov
jmp
sub
iret
push
adc
dec
push
adc
mov
push
cmps
out
and
jnp
xor
jmp
jb
and
imul
rcr
aaa
mov
shl
je
cmp
aaa
test
dec
jae
pusha
jo
mov
mov
mov
cs
add
jge
jp
adc
cmp
stos
lahf
in
in
into
fst
fnsave
test
ins
(bad)
push
mov
adc
sub
cwde
and
fs
stos
pusha
push
mov
aad
adc
fbstp
push
jmp
xchg
icebp
call
loop
push
pop
test
lock
or
push
push
mov
js
sbb
xor
push
and
inc
lock
push
(bad)
pop
adc
sub
(bad)
sbb
loop
push
cmpxchg
mov
scas
and
aad
cmovae
jae
and
mov
dec
hlt
xchg
test
out
jmp
arpl
sti
dec
jnp
lock
mov
and
ins
jmp
lea
mov
scas
jnp
test
test
sub
adc
ret
into
sub
add
adc
movs
or
imul
push
cmc
adc
cmc
dec
mov
pop
xchg
push
sbb
test
dec
test
jb
popf
sbb
dec
ficom
shl
inc
push
jno
pop
sar
jg
daa
sbb
aas
pop
inc
mov
dec
ficom
jmp
loopne
add
mov
ja
dec
clc
ret
adc
dec
sub
adc
cdq
xchg
lods
fnstenv
(bad)
add
jnp
fistp
clc
jmp
fadd
cmp
cmp
outs
xchg
dec
shl
ret
rol
mov
jp
in
(bad)
adc
rol
(bad)
pop
test
push
loope
sbb
call
add
lock
mov
sub
rol
ds
and
or
push
(bad)
in
stc
adc
and
push
test
cmps
push
fdiv
sbb
dec
aas
(bad)
xor
inc
dec
lock
fcomp
xor
xchg
js
fwait
mov
scas
inc
cs
daa
icebp
mov
cmc
fwait
enter
imul
jae
movs
les
jg
adc
and
hlt
retf
adc
or
jae
inc
mov
xchg
popa
(bad)
pop
icebp
cmps
cmps
inc
mov
aaa
xor
xchg
dec
movs
push
xor
add
and
and
loop
push
cmps
push
jl
pop
mov
call
adc
xor
cmp
sti
retf
iret
sbb
imul
std
popa
js
(bad)
arpl
movs
mov
hlt
sub
je
sub
sbb
jo
adc
pop
dec
stos
inc
sub
bound
mov
xor
adc
push
mov
je
adc
lea
out
push
imul
not
fs
repnz
jo
ffreep
outs
xchg
je
dec
outs
iret
mov
inc
pop
js
enter
sub
imul
sar
mov
pop
(bad)
pop
int3
(bad)
retf
push
pop
sbb
adc
(bad)
lds
push
retf
cmps
fcomp
sti
in
pop
push
and
xor
jle
rcr
xor
xchg
in
pop
(bad)
push
cmps
ja
aad
lods
cmps
(bad)
adc
cmp
fld
adc
fld
pusha
loope
fwait
rol
xchg
bound
and
jns
repz
jmp
leave
dec
jecxz
sbb
stc
(bad)
xlat
cmc
mov
mul
outs
test
sar
and
mov
sbb
in
clc
in
shl
popf
push
mov
test
ret
jp
pop
hlt
imul
sub
and
push
hlt
sbb
pop
pop
adc
les
aas
add
jno
mov
mov
pop
push
cli
inc
aaa
push
les
popf
xchg
sub
aas
mov
push
mov
mov
push
repz
mov
in
ds
outs
push
lock
dec
xchg
add
cs
adc
sbb
jl
push
mov
sub
dec
ins
or
mov
(bad)
pop
shl
daa
addr16
xchg
lock
out
mov
fs
(bad)
(bad)
mov
cmp
stos
imul
inc
or
lahf
js
lock
outs
outs
aas
fidivr
or
ss
dec
mov
adc
mov
sub
in
sub
jns
mov
int
xchg
imul
out
rol
jge
loop
pop
pop
cmps
cmovp
cdq
jg
sahf
push
sub
adc
cs
mov
push
in
sub
jb
mov
fwait
or
jns
push
je
xor
push
sahf
out
pop
js
sub
pop
cli
pop
imul
xchg
lods
jne
pop
std
mov
add
int
shr
pusha
pusha
mov
out
pop
pop
je
sti
dec
call
cdq
ins
inc
sub
jo
add
adc
pop
sub
addr16
shl
xchg
mov
mov
shr
xor
mov
out
mov
imul
stc
imul
jmp
in
out
es
aas
jne
addr16
stos
jbe
adc
leave
push
shr
in
adc
clc
pusha
sub
dec
call
push
sbb
enter
call
jne
repnz
loop
jns
mov
xchg
xor
in
data16
and
popa
mov
pop
(bad)
dec
(bad)
pop
pop
cld
mov
scas
cmps
shl
aad
push
retf
jg
fsubrp
cdq
out
mov
(bad)
ja
call
push
mov
dec
cmp
cdq
loopne
xchg
mov
and
xlat
lea
dec
jbe
jnp
or
sub
jo
hlt
cs
pop
jmp
push
sub
cmps
pop
jnp
scas
loop
(bad)
adc
sbb
jb
js
pop
cld
inc
sbb
xchg
ds
enter
dec
sbb
push
cmp
mov
xchg
xchg
jno
outs
cmps
or
fnsave
scas
jmp
mov
retf
inc
fmul
inc
sbb
je
pop
sahf
xchg
pop
mov
aaa
fst
mov
mov
push
and
sbb
cmp
fwait
aad
ss
xchg
jb
mov
push
jne
in
jbe
sbb
test
adc
imul
sbb
mov
mov
cmc
cmps
inc
jo
call
ins
movs
mov
push
or
retf
jg
mov
jnp
sbb
xchg
mov
add
mov
mul
dec
mov
imul
adc
adc
fld
imul
cmc
test
push
and
jmp
fs
fmul
add
ja
movs
daa
lods
sahf
pop
xor
add
(bad)
mov
jo
test
pop
xor
aam
adc
or
outs
mov
adc
mov
iret
imul
repnz
scas
sar
jae
sub
in
jae
jmp
movs
outs
in
xchg
cld
mov
fdivp
test
ret
(bad)
mov
xor
xor
test
xor
add
jle
xchg
call
repz
out
(bad)
jne
scas
and
not
in
add
cmps
retf
loope
or
jbe
and
cdq
fcom
cs
pop
ror
jae
rol
movs
cld
dec
retf
mov
push
sub
dec
inc
repnz
fwait
mov
jle
jno
dec
out
lock
push
mov
jl
lds
sub
pop
sub
sbb
ds
pop
movs
loope
pop
and
inc
add
fst
ror
out
scas
outs
cwde
and
mov
cwde
dec
fs
xlat
and
int3
or
test
in
aaa
jmp
push
call
mov
(bad)
push
por
(bad)
pop
mov
push
in
jno
pop
iret
xor
cwde
aam
sbb
jbe
cmp
rcl
cld
retf
sbb
rcl
add
push
inc
or
cmp
mov
leave
arpl
inc
dec
sub
mov
jmp
loopne
or
cmps
frstor
ss
outs
inc
pop
push
aad
gs
(bad)
jno
add
jmp
jne
or
mov
jp
shl
push
or
jns
dec
stos
sub
mov
jae
sbb
mov
or
mov
dec
mov
repnz
push
push
std
enter
popf
inc
xlat
mov
jecxz
add
xchg
pusha
icebp
mov
sahf
jecxz
gs
and
mov
mov
pop
push
mov
jp
ret
xchg
outs
fdivr
jl
or
mov
repnz
jns
dec
lock
sbb
(bad)
mov
sub
jbe
scas
push
jl
stos
pop
jmp
mov
cli
int
iret
loopne
push
inc
mov
xor
and
stc
hlt
dec
scas
in
jae
mov
cmp
data16
xor
jo
adc
push
dec
cmps
jecxz
push
push
pop
adc
mov
(bad)
call
fnstsw
and
add
lahf
aam
(bad)
aam
std
adc
lea
sub
rcr
mov
mov
sbb
dec
fs
jno
fnstenv
stos
rcl
pop
icebp
rol
inc
add
js
inc
(bad)
shl
sub
out
inc
cmc
mov
fstp
xor
mov
mov
mov
inc
fwait
rep
mov
xchg
pop
inc
mov
pop
adc
or
jmp
nop
push
jbe
push
pusha
cmp
mov
popf
or
icebp
or
(bad)
retf
push
sbb
push
in
(bad)
out
lock
adc
jae
fnstcw
retf
not
js
lea
jns
cmp
mov
repnz
or
lahf
inc
lea
rol
push
call
shl
cmps
mov
inc
jmp
pop
popa
gs
out
lds
out
fwait
mov
push
(bad)
(bad)
fdiv
xor
pop
or
or
xlat
mov
fcmovb
jge
lds
or
mov
ret
aas
xlat
dec
mov
adc
lds
stc
shr
cmp
cmp
push
sbb
cld
mov
call
(bad)
and
test
mov
nop
inc
movs
xchg
ss
ss
cmp
pushw
and
jne
jge
call
repnz
repnz
fdiv
push
inc
pop
xchg
push
or
xchg
scas
inc
test
lahf
or
inc
fwait
sbb
sub
push
cmp
aad
ins
pop
adc
cmp
adc
push
dec
outs
out
inc
aam
imul
dec
xor
cmp
push
popa
out
mov
bound
sub
data16
je
inc
ret
movs
test
test
mov
push
sbb
cmc
lds
xor
aaa
pop
test
outs
retf
repz
cwde
adc
test
or
sbb
pop
das
add
test
fild
call
(bad)
add
js
fnstsw
enter
lods
sbb
or
add
mov
in
pop
jl
add
(bad)
pop
xor
dec
push
adc
mov
or
adc
dec
push
push
mov
sar
xchg
sti
pop
sub
(bad)
add
inc
push
pop
cmp
aad
and
dec
mov
(bad)
jle
pop
ins
cmp
dec
inc
or
imul
xchg
cmp
(bad)
xor
in
xchg
aam
xor
and
mov
fs
mov
int3
or
sbb
scas
outs
cld
in
add
xor
lahf
jne
inc
pop
jbe
outs
ss
ret
xor
cld
inc
outs
mov
add
pop
shr
mov
pop
fisubr
ins
pop
stos
adc
ja
into
in
movs
jbe
dec
add
sbb
and
idiv
js
inc
shr
push
lock
cmp
push
arpl
or
push
mov
fistp
loop
mov
mov
push
shl
adc
jg
xchg
dec
cwde
push
sahf
(bad)
aad
popf
scas
pushf
into
jnp
gs
sahf
dec
mov
loope
or
pop
loopne
test
sub
retf
cmp
xor
ret
ss
test
xchg
test
and
mov
imul
sbb
mov
ins
sub
ins
test
mov
ds
inc
fs
fisubr
pushf
cmps
call
and
xor
lods
cmp
imul
adc
jb
sti
(bad)
bswap
pop
pop
sbb
dec
inc
pop
call
retf
xor
cmp
add
inc
mov
sbb
adc
or
or
rol
(bad)
or
push
mov
jmp
sub
sub
jp
add
push
mov
xlat
jo
dec
test
fwait
xlat
cmp
or
aad
xchg
scas
cld
mov
jmp
or
mov
enterw
push
sahf
std
xchg
cld
pop
sti
les
neg
push
pop
inc
mov
xor
shr
sub
(bad)
xor
adc
add
push
xor
sub
call
jno
bound
pop
adc
shr
ja
inc
and
mov
jne
movs
adc
cmp
(bad)
xlat
popa
inc
xchg
mov
lods
cld
adc
inc
add
in
xchg
mov
and
push
das
dec
mov
jne
pushf
push
rcl
fwait
xchg
push
pop
fstp
loop
adc
adc
mov
adc
shr
xchg
xor
jmp
pop
addr16
xor
pushf
pop
push
jl
fldenv
in
mov
ficom
xor
ret
sbb
fdiv
cwde
cmp
mov
lods
mov
cs
cs
push
retf
inc
push
sbb
pusha
pop
pop
out
inc
push
adc
xor
cmp
mov
mov
rol
mov
rcr
in
hlt
cmp
jno
mov
mov
fs
xchg
mov
scas
jno
fsubr
fdiv
pop
inc
aad
push
out
mov
fdivr
add
jmp
stc
mov
fwait
js
inc
cmp
test
cs
mov
nop
sub
xchg
call
push
push
add
bound
into
add
mov
mov
jecxz
dec
sub
ss
or
loop
jbe
jmp
jle
sub
neg
push
pusha
loope
jo
stc
cmps
popf
adc
xchg
(bad)
out
gs
fsub
push
jmp
arpl
fst
fiadd
xchg
leave
mov
and
jl
mov
jg
sub
iret
nop
rcl
sbb
ins
cli
fld
xchg
fist
(bad)
inc
movs
dec
dec
cmp
adc
jbe
inc
xchg
call
xor
in
push
inc
push
adc
nop
adc
or
cmps
fwait
jmp
jl
xchg
jb
mov
push
not
in
mov
and
adc
clc
pop
sub
sub
mov
std
cmp
pop
mov
add
dec
enter
ret
lods
push
icebp
ret
fidivr
mov
retf
push
inc
and
cmp
mov
dec
jb
adc
jmp
add
mov
ins
mov
data16
lock
or
and
jecxz
je
(bad)
or
jmp
(bad)
lea
data16
shr
ss
ins
out
dec
add
les
fsubr
stc
in
jle
mov
outs
popa
sbb
mov
or
mov
ja
iret
popf
pusha
xor
mov
call
sahf
test
add
and
add
imul
movs
test
xchg
mov
xchg
bound
mov
jg
mov
addr16
mov
es
mov
push
loop
jp
or
fincstp
dec
adc
movs
ror
add
lea
inc
stc
push
xor
lods
out
mov
or
xchg
in
mov
mov
shr
js
or
cmc
movs
(bad)
sbb
(bad)
test
jns
adc
jmp
add
jne
ret
add
jmp
and
cmp
ins
imul
jmp
mov
imul
in
stc
jbe
in
ins
jl
out
fisttp
jmp
mov
mov
pop
mov
scas
dec
sbb
aad
popa
cmp
cmps
mov
scas
xor
fucom
add
sub
adc
rcr
add
push
ins
mov
pop
add
loop
or
sub
div
retf
popa
mov
cmp
pop
jbe
popf
nop
push
or
xor
(bad)
sbb
movs
sub
inc
mov
sub
mov
imul
xchg
xchg
push
cmc
std
adc
and
mov
adc
mov
in
push
das
aad
jae
mov
ficom
adc
ins
in
mov
xchg
(bad)
jle
or
mov
or
add
jno
jno
and
xor
sbb
push
jge
stos
cmp
cdq
test
pop
sub
adc
sahf
pushf
add
dec
xlat
fmul
push
out
stc
test
(bad)
stos
sbb
pop
inc
sub
dec
es
retf
pop
daa
lds
add
or
aas
ja
push
xor
btc
outs
mov
mov
popf
push
nop
mov
mov
pop
jle
cmp
mov
sub
arpl
pop
dec
cmp
retf
cld
dec
sbb
fisttp
out
or
or
(bad)
imul
fst
sahf
push
cmps
inc
ret
mov
sbb
adc
pop
adc
repnz
jmp
fxch
scas
mov
pop
jb
adc
add
mov
xor
cmp
mov
push
inc
add
mov
pop
cld
nop
mov
mov
inc
dec
mov
pop
xchg
mov
in
push
xchg
repz
(bad)
inc
mov
popf
dec
mov
ss
mov
lea
lods
ficomp
dec
out
cmps
scas
pop
lahf
fisttp
setle
jp
xchg
fs
arpl
cwde
sub
add
add
(bad)
in
stos
xchg
lods
mov
sar
std
mov
or
push
jno
sbb
iret
sbb
mov
imul
add
bound
push
adc
xor
add
adc
(bad)
and
inc
ins
dec
pop
mov
std
pop
mov
imul
lock
or
test
or
iret
mov
pushf
(bad)
aam
dec
sub
and
lds
int
loope
or
xchg
push
scas
push
dec
xor
popf
add
fbld
lock
cli
jno
mov
and
adc
ja
push
pop
push
mov
das
fnstcw
stos
imul
adc
inc
into
and
xlat
popa
xchg
mov
sar
daa
and
sub
call
fs
jo
jo
movs
xor
setne
jne
pop
push
cmp
fisttp
sub
or
dec
adc
add
sahf
adc
cmp
mov
xor
popf
aam
mov
jle
(bad)
xchg
sbb
ret
add
cs
push
popa
inc
mov
mul
sti
aad
mov
in
push
scas
out
adc
idiv
in
ds
in
iret
mov
cmp
dec
out
xor
dec
(bad)
clc
xchg
fidivr
leave
into
sbb
lahf
dec
out
cmp
jecxz
imul
inc
pop
popf
and
mov
les
mov
icebp
push
xor
or
xor
xor
enter
fidiv
(bad)
outs
retf
dec
ror
pop
pop
call
loope
retf
mov
fcomp
aad
cs
clc
retf
adc
int
fcom
xchg
dec
and
mov
loop
lahf
in
mov
sti
sub
lods
arpl
rol
xor
inc
daa
arpl
dec
out
ins
add
inc
sbb
mov
mov
adc
mov
push
imul
cdq
sbb
(bad)
pop
test
xor
inc
aas
xchg
repz
xchg
int
push
daa
shr
jge
and
lods
dec
aaa
cdq
icebp
test
sub
mov
xchg
pop
jnp
sub
add
sub
popf
adc
mov
mov
inc
imul
add
pop
mov
inc
stos
pop
inc
data16
push
mov
not
es
scas
sbb
xchg
neg
jmp
xchg
add
ret
adc
pop
lods
leave
lea
xchg
gs
mov
xchg
adc
outs
mov
inc
cmp
push
je
ja
push
sub
ins
ins
adc
repz
cmc
xchg
sar
not
inc
xchg
int
mov
stos
push
frstor
push
repnz
ror
xor
cs
stos
leave
fisttp
xor
loop
movs
xchg
pop
jns
test
(bad)
adc
cs
gs
jl
popa
je
aam
xor
call
cli
mov
fcmovbe
pop
(bad)
lods
mov
aad
pop
sbb
add
ret
adc
jnp
test
mov
bnd
div
push
scas
mov
push
jnp
xor
xchg
test
(bad)
jno
not
popa
push
sub
cmps
add
(bad)
and
dec
fst
jmp
outs
cmps
popa
pop
ret
movs
lds
cmp
in
push
outs
jmp
je
cdq
jae
xchg
in
push
in
pop
dec
xchg
add
(bad)
gs
xchg
dec
sbb
push
add
and
call
cmp
ins
(bad)
movs
dec
mov
mov
leave
test
jecxz
and
stc
add
sti
push
(bad)
jmp
bound
popa
(bad)
pushf
stos
mov
pop
sbb
sahf
sub
mov
cmp
fsubr
js
dec
sub
mov
sub
mov
sbb
dec
popa
ret
sub
sub
into
add
sub
sub
jne
dec
frstor
int
loope
out
lds
in
stos
aaa
loop
inc
cmc
popf
sub
jecxz
bound
(bad)
xlat
mov
cmp
mov
mov
dec
ja
push
mov
ins
mov
rcl
aaa
js
ss
jns
push
ffreep
add
and
pop
pop
dec
jae
test
js
sub
jb
mov
jecxz
adc
test
test
cmp
push
jne
or
retf
outs
mov
or
sti
(bad)
sub
(bad)
sbb
add
icebp
sub
addr16
inc
xchg
repnz
or
xor
xchg
out
outs
push
push
xor
sbb
rcl
sub
jne
sti
mov
and
push
(bad)
fdivr
cwde
popf
fisubr
mov
pop
(bad)
xlat
mov
or
cmp
idiv
imul
jb
cmp
or
inc
push
mov
push
mov
fild
(bad)
adc
or
or
add
or
inc
xchg
inc
sahf
aaa
les
out
lods
xchg
add
jns
or
in
push
add
out
xor
fstp
test
lgs
mov
add
aam
inc
daa
mov
test
or
xor
mov
pusha
fcmovne
lods
shl
sbb
mov
inc
sbb
stc
js
sbb
dec
cwde
test
add
inc
das
cwde
dec
inc
fiadd
cld
pop
sbb
ret
int3
aad
fidiv
sbb
aad
pop
jno
mov
aas
daa
test
pop
and
mov
je
retf
xor
bswap
fld
cmp
jge
loopne
pop
es
inc
mov
xchg
pop
mov
inc
sub
scas
frstor
add
inc
retf
out
mov
scas
sar
mov
push
xor
mov
and
iret
ror
jno
lods
mov
dec
add
push
pop
je
(bad)
cld
inc
mov
arpl
pop
int
movs
pop
lea
sub
jge
sbb
xchg
into
(bad)
mov
ja
xor
(bad)
daa
xchg
out
cwde
or
jg
pop
div
stc
add
mov
cmp
cmp
push
jae
push
jmp
pop
mov
dec
arpl
mov
mov
hlt
cli
and
pop
aaa
js
sub
pushf
cmp
or
fs
(bad)
xor
or
out
clc
xchg
push
add
sbb
sahf
inc
cmp
clc
daa
scas
jne
(bad)
add
(bad)
enter
in
jmp
sub
movs
push
inc
push
test
jl
(bad)
out
fidiv
sbb
test
js
jns
xor
xchg
pop
cmp
repnz
pop
xor
sbb
xchg
mov
add
dec
mov
push
dec
sub
sub
cmp
cmp
xchg
add
add
(bad)
adc
add
push
jmp
and
imul
in
jb
pop
in
call
pop
push
lahf
pop
adc
xchg
(bad)
xchg
out
sbb
pop
loope
(bad)
push
adc
es
push
dec
aaa
pop
sub
cld
sahf
movs
or
mov
icebp
push
pusha
pop
js
and
fimul
xor
hlt
sbb
inc
rol
popf
pop
fisttp
mov
ret
mov
jns
xor
jbe
inc
fs
xor
call
in
push
inc
xor
inc
mov
leave
test
push
jae
loopne
or
lock
outs
lahf
into
nop
inc
movs
stos
jae
test
data16
push
mov
hlt
jecxz
jbe
out
xchg
xchg
sub
test
add
mov
imul
cmp
inc
xchg
loop
cmp
and
fmul
ret
(bad)
fnstsw
mov
mov
push
sub
sub
ins
cmp
ss
pushf
adc
or
cmp
imul
lds
sub
sub
jb
jmp
fadd
sahf
mov
cmp
xchg
xchg
into
rcl
xchg
sbb
push
cwde
sub
and
cs
mov
dec
mov
push
out
stos
xor
imul
pop
pop
lahf
pop
mov
sub
add
out
push
test
mov
lahf
and
sbb
movs
adc
xchg
adc
daa
ud0
mov
cmp
pop
push
(bad)
loope
out
arpl
mov
les
int3
(bad)
dec
es
ins
(bad)
shr
xor
ret
loope
movs
mov
xor
in
mov
sahf
push
lock
add
and
push
jecxz
scas
out
dec
jae
out
aaa
push
adc
pop
into
in
dec
pushf
and
rcr
fwait
les
sbb
les
or
inc
imul
cmp
jge
pusha
pop
mov
fsubr
std
mov
xor
jmp
jmp
mov
xlat
ds
push
and
loopne
adc
pop
test
fs
dec
xchg
mov
int
sub
jne
fdivr
scas
ret
or
arpl
jne
mov
pop
mov
fldcw
(bad)
lods
mov
pop
int
ins
or
mov
addr16
fs
push
jp
cmps
xchg
xchg
mov
fwait
jo
add
popf
cs
and
cli
cmp
dec
bound
(bad)
rcl
out
push
retf
mov
or
fcomp
cmc
outs
pop
add
pop
xor
and
addr16
jmp
jl
ja
mov
inc
or
sub
in
mov
ret
daa
bound
mov
cmp
xor
adc
mov
adc
dec
add
jns
dec
ret
pop
mov
mov
in
(bad)
cmps
retf
mov
retf
shl
and
inc
xlat
mov
test
inc
xor
je
cmps
test
clc
fcom
mov
call
pop
aas
fisubr
inc
and
adc
or
fnstenv
pop
stc
repnz
inc
mov
fsubr
fld
xchg
xchg
shr
stos
stos
clc
mov
jo
or
leave
jmp
pushf
sub
dec
push
push
or
mov
dec
cmp
push
pop
sub
jl
pop
popf
inc
in
jg
mov
sub
fcomp
cmps
mov
movs
or
loop
clc
sub
and
inc
mov
add
mov
cmp
ss
mov
das
mov
fldenv
retf
xchg
int
jns
xor
jno
mov
mul
push
je
aam
pop
sub
push
lods
imul
bound
scas
int3
in
adc
mov
data16
int3
mov
mov
shl
inc
sub
lods
shr
mov
and
neg
and
or
mov
fisttp
xchg
ret
pop
push
leave
sahf
pop
push
pop
xchg
sub
mov
(bad)
pushf
mov
sar
dec
push
add
nop
stc
repnz
fld
push
cmps
pop
inc
out
mov
sub
nop
das
sub
lahf
pop
or
mov
jmp
and
out
push
mov
loope
jmp
mov
lea
shl
jg
jnp
xchg
mov
mov
mov
sub
cdq
cmps
jns
and
out
jmp
inc
sti
(bad)
adc
push
mov
adc
push
lods
jae
neg
add
hlt
call
xchg
jmp
repz
cmovae
xchg
ret
xor
xchg
inc
leave
fldenv
popf
mov
lock
cdq
mov
xchg
ja
inc
cmps
fnstsw
xor
xor
fwait
sar
in
dec
xor
mov
into
jecxz
sar
das
adc
outs
mov
(bad)
sub
jnp
mov
out
(bad)
fmulp
aaa
and
jle
mov
dec
adc
hlt
sahf
adc
ja
push
and
bound
leave
aam
shl
or
imul
xchg
mov
leave
xor
fsubr
adc
pop
jmp
aaa
in
repnz
mov
aam
or
(bad)
inc
js
mov
adc
stos
mov
std
mov
movs
iret
sub
ds
jb
jo
cmp
adc
mov
frstor
dec
rol
cmp
push
mov
xchg
movhps
fisub
mov
out
(bad)
stc
iret
dec
add
or
data16
ret
imul
pop
bnd
sbb
mov
lds
aam
ror
mov
cmp
jbe
sub
shl
inc
rcl
mov
cld
and
sti
ret
iret
in
lods
xor
mov
nop
jmp
mov
pop
xor
push
retf
inc
inc
jno
mov
mov
xor
imul
mov
fstp
iret
sbb
push
mov
xchg
cdq
mov
das
dec
shr
add
xchg
or
mov
xor
dec
imul
mov
pop
or
scas
jae
pusha
dec
pop
sbb
pusha
int
jo
cdq
mov
out
fdiv
pop
test
jge
inc
push
in
enter
mov
(bad)
add
sbb
call
rcl
rol
mov
(bad)
out
out
and
(bad)
xchg
ret
sub
pusha
dec
mov
iret
and
cmp
(bad)
xchg
inc
jmp
add
ret
mov
(bad)
jg
arpl
cwde
jge
out
shl
cmps
rol
sub
inc
lock
adc
call
call
adc
cs
dec
cmps
ss
ffreep
iret
jbe
loop
or
call
adc
bound
fsubr
mov
push
and
mov
or
fcmovne
mov
adc
mov
mov
mov
lahf
mov
shl
jbe
ror
pop
push
jge
scas
and
jnp
rcr
pop
or
push
and
aad
jmp
push
gs
pop
jbe
popa
mov
adc
xor
shl
xchg
fsub
and
inc
jno
xlat
gs
je
push
fld
add
adc
cmp
outs
xor
mov
js
retf
pop
xchg
loop
and
cmp
mov
sti
adc
movs
in
and
jecxz
pop
dec
mov
aam
inc
or
add
adc
cld
std
cwde
mov
jmp
mov
xchg
jbe
and
push
inc
shr
cld
xchg
int
inc
popf
mov
ret
xchg
jne
jmp
xchg
fst
fist
sbb
fsub
jne
mov
inc
cmps
into
fwait
xchg
push
cmp
inc
test
add
outs
ins
sti
pop
xchg
sub
pop
push
pop
dec
rcl
jmp
jo
xor
stos
cmp
jno
cmp
jmp
cld
stc
dec
bound
cmps
push
xchg
xchg
cdq
cs
mov
lods
dec
call
cmp
sbb
mov
iret
mov
test
outs
cmp
jge
(bad)
fld
shl
loop
pop
in
sub
arpl
mov
cld
mov
std
jp
lock
imul
popf
mov
jae
dec
fidivr
mov
sbb
pop
mov
push
cmc
mov
push
fidivr
int
data16
and
fistp
shl
pushf
data16
add
sbb
call
popa
lea
outs
adc
call
jbe
or
nop
movs
cmp
daa
and
dec
loopne
push
push
jne
pop
cs
hlt
out
dec
adc
adc
frstor
add
arpl
aaa
inc
jmp
test
fwait
cmp
xlat
cwde
push
xlat
enter
jb
adc
pop
lock
xchg
xchg
sub
mov
pop
les
push
daa
aam
or
pusha
pop
cmps
nop
sub
push
scas
pop
test
repz
mov
dec
inc
dec
xchg
div
mov
xchg
icebp
mov
adc
outs
xlat
sub
movlps
sbb
retf
popa
std
inc
ss
mov
and
mov
xchg
or
pop
fwait
mov
not
sub
xchg
pop
les
mov
ins
or
jge
or
pop
mov
add
lahf
fbld
hlt
cmp
dec
mov
out
mov
mov
pop
int3
xchg
sbb
es
inc
and
sbb
les
je
stos
ja
jnp
ror
xchg
fistp
ins
jns
test
dec
(bad)
ins
cmc
jl
mov
retf
xor
clc
and
repnz
cmp
frstor
pop
add
test
ins
das
pop
repz
adc
fs
or
sbb
in
shl
xchg
and
movs
push
mov
or
xchg
sub
push
xor
out
aas
sub
dec
push
data16
adc
sahf
cli
mov
lods
adc
scas
mov
xchg
repnz
xor
popa
cmp
daa
push
cmp
int
cdq
add
shr
stos
idiv
inc
inc
movs
vpextrw
lds
push
dec
mov
dec
std
in
sbb
shl
in
(bad)
mov
push
add
(bad)
sti
lahf
(bad)
jns
test
pop
mov
stos
xor
fnstenv
int3
and
dec
mov
fdivr
push
fmul
push
out
imul
in
xchg
xchg
in
cmp
in
inc
imul
sahf
fmul
cmp
popf
aam
gs
aaa
jge
test
cld
out
jg
ja
mov
out
mov
loop
push
retf
es
ret
sar
inc
out
lods
(bad)
(bad)
ret
inc
bswap
popf
into
cli
dec
sbb
jmp
mov
jle
hlt
(bad)
cmp
and
enter
adc
xchg
adc
pop
push
test
rol
fsub
jge
inc
xor
xchg
fs
mov
not
xchg
adc
sbb
sar
xor
(bad)
push
dec
gs
mov
adc
mov
mov
xor
dec
sub
mov
mov
loopne
lds
push
inc
cmp
mov
add
(bad)
imul
mov
in
add
outs
sub
xchg
mov
add
and
fisubr
cdq
movs
retf
ss
cmp
(bad)
ins
mov
(bad)
jmp
mov
mov
cs
je
and
fmul
repnz
jl
xor
dec
(bad)
or
ret
mov
js
addr16
sbb
aam
in
sbb
ror
cs
sbb
cvtps2pd
sar
int3
cmps
or
xchg
imul
je
xor
or
(bad)
aas
cmp
in
jecxz
push
inc
pop
(bad)
sbb
popf
push
push
mov
adc
(bad)
pop
push
and
xor
or
push
jmp
cld
sub
in
sub
jmp
int
dec
pushf
mov
push
pop
in
or
int
cmp
(bad)
ss
mov
mov
outs
lahf
cmp
scas
cs
mov
jp
mov
les
je
mov
out
and
(bad)
cli
xchg
xor
dec
mov
fadd
out
xchg
(bad)
loop
mov
xor
enter
push
and
jmp
out
add
jmp
dec
js
pop
imul
dec
xor
sub
movs
mov
push
cmp
call
sbb
and
xchg
inc
clc
sub
jmp
adc
sub
mov
movs
jmp
mov
sub
sbb
inc
into
mov
cmp
icebp
mov
ret
movs
push
pop
int
mov
or
cmp
xchg
ins
mov
imul
push
ins
retf
pop
movs
mov
xor
loopne
dec
xchg
enter
imul
fmulp
test
mov
nop
sbb
sub
jmp
outs
aas
push
push
retf
xchg
add
jg
adc
sbb
ins
(bad)
add
pop
in
(bad)
xchg
int
cmp
xor
lods
out
adc
xchg
jns
cmc
test
dec
adc
leave
pop
stos
cwde
cmp
push
xchg
std
call
mov
sahf
dec
shr
mov
dec
pop
sub
push
add
stc
lds
mov
scas
loopne
lock
and
call
xchg
push
mov
add
popf
sub
(bad)
and
adc
out
in
xchg
inc
fs
shl
mov
cmp
pop
retf
push
mov
aas
push
mov
out
mov
outs
lahf
retf
inc
push
scas
mov
dec
pop
shr
scas
rcr
jo
and
add
sbb
sbb
out
test
pop
int
cmp
mov
(bad)
lods
sub
mov
out
les
jge
test
inc
mov
cli
inc
loope
xor
pop
mov
xlat
sub
pop
cmp
jmp
div
popf
cmp
xor
jb
jb
cmps
xchg
pop
push
mov
sub
pand
mov
cmps
push
mov
lods
aaa
pop
jmp
ret
leave
cmps
and
inc
test
fst
mov
aad
xlat
jmp
sub
inc
and
imul
pop
fs
mov
scas
sti
imul
sbb
sar
mov
jae
shl
mov
test
fcom
xor
mov
sbb
cmps
shl
out
jmp
fisub
or
pop
popa
or
call
cmps
xor
inc
mov
pop
imul
mov
cmp
loopne
icebp
loope
fnstsw
stc
xchg
hlt
jge
cmp
fadd
out
adc
sub
(bad)
enter
cmp
mov
sub
fimul
xor
pop
(bad)
retf
outs
enter
inc
daa
sar
pusha
outs
mov
push
test
sbb
push
push
mov
fist
push
lods
mov
fadd
aas
jnp
es
mov
xor
mov
pop
adc
pop
xor
test
aam
mov
inc
and
pop
ss
adc
mov
push
js
fwait
out
shl
dec
fwait
icebp
aam
jno
cmp
add
icebp
jbe
jmp
sbb
push
call
fsubrp
fist
lahf
xor
push
cpuid
mov
neg
adc
sar
dec
mov
sub
(bad)
loopne
xor
in
mov
inc
lock
adc
inc
add
and
or
jg
data16
in
int
stc
fisttp
sahf
inc
or
jne
stos
mov
das
push
je
stc
inc
inc
aas
shl
mov
pop
mov
xchg
pop
lock
inc
dec
pop
push
inc
ret
push
(bad)
jl
adc
je
movsx
bound
arpl
scas
adc
push
cs
adc
dec
rcl
and
adc
inc
mov
dec
xchg
out
aam
xchg
pop
cmc
xor
lahf
out
sub
scas
js
adc
js
movs
(bad)
fwait
out
mov
dec
out
mov
mov
xlat
inc
mov
pop
popf
call
push
mov
add
mov
outs
aas
cmp
adc
dec
inc
push
push
test
jecxz
cmp
xlat
stos
sti
pop
inc
or
xor
sub
enter
jb
and
in
movs
xor
jge
ss
in
scas
ins
pusha
rol
sbb
pop
pop
ins
add
sbb
jbe
aad
(bad)
arpl
or
in
js
add
sub
cli
inc
aam
xlat
in
hlt
neg
pop
jmp
xor
fstp
sti
outs
or
int
rcr
in
loopne
out
mov
pop
mov
or
mov
add
inc
out
xchg
int
sub
adc
test
js
jmp
jns
cmc
inc
mov
mov
stos
cs
cli
scas
es
mov
mov
(bad)
out
test
and
mov
add
jmp
in
repz
sub
add
inc
push
mov
loopne
pusha
push
sbb
and
int3
leave
jecxz
fdiv
aam
mov
cdq
ficomp
data16
mov
mov
jb
jmp
pop
(bad)
int3
lea
jb
push
jbe
mov
pop
mov
stos
sub
mov
dec
in
outs
leave
out
and
or
push
jo
ja
shl
jmp
scas
hlt
sub
(bad)
fadd
fnstcw
cmp
in
cmp
add
dec
cmps
push
stc
in
dec
loop
xor
dec
into
repnz
xor
xor
std
imul
and
mov
ret
push
adc
pop
xor
out
mov
je
sub
dec
mov
cmc
(bad)
adc
adc
xchg
or
push
pushw
mov
lods
stos
mov
nop
dec
sahf
cmp
test
mov
int
sub
scas
aad
rol
inc
sar
mov
and
inc
cmp
in
xor
(bad)
jae
cmp
push
sbb
xchg
cmp
retf
ror
movs
movs
dec
fisub
xchg
call
xchg
iret
in
iret
shl
shl
iret
pop
retf
xor
test
dec
js
sahf
sub
jb
xor
iret
jbe
int3
push
test
dec
lods
arpl
call
push
sbb
xor
inc
add
test
push
out
(bad)
shl
mov
(bad)
sbb
and
jns
cmc
adc
cmp
outs
sbb
cmp
dec
inc
xchg
rcl
hlt
jb
js
push
push
and
(bad)
je
popa
dec
mov
cli
jl
inc
push
sbb
xchg
cmp
outs
add
loopne
xchg
out
lahf
jg
inc
push
xor
pop
imul
loopne
nop
sbb
jnp
movs
mov
and
and
jp
dec
mov
adc
fisubr
sub
test
mov
cld
xchg
or
and
sbb
fs
(bad)
int3
outs
mov
push
sub
pop
sbb
jbe
xor
xchg
jg
aam
fstp
mov
sub
mov
scas
cs
fbstp
test
push
jge
jecxz
retf
out
mov
rol
ins
imul
inc
mov
pop
mov
ja
mov
mov
mov
sbb
clc
jnp
ficom
lods
sub
mov
xor
sbb
sub
and
mov
test
pop
(bad)
pop
jnp
adc
fiadd
xchg
fld
test
imul
fwait
pop
outs
inc
mov
neg
adc
jg
jnp
mov
xlat
xchg
push
push
cmp
ins
das
pop
push
in
push
pcmpgtw
cmp
stos
xor
add
loopne
push
mov
in
out
nop
jne
mov
inc
sub
mov
dec
adc
ret
sbb
push
outs
loopne
jl
xor
daa
mov
iret
sti
push
outs
adc
das
sbb
pop
xchg
inc
mov
inc
cmp
pop
or
es
sbb
jno
xor
loopne
div
(bad)
mov
dec
and
lods
mov
or
rol
shr
cmp
bound
adc
xchg
cmps
movs
fild
(bad)
sub
jle
sar
pushf
outs
xchg
mov
aas
mov
(bad)
mov
mov
ins
(bad)
jp
inc
inc
or
inc
loop
jae
pushf
(bad)
jbe
jl
frstor
in
mov
enter
jmp
(bad)
jmp
out
out
lea
and
adc
in
leave
clc
lahf
pop
sub
out
push
mov
in
fwait
in
mov
iret
rol
dec
inc
out
outs
bound
or
ins
jge
or
(bad)
fld
lods
sub
loope
dec
test
xchg
movs
add
cmp
stc
cmps
ja
mov
movs
inc
mov
das
mov
sbb
and
add
and
leave
pop
les
mov
in
std
push
cld
push
add
or
cmps
and
arpl
test
sbb
xchg
sub
out
shr
stos
xchg
pop
push
aam
push
and
scas
fucom
dec
and
and
jmp
ins
repz
daa
xchg
dec
std
mov
jae
in
add
xchg
jbe
ret
dec
lods
fisttp
push
jle
sub
inc
popf
mov
in
mov
pushf
push
in
int3
mov
mov
push
push
push
mov
call
(bad)
jle
pusha
cmps
mov
adc
test
sub
dec
ret
cli
add
push
addr16
shl
and
sub
(bad)
stc
adc
mov
ds
shl
fucomip
popa
mov
xchg
ins
outs
loopne
mov
cmp
js
xchg
shl
call
cmp
retf
jmp
pop
test
inc
mov
jg
call
int3
ret
(bad)
pop
push
(bad)
jp
clc
sub
vmovaps
scas
js
lds
(bad)
jmp
add
shl
and
xor
inc
out
push
dec
xor
fsubr
pop
xchg
xor
add
call
cwde
cwde
inc
xchg
ss
cwde
fisttp
(bad)
xchg
fs
cld
add
mov
ror
fidiv
into
push
shl
or
int
sbb
jae
dec
inc
hlt
icebp
das
lea
popa
mov
xchg
pop
std
sbb
js
dec
into
xchg
xor
cdq
(bad)
enter
int
push
jno
stos
push
mov
mov
pushf
fcomp
out
or
sub
push
or
and
cs
adc
dec
push
sub
test
movs
test
mov
lock
sbb
or
stos
mov
add
cmp
das
jl
pop
ja
fwait
les
outs
fwait
or
mov
lock
sbb
pop
int
das
iret
lds
jmp
pusha
shl
jno
ret
xor
xchg
subps
retf
jge
and
or
sub
mov
lea
mov
lahf
std
call
add
test
ror
cmc
push
push
ins
sbb
mov
icebp
imul
fiadd
dec
push
cdq
push
test
pop
sbb
pusha
pop
sbb
inc
push
sbb
mov
leave
add
pop
fs
movs
aaa
ds
sbb
push
icebp
mov
jge
outs
cmp
cmp
fsubr
and
inc
and
dec
add
push
(bad)
addr16
sub
push
xor
std
test
pop
cli
test
fwait
stc
push
aad
sti
push
cmps
shl
sub
jb
cld
ficom
mov
(bad)
sbb
rcr
push
(bad)
fiadd
std
or
fimul
jmp
push
sub
data16
xchg
pusha
inc
sub
add
dec
vhaddpd
pop
stc
aam
xchg
lock
popa
inc
pop
mov
mov
fstp
cdq
enter
stos
or
sub
push
jns
add
cmp
adc
fist
xlat
sbb
dec
imul
xchg
out
out
push
daa
push
cdq
and
sahf
gs
inc
iret
and
fisttp
sbb
push
inc
dec
and
fisttp
xor
add
mov
out
cmc
pop
inc
sbb
rcl
std
lods
idiv
pop
push
cmp
fwait
sbb
jmp
adc
hlt
jl
inc
aaa
mov
imul
fld
or
bswap
(bad)
stos
mov
and
pop
mov
jl
leave
mov
and
pop
outs
adc
pushf
repnz
xor
test
shl
aam
xchg
rcr
pop
fs
mov
xchg
inc
enter
aam
xchg
xchg
mov
mov
fiadd
sbb
nop
adc
out
pop
cmp
add
in
mov
jle
adc
shr
push
retf
adc
xor
mov
nop
movs
sub
sub
int3
out
and
dec
mov
hlt
mov
push
adc
fst
into
rcl
push
mov
add
mov
and
cmc
mov
adc
or
xor
push
retf
fld
aas
push
cli
pop
push
push
daa
cmps
out
push
js
cmp
rol
and
pop
movs
mov
out
inc
mov
jg
pop
sub
xor
aam
dec
mov
jae
(bad)
and
xor
lea
and
je
cmp
mov
xchg
push
dec
jmp
imul
jo
mov
xchg
sub
and
mov
scas
aaa
adc
inc
arpl
ins
je
xchg
(bad)
xchg
aaa
mov
xchg
aam
ins
xlat
pop
adc
dec
sub
aaa
shl
inc
shl
and
inc
adc
enter
xor
sbb
sbb
sub
xchg
imul
mov
(bad)
inc
dec
bnd
fbstp
les
sub
sub
jle
lahf
pop
call
fdivr
push
jge
(bad)
enter
imul
(bad)
xchg
mov
push
mov
mov
test
xchg
mov
loopne
push
sbb
arpl
das
jl
mov
cdq
and
xchg
add
lods
cmp
mov
imul
sbb
fst
jo
(bad)
iret
idiv
ds
fcomp
stc
dec
push
cmp
mov
lea
imul
xor
mov
and
jmp
(bad)
rcr
into
jecxz
mov
mov
sbb
out
inc
(bad)
sbb
rcl
jge
cmp
sahf
loopne
test
fiadd
dec
fwait
dec
std
adc
add
fcom
ja
and
push
cmp
push
xchg
adc
xchg
(bad)
idiv
inc
push
test
cs
call
daa
adc
jne
xor
les
nop
popa
xor
aaa
test
pop
xor
xchg
push
ins
cs
pop
xor
sbb
inc
out
cmc
lds
sbb
in
push
lods
cmp
mov
push
pushf
int3
fist
dec
jns
mov
(bad)
cmp
or
cmp
imul
xor
push
pop
(bad)
cmp
(bad)
sbb
mov
add
fiadd
add
dec
fmul
sub
ins
add
and
jmp
ret
das
fwait
mov
cmp
outs
sbb
pop
mov
inc
pop
mov
add
rol
cmp
rcr
test
dec
pop
mov
pop
ficom
xchg
pop
lods
xor
dec
mov
xor
jle
jmp
mov
cwde
adc
bswap
mov
and
out
cmps
pusha
(bad)
jmp
add
cmp
inc
in
(bad)
jmp
das
int3
jmp
add
ins
mov
(bad)
jecxz
pop
cs
(bad)
push
loopne
cmc
mov
fistp
xchg
xchg
outs
mov
push
out
sbb
ficomp
ret
loopne
ficomp
mov
or
push
movs
ret
push
ss
inc
dec
pop
xchg
test
in
adc
push
aad
adc
stc
lahf
add
aad
adc
xchg
in
fs
nop
xchg
call
push
xchg
xchg
adc
sub
add
xchg
nop
cwde
jmp
xor
fadd
mov
xchg
test
stos
and
mov
gs
mov
and
and
iret
xchg
(bad)
rcl
inc
cmps
push
out
addr16
aaa
mov
jecxz
rol
loopne
mov
push
sub
popa
mov
test
in
xchg
push
dec
pop
adc
pop
not
out
pop
cwde
jno
and
pushf
pop
inc
and
inc
mov
fucom
jno
enter
test
das
jge
mov
icebp
cli
sub
ret
js
sub
mov
cmp
repnz
xchg
cmps
pusha
xchg
leave
cmp
pop
test
(bad)
out
mov
adc
mov
rcl
cli
jo
(bad)
push
sbb
cmp
fdiv
or
rol
shl
stos
mov
xor
into
jecxz
not
cmp
das
mov
lods
cmp
pop
test
add
(bad)
shl
out
mov
clc
(bad)
push
dec
cli
or
jb
and
sub
(bad)
jae
cwde
in
lea
leave
outs
mov
fstp
push
mov
out
mov
aas
add
dec
and
in
dec
dec
in
aam
add
dec
add
add
adc
xor
or
outs
adc
mov
stos
sub
rcl
sub
add
fstp
loope
loope
sub
jnp
sbb
ds
and
sbb
cmp
sbb
mov
in
push
mov
push
mov
inc
xor
(bad)
xchg
or
out
and
mov
push
pop
jnp
test
daa
sar
cmp
shl
lock
sub
xor
stc
(bad)
into
push
pop
sti
sbb
mov
call
push
js
popf
loope
jb
cmp
push
add
or
cmps
mov
fld
(bad)
inc
ss
mov
mov
fild
lahf
xchg
inc
daa
movs
aaa
sub
mov
add
retf
cmp
out
sbb
xchg
xchg
mov
sub
add
pop
mov
fmul
shr
pushf
jg
iret
jo
mov
movs
movs
mov
adc
scas
sbb
outs
(bad)
into
and
aaa
jnp
call
add
je
les
popf
dec
and
cmp
add
ror
shl
add
iret
nop
in
add
icebp
fsubr
sbb
adc
sub
push
push
test
push
neg
jb
fnsave
sti
mov
cmp
xchg
js
inc
retf
jle
sbb
jp
clc
pop
sub
aam
popa
pop
inc
inc
push
inc
push
int
mov
cmp
push
xchg
or
in
rcl
cmp
mov
mov
jmp
jge
movd
add
loope
push
(bad)
jmp
out
fiadd
stos
int3
mov
leave
dec
in
stos
int3
(bad)
loopne
jbe
mov
popa
pop
gs
sbb
sti
(bad)
inc
mov
test
jl
lods
mov
icebp
push
test
add
fidiv
scas
mov
jnp
jp
lods
add
mov
arpl
in
inc
arpl
xchg
push
jae
xchg
adc
sbb
sub
enter
lea
pop
test
shl
push
jl
xchg
pop
jnp
pop
sub
shr
mov
(bad)
pusha
mov
xchg
popa
ins
ret
xchg
lods
cmc
das
mov
dec
push
imul
ds
mov
sub
mov
or
daa
sbb
mov
cld
mov
mov
jb
imul
mov
fisubr
jmp
mov
jns
cs
xchg
sbb
in
fidiv
sbb
sub
pop
adc
mov
cwde
cmp
ja
cmps
push
sbb
repz
inc
gs
loop
mov
sar
pushf
fistp
jge
jbe
jb
adc
cmp
leave
das
clc
retf
movs
jmp
lods
imul
bound
ins
loope
iret
inc
xchg
push
add
jmp
xor
imul
xor
int
jmp
std
xor
sub
test
mulps
and
lods
mov
scas
cmp
and
dec
adc
push
call
push
cli
jns
call
into
ja
xor
mov
fld
or
ret
call
sub
pusha
lock
inc
nop
and
cmp
shl
test
pushf
pop
inc
in
sar
stos
jp
xor
sbb
rcl
loopne
cmp
movs
inc
add
enter
leave
repnz
lea
xchg
cmp
sahf
(bad)
lahf
scas
inc
fld
aad
mov
fcomi
cmps
rcl
sbb
movs
and
sbb
pop
fwait
xor
outs
mov
inc
ja
test
test
ins
lock
loope
(bad)
sub
add
js
mov
and
imul
pop
push
push
inc
call
ror
push
xchg
loop
shr
out
jae
sbb
mov
inc
aad
loopne
and
jg
pop
push
test
inc
shl
(bad)
jge
jge
test
test
mov
pop
and
out
das
xchg
stc
jbe
push
dec
out
push
pop
mov
movs
jo
imul
loope
xchg
sbb
mov
mov
push
jno
icebp
xchg
pop
sub
inc
shl
xchg
jb
add
jno
mov
cmps
aad
sub
adc
mov
dec
sbb
cmp
inc
pop
mov
and
push
or
or
(bad)
mov
mov
(bad)
loop
lods
xor
sub
push
xor
xchg
inc
xor
pop
fimul
sti
lods
push
inc
outs
into
push
sub
clc
inc
movs
dec
movs
add
jmp
dec
xor
loope
or
pop
cdq
inc
cmp
cmp
inc
rcl
fld
sbb
mov
stos
dec
pop
hlt
cmp
retf
nop
out
dec
ret
sbb
sub
mov
mov
rol
xchg
int
push
fcmovne
or
and
rcr
mov
in
jmp
mov
jne
out
lds
mov
jecxz
popa
mov
push
mov
adc
nop
pop
jg
out
push
push
fwait
jge
cmc
push
(bad)
loop
xor
adc
jo
ror
mov
sub
mov
mov
cmp
xchg
sbb
adc
(bad)
fidivr
fsub
shl
mov
pop
dec
cmp
fs
scas
jmp
cmp
jle
dec
fchs
rol
(bad)
out
cmp
cld
sti
pop
or
mov
test
sbb
cmp
es
je
push
scas
cmp
xor
pop
stos
fs
inc
fs
sub
test
pop
loop
movs
test
xor
fild
push
sbb
sbb
scas
mov
loope
stos
adc
sahf
adc
ja
clc
loopne
icebp
stos
xchg
add
push
shr
in
imul
aas
rcl
les
fwait
sbb
stc
ja
int3
out
loope
pop
xchg
lods
movs
aaa
inc
ja
xchg
stc
sbb
dec
cmp
sbb
es
ins
xlat
xchg
call
sub
add
cli
pushf
ins
mov
push
in
jle
call
mov
scas
aam
mul
sub
rcl
scas
jbe
inc
(bad)
and
push
je
retf
ja
sub
push
popa
es
pusha
jae
xabort
xor
gs
sbb
(bad)
push
xchg
mov
enter
pop
xor
aam
frstpm(287
dec
ret
pop
stc
sahf
hlt
int3
out
in
sar
sbb
clc
test
pop
sbb
and
mov
jnp
outs
adc
xchg
cdq
sahf
mov
retf
in
mov
mov
gs
and
or
or
push
adc
daa
in
ror
cli
psubq
mov
mov
mov
dec
aas
jecxz
sub
ror
xor
mov
push
popf
push
sub
add
es
pop
push
scas
add
inc
(bad)
pop
les
xor
mov
sbb
and
fmul
rol
aad
repz
repnz
pop
push
sahf
sbb
and
fwait
popf
rcr
in
lahf
sbb
xchg
retf
pop
xchg
std
xchg
call
pop
(bad)
jmp
pop
lods
into
stos
dec
jbe
sub
(bad)
jmp
pop
rol
mov
dec
test
mov
out
sbb
push
mov
push
leave
add
bound
loop
pop
dec
(bad)
out
push
int
and
mov
or
stc
dec
and
xor
xchg
sub
std
xchg
jne
or
or
addr16
xchg
push
sub
xchg
bound
mov
adc
xchg
cs
test
lahf
fucomp
add
call
ss
or
xor
jns
xor
mov
jecxz
dec
mov
fwait
das
and
adc
std
fsubp
xor
jl
push
mov
cmps
outs
push
push
push
cmps
and
inc
and
std
leave
in
repnz
test
xchg
push
pushf
test
daa
sub
test
sbb
in
jle
int3
xor
pop
mov
cwde
jae
sub
xlat
sub
push
gs
(bad)
retf
xchg
adc
mov
in
in
les
inc
call
lods
pop
xor
mov
add
clc
sbb
jp
xor
(bad)
pop
or
pop
mov
call
mov
mov
movs
loop
outs
sahf
fidiv
mov
push
adc
hlt
fild
retf
and
outs
mov
mov
and
nop
leave
mov
sub
call
push
pop
pop
adc
or
(bad)
mov
das
(bad)
cmp
and
and
mov
mov
ror
dec
inc
ret
mov
add
inc
outs
popf
(bad)
jl
nop
pop
and
and
ret
inc
cwde
and
mov
in
popf
mov
jg
mov
(bad)
iret
mov
(bad)
xor
stc
inc
out
jbe
cmp
cs
nop
call
dec
mul
pop
mov
sar
mov
xor
pop
fbstp
mov
in
adc
pop
xchg
fld
inc
or
test
shl
leave
mov
xchg
sti
fstp
dec
(bad)
push
in
fist
aas
xor
inc
into
mov
xchg
int
pop
and
sbb
push
add
push
xor
loope
(bad)
popf
add
jns
rol
sbb
jge
in
mov
mul
cmp
jns
ret
add
aaa
lods
xchg
in
xchg
loop
out
sub
xchg
add
test
not
or
xor
es
leave
popf
xlat
jmp
pop
dec
push
mov
pop
dec
mov
fsubrp
cmps
bound
sub
imul
jbe
cli
in
addr16
jno
jo
test
mov
xchg
mov
mov
popf
into
xor
push
add
jl
jbe
sahf
jmp
mov
mov
jg
mov
test
out
pop
cmp
or
xor
mov
fisttp
ror
test
add
xchg
push
sub
das
imul
sub
jnp
jmp
outs
push
fidiv
test
adc
add
icebp
inc
pop
mov
inc
push
add
lock
push
jmp
push
xor
pop
pop
addr16
jp
jge
gs
cdq
js
call
cmp
lock
cmps
int3
mov
aad
iret
xchg
fs
iret
(bad)
aam
imul
in
fcom
xchg
inc
mov
aaa
cmp
movs
dec
xor
loop
sbb
or
dec
cs
push
jmp
sbb
shl
dec
xlat
and
dec
test
in
retf
jnp
adc
loope
jb
in
pop
sbb
dec
adc
into
pop
fcmovnb
mov
gs
shl
or
movs
pop
push
and
dec
bound
push
popf
sbb
mov
cmc
adc
out
mov
aad
es
fdivr
push
inc
push
inc
push
or
sbb
push
mov
in
pusha
out
xchg
cmp
cmc
int3
xor
mov
mov
out
or
mov
repnz
pop
push
cmp
dec
lock
lods
inc
inc
lahf
mov
pop
call
cmp
push
repnz
stc
pop
fwait
inc
ss
arpl
add
sbb
adc
cmp
or
call
fld
xchg
in
mov
les
pop
dec
in
add
repz
or
ret
mov
rcl
sti
out
rcl
stos
add
outs
mov
inc
adc
ins
in
xorps
dec
aam
cli
test
cmp
frstor
sar
mov
adc
xchg
clc
call
inc
arpl
fld
inc
fild
sar
(bad)
into
sar
and
fadd
popa
push
ds
or
mov
pop
call
add
lahf
and
leave
sub
repz
lahf
jbe
outs
sbb
out
es
mov
pop
or
jb
sub
xchg
rcr
or
aas
add
fdiv
pusha
jb
rcl
jmp
aam
adc
test
mov
dec
add
push
dec
jmp
rcl
adc
xchg
fiadd
loopne
add
out
xchg
and
sub
rcl
xor
cmps
mov
fadd
cmp
mov
cmp
enter
add
sbb
int3
int
and
add
cmps
push
ds
inc
sti
shr
inc
mov
and
lahf
nop
movs
das
xor
pop
int3
cmp
icebp
lods
fdiv
sti
rcl
or
mov
xchg
lds
ja
cmp
enter
cmp
aaa
xchg
sub
push
jne
cwde
pushf
and
xchg
mov
clc
or
out
je
inc
xchg
aam
stc
lds
loopne
or
xchg
out
popa
add
adc
pop
(bad)
in
or
repnz
pop
rcl
test
out
mov
ss
fbld
arpl
pushf
fdivr
mov
test
and
xor
out
jmp
jg
das
or
jno
and
rol
mov
push
icebp
adc
imul
or
xchg
cdq
mov
movs
sub
jmp
cmp
push
sub
pop
dec
adc
arpl
icebp
mov
(bad)
cmp
sub
(bad)
retf
mov
(bad)
sub
inc
iret
or
dec
fs
inc
fdiv
out
lock
xor
sti
sar
jb
mov
shr
sahf
adc
pop
pop
data16
push
cld
mov
inc
xlat
rol
shr
mov
sub
push
sub
arpl
fnstenv
pusha
mov
mov
fnstenv
ret
jnp
inc
mov
scas
ins
mov
les
pusha
cmp
xlat
sbb
aas
out
scas
je
push
idiv
bound
(bad)
sahf
mov
test
scas
(bad)
fnsave
or
mov
jmp
inc
dec
call
adc
jg
pop
xchg
mov
mov
mov
shl
pop
xchg
iret
adc
das
mov
jno
xchg
dec
imul
pop
mov
sbb
push
jp
(bad)
out
sar
push
dec
jae
mov
call
inc
popf
mov
out
jle
sbb
push
lea
jmp
je
adc
adc
push
xor
or
cmp
int3
lods
jno
cmp
sub
xor
ins
and
and
dec
sbb
or
cld
in
and
and
ins
or
dec
jb
cmps
or
mov
popa
mov
(bad)
lock
xchg
aaa
addr16
push
test
xor
xor
sub
push
mov
popa
jae
pop
mov
inc
xchg
in
dec
ja
push
adc
addr16
daa
in
sbb
aas
sub
inc
adc
mov
addr16
dec
std
dec
dec
or
mov
test
call
cdq
mov
pop
sbb
retf
jno
sub
jo
xor
xchg
aaa
pop
setl
jle
or
hlt
loop
mov
cmp
mov
push
int3
xchg
imul
(bad)
inc
pusha
rol
cld
pop
pop
out
sbb
push
dec
sbb
xor
and
test
mov
faddp
ret
cmps
in
mov
push
fadd
mov
cli
and
ss
jb
retf
bound
sbb
cdq
pop
jle
scas
mov
mul
and
mov
jmp
ds
(bad)
bound
data16
fiadd
cld
retf
and
push
jnp
adc
retf
repz
push
mov
jbe
mov
(bad)
mov
mov
inc
jns
mov
mul
and
mov
adc
jg
inc
pushf
lea
enter
pop
or
outs
arpl
mov
inc
mov
xchg
out
pop
sbb
and
mov
push
push
in
xor
and
mov
mov
jae
inc
aad
out
enter
dec
pop
shl
xor
les
in
mov
jmp
pop
arpl
andnps
push
xor
push
popa
icebp
imul
inc
push
retf
sbb
cmp
adc
push
push
shr
adc
xor
sbb
mov
mov
xchg
adc
nop
lock
sbb
jns
cld
and
sbb
fnsave
shl
or
jle
mov
pop
retf
push
(bad)
test
xchg
add
hlt
add
arpl
mov
jb
js
jg
pop
add
cmps
movs
mov
mov
xchg
xchg
sub
shl
dec
and
xor
mov
xchg
jne
mov
dec
add
xlat
in
dec
jb
and
(bad)
xor
ret
ss
movs
ldmxcsr
test
ror
add
clc
dec
mov
pop
xlat
cdq
cwde
mov
mov
cdq
es
inc
rcr
push
cmp
retf
adc
mov
call
pop
scas
(bad)
(bad)
pop
or
(bad)
push
xor
mov
mov
loop
lock
xor
mov
jp
xchg
cli
fstp
xchg
shl
xchg
in
js
cmp
or
dec
jl
mov
call
inc
lock
scas
fbstp
mov
inc
imul
test
jns
sub
jae
xchg
hlt
sbb
mov
jb
sar
in
ret
inc
fst
cmc
js
mov
add
cmps
or
leave
mov
cmp
hlt
cs
mov
pop
inc
test
mov
ins
pushf
sbb
xor
cmp
jbe
(bad)
in
adc
adc
and
xchg
xchg
(bad)
mov
add
xor
xor
xchg
(bad)
gs
aad
pop
mov
enter
jg
retf
pop
stos
arpl
pop
xchg
pop
mov
sub
xlat
inc
cwde
push
mov
push
test
push
cs
push
ror
call
dec
shl
ins
inc
sti
call
dec
clc
sbb
and
jno
call
fnsave
clc
pop
fld
add
popf
stc
cmp
xchg
inc
test
(bad)
and
dec
pusha
stos
mov
(bad)
lock
adc
cmp
mov
aam
and
mov
stos
rol
scas
js
mov
mov
call
in
movs
sub
jmp
jp
cmp
jno
repz
jle
xor
das
aaa
cmp
inc
shr
jb
jmp
mov
retf
push
lahf
js
xor
jo
cmp
jecxz
dec
and
cmp
fs
pop
pop
push
push
(bad)
sbb
retf
push
add
dec
mov
cmps
mov
xchg
outs
js
sahf
fcom
mov
pop
jnp
or
mov
sub
or
jnp
mov
cmp
mov
mov
out
jg
arpl
pop
cmp
rcr
and
aaa
or
ror
add
dec
xchg
lea
mov
jo
cs
xor
and
scas
mov
mov
stos
mov
adc
addr16
lock
and
dec
push
xchg
fsubr
cld
jmp
pop
add
mov
pop
push
mov
add
xchg
mov
or
inc
je
sub
xchg
dec
fbld
jae
aaa
mov
repnz
ja
ins
push
sub
movs
add
mov
les
loopne
fst
(bad)
fisttp
mov
leave
cdq
ror
movs
inc
aas
mov
mov
loop
dec
rol
jle
jnp
cmps
pop
mov
shr
jge
inc
gs
push
jnp
test
mov
pop
div
add
mov
add
cmovne
data16
ror
loope
inc
scas
clc
inc
pop
dec
loop
aam
cmp
ret
push
mov
push
inc
jne
and
xchg
pop
adc
jle
pop
and
stc
jne
xor
mov
fbld
das
inc
iret
inc
push
retf
lock
mov
jnp
add
fnstenv
and
mov
popa
mov
in
aas
lds
push
mov
add
inc
dec
push
jno
push
aad
mov
les
test
fcmovne
popa
xchg
out
add
cmp
stos
xor
dec
aam
fmulp
jo
dec
sbb
out
mov
sbb
sbb
enter
mov
mov
shr
scas
mov
loopne
dec
lods
mov
jne
dec
repz
cmp
push
sbb
push
and
scas
push
sbb
sbb
js
sub
paddd
pop
mov
jne
cli
mov
lock
jbe
scas
mov
imul
sub
fild
adc
sub
push
lods
xor
cmp
inc
popf
fstp
jg
iret
ja
mov
(bad)
jo
retf
mov
mov
call
fs
xchg
lock
jb
icebp
ss
cmp
push
retf
and
stos
jo
lods
rcl
in
push
pusha
pop
in
sub
nop
lahf
inc
lahf
jns
retfw
add
jmp
inc
pop
pop
hlt
nop
hlt
adc
popf
adc
push
jno
outs
fdiv
aaa
pop
loop
out
rcl
jmp
mov
out
lahf
or
sub
dec
sbb
add
stc
into
cmp
gs
push
push
mov
sahf
jmp
jno
jmp
lahf
fadd
(bad)
loop
fist
and
jb
mov
push
adc
out
in
je
fistp
call
ror
hlt
sbb
test
(bad)
mov
push
pop
pop
scas
test
push
stc
repnz
call
out
mov
push
in
push
fldlg2
hlt
sub
push
mov
push
mov
imul
cld
push
sbb
or
inc
jl
shl
adc
mov
push
jl
jae
jg
rcr
fld
mov
aas
stos
xchg
jnp
in
mov
pop
mov
nop
mov
dec
mov
hlt
in
xchg
ror
adc
pushf
pop
pushf
xchg
ins
jge
setnp
cld
push
lds
pop
pop
cmp
adc
dec
jecxz
and
adc
ins
jbe
jl
pusha
retf
xchg
jb
ja
and
mov
in
dec
mov
retf
pushf
push
add
lds
mov
cmp
test
cmp
xchg
push
mov
retf
cwde
mov
add
fs
mov
inc
dec
shr
xchg
cmc
inc
jo
das
sbb
addr16
mov
out
mov
jp
dec
xor
add
mov
nop
push
in
ds
push
jg
std
loope
test
js
lea
es
movs
(bad)
and
shr
cmps
cld
sub
push
or
lds
xor
aaa
js
pop
mov
clc
cmp
adc
pop
jmp
adc
lods
mov
clc
pop
shr
sbb
leave
adc
pop
and
xor
cmp
xor
or
mov
cld
xchg
push
cld
or
xor
aad
call
imul
fisubr
scas
mov
or
sub
sahf
cld
fist
xchg
sub
pop
(bad)
adc
lea
out
in
sbb
jns
btr
xor
and
and
xchg
or
js
xchg
dec
mov
xchg
out
xchg
neg
mov
clc
sbb
pop
sub
jo
movs
les
(bad)
mov
pop
es
stos
cmp
std
pop
dec
in
ror
mov
dec
rcr
push
sbb
out
repz
inc
mov
mov
call
retf
je
cdq
fldenv
inc
dec
js
and
push
pop
xchg
push
ror
ds
aam
push
and
icebp
xlat
push
loopne
sti
pop
or
lods
vmwrite
inc
lahf
xor
mov
mov
and
push
pop
adc
jno
lds
shl
in
xor
in
jmp
inc
cmp
dec
adc
jg
add
xchg
pop
cld
pusha
sbb
test
jl
pop
mov
(bad)
lahf
pop
mov
jbe
pop
add
clc
jmp
ins
xor
das
xor
pop
sub
(bad)
xor
push
and
and
std
ja
pop
int
gs
fnstcw
jle
lock
stos
mov
fldenv
jno
loopne
xor
gs
daa
add
adc
jecxz
gs
inc
ret
idiv
xchg
test
cwde
call
push
ds
mov
push
cmp
sub
mov
mov
shr
xchg
adc
dec
mov
mov
or
call
fst
mov
les
sbb
push
dec
push
ins
sbb
idiv
leave
call
outs
pop
cmp
in
push
add
mov
xor
jb
mov
shr
dec
or
inc
out
xor
call
cmp
ja
add
lods
test
out
(bad)
mov
pop
lahf
inc
repz
add
daa
out
sub
jnp
dec
sub
push
cmp
(bad)
jns
mov
mov
int3
mov
pop
in
imul
or
dec
popa
dec
gs
stc
xlat
mov
data16
mov
fstp
(bad)
jg
or
push
test
cld
scas
mov
ins
dec
fiadd
sub
push
dec
jo
pop
add
mov
out
bound
aad
dec
call
sub
cmp
adc
icebp
jg
jo
push
imul
sbb
xchg
and
and
or
mov
stos
js
push
enter
sub
dec
fstp
or
jp
ret
out
inc
imul
pop
rcl
in
in
aaa
pusha
ins
int
call
inc
ins
jmp
and
cmp
add
add
mov
jae
pop
not
xor
jne
pop
sub
repz
jmp
and
mov
ja
xchg
pop
ja
push
ret
adc
es
inc
stos
fistp
icebp
jnp
sti
mov
jno
retf
sub
imul
sbb
into
(bad)
ret
ret
pop
cld
dec
pop
aam
aaa
test
push
inc
test
or
add
add
adc
adc
push
dec
ret
out
repnz
lea
mov
inc
sub
scas
js
push
idiv
int3
pusha
lods
addr16
fs
sbb
shrd
sar
lock
cmp
sbb
jb
mov
ins
ret
out
mov
mov
mov
jns
push
inc
push
jne
int3
or
mov
jge
dec
ror
les
icebp
sahf
repz
out
push
cmp
(bad)
out
bound
dec
bound
into
(bad)
hlt
jp
dec
mov
pushf
in
add
sub
cmp
hlt
imul
sub
ins
pop
sbb
test
inc
and
adc
sbb
scas
and
repnz
adc
data16
mov
test
sub
pop
ror
in
(bad)
ror
das
and
push
sti
repz
xor
enter
ret
aad
(bad)
int3
inc
adc
add
pop
rol
xchg
popa
xchg
stos
xchg
pop
(bad)
fld
xor
cmc
iret
jo
dec
cmps
dec
lods
leave
add
pshufw
inc
pushf
bound
js
pop
es
inc
jb
std
add
xchg
or
loop
aam
div
mov
(bad)
scas
je
push
jno
cmps
adc
repnz
push
xlat
adc
add
pop
fucomi
shl
pop
sti
(bad)
jb
dec
mov
inc
xor
(bad)
pop
dec
ins
out
mov
adc
ins
jnp
aam
adc
(bad)
fistp
fwait
outs
add
int3
arpl
les
retf
push
dec
js
adc
lea
nop
or
cmp
cmp
in
push
cs
push
add
aam
std
dec
in
(bad)
xchg
fcmovnbe
xchg
adc
fs
inc
pop
(bad)
lahf
mov
ins
cmc
stc
frstor
repnz
adc
lods
sub
xacquire
jae
ret
scas
cdq
mov
out
jbe
in
or
mov
inc
ja
push
mov
into
add
loopne
add
jmp
add
xor
or
lahf
inc
daa
push
cmp
or
ins
cld
(bad)
fwait
mov
jns
pop
nop
sbb
sbb
fs
pop
sbb
mov
inc
push
adc
xor
mov
mov
fsubr
fst
dec
loop
jbe
out
xor
pop
push
fdivr
cmp
pusha
or
rcr
leave
fxch
jl
pop
sbb
retf
retf
mov
pop
xor
cli
shl
pop
pop
jne
xor
mov
dec
fsub
mov
mov
ficom
dec
neg
leave
pop
lds
sbb
or
sbb
jae
shr
fs
in
jnp
pop
retf
xchg
mov
or
fldenv
ins
sub
sub
jae
sub
mov
nop
(bad)
cmp
xchg
jg
xor
or
sbb
lods
push
ss
jp
movs
gs
sub
jb
fs
fbld
lock
test
sub
les
cmc
mul
xchg
push
pop
das
jg
cld
outs
add
iret
test
and
xor
lods
mov
cs
(bad)
(bad)
mov
js
mov
push
mov
add
mov
push
adc
in
or
test
xchg
out
sbb
push
sahf
into
add
in
cmp
cli
shl
jns
pop
fidiv
stc
or
mov
sbb
mov
sbb
sahf
mov
gs
rol
cmp
pop
(bad)
or
or
mov
mov
cmps
lahf
out
sar
hlt
lods
mov
mov
push
mov
push
cmp
mov
lahf
xchg
push
stos
xchg
pop
iret
dec
call
sbb
push
mov
mov
dec
xor
adc
fst
and
mov
call
add
push
sbb
cmps
xchg
push
div
in
xor
xchg
inc
dec
jno
sar
out
in
ret
mov
mov
popf
add
hlt
or
push
xor
mul
push
and
(bad)
push
mov
inc
add
outs
mov
cli
repnz
mov
inc
jmp
push
add
xchg
add
inc
out
cs
jmp
ds
adc
or
sub
xchg
dec
cmps
call
popf
dec
jle
sub
push
cwde
test
jno
les
cmp
pusha
das
cmp
js
xchg
ficom
aam
int
dec
dec
mov
sti
jmp
int3
test
add
scas
fs
(bad)
sbb
and
xor
je
sub
repz
push
mov
scas
xchg
mov
neg
and
les
inc
aas
lods
shr
scas
push
fnstsw
pop
or
cmp
arpl
and
dec
xor
push
(bad)
dec
sbb
sbb
mov
(bad)
mov
mov
aaa
sbb
pop
inc
xchg
inc
add
out
pop
cwde
jmp
sbb
mov
or
sub
not
push
and
jmp
pop
lahf
popa
pop
add
(bad)
mov
ret
mov
lock
xchg
mov
nop
sub
jl
gs
mov
(bad)
xchg
mov
mov
jnp
idiv
jo
inc
push
stc
outs
push
nop
call
ret
cs
lahf
mov
pushf
dec
pusha
aaa
inc
call
aad
xchg
stos
loopne
jae
and
pop
imul
fisub
push
xor
add
xor
sub
in
mov
add
mov
ret
enter
sub
sbb
adc
repz
mov
adc
adc
adc
add
mov
dec
cwde
loope
push
adc
shr
iret
and
bound
popf
mov
push
inc
inc
(bad)
idiv
int3
lahf
inc
sub
loope
cmp
xchg
jmp
popa
les
(bad)
sti
mov
scas
iret
push
mov
xchg
inc
retf
mov
and
pusha
mov
jp
test
stos
scas
retf
sbb
mov
aaa
and
mov
or
cmc
jmp
scas
xchg
xor
sub
aam
imul
dec
sbb
sub
or
mov
mov
mov
call
lahf
lods
push
sub
scas
cmp
aad
jle
add
loope
(bad)
mov
retf
or
outs
pop
(bad)
jmp
dec
push
enter
ds
hlt
inc
inc
inc
and
ret
pusha
daa
mov
retf
ins
adc
cdq
add
mov
push
mov
and
xchg
lds
sub
inc
sbb
or
aad
fnstsw
inc
dec
push
xchg
dec
xor
xchg
shl
nop
sub
jo
arpl
sub
cmp
sbb
fld
daa
or
scas
in
mov
push
inc
(bad)
repnz
cmp
cmps
mov
je
or
retf
add
movs
neg
pop
scas
jmp
test
sar
push
test
shr
sub
mov
jmp
movs
cld
pop
ror
ins
xor
jge
inc
enter
xchg
adc
enter
ja
je
sub
jb
pop
js
jbe
mov
xor
pop
lods
hlt
test
cmp
xor
shr
pusha
lea
adc
jno
imul
arpl
or
gs
push
mov
lds
dec
icebp
(bad)
sar
inc
data16
repnz
int
adc
int3
pushf
test
dec
add
push
push
scas
push
xchg
sqrtps
(bad)
cld
dec
enter
mov
sbb
and
or
fwait
in
xchg
jb
shl
jge
and
or
cmp
dec
mov
sbb
and
inc
and
in
ret
mul
or
in
pusha
pop
(bad)
outs
sub
retf
cli
inc
mov
pop
push
or
cli
sbb
dec
push
xchg
cmp
inc
lods
mov
stc
xchg
inc
repnz
pop
jb
inc
aas
scas
lds
add
imul
pop
test
mov
sbb
aaa
push
and
add
add
cmp
jmp
xor
inc
jmp
mov
xchg
paddq
jecxz
or
mov
pop
inc
mov
pop
or
shl
aas
lods
das
xor
lods
dec
add
fidiv
cmp
lahf
cld
mov
out
xor
lods
shl
xlat
sub
pop
mov
jbe
cmp
dec
nop
popa
xor
fidiv
ss
fmul
inc
lea
inc
push
jge
push
out
sub
inc
sbb
xor
xchg
aam
sub
pop
imul
dec
pop
std
xchg
inc
mov
pop
dec
or
pcmpeqw
mov
int
mov
outs
not
inc
pop
push
aaa
popf
ins
je
shr
cmp
mov
push
sbb
ret
(bad)
push
clc
xor
je
sub
mov
push
xor
jmp
ja
pop
xor
stos
mov
mov
popf
push
and
and
push
out
pop
fcmovb
inc
out
ror
es
xchg
addr16
adc
sbb
repz
ds
fdivrp
ja
adc
xor
pop
and
sub
lahf
pushf
cmp
sub
pushf
xor
cmp
mov
and
mov
ss
movs
dec
imul
adc
pop
ret
inc
jo
(bad)
cwde
dec
ret
movs
push
add
mov
clc
mov
or
std
and
mov
mov
leave
lock
pop
lock
cmp
pop
or
push
scas
mov
mov
jns
xor
lods
and
push
sbb
fs
add
rol
xchg
mov
xchg
xchg
mov
pop
cmp
push
movs
lods
ret
imul
and
pushf
sub
out
push
(bad)
clc
xchg
data16
jg
or
push
mov
je
ret
sbb
enter
out
or
push
sub
ds
fs
pushf
loopne
jno
xlat
xchg
jl
cmp
mov
xor
jg
(bad)
sti
inc
adc
fsubrp
adc
pop
inc
pop
test
outs
inc
loope
push
mov
pop
mov
(bad)
adc
cld
out
aas
ds
pop
cld
and
xor
xchg
hlt
mov
mov
inc
add
retf
pop
iret
sbb
or
xchg
mov
mov
ins
call
cmp
in
js
add
inc
test
call
in
fdiv
movs
je
jl
popf
xor
pop
inc
xor
fs
shl
add
mov
adc
pop
(bad)
fisubr
or
aas
not
or
mov
movs
mov
clc
push
mov
nop
pop
sbb
jns
jl
retf
test
leave
sbb
add
fsub
mov
jecxz
push
mov
mov
lock
out
popa
frstor
test
add
pushf
stc
adc
mov
mov
scas
iret
dec
jb
movs
stos
pop
add
xchg
dec
fwait
mov
mov
(bad)
out
mov
mov
sti
js
pushf
lahf
xor
aaa
les
pop
pop
(bad)
sub
rcr
pmaddwd
dec
inc
out
stos
into
or
daa
and
mov
add
xchg
or
loope
mov
jb
pop
push
scas
or
xchg
cmc
sub
dec
psllq
nop
xchg
xor
pop
mov
add
pop
mov
pop
xchg
sub
dec
mov
adc
lea
ds
add
mov
mov
inc
fcomp
push
jne
ds
sub
loope
or
pop
mov
jp
jne
dec
sbb
movs
stos
mov
jne
ret
xor
aad
mov
or
pop
call
data16
cdq
das
add
and
ja
mov
dec
inc
out
retf
adc
jnp
push
mov
scas
xchg
clc
add
arpl
jle
(bad)
add
push
sub
add
or
xchg
ds
cmp
mov
dec
fwait
scas
pop
xor
pop
gs
inc
or
lea
sbb
leave
sub
inc
xor
cmc
icebp
dec
mov
inc
fistp
jns
mov
jge
scas
adc
retf
xchg
stos
jno
ja
lahf
adc
pavgw
stc
sti
or
loope
adc
fisttp
adc
fld
xor
jae
mov
in
mov
and
xchg
fisttp
and
push
or
pop
inc
sbb
addr16
sbb
jne
lds
xor
mov
jl
scas
jno
addr16
cmp
jnp
mov
mov
retf
dec
or
or
in
xor
ret
mov
ror
lea
sbb
ins
das
mov
fsubr
shl
jge
cmps
xchg
jge
pop
(bad)
xchg
jl
lds
and
dec
jmp
retf
add
repnz
outs
push
sbb
fmul
inc
mov
dec
daa
outs
iret
jge
jnp
mov
pop
rcl
out
outs
test
cmp
mov
mov
sbb
sub
jne
sahf
ficomp
hlt
dec
dec
inc
outs
cwde
outs
mov
ja
add
inc
loop
xchg
lods
gs
dec
sbb
jmp
fisttp
sub
ror
retf
dec
outs
jae
(bad)
lock
add
xor
xor
ror
adc
mov
sbb
int
fimul
jl
mov
ss
mov
inc
jne
pushf
mov
adc
(bad)
bound
xchg
aam
inc
sbb
jns
loope
inc
add
ins
mov
jge
pop
clc
jo
push
push
in
retf
mov
mov
mov
cmp
add
test
sub
mov
das
add
jg
xchg
jecxz
dec
dec
test
mov
add
inc
xor
arpl
retf
cli
rcr
js
add
lds
push
in
(bad)
(bad)
cmp
pop
(bad)
retf
in
dec
sub
lea
test
dec
ret
(bad)
jl
std
fisub
scas
xor
pop
outs
outs
xor
add
cs
sahf
aad
daa
mov
ds
into
popa
dec
loop
enter
and
push
or
mov
mov
mov
and
repnz
ret
jne
pop
repz
loopne
ja
loope
sub
jp
out
clc
enter
adc
xchg
sub
cli
dec
mov
jae
cmp
(bad)
inc
push
mov
xor
lahf
sbb
adc
mov
push
cmp
lock
jecxz
outs
add
out
jbe
xchg
cld
out
(bad)
add
xchg
popa
aaa
lds
pop
add
push
loop
mov
push
(bad)
test
dec
lods
fistp
push
pusha
add
gs
imul
mov
mov
and
mov
jge
push
in
les
push
push
and
das
adc
enter
sub
cld
mov
idiv
daa
inc
clc
xchg
ds
lods
in
pop
jns
out
sub
jno
push
mov
fcmove
pop
lea
xor
rcl
jecxz
imul
mov
inc
push
mov
mov
fist
mov
add
mov
sub
inc
ss
dec
pop
js
dec
jecxz
push
mov
or
aad
mov
jns
pop
push
cmp
cld
test
bound
mov
int
mov
add
xor
cli
adc
jbe
mov
sbb
or
cmp
mov
push
or
xor
in
mov
or
leave
push
fisub
xor
and
inc
cmps
sub
out
iret
and
js
mov
or
adc
test
add
les
ret
sbb
inc
fimul
arpl
aad
sub
adc
adc
pop
add
lods
cmp
cmp
jbe
cmp
xlat
pop
sub
lock
imul
out
adc
inc
sbb
lahf
push
xlat
push
or
pop
or
jns
pop
or
lock
movs
mov
mov
dec
ret
xor
test
(bad)
jb
stc
cmp
jle
idiv
lds
aam
pop
inc
stos
in
ins
fadd
jecxz
ins
int
push
mov
jp
cmp
call
cmp
mov
adc
jp
adc
and
lea
icebp
add
mov
popa
out
adc
inc
jno
inc
xchg
xchg
mov
repz
or
xor
iret
(bad)
mov
add
push
or
dec
mov
pop
mov
jne
cli
jbe
xchg
inc
dec
mov
lahf
lock
inc
adc
sbb
sub
idiv
sbb
sub
ret
sub
in
out
mov
(bad)
sub
repz
clc
scas
cmps
mov
ss
mov
(bad)
das
enter
loopne
je
into
pop
or
fwait
inc
push
daa
push
or
rcl
out
mov
mov
pop
ins
dec
pop
dec
cli
mov
mov
fwait
cld
mov
ret
pop
cmps
pop
in
pop
and
jge
dec
rcl
dec
scas
sub
nop
scas
jp
repnz
cmp
mov
pop
mov
mov
unpckhps
push
les
pop
xor
(bad)
xlat
(bad)
into
in
test
and
retf
xor
jae
xchg
xor
ja
jmp
and
repz
les
push
iret
push
(bad)
push
or
ins
scas
sbb
jo
lds
cdq
lods
mov
mov
sahf
sbb
push
and
cdq
inc
call
and
icebp
sbb
out
push
cmps
jp
int3
pop
dec
aaa
iret
int3
pop
add
enter
cmp
xchg
xlat
mov
ffreep
mov
cmps
fdiv
mov
jmp
retf
inc
fbld
popa
cmc
jmp
jecxz
sub
pop
stos
xchg
adc
or
imul
(bad)
xor
icebp
mov
mov
push
push
inc
sahf
adc
mov
lods
and
fstp
xchg
xor
outs
les
scas
sub
not
retf
xor
push
lea
sub
add
pop
inc
mov
std
(bad)
dec
mov
cld
mov
xor
test
xchg
cmc
iret
clts
imul
cmp
sub
mov
dec
inc
mov
push
mov
loop
xor
pop
sub
xor
dec
dec
jge
cwde
xor
pop
jb
(bad)
xchg
sub
adc
fisub
xchg
test
mov
(bad)
sbb
outs
imul
push
out
test
cdq
mov
std
inc
and
int
ret
sbb
cmp
enter
cwde
in
inc
jb
das
movs
pop
aas
fist
dec
xor
mov
mov
sbb
ds
ja
icebp
retf
sbb
mov
push
fld
mov
jne
movs
xlat
and
out
loop
rcr
icebp
xchg
das
mov
or
jmp
int
(bad)
scas
pop
(bad)
mov
xchg
or
sub
scas
fist
sub
icebp
jle
iret
cmp
fst
xor
loop
or
js
push
xor
cmp
mov
xlat
std
push
xchg
and
pop
sbb
dec
sub
mov
add
jnp
data16
pop
sub
(bad)
mov
pop
add
gs
aaa
mov
mov
mov
je
xlat
loop
push
pop
aad
enter
in
mov
pushf
leave
inc
out
jmp
iret
sbb
cmp
jae
sbb
aad
or
adc
xchg
or
xchg
inc
jmp
std
pop
int3
and
mov
lods
mov
imul
shl
adc
xor
adc
mov
sub
into
mov
call
push
inc
movs
jne
cmp
(bad)
(bad)
mov
fldenv
push
mov
mov
aam
push
or
sub
jmp
jle
sub
movups
retf
sub
div
cmp
mov
push
adc
mov
sbb
xchg
in
jnp
in
dec
loop
retf
push
jnp
out
or
dec
push
cmp
push
add
sub
int3
lds
add
push
scas
jg
fsub
icebp
jp
adc
test
sbb
push
pop
mov
dec
das
lods
pop
shl
bound
mov
retfw
loope
pop
mov
icebp
xor
xor
fcom
xchg
sbb
cmp
and
adc
mov
aam
cli
jle
add
cmp
aam
mov
add
inc
(bad)
out
pop
push
or
fsub
inc
push
inc
or
pop
ss
not
mov
mov
mov
fwait
cdq
add
and
cmc
jns
or
scas
add
fst
(bad)
push
aas
push
cs
arpl
ins
inc
inc
pop
mov
add
adc
popa
adc
fnstcw
popf
adc
push
adc
test
cwde
ret
mov
cmc
push
lds
cmps
(bad)
fisttp
and
aam
cs
iret
es
xchg
jge
jl
dec
inc
cwde
fst
fisttp
and
cmc
jmp
xlat
xchg
ret
mov
pop
cld
xchg
rcr
mov
in
mov
ret
(bad)
mov
push
jg
or
cmps
inc
scas
ret
sar
jl
sti
inc
push
ins
das
div
(bad)
fwait
aad
out
(bad)
int3
(bad)
sbb
pop
in
ror
xchg
in
stos
jnp
clc
stos
daa
imul
jmp
ror
ficom
pop
imul
jo
jo
jecxz
ins
test
enter
popf
cs
xor
shl
std
sbb
pop
cmp
push
in
jge
rcl
lds
xlat
mov
sub
int3
ret
and
mov
mov
sub
ds
nop
cdq
pop
in
bound
xor
push
imul
add
(bad)
rcr
add
addr16
push
and
popa
data16
rcr
imul
jecxz
and
out
cli
xchg
sub
inc
pop
adc
je
xchg
jno
and
jb
fisttp
or
cs
fdivp
fwait
sbb
mov
ins
mov
sysenter
movs
push
add
sbb
jle
inc
ja
cwde
int3
xor
clc
out
push
xchg
test
jmp
fisubr
ret
push
sub
inc
inc
push
push
mov
(bad)
(bad)
iret
push
shr
aad
sub
pusha
mov
sub
mov
mov
push
mov
bound
out
sbb
or
cld
jne
jb
js
sar
push
sub
loop
out
fs
pop
rcl
std
mov
mov
jns
jp
mov
pop
sub
cmps
dec
das
data16
add
add
mov
test
mov
mov
loop
pushf
cmp
and
xchg
mov
dec
dec
cwde
daa
(bad)
gs
dec
cmps
sbb
stc
int
adc
jecxz
inc
pop
ss
sbb
lock
int3
sar
das
sub
imul
ss
jo
imul
leave
fadd
sub
lahf
test
inc
pushf
rcl
(bad)
(bad)
pop
popa
and
dec
mov
push
and
mov
ins
mov
ds
mov
movs
push
and
imul
stos
cwde
adc
scas
repnz
(bad)
mov
add
xchg
icebp
jp
std
inc
stos
lods
cmp
popa
inc
fistp
test
imul
mov
xchg
test
dec
cli
mov
mov
cmp
in
shr
xor
inc
xchg
mov
ret
ficomp
test
add
retf
pusha
xor
pop
inc
jbe
or
mov
xlat
mov
pop
scas
dec
call
mov
stos
out
ds
cmp
cmp
div
cmp
xchg
lds
xchg
dec
les
test
ret
aam
(bad)
(bad)
ss
mov
mov
adc
bound
adc
fsubr
imul
jnp
(bad)
hlt
xlat
hlt
pop
cmc
in
add
mov
pop
xor
xchg
mov
cmp
es
ins
test
xor
pushf
rcr
sar
or
jle
dec
xchg
loopne
dec
xor
retf
mov
mov
xor
push
in
push
jg
call
imul
cld
add
dec
mov
in
lods
jmp
add
or
lahf
cmp
or
adc
pop
push
outs
adc
out
pop
cmp
mov
scas
fwait
pop
mov
popa
retf
pop
ins
xchg
push
nop
popf
mov
mov
mov
push
imul
sahf
xor
push
call
cdq
(bad)
call
call
sar
lahf
daa
push
pusha
push
imul
push
push
hlt
add
and
inc
cs
push
(bad)
int
jns
and
imul
fwait
push
jb
or
xchg
out
(bad)
dec
inc
xlat
ret
push
jmp
gs
xlat
pop
out
or
sti
push
dec
inc
mov
jmp
cmps
mov
sub
inc
sti
inc
jmp
or
sub
mov
add
stos
(bad)
add
repz
and
pop
mov
xchg
clc
xlat
stos
pop
icebp
aaa
mov
xchg
xor
sar
leave
fimul
pop
xchg
addr16
loop
pop
mov
fisttp
jns
add
and
ret
data16
adc
in
outs
xchg
fstp
les
cld
adc
xor
stos
sub
mov
sub
pop
hlt
pop
sub
into
ret
loopne
pushf
or
cmc
loop
sbb
jle
mov
jnp
loop
sbb
xchg
stos
sbb
push
rcr
pop
xor
in
and
aas
dec
bound
pusha
add
xlat
jo
xchg
hlt
mov
xlat
call
and
mov
in
rcr
fild
les
es
mov
outs
(bad)
jl
xlat
rcr
test
and
mov
fcomp
outs
pop
inc
sar
dec
fimul
inc
sub
aad
and
mov
out
pushf
jne
cmp
in
pop
icebp
imul
sbb
cmp
int3
jb
mov
mov
jns
sub
aas
cmp
mov
dec
adc
sub
(bad)
xchg
loope
mov
les
icebp
cmp
mov
hlt
js
xchg
loope
cmp
dec
neg
mov
cmp
sub
fldenv
call
stos
xor
test
mov
hlt
or
adc
std
push
jns
add
stc
mov
and
sbb
mov
xlat
daa
call
jl
sub
push
add
xchg
mov
xor
mov
xchg
repz
jecxz
mov
adc
xchg
out
js
or
test
push
and
pop
cmps
retf
xor
popf
cmp
fldcw
fist
mov
popf
and
sahf
call
mov
repnz
jbe
ja
sub
mov
out
or
repnz
xchg
jl
mov
mov
push
int
mov
(bad)
jp
xchg
je
adc
sahf
adc
xchg
mov
addr16
mov
inc
mov
push
imul
mov
push
add
dec
xor
sub
mov
(bad)
inc
pop
push
shl
fild
xor
xor
jo
imul
aaa
lods
pushf
mov
xor
lea
sub
mov
jae
mov
add
hlt
xor
sahf
adc
into
and
shr
mov
cmp
xor
mov
fcom
data16
adc
or
leave
mul
inc
pop
or
and
and
jnp
in
mov
sahf
xchg
outs
rcr
outs
jp
test
cs
add
cmp
retf
daa
push
add
das
push
or
scas
ds
nop
xor
in
xchg
loop
sub
inc
dec
cmp
mov
fisttp
or
mov
mov
pop
mov
pop
jg
mov
mov
sbb
pop
pop
ins
rcl
dec
sahf
xor
or
adc
pop
cmps
dec
xchg
cmp
scas
jbe
ja
sbb
or
xchg
rcl
in
arpl
(bad)
fld
stos
jne
push
data16
pop
adc
cmp
pop
mov
pop
xchg
pop
xor
stos
adc
adc
sahf
imul
push
pop
mov
push
mov
xor
lea
dec
pop
jbe
call
out
retf
xor
(bad)
cmp
pop
or
retf
test
dec
mov
lods
sbb
dec
lahf
movs
in
cwde
ds
daa
cmp
mov
cld
pusha
loope
mov
ja
fwait
sub
inc
lock
or
outs
lods
aam
sbb
adc
in
pop
mov
lods
jecxz
fcomp
adc
xor
cmp
ror
cwde
or
call
stos
nop
mov
ss
loopne
mov
dec
ja
data16
ret
xchg
ins
pop
retf
dec
and
push
push
jle
mov
outs
mov
in
aas
fldl2e
push
dec
mov
(bad)
adc
jmp
mov
xchg
jo
leave
or
cmp
sbb
mul
push
in
push
je
bound
add
jo
pop
test
add
cmp
(bad)
sti
dec
xchg
adc
mov
inc
cmc
jg
jecxz
mov
fwait
add
push
aas
rcr
and
cmps
aaa
cmp
dec
sub
idiv
jmp
dec
outs
outs
pusha
daa
outs
cmp
jb
add
xor
sbb
or
retf
sub
add
xchg
mov
inc
push
loop
jl
jp
xor
mov
push
fist
or
lods
lahf
arpl
mov
movs
popa
jne
cwde
fwait
jle
inc
repz
shl
push
cwde
cmps
(bad)
call
jns
leave
inc
scas
int
int3
push
ret
arpl
dec
dec
icebp
sub
jmp
aas
dec
jl
xor
sbb
imul
inc
(bad)
cmp
into
pop
xchg
gs
jl
jge
pusha
jbe
ficom
popf
cld
dec
or
cmp
xchg
icebp
retf
mov
xor
jle
shr
neg
ret
jmp
pop
aad
cwde
repnz
pop
push
loop
mov
imul
rol
xor
(bad)
push
add
inc
sub
push
jae
mov
stos
mov
mov
jl
add
jp
mov
test
popf
xor
pop
inc
cld
out
clc
cmp
jg
mov
pop
aad
xor
jl
push
inc
aad
sub
shl
mov
pop
cmp
cmp
inc
pop
into
pop
dec
aas
outs
add
aas
mov
call
movs
inc
aam
mov
stc
adc
movs
mov
int
xchg
loop
movs
adc
and
dec
dec
mov
in
mov
and
scas
ror
imul
lock
fs
(bad)
scas
jg
or
or
lods
or
movs
xchg
jl
hlt
cwde
out
sahf
jg
jg
cmp
out
ret
jae
ror
leave
inc
inc
mov
xchg
add
mov
or
in
mov
es
inc
and
lds
jp
mov
aad
ret
mov
mov
(bad)
addr16
dec
or
ins
js
fnstenv
ins
imul
adc
loopne
mov
test
js
data16
test
daa
dec
mov
sub
and
xchg
xchg
push
push
inc
jno
jmp
test
call
cmps
cmps
xor
jl
cmp
mov
stc
jp
dec
xchg
not
push
mov
or
jge
mov
pop
mov
imul
inc
cmc
xchg
push
hlt
pushf
push
add
ror
and
lahf
aaa
(bad)
ret
sbb
(bad)
and
mov
adc
push
lahf
mov
inc
jp
add
push
push
test
ins
and
out
shl
push
ss
ret
pop
arpl
xchg
and
(bad)
out
push
dec
arpl
clc
and
jne
imul
or
jl
mov
and
pushf
mov
mov
or
je
js
mov
cdq
pop
mov
xchg
sub
fadd
arpl
jp
shl
jge
jl
retf
push
push
bnd
scas
xchg
jmp
cs
movs
sbb
or
cmp
daa
mov
xchg
into
jno
adc
mov
shl
or
in
cmps
jmp
bound
frstor
addr16
loope
(bad)
sti
xchg
sete
sbb
out
dec
loop
ja
scas
and
adc
xchg
outs
call
or
mov
lea
cmp
ja
fwait
pop
push
repnz
xor
xor
movs
inc
daa
aas
mov
out
cmps
(bad)
mov
push
in
mov
hlt
jmp
push
xchg
fnstcw
xor
pop
fs
arpl
into
xchg
and
cmp
js
pop
out
movs
pop
lock
fwait
sub
pop
and
clc
rcr
push
and
jmp
fnstcw
ror
or
shl
mov
xor
sti
(bad)
popf
or
sbb
and
scas
addr16
outs
vpaddsb
ins
outs
mov
frstor
and
cmc
dec
fstp
dec
(bad)
packuswb
mov
dec
xor
stos
add
mov
pop
xchg
loop
and
cmc
mov
dec
mov
enter
inc
and
adc
aaa
sub
sub
mov
mov
adc
xchg
and
daa
shr
in
inc
add
test
out
inc
xor
ss
jnp
stos
cdq
(bad)
stos
je
jne
pop
js
(bad)
aam
pop
xchg
arpl
(bad)
or
(bad)
ins
mov
jae
xchg
mov
add
jnp
in
push
addr16
push
imul
pop
bound
inc
pop
mov
hlt
pop
outs
aad
dec
mov
mov
(bad)
mov
and
mov
int
xchg
dec
retf
or
sbb
and
retf
fstp
or
out
sub
stos
imul
cli
cli
push
sbb
ret
dec
cdq
xchg
sbb
inc
inc
mov
xchg
adc
das
push
stos
xchg
nop
cdq
ss
out
rcl
mov
gs
sbb
push
clc
lods
arpl
mov
daa
icebp
lods
pop
jl
lods
in
add
mov
movs
dec
xor
div
std
into
xor
sar
hlt
and
adc
and
sub
xchg
scas
adc
(bad)
lock
xchg
xor
dec
push
jbe
xlat
cmp
ds
inc
or
cmp
lods
mov
dec
pop
add
int
daa
cs
adc
push
(bad)
out
js
ja
ret
call
pushf
lods
sbb
mov
push
dec
jne
clc
shl
clc
inc
dec
icebp
cmp
jae
std
lds
mov
and
hlt
sub
pop
mov
sbb
inc
xchg
sub
rol
ins
lods
mov
bound
push
enter
and
fidiv
mov
rol
and
sub
lea
mov
and
aam
idiv
jl
jno
pushf
inc
ja
push
push
ja
adc
retf
or
dec
mov
out
add
je
pop
xor
xor
retf
jecxz
jge
fs
popf
dec
pop
sub
fadd
dec
in
mov
cdq
xor
sub
aam
sbb
push
cmp
or
into
cmp
dec
push
(bad)
fdivr
stos
(bad)
rol
mov
ss
pop
lahf
pop
out
pop
in
xchg
xor
or
pop
pop
push
(bad)
loopne
xor
cmp
aas
outs
mov
xor
lock
arpl
fimul
dec
pop
cmp
outs
mov
push
jno
outs
jecxz
sbb
pop
mov
dec
adc
inc
fld
adc
int3
icebp
jnp
mov
test
sysret
dec
sbb
fs
pop
and
pop
sub
xchg
fnstenv
jnp
movs
scas
cmp
add
cs
lds
loope
stc
xchg
sub
les
mov
jnp
(bad)
pop
ds
ret
dec
cmc
mov
shl
sbb
test
ror
inc
data16
sar
loop
sbb
clc
rcl
inc
lods
lods
and
(bad)
fbld
dec
mov
cmp
mov
es
(bad)
pusha
inc
fidivr
arpl
cmp
xchg
xchg
mov
and
xor
scas
popf
adc
ins
enter
lods
in
in
(bad)
xchg
stos
or
adc
mov
(bad)
mov
xor
in
icebp
loopne
mov
int3
jl
push
(bad)
sub
push
fistp
fild
cmps
mov
cmp
retf
int
pushf
jmp
daa
ins
add
mov
mov
ins
data16
repz
pushf
es
sub
xor
in
outs
sbb
cwde
or
push
jmp
in
xchg
sub
leave
dec
lds
sub
ja
pusha
imul
(bad)
cmp
bound
or
and
in
and
push
aaa
jmp
and
push
adc
stos
dec
les
dec
sar
aam
jg
ds
cld
mov
enter
fild
sbb
dec
mov
mov
call
call
jnp
add
or
(bad)
jmp
(bad)
lds
push
(bad)
mov
adc
ror
call
pop
mov
or
hlt
scas
push
adc
cmps
test
push
mov
xchg
pop
lock
or
xchg
inc
fwait
cmps
imul
dec
sti
adc
fcom
jae
rcr
in
cmp
rcl
mov
(bad)
lea
mov
mov
add
cs
xor
cmp
in
call
out
iret
xchg
or
cli
sub
mov
inc
ret
sbb
add
adc
xchg
xchg
xchg
xor
scas
dec
jmp
or
scas
push
scas
jae
jle
inc
adc
in
inc
sar
lods
push
(bad)
test
xor
and
(bad)
cli
in
or
mov
push
push
jp
retf
fisub
mov
xchg
xlat
ret
adc
cmc
inc
popf
pop
test
mov
sub
ret
sub
mov
jge
mov
test
push
mov
jp
(bad)
adc
dec
arpl
sub
test
or
sub
adc
mov
in
aad
push
xlat
xchg
addr16
sahf
out
and
fs
aas
clc
mov
out
repnz
fs
inc
inc
mov
jmp
or
sub
mov
jae
pop
mov
repnz
(bad)
fcom
jge
ja
int3
adc
and
mov
mov
mov
(bad)
(bad)
pop
xor
cmps
adc
pop
add
test
sbb
aam
fcomp
lock
jnp
pushf
mov
(bad)
push
gs
cmp
shr
stos
inc
int
push
in
xchg
dec
xlat
mov
adc
shl
scas
pop
fs
dec
sbb
xor
mov
ret
lods
mov
inc
scas
int3
in
inc
push
add
call
sub
shl
jg
pop
es
fnstsw
adc
inc
test
xchg
pop
scas
ret
dec
ins
les
sti
sbb
test
xchg
in
aas
fdivrp
ja
push
repz
push
out
leave
aaa
repnz
add
sbb
sub
rol
out
dec
fild
clc
adc
sub
test
lock
in
mov
int3
pop
cmps
outs
fsub
push
aas
repnz
mov
xchg
leave
out
xor
sar
popf
je
lea
(bad)
xchg
aas
dec
push
mov
leave
push
aad
dec
dec
iret
push
lock
add
pop
jmp
mov
mov
inc
mov
out
xchg
push
push
aad
fisubr
and
imul
cmc
ja
xor
(bad)
push
in
xlat
pop
inc
outs
lock
(bad)
sub
and
or
js
jae
mov
repz
or
mov
call
adc
push
dec
or
mov
es
xor
sbb
addr16
aam
pop
in
mov
mov
aaa
test
xor
adc
mov
mov
inc
rol
mov
dec
push
mov
mov
xchg
xlat
or
and
imul
leave
out
in
pop
add
xor
xchg
retf
sahf
push
cli
xor
js
xor
stos
mov
clc
fbld
test
mov
sbb
cmp
jmp
std
mov
out
arpl
and
cmp
imul
and
call
dec
pop
loope
jbe
popa
test
mov
xchg
outs
fnsave
inc
retf
mov
mov
and
jle
retf
xchg
pop
sbb
sub
dec
push
vmwrite
or
mov
cmp
pop
dec
push
cmps
aaa
test
xchg
and
movs
xchg
adc
loop
mov
sbb
jae
idiv
inc
jae
xor
in
cwde
cmps
and
or
and
xchg
pop
scas
mov
xchg
mov
rcr
inc
adc
jmp
mov
mov
out
ins
je
mov
mov
ins
outs
mov
mov
loope
xchg
dec
pop
(bad)
ror
xor
lods
mov
lods
pusha
scas
and
dec
cmp
loope
sbb
fnsave
fs
jne
xor
inc
xchg
sub
pop
push
in
mov
mov
push
inc
inc
repz
gs
pop
push
scas
lea
mov
xchg
pop
outs
dec
cld
add
lahf
lds
int3
pop
push
xor
hlt
neg
mov
sbb
sbb
loopne
jp
test
outs
(bad)
cmc
and
in
and
movs
jo
out
movs
and
cmp
rcl
inc
fs
pop
dec
xchg
or
repnz
sbb
cmp
mov
iret
jbe
in
arpl
into
sahf
adc
pop
mov
stos
retf
sbb
sbb
lods
xor
xchg
mov
call
cwde
cs
jo
cmps
(bad)
fisub
adc
sete
movs
xor
fucomip
add
xchg
into
adc
ds
div
xlat
sbb
ret
imul
js
cmp
or
loopne
test
and
cmp
lods
mov
sbb
bound
bound
out
es
or
cmc
(bad)
repnz
adc
sub
data16
repnz
jbe
leave
cmps
aas
std
add
sub
out
fisubr
iret
dec
fistp
sub
jo
cmp
mov
clc
xlat
(bad)
mov
ret
stos
lods
inc
xlat
ret
sbb
and
push
(bad)
sbb
mov
rcl
stos
ret
fiadd
dec
cmps
pusha
int
inc
jp
fld
call
mov
out
repz
inc
mov
cmp
loope
dec
jecxz
ror
clc
cmps
rol
pop
lds
sar
xor
mov
rcr
cmp
mov
adc
xchg
inc
lahf
cmp
ss
std
les
jbe
outs
outs
es
jecxz
movs
icebp
pop
mov
in
cmps
(bad)
sub
mov
cwde
add
js
retf
test
dec
and
cmp
inc
in
jmp
jmp
pusha
inc
mov
pusha
jb
sar
xor
call
dec
jno
(bad)
dec
adc
xor
lods
into
cmps
sbb
and
cmps
or
cmp
push
mov
adc
sbb
popa
add
mov
adc
mov
ror
xchg
add
in
inc
add
cmp
js
or
popf
mov
mov
xlat
push
sar
mov
or
jmp
and
imul
fs
fiadd
jbe
jge
lods
xchg
mov
js
mov
lods
cmp
jecxz
or
loop
ror
daa
jae
or
or
pushf
test
mov
xor
enter
push
jl
sar
imul
or
sub
inc
dec
icebp
mov
sub
(bad)
lock
out
rcl
(bad)
lea
repz
pop
xor
ja
push
cmp
add
push
out
or
push
das
xor
adc
cmp
clc
jo
sbb
jb
rdtsc
popf
int3
lods
mov
pop
jmp
dec
int3
inc
faddp
ret
xchg
popa
imul
add
fs
add
popa
sub
ja
nop
pop
mov
or
rol
addr16
in
cmp
ins
mov
mov
fwait
dec
xor
mov
push
call
pop
iret
jge
sbb
xchg
dec
fisubr
es
dec
fldcw
jl
adc
sbb
xchg
in
dec
cmps
push
xor
ret
shl
sub
fistp
out
push
sbb
fs
add
sub
adc
fld
scas
mov
push
cld
jnp
lods
jo
jmp
mov
inc
shr
pop
js
fcom
out
imul
in
jmp
iret
xor
push
jle
and
cmp
je
in
xlat
mov
pushf
pop
mov
pusha
xor
mov
dec
int
ss
or
mov
and
out
adc
shl
and
ins
dec
ins
push
jp
arpl
jle
mov
sahf
das
cwde
rol
pop
or
sub
not
maskmovq
test
aas
fadd
jp
shl
push
mov
int
jb
sub
xchg
(bad)
mov
push
outs
jns
push
sbb
rcr
or
add
mov
repnz
repnz
dec
popa
iret
mov
test
outs
adc
dec
xlat
jle
rol
int3
xor
mov
pop
fidiv
mov
pop
test
mov
pusha
je
mov
mov
sti
dec
inc
outs
or
leave
adc
sub
retf
jecxz
bound
jmp
and
cmp
push
pop
cmp
popa
into
and
sub
mov
sub
(bad)
mov
fld
push
xchg
sub
mov
out
lea
aaa
or
aas
inc
std
pop
cld
pusha
and
push
sub
add
mov
mov
nop
push
pop
push
adc
add
fnsave
xor
and
jmp
and
outs
xor
sahf
shl
(bad)
retf
cmps
popf
jmp
and
xor
and
adc
push
and
and
mov
rol
dec
mov
sub
jo
add
xor
jno
and
(bad)
mov
popf
and
jecxz
scas
pop
fs
add
dec
int
ins
push
stos
jb
jmp
in
jecxz
call
(bad)
jae
xlat
pop
mov
mov
outs
or
push
push
dec
or
or
xlat
xor
cmp
in
xchg
or
sbb
fild
push
and
imul
shl
cmp
xchg
jbe
loope
push
sti
and
jecxz
(bad)
mov
cwde
call
adc
lods
fld
fs
push
dec
lods
xchg
push
xchg
cli
hlt
ins
xor
lods
cli
stos
adc
out
loope
es
push
dec
sub
push
jae
je
bound
jp
dec
(bad)
pop
cmp
scas
imul
scas
cdq
daa
in
(bad)
push
cmp
dec
ficomp
aas
mov
push
jno
out
sti
cmp
or
jmp
int3
popa
nop
push
not
int
loope
ins
pop
mov
sub
jmp
test
cmp
(bad)
clc
iret
rcr
fs
xlat
pop
shl
inc
sbb
cmp
xchg
lahf
add
ds
jne
jg
iret
(bad)
mov
stc
lea
stc
sahf
pop
out
gs
xor
fstp
xchg
dec
lds
loop
add
and
jmp
pop
pop
leave
mov
xor
xchg
test
fadd
jmp
rcr
and
inc
sbb
jae
repnz
adc
outs
cmps
jg
sar
xchg
dec
or
jb
sub
adc
(bad)
lods
jne
mov
push
or
test
es
int3
jge
(bad)
icebp
inc
jae
jle
(bad)
push
(bad)
fist
cmc
call
jns
(bad)
lahf
and
xor
lock
add
dec
sub
bound
leave
mov
test
or
jmp
rcl
pop
aam
outs
sar
test
add
mov
ins
mov
aad
xchg
shl
call
enter
aas
mov
stos
xchg
icebp
das
(bad)
scas
jge
xchg
addr16
xchg
lods
or
fmul
push
loopne
xchg
inc
in
sbb
push
mov
xchg
cmp
jns
cdq
xor
dec
xchg
outs
jmp
jle
fild
fisttp
cmp
sti
xchg
fbld
adc
jo
or
cmp
jne
and
jge
jp
pusha
int
cmc
sub
into
movs
lods
rcr
push
mov
fisubr
or
cwde
add
loope
inc
sub
jno
mov
adc
adc
mov
int
sbb
repnz
adc
push
lods
or
fidivr
in
sbb
push
jb
cli
in
(bad)
mov
push
ss
fabs
in
pop
pop
aam
push
pop
aaa
jecxz
test
aas
test
push
push
pusha
pop
call
hlt
sti
xor
mov
cs
and
lahf
icebp
push
ja
ins
pop
gs
hlt
jno
icebp
mov
retf
lock
rcr
pop
daa
xchg
dec
jbe
dec
repnz
lods
movs
mov
shl
xor
es
out
(bad)
fnstenv
sar
daa
sub
nop
mov
lods
mov
mov
ret
ds
fbstp
cmp
fwait
js
jnp
pop
shl
rcl
aas
add
push
shl
and
aad
xchg
fldenv
adc
not
jno
jge
cld
inc
nop
ins
pop
(bad)
pushf
lahf
and
or
test
and
adc
xchg
sub
cmp
aad
out
imul
dec
adc
cld
pop
ins
mov
jb
out
in
out
dec
push
pop
rcl
inc
and
loop
(bad)
idiv
mov
sbb
pop
mov
or
cli
xchg
push
mov
int
out
xchg
std
(bad)
jmp
imul
jmp
cli
xor
cwde
ss
pop
mov
push
inc
inc
jbe
mov
cmp
pushf
inc
pop
cwde
js
dec
test
dec
jmp
jb
mov
mov
pop
dec
icebp
mov
repnz
push
aad
jg
push
shr
and
jp
jns
ins
xor
mov
je
cmps
adc
lahf
aad
cmc
pushf
ins
mov
stc
push
pop
lods
jne
pop
test
and
call
xchg
jge
inc
int3
add
adc
dec
mov
ja
jmp
push
daa
jp
enter
ja
dec
je
test
adc
jne
(bad)
mov
and
push
test
popf
div
rcl
stc
and
mov
je
outs
pop
popa
rcr
fnstenv
sbb
lods
popa
or
in
retf
xchg
jb
retf
pop
jl
inc
cwde
mov
add
test
mov
out
outs
call
mov
enter
jo
add
or
cmp
mov
jo
mov
cmps
add
outs
push
dec
mov
call
out
and
addr16
icebp
lds
rcr
sbb
sub
test
adc
pushf
fnstenv
repz
sbb
and
sar
mov
jbe
shl
push
add
(bad)
sbb
scas
stos
or
fadd
cmps
inc
outs
sub
int3
dec
stos
add
das
jbe
adc
mov
fisub
mov
iret
rcl
test
mov
ins
cmp
cmps
xchg
outs
out
add
push
pop
and
mov
sar
out
inc
fist
popa
push
or
clc
iret
jae
dec
mov
pop
test
cmp
std
push
pop
fisttp
adc
mov
add
out
mov
mov
xchg
or
or
test
lahf
push
out
ins
shl
cld
movs
fwait
inc
ret
loope
push
pushf
es
adc
xchg
mov
cmp
dec
aas
pop
dec
mov
dec
(bad)
hlt
retf
les
and
(bad)
rol
inc
retf
jle
fs
repnz
ret
jno
test
cmp
xchg
pop
loope
push
pop
ret
inc
cmp
and
pop
gs
int3
jb
xor
or
(bad)
movs
fcmovbe
push
ret
addr16
(bad)
jecxz
hlt
fnsave
ret
cmc
sub
jl
ja
test
pop
sbb
pushf
shl
rcl
(bad)
pusha
test
jne
push
push
and
fwait
push
mov
jmp
and
xor
and
dec
out
mov
shl
add
popf
add
or
dec
mov
stc
ror
movs
sar
or
cmps
scas
fbld
sub
pop
and
cmp
repnz
into
pop
adc
jg
shl
jle
imul
or
daa
mov
nop
fcom
mov
mov
jno
xor
push
stc
ja
dec
das
and
lods
les
loop
sub
xchg
pop
cmp
sub
rcr
mov
xchg
or
sub
fs
push
xor
jecxz
adc
jle
xor
movs
add
inc
sub
movs
push
je
fwait
sti
xchg
test
mov
lock
add
push
adc
int3
dec
xchg
adc
in
out
or
adc
test
mov
clc
imul
leave
repnz
outs
rcl
mov
ss
gs
sub
xor
bound
and
push
out
mov
sti
cmp
jno
sub
dec
push
aad
outs
das
inc
(bad)
pop
jp
std
mov
(bad)
mov
loopne
pop
xchg
xchg
push
clc
js
shl
add
xor
inc
scas
pop
push
jp
retf
rol
int
adc
push
mov
call
and
imul
add
pop
sbb
int3
mov
loop
repnz
xchg
loopne
addr16
inc
inc
pop
(bad)
xchg
arpl
in
sahf
retf
jb
cwde
sbb
adc
lea
in
outs
ins
xor
sub
push
ins
jns
cmp
jnp
cmp
push
add
retf
xchg
fsub
fiadd
mov
inc
xor
fmul
cmp
and
push
cs
inc
add
hlt
sub
jecxz
fcmovu
jne
lods
xchg
jbe
scas
nop
xchg
xchg
sti
and
in
add
pop
sub
mov
cli
aad
(bad)
(bad)
and
push
imul
pop
lods
mov
push
std
push
fisubr
xor
sub
xor
xor
dec
dec
pop
mov
jno
es
in
adc
cbw
test
(bad)
pushf
inc
pop
adc
mov
mov
push
xchg
jp
mov
addr16
inc
ss
lock
or
dec
adc
dec
sar
mov
stos
test
(bad)
mov
pop
test
xchg
jmp
jo
scas
iret
xchg
shr
and
mov
sbb
inc
popa
test
mov
mov
cdq
jmp
aad
mov
imul
or
xchg
pop
loopne
add
jp
push
sbb
cld
sbb
cmp
xchg
inc
or
cmp
cmps
test
jno
mov
push
daa
pop
mov
out
dec
fiadd
add
aad
add
enter
rcr
xor
push
or
jns
jnp
adc
jle
and
fistp
push
cmp
ficomp
clc
push
mov
mov
cmp
stc
pop
fiadd
rol
lods
(bad)
xchg
dec
xchg
sbb
loopne
sbb
cmp
popa
in
cld
mov
jo
loop
xor
ja
test
ret
mov
mov
clc
inc
bound
vsqrtpd
jns
sub
jecxz
addr16
fdiv
vmulps
inc
xchg
cs
aaa
jmp
sbb
or
dec
daa
call
pop
enter
iret
and
xchg
and
les
(bad)
int3
cmp
push
fcomp
pop
jae
mov
mov
sbb
mov
push
shl
leave
test
mov
(bad)
mov
mov
test
or
imul
xchg
retf
cmps
add
xor
jbe
lahf
push
call
cmps
mov
fcmovnb
xlat
pop
inc
inc
sub
pop
sbb
(bad)
cs
jae
or
sbb
scas
leave
(bad)
cmp
xchg
pop
rcl
mov
adc
mov
xchg
push
pop
test
pop
ins
pop
imul
imul
sbb
xchg
or
and
jecxz
ret
inc
or
adc
inc
sub
jno
push
rol
jmp
cmc
mov
jle
loop
enter
cmp
jecxz
sbb
mov
into
ins
pop
cmp
pop
add
lods
jnp
pop
pop
jg
add
mov
xlat
(bad)
xor
loope
sbb
outs
mov
(bad)
pop
dec
test
int
pop
dec
daa
sub
imul
enter
xor
icebp
or
ret
pop
enter
push
xchg
jmp
xor
push
(bad)
lock
add
pop
movs
js
aam
xor
arpl
shl
std
stc
push
mov
aam
cmp
push
add
mov
fld
ins
mov
xchg
push
adc
mov
cmp
push
sub
mov
cmp
pushf
jecxz
int3
adc
(bad)
xchg
int3
push
pushf
clc
cmps
leave
xor
shr
jae
daa
push
leave
add
fcmovne
pop
and
adc
mov
(bad)
data16
ss
dec
xlat
cwde
pop
retf
in
je
sbb
mov
cmp
(bad)
adc
lahf
jbe
idiv
add
imul
push
ret
mov
jno
retf
sbb
imul
dec
push
mov
xchg
jne
xchg
jb
xlat
fisub
(bad)
es
mov
sbb
add
dec
pop
stos
pop
or
inc
add
jne
inc
push
push
icebp
outs
cmp
sub
inc
or
sbb
mov
and
(bad)
stos
(bad)
cld
out
movs
mov
mov
repz
test
into
out
in
jbe
popa
push
popa
add
ror
xlat
shl
mov
les
shl
fnstenv
push
iret
cld
fld
and
test
sub
(bad)
cmp
pop
add
pop
pushf
push
cmp
rol
jmp
fidivr
sbb
arpl
cli
mov
pop
sub
pop
push
and
sar
sub
push
dec
dec
imul
retf
pusha
ins
out
repnz
mov
push
jp
mov
sub
scas
sbb
cmps
popa
and
push
jnp
jne
ins
or
add
sbb
int3
lock
mov
call
stos
mov
fwait
jg
push
add
adc
push
jae
imul
cwde
push
test
xlat
or
push
jne
sbb
addr16
enter
jne
into
push
xor
pusha
(bad)
es
retf
xlat
aaa
mov
pushf
pop
sar
and
adc
cmp
pop
add
dec
pop
(bad)
mov
cli
jo
or
(bad)
sub
aas
mov
xchg
jle
lahf
(bad)
retf
jge
pop
sub
fcom
lock
dec
mov
shl
mov
out
mov
jge
in
pop
out
add
pop
dec
inc
adc
cmp
ret
push
(bad)
lds
fs
push
and
dec
push
xor
push
jge
popa
inc
repnz
sbb
hlt
inc
fwait
mov
idiv
loop
inc
xchg
mov
pop
sti
and
mov
jae
pop
jne
cmps
adc
mov
inc
mov
out
mov
push
xchg
mov
in
ret
mov
jne
pop
push
stc
test
and
sti
push
xor
push
sbb
dec
and
div
scas
jns
mov
push
cmp
movs
xchg
out
pop
push
dec
xor
ss
and
and
pop
je
fdiv
call
sub
js
sub
fst
pop
fcom
adc
imul
or
push
loop
mov
mov
push
jne
addr16
sub
addr16
loopne
mov
ins
(bad)
push
div
bound
shl
xor
pop
div
push
adc
int
fnsave
fldln2
stos
push
cmp
imul
jmp
or
pop
sti
push
sub
inc
sbb
mov
stc
jae
jae
rol
fiadd
cmc
sub
pop
push
mov
mov
movs
dec
add
ins
aam
dec
push
sbb
enter
inc
in
jecxz
mov
inc
sub
sub
outs
test
xor
xchg
mov
hlt
pushf
xchg
pop
loop
mov
jns
cmc
sbb
mov
inc
jnp
mov
cmp
imul
leave
xor
fs
test
mov
(bad)
cdq
xor
jne
push
mul
loope
and
mov
mov
fsub
and
push
sbb
sub
pop
mov
ins
inc
cwde
xchg
call
jae
das
add
sub
mov
fisubr
mov
dec
jg
shr
in
push
rcl
adc
(bad)
pop
(bad)
jp
sti
fs
mov
add
test
push
je
dec
push
mov
mov
stc
sti
scas
(bad)
xchg
dec
ret
dec
pop
push
mov
and
sbb
adc
outs
stos
ins
test
xchg
pop
push
sub
mov
idiv
loope
dec
loopne
loop
mov
mov
dec
dec
es
push
or
jp
int
fstp
fdivr
jbe
adc
repz
mov
or
mov
int3
(bad)
cmp
and
jb
leave
fdivr
enter
mov
dec
fst
fld
jl
dec
fidiv
sbb
out
pop
push
or
push
(bad)
out
cli
xor
and
dec
cmp
stos
div
mov
sti
mov
jno
pushf
in
out
retf
inc
cmps
mov
or
sbb
pop
dec
daa
sbb
cmp
xor
push
sbb
pop
out
daa
add
repz
xor
stc
es
ds
push
adc
lods
xchg
mov
std
mov
pop
int3
or
push
test
xlat
repnz
mov
xchg
mov
int3
sub
mov
popa
xchg
in
outs
(bad)
sbb
inc
pop
push
push
in
mov
rol
push
add
mov
mov
outs
xchg
imul
mov
and
jno
push
xchg
dec
rcl
cdq
std
iret
push
test
inc
dec
adc
mov
xchg
sbb
pusha
pop
scas
xchg
arpl
sbb
out
ret
and
mov
lods
pop
pop
xor
das
cmp
loopne
xchg
cs
mul
sbb
iret
mov
lock
lahf
dec
aam
push
push
xor
cdq
jbe
imul
pop
sbb
cmc
imul
dec
lods
cmp
ds
rcl
imul
je
push
mov
pusha
jl
sbb
rcr
jmp
(bad)
sbb
addr16
xor
add
xor
mov
push
lock
in
ret
test
test
push
lods
mov
(bad)
ins
sbb
aad
sub
xchg
cmp
imul
mov
cmp
imul
inc
ffree
or
adc
aam
xor
dec
pop
cmp
push
xchg
movs
movs
in
push
out
push
cmp
xchg
mov
pusha
adc
mov
mov
shl
aad
ja
pop
retf
fs
inc
push
mov
jmp
out
push
push
xor
fwait
adc
lds
movs
mov
and
mov
push
ins
int3
mov
inc
adc
nop
xor
cmp
test
test
mov
das
xchg
(bad)
out
imul
push
imul
dec
jnp
mov
sahf
add
cdq
ss
pushf
aas
or
ins
xchg
adc
ins
fwait
or
mov
xchg
arpl
and
js
add
arpl
call
inc
fcomp
(bad)
or
xchg
jmp
aad
es
pop
test
js
das
mov
xchg
mov
xor
add
add
(bad)
cli
stos
inc
sbb
dec
das
shl
les
iret
dec
mov
push
daa
imul
mov
out
in
daa
cmp
fsubr
push
inc
sub
xchg
ret
cmp
mov
inc
sub
xchg
cmps
out
cmp
inc
daa
pop
mov
aam
sbb
add
sti
popf
push
inc
gs
inc
dec
sub
push
jbe
fstp
inc
add
inc
addr16
jl
push
cmp
and
outs
sub
dec
int3
outs
sub
push
push
mov
inc
ins
sbb
fimul
jge
jnp
data16
add
inc
jl
and
mov
fs
cdq
icebp
in
ins
es
sbb
into
mov
cmp
ret
adc
retf
shr
jb
pop
lods
pop
push
xchg
push
rcr
pop
in
xor
or
cmp
stc
(bad)
call
push
xchg
pop
and
add
(bad)
push
adc
add
mov
lods
jb
pusha
mov
cmp
dec
fsubr
jnp
pop
in
jge
and
xchg
shr
and
fisubr
aas
or
or
sbb
pop
sub
fiadd
fdecstp
or
xchg
and
fwait
sbb
pop
out
adc
repnz
cmc
push
add
and
mov
mov
cmp
test
jno
add
adc
push
push
dec
cmp
aaa
xor
mov
jne
sti
retf
mov
push
and
sbb
sbb
inc
repnz
fisub
aaa
out
not
popf
cmp
push
icebp
retf
sub
lahf
(bad)
jmp
cmp
adc
xchg
aas
pop
clc
ret
fist
and
inc
pop
dec
ret
jo
or
sub
fsub
sti
or
xlat
es
push
and
sbb
mov
std
pushf
inc
shl
dec
cmp
cmps
inc
cwde
jnp
push
pop
or
push
js
cld
mov
data16
leave
mov
addr16
xor
sahf
and
inc
pop
add
push
adc
pushf
scas
xchg
fwait
adc
ja
ds
jge
mov
xchg
mov
icebp
or
dec
dec
mov
fwait
dec
cmps
sahf
frstor
sub
jp
cmp
mov
daa
(bad)
lock
repz
lock
push
(bad)
into
dec
mov
push
mov
je
lahf
lods
mov
not
sub
or
cmp
mov
aaa
repz
mov
add
push
std
inc
cmp
or
xor
lahf
mov
test
ret
shl
dec
adc
out
mov
test
mov
cwde
mov
inc
sbb
fld1
dec
push
stc
fiadd
mov
sbb
mov
imul
pop
aaa
sbb
push
std
pop
mov
mov
sbb
gs
mov
add
ret
mul
add
mov
push
test
mov
mov
mov
push
mov
enter
adc
and
call
push
les
mov
fnstcw
leave
call
mov
xchg
pop
dec
mov
sbb
dec
pop
std
push
shr
je
add
xchg
clc
call
jle
stos
ret
jmp
inc
es
mov
stc
fild
pusha
jecxz
mov
ja
ds
and
push
jae
js
pop
push
pop
push
in
dec
call
out
sbb
clc
addr16
sti
and
ins
mov
push
rcl
shr
enter
pop
(bad)
test
mov
add
mov
push
inc
cmp
or
je
stos
sbb
fidiv
daa
jb
pop
jae
dec
adc
jbe
cmp
ret
or
inc
dec
dec
lock
aaa
or
lock
mov
retf
dec
stos
scas
test
fisubr
out
sub
inc
(bad)
cli
inc
pop
xchg
test
sbb
jbe
test
jmp
and
daa
inc
pop
inc
dec
or
loope
add
push
(bad)
push
(bad)
mov
mov
fmul
mov
in
hlt
or
pop
jp
jge
mov
lahf
cmp
stos
cmc
inc
test
or
dec
iret
jno
pop
ja
(bad)
pop
dec
cmp
xchg
(bad)
jmp
push
sbb
repnz
mov
cmp
and
mov
loopne
push
inc
in
cli
(bad)
xchg
ja
icebp
or
loopne
push
cs
cmp
mov
jmp
or
cmp
jecxz
add
neg
sub
adc
cld
out
je
retf
(bad)
pop
outs
fadd
and
push
mov
dec
mov
mov
push
sbb
dec
rcl
icebp
push
jl
adc
ins
cmp
gs
push
mov
fsubr
ss
fmul
(bad)
push
fisubr
xor
(bad)
stc
mov
pop
pop
sub
cmp
lods
dec
into
pop
mov
movs
pop
and
sub
mov
mov
adc
stos
xor
movs
xchg
inc
aam
xor
cmp
sbb
mov
cmp
xchg
inc
int3
cwde
cmp
(bad)
cmp
out
sti
or
add
push
lahf
test
xor
sub
data16
xchg
mov
and
or
sub
(bad)
push
in
out
into
clc
test
dec
clc
mov
push
mov
imul
mov
fs
and
sbb
adc
call
into
jno
ss
call
xchg
xchg
cmp
repz
add
push
inc
add
pop
and
aam
sbb
mov
stc
jl
adc
fadd
inc
or
in
inc
cdq
xor
xchg
jbe
js
jmp
outs
ret
sti
or
inc
pop
pushf
mov
mov
sbb
mov
out
leave
pop
(bad)
(bad)
stos
mov
add
push
jmp
shl
mov
stos
pop
sbb
frstor
push
jle
jge
outs
and
pop
pop
ja
sbb
scas
stos
mov
cmp
xchg
mov
les
cmps
dec
mov
inc
pop
sub
dec
loop
dec
stos
sbb
or
dec
dec
ds
sbb
pop
add
mov
pop
lods
sub
fdivr
clc
hlt
fld
push
xchg
dec
fdiv
add
jge
sub
cdq
out
cmp
jb
jae
adc
lods
imul
adc
test
call
push
pusha
jne
jo
shl
jmp
rol
std
fiadd
cmp
cmp
aad
mov
lods
jmp
sbb
loope
int
dec
test
pop
loope
and
jle
mov
std
push
inc
(bad)
mov
mov
mov
dec
call
sub
mov
adc
cmps
sub
mov
jmp
push
xchg
push
ins
mov
ss
retf
jge
out
mov
jmp
xor
scas
pop
or
outs
mov
dec
int3
stos
sahf
pusha
int
pushf
inc
cmp
cwde
popa
sti
jg
int
(bad)
fst
(bad)
sub
call
add
pop
cmp
fcom
fsubp
outs
adc
push
imul
adc
or
(bad)
cmps
push
fmul
lods
pop
xor
es
repnz
outs
imul
into
add
mov
sub
adc
and
or
fs
out
mov
dec
sbb
xor
cli
xchg
mov
ficomp
pop
aaa
jp
ret
dec
pop
dec
nop
jmp
(bad)
stos
push
stos
jnp
std
aas
pop
sub
call
aad
mul
xchg
jbe
adc
inc
jno
fs
cmp
jmp
pop
fistp
adc
sub
pop
xor
cs
cmp
sub
int
in
movs
rcr
in
pop
retf
or
repnz
and
aas
jmp
test
push
mov
xor
pop
dec
push
dec
and
(bad)
fstp
outs
in
shl
aas
jbe
mov
pop
jecxz
jecxz
(bad)
shl
and
jmp
(bad)
jmp
movs
hlt
push
dec
hlt
sbb
leave
cmp
ficom
lahf
mov
ss
out
add
or
jb
fs
js
ror
dec
in
pop
in
in
rcl
lea
lds
cmp
adc
(bad)
fsub
aas
cmp
or
cmp
or
adc
add
mov
mov
or
aas
das
jo
out
inc
loope
daa
cmp
bnd
fxch
jp
pop
(bad)
jo
movs
test
add
fidiv
movs
repnz
mov
dec
pop
out
add
dec
jno
fistp
enter
lods
call
addr16
scas
jle
inc
js
sar
xlat
inc
dec
jb
cmps
mov
(bad)
adc
jne
popa
xor
sbb
jnp
cmp
aad
aaa
mov
fstp
lods
mov
stos
js
sti
dec
sub
loopne
pushf
mov
clc
sbb
sbb
fcmovnb
push
push
out
cmps
in
gs
mov
mov
and
or
nop
hlt
push
xor
jmp
loope
cmp
test
push
retf
outs
adc
lods
out
inc
push
xor
cli
mov
out
adc
sbb
retf
(bad)
test
sub
sbb
inc
cmp
sub
push
mov
xchg
stos
xchg
out
enter
into
gs
sub
add
xchg
and
adc
test
adc
popa
add
mov
cmps
dec
loope
jno
fs
cmp
inc
add
fs
int
pop
push
test
cli
pop
sahf
dec
jle
scas
call
ja
cmp
pop
retf
inc
lock
loopne
mov
fnstcw
std
cmc
add
xor
adc
scas
and
cmps
test
mov
fs
push
ficomp
sti
or
cmps
leave
push
pop
lahf
pop
sub
nop
in
adc
pop
jbe
xlat
mov
lock
jmp
cmps
xor
fsub
xor
jmp
jle
mov
xor
lods
pop
sub
dec
in
or
dec
mov
push
fld
sti
das
stc
shr
mov
fisubr
jns
stc
sub
jne
sub
adc
retf
not
ret
push
aaa
rcl
cmp
dec
mov
cwde
movs
or
pop
(bad)
or
loop
mov
add
shl
xchg
out
add
dec
stos
in
jle
scas
scas
push
pop
hlt
fidivr
or
push
pusha
test
cmp
out
(bad)
loopne
pop
or
out
inc
fs
adc
adc
xor
call
push
xor
or
rcr
xchg
ins
mov
cmp
cmps
mov
sub
mov
mov
xor
and
retf
shl
jecxz
adc
mov
cdq
js
jmp
dec
shr
sub
es
popf
mov
dec
jl
shl
cdq
and
dec
(bad)
pop
aas
push
adc
mov
fstp
ins
(bad)
pop
mov
lahf
jp
fistp
push
jecxz
push
xchg
lahf
fdiv
daa
lock
push
cdq
add
(bad)
add
aad
mov
cs
pop
imul
test
mov
sub
xor
cmp
lea
nop
xor
ins
or
jb
adc
(bad)
std
cmp
out
xchg
xor
arpl
fucomi
xchg
repz
retf
lock
or
xchg
adc
inc
and
inc
add
and
jbe
pop
dec
nop
lahf
into
dec
jl
aaa
pop
push
rol
push
inc
mov
add
or
fcom
dec
leave
push
retf
cmp
sbb
nop
pop
or
loop
jp
and
mov
sub
cmps
ins
jno
lea
or
dec
popf
in
sar
add
imul
push
fcomp
mov
or
dec
stos
ins
retf
pop
out
mov
and
daa
out
ins
inc
cmc
sbb
mov
push
or
cmps
mov
or
adc
or
jp
clc
pop
ins
es
ja
jp
push
mov
xor
out
xchg
adc
aad
shr
cs
arpl
test
gs
inc
adc
or
nop
fcomi
xlat
add
mov
inc
xchg
dec
and
nop
xchg
inc
loope
mov
mov
pusha
cwde
cmp
outs
rol
cmps
cdq
and
(bad)
mov
mov
(bad)
fbld
(bad)
xchg
jmp
xchg
ficomp
inc
addr16
mov
lock
xlat
adc
pop
dec
dec
mov
push
or
inc
sub
sub
fld
dec
outs
add
and
dec
adc
or
pop
and
mov
rol
mov
push
mov
lods
add
test
test
aad
jno
je
test
adc
push
add
or
xchg
sbb
pop
fild
test
xor
(bad)
je
mov
sbb
mov
aad
push
cmps
shr
or
or
mov
(bad)
int3
iret
or
pop
pop
or
icebp
inc
jnp
out
(bad)
jmp
cmp
mov
movs
arpl
rcr
mov
sbb
call
int
aaa
cmc
fcomp
leave
ds
push
mov
xchg
inc
cmc
cmp
dec
not
sub
xchg
xchg
std
arpl
mov
adc
into
imul
sbb
jno
or
sub
sub
pop
xor
shr
pop
jmp
pop
pop
jo
inc
cmps
fstp
mov
and
pop
in
lock
xchg
call
sbb
add
pop
enter
add
add
push
in
lds
fdivr
or
mov
std
dec
sbb
sbb
adc
pop
push
call
popa
adc
mov
cli
mov
mov
rol
sub
sub
js
jno
mov
in
(bad)
mov
neg
in
sbb
shr
lds
mov
mov
cli
add
in
jl
inc
clts
or
xchg
sar
cs
jne
sahf
jg
sub
mov
int
jecxz
jbe
jge
repnz
jmp
pop
mov
cmp
pop
gs
outs
test
out
jg
jne
jmp
mov
pop
and
stos
test
sbb
outs
adc
test
data16
mov
mov
addr16
test
or
je
mov
rcl
clc
out
mov
pop
test
sahf
jo
pushf
push
in
mov
(bad)
fist
imul
out
dec
push
shr
push
or
pop
dec
icebp
sbb
cmp
repnz
mov
cmps
clc
push
sbb
mov
add
call
mov
or
out
int
xchg
ins
or
fsubr
or
mov
mov
mov
sub
jb
and
add
sub
and
icebp
adc
sub
mov
scas
sbb
imul
ja
xchg
cdq
xlat
mov
mov
imul
addr16
ja
and
mov
xchg
ficomp
jle
pop
sub
iret
push
sub
sbb
scas
pop
jne
in
dec
ss
pop
and
test
xchg
cmp
call
outs
jge
push
mov
jno
ds
adc
cmc
pop
xchg
shr
mov
sub
inc
jmp
dec
sbb
mov
xor
ret
imul
sti
jne
jmp
cli
(bad)
iret
add
pop
pop
in
std
jle
into
xchg
pop
loope
jle
push
mov
ds
fwait
jl
lock
dec
adc
sahf
shl
inc
xor
cmps
movs
repnz
adc
aaa
loopne
or
push
xchg
ins
mov
mov
mov
jg
(bad)
mov
pop
outs
test
imul
in
dec
mov
repz
popf
shl
mov
pop
add
cs
mov
xchg
imul
inc
inc
jge
sub
xor
pop
or
ja
in
push
fs
sub
mov
aam
inc
ret
lds
fnstcw
xchg
fldenv
cmp
scas
sbb
(bad)
cmp
jl
(bad)
sti
xor
xor
mov
sbb
inc
fs
xor
or
push
call
unpckhps
fcmovnbe
fstp
mov
xor
das
inc
pop
aaa
les
das
push
outs
movs
dec
lods
bound
pop
push
in
iret
mov
pop
int3
mov
das
(bad)
into
mov
push
in
(bad)
ror
repnz
(bad)
cmps
pop
test
fld
jecxz
hlt
fcmovne
mov
pusha
pop
mov
inc
inc
push
mov
test
ss
jne
mov
in
out
sub
push
lahf
clc
mov
js
sbb
mov
enter
fwait
sub
dec
pop
mov
pop
or
fsub
inc
jae
pop
cli
and
adc
repnz
mov
enter
pop
stc
ror
(bad)
jns
sub
iret
inc
and
mov
je
pop
arpl
loope
(bad)
xchg
sbb
cmps
xchg
sub
mul
add
movs
jecxz
les
mov
mov
imul
xchg
inc
jp
jge
aad
mov
iret
xor
pop
imul
std
jae
ins
dec
sbb
bound
inc
clc
inc
or
sbb
mov
pop
cmps
rcl
mov
sbb
arpl
xchg
xor
ret
push
adc
cmp
shl
loopne
lahf
jno
xor
adc
mov
adc
iret
cli
mov
es
and
jnp
ret
pop
test
push
mov
bound
or
pop
inc
xor
ds
rol
inc
movs
lea
(bad)
pop
sbb
cmp
mov
shr
inc
mov
in
out
cmp
loope
sub
cdq
mov
loop
rcl
repz
mov
cli
jge
ds
cs
out
dec
mov
and
cwde
add
les
xor
dec
cmp
jp
dec
cwde
or
shr
adc
iret
addr16
pop
test
adc
inc
adc
jecxz
sbb
xchg
cmp
retf
test
xchg
daa
mov
hlt
fwait
mov
and
fwait
aam
inc
sahf
mov
(bad)
inc
cs
mov
and
mov
rcl
sbb
shl
int3
mov
jge
lds
jo
jnp
xchg
das
or
pop
movs
jae
mov
add
(bad)
(bad)
jl
test
push
inc
pop
and
cld
cdq
outs
mov
jg
jecxz
cwde
cli
add
inc
not
adc
dec
sub
das
jp
call
add
sbb
mov
pushf
out
mov
cs
es
cmps
pop
mov
ds
icebp
sbb
mov
stc
addr16
mov
or
inc
idiv
pop
mov
movs
call
ret
lea
sti
jae
js
pop
inc
and
cwde
inc
icebp
ret
push
jb
mov
add
scas
jae
push
outs
sar
mov
lods
mov
push
int
loope
imul
out
aam
pop
pop
rol
and
cmp
js
out
retf
shr
adc
and
cmp
xchg
sub
sbb
dec
inc
cmp
mov
cmp
cdq
sbb
shl
fwait
cmps
fcom
ret
sbb
shl
jo
lods
fld
pop
imul
and
xchg
sahf
pop
enter
imul
imul
or
mov
sahf
aad
es
adc
pop
pop
dec
cli
sbb
out
in
fnstsw
and
mov
mov
mov
retf
pop
(bad)
icebp
pop
test
jge
inc
fwait
mov
stos
mov
idiv
sbb
push
cmps
icebp
mov
fistp
adc
in
mov
xlat
scas
inc
je
add
xor
mov
pop
pop
or
out
or
push
jmp
inc
xchg
dec
inc
dec
stos
mov
or
xchg
daa
xchg
mov
cmp
out
mov
mov
int
in
mov
pusha
loope
mov
stc
push
ins
or
dec
mov
push
repz
movs
xor
out
add
ins
cli
mov
pop
push
mov
call
nop
add
imul
ds
jl
scas
pop
das
int
cld
ror
js
lods
out
shl
imul
dec
pusha
int3
mov
pop
and
inc
enter
dec
in
out
adc
lods
dec
stos
mov
outs
mov
adc
sbb
mov
rol
shl
aam
add
jmp
dec
pop
test
in
cs
jns
xchg
test
jns
loopne
out
bound
and
jae
scas
cmp
into
sbb
or
enter
es
fcom
dec
adc
inc
and
out
das
push
les
int
pop
inc
scas
(bad)
cmp
jae
jo
sbb
xchg
or
popa
ins
aad
ins
xchg
ins
mov
aas
mov
push
fadd
fwait
push
cwde
jmp
test
add
(bad)
in
and
jne
stc
les
adc
ds
cmp
cmc
mov
out
call
loopne
cmc
pop
inc
call
mov
inc
cld
or
ja
push
movs
mov
cmps
jb
and
mov
mov
pop
(bad)
cli
cmp
mov
and
pop
pushf
mov
pop
sahf
mov
inc
dec
mov
push
or
inc
mov
inc
cli
je
mov
movs
das
add
xchg
pop
das
sti
cmp
push
and
test
inc
sti
pushf
ror
jns
mov
xchg
retf
or
inc
push
sar
mov
sub
jmp
outs
push
test
(bad)
(bad)
icebp
pop
es
clc
xor
loope
jle
push
jp
mov
and
push
loope
ss
nop
jbe
fwait
stos
mov
sbb
sbb
jmp
xchg
push
loop
leave
out
test
mov
clc
cmps
lea
fiadd
rol
push
fcmove
sbb
pushf
xor
into
pop
or
jge
adc
dec
jnp
adc
mov
popa
xchg
loopne
inc
sub
call
gs
and
(bad)
sbb
fldcw
add
jne
jp
jno
ss
jo
mov
loopne
jg
cs
lods
xchg
fisub
pop
scas
aam
mov
(bad)
inc
or
aaa
scas
data16
jle
rol
mov
cmps
das
inc
inc
fadd
dec
pop
test
repz
sbb
clc
in
div
pop
fiadd
aaa
pop
jmp
dec
inc
and
xor
fwait
jge
xor
pop
nop
ret
jg
fwait
lahf
mul
pop
xlat
jle
fwait
push
dec
adc
inc
adc
dec
xchg
stos
mov
add
cmp
int
pop
pop
sub
out
mov
xchg
and
mov
and
enter
add
cli
or
stos
aas
cmp
add
into
gs
and
popa
xchg
xor
or
push
ja
outs
mov
jae
or
retf
std
mov
ret
cli
iret
call
rcr
cld
dec
cmps
out
xor
out
enter
repz
xor
mov
adc
pop
idiv
aas
dec
mov
add
xor
stos
pop
es
sub
gs
cmp
inc
repnz
cdq
loopne
mov
xor
les
nop
dec
add
popa
add
cmp
(bad)
xlat
mov
inc
or
mov
push
xor
pop
and
es
shl
nop
js
pop
inc
cmp
pop
stos
and
cwde
mov
call
daa
xchg
mov
push
sbb
push
adc
movs
or
dec
loope
or
outs
or
or
ss
or
aad
(bad)
repnz
adc
mov
xchg
add
imul
loope
div
cmc
scas
add
in
jmp
push
xchg
jne
pop
xchg
mov
mov
inc
adc
loopne
rol
lahf
xor
cmp
inc
dec
mov
out
sbb
inc
push
call
sar
test
ficomp
out
out
scas
imul
sbb
mov
or
je
cmp
push
sub
mov
xor
or
lea
(bad)
ins
dec
adc
dec
lds
mov
scas
repnz
push
adc
push
pop
(bad)
cmp
sbb
repz
mov
xchg
movs
imul
dec
xor
(bad)
out
stos
pushf
mov
pop
jo
cmp
call
jns
or
std
int3
mov
lods
pop
hlt
jnp
push
stc
and
lock
mov
mov
push
fld
cwde
shl
(bad)
pop
mov
or
test
ds
pop
mov
sbb
xchg
dec
or
out
cmc
cdq
mov
jle
push
in
mov
jp
pop
mov
inc
xchg
jae
inc
jg
xchg
jmp
jg
mov
mov
fucom
ss
or
rol
push
lods
xor
(bad)
in
daa
push
inc
repnz
xchg
div
push
dec
fwait
cld
fcomp
rcr
in
adc
pushf
adc
movs
aad
mov
jnp
dec
ret
cmc
popa
int
je
cli
sub
retf
jge
test
pop
int3
fst
(bad)
pushf
sub
bound
ret
dec
cmps
neg
lahf
test
push
adc
loop
fld
mov
cmp
adc
xchg
mov
clc
fcom
or
ret
dec
xchg
ins
mov
mov
test
cmp
leave
fiadd
lods
pop
mov
popf
push
pop
push
in
cmc
out
or
popf
mov
or
jg
and
sbb
mov
push
pop
inc
popf
sahf
xchg
sub
add
std
aas
push
fdiv
or
inc
inc
dec
or
jmp
(bad)
fucomip
add
inc
inc
imul
adc
retf
repz
sti
mov
sbb
cmp
fs
sbb
mov
mov
(bad)
ins
pop
xchg
xor
mov
into
stos
mov
loop
gs
jg
ror
adc
fcomp
pop
mov
fild
mov
or
pop
ficom
fiadd
sbb
mov
retf
(bad)
lahf
sub
movs
arpl
test
cwde
xlat
push
and
pop
inc
repz
shl
lods
retf
lds
dec
and
add
pop
xchg
xchg
lea
push
fnstcw
jo
jle
sbb
retf
bound
scas
mov
(bad)
xor
(bad)
sbb
push
inc
mov
mov
(bad)
pop
gs
loop
lock
das
retf
xor
fadd
push
ret
loop
inc
or
push
call
lahf
pop
or
mov
xor
daa
or
popf
imul
aam
and
div
xchg
sbb
popa
in
fst
jmp
mov
push
(bad)
xor
mov
sbb
pop
xchg
aad
jp
rcl
cmp
ins
dec
cmc
out
sbb
inc
sbb
pop
mov
xor
dec
retf
xchg
push
inc
mov
out
xchg
mov
test
test
call
aas
sahf
(bad)
movs
fadd
mov
ror
mov
call
call
sub
adc
add
jg
imul
loope
sbb
popa
scas
push
sub
gs
pop
jg
adc
xchg
movs
cdq
xor
fisttp
sub
test
mov
in
and
mov
sbb
add
pop
mov
addr16
retf
sub
xchg
out
mov
sbb
inc
push
cdq
iret
cld
inc
scas
in
adc
sub
inc
popf
xchg
inc
(bad)
cmp
mov
mov
xchg
push
jge
pop
sar
add
or
mov
lods
push
sahf
cmp
jnp
pushf
jmp
and
adc
cmc
xchg
inc
jle
dec
cmp
push
sbb
pusha
xlat
(bad)
xlat
(bad)
(bad)
(bad)
call
xchg
call
push
cmps
ss
fistp
xchg
cmp
cmp
pop
or
sbb
push
retf
inc
or
mov
ss
not
xchg
push
add
mov
cmc
xchg
stos
xchg
arpl
push
jmp
and
fwait
xor
mov
mov
iret
dec
inc
ins
es
cdq
pop
rol
add
push
push
hlt
mov
xor
pop
mov
inc
cwde
cwde
icebp
scas
xor
and
lods
outs
cld
dec
test
sub
push
mov
mov
or
jmp
stc
push
ds
push
fisttp
jmp
push
xchg
mov
sar
lahf
fidivr
xchg
fmul
xchg
test
cmps
xchg
test
fwait
aad
pusha
push
mov
sahf
pusha
cmps
aam
or
dec
aas
das
xchg
addr16
add
arpl
stos
sub
popa
sbb
and
sub
cmps
sub
ret
out
fsub
jno
xchg
iret
repnz
icebp
dec
mov
inc
into
ret
rcl
cli
in
out
out
push
jb
xchg
popf
aad
mov
jp
mov
jo
or
mov
mov
int
cwde
imul
fistp
dec
data16
mov
jmp
in
mov
sbb
mov
in
xchg
jl
xchg
aaa
and
adc
int
nop
shr
retf
lock
stos
outs
lahf
scas
dec
mov
xchg
rcr
loope
or
jo
dec
adc
xchg
sbb
loop
movs
sub
mov
repz
mov
add
dec
pop
push
sbb
xchg
xchg
cvtpi2ps
fs
xor
xor
mov
and
adc
or
cdq
xchg
push
fiadd
cli
call
sub
lods
jecxz
sub
aad
int
aam
scas
(bad)
push
pushf
outs
loope
jge
pop
test
shl
ret
int3
pusha
mov
pop
inc
jno
addr16
loopne
fs
push
mov
mov
ins
imul
push
(bad)
jp
sbb
ins
inc
add
mov
push
mov
out
jge
xor
loopne
pop
in
stos
xchg
and
psubusw
je
inc
stos
das
call
iret
lock
xchg
sti
or
adc
jg
push
xchg
clc
mov
f2xm1
fldenv
jge
rcl
xchg
and
add
or
cwde
sbb
fiadd
inc
dec
(bad)
test
lds
or
pop
mov
inc
int
mov
adc
in
lea
(bad)
jae
push
sbb
and
dec
stc
int3
scas
jg
or
adc
js
retf
je
test
test
dec
mov
cli
push
cli
rol
or
xchg
mov
fs
rcl
test
sbb
sbb
clc
dec
retf
idiv
adc
dec
cli
dec
bound
xlat
clc
pushf
mov
pop
mov
clc
inc
frstor
call
adc
jae
adc
pop
xlat
shl
test
add
loope
xor
inc
inc
fisub
rcr
jne
(bad)
mov
lock
div
sahf
adc
js
xchg
mov
xor
pop
(bad)
mov
jbe
pop
mov
loope
in
stos
cmp
mul
pop
iret
cmp
ins
or
lahf
pop
and
xchg
sar
inc
(bad)
ud0
rcr
sti
and
mov
hlt
iret
scas
dec
inc
rcl
sbb
jl
push
data16
rol
jl
pop
iret
mov
cli
daa
mov
shl
push
lahf
sub
lea
scas
out
pop
fcom
gs
cli
and
dec
addr16
cmps
xor
addr16
dec
or
sub
ss
je
es
fsub
fidivr
push
js
fimul
mul
(bad)
movs
cmp
jle
ins
mov
sti
out
sub
mov
ret
retf
cld
(bad)
dec
jb
jg
cmp
ja
dec
adc
rcr
movs
sti
movs
int
inc
test
mov
pop
jnp
xor
and
pop
mov
rcl
sbb
and
pop
fadd
pop
clc
cli
lahf
out
in
sub
mov
out
sbb
push
jb
bound
sub
adc
push
push
inc
add
mov
out
retf
jp
xor
xchg
mov
or
shl
stc
cmc
mov
push
inc
mov
aaa
leave
push
std
push
xlat
or
les
add
jecxz
(bad)
mov
leave
mov
mov
imul
or
arpl
inc
jno
inc
cs
out
cmp
popf
mov
xchg
sti
add
or
lock
dec
inc
sahf
inc
pop
or
(bad)
je
adc
mov
sbb
xchg
mov
(bad)
sti
and
ret
and
ins
xlat
xlat
loopne
aaa
jmp
pop
fstp
xchg
dec
aad
fadd
inc
loope
cmp
into
out
xchg
push
inc
jle
out
push
out
xor
cmp
pop
lea
adc
xchg
ja
fdivrp
fst
popa
leave
shl
xchg
push
xor
imul
jo
sbb
mov
dec
pop
jnp
popa
int3
xchg
movs
add
add
shr
sub
jg
aaa
adc
push
out
cmps
adc
cmp
cld
je
or
cmc
inc
bound
lock
pop
mov
jne
jp
dec
and
pusha
add
aas
inc
repz
sar
xchg
jmp
inc
inc
out
popa
sub
and
sub
retf
sbb
add
js
pop
pop
jp
and
xchg
lods
mov
mov
jnp
jnp
movs
ret
and
repnz
popf
ret
fild
fwait
(bad)
call
movs
and
jmp
xchg
(bad)
shl
int
jno
fnstsw
pop
xchg
lds
sahf
inc
dec
call
loop
stc
les
mov
jecxz
push
jg
mov
scas
adc
or
retf
mov
mov
(bad)
mov
retf
sti
fmul
cwde
xor
xchg
mov
mov
dec
jnp
cdq
and
shr
arpl
fldenv
dec
dec
mov
dec
pop
mov
xchg
xchg
cmc
test
add
cmp
call
sub
scas
fld
add
add
adc
cdq
pop
and
pop
cmc
lods
xor
loope
inc
mov
mov
or
mov
mov
push
push
jmp
cld
ins
ins
jle
and
and
push
and
outs
in
dec
rcr
mov
xor
dec
ss
xchg
inc
push
(bad)
popf
xchg
mov
cmps
cmp
std
pop
pop
push
xchg
scas
enter
cmc
sbb
add
and
push
inc
mov
repnz
xor
inc
mov
inc
adc
xor
pop
enter
pop
cmp
(bad)
lock
push
mov
inc
popa
mov
sub
push
and
cmp
iret
pop
cmp
jmp
inc
add
pop
mov
outs
call
mov
test
push
cmps
jno
inc
iret
gs
inc
mov
shl
les
mov
sti
fnstcw
jp
(bad)
stc
cwde
daa
xchg
pop
inc
sub
dec
stos
adc
loop
sar
loop
adc
mov
push
inc
neg
pop
sub
loop
int3
pop
xor
push
iret
(bad)
jle
lds
sub
push
add
sub
sti
push
mov
sahf
rcr
in
pop
dec
add
xor
sub
lahf
sub
ret
jp
or
fwait
cmps
cmp
xor
aas
arpl
scas
dec
cmp
and
call
cmp
test
pop
ficomp
mov
es
xor
or
fwait
into
pop
push
push
xor
or
pop
adc
add
aad
add
xchg
out
and
sbb
cmp
les
cmc
jle
adc
cmps
add
xor
cmc
iret
or
les
inc
sbb
in
jne
push
popa
daa
addr16
dec
dec
js
dec
es
cdq
cld
popf
xchg
mov
cmp
ss
push
jns
mov
inc
rol
pusha
and
inc
ins
push
and
dec
cmp
sub
and
adc
jno
sar
hlt
mov
sbb
gs
jno
std
jle
rol
(bad)
adc
jg
aas
mov
pop
aas
push
aas
and
cmps
movs
jmp
xor
xor
sbb
es
jae
lock
jne
hlt
sti
ja
dec
in
dec
fist
or
xor
fadd
ins
push
std
imul
sub
movs
and
fild
push
repnz
xchg
xor
push
or
cmc
ror
pop
scas
push
adc
lods
dec
clc
add
or
in
mov
inc
rcr
shl
adc
pop
mov
push
movs
fs
neg
push
mov
xchg
add
fdivr
dec
mov
js
or
jecxz
inc
scas
das
imul
ins
lahf
xlat
jg
(bad)
mov
mov
inc
sub
and
pop
lds
in
pop
fs
in
clc
push
pop
mov
push
xchg
scas
in
or
cli
push
int3
popf
fcomi
or
push
mov
enter
or
repz
adc
xor
pop
add
and
inc
adc
sahf
jecxz
sti
dec
cld
adc
jp
jmp
inc
jnp
aas
inc
cmp
push
and
fistp
jmp
sar
lock
mov
js
outs
jmp
icebp
xor
loop
cwde
jae
mov
test
pushf
loopne
in
adc
cmc
and
dec
ins
xchg
sub
push
iret
push
inc
sub
pop
pop
jae
sbb
outs
cli
mov
sub
mov
lea
dec
arpl
pop
xchg
lea
xchg
imul
sti
cmp
jmp
sar
mov
jl
fiadd
(bad)
repz
in
mov
sar
jmp
jo
dec
adc
fldcw
call
loope
adc
xor
lahf
push
adc
hlt
out
in
jne
xchg
xor
pop
xor
loopne
lods
aad
das
in
icebp
ins
in
jge
jb
and
mov
jnp
xor
push
inc
ficom
ret
mov
ins
sahf
xchg
or
pusha
inc
mov
in
push
push
cwde
in
xlat
pushf
and
jo
loop
pop
clc
sub
ret
test
add
(bad)
push
sub
das
push
dec
dec
test
daa
in
out
leave
mov
sbb
popf
or
pop
lea
cmp
fidivr
add
data16
je
mov
aaa
xchg
jne
pop
lods
jecxz
loope
xchg
jp
jge
(bad)
fld
fsub
inc
mov
add
jnp
pop
xor
dec
xlat
dec
ret
sub
int3
aas
out
jecxz
mov
movs
(bad)
in
mov
lods
shr
mov
xor
mov
cmc
and
mov
sar
jb
cmp
push
inc
and
jle
retf
cmps
push
lea
pop
jo
js
movs
out
call
pop
shr
xchg
jno
push
adc
enter
cli
jp
ret
loope
int3
xor
mov
and
ins
adc
call
xchg
xor
mul
xor
out
ins
add
data16
lods
int
je
jle
xor
push
sar
cmps
xchg
sub
ins
jo
and
mov
sub
fist
test
mov
push
cwde
pop
push
mov
cwde
cmps
mov
pop
stc
push
xor
sbb
cmp
imul
loope
aam
adc
mov
add
dec
push
inc
and
aas
jmp
inc
xchg
sahf
dec
out
mov
or
gs
sbb
retf
cdq
aaa
arpl
add
xchg
fist
push
and
aaa
mov
out
jno
adc
daa
and
aaa
call
imul
mov
mov
mov
loope
add
inc
repnz
dec
xlat
test
jmp
addr16
imul
loopne
adc
push
outs
sub
outs
dec
(bad)
or
push
pop
mov
lods
cmp
mov
cs
js
jmp
xor
cs
xor
pop
mov
lock
sub
fadd
push
mov
dec
gs
es
inc
adc
lahf
in
(bad)
(bad)
sbb
pop
(bad)
out
repz
or
ins
(bad)
or
ins
dec
daa
mov
iret
iret
sbb
rcr
mov
imul
call
gs
inc
pop
pop
mov
pop
push
test
in
adc
cs
or
xchg
sbb
sbb
pop
jno
in
sar
fwait
imul
xchg
xchg
jbe
inc
loope
xchg
iret
test
mov
fcmovnb
adc
sbb
out
aaa
xchg
stc
enter
mov
lods
(bad)
cmp
and
cdq
(bad)
mov
fistp
mov
lods
jge
(bad)
in
ror
retf
cdq
scas
push
xchg
sub
out
dec
leave
loope
fist
aaa
fsubr
push
fild
dec
cmp
scas
scas
test
and
mov
out
int3
and
add
and
dec
cmps
das
nop
shl
test
adc
pop
scas
lea
xchg
push
pop
pop
jbe
sub
inc
(bad)
fild
out
aam
popa
or
test
fcmovnu
jmp
xchg
pop
or
mov
inc
out
cmp
retf
mov
cwde
movs
dec
cmp
sbb
add
mov
dec
push
sti
imul
ret
clc
cmp
shl
xchg
imul
rol
pop
pop
mov
mov
push
(bad)
in
jg
cmc
ss
inc
mov
imul
addr16
sbb
dec
mov
adc
cmps
hlt
push
shl
adc
mov
push
loop
int
adc
push
dec
pop
push
sub
fbstp
punpckhdq
fistp
dec
ror
(bad)
stc
jecxz
jo
inc
enter
mov
add
mov
bound
hlt
cs
pop
int3
std
loope
xor
mov
mov
ja
xor
loope
xchg
scas
push
inc
daa
ret
jnp
mov
jns
mov
mov
sahf
push
push
inc
ins
inc
(bad)
xor
push
and
adc
out
push
out
ret
xchg
xchg
jl
mov
mov
popf
aas
jl
bound
loopne
add
push
mov
mov
cmp
sub
mov
add
inc
mov
xor
int3
mov
adc
popf
gs
mov
sti
mov
ss
sbb
xchg
daa
(bad)
ret
xchg
(bad)
and
aad
cmp
into
jg
mov
mov
xchg
mov
dec
adc
test
inc
mov
inc
imul
push
dec
mov
add
jg
or
das
arpl
popa
inc
mov
jne
popf
outs
cmps
rol
jno
(bad)
push
popa
call
sbb
jecxz
scas
jecxz
ror
add
shl
test
push
push
cdq
ins
aad
jp
cmc
test
bound
lds
lods
repz
leave
mov
push
imul
push
sub
and
jns
ret
xchg
repnz
std
aam
push
nop
push
lock
and
popa
mov
add
stc
cmp
dec
in
inc
adc
aas
inc
int
adc
push
sti
cli
and
inc
mov
cmp
mov
aam
lods
addr16
cmps
lea
push
pusha
ins
xchg
daa
sahf
adc
adc
gs
push
fwait
daa
mov
fsub
imul
or
fsub
and
mov
add
call
retf
loop
push
cmp
adc
adc
pop
or
or
jae
xchg
subps
clc
sub
and
mov
aaa
sub
jmp
cmp
in
cdq
mov
movs
call
xor
jae
xchg
icebp
xchg
stos
aaa
fwait
jno
loopne
add
movs
xchg
daa
and
mov
jp
jge
pop
js
adc
sbb
or
and
pop
mov
mov
fcomp
call
jno
jle
add
sub
sub
pop
mov
stc
mov
fwait
lahf
aam
mov
mul
mov
ds
fs
cmp
lods
jge
cdq
stc
inc
sar
xor
push
popa
stos
fwait
inc
pop
inc
xchg
xor
xchg
mov
lahf
imul
sti
add
push
es
hlt
jb
inc
scas
push
mov
test
fld
sub
repz
int
and
(bad)
jl
cmps
jno
push
and
(bad)
shl
jb
inc
mov
fsubp
out
inc
lea
pop
ret
pop
loopne
enter
xor
add
jle
adc
mov
xor
xor
(bad)
cmp
and
sub
call
loopne
pop
std
fnstcw
pop
mov
repz
xlat
ja
pop
pop
add
imul
clc
dec
mov
sti
shl
mov
pop
adc
ror
adc
aam
ror
clc
outs
int3
mov
inc
push
sub
mov
adc
jnp
repnz
and
fisttp
inc
push
dec
cld
push
inc
xchg
ret
leave
nop
sub
lea
(bad)
mov
mov
push
sbb
ds
add
xor
add
xor
rep
xchg
ins
add
(bad)
cld
sub
add
fmul
ja
xor
sbb
sbb
sahf
xor
(bad)
cld
jo
mov
fstp
in
mov
rcl
pop
xor
mov
idiv
movs
mov
js
neg
loop
xchg
or
jne
mov
cwde
mov
retf
cdq
dec
(bad)
movs
aas
add
mov
les
inc
arpl
sbb
push
stc
mov
mov
xor
and
and
push
es
cmp
(bad)
cmps
jmp
sti
int
imul
mov
fucom
push
(bad)
pop
jbe
add
je
retf
iret
call
in
repnz
xor
jle
lods
call
xor
hlt
mov
push
xor
or
outs
mov
and
xchg
xor
gs
xchg
jnp
call
jbe
inc
sbb
mov
in
xor
addr16
push
ds
test
push
ret
frstor
cmp
cld
jbe
fisttp
jae
repz
scas
in
xchg
push
pop
cli
retf
mov
ds
arpl
jg
and
push
loop
or
dec
xor
sub
pop
xor
adc
mov
pop
dec
inc
(bad)
cmp
movs
xchg
cld
mov
js
sub
mov
mov
jne
outs
inc
push
shl
sbb
cmp
sbb
(bad)
cdq
push
cmp
sub
loopne
pop
cmc
xor
es
imul
xchg
sub
lock
repz
div
mov
xchg
mov
je
daa
adc
out
(bad)
movs
shr
stc
xchg
or
sub
(bad)
mov
jno
pop
pop
adc
adc
stos
adc
retf
and
xchg
xchg
repz
sbb
add
xchg
mov
popa
pop
add
out
pusha
jno
sub
imul
aas
pusha
push
mov
xor
pushf
inc
sub
jbe
cmps
cmp
xlat
push
ret
xor
cwde
sbb
cmp
add
mov
add
cs
nop/reserved
mov
inc
mov
les
xor
imul
fistp
mov
repnz
and
rcr
(bad)
call
outs
xchg
xor
push
xchg
jns
cmp
loop
xor
cmp
mov
adc
icebp
jo
sub
in
push
fs
sbb
sub
in
test
xchg
pop
mov
mov
xor
cmp
aaa
lock
sub
ret
test
gs
sbb
mov
pusha
imul
xor
and
pshufw
in
ins
sub
ror
sbb
enter
or
and
test
or
sti
cmp
fwait
mov
inc
enter
mov
push
mov
lods
bound
xlat
sbb
call
test
retf
add
cmp
xchg
fiadd
inc
mov
ins
jecxz
cmp
jmp
jmp
pop
adc
sti
pop
jp
mov
stos
sahf
sbb
xor
and
sub
stos
jns
ss
inc
in
out
sub
leave
add
icebp
jbe
inc
fdivr
mov
in
and
dec
mov
movs
pusha
cmc
div
bndldx
test
fdiv
xlat
(bad)
mov
inc
pmullw
cmps
out
(bad)
push
enter
push
ss
and
xlat
cld
enter
or
sbb
loopne
push
xlat
pop
xchg
dec
mov
fadd
push
fs
mov
mov
add
jmp
push
mov
das
mov
inc
addr16
lock
(bad)
icebp
das
popa
ds
add
ins
mov
mov
xchg
cld
out
push
enter
sbb
out
push
add
or
mov
cs
int
iret
mov
sub
or
cmp
retf
loope
and
xchg
ror
fidivr
mov
xchg
lods
cwde
fs
movs
addr16
or
add
mov
inc
retf
inc
push
xchg
jb
mov
mov
mov
pushf
imul
jmp
nop
pop
pop
pop
repnz
or
xchg
repz
add
or
je
mov
popa
imul
call
inc
push
sub
sub
sbb
lea
sbb
push
xor
jne
cmp
nop
mov
pop
pop
scas
mov
aas
pop
sbb
lods
or
es
out
fs
lods
push
arpl
push
jb
sub
cwde
cli
or
mov
add
icebp
inc
push
jae
aaa
dec
adc
push
js
mov
mov
icebp
retf
aaa
popa
hlt
ret
(bad)
daa
push
pop
fmulp
jnp
test
daa
jb
outs
jae
addr16
or
and
es
loopne
cdq
scas
inc
adc
adc
jns
jnp
or
xor
sub
cmp
int3
inc
push
jne
stc
cli
add
ins
mov
in
cmp
loop
retf
test
dec
repz
int3
jns
pop
ds
pop
xor
or
fucom
mov
cli
jnp
and
rol
push
fdiv
adc
cmc
add
jno
sbb
fdivr
shr
popf
retf
pusha
aam
cmp
xchg
jne
push
and
(bad)
sahf
mov
ret
add
sahf
mov
loope
mov
ret
mov
(bad)
jp
dec
stos
and
sbb
or
sar
jmp
fadd
adc
push
mov
iret
fisttp
sub
aad
jbe
push
sti
jmp
aad
jo
cmp
xor
mov
loop
jb
out
ins
jp
call
sub
push
and
fld
call
xor
pop
jp
xchg
cwde
aas
(bad)
test
sbb
sbb
cmps
dec
fwait
lods
fisub
inc
xor
xchg
xor
xchg
fld
inc
shr
into
adc
xchg
rol
adc
(bad)
mov
jb
adc
shl
mov
add
test
sub
dec
aam
es
fadd
mov
shr
xor
adc
(bad)
mov
mov
cmp
push
es
test
lahf
je
dec
xor
mov
into
cwde
lock
mov
xor
and
movs
jmp
xlat
movs
push
out
sub
pop
jmp
add
inc
or
dec
je
push
adc
pop
cmp
dec
jmp
retf
mov
pop
jmp
in
and
mov
daa
cli
cmp
lock
jnp
sub
fst
sahf
sub
mov
sbb
std
popw
jo
loope
scas
int3
js
pop
mov
pop
sti
jbe
or
adc
xor
repz
xlat
lds
inc
jns
loop
sub
mov
jmp
xlat
les
cmp
imul
add
fdivr
adc
cmps
cmps
test
inc
mov
cmp
dec
dec
adc
rol
aaa
push
stc
jge
mov
inc
retf
push
cmp
inc
scas
ret
and
data16
jmp
inc
in
adc
xchg
in
inc
mov
mov
sub
cmp
push
cmps
iret
pop
jge
cmp
add
pop
pushf
xchg
shrd
add
cmps
cs
xchg
mov
(bad)
and
sbb
pushf
inc
mov
retf
fldcw
jnp
dec
push
popf
hlt
dec
pop
in
fmul
add
ret
jle
loopne
mov
ret
stos
push
sub
jl
fcmovne
add
or
sbb
je
and
inc
das
inc
and
mov
rol
in
cmc
out
ins
leave
and
sti
cld
pop
(bad)
clc
jo
ror
jb
jmp
xchg
outs
(bad)
loope
push
mov
pop
sbb
gs
jnp
sbb
das
test
je
inc
les
push
jmp
fbld
repz
cdq
adc
or
lock
jmp
jae
xor
iret
xchg
repz
dec
dec
push
int3
cld
jp
mov
cmps
(bad)
stc
jo
lods
mov
jmp
fwait
ja
jle
fidivr
iret
inc
aas
mov
mov
mov
std
sti
jae
xlat
call
ins
dec
(bad)
in
cmp
or
pop
mov
push
arpl
jecxz
push
adc
es
mov
mov
xlat
fwait
shr
out
jg
mov
mov
inc
out
xchg
pop
(bad)
ds
jmp
add
push
push
fidiv
jmp
push
sbb
cmc
int
xchg
mov
icebp
mov
aaa
jne
stos
cmp
cmps
jmp
adc
or
inc
sub
xor
or
jo
sbb
int3
(bad)
sbb
cld
sub
jno
and
mov
shr
mov
sbb
pusha
cmp
jbe
dec
outs
nop
mov
pop
inc
add
repz
add
repnz
(bad)
ins
in
and
xchg
js
(bad)
and
(bad)
cmp
push
sahf
add
add
les
cmp
enter
leave
aaa
in
loop
push
pop
cmps
fwait
ds
xor
cdq
mov
sub
les
mov
cmp
and
pushf
call
repz
push
les
dec
and
mov
mov
ret
inc
sbb
pop
mov
ror
fwait
test
psadbw
and
dec
adc
mov
leave
lock
outs
xor
or
push
push
xchg
movs
das
jecxz
fs
scas
sub
and
mov
push
jo
lahf
lock
xchg
xlat
fadd
or
out
dec
stos
mov
mov
neg
pop
pop
(bad)
jge
out
jo
lods
jle
sub
jno
imul
arpl
lods
scas
xchg
add
xchg
popa
retf
out
repnz
clc
out
lock
dec
mov
das
(bad)
push
adc
xor
lahf
and
add
cmc
xchg
sbb
sub
mov
mov
cmps
inc
cmp
pop
sbb
push
shl
fld
xor
ret
fxch
pusha
jo
out
mov
jmp
fmul
mov
mov
pop
mov
dec
xlat
xchg
inc
mov
fwait
mov
(bad)
jmp
xchg
sbb
ja
outs
mov
jmp
enter
addr16
ds
or
cmp
out
sti
test
dec
jmp
inc
ins
mov
mov
rcl
jecxz
dec
xor
fwait
or
dec
xor
aas
scas
pop
sbb
and
jp
xchg
mov
sbb
ret
pushf
lods
jae
fsubr
push
sbb
mov
lock
push
sar
cmp
dec
lods
pop
mov
leave
in
and
scas
sbb
mov
jmp
and
cmp
push
jle
jnp
in
dec
xlat
sub
inc
pop
(bad)
and
mov
popa
lods
loop
mov
fwait
sub
stos
add
xchg
and
test
or
inc
bound
int
xchg
ret
xor
mov
mov
lods
xchg
icebp
xor
mov
cwde
stos
cmp
lahf
sti
mov
dec
pop
add
sbb
and
push
push
stos
test
push
push
mov
jle
push
sbb
test
mov
xor
gs
aam
mov
retf
ss
pusha
and
mov
fcom
cmp
xchg
sbb
inc
and
sub
cmp
cs
aas
mov
(bad)
pusha
or
dec
and
les
sub
loopne
sbb
ror
(bad)
aas
mov
add
pop
addr16
test
ja
std
fistp
(bad)
std
dec
pop
jb
lods
push
mov
outs
mov
mov
retf
mov
imul
sbb
sahf
retf
mov
stos
in
in
cmp
scas
inc
ds
sbb
dec
loopne
jns
fcmovbe
mov
mov
and
ins
adc
cmp
retf
arpl
xor
sbb
xor
lahf
push
stc
adc
cwde
push
in
mov
sub
jmp
push
xchg
jmp
jb
ss
adc
sub
inc
cs
aam
retf
add
cwde
std
movs
retf
dec
pop
dec
and
popa
inc
nop
mov
inc
jbe
push
add
int
mov
mov
ror
jp
std
adc
adc
mov
std
push
mov
test
cdq
jae
sbb
mov
xchg
cmovbe
inc
sbb
(bad)
out
add
jmp
pop
fs
mov
fwait
mov
dec
cmc
mov
dec
pop
inc
xchg
push
lahf
adc
scas
xchg
mov
add
pop
into
jno
add
arpl
es
jmp
scas
call
retf
lahf
cwde
ins
mov
xchg
sub
inc
mov
sbb
jnp
pop
(bad)
or
push
xchg
je
sti
lea
jmp
stos
cmp
shl
int
ds
gs
inc
and
aas
(bad)
pop
sbb
sub
in
ficomp
loop
or
xor
xchg
inc
loope
int3
fiadd
stos
xchg
loop
jmp
sbb
pop
(bad)
cmp
scas
les
dec
shr
(bad)
out
push
fadd
xchg
repz
movs
mov
(bad)
aas
xlat
sbb
push
scas
in
icebp
jmp
arpl
aaa
shl
int
(bad)
out
push
jb
pop
jbe
xchg
cmp
in
inc
xchg
icebp
and
(bad)
sbb
push
push
cmp
mov
mov
test
(bad)
or
rol
icebp
pop
xor
and
je
jo
vandnps
pop
push
(bad)
sbb
popf
test
cmp
inc
jne
clc
xlat
jo
movs
push
les
ficomp
lods
(bad)
adc
jo
and
stos
dec
shl
jmp
adc
stc
ficom
mov
push
ja
adc
cmp
test
cmps
cld
std
iret
(bad)
mov
mov
push
push
pop
sti
imul
fwait
push
inc
or
movs
cmp
bnd
cmps
add
or
cmovne
hlt
in
sub
adc
mov
mov
dec
js
movs
mov
pushf
mov
(bad)
sbb
or
call
pop
cli
in
pop
test
add
in
jnp
add
sahf
mov
shr
xrelease
mov
sub
iret
xor
and
inc
int
sahf
or
dec
out
xor
movs
pop
fyl2x
mov
aas
rcr
xor
sbb
cs
xor
lods
pop
mov
mov
popa
push
add
or
test
mov
fs
cmp
(bad)
ss
pop
das
jns
adc
jnp
cmp
dec
fisub
icebp
add
xor
in
jmp
imul
lock
cli
pop
std
and
sub
xor
or
sbb
mov
xchg
push
jl
movs
test
mov
push
and
fld
cmp
mov
adc
pop
xor
call
repnz
ror
xor
aas
xor
mov
and
inc
adc
ja
mov
jb
inc
xor
pop
push
add
mov
mov
fmul
xor
sub
mov
or
xor
mov
jl
and
sub
xchg
or
sti
and
test
shr
les
mov
jecxz
nop
jb
jle
push
dec
lahf
xchg
adc
inc
xchg
push
arpl
sub
xchg
add
sti
dec
jmp
push
cmps
outs
adc
sub
cmc
adc
test
dec
mov
imul
xchg
and
outs
jbe
ffree
push
mov
jne
mov
add
pusha
out
fcomp
leave
lock
fldcw
cmp
fwait
cli
pushf
push
push
pop
sbb
es
mov
movs
xor
mov
shl
hlt
out
popf
ret
inc
imul
xchg
pop
sub
imul
(bad)
jmp
xor
add
jnp
add
mov
jp
inc
repz
bound
and
ins
jmp
nop
subps
aaa
mov
dec
xchg
out
in
scas
cmp
sbb
dec
test
stos
push
pop
mov
mov
pusha
fsubp
repnz
dec
jmp
test
ret
ds
mov
popa
adc
xor
out
mov
adc
cmps
adc
inc
bound
iret
inc
ds
hlt
and
pop
and
mov
jecxz
je
cmps
xor
fwait
or
ror
sbb
push
ins
mov
shr
jno
xor
sbb
mov
std
and
icebp
fidivr
xor
int
adc
inc
cmps
adc
test
pop
test
outs
clc
jb
lea
test
in
out
test
cmps
shr
and
pop
lock
xchg
sub
in
iret
sbb
in
push
pop
pop
sub
fidiv
pop
push
in
jns
lods
out
inc
cmp
sub
(bad)
scas
xadd
mov
lods
es
retf
sub
aad
in
mov
add
sahf
je
fucomp
add
arpl
sbb
and
dec
jo
mov
xchg
or
push
imul
xchg
test
add
(bad)
shl
and
adc
add
into
loop
(bad)
sahf
inc
mov
rcr
(bad)
sbb
jg
cld
inc
xchg
sub
sub
cmp
ins
popa
push
push
test
stc
sub
or
xchg
mov
dec
push
sbb
pop
call
push
xor
adc
fwait
jnp
hlt
daa
pop
ror
fwait
jno
push
js
cwde
push
or
dec
mov
and
lds
pop
lahf
push
frstor
(bad)
mov
aaa
pop
imul
pusha
add
mov
xor
adc
lahf
arpl
es
int3
div
dec
mov
cwde
sub
adc
sbb
cmc
adc
repnz
gs
mov
push
or
inc
outs
mov
inc
adc
adc
push
mov
cwde
fcomp
daa
cwde
test
fnsave
dec
call
inc
jp
icebp
push
(bad)
sti
mov
xchg
sbb
mov
add
pop
sbb
inc
loop
out
sub
daa
and
add
fld
jp
jmp
lea
mov
arpl
es
loopne
fidiv
inc
mov
dec
adc
cmps
cmps
inc
(bad)
addr16
or
jg
les
xor
lods
sbb
fnclex
fcmovbe
ds
mov
pop
sbb
sbb
add
fs
icebp
mov
jno
and
mov
pop
cmps
mov
jmp
add
retf
dec
push
stc
shl
mov
cmps
sahf
mov
stc
lds
jae
adc
jmp
mov
clc
inc
in
aas
fadd
dec
jnp
and
shl
push
stos
or
loopne
sub
into
cmp
mov
cld
retf
shl
in
test
inc
xor
inc
jno
cmc
ss
push
mov
stos
int3
je
and
and
cli
(bad)
repz
jmp
dec
push
nop
js
cmp
adc
xchg
in
jmp
stos
add
imul
pop
aam
mov
and
aad
sub
sar
inc
sahf
out
retf
xchg
cmp
cs
dec
and
call
pusha
mov
xor
xor
arpl
xor
sub
sti
mov
icebp
aas
inc
and
jl
pop
mov
jno
xor
mov
pop
xor
mov
mov
mov
cmp
int3
dec
sbb
push
movs
pop
xor
mov
xchg
push
or
or
fsubr
ror
mov
jmp
mov
sub
nop
sub
sbb
pop
inc
div
sbb
lods
mov
dec
outs
mov
mov
adc
add
cmp
jmp
and
lahf
and
mul
in
nop
jmp
sahf
push
ss
and
sub
pop
outs
fiadd
pop
xor
adc
xor
xor
stos
mov
jge
gs
inc
inc
imul
xchg
hlt
mov
sub
pop
add
sub
and
sub
iret
fcomp
scas
and
mov
push
out
test
and
and
scas
xor
jp
imul
lods
inc
ja
std
pop
retf
add
dec
outs
icebp
xchg
adc
sti
push
in
xchg
push
push
mov
mov
test
cmps
scas
mov
pop
mov
xchg
inc
es
push
lock
ret
jmp
clc
xor
lahf
jae
je
in
or
mov
into
and
jb
jb
pop
or
lods
mov
mov
repnz
enter
cmp
pop
popa
and
daa
fist
leave
cwde
or
popa
retf
cs
imul
mov
stos
sbb
and
sub
xor
jae
push
fst
jbe
xchg
mov
es
inc
lds
(bad)
sbb
jmp
mov
jmp
movs
adc
pusha
je
cmps
xchg
pop
mov
ret
xor
jb
push
aad
into
cmp
call
clc
mov
arpl
lds
inc
inc
jmp
js
jbe
pop
test
or
stos
jg
mov
sub
int3
pop
loope
daa
inc
or
sbb
mov
mov
jnp
ds
retf
shl
daa
addr16
add
scas
test
xchg
pop
ins
push
add
ins
aam
fyl2x
mov
pop
repz
or
ins
ror
(bad)
movs
stos
adc
outs
add
cwde
push
dec
cmp
cld
adc
or
out
out
adc
pop
sbb
lds
mov
pop
or
inc
test
lds
push
add
shl
inc
sbb
sahf
add
(bad)
lods
sub
js
ins
ins
fdiv
sar
test
xor
pop
out
shr
dec
mov
repz
jb
dec
mov
cmp
or
and
adc
in
dec
repnz
rol
xor
aam
mov
fcomp
int3
sar
pop
in
jns
or
cmp
and
and
mov
gs
or
shl
pop
mov
outs
mov
shr
xchg
mov
ss
and
gs
pop
xchg
nop
push
sub
jmp
aam
ror
xchg
add
in
ret
sti
shl
mov
pop
popf
lods
(bad)
mov
mov
in
les
xor
push
sub
in
ins
jge
mov
jp
nop
(bad)
std
outs
pop
arpl
das
cmp
leave
aas
pop
sbb
fstp
es
add
xor
scas
xor
xchg
mov
sub
imul
adc
cmc
pop
out
pusha
movs
mov
rcl
repnz
adc
jb
popf
inc
xchg
lods
and
in
add
mov
mov
aam
xchg
inc
(bad)
adc
mov
adc
ficomp
neg
leave
cwde
sahf
cmp
popf
in
xchg
sub
movs
call
ss
push
repnz
imul
arpl
sbb
aad
in
les
les
sub
arpl
xchg
xchg
int3
push
jbe
jp
xor
xchg
mov
cmc
stos
add
jnp
leave
jmp
mov
jecxz
outs
clc
loope
popf
clc
js
xchg
jge
dec
shl
xlat
aaa
cdq
(bad)
cs
pop
fst
add
ins
sbb
ret
push
ret
gs
das
mov
mov
out
int
jecxz
data16
bsr
pop
xchg
adc
fcom
xor
scas
jmp
mov
stos
inc
pop
inc
pop
dec
inc
retf
dec
jmp
pop
mov
cmps
pusha
push
mov
(bad)
cmps
xchg
fwait
daa
mov
mov
inc
push
fs
mov
test
ret
mov
push
jge
dec
cmp
icebp
das
ins
sbb
and
fbld
sub
(bad)
mov
icebp
jmp
cmp
int
loop
mov
push
adc
rep
out
push
nop
adc
aas
test
fs
lea
aaa
loope
scas
fs
shl
out
cmps
cmps
mov
pop
pop
aas
adc
sub
sti
ins
outs
cmp
sub
sar
xor
fwait
xor
movs
xchg
cld
outs
repnz
mov
jno
std
daa
mov
adc
cmc
dec
add
popa
and
inc
add
mov
lods
stos
adc
pop
mov
xchg
dec
out
pop
cli
inc
sbb
add
ja
push
sbb
into
sub
mov
mov
cmp
out
cmp
cli
shl
mov
inc
addr16
retf
jns
retf
test
or
js
push
out
mov
outs
rcr
jb
pop
cmc
or
sbb
or
arpl
mov
jmp
dec
fsubp
bound
mov
test
or
lahf
mov
dec
test
pop
inc
es
cmp
lods
addr16
mov
movs
jbe
or
add
outs
pop
daa
sar
outs
je
jmp
popfw
(bad)
adc
sbb
out
imul
cmc
int
cmc
cld
and
aas
push
jl
pop
and
mov
call
pop
hlt
sbb
jmp
ins
retf
jmp
rcr
pop
(bad)
pop
stos
cwde
xor
or
mov
jmp
aaa
mov
ja
sbb
ds
dec
mov
lods
mov
xor
in
pusha
mov
or
push
push
push
scas
lods
lock
pop
(bad)
fiadd
mov
mov
pop
mov
cli
lds
add
icebp
js
rol
and
call
inc
pop
std
add
leave
pop
movs
pop
mov
sub
jge
cmp
add
pop
add
mov
sbb
jmp
jbe
and
das
cmp
outs
ss
sub
mov
out
rcr
sub
xchg
inc
dec
cwde
jns
push
or
fwait
sub
jo
mov
pop
jne
jle
aad
(bad)
mov
add
out
neg
or
imul
mov
sbb
or
mov
mov
(bad)
lock
leave
ins
popf
pusha
mov
lea
popa
add
push
sub
and
push
mov
push
jp
(bad)
ret
xchg
stos
shl
sbb
xor
(bad)
dec
loopne
pop
xchg
scas
jl
into
scas
(bad)
jg
popf
jg
and
inc
xchg
scas
or
xchg
mov
jge
es
xchg
jno
xor
into
stos
or
mov
inc
mov
mov
pop
jbe
clc
mov
sbb
jne
or
into
fisttp
(bad)
jl
xor
shr
cmp
mov
xchg
cmp
data16
jmp
mov
in
push
(bad)
popaw
enter
jne
pop
sub
sbb
mov
neg
xor
repnz
xor
mov
outs
add
dec
fcmovb
mov
shr
add
adc
div
mov
je
sti
into
xchg
aaa
push
fadd
mov
daa
mov
(bad)
imul
add
test
mov
add
lds
sub
clc
addr16
mov
sub
std
xlat
push
cmp
mov
dec
pop
jge
ficom
rcl
stos
xor
dec
push
(bad)
neg
fwait
or
jge
inc
adc
sub
jno
outs
ret
arpl
dec
les
hlt
cmp
into
in
dec
xchg
cld
jp
mov
cmp
mov
push
mul
and
xor
inc
data16
lods
and
dec
sub
jae
(bad)
fld
and
push
cmp
jno
xor
repz
jnp
adc
sti
movs
xchg
mov
mov
mov
inc
(bad)
stos
fcom
sbb
loop
scas
cmps
inc
jmp
and
push
rcl
push
mov
loopne
ins
cld
in
inc
push
(bad)
fld
pop
in
mov
cmc
cdq
repnz
aam
xchg
add
adc
fbstp
out
jmp
mov
mov
pusha
xor
pop
dec
sbb
int
mov
mov
popa
cdq
adc
dec
xchg
bound
xlat
push
mov
adc
stos
dec
adc
and
mov
pop
dec
retf
addr16
int3
pop
cmp
adc
and
idiv
lock
outs
dec
aad
push
add
xor
mov
mov
sub
xchg
ss
pop
adc
out
cmp
cdq
pop
das
mov
pop
rol
inc
hlt
lods
cs
jl
out
xchg
mov
xor
test
out
xor
inc
out
jmp
repz
(bad)
fadd
xor
mov
jno
(bad)
ret
addr16
loop
adc
fld
xchg
loop
and
fistp
cdq
rcr
shl
jle
inc
mov
arpl
dec
(bad)
lods
xchg
scas
add
xchg
and
ret
and
je
jecxz
or
dec
and
jecxz
xchg
pop
sub
or
out
xchg
push
(bad)
(bad)
out
sub
cmp
not
xor
fidiv
sub
mul
dec
cld
test
hlt
fwait
mov
and
mov
call
es
xchg
xor
inc
(bad)
leave
xor
adc
inc
in
inc
xchg
push
std
not
in
mov
mov
shl
inc
adc
mov
imul
cwde
mov
xchg
cmp
xor
push
call
fstp
push
or
and
mov
cmps
mov
cmp
add
hlt
add
xchg
lahf
cmp
and
mov
imul
xor
add
scas
cld
cmp
adc
mov
xchg
dec
test
ds
nop
inc
sbb
das
(bad)
int
loope
xor
adc
icebp
jmp
mov
xor
aas
jmp
(bad)
mov
div
jae
push
cmp
mov
es
cs
mov
mov
aad
jbe
jmp
dec
das
out
clc
ins
jb
mov
sar
lock
rcl
jmp
fwait
push
xchg
mov
jo
popa
mov
mov
push
mov
imul
or
repz
inc
shr
ins
popa
pushf
outs
int
mov
inc
daa
cmp
and
xor
mov
(bad)
div
outs
cwde
pop
adc
ins
xlat
out
sbb
mov
push
neg
xchg
ret
out
ss
xchg
push
iret
(bad)
push
mov
mov
inc
ins
mov
jnp
mov
popf
xlat
sbb
fsub
pop
adc
jle
adc
and
cmp
addr16
nop
xchg
or
ret
xor
ret
in
aam
(bad)
fstp
call
sbb
pop
in
sahf
and
pop
xor
sbb
xchg
sub
adc
xor
or
jnp
inc
and
dec
into
nop
mov
nop
(bad)
aas
dec
je
inc
jg
inc
inc
sub
push
mov
dec
popf
aad
(bad)
fadd
jno
outs
or
push
push
test
call
mov
jnp
push
adc
push
ins
nop
sbb
cmp
jmp
push
push
adc
repz
sbb
loope
shl
cwde
inc
or
sbb
push
xcrypt-cfb
cmps
sbb
and
mov
ret
fsub
pushf
fisttp
inc
fistp
dec
push
xchg
leave
(bad)
div
or
push
xchg
and
icebp
movs
jmp
cmc
push
and
dec
les
xchg
js
cmp
popa
push
retf
or
xor
ret
pusha
cmp
jmp
ss
inc
jmp
inc
add
sbb
out
push
dec
push
loop
inc
mul
aas
push
dec
lods
ror
or
retf
das
inc
and
push
out
ror
mov
sbb
mov
mov
es
imul
stos
outs
lds
push
mov
xor
fs
pop
das
xor
mov
mov
leave
(bad)
xor
stos
std
cmp
inc
enter
mov
adc
xchg
or
scas
inc
daa
pop
inc
hlt
fbstp
mov
pop
and
cmp
or
pop
dec
mov
cmp
arpl
xchg
push
xor
aam
enter
stc
inc
arpl
out
mov
inc
add
sub
mov
jg
or
jmp
cdq
loope
mov
repz
sbb
loop
adc
inc
frstor
pop
(bad)
inc
cdq
pop
nop
scas
pop
dec
ret
cmps
lds
xchg
mov
mul
lea
cmp
les
pop
out
mov
pop
adc
sbb
out
rcl
test
daa
sub
jb
into
xchg
(bad)
retf
xor
dec
aam
mov
and
stos
enter
fucomi
(bad)
shl
mov
push
mov
fnsave
scas
dec
lock
inc
shr
push
xchg
adc
sub
mov
lea
push
mov
outs
xor
jb
xor
sbb
push
or
cmp
mov
cmc
shl
imul
lods
xchg
sub
inc
pop
mov
cmp
sbb
ficom
daa
cmp
ret
data16
retf
fcmovnb
and
out
adc
mov
cld
push
dec
movs
add
scas
pushf
mov
mov
pop
sbb
adc
sub
mov
dec
call
xor
pop
mov
lahf
mov
out
cmp
(bad)
aam
inc
fistp
ror
lahf
leave
inc
clc
xor
outs
xchg
jle
call
cmp
and
push
dec
retf
cmp
adc
pop
stc
stos
pop
add
sub
inc
jmp
and
call
in
jbe
sbb
lahf
push
das
inc
jge
mov
pop
fnstsw
mov
inc
xchg
int3
add
jmp
dec
out
add
ins
lea
rcl
gs
mov
mov
fist
(bad)
loop
push
ret
add
push
cmp
test
inc
ss
mov
dec
call
(bad)
aad
mov
(bad)
mov
pop
push
pop
push
pop
ins
inc
sub
adc
int
xor
push
push
nop
idiv
inc
xor
mov
pop
scas
(bad)
ret
mov
xchg
lods
shl
adc
mov
data16
mov
mov
mov
xchg
int
sub
std
jg
cmps
adc
xor
cld
cmps
jae
call
dec
sahf
std
add
jb
je
jno
jne
fs
std
pop
cdq
push
sbb
lock
jo
xchg
xchg
(bad)
dec
test
es
sub
das
clc
mov
repnz
les
pushf
jb
dec
movs
mov
mov
jns
aas
and
push
inc
or
cmps
mov
mov
inc
hlt
sbb
jo
popa
sar
jb
int3
inc
push
fadd
jo
test
ret
mov
push
movs
mov
pop
into
jno
mov
scas
aad
add
inc
stos
sbb
and
cmp
inc
pop
das
add
shl
and
lods
mov
ds
cwde
mov
lea
mov
pusha
cli
or
nop
stos
(bad)
adc
into
out
mov
cli
xor
fnstcw
dec
adc
lahf
sub
jg
mov
xor
mov
pop
(bad)
nop
stos
mov
mov
cs
lds
mov
outs
jnp
cwde
push
xor
leave
sub
dec
xchg
push
imul
or
lods
adc
js
adc
stos
outs
lock
mov
push
dec
inc
add
jae
stc
mov
lock
and
add
retf
mov
stc
aas
in
cmps
or
loopne
pop
stc
stc
shr
adc
inc
mov
out
fidiv
and
imul
sahf
test
cmps
adc
icebp
or
ja
retf
ret
pop
xchg
rcl
das
retf
push
sub
addr16
pop
cld
sbb
mov
or
or
fcomp
call
fmul
sub
xor
les
(bad)
mov
call
fcomp
out
pop
dec
ss
aas
push
(bad)
pop
mov
out
ins
inc
adc
push
and
lds
push
push
push
push
dec
xlat
fcom
mov
cmc
xor
fdivr
nop
call
repnz
shl
sbb
scas
push
ror
adc
mov
(bad)
pusha
pop
sbb
popa
stos
daa
or
adc
sbb
cwde
pop
shr
movs
dec
test
push
xchg
and
pop
fwait
ins
and
movs
or
or
mov
lods
mov
dec
dec
mov
xchg
lods
fs
dec
clc
jbe
add
fiadd
inc
das
loope
dec
loop
jge
daa
mov
mov
lea
or
imul
sahf
test
movs
sub
xchg
ror
add
bound
mov
pop
add
jo
cmp
mov
icebp
jae
test
ja
scas
das
jbe
pop
bnd
inc
(bad)
mov
inc
mov
cmp
mov
inc
dec
arpl
loope
daa
jns
retf
sub
aam
test
sub
test
dec
adc
sbb
fistp
mov
fadd
int
ss
cdq
sbb
add
cmp
lods
xchg
or
pop
push
mov
mov
mov
shl
add
jae
fsubr
es
mov
dec
enter
out
dec
inc
in
xchg
fs
mov
dec
addr16
loop
mov
push
cmp
jp
or
push
cmps
push
dec
pop
in
sti
movs
xchg
push
mov
cdq
jne
add
inc
fst
pusha
xlat
(bad)
pop
push
mov
(bad)
mov
cmc
jmp
sbb
cmps
cmp
jae
cmp
out
sbb
inc
cwde
xchg
mov
jmp
mov
adc
xchg
imul
cdq
mov
jg
mov
mov
daa
inc
ja
or
retf
pop
xor
and
ins
or
inc
sub
inc
mov
aam
jl
cld
sub
(bad)
loopne
mov
dec
inc
xor
repz
xchg
jne
sub
adc
push
nop
xchg
sub
add
fmulp
retf
out
clc
push
mov
call
mov
mov
call
pop
icebp
jbe
lods
fsubr
or
pop
dec
fidiv
push
mov
mov
mov
in
(bad)
xchg
ins
dec
cmp
pop
mov
or
xor
sub
mov
sub
mov
(bad)
dec
inc
(bad)
push
or
fidiv
push
inc
mov
int3
adc
sub
mov
sbb
jo
add
mov
xor
xchg
jae
mov
ins
int
loop
movs
sub
add
inc
xlat
pushf
shl
or
cmp
retf
stc
aad
daa
daa
and
mov
adc
clc
jl
mov
mov
or
mov
iret
outs
mov
cdq
sub
loop
push
out
ins
(bad)
aam
xchg
loop
and
adc
jne
dec
add
pop
pop
imul
gs
push
pop
cmp
aam
repnz
add
stc
jmp
data16
aam
(bad)
xor
mov
aaa
jb
pushf
lahf
test
or
movs
scas
outs
xchg
scas
fs
popf
pop
mov
aad
mov
adc
add
cmp
dec
or
sub
mov
cmps
popa
sahf
cmc
outs
pop
dec
mov
cs
or
(bad)
mov
pusha
adc
xor
dec
add
stc
std
add
sub
push
dec
enter
jno
mov
or
sti
std
or
fsub
cmps
jmp
mov
rcr
inc
or
cmp
or
mov
sub
neg
and
popf
fcomi
stc
sub
sub
int
popa
xchg
sub
sub
sub
mov
div
mov
pop
cmp
add
pop
or
fnstcw
div
pop
add
enter
int
ins
push
(bad)
in
das
(bad)
mov
test
sub
pop
lods
leave
jne
dec
add
cmp
push
out
rcr
iret
sbb
adc
lods
dec
push
jmp
movs
imul
retf
push
loope
pop
mov
add
int3
push
pushf
push
lods
pop
mov
jae
add
(bad)
stos
sbb
cmp
mov
add
xor
adc
clc
jne
mov
xchg
pop
in
rol
rcl
fidiv
cli
pusha
or
mov
inc
mov
add
out
inc
sub
fistp
adc
imul
cdq
mov
and
lock
mov
mov
xchg
push
sti
mov
adc
and
out
fmul
into
iret
inc
stos
jge
cwde
pop
jne
mov
jge
nop
lds
je
cmps
aaa
out
scas
aaa
rdmsr
daa
les
dec
sbb
fldcw
cmp
or
sbb
mov
aas
jge
inc
test
mov
scas
dec
mov
call
xchg
int
nop
or
xchg
push
shl
and
lock
xor
fbstp
jmp
gs
fbld
rcl
nop
sub
shl
icebp
jo
lods
retf
aas
xchg
sbb
pop
les
mov
pop
mov
dec
jl
js
cmp
mov
pop
push
jl
ret
(bad)
xlat
push
int3
les
ficomp
fldl2t
sub
js
mov
xor
cmp
adc
enter
push
pcmpeqb
ret
adc
add
pop
dec
mov
repnz
inc
cmps
dec
jmp
adc
sbb
retf
mov
test
repz
xchg
ja
cmp
inc
imul
sub
gs
add
push
leave
std
xlat
or
add
mov
and
retf
shl
add
(bad)
leave
jb
and
adc
aam
sub
cwde
jp
jge
out
jb
sbb
sbb
fidivr
xor
gs
fisubr
cmp
dec
cmps
fwait
pop
adc
xchg
fisub
(bad)
inc
popf
push
das
into
rol
scas
cwde
and
inc
fstp
xor
stos
sti
(bad)
or
xor
or
loop
dec
imul
cwde
mov
leave
sub
test
adc
pushf
addr16
dec
push
fdivr
sub
iret
mov
ja
loopne
push
int3
fidivr
(bad)
(bad)
jnp
mov
dec
pop
mov
pop
push
ja
int
ins
ret
js
gs
push
xchg
(bad)
ror
pop
fnsave
(bad)
mov
sbb
clc
int
lds
ror
pop
push
imul
sub
dec
pop
fwait
je
jl
int
mov
adc
cli
bound
test
jmp
daa
xchg
enter
xor
pop
sbb
das
sbb
loop
push
adc
out
jne
mov
inc
sbb
adc
sub
jecxz
stos
inc
ret
pop
je
jo
hlt
and
add
push
lahf
cmp
ds
push
sbb
jno
xchg
(bad)
sti
jmp
dec
mov
ins
push
jo
mov
mov
cli
add
aaa
rcr
xor
cld
or
fwait
jg
cli
sbb
loop
push
ror
jp
mov
cmp
mov
mov
or
push
or
dec
popa
xor
(bad)
test
pop
idiv
mov
sbb
jmp
mov
inc
xor
je
(bad)
jg
cmp
adc
retf
shr
das
mov
xor
mov
jge
dec
dec
in
pusha
adc
cdq
inc
in
mov
aas
cdq
sub
sbb
out
movs
mov
mov
cmp
scas
mov
mov
fs
jne
ins
aad
jo
sub
dec
les
add
add
add
mov
add
repz
xchg
cmp
and
retf
mov
scas
iret
and
dec
push
cmps
shl
sub
popf
sahf
cmp
inc
test
xor
popf
ror
addr16
inc
mov
inc
sar
push
gs
shl
cmp
mov
sar
mov
fdivp
in
sahf
mov
hlt
cmp
jne
daa
push
lock
dec
arpl
pop
jae
sub
pop
daa
lgs
push
mov
fxch
sbb
pop
inc
test
hlt
out
scas
mov
sub
movs
ins
sbb
sbb
xor
shr
or
inc
push
jnp
add
fstp
lock
mov
movs
int3
xchg
xchg
shl
enter
sahf
imul
mov
jmp
or
cmp
mov
ror
dec
out
xchg
cmps
pushf
add
mov
adc
xchg
retf
(bad)
mov
enter
push
(bad)
in
push
adc
jmp
or
rcr
aas
jge
mov
repz
in
add
or
xor
or
and
xchg
out
add
or
or
retf
test
sub
xor
xchg
gs
inc
xor
fisttp
mov
scas
fcmovu
mov
push
mov
sahf
push
pusha
sbb
(bad)
pop
test
sbb
aad
xor
jo
stos
sbb
mov
adc
shl
jae
sar
test
adc
lahf
xor
inc
test
fisttp
in
or
xchg
nop
out
in
and
outs
inc
or
pushf
adc
add
fnsave
pop
fwait
rcr
mov
or
aas
out
mov
loopne
stos
(bad)
jecxz
nop
into
scas
sub
pusha
and
or
push
cmp
mov
clc
ret
retf
add
cmc
aad
(bad)
jne
or
sbb
imul
xlat
dec
in
mov
dec
test
stos
mov
shl
jne
push
jns
in
mov
(bad)
int3
inc
int3
sub
fldcw
and
sbb
sub
pop
repz
mov
inc
adc
jmp
xchg
sahf
out
mov
vaddsd
mov
popa
scas
or
push
inc
pop
xchg
test
jnp
ss
and
cli
neg
and
stos
mov
out
mov
xchg
mov
fdivr
jl
lahf
mov
push
xchg
(bad)
mov
inc
add
push
pop
push
mov
add
xchg
inc
sbb
out
cs
dec
arpl
clc
adc
retf
test
xor
cmp
iret
jne
jp
out
aaa
pop
cmp
and
int
jle
sbb
mov
push
bound
fstp
shl
sbb
stos
inc
into
nop
retf
mov
fnstsw
jge
jmp
or
xchg
loopne
inc
jle
cmp
ja
mov
push
sub
ret
or
out
aaa
adc
addr16
xor
push
popa
sbb
add
push
adc
ffreep
dec
push
icebp
out
and
(bad)
jmp
or
cmps
ror
or
jno
pop
addr16
push
je
push
ins
repz
or
icebp
out
sahf
dec
imul
sbb
and
sub
cdq
add
pop
jne
rol
jmp
iret
xchg
in
xlat
pop
cld
das
inc
ins
ja
ror
inc
push
arpl
ja
mov
push
arpl
mov
arpl
data16
in
bnd
(bad)
push
push
fldcw
mov
mov
in
sbb
cmps
scas
inc
xlat
mov
jp
jo
xchg
adc
arpl
gs
add
pop
xchg
movs
mov
iret
cmp
mov
fld
jo
out
jle
aam
and
inc
sub
mov
es
fdivr
sub
adc
(bad)
cmps
adc
jne
mov
enter
shl
cmp
push
push
mov
mov
mov
enter
mov
cmp
xchg
cwde
fist
mov
neg
sub
mov
movs
jmp
mov
jo
xchg
mov
in
int
inc
daa
xor
mov
mov
daa
dec
push
cld
inc
in
pop
xor
imul
xchg
adc
xchg
daa
pop
mov
and
xchg
jno
out
push
cdq
push
lds
(bad)
jecxz
or
or
ja
retf
movs
cmp
les
dec
pop
lock
mov
mov
xchg
jp
sbb
nop
sbb
mov
mov
sahf
cmp
or
sbb
jbe
ins
daa
dec
mov
sbb
test
push
mov
pop
mov
dec
and
shl
js
fild
dec
daa
adc
xchg
mov
pop
daa
jge
cmps
sti
call
adc
pop
mov
push
outs
es
xchg
pop
inc
popa
jl
rcl
push
sti
cmc
adc
inc
jmp
adc
xchg
rol
xor
mov
and
add
push
or
xchg
jle
adc
push
dec
adc
jl
fdiv
sbb
call
(bad)
lea
(bad)
adc
adc
mov
(bad)
out
sbb
adc
push
in
dec
rcl
out
cmp
dec
inc
(bad)
sub
xchg
sbb
dec
ror
xchg
retf
mov
cmp
dec
mov
or
mov
jo
adc
push
add
mov
mov
push
hlt
(bad)
jl
nop
pop
xchg
add
mov
(bad)
adc
lods
shr
mov
and
jbe
outs
dec
xchg
lahf
add
popa
clc
mov
popf
sti
retf
adc
push
xchg
in
fbld
jbe
pop
or
jb
je
mov
push
dec
or
push
outs
and
pop
nop
sub
movs
dec
hlt
mov
sub
rcr
das
in
mov
adc
xor
out
cmp
mov
lods
pushfw
xchg
dec
into
and
imul
add
sti
xchg
xor
mov
pusha
daa
push
cmps
out
inc
adc
or
loop
mov
cmp
add
ss
call
(bad)
pop
shr
std
pop
sub
xlat
xor
daa
mov
adc
mov
xor
xchg
jbe
mov
jmp
lahf
outs
jne
test
adc
dec
xor
mov
(bad)
adc
leave
mov
into
jo
mov
pop
adc
sub
xrstors
in
sub
imul
das
inc
sbb
ja
cwde
lock
outs
out
and
in
xchg
fisttp
aad
add
outs
aas
xlat
hlt
xor
adc
shr
mov
mov
add
enter
cwde
test
xor
data16
pop
xor
xchg
mov
leave
outs
out
add
enter
out
retf
xchg
int3
sti
lods
sbb
cmp
mov
jno
sub
(bad)
push
cli
outs
push
cmps
add
fld
push
xor
aas
add
dec
or
mov
push
sbb
push
aad
out
jg
add
ja
call
movs
jb
aas
lock
popa
sub
jg
adc
ss
adc
pop
jge
pop
jle
xchg
pop
lahf
mov
mov
mov
mov
ins
clc
ror
repnz
out
push
lds
xchg
in
sbb
mov
push
push
pushf
and
setl
dec
or
addr16
mov
xor
pushf
addr16
rcr
movs
sahf
pop
shr
mov
push
pusha
xor
xchg
sub
aas
push
mov
sti
(bad)
(bad)
push
in
or
mov
push
jge
xchg
and
jmp
or
jae
aad
out
test
dec
test
sub
in
add
test
push
mov
popf
imul
mov
jg
mov
test
jl
rcl
jne
addr16
mov
lods
jmp
sub
inc
pop
loopne
arpl
dec
shl
inc
(bad)
pop
push
mov
jge
dec
adc
pushf
ret
inc
popa
shl
stc
imul
mov
jno
cmp
xchg
xchg
or
xchg
sub
sbb
adc
icebp
fild
int3
mov
dec
imul
sar
mov
xor
loope
test
pop
xchg
sbb
sub
jecxz
es
hlt
jmp
add
jmp
movs
mov
xchg
sub
lahf
push
out
stos
jns
ins
ret
mov
mov
push
add
fld
mov
or
sbb
cmp
xor
fnsave
stos
(bad)
repz
popa
enter
mov
shl
pop
jmp
cwde
pusha
push
jmp
push
ds
mov
mov
mov
mov
sbb
jl
push
pusha
iret
outs
in
sub
inc
icebp
shr
sub
jne
aad
sub
mov
xor
ins
xchg
sahf
setae
popa
push
imul
sti
sbb
adc
jb
push
popa
std
mov
cmp
push
fsub
push
xchg
sbb
and
jmp
inc
xor
jmp
fsub
daa
mov
pop
js
shl
scas
sub
call
in
xchg
push
push
nop
cmp
pop
add
push
or
popf
lods
jae
and
mov
lea
hlt
sbb
push
jbe
mov
ret
xor
cmp
add
push
mov
rol
in
xchg
jnp
call
pop
jns
push
cmp
aam
mov
(bad)
test
lds
arpl
mov
test
scas
jbe
xor
push
xor
sbb
push
cwde
sar
mov
ret
push
iret
(bad)
sti
sub
cmp
sub
hlt
cmc
add
test
jp
call
add
cmp
or
cmp
jle
xlat
mov
movs
rol
cmp
add
dec
in
dec
push
xchg
push
push
cmp
lds
mov
sbb
mov
sahf
dec
xchg
popf
jecxz
test
std
mov
mul
dec
jae
pop
inc
mov
mov
cmp
out
test
out
aam
dec
loop
pop
ret
inc
lods
add
cld
xlat
out
(bad)
(bad)
pmaxsw
pop
repz
or
jmp
mov
imul
cmp
in
and
sub
push
sub
int3
ins
hlt
fiadd
push
test
lea
shl
adc
and
lahf
dec
xchg
aad
dec
scas
(bad)
jns
fdiv
jno
cld
inc
stos
push
mov
fdiv
xor
cld
sbb
pop
adc
lods
push
movs
push
arpl
jo
fidivr
mov
jle
leave
daa
or
(bad)
stc
aad
mov
jne
sbb
push
aad
push
mov
xchg
and
sub
lahf
ss
adc
or
xlat
fmul
inc
dec
adc
push
in
into
sbb
cmp
xchg
xchg
sub
mov
jo
fidiv
cwde
pop
(bad)
push
push
xchg
(bad)
mov
sbb
lds
mov
cwde
ins
mov
cli
(bad)
sbb
and
adc
in
fistp
sub
mov
std
into
push
mov
repnz
cmp
das
mov
pop
jge
mov
ins
jbe
pop
mov
xor
adc
jno
mov
push
jmp
test
mov
push
inc
shr
push
scas
loopne
jae
inc
and
xchg
int
lahf
in
ret
xor
pop
jns
imul
fucom
add
xchg
jle
popa
mov
fild
push
aaa
cmp
sbb
sahf
sbb
mov
les
rcl
loop
push
mov
je
jg
jae
retf
nop
out
pop
cmp
leave
imul
adc
test
push
in
or
cmc
jge
adc
mov
rcr
mul
pop
push
push
jg
add
lds
mov
dec
cmp
movs
add
shl
cmps
mov
test
nop
out
or
xchg
aas
pop
int3
mov
cdq
cwde
sbb
loopne
retf
js
inc
add
adc
mov
lds
inc
inc
test
dec
xor
cwde
mov
(bad)
jle
cmp
clc
sbb
addr16
ja
push
mov
repz
adc
xor
movs
push
mov
mov
shr
outs
clc
dec
iret
push
in
cmp
fs
out
adc
push
add
(bad)
xor
je
pop
sbb
or
jbe
gs
lahf
sbb
sub
in
dec
xlat
sub
sbb
in
jb
and
(bad)
xchg
repz
mov
lahf
and
fs
cs
jl
gs
mov
clc
mov
push
mov
test
adc
jnp
movs
aas
dec
dec
lds
and
xchg
fs
popf
repz
dec
mov
mov
hlt
ins
dec
fld
jo
sbb
xchg
aad
mov
ret
push
(bad)
jb
popf
push
dec
mov
dec
vrsqrtps
icebp
loope
push
lock
jg
and
retf
inc
add
sbb
add
cli
ficom
and
les
jmp
xchg
push
add
jo
repnz
push
xchg
xor
hlt
fwait
cwde
ins
inc
popa
test
lock
push
xchg
pop
adc
sbb
nop
and
mov
imul
dec
ds
jle
je
add
in
cmp
out
int3
jmp
test
cmps
sbb
imul
ins
push
sub
lods
sbb
pop
mov
jmp
or
cli
and
add
test
stc
lods
pop
cmp
repnz
or
and
fidiv
in
xchg
dec
sbb
cmp
icebp
sub
adc
shl
fadd
or
adc
jbe
aaa
fsubp
sbb
mov
rcr
push
hlt
mov
mov
iret
test
pusha
(bad)
xor
mov
int
out
add
jae
dec
push
ins
idiv
test
inc
push
sub
jmp
sbb
fdivr
jnp
mov
stos
(bad)
push
inc
pop
mov
inc
call
(bad)
or
or
jecxz
xchg
cmp
xor
data16
jg
mov
xchg
pop
retf
jae
cmp
jae
cmp
imul
shl
movs
add
mov
mov
add
push
pop
clc
mov
or
imul
or
xchg
mov
add
xchg
dec
jg
jo
adc
test
(bad)
xor
push
es
pop
push
push
(bad)
jle
sbb
icebp
icebp
test
pop
popf
push
loop
jmp
mov
mov
in
mov
add
xchg
loope
mov
pop
dec
sbb
sbb
popf
or
das
int
or
in
clc
fwait
mov
xchg
ds
jo
pop
push
dec
out
mov
pop
arpl
retf
inc
add
push
mov
and
call
(bad)
movs
retf
pop
retf
aam
fld
push
push
leave
fidiv
xor
push
aam
jl
and
sub
dec
(bad)
outs
ss
jp
fcmovne
xchg
add
enter
jp
inc
ds
xchg
xchg
test
out
push
jo
(bad)
mov
adc
mov
sar
sub
lahf
xchg
repnz
cmps
sbb
pop
xlat
add
sbb
and
cmp
pop
(bad)
push
or
xor
mov
jmp
icebp
cwde
jecxz
adc
cmps
bnd
mul
stc
test
sahf
jno
mov
sbb
clc
jg
(bad)
iret
and
push
push
outs
loopne
mov
and
dec
dec
js
in
dec
cmp
push
and
xor
enter
mov
push
cmps
ffree
sub
mov
pusha
pop
sbb
and
mov
iret
or
xchg
fisubr
(bad)
jg
add
dec
push
neg
loope
or
lods
ds
pop
pop
lock
arpl
(bad)
adc
sub
jno
xchg
adc
add
in
lock
pop
push
imul
jle
je
pop
(bad)
mov
(bad)
mov
retf
adc
mov
imul
inc
inc
fsub
mov
bound
arpl
fistp
std
fadd
clc
or
pop
mov
inc
inc
addr16
jl
aas
add
adc
mov
ret
xlat
jmp
sub
mov
test
fcomp
ja
push
sub
mov
icebp
popa
mov
bound
or
jno
mov
fisubr
pop
fist
dec
out
movs
sti
imul
ja
call
add
mov
pop
test
into
std
div
ins
popa
adc
cmc
or
retf
pop
lds
adc
and
push
mov
adc
and
push
(bad)
jg
mov
cmp
dec
out
in
retf
popf
movs
scas
mov
js
pop
scas
jbe
repnz
int3
xchg
mov
add
int
push
loope
fwait
xlat
or
push
xchg
sbb
push
adc
mov
and
popa
cli
mov
in
ror
fmul
sti
dec
(bad)
pop
sbb
std
(bad)
dec
push
or
call
loopne
inc
and
jo
push
adc
add
jp
dec
lods
xchg
sbb
ins
mov
in
test
cld
call
nop
xchg
mov
inc
aaa
mov
pop
add
stos
fdiv
adc
repz
out
or
sbb
or
xchg
xchg
pushf
add
fld
adc
in
imul
aaa
xchg
lahf
cmp
lods
mov
mov
imul
mov
and
sar
sbb
xchg
loop
(bad)
adc
cld
fnstenv
imul
addr16
popf
xor
mov
outs
(bad)
imul
or
ficomp
cmp
push
pop
loope
loopne
popa
dec
mov
loope
sbb
pop
xchg
cs
pushf
std
hlt
retf
imul
add
mov
jp
add
in
dec
cli
sbb
xchg
cli
inc
clc
fwait
(bad)
mov
imul
arpl
adc
jbe
push
jmp
add
(bad)
and
cmp
mov
pop
js
mov
mov
sbb
pop
cmp
add
(bad)
push
pop
cmp
call
shr
sbb
jo
jae
dec
ja
inc
call
repnz
in
sub
dec
cmps
aaa
adc
cmp
fst
call
scas
pop
sar
fild
sbb
lds
push
push
lds
jmp
pop
test
neg
xor
pop
sub
shr
mov
xchg
cmc
in
add
adc
inc
out
cmp
neg
dec
sbb
sub
inc
cmp
dec
add
cmp
sub
(bad)
inc
lds
sbb
fidivr
push
aaa
sub
call
push
sti
mov
(bad)
push
call
mov
nop
jle
mov
rcl
fdivr
pop
mov
in
mov
pop
loopne
jl
xchg
out
xor
leave
int3
or
jnp
shl
out
sbb
cmp
jge
push
adc
sti
imul
and
cmp
data16
mov
add
sbb
outs
je
sbb
xor
push
lods
adc
xchg
pop
lods
in
sbb
out
cmps
jnp
bound
(bad)
lds
sbb
dec
test
xor
out
sub
push
pop
pop
jno
pop
aas
push
ror
inc
sub
mov
xor
add
repnz
out
or
push
adc
push
xchg
jae
dec
je
outs
outs
and
scas
inc
push
repz
sahf
add
xor
sahf
movs
enter
mov
xor
loopne
xchg
or
add
add
(bad)
call
cmp
movs
loopne
sub
pop
shl
cmp
fwait
movs
retf
sbb
cld
in
jno
sbb
xor
enter
repz
push
imul
(bad)
leave
arpl
add
xor
mov
xchg
jo
sub
mov
adc
mov
movs
lods
sti
sub
aam
sti
and
ror
fisubr
mov
in
sub
iret
outs
sar
loopne
hlt
pop
adc
xchg
out
jmp
sbb
pop
adc
or
jnp
xchg
cmp
adc
sub
rcl
int
mov
dec
popf
mov
xchg
push
in
pop
sbb
pop
lods
xchg
pop
inc
cmps
test
sbb
je
cmp
jns
pop
jne
dec
ds
outs
cs
jmp
not
mov
repnz
mov
jo
mov
scas
cmp
mov
inc
dec
cmp
jmp
cmp
or
push
mov
jns
cmps
jb
outs
fild
or
addr16
adc
or
cmps
cmp
xchg
rep
or
mov
repz
mov
ret
sub
jmp
mov
int3
mov
lds
or
xchg
push
jle
aad
pop
cmc
mov
push
cli
pop
cmps
sub
adc
rcl
repnz
mov
test
icebp
add
(bad)
sbb
push
add
stos
jnp
lock
xor
pop
imul
ds
sbb
jecxz
(bad)
rol
pop
mov
(bad)
ret
fstp
add
add
ret
sti
in
pusha
in
xlat
out
out
leave
or
mov
daa
jae
mov
adc
add
imul
out
xchg
jmp
daa
sub
imul
and
je
add
cmc
das
mov
pop
dec
add
inc
rdtsc
movaps
mov
cmc
into
nop
xchg
or
cli
addr16
call
and
(bad)
imul
push
data16
and
dec
mov
pushf
ror
stos
dec
jmp
add
jmp
pop
mov
daa
mov
mov
xchg
xchg
dec
xor
(bad)
loope
mov
or
in
pop
in
stos
or
mov
cld
popa
dec
or
out
push
push
jmp
dec
push
lock
pop
sub
mov
mov
add
inc
call
dec
mov
stos
sub
test
rol
push
lahf
xor
movs
push
arpl
ss
ins
xor
pop
aad
rcr
push
aad
jns
rcr
xor
cmc
sub
mov
(bad)
sub
rcl
xchg
je
cmps
mov
jmp
mov
das
test
mov
push
push
jl
addr16
test
jo
dec
gs
sub
push
rcl
fmul
sub
cdq
and
add
outs
adc
cdq
lahf
jnp
push
shl
ja
mov
pop
(bad)
inc
pop
mov
jmp
and
in
dec
xchg
push
sub
jl
dec
ja
sbb
xor
dec
push
mov
cmc
int
xchg
jne
inc
in
in
pop
xchg
aas
add
mov
sbb
jmp
adc
scas
imul
xor
out
add
sub
ins
std
xchg
fcmovu
fisttp
bnd
pop
fisubr
frstor
or
retf
fwait
jb
add
inc
jmp
ret
(bad)
push
push
xchg
mov
call
cwde
je
or
or
stos
cmps
addr16
cmc
push
sbb
xchg
ja
xchg
nop
dec
cli
cmp
pop
sub
or
rol
adc
sahf
ins
cmps
(bad)
xchg
add
dec
jo
retf
stos
push
ret
fimul
add
popa
mov
xchg
sbb
pusha
cmp
lods
sbb
rol
call
fbld
add
jnp
mov
das
cmp
int3
in
test
hlt
out
outs
jne
out
lods
rcl
loope
js
fild
mov
setno
test
and
xchg
push
push
sub
in
scas
inc
data16
lahf
jo
ret
pop
sbb
sbb
repnz
std
icebp
fsubr
jmp
clc
retf
push
sbb
mov
sbb
addr16
mov
jp
sub
movs
cmp
rcl
adc
adc
(bad)
pop
push
imul
jp
outs
clc
xchg
dec
nop
loope
imul
clc
rcr
pop
into
test
jl
lea
shl
fimul
jns
stc
pop
int3
jae
jge
sub
inc
mov
retf
adc
cmp
or
js
push
sbb
pop
(bad)
fnstenv
dec
loope
push
ins
mov
mov
mov
jbe
inc
test
rcr
ret
mov
ror
(bad)
retf
loop
pop
mov
adc
push
xor
lock
adc
add
and
fwait
lahf
push
push
pushf
arpl
ins
movs
xchg
loope
jno
(bad)
cmps
inc
leave
(bad)
fs
push
xlat
aas
mov
mov
xlat
repz
sbb
in
shr
scas
xchg
mov
push
add
bound
inc
int
imul
inc
out
sub
push
or
mov
inc
mov
inc
jno
loope
call
out
xchg
aam
mov
scas
rol
or
bound
jno
jmp
sbb
jl
shr
xchg
inc
and
aaa
push
and
xchg
inc
mov
sub
jne
xor
sub
push
jnp
jmp
aam
dec
mov
fdivr
inc
in
push
sbb
mov
jecxz
pusha
push
lods
nop
jmp
mov
test
mov
retf
(bad)
pop
cmp
jmp
mov
fiadd
add
hlt
push
push
fwait
inc
lea
mov
cmovle
shl
inc
xor
jnp
add
in
jecxz
icebp
mov
mov
mov
retf
sub
stos
sahf
and
pop
imul
out
sbb
shl
cmp
xchg
jmp
dec
add
(bad)
iret
shr
cmps
sbb
stos
adc
pushf
in
jmp
cli
cdq
nop
adc
mov
fisttp
dec
aam
xor
sbb
pusha
out
mov
mov
dec
lahf
adc
test
mov
rol
lds
lea
(bad)
nop
fs
xchg
outs
mov
push
push
inc
fistp
xor
or
push
sub
and
pop
pop
rcr
mov
xchg
add
test
ja
and
xlat
adc
or
add
dec
add
mov
scas
inc
mov
aaa
out
outs
in
xor
mov
pop
xor
test
jo
stos
inc
aaa
(bad)
data16
(bad)
sbb
aad
bound
loope
xchg
fdivr
dec
ds
inc
push
in
cdq
inc
inc
jmp
and
add
and
mov
or
stos
inc
dec
adc
lahf
adc
inc
sahf
cmps
lods
inc
ret
inc
les
or
xor
cld
dec
test
xor
mov
or
mov
pop
fs
loope
sub
fiadd
cmps
cmp
mov
jmp
xchg
aaa
mov
push
inc
jmp
in
push
ja
sbb
push
imul
out
int3
iret
call
pop
xchg
imul
enter
mov
in
fld
xchg
es
and
or
pop
clc
fadd
pop
loope
cmc
dec
jmp
stc
mov
jl
or
xchg
sbb
or
fidiv
mov
dec
outs
pop
and
stos
mov
sub
mov
xor
call
das
sbb
aas
iret
or
nop
ins
sub
pop
sub
popf
mov
idiv
fs
push
outs
add
mov
sub
fs
pop
adc
les
enter
loop
hlt
jne
aam
mov
cld
mov
cmp
pop
data16
cmp
movs
xchg
adc
pop
mov
push
neg
aam
lahf
mov
sbb
test
ret
add
jp
cmp
dec
xor
push
leave
push
sbb
pop
fnstcw
pop
imul
inc
call
jbe
add
push
imul
jns
mov
push
loope
pop
xlat
push
fidiv
cmp
jmp
dec
loopne
mov
mov
shr
or
sub
ins
xchg
jbe
daa
sbb
dec
ror
xchg
mov
icebp
add
stos
mov
sub
ror
xchg
inc
sti
in
add
shr
stos
cmc
lods
dec
imul
sub
xchg
test
mov
push
call
xor
int3
call
shr
jl
push
mov
sub
pop
retf
mov
cmp
push
push
dec
ds
dec
mov
xlat
inc
in
dec
sbb
mov
or
fbld
inc
dec
mov
cmc
cmp
jl
sub
mov
out
std
mov
repz
dec
cmp
pushf
push
adc
sub
fs
jecxz
ds
mov
xor
dec
sbb
fwait
pop
push
pop
rcr
pop
test
fcmovne
push
xchg
aam
xchg
jmp
pop
add
inc
mov
stos
call
mov
mov
mov
add
jno
test
aam
cmp
outs
add
mov
adc
xchg
dec
pop
add
cmc
(bad)
das
fwait
adc
pop
push
adc
pop
push
scas
push
pop
fs
mov
pop
sar
repz
inc
add
cmp
test
xchg
repz
adc
pop
push
cmp
ror
pop
sbb
(bad)
movs
mov
in
jge
(bad)
js
ret
fdivr
bound
or
pop
jno
push
nop
in
mov
pop
test
mov
cvtps2pi
sbb
shr
cdq
push
jne
out
and
push
lods
cwde
ret
mov
ja
rcr
imul
ins
idiv
sbb
and
sbb
mov
call
add
adc
int3
(bad)
and
xchg
imul
retf
mov
adc
cli
cdq
lods
mov
jo
popa
xor
test
mov
sti
faddp
dec
popa
call
dec
bound
std
pop
inc
adc
lock
and
into
hlt
or
mov
psrlq
ds
cs
into
pushf
jno
dec
push
fmul
push
dec
inc
jge
and
mov
pop
loop
xchg
pusha
sbb
aad
or
inc
mov
test
push
or
pop
scas
leave
stos
mov
mov
jle
mov
adc
mov
add
push
ror
or
sub
cmp
pop
dec
inc
lock
pop
imul
sbb
cmp
inc
in
data16
cmp
jbe
lock
aas
xor
pop
lods
pop
dec
rcl
adc
jns
cmp
jno
rol
cmp
lea
add
mov
aaa
out
xchg
or
xchg
pop
sub
jo
push
(bad)
gs
and
add
lods
add
fisubr
sub
shl
push
add
adc
jp
les
hlt
loopne
cmc
in
jae
add
cmc
retf
mov
call
cmp
cwde
dec
jp
aam
mov
inc
clc
leave
mov
cmps
lahf
and
aas
cdq
stc
gs
sub
mov
(bad)
outs
and
adc
jne
rol
aas
ins
stos
jmp
xchg
gs
jo
into
ror
scas
ja
inc
or
sbb
xor
movs
fwait
push
jl
and
push
je
in
test
jb
(bad)
fidivr
test
gs
neg
jnp
dec
cdq
pop
or
stc
pop
inc
outs
lds
cmp
loopne
adc
sbb
cmp
pop
jge
pop
inc
cmps
adc
shr
gs
or
add
mov
dec
sub
jb
stos
(bad)
mov
xor
cmc
add
es
inc
add
enter
jmp
xor
push
fadd
or
or
shr
aaa
imul
stos
push
loop
mov
lds
aaa
or
sub
nop
mov
mov
dec
pop
imul
and
and
rol
mov
mov
jmp
stos
inc
dec
mov
dec
iret
xor
and
xchg
test
sub
jmp
mov
xor
add
sub
xchg
imul
mov
ficomp
rcr
and
test
pop
push
fiadd
pushf
dec
lock
mov
fidiv
ja
inc
xor
push
inc
repz
test
cmp
fucomi
std
dec
shl
icebp
add
or
push
mov
(bad)
(bad)
pop
das
in
push
shl
lods
mov
xor
xlat
mov
fld
daa
jl
es
out
frstpm(287
pop
fs
or
mov
push
add
int
mov
scas
add
gs
fsubr
(bad)
jne
faddp
mov
(bad)
lods
sub
mov
popa
mov
sbb
mov
jmp
adc
ins
ja
xchg
or
sbb
xchg
jl
(bad)
pop
xlat
pop
int
enter
cmc
mov
out
add
pop
mov
xor
push
ja
movs
sub
or
out
push
pop
psubd
imul
fdiv
inc
mov
mov
add
push
shl
jmp
mov
test
cmp
int3
cs
xor
cdq
push
stos
cmp
jbe
lahf
arpl
lds
fidivr
test
clc
sbb
aaa
xchg
test
cmps
sub
and
mov
repnz
mov
aas
repnz
xchg
loope
push
pop
rol
inc
jmp
mov
push
ins
aad
cld
addr16
xchg
sar
enter
mov
lds
out
cmps
lods
add
xor
xor
ds
jb
sbb
lods
xchg
outs
pop
cmp
sub
loop
jp
xor
pop
aaa
es
clc
cmp
addr16
xor
xchg
into
ins
and
in
pop
int
(bad)
outs
add
push
sub
mov
loopne
fstp
ror
or
xchg
ins
loop
iret
push
or
aam
cmps
inc
ins
push
or
fcomip
and
sbb
mov
repz
fild
and
enter
sub
sub
(bad)
mov
push
mov
rcr
xchg
test
and
retf
inc
pop
cmp
sbb
hlt
or
add
test
ins
in
hlt
push
jns
enter
mov
adc
out
enter
lea
int
xcrypt-cbc
cmps
push
stos
ror
imul
out
inc
test
dec
cmp
and
fld
inc
enter
mov
(bad)
das
cmp
push
push
fld
push
cmp
xchg
xchg
fst
fs
xchg
cld
push
mov
out
pop
loopne
retf
xor
imul
loop
sbb
cmp
gs
call
fmul
push
(bad)
test
in
(bad)
push
outs
imul
loope
cmps
ret
cmp
test
pop
adc
and
sub
test
les
pop
inc
stc
xor
in
inc
mov
cmp
push
retf
pop
iret
pop
addr16
xlat
adc
or
int3
add
add
cmp
int3
push
stos
test
jae
xchg
mov
mov
(bad)
cld
clc
stos
(bad)
dec
push
fsub
int
xchg
jae
outs
jae
cld
xchg
(bad)
popf
push
mov
dec
push
xchg
in
aas
fistp
cmp
fs
mov
push
jmp
xchg
mov
or
enter
test
and
js
or
inc
dec
mov
mov
adc
jmp
adc
sbb
sti
add
adc
loop
mov
(bad)
sub
cmp
cmps
adc
dec
cld
int
test
and
outs
loopne
mov
scas
pop
cmp
mov
test
shr
xor
(bad)
pop
popf
(bad)
lods
cmp
in
int3
and
movs
jns
fwait
push
adc
mov
out
imul
mov
jl
je
mov
mov
mov
pop
cmc
mov
mov
xchg
push
inc
(bad)
hlt
and
xchg
adc
(bad)
sbb
jmp
icebp
sub
ret
and
pop
pop
inc
adc
ja
cmp
outs
inc
jge
pop
xlat
repz
xchg
dec
or
jo
jmp
in
push
das
xchg
popf
and
and
xor
ret
jns
add
or
mov
jg
(bad)
cwde
push
jge
(bad)
xor
cwde
push
add
int
stos
jb
and
ins
(bad)
hlt
outs
xor
sub
std
jbe
call
outs
cmp
ret
ret
sbb
scas
xchg
and
loop
das
icebp
add
das
pop
rcr
mov
cmps
cdq
ja
sub
xchg
test
retf
mov
jecxz
sti
(bad)
or
lds
arpl
push
adc
inc
pop
dec
cld
shl
push
lahf
ret
addr16
jae
mov
mov
ficom
xchg
retf
addr16
leave
scas
ins
jae
xchg
sub
(bad)
dec
dec
mov
jge
pop
add
xchg
dec
pop
inc
pop
adc
pop
ins
push
clc
dec
repz
push
xchg
test
sar
pop
cli
sahf
mov
in
mov
fdivr
xor
lock
mov
inc
clc
jmp
dec
sub
sbb
or
pop
aam
ret
and
inc
out
dec
mov
push
push
sbb
test
cmps
add
lds
(bad)
sub
cwde
cmp
fbld
(bad)
sar
push
es
mov
nop
mov
jnp
fsubr
xchg
fsubp
shl
scas
cmp
cmp
enter
cwde
cmp
jl
div
add
out
inc
dec
sbb
jg
sti
push
push
xlat
clc
pop
movs
aam
(bad)
fisubr
xchg
sub
xor
jge
enter
push
or
int3
out
jne
sub
repnz
in
xchg
push
fisubr
jo
nop
cmp
xchg
inc
lds
lods
or
jp
scas
jae
sbb
cmp
adc
dec
push
sbb
gs
add
xor
popf
popa
xchg
sub
aad
retf
mov
adc
movs
arpl
daa
shr
lods
jecxz
aaa
ficom
push
mov
retf
test
arpl
ins
jmp
dec
mov
inc
in
xchg
stos
mov
ins
sub
lahf
mov
lds
cmp
mov
cmp
leave
cdq
push
sub
mov
inc
shr
aam
jns
mov
inc
ins
inc
or
dec
aad
push
or
lods
mov
xor
jge
lods
fld
or
jnp
(bad)
xchg
add
shr
jbe
aaa
push
int
pop
cmp
mov
cs
pop
jmp
jmp
adc
jp
push
xchg
repz
or
imul
ss
add
push
aam
cdq
call
aaa
adc
xor
repz
jno
pop
jns
mov
das
push
repz
in
push
mov
mov
cli
cmps
shl
jecxz
sub
push
lock
idiv
outs
mov
js
xchg
jo
outs
in
hlt
pop
imul
or
dec
retf
shl
mov
mov
scas
jp
outs
fnstcw
xchg
(bad)
cmp
jl
mov
cwde
xor
mov
out
out
imul
cmp
cdq
xchg
jge
push
add
in
and
hlt
dec
hlt
cmp
test
jne
fild
cwde
(bad)
mov
push
xor
repnz
cdq
dec
lds
mov
aaa
mov
or
push
jb
and
or
(bad)
mov
dec
inc
mov
das
jns
inc
test
imul
enter
test
sub
sti
xchg
xchg
enter
inc
add
mov
mov
out
outs
dec
push
add
lock
sub
push
xor
mov
add
inc
loopne
retf
mov
stc
cmp
xchg
jne
repnz
and
dec
(bad)
out
jb
mov
mov
retf
xchg
dec
ror
dec
mov
(bad)
mov
sub
inc
stos
xchg
je
mov
(bad)
jmp
mov
les
mov
movs
sbb
xchg
ret
imul
nop
inc
cmp
cwde
stos
loope
lods
fbld
lock
xor
dec
jge
mov
repz
enter
gs
gs
fstp
ret
jge
push
cs
in
mov
mov
dec
push
cmps
div
imul
popa
fist
retf
xor
int
adc
dec
sub
pusha
(bad)
mov
fnsave
popf
ret
movs
(bad)
(bad)
ss
lds
bound
dec
mov
push
and
fwait
icebp
mov
push
add
int3
inc
sub
fld1
pop
and
hlt
pusha
test
xor
lods
pop
sahf
mov
les
sub
and
outs
stos
mov
ret
int3
jb
rol
mov
outs
scas
pop
push
test
mov
repnz
jmp
jae
push
inc
shr
and
fdivp
push
lock
ret
icebp
jmp
mov
outs
ins
les
pop
(bad)
repnz
jg
mov
mov
push
xlat
xchg
dec
fadd
ja
cmps
rol
clc
stos
call
clc
dec
mov
les
in
popa
and
xchg
dec
mov
ss
sub
push
(bad)
movs
ins
out
push
(bad)
xchg
ficomp
mov
lock
aam
inc
xchg
dec
xor
xchg
xchg
or
ret
mov
sub
aad
dec
dec
popa
ret
popf
and
(bad)
retf
sub
stc
xchg
dec
popf
xor
out
add
cmp
mov
stc
sub
into
push
cmp
and
cmp
icebp
ror
jl
gs
movs
ret
shl
cmc
sub
leave
xchg
xor
xor
xchg
aas
pop
repnz
fdivr
or
or
std
mov
in
mov
xchg
sahf
ficom
popf
or
or
jbe
ss
or
mov
xchg
fisub
inc
lods
inc
daa
xor
mov
sbb
ror
pop
mov
(bad)
icebp
adc
je
cli
cmp
pop
push
pop
ins
add
mov
xor
mov
movs
lahf
inc
push
cmp
lods
push
outs
xor
sub
popf
sub
push
mov
xchg
mov
sar
add
adc
outs
mov
rol
ja
adc
jg
xor
xacquire
push
jmp
das
outs
jnp
fldenv
movs
sahf
mov
push
fwait
idiv
inc
fldcw
lods
ja
(bad)
mov
pushf
fs
adc
xchg
in
test
dec
data16
imul
mov
fs
loope
add
mov
push
mov
add
push
pop
repnz
hlt
pop
retf
fbstp
les
pop
xlat
es
or
sub
sbb
jge
sbb
push
jle
pushf
sbb
out
xchg
xchg
pop
scas
inc
push
xor
add
jb
cwde
into
aam
pop
loope
shr
retf
test
sub
or
lods
addr16
iret
test
scas
dec
sbb
inc
aas
adc
mov
adc
jmp
ss
add
daa
icebp
sbb
(bad)
lock
add
cmp
add
mov
aam
jmp
ja
jne
add
in
lahf
call
push
pop
cmp
add
ja
(bad)
rcr
ins
dec
test
xchg
push
mov
call
sbb
int
mov
arpl
into
shl
vaddsubps
and
sub
cld
mov
mov
jbe
sbb
movs
syscall
sahf
jne
adc
mov
cld
dec
imul
xor
mov
push
adc
inc
(bad)
test
xchg
push
lock
and
and
cmp
mov
jmp
push
add
add
inc
mov
arpl
sahf
aas
inc
adc
adc
mov
push
fild
sbb
leave
jl
cmc
pop
lahf
mov
(bad)
dec
mov
jecxz
mov
jnp
in
pop
fld
inc
sbb
stos
xchg
(bad)
mul
cmps
xchg
retf
cmp
in
test
and
add
loope
aam
(bad)
xor
push
cmc
mov
in
jge
xchg
mov
cmp
arpl
add
jmp
out
stc
cmps
mov
cmp
sub
in
js
push
movs
add
push
jns
call
push
fidivr
enter
imul
sar
mov
mov
leave
icebp
xor
pop
jge
(bad)
mov
sbb
inc
popa
and
iret
inc
ja
out
lahf
xchg
pop
gs
fwait
aad
stos
retfw
mov
sub
pop
add
addr16
push
scas
mov
fsub
idiv
mov
xchg
xchg
jp
das
dec
jno
xor
sub
popa
sub
dec
and
ds
rol
add
movs
test
nop
adc
nop
sahf
jmp
jle
push
into
shr
mov
xor
sub
xor
pop
sbb
mov
jecxz
cmps
jge
inc
shl
in
lds
push
daa
test
xor
mov
pop
jne
xor
mov
or
mov
(bad)
int
jae
sbb
aad
repz
adc
ins
adc
sbb
imul
popa
ret
arpl
dec
adc
push
mov
hlt
mov
inc
mov
xchg
xor
sub
and
test
mov
ret
mov
(bad)
inc
hlt
xor
aam
pop
mov
ds
sbb
inc
ins
rol
jmp
jb
mov
xor
push
jl
dec
sub
ins
and
dec
aam
mov
mov
push
pop
cmp
cmp
jmp
or
push
adc
lock
xlat
xor
xor
call
nop
call
out
ja
dec
inc
fwait
popa
ja
lock
leave
ret
out
jo
rcl
add
mov
loop
mul
cmps
popa
jae
xor
xor
push
inc
mov
sub
or
or
clc
call
jle
ret
inc
aas
cdq
cmp
es
cmp
and
push
lods
sub
add
repz
scas
fidiv
sub
movs
sbb
je
iret
xlat
and
out
bound
sbb
outs
stos
cli
add
fistp
xchg
push
call
stos
repnz
inc
ss
inc
push
cmps
daa
add
pop
xlat
sbb
adc
hlt
je
inc
fiadd
repz
out
mov
gs
popf
pushf
sbb
ss
rcl
mov
sub
add
xchg
(bad)
ret
push
sbb
stos
sub
push
mov
daa
cli
and
ins
cld
add
sbb
add
inc
pop
mov
into
sub
addr16
dec
xor
outs
cmp
adc
adc
xor
jo
xchg
inc
js
inc
clc
inc
fs
out
popa
or
imul
mov
pop
ins
add
xor
sbb
lea
scas
xchg
adc
in
mov
jmp
xor
push
and
iret
inc
xor
jle
xor
sub
inc
nop
test
mov
sub
jno
fwait
jne
dec
xchg
jmp
cmp
mov
cmp
(bad)
or
mov
inc
adc
fdiv
mov
fcom
call
scas
push
add
and
pop
in
mov
daa
push
inc
hlt
fadd
dec
fs
inc
jbe
jb
cmp
lds
out
ret
in
in
into
fcmovne
mov
gs
and
test
inc
iret
cmp
sbb
xchg
sbb
(bad)
jmp
in
jne
add
test
rcr
inc
enter
mov
stos
movs
outs
rcr
jge
push
push
frstor
fs
sar
cmps
retf
pop
mov
inc
and
xchg
pop
lahf
inc
js
ss
jge
jecxz
cmp
out
sbb
test
sub
outs
adc
pushf
push
push
mov
cli
jmp
inc
mov
bound
cmps
jno
pop
int3
or
(bad)
xchg
into
add
cdq
shl
and
xchg
(bad)
(bad)
enter
(bad)
(bad)
in
into
sbb
dec
scas
jg
stc
jo
push
or
fldenv
cmp
mov
mov
push
in
jns
mov
stc
(bad)
arpl
es
mov
push
or
or
jmp
in
lds
es
test
or
inc
xor
and
imul
sbb
push
jb
fidiv
inc
daa
add
inc
rol
sub
jmp
sar
or
pop
mov
movs
(bad)
push
std
fidivr
mov
xchg
gs
and
dec
pushf
cmps
(bad)
out
mov
int
jns
frstpm(287
jle
mov
loopne
jae
or
jb
jo
(bad)
cmp
lods
sar
sbb
mov
pop
xchg
cmp
mov
adc
mov
int
mov
pop
cmp
pop
inc
mov
ins
cli
out
add
inc
mov
sub
mov
jmp
mov
mov
mov
test
jmp
mul
popf
dec
in
daa
mov
xchg
repnz
aad
inc
idiv
xchg
pop
das
inc
stos
pushf
cmp
add
adc
mov
push
pop
repnz
mov
cmp
xchg
push
mov
les
loop
movq
inc
and
imul
mov
or
xchg
out
jp
push
int3
adc
add
aaa
mov
jmp
push
div
mov
fstp
pop
imul
jg
xor
mov
sub
sbb
or
inc
(bad)
stc
int
sbb
(bad)
push
cmp
add
dec
fldcw
fcmovbe
sbb
test
dec
jnp
mov
out
jbe
or
cmp
test
and
sub
cmp
fwait
xor
ror
pop
cmps
in
add
out
imul
mov
int
in
lds
push
push
(bad)
(bad)
and
mov
dec
jns
shl
in
mov
jge
sub
repnz
sbb
je
mov
jns
enter
out
ja
inc
adc
andps
adc
test
(bad)
xor
sbb
cmp
cmp
lea
adc
adc
pop
push
(bad)
jmp
outs
ja
addr16
or
or
and
mov
mov
(bad)
mov
pop
cmps
ret
cdq
ss
sti
mov
scas
push
fcomp
sub
es
cmp
and
push
inc
repz
adc
shr
xor
rol
rcl
pop
dec
cmp
les
in
fwait
xchg
lahf
jp
push
inc
dec
cmp
xor
dec
retf
sub
stc
and
xchg
enter
mov
(bad)
adc
mov
js
(bad)
std
out
mov
dec
add
adc
adc
sub
inc
mov
rcl
jno
addr16
sub
(bad)
xchg
(bad)
(bad)
and
mov
or
mov
push
xchg
cmp
(bad)
and
dec
std
daa
das
xchg
lds
jp
test
mov
les
loope
aad
jae
icebp
mov
mov
aad
(bad)
cwde
out
push
sbb
mov
cmp
cmp
mov
iret
jmp
jno
shl
test
out
retf
ror
rcr
int3
jae
scas
jne
jne
test
es
mov
lds
jno
cmp
int3
js
jmp
lock
xchg
add
loopne
and
dec
ror
add
hlt
push
sbb
and
scas
push
mov
push
or
pop
mov
pop
lahf
push
cmp
jl
lahf
fwait
adc
loope
mov
popf
retf
sub
jmp
arpl
test
dec
aad
loope
scas
push
adc
xchg
jno
cmp
lahf
test
cmp
pavgw
int
addr16
mov
int3
push
push
xchg
les
and
cmp
fwait
stos
sbb
jle
add
xchg
cmps
loope
int3
cld
mov
(bad)
cmovle
int
sub
xor
jg
pop
fdivr
pop
pop
icebp
xchg
pop
mov
add
das
inc
ss
xlat
sub
sti
jne
jbe
clc
push
js
pop
test
test
xor
or
iret
pop
gs
rcr
push
lds
and
jb
lods
push
cdq
xchg
adc
fldcw
jb
mov
lahf
mov
movs
jae
push
out
hlt
adc
cmp
push
xor
or
scas
cmp
pop
xchg
leave
bound
(bad)
mov
or
sub
int
int3
mov
enter
pop
pop
leave
(bad)
hlt
mov
xor
mov
int3
retf
cmps
retf
int
pop
loope
lods
fcom
dec
xor
inc
push
add
add
pop
loope
dec
cmp
addr16
or
(bad)
inc
mov
clc
ss
movs
pop
fdiv
scas
scas
sub
cli
fldcw
adc
pop
jnp
xor
clc
jb
fisubr
call
sub
fimul
imul
(bad)
pop
mov
test
jb
pop
add
or
retf
pop
pop
mov
push
mov
mov
push
loop
stos
imul
sub
jmp
in
mov
loopne
ss
lds
jle
sbb
xchg
gs
xchg
mov
and
out
lock
ret
out
inc
jns
mov
add
or
loope
dec
(bad)
inc
add
cmovge
pop
stc
inc
lods
mov
push
or
(bad)
pop
call
xor
daa
int
jbe
js
(bad)
popa
fwait
call
repnz
mov
mov
mov
pop
push
fmul
push
inc
shr
bnd
and
dec
pop
out
ret
movs
add
xor
movs
jmp
inc
push
outs
sbb
inc
mov
(bad)
xor
orps
ins
push
mul
aas
mov
and
mov
stos
add
(bad)
(bad)
loop
xchg
mov
movs
pop
and
push
(bad)
adc
rcl
push
in
pop
pop
bound
and
jns
arpl
jns
and
imul
xor
cmp
cmps
arpl
mov
xchg
xchg
push
pop
in
nop
stos
jno
repz
mov
mov
jb
xchg
retf
dec
xor
push
cmp
std
xor
sbb
xchg
pop
push
add
repnz
pop
xchg
inc
sbb
mov
call
shl
imul
sti
dec
psrlq
mov
mov
push
enter
jns
sti
and
and
scas
int
lods
push
ror
add
int3
outs
or
ins
out
(bad)
xchg
mov
std
shl
sub
mov
mov
inc
adc
push
mov
and
add
jmp
test
gs
pop
pop
mov
xor
shl
stos
aam
lea
mov
jbe
rcr
sub
inc
imul
push
inc
inc
(bad)
adc
xor
mov
and
xor
ja
jb
mul
into
push
pop
sar
add
and
mov
lea
mov
aas
mov
sti
and
idiv
pop
pop
and
popa
push
mov
test
xchg
inc
xor
jnp
pushf
aad
mov
out
and
sti
rcr
push
fsubr
stc
mov
les
xor
mov
lods
lods
xor
fnstsw
inc
adc
dec
aad
sub
jl
aad
push
xor
push
sbb
mov
xchg
pop
rcr
cmps
mov
test
stc
jmp
xchg
fmul
movs
or
xor
bound
ret
inc
push
mov
push
sbb
jnp
clc
cmp
pusha
fwait
gs
(bad)
adc
inc
es
std
pop
sub
sbb
jle
bound
push
push
push
mov
mov
cmp
cmp
nop
clc
sub
(bad)
mov
fnstenv
mov
xchg
push
adc
mov
in
jb
push
inc
xor
xchg
pop
rcl
sbb
cld
stos
push
daa
(bad)
push
mov
popa
pop
out
imul
mov
daa
jle
push
inc
jne
iret
jno
mov
cwde
test
xchg
dec
and
jo
outs
xabort
xor
test
pop
sti
xchg
pop
ins
stos
test
adc
out
(bad)
sub
test
jecxz
sahf
ret
mov
inc
pop
xchg
inc
pop
das
aam
(bad)
push
mov
mov
sbb
inc
loopne
sahf
out
test
push
dec
test
call
in
movs
xchg
cs
or
aam
or
cmp
cmp
movs
movaps
xchg
fiadd
or
aam
std
repz
movs
fsubr
mov
sar
(bad)
addr16
(bad)
adc
aaa
dec
or
mov
ins
test
js
lahf
inc
pushf
push
xlat
mov
nop
in
jnp
iret
(bad)
ds
sub
leave
push
pop
cmp
ds
adc
pop
(bad)
repz
cli
jecxz
into
add
jae
mov
int
shl
sbb
adc
push
je
or
mov
and
mov
into
(bad)
movs
mov
xchg
cmp
(bad)
adc
lock
(bad)
push
sub
das
in
pop
xor
out
cdq
lahf
jne
mov
cmp
fs
jo
mov
jne
jecxz
cmp
std
push
dec
mov
nop
mov
add
pop
lock
sub
xchg
enter
fwait
dec
fwait
mov
jmp
test
and
add
xor
push
mov
push
lods
inc
loop
fcomip
inc
inc
cmp
es
dec
push
loopne
aad
retf
lahf
jg
shl
repnz
and
adc
or
popf
loope
mov
mov
mov
and
ja
call
xor
and
retf
xchg
shr
sub
jl
fcomip
imul
inc
mov
movs
lds
shl
inc
xor
mov
lods
push
xor
and
dec
test
pop
adc
and
cld
mov
aad
inc
mov
inc
xor
jecxz
int3
sub
(bad)
call
pop
mov
mov
inc
add
arpl
sub
mov
xchg
daa
movs
fwait
mov
or
cmc
test
or
adc
xor
xchg
aaa
scas
pop
jmp
or
imul
cmc
push
gs
retf
mov
mov
pop
push
jg
adc
lods
aas
mov
xchg
or
push
add
adc
in
stos
lock
adc
out
and
scas
pop
dec
test
push
xlat
mov
inc
or
dec
in
shl
push
pslld
or
mov
mov
push
aas
jg
hlt
add
jae
xchg
xchg
(bad)
dec
adc
bnd
adc
lods
daa
pop
or
mov
or
out
or
jns
ss
(bad)
out
lahf
xchg
ja
les
add
jb
mov
int3
call
jno
in
jno
fidivr
fdiv
mov
clc
xchg
pop
jb
enter
dec
outs
adc
adc
and
adc
xor
stc
adc
loopne
loope
adc
push
xor
mov
repz
mov
or
ja
out
outs
cmc
icebp
in
shl
sub
jns
fcom
addr16
fucomip
ffree
xchg
inc
dec
jne
jno
add
jge
into
dec
fiadd
pop
call
push
cmp
mov
sbb
xor
push
add
pop
sub
jge
fidiv
jg
mov
jecxz
add
push
fild
stos
push
mov
cmp
cmp
gs
xor
iret
dec
mov
(bad)
ror
and
cmp
addr16
or
call
sub
outs
and
xchg
fld
sub
mov
mov
xor
(bad)
int3
cmp
xchg
daa
jecxz
dec
mov
inc
test
mov
and
cs
push
sub
and
cmp
mov
jmp
adc
std
mov
dec
adc
mov
xchg
push
push
int
jns
mov
xlat
and
adc
out
mov
xor
cld
into
jb
xor
lahf
mov
and
inc
out
hlt
pop
into
test
pop
mov
je
ins
pop
or
sub
pusha
jno
cmp
(bad)
mov
and
xchg
and
cmp
and
xlat
xchg
lods
adc
aaa
pop
xlat
ret
dec
dec
mov
mov
fwait
ins
es
mov
lods
mov
mov
sub
cdq
inc
mov
cmc
rol
cmp
aas
mov
pop
(bad)
std
les
in
add
fucom
stos
cmps
retf
je
sub
je
jp
mov
popf
clc
pop
sbb
xchg
movs
ins
and
mov
mov
nop
jmp
xor
in
lods
cmc
push
shr
fdivr
loopne
push
xlat
icebp
call
adc
cmps
arpl
sbb
and
add
stos
and
into
mov
xchg
or
cmps
dec
and
mov
sbb
adc
call
loope
add
inc
icebp
xchg
or
sub
pusha
mov
in
out
or
shl
inc
lock
loop
outs
pop
xor
popa
adc
adc
sbb
rcr
jne
sahf
or
(bad)
cmps
pop
pop
push
lea
cdq
mov
sub
or
cli
int3
pop
pop
sub
inc
(bad)
icebp
cli
xchg
jns
jp
jmp
ds
sbb
adc
cmp
fcom
fwait
imul
sub
add
push
inc
xchg
cwde
push
xchg
dec
jmp
xchg
xchg
mov
fs
pop
icebp
mov
pop
sbb
dec
pop
in
xrelease
push
fucom
es
in
xchg
sbb
mov
cdq
inc
cmp
cmc
mov
out
xchg
push
ret
cli
push
inc
cld
test
push
push
inc
fadd
ins
pop
mov
bound
and
jmp
arpl
(bad)
jmp
inc
ret
lods
inc
inc
fld
cli
and
xchg
dec
push
sbb
repz
jle
and
cmp
mov
inc
dec
xchg
or
xchg
add
ret
mov
(bad)
enter
adc
ins
mov
lahf
sbb
xchg
mov
cmp
outs
pop
std
mov
cmps
mov
pop
fmul
adc
xor
scas
adc
in
loopne
push
push
push
leave
or
dec
rcl
stc
pop
adc
clc
sbb
adc
pop
or
fdiv
shr
iret
in
sub
(bad)
mov
pop
mov
test
adc
ret
popf
rcl
mov
lods
mov
rol
inc
xchg
dec
in
sub
jge
test
mov
push
stc
inc
mov
cmps
out
pushf
pop
js
sti
push
pushf
ins
add
pop
int3
fstp
push
bound
cld
jg
xchg
push
test
js
mov
mov
ret
ret
mov
and
mov
mov
cmps
add
popf
test
movs
(bad)
mov
and
push
xor
or
test
cdq
movs
add
xchg
jle
push
into
stos
sbb
dec
not
out
and
dec
push
pusha
add
xlat
outs
inc
(bad)
push
movs
jb
cmps
push
out
or
xchg
int
out
or
cmc
xor
popf
std
cvttps2pi
mov
in
je
inc
repnz
jbe
jp
push
cmp
push
je
or
or
inc
adc
and
or
fld
and
cmp
test
lds
push
jb
jbe
pop
out
(bad)
xchg
mov
mov
ja
adc
into
push
push
jno
push
push
pop
mov
pop
outs
repz
rcl
aam
mov
mov
xor
xor
stc
pop
sbb
jg
retf
sti
adc
movs
in
pop
fs
paddsb
push
enter
daa
gs
cli
(bad)
mov
or
sub
or
es
xchg
mov
(bad)
cmp
and
ja
lods
out
push
std
add
lods
xor
xchg
pop
ret
movs
mov
inc
xchg
jmp
cmps
sub
loopne
mov
sahf
imul
iret
int
dec
xlat
scas
or
pop
jg
pusha
(bad)
mov
jge
xchg
or
or
adc
iret
mov
in
nop
repnz
fst
scas
pop
xor
jecxz
push
push
loopne
adc
jne
mov
in
pop
sbb
mov
mov
imul
mov
push
sub
sub
call
std
xor
lods
fsub
or
or
stos
xchg
sbb
inc
mov
jno
daa
mov
sbb
sub
mov
xchg
pop
mov
rol
rcr
or
aaa
bound
pop
mov
test
inc
ret
jecxz
xchg
int
outs
xchg
mov
int
dec
fist
add
and
xchg
jg
ret
xor
loopne
ds
call
call
bound
arpl
je
pop
pop
xchg
mov
or
or
sub
sbb
in
cmps
xor
and
pushf
retf
sbb
inc
mov
iret
ret
icebp
pop
mov
xor
sbb
and
mov
add
xchg
lods
mov
jp
ret
add
leave
dec
fiadd
neg
inc
adc
lahf
(bad)
fdiv
neg
(bad)
movs
mov
bound
cmp
(bad)
fstp
adc
xchg
jbe
pop
xor
stos
adc
(bad)
(bad)
fwait
dec
or
inc
cmp
fld
mov
xor
imul
cmc
xchg
jae
lgs
jecxz
push
(bad)
and
dec
clc
jg
lods
mov
into
je
ins
mov
mov
adc
mov
mov
shr
jns
popa
imul
or
dec
(bad)
mov
cmp
hlt
(bad)
adc
inc
cmp
push
jbe
pop
stos
push
(bad)
and
outs
popf
dec
rol
scas
adc
xchg
(bad)
or
es
cmps
push
or
loopne
cmps
jmp
sub
inc
or
inc
(bad)
adc
jo
icebp
cwde
shl
aas
dec
inc
xor
test
(bad)
jbe
dec
inc
rcr
xor
(bad)
ins
aad
dec
(bad)
mov
bound
(bad)
pop
push
data16
inc
stos
(bad)
mov
lahf
(bad)
cmp
xlat
mov
sbb
movs
pop
test
mov
push
std
(bad)
(bad)
add
jl
fsub
jg
xor
gs
push
mov
jmp
mov
arpl
jbe
iret
(bad)
jmp
fs
jne
xor
cmc
or
or
sbb
loopne
rcr
or
cwde
mov
(bad)
sub
dec
div
add
scas
adc
bnd
jg
push
int3
int
or
inc
sub
add
mov
adc
mov
cmp
test
fdivr
cli
xchg
test
adc
fldcw
mov
sub
retf
das
lods
jmp
mov
fcmovb
mov
add
cmc
jp
fmul
mov
push
inc
jp
adc
repz
imul
loopne
loope
ror
fidivr
int
inc
dec
and
adc
shl
add
inc
dec
dec
push
sbb
cmovs
add
shr
cmp
jno
cmp
ins
mov
lds
sub
popfw
scas
das
xor
hlt
sub
jnp
sahf
fisubr
jg
sbb
cli
adc
lds
jbe
pusha
cmp
mov
cmp
nop
sbb
or
test
xchg
ja
(bad)
pop
(bad)
jne
lea
scas
ds
in
mov
inc
and
sbb
call
push
popa
mov
stc
dec
ja
mov
clc
pop
xchg
fisubr
ins
and
mov
call
imul
in
call
call
cmp
mov
(bad)
into
or
and
shr
sbb
and
mov
in
int
jg
leave
adc
mov
(bad)
fld
sub
pop
mov
shl
and
ltr
mov
push
sbb
jmp
xchg
adc
xchg
xor
sahf
xor
mov
lock
pop
test
popa
jecxz
test
jl
in
bnd
and
jmp
(bad)
jb
push
sbb
pop
ja
test
into
lds
fs
sbb
not
mov
mov
cmps
and
jecxz
nop
out
pop
adc
lock
scas
sub
jb
push
sbb
sub
mov
sub
mov
data16
push
ja
and
dec
push
inc
mul
sbb
and
mov
lea
cdq
mov
mov
sbb
and
xor
pop
sbb
pop
movs
cmp
pop
mov
sti
jmp
jecxz
das
jno
inc
sar
cs
in
movs
nop
hlt
imul
outs
fdiv
leave
aaa
imul
jbe
lahf
retf
cld
lahf
sub
ret
test
std
cmp
adc
and
dec
xchg
dec
mov
inc
sbb
scas
or
push
or
fild
adc
fwait
add
int3
mov
into
inc
mov
pop
jge
lea
(bad)
test
xor
mov
sbb
xor
jne
mov
adc
fisttp
push
stos
std
mov
push
pop
(bad)
mov
mov
xchg
test
and
inc
jne
mov
lock
ret
mov
sbb
mov
(bad)
in
adc
sbb
sti
mov
mov
sahf
(bad)
test
add
scas
jbe
jp
mov
cld
and
and
sbb
arpl
jbe
call
in
adc
imul
mov
lods
stos
sbb
mov
mov
mov
outs
mov
pop
cmps
or
and
cdq
bound
inc
push
mov
aas
dec
ret
dec
fs
jae
imul
mov
popa
loope
mov
cwde
and
mov
xchg
mov
das
sbb
mov
fild
mov
in
push
pop
das
mov
js
and
rcr
addr16
sbb
addr16
mul
loope
dec
sbb
mov
mov
fidiv
ss
mov
(bad)
xchg
(bad)
push
test
stos
into
(bad)
bound
pop
mov
cwde
adc
pop
sub
into
adc
push
adc
xor
arpl
ret
mov
shl
gs
lods
adc
jbe
cmp
out
retf
xor
jo
and
int
jne
inc
pop
ss
xchg
sub
inc
or
xchg
mov
inc
fcomp
mov
shr
cdq
add
imul
push
mov
mov
imul
mov
jl
fbld
mov
outs
mov
movs
leave
lock
shl
nop
inc
or
jno
xchg
mov
xor
in
mov
cmp
les
dec
xor
pop
xchg
pop
lds
push
cmp
cmp
fwait
mov
cwde
retf
cmp
ret
cmp
cli
(bad)
dec
and
jns
cmp
loopne
or
jp
add
clc
add
jne
mov
outs
or
dec
addps
sti
jo
js
dec
fwait
pop
or
xor
and
mov
jnp
fsub
ins
retf
ds
push
cmp
sub
push
aas
mov
inc
pop
lds
mov
rol
xor
cmp
jbe
mov
mov
mov
or
jle
cmp
xchg
xchg
mov
(bad)
dec
jae
push
idiv
test
jl
jns
ret
in
mov
sub
mov
mov
out
cmp
lds
lods
stos
adc
adc
lds
sub
push
push
push
jno
mov
xor
inc
daa
lods
jno
push
hlt
jmp
adc
das
jae
int3
inc
mov
rcl
add
mov
add
push
push
stc
lea
pop
outs
cmp
mov
lea
adc
xchg
leave
or
mov
dec
xchg
adc
xor
dec
gs
cmp
retf
pop
fcomip
push
loope
pop
inc
(bad)
out
mov
mov
jmp
imul
xchg
or
pop
mov
(bad)
mov
movs
mov
push
movs
add
pop
enter
mov
cmp
inc
adc
cwde
pop
push
ror
or
mov
fistp
iret
and
mov
nop
pop
sbb
jo
into
dec
mov
dec
xor
push
or
sti
inc
jg
add
xor
psrld
into
daa
das
in
adc
shl
call
daa
cmps
push
hlt
jmp
out
add
daa
jno
xlat
ins
xchg
pop
cmp
pop
dec
xchg
xchg
xchg
and
mov
mov
push
dec
push
pslld
ja
add
cmp
dec
push
push
bound
not
shl
or
popa
mov
dec
imul
adc
sub
fiadd
cmc
push
std
jne
dec
and
cmp
jb
xchg
xchg
xor
hlt
cmp
push
jmp
in
pop
and
clc
jg
inc
lds
retf
or
(bad)
imul
and
sbb
add
add
int3
cld
mov
ucomiss
inc
imul
cmp
clc
(bad)
call
mov
mov
stos
inc
pop
out
rol
dec
dec
jmp
imul
add
iret
adc
inc
xchg
pop
in
loop
scas
frstor
cmp
xor
cdq
outs
pusha
inc
fs
js
addr16
pushf
mov
ss
movs
pop
xchg
or
dec
xchg
cmps
dec
jp
popf
mov
push
jmp
imul
push
cdq
and
dec
cmp
xchg
ja
xchg
cmp
xor
pop
aaa
iret
sbb
ror
loop
xchg
add
jmp
(bad)
sbb
fld
call
fidivr
mov
and
scas
aam
cmp
int
sti
mov
rcr
xor
jp
jge
loope
or
dec
inc
stos
cmp
daa
cmp
(bad)
push
mov
jge
gs
arpl
mov
xchg
(bad)
and
push
adc
enter
movs
jae
lods
dec
scas
sub
xor
fst
sbb
jl
push
mov
out
push
aas
shl
sar
call
lea
das
xchg
sbb
fmul
outs
aaa
mov
hlt
cmp
jo
arpl
cs
out
cli
jecxz
mov
or
lods
and
pushf
xchg
popf
(bad)
and
icebp
inc
jnp
rcr
sahf
add
(bad)
jbe
mov
push
mov
sti
ja
jmp
sub
icebp
mov
push
mov
aad
sbb
pop
mov
sti
or
mov
mov
xor
jp
xor
retf
stos
adc
mov
jne
or
xchg
push
push
fdiv
mov
bound
cmp
push
lock
imul
cmps
pop
jecxz
cmps
add
xor
cmp
xchg
add
out
sbb
pop
xor
ficomp
dec
int3
ficom
inc
hlt
jecxz
retf
fistp
pop
xchg
push
mov
jmp
inc
xor
ins
mov
mov
scas
pop
dec
pop
scas
jmp
ret
cld
cmps
shl
xchg
ror
or
fild
jge
arpl
jmp
sahf
add
jg
push
jno
jmp
jle
mov
repz
fcom
dec
push
repz
out
rcr
inc
leave
fnsave
or
adc
mov
cli
out
jns
mov
dec
in
add
iret
push
aaa
retf
add
mov
lods
sahf
push
dec
mov
ret
aam
pop
pop
mov
dec
outs
mov
dec
inc
rol
xor
cmp
into
mov
addr16
imul
jecxz
dec
test
pop
cmps
jns
xchg
sub
enter
pushf
mov
bnd
movs
int
and
inc
test
mov
xchg
nop
mov
sub
adc
mov
inc
jmp
sub
out
(bad)
daa
fild
es
fidiv
mov
loopne
adc
ins
pop
nop
mov
fcomp
retf
popa
clc
and
stos
test
mov
mov
(bad)
pop
sbb
mov
sbb
sbb
mov
xchg
sti
inc
pop
stos
adc
xlat
scas
ss
adc
(bad)
test
cmp
in
popf
mov
sub
and
or
mov
mov
mov
int3
sbb
jecxz
push
fwait
sub
sub
cwde
loope
popf
mov
xchg
daa
or
fnstenv
mov
ret
cmc
dec
ret
add
jne
rcl
fdivp
in
or
ins
and
push
mov
dec
addr16
leave
cmp
jle
cmc
lea
adc
pop
add
and
cdq
push
(bad)
or
out
cmp
push
lds
call
pusha
pusha
dec
mov
mov
ss
sbb
xchg
or
inc
adc
xchg
xchg
push
add
loope
fsubr
jl
retf
sbb
cmp
(bad)
imul
fnstenv
gs
mov
sbb
clc
pop
not
push
imul
ja
and
sbb
cs
jp
es
ret
push
rol
arpl
leave
lods
ficom
bound
idiv
arpl
xchg
not
dec
inc
gs
aad
out
xor
dec
xor
mov
out
daa
loopne
or
hlt
sbb
push
sub
retf
dec
mov
fstp
fcomp
push
iret
bound
bnd
ret
js
jmp
xchg
mov
mov
in
push
adc
add
aad
repnz
or
sub
xor
ins
lahf
cmp
or
mov
pop
repnz
xchg
js
retf
js
stos
mov
call
add
sbb
mov
cmp
arpl
aam
xor
scas
movs
nop
jle
mov
mov
pop
mov
xchg
or
add
call
mov
(bad)
pop
xchg
xchg
cmp
das
mov
push
pusha
shr
mov
call
dec
sbb
lods
idiv
je
int
inc
jne
stos
or
mov
js
cmp
cmps
mov
mov
sub
out
pop
or
xchg
les
xor
and
lea
push
mov
add
scas
div
in
leave
fadd
cli
dec
mov
dec
mul
xchg
mov
xchg
mov
add
cmp
sub
mov
sbb
and
or
jae
jp
or
shl
fwait
loopne
dec
jl
out
push
add
add
add
das
daa
mov
movs
icebp
cmp
xor
inc
test
popa
mov
jae
hlt
push
fucom
sar
mov
mov
or
rol
lock
shl
repz
fxch
out
rol
retf
cli
and
mov
fs
sbb
test
jmp
push
lock
unpckhps
and
and
or
pop
shr
js
mov
cmp
stc
icebp
mov
mov
test
adc
call
je
or
(bad)
fistp
push
jo
mov
std
out
call
cmc
(bad)
jns
pop
clc
dec
mov
in
imul
mov
dec
pop
ror
imul
test
jmp
scas
mov
mov
jns
popf
jecxz
in
mov
xchg
xchg
es
pop
mov
cmp
mov
mov
jbe
xor
std
xchg
mov
mov
aad
adc
fcomp
(bad)
jo
cmps
cmc
push
in
cmp
dec
push
call
pop
jp
jo
adc
imul
loope
out
sub
retf
dec
push
jne
loopne
mov
push
xchg
ret
jle
push
cli
pop
pusha
ins
jnp
test
sub
dec
lock
fiadd
xchg
jg
mul
ds
mov
push
mov
fcomp
xchg
sub
xchg
xchg
in
sar
cbw
repz
mov
rol
aas
iret
jg
mov
dec
(bad)
push
sti
jg
in
mov
repz
ficom
mov
fstp
sub
mov
bound
enter
jmp
sbb
test
xor
push
and
in
js
jecxz
mov
ins
push
or
jne
pushfw
icebp
inc
fidivr
lods
ins
mov
aaa
call
mov
aad
pop
(bad)
clc
inc
mov
lods
sbb
mov
jmp
ss
(bad)
xchg
mov
add
fsub
push
add
push
bound
not
xchg
add
fimul
shr
rcl
stos
and
mov
outs
arpl
sahf
dec
fstp
xor
in
int
test
jecxz
bswap
rol
mov
mov
test
pop
daa
pop
xor
outs
dec
loopne
dec
repz
and
sbb
mov
cmp
jae
sub
pusha
dec
cmp
into
popa
sti
mov
fdivr
sahf
das
bound
in
mov
mov
jecxz
or
(bad)
xchg
sbb
cmp
jae
and
dec
ds
jmp
push
jae
ror
lods
push
push
jbe
fistp
into
in
cdq
pop
test
adc
inc
dec
mov
pop
jg
push
jle
adc
test
nop
sbb
mov
pop
jge
sbb
fmul
arpl
call
fcom
out
bound
xchg
xchg
ins
lods
(bad)
jmp
ja
test
jnp
aad
jmp
outs
ds
pop
loopne
push
fwait
add
imul
mov
test
(bad)
(bad)
les
or
sbb
push
test
out
shl
or
fisttp
sahf
test
fidivr
pop
push
adc
or
retf
es
loopne
pop
mov
pop
push
mov
push
popa
jbe
dec
fwait
xchg
mov
sbb
repz
ds
mov
(bad)
outs
sbb
pop
ret
push
xchg
icebp
les
in
xor
nop
sub
aaa
jns
cmp
inc
ins
sbb
pop
xchg
ja
cli
push
and
test
iretw
or
dec
fnstenv
xchg
add
push
pop
mov
cwde
retf
cmps
mov
fisttp
fisttp
jne
mov
dec
ja
frstor
ret
jecxz
jne
add
stc
test
lahf
fldcw
je
jg
mov
xchg
jmp
je
xor
and
addr16
nop
cli
ss
inc
repz
jb
xor
fimul
inc
vcvtsi2sd
shr
xchg
add
ds
pop
mov
lods
es
and
push
dec
iret
dec
mov
add
outs
mov
cmps
in
(bad)
cmp
leave
outs
cmps
iret
in
push
jge
sti
push
retf
xor
popa
inc
pushf
std
(bad)
inc
mov
out
js
inc
pop
mov
cmp
add
sub
and
mov
cli
xchg
fwait
scas
nop
jns
sbb
or
sbb
cmp
sbb
out
ds
iret
scas
out
popf
and
adc
jb
xchg
cmp
les
jmp
movs
loop
icebp
hlt
mov
pop
retf
and
jle
cli
sub
adc
xchg
push
adc
ds
jmp
add
loopne
(bad)
mov
mov
movs
push
adc
push
cmp
cmc
cdq
jb
and
push
rol
popa
std
rcl
and
mov
in
shr
sti
pop
int
mov
fisubr
mov
mov
outs
or
mov
mov
mov
sbb
adc
shl
mov
adc
leave
in
mov
mov
mov
sub
xor
cmp
fisub
pop
mov
xchg
in
sub
test
lds
out
or
les
mov
movs
jle
pop
aas
or
jmp
jmp
fild
aaa
xchg
movs
mov
push
cwde
dec
pop
lods
mov
out
pop
mov
inc
jecxz
sub
in
cld
dec
je
sar
or
jno
jp
or
nop
outs
fs
lods
in
mov
call
je
xor
mov
push
adc
inc
cld
stos
pop
das
std
int3
sbb
int3
adc
inc
sahf
nop
cmp
or
or
test
into
cmp
in
push
iret
mov
cmp
or
mov
sbb
xlat
and
jno
sub
push
test
inc
push
out
shl
movs
pop
mov
loope
scas
ret
pusha
stos
in
mov
or
mov
out
xor
test
mul
(bad)
stos
mov
mov
mov
mov
sub
cmp
sti
pop
fisubr
outs
out
sbb
add
jge
sub
sbb
pop
mov
or
lahf
into
add
in
mov
mov
std
hlt
sub
mov
mov
xor
outs
retf
cmp
retf
icebp
int3
outs
sbb
adc
mov
arpl
cmp
ja
aas
fstp
test
jmp
jecxz
sbb
jne
add
push
xchg
hlt
(bad)
popa
out
dec
jo
sbb
mov
mov
stc
cmp
mov
aad
jno
xchg
adc
mov
push
pop
(bad)
mov
cmp
cmc
and
bound
inc
adc
mov
lds
loope
popf
add
inc
xchg
lds
jnp
in
or
jae
cdq
test
and
mov
xchg
xor
sub
jle
sub
jmp
(bad)
jmp
fs
mov
scas
jmp
rol
mov
sub
and
pop
and
pop
push
mov
leave
or
icebp
fdivr
nop
add
out
push
jnp
xlat
mov
pushf
(bad)
iret
xchg
(bad)
test
xor
out
add
jo
test
sbb
js
iret
adc
xchg
into
mov
ss
cmp
xor
xor
jp
sbb
mov
jmp
mov
daa
xchg
adc
and
into
mov
sar
fcmovb
repz
cmc
rol
pop
push
daa
adc
enter
jecxz
push
mov
sub
adc
fistp
adc
cmc
inc
cs
int
enter
enter
inc
and
push
xchg
xchg
jb
cmps
cmp
lds
call
or
hlt
jae
xchg
mov
ds
mov
mov
fucomi
lock
or
sub
int3
adc
or
lods
push
stos
xor
dec
mov
xlat
cdq
in
sbb
fadd
lds
out
sub
push
je
call
loop
int
jno
das
les
inc
(bad)
out
aad
jmp
add
(bad)
sbb
je
sub
inc
xchg
test
stos
stos
test
sub
sbb
retf
dec
outs
or
jmp
adc
mov
scas
shl
inc
call
push
and
enter
add
enter
jmp
xor
mov
mov
test
pop
call
jbe
arpl
inc
xchg
fwait
inc
rcr
mov
cli
cmp
add
push
dec
mov
mov
pusha
test
mov
bnd
push
and
xchg
ret
test
hlt
add
stc
in
(bad)
retf
inc
dec
add
xchg
test
cwde
dec
push
aam
and
bound
adc
out
pop
(bad)
in
jnp
fdivr
movd
popf
pop
enter
or
icebp
imul
dec
das
push
jmp
das
inc
cmp
ja
or
fist
mov
cmps
and
or
mov
pop
test
jb
fs
dec
xor
mov
repnz
int
pop
dec
test
pop
into
push
jne
adc
mov
and
sbb
mov
adc
ficom
stc
mov
rcl
pop
inc
(bad)
out
fsubr
pop
enter
mov
fs
jo
xlat
fucomip
cmp
mov
sub
dec
dec
cdq
push
inc
jmp
adc
popf
pop
loope
daa
shl
mov
aaa
sti
sub
xchg
mov
push
sbb
out
fdivr
jb
mov
mov
fcmovnb
inc
clc
in
retf
in
lock
xchg
pop
call
add
push
dec
mov
pusha
ror
adc
mov
lods
hlt
out
mov
out
dec
test
shl
mov
push
pop
into
stos
sbb
in
add
icebp
jo
inc
mov
sbb
xchg
call
lea
cmc
test
add
sbb
enter
mov
icebp
fwait
xchg
pop
icebp
lock
test
sub
pop
sub
in
call
test
pop
cmp
and
loopne
sub
dec
mov
pop
ds
out
dec
jle
mov
lea
jle
or
pop
sbb
cwde
lods
shl
or
fstp
add
fild
das
cmp
int
cdq
mov
iret
repnz
cli
xchg
adc
sti
mov
test
mov
call
inc
mov
adc
add
xchg
dec
lea
fadd
scas
push
inc
xchg
in
out
inc
pop
xchg
nop
jle
sub
or
lock
mov
xchg
jbe
ficomp
mov
or
jno
or
jp
xor
mov
daa
stc
pop
or
das
push
mov
cdq
gs
mov
or
fld
pop
mov
std
(bad)
adc
jle
push
mov
pop
ret
mov
sub
adc
fcmovnu
ret
mov
retf
(bad)
sar
jle
jmp
fld
mov
xchg
lods
jle
rol
neg
cmp
loopne
dec
jbe
jmp
push
cmps
inc
push
jle
push
je
mov
lahf
mul
adc
enter
push
fwait
push
out
push
xchg
iret
pop
pop
fsubp
jno
shr
mov
es
daa
adc
gs
fisubr
sbb
add
mov
jno
inc
popf
gs
and
adc
pop
(bad)
mov
into
out
call
mov
and
(bad)
fidivr
adc
mov
sbb
mov
stos
iret
dec
dec
(bad)
mov
jbe
add
push
push
mov
fwait
ins
lea
push
push
retf
ss
cli
loope
data16
iret
std
sub
ret
and
dec
cmps
shl
adc
add
adc
dec
xor
pop
mul
fmul
test
adc
ins
cs
add
nop
push
xchg
lock
into
xor
adc
ficomp
and
and
xchg
inc
push
xchg
inc
push
push
cmps
and
push
pop
cli
xchg
div
sbb
xor
fs
pusha
add
sbb
mov
sbb
or
(bad)
popf
adc
push
pop
sbb
js
sub
push
jnp
ins
(bad)
jns
movs
dec
jbe
and
and
in
pop
mov
into
dec
adc
mov
ss
adc
or
ret
mov
arpl
mov
inc
fnsave
xor
call
pop
js
in
mov
(bad)
and
and
xchg
sbb
mov
sub
xchg
sbb
cmp
pop
rcl
pop
push
or
aad
xchg
mov
mov
popf
out
dec
call
add
stos
dec
dec
stc
xor
fcomp
cli
ret
dec
inc
and
stc
imul
jmp
into
dec
mov
and
jge
into
call
or
popf
xchg
xchg
jns
(bad)
mov
les
ds
retf
mov
mov
sub
jmp
sbb
inc
and
add
(bad)
jno
dec
lods
cmp
movs
sbb
add
retf
pop
cs
repnz
(bad)
sbb
cld
xchg
mov
xchg
call
or
fdivr
iret
mov
cmc
pusha
and
and
sahf
pop
mov
cmc
jae
fnsave
push
adc
fld
add
or
(bad)
sbb
mov
fnstsw
jnp
jbe
push
dec
retf
lahf
fnstsw
imul
inc
adc
rcr
ins
into
aas
inc
inc
mov
xchg
or
imul
sahf
stos
fcom
cmps
and
jns
rcr
or
test
popf
loope
aam
sub
lods
jae
fld
imul
(bad)
and
(bad)
clc
inc
pop
xchg
ins
pusha
dec
popf
lods
adc
call
dec
dec
outs
mov
call
cmp
ins
push
jne
sbb
or
int
lods
inc
xchg
and
jp
or
mov
(bad)
(bad)
loope
in
push
adc
call
cmp
jp
sub
mov
outs
shl
and
inc
and
arpl
jle
adc
mov
dec
int
lea
ja
neg
jno
mov
in
or
out
or
xor
mov
push
fidiv
nop
cmp
scas
cmp
sub
out
cmps
in
jmp
in
repz
push
add
not
int3
jmp
mov
adc
add
and
retf
mov
leave
movs
cwde
and
clc
pop
add
mov
fisub
(bad)
sahf
xor
mov
jo
xchg
mov
cmp
pop
test
dec
(bad)
sbb
scas
mov
mov
jne
adc
enter
and
lods
fdiv
fldenv
mov
ins
das
pop
dec
push
(bad)
div
add
dec
xchg
cs
test
and
fsub
pusha
mov
add
daa
sbb
mov
(bad)
mov
cwde
mov
add
hlt
push
cmps
in
sahf
iret
mov
ror
fcomip
(bad)
(bad)
frstor
jmp
int
push
adc
fistp
xchg
push
jno
jno
enter
add
jb
push
mov
mov
lods
jmp
call
je
(bad)
test
je
xchg
mov
fimul
push
or
mov
mov
jp
(bad)
clc
movs
and
in
rcl
cmp
jb
sbb
sti
mov
adc
int3
pop
adc
jp
rol
inc
std
jno
cmp
cmp
cmp
ret
cld
lock
xor
imul
loope
push
rcr
jmp
ror
cmp
dec
test
cmp
in
fsubp
xchg
stos
cmps
les
shr
aaa
dec
fist
dec
test
call
aam
xchg
mov
jnp
or
sub
push
in
inc
push
cmps
movs
mov
loopne
adc
lds
cmps
into
loopne
jmp
fisttp
fwait
mov
xchg
cs
scas
sub
mov
js
scas
pop
in
pop
mov
shl
dec
pop
xchg
movs
daa
jmp
jae
push
mov
cmp
ja
jmp
dec
xor
and
push
cmp
repz
pop
push
(bad)
aam
ins
cld
movs
retf
cmp
jb
pusha
push
pop
fistp
jb
and
icebp
enter
test
push
je
call
mov
xor
test
movs
and
fidivr
or
or
es
mov
mov
jb
xor
sub
xor
gs
cmps
dec
push
pop
and
jge
jns
dec
cdq
nop
mov
xor
(bad)
shl
jns
rol
cmp
lods
sti
inc
in
sbb
add
test
mov
(bad)
inc
lods
lock
jmp
dec
stc
stos
mov
sbb
addps
dec
lods
sahf
popf
arpl
fsub
icebp
cwde
imul
inc
dec
lds
xchg
push
xor
push
in
inc
dec
mov
xchg
fst
xchg
mov
add
addr16
cmps
jg
sub
stc
mov
push
add
call
xor
clc
sbb
jno
mov
pop
shl
stc
xor
lea
retf
nop
or
mov
push
adc
mov
mov
sub
add
inc
push
nop
jo
gs
outs
fistp
xchg
mov
push
jbe
nop
test
fcom
sbb
and
cmp
cmp
ins
xor
aad
xor
mov
sahf
push
cmp
mov
cmps
into
pusha
cmps
xlat
push
icebp
mov
mov
xchg
and
jmp
(bad)
jne
cmp
jg
sub
or
push
ror
dec
pop
out
cmps
or
(bad)
in
pop
(bad)
das
mov
fsubr
loop
or
push
ss
call
xchg
scas
add
(bad)
xchg
cmps
nop
sar
mov
cdq
pop
sbb
retf
xchg
sbb
movs
sahf
cs
fiadd
cmp
(bad)
in
neg
xor
and
lea
dec
(bad)
push
(bad)
mov
in
add
lock
sbb
int
out
fs
xchg
lock
out
xor
dec
push
cmp
add
(bad)
jmp
scas
sbb
xchg
les
call
imul
out
into
cmc
mov
fnstsw
sub
je
sbb
shr
and
sbb
and
rol
sbb
repnz
stc
movs
leave
sbb
jmp
bound
cmp
mov
mov
hlt
aaa
(bad)
lahf
sub
sub
ins
push
sbb
push
xchg
mov
pop
mov
inc
test
lods
pop
and
sub
sbb
jle
pop
adc
fcomp
pop
add
cwde
jnp
mov
movs
scas
xor
shl
dec
inc
loop
inc
popf
mov
mov
jp
inc
div
mov
leave
lods
push
adc
stos
dec
mov
jnp
mov
inc
xchg
int3
lahf
in
push
jecxz
inc
cmps
sub
enter
xchg
and
sti
sbb
out
or
add
pop
push
scas
sbb
stos
pop
sub
sub
jle
mov
push
inc
xor
cdq
jno
out
cmps
fld
aas
je
(bad)
ins
adc
mov
push
ss
enter
xlat
mov
lea
jle
movs
and
sbb
int
ja
(bad)
mov
mul
movs
int
cmovae
outs
jl
in
jno
jg
xchg
pop
adc
test
shr
jg
ret
in
pop
xchg
cdq
pop
loope
mov
or
sbb
jnp
test
xchg
call
mov
xor
js
xchg
cdq
outs
les
cmps
fsub
xlat
xchg
mov
call
xor
add
pop
mov
mov
(bad)
pop
loop
int3
js
cwde
int
fcomp
xor
lea
out
(bad)
cwde
ins
xchg
in
or
mov
cs
fwait
push
pushf
pop
sbb
push
arpl
add
imul
int3
push
dec
mov
out
xchg
pop
jae
cmp
dec
xchg
bound
shr
in
cmps
ret
dec
xchg
jg
pop
ret
stos
cmp
inc
repnz
cmp
imul
adc
xchg
xchg
mov
fbld
movs
push
jb
das
adc
xlat
ja
ret
adc
outs
xchg
inc
dec
pop
scas
ret
fnstcw
mov
adc
das
scas
inc
(bad)
pop
inc
mov
mov
xchg
popa
cmps
jge
cmp
push
jne
xor
outs
shl
pop
add
imul
aas
pop
ret
jnp
(bad)
xchg
push
retf
inc
clc
scas
ja
mov
(bad)
adc
outs
push
add
(bad)
mov
inc
outs
and
fistp
ret
in
and
loope
retf
cli
es
sub
mov
adc
jno
bound
pushf
js
gs
aas
inc
ret
sbb
push
loope
sub
fiadd
push
lds
jne
push
push
arpl
loopne
stc
fdiv
xchg
xor
(bad)
leave
test
repnz
popa
daa
cmp
push
cs
and
mov
fucomp
and
jae
stc
lods
mov
mov
into
in
jge
rol
xchg
scas
sub
pop
push
sbb
fadd
jae
mov
ret
pop
out
add
aad
ja
pop
mov
pop
cld
push
call
xor
pop
mov
(bad)
xchg
fwait
test
dec
stos
js
jmp
scas
jo
xchg
das
test
or
loopne
aam
pop
das
inc
inc
jp
cmp
add
push
jno
dec
jns
loopne
repnz
push
sub
cmps
popa
cmp
xchg
and
add
mov
shr
icebp
jno
mov
rcl
mov
sub
push
push
loopne
dec
push
push
je
mov
mov
sbb
add
or
leave
div
ror
dec
mov
jmp
adc
inc
dec
out
xchg
hlt
clc
and
mov
dec
test
pop
dec
rcr
dec
inc
nop
add
aam
or
cmps
inc
ins
inc
mov
push
je
std
repnz
sbb
xchg
retf
cli
jp
loop
xchg
adc
cmps
push
pusha
scas
mov
or
(bad)
or
push
jbe
mov
jg
mov
leave
(bad)
xor
sub
aaa
adc
fnclex
fwait
std
and
or
or
lods
ds
retf
(bad)
dec
cmps
frstor
cli
enter
loope
in
jb
lock
xchg
shr
mov
jns
sub
(bad)
test
mov
arpl
not
push
out
xchg
push
push
fsub
mov
popa
and
daa
adc
jnp
xchg
pop
aam
(bad)
jmp
ins
xchg
mov
out
mov
xchg
sbb
xor
or
dec
ror
leave
push
mov
mov
cmp
lds
dec
out
nop
shl
inc
push
das
inc
(bad)
jns
gs
jle
mov
or
push
aas
sub
sbb
xor
imul
xor
dec
xor
pop
(bad)
dec
or
adc
fnstenv
dec
fidiv
xchg
cdq
aam
push
cmps
(bad)
dec
jno
mov
test
xchg
xor
imul
inc
push
or
dec
mov
xor
mov
or
fldenv
xchg
imul
retf
push
ror
icebp
jno
xchg
fs
add
ror
loopne
mov
(bad)
cld
mov
jmp
retf
scas
inc
movs
cmps
push
adc
cmp
stos
push
cwde
(bad)
repnz
aas
(bad)
pop
sub
mov
mov
(bad)
scas
idiv
adc
inc
jmp
fs
test
sar
adc
dec
fs
jmp
jns
xor
mov
cmp
iret
xchg
or
xchg
sbb
adc
fist
push
fs
pusha
inc
in
adc
fdiv
fstp
ror
mov
cmps
pop
push
sub
xor
add
out
cld
push
xor
cmps
std
loopne
outs
xchg
mov
cmps
xchg
sbb
cmp
jmp
or
jne
fdiv
popa
and
popf
mov
std
fs
not
and
dec
jle
xor
scas
or
cmp
pop
js
jae
pop
sub
jbe
lock
mov
mov
pop
push
stc
mov
cmp
xchg
pop
ds
push
sti
popf
std
and
mov
xchg
adc
mov
xlat
ror
ret
add
mul
outs
jle
int3
xor
push
xchg
dec
xchg
xchg
je
lea
push
shl
sbb
js
cmp
pop
into
push
and
push
(bad)
idiv
call
mov
jecxz
repz
cs
fiadd
push
xchg
test
jmp
push
ss
ret
push
outs
or
shr
retf
in
dec
sub
repz
mov
mov
pop
leave
(bad)
mov
sahf
aam
cmp
in
movs
sub
xchg
pop
shl
sbb
sbb
inc
cmp
js
pop
mov
clc
sbb
(bad)
xchg
frstor
cmp
retf
add
out
(bad)
cmc
mov
pop
out
jle
int3
cmp
sub
pop
sub
popf
jle
ret
hlt
fmul
mov
inc
cld
aam
mov
in
inc
sbb
xchg
xchg
ficomp
cmp
rol
mov
nop
cmp
add
sub
xchg
xor
dec
add
mov
rol
aad
retf
sub
add
mov
je
adc
xchg
(bad)
sub
(bad)
scas
xchg
lahf
ja
xchg
and
pop
mov
test
lock
mov
pop
bound
sub
xlat
sbb
nop
jmp
ficomp
pop
xchg
retf
scas
cli
jge
sar
xor
jmp
and
cmp
and
xlat
mov
aas
stos
fcom
inc
xor
loopne
push
fild
pushf
(bad)
jmp
mov
ret
cmps
pop
jmp
aad
push
jnp
jbe
test
sar
dec
out
and
adc
loopne
call
cmc
pop
je
call
or
xchg
mov
dec
jbe
fs
mov
shl
or
inc
fnstcw
xchg
(bad)
fs
out
leave
xchg
mov
(bad)
jae
jne
xor
inc
popa
mov
sbb
jle
dec
test
or
test
lea
mov
pop
loopne
outs
sbb
aas
add
cmc
mov
test
mov
jecxz
or
sbb
pop
cwde
jno
mov
stos
push
sbb
in
jmp
out
fsubr
lahf
cmp
dec
jp
ss
adc
cli
xchg
mov
(bad)
xlat
mov
loopne
pop
sbb
adc
gs
hlt
mov
mov
in
mov
and
mov
fstp
ds
jl
mov
int3
dec
mov
jecxz
repz
out
sbb
gs
hlt
xchg
push
jns
cmp
in
xchg
test
sub
cdq
test
lods
cmp
fs
mov
jns
inc
ins
pop
xchg
adc
cmp
adc
imul
pop
int3
out
arpl
push
(bad)
fadd
jno
inc
or
lea
cmp
ins
loop
fild
ins
pop
retf
mov
popa
je
mov
xchg
por
loop
jg
mov
inc
retf
mov
mov
shr
pusha
cmp
jle
push
shl
data16
shl
into
jne
pop
xor
out
adc
retf
fstp
in
push
add
pop
ja
inc
pop
stc
imul
pop
bound
lock
arpl
scas
jo
jb
ins
stos
int3
jmp
gs
pushf
in
mov
cli
nop
fwait
popa
int3
dec
fistp
cs
xchg
test
arpl
shr
push
inc
fstp
fst
mov
aas
call
in
adc
fcmovnb
or
jmp
mov
in
retf
mov
mov
sahf
(bad)
out
loop
push
imul
adc
mov
mov
in
out
std
out
push
pop
add
(bad)
or
and
cmps
or
jl
jae
adc
push
aad
push
std
bound
add
or
test
call
repnz
xor
xor
in
add
xor
push
mov
loop
loop
mov
addr16
popa
shl
clc
sub
jbe
mov
(bad)
ins
mov
xchg
xlat
test
xchg
push
push
fcomp
inc
gs
cld
inc
ins
mov
mov
and
je
ficom
inc
jecxz
jmp
adc
into
and
(bad)
scas
stos
and
arpl
jmp
sub
push
arpl
jae
mov
xchg
adc
push
and
fldenv
iret
es
test
add
aaa
xlat
popa
int3
aaa
jg
xchg
pop
mov
(bad)
push
ret
(bad)
jnp
mov
(bad)
push
jmp
pop
xor
inc
jg
fs
movs
mov
push
daa
or
mov
push
pop
(bad)
nop
jmp
mov
jb
pop
and
(bad)
mov
loopne
mov
sub
cmp
mov
jmp
rcl
ins
cs
pop
pop
xchg
cld
aaa
jne
fldcw
push
cmc
pusha
out
jl
inc
mov
fs
mov
out
iret
xchg
sar
test
jbe
lock
push
shl
mov
or
ret
int3
ins
adc
pop
fisub
scas
cli
sub
mov
sbb
retf
sbb
mov
or
jnp
cmp
mov
shr
or
sbb
push
stos
sar
inc
dec
aas
inc
fwait
nop
mov
hlt
pop
xor
not
int
push
xor
(bad)
mov
pop
mov
mov
sub
jmp
iret
xchg
test
jecxz
jl
out
pushw
mov
mov
call
xchg
xchg
mov
gs
mov
aad
aas
jp
add
test
mov
pop
xor
mov
jns
or
adc
dec
adc
aas
pop
daa
aam
mov
ja
mov
lods
outs
pushf
and
push
dec
inc
into
or
pop
std
jb
sbb
cmps
push
adc
icebp
cmps
cmp
repz
inc
jl
pop
aaa
mov
into
xor
retf
adc
rol
sbb
loope
jb
jp
mov
push
and
cmp
sti
push
mov
test
jno
add
loopne
js
popa
sub
lods
xor
xor
cmp
mov
sahf
push
inc
jno
sahf
mov
mov
lods
lahf
fcomp
scas
mov
jb
out
test
fisttp
xor
and
mov
rol
push
add
adc
mov
pop
cmps
push
mov
movs
sar
clc
adc
outs
or
(bad)
aas
inc
pop
pusha
xor
fdivr
aaa
cwde
lea
ret
sbb
ret
xor
cmp
loop
mov
dec
(bad)
retf
ins
mov
xlat
(bad)
adc
loop
movs
mov
in
mov
outs
in
cmp
cmp
mov
stos
in
test
push
in
adc
pop
mov
ror
cs
pushf
adc
push
cli
sub
gs
add
lahf
sti
jnp
xor
sar
mov
and
aas
and
xchg
and
(bad)
xchg
pop
mov
adc
adc
in
aam
test
aam
push
jbe
xchg
push
push
push
(bad)
mov
or
mov
mov
in
mov
jnp
pop
cmps
std
and
mov
imul
push
inc
lds
ss
cmps
addr16
imul
mov
cmp
jmp
mov
iret
mov
(bad)
xchg
mov
push
jno
jno
sub
nop
inc
ret
cld
mov
js
pop
jmp
loopne
test
xchg
int
and
jns
clc
jne
fnstenv
mov
out
inc
adc
jle
js
(bad)
pusha
stc
jae
(bad)
mov
adc
int3
outs
cs
cmp
(bad)
call
rol
push
mov
dec
aam
pushf
(bad)
push
shr
jns
dec
mov
stos
jl
pop
or
sbb
sbb
mov
or
sbb
nop
bndldx
(bad)
stos
xchg
xor
pop
adc
cmc
push
xor
mov
cld
loop
dec
retf
cmps
shl
cli
ss
cmp
cmps
push
scas
(bad)
nop
ret
(bad)
xor
dec
dec
mov
je
xchg
jno
clc
in
mov
scas
or
or
inc
test
shl
daa
js
pop
pop
in
cwde
addr16
movs
jmp
outs
fadd
movs
stos
push
jle
jo
cdq
aas
jge
and
cwde
inc
ja
fistp
add
push
not
(bad)
daa
int
mov
sbb
pushf
fisubr
sti
(bad)
in
cmp
adc
inc
cs
xlat
and
sbb
gs
int3
mov
xchg
sub
ds
outs
fbld
(bad)
loopne
pop
mov
rol
and
stc
lods
xor
out
cwde
or
mov
dec
and
mov
jp
stc
jnp
adc
retf
ror
lea
jmp
cmp
ss
mov
jns
jle
adc
sub
pop
adc
call
and
jne
push
mov
call
mov
sbb
les
popa
sbb
mov
push
push
movs
push
jecxz
std
scas
mov
xchg
push
sbb
jecxz
xchg
ret
mov
push
inc
retf
in
fstp
cmps
int
sub
mov
dec
sbb
push
xor
add
jbe
push
stc
pop
out
jno
aaa
fisttp
jmp
(bad)
ret
pop
dec
int
outs
repnz
cld
hlt
stos
mov
pop
inc
jle
aas
es
sbb
or
(bad)
pop
std
xchg
rcr
imul
enter
imul
cli
jg
xchg
dec
bound
(bad)
rcr
cmp
add
mov
sbb
add
(bad)
pop
xor
je
fwait
inc
nop
lods
mov
in
xchg
ffree
test
nop
sbb
js
out
cld
inc
out
(bad)
movs
pop
xlat
jnp
int3
out
jmp
mov
aad
sub
pop
xchg
xchg
xor
xor
jmp
stos
inc
(bad)
dec
adc
jecxz
xor
dec
and
out
pop
add
add
fisub
(bad)
rcl
mov
retf
std
push
pushf
test
loopne
(bad)
mov
xor
cmc
xchg
ins
aam
jecxz
or
xchg
adc
inc
xor
aas
xor
loopne
sbb
sub
mov
push
add
outs
addr16
rol
test
and
vmovq
arpl
addr16
ret
in
add
jl
or
push
pop
push
loopne
iret
test
mov
mov
stos
sub
pusha
xchg
in
fxch
imul
push
int
mov
mov
push
pop
sbb
dec
push
test
fdivr
repz
push
cdq
mov
cmp
xor
cmc
push
out
fwait
rcl
popf
(bad)
jmp
or
stc
pop
rol
out
dec
fs
aaa
mov
mov
xchg
movs
std
stc
xor
jae
sub
sbb
out
je
repnz
dec
xchg
retf
sub
ret
push
js
cmps
and
mov
ret
jecxz
cmc
push
cwde
test
mov
inc
cli
cmp
loop
xchg
les
lods
mov
sbb
sbb
(bad)
and
inc
retf
jge
mov
outs
and
mov
ret
aad
adc
in
inc
push
ret
call
fdivr
inc
xchg
aas
or
in
inc
jno
in
jp
ja
cdq
sbb
jmp
div
sar
pop
inc
ins
(bad)
push
ss
movs
fst
cmc
(bad)
jl
(bad)
mov
or
jmp
sub
clc
mov
fldenv
lahf
push
cdq
scas
and
lock
mov
movs
clc
push
xor
cdq
jmp
xor
mov
aaa
dec
xchg
jg
fnstenv
fcomi
cdq
adc
arpl
or
aaa
dec
mov
push
(bad)
jmp
or
xchg
xchg
outs
jg
or
push
push
aad
sbb
iret
xchg
push
jo
sahf
mov
mov
cld
enter
sub
cmp
inc
and
imul
mov
mov
cmp
loope
jno
inc
pushf
push
lods
shl
jmp
movd
add
inc
into
std
test
dec
dec
mov
movups
gs
test
fbstp
rsqrtps
addr16
dec
and
inc
aad
out
aaa
clc
addr16
daa
cmp
push
add
sahf
sbb
ins
mov
sbb
push
sar
call
das
push
adc
add
stos
xor
sbb
pop
or
retf
icebp
and
cld
xchg
retf
xor
jbe
lods
(bad)
mov
(bad)
ror
cwde
es
rcl
jecxz
es
out
xchg
or
adc
cs
hlt
pop
je
scas
and
aas
rep
cmc
cld
sbb
mov
lds
pop
scas
add
pop
or
inc
lods
mov
mov
pop
outs
pop
and
stos
mov
ins
cmc
ss
sbb
rcr
mov
ins
pop
hlt
scas
(bad)
bnd
jnp
dec
xor
dec
ds
pop
and
jb
sub
into
adc
das
xor
pop
push
inc
(bad)
inc
jmp
retf
or
xor
mov
inc
dec
call
popf
adc
sub
fwait
xchg
stos
rcr
or
(bad)
test
loopne
or
ret
and
mov
fcom
mov
int
xchg
xor
xor
and
push
jmp
fwait
mov
pop
pop
shr
fisttp
xchg
pop
es
push
pop
test
lods
jge
and
rcl
pushf
out
pop
xchg
and
mov
enter
and
out
enter
mov
jno
xchg
stc
call
or
mov
mov
and
loope
fcom
push
mov
pop
loopne
rcr
scas
iret
icebp
shr
xor
xor
sbb
shr
push
inc
dec
test
test
jb
or
arpl
jp
frndint
mov
call
mov
add
fsubr
out
inc
dec
cdq
je
inc
es
unpckhps
xlat
(bad)
mov
or
inc
mov
push
jmp
mov
xchg
jmp
daa
sbb
addr16
sub
pop
dec
arpl
jns
mov
or
add
xor
call
test
lods
mov
outs
and
aad
outs
mov
mov
sub
add
jmp
pop
ja
inc
inc
mov
cmp
mov
movs
xchg
push
mov
cwde
popa
aad
xlat
push
loope
aaa
xchg
xor
push
cmp
sbb
add
neg
and
retf
call
cwde
adc
and
hlt
scas
call
test
push
dec
xor
movs
nop
adc
adc
pop
shl
push
popf
xor
test
call
inc
push
cmps
jmp
mov
cmp
(bad)
popa
loope
sub
scas
in
mov
or
dec
cmp
pop
jecxz
jnp
(bad)
cmp
loope
(bad)
int
adc
test
rol
inc
mov
in
pop
xchg
ins
mov
sub
xor
and
stc
ficomp
ja
rcl
adc
xor
sub
dec
retf
jmp
cld
push
pop
mov
add
pop
fdiv
fstp
(bad)
int3
mov
sbb
idiv
mov
add
rcl
push
in
fild
(bad)
cdq
cmp
mov
fs
outs
adc
jae
mov
pusha
inc
stc
shr
add
pop
sbb
cld
aad
rcl
scas
adc
mov
jnp
repz
cld
sub
cmp
js
push
and
stos
mov
imul
push
test
sbb
cmp
jo
cmp
leave
fs
sub
or
in
xchg
adc
cmc
jnp
fld
ret
cmp
jne
push
add
imul
(bad)
jns
stos
sahf
cmp
lds
scas
nop
mov
or
xor
call
xor
cli
mov
dec
cwde
loopne
xchg
ret
ss
out
fcomip
and
cs
cli
shl
aad
sub
dec
jl
cs
sbb
jo
pop
ds
add
out
pop
pop
add
add
in
fist
inc
jns
xchg
push
xchg
int
jmp
outs
dec
sbb
dec
rcr
in
fucomi
pop
(bad)
jbe
je
loope
iret
push
retf
and
ins
push
into
mov
aaa
inc
les
push
xor
sbb
pop
aad
movs
mov
xchg
cmp
mov
and
outs
imul
sbb
inc
loopne
pushf
retf
outs
cmp
jg
out
fbld
mov
add
push
inc
out
dec
stc
cmp
jnp
inc
bound
in
pushf
inc
int3
add
dec
pop
pop
add
call
mov
pop
mov
cmp
out
cmp
clc
dec
push
or
stos
push
aas
popa
lods
fs
cmp
ja
pop
stos
div
and
scas
pushf
adc
push
xor
fisub
sar
aas
and
add
dec
xlat
out
out
cmp
and
jge
shr
or
stos
mov
push
arpl
loope
into
jle
in
pop
sub
mov
cli
lods
push
repnz
mov
xor
xchg
jp
cmps
xor
jmp
(bad)
cmp
aam
xor
loop
sbb
shr
xor
pop
cmp
push
in
pop
fst
cmp
xor
sbb
repz
push
mov
mov
xchg
and
or
adc
aam
fsubr
scas
pop
mov
ja
sar
popa
into
inc
fwait
test
xchg
cli
jle
cmp
mov
sbb
and
out
(bad)
mov
(bad)
cmp
loop
sbb
push
add
outs
test
ja
inc
sub
shl
pop
push
fdiv
adc
test
dec
jo
xchg
jo
push
es
sbb
add
test
int3
mov
adc
fistp
stos
mov
cwde
mov
add
icebp
cmp
cs
mov
push
mov
mov
jo
in
cmp
cmp
sahf
ret
ins
shr
xor
sbb
xchg
stos
das
and
jge
(bad)
push
test
pop
mov
loop
pop
popf
popf
sub
rol
clc
test
nop
cwde
or
in
adc
repz
outs
mov
int3
xor
xlat
clc
addr16
les
mov
jg
bound
retf
xchg
mov
ret
(bad)
test
es
lahf
xor
fld
(bad)
cwde
cmc
test
test
outs
nop
shl
dec
aas
push
call
mov
(bad)
xchg
pop
add
iret
loop
fst
xor
dec
(bad)
test
imul
xchg
sbb
(bad)
sub
mov
mov
lahf
arpl
cdq
add
push
jb
and
and
mov
pushf
mov
xor
mov
xor
push
icebp
mov
movs
push
aas
jl
xchg
inc
cmp
push
xchg
rcr
repnz
pop
imul
fcmovnu
(bad)
cmp
push
and
sub
push
inc
jecxz
jl
and
(bad)
mov
mov
or
sahf
pop
outs
push
(bad)
jns
adc
jne
jl
bound
xor
jmp
xor
pop
push
and
jmp
mov
nop
xchg
lea
int3
idiv
imul
and
js
jbe
inc
jmp
mov
push
xchg
add
mov
add
and
jmp
mov
lds
mov
xor
inc
xor
rol
inc
xlat
pop
in
js
dec
int3
and
add
ja
sbb
mov
mov
pop
mov
enter
sbb
scas
push
dec
sbb
sub
outs
inc
arpl
ror
(bad)
out
fwait
std
cmc
cdq
jb
popf
lods
jb
or
sub
sti
mov
dec
mov
nop
add
jnp
xlat
xchg
std
aad
dec
cmp
sahf
lea
pop
into
jmp
or
or
inc
xor
xchg
rcr
test
fwait
cmc
cmps
push
cmps
int3
jbe
sbb
inc
xchg
ret
mov
data16
loop
xchg
mov
call
and
mov
mov
mov
cmp
inc
and
xchg
pop
imul
pop
xor
shl
sbb
std
movs
dec
das
mov
outs
stos
fld
sbb
aas
cwde
xor
xchg
jmp
jo
mov
mov
je
mov
(bad)
mov
or
pop
out
xchg
gs
popf
sub
cld
sub
out
fcomp
int3
mov
jmp
sbb
mov
xor
cli
cmps
or
sbb
sub
(bad)
repz
shl
das
addr16
rcl
aas
pusha
sbb
fs
xchg
test
fdiv
sub
into
out
es
adc
lahf
cmp
aas
inc
cld
out
mov
add
test
inc
cs
add
retf
xor
cmp
rcl
or
call
movs
sbb
lea
adc
sub
das
outs
fsubr
daa
clc
xlat
jns
jle
js
xchg
pop
push
(bad)
inc
loope
or
xchg
sbb
jo
retf
inc
in
movs
mov
mov
movs
lods
and
cmp
std
jo
idiv
out
jle
dec
aam
xor
in
call
adc
add
gs
icebp
in
cmps
cwde
sbb
jg
out
mov
mov
int3
repz
and
xor
fcom
das
jle
sub
mov
mov
adc
shl
iret
dec
outs
push
pop
retf
mov
aam
iret
fnstsw
xchg
dec
mov
pop
mul
fcmovnbe
das
push
fbld
mov
and
shr
push
add
cmps
in
mov
mov
mov
mov
pop
xchg
mov
cmp
mov
adc
cmp
out
add
mov
jp
dec
mov
add
or
bts
fmul
xchg
call
push
push
push
sar
adc
lods
loope
gs
cdq
add
mov
or
std
repz
loope
loope
cmp
mov
adc
cdq
or
mov
lds
jb
add
adc
push
hlt
call
mov
hlt
xchg
sahf
test
pop
(bad)
cld
xchg
adc
jge
dec
test
inc
arpl
out
les
sbb
out
mov
inc
add
sub
gs
das
push
add
out
push
test
mov
jmp
mov
dec
jl
mov
sub
stc
jle
loop
(bad)
ins
xchg
push
sbb
and
dec
cmps
(bad)
mov
mov
call
jp
in
sub
dec
les
pop
cld
xor
dec
mov
shld
fsubr
mov
imul
(bad)
xchg
mov
inc
ss
fisubr
jle
jb
js
test
adc
pop
mov
xchg
jae
adc
neg
cwde
jle
mov
cmp
dec
leave
aam
push
aas
je
ds
fs
pop
rcr
not
mov
retf
out
adc
retf
push
mov
call
lea
fs
cmp
cdq
lds
fimul
fadd
xor
test
stos
fdivr
push
rcr
mov
dec
inc
div
fwait
rcl
cmp
fimul
jg
jns
imul
movs
pop
pusha
arpl
push
inc
cli
neg
out
and
push
push
inc
pop
retf
js
sub
xlat
sub
out
test
mov
jge
mov
sub
fs
pop
enter
cmp
pop
imul
push
leave
push
mov
stc
mov
or
(bad)
int3
mov
push
mov
fsubrp
mov
fucomip
xor
cmp
and
(bad)
leave
push
out
xchg
mov
inc
dec
cmp
add
(bad)
xchg
test
dec
jl
cmp
or
jae
jmp
popa
call
xor
cwde
mov
xor
pop
mov
inc
jb
jne
inc
push
stos
popf
mov
sbb
dec
mov
retf
pop
inc
dec
fdivr
out
jnp
lea
mov
test
in
xchg
inc
mov
stos
inc
idiv
xor
out
and
inc
mov
mov
mov
pop
jmp
scas
sub
(bad)
call
jp
outs
xor
out
xchg
mov
lea
jns
inc
popf
push
sbb
mov
loop
mov
dec
sub
mov
pop
loope
and
adc
cmp
mov
sbb
sbb
sahf
sbb
cli
js
xchg
ret
push
mov
call
cld
ror
sbb
xor
cwde
pop
dec
(bad)
xor
aam
xor
out
stos
ret
vdivsd
push
cmp
sbb
mov
mov
mov
stos
sldt
rcr
daa
jmp
add
retf
jmp
jecxz
push
mov
adc
sbb
arpl
sub
jnp
dec
cli
jl
pushf
mov
cmc
cmp
sub
push
mov
sbb
scas
adc
palignr
xchg
aam
adc
mov
jl
push
mov
cmp
or
mov
cmp
cmp
jg
push
xchg
push
jl
xchg
inc
shr
and
stc
les
jg
retfw
fadd
mov
push
add
mov
jns
sub
sti
inc
stos
(bad)
ins
fisub
and
xlat
mov
pop
scas
xchg
test
sbb
adc
jb
stos
outs
push
mov
inc
movs
push
xchg
cmp
pop
(bad)
in
mov
mov
ja
push
cmp
pusha
in
aas
pop
sti
dec
sub
fsubr
add
sbb
fist
mov
not
or
fld
mov
and
xlat
jno
dec
dec
repnz
mov
loopne
add
and
push
push
adc
mov
out
arpl
push
jae
js
jl
mov
js
jmp
int
sub
cmp
or
call
mov
test
mov
enter
mov
dec
and
arpl
popf
mov
not
ret
xchg
ss
scas
xchg
data16
in
xchg
mov
xchg
addr16
adc
(bad)
out
nop
data16
fs
in
aam
lea
add
pop
push
out
out
ret
jl
test
call
sbb
scas
dec
jmp
es
lds
mov
test
sbb
pop
bound
shl
fcomp
pop
rol
pop
call
repnz
mov
mov
adc
or
inc
add
pusha
inc
repz
cmp
jno
cdq
pop
lahf
int
sub
and
jnp
fbstp
arpl
mov
xchg
out
ja
lahf
addr16
add
adc
ds
test
(bad)
js
lds
mov
mov
repz
fisub
fucom
loop
sbb
(bad)
adc
outs
or
or
int
mov
or
sbb
adc
out
mov
rcl
dec
cmps
sbb
in
loope
xor
push
retf
cmp
pop
xchg
xchg
retf
mov
pop
int3
inc
out
and
dec
sahf
repz
mov
mov
je
push
leave
std
jmp
push
adc
out
jp
xor
mov
mov
push
es
iret
inc
popa
mov
icebp
xchg
sub
push
xor
not
outs
push
shl
stos
cwde
dec
nop
ret
mov
add
xchg
and
sti
hlt
mov
scas
leave
sbb
cmps
sti
shr
call
xchg
pop
jmp
xchg
jno
call
jecxz
push
mov
into
jp
movs
mov
movs
test
leave
mov
jle
jb
outs
xchg
repz
cmp
out
movs
inc
psubsw
aad
mov
test
sub
and
fist
scas
xchg
call
vaddsubpd
ret
sub
stos
xchg
sbb
push
jmp
pop
aaa
cmp
sub
jne
jb
or
add
neg
fidivr
cmp
nop
les
dec
push
cmp
add
sbb
fsubr
cmp
rol
out
or
jle
push
mov
push
mov
mul
push
jge
and
or
pop
popa
and
bound
xor
pop
pop
push
lods
cli
mov
enter
or
mov
cwde
jecxz
pop
cmc
jmp
jle
mov
aaa
add
jbe
dec
cmps
je
mov
int3
mov
stos
jmp
cli
leave
mov
pop
std
inc
dec
sbb
sub
and
push
xor
sbb
(bad)
push
xchg
repnz
dec
fwait
and
ret
mov
jl
xchg
test
pop
vmptrld
pushf
jp
push
lods
xchg
inc
cmp
repnz
push
pop
inc
xchg
loop
cdq
mov
xor
or
cmp
jae
jne
adc
fimul
adc
fistp
shl
shl
dec
sahf
mov
mov
adc
xchg
enter
jg
mov
sub
pop
stos
fucomi
mov
and
stos
xor
xor
adc
push
or
call
fs
(bad)
sub
daa
dec
jl
mov
leave
fs
bound
(bad)
cli
sbb
pop
repz
adc
jmp
xchg
in
(bad)
pop
ins
aas
loop
fldenv
fst
jae
mov
(bad)
daa
adc
dec
leave
sbb
dec
(bad)
add
mov
cs
pop
add
xchg
mov
aad
mov
je
aas
je
pusha
mov
jle
je
mov
pop
push
pop
cmp
sub
xchg
mov
mov
jge
pop
and
jo
mov
call
ret
inc
cmc
mov
fs
jne
lahf
into
cmp
mov
rcr
fistp
add
xor
cmp
dec
and
movs
aad
inc
lea
mov
ins
or
lds
push
(bad)
ret
out
or
or
add
inc
int3
sub
ret
(bad)
jmp
pop
cmp
loopne
mov
cmc
jmp
push
enter
pop
nop
push
push
in
mov
clc
dec
les
test
test
and
ins
iret
inc
sub
pop
fs
call
mov
cld
gs
dec
add
inc
std
out
and
dec
mov
enter
or
pop
ins
stc
(bad)
mov
test
sbb
jne
pop
aam
or
aas
xchg
rol
inc
cmp
or
mov
ficom
mov
iret
addr16
scas
dec
adc
adc
mov
mov
and
fist
imul
fs
stos
and
jae
repnz
arpl
movs
int
enter
dec
push
inc
xlat
pop
push
push
pusha
or
jae
dec
jne
ret
fdiv
fadd
in
pop
inc
cld
mov
adc
xor
out
and
lock
mov
sbb
sbb
dec
and
sub
xchg
rol
jno
xchg
loopne
in
xlat
push
in
inc
adc
(bad)
int3
ret
shl
mov
sti
ret
popf
sbb
cli
cmp
push
ret
or
out
pop
js
mov
imul
popf
mov
call
cmp
adc
(bad)
sub
add
push
push
mov
mov
aam
mov
jp
pop
add
sub
inc
mov
mov
xchg
into
shr
dec
pusha
mov
arpl
mov
(bad)
es
setno
scas
cmp
adc
movs
pop
inc
mov
shl
sub
cld
inc
adc
adc
xor
mov
repnz
(bad)
push
pushf
bound
iret
out
retf
xor
lock
mov
add
popa
sbb
icebp
push
add
in
aam
sbb
mov
movs
aam
and
enter
jmp
repz
loope
in
cmps
mov
lods
adc
jb
cdq
and
push
or
adc
(bad)
dec
cmp
pop
sub
add
cli
mov
xor
dec
aam
aaa
sub
rcr
je
aad
or
cmps
ror
jno
or
jae
sar
icebp
std
sahf
xchg
ficomp
mov
pop
cld
dec
int
inc
sbb
mov
jp
fbld
pop
ins
(bad)
shl
jge
push
aad
clc
shr
and
push
and
mov
movs
mov
addr16
in
pop
inc
les
jo
cmp
loope
sub
stos
sub
(bad)
shl
push
sahf
call
xchg
dec
test
mov
enter
fimul
inc
jge
push
push
xchg
imul
enter
xchg
sub
out
cmc
retf
stc
adc
and
jb
cmp
sub
push
mov
dec
adc
xor
xor
and
fwait
cli
frstor
mov
(bad)
mov
mov
dec
add
nop
div
clc
xor
xor
and
sbb
lds
call
pop
jae
fild
mov
(bad)
and
sti
arpl
mov
xlat
ds
and
test
sti
fbld
(bad)
cld
mov
cmps
popa
aad
mov
call
jle
out
dec
(bad)
call
mov
jbe
or
inc
ins
mov
(bad)
xor
out
adc
scas
jae
mov
stc
jae
or
jp
fs
shr
push
sti
mov
mov
push
xor
pop
shr
push
push
sti
stos
cs
test
push
push
inc
sub
inc
xchg
mov
out
mov
adc
cmc
gs
jecxz
inc
sub
pop
jge
xchg
repnz
and
movs
inc
clc
dec
lea
mov
adc
std
pop
outs
nop
lods
ret
xchg
call
ds
fisub
jns
and
dec
inc
pop
(bad)
inc
jmp
leave
dec
push
sar
shl
sti
pushf
or
jecxz
or
jle
mov
dec
xor
iret
mov
or
fild
mov
(bad)
pop
(bad)
jecxz
push
in
mov
scas
pop
call
jmp
rol
or
push
jnp
ja
pop
in
subps
fiadd
mov
lahf
jge
clc
dec
iret
jge
sbb
std
adc
mov
sti
push
test
xchg
mov
push
shr
xchg
arpl
cmc
or
mov
ins
lods
test
sti
aad
jns
mov
adc
scas
pop
add
sahf
popa
dec
mov
and
and
xchg
dec
dec
and
scas
ins
xchg
sti
mov
nop
imul
inc
jno
jmp
mov
xchg
adc
adc
cli
inc
jne
or
add
mov
or
fucomi
aad
std
movs
arpl
hlt
ins
aad
or
and
xchg
jg
ins
ror
test
mov
jge
iret
dec
in
call
leave
inc
inc
pop
sub
push
out
int3
adc
mov
outs
pop
push
cmp
sub
imul
push
push
xchg
and
cmp
xchg
adc
ja
leave
push
mov
in
fadd
push
adc
ja
lods
int
jo
cmc
push
rcl
aaa
mov
sbb
and
push
fwait
mov
loop
xchg
pop
pop
mov
shl
(bad)
push
mov
dec
push
mov
push
(bad)
cdq
sub
rcl
push
(bad)
ror
mov
aaa
xor
das
pop
cs
repz
xlat
inc
stos
pop
push
data16
cwde
mov
out
push
xchg
shr
push
cmp
int3
cmp
js
sbb
jno
inc
icebp
ret
retf
aad
ins
loope
sub
mov
movs
dec
xor
fcomp
dec
mov
repnz
loop
lods
jmp
shl
outs
fsub
sbb
leave
shl
pushf
pop
pop
and
vzeroall
cli
mov
or
in
and
push
pop
cwde
adc
aas
jle
fld
pop
cmc
jl
inc
retf
pop
sbb
idiv
push
ins
inc
in
mov
retf
dec
ret
inc
jl
xchg
or
jp
sbb
cmp
outs
pop
in
adc
and
int3
add
inc
test
retf
call
aaa
fst
in
sub
shr
dec
xlat
fcomi
iret
pusha
xchg
mov
pop
out
ror
and
jg
cmps
rcr
int3
sbb
sbb
loopne
xor
jno
add
dec
jl
fs
inc
icebp
sti
repz
fnstcw
hlt
imul
jmp
push
rcl
mov
sar
neg
mov
ret
loopne
imul
fiadd
dec
cmc
arpl
cmp
cmp
(bad)
lahf
xor
cmp
jne
xor
adc
std
cmp
outs
mov
pop
aad
cwde
retf
cwde
xchg
shl
ret
sub
cmps
add
mov
pop
mov
pop
xor
adc
pop
cs
inc
das
push
cli
repnz
inc
jo
je
mov
fist
imul
or
adc
retf
cmp
rol
hlt
scas
push
xchg
iret
int3
out
aaa
inc
sub
dec
push
movs
mov
sub
std
push
inc
in
call
pop
stos
mov
scas
ins
xchg
repz
lock
ret
push
adc
jl
loope
and
cmp
jns
ss
out
mov
imul
icebp
jae
cli
lahf
mov
movs
or
test
cdq
pop
mov
cmc
pop
frstor
test
ds
(bad)
cwde
int3
nop
jo
cmp
outs
rcl
(bad)
cmp
mov
lock
mov
jmp
mov
cld
sub
dec
bswap
cmp
sbb
sbb
push
xor
data16
jecxz
and
and
(bad)
sti
int3
fld
sti
arpl
inc
sub
leave
push
pushf
bound
les
lods
xor
repnz
or
mov
sub
sbb
inc
loope
sub
icebp
add
rol
push
sbb
(bad)
adc
xchg
xchg
and
dec
xor
enter
not
sbb
jp
adc
rcr
xchg
loope
sti
xchg
stc
(bad)
add
dec
ds
out
adc
enter
or
scas
cs
je
push
jle
xor
sub
mov
stc
(bad)
pop
shl
rcr
sbb
ja
stos
sbb
popf
lea
add
inc
xchg
cmp
mov
dec
and
push
sti
lods
mov
xor
repnz
into
mov
jecxz
and
out
(bad)
call
retf
push
cmp
jb
test
(bad)
pop
scas
out
mov
into
add
sbb
mov
dec
mov
neg
xchg
scas
pop
sub
sti
in
jae
xchg
mov
repz
push
push
xchg
iret
(bad)
adc
sub
(bad)
push
je
or
dec
in
add
out
add
or
hlt
mov
push
xor
inc
jae
mov
addr16
(bad)
or
jp
mov
dec
and
fdivr
ins
clc
sub
call
jo
pop
pop
xor
push
cld
data16
cmps
dec
pop
add
cmp
jecxz
mov
jg
add
pop
mov
or
in
push
push
dec
inc
xor
jp
sbb
imul
arpl
mov
es
xchg
rol
jge
push
jmp
mov
or
dec
inc
xchg
sbb
bound
push
sub
and
(bad)
xor
std
xor
out
scas
out
and
rol
or
cmp
outs
inc
fwait
dec
sub
dec
(bad)
sub
in
mov
or
cwde
retf
stc
lock
mov
(bad)
jl
cli
out
aam
cli
mov
addr16
out
mov
cmp
and
(bad)
cld
jnp
dec
pop
rol
xchg
dec
sub
dec
sub
call
or
scas
push
inc
stc
(bad)
fcomi
inc
jge
xchg
lods
cmp
mov
inc
xchg
push
repnz
scas
jp
movs
std
inc
push
pop
dec
mov
jmp
icebp
cmc
mov
stos
test
call
cmp
in
ret
outs
loop
jae
arpl
dec
jp
bound
xchg
xchg
stos
dec
adc
xchg
cmp
(bad)
and
xor
retf
adc
popa
pop
sub
fnstenv
icebp
sahf
dec
rol
xor
push
dec
pop
scas
xchg
or
sub
mov
push
outs
fisubr
(bad)
or
xor
push
int
inc
and
pushf
push
int
shr
std
fcmove
xor
push
stos
pop
retf
push
xchg
inc
loope
stos
mov
dec
and
push
mov
pusha
push
mov
dec
dec
aaa
or
pop
jne
or
arpl
adc
adc
mov
jle
pop
jge
xchg
jg
ss
pop
cmp
mov
scas
lods
jno
retf
pop
add
mov
out
fs
fld
jnp
mov
inc
xchg
lock
gs
(bad)
(bad)
out
fprem
mov
xchg
pushf
pop
in
(bad)
adc
out
mov
test
dec
test
xor
not
rcr
dec
mov
mov
(bad)
cmc
arpl
jmp
jno
sub
push
jnp
and
sbb
pop
shr
fadd
dec
bound
mov
jo
pop
fwait
cmp
sbb
or
mov
mov
ins
popa
adc
and
jle
mov
int3
push
out
test
fimul
mov
or
mov
sar
daa
inc
mov
cmp
adc
rcl
mov
pop
leave
fdivrp
leave
(bad)
push
mov
fs
ret
rep
arpl
adc
sbb
ins
adc
sbb
dec
fadd
mov
push
jmp
xchg
xor
lahf
jae
inc
cld
add
cmp
cs
mov
iret
and
sbb
push
dec
pop
mov
out
(bad)
fmul
(bad)
int
sub
xchg
fimul
jb
jbe
xchg
or
mov
test
xor
sbb
inc
xchg
mov
pop
push
sub
in
mov
aam
call
aas
mov
and
xchg
jo
test
sub
pusha
es
mov
adc
jnp
xchg
xchg
jl
mov
inc
cmc
add
adc
xchg
push
jmp
jecxz
sub
push
xchg
shl
repz
push
outs
lods
pop
lock
pop
hlt
pushf
call
lds
bound
pop
ja
push
jns
pop
(bad)
(bad)
and
add
mov
dec
jns
mov
test
xor
mov
push
pop
sbb
cmp
div
ins
mov
pop
ret
sub
sahf
dec
sbb
jle
aad
pop
nop
idiv
cmp
pop
and
nop
rol
cmp
fmul
adc
fdivr
mov
and
fcmovb
jmp
jbe
pop
mov
ds
(bad)
(bad)
aas
(bad)
mov
sbb
jo
xor
inc
push
ja
cmp
mov
fisub
fdivr
sahf
jge
push
cli
scas
adc
push
sbb
fsubp
xchg
mov
fild
jge
sub
clc
dec
or
push
lds
mov
cmp
jecxz
call
push
daa
outs
cmps
data16
pop
std
std
lods
div
out
xor
cmps
loope
repnz
div
xchg
jle
xchg
scas
pop
stos
bound
addr16
shl
enter
cmp
add
daa
jmp
jns
cmp
push
dec
cmps
das
pop
test
adc
in
sbb
jae
or
out
add
scas
and
xor
in
(bad)
in
mov
mov
int3
mov
xor
daa
sbb
jmp
add
sbb
arpl
ret
cmp
cmp
cmp
pop
mov
and
(bad)
ss
mov
sub
inc
pop
ffreep
pop
dec
xchg
bswap
pop
fwait
fs
sub
idiv
or
mov
pop
jb
cmp
cmp
mov
lahf
daa
mov
loopne
out
mov
xchg
jg
inc
push
ret
inc
sub
sub
dec
dec
mov
je
enter
push
mov
jg
sbb
mov
aaa
mov
rcr
sbb
mov
mov
push
leave
xchg
xlat
leave
add
xor
sti
jb
retf
pushf
int
inc
xor
das
hlt
mov
jg
jl
dec
push
xchg
ins
mov
popf
adc
push
stos
fwait
mov
pushf
jns
sar
into
mov
jge
loopne
call
int
stc
mov
cmps
mov
jae
cli
aam
cmp
lds
repz
add
loopne
outs
repnz
cmp
(bad)
data16
xor
jae
pop
iret
sub
(bad)
mov
jo
fidivr
gs
pushf
adc
daa
fsubr
cmp
shl
sbb
popa
ret
inc
fdivr
pop
ins
and
xor
and
aad
faddp
je
mov
int
pusha
inc
cmc
popa
adc
repz
sub
pop
pop
es
dec
dec
jecxz
popa
push
dec
mov
pusha
push
dec
or
mov
add
call
leave
stos
out
xor
sbb
shr
pop
addr16
fisttp
adc
and
(bad)
div
bound
mov
mov
adc
dec
inc
pushf
test
jae
pop
test
loope
pop
jno
scas
aam
popf
pop
mov
push
call
xor
jb
xor
aad
mov
inc
cmp
sub
mov
stos
out
dec
(bad)
pop
or
mov
xlat
xchg
call
outs
pop
pop
sbb
sbb
stos
dec
push
sbb
cmps
xor
sbb
push
cld
or
test
push
sub
mov
mov
test
test
fadd
sbb
(bad)
adc
fcom
ins
ds
cmp
pop
jo
xor
loop
fstp
outs
aaa
sahf
push
sbb
outs
in
pop
jmp
retf
mov
rol
sub
push
push
gs
mov
leave
sbb
mov
inc
test
fcomip
js
or
das
pop
outs
pop
cmp
mov
fcmovnu
mov
jle
sbb
aas
push
sub
jmp
sbb
aad
(bad)
push
push
sub
xchg
pushf
mov
cdq
nop
jne
sub
xchg
repnz
fs
mov
add
inc
ds
mov
cmp
rcr
jnp
cmp
inc
add
lahf
mov
rcl
cmps
cdq
fwait
mov
xor
es
ret
ins
mov
push
push
pop
sbb
dec
(bad)
in
lock
rcl
inc
inc
pop
(bad)
repnz
or
repz
aad
out
and
cdq
sub
jle
push
fisubr
gs
fwait
push
sub
mov
inc
cs
mov
inc
daa
pop
pop
aam
ret
(bad)
adc
jmp
out
enter
and
daa
xor
add
out
lods
ins
lds
das
push
ins
int
cld
pop
hlt
hlt
(bad)
and
lea
lods
inc
arpl
or
fst
inc
dec
pop
pop
(bad)
mov
and
jmp
jg
int3
scas
dec
mov
cs
enter
dec
stos
sti
movs
ds
or
or
scas
push
xor
pop
xchg
cli
rol
jbe
ins
mov
sub
dec
pusha
test
loop
aad
adc
(bad)
out
jbe
dec
(bad)
int
bound
cmps
sub
and
jle
mov
sar
adc
rcr
jnp
jns
outs
fistp
cmp
in
sbb
jecxz
aas
inc
push
pop
loope
es
sbb
cmp
pop
mov
xlat
loope
mov
in
outs
adc
xchg
into
inc
mov
dec
retf
(bad)
push
or
outs
mov
mov
push
dec
push
mov
pop
mov
inc
ret
mov
adc
cmp
inc
test
rol
ins
jb
cmp
cdq
mov
scas
mov
or
xchg
mov
outs
ins
pop
xchg
add
jecxz
(bad)
retf
pusha
loop
mov
adc
mov
test
xchg
push
mov
push
inc
lahf
mov
mov
ins
mov
cmp
pushf
cmc
mov
fwait
pop
aam
mov
in
call
push
mov
out
xchg
cld
fld
sub
xor
iret
arpl
loope
das
mov
addr16
ins
xor
lea
push
xchg
es
mov
push
or
neg
sbb
(bad)
les
sbb
mov
mov
popf
test
lods
out
sbb
jle
inc
dec
and
pop
stos
and
rcl
lods
xor
jne
sub
xchg
xchg
jp
in
outs
dec
call
lods
jl
das
adc
std
test
nop
mov
push
sub
or
cdq
mov
aad
pop
mov
xor
jne
xor
and
mov
dec
repz
scas
inc
cdq
push
mov
test
je
cld
arpl
pop
test
out
scas
cld
je
cmps
movs
mov
mov
sub
xchg
adc
scas
jo
test
inc
sbb
scas
xchg
mov
(bad)
cmc
cmps
test
sbb
ss
add
mov
rol
call
lea
out
and
lock
int
inc
(bad)
mov
jns
jmp
sar
sar
or
leave
dec
sub
stos
xchg
(bad)
iret
adc
xor
xchg
aas
test
fsubr
mov
push
jp
add
out
pop
inc
mov
sbb
ret
leave
shl
jo
xchg
cwde
out
in
cmp
imul
sub
aam
xor
leave
pushf
das
sub
pusha
inc
fmul
jae
xchg
mov
sbb
retf
dec
retf
xor
ror
fwait
imul
mov
inc
aaa
ror
stos
js
sub
push
int3
jmp
imul
pop
js
imul
dec
inc
mov
aad
sub
and
ret
xor
dec
push
(bad)
stc
dec
dec
xor
call
jbe
sub
xchg
or
push
push
das
repnz
das
std
xchg
outs
lds
xchg
ret
imul
xor
xor
push
ins
ins
pop
pop
mov
sub
cmp
sub
pop
mov
(bad)
call
fistp
inc
sar
out
imul
retf
and
xor
xor
ret
xor
mov
sub
dec
lea
icebp
add
ja
dec
xchg
(bad)
fst
(bad)
lods
mov
cli
scas
pop
xor
mov
sbb
(bad)
pop
pop
or
pop
bound
cli
dec
cmp
fsub
xlat
mov
mov
or
inc
dec
mov
daa
or
sbb
outs
mov
inc
ret
je
add
or
das
cmp
fwait
lea
inc
push
dec
retf
add
mov
or
pop
inc
scas
imul
outs
outs
sar
into
and
sahf
jmp
jbe
jge
xchg
(bad)
sub
(bad)
fst
xchg
add
xor
cld
cmp
cmp
pop
jp
movs
pop
fild
rol
mov
stos
aam
in
inc
mov
inc
es
enter
jle
cmp
mov
jle
mov
adc
cmp
shl
mov
mov
xchg
ret
mov
dec
leave
mov
stc
div
popf
mov
push
mov
sbb
aas
push
xchg
inc
mov
(bad)
xchg
hlt
jbe
cmc
mov
and
jns
push
pop
or
add
dec
sti
retf
adc
ret
icebp
mov
or
push
stos
ins
push
(bad)
jp
xor
jne
cli
inc
push
stc
xchg
sti
mov
adc
or
sti
fdiv
sbb
in
xor
das
and
ins
into
cmp
and
xchg
(bad)
and
js
shr
jns
pusha
xchg
popa
dec
rcr
pop
pop
movs
jo
dec
add
pop
stc
movs
pop
daa
or
fs
inc
jmp
je
mov
and
sub
popa
and
push
and
loopne
cmp
or
mov
jl
or
neg
jo
mov
test
int
ins
outs
std
loopne
and
neg
sub
(bad)
xor
sub
cdq
into
pop
mov
cmp
out
mov
cmp
dec
and
(bad)
aaa
xchg
idiv
addr16
add
push
cmp
jns
and
fldenv
xchg
or
xchg
in
lea
mov
dec
scas
lea
xchg
push
bound
and
in
in
call
daa
xor
or
pushfw
in
scas
stc
out
cmp
sbb
test
shr
aas
mov
fadd
int3
out
cmp
cdq
dec
fist
and
cwde
push
ror
popa
xor
aaa
loop
push
lock
xchg
sbb
aad
das
aad
cmp
(bad)
aas
push
(bad)
leave
push
xor
outs
repz
mov
xchg
sub
push
mov
sahf
add
xchg
adc
loope
cmps
retf
mov
das
and
aad
stos
scas
sub
xchg
repnz
jb
pop
popa
cs
cdq
inc
loop
leave
js
cs
popa
sub
adc
mov
sbb
out
sub
leave
xor
sub
mov
mov
inc
or
and
adc
push
push
(bad)
(bad)
cmp
loop
or
pusha
xor
retf
ja
fcos
adc
bswap
shl
xor
xchg
or
adc
sbb
cmp
push
stc
pop
mov
arpl
sbb
inc
mov
mov
lods
enter
mov
xchg
mov
xor
xchg
push
test
push
sbb
out
xor
push
push
fsubr
repz
test
inc
loope
inc
ja
aas
push
mov
shl
ins
adc
dec
fdivr
fst
inc
push
dec
jns
add
cmp
push
xchg
call
in
push
fcom
sbb
sbb
xor
jb
push
push
pop
sbb
sbb
scas
pusha
(bad)
pusha
dec
paddsb
fst
(bad)
jb
or
push
sbb
or
les
cmp
push
aaa
rol
push
scas
push
add
mov
out
jg
shr
pusha
sbb
mov
cs
mov
aaa
sub
scas
pop
jg
fild
in
mov
xor
mov
xor
inc
dec
out
push
mov
imul
jp
inc
in
xor
shl
push
mov
jae
dec
ret
mov
xor
xor
cmp
loopne
mov
pop
out
inc
lods
mov
inc
pop
ins
add
ds
push
sub
or
outs
push
jns
icebp
pushf
push
mov
jno
lock
rol
inc
fdivr
int
push
pop
addr16
aad
and
dec
adc
push
pop
push
sbb
xchg
xor
push
dec
pusha
cmp
shl
jno
pusha
ret
dec
rcr
fs
lock
movs
jmp
stos
les
lods
daa
sub
xchg
enter
push
xchg
pop
dec
mov
mov
xor
int
inc
adc
and
jne
xchg
mov
cmps
hlt
mov
cld
repnz
fidivr
lods
imul
fld
adc
jb
jmp
pop
ret
or
mov
jecxz
test
push
test
and
sbb
call
iret
push
and
div
adc
push
test
cmp
pop
mov
jnp
mov
inc
test
retf
dec
add
jbe
daa
jg
pop
test
arpl
cmp
push
in
(bad)
int3
popa
mov
cwde
xchg
lea
fwait
cmp
push
repz
push
ret
pop
bnd
lahf
jmp
mov
inc
sbb
adc
dec
dec
mov
fisttp
adc
popa
mov
pop
push
lds
scas
dec
jp
pop
mov
dec
jmp
into
(bad)
movs
jmp
or
inc
push
gs
push
(bad)
lea
cmp
sti
in
loop
icebp
outs
div
push
jo
sub
(bad)
or
mov
das
pop
pop
div
cmp
mov
pop
movs
dec
(bad)
sub
ss
xor
sar
ins
test
repz
inc
fwait
lahf
jb
sbb
and
(bad)
hlt
out
and
jmp
pusha
shr
daa
inc
arpl
jmp
jns
add
inc
and
inc
xor
or
stos
adc
mov
sub
xchg
outs
jb
xchg
cli
fisubr
push
inc
(bad)
(bad)
jmp
jge
jmp
enter
jecxz
test
(bad)
sbb
mov
cmps
das
jbe
sbb
mov
jecxz
popf
cmps
mov
pop
mov
popa
call
mov
jge
je
loope
daa
shr
ret
cld
cld
push
dec
fld
jge
test
sub
sti
popa
dec
test
mov
add
inc
(bad)
and
mov
fstp
pop
fs
std
inc
fiadd
push
add
cmp
out
pop
(bad)
outs
imul
or
jbe
fisubr
jo
and
je
push
inc
push
jle
mov
fnsave
cmc
inc
adc
jge
jl
outs
fwait
xchg
push
nop
mov
jne
or
call
test
(bad)
fisubr
cmc
(bad)
lock
and
add
dec
xor
mov
inc
(bad)
lea
retf
cmp
xchg
xchg
jne
inc
(bad)
out
xor
js
in
jmp
add
test
sti
sar
pop
retf
retf
mov
sub
cmp
ror
sbb
add
xchg
jecxz
sti
dec
addr16
imul
les
rcr
add
jmp
popf
pop
mov
push
sbb
icebp
inc
inc
cmps
push
pop
in
inc
pop
mov
out
cmc
mov
add
dec
dec
neg
cwde
or
imul
jne
pop
lds
sbb
mov
imul
adc
or
or
fistp
mov
sub
ins
int
fwait
and
clc
push
xchg
jnp
cs
js
mov
xchg
shl
jo
stc
inc
in
rcl
jecxz
cmps
xor
xchg
(bad)
test
sub
dec
aas
sbb
jl
adc
xlat
pop
jecxz
xor
or
dec
sbb
add
in
jg
popf
je
mov
pop
xlat
test
outs
rcr
sub
adc
iret
and
and
sti
pop
or
mov
or
inc
sti
aam
mov
adc
hlt
and
outs
bound
(bad)
xchg
test
sbb
(bad)
enter
jecxz
retf
(bad)
pop
popa
mov
je
data16
mov
out
jg
xchg
inc
test
leave
inc
sub
cwde
pop
dec
sub
add
xor
adc
stos
aam
push
push
xor
cmps
xor
or
mov
and
mov
or
mov
leave
cmp
and
mov
stc
sub
aaa
movs
cmp
std
sub
dec
stc
adc
sahf
pushf
clc
push
xchg
sub
inc
rcr
push
add
sub
mov
push
jb
popa
cdq
mov
and
inc
mov
mov
push
and
sbb
cs
dec
loop
mov
pop
fidivr
xor
push
mov
and
nop
xor
or
or
xor
jne
mov
bound
mov
cmp
pop
iret
jp
(bad)
enter
cmp
jmp
aam
fcomp
mov
jecxz
xchg
(bad)
jns
lods
and
stc
and
mov
popf
pop
mov
pusha
adc
push
or
cmp
fdiv
aas
dec
fmul
cmp
fcmovnu
daa
ds
jmp
jp
dec
and
cmp
mov
je
popf
xchg
xchg
(bad)
xchg
mov
jmp
shl
pusha
add
std
add
test
es
cld
fwait
xor
jb
jge
push
jbe
and
in
jecxz
in
adc
xchg
adc
push
mov
inc
ret
xchg
cmp
repnz
add
imul
adc
imul
push
movs
pushf
add
call
fisub
add
xor
sbb
and
gs
out
in
jp
je
cmps
pop
adc
lahf
mov
push
mov
xchg
mov
aas
pop
scas
fstp
loopne
js
gs
(bad)
ins
xor
mov
dec
pusha
pop
pop
jge
dec
lea
scas
repz
(bad)
push
dec
sub
fcomip
inc
push
call
in
adc
popf
out
lahf
and
call
repnz
out
fiadd
js
ins
jae
adc
test
sub
(bad)
mov
popf
retf
ja
sub
mov
test
xchg
mov
push
in
pop
pop
jo
sbb
sbb
popa
or
jl
xchg
rcl
adc
xlat
sbb
cmp
fs
call
sbb
cmp
adc
inc
ss
fwait
cmp
(bad)
ins
scas
rcl
dec
push
xor
inc
mov
shl
ret
jg
pop
mov
jbe
(bad)
mov
dec
sbb
sahf
mov
fisubr
cmp
inc
and
cmc
pop
add
xchg
lods
std
pop
pop
mov
xchg
cmc
dec
pop
push
mov
cli
xor
sbb
mov
movs
rcl
pop
push
imul
gs
scas
(bad)
pushf
jle
addr16
dec
jno
push
(bad)
rcr
in
and
in
jmp
addr16
inc
mov
push
sbb
or
out
and
push
call
cmp
ss
mov
and
popa
mov
pop
xchg
adc
xchg
inc
fs
imul
scas
fmul
retf
mov
xchg
mov
adc
cmp
jnp
xchg
or
add
push
push
mov
fild
enter
sbb
jge
icebp
dec
mov
sbb
lods
jbe
cdq
out
add
mov
push
push
add
(bad)
jmp
lds
lods
push
and
pop
lahf
fcmovnb
xor
(bad)
and
mov
jmp
dec
mov
and
dec
das
stos
mov
out
xlat
jne
jmp
dec
or
inc
mov
ret
(bad)
hlt
add
popf
add
mov
xchg
mov
mov
test
(bad)
jg
dec
or
inc
enter
xlat
mov
mov
fcomp
and
rol
in
pusha
mov
pop
arpl
ffree
sub
call
iret
js
pop
cmp
inc
xchg
jg
xor
add
push
test
dec
loop
jb
jnp
push
scas
mov
test
add
inc
xchg
dec
push
add
push
mov
dec
in
dec
stc
movs
lods
bound
sub
push
adc
jo
test
aam
sub
inc
push
icebp
and
mov
sub
aad
or
mov
retf
xchg
pop
cwde
mov
loope
mov
mov
inc
fs
not
push
sub
jmp
sbb
dec
jbe
mov
sub
sub
cmp
mov
jbe
xor
fbstp
stos
hlt
test
bound
mov
jge
cmc
xchg
sub
cmp
cmc
xor
xor
cs
pop
into
jne
sbb
popf
enter
lds
out
xchg
int3
mov
das
sub
pop
fdivr
sub
adc
lock
jbe
adc
lods
(bad)
sbb
mov
mov
nop
cmp
clc
adc
adc
mov
ffreep
cwde
outs
iret
jge
mov
pop
pop
mov
ficomp
xor
cld
fs
lods
sbb
ror
xchg
adc
mov
inc
inc
pusha
xor
adc
or
aas
repz
dec
or
mov
xchg
mov
ret
cmp
fmul
enter
add
jle
xchg
pop
ret
fstp
jp
jbe
mov
xor
sbb
push
sti
fs
call
test
xchg
xchg
xchg
and
cmp
pop
cmp
inc
mov
or
push
pop
push
push
das
mov
add
mov
ins
mov
lock
int3
xlat
ror
adc
retf
sbb
rol
mov
xchg
sti
adc
ret
cmp
nop
bound
and
popa
arpl
out
lds
mov
imul
mov
cmp
or
xchg
(bad)
in
sub
push
iret
scas
cmps
pop
stos
mov
scas
addr16
stos
push
jp
arpl
cld
adc
or
mov
jb
ins
push
pop
push
xchg
mov
cmp
popa
mov
mov
ds
mov
or
pop
jl
xor
xor
push
ret
shl
inc
aam
pop
push
outs
retf
ja
aaa
add
mov
int3
or
mov
dec
jo
mov
and
inc
mov
xor
outs
inc
dec
jns
add
arpl
call
inc
pop
jecxz
sub
rol
push
cmc
add
movs
cmp
in
inc
popa
adc
jecxz
fsubr
loop
aad
xchg
fidivr
push
jmp
popf
mov
cmc
push
sub
shr
retf
add
fucomip
sbb
cmps
daa
mov
cmps
jg
mov
or
xor
dec
add
mov
jge
xchg
xlat
add
mov
clc
int3
fidiv
cmp
pushf
and
sar
fldcw
movs
cld
sbb
inc
jg
dec
mov
or
lea
in
mov
shl
mov
inc
popa
outs
(bad)
pop
into
out
test
cmp
out
dec
fs
add
jg
push
jne
jne
pop
outs
xchg
push
movs
adc
inc
rcr
add
test
mov
xor
inc
and
je
sbb
cmp
fsub
inc
lods
adc
out
arpl
addr16
popf
cld
neg
popf
arpl
(bad)
cmp
rol
sbb
jo
jmp
inc
loopne
rcr
xor
or
add
jmp
arpl
mov
loope
xchg
pop
push
mov
pop
dec
aas
es
je
fs
mov
mov
ret
add
jg
aad
outs
test
test
or
mov
fldcw
(bad)
lods
ds
jle
dec
std
pop
out
nop
hlt
in
aam
retf
jp
mov
je
mov
out
ror
cmps
adc
jnp
in
and
inc
popf
iret
fwait
cmp
inc
pop
xor
into
aaa
iret
lgs
jge
ret
dec
jae
into
loope
dec
fdiv
mov
pop
call
dec
adc
leave
cmc
fsub
adc
fs
push
dec
and
movs
ins
jg
and
addr16
pop
loope
cmp
aad
and
pop
aam
(bad)
cld
push
pop
fsubp
loop
(bad)
jns
xchg
xor
inc
xchg
xor
push
xor
adc
sub
(bad)
ffree
xchg
and
lock
jle
in
out
sahf
sbb
call
inc
push
cmp
inc
inc
push
or
or
pop
push
dec
cmps
scas
mov
push
lock
add
sbb
lds
loop
dec
movs
xchg
fs
dec
stos
or
cmp
adc
outs
dec
in
push
and
add
sahf
adc
jne
dec
imul
or
inc
or
loop
pop
fisttp
push
cmp
arpl
pop
cs
stos
sahf
push
inc
test
ret
inc
pop
pop
aam
adc
pop
cwde
cmp
jbe
pop
mov
retf
jo
mov
sets
jmp
daa
mov
sbb
ins
cmp
add
mov
lds
ror
sbb
rol
pop
cdq
add
pop
or
call
mov
mov
outs
pushf
call
lods
push
scas
sub
mov
inc
dec
xchg
inc
ja
retf
popa
and
mov
push
in
mov
jnp
call
sbb
cmp
or
daa
xchg
(bad)
mov
and
sub
pop
stos
xor
arpl
pop
dec
data16
ins
push
pushf
cmc
(bad)
(bad)
fistp
enter
pop
mov
enter
mov
loopne
jge
add
ret
mov
adc
loope
sub
jp
or
mov
mov
push
ficom
ds
add
bswap
pop
xchg
pop
push
xor
sbb
or
outs
lock
test
mov
scas
stc
in
movs
or
mov
sahf
sub
xchg
xchg
out
pop
add
mov
and
fist
je
push
mov
shl
adc
hlt
adc
mul
rol
inc
mov
fst
push
cmps
lock
mov
jmp
cmp
leave
jecxz
push
mov
sub
cwde
mov
sbb
sbb
jne
xor
sub
lods
lods
cmp
push
movs
inc
out
(bad)
repnz
jbe
imul
fisttp
and
dec
lock
push
lock
pop
xchg
es
scas
cmps
(bad)
loope
jo
xlat
cwde
mov
cdq
xchg
xor
sar
retf
or
int
sbb
mov
pop
cs
int3
test
ds
xchg
push
(bad)
sub
jo
shl
addr16
pop
in
jns
aas
adc
out
jae
adc
push
xor
mov
retf
fnstsw
cmp
fs
jb
sub
mov
mov
inc
adc
rol
xor
jg
pop
cmp
mov
pop
fnstsw
cmp
sbb
sbb
jl
aas
xlat
adc
rcr
les
test
add
jnp
push
pop
outs
mov
mov
pop
ja
out
push
out
adc
sub
fs
pop
dec
(bad)
call
push
inc
fstp
sub
or
loope
push
js
into
(bad)
cmp
sbb
(bad)
jmp
xor
xor
call
in
out
push
dec
jo
jl
shr
push
xor
push
stos
iret
push
ins
lock
cmp
sbb
or
repz
jae
sub
jg
dec
lds
minps
inc
inc
mov
movs
sub
jbe
pop
xchg
cdq
cwde
jg
inc
icebp
mul
cmp
das
cmp
aas
adc
call
cmp
test
jp
iret
sbb
sbb
mov
xor
xchg
add
(bad)
push
adc
cmp
outs
dec
push
mov
mov
mov
mov
sti
gs
adc
sbb
sub
mov
xor
sbb
xor
add
(bad)
shl
or
neg
adc
jne
adc
fsub
sub
test
inc
and
pop
test
sbb
xchg
mov
jns
cmp
fld
add
inc
or
into
adc
out
adc
sub
mov
push
pop
movs
or
stos
test
cmps
push
mov
aaa
retf
sbb
dec
lahf
(bad)
sbb
movs
stc
stc
lahf
jb
pop
add
push
loope
cs
adc
lods
add
xchg
shr
lods
or
in
cmp
cmp
out
ficomp
jns
jbe
jmp
inc
retf
inc
ins
cdq
xchg
mov
add
cwde
call
mov
les
push
movs
cmp
mov
push
xor
ds
jge
js
pop
cdq
in
loope
dec
les
fist
mov
and
sub
and
(bad)
and
(bad)
push
push
cdq
push
call
pop
push
fidivr
shl
cld
inc
inc
mov
inc
out
fdiv
daa
xchg
mov
mov
ja
lods
jmp
ins
add
jp
aas
mov
sub
ds
mov
xchg
push
cmps
jg
xchg
neg
pop
jns
jge
gs
sbb
aad
push
mov
outs
repnz
lds
icebp
xor
loop
bound
into
dec
add
sahf
cld
jb
gs
xchg
rol
stos
xchg
not
lods
mov
pop
pop
arpl
sub
scas
push
dec
sub
aam
mov
jmp
retf
les
cmp
rol
jbe
stc
fs
jo
jmp
inc
out
outs
lock
add
loope
ficom
or
jmp
std
add
or
ffreep
cmps
stos
dec
push
jmp
jo
or
ret
or
jle
aaa
outs
add
(bad)
push
cs
pop
mov
dec
push
xchg
mov
mov
xchg
loopne
movs
adc
ret
iret
in
int3
fist
sub
pop
outs
add
and
push
pop
push
sar
shr
cld
xchg
mov
clc
pop
jmp
cmps
aam
in
cmc
jle
push
sub
pop
sar
jbe
fldenv
sahf
fcom
mov
xchg
jmp
(bad)
popa
and
sahf
call
push
sub
mov
cmps
push
fneni(8087
(bad)
pushf
jne
jmp
mov
mov
xchg
or
aam
mov
jge
out
cdq
cmc
push
mov
mov
loopne
cmp
enter
mov
add
sbb
ror
and
data16
mov
mov
cld
stc
outs
or
mov
inc
dec
daa
inc
jne
jl
call
and
test
dec
mov
imul
(bad)
mov
movs
push
sbb
test
cmc
lods
ret
jg
pop
mov
push
pop
mov
(bad)
imul
out
mov
in
inc
cmovnp
mov
or
xchg
dec
xchg
xchg
fcomp
icebp
movs
sar
mov
jae
pop
shr
jg
mov
pop
dec
push
ret
xchg
sbb
add
cmp
adc
mov
pusha
pop
cmp
fcmovnbe
and
jo
sti
nop
jnp
les
xor
shr
xchg
sub
les
pusha
mov
sbb
mov
je
jnp
call
and
pushf
push
xchg
scas
inc
inc
iret
call
test
mov
sub
add
inc
push
pop
call
pop
xor
jbe
(bad)
jmp
and
popa
lahf
ds
mov
pop
loopne
ds
xchg
add
mov
and
add
adc
mov
xchg
sbb
test
(bad)
mov
push
scas
jl
stc
jns
stos
test
or
adc
lds
add
ror
lahf
les
xchg
cli
jecxz
jge
fwait
xor
outs
pop
jo
push
cdq
sub
cwde
enter
iret
xor
add
or
jb
lds
pop
jge
call
rcl
adc
gs
(bad)
fadd
or
js
inc
jo
push
or
ret
and
adc
jge
stos
sbb
ror
dec
aam
pop
(bad)
(bad)
and
ins
or
int
(bad)
cwde
repnz
out
lahf
iret
ret
mov
jl
out
push
jno
out
or
imul
dec
lods
pop
call
jns
adc
inc
push
aas
mov
inc
dec
jne
out
pop
pusha
stc
jne
iret
cdq
and
sub
jmp
aaa
xchg
cmp
(bad)
xor
mov
and
fist
out
or
repnz
test
int3
scas
push
fwait
xchg
mov
scas
mov
sub
mov
push
push
mov
cmp
fsub
mov
out
inc
mov
cmp
pop
jmp
test
and
cli
push
mov
add
jmp
inc
sahf
xchg
ret
cmp
movs
icebp
add
enter
call
es
sti
dec
jno
dec
mov
retf
les
mov
sub
pop
xchg
sub
xchg
test
or
pop
mov
cld
jae
(bad)
call
xchg
ins
popa
adc
pop
jmp
xchg
aam
sub
mov
and
dec
mov
adc
mov
(bad)
aaa
adc
pop
push
popf
add
inc
retf
jne
dec
sub
cmp
inc
sahf
push
push
ret
jge
pop
lahf
icebp
lahf
add
gs
push
cli
aas
xchg
in
mov
test
rcl
retf
jmp
leave
hlt
out
pop
dec
lds
movs
jl
jle
sub
or
cmp
xor
idiv
sub
das
lahf
bound
inc
and
xor
(bad)
pop
in
mov
mov
push
sahf
push
icebp
dec
mov
or
ror
out
fbld
adc
push
or
or
test
out
jne
inc
fistp
cs
add
or
lods
test
jmp
sub
cdq
int
mov
ss
mov
pop
sub
out
pop
repz
adc
mov
fsub
fwait
ror
mov
jl
adc
pushf
push
addr16
jno
ror
xchg
movs
dec
xor
ror
(bad)
dec
in
cld
in
sub
xchg
enter
xor
loop
movs
dec
inc
add
push
or
jecxz
adc
cmp
pop
mov
fidiv
mov
out
ins
sub
std
add
jmp
mov
in
or
(bad)
sbb
jp
add
dec
mov
dec
inc
add
gs
out
adc
fdivr
mov
data16
xor
push
inc
in
fs
stos
sub
lea
shl
scas
xor
pop
jnp
or
jecxz
xchg
sti
add
loop
sub
dec
dec
fcomi
lods
fisttp
inc
fnstenv
in
add
and
popf
add
loope
dec
hlt
cmp
popa
cmp
fimul
jae
mov
das
in
cmp
mov
repz
movs
jno
or
jo
xchg
cmc
(bad)
xchg
ror
repz
shl
adc
out
xlat
mov
out
dec
jmp
dec
push
ret
scas
icebp
adc
jmp
cmp
dec
data16
adc
mov
sub
xchg
xor
test
das
inc
in
out
daa
mov
(bad)
xchg
or
xchg
imul
push
mov
mov
xor
loop
adc
mov
lea
test
push
dec
and
cmp
(bad)
push
test
inc
fwait
jmp
mov
mov
pop
aam
mov
xchg
test
pop
mov
test
out
pop
cmp
sbb
sbb
iret
rol
aaa
push
push
or
mov
imul
call
mov
jge
xor
loopne
sbb
mov
xchg
inc
cmp
shr
out
cld
cmp
lds
ss
pusha
dec
idiv
out
push
push
push
popf
cmp
popa
cdq
xchg
int
movs
ins
and
xor
xor
and
inc
xchg
dec
inc
ins
xchg
adc
sar
mov
xchg
xor
movs
dec
loopne
jge
rol
gs
pop
xor
mov
sub
adc
pop
cmc
pop
retf
in
pop
push
jb
add
stc
(bad)
jnp
fiadd
neg
(bad)
push
jbe
dec
(bad)
ins
enter
sahf
test
fwait
outs
iret
mov
and
or
sbb
dec
out
jbe
sub
mov
or
out
mov
(bad)
adc
push
movs
mov
in
(bad)
movs
mov
mov
jo
add
dec
lock
dec
inc
xor
inc
pushf
fisubr
or
mov
je
imul
imul
sar
cmps
xor
jne
mov
bound
sub
and
jp
cmp
pop
stos
mov
mov
pop
xor
(bad)
imul
mov
aas
out
xchg
cmps
jae
imul
int
lods
loop
stc
dec
ret
cwde
mov
inc
sbb
cmps
jmp
xchg
jg
xchg
mov
int3
dec
ins
fisub
xor
cmc
js
pop
mov
(bad)
repz
stos
retf
gs
push
cmp
fdivr
sub
hlt
jns
not
mov
pop
adc
xchg
(bad)
ins
fcom
shr
cs
cmp
into
pop
ret
lods
int
adc
mov
mov
sub
jmp
aaa
push
into
xchg
call
add
lock
push
popa
pop
fs
dec
push
jns
scas
test
cld
mov
movs
mov
sbb
(bad)
ins
mov
inc
cmp
sbb
iret
(bad)
jmp
(bad)
adc
ds
lds
fidivr
rcr
inc
int
jecxz
pop
fucomi
xchg
cs
sbb
push
stos
aam
iret
loopne
outs
movs
lahf
pushf
jmp
jmp
lds
push
repnz
inc
dec
sub
dec
sub
sbb
mov
icebp
int
jl
and
sub
cmp
je
cmp
iret
clc
pop
stc
sub
mov
cmps
xchg
outs
push
cli
faddp
popa
add
push
repnz
dec
xor
js
jge
jmp
repnz
mov
add
mov
or
mov
aad
xor
rcl
outs
dec
pop
cmps
frstor
mov
sbb
push
inc
cmp
les
sbb
adc
fnstenv
cmp
loopne
sahf
mov
inc
sbb
jmp
jo
xchg
jmpw
add
retf
sub
jle
mov
arpl
pop
jnp
mov
and
jns
cmp
std
xor
in
push
mov
xchg
jo
dec
sbb
xlat
xchg
gs
or
and
ret
or
jmp
leave
in
loop
sub
inc
mov
ins
daa
jno
pop
mov
bound
xor
movs
outs
dec
test
push
cwde
lds
int3
mov
fimul
mov
test
call
ja
jnp
stc
sbb
mov
sahf
adc
and
iret
in
jnp
outs
pushf
jae
mov
aaa
sub
add
mov
pop
ror
(bad)
ror
daa
js
fisubr
mov
cmp
fwait
mov
sbb
sbb
push
fsub
xchg
call
lock
call
lods
ret
push
lds
popf
mov
popf
xor
push
push
pop
adc
cmp
jnp
mov
jae
stos
or
add
in
xchg
test
sbb
jmp
dec
daa
(bad)
jl
mov
xor
call
push
sub
stc
add
sub
int3
jmp
daa
xor
add
xor
test
fs
aas
ficom
jae
jbe
test
movs
sub
retf
sub
xchg
or
fild
push
aaa
jmp
mov
dec
test
shl
add
je
loopne
aaa
fidiv
leave
and
dec
push
cld
and
sbb
cs
sahf
mov
push
and
push
test
add
mov
sbb
sub
aas
jb
jb
movs
mov
sbb
add
repz
cmps
push
fisttp
cld
test
xchg
enter
push
push
mul
xor
mov
dec
xchg
sub
fild
stos
jns
idiv
push
sub
test
je
inc
xchg
push
xchg
mov
data16
or
xor
mov
repnz
cmp
rcr
fs
leave
test
mov
loop
imul
out
cmps
ficom
nop
ret
sbb
scas
popa
in
dec
gs
scas
xor
jbe
and
jns
pushf
push
int3
out
jl
xchg
push
scas
popf
xchg
push
push
pusha
mov
mov
inc
addr16
push
pop
mov
daa
in
mov
add
imul
jmp
dec
mov
je
push
pop
pop
and
xlat
cmps
shr
pusha
cmp
mov
(bad)
mov
mov
inc
js
cld
mov
push
aam
test
call
nop
pop
ja
repnz
fcmovne
daa
cmp
jbe
es
dec
mov
ret
mov
pop
jb
aam
or
jg
lods
pop
bound
push
xchg
enter
pop
mov
gs
lock
xor
mov
test
in
into
fwait
jne
xchg
out
stc
(bad)
loope
call
and
cwde
add
and
mov
xchg
jnp
sar
xchg
sub
loopne
(bad)
lods
jmp
mov
call
mov
sbb
fcomip
icebp
mov
ret
pop
xor
dec
add
mov
aaa
outs
adc
push
cli
pop
test
in
and
push
dec
cdq
ror
adc
iret
nop
sar
imul
(bad)
mov
repnz
adc
(bad)
push
inc
imul
push
inc
bound
xchg
or
aaa
fimul
adc
gs
bswap
fist
adc
mov
xor
jmp
xchg
dec
sbb
in
js
push
daa
outs
pop
jg
xchg
jne
stos
enter
xchg
pushf
pop
(bad)
xchg
leave
push
add
rcr
and
retf
add
(bad)
pop
mov
ss
ret
fstp
enter
jmp
dec
ins
xor
push
(bad)
int3
xchg
xchg
pop
scas
popf
adc
stos
fnstsw
mov
and
sub
(bad)
add
gs
xor
and
nop
dec
mov
aad
adc
xchg
jb
sub
push
fisttp
lea
cmp
(bad)
pop
mov
out
daa
hlt
xlat
fisub
jmp
cmc
inc
lds
(bad)
mov
or
mov
xchg
aas
mov
pop
out
push
mov
jmp
stos
inc
ins
popa
cli
mov
popa
mov
xchg
test
cmc
xor
xor
mov
test
add
xor
test
adc
test
add
(bad)
push
jbe
test
lds
fidivr
push
loope
add
mov
test
sar
push
dec
stc
(bad)
ss
in
adc
adc
imul
aad
(bad)
loop
cmp
cwde
fidiv
xchg
sub
fldenv
xchg
stos
call
xor
mov
mov
pop
int3
loop
sysret
xchg
fimul
add
sub
loop
mov
mov
bound
pusha
and
adc
push
hlt
pop
inc
cmp
aam
out
sbb
out
dec
mov
jmp
mov
jb
cmps
test
lods
test
jae
dec
data16
or
ror
outs
adc
es
dec
cwde
add
and
jecxz
mov
dec
hlt
pop
mov
cli
ror
cmps
fwait
call
test
int3
jbe
mov
mov
xchg
inc
mov
das
stos
pop
mov
mov
test
out
iret
scas
sub
jbe
dec
adc
jae
push
fs
jae
dec
lea
adc
push
inc
xchg
std
out
and
pop
and
popf
dec
je
cli
and
jb
aaa
push
fisubr
les
ins
pop
daa
jnp
sbb
vandps
push
jne
mov
jne
push
test
xchg
push
push
fistp
cdq
lea
shl
push
call
ds
data16
cmp
inc
push
popf
jno
sbb
inc
push
jg
xchg
mov
cmp
(bad)
sub
mov
aaa
jb
dec
int
retf
mov
call
add
int
add
call
shr
and
sti
inc
addr16
fs
push
sbb
enter
push
push
ja
fs
js
push
dec
stos
sub
lock
jl
test
inc
xor
push
xchg
jge
iret
ja
inc
or
pusha
cdq
cmp
dec
xlat
fisub
rol
and
dec
in
pop
popa
into
cdq
pop
in
rcl
int
test
movs
mov
jle
inc
and
test
mov
adc
add
mov
bound
add
and
stos
clc
bound
popf
push
sbb
mov
fs
adc
nop
neg
rcl
mov
rol
addr16
xor
dec
inc
and
lods
sar
sbb
out
jno
sbb
ficomp
loop
adc
repz
and
fadd
inc
cwd
lods
aaa
sub
push
sub
ffreep
mov
adc
outs
pop
test
es
fimul
les
cmp
push
lock
in
dec
push
jo
cmovle
movzx
or
push
xor
adc
daa
and
pop
adc
jno
sbb
push
xchg
mov
inc
pop
ins
shl
add
cmp
sub
xchg
mov
clc
out
and
aad
into
sub
rcr
xor
rcr
mov
dec
ins
mov
jmp
sbb
jae
fidiv
fidivr
mov
mov
jb
cmp
rol
outs
sub
pop
inc
jo
sar
or
and
call
stc
mov
jns
rcr
les
xchg
mov
imul
test
xor
mov
outs
div
mov
jcxz
aas
jns
push
jmp
sahf
in
mov
nop
and
lea
rol
call
lock
lods
stc
jmp
icebp
stos
mov
inc
sbb
xor
mov
aam
sub
call
sbb
cmc
cmp
push
mov
mov
hlt
ficomp
pushf
les
pop
xchg
retf
pushf
cmp
mov
jo
sbb
xchg
mov
jmp
jmp
dec
aas
data16
mul
mov
sbb
mov
das
cld
push
(bad)
inc
mov
mov
sub
lods
push
push
out
pop
mov
mov
mov
mov
out
loop
inc
mov
ins
ret
sub
sahf
pop
sub
stc
cmp
sub
mov
xchg
mov
xchg
arpl
or
mov
push
pop
push
mov
xor
xor
mov
icebp
pop
lods
and
int3
dec
adc
push
(bad)
fsub
add
cmps
jne
cmp
bound
or
push
xchg
call
outs
fadd
movs
xchg
aaa
adc
mov
clc
js
mov
pop
xchg
pop
mov
fdiv
les
ret
outs
movs
adc
xor
stc
xchg
and
hlt
mov
ret
shl
inc
retf
dec
or
fild
mov
jne
hlt
jne
push
inc
push
retf
hlt
das
aaa
dec
jns
mov
imul
nop
stos
jg
and
cmp
outs
lahf
jne
clc
data16
sti
sub
outs
cmps
cwde
sub
push
cmp
imul
test
shl
sbb
mov
nop
shl
out
mov
mov
adc
aaa
mov
ss
sbb
xchg
idiv
pop
cmp
pushf
lahf
shr
cmp
inc
jae
in
xchg
sbb
mov
fdiv
push
and
push
pop
and
lds
not
xchg
cmps
jnp
add
xor
sbb
ror
repz
lea
ins
add
mov
push
aad
retf
xor
pop
pop
(bad)
mov
xor
cmps
cmc
and
ins
std
cmp
movs
lea
je
push
add
out
xchg
add
shr
scas
push
mov
gs
lods
jge
sub
inc
pop
pop
dec
fmul
pop
stos
jns
fstp
out
(bad)
hlt
mov
das
lock
leave
sti
pop
mov
out
js
xchg
cmp
jge
cmp
mov
jecxz
jmp
xor
sub
mov
call
pusha
mov
push
mov
icebp
gs
mov
push
bound
xor
les
clc
mov
pop
stos
fbld
push
popf
not
inc
imul
push
outs
and
popa
outs
inc
dec
mov
pop
shl
sbb
add
popa
cmp
cmp
ror
daa
lods
shl
push
dec
stc
fsub
jo
or
repz
xor
js
pop
pop
rcl
add
sub
push
in
out
or
les
retf
sub
leave
or
jp
lahf
jns
push
push
cmps
in
jmp
gs
movs
test
jbe
outs
rcl
mov
loop
in
jle
or
out
xchg
cmc
daa
retf
and
push
movs
push
rcr
sbb
outs
dec
or
cmc
cld
or
inc
dec
mov
inc
cmp
adc
sub
jns
call
pusha
aas
add
shr
sbb
adc
dec
pop
les
push
adc
out
test
adc
rol
outs
sub
adc
lahf
pop
retf
xchg
pusha
je
dec
pop
push
xchg
or
aam
fdivr
icebp
fisubr
stc
(bad)
mov
push
sahf
rol
movs
jnp
inc
sub
mov
rcl
gs
sahf
sub
movs
in
adc
sub
push
sbb
jno
xchg
pop
addr16
repz
adc
imul
ror
cld
imul
shl
dec
js
xchg
push
cwde
loopne
mov
pop
jge
fstp
jmp
mov
jnp
repnz
jmp
pop
mov
pushf
xchg
test
sub
push
add
xchg
fisubr
(bad)
stos
sar
addr16
fst
inc
fs
fadd
neg
pop
(bad)
pop
lock
fisub
cmp
daa
and
mov
enter
pop
arpl
mov
xchg
xchg
xor
in
pushf
xlat
loopne
adc
and
xchg
sub
jg
cli
xchg
repz
dec
jg
mov
dec
ins
stos
fcmovnbe
test
push
popa
or
mov
jne
xor
das
jo
outs
jp
cmp
xchg
and
dec
mov
jl
inc
and
mov
rcl
(bad)
pop
je
lahf
adc
je
arpl
fdivr
adc
lea
dec
xchg
mov
sbb
sub
and
xor
xor
mov
inc
jo
jnp
mov
ror
scas
sbb
adc
std
pop
repz
dec
cmps
mov
call
sub
fnstcw
pop
dec
(bad)
pop
ss
jl
pop
dec
je
rcr
shr
cmp
loop
xor
clc
jl
sbb
jle
dec
loope
(bad)
mov
cmp
push
ror
clc
inc
jle
mov
mov
cmc
mov
js
pop
dec
mov
ds
cmp
aas
adc
and
inc
mov
ret
mov
xor
pop
leave
bnd
sbb
loopne
ror
iret
jae
pop
sbb
pop
push
sub
in
sbb
jp
mov
pop
pop
mov
rcl
shl
mov
out
dec
rcr
pop
mov
rol
es
jb
cmp
mov
movs
test
je
stos
int
mov
push
repz
sub
pop
dec
int3
and
jb
mov
push
xchg
test
mov
in
jl
pop
dec
and
aam
scas
dec
pop
jmp
sahf
xchg
mov
inc
xor
les
ret
inc
dec
jnp
pop
jmp
inc
js
gs
sub
jo
mov
jle
fs
aam
cli
pusha
and
or
fild
sub
hlt
nop
sub
sbb
cdq
into
sbb
cmp
push
outs
push
and
add
jl
fst
enter
mov
loop
inc
or
mov
mov
xchg
inc
inc
push
jae
test
add
fwait
jne
faddp
sbb
jecxz
pop
movs
sub
sub
in
test
repz
sbb
push
ja
inc
jge
and
dec
dec
push
inc
ins
dec
mov
cmps
sub
jecxz
call
ja
jl
add
sti
sti
ficom
mov
dec
jmp
and
repnz
mov
pop
xor
(bad)
mov
loopne
aas
sahf
nop
jo
test
lods
or
xchg
cmps
jp
jmp
jmp
in
push
and
cdq
and
sbb
das
fistp
out
scas
addr16
(bad)
push
cmps
fadd
xlat
add
in
sbb
jmp
iret
sub
enter
inc
add
pop
jl
test
mov
pop
inc
xchg
sti
cmps
cwde
ins
cmc
stos
cld
ins
ret
sub
push
xor
jmp
movs
push
and
or
das
shr
shl
cwde
rcl
loop
ds
pushf
loop
inc
xchg
test
sahf
cmp
cmp
mov
arpl
add
mov
outs
fwait
and
sahf
push
xor
lock
jl
sti
popf
sbb
dec
(bad)
out
ss
dec
(bad)
es
movs
add
cmp
dec
popa
imul
jmp
inc
inc
pushf
pop
xlat
outs
jns
shr
sub
clc
in
push
sar
ja
or
leave
push
inc
sbb
(bad)
add
adc
in
pop
mov
popf
(bad)
or
inc
mov
cmp
in
out
ret
push
pop
mov
push
xor
jg
jne
popa
aam
sub
mov
xchg
gs
scas
out
sub
lods
test
cmp
cmps
adc
mov
mov
mov
sbb
mov
xchg
imul
aaa
cs
je
mov
adc
adc
or
das
xchg
xchg
sbb
mov
cmp
sti
adc
cmp
mov
retf
xchg
inc
dec
xchg
mov
xchg
mov
sub
push
(bad)
push
icebp
loop
sbb
fcomip
scas
jns
sub
xchg
ja
jge
cmp
inc
adc
out
pcmpeqd
mov
cdq
sbb
cmp
cld
jbe
adc
in
push
dec
add
sub
iret
hlt
rcl
int
les
(bad)
fidiv
ins
cmp
adc
dec
jp
jno
scas
add
outs
sti
cmps
jns
jne
rcr
inc
pop
scas
dec
movs
cmp
jne
mov
imul
jge
adc
cmp
in
scas
sti
add
sbb
mov
push
repz
pop
cmc
cmp
(bad)
pop
mov
hlt
adc
aad
je
outs
xchg
pop
int3
mov
pop
jmp
adc
or
adc
and
jl
popa
sub
mov
mov
or
(bad)
pop
jg
xchg
arpl
hlt
mov
loopne
sbb
xor
rcr
and
xchg
call
adc
dec
push
mov
mov
dec
and
sbb
outs
retf
adc
imul
pop
or
mov
fwait
pminsw
lea
fiadd
call
(bad)
shl
pop
dec
neg
sahf
inc
test
dec
sub
outs
fnstenv
add
addr16
or
into
xor
sar
outs
push
mov
outs
ss
iret
push
mov
repz
mov
mov
(bad)
xchg
sub
cwde
ds
pop
retf
jg
loope
fdiv
out
xor
rcl
or
pop
outs
mov
pushf
mov
aaa
add
sbb
in
add
jb
test
stos
push
or
call
xchg
push
(bad)
cmc
std
rol
shl
shl
mov
ss
jno
fisubr
fisttp
sub
jnp
jae
bound
enter
push
or
dec
cld
lahf
(bad)
dec
js
push
sbb
mov
mov
fwait
adc
stc
mov
scas
mov
add
or
mov
sar
scas
jnp
call
or
outs
(bad)
rcr
lods
mov
ret
je
mov
pop
sbb
sub
xor
mov
fnstcw
pop
jns
pop
push
cld
and
mov
cmps
int3
outs
not
dec
xor
adc
shl
enter
into
cdq
out
mov
es
in
sub
jg
jl
shl
mov
xor
pop
inc
jbe
jmp
in
pop
or
and
xchg
out
xor
lahf
cs
mov
push
push
aad
daa
(bad)
xchg
and
xor
ret
mov
mov
xor
rcl
cdq
inc
movs
or
les
or
scas
jb
jb
sbb
movs
add
leave
cmp
cmp
pop
sbb
stos
out
push
jnp
push
outs
push
es
mov
ins
das
lock
sub
xor
cs
ins
adc
out
mov
pop
int3
test
lahf
or
rcr
adc
ror
lahf
adc
cmps
xor
pop
adc
sub
mov
lods
lds
leave
(bad)
popf
int
push
inc
(bad)
jo
cwde
push
push
das
pop
dec
mov
adc
cli
bound
mov
or
lods
cmp
popf
aad
(bad)
xchg
jno
mov
mov
xchg
push
sbb
pop
aaa
jno
pop
rcr
mov
ds
or
int
js
out
pop
test
dec
xor
gs
scas
iret
xchg
jp
or
pop
adc
push
jle
shr
test
and
stos
inc
in
ret
and
sar
bound
test
mov
loopne
ja
rcr
pop
movs
icebp
shl
ins
fdivr
add
popa
inc
call
jecxz
xchg
push
pop
cld
xchg
inc
stc
jecxz
xor
(bad)
jmp
shl
xor
(bad)
adc
jnp
xor
xchg
jg
inc
pop
adc
test
and
hlt
add
sbb
(bad)
arpl
mov
and
sub
sahf
jb
inc
dec
imul
dec
jg
mov
xchg
lea
inc
mov
int
cmps
lahf
lea
pop
mov
icebp
addr16
push
cld
mov
in
bnd
add
dec
ins
adc
sahf
and
pop
dec
add
sbb
mov
out
adc
xor
xor
adc
test
adc
fwait
addr16
sar
push
mov
mov
movzx
dec
jne
xor
xchg
es
and
(bad)
mov
fwait
push
inc
lahf
cli
inc
jl
out
shl
mov
popf
rol
in
add
ret
hlt
mov
shl
mov
mov
xchg
scas
out
aas
shr
mov
icebp
xor
fstp
cmp
out
leave
or
or
push
jbe
mov
movs
ins
aad
push
cmc
repnz
jbe
inc
icebp
jno
jge
das
sub
outs
(bad)
dec
dec
jge
adc
(bad)
(bad)
mov
cmps
dec
into
jne
rol
shl
cs
fadd
xor
rol
idiv
dec
push
and
jge
pop
pop
sbb
and
xchg
push
(bad)
jmp
sahf
pop
aas
mov
mov
icebp
ret
xchg
imul
aam
imul
jecxz
sub
add
xchg
jb
scas
jae
cmp
jb
mov
cmps
scas
leave
shl
imul
aas
xor
loopne
mov
je
jl
or
push
sub
push
cli
adc
add
ret
inc
jmp
and
cmp
add
repz
imul
xchg
dec
repz
mov
cmc
xor
sbb
outs
pop
mov
cmp
mov
scas
out
pop
ins
sbb
adc
fwait
(bad)
xchg
push
in
xchg
mov
inc
mov
ror
inc
es
sbb
mov
repz
jae
movs
mov
cmp
fild
mov
cmp
sub
sbb
and
sub
add
sti
fwait
(bad)
fdivr
mov
fadd
addr16
sub
and
in
fiadd
xchg
(bad)
je
sub
arpl
jnp
sahf
scas
mov
rcr
jl
xchg
mov
test
jo
sbb
clc
mov
movs
call
cwde
in
sub
mov
add
xlat
scas
dec
and
mov
mov
popa
test
pop
xchg
iret
mov
push
push
xchg
jmp
dec
add
ins
pop
push
sub
sbb
push
ret
xchg
or
test
inc
jbe
popa
inc
sub
jne
mov
cmp
add
add
fwait
ds
mov
sub
and
outs
jecxz
lea
movs
popa
aam
stos
add
xchg
test
push
cmp
mov
sbb
pop
xchg
mov
sub
adc
xor
mov
xor
mov
rol
pop
fdiv
and
bound
cmps
mov
call
jns
jne
jo
mov
inc
or
dec
sar
test
ret
daa
dec
sar
add
retf
xchg
(bad)
jmp
cdq
movs
test
clc
mov
xchg
add
jg
adc
mov
test
pusha
mov
and
push
or
and
dec
mov
or
sbb
(bad)
fs
jnp
push
jbe
or
call
adc
xchg
cmp
push
mov
xor
jl
or
push
cmps
dec
cmp
retf
push
imul
sti
addr16
outs
or
repnz
stos
fsubr
cdq
cmp
in
mov
dec
sbb
and
sub
adc
aaa
sub
ss
adc
sahf
stos
fyl2x
add
jmp
xlat
xchg
jmp
fs
in
not
sbb
jmp
test
inc
jl
aad
mov
clc
je
mov
mov
call
dec
ss
mov
cmp
cmps
inc
pusha
mov
dec
mov
in
cmps
fcmovnb
shr
jecxz
fidivr
(bad)
cmp
mov
push
out
or
add
add
jns
and
fisubr
out
test
sbb
sbb
je
fdiv
jns
(bad)
jge
and
add
test
mov
fs
adc
call
sahf
or
cdq
mov
xchg
inc
fwait
push
test
fsub
(bad)
mov
and
mov
out
push
mov
inc
sbb
mov
neg
xchg
pop
das
add
mov
adc
retf
xchg
(bad)
out
test
fcmovne
outs
jo
xchg
jecxz
add
(bad)
cmp
pushf
movs
popa
popa
cmp
mov
push
inc
xchg
test
ffree
test
sar
mov
dec
aas
or
daa
cld
mov
or
aad
mov
in
or
aaa
stos
(bad)
mov
or
mov
imul
cmp
fucomi
mov
cmps
jecxz
push
frstor
in
jge
int3
inc
mov
dec
arpl
dec
iret
fnsave
add
sti
dec
ds
(bad)
int3
inc
cmp
cli
push
sbb
sbb
dec
push
and
sub
jae
sbb
dec
cmp
int
push
loop
adc
xor
aas
neg
inc
scas
fs
push
mov
jns
mov
sub
loop
ins
mov
mov
or
and
mov
xor
sub
cmp
stos
out
(bad)
add
cmp
cmp
jg
mov
adc
stc
cld
sub
sub
mov
dec
push
ins
(bad)
sbb
push
mov
inc
pop
sub
and
or
outs
fadd
push
inc
xor
xlat
ins
pop
aam
arpl
mov
pop
mov
pop
xor
test
addr16
or
jmp
jo
mov
stc
nop
retf
out
adc
lods
mov
jge
ins
out
add
jns
nop
cmps
inc
dec
xchg
push
push
push
push
stc
into
je
mov
leave
int
sbb
and
cmp
lock
rcl
jmp
mov
push
inc
xor
push
cs
cmc
xlat
mov
popa
mov
sub
aam
jb
int
adc
and
lock
fsubrp
push
arpl
in
mov
fwait
mov
mov
cmp
stc
cmp
cmp
out
test
pop
jp
repz
(bad)
(bad)
stos
loopne
mov
dec
mov
call
pop
jge
mov
xor
int
jmp
jecxz
adc
in
lods
cld
cli
dec
push
pop
stc
sbb
pop
pop
cmp
dec
cli
dec
out
push
aam
xchg
call
lea
aad
push
xchg
xor
retf
arpl
pop
mov
(bad)
bound
mov
mov
mov
pop
pushf
sahf
cmp
popa
pop
ss
loop
xchg
push
push
call
add
pushf
mov
mov
jae
bound
sbb
std
add
popf
cmp
call
jecxz
sar
push
std
arpl
jbe
or
test
add
lock
push
pop
xchg
ret
xchg
xor
or
sbb
scas
dec
pop
ins
in
rcr
mov
ffreep
lds
push
mov
shr
xor
or
out
dec
rol
sti
adc
and
pop
icebp
mov
sub
dec
xchg
mul
mov
call
add
out
dec
jmp
lods
cli
rcr
test
mov
fist
and
push
cmp
repz
cli
mov
push
mov
imul
sub
mov
pop
or
movs
lock
jo
sub
nop
xor
push
iret
call
sbb
and
pop
je
aaa
mov
shl
push
add
lds
pop
cmp
fsub
mov
mov
in
mov
ret
mov
arpl
or
jge
push
neg
ja
dec
pop
bndldx
cmps
stos
int
sub
rcr
mov
sbb
add
cmp
push
movs
sub
retf
mov
pop
adc
les
mov
add
ins
out
jle
inc
popf
lds
xor
enter
test
cmp
data16
mov
rol
adc
dec
jmp
xchg
fisttp
pop
and
(bad)
dec
dec
adc
rcr
and
int3
xor
out
jg
ss
lahf
dec
inc
pop
mov
xor
pop
jg
rcr
loopne
out
cmp
call
and
iret
popf
push
icebp
sti
push
jnp
cli
xor
mov
xor
retf
test
xor
sbb
push
mov
mov
ja
cmp
push
adc
mov
xor
aam
mov
aam
mov
inc
ins
add
xchg
aaa
out
clc
cmps
sbb
pop
fcom
cs
out
xchg
sti
lock
sbb
mov
jnp
bswap
test
lods
mov
imul
xor
scas
add
cmc
lds
push
mov
mov
nop
fistp
ja
jo
in
aam
xor
sub
outs
push
fldcw
mov
push
jne
push
int
aas
loop
sub
sub
jb
push
(bad)
retf
stc
neg
mov
fisubr
cmp
stc
stos
push
sbb
bound
pop
add
push
mov
inc
cmc
cmp
cmps
push
inc
mov
xchg
jle
cmps
mov
cld
sbb
es
adc
loope
add
lahf
enter
ret
mov
nop
(bad)
jmp
adc
(bad)
jo
outs
mov
ja
in
sbb
(bad)
jecxz
pop
mov
rol
outs
xchg
jmp
aas
mov
xchg
(bad)
mov
push
cld
ds
ins
(bad)
retf
add
es
(bad)
loopne
loopne
cmp
xchg
pop
and
pop
rcl
or
pop
lahf
cmp
jb
iret
lods
adc
je
add
xchg
jl
dec
pop
leave
and
fild
jge
mov
es
adc
mov
mov
dec
push
js
jo
mov
mov
test
retf
out
nop
aas
ja
int3
ins
xor
dec
dec
out
jmp
idiv
sub
xlat
lock
sbb
pop
jae
mov
jmp
push
cld
mov
sahf
in
lods
mov
xchg
sub
imul
call
push
cmp
jp
and
aad
sbb
ins
mov
xor
inc
cmp
sbb
mov
fs
rcr
pop
nop
jp
inc
icebp
cmp
jns
fs
pop
gs
hlt
sahf
mov
push
out
cmps
test
mov
push
lahf
rol
cmc
repnz
or
cmp
mov
xchg
xor
loopne
sub
inc
out
pop
mov
jae
mov
adc
or
ja
or
adc
sub
stos
call
and
jp
movs
dec
mov
cmp
shr
hlt
clc
lahf
fild
pop
mov
jp
add
or
es
xchg
aaa
pop
rcr
push
sahf
inc
push
sbb
popf
fs
mov
jmp
adc
outs
outs
cmp
or
xlat
dec
adc
jecxz
add
test
movs
lock
jo
inc
xor
(bad)
ins
push
pop
xlat
push
test
inc
imul
push
movs
push
cmps
mov
ret
xor
mov
call
jg
ins
mov
bts
push
outs
lock
and
imul
std
and
pusha
mov
not
cmps
push
mov
gs
ins
add
mov
inc
sub
popf
dec
or
mov
mov
pop
and
movs
mov
jmp
dec
outs
icebp
sub
hlt
not
sar
test
dec
pop
sbb
or
(bad)
fs
xchg
mov
popf
lds
(bad)
xchg
xlat
pop
adc
mov
jmp
xor
mov
clc
cmp
mov
sub
rcl
jg
movs
outs
outs
pop
mov
adc
out
xchg
xor
aad
dec
add
test
loopne
inc
cmps
pop
in
jo
jo
or
fstp
mov
(bad)
popf
mov
mov
clc
mov
stos
das
push
pusha
xchg
sbb
out
push
inc
xor
xor
mov
push
jns
xor
xchg
shl
inc
in
push
aas
mov
mov
cmp
outs
add
jbe
loop
les
sub
and
loop
xchg
xchg
xlat
lea
jne
repnz
jb
xchg
fwait
in
sub
addr16
and
lods
rcl
leave
add
push
push
or
xor
lods
aam
dec
es
mov
jg
in
fisttp
fwait
mul
xchg
hlt
or
int3
push
push
xchg
(bad)
and
dec
and
mov
adc
idiv
sub
dec
dec
(bad)
add
test
and
rcl
sub
adc
aas
inc
lods
and
mov
push
movs
push
xor
adc
inc
mov
mov
fwait
imul
mov
popf
das
push
add
and
cmp
cmp
sti
cmps
mov
pop
sbb
adc
stc
pop
fiadd
das
mov
out
dec
call
dec
sub
and
push
push
pusha
bound
adc
(bad)
xor
bound
cmps
cdq
ja
mov
add
or
xor
(bad)
(bad)
ror
cmp
nop
pushf
in
xlat
(bad)
and
push
mov
push
dec
add
frstor
sub
mov
jle
cli
nop
hlt
out
cmp
daa
jl
mov
neg
sub
inc
mov
jo
stos
inc
xor
jmp
in
imul
or
stos
push
sbb
loope
jg
jg
aaa
inc
fisttp
xlat
in
push
jns
rcl
addr16
repnz
leave
and
mov
out
xor
pop
mov
in
mov
pop
call
cmp
inc
cs
cdq
xor
cmp
fisttp
xor
pusha
and
pop
add
out
jg
fs
(bad)
and
mov
dec
stos
lds
sar
add
dec
mov
mov
(bad)
call
or
popa
ins
aam
pop
stos
or
cs
push
clc
and
xchg
jecxz
mov
in
jmp
sub
rcl
imul
inc
daa
sbb
jg
sub
pusha
test
fdiv
mov
cdq
dec
pusha
std
pop
out
mov
mov
popa
ret
pop
dec
pusha
loopne
jmp
(bad)
scas
movs
lahf
lock
fsubr
xchg
fild
cwde
ds
or
(bad)
push
bound
push
popf
sahf
adc
inc
repz
(bad)
jns
ds
cs
les
aad
sbb
push
outs
ficomp
or
xchg
push
imul
pop
fld
fwait
mov
mov
std
aas
daa
mov
jne
int
pop
dec
(bad)
xor
iret
push
push
(bad)
fst
sub
adc
add
mov
mov
adc
(bad)
jo
loopne
or
dec
loopne
inc
or
cwde
into
pop
jne
cmp
add
arpl
cmp
and
push
(bad)
mov
loope
outs
inc
aas
pushf
dec
push
jmp
repz
sti
les
jmp
jle
popa
dec
sbb
dec
jno
vminps
inc
sbb
cmp
out
mov
arpl
dec
nop
adc
pop
lods
pusha
push
jns
dec
fcmovbe
inc
lahf
xlat
mov
mov
clc
add
jnp
mov
lock
inc
(bad)
in
and
push
adc
fiadd
mov
adc
fisttp
xchg
(bad)
cmp
mov
js
fiadd
sub
(bad)
inc
push
clc
mov
sub
push
repnz
mov
arpl
push
lods
mov
push
or
(bad)
test
test
mov
cli
and
sbb
gs
or
adc
sar
gs
mov
(bad)
or
loope
int
inc
xor
mov
or
pop
iret
(bad)
add
mov
repnz
sub
aad
dec
jl
and
and
loope
retf
inc
shr
arpl
xchg
mov
push
jbe
in
cwde
dec
dec
aas
pop
pop
cld
in
add
add
sbb
lods
inc
ss
xor
das
pop
mov
xchg
mov
adc
inc
xchg
add
leave
test
movs
das
aad
in
fmul
mov
adc
xchg
jg
bound
lds
mov
xor
jl
out
fcmovbe
imul
inc
mov
xor
jp
adc
fisubr
stc
aaa
jo
jb
mov
adc
les
ins
fadd
push
std
cmp
pop
out
mov
aad
mov
or
dec
std
es
mov
hlt
jle
(bad)
in
mov
mov
push
bound
scas
sbb
mov
je
cmp
movs
fbstp
xchg
push
popa
fsubr
add
stos
scas
fs
ins
lea
xor
movs
mov
cmc
pushf
aaa
add
cmp
add
test
mov
cdq
and
in
ins
inc
pop
inc
sbb
inc
cmps
stos
dec
fsub
push
scas
sub
push
stc
popf
cmp
jmp
and
or
shl
jmp
inc
hlt
in
scas
cli
ss
and
ss
ins
test
test
xor
or
cmp
push
pop
rol
(bad)
cmp
pop
int3
jbe
inc
pop
lahf
xchg
mov
inc
push
and
adc
out
and
popf
mov
jno
jg
fnsave
cdq
xor
(bad)
sbb
ret
push
test
iret
sbb
aam
push
push
cmp
jnp
jnp
pop
lods
pop
pushf
loop
popa
push
jmp
ret
ja
dec
mov
sbb
xor
iret
jno
(bad)
lahf
adc
ds
fisttp
and
jae
mov
mov
dec
stos
dec
sbb
xchg
push
in
pusha
cdq
js
adc
push
cmps
lods
dec
jb
mov
dec
dec
jo
jb
or
push
xchg
mov
pop
add
inc
rcr
dec
mov
imul
adc
inc
lds
cmc
daa
je
ror
cmps
sub
mov
xchg
sub
mov
add
add
dec
scas
fcomip
jmp
out
push
test
mov
stos
inc
(bad)
xchg
movs
push
ror
fwait
ja
push
push
ins
xor
push
sub
lods
bound
bound
xor
out
dec
hlt
es
test
out
mov
mul
rol
shr
xchg
push
fidiv
in
lods
call
mul
pop
dec
arpl
movs
pop
(bad)
out
movs
shl
mov
dec
jp
imul
in
fs
and
jne
or
push
mov
lods
cwde
sar
jne
mov
dec
mov
cld
jmp
sbb
out
sar
aas
or
jmp
adc
cli
(bad)
mov
pop
add
or
cmp
shr
push
inc
adc
or
fdiv
jno
cs
lds
xchg
arpl
(bad)
mov
mov
inc
stos
sti
push
jle
call
stos
lds
xchg
test
jecxz
jp
xor
dec
mov
cmp
dec
pop
add
pop
jle
cdq
stos
das
enter
jb
std
sbb
aad
mov
jecxz
jae
pop
push
cmp
(bad)
mov
xchg
loope
cdq
shl
in
xor
scas
stc
jb
dec
stos
push
jg
stos
std
push
inc
dec
test
test
lds
cli
sbb
mov
pop
jg
hlt
sub
xor
fs
scas
xchg
fstp
inc
std
bound
pop
jae
cli
jns
push
outs
push
ds
std
mov
ins
pop
cmp
pop
mov
shr
je
leave
inc
js
or
bound
aaa
(bad)
rcl
nop
fs
mov
push
mov
jmp
fsubrp
or
ret
pop
pushf
arpl
jbe
lock
in
ret
int3
pop
sbb
inc
sub
cmp
test
jbe
or
(bad)
or
aad
sbb
sahf
inc
mov
ds
push
ds
push
sbb
cmp
movs
cld
or
sub
movs
or
mov
les
cmp
ficom
push
fwait
imul
jmp
iret
mov
leave
jns
and
(bad)
fild
jl
xchg
cmp
cmp
pop
out
sti
fiadd
jmp
dec
push
mov
push
retf
mov
mov
sbb
outs
pop
cmp
add
jmp
cmps
scas
or
not
mov
std
sub
frstor
fs
test
scas
sbb
imul
pop
das
pop
fs
lods
movs
fidivr
xor
or
ret
lds
ret
movs
aam
daa
clc
dec
pop
(bad)
cmc
cmp
retf
aam
xchg
or
pop
add
or
inc
or
fild
mov
shl
jnp
leave
fdiv
(bad)
cdq
push
movs
call
add
and
jl
cmp
xor
jecxz
mov
pop
mov
pop
jns
adc
fcom
sub
les
or
push
retf
xor
dec
mov
(bad)
sbb
dec
mov
add
mov
(bad)
leave
sub
and
int
or
nop
lahf
iret
and
or
cmp
addr16
cmp
sbb
shl
call
xchg
call
xchg
(bad)
enter
fdivr
cli
mov
push
push
xchg
repnz
(bad)
jle
inc
xor
xchg
xor
dec
bound
ret
mov
mov
add
lock
iret
adc
push
lock
adc
mov
pop
cmp
idiv
push
pop
cmp
aad
sub
push
ret
test
out
pop
cwde
mov
mov
inc
int3
mov
js
xlat
jb
xor
scas
cmc
imul
add
ret
ja
cmp
movs
and
pushf
dec
clc
xor
in
movs
aaa
call
xor
scas
jne
aam
ja
and
mov
fild
cmps
cmp
jg
inc
stc
rcr
bound
and
enter
dec
jnp
cmp
pop
int
gs
adc
mov
stos
cmp
mov
mov
mov
inc
xchg
pop
push
repnz
pop
cmp
retf
fs
arpl
xor
bound
scas
scas
mov
mov
mov
and
je
jae
jge
in
add
jmp
cmp
pop
sub
into
xchg
rcr
inc
icebp
aad
cmp
rcr
je
dec
xchg
lods
mov
or
sub
mov
ja
and
mov
and
aas
aaa
and
xchg
jne
les
cmp
fidivr
aaa
cwde
in
inc
sbb
and
movs
sub
scas
dec
sbb
lods
xchg
stc
jb
in
dec
lods
leave
xchg
push
jle
xor
push
cmp
xor
push
jmp
xor
(bad)
lea
dec
ror
shr
push
adc
clc
cli
xchg
sbb
add
mov
mov
jecxz
scas
int3
fild
out
cmc
loope
fadd
mov
add
inc
call
or
lock
movs
addr16
pop
xor
adc
mov
out
aam
xor
adc
sbb
xchg
pop
(bad)
pusha
(bad)
push
repz
inc
test
pop
sar
cld
jge
add
adc
in
inc
inc
or
repnz
fisttp
push
xchg
xchg
ins
push
jg
pop
repnz
iret
dec
(bad)
js
sub
pop
sbb
or
test
add
mov
bound
pop
adc
dec
xor
inc
mov
lock
push
fmul
es
cmp
out
test
cmc
mov
push
pop
das
cld
fs
dec
xchg
sbb
rcr
inc
xchg
or
push
jmp
inc
jnp
pop
and
and
jb
inc
sbb
or
inc
add
das
cmps
pop
mov
xchg
dec
js
xchg
or
aas
adc
mov
inc
pop
sahf
pop
jnp
ret
in
(bad)
ja
inc
cmp
push
push
mov
xor
and
mov
jbe
jmp
inc
test
popa
lock
mov
pop
adc
and
leave
jle
int3
shl
jae
(bad)
aam
mov
mov
jae
stos
dec
popf
(bad)
adc
cmps
push
sub
xchg
pop
stos
sub
icebp
fadd
rol
mov
mov
mov
dec
push
xor
out
outs
and
mov
in
fistp
mov
inc
das
ja
add
(bad)
fiadd
xchg
repz
js
mov
fsub
mov
cmp
cmc
pop
push
repnz
ja
(bad)
dec
out
adc
jns
daa
xchg
xchg
adc
mov
push
mov
cmp
cmp
xor
jmp
add
loope
cmc
dec
loop
push
lods
jecxz
in
jbe
or
push
cmps
hlt
into
in
add
rcr
in
mov
jmp
lahf
sbb
aaa
pop
sbb
ror
jle
popa
lods
ds
push
mov
add
or
cmp
fidiv
pop
or
pop
adc
mov
or
add
sbb
(bad)
xchg
jae
mov
in
movs
cmp
xlat
xchg
stos
dec
ins
jbe
stos
lahf
loope
push
mov
dec
jecxz
add
je
sub
xlat
push
stos
cmc
test
dec
inc
in
js
jle
cmp
stc
call
mov
test
call
stos
call
sbb
pop
dec
test
mov
mov
adc
frstor
adc
in
icebp
outs
loopne
mov
mov
cli
mov
cmp
push
inc
into
jbe
and
pop
movs
mov
clc
push
ret
shr
inc
call
or
sbb
arpl
cmp
xchg
cmps
sti
push
pop
mov
jmp
inc
jp
pop
repz
mov
sti
mov
pop
dec
inc
cld
mov
imul
sub
mov
sub
cmp
and
out
js
retf
aas
sbb
ins
pop
movs
call
add
lea
mov
out
cmp
inc
lahf
add
dec
cmp
xchg
inc
outs
lods
(bad)
cmps
sti
leave
sub
outs
cmp
movs
dec
mov
repnz
inc
faddp
outs
jmp
icebp
jne
movs
add
fwait
mov
call
adc
and
scas
test
mov
inc
inc
xor
xchg
mov
add
pop
in
sahf
call
dec
mov
xchg
jl
int
idiv
mov
push
arpl
bound
out
mov
cmp
lock
or
xchg
call
out
adc
dec
movs
cmp
xor
icebp
shr
rcl
sar
sar
lahf
mov
ficom
fst
ret
and
les
dec
mov
cmp
jp
test
jmp
cld
xchg
jmp
ins
in
or
mov
ins
inc
xchg
dec
pop
out
movs
cmp
xor
sbb
dec
js
and
dec
and
mov
and
pushf
int
out
(bad)
fsub
sub
pop
cdq
(bad)
jmp
cmp
mov
or
jge
add
inc
mov
xchg
sub
popa
sbb
mov
xchg
push
stc
outs
xchg
and
scas
fadd
ja
xlat
scas
dec
push
imul
lds
jae
neg
jg
pop
push
lea
shr
jle
mov
pop
mov
pop
(bad)
es
and
xor
fidiv
mov
xchg
inc
jmp
add
outs
neg
push
xor
push
dec
jns
push
(bad)
adc
xchg
das
call
sbb
loope
test
sbb
push
inc
ins
aaa
ret
jmp
mov
cld
jns
nop
jae
sbb
mov
cmp
xor
stos
rcl
es
jo
push
cmc
jmp
rcr
push
sub
add
adc
ds
out
lds
pop
ds
jg
jns
cwde
call
loopne
cmp
out
adc
test
fild
test
dec
test
ja
sar
cmp
dec
mov
adc
and
xor
adc
mov
std
and
sbb
xchg
mov
mov
popfw
mov
fwait
sub
fnstcw
movs
in
jne
sub
lods
cmp
push
mov
fldenv
jecxz
jno
push
and
or
dec
scas
fsubr
call
adc
jge
push
fadd
dec
lds
xor
mov
arpl
push
lock
stc
cmps
psubq
sub
cmc
mov
jmp
jnp
dec
leave
inc
dec
push
pop
pop
outs
dec
retf
sahf
(bad)
and
push
adc
add
ds
ins
mov
sbb
cmc
repnz
clc
popf
sbb
xor
xor
ror
xchg
test
rcr
lods
out
adc
xchg
cdq
(bad)
and
inc
xlat
sub
mov
pop
loop
and
xor
outs
lea
movs
jne
js
les
lea
pop
pop
xchg
push
das
stc
pusha
retf
mov
adc
test
mov
jo
loope
sub
pop
mov
cwde
xor
ret
retf
fnstcw
jecxz
fwait
mov
xchg
jp
add
pop
icebp
dec
pop
cdq
ret
in
sahf
stc
imul
imul
data16
xchg
inc
jmp
leave
mov
or
push
popf
leave
push
xchg
rcl
iret
loope
mov
push
xor
pop
imul
dec
retf
arpl
mov
cmps
pop
and
ror
adc
(bad)
xor
rcr
lea
mov
stos
test
jp
pop
inc
call
adc
stos
jmp
pop
sbb
outs
je
stos
loop
(bad)
xor
outs
iret
shl
jbe
repz
push
inc
push
pop
lahf
mov
mov
sahf
in
and
ds
or
fadd
or
cmp
mov
lds
imul
loop
popf
xchg
push
ror
cmp
or
fs
or
or
dec
xor
outs
lds
mov
inc
outs
test
xchg
xlat
out
retf
mov
push
lods
cwde
out
xor
rcl
push
(bad)
pop
adc
es
mov
jns
pop
push
pop
sbb
dec
mov
mov
iret
std
add
jl
push
or
add
bnd
ins
adc
xchg
sub
out
push
inc
fisubr
ss
call
lods
lods
dec
lahf
std
add
mov
and
test
jl
cmp
pop
push
test
shr
fistp
enter
dec
mov
xor
jae
or
mov
rol
dec
sbb
add
pop
xlat
cmc
dec
jno
jne
mov
or
mov
lahf
fisubr
les
and
cmp
push
sub
mov
push
adc
dec
sbb
out
push
mov
push
in
into
or
not
retf
rcl
adc
mov
(bad)
imul
imul
and
xchg
addr16
test
iret
test
mov
(bad)
das
mov
jns
in
shl
arpl
dec
and
mov
pop
test
sar
dec
jmp
push
gs
fwait
mov
push
mov
out
xor
inc
sub
mov
push
sub
cmp
mov
pop
pop
dec
push
sbb
lods
mov
std
pop
mov
mov
push
hlt
les
sbb
cmp
push
adc
fisubr
test
xchg
bound
setae
push
cli
jp
sub
push
lock
ds
inc
mov
push
jmp
adc
jbe
cwde
lahf
xchg
mov
into
imul
or
push
and
jne
repnz
rcr
inc
xlat
sahf
or
and
cli
les
cmp
clc
test
lods
jns
jnp
aad
cmps
shr
fwait
inc
cdq
xchg
out
xchg
fstp
jle
movs
or
and
pop
shl
inc
adc
mov
(bad)
lahf
hlt
push
or
ins
test
mov
(bad)
mov
xor
fst
pop
mov
xor
mov
addr16
xor
rcl
sbb
xrelease
not
mov
push
cmp
mov
adc
jecxz
ss
sub
dec
sbb
cwde
pop
and
shl
jne
lds
iret
mov
sub
adc
jecxz
in
lock
sub
and
fwait
cmps
mov
pop
aam
or
aaa
cmps
neg
xchg
cs
sub
dec
push
je
cli
or
test
out
dec
sbb
jmp
pop
les
jge
mov
add
mov
je
out
add
loop
mov
addr16
ret
mov
fld
inc
scas
ss
adc
fwait
aam
scas
aaa
popf
xchg
sub
sub
mov
enter
shr
cs
push
fnsave
(bad)
mov
and
out
pusha
cmps
loop
inc
out
test
cld
mov
sar
mov
movs
adc
lds
sub
cmp
pop
scas
push
push
movs
sub
push
pop
inc
pusha
xor
or
sti
mov
dec
adc
mov
into
(bad)
pop
call
inc
call
movs
arpl
cmp
stos
push
add
in
xchg
dec
ror
mov
jge
ret
in
das
jnp
fimul
loope
fwait
repnz
jb
cdq
jmp
imul
mov
cld
into
mov
nop
fs
sub
test
(bad)
push
mov
sti
pop
mov
mov
cmps
cmp
push
add
mov
cmp
int
mov
and
pusha
fwait
dec
sbb
push
cld
xlat
in
mov
out
mov
mov
mov
mov
pop
push
mov
mov
xchg
sub
mov
jg
(bad)
sti
stos
sahf
outs
sbb
sub
arpl
add
pop
inc
cmp
xor
popa
mov
imul
push
ins
and
bound
repz
mov
jae
std
fadd
das
inc
addr16
sub
cmp
test
or
jmp
push
lahf
loopne
xor
xor
fimul
retf
icebp
mov
ret
sub
fist
pop
adc
das
in
popf
rol
inc
je
push
jle
aas
xchg
(bad)
sahf
adc
lea
imul
test
fisub
cmps
(bad)
xor
inc
dec
inc
jl
aas
or
jecxz
mov
(bad)
jle
push
int
arpl
data16
loop
mov
mov
nop
sub
mov
js
sub
jne
cmp
(bad)
sub
adc
movs
fsubr
xlat
ret
dec
push
adc
popa
or
mov
mov
fistp
fsub
mov
adc
sbb
fidiv
pop
(bad)
xchg
mov
push
jmp
cwde
ret
fbld
retf
in
retf
loopne
xor
cmp
nop
rcr
jmp
push
shr
ret
iret
pop
addr16
sub
aaa
add
movs
cmps
in
pop
ret
jmp
sub
xchg
es
xchg
mov
or
pusha
movs
pop
retf
cdq
ficomp
fs
es
(bad)
mov
jnp
add
dec
mov
mov
sbb
daa
data16
retf
enter
mov
js
cmc
test
in
sar
arpl
xchg
xchg
imul
popa
cmp
sbb
mov
jb
mov
lea
and
sub
jl
mov
loop
mov
ja
jmp
cmps
pop
cmp
jmp
add
call
outs
dec
inc
pop
xchg
cmp
pop
cmc
dec
inc
pusha
push
push
dec
fbstp
out
in
rcl
loop
cli
or
xor
or
pop
xchg
fidiv
lea
cwde
jae
xchg
jnp
out
add
popf
mov
sbb
int3
clc
dec
mov
push
pop
inc
and
dec
and
repz
add
push
add
or
xor
cdq
iret
sti
mov
jns
mov
enter
xor
add
push
mov
or
sub
out
stos
ret
sbb
inc
xchg
jl
(bad)
and
push
scas
and
aam
push
mov
xchg
scas
clc
jg
mov
push
and
dec
xchg
cdq
pop
imul
rol
dec
jmp
sbb
jo
pop
fadd
in
(bad)
add
mov
cdq
test
lods
mov
pop
in
cli
aad
repnz
jnp
(bad)
dec
push
mov
dec
scas
xchg
ret
sub
and
xchg
sub
adc
pop
lea
fadd
sbb
test
mov
or
push
rcl
repnz
cld
dec
ins
add
and
ins
jo
jge
ret
mov
ss
adc
xchg
pop
sbb
xor
scas
jbe
lock
(bad)
test
mov
movs
(bad)
sti
dec
jo
(bad)
std
adc
jne
xchg
inc
test
add
push
and
ret
les
mov
scas
cld
cmp
in
outs
shl
and
imul
(bad)
aas
lea
lods
sbb
les
sbb
fcmovu
loopne
xchg
dec
inc
cwde
fstp
ins
cdq
leave
mov
call
stos
add
xchg
cmp
lahf
test
std
adc
outs
dec
dec
inc
add
sbb
inc
cmp
push
sub
xchg
adc
sahf
mov
mov
dec
dec
fsub
cmc
cmp
push
pop
sub
les
repnz
cmps
cs
mov
xlat
lods
pop
mov
clc
fdivr
add
cmps
xchg
dec
pusha
adc
jge
(bad)
adc
mov
mov
mov
sub
inc
jl
dec
jp
push
cmps
jae
xchg
test
stos
mov
mov
mov
scas
dec
push
mov
or
cmp
lahf
pusha
outs
lock
pop
jecxz
loop
inc
inc
mov
mov
call
pop
jmp
cmp
sbb
icebp
rcr
daa
add
mov
push
stos
pop
test
add
lods
dec
xchg
(bad)
dec
or
imul
adc
push
fst
(bad)
ins
cmp
data16
out
inc
movs
aad
cmp
adc
das
std
fst
pushf
push
xor
inc
push
mov
sub
mov
dec
mov
repnz
lea
inc
fnstenv
mov
sbb
push
inc
add
sbb
add
ds
nop
cli
mov
int3
dec
cli
repnz
mov
sbb
outs
adc
scas
cmp
mov
aaa
cli
push
cs
lods
jle
push
sub
xor
(bad)
fldcw
cmp
(bad)
cmp
stos
mov
lahf
int3
ja
lahf
cld
jae
or
in
pop
mov
test
movs
lahf
scas
cmp
popa
lods
sub
(bad)
in
mov
push
pusha
fild
pushf
sbb
push
xchg
adc
xchg
push
rcr
mov
dec
pop
test
xchg
mov
cli
bnd
stos
outs
mov
dec
mov
xchg
and
rol
inc
lods
ss
lods
or
les
ficom
ja
add
push
outs
arpl
aaa
ret
sbb
out
ins
push
push
mov
cmp
lock
out
aam
pusha
cmp
(bad)
pop
imul
push
popf
cmps
push
jbe
int
inc
push
in
int
dec
push
push
mov
rcl
aam
bound
adc
xchg
fwait
mov
call
sbb
rol
out
sbb
inc
scas
xor
mov
cli
mov
jmp
mov
mov
jp
das
or
or
adc
fnstcw
mov
lahf
stos
int
cmp
jbe
test
(bad)
aam
xchg
xchg
xchg
jno
call
add
stc
dec
stos
and
xor
sub
ret
cmps
mov
mov
cmp
dec
sub
mov
(bad)
push
fwait
mov
mov
pushf
mov
imul
xchg
leave
aas
adc
mov
mul
cdq
sub
and
out
test
int
cmp
xor
(bad)
mov
mov
xchg
xchg
push
iret
xor
cmp
jg
pop
vpshlb
(bad)
lahf
gs
stos
inc
cwde
imul
imul
mov
pop
pop
ins
fxch
movs
add
ret
or
imul
add
sub
mov
fstp
mov
push
mov
dec
cmp
pop
sub
enter
pop
push
ins
fneni(8087
fmul
test
sub
adc
iret
mov
cmp
das
mov
test
test
jo
inc
mov
icebp
mov
stos
movs
or
lock
inc
inc
push
(bad)
jg
fs
fwait
add
test
repz
inc
push
mov
inc
xchg
repnz
xor
lods
dec
xchg
pusha
or
movs
mov
sub
adc
sub
inc
mov
adc
xor
enter
mov
jns
jg
aam
xlat
mov
lods
ja
xchg
int3
add
and
clc
xor
sub
ins
enter
lahf
jmp
call
xor
inc
loopne
stos
and
adc
or
test
inc
jmp
push
mov
icebp
test
ja
jbe
jnp
xchg
cwde
cmp
ss
ret
pop
and
inc
push
enter
jl
dec
sub
pop
es
cmp
cmp
(bad)
ds
loope
popa
out
movs
xlat
pop
rcr
or
retf
pop
sbb
adc
mov
fcmovne
inc
jge
fnsave
sub
adc
jle
ins
xor
mov
je
xlat
mov
xor
movs
xchg
pushf
inc
adc
into
dec
in
dec
xchg
addr16
enter
lods
hlt
xor
and
out
push
mov
add
pop
sub
mov
mov
dec
mov
sbb
ds
jmp
cmps
xchg
ins
or
repnz
or
and
(bad)
mov
pop
je
cmp
repnz
cmps
sub
inc
mov
sbb
(bad)
jmp
fistp
fisttp
or
inc
or
dec
fild
mov
push
xchg
and
push
pop
sti
ins
dec
xchg
icebp
pop
mov
pop
bnd
jmp
sub
dec
das
cwde
cld
cmp
js
ret
fdiv
add
adc
pop
leave
mov
mov
inc
jbe
adc
lods
and
clc
addr16
and
mov
cmp
cmp
or
xchg
js
cld
std
inc
or
xor
xchg
es
pop
add
bound
bound
mov
jge
div
push
stos
jne
sar
sub
jne
dec
sub
jb
ds
push
or
dec
outs
add
add
ins
loop
std
sbb
imul
xchg
adc
mov
ret
data16
mov
mov
xor
fucom
push
push
adc
enter
ins
lahf
jp
retf
mov
push
xchg
or
mov
test
loopne
lock
out
mov
pop
(bad)
pop
je
out
push
lods
or
test
mov
aad
idiv
pop
stos
add
aad
dec
cld
push
adc
aaa
cmp
sub
fst
ret
dec
je
in
xor
dec
lods
cmps
icebp
dec
and
cmp
(bad)
mov
and
mov
and
sub
cs
push
cmp
retf
adc
push
shl
pushf
and
(bad)
mov
pop
div
jo
in
js
mov
out
pushf
cmp
sbb
sub
sbb
icebp
scas
popa
inc
les
mov
mov
gs
es
call
push
pusha
loop
shr
push
mov
jmp
dec
or
addr16
push
jl
jmp
(bad)
rol
dec
pop
popf
sbb
retf
stc
scas
out
push
cmp
jmp
dec
cmp
mov
jae
or
vcomisd
imul
shl
cmp
in
ret
pushf
and
stos
or
ret
mov
sar
mov
xchg
lds
ss
mov
frstor
push
sahf
pop
(bad)
mov
dec
lods
int
inc
or
cmp
icebp
dec
(bad)
and
sub
stos
in
mov
mov
ret
sahf
fisttp
pop
jg
jnp
pop
test
mov
lock
xchg
mov
add
in
dec
and
leave
mov
push
retf
iret
sbb
push
cmp
and
and
sub
test
retf
fs
enter
lds
or
jmp
leave
push
call
mov
jbe
xor
je
fidivr
pop
sub
das
out
sar
xchg
call
dec
mov
(bad)
lock
cmp
sub
jno
pop
add
lahf
jg
inc
inc
fs
aaa
add
call
or
xor
pop
or
(bad)
add
inc
out
cmp
sub
pop
sub
test
mov
mov
xlat
add
cmp
cmp
pop
inc
ins
daa
in
outs
jmp
sub
jno
(bad)
sbb
xlat
inc
mov
xchg
pop
loop
fnstsw
inc
imul
inc
and
lock
dec
fld
cmp
retf
or
pop
(bad)
cs
(bad)
bound
in
mov
cmp
test
pop
mov
push
gs
ins
arpl
cld
pop
inc
pop
(bad)
imul
cmc
mov
xor
movs
mov
psubusb
sub
fdivr
xchg
addr16
pop
mov
xor
jmp
outs
sub
add
sbb
mov
sub
cmp
fmul
std
mov
retf
mov
cmps
lods
jne
ss
adc
pop
sub
in
xlat
stos
mov
test
loopne
pop
sub
inc
sub
jle
jmp
fisubr
cdq
aas
ret
aas
mov
adc
out
xlat
shl
or
dec
mov
inc
mov
nop
adc
fidivr
ret
inc
fs
fwait
cmps
sar
pop
jo
(bad)
push
nop
xlat
call
mov
call
pop
mov
data16
inc
push
mov
push
sub
fnstsw
mov
repnz
stc
clc
call
movs
xchg
adc
push
test
jb
dec
and
in
fiadd
mov
xchg
test
jle
fld
shr
sbb
mov
xor
sbb
mov
jae
pop
adc
gs
cmp
push
lock
xor
in
inc
pop
inc
loope
push
mov
les
push
jbe
aam
les
outs
iret
xor
repnz
cmp
scas
cwde
mov
test
xchg
sbb
enter
adc
ds
loope
mov
mov
loopne
push
test
(bad)
push
push
aaa
test
jge
jne
ss
and
fidivr
sub
jmp
mov
lock
sbb
xchg
test
mov
push
dec
outs
or
jl
sub
loop
js
loop
and
movs
inc
jge
fs
push
mov
shl
test
loope
mov
and
movs
dec
pop
adc
xor
pop
js
and
and
sub
ins
inc
mov
mov
call
adc
dec
jo
cmp
inc
pop
cmps
mov
stos
inc
mov
inc
add
xchg
loop
mov
xchg
call
(bad)
lock
repnz
pusha
xchg
or
mov
sbb
dec
add
xchg
push
sub
sti
es
add
inc
pusha
xchg
jmp
sbb
push
iret
jmp
or
add
xchg
mov
add
sahf
sbb
rol
or
sbb
mov
jl
inc
adc
sub
add
adc
in
jl
imul
(bad)
xor
jmp
in
and
sahf
cwde
leave
shr
cld
js
mov
lds
or
mov
addr16
jp
jle
pop
(bad)
xchg
shr
or
sbb
cmp
retf
pop
jae
and
mul
push
jge
retf
paddsb
mov
ds
(bad)
inc
xchg
(bad)
rcr
jmp
(bad)
or
pop
pusha
sar
dec
outs
push
inc
xchg
jecxz
fadd
push
add
je
int3
fist
cmp
push
adc
gs
in
push
in
xor
imul
cmp
and
popf
mov
add
and
mov
cli
mov
mov
nop
std
pop
xchg
or
lods
cmp
jge
repz
movs
xchg
icebp
mov
outs
jnp
stos
xchg
in
lock
jb
xchg
(bad)
scas
leave
jbe
loop
scas
(bad)
adc
loop
xlat
mov
out
movs
aaa
daa
dec
nop
out
push
into
inc
outs
leave
lahf
pop
out
push
in
sbb
push
imul
jno
lea
popa
jge
dec
pop
cmps
sahf
pop
pop
cdq
dec
and
bound
and
cdq
stos
dec
xchg
xor
test
arpl
mov
xchg
and
mov
nop
sar
inc
test
mov
(bad)
sti
pop
sub
lods
xchg
dec
popf
push
xchg
stos
shr
cvtpi2ps
aad
cmc
mov
cmp
mov
sub
cmp
xor
add
push
arpl
int
fwait
mov
sub
inc
popa
shl
fcom
adc
test
mov
mov
pop
or
daa
icebp
pop
bound
mov
mov
xchg
mov
mov
xor
sbb
xchg
clc
fisttp
(bad)
pop
gs
cmps
sbb
xor
mov
sti
jge
ret
in
cmps
mov
sub
retf
mov
xchg
rcr
sub
fwait
in
arpl
xor
cmc
push
es
clc
iret
ret
iret
shl
icebp
scas
out
dec
add
sbb
jmp
mov
imul
repz
loope
mov
jmp
pop
add
dec
jecxz
inc
push
xor
in
test
aad
pop
sbb
jbe
add
lahf
es
cmp
loop
xchg
jecxz
jge
test
ins
mov
xlat
xor
out
movs
cld
mov
cmps
movs
cmp
mov
rcl
mov
pop
fst
leave
pop
fcom
push
outs
movs
(bad)
mov
test
jmp
sub
in
out
inc
lock
loop
inc
mov
mov
cmps
dec
add
(bad)
jo
iret
in
shl
inc
neg
xchg
mov
loopne
push
cmp
mov
js
js
push
or
jne
mov
es
stos
jae
and
inc
lods
jecxz
cmps
or
mov
int
rcr
jne
adc
sub
les
cmpps
mov
push
and
bound
mov
xor
push
shl
jnp
outs
and
stc
sti
es
std
mov
ret
mov
cdq
fdivr
pop
mov
enter
cmp
stc
call
rol
cmc
mov
stc
loope
iret
jns
xlat
in
hlt
xor
retf
retf
in
xchg
xchg
ret
test
dec
shl
lds
sbb
inc
adc
push
cs
pop
xchg
shl
pop
push
dec
int
jecxz
dec
add
aam
pop
cmps
cmc
imul
pushf
aam
inc
mov
mov
xchg
mov
jg
push
movs
push
ror
adc
pop
jmp
arpl
cmc
sbb
cs
cmp
mov
xor
push
ficom
(bad)
rol
mov
stos
adc
or
xor
push
and
ret
loopne
popf
mov
imul
cdq
pop
mov
add
and
int
cmp
push
pop
jmp
mov
xlat
je
push
cli
cmp
stc
(bad)
push
ins
xor
sub
mov
stos
inc
pop
movs
lahf
sub
ror
xlat
sub
jmp
inc
sub
pop
(bad)
in
cmps
sub
mov
push
cmps
scas
sahf
repz
pop
movs
arpl
push
idiv
retf
mov
sub
push
es
fadd
lock
mov
mov
lock
call
icebp
cmc
icebp
pop
add
cli
rcl
gs
sbb
out
mov
aaa
jmp
dec
push
shr
retf
jmp
mov
push
popf
sbb
(bad)
jl
mov
in
rcl
neg
cmp
or
fs
dec
gs
or
cmp
imul
jmp
(bad)
mov
jle
sbb
in
sti
mov
dec
movups
fdiv
(bad)
repz
sahf
fadd
loopne
rol
fwait
mov
sar
xor
retf
fadd
(bad)
out
xchg
ss
sub
scas
cmc
mov
push
out
(bad)
movs
ins
rcl
dec
mov
(bad)
bswap
xchg
sbb
clc
cld
mov
xor
xchg
fadd
sbb
dec
xor
dec
ret
popf
dec
jno
push
arpl
jb
xchg
cdq
jge
pop
(bad)
sahf
aam
mov
sbb
fwait
push
push
or
xchg
pop
xor
neg
sub
cmc
pop
scas
mov
push
imul
clc
pop
gs
dec
jmp
test
add
test
pop
xor
push
cmp
pop
bnd
jmp
mov
hlt
add
ins
aad
xchg
or
mov
sub
aas
int3
sbb
dec
icebp
ds
(bad)
repz
jns
add
mov
push
mov
nop
les
enter
mov
and
and
mov
iret
jns
jmp
ret
ins
xchg
(bad)
mov
mov
mov
cmp
or
adc
jno
lods
xor
mov
push
push
sub
mov
test
mov
cli
aad
enter
xchg
jbe
enter
sbb
push
arpl
pop
jo
mov
loop
mov
sub
retf
je
les
or
gs
cmp
cmp
xchg
shl
jge
and
jle
mov
out
add
test
lea
mov
fwait
push
fisttp
mov
jmp
movs
add
sbb
scas
or
fstp
leave
mov
scas
sub
inc
cmp
out
pop
pop
cmps
xchg
pop
or
mov
xlat
daa
out
sub
jmp
dec
xchg
ja
inc
test
nop
sbb
ja
arpl
add
sar
pushf
mov
nop
inc
jp
fiadd
(bad)
popf
cmp
sub
xchg
jb
ror
and
retf
leave
jmp
push
jmp
cmp
mov
div
push
xor
daa
fmulp
clc
pop
xor
popf
hlt
fistp
jle
ret
push
xchg
pop
jne
jge
retf
js
mov
pop
or
mov
pop
sahf
mov
stos
jne
enter
cmp
data16
pop
arpl
push
cmp
inc
fist
pop
call
push
fwait
xchg
and
movs
(bad)
retf
and
jno
fisttp
lock
and
pop
cmps
das
pop
stos
mov
pop
repz
not
mov
and
js
sbb
fild
mov
cmp
dec
mov
or
pop
mov
push
or
call
loop
mov
stos
popa
iret
pusha
jg
test
fmul
js
dec
jnp
dec
daa
sub
adc
inc
pop
and
(bad)
fs
and
ins
movs
fsubp
push
je
imul
(bad)
leave
xor
inc
icebp
pop
mov
xlat
mov
lods
subps
dec
retf
cmps
aaa
in
(bad)
enter
fdivr
lods
dec
inc
dec
aas
dec
sbb
out
or
dec
sahf
pop
aad
mov
xchg
add
inc
mov
jnp
jmp
mov
popa
rcl
sub
jle
cmp
inc
dec
adc
push
jg
pop
pop
dec
sahf
dec
test
xlat
(bad)
adc
dec
inc
push
xchg
jge
inc
pop
mov
ss
or
ret
dec
ja
test
rcr
push
loop
in
aad
add
repnz
retf
out
mov
ror
call
ja
sub
mov
dec
push
jecxz
pop
aas
test
out
jmp
sti
dec
xchg
aad
mov
call
cwde
sbb
jg
repz
jne
ror
push
add
inc
mov
inc
stos
rcr
pop
loope
add
sti
aaa
(bad)
or
shl
pop
or
sub
jbe
mov
ror
sub
add
leave
scas
add
gs
stos
mov
gs
sub
mov
movs
mov
call
push
push
or
push
push
jne
pop
mov
retf
push
sbb
push
jno
sub
test
daa
bound
rcr
fs
leave
and
js
ja
andps
sar
fstp
mov
pop
int
stos
pusha
xor
and
lahf
mov
sbb
(bad)
jbe
hlt
dec
xchg
and
jmp
shl
mov
cmps
(bad)
mov
aas
inc
ss
jns
dec
jg
js
dec
cmp
popa
stos
imul
lds
rol
push
or
ret
js
out
out
cmps
mov
sub
pop
fs
sbb
out
scas
outs
pop
mov
out
lahf
enter
fnsave
sbb
aad
or
iret
pop
fild
fisub
imul
xor
int3
mov
sbb
fisubr
mov
loop
adc
mov
or
out
jp
lods
pop
jl
aaa
adc
hlt
mov
ss
out
fsub
clc
inc
icebp
mov
push
test
(bad)
ja
pop
lods
push
xor
into
jmp
fimul
cmp
cmp
sub
imul
jecxz
push
test
cmp
sahf
sub
(bad)
add
sti
mov
sub
fcomp
aad
ja
jne
jo
movs
out
fcom
xchg
and
cmp
cmp
pop
pop
inc
ins
ss
xor
(bad)
fist
rol
xor
stc
pop
jo
cmp
(bad)
loop
fs
and
cmp
mov
fucom
pop
in
ins
lea
(bad)
sub
rol
and
test
rcr
cmp
push
inc
cmp
outs
mov
(bad)
cmp
xchg
jle
mov
std
sar
xor
gs
mov
sub
fbld
pop
mov
mov
push
pop
or
repnz
dec
outs
fstp
fsub
sub
fcmovu
mov
mov
dec
mov
push
mov
and
mov
test
mov
shr
test
adc
in
add
out
xor
pop
scas
repnz
cwde
xchg
outs
cld
adc
add
mov
(bad)
sbb
sbb
test
inc
inc
clc
adc
cld
mov
add
call
daa
push
cli
xchg
popf
cmps
xchg
add
hlt
loopne
gs
xchg
xchg
adc
sti
movs
cs
mov
lahf
jge
xchg
xchg
mov
cld
sbb
sbb
add
adc
shl
loop
mov
scas
fst
stc
lods
ins
bound
fwait
cmp
iret
dec
xchg
test
cmp
movs
ins
xor
dec
sbb
movs
sbb
call
bound
je
push
movs
xchg
push
clc
jbe
mov
imul
push
mov
push
bound
mov
imul
adc
loopne
dec
div
or
push
in
mov
sub
dec
retf
pusha
movs
in
sub
sub
sete
mov
pop
js
loopne
rcr
ins
xchg
ja
push
outs
inc
add
lock
push
sbb
sbb
mov
adc
(bad)
adc
stos
loopne
adc
dec
aas
outs
mov
popa
pop
jmp
je
jg
les
inc
lock
gs
mov
lock
push
pop
aaa
ins
(bad)
outs
pop
xor
shl
mov
inc
loope
(bad)
loop
mov
aam
pusha
xchg
add
mov
sub
cmp
test
xor
cmc
inc
dec
dec
xchg
push
movs
in
retf
xchg
jbe
std
xchg
mov
and
jle
push
mov
shl
nop
sbb
add
nop
shr
out
ins
rol
sbb
idiv
adc
inc
bound
call
push
pop
xor
popa
adc
fwait
mov
sbb
mov
mov
arpl
mov
xor
(bad)
cmp
sbb
data16
int3
mov
or
scas
loope
and
repz
mov
sahf
cmps
mov
es
mov
out
mov
xchg
ret
mov
inc
push
clc
xor
mov
push
cs
cmp
cmp
xor
mov
mov
jl
pop
adc
and
jmp
outs
lods
mov
ds
arpl
imul
cmps
sahf
dec
sti
mov
cmp
adc
push
in
adc
loop
and
mov
xor
push
retf
inc
popf
mov
add
push
sbb
push
out
mov
pop
fdivr
mov
xor
and
adc
dec
retf
adc
dec
push
int
jg
sub
jmp
pushf
out
les
jbe
in
sbb
cmp
push
pop
mov
and
fwait
outs
mov
xor
int3
jp
loopne
imul
adc
das
pop
sub
xchg
loop
xchg
and
mov
mov
pop
inc
inc
(bad)
enter
stos
retf
shl
clc
mov
jge
mov
inc
sbb
xor
fs
adc
add
jmp
xchg
mov
ins
sub
aaa
and
push
jle
sbb
out
pop
into
and
jmp
or
cmc
or
rol
xchg
call
sbb
int
adc
cwde
dec
mov
lods
sbb
sbb
cld
dec
ja
xchg
fadd
outs
mov
jne
mov
mov
pop
out
mov
aaa
and
stc
mov
sub
xor
jl
ja
xor
pop
mov
xor
repnz
jns
icebp
sub
sub
xor
pop
sub
xchg
add
jmp
cmp
test
sub
or
push
inc
xor
cmp
ins
inc
inc
leave
cmp
fucomp
push
add
inc
xchg
push
fimul
mov
inc
dec
push
sti
push
or
in
and
push
mov
lock
popf
push
cmp
leave
sub
dec
in
mov
lar
retf
or
jg
in
adc
dec
dec
xchg
and
mov
dec
ss
mov
(bad)
fbstp
add
ror
repnz
es
(bad)
xchg
leave
dec
xor
mov
sahf
lods
inc
popa
xchg
push
xor
adc
out
sbb
adc
out
inc
dec
scas
imul
pop
mov
cli
dec
mov
cmc
jecxz
lahf
(bad)
mov
add
adc
xlat
xor
pusha
and
mov
and
mov
fild
sub
fidivr
sti
jg
cli
ins
and
stc
mov
mov
sub
cmovo
cmp
mov
sbb
popa
imul
and
pop
pop
xchg
retf
pop
xor
or
ret
mov
and
lods
neg
xchg
jne
fwait
mov
loop
mov
sbb
addr16
jle
mov
xchg
call
cmps
sbb
js
add
xor
xor
jb
fstp
cs
sbb
lea
add
movs
or
fdiv
or
xor
aas
or
push
mov
cmp
and
hlt
mov
pop
movs
push
loopne
add
xchg
dec
dec
int
jbe
push
ds
jno
cmc
lock
icebp
mov
dec
xor
mov
cmp
popa
add
in
je
inc
push
xor
pop
int3
fidivr
dec
or
ret
sub
pop
test
call
jno
(bad)
pop
inc
stos
repnz
fst
inc
sti
fstp
and
xchg
inc
nop
or
inc
xor
or
mov
jns
xor
fadd
ss
aaa
(bad)
fdivrp
pop
mov
xchg
adc
fs
inc
and
retf
push
les
movs
cmps
loope
ror
sti
sub
rol
jns
shl
cmps
mov
pop
test
leave
ins
sahf
fwait
dec
in
call
std
and
pop
std
movs
movs
js
imul
cdq
sbb
outs
(bad)
mov
sbb
out
fist
inc
sbb
mov
add
sbb
sub
lods
xchg
mov
dec
xor
pushf
pop
aas
push
pop
xor
adc
pop
push
nop
xor
ret
inc
loopne
xchg
jp
(bad)
mov
loop
lds
int3
and
fcomp
pop
mov
adc
xlat
test
push
jb
mov
cmp
dec
or
or
ret
jnp
jae
vrcpps
je
sub
jecxz
ins
push
push
cmp
test
mov
xchg
jbe
mov
cmp
cmc
mov
out
push
imul
add
out
xchg
mov
shl
xchg
hlt
mov
push
or
mov
inc
and
ja
push
nop
mov
out
(bad)
cmp
cmc
cmc
add
lea
sahf
ficomp
out
shr
xchg
lahf
data16
(bad)
mov
icebp
hlt
xchg
dec
fs
mov
rcr
jno
push
fild
adc
push
fs
jae
mov
ret
scas
add
shl
dec
push
nop
dec
xchg
stos
leave
fs
(bad)
fbld
push
fld
push
fwait
sub
push
pop
adc
sbb
pop
dec
inc
(bad)
lds
jnp
adc
repz
ret
in
add
cli
cs
shr
stc
ffree
mov
gs
inc
xchg
push
xor
std
addr16
jns
fwait
pop
imul
jae
out
test
pop
outs
pop
mov
hlt
cmp
dec
inc
xchg
jge
(bad)
aaa
jnp
adc
ret
mov
mov
in
out
(bad)
and
test
data16
push
imul
(bad)
gs
jns
pop
jae
loopne
cmp
out
inc
lahf
repnz
aad
mov
cmp
icebp
or
cmp
fmul
lods
out
pushf
ret
jnp
ror
mov
sub
or
or
add
repnz
les
sbb
cmp
pop
sbb
mov
imul
mov
fnstenv
(bad)
outs
pop
pop
sub
mov
mov
imul
(bad)
into
push
sbb
and
xor
(bad)
pop
data16
leave
(bad)
mov
cld
call
pop
shl
pop
xor
add
out
mov
addr16
mov
or
adc
arpl
inc
and
popf
push
dec
sbb
mov
stc
(bad)
push
shl
jo
adc
add
push
jg
xor
push
adc
sbb
cmp
fisttp
xchg
adc
into
fwait
jg
sbb
sub
ror
test
or
jg
(bad)
sbb
fild
loope
mov
popa
rcl
fdiv
xchg
jecxz
pushf
sbb
adc
out
cdq
sbb
inc
mov
ds
add
std
sbb
jbe
out
sub
sbb
pop
dec
les
adc
call
cmp
dec
test
jno
sub
adc
sti
jle
lea
retf
outs
add
aam
test
xchg
add
jmp
sub
int3
popf
pushf
shr
xchg
jle
into
ret
jae
dec
sbb
push
call
movs
out
sub
and
fdivp
aam
jno
jne
or
sete
outs
call
mov
arpl
out
ret
jge
mov
jmp
jb
fdiv
pop
rcr
lods
addr16
cdq
imul
sar
stos
nop
retf
aad
loopne
add
(bad)
dec
xor
(bad)
(bad)
pop
test
xchg
cli
pop
mov
nop
jmp
jl
repz
sar
inc
xor
add
push
ja
adc
jno
sahf
push
mov
push
push
dec
call
jo
mov
mov
fcmovnb
add
outs
movs
into
mov
int3
sbb
jbe
cmp
dec
push
and
mov
and
scas
sti
(bad)
xor
in
scas
in
sahf
pop
inc
loopne
ss
push
push
movs
push
out
lods
test
bound
clc
or
jge
adc
push
ja
cmp
jp
shl
das
or
sub
into
inc
mov
(bad)
repz
and
shl
js
cmc
stc
push
rol
xchg
cwde
or
and
sti
outs
jl
mov
mov
mov
inc
cmp
pop
mov
(bad)
pusha
sbb
sahf
ret
sub
fild
mov
loop
xor
pop
dec
push
or
add
cmc
cmp
pop
shr
jae
mov
out
jmp
pop
and
xchg
and
fild
repnz
add
mov
inc
cs
dec
into
pop
out
push
sub
inc
repz
fimul
inc
arpl
xor
les
fidiv
mov
jne
sub
arpl
sahf
aaa
adc
jl
fsubr
sub
ins
pop
test
pop
xor
xor
xor
jmp
xor
adc
scas
dec
aad
or
loop
sub
sar
jne
addr16
sbb
or
cmp
mov
iret
pop
jg
push
popa
(bad)
pop
mov
push
icebp
mov
pop
sub
xchg
les
sbb
pop
adc
in
cmp
mov
je
sub
push
add
fs
pop
(bad)
and
or
scas
dec
jmp
mov
jl
mov
jmp
push
rcr
addr16
aad
push
test
push
jecxz
xor
adc
or
jae
inc
cmp
imul
imul
mov
fisttp
icebp
xchg
mov
jnp
adc
out
pop
inc
jl
scas
pushf
or
retf
pop
(bad)
xchg
adc
or
cmp
xor
add
push
outs
add
aam
cmp
xor
outs
loope
mov
pop
dec
enter
xor
movs
xor
test
nop
fidivr
das
(bad)
ins
shl
dec
repnz
push
sub
ins
les
cmp
mov
aad
or
inc
push
cmp
sub
adc
push
or
mov
dec
or
movs
inc
mov
sub
std
mov
dec
call
push
outs
arpl
cmovnp
xchg
jmpw
retf
xchg
mov
arpl
fsubr
aas
out
push
inc
aam
pop
and
jecxz
outs
(bad)
test
or
inc
lock
aas
xchg
cld
in
lods
retf
pop
loopne
pop
les
xchg
(bad)
ret
and
repz
adc
dec
and
mov
mov
or
cmp
icebp
arpl
push
lds
adc
and
inc
scas
pop
add
ret
xor
or
lods
btc
mov
adc
lock
out
cmp
stos
cli
popa
inc
xor
push
adc
mov
aam
idiv
pop
cmc
lahf
add
sub
mov
ss
enter
and
in
imul
xor
add
cli
xlat
bound
jle
mov
fdivr
mov
and
int3
adc
fistp
(bad)
push
push
int3
mov
pop
add
cmp
xor
stc
lahf
imul
add
mov
xchg
cmp
mov
sbb
xchg
sub
stc
mov
into
pushf
push
jno
or
std
in
cwde
cli
cmp
xchg
inc
jmp
adc
lods
adc
jmp
fadd
mov
or
sub
mov
xor
fadd
addr16
ins
test
push
xor
imul
push
and
adc
inc
sbb
(bad)
jmp
xlat
inc
ret
pop
rcr
pop
mov
mov
mov
or
bound
sbb
ror
mov
hlt
test
jecxz
xor
data16
push
dec
fs
call
adc
adc
bound
pop
push
jae
stos
loope
outs
adc
xchg
mov
push
cmp
fnstcw
mov
(bad)
mov
xchg
cmp
mov
lahf
mov
pop
mov
cdq
sbb
and
pop
in
sbb
pop
inc
adc
sub
enter
pop
inc
xchg
out
dec
xchg
sub
fild
in
fld
stos
sbb
stos
call
test
aas
cmp
rcl
outs
xor
pusha
sub
cmp
mov
jge
or
aaa
xchg
and
call
pop
stos
add
arpl
jo
mov
pop
xchg
adc
dec
pop
adc
push
xor
pi2fw
xchg
adc
(bad)
mov
xchg
push
inc
push
mov
mov
inc
fisubr
cli
call
imul
cmp
mov
scas
dec
cmp
jmp
dec
or
jge
sub
mul
outs
retf
shr
cmc
sar
idiv
cli
fwait
ds
lds
ins
into
idiv
cmp
ja
cmp
cmp
cmps
inc
scas
scas
inc
adc
cwde
test
fst
cs
mov
adc
or
mov
(bad)
cmp
and
es
sbb
enter
add
cld
das
movs
and
mov
in
push
add
stos
jmp
fsubr
jmp
and
and
dec
call
jle
xor
(bad)
sbb
push
(bad)
add
sbb
in
mov
jmp
xchg
lock
clc
rol
repnz
lods
in
cmc
xchg
mov
mov
xor
int
and
jmp
cwde
and
xchg
retf
dec
adc
mov
int3
imul
inc
(bad)
adc
lahf
dec
cli
push
xchg
push
cmps
xor
(bad)
mov
mov
test
jmp
or
retf
loope
mov
mov
add
fcom
mov
test
popa
pop
xchg
movs
pop
iret
jg
or
xor
cmps
clc
(bad)
not
in
lods
(bad)
loopne
sbb
popf
sahf
add
mov
xchg
cmp
arpl
mov
cmc
pop
lahf
es
pop
sub
shl
add
inc
dec
mov
lea
fwait
push
lods
shr
jmp
xor
dec
pop
int
das
xlat
push
neg
daa
cli
jp
add
loope
cld
mov
outs
add
jnp
(bad)
mov
daa
test
pop
sub
push
cmp
pop
test
sub
add
fsubr
mov
fstp
out
or
push
add
cmp
lea
pop
dec
lods
fdiv
push
rol
std
into
inc
ins
es
mov
xor
inc
into
inc
inc
add
call
or
stc
jecxz
test
xchg
arpl
push
ds
pop
into
push
inc
das
mov
shr
xchg
add
xchg
jmp
repnz
(bad)
movs
pop
es
jae
push
or
stc
leave
pop
and
xchg
ret
pop
shr
cld
jg
cmps
in
add
inc
lock
fidivr
ins
sub
push
xchg
push
dec
fisttp
adc
xchg
sub
push
retf
sub
inc
je
sub
or
sub
xchg
(bad)
ret
rol
out
jno
sub
mov
push
mov
cmps
int3
loope
sbb
pop
stos
mov
jmp
aaa
xchg
int3
ins
cwde
fs
inc
inc
sbb
mov
aad
call
enter
push
xlat
push
stos
adc
sbb
add
fidivr
movs
add
jmp
dec
mov
sbb
and
jge
loopne
ret
das
mov
movs
loopne
jl
fcomi
int3
mov
ret
xchg
es
(bad)
fbld
xor
jmp
fidiv
outs
jmp
lahf
out
iret
ins
das
push
inc
repnz
push
dec
adc
sbb
loop
or
jp
and
xor
retf
jle
loopne
loope
sbb
test
imul
das
xchg
or
mov
adc
les
rcl
out
adc
ins
xor
mov
fldcw
movs
add
xchg
mov
shl
imul
push
ins
ret
and
fcom
repz
dec
sub
jecxz
add
aaa
scas
aaa
in
in
sub
test
dec
fidivr
xor
push
mov
sahf
add
idiv
test
mov
fstp
inc
imul
das
adc
(bad)
mov
dec
cmp
in
xchg
mov
mov
fs
outs
xchg
and
push
es
scas
xor
aas
cmp
jno
out
div
xchg
xor
adc
repnz
xchg
xor
lahf
xor
jmp
pop
pop
adc
adc
ins
popf
std
or
adc
pop
cdq
scas
cmp
dec
adc
adc
push
out
leave
lds
in
clc
aaa
call
lahf
leave
and
cmp
and
jmp
out
mov
shl
jae
xor
pop
and
cmp
jb
add
jb
lds
into
in
std
and
rcl
cmp
jno
stc
pop
jmp
cmp
lock
xor
inc
mov
push
push
lea
xor
ins
and
and
push
mov
sti
pop
rcl
movs
lods
mov
pop
sbb
or
test
sbb
hlt
mov
and
or
cmps
and
adc
int3
xor
xchg
sub
and
stc
out
xchg
and
and
das
ins
aad
xor
mov
push
pop
cmp
cs
sub
enter
scas
add
idiv
mov
jg
xchg
daa
ret
sub
mov
ss
jae
retf
inc
ja
cmp
in
in
rol
push
int
mov
inc
in
push
and
jno
pushf
bound
mov
cmc
cwde
jp
dec
pcmpeqw
pop
jmp
push
adc
aad
push
and
mov
pop
test
inc
add
inc
in
mov
jbe
fadd
je
cmp
xor
mov
and
jmp
std
(bad)
and
xchg
sbb
adc
imul
(bad)
popf
mov
xchg
inc
cmp
movs
jns
idiv
imul
mov
stos
(bad)
ret
add
out
pusha
xor
sub
cmps
and
arpl
fiadd
xlat
hlt
test
xor
mov
test
dec
mov
jae
and
ret
jmp
jne
sub
xor
sub
(bad)
push
adc
rcl
iret
and
fmul
loop
pop
icebp
stos
pop
aad
push
xor
and
lahf
popf
stos
mov
push
loop
dec
dec
and
dec
into
jle
mov
pop
pushf
and
xchg
push
sbb
mov
or
les
mov
fwait
xor
dec
setae
outs
add
mov
and
add
shl
jbe
fcomp
not
ds
sar
sar
fld
cmp
or
iret
or
sbb
mov
cmp
repz
test
lock
sbb
out
or
mov
popa
adc
inc
jo
aaa
adc
dec
sub
leave
pop
pop
cld
dec
mov
pop
xor
lods
sbb
inc
stos
mov
lds
fst
iret
mov
xchg
(bad)
imul
xchg
mov
mov
dec
or
lods
mov
fdiv
mov
nop
cli
jno
out
dec
xor
aas
fst
aam
inc
arpl
xlat
push
push
push
leave
aam
lds
repz
push
mov
sub
mov
inc
push
add
repz
movs
cmps
ins
xchg
and
sbb
mov
or
push
sbb
xor
lods
dec
mov
pop
xor
pop
xor
mov
or
fs
mov
(bad)
add
mov
cdq
jae
jne
xchg
fwait
cmp
xchg
and
loope
pop
adc
mov
loop
dec
outs
add
shr
push
popa
jns
ins
adc
add
sbb
sub
dec
jle
dec
push
xchg
xor
fadd
js
jge
call
push
jp
stos
mov
into
popf
sbb
xor
imul
daa
jmp
cmps
inc
xor
lock
shr
addr16
stos
stc
inc
inc
(bad)
popa
inc
fisttp
call
push
mov
mov
xchg
lea
sbb
xlat
test
(bad)
aad
mov
inc
iret
movs
fcom
mov
and
inc
test
fimul
dec
retf
jmp
inc
push
into
xor
sbb
jecxz
rcr
dec
(bad)
rep
sub
jecxz
gs
jl
inc
push
cmp
mov
repnz
adc
cs
test
sub
test
or
js
mov
addr16
sbb
push
xchg
push
sub
inc
pop
inc
jge
call
(bad)
clc
scas
mov
ja
inc
mov
iret
pop
jbe
loop
cmp
(bad)
jge
fs
and
cdq
push
adc
sbb
sahf
in
xchg
pop
sbb
outs
xchg
out
jo
jle
push
dec
ja
cwde
cdq
adc
fsubr
(bad)
div
out
dec
add
mov
xchg
cmp
or
std
pop
jge
adc
mov
xchg
pop
dec
(bad)
not
jmp
sbb
xor
xchg
xchg
js
and
and
mov
and
push
stos
or
push
cwde
(bad)
retf
adc
mov
fstp
int3
jmp
out
and
jl
sbb
xor
mov
pop
mov
cld
mov
push
stc
aas
(bad)
sub
cld
cmp
xchg
inc
ret
call
fbstp
mov
sbb
jae
(bad)
fisttp
sub
sbb
push
leave
in
fs
iret
mov
ror
xchg
aaa
pop
lock
imul
scas
adc
and
scas
push
cmp
push
cli
call
mov
xor
out
and
push
call
sbb
fistp
mov
xor
int3
mov
imul
jl
jnp
pop
popf
mov
ss
dec
mov
fs
sar
hlt
jg
aas
stos
mov
data16
rcr
and
cmps
and
xchg
jmp
loop
and
sub
mov
arpl
ficomp
mov
mov
fdivr
xchg
push
mov
jns
push
xchg
pop
push
mov
ret
xchg
out
push
xchg
imul
sub
adc
pushf
aad
movs
xlat
mov
mov
inc
mov
jmp
inc
pop
adc
xchg
jne
mov
cmc
dec
lods
not
pop
lods
pop
rol
ret
jbe
scas
mov
rcl
mov
mov
fimul
daa
ret
test
int3
push
inc
jmp
and
mov
out
ror
adc
nop
stos
mov
inc
fucomip
mov
iret
jne
xchg
jp
sbb
imul
inc
dec
ficomp
dec
mov
mov
cli
aaa
and
call
outs
adc
leave
xlat
int
pop
aaa
cli
pop
outs
mov
and
in
sub
dec
nop
adc
inc
sub
fwait
pop
jle
dec
fs
test
jecxz
xchg
fwait
push
xchg
scas
push
pop
sbb
push
dec
mov
and
add
and
xor
xchg
mov
dec
es
test
cmps
and
jecxz
push
sub
ror
pop
pop
pop
sbb
sbb
push
loopne
sub
daa
ror
push
sbb
pusha
inc
sbb
je
adc
popf
push
(bad)
mov
xchg
lahf
jb
mov
dec
or
sti
adc
inc
adc
xchg
mov
ficom
inc
mul
sbb
lods
sbb
fwait
(bad)
les
repz
mov
cwde
gs
mov
pop
not
xor
sbb
inc
retf
jl
imul
push
out
test
call
mov
mov
enter
dec
daa
mov
(bad)
test
mov
mov
mov
sub
inc
scas
xor
mov
adc
ud2
fldcw
and
cmp
lods
add
sbb
lock
push
stos
popa
add
or
jg
cmp
mov
popf
xchg
stos
das
mov
push
retf
pop
lea
aad
jecxz
mov
shl
cmp
das
fadd
push
xor
jbe
pop
add
push
iret
mov
cdq
fsubrp
dec
cmp
cmp
push
push
push
cdq
ret
ss
lods
dec
pushf
(bad)
sub
popa
mov
ja
(bad)
stc
pop
pop
out
retf
outs
inc
add
clc
add
movs
in
es
pop
dec
and
int
stc
xchg
sub
adc
retf
setbe
icebp
arpl
pop
addr16
jns
or
xor
inc
loopne
je
xchg
and
repz
add
out
add
aaa
sbb
and
hlt
int3
retf
add
loopne
xlat
icebp
jecxz
add
popw
xchg
in
movs
push
leave
mov
test
ret
jmp
mov
dec
cld
jbe
retf
mov
push
xchg
fcomi
(bad)
jae
jg
leave
je
jmp
dec
fldz
daa
pop
jge
sbb
mov
xor
mov
fs
xchg
jne
inc
push
mov
cld
cmps
mov
and
cmp
dec
fisub
inc
les
test
paddb
call
jge
sub
pop
xor
sbb
xchg
pop
into
mov
inc
push
fwait
mov
cdq
add
dec
adc
add
or
add
pop
(bad)
push
jecxz
pop
jb
lea
std
lahf
add
mov
and
cld
mov
lods
pop
xchg
test
cmp
dec
mov
mov
bnd
out
dec
sti
(bad)
xchg
(bad)
loop
sbb
push
bound
add
jno
mov
pop
(bad)
(bad)
xchg
mov
and
mov
sbb
dec
je
ficom
sub
xchg
jp
push
aaa
ins
xchg
adc
mov
movs
jns
inc
mov
or
mov
out
add
xor
gs
aad
(bad)
ss
add
in
rol
sub
retf
in
in
ss
loopne
js
gs
test
fstp
lahf
inc
arpl
or
inc
setns
(bad)
ret
jns
mov
pop
aad
cmp
imul
mov
into
popa
movs
inc
daa
push
jecxz
ret
repnz
mov
lea
mov
outs
jne
sub
out
mov
cmp
sbb
pop
(bad)
push
clc
dec
mov
js
fdivr
push
sahf
retf
sbb
test
shr
in
mov
mov
pop
retf
adc
cmp
in
in
cwde
mov
mov
push
add
call
and
xchg
xor
stos
inc
cmp
ret
adc
mov
adc
xor
sbb
xlat
pop
xchg
fcomp
daa
ins
retf
push
add
or
dec
out
in
fisubr
out
push
sub
sbb
sbb
(bad)
jbe
cdq
fs
cmp
sbb
jns
iret
dec
or
push
stos
jnp
(bad)
rcl
mov
adc
mov
jmp
push
adc
or
jo
xchg
mov
adc
es
adc
mov
xor
inc
push
sub
cmps
ret
mov
pop
or
xchg
fs
stc
sub
ins
dec
push
push
stos
ja
mov
shl
push
out
test
addr16
test
mov
test
xor
div
aad
and
push
ja
mov
popf
mov
add
test
adc
mov
or
lods
in
out
dec
shr
in
xor
sub
jge
ds
imul
adc
stos
or
jge
inc
cdq
mov
and
aam
fwait
jo
fcom
rol
pop
dec
fstp
pop
or
dec
mov
pop
sahf
fwait
inc
and
test
xlat
shr
(bad)
dec
(bad)
and
fidivr
mov
out
in
stos
add
dec
jns
out
daa
or
mov
xchg
jl
mov
and
sub
push
add
push
push
push
stc
and
les
inc
shl
xchg
test
jae
mov
imul
fs
hlt
mov
mov
adc
mov
aad
mov
jmp
mov
mov
xor
ds
jmp
mov
leave
test
jmp
ds
pop
xlat
cwde
cmps
push
pop
in
ret
xchg
pushf
sbb
std
jmp
xor
and
mov
fisub
dec
(bad)
sti
xchg
retf
pusha
adc
adc
lahf
cmp
sbb
test
hlt
aad
rcl
call
pop
in
leave
nop
cmp
dec
in
popa
push
dec
mov
loopne
ror
imul
nop
stos
fiadd
jno
popa
push
or
into
les
pop
cmp
pop
inc
jp
std
dec
and
mov
xor
aad
add
movs
jle
lahf
ja
dec
repz
xchg
mov
cmp
cmp
inc
sbb
xchg
loopne
aam
sub
jo
test
sbb
leave
ret
aam
loope
je
mov
mov
arpl
add
outs
pop
ret
mov
push
or
enter
fisubr
fsub
cmp
test
not
adc
gs
push
int3
mov
inc
loopne
mov
pop
sbb
jae
pusha
add
call
aam
cmps
scas
jmp
pop
jp
fcomp
dec
dec
jb
and
call
sar
popa
sbb
out
rcr
leavew
(bad)
repnz
inc
(bad)
pop
neg
std
aam
push
loopne
mov
outs
jl
pop
xlat
push
sahf
mov
inc
call
mov
stc
rol
imul
rol
push
push
pusha
dec
sar
in
stos
fs
mov
mov
and
inc
cmp
inc
cmp
sub
add
jns
mov
mov
stc
or
fild
jae
mov
adc
push
adc
loop
add
repnz
fwait
rcr
add
xchg
movs
sub
imul
mov
loop
mov
and
stos
mov
cdq
xor
les
mov
xor
jmp
mov
push
ret
stc
sahf
dec
jae
(bad)
cmp
ins
in
or
(bad)
push
inc
mov
adc
repz
mov
sub
xchg
into
test
xor
outs
add
ins
mov
dec
mov
mov
repnz
sbb
dec
pop
cld
mov
and
and
mov
cmp
xchg
aad
and
pop
in
xlat
xor
push
xchg
gs
mov
in
loope
int
pop
adc
xor
mov
adc
jl
mov
(bad)
out
aas
inc
dec
xchg
inc
jmp
aaa
or
repnz
cdq
jge
add
adc
mov
popf
dec
test
dec
jmp
out
push
mov
push
sbb
imul
outs
call
lock
mov
adc
(bad)
pop
xor
sub
pushf
lock
mov
sub
sar
xor
aas
inc
adc
jp
std
dec
lock
sub
test
inc
lock
sbb
out
jbe
cld
xchg
outs
cmp
mul
idiv
sbb
xchg
retf
push
iret
and
mov
sub
je
rcl
push
arpl
sti
retf
rol
out
jecxz
mov
mov
fisubr
dec
jp
xchg
xchg
add
mov
aaa
sub
sub
sar
repnz
add
inc
shr
xor
sbb
mov
and
mov
sbb
mov
cmp
push
xchg
add
inc
fsub
cli
out
mov
jo
mov
mov
(bad)
and
mov
jmp
cmp
mov
pop
loopne
das
dec
jle
sub
shl
or
dec
and
jbe
nop
xor
cmc
jmp
adc
xchg
cwde
mov
in
dec
fld
mov
in
sti
out
push
dec
add
pop
jmp
jg
cmc
nop
lods
icebp
inc
inc
psubsw
xchg
xchg
and
ds
arpl
push
mov
or
fdivr
loop
add
xchg
scas
mov
pop
(bad)
lds
dec
mov
sub
out
hlt
jg
inc
cmp
sbb
mov
inc
repz
ret
cli
pop
adc
cdq
or
jp
jno
push
push
loop
pop
aad
adc
out
jae
cmp
cmp
out
vpunpckhwd
dec
jg
jp
adc
lds
jmp
push
xchg
scas
retf
inc
rol
rcr
cli
int3
adc
mov
xchg
cmp
adc
div
sub
push
div
lods
mov
mov
mov
lahf
and
dec
outs
sub
mov
and
pop
data16
cmp
imul
jbe
jbe
(bad)
(bad)
imul
in
or
dec
xchg
in
into
mov
fadd
mov
dec
xor
add
pusha
imul
sbb
daa
shl
add
adc
cmp
outs
dec
loop
inc
jmp
inc
cmp
loop
inc
jbe
shl
pushf
jp
movs
sbb
loop
lods
add
push
jge
out
jecxz
cmps
std
mov
xor
dec
sti
mov
retf
in
push
dec
cld
dec
mov
(bad)
or
xchg
or
push
cmc
cmps
pop
mov
mov
sbb
lods
fucomi
sub
mov
and
jle
inc
sbb
test
loope
jmp
retf
in
jp
add
sbb
lock
bnd
cmp
ret
(bad)
cmp
xchg
xlat
icebp
push
jge
je
push
in
jns
stc
xchg
cmp
jg
inc
imul
mov
mov
inc
lahf
test
jg
jmp
sub
push
aad
scas
mov
xor
jecxz
inc
cmp
daa
sbb
jle
fcom
push
dec
mov
imul
sub
aaa
fld
inc
jb
mov
outs
lods
xchg
shl
mov
adc
pop
out
dec
jmp
sbb
dec
(bad)
xor
cmp
adc
retf
mov
rol
lahf
scas
rol
add
cmps
xor
xlat
or
ret
jns
or
sub
cld
pop
(bad)
les
(bad)
(bad)
hlt
imul
stc
mov
adc
lahf
fucomi
dec
(bad)
fsubr
and
xor
(bad)
add
sub
cmp
gs
mov
or
add
lods
adc
mov
ud1
sub
cmp
cwde
mov
and
iret
mov
pop
push
lahf
xor
jo
(bad)
pop
call
out
lock
lahf
(bad)
xlat
mov
cmp
(bad)
(bad)
or
mov
sahf
rcl
hlt
xchg
xchg
mov
lds
rcl
std
lods
pop
repnz
adc
cmp
fisttp
sar
xor
push
retf
cmp
sub
fidivr
fld
mov
arpl
and
cmp
cmps
stos
stos
adc
jmp
cmp
and
mov
xchg
mov
dec
or
or
iret
push
lods
rol
add
in
out
mov
mov
jns
add
into
arpl
lea
les
mov
jns
mov
popa
sub
scas
test
arpl
pop
fwait
jae
jl
xor
mov
xor
out
lods
in
fbstp
push
pusha
in
dec
lods
sahf
sub
push
jbe
(bad)
fucomi
rcl
cmp
mov
inc
pop
pusha
adc
stos
fimul
test
mov
loopne
jae
stc
and
into
xchg
shl
jno
aad
xor
hlt
xor
or
xchg
mov
imul
add
mov
mov
int
addr16
mov
cmp
popf
pop
test
push
pop
push
push
inc
in
dec
fdivr
(bad)
(bad)
fisttp
in
jg
jne
sub
jnp
int3
scas
mov
push
test
cmp
addr16
push
xor
popaw
or
mov
mov
mov
xchg
ficomp
sub
mov
jge
mov
xchg
test
cmc
pop
outs
ss
inc
movs
std
stos
cmp
xor
jnp
dec
dec
jle
loopne
lea
ret
fwait
pop
(bad)
das
outs
mov
xchg
mov
(bad)
push
cmp
adc
fistp
mov
xchg
ja
mov
and
mov
or
mov
imul
lea
mov
jns
inc
sub
(bad)
outs
mov
sub
or
or
xchg
imul
or
sbb
xor
jecxz
scas
cmpxchg
je
cwde
js
ret
cmp
mov
mov
push
xor
sbb
(bad)
mov
stos
fst
test
sub
add
pusha
add
ds
or
push
jb
jmp
push
jp
mov
and
inc
sub
jbe
sub
test
or
das
push
(bad)
push
das
addr16
movs
xchg
test
outs
int
nop
mov
lds
gs
ins
stc
push
cld
in
lea
stos
jp
inc
cmps
nop
dec
dec
mov
mov
sub
rcr
fs
mov
fs
sti
mov
push
dec
jp
pop
ret
(bad)
adc
loope
jge
ins
aad
push
pop
popf
mov
les
sti
jmp
inc
dec
add
pop
add
and
inc
cli
out
mov
or
retf
or
dec
iret
dec
mov
fnstcw
xor
imul
cmp
(bad)
push
push
xor
adc
ficomp
xchg
scas
js
pusha
adc
gs
sub
dec
ja
pop
ins
inc
ds
les
jb
imul
push
movs
xchg
mov
lods
xor
xlat
push
dec
pusha
imul
mov
iret
pop
jns
or
aas
lahf
sub
push
jne
xchg
imul
ss
cmp
dec
add
lods
repnz
mov
(bad)
jge
loopne
bound
xor
or
pop
mov
xor
or
cmps
mov
aad
dec
push
movaps
or
cmp
pop
or
ins
scas
adc
jmp
and
in
push
mov
(bad)
out
xor
cwde
cmps
pop
lods
(bad)
pop
in
mov
dec
adc
stc
pop
mov
lea
or
sbb
or
cmovbe
mov
cdq
dec
add
jbe
scas
cmp
mov
lahf
mov
xor
inc
mov
adc
dec
cmp
push
into
dec
sbb
xor
sbb
adc
cmp
(bad)
pusha
inc
aam
sbb
xchg
fxch
shr
sbb
mov
dec
or
mov
sar
fldcw
sub
test
je
retf
or
arpl
dec
shr
aas
sar
xchg
push
cmp
out
jecxz
out
enter
sar
add
jg
jae
mov
dec
mov
mov
popa
push
cmp
movs
imul
pop
stc
jl
jne
popa
imul
mov
xchg
jg
jge
(bad)
(bad)
fisttp
(bad)
int3
std
js
and
lods
inc
shl
stc
fsubp
pop
jmp
dec
jecxz
movs
into
enter
pusha
sbb
fldcw
cli
sbb
aas
cmps
adc
jbe
pop
and
in
adc
adc
mov
rcr
ret
dec
ja
test
dec
cdq
and
mov
xor
inc
xor
loop
add
mov
lahf
fsubr
sti
pushf
adc
std
mov
scas
popa
pushf
sub
(bad)
sbb
add
adc
lea
xor
inc
fstp
(bad)
jmp
shl
out
jg
jns
jge
and
adc
cmps
lea
add
cmp
lock
and
inc
and
out
retf
out
fwait
retf
in
loopne
sbb
mov
lods
adc
push
es
ins
movs
xor
pop
lea
int3
pop
lods
(bad)
jp
add
cmp
arpl
push
xchg
sub
jns
push
mov
psubusb
xchg
add
ds
retf
shl
fdivrp
jl
scas
(bad)
sub
cmc
out
cmps
fs
add
sub
lds
aas
pop
pop
jl
sahf
inc
mov
rcl
retf
sbb
outs
gs
dec
ds
je
retf
xchg
cwde
ror
cmp
mov
es
outs
mov
jg
mov
aaa
mov
add
repnz
pop
(bad)
and
enter
fwait
pop
sbb
pop
dec
mov
imul
jno
mov
jecxz
sub
push
adc
inc
sbb
xor
inc
jg
movs
daa
sub
pop
movs
mov
sub
xchg
cmp
push
movs
push
idiv
cmp
(bad)
xor
jp
clc
inc
in
(bad)
mov
ja
cmp
xchg
iret
xor
jo
int3
pushf
mov
and
jnp
xchg
cmp
scas
sub
das
mov
ds
xor
(bad)
jnp
cs
bound
in
imul
mov
dec
mov
ficom
and
or
dec
sbb
aas
mov
js
loope
ds
(bad)
loopne
or
and
or
inc
xor
jp
cmps
shrd
inc
enter
ror
inc
call
or
mov
cmp
xchg
ret
rep
jns
mov
cmps
popf
sti
xchg
daa
add
mov
and
in
dec
xchg
ficomp
mov
das
xchg
test
jg
mov
sti
push
pop
push
xchg
or
lahf
mul
jo
call
arpl
sub
cmp
jge
jae
add
stos
push
gs
adc
rcr
and
(bad)
jl
push
fcmovnu
mov
xor
mov
and
pop
fisub
dec
addr16
in
test
fidivr
test
fdivr
inc
xor
pop
push
arpl
in
jns
sar
movs
test
ss
cdq
stc
call
fcom
mov
xchg
pop
pushf
enter
enter
sbb
ret
sbb
sahf
add
inc
call
sbb
inc
in
stc
add
mov
jmp
stc
call
jmp
mov
icebp
cmp
lea
jge
or
mov
push
ss
retf
sbb
mov
fwait
jae
add
gs
es
clc
jp
cmp
jnp
or
xchg
cmp
xchg
add
cdq
pop
xor
sub
repnz
xchg
jl
(bad)
cld
dec
mov
jbe
shld
int
icebp
xor
xchg
js
mov
ror
inc
das
and
sbb
adc
add
xchg
dec
xchg
push
enter
(bad)
in
xchg
sub
gs
cmp
leave
jge
push
xchg
call
fs
sahf
jbe
jg
sbb
sub
add
cmp
sub
pop
jecxz
dec
movs
mov
and
out
mov
push
pusha
es
aas
cmp
sbb
add
(bad)
jns
test
loope
sbb
(bad)
loopne
lods
inc
jb
loopne
jmp
sbb
int3
in
lods
adc
cmp
js
lea
cmp
es
pop
mov
idiv
jne
int3
imul
adc
jmp
out
add
dec
and
add
daa
jnp
shl
cmp
add
je
mov
aaa
xchg
xlat
and
push
lods
or
xchg
cmc
imul
pop
in
(bad)
fiadd
sub
or
fisttp
fistp
stos
stc
ret
sahf
sub
cmc
add
lahf
rep
mov
mov
pop
gs
inc
pop
(bad)
enter
inc
cmp
sub
es
mov
jno
jmp
mov
mov
(bad)
test
leave
cld
in
aad
sub
stos
mov
inc
mov
dec
shr
mov
xor
mov
fbstp
rcr
mov
sbb
xor
stc
add
js
xor
(bad)
jge
and
outs
inc
push
mov
outs
in
push
or
mov
and
mov
imul
dec
jg
mov
nop
lea
cmp
bound
movs
mov
jmp
clc
add
pop
cmp
mov
xchg
retf
xor
mov
lods
xor
pop
(bad)
push
ror
xchg
shl
xchg
cmps
stos
stc
clc
les
adc
mov
data16
jmp
add
call
push
sbb
lock
pop
mov
jns
shl
inc
adc
xchg
add
dec
push
pop
aad
cmp
pop
movs
pop
ins
sub
ret
cmp
dec
out
xchg
push
(bad)
ficomp
xchg
iret
pop
pop
add
jb
out
ins
sub
movs
push
and
imul
(bad)
or
xchg
mov
inc
or
fstp
mov
and
sahf
xlat
stc
call
and
shl
inc
cs
mov
push
xchg
adc
dec
test
sahf
aaa
jnp
xor
jmp
comiss
mov
fadd
repz
push
loopne
inc
es
jnp
cmp
stc
scas
in
aas
enter
scas
in
fnstcw
mov
retf
xchg
fiadd
xlat
sub
popa
pushf
and
jnp
(bad)
scas
aaa
mov
addr16
push
cmp
and
ret
dec
std
xor
retf
add
dec
shl
inc
outs
mov
sub
mov
outs
sub
sahf
push
cmp
inc
repz
push
leave
dec
call
out
dec
fisubr
xchg
popf
add
mov
cli
bound
cdq
mov
jecxz
add
mov
outs
cld
gs
aam
sub
push
test
pop
ficomp
outs
pop
in
jp
xchg
jg
push
xchg
mov
or
div
xor
addr16
cmps
fwait
ins
in
nop
jmp
push
or
leave
and
mov
pop
loope
lock
jecxz
sbb
adc
inc
repnz
push
sahf
dec
enter
inc
pop
sub
inc
mov
xchg
test
std
xchg
jo
imul
test
jp
and
sti
adc
jo
out
in
sar
test
jmp
stos
cwde
fs
jmp
add
test
daa
das
sbb
mov
clc
mov
mov
adc
mov
sub
addr16
iret
xchg
sub
push
xlat
jmp
clc
das
cld
or
stos
sub
sub
adc
jbe
pop
cli
mov
stc
cmps
(bad)
xchg
loope
fpatan
cmp
cld
mov
cmp
cmp
adc
mov
stc
dec
sub
jge
out
inc
in
xchg
mov
sahf
pusha
(bad)
lods
fcomp
cwde
movs
aad
loopne
pop
adc
inc
movs
arpl
enter
and
mov
or
and
sti
push
aam
mov
inc
mov
cmps
fcomp
mov
cmp
dec
popa
hlt
(bad)
pushf
xchg
call
jno
jnp
mov
jg
idiv
add
ror
clc
mov
push
jo
aaa
add
jmp
adc
mov
inc
dec
mov
push
push
into
add
test
push
int
in
cwde
or
loope
stos
jmp
jmp
mov
es
cmp
sti
dec
loope
sbb
push
inc
sub
je
mov
push
jp
test
(bad)
in
mov
jge
movs
outs
pop
iret
in
cld
inc
sub
aas
jno
mov
push
dec
icebp
aaa
ins
xchg
sub
xchg
jns
fwait
call
fdiv
and
mov
sti
pop
xor
cwde
mov
jo
add
scas
mov
sbb
or
test
lea
cmp
mov
lahf
mov
push
xchg
pop
ror
mov
in
add
sbb
in
pushf
xor
pop
stc
es
shr
and
xchg
sar
mov
push
push
ffree
repnz
dec
fbstp
and
js
xor
pop
jg
inc
fst
cmp
jg
stc
dec
xor
mov
jno
dec
ret
icebp
jae
sbb
shr
ds
and
cwde
mov
cmp
rol
jno
mov
arpl
or
cld
sbb
test
mov
retf
ds
lods
int
pop
arpl
mov
sbb
jb
adc
jns
fwait
cmp
shl
and
ss
daa
not
inc
in
dec
add
add
(bad)
xchg
gs
jne
imul
push
push
adc
mov
pop
clc
mov
std
cdq
jg
mov
xor
and
jge
adc
push
fcomp
aas
cmc
mov
psubq
addr16
mov
inc
xor
sub
jmp
shl
sbb
hlt
sbb
(bad)
outs
popf
push
push
stos
scas
hlt
dec
cs
xchg
mov
(bad)
pop
dec
stos
mov
and
cdq
add
sbb
movs
ds
retf
xchg
mov
mov
push
inc
leave
inc
dec
mov
shr
and
div
push
inc
pop
sub
add
fwait
test
mov
ret
in
mov
jnp
push
(bad)
sbb
inc
sbb
mov
rcr
xor
adc
add
add
in
out
dec
jnp
test
ds
xchg
mov
iret
mov
ret
leave
inc
and
sbb
mov
div
ret
adc
adc
dec
mov
add
xchg
retf
mov
dec
dec
push
or
push
pop
jbe
sbb
inc
mov
(bad)
clc
scas
dec
xor
jne
data16
nop
fisttp
or
arpl
or
sahf
outs
push
inc
pop
jns
clc
jno
jge
jbe
sbb
retf
les
jl
xchg
xchg
lods
jno
hlt
stc
mov
das
sbb
dec
jb
fld
les
hlt
fmul
push
cdq
(bad)
sti
mov
xchg
xchg
xchg
stc
lahf
adc
rol
sar
sub
jmp
popf
push
ja
dec
stos
(bad)
test
(bad)
lahf
gs
lock
arpl
xor
inc
push
push
cld
add
jle
int
ds
jns
(bad)
cmp
add
mov
rcr
pop
dec
and
(bad)
lahf
cld
je
inc
push
jbe
dec
xor
add
dec
mov
xchg
cmp
ins
in
push
xchg
dec
or
out
lock
jg
inc
in
mov
(bad)
js
mov
cmc
cmp
test
cmp
inc
jg
mov
loope
jmp
mov
repnz
cmp
sbb
sub
xor
inc
in
nop
pop
mov
jmp
mov
test
jbe
rol
call
clc
jbe
or
fistp
xchg
jns
inc
popf
inc
add
sbb
pop
ss
xor
push
sub
mov
push
mov
xor
stc
pop
adc
inc
cwde
out
adc
xchg
(bad)
mov
popf
adc
aas
adc
aaa
mov
outs
sub
popa
push
inc
outs
addr16
iret
cmp
cs
adc
call
cmp
pop
xchg
stos
hlt
out
jae
add
mov
(bad)
dec
xor
sbb
mov
pop
sti
stc
dec
inc
cmp
lea
pushf
test
jp
push
dec
push
pop
and
ja
das
xor
mov
clc
jno
popa
xchg
push
cwde
push
into
push
xchg
sar
or
push
xor
pop
nop
lods
jns
cs
sub
mov
inc
jmp
scas
adc
popf
mov
pop
dec
xchg
(bad)
push
mov
or
adc
push
and
add
jnp
push
movd
add
rcl
sub
mov
hlt
ret
adc
jg
mov
enter
ja
stc
fadd
ror
add
add
repnz
inc
mov
gs
outs
inc
adc
les
push
dec
fwait
out
add
into
push
lods
test
fninit
add
retf
into
ror
cli
out
inc
jle
pop
cmp
adc
rcl
dec
daa
(bad)
pushf
sahf
push
bnd
ror
cmp
or
inc
mov
xor
dec
addr16
(bad)
ins
sub
cmps
call
fsub
xor
in
dec
ss
or
outs
rcr
mov
into
scas
push
stc
call
scas
and
das
mov
dec
xchg
jnp
cdq
or
movs
inc
or
cld
push
rcr
pop
cwde
stos
mov
ins
jnp
leave
test
les
inc
sub
pop
jecxz
xor
sub
jbe
jl
adc
stos
xor
fldenv
xchg
xor
ret
pop
bound
rol
xchg
test
js
inc
mov
pushf
add
aaa
jne
fprem
loopne
mov
test
call
sbb
ja
jb
jmp
sub
adc
inc
mov
mov
sub
xchg
movs
xchg
mov
ins
(bad)
add
lods
cld
push
pop
or
out
adc
mov
scas
push
sbb
les
push
xchg
xchg
repnz
test
inc
(bad)
add
lock
or
jmp
ins
xchg
and
cli
aam
sbb
sub
lock
ja
mov
into
(bad)
xchg
loop
sbb
pop
(bad)
hlt
scas
mov
ret
retf
popa
push
into
aad
dec
jmp
ds
mov
test
cmp
repnz
sub
cmp
(bad)
leave
bnd
es
add
dec
xor
mov
loopne
lds
push
cs
push
xor
scas
je
pusha
mov
iret
cmp
cmp
aas
jle
cmc
imul
in
mov
into
or
call
and
hlt
add
or
fmul
mov
and
pop
cmp
sub
js
in
pop
dec
and
int3
add
pop
pop
pusha
push
in
and
xchg
add
xchg
mov
mov
cmps
push
les
or
and
cmc
xor
push
and
iret
out
popf
enter
inc
(bad)
dec
sub
push
js
and
loopne
jmp
sbb
mov
outs
sub
std
movs
clc
cmps
inc
call
or
xchg
cmp
jmp
jg
test
ds
xchg
cmp
ss
mov
cmps
aam
fs
frstor
repnz
mov
fistp
test
mov
add
retf
jl
push
cld
test
jb
dec
loopne
mov
mov
lods
mov
outs
call
in
mov
and
leave
push
mov
dec
and
mul
loope
jge
cmp
sbb
and
jge
(bad)
jg
inc
clc
int
outs
cli
inc
aas
push
jge
gs
loopne
jl
push
jmp
jl
das
inc
push
nop
(bad)
es
or
nop
dec
mov
ss
shr
inc
out
xor
arpl
adc
and
xor
popa
xor
pop
xor
inc
in
or
arpl
scas
dec
mov
ret
mov
push
mov
jae
cmp
pop
arpl
movs
cmp
popa
xchg
and
les
lea
pop
outs
outs
das
mov
xchg
pop
loope
popf
repz
stos
cli
xchg
push
adc
add
cmps
mov
daa
xchg
ins
mov
and
ror
or
sub
mov
sahf
xlat
call
jb
aaa
push
push
stos
scas
ins
popf
ss
js
sub
ja
ret
or
test
iret
push
ds
sbb
mov
mov
jge
loopne
jle
pop
adc
repz
in
mov
lods
ja
mov
jb
jg
cmps
xchg
push
movs
test
lods
into
or
mov
xor
mov
das
and
cmp
loop
jecxz
push
lock
dec
push
mov
adc
test
push
xchg
jbe
clc
lock
or
mov
jb
cmp
fidivr
fild
push
mov
stc
push
mov
fisttp
dec
pop
add
jecxz
xchg
push
sbb
repnz
xchg
mov
(bad)
jge
fwait
cli
sub
aad
inc
sete
pop
mov
int3
sbb
mov
or
fcmovb
mov
mov
popf
ret
jne
call
inc
pop
xor
test
cli
out
mov
mov
adc
pop
cmp
nop
xor
not
sbb
shr
fsub
sub
in
mov
or
cdq
imul
push
imul
xor
mov
and
in
or
test
jno
push
ret
and
cdq
jnp
mov
sub
xchg
cmp
mov
(bad)
mov
out
fidiv
hlt
or
popa
inc
add
xchg
mov
in
push
in
xor
mov
(bad)
jne
add
in
inc
sti
xchg
xchg
retf
idiv
xor
jecxz
shl
sub
iret
xor
jle
add
(bad)
add
stc
mov
cmps
movs
pop
jne
bound
sub
arpl
mov
inc
(bad)
xchg
test
dec
push
and
(bad)
xchg
cld
ja
iret
cmp
jne
fs
ins
enter
cmp
jecxz
lods
xchg
arpl
fsubr
in
add
mov
clc
loopne
jo
lea
enter
ret
or
(bad)
in
ret
mov
sbb
push
icebp
jbe
fdiv
jnp
mov
add
xchg
ret
inc
das
mov
lock
dec
fstp
shl
fcom
(bad)
push
jbe
xchg
xor
inc
movs
mov
imul
mov
jo
data16
pop
fisttp
(bad)
adc
loopne
and
clc
shr
leave
add
sub
gs
xchg
pop
jns
xchg
sbb
pop
or
pop
inc
mov
shl
jo
movaps
test
xchg
dec
jp
test
test
in
dec
push
mov
test
ja
xchg
leave
push
xlat
mov
in
jno
cmc
xlat
mov
stos
outs
in
ins
repnz
mov
jmp
jnp
jno
sub
mov
jmp
fdivr
adc
jb
sub
ins
xor
ins
mov
add
cld
and
adc
call
push
popa
and
pop
adc
or
jne
gs
xor
cli
and
mov
lahf
shr
xchg
sti
stc
inc
iret
es
iret
push
or
and
retf
in
in
inc
sub
sbb
aad
test
out
mov
fsubr
fld
mov
inc
loop
in
or
imul
mov
sahf
adc
jmp
inc
cmc
and
inc
mov
ja
push
enter
mov
dec
adc
cmc
mov
mov
push
(bad)
adc
cmc
popa
cmp
push
aaa
out
push
mov
adc
cmp
ror
pushf
outs
cmc
fucomip
js
movs
fisub
xchg
fsubr
bound
ss
addr16
pusha
dec
mov
sub
(bad)
sub
push
jp
pop
ja
add
and
hlt
push
test
jno
mov
pusha
pusha
inc
and
cld
imul
and
daa
lods
mov
jb
and
in
retf
adc
je
in
inc
pop
fiadd
dec
cld
bound
(bad)
cmp
dec
push
push
std
or
lahf
or
jns
jmp
ins
xchg
mov
lahf
mov
test
inc
jl
jbe
cwde
sbb
pusha
sub
(bad)
addr16
or
jmp
pusha
jp
iret
ins
lods
inc
inc
xchg
rdpmc
retf
sbb
cmp
inc
and
scas
lods
push
inc
es
ss
xor
out
in
mov
call
sbb
sbb
adc
push
clc
int3
inc
jnp
stos
mov
popf
fmul
pop
pop
cmp
ss
jne
std
cwde
cdq
dec
sub
loopne
or
push
enter
scas
xor
or
push
dec
int3
cli
je
retf
xchg
xlat
mov
loop
add
adc
or
test
jge
(bad)
mov
and
ins
mov
jmp
fiadd
outs
daa
imul
je
jns
jge
fstp
jge
nop
outs
xor
loop
stc
mov
mov
inc
and
mov
xor
add
xor
xchg
repz
pop
or
sti
push
jmp
mov
movs
pop
inc
xor
fcomip
leave
inc
(bad)
pop
push
fcomi
js
inc
icebp
mov
ins
jecxz
pop
xchg
ficomp
xchg
sahf
cmp
mov
mov
popf
adc
les
adc
repz
lods
xor
lds
je
jb
outs
pop
popa
(bad)
mov
shl
cmc
dec
inc
neg
cwde
xor
ret
pop
cmp
loopne
cmp
shr
inc
mul
mov
jne
cli
loopne
aam
lds
sub
test
mov
cld
add
mov
push
push
cmc
push
jnp
sti
popa
and
div
sbb
adc
push
repz
xchg
jcxz
out
test
add
xchg
clc
popf
loope
nop
ins
das
int3
aam
jl
retf
xor
lahf
adc
or
dec
jp
mov
xor
pop
push
and
add
xchg
push
dec
or
jmp
arpl
xchg
sub
shl
xor
leave
adc
std
jp
adc
mov
adc
test
sti
fstp
push
pop
inc
mov
loop
or
daa
inc
and
bound
in
xchg
pop
pop
push
(bad)
popf
stc
sub
add
cli
mov
mov
(bad)
pop
jl
xchg
pushf
mov
ret
sti
sbb
movs
adc
push
dec
popf
inc
ins
xchg
jae
push
jge
xor
xchg
xchg
fnstcw
mov
lea
fadd
push
xchg
jmp
jno
fwait
stos
mov
push
xor
nop
inc
aad
and
or
xor
and
push
inc
lahf
jle
scas
push
cmps
sub
sub
xchg
cs
sar
in
aaa
repnz
jbe
adc
inc
jno
jbe
cs
call
mov
pusha
push
dec
add
jb
repz
js
movs
adc
cmp
movs
ins
icebp
push
cld
test
loopne
xlat
addr16
(bad)
fistp
scas
dec
ss
cmp
xchg
jns
mov
popa
pop
fisubr
call
adc
out
mov
adc
jle
jae
xchg
pop
mov
cli
ds
adc
loope
nop
mov
cmp
or
aad
push
cmp
sbb
ret
icebp
data16
in
pop
inc
adc
xor
sub
call
(bad)
xchg
cmp
pop
sub
movs
test
push
dec
ror
pop
pop
cmp
mov
rcr
pop
fimul
in
xchg
cmp
fiadd
xchg
lods
in
and
jmp
sub
lds
movs
inc
mov
jl
into
mov
fwait
test
mov
inc
mov
ret
or
pop
hlt
mov
rcr
or
test
mov
or
imul
jmp
es
sub
out
and
xchg
or
data16
clc
imul
push
ja
cmc
js
push
lock
jae
(bad)
and
retf
scas
or
fsubrp
jp
push
push
xchg
adc
cdq
mov
inc
lods
dec
jmp
mov
das
mov
outs
cmp
test
mov
(bad)
ins
jge
xchg
adc
adc
mov
cmp
push
shl
fldcw
push
jg
ret
int
mov
outs
ja
call
add
or
call
fisttp
sahf
sbb
dec
or
adc
dec
inc
daa
pop
adc
mov
sbb
jp
mov
retf
outs
push
adc
aad
mov
jns
jg
xor
icebp
int
cmp
pop
ficomp
ja
inc
jle
sub
cmps
ret
push
sti
aam
in
pushf
xchg
inc
test
pop
mov
in
loope
pop
std
retf
icebp
adc
outs
cmps
loope
or
aas
and
sbb
push
rol
pop
sub
mov
icebp
shl
repnz
dec
inc
dec
es
lahf
sbb
xchg
cld
aam
aad
repz
pop
mov
push
mov
inc
int
out
inc
sahf
jns
xchg
or
ins
mov
sub
lock
sbb
or
cmc
sahf
(bad)
nop
enter
pop
das
sbb
dec
call
shl
adc
pop
pop
mov
aam
cli
sbb
or
add
mov
push
scas
push
ja
pop
imul
mov
(bad)
mov
test
add
cwde
or
lock
mov
cmp
xor
(bad)
stos
out
and
rol
inc
mov
and
cdq
pop
jo
repz
or
mov
mov
aaa
aam
jns
sub
xchg
sub
fnstsw
sahf
add
hlt
jl
sub
(bad)
xchg
dec
test
outs
jp
xor
xchg
and
pop
inc
fstp
mov
arpl
push
popa
fsubr
sub
or
cmp
xchg
cli
pop
out
leave
inc
mov
arpl
scas
(bad)
dec
mov
lods
ss
leave
mov
cld
mov
mov
push
mov
jmp
jmp
dec
mov
push
xchg
(bad)
das
sar
aaa
mov
mov
mov
(bad)
jmp
popf
mov
(bad)
mov
xchg
cmp
xor
or
addr16
sub
inc
pusha
cmc
add
jmp
aas
push
fnstsw
mov
lods
faddp
jmp
push
xchg
or
jbe
ins
dec
scas
sub
jae
out
loop
fcom
xchg
xchg
in
pop
(bad)
mov
rol
cmp
fadd
test
ja
mov
mov
sbb
add
cmps
test
push
cmp
(bad)
cmp
and
mov
movs
ror
into
and
inc
(bad)
cmovle
jnp
nop
(bad)
sbb
sbb
adc
jmp
jbe
gs
iret
sbb
movs
repz
mov
and
lods
push
mov
cmps
out
shr
pop
bnd
retf
test
mov
jmp
xor
or
rol
mov
prefetch
sbb
rcl
ror
popf
out
lock
pop
jae
imul
std
lods
push
mov
loop
pop
ds
mov
jl
and
add
push
sar
mov
dec
sub
mov
(bad)
loope
int3
jns
xlat
iret
jno
jne
add
push
test
mov
jno
jb
push
and
xor
ret
jns
sar
xchg
push
test
pop
bound
sahf
ret
je
adc
(bad)
das
call
ret
dec
add
ja
pop
gs
icebp
(bad)
retf
jmp
lods
jae
pop
xor
xchg
fst
mov
lds
fs
jl
push
(bad)
xchg
mov
ins
sub
arpl
les
inc
ds
add
and
pop
lods
and
mov
std
push
(bad)
sbb
inc
dec
sub
fidivr
aaa
push
mov
(bad)
or
fs
stos
mov
or
stos
iret
shl
inc
pop
jno
pusha
sbb
mov
lds
and
mov
outs
lds
xor
jno
or
in
popf
outs
xchg
jb
test
and
bound
mov
ror
(bad)
mov
test
dec
adc
push
xor
cmp
cwde
dec
ds
sub
shl
xchg
ficom
mov
ret
maskmovq
mul
lea
ins
call
ret
pminub
pop
por
jae
adc
adc
mov
mov
lahf
jecxz
xchg
pop
popf
lds
and
mov
or
jmp
ins
or
popf
cmps
adc
and
ja
sbb
xchg
jg
xchg
or
inc
push
cmps
(bad)
jns
push
rcl
push
mov
add
movs
adc
mov
mov
sbb
js
inc
jmp
ins
call
mov
pop
pop
into
adc
adc
out
add
repnz
mov
cwde
adc
movs
cdq
add
shl
shr
fcom
sub
and
rcr
loope
enter
gs
mov
xchg
xchg
pop
in
sbb
std
push
pop
push
shl
popf
fs
pop
dec
or
fadd
ins
data16
in
mov
lds
mov
loopne
rol
jmp
inc
add
and
fiadd
sbb
mov
popf
ror
jge
rcl
push
out
sbb
sar
xchg
mov
push
mov
in
packsswb
add
jge
mov
mov
sbb
lea
mov
dec
fdivr
addr16
nop
inc
mov
and
aaa
loopne
push
add
jno
or
test
or
loope
test
sahf
inc
lods
sbb
push
ja
pop
push
pop
mov
ins
aam
sbb
mov
mov
add
sbb
out
sbb
push
push
mov
mov
sbb
and
and
ds
cmp
test
push
xchg
jae
pop
or
xchg
loop
(bad)
es
jl
pushw
xchg
daa
sahf
dec
icebp
shl
out
ins
mov
and
sub
jp
call
popa
(bad)
rol
cmp
arpl
retf
leave
cmps
pop
mov
mov
inc
push
ds
je
jle
fst
mov
jno
fsubr
(bad)
sub
or
ret
mov
mov
sahf
enter
int
aam
aas
ret
xlat
cmp
or
or
jae
mov
push
mov
cmp
vpsubsb
stos
jbe
cmps
(bad)
lods
pop
cwde
push
iret
dec
std
xor
jg
stos
es
cmc
inc
lock
ins
outs
repz
xor
jmp
fstp
cmp
adc
mov
push
mov
or
sub
lods
add
xchg
xor
dec
mov
sti
inc
and
rcr
pop
lods
imul
cmp
pop
and
stos
mov
cmp
pop
scas
loopne
aas
(bad)
rcl
mov
pusha
xchg
out
xor
int
stos
mov
ja
sbb
inc
inc
fsub
and
mov
call
das
inc
test
pop
mov
std
daa
(bad)
mov
ret
lea
retf
outs
cmp
and
sbb
sbb
ret
in
pop
sbb
xchg
repnz
and
sbb
cmps
push
lods
out
add
mov
sahf
inc
dec
sub
dec
imul
pop
inc
ret
hlt
mov
inc
repnz
enter
ja
mul
xchg
or
stos
sub
cmp
int3
jbe
mov
div
popa
push
push
mov
push
(bad)
mov
outs
in
pop
in
jmp
mov
xchg
popa
adc
stc
dec
clc
sbb
dec
jmp
pop
adc
fsubp
push
jae
and
mov
neg
mov
mov
mov
scas
adc
push
mov
std
adc
imul
cmp
sub
call
jmp
loopne
lods
cmc
test
inc
cmc
nop
test
dec
jl
add
imul
into
js
ffree
jecxz
mov
test
jbe
push
sub
cs
ret
cli
sti
inc
ret
nop
xchg
rol
repz
lods
(bad)
cmc
or
ret
xchg
mov
and
mov
xchg
(bad)
add
jle
shl
inc
mov
dec
mov
call
add
pop
xchg
add
imul
jle
push
movs
push
mov
xor
imul
jnp
push
(bad)
sub
loopne
push
push
pop
cmps
sahf
sub
cli
xlat
lea
jg
dec
cli
xchg
mov
sub
xlat
pushf
mov
sahf
inc
inc
xlat
mov
push
ret
xchg
push
aam
add
or
adc
lock
jb
adc
mov
mov
xchg
(bad)
cmc
sbb
xor
imul
or
ins
leave
fsub
mov
sbb
out
xor
dec
xchg
xchg
dec
(bad)
mov
cmps
dec
push
rcl
(bad)
hlt
in
jmp
add
and
mov
mov
mov
out
inc
fst
dec
sub
(bad)
xor
ror
fcom
in
cld
cmp
cmp
jp
add
xchg
inc
into
lds
mov
mov
jmp
in
lea
popa
popa
push
adc
sbb
leave
inc
adc
push
sub
mov
push
dec
jle
jle
mov
fwait
dec
xor
mov
lds
je
in
mov
push
(bad)
fisub
stos
loopne
adc
pusha
gs
data16
and
pushf
adc
adc
dec
movs
popa
dec
(bad)
nop
push
cld
inc
mov
cmc
push
movs
pop
sub
sbb
or
das
push
fld
sub
jae
mov
fistp
imul
ret
scas
(bad)
test
shl
dec
xor
adc
bound
xor
xchg
rcr
sub
adc
inc
fbld
inc
xor
mov
outs
scas
jge
jg
adc
inc
loop
jb
jae
rcr
mov
fcmovne
iret
or
scas
les
das
jb
cmp
jmp
loopne
arpl
or
pop
(bad)
repnz
sub
dec
addr16
repz
dec
and
mov
cmp
mov
sub
js
sbb
(bad)
jb
ins
xchg
and
fst
pop
sbb
aas
in
daa
pop
xor
pop
dec
mov
sbb
and
fld
xchg
jnp
mov
sbb
into
or
or
sub
clc
scas
jl
pop
sbb
or
enter
in
push
cmp
pusha
clc
es
xchg
mov
inc
jb
push
xor
sub
and
leave
js
mov
sub
push
dec
or
repz
mov
sub
and
xor
mov
push
jno
inc
cs
test
test
pop
pop
mov
pop
test
inc
pushf
inc
push
movs
push
xchg
push
xchg
dec
xor
sbb
dec
jle
fdivp
ret
adc
inc
sub
pop
jae
jae
xor
nop
pop
jo
adc
ret
fwait
pop
out
jno
mov
cli
repnz
jo
add
(bad)
das
mov
dec
mov
mov
jp
call
sahf
cmps
jns
push
cmp
xor
adc
aas
pop
loop
jno
fisub
test
sub
leave
mov
retf
sar
movs
aad
mov
cli
cdq
mov
int3
sub
jecxz
stos
mov
inc
add
imul
std
cwde
mov
mov
or
ror
cwde
lods
popf
rol
inc
pop
fst
aaa
jge
xchg
in
xchg
mov
sub
ss
stos
sub
add
and
(bad)
mov
nop
leave
(bad)
ins
add
pusha
leave
add
das
lahf
xchg
push
dec
mov
loope
aas
sub
icebp
ret
add
arpl
jbe
lods
inc
dec
sti
test
mov
mov
or
mov
cmp
ret
mov
outs
rcr
iret
xchg
adc
dec
stos
loop
xlat
xchg
jle
rcr
bound
lea
fyl2xp1
ret
pop
lds
mov
jl
cmps
push
cld
add
xchg
lea
push
push
or
call
cmp
push
xor
push
hlt
add
push
fisub
cld
jmp
int3
jbe
ds
jmp
add
in
jnp
jge
mov
pop
test
fbstp
mov
xor
xor
aam
inc
push
cwde
je
mov
add
cmp
in
sbb
(bad)
xor
push
(bad)
adc
push
(bad)
push
mov
xor
lods
adc
scas
inc
ret
xchg
cmc
popa
data16
dec
stc
outs
sbb
cmp
pusha
sbb
cmps
repz
ror
xor
arpl
fwait
les
les
mov
jb
add
stc
sub
inc
or
push
(bad)
aad
jg
test
push
aad
inc
push
test
xchg
mov
add
and
xor
adc
dec
(bad)
inc
fild
(bad)
push
push
inc
out
mov
call
cs
sbb
movs
imul
addr16
scas
or
xor
fstp
dec
dec
sub
sub
adc
shr
mov
xor
dec
cdq
rcl
jno
into
push
aam
and
mov
aam
mov
test
mov
mov
sahf
xchg
call
dec
js
jae
icebp
stos
or
hlt
ins
retf
stc
lods
(bad)
push
add
fcomp
jae
mov
inc
jmp
xor
std
jg
jmp
cmp
les
test
not
mov
gs
data16
mov
ins
je
adc
adc
(bad)
addr16
aaa
xchg
sub
jmp
pop
out
push
push
push
xchg
push
pop
jle
(bad)
pop
popf
imul
and
test
cmp
(bad)
jmp
retf
enter
lods
aam
jmp
retf
dec
pop
xor
in
cmp
aad
pop
pushf
sbb
fldcw
mov
inc
in
pop
mov
mov
add
pop
dec
pushf
call
mov
aad
lahf
mov
in
iret
std
(bad)
retf
retf
mov
adc
or
sub
lea
(bad)
out
jne
loopne
pop
sbb
and
xchg
outs
pop
adc
jnp
fwait
(bad)
sti
sar
mov
mov
jmp
xor
cld
div
aaa
jne
adc
stos
mov
pop
push
mov
(bad)
inc
std
jb
js
out
mov
cmc
cs
or
jmp
add
mov
pop
rol
cmp
cs
sub
(bad)
mov
pushf
shl
clc
adc
or
add
mov
cdq
inc
sub
pusha
in
or
add
retf
pop
retf
pop
popa
popf
jbe
int3
out
sbb
sbb
xchg
pop
int
xor
sub
cwde
sbb
(bad)
mov
mov
aad
fbld
adc
xchg
mov
cs
jnp
stos
sbb
push
stos
lds
ret
sbb
shr
xor
aad
(bad)
das
sub
stos
sub
ins
cwde
add
movs
mov
and
int
push
cmc
jne
or
sub
cmp
mov
push
pop
sbb
xor
in
dec
mov
and
(bad)
sub
push
sub
loope
mov
cmps
rol
daa
pop
xlat
jp
aam
pop
retf
sub
push
or
and
sub
push
out
sar
mov
cmp
pop
xor
mov
in
scas
cdq
fldcw
xor
outs
leave
jmp
retf
xchg
xchg
push
(bad)
repnz
add
arpl
stos
push
arpl
mov
data16
div
cmp
jg
or
xchg
retf
std
dec
lock
push
fadd
pop
mov
dec
cmp
call
stc
(bad)
ficom
mov
xchg
sbb
ret
leave
daa
adc
loopne
cmp
adc
jbe
ds
push
(bad)
jbe
adc
push
xor
int3
add
sbb
inc
enter
dec
sbb
inc
and
imul
mov
enter
xor
pushf
pop
in
stos
mov
push
add
jb
inc
out
test
std
fidiv
lods
into
(bad)
hlt
dec
pop
les
dec
pop
mov
popf
out
outs
stos
dec
sub
xchg
std
rcr
mov
mov
sar
dec
cmc
into
cmp
stos
push
mov
rol
pop
fst
mov
sub
rcr
jne
and
in
ins
mov
daa
push
or
ins
fchs
add
sar
push
inc
dec
cld
push
ds
and
sub
imul
adc
or
xlat
jmp
pushf
pop
add
lods
sub
out
jmp
jge
lods
in
iret
ja
mov
les
push
cmp
adc
repz
mov
mov
es
xchg
mov
mov
mov
repnz
outs
pop
sti
mov
xchg
test
jne
iret
pop
hlt
add
cwde
popa
aas
dec
and
int
push
addr16
pop
adc
xor
movs
mov
xchg
pop
mov
sub
mov
jbe
fisttp
xchg
stos
test
push
mov
inc
lahf
test
jge
setae
add
cmp
xchg
sub
stos
push
stos
mov
nop
addr16
call
cmps
pushf
loop
jmp
pop
push
dec
pusha
and
sub
dec
lahf
aaa
retf
aad
out
inc
out
cdq
fcmovnb
outs
dec
cwde
lahf
ret
je
cmp
adc
cmp
inc
popf
pop
sub
(bad)
(bad)
outs
lahf
sub
movs
stc
neg
mov
cmp
jnp
inc
jno
sbb
iret
jae
dec
imul
in
fadd
inc
jecxz
inc
fcom
leave
mov
lods
adc
outs
shr
out
pop
mov
int3
aam
xchg
dec
xchg
cwde
lods
loope
popf
jge
lock
js
add
in
shr
add
fidivr
test
inc
push
mov
mov
mov
ret
pop
mov
adc
in
std
fcmovbe
(bad)
mov
clc
push
or
xchg
(bad)
sti
(bad)
jmp
pop
push
and
imul
or
jo
setns
in
and
mov
mov
lods
lods
ret
push
icebp
pop
pop
dec
adc
addr16
std
int
stos
pop
add
ds
xor
idiv
sahf
mov
xchg
clc
call
pop
movs
iret
mov
mov
ins
and
stos
lods
daa
and
dec
aaa
push
jne
cs
push
loopne
mov
jmp
ins
jns
cdq
daa
ds
leave
pop
shl
mov
aaa
popa
stc
mov
cs
sub
cmp
fsubr
mov
fdivr
push
ror
nop
dec
lds
xchg
cmp
rol
movs
adc
pop
ret
inc
xlat
sbb
rcr
out
mov
xor
jnp
mov
not
inc
xor
xlat
addr16
push
mov
jnp
cdq
xor
mov
add
int3
(bad)
cmp
cmp
in
push
adc
xchg
mov
sti
push
jo
daa
out
mov
pop
aam
pop
cmp
xor
pop
pop
pop
pop
mov
(bad)
mov
stos
ds
mov
popa
xchg
cmps
or
out
pop
cmp
nop
or
mov
sbb
jp
ds
mov
sbb
push
sahf
aaa
mov
cmp
dec
or
or
push
cdq
fiadd
mov
leave
mul
add
and
addr16
cli
outs
ja
jno
ins
sub
dec
cmp
sbb
lahf
xor
sub
xchg
sahf
ja
push
cmp
test
(bad)
xor
push
push
adc
or
add
jp
ins
arpl
call
push
jo
pop
inc
dec
mov
add
inc
(bad)
(bad)
repnz
dec
not
or
out
shr
push
or
sub
dec
jnp
sub
dec
inc
je
push
